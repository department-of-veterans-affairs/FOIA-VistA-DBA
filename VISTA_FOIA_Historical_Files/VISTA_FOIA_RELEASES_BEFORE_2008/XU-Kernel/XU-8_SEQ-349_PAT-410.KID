Released XU*8*410 SEQ #349
Extracted from mail message
**KIDS**:XU*8.0*410^

**INSTALL NAME**
XU*8.0*410
"BLD",928,0)
XU*8.0*410^KERNEL^0^3060914^y
"BLD",928,1,0)
^^2^2^3060914^^^^
"BLD",928,1,1,0)
Kernel Patch XU*8.0*410 APIs' NPI.  
"BLD",928,1,2,0)
Please refer to the Description in Forum Patch Module for details.
"BLD",928,4,0)
^9.64PA^200^3
"BLD",928,4,4,0)
4
"BLD",928,4,4,2,0)
^9.641^4.042^4
"BLD",928,4,4,2,4,0)
INSTITUTION  (File-top level)
"BLD",928,4,4,2,4,1,0)
^9.6411^41.99^1
"BLD",928,4,4,2,4,1,41.99,0)
NPI
"BLD",928,4,4,2,4.042,0)
EFFECTIVE DATE/TIME  (sub-file)
"BLD",928,4,4,2,4.042,1,0)
^9.6411^.03^1
"BLD",928,4,4,2,4.042,1,.03,0)
NPI
"BLD",928,4,4,2,4.043,0)
TAXONOMY CODE  (sub-file)
"BLD",928,4,4,2,4.043,1,0)
^9.6411^^
"BLD",928,4,4,2,4.9999,0)
IDENTIFIER  (sub-file)
"BLD",928,4,4,2,4.9999,1,0)
^9.6411^.04^2
"BLD",928,4,4,2,4.9999,1,.03,0)
EFFECTIVE DATE/TIME
"BLD",928,4,4,2,4.9999,1,.04,0)
STATUS
"BLD",928,4,4,222)
y^y^p^^^^n^^n
"BLD",928,4,4,224)

"BLD",928,4,200,0)
200
"BLD",928,4,200,2,0)
^9.641^200.042^2
"BLD",928,4,200,2,200,0)
NEW PERSON  (File-top level)
"BLD",928,4,200,2,200,1,0)
^9.6411^41.99^1
"BLD",928,4,200,2,200,1,41.99,0)
NPI
"BLD",928,4,200,2,200.042,0)
EFFECTIVE DATE/TIME  (sub-file)
"BLD",928,4,200,2,200.042,1,0)
^9.6411^.03^1
"BLD",928,4,200,2,200.042,1,.03,0)
NPI
"BLD",928,4,200,222)
y^y^p^^^^n^^n
"BLD",928,4,200,224)

"BLD",928,4,8932.1,0)
8932.1
"BLD",928,4,8932.1,222)
y^y^f^^^^n^^n
"BLD",928,4,8932.1,224)

"BLD",928,4,"APDD",4,4)

"BLD",928,4,"APDD",4,4,41.99)

"BLD",928,4,"APDD",4,4.042)

"BLD",928,4,"APDD",4,4.042,.03)

"BLD",928,4,"APDD",4,4.043)

"BLD",928,4,"APDD",4,4.9999)

"BLD",928,4,"APDD",4,4.9999,.03)

"BLD",928,4,"APDD",4,4.9999,.04)

"BLD",928,4,"APDD",200,200)

"BLD",928,4,"APDD",200,200,41.99)

"BLD",928,4,"APDD",200,200.042)

"BLD",928,4,"APDD",200,200.042,.03)

"BLD",928,4,"B",4,4)

"BLD",928,4,"B",200,200)

"BLD",928,4,"B",8932.1,8932.1)

"BLD",928,6.3)
27
"BLD",928,"ABPKG")
n
"BLD",928,"INID")
^y
"BLD",928,"INIT")
POST^XU8P410
"BLD",928,"KRN",0)
^9.67PA^8989.52^19
"BLD",928,"KRN",.4,0)
.4
"BLD",928,"KRN",.401,0)
.401
"BLD",928,"KRN",.402,0)
.402
"BLD",928,"KRN",.402,"NM",0)
^9.68A^^0
"BLD",928,"KRN",.403,0)
.403
"BLD",928,"KRN",.5,0)
.5
"BLD",928,"KRN",.84,0)
.84
"BLD",928,"KRN",3.6,0)
3.6
"BLD",928,"KRN",3.8,0)
3.8
"BLD",928,"KRN",9.2,0)
9.2
"BLD",928,"KRN",9.8,0)
9.8
"BLD",928,"KRN",9.8,"NM",0)
^9.68A^9^7
"BLD",928,"KRN",9.8,"NM",1,0)
XUSNPI^^0^B55759384
"BLD",928,"KRN",9.8,"NM",2,0)
XUSTAX^^0^B7294998
"BLD",928,"KRN",9.8,"NM",5,0)
XUSNPIED^^0^B22186958
"BLD",928,"KRN",9.8,"NM",6,0)
XUSNPIE1^^0^B70700540
"BLD",928,"KRN",9.8,"NM",7,0)
XUSNPIE2^^0^B60490192
"BLD",928,"KRN",9.8,"NM",8,0)
XU8P410^^0^B2965517
"BLD",928,"KRN",9.8,"NM",9,0)
XUSNPIDA^^0^B45442635
"BLD",928,"KRN",9.8,"NM","B","XU8P410",8)

"BLD",928,"KRN",9.8,"NM","B","XUSNPI",1)

"BLD",928,"KRN",9.8,"NM","B","XUSNPIDA",9)

"BLD",928,"KRN",9.8,"NM","B","XUSNPIE1",6)

"BLD",928,"KRN",9.8,"NM","B","XUSNPIE2",7)

"BLD",928,"KRN",9.8,"NM","B","XUSNPIED",5)

"BLD",928,"KRN",9.8,"NM","B","XUSTAX",2)

"BLD",928,"KRN",19,0)
19
"BLD",928,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",928,"KRN",19,"NM",1,0)
XUS NPI ENTER NPI FOR PROVIDER^^0
"BLD",928,"KRN",19,"NM","B","XUS NPI ENTER NPI FOR PROVIDER",1)

"BLD",928,"KRN",19.1,0)
19.1
"BLD",928,"KRN",19.1,"NM",0)
^9.68A^^0
"BLD",928,"KRN",101,0)
101
"BLD",928,"KRN",409.61,0)
409.61
"BLD",928,"KRN",771,0)
771
"BLD",928,"KRN",870,0)
870
"BLD",928,"KRN",8989.51,0)
8989.51
"BLD",928,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",928,"KRN",8989.52,0)
8989.52
"BLD",928,"KRN",8994,0)
8994
"BLD",928,"KRN","B",.4,.4)

"BLD",928,"KRN","B",.401,.401)

"BLD",928,"KRN","B",.402,.402)

"BLD",928,"KRN","B",.403,.403)

"BLD",928,"KRN","B",.5,.5)

"BLD",928,"KRN","B",.84,.84)

"BLD",928,"KRN","B",3.6,3.6)

"BLD",928,"KRN","B",3.8,3.8)

"BLD",928,"KRN","B",9.2,9.2)

"BLD",928,"KRN","B",9.8,9.8)

"BLD",928,"KRN","B",19,19)

"BLD",928,"KRN","B",19.1,19.1)

"BLD",928,"KRN","B",101,101)

"BLD",928,"KRN","B",409.61,409.61)

"BLD",928,"KRN","B",771,771)

"BLD",928,"KRN","B",870,870)

"BLD",928,"KRN","B",8989.51,8989.51)

"BLD",928,"KRN","B",8989.52,8989.52)

"BLD",928,"KRN","B",8994,8994)

"BLD",928,"QUES",0)
^9.62^^
"BLD",928,"REQB",0)
^9.611^1^1
"BLD",928,"REQB",1,0)
XU*8.0*420^1
"BLD",928,"REQB","B","XU*8.0*420",1)

"FIA",4)
INSTITUTION
"FIA",4,0)
^DIC(4,
"FIA",4,0,0)
4I
"FIA",4,0,1)
y^y^p^^^^n^^n
"FIA",4,0,10)

"FIA",4,0,11)

"FIA",4,0,"RLRO")

"FIA",4,0,"VR")
8.0^XU
"FIA",4,4)
1
"FIA",4,4,41.99)

"FIA",4,4,43)

"FIA",4,4.042)
1
"FIA",4,4.042,.03)

"FIA",4,4.043)
0
"FIA",4,4.9999)
1
"FIA",4,4.9999,.03)

"FIA",4,4.9999,.04)

"FIA",200)
NEW PERSON
"FIA",200,0)
^VA(200,
"FIA",200,0,0)
200I
"FIA",200,0,1)
y^y^p^^^^n^^n
"FIA",200,0,10)

"FIA",200,0,11)

"FIA",200,0,"RLRO")

"FIA",200,0,"VR")
8.0^XU
"FIA",200,200)
1
"FIA",200,200,41.99)

"FIA",200,200.042)
1
"FIA",200,200.042,.03)

"FIA",8932.1)
PERSON CLASS
"FIA",8932.1,0)
^USC(8932.1,
"FIA",8932.1,0,0)
8932.1OIs
"FIA",8932.1,0,1)
y^y^f^^^^n^^n
"FIA",8932.1,0,10)

"FIA",8932.1,0,11)

"FIA",8932.1,0,"RLRO")

"FIA",8932.1,0,"VR")
8.0^XU
"FIA",8932.1,8932.1)
0
"FIA",8932.1,8932.111)
0
"INIT")
POST^XU8P410
"IX",4,4,"NPI42",0)
4^NPI42^NPI42 X-REF^R^^F^IR^W^4.042^^^^^LS
"IX",4,4,"NPI42",1)
S ^DIC(4,"NPI42",$E(X,1,10),DA(1),DA)=""
"IX",4,4,"NPI42",2)
K ^DIC(4,"NPI42",$E(X,1,10),DA(1),DA)
"IX",4,4,"NPI42",2.5)
K ^DIC(4,"NPI42")
"IX",4,4,"NPI42",11.1,0)
^.114IA^1^1
"IX",4,4,"NPI42",11.1,1,0)
1^F^4.042^.03^10^1^F
"IX",4,4,"NPI42",11.1,1,3)

"IX",4,4,"TAXSTATUS",0)
4^TAXSTATUS^NEW X-REF^R^^F^IR^W^4.043^^^^^LS
"IX",4,4,"TAXSTATUS",1)
S ^DIC(4,"TAXSTATUS",$E(X,1,30),DA(1),DA)=""
"IX",4,4,"TAXSTATUS",2)
K ^DIC(4,"TAXSTATUS",$E(X,1,30),DA(1),DA)
"IX",4,4,"TAXSTATUS",2.5)
K ^DIC(4,"TAXSTATUS")
"IX",4,4,"TAXSTATUS",11.1,0)
^.114IA^1^1
"IX",4,4,"TAXSTATUS",11.1,1,0)
1^F^4.043^.03^30^1^F
"IX",4,4,"TAXSTATUS",11.1,1,3)

"IX",4,4,"XUMFAL",0)
4^XUMFAL^New x-ref^R^^R^IR^W^4.9999^^^^^LS
"IX",4,4,"XUMFAL",1)
S ^DIC(4,"XUMFAL",$E(X(1),1,30),$E(X(2),1,30),$E(X(3),1,30),$E(X(4),1,1),DA(1),DA)=""
"IX",4,4,"XUMFAL",2)
K ^DIC(4,"XUMFAL",$E(X(1),1,30),$E(X(2),1,30),$E(X(3),1,30),$E(X(4),1,1),DA(1),DA)
"IX",4,4,"XUMFAL",2.5)
K ^DIC(4,"XUMFAL")
"IX",4,4,"XUMFAL",11.1,0)
^.114IA^4^4
"IX",4,4,"XUMFAL",11.1,1,0)
1^F^4.9999^.01^30^1^F
"IX",4,4,"XUMFAL",11.1,1,3)

"IX",4,4,"XUMFAL",11.1,2,0)
2^F^4.9999^.02^30^2^F
"IX",4,4,"XUMFAL",11.1,2,3)

"IX",4,4,"XUMFAL",11.1,3,0)
3^F^4.9999^.03^30^3^F
"IX",4,4,"XUMFAL",11.1,3,3)

"IX",4,4,"XUMFAL",11.1,4,0)
4^F^4.9999^.04^1^4^F
"IX",4,4,"XUMFAL",11.1,4,3)

"IX",200,200,"NPI42",0)
200^NPI42^NPI42 X-REF^R^^F^IR^W^200.042^^^^^LS
"IX",200,200,"NPI42",1)
S ^VA(200,"NPI42",$E(X,1,10),DA(1),DA)=""
"IX",200,200,"NPI42",2)
K ^VA(200,"NPI42",$E(X,1,10),DA(1),DA)
"IX",200,200,"NPI42",2.5)
K ^VA(200,"NPI42")
"IX",200,200,"NPI42",11.1,0)
^.114IA^1^1
"IX",200,200,"NPI42",11.1,1,0)
1^F^200.042^.03^10^1^F
"KRN",19,1227,-1)
0^1
"KRN",19,1227,0)
XUS NPI ENTER NPI FOR PROVIDER^Add/Edit NPI values for Providers^^R^^^^^^^^KERNEL
"KRN",19,1227,1,0)
^19.06^2^2^3060730^^^
"KRN",19,1227,1,1,0)
This option is intended for support staff to be able to enter data 
"KRN",19,1227,1,2,0)
related to an NPI value for providers.
"KRN",19,1227,25)
CLEREDIT^XUSNPIED
"KRN",19,1227,"U")
ADD/EDIT NPI VALUES FOR PROVID
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3051215^2970507^.5
"PKG",3,22,1,"PAH",1,0)
410^3060914
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^3060914
"PKG",3,22,1,"PAH",1,1,1,0)
Kernel Patch XU*8.0*410 APIs' NPI.  
"PKG",3,22,1,"PAH",1,1,2,0)
Please refer to the Description in Forum Patch Module for details.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","XU8P410")
0^8^B2965517^n/a
"RTN","XU8P410",1,0)
XU8P410 ;OAK_BP/BDT - NATIONAL PROVIDER IDENTIFIER; 7/27/06 ;8/22/06  11:32
"RTN","XU8P410",2,0)
 ;;8.0;KERNEL;**410**; July 10, 1997;Build 27
"RTN","XU8P410",3,0)
 ;;
"RTN","XU8P410",4,0)
PRE ; run pre-routine
"RTN","XU8P410",5,0)
 K ERR
"RTN","XU8P410",6,0)
 Q
"RTN","XU8P410",7,0)
 ;
"RTN","XU8P410",8,0)
POST ; run post-routine
"RTN","XU8P410",9,0)
 D SPRM,RI4,RI200
"RTN","XU8P410",10,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","XU8P410",11,0)
 ; job off task to queue cbo list (can't do it in an install)
"RTN","XU8P410",12,0)
 K ^XTMP("NPIVALS")
"RTN","XU8P410",13,0)
 S ZTIO="",ZTDTH=$$NOW^XLFDT(),ZTRTN="CBOQUEUE^XUSNPIED",ZTDESC="XUS NPI CBOLIST QUEUEING" D ^%ZTLOAD
"RTN","XU8P410",14,0)
 Q
"RTN","XU8P410",15,0)
SPRM ; Delete a parameter
"RTN","XU8P410",16,0)
 N XUSPR,XUSPCK
"RTN","XU8P410",17,0)
 S XUSPCK=$O(^DIC(9.4,"B","KERNEL",0))
"RTN","XU8P410",18,0)
 I 'XUSPCK Q
"RTN","XU8P410",19,0)
 S XUSPCK=XUSPCK_";DIC(9.4,"
"RTN","XU8P410",20,0)
 D EN^XPAR(XUSPCK,"XUSNPI QUALIFIED IDENTIFIER","Pharmacy_ID","@",.ERR)
"RTN","XU8P410",21,0)
 Q
"RTN","XU8P410",22,0)
RI200 ; Re-index "NPI42" file #200
"RTN","XU8P410",23,0)
 N I S I=0
"RTN","XU8P410",24,0)
 F  S I=$O(^VA(200,I)) Q:I'>0  D
"RTN","XU8P410",25,0)
 . I $D(^VA(200,I,"NPISTATUS"))'>0 Q
"RTN","XU8P410",26,0)
 . N DIK,DA S DA(1)=I,DIK="^VA(200,DA(1),""NPISTATUS"",",DIK(1)=".03^NPI42" D ENALL2^DIK
"RTN","XU8P410",27,0)
 . N DIK,DA S DA(1)=I,DIK="^VA(200,DA(1),""NPISTATUS"",",DIK(1)=".03^NPI42" D ENALL^DIK
"RTN","XU8P410",28,0)
 Q
"RTN","XU8P410",29,0)
RI4 ; Re-index "NPI42" file #4
"RTN","XU8P410",30,0)
 N I S I=0
"RTN","XU8P410",31,0)
 F  S I=$O(^DIC(4,I)) Q:I'>0  D
"RTN","XU8P410",32,0)
 . I $D(^DIC(4,I,"NPISTATUS"))'>0 Q
"RTN","XU8P410",33,0)
 . N DIK,DA S DA(1)=I,DIK="^DIC(4,DA(1),""NPISTATUS"",",DIK(1)=".03^NPI42" D ENALL2^DIK
"RTN","XU8P410",34,0)
 . N DIK,DA S DA(1)=I,DIK="^DIC(4,DA(1),""NPISTATUS"",",DIK(1)=".03^NPI42" D ENALL^DIK
"RTN","XU8P410",35,0)
 Q
"RTN","XUSNPI")
0^1^B55759384^n/a
"RTN","XUSNPI",1,0)
XUSNPI ;OAK_BP/BDT - NATIONAL PROVIDER IDENTIFIER; 8/10/06
"RTN","XUSNPI",2,0)
 ;;8.0;KERNEL;**410**; July 10, 1997;Build 27
"RTN","XUSNPI",3,0)
 ;;
"RTN","XUSNPI",4,0)
ADDNPI(XUSQI,XUSIEN,XUSNPI,XUSDATE,XUSTATUS) ;
"RTN","XUSNPI",5,0)
 ;;==============================================================
"RTN","XUSNPI",6,0)
 ;; Update the Effective Date, Status & NPI trio.
"RTN","XUSNPI",7,0)
 ;; XUSQI   : Qualified Identifier, Required. For examble: Individual_ID Or Organization_ID
"RTN","XUSNPI",8,0)
 ;; XUSIEN  : Internal Entry Number. Required.
"RTN","XUSNPI",9,0)
 ;; XUSNPI  : National Provider Identifier. Required.
"RTN","XUSNPI",10,0)
 ;; XUSDATE : Active Date. Required.
"RTN","XUSNPI",11,0)
 ;; 
"RTN","XUSNPI",12,0)
 ;; If successful, return XUSRTN = IEN of new 42 sub-file entry.
"RTN","XUSNPI",13,0)
 ;; Else return XUSRTN = "-1^ErrorMessage".
"RTN","XUSNPI",14,0)
 ;; =============================================================
"RTN","XUSNPI",15,0)
 ;
"RTN","XUSNPI",16,0)
 ; Check valid inputs.
"RTN","XUSNPI",17,0)
 N XUSROOT,XUSFNB
"RTN","XUSNPI",18,0)
 S XUSROOT=$$GET^XPAR("PKG.KERNEL","XUSNPI QUALIFIED IDENTIFIER",XUSQI)
"RTN","XUSNPI",19,0)
 I $E(XUSROOT)'="^" S XUSROOT="^"_XUSROOT
"RTN","XUSNPI",20,0)
 I XUSROOT="^" Q "-1^Invalid Qualified Identifier"
"RTN","XUSNPI",21,0)
 I $$GLCK(XUSROOT)'>0 Q "-1^Invalid Qualified Identifier"
"RTN","XUSNPI",22,0)
 S XUSFNB=+$P(XUSROOT,"(",2)
"RTN","XUSNPI",23,0)
 I 'XUSFNB Q "-1^No File #"
"RTN","XUSNPI",24,0)
 S XUSFNB=XUSFNB_".42"
"RTN","XUSNPI",25,0)
 I $G(XUSIEN)'>0 Q "-1^Invalid IEN"
"RTN","XUSNPI",26,0)
 I (XUSIEN?.N)=0 Q "-1^Invalid IEN"
"RTN","XUSNPI",27,0)
 N XUIENCK S XUIENCK=XUSROOT_XUSIEN_","_0_")" I '$D(@XUIENCK) Q "-1^Invalid IEN"
"RTN","XUSNPI",28,0)
 I '$$CHKDGT(XUSNPI) Q "-1^Invalid NPI"
"RTN","XUSNPI",29,0)
 I '$$CHKDT(XUSQI,XUSIEN,XUSDATE) Q "-1^Invalid Effective Date"
"RTN","XUSNPI",30,0)
 I $G(XUSTATUS)="" S XUSTATUS=1
"RTN","XUSNPI",31,0)
 I (XUSTATUS'=0),(XUSTATUS'=1) Q "-1^Invalid Status"
"RTN","XUSNPI",32,0)
 N CHNPI S CHNPI=$$CHKDGT^XUSNPIE1(XUSNPI,XUSIEN,XUSQI) ; check if NPI is being used.
"RTN","XUSNPI",33,0)
 I CHNPI'=1 Q "-1^The NPI is being used."
"RTN","XUSNPI",34,0)
 ;
"RTN","XUSNPI",35,0)
 ;------------------------------------------------------------------
"RTN","XUSNPI",36,0)
 N ZZ,XUSRTN,ERRMSG,XUSX S ERRMSG=""
"RTN","XUSNPI",37,0)
 S XUSX=XUSROOT_XUSIEN_","_"""NPISTATUS"""_")"
"RTN","XUSNPI",38,0)
 ; Update Effective Date #42 multiple fields 
"RTN","XUSNPI",39,0)
 S XUSFNB=$P(XUSROOT,"(",2)
"RTN","XUSNPI",40,0)
 S XUSFNB=+$P(XUSFNB,",") I XUSFNB S XUSFNB=XUSFNB_".042"
"RTN","XUSNPI",41,0)
 S ZZ(1,XUSFNB,"+2,"_XUSIEN_",",.01)=XUSDATE
"RTN","XUSNPI",42,0)
 S ZZ(1,XUSFNB,"+2,"_XUSIEN_",",.02)=XUSTATUS
"RTN","XUSNPI",43,0)
 S ZZ(1,XUSFNB,"+2,"_XUSIEN_",",.03)=XUSNPI
"RTN","XUSNPI",44,0)
 D UPDATE^DIE("","ZZ(1)",,ERRMSG)
"RTN","XUSNPI",45,0)
 I $L(ERRMSG) Q "-1^"_$G(ERRMSG)
"RTN","XUSNPI",46,0)
 S XUSX=XUSROOT_XUSIEN_","_"""NPISTATUS"""_","_"""B"""_","_XUSDATE_","_"""A"""_")"
"RTN","XUSNPI",47,0)
 S XUSRTN=$O(@XUSX,-1)
"RTN","XUSNPI",48,0)
 I '+XUSRTN Q "-1^No entry add"
"RTN","XUSNPI",49,0)
 Q XUSRTN
"RTN","XUSNPI",50,0)
 ;
"RTN","XUSNPI",51,0)
NPI(XUSQI,XUSIEN,XUSDATE) ; Retrieve the NPI value for a qualified identifier entity.
"RTN","XUSNPI",52,0)
 ;;==============================================================
"RTN","XUSNPI",53,0)
 ;; XUSQI   : Qualified Identifier, Required. For examble: Individual_ID Or Organization_ID
"RTN","XUSNPI",54,0)
 ;; XUSIEN  : Internal Entry Number of file #4 or #200. Required.
"RTN","XUSNPI",55,0)
 ;; XUSDATE : Active Date. Not Required. Default: 'Today'.
"RTN","XUSNPI",56,0)
 ;; 
"RTN","XUSNPI",57,0)
 ;; If current NPI exists, return XUSRTN = 'NPI^EffectiveDate^Status'
"RTN","XUSNPI",58,0)
 ;; If invalid XUSQI or XUSIEN, return '-1^ErrorMessage'
"RTN","XUSNPI",59,0)
 ;; Else return 0
"RTN","XUSNPI",60,0)
 ;; =============================================================
"RTN","XUSNPI",61,0)
 ; check valid inputs
"RTN","XUSNPI",62,0)
 I $G(XUSIEN)'>0 Q "-1^Invalid IEN"
"RTN","XUSNPI",63,0)
 I (XUSIEN?.N)=0 Q "-1^Invalid IEN"
"RTN","XUSNPI",64,0)
 I $G(XUSDATE)="" S XUSDATE=$$NOW^XLFDT
"RTN","XUSNPI",65,0)
 N X,Y,%DT S %DT="T",X=XUSDATE D ^%DT I Y'=XUSDATE Q "-1^Invalid Effective Date"
"RTN","XUSNPI",66,0)
 ;-----------------------------------
"RTN","XUSNPI",67,0)
 N XUSDA,XUSI,XUSRTN,XUSROOT,XUSX,XUSTAT S (XUSDA,XUSRTN)="",XUSTAT="Inactive"
"RTN","XUSNPI",68,0)
 ; get global from Parameter file base on Qualified Identifier.
"RTN","XUSNPI",69,0)
 S XUSROOT=$$GET^XPAR("PKG.KERNEL","XUSNPI QUALIFIED IDENTIFIER",XUSQI)
"RTN","XUSNPI",70,0)
 I $E(XUSROOT)'="^" S XUSROOT="^"_XUSROOT
"RTN","XUSNPI",71,0)
 I XUSROOT="^" Q "-1^Invalid Qualified Identifier"
"RTN","XUSNPI",72,0)
 N XUIENCK S XUIENCK=XUSROOT_XUSIEN_","_0_")" I '$D(@XUIENCK) Q "-1^Invalid IEN"
"RTN","XUSNPI",73,0)
 I $$GLCK(XUSROOT)'>0 Q "-1^Invalid Qualified Identifier"
"RTN","XUSNPI",74,0)
 S XUSROOT=XUSROOT_XUSIEN_","_"""NPISTATUS"""
"RTN","XUSNPI",75,0)
 S XUSX=XUSROOT_")" I '$D(@XUSX) Q "-1^No NPI found"
"RTN","XUSNPI",76,0)
 S XUSI=0 F  S XUSI=$O(@(XUSROOT_","_"""B"""_","_XUSI_")")) Q:XUSI>XUSDATE!'XUSI
"RTN","XUSNPI",77,0)
 I 'XUSI S XUSX=XUSROOT_","_"""B"""_","_"""A"""_")",XUSDA=$O(@XUSX,-1)
"RTN","XUSNPI",78,0)
 I XUSI>XUSDATE S XUSX=XUSROOT_","_"""B"""_","_XUSI_")",XUSDA=$O(@(XUSX),-1)
"RTN","XUSNPI",79,0)
 I XUSDA="" Q 0
"RTN","XUSNPI",80,0)
 S XUSDA=XUSROOT_","_"""B"""_","_XUSDA_","_"""A"""_")",XUSDA=$O(@XUSDA,-1)
"RTN","XUSNPI",81,0)
 S XUSRTN=XUSROOT_","_XUSDA_","_0_")"
"RTN","XUSNPI",82,0)
 I '$D(@XUSRTN) Q "-1^Invalid IEN"
"RTN","XUSNPI",83,0)
 I $P($G(@XUSRTN),"^",2)=1 S XUSTAT="Active"
"RTN","XUSNPI",84,0)
 Q $P($G(@XUSRTN),"^",3)_"^"_$P($G(@XUSRTN),"^",1)_"^"_XUSTAT
"RTN","XUSNPI",85,0)
 ;       
"RTN","XUSNPI",86,0)
QI(XUSNPI) ; Retrieve the ALL qualified indentifier entity for an NPI value.
"RTN","XUSNPI",87,0)
 ;;================================================
"RTN","XUSNPI",88,0)
 ;; XUSNPI  : National Provider Identifier. Required
"RTN","XUSNPI",89,0)
 ;; 
"RTN","XUSNPI",90,0)
 ;; If qualified identified entity exists, return
"RTN","XUSNPI",91,0)
 ;; 'QualifiedIdentifier^IEN^EffectiveDate^Status;'
"RTN","XUSNPI",92,0)
 ;; If more than one records found, they are separated by ";"
"RTN","XUSNPI",93,0)
 ;; Else return 0        
"RTN","XUSNPI",94,0)
 ;;================================================
"RTN","XUSNPI",95,0)
 ; check valid NPI
"RTN","XUSNPI",96,0)
 I '$$CHKDGT(XUSNPI) Q "0^Invalid NPI"
"RTN","XUSNPI",97,0)
 N ZZ
"RTN","XUSNPI",98,0)
 D GETLST^XPAR(.ZZ,"PKG.KERNEL","XUSNPI QUALIFIED IDENTIFIER")
"RTN","XUSNPI",99,0)
 I ZZ'>0 Q 0
"RTN","XUSNPI",100,0)
 N XUSI,XUSIEN,XUSROOT,XUSQT,XUSX,XUSRTN,XUSRTN1 S (XUSQT,XUSRTN)=0,XUSRTN1=""
"RTN","XUSNPI",101,0)
 S XUSI=0 F  S XUSI=$O(ZZ(XUSI)) Q:'XUSI  D
"RTN","XUSNPI",102,0)
 . S XUSROOT=$P(ZZ(XUSI),"^",2),XUSROOT="^"_XUSROOT
"RTN","XUSNPI",103,0)
 . I $$GLCK(XUSROOT)'>0 Q  ;check valid global root
"RTN","XUSNPI",104,0)
 . I $E(XUSNPI,1,1)=0 S XUSNPI=""""_XUSNPI_""""
"RTN","XUSNPI",105,0)
 . S XUSX=XUSROOT_"""NPI42"""_","_XUSNPI_")" Q:'$D(@XUSX)
"RTN","XUSNPI",106,0)
 . S XUSIEN=0 F  S XUSX=XUSROOT_"""NPI42"""_","_XUSNPI_","_XUSIEN_")",XUSIEN=$O(@XUSX) Q:XUSIEN'>0  D
"RTN","XUSNPI",107,0)
 . . S XUSRTN=$$SRCHNPI(XUSROOT,XUSIEN,XUSNPI)
"RTN","XUSNPI",108,0)
 . . I +XUSRTN S XUSRTN1=XUSRTN1_$P(ZZ(XUSI),"^")_"^"_XUSRTN_";",XUSQT=XUSQT+1
"RTN","XUSNPI",109,0)
 I XUSRTN1="" S XUSRTN1=0
"RTN","XUSNPI",110,0)
 Q XUSRTN1
"RTN","XUSNPI",111,0)
 ;
"RTN","XUSNPI",112,0)
GLCK(XUSROOT) ; check valid global root
"RTN","XUSNPI",113,0)
 N XUFNB,ZZ
"RTN","XUSNPI",114,0)
 I $G(XUSROOT)="" Q 0
"RTN","XUSNPI",115,0)
 S XUFNB=$P(XUSROOT,"(",2),XUFNB=$P(XUFNB,",")
"RTN","XUSNPI",116,0)
 D FILE^DID(XUFNB,"","GLOBAL NAME","ZZ")
"RTN","XUSNPI",117,0)
 Q (XUSROOT=$G(ZZ("GLOBAL NAME")))
"RTN","XUSNPI",118,0)
 ;
"RTN","XUSNPI",119,0)
SRCHNPI(XUSROOT,XUSIEN,XUSNPI) ;
"RTN","XUSNPI",120,0)
 I $G(XUSIEN)'>0 Q 0
"RTN","XUSNPI",121,0)
 I (XUSIEN?.N)=0 Q 0
"RTN","XUSNPI",122,0)
 N XUSX,XUSRTN S XUSRTN=0
"RTN","XUSNPI",123,0)
 I $E(XUSNPI,1,1)=0 S XUSNPI=""""_XUSNPI_""""
"RTN","XUSNPI",124,0)
 S XUSX=XUSROOT_XUSIEN_","_"""NPISTATUS"""_","_"""C"""_","_XUSNPI_")"
"RTN","XUSNPI",125,0)
 I '$D(@XUSX) Q 0
"RTN","XUSNPI",126,0)
 S XUSX=XUSROOT_XUSIEN_","_"""NPISTATUS"""_","_"""C"""_","_XUSNPI_","_"""A"""_")"
"RTN","XUSNPI",127,0)
 S XUSRTN=$O(@XUSX,-1)
"RTN","XUSNPI",128,0)
 I '+XUSRTN Q 0
"RTN","XUSNPI",129,0)
 S XUSX=XUSROOT_XUSIEN_","_"""NPISTATUS"""_","_XUSRTN_","_0_")"
"RTN","XUSNPI",130,0)
 I '$D(@XUSX) Q 0
"RTN","XUSNPI",131,0)
 S XUSRTN=$G(@XUSX) I XUSRTN S XUSRTN=XUSIEN_"^"_$P(XUSRTN,"^")_"^"_$P(XUSRTN,"^",2)
"RTN","XUSNPI",132,0)
 I $P(XUSRTN,"^",3)=1 S $P(XUSRTN,"^",3)="Active"
"RTN","XUSNPI",133,0)
 I $P(XUSRTN,"^",3)=0 S $P(XUSRTN,"^",3)="Inactive"
"RTN","XUSNPI",134,0)
 Q XUSRTN
"RTN","XUSNPI",135,0)
 ;
"RTN","XUSNPI",136,0)
CHKDGT(XUSNPI) ;
"RTN","XUSNPI",137,0)
 ;  Function to validate the format of an NPI number.  It checks the
"RTN","XUSNPI",138,0)
 ;  length of the number, whether the NPI is numeric, and whether
"RTN","XUSNPI",139,0)
 ;  the check digit is valid.
"RTN","XUSNPI",140,0)
 ;
"RTN","XUSNPI",141,0)
 ;  Input parameter:
"RTN","XUSNPI",142,0)
 ;    NPI - 10-digit NPI number to validate.
"RTN","XUSNPI",143,0)
 ;
"RTN","XUSNPI",144,0)
 ;  Output parameter:
"RTN","XUSNPI",145,0)
 ;    Boolean value indicating whether the NPI has a valid format
"RTN","XUSNPI",146,0)
 ;
"RTN","XUSNPI",147,0)
 ;  NPI must be 10 digits long.
"RTN","XUSNPI",148,0)
 I XUSNPI'?10N Q 0
"RTN","XUSNPI",149,0)
 Q $E(XUSNPI,10)=$$CKDIGIT($E(XUSNPI,1,9))
"RTN","XUSNPI",150,0)
 ;
"RTN","XUSNPI",151,0)
CKDIGIT(XUSNPI) ;
"RTN","XUSNPI",152,0)
 ;  Function to calculate and return the check digit of an NPI.
"RTN","XUSNPI",153,0)
 ;  The check digit is calculated using the Luhn Formula for
"RTN","XUSNPI",154,0)
 ;  Modulus 10 "double-add-double" Check Digit.  A value of 24 is
"RTN","XUSNPI",155,0)
 ;  added to the total to account for the implied USA (80840) prefix.
"RTN","XUSNPI",156,0)
 ;
"RTN","XUSNPI",157,0)
 N XUSCTOT,XUSCN,XUSCDIG,XUSI
"RTN","XUSNPI",158,0)
 S XUSCTOT=24
"RTN","XUSNPI",159,0)
 F XUSI=9:-2:1 S XUSCN=2*$E(XUSNPI,XUSI),XUSCTOT=XUSCTOT+$E(XUSCN)+$E(XUSCN,2)+$E(XUSNPI,XUSI-1)
"RTN","XUSNPI",160,0)
 S XUSCDIG=150-XUSCTOT
"RTN","XUSNPI",161,0)
 Q $E(XUSCDIG,$L(XUSCDIG))
"RTN","XUSNPI",162,0)
 ;
"RTN","XUSNPI",163,0)
CHKDT(XUSQI,XUSIEN,XUSDATE) ; Check Date
"RTN","XUSNPI",164,0)
 ;;============================================================================
"RTN","XUSNPI",165,0)
 ;;  XUSQI   : Qualified Identifier. Required. For examble: "Individual_ID"
"RTN","XUSNPI",166,0)
 ;;  XUSIEN  : Internal Entry Number. Required.
"RTN","XUSNPI",167,0)
 ;;  XUSDATE : The Effective Date value to test. Must be FM date. Required. 
"RTN","XUSNPI",168,0)
 ;;  
"RTN","XUSNPI",169,0)
 ;;  If input passes date comparison, return 1.
"RTN","XUSNPI",170,0)
 ;;  Else return 0.
"RTN","XUSNPI",171,0)
 ;;============================================================================
"RTN","XUSNPI",172,0)
 ; 
"RTN","XUSNPI",173,0)
 I $G(XUSIEN)'>0 Q "0^Invalid IEN."
"RTN","XUSNPI",174,0)
 I (XUSIEN?.N)=0 Q "0^Invalid IEN."
"RTN","XUSNPI",175,0)
 N X,Y,%DT S %DT="T",X=$G(XUSDATE) D ^%DT I Y'=XUSDATE Q "0^Invalid Effective Date. Must be FM Date/Time."
"RTN","XUSNPI",176,0)
 ;-----------------------------------
"RTN","XUSNPI",177,0)
 N XUSROOT,XUSDA
"RTN","XUSNPI",178,0)
 N XUSCRDT S XUSCRDT=$$NOW^XLFDT I XUSDATE>XUSCRDT Q 0
"RTN","XUSNPI",179,0)
 ; get global from Parameter file base on Qualified Identifier.
"RTN","XUSNPI",180,0)
 S XUSROOT=$$GET^XPAR("PKG.KERNEL","XUSNPI QUALIFIED IDENTIFIER",XUSQI)
"RTN","XUSNPI",181,0)
 I $E(XUSROOT)'="^" S XUSROOT="^"_XUSROOT
"RTN","XUSNPI",182,0)
 I XUSROOT="^" Q "0^Invalid Qualified Identifier."
"RTN","XUSNPI",183,0)
 I $$GLCK(XUSROOT)'>0 Q "-1^Invalid Qualified Identifier"
"RTN","XUSNPI",184,0)
 N XUIENCK S XUIENCK=XUSROOT_XUSIEN_","_0_")" I $D(@XUIENCK)'>0 Q "0^Invalid IEN."
"RTN","XUSNPI",185,0)
 S XUSROOT=XUSROOT_XUSIEN_","_"""NPISTATUS"""_","_"""B"""_","_"""A"""_")",XUSDA=$O(@XUSROOT,-1)
"RTN","XUSNPI",186,0)
 Q (XUSDATE'<XUSDA)
"RTN","XUSNPIDA")
0^9^B45442635^B45390858
"RTN","XUSNPIDA",1,0)
XUSNPIDA ;FO-OAKLAND/JLI - SPECIFIED TAXONOMY VALUES FOR NPI RECIPIENTS ;8/22/06  11:37
"RTN","XUSNPIDA",2,0)
 ;;8.0;KERNEL;**420,410**;Jul 10, 1995;Build 27
"RTN","XUSNPIDA",3,0)
 Q
"RTN","XUSNPIDA",4,0)
 ;
"RTN","XUSNPIDA",5,0)
CHKGLOB() ;  returns global location of TAXONOMY values also rebuilds if they are missing
"RTN","XUSNPIDA",6,0)
 N I,STR,XUGLOB
"RTN","XUSNPIDA",7,0)
 S XUGLOB=$NA(^XTMP("NPIVALS"))
"RTN","XUSNPIDA",8,0)
 ; check for ;;; is to permit sites to add a ; to exclude some values not used at site
"RTN","XUSNPIDA",9,0)
 I '$D(@XUGLOB) F I=1:1 S STR=$T(@("VALUES+"_I_"^XUSNPIDA")) I STR'[";;;" S STR=$P(STR,";;",2) Q:STR=""  S @XUGLOB@(STR)=""
"RTN","XUSNPIDA",10,0)
 S @XUGLOB@(0)=$$FMADD^XLFDT(DT,15)
"RTN","XUSNPIDA",11,0)
 Q XUGLOB
"RTN","XUSNPIDA",12,0)
 ;
"RTN","XUSNPIDA",13,0)
VALUES ;
"RTN","XUSNPIDA",14,0)
 ;;101Y00000X
"RTN","XUSNPIDA",15,0)
 ;;101YA0400X
"RTN","XUSNPIDA",16,0)
 ;;101YM0800X
"RTN","XUSNPIDA",17,0)
 ;;101YP1600X
"RTN","XUSNPIDA",18,0)
 ;;101YP2500X
"RTN","XUSNPIDA",19,0)
 ;;101YS0200X
"RTN","XUSNPIDA",20,0)
 ;;103G00000X
"RTN","XUSNPIDA",21,0)
 ;;103GC0700X
"RTN","XUSNPIDA",22,0)
 ;;103T00000X
"RTN","XUSNPIDA",23,0)
 ;;103TA0400X
"RTN","XUSNPIDA",24,0)
 ;;103TA0700X
"RTN","XUSNPIDA",25,0)
 ;;103TB0200X
"RTN","XUSNPIDA",26,0)
 ;;103TC0700X
"RTN","XUSNPIDA",27,0)
 ;;103TC1900X
"RTN","XUSNPIDA",28,0)
 ;;103TC2200X
"RTN","XUSNPIDA",29,0)
 ;;103TE1000X
"RTN","XUSNPIDA",30,0)
 ;;103TE1100X
"RTN","XUSNPIDA",31,0)
 ;;103TF0000X
"RTN","XUSNPIDA",32,0)
 ;;103TF0200X
"RTN","XUSNPIDA",33,0)
 ;;103TH0100X
"RTN","XUSNPIDA",34,0)
 ;;103TM1700X
"RTN","XUSNPIDA",35,0)
 ;;103TM1800X
"RTN","XUSNPIDA",36,0)
 ;;103TP0814X
"RTN","XUSNPIDA",37,0)
 ;;103TP2700X
"RTN","XUSNPIDA",38,0)
 ;;103TP2701X
"RTN","XUSNPIDA",39,0)
 ;;103TR0400X
"RTN","XUSNPIDA",40,0)
 ;;103TS0200X
"RTN","XUSNPIDA",41,0)
 ;;103TW0100X
"RTN","XUSNPIDA",42,0)
 ;;104100000X
"RTN","XUSNPIDA",43,0)
 ;;1041C0700X
"RTN","XUSNPIDA",44,0)
 ;;1041S0200X
"RTN","XUSNPIDA",45,0)
 ;;111N00000X
"RTN","XUSNPIDA",46,0)
 ;;111NI0900X
"RTN","XUSNPIDA",47,0)
 ;;111NN0400X
"RTN","XUSNPIDA",48,0)
 ;;111NN1001X
"RTN","XUSNPIDA",49,0)
 ;;111NR0200X
"RTN","XUSNPIDA",50,0)
 ;;111NS0005X
"RTN","XUSNPIDA",51,0)
 ;;111NT0100X
"RTN","XUSNPIDA",52,0)
 ;;111NX0100X
"RTN","XUSNPIDA",53,0)
 ;;111NX0800X
"RTN","XUSNPIDA",54,0)
 ;;122300000X
"RTN","XUSNPIDA",55,0)
 ;;1223D0001X
"RTN","XUSNPIDA",56,0)
 ;;1223E0200X
"RTN","XUSNPIDA",57,0)
 ;;1223G0001X
"RTN","XUSNPIDA",58,0)
 ;;1223P0106X
"RTN","XUSNPIDA",59,0)
 ;;1223P0221X
"RTN","XUSNPIDA",60,0)
 ;;1223P0300X
"RTN","XUSNPIDA",61,0)
 ;;1223P0700X
"RTN","XUSNPIDA",62,0)
 ;;1223S0112X
"RTN","XUSNPIDA",63,0)
 ;;1223X0008X
"RTN","XUSNPIDA",64,0)
 ;;1223X0400X
"RTN","XUSNPIDA",65,0)
 ;;133V00000X
"RTN","XUSNPIDA",66,0)
 ;;133VN1004X
"RTN","XUSNPIDA",67,0)
 ;;133VN1005X
"RTN","XUSNPIDA",68,0)
 ;;133VN1006X
"RTN","XUSNPIDA",69,0)
 ;;152W00000X
"RTN","XUSNPIDA",70,0)
 ;;152WC0802X
"RTN","XUSNPIDA",71,0)
 ;;152WL0500X
"RTN","XUSNPIDA",72,0)
 ;;152WP0200X
"RTN","XUSNPIDA",73,0)
 ;;152WS0006X
"RTN","XUSNPIDA",74,0)
 ;;152WV0400X
"RTN","XUSNPIDA",75,0)
 ;;152WX0102X
"RTN","XUSNPIDA",76,0)
 ;;170100000X
"RTN","XUSNPIDA",77,0)
 ;;183500000X
"RTN","XUSNPIDA",78,0)
 ;;1835G0000X
"RTN","XUSNPIDA",79,0)
 ;;1835N0905X
"RTN","XUSNPIDA",80,0)
 ;;1835N1003X
"RTN","XUSNPIDA",81,0)
 ;;1835P1200X
"RTN","XUSNPIDA",82,0)
 ;;1835P1300X
"RTN","XUSNPIDA",83,0)
 ;;204C00000X
"RTN","XUSNPIDA",84,0)
 ;;204D00000X
"RTN","XUSNPIDA",85,0)
 ;;204E00000X
"RTN","XUSNPIDA",86,0)
 ;;204F00000X
"RTN","XUSNPIDA",87,0)
 ;;207K00000X
"RTN","XUSNPIDA",88,0)
 ;;207KA0200X
"RTN","XUSNPIDA",89,0)
 ;;207KI0005X
"RTN","XUSNPIDA",90,0)
 ;;207L00000X
"RTN","XUSNPIDA",91,0)
 ;;207LA0401X
"RTN","XUSNPIDA",92,0)
 ;;207LC0200X
"RTN","XUSNPIDA",93,0)
 ;;207LP2900X
"RTN","XUSNPIDA",94,0)
 ;;207N00000X
"RTN","XUSNPIDA",95,0)
 ;;207ND0101X
"RTN","XUSNPIDA",96,0)
 ;;207ND0900X
"RTN","XUSNPIDA",97,0)
 ;;207NI0002X
"RTN","XUSNPIDA",98,0)
 ;;207NP0225X
"RTN","XUSNPIDA",99,0)
 ;;207NS0135X
"RTN","XUSNPIDA",100,0)
 ;;207P00000X
"RTN","XUSNPIDA",101,0)
 ;;207PE0004X
"RTN","XUSNPIDA",102,0)
 ;;207PE0005X
"RTN","XUSNPIDA",103,0)
 ;;207PP0204X
"RTN","XUSNPIDA",104,0)
 ;;207PS0010X
"RTN","XUSNPIDA",105,0)
 ;;207PT0002X
"RTN","XUSNPIDA",106,0)
 ;;207Q00000X
"RTN","XUSNPIDA",107,0)
 ;;207QA0000X
"RTN","XUSNPIDA",108,0)
 ;;207QA0401X
"RTN","XUSNPIDA",109,0)
 ;;207QA0505X
"RTN","XUSNPIDA",110,0)
 ;;207QG0300X
"RTN","XUSNPIDA",111,0)
 ;;207QS0010X
"RTN","XUSNPIDA",112,0)
 ;;207R00000X
"RTN","XUSNPIDA",113,0)
 ;;207RA0000X
"RTN","XUSNPIDA",114,0)
 ;;207RA0201X
"RTN","XUSNPIDA",115,0)
 ;;207RA0401X
"RTN","XUSNPIDA",116,0)
 ;;207RC0000X
"RTN","XUSNPIDA",117,0)
 ;;207RC0001X
"RTN","XUSNPIDA",118,0)
 ;;207RC0200X
"RTN","XUSNPIDA",119,0)
 ;;207RE0101X
"RTN","XUSNPIDA",120,0)
 ;;207RG0100X
"RTN","XUSNPIDA",121,0)
 ;;207RG0300X
"RTN","XUSNPIDA",122,0)
 ;;207RH0000X
"RTN","XUSNPIDA",123,0)
 ;;207RH0003X
"RTN","XUSNPIDA",124,0)
 ;;207RI0001X
"RTN","XUSNPIDA",125,0)
 ;;207RI0008X
"RTN","XUSNPIDA",126,0)
 ;;207RI0011X
"RTN","XUSNPIDA",127,0)
 ;;207RI0200X
"RTN","XUSNPIDA",128,0)
 ;;207RM1200X
"RTN","XUSNPIDA",129,0)
 ;;207RN0300X
"RTN","XUSNPIDA",130,0)
 ;;207RP1001X
"RTN","XUSNPIDA",131,0)
 ;;207RR0500X
"RTN","XUSNPIDA",132,0)
 ;;207RS0010X
"RTN","XUSNPIDA",133,0)
 ;;207RX0202X
"RTN","XUSNPIDA",134,0)
 ;;207SC0300X
"RTN","XUSNPIDA",135,0)
 ;;207SG0201X
"RTN","XUSNPIDA",136,0)
 ;;207SG0202X
"RTN","XUSNPIDA",137,0)
 ;;207SG0203X
"RTN","XUSNPIDA",138,0)
 ;;207SG0205X
"RTN","XUSNPIDA",139,0)
 ;;207SM0001X
"RTN","XUSNPIDA",140,0)
 ;;207T00000X
"RTN","XUSNPIDA",141,0)
 ;;207U00000X
"RTN","XUSNPIDA",142,0)
 ;;207UN0901X
"RTN","XUSNPIDA",143,0)
 ;;207UN0902X
"RTN","XUSNPIDA",144,0)
 ;;207UN0903X
"RTN","XUSNPIDA",145,0)
 ;;207V00000X
"RTN","XUSNPIDA",146,0)
 ;;207VC0200X
"RTN","XUSNPIDA",147,0)
 ;;207VE0102X
"RTN","XUSNPIDA",148,0)
 ;;207VG0400X
"RTN","XUSNPIDA",149,0)
 ;;207VM0101X
"RTN","XUSNPIDA",150,0)
 ;;207VX0000X
"RTN","XUSNPIDA",151,0)
 ;;207VX0201X
"RTN","XUSNPIDA",152,0)
 ;;207W00000X
"RTN","XUSNPIDA",153,0)
 ;;207X00000X
"RTN","XUSNPIDA",154,0)
 ;;207XS0106X
"RTN","XUSNPIDA",155,0)
 ;;207XS0114X
"RTN","XUSNPIDA",156,0)
 ;;207XS0117X
"RTN","XUSNPIDA",157,0)
 ;;207XX0004X
"RTN","XUSNPIDA",158,0)
 ;;207XX0005X
"RTN","XUSNPIDA",159,0)
 ;;207XX0801X
"RTN","XUSNPIDA",160,0)
 ;;207Y00000X
"RTN","XUSNPIDA",161,0)
 ;;207YP0228X
"RTN","XUSNPIDA",162,0)
 ;;207YS0123X
"RTN","XUSNPIDA",163,0)
 ;;207YX0007X
"RTN","XUSNPIDA",164,0)
 ;;207YX0602X
"RTN","XUSNPIDA",165,0)
 ;;207YX0901X
"RTN","XUSNPIDA",166,0)
 ;;207YX0905X
"RTN","XUSNPIDA",167,0)
 ;;207ZB0001X
"RTN","XUSNPIDA",168,0)
 ;;207ZC0500X
"RTN","XUSNPIDA",169,0)
 ;;207ZD0900X
"RTN","XUSNPIDA",170,0)
 ;;207ZF0201X
"RTN","XUSNPIDA",171,0)
 ;;207ZH0000X
"RTN","XUSNPIDA",172,0)
 ;;207ZI0100X
"RTN","XUSNPIDA",173,0)
 ;;207ZM0300X
"RTN","XUSNPIDA",174,0)
 ;;207ZN0500X
"RTN","XUSNPIDA",175,0)
 ;;207ZP0007X
"RTN","XUSNPIDA",176,0)
 ;;207ZP0101X
"RTN","XUSNPIDA",177,0)
 ;;207ZP0102X
"RTN","XUSNPIDA",178,0)
 ;;207ZP0104X
"RTN","XUSNPIDA",179,0)
 ;;207ZP0105X
"RTN","XUSNPIDA",180,0)
 ;;207ZP0213X
"RTN","XUSNPIDA",181,0)
 ;;208000000X
"RTN","XUSNPIDA",182,0)
 ;;2080A0000X
"RTN","XUSNPIDA",183,0)
 ;;2080I0007X
"RTN","XUSNPIDA",184,0)
 ;;2080N0001X
"RTN","XUSNPIDA",185,0)
 ;;2080P0006X
"RTN","XUSNPIDA",186,0)
 ;;2080P0008X
"RTN","XUSNPIDA",187,0)
 ;;2080P0201X
"RTN","XUSNPIDA",188,0)
 ;;2080P0202X
"RTN","XUSNPIDA",189,0)
 ;;2080P0203X
"RTN","XUSNPIDA",190,0)
 ;;2080P0204X
"RTN","XUSNPIDA",191,0)
 ;;2080P0205X
"RTN","XUSNPIDA",192,0)
 ;;2080P0206X
"RTN","XUSNPIDA",193,0)
 ;;2080P0207X
"RTN","XUSNPIDA",194,0)
 ;;2080P0208X
"RTN","XUSNPIDA",195,0)
 ;;2080P0210X
"RTN","XUSNPIDA",196,0)
 ;;2080P0214X
"RTN","XUSNPIDA",197,0)
 ;;2080P0216X
"RTN","XUSNPIDA",198,0)
 ;;2080S0010X
"RTN","XUSNPIDA",199,0)
 ;;2080T0002X
"RTN","XUSNPIDA",200,0)
 ;;208100000X
"RTN","XUSNPIDA",201,0)
 ;;2081P0004X
"RTN","XUSNPIDA",202,0)
 ;;2081P0010X
"RTN","XUSNPIDA",203,0)
 ;;2081P2900X
"RTN","XUSNPIDA",204,0)
 ;;2081S0010X
"RTN","XUSNPIDA",205,0)
 ;;208200000X
"RTN","XUSNPIDA",206,0)
 ;;2082S0099X
"RTN","XUSNPIDA",207,0)
 ;;2082S0105X
"RTN","XUSNPIDA",208,0)
 ;;2083A0100X
"RTN","XUSNPIDA",209,0)
 ;;2083P0011X
"RTN","XUSNPIDA",210,0)
 ;;2083P0500X
"RTN","XUSNPIDA",211,0)
 ;;2083P0901X
"RTN","XUSNPIDA",212,0)
 ;;2083S0010X
"RTN","XUSNPIDA",213,0)
 ;;2083T0002X
"RTN","XUSNPIDA",214,0)
 ;;2083X0100X
"RTN","XUSNPIDA",215,0)
 ;;2084A0401X
"RTN","XUSNPIDA",216,0)
 ;;2084F0202X
"RTN","XUSNPIDA",217,0)
 ;;2084N0400X
"RTN","XUSNPIDA",218,0)
 ;;2084N0402X
"RTN","XUSNPIDA",219,0)
 ;;2084N0600X
"RTN","XUSNPIDA",220,0)
 ;;2084P0005X
"RTN","XUSNPIDA",221,0)
 ;;2084P0800X
"RTN","XUSNPIDA",222,0)
 ;;2084P0802X
"RTN","XUSNPIDA",223,0)
 ;;2084P0804X
"RTN","XUSNPIDA",224,0)
 ;;2084P0805X
"RTN","XUSNPIDA",225,0)
 ;;2084P2900X
"RTN","XUSNPIDA",226,0)
 ;;2084S0010X
"RTN","XUSNPIDA",227,0)
 ;;2084V0102X
"RTN","XUSNPIDA",228,0)
 ;;2085B0100X
"RTN","XUSNPIDA",229,0)
 ;;2085N0700X
"RTN","XUSNPIDA",230,0)
 ;;2085N0904X
"RTN","XUSNPIDA",231,0)
 ;;2085P0229X
"RTN","XUSNPIDA",232,0)
 ;;2085R0001X
"RTN","XUSNPIDA",233,0)
 ;;2085R0202X
"RTN","XUSNPIDA",234,0)
 ;;2085R0203X
"RTN","XUSNPIDA",235,0)
 ;;2085R0204X
"RTN","XUSNPIDA",236,0)
 ;;2085R0205X
"RTN","XUSNPIDA",237,0)
 ;;2085U0001X
"RTN","XUSNPIDA",238,0)
 ;;208600000X
"RTN","XUSNPIDA",239,0)
 ;;2086S0102X
"RTN","XUSNPIDA",240,0)
 ;;2086S0105X
"RTN","XUSNPIDA",241,0)
 ;;2086S0120X
"RTN","XUSNPIDA",242,0)
 ;;2086S0122X
"RTN","XUSNPIDA",243,0)
 ;;2086S0127X
"RTN","XUSNPIDA",244,0)
 ;;2086S0129X
"RTN","XUSNPIDA",245,0)
 ;;2086X0206X
"RTN","XUSNPIDA",246,0)
 ;;208800000X
"RTN","XUSNPIDA",247,0)
 ;;208C00000X
"RTN","XUSNPIDA",248,0)
 ;;208D00000X
"RTN","XUSNPIDA",249,0)
 ;;208G00000X
"RTN","XUSNPIDA",250,0)
 ;;208M00000X
"RTN","XUSNPIDA",251,0)
 ;;208U00000X
"RTN","XUSNPIDA",252,0)
 ;;208VP0000X
"RTN","XUSNPIDA",253,0)
 ;;208VP0014X
"RTN","XUSNPIDA",254,0)
 ;;209800000X
"RTN","XUSNPIDA",255,0)
 ;;213E00000X
"RTN","XUSNPIDA",256,0)
 ;;213EG0000X
"RTN","XUSNPIDA",257,0)
 ;;213EP0504X
"RTN","XUSNPIDA",258,0)
 ;;213EP1101X
"RTN","XUSNPIDA",259,0)
 ;;213ER0200X
"RTN","XUSNPIDA",260,0)
 ;;213ES0000X
"RTN","XUSNPIDA",261,0)
 ;;213ES0103X
"RTN","XUSNPIDA",262,0)
 ;;213ES0131X
"RTN","XUSNPIDA",263,0)
 ;;225100000X
"RTN","XUSNPIDA",264,0)
 ;;2251C2600X
"RTN","XUSNPIDA",265,0)
 ;;2251E1200X
"RTN","XUSNPIDA",266,0)
 ;;2251E1300X
"RTN","XUSNPIDA",267,0)
 ;;2251G0304X
"RTN","XUSNPIDA",268,0)
 ;;2251H1200X
"RTN","XUSNPIDA",269,0)
 ;;2251H1300X
"RTN","XUSNPIDA",270,0)
 ;;2251N0400X
"RTN","XUSNPIDA",271,0)
 ;;2251P0200X
"RTN","XUSNPIDA",272,0)
 ;;2251S0007X
"RTN","XUSNPIDA",273,0)
 ;;2251X0800X
"RTN","XUSNPIDA",274,0)
 ;;225X00000X
"RTN","XUSNPIDA",275,0)
 ;;225XE1200X
"RTN","XUSNPIDA",276,0)
 ;;225XH1200X
"RTN","XUSNPIDA",277,0)
 ;;225XH1300X
"RTN","XUSNPIDA",278,0)
 ;;225XN1300X
"RTN","XUSNPIDA",279,0)
 ;;225XP0200X
"RTN","XUSNPIDA",280,0)
 ;;225XR0403X
"RTN","XUSNPIDA",281,0)
 ;;231H00000X
"RTN","XUSNPIDA",282,0)
 ;;231HA2400X
"RTN","XUSNPIDA",283,0)
 ;;231HA2500X
"RTN","XUSNPIDA",284,0)
 ;;237600000X
"RTN","XUSNPIDA",285,0)
 ;;363A00000X
"RTN","XUSNPIDA",286,0)
 ;;363AM0700X
"RTN","XUSNPIDA",287,0)
 ;;363AS0400X
"RTN","XUSNPIDA",288,0)
 ;;363L00000X
"RTN","XUSNPIDA",289,0)
 ;;363LA2100X
"RTN","XUSNPIDA",290,0)
 ;;363LA2200X
"RTN","XUSNPIDA",291,0)
 ;;363LC0200X
"RTN","XUSNPIDA",292,0)
 ;;363LC1500X
"RTN","XUSNPIDA",293,0)
 ;;363LF0000X
"RTN","XUSNPIDA",294,0)
 ;;363LG0600X
"RTN","XUSNPIDA",295,0)
 ;;363LN0000X
"RTN","XUSNPIDA",296,0)
 ;;363LN0005X
"RTN","XUSNPIDA",297,0)
 ;;363LP0200X
"RTN","XUSNPIDA",298,0)
 ;;363LP0222X
"RTN","XUSNPIDA",299,0)
 ;;363LP0808X
"RTN","XUSNPIDA",300,0)
 ;;363LP1700X
"RTN","XUSNPIDA",301,0)
 ;;363LP2300X
"RTN","XUSNPIDA",302,0)
 ;;363LS0200X
"RTN","XUSNPIDA",303,0)
 ;;363LW0102X
"RTN","XUSNPIDA",304,0)
 ;;363LX0001X
"RTN","XUSNPIDA",305,0)
 ;;363LX0106X
"RTN","XUSNPIDA",306,0)
 ;;364S00000X
"RTN","XUSNPIDA",307,0)
 ;;364SA2100X
"RTN","XUSNPIDA",308,0)
 ;;364SA2200X
"RTN","XUSNPIDA",309,0)
 ;;364SC0200X
"RTN","XUSNPIDA",310,0)
 ;;364SC1501X
"RTN","XUSNPIDA",311,0)
 ;;364SC2300X
"RTN","XUSNPIDA",312,0)
 ;;364SE0003X
"RTN","XUSNPIDA",313,0)
 ;;364SE1400X
"RTN","XUSNPIDA",314,0)
 ;;364SF0001X
"RTN","XUSNPIDA",315,0)
 ;;364SG0600X
"RTN","XUSNPIDA",316,0)
 ;;364SH0200X
"RTN","XUSNPIDA",317,0)
 ;;364SH1100X
"RTN","XUSNPIDA",318,0)
 ;;364SI0800X
"RTN","XUSNPIDA",319,0)
 ;;364SL0600X
"RTN","XUSNPIDA",320,0)
 ;;364SM0705X
"RTN","XUSNPIDA",321,0)
 ;;364SN0000X
"RTN","XUSNPIDA",322,0)
 ;;364SN0800X
"RTN","XUSNPIDA",323,0)
 ;;364SP0200X
"RTN","XUSNPIDA",324,0)
 ;;364SP0807X
"RTN","XUSNPIDA",325,0)
 ;;364SP0808X
"RTN","XUSNPIDA",326,0)
 ;;364SP0809X
"RTN","XUSNPIDA",327,0)
 ;;364SP0810X
"RTN","XUSNPIDA",328,0)
 ;;364SP0811X
"RTN","XUSNPIDA",329,0)
 ;;364SP0812X
"RTN","XUSNPIDA",330,0)
 ;;364SP0813X
"RTN","XUSNPIDA",331,0)
 ;;364SP1700X
"RTN","XUSNPIDA",332,0)
 ;;364SP2800X
"RTN","XUSNPIDA",333,0)
 ;;364SR0400X
"RTN","XUSNPIDA",334,0)
 ;;364SS0200X
"RTN","XUSNPIDA",335,0)
 ;;364ST0500X
"RTN","XUSNPIDA",336,0)
 ;;364SW0102X
"RTN","XUSNPIDA",337,0)
 ;;364SX0106X
"RTN","XUSNPIDA",338,0)
 ;;364SX0200X
"RTN","XUSNPIDA",339,0)
 ;;364SX0204X
"RTN","XUSNPIDA",340,0)
 ;;367500000X
"RTN","XUSNPIDA",341,0)
 ;;367A00000X
"RTN","XUSNPIDA",342,0)
 ;;367H00000X
"RTN","XUSNPIDA",343,0)
 ;;
"RTN","XUSNPIE1")
0^6^B70700540^B89054280
"RTN","XUSNPIE1",1,0)
XUSNPIE1 ;FO-OAKLAND/JLI - NATIONAL PROVIDER IDENTIFIER DATA CAPTURE ;9/7/06  13:13
"RTN","XUSNPIE1",2,0)
 ;;8.0;KERNEL;**420,410**; July 10, 1995;Build 27
"RTN","XUSNPIE1",3,0)
 ;
"RTN","XUSNPIE1",4,0)
 Q
"RTN","XUSNPIE1",5,0)
 ;
"RTN","XUSNPIE1",6,0)
SET(XUSIEN,XUSNPI) ;
"RTN","XUSNPIE1",7,0)
 ; set value for NPI field (#41.99) in file #200
"RTN","XUSNPIE1",8,0)
 N OLDNPI S OLDNPI=$P($G(^VA(200,XUSIEN,"NPI")),"^")
"RTN","XUSNPIE1",9,0)
 I OLDNPI K ^VA(200,"ANPI",OLDNPI,XUSIEN)
"RTN","XUSNPIE1",10,0)
 S ^VA(200,XUSIEN,"NPI")=XUSNPI_U_"D",^VA(200,"ANPI",XUSNPI,XUSIEN)=""
"RTN","XUSNPIE1",11,0)
 Q
"RTN","XUSNPIE1",12,0)
 ;
"RTN","XUSNPIE1",13,0)
SET1(XUSIEN,XUSNPI) ;
"RTN","XUSNPIE1",14,0)
 ; set value for NPI field (#41.99) in file #4
"RTN","XUSNPIE1",15,0)
 N OLDNPI S OLDNPI=$P($G(^DIC(4,XUSIEN,"NPI")),"^")
"RTN","XUSNPIE1",16,0)
 I OLDNPI K ^DIC(4,"ANPI",OLDNPI,XUSIEN)
"RTN","XUSNPIE1",17,0)
 S ^DIC(4,XUSIEN,"NPI")=XUSNPI,^DIC(4,"ANPI",XUSNPI,XUSIEN)=""
"RTN","XUSNPIE1",18,0)
 Q
"RTN","XUSNPIE1",19,0)
 ;
"RTN","XUSNPIE1",20,0)
SIGNON ; .ACT - run at user sign-on display message if NEEDS AN NPI
"RTN","XUSNPIE1",21,0)
 N XVAL,DATETIME,OPT,XVALTIME
"RTN","XUSNPIE1",22,0)
 I $$CHEKNPI^XUSNPIED(DUZ) W !!,"To enter your NPI value enter  NPI  at a menu prompt to jump to the",!,"edit option.",! H 1
"RTN","XUSNPIE1",23,0)
 ; following to insure CBO List is scheduled to run on first day of month
"RTN","XUSNPIE1",24,0)
 S XVALTIME=$E(DT,6,7) I '((XVALTIME="01")!(XVALTIME="15")) Q
"RTN","XUSNPIE1",25,0)
 S XVAL=+$E($$NOW^XLFDT(),6,10) I XVAL>(XVALTIME_".19"),XVAL<(XVALTIME_".1958") D  ; 7 PM TO 7:58 PM ON 1ST OF MONTH
"RTN","XUSNPIE1",26,0)
 . S OPT=$$FIND1^DIC(19.2,"","","XUS NPI CBO LIST") I OPT'>0 L +^TMP("XUS NPI CBO LOCK"):0 Q:'$T  D CBOQUEUE L -^TMP("XUS NPI CBO LOCK") Q
"RTN","XUSNPIE1",27,0)
 . S DATETIME=$$GET1^DIQ(19.2,OPT_",",2)
"RTN","XUSNPIE1",28,0)
 . I DATETIME'=$$FMTE^XLFDT(DT_".2") L +^DIC(19.2,OPT):0 Q:'$T  D SETQUEUE(OPT,DT_".2") L -^DIC(19.2,OPT) Q
"RTN","XUSNPIE1",29,0)
 . I '$$GET1^DIQ(19.2,OPT_",",99.1) L +^DIC(19.2,OPT):0 Q:'$T  D  L -^DIC(19.2,OPT)
"RTN","XUSNPIE1",30,0)
 . . D SETQUEUE(OPT,"@")
"RTN","XUSNPIE1",31,0)
 . . D SETQUEUE(OPT,DT_".2")
"RTN","XUSNPIE1",32,0)
 . . Q
"RTN","XUSNPIE1",33,0)
 . Q
"RTN","XUSNPIE1",34,0)
 Q
"RTN","XUSNPIE1",35,0)
 ;
"RTN","XUSNPIE1",36,0)
SETQUEUE(OPT,VALUE) ;
"RTN","XUSNPIE1",37,0)
 N FDA S FDA(19.2,OPT_",",2)=VALUE D FILE^DIE("","FDA")
"RTN","XUSNPIE1",38,0)
 Q
"RTN","XUSNPIE1",39,0)
 ;
"RTN","XUSNPIE1",40,0)
POSTINIT ;
"RTN","XUSNPIE1",41,0)
 N XUGLOB,XUUSER,XIEN,X,ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","XUSNPIE1",42,0)
 ;S XIEN=$$FIND1^DIC(19,"","","XUCOMMAND") I XIEN>0,$$FIND1^DIC(19.01,","_XIEN_",","","XUS NPI PROVIDER SELF ENTRY")'>0 S X=$$ADD^XPDMENU("XUCOMMAND","XUS NPI PROVIDER SELF ENTRY","NPI","")
"RTN","XUSNPIE1",43,0)
 ;S XIEN=$$FIND1^DIC(19,"","","XU USER SIGN-ON") I XIEN>0,$$FIND1^DIC(19.01,","_XIEN_",","","XUS NPI SIGNON CHECK")'>0 S X=$$ADD^XPDMENU("XU USER SIGN-ON","XUS NPI SIGNON CHECK","","")
"RTN","XUSNPIE1",44,0)
 ; get global containing Taxonomy values
"RTN","XUSNPIE1",45,0)
 S XUGLOB=$$CHKGLOB^XUSNPIED()
"RTN","XUSNPIE1",46,0)
 ; go through file 200 and ma
"RTN","XUSNPIE1",47,0)
 S XUUSER=0 F  S XUUSER=$O(^VA(200,XUUSER)) Q:XUUSER'>0  I $$ACTIVE^XUSER(XUUSER) D DOUSER^XUSNPIED(XUUSER,XUGLOB)
"RTN","XUSNPIE1",48,0)
 ; and send CBO a starting point list
"RTN","XUSNPIE1",49,0)
 ;S ZTIO="",ZTDTH=$$NOW^XLFDT(),ZTRTN="CBOLIST^XUSNPIED",ZTDESC="XUS NPI CBOLIST MESSAGE GENERATION" D ^%ZTLOAD
"RTN","XUSNPIE1",50,0)
 ; set up to generate CBO list monthly
"RTN","XUSNPIE1",51,0)
 D CBOQUEUE
"RTN","XUSNPIE1",52,0)
 Q
"RTN","XUSNPIE1",53,0)
 ;
"RTN","XUSNPIE1",54,0)
CBOQUEUE ;
"RTN","XUSNPIE1",55,0)
 N FDA,XUSVAL
"RTN","XUSNPIE1",56,0)
 ; check for already queued
"RTN","XUSNPIE1",57,0)
 S XUSVAL=$$FIND1^DIC(19.2,"","","XUS NPI CBO LIST") I XUSVAL>0 D  Q
"RTN","XUSNPIE1",58,0)
 . S FDA(19.2,XUSVAL_",",2)=$$SETDATE()
"RTN","XUSNPIE1",59,0)
 . S FDA(19.2,XUSVAL_",",6)="1M(1@2000,15@2000)"
"RTN","XUSNPIE1",60,0)
 . N ZTQUEUED S ZTQUEUED=1 D FILE^DIE("","FDA") K ZTQUEUED
"RTN","XUSNPIE1",61,0)
 . Q
"RTN","XUSNPIE1",62,0)
 ; no set up queued job
"RTN","XUSNPIE1",63,0)
 S XUSVAL=$$FIND1^DIC(19,"","","XUS NPI CBO LIST") Q:XUSVAL'>0  S FDA(19.2,"+1,",.01)=XUSVAL
"RTN","XUSNPIE1",64,0)
 S FDA(19.2,"+1,",2)=$$SETDATE()
"RTN","XUSNPIE1",65,0)
 S FDA(19.2,"+1,",6)="1M(1@2000,15@2000)"
"RTN","XUSNPIE1",66,0)
 N ZTQUEUED S ZTQUEUED=1 D UPDATE^DIE("","FDA") K ZTQUEUED
"RTN","XUSNPIE1",67,0)
 Q
"RTN","XUSNPIE1",68,0)
 ;
"RTN","XUSNPIE1",69,0)
SETDATE() ;
"RTN","XUSNPIE1",70,0)
 Q $S($E($$NOW^XLFDT(),6,10)<1.2:DT,$E($$NOW^XLFDT(),6,10)<15.2:$E(DT,1,5)_"15",$E(DT,4,5)>11:(($E(DT,1,3)+1)_"0101"),1:($E(DT,1,5)+1)_"01")_".2"
"RTN","XUSNPIE1",71,0)
 ;
"RTN","XUSNPIE1",72,0)
EDITNPI(IEN) ; main entry of NPI value
"RTN","XUSNPIE1",73,0)
 ; IEN is the internal entry number in file 200 for the provider
"RTN","XUSNPIE1",74,0)
 ;
"RTN","XUSNPIE1",75,0)
 N DATEVAL,DESCRIP,DONE,NPIVAL1,NPIVAL2,PROVNAME,XX,Y,CURRNPI
"RTN","XUSNPIE1",76,0)
 N ODATEVAL,OIEN,OLDNPI,XUSNONED,DIR,ADDNPI,DELETNPI,NOOLDNPI,XUSQI
"RTN","XUSNPIE1",77,0)
 S ADDNPI=1,DELETNPI=2,NOOLDNPI=0
"RTN","XUSNPIE1",78,0)
 S PROVNAME=$$GET1^DIQ(200,IEN_",",.01)
"RTN","XUSNPIE1",79,0)
 ;I '$$ACTIVE^XUSER(IEN) W !,"This user isn't currently active" Q
"RTN","XUSNPIE1",80,0)
 I $$GETTAXON^XUSNPIED(IEN,.DESCRIP)=-1 W !,"This user doesn't have a Taxonomy Code indicating a need for an NPI." S XUSNONED=1 ; but don't quit on that
"RTN","XUSNPIE1",81,0)
 I $$NPISTATS^XUSNPIED(IEN)="D" S XUSNONED=1
"RTN","XUSNPIE1",82,0)
 I $$NPISTATS^XUSNPIED(IEN)="E" W !,"This provider has been indicated as being EXEMPT from needing an NPI value.",!,"   Use Exempt option to remove it first" Q
"RTN","XUSNPIE1",83,0)
 S OLDNPI=NOOLDNPI I $$NPISTATS^XUSNPIED(IEN)="D" D  Q:OLDNPI=NOOLDNPI  ; exit without changing
"RTN","XUSNPIE1",84,0)
 . N I,X,DIR
"RTN","XUSNPIE1",85,0)
 . S CURRNPI=$$GET1^DIQ(200,IEN_",",41.99) I CURRNPI="" Q
"RTN","XUSNPIE1",86,0)
 . S OIEN=$$SRCHNPI^XUSNPI("^VA(200,",IEN,CURRNPI) I OIEN>0 S ODATEVAL=$P(OIEN,U,2),OIEN=$O(^VA(200,IEN,"NPISTATUS","C",CURRNPI,"A"),-1)
"RTN","XUSNPIE1",87,0)
 . I '$D(ODATEVAL) S OLDNPI=2 ; can't find entry in multiple, delete entry at top
"RTN","XUSNPIE1",88,0)
 . W !,"This provider already has an NPI value (",CURRNPI,") entered."
"RTN","XUSNPIE1",89,0)
 . ;S DIR(0)="Y",DIR("A")="Do you want to ADD a new NPI value as the active one",DIR("B")="NO" D ^DIR S OLDNPI=Y Q:OLDNPI
"RTN","XUSNPIE1",90,0)
 . ;K DIR S DIR(0)="Y",DIR("A")="Do you REALLY want to **DELETE** this NPI value",DIR("B")="NO" D ^DIR I Y S OLDNPI=2
"RTN","XUSNPIE1",91,0)
 . S DIR(0)="S^D:Delete;R:Replace",DIR("A")="Do you want to (D)elete or (R)eplace this NPI value?",DIR("?")="Enter either D or R or ^ to quit with out editing"
"RTN","XUSNPIE1",92,0)
 . S DIR("?",1)="If the value was entered for the incorrect individual, it should be Deleted.",DIR("?",2)="Otherwise it should be Replaced"
"RTN","XUSNPIE1",93,0)
 . D ^DIR K DIR Q:"DR"'[Y  I Y="R" S OLDNPI=ADDNPI Q
"RTN","XUSNPIE1",94,0)
 . S DIR(0)="S^V:VALID;E:ERROR",DIR("A",1)="Was the original NPI (V)alid for this provider",DIR("A")="or was it entered in (E)rror?",DIR("?")="Enter either V or E or ^ to quit with out editing"
"RTN","XUSNPIE1",95,0)
 . S DIR("?",1)="If the NPI value was entered for the incorrect individual, respond E,",DIR("?",2)="otherwise enter V"
"RTN","XUSNPIE1",96,0)
 . D ^DIR K DIR Q:"EV"'[Y  I Y="V" S Y=$$ADDNPI^XUSNPI("Individual_ID",IEN,CURRNPI,$$NOW^XLFDT(),0) D   S OLDNPI=NOOLDNPI Q
"RTN","XUSNPIE1",97,0)
 . . W !,$S(Y>-1:"Entry has been marked inactive.",1:$P(Y,U,2)),! Q:+Y=-1
"RTN","XUSNPIE1",98,0)
 . . N XUFDA S XUFDA(200,IEN_",",41.98)="@",XUFDA(200,IEN_",",41.99)="@" D FILE^DIE("","XUFDA") S Y=$$CHEKNPI^XUSNPIED(IEN)
"RTN","XUSNPIE1",99,0)
 . . Q
"RTN","XUSNPIE1",100,0)
 . S OLDNPI=DELETNPI
"RTN","XUSNPIE1",101,0)
 . Q
"RTN","XUSNPIE1",102,0)
 I $$NPISTATS^XUSNPIED(IEN)="" W !,"Need for an NPI value isn't indicated - but you can enter an NPI",$C(7)
"RTN","XUSNPIE1",103,0)
 I IEN'=DUZ W !,"Provider: ",PROVNAME,"   ","XXX-XX-"_$E($$GET1^DIQ(200,IEN_",",9),6,9),"   DOB: " S XX=$P($G(^VA(200,IEN,1)),U,3) S:XX'="" XX=$$DATE10^XUSNPIED(XX) W XX
"RTN","XUSNPIE1",104,0)
 ;I IEN'=DUZ W !,"Status:   Active"
"RTN","XUSNPIE1",105,0)
 S DONE=0 I OLDNPI'=DELETNPI F  R !,"Enter NPI (10 digits): ",NPIVAL1:DTIME Q:'$T  Q:NPIVAL1=""  Q:NPIVAL1=U  D  Q:DONE
"RTN","XUSNPIE1",106,0)
 . I NPIVAL1'?10N D  Q
"RTN","XUSNPIE1",107,0)
 . . W !,$C(7),"Enter a 10 digit National Provider Identifier which is obtained ",!,"from 'https://nppes.cms.hhs.gov/NPPES/Welcome.do'"
"RTN","XUSNPIE1",108,0)
 . . Q:$$PROD^XUPROD()  W ! K DIR S DIR(0)="Y",DIR("A")="Do you want to generate a test NPI value" D ^DIR Q:'Y
"RTN","XUSNPIE1",109,0)
 . . R !,"Enter a nine (9) digit number as the base: ",Y:DTIME Q:Y'?9N
"RTN","XUSNPIE1",110,0)
 . . W !,"The complete NPI value is: ",Y_$$CKDIGIT^XUSNPI(Y),!
"RTN","XUSNPIE1",111,0)
 . . Q
"RTN","XUSNPIE1",112,0)
 . S XUSQI=$$QI^XUSNPI(NPIVAL1) I +XUSQI=0,$P(XUSQI,U,2)="Invalid NPI" W !,"NPI values have a specific structure to validate them...",!,"The Checksum for this entry is not valid",! Q
"RTN","XUSNPIE1",113,0)
 . I XUSQI'=0 N ZZ,DONE1 S DONE1=0 D GETLST^XPAR(.ZZ,"PKG.KERNEL","XUSNPI QUALIFIED IDENTIFIER") D  Q:DONE1
"RTN","XUSNPIE1",114,0)
 . . S ZZ="" F  S ZZ=$O(ZZ(ZZ)) Q:ZZ'>0  I $P(ZZ(ZZ),U)=$P(XUSQI,U) W !,"That NPI value is already associated with "_$P(@("^"_$P(ZZ(ZZ),U,2)_$P(XUSQI,U,2)_",0)"),U) S DONE1=1 Q
"RTN","XUSNPIE1",115,0)
 . . Q
"RTN","XUSNPIE1",116,0)
 . R !,"Please re-enter NPI  : ",NPIVAL2:DTIME Q:'$T  I NPIVAL1'=NPIVAL2 W !,"Values do not match!" Q
"RTN","XUSNPIE1",117,0)
 . S DONE=1
"RTN","XUSNPIE1",118,0)
 . Q
"RTN","XUSNPIE1",119,0)
 I OLDNPI=DELETNPI D
"RTN","XUSNPIE1",120,0)
 . I $D(ODATEVAL) D  S Y=$$CHEKNPI^XUSNPIED(IEN) Q
"RTN","XUSNPIE1",121,0)
 . . N DIR S DIR(0)="Y",DIR("A")="Confirm that you want to **DELETE** this incorrectly entered NPI",DIR("B")="NO" D ^DIR Q:'Y
"RTN","XUSNPIE1",122,0)
 . . D DELETNPI^XUSNPIE2(IEN,OIEN,ODATEVAL)
"RTN","XUSNPIE1",123,0)
 . . D CHKOLD1(IEN) ; check for earlier value, and activate if present
"RTN","XUSNPIE1",124,0)
 . . W !,"Entry was DELETED..."
"RTN","XUSNPIE1",125,0)
 . . Q
"RTN","XUSNPIE1",126,0)
 . D DELETNPI^XUSNPIE2(IEN) ; clean up where no entry in multiple
"RTN","XUSNPIE1",127,0)
 . W !,"Entry was DELETED..."
"RTN","XUSNPIE1",128,0)
 . Q
"RTN","XUSNPIE1",129,0)
 I 'DONE Q
"RTN","XUSNPIE1",130,0)
 ;N DIR S DIR("A")="Enter the date the provider was issued this number from CMS: ",DIR(0)="D^:"_$$NOW^XLFDT() D ^DIR Q:Y'>0  S DATEVAL=+Y
"RTN","XUSNPIE1",131,0)
 S DATEVAL=$$NOW^XLFDT()
"RTN","XUSNPIE1",132,0)
 ; mark previous NPI value as inactive
"RTN","XUSNPIE1",133,0)
 I OLDNPI=ADDNPI S DONE=$$ADDNPI^XUSNPI("Individual_ID",IEN,CURRNPI,DATEVAL,0) ; set status to INACTIVE
"RTN","XUSNPIE1",134,0)
 S DONE=$$ADDNPI^XUSNPI("Individual_ID",IEN,NPIVAL1,DATEVAL) I +DONE=-1 W !,"Problem writing that value into the database! --  It was **NOT** recorded.",!,$P(DONE,U,2) Q
"RTN","XUSNPIE1",135,0)
 W !!,"For provider ",PROVNAME," "_$S('$D(XUSNONED):"(who requires an NPI), ",1:"")_"the NPI ",NPIVAL1,!,"was saved to VistA successfully."
"RTN","XUSNPIE1",136,0)
 Q
"RTN","XUSNPIE1",137,0)
 ;
"RTN","XUSNPIE1",138,0)
CHKOLD1(IEN) ;
"RTN","XUSNPIE1",139,0)
 D CHKOLD1^XUSNPIE2(IEN)
"RTN","XUSNPIE1",140,0)
 Q
"RTN","XUSNPIE1",141,0)
 ;
"RTN","XUSNPIE1",142,0)
CLERXMPT ;
"RTN","XUSNPIE1",143,0)
 D CLERXMPT^XUSNPIE2
"RTN","XUSNPIE1",144,0)
 Q
"RTN","XUSNPIE1",145,0)
 ;
"RTN","XUSNPIE1",146,0)
CHKDGT(XUSNPI,XUSDA,XUSQI) ; INPUT TRANSFORM
"RTN","XUSNPIE1",147,0)
 N XUS S XUS=$$CHKDGT^XUSNPI(XUSNPI)
"RTN","XUSNPIE1",148,0)
 I XUS'>0 Q 0
"RTN","XUSNPIE1",149,0)
 N XUSQIK S XUSQIK=$$QI^XUSNPI(XUSNPI) I XUSQIK=0 Q 1
"RTN","XUSNPIE1",150,0)
 N XUSQIK1 S XUSQIK1=$P(XUSQIK,"^")
"RTN","XUSNPIE1",151,0)
 I XUSQI'=XUSQIK1 Q 0
"RTN","XUSNPIE1",152,0)
 I $P($P(XUSQIK,"^",4),";")="Inactive" Q 0
"RTN","XUSNPIE1",153,0)
 N XUSROOT S XUSROOT=$$GET^XPAR("PKG.KERNEL","XUSNPI QUALIFIED IDENTIFIER",XUSQIK1)
"RTN","XUSNPIE1",154,0)
 I $E(XUSROOT)'="^" S XUSROOT="^"_XUSROOT
"RTN","XUSNPIE1",155,0)
 N XUS1 S XUS1=XUSROOT_XUSDA_","_"""NPISTATUS"""_","_"""A"""_")"
"RTN","XUSNPIE1",156,0)
 N XUS2 S XUS2=$O(@XUS1,-1) I XUS2'>0 Q 1
"RTN","XUSNPIE1",157,0)
 S XUS1=XUSROOT_XUSDA_","_"""NPISTATUS"""_","_XUS2_","_0_")"
"RTN","XUSNPIE1",158,0)
 S XUS2=$G(@XUS1) I $P(XUS2,"^",3)=XUSNPI Q 1
"RTN","XUSNPIE1",159,0)
 Q 0
"RTN","XUSNPIE2")
0^7^B60490192^n/a
"RTN","XUSNPIE2",1,0)
XUSNPIE2 ;FO-OAKLAND/JLI - DATA ENTRY FOR INITIAL NPI VALUES ;09/14/06  09:26
"RTN","XUSNPIE2",2,0)
 ;;8.0;KERNEL;**410**;Jul 10, 1995;Build 27
"RTN","XUSNPIE2",3,0)
 Q
"RTN","XUSNPIE2",4,0)
 ;
"RTN","XUSNPIE2",5,0)
PRINTOPT ;
"RTN","XUSNPIE2",6,0)
 N DIR,%ZIS,ION,OPTION,PRNTFRMT,XUSDIV,XUSSORT,Y,ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","XUSNPIE2",7,0)
 W !,"Select one of the following:",!!,?11,"1",?21,"All providers",!,?11,"2",?21,"All providers without NPI numbers",!
"RTN","XUSNPIE2",8,0)
 S DIR(0)="N^1:2",DIR("A")="Select a report option: ",DIR("B")="1" D ^DIR K DIR Q:Y'>0  S OPTION=+Y
"RTN","XUSNPIE2",9,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Sort by DIVISION" D ^DIR K DIR S XUSDIV=+Y
"RTN","XUSNPIE2",10,0)
 S PRNTFRMT=1 I XUSDIV D
"RTN","XUSNPIE2",11,0)
 . S DIR(0)="N^1:2",DIR("A")="Output type (1=Printed text or 2=^-delimited):" D ^DIR K DIR Q:Y'>0  S PRNTFRMT=Y
"RTN","XUSNPIE2",12,0)
 . Q
"RTN","XUSNPIE2",13,0)
 S DIR(0)="Y",DIR("B")="YES",DIR("A")="Sort by SERVICE/SECTION"_$S(XUSDIV>0:" (as well)",1:"") D ^DIR K DIR S XUSSORT=+Y
"RTN","XUSNPIE2",14,0)
 I PRNTFRMT'=2 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","XUSNPIE2",15,0)
 I $D(IO("Q")) S ZTSAVE("OPTION")="",ZTSAVE("XUSSORT")="",ZTSAVE("XUSDIV")="",ZTSAVE("PRNTFRMT")="",ZTIO=ION,ZTRTN="DQ^XUSNPIE2",ZTDESC="NPI PRINT JOB FOR OPTION "_OPTION D ^%ZTLOAD W:$D(ZTSK) !,"Queued as Task "_ZTSK Q
"RTN","XUSNPIE2",16,0)
 ;
"RTN","XUSNPIE2",17,0)
DQ ; entry point for queued print job
"RTN","XUSNPIE2",18,0)
 I PRNTFRMT=2 R !,"START YOUR CAPTURE NOW AND ENTER RETURN (OR WAIT 30 SECONDS):",Y:30
"RTN","XUSNPIE2",19,0)
 U IO D PRNTPROV(OPTION,XUSSORT,XUSDIV,PRNTFRMT)
"RTN","XUSNPIE2",20,0)
 I PRNTFRMT=2 W !,"TURN OFF CAPTURE NOW"
"RTN","XUSNPIE2",21,0)
 I IO'=IO(0) U IO D ^%ZISC
"RTN","XUSNPIE2",22,0)
 D HOME^%ZIS
"RTN","XUSNPIE2",23,0)
 Q
"RTN","XUSNPIE2",24,0)
 ;
"RTN","XUSNPIE2",25,0)
PRNTPROV(OPTION,XUSSORT,XUSDIV,PRNTFRMT) ;
"RTN","XUSNPIE2",26,0)
 ; PRINT PROVIDER INFO
"RTN","XUSNPIE2",27,0)
 ;
"RTN","XUSNPIE2",28,0)
 ; OPTION   SPECIFIES TYPE OF PRINT - 1=ALL PROVIDERS, 2=NEEDS NPI ONLY
"RTN","XUSNPIE2",29,0)
 ; XUSSORT  INDICATES WHETHER SORTED BY SERVICE/SECTION
"RTN","XUSNPIE2",30,0)
 ; XUSDIV   INDICATES WHETHER SORTED BY DIVISION
"RTN","XUSNPIE2",31,0)
 ; PRNTFRMT INDICATES TYPE OF OUTPUT, PRINTED OR ^-DELIMITED
"RTN","XUSNPIE2",32,0)
 ;
"RTN","XUSNPIE2",33,0)
 ; ZEXCEPT: IOSL    - KERNEL VARIABLE
"RTN","XUSNPIE2",34,0)
 N PAGENUM,LINENUM,PROVNAME,TAXDESCR,TAXONOMY,SERVSECT,DIRUT,DTOUT
"RTN","XUSNPIE2",35,0)
 N GLOBLOC,IEN,NPI,DATETIME,GLOBVALU,NCOUNT,GLOBLOC1,XUSDIVNM,CNTTOTAL,CNTNONE,CNTEXMPT,CNTDONE
"RTN","XUSNPIE2",36,0)
 S CNTTOTAL=0,CNTNONE=0,CNTEXMPT=0,CNTDONE=0
"RTN","XUSNPIE2",37,0)
 S PAGENUM=0,LINENUM=0
"RTN","XUSNPIE2",38,0)
 S DATETIME=$$NOW^XLFDT()
"RTN","XUSNPIE2",39,0)
 S GLOBLOC1=$$GETDATA(OPTION,XUSSORT,XUSDIV)
"RTN","XUSNPIE2",40,0)
 I PRNTFRMT'=1 W !,"PROVIDER_NAME^LAST4^IEN^NPI^TAXONOMY_CODE^TAXONOMY DESCRIPTION"_$S(XUSDIV:"^DIVISION",1:"")_$S(XUSSORT:"^SERVICE/SECTION",1:"")
"RTN","XUSNPIE2",41,0)
 S GLOBLOC=GLOBLOC1,XUSDIVNM="" F  S XUSDIVNM=$O(@GLOBLOC1@(XUSDIVNM)) Q:XUSDIVNM=""  D  Q:$D(DIRUT)!$D(DTOUT)
"RTN","XUSNPIE2",42,0)
 . S SERVSECT="" F  S SERVSECT=$O(@GLOBLOC1@(XUSDIVNM,SERVSECT)) Q:SERVSECT=""  S GLOBLOC=$NA(@GLOBLOC1@(XUSDIVNM,SERVSECT)) D  Q:$D(DIRUT)!$D(DTOUT)
"RTN","XUSNPIE2",43,0)
 . . I PRNTFRMT=1 D HEADER(OPTION,DATETIME,.PAGENUM,.LINENUM,XUSDIV,XUSDIVNM,XUSSORT,SERVSECT) Q:$D(DIRUT)!$D(DTOUT)
"RTN","XUSNPIE2",44,0)
 . . S PROVNAME="" F  S PROVNAME=$O(@GLOBLOC@(PROVNAME)) Q:PROVNAME=""  Q:$D(DIRUT)!$D(DTOUT)  S IEN=0 F  S IEN=$O(@GLOBLOC@(PROVNAME,IEN)) Q:IEN'>0  D  Q:$D(DIRUT)!$D(DTOUT)
"RTN","XUSNPIE2",45,0)
 . . . S NCOUNT=0
"RTN","XUSNPIE2",46,0)
 . . . S TAXDESCR="" F  S TAXDESCR=$O(@GLOBLOC@(PROVNAME,IEN,TAXDESCR)) Q:TAXDESCR=""  S GLOBVALU=@GLOBLOC@(PROVNAME,IEN,TAXDESCR) D
"RTN","XUSNPIE2",47,0)
 . . . . S NPI=$P(GLOBVALU,U,3),TAXONOMY=$P(GLOBVALU,U,4)  I PRNTFRMT=1 S NCOUNT=NCOUNT+1 W:NCOUNT=1 !,PROVNAME,?33,$$ALIGNRGT(IEN,11),?49,NPI W !,?6,TAXONOMY,"  ",TAXDESCR
"RTN","XUSNPIE2",48,0)
 . . . . I PRNTFRMT'=1 W !,PROVNAME_U_$E($$GET1^DIQ(200,IEN_",",9),6,9)_U_IEN_U_NPI_U_TAXONOMY_U_TAXDESCR_$S(XUSDIV:U_XUSDIVNM,1:"")_$S(XUSSORT:U_SERVSECT,1:"")
"RTN","XUSNPIE2",49,0)
 . . . . Q
"RTN","XUSNPIE2",50,0)
 . . . I PRNTFRMT=1 S LINENUM=LINENUM+NCOUNT+1 I LINENUM>(IOSL-4) D HEADER(OPTION,DATETIME,.PAGENUM,.LINENUM,XUSDIV,XUSDIVNM,XUSSORT,SERVSECT) Q:$D(DIRUT)!$D(DTOUT)
"RTN","XUSNPIE2",51,0)
 . . . Q
"RTN","XUSNPIE2",52,0)
 . . Q
"RTN","XUSNPIE2",53,0)
 . Q
"RTN","XUSNPIE2",54,0)
 I '($D(DIRUT)!$D(DTOUT)),PRNTFRMT=1 D
"RTN","XUSNPIE2",55,0)
 . S PROVNAME="" I $O(@GLOBLOC@(PROVNAME))="" W !,?20,"* * * N O  D A T A  F O U N D * * *",!! I 1
"RTN","XUSNPIE2",56,0)
 . E  W !!,"Total Billable Providers:",?43,CNTTOTAL,!,"Billable Providers with an NPI:",?43,CNTDONE,!,"EXEMPT Billable Providers:",?43,CNTEXMPT,!,"Billable Providers Still Needing an NPI:",?43,CNTNONE
"RTN","XUSNPIE2",57,0)
 . W !!,?27,"*** End of Report ***"
"RTN","XUSNPIE2",58,0)
 . Q
"RTN","XUSNPIE2",59,0)
 Q
"RTN","XUSNPIE2",60,0)
 ;
"RTN","XUSNPIE2",61,0)
HEADER(OPTION,DATETIME,PAGNOREF,LINNOREF,XUSDIV,XUSDIVNM,XUSSORT,SERVSECT) ;
"RTN","XUSNPIE2",62,0)
 ; ZEXCEPT: IOF,IOST  KERNEL IO VARIABLES
"RTN","XUSNPIE2",63,0)
 ; ZEXCEPT: DIRUT,DTOUT  NEWED IN CALLING PRNTPROV - INDICATE QUIT TO PRNTPROV
"RTN","XUSNPIE2",64,0)
 N TEMPVAL,DIR,X,Y
"RTN","XUSNPIE2",65,0)
 S PAGNOREF=PAGNOREF+1
"RTN","XUSNPIE2",66,0)
 ; Don't page feed on the first page
"RTN","XUSNPIE2",67,0)
 IF PAGNOREF>1 I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR I 'Y S DIRUT=1 Q
"RTN","XUSNPIE2",68,0)
 IF PAGNOREF>1 W @IOF
"RTN","XUSNPIE2",69,0)
 W:$E(IOST,1,2)'="C-" ! W "Active Provider Report",?48,$$FMTE^XLFDT(DATETIME),"  Page: ",PAGNOREF
"RTN","XUSNPIE2",70,0)
 W !," Report Option: Provider List       Active Providers",$S(OPTION=2:" Without NPI Numbers",1:"")
"RTN","XUSNPIE2",71,0)
 W !!,"Provider Name",?39,"IEN",?49,$S(OPTION'=2:"NPI",1:"")
"RTN","XUSNPIE2",72,0)
 W !,"      Taxonomy"
"RTN","XUSNPIE2",73,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","XUSNPIE2",74,0)
 S LINNOREF=6
"RTN","XUSNPIE2",75,0)
 I XUSDIV W !,"DIVISION: ",XUSDIVNM,"   " S LINNOREF=LINNOREF+1
"RTN","XUSNPIE2",76,0)
 I XUSSORT W:'XUSDIV ! W "SERVICE/SECTION: ",SERVSECT S:'XUSDIV LINNOREF=LINNOREF+1
"RTN","XUSNPIE2",77,0)
 Q
"RTN","XUSNPIE2",78,0)
 ;
"RTN","XUSNPIE2",79,0)
GETDATA(OPTION,XUSSORT,XUSDIV) ; get data for reports for providers
"RTN","XUSNPIE2",80,0)
 N NPI,PROVNAME,TAXDESCR,TAXONOMY,XUSDEFLT,XUSDIVCN,XUSDIVN,XUSDIVNM,XUSGLOB
"RTN","XUSNPIE2",81,0)
 N XUSIEN,XUSSERVC,XUSVAL,CNTCLEAN
"RTN","XUSNPIE2",82,0)
 ; ZEXCEPT: CNTTOTAL,CNTNONE,CNTEXMPT,CNTDONE - NEWed and initialized in PRNTPROV or killed based on CNTCLEAN
"RTN","XUSNPIE2",83,0)
 S CNTCLEAN=0 I '$D(CNTTOTAL) S CNTCLEAN=1
"RTN","XUSNPIE2",84,0)
 S XUSGLOB=$NA(^TMP($J,"XUSNPIPRNT")) K @XUSGLOB
"RTN","XUSNPIE2",85,0)
 I 'XUSDIV S XUSDIVNM(1)=" ",XUSDEFLT=" "
"RTN","XUSNPIE2",86,0)
 I XUSDIV S XUSDEFLT=$$NS^XUAF4($$KSP^XUPARAM("INST")),XUSDEFLT=$P(XUSDEFLT,U)
"RTN","XUSNPIE2",87,0)
 I 'XUSSORT S XUSSERVC=" "
"RTN","XUSNPIE2",88,0)
 F XUSIEN=0:0 S XUSIEN=$O(^VA(200,XUSIEN)) Q:XUSIEN'>0  I ($$NPISTATS^XUSNPIED(XUSIEN)="D")!$$ACTIVE^XUSER(XUSIEN) S XUSVAL=$$CHEKNPI^XUSNPIED(XUSIEN),XUSVAL=$$NPISTATS^XUSNPIED(XUSIEN) I XUSVAL'="",(XUSVAL="N")!(OPTION'=2) D
"RTN","XUSNPIE2",89,0)
 . S PROVNAME=$$GET1^DIQ(200,XUSIEN_",",.01),NPI=$$GETNPI^XUSNPIED(XUSIEN),TAXONOMY=$$GETTAXON^XUSNPIED(XUSIEN,.TAXDESCR) I TAXONOMY=-1 S TAXONOMY=" ",TAXDESCR=" "
"RTN","XUSNPIE2",90,0)
 . I NPI="",$$EXMPTNPI^XUSNPIED(XUSIEN) S NPI="EXEMPTED  "
"RTN","XUSNPIE2",91,0)
 . S CNTTOTAL=$G(CNTTOTAL)+1 S:NPI="" CNTNONE=$G(CNTNONE)+1 S:NPI="EXEMPTED  " CNTEXMPT=$G(CNTEXMPT)+1 S:NPI?10N CNTDONE=$G(CNTDONE)+1
"RTN","XUSNPIE2",92,0)
 . I XUSSORT S XUSSERVC=$$GET1^DIQ(200,XUSIEN_",",29) I XUSSERVC="" S XUSSERVC=" "
"RTN","XUSNPIE2",93,0)
 . I XUSDIV K XUSDIVNM S XUSDIVCN=0 D
"RTN","XUSNPIE2",94,0)
 . . I '$D(^VA(200,XUSIEN,2)) S XUSDIVNM(1)=XUSDEFLT Q
"RTN","XUSNPIE2",95,0)
 . . F XUSDIVN=0:0 S XUSDIVN=$O(^VA(200,XUSIEN,2,XUSDIVN)) Q:XUSDIVN'>0  S XUSDIVCN=XUSDIVCN+1,XUSDIVNM(XUSDIVCN)=$$GET1^DIQ(200.02,XUSDIVN_","_XUSIEN_",",.01)
"RTN","XUSNPIE2",96,0)
 . . Q
"RTN","XUSNPIE2",97,0)
 . F XUSDIVN=0:0 S XUSDIVN=$O(XUSDIVNM(XUSDIVN)) Q:XUSDIVN'>0  S @XUSGLOB@(XUSDIVNM(XUSDIVN),XUSSERVC,PROVNAME,XUSIEN,TAXDESCR)=PROVNAME_U_XUSIEN_U_NPI_U_TAXONOMY_U_TAXDESCR
"RTN","XUSNPIE2",98,0)
 . Q
"RTN","XUSNPIE2",99,0)
 I CNTCLEAN K CNTTOTAL,CNTNONE,CNTEXMPT,CNTDONE
"RTN","XUSNPIE2",100,0)
 Q XUSGLOB
"RTN","XUSNPIE2",101,0)
 ;
"RTN","XUSNPIE2",102,0)
ALIGNRGT(TEXT,WIDTH) ; align text right in a specified width
"RTN","XUSNPIE2",103,0)
 N RESULT
"RTN","XUSNPIE2",104,0)
 S $P(RESULT," ",WIDTH)=" ",RESULT=RESULT_TEXT,RESULT=$E(RESULT,$L(RESULT)-WIDTH+1,$L(RESULT))
"RTN","XUSNPIE2",105,0)
 Q RESULT
"RTN","XUSNPIE2",106,0)
 ;
"RTN","XUSNPIE2",107,0)
CHKOLD1(IEN) ; check for earlier value, and activate if present
"RTN","XUSNPIE2",108,0)
 N IEN1,STATUS,NPI,DATE,XUFDA
"RTN","XUSNPIE2",109,0)
 S IEN1=$O(^VA(200,IEN,"NPISTATUS"," "),-1) I IEN1>0 D  I STATUS=0 D CHKOLD1(IEN)
"RTN","XUSNPIE2",110,0)
 . S STATUS=^VA(200,IEN,"NPISTATUS",IEN1,0),NPI=$P(STATUS,U,3),DATE=$P(STATUS,U),STATUS=$P(STATUS,U,2)
"RTN","XUSNPIE2",111,0)
 . I STATUS=0 D DELETNPI(IEN,IEN1,DATE) Q  ; entry making it INACTIVE - remove it
"RTN","XUSNPIE2",112,0)
 . I STATUS=1 D SET^XUSNPIE1(IEN,NPI)
"RTN","XUSNPIE2",113,0)
 . Q
"RTN","XUSNPIE2",114,0)
 Q
"RTN","XUSNPIE2",115,0)
 ;
"RTN","XUSNPIE2",116,0)
DELETNPI(IEN,OIEN,ODATEVAL) ;
"RTN","XUSNPIE2",117,0)
 N XUFDA
"RTN","XUSNPIE2",118,0)
 I $D(ODATEVAL) S XUFDA(200.042,OIEN_","_IEN_",",.01)="@"
"RTN","XUSNPIE2",119,0)
 S XUFDA(200,IEN_",",41.99)="@",XUFDA(200,IEN_",",41.98)="@"
"RTN","XUSNPIE2",120,0)
 D FILE^DIE("","XUFDA")
"RTN","XUSNPIE2",121,0)
 Q
"RTN","XUSNPIE2",122,0)
 ;
"RTN","XUSNPIE2",123,0)
CLERXMPT ; edit entry indicating whether a provider is exempt from needing an NPI
"RTN","XUSNPIE2",124,0)
 N DIC,DIR,FDA,IEN,Y
"RTN","XUSNPIE2",125,0)
 W ! S DIC="^VA(200,",DIC(0)="AEQ" S DIC("A")="select Provider: " D ^DIC Q:Y'>0  S IEN=+Y
"RTN","XUSNPIE2",126,0)
 I $$HASNPI^XUSNPIED(IEN) W !,"This Provider already has an NPI value.  Nothing to do." Q
"RTN","XUSNPIE2",127,0)
 I '$$CHEKNPI^XUSNPIED(IEN),'$$EXMPTNPI^XUSNPIED(IEN) W !,"This Provider does not appear to need an NPI or Exemption." Q
"RTN","XUSNPIE2",128,0)
 I $$EXMPTNPI^XUSNPIED(IEN) D  Q  ; currently marked as Exempt
"RTN","XUSNPIE2",129,0)
 . S DIR(0)="Y",DIR("A")="Provider is currently EXEMPT from needing an NPI, set to NEEDS an NPI (Y/N)" D ^DIR I 'Y Q
"RTN","XUSNPIE2",130,0)
 . S FDA(200,IEN_",",41.98)="N" D FILE^DIE("","FDA")
"RTN","XUSNPIE2",131,0)
 . W !,$S($$NEEDSNPI^XUSNPIED(IEN):"File updated",1:"Ecountered a problem updating file, status NOT set to NEEDS an NPI")
"RTN","XUSNPIE2",132,0)
 . Q
"RTN","XUSNPIE2",133,0)
 ; check to make sure provider should be exempt
"RTN","XUSNPIE2",134,0)
 S DIR(0)="Y",DIR("A")="Confirm that Provider should be Exempt from needing an NPI (Y/N)" D ^DIR I 'Y Q
"RTN","XUSNPIE2",135,0)
 ; and update file to show as exempt
"RTN","XUSNPIE2",136,0)
 S FDA(200,IEN_",",41.98)="E" D FILE^DIE("","FDA")
"RTN","XUSNPIE2",137,0)
 W !,$S($$EXMPTNPI^XUSNPIED(IEN):"File updated",1:"Ecountered a problem updating file, status NOT set to EXEMPT")
"RTN","XUSNPIE2",138,0)
 Q
"RTN","XUSNPIED")
0^5^B22186958^B59937422
"RTN","XUSNPIED",1,0)
XUSNPIED ;FO-OAKLAND/JLI - DATA ENTRY FOR INITIAL NPI VALUES ;8/14/06  12:59
"RTN","XUSNPIED",2,0)
 ;;8.0;KERNEL;**420,410**;Jul 10, 1995;Build 27
"RTN","XUSNPIED",3,0)
 Q
"RTN","XUSNPIED",4,0)
 ;
"RTN","XUSNPIED",5,0)
SIGNON ; run at user sign-on to display message if NPI value is needed.
"RTN","XUSNPIED",6,0)
 D SIGNON^XUSNPIE1
"RTN","XUSNPIED",7,0)
 Q
"RTN","XUSNPIED",8,0)
 ;
"RTN","XUSNPIED",9,0)
CLEREDIT ; Input editing of NPI value for clerical staff - ask provider
"RTN","XUSNPIED",10,0)
 N IEN,DIC,PROVNAME,DATEVAL,DESCRIP,DONE,IENS,NPIVAL1,NPIVAL2,Y,XX
"RTN","XUSNPIED",11,0)
 F  W ! S DIC="^VA(200,",DIC(0)="AEQ" S DIC("A")="Select Provider: " D ^DIC Q:Y'>0  S IEN=+Y D EDITNPI(IEN)
"RTN","XUSNPIED",12,0)
 Q
"RTN","XUSNPIED",13,0)
 ;
"RTN","XUSNPIED",14,0)
USEREDIT ; Entry point for provider to enter own data
"RTN","XUSNPIED",15,0)
 I $$NPISTATS(DUZ)="" W !,$C(7),"Please see your local NPI facilitator to add the NPI",! H 3 Q
"RTN","XUSNPIED",16,0)
 D EDITNPI(DUZ)
"RTN","XUSNPIED",17,0)
 Q
"RTN","XUSNPIED",18,0)
 ;
"RTN","XUSNPIED",19,0)
EDITNPI(IEN) ;
"RTN","XUSNPIED",20,0)
 D EDITNPI^XUSNPIE1(IEN)
"RTN","XUSNPIED",21,0)
 Q
"RTN","XUSNPIED",22,0)
 ;
"RTN","XUSNPIED",23,0)
CLERXMPT ;
"RTN","XUSNPIED",24,0)
 D CLERXMPT^XUSNPIE1
"RTN","XUSNPIED",25,0)
 Q
"RTN","XUSNPIED",26,0)
 ;
"RTN","XUSNPIED",27,0)
CHKGLOB() ; returns global location of TAXONOMY values also rebuilds if they are missing
"RTN","XUSNPIED",28,0)
 Q $$CHKGLOB^XUSNPIDA()
"RTN","XUSNPIED",29,0)
 ;
"RTN","XUSNPIED",30,0)
DOUSER(XUUSER,XUGLOB) ; check user for needing an NPI status value
"RTN","XUSNPIED",31,0)
 N PCLASS,XUDONE,PVAL,CODE,NPISTATS,XUVALUE,D0,EXPIRATN,I,NPIFLD,NPISUBFL
"RTN","XUSNPIED",32,0)
 S NPISTATS=41.98,NPISUBFL=200.042,NPIFLD=.03
"RTN","XUSNPIED",33,0)
 I $$GET1^DIQ(200,XUUSER_",",NPISTATS)'="" Q  ; user is already flagged
"RTN","XUSNPIED",34,0)
 S PCLASS=0,XUDONE=0 F  S PCLASS=$O(^VA(200,XUUSER,"USC1",PCLASS)) Q:PCLASS'>0  S D0=^(PCLASS,0) D  Q:XUDONE
"RTN","XUSNPIED",35,0)
 . S EXPIRATN=$P(D0,U,3)>0 I EXPIRATN Q
"RTN","XUSNPIED",36,0)
 . S PVAL=$P(D0,U),CODE=$$GET1^DIQ(8932.1,PVAL_",",6) I CODE'="",$D(@XUGLOB@(CODE)) D  S XUDONE=1 Q
"RTN","XUSNPIED",37,0)
 . . S XUVALUE="N" N NPIVAL F I=1:1 S NPIVAL=$$GET1^DIQ(NPISUBFL,I_","_XUUSER_",",NPIFLD) Q:NPIVAL=""  S XUVALUE="D" Q
"RTN","XUSNPIED",38,0)
 . . N XUFDA S XUFDA(200,XUUSER_",",NPISTATS)=XUVALUE
"RTN","XUSNPIED",39,0)
 . . D FILE^DIE("","XUFDA")
"RTN","XUSNPIED",40,0)
 . . Q
"RTN","XUSNPIED",41,0)
 . Q
"RTN","XUSNPIED",42,0)
 Q
"RTN","XUSNPIED",43,0)
 ;
"RTN","XUSNPIED",44,0)
CBOLIST ; list ^ delimited output to CBO exchange mail group.
"RTN","XUSNPIED",45,0)
 N DATE,DOMAIN,ADDRESS,STATNAME,COUNT,DOB,GLOBLOC,GLOBOUT
"RTN","XUSNPIED",46,0)
 N IEN,NPI,PROVNAME,SSN,TAXDESCR,TAXONOMY,STATION,STATUS,OPTION
"RTN","XUSNPIED",47,0)
 I '$$PROD^XUPROD() Q  ; messages from production systems only
"RTN","XUSNPIED",48,0)
 S DATE=(1700+$E(DT,1,3))_"-"_$E(DT,4,5)_"-"_$E(DT,6,7)
"RTN","XUSNPIED",49,0)
 S DOMAIN=$G(^XTV(8989.3,1,0)),DOMAIN=$P(DOMAIN,U)
"RTN","XUSNPIED",50,0)
 S STATION=$$NS^XUAF4($$KSP^XUPARAM("INST"))
"RTN","XUSNPIED",51,0)
 S ADDRESS=$P(STATION,U) ;$$GET1^DIQ(4.2,DOMAIN_",",.01)
"RTN","XUSNPIED",52,0)
 S STATION=$P(STATION,U,2) ;$$GET1^DIQ(4.2,DOMAIN_",",5.5)
"RTN","XUSNPIED",53,0)
 S OPTION=3
"RTN","XUSNPIED",54,0)
 S GLOBLOC=$$GETDATA(OPTION,0,0) ; get most of data into location specified by GLOBLOC
"RTN","XUSNPIED",55,0)
 S COUNT=0,GLOBOUT=$NA(^TMP($J,"XUSNPIOUT")) K @GLOBOUT
"RTN","XUSNPIED",56,0)
 S COUNT=1,@GLOBOUT@(COUNT)="--START"
"RTN","XUSNPIED",57,0)
 S GLOBLOC=$NA(@GLOBLOC@(" "," "))
"RTN","XUSNPIED",58,0)
 S PROVNAME="" F  S PROVNAME=$O(@GLOBLOC@(PROVNAME)) Q:PROVNAME=""  S IEN=0 F  S IEN=$O(@GLOBLOC@(PROVNAME,IEN)) Q:IEN'>0  D
"RTN","XUSNPIED",59,0)
 . S TAXDESCR="" F  S TAXDESCR=$O(@GLOBLOC@(PROVNAME,IEN,TAXDESCR)) Q:TAXDESCR=""  S TAXONOMY=$P(^(TAXDESCR),U,4),NPI=$P(^(TAXDESCR),U,3) D
"RTN","XUSNPIED",60,0)
 . . S DOB=$P($G(^VA(200,IEN,1)),U,3),SSN=$E($$GET1^DIQ(200,IEN_",",9),6,9) S:DOB'="" DOB=$$DATE10(DOB) S STATUS=$$NPISTATS(IEN)
"RTN","XUSNPIED",61,0)
 . . S COUNT=COUNT+1,@GLOBOUT@(COUNT)=PROVNAME_U_STATION_U_NPI_U_SSN_U_DOB_U_TAXONOMY_U_TAXDESCR_U_DATE_U_STATUS
"RTN","XUSNPIED",62,0)
 . . Q
"RTN","XUSNPIED",63,0)
 . Q
"RTN","XUSNPIED",64,0)
 S COUNT=COUNT+1,@GLOBOUT@(COUNT)="--END"
"RTN","XUSNPIED",65,0)
 ; and generate mail message
"RTN","XUSNPIED",66,0)
 N XMTEXT,XMDUZ,XMY,XMSUB
"RTN","XUSNPIED",67,0)
 S XMTEXT=$E(GLOBOUT,1,$L(GLOBOUT)-1)_",",XMDUZ=0.5,XMY("VHACONPINPF@VA.GOV")=""
"RTN","XUSNPIED",68,0)
 S XMSUB="NPI LIST "_DATE_" FOR "_ADDRESS_" ("_STATION_")"
"RTN","XUSNPIED",69,0)
 D ^XMD
"RTN","XUSNPIED",70,0)
 Q
"RTN","XUSNPIED",71,0)
 ;
"RTN","XUSNPIED",72,0)
PRINTOPT ;
"RTN","XUSNPIED",73,0)
 D PRINTOPT^XUSNPIE2
"RTN","XUSNPIED",74,0)
 Q
"RTN","XUSNPIED",75,0)
GETDATA(OPTION,XUSSORT,XUSDIV) ; get data for reports for providers
"RTN","XUSNPIED",76,0)
 Q $$GETDATA^XUSNPIE2(OPTION,XUSSORT,XUSDIV)
"RTN","XUSNPIED",77,0)
 ;
"RTN","XUSNPIED",78,0)
CHEKNPI(IEN) ; returns whether status is Needs, will check and update if not set
"RTN","XUSNPIED",79,0)
 N VALUE,FDA
"RTN","XUSNPIED",80,0)
 S VALUE=$$NPISTATS(IEN)
"RTN","XUSNPIED",81,0)
 I VALUE="",$$CHKTAXON(IEN) S FDA(200,IEN_",",41.98)="N" D FILE^DIE("","FDA") S VALUE="N"
"RTN","XUSNPIED",82,0)
 Q VALUE="N"
"RTN","XUSNPIED",83,0)
 ;
"RTN","XUSNPIED",84,0)
NEEDSNPI(IEN) ; returns whether current status is N
"RTN","XUSNPIED",85,0)
 Q $$NPISTATS(IEN)="N"
"RTN","XUSNPIED",86,0)
 ;
"RTN","XUSNPIED",87,0)
HASNPI(IEN) ; returns whether current status is D (Done)
"RTN","XUSNPIED",88,0)
 Q $$NPISTATS(IEN)="D"
"RTN","XUSNPIED",89,0)
 ;
"RTN","XUSNPIED",90,0)
EXMPTNPI(IEN) ; returns whether current status is E (Exempt)
"RTN","XUSNPIED",91,0)
 Q $$NPISTATS(IEN)="E"
"RTN","XUSNPIED",92,0)
 ;
"RTN","XUSNPIED",93,0)
NPISTATS(IEN) ; returns one letter status indicator
"RTN","XUSNPIED",94,0)
 Q $E($$GET1^DIQ(200,IEN_",",41.98))
"RTN","XUSNPIED",95,0)
 ;
"RTN","XUSNPIED",96,0)
GETNPI(IEN) ; returns current NPI value
"RTN","XUSNPIED",97,0)
 Q $$GET1^DIQ(200,IEN_",",41.99)
"RTN","XUSNPIED",98,0)
 ;
"RTN","XUSNPIED",99,0)
GETTAXON(IEN,DESCRREF) ; returns Taxonomy value (X12) and sets description in DESCRREF, otherwise -1
"RTN","XUSNPIED",100,0)
 N I,POINTER,TAXON
"RTN","XUSNPIED",101,0)
 S TAXON=-1,DESCRREF=" "
"RTN","XUSNPIED",102,0)
 F I=0:0 S I=$O(^VA(200,IEN,"USC1",I)) Q:I'>0  I $P(^(I,0),U,3)'>0 S POINTER=+^(0) S TAXON=$$GET1^DIQ(8932.1,POINTER_",",6),DESCRREF=$$GET1^DIQ(8932.1,POINTER_",",1) Q
"RTN","XUSNPIED",103,0)
 I TAXON="" S TAXON=-1,DESCRREF=" "
"RTN","XUSNPIED",104,0)
 Q TAXON
"RTN","XUSNPIED",105,0)
 ;
"RTN","XUSNPIED",106,0)
CHKTAXON(IEN,TAXONOMY) ; checks whether taxonomy value (X12) is in list of billable otherwise 0-1
"RTN","XUSNPIED",107,0)
 N DESCRIP,XUSGLOB
"RTN","XUSNPIED",108,0)
 I $G(TAXONOMY)="" S TAXONOMY=$$GETTAXON(IEN,.DESCRIP)
"RTN","XUSNPIED",109,0)
 S XUSGLOB=$$CHKGLOB()
"RTN","XUSNPIED",110,0)
 Q $D(@XUSGLOB@(TAXONOMY))
"RTN","XUSNPIED",111,0)
 ;
"RTN","XUSNPIED",112,0)
DATE10(DATE) ; returns date in mm/dd/yyyyy format
"RTN","XUSNPIED",113,0)
 Q $E(DATE,4,5)_"/"_$E(DATE,6,7)_"/"_(1700+$E(DATE,1,3))
"RTN","XUSNPIED",114,0)
 ;
"RTN","XUSNPIED",115,0)
POSTINIT ; runs post init
"RTN","XUSNPIED",116,0)
 D POSTINIT^XUSNPIE1
"RTN","XUSNPIED",117,0)
 Q
"RTN","XUSNPIED",118,0)
 ;
"RTN","XUSNPIED",119,0)
CBOQUEUE ; queues CBO List to run on first day of month
"RTN","XUSNPIED",120,0)
 D CBOQUEUE^XUSNPIE1
"RTN","XUSNPIED",121,0)
 Q
"RTN","XUSNPIED",122,0)
ALIGNRGT(TEXT,WIDTH) ; align text right in a specified width
"RTN","XUSNPIED",123,0)
 Q $$ALIGNRGT^XUSNPIE2(TEXT,WIDTH)
"RTN","XUSTAX")
0^2^B7294998^n/a
"RTN","XUSTAX",1,0)
XUSTAX ;PRXM/GCD, TAXONOMY CODE LOOKUP FOR INTEGRATED BILLING ;
"RTN","XUSTAX",2,0)
        ;;8.0;KERNEL;**410**; July 10, 1997;Build 27
"RTN","XUSTAX",3,0)
        ;
"RTN","XUSTAX",4,0)
        ; Must call at an entry point.
"RTN","XUSTAX",5,0)
        Q
"RTN","XUSTAX",6,0)
        ;
"RTN","XUSTAX",7,0)
        ; TAXIND - Extrinsic function to retrieve the taxonomy code
"RTN","XUSTAX",8,0)
        ;          for a given record in the NEW PERSON file (#200).
"RTN","XUSTAX",9,0)
        ;
"RTN","XUSTAX",10,0)
        ; Input
"RTN","XUSTAX",11,0)
        ;    XUIEN - IEN of the record in file #200
"RTN","XUSTAX",12,0)
        ; Output
"RTN","XUSTAX",13,0)
        ;    Piece 1 = Taxonomy X12 code of the record in file #200
"RTN","XUSTAX",14,0)
        ;    Piece 2 = Taxonomy IEN from file 8932.1
"RTN","XUSTAX",15,0)
TAXIND(XUIEN) ; Get taxonomy for an individual
"RTN","XUSTAX",16,0)
            N U S U="^"
"RTN","XUSTAX",17,0)
        I $G(XUIEN)'>0 Q U
"RTN","XUSTAX",18,0)
        I (XUIEN?.N)=0 Q U
"RTN","XUSTAX",19,0)
        N IEN,XUPTR,XUTAXARR,DIC,DR,DA,DIQ,DI,D0,XUTAX
"RTN","XUSTAX",20,0)
        S IEN=0,XUPTR=""
"RTN","XUSTAX",21,0)
        F  S IEN=$O(^VA(200,XUIEN,"USC1",IEN)) Q:'IEN  D  Q:XUPTR'=""
"RTN","XUSTAX",22,0)
        . S DIC=200,DR=8932.1,DA=XUIEN,DR(200.05)=".01:3",DA(200.05)=IEN,DIQ="XUTAXARR",DIQ(0)="I"
"RTN","XUSTAX",23,0)
        . D EN^DIQ1
"RTN","XUSTAX",24,0)
        . I XUTAXARR(200.05,IEN,"2","I")>DT Q  ; Not effective yet
"RTN","XUSTAX",25,0)
        . I XUTAXARR(200.05,IEN,"3","I")'="",XUTAXARR(200.05,1,"3","I")<DT Q  ; Expired
"RTN","XUSTAX",26,0)
        . S XUPTR=XUTAXARR(200.05,IEN,".01","I")
"RTN","XUSTAX",27,0)
        S XUTAX=$$GET1^DIQ(8932.1,XUPTR,"X12 CODE")
"RTN","XUSTAX",28,0)
        Q XUTAX_U_XUPTR
"RTN","XUSTAX",29,0)
        ;
"RTN","XUSTAX",30,0)
        ; TAXORG - Extrinsic function to retrieve the taxonomy code
"RTN","XUSTAX",31,0)
        ;          for a given record in the INSTITUTION file (#4).
"RTN","XUSTAX",32,0)
        ;
"RTN","XUSTAX",33,0)
        ; Input
"RTN","XUSTAX",34,0)
        ;    XUIEN - IEN of the record in file #4
"RTN","XUSTAX",35,0)
        ; Output
"RTN","XUSTAX",36,0)
        ;    Piece 1 = Taxonomy X12 code of the record in file #4
"RTN","XUSTAX",37,0)
        ;    Piece 2 = Taxonomy IEN from file 8932.1
"RTN","XUSTAX",38,0)
TAXORG(XUIEN) ; Get taxonomy for an organization
"RTN","XUSTAX",39,0)
            N U S U="^"
"RTN","XUSTAX",40,0)
        I $G(XUIEN)'>0 Q U
"RTN","XUSTAX",41,0)
        I (XUIEN?.N)=0 Q U
"RTN","XUSTAX",42,0)
        N IEN,XUPTR,XUTAXAR,DIC,DR,DA,DIQ,DI,D0,XUTAX
"RTN","XUSTAX",43,0)
        S IEN=0,XUPTR=""
"RTN","XUSTAX",44,0)
        F  S IEN=$O(^DIC(4,XUIEN,"TAXONOMY",IEN)) Q:'IEN  D
"RTN","XUSTAX",45,0)
        . S DIC=4,DR=43,DA=XUIEN,DR(4.043)=".01:.03",DA(4.043)=IEN,DIQ="XUTAXARR",DIQ(0)="IE"
"RTN","XUSTAX",46,0)
        . D EN^DIQ1
"RTN","XUSTAX",47,0)
        . I XUTAXARR(4.043,IEN,".03","E")'="ACTIVE" Q
"RTN","XUSTAX",48,0)
        . I XUTAXARR(4.043,IEN,".02","E")="YES" S XUPTR=XUTAXARR(4.043,IEN,".01","I") Q
"RTN","XUSTAX",49,0)
        . I XUPTR="" S XUPTR=XUTAXARR(4.043,IEN,".01","I")
"RTN","XUSTAX",50,0)
        S XUTAX=$$GET1^DIQ(8932.1,XUPTR,"X12 CODE")
"RTN","XUSTAX",51,0)
        Q XUTAX_U_XUPTR
"SEC","^DIC",8932.1,8932.1,0,"AUDIT")
@
"SEC","^DIC",8932.1,8932.1,0,"DD")
@
"SEC","^DIC",8932.1,8932.1,0,"DEL")
@
"SEC","^DIC",8932.1,8932.1,0,"LAYGO")
^
"SEC","^DIC",8932.1,8932.1,0,"WR")
^
"UP",4,4.042,-1)
4^NPISTATUS
"UP",4,4.042,0)
4.042
"UP",4,4.043,-1)
4^TAXONOMY
"UP",4,4.043,0)
4.043
"UP",4,4.9999,-1)
4^9999
"UP",4,4.9999,0)
4.9999
"UP",200,200.042,-1)
200^NPISTATUS
"UP",200,200.042,0)
200.042
"VER")
8.0^22.0
"^DD",4,4,41.99,0)
NPI^RFX^^NPI;1^K:'($$CHKDGT^XUSNPIE1(X,DA,"Organization_ID")) X
"^DD",4,4,41.99,1,0)
^.1
"^DD",4,4,41.99,1,1,0)
4^ANPI
"^DD",4,4,41.99,1,1,1)
S ^DIC(4,"ANPI",$E(X,1,30),DA)=""
"^DD",4,4,41.99,1,1,2)
K ^DIC(4,"ANPI",$E(X,1,30),DA)
"^DD",4,4,41.99,1,1,"%D",0)
^^1^1^3060301^
"^DD",4,4,41.99,1,1,"%D",1,0)
File entries by NPI.
"^DD",4,4,41.99,1,1,"DT")
3060301
"^DD",4,4,41.99,3)
Answer must be 10 characters in length and not being used.
"^DD",4,4,41.99,21,0)
^^2^2^3060509^
"^DD",4,4,41.99,21,1,0)
Current Unique National Provider ID. A unique meaningless integer assigned
"^DD",4,4,41.99,21,2,0)
to providers.
"^DD",4,4,41.99,"DEL",11,0)
D:'$D(XUMF) EN^DDIOL("Entries must be inactivated via the Master File Server(MFS).","","!?5,$C(7)") I $D(XUMF)
"^DD",4,4,41.99,"DT")
3060814
"^DD",4,4,43,0)
TAXONOMY CODE^4.043P^^TAXONOMY;0
"^DD",4,4.042,.03,0)
NPI^RFX^^0;3^K:'($$CHKDGT^XUSNPIE1(X,DA,"Organization_ID")) X
"^DD",4,4.042,.03,1,0)
^.1
"^DD",4,4.042,.03,1,1,0)
4.042^C
"^DD",4,4.042,.03,1,1,1)
S ^DIC(4,DA(1),"NPISTATUS","C",$E(X,1,30),DA)=""
"^DD",4,4.042,.03,1,1,2)
K ^DIC(4,DA(1),"NPISTATUS","C",$E(X,1,30),DA)
"^DD",4,4.042,.03,1,1,"DT")
3060321
"^DD",4,4.042,.03,1,2,0)
4.042^AC^MUMPS
"^DD",4,4.042,.03,1,2,1)
D SET1^XUSNPIE1(DA(1),X)
"^DD",4,4.042,.03,1,2,2)
Q
"^DD",4,4.042,.03,1,2,3)
Special Trigger
"^DD",4,4.042,.03,1,2,"%D",0)
^.101^1^1^3060512^^^^
"^DD",4,4.042,.03,1,2,"%D",1,0)
his Special x-ref sets the NPI field (#41.99).
"^DD",4,4.042,.03,1,2,"DT")
3060512
"^DD",4,4.042,.03,3)
Answer must be 10 characters in length and not being used.
"^DD",4,4.042,.03,21,0)
^^2^2^3060301^
"^DD",4,4.042,.03,21,1,0)
Unique National Provider ID. A unique meaningless integer assigned to
"^DD",4,4.042,.03,21,2,0)
providers. 
"^DD",4,4.042,.03,"DT")
3060817
"^DD",4,4.043,0)
TAXONOMY CODE SUB-FIELD^^.03^3
"^DD",4,4.043,0,"DT")
3060615
"^DD",4,4.043,0,"IX","B",4.043,.01)

"^DD",4,4.043,0,"IX","C",4.043,.02)

"^DD",4,4.043,0,"NM","TAXONOMY CODE")

"^DD",4,4.043,0,"UP")
4
"^DD",4,4.043,.01,0)
TAXONOMY CODE^MP8932.1'^USC(8932.1,^0;1^Q
"^DD",4,4.043,.01,1,0)
^.1
"^DD",4,4.043,.01,1,1,0)
4.043^B
"^DD",4,4.043,.01,1,1,1)
S ^DIC(4,DA(1),"TAXONOMY","B",$E(X,1,30),DA)=""
"^DD",4,4.043,.01,1,1,2)
K ^DIC(4,DA(1),"TAXONOMY","B",$E(X,1,30),DA)
"^DD",4,4.043,.01,3)
Enter the NUCC recognized taxonomy code.
"^DD",4,4.043,.01,21,0)
^^2^2^3060615^
"^DD",4,4.043,.01,21,1,0)
This multiple field holds the NUCC recognized taxonomy code for an
"^DD",4,4.043,.01,21,2,0)
individual or an organization.
"^DD",4,4.043,.01,"DT")
3060615
"^DD",4,4.043,.02,0)
PRIMARY CODE^S^1:YES;0:NO;^0;2^Q
"^DD",4,4.043,.02,1,0)
^.1
"^DD",4,4.043,.02,1,1,0)
4.043^C
"^DD",4,4.043,.02,1,1,1)
S ^DIC(4,DA(1),"TAXONOMY","C",$E(X,1,30),DA)=""
"^DD",4,4.043,.02,1,1,2)
K ^DIC(4,DA(1),"TAXONOMY","C",$E(X,1,30),DA)
"^DD",4,4.043,.02,1,1,3)
C X-REF
"^DD",4,4.043,.02,1,1,"DT")
3060615
"^DD",4,4.043,.02,3)
Enter a 1 if this is the provider's primary taxonomy code or a 0 for non-primary.
"^DD",4,4.043,.02,21,0)
^^3^3^3060615^
"^DD",4,4.043,.02,21,1,0)
Only one code can be the primary taxonomy code for a provider. When a 
"^DD",4,4.043,.02,21,2,0)
specific taxonomy code is identified it is the primary code that will be 
"^DD",4,4.043,.02,21,3,0)
the default.
"^DD",4,4.043,.02,"DT")
3060615
"^DD",4,4.043,.03,0)
STATUS^S^A:ACTIVE;I:INACTIVE;^0;3^Q
"^DD",4,4.043,.03,3)
Enter an 'A' for an active code or an 'I' for an inactive code.
"^DD",4,4.043,.03,21,0)
^^5^5^3060615^
"^DD",4,4.043,.03,21,1,0)
If a taxonomy code listed for a provider is a currently active code (one 
"^DD",4,4.043,.03,21,2,0)
they use today), then the status should be marked with an 'A'. At times a
"^DD",4,4.043,.03,21,3,0)
provider will no longer use a taxonomy code. This code will be marked with
"^DD",4,4.043,.03,21,4,0)
an 'I' for inactive. Codes should not be removed from a provider's list.
"^DD",4,4.043,.03,21,5,0)
They should be activated or inactivated.
"^DD",4,4.043,.03,"DT")
3060615
"^DD",4,4.9999,.03,0)
EFFECTIVE DATE/TIME^D^^0;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",4,4.9999,.03,21,0)
^.001^1^1^3060330^^
"^DD",4,4.9999,.03,21,1,0)
Describes the pair Status and Effective Date/Time for each reference term.
"^DD",4,4.9999,.03,"DT")
3060410
"^DD",4,4.9999,.04,0)
STATUS^S^1:ACTIVE;0:INACTIVE;^0;4^Q
"^DD",4,4.9999,.04,21,0)
^.001^4^4^3060330^^
"^DD",4,4.9999,.04,21,1,0)
The Status of a reference term is either 'ACTIVE' or 'INACTIVE', then the 
"^DD",4,4.9999,.04,21,2,0)
term will be accessible by end-users to document a particular patient 
"^DD",4,4.9999,.04,21,3,0)
event. If 'INACTIVE', then the term will only be accessible by the 
"^DD",4,4.9999,.04,21,4,0)
application to display legacy data.
"^DD",4,4.9999,.04,"DT")
3060410
"^DD",200,200,41.99,0)
NPI^RFX^^NPI;1^K:'($$CHKDGT^XUSNPIE1(X,DA,"Individual_ID")) X
"^DD",200,200,41.99,1,0)
^.1^^-1
"^DD",200,200,41.99,1,1,0)
200^ANPI
"^DD",200,200,41.99,1,1,1)
S ^VA(200,"ANPI",$E(X,1,30),DA)=""
"^DD",200,200,41.99,1,1,2)
K ^VA(200,"ANPI",$E(X,1,30),DA)
"^DD",200,200,41.99,1,1,"%D",0)
^^1^1^3060301^
"^DD",200,200,41.99,1,1,"%D",1,0)
File entries by NPI.
"^DD",200,200,41.99,1,1,"DT")
3060301
"^DD",200,200,41.99,3)
Answer must be 10 characters in length and not being used.
"^DD",200,200,41.99,21,0)
^.001^2^2^3060814^^^^
"^DD",200,200,41.99,21,1,0)
Current Unique National Provider ID. A unique meaningless integer assigned
"^DD",200,200,41.99,21,2,0)
to providers.
"^DD",200,200,41.99,"DT")
3060814
"^DD",200,200.042,.03,0)
NPI^RFX^^0;3^K:'($$CHKDGT^XUSNPIE1(X,DA,"Individual_ID")) X
"^DD",200,200.042,.03,1,0)
^.1
"^DD",200,200.042,.03,1,1,0)
200.042^C
"^DD",200,200.042,.03,1,1,1)
S ^VA(200,DA(1),"NPISTATUS","C",$E(X,1,30),DA)=""
"^DD",200,200.042,.03,1,1,2)
K ^VA(200,DA(1),"NPISTATUS","C",$E(X,1,30),DA)
"^DD",200,200.042,.03,1,1,"DT")
3060301
"^DD",200,200.042,.03,1,2,0)
200.042^AC^MUMPS
"^DD",200,200.042,.03,1,2,1)
D SET^XUSNPIE1(DA(1),X)
"^DD",200,200.042,.03,1,2,2)
Q
"^DD",200,200.042,.03,1,2,3)
Special Trigger
"^DD",200,200.042,.03,1,2,"%D",0)
^.101^1^1^3060511^^
"^DD",200,200.042,.03,1,2,"%D",1,0)
This Special x-ref sets the NPI field (#41.99).
"^DD",200,200.042,.03,1,2,"DT")
3060511
"^DD",200,200.042,.03,3)
Answer must be 10 characters in length and not being used.
"^DD",200,200.042,.03,21,0)
^.001^2^2^3060814^^^^
"^DD",200,200.042,.03,21,1,0)
Unique National Provider ID. A unique meaningless integer assigned to 
"^DD",200,200.042,.03,21,2,0)
providers.
"^DD",200,200.042,.03,"DT")
3060817
"^DD",8932.1,8932.1,0)
FIELD^^90002^15
"^DD",8932.1,8932.1,0,"DDA")
N
"^DD",8932.1,8932.1,0,"DT")
3020830
"^DD",8932.1,8932.1,0,"ID",6)
W "   ",$P(^(0),U,7)
"^DD",8932.1,8932.1,0,"ID","WRITE")
N % S %=^(0) D:$L($P(%,U,2)) EN^DDIOL($P(%,U,2),"","!,?20") D:$L($P(%,U,3)) EN^DDIOL($P(%,U,3),"","!,?25")
"^DD",8932.1,8932.1,0,"IX","B",8932.1,.01)

"^DD",8932.1,8932.1,0,"IX","C",8932.1,.01)

"^DD",8932.1,8932.1,0,"IX","D",8932.1,1)

"^DD",8932.1,8932.1,0,"IX","E",8932.1,2)

"^DD",8932.1,8932.1,0,"IX","F",8932.1,5)

"^DD",8932.1,8932.1,0,"IX","G",8932.1,6)

"^DD",8932.1,8932.1,0,"NM","PERSON CLASS")

"^DD",8932.1,8932.1,0,"PT",4.043,.01)

"^DD",8932.1,8932.1,0,"PT",200.05,.01)

"^DD",8932.1,8932.1,0,"SCR")
I $P(^(0),U,4)'["i"
"^DD",8932.1,8932.1,0,"VRPK")
XU
"^DD",8932.1,8932.1,.001,0)
NUMBER^NJ7,0^^ ^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",8932.1,8932.1,.001,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",8932.1,8932.1,.001,21,0)
^^1^1^2960530^
"^DD",8932.1,8932.1,.001,21,1,0)
This is a number field to allow adding new entries by number.
"^DD",8932.1,8932.1,.001,"DT")
2960530
"^DD",8932.1,8932.1,.01,0)
PROVIDER TYPE^RFXI^^0;1^K:$L(X)>62!($L(X)<3)!'(X'?1P.E) X
"^DD",8932.1,8932.1,.01,1,0)
^.1
"^DD",8932.1,8932.1,.01,1,1,0)
8932.1^B
"^DD",8932.1,8932.1,.01,1,1,1)
S ^USC(8932.1,"B",$E(X,1,62),DA)=""
"^DD",8932.1,8932.1,.01,1,1,2)
K ^USC(8932.1,"B",$E(X,1,62),DA)
"^DD",8932.1,8932.1,.01,1,2,0)
8932.1^C^KWIC
"^DD",8932.1,8932.1,.01,1,2,1)
S X=$$UP^XLFSTR(X),%1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^USC(8932.1,"C",I,DA)=""
"^DD",8932.1,8932.1,.01,1,2,2)
S X=$$UP^XLFSTR(X),%1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^USC(8932.1,"C",I,DA)
"^DD",8932.1,8932.1,.01,1,2,3)
Modified
"^DD",8932.1,8932.1,.01,1,2,"%D",0)
^^1^1^2960530^^^
"^DD",8932.1,8932.1,.01,1,2,"%D",1,0)
This is a UPPERCASE KWIC lookup.
"^DD",8932.1,8932.1,.01,1,2,"DT")
2960530
"^DD",8932.1,8932.1,.01,3)
Answer must be 3-62 characters in length.
"^DD",8932.1,8932.1,.01,21,0)
^.001^1^1^3041005^^
"^DD",8932.1,8932.1,.01,21,1,0)
This is Level I of NUCC's structure of the Provider Taxonomy.
"^DD",8932.1,8932.1,.01,23,0)
^.001^6^6^3041005^^^^
"^DD",8932.1,8932.1,.01,23,1,0)
Increased the field length from 60 to 62 to accommodate all values of TYPE
"^DD",8932.1,8932.1,.01,23,2,0)
as defined by the NUCC.  August 30, 2002.
"^DD",8932.1,8932.1,.01,23,3,0)
 
"^DD",8932.1,8932.1,.01,23,4,0)
Increased the "B" x-ref from 30 to 62 chars.  August 30, 2002.
"^DD",8932.1,8932.1,.01,23,5,0)
 
"^DD",8932.1,8932.1,.01,23,6,0)
Added DESCRIPTION.  August 30, 2002.
"^DD",8932.1,8932.1,.01,"DT")
3020830
"^DD",8932.1,8932.1,.011,0)
PROVIDER TYPE CODE^CJ2^^ ; ^X ^DD(8932.1,.011,9.2) S X=$E(Y(8932.1,.011,2),Y(8932.1,.011,3),X)
"^DD",8932.1,8932.1,.011,9)
^
"^DD",8932.1,8932.1,.011,9.01)
8932.1^6
"^DD",8932.1,8932.1,.011,9.1)
$E(X12 CODE,1,2)
"^DD",8932.1,8932.1,.011,9.2)
S Y(8932.1,.011,1)=$S($D(^USC(8932.1,D0,0)):^(0),1:"") S X=$P(Y(8932.1,.011,1),U,7),Y(8932.1,.011,2)=X S X=1,Y(8932.1,.011,3)=X S X=2
"^DD",8932.1,8932.1,.011,21,0)
^^3^3^3020830^
"^DD",8932.1,8932.1,.011,21,1,0)
This is Level I, Provider Type - 2 byte alphanumeric consisting of the 1st
"^DD",8932.1,8932.1,.011,21,2,0)
and 2nd characters of X12 CODE:   A code that identifies a major grouping
"^DD",8932.1,8932.1,.011,21,3,0)
of service(s) or occupation(s) of health care providers.
"^DD",8932.1,8932.1,.011,23,0)
^^1^1^3020830^^
"^DD",8932.1,8932.1,.011,23,1,0)
Field added August 30, 2002.
"^DD",8932.1,8932.1,1,0)
CLASSIFICATION^FXI^^0;2^K:$L(X)>65!($L(X)<3) X
"^DD",8932.1,8932.1,1,1,0)
^.1
"^DD",8932.1,8932.1,1,1,1,0)
8932.1^D^KWIC
"^DD",8932.1,8932.1,1,1,1,1)
S X=$$UP^XLFSTR(X),%1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^USC(8932.1,"D",I,DA)=""
"^DD",8932.1,8932.1,1,1,1,2)
S X=$$UP^XLFSTR(X),%1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^USC(8932.1,"D",I,DA)
"^DD",8932.1,8932.1,1,1,1,3)
Modified
"^DD",8932.1,8932.1,1,1,1,"%D",0)
^^1^1^2960530^^
"^DD",8932.1,8932.1,1,1,1,"%D",1,0)
This is a UPPERCASE KWIC lookup.
"^DD",8932.1,8932.1,1,1,1,"DT")
2960530
"^DD",8932.1,8932.1,1,3)
Answer must be 3-65 characters in length.
"^DD",8932.1,8932.1,1,21,0)
^^1^1^3020830^^^^
"^DD",8932.1,8932.1,1,21,1,0)
This is the CMS (X12) Classification (Level II).
"^DD",8932.1,8932.1,1,23,0)
^^4^4^3020830^
"^DD",8932.1,8932.1,1,23,1,0)
Increased the field length from 50 to 65 to accommodate all values
"^DD",8932.1,8932.1,1,23,2,0)
of Classification as defined by the NUCC.  August 30, 2002.
"^DD",8932.1,8932.1,1,23,3,0)
 
"^DD",8932.1,8932.1,1,23,4,0)
Updated DESCRIPTION.  August 30, 2002.
"^DD",8932.1,8932.1,1,"DT")
3020830
"^DD",8932.1,8932.1,1.1,0)
CLASSIFICATION CODE^CJ2^^ ; ^X ^DD(8932.1,1.1,9.2) S X=$E(Y(8932.1,1.1,2),Y(8932.1,1.1,3),X)
"^DD",8932.1,8932.1,1.1,9)
^
"^DD",8932.1,8932.1,1.1,9.01)
8932.1^6
"^DD",8932.1,8932.1,1.1,9.1)
$E(X12 CODE,3,4)
"^DD",8932.1,8932.1,1.1,9.2)
S Y(8932.1,1.1,1)=$S($D(^USC(8932.1,D0,0)):^(0),1:"") S X=$P(Y(8932.1,1.1,1),U,7),Y(8932.1,1.1,2)=X S X=3,Y(8932.1,1.1,3)=X S X=4
"^DD",8932.1,8932.1,1.1,21,0)
^^4^4^3020830^
"^DD",8932.1,8932.1,1.1,21,1,0)
This is Level II, Classification Code - 2 byte alphanumeric consisting of
"^DD",8932.1,8932.1,1.1,21,2,0)
the 3rd and 4th characters of the X12 CODE:   A code that identifies more
"^DD",8932.1,8932.1,1.1,21,3,0)
specific services(s) or occupation(s) within the health care provider
"^DD",8932.1,8932.1,1.1,21,4,0)
type. The coding is based on licensed provider classifications.
"^DD",8932.1,8932.1,1.1,23,0)
^^1^1^3020830^
"^DD",8932.1,8932.1,1.1,23,1,0)
Field added August 30, 2002.
"^DD",8932.1,8932.1,2,0)
AREA OF SPECIALIZATION^FXI^^0;3^K:$L(X)>75!($L(X)<2) X
"^DD",8932.1,8932.1,2,1,0)
^.1
"^DD",8932.1,8932.1,2,1,1,0)
8932.1^E^KWIC
"^DD",8932.1,8932.1,2,1,1,1)
S X=$$UP^XLFSTR(X),%1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^USC(8932.1,"E",I,DA)=""
"^DD",8932.1,8932.1,2,1,1,2)
S X=$$UP^XLFSTR(X),%1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^USC(8932.1,"E",I,DA)
"^DD",8932.1,8932.1,2,1,1,3)
Modified
"^DD",8932.1,8932.1,2,1,1,"%D",0)
^^1^1^2960530^^
"^DD",8932.1,8932.1,2,1,1,"%D",1,0)
This is a UPPERCASE KWIC lookup.
"^DD",8932.1,8932.1,2,1,1,"DT")
2960530
"^DD",8932.1,8932.1,2,3)
Answer must be 2-75 characters in length.
"^DD",8932.1,8932.1,2,21,0)
^.001^2^2^3041005^^
"^DD",8932.1,8932.1,2,21,1,0)
This is Level III in NUCC's structure of the Provider Taxonomy.  It is the
"^DD",8932.1,8932.1,2,21,2,0)
most specific, but sometimes defines a "sub-category" of Classification.
"^DD",8932.1,8932.1,2,23,0)
^.001^7^7^3041005^^
"^DD",8932.1,8932.1,2,23,1,0)
Increased the field length from 50 to 75 to accommodate all values of Area
"^DD",8932.1,8932.1,2,23,2,0)
of Specialization as defined by the NUCC.  August 30, 2002.
"^DD",8932.1,8932.1,2,23,3,0)
 
"^DD",8932.1,8932.1,2,23,4,0)
Decreased the minimum field length from 3 to 2 to accomodate the value
"^DD",8932.1,8932.1,2,23,5,0)
"VA" for X12 code "261QV0200X".  August 30, 2002.
"^DD",8932.1,8932.1,2,23,6,0)
 
"^DD",8932.1,8932.1,2,23,7,0)
Added DESCRIPTION.  August 30, 2002.
"^DD",8932.1,8932.1,2,"DT")
3020830
"^DD",8932.1,8932.1,2.1,0)
AREA OF SPECIALIZATION CODE^CJ5^^ ; ^X ^DD(8932.1,2.1,9.2) S X=$E(Y(8932.1,2.1,2),Y(8932.1,2.1,3),X)
"^DD",8932.1,8932.1,2.1,9)
^
"^DD",8932.1,8932.1,2.1,9.01)
8932.1^6
"^DD",8932.1,8932.1,2.1,9.1)
$E(X12 CODE,5,9)
"^DD",8932.1,8932.1,2.1,9.2)
S Y(8932.1,2.1,1)=$S($D(^USC(8932.1,D0,0)):^(0),1:"") S X=$P(Y(8932.1,2.1,1),U,7),Y(8932.1,2.1,2)=X S X=5,Y(8932.1,2.1,3)=X S X=9
"^DD",8932.1,8932.1,2.1,21,0)
^^7^7^3020830^
"^DD",8932.1,8932.1,2.1,21,1,0)
This is Level III, Area of Specialization - a 5 byte alphanumeric
"^DD",8932.1,8932.1,2.1,21,2,0)
consisting of the 5th through 9th characters of the X12 CODE:   A code that
"^DD",8932.1,8932.1,2.1,21,3,0)
identifies the provider's specialization, a segment of the population that
"^DD",8932.1,8932.1,2.1,21,4,0)
a health care provider chooses to service, a specific medical service, a
"^DD",8932.1,8932.1,2.1,21,5,0)
specialization in treating a specific disease, or any other descriptive
"^DD",8932.1,8932.1,2.1,21,6,0)
characteristic about the providers practice relating to the services
"^DD",8932.1,8932.1,2.1,21,7,0)
rendered.
"^DD",8932.1,8932.1,2.1,23,0)
^^1^1^3020830^
"^DD",8932.1,8932.1,2.1,23,1,0)
Field added August 30, 2002.
"^DD",8932.1,8932.1,3,0)
STATUS^S^a:Active;i:Inactive;^0;4^Q
"^DD",8932.1,8932.1,3,1,0)
^.1
"^DD",8932.1,8932.1,3,1,1,0)
^^TRIGGER^8932.1^4
"^DD",8932.1,8932.1,3,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$S($D(DIFROM):0,1:X["i") I X S X=DIV S Y(1)=$S($D(^USC(8932.1,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(8932.1,3,1,1,1.4)
"^DD",8932.1,8932.1,3,1,1,1.4)
S DIH=$S($D(^USC(8932.1,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=8932.1,DIG=4 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",8932.1,8932.1,3,1,1,2)
Q
"^DD",8932.1,8932.1,3,1,1,"%D",0)
^^1^1^2960729^
"^DD",8932.1,8932.1,3,1,1,"%D",1,0)
This trigger sets a date in the 'Date Inactivated' field.
"^DD",8932.1,8932.1,3,1,1,"CREATE CONDITION")
S X=$S($D(DIFROM):0,1:X["i")
"^DD",8932.1,8932.1,3,1,1,"CREATE VALUE")
TODAY
"^DD",8932.1,8932.1,3,1,1,"DELETE VALUE")
NO EFFECT
"^DD",8932.1,8932.1,3,1,1,"DT")
2960703
"^DD",8932.1,8932.1,3,1,1,"FIELD")
Date In
"^DD",8932.1,8932.1,3,21,0)
^^2^2^3020826^^
"^DD",8932.1,8932.1,3,21,1,0)
This field will allow old entries to be disabled without removing
"^DD",8932.1,8932.1,3,21,2,0)
them from the table.
"^DD",8932.1,8932.1,3,"DT")
2960729
"^DD",8932.1,8932.1,4,0)
DATE INACTIVATED^D^^0;5^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",8932.1,8932.1,4,3)
Enter the date this Class was inactivated.
"^DD",8932.1,8932.1,4,5,1,0)
8932.1^3^1
"^DD",8932.1,8932.1,4,21,0)
^^1^1^3020826^^
"^DD",8932.1,8932.1,4,21,1,0)
This field holds the date that this Class was inactivated.
"^DD",8932.1,8932.1,4,"DT")
2960729
"^DD",8932.1,8932.1,5,0)
VA CODE^FI^^0;6^K:$L(X)>7!($L(X)<7)!'(X?1"V"6N) X
"^DD",8932.1,8932.1,5,1,0)
^.1
"^DD",8932.1,8932.1,5,1,1,0)
8932.1^F
"^DD",8932.1,8932.1,5,1,1,1)
S ^USC(8932.1,"F",$E(X,1,30),DA)=""
"^DD",8932.1,8932.1,5,1,1,2)
K ^USC(8932.1,"F",$E(X,1,30),DA)
"^DD",8932.1,8932.1,5,1,1,"%D",0)
^^2^2^2960807^
"^DD",8932.1,8932.1,5,1,1,"%D",1,0)
This X-ref provides a way for users to enter the VA CODE to lookup
"^DD",8932.1,8932.1,5,1,1,"%D",2,0)
a person class.
"^DD",8932.1,8932.1,5,1,1,"DT")
2960807
"^DD",8932.1,8932.1,5,3)
Answer 7 character VA code.
"^DD",8932.1,8932.1,5,21,0)
^^1^1^3020826^^
"^DD",8932.1,8932.1,5,21,1,0)
This field holds the 7 character VA assigned code for national roll-up.
"^DD",8932.1,8932.1,5,"DT")
2960807
"^DD",8932.1,8932.1,6,0)
X12 CODE^FX^^0;7^K:$L(X)>10!($L(X)<10)!'(X?3N2AN4N1"X") X
"^DD",8932.1,8932.1,6,1,0)
^.1
"^DD",8932.1,8932.1,6,1,1,0)
8932.1^G
"^DD",8932.1,8932.1,6,1,1,1)
S ^USC(8932.1,"G",$E(X,1,30),DA)=""
"^DD",8932.1,8932.1,6,1,1,2)
K ^USC(8932.1,"G",$E(X,1,30),DA)
"^DD",8932.1,8932.1,6,1,1,3)
Allows lookups.
"^DD",8932.1,8932.1,6,1,1,"%D",0)
^^5^5^3020830^
"^DD",8932.1,8932.1,6,1,1,"%D",1,0)
Created this x-ref to allow lookups on this field, e.g.:
"^DD",8932.1,8932.1,6,1,1,"%D",2,0)
 
"^DD",8932.1,8932.1,6,1,1,"%D",3,0)
   S DIC=8932.1,X="261QV0200X",DIC(0)="M" D ^DIC
"^DD",8932.1,8932.1,6,1,1,"%D",4,0)
 
"^DD",8932.1,8932.1,6,1,1,"%D",5,0)
August 30, 2002.
"^DD",8932.1,8932.1,6,1,1,"DT")
3020828
"^DD",8932.1,8932.1,6,3)
Answer must be 10 characters in length.
"^DD",8932.1,8932.1,6,21,0)
^^2^2^3020830^^^
"^DD",8932.1,8932.1,6,21,1,0)
This is the code assigned by X12N.  X12 published the joint X12N and CMS
"^DD",8932.1,8932.1,6,21,2,0)
Health Care Provider Taxonomy following the June 1997 X12 meeting.
"^DD",8932.1,8932.1,6,23,0)
^^32^32^3020830^
"^DD",8932.1,8932.1,6,23,1,0)
Changed the IT from
"^DD",8932.1,8932.1,6,23,2,0)
 
"^DD",8932.1,8932.1,6,23,3,0)
   X?3N2U4N1U 
"^DD",8932.1,8932.1,6,23,4,0)
 to
"^DD",8932.1,8932.1,6,23,5,0)
   X?3N2AN4N1"X"
"^DD",8932.1,8932.1,6,23,6,0)
 
"^DD",8932.1,8932.1,6,23,7,0)
to match the current pattern of the X12 code.  August 30, 2002.
"^DD",8932.1,8932.1,6,23,8,0)
 
"^DD",8932.1,8932.1,6,23,9,0)
August 30, 2002:
"^DD",8932.1,8932.1,6,23,10,0)
 There are approximately 800 Provider Taxonomy codes and they are all 10
"^DD",8932.1,8932.1,6,23,11,0)
digits in length. The hierarchy of provider categories incorporates four
"^DD",8932.1,8932.1,6,23,12,0)
areas of provider classifications that, when used in concert with one
"^DD",8932.1,8932.1,6,23,13,0)
another, create the capability to sort providers into broad and specific
"^DD",8932.1,8932.1,6,23,14,0)
categories.  There are four levels in the hierarchy including:
"^DD",8932.1,8932.1,6,23,15,0)
 
"^DD",8932.1,8932.1,6,23,16,0)
 I. Provider Type - 2 byte alphanumeric:
"^DD",8932.1,8932.1,6,23,17,0)
 A code that identifies a major grouping of service(s) or occupation(s) of
"^DD",8932.1,8932.1,6,23,18,0)
health care providers.
"^DD",8932.1,8932.1,6,23,19,0)
 
"^DD",8932.1,8932.1,6,23,20,0)
 II. Classification Code - 2 byte alphanumeric:
"^DD",8932.1,8932.1,6,23,21,0)
 A code that identifies more specific services(s) or occupation(s) within
"^DD",8932.1,8932.1,6,23,22,0)
the health care provider type. The coding is based on licensed provider
"^DD",8932.1,8932.1,6,23,23,0)
classifications.
"^DD",8932.1,8932.1,6,23,24,0)
 
"^DD",8932.1,8932.1,6,23,25,0)
 III. Area of Specialization - 5 byte alphanumeric:
"^DD",8932.1,8932.1,6,23,26,0)
 A code that identifies the provider's specialization, a segment of the
"^DD",8932.1,8932.1,6,23,27,0)
population that a health care provider chooses to service, a specific
"^DD",8932.1,8932.1,6,23,28,0)
medical service, a specialization in treating a specific disease, or any
"^DD",8932.1,8932.1,6,23,29,0)
other descriptive characteristic about the providers practice relating to
"^DD",8932.1,8932.1,6,23,30,0)
the services rendered.
"^DD",8932.1,8932.1,6,23,31,0)
 
"^DD",8932.1,8932.1,6,23,32,0)
 IV. A place holder for future expansion - 1 byte alphanumeric
"^DD",8932.1,8932.1,6,"DT")
3020830
"^DD",8932.1,8932.1,7,0)
reserved^F^^0;8^K:$L(X)>12!($L(X)<1) X
"^DD",8932.1,8932.1,7,3)
Answer must be 1-12 characters in length.
"^DD",8932.1,8932.1,7,21,0)
^^2^2^3020826^
"^DD",8932.1,8932.1,7,21,1,0)
This field is only to help a conversion routine for updates to the file.
"^DD",8932.1,8932.1,7,21,2,0)
Any data is used only be a update routine.
"^DD",8932.1,8932.1,7,"DT")
3020830
"^DD",8932.1,8932.1,8,0)
SPECIALTY CODE^FI^^0;9^K:$L(X)>2!($L(X)<2) X
"^DD",8932.1,8932.1,8,3)
Enter the 2 character specialty code associated with this classification
"^DD",8932.1,8932.1,8,21,0)
^^1^1^3020826^
"^DD",8932.1,8932.1,8,21,1,0)
This field holds the specialty code associated with the classification
"^DD",8932.1,8932.1,8,"DT")
3020830
"^DD",8932.1,8932.1,11,0)
DEFINITION^8932.111^^11;0
"^DD",8932.1,8932.1,90002,0)
INDIVIDUAL/NON^S^I:INDIVIDUAL;N:NON-INDIVIDUAL;^90002;2^Q
"^DD",8932.1,8932.1,90002,21,0)
^^7^7^3020830^
"^DD",8932.1,8932.1,90002,21,1,0)
This field indicates whether the entry is for an Individual or for a
"^DD",8932.1,8932.1,90002,21,2,0)
Non-Individual, and was added at the request of IHS in their namespace,
"^DD",8932.1,8932.1,90002,21,3,0)
until the file supporting Non-Individuals can be defined.
"^DD",8932.1,8932.1,90002,21,4,0)
 
"^DD",8932.1,8932.1,90002,21,5,0)
Note that the current definition of the X12 CODE does not explicitly
"^DD",8932.1,8932.1,90002,21,6,0)
indicate whether an entry is for an Individual or for a Non-Individual,
"^DD",8932.1,8932.1,90002,21,7,0)
either in value or structure definition.
"^DD",8932.1,8932.1,90002,23,0)
^^11^11^3030708^
"^DD",8932.1,8932.1,90002,23,1,0)
This field is in the IHS numberspace, and is for their use pending
"^DD",8932.1,8932.1,90002,23,2,0)
development and deployment of a file to support a Non-Individual taxonomy.
"^DD",8932.1,8932.1,90002,23,3,0)
 
"^DD",8932.1,8932.1,90002,23,4,0)
PERSON CLASS is intended for Individuals, and as of this writing, plans
"^DD",8932.1,8932.1,90002,23,5,0)
are under way to create a separate file to support that portion of the
"^DD",8932.1,8932.1,90002,23,6,0)
X12 Provider Taxonomy which is for Non-Individuals.
"^DD",8932.1,8932.1,90002,23,7,0)
 
"^DD",8932.1,8932.1,90002,23,8,0)
August 30, 2002.
"^DD",8932.1,8932.1,90002,23,9,0)
 
"^DD",8932.1,8932.1,90002,23,10,0)
IHS has added entries for non-Individuals to the file.  Patches should 
"^DD",8932.1,8932.1,90002,23,11,0)
take that in to account when planning how to load new data.
"^DD",8932.1,8932.1,90002,"DT")
3030708
"^DD",8932.1,8932.111,0)
DEFINITION SUB-FIELD^^.01^1
"^DD",8932.1,8932.111,0,"DT")
3020828
"^DD",8932.1,8932.111,0,"NM","DEFINITION")

"^DD",8932.1,8932.111,0,"UP")
8932.1
"^DD",8932.1,8932.111,.01,0)
DEFINITION^W^^0;1^Q
"^DD",8932.1,8932.111,.01,3)
Enter the definition of this Provider Type.
"^DD",8932.1,8932.111,.01,21,0)
^^2^2^3020829^
"^DD",8932.1,8932.111,.01,21,1,0)
Enter the definition of this Provider Type.  Types with X12 codes are
"^DD",8932.1,8932.111,.01,21,2,0)
defined by the NUCC, provided by various sources.
"^DD",8932.1,8932.111,.01,23,0)
^^1^1^3020829^
"^DD",8932.1,8932.111,.01,23,1,0)
DEFINITION field added August 29, 2002.
"^DD",8932.1,8932.111,.01,"DT")
3020828
"^DIC",8932.1,8932.1,0)
PERSON CLASS^8932.1
"^DIC",8932.1,8932.1,0,"GL")
^USC(8932.1,
"^DIC",8932.1,8932.1,"%D",0)
^1.001^9^9^3030708^^
"^DIC",8932.1,8932.1,"%D",1,0)
This file holds the CMS (HCFA) provider type data.
"^DIC",8932.1,8932.1,"%D",2,0)
 
"^DIC",8932.1,8932.1,"%D",3,0)
In 2001, ANSI ASC X12N asked the National Uniform Claim Committee (NUCC)
"^DIC",8932.1,8932.1,"%D",4,0)
to become the official maintainer of the Health Care Provider Taxonomy
"^DIC",8932.1,8932.1,"%D",5,0)
List (provider type).
"^DIC",8932.1,8932.1,"%D",6,0)
 
"^DIC",8932.1,8932.1,"%D",7,0)
PERSON CLASS is to be used for identifying provider types for roll-ups.
"^DIC",8932.1,8932.1,"%D",8,0)
 
"^DIC",8932.1,8932.1,"%D",9,0)
Patches need to review the technical description on field 90002.
"^DIC",8932.1,"B","PERSON CLASS",8932.1)

"BLD",928,6)
^349
**END**
**END**
