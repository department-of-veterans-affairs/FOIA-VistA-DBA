KIDS Distribution saved on Mar 13, 2006@15:12:30
VIC POW/PURPLE HEART ENHANCEMENT DG*5.3*679 (3/13/06)
**KIDS**:DG*5.3*679^

**INSTALL NAME**
DG*5.3*679
"BLD",5756,0)
DG*5.3*679^REGISTRATION^0^3060313^y
"BLD",5756,1,0)
^^2^2^3051013^
"BLD",5756,1,1,0)
Please refer to patch DG*5.3*679 in the National Patch Module for a
"BLD",5756,1,2,0)
complete description of this patch.
"BLD",5756,4,0)
^9.64PA^^
"BLD",5756,"INID")
y
"BLD",5756,"KRN",0)
^9.67PA^8989.52^19
"BLD",5756,"KRN",.4,0)
.4
"BLD",5756,"KRN",.401,0)
.401
"BLD",5756,"KRN",.402,0)
.402
"BLD",5756,"KRN",.403,0)
.403
"BLD",5756,"KRN",.5,0)
.5
"BLD",5756,"KRN",.84,0)
.84
"BLD",5756,"KRN",3.6,0)
3.6
"BLD",5756,"KRN",3.8,0)
3.8
"BLD",5756,"KRN",9.2,0)
9.2
"BLD",5756,"KRN",9.8,0)
9.8
"BLD",5756,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",5756,"KRN",9.8,"NM",1,0)
DGQEHLNT^^0^B2943028
"BLD",5756,"KRN",9.8,"NM",2,0)
DGQEHLS^^0^B13481805
"BLD",5756,"KRN",9.8,"NM",3,0)
DGQERPC^^0^B11925039
"BLD",5756,"KRN",9.8,"NM",4,0)
DGQEUT1^^0^B31813061
"BLD",5756,"KRN",9.8,"NM",5,0)
DGQEUT2^^0^B45753448
"BLD",5756,"KRN",9.8,"NM",6,0)
DG53P679^^0^B1077202
"BLD",5756,"KRN",9.8,"NM","B","DG53P679",6)

"BLD",5756,"KRN",9.8,"NM","B","DGQEHLNT",1)

"BLD",5756,"KRN",9.8,"NM","B","DGQEHLS",2)

"BLD",5756,"KRN",9.8,"NM","B","DGQERPC",3)

"BLD",5756,"KRN",9.8,"NM","B","DGQEUT1",4)

"BLD",5756,"KRN",9.8,"NM","B","DGQEUT2",5)

"BLD",5756,"KRN",19,0)
19
"BLD",5756,"KRN",19.1,0)
19.1
"BLD",5756,"KRN",101,0)
101
"BLD",5756,"KRN",409.61,0)
409.61
"BLD",5756,"KRN",771,0)
771
"BLD",5756,"KRN",870,0)
870
"BLD",5756,"KRN",8989.51,0)
8989.51
"BLD",5756,"KRN",8989.52,0)
8989.52
"BLD",5756,"KRN",8994,0)
8994
"BLD",5756,"KRN","B",.4,.4)

"BLD",5756,"KRN","B",.401,.401)

"BLD",5756,"KRN","B",.402,.402)

"BLD",5756,"KRN","B",.403,.403)

"BLD",5756,"KRN","B",.5,.5)

"BLD",5756,"KRN","B",.84,.84)

"BLD",5756,"KRN","B",3.6,3.6)

"BLD",5756,"KRN","B",3.8,3.8)

"BLD",5756,"KRN","B",9.2,9.2)

"BLD",5756,"KRN","B",9.8,9.8)

"BLD",5756,"KRN","B",19,19)

"BLD",5756,"KRN","B",19.1,19.1)

"BLD",5756,"KRN","B",101,101)

"BLD",5756,"KRN","B",409.61,409.61)

"BLD",5756,"KRN","B",771,771)

"BLD",5756,"KRN","B",870,870)

"BLD",5756,"KRN","B",8989.51,8989.51)

"BLD",5756,"KRN","B",8989.52,8989.52)

"BLD",5756,"KRN","B",8994,8994)

"BLD",5756,"PRE")
DG53P679
"BLD",5756,"QUES",0)
^9.62^^
"BLD",5756,"REQB",0)
^9.611^2^2
"BLD",5756,"REQB",1,0)
DG*5.3*571^2
"BLD",5756,"REQB",2,0)
DG*5.3*641^2
"BLD",5756,"REQB","B","DG*5.3*571",1)

"BLD",5756,"REQB","B","DG*5.3*641",2)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2941102^2941102
"PKG",5,22,1,"PAH",1,0)
679^3060313^11744
"PKG",5,22,1,"PAH",1,1,0)
^^2^2^3060313
"PKG",5,22,1,"PAH",1,1,1,0)
Please refer to patch DG*5.3*679 in the National Patch Module for a
"PKG",5,22,1,"PAH",1,1,2,0)
complete description of this patch.
"PRE")
DG53P679
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","DG53P679")
0^6^B1077202
"RTN","DG53P679",1,0)
DG53P679 ;ALB/RPM - PATCH DG*5.3*679 INSTALL UTILITIES ; 10/13/05 08:38pm
"RTN","DG53P679",2,0)
 ;;5.3;Registration;**679**;Aug 13, 1993
"RTN","DG53P679",3,0)
 ;
"RTN","DG53P679",4,0)
ENV ;Main entry point for Environment check point.
"RTN","DG53P679",5,0)
 ;
"RTN","DG53P679",6,0)
 S XPDABORT=""
"RTN","DG53P679",7,0)
 D PROGCHK(.XPDABORT)  ;checks programmer variables
"RTN","DG53P679",8,0)
 I XPDABORT="" K XPDABORT
"RTN","DG53P679",9,0)
 Q
"RTN","DG53P679",10,0)
 ;
"RTN","DG53P679",11,0)
 ;
"RTN","DG53P679",12,0)
PRE ;Main entry point for Pre-init items.
"RTN","DG53P679",13,0)
 ;
"RTN","DG53P679",14,0)
 Q
"RTN","DG53P679",15,0)
 ;
"RTN","DG53P679",16,0)
 ;
"RTN","DG53P679",17,0)
POST ;Main entry point for Post-init items.
"RTN","DG53P679",18,0)
 ;
"RTN","DG53P679",19,0)
 Q
"RTN","DG53P679",20,0)
 ;
"RTN","DG53P679",21,0)
 ;
"RTN","DG53P679",22,0)
PROGCHK(XPDABORT) ;checks for necessary programmer variables
"RTN","DG53P679",23,0)
 ;
"RTN","DG53P679",24,0)
 I '$G(DUZ)!($G(DUZ(0))'="@")!('$G(DT))!($G(U)'="^") DO
"RTN","DG53P679",25,0)
 .D BMES^XPDUTL("*****")
"RTN","DG53P679",26,0)
 .D MES^XPDUTL("Your programming variables are not set up properly.")
"RTN","DG53P679",27,0)
 .D MES^XPDUTL("Installation aborted.")
"RTN","DG53P679",28,0)
 .D MES^XPDUTL("*****")
"RTN","DG53P679",29,0)
 .S XPDABORT=2
"RTN","DG53P679",30,0)
 Q
"RTN","DGQEHLNT")
0^1^B2943028
"RTN","DGQEHLNT",1,0)
DGQEHLNT ;ALB/RPM - VIC REPLACEMENT HL7 BUILD NTE SEGMENT ; 10/20/05
"RTN","DGQEHLNT",2,0)
 ;;5.3;Registration;**679**;Aug 13, 1993
"RTN","DGQEHLNT",3,0)
 ;
"RTN","DGQEHLNT",4,0)
 Q
"RTN","DGQEHLNT",5,0)
 ;
"RTN","DGQEHLNT",6,0)
NTE(DGREQ,DGFLD,DGHL) ;NTE Segment API
"RTN","DGQEHLNT",7,0)
 ;This function wraps the data retrieval and segment creation APIs and
"RTN","DGQEHLNT",8,0)
 ;returns a formatted NTE segment.
"RTN","DGQEHLNT",9,0)
 ;
"RTN","DGQEHLNT",10,0)
 ;  Input:
"RTN","DGQEHLNT",11,0)
 ;     DGREQ - (required) VIC REQUEST data array
"RTN","DGQEHLNT",12,0)
 ;     DGFLD - (optional) List of comma-separated fields (sequence #'s)
"RTN","DGQEHLNT",13,0)
 ;             to include.  Defaults to all required fields (4).
"RTN","DGQEHLNT",14,0)
 ;      DGHL - HL7 environment array
"RTN","DGQEHLNT",15,0)
 ;
"RTN","DGQEHLNT",16,0)
 ;  Output:
"RTN","DGQEHLNT",17,0)
 ;   Function Value - NTE segment on success, "" on failure
"RTN","DGQEHLNT",18,0)
 ;
"RTN","DGQEHLNT",19,0)
 N DGNTE
"RTN","DGQEHLNT",20,0)
 N DGVAL
"RTN","DGQEHLNT",21,0)
 ;
"RTN","DGQEHLNT",22,0)
 S DGNTE=""
"RTN","DGQEHLNT",23,0)
 I $D(DGREQ) D
"RTN","DGQEHLNT",24,0)
 . S DGFLD=","_DGFLD_","
"RTN","DGQEHLNT",25,0)
 . I $$NTEVAL(DGFLD,.DGREQ,.DGVAL) D
"RTN","DGQEHLNT",26,0)
 . . S DGNTE=$$BLDSEG^DGQEHLUT("NTE",.DGVAL,.DGHL)
"RTN","DGQEHLNT",27,0)
 Q DGNTE
"RTN","DGQEHLNT",28,0)
 ;
"RTN","DGQEHLNT",29,0)
NTEVAL(DGFLD,DGREQ,DGVAL) ;build NTE value array
"RTN","DGQEHLNT",30,0)
 ;
"RTN","DGQEHLNT",31,0)
 ;  Input:
"RTN","DGQEHLNT",32,0)
 ;     DGFLD - (required) Fields string
"RTN","DGQEHLNT",33,0)
 ;     DGREQ - (required) VIC REQUEST data array
"RTN","DGQEHLNT",34,0)
 ;
"RTN","DGQEHLNT",35,0)
 ;  Output:
"RTN","DGQEHLNT",36,0)
 ;   Function Value - 1 on sucess, 0 on failure
"RTN","DGQEHLNT",37,0)
 ;            DGVAL - NTE field array [SUB1:field, SUB2:repetition,
"RTN","DGQEHLNT",38,0)
 ;                                    SUB3:component, SUB4:sub-component]
"RTN","DGQEHLNT",39,0)
 ;
"RTN","DGQEHLNT",40,0)
 N DGRSLT  ;function value
"RTN","DGQEHLNT",41,0)
 ;
"RTN","DGQEHLNT",42,0)
 S DGRSLT=0
"RTN","DGQEHLNT",43,0)
 I $G(DGFLD)]"",+$G(DGREQ("DFN"))>0 D
"RTN","DGQEHLNT",44,0)
 . ;
"RTN","DGQEHLNT",45,0)
 . ; seq 1 Set ID
"RTN","DGQEHLNT",46,0)
 . I DGFLD[",1," D
"RTN","DGQEHLNT",47,0)
 . ;
"RTN","DGQEHLNT",48,0)
 . ; seq 2 Source of comment
"RTN","DGQEHLNT",49,0)
 . I DGFLD[",2," D
"RTN","DGQEHLNT",50,0)
 . ;
"RTN","DGQEHLNT",51,0)
 . ; seq 3 Comment
"RTN","DGQEHLNT",52,0)
 . I DGFLD[",3," D
"RTN","DGQEHLNT",53,0)
 . . N DGENRST  ;enrollment status
"RTN","DGQEHLNT",54,0)
 . . S DGENRST=$$STATUS^DGENA(DGREQ("DFN"))
"RTN","DGQEHLNT",55,0)
 . . S DGVAL(3,1)="POW:"_$S($$ISENRPND^DGQEUT1(DGENRST):"P",1:$$GETPOW^DGQEUT1(DGREQ("DFN")))
"RTN","DGQEHLNT",56,0)
 . . S DGVAL(3,2)="PH:"_$$GETPH^DGQEUT1(DGREQ("DFN"))
"RTN","DGQEHLNT",57,0)
 . ;
"RTN","DGQEHLNT",58,0)
 . ; seq 4 Comment type
"RTN","DGQEHLNT",59,0)
 . I DGFLD[",4," D
"RTN","DGQEHLNT",60,0)
 . ;
"RTN","DGQEHLNT",61,0)
 . S DGRSLT=1
"RTN","DGQEHLNT",62,0)
 I 'DGRSLT K DGVAL
"RTN","DGQEHLNT",63,0)
 Q DGRSLT
"RTN","DGQEHLS")
0^2^B13481805
"RTN","DGQEHLS",1,0)
DGQEHLS ;ALB/RPM - VIC REPLACEMENT HL7 SEND DRIVER ; 10/13/05
"RTN","DGQEHLS",2,0)
 ;;5.3;Registration;**571,679**;Aug 13, 1993
"RTN","DGQEHLS",3,0)
 ;
"RTN","DGQEHLS",4,0)
 Q  ;no direct entry
"RTN","DGQEHLS",5,0)
 ;
"RTN","DGQEHLS",6,0)
SND(DGRIEN,DGERR) ;Send a single ORM orders message
"RTN","DGQEHLS",7,0)
 ; This function builds and transmits a General Order (ORM~O01)
"RTN","DGQEHLS",8,0)
 ; Message used to either release a hold on a Veteran ID Card (VIC)
"RTN","DGQEHLS",9,0)
 ; request or cancel the VIC request.
"RTN","DGQEHLS",10,0)
 ;
"RTN","DGQEHLS",11,0)
 ;  Input:
"RTN","DGQEHLS",12,0)
 ;    DGRIEN - pointer VIC REQUEST (#39.6) file
"RTN","DGQEHLS",13,0)
 ;
"RTN","DGQEHLS",14,0)
 ;  Output:
"RTN","DGQEHLS",15,0)
 ;    Function result - '1' on success; '0' on failure
"RTN","DGQEHLS",16,0)
 ;    DGERR - undefined on success; error message string on failure
"RTN","DGQEHLS",17,0)
 ;
"RTN","DGQEHLS",18,0)
 N DGHLEID   ;event protocol ID
"RTN","DGQEHLS",19,0)
 N DGHLRSLT  ;result from GENERATE API
"RTN","DGQEHLS",20,0)
 N DGREQ     ;VIC REQUEST data array
"RTN","DGQEHLS",21,0)
 N DGROOT    ;HL7 message text array name
"RTN","DGQEHLS",22,0)
 N DGRSLT    ;function result
"RTN","DGQEHLS",23,0)
 ;
"RTN","DGQEHLS",24,0)
 S DGROOT=$NA(^TMP("HLS",$J))
"RTN","DGQEHLS",25,0)
 K @DGROOT
"RTN","DGQEHLS",26,0)
 ;
"RTN","DGQEHLS",27,0)
 S DGRSLT=0
"RTN","DGQEHLS",28,0)
 ;
"RTN","DGQEHLS",29,0)
 I $G(DGRIEN)>0 D
"RTN","DGQEHLS",30,0)
 . ;
"RTN","DGQEHLS",31,0)
 . ;initialize HL7 environment
"RTN","DGQEHLS",32,0)
 . S DGHLEID=$$INIT^DGQEHLUT("DGQE VIC ORM/O01 EVENT",.DGHL)
"RTN","DGQEHLS",33,0)
 . I 'DGHLEID S DGERR="Unable to initialize HL7 environment"
"RTN","DGQEHLS",34,0)
 . Q:$D(DGERR)
"RTN","DGQEHLS",35,0)
 . ;
"RTN","DGQEHLS",36,0)
 . ;retrieve VIC REQUEST file record
"RTN","DGQEHLS",37,0)
 . I '$$GETREQ^DGQEREQ(DGRIEN,.DGREQ) D
"RTN","DGQEHLS",38,0)
 . . S DGERR="Unable to retrieve VIC REQUEST data"
"RTN","DGQEHLS",39,0)
 . Q:$D(DGERR)
"RTN","DGQEHLS",40,0)
 . ;
"RTN","DGQEHLS",41,0)
 . ;build ORM message
"RTN","DGQEHLS",42,0)
 . I '$$BLDORM(.DGREQ,DGROOT,.DGHL) D
"RTN","DGQEHLS",43,0)
 . . S DGERR="Unable to build ORM message text"
"RTN","DGQEHLS",44,0)
 . Q:$D(DGERR)
"RTN","DGQEHLS",45,0)
 . ;
"RTN","DGQEHLS",46,0)
 . ;transmit the message
"RTN","DGQEHLS",47,0)
 . D GENERATE^HLMA(DGHLEID,$S(DGROOT["^":"GM",1:"LM"),1,.DGHLRSLT)
"RTN","DGQEHLS",48,0)
 . I +$P(DGHLRSLT,U,2) S DGERR=$P(DGHLRSLT,U,2)
"RTN","DGQEHLS",49,0)
 . Q:$D(DGERR)
"RTN","DGQEHLS",50,0)
 . ;
"RTN","DGQEHLS",51,0)
 . ;set transmission log
"RTN","DGQEHLS",52,0)
 . D STOXMIT^DGQEHLL($P(DGHLRSLT,U),DGRIEN)
"RTN","DGQEHLS",53,0)
 . ;
"RTN","DGQEHLS",54,0)
 . ;clear transmission required flag
"RTN","DGQEHLS",55,0)
 . D XMITOFF^DGQEDD(DGRIEN)
"RTN","DGQEHLS",56,0)
 . ;
"RTN","DGQEHLS",57,0)
 . S DGRSLT=1
"RTN","DGQEHLS",58,0)
 ;
"RTN","DGQEHLS",59,0)
 K @DGROOT
"RTN","DGQEHLS",60,0)
 ;
"RTN","DGQEHLS",61,0)
 Q DGRSLT
"RTN","DGQEHLS",62,0)
 ;
"RTN","DGQEHLS",63,0)
BLDORM(DGREQ,DGROOT,DGHL) ;build segments for a single ORM message
"RTN","DGQEHLS",64,0)
 ;
"RTN","DGQEHLS",65,0)
 ;  Input:
"RTN","DGQEHLS",66,0)
 ;    DGREQ - (required) VIC REQUEST data array
"RTN","DGQEHLS",67,0)
 ;   DGROOT - (required) closed root array name to contain segments
"RTN","DGQEHLS",68,0)
 ;     DGHL - VistA HL7 environment array
"RTN","DGQEHLS",69,0)
 ;
"RTN","DGQEHLS",70,0)
 ;  Output:
"RTN","DGQEHLS",71,0)
 ;    Function value - "1" on sucess; "0" on failure
"RTN","DGQEHLS",72,0)
 ;
"RTN","DGQEHLS",73,0)
 N DGPTID    ;Patient ID field 3 of PID segment
"RTN","DGQEHLS",74,0)
 N DGRSLT    ;function result
"RTN","DGQEHLS",75,0)
 N DGSEG     ;segment counter
"RTN","DGQEHLS",76,0)
 N DGSEGSTR  ;formatted segment string
"RTN","DGQEHLS",77,0)
 N DGSTR     ;comma-delimited list of segment fields
"RTN","DGQEHLS",78,0)
 ;
"RTN","DGQEHLS",79,0)
 S DGRSLT=0
"RTN","DGQEHLS",80,0)
 S DGSEG=0
"RTN","DGQEHLS",81,0)
 I $D(DGREQ),$G(DGROOT)]"",$D(DGHL) D
"RTN","DGQEHLS",82,0)
 . Q:'$G(DGREQ("DFN"))
"RTN","DGQEHLS",83,0)
 . Q:'$D(^DPT(DGREQ("DFN")))
"RTN","DGQEHLS",84,0)
 . Q:$G(DGREQ("CARDID"))']""
"RTN","DGQEHLS",85,0)
 . ;
"RTN","DGQEHLS",86,0)
 . ;build PID segment
"RTN","DGQEHLS",87,0)
 . S DGSTR="1,2,3,5,7,19"  ;{3=ICN,5=NAME,7=DOB,19=SSN}
"RTN","DGQEHLS",88,0)
 . S DGSEGSTR=$$EN^VAFHLPID(DGREQ("DFN"),DGSTR,1,1)
"RTN","DGQEHLS",89,0)
 . Q:(DGSEGSTR="")
"RTN","DGQEHLS",90,0)
 . ;set Patient ID field 3 Check Digit component to null
"RTN","DGQEHLS",91,0)
 . S DGPTID=$P(DGSEGSTR,DGHL("FS"),4)
"RTN","DGQEHLS",92,0)
 . S $P(DGPTID,$E(DGHL("ECH")),2)=""
"RTN","DGQEHLS",93,0)
 . S $P(DGSEGSTR,DGHL("FS"),4)=DGPTID
"RTN","DGQEHLS",94,0)
 . S DGSEG=DGSEG+1,@DGROOT@(DGSEG)=DGSEGSTR
"RTN","DGQEHLS",95,0)
 . ;
"RTN","DGQEHLS",96,0)
 . ;build ORC segment
"RTN","DGQEHLS",97,0)
 . S DGSTR="1"
"RTN","DGQEHLS",98,0)
 . S DGSEGSTR=$$ORC^DGQEHLOR(.DGREQ,DGSTR,.DGHL)
"RTN","DGQEHLS",99,0)
 . Q:(DGSEGSTR="")
"RTN","DGQEHLS",100,0)
 . S DGSEG=DGSEG+1,@DGROOT@(DGSEG)=DGSEGSTR
"RTN","DGQEHLS",101,0)
 . ;
"RTN","DGQEHLS",102,0)
 . ;build RQD segment
"RTN","DGQEHLS",103,0)
 . S DGSTR="1,3"
"RTN","DGQEHLS",104,0)
 . S DGSEGSTR=$$RQD^DGQEHLRQ(.DGREQ,DGSTR,.DGHL)
"RTN","DGQEHLS",105,0)
 . Q:(DGSEGSTR="")
"RTN","DGQEHLS",106,0)
 . S DGSEG=DGSEG+1,@DGROOT@(DGSEG)=DGSEGSTR
"RTN","DGQEHLS",107,0)
 . ;
"RTN","DGQEHLS",108,0)
 . ;build NTE segment for POW and PH
"RTN","DGQEHLS",109,0)
 . S DGSTR="3"
"RTN","DGQEHLS",110,0)
 . S DGSEGSTR=$$NTE^DGQEHLNT(.DGREQ,DGSTR,.DGHL)
"RTN","DGQEHLS",111,0)
 . Q:(DGSEGSTR="")
"RTN","DGQEHLS",112,0)
 . S DGSEG=DGSEG+1,@DGROOT@(DGSEG)=DGSEGSTR
"RTN","DGQEHLS",113,0)
 . ;
"RTN","DGQEHLS",114,0)
 . ;success
"RTN","DGQEHLS",115,0)
 . S DGRSLT=1
"RTN","DGQEHLS",116,0)
 ;
"RTN","DGQEHLS",117,0)
 Q DGRSLT
"RTN","DGQERPC")
0^3^B11925039
"RTN","DGQERPC",1,0)
DGQERPC ;ALB/RPM - VIC REPLACEMENT VISTA TO MAXIMUS RPC ; 10/04/05
"RTN","DGQERPC",2,0)
 ;;5.3;Registration;**571,679**;Aug 13, 1993
"RTN","DGQERPC",3,0)
 ;
"RTN","DGQERPC",4,0)
 ; This routine contains the primary entry points to the 
"RTN","DGQERPC",5,0)
 ; VistA to Maximus interface RPCs.
"RTN","DGQERPC",6,0)
 ;
"RTN","DGQERPC",7,0)
 Q  ;no direct entry
"RTN","DGQERPC",8,0)
 ;
"RTN","DGQERPC",9,0)
GETDEMO(RESULT,DGICN) ;retrieve patient demographics
"RTN","DGQERPC",10,0)
 ;
"RTN","DGQERPC",11,0)
 ; --rpc: DGQE GET PATIENT DEMO
"RTN","DGQERPC",12,0)
 ;
"RTN","DGQERPC",13,0)
 ; This remote procedure retrieves demographic data for a given patient
"RTN","DGQERPC",14,0)
 ; and returns an array of text lines.  Each text line consists of at
"RTN","DGQERPC",15,0)
 ; least two circumflex("^")-delimited fields.  The first field of each
"RTN","DGQERPC",16,0)
 ; line contains an XML style tag (e.g. <RESULT>).  The second through
"RTN","DGQERPC",17,0)
 ; nth fields contain data.
"RTN","DGQERPC",18,0)
 ;
"RTN","DGQERPC",19,0)
 ;  Supported References:                                               
"RTN","DGQERPC",20,0)
 ;    DBIA #2701: $$GETDFN^MPIF001
"RTN","DGQERPC",21,0)
 ;
"RTN","DGQERPC",22,0)
 ;  Input:
"RTN","DGQERPC",23,0)
 ;    DGICN - patient's Integration Control Number
"RTN","DGQERPC",24,0)
 ;
"RTN","DGQERPC",25,0)
 ;  Output:
"RTN","DGQERPC",26,0)
 ;    RESULT - array of tag-labeled patient demographics
"RTN","DGQERPC",27,0)
 ;
"RTN","DGQERPC",28,0)
 ; Subscript  Field#  Field contents             Description
"RTN","DGQERPC",29,0)
 ; ---------  ------  -------------------------  ----------------
"RTN","DGQERPC",30,0)
 ;     1         1    <RESULT>                   RPC status tag
"RTN","DGQERPC",31,0)
 ;               2    Card Print Release Status
"RTN","DGQERPC",32,0)
 ;               3    "VIC"
"RTN","DGQERPC",33,0)
 ;
"RTN","DGQERPC",34,0)
 ;     2         1    <MSG>                      Remarks tag
"RTN","DGQERPC",35,0)
 ;               2    Free text remarks
"RTN","DGQERPC",36,0)
 ;
"RTN","DGQERPC",37,0)
 ;     3         1    <NAME>                     Identifier tag
"RTN","DGQERPC",38,0)
 ;               2    Full Name
"RTN","DGQERPC",39,0)
 ;               3    Social Security Number
"RTN","DGQERPC",40,0)
 ;               4    Date of Birth
"RTN","DGQERPC",41,0)
 ;
"RTN","DGQERPC",42,0)
 ;     4         1    <NAME1>                    Name components tag
"RTN","DGQERPC",43,0)
 ;               2    Last Name
"RTN","DGQERPC",44,0)
 ;               3    First Name
"RTN","DGQERPC",45,0)
 ;               4    Middle Name
"RTN","DGQERPC",46,0)
 ;               5    Name Suffix
"RTN","DGQERPC",47,0)
 ;               6    Name Prefix
"RTN","DGQERPC",48,0)
 ;
"RTN","DGQERPC",49,0)
 ;     5         1    <TYPE>                     Veteran type tag
"RTN","DGQERPC",50,0)
 ;               2    Service Connected Indicator
"RTN","DGQERPC",51,0)
 ;               3    Prisoner of War Indicator
"RTN","DGQERPC",52,0)
 ;               4    Purple Heart Indicator
"RTN","DGQERPC",53,0)
 ;
"RTN","DGQERPC",54,0)
 ;     6         1    <PATAS>                    Mailing address tag
"RTN","DGQERPC",55,0)
 ;               2    Street Line 1
"RTN","DGQERPC",56,0)
 ;               3    Street Line 2
"RTN","DGQERPC",57,0)
 ;               4    Street Line 3
"RTN","DGQERPC",58,0)
 ;
"RTN","DGQERPC",59,0)
 ;     7         1    <PATAZ>                    Mailing address tag
"RTN","DGQERPC",60,0)
 ;               2    City
"RTN","DGQERPC",61,0)
 ;               3    State
"RTN","DGQERPC",62,0)
 ;               4    Zip
"RTN","DGQERPC",63,0)
 ;
"RTN","DGQERPC",64,0)
 ;     8         1    <MPI>                     Master Patient Index tag
"RTN","DGQERPC",65,0)
 ;               2    Integration Control Number
"RTN","DGQERPC",66,0)
 ;               3    DFN
"RTN","DGQERPC",67,0)
 ;
"RTN","DGQERPC",68,0)
 ;     9         1    <SITE>                    Facility tag
"RTN","DGQERPC",69,0)
 ;               2    Facility Name
"RTN","DGQERPC",70,0)
 ;               3    Station Number
"RTN","DGQERPC",71,0)
 ;               4    VISN
"RTN","DGQERPC",72,0)
 ;
"RTN","DGQERPC",73,0)
 N DGDFN   ;pointer to patient in PATIENT (#2) file
"RTN","DGQERPC",74,0)
 N DGVIC   ;patient data array
"RTN","DGQERPC",75,0)
 ;
"RTN","DGQERPC",76,0)
 ;initialize patient data array
"RTN","DGQERPC",77,0)
 D INITARR^DGQEUT1(.DGVIC)
"RTN","DGQERPC",78,0)
 ;
"RTN","DGQERPC",79,0)
 D  ;drop out of block on error
"RTN","DGQERPC",80,0)
 . ;
"RTN","DGQERPC",81,0)
 . ;check for input parameter
"RTN","DGQERPC",82,0)
 . S DGDFN=+$$GETDFN^MPIF001($G(DGICN))
"RTN","DGQERPC",83,0)
 . Q:(DGDFN'>0)
"RTN","DGQERPC",84,0)
 . ;
"RTN","DGQERPC",85,0)
 . ;build patient object
"RTN","DGQERPC",86,0)
 . Q:'$$GETPAT^DGQEUT1(DGDFN,.DGVIC)
"RTN","DGQERPC",87,0)
 . ;
"RTN","DGQERPC",88,0)
 . ;build eligibility object
"RTN","DGQERPC",89,0)
 . Q:'$$GETELIG^DGQEUT1(DGDFN,.DGVIC)
"RTN","DGQERPC",90,0)
 ;
"RTN","DGQERPC",91,0)
 ;determine card print release status and get into array
"RTN","DGQERPC",92,0)
 D CPRSTAT^DGQEUT2(.DGVIC)
"RTN","DGQERPC",93,0)
 ;
"RTN","DGQERPC",94,0)
 ;build results document
"RTN","DGQERPC",95,0)
 D BLDDOC(.DGVIC,.RESULT)
"RTN","DGQERPC",96,0)
 ;
"RTN","DGQERPC",97,0)
 Q
"RTN","DGQERPC",98,0)
 ;
"RTN","DGQERPC",99,0)
 ;
"RTN","DGQERPC",100,0)
SETID(RESULT,DGICN,DGRSTAT,DGID) ;callback RPC from Maximus workstation
"RTN","DGQERPC",101,0)
 ;
"RTN","DGQERPC",102,0)
 ; --rpc: DGQE SET CARD ID
"RTN","DGQERPC",103,0)
 ;
"RTN","DGQERPC",104,0)
 ; This remote procedure provides a "callback" for the VIC PICS
"RTN","DGQERPC",105,0)
 ; Workstation to notify VistA that a patient's VIC request has been
"RTN","DGQERPC",106,0)
 ; successfully forwarded to the National Card Management Directory.
"RTN","DGQERPC",107,0)
 ; The procedure creates an entry in the VIC REQUEST (#39.6) file when
"RTN","DGQERPC",108,0)
 ; the Card Print Release Status is "H" [Hold].
"RTN","DGQERPC",109,0)
 ; 
"RTN","DGQERPC",110,0)
 ;  Supported References:                                               
"RTN","DGQERPC",111,0)
 ;    DBIA #2701: $$GETDFN^MPIF001
"RTN","DGQERPC",112,0)
 ;
"RTN","DGQERPC",113,0)
 ;  Input:
"RTN","DGQERPC",114,0)
 ;     DGICN - patient's Integration Control Number
"RTN","DGQERPC",115,0)
 ;   DGRSTAT - card print release status
"RTN","DGQERPC",116,0)
 ;      DGID - NCMD assigned Card ID
"RTN","DGQERPC",117,0)
 ;
"RTN","DGQERPC",118,0)
 ;  Output:
"RTN","DGQERPC",119,0)
 ;    none
"RTN","DGQERPC",120,0)
 ;
"RTN","DGQERPC",121,0)
 N DGDFN  ;pointer to patient in PATIENT (#2) file
"RTN","DGQERPC",122,0)
 ;
"RTN","DGQERPC",123,0)
 S DGDFN=+$$GETDFN^MPIF001($G(DGICN))
"RTN","DGQERPC",124,0)
 I DGDFN>0,$D(^DPT(DGDFN,0)),$G(DGRSTAT)]"" D
"RTN","DGQERPC",125,0)
 . I $E(DGRSTAT)="H" D STOCID^DGQEREQ(DGID,DGDFN,DGRSTAT)
"RTN","DGQERPC",126,0)
 S RESULT=1
"RTN","DGQERPC",127,0)
 ;
"RTN","DGQERPC",128,0)
 Q
"RTN","DGQERPC",129,0)
 ;
"RTN","DGQERPC",130,0)
 ;
"RTN","DGQERPC",131,0)
BLDDOC(DGPAT,DGRSLT) ;build results document based on DOCMAP table
"RTN","DGQERPC",132,0)
 ; This procedure uses the array subscript to field location table
"RTN","DGQERPC",133,0)
 ; in linetag DOCMAP to format the GETDEMO RPC result array.
"RTN","DGQERPC",134,0)
 ;
"RTN","DGQERPC",135,0)
 ;  Input:
"RTN","DGQERPC",136,0)
 ;    DGPAT - combined patient/eligibility data array
"RTN","DGQERPC",137,0)
 ;
"RTN","DGQERPC",138,0)
 ;  Output:
"RTN","DGQERPC",139,0)
 ;    DGRSLT - RPC result array
"RTN","DGQERPC",140,0)
 ;
"RTN","DGQERPC",141,0)
 N DGFLD    ;table field location
"RTN","DGQERPC",142,0)
 N DGLCNT   ;line count
"RTN","DGQERPC",143,0)
 N DGLINE   ;line content
"RTN","DGQERPC",144,0)
 N DGFLDNM  ;field name
"RTN","DGQERPC",145,0)
 ;
"RTN","DGQERPC",146,0)
 F DGLCNT=1:1 S DGLINE=$T(DOCMAP+DGLCNT) Q:DGLINE=""  D
"RTN","DGQERPC",147,0)
 . S DGRSLT(DGLCNT)="<"_$P(DGLINE,";",3)_">"  ;set TAG
"RTN","DGQERPC",148,0)
 . F DGFLD=4:1 S DGFLDNM=$P(DGLINE,";",DGFLD) Q:DGFLDNM=""  D
"RTN","DGQERPC",149,0)
 . . S DGRSLT(DGLCNT)=DGRSLT(DGLCNT)_"^"_$G(DGPAT(DGFLDNM))
"RTN","DGQERPC",150,0)
 ;
"RTN","DGQERPC",151,0)
 Q
"RTN","DGQERPC",152,0)
 ;
"RTN","DGQERPC",153,0)
 ;
"RTN","DGQERPC",154,0)
DOCMAP ;document field to array subscript map;TAG;FIELD1;FIELD2;...;FIELDn
"RTN","DGQERPC",155,0)
 ;;RESULT;STAT;DOCTYPE
"RTN","DGQERPC",156,0)
 ;;MSG;REMARKS
"RTN","DGQERPC",157,0)
 ;;NAME;NAME;SSN;DOB
"RTN","DGQERPC",158,0)
 ;;NAME1;LAST;FIRST;MIDDLE;SUFFIX;PREFIX
"RTN","DGQERPC",159,0)
 ;;TYPE;SC;POW;PH
"RTN","DGQERPC",160,0)
 ;;PATAS;STREET1;STREET2;STREET3
"RTN","DGQERPC",161,0)
 ;;PATAZ;CITY;STATE;ZIP
"RTN","DGQERPC",162,0)
 ;;MPI;ICN;DFN
"RTN","DGQERPC",163,0)
 ;;SITE;FACNAME;FACNUM;VISN
"RTN","DGQEUT1")
0^4^B31813061
"RTN","DGQEUT1",1,0)
DGQEUT1 ;ALB/RPM - VIC REPLACEMENT UTILITIES #1 ; 10/03/05
"RTN","DGQEUT1",2,0)
 ;;5.3;Registration;**571,679**;Aug 13, 1993
"RTN","DGQEUT1",3,0)
 ;
"RTN","DGQEUT1",4,0)
 ; This routine contains the following VIC Redesign API's:
"RTN","DGQEUT1",5,0)
 ;   INITARR   - initialize data array
"RTN","DGQEUT1",6,0)
 ;   $$GETPAT  - build Patient data array
"RTN","DGQEUT1",7,0)
 ;   $$GETELIG - build Patient Eligibility data array
"RTN","DGQEUT1",8,0)
 ;   $$GETPH   - determine Purple Heart status
"RTN","DGQEUT1",9,0)
 ;   $$GETPOW  - determine Prisoner of War status
"RTN","DGQEUT1",10,0)
 ;   $$FNDPOW  - search for Prisoner of War eligibility code
"RTN","DGQEUT1",11,0)
 ;   $$ISENRPND - is enrollment status pending
"RTN","DGQEUT1",12,0)
 ;
"RTN","DGQEUT1",13,0)
 Q  ;no direct entry
"RTN","DGQEUT1",14,0)
 ;
"RTN","DGQEUT1",15,0)
INITARR(DGVIC) ;Procedure used to initialize VIC data array nodes.
"RTN","DGQEUT1",16,0)
 ;
"RTN","DGQEUT1",17,0)
 ;  Input:
"RTN","DGQEUT1",18,0)
 ;   none
"RTN","DGQEUT1",19,0)
 ;
"RTN","DGQEUT1",20,0)
 ; Output:
"RTN","DGQEUT1",21,0)
 ;   DGVIC - array of VIC data (pass by reference)
"RTN","DGQEUT1",22,0)
 ;
"RTN","DGQEUT1",23,0)
 N DGSUB ;array subscript
"RTN","DGQEUT1",24,0)
 ;
"RTN","DGQEUT1",25,0)
 ;init patient identifier nodes
"RTN","DGQEUT1",26,0)
 S DGVIC("DFN")=""
"RTN","DGQEUT1",27,0)
 F DGSUB="NAME","SSN","DOB","LAST","FIRST","MIDDLE","SUFFIX","PREFIX" D
"RTN","DGQEUT1",28,0)
 . S DGVIC(DGSUB)=""
"RTN","DGQEUT1",29,0)
 ;
"RTN","DGQEUT1",30,0)
 ;init address nodes
"RTN","DGQEUT1",31,0)
 F DGSUB="STREET1","STREET2","STREET3","CITY","STATE","ZIP","ADRTYPE" D
"RTN","DGQEUT1",32,0)
 . S DGVIC(DGSUB)=""
"RTN","DGQEUT1",33,0)
 ;
"RTN","DGQEUT1",34,0)
 ;init vic eligibility nodes
"RTN","DGQEUT1",35,0)
 F DGSUB="SC","ENRSTAT","ELIGSTAT","MST","COMBVET","POW","PH" D
"RTN","DGQEUT1",36,0)
 . S DGVIC(DGSUB)=""
"RTN","DGQEUT1",37,0)
 ;
"RTN","DGQEUT1",38,0)
 ;init facility nodes
"RTN","DGQEUT1",39,0)
 F DGSUB="FACNUM","FACNAME","VISN" D
"RTN","DGQEUT1",40,0)
 . S DGVIC(DGSUB)=""
"RTN","DGQEUT1",41,0)
 ;
"RTN","DGQEUT1",42,0)
 ;init card print release status node
"RTN","DGQEUT1",43,0)
 S DGVIC("STAT")=""
"RTN","DGQEUT1",44,0)
 ;
"RTN","DGQEUT1",45,0)
 ;init document type node
"RTN","DGQEUT1",46,0)
 S DGVIC("DOCTYPE")="VIC"
"RTN","DGQEUT1",47,0)
 ;
"RTN","DGQEUT1",48,0)
 Q
"RTN","DGQEUT1",49,0)
 ;
"RTN","DGQEUT1",50,0)
 ;
"RTN","DGQEUT1",51,0)
GETPAT(DGDFN,DGPAT) ;build Patient object
"RTN","DGQEUT1",52,0)
 ; This function retrieves patient demographic data needed to produce
"RTN","DGQEUT1",53,0)
 ; a Veteran ID Card and returns the data in an array format.
"RTN","DGQEUT1",54,0)
 ;
"RTN","DGQEUT1",55,0)
 ;  Supported Reference:
"RTN","DGQEUT1",56,0)
 ;    DBIA #10103: $$FMTE^XLFDT
"RTN","DGQEUT1",57,0)
 ;
"RTN","DGQEUT1",58,0)
 ;  Input:
"RTN","DGQEUT1",59,0)
 ;    DGDFN - (required) pointer to patient in PATIENT (#2) file
"RTN","DGQEUT1",60,0)
 ;
"RTN","DGQEUT1",61,0)
 ;  Output:
"RTN","DGQEUT1",62,0)
 ;    Function value - returns 1 on success, 0 on failure
"RTN","DGQEUT1",63,0)
 ;    DGPAT - array of patient demographics, pass by reference
"RTN","DGQEUT1",64,0)
 ;            Array subscripts are:
"RTN","DGQEUT1",65,0)
 ;             "DFN"     - Pointer to patient in PATIENT (#2) file
"RTN","DGQEUT1",66,0)
 ;             "NAME"    - Patient Full Name
"RTN","DGQEUT1",67,0)
 ;             "SSN"     - Social Security Number
"RTN","DGQEUT1",68,0)
 ;             "DOB"     - Date of Birth (mmddyyyy)
"RTN","DGQEUT1",69,0)
 ;             "LAST"    - Family Name from name components
"RTN","DGQEUT1",70,0)
 ;             "FIRST"   - Given Name from name components
"RTN","DGQEUT1",71,0)
 ;             "MIDDLE"  - Middle Name from name components
"RTN","DGQEUT1",72,0)
 ;             "SUFFIX"  - Suffix from name components
"RTN","DGQEUT1",73,0)
 ;             "PREFIX"  - Prefix from name components
"RTN","DGQEUT1",74,0)
 ;             "STREET1" - Line 1 of mailing address
"RTN","DGQEUT1",75,0)
 ;             "STREET2" - Line 2 of mailing address
"RTN","DGQEUT1",76,0)
 ;             "STREET3" - Line 3 of mailing address
"RTN","DGQEUT1",77,0)
 ;             "CITY"    - Mailing address city
"RTN","DGQEUT1",78,0)
 ;             "STATE"   - Mailing address state
"RTN","DGQEUT1",79,0)
 ;             "ZIP"     - Mailing address ZIP code
"RTN","DGQEUT1",80,0)
 ;             "ADRTYPE" - Mailing address type
"RTN","DGQEUT1",81,0)
 ;                            [0:unable to determine,1:permanent,
"RTN","DGQEUT1",82,0)
 ;                             2:temporary,3:confidential,4:facility]
"RTN","DGQEUT1",83,0)
 ;             "ICN"     - Integration Control Number
"RTN","DGQEUT1",84,0)
 ;             "FACNUM"  - Local Station number
"RTN","DGQEUT1",85,0)
 ;             "FACNAME" - Local Facility name
"RTN","DGQEUT1",86,0)
 ;             "VISN"    - Local Facility's VISN
"RTN","DGQEUT1",87,0)
 ;
"RTN","DGQEUT1",88,0)
 N DGRSLT
"RTN","DGQEUT1",89,0)
 ;
"RTN","DGQEUT1",90,0)
 S DGRSLT=0
"RTN","DGQEUT1",91,0)
 ;
"RTN","DGQEUT1",92,0)
 I $G(DGDFN)>0,$D(^DPT(DGDFN,0)) D  ;drop out of block on first failure
"RTN","DGQEUT1",93,0)
 . ;
"RTN","DGQEUT1",94,0)
 . ;get name, ssn, dob, dfn
"RTN","DGQEUT1",95,0)
 . Q:'$$GETIDS^DGQEDEMO(DGDFN,.DGPAT)
"RTN","DGQEUT1",96,0)
 . ;
"RTN","DGQEUT1",97,0)
 . ;format Date of Birth to mmddyyyy
"RTN","DGQEUT1",98,0)
 . S DGPAT("DOB")=$TR($$FMTE^XLFDT(DGPAT("DOB"),"5Z"),"/","")
"RTN","DGQEUT1",99,0)
 . ;
"RTN","DGQEUT1",100,0)
 . ;get name components
"RTN","DGQEUT1",101,0)
 . Q:'$$GETNAMC^DGQEDEMO(DGDFN,.DGPAT)
"RTN","DGQEUT1",102,0)
 . ;
"RTN","DGQEUT1",103,0)
 . ;get mailing address
"RTN","DGQEUT1",104,0)
 . Q:'$$GETADDR^DGQEDEMO(DGDFN,.DGPAT)
"RTN","DGQEUT1",105,0)
 . ;
"RTN","DGQEUT1",106,0)
 . ;get national ICN
"RTN","DGQEUT1",107,0)
 . S DGPAT("ICN")=$$GETICN^DGQEDEMO(DGDFN)
"RTN","DGQEUT1",108,0)
 . ;
"RTN","DGQEUT1",109,0)
 . ;get facility info
"RTN","DGQEUT1",110,0)
 . D GETSITE^DGQEDEMO(.DGPAT)
"RTN","DGQEUT1",111,0)
 . ;
"RTN","DGQEUT1",112,0)
 . ;success
"RTN","DGQEUT1",113,0)
 . S DGRSLT=1
"RTN","DGQEUT1",114,0)
 ;
"RTN","DGQEUT1",115,0)
 Q DGRSLT
"RTN","DGQEUT1",116,0)
 ;
"RTN","DGQEUT1",117,0)
GETELIG(DGDFN,DGELG) ;build Patient Eligibility object
"RTN","DGQEUT1",118,0)
 ; This function retrieves patient data needed to determine the
"RTN","DGQEUT1",119,0)
 ; patient's VIC eligibility and returns the data in an array format.
"RTN","DGQEUT1",120,0)
 ;
"RTN","DGQEUT1",121,0)
 ;  Supported References:
"RTN","DGQEUT1",122,0)
 ;    DBIA #10061: ELIG^VADPT
"RTN","DGQEUT1",123,0)
 ;    DBIA  #2716: $$GETSTAT^DGMSTAPI
"RTN","DGQEUT1",124,0)
 ;    DBIA  #4156: $$CVEDT^DGCV
"RTN","DGQEUT1",125,0)
 ;
"RTN","DGQEUT1",126,0)
 ;  Input:
"RTN","DGQEUT1",127,0)
 ;    DGDFN - (required) pointer to patient in PATIENT (#2) file
"RTN","DGQEUT1",128,0)
 ;
"RTN","DGQEUT1",129,0)
 ;  Output:
"RTN","DGQEUT1",130,0)
 ;    Function value - returns 1 on success, 0 on failure
"RTN","DGQEUT1",131,0)
 ;    DGELG - array of eligibility indicators, pass by reference
"RTN","DGQEUT1",132,0)
 ;            Array subscripts are:
"RTN","DGQEUT1",133,0)
 ;             "SC"       - Service Connected indicator
"RTN","DGQEUT1",134,0)
 ;             "ENRSTAT"  - Enrollment Status
"RTN","DGQEUT1",135,0)
 ;             "ELIGSTAT" - Eligibility Status
"RTN","DGQEUT1",136,0)
 ;             "MST"      - Military Sexual Trauma Status
"RTN","DGQEUT1",137,0)
 ;             "COMBVET"  - Combat Veteran Status
"RTN","DGQEUT1",138,0)
 ;             "POW"      - Prisoner of War Indicator
"RTN","DGQEUT1",139,0)
 ;             "PH"       - Purple Heart Indicator
"RTN","DGQEUT1",140,0)
 ;
"RTN","DGQEUT1",141,0)
 N DFN     ;input parameter to ELIG^VADPT
"RTN","DGQEUT1",142,0)
 N DGRSLT  ;function value
"RTN","DGQEUT1",143,0)
 N VAEL    ;VADPT return array
"RTN","DGQEUT1",144,0)
 N VAERR   ;VADPT error value
"RTN","DGQEUT1",145,0)
 ;
"RTN","DGQEUT1",146,0)
 S DGRSLT=0
"RTN","DGQEUT1",147,0)
 ;
"RTN","DGQEUT1",148,0)
 I $G(DGDFN)>0,$D(^DPT(DGDFN,0)) D
"RTN","DGQEUT1",149,0)
 . ;
"RTN","DGQEUT1",150,0)
 . ;get Eligibility Status and Service Connection
"RTN","DGQEUT1",151,0)
 . S DFN=DGDFN
"RTN","DGQEUT1",152,0)
 . D ELIG^VADPT
"RTN","DGQEUT1",153,0)
 . S DGELG("ELIGSTAT")=$P($G(VAEL(8)),U)
"RTN","DGQEUT1",154,0)
 . S DGELG("SC")=+$G(VAEL(3))
"RTN","DGQEUT1",155,0)
 . ;
"RTN","DGQEUT1",156,0)
 . ;get current Enrollment Status
"RTN","DGQEUT1",157,0)
 . S DGELG("ENRSTAT")=$$STATUS^DGENA(DGDFN)
"RTN","DGQEUT1",158,0)
 . ;
"RTN","DGQEUT1",159,0)
 . ;get MST Status
"RTN","DGQEUT1",160,0)
 . S DGELG("MST")=$P($$GETSTAT^DGMSTAPI(DGDFN),U,2)
"RTN","DGQEUT1",161,0)
 . ;
"RTN","DGQEUT1",162,0)
 . ;get Combat Veteran Status
"RTN","DGQEUT1",163,0)
 . S DGELG("COMBVET")=+$$CVEDT^DGCV(DGDFN)
"RTN","DGQEUT1",164,0)
 . ;
"RTN","DGQEUT1",165,0)
 . ;get Purple Heart Indicator
"RTN","DGQEUT1",166,0)
 . S DGELG("PH")=$$GETPH(DGDFN)
"RTN","DGQEUT1",167,0)
 . ;
"RTN","DGQEUT1",168,0)
 . ;get POW indicator
"RTN","DGQEUT1",169,0)
 . S DGELG("POW")=$S($$ISENRPND(DGELG("ENRSTAT")):"P",1:$$FNDPOW(.VAEL))
"RTN","DGQEUT1",170,0)
 . ;
"RTN","DGQEUT1",171,0)
 . ;success
"RTN","DGQEUT1",172,0)
 . S DGRSLT=1
"RTN","DGQEUT1",173,0)
 ;
"RTN","DGQEUT1",174,0)
 Q DGRSLT
"RTN","DGQEUT1",175,0)
 ;
"RTN","DGQEUT1",176,0)
GETPH(DGDFN) ;get purple heart indicator
"RTN","DGQEUT1",177,0)
 ;This function retrieves the Current PH Indicator and Current PH
"RTN","DGQEUT1",178,0)
 ;Status and returns a single interpretation value.
"RTN","DGQEUT1",179,0)
 ;
"RTN","DGQEUT1",180,0)
 ;  Supported References:
"RTN","DGQEUT1",181,0)
 ;    DBIA #10061: SVC^VADPT
"RTN","DGQEUT1",182,0)
 ;
"RTN","DGQEUT1",183,0)
 ;  Input:
"RTN","DGQEUT1",184,0)
 ;    DGDFN - pointer to patient in PATIENT (#2) file
"RTN","DGQEUT1",185,0)
 ;
"RTN","DGQEUT1",186,0)
 ;  Output:
"RTN","DGQEUT1",187,0)
 ;   Function value - returns "Y" to print indicator on VIC; "N" to
"RTN","DGQEUT1",188,0)
 ;                    not print indicator on VIC; "P" to hold request
"RTN","DGQEUT1",189,0)
 ;                    until confirmation; "" when Registration interview
"RTN","DGQEUT1",190,0)
 ;                    question is unanswered.
"RTN","DGQEUT1",191,0)
 ;
"RTN","DGQEUT1",192,0)
 N DFN       ;input parameter to SVC^VADPT
"RTN","DGQEUT1",193,0)
 N DGPHIND   ;current purple heart indicator
"RTN","DGQEUT1",194,0)
 N DGPHSTAT  ;current purple heart status
"RTN","DGQEUT1",195,0)
 N DGRSLT    ;function value
"RTN","DGQEUT1",196,0)
 N VAERR     ;VADPT error value
"RTN","DGQEUT1",197,0)
 N VASV      ;VADPT return array
"RTN","DGQEUT1",198,0)
 ;
"RTN","DGQEUT1",199,0)
 S DGRSLT=""
"RTN","DGQEUT1",200,0)
 ;
"RTN","DGQEUT1",201,0)
 I $G(DGDFN)>0,$D(^DPT(DGDFN)) D
"RTN","DGQEUT1",202,0)
 . ;
"RTN","DGQEUT1",203,0)
 . ;get purple heart indicator and status
"RTN","DGQEUT1",204,0)
 . S DFN=DGDFN
"RTN","DGQEUT1",205,0)
 . D SVC^VADPT
"RTN","DGQEUT1",206,0)
 . S DGPHIND=$G(VASV(9))
"RTN","DGQEUT1",207,0)
 . S DGPHSTAT=$P($G(VASV(9,1)),U,2)
"RTN","DGQEUT1",208,0)
 . ;
"RTN","DGQEUT1",209,0)
 . ;interpret status
"RTN","DGQEUT1",210,0)
 . I DGPHIND=1 S DGRSLT=$S(DGPHSTAT="CONFIRMED":"Y",1:"P")
"RTN","DGQEUT1",211,0)
 . I DGPHIND=0 S DGRSLT="N"
"RTN","DGQEUT1",212,0)
 ;
"RTN","DGQEUT1",213,0)
 Q DGRSLT
"RTN","DGQEUT1",214,0)
 ;
"RTN","DGQEUT1",215,0)
GETPOW(DGDFN) ;get POW indicator
"RTN","DGQEUT1",216,0)
 ;This function retrieves the eligibility codes for a given patient and
"RTN","DGQEUT1",217,0)
 ;returns the POW indicator.
"RTN","DGQEUT1",218,0)
 ;
"RTN","DGQEUT1",219,0)
 ;  Supported References:
"RTN","DGQEUT1",220,0)
 ;    DBIA #10061: ELIG^VADPT
"RTN","DGQEUT1",221,0)
 ;
"RTN","DGQEUT1",222,0)
 ;  Input:
"RTN","DGQEUT1",223,0)
 ;    DGDFN - pointer to patient in PATIENT (#2) file
"RTN","DGQEUT1",224,0)
 ;
"RTN","DGQEUT1",225,0)
 ;  Output:
"RTN","DGQEUT1",226,0)
 ;   Function value - returns results from call to $$FNDPOW
"RTN","DGQEUT1",227,0)
 ;
"RTN","DGQEUT1",228,0)
 N DFN
"RTN","DGQEUT1",229,0)
 N VAEL    ;VADPT result array
"RTN","DGQEUT1",230,0)
 N VAERR   ;VADPT error message
"RTN","DGQEUT1",231,0)
 ;
"RTN","DGQEUT1",232,0)
 S DFN=$G(DGDFN)
"RTN","DGQEUT1",233,0)
 D ELIG^VADPT
"RTN","DGQEUT1",234,0)
 ;
"RTN","DGQEUT1",235,0)
 Q $$FNDPOW(.VAEL)
"RTN","DGQEUT1",236,0)
 ;
"RTN","DGQEUT1",237,0)
FNDPOW(DGEL) ;find POW eligibility code
"RTN","DGQEUT1",238,0)
 ;This function searches a list of eligibility codes for PRISONER OF
"RTN","DGQEUT1",239,0)
 ;WAR and returns the boolean result.
"RTN","DGQEUT1",240,0)
 ;
"RTN","DGQEUT1",241,0)
 ;  Input:
"RTN","DGQEUT1",242,0)
 ;    DGEL - result array from call to ELIG^VADPT
"RTN","DGQEUT1",243,0)
 ;
"RTN","DGQEUT1",244,0)
 ;  Output:
"RTN","DGQEUT1",245,0)
 ;   Function value - returns "Y" when PRISONER OF WAR found;
"RTN","DGQEUT1",246,0)
 ;                    otherwise "N"
"RTN","DGQEUT1",247,0)
 ;
"RTN","DGQEUT1",248,0)
 N DGEC    ;eligibility code number
"RTN","DGQEUT1",249,0)
 N DGRSLT  ;function value
"RTN","DGQEUT1",250,0)
 ;
"RTN","DGQEUT1",251,0)
 S DGRSLT="N"
"RTN","DGQEUT1",252,0)
 ;
"RTN","DGQEUT1",253,0)
 S DGEC=0
"RTN","DGQEUT1",254,0)
 F  S DGEC=$O(DGEL(1,DGEC)) Q:'DGEC  D  Q:DGRSLT="Y"
"RTN","DGQEUT1",255,0)
 . I $P(DGEL(1,DGEC),U,2)="PRISONER OF WAR" S DGRSLT="Y"
"RTN","DGQEUT1",256,0)
 ;
"RTN","DGQEUT1",257,0)
 Q DGRSLT
"RTN","DGQEUT1",258,0)
 ;
"RTN","DGQEUT1",259,0)
ISENRPND(DGST) ;is veteran's enrollment status pending?
"RTN","DGQEUT1",260,0)
 ;
"RTN","DGQEUT1",261,0)
 ;  Input:
"RTN","DGQEUT1",262,0)
 ;    DGST - pointer to enrollment status in ENROLLMENT STATUS (#27.15)
"RTN","DGQEUT1",263,0)
 ;           file.
"RTN","DGQEUT1",264,0)
 ;
"RTN","DGQEUT1",265,0)
 ;  Output:
"RTN","DGQEUT1",266,0)
 ;   Function value - returns 1 when status is pending; otherwise 0
"RTN","DGQEUT1",267,0)
 ;
"RTN","DGQEUT1",268,0)
 S DGST=+$G(DGST)
"RTN","DGQEUT1",269,0)
 Q $S('DGST:1,DGST=1:1,DGST=15:1,DGST=16:1,DGST=17:1,DGST=18:1,1:0)
"RTN","DGQEUT2")
0^5^B45753448
"RTN","DGQEUT2",1,0)
DGQEUT2 ;ALB/RPM - VIC REPLACEMENT UTILITIES #2 ; 3/13/06 11:12am
"RTN","DGQEUT2",2,0)
 ;;5.3;Registration;**571,641,679**;Aug 13, 1993
"RTN","DGQEUT2",3,0)
 ;
"RTN","DGQEUT2",4,0)
 ; This routine contains the following VIC Redesign API's:
"RTN","DGQEUT2",5,0)
 ;   CPRSTAT   - determine Card Print Release Status
"RTN","DGQEUT2",6,0)
 ;   $$PENDDT  - checks for pending requests and returns request date
"RTN","DGQEUT2",7,0)
 ;   $$REQFLD  - checks for required fields
"RTN","DGQEUT2",8,0)
 ;   $$HOLD    - checks for pending ICN and/or Enrollment
"RTN","DGQEUT2",9,0)
 ;   $$VICELIG - determines applicant's VIC eligibility
"RTN","DGQEUT2",10,0)
 ;
"RTN","DGQEUT2",11,0)
 Q  ;no direct entry
"RTN","DGQEUT2",12,0)
 ;
"RTN","DGQEUT2",13,0)
 ;
"RTN","DGQEUT2",14,0)
CPRSTAT(DGVIC) ;determine card print release status
"RTN","DGQEUT2",15,0)
 ; This procedure is used to determine Card Print Release Status from
"RTN","DGQEUT2",16,0)
 ; the data contained in the input array (DGVIC).  Once determined, the
"RTN","DGQEUT2",17,0)
 ; status and remarks are placed into the VIC data array.
"RTN","DGQEUT2",18,0)
 ;
"RTN","DGQEUT2",19,0)
 ;  Input:
"RTN","DGQEUT2",20,0)
 ;   DGVIC - VIC data array (pass by reference)
"RTN","DGQEUT2",21,0)
 ;
"RTN","DGQEUT2",22,0)
 ; Output: None
"RTN","DGQEUT2",23,0)
 ;
"RTN","DGQEUT2",24,0)
 N DGERR
"RTN","DGQEUT2",25,0)
 ;
"RTN","DGQEUT2",26,0)
 D  ;drop out of DO block when DGVIC("STAT") is known
"RTN","DGQEUT2",27,0)
 . ;
"RTN","DGQEUT2",28,0)
 . ;check if DFN is valid
"RTN","DGQEUT2",29,0)
 . ;set card print release status="C"ancel if not valid
"RTN","DGQEUT2",30,0)
 . I '$D(^DPT(+$G(DGVIC("DFN")),0)) D
"RTN","DGQEUT2",31,0)
 . . S DGVIC("STAT")="C"
"RTN","DGQEUT2",32,0)
 . . S DGVIC("REMARKS")="Unable to find veteran in the database"
"RTN","DGQEUT2",33,0)
 . Q:DGVIC("STAT")]""
"RTN","DGQEUT2",34,0)
 . ;
"RTN","DGQEUT2",35,0)
 . ;check for required fields
"RTN","DGQEUT2",36,0)
 . ;set card print release status="C"ancel if req field is missing
"RTN","DGQEUT2",37,0)
 . I '$$REQFLD(.DGVIC,.DGERR) D
"RTN","DGQEUT2",38,0)
 . . S DGVIC("STAT")="C"
"RTN","DGQEUT2",39,0)
 . . S DGVIC("REMARKS")=$G(DGERR)
"RTN","DGQEUT2",40,0)
 . Q:DGVIC("STAT")]""
"RTN","DGQEUT2",41,0)
 . ;
"RTN","DGQEUT2",42,0)
 . ;check for pending conditions
"RTN","DGQEUT2",43,0)
 . ;set card print release status="H"old if pending conditions exist
"RTN","DGQEUT2",44,0)
 . I $$HOLD(.DGVIC,.DGERR) D
"RTN","DGQEUT2",45,0)
 . . S DGVIC("STAT")="H"
"RTN","DGQEUT2",46,0)
 . . S DGVIC("REMARKS")=$G(DGERR)
"RTN","DGQEUT2",47,0)
 . Q:DGVIC("STAT")]""
"RTN","DGQEUT2",48,0)
 . ;
"RTN","DGQEUT2",49,0)
 . ;check if pt is eligible for VIC
"RTN","DGQEUT2",50,0)
 . ;set card print release status="P"rint if eligible, else "I"neligible
"RTN","DGQEUT2",51,0)
 . I $$VICELIG(.DGVIC) S DGVIC("STAT")="P"
"RTN","DGQEUT2",52,0)
 . E  D
"RTN","DGQEUT2",53,0)
 . . S DGVIC("STAT")="I"
"RTN","DGQEUT2",54,0)
 . . S DGVIC("REMARKS")="Veteran does not meet VIC eligibility requirements."
"RTN","DGQEUT2",55,0)
 ;
"RTN","DGQEUT2",56,0)
 Q
"RTN","DGQEUT2",57,0)
 ;
"RTN","DGQEUT2",58,0)
 ;
"RTN","DGQEUT2",59,0)
PENDDT(DGDFN) ;check for pending request date
"RTN","DGQEUT2",60,0)
 ;
"RTN","DGQEUT2",61,0)
 ;  Input:
"RTN","DGQEUT2",62,0)
 ;    DGDFN - pointer to patient in PATIENT (#2) file
"RTN","DGQEUT2",63,0)
 ;
"RTN","DGQEUT2",64,0)
 ;  Output:
"RTN","DGQEUT2",65,0)
 ;   Function value - FM format request date on success, 0 on failure
"RTN","DGQEUT2",66,0)
 ;
"RTN","DGQEUT2",67,0)
 N DGDAT   ;function value
"RTN","DGQEUT2",68,0)
 N DGRIEN  ;VIC REQUEST pointer
"RTN","DGQEUT2",69,0)
 N DGREQ   ;array of request data
"RTN","DGQEUT2",70,0)
 ;
"RTN","DGQEUT2",71,0)
 S DGDAT=0
"RTN","DGQEUT2",72,0)
 ;
"RTN","DGQEUT2",73,0)
 ;get last request
"RTN","DGQEUT2",74,0)
 S DGRIEN=$$FINDLST^DGQEREQ(DGDFN)
"RTN","DGQEUT2",75,0)
 I DGRIEN D
"RTN","DGQEUT2",76,0)
 . Q:'$$GETREQ^DGQEREQ(DGRIEN,.DGREQ)
"RTN","DGQEUT2",77,0)
 . ;
"RTN","DGQEUT2",78,0)
 . ;check Card Print Release Status
"RTN","DGQEUT2",79,0)
 . I $G(DGREQ("CPRSTAT"))="H" S DGDAT=+$G(DGREQ("REQDT"))
"RTN","DGQEUT2",80,0)
 ;
"RTN","DGQEUT2",81,0)
 Q DGDAT
"RTN","DGQEUT2",82,0)
 ;
"RTN","DGQEUT2",83,0)
 ;
"RTN","DGQEUT2",84,0)
REQFLD(DGVIC,DGERR) ;required field check
"RTN","DGQEUT2",85,0)
 ; This function is used to check for required fields in the VIC data
"RTN","DGQEUT2",86,0)
 ; array.
"RTN","DGQEUT2",87,0)
 ;
"RTN","DGQEUT2",88,0)
 ;  Input:
"RTN","DGQEUT2",89,0)
 ;   DGVIC - VIC data array (pass by reference)
"RTN","DGQEUT2",90,0)
 ;
"RTN","DGQEUT2",91,0)
 ; Output:
"RTN","DGQEUT2",92,0)
 ;   Function value - returns 1 on success, 0 on failure.
"RTN","DGQEUT2",93,0)
 ;   DGERR - error msg returned on failure
"RTN","DGQEUT2",94,0)
 ;
"RTN","DGQEUT2",95,0)
 N DGTYPE ;mailing address type
"RTN","DGQEUT2",96,0)
 N DGSUB  ;array subscript
"RTN","DGQEUT2",97,0)
 ;
"RTN","DGQEUT2",98,0)
 D  ;quit DO block on first error
"RTN","DGQEUT2",99,0)
 . ;
"RTN","DGQEUT2",100,0)
 . ;check for required SSN
"RTN","DGQEUT2",101,0)
 . I $G(DGVIC("SSN"))="" S DGERR="Unable to determine veteran's Social Security Number"
"RTN","DGQEUT2",102,0)
 . Q:$D(DGERR)
"RTN","DGQEUT2",103,0)
 . ;
"RTN","DGQEUT2",104,0)
 . ;check for required DOB to include month and day
"RTN","DGQEUT2",105,0)
 . I +$G(DGVIC("DOB"))>0 D
"RTN","DGQEUT2",106,0)
 . . I +$E(DGVIC("DOB"),1,2)<1!(+$E(DGVIC("DOB"),3,4)<1) S DGERR="Unable to determine veteran's complete Date of Birth"
"RTN","DGQEUT2",107,0)
 . E  S DGERR="Unable to determine veteran's Date of Birth"
"RTN","DGQEUT2",108,0)
 . Q:$D(DGERR)
"RTN","DGQEUT2",109,0)
 . ;
"RTN","DGQEUT2",110,0)
 . ;check for required name components
"RTN","DGQEUT2",111,0)
 . F DGSUB="NAME","LAST" D  Q:$D(DGERR)
"RTN","DGQEUT2",112,0)
 . . I $G(DGVIC(DGSUB))="" S DGERR="Unable to determine veteran's Name"
"RTN","DGQEUT2",113,0)
 . . ;
"RTN","DGQEUT2",114,0)
 . . ;prevent submission of incomplete patient merges
"RTN","DGQEUT2",115,0)
 . . I DGSUB="NAME",DGVIC(DGSUB)["MERGING INTO" S DGERR="Incomplete patient record merge"
"RTN","DGQEUT2",116,0)
 . Q:$D(DGERR)
"RTN","DGQEUT2",117,0)
 . ;
"RTN","DGQEUT2",118,0)
 . ;check for address selection type
"RTN","DGQEUT2",119,0)
 . I '$G(DGVIC("ADRTYPE")) S DGERR="Unable to determine a mailing address"
"RTN","DGQEUT2",120,0)
 . Q:$D(DGERR)
"RTN","DGQEUT2",121,0)
 . ;
"RTN","DGQEUT2",122,0)
 . ;check for required pt address components
"RTN","DGQEUT2",123,0)
 . F DGSUB="STREET1","CITY","STATE","ZIP" D  Q:$D(DGERR)
"RTN","DGQEUT2",124,0)
 . . I $G(DGVIC(DGSUB))="" D
"RTN","DGQEUT2",125,0)
 . . . S DGTYPE=$S(DGVIC("ADRTYPE")=1:"permanent",DGVIC("ADRTYPE")=2:"temporary",DGVIC("ADRTYPE")=3:"confidential",1:"facility")
"RTN","DGQEUT2",126,0)
 . . . S DGERR="Unable to determine the "_DGSUB_" field of the "_DGTYPE_" mailing address"
"RTN","DGQEUT2",127,0)
 . Q:$D(DGERR)
"RTN","DGQEUT2",128,0)
 . ;
"RTN","DGQEUT2",129,0)
 . ;check for required VIC eligibility factors
"RTN","DGQEUT2",130,0)
 . F DGSUB="SC" D  Q:$D(DGERR)
"RTN","DGQEUT2",131,0)
 . . I $G(DGVIC(DGSUB))="" S DGERR="Unable to determine veteran's Service Connected Indicator"
"RTN","DGQEUT2",132,0)
 . Q:$D(DGERR)
"RTN","DGQEUT2",133,0)
 . ;
"RTN","DGQEUT2",134,0)
 . ;check for required facility data elements
"RTN","DGQEUT2",135,0)
 . F DGSUB="FACNUM","FACNAME","VISN" D  Q:$D(DGERR)
"RTN","DGQEUT2",136,0)
 . . I $G(DGVIC(DGSUB))="" S DGERR="Unable to determine a source facility"
"RTN","DGQEUT2",137,0)
 ;
"RTN","DGQEUT2",138,0)
 Q $S($D(DGERR):0,1:1)
"RTN","DGQEUT2",139,0)
 ;
"RTN","DGQEUT2",140,0)
 ;
"RTN","DGQEUT2",141,0)
HOLD(DGVIC,DGMSG) ;check for pending ICN, Enrollment Status, Purple Heart
"RTN","DGQEUT2",142,0)
 ; This function checks for a pending ICN, Enrollment Status, and/or
"RTN","DGQEUT2",143,0)
 ; Purple Heart confirmation and builds the appropriate message text
"RTN","DGQEUT2",144,0)
 ; when a pending condition exists.
"RTN","DGQEUT2",145,0)
 ;
"RTN","DGQEUT2",146,0)
 ;  Input:
"RTN","DGQEUT2",147,0)
 ;    DGVIC - VIC data array, pass by reference
"RTN","DGQEUT2",148,0)
 ;      Array subscripts are:
"RTN","DGQEUT2",149,0)
 ;          "ICN" - integration control number
"RTN","DGQEUT2",150,0)
 ;                  Note: Must be in format returned by $$GETICN^DGQEDEMO
"RTN","DGQEUT2",151,0)
 ;      "ENRSTAT" - enrollment status
"RTN","DGQEUT2",152,0)
 ;                  Note: Must be in format returned by $$STATUS^DGENA 
"RTN","DGQEUT2",153,0)
 ;           "PH" - purple heart status
"RTN","DGQEUT2",154,0)
 ;                  Note: Must be in format returned by $$GETPH^DGQEUT1
"RTN","DGQEUT2",155,0)
 ;
"RTN","DGQEUT2",156,0)
 ;  Output:
"RTN","DGQEUT2",157,0)
 ;   Function value - returns 1 when a pending condition exists;
"RTN","DGQEUT2",158,0)
 ;                    otherwise, returns 0
"RTN","DGQEUT2",159,0)
 ;
"RTN","DGQEUT2",160,0)
 ;    DGMSG - Message text returned when function value=1 listing 
"RTN","DGQEUT2",161,0)
 ;            pending data items; pass by reference
"RTN","DGQEUT2",162,0)
 ;
"RTN","DGQEUT2",163,0)
 N DGI      ;generic index
"RTN","DGQEUT2",164,0)
 N DGENRST  ;enrollment status value
"RTN","DGQEUT2",165,0)
 N DGCNT    ;pending item count
"RTN","DGQEUT2",166,0)
 N DGRSLT   ;function value
"RTN","DGQEUT2",167,0)
 ;
"RTN","DGQEUT2",168,0)
 S DGRSLT=0
"RTN","DGQEUT2",169,0)
 S DGCNT=0
"RTN","DGQEUT2",170,0)
 S DGENRST=+$G(DGVIC("ENRSTAT"))
"RTN","DGQEUT2",171,0)
 ;
"RTN","DGQEUT2",172,0)
 ;is national ICN missing
"RTN","DGQEUT2",173,0)
 I '+$G(DGVIC("ICN")) D
"RTN","DGQEUT2",174,0)
 . S DGRSLT=1
"RTN","DGQEUT2",175,0)
 . S DGCNT=DGCNT+1
"RTN","DGQEUT2",176,0)
 . S DGMSG(DGCNT)="Veteran does not have a National ICN"
"RTN","DGQEUT2",177,0)
 ;
"RTN","DGQEUT2",178,0)
 ;is enrollment status
"RTN","DGQEUT2",179,0)
 I $$ISENRPND^DGQEUT1(DGENRST) D
"RTN","DGQEUT2",180,0)
 . S DGRSLT=1
"RTN","DGQEUT2",181,0)
 . S DGCNT=DGCNT+1
"RTN","DGQEUT2",182,0)
 . S DGMSG(DGCNT)="Veteran is pending verification"
"RTN","DGQEUT2",183,0)
 ;
"RTN","DGQEUT2",184,0)
 ;is purple heart pending
"RTN","DGQEUT2",185,0)
 I $G(DGVIC("PH"))="P" D
"RTN","DGQEUT2",186,0)
 . S DGRSLT=1
"RTN","DGQEUT2",187,0)
 . S DGCNT=DGCNT+1
"RTN","DGQEUT2",188,0)
 . S DGMSG(DGCNT)="Veteran's Purple Heart status is pending confirmation"
"RTN","DGQEUT2",189,0)
 ;
"RTN","DGQEUT2",190,0)
 ;format message text
"RTN","DGQEUT2",191,0)
 I DGCNT D
"RTN","DGQEUT2",192,0)
 . S DGMSG=""
"RTN","DGQEUT2",193,0)
 . F DGI=1:1:DGCNT S DGMSG=DGMSG_$S(DGI>1&(DGI<DGCNT):", ",DGI>1&(DGI=DGCNT):" and ",1:"")_DGMSG(DGI)
"RTN","DGQEUT2",194,0)
 . S DGMSG=DGMSG_"."
"RTN","DGQEUT2",195,0)
 ;
"RTN","DGQEUT2",196,0)
 Q DGRSLT
"RTN","DGQEUT2",197,0)
 ;
"RTN","DGQEUT2",198,0)
 ;
"RTN","DGQEUT2",199,0)
VICELIG(DGELG) ;is applicant eligible for a Veteran ID Card?
"RTN","DGQEUT2",200,0)
 ; This function determines if an applicant is eligible for a Veteran
"RTN","DGQEUT2",201,0)
 ; Identification Card (VIC).
"RTN","DGQEUT2",202,0)
 ;
"RTN","DGQEUT2",203,0)
 ;  Input:
"RTN","DGQEUT2",204,0)
 ;    DGELG - eligibility data object array
"RTN","DGQEUT2",205,0)
 ;
"RTN","DGQEUT2",206,0)
 ; Output:
"RTN","DGQEUT2",207,0)
 ;  Function Value - returns 1 if the applicant is eligible for VIC,
"RTN","DGQEUT2",208,0)
 ;                   0 if not eligible 
"RTN","DGQEUT2",209,0)
 ;
"RTN","DGQEUT2",210,0)
 N DGRSLT ;function result
"RTN","DGQEUT2",211,0)
 ;
"RTN","DGQEUT2",212,0)
 ;set default, not eligible
"RTN","DGQEUT2",213,0)
 S DGRSLT=0
"RTN","DGQEUT2",214,0)
 ;
"RTN","DGQEUT2",215,0)
 D  ;apply VIC eligibilty rules
"RTN","DGQEUT2",216,0)
 . I (DGELG("ENRSTAT")=2)!(DGELG("ENRSTAT")=21) S DGRSLT=1 Q
"RTN","DGQEUT2",217,0)
 . ;
"RTN","DGQEUT2",218,0)
 . I (DGELG("ENRSTAT")=7)!(DGELG("ENRSTAT")=19)!(DGELG("ENRSTAT")=20) D  Q:DGRSLT
"RTN","DGQEUT2",219,0)
 . . Q:DGELG("ELIGSTAT")'="V"
"RTN","DGQEUT2",220,0)
 . . I DGELG("MST")="Y" S DGRSLT=1 Q
"RTN","DGQEUT2",221,0)
 . . I DGELG("SC")=1 S DGRSLT=1 Q
"RTN","DGQEUT2",222,0)
 . ;
"RTN","DGQEUT2",223,0)
 . I (DGELG("ENRSTAT")=11)!(DGELG("ENRSTAT")=12)!(DGELG("ENRSTAT")=13)!(DGELG("ENRSTAT")=14)!(DGELG("ENRSTAT")=22) D  Q:DGRSLT
"RTN","DGQEUT2",224,0)
 . . Q:DGELG("ELIGSTAT")'="V"
"RTN","DGQEUT2",225,0)
 . . I DGELG("COMBVET")=1 S DGRSLT=1 Q
"RTN","DGQEUT2",226,0)
 . . I DGELG("SC")=1 S DGRSLT=1 Q
"RTN","DGQEUT2",227,0)
 . . I DGELG("MST")="Y" S DGRSLT=1 Q
"RTN","DGQEUT2",228,0)
 ;
"RTN","DGQEUT2",229,0)
 Q DGRSLT
"VER")
8.0^22.0
**END**
**END**
