Released XU*8*265 SEQ #320
Extracted from mail message
**KIDS**:XU*8.0*265^

**INSTALL NAME**
XU*8.0*265
"BLD",626,0)
XU*8.0*265^KERNEL^0^3051005^y
"BLD",626,1,0)
^^2^2^3030219^^^
"BLD",626,1,1,0)
Please refer to the Description in FORUM Patch Module for details.
"BLD",626,1,2,0)
XU*8*265  3 Strikes and You Are Out
"BLD",626,4,0)
^9.64PA^200^4
"BLD",626,4,3.083,0)
3.083
"BLD",626,4,3.083,222)
y^y^f^^^^n
"BLD",626,4,3.084,0)
3.084
"BLD",626,4,3.084,222)
y^y^f^^^^n
"BLD",626,4,200,0)
200
"BLD",626,4,200,2,0)
^9.641^200^1
"BLD",626,4,200,2,200,0)
NEW PERSON  (File-top level)
"BLD",626,4,200,2,200,1,0)
^9.6411^202.05^1
"BLD",626,4,200,2,200,1,202.05,0)
LOCKOUT USER UNTIL
"BLD",626,4,200,222)
y^n^p^^^^n^^n
"BLD",626,4,200,224)

"BLD",626,4,8989.3,0)
8989.3
"BLD",626,4,8989.3,2,0)
^9.641^8989.305^2
"BLD",626,4,8989.3,2,8989.3,0)
KERNEL SYSTEM PARAMETERS  (File-top level)
"BLD",626,4,8989.3,2,8989.3,1,0)
^9.6411^405.16^10
"BLD",626,4,8989.3,2,8989.3,1,.02,0)
IRM MAIL GROUP
"BLD",626,4,8989.3,2,8989.3,1,.03,0)
AFTER HOURS MAIL GROUP
"BLD",626,4,8989.3,2,8989.3,1,405.1,0)
IP SECURITY ON/OFF
"BLD",626,4,8989.3,2,8989.3,1,405.12,0)
FAILED ATTEMPTS LIMIT - IRM
"BLD",626,4,8989.3,2,8989.3,1,405.13,0)
FAILED ATTEMPTS LIMIT - AOD
"BLD",626,4,8989.3,2,8989.3,1,405.14,0)
USER LOCKING
"BLD",626,4,8989.3,2,8989.3,1,405.15,0)
LAST RUN FAILED ATTEMPTS CHECK
"BLD",626,4,8989.3,2,8989.3,1,405.16,0)
TERMINAL SERVER LIMIT
"BLD",626,4,8989.3,2,8989.3,1,405.17,0)
KEEP THRESHOLD
"BLD",626,4,8989.3,2,8989.3,1,405.18,0)
TOTAL COUNT INCREASE
"BLD",626,4,8989.3,2,8989.305,0)
TERMINAL SERVER IP  (sub-file)
"BLD",626,4,8989.3,2,8989.305,1,0)
^9.6411^^
"BLD",626,4,8989.3,222)
y^y^p^^^^n^^n
"BLD",626,4,8989.3,224)

"BLD",626,4,"APDD",200,200)

"BLD",626,4,"APDD",200,200,202.05)

"BLD",626,4,"APDD",8989.3,8989.3)

"BLD",626,4,"APDD",8989.3,8989.3,.02)

"BLD",626,4,"APDD",8989.3,8989.3,.03)

"BLD",626,4,"APDD",8989.3,8989.3,405.1)

"BLD",626,4,"APDD",8989.3,8989.3,405.12)

"BLD",626,4,"APDD",8989.3,8989.3,405.13)

"BLD",626,4,"APDD",8989.3,8989.3,405.14)

"BLD",626,4,"APDD",8989.3,8989.3,405.15)

"BLD",626,4,"APDD",8989.3,8989.3,405.16)

"BLD",626,4,"APDD",8989.3,8989.3,405.17)

"BLD",626,4,"APDD",8989.3,8989.3,405.18)

"BLD",626,4,"APDD",8989.3,8989.305)

"BLD",626,4,"B",3.083,3.083)

"BLD",626,4,"B",3.084,3.084)

"BLD",626,4,"B",200,200)

"BLD",626,4,"B",8989.3,8989.3)

"BLD",626,"KRN",0)
^9.67PA^8989.52^19
"BLD",626,"KRN",.4,0)
.4
"BLD",626,"KRN",.401,0)
.401
"BLD",626,"KRN",.402,0)
.402
"BLD",626,"KRN",.403,0)
.403
"BLD",626,"KRN",.403,"NM",0)
^9.68A^2^2
"BLD",626,"KRN",.403,"NM",1,0)
XUSITEIP    FILE #8989.3^8989.3^0
"BLD",626,"KRN",.403,"NM",2,0)
XUSITEPARM    FILE #8989.3^8989.3^0
"BLD",626,"KRN",.403,"NM","B","XUSITEIP    FILE #8989.3",1)

"BLD",626,"KRN",.403,"NM","B","XUSITEPARM    FILE #8989.3",2)

"BLD",626,"KRN",.5,0)
.5
"BLD",626,"KRN",.84,0)
.84
"BLD",626,"KRN",.84,"NM",0)
^9.68A^30^28
"BLD",626,"KRN",.84,"NM",1,0)
30810.01^^0
"BLD",626,"KRN",.84,"NM",2,0)
30810.02^^0
"BLD",626,"KRN",.84,"NM",3,0)
30810.03^^0
"BLD",626,"KRN",.84,"NM",4,0)
30810.04^^0
"BLD",626,"KRN",.84,"NM",5,0)
30810.05^^0
"BLD",626,"KRN",.84,"NM",6,0)
30810.06^^0
"BLD",626,"KRN",.84,"NM",7,0)
30810.07^^0
"BLD",626,"KRN",.84,"NM",8,0)
30810.08^^0
"BLD",626,"KRN",.84,"NM",9,0)
30810.09^^0
"BLD",626,"KRN",.84,"NM",10,0)
30810.1^^0
"BLD",626,"KRN",.84,"NM",11,0)
30810.11^^0
"BLD",626,"KRN",.84,"NM",12,0)
30810.12^^0
"BLD",626,"KRN",.84,"NM",13,0)
30810.13^^0
"BLD",626,"KRN",.84,"NM",14,0)
30810.14^^0
"BLD",626,"KRN",.84,"NM",15,0)
30810.15^^0
"BLD",626,"KRN",.84,"NM",16,0)
30810.16^^0
"BLD",626,"KRN",.84,"NM",17,0)
30810.17^^0
"BLD",626,"KRN",.84,"NM",20,0)
30810.41^^0
"BLD",626,"KRN",.84,"NM",21,0)
30810.42^^0
"BLD",626,"KRN",.84,"NM",22,0)
30810.18^^0
"BLD",626,"KRN",.84,"NM",23,0)
30810.43^^0
"BLD",626,"KRN",.84,"NM",24,0)
30810.44^^0
"BLD",626,"KRN",.84,"NM",25,0)
30810.51^^0
"BLD",626,"KRN",.84,"NM",26,0)
30810.52^^0
"BLD",626,"KRN",.84,"NM",27,0)
30810.61^^0
"BLD",626,"KRN",.84,"NM",28,0)
30810.62^^0
"BLD",626,"KRN",.84,"NM",29,0)
30810.19^^0
"BLD",626,"KRN",.84,"NM",30,0)
30810.2^^0
"BLD",626,"KRN",.84,"NM","B",30810.01,1)

"BLD",626,"KRN",.84,"NM","B",30810.02,2)

"BLD",626,"KRN",.84,"NM","B",30810.03,3)

"BLD",626,"KRN",.84,"NM","B",30810.04,4)

"BLD",626,"KRN",.84,"NM","B",30810.05,5)

"BLD",626,"KRN",.84,"NM","B",30810.06,6)

"BLD",626,"KRN",.84,"NM","B",30810.07,7)

"BLD",626,"KRN",.84,"NM","B",30810.08,8)

"BLD",626,"KRN",.84,"NM","B",30810.09,9)

"BLD",626,"KRN",.84,"NM","B",30810.1,10)

"BLD",626,"KRN",.84,"NM","B",30810.11,11)

"BLD",626,"KRN",.84,"NM","B",30810.12,12)

"BLD",626,"KRN",.84,"NM","B",30810.13,13)

"BLD",626,"KRN",.84,"NM","B",30810.14,14)

"BLD",626,"KRN",.84,"NM","B",30810.15,15)

"BLD",626,"KRN",.84,"NM","B",30810.16,16)

"BLD",626,"KRN",.84,"NM","B",30810.17,17)

"BLD",626,"KRN",.84,"NM","B",30810.18,22)

"BLD",626,"KRN",.84,"NM","B",30810.19,29)

"BLD",626,"KRN",.84,"NM","B",30810.2,30)

"BLD",626,"KRN",.84,"NM","B",30810.41,20)

"BLD",626,"KRN",.84,"NM","B",30810.42,21)

"BLD",626,"KRN",.84,"NM","B",30810.43,23)

"BLD",626,"KRN",.84,"NM","B",30810.44,24)

"BLD",626,"KRN",.84,"NM","B",30810.51,25)

"BLD",626,"KRN",.84,"NM","B",30810.52,26)

"BLD",626,"KRN",.84,"NM","B",30810.61,27)

"BLD",626,"KRN",.84,"NM","B",30810.62,28)

"BLD",626,"KRN",3.6,0)
3.6
"BLD",626,"KRN",3.6,"NM",0)
^9.68A^1^1
"BLD",626,"KRN",3.6,"NM",1,0)
XUSLOCK^^0
"BLD",626,"KRN",3.6,"NM","B","XUSLOCK",1)

"BLD",626,"KRN",3.8,0)
3.8
"BLD",626,"KRN",9.2,0)
9.2
"BLD",626,"KRN",9.8,0)
9.8
"BLD",626,"KRN",9.8,"NM",0)
^9.68A^10^10
"BLD",626,"KRN",9.8,"NM",1,0)
XUS^^0^25245953
"BLD",626,"KRN",9.8,"NM",2,0)
XUSTZ^^0^8122743
"BLD",626,"KRN",9.8,"NM",3,0)
XUSTZIP^^0^25477365
"BLD",626,"KRN",9.8,"NM",4,0)
XUSRB^^0^29869823
"BLD",626,"KRN",9.8,"NM",5,0)
XUS3^^0^18657096
"BLD",626,"KRN",9.8,"NM",6,0)
XUS1A^^0^12342712
"BLD",626,"KRN",9.8,"NM",7,0)
XUS1^^0^25051927
"BLD",626,"KRN",9.8,"NM",8,0)
XUSFACHK^^0^9500878
"BLD",626,"KRN",9.8,"NM",9,0)
XUSRA^^0^3358978
"BLD",626,"KRN",9.8,"NM",10,0)
XUVERIFY^^0^7660618
"BLD",626,"KRN",9.8,"NM","B","XUS",1)

"BLD",626,"KRN",9.8,"NM","B","XUS1",7)

"BLD",626,"KRN",9.8,"NM","B","XUS1A",6)

"BLD",626,"KRN",9.8,"NM","B","XUS3",5)

"BLD",626,"KRN",9.8,"NM","B","XUSFACHK",8)

"BLD",626,"KRN",9.8,"NM","B","XUSRA",9)

"BLD",626,"KRN",9.8,"NM","B","XUSRB",4)

"BLD",626,"KRN",9.8,"NM","B","XUSTZ",2)

"BLD",626,"KRN",9.8,"NM","B","XUSTZIP",3)

"BLD",626,"KRN",9.8,"NM","B","XUVERIFY",10)

"BLD",626,"KRN",19,0)
19
"BLD",626,"KRN",19,"NM",0)
^9.68A^4^4
"BLD",626,"KRN",19,"NM",1,0)
XU IP RELEASE^^0
"BLD",626,"KRN",19,"NM",2,0)
XU SITE LOCKOUT^^0
"BLD",626,"KRN",19,"NM",3,0)
XUKERNEL^^2
"BLD",626,"KRN",19,"NM",4,0)
XUSFACHK^^0
"BLD",626,"KRN",19,"NM","B","XU IP RELEASE",1)

"BLD",626,"KRN",19,"NM","B","XU SITE LOCKOUT",2)

"BLD",626,"KRN",19,"NM","B","XUKERNEL",3)

"BLD",626,"KRN",19,"NM","B","XUSFACHK",4)

"BLD",626,"KRN",19.1,0)
19.1
"BLD",626,"KRN",101,0)
101
"BLD",626,"KRN",409.61,0)
409.61
"BLD",626,"KRN",771,0)
771
"BLD",626,"KRN",870,0)
870
"BLD",626,"KRN",8989.51,0)
8989.51
"BLD",626,"KRN",8989.52,0)
8989.52
"BLD",626,"KRN",8994,0)
8994
"BLD",626,"KRN","B",.4,.4)

"BLD",626,"KRN","B",.401,.401)

"BLD",626,"KRN","B",.402,.402)

"BLD",626,"KRN","B",.403,.403)

"BLD",626,"KRN","B",.5,.5)

"BLD",626,"KRN","B",.84,.84)

"BLD",626,"KRN","B",3.6,3.6)

"BLD",626,"KRN","B",3.8,3.8)

"BLD",626,"KRN","B",9.2,9.2)

"BLD",626,"KRN","B",9.8,9.8)

"BLD",626,"KRN","B",19,19)

"BLD",626,"KRN","B",19.1,19.1)

"BLD",626,"KRN","B",101,101)

"BLD",626,"KRN","B",409.61,409.61)

"BLD",626,"KRN","B",771,771)

"BLD",626,"KRN","B",870,870)

"BLD",626,"KRN","B",8989.51,8989.51)

"BLD",626,"KRN","B",8989.52,8989.52)

"BLD",626,"KRN","B",8994,8994)

"BLD",626,"QUES",0)
^9.62^^
"BLD",626,"REQB",0)
^9.611^4^4
"BLD",626,"REQB",1,0)
XU*8.0*208^2
"BLD",626,"REQB",2,0)
XU*8.0*238^2
"BLD",626,"REQB",3,0)
XU*8.0*252^2
"BLD",626,"REQB",4,0)
XU*8.0*258^2
"BLD",626,"REQB","B","XU*8.0*208",1)

"BLD",626,"REQB","B","XU*8.0*238",2)

"BLD",626,"REQB","B","XU*8.0*252",3)

"BLD",626,"REQB","B","XU*8.0*258",4)

"FIA",3.083)
LOCKED IP or DEVICE
"FIA",3.083,0)
^XUSEC(3,
"FIA",3.083,0,0)
3.083
"FIA",3.083,0,1)
y^y^f^^^^n
"FIA",3.083,0,10)

"FIA",3.083,0,11)

"FIA",3.083,0,"RLRO")

"FIA",3.083,0,"VR")
8.0^XU
"FIA",3.083,3.083)
0
"FIA",3.084)
FAILED SIGNON ATTEMPTS
"FIA",3.084,0)
^XUSEC(4,
"FIA",3.084,0,0)
3.084
"FIA",3.084,0,1)
y^y^f^^^^n
"FIA",3.084,0,10)

"FIA",3.084,0,11)

"FIA",3.084,0,"RLRO")

"FIA",3.084,0,"VR")
8.0^XU
"FIA",3.084,3.084)
0
"FIA",200)
NEW PERSON
"FIA",200,0)
^VA(200,
"FIA",200,0,0)
200I
"FIA",200,0,1)
y^n^p^^^^n^^n
"FIA",200,0,10)

"FIA",200,0,11)

"FIA",200,0,"RLRO")

"FIA",200,0,"VR")
8.0^XU
"FIA",200,200)
1
"FIA",200,200,202.05)

"FIA",8989.3)
KERNEL SYSTEM PARAMETERS
"FIA",8989.3,0)
^XTV(8989.3,
"FIA",8989.3,0,0)
8989.3P
"FIA",8989.3,0,1)
y^y^p^^^^n^^n
"FIA",8989.3,0,10)

"FIA",8989.3,0,11)

"FIA",8989.3,0,"RLRO")

"FIA",8989.3,0,"VR")
8.0^XU
"FIA",8989.3,8989.3)
1
"FIA",8989.3,8989.3,.02)

"FIA",8989.3,8989.3,.03)

"FIA",8989.3,8989.3,405.1)

"FIA",8989.3,8989.3,405.12)

"FIA",8989.3,8989.3,405.13)

"FIA",8989.3,8989.3,405.14)

"FIA",8989.3,8989.3,405.15)

"FIA",8989.3,8989.3,405.16)

"FIA",8989.3,8989.3,405.17)

"FIA",8989.3,8989.3,405.18)

"FIA",8989.3,8989.3,405.2)

"FIA",8989.3,8989.305)
0
"KRN",.403,12,-1)
0^2
"KRN",.403,12,0)
XUSITEPARM^^^^2941116^^^8989.3^0^0^1
"KRN",.403,12,40,0)
^.4031I^5^5
"KRN",.403,12,40,1,0)
1^^1,1^2
"KRN",.403,12,40,1,1)
Page 1
"KRN",.403,12,40,1,40,0)
^.4032IP^52^2
"KRN",.403,12,40,1,40,51,0)
XUSITEPARM 0^1^1,1^d
"KRN",.403,12,40,1,40,52,0)
XUSITEPARM 1^2^2,1^e
"KRN",.403,12,40,2,0)
3^^1,1^4^2
"KRN",.403,12,40,2,1)
Page 3
"KRN",.403,12,40,2,40,0)
^.4032IP^53^2
"KRN",.403,12,40,2,40,51,0)
XUSITEPARM 0^1^1,1^d
"KRN",.403,12,40,2,40,53,0)
XUSITEPARM 3^2^4,1^e
"KRN",.403,12,40,3,0)
2^^1,1^3^1
"KRN",.403,12,40,3,1)
Page 2
"KRN",.403,12,40,3,40,0)
^.4032IP^56^4
"KRN",.403,12,40,3,40,51,0)
XUSITEPARM 0^1^1,1^d
"KRN",.403,12,40,3,40,54,0)
XUSITEPARM 2^2^4,1^e
"KRN",.403,12,40,3,40,55,0)
XUSITEPARM 2.1^3^5,12^e
"KRN",.403,12,40,3,40,55,2)
4^^^^
"KRN",.403,12,40,3,40,56,0)
XUSITEPARM 2.2^4^12,12^e
"KRN",.403,12,40,3,40,56,2)
4
"KRN",.403,12,40,4,0)
4^^1,1^5^3
"KRN",.403,12,40,4,1)
Page 4
"KRN",.403,12,40,4,40,0)
^.4032IP^61^6
"KRN",.403,12,40,4,40,51,0)
XUSITEPARM 0^1^1,1^d
"KRN",.403,12,40,4,40,57,0)
XUSITEPARM 4^2^4,1^e
"KRN",.403,12,40,4,40,58,0)
XUSITEPARM 4.1^3^8,4^e
"KRN",.403,12,40,4,40,58,2)
4
"KRN",.403,12,40,4,40,59,0)
XUSITEPARM 4.2^4^8,43^e
"KRN",.403,12,40,4,40,59,2)
4
"KRN",.403,12,40,4,40,60,0)
XUSITEPARM 4.4^6^13,43^e
"KRN",.403,12,40,4,40,60,2)
4
"KRN",.403,12,40,4,40,61,0)
XUSITEPARM 4.3^5^13,4^e
"KRN",.403,12,40,4,40,61,2)
4
"KRN",.403,12,40,5,0)
5^^1,1^1^4
"KRN",.403,12,40,5,1)
Page 5
"KRN",.403,12,40,5,40,0)
^.4032IP^181^2
"KRN",.403,12,40,5,40,51,0)
XUSITEPARM 0^1^1,1^e
"KRN",.403,12,40,5,40,181,0)
XUSITEPARM 5^2^4,1^e
"KRN",.403,38,-1)
0^1
"KRN",.403,38,0)
XUSITEIP^@^@^^3030218.1552^^^8989.3^0^0^1
"KRN",.403,38,40,0)
^.4031I^1^1
"KRN",.403,38,40,1,0)
1^^1,1
"KRN",.403,38,40,1,1)
Page 1
"KRN",.403,38,40,1,11)
D UNED^DDSUTL(1,"XUSITEPARM 0",1,1)
"KRN",.403,38,40,1,40,0)
^.4032IP^180^3
"KRN",.403,38,40,1,40,51,0)
XUSITEPARM 0^1^1,1^e
"KRN",.403,38,40,1,40,179,0)
XUSITEIP 1^2^4,1^e
"KRN",.403,38,40,1,40,180,0)
XUSITEIP 1.1^3^11,1^e
"KRN",.403,38,40,1,40,180,2)
4^B^f
"KRN",.404,51,0)
XUSITEPARM 0^8989.3^
"KRN",.404,51,40,0)
^.4044I^3^2
"KRN",.404,51,40,2,0)
2^Kernel Site Parameter edit^1
"KRN",.404,51,40,2,2)
^^1,24^1
"KRN",.404,51,40,3,0)
1^DOMAIN^3
"KRN",.404,51,40,3,1)
.01
"KRN",.404,51,40,3,2)
2,20^42^2,13
"KRN",.404,52,0)
XUSITEPARM 1^8989.3
"KRN",.404,52,40,0)
^.4044I^18^17
"KRN",.404,52,40,1,0)
1^DEFAULT # OF ATTEMPTS^3
"KRN",.404,52,40,1,1)
202
"KRN",.404,52,40,1,2)
3,31^3^3,8
"KRN",.404,52,40,1,3)
5
"KRN",.404,52,40,2,0)
2^DEFAULT LOCK-OUT TIME^3
"KRN",.404,52,40,2,1)
203
"KRN",.404,52,40,2,2)
4,31^4^4,8
"KRN",.404,52,40,2,3)
30
"KRN",.404,52,40,3,0)
3^DEFAULT MULTIPLE SIGN-ON^3
"KRN",.404,52,40,3,1)
204
"KRN",.404,52,40,3,2)
5,31^8^5,5
"KRN",.404,52,40,3,3)
YES
"KRN",.404,52,40,3,11)
D EN^DDIOL("If you select 'Only one IP' be sure to put a value into the MULTIPLE SIGN-ON LIMIT field so users can sign-on at least once.")
"KRN",.404,52,40,4,0)
4^ASK DEVICE TYPE AT SIGN-ON^3
"KRN",.404,52,40,4,1)
205
"KRN",.404,52,40,4,2)
11,69^3^11,41
"KRN",.404,52,40,4,3)
ASK
"KRN",.404,52,40,5,0)
5^DEFAULT AUTO-MENU^3
"KRN",.404,52,40,5,1)
206
"KRN",.404,52,40,5,2)
6,31^3^6,12
"KRN",.404,52,40,5,3)
NO
"KRN",.404,52,40,6,0)
6^DEFAULT TYPE-AHEAD^3
"KRN",.404,52,40,6,1)
209
"KRN",.404,52,40,6,2)
8,31^3^8,11
"KRN",.404,52,40,6,3)
YES
"KRN",.404,52,40,7,0)
7^DEFAULT TIMED-READ (SECONDS)^3
"KRN",.404,52,40,7,1)
210
"KRN",.404,52,40,7,2)
9,31^5^9,1
"KRN",.404,52,40,7,3)
300
"KRN",.404,52,40,8,0)
8^BYPASS DEVICE LOCK-OUT^3
"KRN",.404,52,40,8,1)
211
"KRN",.404,52,40,8,2)
11,31^3^11,7
"KRN",.404,52,40,9,0)
9^LIFETIME OF VERIFY CODE^3
"KRN",.404,52,40,9,1)
214
"KRN",.404,52,40,9,2)
12,31^3^12,6
"KRN",.404,52,40,9,3)
90
"KRN",.404,52,40,11,0)
5.5^DEFAULT LANGUAGE^3
"KRN",.404,52,40,11,1)
207
"KRN",.404,52,40,11,2)
7,31^10^7,13
"KRN",.404,52,40,12,0)
11^DEFAULT INSTITUTION^3
"KRN",.404,52,40,12,1)
217
"KRN",.404,52,40,12,2)
13,31^30^13,10
"KRN",.404,52,40,13,0)
12^AUTO-GENERATE ACCESS CODES^3
"KRN",.404,52,40,13,1)
11
"KRN",.404,52,40,13,2)
14,31^3^14,3
"KRN",.404,52,40,14,0)
13^AGENCY CODE^3
"KRN",.404,52,40,14,1)
9
"KRN",.404,52,40,14,2)
3,66^9^3,53
"KRN",.404,52,40,14,3)
VA
"KRN",.404,52,40,15,0)
14^LOG RESOURCE USAGE?^3
"KRN",.404,52,40,15,1)
300
"KRN",.404,52,40,15,2)
15,31^3^15,10
"KRN",.404,52,40,16,0)
3.4^DEFAULT AUTO SIGN-ON^3
"KRN",.404,52,40,16,1)
218
"KRN",.404,52,40,16,2)
6,66^8^6,44
"KRN",.404,52,40,17,0)
15^BROKER TIMEOUT^3
"KRN",.404,52,40,17,1)
230
"KRN",.404,52,40,17,2)
9,66^5^9,50
"KRN",.404,52,40,17,3)
180
"KRN",.404,52,40,18,0)
3.2^MULTIPLE SIGN-ON LIMIT^3
"KRN",.404,52,40,18,1)
219
"KRN",.404,52,40,18,2)
5,66^3^5,42
"KRN",.404,53,0)
XUSITEPARM 3^8989.3
"KRN",.404,53,40,0)
^.4044I^7^7
"KRN",.404,53,40,1,0)
1^MAX SPOOL LINES PER USER^3
"KRN",.404,53,40,1,1)
31.1
"KRN",.404,53,40,1,2)
1,31^7^1,5
"KRN",.404,53,40,2,0)
2^MAX SPOOL DOCUMENTS PER USER^3
"KRN",.404,53,40,2,1)
31.2
"KRN",.404,53,40,2,2)
2,31^3^2,1
"KRN",.404,53,40,3,0)
3^MAX SPOOL DOCUMENT LIFE-SPAN^3
"KRN",.404,53,40,3,1)
31.3
"KRN",.404,53,40,3,2)
3,31^3^3,1
"KRN",.404,53,40,4,0)
4^LOG RESOURCE USAGE?^3
"KRN",.404,53,40,4,1)
300
"KRN",.404,53,40,4,2)
5,22^3^5,1
"KRN",.404,53,40,5,0)
5^NEW PERSON IDENTIFIERS^3
"KRN",.404,53,40,5,1)
21
"KRN",.404,53,40,5,2)
13,4^65^12,1
"KRN",.404,53,40,6,0)
6^DEFAULT DIRECTORY FOR HFS^3
"KRN",.404,53,40,6,1)
320
"KRN",.404,53,40,6,2)
8,4^50^7,1
"KRN",.404,53,40,7,0)
7^DNS IP^3
"KRN",.404,53,40,7,1)
51
"KRN",.404,53,40,7,2)
10,9^60^10,1
"KRN",.404,53,40,7,4)
1
"KRN",.404,54,0)
XUSITEPARM 2^8989.3
"KRN",.404,54,40,0)
^.4044I^3^3
"KRN",.404,54,40,1,0)
1^Vol Set      Max Sign-ons       Log RT?^1
"KRN",.404,54,40,1,2)
^^1,12^1
"KRN",.404,54,40,2,0)
2^ROUTINE MONITORING^3
"KRN",.404,54,40,2,1)
9.8
"KRN",.404,54,40,2,2)
8,22^8^8,2
"KRN",.404,54,40,3,0)
3^Routine Namespace's^1
"KRN",.404,54,40,3,2)
^^9,12^1
"KRN",.404,55,0)
XUSITEPARM 2.1^8989.304
"KRN",.404,55,40,0)
^.4044I^3^3
"KRN",.404,55,40,1,0)
1^^3
"KRN",.404,55,40,1,1)
.01
"KRN",.404,55,40,1,2)
1,1^9
"KRN",.404,55,40,2,0)
2^^3
"KRN",.404,55,40,2,1)
2
"KRN",.404,55,40,2,2)
1,14^4
"KRN",.404,55,40,3,0)
3^^3
"KRN",.404,55,40,3,1)
6
"KRN",.404,55,40,3,2)
1,33^3
"KRN",.404,56,0)
XUSITEPARM 2.2^8989.309
"KRN",.404,56,40,0)
^.4044I^1^1
"KRN",.404,56,40,1,0)
1^^3
"KRN",.404,56,40,1,1)
.01
"KRN",.404,56,40,1,2)
2,5^8
"KRN",.404,57,0)
XUSITEPARM 4^8989.3
"KRN",.404,57,40,0)
^.4044I^8^8
"KRN",.404,57,40,1,0)
1^OPTION AUDIT^3
"KRN",.404,57,40,1,1)
19
"KRN",.404,57,40,1,2)
1,15^24^1,1
"KRN",.404,57,40,2,0)
2^INITIATE AUDIT^3
"KRN",.404,57,40,2,1)
19.4
"KRN",.404,57,40,2,2)
2,20^17^2,4
"KRN",.404,57,40,3,0)
3^TERMINATE AUDIT^3
"KRN",.404,57,40,3,1)
19.5
"KRN",.404,57,40,3,2)
2,60^17^2,43
"KRN",.404,57,40,4,0)
4^Option to audit^1
"KRN",.404,57,40,4,2)
^^4,4^1
"KRN",.404,57,40,5,0)
5^Namespace to audit^1
"KRN",.404,57,40,5,2)
^^4,43^1
"KRN",.404,57,40,6,0)
6^User to audit^1
"KRN",.404,57,40,6,2)
^^9,4^1
"KRN",.404,57,40,7,0)
7^Device to audit^1
"KRN",.404,57,40,7,2)
^^9,43
"KRN",.404,57,40,8,0)
8^FAILED ACCESS ATTEMPTS^3
"KRN",.404,57,40,8,1)
212.5
"KRN",.404,57,40,8,2)
1,67^8^1,43
"KRN",.404,58,0)
XUSITEPARM 4.1^8989.36
"KRN",.404,58,40,0)
^.4044I^1^1
"KRN",.404,58,40,1,0)
1^^3
"KRN",.404,58,40,1,1)
.01
"KRN",.404,58,40,1,2)
1,1^30
"KRN",.404,59,0)
XUSITEPARM 4.2^8989.35
"KRN",.404,59,40,0)
^.4044I^1^1
"KRN",.404,59,40,1,0)
1^^3
"KRN",.404,59,40,1,1)
.01
"KRN",.404,59,40,1,2)
1,1^5
"KRN",.404,60,0)
XUSITEPARM 4.4^8989.33
"KRN",.404,60,40,0)
^.4044I^1^1
"KRN",.404,60,40,1,0)
1^^3
"KRN",.404,60,40,1,1)
.01
"KRN",.404,60,40,1,2)
1,1^20
"KRN",.404,61,0)
XUSITEPARM 4.3^8989.34
"KRN",.404,61,40,0)
^.4044I^1^1
"KRN",.404,61,40,1,0)
1^^3
"KRN",.404,61,40,1,1)
.01
"KRN",.404,61,40,1,2)
1,1^30
"KRN",.404,179,0)
XUSITEIP 1^8989.3
"KRN",.404,179,40,0)
^.4044I^11^11
"KRN",.404,179,40,1,0)
1^IP SECURITY ON/OFF^3
"KRN",.404,179,40,1,1)
405.1
"KRN",.404,179,40,1,2)
1,23^3^1,3
"KRN",.404,179,40,2,0)
6^Terminal Servers IP^1
"KRN",.404,179,40,2,2)
^^7,3
"KRN",.404,179,40,3,0)
7^Sign-on Slack^1
"KRN",.404,179,40,3,2)
^^7,46
"KRN",.404,179,40,4,0)
2^USER LOCKING^3
"KRN",.404,179,40,4,1)
405.14
"KRN",.404,179,40,4,2)
1,44^3^1,30
"KRN",.404,179,40,5,0)
4^FAILED ATTEMPTS LIMIT - IRM^3
"KRN",.404,179,40,5,1)
405.12
"KRN",.404,179,40,5,2)
3,32^4^3,3
"KRN",.404,179,40,6,0)
5^FAILED ATTEMPTS LIMIT - AOD^3
"KRN",.404,179,40,6,1)
405.13
"KRN",.404,179,40,6,2)
3,72^4^3,43
"KRN",.404,179,40,7,0)
3^TERMINAL SERVER LIMIT^3
"KRN",.404,179,40,7,1)
405.16
"KRN",.404,179,40,7,2)
1,72^2^1,49
"KRN",.404,179,40,8,0)
8^Last Reset^1
"KRN",.404,179,40,8,2)
^^7,61
"KRN",.404,179,40,9,0)
9^KEEP THRESHOLD^3
"KRN",.404,179,40,9,1)
405.17
"KRN",.404,179,40,9,2)
5,19^4^5,3
"KRN",.404,179,40,10,0)
10^TOTAL COUNT INCREASE^3
"KRN",.404,179,40,10,1)
405.18
"KRN",.404,179,40,10,2)
5,72^2^5,50
"KRN",.404,179,40,11,0)
11^LAST FAILED ATTEMPTS CHECK^3
"KRN",.404,179,40,11,1)
405.15
"KRN",.404,179,40,11,2)
6,31^20^6,3
"KRN",.404,180,0)
XUSITEIP 1.1^8989.305
"KRN",.404,180,40,0)
^.4044I^3^3
"KRN",.404,180,40,1,0)
1^^3
"KRN",.404,180,40,1,1)
.01
"KRN",.404,180,40,1,2)
1,3^40
"KRN",.404,180,40,2,0)
2^^3
"KRN",.404,180,40,2,1)
1
"KRN",.404,180,40,2,2)
1,47^3
"KRN",.404,180,40,3,0)
3^^3
"KRN",.404,180,40,3,1)
2
"KRN",.404,180,40,3,2)
1,61^12
"KRN",.404,181,0)
XUSITEPARM 5^8989.3
"KRN",.404,181,40,0)
^.4044I^2^2
"KRN",.404,181,40,1,0)
1^IRM MAIL GROUP^3
"KRN",.404,181,40,1,1)
.02
"KRN",.404,181,40,1,2)
1,27^50^1,11
"KRN",.404,181,40,2,0)
2^AFTER HOURS MAIL GROUP^3
"KRN",.404,181,40,2,1)
.03
"KRN",.404,181,40,2,2)
3,27^50^3,3
"KRN",.84,30810.01,-1)
0^1
"KRN",.84,30810.01,0)
30810.01^2^^KERNEL^Signons not currently allowed.
"KRN",.84,30810.01,2,0)
^.844^1^1^3030306^^
"KRN",.84,30810.01,2,1,0)
Signons not currently allowed on this processor.
"KRN",.84,30810.02,-1)
0^2
"KRN",.84,30810.02,0)
30810.02^2^^KERNEL^Max Users.
"KRN",.84,30810.02,2,0)
^.844^1^1^3030306^^
"KRN",.84,30810.02,2,1,0)
Maximum number of users already signed on to this processor.
"KRN",.84,30810.03,-1)
0^3
"KRN",.84,30810.03,0)
30810.03^2^^KERNEL^Unknown Device.
"KRN",.84,30810.03,2,0)
^^1^1^3030306^
"KRN",.84,30810.03,2,1,0)
This device has not been defined to the system -- contact the site manager.
"KRN",.84,30810.04,-1)
0^4
"KRN",.84,30810.04,0)
30810.04^2^^KERNEL^A/V code not valid.
"KRN",.84,30810.04,2,0)
^.844^1^1^3030306^^
"KRN",.84,30810.04,2,1,0)
Not a valid ACCESS CODE/VERIFY CODE pair.
"KRN",.84,30810.05,-1)
0^5
"KRN",.84,30810.05,0)
30810.05^2^^KERNEL^No access allowed for this user.
"KRN",.84,30810.05,2,0)
^^1^1^3030306^
"KRN",.84,30810.05,2,1,0)
No access allowed for this user.
"KRN",.84,30810.06,-1)
0^6
"KRN",.84,30810.06,0)
30810.06^2^^KERNEL^Invalid device password.
"KRN",.84,30810.06,2,0)
^.844^1^1^3030306^^
"KRN",.84,30810.06,2,1,0)
Invalid device password.
"KRN",.84,30810.07,-1)
0^7
"KRN",.84,30810.07,0)
30810.07^2^^KERNEL^Device locked.
"KRN",.84,30810.07,1,0)
^^1^1^3030305^
"KRN",.84,30810.07,1,1,0)
The device has been locked because of too many invalid sign-on attempts.
"KRN",.84,30810.07,2,0)
^^1^1^3030306^
"KRN",.84,30810.07,2,1,0)
Device/IP address is locked due to too many invalid signon attempts.
"KRN",.84,30810.08,-1)
0^8
"KRN",.84,30810.08,0)
30810.08^2^^KERNEL^This device is out of service.
"KRN",.84,30810.08,2,0)
^.844^1^1^3030306^^
"KRN",.84,30810.08,2,1,0)
This device is out of service.
"KRN",.84,30810.09,-1)
0^9
"KRN",.84,30810.09,0)
30810.09^2^^KERNEL^MULTIPLE SIGNONS NOT ALLOWED
"KRN",.84,30810.09,2,0)
^^1^1^3030306^
"KRN",.84,30810.09,2,1,0)
*** MULTIPLE SIGNONS NOT ALLOWED ***
"KRN",.84,30810.1,-1)
0^10
"KRN",.84,30810.1,0)
30810.1^2^^KERNEL^You don't have access to this device!
"KRN",.84,30810.1,2,0)
^.844^1^1^3030306^^
"KRN",.84,30810.1,2,1,0)
You don't have access to this device!
"KRN",.84,30810.11,-1)
0^11
"KRN",.84,30810.11,0)
30810.11^2^^KERNEL^Your access code has been terminated.
"KRN",.84,30810.11,2,0)
^^1^1^3030306^
"KRN",.84,30810.11,2,1,0)
Your ACCESS CODE has been terminated. Please see your site manager!
"KRN",.84,30810.12,-1)
0^12
"KRN",.84,30810.12,0)
30810.12^2^^KERNEL^Verify code must be changed.
"KRN",.84,30810.12,2,0)
^^1^1^3030306^
"KRN",.84,30810.12,2,1,0)
VERIFY CODE must be changed before continued use.
"KRN",.84,30810.13,-1)
0^13
"KRN",.84,30810.13,0)
30810.13^2^^KERNEL^Device time limit.
"KRN",.84,30810.13,2,0)
^.844^1^1^3030306^^
"KRN",.84,30810.13,2,1,0)
This device may only be used outside of this time frame |.
"KRN",.84,30810.14,-1)
0^14
"KRN",.84,30810.14,0)
30810.14^2^^KERNEL^Not a valid UCI!
"KRN",.84,30810.14,2,0)
^.844^1^1^3030306^^^
"KRN",.84,30810.14,2,1,0)
'|' is not a valid UCI!
"KRN",.84,30810.15,-1)
0^15
"KRN",.84,30810.15,0)
30810.15^2^^KERNEL^Not a valid routine.
"KRN",.84,30810.15,2,0)
^^1^1^3030306^
"KRN",.84,30810.15,2,1,0)
'|' is not a valid routine name!
"KRN",.84,30810.16,-1)
0^16
"KRN",.84,30810.16,0)
30810.16^2^^KERNEL^No primary menu.
"KRN",.84,30810.16,2,0)
^^1^1^3030306^
"KRN",.84,30810.16,2,1,0)
No PRIMARY MENU assigned to user or user is missing KEY to menu!
"KRN",.84,30810.17,-1)
0^17
"KRN",.84,30810.17,0)
30810.17^2^^KERNEL^User Time limit.
"KRN",.84,30810.17,2,0)
^.844^1^1^3030306^^
"KRN",.84,30810.17,2,1,0)
Your access to the system is prohibited from |.
"KRN",.84,30810.18,-1)
0^22
"KRN",.84,30810.18,0)
30810.18^2^^KERNEL^User Locked.
"KRN",.84,30810.18,2,0)
^.844^1^1^3030306^^
"KRN",.84,30810.18,2,1,0)
You are LOCKED OUT until | because of too many invalid attempts.
"KRN",.84,30810.19,-1)
0^29
"KRN",.84,30810.19,0)
30810.19^2^^KERNEL^Access Forms to Sign 
"KRN",.84,30810.19,2,0)
^^1^1^3041013^
"KRN",.84,30810.19,2,1,0)
Signon not allowed as you have required forms to sign in terminal mode.
"KRN",.84,30810.19,5,0)
^.841^1^1
"KRN",.84,30810.19,5,1,0)
XUS3
"KRN",.84,30810.19,5,"B","XUS3",1)

"KRN",.84,30810.2,-1)
0^30
"KRN",.84,30810.2,0)
30810.2^1^^KERNEL^IP Address not set.
"KRN",.84,30810.2,2,0)
^.844^1^1^3050504^^
"KRN",.84,30810.2,2,1,0)
Client IP Address not setup.
"KRN",.84,30810.41,-1)
0^20
"KRN",.84,30810.41,0)
30810.41^2^^KERNEL^You may now signon.
"KRN",.84,30810.41,2,0)
^^1^1^3030306^
"KRN",.84,30810.41,2,1,0)
You may now signon.
"KRN",.84,30810.41,5,0)
^.841^1^1
"KRN",.84,30810.41,5,1,0)
XUSTZ
"KRN",.84,30810.41,5,"B","XUSTZ",1)

"KRN",.84,30810.42,-1)
0^21
"KRN",.84,30810.42,0)
30810.42^2^^KERNEL^Please wait
"KRN",.84,30810.42,2,0)
^^1^1^3030306^
"KRN",.84,30810.42,2,1,0)
Please wait...
"KRN",.84,30810.42,5,0)
^.841^1^1
"KRN",.84,30810.42,5,1,0)
XUSTZ
"KRN",.84,30810.42,5,"B","XUSTZ",1)

"KRN",.84,30810.43,-1)
0^23
"KRN",.84,30810.43,0)
30810.43^2^y^KERNEL^Your Access Locked
"KRN",.84,30810.43,2,0)
^.844^1^1^3030306^^^
"KRN",.84,30810.43,2,1,0)
Your access has been locked-out for |1| seconds.
"KRN",.84,30810.43,3,0)
^.845^1^1
"KRN",.84,30810.43,3,1,0)
1^Lockout time in seconds.
"KRN",.84,30810.44,-1)
0^24
"KRN",.84,30810.44,0)
30810.44^2^^KERNEL^IP locked
"KRN",.84,30810.44,2,0)
^^1^1^3030306^
"KRN",.84,30810.44,2,1,0)
This IP address has been locked.
"KRN",.84,30810.51,-1)
0^25
"KRN",.84,30810.51,0)
30810.51^2^^KERNEL^Access code
"KRN",.84,30810.51,2,0)
^.844^1^1^3030306^^
"KRN",.84,30810.51,2,1,0)
ACCESS CODE: 
"KRN",.84,30810.52,-1)
0^26
"KRN",.84,30810.52,0)
30810.52^2^^KERNEL^Verify code
"KRN",.84,30810.52,2,0)
^.844^1^1^3030306^^
"KRN",.84,30810.52,2,1,0)
VERIFY CODE: 
"KRN",.84,30810.61,-1)
0^27
"KRN",.84,30810.61,0)
30810.61^2^^KERNEL^thru
"KRN",.84,30810.61,2,0)
^^1^1^3030710^
"KRN",.84,30810.61,2,1,0)
thru
"KRN",.84,30810.62,-1)
0^28
"KRN",.84,30810.62,0)
30810.62^2^^KERNEL^Access restricted
"KRN",.84,30810.62,1,0)
^.842^1^1^3031203^^
"KRN",.84,30810.62,1,1,0)
Used by XUS1A.
"KRN",.84,30810.62,2,0)
^.844^1^1^3031203^^
"KRN",.84,30810.62,2,1,0)
Your access is restricted during the time frame
"KRN",3.6,2,-1)
0^1
"KRN",3.6,2,0)
XUSLOCK^DEVICE LOCKED DUE TO BAD SIGN-ONS
"KRN",3.6,2,1,0)
^^8^8^3031015^
"KRN",3.6,2,1,1,0)
Device |1| has made |2| bad sign-on attempts 
"KRN",3.6,2,1,2,0)
and has been locked.
"KRN",3.6,2,1,3,0)
The device will automatically clear after the Lockout time in the Kernel
"KRN",3.6,2,1,4,0)
System Parameters.
"KRN",3.6,2,1,5,0)
To make the device or IP address useable before the lockout time is up
"KRN",3.6,2,1,6,0)
use the "CLEAR TERMINAL" or "Release IP lock" option to make the device
"KRN",3.6,2,1,7,0)
available again.
"KRN",3.6,2,1,8,0)
Select |3| as the device to release.
"KRN",3.6,2,3,0)
^3.63^2^2^3031015^^
"KRN",3.6,2,3,1,0)
This bulletin is triggered when the number of bad sign-ons
"KRN",3.6,2,3,2,0)
causes a terminal device or IP address to be "locked out".
"KRN",3.6,2,4,0)
^3.64A^3^2
"KRN",3.6,2,4,1,0)
1
"KRN",3.6,2,4,1,1,0)
^^1^1^2840725^^
"KRN",3.6,2,4,1,1,1,0)
Name of device being locked.
"KRN",3.6,2,4,2,0)
2
"KRN",3.6,2,4,2,1,0)
^^1^1^2960627^^^^
"KRN",3.6,2,4,2,1,1,0)
Number of bad signons recorded for the device.
"KRN",3.6,2,4,3,0)
3
"KRN",3.6,2,4,3,1,0)
^3.65^1^1^2960627^
"KRN",3.6,2,4,3,1,1,0)
This hold the name of the device to release.
"KRN",19,149,-1)
2^3
"KRN",19,149,0)
XUKERNEL^Kernel Management Menu^^M^.5^^^^^^^^y
"KRN",19,149,10,0)
^19.01IP^10^10
"KRN",19,149,10,5,0)
897
"KRN",19,149,10,5,"^")
XU SITE LOCKOUT
"KRN",19,149,10,9,0)
896
"KRN",19,149,10,9,"^")
XU IP RELEASE
"KRN",19,149,"U")
KERNEL MANAGEMENT MENU
"KRN",19,896,-1)
0^1
"KRN",19,896,0)
XU IP RELEASE^Release IP lock^^R^^^^^^^^KERNEL^y
"KRN",19,896,1,0)
^^2^2^3030218^
"KRN",19,896,1,1,0)
This option will allow the user to release the lock on a IP address 
"KRN",19,896,1,2,0)
caused by too many invalid sign-on attempts.
"KRN",19,896,25)
X6IP^XUSTZIP
"KRN",19,896,"U")
RELEASE IP LOCK
"KRN",19,897,-1)
0^2
"KRN",19,897,0)
XU SITE LOCKOUT^Edit Site IP lockout^^A^^^^^^^^KERNEL^n^1
"KRN",19,897,1,0)
^19.06^2^2^3030305^^^
"KRN",19,897,1,1,0)
This option allows the editing of the Kernel System Parameters for IP 
"KRN",19,897,1,2,0)
lockout and/or User lockout and Terminal server list entry.
"KRN",19,897,20)
N DA,DR,DIE S DA=1,DR="[XUSITEIP]",DIE=8989.3 D XUDIE^XUS5
"KRN",19,897,"U")
EDIT SITE IP LOCKOUT
"KRN",19,952,-1)
0^4
"KRN",19,952,0)
XUSFACHK^Check Failed Access Log^^R^^^^^^^^^y
"KRN",19,952,1,0)
^^9^9^3031006^
"KRN",19,952,1,1,0)
This option runs the Failed Access Check routine "XUSFACHK".
"KRN",19,952,1,2,0)
It looks to see if there have been a large number of failed access 
"KRN",19,952,1,3,0)
attempts since the routine was last run.
"KRN",19,952,1,4,0)
If it finds that the number of failed access attempts is greater that the 
"KRN",19,952,1,5,0)
limit in the Kernel system parameter field "FAILED ATTEMPTS LIMIT - IRM"
"KRN",19,952,1,6,0)
during normal business hours (8am to 4:30pm) it sends a message to the
"KRN",19,952,1,7,0)
mail group stored in the field "IRM MAIL GROUP" or the limit set in Kernel
"KRN",19,952,1,8,0)
system parameter "FAILED ATTEMPTS LIMIT - AOD" after hours, it sends a
"KRN",19,952,1,9,0)
message to the mail group in the "AFTER HOURS MAIL GROUP".
"KRN",19,952,25)
FAILED^XUSFACHK
"KRN",19,952,200.9)
y
"KRN",19,952,"U")
CHECK FAILED ACCESS LOG
"MBREQ")
0
"ORD",2,3.6)
3.6;2;1;;BUL^XPDTA1;;BULE1^XPDIA1;;;BULDEL^XPDIA1
"ORD",2,3.6,0)
BULLETIN
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"ORD",9,.84)
.84;9;;;EDEOUT^DIFROMSO(.84,DA,"",XPDA);FPRE^DIFROMSI(.84,"",XPDA);EPRE^DIFROMSI(.84,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.84,DA,"",XPDA);DEL^DIFROMSK(.84,"",%)
"ORD",9,.84,0)
DIALOG
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^2950703^2970507^.5
"PKG",3,22,1,"PAH",1,0)
265^3051005^2
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^3051005
"PKG",3,22,1,"PAH",1,1,1,0)
Please refer to the Description in FORUM Patch Module for details.
"PKG",3,22,1,"PAH",1,1,2,0)
XU*8*265  3 Strikes and You Are Out
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","XUS")
0^1^B25245953
"RTN","XUS",1,0)
XUS ;SFISC/STAFF - SIGNON ;03/18/2004  11:25
"RTN","XUS",2,0)
 ;;8.0;KERNEL;**16,26,49,59,149,180,265**;Jul 10, 1995
"RTN","XUS",3,0)
 S U="^" D INTRO^XUS1A()
"RTN","XUS",4,0)
 K  K ^XUTL("ZISPARAM",$I)
"RTN","XUS",5,0)
 S U="^",XQXFLG("GUI")="^",XUSTMP(51)=$$EZBLD^DIALOG(30810.51),XUSTMP(52)=$$EZBLD^DIALOG(30810.52)
"RTN","XUS",6,0)
 W ! S $Y=0 D SET1(1) I POP S XUM=3 G NO
"RTN","XUS",7,0)
 W !!,"Volume set: ",$P(XUENV,U,4),"  UCI: ",XUCI,"  Device: ",$I W:$S('$D(IO("ZIO")):0,1:$I'=IO("ZIO")) " (",IO("ZIO"),")" W !
"RTN","XUS",8,0)
RESTART ;
"RTN","XUS",9,0)
 S XUM=$$SET2 G:XUM NO
"RTN","XUS",10,0)
 I $P(XU1,U,2)]"" S XUM=$$DEVPAS() I XUM G H:XUM<0,NO
"RTN","XUS",11,0)
 ;S PGM=$P(XOPT,U,8),XUA=$P(PGM,"[",1) I XUA]"" X XUEON G P
"RTN","XUS",12,0)
A S (XUSER(0),XUSER(1),XQUR)=""
"RTN","XUS",13,0)
 ;Check for locked IP/device.
"RTN","XUS",14,0)
 I $$LKCHECK^XUSTZIP() S XUM=7,XUFAC=$P(XOPT,U,2),XUHALT=1 G NO
"RTN","XUS",15,0)
 ;Auto Sign-on check
"RTN","XUS",16,0)
 S X=$$AUTOXUS^XUS1B() I X>0 S DUZ=X D USER(DUZ) W !!,">> Auto Sign-on: ",$P(XUSER(0),U)," <<<",! G B
"RTN","XUS",17,0)
 X XUEOFF S AV=$$ASKAV() X XUEON I AV="^;^" G H ;Get out
"RTN","XUS",18,0)
 I AV["MAIL-BOX",AV[";XMR" S (XUA,PGM)="XMR",XMCHAN=$P($P(AV,";")," ",2),DUZ=.5 G XMR^XUSCLEAN
"RTN","XUS",19,0)
 S XQUR=$P(AV,";",3)
"RTN","XUS",20,0)
 S DUZ=$$CHECKAV(AV) K AV
"RTN","XUS",21,0)
 S XUM=$$UVALID() G:XUM NO
"RTN","XUS",22,0)
B K XUF,%1 S XUF=0 X XUEON
"RTN","XUS",23,0)
 I DUZ D USER^XUS1 G:XUM NO
"RTN","XUS",24,0)
 I DUZ D SEC^XUS3:($D(^%ZIS(1,XUDEV,"TIME"))!$D(^(95))) G:XUM NO
"RTN","XUS",25,0)
 G NO:'DUZ
"RTN","XUS",26,0)
 S DTIME=$P(XOPT,U,10),X=$S(DUZ("BUF"):"",1:"NO-")_"TYPE-AHEAD" X:$D(^%ZOSF(X)) ^(X)
"RTN","XUS",27,0)
 D TT^XUS3:$G(XUTT)
"RTN","XUS",28,0)
 D CLRFAC^XUS3($G(IO("IP")))
"RTN","XUS",29,0)
PGM ;
"RTN","XUS",30,0)
 S Y=+$G(^%ZIS(1,XUDEV,201)) I Y>0 D CHK S XQY=Y G:Y OK
"RTN","XUS",31,0)
 S Y=+$G(^VA(200,DUZ,201)) I Y>0 D CHK S XQY=Y G:Y OK
"RTN","XUS",32,0)
 S XUM=16 G NO
"RTN","XUS",33,0)
OK D CHEK^XQ83
"RTN","XUS",34,0)
 S (XUA,PGM)="XQ"
"RTN","XUS",35,0)
P G NEXT^XUS1
"RTN","XUS",36,0)
 ;
"RTN","XUS",37,0)
CHK I $D(^DIC(19,Y,0)),$S($P(^(0),U,6)="":1,1:$D(^XUSEC($P(^(0),U,6),DUZ))) Q
"RTN","XUS",38,0)
 S Y=0 Q
"RTN","XUS",39,0)
LC S X=$$UP(X) Q
"RTN","XUS",40,0)
UP(%) Q $TR(%,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","XUS",41,0)
 ;
"RTN","XUS",42,0)
FAC ;Failed access
"RTN","XUS",43,0)
 S:'DUZ XUF(.1)=$E(%1)
"RTN","XUS",44,0)
 S:XUF=2 XUF(.2)=XUF(.2)+1,XUF(XUF(.2))=%1 S %1="" Q
"RTN","XUS",45,0)
 Q
"RTN","XUS",46,0)
NO ;Tell why didn't get on
"RTN","XUS",47,0)
 S X=$$NO^XUS3() G RESTART:'X ;fall into exit
"RTN","XUS",48,0)
H ;Exit point for all applications
"RTN","XUS",49,0)
C ;CLOSE
"RTN","XUS",50,0)
 G ^XUSCLEAN
"RTN","XUS",51,0)
 ;
"RTN","XUS",52,0)
ON X ^%ZOSF("EON") Q
"RTN","XUS",53,0)
 ;
"RTN","XUS",54,0)
ASKAV(PRE) ;Ask and return Access;Verify code, Turn off echo before calling
"RTN","XUS",55,0)
 ;Have the first Read write to flush the buffer on some systems
"RTN","XUS",56,0)
 N X,Y S PRE=$G(PRE)
"RTN","XUS",57,0)
 F  W !,PRE,XUSTMP(51) S X=$$ACCEPT S:X="^" X="^;^" Q:$L(X)
"RTN","XUS",58,0)
 S X=$TR(X,$C(9),";") ;Convert TAB to ; to match GUI.
"RTN","XUS",59,0)
 I $P(X," ")="MAIL-BOX" S X=X_";XMR"
"RTN","XUS",60,0)
 I '$L($P(X,";",2)) W !,PRE,XUSTMP(52) S Y=$$ACCEPT S:Y="^" X="^;" S $P(X,";",2)=Y
"RTN","XUS",61,0)
 Q X
"RTN","XUS",62,0)
 ;
"RTN","XUS",63,0)
 ;Timeout used by XUSTZ call.
"RTN","XUS",64,0)
ACCEPT(TO) ;Read A/V and echo '*' char.
"RTN","XUS",65,0)
 N C,A,E K DUOUT S A="",TO=$G(TO,60),E=0
"RTN","XUS",66,0)
 F  D  Q:E
"RTN","XUS",67,0)
 . R "",*C:TO S:('$T) DUOUT=1 S:('$T)!(C=94) A="^"
"RTN","XUS",68,0)
 . I (A="^")!(C=13)!($L(A)>60) S E=1 Q
"RTN","XUS",69,0)
 . I C=127 Q:'$L(A)  S A=$E(A,1,$L(A)-1) W $C(8,32,8) Q
"RTN","XUS",70,0)
 . S A=A_$C(C) W *42
"RTN","XUS",71,0)
 . Q
"RTN","XUS",72,0)
 Q A
"RTN","XUS",73,0)
 ; 
"RTN","XUS",74,0)
CHECKAV(X1) ;Check A/V code return DUZ or Zero.
"RTN","XUS",75,0)
 N %,X,Y,IEN,DA,DIK
"RTN","XUS",76,0)
 S IEN=0,X1=$$UP(X1) S:X1[":" XUTT=1,X1=$TR(X1,":")
"RTN","XUS",77,0)
 S X=$P(X1,";") Q:X="^" -1 S:XUF %1="Access: "_X
"RTN","XUS",78,0)
 Q:X'?1.20ANP 0 S X=$$EN^XUSHSH(X)
"RTN","XUS",79,0)
 I '$D(^VA(200,"A",X)) D LBAV Q 0
"RTN","XUS",80,0)
 S %1="",IEN=$O(^VA(200,"A",X,0)),XUF(.3)=IEN D USER(IEN)
"RTN","XUS",81,0)
 S X=$P(X1,";",2) S:XUF %1="Verify: "_X S X=$$EN^XUSHSH(X)
"RTN","XUS",82,0)
 I $P(XUSER(1),"^",2)'=X D LBAV Q 0
"RTN","XUS",83,0)
 I $G(XUFAC(1)) S DIK="^XUSEC(4,",DA=XUFAC(1) D ^DIK
"RTN","XUS",84,0)
 Q IEN
"RTN","XUS",85,0)
LBAV ;Log Bad AV
"RTN","XUS",86,0)
 D:XUF FAC
"RTN","XUS",87,0)
 I IEN S X=$P($G(^VA(200,IEN,1.1)),U,2)+1,$P(^(1.1),"^",2)=X
"RTN","XUS",88,0)
 Q
"RTN","XUS",89,0)
 ;
"RTN","XUS",90,0)
USER(IX) ;Build XUSER
"RTN","XUS",91,0)
 S XUSER(0)=$G(^VA(200,+IX,0)),XUSER(1)=$G(^(.1)),XUSER(1.1)=$G(^(1.1))
"RTN","XUS",92,0)
 Q
"RTN","XUS",93,0)
 ;
"RTN","XUS",94,0)
XUVOL ;Setup XUENV, XUCI,XQVOL,XUVOL
"RTN","XUS",95,0)
 S U="^" D GETENV^%ZOSV S XUENV=Y,XUCI=$P(Y,U,1),XQVOL=$P(Y,U,2)
"RTN","XUS",96,0)
 S X=$O(^XTV(8989.3,1,4,"B",XQVOL,0)),XUVOL=$S(X>0:^XTV(8989.3,1,4,X,0),1:XQVOL_"^y^1")
"RTN","XUS",97,0)
 Q
"RTN","XUS",98,0)
 ;
"RTN","XUS",99,0)
XOPT ;Setup initial XOPT
"RTN","XUS",100,0)
 S XOPT=$S($D(^XTV(8989.3,1,"XUS")):^("XUS"),1:"")
"RTN","XUS",101,0)
 F I=2:1:15 I $P(XOPT,U,I)="" S $P(XOPT,U,I)=$P("^5^900^1^1^^^^1^300^^^^N^90",U,I)
"RTN","XUS",102,0)
 Q
"RTN","XUS",103,0)
 ;
"RTN","XUS",104,0)
SET1(FLAG) ;Setup parameters
"RTN","XUS",105,0)
 N %
"RTN","XUS",106,0)
 S U="^",XUEON=^%ZOSF("EON"),XUEOFF=^("EOFF")
"RTN","XUS",107,0)
 D XUVOL,XOPT S:$P(XUVOL,U,6)="y" XRTL=XUCI_","_XQVOL
"RTN","XUS",108,0)
 K ^XUTL("XQ",$J) S XUF=0,XUDEV=0,DUZ=0,DUZ(0)="@",IOS=0,ION=""
"RTN","XUS",109,0)
 I FLAG S %ZIS="L",IOP="HOME" D ^%ZIS Q:POP
"RTN","XUS",110,0)
 S XUDEV=IOS,XUIOP=ION D:$D(XRTL) T0^%ZOSV
"RTN","XUS",111,0)
 D GETFAC^XUS3($G(IO("IP")))
"RTN","XUS",112,0)
 S %=$P(XOPT,U,14)
"RTN","XUS",113,0)
 I "N"'[% D
"RTN","XUS",114,0)
 . S XUF=(%["R")+1,XUF(.1)="",XUF(.2)=0,XUF(.3)=0
"RTN","XUS",115,0)
 . I %["D" S:$D(^XTV(8989.3,1,4.33,"B",XUDEV))[0 XUF=0
"RTN","XUS",116,0)
 Q
"RTN","XUS",117,0)
SET2() ;EF. Return error code
"RTN","XUS",118,0)
 N %
"RTN","XUS",119,0)
 S XUNOW=$$HTFM^XLFDT($H),DT=$E(XUNOW,1,7)
"RTN","XUS",120,0)
 K DUZ,XUSER
"RTN","XUS",121,0)
 S (DUZ,DUZ(2))=0,(DUZ(0),DUZ("AG"),XUSER(0),XUSER(1),XUTT,%UCI)=""
"RTN","XUS",122,0)
 S %=$$INHIBIT^XUSRB() I %>0 Q %
"RTN","XUS",123,0)
 S X=$G(^%ZIS(1,XUDEV,"XUS")),XU1=$G(^(1))
"RTN","XUS",124,0)
 I $L(X) F I=1:1:15 I $P(X,U,I)]"" S $P(XOPT,U,I)=$P(X,U,I)
"RTN","XUS",125,0)
 S DTIME=600
"RTN","XUS",126,0)
 I '$P(XOPT,U,11),$D(^%ZIS(1,XUDEV,90)),^(90)>2800000,^(90)'>DT Q 8
"RTN","XUS",127,0)
 I $D(XRT0) S XRTN="XUS" D T1^%ZOSV
"RTN","XUS",128,0)
 Q 0
"RTN","XUS",129,0)
UVALID() ;EF. Is it valid for this user to sign on?
"RTN","XUS",130,0)
 I DUZ'>0 Q 4
"RTN","XUS",131,0)
 I $P(XUSER(1.1),U,5),$P(XUSER(1.1),U,5)>XUNOW S XUM(0)=$$FMTE^XLFDT($P(XUSER(1.1),U,5),"2PM") Q 18 ;User locked until
"RTN","XUS",132,0)
 I $P(XUSER(0),U,11),$P(XUSER(0),U,11)'>DT Q 11 ;Access Terminated
"RTN","XUS",133,0)
 I $P(XUSER(0),U,7) Q 5 ;Disuser flag set
"RTN","XUS",134,0)
 Q 0
"RTN","XUS",135,0)
DEVPAS() ;EF. Ask device password
"RTN","XUS",136,0)
 X XUEOFF W !,"DEVICE PASSWORD: " R X:60 X XUEON
"RTN","XUS",137,0)
 S X=$E(X,1,30) S:'$T X="^" D LC Q:X["^" -1 I $P(XU1,U,2)'=X S:XUF %1="Device: "_X D:XUF FAC Q 6
"RTN","XUS",138,0)
 Q 0
"RTN","XUS",139,0)
 ;
"RTN","XUS1")
0^7^B25051927
"RTN","XUS1",1,0)
XUS1 ;SF-ISC/STAFF - SIGNON ;05/04/2005  15:37
"RTN","XUS1",2,0)
 ;;8.0;KERNEL;**9,59,111,165,150,252,265**;Jul 10, 1995
"RTN","XUS1",3,0)
 ;User setup
"RTN","XUS1",4,0)
USER ;
"RTN","XUS1",5,0)
 K XUTEXT S XUM=$$USER^XUS1A(),$Y=0
"RTN","XUS1",6,0)
 ;Show post sign-on text
"RTN","XUS1",7,0)
 F I=0:0 S I=$O(XUTEXT(I)) Q:I'>0  D:$Y>20  W:$E(XUTEXT(I),1)="!" ! W $E(XUTEXT(I),2,999)
"RTN","XUS1",8,0)
 . N DIR S DIR(0)="E",DIR("A")="Enter RETURN to continue" D ^DIR W @IOF Q
"RTN","XUS1",9,0)
 ;if XUM=9 multi sign-on NOT allowed
"RTN","XUS1",10,0)
 I XUM=9 W !!,?8,$$EZBLD^DIALOG(30810.45)
"RTN","XUS1",11,0)
 Q:XUM  ;User can't sign-on.
"RTN","XUS1",12,0)
SET ;
"RTN","XUS1",13,0)
 S Y=$$CHKDIV() I $P(Y,U,2)>0,$D(^DIC(4,0)) D ASKDIV
"RTN","XUS1",14,0)
 S DUZ(2)=+Y D DUZ^XUS1A
"RTN","XUS1",15,0)
 ;Check verify code
"RTN","XUS1",16,0)
 I $$VCHG D CVC^XUS2 G:$D(DUOUT) H^XUS
"RTN","XUS1",17,0)
 S:$P(XOPT,"^",5) XUTT=1 ;Ask Device
"RTN","XUS1",18,0)
 D ENQ ;Inquire to Terminal Type
"RTN","XUS1",19,0)
 Q
"RTN","XUS1",20,0)
 ;
"RTN","XUS1",21,0)
VCHG() ;Check if the Verify code needs to be changed
"RTN","XUS1",22,0)
 D:'$D(XUSER) USER^XUS(DUZ)
"RTN","XUS1",23,0)
 Q:'$L($P(XUSER(1),U,2)) 1 ;Null VC
"RTN","XUS1",24,0)
 I $$BROKER^XWBLIB Q:$P(XUSER(0),U,8)=1 0 ;VC never expires, only for BROKER
"RTN","XUS1",25,0)
 Q (XUSER(1)+$P(XOPT,U,15))'>$H ;Time to change
"RTN","XUS1",26,0)
 ;
"RTN","XUS1",27,0)
ASKDIV ;Ask the user for the Division, return Y
"RTN","XUS1",28,0)
 N X
"RTN","XUS1",29,0)
 S DIC="^VA(200,DUZ,2,",DIC(0)="AEMQ",DIC("P")="200.02P",X=$O(^VA(200,DUZ,2,"AX1",1,0)) S:X>0 DIC("B")=$P($$NS^XUAF4(X),U)
"RTN","XUS1",30,0)
 D ^DIC I Y'>0 W !,*7,"You must select one." G ASKDIV
"RTN","XUS1",31,0)
 Q
"RTN","XUS1",32,0)
 ;
"RTN","XUS1",33,0)
CHKDIV(CD) ;ef,sr Check if user needs to select Division.
"RTN","XUS1",34,0)
 N %,%1,%2,%3,%4
"RTN","XUS1",35,0)
 S %=$O(^VA(200,DUZ,2,0)),%1=$O(^(%))
"RTN","XUS1",36,0)
 I %1,$D(CD) D
"RTN","XUS1",37,0)
 . S %2=0,%3=0,CD=0
"RTN","XUS1",38,0)
 . F  S %2=$O(^VA(200,DUZ,2,%2)) Q:%2'>0  S %4=^(%2,0),%3=%3+1,CD(%3)=%2_"^"_$$NS^XUAF4(%2)_$S($P(%4,"^",2):"^1",1:"")
"RTN","XUS1",39,0)
 . S CD=%3
"RTN","XUS1",40,0)
 Q %_"^"_%1
"RTN","XUS1",41,0)
 ;
"RTN","XUS1",42,0)
ENQ ;Get terminal type
"RTN","XUS1",43,0)
 S XUT1="" I XUTT X XUEOFF R X:0 X ^%ZOSF("TYPE-AHEAD") W $C(27,91,99) R *X:2 I X=27 F  R X#1:2 S XUT1=XUT1_X Q:'$T!(X="c")
"RTN","XUS1",44,0)
 I XUTT,(XUT1'["[") R X:0 S XUT1="" W *5 R *X:2 R:$T XUT1:2 S X=$S(X=6:"C-WYSE 75",1:$C(X)_XUT1),XUT1=""
"RTN","XUS1",45,0)
 X XUEON I XUTT,XUT1["[" S Y=$O(^%ZIS(3.22,"B",XUT1,0)) I Y>0 S X=$P($G(^%ZIS(3.22,Y,0)),"^",2)
"RTN","XUS1",46,0)
 I X?1.ANP S DIC="^%ZIS(2,",DIC(0)="MO" D ^DIC I Y>0 S XUIOP(1)=$P(Y,U,2),$P(XUIOP,";",2)=XUIOP(1),^VA(200,DUZ,1.2)=+Y
"RTN","XUS1",47,0)
 I '$D(XUIOP(1)),$D(^VA(200,DUZ,1.2)) S X=+^(1.2) I X>0,$D(^%ZIS(2,X,0)) S $P(XUIOP,";",2)=$P(^(0),U)
"RTN","XUS1",48,0)
 Q
"RTN","XUS1",49,0)
 ;
"RTN","XUS1",50,0)
NEXT ;Jump to the next routine
"RTN","XUS1",51,0)
 S IOP=XUIOP D ^%ZIS D SAVE ;Save off device/user info
"RTN","XUS1",52,0)
 S X=$G(^DISV(DUZ)) ;Add kill by session or day here
"RTN","XUS1",53,0)
 S ^DISV(DUZ)=$H
"RTN","XUS1",54,0)
 ;Do we need UCI jump anymore?
"RTN","XUS1",55,0)
 S X=%UCI,N1=XUCI I PGM["[" S X=$P(PGM,"[",2,4),PGM=$P(PGM,"[",1)
"RTN","XUS1",56,0)
 S:X["""" X=$P(X,"""",2) S:X?.E1"]"&(X'["[") X=$E(X,1,$L(X)-1) S XUM=14,XUM(0)=X
"RTN","XUS1",57,0)
 S %UCI=X I "PRODMGR"'[X,$D(^%ZOSF("UCICHECK")) X ^("UCICHECK") G NO:Y="" S:N1=Y %UCI=""
"RTN","XUS1",58,0)
 S XUM=15,XUM(0)=PGM G NO:PGM'?1AP.AN
"RTN","XUS1",59,0)
 G NO:":"_XUA_":"'[(":"_PGM_":")
"RTN","XUS1",60,0)
 D AUDIT
"RTN","XUS1",61,0)
 S X=$S($D(^VA(200,DUZ,0)):$P($P(^(0),U),","),1:"Unk"),X=$E(X,1,10)_"_"_($J#10000) D SETENV^%ZOSV
"RTN","XUS1",62,0)
 ;S X=$P(XOPT,U,16) X:X ^%ZOSF("PRIORITY")
"RTN","XUS1",63,0)
 D LOG:DUZ,KILL
"RTN","XUS1",64,0)
 I %UCI]"" K ^XUTL("XQ",$J) S $P(^VA(200,DUZ,1.1),U,3)=0 G GO^%XUCI
"RTN","XUS1",65,0)
 K ^XUTL("OR",$J),^UTILITY($J),%UCI
"RTN","XUS1",66,0)
 G @(U_PGM)
"RTN","XUS1",67,0)
 ;
"RTN","XUS1",68,0)
SAVE ;
"RTN","XUS1",69,0)
 S X="DUZ" F  S X=$Q(@X) Q:X=""  I $D(@X) S ^XUTL("XQ",$J,$TR(X,""""))=@X
"RTN","XUS1",70,0)
 F X="DUZ","IO","IO(""IP"")","IO(""CLNM"")","XQVOL" I $D(@X) S ^XUTL("XQ",$J,X)=@X
"RTN","XUS1",71,0)
 D SAVEVAR^%ZIS ;Save the HOME device variables
"RTN","XUS1",72,0)
 Q
"RTN","XUS1",73,0)
 ;
"RTN","XUS1",74,0)
LOG ;used by R/S and Broker
"RTN","XUS1",75,0)
 N XP1,XP2
"RTN","XUS1",76,0)
 S XP1=$$SLOG($P(XUVOL,U,1),,XUDEV,XUCI,$P(XUENV,U,3))
"RTN","XUS1",77,0)
 S %=$$COOKIE($P(^VA(200,DUZ,0),U),XP1) I $L(%) S XQXFLG("ZEBRA")=XP1_"~"_%,$P(^XUSEC(0,XP1,0),U,13)=% L +^XWB("SESSION",XQXFLG("ZEBRA")):60
"RTN","XUS1",78,0)
 S XP2=$G(^VA(200,DUZ,1.1)),XQXFLG("LLOG")=$P(XP2,U) ;Save for LOGIN templates
"RTN","XUS1",79,0)
 S $P(XP2,"^",1,3)=XP1_"^0^1",$P(XP2,U,5)="" ;Set last Sign-on
"RTN","XUS1",80,0)
 S ^VA(200,DUZ,1.1)=XP2
"RTN","XUS1",81,0)
 Q
"RTN","XUS1",82,0)
 ;
"RTN","XUS1",83,0)
 ;The other parameters are in the symbol table with known names.
"RTN","XUS1",84,0)
 ;P1=DUZ,P2=$I,P3=$J,P4=EXIT D/T,P5=VOLUME,P6=TASKMAN,P7=XUDEV,P8=UCI,P9=ZIO,P10=NODE,P11=IP,P12=CLNM,P13=HANDLE,P14=REMOTE SITE,P15=REMOTE IEN
"RTN","XUS1",85,0)
SLOG(P5,P6,P7,P8,P10,P14,P15) ;
"RTN","XUS1",86,0)
 N %,I,DA,DIK,XL1 S XL1=$$NOW^XLFDT
"RTN","XUS1",87,0)
 S P5=$G(P5),P6=$G(P6),P7=$G(P7),P8=$G(P8),P10=$G(P10)
"RTN","XUS1",88,0)
 F I=XL1:.00000001 L +^XUSEC(0,I):1 Q:'$D(^XUSEC(0,I))  L -^XUSEC(0,I)
"RTN","XUS1",89,0)
 S ^XUSEC(0,I,0)=DUZ_"^"_$I_"^"_$J_"^^"_P5_"^"_P6_"^"_P7_"^"_P8_"^"_$G(IO("ZIO"))_"^"_P10_"^"_$G(IO("IP"))_"^"_$G(IO("CLNM"))_$S($D(P14):"^^"_P14_"^"_P15,1:"")
"RTN","XUS1",90,0)
 L -^XUSEC(0,I)
"RTN","XUS1",91,0)
 S $P(^XUSEC(0,0),"^",3,4)=I_"^"_(1+$P(^XUSEC(0,0),"^",4))
"RTN","XUS1",92,0)
 S (XL1,DA)=I,DIK="^XUSEC(0," D IX^DIK ;index new entry
"RTN","XUS1",93,0)
 S ^XUTL("XQ",$J,0)=XL1 ;save for sign-off
"RTN","XUS1",94,0)
 Q XL1
"RTN","XUS1",95,0)
 ;
"RTN","XUS1",96,0)
COOKIE(J1,J2) ;Call VAdeamon for a cookie
"RTN","XUS1",97,0)
 N ZZ,%
"RTN","XUS1",98,0)
 I $G(XQXFLG("ZEBRA"))=-1 K XQXFLG("ZEBRA") Q "" ;Disabled
"RTN","XUS1",99,0)
 Q:$G(IO("IP"))="" "" ;Not using Telnet
"RTN","XUS1",100,0)
 ;
"RTN","XUS1",101,0)
 S %=$$CMD^XWBCAGNT(.ZZ,"XWB CREATE HANDLE",J1_"^"_J2) Q:'% ""
"RTN","XUS1",102,0)
 Q $G(ZZ(1))
"RTN","XUS1",103,0)
 ;
"RTN","XUS1",104,0)
AUDIT ;Set-up Audit info
"RTN","XUS1",105,0)
 N I,I1,I2
"RTN","XUS1",106,0)
 S I=$G(^XTV(8989.3,1,19)),I1=$P(I,U),I2=$P(I,U,2) Q:"asu"'[I1  I (I2>XUNOW)!($P(I,U,3)<XUNOW) Q
"RTN","XUS1",107,0)
 I "au"[I1 S:(I1="a")!($D(^XTV(8989.3,1,19.3,"B",DUZ))>1) XQAUDIT=1 Q
"RTN","XUS1",108,0)
 S XQAUDIT="" F I=0:0 S I=$O(^XTV(8989.3,1,19.1,"B",I)) Q:I'>0!($L(XQAUDIT)>245)  S XQAUDIT=XQAUDIT_"2^"_I_U
"RTN","XUS1",109,0)
 S I1="" F I=0:0 S I1=$O(^XTV(8989.3,1,19.2,"B",I1)) Q:I1']""!($L(XQAUDIT)>245)  S XQAUDIT=XQAUDIT_"3^"_I1_U
"RTN","XUS1",110,0)
 Q
"RTN","XUS1",111,0)
 ;
"RTN","XUS1",112,0)
DD(Y) Q $$FMTE^XLFDT(Y,1)
"RTN","XUS1",113,0)
 ;
"RTN","XUS1",114,0)
KILL N %UCI,PGM,U,XQUR,XMCHAN G KILL1^XUSCLEAN
"RTN","XUS1",115,0)
 Q
"RTN","XUS1",116,0)
NO G NO^XUS
"RTN","XUS1A")
0^6^B12342712
"RTN","XUS1A",1,0)
XUS1A ;SF-ISC/STAFF - SIGNON overflow from XUS1 ;01/28/2004  08:09
"RTN","XUS1A",2,0)
 ;;8.0;KERNEL;**153,149,183,258,265**;Jul 10, 1995
"RTN","XUS1A",3,0)
 Q
"RTN","XUS1A",4,0)
USER() ;
"RTN","XUS1A",5,0)
 N %B,%E,%T,I1,X1,X2
"RTN","XUS1A",6,0)
 S XUTEXT=0,DUZ(2)=$G(DUZ(2),0)
"RTN","XUS1A",7,0)
 F I=0:0 S I=$O(^XTV(8989.3,1,"POST",I)) Q:I'>0  D SET("!"_$G(^(I,0)))
"RTN","XUS1A",8,0)
 D SET("!"),XOPT
"RTN","XUS1A",9,0)
 S %H=$P($H,",",2)
"RTN","XUS1A",10,0)
 D SET("!Good "_$S(%H<43200:"morning ",%H<61200:"afternoon ",1:"evening ")_$S($P(XUSER(1),U,4)]"":$P(XUSER(1),U,4),1:$P(XUSER(0),U,1)))
"RTN","XUS1A",11,0)
 S I1=$G(^VA(200,DUZ,1.1)),X=(+I1_"0000")
"RTN","XUS1A",12,0)
 I X D SET("!     You last signed on "_$S(X\1=DT:"today",X\1+1=DT:"yesterday",1:$$FMTE^XLFDT(X,"1D"))_" at "_$E(X,9,10)_":"_$E(X,11,12))
"RTN","XUS1A",13,0)
 I $P(I1,"^",2) S I=$P(I1,"^",2) D SET("!There "_$S(I>1:"were ",1:"was ")_I_" unsuccessful attempt"_$S(I>1:"s",1:"")_" since you last signed on.")
"RTN","XUS1A",14,0)
 I $P(XUSER(0),U,12),$$PH(%H,$P(XUSER(0),U,12)) Q 17 ;Time frame
"RTN","XUS1A",15,0)
 I +$P(XOPT,U,15) S %=$P(XOPT,U,15)-($H-XUSER(1)) I %<6,%>0 D SET("!     Your Verify code will expire in "_%_" days")
"RTN","XUS1A",16,0)
 ;Report new Mail
"RTN","XUS1A",17,0)
 N XUXM S %=$$NU^XMGAPI4(1,1,"XUXM") I $G(XUXM) F %=0:0 S %=$O(XUXM(%)) Q:%'>0  D SET("!"_XUXM(%))
"RTN","XUS1A",18,0)
 S:$P(XOPT,"^",5) XUTT=1 S DTIME=$P(XOPT,U,10)
"RTN","XUS1A",19,0)
 ;Check Multiple Sign-on allowed, X1 signed on flag, X2 0=No,1=Yes,2=1IP
"RTN","XUS1A",20,0)
 S X1=$P($G(^VA(200,DUZ,1.1)),U,3),X2=$P(XOPT,U,4)
"RTN","XUS1A",21,0)
 I 'X2,X1 Q 9 ;Multi Sign-on not allowed
"RTN","XUS1A",22,0)
 I X2=2 D  Q:%B>0 %B ;Only from one IP
"RTN","XUS1A",23,0)
 . S %B=0 I '$D(IO("IP")) S:X1 %B=9 Q  ;Can't tell IP, 
"RTN","XUS1A",24,0)
 . S X1=$$COUNT(DUZ,IO("IP")),%B=$S(X1<0:9,(X1+1)>$P(XOPT,U,19):9,1:0)
"RTN","XUS1A",25,0)
USX S $P(^VA(200,DUZ,1.1),U,3)=1
"RTN","XUS1A",26,0)
 ;Call XQOR to handle SIGN-ON protocall.
"RTN","XUS1A",27,0)
 N XUSER,XUSQUIT ;Protect ourself.
"RTN","XUS1A",28,0)
 S DIC="^DIC(19,",X="XU USER SIGN-ON",XUSQUIT=0
"RTN","XUS1A",29,0)
 D EN^XQOR
"RTN","XUS1A",30,0)
 K X,DIC
"RTN","XUS1A",31,0)
 Q XUSQUIT ;If protocol set XUSQUIT will stop sign-on.
"RTN","XUS1A",32,0)
 ;
"RTN","XUS1A",33,0)
SET(V) ;Set into XUTEXT(XUTEXT), Called from XU USER SIGN-ON protocol.
"RTN","XUS1A",34,0)
 S XUTEXT=$G(XUTEXT)+1,XUTEXT(XUTEXT)=V
"RTN","XUS1A",35,0)
 Q
"RTN","XUS1A",36,0)
 ;
"RTN","XUS1A",37,0)
DUZ ;setup duz, also see XUS5
"RTN","XUS1A",38,0)
 ;Called from XUSRB, XUESSO1
"RTN","XUS1A",39,0)
 S:'$D(XUSER(0)) XUSER(0)=^VA(200,DUZ,0) D:$D(XOPT)[0 XOPT
"RTN","XUS1A",40,0)
 S DUZ(0)=$P(XUSER(0),U,4),DUZ(1)="",DUZ("AUTO")=$P(XOPT,"^",6)
"RTN","XUS1A",41,0)
 S DUZ(2)=$S($G(DUZ(2))>0:DUZ(2),1:+$P(XOPT,U,17))
"RTN","XUS1A",42,0)
 S X=$P($G(^DIC(4,DUZ(2),99)),U,5),DUZ("AG")=$S(X]"":X,1:$P(^XTV(8989.3,1,0),U,8))
"RTN","XUS1A",43,0)
 S DUZ("BUF")=($P(XOPT,U,9)="Y"),DUZ("LANG")=$P(XOPT,U,7)
"RTN","XUS1A",44,0)
 Q
"RTN","XUS1A",45,0)
XOPT ;Build the XOPT string
"RTN","XUS1A",46,0)
 N X,I
"RTN","XUS1A",47,0)
 S:'$D(XOPT) XOPT=$G(^XTV(8989.3,1,"XUS"))
"RTN","XUS1A",48,0)
 S X=$G(^VA(200,DUZ,200))
"RTN","XUS1A",49,0)
 F I=4:1:7,9,10,19 I $P(X,U,I)]"" S $P(XOPT,"^",I)=$P(X,U,I)
"RTN","XUS1A",50,0)
 Q
"RTN","XUS1A",51,0)
 ;
"RTN","XUS1A",52,0)
COUNT(IEN,IP) ;Count sign-on log active connect from this IP
"RTN","XUS1A",53,0)
 N CNT,IX
"RTN","XUS1A",54,0)
 S CNT="",IX=0
"RTN","XUS1A",55,0)
 I '$D(^XUSEC(0,"AS3",IEN)) Q 0 ;First sign-on
"RTN","XUS1A",56,0)
 I $O(^XUSEC(0,"AS3",IEN,""))'=IP Q -1 ;Diff IP
"RTN","XUS1A",57,0)
 I $O(^XUSEC(0,"AS3",IEN,""),-1)'=IP Q -1 ;Diff IP
"RTN","XUS1A",58,0)
 F  S IX=$O(^XUSEC(0,"AS3",IEN,IP,IX)) Q:'IX  S CNT=CNT+1
"RTN","XUS1A",59,0)
 Q CNT ;Return Count
"RTN","XUS1A",60,0)
 ;
"RTN","XUS1A",61,0)
INTRO(WNM) ;
"RTN","XUS1A",62,0)
 Q:'$D(^XTV(8989.3,1,"INTRO",0))
"RTN","XUS1A",63,0)
 F I=0:0 S I=$O(^XTV(8989.3,1,"INTRO",I)) Q:I'>0  S X=^(I,0) D
"RTN","XUS1A",64,0)
 . I $D(WNM) S @WNM@(I)=X
"RTN","XUS1A",65,0)
 . I '$D(WNM) W X,!
"RTN","XUS1A",66,0)
 . Q
"RTN","XUS1A",67,0)
 Q
"RTN","XUS1A",68,0)
 ;
"RTN","XUS1A",69,0)
DD(Y) Q $$FMTE^XLFDT(X,"1D")
"RTN","XUS1A",70,0)
 ;
"RTN","XUS1A",71,0)
PH(%T,%R) ;Check Prohibited time for R/S
"RTN","XUS1A",72,0)
 N MSG S MSG=$$PROHIBIT(%T,%R)
"RTN","XUS1A",73,0)
 I MSG S XUM(0)=$P(MSG,U,2) Q 1
"RTN","XUS1A",74,0)
 D SET("!"),SET("! "_$$EZBLD^DIALOG(30810.62)_" "_$P(MSG,U,2))
"RTN","XUS1A",75,0)
 Q 0
"RTN","XUS1A",76,0)
 ;
"RTN","XUS1A",77,0)
PROHIBIT(%T,%R) ;See if a prohibited time, (Time from $H, restrict range)
"RTN","XUS1A",78,0)
 N XMSG,%B,%E
"RTN","XUS1A",79,0)
 S %T=%T\60#60+(%T\3600*100),%B=$P(%R,"-",1),%E=$P(%R,"-",2)
"RTN","XUS1A",80,0)
 S XMSG=$P($$FMTE^XLFDT(DT_"."_%B,"2P")," ",2,3)_" "_$$EZBLD^DIALOG(30810.61)_" "_$P($$FMTE^XLFDT(DT_"."_%E,"2P")," ",2,3)
"RTN","XUS1A",81,0)
 I $S(%E'<%B:%T'>%E&(%T'<%B),1:%T>%B!(%T<%E)) Q "1^"_XMSG ;No
"RTN","XUS1A",82,0)
 Q "0^"_XMSG
"RTN","XUS3")
0^5^B18656920
"RTN","XUS3",1,0)
XUS3 ;SF-ISC/STAFF - SIGNON ;10/5/05  15:25
"RTN","XUS3",2,0)
 ;;8.0;KERNEL;**32,149,265**;Jul 10, 1995
"RTN","XUS3",3,0)
TT ;Terminal Type select
"RTN","XUS3",4,0)
 Q:$D(XUIOP(1))
"RTN","XUS3",5,0)
 S DIC("B")=$S($P(XUIOP,";",2)]"":$P(XUIOP,";",2),$D(^%ZIS(1,XUDEV,"SUBTYPE")):+^("SUBTYPE"),1:"C-VT100")
"RTN","XUS3",6,0)
 S DIC="^%ZIS(2,",DIC(0)="AEMQO",DIC("S")="I $P(^(0),U,2)" D ^DIC K DIC Q:Y<1
"RTN","XUS3",7,0)
 ;M/11 & M/VX sites may want to remove the ; from the next line.
"RTN","XUS3",8,0)
 ;S J=$P(Y,U,2) I $D(^%IS(0,"SUB",J)) S $P(^%IS($I,1),U,3)=J
"RTN","XUS3",9,0)
 S ^VA(200,DUZ,1.2)=+Y,$P(XUIOP,";",2)=$P(Y,U,2) Q
"RTN","XUS3",10,0)
 ;
"RTN","XUS3",11,0)
WAIT ;** doesn't work with virtual device
"RTN","XUS3",12,0)
 Q:'$L(IO("ZIO"))
"RTN","XUS3",13,0)
 S X=XUT,XUT=0,H=$P(^DISV("XU",XUDEV),U,2),T=$P(H,",",2)+$P(XOPT,U,3),H=T\86400+H,T=T#86400 Q:H<$H  I +$H=H Q:$P($H,",",2)'<T
"RTN","XUS3",14,0)
LOCK S XUT=X,XMB="XUSLOCK",XMB(1)=$I,XMB(2)=+XUT,XMB(3)=$P(XUVOL,U,1)_","_XUCI D ^XMB
"RTN","XUS3",15,0)
Q Q
"RTN","XUS3",16,0)
 ;
"RTN","XUS3",17,0)
SEC ;Check device's security and time lock.
"RTN","XUS3",18,0)
 Q:$P(XOPT,"^",11)  ;Bypass device lockout
"RTN","XUS3",19,0)
 N %A,%B,%H,Y
"RTN","XUS3",20,0)
 S %A=$P(XUSER(0),U,4),%B=0
"RTN","XUS3",21,0)
 I $G(^%ZIS(1,XUDEV,95))]"",%A'="@" D
"RTN","XUS3",22,0)
 . S %H=$P(^(95),U),%B=1 F Y=1:1:$L(%H) I %A[$E(%H,Y) S %B=0
"RTN","XUS3",23,0)
 I %B D  Q
"RTN","XUS3",24,0)
 . S XMB="XUSECURITY",XMB(1)=$P(XUSER(0),U,1),XMB(2)=$I,XMB(3)=^(95),XMB(4)=%A D ^XMB
"RTN","XUS3",25,0)
 . S XUM=10
"RTN","XUS3",26,0)
 . Q
"RTN","XUS3",27,0)
 S %A=$P($G(^%ZIS(1,XUDEV,"TIME")),U) Q:%A=""
"RTN","XUS3",28,0)
 S Y=$P($H,",",2),%H=Y\60#60+(Y\3600*100),Y=$P(%A,"-",2)
"RTN","XUS3",29,0)
 I Y'<%A G NOPE:%H'>Y&(%H'<%A) Q
"RTN","XUS3",30,0)
 Q:%H'>%A&(%H'<Y)
"RTN","XUS3",31,0)
NOPE S XMB="XUSTIME",XMB(1)=$I,XMB(2)=$P(XUSER(0),U,1),XMB(4)=%A D ^XMB
"RTN","XUS3",32,0)
 S XUM=13,XUM(0)=%A
"RTN","XUS3",33,0)
 Q
"RTN","XUS3",34,0)
 ;
"RTN","XUS3",35,0)
H3(%) ;Convert $H to seconds.
"RTN","XUS3",36,0)
 Q 86400*%+$P(%,",",2)
"RTN","XUS3",37,0)
 ;
"RTN","XUS3",38,0)
GETFAC(IP) ;Set XUFAC from saved value,  Failed Access Count
"RTN","XUS3",39,0)
 I $D(XUFAC) Q
"RTN","XUS3",40,0)
 S XUFAC=0 ;Use default.
"RTN","XUS3",41,0)
 Q:'$L(IP)
"RTN","XUS3",42,0)
 N X,R
"RTN","XUS3",43,0)
 S X=$$FINDFAC(IP)
"RTN","XUS3",44,0)
 ;Clear count if lockout time has passed
"RTN","XUS3",45,0)
 I X>0 D
"RTN","XUS3",46,0)
 . L +^XUSEC(4,X,0):5
"RTN","XUS3",47,0)
 . S R=$G(^XUSEC(4,X,0))
"RTN","XUS3",48,0)
 . L -^XUSEC(4,X,0)
"RTN","XUS3",49,0)
 . ;Use 30 seconds as a balance. Not lock user out, stop scripts.
"RTN","XUS3",50,0)
 . I ($$H3($P(R,"^",3))+30)<$$H3($H) D CLRFAC(IP) Q  ;Exit without changing XUFAC
"RTN","XUS3",51,0)
 . S XUFAC=$P(R,U,2)
"RTN","XUS3",52,0)
 . Q
"RTN","XUS3",53,0)
 ;If IP is a TS, if should lock return 4 else 0.
"RTN","XUS3",54,0)
 I $$TS S XUFAC=$S($$IPCHECK^XUSTZIP(IP):4,1:0)
"RTN","XUS3",55,0)
 Q
"RTN","XUS3",56,0)
 ;
"RTN","XUS3",57,0)
TS() ;Is IP a Terminal Server (check TSCHK in XUSTZIP).
"RTN","XUS3",58,0)
 Q $L($O(^XTV(8989.3,1,405.2,"B",IP,0)))
"RTN","XUS3",59,0)
 ;
"RTN","XUS3",60,0)
FINDFAC(IP) ;Find the entry
"RTN","XUS3",61,0)
 N I
"RTN","XUS3",62,0)
 I $G(XUFAC(1))>0,$D(^XUSEC(4,XUFAC(1),0)) Q XUFAC(1)
"RTN","XUS3",63,0)
 K XUFAC(1)
"RTN","XUS3",64,0)
 Q:'$L(IP) 0
"RTN","XUS3",65,0)
 S I=$O(^XUSEC(4,"B",IP,0))
"RTN","XUS3",66,0)
 I I>0 S XUFAC(1)=I
"RTN","XUS3",67,0)
 Q I
"RTN","XUS3",68,0)
SETFAC(IP) ;Set the value of Failed Access atempts
"RTN","XUS3",69,0)
 N FDA,IEN,I
"RTN","XUS3",70,0)
 I $G(XUFAC(1)),'$D(^XUSEC(4,XUFAC(1),0)) K XUFAC(1)
"RTN","XUS3",71,0)
 S I=$S($G(XUFAC(1)):XUFAC(1),1:"?+1")_","
"RTN","XUS3",72,0)
 S FDA(3.084,I,.01)=IP,FDA(3.084,I,2)=XUFAC,FDA(3.084,I,3)=$H
"RTN","XUS3",73,0)
 D UPDATE^DIE("S","FDA","IEN")
"RTN","XUS3",74,0)
 I $G(IEN(1))>0 S XUFAC(1)=IEN(1)
"RTN","XUS3",75,0)
 Q
"RTN","XUS3",76,0)
 ;
"RTN","XUS3",77,0)
CLRFAC(IP) ;Clear FAC from the global
"RTN","XUS3",78,0)
 N DA,DIK,I
"RTN","XUS3",79,0)
 S I=$$FINDFAC(IP) Q:I'>0
"RTN","XUS3",80,0)
 S DA=I,DIK="^XUSEC(4," D ^DIK
"RTN","XUS3",81,0)
 Q
"RTN","XUS3",82,0)
 ;
"RTN","XUS3",83,0)
FAIL(IP) ;If user fails logon, Call to inc XUFAC
"RTN","XUS3",84,0)
 ; and check if time to lock.  IP is optional.
"RTN","XUS3",85,0)
 S IP=$$IP^XUSTZIP
"RTN","XUS3",86,0)
 D GETFAC(IP) I '$L($G(XOPT)) D XOPT^XUS
"RTN","XUS3",87,0)
 S XUFAC=XUFAC+1 D SETFAC(IP) ;Fail count
"RTN","XUS3",88,0)
 Q XUFAC'<$P(XOPT,U,2)
"RTN","XUS3",89,0)
 ;
"RTN","XUS3",90,0)
NO() ;Fail, R/S entry. Reference to XGWIN has been removed.
"RTN","XUS3",91,0)
 N XUEXIT,% ;Gets set in $$TXT, If 1 halt process.
"RTN","XUS3",92,0)
 W !,"Device: ",$I,!!,$$TXT(XUM),!
"RTN","XUS3",93,0)
 S %=$$FAIL($G(IO("IP"))),XUEXIT=XUEXIT!$D(XUHALT)
"RTN","XUS3",94,0)
 I ('XUEXIT)&'% Q 0 ;Continue to try
"RTN","XUS3",95,0)
 I 'XUEXIT&(XUM-7) W !,$$TXT(7) ;Tell user we are locking device
"RTN","XUS3",96,0)
 ;XUF handled in XUSTZ
"RTN","XUS3",97,0)
 I 'XUEXIT D ^XUSTZ
"RTN","XUS3",98,0)
 H 4
"RTN","XUS3",99,0)
 Q XUEXIT
"RTN","XUS3",100,0)
 ;
"RTN","XUS3",101,0)
TXT(%) ;Call by R/S and Broker
"RTN","XUS3",102,0)
 N XU1
"RTN","XUS3",103,0)
 ;This string tells if a error code should HALT process.
"RTN","XUS3",104,0)
 S:'$D(XUEXIT) XUEXIT=$E("1110000101001000000",%)
"RTN","XUS3",105,0)
 S XU1=30810+(%/100)
"RTN","XUS3",106,0)
 S %=$$EZBLD^DIALOG(XU1) I %["|" S %=$P(%,"|",1)_$G(XUM(0))_$P(%,"|",2)
"RTN","XUS3",107,0)
 K XUM(0)
"RTN","XUS3",108,0)
 Q %
"RTN","XUS3",109,0)
 ;All error messages are now in the DIALOG file.
"RTN","XUS3",110,0)
 ;Message numbers are 30810.01 to 30810.99
"RTN","XUS3",111,0)
ZZ ;;Halt;Error Messages
"RTN","XUS3",112,0)
1 ;;1;No Signons.
"RTN","XUS3",113,0)
2 ;;1;Maximum users.
"RTN","XUS3",114,0)
3 ;;1;Bad device.
"RTN","XUS3",115,0)
4 ;;0;Invalid A/V code.
"RTN","XUS3",116,0)
5 ;;0;No Access for User.
"RTN","XUS3",117,0)
6 ;;0;Invalid device password.
"RTN","XUS3",118,0)
7 ;;0;Device locked.
"RTN","XUS3",119,0)
8 ;;1;This device is out of service.
"RTN","XUS3",120,0)
9 ;;0;*** MULTIPLE SIGN-ONS NOT ALLOWED ***
"RTN","XUS3",121,0)
10 ;;1;You don't have access to this device!
"RTN","XUS3",122,0)
11 ;;0;Access code terminated.
"RTN","XUS3",123,0)
12 ;;0;Change VERIFY code.
"RTN","XUS3",124,0)
13 ;;1;Time limited device.
"RTN","XUS3",125,0)
14 ;;0;Bad UCI!
"RTN","XUS3",126,0)
15 ;;0;Bad Routine.
"RTN","XUS3",127,0)
16 ;;0;No PRIMARY MENU.
"RTN","XUS3",128,0)
17 ;;0;User Time limited.
"RTN","XUS3",129,0)
18 ;;0;User lockout
"RTN","XUS3",130,0)
19 ;;0;Signon not allowed as you have required forms to sign in terminal mode.
"RTN","XUS3",131,0)
20 ;;0;Client IP address not setup.
"RTN","XUSFACHK")
0^8^B9500878
"RTN","XUSFACHK",1,0)
XUSFACHK ;ISF/RWF - FAILED ACCESS ATTEMPTS LOG MONITOR ;10/15/2003  15:25
"RTN","XUSFACHK",2,0)
 ;;8.0;KERNEL;**265**;July 10, 1995
"RTN","XUSFACHK",3,0)
 Q
"RTN","XUSFACHK",4,0)
 ;Built on work by DAF.
"RTN","XUSFACHK",5,0)
FAILED ;FAILED ACCESS ATTEMPTS SCAN PROGRAM
"RTN","XUSFACHK",6,0)
 ;This subroutine will watch over file 3.05 and report if it 
"RTN","XUSFACHK",7,0)
 ;finds repeated signon attempts from the same IP address
"RTN","XUSFACHK",8,0)
 N DA,DIC,DIE,DIK,DR,%,%Y,ZCNT,WORK,XKT,TCI
"RTN","XUSFACHK",9,0)
 N XLST,LAST,TCNT,NUM,NOW,ZTIO,AODLM,AODBUL,IRMLM,IRMBUL
"RTN","XUSFACHK",10,0)
 K ^TMP($J)
"RTN","XUSFACHK",11,0)
 S NOW=$$NOW^XLFDT,^XTMP("XUSFACHK",0)=$$HTFM^XLFDT($H+3)
"RTN","XUSFACHK",12,0)
 ;Check last time this ran. reset last run time to now.
"RTN","XUSFACHK",13,0)
 S XLST=$$GET1^DIQ(8989.3,"1,",405.15,"I"),DA=1,DIE="^XTV(8989.3,",DR="405.15////"_NOW D ^DIE
"RTN","XUSFACHK",14,0)
 S XKT=$$GET1^DIQ(8989.3,"1,",405.17,"I") ;Get Keep Threshold
"RTN","XUSFACHK",15,0)
 S TCI=$$GET1^DIQ(8989.3,"1,",405.18,"I") ;Get Total Count Increase
"RTN","XUSFACHK",16,0)
 ;loop through failed attempts log. count any that happened since last run time.
"RTN","XUSFACHK",17,0)
 S NUM=XLST-.0000001 S:NUM<0 NUM=0
"RTN","XUSFACHK",18,0)
 F  S NUM=$O(^%ZUA(3.05,NUM)) Q:NUM'>0  D
"RTN","XUSFACHK",19,0)
 . S ZTIO=$P(^%ZUA(3.05,NUM,0),"^",7) Q:'$L(ZTIO)  S ZTIO=$P(ZTIO,$S(ZTIO["/":"/",1:":"),1)
"RTN","XUSFACHK",20,0)
 . S ^TMP($J,ZTIO)=$G(^TMP($J,ZTIO))+1
"RTN","XUSFACHK",21,0)
CHKIT ;check to see if number of attempts on any one port is over KEEP THRESHOLD, if so save it.
"RTN","XUSFACHK",22,0)
 S IRMLM=$$GET1^DIQ(8989.3,"1,",405.12,"I"),AODLM=$$GET1^DIQ(8989.3,"1,",405.13,"I"),WORK=$$NBH(NOW)
"RTN","XUSFACHK",23,0)
 S (AODBUL,IRMBUL,TCNT)=0
"RTN","XUSFACHK",24,0)
 S ZTIO=""  F  S ZTIO=$O(^TMP($J,ZTIO)) Q:'$L(ZTIO)  D
"RTN","XUSFACHK",25,0)
 . S TCNT=TCNT+^TMP($J,ZTIO)
"RTN","XUSFACHK",26,0)
 . D:^TMP($J,ZTIO)>XKT SET
"RTN","XUSFACHK",27,0)
 . I WORK,($G(^XTMP("XUSFACHK",2,ZTIO))>IRMLM)!(TCNT>(IRMLM+TCI)) S IRMBUL=1
"RTN","XUSFACHK",28,0)
 . I 'WORK,($G(^XTMP("XUSFACHK",2,ZTIO))>AODLM)!(TCNT>(AODLM+TCI)) S AODBUL=1
"RTN","XUSFACHK",29,0)
 . Q
"RTN","XUSFACHK",30,0)
 D CLEAN
"RTN","XUSFACHK",31,0)
 ;send bulletin to irm if during work hours.  if after hours send to irm and aod.
"RTN","XUSFACHK",32,0)
 I IRMBUL!(AODBUL) D BULL
"RTN","XUSFACHK",33,0)
EXIT Q
"RTN","XUSFACHK",34,0)
 ;clean up and leave.
"RTN","XUSFACHK",35,0)
CLEAN ;clean up ^XTMP("XUSFACHK" global, If no new failed attempts remove.
"RTN","XUSFACHK",36,0)
 N ZNUM,ZZNUM
"RTN","XUSFACHK",37,0)
 S ZNUM="" F  S ZNUM=$O(^XTMP("XUSFACHK",2,ZNUM)) Q:'$L(ZNUM)  D
"RTN","XUSFACHK",38,0)
 .I '$D(^TMP($J,ZNUM)) D
"RTN","XUSFACHK",39,0)
 ..K ^XTMP("XUSFACHK",2,ZNUM)
"RTN","XUSFACHK",40,0)
 Q
"RTN","XUSFACHK",41,0)
SET ;set ^XTMP("XUSFACHK" global.
"RTN","XUSFACHK",42,0)
 S ^XTMP("XUSFACHK",2,ZTIO)=$G(^XTMP("XUSFACHK",2,ZTIO))+^TMP($J,ZTIO)
"RTN","XUSFACHK",43,0)
 Q
"RTN","XUSFACHK",44,0)
BULL ;send bulletin to irm. if after hours, send to aod and have irm paged.
"RTN","XUSFACHK",45,0)
 N NUM,DTE,X,Y,XMY,XMSUB,XMTEXT,ZCNT,I,XMDUZ,XMZ
"RTN","XUSFACHK",46,0)
 S XMSUB="THERE HAVE BEEN A LARGE NUMBER OF FAILED ACCESS ATTEMPTS!!"
"RTN","XUSFACHK",47,0)
 S XMTEXT="^TMP(""XM"",$J,",XMDUZ=.5,ZCNT=0
"RTN","XUSFACHK",48,0)
 S Y=$$GET1^DIQ(8989.3,"1,",.02,"I") I $L(Y) S XMY(Y)=""
"RTN","XUSFACHK",49,0)
 I AODBUL S Y=$$GET1^DIQ(8989.3,"1,",.03,"I") I $L(Y) S XMY(Y)=""
"RTN","XUSFACHK",50,0)
 I '$D(XMY) S XMY(.5)=""
"RTN","XUSFACHK",51,0)
 S DTE=$$FMTE^XLFDT(XLST,"1P")
"RTN","XUSFACHK",52,0)
 D TXT("Since "_DTE_" there have been "_TCNT_" failed access attempts on VistA")
"RTN","XUSFACHK",53,0)
 S NUM=""  F  S NUM=$O(^TMP($J,NUM)) Q:NUM']""  I ^TMP($J,NUM)>XKT D
"RTN","XUSFACHK",54,0)
 . D TXT("Device "_NUM_" has had "_$G(^XTMP("XUSFACHK",2,NUM))_" attempts total so far.")
"RTN","XUSFACHK",55,0)
 . Q
"RTN","XUSFACHK",56,0)
 D TXT(" ")
"RTN","XUSFACHK",57,0)
 D TXT("Someone from IRM should check the Failed Access Attempts log.")
"RTN","XUSFACHK",58,0)
 I AODBUL D TXT("AOD PLEASE PAGE THE IRM ON-CALL PERSON")
"RTN","XUSFACHK",59,0)
 N DO,DIX,DIY
"RTN","XUSFACHK",60,0)
 D ^XMD
"RTN","XUSFACHK",61,0)
 Q
"RTN","XUSFACHK",62,0)
 ;
"RTN","XUSFACHK",63,0)
TXT(S) ;Add text to ^TMP("XM",$J
"RTN","XUSFACHK",64,0)
 S ZCNT=ZCNT+1,^TMP("XM",$J,ZCNT)=S
"RTN","XUSFACHK",65,0)
 Q
"RTN","XUSFACHK",66,0)
 ;
"RTN","XUSFACHK",67,0)
NBH(DATE) ;FIND OUT IF NOW IS DURING NORMAL BUSINESS HOURS.
"RTN","XUSFACHK",68,0)
 ;SEND DATE/TIME IN FILEMAN FORMAT
"RTN","XUSFACHK",69,0)
 N %,%Y
"RTN","XUSFACHK",70,0)
 S %Y=$$DOW^XLFDT(DATE,1)
"RTN","XUSFACHK",71,0)
 Q:%Y<1!(%Y>5) 0
"RTN","XUSFACHK",72,0)
 Q:$D(^HOLIDAY($P(DATE,".",1))) 0
"RTN","XUSFACHK",73,0)
 Q:$E($P(DATE,".",2)_"0000",1,4)>1630!($E($P(DATE,".",2)_"0000",1,4)<0800) 0
"RTN","XUSFACHK",74,0)
 Q 1
"RTN","XUSRA")
0^9^B3358978
"RTN","XUSRA",1,0)
XUSRA ;ISCSF/RWF - Remote access control ;08/27/2003  10:11
"RTN","XUSRA",2,0)
 ;;8.0;KERNEL;**70,115,208,265**;Jul 10, 1995
"RTN","XUSRA",3,0)
 Q  ;No entry from top
"RTN","XUSRA",4,0)
 ;
"RTN","XUSRA",5,0)
 ;OUTSIDE app user cheking, The supported entry-points are:
"RTN","XUSRA",6,0)
 ;VALIDAV, INTRO, USERSET
"RTN","XUSRA",7,0)
 ;First parameter is always call-by-reference
"RTN","XUSRA",8,0)
VALIDAV(RESULT,AVCODE) ;Check a users access
"RTN","XUSRA",9,0)
 ;Return DUZ^problem message^verify needs changing
"RTN","XUSRA",10,0)
 ;This entry point is subscription only.
"RTN","XUSRA",11,0)
 N X,XUSER,XUF,XRA1,XRA2,XUMSG
"RTN","XUSRA",12,0)
 K ^UTILITY($J),^TMP($J),^XUTL("XQ",$J)
"RTN","XUSRA",13,0)
 D SET1^XUS(0) S XRA1=$$INHIBIT^XUSRB,XRA2=0,XUF=0,DUZ=0,XUMSG=0
"RTN","XUSRA",14,0)
 I 'XRA1 S DUZ=$$CHECKAV^XUS(AVCODE) S:DUZ XRA2=$$VCVALID S:XRA2 DUZ=0,XRA1=12
"RTN","XUSRA",15,0)
 S XUMSG=$S(XRA1:XRA1,'DUZ:4,1:0),XUMSG=$S(XUMSG:$$TXT^XUS3(XUMSG),1:"")
"RTN","XUSRA",16,0)
 S RESULT=DUZ_U_XUMSG_U_XRA2
"RTN","XUSRA",17,0)
 Q
"RTN","XUSRA",18,0)
 ;
"RTN","XUSRA",19,0)
INTRO(RESULT) ;Return INTRO TEXT.
"RTN","XUSRA",20,0)
 D INTRO^XUS1A("RESULT")
"RTN","XUSRA",21,0)
 Q
"RTN","XUSRA",22,0)
VCVALID() ;Check if the Verify code needs changing.
"RTN","XUSRA",23,0)
 Q:'$G(DUZ) 1
"RTN","XUSRA",24,0)
 Q $G(^VA(200,DUZ,.1))+$P(^XTV(8989.3,1,"XUS"),"^",15)'>(+$H)
"RTN","XUSRA",25,0)
 ;
"RTN","XUSRA",26,0)
CVC(RESULT,XU1) ;change VC
"RTN","XUSRA",27,0)
 S RESULT=0 Q:$G(DUZ)'>0  N XU2 S U="^",XU2=$P(XU1,U,2),XU1=$P(XU1,U)
"RTN","XUSRA",28,0)
 Q $$BRCVC^XUS2(XU1,XU2)
"RTN","XUSRA",29,0)
 ;
"RTN","XUSRA",30,0)
USERSET(AV) ;sr. If a valid A/V setup DUZ for user.
"RTN","XUSRA",31,0)
 ;input: AV = accesscode_;_verifycode
"RTN","XUSRA",32,0)
 ;output: 0 = not OK ^ msg
"RTN","XUSRA",33,0)
 ;        1 = OK
"RTN","XUSRA",34,0)
 N NZ,X,XUSER,XUF,XUNOW,XUDEV,XUM,XUMSG,%1,VCOK K DUZ
"RTN","XUSRA",35,0)
 S DUZ=0,DUZ(0)="",VCOK=0,U="^",XUF=0,XUM=0,XUMSG=0 D NOW^XUSRB
"RTN","XUSRA",36,0)
 D SET1^XUS(0)
"RTN","XUSRA",37,0)
 S XUM=$$INHIBIT^XUSRB() I XUM G USX ;Logon inhibited
"RTN","XUSRA",38,0)
 S DUZ=$$CHECKAV^XUS(AV),XUM=$$UVALID^XUS() G:XUM USX
"RTN","XUSRA",39,0)
 S VCOK=$$VCVALID^XUSRB()
"RTN","XUSRA",40,0)
USX I XUM S DUZ=0,XUMSG=$$TXT^XUS3(XUM)
"RTN","XUSRA",41,0)
 I 'XUM S XQXFLG("ZEBRA")=-1 D LOG^XUS1 ;Record the sign-on.
"RTN","XUSRA",42,0)
 Q $S(XUM:"0^"_XUMSG,1:1)
"RTN","XUSRA",43,0)
 ;
"RTN","XUSRB")
0^4^B29869823
"RTN","XUSRB",1,0)
XUSRB ;ISCSF/RWF - Request Broker ;04/14/2005  09:27
"RTN","XUSRB",2,0)
 ;;8.0;KERNEL;**11,16,28,32,59,70,82,109,115,165,150,180,213,234,238,265**;Jul 10, 1995
"RTN","XUSRB",3,0)
 Q  ;No entry from top
"RTN","XUSRB",4,0)
 ;
"RTN","XUSRB",5,0)
 ;RPC BROKER calls, First parameter is always call-by-reference
"RTN","XUSRB",6,0)
VALIDAV(RET,AVCODE) ;Check a users access
"RTN","XUSRB",7,0)
 ;Return R(0)=DUZ, R(1)=(0=OK, 1,2...=Can't sign-on for some reason)
"RTN","XUSRB",8,0)
 ; R(2)=verify needs changing, R(3)=Message, R(4)=0, R(5)=msg cnt, R(5+n)
"RTN","XUSRB",9,0)
 ; R(R(5)+6)=# div user must select from, R(R(5)+6+n)=div
"RTN","XUSRB",10,0)
 ;N $ETRAP S $ETRAP=""
"RTN","XUSRB",11,0)
 N X,XUSER,XUNOW,XUDEV,XUM,XUMSG,%1,VCOK K DUZ
"RTN","XUSRB",12,0)
 S U="^",RET(0)=0,RET(5)=0,XUF=$G(XUF,0),XUM=0,XUMSG=0,XUDEV=0
"RTN","XUSRB",13,0)
 S DUZ=0,DUZ(0)="",VCOK=0 D NOW
"RTN","XUSRB",14,0)
 S XOPT=$$STATE^XWBSEC("XUS XOPT")
"RTN","XUSRB",15,0)
 S XUMSG=$$INHIBIT() I XUMSG S XUM=1 G VAX ;Logon inhibited
"RTN","XUSRB",16,0)
 ;3 Strikes
"RTN","XUSRB",17,0)
 I $$LKCHECK^XUSTZIP($G(IO("IP"))) S XUMSG=7 G VAX ;IP locked
"RTN","XUSRB",18,0)
 I $L(AVCODE) D
"RTN","XUSRB",19,0)
 . I $E(AVCODE,1,2)="~1" S DUZ=$$CHKASH^XUSRB4(AVCODE) Q
"RTN","XUSRB",20,0)
 . S DUZ=$$CHECKAV^XUS($$DECRYP^XUSRB1(AVCODE))
"RTN","XUSRB",21,0)
 . Q
"RTN","XUSRB",22,0)
 I DUZ'>0,$$FAIL^XUS3 D  G VAX
"RTN","XUSRB",23,0)
 . S XUM=1,XUMSG=7,X=$$RA^XUSTZ H 5 ;3 Strikes
"RTN","XUSRB",24,0)
 S XUMSG=$$UVALID^XUS() G:XUMSG VAX
"RTN","XUSRB",25,0)
 S VCOK=$$VCVALID()
"RTN","XUSRB",26,0)
 I DUZ>0 S XUMSG=$$POST(1)
"RTN","XUSRB",27,0)
 I XUMSG>0 S DUZ=0,VCOK=0 ;If can't sign-on, don't tell need to change VC
"RTN","XUSRB",28,0)
 I 'XUMSG,VCOK S XUMSG=12 D SET^XWBSEC("XUS DUZ",DUZ) ;Need to change VC
"RTN","XUSRB",29,0)
VAX S:XUMSG>0 DUZ=0 ;Can't sign-on, Clear DUZ.
"RTN","XUSRB",30,0)
 D:DUZ>0 POST2
"RTN","XUSRB",31,0)
 S RET(0)=DUZ,RET(1)=XUM,RET(2)=VCOK,RET(3)=$S(XUMSG:$$TXT^XUS3(XUMSG),1:""),RET(4)=0
"RTN","XUSRB",32,0)
 Q
"RTN","XUSRB",33,0)
 ;
"RTN","XUSRB",34,0)
NOW S U="^",XUNOW=$$NOW^XLFDT(),DT=$P(XUNOW,".")
"RTN","XUSRB",35,0)
 Q
"RTN","XUSRB",36,0)
 ;
"RTN","XUSRB",37,0)
INTRO(RET) ;Return INTRO TEXT.
"RTN","XUSRB",38,0)
 D INTRO^XUS1A("RET")
"RTN","XUSRB",39,0)
 Q
"RTN","XUSRB",40,0)
 ;
"RTN","XUSRB",41,0)
VCVALID() ;Return 1 if the Verify code needs changing.
"RTN","XUSRB",42,0)
 Q:'$G(DUZ) 1
"RTN","XUSRB",43,0)
 N XUSER D USER^XUS(DUZ)
"RTN","XUSRB",44,0)
 Q $$VCHG^XUS1
"RTN","XUSRB",45,0)
 ;
"RTN","XUSRB",46,0)
CVC(RET,XU1) ;change VC, Return 0 = success
"RTN","XUSRB",47,0)
 N XU2,XU3,XU4 S RET(0)=99,XU4=$$STATE^XWBSEC("XUS DUZ") S:(DUZ=0)&(XU4>0) DUZ=XU4 Q:$G(DUZ)'>0
"RTN","XUSRB",48,0)
 S U="^",XU2=$P(XU1,U,2),XU3=$P(XU1,U,3),XU1=$P(XU1,U)
"RTN","XUSRB",49,0)
 S XU1=$$DECRYP^XUSRB1(XU1),XU2=$$DECRYP^XUSRB1(XU2),XU3=$$DECRYP^XUSRB1(XU3)
"RTN","XUSRB",50,0)
 S XU3=$$BRCVC^XUS2(XU1,XU2),RET(0)=+XU3,RET(1)=$P(XU3,U,2,9)
"RTN","XUSRB",51,0)
 I XU3>0 S DUZ=0 ;Clean-up if not changed.
"RTN","XUSRB",52,0)
 I 'XU3,XU4 D KILL^XWBSEC("XUS DUZ"),POST2
"RTN","XUSRB",53,0)
 Q
"RTN","XUSRB",54,0)
 ;
"RTN","XUSRB",55,0)
POST(CVC) ;Finish setup partition, I CVC don't log get
"RTN","XUSRB",56,0)
 N X,XUM,XUDIV S:$D(IO)[0 IO=$I S IO(0)=IO
"RTN","XUSRB",57,0)
 K ^UTILITY($J),^TMP($J)
"RTN","XUSRB",58,0)
 I '$D(XUSER(0)),DUZ D USER^XUS(DUZ)
"RTN","XUSRB",59,0)
 S XUM=$$USER^XUS1A Q:XUM>0 XUM ;User can't sign on for some reason.
"RTN","XUSRB",60,0)
 S RET(5)=0 ;The next line sends the post sign-on msg
"RTN","XUSRB",61,0)
 F %=1:1 Q:'$D(XUTEXT(%))  S RET(5+%)=$E(XUTEXT(%),2,256),RET(5)=%
"RTN","XUSRB",62,0)
 S RET(5)=0 ;This line stops the display of the msg. Remove this line to allow.
"RTN","XUSRB",63,0)
 D:'$G(CVC) POST2
"RTN","XUSRB",64,0)
 Q 0
"RTN","XUSRB",65,0)
 ;
"RTN","XUSRB",66,0)
POST2 D:'$D(XUNOW) NOW
"RTN","XUSRB",67,0)
 D DUZ^XUS1A,SAVE^XUS1,LOG^XUS1,ABT^XQ12
"RTN","XUSRB",68,0)
 ;D KILL^XWBSEC("XUS CNT"),KILL^XWBSEC("XUS XOPT")
"RTN","XUSRB",69,0)
 D KILL^XWBSEC("XUS XOPT"),CLRFAC^XUS3($G(IO("IP")))
"RTN","XUSRB",70,0)
 I $T(SETTIME^XWBTCPC)]"" D SETTIME^XWBTCPC() ;Clear sign-on time-out
"RTN","XUSRB",71,0)
 K:$G(XWBVER)<1.106 XQY,XQY0 ;Delete the sign-on context.
"RTN","XUSRB",72,0)
 K XUTEXT,XOPT,XUEON,XUEOFF,XUTT,XUDEV,XUSER
"RTN","XUSRB",73,0)
 Q
"RTN","XUSRB",74,0)
 ;
"RTN","XUSRB",75,0)
INHIBIT() ;Is Logon to this system Inhibited?
"RTN","XUSRB",76,0)
 N %
"RTN","XUSRB",77,0)
 S %=$$INHIB1() Q:% %
"RTN","XUSRB",78,0)
 S %=$$INHIB2() Q:% %
"RTN","XUSRB",79,0)
 Q 0
"RTN","XUSRB",80,0)
 ;
"RTN","XUSRB",81,0)
INHIB1() ;The LOGON check
"RTN","XUSRB",82,0)
 I $G(^%ZIS(14.5,"LOGON",XQVOL)) Q 1
"RTN","XUSRB",83,0)
 Q 0
"RTN","XUSRB",84,0)
 ;
"RTN","XUSRB",85,0)
INHIB2() ;The Max User Check
"RTN","XUSRB",86,0)
 I $D(^%ZOSF("ACTJ")) X ^("ACTJ") I $P(XUVOL,U,3),($P(XUVOL,U,3)'>Y) Q 2
"RTN","XUSRB",87,0)
 Q 0
"RTN","XUSRB",88,0)
 ;
"RTN","XUSRB",89,0)
LOGOUT ;Finish logout of user.
"RTN","XUSRB",90,0)
 N XU1
"RTN","XUSRB",91,0)
 D CLEARALL^XWBDRPC(.XU1)
"RTN","XUSRB",92,0)
 ;
"RTN","XUSRB",93,0)
 D BYE^XUSCLEAN,XUTL^XUSCLEAN ;Mark the sign-on log, File cleanup.
"RTN","XUSRB",94,0)
 Q
"RTN","XUSRB",95,0)
 ;
"RTN","XUSRB",96,0)
SETUP(RET,XWBUSRNM) ;sets up environment for GUI signon
"RTN","XUSRB",97,0)
 K DUZ
"RTN","XUSRB",98,0)
 S XWBUSRNM=$G(XWBUSRNM)
"RTN","XUSRB",99,0)
 I $L($G(XWBTIP)) S IO("IP")=XWBTIP
"RTN","XUSRB",100,0)
 S IO("CLNM")=$$LOW^XLFSTR($G(XWBCLMAN)) D ZIO^%ZIS4
"RTN","XUSRB",101,0)
 ;Setup needed variables
"RTN","XUSRB",102,0)
 D SET1^XUS(0),SET^XWBSEC("XUS XOPT",XOPT) ;p265
"RTN","XUSRB",103,0)
 ;I '$D(IO("HOME")) S %ZIS="0H",IOP="NULL" D ^%ZIS ;Setup NULL as the home device
"RTN","XUSRB",104,0)
 D SAVE^XUS1 ;save the home device
"RTN","XUSRB",105,0)
 ;0=server name, 1=volume, 2=uci, 3=device, 4=# attempts, 5=skip signon-screen
"RTN","XUSRB",106,0)
 S RET(0)=$P(XUENV,U,3),RET(1)=$P(XUVOL,U),RET(2)=XUCI
"RTN","XUSRB",107,0)
 S RET(3)=$I,RET(4)=$P(XOPT,U,2),RET(5)=0
"RTN","XUSRB",108,0)
 I $$INHIBIT() Q
"RTN","XUSRB",109,0)
 ; Code for DBA Capri Program
"RTN","XUSRB",110,0)
 I +XWBUSRNM=-31,XWBUSRNM["DVBA_" N XVAL D  I XVAL S RET(5)=1 Q
"RTN","XUSRB",111,0)
 . S XVAL=$$PUT^XUESSO1($P(XWBUSRNM,U,3,99)) Q:'XVAL  ; Sign in as Visitor
"RTN","XUSRB",112,0)
 . I $$FIND1^DIC(200.03,","_DUZ_",","X","DVBA CAPRI GUI")'>0 D
"RTN","XUSRB",113,0)
 . . ; Have to give the user a delegated option
"RTN","XUSRB",114,0)
 . . N YARR S YARR(200.19,"+1,"_DUZ_",",.01)="DVBA CAPRI GUI"
"RTN","XUSRB",115,0)
 . . D UPDATE^DIE("E","YARR")
"RTN","XUSRB",116,0)
 . . ; And now he can give himself the context option
"RTN","XUSRB",117,0)
 . . N XARR S XARR(200.03,"+1,"_DUZ_",",.01)="DVBA CAPRI GUI"
"RTN","XUSRB",118,0)
 . . D UPDATE^DIE("E","XARR") ; Give context option as a secondary menu item
"RTN","XUSRB",119,0)
 . . ; But now we have to remove the delegated option
"RTN","XUSRB",120,0)
 . . S OPT=$$FIND1^DIC(200.19,","_DUZ_",","X","DVBA CAPRI GUI")
"RTN","XUSRB",121,0)
 . . K XARR S XARR(200.19,(OPT_","_DUZ_","),.01)="@"
"RTN","XUSRB",122,0)
 . . D FILE^DIE("E","XARR")
"RTN","XUSRB",123,0)
 . . Q
"RTN","XUSRB",124,0)
 . Q
"RTN","XUSRB",125,0)
 ; End of Code for DBA Capri Program
"RTN","XUSRB",126,0)
 ;Auto sign-on check only for Broker v1.1
"RTN","XUSRB",127,0)
 I $G(XWBVER)<1.1 S XQXFLG("ZEBRA")=-1 ;Disable for v1.0
"RTN","XUSRB",128,0)
 I IO("CLNM")]"" S DUZ=$$AUTOXWB^XUS1B() ;Only check when 1.1 CL.
"RTN","XUSRB",129,0)
 I DUZ>0 D NOW S XUMSG=$$POST(0) I XUMSG>0 S DUZ=0
"RTN","XUSRB",130,0)
 S:DUZ>0 RET(5)=1
"RTN","XUSRB",131,0)
 Q
"RTN","XUSRB",132,0)
 ;
"RTN","XUSRB",133,0)
OWNSKEY(RET,LIST,IEN) ;Does user have Key
"RTN","XUSRB",134,0)
 N I,K S I=""
"RTN","XUSRB",135,0)
 I $G(IEN)'>0 S IEN=$G(DUZ)
"RTN","XUSRB",136,0)
 I $G(IEN)'>0 S RET(0)=0 Q
"RTN","XUSRB",137,0)
 I $O(LIST(""))="" S RET(0)=$$KCHK(LIST,IEN) Q
"RTN","XUSRB",138,0)
 F  S I=$O(LIST(I)) Q:I=""  S RET(I)=$$KCHK(LIST(I),IEN)
"RTN","XUSRB",139,0)
 Q
"RTN","XUSRB",140,0)
 ;
"RTN","XUSRB",141,0)
KCHK(%,IEN) ;Key Check
"RTN","XUSRB",142,0)
 S:$G(IEN)'>0 IEN=$G(DUZ) Q $S($G(IEN)>0:$D(^XUSEC(%,IEN)),1:0)
"RTN","XUSRB",143,0)
 ;
"RTN","XUSRB",144,0)
AVHELP(RET) ; send access/verify code instructions.
"RTN","XUSRB",145,0)
 S RET(0)=$$AVHLPTXT^XUS2()
"RTN","XUSRB",146,0)
 Q
"RTN","XUSRB",147,0)
 ;
"RTN","XUSRB",148,0)
OPTACCES(RET,USER,OPTIONS,MODE) ;Checks or sets user's access for passed in options
"RTN","XUSRB",149,0)
 S MODE="CHECK" ;only CHECK mode supported for now
"RTN","XUSRB",150,0)
 N I S I=""
"RTN","XUSRB",151,0)
 I $G(USER)'>0 S RET(0)=0 Q
"RTN","XUSRB",152,0)
 F  S I=$O(OPTIONS(I)) Q:I=""  S RET(I)=$$CHK^XQCS(USER,OPTIONS(I))=1
"RTN","XUSRB",153,0)
 Q
"RTN","XUSRB",154,0)
 ;
"RTN","XUSRB",155,0)
CHECKAV(AVC) ;SR. EF. to check an A/V code, Separate w/ ";", return IEN or 0
"RTN","XUSRB",156,0)
 N XUF,XUSER S XUF=0,U="^"
"RTN","XUSRB",157,0)
 Q $$CHECKAV^XUS(AVC)
"RTN","XUSTZ")
0^2^B8122743
"RTN","XUSTZ",1,0)
XUSTZ ;SF/RWF - Security Twilight Zone ;05/17/2005  09:41
"RTN","XUSTZ",2,0)
 ;;8.0;KERNEL;**36,180,265**;Jul 10, 1995
"RTN","XUSTZ",3,0)
 ;Called from XUS3 for R/S
"RTN","XUSTZ",4,0)
 N XUSTZ,DUOUT,SETLK,TMOUT
"RTN","XUSTZ",5,0)
 ;Only send the bulletin once.
"RTN","XUSTZ",6,0)
 I '$D(XUSTZ) S XUSTZ=1 D SB
"RTN","XUSTZ",7,0)
 ;Set the lockout time
"RTN","XUSTZ",8,0)
 S TMOUT=$$LKTME
"RTN","XUSTZ",9,0)
 ;Check and Lock
"RTN","XUSTZ",10,0)
 W !!,?10,$$RA
"RTN","XUSTZ",11,0)
 ;If because device is locked only lock till "Lock till time"
"RTN","XUSTZ",12,0)
 I $$LKCHECK^XUSTZIP() S TMOUT=$$LKWAIT^XUSTZIP(TMOUT)
"RTN","XUSTZ",13,0)
 ;
"RTN","XUSTZ",14,0)
 ;Make user wait for timeout.
"RTN","XUSTZ",15,0)
 F  D ASK Q:$D(DUOUT)
"RTN","XUSTZ",16,0)
 D CLEAN^XUSTZIP
"RTN","XUSTZ",17,0)
 I XUF D FILE
"RTN","XUSTZ",18,0)
 W !!,$$EZBLD^DIALOG(30810.41)
"RTN","XUSTZ",19,0)
 K ^DISV("XU",IOS)
"RTN","XUSTZ",20,0)
 Q  ;Back to XUS3
"RTN","XUSTZ",21,0)
 ;
"RTN","XUSTZ",22,0)
RA(IP) ;EF. Entry point for Remote Access (Broker/Vistalink) and R/S
"RTN","XUSTZ",23,0)
 ;This is used to Lock the User or IP.  Returns Text.
"RTN","XUSTZ",24,0)
 N TXT,TMOUT S TXT="",TMOUT=$$LKTME,IP=$$IP^XUSTZIP
"RTN","XUSTZ",25,0)
 D FILE ;File in FAA, Do now before user can disconnect
"RTN","XUSTZ",26,0)
 D CLEAN^XUSTZIP
"RTN","XUSTZ",27,0)
 ;Check if Lock the user
"RTN","XUSTZ",28,0)
 I $G(XUF(.3))>0,$$LKUSER(XUF(.3)) S TXT=$$EZBLD^DIALOG(30810.43,TMOUT)
"RTN","XUSTZ",29,0)
 ;Check and LOCK the IP.
"RTN","XUSTZ",30,0)
 I '$T,$$IPCHECK^XUSTZIP(IP) D
"RTN","XUSTZ",31,0)
 . S SETLK=$$LKSET^XUSTZIP(IP)
"RTN","XUSTZ",32,0)
 . I SETLK>0 S TXT=$$EZBLD^DIALOG(30810.44)
"RTN","XUSTZ",33,0)
 . Q
"RTN","XUSTZ",34,0)
 Q TXT
"RTN","XUSTZ",35,0)
 ;
"RTN","XUSTZ",36,0)
ASK N XUM,XUFAC
"RTN","XUSTZ",37,0)
 W !!!,$$EZBLD^DIALOG(30810.42)
"RTN","XUSTZ",38,0)
 X XUEOFF S %="",XUM=4,XUEXIT=0,XUC="",TMOUT=$S(TMOUT>10:TMOUT,1:10)
"RTN","XUSTZ",39,0)
A1 ;Let user keep trying
"RTN","XUSTZ",40,0)
 W !,XUSTMP(51) S X=$$ACCEPT^XUS(TMOUT) ;Access
"RTN","XUSTZ",41,0)
 Q:$D(DUOUT)  G A1:X="" ;,OK:'$D(^DISV("XU",IOS)),A1:X=""
"RTN","XUSTZ",42,0)
 I X[U W "  '^' not allowed in Access Code, Use EDIT USER option." Q
"RTN","XUSTZ",43,0)
 S:X[";" %=$P(X,";",2),X=$P(X,";") I XUF S %1="Access: "_X D FAC
"RTN","XUSTZ",44,0)
 HANG 2
"RTN","XUSTZ",45,0)
 ;
"RTN","XUSTZ",46,0)
 S %1="" I %="" W !,XUSTMP(52) S X=$$ACCEPT^XUS(60),%="" ;Verify
"RTN","XUSTZ",47,0)
 I XUF S %1="Verify: "_X D FAC
"RTN","XUSTZ",48,0)
 HANG 2
"RTN","XUSTZ",49,0)
 I XUF,XUF(.2)>50 D FILE S XUF(.2)=0
"RTN","XUSTZ",50,0)
 S XUFAC=0,%=$$NO^XUS3
"RTN","XUSTZ",51,0)
 Q
"RTN","XUSTZ",52,0)
 ;
"RTN","XUSTZ",53,0)
FAC G FAC^XUS
"RTN","XUSTZ",54,0)
 ;
"RTN","XUSTZ",55,0)
FILE ;File data into Access Atempt Log
"RTN","XUSTZ",56,0)
 ;Call needs, IOS,XUVOL,XUF(.1),(.2),(.3),XUT,XUCI,IO("ZIO"),XUNOW
"RTN","XUSTZ",57,0)
 ;Want to use IO("IP") in place of IO("ZIO") if we have it.
"RTN","XUSTZ",58,0)
 Q:'$G(XUF) 
"RTN","XUSTZ",59,0)
 N XUT,ZIO S ZIO=$G(IO("ZIO")) S:$D(IO("IP")) IO("ZIO")=IO("IP")
"RTN","XUSTZ",60,0)
 S X1=IOS,X2=DT F I=1:1:XUF(.2) S X=XUF(I) D EN^XUSHSHP S XUF(I)=X
"RTN","XUSTZ",61,0)
 S XUT=XUFAC
"RTN","XUSTZ",62,0)
 S XUSLNT=1,XQZ="FAAL^ZUA[MGR]" D DO^%XUCI
"RTN","XUSTZ",63,0)
 F I=1:1:XUF(.2) K XUF(I)
"RTN","XUSTZ",64,0)
 S XUF(.2)=0 S:$L(ZIO) IO("ZIO")=ZIO
"RTN","XUSTZ",65,0)
 Q
"RTN","XUSTZ",66,0)
 ;
"RTN","XUSTZ",67,0)
SB ;Send the XUSLOCK bulletin
"RTN","XUSTZ",68,0)
 S XMB="XUSLOCK",XMB(1)=$S($D(IO("IP")):IO("IP"),$D(IO("ZIO")):IO("ZIO"),1:$I),XMB(2)=+XUFAC,XMB(3)=ION
"RTN","XUSTZ",69,0)
 D ^XMB
"RTN","XUSTZ",70,0)
 Q
"RTN","XUSTZ",71,0)
LKTME() ;Get Lock-out time
"RTN","XUSTZ",72,0)
 I $D(XOPT) Q $P(XOPT,U,3)
"RTN","XUSTZ",73,0)
 Q $P(^XTV(8989.3,1,"XUS"),U,3)
"RTN","XUSTZ",74,0)
 ;
"RTN","XUSTZ",75,0)
LKUSER(IEN) ;Lock user, Return: 0 not locked, 1 locked
"RTN","XUSTZ",76,0)
 Q:$P($G(^XTV(8989.3,1,405)),U,4)'="y" 0
"RTN","XUSTZ",77,0)
 N FDA
"RTN","XUSTZ",78,0)
 ;If already locked don't change time
"RTN","XUSTZ",79,0)
 S FDA=$$GET1^DIQ(200,IEN_",",202.05,"I")
"RTN","XUSTZ",80,0)
 I FDA>XUNOW Q 0 ;Still Locked.
"RTN","XUSTZ",81,0)
 ;If locking user clear XUFAC.
"RTN","XUSTZ",82,0)
 D CLRFAC^XUS3($G(IO("IP")))
"RTN","XUSTZ",83,0)
 K FDA ;Add d,h,m,s
"RTN","XUSTZ",84,0)
 S FDA(200,IEN_",",202.05)=$$HTFM^XLFDT($$HADD^XLFDT($H,0,0,0,TMOUT))
"RTN","XUSTZ",85,0)
 D UPDATE^DIE("","FDA")
"RTN","XUSTZ",86,0)
 Q 1
"RTN","XUSTZIP")
0^3^B25477365
"RTN","XUSTZIP",1,0)
XUSTZIP ;WRJ/DAF,ISF/RWF - Security Twilight Zone, Failed Access Attempts ;03/24/2004  11:12
"RTN","XUSTZIP",2,0)
 ;;8.0;KERNEL;**265**;Jul 10, 1995
"RTN","XUSTZIP",3,0)
 Q
"RTN","XUSTZIP",4,0)
 ;The subfiles in KSP file.
"RTN","XUSTZIP",5,0)
 ;405.2 List of Terminal Servers, slack, last reset
"RTN","XUSTZIP",6,0)
 ;
"RTN","XUSTZIP",7,0)
 ;^XUSEC(3, (File 3.083) Locked IP's, lock until
"RTN","XUSTZIP",8,0)
 ;^XUSEC(4, (File 3.084) Failed attempts count
"RTN","XUSTZIP",9,0)
 ;$P(^VA(200,DUZ,1.1),U,5) Locked Users
"RTN","XUSTZIP",10,0)
 ;
"RTN","XUSTZIP",11,0)
CLEAN ;CLEAN UP OLD LOCKED IP NODES, ^XUSEC(3,
"RTN","XUSTZIP",12,0)
 N ZNUM,NOW
"RTN","XUSTZIP",13,0)
 S ZNUM=0,NOW=$$NOW^XLFDT
"RTN","XUSTZIP",14,0)
 L +^XUSEC(3,0):10
"RTN","XUSTZIP",15,0)
 F  S ZNUM=$O(^XUSEC(3,ZNUM)) Q:ZNUM'>0  D
"RTN","XUSTZIP",16,0)
 .I $P(^XUSEC(3,ZNUM,0),"^",2)'>NOW D LKDEL(ZNUM)
"RTN","XUSTZIP",17,0)
 L -^XUSEC(3,0),+^XUSEC(4,0):10
"RTN","XUSTZIP",18,0)
 N XUFAC,OV
"RTN","XUSTZIP",19,0)
 S ZNUM=0,NOW=$$H3-90
"RTN","XUSTZIP",20,0)
 F  S ZNUM=$O(^XUSEC(4,ZNUM)) Q:ZNUM'>0  D
"RTN","XUSTZIP",21,0)
 .S OV=$$H3($P(^XUSEC(4,ZNUM,0),"^",3)) I OV'>NOW D
"RTN","XUSTZIP",22,0)
 ..N DIK,DA
"RTN","XUSTZIP",23,0)
 ..S DA=ZNUM,DIK="^XUSEC(4," D ^DIK
"RTN","XUSTZIP",24,0)
 L -^XUSEC(4,0)
"RTN","XUSTZIP",25,0)
 Q
"RTN","XUSTZIP",26,0)
X6IP ;EXAMINE AND ALLOW RESET OF LOCKED IPS
"RTN","XUSTZIP",27,0)
 N I,ZFDA,DIR,XUNOW,ZNM,ZNUM,Y S ZNM=""
"RTN","XUSTZIP",28,0)
 I '$D(^XUSEC(3,"B")) W !,"There are no IP's to Clear" Q
"RTN","XUSTZIP",29,0)
 F I=1:1 S ZNM=$O(^XUSEC(3,"B",ZNM)) Q:ZNM']""  S ZNUM=$O(^XUSEC(3,"B",ZNM,"")) D
"RTN","XUSTZIP",30,0)
 .S ZNM(I)=ZNUM_"^"_ZNM
"RTN","XUSTZIP",31,0)
 .Q:'$D(^XUSEC(3,ZNUM,0))
"RTN","XUSTZIP",32,0)
 .W !,I_". ",ZNM,"  lock out till: ",$$FMTE^XLFDT($P(^XUSEC(3,ZNUM,0),"^",2))
"RTN","XUSTZIP",33,0)
 S DIR(0)="N^1:"_(I-1),DIR("A")="Choose the number of the IP to reset" D ^DIR Q:$D(DIRUT)
"RTN","XUSTZIP",34,0)
 S ZNM=$P(ZNM(Y),"^",2),ZNUM=+ZNM(Y)
"RTN","XUSTZIP",35,0)
 ;Call with IEN
"RTN","XUSTZIP",36,0)
 D LKDEL(ZNUM)
"RTN","XUSTZIP",37,0)
 W !,ZNM," Cleared"
"RTN","XUSTZIP",38,0)
 ;Call with IP
"RTN","XUSTZIP",39,0)
 D CLRFAC^XUS3(ZNM) ;Clear access count
"RTN","XUSTZIP",40,0)
 ;if this is a ts reset and then set reset date in site param file
"RTN","XUSTZIP",41,0)
 S ZIEN=$$TSCHK(ZNM)
"RTN","XUSTZIP",42,0)
 I ZIEN>0 S ZFDA(8989.305,ZIEN_",1,",2)=$$NOW D UPDATE^DIE("","ZFDA")
"RTN","XUSTZIP",43,0)
 K DIR,DIRUT
"RTN","XUSTZIP",44,0)
 Q
"RTN","XUSTZIP",45,0)
 ;
"RTN","XUSTZIP",46,0)
LKSET(IP) ;Set IP Lock Node
"RTN","XUSTZIP",47,0)
 N ZNUM,ZFDA,ZIEN
"RTN","XUSTZIP",48,0)
 Q:'$$ON 0
"RTN","XUSTZIP",49,0)
 S ZIEN="?+2,",ZFDA(3.083,ZIEN,.01)=IP
"RTN","XUSTZIP",50,0)
 S ZFDA(3.083,ZIEN,2)=$$LKTL
"RTN","XUSTZIP",51,0)
 D UPDATE^DIE("","ZFDA","ZIEN")
"RTN","XUSTZIP",52,0)
 D CLRFAC^XUS3(IP) ;Clear the access count
"RTN","XUSTZIP",53,0)
 Q 1
"RTN","XUSTZIP",54,0)
LKTL() ;Lock until
"RTN","XUSTZIP",55,0)
 Q $$HTFM^XLFDT($$HADD^XLFDT($H,0,0,0,$$LKTME))
"RTN","XUSTZIP",56,0)
 ;
"RTN","XUSTZIP",57,0)
NOW() ;
"RTN","XUSTZIP",58,0)
 I $G(XUNOW) Q XUNOW
"RTN","XUSTZIP",59,0)
 S XUNOW=$$NOW^XLFDT
"RTN","XUSTZIP",60,0)
 Q XUNOW
"RTN","XUSTZIP",61,0)
 ;
"RTN","XUSTZIP",62,0)
IP() ;Get a device IP.
"RTN","XUSTZIP",63,0)
 Q $S($D(IP):IP,$D(IO("IP")):IO("IP"),$D(IO("ZIO")):IO("ZIO"),1:"")
"RTN","XUSTZIP",64,0)
 ;
"RTN","XUSTZIP",65,0)
LKTME() ;Get lock-out time
"RTN","XUSTZIP",66,0)
 I $D(XOPT) Q $P(XOPT,U,3)
"RTN","XUSTZIP",67,0)
 Q $P(^XTV(8989.3,1,"XUS"),U,3)
"RTN","XUSTZIP",68,0)
 ;
"RTN","XUSTZIP",69,0)
LKCHECK(IP) ;Check if IP is LOCKED
"RTN","XUSTZIP",70,0)
 I '$$ON Q 0 ;Are we doing IP/device locking
"RTN","XUSTZIP",71,0)
 S IP=$$IP() Q:'$L(IP) 0
"RTN","XUSTZIP",72,0)
 N ZREC S ZREC=$$LKREC(IP)
"RTN","XUSTZIP",73,0)
 Q:'$L(ZREC) 0
"RTN","XUSTZIP",74,0)
 ;Found a LOCK record, Check time
"RTN","XUSTZIP",75,0)
 S X=$P(ZREC,"^",2)>$$NOW
"RTN","XUSTZIP",76,0)
 Q X
"RTN","XUSTZIP",77,0)
 ;
"RTN","XUSTZIP",78,0)
LKREC(IP) ;Get the Lock record
"RTN","XUSTZIP",79,0)
 N ZNUM
"RTN","XUSTZIP",80,0)
 S ZNUM=+$O(^XUSEC(3,"B",IP,0))
"RTN","XUSTZIP",81,0)
 Q $G(^XUSEC(3,ZNUM,0))
"RTN","XUSTZIP",82,0)
 ;
"RTN","XUSTZIP",83,0)
LKDEL(ZNUM) ;Delete LOCKED IP
"RTN","XUSTZIP",84,0)
 N IP,DIK,DA,ZIEN,Y
"RTN","XUSTZIP",85,0)
 S IP=$P(^XUSEC(3,ZNUM,0),"^",1)
"RTN","XUSTZIP",86,0)
 S DIK="^XUSEC(3,",DA=ZNUM D ^DIK
"RTN","XUSTZIP",87,0)
 Q
"RTN","XUSTZIP",88,0)
 ;
"RTN","XUSTZIP",89,0)
LKWAIT(%) ;How long to wait
"RTN","XUSTZIP",90,0)
 N T1,T2,IP
"RTN","XUSTZIP",91,0)
 S IP=$$IP() Q:'$L(IP) %
"RTN","XUSTZIP",92,0)
 S T1=$$LKREC(IP)
"RTN","XUSTZIP",93,0)
 Q $$FMDIFF^XLFDT($P(T1,U,2),$$NOW^XLFDT,2)
"RTN","XUSTZIP",94,0)
 ;
"RTN","XUSTZIP",95,0)
TSCHK(IP) ;Check if IP is for a TERMINAL SERVER.
"RTN","XUSTZIP",96,0)
 ;is this IP for a teriminal server.
"RTN","XUSTZIP",97,0)
 N ZNUM S ZNUM=$O(^XTV(8989.3,1,405.2,"B",IP,0))
"RTN","XUSTZIP",98,0)
 Q ZNUM
"RTN","XUSTZIP",99,0)
 ;
"RTN","XUSTZIP",100,0)
IPCHECK(IP) ;Check if IP should be LOCKED. Called from XUSTZ, and others.
"RTN","XUSTZIP",101,0)
 ;Return 1 if should lock, 0 if No.
"RTN","XUSTZIP",102,0)
 I '$$ON Q 0
"RTN","XUSTZIP",103,0)
 S IP=$$IP Q:'$L(IP) 0
"RTN","XUSTZIP",104,0)
 N LIMIT,TSIEN,ZEND,ZNUM,ZLST,SLK,TFAC,TSREC,Z10
"RTN","XUSTZIP",105,0)
 ;If the IP is locked, Don't relock. Could cause an endless lock.
"RTN","XUSTZIP",106,0)
 I $$LKCHECK(IP) Q 0
"RTN","XUSTZIP",107,0)
 ;is this the IP of a teriminal server. if not lock
"RTN","XUSTZIP",108,0)
 S TSIEN=$$TSCHK(IP) ;Returns TS ien.
"RTN","XUSTZIP",109,0)
 ;If TSIEN<1 lock the IP.
"RTN","XUSTZIP",110,0)
 Q:TSIEN<1 1
"RTN","XUSTZIP",111,0)
 ;count # of failures for this TS in last 10 minutes and compare that 
"RTN","XUSTZIP",112,0)
 ;against the established limit.  if no limit set, use 2. maybe cut
"RTN","XUSTZIP",113,0)
 ;some slack.
"RTN","XUSTZIP",114,0)
 S Z10=$$HTFM^XLFDT($$HADD^XLFDT($H,0,0,-10)) ;NOW-10
"RTN","XUSTZIP",115,0)
 S TSREC=$G(^XTV(8989.3,1,405.2,TSIEN,0)) ;Get TS record
"RTN","XUSTZIP",116,0)
 S ZLST=$P(TSREC,"^",3) ;Last reset
"RTN","XUSTZIP",117,0)
 S ZEND=$S(ZLST>Z10:ZLST,1:Z10) ;stop at last reset or NOW-10.
"RTN","XUSTZIP",118,0)
 S ZNUM="A",TFAC=0,Y=$S(IP["/":"/",1:":")
"RTN","XUSTZIP",119,0)
 F  S ZNUM=$O(^%ZUA(3.05,ZNUM),-1) Q:ZNUM'>0!(ZEND>ZNUM)  D
"RTN","XUSTZIP",120,0)
 . I $P($P(^%ZUA(3.05,ZNUM,0),"^",7),Y)=$P(IP,Y) S TFAC=TFAC+1
"RTN","XUSTZIP",121,0)
 S LIMIT=$P($G(^XTV(8989.3,1,405)),"^",6) S:'LIMIT LIMIT=2
"RTN","XUSTZIP",122,0)
 S SLK=$$SLACK(Z10) ;
"RTN","XUSTZIP",123,0)
 Q $S(SLK:TFAC>SLK,1:TFAC>LIMIT)
"RTN","XUSTZIP",124,0)
 ;
"RTN","XUSTZIP",125,0)
SLACK(TEND) ;SLACK CALCULATOR
"RTN","XUSTZIP",126,0)
 ;if this TS has been reset in last 10 minutes allow 100 tries.
"RTN","XUSTZIP",127,0)
 ;Normal hours return 0, after hours use TS Slack value
"RTN","XUSTZIP",128,0)
 N HRMIN,X,NOW,TS
"RTN","XUSTZIP",129,0)
 S X=$P(TSREC,"^",3) ;Last Reset
"RTN","XUSTZIP",130,0)
 I X>TEND Q 100 ;TEND is Now-10 min
"RTN","XUSTZIP",131,0)
 ;if now is during normal work hours 8am to 4:30 pm, cut no slack
"RTN","XUSTZIP",132,0)
 S HRMIN=$P($H,",",2)
"RTN","XUSTZIP",133,0)
 ; 8am is 28800 and 4:30 pm is 59400
"RTN","XUSTZIP",134,0)
 ; If Normal hours don't give slack unless user locking is on.
"RTN","XUSTZIP",135,0)
 I (HRMIN>28800&(HRMIN<59400)) Q $S($P($G(^XTV(8989.3,1,405)),"^",4)="y":10,1:0)
"RTN","XUSTZIP",136,0)
 ;if TS param says to cut slack, cut amount of slack set up in param.
"RTN","XUSTZIP",137,0)
 Q $S($P(TSREC,"^",2):$P(TSREC,"^",2),1:0)
"RTN","XUSTZIP",138,0)
 ;
"RTN","XUSTZIP",139,0)
ON() ;ON OR OFF
"RTN","XUSTZIP",140,0)
 Q $P($G(^XTV(8989.3,1,405)),"^",1)="y"
"RTN","XUSTZIP",141,0)
 ;
"RTN","XUSTZIP",142,0)
H3(%H) ;Make seconds
"RTN","XUSTZIP",143,0)
 S:'$G(%H) %H=$H
"RTN","XUSTZIP",144,0)
 Q %H*86400+$P(%H,",",2)
"RTN","XUSTZIP",145,0)
 ;
"RTN","XUSTZIP",146,0)
H0(%H) ;
"RTN","XUSTZIP",147,0)
 S:'$G(%H) %H=0
"RTN","XUSTZIP",148,0)
 Q (%H\86400)_","_(%H#86400)
"RTN","XUSTZIP",149,0)
 ;
"RTN","XUSTZIP",150,0)
DSPTME(%H) ;Convert seconds to display format
"RTN","XUSTZIP",151,0)
 Q $$HTE^XLFDT($$H0(%H),"1P")
"RTN","XUSTZIP",152,0)
 ;
"RTN","XUSTZIP",153,0)
WATCH ;Watch the globals
"RTN","XUSTZIP",154,0)
 N TIME,C,I,X
"RTN","XUSTZIP",155,0)
WT2 S TIME=$$HTE^XLFDT($H)
"RTN","XUSTZIP",156,0)
 W @IOF,"Failed access attempts count.   Current time: ",TIME
"RTN","XUSTZIP",157,0)
 S I=0,C=0
"RTN","XUSTZIP",158,0)
 F  S I=$O(^XUSEC(4,I)) Q:I'>0  S X=^(I,0),C=1 W !,I,?5,"IP: ",$P(X,U,1),?25,"Count: ",$P(X,U,2),?35,"Until: ",$$HTE^XLFDT($P(X,U,3))
"RTN","XUSTZIP",159,0)
 I C=0 W !,?10,"None"
"RTN","XUSTZIP",160,0)
 W !,"Locked IP's.  Current time: ",TIME
"RTN","XUSTZIP",161,0)
 S I=0,C=0
"RTN","XUSTZIP",162,0)
 F  S I=$O(^XUSEC(3,I)) Q:I'>0  S X=^(I,0),C=1 W !,I,?5,"IP: ",$P(X,U,1),?25,"Until: ",$$FMTE^XLFDT($P(X,U,2))
"RTN","XUSTZIP",163,0)
 I C=0 W !,?10,"None"
"RTN","XUSTZIP",164,0)
 R !,"Refresh: Yes// ",X:30 S:'$T X="Y" G WT2:"Yy"[$E(X)
"RTN","XUSTZIP",165,0)
 I $E(X)="?" W !,"Enter 'Yes' or return to refresh, anyother key will exit" H 2 G WT2
"RTN","XUSTZIP",166,0)
 Q
"RTN","XUVERIFY")
0^10^B7660618
"RTN","XUVERIFY",1,0)
XUVERIFY ;SF/MUS - Checks a users ACCESS and VERIFY CODES ;11/23/2004  14:43
"RTN","XUVERIFY",2,0)
 ;;8.0;KERNEL;**2,26,59,265**;Jul 10, 1995
"RTN","XUVERIFY",3,0)
 ; The variables % and %DUZ must be set before running this
"RTN","XUVERIFY",4,0)
 ; program   % - may equal "A","V" OR both "AV"
"RTN","XUVERIFY",5,0)
 ;        %DUZ - must equal the users DUZ
"RTN","XUVERIFY",6,0)
 ;
"RTN","XUVERIFY",7,0)
 ; After the program is run % will return -1,0,1,2
"RTN","XUVERIFY",8,0)
 ; if %=-1 an "^" was entered  if %=0 an "?" was entered
"RTN","XUVERIFY",9,0)
 ; if %=1 the Code typed was correct
"RTN","XUVERIFY",10,0)
 ; if %=2 the Code was typed incorrectly
"RTN","XUVERIFY",11,0)
 ; IA# 10051
"RTN","XUVERIFY",12,0)
 N %AC,%VC,%R,I,X,Y,Z,XUSTMP D DIALOG
"RTN","XUVERIFY",13,0)
 I '$D(%)!'$D(%DUZ) S %=2 G KIL
"RTN","XUVERIFY",14,0)
 I '$D(^VA(200,%DUZ,0)) S %=2 G KIL
"RTN","XUVERIFY",15,0)
 G:%["A"!(%["V") CHECK S %=2 G KIL
"RTN","XUVERIFY",16,0)
CHECK S %R=$S(%="V":"VER",1:"ACC") D @%R
"RTN","XUVERIFY",17,0)
 I X["^" S %=-1
"RTN","XUVERIFY",18,0)
 I X?1.4"?" S %=0
"RTN","XUVERIFY",19,0)
KIL X ^%ZOSF("EON") K X,Y,Z,%AC,%VC,%R,I
"RTN","XUVERIFY",20,0)
 Q
"RTN","XUVERIFY",21,0)
ACC ;Access code
"RTN","XUVERIFY",22,0)
 X ^%ZOSF("EOFF") W !,XUSTMP(51) S X=$$ACCEPT^XUS Q:X["^"!(X?1.4"?")  D LC^XUS:X?.E1L.E,^XUSHSH S %AC=X
"RTN","XUVERIFY",23,0)
 I %AC'=$P(^VA(200,%DUZ,0),"^",3) S %AC=2 D:%["V" VER S %=%AC Q
"RTN","XUVERIFY",24,0)
 S %AC=1 D:%["V" VER S:%'=2 %=%AC
"RTN","XUVERIFY",25,0)
 Q
"RTN","XUVERIFY",26,0)
 ;
"RTN","XUVERIFY",27,0)
VER ;Verify code
"RTN","XUVERIFY",28,0)
 X ^%ZOSF("EOFF") W !,XUSTMP(52) S X=$$ACCEPT^XUS Q:X["^"!(X?1.4"?")  D LC^XUS:X?.E1L.E,^XUSHSH S %VC=X
"RTN","XUVERIFY",29,0)
 I %VC'=$P(^VA(200,%DUZ,.1),"^",2) S %=2 Q
"RTN","XUVERIFY",30,0)
 S %=1
"RTN","XUVERIFY",31,0)
 Q
"RTN","XUVERIFY",32,0)
 ;
"RTN","XUVERIFY",33,0)
XUS2 ;MOVED FROM XUS2, TO CHECK OR RETURN USER ATTRIBUTES
"RTN","XUVERIFY",34,0)
 S:$D(XUS)[0 XUS="" D USER:XUS["A",USER:$D(DUZ)[0,EDIT:XUS["E"
"RTN","XUVERIFY",35,0)
 K XUS
"RTN","XUVERIFY",36,0)
 Q
"RTN","XUVERIFY",37,0)
 ;
"RTN","XUVERIFY",38,0)
USER ;ASK FOR USER ID, RETURN DUZ
"RTN","XUVERIFY",39,0)
 N IEN,X2,XUF,XUFAC,XUSTMP S U="^" D DIALOG
"RTN","XUVERIFY",40,0)
 S DUZ=0,DUZ(0)="",DUZ(1)="",XUF=0
"RTN","XUVERIFY",41,0)
 X ^%ZOSF("EOFF") S X2=$$ASKAV^XUS
"RTN","XUVERIFY",42,0)
 S IEN=$$CHKAV(X2)
"RTN","XUVERIFY",43,0)
 I IEN>0 D DUZ^XUP(IEN)
"RTN","XUVERIFY",44,0)
 X ^%ZOSF("EON")
"RTN","XUVERIFY",45,0)
 D CHK^XM:DUZ
"RTN","XUVERIFY",46,0)
 Q
"RTN","XUVERIFY",47,0)
 ;
"RTN","XUVERIFY",48,0)
EDIT ;
"RTN","XUVERIFY",49,0)
 N XUC,DIE,DUZX,DR,D0,DA,DI,DIC,DQ
"RTN","XUVERIFY",50,0)
 S XUC="",DIE="^VA(200,",DA=$S($D(DUZX):DUZX,1:DUZ) D AUTO^XUS2:XUS["G"
"RTN","XUVERIFY",51,0)
 S DR=".01;2"_$S(XUS["M"&$L(XUC):"///"_XUC,1:"")_";11"_$S(XUS["M":";1;3:9;12:20;200:201",1:";1;13")
"RTN","XUVERIFY",52,0)
 D ^DIE
"RTN","XUVERIFY",53,0)
 Q
"RTN","XUVERIFY",54,0)
 ;
"RTN","XUVERIFY",55,0)
CHKAV(AVCODE) ;EF. IA# 10051
"RTN","XUVERIFY",56,0)
 ;Return IEN of the AVcode if good.
"RTN","XUVERIFY",57,0)
 N XUTT,XUF,XUSER,IEN,DUZ
"RTN","XUVERIFY",58,0)
 S XUF=0,DUZ=$$CHECKAV^XUS(AVCODE)
"RTN","XUVERIFY",59,0)
 I DUZ>0,$$UVALID^XUS()>0 S DUZ=0
"RTN","XUVERIFY",60,0)
 Q DUZ
"RTN","XUVERIFY",61,0)
 ;
"RTN","XUVERIFY",62,0)
WITNESS(PREFIX,KEYS) ;EF. IA# 1513
"RTN","XUVERIFY",63,0)
 ;Return IEN of a person if they have A/V & KEYs.
"RTN","XUVERIFY",64,0)
 ; '^' out = -1, Fail = 0, OK IEN
"RTN","XUVERIFY",65,0)
 N X2,IEN,CNT,EXIT,XUSTMP D DIALOG
"RTN","XUVERIFY",66,0)
 S U="^",EXIT=0,IEN=0,CNT=$P(^XTV(8989.3,1,"XUS"),U,2) ;# attemps
"RTN","XUVERIFY",67,0)
 X ^%ZOSF("EOFF")
"RTN","XUVERIFY",68,0)
 I $D(PREFIX) S:" "'[$E(PREFIX,$L(PREFIX)) PREFIX=PREFIX_" "
"RTN","XUVERIFY",69,0)
 F CNT=1:1:CNT D  Q:EXIT
"RTN","XUVERIFY",70,0)
 . S X2=$$ASKAV^XUS($G(PREFIX))
"RTN","XUVERIFY",71,0)
 . S IEN=$$CHKAV(X2),EXIT=(IEN>0) S:IEN<0 EXIT=1
"RTN","XUVERIFY",72,0)
 . I IEN>0,$L($G(KEYS)) S EXIT=0 F %=1:1 S X=$P(KEYS,"^",%) Q:X=""  S:$D(^XUSEC(X,IEN)) EXIT=1
"RTN","XUVERIFY",73,0)
 . Q
"RTN","XUVERIFY",74,0)
 X ^%ZOSF("EON")
"RTN","XUVERIFY",75,0)
 Q:'EXIT 0 Q IEN
"RTN","XUVERIFY",76,0)
 ;
"RTN","XUVERIFY",77,0)
DIALOG ;Set up the dialog
"RTN","XUVERIFY",78,0)
 S XUSTMP(51)=$$EZBLD^DIALOG(30810.51),XUSTMP(52)=$$EZBLD^DIALOG(30810.52)
"SEC","^DIC",3.083,3.083,0,"AUDIT")
@
"SEC","^DIC",3.083,3.083,0,"DD")
@
"SEC","^DIC",3.083,3.083,0,"DEL")
@
"SEC","^DIC",3.083,3.083,0,"LAYGO")
@
"SEC","^DIC",3.083,3.083,0,"RD")
@
"SEC","^DIC",3.083,3.083,0,"WR")
#
"SEC","^DIC",3.084,3.084,0,"AUDIT")
@
"SEC","^DIC",3.084,3.084,0,"DD")
@
"SEC","^DIC",3.084,3.084,0,"DEL")
@
"SEC","^DIC",3.084,3.084,0,"LAYGO")
@
"SEC","^DIC",3.084,3.084,0,"RD")
@
"SEC","^DIC",3.084,3.084,0,"WR")
#
"UP",8989.3,8989.305,-1)
8989.3^405.2
"UP",8989.3,8989.305,0)
8989.305
"VER")
8.0^22.0
"^DD",3.083,3.083,0)
FIELD^^2^2
"^DD",3.083,3.083,0,"DDA")
N
"^DD",3.083,3.083,0,"DT")
3030306
"^DD",3.083,3.083,0,"IX","B",3.083,.01)

"^DD",3.083,3.083,0,"NM","LOCKED IP or DEVICE")

"^DD",3.083,3.083,0,"VRPK")
XU
"^DD",3.083,3.083,.01,0)
LOCKED IP/DEVICE^RF^^0;1^K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
"^DD",3.083,3.083,.01,1,0)
^.1
"^DD",3.083,3.083,.01,1,1,0)
3.083^B
"^DD",3.083,3.083,.01,1,1,1)
S ^XUSEC(3,"B",$E(X,1,30),DA)=""
"^DD",3.083,3.083,.01,1,1,2)
K ^XUSEC(3,"B",$E(X,1,30),DA)
"^DD",3.083,3.083,.01,3)
Answer must be 3-40 characters in length.
"^DD",3.083,3.083,.01,21,0)
^^2^2^3030306^
"^DD",3.083,3.083,.01,21,1,0)
This field holds a list of IP's or Device ID's that have been locked.
"^DD",3.083,3.083,.01,21,2,0)
These are cleaned up automatically.
"^DD",3.083,3.083,.01,"DT")
3030306
"^DD",3.083,3.083,2,0)
LOCKED UNTIL^RD^^0;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",3.083,3.083,2,21,0)
^^2^2^3030306^
"^DD",3.083,3.083,2,21,1,0)
This field holds the fileman date/time that this IP should be locked 
"^DD",3.083,3.083,2,21,2,0)
until.
"^DD",3.083,3.083,2,"DT")
3030306
"^DD",3.084,3.084,0)
FIELD^^3^3
"^DD",3.084,3.084,0,"DDA")
N
"^DD",3.084,3.084,0,"DT")
3030715
"^DD",3.084,3.084,0,"IX","B",3.084,.01)

"^DD",3.084,3.084,0,"NM","FAILED SIGNON ATTEMPTS")

"^DD",3.084,3.084,0,"VRPK")
XU
"^DD",3.084,3.084,.01,0)
IP or DEVICE^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",3.084,3.084,.01,1,0)
^.1
"^DD",3.084,3.084,.01,1,1,0)
3.084^B
"^DD",3.084,3.084,.01,1,1,1)
S ^XUSEC(4,"B",$E(X,1,30),DA)=""
"^DD",3.084,3.084,.01,1,1,2)
K ^XUSEC(4,"B",$E(X,1,30),DA)
"^DD",3.084,3.084,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",3.084,3.084,2,0)
ATTEMPT COUNT^NJ2,0^^0;2^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",3.084,3.084,2,3)
Type a Number between 0 and 99, 0 Decimal Digits
"^DD",3.084,3.084,2,21,0)
^^2^2^3030714^
"^DD",3.084,3.084,2,21,1,0)
This field keeps track of the count of failed signon attempts from a
"^DD",3.084,3.084,2,21,2,0)
given device or IP address.
"^DD",3.084,3.084,2,"DT")
3030714
"^DD",3.084,3.084,3,0)
HOROLOG OF LAST UPDATE^F^^0;3^K:$L(X)>12!($L(X)<4) X
"^DD",3.084,3.084,3,3)
Answer with current $H value.
"^DD",3.084,3.084,3,21,0)
^^2^2^3030715^
"^DD",3.084,3.084,3,21,1,0)
This field holds the $H value of the last time this record was updated so 
"^DD",3.084,3.084,3,21,2,0)
we can know when to clear it out.
"^DD",3.084,3.084,3,"DT")
3030715
"^DD",200,200,202.05,0)
LOCKOUT USER UNTIL^D^^1.1;5^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",200,200,202.05,21,0)
^^4^4^3040121^
"^DD",200,200,202.05,21,1,0)
This field is used by the signon code to lockout users that have
"^DD",200,200,202.05,21,2,0)
tried bad VERIFY codes too many times.  This field holds the date/time 
"^DD",200,200,202.05,21,3,0)
that the user should be locked out of the system until.
"^DD",200,200,202.05,21,4,0)
It is set with the current time plus the lockout time.
"^DD",200,200,202.05,"DT")
3040121
"^DD",8989.3,8989.3,.02,0)
IRM MAIL GROUP^RF^^0;2^K:$L(X)>50!($L(X)<3)!'(X?1"G.".E) X
"^DD",8989.3,8989.3,.02,3)
Answer with the G.MAIL GROUP for system problems.
"^DD",8989.3,8989.3,.02,21,0)
^^2^2^3030219^
"^DD",8989.3,8989.3,.02,21,1,0)
This field holds the name of the Mail Group that should get messages or 
"^DD",8989.3,8989.3,.02,21,2,0)
bulletns about problems on the system.
"^DD",8989.3,8989.3,.02,"DT")
3030219
"^DD",8989.3,8989.3,.03,0)
AFTER HOURS MAIL GROUP^F^^0;3^K:$L(X)>50!($L(X)<3)!'(X?1"G.".E) X
"^DD",8989.3,8989.3,.03,3)
Answer with the AFTER HOURS mail group for system problems.
"^DD",8989.3,8989.3,.03,21,0)
^^2^2^3030219^
"^DD",8989.3,8989.3,.03,21,1,0)
This field holds the name of a mail group that should get messages and 
"^DD",8989.3,8989.3,.03,21,2,0)
bulletins after hours or on weekends and holidays.
"^DD",8989.3,8989.3,.03,"DT")
3030219
"^DD",8989.3,8989.3,405.1,0)
IP SECURITY ON^S^n:No;y:Yes;^405;1^Q
"^DD",8989.3,8989.3,405.1,21,0)
^^2^2^3021028^
"^DD",8989.3,8989.3,405.1,21,1,0)
This field turns on or off the IP security "Three strikes and you are 
"^DD",8989.3,8989.3,405.1,21,2,0)
out" code.
"^DD",8989.3,8989.3,405.1,"DT")
3030728
"^DD",8989.3,8989.3,405.12,0)
FAILED ATTEMPTS LIMIT - IRM^NJ4,0^^405;2^K:+X'=X!(X>1000)!(X<1)!(X?.E1"."1N.N) X
"^DD",8989.3,8989.3,405.12,3)
Type a Number between 1 and 1000, 0 Decimal Digits
"^DD",8989.3,8989.3,405.12,21,0)
^^4^4^3040324^
"^DD",8989.3,8989.3,405.12,21,1,0)
This field holds the value of how many Failed Attempts must be counted by 
"^DD",8989.3,8989.3,405.12,21,2,0)
the XUSFACHK routine before a message is sent to the IRM during normal
"^DD",8989.3,8989.3,405.12,21,3,0)
business hours (8:00 am to 4:30 pm).  This can be change by the value in 
"^DD",8989.3,8989.3,405.12,21,4,0)
the TOTAL COUNT INCREASE field.
"^DD",8989.3,8989.3,405.12,"DT")
3040324
"^DD",8989.3,8989.3,405.13,0)
FAILED ATTEMPTS LIMIT - AOD^NJ4,0^^405;3^K:+X'=X!(X>1000)!(X<1)!(X?.E1"."1.N) X
"^DD",8989.3,8989.3,405.13,3)
Type a number between 1 and 1000, 0 Decimal Digits
"^DD",8989.3,8989.3,405.13,21,0)
^^4^4^3040324^
"^DD",8989.3,8989.3,405.13,21,1,0)
This field holds the value of how many Failed Attempts must be counted by 
"^DD",8989.3,8989.3,405.13,21,2,0)
the XUSFACHK routine before a message is sent to the AOD during after
"^DD",8989.3,8989.3,405.13,21,3,0)
hours (4:30 pm to 8:00 am).  This can be changed by the value in the 
"^DD",8989.3,8989.3,405.13,21,4,0)
TOTAL COUNT INCREASE field.
"^DD",8989.3,8989.3,405.13,"DT")
3040324
"^DD",8989.3,8989.3,405.14,0)
USER LOCKING^S^n:No;y:Yes;^405;4^Q
"^DD",8989.3,8989.3,405.14,21,0)
^^4^4^3021119^
"^DD",8989.3,8989.3,405.14,21,1,0)
This field controls if Users are locked out of the system because
"^DD",8989.3,8989.3,405.14,21,2,0)
of exceeding the limit on bad attempts.
"^DD",8989.3,8989.3,405.14,21,3,0)
The ACCESS code must be correct so we can identify the user, and it is
"^DD",8989.3,8989.3,405.14,21,4,0)
just the VERIFY code that is being entered wrong.
"^DD",8989.3,8989.3,405.14,"DT")
3021119
"^DD",8989.3,8989.3,405.15,0)
LAST RUN FAILED ATTEMPTS CHECK^D^^405;5^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",8989.3,8989.3,405.15,3)
(No range limit on date)
"^DD",8989.3,8989.3,405.15,21,0)
^^3^3^3030219^
"^DD",8989.3,8989.3,405.15,21,1,0)
This field holds the date time of the last run of the FAILED ATTEMPTS 
"^DD",8989.3,8989.3,405.15,21,2,0)
checking routine (XUSFACHK).
"^DD",8989.3,8989.3,405.15,21,3,0)
This field is filled in by the routine and doesn't need user entry.
"^DD",8989.3,8989.3,405.15,"DT")
3030219
"^DD",8989.3,8989.3,405.16,0)
DEFAULT TS SLACK^NJ2,0^^405;6^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1.N) X
"^DD",8989.3,8989.3,405.16,3)
Type a number between 0 and 99, 0 Decimal Digits
"^DD",8989.3,8989.3,405.16,21,0)
^^4^4^3040324^
"^DD",8989.3,8989.3,405.16,21,1,0)
This field holds a default value for how many times in 10 minutes a
"^DD",8989.3,8989.3,405.16,21,2,0)
Terminal Server can have a sign-on failure (entries in the FAILED ACCESS
"^DD",8989.3,8989.3,405.16,21,3,0)
ATTEMPTS LOG) before it is locked.  A default value is 2 is used if no 
"^DD",8989.3,8989.3,405.16,21,4,0)
value is entered.
"^DD",8989.3,8989.3,405.16,"DT")
3040324
"^DD",8989.3,8989.3,405.17,0)
KEEP THRESHOLD^NJ4,0^^405;7^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",8989.3,8989.3,405.17,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",8989.3,8989.3,405.17,21,0)
^^7^7^3031015^
"^DD",8989.3,8989.3,405.17,21,1,0)
This field holds the number of Failed Access Attempts in the current 
"^DD",8989.3,8989.3,405.17,21,2,0)
sample period that will cause the count to be saved for the next sample 
"^DD",8989.3,8989.3,405.17,21,3,0)
period.  This is used by the routine XUSFACHK and the value will need to 
"^DD",8989.3,8989.3,405.17,21,4,0)
be smaller for a more frequent running and larger for less frequent 
"^DD",8989.3,8989.3,405.17,21,5,0)
running. 
"^DD",8989.3,8989.3,405.17,21,6,0)
A starting value could be 10 if XUSFACHK is scheduled to run every 30 
"^DD",8989.3,8989.3,405.17,21,7,0)
minutes.
"^DD",8989.3,8989.3,405.17,"DT")
3031015
"^DD",8989.3,8989.3,405.18,0)
TOTAL COUNT INCREASE^NJ4,0^^405;8^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",8989.3,8989.3,405.18,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",8989.3,8989.3,405.18,21,0)
^^4^4^3031015^
"^DD",8989.3,8989.3,405.18,21,1,0)
This field holds the value to be added to the IRM or AOD limits.
"^DD",8989.3,8989.3,405.18,21,2,0)
If the total number of Failed Access Attempts in the sample period
"^DD",8989.3,8989.3,405.18,21,3,0)
is greater than the IRM (or AOD) limit plus the TOTAL COUNT INCREASE 
"^DD",8989.3,8989.3,405.18,21,4,0)
then it will trigger the sending of the failed attempts message.
"^DD",8989.3,8989.3,405.18,"DT")
3031015
"^DD",8989.3,8989.3,405.2,0)
TERMINAL SERVER IP^8989.305^^405.2;0
"^DD",8989.3,8989.305,0)
TERMINAL SERVER IP SUB-FIELD^^2^3
"^DD",8989.3,8989.305,0,"DT")
3040324
"^DD",8989.3,8989.305,0,"IX","B",8989.305,.01)

"^DD",8989.3,8989.305,0,"NM","TERMINAL SERVER IP")

"^DD",8989.3,8989.305,0,"UP")
8989.3
"^DD",8989.3,8989.305,.01,0)
TERMINAL SERVER IP^MF^^0;1^K:$L(X)>40!($L(X)<7) X
"^DD",8989.3,8989.305,.01,1,0)
^.1
"^DD",8989.3,8989.305,.01,1,1,0)
8989.305^B
"^DD",8989.3,8989.305,.01,1,1,1)
S ^XTV(8989.3,DA(1),405.2,"B",$E(X,1,30),DA)=""
"^DD",8989.3,8989.305,.01,1,1,2)
K ^XTV(8989.3,DA(1),405.2,"B",$E(X,1,30),DA)
"^DD",8989.3,8989.305,.01,3)
Answer must be 7-40 characters in length.
"^DD",8989.3,8989.305,.01,21,0)
^^2^2^3021028^
"^DD",8989.3,8989.305,.01,21,1,0)
This field holds the IP addresses of Terminal servers that should get 
"^DD",8989.3,8989.305,.01,21,2,0)
special treatment from the IP security software.
"^DD",8989.3,8989.305,.01,"DT")
3021028
"^DD",8989.3,8989.305,1,0)
AFTER HOURS SLACK^NJ3,0^^0;2^K:+X'=X!(X>300)!(X<0)!(X?.E1"."1.N) X
"^DD",8989.3,8989.305,1,.1)
Slack
"^DD",8989.3,8989.305,1,3)
Type a number between 0 and 300, 0 Decimal Digits
"^DD",8989.3,8989.305,1,21,0)
^^5^5^3040324^
"^DD",8989.3,8989.305,1,21,1,0)
This field holds the after hours slack value use to delay locking the
"^DD",8989.3,8989.305,1,21,2,0)
Terminal Server address.
"^DD",8989.3,8989.305,1,21,3,0)
Between the hours of 4:30 pm and 8:00 am, If the FAILED ACCESS ATTEMPTS
"^DD",8989.3,8989.305,1,21,4,0)
LOG has had more entries from this Terminal Server in the last 10 minutes
"^DD",8989.3,8989.305,1,21,5,0)
than the slack value the TS IP address will be locked.
"^DD",8989.3,8989.305,1,"DT")
3040324
"^DD",8989.3,8989.305,2,0)
LAST TIME RESET^D^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",8989.3,8989.305,2,21,0)
^^2^2^3021114^
"^DD",8989.3,8989.305,2,21,1,0)
This field holds the FileMan date time that the LOCK on this Terminal
"^DD",8989.3,8989.305,2,21,2,0)
Server was last cleared.
"^DD",8989.3,8989.305,2,"DT")
3021114
"^DIC",3.083,3.083,0)
LOCKED IP or DEVICE^3.083
"^DIC",3.083,3.083,0,"GL")
^XUSEC(3,
"^DIC",3.083,3.083,"%",0)
^1.005^^0
"^DIC",3.083,3.083,"%D",0)
^^5^5^3030721^
"^DIC",3.083,3.083,"%D",1,0)
This file holds the IP address or domain name of a system that has failed 
"^DIC",3.083,3.083,"%D",2,0)
to successfully signon with in the limits imposed.
"^DIC",3.083,3.083,"%D",3,0)
 
"^DIC",3.083,3.083,"%D",4,0)
Once the lock out time has passed the record is removed, so it would be 
"^DIC",3.083,3.083,"%D",5,0)
normal for this file to have no records most of the time.
"^DIC",3.083,"B","LOCKED IP or DEVICE",3.083)

"^DIC",3.084,3.084,0)
FAILED SIGNON ATTEMPTS^3.084
"^DIC",3.084,3.084,0,"GL")
^XUSEC(4,
"^DIC",3.084,3.084,"%",0)
^1.005^^0
"^DIC",3.084,3.084,"%D",0)
^^5^5^3040121^
"^DIC",3.084,3.084,"%D",1,0)
This file holds the count of signon attempts from a IP address or domain.
"^DIC",3.084,3.084,"%D",2,0)
This is to prevent a user from disconnecting after each try.
"^DIC",3.084,3.084,"%D",3,0)
 
"^DIC",3.084,3.084,"%D",4,0)
Once a signon is successful the record is removed, so it would be normal
"^DIC",3.084,3.084,"%D",5,0)
for this file to have no records most of the time.
"^DIC",3.084,"B","FAILED SIGNON ATTEMPTS",3.084)

"BLD",626,6)
^320
**END**
**END**
