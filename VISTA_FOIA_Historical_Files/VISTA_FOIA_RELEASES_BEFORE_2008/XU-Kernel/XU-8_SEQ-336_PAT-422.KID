EMERGENCY Released XU*8*422 SEQ #336
Extracted from mail message
**KIDS**:XU*8.0*422^

**INSTALL NAME**
XU*8.0*422
"BLD",942,0)
XU*8.0*422^KERNEL^0^3060517^y
"BLD",942,4,0)
^9.64PA^^
"BLD",942,6.3)
2
"BLD",942,"KRN",0)
^9.67PA^8989.52^19
"BLD",942,"KRN",.4,0)
.4
"BLD",942,"KRN",.401,0)
.401
"BLD",942,"KRN",.402,0)
.402
"BLD",942,"KRN",.403,0)
.403
"BLD",942,"KRN",.5,0)
.5
"BLD",942,"KRN",.84,0)
.84
"BLD",942,"KRN",3.6,0)
3.6
"BLD",942,"KRN",3.8,0)
3.8
"BLD",942,"KRN",9.2,0)
9.2
"BLD",942,"KRN",9.8,0)
9.8
"BLD",942,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",942,"KRN",9.8,"NM",1,0)
XPDIL^^0^B31030331
"BLD",942,"KRN",9.8,"NM",2,0)
XPDIGP^^0^B13701700
"BLD",942,"KRN",9.8,"NM","B","XPDIGP",2)

"BLD",942,"KRN",9.8,"NM","B","XPDIL",1)

"BLD",942,"KRN",19,0)
19
"BLD",942,"KRN",19.1,0)
19.1
"BLD",942,"KRN",101,0)
101
"BLD",942,"KRN",409.61,0)
409.61
"BLD",942,"KRN",771,0)
771
"BLD",942,"KRN",870,0)
870
"BLD",942,"KRN",8989.51,0)
8989.51
"BLD",942,"KRN",8989.52,0)
8989.52
"BLD",942,"KRN",8994,0)
8994
"BLD",942,"KRN","B",.4,.4)

"BLD",942,"KRN","B",.401,.401)

"BLD",942,"KRN","B",.402,.402)

"BLD",942,"KRN","B",.403,.403)

"BLD",942,"KRN","B",.5,.5)

"BLD",942,"KRN","B",.84,.84)

"BLD",942,"KRN","B",3.6,3.6)

"BLD",942,"KRN","B",3.8,3.8)

"BLD",942,"KRN","B",9.2,9.2)

"BLD",942,"KRN","B",9.8,9.8)

"BLD",942,"KRN","B",19,19)

"BLD",942,"KRN","B",19.1,19.1)

"BLD",942,"KRN","B",101,101)

"BLD",942,"KRN","B",409.61,409.61)

"BLD",942,"KRN","B",771,771)

"BLD",942,"KRN","B",870,870)

"BLD",942,"KRN","B",8989.51,8989.51)

"BLD",942,"KRN","B",8989.52,8989.52)

"BLD",942,"KRN","B",8994,8994)

"MBREQ")
0
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3051215^2970507^.5
"PKG",3,22,1,"PAH",1,0)
422^3060517
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","XPDIGP")
0^2^B13701700^B13685094
"RTN","XPDIGP",1,0)
XPDIGP ;SFISC/RSD - load Global Distribution ;05/17/2006
"RTN","XPDIGP",2,0)
 ;;8.0;KERNEL;**41,422**;Jul 10, 1995;Build 2
"RTN","XPDIGP",3,0)
 ;XPDT is undefine if PKG^XPDIL1 aborted, need to close device
"RTN","XPDIGP",4,0)
 I '$D(XPDT) D ^%ZISC Q
"RTN","XPDIGP",5,0)
 N %,XPD,XPDIST,XPDBLD,XPDNM
"RTN","XPDIGP",6,0)
 S XPDA=+XPDT(1),XPDNM=$P(XPDT(1),U,2),XPDBLD=$O(^XTMP("XPDI",XPDA,"BLD",0))
"RTN","XPDIGP",7,0)
 ;update Install file, read in the other globals, close device
"RTN","XPDIGP",8,0)
 D XPCK,GPI:'$G(XPDQUIT),^%ZISC
"RTN","XPDIGP",9,0)
 I $G(XPDQUIT) D ABRTALL^XPDI(1) Q
"RTN","XPDIGP",10,0)
 ;run post install routine
"RTN","XPDIGP",11,0)
 S XPD=$$INRTN^XPDIL1("INIT") I XPD]"" D
"RTN","XPDIGP",12,0)
 .;% = routine name only, remove tag
"RTN","XPDIGP",13,0)
 .S %=$P(XPD,U,$L(XPD,U)) Q:'$D(^XTMP("XPDI",XPDA,"RTN",%))
"RTN","XPDIGP",14,0)
 .W ! D SAVE^XPDIJ(%),BMES^XPDUTL(" Running Post Install routine "_XPD),@XPD
"RTN","XPDIGP",15,0)
 .;update Package file
"RTN","XPDIGP",16,0)
 ;XPDIST is flag for site tracking, it is set in PKG^XPDIP
"RTN","XPDIGP",17,0)
 S XPDIST=0 D BMES^XPDUTL(" Updating KIDS files... "),PKG^XPDIP
"RTN","XPDIGP",18,0)
 ;sends site tracking bulletin
"RTN","XPDIGP",19,0)
 I XPDIST S %=$$EN^XPDIST(XPDA) D BMES^XPDUTL(" "_$P("NO ",U,'%)_"Install Message sent to FORUM ")
"RTN","XPDIGP",20,0)
 W !! D BMES^XPDUTL(" "_XPDNM_" Installed."),STMP^XPDIJ1(17) W !!
"RTN","XPDIGP",21,0)
 K ^XTMP("XPDI",XPDA),XPD
"RTN","XPDIGP",22,0)
 ;update the status field
"RTN","XPDIGP",23,0)
 S XPD(9.7,XPDA_",",.02)=3 D FILE^DIE("","XPD")
"RTN","XPDIGP",24,0)
 Q
"RTN","XPDIGP",25,0)
DISP ;display the contents
"RTN","XPDIGP",26,0)
 N X,Y,Z
"RTN","XPDIGP",27,0)
 W !,"This is a Global Distribution. It contains Global(s) that will",!,"update your system at this time. The following Global(s) will be installed:",!!
"RTN","XPDIGP",28,0)
 F Y=1:1 S X=$P(XPDGP,"^",Y) Q:X=""  D
"RTN","XPDIGP",29,0)
 .S Z=+$P(X,";"),X=$P(X,";",2),XPDT("GP",X)=Z_U_Y
"RTN","XPDIGP",30,0)
 .W "^"_X,?12,$P("Overwrite^Replace",U,Z+1),!
"RTN","XPDIGP",31,0)
 .;if unsubscripted global and replacing
"RTN","XPDIGP",32,0)
 .W:X'["("&Z "**WARNING - Global will be KILLED before install,",!,"Check global protection on ALL systems before continuing.",!
"RTN","XPDIGP",33,0)
 W !,"If you continue with the Load, the Global(s) will be",!,"Installed at this time.",!
"RTN","XPDIGP",34,0)
 Q
"RTN","XPDIGP",35,0)
GPI ;global package input
"RTN","XPDIGP",36,0)
 N DIRUT,GP,GR,X,XPDSEQ,Y,Z
"RTN","XPDIGP",37,0)
 ;start reading the HFS again,  rwf, changed all read timeout from 0 to 1.
"RTN","XPDIGP",38,0)
 U IO R X:10,Y:10
"RTN","XPDIGP",39,0)
 ;the next read must be the GLOBAL
"RTN","XPDIGP",40,0)
 I X'="**GLOBAL**" U IO(0) W !!,"ERROR in HFS file format!" S XPDQUIT=1 Q
"RTN","XPDIGP",41,0)
 U IO(0) D BMES^XPDUTL(" "_Y) U IO
"RTN","XPDIGP",42,0)
 ;XPDSEQ is the disk sequence number
"RTN","XPDIGP",43,0)
 S GP=$P(Y,U,2),GR=$S(Y[")":$E(Y,1,$L(Y)-1)_",",1:Y_"("),XPDSEQ=1
"RTN","XPDIGP",44,0)
 K:XPDT("GP",GP) @Y
"RTN","XPDIGP",45,0)
 ;X=global ref, Y=global value. DIRUT is when user is prompted for
"RTN","XPDIGP",46,0)
 ;next disk in NEXTD and they abort
"RTN","XPDIGP",47,0)
 F  R X:10,Y:10 Q:X="**END**"  D  I $D(DIRUT) S XPDQUIT=1 Q
"RTN","XPDIGP",48,0)
 .;new global
"RTN","XPDIGP",49,0)
 .I X="**GLOBAL**" D  Q
"RTN","XPDIGP",50,0)
 ..;completes last global check point
"RTN","XPDIGP",51,0)
 ..D XPCOM(GP,Y)
"RTN","XPDIGP",52,0)
 ..;reset global ref
"RTN","XPDIGP",53,0)
 ..S GP=$P(Y,U,2),GR=$S(Y[")":$E(Y,1,$L(Y)-1)_",",1:Y_"(")
"RTN","XPDIGP",54,0)
 ..;kill global if flag is set
"RTN","XPDIGP",55,0)
 ..K:XPDT("GP",GP) @Y
"RTN","XPDIGP",56,0)
 .I X="**CONTINUE**" D NEXTD^XPDIL Q
"RTN","XPDIGP",57,0)
 .S @(GR_X)=Y
"RTN","XPDIGP",58,0)
 D XPCOM(GP)
"RTN","XPDIGP",59,0)
 U IO(0)
"RTN","XPDIGP",60,0)
 Q
"RTN","XPDIGP",61,0)
 ;
"RTN","XPDIGP",62,0)
 ;create Global multiple of Install file
"RTN","XPDIGP",63,0)
XPCK N DIR,DIRUT,X,XPD,XPDJ,X,Y,Z
"RTN","XPDIGP",64,0)
 S DIR(0)="Y",DIR("A")="Globals will now be installed, OK",DIR("B")="YES",DIR("?")="YES will continue with install, NO will abort install"
"RTN","XPDIGP",65,0)
 W ! D ^DIR I $D(DIRUT)!'Y S XPDQUIT=1 Q
"RTN","XPDIGP",66,0)
 W ! D BMES^XPDUTL(" Install Started for "_XPDNM_" : "),STMP^XPDIJ1(11),BMES^XPDUTL(" Installing Globals:")
"RTN","XPDIGP",67,0)
 S X=""
"RTN","XPDIGP",68,0)
 F  S X=$O(XPDT("GP",X)) Q:X=""  S Z=$P(XPDT("GP",X),U,2),XPD(9.718,"+"_Z_","_XPDA_",",.01)=X,XPDJ(Z)=Z
"RTN","XPDIGP",69,0)
 D:$D(XPD)>9 UPDATE^DIE("S","XPD","XPDJ")
"RTN","XPDIGP",70,0)
 Q
"RTN","XPDIGP",71,0)
 ;
"RTN","XPDIGP",72,0)
XPCOM(X,XPDN) ;complete checkpoint for global X,XPDN=next global
"RTN","XPDIGP",73,0)
 N GR,GP,XPD,Y,Z
"RTN","XPDIGP",74,0)
 U IO(0)
"RTN","XPDIGP",75,0)
 S Y=$$NOW^XLFDT,Z=+$P(XPDT("GP",X),U,2),XPD(9.718,Z_","_XPDA_",",1)=Y
"RTN","XPDIGP",76,0)
 D MES^XPDUTL("               "_$$FMTE^XLFDT(Y)),FILE^DIE("","XPD")
"RTN","XPDIGP",77,0)
 D:$L($G(XPDN)) BMES^XPDUTL(" "_XPDN)
"RTN","XPDIGP",78,0)
 U IO
"RTN","XPDIGP",79,0)
 Q
"RTN","XPDIL")
0^1^B31030331^B27164320
"RTN","XPDIL",1,0)
XPDIL ;SFISC/RSD - load Distribution Global ;05/17/2006
"RTN","XPDIL",2,0)
 ;;8.0;KERNEL;**15,44,58,68,108,422**;Jul 10, 1995;Build 2
"RTN","XPDIL",3,0)
 ;This routine has the changes made for patch 345 but was released as 422 to fix a read HFS problem
"RTN","XPDIL",4,0)
 ;
"RTN","XPDIL",5,0)
EN1 N POP,XPDA,XPDST,XPDIT,XPDT,XPDGP,XPDQUIT,XPDREQAB,XPDSKPE
"RTN","XPDIL",6,0)
 S:'$D(DT) DT=$$DT^XLFDT S:'$D(U) U="^"
"RTN","XPDIL",7,0)
 S XPDST=0
"RTN","XPDIL",8,0)
 D ST I $G(XPDQUIT) D ABRTALL^XPDI(1) G NONE
"RTN","XPDIL",9,0)
 ;XPDST= starting Build
"RTN","XPDIL",10,0)
 ;XPDT("DA",ien)=seq # to install
"RTN","XPDIL",11,0)
 ;XPDT("NM",build name)=seq #
"RTN","XPDIL",12,0)
 ;XPDT(seq #)=ien^Build name
"RTN","XPDIL",13,0)
 ;XPDT("GP",global)= 1-replace, 0-overwrite^ien
"RTN","XPDIL",14,0)
 ;XPDGP=globals from a Global Package
"RTN","XPDIL",15,0)
 ;XPDSKPE=1 don't run Environment Check^has question been asked
"RTN","XPDIL",16,0)
 S XPDIT=0,XPDSKPE="0^0"
"RTN","XPDIL",17,0)
 F  S XPDIT=$O(XPDT(XPDIT)) Q:'XPDIT  S XPDA=+XPDT(XPDIT) D  I '$D(XPDT) Q
"RTN","XPDIL",18,0)
 .;check if this Build has an Envir. Check
"RTN","XPDIL",19,0)
 .I $G(^XTMP("XPDI",XPDA,"PRE"))]"" D  I $G(XPDQUIT) D ABRTALL^XPDI(1) Q
"RTN","XPDIL",20,0)
 ..;quit if we already asked this question
"RTN","XPDIL",21,0)
 ..Q:$P(XPDSKPE,U,2)
"RTN","XPDIL",22,0)
 ..S $P(XPDSKPE,U,2)=1
"RTN","XPDIL",23,0)
 ..N DIR,DIRUT
"RTN","XPDIL",24,0)
 ..S DIR(0)="Y",DIR("A")="Want to RUN the Environment Check Routine",DIR("B")="YES"
"RTN","XPDIL",25,0)
 ..S DIR("A",1)="Build "_$P(XPDT(XPDIT),U,2)_" has an Enviromental Check Routine"
"RTN","XPDIL",26,0)
 ..;p345-rename AND* to XPD*
"RTN","XPDIL",27,0)
 ..I '$G(XPDAUTO) D ^DIR I $D(DIRUT) S XPDQUIT=1 Q
"RTN","XPDIL",28,0)
 ..I $G(XPDAUTO) S Y=1
"RTN","XPDIL",29,0)
 ..S:'Y XPDSKPE="1^1"
"RTN","XPDIL",30,0)
 .D PKG^XPDIL1(XPDA)
"RTN","XPDIL",31,0)
 ;Global Package
"RTN","XPDIL",32,0)
 G:$D(XPDGP) ^XPDIGP
"RTN","XPDIL",33,0)
 ;p345-rename AND* to XPD*
"RTN","XPDIL",34,0)
 I $D(XPDT),$D(^XPD(9.7,+XPDST,0)) S:$G(XPDAUTO) XPDANM=$P(^(0),U) W:'$G(XPDAUTO) !,"Use INSTALL NAME: ",$P(^(0),U)," to install this Distribution.",!
"RTN","XPDIL",35,0)
 Q
"RTN","XPDIL",36,0)
ST ;global input
"RTN","XPDIL",37,0)
 N DIR,DIRUT,GR,IOP,X,Y,Z,%ZIS
"RTN","XPDIL",38,0)
 G:'$D(^DD(3.5,0)) OPEN
"RTN","XPDIL",39,0)
 I '$D(^%ZIS(1,"B","HFS")) W !!,"You must have a device called 'HFS' in order to load a distribution!",*7 S XPDQUIT=1 Q
"RTN","XPDIL",40,0)
 ;p345-rename AND* to XPD*
"RTN","XPDIL",41,0)
 I '$G(XPDAUTO) D HOME^%ZIS
"RTN","XPDIL",42,0)
 I $G(XPDAUTO) S IO(0)=XPDDEV
"RTN","XPDIL",43,0)
 S DIR(0)="F^3:75",DIR("A")="Enter a Host File",DIR("?")="Enter a filename and/or path to input Distribution."
"RTN","XPDIL",44,0)
 ;p345-rename AND* to XPD*
"RTN","XPDIL",45,0)
 I '$G(XPDAUTO) D ^DIR I $D(DIRUT) S XPDQUIT=1 Q
"RTN","XPDIL",46,0)
 I $G(XPDAUTO) S (X,Y)=XPDFTPF
"RTN","XPDIL",47,0)
 S %ZIS="",%ZIS("HFSNAME")=Y,%ZIS("HFSMODE")="R",IOP="HFS"
"RTN","XPDIL",48,0)
 D ^%ZIS I POP W !,"Couldn't open file or HFS device!!",*7 S XPDQUIT=1 Q
"RTN","XPDIL",49,0)
 ;don't close device if we have a global package, we need to bring in the globals now
"RTN","XPDIL",50,0)
 D GI,^%ZISC:'$D(XPDGP)!$G(XPDQUIT)
"RTN","XPDIL",51,0)
 Q
"RTN","XPDIL",52,0)
 ;
"RTN","XPDIL",53,0)
 ;if no device file, Virgin Install
"RTN","XPDIL",54,0)
OPEN ;use open command
"RTN","XPDIL",55,0)
 N IO,IOPAR,DIR,DIRUT
"RTN","XPDIL",56,0)
 S DIR(0)="F^1:79",DIR("A")="Device Name"
"RTN","XPDIL",57,0)
 S DIR("?",1)="Device Name is either the name of the HFS file or the name of the HFS Device.",DIR("?",2)="i.e.  for MSM enter  51",DIR("?")="      for DSM enter  DISK$USER::[ANONYMOUS]:KRN8.KID"
"RTN","XPDIL",58,0)
 D ^DIR I $D(DIRUT) S POP=1 Q
"RTN","XPDIL",59,0)
 S IO=Y,DIR(0)="FO^1:79",DIR("A")="Device Parameters"
"RTN","XPDIL",60,0)
 S DIR("?",1)="Device Parameter is the Open parameter this M operating system needs to",DIR("?",2)="open the Device Name.",DIR("?",3)="i.e. for MSM enter  (""B:\KRN8.KID"":""R"")",DIR("?")="     for DSM enter  READONLY"
"RTN","XPDIL",61,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) S POP=1 Q
"RTN","XPDIL",62,0)
 S IOPAR=Y
"RTN","XPDIL",63,0)
 X "O IO:"_IOPAR_":10" E  U $P W !,"Couldn't open ",IO S POP=1 Q
"RTN","XPDIL",64,0)
 S IO(0)=$P
"RTN","XPDIL",65,0)
 D GI D ^%ZISC
"RTN","XPDIL",66,0)
 Q
"RTN","XPDIL",67,0)
 ;
"RTN","XPDIL",68,0)
GI N X,XPDSEQ,Y,Z
"RTN","XPDIL",69,0)
 U IO R X:10,Y:10 ;rwf was :0
"RTN","XPDIL",70,0)
 U IO(0) W !!,X,!,"Comment: ",Y
"RTN","XPDIL",71,0)
 S XPDST("H")=Y,XPDST("H1")=Y_"  ;Created on "_$P(X,"KIDS Distribution saved on ",2)
"RTN","XPDIL",72,0)
 ;Z is the string of Builds in this file
"RTN","XPDIL",73,0)
 U IO F X=1:1 R Z:1 S Z=$P(Z,"**KIDS**",2,99) Q:Z=""  S X(X)=Z
"RTN","XPDIL",74,0)
 U IO(0) I $G(X(1))="" W !!,"This is not a Distribution HFS File!" S XPDQUIT=1 Q
"RTN","XPDIL",75,0)
 ;global package, set XPDGP=flag;global^flag;global^...  flag=1 replace
"RTN","XPDIL",76,0)
 I $P(X(1),":")="GLOBALS" S XPDGP=$P(X(1),U,2,99),X(1)=$P(X(1),U)
"RTN","XPDIL",77,0)
 S XPDIT=0,X(1)=$P(X(1),":",2,99)
"RTN","XPDIL",78,0)
 W !!,"This Distribution contains Transport Globals for the following Package(s):"
"RTN","XPDIL",79,0)
 F X=1:1:X-1 F Z=1:1 S Y=$P(X(X),U,Z) Q:Y=""  D  Q:$G(XPDQUIT)
"RTN","XPDIL",80,0)
 . ;can't install if global exist, that means Build never finish install
"RTN","XPDIL",81,0)
 . ;INST will show name
"RTN","XPDIL",82,0)
 . S XPDIT=XPDIT+1 I '$$INST^XPDIL1(Y) S XPDQUIT=1 Q
"RTN","XPDIL",83,0)
 Q:$G(XPDQUIT)
"RTN","XPDIL",84,0)
 W !,"Distribution OK!",!
"RTN","XPDIL",85,0)
 D:$D(XPDGP) DISP^XPDIGP
"RTN","XPDIL",86,0)
 S DIR(0)="Y",DIR("A")="Want to Continue with Load",DIR("B")="YES"
"RTN","XPDIL",87,0)
 ;p345-rename AND* to XPD*
"RTN","XPDIL",88,0)
 I '$G(XPDAUTO) D ^DIR I $D(DIRUT)!'Y S XPDQUIT=1 Q
"RTN","XPDIL",89,0)
 I $G(XPDAUTO) S Y=1
"RTN","XPDIL",90,0)
 W !,"Loading Distribution...",!
"RTN","XPDIL",91,0)
 ;reset expiration date to T+7 on transport global
"RTN","XPDIL",92,0)
 S ^XTMP("XPDI",0)=$$FMADD^XLFDT(DT,7)_U_DT
"RTN","XPDIL",93,0)
 ;start reading the HFS again
"RTN","XPDIL",94,0)
 U IO R X:10,Y:10 ;rwf was :0
"RTN","XPDIL",95,0)
 ;the next read must be the INSTALL NAME
"RTN","XPDIL",96,0)
 I X'="**INSTALL NAME**"!'$D(XPDT("NM",Y)) U IO(0) W !!,"ERROR in HFS file format!" S XPDQUIT=1 Q
"RTN","XPDIL",97,0)
 ;XPDSEQ is the disk sequence number
"RTN","XPDIL",98,0)
 S %=XPDT("NM",Y),GR="^XTMP(""XPDI"","_+XPDT(%)_",",XPDSEQ=1
"RTN","XPDIL",99,0)
 ;X=global ref, Y=global value. DIRUT is when user is prompted for next disk in NEXTD and they abort
"RTN","XPDIL",100,0)
 ;rwf next line was :0
"RTN","XPDIL",101,0)
 F  R X:10,Y:10 Q:X="**END**"  D  I $D(DIRUT) S XPDQUIT=1 Q
"RTN","XPDIL",102,0)
 .I X="**INSTALL NAME**" D  Q
"RTN","XPDIL",103,0)
 ..S %=+$G(XPDT("NM",Y)) I '% S DIRUT=1 Q
"RTN","XPDIL",104,0)
 ..S GR="^XTMP(""XPDI"","_+XPDT(%)_","
"RTN","XPDIL",105,0)
 .;I X="**CONTINUE**" D NEXTD Q
"RTN","XPDIL",106,0)
 .S @(GR_X)=Y
"RTN","XPDIL",107,0)
 U IO(0)
"RTN","XPDIL",108,0)
 Q
"RTN","XPDIL",109,0)
 ;
"RTN","XPDIL",110,0)
NEXTD I ^%ZOSF("OS")'["MSM" U IO(0) W !!,"Error in disk, ABORTING load!!" S XPDQUIT=1 Q
"RTN","XPDIL",111,0)
 N DIR
"RTN","XPDIL",112,0)
 ;close current device
"RTN","XPDIL",113,0)
 C IO U IO(0)
"RTN","XPDIL",114,0)
 S XPDSEQ=XPDSEQ+1,DIR(0)="E",DIR("A")="Insert the next diskette, #"_XPDSEQ_", and Press the return key",DIR("?")="This distribution is continued on another diskette"
"RTN","XPDIL",115,0)
 D ^DIR Q:$D(DIRUT)
"RTN","XPDIL",116,0)
 W "  OK",!
"RTN","XPDIL",117,0)
 ;MSM specific code to open HFS
"RTN","XPDIL",118,0)
 O @(""""_IO_""":"_IOPAR) U IO
"RTN","XPDIL",119,0)
 R X:10,Y:10 ;rwf was :0
"RTN","XPDIL",120,0)
 ;quit if comments are not the same on each diskette
"RTN","XPDIL",121,0)
 G:Y'=XPDST("H") NEXTQ
"RTN","XPDIL",122,0)
 ;quit if not the expected sequence, Z is for the blank line
"RTN","XPDIL",123,0)
 R Y:10,Z:10 G:Y'=("**SEQ**:"_XPDSEQ) NEXTQ ;rwf was :0
"RTN","XPDIL",124,0)
 Q
"RTN","XPDIL",125,0)
NEXTQ U IO(0) W !!,"This is NOT the correct diskette!!  The comment on this diskette is:",!,X,!!
"RTN","XPDIL",126,0)
 S XPDSEQ=XPDSEQ-1
"RTN","XPDIL",127,0)
 G NEXTD
"RTN","XPDIL",128,0)
 ;
"RTN","XPDIL",129,0)
NONE W !!,"**NOTHING LOADED**",!
"RTN","XPDIL",130,0)
 Q
"VER")
8.0^22.0
"BLD",942,6)
^336
**END**
**END**
