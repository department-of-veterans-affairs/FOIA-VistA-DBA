Released DG*5.3*629 SEQ #566
Extracted from mail message
**KIDS**:DG*5.3*629^

**INSTALL NAME**
DG*5.3*629
"BLD",5910,0)
DG*5.3*629^REGISTRATION^0^3050322^y
"BLD",5910,1,0)
^^3^3^3041214^
"BLD",5910,1,1,0)
This patch facilitates using the VIC card in mag readers, no longer
"BLD",5910,1,2,0)
displays messages on "missing" patients, and allows PTF Fee Basis 
"BLD",5910,1,3,0)
records to close.
"BLD",5910,4,0)
^9.64PA^^
"BLD",5910,"KRN",0)
^9.67PA^8989.52^19
"BLD",5910,"KRN",.4,0)
.4
"BLD",5910,"KRN",.401,0)
.401
"BLD",5910,"KRN",.402,0)
.402
"BLD",5910,"KRN",.403,0)
.403
"BLD",5910,"KRN",.5,0)
.5
"BLD",5910,"KRN",.84,0)
.84
"BLD",5910,"KRN",3.6,0)
3.6
"BLD",5910,"KRN",3.8,0)
3.8
"BLD",5910,"KRN",9.2,0)
9.2
"BLD",5910,"KRN",9.8,0)
9.8
"BLD",5910,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",5910,"KRN",9.8,"NM",1,0)
DG53P629^^0^B13696638
"BLD",5910,"KRN",9.8,"NM",2,0)
DPTLK^^0^B65157990
"BLD",5910,"KRN",9.8,"NM",3,0)
DGRP1^^0^B21462299
"BLD",5910,"KRN",9.8,"NM",4,0)
DGPTFVC1^^0^B36592132
"BLD",5910,"KRN",9.8,"NM","B","DG53P629",1)

"BLD",5910,"KRN",9.8,"NM","B","DGPTFVC1",4)

"BLD",5910,"KRN",9.8,"NM","B","DGRP1",3)

"BLD",5910,"KRN",9.8,"NM","B","DPTLK",2)

"BLD",5910,"KRN",19,0)
19
"BLD",5910,"KRN",19.1,0)
19.1
"BLD",5910,"KRN",101,0)
101
"BLD",5910,"KRN",409.61,0)
409.61
"BLD",5910,"KRN",771,0)
771
"BLD",5910,"KRN",870,0)
870
"BLD",5910,"KRN",8989.51,0)
8989.51
"BLD",5910,"KRN",8989.52,0)
8989.52
"BLD",5910,"KRN",8994,0)
8994
"BLD",5910,"KRN","B",.4,.4)

"BLD",5910,"KRN","B",.401,.401)

"BLD",5910,"KRN","B",.402,.402)

"BLD",5910,"KRN","B",.403,.403)

"BLD",5910,"KRN","B",.5,.5)

"BLD",5910,"KRN","B",.84,.84)

"BLD",5910,"KRN","B",3.6,3.6)

"BLD",5910,"KRN","B",3.8,3.8)

"BLD",5910,"KRN","B",9.2,9.2)

"BLD",5910,"KRN","B",9.8,9.8)

"BLD",5910,"KRN","B",19,19)

"BLD",5910,"KRN","B",19.1,19.1)

"BLD",5910,"KRN","B",101,101)

"BLD",5910,"KRN","B",409.61,409.61)

"BLD",5910,"KRN","B",771,771)

"BLD",5910,"KRN","B",870,870)

"BLD",5910,"KRN","B",8989.51,8989.51)

"BLD",5910,"KRN","B",8989.52,8989.52)

"BLD",5910,"KRN","B",8994,8994)

"BLD",5910,"QUES",0)
^9.62^^
"BLD",5910,"REQB",0)
^9.611^4^3
"BLD",5910,"REQB",1,0)
DG*5.3*544^1
"BLD",5910,"REQB",3,0)
DG*5.3*570^1
"BLD",5910,"REQB",4,0)
DG*5.3*633^1
"BLD",5910,"REQB","B","DG*5.3*544",1)

"BLD",5910,"REQB","B","DG*5.3*570",3)

"BLD",5910,"REQB","B","DG*5.3*633",4)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
629^3050322^100850
"PKG",5,22,1,"PAH",1,1,0)
^^3^3^3050322
"PKG",5,22,1,"PAH",1,1,1,0)
This patch facilitates using the VIC card in mag readers, no longer
"PKG",5,22,1,"PAH",1,1,2,0)
displays messages on "missing" patients, and allows PTF Fee Basis 
"PKG",5,22,1,"PAH",1,1,3,0)
records to close.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","DG53P629")
0^1^B13696638
"RTN","DG53P629",1,0)
DG53P629 ;BAY/JAT - Patient File reporting; 6/7/04 7:13pm ; 12/11/04 10:37pm
"RTN","DG53P629",2,0)
 ;;5.3;Registration;**629**;Aug 13,1993
"RTN","DG53P629",3,0)
 ;
"RTN","DG53P629",4,0)
REPORT ;
"RTN","DG53P629",5,0)
 N X1,X2
"RTN","DG53P629",6,0)
 K ^XTMP("DG53P629",$J)
"RTN","DG53P629",7,0)
 S X1=DT,X2=90 D C^%DTC
"RTN","DG53P629",8,0)
 S ^XTMP("DG53P629",$J,0)=X_"^"_DT_"^Possible missing patients"
"RTN","DG53P629",9,0)
 I $$DEVICE() D ENTER
"RTN","DG53P629",10,0)
 Q
"RTN","DG53P629",11,0)
 ;
"RTN","DG53P629",12,0)
ENTER ;
"RTN","DG53P629",13,0)
 ;
"RTN","DG53P629",14,0)
 D READFILE
"RTN","DG53P629",15,0)
 D ^%ZISC
"RTN","DG53P629",16,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","DG53P629",17,0)
 Q
"RTN","DG53P629",18,0)
DEVICE() ;
"RTN","DG53P629",19,0)
 ;Description: allows the user to select a device.
"RTN","DG53P629",20,0)
 ;
"RTN","DG53P629",21,0)
 ;Output:
"RTN","DG53P629",22,0)
 ;  Function Value - Returns 0 if the user decides not to print or to
"RTN","DG53P629",23,0)
 ;       queue the report, 1 otherwise.
"RTN","DG53P629",24,0)
 ;
"RTN","DG53P629",25,0)
 N OK,IOP,POP,%ZIS
"RTN","DG53P629",26,0)
 S OK=1
"RTN","DG53P629",27,0)
 S %ZIS="MQ"
"RTN","DG53P629",28,0)
 D ^%ZIS
"RTN","DG53P629",29,0)
 S:POP OK=0
"RTN","DG53P629",30,0)
 D:OK&$D(IO("Q"))
"RTN","DG53P629",31,0)
 .N ZTRTN,ZTDESC,ZTSKM,ZTREQ,ZTSTOP
"RTN","DG53P629",32,0)
 .S ZTRTN="ENTER^DG53P629",ZTDESC="Report of possible missing patients"
"RTN","DG53P629",33,0)
 .D ^%ZTLOAD
"RTN","DG53P629",34,0)
 .W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","DG53P629",35,0)
 .D HOME^%ZIS
"RTN","DG53P629",36,0)
 .S OK=0
"RTN","DG53P629",37,0)
 Q OK
"RTN","DG53P629",38,0)
 ;
"RTN","DG53P629",39,0)
READFILE ;
"RTN","DG53P629",40,0)
 N DFN,COUNT,DGDATE,DGSRCE,DGCITY,DGSTAT
"RTN","DG53P629",41,0)
 S (DFN,COUNT)=0
"RTN","DG53P629",42,0)
 F  S DFN=$O(^DPT(DFN)) Q:'DFN  D
"RTN","DG53P629",43,0)
 .; merged record
"RTN","DG53P629",44,0)
 .I $D(^DPT(DFN,-9)) Q
"RTN","DG53P629",45,0)
 .; in process of being merged
"RTN","DG53P629",46,0)
 .I $P($G(^DPT(DFN,0)),U)["MERGING INTO" Q
"RTN","DG53P629",47,0)
 .I $P($G(^DPT(DFN,.15)),U,3)!($P($G(^DPT(DFN,"INE")),U,7))!($P($G(^DPT(DFN,"INE")),U,8))!($P($G(^DPT(DFN,"INE")),U,7)) D
"RTN","DG53P629",48,0)
 ..S DGDATE=$P($G(^DPT(DFN,.15)),U,3)
"RTN","DG53P629",49,0)
 ..S DGSRCE=$P($G(^DPT(DFN,"INE")),U,7)
"RTN","DG53P629",50,0)
 ..S DGCITY=$P($G(^DPT(DFN,"INE")),U,8)
"RTN","DG53P629",51,0)
 ..S DGSTAT=$P($G(^DPT(DFN,"INE")),U,9)
"RTN","DG53P629",52,0)
 ..D STORE
"RTN","DG53P629",53,0)
 ;
"RTN","DG53P629",54,0)
 W !,"Nbr possible missing patients: "_COUNT
"RTN","DG53P629",55,0)
 D PRINT
"RTN","DG53P629",56,0)
 Q
"RTN","DG53P629",57,0)
 ;
"RTN","DG53P629",58,0)
STORE ;
"RTN","DG53P629",59,0)
 S COUNT=COUNT+1
"RTN","DG53P629",60,0)
 S ^XTMP("DG53P629",$J,DFN)=DGDATE_U_DGSRCE_U_DGCITY_U_DGSTAT
"RTN","DG53P629",61,0)
 Q
"RTN","DG53P629",62,0)
PRINT ;
"RTN","DG53P629",63,0)
 U IO
"RTN","DG53P629",64,0)
 N DGDDT,DGQUIT,DGPG,DGDATA,DGTEXT
"RTN","DG53P629",65,0)
 S DGDDT=$$FMTE^XLFDT($$NOW^XLFDT,"D")
"RTN","DG53P629",66,0)
 S (DGQUIT,DGPG)=0
"RTN","DG53P629",67,0)
 D HEAD
"RTN","DG53P629",68,0)
 I '$G(COUNT) D  Q
"RTN","DG53P629",69,0)
 .W !!!,?20,"*** No records to report ***"
"RTN","DG53P629",70,0)
 W !!,"*** COUNT OF POSSIBLE MISSING PATIENTS: ",COUNT," ***",!!
"RTN","DG53P629",71,0)
 S DFN=0
"RTN","DG53P629",72,0)
 F  S DFN=$O(^XTMP("DG53P629",$J,DFN)) Q:'DFN  D  Q:DGQUIT
"RTN","DG53P629",73,0)
 .I $Y>(IOSL-4) D HEAD
"RTN","DG53P629",74,0)
 .S DGDATA=$G(^XTMP("DG53P629",$J,DFN))
"RTN","DG53P629",75,0)
 .S DGDATE=$P(DGDATA,U),DGSRCE=$P(DGDATA,U,2),DGCITY=$P(DGDATA,U,3),DGSTAT=$P(DGDATA,U,4)
"RTN","DG53P629",76,0)
 .S Y=$P(DGDATE,".") D DD^%DT S DGDATE=Y
"RTN","DG53P629",77,0)
 .S DGSRCE=$S(DGSRCE=1:"VAMC",DGSRCE=2:"RO",DGSRCE=3:"RPC",1:"")
"RTN","DG53P629",78,0)
 .I DGSTAT>0 S DGSTAT=$P($G(^DIC(5,DGSTAT,0)),U)
"RTN","DG53P629",79,0)
 .W ?2,DFN,?13,DGDATE,?27,DGSRCE,?34,DGCITY,?53,DGSTAT,!
"RTN","DG53P629",80,0)
 .I '$D(^DPT(DFN,.16)) W ! Q
"RTN","DG53P629",81,0)
 .S DGTEXT=0
"RTN","DG53P629",82,0)
 .F  S DGTEXT=$O(^DPT(DFN,.16,DGTEXT)) Q:'DGTEXT  D
"RTN","DG53P629",83,0)
 ..W ?13,$G(^DPT(DFN,.16,DGTEXT,0)),!
"RTN","DG53P629",84,0)
 .W !
"RTN","DG53P629",85,0)
 ;
"RTN","DG53P629",86,0)
 I DGQUIT W:$D(ZTQUEUED) !!,"Report stopped at user's request" Q
"RTN","DG53P629",87,0)
 I $G(DGPG)>0,$E(IOST)="C" K DIR S DIR(0)="E" D ^DIR K DIR S:+Y=0 DGQUIT=1
"RTN","DG53P629",88,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","DG53P629",89,0)
 Q
"RTN","DG53P629",90,0)
 ;
"RTN","DG53P629",91,0)
HEAD ;
"RTN","DG53P629",92,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S (ZTSTOP,DGQUIT)=1 Q
"RTN","DG53P629",93,0)
 I $G(DGPG)>0,$E(IOST)="C" K DIR S DIR(0)="E" D ^DIR K DIR S:+Y=0 DGQUIT=1
"RTN","DG53P629",94,0)
 Q:DGQUIT
"RTN","DG53P629",95,0)
 S DGPG=$G(DGPG)+1
"RTN","DG53P629",96,0)
 W @IOF,!,DGDDT,?15,"DG*5.3*629 List of possible missing patients",?70,"Page:",$J(DGPG,5),! K X S $P(X,"-",81)="" W X,!
"RTN","DG53P629",97,0)
 W !
"RTN","DG53P629",98,0)
 W !,?2,"DFN",?13,"DATE",?26,"SOURCE",?34,"CITY",?53,"STATE",!!
"RTN","DG53P629",99,0)
 S $P(X,"-",81)="" W X,!
"RTN","DG53P629",100,0)
 Q
"RTN","DGPTFVC1")
0^4^B36592132
"RTN","DGPTFVC1",1,0)
DGPTFVC1 ;ALB/AS/ADL - Expanded PTF Close-Out Edits ; 12/14/04 10:34am
"RTN","DGPTFVC1",2,0)
 ;;5.3;Registration;**52,58,79,114,164,400,342,466,415,493,512,510,544,629**;Aug 13, 1993
"RTN","DGPTFVC1",3,0)
 ;;ADL;Updated for CSV Project;;Mar 26, 2003
"RTN","DGPTFVC1",4,0)
 ;Called from Q+2^DGPTFTR. Variable must be passed in: PTF
"RTN","DGPTFVC1",5,0)
 ;Variable returned: DGERR.   DGERR <-- 1 if record fails to pass a check; DGERR <-- "" if record passes all checks
"RTN","DGPTFVC1",6,0)
 ;
"RTN","DGPTFVC1",7,0)
 Q:'$D(PTF)
"RTN","DGPTFVC1",8,0)
 S DGERR="",DGV(701)=$S($D(^DGPT(PTF,70)):^(70),1:""),DGV(101)=^(0),DGSUFFIX=$P(DGV(101),"^",5),DGV("FEE")=$P(DGV(101),"^",4),DFN=$P(DGV(101),"^",1)
"RTN","DGPTFVC1",9,0)
 ;
"RTN","DGPTFVC1",10,0)
 I $P(DGV(101),"^",2)>2820700 D AO
"RTN","DGPTFVC1",11,0)
 ;
"RTN","DGPTFVC1",12,0)
 I DGRTY=1,DGV("FEE") D MT
"RTN","DGPTFVC1",13,0)
 ;
"RTN","DGPTFVC1",14,0)
 ; DG*512, sck/Remove 101-Means Test indocator = 'U' xmit block
"RTN","DGPTFVC1",15,0)
 ;I 'DGV("FEE"),$P(DGV(101),"^",10)="U",'DGV(701)!(+DGV(701)>2890700) S DGERR=1 W !,"101 MEANS TEST",?23," value 'U' - not valid for discharges as of 7/1/1989",!?42,"per MAS VACO policy"
"RTN","DGPTFVC1",16,0)
 ;
"RTN","DGPTFVC1",17,0)
 I $D(^DPT(DFN,57)),$P(^(57),"^",4)>0 S S0=$P(^(57),"^",4),DGDX=$S(S0=1!(S0=3):"344.1",1:"344.0"),DGSCI="" F DGX=0:0 S DGX=$O(^DGPT(PTF,"M",DGX)) Q:DGX'>0  S DGNODE=^(DGX,0),DGSCI="" D SCI
"RTN","DGPTFVC1",18,0)
 ;
"RTN","DGPTFVC1",19,0)
 S DGDP="",DGDISPO=$P(DGV(701),"^",6),DGRECSUF=$P(DGV(701),"^",13)
"RTN","DGPTFVC1",20,0)
 I DGRTY=1 D
"RTN","DGPTFVC1",21,0)
 .S DGSTATYP=$S(DGDISPO=12!(DGDISPO=13):30,DGDISPO=10:42,DGDISPO=8:40,1:"")
"RTN","DGPTFVC1",22,0)
 .I DGSTATYP]"" D
"RTN","DGPTFVC1",23,0)
 ..D NUMACT^DGPTSUF(DGSTATYP)
"RTN","DGPTFVC1",24,0)
 ..I DGANUM>0 F I=1:1:DGANUM I DGSUFFIX=DGSUFNAM(I) D
"RTN","DGPTFVC1",25,0)
 ...I DGDISPO'=8 I DGRECSUF=DGSUFNAM(DGANUM) S DGDP=5 D DP
"RTN","DGPTFVC1",26,0)
 ...I DGDISPO=8 N DGANUM,DGSUFNAM D NUMACT^DGPTSUF(42) I DGRECSUF=DGSUFNAM(DGANUM) S DGDP=5 D DP
"RTN","DGPTFVC1",27,0)
 .K DGANUM,DGSTATYP,DGSUFNAM,I
"RTN","DGPTFVC1",28,0)
 ;
"RTN","DGPTFVC1",29,0)
 I DGRTY=1 S %=$P(DGV(701),"^",3) I %=4!(%=6)!(%=7) S DGDP="" D OP I $P(DGV(701),"^",5)=1 S DGERR=1 W !,"701 VA AUSPICES",?23," value inconsistent for discharge"
"RTN","DGPTFVC1",30,0)
 ;
"RTN","DGPTFVC1",31,0)
 ;I 'DGV("FEE") S %=$P(^DPT(DFN,0),"^",6),%=$S($D(^DIC(10,+%,0)):$P(^(0),"^",2),1:"") I '%!(%>7) S DGERR=1 W !,"701 RACE",?23," value " W:%']"" "blank" I %]"" W %," (invalid code)"
"RTN","DGPTFVC1",32,0)
 ;
"RTN","DGPTFVC1",33,0)
 ;If PRRTP treating specialty, must have valid PRRTP suffix
"RTN","DGPTFVC1",34,0)
 ;Fee records would not contain PRRTP specialties
"RTN","DGPTFVC1",35,0)
 I 'DGV("FEE"),"^25^26^27^28^29^38^39^"[(U_$P(DGV(701),U,2)_U) D
"RTN","DGPTFVC1",36,0)
 .I DGSUFFIX'="PA",(DGSUFFIX'="PB"),(DGSUFFIX'="PC"),(DGSUFFIX'="PD") D
"RTN","DGPTFVC1",37,0)
 ..S DGERR=1
"RTN","DGPTFVC1",38,0)
 ..W !,"101 SUFFIX",?23,"value must be set to a valid PRRTP suffix."
"RTN","DGPTFVC1",39,0)
 ;
"RTN","DGPTFVC1",40,0)
 D RACETHNC
"RTN","DGPTFVC1",41,0)
 K DGDISPO,DGRECSUF,DGV,DGDP,DGDX,DGSCI,DGSUFFIX,DGNODE,DGX,%,S0,I,X
"RTN","DGPTFVC1",42,0)
 I DGERR H 4
"RTN","DGPTFVC1",43,0)
 Q
"RTN","DGPTFVC1",44,0)
 ;
"RTN","DGPTFVC1",45,0)
SCI F X=5:1:15 I X#10 S DGPTTMP=$$ICDDX^ICDCODE(+$P(DGNODE,"^",X),$$GETDATE^ICDGTDRG(PTF)) I +DGPTTMP>0&($P(DGPTTMP,U,10)) S:$E($P(DGPTTMP,"^",2),1,5)=DGDX DGSCI=1 Q:DGSCI
"RTN","DGPTFVC1",46,0)
 I 'DGSCI S DGERR=1,%=$P(DGNODE,"^",10),X=$TR($$FMTE^XLFDT(%,"5DF")," ","0") W !,"501 ",X," SCI of ",S0,?23," requires an ICD Diagnosis code beginning with",!?12," or equal to ",DGDX
"RTN","DGPTFVC1",47,0)
 Q
"RTN","DGPTFVC1",48,0)
 ;
"RTN","DGPTFVC1",49,0)
MT S DGVMT=$P(DGV(101),"^",10),DGX=999 G DGX:DGVMT']"" I +$P(DGV(101),"^",2)<2860700!(DGSUFFIX="BU") S DGX="X" G DGX
"RTN","DGPTFVC1",50,0)
 ;S DGZEC=$S($D(^DPT(DFN,.36)):$P(^(.36),U,1),1:""),DGZEC=$S($D(^DIC(8,+DGZEC,0)):^(0),1:"") I $P(DGZEC,U,5)="N" S DGX="N" G DGX
"RTN","DGPTFVC1",51,0)
 S DGZEC=$P($G(^DGPT(PTF,101)),U,8),DGZEC=$S($D(^DIC(8,+DGZEC,0)):^(0),1:"") I $P(DGZEC,U,5)="N" S DGX="N" G DGX
"RTN","DGPTFVC1",52,0)
 S DGT=$P(DGV(701),".") G AS:'$O(^DGMT(408.31,"AD",1,DFN,0)) S DGZ1=$$LST^DGMTU(DFN,DGT) K:DGZ1']"" DGZ1
"RTN","DGPTFVC1",53,0)
 I DGVMT="X" K DGX,DGVMT Q
"RTN","DGPTFVC1",54,0)
 S DGX=$S('$D(DGZ1):"U",1:$P(DGZ1,U,4))
"RTN","DGPTFVC1",55,0)
 ; Determine if the Pending Adjudication is for MT(C) or GMT(G)
"RTN","DGPTFVC1",56,0)
 I DGX="P" D  G DGX
"RTN","DGPTFVC1",57,0)
 . I '+$P($G(DGZ1),U) S DGX="U" Q
"RTN","DGPTFVC1",58,0)
 . S DGX=$$PA^DGMTUTL($P(DGZ1,U)),DGX=$S('$D(DGX):"U",DGX="MT":"C",DGX="GMT":"G",1:"U")
"RTN","DGPTFVC1",59,0)
 ; sc < 50%, 0% non-comp, sc movements - DG*5.3*544
"RTN","DGPTFVC1",60,0)
 I DGX="A",$P(DGZEC,U,4)=3,$$SC^DGMTR(DFN),$$ANYSC^DGPTSCAN(PTF) S DGX="AS" G DGX
"RTN","DGPTFVC1",61,0)
 ;-- sc, >0%  - DG*5.3*544
"RTN","DGPTFVC1",62,0)
 I DGX="A","^1^3^"[("^"_$P(DGZEC,U,4)_"^"),$P($G(^DPT(DFN,.3)),U,2)>0 S DGX="AS" G DGX
"RTN","DGPTFVC1",63,0)
 S DGX=$S(DGX="A":"AN","BCGN"[DGX:DGX,1:"U") G AS:DGX="U" G DGX:DGX'="N"
"RTN","DGPTFVC1",64,0)
AS S DGZ=$S($D(^DPT(DFN,.321)):^(.321),1:0) I $P(DGZ,U,2)="Y"!($P(DGZ,U,3)="Y") S DGX="AS" G DGX
"RTN","DGPTFVC1",65,0)
 S DGZ=$S($D(^DPT(DFN,.322)):^(.322),1:0) I $P(DGZ,U,13)="Y" S DGX="AS" G DGX
"RTN","DGPTFVC1",66,0)
 N DGNTARR S DGZ=$S($$GETCUR^DGNTAPI(DFN,"DGNTARR")>0:DGNTARR("NTR"),1:"") I $P(DGZ,U)="Y" S DGX="AS" G DGX
"RTN","DGPTFVC1",67,0)
 S DGZ=$$GETSTAT^DGMSTAPI(DFN) I $P(DGZ,U,2)="Y" S DGX="AS" G DGX
"RTN","DGPTFVC1",68,0)
 I $P(DGZEC,U,5)="Y",$P(DGZEC,U,4)<4,"^2^15^"'[(U_$P(DGZEC,U,9)_U) S DGX="AS" G DGX
"RTN","DGPTFVC1",69,0)
 S DGX="AN"
"RTN","DGPTFVC1",70,0)
DGX I DGVMT'=DGX S DGERR=1 W !,"101 ","MEANS TEST",?23," value ",DGVMT,$S(DGVMT']"":"blank",DGVMT="X":" only for admissions prior to 7/1/86 or domicilliary use",1:" inconsistent with eligibility data")
"RTN","DGPTFVC1",71,0)
 K DGZEC,DGZ,DGZ1,DGT,DGX,DGVMT Q
"RTN","DGPTFVC1",72,0)
 ;
"RTN","DGPTFVC1",73,0)
DP I $P(DGV(701),"^",3)'=5 S DGERR=1 W !,"701 ",$E("TYPE OF DISPOSITION",1,18),?23," value inconsistent for discharge"
"RTN","DGPTFVC1",74,0)
OP I $P(DGV(701),"^",4)=1 S DGERR=1 W !,"701 ",$E("OUTPATIENT TREATMENT",1,18),?23," value inconsistent for discharge" Q:DGDP=""
"RTN","DGPTFVC1",75,0)
 I $P(DGV(701),"^",5)=2 S DGERR=1 W !,"701 VA AUSPICES",?23," value inconsistent for discharge"
"RTN","DGPTFVC1",76,0)
 Q
"RTN","DGPTFVC1",77,0)
 ;
"RTN","DGPTFVC1",78,0)
AO I DGPTFMT<2 D  Q
"RTN","DGPTFVC1",79,0)
 .S %=$S($D(^DGPT(PTF,101)):$P(^(101),"^",4),1:"")
"RTN","DGPTFVC1",80,0)
 .S %=$S($D(^DIC(45.82,+%,0)):$P(^(0),"^",1),1:"")
"RTN","DGPTFVC1",81,0)
 .S I=$S($D(^DPT(DFN,.321)):^(.321),1:"")
"RTN","DGPTFVC1",82,0)
 .S:$P(I,"^",2)="Y"&(%'=6) DGERR=1,DGV("E")=1
"RTN","DGPTFVC1",83,0)
 .W:$D(DGV("E")) !,"101 AGENT ORANGE",?23," value ",$S(DGV("E"):"can only be used with COB of '6'",1:"is inconsistent with Vietnam Service and/or COB")
"RTN","DGPTFVC1",84,0)
 ;
"RTN","DGPTFVC1",85,0)
 N AO,AOL,TMP
"RTN","DGPTFVC1",86,0)
 S TMP=$G(^DPT(DFN,.321))
"RTN","DGPTFVC1",87,0)
 S AO=$S($P(TMP,"^",2)="Y":1,1:0)
"RTN","DGPTFVC1",88,0)
 S AOL=$P(TMP,"^",13)
"RTN","DGPTFVC1",89,0)
 Q:('AO)
"RTN","DGPTFVC1",90,0)
 Q:(AOL'="")
"RTN","DGPTFVC1",91,0)
 S DGERR=1,DGV("E")=1
"RTN","DGPTFVC1",92,0)
 W !,"101 AGENT ORANGE LOCATION",?23,"value required if exposure to Agent Orange claimed"
"RTN","DGPTFVC1",93,0)
 Q
"RTN","DGPTFVC1",94,0)
RACETHNC        ;Race and ethnicity check
"RTN","DGPTFVC1",95,0)
 ;Ensure that a value for ethnicity and at least one race is on file.
"RTN","DGPTFVC1",96,0)
 ;Ensure all active race/ethnicity values have a valid PTF value and an
"RTN","DGPTFVC1",97,0)
 ;associated collection method.  Ensure all collection methods have a
"RTN","DGPTFVC1",98,0)
 ;valid PTF value.  Ignore race/ethicity entries that are inactive or
"RTN","DGPTFVC1",99,0)
 ;invalid pointers.  Note: PTF sends first active ethnicity and first
"RTN","DGPTFVC1",100,0)
 ;six active races.
"RTN","DGPTFVC1",101,0)
 N REF,IEN,TYPE,TEXT,PTRVAL,PTRMTHD,NUM,MAX
"RTN","DGPTFVC1",102,0)
 N VALIDVAL,VALIDMTH,VALUE,VADM
"RTN","DGPTFVC1",103,0)
 D DEM^VADPT
"RTN","DGPTFVC1",104,0)
 F REF=11,12 D
"RTN","DGPTFVC1",105,0)
 .I REF=12 D
"RTN","DGPTFVC1",106,0)
 ..S MAX=6
"RTN","DGPTFVC1",107,0)
 ..S TYPE=1
"RTN","DGPTFVC1",108,0)
 ..S VALIDVAL=",3,8,9,A,B,C,D,"
"RTN","DGPTFVC1",109,0)
 ..S VALIDMTH=",S,P,O,U,"
"RTN","DGPTFVC1",110,0)
 ..S TEXT="RACE"
"RTN","DGPTFVC1",111,0)
 .I REF=11 D
"RTN","DGPTFVC1",112,0)
 ..S MAX=1
"RTN","DGPTFVC1",113,0)
 ..S TYPE=2
"RTN","DGPTFVC1",114,0)
 ..S TEXT="ETHNICITY"
"RTN","DGPTFVC1",115,0)
 ..S VALIDVAL=",H,N,D,U,"
"RTN","DGPTFVC1",116,0)
 ..S VALIDMTH=",S,P,O,U,"
"RTN","DGPTFVC1",117,0)
 .S NUM=1
"RTN","DGPTFVC1",118,0)
 .S IEN=0
"RTN","DGPTFVC1",119,0)
 .F  S IEN=+$O(VADM(REF,IEN)) Q:'IEN  D  Q:NUM>MAX
"RTN","DGPTFVC1",120,0)
 ..S PTRVAL=+VADM(REF,IEN)
"RTN","DGPTFVC1",121,0)
 ..S PTRMTHD=+$G(VADM(REF,IEN,1))
"RTN","DGPTFVC1",122,0)
 ..Q:'PTRVAL
"RTN","DGPTFVC1",123,0)
 ..Q:$$INACTIVE^DGUTL4(PTRVAL,TYPE)
"RTN","DGPTFVC1",124,0)
 ..S NUM=NUM+1
"RTN","DGPTFVC1",125,0)
 ..S VALUE=$$PTR2CODE^DGUTL4(PTRVAL,TYPE,4)
"RTN","DGPTFVC1",126,0)
 ..I (VALUE="")!(VALIDVAL'[VALUE) D  Q
"RTN","DGPTFVC1",127,0)
 ...W !,"701 ",TEXT,?23,"missing/invalid xmit value"
"RTN","DGPTFVC1",128,0)
 ...S DGERR=1
"RTN","DGPTFVC1",129,0)
 ..I ('PTRMTHD) D  Q
"RTN","DGPTFVC1",130,0)
 ...W !,"701 ",TEXT,?23,"method of collection missing/invalid"
"RTN","DGPTFVC1",131,0)
 ...S DGERR=1
"RTN","DGPTFVC1",132,0)
 ..S VALUE=$$PTR2CODE^DGUTL4(PTRMTHD,3,4)
"RTN","DGPTFVC1",133,0)
 ..I (VALUE="")!(VALIDMTH'[VALUE) D  Q
"RTN","DGPTFVC1",134,0)
 ...W !,"701 ",TEXT,?23,"missing/invalid xmit value for method of collection"
"RTN","DGPTFVC1",135,0)
 ...S DGERR=1
"RTN","DGPTFVC1",136,0)
 Q
"RTN","DGRP1")
0^3^B21462299
"RTN","DGRP1",1,0)
DGRP1 ;ALB/MRL - DEMOGRAPHIC DATA ; 3/18/05 12:27pm
"RTN","DGRP1",2,0)
 ;;5.3;Registration;**109,161,506,244,546,570,629**;Aug 13, 1993
"RTN","DGRP1",3,0)
 ;
"RTN","DGRP1",4,0)
EN S (DGRPS,DGRPW)=1 D H^DGRPU F I=0,.11,.121,.13,.15,.24,57 S DGRP(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","DGRP1",5,0)
 I $P(DGRP(.15),"^",2)]"" S Z="APPLICANT IS LISTED AS 'INELIGIBLE' FOR TREATMENT!",DGRPCM=1 D WW^DGRPV S DGRPCM=0
"RTN","DGRP1",6,0)
 ;I $P(DGRP(.15),"^",3)]"" S Z="APPLICANT IS LISTED AS 'MISSING'.  NOTIFY APPROPRIATE PERSONNEL!",DGRPCM=1 D WW^DGRPV S DGRPCM=0
"RTN","DGRP1",7,0)
 W ! S Z=1 D WW^DGRPV W "    Name: " S Z=$P(DGRP(0),"^",1),Z1=31 D WW1^DGRPV W "SS: " S X=$P(DGRP(0),"^",9),Z=$E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,10),Z1=13 D WW1^DGRPV S Y=$P(DGRP(0),"^",3) X ^DD("DD") W "DOB: ",Y
"RTN","DGRP1",8,0)
 D GETNCAL  ;Display name component and alias information
"RTN","DGRP1",9,0)
 S Z=3,DGRPX=DGRP(0) D WW^DGRPV W " Remarks: ",$S($P(DGRPX,"^",10)]"":$E($P(DGRPX,"^",10),1,65),1:"NO REMARKS ENTERED FOR THIS PATIENT") S DGAD=.11,(DGA1,DGA2)=1 D A^DGRPU I $P(DGRP(.121),"^",9)="Y" S DGAD=.121,DGA1=1,DGA2=2 D A^DGRPU
"RTN","DGRP1",10,0)
 S Z=4 D WW^DGRPV W " Permanent Address: " S Z=" ",Z1=17
"RTN","DGRP1",11,0)
 D WW1^DGRPV S Z=5,DGRPW=0 D WW^DGRPV W " Temporary Address: "
"RTN","DGRP1",12,0)
 W !?11
"RTN","DGRP1",13,0)
 S Z1=40,Z=$S($D(DGA(1)):DGA(1),1:"NONE ON FILE") D WW1^DGRPV W $S($D(DGA(2)):DGA(2),1:"NO TEMPORARY ADDRESS")
"RTN","DGRP1",14,0)
 S I=2 F I1=0:0 S I=$O(DGA(I)) Q:I=""  W:(I#2)!($X>50) !?11 W:'(I#2) ?51 W DGA(I)
"RTN","DGRP1",15,0)
 S DGCC=$S($D(^DIC(5,+$P(DGRP(.11),U,5),1,+$P(DGRP(.11),U,7),0)):$E($P(^(0),U,1),1,20)_$S($P(^(0),U,3)]"":" ("_$P(^(0),U,3)_")",1:""),1:DGRPU) W !?3,"County: ",DGCC K DGCC
"RTN","DGRP1",16,0)
 S DGCC=$S($P(DGRP(.121),U,9)'="Y":"NOT APPLICABLE",$D(^DIC(5,+$P(DGRP(.121),U,5),1,+$P(DGRP(.121),U,11),0)):$E($P(^(0),U,1),1,20)_$S($P(^(0),U,3)]"":" ("_$P(^(0),U,3)_")",1:""),1:DGRPU) W ?43,"County: ",DGCC K DGCC
"RTN","DGRP1",17,0)
 W !?4,"Phone: ",$S($P(DGRP(.13),U,1)]"":$P(DGRP(.13),U,1),1:DGRPU),?44,"Phone: ",$S($P(DGRP(.121),U,9)'="Y":"NOT APPLICABLE",$P(DGRP(.121),U,10)]"":$P(DGRP(.121),U,10),1:DGRPU)
"RTN","DGRP1",18,0)
 S X="NOT APPLICABLE" I $P(DGRP(.121),U,9)="Y" S Y=$P(DGRP(.121),U,7) X:Y]"" ^DD("DD") S X=$S(Y]"":Y,1:DGRPU)_"-",Y=$P(DGRP(.121),U,8) X:Y]"" ^DD("DD") S X=X_$S(Y]"":Y,1:DGRPU)
"RTN","DGRP1",19,0)
 W !?3,"Office: ",$S($P(DGRP(.13),U,2)]"":$P(DGRP(.13),U,2),1:DGRPU),?42,"From/To: ",X
"RTN","DGRP1",20,0)
 W !?1,"Bad Addr: ",$$EXTERNAL^DILFD(2,.121,"",$P(DGRP(.11),U,16))
"RTN","DGRP1",21,0)
 ;
"RTN","DGRP1",22,0)
 ; ***  Additional displays added for Pre-Registration
"RTN","DGRP1",23,0)
 I $G(DGPRFLG)=1 D
"RTN","DGRP1",24,0)
 . W !
"RTN","DGRP1",25,0)
 . N I,MIS1,X,X1,SA1,TP1,X2,X3,ES1
"RTN","DGRP1",26,0)
 . I $D(^DIA(2,"B",DFN)) S X="" F I=1:1 S X=$O(^DIA(2,"B",DFN,X)) Q:X<1  I $P(^DIA(2,X,0),U,3)=.05 S MIS1=$P(^DIA(2,X,0),U,2)
"RTN","DGRP1",27,0)
 . W:$D(MIS1)>0 !," [MARITAL STATUS CHANGED:] "_$$FMTE^XLFDT(MIS1,"5D")
"RTN","DGRP1",28,0)
 . I $D(^DIA(2,"B",DFN)) S X1="" F I=1:1 S X1=$O(^DIA(2,"B",DFN,X1)) Q:X1<1  S:$P(^DIA(2,X1,0),U,3)=.111 SA1=$P(^DIA(2,X1,0),U,2)
"RTN","DGRP1",29,0)
 . W:$D(SA1)>0 !," [STREET ADDRESS LAST CHANGED:] "_$$FMTE^XLFDT(SA1,"5D")
"RTN","DGRP1",30,0)
 . I $D(^DIA(2,"B",DFN)) S X2="" F I=1:1 S X2=$O(^DIA(2,"B",DFN,X2)) Q:X2<1  S:$P(^DIA(2,X2,0),U,3)=.131 TP1=$P(^DIA(2,X2,0),U,2)
"RTN","DGRP1",31,0)
 . W:$D(TP1)>0 !," [HOME PHONE NUMBER CHANGED:] "_$$FMTE^XLFDT(TP1,"5D")
"RTN","DGRP1",32,0)
 . I $D(^DIA(2,"B",DFN)) S X3="" F I=1:1 S X3=$O(^DIA(2,"B",DFN,X3)) Q:X3<1  S:$P(^DIA(2,X3,0),U,3)=.31115 ES1=$P(^DIA(2,X3,0),U,2)
"RTN","DGRP1",33,0)
 . W:$D(ES1)>0 !," [EMPLOYMENT STATUS CHANGED:] "_$$FMTE^XLFDT(ES1,"5D")
"RTN","DGRP1",34,0)
 . ; The IB Insurance API does not provide date entered or edited information, so this information will not be displayed for preregistration
"RTN","DGRP1",35,0)
 . I $$INSUR^IBBAPI(DFN,"","AR",.DGDATA,"1,10,11") F DGI=0:0 S DGI=$O(DGDATA("IBBAPI","INSUR",DGI)) Q:'DGI  D
"RTN","DGRP1",36,0)
 .. W !," [INSURANCE:] ",$P(DGDATA("IBBAPI","INSUR",DGI,1),U,2)
"RTN","DGRP1",37,0)
 .. W "  EFFECTIVE DATE: ",$$FMTE^XLFDT(DGDATA("IBBAPI","INSUR",DGI,10),"5D"),"  EXPIRATION DATE: ",$$FMTE^XLFDT(DGDATA("IBBAPI","INSUR",DGI,11),"5D")
"RTN","DGRP1",38,0)
 ;
"RTN","DGRP1",39,0)
 G ^DGRPP
"RTN","DGRP1",40,0)
 ;
"RTN","DGRP1",41,0)
GETNCAL ;Get name component values
"RTN","DGRP1",42,0)
 N DGCOMP,DGNC,DGI,DGA,DGALIAS,DGX,DGRPW
"RTN","DGRP1",43,0)
 S DGNC="Family^Given^Middle^Prefix^Suffix^Degree"
"RTN","DGRP1",44,0)
 S DGCOMP=+$G(^DPT(DFN,"NAME"))_","
"RTN","DGRP1",45,0)
 I DGCOMP D GETS^DIQ(20,DGCOMP,"1:6",,"DGCOMP")
"RTN","DGRP1",46,0)
 ;Get alias values
"RTN","DGRP1",47,0)
 S DGA=0 F DGI=1:1:6 D  Q:'$D(DGALIAS(DGI))
"RTN","DGRP1",48,0)
A2 .S DGA=$O(^DPT(DFN,.01,DGA))
"RTN","DGRP1",49,0)
 .I 'DGA D:DGI=1  Q
"RTN","DGRP1",50,0)
 ..S DGALIAS(DGI)="< No alias entries on file >" Q
"RTN","DGRP1",51,0)
 .I DGI=6 S DGALIAS(DGI)="< More alias entries on file >" Q
"RTN","DGRP1",52,0)
 .S DGX=$G(^DPT(DFN,.01,DGA,0)) G:'$L(DGX) A2
"RTN","DGRP1",53,0)
 .S DGALIAS(DGI)=$P(DGX,U),DGX=$P(DGX,U,2)
"RTN","DGRP1",54,0)
 .I $L(DGX) D
"RTN","DGRP1",55,0)
 ..S DGX=" "_$E(DGX,1,3)_"-"_$E(DGX,4,5)_"-"_$E(DGX,6,9)
"RTN","DGRP1",56,0)
 ..S $E(DGALIAS(DGI),20)=DGX Q
"RTN","DGRP1",57,0)
 .S DGALIAS(DGI)=$E(DGALIAS(DGI),1,31)
"RTN","DGRP1",58,0)
 .Q
"RTN","DGRP1",59,0)
 ;Display name component and alias data
"RTN","DGRP1",60,0)
 F DGI=1:1:6 D
"RTN","DGRP1",61,0)
 .W !?5,$J($P(DGNC,U,DGI),6),": ",$E($G(DGCOMP(20,DGCOMP,DGI)),1,$S(DGI=1:23,1:27))
"RTN","DGRP1",62,0)
 .I DGI=1 S DGRPW=0,Z=2 W ?37 D WW^DGRPV W " Alias: "
"RTN","DGRP1",63,0)
 .W ?48,$G(DGALIAS(DGI))
"RTN","DGRP1",64,0)
 .Q
"RTN","DGRP1",65,0)
 Q
"RTN","DPTLK")
0^2^B65157990
"RTN","DPTLK",1,0)
DPTLK ;ALB/RMO,RTK - MAS Patient Look-up Main Routine ; 3/22/05 4:08pm
"RTN","DPTLK",2,0)
 ;;5.3;Registration;**32,72,93,73,136,157,197,232,265,277,223,327,244,513,528,541,576,600,485,633,629**;Aug 13, 1993
"RTN","DPTLK",3,0)
 ;
"RTN","DPTLK",4,0)
 ; mods made for magstripe read 12/96 - JFP
"RTN","DPTLK",5,0)
 ;
"RTN","DPTLK",6,0)
 ;Optional input: DPTNOFZY='1' to suppress fuzzy lookups implemented
"RTN","DPTLK",7,0)
 ;                by patch DG*5.3*244
"RTN","DPTLK",8,0)
 ;
"RTN","DPTLK",9,0)
EN ; -- Entry point
"RTN","DPTLK",10,0)
 K DPTX,DPTDFN,DPTSAVX I $D(DIC(0)) G QK:DIC(0)["I"!(DIC(0)'["A"&('$D(X)))
"RTN","DPTLK",11,0)
 I '$D(^DD("VERSION")) W !!?3,"Unable to proceed. Fileman version node ^DD(""VERSION"") is undefined." G QK
"RTN","DPTLK",12,0)
 I '$D(^DPT(0))!(^DD("VERSION")<17.2) W !!?3,"Unable to proceed. ",$S('$D(^DPT(0)):"0th node of ^DPT missing",^DD("VERSION")<17.2:"Fileman version must be at least 17.2",1:""),"." G QK
"RTN","DPTLK",13,0)
EN2 K DO,DUOUT,DTOUT S U="^",DIC="^DPT(",DIC(0)=$S($D(DIC(0)):DIC(0),1:"AELMQ") S:DIC(0)'["A" (DPTX,DPTSAVX)=X
"RTN","DPTLK",14,0)
 S DPTSZ=1000 I $D(^DD("OS"))#2 S DPTSZ=$S(+$P(^DD("OS",^("OS"),0),U,2):$P(^(0),U,2),1:DPTSZ)
"RTN","DPTLK",15,0)
 ;
"RTN","DPTLK",16,0)
ASKPAT ; -- Prompt for patient
"RTN","DPTLK",17,0)
 I DIC(0)["A" D   G QK:'$T!($E(DPTX)["^")!(DPTX="")
"RTN","DPTLK",18,0)
 .K DTOUT,DUOUT
"RTN","DPTLK",19,0)
 .W !,$S($D(DIC("A")):DIC("A"),1:"Select PATIENT NAME: ") W:$D(DIC("B")) DIC("B"),"// "
"RTN","DPTLK",20,0)
 .R X:DTIME
"RTN","DPTLK",21,0)
 .S DPTX=X S:'$T DTOUT=1 S:$T&(DPTX="")&($D(DIC("B"))) DPTX=DIC("B") S:DPTX["^"&($E(DPTX)'="%") DUOUT=1
"RTN","DPTLK",22,0)
 ; -- Check for the IATA magnetic stripe input
"RTN","DPTLK",23,0)
 N MAG,GCHK
"RTN","DPTLK",24,0)
 S MAG=0
"RTN","DPTLK",25,0)
 I $E(DPTX)="%"!($E(DPTX)=";"),DPTX["?" S MAG=1,(X,DPTX)=$$IATA(DPTX)
"RTN","DPTLK",26,0)
 ;
"RTN","DPTLK",27,0)
CHKPAT ; -- Custom Patient Lookup
"RTN","DPTLK",28,0)
 D DO^DIC1
"RTN","DPTLK",29,0)
 S DIC("W")=$S($D(DIC("W")):DIC("W"),1:"")
"RTN","DPTLK",30,0)
 K DPTIFNS,DPTS,DPTSEL
"RTN","DPTLK",31,0)
 S DPTCNT=0
"RTN","DPTLK",32,0)
 ; -- Check input for format an length
"RTN","DPTLK",33,0)
 G CHKDFN:DPTX?1A!(DPTX'?.ANP)!($L(DPTX)>30)
"RTN","DPTLK",34,0)
 ; -- Check for null response or abort
"RTN","DPTLK",35,0)
 I DPTX=""!(DPTX["^") G ASKPAT:DIC(0)["A",QK
"RTN","DPTLK",36,0)
 ; -- Check for question mark
"RTN","DPTLK",37,0)
 I DPTX["?" D  G ASKPAT:DIC(0)["A",QK
"RTN","DPTLK",38,0)
 .S D="B"
"RTN","DPTLK",39,0)
 .S DZ=$S(DPTX?1"?":"",1:"??")
"RTN","DPTLK",40,0)
 .G CHKPAT1:DZ="??"
"RTN","DPTLK",41,0)
 .N %
"RTN","DPTLK",42,0)
 .W !,?1,"Answer with PATIENT NAME, or SOCIAL SECURITY NUMBER, or last 4 digits",!,?4,"of SOCIAL SECURITY NUMBER, or first initial of"
"RTN","DPTLK",43,0)
 .W " last name with last",!,?4,"4 digits of SOCIAL SECURITY NUMBER"
"RTN","DPTLK",44,0)
 .W !,?1,"Do you want the entire ",+$P($G(^DPT(0)),"^",4),"-Entry PATIENT List" S %=0 D YN^DICN
"RTN","DPTLK",45,0)
 .Q:%'=1
"RTN","DPTLK",46,0)
 .S DZ="??"
"RTN","DPTLK",47,0)
CHKPAT1 .S X=DPTX
"RTN","DPTLK",48,0)
 .D DQ^DICQ
"RTN","DPTLK",49,0)
 ; -- Check for space bar, return
"RTN","DPTLK",50,0)
 I DPTX=" " D  G CHKDFN
"RTN","DPTLK",51,0)
 .S Y=$S('($D(DUZ)#2):-1,$D(^DISV(DUZ,"^DPT(")):^("^DPT("),1:-1)
"RTN","DPTLK",52,0)
 .D SETDPT^DPTLK1:Y>0
"RTN","DPTLK",53,0)
 .S DPTDFN=$S($D(DPTS(Y)):Y,1:-1)
"RTN","DPTLK",54,0)
 ; -- Check for DFN look up
"RTN","DPTLK",55,0)
 I $E(DPTX)="`" D  G CHKDFN
"RTN","DPTLK",56,0)
 .S Y=$S($D(^DPT(+$P(DPTX,"`",2),0)):+$P(DPTX,"`",2),1:-1)
"RTN","DPTLK",57,0)
 .D SETDPT^DPTLK1:Y>0
"RTN","DPTLK",58,0)
 .S DPTDFN=$S($D(DPTS(Y)):Y,1:-1)
"RTN","DPTLK",59,0)
 ; -- Puts input in correct format
"RTN","DPTLK",60,0)
 G CHKDFN:DPTX=""
"RTN","DPTLK",61,0)
 ; -- Force new entry
"RTN","DPTLK",62,0)
 I $E(DPTX)="""",$E(DPTX,$L(DPTX))="""" G NOPAT
"RTN","DPTLK",63,0)
 ; -- Check for index lookups
"RTN","DPTLK",64,0)
 D ^DPTLK1 G QK:$D(DTOUT)!($D(DUOUT)&(DIC(0)'["A")),ASKPAT:$D(DUOUT),CHKPAT:DPTDFN<0,CHKDFN:DPTDFN>0 I DIC(0)["N",$D(^DPT(DPTX,0)) S Y=X D SETDPT^DPTLK1 S DPTDFN=$S($D(DPTS(Y)):Y,1:-1) G CHKDFN
"RTN","DPTLK",65,0)
MAG ; -- No patient found, check for mag stripe input, create stub
"RTN","DPTLK",66,0)
 I 'MAG G NOPAT
"RTN","DPTLK",67,0)
 ; -- Check for ADT option(s) only
"RTN","DPTLK",68,0)
 N DGOPT
"RTN","DPTLK",69,0)
 S DGOPT=$P($G(XQY0),"^",2)
"RTN","DPTLK",70,0)
 I DGOPT'="Load/Edit Patient Data",DGOPT'="Register a Patient" D  G EN2
"RTN","DPTLK",71,0)
 .W !,"    ...Patient not in database, use ADT options to load patient" D Q1
"RTN","DPTLK",72,0)
 ; -- Prompt for creation of stub
"RTN","DPTLK",73,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Patient not found...Create stub entry: "
"RTN","DPTLK",74,0)
 S GCHK=$D(^TMP("DGVIC"))
"RTN","DPTLK",75,0)
 D ^DIR
"RTN","DPTLK",76,0)
 K DIR
"RTN","DPTLK",77,0)
 I 'Y D Q1 G EN2
"RTN","DPTLK",78,0)
 ; -- Parse IATA fields
"RTN","DPTLK",79,0)
 D FIELDS(IATA)
"RTN","DPTLK",80,0)
 ; -- Check for Duplicates
"RTN","DPTLK",81,0)
 D EP2^DPTLK3
"RTN","DPTLK",82,0)
 I DPTDFN<0 D Q1 G EN2
"RTN","DPTLK",83,0)
 ; -- Creates Stub entry in patient file
"RTN","DPTLK",84,0)
 S Y=$$FILE^DPTLK4(DGFLDS)
"RTN","DPTLK",85,0)
 I $P(Y,"^",3)'=1 W !,"Could not add patient to patient file" D QK1 Q
"RTN","DPTLK",86,0)
 D QK1
"RTN","DPTLK",87,0)
 Q
"RTN","DPTLK",88,0)
 ;
"RTN","DPTLK",89,0)
NOPAT ; -- No patient found, ask to add new
"RTN","DPTLK",90,0)
 I DIC(0)["L" D ^DPTLK2 S Y=DPTDFN G ASKPAT:DIC(0)["A"&(Y<0)&('$G(DTOUT)),QK1
"RTN","DPTLK",91,0)
 ;
"RTN","DPTLK",92,0)
CHKDFN ; -- 
"RTN","DPTLK",93,0)
 S:'$D(DPTDFN) DPTDFN=-1 I DPTDFN'>0!('$D(DPTS(+DPTDFN))) W:DIC(0)["Q" *7," ??" G ASKPAT:DIC(0)["A",QK
"RTN","DPTLK",94,0)
 I DIC(0)["E" D  W $S('$D(DPTSEL)&('$D(DIVP)):$P(DPTS(DPTDFN),U,2)_"  "_$P(DPTS(DPTDFN),U)_"  ",$D(^DPT(DPTDFN,0)):"  "_$P(^(0),U)_"  ",1:"") S Y=DPTDFN X:$D(^DPT(DPTDFN,0)) "N DDS X DIC(""W"")"
"RTN","DPTLK",95,0)
 .I $D(DDS) D CLRMSG^DDS S DX=0,DY=DDSHBX+1 X DDXY
"RTN","DPTLK",96,0)
 ;
"RTN","DPTLK",97,0)
 ; check for other patients in "BS5" xref on Patient file
"RTN","DPTLK",98,0)
 I '$G(DICR),DPTDFN>0,DIC(0)["E",$$BS5^DPTLK5(+DPTDFN) D  G ASKPAT:DIC(0)["A"&(%'=1),QK:DPTDFN<0
"RTN","DPTLK",99,0)
 .N DPTZERO,DPTLSNME,DPTSSN S DPTZERO=$G(^DPT(+DPTDFN,0)),DPTLSNME=$P($P(DPTZERO,U),","),DPTSSN=$E($P(DPTZERO,U,9),6,9)
"RTN","DPTLK",100,0)
 .W $C(7),!!,"There is more than one patient whose last name is '",DPTLSNME,"' and"
"RTN","DPTLK",101,0)
 .W !,"whose social security number ends with '",DPTSSN,"'."
"RTN","DPTLK",102,0)
 .W !,"Are you sure you wish to continue (Y/N)" S %=0 D YN^DICN
"RTN","DPTLK",103,0)
 .I %'=1 S DPTDFN=-1
"RTN","DPTLK",104,0)
 ;
"RTN","DPTLK",105,0)
 I '$G(DICR),DPTDFN>0 S Y=DPTDFN D ^DGSEC S DPTDFN=Y G ASKPAT:DIC(0)["A"&(DPTDFN<0),QK:DPTDFN<0
"RTN","DPTLK",106,0)
 S DPTX=DPTX_$P(DPTS(DPTDFN),U,2),DPTDFN=DPTDFN_U_$P(^DPT(DPTDFN,0),U)
"RTN","DPTLK",107,0)
 ;
"RTN","DPTLK",108,0)
Q ; -- 
"RTN","DPTLK",109,0)
 S Y=$S('$D(DPTDFN):-1,'$D(DPTS(+DPTDFN)):-1,1:DPTDFN),X=$S($D(DPTX)&(+Y>0):DPTX,$D(DPTSAVX):DPTSAVX,$D(DPTX):DPTX,1:"")
"RTN","DPTLK",110,0)
 I Y>0 S:DIC(0)'["F" ^DISV($S($D(DUZ)#2:DUZ,1:0),"^DPT(")=+Y S:DIC(0)["Z" Y(0)=^DPT(+Y,0),Y(0,0)=$P(^(0),U,1)
"RTN","DPTLK",111,0)
 ;DG*600
"RTN","DPTLK",112,0)
 ;I DIC(0)["E",$P($G(^DPT(+Y,0)),U,21) W *7,!,"Warning : You have selected a test patient."
"RTN","DPTLK",113,0)
 I DIC(0)["E",$$TESTPAT^VADPT(+Y) W *7,!,"WARNING : You may have selected a test patient."
"RTN","DPTLK",114,0)
 I DIC(0)["E",$$BADADR^DGUTL3(+Y) W *7,!,"WARNING : ** This patient has been flagged with a Bad Address Indicator."
"RTN","DPTLK",115,0)
 I DIC(0)["E",$$VAADV^DPTLK3(+Y) W *7,!,"** Patient is VA ADVANTAGE."
"RTN","DPTLK",116,0)
 ;DG*485
"RTN","DPTLK",117,0)
 I $D(^DPT("AXFFP",1,+Y)) D FFP^DPTLK5
"RTN","DPTLK",118,0)
 ;Display enrollment information
"RTN","DPTLK",119,0)
 I Y>0,DIC(0)["E" D ENR
"RTN","DPTLK",120,0)
 ;
"RTN","DPTLK",121,0)
 ;Call Combat Vet check
"RTN","DPTLK",122,0)
 I Y>0,DIC(0)["E" D CV
"RTN","DPTLK",123,0)
 ;
"RTN","DPTLK",124,0)
 ; check whether to display Means Test Required message
"RTN","DPTLK",125,0)
 D
"RTN","DPTLK",126,0)
 .N DPTDIV
"RTN","DPTLK",127,0)
 .I '$G(DUZ(2)) Q
"RTN","DPTLK",128,0)
 .I Y>0,DIC(0)["E" S DPTDIV=$$DMT^DPTLK5(+Y,DUZ(2)) I DPTDIV D
"RTN","DPTLK",129,0)
 ..W $C(7),!!,"MEANS TEST REQUIRED"
"RTN","DPTLK",130,0)
 ..W !,?3,$P($G(^DG(40.8,DPTDIV,"MT")),U,2)
"RTN","DPTLK",131,0)
 ..H 2
"RTN","DPTLK",132,0)
 ;
"RTN","DPTLK",133,0)
Q1 ; -- Clean up variables
"RTN","DPTLK",134,0)
 K D,DIC("W"),DO,DPTCNT,DPTDFN,DPTIFNS,DPTIX,DPTS
"RTN","DPTLK",135,0)
 K DPTSAVX,DPTSEL,DPTSZ,DPTX
"RTN","DPTLK",136,0)
 ;
"RTN","DPTLK",137,0)
 K:$D(IATA) IATA
"RTN","DPTLK",138,0)
 K:$D(DGFLDS) @DGFLDS,DGFLDS
"RTN","DPTLK",139,0)
 Q
"RTN","DPTLK",140,0)
 ;
"RTN","DPTLK",141,0)
QK K:'$D(DPTNOFZK) DPTNOFZY G Q
"RTN","DPTLK",142,0)
 ;
"RTN","DPTLK",143,0)
QK1 K:'$D(DPTNOFZK) DPTNOFZY G Q1
"RTN","DPTLK",144,0)
 ;
"RTN","DPTLK",145,0)
IX ; --
"RTN","DPTLK",146,0)
 I $D(D),$D(^DD(2,0,"IX",D)),($E(D)'="A") S DPTIX=D
"RTN","DPTLK",147,0)
 G DPTLK
"RTN","DPTLK",148,0)
 ;
"RTN","DPTLK",149,0)
IATA(X) ; --
"RTN","DPTLK",150,0)
 ;This function pulls off ssn from the IATA track
"RTN","DPTLK",151,0)
 ;
"RTN","DPTLK",152,0)
 ;Input:  X   -  what was read in
"RTN","DPTLK",153,0)
 ;Output: SSN -  social security number
"RTN","DPTLK",154,0)
 ;          Q -  quit
"RTN","DPTLK",155,0)
 ;
"RTN","DPTLK",156,0)
 ; Track            Start Sent     End Sent      Field Separator
"RTN","DPTLK",157,0)
 ; -----            ----------     --------      ---------------
"RTN","DPTLK",158,0)
 ;  IATA (alphanum)      %             ?          {   (Note: VA used ^)
"RTN","DPTLK",159,0)
 ;  ABA (numeric)        ;             ?          =    
"RTN","DPTLK",160,0)
 ;
"RTN","DPTLK",161,0)
 ;N IATA
"RTN","DPTLK",162,0)
 S (IATA)=""
"RTN","DPTLK",163,0)
 I $E(X)'="%" Q X ; no start sentinel
"RTN","DPTLK",164,0)
 I X'["?" Q "Q"
"RTN","DPTLK",165,0)
 ; -- Extract data from track
"RTN","DPTLK",166,0)
 S IATA=$$TRACK(X,"%","?")
"RTN","DPTLK",167,0)
 ; -- checks for no data
"RTN","DPTLK",168,0)
 I IATA="" Q "Q"
"RTN","DPTLK",169,0)
 ; -- Returns SSN
"RTN","DPTLK",170,0)
 I IATA'="" Q $P(IATA,"^")
"RTN","DPTLK",171,0)
 Q "Q"
"RTN","DPTLK",172,0)
 ;
"RTN","DPTLK",173,0)
TRACK(X,START,END) ; find track where start/end are sentinels
"RTN","DPTLK",174,0)
 ;
"RTN","DPTLK",175,0)
 Q $P($P($G(X),START,2),END,1)
"RTN","DPTLK",176,0)
 ;
"RTN","DPTLK",177,0)
FIELDS(IATA) ; -- Sets fields
"RTN","DPTLK",178,0)
 Q:'$D(IATA)
"RTN","DPTLK",179,0)
 N CNT,FIELD
"RTN","DPTLK",180,0)
 S DGFLDS="^TMP(""DGVIC"","_$J_")",CNT=1
"RTN","DPTLK",181,0)
 K @DGFLDS
"RTN","DPTLK",182,0)
 F  S FIELD=$P($G(IATA),"^",CNT)  Q:FIELD=""  D
"RTN","DPTLK",183,0)
 .S @DGFLDS@(CNT)=FIELD
"RTN","DPTLK",184,0)
 .S CNT=CNT+1
"RTN","DPTLK",185,0)
 ; -- Define fields for duplicate checker
"RTN","DPTLK",186,0)
 S DPTX=$G(@DGFLDS@(2)) ;NAME
"RTN","DPTLK",187,0)
 S DPTIDS(.03)=$G(@DGFLDS@(3)) ;DOB
"RTN","DPTLK",188,0)
 S DPTIDS(.09)=$G(@DGFLDS@(1)) ;SSN
"RTN","DPTLK",189,0)
 Q
"RTN","DPTLK",190,0)
ENR ;Display Enrollment information after patient selection
"RTN","DPTLK",191,0)
 N DGENCAT,DGENDFN,DGENR,DGEGTIEN,DGEGT
"RTN","DPTLK",192,0)
 I '$$GET^DGENA($$FINDCUR^DGENA(+DPTDFN),.DGENR) Q
"RTN","DPTLK",193,0)
 S DGENCAT=$$CATEGORY^DGENA4(+DPTDFN)
"RTN","DPTLK",194,0)
 S DGENCAT=$$EXTERNAL^DILFD(27.15,.02,"",DGENCAT)
"RTN","DPTLK",195,0)
 W !?1,"Enrollment Priority: ",$S($G(DGENR("PRIORITY")):$$EXT^DGENU("PRIORITY",DGENR("PRIORITY")),1:""),$S($G(DGENR("SUBGRP"))="":"",1:$$EXT^DGENU("SUBGRP",$G(DGENR("SUBGRP"))))
"RTN","DPTLK",196,0)
 W ?33,"Category: ",DGENCAT
"RTN","DPTLK",197,0)
 W ?57,"End Date: ",$S($G(DGENR("END")):$$FMTE^XLFDT(DGENR("END"),"5DZ"),1:""),!
"RTN","DPTLK",198,0)
 ;If patient is NOT ELIGIBLE, display Enrollment Status (Ineligible Project Phase I)
"RTN","DPTLK",199,0)
 I $G(DGENR("STATUS"))=10!($G(DGENR("STATUS"))=19)!($G(DGENR("STATUS"))=20) D
"RTN","DPTLK",200,0)
 . W ?1,"Enrollment Status: ",$S($G(DGENR("STATUS")):$$EXT^DGENU("STATUS",DGENR("STATUS")),1:"") ;H 5
"RTN","DPTLK",201,0)
 ;check for Combat Veteran Eligibility, if elig do not display EGT info
"RTN","DPTLK",202,0)
 I $$CVEDT^DGCV(+DPTDFN) Q
"RTN","DPTLK",203,0)
 ;Get Enrollment Group Threshold Priority and Subgroup
"RTN","DPTLK",204,0)
 S DGEGTIEN=$$FINDCUR^DGENEGT
"RTN","DPTLK",205,0)
 S DGEGT=$$GET^DGENEGT(DGEGTIEN,.DGEGT)
"RTN","DPTLK",206,0)
 Q:$G(DGENR("PRIORITY"))=""!($G(DGEGT("PRIORITY"))="")
"RTN","DPTLK",207,0)
 ;Compare Patient's Enrollment Priority to Enrollment Group Threshold
"RTN","DPTLK",208,0)
 I '$$ABOVE^DGENEGT1(+DPTDFN,DGENR("PRIORITY"),$G(DGENR("SUBGRP")),DGEGT("PRIORITY"),DGEGT("SUBGRP")) D
"RTN","DPTLK",209,0)
 .N X,IORVOFF,IORVON
"RTN","DPTLK",210,0)
 .S X="IORVOFF;IORVON"
"RTN","DPTLK",211,0)
 .D ENDR^%ZISS
"RTN","DPTLK",212,0)
 .W !?32 W:$D(IORVON) IORVON  W "*** WARNING ***" W:$D(IORVOFF) IORVOFF
"RTN","DPTLK",213,0)
 .I DGENR("END")'="" W !?14 W:$D(IORVON) IORVON W "*** PATIENT ENROLLMENT END",$S(DT>+DGENR("END"):"ED",1:"S")," EFFECTIVE ",$$FMTE^XLFDT(DGENR("END"),"5DZ")," ***" W:$D(IORVOFF) IORVOFF Q
"RTN","DPTLK",214,0)
 .W !?5 W:$D(IORVON) IORVON W "*** PATIENT ENROLLMENT ENDING.  ENROLLMENT END DATE IS NOT KNOWN. ***" W:$D(IORVOFF) IORVOFF
"RTN","DPTLK",215,0)
 Q
"RTN","DPTLK",216,0)
CV ;check for Combat Vet status
"RTN","DPTLK",217,0)
 N DGCV
"RTN","DPTLK",218,0)
 S DGCV=$$CVEDT^DGCV(+DPTDFN)
"RTN","DPTLK",219,0)
 I $P(DGCV,U)=1 D  Q
"RTN","DPTLK",220,0)
 . I '$$GET^DGENA($$FINDCUR^DGENA(+DPTDFN),.DGENR) W !
"RTN","DPTLK",221,0)
 . W ?3,"Combat Vet Status: "_$S($P(DGCV,U,3)=1:"ELIGIBLE",1:"EXPIRED"),?57,"End Date: "_$$FMTE^XLFDT($P(DGCV,U,2),"5DZ")
"RTN","DPTLK",222,0)
 Q
"VER")
8.0^22.0
**END**
**END**
