KIDS Distribution saved on Dec 23, 1997@09:53:49
DSS EXTRACTS V3.0 - National Release
**KIDS**:DSS EXTRACTS 3.0^

**INSTALL NAME**
DSS EXTRACTS 3.0
"BLD",943,0)
DSS EXTRACTS 3.0^DSS EXTRACTS^0^2971222^n
"BLD",943,1,0)
^^2^2^2971222^^^^
"BLD",943,1,1,0)
DSS EXTRACTS v3.0
"BLD",943,1,2,0)
National Release
"BLD",943,4,0)
^9.64PA^728.904^29
"BLD",943,4,727,0)
727
"BLD",943,4,727,222)
y^y^f^^^^n
"BLD",943,4,727.1,0)
727.1
"BLD",943,4,727.1,222)
y^y^f^^n^^y^m^n
"BLD",943,4,727.2,0)
727.2
"BLD",943,4,727.2,222)
y^y^f^^n^^y^a^n
"BLD",943,4,727.802,0)
727.802
"BLD",943,4,727.802,222)
y^y^f^^^^n
"BLD",943,4,727.803,0)
727.803
"BLD",943,4,727.803,222)
y^y^f^^^^n
"BLD",943,4,727.804,0)
727.804
"BLD",943,4,727.804,222)
y^y^f^^^^n
"BLD",943,4,727.805,0)
727.805
"BLD",943,4,727.805,222)
y^y^f^^^^n
"BLD",943,4,727.806,0)
727.806
"BLD",943,4,727.806,222)
y^y^f^^^^n
"BLD",943,4,727.808,0)
727.808
"BLD",943,4,727.808,222)
y^y^f^^^^n
"BLD",943,4,727.809,0)
727.809
"BLD",943,4,727.809,222)
y^y^f^^^^n
"BLD",943,4,727.81,0)
727.81
"BLD",943,4,727.81,222)
y^y^f^^^^n
"BLD",943,4,727.811,0)
727.811
"BLD",943,4,727.811,222)
y^y^f^^^^n
"BLD",943,4,727.813,0)
727.813
"BLD",943,4,727.813,222)
y^y^f^^^^n
"BLD",943,4,727.814,0)
727.814
"BLD",943,4,727.814,222)
y^y^f^^^^n
"BLD",943,4,727.815,0)
727.815
"BLD",943,4,727.815,222)
y^y^f^^^^n
"BLD",943,4,727.817,0)
727.817
"BLD",943,4,727.817,222)
y^y^f^^^^n
"BLD",943,4,727.819,0)
727.819
"BLD",943,4,727.819,222)
y^y^f^^^^n
"BLD",943,4,727.82,0)
727.82
"BLD",943,4,727.82,222)
y^y^f^^^^n
"BLD",943,4,727.821,0)
727.821
"BLD",943,4,727.821,222)
y^y^f^^^^n
"BLD",943,4,727.822,0)
727.822
"BLD",943,4,727.822,222)
y^y^f^^^^n
"BLD",943,4,727.823,0)
727.823
"BLD",943,4,727.823,222)
y^y^f^^^^n
"BLD",943,4,727.824,0)
727.824
"BLD",943,4,727.824,222)
y^y^f^^^^n
"BLD",943,4,727.825,0)
727.825
"BLD",943,4,727.825,222)
y^y^f^^^^n
"BLD",943,4,728,0)
728
"BLD",943,4,728,222)
y^y^f^^^^n
"BLD",943,4,728.113,0)
728.113
"BLD",943,4,728.113,222)
y^y^f^^^^n
"BLD",943,4,728.44,0)
728.44
"BLD",943,4,728.44,222)
y^y^f^^^^n
"BLD",943,4,728.441,0)
728.441
"BLD",943,4,728.441,222)
y^y^f^^n^^y^a^n
"BLD",943,4,728.506,0)
728.506
"BLD",943,4,728.506,222)
y^y^f^^^^n
"BLD",943,4,728.904,0)
728.904
"BLD",943,4,728.904,222)
y^y^f^^^^n
"BLD",943,4,"B",727,727)

"BLD",943,4,"B",727.1,727.1)

"BLD",943,4,"B",727.2,727.2)

"BLD",943,4,"B",727.802,727.802)

"BLD",943,4,"B",727.803,727.803)

"BLD",943,4,"B",727.804,727.804)

"BLD",943,4,"B",727.805,727.805)

"BLD",943,4,"B",727.806,727.806)

"BLD",943,4,"B",727.808,727.808)

"BLD",943,4,"B",727.809,727.809)

"BLD",943,4,"B",727.81,727.81)

"BLD",943,4,"B",727.811,727.811)

"BLD",943,4,"B",727.813,727.813)

"BLD",943,4,"B",727.814,727.814)

"BLD",943,4,"B",727.815,727.815)

"BLD",943,4,"B",727.817,727.817)

"BLD",943,4,"B",727.819,727.819)

"BLD",943,4,"B",727.82,727.82)

"BLD",943,4,"B",727.821,727.821)

"BLD",943,4,"B",727.822,727.822)

"BLD",943,4,"B",727.823,727.823)

"BLD",943,4,"B",727.824,727.824)

"BLD",943,4,"B",727.825,727.825)

"BLD",943,4,"B",728,728)

"BLD",943,4,"B",728.113,728.113)

"BLD",943,4,"B",728.44,728.44)

"BLD",943,4,"B",728.441,728.441)

"BLD",943,4,"B",728.506,728.506)

"BLD",943,4,"B",728.904,728.904)

"BLD",943,"ABNS",0)
^9.66A^^
"BLD",943,"ABPKG")
n^n^
"BLD",943,"INI")

"BLD",943,"INIT")
ECXINPOS
"BLD",943,"KRN",0)
^9.67PA^19^18
"BLD",943,"KRN",.4,0)
.4
"BLD",943,"KRN",.4,"NM",0)
^9.68A^13^13
"BLD",943,"KRN",.4,"NM",1,0)
ECX CLINIC CODE    FILE #728.441^728.441^0
"BLD",943,"KRN",.4,"NM",2,0)
ECX LOG    FILE #727^727^0
"BLD",943,"KRN",.4,"NM",3)
^^^
"BLD",943,"KRN",.4,"NM",3,0)
ECXADMISSIONS    FILE #405^405^1
"BLD",943,"KRN",.4,"NM",4)
^^^
"BLD",943,"KRN",.4,"NM",4,0)
ECXDENTAL    FILE #221^221^1
"BLD",943,"KRN",.4,"NM",5)
^^^
"BLD",943,"KRN",.4,"NM",5,0)
ECXEC    FILE #721^721^1
"BLD",943,"KRN",.4,"NM",6)
^^^
"BLD",943,"KRN",.4,"NM",6,0)
ECXLABPAT    FILE #69^69^1
"BLD",943,"KRN",.4,"NM",7)
^^^
"BLD",943,"KRN",.4,"NM",7,0)
ECXLABRESF    FILE #69^69^1
"BLD",943,"KRN",.4,"NM",8)
^^^
"BLD",943,"KRN",.4,"NM",8,0)
ECXMOVEMENTS    FILE #405^405^1
"BLD",943,"KRN",.4,"NM",9)
^^^
"BLD",943,"KRN",.4,"NM",9,0)
ECXNURSSOURCE    FILE #41.9^41.9^1
"BLD",943,"KRN",.4,"NM",10)
^^^
"BLD",943,"KRN",.4,"NM",10,0)
ECXPAF    FILE #45.9^45.9^1
"BLD",943,"KRN",.4,"NM",11)
^^^
"BLD",943,"KRN",.4,"NM",11,0)
ECXRADPAT    FILE #70^70^1
"BLD",943,"KRN",.4,"NM",12)
^^^
"BLD",943,"KRN",.4,"NM",12,0)
ECXSURG    FILE #130^130^1
"BLD",943,"KRN",.4,"NM",13)
^^^
"BLD",943,"KRN",.4,"NM",13,0)
ECXTREATINGCHANGES    FILE #405^405^1
"BLD",943,"KRN",.4,"NM","B","ECX CLINIC CODE    FILE #728.441",1)

"BLD",943,"KRN",.4,"NM","B","ECX LOG    FILE #727",2)

"BLD",943,"KRN",.4,"NM","B","ECXADMISSIONS    FILE #405",3)

"BLD",943,"KRN",.4,"NM","B","ECXDENTAL    FILE #221",4)

"BLD",943,"KRN",.4,"NM","B","ECXEC    FILE #721",5)

"BLD",943,"KRN",.4,"NM","B","ECXLABPAT    FILE #69",6)

"BLD",943,"KRN",.4,"NM","B","ECXLABRESF    FILE #69",7)

"BLD",943,"KRN",.4,"NM","B","ECXMOVEMENTS    FILE #405",8)

"BLD",943,"KRN",.4,"NM","B","ECXNURSSOURCE    FILE #41.9",9)

"BLD",943,"KRN",.4,"NM","B","ECXPAF    FILE #45.9",10)

"BLD",943,"KRN",.4,"NM","B","ECXRADPAT    FILE #70",11)

"BLD",943,"KRN",.4,"NM","B","ECXSURG    FILE #130",12)

"BLD",943,"KRN",.4,"NM","B","ECXTREATINGCHANGES    FILE #405",13)

"BLD",943,"KRN",.401,0)
.401
"BLD",943,"KRN",.401,"NM",0)
^9.68A^13^13
"BLD",943,"KRN",.401,"NM",1,0)
ECX CLINIC CODE    FILE #728.441^728.441^0
"BLD",943,"KRN",.401,"NM",2,0)
ECX LOG    FILE #727^727^0
"BLD",943,"KRN",.401,"NM",3)
^^^
"BLD",943,"KRN",.401,"NM",3,0)
ECXADMISSIONS    FILE #405^405^1
"BLD",943,"KRN",.401,"NM",4)
^^^
"BLD",943,"KRN",.401,"NM",4,0)
ECXDENTAL    FILE #221^221^1
"BLD",943,"KRN",.401,"NM",5)
^^^
"BLD",943,"KRN",.401,"NM",5,0)
ECXEC    FILE #721^721^1
"BLD",943,"KRN",.401,"NM",6)
^^^
"BLD",943,"KRN",.401,"NM",6,0)
ECXLABPAT    FILE #69^69^1
"BLD",943,"KRN",.401,"NM",7)
^^^
"BLD",943,"KRN",.401,"NM",7,0)
ECXLABRESF    FILE #69^69^1
"BLD",943,"KRN",.401,"NM",8)
^^^
"BLD",943,"KRN",.401,"NM",8,0)
ECXMOVEMENTS    FILE #405^405^1
"BLD",943,"KRN",.401,"NM",9)
^^^
"BLD",943,"KRN",.401,"NM",9,0)
ECXNURSSOURCE    FILE #41.9^41.9^1
"BLD",943,"KRN",.401,"NM",10)
^^^
"BLD",943,"KRN",.401,"NM",10,0)
ECXPAF    FILE #45.9^45.9^1
"BLD",943,"KRN",.401,"NM",11)
^^^
"BLD",943,"KRN",.401,"NM",11,0)
ECXRADTEST    FILE #70^70^1
"BLD",943,"KRN",.401,"NM",12)
^^^
"BLD",943,"KRN",.401,"NM",12,0)
ECXSURG    FILE #130^130^1
"BLD",943,"KRN",.401,"NM",13)
^^^
"BLD",943,"KRN",.401,"NM",13,0)
ECXTREATINGCHANGES    FILE #405^405^1
"BLD",943,"KRN",.401,"NM","B","ECX CLINIC CODE    FILE #728.441",1)

"BLD",943,"KRN",.401,"NM","B","ECX LOG    FILE #727",2)

"BLD",943,"KRN",.401,"NM","B","ECXADMISSIONS    FILE #405",3)

"BLD",943,"KRN",.401,"NM","B","ECXDENTAL    FILE #221",4)

"BLD",943,"KRN",.401,"NM","B","ECXEC    FILE #721",5)

"BLD",943,"KRN",.401,"NM","B","ECXLABPAT    FILE #69",6)

"BLD",943,"KRN",.401,"NM","B","ECXLABRESF    FILE #69",7)

"BLD",943,"KRN",.401,"NM","B","ECXMOVEMENTS    FILE #405",8)

"BLD",943,"KRN",.401,"NM","B","ECXNURSSOURCE    FILE #41.9",9)

"BLD",943,"KRN",.401,"NM","B","ECXPAF    FILE #45.9",10)

"BLD",943,"KRN",.401,"NM","B","ECXRADTEST    FILE #70",11)

"BLD",943,"KRN",.401,"NM","B","ECXSURG    FILE #130",12)

"BLD",943,"KRN",.401,"NM","B","ECXTREATINGCHANGES    FILE #405",13)

"BLD",943,"KRN",.402,0)
.402
"BLD",943,"KRN",.402,"NM",0)
^9.68A^^
"BLD",943,"KRN",.403,0)
.403
"BLD",943,"KRN",.5,0)
.5
"BLD",943,"KRN",.84,0)
.84
"BLD",943,"KRN",3.6,0)
3.6
"BLD",943,"KRN",3.8,0)
3.8
"BLD",943,"KRN",9.2,0)
9.2
"BLD",943,"KRN",9.8,0)
9.8
"BLD",943,"KRN",9.8,"NM",0)
^9.68A^79^75
"BLD",943,"KRN",9.8,"NM",1)
^^^
"BLD",943,"KRN",9.8,"NM",1,0)
ECX218EN^^1
"BLD",943,"KRN",9.8,"NM",2,0)
ECXADM^^0^B13255051
"BLD",943,"KRN",9.8,"NM",3,0)
ECXDEFIN^^0^B9251189
"BLD",943,"KRN",9.8,"NM",4,0)
ECXDENT^^0^B7839886
"BLD",943,"KRN",9.8,"NM",5,0)
ECXDIVIV^^0^B8847174
"BLD",943,"KRN",9.8,"NM",6,0)
ECXDRUG^^0^B5218330
"BLD",943,"KRN",9.8,"NM",7,0)
ECXEC^^0^B19668319
"BLD",943,"KRN",9.8,"NM",8,0)
ECXFEKE1^^0^B30019768
"BLD",943,"KRN",9.8,"NM",9,0)
ECXFEKEY^^0^B45890835
"BLD",943,"KRN",9.8,"NM",10,0)
ECXFELOC^^0^B15804560
"BLD",943,"KRN",9.8,"NM",11,0)
ECXFTRAN^^0^B10559353
"BLD",943,"KRN",9.8,"NM",16,0)
ECXLAB1^^0^B7466668
"BLD",943,"KRN",9.8,"NM",17,0)
ECXLABN^^0^B12842480
"BLD",943,"KRN",9.8,"NM",18,0)
ECXLABO^^0^B12822622
"BLD",943,"KRN",9.8,"NM",19,0)
ECXLABPI^^0^B2508800
"BLD",943,"KRN",9.8,"NM",20,0)
ECXLABR^^0^B12703854
"BLD",943,"KRN",9.8,"NM",21,0)
ECXLABRS^^0^B8760704
"BLD",943,"KRN",9.8,"NM",22,0)
ECXLARP^^0^B8825965
"BLD",943,"KRN",9.8,"NM",23,0)
ECXMDELE^^0^B934584
"BLD",943,"KRN",9.8,"NM",24,0)
ECXMOV^^0^B9141428
"BLD",943,"KRN",9.8,"NM",25,0)
ECXNDC^^0^B6174901
"BLD",943,"KRN",9.8,"NM",26)
^^^
"BLD",943,"KRN",9.8,"NM",26,0)
ECXNTEG^^1
"BLD",943,"KRN",9.8,"NM",27)
^^^
"BLD",943,"KRN",9.8,"NM",27,0)
ECXNUAUD^^1
"BLD",943,"KRN",9.8,"NM",28,0)
ECXNURS^^0^B10028440
"BLD",943,"KRN",9.8,"NM",29,0)
ECXOPRX^^0^B21980015
"BLD",943,"KRN",9.8,"NM",30,0)
ECXPAI^^0^B8752816
"BLD",943,"KRN",9.8,"NM",31,0)
ECXPCT^^0^B2418766
"BLD",943,"KRN",9.8,"NM",32,0)
ECXPIV1^^0^B507517
"BLD",943,"KRN",9.8,"NM",33,0)
ECXPIVD^^0^B17545333
"BLD",943,"KRN",9.8,"NM",34,0)
ECXPIVDN^^0^B23254335
"BLD",943,"KRN",9.8,"NM",35,0)
ECXPURG^^0^B14231818
"BLD",943,"KRN",9.8,"NM",36,0)
ECXPURG1^^0^B23804431
"BLD",943,"KRN",9.8,"NM",37,0)
ECXQSR^^0^B18303169
"BLD",943,"KRN",9.8,"NM",38)
^^^
"BLD",943,"KRN",9.8,"NM",38,0)
ECXQSRV^^1
"BLD",943,"KRN",9.8,"NM",39,0)
ECXRAD^^0^B15142693
"BLD",943,"KRN",9.8,"NM",40,0)
ECXSADEN^^0^B11912423
"BLD",943,"KRN",9.8,"NM",41,0)
ECXSARAD^^0^B11350607
"BLD",943,"KRN",9.8,"NM",42,0)
ECXSARXS^^0^B15310882
"BLD",943,"KRN",9.8,"NM",43,0)
ECXSASUR^^0^B26175349
"BLD",943,"KRN",9.8,"NM",44,0)
ECXSCLD^^0^B37899121
"BLD",943,"KRN",9.8,"NM",45,0)
ECXSCNS^^0^B9845645
"BLD",943,"KRN",9.8,"NM",46,0)
ECXSCX^^0^B49777048
"BLD",943,"KRN",9.8,"NM",47,0)
ECXSCX1^^0^B2689741
"BLD",943,"KRN",9.8,"NM",48,0)
ECXSETU1^^0^B28204315
"BLD",943,"KRN",9.8,"NM",49,0)
ECXSETUP^^0^B29332550
"BLD",943,"KRN",9.8,"NM",50,0)
ECXSURG^^0^B20243183
"BLD",943,"KRN",9.8,"NM",51,0)
ECXTAUTO^^0^B17398054
"BLD",943,"KRN",9.8,"NM",52,0)
ECXTLOCL^^0^B8798883
"BLD",943,"KRN",9.8,"NM",53,0)
ECXTRAC^^0^B29872240
"BLD",943,"KRN",9.8,"NM",54,0)
ECXTRANS^^0^B18511233
"BLD",943,"KRN",9.8,"NM",55,0)
ECXTRT^^0^B15573826
"BLD",943,"KRN",9.8,"NM",56,0)
ECXTRYIT^^0^B15901060
"BLD",943,"KRN",9.8,"NM",57,0)
ECXUD^^0^B9524215
"BLD",943,"KRN",9.8,"NM",58,0)
ECXUD1^^0^B523654
"BLD",943,"KRN",9.8,"NM",59,0)
ECXWRD^^0^B9957323
"BLD",943,"KRN",9.8,"NM",60,0)
ECXXREV^^0^B3776703
"BLD",943,"KRN",9.8,"NM",61,0)
ECUD1^^0^B421016
"BLD",943,"KRN",9.8,"NM",62,0)
ECXAADM^^0^B33974932
"BLD",943,"KRN",9.8,"NM",63,0)
ECXADEN^^0^B55317621
"BLD",943,"KRN",9.8,"NM",64,0)
ECXAECS^^0^B40489785
"BLD",943,"KRN",9.8,"NM",65,0)
ECXAECQ^^0^B26972060
"BLD",943,"KRN",9.8,"NM",66,0)
ECXANUR^^0^B39095495
"BLD",943,"KRN",9.8,"NM",67,0)
ECXAMOV^^0^B56863094
"BLD",943,"KRN",9.8,"NM",68,0)
ECXAPAS^^0^B14597248
"BLD",943,"KRN",9.8,"NM",69,0)
ECXARAD^^0^B36956820
"BLD",943,"KRN",9.8,"NM",70,0)
ECXASUR^^0^B34325102
"BLD",943,"KRN",9.8,"NM",71,0)
ECXATRT^^0^B49613527
"BLD",943,"KRN",9.8,"NM",72,0)
ECXALAB^^0^B32314549
"BLD",943,"KRN",9.8,"NM",73,0)
ECXDVSN^^0^B42384973
"BLD",943,"KRN",9.8,"NM",74,0)
ECXDVSN1^^0^B28029339
"BLD",943,"KRN",9.8,"NM",75,0)
ECXDVSN2^^0^B6763623
"BLD",943,"KRN",9.8,"NM",76,0)
ECXUTL^^0^B31425421
"BLD",943,"KRN",9.8,"NM",77,0)
ECXUTLA^^0^B48040435
"BLD",943,"KRN",9.8,"NM",78)
^^^
"BLD",943,"KRN",9.8,"NM",78,0)
ECXINPRE^^1
"BLD",943,"KRN",9.8,"NM",79,0)
ECXKILL^^0^B11934228
"BLD",943,"KRN",9.8,"NM","B","ECUD1",61)

"BLD",943,"KRN",9.8,"NM","B","ECX218EN",1)

"BLD",943,"KRN",9.8,"NM","B","ECXAADM",62)

"BLD",943,"KRN",9.8,"NM","B","ECXADEN",63)

"BLD",943,"KRN",9.8,"NM","B","ECXADM",2)

"BLD",943,"KRN",9.8,"NM","B","ECXAECQ",65)

"BLD",943,"KRN",9.8,"NM","B","ECXAECS",64)

"BLD",943,"KRN",9.8,"NM","B","ECXALAB",72)

"BLD",943,"KRN",9.8,"NM","B","ECXAMOV",67)

"BLD",943,"KRN",9.8,"NM","B","ECXANUR",66)

"BLD",943,"KRN",9.8,"NM","B","ECXAPAS",68)

"BLD",943,"KRN",9.8,"NM","B","ECXARAD",69)

"BLD",943,"KRN",9.8,"NM","B","ECXASUR",70)

"BLD",943,"KRN",9.8,"NM","B","ECXATRT",71)

"BLD",943,"KRN",9.8,"NM","B","ECXDEFIN",3)

"BLD",943,"KRN",9.8,"NM","B","ECXDENT",4)

"BLD",943,"KRN",9.8,"NM","B","ECXDIVIV",5)

"BLD",943,"KRN",9.8,"NM","B","ECXDRUG",6)

"BLD",943,"KRN",9.8,"NM","B","ECXDVSN",73)

"BLD",943,"KRN",9.8,"NM","B","ECXDVSN1",74)

"BLD",943,"KRN",9.8,"NM","B","ECXDVSN2",75)

"BLD",943,"KRN",9.8,"NM","B","ECXEC",7)

"BLD",943,"KRN",9.8,"NM","B","ECXFEKE1",8)

"BLD",943,"KRN",9.8,"NM","B","ECXFEKEY",9)

"BLD",943,"KRN",9.8,"NM","B","ECXFELOC",10)

"BLD",943,"KRN",9.8,"NM","B","ECXFTRAN",11)

"BLD",943,"KRN",9.8,"NM","B","ECXINPRE",78)

"BLD",943,"KRN",9.8,"NM","B","ECXKILL",79)

"BLD",943,"KRN",9.8,"NM","B","ECXLAB1",16)

"BLD",943,"KRN",9.8,"NM","B","ECXLABN",17)

"BLD",943,"KRN",9.8,"NM","B","ECXLABO",18)

"BLD",943,"KRN",9.8,"NM","B","ECXLABPI",19)

"BLD",943,"KRN",9.8,"NM","B","ECXLABR",20)

"BLD",943,"KRN",9.8,"NM","B","ECXLABRS",21)

"BLD",943,"KRN",9.8,"NM","B","ECXLARP",22)

"BLD",943,"KRN",9.8,"NM","B","ECXMDELE",23)

"BLD",943,"KRN",9.8,"NM","B","ECXMOV",24)

"BLD",943,"KRN",9.8,"NM","B","ECXNDC",25)

"BLD",943,"KRN",9.8,"NM","B","ECXNTEG",26)

"BLD",943,"KRN",9.8,"NM","B","ECXNUAUD",27)

"BLD",943,"KRN",9.8,"NM","B","ECXNURS",28)

"BLD",943,"KRN",9.8,"NM","B","ECXOPRX",29)

"BLD",943,"KRN",9.8,"NM","B","ECXPAI",30)

"BLD",943,"KRN",9.8,"NM","B","ECXPCT",31)

"BLD",943,"KRN",9.8,"NM","B","ECXPIV1",32)

"BLD",943,"KRN",9.8,"NM","B","ECXPIVD",33)

"BLD",943,"KRN",9.8,"NM","B","ECXPIVDN",34)

"BLD",943,"KRN",9.8,"NM","B","ECXPURG",35)

"BLD",943,"KRN",9.8,"NM","B","ECXPURG1",36)

"BLD",943,"KRN",9.8,"NM","B","ECXQSR",37)

"BLD",943,"KRN",9.8,"NM","B","ECXQSRV",38)

"BLD",943,"KRN",9.8,"NM","B","ECXRAD",39)

"BLD",943,"KRN",9.8,"NM","B","ECXSADEN",40)

"BLD",943,"KRN",9.8,"NM","B","ECXSARAD",41)

"BLD",943,"KRN",9.8,"NM","B","ECXSARXS",42)

"BLD",943,"KRN",9.8,"NM","B","ECXSASUR",43)

"BLD",943,"KRN",9.8,"NM","B","ECXSCLD",44)

"BLD",943,"KRN",9.8,"NM","B","ECXSCNS",45)

"BLD",943,"KRN",9.8,"NM","B","ECXSCX",46)

"BLD",943,"KRN",9.8,"NM","B","ECXSCX1",47)

"BLD",943,"KRN",9.8,"NM","B","ECXSETU1",48)

"BLD",943,"KRN",9.8,"NM","B","ECXSETUP",49)

"BLD",943,"KRN",9.8,"NM","B","ECXSURG",50)

"BLD",943,"KRN",9.8,"NM","B","ECXTAUTO",51)

"BLD",943,"KRN",9.8,"NM","B","ECXTLOCL",52)

"BLD",943,"KRN",9.8,"NM","B","ECXTRAC",53)

"BLD",943,"KRN",9.8,"NM","B","ECXTRANS",54)

"BLD",943,"KRN",9.8,"NM","B","ECXTRT",55)

"BLD",943,"KRN",9.8,"NM","B","ECXTRYIT",56)

"BLD",943,"KRN",9.8,"NM","B","ECXUD",57)

"BLD",943,"KRN",9.8,"NM","B","ECXUD1",58)

"BLD",943,"KRN",9.8,"NM","B","ECXUTL",76)

"BLD",943,"KRN",9.8,"NM","B","ECXUTLA",77)

"BLD",943,"KRN",9.8,"NM","B","ECXWRD",59)

"BLD",943,"KRN",9.8,"NM","B","ECXXREV",60)

"BLD",943,"KRN",19,0)
19
"BLD",943,"KRN",19,"NM",0)
^9.68A^65^65
"BLD",943,"KRN",19,"NM",1,0)
ECX ADM SOURCE AUDIT^^0
"BLD",943,"KRN",19,"NM",2,0)
ECX DEN SOURCE AUDIT^^0
"BLD",943,"KRN",19,"NM",3,0)
ECX ECS SOURCE AUDIT^^0
"BLD",943,"KRN",19,"NM",4,0)
ECX EXTRACT LOG REVIEW^^0
"BLD",943,"KRN",19,"NM",5,0)
ECX EXTRACT LOG SUMMARY^^0
"BLD",943,"KRN",19,"NM",6,0)
ECX IV DIV EDIT^^0
"BLD",943,"KRN",19,"NM",7,0)
ECX IV DIV PRINT^^0
"BLD",943,"KRN",19,"NM",8,0)
ECX LAB SOURCE AUDIT (PATIENT)^^0
"BLD",943,"KRN",19,"NM",9)
^^^
"BLD",943,"KRN",19,"NM",9,0)
ECX LAB SOURCE AUDIT (RSCH)^^1
"BLD",943,"KRN",19,"NM",10,0)
ECX MAINTENANCE^^3
"BLD",943,"KRN",19,"NM",11,0)
ECX MOV SOURCE AUDIT^^0
"BLD",943,"KRN",19,"NM",12,0)
ECX NATIONAL CLINIC^^0
"BLD",943,"KRN",19,"NM",13,0)
ECX NUR SOURCE AUDIT^^0
"BLD",943,"KRN",19,"NM",14,0)
ECX PAI SOURCE AUDIT^^0
"BLD",943,"KRN",19,"NM",15,0)
ECX QSR SOURCE AUDIT^^0
"BLD",943,"KRN",19,"NM",16,0)
ECX RAD SOURCE AUDIT^^0
"BLD",943,"KRN",19,"NM",17,0)
ECX SAS AUDITS^^3
"BLD",943,"KRN",19,"NM",18,0)
ECX SAS DENTAL^^0
"BLD",943,"KRN",19,"NM",19,0)
ECX SAS PRESCRIPTION^^0
"BLD",943,"KRN",19,"NM",20,0)
ECX SAS RADIOLOGY^^0
"BLD",943,"KRN",19,"NM",21,0)
ECX SAS SURGERY^^0
"BLD",943,"KRN",19,"NM",22,0)
ECX SETUP CLINIC^^3
"BLD",943,"KRN",19,"NM",23,0)
ECX SETUP INP CENSUS^^3
"BLD",943,"KRN",19,"NM",24,0)
ECX SETUP INP MEDS^^3
"BLD",943,"KRN",19,"NM",25,0)
ECX SETUP LAB^^3
"BLD",943,"KRN",19,"NM",26,0)
ECX SOURCE AUDITS^^3
"BLD",943,"KRN",19,"NM",27,0)
ECX SUR SOURCE AUDIT^^0
"BLD",943,"KRN",19,"NM",28,0)
ECX TRANSMISSION^^3
"BLD",943,"KRN",19,"NM",29,0)
ECX TRT SOURCE AUDIT^^0
"BLD",943,"KRN",19,"NM",30,0)
ECXADM^^0
"BLD",943,"KRN",19,"NM",31,0)
ECXDEFINE^^0
"BLD",943,"KRN",19,"NM",32,0)
ECXDENT^^0
"BLD",943,"KRN",19,"NM",33,0)
ECXEC^^0
"BLD",943,"KRN",19,"NM",34,0)
ECXFEKEY^^0
"BLD",943,"KRN",19,"NM",35,0)
ECXFELOC^^0
"BLD",943,"KRN",19,"NM",36,0)
ECXIV^^0
"BLD",943,"KRN",19,"NM",37,0)
ECXLAB^^0
"BLD",943,"KRN",19,"NM",38,0)
ECXLABR^^0
"BLD",943,"KRN",19,"NM",39,0)
ECXLABRS^^0
"BLD",943,"KRN",19,"NM",40,0)
ECXLARP^^0
"BLD",943,"KRN",19,"NM",41,0)
ECXMDELE^^0
"BLD",943,"KRN",19,"NM",42,0)
ECXMENU^^3
"BLD",943,"KRN",19,"NM",43,0)
ECXMGR^^3
"BLD",943,"KRN",19,"NM",44,0)
ECXMOV^^0
"BLD",943,"KRN",19,"NM",45,0)
ECXNDC^^0
"BLD",943,"KRN",19,"NM",46,0)
ECXNURS^^0
"BLD",943,"KRN",19,"NM",47,0)
ECXPAI^^0
"BLD",943,"KRN",19,"NM",48,0)
ECXPCT^^0
"BLD",943,"KRN",19,"NM",49,0)
ECXPSO^^0
"BLD",943,"KRN",19,"NM",50,0)
ECXPURG^^0
"BLD",943,"KRN",19,"NM",51,0)
ECXQSR^^0
"BLD",943,"KRN",19,"NM",52,0)
ECXRAD^^0
"BLD",943,"KRN",19,"NM",53,0)
ECXSCAPPROV^^0
"BLD",943,"KRN",19,"NM",54,0)
ECXSCEDIT^^0
"BLD",943,"KRN",19,"NM",55,0)
ECXSCLIST^^0
"BLD",943,"KRN",19,"NM",56,0)
ECXSCLOAD^^0
"BLD",943,"KRN",19,"NM",57,0)
ECXSCNS^^0
"BLD",943,"KRN",19,"NM",58,0)
ECXSCX^^0
"BLD",943,"KRN",19,"NM",59,0)
ECXSETUP^^0
"BLD",943,"KRN",19,"NM",60,0)
ECXSURG^^0
"BLD",943,"KRN",19,"NM",61,0)
ECXTRANS^^0
"BLD",943,"KRN",19,"NM",62,0)
ECXTRT^^0
"BLD",943,"KRN",19,"NM",63,0)
ECXTRYIT^^0
"BLD",943,"KRN",19,"NM",64,0)
ECXUD^^0
"BLD",943,"KRN",19,"NM",65,0)
ECXWRD^^0
"BLD",943,"KRN",19,"NM","B","ECX ADM SOURCE AUDIT",1)

"BLD",943,"KRN",19,"NM","B","ECX DEN SOURCE AUDIT",2)

"BLD",943,"KRN",19,"NM","B","ECX ECS SOURCE AUDIT",3)

"BLD",943,"KRN",19,"NM","B","ECX EXTRACT LOG REVIEW",4)

"BLD",943,"KRN",19,"NM","B","ECX EXTRACT LOG SUMMARY",5)

"BLD",943,"KRN",19,"NM","B","ECX IV DIV EDIT",6)

"BLD",943,"KRN",19,"NM","B","ECX IV DIV PRINT",7)

"BLD",943,"KRN",19,"NM","B","ECX LAB SOURCE AUDIT (PATIENT)",8)

"BLD",943,"KRN",19,"NM","B","ECX LAB SOURCE AUDIT (RSCH)",9)

"BLD",943,"KRN",19,"NM","B","ECX MAINTENANCE",10)

"BLD",943,"KRN",19,"NM","B","ECX MOV SOURCE AUDIT",11)

"BLD",943,"KRN",19,"NM","B","ECX NATIONAL CLINIC",12)

"BLD",943,"KRN",19,"NM","B","ECX NUR SOURCE AUDIT",13)

"BLD",943,"KRN",19,"NM","B","ECX PAI SOURCE AUDIT",14)

"BLD",943,"KRN",19,"NM","B","ECX QSR SOURCE AUDIT",15)

"BLD",943,"KRN",19,"NM","B","ECX RAD SOURCE AUDIT",16)

"BLD",943,"KRN",19,"NM","B","ECX SAS AUDITS",17)

"BLD",943,"KRN",19,"NM","B","ECX SAS DENTAL",18)

"BLD",943,"KRN",19,"NM","B","ECX SAS PRESCRIPTION",19)

"BLD",943,"KRN",19,"NM","B","ECX SAS RADIOLOGY",20)

"BLD",943,"KRN",19,"NM","B","ECX SAS SURGERY",21)

"BLD",943,"KRN",19,"NM","B","ECX SETUP CLINIC",22)

"BLD",943,"KRN",19,"NM","B","ECX SETUP INP CENSUS",23)

"BLD",943,"KRN",19,"NM","B","ECX SETUP INP MEDS",24)

"BLD",943,"KRN",19,"NM","B","ECX SETUP LAB",25)

"BLD",943,"KRN",19,"NM","B","ECX SOURCE AUDITS",26)

"BLD",943,"KRN",19,"NM","B","ECX SUR SOURCE AUDIT",27)

"BLD",943,"KRN",19,"NM","B","ECX TRANSMISSION",28)

"BLD",943,"KRN",19,"NM","B","ECX TRT SOURCE AUDIT",29)

"BLD",943,"KRN",19,"NM","B","ECXADM",30)

"BLD",943,"KRN",19,"NM","B","ECXDEFINE",31)

"BLD",943,"KRN",19,"NM","B","ECXDENT",32)

"BLD",943,"KRN",19,"NM","B","ECXEC",33)

"BLD",943,"KRN",19,"NM","B","ECXFEKEY",34)

"BLD",943,"KRN",19,"NM","B","ECXFELOC",35)

"BLD",943,"KRN",19,"NM","B","ECXIV",36)

"BLD",943,"KRN",19,"NM","B","ECXLAB",37)

"BLD",943,"KRN",19,"NM","B","ECXLABR",38)

"BLD",943,"KRN",19,"NM","B","ECXLABRS",39)

"BLD",943,"KRN",19,"NM","B","ECXLARP",40)

"BLD",943,"KRN",19,"NM","B","ECXMDELE",41)

"BLD",943,"KRN",19,"NM","B","ECXMENU",42)

"BLD",943,"KRN",19,"NM","B","ECXMGR",43)

"BLD",943,"KRN",19,"NM","B","ECXMOV",44)

"BLD",943,"KRN",19,"NM","B","ECXNDC",45)

"BLD",943,"KRN",19,"NM","B","ECXNURS",46)

"BLD",943,"KRN",19,"NM","B","ECXPAI",47)

"BLD",943,"KRN",19,"NM","B","ECXPCT",48)

"BLD",943,"KRN",19,"NM","B","ECXPSO",49)

"BLD",943,"KRN",19,"NM","B","ECXPURG",50)

"BLD",943,"KRN",19,"NM","B","ECXQSR",51)

"BLD",943,"KRN",19,"NM","B","ECXRAD",52)

"BLD",943,"KRN",19,"NM","B","ECXSCAPPROV",53)

"BLD",943,"KRN",19,"NM","B","ECXSCEDIT",54)

"BLD",943,"KRN",19,"NM","B","ECXSCLIST",55)

"BLD",943,"KRN",19,"NM","B","ECXSCLOAD",56)

"BLD",943,"KRN",19,"NM","B","ECXSCNS",57)

"BLD",943,"KRN",19,"NM","B","ECXSCX",58)

"BLD",943,"KRN",19,"NM","B","ECXSETUP",59)

"BLD",943,"KRN",19,"NM","B","ECXSURG",60)

"BLD",943,"KRN",19,"NM","B","ECXTRANS",61)

"BLD",943,"KRN",19,"NM","B","ECXTRT",62)

"BLD",943,"KRN",19,"NM","B","ECXTRYIT",63)

"BLD",943,"KRN",19,"NM","B","ECXUD",64)

"BLD",943,"KRN",19,"NM","B","ECXWRD",65)

"BLD",943,"KRN",19.1,0)
19.1
"BLD",943,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",943,"KRN",19.1,"NM",1,0)
ECXMGR^^0
"BLD",943,"KRN",19.1,"NM","B","ECXMGR",1)

"BLD",943,"KRN",101,0)
101
"BLD",943,"KRN",409.61,0)
409.61
"BLD",943,"KRN",771,0)
771
"BLD",943,"KRN",869.2,0)
869.2
"BLD",943,"KRN",870,0)
870
"BLD",943,"KRN",8994,0)
8994
"BLD",943,"KRN","B",.4,.4)

"BLD",943,"KRN","B",.401,.401)

"BLD",943,"KRN","B",.402,.402)

"BLD",943,"KRN","B",.403,.403)

"BLD",943,"KRN","B",.5,.5)

"BLD",943,"KRN","B",.84,.84)

"BLD",943,"KRN","B",3.6,3.6)

"BLD",943,"KRN","B",3.8,3.8)

"BLD",943,"KRN","B",9.2,9.2)

"BLD",943,"KRN","B",9.8,9.8)

"BLD",943,"KRN","B",19,19)

"BLD",943,"KRN","B",19.1,19.1)

"BLD",943,"KRN","B",101,101)

"BLD",943,"KRN","B",409.61,409.61)

"BLD",943,"KRN","B",771,771)

"BLD",943,"KRN","B",869.2,869.2)

"BLD",943,"KRN","B",870,870)

"BLD",943,"KRN","B",8994,8994)

"BLD",943,"PRE")
ECXINENV
"BLD",943,"QUES",0)
^9.62^^
"BLD",943,"REQB",0)
^9.611^3^3
"BLD",943,"REQB",1,0)
EC*2.0*5^1
"BLD",943,"REQB",2,0)
EC*2.0*6^1
"BLD",943,"REQB",3,0)
EVENT CAPTURE 2.0^1
"BLD",943,"REQB","B","EC*2.0*5",1)

"BLD",943,"REQB","B","EC*2.0*6",2)

"BLD",943,"REQB","B","EVENT CAPTURE 2.0",3)

"DATA",727.1,1,0)
ADMISSIONS^727.802^^^^1^Admission^ADM^ADMS
"DATA",727.1,1,1,0)
^^34^34^2971218^^^^
"DATA",727.1,1,1,1,0)
   
"DATA",727.1,1,1,2,0)
Verify against: Gains and Losses Sheet/Bed Status Report
"DATA",727.1,1,1,3,0)
Menu Option:    Gains and Losses (G&L) Sheet [DG G&L SHEET]
"DATA",727.1,1,1,4,0)
 
"DATA",727.1,1,1,5,0)
The Gains and Losses Sheet is the primary VistA report against which ADM
"DATA",727.1,1,1,6,0)
extract data should be verified.  However, if starting the verification
"DATA",727.1,1,1,7,0)
process at the beginning of the fiscal year, the Bed Status Report can also
"DATA",727.1,1,1,8,0)
be used.  Copies of these reports are readily available from patient
"DATA",727.1,1,1,9,0)
administration services at most medical centers.
"DATA",727.1,1,1,10,0)
   
"DATA",727.1,1,1,11,0)
The G&L Sheet shows admissions by ward for a specific day.  To verify the
"DATA",727.1,1,1,12,0)
data on the extract audit report, the verifier must accumulate the data
"DATA",727.1,1,1,13,0)
given on the G&L Sheet  either manually or through use of a spreadsheet
"DATA",727.1,1,1,14,0)
application. For example, if the Admission Extract Audit Report covers
"DATA",727.1,1,1,15,0)
the period July 1 to July 15, then accumulate the admission data from the
"DATA",727.1,1,1,16,0)
G&L Sheet for each day from July 1 through July 15.  The accumulated data
"DATA",727.1,1,1,17,0)
for a given ward (e.g.,total number of admissions for Ward A during the
"DATA",727.1,1,1,18,0)
period) should match the figure reported on the extract audit for the same
"DATA",727.1,1,1,19,0)
ward and date range.
"DATA",727.1,1,1,20,0)
 
"DATA",727.1,1,1,21,0)
If verification is done through the Bed Status Report, simply use the
"DATA",727.1,1,1,22,0)
"Cumulative Totals" table which displays fiscal year-to-date totals of
"DATA",727.1,1,1,23,0)
interward losses and discharges by ward group.  The Admission (ADM) Extract
"DATA",727.1,1,1,24,0)
Audit also displays totals by ward group.  Some arithmetic manipulation is
"DATA",727.1,1,1,25,0)
needed here in order to compare the figures on the two reports.  For
"DATA",727.1,1,1,26,0)
example, to verify data for the month of July, the user must first develop
"DATA",727.1,1,1,27,0)
a "Cumulative Totals" table for the month of July.  This is done by
"DATA",727.1,1,1,28,0)
subtracting the figures contained in the "Cumulative Totals" table of
"DATA",727.1,1,1,29,0)
June 30 from the figures contained in the "Cumulative Totals" table of
"DATA",727.1,1,1,30,0)
July 31.  (Again, this can be accomplished manually, or with the aid of a
"DATA",727.1,1,1,31,0)
spreadsheet application.)  The resulting month of July table can then be
"DATA",727.1,1,1,32,0)
compared directly to the ward group totals shown on the extract audit
"DATA",727.1,1,1,33,0)
report generated for the period July 1 to July 31.
"DATA",727.1,1,1,34,0)
 
"DATA",727.1,1,"ROU")
ECXADM
"DATA",727.1,2,0)
CLINIC^727.803^^^^^Clinic^CLI^SCX
"DATA",727.1,2,"ROU")
ECXSCX
"DATA",727.1,3,0)
CLINIC NOSHOW^727.804^^^^^Clinic no show^NOS^SCNS
"DATA",727.1,3,"ROU")
ECXSCNS
"DATA",727.1,4,0)
NURSING^727.805^^^^^Nursing^NUR^NURS
"DATA",727.1,4,1,0)
^^21^21^2971107^^^
"DATA",727.1,4,1,1,0)
  
"DATA",727.1,4,1,2,0)
Verify against: Report 10-1106 Segment 200, Cumulative Daily
"DATA",727.1,4,1,3,0)
                 Patient Classification Data
"DATA",727.1,4,1,4,0)
Menu option:    Patient Category Totals-Midnight Acuity Reports
"DATA",727.1,4,1,5,0)
                [NURAPR-RES-MDPC]
"DATA",727.1,4,1,6,0)
  
"DATA",727.1,4,1,7,0)
The report against which to verify NUR extract audit data is the VistA 
"DATA",727.1,4,1,8,0)
Nursing application's Report 10-1106 Segment 200, Cumulative Daily Patient
"DATA",727.1,4,1,9,0)
Classification Data report.  However, it is possible that the figures shown
"DATA",727.1,4,1,10,0)
on this report may not exactly match those on the Nursing (NUR) Extract
"DATA",727.1,4,1,11,0)
Audit Report.  The reason for this is that the DSS Nursing extract does not
"DATA",727.1,4,1,12,0)
include classification data for any patient discharged or transferred on
"DATA",727.1,4,1,13,0)
the same day, but after the classification took place.  So the figures on
"DATA",727.1,4,1,14,0)
the NUR extract report may occassionally be slightly lower for some Nursing
"DATA",727.1,4,1,15,0)
locations. 
"DATA",727.1,4,1,16,0)
  
"DATA",727.1,4,1,17,0)
It is recommended that the Cumulative Daily Patient Classification Data
"DATA",727.1,4,1,18,0)
report be generated for an entire month for each Nursing Location.  Both
"DATA",727.1,4,1,19,0)
the Cumulative Daily Patient Classification Data and the Nursing (NUR)
"DATA",727.1,4,1,20,0)
Extract Audit Report list classification totals by Nursing Bedsection
"DATA",727.1,4,1,21,0)
within each Nursing Location.
"DATA",727.1,4,"ROU")
ECXNURS
"DATA",727.1,5,0)
DENTAL^727.806^^^^^Dental^DEN^DENT
"DATA",727.1,5,1,0)
^^24^24^2971107^^^^
"DATA",727.1,5,1,1,0)
   
"DATA",727.1,5,1,2,0)
Verify against: Dental Service Treatment Report - Summary Report for Clinic
"DATA",727.1,5,1,3,0)
Menu Option:    Clinic Summary [DENTTREATCLINIC RPT]
"DATA",727.1,5,1,4,0)
 
"DATA",727.1,5,1,5,0)
The Dental Extract Audit Report should be run for each site/division
"DATA",727.1,5,1,6,0)
defined by the VistA DENTAL application site parameters.  It can be
"DATA",727.1,5,1,7,0)
verified against the Dental Service Treatment Report - Summary Report
"DATA",727.1,5,1,8,0)
for Clinic generated for the same site/division and date range.  Use the
"DATA",727.1,5,1,9,0)
first page of the Summary Report for Clinic and add-up (either manually
"DATA",727.1,5,1,10,0)
or through a spreadsheet application) the totals shown for a particular
"DATA",727.1,5,1,11,0)
procedure in each of the inpatient/outpatient dental categories.  This
"DATA",727.1,5,1,12,0)
total (across all dental categories) should match the total for that
"DATA",727.1,5,1,13,0)
procedure shown on the Dental Extract Audit Report.
"DATA",727.1,5,1,14,0)
  
"DATA",727.1,5,1,15,0)
Be sure that the extract audit report and the Dental clinic summary
"DATA",727.1,5,1,16,0)
report being compared are reporting data from the same division and date
"DATA",727.1,5,1,17,0)
range.  Both reports show this information in the report header.
"DATA",727.1,5,1,18,0)
  
"DATA",727.1,5,1,19,0)
The Dental Service Treatment Report - Summary Report for Clinic is
"DATA",727.1,5,1,20,0)
routinely generated by Dental Service administrative staff at most medical
"DATA",727.1,5,1,21,0)
centers, so a copy of the report should be easily obtainable. Please note
"DATA",727.1,5,1,22,0)
that (1) not all dental procedures appear on the extract audit report,
"DATA",727.1,5,1,23,0)
and (2) the Summary Report for Clinic only shows the first 20 characters
"DATA",727.1,5,1,24,0)
of the procedure name.
"DATA",727.1,5,"ROU")
ECXDENT
"DATA",727.1,7,0)
PHYSICAL MOVEMENT^727.808^^^^^Movement^MOV^MOVS
"DATA",727.1,7,1,0)
^^67^67^2971222^^^^
"DATA",727.1,7,1,1,0)
 
"DATA",727.1,7,1,2,0)
Verify against: Gains & Losses Sheet/Bed Status Report
"DATA",727.1,7,1,3,0)
Menu Option:    Gains and Losses (G&L) Sheet [DG G&L SHEET]
"DATA",727.1,7,1,4,0)
 
"DATA",727.1,7,1,5,0)
The Gains and Losses Sheet is the primary VistA report against which MOV
"DATA",727.1,7,1,6,0)
extract data should be verified.  However, if starting the verification
"DATA",727.1,7,1,7,0)
process at the beginning of the fiscal year, the Bed Status Report can
"DATA",727.1,7,1,8,0)
also be used.  Copies of these reports are readily available from patient
"DATA",727.1,7,1,9,0)
administration services at most medical centers.
"DATA",727.1,7,1,10,0)
  
"DATA",727.1,7,1,11,0)
The G&L Sheet shows interward transfers and discharges by ward for a
"DATA",727.1,7,1,12,0)
specific day.  To verify the data on the extract audit report, the 
"DATA",727.1,7,1,13,0)
verifier must accumulate the data given on the G&L Sheet either 
"DATA",727.1,7,1,14,0)
manually or through use of a spreadsheet application. For example,
"DATA",727.1,7,1,15,0)
if the Movement (MOV) Extract Audit Report covers the period July 1
"DATA",727.1,7,1,16,0)
to July 15, then accumulate the transfer and discharge data from the
"DATA",727.1,7,1,17,0)
G&L Sheet for each day from July 1 through July 15.  The accumulated
"DATA",727.1,7,1,18,0)
data for a given ward (e.g.,total number of transfers out and total
"DATA",727.1,7,1,19,0)
number of discharges for Ward A during the period) should match 
"DATA",727.1,7,1,20,0)
the figures reported on the extract audit for the same ward and
"DATA",727.1,7,1,21,0)
date range.
"DATA",727.1,7,1,22,0)
  
"DATA",727.1,7,1,23,0)
Please note that the Movement (MOV) Extract Audit Report shows a
"DATA",727.1,7,1,24,0)
detailed break-out of both transfers and discharges by movement type.
"DATA",727.1,7,1,25,0)
Individual totals by movement type are listed for each ward, thereby
"DATA",727.1,7,1,26,0)
enabling the user to verify data with much specificity.  If the user
"DATA",727.1,7,1,27,0)
does not care to verify data to this level of detail, then the figure
"DATA",727.1,7,1,28,0)
in the last column of each row should be used.  This figure represents
"DATA",727.1,7,1,29,0)
the total number of transfers or discharges of all types for a given
"DATA",727.1,7,1,30,0)
ward during the date range selected.  The section of the MOV Extract
"DATA",727.1,7,1,31,0)
Audit Report which shows MAS Movement (Transfer) Types is reporting
"DATA",727.1,7,1,32,0)
number of interward transfer losses for each ward.
"DATA",727.1,7,1,33,0)
  
"DATA",727.1,7,1,34,0)
If verification is done through the Bed Status Report, simply use the
"DATA",727.1,7,1,35,0)
"Cumulative Totals" table which displays fiscal year-to-date totals of
"DATA",727.1,7,1,36,0)
interward losses and discharges by ward group.  The Movement (MOV) Extract
"DATA",727.1,7,1,37,0)
Audit also displays totals by ward group.  Some arithmetic manipulation is
"DATA",727.1,7,1,38,0)
needed here in order to compare the figures on the two reports.  For
"DATA",727.1,7,1,39,0)
example, to verify data for the month of July, the user must first develop
"DATA",727.1,7,1,40,0)
a "Cumulative Totals" table for the month of July.  This is done by
"DATA",727.1,7,1,41,0)
subtracting the figures contained in the "Cumulative Totals" table of
"DATA",727.1,7,1,42,0)
June 30 from the figures contained in the "Cumulative Totals" table of
"DATA",727.1,7,1,43,0)
July 31 for the appropriate fiscal year.  (Again, this can be accomplished
"DATA",727.1,7,1,44,0)
manually, or with the aid of a spreadsheet application.)  The resulting
"DATA",727.1,7,1,45,0)
Cumulative Totals table can now be compared to your MOV Extract Audit
"DATA",727.1,7,1,46,0)
Report for the period July 1 to July 31.
"DATA",727.1,7,1,47,0)
  
"DATA",727.1,7,1,48,0)
When verifying the totals for discharge movements, you can directly
"DATA",727.1,7,1,49,0)
compare the total number of discharges shown in the last column for each
"DATA",727.1,7,1,50,0)
ward group on the MOV Extract Audit Report to the total discharges for
"DATA",727.1,7,1,51,0)
that same ward group on the Cumulative Totals table.
"DATA",727.1,7,1,52,0)
  
"DATA",727.1,7,1,53,0)
When verifying the total for transfer movements, the method of comparison
"DATA",727.1,7,1,54,0)
will depend on whether your site has NHCU wards.  The presence of NHCU
"DATA",727.1,7,1,55,0)
wards means that there may be ASIH movements which will not be reflected
"DATA",727.1,7,1,56,0)
in the total interward losses shown on the Cumulative Totals table.
"DATA",727.1,7,1,57,0)
  
"DATA",727.1,7,1,58,0)
   (1) If your site does not have NHCU wards, you can directly compare
"DATA",727.1,7,1,59,0)
       the total number of transfers shown in the last column for each
"DATA",727.1,7,1,60,0)
       ward group on the MOV Extract Audit Report to the total interward
"DATA",727.1,7,1,61,0)
       losses for that same ward group on the Cumulative Totals table.
"DATA",727.1,7,1,62,0)
  
"DATA",727.1,7,1,63,0)
   (2) If your site does have NHCU wards, you should directly compare
"DATA",727.1,7,1,64,0)
       the total number of interward transfers (i.e., MAS Movement Type
"DATA",727.1,7,1,65,0)
       is 4) shown in the fourth column for each ward group on the
"DATA",727.1,7,1,66,0)
       MOV Extract Audit Report to the total interward losses for that
"DATA",727.1,7,1,67,0)
       same ward group on the Cumulative Totals table.
"DATA",727.1,7,"ROU")
ECXMOV
"DATA",727.1,8,0)
UNIT DOSE^727.809^^^^^Unit Dose^UDP^UD
"DATA",727.1,8,"ROU")
ECXUD
"DATA",727.1,9,0)
PRESCRIPTION^727.81^^^^^Prescription^PRE^PRES
"DATA",727.1,9,"ROU")
ECXOPRX
"DATA",727.1,10,0)
SURGERY^727.811^^^^^Surgery^SUR^SURG
"DATA",727.1,10,1,0)
^^34^34^2971222^^^
"DATA",727.1,10,1,1,0)
  
"DATA",727.1,10,1,2,0)
Verify against: Surgical Service Cumulative Report of CPT Codes
"DATA",727.1,10,1,3,0)
Menu option:    Cumulative Report of CPT Codes [SROACCT]
"DATA",727.1,10,1,4,0)
  
"DATA",727.1,10,1,5,0)
The Surgery (SUR) Extract Audit Report may be verified against the Surgical
"DATA",727.1,10,1,6,0)
Service Cumulative Report of CPT Codes found in the VistA Surgery package.
"DATA",727.1,10,1,7,0)
  
"DATA",727.1,10,1,8,0)
It should be noted that the report from the Surgery application package
"DATA",727.1,10,1,9,0)
combines data from all Surgery sites/divisions for its CPT code listing.
"DATA",727.1,10,1,10,0)
The SUR extract audit report, on the other hand, organizes and prints 
"DATA",727.1,10,1,11,0)
procedure data by Surgery site/division.  
"DATA",727.1,10,1,12,0)
  
"DATA",727.1,10,1,13,0)
When generating the Cumulative Report of CPT Codes, generate one report
"DATA",727.1,10,1,14,0)
for O.R. Surgical Procedures and another for Non-O.R. Procedures.  If the
"DATA",727.1,10,1,15,0)
facility has multiple Surgery sites (i.e., the SURGERY SITE PARAMETERS
"DATA",727.1,10,1,16,0)
file (#133) has more than one entry), then for any given procedure the 
"DATA",727.1,10,1,17,0)
total from each divisional extract audit report must be added together
"DATA",727.1,10,1,18,0)
to get the total appearing on the Cumulative Report of CPT Codes.  Be sure
"DATA",727.1,10,1,19,0)
that both the SUR extract audit report and the Cumulative Report of CPT
"DATA",727.1,10,1,20,0)
Codes are generated for the same date range.
"DATA",727.1,10,1,21,0)
 
"DATA",727.1,10,1,22,0)
Also note that adding together the Total O.R. Surgical Procedures and
"DATA",727.1,10,1,23,0)
the Total Non-O.R. Surgical Procedures across all Surgery Divisions
"DATA",727.1,10,1,24,0)
appearing on the SUR Extract Audit Report may not equal the total number
"DATA",727.1,10,1,25,0)
of extract records.  This is because the SUR Extract Audit Report does
"DATA",727.1,10,1,26,0)
not include the "Implant" extract records which normally do not have
"DATA",727.1,10,1,27,0)
CPT codes associated with them.
"DATA",727.1,10,1,28,0)
 
"DATA",727.1,10,1,29,0)
If you able to run a FileMan print (or search), you can find all the
"DATA",727.1,10,1,30,0)
"Implant" records by looking for those records in file #727.811 with
"DATA",727.1,10,1,31,0)
a PRIMARY/SECONDARY/PROSTHETICS field (#16) set to "I".  The total
"DATA",727.1,10,1,32,0)
number of "Implant" records plus the totals from the SUR Extract
"DATA",727.1,10,1,33,0)
Audit Report should now equal the total number of records in the
"DATA",727.1,10,1,34,0)
SUR extract.
"DATA",727.1,10,"ROU")
ECXSURG
"DATA",727.1,12,0)
LABORATORY^727.813^^^^^Laboratory^LAB^LAB
"DATA",727.1,12,1,0)
64^^138^138^2971216^^^^
"DATA",727.1,12,1,1,0)
 
"DATA",727.1,12,1,2,0)
Verify against: Workload Statistics by Accession Area and Shifts
"DATA",727.1,12,1,3,0)
Menu Option:    Workload statistics by accession area and shift [LRRP8]
"DATA",727.1,12,1,4,0)
 
"DATA",727.1,12,1,5,0)
The VistA LAB report recommended for verification of DSS LAB extract data
"DATA",727.1,12,1,6,0)
is the Workload Statistics by Accession Area and Shifts report.  This report
"DATA",727.1,12,1,7,0)
is only available to those Laboratory services that utilize LMIP codes
"DATA",727.1,12,1,8,0)
for workload reporting.  A copy of this report can be obtained from the
"DATA",727.1,12,1,9,0)
Laboratory Service administrator or LAB ADPAC at most VA medical centers.
"DATA",727.1,12,1,10,0)
  
"DATA",727.1,12,1,11,0)
Confirm that the LAB Workload Statistics by Accession Area and Shifts report
"DATA",727.1,12,1,12,0)
was generated using parameters similar to those outlined here:
"DATA",727.1,12,1,13,0)
  
"DATA",727.1,12,1,14,0)
  
"DATA",727.1,12,1,15,0)
  Workload statistics by accession area and shift
"DATA",727.1,12,1,16,0)
  
"DATA",727.1,12,1,17,0)
  PRINT THE COMMENT PAGES?  NO//
"DATA",727.1,12,1,18,0)
  
"DATA",727.1,12,1,19,0)
  Select WKLD DATA INSTITUTION: ?                
"DATA",727.1,12,1,20,0)
   Answer with WKLD DATA NUMBER, or INSTITUTION        
"DATA",727.1,12,1,21,0)
  Choose from:                                         
"DATA",727.1,12,1,22,0)
     500             ALBANY                            
"DATA",727.1,12,1,23,0)
     11000           ISC REGION 1
"DATA",727.1,12,1,24,0)
     
"DATA",727.1,12,1,25,0)
  Select WKLD DATA INSTITUTION: ALBANY      NY             VAMC      500
"DATA",727.1,12,1,26,0)
  
"DATA",727.1,12,1,27,0)
       Select one of the following:
"DATA",727.1,12,1,28,0)
  
"DATA",727.1,12,1,29,0)
            Y         YES
"DATA",727.1,12,1,30,0)
            N         NO
"DATA",727.1,12,1,31,0)
  
"DATA",727.1,12,1,32,0)
  Do you want to select accession areas (YES or NO) : NO// YES
"DATA",727.1,12,1,33,0)
  Select ACCESSION AREA: CHEMISTRY      
"DATA",727.1,12,1,34,0)
  Select ACCESSION AREA: 
"DATA",727.1,12,1,35,0)
  DATE selection:
"DATA",727.1,12,1,36,0)
  
"DATA",727.1,12,1,37,0)
       Select one of the following:
"DATA",727.1,12,1,38,0)
  
"DATA",727.1,12,1,39,0)
            1         A specific date
"DATA",727.1,12,1,40,0)
            2         A range of dates
"DATA",727.1,12,1,41,0)
  
"DATA",727.1,12,1,42,0)
  Enter response: 2  A range of dates
"DATA",727.1,12,1,43,0)
  Date to START with: TODAY//7 1 97  (JUL 01, 1997)
"DATA",727.1,12,1,44,0)
  Date to END  with: LAST//7 31 97  (JUL 31, 1997)
"DATA",727.1,12,1,45,0)
  
"DATA",727.1,12,1,46,0)
       Select one of the following:
"DATA",727.1,12,1,47,0)
  
"DATA",727.1,12,1,48,0)
            Y         YES
"DATA",727.1,12,1,49,0)
            N         NO
"DATA",727.1,12,1,50,0)
  
"DATA",727.1,12,1,51,0)
  Do you want to select workload codes (YES or NO) : NO// 
"DATA",727.1,12,1,52,0)
  TIME selection:
"DATA",727.1,12,1,53,0)
  
"DATA",727.1,12,1,54,0)
       Select one of the following:
"DATA",727.1,12,1,55,0)
  
"DATA",727.1,12,1,56,0)
            1         A time range
"DATA",727.1,12,1,57,0)
            2         A set of shifts
"DATA",727.1,12,1,58,0)
  
"DATA",727.1,12,1,59,0)
  Enter response: 1  A time range
"DATA",727.1,12,1,60,0)
  Enter TIME RANGE in military format HHMM.SS (0.00 - 2400.00):
"DATA",727.1,12,1,61,0)
  START time: :  (0.00-2400.00): 0
"DATA",727.1,12,1,62,0)
  STOP time: :  (0.00-2400.00): 2400
"DATA",727.1,12,1,63,0)
  REPORT selection:
"DATA",727.1,12,1,64,0)
  
"DATA",727.1,12,1,65,0)
       Select one of the following:
"DATA",727.1,12,1,66,0)
  
"DATA",727.1,12,1,67,0)
            1         Detail report
"DATA",727.1,12,1,68,0)
            2         Summary report
"DATA",727.1,12,1,69,0)
  
"DATA",727.1,12,1,70,0)
  Enter response: 1  Detail report
"DATA",727.1,12,1,71,0)
  DEVICE: HOME// A138
"DATA",727.1,12,1,72,0)
   
"DATA",727.1,12,1,73,0)
  
"DATA",727.1,12,1,74,0)
Remember, if the facility has more than one Institution indentified in 
"DATA",727.1,12,1,75,0)
the WKLD DATA file (#64.1), a report for each must be generated.  If the
"DATA",727.1,12,1,76,0)
same Accession Area and procedures appear on more than one Institution's
"DATA",727.1,12,1,77,0)
workload statistics report, then the count from each for a given procedure
"DATA",727.1,12,1,78,0)
must be added together to compare with the figure on the LAB extract
"DATA",727.1,12,1,79,0)
audit report.
"DATA",727.1,12,1,80,0)
  
"DATA",727.1,12,1,81,0)
The workload statistics report can be many pages, so it is advisable to
"DATA",727.1,12,1,82,0)
limit it to a selected Accession Area for which data is being seen on the 
"DATA",727.1,12,1,83,0)
Laboratory (LAB) Extract Audit Report.  Be sure that the date range for
"DATA",727.1,12,1,84,0)
this workload statistics report is the same as the date range on the 
"DATA",727.1,12,1,85,0)
DSS LAB extract audit report.
"DATA",727.1,12,1,86,0)
   
"DATA",727.1,12,1,87,0)
It is also important to remember that these two reports will never show
"DATA",727.1,12,1,88,0)
a 100% correspondence in the totals reported.  This is because the 
"DATA",727.1,12,1,89,0)
workload statistics report is generated by procedure completion date,
"DATA",727.1,12,1,90,0)
whereas the LAB extract is essentially generated by specimen collection
"DATA",727.1,12,1,91,0)
date.  The LAB extract uses the specimen collection date because the
"DATA",727.1,12,1,92,0)
data extracted and sent to AAC must be correlated with patient encounter
"DATA",727.1,12,1,93,0)
data in order to produce the correct costing analysis.  And the specimen
"DATA",727.1,12,1,94,0)
collection date is always closely related to the encounter date.
"DATA",727.1,12,1,95,0)
 
"DATA",727.1,12,1,96,0)
In order to minimize the discrepancies between the two reports for
"DATA",727.1,12,1,97,0)
verification purposes, generate the reports for the full month.  Use
"DATA",727.1,12,1,98,0)
a start date of the first of the month, and an end date of the last day
"DATA",727.1,12,1,99,0)
of the month for both reports.  Narrowing the date range will cause
"DATA",727.1,12,1,100,0)
more and larger discrepancies to be seen.  However, there will be some
"DATA",727.1,12,1,101,0)
Lab procedures which always display differences in the totals shown
"DATA",727.1,12,1,102,0)
on these reports.  These procedures are those which frequently have
"DATA",727.1,12,1,103,0)
significant lag (i.e., greater than 30 days) between specimen collection
"DATA",727.1,12,1,104,0)
and test completion.
"DATA",727.1,12,1,105,0)
  
"DATA",727.1,12,1,106,0)
In order to be included in a DSS LAB extract, a lab procedure/test
"DATA",727.1,12,1,107,0)
must have an associated WKLD Code which satisfies at least one of the
"DATA",727.1,12,1,108,0)
following criteria:
"DATA",727.1,12,1,109,0)
   
"DATA",727.1,12,1,110,0)
  (1) The last 4 digits (after the decimal point) of the WKLD Code
"DATA",727.1,12,1,111,0)
      are "9999".
"DATA",727.1,12,1,112,0)
  
"DATA",727.1,12,1,113,0)
  (2) The first digit after the decimal of the WKLD Code is "8".
"DATA",727.1,12,1,114,0)
  
"DATA",727.1,12,1,115,0)
  (3) The WKLD Code is billable.  The BILLABLE PROCEDURE field
"DATA",727.1,12,1,116,0)
      (#4) for this WKLD Code entry in the WKLD CODE file (#64)
"DATA",727.1,12,1,117,0)
      is set to "YES".
"DATA",727.1,12,1,118,0)
  
"DATA",727.1,12,1,119,0)
  (4) The WKLD Code is marked as a DSS feeder key.  The DSS Feeder
"DATA",727.1,12,1,120,0)
      Key field (#14) for this WKLD Code entry in the WKLD CODE 
"DATA",727.1,12,1,121,0)
      file (#64) is set to "YES".
"DATA",727.1,12,1,122,0)
  
"DATA",727.1,12,1,123,0)
So there may be many more LMIP codes appearing on the workload statistics
"DATA",727.1,12,1,124,0)
report than on the extract audit report for a given Accession Area.
"DATA",727.1,12,1,125,0)
Verify extract data by comparing totals for each procedure/LMIP code
"DATA",727.1,12,1,126,0)
appearing on the extract audit report with the total for the same 
"DATA",727.1,12,1,127,0)
procedure/LMIP code on the Laboratory workload statistics report.
"DATA",727.1,12,1,128,0)
Also, verify that each procedure/LMIP code which satisfies criteria
"DATA",727.1,12,1,129,0)
(1) or (2) on the workload statistics report also appears on the LAB
"DATA",727.1,12,1,130,0)
extract audit report.
"DATA",727.1,12,1,131,0)
 
"DATA",727.1,12,1,132,0)
Remember, since the LAB extract is based on specimen collection date
"DATA",727.1,12,1,133,0)
rather than test completion (workload) date, it will not be unusual to
"DATA",727.1,12,1,134,0)
see small differences in the totals reported for a given procedure.
"DATA",727.1,12,1,135,0)
Procedures which consistently show a significantly lower total on the
"DATA",727.1,12,1,136,0)
LAB extract audit report than on the workload statistics report are
"DATA",727.1,12,1,137,0)
probably procedures which frequently have a large lag between date
"DATA",727.1,12,1,138,0)
of specimen collection and date of workload reporting.
"DATA",727.1,12,"ROU")
ECXLAB1
"DATA",727.1,13,0)
RADIOLOGY^727.814^^^^^Radiology^RAD^RAD
"DATA",727.1,13,1,0)
^^33^33^2971215^^^^
"DATA",727.1,13,1,1,0)
   
"DATA",727.1,13,1,2,0)
Verify against: Procedure/CPT Statistics Report, Inpatient
"DATA",727.1,13,1,3,0)
                Procedure/CPT Statistics Report, Outpatient
"DATA",727.1,13,1,4,0)
Menu Option:    Procedure/CPT Statistics Report [RA CPTSTATS]
"DATA",727.1,13,1,5,0)
 
"DATA",727.1,13,1,6,0)
The Procedure/CPT Statistics Report for Radiology is the primary VistA
"DATA",727.1,13,1,7,0)
report against which RAD extract data should be verified.  The Procedure/CPT
"DATA",727.1,13,1,8,0)
Statistics Report and the DSS Radiology (RAD) Extract Audit print data in
"DATA",727.1,13,1,9,0)
very similar formats, so verification of extract data should be a simple,
"DATA",727.1,13,1,10,0)
one-to-one process.  However, the totals by procedure shown on the RAD 
"DATA",727.1,13,1,11,0)
extract audit report may be lower in some cases.  This is because the
"DATA",727.1,13,1,12,0)
RAD extract data does not include cancelled exams or any other exam
"DATA",727.1,13,1,13,0)
where the EXAM STATUS field (#3) in the RAD/NUC MED PATIENT file (#70) 
"DATA",727.1,13,1,14,0)
has an ORDER field (#3) in the EXAMINATION STATUS file (#72) with a 
"DATA",727.1,13,1,15,0)
value of zero.  Comparing the two reports over a shorter time period will
"DATA",727.1,13,1,16,0)
help to minimize these differences.  (For example, instead of generating
"DATA",727.1,13,1,17,0)
each report for an entire month, use a 1-3 day date range.)
"DATA",727.1,13,1,18,0)
 
"DATA",727.1,13,1,19,0)
When generating each of these reports, the user may select the Radiology
"DATA",727.1,13,1,20,0)
division and the date range of the data to be included.  Both reports list
"DATA",727.1,13,1,21,0)
CPT procedures and the number of occurrences.  The procedures are grouped
"DATA",727.1,13,1,22,0)
by Radiology division and imaging type.  The Procedure/CPT Statistics Report
"DATA",727.1,13,1,23,0)
lists inpatient and outpatient data seperately, while the Radiology (RAD)
"DATA",727.1,13,1,24,0)
Extract Audit Report shows the inpatient and outpatient data side-by-side.
"DATA",727.1,13,1,25,0)
 
"DATA",727.1,13,1,26,0)
The extract audit report shows data for ALL procedures and imaging types
"DATA",727.1,13,1,27,0)
within the division(s) selected.  Therefore, the user should accept the
"DATA",727.1,13,1,28,0)
default answer to the following prompts when requesting the Procedure/CPT
"DATA",727.1,13,1,29,0)
Statistics Report:
"DATA",727.1,13,1,30,0)
 
"DATA",727.1,13,1,31,0)
   Select Imaging Type: All//  
"DATA",727.1,13,1,32,0)
  
"DATA",727.1,13,1,33,0)
   Do you wish to include all Procedures? Yes//
"DATA",727.1,13,"ROU")
ECXRAD
"DATA",727.1,14,0)
EVENT CAPTURE^727.815^^^^^Event Capture^ECS^EC
"DATA",727.1,14,1,0)
^^16^16^2971216^^^
"DATA",727.1,14,1,1,0)
 
"DATA",727.1,14,1,2,0)
Verify against: DSS Unit Workload Summary Report
"DATA",727.1,14,1,3,0)
Menu Option:    DSS Unit Workload Summary [ECRDSSU]
"DATA",727.1,14,1,4,0)
  
"DATA",727.1,14,1,5,0)
The DSS Unit Workload Summary Report, available in the VistA Event Capture 
"DATA",727.1,14,1,6,0)
application, provides a convenient method of verifying ECS extract data.
"DATA",727.1,14,1,7,0)
  
"DATA",727.1,14,1,8,0)
Both the DSS Unit Workload Summary Report and the Event Capture (ECS)
"DATA",727.1,14,1,9,0)
Extract Audit Report list procedures alphabetically within Category
"DATA",727.1,14,1,10,0)
and DSS Unit for one, many, or all Event Capture Locations.  Of course,
"DATA",727.1,14,1,11,0)
the date range specified for each report must be the same.
"DATA",727.1,14,1,12,0)
  
"DATA",727.1,14,1,13,0)
Verification of extract data is quite straightforward.  The figures
"DATA",727.1,14,1,14,0)
which reflect the total volume of procedures on the extract audit report
"DATA",727.1,14,1,15,0)
can be directly compared to the corresponding figures on the Event
"DATA",727.1,14,1,16,0)
Capture workload summary report.
"DATA",727.1,14,"ROU")
ECXEC
"DATA",727.1,15,0)
IV^727.819^^^^^IVs (detail)^IVP^IV
"DATA",727.1,15,"ROU")
ECXPIVD
"DATA",727.1,16,0)
TREATING SPECIALTY CHANGE^727.817^^^^^Treating specialty change^TRT^TREAT
"DATA",727.1,16,1,0)
^^65^65^2971218^^^^
"DATA",727.1,16,1,1,0)
 
"DATA",727.1,16,1,2,0)
Verify against: Gains & Losses Sheet/Treating Specialty Report
"DATA",727.1,16,1,3,0)
Menu Option:    Gains and Losses (G&L) Sheet [DG G&L SHEET]
"DATA",727.1,16,1,4,0)
 
"DATA",727.1,16,1,5,0)
The Treating Specialty Report included in the printout of the Gains and
"DATA",727.1,16,1,6,0)
Losses Sheet is the primary VistA report against which TRT extract data
"DATA",727.1,16,1,7,0)
can be verified.  Copies of these reports are readily available from
"DATA",727.1,16,1,8,0)
patient administration services at most medical centers.
"DATA",727.1,16,1,9,0)
  
"DATA",727.1,16,1,10,0)
The G&L Treating Specialty Report is generated on a daily basis, and shows
"DATA",727.1,16,1,11,0)
gains and losses to each facility treating specialty during the previous
"DATA",727.1,16,1,12,0)
24-hour period.  The Treating Specialty Change (TRT) Extract Audit
"DATA",727.1,16,1,13,0)
Report shows total losses to the various specialties for a date range
"DATA",727.1,16,1,14,0)
(usually, one month for a given extract).  Therefore, the figures from the
"DATA",727.1,16,1,15,0)
G&L Treating Specialty Report must be tallied (either manually or with
"DATA",727.1,16,1,16,0)
the help of a spreadsheet application) over the same date range in order
"DATA",727.1,16,1,17,0)
to compare totals with the TRT extract audit report.
"DATA",727.1,16,1,18,0)
   
"DATA",727.1,16,1,19,0)
The user should note, that the G&L Treating Specialty Report is based
"DATA",727.1,16,1,20,0)
on acility reating pecialties which are entries in the FACILITY TREATING
"DATA",727.1,16,1,21,0)
SPECIALTY file (#45.7).  The TRT extract, however, submits data to the 
"DATA",727.1,16,1,22,0)
Decision Support System (DSS) based on nationally recognized specialties
"DATA",727.1,16,1,23,0)
which are entries in the SPECIALTY file (#42.4).  
"DATA",727.1,16,1,24,0)
   
"DATA",727.1,16,1,25,0)
Therefore, the Treating Specialty Change (TRT) Extract Audit Report
"DATA",727.1,16,1,26,0)
displays both identifiers. The national specialty name (along with its
"DATA",727.1,16,1,27,0)
DSS code in parentheses) and the total number of losses to that specialty
"DATA",727.1,16,1,28,0)
are printed first.  There may be one or more Facility Treating Specialties
"DATA",727.1,16,1,29,0)
associated with a given national specialty.  The names of the associated
"DATA",727.1,16,1,30,0)
facility treating specialties are printed immediately underneath the
"DATA",727.1,16,1,31,0)
specialty name, and slightly indented.  (Only active facility treating
"DATA",727.1,16,1,32,0)
specialties are displayed.)
"DATA",727.1,16,1,33,0)
  
"DATA",727.1,16,1,34,0)
If there is more than one facility treating specialty associated with
"DATA",727.1,16,1,35,0)
the national specialty, then you must add together the losses shown on
"DATA",727.1,16,1,36,0)
the G&L Treating Specialty Report for each of those facility treating
"DATA",727.1,16,1,37,0)
specialties to arrive at the total number of losses shown on the TRT
"DATA",727.1,16,1,38,0)
Extract Audit Report for the specialty.
"DATA",727.1,16,1,39,0)
  
"DATA",727.1,16,1,40,0)
Both reports also show total losses by Service, so verification may be
"DATA",727.1,16,1,41,0)
accomplished with a lower degree of specificity.
"DATA",727.1,16,1,42,0)
  
"DATA",727.1,16,1,43,0)
Important note:
"DATA",727.1,16,1,44,0)
  
"DATA",727.1,16,1,45,0)
The total losses for all specialties seen on the TRT Extract Audit
"DATA",727.1,16,1,46,0)
Report ("Grand Total for all Services") may not reflect the total
"DATA",727.1,16,1,47,0)
number of records contained in the TRT extract.  This is because the
"DATA",727.1,16,1,48,0)
TRT extract includes provider-only changes, as well as true treating 
"DATA",727.1,16,1,49,0)
specialty changes.  In order to compare the TRT Extract Audit Report
"DATA",727.1,16,1,50,0)
to the G&L Treating Specialty Report, these provider-only changes
"DATA",727.1,16,1,51,0)
are being screened out of the total counts on the extract audit
"DATA",727.1,16,1,52,0)
report to the extent possible.  If your facility logs many of these
"DATA",727.1,16,1,53,0)
provider-only changes for its inpatients, you will see a significant
"DATA",727.1,16,1,54,0)
difference in the "Grand Total for all Services" and the total number
"DATA",727.1,16,1,55,0)
of records in the TRT extract.
"DATA",727.1,16,1,56,0)
  
"DATA",727.1,16,1,57,0)
The logic being used to screen out provider-only changes will
"DATA",727.1,16,1,58,0)
not be 100% effective if your facility has more than one active
"DATA",727.1,16,1,59,0)
facility treating specialty associated with a national specialty.
"DATA",727.1,16,1,60,0)
When this is the case, it is not possible to distinguish true
"DATA",727.1,16,1,61,0)
treating specialty changes from provider-only changes with the data
"DATA",727.1,16,1,62,0)
currently available in the extract record.  This will cause the
"DATA",727.1,16,1,63,0)
total losses for the specialty on the TRT Extract Audit Report
"DATA",727.1,16,1,64,0)
to be inflated.
"DATA",727.1,16,1,65,0)
  
"DATA",727.1,16,"ROU")
ECXTRT
"DATA",727.1,17,0)
PAI^727.823^^^^^PAF^PAS^PAI
"DATA",727.1,17,1,0)
^^33^33^2971222^^^^
"DATA",727.1,17,1,1,0)
   
"DATA",727.1,17,1,2,0)
Verify against: Record Status Report
"DATA",727.1,17,1,3,0)
Menu Option:    Record Status Report [DG RUG STATUS]
"DATA",727.1,17,1,4,0)
  
"DATA",727.1,17,1,5,0)
At the present time, there is no feasible method by which to truly
"DATA",727.1,17,1,6,0)
verify data extracted for the DSS PAI Extract.  The PAF (PAS) Extract
"DATA",727.1,17,1,7,0)
Audit Report simply states the total number of patient assessment
"DATA",727.1,17,1,8,0)
records extracted from the PAF file (#45.9) for the date range.  That
"DATA",727.1,17,1,9,0)
total number could be verified by performing a simple VA FileMan
"DATA",727.1,17,1,10,0)
print from file #45.9.  The print template can be set up to display
"DATA",727.1,17,1,11,0)
simply the total number of records within a date range, rather than
"DATA",727.1,17,1,12,0)
showing data within each record.  Sort the records in the PAF file by
"DATA",727.1,17,1,13,0)
the ASSESSMENT DATE field (#2) and specify a start date and end date
"DATA",727.1,17,1,14,0)
which match those used in the PAF (PAS) Extract Audit Report.
"DATA",727.1,17,1,15,0)
  
"DATA",727.1,17,1,16,0)
The Record Status Report, available through VistA's PIMS application,
"DATA",727.1,17,1,17,0)
could also be used for this purpose.  It should be noted, however, that
"DATA",727.1,17,1,18,0)
use of the Record Status Report is not very efficient.  Much more
"DATA",727.1,17,1,19,0)
information is displayed on this report than is needed to verify the
"DATA",727.1,17,1,20,0)
simple total shown on the PAF (PAS) Extract Audit Report.  But if the
"DATA",727.1,17,1,21,0)
Record Status Report is used, please be sure that the following prompts
"DATA",727.1,17,1,22,0)
are answered as indicated below when setting up the report request:
"DATA",727.1,17,1,23,0)
  
"DATA",727.1,17,1,24,0)
   (Record Status Report [DG RUG STATUS])
"DATA",727.1,17,1,25,0)
  
"DATA",727.1,17,1,26,0)
   Select division: ALL// <cr>
"DATA",727.1,17,1,27,0)
   (C)NH, (R)egular PAIs, (B)oth: B// REGULAR PAIS
"DATA",727.1,17,1,28,0)
   Select ward: ALL// <cr>
"DATA",727.1,17,1,29,0)
   Sort by (A)ssessment or (T)ransfer/Admission Date: T// ASSESSMENT
"DATA",727.1,17,1,30,0)
  
"DATA",727.1,17,1,31,0)
Counting the number of records displayed on this report should provide
"DATA",727.1,17,1,32,0)
the same total as shown on the PAF (PAS) Extract Audit Report for the
"DATA",727.1,17,1,33,0)
same date range.
"DATA",727.1,17,"ROU")
ECXPAI
"DATA",727.1,18,0)
LAB RESULTS^727.824^^^^^Lab Results^LAR^LAB
"DATA",727.1,18,"ROU")
ECXLABR
"DATA",727.1,19,0)
QUASAR^727.825^^^^^QUASAR^ECQ^QSR
"DATA",727.1,19,1,0)
^^49^49^2971110^^^^
"DATA",727.1,19,1,1,0)
 
"DATA",727.1,19,1,2,0)
Verify against: Audiology & Speech Pathology Procedure Statistics for
"DATA",727.1,19,1,3,0)
                   All Clinicians
"DATA",727.1,19,1,4,0)
                Audiology & Speech Pathology Procedure Statistics for
"DATA",727.1,19,1,5,0)
                   All Other Providers
"DATA",727.1,19,1,6,0)
Menu Option:    Statistics by Procedure [ACKQAS PROC STATS]
"DATA",727.1,19,1,7,0)
  
"DATA",727.1,19,1,8,0)
The Audiology & Speech Pathology Procedure Statistics report, available
"DATA",727.1,19,1,9,0)
in the VistA QUASAR application, provides a convenient method of verifying
"DATA",727.1,19,1,10,0)
ECQ extract data.
"DATA",727.1,19,1,11,0)
   
"DATA",727.1,19,1,12,0)
This QUASAR report must be generated twice.  Generate one report for 'ALL
"DATA",727.1,19,1,13,0)
CLINICIANS', and another for 'ALL OTHER PROVIDERS'.  Be sure that each
"DATA",727.1,19,1,14,0)
report is generated for BOTH Audiology and Speech, and specify a date
"DATA",727.1,19,1,15,0)
range that is the same as the date range specified for the QUASAR (ECQ)
"DATA",727.1,19,1,16,0)
Extract Audit Report.
"DATA",727.1,19,1,17,0)
  
"DATA",727.1,19,1,18,0)
The Audiology & Speech Pathology Procedure Statistics report displays 
"DATA",727.1,19,1,19,0)
procedure data both in detail and summary form.  The summary appears on 
"DATA",727.1,19,1,20,0)
the last page(s) of the printout; the page header contains the word 
"DATA",727.1,19,1,21,0)
"Summary".
"DATA",727.1,19,1,22,0)
  
"DATA",727.1,19,1,23,0)
Procedure data on both the Audiology & Speech Pathology Procedure
"DATA",727.1,19,1,24,0)
Statistics report and the QUASAR (ECQ) Extract Audit Report is grouped
"DATA",727.1,19,1,25,0)
by functional area; i.e., either Audiology or Speech.
"DATA",727.1,19,1,26,0)
  
"DATA",727.1,19,1,27,0)
Verify any procedure volume figure appearing in the QUASAR (ECQ)
"DATA",727.1,19,1,28,0)
Extract Audit Report bycomparing it to the sum of:
"DATA",727.1,19,1,29,0)
  
"DATA",727.1,19,1,30,0)
|TAB|the count figure for that procedure on 
"DATA",727.1,19,1,31,0)
|TAB|the summary page of the All Clinicians report
"DATA",727.1,19,1,32,0)
  
"DATA",727.1,19,1,33,0)
|TAB|plus--
"DATA",727.1,19,1,34,0)
  
"DATA",727.1,19,1,35,0)
|TAB|the count figure for the same procedure on the
"DATA",727.1,19,1,36,0)
|TAB|summary page of the All Other Providers report.
"DATA",727.1,19,1,37,0)
  
"DATA",727.1,19,1,38,0)
Or verification can be accomplished to a lower degree of specificity
"DATA",727.1,19,1,39,0)
by comparing the total number of all types of procedures for a DSS Unit
"DATA",727.1,19,1,40,0)
(i.e., either Audiology or Speech) with the sum of:
"DATA",727.1,19,1,41,0)
  
"DATA",727.1,19,1,42,0)
|TAB|the total figure (for either Audiology or Speech) on
"DATA",727.1,19,1,43,0)
|TAB|the summary page of the All Clinicians report
"DATA",727.1,19,1,44,0)
  
"DATA",727.1,19,1,45,0)
|TAB|plus--
"DATA",727.1,19,1,46,0)
  
"DATA",727.1,19,1,47,0)
|TAB|the total figure (for either Audiology or Speech) on
"DATA",727.1,19,1,48,0)
|TAB|summary page of the All Other Providers report.
"DATA",727.1,19,1,49,0)
  
"DATA",727.1,19,"ROU")
ECXQSR
"DATA",727.2,1,0)
LOCAL DSS LAR SETUP
"DATA",727.2,1,1,0)
^727.21^12^12
"DATA",727.2,1,1,1,0)
HEMOGLOBIN^B
"DATA",727.2,1,1,1,"LOC",0)
^727.211P^^0
"DATA",727.2,1,1,2,0)
POTASSIUM (SERUM)^B
"DATA",727.2,1,1,2,"LOC",0)
^727.211P^^0
"DATA",727.2,1,1,3,0)
SODIUM (SERUM)^B
"DATA",727.2,1,1,3,"LOC",0)
^727.211P^^0
"DATA",727.2,1,1,4,0)
LITHIUM^B
"DATA",727.2,1,1,4,"LOC",0)
^727.211P^^0
"DATA",727.2,1,1,5,0)
BUN (BLOOD UREA NITROGEN)^B
"DATA",727.2,1,1,5,"LOC",0)
^727.211P^^0
"DATA",727.2,1,1,6,0)
WBC (TOTAL WBC COUNT)^B
"DATA",727.2,1,1,6,"LOC",0)
^727.211P^^0
"DATA",727.2,1,1,7,0)
DIGOXIN^B
"DATA",727.2,1,1,7,"LOC",0)
^727.211P^^0
"DATA",727.2,1,1,8,0)
THEOPHYLLINE^B
"DATA",727.2,1,1,8,"LOC",0)
^727.211P^^0
"DATA",727.2,1,1,9,0)
AST (ASPARTATE TRANSAMINASE)^B
"DATA",727.2,1,1,9,"LOC",0)
^727.211P^^0
"DATA",727.2,1,1,10,0)
GLUCOSE (SERUM)^B
"DATA",727.2,1,1,10,"LOC",0)
^727.211P^^0
"DATA",727.2,1,1,11,0)
CREATININE CLEARANCE^U
"DATA",727.2,1,1,11,"LOC",0)
^727.211P^^0
"DATA",727.2,1,1,12,0)
LITHIUM (URINE)^U
"DATA",727.2,1,1,12,"LOC",0)
^727.211P^^0
"DATA",727.2,1,"BL",0)
^727.22P^^0
"DATA",727.2,1,"UR",0)
^727.23P^^0
"DATA",728.441,1,0)
SSGD^Stop Smoking Group Double Provider
"DATA",728.441,1,1,0)
^^1^1^2940512^^
"DATA",728.441,1,1,1,0)
STOP SMOKING GROUP (DOUBLE PROVIDER)
"DATA",728.441,2,0)
DIAB^Diabetes Education
"DATA",728.441,2,1,0)
^^1^1^2940401^
"DATA",728.441,2,1,1,0)
DIABETES EDUCATION
"DATA",728.441,3,0)
SPIN^Single Provider - Individual Patient
"DATA",728.441,3,1,0)
^^1^1^2940401^
"DATA",728.441,3,1,1,0)
SINGLE PROVIDER INDIVIDUAL
"DATA",728.441,4,0)
DPIN^Double Provider - Individual Patient
"DATA",728.441,4,1,0)
^^1^1^2940401^
"DATA",728.441,4,1,1,0)
DOUBLE PROVIDER INDIVIDUAL
"DATA",728.441,5,0)
TPIN^Three or More Providers - Individual Patient
"DATA",728.441,5,1,0)
^^1^1^2940401^
"DATA",728.441,5,1,1,0)
THREE OR MORE PROVIDERS INDIVIDUAL
"DATA",728.441,6,0)
SPGP^Single Provider - Group of Patients
"DATA",728.441,6,1,0)
^^1^1^2940401^
"DATA",728.441,6,1,1,0)
SINGLE PROVIDER GROUP
"DATA",728.441,7,0)
DPGP^Double Provider - Group of Patients
"DATA",728.441,7,1,0)
^^1^1^2940401^
"DATA",728.441,7,1,1,0)
DOUBLE PROVIDER GROUP
"DATA",728.441,8,0)
TPGP^Three or More Providers - Group of Patients
"DATA",728.441,8,1,0)
^^1^1^2940401^
"DATA",728.441,8,1,1,0)
THREE OR MORE PROVIDERS GROUP
"DATA",728.441,9,0)
OTHA^Other 1
"DATA",728.441,9,1,0)
^^1^1^2940401^
"DATA",728.441,9,1,1,0)
OTHER1
"DATA",728.441,10,0)
OTHB^Other 2
"DATA",728.441,10,1,0)
^^1^1^2940401^
"DATA",728.441,10,1,1,0)
OTHER2
"DATA",728.441,11,0)
OTHC^Other 3
"DATA",728.441,11,1,0)
^^1^1^2940401^
"DATA",728.441,11,1,1,0)
OTHER3
"DATA",728.441,12,0)
OTHD^Other 4
"DATA",728.441,12,1,0)
^^1^1^2940401^
"DATA",728.441,12,1,1,0)
OTHER4
"DATA",728.441,13,0)
OTHE^Other 5
"DATA",728.441,13,1,0)
^^1^1^2940401^
"DATA",728.441,13,1,1,0)
OTHER5
"DATA",728.441,14,0)
OTHF^Other 6
"DATA",728.441,14,1,0)
^^1^1^2940401^
"DATA",728.441,14,1,1,0)
OTHER6
"DATA",728.441,15,0)
OTHG^Other 7
"DATA",728.441,15,1,0)
^^1^1^2940401^
"DATA",728.441,15,1,1,0)
OTHER7
"DATA",728.441,16,0)
SSFU^Stop Smoke Follow-up - Individual Patient
"DATA",728.441,17,0)
CHOL^Cholesterol Education - Double Provider
"DATA",728.441,18,0)
STUD^Student Provider - Individual Patient
"DATA",728.441,19,0)
UNSC^Unscheduled Clinic
"DATA",728.441,20,0)
GIPR^GI Procedure
"DATA",728.441,21,0)
DPRO^Dental Procedure
"DATA",728.441,22,0)
HEMP^Hematology Procedure
"DATA",728.441,23,0)
MISC^Miscellaneous Procedure
"DATA",728.441,24,0)
SATA^Satellite Clinic A
"DATA",728.441,25,0)
SATB^Satellite Clinic B
"DATA",728.441,26,0)
SCRE^Screening
"DATA",728.441,27,0)
COMN^Community Nursing Home
"DATA",728.441,28,0)
STRU^Structure Learning - Group of Patients
"DATA",728.441,29,0)
TDIS^Thought Disorder - Group of Patients
"DATA",728.441,30,0)
RESI^Residential Clinic
"DATA",728.441,31,0)
AFCC^AFC Clinic
"DATA",728.441,32,0)
FOST^Foster Care Clinic
"DATA",728.441,33,0)
AGTO^Agent Orange
"DATA",728.441,34,0)
BARA^Bar 203-450 Audio
"DATA",728.441,35,0)
CASE^Case Management
"DATA",728.441,36,0)
CMIO^CMI - Chronically Mentally Ill
"DATA",728.441,37,0)
COLL^Collateral
"DATA",728.441,38,0)
COOR^Coordinator
"DATA",728.441,40,0)
DOMI^Domicilliary
"DATA",728.441,41,0)
EAPO^Employee Assistance
"DATA",728.441,42,0)
EDUC^Education - non-MD
"DATA",728.441,43,0)
EXPX^Exposure Radiation
"DATA",728.441,44,0)
FAMI^Family
"DATA",728.441,45,0)
FCAP^FCA 205-460 Pool
"DATA",728.441,46,0)
FOLU^Follow-up
"DATA",728.441,47,0)
GLCM^Glucometer
"DATA",728.441,48,0)
GMED^Medic
"DATA",728.441,49,0)
HCHV^HCHV in 501 Stop
"DATA",728.441,50,0)
HOME^Residential Screening
"DATA",728.441,51,0)
INJX^Injection
"DATA",728.441,52,0)
INTE^Intern
"DATA",728.441,53,0)
INVA^Invasive Procedure
"DATA",728.441,54,0)
IVRX^IV Drugs/Meds
"DATA",728.441,55,0)
KORE^Korean War
"DATA",728.441,56,0)
MNHM^Main Health Maintenance
"DATA",728.441,57,0)
NASS^Nurse Assistant
"DATA",728.441,58,0)
NPRN^Nurse Practitioner
"DATA",728.441,59,0)
OFFF^Off
"DATA",728.441,60,0)
ONNN^On 
"DATA",728.441,61,0)
OUTP^Outpatient
"DATA",728.441,62,0)
PBED^Pre Bed Care
"DATA",728.441,63,0)
POWO^Men POWs
"DATA",728.441,64,0)
POWW^Women POWs
"DATA",728.441,65,0)
PREV^Prevention
"DATA",728.441,66,0)
PRIA^Primary Care Team 1
"DATA",728.441,67,0)
PRIB^Primary Care Team 2
"DATA",728.441,68,0)
PRIC^Primary Care Team 3
"DATA",728.441,69,0)
PRID^Primary Care Team 4
"DATA",728.441,70,0)
PRIE^Primary Care Team 5
"DATA",728.441,71,0)
PROC^Procedure
"DATA",728.441,72,0)
PROP^Preoperative
"DATA",728.441,73,0)
PSYC^Psychologist
"DATA",728.441,74,0)
REHA^Rehabilitation
"DATA",728.441,75,0)
REPE^Repeat
"DATA",728.441,76,0)
SCVT^Service Connected
"DATA",728.441,77,0)
SIGO^Single
"DATA",728.441,78,0)
SOCW^Social Worker
"DATA",728.441,79,0)
SPEC^Special
"DATA",728.441,80,0)
TECH^Technician
"DATA",728.441,81,0)
TENS^TENS Clinic in PM&R
"DATA",728.441,82,0)
VIET^Vietnam War
"DATA",728.441,83,0)
NURS^Nurse
"DATA",728.441,84,0)
FLUI^Flu Injection
"DATA",728.441,85,0)
INPT^Inpatient
"DATA",728.441,86,0)
CONS^Consultation
"DATA",728.441,87,0)
CPEX^Compensation and Pension Examination
"DATA",728.441,88,0)
RSCH^Research Activities
"DATA",728.441,89,0)
TRAN^Pre- and Post-Transplant Clinical Activities
"DATA",728.441,90,0)
DIAG^Diagnostic Procedures
"DATA",728.441,91,0)
GULF^Persian Gulf War
"DATA",728.441,92,0)
RXMN^Medication (such as Coumadin) Monitoring
"DATA",728.441,93,0)
WCHR^Wheelchair
"DATA",728.441,94,0)
ASOR^Ambulatory Surgery Performed in an OR
"DATA",728.441,95,0)
ASOT^Ambulatory Surgery Performed in Area Other than OR
"DATA",728.441,96,0)
AETC^Ambulatory Evaluation and Treatment Center
"DATA",728.441,97,0)
ATEM^A Team
"DATA",728.441,98,0)
BTEM^B Team
"DATA",728.441,99,0)
CTEM^C Team
"DATA",728.441,100,0)
DTEM^D Team
"DATA",728.441,101,0)
ETEM^E Team
"DATA",728.441,102,0)
FTEM^F Team
"DATA",728.441,103,0)
GTEM^G Team
"DATA",728.441,104,0)
HTEM^H Team
"DATA",728.441,105,0)
AOTH^A Other
"DATA",728.441,106,0)
BOTH^B Other
"DATA",728.441,107,0)
COTH^C Other
"DATA",728.441,108,0)
DOTH^D Other
"DATA",728.441,109,0)
EOTH^E Other
"DATA",728.441,110,0)
FOTH^F Other
"DATA",728.441,111,0)
GOTH^G Other
"DATA",728.441,112,0)
HOTH^H Other
"FIA",727)
DSS EXTRACT LOG
"FIA",727,0)
^ECX(727,
"FIA",727,0,0)
727I
"FIA",727,0,1)
y^y^f^^^^n
"FIA",727,0,10)

"FIA",727,0,11)

"FIA",727,0,"RLRO")

"FIA",727,0,"VR")
3.0^DSS EXTRACTS
"FIA",727,727)
0
"FIA",727,727.0301)
0
"FIA",727.1)
EXTRACT DEFINITIONS
"FIA",727.1,0)
^ECX(727.1,
"FIA",727.1,0,0)
727.1
"FIA",727.1,0,1)
y^y^f^^n^^y^m^n
"FIA",727.1,0,10)

"FIA",727.1,0,11)

"FIA",727.1,0,"RLRO")

"FIA",727.1,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.1,727.1)
0
"FIA",727.1,727.11)
0
"FIA",727.2)
DSS LAB TESTS
"FIA",727.2,0)
^ECX(727.2,
"FIA",727.2,0,0)
727.2
"FIA",727.2,0,1)
y^y^f^^n^^y^a^n
"FIA",727.2,0,10)

"FIA",727.2,0,11)

"FIA",727.2,0,"RLRO")

"FIA",727.2,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.2,727.2)
0
"FIA",727.2,727.21)
0
"FIA",727.2,727.211)
0
"FIA",727.2,727.22)
0
"FIA",727.2,727.23)
0
"FIA",727.802)
ADMISSION EXTRACT
"FIA",727.802,0)
^ECX(727.802,
"FIA",727.802,0,0)
727.802
"FIA",727.802,0,1)
y^y^f^^^^n
"FIA",727.802,0,10)

"FIA",727.802,0,11)

"FIA",727.802,0,"RLRO")

"FIA",727.802,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.802,727.802)
0
"FIA",727.803)
CLINIC EXTRACT
"FIA",727.803,0)
^ECX(727.803,
"FIA",727.803,0,0)
727.803
"FIA",727.803,0,1)
y^y^f^^^^n
"FIA",727.803,0,10)

"FIA",727.803,0,11)

"FIA",727.803,0,"RLRO")

"FIA",727.803,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.803,727.803)
0
"FIA",727.804)
CLINIC NOSHOW EXTRACT
"FIA",727.804,0)
^ECX(727.804,
"FIA",727.804,0,0)
727.804
"FIA",727.804,0,1)
y^y^f^^^^n
"FIA",727.804,0,10)

"FIA",727.804,0,11)

"FIA",727.804,0,"RLRO")

"FIA",727.804,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.804,727.804)
0
"FIA",727.805)
NURSING EXTRACT
"FIA",727.805,0)
^ECX(727.805,
"FIA",727.805,0,0)
727.805
"FIA",727.805,0,1)
y^y^f^^^^n
"FIA",727.805,0,10)

"FIA",727.805,0,11)

"FIA",727.805,0,"RLRO")

"FIA",727.805,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.805,727.805)
0
"FIA",727.806)
DENTAL EXTRACT
"FIA",727.806,0)
^ECX(727.806,
"FIA",727.806,0,0)
727.806
"FIA",727.806,0,1)
y^y^f^^^^n
"FIA",727.806,0,10)

"FIA",727.806,0,11)

"FIA",727.806,0,"RLRO")

"FIA",727.806,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.806,727.806)
0
"FIA",727.808)
PHYSICAL MOVEMENT EXTRACT
"FIA",727.808,0)
^ECX(727.808,
"FIA",727.808,0,0)
727.808
"FIA",727.808,0,1)
y^y^f^^^^n
"FIA",727.808,0,10)

"FIA",727.808,0,11)

"FIA",727.808,0,"RLRO")

"FIA",727.808,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.808,727.808)
0
"FIA",727.809)
UNIT DOSE LOCAL EXTRACT
"FIA",727.809,0)
^ECX(727.809,
"FIA",727.809,0,0)
727.809
"FIA",727.809,0,1)
y^y^f^^^^n
"FIA",727.809,0,10)

"FIA",727.809,0,11)

"FIA",727.809,0,"RLRO")

"FIA",727.809,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.809,727.809)
0
"FIA",727.81)
PRESCRIPTION EXTRACT
"FIA",727.81,0)
^ECX(727.81,
"FIA",727.81,0,0)
727.81
"FIA",727.81,0,1)
y^y^f^^^^n
"FIA",727.81,0,10)

"FIA",727.81,0,11)

"FIA",727.81,0,"RLRO")

"FIA",727.81,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.81,727.81)
0
"FIA",727.811)
SURGERY EXTRACT
"FIA",727.811,0)
^ECX(727.811,
"FIA",727.811,0,0)
727.811
"FIA",727.811,0,1)
y^y^f^^^^n
"FIA",727.811,0,10)

"FIA",727.811,0,11)

"FIA",727.811,0,"RLRO")

"FIA",727.811,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.811,727.811)
0
"FIA",727.813)
LABORATORY EXTRACT
"FIA",727.813,0)
^ECX(727.813,
"FIA",727.813,0,0)
727.813
"FIA",727.813,0,1)
y^y^f^^^^n
"FIA",727.813,0,10)

"FIA",727.813,0,11)

"FIA",727.813,0,"RLRO")

"FIA",727.813,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.813,727.813)
0
"FIA",727.814)
RADIOLOGY EXTRACT
"FIA",727.814,0)
^ECX(727.814,
"FIA",727.814,0,0)
727.814
"FIA",727.814,0,1)
y^y^f^^^^n
"FIA",727.814,0,10)

"FIA",727.814,0,11)

"FIA",727.814,0,"RLRO")

"FIA",727.814,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.814,727.814)
0
"FIA",727.815)
EVENT CAPTURE LOCAL EXTRACT
"FIA",727.815,0)
^ECX(727.815,
"FIA",727.815,0,0)
727.815
"FIA",727.815,0,1)
y^y^f^^^^n
"FIA",727.815,0,10)

"FIA",727.815,0,11)

"FIA",727.815,0,"RLRO")

"FIA",727.815,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.815,727.815)
0
"FIA",727.817)
TREATING SPECIALTY CHANGE EXTRACT
"FIA",727.817,0)
^ECX(727.817,
"FIA",727.817,0,0)
727.817
"FIA",727.817,0,1)
y^y^f^^^^n
"FIA",727.817,0,10)

"FIA",727.817,0,11)

"FIA",727.817,0,"RLRO")

"FIA",727.817,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.817,727.817)
0
"FIA",727.819)
IV DETAIL EXTRACT
"FIA",727.819,0)
^ECX(727.819,
"FIA",727.819,0,0)
727.819
"FIA",727.819,0,1)
y^y^f^^^^n
"FIA",727.819,0,10)

"FIA",727.819,0,11)

"FIA",727.819,0,"RLRO")

"FIA",727.819,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.819,727.819)
0
"FIA",727.82)
ADMISSION SETUP EXTRACT
"FIA",727.82,0)
^ECX(727.82,
"FIA",727.82,0,0)
727.82
"FIA",727.82,0,1)
y^y^f^^^^n
"FIA",727.82,0,10)

"FIA",727.82,0,11)

"FIA",727.82,0,"RLRO")

"FIA",727.82,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.82,727.82)
0
"FIA",727.821)
PHYSICAL MOVEMENT SETUP EXTRACT
"FIA",727.821,0)
^ECX(727.821,
"FIA",727.821,0,0)
727.821
"FIA",727.821,0,1)
y^y^f^^^^n
"FIA",727.821,0,10)

"FIA",727.821,0,11)

"FIA",727.821,0,"RLRO")

"FIA",727.821,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.821,727.821)
0
"FIA",727.822)
TREATING SPECIALTY CHANGE SETUP EXTRACT
"FIA",727.822,0)
^ECX(727.822,
"FIA",727.822,0,0)
727.822
"FIA",727.822,0,1)
y^y^f^^^^n
"FIA",727.822,0,10)

"FIA",727.822,0,11)

"FIA",727.822,0,"RLRO")

"FIA",727.822,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.822,727.822)
0
"FIA",727.823)
PAI EXTRACT
"FIA",727.823,0)
^ECX(727.823,
"FIA",727.823,0,0)
727.823
"FIA",727.823,0,1)
y^y^f^^^^n
"FIA",727.823,0,10)

"FIA",727.823,0,11)

"FIA",727.823,0,"RLRO")

"FIA",727.823,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.823,727.823)
0
"FIA",727.824)
LAB RESULTS EXTRACT
"FIA",727.824,0)
^ECX(727.824,
"FIA",727.824,0,0)
727.824
"FIA",727.824,0,1)
y^y^f^^^^n
"FIA",727.824,0,10)

"FIA",727.824,0,11)

"FIA",727.824,0,"RLRO")

"FIA",727.824,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.824,727.824)
0
"FIA",727.825)
QUASAR EXTRACT
"FIA",727.825,0)
^ECX(727.825,
"FIA",727.825,0,0)
727.825
"FIA",727.825,0,1)
y^y^f^^^^n
"FIA",727.825,0,10)

"FIA",727.825,0,11)

"FIA",727.825,0,"RLRO")

"FIA",727.825,0,"VR")
3.0^DSS EXTRACTS
"FIA",727.825,727.825)
0
"FIA",728)
DSS EXTRACTS
"FIA",728,0)
^ECX(728,
"FIA",728,0,0)
728P
"FIA",728,0,1)
y^y^f^^^^n
"FIA",728,0,10)

"FIA",728,0,11)

"FIA",728,0,"RLRO")

"FIA",728,0,"VR")
3.0^DSS EXTRACTS
"FIA",728,728)
0
"FIA",728.113)
IV EXTRACT DATA
"FIA",728.113,0)
^ECX(728.113,
"FIA",728.113,0,0)
728.113
"FIA",728.113,0,1)
y^y^f^^^^n
"FIA",728.113,0,10)

"FIA",728.113,0,11)

"FIA",728.113,0,"RLRO")

"FIA",728.113,0,"VR")
3.0^DSS EXTRACTS
"FIA",728.113,728.113)
0
"FIA",728.44)
CLINICS AND STOP CODES
"FIA",728.44,0)
^ECX(728.44,
"FIA",728.44,0,0)
728.44P
"FIA",728.44,0,1)
y^y^f^^^^n
"FIA",728.44,0,10)

"FIA",728.44,0,11)

"FIA",728.44,0,"RLRO")

"FIA",728.44,0,"VR")
3.0^DSS EXTRACTS
"FIA",728.44,728.44)
0
"FIA",728.441)
NATIONAL CLINIC
"FIA",728.441,0)
^ECX(728.441,
"FIA",728.441,0,0)
728.441
"FIA",728.441,0,1)
y^y^f^^n^^y^a^n
"FIA",728.441,0,10)

"FIA",728.441,0,11)

"FIA",728.441,0,"RLRO")

"FIA",728.441,0,"VR")
3.0^DSS EXTRACTS
"FIA",728.441,728.441)
0
"FIA",728.441,728.4412)
0
"FIA",728.506)
DSS DRUG PRODUCT CODE
"FIA",728.506,0)
^ECX(728.506,
"FIA",728.506,0,0)
728.506
"FIA",728.506,0,1)
y^y^f^^^^n
"FIA",728.506,0,10)

"FIA",728.506,0,11)

"FIA",728.506,0,"RLRO")

"FIA",728.506,0,"VR")
3.0^DSS EXTRACTS
"FIA",728.506,728.506)
0
"FIA",728.506,728.5061)
0
"FIA",728.904)
UNIT DOSE EXTRACT DATA
"FIA",728.904,0)
^ECX(728.904,
"FIA",728.904,0,0)
728.904
"FIA",728.904,0,1)
y^y^f^^^^n
"FIA",728.904,0,10)

"FIA",728.904,0,11)

"FIA",728.904,0,"RLRO")

"FIA",728.904,0,"VR")
3.0^DSS EXTRACTS
"FIA",728.904,728.904)
0
"INIT")
ECXINPOS
"KRN",.4,2173,-1)
0^2
"KRN",.4,2173,0)
ECX LOG^2950417.1523^^727^^^2971006^
"KRN",.4,2173,"DCL","727^5")
&
"KRN",.4,2173,"F",1)
0;"EXTRACT NUMBER";C1;R6~2;"DHCP PKG (FEED. SYS.)";C10;R9~
"KRN",.4,2173,"F",2)
S DIP(1)=$S($D(^ECX(727,D0,0)):^(0),1:"") S X=$P(DIP(1),U,4),DIP(2)=X S X=2,DIP(3)=X S X=7,X=$E(DIP(2),DIP(3),X)_"-" W X K DIP;"DATA SET";C22;R8;Z;"$E((#3),2,7)_"-""~
"KRN",.4,2173,"F",3)
S DIP(1)=$S($D(^ECX(727,D0,0)):^(0),1:"") S X=$P(DIP(1),U,5),DIP(2)=X S X=2,DIP(3)=X S X=7,X=$E(DIP(2),DIP(3),X) W X K DIP;" DATES";C31;R5;Z;"$E((#4),2,7)"~
"KRN",.4,2173,"F",4)
5;"RECORD COUNT",C45;R6~300;"DATE TRANSMITTED";C55;L11~9;"DATE PURGED";C69;L11~
"KRN",.4,2173,"H")
DSS EXTRACT LOG STATISTICS
"KRN",.4,2174,-1)
0^1
"KRN",.4,2174,0)
ECX CLINIC CODE^2950414.0658^^728.441^^^2970521^
"KRN",.4,2174,"F",2)
.01~1~
"KRN",.4,2174,"H")
NATIONAL CLINIC LIST
"KRN",.4,2191,-1)
1^3
"KRN",.4,2191,0)
ECXADMISSIONS    FILE #405
"KRN",.4,2192,-1)
1^4
"KRN",.4,2192,0)
ECXDENTAL    FILE #221
"KRN",.4,2193,-1)
1^5
"KRN",.4,2193,0)
ECXEC    FILE #721
"KRN",.4,2194,-1)
1^6
"KRN",.4,2194,0)
ECXLABPAT    FILE #69
"KRN",.4,2195,-1)
1^7
"KRN",.4,2195,0)
ECXLABRESF    FILE #69
"KRN",.4,2196,-1)
1^8
"KRN",.4,2196,0)
ECXMOVEMENTS    FILE #405
"KRN",.4,2197,-1)
1^9
"KRN",.4,2197,0)
ECXNURSSOURCE    FILE #41.9
"KRN",.4,2198,-1)
1^10
"KRN",.4,2198,0)
ECXPAF    FILE #45.9
"KRN",.4,2199,-1)
1^11
"KRN",.4,2199,0)
ECXRADPAT    FILE #70
"KRN",.4,2200,-1)
1^12
"KRN",.4,2200,0)
ECXSURG    FILE #130
"KRN",.4,2201,-1)
1^13
"KRN",.4,2201,0)
ECXTREATINGCHANGES    FILE #405
"KRN",.401,1437,-1)
0^2
"KRN",.401,1437,0)
ECX LOG^2940805.1257^^727^^^2971006^
"KRN",.401,1437,2,0)
^.4014^3^3
"KRN",.401,1437,2,1,0)
727^2^TYPE^@^^^^^^4
"KRN",.401,1437,2,1,"GET")
S DISX(1)=$P($G(^ECX(727,D0,0)),U,3)
"KRN",.401,1437,2,1,"IX")
^ECX(727,"AD",^ECX(727,^2
"KRN",.401,1437,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,1437,2,1,"SER")
0.0000^0.0000
"KRN",.401,1437,2,1,"TXT")
TYPE not null
"KRN",.401,1437,2,2,0)
727^3^START DATE/TIME^@^^^^^^1
"KRN",.401,1437,2,2,"ASK")
1
"KRN",.401,1437,2,2,"F")
2970800.99999^8 1^8/1/97
"KRN",.401,1437,2,2,"GET")
S DISX(2)=$P($G(^ECX(727,D0,0)),U,4)
"KRN",.401,1437,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,1437,2,2,"SER")
0.0000^0.0000
"KRN",.401,1437,2,2,"T")
z^
"KRN",.401,1437,2,2,"TXT")
START DATE/TIME not null
"KRN",.401,1437,2,3,0)
727^^(#5)>0^"@B^;L1^^^^^4
"KRN",.401,1437,2,3,"CM")
S Y(1)=$S($D(^ECX(727,D0,0)):^(0),1:"") S X=$P(Y(1),U,6)>0 I D0>0 S DISX(3)=X
"KRN",.401,1437,2,3,"F")
0
"KRN",.401,1437,2,3,"GET")
S Y(1)=$S($D(^ECX(727,D0,0)):^(0),1:"") S X=$P(Y(1),U,6)>0 I D0>0 S DISX(3)=X
"KRN",.401,1437,2,3,"QCON")
I DISX(3)
"KRN",.401,1437,2,3,"T")
1
"KRN",.401,1437,2,3,"TXT")
(#5)>0
"KRN",.401,1437,2,"B",727,1)

"KRN",.401,1437,2,"B",727,2)

"KRN",.401,1437,2,"B",727,3)

"KRN",.401,1438,-1)
0^1
"KRN",.401,1438,0)
ECX CLINIC CODE^2950414.0658^^728.441^^^2970521^
"KRN",.401,1438,2,0)
^.4014^1^1
"KRN",.401,1438,2,1,0)
728.441^.01^CODE^]^^^^^^4
"KRN",.401,1438,2,1,"GET")
S DISX(1)=$P($G(^ECX(728.441,D0,0)),U,1)
"KRN",.401,1438,2,1,"IX")
^ECX(728.441,"B",^ECX(728.441,^2
"KRN",.401,1438,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,1438,2,1,"TXT")
CODE not null
"KRN",.401,1438,2,"B",728.441,1)

"KRN",.401,1485,-1)
1^3
"KRN",.401,1485,0)
ECXADMISSIONS    FILE #405
"KRN",.401,1486,-1)
1^4
"KRN",.401,1486,0)
ECXDENTAL    FILE #221
"KRN",.401,1487,-1)
1^5
"KRN",.401,1487,0)
ECXEC    FILE #721
"KRN",.401,1488,-1)
1^6
"KRN",.401,1488,0)
ECXLABPAT    FILE #69
"KRN",.401,1489,-1)
1^7
"KRN",.401,1489,0)
ECXLABRESF    FILE #69
"KRN",.401,1490,-1)
1^8
"KRN",.401,1490,0)
ECXMOVEMENTS    FILE #405
"KRN",.401,1491,-1)
1^9
"KRN",.401,1491,0)
ECXNURSSOURCE    FILE #41.9
"KRN",.401,1492,-1)
1^10
"KRN",.401,1492,0)
ECXPAF    FILE #45.9
"KRN",.401,1493,-1)
1^11
"KRN",.401,1493,0)
ECXRADTEST    FILE #70
"KRN",.401,1494,-1)
1^12
"KRN",.401,1494,0)
ECXSURG    FILE #130
"KRN",.401,1495,-1)
1^13
"KRN",.401,1495,0)
ECXTREATINGCHANGES    FILE #405
"KRN",19,10114,-1)
0^37
"KRN",19,10114,0)
ECXLAB^Lab Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10114,1,0)
^^4^4^2950417^^^^
"KRN",19,10114,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10114,1,2,0)
laboratory data for a selected date range. This data is stored in
"KRN",19,10114,1,3,0)
the LABORATORY EXTRACT file (#727.813) until the data is transmitted
"KRN",19,10114,1,4,0)
to the commercial vendor.
"KRN",19,10114,25)
EN^ECXLAB1
"KRN",19,10114,"U")
LAB EXTRACT
"KRN",19,10115,-1)
0^46
"KRN",19,10115,0)
ECXNURS^Nursing Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10115,1,0)
^^4^4^2950417^^^^
"KRN",19,10115,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10115,1,2,0)
nursing data for a selected date range. This data is stored in the
"KRN",19,10115,1,3,0)
NURSING EXTRACT file (#727.805) until the data is transmitted
"KRN",19,10115,1,4,0)
to the commercial vendor.
"KRN",19,10115,25)
BEG^ECXNURS
"KRN",19,10115,"U")
NURSING EXTRACT
"KRN",19,10116,-1)
0^49
"KRN",19,10116,0)
ECXPSO^Prescription Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10116,1,0)
^^4^4^2950417^^^^
"KRN",19,10116,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10116,1,2,0)
prescription (pharmacy outpatient) data for a selected date range.
"KRN",19,10116,1,3,0)
This data is stored in the PRESCRIPTION EXTRACT file (#727.81)
"KRN",19,10116,1,4,0)
until the data is transmitted to the commercial vendor.
"KRN",19,10116,25)
BEG^ECXOPRX
"KRN",19,10116,"U")
PRESCRIPTION EXTRACT
"KRN",19,10117,-1)
0^52
"KRN",19,10117,0)
ECXRAD^Radiology Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10117,1,0)
^^4^4^2950417^^^^
"KRN",19,10117,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10117,1,2,0)
radiology data for a selected date range. This data is stored in the
"KRN",19,10117,1,3,0)
RADIOLOGY EXTRACT file (#727.814) until the data is transmitted
"KRN",19,10117,1,4,0)
to the commercial vendor.
"KRN",19,10117,25)
BEG^ECXRAD
"KRN",19,10117,"U")
RADIOLOGY EXTRACT
"KRN",19,10118,-1)
0^60
"KRN",19,10118,0)
ECXSURG^Surgery Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10118,1,0)
^^4^4^2950417^^^^
"KRN",19,10118,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10118,1,2,0)
surgery data for a selected date range. This data is stored in the
"KRN",19,10118,1,3,0)
SURGERY EXTRACT file (#727.811) until the data is transmitted
"KRN",19,10118,1,4,0)
to the commercial vendor.
"KRN",19,10118,25)
BEG^ECXSURG
"KRN",19,10118,"U")
SURGERY EXTRACT
"KRN",19,10119,-1)
3^42
"KRN",19,10119,0)
ECXMENU^Package Extracts^^M^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10119,1,0)
^^2^2^2960515^^^^
"KRN",19,10119,1,1,0)
Using this menu the extract manager has the ability to generate the
"KRN",19,10119,1,2,0)
individual package extracts.
"KRN",19,10119,3.92,0)
^19.392A
"KRN",19,10119,10,0)
^19.01PI^20^20
"KRN",19,10119,10,1,0)
10114^LAB^35
"KRN",19,10119,10,1,"^")
ECXLAB
"KRN",19,10119,10,2,0)
10115^NUR^45
"KRN",19,10119,10,2,"^")
ECXNURS
"KRN",19,10119,10,3,0)
10116^PRE^55
"KRN",19,10119,10,3,"^")
ECXPSO
"KRN",19,10119,10,4,0)
10117^RAD^65
"KRN",19,10119,10,4,"^")
ECXRAD
"KRN",19,10119,10,5,0)
10120^ECS^25
"KRN",19,10119,10,5,"^")
ECXEC
"KRN",19,10119,10,6,0)
10118^SUR^70
"KRN",19,10119,10,6,"^")
ECXSURG
"KRN",19,10119,10,8,0)
10124^ADM^5
"KRN",19,10119,10,8,"^")
ECXADM
"KRN",19,10119,10,9,0)
10125^DEN^20
"KRN",19,10119,10,9,"^")
ECXDENT
"KRN",19,10119,10,10,0)
10126^MOV^75
"KRN",19,10119,10,10,"^")
ECXMOV
"KRN",19,10119,10,12,0)
10127^NOS^10
"KRN",19,10119,10,12,"^")
ECXSCNS
"KRN",19,10119,10,13,0)
10128^CLI^15
"KRN",19,10119,10,13,"^")
ECXSCX
"KRN",19,10119,10,14,0)
10129^UDP^85
"KRN",19,10119,10,14,"^")
ECXUD
"KRN",19,10119,10,15,0)
10133^IVP^30
"KRN",19,10119,10,15,"^")
ECXIV
"KRN",19,10119,10,16,0)
10134^TRT^80
"KRN",19,10119,10,16,"^")
ECXTRT
"KRN",19,10119,10,17,0)
10136^PAS^50
"KRN",19,10119,10,17,"^")
ECXPAI
"KRN",19,10119,10,19,0)
10164^LAR^40
"KRN",19,10119,10,19,"^")
ECXLABR
"KRN",19,10119,10,20,0)
10170^ECQ^60
"KRN",19,10119,10,20,"^")
ECXQSR
"KRN",19,10119,99)
57211,42378
"KRN",19,10119,"U")
PACKAGE EXTRACTS
"KRN",19,10120,-1)
0^33
"KRN",19,10120,0)
ECXEC^Event Capture Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10120,1,0)
^^4^4^2950417^^^^
"KRN",19,10120,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10120,1,2,0)
event capture data for a selected date range. This data is stored in
"KRN",19,10120,1,3,0)
the EVENT CAPTURE LOCAL EXTRACT file (#727.815) until the data
"KRN",19,10120,1,4,0)
is transmitted to the commercial vendor.
"KRN",19,10120,25)
BEG^ECXEC
"KRN",19,10120,"U")
EVENT CAPTURE EXTRACT
"KRN",19,10121,-1)
0^56
"KRN",19,10121,0)
ECXSCLOAD^Create DSS Clinic Stop Code File^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10121,1,0)
^^46^46^2960717^^^^
"KRN",19,10121,1,1,0)
 This option allows the DSS extract manager to create the CLINICS AND
"KRN",19,10121,1,2,0)
 STOP CODES file (#728.44) which will contain clinics, the stop codes
"KRN",19,10121,1,3,0)
 assigned to those clinics by MAS, and the stop codes used for those
"KRN",19,10121,1,4,0)
 clinics by DSS.  The process by which new clinic entries are added and 
"KRN",19,10121,1,5,0)
 existing clinic entries are edited is as follows:
"KRN",19,10121,1,6,0)
  
"KRN",19,10121,1,7,0)
 NEW CLINIC ENTRIES
"KRN",19,10121,1,8,0)
  1. The HOSPITAL LOCATION file (#44) is searched for all clinics.  
"KRN",19,10121,1,9,0)
     Clinics that are currently inactive are ignored.  
"KRN",19,10121,1,10,0)
  2. New clinic entries to the CLINICS AND STOP CODES file (#728.44) are 
"KRN",19,10121,1,11,0)
     added with the following field defaults:
"KRN",19,10121,1,12,0)
     a. STOP CODE field (1) = STOP CODE NUMBER field (8) in HOSPITAL 
"KRN",19,10121,1,13,0)
        LOCATION file (#44)
"KRN",19,10121,1,14,0)
     b. CREDIT STOP CODE field (2) = CREDIT STOP CODE field (2503) in 
"KRN",19,10121,1,15,0)
        HOSPITAL LOCATION file (#44)
"KRN",19,10121,1,16,0)
     c. DSS STOP CODE field (3)= STOP CODE NUMBER field (8) in HOSPITAL 
"KRN",19,10121,1,17,0)
        LOCATION file (#44)
"KRN",19,10121,1,18,0)
     d. DSS CREDIT STOP CODE field (4) = CREDIT STOP CODE field (2503) 
"KRN",19,10121,1,19,0)
        in HOSPITAL LOCATION file (#44)
"KRN",19,10121,1,20,0)
     e. ACTION TO SEND field (5) = 
"KRN",19,10121,1,21,0)
        "1" (SEND STOP CODE) if CREDIT STOP CODE field (2) does not
"KRN",19,10121,1,22,0)
            exist
"KRN",19,10121,1,23,0)
        "5" (SEND BOTH AS ONE RECORD WITHOUT NATIONAL CODE) if CREDIT 
"KRN",19,10121,1,24,0)
            STOP CODE field (2) exists
"KRN",19,10121,1,25,0)
        "6" (DO NOT SEND) if Clinic is flagged as a "non-count" clinic 
"KRN",19,10121,1,26,0)
            in HOSPITAL LOCATION file (#44)
"KRN",19,10121,1,27,0)
 
"KRN",19,10121,1,28,0)
 EXISTING CLINIC ENTRIES
"KRN",19,10121,1,29,0)
  1. All pre-existing clinics are checked against their counterpart in 
"KRN",19,10121,1,30,0)
     the HOSPITAL LOCATION file (#44) to be sure that the STOP CODE 
"KRN",19,10121,1,31,0)
     field (1) in the CLINICS AND STOP CODES file (#728.44) matches the 
"KRN",19,10121,1,32,0)
     STOP CODE NUMBER field (8) in the HOSPITAL LOCATION file (#44).  
"KRN",19,10121,1,33,0)
     The same check is made on the CREDIT STOP CODE field (2) to be sure 
"KRN",19,10121,1,34,0)
     that it matches the CREDIT STOP CODE field (2503) in the HOSPITAL 
"KRN",19,10121,1,35,0)
     LOCATION file (#44).
"KRN",19,10121,1,36,0)
  2. Any pre-existing clinic that is now marked as "inactive" in the 
"KRN",19,10121,1,37,0)
     HOSPITAL LOCATION file (#44) is flagged as such in the CLINICS AND 
"KRN",19,10121,1,38,0)
     STOP CODES file (#728.44).  This inactive indicator will be 
"KRN",19,10121,1,39,0)
     displayed as an "*" beside the clinic name on the worksheet for the
"KRN",19,10121,1,40,0)
     "Clinics and DSS Stop Codes Print".  NOTE: "Inactive" clinics may 
"KRN",19,10121,1,41,0)
     still have valid past data for DSS.
"KRN",19,10121,1,42,0)
  3. Any stop code changes to pre-existing clinics will delete the DATE 
"KRN",19,10121,1,43,0)
     LAST REVIEWED field (6) in the CLINICS AND STOP CODES file (#728.44).
"KRN",19,10121,1,44,0)
     This will ensure that the edited clinics will print out as 
"KRN",19,10121,1,45,0)
     "unreviewed" the next time the clinic worksheet (from the "Clinics 
"KRN",19,10121,1,46,0)
     and DSS Stop Codes Print") is produced.
"KRN",19,10121,25)
EN^ECXSCLD
"KRN",19,10121,"U")
CREATE DSS CLINIC STOP CODE FI
"KRN",19,10122,-1)
0^55
"KRN",19,10122,0)
ECXSCLIST^Clinics and DSS Stop Codes Print^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10122,1,0)
^^4^4^2950612^^^^
"KRN",19,10122,1,1,0)
Using this option a worksheet may be printed for the DSS extract
"KRN",19,10122,1,2,0)
manager to use when creating the CLINICS AND STOP CODES file (#728.44)
"KRN",19,10122,1,3,0)
which relates clinics, the stop codes for those clinics used by MAS, and
"KRN",19,10122,1,4,0)
the stop codes required by DSS.
"KRN",19,10122,25)
PRINT^ECXSCLD
"KRN",19,10122,"U")
CLINICS AND DSS STOP CODES PRI
"KRN",19,10123,-1)
0^54
"KRN",19,10123,0)
ECXSCEDIT^Enter/Edit DSS Stop Codes for Clinics^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10123,1,0)
^^4^4^2950417^^^^
"KRN",19,10123,1,1,0)
This options provides a method for the extract manager to select
"KRN",19,10123,1,2,0)
the stop codes for each clinic which will be associated with that
"KRN",19,10123,1,3,0)
clinic for the DSS extract.  These codes may be the same as those
"KRN",19,10123,1,4,0)
associated with the clinic by MAS but they may differ.
"KRN",19,10123,25)
EDIT^ECXSCLD
"KRN",19,10123,"U")
ENTER/EDIT DSS STOP CODES FOR 
"KRN",19,10124,-1)
0^30
"KRN",19,10124,0)
ECXADM^Admissions Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10124,1,0)
^^4^4^2950417^^^^
"KRN",19,10124,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10124,1,2,0)
patient admissions data for a selected date range. This data is stored
"KRN",19,10124,1,3,0)
in the ADMISSION EXTRACT file (#727.802) until the data is transmitted
"KRN",19,10124,1,4,0)
to the commercial vendor.
"KRN",19,10124,3.91,0)
^19.391^^0
"KRN",19,10124,3.92,0)
^19.392A^^0
"KRN",19,10124,25)
BEG^ECXADM
"KRN",19,10124,"U")
ADMISSIONS EXTRACT
"KRN",19,10125,-1)
0^32
"KRN",19,10125,0)
ECXDENT^Dental Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10125,1,0)
^^4^4^2950417^^^^
"KRN",19,10125,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10125,1,2,0)
dental data for a selected date range. This data is stored in the
"KRN",19,10125,1,3,0)
DENTAL EXTRACT file (#727.806) until the data is transmitted
"KRN",19,10125,1,4,0)
to the commercial vendor.
"KRN",19,10125,25)
BEG^ECXDENT
"KRN",19,10125,"U")
DENTAL EXTRACT
"KRN",19,10126,-1)
0^44
"KRN",19,10126,0)
ECXMOV^Transfer and Discharge Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10126,1,0)
^^4^4^2950417^^^^
"KRN",19,10126,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10126,1,2,0)
patient movement (transfer and discharge) data for a selected date
"KRN",19,10126,1,3,0)
range. This data is stored in the PHYSICAL MOVEMENT EXTRACT file
"KRN",19,10126,1,4,0)
(#727.808) until the data is transmitted to the commercial vendor.
"KRN",19,10126,25)
BEG^ECXMOV
"KRN",19,10126,"U")
TRANSFER AND DISCHARGE EXTRACT
"KRN",19,10127,-1)
0^57
"KRN",19,10127,0)
ECXSCNS^Clinic No-Show Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10127,1,0)
^^4^4^2950417^^^^
"KRN",19,10127,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10127,1,2,0)
clinic no-show data for a selected date range. This data is stored in the
"KRN",19,10127,1,3,0)
CLINIC NOSHOW EXTRACT file (#727.804) until the data is transmitted
"KRN",19,10127,1,4,0)
to the commercial vendor.
"KRN",19,10127,25)
BEG^ECXSCNS
"KRN",19,10127,"U")
CLINIC NO-SHOW EXTRACT
"KRN",19,10128,-1)
0^58
"KRN",19,10128,0)
ECXSCX^Clinic Visit Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10128,1,0)
^^5^5^2950417^^^^
"KRN",19,10128,1,1,0)
Extract Clinic visit data.
"KRN",19,10128,1,2,0)
This option provides the extract manager the ability to extract the
"KRN",19,10128,1,3,0)
clinic visit data for a selected date range. This data is stored in the
"KRN",19,10128,1,4,0)
CLINIC EXTRACT file (#727.803) until the data is transmitted
"KRN",19,10128,1,5,0)
to the commercial vendor.
"KRN",19,10128,25)
BEG^ECXSCX
"KRN",19,10128,"U")
CLINIC VISIT EXTRACT
"KRN",19,10129,-1)
0^64
"KRN",19,10129,0)
ECXUD^Unit Dose Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10129,1,0)
^^4^4^2950417^^^^
"KRN",19,10129,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10129,1,2,0)
pharmacy unit dose data for a selected date range. This data is
"KRN",19,10129,1,3,0)
stored in the UNIT DOSE LOCAL EXTRACT file (#727.809)
"KRN",19,10129,1,4,0)
until the data is transmitted to the commercial vendor.
"KRN",19,10129,25)
BEG^ECXUD
"KRN",19,10129,"U")
UNIT DOSE EXTRACT
"KRN",19,10130,-1)
3^43
"KRN",19,10130,0)
ECXMGR^Extract Manager's Options^^M^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10130,1,0)
^^3^3^2961004^^^^
"KRN",19,10130,1,1,0)
This is the main menu for the DSS extract manager. All setup options,
"KRN",19,10130,1,2,0)
audit reports, maintenance activities, package extracts, and
"KRN",19,10130,1,3,0)
transmission management options reside within the menu structure.
"KRN",19,10130,10,0)
^19.01PI^13^13
"KRN",19,10130,10,4,0)
10119^P^10
"KRN",19,10130,10,4,"^")
ECXMENU
"KRN",19,10130,10,8,0)
10149^E^20
"KRN",19,10130,10,8,"^")
ECX SOURCE AUDITS
"KRN",19,10130,10,11,0)
10152^S^15
"KRN",19,10130,10,11,"^")
ECX SAS AUDITS
"KRN",19,10130,10,12,0)
10161^M^5
"KRN",19,10130,10,12,"^")
ECX MAINTENANCE
"KRN",19,10130,10,13,0)
10162^T^25
"KRN",19,10130,10,13,"^")
ECX TRANSMISSION
"KRN",19,10130,99)
57279,37571
"KRN",19,10130,99.1)
56026,44999
"KRN",19,10130,"U")
EXTRACT MANAGER'S OPTIONS
"KRN",19,10131,-1)
0^50
"KRN",19,10131,0)
ECXPURG^Purge Data from Extract Files^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10131,1,0)
^^20^20^2961121^^
"KRN",19,10131,1,1,0)
This option purges individual or a range of DSS extracts, or data that 
"KRN",19,10131,1,2,0)
resides in the "holding files" for the IVP and UDP extracts.
"KRN",19,10131,1,3,0)
 
"KRN",19,10131,1,4,0)
Care must be taken for several reasons:
"KRN",19,10131,1,5,0)
 
"KRN",19,10131,1,6,0)
-  You can purge ANY existing extract.  This includes transmitted and non-
"KRN",19,10131,1,7,0)
   transmitted extracts as well as extracts that did not run to completion
"KRN",19,10131,1,8,0)
   due to errors or system problems.
"KRN",19,10131,1,9,0)
-  Choosing a range of extracts (or a broad date range for the "holding
"KRN",19,10131,1,10,0)
   files") could mean an excessively large number of records and be very
"KRN",19,10131,1,11,0)
   CPU intensive.  Please be sure to queue this purge for off-hours and
"KRN",19,10131,1,12,0)
   limit the number of extracts to be purged per a single queued session.
"KRN",19,10131,1,13,0)
-  Data in the IVP and UDP holding files CANNOT be recreated.  Once it is
"KRN",19,10131,1,14,0)
   purged, extracts can no longer be generated for that time period.
"KRN",19,10131,1,15,0)
 
"KRN",19,10131,1,16,0)
PURGE RECOMMENDATIONS:
"KRN",19,10131,1,17,0)
Deletion of any local DHCP extracts or DHCP "source of extracts" (i.e., lab 
"KRN",19,10131,1,18,0)
data, etc.) is not recommended until your facility has successfully created 
"KRN",19,10131,1,19,0)
extracts, transmitted to the Austin Automation Center, audited the counts, 
"KRN",19,10131,1,20,0)
loaded the data into DSS AND ARE CONTENT WITH THE RESULTS.
"KRN",19,10131,25)
EN^ECXPURG
"KRN",19,10131,"U")
PURGE DATA FROM EXTRACT FILES
"KRN",19,10132,-1)
0^61
"KRN",19,10132,0)
ECXTRANS^Transmit Data from Extract Files^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10132,1,0)
^^3^3^2950418^^^^
"KRN",19,10132,1,1,0)
This option allows messages containing the data from an individual
"KRN",19,10132,1,2,0)
extract to be sent to the Austin Automation Center in a series of mail
"KRN",19,10132,1,3,0)
messages.
"KRN",19,10132,25)
EN^ECXTRANS
"KRN",19,10132,"U")
TRANSMIT DATA FROM EXTRACT FIL
"KRN",19,10133,-1)
0^36
"KRN",19,10133,0)
ECXIV^IV Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10133,1,0)
^^4^4^2970610^^^^
"KRN",19,10133,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10133,1,2,0)
pharmacy IV data for a selected date range. This data is stored in
"KRN",19,10133,1,3,0)
the IV DETAIL EXTRACT file (#727.819) until the data is transmitted
"KRN",19,10133,1,4,0)
to the commercial vendor.
"KRN",19,10133,25)
BEG^ECXPIVD
"KRN",19,10133,"U")
IV EXTRACT
"KRN",19,10134,-1)
0^62
"KRN",19,10134,0)
ECXTRT^Treating Specialty Change Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10134,1,0)
^^4^4^2950417^^^^
"KRN",19,10134,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10134,1,2,0)
treating specialty change data for a selected date range. This data is
"KRN",19,10134,1,3,0)
stored in the TREATING SPECIALTY CHANGE EXTRACT file (#727.817)
"KRN",19,10134,1,4,0)
until the data is transmitted to the commercial vendor.
"KRN",19,10134,25)
BEG^ECXTRT
"KRN",19,10134,"U")
TREATING SPECIALTY CHANGE EXTR
"KRN",19,10135,-1)
0^53
"KRN",19,10135,0)
ECXSCAPPROV^Approve Reviewed DSS Clinic Worksheet^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10135,1,0)
^^6^6^2960717^^^^
"KRN",19,10135,1,1,0)
This option provides the extract manager a mechanism to approve all
"KRN",19,10135,1,2,0)
DSS Stop Codes and DSS Credit Stop Codes as site defined in the CLINICS 
"KRN",19,10135,1,3,0)
AND STOP CODES file (#728.44).  Running this option will mark all 
"KRN",19,10135,1,4,0)
currently existing entries in this file as "reviewed" with a date.  This 
"KRN",19,10135,1,5,0)
will allow sites to select to print the "Clinics and DSS Stop Codes 
"KRN",19,10135,1,6,0)
Print" by ALL or UNREVIEWED.
"KRN",19,10135,25)
APPROVE^ECXSCLD
"KRN",19,10135,"U")
APPROVE REVIEWED DSS CLINIC WO
"KRN",19,10136,-1)
0^47
"KRN",19,10136,0)
ECXPAI^PAI File Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10136,1,0)
^^4^4^2960530^^^^
"KRN",19,10136,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10136,1,2,0)
patient assessment instrument (PAI) data for a selected date range.
"KRN",19,10136,1,3,0)
This data is stored in the PAI EXTRACT file (#727.823) until the
"KRN",19,10136,1,4,0)
data is transmitted to the commercial vendor.
"KRN",19,10136,25)
BEG^ECXPAI
"KRN",19,10136,"U")
PAI FILE EXTRACT
"KRN",19,10137,-1)
0^59
"KRN",19,10137,0)
ECXSETUP^Generate the Inpatient Setup Extract^^R^^ECXMGR^^^^^^DSS EXTRACTS^^1
"KRN",19,10137,1,0)
^^7^7^2950421^^^^
"KRN",19,10137,1,1,0)
This option generates the inpatient setup extract which creates
"KRN",19,10137,1,2,0)
the hospital population for the selected DSS start up date. This data
"KRN",19,10137,1,3,0)
is stored in the ADMISSION SETUP EXTRACT file (#727.82), the
"KRN",19,10137,1,4,0)
PHYSICAL MOVEMENT SETUP EXTRACT file (#727.821), and the
"KRN",19,10137,1,5,0)
TREATING SPECIALTY CHANGE SETUP EXTRACT file (#727.822) until
"KRN",19,10137,1,6,0)
the data is transmitted to the commercial vendor. The option MUST
"KRN",19,10137,1,7,0)
only be run once.
"KRN",19,10137,20)
W !!!,"WARNING.",!,"This is very resource intensive and should be queued to run at slack time.",!!!
"KRN",19,10137,25)
EN^ECXSETUP
"KRN",19,10137,"U")
GENERATE THE INPATIENT SETUP E
"KRN",19,10138,-1)
0^41
"KRN",19,10138,0)
ECXMDELE^Delete List of Messages^^S^^^^^^^^DSS EXTRACTS
"KRN",19,10138,1,0)
^^4^4^2970605^^^^
"KRN",19,10138,1,1,0)
This option deletes mail message numbers in the DSS EXTRACT LOG file
"KRN",19,10138,1,2,0)
(#727) as the confirmations are received from the Austin Automation
"KRN",19,10138,1,3,0)
Center. This server option (S.ECXMDELE@<your site>) should be
"KRN",19,10138,1,4,0)
made a remote member of the DMS mail group.
"KRN",19,10138,25)
ECXMDELE
"KRN",19,10138,220)
XQSERVER^R^^^Y^N
"KRN",19,10138,"U")
DELETE LIST OF MESSAGES
"KRN",19,10139,-1)
0^1
"KRN",19,10139,0)
ECX ADM SOURCE AUDIT^Admission (ADM) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10139,1,0)
^^14^14^2971107^
"KRN",19,10139,1,1,0)
This option will generate a report from the ADMISSION EXTRACT
"KRN",19,10139,1,2,0)
file (#727.802) which will allow the DSS extract manager to
"KRN",19,10139,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10139,1,4,0)
Center.
"KRN",19,10139,1,5,0)
  
"KRN",19,10139,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10139,1,7,0)
in the verification process:
"KRN",19,10139,1,8,0)
  
"KRN",19,10139,1,9,0)
Report Title - Gains and Losses Sheet/Bed Status Report
"KRN",19,10139,1,10,0)
Menu Option -  Gains and Losses (G&L) Sheet [DG G&L SHEET]
"KRN",19,10139,1,11,0)
  
"KRN",19,10139,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10139,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10139,1,14,0)
division (if applicable).
"KRN",19,10139,25)
EN^ECXAADM
"KRN",19,10139,60)

"KRN",19,10139,62)

"KRN",19,10139,63)

"KRN",19,10139,64)

"KRN",19,10139,65)

"KRN",19,10139,66)

"KRN",19,10139,"U")
ADMISSION (ADM) EXTRACT AUDIT
"KRN",19,10140,-1)
0^11
"KRN",19,10140,0)
ECX MOV SOURCE AUDIT^Physical Movement (MOV) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10140,1,0)
^^14^14^2971107^
"KRN",19,10140,1,1,0)
This option will generate a report from the PHYSICAL MOVEMENT
"KRN",19,10140,1,2,0)
EXTRACT file (#727.808) which will allow the DSS extract manager to
"KRN",19,10140,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10140,1,4,0)
Center.
"KRN",19,10140,1,5,0)
  
"KRN",19,10140,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10140,1,7,0)
in the verification process:
"KRN",19,10140,1,8,0)
  
"KRN",19,10140,1,9,0)
Report Title - Gains & Losses Sheet/Bed Status Report
"KRN",19,10140,1,10,0)
Menu Option -  Gains and Losses (G&L) Sheet [DG G&L SHEET]
"KRN",19,10140,1,11,0)
  
"KRN",19,10140,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10140,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10140,1,14,0)
division (if applicable).
"KRN",19,10140,25)
EN^ECXAMOV
"KRN",19,10140,60)

"KRN",19,10140,62)

"KRN",19,10140,63)

"KRN",19,10140,64)

"KRN",19,10140,65)

"KRN",19,10140,66)

"KRN",19,10140,"U")
PHYSICAL MOVEMENT (MOV) EXTRAC
"KRN",19,10141,-1)
0^29
"KRN",19,10141,0)
ECX TRT SOURCE AUDIT^Treating Specialty Change (TRT) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10141,1,0)
^^14^14^2971107^
"KRN",19,10141,1,1,0)
This option will generate a report from the TREATING SPECIALTY
"KRN",19,10141,1,2,0)
CHANGE EXTRACT file (#727.817) which will allow the DSS extract 
"KRN",19,10141,1,3,0)
manager to verify extract data before transmission to the Austin 
"KRN",19,10141,1,4,0)
Automation Center.
"KRN",19,10141,1,5,0)
  
"KRN",19,10141,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10141,1,7,0)
in the verification process:
"KRN",19,10141,1,8,0)
  
"KRN",19,10141,1,9,0)
Report Title - Gains & Losses Sheet/Treating Specialty Report
"KRN",19,10141,1,10,0)
Menu Option -  Gains and Losses (G&L) Sheet [DG G&L SHEET]
"KRN",19,10141,1,11,0)
  
"KRN",19,10141,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10141,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10141,1,14,0)
division (if applicable).
"KRN",19,10141,25)
EN^ECXATRT
"KRN",19,10141,60)

"KRN",19,10141,62)

"KRN",19,10141,63)

"KRN",19,10141,64)

"KRN",19,10141,65)

"KRN",19,10141,66)

"KRN",19,10141,"U")
TREATING SPECIALTY CHANGE (TRT
"KRN",19,10142,-1)
0^2
"KRN",19,10142,0)
ECX DEN SOURCE AUDIT^Dental (DEN) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10142,1,0)
^^14^14^2971107^
"KRN",19,10142,1,1,0)
This option will generate a report from the DENTAL EXTRACT
"KRN",19,10142,1,2,0)
file (#727.806) which will allow the DSS extract manager to
"KRN",19,10142,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10142,1,4,0)
Center.
"KRN",19,10142,1,5,0)
  
"KRN",19,10142,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10142,1,7,0)
in the verification process:
"KRN",19,10142,1,8,0)
  
"KRN",19,10142,1,9,0)
Report Title - Dental Service Treatment Report - Summary Report for Clinic
"KRN",19,10142,1,10,0)
Menu Option -  Clinic Summary [DENTTREATCLINIC RPT]
"KRN",19,10142,1,11,0)
  
"KRN",19,10142,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10142,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10142,1,14,0)
division (if applicable).
"KRN",19,10142,25)
EN^ECXADEN
"KRN",19,10142,60)

"KRN",19,10142,62)

"KRN",19,10142,63)

"KRN",19,10142,64)

"KRN",19,10142,65)

"KRN",19,10142,66)

"KRN",19,10142,"U")
DENTAL (DEN) EXTRACT AUDIT
"KRN",19,10143,-1)
0^14
"KRN",19,10143,0)
ECX PAI SOURCE AUDIT^PAI (PAS) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10143,1,0)
^^14^14^2971107^
"KRN",19,10143,1,1,0)
This option will generate a report from the PAI EXTRACT file
"KRN",19,10143,1,2,0)
(#727.823) which will allow the DSS extract manager to verify
"KRN",19,10143,1,3,0)
extract data before transmission to the Austin Automation
"KRN",19,10143,1,4,0)
Center.
"KRN",19,10143,1,5,0)
  
"KRN",19,10143,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10143,1,7,0)
in the verification process:
"KRN",19,10143,1,8,0)
  
"KRN",19,10143,1,9,0)
Report Title - Record Status Report
"KRN",19,10143,1,10,0)
Menu Option -  Record Status Report [DG RUG STATUS]
"KRN",19,10143,1,11,0)
  
"KRN",19,10143,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10143,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10143,1,14,0)
division (if applicable).
"KRN",19,10143,25)
EN^ECXAPAS
"KRN",19,10143,60)

"KRN",19,10143,62)

"KRN",19,10143,63)

"KRN",19,10143,64)

"KRN",19,10143,65)

"KRN",19,10143,66)

"KRN",19,10143,"U")
PAI (PAS) EXTRACT AUDIT
"KRN",19,10144,-1)
0^3
"KRN",19,10144,0)
ECX ECS SOURCE AUDIT^Event Capture (ECS) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10144,1,0)
^^14^14^2971107^
"KRN",19,10144,1,1,0)
This option will generate a report from the EVENT CAPTURE LOCAL 
"KRN",19,10144,1,2,0)
EXTRACT file (#727.815) which will allow the DSS extract manager to
"KRN",19,10144,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10144,1,4,0)
Center.
"KRN",19,10144,1,5,0)
  
"KRN",19,10144,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10144,1,7,0)
in the verification process:
"KRN",19,10144,1,8,0)
  
"KRN",19,10144,1,9,0)
Report Title - DSS Unit Workload Summary Report
"KRN",19,10144,1,10,0)
Menu Option -  DSS Unit Workload Summary [ECRDSSU]
"KRN",19,10144,1,11,0)
  
"KRN",19,10144,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10144,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10144,1,14,0)
division (if applicable).
"KRN",19,10144,25)
EN^ECXAECS
"KRN",19,10144,60)

"KRN",19,10144,62)

"KRN",19,10144,63)

"KRN",19,10144,64)

"KRN",19,10144,"U")
EVENT CAPTURE (ECS) EXTRACT AU
"KRN",19,10145,-1)
0^8
"KRN",19,10145,0)
ECX LAB SOURCE AUDIT (PATIENT)^Laboratory (LAB) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10145,1,0)
^^14^14^2971117^^^^
"KRN",19,10145,1,1,0)
This option will generate a report from the LABORATORY EXTRACT
"KRN",19,10145,1,2,0)
file (#727.813) which will allow the DSS extract manager to
"KRN",19,10145,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10145,1,4,0)
Center.
"KRN",19,10145,1,5,0)
  
"KRN",19,10145,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10145,1,7,0)
in the verification process:
"KRN",19,10145,1,8,0)
  
"KRN",19,10145,1,9,0)
Report Title - Workload Statistics by Accession Area and Shifts
"KRN",19,10145,1,10,0)
Menu Option -  Workload statistics by accession area and shift [LRRP8]
"KRN",19,10145,1,11,0)
  
"KRN",19,10145,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10145,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10145,1,14,0)
division (if applicable).
"KRN",19,10145,25)
EN^ECXALAB
"KRN",19,10145,60)

"KRN",19,10145,62)

"KRN",19,10145,63)

"KRN",19,10145,64)

"KRN",19,10145,"U")
LABORATORY (LAB) EXTRACT AUDIT
"KRN",19,10147,-1)
0^13
"KRN",19,10147,0)
ECX NUR SOURCE AUDIT^Nursing (NUR) Extract Audit^^R^^^^^^^^DSS EXTRACTS^^1
"KRN",19,10147,1,0)
^^16^16^2971107^
"KRN",19,10147,1,1,0)
This option will generate a report from the NURSING EXTRACT
"KRN",19,10147,1,2,0)
file (#727.805) which will allow the DSS extract manager to
"KRN",19,10147,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10147,1,4,0)
Center.
"KRN",19,10147,1,5,0)
  
"KRN",19,10147,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10147,1,7,0)
in the verification process:
"KRN",19,10147,1,8,0)
  
"KRN",19,10147,1,9,0)
Report Title - Report 10-1106 Segment 200,
"KRN",19,10147,1,10,0)
               Cumulative Daily Patient Classification Data
"KRN",19,10147,1,11,0)
Menu Option -  Patient Category Totals-Midnight Acuity Reports
"KRN",19,10147,1,12,0)
               [NURAPR-RES-MDPC]
"KRN",19,10147,1,13,0)
  
"KRN",19,10147,1,14,0)
Be sure that the extract audit report and the external application
"KRN",19,10147,1,15,0)
report are generated for the same date or date range and the same
"KRN",19,10147,1,16,0)
division (if applicable).
"KRN",19,10147,20)
W !,"The start date should be the same as the end date",!!
"KRN",19,10147,25)
EN^ECXANUR
"KRN",19,10147,60)

"KRN",19,10147,62)

"KRN",19,10147,63)

"KRN",19,10147,64)

"KRN",19,10147,"U")
NURSING (NUR) EXTRACT AUDIT
"KRN",19,10148,-1)
0^16
"KRN",19,10148,0)
ECX RAD SOURCE AUDIT^Radiology (RAD) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10148,1,0)
^^15^15^2971107^
"KRN",19,10148,1,1,0)
This option will generate a report from the RADIOLOGY EXTRACT
"KRN",19,10148,1,2,0)
file (#727.814) which will allow the DSS extract manager to
"KRN",19,10148,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10148,1,4,0)
Center.
"KRN",19,10148,1,5,0)
  
"KRN",19,10148,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10148,1,7,0)
in the verification process:
"KRN",19,10148,1,8,0)
  
"KRN",19,10148,1,9,0)
Report Title - Procedure/CPT Statistics Report, Inpatient
"KRN",19,10148,1,10,0)
               Procedure/CPT Statistics Report, Outpatient
"KRN",19,10148,1,11,0)
Menu Option -  Procedure/CPT Statistics Report [RA CPTSTATS]
"KRN",19,10148,1,12,0)
  
"KRN",19,10148,1,13,0)
Be sure that the extract audit report and the external application
"KRN",19,10148,1,14,0)
report are generated for the same date or date range and the same
"KRN",19,10148,1,15,0)
division (if applicable).
"KRN",19,10148,25)
EN^ECXARAD
"KRN",19,10148,60)

"KRN",19,10148,62)

"KRN",19,10148,63)

"KRN",19,10148,64)

"KRN",19,10148,"U")
RADIOLOGY (RAD) EXTRACT AUDIT
"KRN",19,10149,-1)
3^26
"KRN",19,10149,0)
ECX SOURCE AUDITS^Extract Audit Reports Menu^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10149,10,0)
^19.01PI^12^11
"KRN",19,10149,10,1,0)
10139^ADM^5
"KRN",19,10149,10,1,"^")
ECX ADM SOURCE AUDIT
"KRN",19,10149,10,2,0)
10142^DEN^10
"KRN",19,10149,10,2,"^")
ECX DEN SOURCE AUDIT
"KRN",19,10149,10,3,0)
10144^ECS^15
"KRN",19,10149,10,3,"^")
ECX ECS SOURCE AUDIT
"KRN",19,10149,10,4,0)
10145^LAB^20
"KRN",19,10149,10,4,"^")
ECX LAB SOURCE AUDIT (PATIENT)
"KRN",19,10149,10,6,0)
10140^MOV^30
"KRN",19,10149,10,6,"^")
ECX MOV SOURCE AUDIT
"KRN",19,10149,10,7,0)
10143^PAS^40
"KRN",19,10149,10,7,"^")
ECX PAI SOURCE AUDIT
"KRN",19,10149,10,8,0)
10148^RAD^50
"KRN",19,10149,10,8,"^")
ECX RAD SOURCE AUDIT
"KRN",19,10149,10,9,0)
10150^SUR^55
"KRN",19,10149,10,9,"^")
ECX SUR SOURCE AUDIT
"KRN",19,10149,10,10,0)
10141^TRT^60
"KRN",19,10149,10,10,"^")
ECX TRT SOURCE AUDIT
"KRN",19,10149,10,11,0)
10147^NUR^35
"KRN",19,10149,10,11,"^")
ECX NUR SOURCE AUDIT
"KRN",19,10149,10,12,0)
10171^ECQ^45
"KRN",19,10149,10,12,"^")
ECX QSR SOURCE AUDIT
"KRN",19,10149,99)
57299,28390
"KRN",19,10149,"U")
EXTRACT AUDIT REPORTS MENU
"KRN",19,10150,-1)
0^27
"KRN",19,10150,0)
ECX SUR SOURCE AUDIT^Surgery (SUR) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10150,1,0)
^^14^14^2971107^
"KRN",19,10150,1,1,0)
This option will generate a report from the SURGERY EXTRACT
"KRN",19,10150,1,2,0)
file (#727.811) which will allow the DSS extract manager to
"KRN",19,10150,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10150,1,4,0)
Center.
"KRN",19,10150,1,5,0)
  
"KRN",19,10150,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10150,1,7,0)
in the verification process:
"KRN",19,10150,1,8,0)
  
"KRN",19,10150,1,9,0)
Report Title - Surgical Service Cumulative Report of CPT Codes
"KRN",19,10150,1,10,0)
Menu Option -  Cumulative Report of CPT Codes [SROACCT]
"KRN",19,10150,1,11,0)
  
"KRN",19,10150,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10150,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10150,1,14,0)
division (if applicable).
"KRN",19,10150,25)
EN^ECXASUR
"KRN",19,10150,60)

"KRN",19,10150,62)

"KRN",19,10150,63)

"KRN",19,10150,64)

"KRN",19,10150,"U")
SURGERY (SUR) EXTRACT AUDIT
"KRN",19,10151,-1)
0^4
"KRN",19,10151,0)
ECX EXTRACT LOG REVIEW^Review a Particular Extract for Transmission^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10151,1,0)
^^2^2^2950419^^^^
"KRN",19,10151,1,1,0)
This option allows the review of a particular extract to verify the
"KRN",19,10151,1,2,0)
transmission of messages to the Austin Automation Center.
"KRN",19,10151,25)
EN^ECXXREV
"KRN",19,10151,"U")
REVIEW A PARTICULAR EXTRACT FO
"KRN",19,10152,-1)
3^17
"KRN",19,10152,0)
ECX SAS AUDITS^SAS Extract Audit Reports^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10152,1,0)
^^3^3^2950417^^^^
"KRN",19,10152,1,1,0)
This menu holds the audit reports for those extracts which have
"KRN",19,10152,1,2,0)
additional records created by the SAS programs at the Austin
"KRN",19,10152,1,3,0)
Automation Center.
"KRN",19,10152,10,0)
^19.01PI^4^4
"KRN",19,10152,10,1,0)
10153^DEN^5
"KRN",19,10152,10,1,"^")
ECX SAS DENTAL
"KRN",19,10152,10,2,0)
10154^RAD^15
"KRN",19,10152,10,2,"^")
ECX SAS RADIOLOGY
"KRN",19,10152,10,3,0)
10155^PRE^10
"KRN",19,10152,10,3,"^")
ECX SAS PRESCRIPTION
"KRN",19,10152,10,4,0)
10156^SUR^20
"KRN",19,10152,10,4,"^")
ECX SAS SURGERY
"KRN",19,10152,99)
57042,71933
"KRN",19,10152,"U")
SAS EXTRACT AUDIT REPORTS
"KRN",19,10153,-1)
0^18
"KRN",19,10153,0)
ECX SAS DENTAL^SAS Dental Audit Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10153,1,0)
^^4^4^2950417^^^^
"KRN",19,10153,1,1,0)
This option emulates the SAS routine at the Austin Automation Center
"KRN",19,10153,1,2,0)
which creates new records from the dental extract. Using this option a
"KRN",19,10153,1,3,0)
summary report may be printed for all records sorted by feeder location
"KRN",19,10153,1,4,0)
and feeder key.
"KRN",19,10153,25)
EN^ECXSADEN
"KRN",19,10153,"U")
SAS DENTAL AUDIT REPORT
"KRN",19,10154,-1)
0^20
"KRN",19,10154,0)
ECX SAS RADIOLOGY^SAS Radiology Audit Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10154,1,0)
^^4^4^2971028^^^^
"KRN",19,10154,1,1,0)
This option emulates the SAS routine at the Austin Automation Center
"KRN",19,10154,1,2,0)
which creates new records from the radiology extract. Using this option
"KRN",19,10154,1,3,0)
a summary report may be printed for all records sorted by feeder location
"KRN",19,10154,1,4,0)
and feeder key.
"KRN",19,10154,25)
EN^ECXSARAD
"KRN",19,10154,"U")
SAS RADIOLOGY AUDIT REPORT
"KRN",19,10155,-1)
0^19
"KRN",19,10155,0)
ECX SAS PRESCRIPTION^SAS Prescription Audit Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10155,1,0)
^^4^4^2950417^^^^
"KRN",19,10155,1,1,0)
This option emulates the SAS routine at the Austin Automation Center
"KRN",19,10155,1,2,0)
which creates new records from the prescription (pharmacy outpatient)
"KRN",19,10155,1,3,0)
extract. Using this option a summary report may be printed for all
"KRN",19,10155,1,4,0)
records sorted by feeder location and feeder key.
"KRN",19,10155,25)
EN^ECXSARXS
"KRN",19,10155,"U")
SAS PRESCRIPTION AUDIT REPORT
"KRN",19,10156,-1)
0^21
"KRN",19,10156,0)
ECX SAS SURGERY^SAS Surgery Audit Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10156,1,0)
^^4^4^2971028^^^^
"KRN",19,10156,1,1,0)
This option emulates the SAS routine at the Austin Automation Center
"KRN",19,10156,1,2,0)
which creates new records from the surgery extract. Using this option
"KRN",19,10156,1,3,0)
a summary report may be printed for all records sorted by feeder location
"KRN",19,10156,1,4,0)
and feeder key.
"KRN",19,10156,25)
EN^ECXSASUR
"KRN",19,10156,"U")
SAS SURGERY AUDIT REPORT
"KRN",19,10157,-1)
0^5
"KRN",19,10157,0)
ECX EXTRACT LOG SUMMARY^Summary Report of Extract Logs^^P^^^^^^^^DSS EXTRACTS
"KRN",19,10157,1,0)
^^3^3^2950417^^^^
"KRN",19,10157,1,1,0)
Using this option a summary report may be printed from the EXTRACT
"KRN",19,10157,1,2,0)
LOG file (#727) displaying extract number, feeder system, data set
"KRN",19,10157,1,3,0)
dates (date range), record count, date transmitted, and date purged.
"KRN",19,10157,60)
ECX(727,
"KRN",19,10157,62)
0
"KRN",19,10157,63)
[ECX LOG]
"KRN",19,10157,64)
[ECX LOG]
"KRN",19,10157,"U")
SUMMARY REPORT OF EXTRACT LOGS
"KRN",19,10158,-1)
0^31
"KRN",19,10158,0)
ECXDEFINE^Define Extract Schedule^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10158,1,0)
^^8^8^2950417^^^^
"KRN",19,10158,1,1,0)
This option allows the extract manager to create schedules for
"KRN",19,10158,1,2,0)
running the extracts. Each extract may be scheduled to run daily,
"KRN",19,10158,1,3,0)
weekly, or monthly. For daily and weekly extracts, the offset
"KRN",19,10158,1,4,0)
between the run time and the date range to be extracted may be
"KRN",19,10158,1,5,0)
selected. Monthly extracts extract data for the month previous to
"KRN",19,10158,1,6,0)
the run time. Once the extracts are scheduled through this option,
"KRN",19,10158,1,7,0)
careful attention must be used in trying to change this schedule.
"KRN",19,10158,1,8,0)
Changing this schedule can lead to missing data.
"KRN",19,10158,25)
EN^ECXDEFIN
"KRN",19,10158,"U")
DEFINE EXTRACT SCHEDULE
"KRN",19,10159,-1)
0^35
"KRN",19,10159,0)
ECXFELOC^Print Feeder Locations^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10159,1,0)
^^2^2^2950419^^^^
"KRN",19,10159,1,1,0)
Using this option a list of feeder locations sorted by the feeder system may
"KRN",19,10159,1,2,0)
be printed.
"KRN",19,10159,25)
EN^ECXFELOC
"KRN",19,10159,"U")
PRINT FEEDER LOCATIONS
"KRN",19,10160,-1)
0^34
"KRN",19,10160,0)
ECXFEKEY^Feeder Keys Print^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10160,1,0)
^^2^2^2950419^^^^
"KRN",19,10160,1,1,0)
Using this option a list of feeder keys sorted by the feeder system may be
"KRN",19,10160,1,2,0)
printed.
"KRN",19,10160,25)
EN^ECXFEKEY
"KRN",19,10160,"U")
FEEDER KEYS PRINT
"KRN",19,10161,-1)
3^10
"KRN",19,10161,0)
ECX MAINTENANCE^Maintenance^^M^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10161,1,0)
^^4^4^2961004^^^^
"KRN",19,10161,1,1,0)
This menu provides the extract manager various options to
"KRN",19,10161,1,2,0)
maintain the files necessary to extract data from existing
"KRN",19,10161,1,3,0)
DHCP files and to generate reports of feeder keys and feeder
"KRN",19,10161,1,4,0)
locations.
"KRN",19,10161,10,0)
^19.01PI^8^8
"KRN",19,10161,10,1,0)
10173^1^5
"KRN",19,10161,10,1,"^")
ECX SETUP CLINIC
"KRN",19,10161,10,3,0)
10174^3^15
"KRN",19,10161,10,3,"^")
ECX SETUP INP MEDS
"KRN",19,10161,10,4,0)
10160^4^20
"KRN",19,10161,10,4,"^")
ECXFEKEY
"KRN",19,10161,10,5,0)
10159^5^25
"KRN",19,10161,10,5,"^")
ECXFELOC
"KRN",19,10161,10,6,0)
10158^6^30
"KRN",19,10161,10,6,"^")
ECXDEFINE
"KRN",19,10161,10,7,0)
10175^7^35
"KRN",19,10161,10,7,"^")
ECX SETUP INP CENSUS
"KRN",19,10161,10,8,0)
10177^2^10
"KRN",19,10161,10,8,"^")
ECX SETUP LAB
"KRN",19,10161,10.1)
File Maintenance for DSS
"KRN",19,10161,99)
57134,58958
"KRN",19,10161,"U")
MAINTENANCE
"KRN",19,10162,-1)
3^28
"KRN",19,10162,0)
ECX TRANSMISSION^Transmission Management^^M^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10162,1,0)
^^3^3^2950417^^^^
"KRN",19,10162,1,1,0)
This menu contains the options that provide the extract manager the
"KRN",19,10162,1,2,0)
ability to manage the transmissions of the extracted data to the
"KRN",19,10162,1,3,0)
commercial vendor.
"KRN",19,10162,10,0)
^19.01PI^4^4
"KRN",19,10162,10,1,0)
10132^T^20
"KRN",19,10162,10,1,"^")
ECXTRANS
"KRN",19,10162,10,2,0)
10151^R^10
"KRN",19,10162,10,2,"^")
ECX EXTRACT LOG REVIEW
"KRN",19,10162,10,3,0)
10157^S^15
"KRN",19,10162,10,3,"^")
ECX EXTRACT LOG SUMMARY
"KRN",19,10162,10,4,0)
10131^P^5
"KRN",19,10162,10,4,"^")
ECXPURG
"KRN",19,10162,99)
57180,40714
"KRN",19,10162,"U")
TRANSMISSION MANAGEMENT
"KRN",19,10163,-1)
0^63
"KRN",19,10163,0)
ECXTRYIT^Trial for Setup Extract^^R^^ECXMGR^^^^^^DSS EXTRACTS^^1
"KRN",19,10163,1,0)
^^5^5^2950418^^^^
"KRN",19,10163,1,1,0)
This option uses the logic of the admission setup extract to generate
"KRN",19,10163,1,2,0)
a printed report of the inpatient population on a selected day. This
"KRN",19,10163,1,3,0)
report should be compared to reports from MAS to eliminate any
"KRN",19,10163,1,4,0)
problems in the ADMISSION SETUP EXTRACT file (#727.82) used
"KRN",19,10163,1,5,0)
to generate the admission setup extract.
"KRN",19,10163,20)
W !!!,"WARNING.",!,"This is very resource intensive and should be queued to run at slack time.",!!!
"KRN",19,10163,25)
EN^ECXTRYIT
"KRN",19,10163,"U")
TRIAL FOR SETUP EXTRACT
"KRN",19,10164,-1)
0^38
"KRN",19,10164,0)
ECXLABR^Lab Results Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10164,1,0)
^^4^4^2960906^^^^
"KRN",19,10164,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10164,1,2,0)
laboratory results data for a selected date range. This data is stored in
"KRN",19,10164,1,3,0)
the LAB RESULTS EXTRACT file (#727.824) until the data is transmitted
"KRN",19,10164,1,4,0)
to the commercial vendor.
"KRN",19,10164,25)
BEG^ECXLABR
"KRN",19,10164,"U")
LAB RESULTS EXTRACT
"KRN",19,10165,-1)
0^39
"KRN",19,10165,0)
ECXLABRS^Link DSS Selected Lab Tests to Local Lab Tests^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10165,1,0)
^^5^5^2961217^
"KRN",19,10165,1,1,0)
Using this option the extract manager has the ability to link the DSS
"KRN",19,10165,1,2,0)
selected tests in the DSS LAB TESTS file (#727.2) to the local lab tests
"KRN",19,10165,1,3,0)
in the LABORATORY TESTS file (#60).  Local names for BLOOD and URINE
"KRN",19,10165,1,4,0)
specimens must also be defined.  This information is critical for the DSS
"KRN",19,10165,1,5,0)
Lab Results Extract.
"KRN",19,10165,25)
EN^ECXLABRS
"KRN",19,10165,"U")
LINK DSS SELECTED LAB TESTS TO
"KRN",19,10166,-1)
0^12
"KRN",19,10166,0)
ECX NATIONAL CLINIC^National Clinic Codes for DSS List^^P^^^^^^^^DSS EXTRACTS
"KRN",19,10166,1,0)
^^2^2^2950419^^^
"KRN",19,10166,1,1,0)
This option prints a list of the national clinic codes for DSS from the
"KRN",19,10166,1,2,0)
NATIONAL CLINIC file (#728.441).
"KRN",19,10166,60)
ECX(728.441,
"KRN",19,10166,62)
0
"KRN",19,10166,63)
[ECX CLINIC CODE]
"KRN",19,10166,64)
[ECX CLINIC CODE]
"KRN",19,10166,65)

"KRN",19,10166,66)

"KRN",19,10166,"U")
NATIONAL CLINIC CODES FOR DSS 
"KRN",19,10167,-1)
0^6
"KRN",19,10167,0)
ECX IV DIV EDIT^Enter/Edit IV Room Division^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10167,1,0)
^^4^4^2960319^^^
"KRN",19,10167,1,1,0)
This option allows editing of the DIVISION field (.02) of the IV
"KRN",19,10167,1,2,0)
Room file (#59.5).  The purpose of the DIVISION field is to provide
"KRN",19,10167,1,3,0)
a way to tie outpatient IV data to a Medical Center Division for DSS
"KRN",19,10167,1,4,0)
purposes.
"KRN",19,10167,25)
ED^ECXDIVIV
"KRN",19,10167,"U")
ENTER/EDIT IV ROOM DIVISION
"KRN",19,10168,-1)
0^7
"KRN",19,10168,0)
ECX IV DIV PRINT^Print IV Room Worksheet^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10168,1,0)
^^5^5^2960319^^
"KRN",19,10168,1,1,0)
This option will print a worksheet listing all the entries in the 
"KRN",19,10168,1,2,0)
IV Room file (#59.5) of the Inpatient Medications Package.  This 
"KRN",19,10168,1,3,0)
worksheet is intended to be used by the DSS Manager to define the 
"KRN",19,10168,1,4,0)
DIVISION (as a pointer to the Medical Center Division file (#40.8))
"KRN",19,10168,1,5,0)
for each IV Room for DSS purposes.
"KRN",19,10168,25)
PRT^ECXDIVIV
"KRN",19,10168,"U")
PRINT IV ROOM WORKSHEET
"KRN",19,10169,-1)
0^65
"KRN",19,10169,0)
ECXWRD^Active MAS Wards for Fiscal Year Print^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10169,1,0)
^^5^5^2961004^^
"KRN",19,10169,1,1,0)
This option prints a list of all MAS wards that were active at any time 
"KRN",19,10169,1,2,0)
during the current fiscal year.  The list is sorted by Medical Center 
"KRN",19,10169,1,3,0)
Division and displays the pointer to the Hospital Location file (#44).
"KRN",19,10169,1,4,0)
      
"KRN",19,10169,1,5,0)
The intent for this option is to provide help for building wards on TSI.
"KRN",19,10169,25)
EN^ECXWRD
"KRN",19,10169,"U")
ACTIVE MAS WARDS FOR FISCAL YE
"KRN",19,10170,-1)
0^51
"KRN",19,10170,0)
ECXQSR^QUASAR Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10170,1,0)
^^4^4^2961121^^
"KRN",19,10170,1,1,0)
This option allows you to extract Audiology and Speech Pathology
"KRN",19,10170,1,2,0)
clinic visit data for a selected date range. This data is stored
"KRN",19,10170,1,3,0)
in the QUASAR EXTRACT (#727.825) file until it is transmitted to
"KRN",19,10170,1,4,0)
the commercial vendor.
"KRN",19,10170,25)
BEG^ECXQSR
"KRN",19,10170,"U")
QUASAR EXTRACT
"KRN",19,10171,-1)
0^15
"KRN",19,10171,0)
ECX QSR SOURCE AUDIT^QUASAR (ECQ) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10171,1,0)
^^16^16^2971107^
"KRN",19,10171,1,1,0)
This option will generate a report from the QUASAR EXTRACT file
"KRN",19,10171,1,2,0)
(#727.825) which will allow the DSS extract manager to verify
"KRN",19,10171,1,3,0)
extract data before transmission to the Austin Automation Center.
"KRN",19,10171,1,4,0)
  
"KRN",19,10171,1,5,0)
The following VistA application report should be of assistance
"KRN",19,10171,1,6,0)
in the verification process:
"KRN",19,10171,1,7,0)
  
"KRN",19,10171,1,8,0)
Report Title - Audiology & Speech Pathology Procedure Statistics for
"KRN",19,10171,1,9,0)
                 All Clinicians
"KRN",19,10171,1,10,0)
               Audiology & Speech Pathology Procedure Statistics for
"KRN",19,10171,1,11,0)
                 All Other Providers
"KRN",19,10171,1,12,0)
Menu Option -  Statistics by Procedure [ACKQAS PROC STATS]
"KRN",19,10171,1,13,0)
  
"KRN",19,10171,1,14,0)
Be sure that the extract audit report and the external application
"KRN",19,10171,1,15,0)
report are generated for the same date or date range and the same
"KRN",19,10171,1,16,0)
division (if applicable).
"KRN",19,10171,25)
EN^ECXAECQ
"KRN",19,10171,"U")
QUASAR (ECQ) EXTRACT AUDIT
"KRN",19,10172,-1)
0^45
"KRN",19,10172,0)
ECXNDC^Pharmacy NDC Lookup^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10172,1,0)
^^7^7^2960829^
"KRN",19,10172,1,1,0)
This option will allow lookups on the local DRUG file (#50) using NDCs
"KRN",19,10172,1,2,0)
from DSS Pharmacy Feeder Keys that have been rejected because the 1st
"KRN",19,10172,1,3,0)
seven characters are zeros (Ex. "0000000000003073531").  This would occur
"KRN",19,10172,1,4,0)
when a pharmacy item has not been matched to NDF.  To use this option,
"KRN",19,10172,1,5,0)
please enter the NDC (last twelve characters) from a rejected feeder key. 
"KRN",19,10172,1,6,0)
This will display the following information from the local DRUG file
"KRN",19,10172,1,7,0)
(#50): LOCAL GENERIC NAME, DISPENSE UNIT, and PRICE PER DISPENSE UNIT.
"KRN",19,10172,25)
EN^ECXNDC
"KRN",19,10172,"U")
PHARMACY NDC LOOKUP
"KRN",19,10173,-1)
3^22
"KRN",19,10173,0)
ECX SETUP CLINIC^Setup for DSS Clinic Information^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10173,1,0)
^^2^2^2961108^^
"KRN",19,10173,1,1,0)
This menu provides access to the various options needed to accurately
"KRN",19,10173,1,2,0)
define DSS clinic information.
"KRN",19,10173,10,0)
^19.01IP^5^5
"KRN",19,10173,10,1,0)
10166^1^5
"KRN",19,10173,10,1,"^")
ECX NATIONAL CLINIC
"KRN",19,10173,10,2,0)
10121^2^10
"KRN",19,10173,10,2,"^")
ECXSCLOAD
"KRN",19,10173,10,3,0)
10122^3^15
"KRN",19,10173,10,3,"^")
ECXSCLIST
"KRN",19,10173,10,4,0)
10123^4^20
"KRN",19,10173,10,4,"^")
ECXSCEDIT
"KRN",19,10173,10,5,0)
10135^5^25
"KRN",19,10173,10,5,"^")
ECXSCAPPROV
"KRN",19,10173,99)
57042,71938
"KRN",19,10173,"U")
SETUP FOR DSS CLINIC INFORMATI
"KRN",19,10174,-1)
3^24
"KRN",19,10174,0)
ECX SETUP INP MEDS^Setup for Inpatient Medications Information^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10174,1,0)
^^2^2^2961004^
"KRN",19,10174,1,1,0)
This menu provides access to the various options needed to accurately
"KRN",19,10174,1,2,0)
define DSS Inpatient Medications pharmacy information.
"KRN",19,10174,10,0)
^19.01IP^3^3
"KRN",19,10174,10,1,0)
10168^1^5
"KRN",19,10174,10,1,"^")
ECX IV DIV PRINT
"KRN",19,10174,10,2,0)
10167^2^10
"KRN",19,10174,10,2,"^")
ECX IV DIV EDIT
"KRN",19,10174,10,3,0)
10172^3^15
"KRN",19,10174,10,3,"^")
ECXNDC
"KRN",19,10174,99)
57042,71938
"KRN",19,10174,"U")
SETUP FOR INPATIENT MEDICATION
"KRN",19,10175,-1)
3^23
"KRN",19,10175,0)
ECX SETUP INP CENSUS^Setup for Inpatient Census Information^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10175,1,0)
^^2^2^2961108^^^
"KRN",19,10175,1,1,0)
This menu provides access to the various options needed to accurately
"KRN",19,10175,1,2,0)
define and create DSS Inpatient Census information.
"KRN",19,10175,10,0)
^19.01IP^4^4
"KRN",19,10175,10,1,0)
10163^1^5
"KRN",19,10175,10,1,"^")
ECXTRYIT
"KRN",19,10175,10,2,0)
10137^2^10
"KRN",19,10175,10,2,"^")
ECXSETUP
"KRN",19,10175,10,3,0)
10169^3^15
"KRN",19,10175,10,3,"^")
ECXWRD
"KRN",19,10175,10,4,0)
10176^4^20
"KRN",19,10175,10,4,"^")
ECXPCT
"KRN",19,10175,99)
57042,71939
"KRN",19,10175,"U")
SETUP FOR INPATIENT CENSUS INF
"KRN",19,10176,-1)
0^48
"KRN",19,10176,0)
ECXPCT^Primary Care Team Print^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10176,1,0)
^^4^4^2961121^^
"KRN",19,10176,1,1,0)
This option prints a list of all Primary Care Teams.  The list is sorted
"KRN",19,10176,1,2,0)
alphabetically by TEAM name and displays the pointer to the TEAM file
"KRN",19,10176,1,3,0)
(#404.51). The intent of this option is to provide help for building
"KRN",19,10176,1,4,0)
primary care teams on the commercial DSS System.
"KRN",19,10176,25)
EN^ECXPCT
"KRN",19,10176,"U")
PRIMARY CARE TEAM PRINT
"KRN",19,10177,-1)
3^25
"KRN",19,10177,0)
ECX SETUP LAB^Setup for DSS Lab Results Information^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10177,1,0)
^^2^2^2961108^
"KRN",19,10177,1,1,0)
This menu provides access to the options needed to accurately define DSS
"KRN",19,10177,1,2,0)
Lab Results Extract information.
"KRN",19,10177,10,0)
^19.01IP^2^2
"KRN",19,10177,10,1,0)
10165^1^5
"KRN",19,10177,10,1,"^")
ECXLABRS
"KRN",19,10177,10,2,0)
10178^2^10
"KRN",19,10177,10,2,"^")
ECXLARP
"KRN",19,10177,99)
57209,32643
"KRN",19,10177,"U")
SETUP FOR DSS LAB RESULTS INFO
"KRN",19,10178,-1)
0^40
"KRN",19,10178,0)
ECXLARP^Print DSS Lab Test Datasheet^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10178,1,0)
^^4^4^2961217^^^^
"KRN",19,10178,1,1,0)
This option prints a list of the DSS Lab Tests used for the Lab Results
"KRN",19,10178,1,2,0)
Extract (LAR).  It will display the local lab data names for each test.
"KRN",19,10178,1,3,0)
It will also show the blood and urine specimens used by your facility.
"KRN",19,10178,1,4,0)
This information is critical for generating the DSS Lab Results Extract.
"KRN",19,10178,25)
EN^ECXLARP
"KRN",19,10178,"U")
PRINT DSS LAB TEST DATASHEET
"KRN",19,10651,-1)
1^9
"KRN",19,10651,0)
ECX LAB SOURCE AUDIT (RSCH)
"KRN",19.1,391,-1)
0^1
"KRN",19.1,391,0)
ECXMGR^DSS Extract Manager
"KRN",19.1,391,1,0)
^^4^4^2950417^^^^
"KRN",19.1,391,1,1,0)
This key controls the options to extract data from DHCP files and
"KRN",19.1,391,1,2,0)
transmit this data to the commercial DSS database.  This key should
"KRN",19.1,391,1,3,0)
be allocated to the DSS extract manager or his/her designee to perform
"KRN",19.1,391,1,4,0)
these operations.
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,1,0)
^^4^4^2970919^^^^
"PKG",513,1,1,0)
The DSS software provides a way to load data from DHCP to a commercial
"PKG",513,1,2,0)
decision support system.  The software extracts data from several DHCP
"PKG",513,1,3,0)
files.  Extracted data elements are stored in summary files which may
"PKG",513,1,4,0)
be reviewed before being transmitted to the commercial software.
"PKG",513,5)
BIRMINGHAM
"PKG",513,7)
^^I
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0^2971222
"PKG",513,22,1,1,0)
^^2^2^2971223
"PKG",513,22,1,1,1,0)
DSS EXTRACTS v3.0
"PKG",513,22,1,1,2,0)
National Release
"PKG",513,"DEV")
Birmingham
"PKG",513,"VERSION")
3.0
"PRE")
ECXINENV
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
77
"RTN","ECUD1")
0^61^B421016
"RTN","ECUD1",1,0)
ECUD1 ;BIR/DMA-Store data from unit dose package into 728.904 ; 26 Sep 95 / 12:44 PM
"RTN","ECUD1",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECUD1",3,0)
 ;called from 2 unit dose routines - PSGPLF and PSGAMSA
"RTN","ECUD1",4,0)
 ;load UD data into an EC file for later extract to vendor
"RTN","ECUD1",5,0)
 ;
"RTN","ECUD1",6,0)
 I '$D(^ECX(728.904)) Q
"RTN","ECUD1",7,0)
 L +^ECX(728.904,0):1 Q:'$T
"RTN","ECUD1",8,0)
 N DA,DIK
"RTN","ECUD1",9,0)
 S EC=-$O(^ECX(728.904,"AINV","")) F  S EC=EC+1 Q:'$D(^ECX(728.904,EC))
"RTN","ECUD1",10,0)
 S ^ECX(728.904,EC,0)=EC_"^"_ECUD L -^ECX(728.904,0)
"RTN","ECUD1",11,0)
 S DA=EC,DIK="^ECX(728.904," D IX^DIK
"RTN","ECUD1",12,0)
 K EC Q
"RTN","ECX218EN")
1^1
"RTN","ECXAADM")
0^62^B33974932
"RTN","ECXAADM",1,0)
ECXAADM ;ALB/JAP - ADM Extract Audit Report ;Oct 08, 1997
"RTN","ECXAADM",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXAADM",3,0)
EN ;entry point for ADM extract audit report
"RTN","ECXAADM",4,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXAADM",5,0)
 S ECXERR=0
"RTN","ECXAADM",6,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAADM",7,0)
 S ECXHEAD="ADM",ECXAUD=0
"RTN","ECXAADM",8,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAADM",9,0)
 ;select extract
"RTN","ECXAADM",10,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAADM",11,0)
 Q:ECXERR
"RTN","ECXAADM",12,0)
 ;determine if facility is multidivisional
"RTN","ECXAADM",13,0)
 S DIC="^DG(43,",DA=1,DR="11;",DIQ="ECX",DIQ(0)="I" D EN^DIQ1
"RTN","ECXAADM",14,0)
 I +ECX(43,1,11,"I")=0 S ECXALL=1
"RTN","ECXAADM",15,0)
 I +ECX(43,1,11,"I")=1 D
"RTN","ECXAADM",16,0)
 .W !!
"RTN","ECXAADM",17,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all divisions"
"RTN","ECXAADM",18,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXAADM",19,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXAADM",20,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXAADM",21,0)
 .S ECXALL=Y
"RTN","ECXAADM",22,0)
 I ECXERR=1 D  Q
"RTN","ECXAADM",23,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAADM",24,0)
 .D AUDIT^ECXKILL
"RTN","ECXAADM",25,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXAADM",26,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAADM",27,0)
 W !
"RTN","ECXAADM",28,0)
 D ADM^ECXDVSN(.ECXDIV,ECXALL,ECXSTART,ECXEND,.ECXERR)
"RTN","ECXAADM",29,0)
 I ECXERR=1 D  Q
"RTN","ECXAADM",30,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAADM",31,0)
 .D AUDIT^ECXKILL
"RTN","ECXAADM",32,0)
 ;determine output device and queue if requested
"RTN","ECXAADM",33,0)
 S ECXPGM="PROCESS^ECXAADM",ECXDESC="ADM Extract Audit Report"
"RTN","ECXAADM",34,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXAADM",35,0)
 W !
"RTN","ECXAADM",36,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAADM",37,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAADM",38,0)
 .W !!,?5,"Try agian later... exiting.",!
"RTN","ECXAADM",39,0)
 .D AUDIT^ECXKILL
"RTN","ECXAADM",40,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAADM",41,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAADM",42,0)
 .D PROCESS^ECXAADM
"RTN","ECXAADM",43,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAADM",44,0)
 D HOME^%ZIS
"RTN","ECXAADM",45,0)
 D AUDIT^ECXKILL
"RTN","ECXAADM",46,0)
 Q
"RTN","ECXAADM",47,0)
 ;
"RTN","ECXAADM",48,0)
PROCESS ;process data in file #727.802
"RTN","ECXAADM",49,0)
 N X,Y,W,DATE,DIV,IEN,TL,ORDER,SORD,GTOT,STOT,WARD,QQFLG,CNT
"RTN","ECXAADM",50,0)
 K ^TMP($J,"ECXWARD"),^TMP($J,"ECXORDER")
"RTN","ECXAADM",51,0)
 S (CNT,QQFLG)=0
"RTN","ECXAADM",52,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAADM",53,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAADM",54,0)
 ;get run date in external format
"RTN","ECXAADM",55,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAADM",56,0)
 ;get ward info in ^tmp($j,"ecxward" and ^tmp($j,"ecxorder"
"RTN","ECXAADM",57,0)
 D WARDS^ECXUTLA(ECXALL,.ECXDIV)
"RTN","ECXAADM",58,0)
 S W="" F  S W=$O(^TMP($J,"ECXWARD",W)) Q:W=""  D
"RTN","ECXAADM",59,0)
 .S DIV=$P(^TMP($J,"ECXWARD",W),U,3),GTOT(DIV)=0,TL(W)=0,ORDER="" D
"RTN","ECXAADM",60,0)
 ..F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  I $D(^(ORDER,1)) S STOT(DIV,ORDER)=0
"RTN","ECXAADM",61,0)
 ;get records in date range and ward set
"RTN","ECXAADM",62,0)
 S IEN="" F  S IEN=$O(^ECX(727.802,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAADM",63,0)
 .S DATE=$P(^ECX(727.802,IEN,0),U,9),WARD=$P(^(0),U,28)
"RTN","ECXAADM",64,0)
 .;convert free text date to fm internal format date
"RTN","ECXAADM",65,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAADM",66,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAADM",67,0)
 .;if ward is among those selected, then tally admission data
"RTN","ECXAADM",68,0)
 .I $D(TL(WARD)) S TL(WARD)=TL(WARD)+1,CNT=CNT+1
"RTN","ECXAADM",69,0)
 .I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXAADM",70,0)
 ;after all the extract records are processed, set totals into ^tmp($j,"ecxorder"
"RTN","ECXAADM",71,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAADM",72,0)
 S W="" F  S W=$O(TL(W)) Q:W=""  D
"RTN","ECXAADM",73,0)
 .S ORDER=$P(^TMP($J,"ECXWARD",W),U,1),DIV=$P(^(W),U,3)
"RTN","ECXAADM",74,0)
 .S $P(^TMP($J,"ECXORDER",DIV,ORDER),U,3)=TL(W)
"RTN","ECXAADM",75,0)
 ;determine ward group subtotal and division grandtotal
"RTN","ECXAADM",76,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAADM",77,0)
 S DIV="" F  S DIV=$O(^TMP($J,"ECXORDER",DIV)) Q:DIV=""  S GTOT(DIV)=0 D
"RTN","ECXAADM",78,0)
 .S ORDER="",STOT=0 F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  D
"RTN","ECXAADM",79,0)
 ..S TOT=$P(^TMP($J,"ECXORDER",DIV,ORDER),U,3),STOT=STOT+TOT,GTOT(DIV)=GTOT(DIV)+TOT
"RTN","ECXAADM",80,0)
 ..I $D(^TMP($J,"ECXORDER",DIV,ORDER,1)) S $P(^(1),U,3)=STOT,STOT=0
"RTN","ECXAADM",81,0)
 D PRINT
"RTN","ECXAADM",82,0)
 D AUDIT^ECXKILL
"RTN","ECXAADM",83,0)
 Q
"RTN","ECXAADM",84,0)
 ;
"RTN","ECXAADM",85,0)
PRINT ;print the admission data by division and ward order
"RTN","ECXAADM",86,0)
 N JJ,SS,LN,PG,QFLG,WRDNM,WRDTOT,GRPNM,GRPTOT,DATA,DATA1,DIC,DA,DR,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXAADM",87,0)
 U IO
"RTN","ECXAADM",88,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAADM",89,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXAADM",90,0)
 F  S DIV=$O(GTOT(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXAADM",91,0)
 .D HEADER Q:QFLG
"RTN","ECXAADM",92,0)
 .I GTOT(DIV)=0 D  Q
"RTN","ECXAADM",93,0)
 ..W !!,?5,"No admission data extracted for this medical center division.",!
"RTN","ECXAADM",94,0)
 .S ORDER="" F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  D  Q:QFLG
"RTN","ECXAADM",95,0)
 ..S DATA=^TMP($J,"ECXORDER",DIV,ORDER) K DATA1 I $D(^(ORDER,1)) S DATA1=^(1)
"RTN","ECXAADM",96,0)
 ..S WRDNM=$P(DATA,U,2),WRDTOT=+$P(DATA,U,3)
"RTN","ECXAADM",97,0)
 ..;don't display inactive wards unless there is admission data
"RTN","ECXAADM",98,0)
 ..;don't attempt to group inactive/unordered wards
"RTN","ECXAADM",99,0)
 ..I ORDER>999990 K DATA1 I WRDTOT=0 Q
"RTN","ECXAADM",100,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAADM",101,0)
 ..W !,?5,WRDNM,?45,$$RJ^XLFSTR(WRDTOT,5," ")
"RTN","ECXAADM",102,0)
 ..;if data1 exists, then this is the end of a ward group so print group total
"RTN","ECXAADM",103,0)
 ..I $G(DATA1) D  Q:QFLG
"RTN","ECXAADM",104,0)
 ...S GRPNM=$P(DATA1,U,2),GRPTOT=$P(DATA1,U,3)
"RTN","ECXAADM",105,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAADM",106,0)
 ...W !,?40,"----------"
"RTN","ECXAADM",107,0)
 ...W !,"Ward group "_GRPNM_" subtotal:",?45,$$RJ^XLFSTR(GRPTOT,5," ")
"RTN","ECXAADM",108,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAADM",109,0)
 ...W !!
"RTN","ECXAADM",110,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAADM",111,0)
 .W !!,"Division "_$P(ECXDIV(DIV),U,2)_" Grand Total:",?45,$$RJ^XLFSTR(GTOT(DIV),5," ")
"RTN","ECXAADM",112,0)
 I $E(IOST)'="C" D
"RTN","ECXAADM",113,0)
 .W @IOF S PG=PG+1
"RTN","ECXAADM",114,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAADM",115,0)
 .W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAADM",116,0)
 .W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAADM",117,0)
 .W !,"Report Run Date/Time:    "_ECXRUN,?68,"Page: ",PG
"RTN","ECXAADM",118,0)
 .W !!,LN,!!
"RTN","ECXAADM",119,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAADM",120,0)
 .W @IOF
"RTN","ECXAADM",121,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAADM",122,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAADM",123,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAADM",124,0)
 Q
"RTN","ECXAADM",125,0)
 ;
"RTN","ECXAADM",126,0)
HEADER ;header and page control
"RTN","ECXAADM",127,0)
 N JJ,SS,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXAADM",128,0)
 I $E(IOST)="C" D
"RTN","ECXAADM",129,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAADM",130,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAADM",131,0)
 Q:QFLG
"RTN","ECXAADM",132,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAADM",133,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAADM",134,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAADM",135,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAADM",136,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXAADM",137,0)
 W !,"Medical Center Division: "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")",?68,"Page: "_PG
"RTN","ECXAADM",138,0)
 W !!,?5,"Ward",?40,"# of Admissions"
"RTN","ECXAADM",139,0)
 W !,LN,!
"RTN","ECXAADM",140,0)
 Q
"RTN","ECXADEN")
0^63^B55317621
"RTN","ECXADEN",1,0)
ECXADEN ;ALB/JAP - DEN Extract Audit Report ;Oct 10, 1997
"RTN","ECXADEN",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXADEN",3,0)
 ;
"RTN","ECXADEN",4,0)
EN ;entry point for DEN extract audit report
"RTN","ECXADEN",5,0)
 ;select extract
"RTN","ECXADEN",6,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,SITES,ECX
"RTN","ECXADEN",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXADEN",8,0)
 S ECXERR=0
"RTN","ECXADEN",9,0)
 S ECXHEAD="DEN",ECXAUD=0
"RTN","ECXADEN",10,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXADEN",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXADEN",12,0)
 Q:ECXERR
"RTN","ECXADEN",13,0)
 ;determine if facility is multidivisional
"RTN","ECXADEN",14,0)
 K ECX D FILE^DID(225,,"ENTRIES","ECX") S SITES=ECX("ENTRIES") K ECX
"RTN","ECXADEN",15,0)
 I SITES=1 S ECXALL=1
"RTN","ECXADEN",16,0)
 I SITES>1 D
"RTN","ECXADEN",17,0)
 .W !!
"RTN","ECXADEN",18,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all divisions"
"RTN","ECXADEN",19,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXADEN",20,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXADEN",21,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXADEN",22,0)
 .S ECXALL=Y
"RTN","ECXADEN",23,0)
 I ECXERR=1 D  Q
"RTN","ECXADEN",24,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXADEN",25,0)
 .D AUDIT^ECXKILL
"RTN","ECXADEN",26,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXADEN",27,0)
 W !
"RTN","ECXADEN",28,0)
 S ECXSTART=ECXARRAY("START"),ECXEND=ECXARRAY("END")
"RTN","ECXADEN",29,0)
 D DEN^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXADEN",30,0)
 I ECXERR=1 D  Q
"RTN","ECXADEN",31,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXADEN",32,0)
 .D AUDIT^ECXKILL
"RTN","ECXADEN",33,0)
 ;determine output device and queue if requested
"RTN","ECXADEN",34,0)
 S ECXPGM="PROCESS^ECXADEN",ECXDESC="DEN Extract Audit Report"
"RTN","ECXADEN",35,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXADEN",36,0)
 W !
"RTN","ECXADEN",37,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXADEN",38,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXADEN",39,0)
 .W !!,?5,"Try agian later... exiting.",!
"RTN","ECXADEN",40,0)
 .D AUDIT^ECXKILL
"RTN","ECXADEN",41,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXADEN",42,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXADEN",43,0)
 .D PROCESS^ECXADEN
"RTN","ECXADEN",44,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXADEN",45,0)
 D HOME^%ZIS
"RTN","ECXADEN",46,0)
 D AUDIT^ECXKILL
"RTN","ECXADEN",47,0)
 Q
"RTN","ECXADEN",48,0)
 ;
"RTN","ECXADEN",49,0)
PROCESS ;process data in file #727.806
"RTN","ECXADEN",50,0)
 N X,Y,JJ,DATE,DIV,IEN,DFN,SXAM,CXAM,EXAM,PT,TMP,TOTPTS,QQFLG,CNT
"RTN","ECXADEN",51,0)
 K ^TMP($J,"ECXAUD"),^TMP($J,"ECXPATS"),^TMP($J,"ECXPROC")
"RTN","ECXADEN",52,0)
 S (CNT,QQFLG)=0
"RTN","ECXADEN",53,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXADEN",54,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXADEN",55,0)
 ;get run date in external format
"RTN","ECXADEN",56,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXADEN",57,0)
 ;convert ecxdiv array to be subscripted by dental site id #
"RTN","ECXADEN",58,0)
 S JJ=0 F  S JJ=$O(ECXDIV(JJ)) Q:JJ=""  S DIV=$P(ECXDIV(JJ),U,3),DIV(DIV)=JJ
"RTN","ECXADEN",59,0)
 ;get records within date range and dental site(s)
"RTN","ECXADEN",60,0)
 S IEN="" F  S IEN=$O(^ECX(727.806,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXADEN",61,0)
 .S PT=^ECX(727.806,IEN,0)
"RTN","ECXADEN",62,0)
 .S DATE=$P(PT,U,9),DIV=$P(PT,U,41)
"RTN","ECXADEN",63,0)
 .;convert free text date to fm internal format date
"RTN","ECXADEN",64,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXADEN",65,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXADEN",66,0)
 .;if dental division is in selected set, then tally dental data
"RTN","ECXADEN",67,0)
 .Q:'$D(DIV(DIV))
"RTN","ECXADEN",68,0)
 .S DFN=$P(PT,U,5),(SXAM,CXAM)=0,EXAM=$P(PT,U,11) S:EXAM="S" SXAM=1 S:EXAM="C" CXAM=1
"RTN","ECXADEN",69,0)
 .S DATA=SXAM_U_CXAM_U
"RTN","ECXADEN",70,0)
 .S DATA=DATA_+$P(PT,"^",44)_U_+$P(PT,"^",13)_U_+$P(PT,"^",14)_U_+$P(PT,"^",18)_U_+$P(PT,"^",24)_U_+$P(PT,"^",25)_U_+$P(PT,"^",26)_U_+$P(PT,"^",27)_U
"RTN","ECXADEN",71,0)
 .S DATA=DATA_+$P(PT,"^",15)_U_+$P(PT,"^",16)_U_+$P(PT,"^",38)_U_+$P(PT,"^",39)_U_+$P(PT,"^",19)_U_+$P(PT,"^",20)_U_+$P(PT,"^",21)_U
"RTN","ECXADEN",72,0)
 .S DATA=DATA_+$P(PT,"^",30)_U_+$P(PT,"^",31)_U_+$P(PT,"^",32)_U_+$P(PT,"^",33)_U_+$P(PT,"^",34)_U_+$P(PT,"^",35)_U_+$P(PT,"^",36)
"RTN","ECXADEN",73,0)
 .I '$D(^TMP($J,"ECXAUD",DIV,DFN)) S ^TMP($J,"ECXAUD",DIV,DFN)="0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0"
"RTN","ECXADEN",74,0)
 .S TMP=^TMP($J,"ECXAUD",DIV,DFN)
"RTN","ECXADEN",75,0)
 .F JJ=1:1:24 S $P(TMP,U,JJ)=$P(TMP,U,JJ)+$P(DATA,U,JJ)
"RTN","ECXADEN",76,0)
 .S ^TMP($J,"ECXAUD",DIV,DFN)=TMP,CNT=CNT+1
"RTN","ECXADEN",77,0)
 .I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ Q
"RTN","ECXADEN",78,0)
 ;after all dental extract records processed, then do totals by patient and procedure
"RTN","ECXADEN",79,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXADEN",80,0)
 S DIV="" F  S DIV=$O(DIV(DIV)) Q:DIV=""  S TOTPTS(DIV)=0 F JJ=1:1:24 S ^TMP($J,"ECXPROC",DIV,JJ)=0,^TMP($J,"ECXPATS",DIV,JJ)=0
"RTN","ECXADEN",81,0)
 S DIV="" F  S DIV=$O(^TMP($J,"ECXAUD",DIV)) Q:DIV=""  D
"RTN","ECXADEN",82,0)
 .S DFN="" F  S DFN=$O(^TMP($J,"ECXAUD",DIV,DFN)) Q:DFN=""  D
"RTN","ECXADEN",83,0)
 ..S TMP=^TMP($J,"ECXAUD",DIV,DFN),TOTPTS(DIV)=TOTPTS(DIV)+1
"RTN","ECXADEN",84,0)
 ..F JJ=1:1:24 S ^TMP($J,"ECXPROC",DIV,JJ)=^TMP($J,"ECXPROC",DIV,JJ)+$P(TMP,U,JJ) I +$P(TMP,U,JJ)>0 S ^TMP($J,"ECXPATS",DIV,JJ)=^TMP($J,"ECXPATS",DIV,JJ)+1
"RTN","ECXADEN",85,0)
 ;print the report
"RTN","ECXADEN",86,0)
 D PRINT
"RTN","ECXADEN",87,0)
 D AUDIT^ECXKILL
"RTN","ECXADEN",88,0)
 Q
"RTN","ECXADEN",89,0)
 ;
"RTN","ECXADEN",90,0)
PRINT ;print the DEN audit report by dental site
"RTN","ECXADEN",91,0)
 N LN,P,PG,SS,QFLG,GTPROC,GTPAT,TPROC,TPAT,DIEN,TEXT
"RTN","ECXADEN",92,0)
 U IO
"RTN","ECXADEN",93,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXADEN",94,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXADEN",95,0)
 F  S DIV=$O(^TMP($J,"ECXPROC",DIV)) Q:DIV=""  S DIEN=DIV(DIV) D  Q:QFLG
"RTN","ECXADEN",96,0)
 .S (GTPROC,GTPAT)=0
"RTN","ECXADEN",97,0)
 .D HEADER Q:QFLG
"RTN","ECXADEN",98,0)
 .I TOTPTS(DIV)=0 D  Q
"RTN","ECXADEN",99,0)
 ..W !!,?28,"No data for Dental Site "_$P(ECXDIV(DIEN),U,3)_".",!
"RTN","ECXADEN",100,0)
 .S GTPAT=TOTPTS(DIV)
"RTN","ECXADEN",101,0)
 .F P=1:1:24 D  Q:QFLG
"RTN","ECXADEN",102,0)
 ..S TEXT=$T(DENT+P),TEXT=$P(TEXT,";;",2),TPROC=^TMP($J,"ECXPROC",DIV,P),TPAT=^TMP($J,"ECXPATS",DIV,P),GTPROC=GTPROC+TPROC
"RTN","ECXADEN",103,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXADEN",104,0)
 ..W !,$E($P(TEXT,U,1),1,25),?28,$E($P(TEXT,U,2),1,25),?56,$$RJ^XLFSTR(TPROC,5," "),?70,$$RJ^XLFSTR(TPAT,5," ")
"RTN","ECXADEN",105,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!
"RTN","ECXADEN",106,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,?56,"-----",?70,"-----"
"RTN","ECXADEN",107,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,"Totals for Dental Site "_$P(ECXDIV(DIEN),U,3)_":",?56,$$RJ^XLFSTR(GTPROC,5," "),?70,$$RJ^XLFSTR(GTPAT,5," ")," **"
"RTN","ECXADEN",108,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"** Total # of unique patients.",!
"RTN","ECXADEN",109,0)
 I $E(IOST)'="C" D
"RTN","ECXADEN",110,0)
 .W @IOF S PG=PG+1
"RTN","ECXADEN",111,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXADEN",112,0)
 .W !,"DSS Extract Log #:    "_ECXEXT
"RTN","ECXADEN",113,0)
 .W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXADEN",114,0)
 .W !,"Report Run Date/Time: "_ECXRUN,?70,"Page: ",PG
"RTN","ECXADEN",115,0)
 .W !!,LN,!!
"RTN","ECXADEN",116,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXADEN",117,0)
 .W @IOF
"RTN","ECXADEN",118,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXADEN",119,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXADEN",120,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXADEN",121,0)
 Q
"RTN","ECXADEN",122,0)
 ;
"RTN","ECXADEN",123,0)
HEADER ;header and page control
"RTN","ECXADEN",124,0)
 N JJ,SS
"RTN","ECXADEN",125,0)
 I $E(IOST)="C" D
"RTN","ECXADEN",126,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXADEN",127,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXADEN",128,0)
 Q:QFLG
"RTN","ECXADEN",129,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXADEN",130,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXADEN",131,0)
 W !,"DSS Extract Log #:    "_ECXEXT
"RTN","ECXADEN",132,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXADEN",133,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXADEN",134,0)
 I $P(ECXDIV(DIEN),U,2)="" S $P(ECXDIV(DIEN),U,2)="Unknown"
"RTN","ECXADEN",135,0)
 W !,"Dental Site:          "_$P(ECXDIV(DIEN),U,3)_" ("_$P(ECXDIV(DIEN),U,2)_")",?70,"Page: "_PG
"RTN","ECXADEN",136,0)
 W !!,?56,"# of",?70,"# of"
"RTN","ECXADEN",137,0)
 W !,"DSS Procedure",?28,"Dental Procedure",?56,"Procedures",?70,"Patients"
"RTN","ECXADEN",138,0)
 W !,LN,!
"RTN","ECXADEN",139,0)
 Q
"RTN","ECXADEN",140,0)
 ;
"RTN","ECXADEN",141,0)
DENT ;;procedure names for report
"RTN","ECXADEN",142,0)
 ;;Screening Exam^ SCREENING EXAMINATION
"RTN","ECXADEN",143,0)
 ;;Complete Exam^ COMPLETE EXAMINATION
"RTN","ECXADEN",144,0)
 ;;Evaluation^ EVALUATION
"RTN","ECXADEN",145,0)
 ;;X-Rays Extraoral^ DIAGNOSTIC FILMS-EXTRAORAL
"RTN","ECXADEN",146,0)
 ;;X-Rays Intraoral^ DIAGNOSTIC FILMS-INTRAORAL
"RTN","ECXADEN",147,0)
 ;;Neoplasm Confirmed Malignant^ MALIGNANT NEOPLASM CONFIRMED
"RTN","ECXADEN",148,0)
 ;;Surfaces Restored^ SURFACE RESTORED
"RTN","ECXADEN",149,0)
 ;;Root Canal Therapy^ ROOT CANAL FILLED
"RTN","ECXADEN",150,0)
 ;;Periodontal Quads (Surgical)^ QUADRANT OF PERIODONTAL SURGERY
"RTN","ECXADEN",151,0)
 ;;Periodontal Quads (Root Plane)^ QUADRANT OF ROOT PLANING AND CURETTAGE
"RTN","ECXADEN",152,0)
 ;;Prophy Natural Dentition^ PROPHYLAXIS - NATURAL DENTITION
"RTN","ECXADEN",153,0)
 ;;Prophy Denture^ PATIENT WITH PROTHESES CLEANED
"RTN","ECXADEN",154,0)
 ;;Extractions^ EXTRACTIONS (WEIGHTED)
"RTN","ECXADEN",155,0)
 ;;Surgical Extractions^ SURGICAL EXTRACTION
"RTN","ECXADEN",156,0)
 ;;Neoplasm Removed^ NEOPLASM REMOVED
"RTN","ECXADEN",157,0)
 ;;Biopsy/Smear^ BIOPSY AND/OR CYTOLOGICAL SMEARS
"RTN","ECXADEN",158,0)
 ;;Fracture^ MAXILLOFACIAL FRACTURE REDUCTION
"RTN","ECXADEN",159,0)
 ;;Individual Crowns^ SINGLE CROWN (PER CROWN)
"RTN","ECXADEN",160,0)
 ;;Post & Cores^ POST AND CORE OR OVERDENTURE COPING
"RTN","ECXADEN",161,0)
 ;;Fixed Partials (Abut)^ ABUTMENT UNIT FOR FIXED PROSTHESIS
"RTN","ECXADEN",162,0)
 ;;Fixed Partials (Pont Only)^ PONTIC UNIT FOR FIXED PROSTHESIS
"RTN","ECXADEN",163,0)
 ;;Removable Partials^ REMOVABLE PARTIAL DENTURE INSERTED
"RTN","ECXADEN",164,0)
 ;;Complete Dentures^ REMOVABLE COMPLETE DENTURE INSERTED
"RTN","ECXADEN",165,0)
 ;;Prosthetic Repair^ PROTHESIS REPAIRED
"RTN","ECXADM")
0^2^B13255051
"RTN","ECXADM",1,0)
ECXADM ;BIR/DMA,CML,PTD-Admissions Extract ; [ 11/25/96  11:21 AM ]
"RTN","ECXADM",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXADM",3,0)
BEG ;entry point from option
"RTN","ECXADM",4,0)
 D SETUP,^ECXTRAC,^ECXKILL Q
"RTN","ECXADM",5,0)
 ;
"RTN","ECXADM",6,0)
START ; start package specific extract
"RTN","ECXADM",7,0)
 S QFLG=0
"RTN","ECXADM",8,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD") S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXADM",9,0)
 S ECED=ECED+.3
"RTN","ECXADM",10,0)
 S ECD=ECSD1 F  S ECD=$O(^DGPM("ATT1",ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  F  S ECDA=$O(^DGPM("ATT1",ECD,ECDA)) Q:'ECDA  I $D(^DGPM(ECDA,0)) S EC=^(0),DFN=$P(EC,"^",3) I $D(^DPT(DFN,0)) S D0=^(0) D GET Q:QFLG
"RTN","ECXADM",11,0)
 Q
"RTN","ECXADM",12,0)
 ;
"RTN","ECXADM",13,0)
GET ;
"RTN","ECXADM",14,0)
 S ECTM=$$ECXTIME^ECXUTL(ECD)
"RTN","ECXADM",15,0)
 I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXADM",16,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(DFN,ECD) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(DFN,ECD) S:ECPTPR=0 ECPTPR=""
"RTN","ECXADM",17,0)
 I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXADM",18,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(DFN) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(DFN) S:ECPTPR=0 ECPTPR=""
"RTN","ECXADM",19,0)
 S ECODE=DFN_"^"_$P(D0,"^",9)_"^"_$E($P($P(D0,"^"),",")_"    ",1,4)_"^3^"_$$ECXDATE^ECXUTL(ECD,ECXYM)_"^"_ECPTTM_"^"_$P(D0,"^",2)_"^"_$$ECXDOB^ECXUTL($P(D0,"^",3))_"^"_$P(D0,"^",8)_"^"_$P($G(^DPT(DFN,.311)),"^",15)_"^"_+$$INSURED^IBCNS1(DFN,ECD)
"RTN","ECXADM",20,0)
 S D1=$G(^DPT(DFN,.11)),ECSTA=$P(D1,"^",5),STATE=$S(ECSTA:$P(^DIC(5,ECSTA,0),"^",3),1:"")
"RTN","ECXADM",21,0)
 S ECCTY=$P(D1,"^",7),COUNTY=$S(ECCTY:$P(^DIC(5,ECSTA,1,ECCTY,0),"^",3),1:"")
"RTN","ECXADM",22,0)
 S ECODE=ECODE_"^"_STATE_"^"_COUNTY_"^"_$P(D1,"^",6),D1=$P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),"^",9) I D1 S D1=$C(D1+64)
"RTN","ECXADM",23,0)
 S ECM=$P($G(^DG(408.32,+$P(D0,"^",14),0)),"^",2)
"RTN","ECXADM",24,0)
 S ECODE=ECODE_"^"_D1_"^"_$P($G(^DPT(DFN,"VET")),"^")_"^"_$P($G(^DPT(DFN,.321))_"^^^^","^",1,3)_"^"_$P($G(^DPT(DFN,.52)),"^",5)_"^"_$P($G(^DIC(21,+$P($G(^DPT(DFN,.32)),"^",3),0)),"^",3)_"^"_ECM_"^"_$P(D0,"^",5)
"RTN","ECXADM",25,0)
 S W=$P(EC,"^",6),FAC=$P($G(^DIC(42,+W,0)),"^",11),W=$P($G(^DIC(42,+W,44)),"^")
"RTN","ECXADM",26,0)
 S ECTS="" F J=1:1:10 S ECT1=$G(^DGPM(ECDA+J,0)) I $P(ECT1,"^",14)=ECDA,$P(ECT1,"^",2)=6 S ECTS=ECT1 Q
"RTN","ECXADM",27,0)
 ;get corresponding Treating specialty - should be the next one, but must be close
"RTN","ECXADM",28,0)
 S ECODE=FAC_"^"_ECODE_"^"_W_"^"_$P($G(^DIC(45.7,+$P(ECTS,"^",9),0)),"^",2)_"^"_ECPRO_$P(ECTS,"^",19)_"^"_ECDA
"RTN","ECXADM",29,0)
 S (ECDRG,ECDIA)="",ECPTF=+$P(EC,"^",16) I ECPTF,$D(^DGPT(ECPTF,"M")) D PTF S ECODE=ECODE_"^"_ECDRG_"^"_ECDIA
"RTN","ECXADM",30,0)
 S $P(ECODE,"^",31)=ECTM,$P(ECODE,"^",32)=ECPTPR,$P(ECODE,"^",33)=$P($G(^DIC(10,+$P(D0,"^",6),0)),"^",2)_"^^"
"RTN","ECXADM",31,0)
 ;facility^dfn^ssn^name^in/out^day^primary care team^sex^dob^religion^employment status^health ins^state^county^zip^eligibility^
"RTN","ECXADM",32,0)
 ;vet^vietnam^agent orange^radiation^pow^period of service^means test^marital status^ward^treating specialty^
"RTN","ECXADM",33,0)
 ;attending physician^mov #^DRG^diagnosis^time^primary care provider^race^primary ward provider
"RTN","ECXADM",34,0)
FILE S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXADM",35,0)
 S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXADM",36,0)
 I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXADM",37,0)
 Q
"RTN","ECXADM",38,0)
 ;
"RTN","ECXADM",39,0)
PTF ; get admitting DRG and diagnosis from PTF
"RTN","ECXADM",40,0)
 ;use number for DRG and .01 for diagnosis
"RTN","ECXADM",41,0)
 S EC=1 I $D(^DGPT(ECPTF,"M",2,0)) S EC=2
"RTN","ECXADM",42,0)
 S EC1=+$P(^DGPT(ECPTF,"M",EC,0),"^",5),ECDRG=$P($G(^DGPT(ECPTF,"M",EC,"P")),"^")
"RTN","ECXADM",43,0)
 S ECDIA=$P($G(^ICD9(EC1,0)),"^") Q
"RTN","ECXADM",44,0)
 ;
"RTN","ECXADM",45,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXADM",46,0)
 S ECPACK="Admission",ECPIECE=13,ECRTN="START^ECXADM",ECGRP="ADMS",ECHEAD="ADM",ECFILE=727.802,ECVER=7
"RTN","ECXADM",47,0)
 Q
"RTN","ECXADM",48,0)
 ;
"RTN","ECXADM",49,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXADM",50,0)
 ; should be queued with a 1D frequency
"RTN","ECXADM",51,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXADM",52,0)
 ;
"RTN","ECXADM",53,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXADM",54,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXADM",55,0)
 ;
"RTN","ECXAECQ")
0^65^B26972060
"RTN","ECXAECQ",1,0)
ECXAECQ ;ALB/JAP - ECQ Extract Audit Report ;Oct 16, 1997
"RTN","ECXAECQ",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXAECQ",3,0)
 ;
"RTN","ECXAECQ",4,0)
EN ;entry point for ECQ extract audit report
"RTN","ECXAECQ",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR
"RTN","ECXAECQ",6,0)
 S ECXERR=0
"RTN","ECXAECQ",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAECQ",8,0)
 S ECXHEAD="ECQ",ECXAUD=0
"RTN","ECXAECQ",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAECQ",10,0)
 ;select extract
"RTN","ECXAECQ",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAECQ",12,0)
 Q:ECXERR
"RTN","ECXAECQ",13,0)
 ;currently, quasar does not accommodate multi-divisional sites
"RTN","ECXAECQ",14,0)
 S ECXALL=1
"RTN","ECXAECQ",15,0)
 D ECQ^ECXDVSN1(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXAECQ",16,0)
 I ECXERR=1 D  Q
"RTN","ECXAECQ",17,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAECQ",18,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECQ",19,0)
 ;determine output device and queue if requested
"RTN","ECXAECQ",20,0)
 W !
"RTN","ECXAECQ",21,0)
 S ECXPGM="PROCESS^ECXAECQ",ECXDESC="ECQ Extract Audit Report"
"RTN","ECXAECQ",22,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXAECQ",23,0)
 W !
"RTN","ECXAECQ",24,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAECQ",25,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAECQ",26,0)
 .W !!,?5,"Try agian later... exiting.",!
"RTN","ECXAECQ",27,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECQ",28,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAECQ",29,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAECQ",30,0)
 .D PROCESS^ECXAECQ
"RTN","ECXAECQ",31,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAECQ",32,0)
 D HOME^%ZIS
"RTN","ECXAECQ",33,0)
 D AUDIT^ECXKILL
"RTN","ECXAECQ",34,0)
 Q
"RTN","ECXAECQ",35,0)
 ;
"RTN","ECXAECQ",36,0)
PROCESS ;process data in file #727.825
"RTN","ECXAECQ",37,0)
 N X,Y,W,DATA,DATE,DIV,DIVACK,IEN,LOC,UNIT,UNITN,VOL,PROC,PROCN,QQFLG,CNT
"RTN","ECXAECQ",38,0)
 K ^TMP($J,"ECXAUD"),^TMP($J,"ECXPROC")
"RTN","ECXAECQ",39,0)
 S (CNT,QQFLG)=0
"RTN","ECXAECQ",40,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAECQ",41,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAECQ",42,0)
 ;get run date in external format
"RTN","ECXAECQ",43,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAECQ",44,0)
 ;get the dss unit links for this division/site
"RTN","ECXAECQ",45,0)
 S DIV=0 F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  S DIVACK=$P(ECXDIV(DIV),U,1),ECXLINK(DIV)=^ACK(509850.8,DIVACK,"DSS")
"RTN","ECXAECQ",46,0)
 ;get extract records in date range
"RTN","ECXAECQ",47,0)
 S IEN="" F  S IEN=$O(^ECX(727.825,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAECQ",48,0)
 .S DATA=^ECX(727.825,IEN,0),DATE=$P(DATA,U,9),DIV=$P(DATA,U,4)
"RTN","ECXAECQ",49,0)
 .;convert free text date to fm internal format date
"RTN","ECXAECQ",50,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAECQ",51,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAECQ",52,0)
 .;if location is among those selected, then tally event capture data
"RTN","ECXAECQ",53,0)
 .I $D(ECXDIV(DIV)) D  Q:QQFLG
"RTN","ECXAECQ",54,0)
 ..;any quasar site that doesn't have links to dss is identified by "xx"
"RTN","ECXAECQ",55,0)
 ..S UNIT=$P(DATA,U,10) S LOC=$S(UNIT=$P(ECXLINK(DIV),U,1):"A",UNIT=$P(ECXLINK(DIV),U,2):"S",1:"XX")
"RTN","ECXAECQ",56,0)
 ..;any invalid cpt code is identified as "xxxxx"
"RTN","ECXAECQ",57,0)
 ..S PROC=$P(DATA,U,29),PROCN=$P($G(^ICPT(+PROC,0)),U,2),PROC="A"_PROC S:PROCN="" PROCN="Unknown"
"RTN","ECXAECQ",58,0)
 ..I '$D(^TMP($J,"ECXAUD",DIV,LOC,PROC)) S ^TMP($J,"ECXAUD",DIV,LOC,PROC)=0_U_PROCN
"RTN","ECXAECQ",59,0)
 ..S $P(^(PROC),U,1)=$P(^TMP($J,"ECXAUD",DIV,LOC,PROC),U,1)+1,CNT=CNT+1
"RTN","ECXAECQ",60,0)
 ..I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXAECQ",61,0)
 ;print the report
"RTN","ECXAECQ",62,0)
 D PRINT
"RTN","ECXAECQ",63,0)
 D AUDIT^ECXKILL
"RTN","ECXAECQ",64,0)
 Q
"RTN","ECXAECQ",65,0)
 ;
"RTN","ECXAECQ",66,0)
PRINT ;print quasar data by site and dss unit order
"RTN","ECXAECQ",67,0)
 N JJ,SS,LN,P,DIV,DIVNM,LOC,UNITN,PG,QFLG,GTOT,STOT,TOT,PROC,PROCN,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXAECQ",68,0)
 U IO
"RTN","ECXAECQ",69,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAECQ",70,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXAECQ",71,0)
 F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXAECQ",72,0)
 .S DIVNM=$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")" D HEADER
"RTN","ECXAECQ",73,0)
 .S GTOT=0,STOT("A")=0,STOT("S")=0,STOT("XX")=0
"RTN","ECXAECQ",74,0)
 .I '$D(^TMP($J,"ECXAUD",DIV)) D  Q
"RTN","ECXAECQ",75,0)
 ..W !!,?5,"No data available for this QUASAR site.",!!
"RTN","ECXAECQ",76,0)
 .I $D(^TMP($J,"ECXAUD",DIV)) S LOC="" F  S LOC=$O(^TMP($J,"ECXAUD",DIV,LOC)) Q:LOC=""  D  Q:QFLG
"RTN","ECXAECQ",77,0)
 ..;write the unit name
"RTN","ECXAECQ",78,0)
 ..S UNITN=$S(LOC="A":"Audiology",LOC="S":"Speech Pathology",1:"Unknown"),PROC=""
"RTN","ECXAECQ",79,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,UNITN,!
"RTN","ECXAECQ",80,0)
 ..F  S PROC=$O(^TMP($J,"ECXAUD",DIV,LOC,PROC)) Q:PROC=""  D  Q:QFLG
"RTN","ECXAECQ",81,0)
 ...S TOT=+^TMP($J,"ECXAUD",DIV,LOC,PROC),PROCN=$P(^(PROC),U,2),P=$E(PROC,2,99)
"RTN","ECXAECQ",82,0)
 ...S STOT(LOC)=STOT(LOC)+TOT,GTOT=GTOT+TOT
"RTN","ECXAECQ",83,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG  W !,?25,P,?35,$E(PROCN,1,30),?68,$$RJ^XLFSTR(TOT,5," ")
"RTN","ECXAECQ",84,0)
 ..;write the unit subtotal
"RTN","ECXAECQ",85,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?25,$E(LN,1,54)
"RTN","ECXAECQ",86,0)
 ..W !,"Total Volume for "_UNITN_":",?68,$$RJ^XLFSTR(STOT(LOC),5," "),!
"RTN","ECXAECQ",87,0)
 .;write the division grandtotal
"RTN","ECXAECQ",88,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Grand Total for Site "_DIVNM_":",?68,$$RJ^XLFSTR(GTOT,5," ")
"RTN","ECXAECQ",89,0)
 ;print the audit descriptive narrative
"RTN","ECXAECQ",90,0)
 I $E(IOST)'="C" D
"RTN","ECXAECQ",91,0)
 .W @IOF S PG=PG+1
"RTN","ECXAECQ",92,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAECQ",93,0)
 .W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAECQ",94,0)
 .W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAECQ",95,0)
 .W !,"Report Run Date/Time:    "_ECXRUN,?68,"Page: ",PG
"RTN","ECXAECQ",96,0)
 .W !!,LN,!!
"RTN","ECXAECQ",97,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAECQ",98,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAECQ",99,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAECQ",100,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAECQ",101,0)
 Q
"RTN","ECXAECQ",102,0)
 ;
"RTN","ECXAECQ",103,0)
HEADER ;header and page control
"RTN","ECXAECQ",104,0)
 N JJ,SS
"RTN","ECXAECQ",105,0)
 I $E(IOST)="C" D
"RTN","ECXAECQ",106,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAECQ",107,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAECQ",108,0)
 Q:QFLG
"RTN","ECXAECQ",109,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAECQ",110,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAECQ",111,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXAECQ",112,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAECQ",113,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXAECQ",114,0)
 W !,"QUASAR Site:          "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")",?68,"Page: "_PG
"RTN","ECXAECQ",115,0)
 W !!,"DSS Unit",?25,"Procedure",?68,"Volume"
"RTN","ECXAECQ",116,0)
 W !,LN,!
"RTN","ECXAECQ",117,0)
 Q
"RTN","ECXAECS")
0^64^B40489785
"RTN","ECXAECS",1,0)
ECXAECS ;ALB/JAP - ECS Extract Audit Report ;Oct 15, 1997
"RTN","ECXAECS",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXAECS",3,0)
 ;
"RTN","ECXAECS",4,0)
EN ;entry point for ECS extract audit report
"RTN","ECXAECS",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,CNT
"RTN","ECXAECS",6,0)
 S ECXERR=0
"RTN","ECXAECS",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAECS",8,0)
 S ECXHEAD="ECS",ECXAUD=0
"RTN","ECXAECS",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAECS",10,0)
 ;select extract
"RTN","ECXAECS",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAECS",12,0)
 Q:ECXERR
"RTN","ECXAECS",13,0)
 ;determine if facility is multidivisional for event capture
"RTN","ECXAECS",14,0)
 S CNT=0,ECXD="" F  S ECXD=$O(^DIC(4,"LOC",ECXD)) Q:ECXD=""  S CNT=CNT+1
"RTN","ECXAECS",15,0)
 S ECXALL=1
"RTN","ECXAECS",16,0)
 I CNT>1 D
"RTN","ECXAECS",17,0)
 .W !!
"RTN","ECXAECS",18,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all Locations"
"RTN","ECXAECS",19,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXAECS",20,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXAECS",21,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXAECS",22,0)
 .S ECXALL=Y
"RTN","ECXAECS",23,0)
 I ECXERR=1 D  Q
"RTN","ECXAECS",24,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAECS",25,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECS",26,0)
 ;select divisions/sites; all ec locations if ecxall=1
"RTN","ECXAECS",27,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAECS",28,0)
 D ECS^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXAECS",29,0)
 I ECXERR=1 D  Q
"RTN","ECXAECS",30,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAECS",31,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECS",32,0)
 ;determine output device and queue if requested
"RTN","ECXAECS",33,0)
 W !
"RTN","ECXAECS",34,0)
 S ECXPGM="PROCESS^ECXAECS",ECXDESC="ECS Extract Audit Report"
"RTN","ECXAECS",35,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXAECS",36,0)
 W !
"RTN","ECXAECS",37,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAECS",38,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAECS",39,0)
 .W !!,?5,"Try agian later... exiting.",!
"RTN","ECXAECS",40,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECS",41,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAECS",42,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAECS",43,0)
 .D PROCESS^ECXAECS
"RTN","ECXAECS",44,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAECS",45,0)
 D HOME^%ZIS
"RTN","ECXAECS",46,0)
 D AUDIT^ECXKILL
"RTN","ECXAECS",47,0)
 Q
"RTN","ECXAECS",48,0)
 ;
"RTN","ECXAECS",49,0)
PROCESS ;process data in file #727.815
"RTN","ECXAECS",50,0)
 N X,Y,W,DATA,DATE,DIV,IEN,UNIT,UNITN,CAT,CATN,VOL,PROC,PROCN,PIEN,PRI,PRXF,PRSYN,QQFLG,CNT
"RTN","ECXAECS",51,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXAECS",52,0)
 S (CNT,QQFLG)=0
"RTN","ECXAECS",53,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAECS",54,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAECS",55,0)
 ;get run date in external format
"RTN","ECXAECS",56,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAECS",57,0)
 ;get records in date range
"RTN","ECXAECS",58,0)
 S IEN="" F  S IEN=$O(^ECX(727.815,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAECS",59,0)
 .S DATA=^ECX(727.815,IEN,0),DATE=$P(DATA,U,9),DIV=$P(DATA,U,4)
"RTN","ECXAECS",60,0)
 .;convert free text date to fm internal format date
"RTN","ECXAECS",61,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAECS",62,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAECS",63,0)
 .;if location is among those selected, then tally event capture data
"RTN","ECXAECS",64,0)
 .I $D(ECXDIV(DIV)) D  Q:QQFLG
"RTN","ECXAECS",65,0)
 ..S UNIT=$P(DATA,U,10),UNITN=$P($G(^ECD(UNIT,0)),U,1),UNIT(UNITN)=UNIT
"RTN","ECXAECS",66,0)
 ..;if no category, then cat=0
"RTN","ECXAECS",67,0)
 ..S CAT=+$P(DATA,U,11),CATN="" S:+CAT CATN=$P($G(^EC(726,CAT,0)),U,1) S:CATN="" CATN="Unknown"
"RTN","ECXAECS",68,0)
 ..S VOL=$P(DATA,U,13) S:VOL="" VOL=1 S PROC=$P(DATA,U,12)
"RTN","ECXAECS",69,0)
 ..I '$D(^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)) S ^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)=0
"RTN","ECXAECS",70,0)
 ..S ^(PROC)=^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)+VOL,CNT=CNT+1
"RTN","ECXAECS",71,0)
 ..I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ Q
"RTN","ECXAECS",72,0)
 ..;get the procedure name and setup in global array
"RTN","ECXAECS",73,0)
 ..S PIEN=0,PROCN=""
"RTN","ECXAECS",74,0)
 ..I $L(PROC)=6 S P=$E(PROC,1,5),PIEN=$O(^EC(725,"E",P,""))
"RTN","ECXAECS",75,0)
 ..;procedures from file #725
"RTN","ECXAECS",76,0)
 ..I +PIEN>0 D
"RTN","ECXAECS",77,0)
 ...S PROCN=$P($G(^EC(725,PIEN,0)),U,1)
"RTN","ECXAECS",78,0)
 ...S PRXF=PIEN_";EC(725,"
"RTN","ECXAECS",79,0)
 ...S PRI=+$O(^ECJ("AP",DIV,UNIT,CAT,PRXF,0)),PRSYN=$P($G(^ECJ(PRI,"PRO")),U,2)
"RTN","ECXAECS",80,0)
 ...I PRSYN]"" S PROCN=PRSYN
"RTN","ECXAECS",81,0)
 ..;procedures from file #81
"RTN","ECXAECS",82,0)
 ..I PIEN=0,PROCN="" D
"RTN","ECXAECS",83,0)
 ...S PIEN=$O(^ICPT("B",PROC,"")) I +PIEN>0 S PROCN=$P($G(^ICPT(PIEN,0)),U,2)
"RTN","ECXAECS",84,0)
 ...S PRXF=PIEN_";ICPT("
"RTN","ECXAECS",85,0)
 ...S PRI=+$O(^ECJ("AP",DIV,UNIT,CAT,PRXF,0)),PRSYN=$P($G(^ECJ(PRI,"PRO")),U,2)
"RTN","ECXAECS",86,0)
 ...I PRSYN]"" S PROCN=PRSYN
"RTN","ECXAECS",87,0)
 ..S:PROCN="" PROCN="Unknown"
"RTN","ECXAECS",88,0)
 ..S ^TMP($J,"ECXPROC",PROC)=PROCN
"RTN","ECXAECS",89,0)
 ;print the report
"RTN","ECXAECS",90,0)
 D PRINT
"RTN","ECXAECS",91,0)
 D AUDIT^ECXKILL
"RTN","ECXAECS",92,0)
 Q
"RTN","ECXAECS",93,0)
 ;
"RTN","ECXAECS",94,0)
PRINT ;print event capture data by location/division and dss unit order
"RTN","ECXAECS",95,0)
 N JJ,SS,P,PN,LN,NM,DIV,DIVNM,PG,QFLG,GTOT,PROC,STOT,TOT,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXAECS",96,0)
 U IO
"RTN","ECXAECS",97,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAECS",98,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXAECS",99,0)
 F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXAECS",100,0)
 .S DIVNM=$P(ECXDIV(DIV),U,2)_" ("_DIV_")",GTOT=0 D HEADER
"RTN","ECXAECS",101,0)
 .I '$D(^TMP($J,"ECXAUD",DIV)) D  Q
"RTN","ECXAECS",102,0)
 ..W !!,?5,"No data available for this Event Capture Location.",!!
"RTN","ECXAECS",103,0)
 .I $D(^TMP($J,"ECXAUD",DIV)) S UNITN="" F  S UNITN=$O(^TMP($J,"ECXAUD",DIV,UNITN)) Q:UNITN=""  D  Q:QFLG
"RTN","ECXAECS",104,0)
 ..S STOT=0,UNIT=UNIT(UNITN),CATN=""
"RTN","ECXAECS",105,0)
 ..;write the unit name
"RTN","ECXAECS",106,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,UNITN_" ("_UNIT_")",!
"RTN","ECXAECS",107,0)
 ..;initialize the proc array and set totals in array
"RTN","ECXAECS",108,0)
 ..F  S CATN=$O(^TMP($J,"ECXAUD",DIV,UNITN,CATN)) Q:CATN=""  K PROC S PROC="" D  Q:QFLG
"RTN","ECXAECS",109,0)
 ...;write the category name
"RTN","ECXAECS",110,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG  W !,?5,$E(CATN,1,25)
"RTN","ECXAECS",111,0)
 ...F  S PROC=$O(^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)) Q:PROC=""  S TOT=^(PROC) D
"RTN","ECXAECS",112,0)
 ....S STOT=STOT+TOT,GTOT=GTOT+TOT,PROCN=""
"RTN","ECXAECS",113,0)
 ....I $D(^TMP($J,"ECXPROC",PROC)) S PROCN=^(PROC)
"RTN","ECXAECS",114,0)
 ....S PROC($$LJ^XLFSTR(PROC,6," ")_" "_PROCN)=TOT
"RTN","ECXAECS",115,0)
 ...S PN="" F  S PN=$O(PROC(PN)) Q:PN=""  S TOT=PROC(PN) D  Q:QFLG
"RTN","ECXAECS",116,0)
 ....;write procedure and total
"RTN","ECXAECS",117,0)
 ....W ?35,$E(PN,1,30),?68,$$RJ^XLFSTR(TOT,5," "),!
"RTN","ECXAECS",118,0)
 ..;write the unit subtotal
"RTN","ECXAECS",119,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?5,$E(LN,1,74)
"RTN","ECXAECS",120,0)
 ..W !,"Total Volume for Unit "_UNITN_" ("_UNIT_"):",?68,$$RJ^XLFSTR(STOT,5," "),!
"RTN","ECXAECS",121,0)
 .;write the division grandtotal
"RTN","ECXAECS",122,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Grand Total for Location "_DIVNM_":",?68,$$RJ^XLFSTR(GTOT,5," ")
"RTN","ECXAECS",123,0)
 ;print the audit descriptive narrative
"RTN","ECXAECS",124,0)
 I $E(IOST)'="C" D
"RTN","ECXAECS",125,0)
 .W @IOF S PG=PG+1
"RTN","ECXAECS",126,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAECS",127,0)
 .W !,"DSS Extract Log #:      "_ECXEXT
"RTN","ECXAECS",128,0)
 .W !,"Date Range of Audit:    "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAECS",129,0)
 .W !,"Report Run Date/Time:   "_ECXRUN,?68,"Page: ",PG
"RTN","ECXAECS",130,0)
 .W !!,LN,!!
"RTN","ECXAECS",131,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAECS",132,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAECS",133,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAECS",134,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAECS",135,0)
 Q
"RTN","ECXAECS",136,0)
 ;
"RTN","ECXAECS",137,0)
HEADER ;header and page control
"RTN","ECXAECS",138,0)
 N JJ,SS
"RTN","ECXAECS",139,0)
 I $E(IOST)="C" D
"RTN","ECXAECS",140,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAECS",141,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAECS",142,0)
 Q:QFLG
"RTN","ECXAECS",143,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAECS",144,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAECS",145,0)
 W !,"DSS Extract Log #:      "_ECXARRAY("EXTRACT")
"RTN","ECXAECS",146,0)
 W !,"Date Range of Audit:    "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAECS",147,0)
 W !,"Report Run Date/Time:   "_ECXRUN
"RTN","ECXAECS",148,0)
 W !,"Event Capture Location: "_$P(ECXDIV(DIV),U,2)_" ("_DIV_")",?68,"Page: "_PG
"RTN","ECXAECS",149,0)
 W !!,"DSS Unit",!,?5,"Category",?35,"Procedure",?68,"Volume"
"RTN","ECXAECS",150,0)
 W !,LN,!
"RTN","ECXAECS",151,0)
 Q
"RTN","ECXALAB")
0^72^B32314549
"RTN","ECXALAB",1,0)
ECXALAB ;ALB/JAP - ECS Extract Audit Report ;Oct 23, 1997
"RTN","ECXALAB",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXALAB",3,0)
 ;
"RTN","ECXALAB",4,0)
EN ;entry point for LAB extract audit report
"RTN","ECXALAB",5,0)
 ;this audit report can be used for extracts done with
"RTN","ECXALAB",6,0)
 ;either ECXLABN or ECXLABO
"RTN","ECXALAB",7,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR
"RTN","ECXALAB",8,0)
 S ECXERR=0
"RTN","ECXALAB",9,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXALAB",10,0)
 S ECXHEAD="LAB",ECXAUD=0
"RTN","ECXALAB",11,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXALAB",12,0)
 ;select extract
"RTN","ECXALAB",13,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXALAB",14,0)
 Q:ECXERR
"RTN","ECXALAB",15,0)
 W !!
"RTN","ECXALAB",16,0)
 ;get the dss site name for report header
"RTN","ECXALAB",17,0)
 S ECXALL=1 D DEFAULT^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXALAB",18,0)
 Q:ECXERR=1
"RTN","ECXALAB",19,0)
 S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all Accession Areas"
"RTN","ECXALAB",20,0)
 S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXALAB",21,0)
 I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXALAB",22,0)
 ;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXALAB",23,0)
 S ECXALL=Y
"RTN","ECXALAB",24,0)
 I ECXERR=1 D  Q
"RTN","ECXALAB",25,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXALAB",26,0)
 .D AUDIT^ECXKILL
"RTN","ECXALAB",27,0)
 ;select accession areas; all accession areas if ecxall=1
"RTN","ECXALAB",28,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXALAB",29,0)
 D LAB^ECXDVSN1(.ECXACC,ECXALL,.ECXERR)
"RTN","ECXALAB",30,0)
 I ECXERR=1 D  Q
"RTN","ECXALAB",31,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXALAB",32,0)
 .D AUDIT^ECXKILL
"RTN","ECXALAB",33,0)
 ;determine output device and queue if requested
"RTN","ECXALAB",34,0)
 W !
"RTN","ECXALAB",35,0)
 S ECXPGM="PROCESS^ECXALAB",ECXDESC="LAB Extract Audit Report"
"RTN","ECXALAB",36,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXACC(")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXALAB",37,0)
 W !
"RTN","ECXALAB",38,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXALAB",39,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXALAB",40,0)
 .W !!,?5,"Try agian later... exiting.",!
"RTN","ECXALAB",41,0)
 .D AUDIT^ECXKILL
"RTN","ECXALAB",42,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXALAB",43,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXALAB",44,0)
 .D PROCESS^ECXALAB
"RTN","ECXALAB",45,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXALAB",46,0)
 D HOME^%ZIS
"RTN","ECXALAB",47,0)
 D AUDIT^ECXKILL
"RTN","ECXALAB",48,0)
 Q
"RTN","ECXALAB",49,0)
 ;
"RTN","ECXALAB",50,0)
PROCESS ;process data in file #727.813
"RTN","ECXALAB",51,0)
 N X,Y,JJ,LMIP,IEN,DATA,DATE,ACC,ACCNM,WKLDNM,WKLD,FILE,QQFLG,CNT
"RTN","ECXALAB",52,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXALAB",53,0)
 S (CNT,QQFLG)=0
"RTN","ECXALAB",54,0)
 ;see if site is using lmip codes
"RTN","ECXALAB",55,0)
 S LMIP=+$G(^ECX(728,1,"LMIP"))
"RTN","ECXALAB",56,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXALAB",57,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXALAB",58,0)
 ;get run date in external format
"RTN","ECXALAB",59,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXALAB",60,0)
 ;setup acc. area array by name
"RTN","ECXALAB",61,0)
 S ACC="" F  S ACC=$O(ECXACC(ACC)) Q:ACC=""  D
"RTN","ECXALAB",62,0)
 .S ACCNM=$P(ECXACC(ACC),U,1),ACCAB=$P(ECXACC(ACC),U,2),ACC(ACCNM)=ACCAB
"RTN","ECXALAB",63,0)
 ;get records within date range and accession area
"RTN","ECXALAB",64,0)
 S IEN="" F  S IEN=$O(^ECX(727.813,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXALAB",65,0)
 .S DATA=^ECX(727.813,IEN,0),DATE=$P(DATA,U,9),ACC=$P(DATA,U,10)
"RTN","ECXALAB",66,0)
 .;convert free text date to fm internal format date
"RTN","ECXALAB",67,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXALAB",68,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXALAB",69,0)
 .Q:'$D(ECXACC(ACC))
"RTN","ECXALAB",70,0)
 .S ACCNM=$P(ECXACC(ACC),U,1)
"RTN","ECXALAB",71,0)
 .S WKLD="",WKLD=$P(DATA,U,20) D
"RTN","ECXALAB",72,0)
 ..S WKLDNM="" I WKLD]"" S X=WKLD,DIC="^LAM(",DIC(0)="MX" D ^DIC S WKLDNM=$P(Y,U,2)
"RTN","ECXALAB",73,0)
 ..I WKLD="" S:LMIP=1 WKLD="Unknown" S:LMIP=0 WKLD="NA"
"RTN","ECXALAB",74,0)
 ..I WKLDNM="" S WKLDNM="Unknown "_WKLD
"RTN","ECXALAB",75,0)
 .S FILE=$P(DATA,U,18)
"RTN","ECXALAB",76,0)
 .Q:((FILE'=2)&(FILE'=67))
"RTN","ECXALAB",77,0)
 .I '$D(^TMP($J,"ECXAUD",ACCNM,WKLDNM)) S ^TMP($J,"ECXAUD",ACCNM,WKLDNM)=0_U_0_U_WKLD
"RTN","ECXALAB",78,0)
 .I FILE=2 S $P(^(WKLDNM),U,1)=$P(^TMP($J,"ECXAUD",ACCNM,WKLDNM),U,1)+1,CNT=CNT+1
"RTN","ECXALAB",79,0)
 .I FILE=67 S $P(^(WKLDNM),U,2)=$P(^TMP($J,"ECXAUD",ACCNM,WKLDNM),U,2)+1,CNT=CNT+1
"RTN","ECXALAB",80,0)
 .I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXALAB",81,0)
 ;print the report
"RTN","ECXALAB",82,0)
 D PRINT
"RTN","ECXALAB",83,0)
 D AUDIT^ECXKILL
"RTN","ECXALAB",84,0)
 Q
"RTN","ECXALAB",85,0)
 ;
"RTN","ECXALAB",86,0)
PRINT ;print the LAB audit report by accession area and test
"RTN","ECXALAB",87,0)
 N SS,LN,PG,QFLG,TOTP,TOTR,GTOT,DIV,DIVNM,ACCAB,DIR,DR,DIRUT,DTOUT,DUOUT
"RTN","ECXALAB",88,0)
 U IO
"RTN","ECXALAB",89,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXALAB",90,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",ACCNM="",DIV="",DIV=$O(ECXDIV(DIV)) D HEADER
"RTN","ECXALAB",91,0)
 F  S ACCNM=$O(ACC(ACCNM)) Q:ACCNM=""  D  Q:QFLG
"RTN","ECXALAB",92,0)
 .S ACCAB=ACC(ACCNM),GTOT("P")=0,GTOT("R")=0
"RTN","ECXALAB",93,0)
 .;write the accession area name
"RTN","ECXALAB",94,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,ACCNM_" ("_ACCAB_")"
"RTN","ECXALAB",95,0)
 .I '$D(^TMP($J,"ECXAUD",ACCNM)) D  Q
"RTN","ECXALAB",96,0)
 ..W !,?3,"No data available for this Accession Area.",!!
"RTN","ECXALAB",97,0)
 .I $D(^TMP($J,"ECXAUD",ACCNM)) S WKLDNM="" F  S WKLDNM=$O(^TMP($J,"ECXAUD",ACCNM,WKLDNM)) Q:WKLDNM=""  D  Q:QFLG
"RTN","ECXALAB",98,0)
 ..S TOTP=$P(^TMP($J,"ECXAUD",ACCNM,WKLDNM),U,1),TOTR=$P(^(WKLDNM),U,2),WKLD=$P(^(WKLDNM),U,3)
"RTN","ECXALAB",99,0)
 ..S GTOT("P")=GTOT("P")+TOTP,GTOT("R")=GTOT("R")+TOTR
"RTN","ECXALAB",100,0)
 ..;write the test data
"RTN","ECXALAB",101,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,$E(WKLDNM,1,36),?40,WKLD,?56,$$RJ^XLFSTR(TOTP,5," "),?68,$$RJ^XLFSTR(TOTR,5," ")
"RTN","ECXALAB",102,0)
 .;write the accession area grandtotal
"RTN","ECXALAB",103,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,$E(LN,1,70)
"RTN","ECXALAB",104,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,"Total for "_ACCNM_":",?56,$$RJ^XLFSTR(GTOT("P"),5," "),?68,$$RJ^XLFSTR(GTOT("R"),5," "),!!
"RTN","ECXALAB",105,0)
 ;print the audit descriptive narrative
"RTN","ECXALAB",106,0)
 I $E(IOST)'="C" D
"RTN","ECXALAB",107,0)
 .W @IOF S PG=PG+1
"RTN","ECXALAB",108,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXALAB",109,0)
 .W !,"DSS Extract Log #:    "_ECXEXT
"RTN","ECXALAB",110,0)
 .W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXALAB",111,0)
 .W !,"Report Run Date/Time: "_ECXRUN,?68,"Page: ",PG
"RTN","ECXALAB",112,0)
 .W !!,LN,!!
"RTN","ECXALAB",113,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXALAB",114,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXALAB",115,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXALAB",116,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXALAB",117,0)
 Q
"RTN","ECXALAB",118,0)
 ;
"RTN","ECXALAB",119,0)
HEADER ;header and page control
"RTN","ECXALAB",120,0)
 N JJ,SS
"RTN","ECXALAB",121,0)
 I $E(IOST)="C" D
"RTN","ECXALAB",122,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXALAB",123,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXALAB",124,0)
 Q:QFLG
"RTN","ECXALAB",125,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXALAB",126,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXALAB",127,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXALAB",128,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXALAB",129,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXALAB",130,0)
 W !,"DSS Site:             "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")",?68,"Page: "_PG
"RTN","ECXALAB",131,0)
 W !!,"Accession Area (Feeder Location)",?40,"LMIP",?56,"# of Tests",?68,"# of Tests"
"RTN","ECXALAB",132,0)
 W !,?3,"Procedure",?40,"Code",?56,"(Patients)",?68,"(Referrals)"
"RTN","ECXALAB",133,0)
 W !,LN,!
"RTN","ECXALAB",134,0)
 Q
"RTN","ECXAMOV")
0^67^B56863094
"RTN","ECXAMOV",1,0)
ECXAMOV ;ALB/JAP - MOV Extract Audit Report ;Oct 10, 1997
"RTN","ECXAMOV",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXAMOV",3,0)
 ;
"RTN","ECXAMOV",4,0)
EN ;entry point for MOV extract audit report
"RTN","ECXAMOV",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR
"RTN","ECXAMOV",6,0)
 S ECXERR=0
"RTN","ECXAMOV",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAMOV",8,0)
 S ECXHEAD="MOV",ECXAUD=0
"RTN","ECXAMOV",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAMOV",10,0)
 ;select extract
"RTN","ECXAMOV",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAMOV",12,0)
 Q:ECXERR
"RTN","ECXAMOV",13,0)
 ;determine if facility is multidivisional
"RTN","ECXAMOV",14,0)
 S DIC="^DG(43,",DA=1,DR="11;",DIQ="ECX",DIQ(0)="I" D EN^DIQ1
"RTN","ECXAMOV",15,0)
 I +ECX(43,1,11,"I")=0 S ECXALL=1
"RTN","ECXAMOV",16,0)
 I +ECX(43,1,11,"I")=1 D
"RTN","ECXAMOV",17,0)
 .W !!
"RTN","ECXAMOV",18,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all divisions"
"RTN","ECXAMOV",19,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXAMOV",20,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXAMOV",21,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXAMOV",22,0)
 .S ECXALL=Y
"RTN","ECXAMOV",23,0)
 I ECXERR=1 D  Q
"RTN","ECXAMOV",24,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAMOV",25,0)
 .D AUDIT^ECXKILL
"RTN","ECXAMOV",26,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXAMOV",27,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAMOV",28,0)
 D MOV^ECXDVSN(.ECXDIV,ECXALL,ECXSTART,ECXEND,.ECXERR)
"RTN","ECXAMOV",29,0)
 I ECXERR=1 D  Q
"RTN","ECXAMOV",30,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAMOV",31,0)
 .D AUDIT^ECXKILL
"RTN","ECXAMOV",32,0)
 ;determine output device and queue if requested
"RTN","ECXAMOV",33,0)
 W !
"RTN","ECXAMOV",34,0)
 S ECXPGM="PROCESS^ECXAMOV",ECXDESC="MOV Extract Audit Report"
"RTN","ECXAMOV",35,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXAMOV",36,0)
 W !!,?5,"The format of this report requires a page or screen",!,?5,"width of 132 characters.",!
"RTN","ECXAMOV",37,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAMOV",38,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAMOV",39,0)
 .W !!,?5,"Try agian later... exiting.",!
"RTN","ECXAMOV",40,0)
 .D AUDIT^ECXKILL
"RTN","ECXAMOV",41,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAMOV",42,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAMOV",43,0)
 .D PROCESS^ECXAMOV
"RTN","ECXAMOV",44,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAMOV",45,0)
 D HOME^%ZIS
"RTN","ECXAMOV",46,0)
 D AUDIT^ECXKILL
"RTN","ECXAMOV",47,0)
 Q
"RTN","ECXAMOV",48,0)
 ;
"RTN","ECXAMOV",49,0)
PROCESS ;process data in file #727.808
"RTN","ECXAMOV",50,0)
 N X,Y,W,JJ,DATE,DATA,DIV,IEN,MOV,TL,ORDER,SORD,GTOT,STOT,WARD,TMOV,QQFLG,CNT,LINETOT
"RTN","ECXAMOV",51,0)
 K ^TMP($J,"ECXWARD"),^TMP($J,"ECXORDER")
"RTN","ECXAMOV",52,0)
 S (CNT,QQFLG)=0
"RTN","ECXAMOV",53,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAMOV",54,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAMOV",55,0)
 ;get run date in external format
"RTN","ECXAMOV",56,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAMOV",57,0)
 ;get ward info in ^tmp($j,"ecxward" and ^tmp($j,"ecxorder"
"RTN","ECXAMOV",58,0)
 D WARDS^ECXUTLA(ECXALL,.ECXDIV)
"RTN","ECXAMOV",59,0)
 ;setup up ^tmp($j,"mov", for legend
"RTN","ECXAMOV",60,0)
 S JJ=0 F  S JJ=$O(^DG(405.2,JJ)) Q:+JJ<1  S MOV=JJ D
"RTN","ECXAMOV",61,0)
 .S DATA=^DG(405.2,JJ,0),NM=$P(DATA,U,1),TYPE=$P(DATA,U,2)
"RTN","ECXAMOV",62,0)
 .S ^TMP($J,"MOV",TYPE,JJ)=NM
"RTN","ECXAMOV",63,0)
 F JJ=1:1:MOV S $P(TL,U,JJ)=0
"RTN","ECXAMOV",64,0)
 S W="" F  S W=$O(^TMP($J,"ECXWARD",W)) Q:W=""  D
"RTN","ECXAMOV",65,0)
 .S DIV=$P(^TMP($J,"ECXWARD",W),U,3) I '$D(GTOT(DIV)) F JJ=1:1:MOV S $P(GTOT(DIV),U,JJ)=0
"RTN","ECXAMOV",66,0)
 .S ^TMP($J,"TL",W)=TL
"RTN","ECXAMOV",67,0)
 .S ORDER="" D
"RTN","ECXAMOV",68,0)
 ..F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  I $D(^(ORDER,1)) D
"RTN","ECXAMOV",69,0)
 ...F JJ=1:1:MOV S $P(STOT(DIV,ORDER),U,JJ)=0
"RTN","ECXAMOV",70,0)
 ;get records in date range and ward set
"RTN","ECXAMOV",71,0)
 S IEN="" F  S IEN=$O(^ECX(727.808,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAMOV",72,0)
 .S DATA=^ECX(727.808,IEN,0),DATE=$P(DATA,U,9),WARD=$P(DATA,U,15),TMOV=$P(DATA,U,19)
"RTN","ECXAMOV",73,0)
 .;convert free text date to fm internal format date
"RTN","ECXAMOV",74,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAMOV",75,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAMOV",76,0)
 .;if ward is among those selected, then tally movement data
"RTN","ECXAMOV",77,0)
 .I $D(^TMP($J,"TL",WARD)) D
"RTN","ECXAMOV",78,0)
 ..S $P(^TMP($J,"TL",WARD),U,TMOV)=$P(^TMP($J,"TL",WARD),U,TMOV)+1
"RTN","ECXAMOV",79,0)
 ..S ORDER=$P(^TMP($J,"ECXWARD",WARD),U,1),DIV=$P(^(WARD),U,3),$P(GTOT(DIV),U,TMOV)=$P(GTOT(DIV),U,TMOV)+1
"RTN","ECXAMOV",80,0)
 ..S SORD=ORDER-.01,SORD=$O(STOT(DIV,SORD)) I +SORD S $P(STOT(DIV,SORD),U,TMOV)=$P(STOT(DIV,SORD),U,TMOV)+1
"RTN","ECXAMOV",81,0)
 ..S CNT=CNT+1 I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXAMOV",82,0)
 ;after all the extract records are processed, set totals into ^tmp($j,"ecxorder"
"RTN","ECXAMOV",83,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAMOV",84,0)
 S W="" F  S W=$O(^TMP($J,"TL",W)) Q:W=""  S TL(W)=^(W) D
"RTN","ECXAMOV",85,0)
 .S ORDER=$P(^TMP($J,"ECXWARD",W),U,1),DIV=$P(^(W),U,3)
"RTN","ECXAMOV",86,0)
 .S LINETOT=0 F JJ=1:1:MOV S $P(^TMP($J,"ECXORDER",DIV,ORDER),U,JJ+2)=$P(TL(W),U,JJ),LINETOT=LINETOT+$P(TL(W),U,JJ)
"RTN","ECXAMOV",87,0)
 .K TL(W)
"RTN","ECXAMOV",88,0)
 .;don't keep inactive wards unless there is movement data
"RTN","ECXAMOV",89,0)
 .I ORDER>999990,LINETOT=0 K ^TMP($J,"ECXORDER",DIV,ORDER)
"RTN","ECXAMOV",90,0)
 .I $D(^TMP($J,"ECXORDER",DIV,ORDER,1)) D
"RTN","ECXAMOV",91,0)
 ..;don't do group total on inactive/unordered wards
"RTN","ECXAMOV",92,0)
 ..I ORDER>999990 K ^TMP($J,"ECXORDER",DIV,ORDER,1) Q
"RTN","ECXAMOV",93,0)
 ..F JJ=1:1:MOV S $P(^TMP($J,"ECXORDER",DIV,ORDER,1),U,JJ+2)=$P(STOT(DIV,ORDER),U,JJ)
"RTN","ECXAMOV",94,0)
 D PRINT
"RTN","ECXAMOV",95,0)
 D AUDIT^ECXKILL
"RTN","ECXAMOV",96,0)
 Q
"RTN","ECXAMOV",97,0)
 ;
"RTN","ECXAMOV",98,0)
PRINT ;print the movement data by division and ward order
"RTN","ECXAMOV",99,0)
 N JJ,SS,LN,NM,TNM,PG,QFLG,WRDNM,WRDTOT,GRPNM,GRPTOT,DIVTOT,DATA,DATA1,TYPE,DIC,DA,DR,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXAMOV",100,0)
 U IO
"RTN","ECXAMOV",101,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAMOV",102,0)
 S (QFLG,PG)=0,$P(LN,"-",132)="",DIV=""
"RTN","ECXAMOV",103,0)
 F  S DIV=$O(GTOT(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXAMOV",104,0)
 .F TYPE=2,3 S TNM=$S(TYPE=2:"Transfer",TYPE=3:"Discharge",1:"") D HEADER Q:QFLG  S MOV="",DIVTOT=0 D  Q:QFLG
"RTN","ECXAMOV",105,0)
 ..F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  S DIVTOT=DIVTOT+$P(GTOT(DIV),U,MOV)
"RTN","ECXAMOV",106,0)
 ..I DIVTOT=0 D  Q
"RTN","ECXAMOV",107,0)
 ...W !!,"No "_TNM_" data extracted for this medical center division.",!
"RTN","ECXAMOV",108,0)
 ..S ORDER="" F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  D  Q:QFLG
"RTN","ECXAMOV",109,0)
 ...S DATA=^TMP($J,"ECXORDER",DIV,ORDER) K DATA1 I $D(^(ORDER,1)) S DATA1=^(1)
"RTN","ECXAMOV",110,0)
 ...S WRDNM=$P(DATA,U,2) D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",111,0)
 ...W !,$E(WRDNM,1,14) S TAB=10,LINETOT=0 F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  D
"RTN","ECXAMOV",112,0)
 ....S WRDTOT=$P(DATA,U,2+MOV),TAB=TAB+6 W ?TAB,$$RJ^XLFSTR(WRDTOT,5," ") S LINETOT=LINETOT+WRDTOT
"RTN","ECXAMOV",113,0)
 ...S TAB=TAB+8 W ?TAB,$$RJ^XLFSTR(LINETOT,5," ")
"RTN","ECXAMOV",114,0)
 ...;if data1 exists, then this is the end of a ward group so print group totals
"RTN","ECXAMOV",115,0)
 ...I $G(DATA1) D  Q:QFLG
"RTN","ECXAMOV",116,0)
 ....S GRPNM=$P(DATA1,U,2) D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",117,0)
 ....W !,?18,$E(LN,1,113)
"RTN","ECXAMOV",118,0)
 ....D:($Y+3>IOSL) HEADER Q:QFLG  W !,"Ward group "_GRPNM_" subtotals:",!
"RTN","ECXAMOV",119,0)
 ....D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",120,0)
 ....S TAB=10,LINETOT=0 F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  D
"RTN","ECXAMOV",121,0)
 .....S GRPTOT=$P(DATA1,U,2+MOV),TAB=TAB+6 W ?TAB,$$RJ^XLFSTR(GRPTOT,5," ") S LINETOT=LINETOT+GRPTOT
"RTN","ECXAMOV",122,0)
 ....S TAB=TAB+8 W ?TAB,$$RJ^XLFSTR(LINETOT,5," ")
"RTN","ECXAMOV",123,0)
 ....D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",124,0)
 ....W !!
"RTN","ECXAMOV",125,0)
 ..Q:QFLG
"RTN","ECXAMOV",126,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Division "_$P(ECXDIV(DIV),U,2)_" Grand Totals:",!
"RTN","ECXAMOV",127,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",128,0)
 ..S TAB=10,LINETOT=0 F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  D
"RTN","ECXAMOV",129,0)
 ...S GTOT=$P(GTOT(DIV),U,MOV),TAB=TAB+6 W ?TAB,$$RJ^XLFSTR(GTOT,5," ") S LINETOT=LINETOT+GTOT
"RTN","ECXAMOV",130,0)
 ..S TAB=TAB+8 W ?TAB,$$RJ^XLFSTR(LINETOT,5," ")
"RTN","ECXAMOV",131,0)
 ..I $E(IOST)'="C" D LEGEND
"RTN","ECXAMOV",132,0)
 ;
"RTN","ECXAMOV",133,0)
 I $E(IOST)'="C" D
"RTN","ECXAMOV",134,0)
 .W @IOF S PG=PG+1
"RTN","ECXAMOV",135,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAMOV",136,0)
 .W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAMOV",137,0)
 .W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAMOV",138,0)
 .W !,"Report Run Date/Time:    "_ECXRUN,?120,"Page: ",PG
"RTN","ECXAMOV",139,0)
 .W !!,LN,!!
"RTN","ECXAMOV",140,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAMOV",141,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAMOV",142,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAMOV",143,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAMOV",144,0)
 Q
"RTN","ECXAMOV",145,0)
 ;
"RTN","ECXAMOV",146,0)
HEADER ;header and page control
"RTN","ECXAMOV",147,0)
 N JJ,SS,TAB
"RTN","ECXAMOV",148,0)
 I $E(IOST)="C" D
"RTN","ECXAMOV",149,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAMOV",150,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAMOV",151,0)
 Q:QFLG
"RTN","ECXAMOV",152,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAMOV",153,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAMOV",154,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAMOV",155,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAMOV",156,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXAMOV",157,0)
 W !,"Medical Center Division: "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")",?120,"Page: "_PG
"RTN","ECXAMOV",158,0)
 W !!,"Ward",?20,"MAS Movement ("_TNM_") Types",!
"RTN","ECXAMOV",159,0)
 S MOV="",TAB=10 F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  S TAB=TAB+6 W ?TAB,$$RJ^XLFSTR(MOV,5," ")
"RTN","ECXAMOV",160,0)
 S TAB=TAB+8 W ?TAB,$$RJ^XLFSTR("Total",5," ")
"RTN","ECXAMOV",161,0)
 W !,LN,!
"RTN","ECXAMOV",162,0)
 Q
"RTN","ECXAMOV",163,0)
 ;
"RTN","ECXAMOV",164,0)
LEGEND ;print legend for each report type
"RTN","ECXAMOV",165,0)
 N MOV,MOVNM
"RTN","ECXAMOV",166,0)
 D:($Y+10>IOSL) HEADER
"RTN","ECXAMOV",167,0)
 W !!,TNM_" Movements Legend --"
"RTN","ECXAMOV",168,0)
 S MOV="" F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  D  Q:MOV=""
"RTN","ECXAMOV",169,0)
 .S MOVNM=^TMP($J,"MOV",TYPE,MOV) W !,MOV,?4,"= ",$E(MOVNM,1,32)
"RTN","ECXAMOV",170,0)
 .S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  S MOVNM=^(MOV) W ?41,MOV,?44,"= ",$E(MOVNM,1,32)
"RTN","ECXAMOV",171,0)
 .S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  S MOVNM=^(MOV) W ?81,MOV,?84,"= ",$E(MOVNM,1,32)
"RTN","ECXAMOV",172,0)
 Q
"RTN","ECXANUR")
0^66^B39095495
"RTN","ECXANUR",1,0)
ECXANUR ;ALB/JAP - NUR Extract Audit Report ;Oct 15, 1997
"RTN","ECXANUR",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXANUR",3,0)
 ;
"RTN","ECXANUR",4,0)
EN ;entry point for NUR extract audit report
"RTN","ECXANUR",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR
"RTN","ECXANUR",6,0)
 S ECXERR=0
"RTN","ECXANUR",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXANUR",8,0)
 S ECXHEAD="NUR",ECXAUD=0
"RTN","ECXANUR",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXANUR",10,0)
 ;select extract
"RTN","ECXANUR",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXANUR",12,0)
 Q:ECXERR
"RTN","ECXANUR",13,0)
 ;determine if facility is multidivisional
"RTN","ECXANUR",14,0)
 S DIC="^DG(43,",DA=1,DR="11;",DIQ="ECX",DIQ(0)="I" D EN^DIQ1
"RTN","ECXANUR",15,0)
 I +ECX(43,1,11,"I")=0 S ECXALL=1
"RTN","ECXANUR",16,0)
 I +ECX(43,1,11,"I")=1 D
"RTN","ECXANUR",17,0)
 .W !!
"RTN","ECXANUR",18,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all divisions"
"RTN","ECXANUR",19,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXANUR",20,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXANUR",21,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXANUR",22,0)
 .S ECXALL=Y
"RTN","ECXANUR",23,0)
 I ECXERR=1 D  Q
"RTN","ECXANUR",24,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXANUR",25,0)
 .D AUDIT^ECXKILL
"RTN","ECXANUR",26,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXANUR",27,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXANUR",28,0)
 D NUR^ECXDVSN1(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXANUR",29,0)
 I ECXERR=1 D  Q
"RTN","ECXANUR",30,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXANUR",31,0)
 .D AUDIT^ECXKILL
"RTN","ECXANUR",32,0)
 ;determine output device and queue if requested
"RTN","ECXANUR",33,0)
 W !
"RTN","ECXANUR",34,0)
 S ECXPGM="PROCESS^ECXANUR",ECXDESC="NUR Extract Audit Report"
"RTN","ECXANUR",35,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXANUR",36,0)
 W !
"RTN","ECXANUR",37,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXANUR",38,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXANUR",39,0)
 .W !!,?5,"Try agian later... exiting.",!
"RTN","ECXANUR",40,0)
 .D AUDIT^ECXKILL
"RTN","ECXANUR",41,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXANUR",42,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXANUR",43,0)
 .D PROCESS^ECXANUR
"RTN","ECXANUR",44,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXANUR",45,0)
 D HOME^%ZIS
"RTN","ECXANUR",46,0)
 D AUDIT^ECXKILL
"RTN","ECXANUR",47,0)
 Q
"RTN","ECXANUR",48,0)
 ;
"RTN","ECXANUR",49,0)
PROCESS ;process data in file #727.805
"RTN","ECXANUR",50,0)
 N X,Y,W,DATA,DATE,DIV,IEN,LOC,PAT,BD,BDS,QQFLG,CNT
"RTN","ECXANUR",51,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXANUR",52,0)
 S (CNT,QQFLG)=0
"RTN","ECXANUR",53,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXANUR",54,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXANUR",55,0)
 ;get run date in external format
"RTN","ECXANUR",56,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXANUR",57,0)
 ;get records in date range and ward set
"RTN","ECXANUR",58,0)
 S IEN="" F  S IEN=$O(^ECX(727.805,"AC",ECXEXT,IEN)) Q:IEN=""  D
"RTN","ECXANUR",59,0)
 .S DATA=^ECX(727.805,IEN,0),DATE=$P(DATA,U,9),LOC=$P(DATA,U,13)
"RTN","ECXANUR",60,0)
 .;convert free text date to fm internal format date
"RTN","ECXANUR",61,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXANUR",62,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXANUR",63,0)
 .;if ward is among those selected, then tally nursing data
"RTN","ECXANUR",64,0)
 .I $D(ECXDIV(LOC)) D
"RTN","ECXANUR",65,0)
 ..S DIV="",DIV=$O(ECXDIV(LOC,DIV))
"RTN","ECXANUR",66,0)
 ..S PAT=$P(DATA,U,10),BD=$P(DATA,U,14)
"RTN","ECXANUR",67,0)
 ..I '$D(^TMP($J,"ECXAUD",DIV,LOC,BD,PAT)) S ^TMP($J,"ECXAUD",DIV,LOC,BD,PAT)=0
"RTN","ECXANUR",68,0)
 ..S ^(PAT)=^TMP($J,"ECXAUD",DIV,LOC,BD,PAT)+1,CNT=CNT+1
"RTN","ECXANUR",69,0)
 ..I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXANUR",70,0)
 ;after all extract records processed, get bedsection names for printing
"RTN","ECXANUR",71,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXANUR",72,0)
 S IEN=0 F  S IEN=$O(^NURSF(213.3,IEN)) Q:+IEN=0  S BDS(IEN)=$P(^NURSF(213.3,IEN,0),U,1)
"RTN","ECXANUR",73,0)
 ;print the report
"RTN","ECXANUR",74,0)
 D PRINT
"RTN","ECXANUR",75,0)
 D AUDIT^ECXKILL
"RTN","ECXANUR",76,0)
 Q
"RTN","ECXANUR",77,0)
 ;
"RTN","ECXANUR",78,0)
PRINT ;print the nursing classification data by division and location order
"RTN","ECXANUR",79,0)
 N JJ,SS,LN,NM,BDNM,NLNM,DIV,DIVNM,LOC,PG,QFLG,BTOT,GTOT,STOT,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXANUR",80,0)
 U IO
"RTN","ECXANUR",81,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXANUR",82,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXANUR",83,0)
 F  S DIV=$O(ECXDIV("D",DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXANUR",84,0)
 .S DIVNM=$P(ECXDIV("D",DIV),U,2)_" ("_$P(ECXDIV("D",DIV),U,3)_")" D HEADER
"RTN","ECXANUR",85,0)
 .I '$D(^TMP($J,"ECXAUD",DIV)) D  Q
"RTN","ECXANUR",86,0)
 ..W !!,?3,"No data available for this division.",!!
"RTN","ECXANUR",87,0)
 .F JJ=1:1:5 S GTOT(JJ)=0,GTOT("T")=0
"RTN","ECXANUR",88,0)
 .I $D(^TMP($J,"ECXAUD",DIV)) S LOC="" F  S LOC=$O(^TMP($J,"ECXAUD",DIV,LOC)) Q:LOC=""  D  Q:QFLG
"RTN","ECXANUR",89,0)
 ..F JJ=1:1:5 S STOT(JJ)=0,STOT("T")=0
"RTN","ECXANUR",90,0)
 ..S NLNM=$P(ECXDIV(LOC,DIV),U,2)_" ("_LOC_")",BD=""
"RTN","ECXANUR",91,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,NLNM
"RTN","ECXANUR",92,0)
 ..F  S BD=$O(^TMP($J,"ECXAUD",DIV,LOC,BD)) Q:BD=""  D  Q:QFLG
"RTN","ECXANUR",93,0)
 ...F PAT=1:1:5 S TOT(PAT)=+$G(^TMP($J,"ECXAUD",DIV,LOC,BD,PAT))
"RTN","ECXANUR",94,0)
 ...S BDNM=BDS(BD),BDNM=$E(BDNM,1,22)_" ("_BD_")",BTOT=0 F JJ=1:1:5 S BTOT=BTOT+TOT(JJ)
"RTN","ECXANUR",95,0)
 ...;write the bedsection totals
"RTN","ECXANUR",96,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXANUR",97,0)
 ...W !,?3,BDNM,?33,$$RJ^XLFSTR(TOT(1),5," "),?41,$$RJ^XLFSTR(TOT(2),5," "),?50,$$RJ^XLFSTR(TOT(3),5," "),?57,$$RJ^XLFSTR(TOT(4),5," "),?64,$$RJ^XLFSTR(TOT(5),5," "),?74,$$RJ^XLFSTR(BTOT,5," ")
"RTN","ECXANUR",98,0)
 ...;increment grand total and subtotal
"RTN","ECXANUR",99,0)
 ...F JJ=1:1:5 S GTOT(JJ)=GTOT(JJ)+TOT(JJ),STOT(JJ)=STOT(JJ)+TOT(JJ)
"RTN","ECXANUR",100,0)
 ...S GTOT("T")=GTOT("T")+BTOT,STOT("T")=STOT("T")+BTOT
"RTN","ECXANUR",101,0)
 ..;write the location subtotals
"RTN","ECXANUR",102,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?33,$E(LN,1,46)
"RTN","ECXANUR",103,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,"Sub-totals for Location ("_LOC_"):"
"RTN","ECXANUR",104,0)
 ..W ?33,$$RJ^XLFSTR(STOT(1),5," "),?41,$$RJ^XLFSTR(STOT(2),5," "),?50,$$RJ^XLFSTR(STOT(3),5," "),?57,$$RJ^XLFSTR(STOT(4),5," "),?64,$$RJ^XLFSTR(STOT(5),5," "),?74,$$RJ^XLFSTR(STOT("T"),5," ")
"RTN","ECXANUR",105,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !!
"RTN","ECXANUR",106,0)
 .;write the division grand totals
"RTN","ECXANUR",107,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Grand Totals for "_DIVNM_":"
"RTN","ECXANUR",108,0)
 .W ?33,$$RJ^XLFSTR(GTOT(1),5," "),?41,$$RJ^XLFSTR(GTOT(2),5," "),?50,$$RJ^XLFSTR(GTOT(3),5," "),?57,$$RJ^XLFSTR(GTOT(4),5," "),?64,$$RJ^XLFSTR(GTOT(5),5," "),?74,$$RJ^XLFSTR(GTOT("T"),5," ")
"RTN","ECXANUR",109,0)
 ;print the audit descriptive narrative
"RTN","ECXANUR",110,0)
 I $E(IOST)'="C" D
"RTN","ECXANUR",111,0)
 .W @IOF S PG=PG+1
"RTN","ECXANUR",112,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXANUR",113,0)
 .W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXANUR",114,0)
 .W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXANUR",115,0)
 .W !,"Report Run Date/Time:    "_ECXRUN,?68,"Page: ",PG
"RTN","ECXANUR",116,0)
 .W !!,LN,!!
"RTN","ECXANUR",117,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXANUR",118,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXANUR",119,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXANUR",120,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXANUR",121,0)
 Q
"RTN","ECXANUR",122,0)
 ;
"RTN","ECXANUR",123,0)
HEADER ;header and page control
"RTN","ECXANUR",124,0)
 N JJ,SS
"RTN","ECXANUR",125,0)
 I $E(IOST)="C" D
"RTN","ECXANUR",126,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXANUR",127,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXANUR",128,0)
 Q:QFLG
"RTN","ECXANUR",129,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXANUR",130,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXANUR",131,0)
 W !,"DSS Extract Log #:       "_ECXARRAY("EXTRACT")
"RTN","ECXANUR",132,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXANUR",133,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXANUR",134,0)
 W !,"Medical Center Division: "_$P(ECXDIV("D",DIV),U,2)_" ("_$P(ECXDIV("D",DIV),U,3)_")",?68,"Page: "_PG
"RTN","ECXANUR",135,0)
 W !!,"Nursing Location",?36,"Patients per Acuity Level (Category)"
"RTN","ECXANUR",136,0)
 W !,?3,"Nursing Bedsection",?37,"I",?44,"II",?52,"III",?60,"IV",?68,"V",?74,"Total"
"RTN","ECXANUR",137,0)
 W !,LN,!
"RTN","ECXANUR",138,0)
 Q
"RTN","ECXAPAS")
0^68^B14597248
"RTN","ECXAPAS",1,0)
ECXAPAS ;ALB/JAP - PAS Extract Audit Report ;Oct 16, 1997
"RTN","ECXAPAS",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXAPAS",3,0)
 ;
"RTN","ECXAPAS",4,0)
EN ;entry point for PAS extract audit report
"RTN","ECXAPAS",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR
"RTN","ECXAPAS",6,0)
 S ECXERR=0
"RTN","ECXAPAS",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAPAS",8,0)
 S ECXHEAD="PAS",ECXAUD=0
"RTN","ECXAPAS",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAPAS",10,0)
 ;select extract
"RTN","ECXAPAS",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAPAS",12,0)
 Q:ECXERR
"RTN","ECXAPAS",13,0)
 ;currently, quasar does not accommodate multi-divisional sites
"RTN","ECXAPAS",14,0)
 S ECXALL=1
"RTN","ECXAPAS",15,0)
 D PAS^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXAPAS",16,0)
 I ECXERR=1 D  Q
"RTN","ECXAPAS",17,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAPAS",18,0)
 .D AUDIT^ECXKILL
"RTN","ECXAPAS",19,0)
 ;determine output device and queue if requested
"RTN","ECXAPAS",20,0)
 W !
"RTN","ECXAPAS",21,0)
 S ECXPGM="PROCESS^ECXAPAS",ECXDESC="PAS Extract Audit Report"
"RTN","ECXAPAS",22,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXAPAS",23,0)
 W !
"RTN","ECXAPAS",24,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAPAS",25,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAPAS",26,0)
 .W !!,?5,"Try agian later... exiting.",!
"RTN","ECXAPAS",27,0)
 .D AUDIT^ECXKILL
"RTN","ECXAPAS",28,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAPAS",29,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAPAS",30,0)
 .D PROCESS^ECXAPAS
"RTN","ECXAPAS",31,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAPAS",32,0)
 D HOME^%ZIS
"RTN","ECXAPAS",33,0)
 D AUDIT^ECXKILL
"RTN","ECXAPAS",34,0)
 Q
"RTN","ECXAPAS",35,0)
 ;
"RTN","ECXAPAS",36,0)
PROCESS ;process data in file #727.823
"RTN","ECXAPAS",37,0)
 N X,Y,W,DATA,DATE,DIV,IEN,QQFLG,CNT
"RTN","ECXAPAS",38,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXAPAS",39,0)
 S (CNT,QQFLG)=0
"RTN","ECXAPAS",40,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAPAS",41,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAPAS",42,0)
 ;get run date in external format
"RTN","ECXAPAS",43,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAPAS",44,0)
 ;get extract records in date range
"RTN","ECXAPAS",45,0)
 S IEN="" F  S IEN=$O(^ECX(727.823,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAPAS",46,0)
 .S DATA=^ECX(727.823,IEN,0),DATE=$P(DATA,U,9),DIV=$P(DATA,U,4)
"RTN","ECXAPAS",47,0)
 .;currently the 4th piece of extract record is always null for pai
"RTN","ECXAPAS",48,0)
 .S:DIV="" DIV=1
"RTN","ECXAPAS",49,0)
 .;convert free text date to fm internal format date
"RTN","ECXAPAS",50,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAPAS",51,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAPAS",52,0)
 .I $D(ECXDIV(DIV)) D
"RTN","ECXAPAS",53,0)
 ..I '$D(^TMP($J,"ECXAUD",DIV)) S ^TMP($J,"ECXAUD",DIV)=0
"RTN","ECXAPAS",54,0)
 ..S ^(DIV)=^TMP($J,"ECXAUD",DIV)+1,CNT=CNT+1
"RTN","ECXAPAS",55,0)
 ..I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXAPAS",56,0)
 ;print the report
"RTN","ECXAPAS",57,0)
 D PRINT
"RTN","ECXAPAS",58,0)
 D AUDIT^ECXKILL
"RTN","ECXAPAS",59,0)
 Q
"RTN","ECXAPAS",60,0)
 ;
"RTN","ECXAPAS",61,0)
PRINT ;print pai data by site
"RTN","ECXAPAS",62,0)
 N JJ,SS,LN,P,DIV,DIVNM,GTOT,PG,QFLG,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXAPAS",63,0)
 U IO
"RTN","ECXAPAS",64,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXAPAS",65,0)
 F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXAPAS",66,0)
 .S DIVNM=$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")" D HEADER
"RTN","ECXAPAS",67,0)
 .S GTOT=$G(^TMP($J,"ECXAUD",DIV))
"RTN","ECXAPAS",68,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAPAS",69,0)
 .W !!,"Total Patient Assessments extracted for date range: "_GTOT
"RTN","ECXAPAS",70,0)
 I $E(IOST)'="C" D
"RTN","ECXAPAS",71,0)
 .W @IOF S PG=PG+1
"RTN","ECXAPAS",72,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAPAS",73,0)
 .W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAPAS",74,0)
 .W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAPAS",75,0)
 .W !,"Report Run Date/Time:    "_ECXRUN,?68,"Page: ",PG
"RTN","ECXAPAS",76,0)
 .W !!,LN,!!
"RTN","ECXAPAS",77,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAPAS",78,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAPAS",79,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPAS",80,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAPAS",81,0)
 Q
"RTN","ECXAPAS",82,0)
 ;
"RTN","ECXAPAS",83,0)
HEADER ;header and page control
"RTN","ECXAPAS",84,0)
 N JJ,SS
"RTN","ECXAPAS",85,0)
 I $E(IOST)="C" D
"RTN","ECXAPAS",86,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPAS",87,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAPAS",88,0)
 Q:QFLG
"RTN","ECXAPAS",89,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAPAS",90,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAPAS",91,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXAPAS",92,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAPAS",93,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXAPAS",94,0)
 W !,"DSS Site:             "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")",?68,"Page: "_PG
"RTN","ECXAPAS",95,0)
 W !,LN,!
"RTN","ECXAPAS",96,0)
 Q
"RTN","ECXARAD")
0^69^B36956820
"RTN","ECXARAD",1,0)
ECXARAD ;ALB/JAP - RAD Extract Audit Report ;Oct 16, 1997
"RTN","ECXARAD",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXARAD",3,0)
 ;
"RTN","ECXARAD",4,0)
EN ;entry point for RAD extract audit report
"RTN","ECXARAD",5,0)
 ;select extract
"RTN","ECXARAD",6,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,SITES,ECX
"RTN","ECXARAD",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXARAD",8,0)
 S ECXERR=0
"RTN","ECXARAD",9,0)
 S ECXHEAD="RAD",ECXAUD=0
"RTN","ECXARAD",10,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXARAD",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXARAD",12,0)
 Q:ECXERR
"RTN","ECXARAD",13,0)
 ;determine if facility is multidivisional
"RTN","ECXARAD",14,0)
 K ECX D FILE^DID(79,,"ENTRIES","ECX") S SITES=ECX("ENTRIES") K ECX
"RTN","ECXARAD",15,0)
 I SITES=1 S ECXALL=1
"RTN","ECXARAD",16,0)
 I SITES>1 D
"RTN","ECXARAD",17,0)
 .W !!
"RTN","ECXARAD",18,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all divisions"
"RTN","ECXARAD",19,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXARAD",20,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXARAD",21,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXARAD",22,0)
 .S ECXALL=Y
"RTN","ECXARAD",23,0)
 I ECXERR=1 D  Q
"RTN","ECXARAD",24,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXARAD",25,0)
 .D AUDIT^ECXKILL
"RTN","ECXARAD",26,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXARAD",27,0)
 W !
"RTN","ECXARAD",28,0)
 S ECXSTART=ECXARRAY("START"),ECXEND=ECXARRAY("END")
"RTN","ECXARAD",29,0)
 D RAD^ECXDVSN2(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXARAD",30,0)
 I ECXERR=1 D  Q
"RTN","ECXARAD",31,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXARAD",32,0)
 .D AUDIT^ECXKILL
"RTN","ECXARAD",33,0)
 ;determine output device and queue if requested
"RTN","ECXARAD",34,0)
 S ECXPGM="PROCESS^ECXARAD",ECXDESC="RAD Extract Audit Report"
"RTN","ECXARAD",35,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXARAD",36,0)
 W !
"RTN","ECXARAD",37,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXARAD",38,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXARAD",39,0)
 .W !!,?5,"Try agian later... exiting.",!
"RTN","ECXARAD",40,0)
 .D AUDIT^ECXKILL
"RTN","ECXARAD",41,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXARAD",42,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXARAD",43,0)
 .D PROCESS^ECXARAD
"RTN","ECXARAD",44,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXARAD",45,0)
 D HOME^%ZIS
"RTN","ECXARAD",46,0)
 D AUDIT^ECXKILL
"RTN","ECXARAD",47,0)
 Q
"RTN","ECXARAD",48,0)
 ;
"RTN","ECXARAD",49,0)
PROCESS ;process data in file #727.814
"RTN","ECXARAD",50,0)
 N X,Y,JJ,DIV,IEN,DATA,DATE,ECX,PAT,TYPE,IMNM,IMAB,PROC,PROCN,CPT,DIC,DIQ,DR,DA,QQFLG,CNT
"RTN","ECXARAD",51,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXARAD",52,0)
 S (CNT,QQFLG)=0
"RTN","ECXARAD",53,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXARAD",54,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXARAD",55,0)
 ;get run date in external format
"RTN","ECXARAD",56,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXARAD",57,0)
 ;setup array of imaging types
"RTN","ECXARAD",58,0)
 S TYPE=0 F  S TYPE=$O(^RA(79.2,TYPE)) Q:+TYPE<1  D
"RTN","ECXARAD",59,0)
 .K ECX S DIC="^RA(79.2,",DR=".01;3",DIQ="ECX",DIQ(0)="I",DA=TYPE D EN^DIQ1
"RTN","ECXARAD",60,0)
 .S TYPE(TYPE)=ECX(79.2,TYPE,.01,"I")_U_ECX(79.2,TYPE,3,"I")
"RTN","ECXARAD",61,0)
 ;get records within date range and radiology site(s)
"RTN","ECXARAD",62,0)
 S IEN="" F  S IEN=$O(^ECX(727.814,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXARAD",63,0)
 .S DATA=^ECX(727.814,IEN,0),DATE=$P(DATA,U,9),DIV=$P(DATA,U,4)
"RTN","ECXARAD",64,0)
 .;convert free text date to fm internal format date
"RTN","ECXARAD",65,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXARAD",66,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXARAD",67,0)
 .Q:'$D(ECXDIV(DIV))
"RTN","ECXARAD",68,0)
 .S PAT=$P(DATA,U,8),TYPE=$P(DATA,U,21),PROC=$P(DATA,U,11),CPT=$P(DATA,U,10),CPT="A"_$$RJ^XLFSTR(CPT,5,0)
"RTN","ECXARAD",69,0)
 .S IMNM=$P(TYPE(TYPE),U,1),IMAB=$P(TYPE(TYPE),U,2)
"RTN","ECXARAD",70,0)
 .K ECX S DIC="^RAMIS(71,",DR=".01",DIQ="ECX",DIQ(0)="I",DA=+PROC D EN^DIQ1
"RTN","ECXARAD",71,0)
 .S PROCN=$G(ECX(71,+PROC,.01,"I")) I PROCN="" S PROCN="Unknown"
"RTN","ECXARAD",72,0)
 .;tally procedures; 1st piece is outpatient total, 2nd piece is inpatient total
"RTN","ECXARAD",73,0)
 .I '$D(^TMP($J,"ECXAUD",DIV,IMNM,CPT)) S ^TMP($J,"ECXAUD",DIV,IMNM,CPT)=0_U_0_U_PROCN
"RTN","ECXARAD",74,0)
 .I PAT=1 S $P(^(CPT),U,1)=$P(^TMP($J,"ECXAUD",DIV,IMNM,CPT),U,1)+1,CNT=CNT+1
"RTN","ECXARAD",75,0)
 .I PAT=3 S $P(^(CPT),U,2)=$P(^TMP($J,"ECXAUD",DIV,IMNM,CPT),U,2)+1,CNT=CNT+1
"RTN","ECXARAD",76,0)
 .I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXARAD",77,0)
 ;print the report
"RTN","ECXARAD",78,0)
 D PRINT
"RTN","ECXARAD",79,0)
 D AUDIT^ECXKILL
"RTN","ECXARAD",80,0)
 Q
"RTN","ECXARAD",81,0)
 ;
"RTN","ECXARAD",82,0)
PRINT ;print the RAD audit report by radiology site
"RTN","ECXARAD",83,0)
 N LN,P,PG,QFLG,TOT,STOT,GTOT,DIVNM,IMAG,IMTYPE,T,SS,DIC,DIR,DR,DIRUT,DTOUT,DUOUT
"RTN","ECXARAD",84,0)
 U IO
"RTN","ECXARAD",85,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXARAD",86,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXARAD",87,0)
 ;arrange type array by name
"RTN","ECXARAD",88,0)
 S T=0 F  S T=$O(TYPE(T)) Q:T=""  S IMNM=$P(TYPE(T),U,1),IMAG(IMNM)=T
"RTN","ECXARAD",89,0)
 F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXARAD",90,0)
 .S DIVNM=$P(ECXDIV(DIV),U,2)_" ("_DIV_")",GTOT(1)=0,GTOT(3)=0 D HEADER
"RTN","ECXARAD",91,0)
 .I '$D(^TMP($J,"ECXAUD",DIV)) D  Q
"RTN","ECXARAD",92,0)
 ..W !!,?5,"No data available for this Radiology Division.",!!
"RTN","ECXARAD",93,0)
 .I $D(^TMP($J,"ECXAUD",DIV)) S IMNM="" F  S IMNM=$O(^TMP($J,"ECXAUD",DIV,IMNM)) Q:IMNM=""  D  Q:QFLG
"RTN","ECXARAD",94,0)
 ..S STOT(1)=0,STOT(3)=0,IMTYPE=IMAG(IMNM),CPT=""
"RTN","ECXARAD",95,0)
 ..;write the imaging type name
"RTN","ECXARAD",96,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,IMNM_" ("_DIV_"-"_IMTYPE_")",!
"RTN","ECXARAD",97,0)
 ..F  S CPT=$O(^TMP($J,"ECXAUD",DIV,IMNM,CPT)) Q:CPT=""  S TOT(1)=$P(^(CPT),U,1),TOT(3)=$P(^(CPT),U,2),PROCN=$P(^(CPT),U,3) D  Q:QFLG
"RTN","ECXARAD",98,0)
 ...S STOT(1)=STOT(1)+TOT(1),STOT(3)=STOT(3)+TOT(3)
"RTN","ECXARAD",99,0)
 ...S GTOT(1)=GTOT(1)+TOT(1),GTOT(3)=GTOT(3)+TOT(3)
"RTN","ECXARAD",100,0)
 ...;write procedure and total
"RTN","ECXARAD",101,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG  W ?3,$E(CPT,2,99),?14,$E(PROCN,1,38),?60,$$RJ^XLFSTR(TOT(3),5," "),?70,$$RJ^XLFSTR(TOT(1),5," "),!
"RTN","ECXARAD",102,0)
 ..;write the unit subtotal
"RTN","ECXARAD",103,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?5,$E(LN,1,74)
"RTN","ECXARAD",104,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,"Sub-totals for "_IMNM_" ("_DIV_"-"_IMTYPE_"):",?60,$$RJ^XLFSTR(STOT(3),5," "),?70,$$RJ^XLFSTR(STOT(1),5," "),!
"RTN","ECXARAD",105,0)
 .;write the division grandtotal
"RTN","ECXARAD",106,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Grand Total for Division "_DIVNM_":",?60,$$RJ^XLFSTR(GTOT(3),5," "),?70,$$RJ^XLFSTR(GTOT(1),5," ")
"RTN","ECXARAD",107,0)
 ;print the audit descriptive narrative
"RTN","ECXARAD",108,0)
 I $E(IOST)'="C" D
"RTN","ECXARAD",109,0)
 .W @IOF S PG=PG+1
"RTN","ECXARAD",110,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXARAD",111,0)
 .W !,"DSS Extract Log #:    "_ECXEXT
"RTN","ECXARAD",112,0)
 .W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXARAD",113,0)
 .W !,"Report Run Date/Time: "_ECXRUN,?68,"Page: ",PG
"RTN","ECXARAD",114,0)
 .W !!,LN,!!
"RTN","ECXARAD",115,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXARAD",116,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXARAD",117,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXARAD",118,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXARAD",119,0)
 Q
"RTN","ECXARAD",120,0)
 ;
"RTN","ECXARAD",121,0)
HEADER ;header and page control
"RTN","ECXARAD",122,0)
 N JJ,SS
"RTN","ECXARAD",123,0)
 I $E(IOST)="C" D
"RTN","ECXARAD",124,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXARAD",125,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXARAD",126,0)
 Q:QFLG
"RTN","ECXARAD",127,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXARAD",128,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXARAD",129,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXARAD",130,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXARAD",131,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXARAD",132,0)
 W !,"Radiology Division:   "_$P(ECXDIV(DIV),U,2)_" ("_DIV_")",?60,"Page: "_PG
"RTN","ECXARAD",133,0)
 W !!,"Imaging Type (Feeder Location)",?60,"# of Procedures"
"RTN","ECXARAD",134,0)
 W !,?3,"CPT Code",?14,"Procedure",?60,"Inpt.",?70,"Outpt."
"RTN","ECXARAD",135,0)
 W !,LN,!
"RTN","ECXARAD",136,0)
 Q
"RTN","ECXASUR")
0^70^B34325102
"RTN","ECXASUR",1,0)
ECXASUR ;ALB/JAP - SUR Extract Audit Report ;Oct 22, 1997
"RTN","ECXASUR",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXASUR",3,0)
 ;
"RTN","ECXASUR",4,0)
EN ;entry point for SUR extract audit report
"RTN","ECXASUR",5,0)
 ;select extract
"RTN","ECXASUR",6,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,SITES,ECX
"RTN","ECXASUR",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXASUR",8,0)
 S ECXERR=0
"RTN","ECXASUR",9,0)
 S ECXHEAD="SUR",ECXAUD=0
"RTN","ECXASUR",10,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXASUR",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXASUR",12,0)
 Q:ECXERR
"RTN","ECXASUR",13,0)
 ;determine if facility is multidivisional
"RTN","ECXASUR",14,0)
 K ECX D FILE^DID(133,,"ENTRIES","ECX") S SITES=ECX("ENTRIES") K ECX
"RTN","ECXASUR",15,0)
 I SITES=1 S ECXALL=1
"RTN","ECXASUR",16,0)
 I SITES>1 D
"RTN","ECXASUR",17,0)
 .W !!
"RTN","ECXASUR",18,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all divisions"
"RTN","ECXASUR",19,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXASUR",20,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXASUR",21,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXASUR",22,0)
 .S ECXALL=Y
"RTN","ECXASUR",23,0)
 I ECXERR=1 D  Q
"RTN","ECXASUR",24,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXASUR",25,0)
 .D AUDIT^ECXKILL
"RTN","ECXASUR",26,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXASUR",27,0)
 W !
"RTN","ECXASUR",28,0)
 S ECXSTART=ECXARRAY("START"),ECXEND=ECXARRAY("END")
"RTN","ECXASUR",29,0)
 D SUR^ECXDVSN2(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXASUR",30,0)
 I ECXERR=1 D  Q
"RTN","ECXASUR",31,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXASUR",32,0)
 .D AUDIT^ECXKILL
"RTN","ECXASUR",33,0)
 ;determine output device and queue if requested
"RTN","ECXASUR",34,0)
 S ECXPGM="PROCESS^ECXASUR",ECXDESC="SUR Extract Audit Report"
"RTN","ECXASUR",35,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXASUR",36,0)
 W !
"RTN","ECXASUR",37,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXASUR",38,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXASUR",39,0)
 .W !!,?5,"Try agian later... exiting.",!
"RTN","ECXASUR",40,0)
 .D AUDIT^ECXKILL
"RTN","ECXASUR",41,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXASUR",42,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXASUR",43,0)
 .D PROCESS^ECXASUR
"RTN","ECXASUR",44,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXASUR",45,0)
 D HOME^%ZIS
"RTN","ECXASUR",46,0)
 D AUDIT^ECXKILL
"RTN","ECXASUR",47,0)
 Q
"RTN","ECXASUR",48,0)
 ;
"RTN","ECXASUR",49,0)
PROCESS ;process data in file #727.811
"RTN","ECXASUR",50,0)
 N X,Y,JJ,DIV,IEN,DATA,DATE,CASE,CASES,OR,LOC,PROC,PROCN,PSI,CPT,DIC,QQFLG,CNT
"RTN","ECXASUR",51,0)
 K ^TMP($J,"ECXAUD"),^TMP($J,"ECXS")
"RTN","ECXASUR",52,0)
 S (CNT,QQFLG)=0
"RTN","ECXASUR",53,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXASUR",54,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXASUR",55,0)
 ;get run date in external format
"RTN","ECXASUR",56,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXASUR",57,0)
 ;get records within date range and surgery site(s)
"RTN","ECXASUR",58,0)
 S IEN="" F  S IEN=$O(^ECX(727.811,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXASUR",59,0)
 .S DATA=^ECX(727.811,IEN,0),DATE=$P(DATA,U,9),DIV=$P(DATA,U,4)
"RTN","ECXASUR",60,0)
 .;convert free text date to fm internal format date
"RTN","ECXASUR",61,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXASUR",62,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXASUR",63,0)
 .Q:'$D(ECXDIV(DIV))
"RTN","ECXASUR",64,0)
 .S CASE=$P(DATA,U,10),OR=$P(DATA,U,12),PSI=$P(DATA,U,17),PROC=$P(DATA,U,18)
"RTN","ECXASUR",65,0)
 .Q:(PROC="")&(PSI="I")
"RTN","ECXASUR",66,0)
 .S (CPT,PROCN)="" I PROC]"" D
"RTN","ECXASUR",67,0)
 ..;from cpt code get procedure name; variable cpt should be same as variable proc
"RTN","ECXASUR",68,0)
 ..K Y S DIC="^ICPT(",DIC(0)="XZ",X=PROC D ^DIC
"RTN","ECXASUR",69,0)
 ..S CPT=$P($G(Y(0)),U,1),PROCN=$P($G(Y(0)),U,2)
"RTN","ECXASUR",70,0)
 .S:CPT="" CPT="Unknown" S:PROCN="" PROCN="Unknown" S CPT="A"_CPT
"RTN","ECXASUR",71,0)
 .S LOC=$S(OR="":2,1:1)
"RTN","ECXASUR",72,0)
 .;tally procedures by location and division
"RTN","ECXASUR",73,0)
 .I '$D(^TMP($J,"ECXAUD",DIV,LOC,CPT)) S ^TMP($J,"ECXAUD",DIV,LOC,CPT)=0_U_PROCN
"RTN","ECXASUR",74,0)
 .S $P(^(CPT),U,1)=$P(^TMP($J,"ECXAUD",DIV,LOC,CPT),U,1)+1,CNT=CNT+1
"RTN","ECXASUR",75,0)
 .I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ Q
"RTN","ECXASUR",76,0)
 .I '$D(^TMP($J,"ECXS",DIV,LOC,CASE)) S ^TMP($J,"ECXS",DIV,LOC,CASE)=""
"RTN","ECXASUR",77,0)
 ;total cases for each division and location
"RTN","ECXASUR",78,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXASUR",79,0)
 S DIV="" F  S DIV=$O(^TMP($J,"ECXS",DIV)) Q:DIV=""  F LOC=1:1:2 S CASES(DIV,LOC)=0,CASE="" D
"RTN","ECXASUR",80,0)
 .F  S CASE=$O(^TMP($J,"ECXS",DIV,LOC,CASE)) Q:CASE=""  S CASES(DIV,LOC)=CASES(DIV,LOC)+1
"RTN","ECXASUR",81,0)
 K ^TMP($J,"ECXS")
"RTN","ECXASUR",82,0)
 ;print the report
"RTN","ECXASUR",83,0)
 D PRINT
"RTN","ECXASUR",84,0)
 D AUDIT^ECXKILL
"RTN","ECXASUR",85,0)
 Q
"RTN","ECXASUR",86,0)
 ;
"RTN","ECXASUR",87,0)
PRINT ;print the SUR audit report by location and division
"RTN","ECXASUR",88,0)
 N LN,PG,QFLG,TOT,GTOT,DIVNM,CPT,CPTN,PROCN,LOCNM,LOCNMC,SS,DIR,DR,DIRUT,DTOUT,DUOUT
"RTN","ECXASUR",89,0)
 U IO
"RTN","ECXASUR",90,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXASUR",91,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXASUR",92,0)
 F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  F LOC=1:1:2 D  Q:QFLG
"RTN","ECXASUR",93,0)
 .S DIVNM=$P(ECXDIV(DIV),U,2)_" ("_DIV_")",GTOT(1)=0,GTOT(2)=0
"RTN","ECXASUR",94,0)
 .S LOCNM=$S(LOC=1:"O.R. Surgical Procedures",1:"Non-O.R. Surgical Procedures")
"RTN","ECXASUR",95,0)
 .D HEADER
"RTN","ECXASUR",96,0)
 .I '$D(^TMP($J,"ECXAUD",DIV,LOC)) D
"RTN","ECXASUR",97,0)
 ..W !!,?3,"No data available for "_LOCNM_".",!!
"RTN","ECXASUR",98,0)
 .I $D(^TMP($J,"ECXAUD",DIV,LOC)) S CPT="" F  S CPT=$O(^TMP($J,"ECXAUD",DIV,LOC,CPT)) Q:CPT=""  S TOT(LOC)=$P(^(CPT),U,1),PROCN=$P(^(CPT),U,2),CPTN=$E(CPT,2,99) D  Q:QFLG
"RTN","ECXASUR",99,0)
 ..S GTOT(LOC)=GTOT(LOC)+TOT(LOC)
"RTN","ECXASUR",100,0)
 ..;write procedure and total
"RTN","ECXASUR",101,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,CPTN,?14,$E(PROCN,1,40),?63,$$RJ^XLFSTR(TOT(LOC),5," ")
"RTN","ECXASUR",102,0)
 .;write the division totals
"RTN","ECXASUR",103,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,$E(LN,1,65)
"RTN","ECXASUR",104,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"For Division "_DIVNM_"--"
"RTN","ECXASUR",105,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,"Total "_LOCNM_":",?63,$$RJ^XLFSTR(GTOT(LOC),5," ")
"RTN","ECXASUR",106,0)
 .S LOCNMC=$P(LOCNM,"Pro",1) S:'$D(CASES(DIV,LOC)) CASES(DIV,LOC)=0
"RTN","ECXASUR",107,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,"Total "_LOCNMC_"Cases:",?63,$$RJ^XLFSTR(CASES(DIV,LOC),5," ")
"RTN","ECXASUR",108,0)
 ;print the audit descriptive narrative
"RTN","ECXASUR",109,0)
 I $E(IOST)'="C" D
"RTN","ECXASUR",110,0)
 .W @IOF S PG=PG+1
"RTN","ECXASUR",111,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXASUR",112,0)
 .W !,"DSS Extract Log #:    "_ECXEXT
"RTN","ECXASUR",113,0)
 .W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXASUR",114,0)
 .W !,"Report Run Date/Time: "_ECXRUN,?68,"Page: ",PG
"RTN","ECXASUR",115,0)
 .W !!,LN,!!
"RTN","ECXASUR",116,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXASUR",117,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXASUR",118,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXASUR",119,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXASUR",120,0)
 Q
"RTN","ECXASUR",121,0)
 ;
"RTN","ECXASUR",122,0)
HEADER ;header and page control
"RTN","ECXASUR",123,0)
 N JJ,SS
"RTN","ECXASUR",124,0)
 I $E(IOST)="C" D
"RTN","ECXASUR",125,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXASUR",126,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXASUR",127,0)
 Q:QFLG
"RTN","ECXASUR",128,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXASUR",129,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXASUR",130,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXASUR",131,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXASUR",132,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXASUR",133,0)
 W !,"Surgery Division:     "_$P(ECXDIV(DIV),U,2)_" ("_DIV_")",?63,"Page: "_PG
"RTN","ECXASUR",134,0)
 W !!,LOCNM
"RTN","ECXASUR",135,0)
 W !,?3,"CPT Code",?14,"Procedure",?63,"# of Procedures"
"RTN","ECXASUR",136,0)
 W !,LN,!
"RTN","ECXASUR",137,0)
 Q
"RTN","ECXATRT")
0^71^B49613527
"RTN","ECXATRT",1,0)
ECXATRT ;ALB/JAP - TRT Extract Audit Report ;Oct 16, 1997
"RTN","ECXATRT",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXATRT",3,0)
 ;
"RTN","ECXATRT",4,0)
EN ;entry point for TRT extract audit report
"RTN","ECXATRT",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR
"RTN","ECXATRT",6,0)
 S ECXERR=0
"RTN","ECXATRT",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXATRT",8,0)
 S ECXHEAD="TRT",ECXAUD=0
"RTN","ECXATRT",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXATRT",10,0)
 ;select extract
"RTN","ECXATRT",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXATRT",12,0)
 Q:ECXERR
"RTN","ECXATRT",13,0)
 ;currently, this extract does not capture divisional data
"RTN","ECXATRT",14,0)
 S ECXALL=1
"RTN","ECXATRT",15,0)
 D TRT^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXATRT",16,0)
 I ECXERR=1 D  Q
"RTN","ECXATRT",17,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXATRT",18,0)
 .D AUDIT^ECXKILL
"RTN","ECXATRT",19,0)
 ;determine output device and queue if requested
"RTN","ECXATRT",20,0)
 W !
"RTN","ECXATRT",21,0)
 S ECXPGM="PROCESS^ECXATRT",ECXDESC="TRT Extract Audit Report"
"RTN","ECXATRT",22,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXATRT",23,0)
 W !
"RTN","ECXATRT",24,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXATRT",25,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXATRT",26,0)
 .W !!,?5,"Try agian later... exiting.",!
"RTN","ECXATRT",27,0)
 .D AUDIT^ECXKILL
"RTN","ECXATRT",28,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXATRT",29,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXATRT",30,0)
 .D PROCESS^ECXATRT
"RTN","ECXATRT",31,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXATRT",32,0)
 D HOME^%ZIS
"RTN","ECXATRT",33,0)
 D AUDIT^ECXKILL
"RTN","ECXATRT",34,0)
 Q
"RTN","ECXATRT",35,0)
 ;
"RTN","ECXATRT",36,0)
PROCESS ;process data in file #727.817
"RTN","ECXATRT",37,0)
 N X,Y,W,DATA,DATE,DIV,IEN,TS,SPEC,FTS,FTSNM,SERV,ECX,QQFLG,CNT,A1,A2,NUM,MN,NEWFTS,NEWSPEC
"RTN","ECXATRT",38,0)
 K ^TMP($J,"ECXAUD"),^TMP($J,"ECXSPEC")
"RTN","ECXATRT",39,0)
 S (QQFLG,CNT)=0
"RTN","ECXATRT",40,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXATRT",41,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXATRT",42,0)
 ;get run date in external format
"RTN","ECXATRT",43,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXATRT",44,0)
 ;set up the specialty array for site/division
"RTN","ECXATRT",45,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXATRT",46,0)
 S DIV="" F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  D
"RTN","ECXATRT",47,0)
 .S DIC="^DIC(42.4,",DR=".01;3",DIQ(0)="E",DIQ="ECX"
"RTN","ECXATRT",48,0)
 .S SPEC="" F  S SPEC=$O(^DIC(42.4,"B",SPEC)) Q:SPEC=""  S TS=$O(^(SPEC,0)) D
"RTN","ECXATRT",49,0)
 ..K ECX S DA=TS D EN^DIQ1
"RTN","ECXATRT",50,0)
 ..S SPEC=$G(ECX(42.4,TS,.01,"E")),SERV=$G(ECX(42.4,TS,3,"E")) S:SERV="" SERV="Unknown"
"RTN","ECXATRT",51,0)
 ..S ^TMP($J,"ECXSPEC",DIV,TS)=0_U_SERV_U_SPEC
"RTN","ECXATRT",52,0)
 ;set up the specialty to facility treating specialty conversion array;
"RTN","ECXATRT",53,0)
 ;determine if active between ecxstart and ecxend;
"RTN","ECXATRT",54,0)
 ;ignore if facility treating specialty not active within date range of report;
"RTN","ECXATRT",55,0)
 S DIC="^DIC(45.7,",DR=".01;1",DIQ(0)="I",DIQ="ECX"
"RTN","ECXATRT",56,0)
 S FTSNM="" F  S FTSNM=$O(^DIC(45.7,"B",FTSNM)) Q:FTSNM=""  S FTS=$O(^(FTSNM,0)) D
"RTN","ECXATRT",57,0)
 .K ECX S DA=FTS D EN^DIQ1
"RTN","ECXATRT",58,0)
 .S FTSNM=$G(ECX(45.7,FTS,.01,"I")),TS=$G(ECX(45.7,FTS,1,"I"))
"RTN","ECXATRT",59,0)
 .Q:TS=""
"RTN","ECXATRT",60,0)
 .S A1=$$ACTIVE^DGACT(45.7,FTS,ECXSTART),A2=$$ACTIVE^DGACT(45.7,FTS,ECXEND)
"RTN","ECXATRT",61,0)
 .Q:A1=0&(A2=0)
"RTN","ECXATRT",62,0)
 .;num(ts) will hold the number of facility treat. specialties associated with this
"RTN","ECXATRT",63,0)
 .;national specialty.
"RTN","ECXATRT",64,0)
 .I '$D(NUM(TS)) S NUM(TS)=0
"RTN","ECXATRT",65,0)
 .S ^TMP($J,"ECXTS",TS,FTS)=FTSNM,^TMP($J,"ECXREVTS",FTS)=TS,NUM(TS)=NUM(TS)+1
"RTN","ECXATRT",66,0)
 ;get extract records in date range
"RTN","ECXATRT",67,0)
 S IEN="" F  S IEN=$O(^ECX(727.817,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXATRT",68,0)
 .S DATA=^ECX(727.817,IEN,0),DATE=$P(DATA,U,9),DIV=$P(DATA,U,4)
"RTN","ECXATRT",69,0)
 .;currently the 4th piece of extract record is always null for trt
"RTN","ECXATRT",70,0)
 .S:DIV="" DIV=1
"RTN","ECXATRT",71,0)
 .;convert free text date to fm internal format date
"RTN","ECXATRT",72,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXATRT",73,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXATRT",74,0)
 .I $D(ECXDIV(DIV)) D
"RTN","ECXATRT",75,0)
 ..;ts is the old specialty, newfts is the new facility treat. spec. for the movement date;
"RTN","ECXATRT",76,0)
 ..;in the future --
"RTN","ECXATRT",77,0)
 ..;after patch #1 and after 'losing primary phys.' field is added to extract for fy99
"RTN","ECXATRT",78,0)
 ..;will be able to get new attending phys., old attend. phys., new primary phys., old primary phys.,
"RTN","ECXATRT",79,0)
 ..;new specialty and old specialty from extract record;
"RTN","ECXATRT",80,0)
 ..;so should be able to distinguish true ts changes from provider-only changes;
"RTN","ECXATRT",81,0)
 ..;although it will still be possible that old and new specialty are the same, but facility
"RTN","ECXATRT",82,0)
 ..;treat. spec. was changed, but we've lost that info in the extract.
"RTN","ECXATRT",83,0)
 ..;
"RTN","ECXATRT",84,0)
 ..;in the meantime will filter out those records which are definitely provider-only changes
"RTN","ECXATRT",85,0)
 ..;these are the records which have losing specialty (ts) with which there is only 1 assoc. facility
"RTN","ECXATRT",86,0)
 ..;treating spec. & the new spec. (newspec) is the same as the losing spec. (ts)
"RTN","ECXATRT",87,0)
 ..;i.e., num(newspec)=1&newspec=ts
"RTN","ECXATRT",88,0)
 ..;
"RTN","ECXATRT",89,0)
 ..S TS=$P(DATA,U,16),MN=$P(DATA,U,13),NEWFTS=$P(^DGPM(MN,0),U,9),NEWSPEC=^TMP($J,"ECXREVTS",NEWFTS)
"RTN","ECXATRT",90,0)
 ..Q:(NUM(TS)=1)&(NEWSPEC=TS)
"RTN","ECXATRT",91,0)
 ..S $P(^(TS),U,1)=$P(^TMP($J,"ECXSPEC",DIV,TS),U,1)+1,CNT=CNT+1
"RTN","ECXATRT",92,0)
 ..I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXATRT",93,0)
 ;after all extract records processed, arrange by service and specialty;
"RTN","ECXATRT",94,0)
 ;total can only be associated with specialty, not facility treating specialty;
"RTN","ECXATRT",95,0)
 ;include specialty only if total loss is non-zero
"RTN","ECXATRT",96,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXATRT",97,0)
 S DIV="" F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  I $D(^TMP($J,"ECXSPEC",DIV)) D
"RTN","ECXATRT",98,0)
 .S TS="" F  S TS=$O(^TMP($J,"ECXSPEC",DIV,TS)) Q:TS=""  D
"RTN","ECXATRT",99,0)
 ..S TOT=+$P(^TMP($J,"ECXSPEC",DIV,TS),U,1) I TOT>0 D
"RTN","ECXATRT",100,0)
 ...S SERV=$P(^(TS),U,2),SPEC=$P(^(TS),U,3)
"RTN","ECXATRT",101,0)
 ...S ^TMP($J,"ECXAUD",DIV,SERV,SPEC)=TOT_U_TS
"RTN","ECXATRT",102,0)
 ;print the report
"RTN","ECXATRT",103,0)
 D PRINT
"RTN","ECXATRT",104,0)
 D AUDIT^ECXKILL
"RTN","ECXATRT",105,0)
 Q
"RTN","ECXATRT",106,0)
 ;
"RTN","ECXATRT",107,0)
PRINT ;print trt data by site, by service, by specialty
"RTN","ECXATRT",108,0)
 N JJ,SS,LN,P,DIV,DIVNM,GTOT,SVCTOT,PG,QFLG,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXATRT",109,0)
 U IO
"RTN","ECXATRT",110,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXATRT",111,0)
 S (QFLG,PG)=0,$P(LN,"-",80)=""
"RTN","ECXATRT",112,0)
 ;division associated with the treat. spec. change is not actually known; division is dss site
"RTN","ECXATRT",113,0)
 S DIV="" S DIV=$O(ECXDIV(DIV)) Q:DIV=""  S GTOT=0
"RTN","ECXATRT",114,0)
 D HEADER
"RTN","ECXATRT",115,0)
 I '$D(^TMP($J,"ECXAUD",DIV)) D  Q
"RTN","ECXATRT",116,0)
 .W !!,?5,"No data available for this DSS Site.",!!
"RTN","ECXATRT",117,0)
 I $D(^TMP($J,"ECXAUD",DIV)) S SERV="" F  S SERV=$O(^TMP($J,"ECXAUD",DIV,SERV)) Q:SERV=""  D  Q:QFLG
"RTN","ECXATRT",118,0)
 .S SVCTOT=0
"RTN","ECXATRT",119,0)
 .;write the service name
"RTN","ECXATRT",120,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,SERV
"RTN","ECXATRT",121,0)
 .S SPEC="" F  S SPEC=$O(^TMP($J,"ECXAUD",DIV,SERV,SPEC)) Q:SPEC=""  D  Q:QFLG
"RTN","ECXATRT",122,0)
 ..;write the specialty name and total
"RTN","ECXATRT",123,0)
 ..S TOT=$P(^TMP($J,"ECXAUD",DIV,SERV,SPEC),U,1),TS=$P(^(SPEC),U,2)
"RTN","ECXATRT",124,0)
 ..W ?22,$E(SPEC,1,30)_" ("_TS_")",?68,$$RJ^XLFSTR(TOT,5," "),!
"RTN","ECXATRT",125,0)
 ..S SVCTOT=SVCTOT+TOT,GTOT=GTOT+TOT
"RTN","ECXATRT",126,0)
 ..S FTS="" F  S FTS=$O(^TMP($J,"ECXTS",TS,FTS)) Q:FTS=""  D  Q:QFLG
"RTN","ECXATRT",127,0)
 ...S FTSNM=^TMP($J,"ECXTS",TS,FTS)
"RTN","ECXATRT",128,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG  W ?25,$E(FTSNM,1,30),!
"RTN","ECXATRT",129,0)
 .;write the service subtotal
"RTN","ECXATRT",130,0)
 .Q:QFLG
"RTN","ECXATRT",131,0)
 .W ?22,$E(LN,1,54),!
"RTN","ECXATRT",132,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W "Total for "_SERV_":",?68,$$RJ^XLFSTR(SVCTOT,5," "),!
"RTN","ECXATRT",133,0)
 ;write the grandtotal for all services at facility
"RTN","ECXATRT",134,0)
 D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Grand Total for all Services:",?68,$$RJ^XLFSTR(GTOT,5," ")
"RTN","ECXATRT",135,0)
 ;print the audit descriptive narrative
"RTN","ECXATRT",136,0)
 I $E(IOST)'="C" D
"RTN","ECXATRT",137,0)
 .W @IOF S PG=PG+1
"RTN","ECXATRT",138,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXATRT",139,0)
 .W !,"DSS Extract Log #:    "_ECXEXT
"RTN","ECXATRT",140,0)
 .W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXATRT",141,0)
 .W !,"Report Run Date/Time: "_ECXRUN,?68,"Page: ",PG
"RTN","ECXATRT",142,0)
 .W !!,LN,!!
"RTN","ECXATRT",143,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXATRT",144,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXATRT",145,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXATRT",146,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXATRT",147,0)
 Q
"RTN","ECXATRT",148,0)
 ;
"RTN","ECXATRT",149,0)
HEADER ;header and page control
"RTN","ECXATRT",150,0)
 N JJ,SS
"RTN","ECXATRT",151,0)
 I $E(IOST)="C" D
"RTN","ECXATRT",152,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXATRT",153,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXATRT",154,0)
 Q:QFLG
"RTN","ECXATRT",155,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXATRT",156,0)
 ;W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXATRT",157,0)
 W !,"Treating Specialty Change"_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXATRT",158,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXATRT",159,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXATRT",160,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXATRT",161,0)
 W !,"DSS Site:             "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")",?68,"Page: "_PG
"RTN","ECXATRT",162,0)
 W !!,"Service",?22,"Specialty (DSS Code)",?68,"# of Losses"
"RTN","ECXATRT",163,0)
 W !,?25,"Facility Treating Specialty"
"RTN","ECXATRT",164,0)
 W !,LN,!
"RTN","ECXATRT",165,0)
 Q
"RTN","ECXDEFIN")
0^3^B9251189
"RTN","ECXDEFIN",1,0)
ECXDEFIN ;BIR/DMA-Define Extract Formats for Auto Queuing ; 17 Mar 95 / 9:55 AM
"RTN","ECXDEFIN",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXDEFIN",3,0)
EN ;entry point from option
"RTN","ECXDEFIN",4,0)
 S DIC="727.1",DIC(0)="AEQLMZ",ECF=0 D ^DIC G QUIT:Y<0 S (DA,ECDA)=+Y,ECDATA=Y(0),ECROU=^ECX(727.1,ECDA,"ROU"),X="SETUP^"_ECROU D @X
"RTN","ECXDEFIN",5,0)
 I '$P(ECDATA,"^",6) G EDIT
"RTN","ECXDEFIN",6,0)
 F J=0:1 S X=$P($T(WARN+J),";",3,300) Q:X=""  W !,?5,X
"RTN","ECXDEFIN",7,0)
 S DIR(0)="Y",DIR("A")="Do you really want to procede?",DIR("B")="N" D ^DIR K DIR I 'Y G QUIT
"RTN","ECXDEFIN",8,0)
EDIT ;
"RTN","ECXDEFIN",9,0)
 S DR="2;S ECF=X S:X=""M"" Y="""";3;S ECOS=X;",DIE=DIC D ^DIE
"RTN","ECXDEFIN",10,0)
QUEUE S DIR(0)="Y",DIR("B")="N",DIR("A")="Do you wish to queue this extract to run at this time?" D ^DIR K DIR I 'Y G QUIT
"RTN","ECXDEFIN",11,0)
 S %DT="AEXR",%DT(0)=$$NOW^XLFDT+.0002,%DT("A")="Queue to run at what time?  " D ^%DT K %DT S ECD=Y I ECD<0 G QUIT
"RTN","ECXDEFIN",12,0)
 I ECF="M",$E(ECD,6,7)>28 W !!,"Monthly extracts must be queued for a date not greater than the 28th.",!! G QUEUE
"RTN","ECXDEFIN",13,0)
 S ECLDT=$P($G(^ECX(728,1,7)),"^",ECPIECE) I ECLDT D  G QUIT:'Y
"RTN","ECXDEFIN",14,0)
 .I ECF="M" S ECFDT=$E(ECD,1,5)-1-($E(ECD,4,5)="01"*88)_"01"
"RTN","ECXDEFIN",15,0)
 .E  S ECFDT=$$FMADD^XLFDT($P(ECD,"."),-ECOS-(ECF="W"*6))
"RTN","ECXDEFIN",16,0)
 .S ECDIF=$$FMDIFF^XLFDT(ECLDT,ECFDT) I ECDIF=-1 S Y=1 Q
"RTN","ECXDEFIN",17,0)
 .W !,"The last date for this extract was ",$$FMTE^XLFDT(ECLDT),!,"The first proposed date for this extract is ",$$FMTE^XLFDT(ECFDT)
"RTN","ECXDEFIN",18,0)
 .I ECDIF<-1 W !!,"Data for the dates in between will be lost.",!!
"RTN","ECXDEFIN",19,0)
 .I ECDIF>-1 W !!,"Data for the overlapping dates may be duplicated",!!
"RTN","ECXDEFIN",20,0)
 .S DIR(0)="Y",DIR("A")="DO you wish to procede? ",DIR("B")="N" D ^DIR K DIR
"RTN","ECXDEFIN",21,0)
 S DIR(0)="Y",DIR("A")="Is everything OK?" D ^DIR K DIR G QUIT:$D(DIRUT),ECXDEFIN:'Y
"RTN","ECXDEFIN",22,0)
 S ZTRTN="QUE^"_ECROU,ZTDESC=ECPACK_" EXTRACT",ZTIO="",ZTDTH=ECD
"RTN","ECXDEFIN",23,0)
 D ^%ZTLOAD S $P(^ECX(727.1,ECDA,0),"^",6)=1
"RTN","ECXDEFIN",24,0)
 G ^ECXDEFIN
"RTN","ECXDEFIN",25,0)
 ;
"RTN","ECXDEFIN",26,0)
QUIT K DA,DIC,DIE,DIRUT,DR,ECD,ECDA,ECDATA,ECF,ECFDT,ECFILE,ECGRP,ECHEAD,ECLDT,ECOS,ECPIECE,ECPACK,ECROU,J,X,Y,ZTDESC,ZTIO,ZTRTN Q
"RTN","ECXDEFIN",27,0)
 ;
"RTN","ECXDEFIN",28,0)
WARN ;;This extract has already been queued to run.  If you make changes
"RTN","ECXDEFIN",29,0)
 ;;now, there is a possibility that data for a particular date range
"RTN","ECXDEFIN",30,0)
 ;;may be omitted from the extract and not transmitted to TSI.
"RTN","ECXDEFIN",31,0)
 ;; 
"RTN","ECXDEFIN",32,0)
 ;;Before continuing, you should very carefully review the extract
"RTN","ECXDEFIN",33,0)
 ;;history for this extract.  You should also verify that this
"RTN","ECXDEFIN",34,0)
 ;;extract is not currently queued to run in the future.
"RTN","ECXDEFIN",35,0)
 ;; 
"RTN","ECXDEFIN",36,0)
 ;; 
"RTN","ECXDEFIN",37,0)
 ;;
"RTN","ECXDENT")
0^4^B7839886
"RTN","ECXDENT",1,0)
ECXDENT ;BIR/DMA,PTD-Dental Extract for DSS ; [ 11/22/96  5:23 PM ]
"RTN","ECXDENT",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXDENT",3,0)
BEG ;entry point from option
"RTN","ECXDENT",4,0)
 D SETUP,^ECXTRAC,^ECXKILL Q
"RTN","ECXDENT",5,0)
 ;
"RTN","ECXDENT",6,0)
START ;start package specific extract
"RTN","ECXDENT",7,0)
 S QFLG=0
"RTN","ECXDENT",8,0)
 K ECXDD D FIELD^DID(220.5,.01,,"SPECIFIER","ECXDD") S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXDENT",9,0)
 S ECED=ECED+.3
"RTN","ECXDENT",10,0)
 S ECD=ECSD1 F  S ECD=$O(^DENT(221,"B",ECD)),J=0 Q:'ECD  Q:ECD>ECED  F  S J=$O(^DENT(221,"B",ECD,J)) Q:'J  I $D(^DENT(221,J,0)) S DATA=^(0),$P(DATA,"^",50)="" D STUFF Q:QFLG
"RTN","ECXDENT",11,0)
 Q
"RTN","ECXDENT",12,0)
 ;
"RTN","ECXDENT",13,0)
STUFF S DFN=+$P(DATA,"^",4) Q:'$D(^DPT(DFN,0))  S ECP=^(0),SSN=$P(ECP,"^",9),ECNA=$E($P($P(ECP,"^"),",")_"    ",1,4) D INP
"RTN","ECXDENT",14,0)
 S ECDEN=$P(DATA,"^",3),ECDEN=$P($G(^DENT(220.5,ECDEN,0)),"^")
"RTN","ECXDENT",15,0)
 I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXDENT",16,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(DFN,ECD) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(DFN,ECD) S:ECPTPR=0 ECPTPR=""
"RTN","ECXDENT",17,0)
 I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXDENT",18,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(DFN) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(DFN) S:ECPTPR=0 ECPTPR=""
"RTN","ECXDENT",19,0)
 S ECODE=$P(DATA,"^",40)_"^"_DFN_"^"_SSN_"^"_ECNA_"^"_ECA_"^"_$$ECXDATE^ECXUTL($P(DATA,"^"),ECXYM)_"^"_ECPRO_ECDEN_"^"_$P(DATA,"^",7,9)_"^"_$P(DATA,"^",11,20)_"^"_$P(DATA,"^",22,38)_"^"_$P(DATA,"^",40,45)_"^"_ECMN_"^"_ECTS
"RTN","ECXDENT",20,0)
 S ECODE=ECODE_"^"_ECPTTM_"^"_ECPTPR_"^"_$$ECXTIME^ECXUTL($P(DATA,"^"))_"^"
"RTN","ECXDENT",21,0)
 ;inst^dfn^ssn^name^in/out^day^provider^screen/complete^admin proc^x-rays ex^x-rays int^prophy natural^prophy denture^op room^neoplasm malig^
"RTN","ECXDENT",22,0)
 ;neoplasm removed^biopsy/smear^fracture^pat category^other sig surg^surface restored^root canal^periodontal quads (surg)^perio quads (root plane)^
"RTN","ECXDENT",23,0)
 ;patient ed^spot check exam^indiv crowns^posts & cores^fixed partials (abut)^fixed partials (pont)^removable partials^complete dentures^prosthetic repair^
"RTN","ECXDENT",24,0)
 ;splints & spec procs^extractions^surg extractions^other sig treatment^div^completion/termination^interdisc consult^evaluation^pre-auth 2nd opinion^
"RTN","ECXDENT",25,0)
 ;spot check discrepancy^mov #^treat spec^primary care team^primary care provider^time
"RTN","ECXDENT",26,0)
 S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXDENT",27,0)
 S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXDENT",28,0)
 I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXDENT",29,0)
 Q
"RTN","ECXDENT",30,0)
 ;
"RTN","ECXDENT",31,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXDENT",32,0)
 S ECPACK="Dental",ECPIECE=9,ECRTN="START^ECXDENT",ECGRP="DENT",ECHEAD="DEN",ECFILE=727.806,ECVER=7
"RTN","ECXDENT",33,0)
 Q
"RTN","ECXDENT",34,0)
INP ; checks for in/outpatient status and gets movement number
"RTN","ECXDENT",35,0)
 S ECA=1,ECTS="" K VAIP S VAIP("D")=ECD D IN5^VADPT S ECMN=VAIP(1) I ECMN S ECA=3,ECTS=$P($G(^DIC(45.7,+VAIP(8),0)),"^",2)
"RTN","ECXDENT",36,0)
 K VAIP,VAERR
"RTN","ECXDENT",37,0)
 Q
"RTN","ECXDENT",38,0)
 ;
"RTN","ECXDENT",39,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXDENT",40,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXDIVIV")
0^5^B8847174
"RTN","ECXDIVIV",1,0)
ECXDIVIV ;BIR/CML-Enter/Edit and Print IV Room Division ; [ 11/15/96  11:12 AM ]
"RTN","ECXDIVIV",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXDIVIV",3,0)
 ;
"RTN","ECXDIVIV",4,0)
ED ;enter/edit DIVISION field for IV Rooms
"RTN","ECXDIVIV",5,0)
 W !!,"This option allows editing of the DIVISION field for IV Rooms.",!
"RTN","ECXDIVIV",6,0)
 S CHKFLG=0 D CHK^ECXTRAC G:CHKFLG END
"RTN","ECXDIVIV",7,0)
EDIT ;
"RTN","ECXDIVIV",8,0)
 W ! S DIC=59.5,DIC(0)="QEAMZ" D ^DIC G:Y<0 END K DIC S DIE=59.5,DA=+Y
"RTN","ECXDIVIV",9,0)
 I $G(^PS(59.5,+Y,"I"))]"" W "   *INACTIVE*",$C(7)
"RTN","ECXDIVIV",10,0)
 S DR=.02 D ^DIE K DIE,DA G EDIT
"RTN","ECXDIVIV",11,0)
END K CHKFLG,DIC,DIE,DA,DR Q
"RTN","ECXDIVIV",12,0)
PRT ;Print Worksheet
"RTN","ECXDIVIV",13,0)
 W !!,"This option will produce a worksheet listing all entries in the IV Room file",!,"(#59.5).  It should be used to help DSS and Pharmacy services define and"
"RTN","ECXDIVIV",14,0)
 W !,"review the DIVISION assignments for each IV Room.",!! S QFLG=0
"RTN","ECXDIVIV",15,0)
 S CHKFLG=0 D CHK^ECXTRAC G:CHKFLG QUIT
"RTN","ECXDIVIV",16,0)
DEV ;
"RTN","ECXDIVIV",17,0)
 D EN^XUTMDEVQ("START^ECXDIVIV","DSS - IV Room List") I 'POP Q
"RTN","ECXDIVIV",18,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","ECXDIVIV",19,0)
 G QUIT
"RTN","ECXDIVIV",20,0)
 ;
"RTN","ECXDIVIV",21,0)
START ;queued entry point
"RTN","ECXDIVIV",22,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXDIVIV",23,0)
 K ^TMP("ECXDIVIV",$J) S QFLG=0
"RTN","ECXDIVIV",24,0)
 S IV=0 F  S IV=$O(^PS(59.5,IV)) Q:'IV  I $D(^PS(59.5,IV,0)) D
"RTN","ECXDIVIV",25,0)
 .S IVRM=$E($P(^PS(59.5,IV,0),"^"),1,30),DIV=$P(^(0),"^",4)
"RTN","ECXDIVIV",26,0)
 .S DIVNM=$S(DIV="":"ZZZ",1:$E($P(^DG(40.8,DIV,0),"^"),1,30))
"RTN","ECXDIVIV",27,0)
 .K INACT I $P($G(^PS(59.5,IV,"I")),"^")]"" S INACT=$$FMTE^XLFDT($P(^PS(59.5,IV,"I"),"^"),1)
"RTN","ECXDIVIV",28,0)
 .S ^TMP("ECXDIVIV",$J,DIVNM,IVRM)=$S($D(INACT):INACT,1:"")
"RTN","ECXDIVIV",29,0)
WRT ; Start print
"RTN","ECXDIVIV",30,0)
 S PG=0,PDT=$$FMTE^XLFDT(DT),$P(LN1,"-",81)="",$P(LN2,"_",30)=""
"RTN","ECXDIVIV",31,0)
 D HDR
"RTN","ECXDIVIV",32,0)
 I '$D(^TMP("ECXDIVIV",$J)) W !!,"No Data found for this worksheet." G QUIT
"RTN","ECXDIVIV",33,0)
 S DIVNM="" F  S DIVNM=$O(^TMP("ECXDIVIV",$J,DIVNM)) Q:DIVNM=""  Q:QFLG  S IVRM="" F  S IVRM=$O(^TMP("ECXDIVIV",$J,DIVNM,IVRM)) Q:IVRM=""  Q:QFLG  D
"RTN","ECXDIVIV",34,0)
 .S INACT=^TMP("ECXDIVIV",$J,DIVNM,IVRM)
"RTN","ECXDIVIV",35,0)
 .D:$Y+4>IOSL HDR Q:QFLG  W !!,IVRM,?34 W $S(DIVNM="ZZZ":LN2,1:DIVNM) W ?67,INACT
"RTN","ECXDIVIV",36,0)
QUIT ;
"RTN","ECXDIVIV",37,0)
 I $E(IOST)="C"&('QFLG)&($D(^TMP("ECXDIVIV",$J))) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECXDIVIV",38,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXDIVIV",39,0)
 K ^TMP("ECXDIVIV",$J),CHKFLG,DIV,DIVNM,INACT,IV,IVRM,JJ,LN1,LN2,PDT,PG,QFLG,SS,X,Y
"RTN","ECXDIVIV",40,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","ECXDIVIV",41,0)
HDR ;
"RTN","ECXDIVIV",42,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXDIVIV",43,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXDIVIV",44,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"IV Room Worksheet",?72,"Page: ",PG,!,"Printed ",PDT,!!,"IV ROOM",?43,"DIVISION",?66,"INACTIVE DATE",!,LN1
"RTN","ECXDIVIV",45,0)
 Q
"RTN","ECXDRUG")
0^6^B5218330
"RTN","ECXDRUG",1,0)
ECXDRUG ;BIR/DMA-Report of Drugs Missing Class or NDC ; 17 Jan 95 / 3:17 PM
"RTN","ECXDRUG",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXDRUG",3,0)
 W @IOF,!!,"This routine will generate a list of drugs missing either VA Class or NDC.",!,"These two elements make up the feeder key for your drug products,",!,"and should be entered.",!!,"Note - supply items may not have an NDC",!!
"RTN","ECXDRUG",4,0)
 S %ZIS="Q" D ^%ZIS K %ZIS Q:POP
"RTN","ECXDRUG",5,0)
 I $D(IO("Q")) S ZTRTN="EN^ECXDRUG",ZTDESC="Report of drugs missing class or NDC" D ^%ZTLOAD,^%ZISC Q
"RTN","ECXDRUG",6,0)
 ;
"RTN","ECXDRUG",7,0)
EN ;entry point
"RTN","ECXDRUG",8,0)
 D HEAD
"RTN","ECXDRUG",9,0)
 S DR="" F  S DR=$O(^PSDRUG("B",DR)) Q:DR=""  Q:$D(ECQ)  F J=0:0 S J=$O(^PSDRUG("B",DR,J)) Q:'J  Q:$D(ECQ)  S A=$G(^PSDRUG(J,0)),B=$G(^(2)) I $P(A,"^",2)=""!($P(A,"^",3)["S")!($P(B,"^",4)="") D  I $Y+5>IOSL D HEAD
"RTN","ECXDRUG",10,0)
 .W !,?5,$P(A,"^") W:$P(A,"^",2)="" ?50,"YES" W:$P(B,"^",4)="" ?60,"YES" W:$P(A,"^",3)["S" ?70,"YES"
"RTN","ECXDRUG",11,0)
OUT D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" K DR,J,A,B,ECQ,DIR,DIRUT Q
"RTN","ECXDRUG",12,0)
HEAD I IOST["C-" S DIR(0)="E" D ^DIR I 'Y S ECQ=1 Q
"RTN","ECXDRUG",13,0)
 W:$Y @IOF W !,?25,"DRUG NAME",?48,"MISSING",?58,"MISSING",?68,"SUPPLY",!,?49,"CLASS",?60,"NDC",?69,"ITEM",! Q
"RTN","ECXDRUG",14,0)
 ;
"RTN","ECXDVSN")
0^73^B42384973
"RTN","ECXDVSN",1,0)
ECXDVSN ;ALB/JAP - Division selection utility ;Sep 29, 1997
"RTN","ECXDVSN",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXDVSN",3,0)
 ;
"RTN","ECXDVSN",4,0)
ADM(ECXDIV,ECXALL,ECXSTART,ECXEND,ECXERR) ;division information for ADM extract audit report
"RTN","ECXDVSN",5,0)
 ;selected divisions from medical center division file (#40.8)
"RTN","ECXDVSN",6,0)
 ;   input
"RTN","ECXDVSN",7,0)
 ;   ECXDIV = array of divisions selected (required)
"RTN","ECXDVSN",8,0)
 ;            passed by reference array containing
"RTN","ECXDVSN",9,0)
 ;            selected divisions;
"RTN","ECXDVSN",10,0)
 ;   ECXALL = 1/0 (optional)
"RTN","ECXDVSN",11,0)
 ;            1==> user wants all divisions OR
"RTN","ECXDVSN",12,0)
 ;                 facility is non-divisional
"RTN","ECXDVSN",13,0)
 ;            0==> user wants to select some divisions
"RTN","ECXDVSN",14,0)
 ;            if ECXALL not defined, then assume 1
"RTN","ECXDVSN",15,0)
 ;   ECXSTART = start date of date range (optional)
"RTN","ECXDVSN",16,0)
 ;   ECXEND   = end date of date range (optional)
"RTN","ECXDVSN",17,0)
 ;   ECXERR   = passed by reference for error return (required)
"RTN","ECXDVSN",18,0)
 ;   output
"RTN","ECXDVSN",19,0)
 ;   ECXDIV = array of divisions selected from file #40.8;
"RTN","ECXDVSN",20,0)
 ;            if ECXALL=1, then array contains all divisions 
"RTN","ECXDVSN",21,0)
 ;            if ECXALL=0, then array contains user-selected divisions
"RTN","ECXDVSN",22,0)
 ;    ECXDIV(ien in file #40.8) = ien in file #4^name^station number^primary indicator^active indicator
"RTN","ECXDVSN",23,0)
 ;   error CODE
"RTN","ECXDVSN",24,0)
 ;   ECXERR   = 1, if input problem occurs
"RTN","ECXDVSN",25,0)
 ;              0, otherwise
"RTN","ECXDVSN",26,0)
 ;
"RTN","ECXDVSN",27,0)
 N OUT,DIC,X,Y,ACTIVE,NM,ECXD,ECXIEN,ECXDIEN,ECXNAME,ECXNUM
"RTN","ECXDVSN",28,0)
 S (OUT,ECXERR)=0
"RTN","ECXDVSN",29,0)
 ;if start date or end date missing, then both default to today
"RTN","ECXDVSN",30,0)
 I '$G(ECXSTART)!('$G(ECXEND)) S (ECXSTART,ECXEND)=DT
"RTN","ECXDVSN",31,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN",32,0)
 I ECXALL=1 D
"RTN","ECXDVSN",33,0)
 .S NM="" F  S NM=$O(^DG(40.8,"B",NM)) Q:NM=""  S ECXIEN=$O(^(NM,"")) D
"RTN","ECXDVSN",34,0)
 ..Q:+$P(^DG(40.8,ECXIEN,0),U,3)=1
"RTN","ECXDVSN",35,0)
 ..K Y S DIC="^DG(40.8,",DIC(0)="NZ",X=ECXIEN D ^DIC
"RTN","ECXDVSN",36,0)
 ..Q:Y=-1
"RTN","ECXDVSN",37,0)
 ..S ECXNAME=$P(Y(0),U,1),ECXNUM=$P(Y(0),U,2),ECXDIEN=$P(Y(0),U,7)
"RTN","ECXDVSN",38,0)
 ..S ECXDIV(ECXIEN)=ECXDIEN_U_ECXNAME_U_ECXNUM
"RTN","ECXDVSN",39,0)
 ..S ACTIVE=$$ACTDIV(.ECXD)
"RTN","ECXDVSN",40,0)
 ..S ECXDIV(ECXIEN)=ECXDIV(ECXIEN)_U_ECXD_U_ACTIVE
"RTN","ECXDVSN",41,0)
 I ECXALL=0 F  Q:OUT!ECXERR  D
"RTN","ECXDVSN",42,0)
 .K Y S DIC="^DG(40.8,",DIC(0)="AEMQZ",DIC("S")="I $P(^(0),U,3)'=1"
"RTN","ECXDVSN",43,0)
 .D ^DIC I $G(DUOUT)!($G(DTOUT)) S OUT=1,ECXERR=1 Q
"RTN","ECXDVSN",44,0)
 .I Y=-1,X="" S OUT=1 Q
"RTN","ECXDVSN",45,0)
 .S ECXIEN=+Y,ECXNAME=$P(Y(0),U,1),ECXNUM=$P(Y(0),U,2),ECXDIEN=$P(Y(0),U,7)
"RTN","ECXDVSN",46,0)
 .S ECXDIV(ECXIEN)=ECXDIEN_U_ECXNAME_U_ECXNUM
"RTN","ECXDVSN",47,0)
 .S ACTIVE=$$ACTDIV(.ECXD)
"RTN","ECXDVSN",48,0)
 .S ECXDIV(ECXIEN)=ECXDIV(ECXIEN)_U_ECXD_U_ACTIVE
"RTN","ECXDVSN",49,0)
 .I 'ACTIVE W !!,?5,"Please note: Division "_ECXNUM_" was not active during",!,?5,"             selected date range.",!
"RTN","ECXDVSN",50,0)
 ;in case of user up-arrow out or timeout, make sure nothing returned in ecxdiv
"RTN","ECXDVSN",51,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN",52,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN",53,0)
 Q
"RTN","ECXDVSN",54,0)
 ;
"RTN","ECXDVSN",55,0)
ACTDIV(ECXD) ;determine if division active at anytime during date range
"RTN","ECXDVSN",56,0)
 ;to be called only by ADM^ECXDVSN
"RTN","ECXDVSN",57,0)
 ;   output
"RTN","ECXDVSN",58,0)
 ;   ECXD   = 1/0
"RTN","ECXDVSN",59,0)
 ;            1 indicates primary division
"RTN","ECXDVSN",60,0)
 ;   returns
"RTN","ECXDVSN",61,0)
 ;   ACTIVE = 1/0
"RTN","ECXDVSN",62,0)
 ;            returns 0, if division not active during date range;
"RTN","ECXDVSN",63,0)
 ;            note: only start date and end date are checked; if division
"RTN","ECXDVSN",64,0)
 ;                  inactive on both dates, then division assumed inactive
"RTN","ECXDVSN",65,0)
 ;                  for entire date range
"RTN","ECXDVSN",66,0)
 N ACTIVE,DATE,ECXDATE
"RTN","ECXDVSN",67,0)
 ;assume division active; set active=1
"RTN","ECXDVSN",68,0)
 S ACTIVE=1
"RTN","ECXDVSN",69,0)
 ;check if division active on start date or end date;
"RTN","ECXDVSN",70,0)
 ;these dates are normally within the same month
"RTN","ECXDVSN",71,0)
 F ECXDATE=ECXSTART,ECXEND D
"RTN","ECXDVSN",72,0)
 .S DATE(ECXDATE)=$$SITE^VASITE(ECXDATE,ECXIEN)
"RTN","ECXDVSN",73,0)
 .S ECXD=0
"RTN","ECXDVSN",74,0)
 .I ECXIEN=$$PRIM^VASITE(ECXDATE) S ECXD=1
"RTN","ECXDVSN",75,0)
 ;if not active on start date and not active on end date, reset active=0
"RTN","ECXDVSN",76,0)
 I DATE(ECXSTART)=-1,DATE(ECXEND)=-1 S ACTIVE=0 Q ACTIVE
"RTN","ECXDVSN",77,0)
 Q ACTIVE
"RTN","ECXDVSN",78,0)
 ;
"RTN","ECXDVSN",79,0)
MOV(ECXDIV,ECXALL,ECXSTART,ECXEND,ECXERR) ;division information for MOV extract audit report 
"RTN","ECXDVSN",80,0)
 ;selected divisions from medical center division file (#40.8)
"RTN","ECXDVSN",81,0)
 ;   input
"RTN","ECXDVSN",82,0)
 ;   ECXDIV = array of divisions selected (required)
"RTN","ECXDVSN",83,0)
 ;            passed by reference array containing
"RTN","ECXDVSN",84,0)
 ;            selected divisions;
"RTN","ECXDVSN",85,0)
 ;   ECXALL = 1/0 (optional)
"RTN","ECXDVSN",86,0)
 ;            1==> user wants all divisions OR
"RTN","ECXDVSN",87,0)
 ;                 facility is non-divisional
"RTN","ECXDVSN",88,0)
 ;            0==> user wants to select some divisions
"RTN","ECXDVSN",89,0)
 ;            if ECXALL not defined, then assume 1
"RTN","ECXDVSN",90,0)
 ;   ECXSTART = start date of date range (optional)
"RTN","ECXDVSN",91,0)
 ;   ECXEND   = end date of date range (optional)
"RTN","ECXDVSN",92,0)
 ;   ECXERR   = passed by reference for error return (required)
"RTN","ECXDVSN",93,0)
 ;   output
"RTN","ECXDVSN",94,0)
 ;   ECXDIV = array of divisions selected from file #40.8;
"RTN","ECXDVSN",95,0)
 ;            if ECXALL=1, then array contains all divisions 
"RTN","ECXDVSN",96,0)
 ;            if ECXALL=0, then array contains user-selected divisions
"RTN","ECXDVSN",97,0)
 ;   error CODE
"RTN","ECXDVSN",98,0)
 ;   ECXERR   = 1, if input problem occurs
"RTN","ECXDVSN",99,0)
 ;              0, otherwise
"RTN","ECXDVSN",100,0)
 ;
"RTN","ECXDVSN",101,0)
 D ADM^ECXDVSN(.ECXDIV,ECXALL,ECXSTART,ECXEND,.ECXERR)
"RTN","ECXDVSN",102,0)
 Q
"RTN","ECXDVSN",103,0)
 ;
"RTN","ECXDVSN",104,0)
PAS(ECXDIV,ECXALL,ECXERR) ;setup division/site information for PAS extract audit report
"RTN","ECXDVSN",105,0)
 ;   input
"RTN","ECXDVSN",106,0)
 ;   ECXDIV = passed by reference array variable
"RTN","ECXDVSN",107,0)
 ;   ECXALL = 1
"RTN","ECXDVSN",108,0)
 ;   output
"RTN","ECXDVSN",109,0)
 ;   ECXDIV = data for default division/site;
"RTN","ECXDVSN",110,0)
 ;            ECXDIV(1)=ien in file #4^name^station number
"RTN","ECXDVSN",111,0)
 ;            where the INSTITUTION file pointer is obtained from file #728
"RTN","ECXDVSN",112,0)
 ;
"RTN","ECXDVSN",113,0)
 S ECXALL=1 D DEFAULT^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXDVSN",114,0)
 Q
"RTN","ECXDVSN",115,0)
 ;
"RTN","ECXDVSN",116,0)
TRT(ECXDIV,ECXALL,ECXERR) ;setup division/site information for TRT extract audit report
"RTN","ECXDVSN",117,0)
 ;   input
"RTN","ECXDVSN",118,0)
 ;   ECXDIV = passed by reference array variable
"RTN","ECXDVSN",119,0)
 ;   ECXALL = 1
"RTN","ECXDVSN",120,0)
 ;   output
"RTN","ECXDVSN",121,0)
 ;   ECXDIV = data for default division/site;
"RTN","ECXDVSN",122,0)
 ;            ECXDIV(1)=ien in file #4^name^station number
"RTN","ECXDVSN",123,0)
 ;            where the INSTITUTION file pointer is obtained from file #728
"RTN","ECXDVSN",124,0)
 ;
"RTN","ECXDVSN",125,0)
 S ECXALL=1 D DEFAULT^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXDVSN",126,0)
 Q
"RTN","ECXDVSN",127,0)
 ;
"RTN","ECXDVSN",128,0)
DEFAULT(ECXDIV,ECXALL,ECXERR) ;default division/site information for audit report
"RTN","ECXDVSN",129,0)
 ;   input
"RTN","ECXDVSN",130,0)
 ;   ECXDIV = passed by reference array variable
"RTN","ECXDVSN",131,0)
 ;   ECXALL = 1
"RTN","ECXDVSN",132,0)
 ;   output
"RTN","ECXDVSN",133,0)
 ;   ECXDIV = data for default division/site;
"RTN","ECXDVSN",134,0)
 ;            ECXDIV(1)=ien in file #4^name^station number
"RTN","ECXDVSN",135,0)
 ;            where the INSTITUTION file pointer is obtained from file #728
"RTN","ECXDVSN",136,0)
 ;
"RTN","ECXDVSN",137,0)
 N DIV,ECX
"RTN","ECXDVSN",138,0)
 S ECXERR=0
"RTN","ECXDVSN",139,0)
 S DIV=$P($G(^ECX(728,1,0)),U,1)
"RTN","ECXDVSN",140,0)
 I DIV="" S ECXERR=1 Q
"RTN","ECXDVSN",141,0)
 K ECX S DIC="^DIC(4,",DIQ(0)="I",DIQ="ECX",DA=DIV,DR=".01;99" D EN^DIQ1
"RTN","ECXDVSN",142,0)
 I $D(ECX) S ECXDIV(1)=DIV_"^"_ECX(4,DIV,.01,"I")_"^"_ECX(4,DIV,99,"I")
"RTN","ECXDVSN",143,0)
 I '$D(ECX) S ECXERR=1
"RTN","ECXDVSN",144,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN",145,0)
 Q
"RTN","ECXDVSN",146,0)
 ;
"RTN","ECXDVSN",147,0)
DEN(ECXDIV,ECXALL,ECXERR) ;setup division/site information for DEN extract audit report
"RTN","ECXDVSN",148,0)
 ;   input
"RTN","ECXDVSN",149,0)
 ;   ECXDIV = passed by reference array variable (required)
"RTN","ECXDVSN",150,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN",151,0)
 ;            '0' indicates user to select dental division;
"RTN","ECXDVSN",152,0)
 ;            '1' indicates 'all' dental divisions or only one division
"RTN","ECXDVSN",153,0)
 ;                exists in file #225; default is '1'
"RTN","ECXDVSN",154,0)
 ;   output
"RTN","ECXDVSN",155,0)
 ;   ECXDIV = data for dental division/site;
"RTN","ECXDVSN",156,0)
 ;            ECXDIV(ien in file #225)=ien in file #4^name^station number
"RTN","ECXDVSN",157,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN",158,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN",159,0)
 N X,Y,DIC,DTOUT,DUOUT,DIRUT,OUT,ECXD,ECXIEN
"RTN","ECXDVSN",160,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN",161,0)
 S ECXERR=0,ECXD=""
"RTN","ECXDVSN",162,0)
 ;if ecxall=1, then all dental divisions/sites
"RTN","ECXDVSN",163,0)
 I ECXALL=1 D
"RTN","ECXDVSN",164,0)
 .F  S ECXD=$O(^DENT(225,"B",ECXD)) Q:ECXD=""  S ECXIEN=$O(^(ECXD,"")) D
"RTN","ECXDVSN",165,0)
 ..S $P(ECXDIV(ECXIEN),U,3)=ECXD S DIC="^DIC(4,",DIC(0)="MX",X=ECXD D ^DIC
"RTN","ECXDVSN",166,0)
 ..S:+Y>0 ECXDIV(ECXIEN)=Y S:+Y=-1 ECXDIV(ECXIEN)="^"
"RTN","ECXDVSN",167,0)
 ..S ECXDIV(ECXIEN)=ECXDIV(ECXIEN)_"^"_ECXD
"RTN","ECXDVSN",168,0)
 ;if ecxall=0, user selects some/all dental divisions/sites
"RTN","ECXDVSN",169,0)
 I ECXALL=0 S OUT=0 D
"RTN","ECXDVSN",170,0)
 .F  Q:OUT!ECXERR  D
"RTN","ECXDVSN",171,0)
 ..S DIC="^DENT(225,",DIC(0)="AEMQ" K X,Y D ^DIC
"RTN","ECXDVSN",172,0)
 ..I $G(DUOUT)!($G(DTOUT)) S OUT=1,ECXERR=1 Q
"RTN","ECXDVSN",173,0)
 ..I Y=-1,X="" S OUT=1 Q
"RTN","ECXDVSN",174,0)
 ..S ECXIEN=+Y,ECXD=$P(Y,U,2) K X,Y
"RTN","ECXDVSN",175,0)
 ..S DIC="^DIC(4,",DIC(0)="MX",X=ECXD D ^DIC
"RTN","ECXDVSN",176,0)
 ..S:+Y>0 ECXDIV(ECXIEN)=Y S:+Y=-1 ECXDIV(ECXIEN)="^"
"RTN","ECXDVSN",177,0)
 ..S ECXDIV(ECXIEN)=ECXDIV(ECXIEN)_"^"_ECXD
"RTN","ECXDVSN",178,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN",179,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN",180,0)
 Q
"RTN","ECXDVSN",181,0)
 ;
"RTN","ECXDVSN",182,0)
ECS(ECXDIV,ECXALL,ECXERR) ;setup division/location information for ECS extract audit report
"RTN","ECXDVSN",183,0)
 ;   input
"RTN","ECXDVSN",184,0)
 ;   ECXDIV = passed by reference array variable (required)
"RTN","ECXDVSN",185,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN",186,0)
 ;            '0' indicates user to select EC location(s);
"RTN","ECXDVSN",187,0)
 ;            '1' indicates 'all' locations or only one location
"RTN","ECXDVSN",188,0)
 ;                exists in file #4 "LOC" index;
"RTN","ECXDVSN",189,0)
 ;            default is '1'
"RTN","ECXDVSN",190,0)
 ;   output
"RTN","ECXDVSN",191,0)
 ;   ECXDIV = data for EC location;
"RTN","ECXDVSN",192,0)
 ;            ECXDIV(ien in file #4)=ien in file #4^name^station number
"RTN","ECXDVSN",193,0)
 ;            where the INSTITUTION file pointer is obtained from 
"RTN","ECXDVSN",194,0)
 ;            "LOC" index in file #4
"RTN","ECXDVSN",195,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN",196,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN",197,0)
 ;
"RTN","ECXDVSN",198,0)
 N X,Y,I,DIC,DIR,DIRUT,DTOUT,DUOUT,NM,OUT,ECXD,ECXIEN,ECXLOC
"RTN","ECXDVSN",199,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN",200,0)
 S ECXERR=0,ECXD="",I=0
"RTN","ECXDVSN",201,0)
 ;get all available ec locations in ecxloc array
"RTN","ECXDVSN",202,0)
 F  S ECXD=$O(^DIC(4,"LOC",ECXD)) Q:ECXD=""  S I=I+1,ECXIEN=$O(^(ECXD,"")),ECXLOC(I)=ECXD_U_ECXIEN_U_$P($G(^DIC(4,ECXIEN,99)),U,1)
"RTN","ECXDVSN",203,0)
 ;if ecxall=1, then all ec locations
"RTN","ECXDVSN",204,0)
 I ECXALL=1 S I="" D  Q
"RTN","ECXDVSN",205,0)
 .F  S I=$O(ECXLOC(I)) Q:I=""  D
"RTN","ECXDVSN",206,0)
 ..S ECXIEN=$P(ECXLOC(I),U,2)
"RTN","ECXDVSN",207,0)
 ..S ECXDIV(ECXIEN)=ECXIEN_U_$P(ECXLOC(I),U,1)_U_$P(ECXLOC(I),U,3)
"RTN","ECXDVSN",208,0)
 I ECXALL=0 S OUT=0,I=0 D
"RTN","ECXDVSN",209,0)
 .W !!,"Event Capture Locations:",! S I=0,DIR(0)="SXO^"
"RTN","ECXDVSN",210,0)
 .;spaces are embedded in dir(0) to prevent user from selecting by alpha characters in name
"RTN","ECXDVSN",211,0)
 .F  S I=$O(ECXLOC(I)) Q:I=""  S NM=$P(ECXLOC(I),U,1) W !,?10,I_"  ",NM S DIR(0)=DIR(0)_I_":"_"-   "_NM_";"
"RTN","ECXDVSN",212,0)
 .W !
"RTN","ECXDVSN",213,0)
 .F  Q:OUT!ECXERR  D
"RTN","ECXDVSN",214,0)
 ..S DIR("A")="Select Event Capture Location",DIR("S")="I +Y=Y"
"RTN","ECXDVSN",215,0)
 ..D ^DIR
"RTN","ECXDVSN",216,0)
 ..I $G(DTOUT)!($G(DUOUT)) S ECXERR=1 Q
"RTN","ECXDVSN",217,0)
 ..I X="" D  Q
"RTN","ECXDVSN",218,0)
 ...I '$D(ECXDIV) W !!,"No Location selected...exiting.",! S OUT=1 Q
"RTN","ECXDVSN",219,0)
 ...W !!,"You have selected the following Location(s):",!
"RTN","ECXDVSN",220,0)
 ...S I=0 F  S I=$O(ECXDIV(I)) Q:I=""  W !,?10,$P(ECXDIV(I),U,2)_" ("_$P(ECXDIV(I),U,3)_")"
"RTN","ECXDVSN",221,0)
 ...W ! K X,Y,DIR S DIR(0)="Y",DIR("A")="Is that ok",DIR("B")="YES" D ^DIR
"RTN","ECXDVSN",222,0)
 ...I $D(DIRUT) S ECXERR=1
"RTN","ECXDVSN",223,0)
 ...I Y=0 S ECXERR=1
"RTN","ECXDVSN",224,0)
 ...S OUT=1
"RTN","ECXDVSN",225,0)
 ..S ECXIEN=$P(ECXLOC(X),U,2)
"RTN","ECXDVSN",226,0)
 ..S ECXDIV(ECXIEN)=ECXIEN_U_$P(ECXLOC(X),U,1)_U_$P(ECXLOC(X),U,3)
"RTN","ECXDVSN",227,0)
 ;exit
"RTN","ECXDVSN",228,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN",229,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN",230,0)
 Q
"RTN","ECXDVSN1")
0^74^B28029339
"RTN","ECXDVSN1",1,0)
ECXDVSN1 ;ALB/JAP - Division selection utility (cont.) ;Sep 30, 1997
"RTN","ECXDVSN1",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXDVSN1",3,0)
 ;
"RTN","ECXDVSN1",4,0)
ECQ(ECXDIV,ECXALL,ECXERR) ;setup division/site information for QSR extract audit report
"RTN","ECXDVSN1",5,0)
 ;   input
"RTN","ECXDVSN1",6,0)
 ;   ECXDIV = passed by reference array variable (required)
"RTN","ECXDVSN1",7,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN1",8,0)
 ;            '0' indicates user to select QUASAR site/division;
"RTN","ECXDVSN1",9,0)
 ;            '1' indicates 'all' sites/divisions or only one site/division
"RTN","ECXDVSN1",10,0)
 ;                exists in file #509850.8; currently only one site is allowed
"RTN","ECXDVSN1",11,0)
 ;                to be defined;
"RTN","ECXDVSN1",12,0)
 ;            default is '1'
"RTN","ECXDVSN1",13,0)
 ;   output
"RTN","ECXDVSN1",14,0)
 ;   ECXDIV = data for QUASAR site/division;
"RTN","ECXDVSN1",15,0)
 ;            ECXDIV(ien in file #4)=ien in file #509850.8^name^station number
"RTN","ECXDVSN1",16,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN1",17,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN1",18,0)
 ;
"RTN","ECXDVSN1",19,0)
 N X,Y,DIC,OUT,ECX,ECXD,ECXIEN
"RTN","ECXDVSN1",20,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN1",21,0)
 ;currently, only ONE site may be defined in file #509850.8
"RTN","ECXDVSN1",22,0)
 S:ECXALL=0 ECXALL=1
"RTN","ECXDVSN1",23,0)
 S ECXERR=0,ECXD=""
"RTN","ECXDVSN1",24,0)
 ;if ecxall=1, then all QUASAR sites/divisions; but there's only one
"RTN","ECXDVSN1",25,0)
 I ECXALL=1 D
"RTN","ECXDVSN1",26,0)
 .F  S ECXD=$O(^ACK(509850.8,"B",ECXD)) Q:ECXD=""  S ECXIEN=$O(^(ECXD,"")) D
"RTN","ECXDVSN1",27,0)
 ..K ECX S DIC="^DIC(4,",DIQ(0)="I",DIQ="ECX",DA=ECXD,DR=".01;99" D EN^DIQ1
"RTN","ECXDVSN1",28,0)
 ..I $D(ECX) S ECXDIV(ECXD)=ECXIEN_"^"_ECX(4,ECXD,.01,"I")_"^"_ECX(4,ECXD,99,"I")
"RTN","ECXDVSN1",29,0)
 ..I '$D(ECX) S ECXERR=1
"RTN","ECXDVSN1",30,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN1",31,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN1",32,0)
 Q
"RTN","ECXDVSN1",33,0)
 ;
"RTN","ECXDVSN1",34,0)
LAB(ECXACC,ECXALL,ECXERR) ;setup accession area information for LAB extract audit report
"RTN","ECXDVSN1",35,0)
 ;   input
"RTN","ECXDVSN1",36,0)
 ;   ECXACC = passed by reference array variable (required)
"RTN","ECXDVSN1",37,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN1",38,0)
 ;            '0' indicates user to select Accession Area(s);
"RTN","ECXDVSN1",39,0)
 ;            '1' indicates 'all' Accession Areas are selected
"RTN","ECXDVSN1",40,0)
 ;            default is '1'
"RTN","ECXDVSN1",41,0)
 ;   output
"RTN","ECXDVSN1",42,0)
 ;   ECXACC = data for Accession Area(s);
"RTN","ECXDVSN1",43,0)
 ;            ECXACC(ien in file #68)=name^abbreviation
"RTN","ECXDVSN1",44,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN1",45,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN1",46,0)
 ;
"RTN","ECXDVSN1",47,0)
 N X,Y,DIC,DIQ,DA,DR,DTOUT,DUOUT,DIRUT,OUT,ECX,ECXA,ECXIEN
"RTN","ECXDVSN1",48,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN1",49,0)
 S ECXERR=0,ECXA=""
"RTN","ECXDVSN1",50,0)
 ;if ecxall=1, then all accession areas are selected
"RTN","ECXDVSN1",51,0)
 I ECXALL=1 D
"RTN","ECXDVSN1",52,0)
 .;^LRO(68,"B",xxx,ien)=1 indicates a synonym; skip synonyms
"RTN","ECXDVSN1",53,0)
 .F  S ECXA=$O(^LRO(68,"B",ECXA)) Q:ECXA=""  S ECXIEN=$O(^(ECXA,"")) D
"RTN","ECXDVSN1",54,0)
 ..Q:^LRO(68,"B",ECXA,ECXIEN)=1
"RTN","ECXDVSN1",55,0)
 ..K ECX S DIC="^LRO(68,",DR=".01;.09",DIQ="ECX",DA=ECXIEN D EN^DIQ1
"RTN","ECXDVSN1",56,0)
 ..Q:'$D(ECX)
"RTN","ECXDVSN1",57,0)
 ..;acc. areas with ZZ in name indicates no longer used
"RTN","ECXDVSN1",58,0)
 ..Q:$E(ECX(68,ECXIEN,.01),1,2)="ZZ"
"RTN","ECXDVSN1",59,0)
 ..S ECXACC(ECXIEN)=ECX(68,ECXIEN,.01)_"^"_ECX(68,ECXIEN,.09)
"RTN","ECXDVSN1",60,0)
 ;if ecxall=0, user selects some/all acc. areas
"RTN","ECXDVSN1",61,0)
 ;allow user to choose "ZZ"'d acc. area even though it may currently be inactive
"RTN","ECXDVSN1",62,0)
 I ECXALL=0 S OUT=0 D
"RTN","ECXDVSN1",63,0)
 .F  Q:OUT!ECXERR  D
"RTN","ECXDVSN1",64,0)
 ..S DIC="^LRO(68,",DIC(0)="AEMQZ" K X,Y D ^DIC
"RTN","ECXDVSN1",65,0)
 ..I $G(DUOUT)!($G(DTOUT)) S OUT=1,ECXERR=1 Q
"RTN","ECXDVSN1",66,0)
 ..I Y=-1,X="" S OUT=1 Q
"RTN","ECXDVSN1",67,0)
 ..S ECXACC(+Y)=$P(Y(0),U,1)_U_$P(Y(0),U,11)
"RTN","ECXDVSN1",68,0)
 I ECXERR=1 K ECXACC
"RTN","ECXDVSN1",69,0)
 I '$D(ECXACC) S ECXERR=1
"RTN","ECXDVSN1",70,0)
 Q
"RTN","ECXDVSN1",71,0)
 ;
"RTN","ECXDVSN1",72,0)
NUR(ECXDIV,ECXALL,ECXERR) ;setup accession area information for LAB extract audit report
"RTN","ECXDVSN1",73,0)
 ;   input
"RTN","ECXDVSN1",74,0)
 ;   ECXDIV = passed by reference array variable (required)
"RTN","ECXDVSN1",75,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN1",76,0)
 ;            '0' indicates user to select nursing location(s)/division(s);
"RTN","ECXDVSN1",77,0)
 ;            '1' indicates 'all' nursing locations and medical center divisions 
"RTN","ECXDVSN1",78,0)
 ;                are selected or facility is non-divisional;
"RTN","ECXDVSN1",79,0)
 ;            default is '1'
"RTN","ECXDVSN1",80,0)
 ;   output
"RTN","ECXDVSN1",81,0)
 ;   ECXDIV = data for nursing location(s) and medical center division(s);
"RTN","ECXDVSN1",82,0)
 ;            ECXDIV("D",ien in file #40.8)=ien in file #4^name^station number
"RTN","ECXDVSN1",83,0)
 ;            ECXDIV(ien in file #211.4,ien in file #40.8)=ien in file #44
"RTN","ECXDVSN1",84,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN1",85,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN1",86,0)
 ;
"RTN","ECXDVSN1",87,0)
 ;N X,Y,DIC,DIQ,DA,OUT,ECX,ECXLOC,ECXSC,ECXDIEN,ECXNLIEN,ECXNLNM,ECXPRIME
"RTN","ECXDVSN1",88,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN1",89,0)
 S (ECXERR,OUT)=0,ECXSC=""
"RTN","ECXDVSN1",90,0)
 ;get ien in file #40.8 of primary division
"RTN","ECXDVSN1",91,0)
 S ECXPRIME=$$PRIM^VASITE(DT)
"RTN","ECXDVSN1",92,0)
 ;associate nursing locations with medical center divisions
"RTN","ECXDVSN1",93,0)
 F  S ECXSC=$O(^NURSF(211.4,"B",ECXSC)) Q:ECXSC=""  S ECXNLIEN="" F  S ECXNLIEN=$O(^NURSF(211.4,"B",ECXSC,ECXNLIEN)) Q:ECXNLIEN=""  D
"RTN","ECXDVSN1",94,0)
 .K ECX
"RTN","ECXDVSN1",95,0)
 .S ECXDIEN=0,ECXNLNM="",DIC="^SC(",DIQ(0)="I",DIQ="ECX",DA=ECXSC,DR=".01;3.5" D EN^DIQ1
"RTN","ECXDVSN1",96,0)
 .;if the 15th piece is null or y=-1 then ecxdien=primary division as default
"RTN","ECXDVSN1",97,0)
 .I $D(ECX) S ECXDIEN=+ECX(44,ECXSC,3.5,"I"),ECXNLNM=ECX(44,ECXSC,.01,"I")
"RTN","ECXDVSN1",98,0)
 .S:ECXDIEN=0 ECXDIEN=ECXPRIME
"RTN","ECXDVSN1",99,0)
 .S ECXLOC(ECXDIEN)="",ECXLOC(ECXDIEN,ECXNLIEN)=ECXSC_U_ECXNLNM
"RTN","ECXDVSN1",100,0)
 ;
"RTN","ECXDVSN1",101,0)
 ;if ecxall=1 don't prompt; setup all nursing locations and divisions incl. those w/o division
"RTN","ECXDVSN1",102,0)
 I ECXALL=1 S ECXDIEN="" D
"RTN","ECXDVSN1",103,0)
 .F  S ECXDIEN=$O(ECXLOC(ECXDIEN)) Q:ECXDIEN=""  D
"RTN","ECXDVSN1",104,0)
 ..S DIC="^DG(40.8,",DIC(0)="NXZ",X=ECXDIEN D ^DIC I +Y>0 D
"RTN","ECXDVSN1",105,0)
 ...S ECXDIV("D",ECXDIEN)=$P(Y(0),U,7)_U_$P(Y(0),U,1)_U_$P(Y(0),U,2),ECXNLIEN=""
"RTN","ECXDVSN1",106,0)
 ...F  S ECXNLIEN=$O(ECXLOC(ECXDIEN,ECXNLIEN)) Q:ECXNLIEN=""  S ECXDIV(ECXNLIEN,ECXDIEN)=ECXLOC(ECXDIEN,ECXNLIEN)
"RTN","ECXDVSN1",107,0)
 ;
"RTN","ECXDVSN1",108,0)
 ;if ecxall=0 let user select division(s)
"RTN","ECXDVSN1",109,0)
 I ECXALL=0 F  Q:OUT!ECXERR  D
"RTN","ECXDVSN1",110,0)
 .S DIC="^DG(40.8,",DIC(0)="AEMQZ",DIC("S")="I $P(^(0),U,3)'=1"
"RTN","ECXDVSN1",111,0)
 .D ^DIC I $G(DUOUT)!($G(DTOUT)) S OUT=1,ECXERR=1 Q
"RTN","ECXDVSN1",112,0)
 .I Y=-1,X="" S OUT=1 Q
"RTN","ECXDVSN1",113,0)
 .S ECXDIEN=+Y,NM=$P(Y,U,2)
"RTN","ECXDVSN1",114,0)
 .I '$D(ECXLOC(ECXDIEN)) D  Q
"RTN","ECXDVSN1",115,0)
 ..W !!,?5,"Division "_NM_" not associated with Nursing Locations.",!,?5,"Try again...",!
"RTN","ECXDVSN1",116,0)
 .S ECXDIV("D",ECXDIEN)=$P(Y(0),U,7)_U_$P(Y(0),U,1)_U_$P(Y(0),U,2),ECXNLIEN=""
"RTN","ECXDVSN1",117,0)
 .F  S ECXNLIEN=$O(ECXLOC(ECXDIEN,ECXNLIEN)) Q:ECXNLIEN=""  S ECXDIV(ECXNLIEN,ECXDIEN)=ECXLOC(ECXDIEN,ECXNLIEN)
"RTN","ECXDVSN1",118,0)
 ;in case of user up-arrow out or timeout, make sure nothing returned in ecxdiv
"RTN","ECXDVSN1",119,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN1",120,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN1",121,0)
 Q
"RTN","ECXDVSN1",122,0)
 ;
"RTN","ECXDVSN1",123,0)
PRE(ECXDIV,ECXALL,ECXERR) ;setup site information for PRE extract audit report
"RTN","ECXDVSN1",124,0)
 ;   input
"RTN","ECXDVSN1",125,0)
 ;   ECXDIV = passed by reference array variable (required)
"RTN","ECXDVSN1",126,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN1",127,0)
 ;            '0' indicates user to select Pharmacy site(s);
"RTN","ECXDVSN1",128,0)
 ;            '1' indicates 'all' sites are selected
"RTN","ECXDVSN1",129,0)
 ;            default is '1'
"RTN","ECXDVSN1",130,0)
 ;   output
"RTN","ECXDVSN1",131,0)
 ;   ECXDIV = data for Pharmacy site(s);
"RTN","ECXDVSN1",132,0)
 ;            ECXDIV(ien in file #59)=IEN in file #59^name^site number^IEN in file #4
"RTN","ECXDVSN1",133,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN1",134,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN1",135,0)
 ;
"RTN","ECXDVSN1",136,0)
 N X,Y,DIC,DIQ,DA,OUT,ECXARR,ECXP,ECXIEN
"RTN","ECXDVSN1",137,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN1",138,0)
 S ECXERR=0,ECXP=""
"RTN","ECXDVSN1",139,0)
 ;if ecxall=1, then all pharmacy sites are selected or there's only one
"RTN","ECXDVSN1",140,0)
 I ECXALL=1 S ECXP="" D
"RTN","ECXDVSN1",141,0)
 .F  S ECXP=$O(^PS(59,"B",ECXP)) Q:ECXP=""  S ECXIEN=$O(^(ECXP,"")) D
"RTN","ECXDVSN1",142,0)
 ..K ECXARR S DIC="^PS(59,",DR=".01;.06;100",DIQ="ECXARR",DA=ECXIEN D EN^DIQ1
"RTN","ECXDVSN1",143,0)
 ..Q:'$D(ECXARR)
"RTN","ECXDVSN1",144,0)
 ..S ECXDIV(ECXIEN)=ECXIEN_U_ECXARR(59,ECXIEN,.01)_U_ECXARR(59,ECXIEN,.06)_U_ECXARR(59,ECXIEN,100)
"RTN","ECXDVSN1",145,0)
 ;if ecxall=0, then user selects pharmacy site(s)
"RTN","ECXDVSN1",146,0)
 I ECXALL=0 S OUT=0 D
"RTN","ECXDVSN1",147,0)
 .F  Q:OUT!ECXERR  D
"RTN","ECXDVSN1",148,0)
 ..S DIC="^PS(59,",DIC(0)="AEMQZ" K X,Y D ^DIC
"RTN","ECXDVSN1",149,0)
 ..I $G(DUOUT)!($G(DTOUT)) S OUT=1,ECXERR=1 Q
"RTN","ECXDVSN1",150,0)
 ..I Y=-1,X="" S OUT=1 Q
"RTN","ECXDVSN1",151,0)
 ..K ECXARR S (ECXIEN,DA)=+Y,DIC="^PS(59,",DR=".01;.06;100",DIQ="ECXARR" D EN^DIQ1
"RTN","ECXDVSN1",152,0)
 ..Q:'$D(ECXARR)
"RTN","ECXDVSN1",153,0)
 ..S ECXDIV(ECXIEN)=ECXIEN_U_ECXARR(59,ECXIEN,.01)_U_ECXARR(59,ECXIEN,.06)_U_ECXARR(59,ECXIEN,100)
"RTN","ECXDVSN1",154,0)
 ;
"RTN","ECXDVSN1",155,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN1",156,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN1",157,0)
 Q
"RTN","ECXDVSN2")
0^75^B6763623
"RTN","ECXDVSN2",1,0)
ECXDVSN2 ;ALB/JAP - Division selection utility (cont.) ;Sep 30, 1997
"RTN","ECXDVSN2",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXDVSN2",3,0)
 ;
"RTN","ECXDVSN2",4,0)
RAD(ECXDIV,ECXALL,ECXERR) ;setup division/site information for RAD extract audit report
"RTN","ECXDVSN2",5,0)
 ;   input
"RTN","ECXDVSN2",6,0)
 ;   ECXDIV = passed by reference array variable (required)
"RTN","ECXDVSN2",7,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN2",8,0)
 ;            '0' indicates user to select radiology division;
"RTN","ECXDVSN2",9,0)
 ;            '1' indicates 'all' radiology divisions selected or only one division
"RTN","ECXDVSN2",10,0)
 ;                exists in file #79; default is '1'
"RTN","ECXDVSN2",11,0)
 ;   output
"RTN","ECXDVSN2",12,0)
 ;   ECXDIV = data for radiology division/site;
"RTN","ECXDVSN2",13,0)
 ;            ECXDIV(ien in file #79)=ien in file #4^name^station number
"RTN","ECXDVSN2",14,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN2",15,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN2",16,0)
 N X,Y,DIC,DA,DUOUT,DTOUT,DR,DIQ,OUT,ECXARR,ECXD,ECXIEN
"RTN","ECXDVSN2",17,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN2",18,0)
 S ECXERR=0,ECXD=""
"RTN","ECXDVSN2",19,0)
 ;if ecxall=1, then all radiology divisions/sites are selected
"RTN","ECXDVSN2",20,0)
 I ECXALL=1 D
"RTN","ECXDVSN2",21,0)
 .;ecxd=ecxien; both are iens in file #4
"RTN","ECXDVSN2",22,0)
 .F  S ECXD=$O(^RA(79,"B",ECXD)) Q:ECXD=""  S ECXIEN=$O(^(ECXD,"")) D
"RTN","ECXDVSN2",23,0)
 ..K ECXARR S DA=ECXIEN,DIC="^DIC(4,",DR=".01;99",DIQ="ECXARR" D EN^DIQ1
"RTN","ECXDVSN2",24,0)
 ..I $D(ECXARR) S ECXDIV(ECXIEN)=ECXIEN_U_ECXARR(4,ECXIEN,.01)_U_ECXARR(4,ECXIEN,99)
"RTN","ECXDVSN2",25,0)
 ;if ecxall=0, user selects radiology divisions/sites
"RTN","ECXDVSN2",26,0)
 I ECXALL=0 S OUT=0 D
"RTN","ECXDVSN2",27,0)
 .F  Q:OUT!ECXERR  D
"RTN","ECXDVSN2",28,0)
 ..S DIC="^RA(79,",DIC(0)="AEMQ" K X,Y D ^DIC
"RTN","ECXDVSN2",29,0)
 ..I $G(DUOUT)!($G(DTOUT)) S OUT=1,ECXERR=1 Q
"RTN","ECXDVSN2",30,0)
 ..I Y=-1,X="" S OUT=1 Q
"RTN","ECXDVSN2",31,0)
 ..S (ECXIEN,DA)=+Y K ECXARR S DIC="^DIC(4,",DR=".01;99",DIQ="ECXARR" D EN^DIQ1
"RTN","ECXDVSN2",32,0)
 ..I $D(ECXARR) S ECXDIV(ECXIEN)=ECXIEN_U_ECXARR(4,ECXIEN,.01)_U_ECXARR(4,ECXIEN,99)
"RTN","ECXDVSN2",33,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN2",34,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN2",35,0)
 Q
"RTN","ECXDVSN2",36,0)
 ;
"RTN","ECXDVSN2",37,0)
SUR(ECXDIV,ECXALL,ECXERR) ;setup division/site information for SUR extract audit report
"RTN","ECXDVSN2",38,0)
 ;   input
"RTN","ECXDVSN2",39,0)
 ;   ECXDIV = passed by reference array variable (required)
"RTN","ECXDVSN2",40,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN2",41,0)
 ;            '0' indicates user to select surgery division;
"RTN","ECXDVSN2",42,0)
 ;            '1' indicates 'all' surgery divisions selected or only one division
"RTN","ECXDVSN2",43,0)
 ;                exists in file #133; default is '1'
"RTN","ECXDVSN2",44,0)
 ;   output
"RTN","ECXDVSN2",45,0)
 ;   ECXDIV = data for surgery division/site;
"RTN","ECXDVSN2",46,0)
 ;            ECXDIV(ien in file #133)=ien in file #4^name^station number
"RTN","ECXDVSN2",47,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN2",48,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN2",49,0)
 N X,Y,DIC,DA,DUOUT,DTOUT,DR,DIQ,OUT,ECXARR,ECXD,ECXIEN
"RTN","ECXDVSN2",50,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN2",51,0)
 S ECXERR=0,ECXD=""
"RTN","ECXDVSN2",52,0)
 ;if ecxall=1, then all surgery divisions/sites are selected
"RTN","ECXDVSN2",53,0)
 I ECXALL=1 D
"RTN","ECXDVSN2",54,0)
 .F  S ECXD=$O(^SRO(133,"B",ECXD)) Q:ECXD=""  S ECXIEN=$O(^(ECXD,"")) D
"RTN","ECXDVSN2",55,0)
 ..K ECXARR S DA=ECXD,DIC="^DIC(4,",DR=".01;99",DIQ="ECXARR" D EN^DIQ1
"RTN","ECXDVSN2",56,0)
 ..I $D(ECXARR) S ECXDIV(ECXD)=ECXIEN_U_ECXARR(4,ECXD,.01)_U_ECXARR(4,ECXD,99)
"RTN","ECXDVSN2",57,0)
 ;if ecxall=0, user selects surgery divisions/sites
"RTN","ECXDVSN2",58,0)
 I ECXALL=0 S OUT=0 D
"RTN","ECXDVSN2",59,0)
 .F  Q:OUT!ECXERR  D
"RTN","ECXDVSN2",60,0)
 ..S DIC="^SRO(133,",DIC(0)="AEMQ" K X,Y D ^DIC
"RTN","ECXDVSN2",61,0)
 ..I $G(DUOUT)!($G(DTOUT)) S OUT=1,ECXERR=1 Q
"RTN","ECXDVSN2",62,0)
 ..I Y=-1,X="" S OUT=1 Q
"RTN","ECXDVSN2",63,0)
 ..S ECXIEN=+Y,(ECXD,DA)=$P(Y,U,2) K ECXARR S DIC="^DIC(4,",DR=".01;99",DIQ="ECXARR" D EN^DIQ1
"RTN","ECXDVSN2",64,0)
 ..I $D(ECXARR) S ECXDIV(ECXD)=ECXIEN_U_ECXARR(4,ECXD,.01)_U_ECXARR(4,ECXD,99)
"RTN","ECXDVSN2",65,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN2",66,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN2",67,0)
 Q
"RTN","ECXEC")
0^7^B19668319
"RTN","ECXEC",1,0)
ECXEC ;BIR/JLP,PTD-DSS Event Capture Extract  [ 02/14/97   2:26 PM ]
"RTN","ECXEC",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXEC",3,0)
BEG ;entry point from option
"RTN","ECXEC",4,0)
 I '$D(^ECH) W !,"Event Capture is not initialized",!! Q
"RTN","ECXEC",5,0)
 D SETUP,^ECXTRAC
"RTN","ECXEC",6,0)
 D ^ECXKILL K ECVER
"RTN","ECXEC",7,0)
 Q
"RTN","ECXEC",8,0)
START ;begin EC extract
"RTN","ECXEC",9,0)
 S QFLG=0
"RTN","ECXEC",10,0)
 S ECED=ECED+.3
"RTN","ECXEC",11,0)
 K ^TMP("EC",$J)
"RTN","ECXEC",12,0)
 S ECLL=0 F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXEC",13,0)
 Q
"RTN","ECXEC",14,0)
UPDATE ;sets record and updates counters
"RTN","ECXEC",15,0)
 ;ecode=inst^dfn^ssn^name^i/o status^day^DSS unit^category^procedure^volume^cost center^ordering sec^section^
"RTN","ECXEC",16,0)
 ;provider^^prov 2^^prov 3^^^mov #^treat spec^time^primary care team^primary care provider^pce cpt code^
"RTN","ECXEC",17,0)
 ;icd-9 code^agent orange^radiation exposure^environmental contaminants^service connected^sent to pce^^dss identifier^dcm dept.
"RTN","ECXEC",18,0)
 ;
"RTN","ECXEC",19,0)
 S ECCH=^ECH(ECDA,0),ECL=$P(ECCH,"^",4),ECDFN=$P(ECCH,"^",2),ECDT=$P(ECCH,"^",3),ECM=$P(ECCH,"^",6),ECC=$P(ECCH,"^",8),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXEC",20,0)
 Q:'$D(^DPT(ECDFN,0))  S SSN=$P(^(0),"^",9),ECNA=$E($P($P(^(0),"^"),",")_"    ",1,4)
"RTN","ECXEC",21,0)
 D INP
"RTN","ECXEC",22,0)
 S ECP=$P(ECCH,"^",9)
"RTN","ECXEC",23,0)
 Q:ECP']""
"RTN","ECXEC",24,0)
 S ECO=$P(ECCH,"^",12),ECV=$P(ECCH,"^",10),ECDU=$P(ECCH,"^",7)
"RTN","ECXEC",25,0)
 S ECXUNIT=$G(^ECD(ECDU,0)),ECCS=+$P(ECXUNIT,"^",4),ECDCM=$P(ECXUNIT,"^",5),ECUSTOP=$P(ECXUNIT,"^",10),ECUPCE=$P(ECXUNIT,"^",14)
"RTN","ECXEC",26,0)
 ;derivation of dss identifier depends on whether dss unit is set to send data to pce
"RTN","ECXEC",27,0)
 S ECAC=$P($G(ECCH),"^",19)
"RTN","ECXEC",28,0)
 ;if this is a record that 'goes to pce', then get the dss identifier from the clinic stop codes
"RTN","ECXEC",29,0)
 S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",30,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECA=1)) D
"RTN","ECXEC",31,0)
 .I +ECAC D
"RTN","ECXEC",32,0)
 ..S ECAC1=$P($G(^SC(+ECAC,0)),"^",7),ECAC2=$P($G(^(0)),"^",18)
"RTN","ECXEC",33,0)
 ..I 'ECAC2 S ECAC2S="000"
"RTN","ECXEC",34,0)
 ..I 'ECAC1 S (ECAC1S,ECAC2S)="000" Q
"RTN","ECXEC",35,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECAC1,0)),"^",2),ECAC2S=$P($G(^DIC(40.7,+ECAC2,0)),"^",2)
"RTN","ECXEC",36,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S=$$RJ^XLFSTR(ECAC2S,3,0)
"RTN","ECXEC",37,0)
 .I 'ECAC D
"RTN","ECXEC",38,0)
 ..S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",39,0)
 ;if this record doesn't go to pce, then get the dss idetifier from the dss unit
"RTN","ECXEC",40,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECA=3)) D
"RTN","ECXEC",41,0)
 .I +ECUSTOP D
"RTN","ECXEC",42,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECUSTOP,0)),"^",2),ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0)
"RTN","ECXEC",43,0)
 ..S ECAC2S="000"
"RTN","ECXEC",44,0)
 .I 'ECUSTOP D
"RTN","ECXEC",45,0)
 ..S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",46,0)
 S ECDSS=ECAC1S_ECAC2S
"RTN","ECXEC",47,0)
 ;setup provider(s) as'2'_ien; iens are now only in file #200; keeping obsolete reference
"RTN","ECXEC",48,0)
 ;to file #3.1 for backward compatibility; will be revised in future
"RTN","ECXEC",49,0)
 S ECU=$P(ECCH,"^",11),ECUN1=$S(ECU["DIC(3.1":3_$P(ECU,";"),1:2_$P(ECU,";"))
"RTN","ECXEC",50,0)
 S ECU2=$P(ECCH,"^",15),ECU2A=$S('ECU2:"",ECU2["DIC(3.1":3_$P(ECU2,";"),1:2_$P(ECU2,";"))
"RTN","ECXEC",51,0)
 S ECU3=$P(ECCH,"^",17),ECU3A=$S('ECU3:"",ECU3["DIC(3.1":3_$P(ECU3,";"),1:2_$P(ECU3,";"))
"RTN","ECXEC",52,0)
 ;change for version 2 where ECP is a variable pointer and we want to expand it
"RTN","ECXEC",53,0)
 ;category = category or null if stored as 0
"RTN","ECXEC",54,0)
 I ECP[";" S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),"^"),ECP<90000:$P(^EC(725,+ECP,0),"^",2)_"N",1:$P(^EC(725,+ECP,0),"^",2)_"L"),ECC=$S(ECC:ECC,1:"")
"RTN","ECXEC",55,0)
 ;pick up EC to PCE data from "P" in File 721
"RTN","ECXEC",56,0)
 S ECPCE=$G(^ECH(ECDA,"P"))
"RTN","ECXEC",57,0)
 S ECPCE1=$P(ECPCE,"^"),ECPCE1=$P($G(^ICPT(+ECPCE1,0)),"^"),ECPCE2=$P(ECPCE,"^",2),ECPCE3=$P(ECPCE,"^",3),ECPCE4=$P(ECPCE,"^",4),ECPCE5=$P(ECPCE,"^",5),ECPCE6=$P(ECPCE,"^",6)
"RTN","ECXEC",58,0)
 S ECPCE7=$S($P(ECPCE,"^",7)="Y":"Y",1:"N")
"RTN","ECXEC",59,0)
 S ECPCE=ECPCE1_"^"_ECPCE2_"^"_ECPCE3_"^"_ECPCE4_"^"_ECPCE5_"^"_ECPCE6_"^"_ECPCE7
"RTN","ECXEC",60,0)
 ;setup the variable to be filed in #727.815
"RTN","ECXEC",61,0)
 S ECODE=ECL_"^"_ECDFN_"^"_SSN_"^"_ECNA_"^"_ECA_"^"_$$ECXDATE^ECXUTL(ECDT,ECXYM)_"^"_ECDU_"^"_ECC_"^"_ECP_"^"_ECV_"^"_ECCS_"^"_ECO_"^"_ECM_"^"_ECUN1
"RTN","ECXEC",62,0)
 S ECODE=ECODE_"^^"_ECU2A_"^^"_ECU3A_"^^^"_ECMN_"^"_ECTS_"^"_ECTM_"^"_ECPTTM_"^"_ECPTPR_"^"_ECPCE_"^^"_ECDSS_"^"_ECDCM_"^"
"RTN","ECXEC",63,0)
 S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXEC",64,0)
 S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXEC",65,0)
 I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXEC",66,0)
 Q
"RTN","ECXEC",67,0)
SETUP ; setup for ECXTRAC
"RTN","ECXEC",68,0)
 K ECVER S ECPACK="Event Capture",ECPIECE=3,ECRTN="START^ECXEC",ECGRP="EC",ECHEAD="ECS",ECFILE=727.815,ECVER=3 I $D(^DD(720.3)) S ECVER=7
"RTN","ECXEC",69,0)
 Q
"RTN","ECXEC",70,0)
INP ;Determine in/outpatient status, primary care team and provider.
"RTN","ECXEC",71,0)
 S ECA=1,ECTS="" K VAIP S VAIP("D")=ECDT,DFN=ECDFN D IN5^VADPT S ECMN=VAIP(1) I ECMN S ECA=3,ECTS=$P($G(^DIC(45.7,+VAIP(8),0)),"^",2)
"RTN","ECXEC",72,0)
 K VAIP,VAERR
"RTN","ECXEC",73,0)
 I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXEC",74,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(ECDFN,ECDT) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(ECDFN,ECDT) S:ECPTPR=0 ECPTPR=""
"RTN","ECXEC",75,0)
 I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXEC",76,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(ECDFN) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(ECDFN) S:ECPTPR=0 ECPTPR=""
"RTN","ECXEC",77,0)
 Q
"RTN","ECXEC",78,0)
 ;
"RTN","ECXEC",79,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXEC",80,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXFEKE1")
0^8^B30019768
"RTN","ECXFEKE1",1,0)
ECXFEKE1 ;BIR/DMA,CML-Print Feeder Keys (CONTINUED); [ 03/28/96  5:44 PM ]
"RTN","ECXFEKE1",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXFEKE1",3,0)
 ;
"RTN","ECXFEKE1",4,0)
SELLABKE() ;** Function to prompt user selection of type of Lab Feeder Key
"RTN","ECXFEKE1",5,0)
 ;
"RTN","ECXFEKE1",6,0)
 ;** Variable Definitions
"RTN","ECXFEKE1",7,0)
 ;**  ECXKEY    - Value of user selection returned to calling code
"RTN","ECXFEKE1",8,0)
 ;**                Returns  N - LMIP Code formated feeder keys
"RTN","ECXFEKE1",9,0)
 ;**                         O - Locally formated feeder keys
"RTN","ECXFEKE1",10,0)
 ;**                        -1 - User uparrow (^) or Time out
"RTN","ECXFEKE1",11,0)
 ;
"RTN","ECXFEKE1",12,0)
 N ECXKEY
"RTN","ECXFEKE1",13,0)
 W !!,"The Feeder Key List for the Feeder System LAB can be printed by:"
"RTN","ECXFEKE1",14,0)
 W !,?5,"(O)ld Feeder Key sort by Local Feeder Key values"
"RTN","ECXFEKE1",15,0)
 W !,?5,"(N)ew Feeder Key sort by LMIP Codes"
"RTN","ECXFEKE1",16,0)
 S DIR(0)="S^O:OLD;N:NEW"
"RTN","ECXFEKE1",17,0)
 S:$D(^ECX(728,1,"LMIP")) DIR("B")="NEW"
"RTN","ECXFEKE1",18,0)
 S:'$D(^ECX(728,1,"LMIP")) DIR("B")="OLD"
"RTN","ECXFEKE1",19,0)
 D ^DIR
"RTN","ECXFEKE1",20,0)
 S:$D(DIRUT) ECXKEY=-1
"RTN","ECXFEKE1",21,0)
 S:'$D(DIRUT) ECXKEY=Y
"RTN","ECXFEKE1",22,0)
 K Y,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXFEKE1",23,0)
 Q ECXKEY
"RTN","ECXFEKE1",24,0)
 ;
"RTN","ECXFEKE1",25,0)
SUR F EC=1:1:16 S EC1=$P($T(@("S"_EC)),";",3),EC2=$P(EC1,"^"),ECD=$P(EC1,"^",2),^TMP($J,"SUR",EC2_"-10",EC)=ECD_" PATIENT TIME",^TMP($J,"SUR",EC2_"-40",EC)=ECD_" SURGEON TIME" D
"RTN","ECXFEKE1",26,0)
 .S ^TMP($J,"SUR",EC2_"-60",EC)=ECD_" RECOVERY ROOM TIME",^TMP($J,"SUR",EC2_"-70",EC)=ECD_" TECHNICIAN TIME",^TMP($J,"SUR",EC2_"-30",EC)=ECD_" CLEANUP TIME"
"RTN","ECXFEKE1",27,0)
 .S ^TMP($J,"SUR",EC2_"-22",1)=ECD_" ANESTHESIA TIME (SPECIAL)"
"RTN","ECXFEKE1",28,0)
 .S ^TMP($J,"SUR",EC2_"-21",1)=ECD_" ANESTHESIA TIME (GENERAL)"
"RTN","ECXFEKE1",29,0)
 .S ^TMP($J,"SUR",EC2_"-23",1)=ECD_" ANESTHESIA TIME (LOCAL)"
"RTN","ECXFEKE1",30,0)
 .S ^TMP($J,"SUR",EC2_"-24",1)=ECD_" ANESTHESIA TIME (SPI/EPI)"
"RTN","ECXFEKE1",31,0)
 .S ^TMP($J,"SUR",EC2_"-25",1)=ECD_" ANESTHESIA TIME (OTHER)"
"RTN","ECXFEKE1",32,0)
 .S ^TMP($J,"SUR",EC2_"-26",1)=ECD_" ANESTHESIA TIME (UNKNOWN)"
"RTN","ECXFEKE1",33,0)
 .S ^TMP($J,"SUR",EC2_"-27",1)=ECD_" ANESTHESIA TIME (MONITORED)"
"RTN","ECXFEKE1",34,0)
 S EC=0 F  S EC=$O(^SRO(131.9,EC)) Q:'EC  I $D(^(EC,0)) S ECD=$P(^(0),"^"),^TMP($J,"SUR",$$RJ^XLFSTR(EC,5,0),EC)=ECD
"RTN","ECXFEKE1",35,0)
 Q
"RTN","ECXFEKE1",36,0)
S1 ;;050^GENERAL(OR WHEN NOT DEFINED BELOW)
"RTN","ECXFEKE1",37,0)
S2 ;;051^GYNECOLOGY
"RTN","ECXFEKE1",38,0)
S3 ;;052^NEUROSURGERY
"RTN","ECXFEKE1",39,0)
S4 ;;053^OPHTHALMOLOGY
"RTN","ECXFEKE1",40,0)
S5 ;;054^ORTHOPEDICS
"RTN","ECXFEKE1",41,0)
S6 ;;055^OTORHINOLARYNGOLOGY (ENT)
"RTN","ECXFEKE1",42,0)
S7 ;;056^PLASTIC SURGERY (INCLUDES HEAD AND NECK)
"RTN","ECXFEKE1",43,0)
S8 ;;057^PROCTOLOGY
"RTN","ECXFEKE1",44,0)
S9 ;;058^THORACIC SURGERY (INC. CARDIAC SURG.)
"RTN","ECXFEKE1",45,0)
S10 ;;059^UROLOGY
"RTN","ECXFEKE1",46,0)
S11 ;;060^ORAL SURGERY (DENTAL)
"RTN","ECXFEKE1",47,0)
S12 ;;061^PODIATRY
"RTN","ECXFEKE1",48,0)
S13 ;;062^PERIPHERAL VASCULAR
"RTN","ECXFEKE1",49,0)
S14 ;;500^CARDIAC SURGERY
"RTN","ECXFEKE1",50,0)
S15 ;;501^TRANSPLANTATION
"RTN","ECXFEKE1",51,0)
S16 ;;502^ANESTHESIOLOGY
"RTN","ECXFEKE1",52,0)
 ;
"RTN","ECXFEKE1",53,0)
DEN F EC=3:1 S EC1=$T(DEN+EC) Q:EC1'?1"D"2N.E  S ECD=$P(EC1,";",3),EC1=$P(EC1," "),^TMP($J,"DEN",EC1,EC)=ECD
"RTN","ECXFEKE1",54,0)
 Q
"RTN","ECXFEKE1",55,0)
 ;
"RTN","ECXFEKE1",56,0)
D08C ;;COMPLETE EXAM
"RTN","ECXFEKE1",57,0)
D08S ;;SCREENING EXAM
"RTN","ECXFEKE1",58,0)
D09 ;;ADMIN PROCEDURE
"RTN","ECXFEKE1",59,0)
D10 ;;X-RAYS EXTRAORAL #
"RTN","ECXFEKE1",60,0)
D11 ;;X-RAYS INTRAORAL #
"RTN","ECXFEKE1",61,0)
D12 ;;PROPHY NATURAL DENTITION
"RTN","ECXFEKE1",62,0)
D13 ;;PROPHY DENTURE
"RTN","ECXFEKE1",63,0)
D14 ;;OPERATING ROOM
"RTN","ECXFEKE1",64,0)
D15 ;;NEOPLASM CONFIRMED MALIGNANT #
"RTN","ECXFEKE1",65,0)
D16 ;;NEOPLASM REMOVED #
"RTN","ECXFEKE1",66,0)
D17 ;;BIOPSY/SMEAR #
"RTN","ECXFEKE1",67,0)
D18 ;;FRACTURE #
"RTN","ECXFEKE1",68,0)
D20 ;;OTHER SIGNIF. SURG. (CTV)
"RTN","ECXFEKE1",69,0)
D21 ;;SURFACES RESTORED #
"RTN","ECXFEKE1",70,0)
D22 ;;ROOT CANAL THERAPY #
"RTN","ECXFEKE1",71,0)
D23 ;;PERIDONTAL QUADS (SURGICAL) #
"RTN","ECXFEKE1",72,0)
D24 ;;PERIO QUADS (ROOT PLANE) #
"RTN","ECXFEKE1",73,0)
D25G ;;PATIENT ED (CTV) GROUP
"RTN","ECXFEKE1",74,0)
D25I ;;PATIENT ED (CTV) INDIVIDUAL
"RTN","ECXFEKE1",75,0)
D26S ;;SPOT CHECK EXAM (STAFF)
"RTN","ECXFEKE1",76,0)
D26F ;;SPOT CHECK EXAM (FEE)
"RTN","ECXFEKE1",77,0)
D27 ;;INDIVIDUAL CROWNS #
"RTN","ECXFEKE1",78,0)
D28 ;;POST & CORES #
"RTN","ECXFEKE1",79,0)
D29 ;;FIXED PARTIALS (ABUT) #
"RTN","ECXFEKE1",80,0)
D30 ;;FIXED PARTIALS (PONT ONLY) #
"RTN","ECXFEKE1",81,0)
D31 ;;REMOVABLE PARTIALS #
"RTN","ECXFEKE1",82,0)
D32 ;;COMPLETE DENTURES #
"RTN","ECXFEKE1",83,0)
D33 ;;PROSTHETIC REPAIR #
"RTN","ECXFEKE1",84,0)
D34 ;;SPLINT AND SPEC. PROCESS (CTV)
"RTN","ECXFEKE1",85,0)
D35 ;;EXTRACTIONS #
"RTN","ECXFEKE1",86,0)
D36 ;;SURGICAL EXTRACTIONS #
"RTN","ECXFEKE1",87,0)
D37 ;;OTHER SIG TREATMENT (CTV)
"RTN","ECXFEKE1",88,0)
D38 ;;DIVISION (STATION DIVISION)
"RTN","ECXFEKE1",89,0)
D39C ;;COMPLETIONS
"RTN","ECXFEKE1",90,0)
D39T ;;TERMINATIONS
"RTN","ECXFEKE1",91,0)
D40 ;;INTERDISCIPLINARY CONSULT
"RTN","ECXFEKE1",92,0)
D41 ;;EVALUATIONS
"RTN","ECXFEKE1",93,0)
D42 ;;PRE AUTHORIZATION/2ND OPINION
"RTN","ECXFEKE1",94,0)
D43M ;;SPOT CHECK DISCREPANCY (STAFF)
"RTN","ECXFEKE1",95,0)
D43R ;;SPOT CHECK DISCREPANCY (FEE)
"RTN","ECXFEKE1",96,0)
 ;
"RTN","ECXFEKE1",97,0)
PRINT ;
"RTN","ECXFEKE1",98,0)
 ;setting EC9=EC1 is just for the benefit of the new ECS feeder key list - don't want to mess-up the other lists
"RTN","ECXFEKE1",99,0)
 S (QFLG,PG)=0,$P(LN,"-",81)=""
"RTN","ECXFEKE1",100,0)
 S EC="" F  S EC=$O(^TMP($J,EC)),EC1="" Q:EC=""  Q:QFLG  D HEAD F  S EC1=$O(^TMP($J,EC,EC1)),EC9=EC1,EC2=""  Q:EC1=""  Q:QFLG  D
"RTN","ECXFEKE1",101,0)
 .I EC="CLI" S EC9=$P(EC9,";",2)
"RTN","ECXFEKE1",102,0)
 .I EC="ECS",$G(ECECS)="N" S EC9=$P(EC9,";",2)
"RTN","ECXFEKE1",103,0)
 .I EC="LAB",EC9[".8" S EC9=$$ADD0(EC9)
"RTN","ECXFEKE1",104,0)
 .F  S EC2=$O(^TMP($J,EC,EC1,EC2)) Q:EC2=""  D:($Y+3>IOSL) HEAD Q:QFLG  W !,?5,EC9,?27,^(EC2)
"RTN","ECXFEKE1",105,0)
OUT ;
"RTN","ECXFEKE1",106,0)
 I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECXFEKE1",107,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXFEKE1",108,0)
 K EC,EC1,EC2,EC3,EC9,ECCSC,ECD,ECLIST,ECNDC,ECNDF,ECNFC,ECPHA,ECECS,ECLAB,ECSC,ECST,ECY,JJ,LN,P1,P2,P3,PG,POP,QFLG,SC,SS,X,Y,^TMP($J),DIR,DIRUT,DUOUT
"RTN","ECXFEKE1",109,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","ECXFEKE1",110,0)
HEAD ;
"RTN","ECXFEKE1",111,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXFEKE1",112,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXFEKE1",113,0)
 W:$Y!($E(IOST)="C") @IOF
"RTN","ECXFEKE1",114,0)
 S PG=PG+1 W !,?21,"Feeder Key List For Feeder System ",EC,?70,"Page: ",PG
"RTN","ECXFEKE1",115,0)
 I $D(ECPHA)&(EC="PHA") W !?22,$S(ECPHA="O":"(OLD Feeder Key sorted by VA Class)",1:"(NEW Feeder Key sorted by NDF Match)")
"RTN","ECXFEKE1",116,0)
 I $D(ECECS)&(EC="ECS") W !?21,$S(ECECS="O":"(OLD Feeder Key sorted by Category-Procedure)",1:"(NEW Feeder Key sorted by Procedure-CPT Code)")
"RTN","ECXFEKE1",117,0)
 I $D(ECLAB)&(EC="LAB") W !?15,$S(ECLAB="O":"(OLD Feeder Key sorted by Local Feeder Key values)",1:"      (NEW Feeder Key sorted by LMIP Codes)")
"RTN","ECXFEKE1",118,0)
 W !!,?5,"FEEDER KEY",?27,"DESCRIPTION",!,LN,!
"RTN","ECXFEKE1",119,0)
 Q
"RTN","ECXFEKE1",120,0)
ADD0(ECXFKEY) ;** Append zeros to decimal place on feeder key
"RTN","ECXFEKE1",121,0)
 ;
"RTN","ECXFEKE1",122,0)
 ;** Variable Definitions
"RTN","ECXFEKE1",123,0)
 ;**  ECXFKEY   - Value of Feeder Key
"RTN","ECXFEKE1",124,0)
 ;**                Returns  feeder key with zeros appended to make a
"RTN","ECXFEKE1",125,0)
 ;**                          four place decimal.
"RTN","ECXFEKE1",126,0)
 ;
"RTN","ECXFEKE1",127,0)
 N ECXD,LPCNT,LPEND,ECXFEKEY,ECXDEC
"RTN","ECXFEKE1",128,0)
 S ECXDEC=$P(ECXFKEY,".",2)
"RTN","ECXFEKE1",129,0)
 S LPEND=4-$L(ECXDEC)
"RTN","ECXFEKE1",130,0)
 F LPCNT=1:1:LPEND S ECXDEC=ECXDEC_"0"
"RTN","ECXFEKE1",131,0)
 S ECXFEKEY=$P(ECXFKEY,".",1)_"."_ECXDEC
"RTN","ECXFEKE1",132,0)
 Q ECXFEKEY
"RTN","ECXFEKE1",133,0)
 ;
"RTN","ECXFEKEY")
0^9^B45890835
"RTN","ECXFEKEY",1,0)
ECXFEKEY ;BIR/DMA,CML-Print Feeder Keys; [ 05/15/96  9:44 AM ]
"RTN","ECXFEKEY",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXFEKEY",3,0)
EN ;entry point from option
"RTN","ECXFEKEY",4,0)
 W !!,"Print list of Feeder Keys:",! K ECPHA
"RTN","ECXFEKEY",5,0)
 W !,"Select : 1. CLI",!,?9,"2. DEN",!,?9,"3. ECS",!,?9,"4. LAB",!,?9,"5. NUR",!,?9,"6. PHA",!,?9,"7. RAD",!,?9,"8. SUR",! S DIR(0)="L^1:8" D ^DIR Q:$D(DIRUT)
"RTN","ECXFEKEY",6,0)
 S ECY=Y I Y["6" D
"RTN","ECXFEKEY",7,0)
 .W !!,"The Feeder Key List for the Feeder System PHA can be printed by:",!?5,"(O)ld Feeder Key sort by VA Class",!?5,"(N)ew Feeder Key sort by NDF Match"
"RTN","ECXFEKEY",8,0)
 .S DIR(0)="S^O:OLD;N:NEW",DIR("B")="NEW" D ^DIR K DIR Q:$D(DIRUT)  S ECPHA=Y
"RTN","ECXFEKEY",9,0)
 G:$D(DIRUT) QUIT
"RTN","ECXFEKEY",10,0)
 I ECY["3" D
"RTN","ECXFEKEY",11,0)
 .W !!,"The Feeder Key List for the Feeder System ECS can be printed by:",!?5,"(O)ld Feeder Key sort by Category-Procedure",!?5,"(N)ew Feeder Key sort by Procedure-CPT Code"
"RTN","ECXFEKEY",12,0)
 .S DIR(0)="S^O:OLD;N:NEW",DIR("B")="NEW" D ^DIR K DIR Q:$D(DIRUT)  S ECECS=Y
"RTN","ECXFEKEY",13,0)
 S:ECY["4" ECLAB=$$SELLABKE^ECXFEKE1() ;**Prompt to select Lab Feeder key
"RTN","ECXFEKEY",14,0)
 G:($G(ECLAB)=-1) QUIT ;**GOTO Exit point
"RTN","ECXFEKEY",15,0)
 G:$D(DIRUT) QUIT
"RTN","ECXFEKEY",16,0)
 K %ZIS,IOP S %ZIS="QM",%ZIS("B")="" D ^%ZIS I POP W !,"NO DEVICE SELECTED OR REPORT PRINTED!!" G QUIT
"RTN","ECXFEKEY",17,0)
 I $D(IO("Q")) K IO("Q") S ZTRTN="START^ECXFEKEY",ZTDESC="Feeder Key List (DSS)" S ZTSAVE("ECY")="",ZTSAVE("ECPHA")="",ZTSAVE("ECECS")="",ZTSAVE("ECLAB")=""
"RTN","ECXFEKEY",18,0)
 I  D ^%ZTLOAD D HOME^%ZIS K ZTSK G QUIT
"RTN","ECXFEKEY",19,0)
 U IO
"RTN","ECXFEKEY",20,0)
 ;
"RTN","ECXFEKEY",21,0)
START ;queued entry point
"RTN","ECXFEKEY",22,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXFEKEY",23,0)
 K ^TMP($J)
"RTN","ECXFEKEY",24,0)
 F ECLIST=1:1 S EC=$P(ECY,",",ECLIST) Q:EC=""  D:EC=1 CLI D:EC=2 DEN^ECXFEKE1 D:EC=3 ECS D:EC=4 LAB D:EC=5 NUR D:EC=6 PHA D:EC=7 RAD D:EC=8 SUR^ECXFEKE1
"RTN","ECXFEKEY",25,0)
 G PRINT^ECXFEKE1
"RTN","ECXFEKEY",26,0)
LAB S EC=0
"RTN","ECXFEKEY",27,0)
 ;
"RTN","ECXFEKEY",28,0)
 ;** OLD Feeder Key format
"RTN","ECXFEKEY",29,0)
 I $G(ECLAB)="O" DO
"RTN","ECXFEKEY",30,0)
 .F  S EC=$O(^LAB(60,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),"^"),^TMP($J,"LAB",EC,EC)=EC1
"RTN","ECXFEKEY",31,0)
 ;
"RTN","ECXFEKEY",32,0)
 ;** NEW Feeder key format (LMIP Code)
"RTN","ECXFEKEY",33,0)
 I $G(ECLAB)="N" DO
"RTN","ECXFEKEY",34,0)
 .N EC2
"RTN","ECXFEKEY",35,0)
 .F  S EC=$O(^LAM(EC)) Q:'EC  DO
"RTN","ECXFEKEY",36,0)
 ..I $D(^LAM(EC,0)) DO
"RTN","ECXFEKEY",37,0)
 ...S EC1=$P(^LAM(EC,0),"^",1),EC1=$P(EC1,"~",1)
"RTN","ECXFEKEY",38,0)
 ...S EC2=$P(^LAM(EC,0),"^",2)
"RTN","ECXFEKEY",39,0)
 ...I EC2'[".9999",(EC2'[".8") S EC2=EC2\1
"RTN","ECXFEKEY",40,0)
 ...S ^TMP($J,"LAB",+EC2,+EC2)=EC1
"RTN","ECXFEKEY",41,0)
 Q
"RTN","ECXFEKEY",42,0)
ECS ;old ECS feeder key list for pre-FY97 data
"RTN","ECXFEKEY",43,0)
 G:$G(ECECS)="N" ECS2
"RTN","ECXFEKEY",44,0)
 S EC=0 I $P($G(^EC(720.1,1,0)),"^",2) D  G ECQ
"RTN","ECXFEKEY",45,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^(EC,0)) D
"RTN","ECXFEKEY",46,0)
 ..S EC1=$P($P(^(0),"^"),"-",3,4),EC2=$P(EC1,"-"),EC2=$S(+EC2:EC2,1:"***"),EC4=$S($P($G(^EC(726,+EC2,0)),"^")]"":$P(^(0),"^"),1:"***")
"RTN","ECXFEKEY",47,0)
 ..S EC3=$P(EC1,"-",2) Q:'+EC3  S EC3=$S(EC3["ICPT":$P($G(^ICPT(+EC3,0)),"^"),+EC3<90000:$P($G(^EC(725,+EC3,0)),"^",2)_"N",1:$P($G(^EC(725,+EC3,0)),"^",2)_"L")
"RTN","ECXFEKEY",48,0)
 ..S EC5=$P(EC1,"-",2),EC5=$S(EC5["ICPT":$E($P($G(^ICPT(+EC5,0)),"^",2),1,25),EC5["EC":$E($P($G(^EC(725,+EC5,0)),"^"),1,25),1:"UNKNOWN")
"RTN","ECXFEKEY",49,0)
 ..S ^TMP($J,"ECS",EC2_" - "_EC3,EC3)=EC4_" - "_EC5
"RTN","ECXFEKEY",50,0)
 F  S EC=$O(^ECK(EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P($P(^(0),"^"),"-",3,4),EC2=$E($P($G(^ECP(+EC1,0)),"^"),1,25),EC3=$E($P($G(^ECP(+$P(EC1,"-",2),0)),"^"),1,25),^TMP($J,"ECS",EC1,EC1)=EC2_" - "_EC3
"RTN","ECXFEKEY",51,0)
ECQ K EC1,EC2,EC3,EC4,EC5,EC6,EC7,EC8,EC9,EC10 Q
"RTN","ECXFEKEY",52,0)
ECS2 ;new ECS feeder key list for FY97 data
"RTN","ECXFEKEY",53,0)
 ;feeder key is <Procedure> if PCE CPT code is same or null;
"RTN","ECXFEKEY",54,0)
 ;feeder is <Procedure-PCE CPT> otherwise;
"RTN","ECXFEKEY",55,0)
 ;the description column of list shows procedure (EC5) in lowercase and CPT code (EC8) in uppercase;
"RTN","ECXFEKEY",56,0)
 ;but if procedure (EC3) is itself a CPT Code, convert EC5 to uppercase
"RTN","ECXFEKEY",57,0)
 ;concatenation of "A;" and "B;" are for proper sorting - CPT codes 1st, then other procedures
"RTN","ECXFEKEY",58,0)
 S EC=0 I $P($G(^EC(720.1,1,0)),"^",2) D  G ECQ
"RTN","ECXFEKEY",59,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^ECJ(EC,0)) D
"RTN","ECXFEKEY",60,0)
 ..S EC1=$P($P(^ECJ(EC,0),"^"),"-",3,4)
"RTN","ECXFEKEY",61,0)
 ..S EC3=$P(EC1,"-",2) Q:'+EC3  S EC3=$S(EC3["ICPT":$P($G(^ICPT(+EC3,0)),"^"),+EC3<90000:$P($G(^EC(725,+EC3,0)),"^",2)_"N",1:$P($G(^EC(725,+EC3,0)),"^",2)_"L")
"RTN","ECXFEKEY",62,0)
 ..S EC5=$P(EC1,"-",2),EC5=$S(EC5["ICPT":$E($P($G(^ICPT(+EC5,0)),"^",2),1,25),EC5["EC":$E($P($G(^EC(725,+EC5,0)),"^"),1,25),1:"UNKNOWN")
"RTN","ECXFEKEY",63,0)
 ..S EC5=$$LOW(EC5)
"RTN","ECXFEKEY",64,0)
 ..I EC1["ICPT" S EC5=$$UPP(EC5),EC3="A;"_EC3
"RTN","ECXFEKEY",65,0)
 ..S EC6=$P(EC1,"-",2),EC7="",EC8=""
"RTN","ECXFEKEY",66,0)
 ..I EC6["EC(725," D
"RTN","ECXFEKEY",67,0)
 ...S EC6=$S(+EC6>0:$P($G(^EC(725,+EC6,0)),"^",5),1:"") S EC7=$S(+EC6>0:$P($G(^ICPT(+EC6,0)),"^"),1:"")
"RTN","ECXFEKEY",68,0)
 ...S EC8=$S(+EC6>0:$E($P($G(^ICPT(+EC6,0)),"^",2),1,25),1:"")
"RTN","ECXFEKEY",69,0)
 ...S EC8=$$UPP(EC8),EC3="B;"_EC3
"RTN","ECXFEKEY",70,0)
 ..S EC9=$S(EC7'="":EC3_"-"_EC7,1:EC3),EC10=$S(EC8'="":EC5_" - "_EC8,1:EC5)
"RTN","ECXFEKEY",71,0)
 ..S ^TMP($J,"ECS",EC9,EC3)=EC10
"RTN","ECXFEKEY",72,0)
 G ECQ
"RTN","ECXFEKEY",73,0)
LOW(X) ;convert string to lowercase
"RTN","ECXFEKEY",74,0)
 F %=2:1:$L(X) I $E(X,%)?1U,$E(X,%-1)?1A S X=$E(X,0,%-1)_$C($A(X,%)+32)_$E(X,%+1,999)
"RTN","ECXFEKEY",75,0)
 Q X
"RTN","ECXFEKEY",76,0)
UPP(X) ;convert string to uppercase
"RTN","ECXFEKEY",77,0)
 F %=1:1:$L(X) S:$E(X,%)?1L X=$E(X,0,%-1)_$C($A(X,%)-32)_$E(X,%+1,999)
"RTN","ECXFEKEY",78,0)
 Q X
"RTN","ECXFEKEY",79,0)
 ;
"RTN","ECXFEKEY",80,0)
PHA ; feeder system for all pharmacy extracts is PHA
"RTN","ECXFEKEY",81,0)
 G:$G(ECPHA)="N" PHA2
"RTN","ECXFEKEY",82,0)
 S EC=0 F  S EC=$O(^PSDRUG(EC)) Q:'EC  I $D(^(EC,0)) S ECD=$P(^(0),"^"),EC1=$P(^(0),"^",2),EC2=$P($G(^(2)),"^",4),EC3=$$RJ^XLFSTR($P(EC2,"-"),6,0)_$$RJ^XLFSTR($P(EC2,"-",2),4,0)_$$RJ^XLFSTR($P(EC2,"-",3),2,0),EC3=$TR(EC3,"*","0") D
"RTN","ECXFEKEY",83,0)
 .S:EC1="" EC1="ZZ999" S:EC3="000000000000" EC3="999999999999"
"RTN","ECXFEKEY",84,0)
 .S ^TMP($J,"PHA",EC1_EC3,EC)=ECD
"RTN","ECXFEKEY",85,0)
 Q
"RTN","ECXFEKEY",86,0)
PHA2 ;NEW PHA Feeder Key List sorted by NDF Match
"RTN","ECXFEKEY",87,0)
 S EC=0 F  S EC=$O(^PSDRUG(EC)) Q:'EC  I $D(^PSDRUG(EC,0)) D
"RTN","ECXFEKEY",88,0)
 .S ECD=$P(^PSDRUG(EC,0),"^"),ECNDC=$P($G(^PSDRUG(EC,2)),"^",4),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXFEKEY",89,0)
 .S ECNDF=$G(^PSDRUG(EC,"ND")),ECNFC=$$RJ^XLFSTR($P(ECNDF,"^"),4,0)_$$RJ^XLFSTR($P(ECNDF,"^",3),3,0)_ECNFC
"RTN","ECXFEKEY",90,0)
 .S ^TMP($J,"PHA",ECNFC,EC)=ECD
"RTN","ECXFEKEY",91,0)
 Q
"RTN","ECXFEKEY",92,0)
CLI S SC=0 F  S SC=$O(^SC(SC)) Q:'SC  I $D(^(SC,0)) S EC=^(0),ECD=$P(EC,"^") I $P(EC,"^",3)="C" D  S ^TMP($J,"CLI","A;"_P1_P2_ECLEN_P3_"0",SC)=ECD
"RTN","ECXFEKEY",93,0)
 .S ECSC=$P($G(^DIC(40.7,+$P(EC,"^",7),0)),"^",2),ECCSC=$P($G(^DIC(40.7,+$P(EC,"^",18),0)),"^",2)
"RTN","ECXFEKEY",94,0)
 .S ECLEN="NNN" I $D(^SC(SC,"SL")),$P(^("SL"),"^",2)'="V" S ECLEN=$S($P(^("SL"),"^"):$P(^("SL"),"^"),1:"NNN"),ECLEN=$E("000"_ECLEN,$L(ECLEN)+1,$L(ECLEN)+3)
"RTN","ECXFEKEY",95,0)
 .S (P1,P2)="000",P3="0000" I '$D(^ECX(728.44,SC,0)),ECCSC]"" S ECST=5,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3),P2=$E("000"_ECCSC,$L(ECCSC)+1,$L(ECCSC)+3) Q
"RTN","ECXFEKEY",96,0)
 .I '$D(^ECX(728.44,SC,0)) S ECST=1,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3) Q
"RTN","ECXFEKEY",97,0)
 .S EC=^ECX(728.44,SC,0),ECST=$P(EC,"^",6)
"RTN","ECXFEKEY",98,0)
 .I ECST=6 Q
"RTN","ECXFEKEY",99,0)
 .;action code 6 means ignore
"RTN","ECXFEKEY",100,0)
 .I $P(EC,"^",4)]"" S ECSC=$P(EC,"^",4)
"RTN","ECXFEKEY",101,0)
 .I $P(EC,"^",5)]"" S ECCSC=$P(EC,"^",5)
"RTN","ECXFEKEY",102,0)
 .I ECST="" S ECST=4,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3),P3=$E("0000"_SC,$L(SC)+1,$L(SC)+4) S:ECCSC P2=$E("000"_ECCSC,$L(ECCSC)+1,$L(ECCSC)+3) Q
"RTN","ECXFEKEY",103,0)
 .I ECST<2 S P1=ECSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3) Q
"RTN","ECXFEKEY",104,0)
 .I ECST=2 S P1=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3) Q
"RTN","ECXFEKEY",105,0)
 .I ECST=3 S P1=ECSC,P11=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3),P11=$E("000"_P11,$L(P11)+1,$L(P11)+3) Q
"RTN","ECXFEKEY",106,0)
 .I ECST>3,ECST<7 S P1=ECSC,P2=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3),P2=$E("000"_P2,$L(P2)+1,$L(P2)+3) S:ECST=4 P3=$P($G(^ECX(728.441,+$P(^ECX(728.44,SC,0),"^",8),0)),"^") I P3="" S P3=$E("0000"_SC,$L(SC)+1,$L(SC)+4)
"RTN","ECXFEKEY",107,0)
 K ECLEN Q
"RTN","ECXFEKEY",108,0)
RAD S EC=0 F  S EC=$O(^RAMIS(71,EC)) Q:'EC  I $D(^(EC,0)) S EC1=^(0),ECD=$P(EC1,"^"),EC2=$P($G(^ICPT(+$P(EC1,"^",9),0)),"^") S:EC2="" EC2="Unknown" S ^TMP($J,"RAD",EC2,EC)=ECD
"RTN","ECXFEKEY",109,0)
 S ^TMP($J,"RAD",88888,88888)="Portable procedure",^TMP($J,"RAD",99999,99999)="OR procedure"
"RTN","ECXFEKEY",110,0)
 Q
"RTN","ECXFEKEY",111,0)
NUR F EC=1:1:11 S EC1=$P($T(@EC),";",3) F EC2=0:1:5 S ^TMP($J,"NUR",$P(EC1,"^")_"-"_EC2,EC2)=$P(EC1,"^",2)_" LEVEL "_EC2
"RTN","ECXFEKEY",112,0)
1 ;;PSI^PSYCHIATRIC
"RTN","ECXFEKEY",113,0)
2 ;;SUR^SURGICAL
"RTN","ECXFEKEY",114,0)
3 ;;MED^MEDICAL (EXCLUDE SCI)
"RTN","ECXFEKEY",115,0)
4 ;;SCI^MEDICAL (SCI)
"RTN","ECXFEKEY",116,0)
5 ;;NUR^NURSING HOME CARE UNIT
"RTN","ECXFEKEY",117,0)
6 ;;REC^RECOVERY ROOM
"RTN","ECXFEKEY",118,0)
7 ;;ITN^INTENSIVE CARE
"RTN","ECXFEKEY",119,0)
8 ;;HEM^HEMODIALYSIS
"RTN","ECXFEKEY",120,0)
9 ;;INT^INTERMEDIATE CARE
"RTN","ECXFEKEY",121,0)
10 ;;DOM^DOMICILIARY
"RTN","ECXFEKEY",122,0)
11 ;;ALC^ALCOHOL AND DRUG TREATMENT
"RTN","ECXFEKEY",123,0)
 Q
"RTN","ECXFEKEY",124,0)
QUIT ;
"RTN","ECXFEKEY",125,0)
 K ECY,ECPHA,ECECS,ECLAB,DIR,DIRUT,DUOUT,X,Y
"RTN","ECXFEKEY",126,0)
 Q
"RTN","ECXFELOC")
0^10^B15804560
"RTN","ECXFELOC",1,0)
ECXFELOC ;BIR/DMA,CML-Print Feeder Locations; [ 05/07/96  8:41 AM ]
"RTN","ECXFELOC",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXFELOC",3,0)
EN ;entry point from option
"RTN","ECXFELOC",4,0)
 W !!,"Print list of feeder locations.",! S QFLG=1
"RTN","ECXFELOC",5,0)
 K %ZIS S %ZIS="Q" D ^%ZIS Q:POP 
"RTN","ECXFELOC",6,0)
 I $D(IO("Q")) S ZTDESC="Feeder Location List (DSS)",ZTRTN="START^ECXFELOC" D ^%ZTLOAD D ^%ZISC G OUT
"RTN","ECXFELOC",7,0)
 U IO
"RTN","ECXFELOC",8,0)
START ;queued entry point
"RTN","ECXFELOC",9,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXFELOC",10,0)
 K ^TMP($J) S (QFLG,PG)=0,$P(LN,"-",81)=""
"RTN","ECXFELOC",11,0)
LAB S EC=0 F  S EC=$O(^LRO(68,EC)) Q:'EC  I $D(^(EC,0)) S EC1=^(0),^TMP($J,"LAB",$P(EC1,"^",11),EC)=$P(EC1,"^")
"RTN","ECXFELOC",12,0)
ECS S EC=0 I $P($G(^EC(720.1,1,0)),"^",2) D  G IV
"RTN","ECXFELOC",13,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),"-",1,2),EC2=$P($G(^ECD(+$P(EC1,"-",2),0)),"^"),^TMP($J,"ECS",EC1,EC1)=EC2
"RTN","ECXFELOC",14,0)
 F  S EC=$O(^ECK(EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),"-",1,2),EC2=$P($G(^ECD(+$P(EC1,"-",2),0)),"^"),^TMP($J,"ECS",EC1,EC1)=EC2
"RTN","ECXFELOC",15,0)
IV S EC=0 F  S EC=$O(^DG(40.8,EC)) Q:'EC  I $D(^DG(40.8,EC,0)) S EC1=$E($P(^(0),"^"),1,30),^TMP($J,"IVP","IVP"_EC,EC)="IV Pharmacy-"_EC1
"RTN","ECXFELOC",16,0)
CLI ;S EC=0 F  S EC=$O(^SC(EC)) Q:'EC  I $D(^(EC,0)) S EC1=^(0),ECS=$P(EC1,"^",15),ECSC=$P($G(^DIC(40.7,+$P(EC1,"^",7),0)),"^",2),ECD=$P(EC1,"^") S:'ECS ECS=1 D
"RTN","ECXFELOC",17,0)
 ;.I $P(EC1,"^",17)'="Y",$P(EC1,"^",3)="C" S DAT=$G(^SC(EC,"I")),ID=+DAT,RD=$P(DAT,"^",2) I 'ID!(ID>DT)!(RD&(RD<DT)) S ^TMP($J,"CLI",ECS_ECSC,EC)=ECD
"RTN","ECXFELOC",18,0)
PRE I $O(^PS(59,0)) G V6
"RTN","ECXFELOC",19,0)
 S EC=0 F  S EC=$O(^DIC(59,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$E($P(^(0),"^"),1,30),^TMP($J,"PRE","PRE"_EC,EC)="Prescriptions-"_EC1
"RTN","ECXFELOC",20,0)
 G RAD
"RTN","ECXFELOC",21,0)
V6 S EC=0 F  S EC=$O(^PS(59,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$E($P(^(0),"^"),1,30),^TMP($J,"PRE","PRE"_EC,EC)="Prescriptions-"_EC1
"RTN","ECXFELOC",22,0)
RAD S EC=0 F  S EC=$O(^RA(79,EC)),EC1=0 Q:'EC  I $D(^(EC,0)) S ECD=$P(^(0),"^") F  S EC1=$O(^RA(79.2,EC1)) Q:'EC1  I $D(^(EC1,0)) S ECD1=$P(^(0),"^"),^TMP($J,"RAD",EC_"-"_EC1,EC_"-"_EC1)=ECD_"-"_ECD1
"RTN","ECXFELOC",23,0)
NUR S EC=0 F  S EC=$O(^NURSF(211.4,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),"^"),EC1=$P($G(^SC(+EC1,0)),"^"),^TMP($J,"NUR",EC,EC)=EC1
"RTN","ECXFELOC",24,0)
SUR F EC=1:1:14 S EC2=$P($T(@EC),";",3) F EC1="I","A","D","M","P","C","S" S EC3=$P($T(@EC1),";",3),^TMP($J,"SUR",$P(EC2,"^")_EC1,EC)=$P(EC2,"^",2)_"-"_EC3
"RTN","ECXFELOC",25,0)
1 ;;ORGE^GENERAL PURPOSE OPERATING ROOM
"RTN","ECXFELOC",26,0)
2 ;;OROR^ORTHOPEDIC OPERATING ROOM
"RTN","ECXFELOC",27,0)
3 ;;ORCA^CARDIAC OPERATING ROOM
"RTN","ECXFELOC",28,0)
4 ;;ORNE^NEUROSURGERY OPERATING ROOM
"RTN","ECXFELOC",29,0)
5 ;;ORCN^CARDIAC/NEURO OPERATING ROOM
"RTN","ECXFELOC",30,0)
6 ;;ORAM^AMBULATORY OPERATING ROOM
"RTN","ECXFELOC",31,0)
7 ;;ORIN^INTENSIVE CARE UNIT
"RTN","ECXFELOC",32,0)
8 ;;OREN^ENDOSCOPY ROOM
"RTN","ECXFELOC",33,0)
9 ;;ORCY^CYSTOSCOPY ROOM
"RTN","ECXFELOC",34,0)
10 ;;ORWA^WARD
"RTN","ECXFELOC",35,0)
11 ;;ORCL^CLINIC
"RTN","ECXFELOC",36,0)
12 ;;ORDE^DEDICATED ROOM
"RTN","ECXFELOC",37,0)
13 ;;OROT^OTHER LOCATION
"RTN","ECXFELOC",38,0)
14 ;;ORNO^UNKNOWN
"RTN","ECXFELOC",39,0)
I ;;IMPLANTS
"RTN","ECXFELOC",40,0)
A ;;ANESTHESIA TIME
"RTN","ECXFELOC",41,0)
D ;;SURGERY TIME (DENTAL)
"RTN","ECXFELOC",42,0)
M ;;SURGERY TIME (MEDICINE)
"RTN","ECXFELOC",43,0)
P ;;SURGERY TIME (PSYCH)
"RTN","ECXFELOC",44,0)
C ;;SURGERY TIME (SPINAL CORD)
"RTN","ECXFELOC",45,0)
S ;;SURGERY TIME (SURGERY)
"RTN","ECXFELOC",46,0)
UDP S EC=0 F  S EC=$O(^DG(40.8,EC)) Q:'EC  I $D(^DG(40.8,EC,0)) S EC1=$E($P(^(0),"^"),1,30),^TMP($J,"UDP","UDP"_EC,EC)="Unit Dose Medications-"_EC1
"RTN","ECXFELOC",47,0)
DEN S EC=0 F  S EC=$O(^DENT(225,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),"^"),^TMP($J,"DEN",EC1,EC)="Dental "_EC1
"RTN","ECXFELOC",48,0)
 ;
"RTN","ECXFELOC",49,0)
PRINT ;
"RTN","ECXFELOC",50,0)
 S EC="" F  S EC=$O(^TMP($J,EC)),EC1="" Q:EC=""  Q:QFLG  D HEAD Q:QFLG  F  S EC1=$O(^TMP($J,EC,EC1)),EC2=""  Q:EC1=""  Q:QFLG  F  S EC2=$O(^TMP($J,EC,EC1,EC2)) Q:EC2=""  Q:QFLG  D
"RTN","ECXFELOC",51,0)
 .W !,?5,EC1,?23,^(EC2) I $Y+3>IOSL D HEAD Q:QFLG
"RTN","ECXFELOC",52,0)
OUT I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECXFELOC",53,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXFELOC",54,0)
 K ^TMP($J),DAT,EC,EC1,EC2,EC3,ECD,ECD1,ECS,ECSC,ID,JJ,LN,PG,POP,QFLG,RD,SS,X,Y
"RTN","ECXFELOC",55,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","ECXFELOC",56,0)
HEAD ;
"RTN","ECXFELOC",57,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXFELOC",58,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXFELOC",59,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,?15,"Feeder Location List For Feeder System ",EC,?72,"Page: ",PG,!!,?5,"FEEDER LOCATION",?23,"DESCRIPTION",!,LN
"RTN","ECXFELOC",60,0)
 Q
"RTN","ECXFTRAN")
0^11^B10559353
"RTN","ECXFTRAN",1,0)
ECXFTRAN ;BIR/DMA-Extract from Local Editing Files and Write to Host File ; 17 Mar 95 / 1:02 PM
"RTN","ECXFTRAN",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXFTRAN",3,0)
 ;
"RTN","ECXFTRAN",4,0)
 S ECRE="",DIC=727,DIC(0)="AEQM",DIC("A")="File transfer which extract ",DIC("S")="I '$D(^(""L"")),'$D(^(""PURG""))" D ^DIC K DIC G END:Y<0
"RTN","ECXFTRAN",5,0)
 I $G(^ECX(727,+Y,"PURG")) W !,"Data for this extract was purged on ",$E(^("PURG"),4,5),"/",$E(^("PURG"),6,7),"/",$E(^("PURG"),2,3) G ECXFTRAN
"RTN","ECXFTRAN",6,0)
 S ECDA=+Y I $G(^ECX(727,ECDA,"TR")) W !,"This extract was transfered on ",$E(^("TR"),4,5),"/",$E(^("TR"),6,7),"/",$E(^("TR"),2,3) S DIR(0)="Y",DIR("A")="Do you want to transfer again "
"RTN","ECXFTRAN",7,0)
 D ^DIR K DIR G ECXFTRAN:'Y K ^ECX(727,ECDA,"TR") S ECRE="re"
"RTN","ECXFTRAN",8,0)
 S ZTSK=$G(^ECX(727,ECDA,"Q")) I ZTSK D STAT^%ZTLOAD I ZTSK(0) I ZTSK(1)<3 W !!,"Task ",ZTSK," is already queued to transmit this extract",!! K ZTSK G ECXFTRAN
"RTN","ECXFTRAN",9,0)
 S ZTIO=""
"RTN","ECXFTRAN",10,0)
QUE S ZTSAVE("ECDA")="",ZTSAVE("ECRE")="",ZTRTN="START^ECXFTRAN",ZTDESC="Transmission of extract # "_ECDA D ^%ZTLOAD
"RTN","ECXFTRAN",11,0)
SET I $D(ZTSK) W !,"Request queued as Task #",ZTSK,".",! S ^ECX(727,ECDA,"Q")=ZTSK K ZTSK
"RTN","ECXFTRAN",12,0)
END K ECDA,ECRE,X,Y Q
"RTN","ECXFTRAN",13,0)
 ;
"RTN","ECXFTRAN",14,0)
START ; entry point
"RTN","ECXFTRAN",15,0)
 S ECINST=+$P(^ECX(728,1,0),"^") K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXFTRAN",16,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXFTRAN",17,0)
 S ECF=^ECX(727,ECDA,"FILE"),ECHEAD=^("HEAD"),ECGRP=^("GRP"),ECED=$P(^(0),"^",5),ECPACK=$P(^(0),"^",3)
"RTN","ECXFTRAN",18,0)
 K ^TMP($J) S ECHD(1)=ECINST_ECHEAD_$$ECXYM^ECXUTL(ECED),ECRN=0
"RTN","ECXFTRAN",19,0)
 S ECFILE=ECHEAD_ECDA_".DAT"
"RTN","ECXFTRAN",20,0)
 S %ZIS=0,IOP="DSS FILE DEVICE",%ZIS("HFSNAME")=ECFILE D ^%ZIS
"RTN","ECXFTRAN",21,0)
 U IO
"RTN","ECXFTRAN",22,0)
 W ECHD(1),!
"RTN","ECXFTRAN",23,0)
 F J=0:0 S J=$O(^ECX(ECF,"AC",ECDA,J)) Q:'J  I $D(^ECX(ECF,J,0)) W $P(^(0),"^",4,100)_"^~",! S ECRN=ECRN+1 I ECRN>499,'(ECRN#500) I $$S^%ZTLOAD Q
"RTN","ECXFTRAN",24,0)
 I $$S^%ZTLOAD G CLEAN
"RTN","ECXFTRAN",25,0)
 ;
"RTN","ECXFTRAN",26,0)
 S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXFTRAN",27,0)
MSG ; send message to mail group 'DSS-ECGRP'
"RTN","ECXFTRAN",28,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXFTRAN",29,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXFTRAN",30,0)
 S ^TMP($J,"LOC",1,0)="The DSS "_ECPACK_" extract (#"_ECDA_") was "_ECRE_"transfered on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_". ",^TMP($J,"LOC",3,0)=" ",^TMP($J,"LOC",4,0)="A total of "_ECRN_" records were written."
"RTN","ECXFTRAN",31,0)
 S ^TMP($J,"LOC",5,0)="File name "_ECFILE,^TMP($J,"LOC",6,0)=" "
"RTN","ECXFTRAN",32,0)
 S XMTEXT="^TMP($J,""LOC""," D ^XMD S ^ECX(727,ECDA,"TR")=DT
"RTN","ECXFTRAN",33,0)
CLEAN ;
"RTN","ECXFTRAN",34,0)
 S ZTREQ="@" K ^TMP($J),^ECX(727,ECDA,"Q") D ^%ZISC,^ECXKILL
"RTN","ECXFTRAN",35,0)
 I $$S^%ZTLOAD K ZTREQ S ZTSTOP=1
"RTN","ECXFTRAN",36,0)
 Q
"RTN","ECXFTRAN",37,0)
 ;
"RTN","ECXINENV")
0^^B49706136
"RTN","ECXINENV",1,0)
ECXINENV ;ALB/JAP - Environment Check for DSS Install ;Nov 03, 1997
"RTN","ECXINENV",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXINENV",3,0)
EN ;entry point
"RTN","ECXINENV",4,0)
 N Y,J,JJ,DIR,DTOUT,DUOUT,DIRUT,ECX,MSG,MSG1,MSG2,MSG2B,MSG3,FILE,FILENM,TEXT
"RTN","ECXINENV",5,0)
 K XPDQUIT,XPDABORT
"RTN","ECXINENV",6,0)
 F J=1:1:12 S TEXT=$P($T(MSG1+J),";",3),MSG1(J)=TEXT
"RTN","ECXINENV",7,0)
 F J=1:1:4 S TEXT=$P($T(MSG2+J),";",3),MSG2(J)=TEXT
"RTN","ECXINENV",8,0)
 F J=1:1:8 S TEXT=$P($T(MSG2B+J),";",3),MSG2B(J)=TEXT
"RTN","ECXINENV",9,0)
 F J=1:1:8 S TEXT=$P($T(MSG3+J),";",3),MSG3(J)=TEXT
"RTN","ECXINENV",10,0)
 ;is this is not a first time install provide user warning
"RTN","ECXINENV",11,0)
 I $O(^ECX(728,0)) D MES^XPDUTL(.MSG1) D
"RTN","ECXINENV",12,0)
 .W ! S DIR(0)="Y",DIR("A")="Continue with the installation",DIR("B")="NO",DIR("?")="Answer YES to install DSS EXTRACTS v3.0 or NO to stop."
"RTN","ECXINENV",13,0)
 .D ^DIR
"RTN","ECXINENV",14,0)
 .I Y=0!($G(DIRUT)) S XPDQUIT=1 D MES^XPDUTL("Installation aborted...")
"RTN","ECXINENV",15,0)
 .K DIR,DIRUT,DTOUT,DUOUT W !
"RTN","ECXINENV",16,0)
 Q:$G(XPDQUIT)
"RTN","ECXINENV",17,0)
 D MES^XPDUTL(">>> Checking Environment --")
"RTN","ECXINENV",18,0)
 D MES^XPDUTL(" ")
"RTN","ECXINENV",19,0)
 I +$G(DUZ)'>0!($G(DUZ(0))'="@")!($G(U)'="^")!('$D(DT))!('$D(IOSL)) D
"RTN","ECXINENV",20,0)
 .S XPDQUIT=2
"RTN","ECXINENV",21,0)
 .D MES^XPDUTL("You must first initialize Programmer Environment by running ^XUP.")
"RTN","ECXINENV",22,0)
 .D MES^XPDUTL(.MSG2)
"RTN","ECXINENV",23,0)
 .D MES^XPDUTL(" ") S DIR(0)="E" D ^DIR K DIR
"RTN","ECXINENV",24,0)
 Q:$G(XPDQUIT)
"RTN","ECXINENV",25,0)
 ;don't bother checking files if this is first-time install of dss
"RTN","ECXINENV",26,0)
 Q:'$O(^ECX(728,0))
"RTN","ECXINENV",27,0)
 ;if this is a re-install of v3.0, don't insist that data in files be deleted
"RTN","ECXINENV",28,0)
 D FILE^DID(728,,"VERSION","ECX")
"RTN","ECXINENV",29,0)
 ;only do this check if version is 2
"RTN","ECXINENV",30,0)
 ;see if there's any extract data still in files from v2.0t11
"RTN","ECXINENV",31,0)
 I ECX("VERSION")'["3.0" D
"RTN","ECXINENV",32,0)
 .F J=1:1:20 S FILE=$P($T(FILES+J),";",3),FILENM=$P($T(FILES+J),";",4) D
"RTN","ECXINENV",33,0)
 ..S JJ=$O(^ECX(FILE,0)) I +JJ>0 D
"RTN","ECXINENV",34,0)
 ...S MSG="   Data still exists in file "_FILENM_" (#"_FILE_")."
"RTN","ECXINENV",35,0)
 ...D:($Y+3>IOSL) PAUSE
"RTN","ECXINENV",36,0)
 ...D MES^XPDUTL(MSG) S XPDQUIT=2
"RTN","ECXINENV",37,0)
 I $G(XPDQUIT) D  Q
"RTN","ECXINENV",38,0)
 .D:($Y+8>IOSL) PAUSE
"RTN","ECXINENV",39,0)
 .D MES^XPDUTL(.MSG2B)
"RTN","ECXINENV",40,0)
 .F J=1:1:20 S FILE=$P($T(FILES+J),";",3),FILENM=$P($T(FILES+J),";",4) D
"RTN","ECXINENV",41,0)
 ..S JJ=$O(^ECX(FILE,0)) I +JJ>0 D
"RTN","ECXINENV",42,0)
 ...S MSG="   "_FILENM_" (#"_FILE_")"
"RTN","ECXINENV",43,0)
 ...D:($Y+3>IOSL) PAUSE
"RTN","ECXINENV",44,0)
 ...D MES^XPDUTL(MSG)
"RTN","ECXINENV",45,0)
 .D:($Y+5>IOSL) PAUSE
"RTN","ECXINENV",46,0)
 .D MES^XPDUTL(.MSG2)
"RTN","ECXINENV",47,0)
 .D:($Y+12>IOSL) PAUSE
"RTN","ECXINENV",48,0)
 .D MES^XPDUTL(.MSG3)
"RTN","ECXINENV",49,0)
 D MES^XPDUTL("Environment check completed... OK.")
"RTN","ECXINENV",50,0)
 Q
"RTN","ECXINENV",51,0)
 ;
"RTN","ECXINENV",52,0)
PAUSE ;screen pause
"RTN","ECXINENV",53,0)
 N Y,JJ,SS
"RTN","ECXINENV",54,0)
 I $E(IOST)="C" D
"RTN","ECXINENV",55,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXINENV",56,0)
 .D MES^XPDUTL(" ") S DIR(0)="E" D ^DIR K DIR
"RTN","ECXINENV",57,0)
 W:$Y!($E(IOST)="C") @IOF
"RTN","ECXINENV",58,0)
 Q
"RTN","ECXINENV",59,0)
 ;
"RTN","ECXINENV",60,0)
CLEAN ;allow site to cleanup old extract records
"RTN","ECXINENV",61,0)
 N FF,J,JJ,JJJ,DIC,DR,DA,DIQ,FILE,EXTRACT,ECX,TYPE,START,PURGE,ABORT,OUT,DATA,CLEAN1,CLEAN2,REM,MSG
"RTN","ECXINENV",62,0)
 F J=1:1:8 S TEXT=$P($T(CLEAN1+J),";",3),CLEAN1(J)=TEXT
"RTN","ECXINENV",63,0)
 F J=1:1:6 S TEXT=$P($T(CLEAN2+J),";",3),CLEAN2(J)=TEXT
"RTN","ECXINENV",64,0)
 W !!
"RTN","ECXINENV",65,0)
 D FILE^DID(728,,"VERSION","ECX")
"RTN","ECXINENV",66,0)
 I ECX("VERSION")["3.0" D  Q
"RTN","ECXINENV",67,0)
 .D:($Y+3>IOSL) PAUSE D MES^XPDUTL(.CLEAN1)
"RTN","ECXINENV",68,0)
 ;if v3 not installed then continue
"RTN","ECXINENV",69,0)
 S ABORT=0,DATA=0
"RTN","ECXINENV",70,0)
 F FF=1:1:20 S FILE=$P($T(FILES+FF),";",3),FILENM=$P($T(FILES+FF),";",4),JJ=0 D  Q:ABORT=1
"RTN","ECXINENV",71,0)
 .F  S JJ=$O(^ECX(FILE,JJ)) Q:+JJ<1  I +JJ>0 D  Q:ABORT=1
"RTN","ECXINENV",72,0)
 ..S OUT=0
"RTN","ECXINENV",73,0)
 ..S EXTRACT=$P(^ECX(FILE,JJ,0),"^",3),DIC=727,DR="2;3;9",DIQ(0)="I",DIQ="ECX"
"RTN","ECXINENV",74,0)
 ..K ECX S DA=EXTRACT D EN^DIQ1
"RTN","ECXINENV",75,0)
 ..S TYPE=$G(ECX(727,DA,2,"I")),START=$G(ECX(727,DA,3,"I")),PURGE=$G(ECX(727,DA,9,"I"))
"RTN","ECXINENV",76,0)
 ..;if this extract was not previously purged, don't proceed
"RTN","ECXINENV",77,0)
 ..I PURGE="" D  Q
"RTN","ECXINENV",78,0)
 ...S ABORT=1
"RTN","ECXINENV",79,0)
 ...D:($Y+3>IOSL) PAUSE D MES^XPDUTL(.CLEAN2)
"RTN","ECXINENV",80,0)
 ..S REM(1)="   Data will now be deleted from:"
"RTN","ECXINENV",81,0)
 ..S REM(2)="   File #"_FILE_" - Extract #"_EXTRACT
"RTN","ECXINENV",82,0)
 ..S DATA=1
"RTN","ECXINENV",83,0)
 ..D:($Y+3>IOSL) PAUSE D MES^XPDUTL(.REM)
"RTN","ECXINENV",84,0)
 ..S JJJ=JJ-1
"RTN","ECXINENV",85,0)
 ..F  S JJJ=$O(^ECX(FILE,JJJ)) Q:+JJJ<1  I +JJJ>0 D  Q:OUT=1
"RTN","ECXINENV",86,0)
 ...S EXTRX=$P(^ECX(FILE,JJJ,0),"^",3)
"RTN","ECXINENV",87,0)
 ...I EXTRX'=EXTRACT S OUT=1
"RTN","ECXINENV",88,0)
 ...Q:OUT=1
"RTN","ECXINENV",89,0)
 ...S DIK="^ECX("_FILE_",",DA=JJJ D ^DIK
"RTN","ECXINENV",90,0)
 ...S MSG="      Record #"_JJJ_" in File #"_FILE_" deleted."
"RTN","ECXINENV",91,0)
 ...D:($Y+3>IOSL) PAUSE D MES^XPDUTL(MSG)
"RTN","ECXINENV",92,0)
 ..W !!
"RTN","ECXINENV",93,0)
 I ABORT=0,DATA=1 D
"RTN","ECXINENV",94,0)
 .S MSG="   Clean-up of old extract data complete."
"RTN","ECXINENV",95,0)
 .D:($Y+3>IOSL) PAUSE D MES^XPDUTL(MSG)
"RTN","ECXINENV",96,0)
 I ABORT=0,DATA=0 D
"RTN","ECXINENV",97,0)
 .S MSG="   There are no old extract records which can be deleted."
"RTN","ECXINENV",98,0)
 .D:($Y+3>IOSL) PAUSE D MES^XPDUTL(MSG)
"RTN","ECXINENV",99,0)
 W !!
"RTN","ECXINENV",100,0)
 Q
"RTN","ECXINENV",101,0)
 ;
"RTN","ECXINENV",102,0)
FILES ;files to be checked for existing data
"RTN","ECXINENV",103,0)
 ;;727.802;ADMISSION EXTRACT
"RTN","ECXINENV",104,0)
 ;;727.803;CLINIC EXTRACT
"RTN","ECXINENV",105,0)
 ;;727.804;CLINIC NOSHOW EXTRACT
"RTN","ECXINENV",106,0)
 ;;727.805;NURSING EXTRACT
"RTN","ECXINENV",107,0)
 ;;727.806;DENTAL EXTRACT
"RTN","ECXINENV",108,0)
 ;;727.808;PHYSICAL MOVEMENT EXTRACT
"RTN","ECXINENV",109,0)
 ;;727.809;UNIT DOSE LOCAL EXTRACT
"RTN","ECXINENV",110,0)
 ;;727.81;PRESCRIPTION EXTRACT
"RTN","ECXINENV",111,0)
 ;;727.811;SURGERY EXTRACT
"RTN","ECXINENV",112,0)
 ;;727.813;LABORATORY EXTRACT
"RTN","ECXINENV",113,0)
 ;;727.814;RADIOLOGY EXTRACT
"RTN","ECXINENV",114,0)
 ;;727.815;EVENT CAPTURE LOCAL EXTRACT
"RTN","ECXINENV",115,0)
 ;;727.817;TREATING SPECIALTY CHANGE EXTRACT
"RTN","ECXINENV",116,0)
 ;;727.819;IV DETAIL EXTRACT
"RTN","ECXINENV",117,0)
 ;;727.82;ADMISSION SETUP EXTRACT
"RTN","ECXINENV",118,0)
 ;;727.821;PHYSICAL MOVEMENT SETUP EXTRACT
"RTN","ECXINENV",119,0)
 ;;727.822;TREATING SPECIALTY CHANGE SETUP EXTRACT
"RTN","ECXINENV",120,0)
 ;;727.823;PAI EXTRACT
"RTN","ECXINENV",121,0)
 ;;727.824;LAB RESULTS EXTRACT
"RTN","ECXINENV",122,0)
 ;;727.825;QUASAR EXTRACT
"RTN","ECXINENV",123,0)
 ;
"RTN","ECXINENV",124,0)
MSG1 ;
"RTN","ECXINENV",125,0)
 ;;  
"RTN","ECXINENV",126,0)
 ;;          ********** WARNING **********
"RTN","ECXINENV",127,0)
 ;;  
"RTN","ECXINENV",128,0)
 ;;DO NOT INSTALL DSS EXTRACTS V3.0 unless your site has
"RTN","ECXINENV",129,0)
 ;;extracted, transmitted, and received transmission
"RTN","ECXINENV",130,0)
 ;;confirmation from the Austin Automation Center for ALL 
"RTN","ECXINENV",131,0)
 ;;FY97 data.  Prior approval for this installation should
"RTN","ECXINENV",132,0)
 ;;have been received from the local DSS Site Manager.
"RTN","ECXINENV",133,0)
 ;;  
"RTN","ECXINENV",134,0)
 ;;   Answer YES to install DSS EXTRACTS v3.0.
"RTN","ECXINENV",135,0)
 ;;   Answer NO to stop the installation process now.
"RTN","ECXINENV",136,0)
 ;;  
"RTN","ECXINENV",137,0)
MSG2 ;post abort message
"RTN","ECXINENV",138,0)
 ;;   
"RTN","ECXINENV",139,0)
 ;;  
"RTN","ECXINENV",140,0)
 ;;Installation aborted...
"RTN","ECXINENV",141,0)
 ;;  
"RTN","ECXINENV",142,0)
MSG2B ;more post abort info if data in files
"RTN","ECXINENV",143,0)
 ;;  
"RTN","ECXINENV",144,0)
 ;;Before continuing with this installation, you should verify with
"RTN","ECXINENV",145,0)
 ;;the DSS Site Manager that all FY97 data has been transmitted and
"RTN","ECXINENV",146,0)
 ;;transmission confirmation has been received from the Austin 
"RTN","ECXINENV",147,0)
 ;;Automation Center.  Then data from the following files should be
"RTN","ECXINENV",148,0)
 ;;purged by the DSS Site Manager using the Purge Data from Extract
"RTN","ECXINENV",149,0)
 ;;Files [ECXPURG] option:
"RTN","ECXINENV",150,0)
 ;;   
"RTN","ECXINENV",151,0)
MSG3 ;;restart info
"RTN","ECXINENV",152,0)
 ;;  
"RTN","ECXINENV",153,0)
 ;;When you wish to continue with this installation, simply select
"RTN","ECXINENV",154,0)
 ;;the Install Package(s) [XPD INSTALL BUILD] option from the Kernel
"RTN","ECXINENV",155,0)
 ;;Installation & Distribution System menu.  You do not need to 
"RTN","ECXINENV",156,0)
 ;;reload the KIDS distribution file.  (The package build has not
"RTN","ECXINENV",157,0)
 ;;been deleted from the ^XTMP global.)
"RTN","ECXINENV",158,0)
 ;;  
"RTN","ECXINENV",159,0)
 ;;  
"RTN","ECXINENV",160,0)
CLEAN1 ;;can't cleanup global if v3 installed
"RTN","ECXINENV",161,0)
 ;;
"RTN","ECXINENV",162,0)
 ;;DSS EXTRACTS v3.0 has already been installed on this system.
"RTN","ECXINENV",163,0)
 ;;This file clean-up cannot be performed after installation of
"RTN","ECXINENV",164,0)
 ;;the new version.
"RTN","ECXINENV",165,0)
 ;;  
"RTN","ECXINENV",166,0)
 ;;If you are having difficulty, please contact the Customer Support
"RTN","ECXINENV",167,0)
 ;;Help Desk.
"RTN","ECXINENV",168,0)
 ;;
"RTN","ECXINENV",169,0)
CLEAN2 ;;unpurged extract file
"RTN","ECXINENV",170,0)
 ;;  
"RTN","ECXINENV",171,0)
 ;;Cannot continue -- an unpurged extract file has been found.
"RTN","ECXINENV",172,0)
 ;;   
"RTN","ECXINENV",173,0)
 ;;Please advise the DSS Site Manager to complete purging of all
"RTN","ECXINENV",174,0)
 ;;previously extracted data from files #727.802 through #727.825 
"RTN","ECXINENV",175,0)
 ;;by using the DSS option Purge Data from Extract Files [ECXPURG].
"RTN","ECXINENV",176,0)
 ;;  
"RTN","ECXINPOS")
0^^B2787646
"RTN","ECXINPOS",1,0)
ECXINPOS ;BIR/DMA,CML,PTD-Post Init for DSS Extracts ; 11/13/96 15:49
"RTN","ECXINPOS",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXINPOS",3,0)
 ;Call the MailMan API to Create Mail Groups.
"RTN","ECXINPOS",4,0)
 ;Code for the mail groups MUST remain for later rounds.
"RTN","ECXINPOS",5,0)
 F EC=1:1 S X=$P($T(LIST+EC),";",3) Q:X=""  I '$O(^XMB(3.8,"B",X,0)) D
"RTN","ECXINPOS",6,0)
 .S MGDESC(1)="This mail group contains users responsible for DSS extracts.",MGDESC(2)="A message is sent to this group upon completion of package extracts."
"RTN","ECXINPOS",7,0)
 .S MGNAM=X,(MGTYP,MGORG,MGSE)=0,MGSIL=1,XMTEXT="MGDESC(",MGMEM="",XMY="MGMEM("
"RTN","ECXINPOS",8,0)
 .S X=$$MG^XMBGRP(MGNAM,MGTYP,MGORG,MGSE,.MGMEM,.MGDESC,MGSIL)
"RTN","ECXINPOS",9,0)
 .I X'=0 D BMES^XPDUTL("The mail group "_MGNAM_" has been created. Remember to add members!")
"RTN","ECXINPOS",10,0)
 ;
"RTN","ECXINPOS",11,0)
END K EC,MGNAM,MGTYP,MGORG,MGSE,MGMEM,MGDESC,MGSIL,XMY,XMTEXT,X
"RTN","ECXINPOS",12,0)
 Q
"RTN","ECXINPOS",13,0)
 ;
"RTN","ECXINPOS",14,0)
LIST ;Mail Groups for DSS
"RTN","ECXINPOS",15,0)
 ;;DSS-ADMS
"RTN","ECXINPOS",16,0)
 ;;DSS-DENT
"RTN","ECXINPOS",17,0)
 ;;DSS-EC
"RTN","ECXINPOS",18,0)
 ;;DSS-LAB
"RTN","ECXINPOS",19,0)
 ;;DSS-MOVS
"RTN","ECXINPOS",20,0)
 ;;DSS-NURS
"RTN","ECXINPOS",21,0)
 ;;DSS-PRES
"RTN","ECXINPOS",22,0)
 ;;DSS-QSR
"RTN","ECXINPOS",23,0)
 ;;DSS-RAD
"RTN","ECXINPOS",24,0)
 ;;DSS-SCNS
"RTN","ECXINPOS",25,0)
 ;;DSS-SCX
"RTN","ECXINPOS",26,0)
 ;;DSS-SURG
"RTN","ECXINPOS",27,0)
 ;;DSS-UD
"RTN","ECXINPOS",28,0)
 ;;DSS-IV
"RTN","ECXINPOS",29,0)
 ;;DSS-TREAT
"RTN","ECXINPOS",30,0)
 ;;DSS-PAI
"RTN","ECXINPOS",31,0)
 ;;DMS
"RTN","ECXINPOS",32,0)
 ;;DMT
"RTN","ECXINPOS",33,0)
 ;;DMU
"RTN","ECXINPOS",34,0)
 ;;DMV
"RTN","ECXINPOS",35,0)
 ;;DMW
"RTN","ECXINPRE")
1^78
"RTN","ECXKILL")
0^79^B11934228
"RTN","ECXKILL",1,0)
ECXKILL ;BIR/DMA,PTD-Kill Local Variables ; 02/06/97 10:25 [ 03/27/97  12:43 PM ]
"RTN","ECXKILL",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXKILL",3,0)
 K %,%DT,%Y,%ZIS,A,A1,A2,ABR,B,BY,D,D0,D1,DA,DAT,DATA,DATA1,DATA2,DATA6,DATAOP,DD,DFN,DHDH,DIC,DIE,DIK,DINUM,DIQ
"RTN","ECXKILL",4,0)
 K DIR,DIRUT,DO,DOB,DR,DTOUT,DUOUT,EC,EC0,EC1,EC10,EC11,EC16,EC2,EC23,EC2NODE,EC3,EC42,EC50,EC6,EC7,ECA,ECAC,ECACA,ECAD,ECADM,ECALL
"RTN","ECXKILL",5,0)
 K ECANE,ECAO,ECARG,ECAS,ECAT,ECATSV,ECB,ECC,ECCA,ECCAN,ECCAT,ECCH,ECCN,ECCNT,ECCS,ECCSC,ECD,ECD0,ECD1,ECDA,ECDAL,ECDAT
"RTN","ECXKILL",6,0)
 K ECDATA,ECDATA1,ECDATE,ECDEN,ECDEX,ECDF,ECDFN,ECDFN0,ECDI,ECDIA,ECDIF,ECDIV,ECDL,ECDN,ECDNEW,ECDO,ECDOC,ECDR,ECDRG,ECDS,ECDSSU,ECDT,ECDTTM
"RTN","ECXKILL",7,0)
 K ECDU,ECEC0,ECED,ECED1,ECEDN,ECEDNEW,ECF,ECF1,ECFD,ECFDT,ECFILE,ECFK,ECFL,ECFR,ECGRP,ECH,ECHD,ECHEAD,ECI,ECID,ECIEN,ECIFN,ECIN
"RTN","ECXKILL",8,0)
 K ECINST,ECINV,ECIV,ECJ,ECK,ECL,ECL1,ECLAN,ECLAST,ECLDT,ECLINK,ECLIST,ECLL,ECLN,ECLOC,ECLRN,ECLX,ECLY,ECM,ECMAX,ECMIN
"RTN","ECXKILL",9,0)
 K ECXMISS,ECMN,ECMOD,ECMODS,ECMORE,ECMS,ECMSG,ECMSN,ECMT,ECMW,ECMY,ECN,ECNA,ECNDC,ECNDF,ECNFC,ECNL,ECNO,ECNODE,ECNOGO
"RTN","ECXKILL",10,0)
 K ECNT,ECO,ECO0,ECO1,ECO2,ECOB,ECODE,ECODE0,ECODE1,ECOLD,ECONE,ECOPAY,ECOPAYT,ECORTY,ECOS,ECP,ECPACK,ECPCE,ECPCE1,ECPCE2,ECPCE3,ECPCE4,ECPCE5,ECPCE6,ECPCE7,ECPIECE,ECPN,ECPRC,ECPRO
"RTN","ECXKILL",11,0)
 K ECPROF,ECPT,ECPTF,ECPTPR,ECPTTM,ECQ,ECQT,ECQTY,ECRD,ECRE,ECRED,ECREF,ECRFL,ECRN,ECROU,ECRR,ECRS,ECRSD,ECRTN,ECRX,ECS,ECSA,ECSC
"RTN","ECXKILL",12,0)
 K ECSD,ECSD1,ECSDN,ECSN,ECSR,ECSS,ECST,ECSTOP,ECSU,ECT,ECT1,ECTD,ECTD1,ECTEMP,ECTM,ECTNTL,ECTOTAL,ECTREAT,ECTRT,ECTS,ECTY,ECU,ECU2,ECU2A
"RTN","ECXKILL",13,0)
 K ECU3,ECU3A,ECUD,ECUI,ECUN,ECUN1,ECUNIT,ECURG,ECUT,ECUT2,ECUT3,ECV,ECW,ECWC,ECWD,ECX,ECXB,ECXLNCNT,ECXMDA,ECXMDT,ECXNOW,ECXQUEUE,ECXS,ECXSTART
"RTN","ECXKILL",14,0)
 K ECY,ECYM,ECZ,ECZNODE,ELIG,ENL,FAC,FLDS,FR,I,ID,IOP,J,K,L,LOC,LOS,LRDFN,NAM,OPC,P,P1,P11,P2,P3,POP,Q,RACE,RD,RESP,QFLG
"RTN","ECXKILL",15,0)
 K SC,SRDA,SRNM,SSN,STC,SU,TEN,TES,TIME,TO,TOT,VAERR,VAIP,VET,W,WTO,X,X1,X2,XMDUZ,XMER,XMFROM,XMREC,XMRG,XMSER,XMSUB
"RTN","ECXKILL",16,0)
 K XMTEXT,XMY,XMZ,XQMSG,XQSOP,XQSUB,XX,Y,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK,ECSTA,ECCTY,STATE,COUNTY,ECVER
"RTN","ECXKILL",17,0)
 K ECCPT,ECEKG,ECICD,ECPROV,ECREC,ECVAL,ECVIS,NCNTR,PTADT,STOP,ECIVRM,ECOR,ECWK,ECWKLD,LREDT,LRSDT,FD,ECHL,ECARSC
"RTN","ECXKILL",18,0)
 K ECDTST,ECLTST,ECODE2,ECORDT,ECORTM,ECRDDT,ECRDTM,ECRES,ECWCDA
"RTN","ECXKILL",19,0)
 ;
"RTN","ECXKILL",20,0)
AUDIT ;kill audit report variables
"RTN","ECXKILL",21,0)
 K ECX,ECXARRAY,ECXACC,ECXALL,ECXAUD,ECXD,ECXDEF,ECXDESC,ECXDIV
"RTN","ECXKILL",22,0)
 K ECXEND,ECXERR,ECXEXT,ECXHEAD,ECXLOC,ECXPGM,ECXRUN,ECXSAVE,ECXSTART
"RTN","ECXKILL",23,0)
 K IO("Q"),POP,DIR,DIC,DIE,DA,DR,DO,DIRUT,DUOUT,DTOUT
"RTN","ECXKILL",24,0)
 K ^TMP($J,"ECXORDER"),^TMP($J,"ECXWARD"),^TMP($J,"ECXAUD"),^TMP($J,"MOV"),^TMP($J,"TL"),^TMP($J,"ECXPROC"),^TMP($J,"ECXTS"),^TMP($J,"ECXFL"),^TMP($J,"ECXSPEC"),^TMP($J,"ECXPATS")
"RTN","ECXKILL",25,0)
 Q
"RTN","ECXLAB1")
0^16^B7466668
"RTN","ECXLAB1",1,0)
ECXLAB1 ;BIR/CML-Driver Routine for DSS Lab Extract; [ 03/20/97  11:54 AM ]
"RTN","ECXLAB1",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXLAB1",3,0)
EN ;entry point from option
"RTN","ECXLAB1",4,0)
 I '$O(^ECX(728,0)) W $C(7),!!,"You have not yet defined your facility in the DSS Extract file (#728)!" G QUIT
"RTN","ECXLAB1",5,0)
 ;Check for LMIP flag (field .5) in DSS EXTRACT file (#728), if "1" go immediately to new LAB format in ^ECXLABN
"RTN","ECXLAB1",6,0)
 I $G(^ECX(728,1,"LMIP")) G ^ECXLABN
"RTN","ECXLAB1",7,0)
 S $P(LN,"-",80)=""
"RTN","ECXLAB1",8,0)
 W $C(7),@IOF,!,LN,!,"     ARE YOU COMPLETELY READY TO SEND LMIP CODES FOR DSS LAB FEEDER KEYS?      ",!,LN
"RTN","ECXLAB1",9,0)
 W !!,"To answer ""YES"" to this question, Lab CO directives for LMIP MUST have"
"RTN","ECXLAB1",10,0)
 W !,"been completed at your facility. This means that your Lab Service must"
"RTN","ECXLAB1",11,0)
 W !,"have matched all entries in the LABORATORY TEST file (#60) to an LMIP"
"RTN","ECXLAB1",12,0)
 W !,"code.  After this is accomplished, you are ready to send LMIP codes to"
"RTN","ECXLAB1",13,0)
 W !,"DSS for your initial LAB Feeder Key Values."
"RTN","ECXLAB1",14,0)
 W !!?30,"**IMPORTANT NOTES**",!,"- Once you answer ""YES"" to send LMIP Codes, you will not be asked this"
"RTN","ECXLAB1",15,0)
 W !,"  question again. This and all future LAB extracts will send LMIP Codes."
"RTN","ECXLAB1",16,0)
 W !,"- Answering ""NO"" will generate DSS LAB data with local feeder key values"
"RTN","ECXLAB1",17,0)
 W !,"  (not LMIP codes)."
"RTN","ECXLAB1",18,0)
 W !,"- If you are not sure, enter an ""^"" at the next prompt and check with"
"RTN","ECXLAB1",19,0)
 W !,"  your LAB ADPAC or LAB Service before continuing."
"RTN","ECXLAB1",20,0)
 ;
"RTN","ECXLAB1",21,0)
 W ! K DIR D HELP S DIR(0)="Y",DIR("A")="Are you ready to send LMIP codes",DIR("B")="NO" D ^DIR K DIR G:$D(DIRUT) QUIT
"RTN","ECXLAB1",22,0)
 I 'Y W !!,"Your LAB Extract data will be generated without LMIP Codes." H 2 K LN,X,Y G ^ECXLABO
"RTN","ECXLAB1",23,0)
 W !!,"Your LAB Extract data will be generated with LMIP Codes." H 2 K LN,X,Y S ^ECX(728,1,"LMIP")=1 G ^ECXLABN
"RTN","ECXLAB1",24,0)
QUIT K %H,DTOUT,DUOUT,DIRUT,DIROUT,LN,X,Y Q
"RTN","ECXLAB1",25,0)
HELP ;
"RTN","ECXLAB1",26,0)
 S DIR("?",1)="   Enter:"
"RTN","ECXLAB1",27,0)
 S DIR("?",2)="     ""YES"" if you are ready to send LMIP codes,"
"RTN","ECXLAB1",28,0)
 S DIR("?",3)="      ""NO"" to use local feeder key values (not LMIP Codes),"
"RTN","ECXLAB1",29,0)
 S DIR("?")="       ""^"" to exit option."
"RTN","ECXLAB1",30,0)
 Q
"RTN","ECXLAB1",31,0)
SETUP ;
"RTN","ECXLAB1",32,0)
 I $G(^ECX(728,1,"LMIP")) D SETUP^ECXLABN Q
"RTN","ECXLAB1",33,0)
 D SETUP^ECXLABO Q
"RTN","ECXLABN")
0^17^B12842480
"RTN","ECXLABN",1,0)
ECXLABN ;BIR/CML-Lab Extract for DSS (New Format - With LMIP Codes) ; [ 11/22/96  5:14 PM ]
"RTN","ECXLABN",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXLABN",3,0)
BEG D SETUP,^ECXTRAC
"RTN","ECXLABN",4,0)
END D ^ECXKILL
"RTN","ECXLABN",5,0)
 Q
"RTN","ECXLABN",6,0)
START ; entry when queued
"RTN","ECXLABN",7,0)
 S QFLG=0
"RTN","ECXLABN",8,0)
 K ^LRO(64.03) S LRSDT=ECSD,LREDT=ECED D ^LRCAPDSS
"RTN","ECXLABN",9,0)
 ;quit if no completion date for API compile
"RTN","ECXLABN",10,0)
 I '$P($G(^LRO(64.03,1,1,1,0)),"^",4) Q
"RTN","ECXLABN",11,0)
 ;quit if tasked and user sends stop request
"RTN","ECXLABN",12,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^" Q
"RTN","ECXLABN",13,0)
 K ECXDD D FIELD^DID(64.03,1,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD ; provider points to
"RTN","ECXLABN",14,0)
 S ECLRN=1 F  S ECLRN=$O(^LRO(64.03,ECLRN)) Q:'ECLRN  I $D(^LRO(64.03,ECLRN,0)) S EC1=^(0),ECDOC=ECPROF_$P(EC1,"^",2),ECLOC=$P(EC1,"^",15),EC=$P(EC1,"^",3) I EC]"" D  Q:QFLG
"RTN","ECXLABN",15,0)
 .S ECF=$S($P(EC,";",2)="DPT(":2,$P(EC,";",2)="LRT(67,":67,1:0) Q:'ECF  S ECIFN=$P(EC,";")
"RTN","ECXLABN",16,0)
 .S ECDT=$P(EC1,"^",13),ECD=$P(ECDT,"."),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXLABN",17,0)
 .S ECWKLD=$P(EC1,"^",11) I $D(^LAM(ECWKLD,0)) S ECWK=$P(^(0),"^",2)
"RTN","ECXLABN",18,0)
 .S (ECNA,ECSN,ECMN,ECPTTM,ECPTPR)="",ECA=1
"RTN","ECXLABN",19,0)
 .I ECF=2,$D(^DPT(ECIFN,0)) D
"RTN","ECXLABN",20,0)
 ..S EC0=^(0),ECNA=$E($P($P(EC0,"^"),",")_"    ",1,4),ECSN=$P(EC0,"^",9) K VAIP S VAIP("D")=ECD,DFN=ECIFN D IN5^VADPT S ECMN=VAIP(1) S:ECMN ECA=3
"RTN","ECXLABN",21,0)
 ..I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXLABN",22,0)
 ...S ECPTTM=+$$OUTPTTM^SDUTL3(DFN,ECDT) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(DFN,ECDT) S:ECPTPR=0 ECPTPR=""
"RTN","ECXLABN",23,0)
 ..I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXLABN",24,0)
 ...S ECPTTM=+$$OUTPTTM^SDUTL3(DFN) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(DFN) S:ECPTPR=0 ECPTPR=""
"RTN","ECXLABN",25,0)
 .K VAIP,VAERR
"RTN","ECXLABN",26,0)
 .S ECTREAT=$P(EC1,"^",10) I ECTREAT S ECTREAT=$P($G(^DIC(45.7,+ECTREAT,0)),"^",2)
"RTN","ECXLABN",27,0)
 .I ECF=67 S ECSN="000123456",ECNA="RFRL"
"RTN","ECXLABN",28,0)
 .I ECNA]"" S ECT=$P(EC1,"^",8),ECURG=$P(EC1,"^",9),EC=+$P(EC1,"^",7),ECACA=EC_"^"_$P($G(^LRO(68,EC,0)),"^",11) I EC D
"RTN","ECXLABN",29,0)
 ..S ECODE=ECINST_"^"_ECIFN_"^"_ECSN_"^"_ECNA_"^"_ECA_"^"_$$ECXDATE^ECXUTL(ECD,ECXYM)_"^"_ECACA_"^"_ECT_"^"_ECURG_"^"_ECTREAT_"^"_ECLOC_"^"_ECDOC_"^"_ECMN_"^"_ECF_"^"_ECTM_"^"_ECWK_"^"_ECPTTM_"^"_ECPTPR_"^"
"RTN","ECXLABN",30,0)
 ..;inst^patient (or thing) number^SSN (or equivalent)^name^in/out^day^accession area^abbreviation^test^urgency^treating spec^location^provider and file^
"RTN","ECXLABN",31,0)
 ..;movement number^file^time^workload code^primary care team^primary care provider
"RTN","ECXLABN",32,0)
 ..;(ECACA=acc area^abbreviation)
"RTN","ECXLABN",33,0)
 ..S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXLABN",34,0)
 ..S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXLABN",35,0)
 .I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABN",36,0)
 K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",37,0)
 Q
"RTN","ECXLABN",38,0)
 ;
"RTN","ECXLABN",39,0)
SETUP S ECPACK="Laboratory",ECPIECE=1,ECRTN="START^ECXLABN",ECGRP="LAB",ECHEAD="LAB",ECFILE=727.813,ECVER=7
"RTN","ECXLABN",40,0)
 Q
"RTN","ECXLABN",41,0)
 ;
"RTN","ECXLABN",42,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABN",43,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLABO")
0^18^B12822622
"RTN","ECXLABO",1,0)
ECXLABO ;BIR/MAM,DMA,CML-Lab Extract for DSS (Old Version - W/O LMIP Codes); [ 11/22/96  5:28 PM ]
"RTN","ECXLABO",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXLABO",3,0)
V ;;2.0T11;DSS EXTRACTS;**24**;DEC 18,1996
"RTN","ECXLABO",4,0)
 ;This routine was originally called ECXLAB1, as called from the DSS menu.  Now ECXLAB1 is the driver routine to call ECXLABO (old format) or ECXLABN (new format)
"RTN","ECXLABO",5,0)
 D SETUP,^ECXTRAC
"RTN","ECXLABO",6,0)
END D ^ECXKILL
"RTN","ECXLABO",7,0)
 Q
"RTN","ECXLABO",8,0)
START ; entry when queued
"RTN","ECXLABO",9,0)
 S QFLG=0
"RTN","ECXLABO",10,0)
 S ECED=ECED+.3
"RTN","ECXLABO",11,0)
 K ECXDD D FIELD^DID(69.01,7,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD ; provider points to
"RTN","ECXLABO",12,0)
 S ECD=ECSD1 F  S ECD=$O(^LRO(69,ECD)),ECLRN=0 Q:'ECD  Q:ECD>ECED  F  S ECLRN=$O(^LRO(69,ECD,1,ECLRN)) Q:'ECLRN  I $D(^(ECLRN,0)) S EC1=^(0),ECDOC=ECPROF_$P(EC1,"^",6),ECLOC=$P(EC1,"^",9),EC=$G(^LR(+EC1,0)) I EC]"" D  Q:QFLG
"RTN","ECXLABO",13,0)
 .S ECDT=$P(EC1,"^",5),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXLABO",14,0)
 .S (ECNA,ECSN,ECMN,ECTREAT,ECPTTM,ECPTPR)="",ECA=1
"RTN","ECXLABO",15,0)
 .S ECF=$P(EC,"^",2),ECIFN=$P(EC,"^",3)
"RTN","ECXLABO",16,0)
 .I ECF=2,$D(^DPT(ECIFN,0)) D
"RTN","ECXLABO",17,0)
 ..S EC0=^(0),ECNA=$E($P($P(EC0,"^"),",")_"    ",1,4),ECSN=$P(EC0,"^",9) K VAIP S VAIP("D")=ECD,DFN=ECIFN D IN5^VADPT S ECMN=VAIP(1) I ECMN S ECA=3,ECTREAT=$P($G(^DIC(45.7,+VAIP(8),0)),"^",2)
"RTN","ECXLABO",18,0)
 ..I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXLABO",19,0)
 ...S ECPTTM=+$$OUTPTTM^SDUTL3(DFN,ECDT) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(DFN,ECDT) S:ECPTPR=0 ECPTPR=""
"RTN","ECXLABO",20,0)
 ..I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXLABO",21,0)
 ...S ECPTTM=+$$OUTPTTM^SDUTL3(DFN) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(DFN) S:ECPTPR=0 ECPTPR=""
"RTN","ECXLABO",22,0)
 .K VAIP,VAERR
"RTN","ECXLABO",23,0)
 .I ECF=67 S ECSN="000123456",ECNA="RFRL"
"RTN","ECXLABO",24,0)
 .I ECF=67.1 S ECSN=888888888,ECNA="RSCH"
"RTN","ECXLABO",25,0)
 .I ECNA]"" S J=0 F  S J=$O(^LRO(69,ECD,1,ECLRN,2,J)) Q:'J  S EC=$G(^(J,0)) I EC]"" S ECT=$P(EC,"^"),ECURG=$P(EC,"^",2),EC=+$P(EC,"^",4),ECACA=EC_"^"_$P($G(^LRO(68,EC,0)),"^",11) I EC D
"RTN","ECXLABO",26,0)
 ..S ECODE=ECINST_"^"_ECIFN_"^"_ECSN_"^"_ECNA_"^"_ECA_"^"_$$ECXDATE^ECXUTL(ECD,ECXYM)_"^"_ECACA_"^"_ECT_"^"_ECURG_"^"_ECTREAT_"^"_ECLOC_"^"_ECDOC_"^"_ECMN_"^"_ECF_"^"_ECTM_"^^"_ECPTTM_"^"_ECPTPR_"^"
"RTN","ECXLABO",27,0)
 ..;inst^patient (or thing) number^SSN (or equivalent)^name^in/out^day^accession area^abbreviation^test^urgency^treating spec^location^provider and file^
"RTN","ECXLABO",28,0)
 ..;movement number^file^time^workload code^primary care team^primary care provider
"RTN","ECXLABO",29,0)
 ..;(ECACA=acc area^abbreviation)
"RTN","ECXLABO",30,0)
 ..S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXLABO",31,0)
 ..S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXLABO",32,0)
 .I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABO",33,0)
 Q
"RTN","ECXLABO",34,0)
 ;
"RTN","ECXLABO",35,0)
SETUP S ECPACK="Laboratory",ECPIECE=1,ECRTN="START^ECXLABO",ECGRP="LAB",ECHEAD="LAB",ECFILE=727.813,ECVER=3
"RTN","ECXLABO",36,0)
 Q
"RTN","ECXLABO",37,0)
 ;
"RTN","ECXLABO",38,0)
 ;
"RTN","ECXLABO",39,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABO",40,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLABPI")
0^19^B2508800
"RTN","ECXLABPI",1,0)
ECXLABPI ;BIR/DMA-One Time Routine to Print Lab Tests ; 08 Aug 94 / 6:50 AM
"RTN","ECXLABPI",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXLABPI",3,0)
 W !!,"This will print a list of your lab products from the Lab extract file"
"RTN","ECXLABPI",4,0)
 S %ZIS="Q" D ^%ZIS K %ZIS Q:POP
"RTN","ECXLABPI",5,0)
 I $D(IO("Q")) S ZTDESC="Lab product list",ZTRTN="EN^ECXLABPI" D ^%ZTLOAD,^%ZISC K ZTRTN,ZTDESC Q
"RTN","ECXLABPI",6,0)
 ;
"RTN","ECXLABPI",7,0)
EN ;
"RTN","ECXLABPI",8,0)
 K ^TMP($J)
"RTN","ECXLABPI",9,0)
 F J=0:0 S J=$O(^ECX(727.813,J)) Q:'J  S EC=$G(^(J,0)) I EC]"" S ABR=$P(EC,"^",11),TES=$P(EC,"^",12),TEN=$P($G(^LAB(60,+TES,0)),"^"),^TMP($J,ABR,TES)=TEN
"RTN","ECXLABPI",10,0)
 ;
"RTN","ECXLABPI",11,0)
 D HEAD S ABR="" F  S ABR=$O(^TMP($J,ABR)) Q:ABR=""  F J=0:0 S J=$O(^TMP($J,ABR,J)) Q:'J  W !,?7,ABR,?15,J,?25,^(J) I $Y+4>IOSL D HEAD
"RTN","ECXLABPI",12,0)
 D ^%ZISC S ZTREQ="@" K ^TMP($J) Q
"RTN","ECXLABPI",13,0)
 ;
"RTN","ECXLABPI",14,0)
HEAD W:$Y @IOF W !,?20,"LAB EXTRACT PRODUCTS",!,"ACCESSION",?12,"NUMBER",?30,"DESCRIPTION",!!
"RTN","ECXLABPI",15,0)
 Q
"RTN","ECXLABR")
0^20^B12703854
"RTN","ECXLABR",1,0)
ECXLABR ;BIR/CML-LAR Extract for DSS (New Format - With LMIP Codes) ; [ 03/05/97  2:55 PM ]
"RTN","ECXLABR",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXLABR",3,0)
BEG D SETUP,^ECXTRAC
"RTN","ECXLABR",4,0)
 D ^ECXKILL
"RTN","ECXLABR",5,0)
 Q
"RTN","ECXLABR",6,0)
START ; entry when queued
"RTN","ECXLABR",7,0)
 K ^LAR(64.036) S LRSDT=ECSD,LREDT=ECED D ^LRCAPDAR
"RTN","ECXLABR",8,0)
 ;quit if no completion date for API compile
"RTN","ECXLABR",9,0)
 I '$P($G(^LAR(64.036,1,2,1,0)),"^",4) Q
"RTN","ECXLABR",10,0)
BLD ;build local array of workload codes for local lab tests linked to DSS tests
"RTN","ECXLABR",11,0)
 K ECLOC S ECDTST=0 F  S ECDTST=$O(^ECX(727.2,1,1,ECDTST)) Q:'ECDTST  S ECLTST=0 F  S ECLTST=$O(^ECX(727.2,1,1,ECDTST,"LOC",ECLTST)) Q:'ECLTST  D
"RTN","ECXLABR",12,0)
 .S ECLTIEN=+^ECX(727.2,1,1,ECDTST,"LOC",ECLTST,0)
"RTN","ECXLABR",13,0)
 .S ECWCDA=+$G(^LAB(60,ECLTIEN,64)) I ECWCDA S ECWC=$P(^LAM(ECWCDA,0),"^",2),ECLOC(ECWCDA)=ECWC
"RTN","ECXLABR",14,0)
 K ECLTIEN ;** Variable added to accomodate lack of DINUM on 727.2, P #26
"RTN","ECXLABR",15,0)
PROC ;begin processing the temporary lab file #64.036
"RTN","ECXLABR",16,0)
 ;code is written to allow for referral patients, this change will probably come in for the FY98 cycle
"RTN","ECXLABR",17,0)
 S ECLRN=1 F  S ECLRN=$O(^LAR(64.036,ECLRN)) Q:'ECLRN  I $D(^LAR(64.036,ECLRN,0)) S EC1=^(0),ECF=$P(EC1,"^",2) I ECF]"" D
"RTN","ECXLABR",18,0)
 .S ECDFN=$P(EC1,"^",3)
"RTN","ECXLABR",19,0)
 .S (ECNA,ECSN,ECMN,ECTREAT)="",ECA=1
"RTN","ECXLABR",20,0)
 .S ECORDT=$$ECXDATE^ECXUTL($P(EC1,"^",4),ECXYM),ECORTM=$$ECXTIME^ECXUTL($P(EC1,"^",4)_"."_$P(EC1,"^",5)),ECRDDT=$$ECXDATE^ECXUTL($P(EC1,"^",6),ECXYM),ECRDTM=$$ECXTIME^ECXUTL($P(EC1,"^",6)_"."_$P(EC1,"^",7))
"RTN","ECXLABR",21,0)
 .S ECDR=$P(EC1,"^",6)_"."_$P(EC1,"^",7)
"RTN","ECXLABR",22,0)
 .I ECF=2,$D(^DPT(ECDFN,0)) D
"RTN","ECXLABR",23,0)
 ..S EC0=^(0),ECNA=$E($P($P(EC0,"^"),",")_"    ",1,4),ECSN=$P(EC0,"^",9) K VAIP S VAIP("D")=ECDR,DFN=ECDFN D IN5^VADPT S ECMN=VAIP(1) S:ECMN ECA=3 S ECTREAT=$P($G(^DIC(45.7,+VAIP(8),0)),"^",2) K VAIP,VAERR
"RTN","ECXLABR",24,0)
 .;I ECF=67 S ECSN="000123456",ECNA="RFRL"
"RTN","ECXLABR",25,0)
 .S ECODE1=ECINST_"^"_ECDFN_"^"_ECSN_"^"_ECNA_"^"_ECA_"^"_$$ECXDATE^ECXUTL($P(EC1,"^",6),ECXYM)
"RTN","ECXLABR",26,0)
 .S ECODE2=ECORDT_"^"_$$LJ^XLFSTR(ECORTM,6,0)_"^"_ECRDDT_"^"_$$LJ^XLFSTR(ECRDTM,6,0)_"^"_ECMN_"^"_ECTREAT
"RTN","ECXLABR",27,0)
 .;loop on results multiple
"RTN","ECXLABR",28,0)
 .S ECRES=0 F  S ECRES=$O(^LAR(64.036,ECLRN,1,ECRES)) Q:'ECRES  I $D(^LAR(64.036,ECLRN,1,ECRES,0)) S EC2=^(0) D
"RTN","ECXLABR",29,0)
 ..S ECN=$P(EC2,"^"),ECRS=$P(EC2,"^",2),ECHL=$E($P(EC2,"^",3)),ECWC=+$P(EC2,"^",4) S ECWC=$S($D(ECLOC(ECWC)):ECLOC(ECWC),1:"")
"RTN","ECXLABR",30,0)
 ..S ECODE=ECODE1_"^"_$$RJ^XLFSTR(ECN,4,0)_"^"_ECRS_"^"_ECHL_"^"_ECODE2_"^"_ECWC_"^"
"RTN","ECXLABR",31,0)
 ..;facility^dfn^ssn^name(4)^in/out^day(ready)^lab test code^results^hi/lo indicator^date ordered^time ordered^date ready^time ready^movement file #^treating specialty^workload code(64)
"RTN","ECXLABR",32,0)
 ..S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXLABR",33,0)
 ..S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXLABR",34,0)
 K ^LAR(64.036) S ^LAR(64.036,0)="LAB DSS LAR EXTRACT^64.036^" Q
"RTN","ECXLABR",35,0)
 ;
"RTN","ECXLABR",36,0)
SETUP S ECPACK="Lab Results",ECPIECE=21,ECRTN="START^ECXLABR",ECGRP="LAB",ECHEAD="LAR",ECFILE=727.824,ECVER=7
"RTN","ECXLABR",37,0)
 Q
"RTN","ECXLABR",38,0)
 ;
"RTN","ECXLABR",39,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABR",40,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLABRS")
0^21^B8760704
"RTN","ECXLABRS",1,0)
ECXLABRS ;BIR/CML-Set Up the File to Control Extract of Lab Results; [ 02/26/97  2:56 PM ]
"RTN","ECXLABRS",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXLABRS",3,0)
EN ;entry point from option
"RTN","ECXLABRS",4,0)
 W @IOF
"RTN","ECXLABRS",5,0)
 W !,"This option will assist in the steps that create the files necessary to"
"RTN","ECXLABRS",6,0)
 W !,"control the extract of lab results for DSS. This will probably require"
"RTN","ECXLABRS",7,0)
 W !,"a combined effort between DSS personnel and lab personnel."
"RTN","ECXLABRS",8,0)
 ;
"RTN","ECXLABRS",9,0)
ASKTST ;loop on DSS lab tests multiple in 727.21 and the local lab data name subfile 727.211
"RTN","ECXLABRS",10,0)
 W !!!,"Step #1 - For each of the DSS lab tests, identify the tests as they"
"RTN","ECXLABRS",11,0)
 W !?10,"are named in your laboratory.  There may be more than one"
"RTN","ECXLABRS",12,0)
 W !?10,"test in your laboratory to generate the results asked for,"
"RTN","ECXLABRS",13,0)
 W !?10,"in that case, you should enter all such tests."
"RTN","ECXLABRS",14,0)
 F  W ! S DIC="^ECX(727.2,1,1,",DIC(0)="AEQM" D ^DIC Q:Y<0  S TST=+Y D
"RTN","ECXLABRS",15,0)
 .K EC,ECNM S ECNM=$P(^ECX(727.2,1,1,TST,0),"^"),EC=$P(^(0),"^",2),EC=$S(EC="B":"BLOOD",1:"URINE")
"RTN","ECXLABRS",16,0)
 .W !,"(for ",ECNM,", select tests that use ",EC," as a specimen)"
"RTN","ECXLABRS",17,0)
 .W ! F  K DA S DA(2)=1,DA(1)=TST,DIC="^ECX(727.2,"_DA(2)_",1,"_DA(1)_",""LOC"",",DIC(0)="QEAMOLZ" K ECXDD D FIELD^DID(727.21,1,,"SPECIFIER","ECXDD") S DIC("P")=ECXDD("SPECIFIER") K ECXDD D ^DIC K DIC Q:Y<0  S LOC=+Y D
"RTN","ECXLABRS",18,0)
 ..S DA(2)=1,DA(1)=TST,DA=LOC,DIE="^ECX(727.2,"_DA(2)_",1,"_DA(1)_",""LOC"",",DR=.01 D ^DIE K DIE
"RTN","ECXLABRS",19,0)
ASKBLD ;loop on blood specimen multiple 727.22  
"RTN","ECXLABRS",20,0)
 G:$D(DTOUT)!($D(DUOUT)) END
"RTN","ECXLABRS",21,0)
 W !!!,"Step #2 - Define all blood specimens used by your facility."
"RTN","ECXLABRS",22,0)
 W ! F  S DA(1)=1,DIC="^ECX(727.2,"_DA(1)_",""BL"",",DIC(0)="QEAMOLZ" K ECXDD D FIELD^DID(727.2,2,,"SPECIFIER","ECXDD") S DIC("P")=ECXDD("SPECIFIER") K ECXDD D ^DIC K DIC Q:Y<0  D
"RTN","ECXLABRS",23,0)
 .S DA=+Y,DA(1)=1,DIE="^ECX(727.2,"_DA(1)_",""BL"",",DR=.01 D ^DIE K DIE
"RTN","ECXLABRS",24,0)
ASKUR ;loop on urine specimen multiple 727.23  
"RTN","ECXLABRS",25,0)
 G:$D(DTOUT)!($D(DUOUT)) END
"RTN","ECXLABRS",26,0)
 W !!!,"Step #3 - Define all urine specimens used by your facility."
"RTN","ECXLABRS",27,0)
 W ! F  S DA(1)=1,DIC="^ECX(727.2,"_DA(1)_",""UR"",",DIC(0)="QEAMOLZ" K ECXDD D FIELD^DID(727.2,3,,"SPECIFIER","ECXDD") S DIC("P")=ECXDD("SPECIFIER") K ECXDD D ^DIC K DIC Q:Y<0  D
"RTN","ECXLABRS",28,0)
 .S DA=+Y,DA(1)=1,DIE="^ECX(727.2,"_DA(1)_",""UR"",",DR=.01 D ^DIE K DIE
"RTN","ECXLABRS",29,0)
END K DA,DIC,DIE,DR,EC,ECNM,ECXB,ECXS,J,LOC,TST,X,Y Q
"RTN","ECXLARP")
0^22^B8825965
"RTN","ECXLARP",1,0)
ECXLARP ;BIR/CML,PTD-Print DSS Lab Tests Names Datasheet (LAR) ; 12/17/96 11:12 [ 02/26/97  2:57 PM ]
"RTN","ECXLARP",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXLARP",3,0)
EN ;entry point from option
"RTN","ECXLARP",4,0)
 S QFLG=1
"RTN","ECXLARP",5,0)
 W !!,"This option prints a list of the DSS Lab Tests used for the Lab Results",!,"Extract (LAR).  It will display the local lab data names for each test.",!,"The blood and urine specimens used locally are also listed."
"RTN","ECXLARP",6,0)
 I '$O(^ECX(727.2,0)) W !!,"The DSS LAB TEST file (#727.2) does not exist on your system!" G QUIT
"RTN","ECXLARP",7,0)
DEV W !!,"The right margin for this report is 80.",!!
"RTN","ECXLARP",8,0)
 D EN^XUTMDEVQ("START^ECXLARP","DSS - Print DSS Lab Tests") I 'POP Q
"RTN","ECXLARP",9,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","ECXLARP",10,0)
 G QUIT
"RTN","ECXLARP",11,0)
START ;
"RTN","ECXLARP",12,0)
 S (PG,QFLG,CNT)=0,$P(LN,"-",81)="" D NOW^%DTC S Y=$E(%,1,12) X ^DD("DD") S HDT=Y D HDR
"RTN","ECXLARP",13,0)
 S ECLAB="" F  S ECLAB=$O(^ECX(727.2,1,1,"B",ECLAB)) Q:ECLAB=""  Q:QFLG  S ECIEN=0 F  S ECIEN=$O(^ECX(727.2,1,1,"B",ECLAB,ECIEN)) Q:'ECIEN  Q:QFLG  D
"RTN","ECXLARP",14,0)
 .S CNT=CNT+1 D:$Y+4>IOSL HDR Q:QFLG  W !!,$J(CNT,2),". ",ECLAB D
"RTN","ECXLARP",15,0)
 ..Q:'$O(^ECX(727.2,1,1,ECIEN,"LOC",0))
"RTN","ECXLARP",16,0)
 ..S ECLOC=0 F  S ECLOC=$O(^ECX(727.2,1,1,ECIEN,"LOC",ECLOC)) Q:'ECLOC  D:$Y+4>IOSL HDR Q:QFLG  S ECLIEN=+^ECX(727.2,1,1,ECIEN,"LOC",ECLOC,0) W !?9,$P($G(^LAB(60,ECLIEN,0)),"^")
"RTN","ECXLARP",17,0)
 K ECLIEN ;** Variable added to accomodate lack of DINUM on 727.2, P #26
"RTN","ECXLARP",18,0)
 G:QFLG QUIT
"RTN","ECXLARP",19,0)
SPEC F ECFLD="BL","UR" D
"RTN","ECXLARP",20,0)
 .I $O(^ECX(727.2,1,ECFLD,0)) D
"RTN","ECXLARP",21,0)
 ..D:$Y+4>IOSL HDR Q:QFLG  W !!!,$S(ECFLD="BL":"BLOOD",1:"URINE")_" SPECIMEN TOPOGRAPHIES",!,$E(LN,1,27)
"RTN","ECXLARP",22,0)
 ..S ECIEN=0 F  S ECIEN=$O(^ECX(727.2,1,ECFLD,ECIEN)) Q:'ECIEN  D:$Y+4>IOSL HDR Q:QFLG  W !,$P($G(^LAB(61,ECIEN,0)),"^")
"RTN","ECXLARP",23,0)
QUIT ;
"RTN","ECXLARP",24,0)
 I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECXLARP",25,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLARP",26,0)
 K %I,CNT,ECFLD,ECIEN,ECLAB,ECLOC,HDT,JJ,LN,PG,QFLG,SS,X,Y,ZTSK
"RTN","ECXLARP",27,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","ECXLARP",28,0)
HDR ;HEADER
"RTN","ECXLARP",29,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLARP",30,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXLARP",31,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"DSS Lab Tests Names Datasheet",?72,"Page: ",PG,!,"Printed on ",HDT,!
"RTN","ECXLARP",32,0)
 W !?5,"DSS LAB TEST NAME",!?9,"LOCAL LAB DATA NAME(S)",!,LN
"RTN","ECXLARP",33,0)
 Q
"RTN","ECXMDELE")
0^23^B934584
"RTN","ECXMDELE",1,0)
ECXMDELE ;BIR/DMA-Server to Receive Confirmation from Austin ; 17 Mar 95 / 9:56 AM
"RTN","ECXMDELE",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXMDELE",3,0)
 I XMFROM'["POSTMASTER@FOC-AUSTIN" G DUMP
"RTN","ECXMDELE",4,0)
 S ECXQUEUE=$G(^ECX(728,1,"QUEUE"))
"RTN","ECXMDELE",5,0)
 I $TR(XQSUB,"zxcvbnmasdfghjklqwertyuiop","ZXCVBNMASDFGHJKLQWERTYUIOP")'[ECXQUEUE_" CONFIRMATION" G DUMP
"RTN","ECXMDELE",6,0)
 X XMREC S DA=+$P(XMRG,"#",2) I 'DA G DUMP
"RTN","ECXMDELE",7,0)
 S DA(1)=+$O(^ECX(727,"AB",DA,0)) G DUMP:'DA(1)
"RTN","ECXMDELE",8,0)
DEL S DIK="^ECX(727,"_DA(1)_",1," D ^DIK
"RTN","ECXMDELE",9,0)
DUMP F  X XMREC Q:XMER
"RTN","ECXMDELE",10,0)
 K DIK,DA
"RTN","ECXMDELE",11,0)
 S XMSER="S."_XQSOP,XMZ=XQMSG D REMSBMSG^XMA1C
"RTN","ECXMDELE",12,0)
 Q
"RTN","ECXMOV")
0^24^B9141428
"RTN","ECXMOV",1,0)
ECXMOV ;BIR/DMA,PTD-Transfer and Discharge Extract ; 10/29/96 13:36
"RTN","ECXMOV",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXMOV",3,0)
BEG ;entry point from option
"RTN","ECXMOV",4,0)
 D SETUP,^ECXTRAC,^ECXKILL Q
"RTN","ECXMOV",5,0)
 ;
"RTN","ECXMOV",6,0)
START ; start package specific extract
"RTN","ECXMOV",7,0)
 S QFLG=0
"RTN","ECXMOV",8,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD") S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXMOV",9,0)
 S ECED=ECED+.3
"RTN","ECXMOV",10,0)
 F ECM=2,3 S ECARG="ATT"_ECM,ECD=ECSD1 F  S ECD=$O(^DGPM(ECARG,ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  F  S ECDA=$O(^DGPM(ECARG,ECD,ECDA)) Q:'ECDA  I $D(^DGPM(ECDA,0)) S EC=^(0),DFN=+$P(EC,"^",3),ECMT=$P(EC,"^",18) I $D(^DPT(DFN,0)) S D0=^(0) D  Q:QFLG
"RTN","ECXMOV",11,0)
 .S ECTM=$$ECXTIME^ECXUTL(ECD)
"RTN","ECXMOV",12,0)
 .S WTO=$P(EC,"^",6),WTO=$P($G(^DIC(42,+WTO,44)),"^")
"RTN","ECXMOV",13,0)
 .S ECCA=$P(EC,"^",14),EC=^DGPM(ECCA,0),ECA=$P(EC,"^")
"RTN","ECXMOV",14,0)
 .S ECDL=9999999.9999999-ECD,ECDL=+$O(^DGPM("ATID2",DFN,ECDL)),ECDAL=+$O(^DGPM("ATID2",DFN,ECDL,0)) I $D(^DGPM(ECDAL,0)),$P(^(0),"^")>$P(EC,"^") S EC=^(0)
"RTN","ECXMOV",15,0)
 .S W=$P(EC,"^",6),FAC=$P($G(^DIC(42,+W,0)),"^",11),W=$P($G(^DIC(42,+W,44)),"^")
"RTN","ECXMOV",16,0)
 .S ECODE=FAC_"^"_DFN_"^"_$P(D0,"^",9)_"^"_$E($P($P(D0,"^"),",")_"    ",1,4)_"^3^"_$$ECXDATE^ECXUTL(ECD,ECXYM)_"^"
"RTN","ECXMOV",17,0)
 .S ECDI=$S(ECM=2:"",1:$$ECXDATE^ECXUTL(ECD,ECXYM))
"RTN","ECXMOV",18,0)
 .S X1=ECD,X2=$P(EC,"^") D ^%DTC S LOS=X
"RTN","ECXMOV",19,0)
 .S ECODE=ECODE_"^"_$$ECXDATE^ECXUTL(ECA,ECXYM)_"^"_ECDI_"^"_ECDA_"^"_ECM_"^"_W_"^^"_LOS_"^^"_ECMT_"^"_ECTM_"^"_WTO_"^"_$$ECXTIME^ECXUTL(ECA)_"^^^"
"RTN","ECXMOV",20,0)
 .;fac^dfn^ssn^name^in/out^day^^adm date^disc date^mov #^type^losing ward^treat spec^los^attending physician^movement type^mov time^gaining ward^adm time^last attending^last ward provider
"RTN","ECXMOV",21,0)
 .S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXMOV",22,0)
 .S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXMOV",23,0)
 .I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXMOV",24,0)
 Q
"RTN","ECXMOV",25,0)
 ;
"RTN","ECXMOV",26,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXMOV",27,0)
 S ECPACK="Movement",ECPIECE=14,ECRTN="START^ECXMOV",ECGRP="MOVS",ECHEAD="MOV",ECFILE=727.808,ECVER=7
"RTN","ECXMOV",28,0)
 Q
"RTN","ECXMOV",29,0)
 ;
"RTN","ECXMOV",30,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXMOV",31,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXNDC")
0^25^B6174901
"RTN","ECXNDC",1,0)
ECXNDC ;BIR/CML-Lookup Routine for NDC's ; [ 08/29/96  2:16 PM ]
"RTN","ECXNDC",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXNDC",3,0)
EN ;entry point from option
"RTN","ECXNDC",4,0)
 W !!,"Pharmacy Feeder Keys for DSS are built in the following manner:"
"RTN","ECXNDC",5,0)
 W !!,"Ex. ""0016006000003073531""   where characters:"
"RTN","ECXNDC",6,0)
 W !!,"1-4 (0016) = pointer to VA GENERIC NAME in the National Drug file (#50.6)"
"RTN","ECXNDC",7,0)
 W !,"5-7 (006) = pointer to VA PRODUCT NAME in the National Drug file (#50.6)"
"RTN","ECXNDC",8,0)
 W !,"8-19 (000003073531) = NDC from the local DRUG file (#50)"
"RTN","ECXNDC",9,0)
 W !!,"This option will allow lookups on the local DRUG file (#50) using NDCs",!,"from DSS Pharmacy Feeder Keys that have been rejected because the 1st"
"RTN","ECXNDC",10,0)
 W !,"seven characters are zeros (Ex. ""0000000000003073531"").  This would occur",!,"when a pharmacy item has not been matched to NDF.  To use this option,"
"RTN","ECXNDC",11,0)
 W !,"please enter the NDC (last twelve characters) from a rejected feeder key. ",!,"This will display the following information from the local DRUG file"
"RTN","ECXNDC",12,0)
 W !,"(#50): LOCAL GENERIC NAME, DISPENSE UNIT, and PRICE PER DISPENSE UNIT."
"RTN","ECXNDC",13,0)
ASK W ! S DIC=50,DIC(0)="QEA",D="NDC",DIC("A")="Select NDC: " D MIX^DIC1 K DIC G:Y<0 QUIT S DRG=+Y
"RTN","ECXNDC",14,0)
 K LN S DRGNM=$P(^PSDRUG(DRG,0),"^"),$P(LN,"-",$L(DRGNM)+1)="",ECD=$G(^PSDRUG(DRG,660))
"RTN","ECXNDC",15,0)
 W @IOF,!!,DRGNM,!,LN,!,"Dispense Unit          : ",$P(ECD,"^",8),!,"Price per Dispense Unit: ",$P(ECD,"^",6) G ASK
"RTN","ECXNDC",16,0)
QUIT K %,%H,%Y,DRG,DRGNM,ECD,LN,POP,X,Y
"RTN","ECXNDC",17,0)
 Q
"RTN","ECXNTEG")
1^26
"RTN","ECXNUAUD")
1^27
"RTN","ECXNURS")
0^28^B10028440
"RTN","ECXNURS",1,0)
ECXNURS ;BIR/DMA,PTD-Nursing Extract for DSS ; 11/01/96 10:16
"RTN","ECXNURS",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXNURS",3,0)
BEG ;entry point from option
"RTN","ECXNURS",4,0)
 D SETUP,^ECXTRAC
"RTN","ECXNURS",5,0)
 K ^TMP($J),EC0 D ^ECXKILL
"RTN","ECXNURS",6,0)
 Q
"RTN","ECXNURS",7,0)
START ;entry when queued
"RTN","ECXNURS",8,0)
 S QFLG=0,CNT=0
"RTN","ECXNURS",9,0)
 K ^TMP($J)
"RTN","ECXNURS",10,0)
 S ECED=ECED+.3,ECD=ECSD1,ECX=",2,3,25,26,43,45," F  S ECD=$O(^NURSA(214.6,"B",ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  F  S ECDA=$O(^NURSA(214.6,"B",ECD,ECDA)) Q:'ECDA  D GET Q:QFLG
"RTN","ECXNURS",11,0)
 Q:QFLG
"RTN","ECXNURS",12,0)
 G RESOLVE
"RTN","ECXNURS",13,0)
 ;
"RTN","ECXNURS",14,0)
GET ;store in ^TMP($J,DFN,DATE (w/o time)) to get only one per patient per day
"RTN","ECXNURS",15,0)
 S DIC=214.6,DIQ(0)="I",DA=ECDA,DIQ="LOC",DR=".01;.02;1;3;4;6;7" D EN^DIQ1 K DIQ,DIC,DA,DR
"RTN","ECXNURS",16,0)
 F J=.01,.02,1,3,4,6,7 S EC(J)=LOC(214.6,ECDA,J,"I")
"RTN","ECXNURS",17,0)
 S ^TMP($J,EC(.02),$P(EC(.01),"."))=EC(1)_"^"_EC(3)_"^"_EC(4)_"^"_EC(6)_"^"_EC(7)_"^"_EC(.01) K LOC(214.6,ECDA),EC
"RTN","ECXNURS",18,0)
 S CNT=CNT+1
"RTN","ECXNURS",19,0)
 I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXNURS",20,0)
 Q
"RTN","ECXNURS",21,0)
 ;
"RTN","ECXNURS",22,0)
RESOLVE ;pull from ^TMP, format and file
"RTN","ECXNURS",23,0)
 S DFN=0
"RTN","ECXNURS",24,0)
 F  S DFN=$O(^TMP($J,DFN)) Q:'DFN  I $D(^DPT(DFN,0)) S ECPN=^(0),ECO0=ECINST_"^"_DFN_"^"_$P(ECPN,"^",9)_"^"_$E($P($P(ECPN,"^"),",")_"    ",1,4)_"^3",ECD=0 D  Q:QFLG
"RTN","ECXNURS",25,0)
 .F  S ECD=$O(^TMP($J,DFN,ECD)) Q:'ECD  S ECODE=ECO0_"^"_$$ECXDATE^ECXUTL(ECD,ECXYM)_"^"_^(ECD) D  Q:QFLG
"RTN","ECXNURS",26,0)
 ..K VAIP S VAIP("D")=ECD+.24 D IN5^VADPT Q:'VAIP(1)  I +$P(ECODE,"^",12)'>+$P(VAIP(3),"^") K VAIP Q
"RTN","ECXNURS",27,0)
 ..S EC0=","_$P(VAIP(4),"^")_"," I ECX[EC0 K VAIP Q
"RTN","ECXNURS",28,0)
 ..;quit if last ward of day not where he was classified
"RTN","ECXNURS",29,0)
 ..;also quits if he's discharged
"RTN","ECXNURS",30,0)
 ..;quit if discharged or transfered to anything other than pass after the rating
"RTN","ECXNURS",31,0)
 ..S ECA="" I +VAIP(13) S ECA=$P(^DGPM(+VAIP(13),0),"^")
"RTN","ECXNURS",32,0)
 ..S (ECMN,ECTS)="" S ECMN=VAIP(1),ECTS=$P($G(^DIC(45.7,+VAIP(8),0)),"^",2) K VAIP
"RTN","ECXNURS",33,0)
 ..S $P(ECODE,"^",12)=ECMN_"^"_ECTS_"^"_$$ECXDATE^ECXUTL(ECA,ECXYM)_"^"_$$ECXTIME^ECXUTL(ECA)_"^"
"RTN","ECXNURS",34,0)
 ..;inst^dfn^ssn^name^in/out^date^acuity level(category)^entered by^classifier^nurs location^nursing bed section^mov #^treat spec^adm date^adm time
"RTN","ECXNURS",35,0)
 ..S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXNURS",36,0)
 ..S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXNURS",37,0)
 ..I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXNURS",38,0)
 K EC0,^TMP($J) Q
"RTN","ECXNURS",39,0)
 ;
"RTN","ECXNURS",40,0)
SETUP S ECPACK="Nursing",ECPIECE=7,ECRTN="START^ECXNURS",ECGRP="NURS",ECHEAD="NUR",ECFILE=727.805,ECVER=7
"RTN","ECXNURS",41,0)
 Q
"RTN","ECXNURS",42,0)
 ;
"RTN","ECXNURS",43,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXNURS",44,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXOPRX")
0^29^B21980015
"RTN","ECXOPRX",1,0)
ECXOPRX ;BIR/DMA,CML,PTD-Prescription Extract for DSS ; [ 03/26/97  2:09 PM ]
"RTN","ECXOPRX",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXOPRX",3,0)
 ;
"RTN","ECXOPRX",4,0)
BEG ;entry point from option
"RTN","ECXOPRX",5,0)
 D SETUP,^ECXTRAC
"RTN","ECXOPRX",6,0)
 D ^ECXKILL
"RTN","ECXOPRX",7,0)
 Q
"RTN","ECXOPRX",8,0)
START ;entry when queued
"RTN","ECXOPRX",9,0)
 S QFLG=0
"RTN","ECXOPRX",10,0)
 I '$D(ECINST) D
"RTN","ECXOPRX",11,0)
 .S ECINST=+$P(^ECX(728,1,0),"^") K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXOPRX",12,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXOPRX",13,0)
 S ECPROF=6 ;before V6
"RTN","ECXOPRX",14,0)
 S ECD=$O(^PSRX("AL",0)) I ECD,ECD<ECSD1 G V6
"RTN","ECXOPRX",15,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",16,0)
 F  S ECD=$O(^PSRX("AD",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  F  S ECRX=$O(^PSRX("AD",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AD",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",17,0)
 Q
"RTN","ECXOPRX",18,0)
 ;
"RTN","ECXOPRX",19,0)
V6 S ECPROF=2 ; version 6 or better
"RTN","ECXOPRX",20,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",21,0)
 S ECREF="P",ECD=ECSD1 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",22,0)
 Q
"RTN","ECXOPRX",23,0)
 ;
"RTN","ECXOPRX",24,0)
STUFF ;
"RTN","ECXOPRX",25,0)
 S ECTM=$$ECXTIME^ECXUTL(ECD),ECDATA=^PSRX(ECRX,0) I ECRFL S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0)) I ECDATA1="" Q
"RTN","ECXOPRX",26,0)
 ;ecref set to 1 in extract+5 and v6+1 and to "P" in v6+2
"RTN","ECXOPRX",27,0)
 ;refill nodes and partial nodes are identical in layout
"RTN","ECXOPRX",28,0)
 ;fills and refills from the "AL" cross-reference, partials from the "AM"
"RTN","ECXOPRX",29,0)
 S ECDFN=$P(ECDATA,"^",2),ECPRO=ECPROF_$P(ECDATA,"^",4),ECPRC=$P(ECDATA,"^",17),ECDRG=+$P(ECDATA,"^",6) Q:'$D(^DPT(+ECDFN,0))  S SSN=$P(^(0),"^",9),ECPT=$E($P($P(^(0),"^"),",")_"    ",1,4) D INP
"RTN","ECXOPRX",30,0)
 S DOB=$$ECXDOB^ECXUTL($P(^DPT(ECDFN,0),"^",3)),VET=$P($G(^("VET")),"^"),D1=$P($G(^DIC(8,+$G(^DPT(ECDFN,.36)),0)),"^",9) I D1 S D1=$C(D1+64)
"RTN","ECXOPRX",31,0)
 I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXOPRX",32,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(ECDFN,ECD) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(ECDFN,ECD) S:ECPTPR=0 ECPTPR=""
"RTN","ECXOPRX",33,0)
 I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXOPRX",34,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(ECDFN) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(ECDFN) S:ECPTPR=0 ECPTPR=""
"RTN","ECXOPRX",35,0)
 I 'ECRFL S ECMW=$P(ECDATA,"^",11),ECQTY=+$P(ECDATA,"^",7),ECDIV=$S($D(^PSRX(ECRX,2)):$P(^(2),"^",9),1:1),ECOPAY=$P($G(^PSRX(ECRX,"IB")),"^",2)]""
"RTN","ECXOPRX",36,0)
 E  S ECMW=$P(ECDATA1,"^",2),ECQTY=+$P(ECDATA1,"^",4),ECDIV=$S(+$P(ECDATA1,"^",9):$P(ECDATA1,"^",9),1:1),ECPRC=+$P(ECDATA1,"^",11),ECOPAY=$P($G(^PSRX(ECRX,1,ECRFL,"IB")),"^")]"" D
"RTN","ECXOPRX",37,0)
 .S:$P(ECDATA1,"^",17)]"" ECPRO=ECPROF_$P(ECDATA1,"^",17)
"RTN","ECXOPRX",38,0)
 S ECDS=$S(ECRFL:$P(ECDATA1,"^",10),1:$P(ECDATA,"^",8))
"RTN","ECXOPRX",39,0)
 S ECCAT=$P(^PSDRUG(ECDRG,0),"^",2),ECINV=$P(^(0),"^",3)["I",ECINV=$S(ECINV:"I",1:"")
"RTN","ECXOPRX",40,0)
 S ECUI=$P($G(^PSDRUG(ECDRG,660)),"^",8)
"RTN","ECXOPRX",41,0)
 S ECNDC=$P($G(^PSDRUG(ECDRG,2)),"^",4),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXOPRX",42,0)
 S ECNDF=$G(^PSDRUG(ECDRG,"ND")),ECNFC=$$RJ^XLFSTR($P(ECNDF,"^"),4,0)_$$RJ^XLFSTR($P(ECNDF,"^",3),3,0)_ECNFC
"RTN","ECXOPRX",43,0)
 S ECODE=ECINST_"^"_ECDFN_"^"_SSN_"^"_ECPT_"^"_ECA_"^"_$$ECXDATE^ECXUTL(ECD,ECXYM)_"^"_ECDIV_"^"_ECPRO_"^"_ECCAT_"^^^^^"_ECQTY_"^"_(ECQTY*ECPRC)_"^^"_ECMN_"^"_ECTS_"^^"_ECUI_"^"_DOB_"^"_D1_"^"_VET_"^"_ECOPAY_"^"_ECNFC_"^"_ECINV_"^"_ECDS
"RTN","ECXOPRX",44,0)
 I ECMW="M" S $P(ECODE,"^",10)=1 I $D(^PSRX("AR",ECD,ECRX)) S $P(ECODE,"^",10)=2
"RTN","ECXOPRX",45,0)
 I ECRFL=0 S $P(ECODE,"^",12)=1
"RTN","ECXOPRX",46,0)
 S ECODE=ECODE_"^"_ECPTTM_"^"_ECPTPR_"^"_ECTM_"^"_$P($G(^DIC(10,+$P(^DPT(ECDFN,0),"^",6),0)),"^",2)_"^"
"RTN","ECXOPRX",47,0)
 ;inst^dfn^ssn^name^in/out^day^division^provider^drug category^mail^placeholder1^new^placeholder2^qty^cost^placeholder3^
"RTN","ECXOPRX",48,0)
 ;mov #^treat spec^placeholder4^unit of issue^dob^elig^vet^copay^feeder key^investigational^days supply^primary care team^primary care provider^time^race
"RTN","ECXOPRX",49,0)
 S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXOPRX",50,0)
 S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX(ECFILE," D IX^DIK K DIK,DA
"RTN","ECXOPRX",51,0)
 I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXOPRX",52,0)
 Q
"RTN","ECXOPRX",53,0)
 ;
"RTN","ECXOPRX",54,0)
SETUP S ECPACK="Prescription",ECPIECE=2,ECRTN="START^ECXOPRX",ECGRP="PRES",ECHEAD="PRE",ECFILE=727.81,ECVER=7
"RTN","ECXOPRX",55,0)
 Q
"RTN","ECXOPRX",56,0)
 ;
"RTN","ECXOPRX",57,0)
INP ; checks for in/outpatient status and gets movement number
"RTN","ECXOPRX",58,0)
 S ECA=1,ECTS="" K VAIP S VAIP("D")=ECD,DFN=+ECDFN D IN5^VADPT S ECMN=VAIP(1) I ECMN S ECA=3,ECTS=$P($G(^DIC(45.7,+VAIP(8),0)),"^",2)
"RTN","ECXOPRX",59,0)
 K VAIP,VAERR
"RTN","ECXOPRX",60,0)
 Q
"RTN","ECXOPRX",61,0)
 ;
"RTN","ECXOPRX",62,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXOPRX",63,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPAI")
0^30^B8752816
"RTN","ECXPAI",1,0)
ECXPAI ;BIR/DMA,PTD-PAI Extract from File 45.9 ; 10/30/96 14:25
"RTN","ECXPAI",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXPAI",3,0)
BEG ;entry point from option
"RTN","ECXPAI",4,0)
 D SETUP,^ECXTRAC,^ECXKILL
"RTN","ECXPAI",5,0)
 Q
"RTN","ECXPAI",6,0)
 ;
"RTN","ECXPAI",7,0)
START ; start package specific extract
"RTN","ECXPAI",8,0)
 S QFLG=0
"RTN","ECXPAI",9,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXPAI",10,0)
 F  S ECD=$O(^DG(45.9,"AA",ECD)),ECF=0 Q:'ECD  Q:ECD>ECED  F  S ECF=$O(^DG(45.9,"AA",ECD,ECF)) Q:'ECF  I $D(^DG(45.9,ECF,0)) S EC=^(0),DFN=+EC,ECTD=$P(EC,"^",7) I $D(^DPT(DFN,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXPAI",11,0)
 .S ECDA=0 F  S ECDA=+$O(^DGPM("APCA",DFN,ECDA)),ECTD1=ECTD-.0001 Q:'ECDA  I $D(^DGPM(ECDA,0)) F  S ECTD1=+$O(^DGPM("APCA",DFN,ECDA,ECTD1)) Q:'ECTD1  Q:ECTD1>(ECTD+.3)  D  Q:QFLG
"RTN","ECXPAI",12,0)
 ..S EC1=0 F  S EC1=+$O(^DGPM("APCA",DFN,ECDA,ECTD1,EC1)) Q:'EC1  I $D(^DGPM(EC1,0)),$P(^(0),"^",2)'=3 S ECADM=$P(^DGPM(ECDA,0),"^") D  Q:QFLG
"RTN","ECXPAI",13,0)
 ...S ECODE="^"_DFN_"^"_$P(EC,"^",9)_"^"_$E($P($P(EC,"^"),",")_"    ",1,4)_"^3^"_$$ECXDATE^ECXUTL(ECD,ECXYM)
"RTN","ECXPAI",14,0)
 ...S ECODE=ECODE_"^"_$$ECXDATE^ECXUTL(ECADM,ECXYM)_"^"_$$ECXTIME^ECXUTL(ECADM)_"^"_$$ECXDATE^ECXUTL(ECTD1,ECXYM)
"RTN","ECXPAI",15,0)
 ...S ECODE=ECODE_"^"_$$ECXTIME^ECXUTL(ECTD1)_"^"_$P($G(^DIC(10,+$P(EC,"^",6),0)),"^",2)_"^"
"RTN","ECXPAI",16,0)
 ...; set data into specific extract file
"RTN","ECXPAI",17,0)
 ...S EC7=-$O(^ECX(ECFILE,"AINV",""))
"RTN","ECXPAI",18,0)
 ...I EC7>0 S ECODE1=^ECX(ECFILE,EC7,0) Q:ECODE=$P(ECODE1,"^",4,14)  I $P(ECODE,"^",2,6)=$P(ECODE1,"^",5,9),$P(ECODE,"^",9)=$P(ECODE1,"^",12),$P(ECODE,"^",7,8)'=$P(ECODE1,10,11) S $P(^ECX(ECFILE,EC7,0),"^",10,11)=$P(ECODE,"^",7,8) Q
"RTN","ECXPAI",19,0)
 ...K EC7,ECODE1 S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXPAI",20,0)
 ...S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPAI",21,0)
 ...I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPAI",22,0)
 ...;fac^dfn^ssn^name^i/o^day^admission date^admission time^admission/transfer date^admission/transfer time^race
"RTN","ECXPAI",23,0)
 Q
"RTN","ECXPAI",24,0)
 ;
"RTN","ECXPAI",25,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPAI",26,0)
 S ECPACK="PAF",ECPIECE=20,ECRTN="START^ECXPAI",ECGRP="PAI",ECVER=7
"RTN","ECXPAI",27,0)
 S ECHEAD="PAS"
"RTN","ECXPAI",28,0)
 S ECFILE=727.823
"RTN","ECXPAI",29,0)
 Q
"RTN","ECXPAI",30,0)
 ;
"RTN","ECXPAI",31,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPAI",32,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPCT")
0^31^B2418766
"RTN","ECXPCT",1,0)
ECXPCT ;BIR/CML-Print List of Primary Care Teams ; [ 02/28/97  12:16 PM ]
"RTN","ECXPCT",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXPCT",3,0)
EN ;entry point from option
"RTN","ECXPCT",4,0)
 W !!,"This option prints a list of all Primary Care Teams.  The list is sorted",!,"alphabetically by TEAM name and displays the pointer to the TEAM file (#404.51)."
"RTN","ECXPCT",5,0)
 I '$O(^SCTM(404.51,0)) W !!,"The TEAM file (#404.51) does not exist on your system!" G QUIT
"RTN","ECXPCT",6,0)
 W !!,"The right margin for this report is 80.",!!
"RTN","ECXPCT",7,0)
 W ! K DIC S DIC="^SCTM(404.51,",FLDS=".01;""TEAM NAME"",NUMBER;""TEAM FILE POINTER"";C45;R9",BY=".01",(FR,TO)="",DHD="Primary Care Teams",L=0
"RTN","ECXPCT",8,0)
 D EN1^DIP
"RTN","ECXPCT",9,0)
QUIT Q
"RTN","ECXPIV1")
0^32^B507517
"RTN","ECXPIV1",1,0)
ECXPIV1 ;BIR/DMA-Store Data from IV Package into 728.113 ; 03 Nov 95 / 12:58 PM
"RTN","ECXPIV1",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXPIV1",3,0)
 ;called from the IV routine PSIVSTAT
"RTN","ECXPIV1",4,0)
 ;load IV data into an EC file for later extract to vendor
"RTN","ECXPIV1",5,0)
 ;
"RTN","ECXPIV1",6,0)
 S X="ECXY1" X ^%ZOSF("TEST") I $T D ^ECXY1
"RTN","ECXPIV1",7,0)
 I '$D(^ECX(728.113)) Q
"RTN","ECXPIV1",8,0)
 L +^ECX(728.113,0):1 Q:'$T
"RTN","ECXPIV1",9,0)
 N DA,DIK
"RTN","ECXPIV1",10,0)
 S EC=-$O(^ECX(728.113,"AINV","")) F  S EC=EC+1 Q:'$D(^ECX(728.113,EC))
"RTN","ECXPIV1",11,0)
 S ^ECX(728.113,EC,0)=EC_"^"_ECUD L -^ECX(728.113,0)
"RTN","ECXPIV1",12,0)
 S DA=EC,DIK="^ECX(728.113," D IX^DIK
"RTN","ECXPIV1",13,0)
 K EC Q
"RTN","ECXPIVD")
0^33^B17545333
"RTN","ECXPIVD",1,0)
ECXPIVD ;BIR/DMA,CML,PTD-Extract from IV STATS File (#50.8) ; [ 12/05/96  10:41 AM ]
"RTN","ECXPIVD",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXPIVD",3,0)
BEG ;entry point from option
"RTN","ECXPIVD",4,0)
 D SETUP,^ECXTRAC,^ECXKILL
"RTN","ECXPIVD",5,0)
 Q
"RTN","ECXPIVD",6,0)
 ;
"RTN","ECXPIVD",7,0)
START ; start package specific extract
"RTN","ECXPIVD",8,0)
 S QFLG=0
"RTN","ECXPIVD",9,0)
 S ECED=ECED+.3
"RTN","ECXPIVD",10,0)
 K ^TMP($J)
"RTN","ECXPIVD",11,0)
 S ECIV=0 F  S ECIV=$O(^PS(50.8,ECIV)),ECD=ECSD1 Q:'ECIV  F  S ECD=$O(^PS(50.8,ECIV,2,ECD)) Q:'ECD  Q:ECD>ECED  K ^TMP($J) D  Q:QFLG
"RTN","ECXPIVD",12,0)
 .;go thru AC crossreference to get pointers to 52.6 and 52.7
"RTN","ECXPIVD",13,0)
 .F ECJ=52.6,52.7 S ECK=0 F  S ECK=$O(^PS(50.8,ECIV,2,ECD,2,"AC",ECJ,ECK)),ECL=0 Q:'ECK  F   S ECL=$O(^PS(50.8,ECIV,2,ECD,2,"AC",ECJ,ECK,ECL)) Q:'ECL  S ^TMP($J,ECL,ECK)=""
"RTN","ECXPIVD",14,0)
 .S ECI=0 F  S ECI=$O(^PS(50.8,ECIV,2,ECD,2,ECI)) Q:'ECI  I $D(^(ECI,0)) S ECC=$P(^(0),"^",5),ECF=+$P(^(0),"^",7),ECDRG=+$O(^TMP($J,ECI,0)),EC50=+$P($G(^PS(ECF,ECDRG,0)),"^",2) D  Q:QFLG
"RTN","ECXPIVD",15,0)
 ..S ECCAT=$P($G(^PSDRUG(EC50,0)),"^",2),ECNDC=$P($G(^(2)),"^",4),ECNDF=$G(^("ND")),ECINV=$P(^(0),"^",3),ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXPIVD",16,0)
 ..S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXPIVD",17,0)
 ..S ECNFC=$$RJ^XLFSTR($P(ECNDF,"^"),4,0)_$$RJ^XLFSTR($P(ECNDF,"^",3),3,0)_ECNFC
"RTN","ECXPIVD",18,0)
 ..S ECDFN=0 F  S ECDFN=$O(^PS(50.8,ECIV,2,ECD,2,ECI,1,ECDFN)) Q:'ECDFN  I $D(^(ECDFN,0)) S EC=^(0),ECQ=$P(EC,"^",2)-$P(EC,"^",3)-$P(EC,"^",6),ECCS=ECQ*ECC,ECW=$P(EC,"^",5) I ECQ D  Q:QFLG
"RTN","ECXPIVD",19,0)
 ...I $D(^DPT(ECDFN,0)) S EC1=^(0),ECODE=ECINST_"^"_ECDFN_"^"_$P(EC1,"^",9)_"^"_$E($P($P(EC1,"^"),",")_"    ",1,4)_"^"_$S(ECW=.5:1,1:3)_"^"_$$ECXDATE^ECXUTL(ECD,ECXYM)_"^"_ECCAT_"^"_ECQ,(ECWD,ECMN,ECTS,ECADM)="" D
"RTN","ECXPIVD",20,0)
 ....I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXPIVD",21,0)
 .....S ECPTTM=+$$OUTPTTM^SDUTL3(ECDFN,ECD) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(ECDFN,ECD) S:ECPTPR=0 ECPTPR=""
"RTN","ECXPIVD",22,0)
 ....I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXPIVD",23,0)
 .....S ECPTTM=+$$OUTPTTM^SDUTL3(ECDFN) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(ECDFN) S:ECPTPR=0 ECPTPR=""
"RTN","ECXPIVD",24,0)
 ....I ECW=.5 S ECWD="CLI"
"RTN","ECXPIVD",25,0)
 ....E  S ECWD=$P($G(^DIC(42,+ECW,44)),"^") K VAIP S VAIP("D")=ECD,DFN=ECDFN D IN5^VADPT S ECMN=VAIP(1),ECTS=$P($G(^DIC(45.7,+VAIP(8),0)),"^",2) S:+VAIP(13) ECADM=$P(^DGPM(+VAIP(13),0),"^") K VAIP
"RTN","ECXPIVD",26,0)
 ....S ECODE=ECODE_"^"_ECWD_"^"_ECCS_"^"_ECMN_"^"_ECTS_"^"_ECNDC_"^"_ECINV_"^^^^"_ECPTTM_"^"_ECPTPR_"^000000^"_$$ECXDATE^ECXUTL(ECADM,ECXYM)_"^"_$$ECXTIME^ECXUTL(ECADM)_"^^"
"RTN","ECXPIVD",27,0)
 ....;if this is an outpatient, send null for admission date and "000000" for admission time
"RTN","ECXPIVD",28,0)
 ....I ECW=.5 S $P(ECODE,"^",21)="",$P(ECODE,"^",22)="000000"
"RTN","ECXPIVD",29,0)
 ....;fac^dfn^ssn^name^i/o^day^va class^qty^ward^cost^movement #^treat spec^ndc^investigational^iv dispensing fee^new feeder key^total doses^primary care team^primary care provider^IVP time^adm date^adm time^dss identifier
"RTN","ECXPIVD",30,0)
 ....S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXPIVD",31,0)
 ....S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPIVD",32,0)
 ....I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPIVD",33,0)
 Q
"RTN","ECXPIVD",34,0)
 ;
"RTN","ECXPIVD",35,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPIVD",36,0)
 S ECPACK="IVs (detail)",ECPIECE=19,ECRTN="START^ECXPIVD",ECGRP="IV",ECHEAD="IVP",ECFILE=727.819,ECVER=3
"RTN","ECXPIVD",37,0)
 Q
"RTN","ECXPIVD",38,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPIVD",39,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPIVDN")
0^34^B23254335
"RTN","ECXPIVDN",1,0)
ECXPIVDN ;BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ; [ 03/26/97  2:10 PM ]
"RTN","ECXPIVDN",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXPIVDN",3,0)
START ; start package specific extract
"RTN","ECXPIVDN",4,0)
 S QFLG=0
"RTN","ECXPIVDN",5,0)
 I '$D(ECINST) D
"RTN","ECXPIVDN",6,0)
 .S ECINST=+$P(^ECX(728,1,0),"^") K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPIVDN",7,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPIVDN",8,0)
 S ECED=ECED+.3
"RTN","ECXPIVDN",9,0)
 K ^TMP($J)
"RTN","ECXPIVDN",10,0)
 S ECD=ECSD1
"RTN","ECXPIVDN",11,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  I $D(^DPT(DFN,0)) S EC=^(0) D DEMOG F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J) S ECVOL=0 D  Q:QFLG
"RTN","ECXPIVDN",12,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXPIVDN",13,0)
 ..S DRG=$P(EC,"^",4) I $P(EC,"^",8)]"" D
"RTN","ECXPIVDN",14,0)
 ...I '$D(^TMP($J,"A",DRG)) S ^(DRG)=$P(EC,"^",7,8),^(DRG,1)=0,^(2)=$P(EC,"^",12)
"RTN","ECXPIVDN",15,0)
 ...S ^(1)=^TMP($J,"A",DRG,1)+$S($P(EC,"^",6)=1:1,$P(EC,"^",6)=4:0,1:-1)
"RTN","ECXPIVDN",16,0)
 ..I $P(EC,"^",9) D
"RTN","ECXPIVDN",17,0)
 ...I '$D(^TMP($J,"S",DRG)) S ^(DRG)=$P(EC,"^",9)_"^ML",^(DRG,1)=0,^(2)=$P(EC,"^",12),ECVOL=$P(EC,"^",9)+ECVOL
"RTN","ECXPIVDN",18,0)
 ...S ^(1)=^TMP($J,"S",DRG,1)+$S($P(EC,"^",6)=1:1,$P(EC,"^",6)=4:0,1:-1)
"RTN","ECXPIVDN",19,0)
 ..S ECPRO=$P(EC,"^",10),ECTYP=$P(EC,"^",11),ECTOTC=0,ECDTTM=$$ECXTIME^ECXUTL($P(EC,"^",5))
"RTN","ECXPIVDN",20,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXPIVDN",21,0)
 .;leave the next line in case the decision is made to send volume designations
"RTN","ECXPIVDN",22,0)
 .;I ECTYP="H" S ECTYP=ECTYP_$S(ECVOL'>1000:1,ECVOL'>2000:2,1:3)
"RTN","ECXPIVDN",23,0)
 .F SA="S","A" S DRG="" F  S DRG=$O(^TMP($J,SA,DRG)) Q:DRG=""  S ECST=^(DRG),CNT=^(DRG,1),COST=^(2),ECTOTC=ECTOTC+COST,COST=COST*CNT I $D(^PSDRUG(DRG,0)) S EC0=^(0),EC2=$G(^(2)),ECND=$G(^("ND")) D  Q:QFLG
"RTN","ECXPIVDN",24,0)
 ..S ECDIV=""
"RTN","ECXPIVDN",25,0)
 ..I ECA=1,$D(^PS(55,DFN,"IV",ON,2)) S ECIVRM=$P(^(2),"^",2),ECDIV=$P(^PS(59.5,ECIVRM,0),"^",4)
"RTN","ECXPIVDN",26,0)
 ..I ECA=3 S ECDIV=$P(^SC(ECW,0),"^",15)
"RTN","ECXPIVDN",27,0)
 ..S ECODE=ECDIV_"^"_DFN_"^"_SSN_"^"_ECNA_"^"_ECA_"^"_$$ECXDATE^ECXUTL(ECD,ECXYM)_"^"_$P(EC0,"^",2)_"^"_CNT_"^"_ECW_"^"_COST_"^"_ECMN_"^"_ECTS_"^"
"RTN","ECXPIVDN",28,0)
 ..S ECINV=$P(EC0,"^",3),ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXPIVDN",29,0)
 ..S ECST=CNT*ECST_" "_$P(ECST,"^",2)
"RTN","ECXPIVDN",30,0)
 ..S ECNDC=$P(EC2,"^",4),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXPIVDN",31,0)
 ..S ECNFC=$$RJ^XLFSTR($P(ECND,"^"),4,0)_$$RJ^XLFSTR($P(ECND,"^",3),3,0)_ECNFC
"RTN","ECXPIVDN",32,0)
 ..S ECODE=ECODE_ECNDC_"^"_ECINV_"^"_ECTYP_"^"_ECNFC_"^"_ECST_"^"_ECPTTM_"^"_ECPTPR_"^"_ECDTTM_"^"_$$ECXDATE^ECXUTL(ECADM,ECXYM)_"^"_$$ECXTIME^ECXUTL(ECADM)_"^^"
"RTN","ECXPIVDN",33,0)
 ..;if this is an outpatient, send null for admission date and "000000" for admission time
"RTN","ECXPIVDN",34,0)
 ..I ECA=1 S $P(ECODE,"^",21)="",$P(ECODE,"^",22)="000000"
"RTN","ECXPIVDN",35,0)
 ..;facility^dfn^ssn^name^in/out pat^day^VA class^qty^ward^cost^movement #^treating specialty^ndc^investigational^dispensing fee^new feeder key^total doses per day^primary care team^primary care provider^IVP time^adm date^adm time^dss identifier
"RTN","ECXPIVDN",36,0)
 ..S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXPIVDN",37,0)
 ..S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPIVDN",38,0)
 ..I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPIVDN",39,0)
 K ^TMP($J),CNT,COST,DA,DFN,DIC,DIK,DRG,EC,EC0,EC2,EC7,EC8,ECA,ECD,ECDA,ECINV,ECMN,ECNA,ECND,ECNDC,ECNFC,ECPRO,ECST,ECTOTC,ECTS,ECTSR,ECTYP,ECVOL,ECW,ECWR,ON,SA,SSN,X,Y
"RTN","ECXPIVDN",40,0)
 Q
"RTN","ECXPIVDN",41,0)
 ;
"RTN","ECXPIVDN",42,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPIVDN",43,0)
 S ECPACK="IVs (detail)",ECPIECE=19,ECRTN="START^ECXPIVDN",ECGRP="IV",ECHEAD="IVP",ECFILE=727.819,ECVER=7
"RTN","ECXPIVDN",44,0)
 Q
"RTN","ECXPIVDN",45,0)
 ;
"RTN","ECXPIVDN",46,0)
DEMOG ;new patient - get primary care team and provider, name, SSN, and VAIP
"RTN","ECXPIVDN",47,0)
 I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXPIVDN",48,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(DFN,ECD) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(DFN,ECD) S:ECPTPR=0 ECPTPR=""
"RTN","ECXPIVDN",49,0)
 I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXPIVDN",50,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(DFN) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(DFN) S:ECPTPR=0 ECPTPR=""
"RTN","ECXPIVDN",51,0)
 S SSN=$P(EC,"^",9),ECNA=$E($P($P(EC,"^"),",")_"    ",1,4)
"RTN","ECXPIVDN",52,0)
INP ; checks for in/outpatient status and gets movement number
"RTN","ECXPIVDN",53,0)
 S ECA=1,(ECTS,ECADM)="",ECW=.5,(ECWR,ECTSR)="OUTPATIENT" K VAIP S VAIP("D")=ECD D IN5^VADPT S ECMN=VAIP(1)
"RTN","ECXPIVDN",54,0)
 I ECMN S ECA=3,ECTS=$P($G(^DIC(45.7,+VAIP(8),0)),"^",2),ECW=+$G(^DIC(42,+VAIP(5),44)),ECWR=$P(VAIP(5),"^",2),ECTSR=$P(VAIP(8),"^",2)
"RTN","ECXPIVDN",55,0)
 I +VAIP(13) S ECADM=$P(^DGPM(+VAIP(13),0),"^")
"RTN","ECXPIVDN",56,0)
 K VAIP,VAERR
"RTN","ECXPIVDN",57,0)
 Q
"RTN","ECXPIVDN",58,0)
 ;
"RTN","ECXPIVDN",59,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPIVDN",60,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPURG")
0^35^B14231818
"RTN","ECXPURG",1,0)
ECXPURG ;BIR/CML-Driver for Purge of DSS Data from Local Extract & Holding Files ; [ 12/03/96  5:19 PM ]
"RTN","ECXPURG",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXPURG",3,0)
EN ;entry point from option
"RTN","ECXPURG",4,0)
 W @IOF,!!,"This option will allow you to purge:"
"RTN","ECXPURG",5,0)
 W !,"1. individual or a range of DSS extracts, or"
"RTN","ECXPURG",6,0)
 W !,"2. data that resides in the ""holding files"" for the IVP and UDP extracts."
"RTN","ECXPURG",7,0)
 W !!,"Care must be taken for several reasons:"
"RTN","ECXPURG",8,0)
 W !!,"-  You can purge ANY existing extract.  This includes transmitted and non-"
"RTN","ECXPURG",9,0)
 W !,"   transmitted extracts as well as extracts that did not run to completion"
"RTN","ECXPURG",10,0)
 W !,"   due to errors or system problems."
"RTN","ECXPURG",11,0)
 W !,"-  Choosing a range of extracts (or a broad date range for the ""holding"
"RTN","ECXPURG",12,0)
 W !,"   files"") could mean an excessively large number of records and be very"
"RTN","ECXPURG",13,0)
 W !,"   CPU intensive.  Please be sure to queue this purge for off-hours and"
"RTN","ECXPURG",14,0)
 W !,"   limit the number of extracts to be purged per a single queued session."
"RTN","ECXPURG",15,0)
 W !,"-  The IVP and UDP ""holding"" files are intermediate files that are"
"RTN","ECXPURG",16,0)
 W !,"   populated ""realtime"" by inpatient pharmacy activity.  These files are"
"RTN","ECXPURG",17,0)
 W !,"   then used to generate the IVP and UDP extracts and CANNOT be recreated."
"RTN","ECXPURG",18,0)
 W !,"   Once they are purged for a date range, extracts can no longer be"
"RTN","ECXPURG",19,0)
 W !,"   generated for that time period."
"RTN","ECXPURG",20,0)
 ;
"RTN","ECXPURG",21,0)
 K DIR W !
"RTN","ECXPURG",22,0)
 S DIR(0)="SAM^E:Extract Files;I:IVP Holding File;U:UDP Holding File"
"RTN","ECXPURG",23,0)
 S DIR("A")="Purge (E)xtract files, (I)VP data, or (U)DP data? "
"RTN","ECXPURG",24,0)
 D ^DIR K DIR G:$D(DIRUT) QUIT S ECY=Y
"RTN","ECXPURG",25,0)
 I ECY="E" D ^ECXPURG1 I $D(ECLOC) S ZTSAVE("ECLOC(")="",ZTIO="",ZTRTN="PUR1^ECXPURG",ZTDESC="DSS - Purge of Extract Files" D QUE
"RTN","ECXPURG",26,0)
 I ECY="I" D DATES^ECXPURG1 I $D(ECBDT)&($D(ECEDT)) S (ZTSAVE("ECBDT"),ZTSAVE("ECEDT"))="",ZTIO="",ZTRTN="PUR2^ECXPURG",ZTDESC="DSS - Purge of IVP Holding File" D QUE
"RTN","ECXPURG",27,0)
 I ECY="U" D DATES^ECXPURG1 I $D(ECBDT)&($D(ECEDT)) S (ZTSAVE("ECBDT"),ZTSAVE("ECEDT"))="",ZTIO="",ZTRTN="PUR3^ECXPURG",ZTDESC="DSS - Purge of UDP Holding File" D QUE
"RTN","ECXPURG",28,0)
QUIT ;
"RTN","ECXPURG",29,0)
 K %X,%Y,EC,ECBDT,ECDATE,ECDT,ECEDT,ECEX,ECFR,ECLOC,ECRC,ECTO,ECTRN,ECTYP,ECY,HDT,HI,JJ,LN,LO,PG,QFLG,SS,X,Y,ZTSK
"RTN","ECXPURG",30,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECXPURG",31,0)
 Q
"RTN","ECXPURG",32,0)
QUE W $C(7),$C(7),!!?3,"<<This purge should be queued to run during non-peak hours.>>",!
"RTN","ECXPURG",33,0)
 D ^%ZTLOAD
"RTN","ECXPURG",34,0)
 I $D(ZTSK) W !,"Request queued as Task #",ZTSK,".",!
"RTN","ECXPURG",35,0)
 Q
"RTN","ECXPURG",36,0)
 ;
"RTN","ECXPURG",37,0)
PUR1 ; entry point for queued purge job of extract files
"RTN","ECXPURG",38,0)
 S ECDA=0 F  S ECDA=$O(ECLOC(ECDA)) Q:'ECDA  S ECFILE=^ECX(727,ECDA,"FILE") D
"RTN","ECXPURG",39,0)
 .S ECJ=0 F  S ECJ=$O(^ECX(ECFILE,"AC",ECDA,ECJ)) Q:'ECJ  S DIK="^ECX("_ECFILE_",",DA=ECJ D ^DIK K DIK,DA
"RTN","ECXPURG",40,0)
 .S ^ECX(727,ECDA,"PURG")=DT
"RTN","ECXPURG",41,0)
 G QUIT
"RTN","ECXPURG",42,0)
PUR2 ; entry point for queued purge job of IVP holding file (#728.113)
"RTN","ECXPURG",43,0)
 F ECDT=ECBDT-1:0 S ECDT=$O(^ECX(728.113,"A",ECDT)) Q:'ECDT  Q:ECDT>ECEDT  S ECPT=0 F  S ECPT=$O(^ECX(728.113,"A",ECDT,ECPT)) Q:'ECPT  D
"RTN","ECXPURG",44,0)
 .S ECOR=0 F  S ECOR=$O(^ECX(728.113,"A",ECDT,ECPT,ECOR)) Q:'ECOR  D
"RTN","ECXPURG",45,0)
 ..S ECREC=0 F  S ECREC=$O(^ECX(728.113,"A",ECDT,ECPT,ECOR,ECREC)) Q:'ECREC  D
"RTN","ECXPURG",46,0)
 ...S DIK="^ECX(728.113,",DA=ECREC D ^DIK K DIK,DA
"RTN","ECXPURG",47,0)
 G QUIT
"RTN","ECXPURG",48,0)
PUR3 ; entry point for queued purge job of UDP holding file (#728.904)
"RTN","ECXPURG",49,0)
 F ECDT=ECBDT-1:0 S ECDT=$O(^ECX(728.904,"A",ECDT)) Q:'ECDT  Q:ECDT>ECEDT  D
"RTN","ECXPURG",50,0)
 .S ECREC=0 F  S ECREC=$O(^ECX(728.904,"A",ECDT,ECREC)) Q:'ECREC  D
"RTN","ECXPURG",51,0)
 ..S DIK="^ECX(728.904,",DA=ECREC D ^DIK K DIK,DA
"RTN","ECXPURG",52,0)
 G QUIT
"RTN","ECXPURG1")
0^36^B23804431
"RTN","ECXPURG1",1,0)
ECXPURG1 ;BIR/CML-Purge of DSS Extract Files (CONTINUED) ; [ 12/05/96  11:58 AM ]
"RTN","ECXPURG1",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXPURG1",3,0)
GET ;compile list of purgable extracts
"RTN","ECXPURG1",4,0)
 K HI,LO,ECBDT,ECEDT,ECLOC,^TMP("ECXPURG",$J)
"RTN","ECXPURG1",5,0)
 S QFLG=1 W !!,"...one moment please"
"RTN","ECXPURG1",6,0)
 S ECEX=0 F  S ECEX=$O(^ECX(727,ECEX)) Q:'ECEX  I '$G(^ECX(727,ECEX,"PURG")),$D(^ECX(727,ECEX,0)) S EC=^(0) D
"RTN","ECXPURG1",7,0)
 .S ^TMP("ECXPURG",$J,$P(EC,"^",3),ECEX)="",ECLOC(ECEX)=$P(EC,"^",3)_"^"_$P(EC,"^",4,5)
"RTN","ECXPURG1",8,0)
 I '$D(^TMP("ECXPURG",$J)) W !!,"There are no extracts that can be purged at this time." G DONE
"RTN","ECXPURG1",9,0)
ASK1 ;ask for print
"RTN","ECXPURG1",10,0)
 W !
"RTN","ECXPURG1",11,0)
 K DIR S DIR(0)="Y",DIR("A")="Do you want to print a list of extracts that can be purged",DIR("B")="NO"
"RTN","ECXPURG1",12,0)
 D ^DIR K DIR I $D(DIRUT) K ECLOC G DONE
"RTN","ECXPURG1",13,0)
 G:'Y ASK2
"RTN","ECXPURG1",14,0)
 W !!,"The right margin for this report is 80.",!!
"RTN","ECXPURG1",15,0)
 K ZTSAVE S ZTSAVE("^TMP(""ECXPURG"",$J,")=""
"RTN","ECXPURG1",16,0)
 D EN^XUTMDEVQ("PRT^ECXPURG1","DSS - Print Purgable Extracts",.ZTSAVE) I 'POP G ASK2
"RTN","ECXPURG1",17,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","ECXPURG1",18,0)
ASK2 ;ask for extract range
"RTN","ECXPURG1",19,0)
 S LO=$O(ECLOC(0)),HI=$O(ECLOC(" "),-1)
"RTN","ECXPURG1",20,0)
 S DIR(0)="L^"_LO_":"_HI_"",DIR("A")="Select extracts to be purged"
"RTN","ECXPURG1",21,0)
 S DIR("?",1)="Choose the numbers (or numbers) of the extracts you wish to purge,",DIR("?")="(E.g., 1-3,17,20 to choose 1 thru 3 and 17 and 20)."
"RTN","ECXPURG1",22,0)
 W ! D ^DIR K DIR I $D(DIRUT) K ECLOC G DONE
"RTN","ECXPURG1",23,0)
 S JJ=0,Y=","_Y F  S JJ=$O(ECLOC(JJ)) Q:'JJ  S JZ=","_JJ_"," I Y'[JZ K ECLOC(JJ)
"RTN","ECXPURG1",24,0)
 I '$D(ECLOC) W !!,"You have not chosen a valid extract number.  Try again." G GET
"RTN","ECXPURG1",25,0)
ASK3 W !!,"I will purge the following extract(s):"
"RTN","ECXPURG1",26,0)
 S JJ=0 F  S JJ=$O(ECLOC(JJ)) Q:'JJ  D
"RTN","ECXPURG1",27,0)
 .W !?5,"#",JJ," - ",$P(ECLOC(JJ),"^")
"RTN","ECXPURG1",28,0)
 .W ?47,$$FMTE^XLFDT($P(ECLOC(JJ),"^",2),"2FD")," to ",$$FMTE^XLFDT($P(ECLOC(JJ),"^",3),"2FD")
"RTN","ECXPURG1",29,0)
 W !! K DIR S DIR(0)="Y",DIR("A")="Is this OK",DIR("B")="NO"
"RTN","ECXPURG1",30,0)
 S DIR("?",1)="    Enter:"
"RTN","ECXPURG1",31,0)
 S DIR("?",2)="      ""YES"" if you agree with this list and would like to proceed,"
"RTN","ECXPURG1",32,0)
 S DIR("?",3)="       ""NO"" if you would like to make a different selection, or"
"RTN","ECXPURG1",33,0)
 S DIR("?")="        ""^"" to exit option."
"RTN","ECXPURG1",34,0)
 D ^DIR K DIR I $D(DIRUT) K ECLOC G DONE
"RTN","ECXPURG1",35,0)
 I 'Y G GET
"RTN","ECXPURG1",36,0)
 ; at this point, the local array ECLOC( is passed back to ^ECXPURG
"RTN","ECXPURG1",37,0)
 G DONE
"RTN","ECXPURG1",38,0)
QUIT ;
"RTN","ECXPURG1",39,0)
 I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECXPURG1",40,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXPURG1",41,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECXPURG1",42,0)
DONE K ^TMP("ECXPURG",$J),ZTSK Q
"RTN","ECXPURG1",43,0)
PRT ;print list of extracts
"RTN","ECXPURG1",44,0)
 S (PG,QFLG)=0,$P(LN,"-",81)="" D NOW^%DTC S Y=$E(%,1,12) X ^DD("DD") S HDT=Y D HDR
"RTN","ECXPURG1",45,0)
 S ECTYP="" F  S ECTYP=$O(^TMP("ECXPURG",$J,ECTYP)) Q:ECTYP=""  Q:QFLG  D:$Y+4>IOSL HDR Q:QFLG  W !!,ECTYP D
"RTN","ECXPURG1",46,0)
 .S ECEX=0 F  S ECEX=$O(^TMP("ECXPURG",$J,ECTYP,ECEX)) Q:'ECEX  Q:QFLG  I $D(^ECX(727,ECEX,0)) S EC=^(0) D
"RTN","ECXPURG1",47,0)
 ..S ECDT=$$FMTE^XLFDT($P(EC,"^",2),"D")
"RTN","ECXPURG1",48,0)
 ..S ECFR=$$FMTE^XLFDT($P(EC,"^",4),"2FD")
"RTN","ECXPURG1",49,0)
 ..S ECTO=$$FMTE^XLFDT($P(EC,"^",5),"2FD")
"RTN","ECXPURG1",50,0)
 ..S ECRC=$P(EC,"^",6) S:ECRC="" ECRC="Incomplete"
"RTN","ECXPURG1",51,0)
 ..S ECTRN=$$FMTE^XLFDT($G(^ECX(727,ECEX,"TR")),"D")
"RTN","ECXPURG1",52,0)
 ..D:$Y+3>IOSL HDR Q:QFLG  W !?3,ECEX,?15,ECDT,?31,ECFR,"-",ECTO,?51,$J(ECRC,9),?65,ECTRN
"RTN","ECXPURG1",53,0)
 G QUIT
"RTN","ECXPURG1",54,0)
HDR ;HEADER
"RTN","ECXPURG1",55,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXPURG1",56,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXPURG1",57,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"PURGABLE EXTRACTS",?72,"Page: ",PG,!,"Printed on ",HDT,!
"RTN","ECXPURG1",58,0)
 W !,"FEEDER SYSTEM",!?3,"EXTRACT #",?15,"EXTRACT DATE",?35,"FROM-TO",?51,"RECORD CNT",?63,"DATE TRANSMITTED",!,LN
"RTN","ECXPURG1",59,0)
 Q
"RTN","ECXPURG1",60,0)
DATES ;ask for date range for purge of holding files
"RTN","ECXPURG1",61,0)
 K HI,LO,ECBDT,ECEDT
"RTN","ECXPURG1",62,0)
 I ECY="I" D
"RTN","ECXPURG1",63,0)
 .I '$O(^ECX(728.113,0)) W !!,"You have no data in the IVP holding file (file #728.113) to purge." Q
"RTN","ECXPURG1",64,0)
 .S LO=$O(^ECX(728.113,"A",0)),HI=$O(^ECX(728.113,"A"," "),-1)
"RTN","ECXPURG1",65,0)
 I ECY="U" D
"RTN","ECXPURG1",66,0)
 .I '$O(^ECX(728.904,0)) W !!,"You have no data in the UDP holding file (file #728.904) to purge." Q
"RTN","ECXPURG1",67,0)
 .S LO=$O(^ECX(728.904,"A",0)),HI=$O(^ECX(728.904,"A"," "),-1)
"RTN","ECXPURG1",68,0)
 Q:$G(LO)=""
"RTN","ECXPURG1",69,0)
 W @IOF,!!,"This file currently holds ",$S(ECY="I":"IVP",1:"UDP")," data from <",$$FMTE^XLFDT(LO,"D"),"> to <",$$FMTE^XLFDT(HI,"D"),">."
"RTN","ECXPURG1",70,0)
 W ! K DIR S DIR(0)="DA^"_LO_":"_HI_":EPX",DIR("A")="Beginning date for purge: " D ^DIR K DIR I $D(DIRUT) K HI,LO Q
"RTN","ECXPURG1",71,0)
 S ECBDT=+Y
"RTN","ECXPURG1",72,0)
 K DIR S DIR(0)="DA^"_ECBDT_":"_HI_":EPX",DIR("A")="Ending date for purge: " D ^DIR K DIR I $D(DIRUT) K HI,LO,ECBDT Q
"RTN","ECXPURG1",73,0)
 S ECEDT=+Y
"RTN","ECXPURG1",74,0)
ASK4 ; ask to confirm date range
"RTN","ECXPURG1",75,0)
 W !!,"I will purge the ",$S(ECY="I":"IVP",1:"UDP")," holding file from <",$$FMTE^XLFDT(ECBDT,"D"),"> to <",$$FMTE^XLFDT(ECEDT,"D"),">."
"RTN","ECXPURG1",76,0)
 W $C(7),$C(7),!!?3,"** REMEMBER - Once this data is purged it CANNOT be recreated. **"
"RTN","ECXPURG1",77,0)
 W !! K DIR S DIR(0)="Y",DIR("A")="Is this OK",DIR("B")="NO"
"RTN","ECXPURG1",78,0)
 S DIR("?",1)="    Enter:"
"RTN","ECXPURG1",79,0)
 S DIR("?",2)="      ""YES"" if you agree with this date range and wish to proceed,"
"RTN","ECXPURG1",80,0)
 S DIR("?",3)="       ""NO"" if you would like to make a different selection, or"
"RTN","ECXPURG1",81,0)
 S DIR("?")="        ""^"" to exit option."
"RTN","ECXPURG1",82,0)
 D ^DIR K DIR I $D(DIRUT) K ECBDT,ECEDT Q 
"RTN","ECXPURG1",83,0)
 I 'Y G DATES
"RTN","ECXPURG1",84,0)
 ; at this point, ECBDT and ECEDT are passed back to ^ECXPURG
"RTN","ECXPURG1",85,0)
 Q
"RTN","ECXQSR")
0^37^B18303169
"RTN","ECXQSR",1,0)
ECXQSR ;BIR/PTD-DSS QUASAR Extract ; 02/14/97 14:07
"RTN","ECXQSR",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXQSR",3,0)
BEG ;entry point from option
"RTN","ECXQSR",4,0)
 I '$O(^ACK(509850.8,0)) W !,"You must be using the Quality Audiology & Speech Pathology",!,"Audit & Review (QUASAR) software to run this extract.",!! Q
"RTN","ECXQSR",5,0)
 I '$D(^ACK(509850.8,1,"DSS")) W !,"Linkage has not been established between QUASAR and the DSS UNIT file (#724).",!! Q
"RTN","ECXQSR",6,0)
 I '$O(^ACK(509850.6,0)) W !,"There is no data in the A&SP CLINIC VISIT file (#509850.6).",!! Q
"RTN","ECXQSR",7,0)
 D SETUP,^ECXTRAC
"RTN","ECXQSR",8,0)
 D ^ECXKILL
"RTN","ECXQSR",9,0)
 Q
"RTN","ECXQSR",10,0)
START ;Begin QUASAR extract.  Examine each clinic visit within selected date range.
"RTN","ECXQSR",11,0)
 S QFLG=0
"RTN","ECXQSR",12,0)
 S ECED=ECED+.9,ECL=+^ACK(509850.8,1,0),ECLINK=^ACK(509850.8,1,"DSS")
"RTN","ECXQSR",13,0)
 S ECD=ECSD1 F  S ECD=$O(^ACK(509850.6,"B",ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  F  S ECDA=$O(^ACK(509850.6,"B",ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXQSR",14,0)
 Q
"RTN","ECXQSR",15,0)
 ;
"RTN","ECXQSR",16,0)
UPDATE ;For each unique CPT code for clinic visit, create record in ECODE.
"RTN","ECXQSR",17,0)
 ;ecode=inst^dfn^ssn^name^i/o status^day^DSS unit^category^procedure^volume^cost center^ordering sec^section^
"RTN","ECXQSR",18,0)
 ;provider^^prov 2^^prov 3^^^mov #^treat spec^time^primary care team^primary care provider^pce cpt code^
"RTN","ECXQSR",19,0)
 ;icd-9 code^agent orange^radiation exposure^environmental contaminants^service connected^sent to pce^^dss identifier^dcm dept.
"RTN","ECXQSR",20,0)
 ;
"RTN","ECXQSR",21,0)
 S ECZNODE=$G(^ACK(509850.6,ECDA,0)),EC2NODE=$G(^ACK(509850.6,ECDA,2))
"RTN","ECXQSR",22,0)
 S ECDT=$P(ECZNODE,"^"),ECDFN=$P(ECZNODE,"^",2)
"RTN","ECXQSR",23,0)
 Q:'$D(^DPT(ECDFN,0))  D INP S ECSTOP=$P(EC2NODE,"^") Q:ECSTOP=""
"RTN","ECXQSR",24,0)
 S ECHL="",(ECHLS,ECHL2S)="000",ECAC=$P($G(ECZNODE),"^",6) I ECAC D
"RTN","ECXQSR",25,0)
 .S ECHL=+$P($G(^SC(ECAC,0)),"^",7),ECHL2=+$P($G(^(0)),"^",18) I ECHL D
"RTN","ECXQSR",26,0)
 ..S ECHLS=$P($G(^DIC(40.7,+ECHL,0)),"^",2),ECHL2S=$P($G(^DIC(40.7,+ECHL2,0)),"^",2)
"RTN","ECXQSR",27,0)
 ..S ECHLS=$$RJ^XLFSTR(ECHLS,3,0),ECHL2S=$$RJ^XLFSTR(ECHL2S,3,0)
"RTN","ECXQSR",28,0)
 S ECDSS=ECHLS_ECHL2S
"RTN","ECXQSR",29,0)
 S ECDU=$S(ECSTOP="A":$P(ECLINK,"^"),ECSTOP="S":$P(ECLINK,"^",2),1:"") Q:'ECDU
"RTN","ECXQSR",30,0)
 S ECDSSU=$G(^ECD(ECDU,0)),ECCS=+$P(ECDSSU,"^",4),(ECO,ECM)=+$P(ECDSSU,"^",3),ECDCM=$P(ECDSSU,"^",5)
"RTN","ECXQSR",31,0)
 S ECUN1=$P(EC2NODE,"^",7) Q:'ECUN1  S ECUN1=2_ECUN1
"RTN","ECXQSR",32,0)
 Q:'$O(^ACK(509850.6,ECDA,3,0))
"RTN","ECXQSR",33,0)
 ;Create local array of procedure codes and # of times each procedure was performed.
"RTN","ECXQSR",34,0)
 S ECPN=0 F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",35,0)
 .S XX=+^ACK(509850.6,ECDA,3,ECPN,0),XX=+$G(^ACK(509850.4,XX,0)),XX=$P($G(^ICPT(XX,0)),"^")
"RTN","ECXQSR",36,0)
 .I XX]"" S LOC(XX)=$G(LOC(XX))+1
"RTN","ECXQSR",37,0)
 Q:'$O(LOC(0))
"RTN","ECXQSR",38,0)
 Q:'$O(^ACK(509850.6,ECDA,1,0))
"RTN","ECXQSR",39,0)
 S ECIEN=$O(^ACK(509850.6,ECDA,1,0)),ECDIA=+^ACK(509850.6,ECDA,1,ECIEN,0),ECDIA=$P($G(^ICD9(ECDIA,0)),"^")
"RTN","ECXQSR",40,0)
 ;Loop through array of unique procedures. Create record in ECODE.
"RTN","ECXQSR",41,0)
 S ECP=0 F  S ECP=$O(LOC(ECP)) Q:'ECP  S ECV=+LOC(ECP) D
"RTN","ECXQSR",42,0)
 .S ECODE=ECL_"^"_ECDFN_"^"_SSN_"^"_ECNA_"^"_ECA_"^"_$$ECXDATE^ECXUTL(ECDT,ECXYM)_"^"_ECDU_"^^"_ECP_"^"_ECV_"^"_ECCS_"^"_ECO_"^"_ECM_"^"_ECUN1_"^^^^^^^"_ECMN_"^"_ECTS_"^000000"
"RTN","ECXQSR",43,0)
 .S ECODE=ECODE_"^"_ECPTTM_"^"_ECPTPR_"^"_ECP_"^"_ECDIA_"^"_ECAO_"^"_ECRE_"^"_$P($G(^DPT(ECDFN,.322)),"^",13)_"^"_ECSC_"^N^^"_ECDSS_"^"_ECDCM_"^"
"RTN","ECXQSR",44,0)
 .D FILE
"RTN","ECXQSR",45,0)
 K LOC
"RTN","ECXQSR",46,0)
 Q
"RTN","ECXQSR",47,0)
 ;
"RTN","ECXQSR",48,0)
FILE ;Create record in QUASAR extract file (#727.825).
"RTN","ECXQSR",49,0)
 S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXQSR",50,0)
 S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXQSR",51,0)
 I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXQSR",52,0)
 Q
"RTN","ECXQSR",53,0)
 ;
"RTN","ECXQSR",54,0)
INP ;Determine in/outpatient status, demographics, primary care team and provider, eligibility, and service history.
"RTN","ECXQSR",55,0)
 ;Returns ECA=1 (outpatient) or =3 (inpatient).
"RTN","ECXQSR",56,0)
 ;Returns ECTS=null (outpatient) or =treating specialty IEN.
"RTN","ECXQSR",57,0)
 ;Returns ECMN=movement number IEN or null (outpatient).
"RTN","ECXQSR",58,0)
 ;Returns SSN=social security number and ECNA=first 4 of last name.
"RTN","ECXQSR",59,0)
 ;Returns ECPTTM=primary care team and ECPTPR=primary care provider.
"RTN","ECXQSR",60,0)
 ;Returns ECAO=agent orange status.
"RTN","ECXQSR",61,0)
 ;Returns ECRE=radiation exposure status.
"RTN","ECXQSR",62,0)
 ;Returns ECSC=service connected status.
"RTN","ECXQSR",63,0)
 S ECA=1,ECTS="" K VAIP,VAEL,VASV,VADM S VARRAY("SVC")="",VARRAY("IN5")="",VARRAY("ELIG")="",VARRAY("DEM")="",VAIP("D")=ECDT,DFN=ECDFN D SEL^VADPT S ECMN=VAIP(1) I ECMN S ECA=3,ECTS=$P($G(^DIC(45.7,+VAIP(8),0)),"^",2)
"RTN","ECXQSR",64,0)
 S SSN=$P(VADM(2),"^"),ECNA=$E($P(VADM(1),",")_"    ",1,4)
"RTN","ECXQSR",65,0)
 S ECAO=$S(VASV(2)=1:"Y",VASV(2)=0:"N",1:"U")
"RTN","ECXQSR",66,0)
 S ECRE=$S(VASV(3)=1:"Y",VASV(3)=0:"N",1:"U")
"RTN","ECXQSR",67,0)
 S ECSC=$S(+VAEL(3):"Y",1:"N")
"RTN","ECXQSR",68,0)
 K VAIP,VAEL,VASV,VAERR,VADM,VA,VARRAY
"RTN","ECXQSR",69,0)
 I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXQSR",70,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(ECDFN,ECDT) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(ECDFN,ECDT) S:ECPTPR=0 ECPTPR=""
"RTN","ECXQSR",71,0)
 I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXQSR",72,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(ECDFN) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(ECDFN) S:ECPTPR=0 ECPTPR=""
"RTN","ECXQSR",73,0)
 Q
"RTN","ECXQSR",74,0)
 ;
"RTN","ECXQSR",75,0)
SETUP ;Set required variables for ECXTRAC.
"RTN","ECXQSR",76,0)
 S ECPACK="QUASAR",ECPIECE=22,ECRTN="START^ECXQSR",ECGRP="QSR",ECHEAD="ECQ",ECFILE=727.825,ECVER=7
"RTN","ECXQSR",77,0)
 Q
"RTN","ECXQSR",78,0)
 ;
"RTN","ECXQSR",79,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR",80,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXQSRV")
1^38
"RTN","ECXRAD")
0^39^B15142693
"RTN","ECXRAD",1,0)
ECXRAD ;BIR/PDW,PTD-Extract for Radiology ; [ 11/27/96  10:47 AM ]
"RTN","ECXRAD",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXRAD",3,0)
BEG ;entry point from option
"RTN","ECXRAD",4,0)
 D SETUP
"RTN","ECXRAD",5,0)
 D ^ECXTRAC
"RTN","ECXRAD",6,0)
 D ^ECXKILL
"RTN","ECXRAD",7,0)
 Q
"RTN","ECXRAD",8,0)
START ;start rad extract
"RTN","ECXRAD",9,0)
 S QFLG=0
"RTN","ECXRAD",10,0)
 K ECXDD D FIELD^DID(70.03,14,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD ;provider points to??
"RTN","ECXRAD",11,0)
 S ECDFN="",ECDT=ECSD-.1,ECED1=ECED+.3 K ^TMP("ECL",$J)
"RTN","ECXRAD",12,0)
 F  S ECDT=$O(^RADPT("AR",ECDT)) Q:ECDT>ECED1!(ECDT'>0)  D GETDFN Q:QFLG
"RTN","ECXRAD",13,0)
 Q
"RTN","ECXRAD",14,0)
GETDFN ;with date get dfn
"RTN","ECXRAD",15,0)
 S ECDFN=""
"RTN","ECXRAD",16,0)
 F  S ECDFN=$O(^RADPT("AR",ECDT,ECDFN)) Q:ECDFN=""  I '$D(^TMP("ECL",$J,ECDFN)) S ^TMP("ECL",$J,ECDFN)="" I $D(^DPT(ECDFN,0)) S SSN=$P(^(0),"^",9),ECNA=$E($P($P(^(0),"^"),",")_"   ",1,4) D GETXMDT Q:QFLG
"RTN","ECXRAD",17,0)
 Q
"RTN","ECXRAD",18,0)
GETXMDT ; with dfn get all exams within date range
"RTN","ECXRAD",19,0)
 S ECXMDT=ECSD-.1 F  S ECXMDT=$O(^RADPT(ECDFN,"DT","B",ECXMDT)),ECTM=$$ECXTIME^ECXUTL(ECXMDT) Q:((ECXMDT>ECED1)!(ECXMDT=""))  S:ECTM>235959 ECTM=235959 D GETEXAM Q:QFLG
"RTN","ECXRAD",20,0)
 Q
"RTN","ECXRAD",21,0)
GETEXAM ; for dfn & date get exam(s) ien
"RTN","ECXRAD",22,0)
 I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXRAD",23,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(ECDFN,ECXMDT) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(ECDFN,ECXMDT) S:ECPTPR=0 ECPTPR=""
"RTN","ECXRAD",24,0)
 I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXRAD",25,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(ECDFN) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(ECDFN) S:ECPTPR=0 ECPTPR=""
"RTN","ECXRAD",26,0)
 S ECXMDA="" F  S ECXMDA=$O(^RADPT(ECDFN,"DT","B",ECXMDT,ECXMDA)) Q:ECXMDA'>0  D GETPROC
"RTN","ECXRAD",27,0)
 Q
"RTN","ECXRAD",28,0)
GETPROC ;pull data, proceedures, and modifiers for specific exam (case numbers)
"RTN","ECXRAD",29,0)
 ;rad division, ssn,name,date,imaging location
"RTN","ECXRAD",30,0)
 D INP S ECODE0=$P(^RADPT(ECDFN,"DT",ECXMDA,0),"^",3)_"^"_ECDFN_"^"_SSN_"^"_ECNA_"^"_ECA_"^"_$$ECXDATE^ECXUTL($P(^(0),"^"),ECXYM),ECLOC=$P(^(0),"^",4),ECTY=$P(^(0),"^",2)
"RTN","ECXRAD",31,0)
 S ECCN=0 F  S ECCN=$O(^RADPT(ECDFN,"DT",ECXMDA,"P",ECCN)) Q:ECCN'>0  S ECCA=^RADPT(ECDFN,"DT",ECXMDA,"P",ECCN,0),ECPRO=$P(ECCA,"^",2),ECCA=$P($G(^RA(72,+$P(ECCA,"^",3),0)),"^",3) I ECPRO I ECCA'=0 D GETMORE D GETMODS D PUT
"RTN","ECXRAD",32,0)
 Q
"RTN","ECXRAD",33,0)
GETMORE ;pickup CPT code,ward/clinic,service,provider,diagnostic code
"RTN","ECXRAD",34,0)
 S ECPT=+$P($G(^RAMIS(71,+ECPRO,0)),"^",9),ECPT=$P($G(^ICPT(ECPT,0)),"^")
"RTN","ECXRAD",35,0)
 S ECTEMP=^RADPT(ECDFN,"DT",ECXMDA,"P",ECCN,0),W=$P(ECTEMP,"^",6),W=$P($G(^DIC(42,+W,44)),"^"),ECS=$P(ECTEMP,"^",7),ECDOC=$P(ECTEMP,"^",14),ECDI=$P(ECTEMP,"^",13)
"RTN","ECXRAD",36,0)
 S:W="" W=$P(ECTEMP,"^",8)
"RTN","ECXRAD",37,0)
 S ECMORE=ECPT_"^"_ECPRO_"^"_ECLOC_"^"_W_"^"_ECS_"^"_ECDI_"^"_ECPROF_ECDOC
"RTN","ECXRAD",38,0)
 Q
"RTN","ECXRAD",39,0)
GETMODS ; get proceedure modifiers
"RTN","ECXRAD",40,0)
 S ECMOD=0,ECMODS="" F  S ECMOD=$O(^RADPT(ECDFN,"DT",ECXMDA,"P",ECCN,"M",ECMOD)) Q:ECMOD'>0  S ECMODS=ECMODS_$P(^(ECMOD,0),"^")_";"
"RTN","ECXRAD",41,0)
 Q
"RTN","ECXRAD",42,0)
PUT ; put variables into ECODE and put into global
"RTN","ECXRAD",43,0)
 ;ecode= rad div^dfn^ssn^name^in/out^day^cpt code^procedure^img loc^ward^ser^diag code^request phy^
"RTN","ECXRAD",44,0)
 ;modifiers;..^mov #^treat spec^time^imaging type^primary care team^primary care provider
"RTN","ECXRAD",45,0)
 S ECODE=ECODE0_"^"_ECMORE_"^"_ECMODS_"^"_ECMN_"^"_ECTS_"^"_ECTM_"^"_ECTY_"^"_ECPTTM_"^"_ECPTPR_"^"
"RTN","ECXRAD",46,0)
FILE S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXRAD",47,0)
 S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXRAD",48,0)
 I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXRAD",49,0)
 Q
"RTN","ECXRAD",50,0)
 ;
"RTN","ECXRAD",51,0)
SETUP S ECPACK="Radiology",ECPIECE=6,ECRTN="START^ECXRAD",ECGRP="RAD",ECHEAD="RAD",ECFILE=727.814,ECVER=7
"RTN","ECXRAD",52,0)
 Q
"RTN","ECXRAD",53,0)
INP ; checks for in/outpatient status
"RTN","ECXRAD",54,0)
 S ECA=1,ECTS="" K VAIP S VAIP("D")=ECDT,DFN=ECDFN D IN5^VADPT S ECMN=VAIP(1) I ECMN S ECA=3,ECTS=$P($G(^DIC(45.7,+VAIP(8),0)),"^",2)
"RTN","ECXRAD",55,0)
 K VAIP,VAERR
"RTN","ECXRAD",56,0)
 Q
"RTN","ECXSADEN")
0^40^B11912423
"RTN","ECXSADEN",1,0)
ECXSADEN ;BIR/DMA-SAS Report from Dental Extract; 31 Aug 95 / 1:40 PM
"RTN","ECXSADEN",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXSADEN",3,0)
EN ;entry point from menu option
"RTN","ECXSADEN",4,0)
 W @IOF,!!,"Dental Extract SAS Report",!!
"RTN","ECXSADEN",5,0)
 ;ecxaud=1 for 'sas' audit
"RTN","ECXSADEN",6,0)
 S ECXHEAD="DEN",ECXAUD=1
"RTN","ECXSADEN",7,0)
 ;select extract
"RTN","ECXSADEN",8,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXSADEN",9,0)
 I ECXERR D AUDIT^ECXKILL Q
"RTN","ECXSADEN",10,0)
 ;select all dental sites/divisions
"RTN","ECXSADEN",11,0)
 S ECXALL=1 D DEN^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXSADEN",12,0)
 I ECXERR D AUDIT^ECXKILL Q
"RTN","ECXSADEN",13,0)
 W !!
"RTN","ECXSADEN",14,0)
 S ECXPGM="PROCESS^ECXSADEN",ECXDESC="Dental Extract SAS Report"
"RTN","ECXSADEN",15,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXSADEN",16,0)
 W !
"RTN","ECXSADEN",17,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXSADEN",18,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXSADEN",19,0)
 .W !!,?5,"Try agian later... exiting.",!
"RTN","ECXSADEN",20,0)
 .D AUDIT^ECXKILL
"RTN","ECXSADEN",21,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXSADEN",22,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXSADEN",23,0)
 .D PROCESS
"RTN","ECXSADEN",24,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXSADEN",25,0)
 D HOME^%ZIS
"RTN","ECXSADEN",26,0)
 D AUDIT^ECXKILL
"RTN","ECXSADEN",27,0)
 Q
"RTN","ECXSADEN",28,0)
 ;
"RTN","ECXSADEN",29,0)
PROCESS ;queued entry
"RTN","ECXSADEN",30,0)
 N J,K,X,Y,JJ,SS,LN,PG,DIV,DIVNUM,EC,ECQ,ECFK,ECFL,QFLG,TOT,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXSADEN",31,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXSADEN",32,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXSADEN",33,0)
 S (QFLG,PG)=0,$P(LN,"-",80)=""
"RTN","ECXSADEN",34,0)
 ;get run date in external format
"RTN","ECXSADEN",35,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXSADEN",36,0)
 ;arrange dental divisions by station #
"RTN","ECXSADEN",37,0)
 S DIV="" F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  S DIVNUM=$P(ECXDIV(DIV),U,3),DIV(DIVNUM)=ECXDIV(DIV)
"RTN","ECXSADEN",38,0)
 ;process the extract records
"RTN","ECXSADEN",39,0)
 S J="" F  S J=$O(^ECX(727.806,"AC",ECXEXT,J)) Q:'J  I $D(^ECX(727.806,J,0)) S EC=^(0),ECFL=$P(EC,"^",41) D
"RTN","ECXSADEN",40,0)
 .I $P(EC,"^",12) S ^("D09")=$G(^TMP($J,"ECXAUD",ECFL,"D09"))+1
"RTN","ECXSADEN",41,0)
 .F K=10,11,15:1:18,20:1:24,27:1:37 S ECQ=$P(EC,"^",K+3) I ECQ S ^("D"_K)=$G(^TMP($J,"ECXAUD",ECFL,"D"_K))+ECQ
"RTN","ECXSADEN",42,0)
 .I $P(EC,"^",11)="C" S ^("D08C")=$G(^TMP($J,"ECXAUD",ECFL,"D08C"))+1
"RTN","ECXSADEN",43,0)
 .I $P(EC,"^",11)="S" S ^("D08S")=$G(^TMP($J,"ECXAUD",ECFL,"D08S"))+1
"RTN","ECXSADEN",44,0)
 .F K=12,13,14 I $P(EC,"^",K+3)=1 S ^("D"_K)=$G(^TMP($J,"ECXAUD",ECFL,"D"_K))+1
"RTN","ECXSADEN",45,0)
 .I $P(EC,"^",28)=3 S ^("D25I")=$G(^TMP($J,"ECXAUD",ECFL,"D25I"))+1
"RTN","ECXSADEN",46,0)
 .I $P(EC,"^",28)=4 S ^("D25G")=$G(^TMP($J,"ECXAUD",ECFL,"D25G"))+1
"RTN","ECXSADEN",47,0)
 .I $P(EC,"^",29)=1 S ^("D26S")=$G(^TMP($J,"ECXAUD",ECFL,"D26S"))+1
"RTN","ECXSADEN",48,0)
 .I $P(EC,"^",29)=3 S ^("D26F")=$G(^TMP($J,"ECXAUD",ECFL,"D26F"))+1
"RTN","ECXSADEN",49,0)
 .I $P(EC,"^",42)=2 S ^("D39C")=$G(^TMP($J,"ECXAUD",ECFL,"D39C"))+1
"RTN","ECXSADEN",50,0)
 .I $P(EC,"^",42)=3 S ^("D39T")=$G(^TMP($J,"ECXAUD",ECFL,"D39T"))+1
"RTN","ECXSADEN",51,0)
 .F K=40:1:42 I $P(EC,"^",K+3)=1 S ^("D"_K)=$G(^TMP($J,"ECXAUD",ECFL,"D"_K))+1
"RTN","ECXSADEN",52,0)
 .S EC=$P(EC,"^",46),EC=$S(EC=1:"M",EC=2:"Q",EC=3:"R",1:"") I EC]"" S ^("D43"_EC)=$G(^TMP($J,"ECXAUD",ECFL,"D43"_EC))+1
"RTN","ECXSADEN",53,0)
 ;print the report
"RTN","ECXSADEN",54,0)
 U IO
"RTN","ECXSADEN",55,0)
 S ECFL="" F  S ECFL=$O(^TMP($J,"ECXAUD",ECFL)) Q:ECFL=""  D  Q:QFLG
"RTN","ECXSADEN",56,0)
 .D HEADER
"RTN","ECXSADEN",57,0)
 .S TOT(ECFL)=0
"RTN","ECXSADEN",58,0)
 .S ECFK="" F  S ECFK=$O(^TMP($J,"ECXAUD",ECFL,ECFK)) Q:ECFK=""  S TOT=^(ECFK) D  Q:QFLG
"RTN","ECXSADEN",59,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,ECFL,?43,ECFK,?68,$$RJ^XLFSTR(TOT,5," ")
"RTN","ECXSADEN",60,0)
 ..S TOT(ECFL)=TOT(ECFL)+TOT
"RTN","ECXSADEN",61,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,?40,$E(LN,1,34)
"RTN","ECXSADEN",62,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,"Total for Feeder Location "_ECFL_":",?68,$$RJ^XLFSTR(TOT(ECFL),5," ")
"RTN","ECXSADEN",63,0)
 ;close
"RTN","ECXSADEN",64,0)
 I $E(IOST)'="C" W @IOF
"RTN","ECXSADEN",65,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXSADEN",66,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXSADEN",67,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXSADEN",68,0)
 D AUDIT^ECXKILL
"RTN","ECXSADEN",69,0)
 Q
"RTN","ECXSADEN",70,0)
 ;
"RTN","ECXSADEN",71,0)
HEADER ;print the header
"RTN","ECXSADEN",72,0)
 D SASHEAD^ECXUTLA(ECFL,ECXHEAD,.DIV,.ECXARRAY,.PG)
"RTN","ECXSADEN",73,0)
 Q
"RTN","ECXSARAD")
0^41^B11350607
"RTN","ECXSARAD",1,0)
ECXSARAD ;BIR/DMA-SAS Report from Radiology Extract; 25 Apr 95 / 11:03 AM
"RTN","ECXSARAD",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXSARAD",3,0)
EN ;entry point from menu option
"RTN","ECXSARAD",4,0)
 W @IOF,!!,"Radiology Extract SAS Report",!!
"RTN","ECXSARAD",5,0)
 ;ecxaud=1 for 'sas' audit
"RTN","ECXSARAD",6,0)
 S ECXHEAD="RAD",ECXAUD=1
"RTN","ECXSARAD",7,0)
 ;select extract
"RTN","ECXSARAD",8,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXSARAD",9,0)
 I ECXERR D AUDIT^ECXKILL Q
"RTN","ECXSARAD",10,0)
 ;select all radiology sites/divisions
"RTN","ECXSARAD",11,0)
 S ECXALL=1 D RAD^ECXDVSN2(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXSARAD",12,0)
 I ECXERR D AUDIT^ECXKILL Q
"RTN","ECXSARAD",13,0)
 W !!
"RTN","ECXSARAD",14,0)
 S ECXPGM="PROCESS^ECXSARAD",ECXDESC="Radiology Extract SAS Report"
"RTN","ECXSARAD",15,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXSARAD",16,0)
 W !
"RTN","ECXSARAD",17,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXSARAD",18,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXSARAD",19,0)
 .W !!,?5,"Try agian later... exiting.",!
"RTN","ECXSARAD",20,0)
 .D AUDIT^ECXKILL
"RTN","ECXSARAD",21,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXSARAD",22,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXSARAD",23,0)
 .D PROCESS
"RTN","ECXSARAD",24,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXSARAD",25,0)
 D HOME^%ZIS
"RTN","ECXSARAD",26,0)
 D AUDIT^ECXKILL
"RTN","ECXSARAD",27,0)
 Q
"RTN","ECXSARAD",28,0)
 ;
"RTN","ECXSARAD",29,0)
PROCESS ;queued entry
"RTN","ECXSARAD",30,0)
 N J,K,X,Y,JJ,SS,LN,PG,DIV,EC,ECFK,ECFL,QFLG,TOT,TYPE,TYPENM,DIQ,DR,DA,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXSARAD",31,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXSARAD",32,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXSARAD",33,0)
 S (QFLG,PG)=0,$P(LN,"-",80)=""
"RTN","ECXSARAD",34,0)
 ;get run date in external format
"RTN","ECXSARAD",35,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXSARAD",36,0)
 ;setup array of imaging types
"RTN","ECXSARAD",37,0)
 S TYPE=0 F  S TYPE=$O(^RA(79.2,TYPE)) Q:+TYPE<1  D
"RTN","ECXSARAD",38,0)
 .K ECX S DIC="^RA(79.2,",DR=".01;3",DIQ="ECX",DIQ(0)="I",DA=TYPE D EN^DIQ1
"RTN","ECXSARAD",39,0)
 .S TYPE(TYPE)=ECX(79.2,TYPE,.01,"I")_U_ECX(79.2,TYPE,3,"I")
"RTN","ECXSARAD",40,0)
 ;process the extract records
"RTN","ECXSARAD",41,0)
 S J="" F  S J=$O(^ECX(727.814,"AC",ECXEXT,J)) Q:'J  I $D(^ECX(727.814,J,0)) S EC=^(0),DIV=$P(EC,"^",4),ECFL=DIV_"-"_$P(EC,"^",21) D
"RTN","ECXSARAD",42,0)
 .S ECFK=$P(EC,"^",10) I ECFK="" S ECFK=$P(EC,"^",11)
"RTN","ECXSARAD",43,0)
 .I $P(EC,"^",10)="",$P(EC,"^",11)=468 S ECFK=777777
"RTN","ECXSARAD",44,0)
 .S MODS=";"_$P(EC,"^",17)_";"
"RTN","ECXSARAD",45,0)
 .S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+1
"RTN","ECXSARAD",46,0)
 .I MODS[";1;" S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+1
"RTN","ECXSARAD",47,0)
 .I MODS[";2;" S ^(888888)=$G(^TMP($J,"ECXAUD",DIV,ECFL,888888))+1
"RTN","ECXSARAD",48,0)
 .I MODS[";3;" S ^(999999)=$G(^TMP($J,"ECXAUD",DIV,ECFL,999999))+1
"RTN","ECXSARAD",49,0)
 ;print the report
"RTN","ECXSARAD",50,0)
 U IO
"RTN","ECXSARAD",51,0)
 S DIV="" F  S DIV=$O(^TMP($J,"ECXAUD",DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXSARAD",52,0)
 .D HEADER S TOT("D")=0
"RTN","ECXSARAD",53,0)
 .S ECFL="" F  S ECFL=$O(^TMP($J,"ECXAUD",DIV,ECFL)) Q:ECFL=""  S TYPE=+$P(ECFL,"-",2) D  Q:QFLG
"RTN","ECXSARAD",54,0)
 ..S TYPENM=$P($G(TYPE(TYPE)),U,1),TYPENM=$E(TYPENM,1,18),TOT("FL")=0
"RTN","ECXSARAD",55,0)
 ..S ECFK="" F  S ECFK=$O(^TMP($J,"ECXAUD",DIV,ECFL,ECFK)) Q:ECFK=""  S TOT=^(ECFK) D  Q:QFLG
"RTN","ECXSARAD",56,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,ECFL,?43,ECFK,?68,$$RJ^XLFSTR(TOT,5," ")
"RTN","ECXSARAD",57,0)
 ...S TOT("FL")=TOT("FL")+TOT,TOT("D")=TOT("D")+TOT
"RTN","ECXSARAD",58,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?40,$E(LN,1,34)
"RTN","ECXSARAD",59,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,"Total for Feeder Location "_DIV_"-"_TYPENM_" ("_ECFL_"):",?68,$$RJ^XLFSTR(TOT("FL"),5," ")
"RTN","ECXSARAD",60,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Grand Total for Division "_DIV_":",?68,$$RJ^XLFSTR(TOT("D"),5," ")
"RTN","ECXSARAD",61,0)
 ;close
"RTN","ECXSARAD",62,0)
 I $E(IOST)'="C" W @IOF
"RTN","ECXSARAD",63,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXSARAD",64,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXSARAD",65,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXSARAD",66,0)
 D AUDIT^ECXKILL
"RTN","ECXSARAD",67,0)
 Q
"RTN","ECXSARAD",68,0)
HEADER ;print the header
"RTN","ECXSARAD",69,0)
 D SASHEAD^ECXUTLA(DIV,ECXHEAD,.ECXDIV,.ECXARRAY,.PG)
"RTN","ECXSARAD",70,0)
 Q
"RTN","ECXSARXS")
0^42^B15310882
"RTN","ECXSARXS",1,0)
ECXSARXS ;BIR/DMA-SAS Report from Prescription Extract; 22 Sep 95 / 10:27 AM
"RTN","ECXSARXS",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXSARXS",3,0)
 ;
"RTN","ECXSARXS",4,0)
EN ;entry point from menu option
"RTN","ECXSARXS",5,0)
 W @IOF,!!,"Prescription Extract SAS Report",!!
"RTN","ECXSARXS",6,0)
 ;ecxaud=1 for 'sas' audit
"RTN","ECXSARXS",7,0)
 S ECXHEAD="PRE",ECXAUD=1
"RTN","ECXSARXS",8,0)
 ;select extract
"RTN","ECXSARXS",9,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXSARXS",10,0)
 I ECXERR D AUDIT^ECXKILL Q
"RTN","ECXSARXS",11,0)
 ;select all pharmacy sites/divisions
"RTN","ECXSARXS",12,0)
 S ECXALL=1 D PRE^ECXDVSN1(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXSARXS",13,0)
 I ECXERR D AUDIT^ECXKILL Q
"RTN","ECXSARXS",14,0)
 W !!
"RTN","ECXSARXS",15,0)
 S ECXPGM="PROCESS^ECXSARXS",ECXDESC="Prescription Extract SAS Report"
"RTN","ECXSARXS",16,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXSARXS",17,0)
 W !
"RTN","ECXSARXS",18,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXSARXS",19,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXSARXS",20,0)
 .W !!,?5,"Try agian later... exiting.",!
"RTN","ECXSARXS",21,0)
 .D AUDIT^ECXKILL
"RTN","ECXSARXS",22,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXSARXS",23,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXSARXS",24,0)
 .D PROCESS
"RTN","ECXSARXS",25,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXSARXS",26,0)
 D HOME^%ZIS
"RTN","ECXSARXS",27,0)
 D AUDIT^ECXKILL
"RTN","ECXSARXS",28,0)
 Q
"RTN","ECXSARXS",29,0)
 ;
"RTN","ECXSARXS",30,0)
PROCESS ;queued entry
"RTN","ECXSARXS",31,0)
 N J,X,Y,JJ,SS,LN,PG,DIV,EC,ECFK,ECFL,ECQ,MAIL,NEWRX,COPAY,DEA,TOT,QFLG,DIQ,DR,DA,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXSARXS",32,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXSARXS",33,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXSARXS",34,0)
 S (QFLG,PG)=0,$P(LN,"-",80)=""
"RTN","ECXSARXS",35,0)
 ;get run date in external format
"RTN","ECXSARXS",36,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXSARXS",37,0)
 ;process the extract records
"RTN","ECXSARXS",38,0)
 S J="" F  S J=$O(^ECX(727.81,"AC",ECXEXT,J)) Q:'J  I $D(^ECX(727.81,J,0)) S EC=^(0) D
"RTN","ECXSARXS",39,0)
 .S DIV=$P(EC,"^",10),MAIL=+$P(EC,"^",13),NEWRX=+$P(EC,"^",15),COPAY=+$P(EC,"^",27),DEA=$P(EC,"^",29)
"RTN","ECXSARXS",40,0)
 .;non-cmop rxs only
"RTN","ECXSARXS",41,0)
 .;feeder location is always "pre"_div
"RTN","ECXSARXS",42,0)
 .I MAIL'=2 D
"RTN","ECXSARXS",43,0)
 ..S ECFL="PRE"_DIV,ECFK=$P(EC,"^",28),ECQ=+$P(EC,"^",17)
"RTN","ECXSARXS",44,0)
 ..S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",45,0)
 ..;additional feeder key records for non-cmop rx
"RTN","ECXSARXS",46,0)
 ..S ECFK="BASIC",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",47,0)
 ..I MAIL=1 D
"RTN","ECXSARXS",48,0)
 ...S ECFK="VAMAIL",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",49,0)
 ...I NEWRX=1 D
"RTN","ECXSARXS",50,0)
 ....S ECFK="NEWVMOP",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",51,0)
 ..I MAIL=0&(NEWRX=1) D
"RTN","ECXSARXS",52,0)
 ...S ECFK="NEWWIN",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",53,0)
 ..I COPAY=1 D
"RTN","ECXSARXS",54,0)
 ...S ECFK="COPAY",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",55,0)
 ..I DEA="I" D
"RTN","ECXSARXS",56,0)
 ...S ECFK="PREDEASP",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",57,0)
 .;cmop rxs only
"RTN","ECXSARXS",58,0)
 .;feeder location is "cmopdsu"_div, "cmopdis"_div, and also "pre"_div
"RTN","ECXSARXS",59,0)
 .I MAIL=2 D
"RTN","ECXSARXS",60,0)
 ..S ECFL="CMOPDSU"_DIV,ECFK=$P(EC,"^",28),ECQ=+$P(EC,"^",17),^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",61,0)
 ..S ECFL="CMOPDIS"_DIV,ECFK="CMOPDISP",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",62,0)
 ..S ECFL="PRE"_DIV D
"RTN","ECXSARXS",63,0)
 ...;possibly three additional feeder key recods for cmop rx
"RTN","ECXSARXS",64,0)
 ...I NEWRX=1 D
"RTN","ECXSARXS",65,0)
 ....S ECFK="NEWCMOP",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",66,0)
 ...I COPAY=1 D
"RTN","ECXSARXS",67,0)
 ....S ECFK="COPAY",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",68,0)
 ...I DEA="I" D
"RTN","ECXSARXS",69,0)
 ....S ECFK="PREDEASP",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",70,0)
 ;print the report
"RTN","ECXSARXS",71,0)
 U IO
"RTN","ECXSARXS",72,0)
 S DIV="" F  S DIV=$O(^TMP($J,"ECXAUD",DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXSARXS",73,0)
 .D HEADER
"RTN","ECXSARXS",74,0)
 .S ECFL="" F  S ECFL=$O(^TMP($J,"ECXAUD",DIV,ECFL)) Q:ECFL=""  D  Q:QFLG
"RTN","ECXSARXS",75,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,ECFL
"RTN","ECXSARXS",76,0)
 ..S ECFK="" F  S ECFK=$O(^TMP($J,"ECXAUD",DIV,ECFL,ECFK)) Q:ECFK=""  S TOT=^(ECFK) D  Q:QFLG
"RTN","ECXSARXS",77,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG  W ?40,ECFK,?68,$$RJ^XLFSTR(TOT,5," "),!
"RTN","ECXSARXS",78,0)
 ;close
"RTN","ECXSARXS",79,0)
 I $E(IOST)'="C" W @IOF
"RTN","ECXSARXS",80,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXSARXS",81,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXSARXS",82,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXSARXS",83,0)
 D AUDIT^ECXKILL
"RTN","ECXSARXS",84,0)
 Q
"RTN","ECXSARXS",85,0)
 ;
"RTN","ECXSARXS",86,0)
HEADER ;print the header
"RTN","ECXSARXS",87,0)
 D SASHEAD^ECXUTLA(DIV,ECXHEAD,.ECXDIV,.ECXARRAY,.PG)
"RTN","ECXSARXS",88,0)
 Q
"RTN","ECXSASUR")
0^43^B26175349
"RTN","ECXSASUR",1,0)
ECXSASUR ;BIR/DMA-SAS Report from Surgery Extract; 19 Jul 95 / 11:13 AM
"RTN","ECXSASUR",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXSASUR",3,0)
EN ;entry point from menu option
"RTN","ECXSASUR",4,0)
 W @IOF,!!,"Surgery Extract SAS Report",!!
"RTN","ECXSASUR",5,0)
 ;ecxaud=1 for 'sas' audit
"RTN","ECXSASUR",6,0)
 S ECXHEAD="SUR",ECXAUD=1
"RTN","ECXSASUR",7,0)
 ;select extract
"RTN","ECXSASUR",8,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXSASUR",9,0)
 I ECXERR D AUDIT^ECXKILL Q
"RTN","ECXSASUR",10,0)
 ;select all surgery sites/divisions
"RTN","ECXSASUR",11,0)
 S ECXALL=1 D SUR^ECXDVSN2(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXSASUR",12,0)
 I ECXERR D AUDIT^ECXKILL Q
"RTN","ECXSASUR",13,0)
 W !!
"RTN","ECXSASUR",14,0)
 S ECXPGM="PROCESS^ECXSASUR",ECXDESC="Surgery Extract SAS Report"
"RTN","ECXSASUR",15,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXSASUR",16,0)
 W !
"RTN","ECXSASUR",17,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXSASUR",18,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXSASUR",19,0)
 .W !!,?5,"Try agian later... exiting.",!
"RTN","ECXSASUR",20,0)
 .D AUDIT^ECXKILL
"RTN","ECXSASUR",21,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXSASUR",22,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXSASUR",23,0)
 .D PROCESS
"RTN","ECXSASUR",24,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXSASUR",25,0)
 D HOME^%ZIS
"RTN","ECXSASUR",26,0)
 D AUDIT^ECXKILL
"RTN","ECXSASUR",27,0)
 Q
"RTN","ECXSASUR",28,0)
 ;
"RTN","ECXSASUR",29,0)
PROCESS ;queued entry
"RTN","ECXSASUR",30,0)
 N J,JJ,X,Y,SS,LN,PG,DIV,EC,EC16,EC31,ECF1,ECFK,ECFL,ECFLNM,ECFLX,ECFX,QFLG,TOT,F1,F1SUB,F1NM,F2,F2SUB,F2NM,FL,DIQ,DR,DA,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXSASUR",31,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXSASUR",32,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXSASUR",33,0)
 S (QFLG,PG)=0,$P(LN,"-",80)=""
"RTN","ECXSASUR",34,0)
 ;get run date in external format
"RTN","ECXSASUR",35,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXSASUR",36,0)
 ;setup array of feeder location names
"RTN","ECXSASUR",37,0)
 F F1=1:1:14 S X=$P($T(FEED1+F1),";",3),F1SUB=$P(X,"^",1),F1NM=$P(X,"^",2) S ^TMP($J,"ECXFL","OR"_F1SUB)=F1NM D
"RTN","ECXSASUR",38,0)
 .F F2=1:1:7 S X=$P($T(FEED2+F2),";",3),F2SUB=$P(X,"^",1),F2NM=$P(X,"^",2) S ^TMP($J,"ECXFL","OR"_F1SUB_F2SUB)=F1NM_" - "_F2NM,FL(F2SUB)=F2NM
"RTN","ECXSASUR",39,0)
 ;process extract records
"RTN","ECXSASUR",40,0)
 ;type='p'rimary or 's'econdary or 'i'mplant
"RTN","ECXSASUR",41,0)
 ;ignore type=secondary
"RTN","ECXSASUR",42,0)
 S J="" F  S J=$O(^ECX(727.811,"AC",ECXEXT,J)) Q:'J  I $D(^ECX(727.811,J,0)) S EC=^(0),DIV=$P(EC,"^",4) I $P(EC,"^",17)'="S",$P(EC,"^",28)'="C" D
"RTN","ECXSASUR",43,0)
 .;determine feeder location
"RTN","ECXSASUR",44,0)
 .S ECF1=$E($P(EC,"^",32),1,4)
"RTN","ECXSASUR",45,0)
 .I ECF1="" D
"RTN","ECXSASUR",46,0)
 ..S ECF1=$P(EC,"^",30),ECF1="OR"_$E("GEORCANECNAMINENCYWACLDEOT",ECF1*2-1,ECF1*2)
"RTN","ECXSASUR",47,0)
 ..S:ECF1="OR" ECF1="ORNO"
"RTN","ECXSASUR",48,0)
 ..I $P(EC,"^",30)="",$P(EC,"^",12)="",$P(EC,"^",11)="059" S ECF1="ORCY"
"RTN","ECXSASUR",49,0)
 .S ECFL=DIV_ECF1
"RTN","ECXSASUR",50,0)
 .;determine surgical specialty
"RTN","ECXSASUR",51,0)
 .S ECSS=$P(EC,"^",11) S:ECSS="" ECSS=999 I $P(EC,"^",32)'="" S ECSS="NON"
"RTN","ECXSASUR",52,0)
 .;type=implant generates one product record; volume is always at least 1
"RTN","ECXSASUR",53,0)
 .I $P(EC,"^",17)="I" D  Q
"RTN","ECXSASUR",54,0)
 ..S ECFLX=ECFL_"I",ECFK=ECSS_"-"_$$RJ^XLFSTR($P(EC,"^",23),5,0)
"RTN","ECXSASUR",55,0)
 ..S ECQ=$P(EC,"^",24) S:'ECQ ECQ=1
"RTN","ECXSASUR",56,0)
 ..S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFLX,ECFK))+ECQ
"RTN","ECXSASUR",57,0)
 .;type=primary generates four or five product records, but only two are of interest here
"RTN","ECXSASUR",58,0)
 .;anesthesia time product
"RTN","ECXSASUR",59,0)
 .S ECQ=+$P(EC,"^",22) I ECQ>0 D
"RTN","ECXSASUR",60,0)
 ..S ECFLX=ECFL_"A",EC16=$P(EC,"^",16)
"RTN","ECXSASUR",61,0)
 ..S ECD=$S(EC16="G":1,EC16="L":3,EC16="S":4,EC16="E":4,EC16="M":7,EC16="":6,1:5)
"RTN","ECXSASUR",62,0)
 ..S ECFK=ECSS_"-"_"2"_ECD
"RTN","ECXSASUR",63,0)
 ..S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFLX,ECFK))+ECQ
"RTN","ECXSASUR",64,0)
 .;surgeon time product
"RTN","ECXSASUR",65,0)
 .S ECQ=+$P(EC,"^",21) I ECQ>0 D
"RTN","ECXSASUR",66,0)
 ..S EC31=+$P(EC,"^",31),ECFX=$S(EC31=10:"D",EC31=24:"M",EC31=32:"P",EC31=43:"C",1:"S")
"RTN","ECXSASUR",67,0)
 ..S ECFLX=ECFL_ECFX
"RTN","ECXSASUR",68,0)
 ..S ECFK=ECSS_"-40"
"RTN","ECXSASUR",69,0)
 ..S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFLX,ECFK))+ECQ
"RTN","ECXSASUR",70,0)
 .;patient time product
"RTN","ECXSASUR",71,0)
 .S ECQ=+$P(EC,"^",20) I ECQ>0 D
"RTN","ECXSASUR",72,0)
 ..S ECFK=ECSS_"-10"
"RTN","ECXSASUR",73,0)
 ..S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSASUR",74,0)
 .;recovery room time product only if not cystoscopy and not non-or
"RTN","ECXSASUR",75,0)
 .I ECFL'="ORCY",$P(EC,"^",32)="" D
"RTN","ECXSASUR",76,0)
 ..S ECQ=+$P(EC,"^",33) I ECQ>0 D
"RTN","ECXSASUR",77,0)
 ...S ECFK=ECSS_"-60"
"RTN","ECXSASUR",78,0)
 ...S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSASUR",79,0)
 .;technician time product, only for cystoscopy
"RTN","ECXSASUR",80,0)
 .I ECFL="ORCY" D
"RTN","ECXSASUR",81,0)
 ..S ECQ=+$P(EC,"^",20) S:($P(EC,"^",22)>$P(EC,"^",20)) ECQ=+$P(EC,"^",22) I ECQ>0 D
"RTN","ECXSASUR",82,0)
 ...S ECFK=ECSS_"-70"
"RTN","ECXSASUR",83,0)
 ...S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSASUR",84,0)
 .;cleanup time product
"RTN","ECXSASUR",85,0)
 .S ECQ=2 D
"RTN","ECXSASUR",86,0)
 ..S ECFK=ECSS_"-30"
"RTN","ECXSASUR",87,0)
 ..S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSASUR",88,0)
 ;print the report
"RTN","ECXSASUR",89,0)
 U IO
"RTN","ECXSASUR",90,0)
 S DIV="" F  S DIV=$O(^TMP($J,"ECXAUD",DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXSASUR",91,0)
 .D HEADER
"RTN","ECXSASUR",92,0)
 .S ECFL="" F  S ECFL=$O(^TMP($J,"ECXAUD",DIV,ECFL)) Q:ECFL=""  D  Q:QFLG
"RTN","ECXSASUR",93,0)
 ..S DIVL=$L(DIV),ECFLX=$E(ECFL,DIVL+1,99),ECFLNM=$G(^TMP($J,"ECXFL",ECFLX)) S:ECFLNM="" ECFLNM="NON-OR"
"RTN","ECXSASUR",94,0)
 ..I ECFLNM="NON-OR" D
"RTN","ECXSASUR",95,0)
 ...S F2SUB=$E(ECFLX,5),F2NM=""
"RTN","ECXSASUR",96,0)
 ...S:F2SUB]"" F2NM=$G(FL(F2SUB)) S:F2NM]"" ECFLNM=ECFLNM_" - "_F2NM
"RTN","ECXSASUR",97,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,ECFL,?12,ECFLNM
"RTN","ECXSASUR",98,0)
 ..S ECFK="" F  S ECFK=$O(^TMP($J,"ECXAUD",DIV,ECFL,ECFK)) Q:ECFK=""  S TOT=^(ECFK) D  Q:QFLG
"RTN","ECXSASUR",99,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG  W ?48,ECFK,?68,$$RJ^XLFSTR(TOT,6," "),!
"RTN","ECXSASUR",100,0)
 ;close
"RTN","ECXSASUR",101,0)
 I $E(IOST)'="C" W @IOF
"RTN","ECXSASUR",102,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXSASUR",103,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXSASUR",104,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXSASUR",105,0)
 D AUDIT^ECXKILL
"RTN","ECXSASUR",106,0)
 Q
"RTN","ECXSASUR",107,0)
HEADER ;print the header
"RTN","ECXSASUR",108,0)
 N ECXTAB
"RTN","ECXSASUR",109,0)
 S ECXTAB=48
"RTN","ECXSASUR",110,0)
 D SASHEAD^ECXUTLA(DIV,ECXHEAD,.ECXDIV,.ECXARRAY,.PG,ECXTAB)
"RTN","ECXSASUR",111,0)
 Q
"RTN","ECXSASUR",112,0)
 ;
"RTN","ECXSASUR",113,0)
FEED1 ;or location names
"RTN","ECXSASUR",114,0)
 ;;AM^AMBULATORY OR
"RTN","ECXSASUR",115,0)
 ;;CA^CARDIAC OR
"RTN","ECXSASUR",116,0)
 ;;CL^CLINIC
"RTN","ECXSASUR",117,0)
 ;;CN^CARDIAC/NEURO OR
"RTN","ECXSASUR",118,0)
 ;;CY^CYSTOSCOPY RM.
"RTN","ECXSASUR",119,0)
 ;;DE^DEDICATED RM.
"RTN","ECXSASUR",120,0)
 ;;EN^ENDOSCOPY RM.
"RTN","ECXSASUR",121,0)
 ;;GE^GENERAL OR
"RTN","ECXSASUR",122,0)
 ;;IN^ICU
"RTN","ECXSASUR",123,0)
 ;;NE^NEUROSURGERY OR
"RTN","ECXSASUR",124,0)
 ;;NO^UNKNOWN
"RTN","ECXSASUR",125,0)
 ;;OR^ORTHOPEDIC OR
"RTN","ECXSASUR",126,0)
 ;;OT^OTHER LOCATION
"RTN","ECXSASUR",127,0)
 ;;WA^WARD
"RTN","ECXSASUR",128,0)
 ;
"RTN","ECXSASUR",129,0)
FEED2 ;service location names
"RTN","ECXSASUR",130,0)
 ;;A^ANESTHESIA
"RTN","ECXSASUR",131,0)
 ;;I^IMPLANTS
"RTN","ECXSASUR",132,0)
 ;;C^SPINAL CORD
"RTN","ECXSASUR",133,0)
 ;;D^DENTAL
"RTN","ECXSASUR",134,0)
 ;;M^MEDICINE
"RTN","ECXSASUR",135,0)
 ;;P^PSYCH
"RTN","ECXSASUR",136,0)
 ;;S^SURGERY
"RTN","ECXSCLD")
0^44^B37899121
"RTN","ECXSCLD",1,0)
ECXSCLD ;BIR/DMA,CML-Enter, Print and Edit Entries in 728.44 ; [ 12/12/96  4:14 PM ]
"RTN","ECXSCLD",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXSCLD",3,0)
EN ;entry point from option
"RTN","ECXSCLD",4,0)
 ;load entries
"RTN","ECXSCLD",5,0)
 W !!,"This option creates local entries in the DSS CLINIC AND STOP CODES file.",!
"RTN","ECXSCLD",6,0)
 I '$D(^ECX(728.44)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",7,0)
 K ZTSAVE S ZTDESC="Gather Clinic stop codes for DSS",ZTRTN="START^ECXSCLD",ZTIO="" D ^%ZTLOAD
"RTN","ECXSCLD",8,0)
 Q
"RTN","ECXSCLD",9,0)
START ; entry point
"RTN","ECXSCLD",10,0)
 S EC=0,ECNT=0 F  S EC=$O(^SC(EC)) Q:'EC  I $D(^(EC,0)) S ECD=^(0),DAT=$G(^("I")) I $P(ECD,"^",3)="C" D FIX
"RTN","ECXSCLD",11,0)
 K DIK S DIK="^ECX(728.44,",DIK(1)=".01^B" D ENALL^DIK
"RTN","ECXSCLD",12,0)
 ;S $P(^ECX(728.44,0),"^",3,4)=ECL_"^"_ECNT
"RTN","ECXSCLD",13,0)
 K ZTDESC,EC,J,ECD,ECD2,ECL,ECS,ECS2,ECP
"RTN","ECXSCLD",14,0)
 S ZTREQ="@" Q
"RTN","ECXSCLD",15,0)
 ;
"RTN","ECXSCLD",16,0)
FIX ; get stop codes and default style for feeder key
"RTN","ECXSCLD",17,0)
 ; 1 if no credit stop code - 5 if credit stop code exists
"RTN","ECXSCLD",18,0)
 K ECD2,ECS2 I $D(^ECX(728.44,EC,0)) S ECD2=^(0) F ECS=2,3 S ECS2(ECS)=$P(ECD2,"^",ECS)
"RTN","ECXSCLD",19,0)
 S ID=+DAT,RD=$P(DAT,"^",2)
"RTN","ECXSCLD",20,0)
 I $D(ECD2) D
"RTN","ECXSCLD",21,0)
 .I ID,ID'>DT I 'RD!(RD>DT) S:$P(ECD2,"^",10)'=ID $P(ECD2,"^",7)="" S $P(ECD2,"^",10)=ID
"RTN","ECXSCLD",22,0)
 .I ID,RD,RD'>DT S:$P(ECD2,"^",10) $P(ECD2,"^",7)="" S $P(ECD2,"^",10)=""
"RTN","ECXSCLD",23,0)
 .I ID,ID>DT S:$P(ECD2,"^",10) $P(ECD2,"^",7)="" S $P(ECD2,"^",10)=""
"RTN","ECXSCLD",24,0)
 .I 'ID,$P(ECD2,"^",10) S $P(ECD2,"^",7)="",$P(ECD2,"^",10)=""
"RTN","ECXSCLD",25,0)
 F ECS=7,18 S ECP=+$P(ECD,"^",ECS),ECS(ECS)=$P($G(^DIC(40.7,ECP,0)),"^",2)
"RTN","ECXSCLD",26,0)
 S ECDF=$S(ECS(18)]"":5,1:1) S:$P(ECD,"^",17)="Y" ECDF=6 S:$G(^SC(EC,"OOS")) ECDF=6
"RTN","ECXSCLD",27,0)
 S ECL=EC,ECD=EC_"^"_ECS(7)_"^"_ECS(18)
"RTN","ECXSCLD",28,0)
 I '$D(ECD2) D
"RTN","ECXSCLD",29,0)
 .S $P(^ECX(728.44,EC,0),"^",1,5)=ECD_"^"_ECS(7)_"^"_ECS(18),ECNT=ECNT+1,$P(^(0),"^",6)=ECDF
"RTN","ECXSCLD",30,0)
 I $D(ECD2) D
"RTN","ECXSCLD",31,0)
 .S $P(ECD2,"^",1,3)=ECD
"RTN","ECXSCLD",32,0)
 .I +ECS(7)'=+ECS2(2)!(+ECS(18)'=+ECS2(3)) S $P(ECD2,"^",7)=""
"RTN","ECXSCLD",33,0)
 .S ^ECX(728.44,EC,0)=ECD2
"RTN","ECXSCLD",34,0)
 Q
"RTN","ECXSCLD",35,0)
 ;
"RTN","ECXSCLD",36,0)
PRINT ; print worksheet for updates
"RTN","ECXSCLD",37,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",38,0)
 W !!,"This option produces a worksheet of (A)ll DSS Clinic Stops or only the",!,"(U)nreviewed Clinic Stops that are awaiting approval.  Clinics that were"
"RTN","ECXSCLD",39,0)
 W !,"defined as ""inactive"" by MAS the last time the option ""Create DSS Clinic",!,"Stop Code File"" was run will be indicated with an ""*"".",!
"RTN","ECXSCLD",40,0)
 S DIR(0)="S^A:ALL;U:UNREVIEWED",DIR("A")="Enter ""A"" or ""U""",DIR("?",1)="Enter: ""A"" to print a worksheet of all DSS Clinic Stops,",DIR("?")="       ""U"" to print only the Clinic Stops that have not been approved."
"RTN","ECXSCLD",41,0)
 D ^DIR K DIR G END:$D(DIRUT) S ECALL=$E(Y)
"RTN","ECXSCLD",42,0)
 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","ECXSCLD",43,0)
 I $D(IO("Q")) K ZTSAVE S ZTDESC="DSS clinic stop code work sheet",ZTRTN="SPRINT^ECXSCLD",ZTSAVE("ECALL")="" D ^%ZTLOAD,HOME^%ZIS Q
"RTN","ECXSCLD",44,0)
 U IO
"RTN","ECXSCLD",45,0)
SPRINT ; queued entry to print work sheet
"RTN","ECXSCLD",46,0)
 S QFLG=0,$P(LN,"-",81)="",PG=0
"RTN","ECXSCLD",47,0)
 S ECDATE=$O(^ECX(728.44,"A1","")) I ECDATE S ECDATE=-ECDATE,ECDATE=$E(ECDATE,4,5)_"/"_$E(ECDATE,6,7)_"/"_$E(ECDATE,2,3)
"RTN","ECXSCLD",48,0)
 K ^TMP("EC",$J) F J=0:0 S J=$O(^ECX(728.44,J)) Q:'J  I $D(^ECX(728.44,J,0)),$S(ECALL="A":1,1:$P(^(0),"^",7)="") S ECSD=^(0) I $D(^SC(J,0)) S ECSC=$P(^(0),"^"),^TMP("EC",$J,ECSC)=$P(ECSD,"^",2,200)
"RTN","ECXSCLD",49,0)
 D HEAD S ECSC="" I $O(^TMP("EC",$J,ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! G END
"RTN","ECXSCLD",50,0)
 F J=1:1 S ECSC=$O(^TMP("EC",$J,ECSC)) Q:ECSC=""  S ECD=^(ECSC) D SHOWEM Q:QFLG
"RTN","ECXSCLD",51,0)
 I $E(IOST)="C",'QFLG D SS
"RTN","ECXSCLD",52,0)
 K ^TMP("EC",$J),J,ECSC,ECSD,ECDATE,QFLG,PG,LN,SS
"RTN","ECXSCLD",53,0)
 W:$Y @IOF D ^%ZISC S ZTREQ="@"
"RTN","ECXSCLD",54,0)
 Q
"RTN","ECXSCLD",55,0)
 ;
"RTN","ECXSCLD",56,0)
HEAD ; header for worksheet
"RTN","ECXSCLD",57,0)
 D SS Q:QFLG
"RTN","ECXSCLD",58,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"WORKSHEET FOR DSS CLINIC STOPS",?72,"Page: ",PG
"RTN","ECXSCLD",59,0)
 I ECDATE]"" W !,"(last reviewed on ",ECDATE,")"
"RTN","ECXSCLD",60,0)
 E  W !,"(NEVER REVIEWED)"
"RTN","ECXSCLD",61,0)
 W !
"RTN","ECXSCLD",62,0)
 W !!,?1,"CLINIC",?33,"STOP",?40,"CREDIT",?49,"DSS",?56,"DSS",?65,"ACTION",?73,"NAT'L"
"RTN","ECXSCLD",63,0)
 W !,?33,"CODE",?40,"STOP",?49,"STOP",?56,"CREDIT",?73,"CODE",!,?1,"(* - currently inactive)",?40,"CODE",?49,"CODE",?56,"CODE",!,LN Q
"RTN","ECXSCLD",64,0)
 ;
"RTN","ECXSCLD",65,0)
SHOWEM ; list clinics for worksheet
"RTN","ECXSCLD",66,0)
 I $Y+4>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD",67,0)
 W !!,$E(ECSC,1,30) W:$P(ECD,"^",9)]"" "*" F J=1:1:5 W ?$P("33,40,49,56,68",",",J),$S($P(ECD,"^",J):$P(ECD,"^",J),J<3:"",1:"_____")
"RTN","ECXSCLD",68,0)
 S ECN=$P($G(^ECX(728.441,+$P(ECD,"^",7),0)),"^") W ?73,$S(ECN]"":ECN,1:"____")
"RTN","ECXSCLD",69,0)
 Q
"RTN","ECXSCLD",70,0)
SS ;SCROLL STOPS
"RTN","ECXSCLD",71,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXSCLD",72,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXSCLD",73,0)
 Q
"RTN","ECXSCLD",74,0)
 ;
"RTN","ECXSCLD",75,0)
EDIT ; put in DSS stopcodes and which one to send
"RTN","ECXSCLD",76,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",77,0)
 W ! S DIC=728.44,DIC(0)="QEAMZ" D ^DIC G END:Y<0 W !,"STOP CODE : ",$P(Y(0),"^",2),!,"CREDIT STOP CODE : ",$P(Y(0),"^",3)
"RTN","ECXSCLD",78,0)
 S DIE=DIC,DA=+Y,DR="3;4;5//1;S:X'=4 Y=6;7;6///"_DT_";8" D ^DIE S:$P(^ECX(728.44,DA,0),"^",6)'=4 $P(^(0),"^",8)="" S $P(^(0),"^",7)="" K DIC,DIE,DA G EDIT
"RTN","ECXSCLD",79,0)
 ;
"RTN","ECXSCLD",80,0)
APPROVE ; approve current DSS Stop and Credit Stop codes
"RTN","ECXSCLD",81,0)
 W !!,"This option allows you to mark the current clinic entries in the CLINICS AND",!,"STOP CODES file (#728.44) as ""reviewed"".  Those entries will then be omitted"
"RTN","ECXSCLD",82,0)
 W !,"from the list printed from the ""Clinic and DSS Stop Codes Print"" when you",!,"choose to print only ""unreviewed"" clinics.",!
"RTN","ECXSCLD",83,0)
 K DIR S DIR(0)="Y",DIR("A",1)="Are you ready to approve the reviewed information provided by the",DIR("A")="""Clinic and DSS Stop Codes Print""",DIR("B")="NO"
"RTN","ECXSCLD",84,0)
 S DIR("?",1)="   Enter:"
"RTN","ECXSCLD",85,0)
 S DIR("?",2)="     ""YES"" if you concur with the ""Clinic and DSS Stop Codes Print"","
"RTN","ECXSCLD",86,0)
 S DIR("?",3)="     ""NO"" or <RET> if you do not want to approve the current information,"
"RTN","ECXSCLD",87,0)
 S DIR("?")="     ""^"" to exit option."
"RTN","ECXSCLD",88,0)
 D ^DIR K DIR I 'Y!($D(DIRUT)) G END
"RTN","ECXSCLD",89,0)
 W ! S ZTRTN="APPLOOP^ECXSCLD",ZTIO="",ZTDESC="Approve DSS stop codes for clinic extract" D ^%ZTLOAD W !!,"...approval queued" G END
"RTN","ECXSCLD",90,0)
 ;
"RTN","ECXSCLD",91,0)
APPLOOP ; queued entry to approve action codes
"RTN","ECXSCLD",92,0)
 F EC=0:0 S EC=$O(^ECX(728.44,EC)) Q:'EC  I $D(^(EC,0)) S DA=EC,DIE="^ECX(728.44,",DR="6///"_DT D ^DIE
"RTN","ECXSCLD",93,0)
 S ZTREQ="@" G END
"RTN","ECXSCLD",94,0)
END K X,Y,DA,DR,DIC,DIE,QFLG,PG,LN
"RTN","ECXSCLD",95,0)
 Q
"RTN","ECXSCLD",96,0)
 ;
"RTN","ECXSCLD",97,0)
LOOK ;queued entry to check for new clinics
"RTN","ECXSCLD",98,0)
 S ECD=$E(DT,1,5)-1-($E(DT,4,5)="01"*8800),ECD0=ECD_"00",ECXMISS=10,ECGRP="SCX" K ^TMP("ECXS",$J)
"RTN","ECXSCLD",99,0)
 F EC=0:0 S EC=$O(^SC(EC)) Q:'EC  I $D(^(EC,0)),$P(^(0),"^",3)="C",'$D(^ECX(728.44,EC)) S DAT=$G(^SC(EC,"I")) D
"RTN","ECXSCLD",100,0)
 .S ID=+DAT,RD=$P(DAT,"^",2) I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCLD",101,0)
 .S ^TMP("ECXS",$J,ECXMISS,0)=$J(EC,6)_"    "_$$LJ^XLFSTR($P(^SC(EC,0),"^"),40),ECXMISS=ECXMISS+1
"RTN","ECXSCLD",102,0)
 D ^ECXSCX1
"RTN","ECXSCLD",103,0)
 Q
"RTN","ECXSCNS")
0^45^B9845645
"RTN","ECXSCNS",1,0)
ECXSCNS ;BIR/DMA,PTD-No Show Clinic Extract ; [ 11/22/96  5:48 PM ]
"RTN","ECXSCNS",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXSCNS",3,0)
BEG ;entry point from option
"RTN","ECXSCNS",4,0)
 D SETUP,^ECXTRAC,^ECXKILL
"RTN","ECXSCNS",5,0)
 Q
"RTN","ECXSCNS",6,0)
 ;
"RTN","ECXSCNS",7,0)
START ;start package specific extract
"RTN","ECXSCNS",8,0)
 S QFLG=0
"RTN","ECXSCNS",9,0)
 S ECED=ECED+.3
"RTN","ECXSCNS",10,0)
 S SC=0 F  S SC=$O(^SC(SC)) Q:'SC  I $D(^(SC,0)) D  Q:QFLG
"RTN","ECXSCNS",11,0)
 .S EC=^(0) I $P(EC,"^",3)="C" D
"RTN","ECXSCNS",12,0)
 ..S SU=$P(EC,"^",15)
"RTN","ECXSCNS",13,0)
 ..D FEEDER^ECXSCX(SC,ECSD1,.ECXP1,.ECXP2,.ECXP3,.ECXSEND)
"RTN","ECXSCNS",14,0)
 ..Q:ECXSEND=6
"RTN","ECXSCNS",15,0)
 ..S ECXDSS=ECXP1_ECXP2,ECD=ECSD1
"RTN","ECXSCNS",16,0)
 ..F  S ECD=$O(^SC(SC,"S",ECD)) Q:'ECD  Q:ECD>ECED  D MORE Q:QFLG
"RTN","ECXSCNS",17,0)
 Q
"RTN","ECXSCNS",18,0)
 ;
"RTN","ECXSCNS",19,0)
MORE S ECDA=0 F  S ECDA=$O(^SC(SC,"S",ECD,1,ECDA)) Q:'ECDA  I $D(^(ECDA,0)),$S('$D(^("C")):1,1:^("C")="") S EC=^(0),DFN=$P(EC,"^") I $D(^DPT(+DFN,0)) S EC1=^(0) D INP I ECA=1 D GET
"RTN","ECXSCNS",20,0)
 ;log no shows only for outpatients
"RTN","ECXSCNS",21,0)
 Q
"RTN","ECXSCNS",22,0)
GET ;
"RTN","ECXSCNS",23,0)
 S DOB=$$ECXDOB^ECXUTL($P(EC1,"^",3)),VET=$P($G(^("VET")),"^"),RACE=$P($G(^DIC(10,+$P(EC1,"^",6),0)),"^",2),D1=$P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),"^",9) I D1 S D1=$C(D1+64)
"RTN","ECXSCNS",24,0)
 I $D(^DPT(DFN,"S",ECD,0)),$P(^(0),"^")=SC,$P(^(0),"^",2)]"",$P(^(0),"^",2)["N" D
"RTN","ECXSCNS",25,0)
 .S ECODE=SU_"^"_DFN_"^"_$P(EC1,"^",9)_"^"_$E($P($P(EC1,"^"),",")_"    ",1,4)_"^"_ECA_"^"_$$ECXDATE^ECXUTL(ECD,ECXYM)_"^^"_ECMN_"^"_ECTS_"^"_DOB_"^"_D1_"^"_VET_"^"_$$ECXTIME^ECXUTL(ECD)_"^"_ECPTTM_"^"_ECPTPR_"^^"_RACE_"^"_ECXDSS_"^"
"RTN","ECXSCNS",26,0)
 .D FILE
"RTN","ECXSCNS",27,0)
 ;fac^dfn^ssn^name^in/out^day^^mov #^treat spec^dob^elig^vet^time^primary care team^primary care provider^provider^race^dss identifier
"RTN","ECXSCNS",28,0)
 Q
"RTN","ECXSCNS",29,0)
FILE S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXSCNS",30,0)
 S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSCNS",31,0)
 I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSCNS",32,0)
 Q
"RTN","ECXSCNS",33,0)
 ;
"RTN","ECXSCNS",34,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSCNS",35,0)
 S ECPACK="Clinic no shows",ECPIECE=15,ECRTN="START^ECXSCNS",ECGRP="SCNS",ECFILE=727.804,ECHEAD="NOS",ECVER=7
"RTN","ECXSCNS",36,0)
 Q
"RTN","ECXSCNS",37,0)
 ;
"RTN","ECXSCNS",38,0)
INP ;Determine in/outpatient status, movement number, primary care team and provider.
"RTN","ECXSCNS",39,0)
 S ECA=1,ECTS="" K VAIP S VAIP("D")=ECD D IN5^VADPT S ECMN=VAIP(1) I ECMN S ECA=3,ECTS=$P($G(^DIC(45.7,+VAIP(8),0)),"^",2)
"RTN","ECXSCNS",40,0)
 K VAIP,VAERR
"RTN","ECXSCNS",41,0)
 I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXSCNS",42,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(DFN,ECD) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(DFN,ECD) S:ECPTPR=0 ECPTPR=""
"RTN","ECXSCNS",43,0)
 I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXSCNS",44,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(DFN) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(DFN) S:ECPTPR=0 ECPTPR=""
"RTN","ECXSCNS",45,0)
 Q
"RTN","ECXSCNS",46,0)
 ;
"RTN","ECXSCNS",47,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSCNS",48,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXSCX")
0^46^B49777048
"RTN","ECXSCX",1,0)
ECXSCX ;BIR/DMA,CML,PTD-Clinic Extract ; 02/06/97 10:24 [ 03/26/97  2:10 PM ]
"RTN","ECXSCX",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXSCX",3,0)
BEG ;entry point from option
"RTN","ECXSCX",4,0)
 D SETUP,^ECXTRAC,^ECXKILL
"RTN","ECXSCX",5,0)
 Q
"RTN","ECXSCX",6,0)
 ;
"RTN","ECXSCX",7,0)
START ;scheduled appts. and appended ekgs: loop through the file (#44);
"RTN","ECXSCX",8,0)
 ;for each clinic found, loop through the appointment multiple for extract date range
"RTN","ECXSCX",9,0)
 K ^TMP("ECXS",$J) S ECXMISS=10,ECED=ECED+.3 S SC=0,QFLG=0
"RTN","ECXSCX",10,0)
 F  S SC=$O(^SC(SC)) Q:'SC  I $D(^(SC,0)) S EC=^(0) I $P(EC,"^",3)="C" S ECSU=$P(EC,"^",15) S:'ECSU ECSU=1 D FEEDER(SC,ECSD1,.P1,.P2,.P3,.ECST) I ECST'=6 S ECD=ECSD1 D  Q:QFLG
"RTN","ECXSCX",11,0)
 .F  S ECD=$O(^SC(SC,"S",ECD)) Q:'ECD  Q:ECD>ECED  S ECDA=0 F  S ECDA=$O(^SC(SC,"S",ECD,1,ECDA)) Q:'ECDA  I $D(^(ECDA,0)) D  Q:QFLG
"RTN","ECXSCX",12,0)
 ..;for each patient appointment in the date range (skip cancellations), examine the APPOINTMENT multiple in the PATIENT file (#2).
"RTN","ECXSCX",13,0)
 ..I $S('$D(^SC(SC,"S",ECD,1,ECDA,"C")):1,1:$P(^("C"),"^",3)]"") S PTADT=^(0),DFN=$P(PTADT,"^") I $D(^DPT(+DFN,0)),$P(PTADT,"^",9)="",$P($G(^DPT(DFN,"S",ECD,0)),"^",2)'["C" D
"RTN","ECXSCX",14,0)
 ...S EC1=^DPT(DFN,0),ECO1=ECSU_"^"_DFN_"^"_$P(EC1,"^",9)_"^"_$E($P($P(EC1,"^"),",")_"   ",1,4)_"^^"_$$ECXDATE^ECXUTL(ECD,ECXYM)
"RTN","ECXSCX",15,0)
 ...D AOIRPOW^ECXUTL(DFN,.ECXAIP)
"RTN","ECXSCX",16,0)
 ...S ECL=$P(PTADT,"^",2),ECL=$$RJ^XLFSTR(ECL,3,0),ECOB=$G(^SC(SC,"S",ECD,1,ECDA,"OB"))]"",ECN=0
"RTN","ECXSCX",17,0)
 ...K EC2 I $D(^DPT(DFN,"S",ECD,0)),$P(^(0),"^")=SC S EC2=^(0) S:$P(EC2,"^",2)["N"&($P(EC2,"^",2)'["NT") ECN="N" S ECIEN=$P($G(EC2),"^",20),ECEKG=$P($G(EC2),"^",5)
"RTN","ECXSCX",18,0)
 ...S ECO2=ECOB_"^"_SC
"RTN","ECXSCX",19,0)
 ...S ECFD=P1_P2_ECL_P3_ECN
"RTN","ECXSCX",20,0)
 ...S ECODE=ECO1_"^"_ECFD_"^"_ECO2 D API
"RTN","ECXSCX",21,0)
 ...;Check for appended visits for EKG (107). If regular appt. is a no-show, append is a no-show.
"RTN","ECXSCX",22,0)
 ...Q:'ECEKG  S $P(ECODE,"^",7,9)="1070000280000"_ECN_"^^" D FILE2
"RTN","ECXSCX",23,0)
 ;Clean up variables before proceeding.
"RTN","ECXSCX",24,0)
 K DFN,EC,EC1,EC2,ECA,ECCPT,ECCSC,ECD,ECDA,ECEKG,ECFD,ECICD,ECIEN,ECL,ECMN,ECN,ECO1,ECO2,ECOB,ECODE,ECPROV,ECPTPR,ECPTTM,ECREC,ECSC,ECST,ECSU,ECTS,ECVAL,ECVIS,ELIG,P1,P11,P2,P3,PTADT,SC,VAERR,VAIP
"RTN","ECXSCX",25,0)
 ;
"RTN","ECXSCX",26,0)
 ;Dispositions, stand-alones, and appended lab and x-ray: Loop through the OUTPATIENT ENCOUNTER file (#409.68) for date range.
"RTN","ECXSCX",27,0)
 S ECD=ECSD1 F  S ECD=$O(^SCE("B",ECD)) Q:'ECD!(ECD>ECED)  S ECIEN=0 F  S ECIEN=$O(^SCE("B",ECD,ECIEN)) Q:'ECIEN  D PROC Q:QFLG
"RTN","ECXSCX",28,0)
 I '$D(^TMP("ECXS",$J)) Q
"RTN","ECXSCX",29,0)
 Q:QFLG
"RTN","ECXSCX",30,0)
 G ^ECXSCX1
"RTN","ECXSCX",31,0)
 ;
"RTN","ECXSCX",32,0)
PROC ;Process an OUTPATIENT ENCOUNTER.
"RTN","ECXSCX",33,0)
 Q:'$D(^SCE(ECIEN,0))  ;Quit if no OUTPATIENT ENCOUNTER zero node.
"RTN","ECXSCX",34,0)
 S FD=0,NCNTR=^SCE(ECIEN,0),STOP=$P($G(^DIC(40.7,+$P(NCNTR,"^",3),0)),"^",2) Q:'STOP  ;Quit if no clinic stop code for encounter.
"RTN","ECXSCX",35,0)
 ;FD=1>x-ray or lab record, FD=2>disposition, FD=0>stand-alone visit
"RTN","ECXSCX",36,0)
 I (STOP=105)!(STOP=108) S FD=1 G BLD ;Clinic stop code equals 105 (x-ray) or 108 (lab).
"RTN","ECXSCX",37,0)
 I ($P(NCNTR,"^",8)'=2),($P(NCNTR,"^",8)'=3) Q  ;Quit if encounter not STOP CODE ADDITION or DISPOSITION.
"RTN","ECXSCX",38,0)
 I $P(NCNTR,"^",8)=3 S FD=2 G BLD ;ORIGINATING PROCESS TYPE equals DISPOSITION.
"RTN","ECXSCX",39,0)
 ;Else ORIGINATING PROCESS TYPE equals STOP CODE ADDITION (stand-alone).
"RTN","ECXSCX",40,0)
 Q:$P($G(NCNTR),"^",6)  ;Quit if there is a PARENT ENCOUNTER pointer.
"RTN","ECXSCX",41,0)
BLD ;Build record.
"RTN","ECXSCX",42,0)
 S DFN=+$P(NCNTR,"^",2),LOC=$P(NCNTR,"^",4),ECSU=1 S:LOC ECSU=$P(^SC(LOC,0),"^",15)
"RTN","ECXSCX",43,0)
 I $D(^DPT(DFN,0)) S EC1=^(0),ECO1=ECSU_"^"_DFN_"^"_$P(EC1,"^",9)_"^"_$E($P($P(EC1,"^"),",")_"    ",1,4)_"^^"_$$ECXDATE^ECXUTL(ECD,ECXYM) D
"RTN","ECXSCX",44,0)
 .D AOIRPOW^ECXUTL(DFN,.ECXAIP)
"RTN","ECXSCX",45,0)
 .S P1=$$RJ^XLFSTR(STOP,3,0),P2="000",P3="0000",ECST=1
"RTN","ECXSCX",46,0)
 .; for x-ray and lab
"RTN","ECXSCX",47,0)
 .I FD=1 S ECODE=ECO1_"^"_P1_P2_"02800000^^" D API Q
"RTN","ECXSCX",48,0)
 .; for dispositions
"RTN","ECXSCX",49,0)
 .I FD=2 S ECODE=ECO1_"^"_P1_"47906000000^^" D API Q
"RTN","ECXSCX",50,0)
 .; for stand-alone visits
"RTN","ECXSCX",51,0)
 .I LOC,$D(^SC(LOC,0)) S SC=LOC,EC=^(0) D FEEDER(SC,ECD,.P1,.P2,.P3,.ECST)
"RTN","ECXSCX",52,0)
 .I ECST'=6 S ECODE=ECO1_"^"_P1_P2_"029"_P3_"0^^"_SC D API
"RTN","ECXSCX",53,0)
 Q
"RTN","ECXSCX",54,0)
 ;
"RTN","ECXSCX",55,0)
FILE ;facility^dfn^ssn^name^in/out status^day^feeder key^overbook^sc^mov #^treat spec^time^primary care team^
"RTN","ECXSCX",56,0)
 ;primary care provider^provider^CPT code^ICD-9 code^dob^eligibility^vet^race^
"RTN","ECXSCX",57,0)
 ;ao status^ao visit^ir statusir visit^pow status^pow location^provider person class
"RTN","ECXSCX",58,0)
 S $P(ECODE,"^",5)=ECA,ECODE=ECODE_"^"_ECMN_"^"_ECTS_"^"_$$ECXTIME^ECXUTL(ECD)_"^"_ECPTTM_"^"_ECPTPR_"^"_ECPROV_"^"_ECCPT_"^"_ECICD
"RTN","ECXSCX",59,0)
 S ECODE=ECODE_"^"_$$ECXDOB^ECXUTL($P(EC1,"^",3))_"^"_ELIG_"^"_$P($G(^DPT(DFN,"VET")),"^")_"^"_$P($G(^DIC(10,+$P(EC1,"^",6),0)),"^",2)
"RTN","ECXSCX",60,0)
 S ECODE=ECODE_"^"_ECXAIP("AO")_"^"_ECVAO_"^"_ECXAIP("IR")_"^"_ECVIR_"^"_ECXAIP("POW")_"^"_ECXAIP("POWL")_"^^"
"RTN","ECXSCX",61,0)
FILE2 S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXSCX",62,0)
 S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSCX",63,0)
 I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSCX",64,0)
 Q
"RTN","ECXSCX",65,0)
 ;
"RTN","ECXSCX",66,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSCX",67,0)
 S ECPACK="Clinic",ECPIECE=11,ECRTN="START^ECXSCX",ECGRP="SCX",ECFILE=727.803,ECHEAD="CLI",ECVER=7
"RTN","ECXSCX",68,0)
 Q
"RTN","ECXSCX",69,0)
 ;
"RTN","ECXSCX",70,0)
FEEDER(ECXSC,ECXSD,ECXP1,ECXP2,ECXP3,ECXSEND) ;get transmission style and feeder key variables
"RTN","ECXSCX",71,0)
 ;feeder key is primary stop code_secondary stop code_length of appointment_national clinic code_noshow indicator
"RTN","ECXSCX",72,0)
 ;appointment length and no show determined elsewhere
"RTN","ECXSCX",73,0)
 ;
"RTN","ECXSCX",74,0)
 ;   input
"RTN","ECXSCX",75,0)
 ;   ECXSCX = ien of clinic in file #44 (required)
"RTN","ECXSCX",76,0)
 ;   ECXSD  = start date of extract date range (required)
"RTN","ECXSCX",77,0)
 ;   ECXP1 passed by reference (required)
"RTN","ECXSCX",78,0)
 ;   ECXP2 passed by reference (required)
"RTN","ECXSCX",79,0)
 ;   ECXP3 passed by reference (required)
"RTN","ECXSCX",80,0)
 ;   ECXSEND passed by reference (required)
"RTN","ECXSCX",81,0)
 ;
"RTN","ECXSCX",82,0)
 ;   output (passed-by-reference variables)
"RTN","ECXSCX",83,0)
 ;   ECXP1  = primary stop code
"RTN","ECXSCX",84,0)
 ;   ECXP2  = secondary stop code
"RTN","ECXSCX",85,0)
 ;   ECXP3  = field #7 of file #728.44
"RTN","ECXSCX",86,0)
 ;   ECXSEND = field #5 of file #728.44
"RTN","ECXSCX",87,0)
 ;
"RTN","ECXSCX",88,0)
 N ECSC,ECCSC,SC,ECSD1,ECXNC,ECXMISS
"RTN","ECXSCX",89,0)
 S (ECXP1,ECXP2)="000",ECXP3="0000"
"RTN","ECXSCX",90,0)
 ;use action code=1 as default in case none found
"RTN","ECXSCX",91,0)
 S ECXSEND=1
"RTN","ECXSCX",92,0)
 ;if there is no entry in file #728.44 for this clinic, then get data from file #44
"RTN","ECXSCX",93,0)
 I '$D(^ECX(728.44,ECXSC,0)) D  Q
"RTN","ECXSCX",94,0)
 .S ECSC=$P($G(^SC(ECXSC,0)),"^",7),ECCSC=$P(^(0),"^",18)
"RTN","ECXSCX",95,0)
 .S SC=ECXSC,ECSD1=ECXSD D MISS^ECXSCX1
"RTN","ECXSCX",96,0)
 .I ECSC S ECXP1=$P($G(^DIC(40.7,ECSC,0)),"^",2),ECXP1=$$RJ^XLFSTR(ECXP1,3,0)
"RTN","ECXSCX",97,0)
 ;if the file #728.44 exists, then use the data found there
"RTN","ECXSCX",98,0)
 S EC=$G(^ECX(728.44,ECXSC,0)) Q:EC=""
"RTN","ECXSCX",99,0)
 S ECXSEND=$P(EC,"^",6)
"RTN","ECXSCX",100,0)
 Q:ECXSEND=6
"RTN","ECXSCX",101,0)
 ;if action code is 2 or 3 (invalid), then reset to 1
"RTN","ECXSCX",102,0)
 I ECXSEND=2!(ECXSEND=3) S ECXSEND=1
"RTN","ECXSCX",103,0)
 S ECSC=$P(EC,"^",4),ECCSC=$P(EC,"^",5)
"RTN","ECXSCX",104,0)
 I ECSC="" S ECSC=$P(EC,"^",2),ECCSC=$P(EC,"^",3)
"RTN","ECXSCX",105,0)
 I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXSCX",106,0)
 I ECSC="" D
"RTN","ECXSCX",107,0)
 .S ECSC=$P($G(^SC(ECXSC,0)),"^",7),ECCSC=$P($G(^(0)),"^",18) I ECSC D
"RTN","ECXSCX",108,0)
 ..S ECXP1=$P($G(^DIC(40.7,ECSC,0)),"^",2),ECXP2=$P($G(^DIC(40.7,ECCSC,0)),"^",2)
"RTN","ECXSCX",109,0)
 ..S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXSCX",110,0)
 ;for action code=1, secondary stop code is always "000"
"RTN","ECXSCX",111,0)
 I ECXSEND=1 S ECXP2="000" Q
"RTN","ECXSCX",112,0)
 ;for action code=4, need to get national clinic code
"RTN","ECXSCX",113,0)
 I ECXSEND=4 D
"RTN","ECXSCX",114,0)
 .S ECXNC=$P($G(^ECX(728.44,ECXSC,0)),"^",8)
"RTN","ECXSCX",115,0)
 .I ECXNC S ECXNC=$P($G(^ECX(728.441,ECXNC,0)),"^"),ECXP3=$$RJ^XLFSTR(ECXNC,4,0)
"RTN","ECXSCX",116,0)
 Q
"RTN","ECXSCX",117,0)
 ;
"RTN","ECXSCX",118,0)
API ;Call IN5^VADPT, OUTPTPR^SDUTL3, and ENCEVENT^PXAPI
"RTN","ECXSCX",119,0)
 ;Determine in/out status and movement number.
"RTN","ECXSCX",120,0)
 S ECA=1,ECTS="" K VAIP S VAIP("D")=ECD D IN5^VADPT S ECMN=VAIP(1) I ECMN S ECA=3,ECTS=$P($G(^DIC(45.7,+VAIP(8),0)),"^",2)
"RTN","ECXSCX",121,0)
 K VAIP,VAERR
"RTN","ECXSCX",122,0)
 ;Determine primary care team/provider and eligibility.
"RTN","ECXSCX",123,0)
 I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXSCX",124,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(DFN,ECD) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(DFN,ECD) S:ECPTPR=0 ECPTPR=""
"RTN","ECXSCX",125,0)
 I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXSCX",126,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(DFN) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(DFN) S:ECPTPR=0 ECPTPR=""
"RTN","ECXSCX",127,0)
 S ELIG=$P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),"^",9) I ELIG S ELIG=$C(ELIG+64)
"RTN","ECXSCX",128,0)
PCE ;Call PCE API for CPT code, diagnosis/provider designated as primary. If no data found, default equals provider=null, CPT=99199, ICD9=799.9.
"RTN","ECXSCX",129,0)
 S ECPROV="",ECCPT=99199,ECICD=799.9
"RTN","ECXSCX",130,0)
 I 'ECIEN S (ECVAO,ECVIR)="" D FILE Q  ;Quit if no OUTPATIENT ENCOUNTER found for pat. appt.
"RTN","ECXSCX",131,0)
 I ECIEN S ECVIS=$P($G(^SCE(ECIEN,0)),"^",5)
"RTN","ECXSCX",132,0)
 I 'ECVIS D FILE Q  ;Quit if no VISIT FILE ENTRY found for encounter.
"RTN","ECXSCX",133,0)
 I ECVIS D ENCEVENT^PXAPI(ECVIS)
"RTN","ECXSCX",134,0)
 I $O(^TMP("PXKENC",$J,ECVIS,""))']"" D FILE Q  ;Quit if no data returned from PCE API.
"RTN","ECXSCX",135,0)
CPT ;Get CPT code for IEN, else use default.
"RTN","ECXSCX",136,0)
 G:'$O(^TMP("PXKENC",$J,ECVIS,"CPT",0)) POV
"RTN","ECXSCX",137,0)
 K ECREC S ECVAL=0,ECREC=$O(^TMP("PXKENC",$J,ECVIS,"CPT",0)),ECVAL=+^(ECREC,0) I ECVAL S ECCPT=ECVAL
"RTN","ECXSCX",138,0)
POV ;Get first primary ICD9 code for IEN, else use default.
"RTN","ECXSCX",139,0)
 G:'$O(^TMP("PXKENC",$J,ECVIS,"POV",0)) PRV
"RTN","ECXSCX",140,0)
 S (ECREC,ECVAL)=0
"RTN","ECXSCX",141,0)
 ;** ECX*2*27 modified the following line of code
"RTN","ECXSCX",142,0)
 F  S ECREC=$O(^TMP("PXKENC",$J,ECVIS,"POV",ECREC)) Q:'ECREC  S:($P(^TMP("PXKENC",$J,ECVIS,"POV",ECREC,0),"^",12)="P") ECVAL=+^(0) Q:$P(^TMP("PXKENC",$J,ECVIS,"POV",ECREC,0),"^",12)="P"
"RTN","ECXSCX",143,0)
 I ECVAL S ECICD=$P($G(^ICD9(ECVAL,0)),"^")
"RTN","ECXSCX",144,0)
PRV ;Get first provider designated as primary for IEN, else use default.
"RTN","ECXSCX",145,0)
 G:'$O(^TMP("PXKENC",$J,ECVIS,"PRV",0)) DFLT
"RTN","ECXSCX",146,0)
 S (ECREC,ECVAL)=0
"RTN","ECXSCX",147,0)
 ;** ECX*2*27 modified the following line of code
"RTN","ECXSCX",148,0)
 F  S ECREC=$O(^TMP("PXKENC",$J,ECVIS,"PRV",ECREC)) Q:'ECREC  S:($P(^TMP("PXKENC",$J,ECVIS,"PRV",ECREC,0),"^",4)="P") ECVAL=+^(0) Q:$P(^TMP("PXKENC",$J,ECVIS,"PRV",ECREC,0),"^",4)="P"
"RTN","ECXSCX",149,0)
 I ECVAL S ECPROV=ECVAL
"RTN","ECXSCX",150,0)
DFLT ;
"RTN","ECXSCX",151,0)
 S (ECVAO,ECVIR)=""
"RTN","ECXSCX",152,0)
 I $D(^TMP("PXKENC",$J,ECVIS,"VST",ECVIS,800)) D
"RTN","ECXSCX",153,0)
 .S ECVAO=$P(^(800),"^",2),ECVIR=$P(^(800),"^",3)
"RTN","ECXSCX",154,0)
 .S:ECVAO="0" ECVAO="N" S:ECVIR=0 ECVIR="N"
"RTN","ECXSCX",155,0)
 .S:ECVAO="1" ECVAO="Y" S:ECVIR=1 ECVIR="Y"
"RTN","ECXSCX",156,0)
 D FILE
"RTN","ECXSCX",157,0)
 Q
"RTN","ECXSCX",158,0)
 ;
"RTN","ECXSCX",159,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSCX",160,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXSCX1")
0^47^B2689741
"RTN","ECXSCX1",1,0)
ECXSCX1 ;BIR/DMA-Clinic Extract Message ; 20 Mar 95 / 11:10 AM [ 12/03/96  1:32 PM ]
"RTN","ECXSCX1",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXSCX1",3,0)
 N ECX
"RTN","ECXSCX1",4,0)
 S ECX=$O(^TMP("ECXS",$J,0)) Q:ECX=""
"RTN","ECXSCX1",5,0)
 S XMSUB="MISSING CLINICS",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",6,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",7,0)
 F ECX=1:1:6 S ^TMP("ECXS",$J,ECX,0)=$P($T(MSG+ECX),";",3,300)
"RTN","ECXSCX1",8,0)
 S XMTEXT="^TMP(""ECXS"",$J," D ^XMD K ^TMP("ECXS",$J)
"RTN","ECXSCX1",9,0)
 Q
"RTN","ECXSCX1",10,0)
 ;
"RTN","ECXSCX1",11,0)
MSG ;Text for the leading lines of the missing clinic messages
"RTN","ECXSCX1",12,0)
 ;;The following clinics have not been entered into the CLINIC AND
"RTN","ECXSCX1",13,0)
 ;;STOP CODES file (#728.44).  If any listed clinic is currently
"RTN","ECXSCX1",14,0)
 ;;active, please use the options 'Create DSS Clinic Stop Code File'
"RTN","ECXSCX1",15,0)
 ;;and 'Enter/Edit DSS Stop Codes for Clinics' to update this file.
"RTN","ECXSCX1",16,0)
 ;; 
"RTN","ECXSCX1",17,0)
 ;
"RTN","ECXSCX1",18,0)
MISS ;load ^TMP for clinics missing from 728.44
"RTN","ECXSCX1",19,0)
 Q:'$O(^SC(SC,"S",ECSD1))  S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,"^",2) I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",20,0)
 ; no missing messages for inactive clinics
"RTN","ECXSCX1",21,0)
 I '$D(ECXMISS) S ECXMISS=10
"RTN","ECXSCX1",22,0)
 S ^TMP("ECXS",$J,ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),"^"),40)_ECSC_"/"_ECCSC,ECXMISS=ECXMISS+1
"RTN","ECXSCX1",23,0)
 Q
"RTN","ECXSETU1")
0^48^B28204315
"RTN","ECXSETU1",1,0)
ECXSETU1 ;BIR/DMA,CML,PTD-Get Movements and Treating Speciality for Setup ; [ 01/10/97  4:34 PM ]
"RTN","ECXSETU1",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXSETU1",3,0)
 ;
"RTN","ECXSETU1",4,0)
 ;get movements
"RTN","ECXSETU1",5,0)
 S ECFILE=727.821,ECRN=0,QFLG=0
"RTN","ECXSETU1",6,0)
 F DFN=0:0 S DFN=$O(^TMP($J,DFN)) Q:'DFN  F ECCA=0:0 S ECCA=$O(^TMP($J,DFN,ECCA)) Q:'ECCA  S ECM=$O(^DGPM("APMV",DFN,ECCA,ECD0)) I ECM S ECDA=$O(^(ECM,0)) I ECDA,ECDA'=ECCA,$D(^DGPM(+ECDA,0)) S EC=^(0),DFN=+$P(EC,"^",3) D  Q:QFLG
"RTN","ECXSETU1",7,0)
 .Q:'$D(^DPT(DFN,0))  S D0=^DPT(DFN,0),ECDAT=ECED,ECTM=$E($P(ECDAT,".",2)_"000000",1,6),ECXYM=$$ECXYM^ECXUTL(ECDAT),ECMT=$P(EC,"^",18),ECMT=$S(ECMT<22:ECMT,ECMT<25:4,ECMT=25:3,ECMT=26:2,1:ECMT)
"RTN","ECXSETU1",8,0)
 .;from absence becomes transfer, from auth to unauth becomes to unauth
"RTN","ECXSETU1",9,0)
 .;from unauth to auth becomes to auth
"RTN","ECXSETU1",10,0)
 .S WTO=$P(EC,"^",6),WTO=$P($G(^DIC(42,+WTO,44)),"^")
"RTN","ECXSETU1",11,0)
 .S ECCA=$P(EC,"^",14),EC=^DGPM(ECCA,0),ECA=$E($P(EC,"^"),".")
"RTN","ECXSETU1",12,0)
 .;use admit as previous transfer
"RTN","ECXSETU1",13,0)
 .S W=$P(EC,"^",6),FAC=$P($G(^DIC(42,+W,0)),"^",11),W=$P($G(^DIC(42,+W,44)),"^")
"RTN","ECXSETU1",14,0)
 .S ECODE=FAC_"^"_DFN_"^"_$P(D0,"^",9)_"^"_$E($P($P(D0,"^"),",")_"    ",1,4)_"^3^"_$$ECXDATE^ECXUTL(ECD,ECXYM)_"^"
"RTN","ECXSETU1",15,0)
 .S ECA=$P($G(^DGPM(+$P(EC,"^",14),0)),"^")
"RTN","ECXSETU1",16,0)
 .S X1=ECD,X2=$P(EC,"^") D ^%DTC S LOS=X
"RTN","ECXSETU1",17,0)
 .S ECODE=ECODE_"^"_$$ECXDATE^ECXUTL(ECA,ECXYM)_"^^"_ECDA_"^2^"_W_"^^"_LOS_"^^"_ECMT_"^"_ECTM_"^"_WTO_"^"_$$ECXTIME^ECXUTL(ECA)_"^^^"
"RTN","ECXSETU1",18,0)
 .;fac^dfn^ssn^name^in/out^day^^adm date^disc date^mov #^type^losing ward^treat spec ^los^attending physician^movement type^mov time^gaining ward^adm time
"RTN","ECXSETU1",19,0)
 .S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXSETU1",20,0)
 .S ^ECX(ECFILE,EC7,0)=EC7_"^"_ECXYM_"^"_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSETU1",21,0)
 .I ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSETU1",22,0)
 I QFLG S ZTSTOP=1 Q
"RTN","ECXSETU1",23,0)
 S ECLAST=-$O(^ECX(ECFILE,"AINV","")),ECTOTAL=$P(^ECX(ECFILE,0),"^",4)+ECRN,$P(^(0),"^",3,4)=ECLAST_"^"_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXSETU1",24,0)
 ;
"RTN","ECXSETU1",25,0)
 ;get treating specialty
"RTN","ECXSETU1",26,0)
 S ECFILE=727.822,ECRN=0,QFLG=0
"RTN","ECXSETU1",27,0)
 F DFN=0:0 S DFN=$O(^TMP($J,DFN)) Q:'DFN  F ECCA=0:0 S ECCA=$O(^TMP($J,DFN,ECCA)) Q:'ECCA  S ECM=$O(^DGPM("ATS",DFN,ECCA,ECD0)) I ECM S EC=$O(^(ECM,0)),ECDA=+$O(^(+EC,0)) I $D(^DGPM(ECDA,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXSETU1",28,0)
 .Q:'$D(^DPT(DFN,0))  S D0=^(0),ECMT=$P(EC,"^",18),ECDAT=ECED,ECTM=$E($P(ECDAT,".",2)_"000000",1,6),ECXYM=$$ECXYM^ECXUTL(ECDAT)
"RTN","ECXSETU1",29,0)
 .S ECA=^DGPM($P(EC,"^",14),0),EC=ECA
"RTN","ECXSETU1",30,0)
 .S X1=ECD,X2=$P(EC,"^") D ^%DTC S LOS=X
"RTN","ECXSETU1",31,0)
 .S ECTRT="" F ECDA=ECCA:1:ECCA+10 S EC=$G(^DGPM(ECDA,0)) I $P(EC,"^",14)=ECCA,$P(EC,"^",2)=6 S ECTRT=$P($G(^DIC(45.7,+$P(EC,"^",9),0)),"^",2) Q
"RTN","ECXSETU1",32,0)
 .;get treating specialty associated with admission
"RTN","ECXSETU1",33,0)
 .S ECODE="^"_DFN_"^"_$P(D0,"^",9)_"^"_$E($P($P(D0,"^"),",")_"    ",1,4)_"^3^"_$$ECXDATE^ECXUTL(ECD,ECXYM)_"^^"_$$ECXDATE^ECXUTL(ECA,ECXYM)_"^^"_ECDA_"^6^^"_ECTRT_"^"_LOS
"RTN","ECXSETU1",34,0)
 .S ECODE=ECODE_"^"_ECPRO_$P(EC,"^",19)_"^"_ECMT_"^"_ECTM_"^"_$$ECXTIME^ECXUTL(+ECA)_"^^^^"
"RTN","ECXSETU1",35,0)
 .;fac^dfn^ssn^name^i/o^day^product^adm date^dis date^mov#^type^gaining ward^treat spec^duration^attending physician^movement type^trt time^adm time
"RTN","ECXSETU1",36,0)
 .S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXSETU1",37,0)
 .S ^ECX(ECFILE,EC7,0)=EC7_"^"_ECXYM_"^"_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSETU1",38,0)
 .I ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSETU1",39,0)
 I QFLG S ZTSTOP=1 Q
"RTN","ECXSETU1",40,0)
 S ECLAST=-$O(^ECX(ECFILE,"AINV","")),ECTOTAL=$P(^ECX(ECFILE,0),"^",4)+ECRN,$P(^(0),"^",3,4)=ECLAST_"^"_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXSETU1",41,0)
 ;
"RTN","ECXSETU1",42,0)
LOAD ; into files 727.802, 727.808 and 727.818
"RTN","ECXSETU1",43,0)
 S ECCNT=0,ECVER=7
"RTN","ECXSETU1",44,0)
 I $$S^%ZTLOAD S ZTSTOP=1 K ^TMP($J) Q
"RTN","ECXSETU1",45,0)
 S ECFR=727.82,ECFILE=727.802,ECPACK="Admission (setup)",ECHEAD="ADM",ECGRP="ADMS",ECYM="" D MOVE
"RTN","ECXSETU1",46,0)
 I $$S^%ZTLOAD S ZTSTOP=1 K ^TMP($J) Q
"RTN","ECXSETU1",47,0)
 S ECFR=727.821,ECFILE=727.808,ECPACK="Movement (setup)",ECHEAD="MOV",ECGRP="MOVS",ECYM="" D MOVE
"RTN","ECXSETU1",48,0)
 I $$S^%ZTLOAD S ZTSTOP=1 K ^TMP($J) Q
"RTN","ECXSETU1",49,0)
 S ECFR=727.822,ECFILE=727.817,ECPACK="Treating specialty change (setup)",ECHEAD="TRT",ECGRP="TREAT",ECYM="" D MOVE
"RTN","ECXSETU1",50,0)
 S ^ECX(728,1,"S")=DT ;clear running flag set done date
"RTN","ECXSETU1",51,0)
 K XMY S Y=$$HTE^XLFDT($H)
"RTN","ECXSETU1",52,0)
 S XMDUZ="DSS SYSTEM",XMSUB="SETUP EXTRACT FOR DSS",XMY("G.DSS-ADMS@"_^XMB("NETNAME"))=""
"RTN","ECXSETU1",53,0)
 S ECM(1)="The DSS setup extract completed on "_$P(Y,"@")_" at "_$P(Y,"@",2),ECM(2)="A total of "_ECCNT_" extract file entries were created."
"RTN","ECXSETU1",54,0)
 S XMTEXT="ECM(" D ^XMD
"RTN","ECXSETU1",55,0)
 S ZTREQ="@" K ^TMP($J)
"RTN","ECXSETU1",56,0)
 Q
"RTN","ECXSETU1",57,0)
 ;
"RTN","ECXSETU1",58,0)
MOVE ;
"RTN","ECXSETU1",59,0)
 F  S ECYM=$O(^ECX(ECFR,"AM",ECYM)) Q:ECYM=""  D UP727 D
"RTN","ECXSETU1",60,0)
 .F EC0=0:0 S EC0=$O(^ECX(ECFR,"AM",ECYM,EC0)) Q:'EC0  S ECD=^ECX(ECFR,EC0,0),$P(ECD,"^",3)=EC3 D
"RTN","ECXSETU1",61,0)
 ..S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXSETU1",62,0)
 ..S ^ECX(ECFILE,EC7,0)=EC7_"^"_$P(ECD,"^",2,200),ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSETU1",63,0)
 ..S DIK="^ECX("_ECFR_",",DA=EC0 D ^DIK
"RTN","ECXSETU1",64,0)
 ..S ECCNT=ECCNT+1
"RTN","ECXSETU1",65,0)
 .S $P(^ECX(727,EC3,0),"^",6)=ECRN
"RTN","ECXSETU1",66,0)
 .S ECLAST=-$O(^ECX(ECFILE,"AINV","")),ECTOTAL=$P(^ECX(ECFILE,0),"^",4)+ECRN,$P(^(0),"^",3,4)=ECLAST_"^"_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXSETU1",67,0)
 Q
"RTN","ECXSETU1",68,0)
 ;
"RTN","ECXSETU1",69,0)
UP727 ;update file #727
"RTN","ECXSETU1",70,0)
 S EC=$P(^ECX(727,0),"^",3)+1,$P(^(0),"^",3,4)=EC_"^"_EC
"RTN","ECXSETU1",71,0)
 S ^ECX(727,EC,0)=EC_"^"_DT_"^"_ECPACK_"^"_ECED_"^"_ECED
"RTN","ECXSETU1",72,0)
 S ^ECX(727,EC,"HEAD")=ECHEAD
"RTN","ECXSETU1",73,0)
 S ^ECX(727,EC,"FILE")=ECFILE
"RTN","ECXSETU1",74,0)
 S ^ECX(727,EC,"GRP")=ECGRP
"RTN","ECXSETU1",75,0)
 S DA=EC,DIK="^ECX(727," D IX^DIK K DA,DIK
"RTN","ECXSETU1",76,0)
 S ECRN=0,EC3=EC
"RTN","ECXSETU1",77,0)
 Q
"RTN","ECXSETUP")
0^49^B29332550
"RTN","ECXSETUP",1,0)
ECXSETUP ;BIR/DMA,CML,PTD-Generate Patient Population for a Given Day ; [ 11/25/96  11:26 AM ]
"RTN","ECXSETUP",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXSETUP",3,0)
EN ;entry point from option
"RTN","ECXSETUP",4,0)
 ;Pick a day, find everyone who was in the hospital on that day,
"RTN","ECXSETUP",5,0)
 ;find the corresponding admission and the last transfer and treating
"RTN","ECXSETUP",6,0)
 ;speciality change
"RTN","ECXSETUP",7,0)
 ;This routine should only be run once
"RTN","ECXSETUP",8,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXSETUP",9,0)
 I $P($G(^ECX(728,1,"S")),"^",2)]"" W !,"The setup extract is already running.",! Q
"RTN","ECXSETUP",10,0)
 I $P($G(^ECX(728,1,"S")),"^") W !,"The setup extract has already been run.",! Q
"RTN","ECXSETUP",11,0)
 W !!,"This option will extract the admission data and data for the last",!,"transfer and treating specialty change for all patients who",!,"were in the hospital on the day you select.",!!
"RTN","ECXSETUP",12,0)
 W !!,"NOTE - This will generate a snapshot of your inpatient population on the",!,"BEGINNING of the day you select, not the end of the day as MAS reports do.",!
"RTN","ECXSETUP",13,0)
 W "For example, for the inpatient setup extract if you choose October 1, 1994,",!,"the report will start at midnight at the beginning of the day."
"RTN","ECXSETUP",14,0)
 W "  For the MAS",!,"report, you would choose September 30, 1994.  The MAS report begins at midnight",!,"at the end of the day.",!!!
"RTN","ECXSETUP",15,0)
 S Y=$E(DT,1,3) S:'$E(DT,4) Y=Y-1 S ECDEX=$$FMTE^XLFDT(Y_"1001")
"RTN","ECXSETUP",16,0)
DATE S DIR(0)="D^::EXP",DIR("A")="Select the starting date ",DIR("B")=ECDEX D ^DIR K DIR G END:$D(DIRUT) S ECED=Y I Y>DT W !,"Date must be in the past",! G DATE
"RTN","ECXSETUP",17,0)
 S ECDEX=$$FMTE^XLFDT(Y)
"RTN","ECXSETUP",18,0)
 S ZTSAVE("ECED")="",ZTDESC="Find all inpatients on "_ECDEX,ZTIO="",ZTRTN="START^ECXSETUP" D ^%ZTLOAD
"RTN","ECXSETUP",19,0)
 I $D(ZTSK) W !,"Request queued as Task #",ZTSK,".",!
"RTN","ECXSETUP",20,0)
 G END
"RTN","ECXSETUP",21,0)
 ;
"RTN","ECXSETUP",22,0)
START ;queued entry point
"RTN","ECXSETUP",23,0)
 I $G(^ECX(728,1,"S"))]"",$G(^("S"))'="^" Q  ;already running or finished
"RTN","ECXSETUP",24,0)
 S $P(^ECX(728,1,"S"),"^",2)="R" ; set run flag
"RTN","ECXSETUP",25,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD") S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXSETUP",26,0)
 S ECPACK="Admission setup",ECPIECE=13,ECRTN="START^ECXSETUP",ECGRP="ADMS",ECHEAD="ADM",ECFILE=727.82,ECSD=ECED,ECD=ECED,ECVER=7
"RTN","ECXSETUP",27,0)
 S ECINST=+$P(^ECX(728,1,0),"^") K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXSETUP",28,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXSETUP",29,0)
 S ECRN=0,QFLG=0
"RTN","ECXSETUP",30,0)
 S ECD0=9999999.9999999-ECD
"RTN","ECXSETUP",31,0)
 K ^TMP($J)
"RTN","ECXSETUP",32,0)
 F DFN=0:0 S DFN=$O(^DGPM("ATID1",DFN)) Q:'DFN  S EC1=$O(^(DFN,ECD0)) I EC1 S ECDA=+$O(^(EC1,0)) I $D(^DGPM(ECDA,0)) D  Q:QFLG
"RTN","ECXSETUP",33,0)
 .S EC=^(0),ECX=+$P(EC,"^",17),ECAS=$P(EC,"^",18)=40 D:$S('ECX:1,'$D(^DGPM(ECX,0)):1,^DGPM(ECX,0)>ECD:1,1:0) GET I ECAS D GET1
"RTN","ECXSETUP",34,0)
 I QFLG S ZTSTOP=1 G END
"RTN","ECXSETUP",35,0)
 S ECLAST=-$O(^ECX(ECFILE,"AINV","")),ECTOTAL=$P(^ECX(ECFILE,0),"^",4)+ECRN,$P(^(0),"^",3,4)=ECLAST_"^"_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXSETUP",36,0)
 G ^ECXSETU1
"RTN","ECXSETUP",37,0)
END K DIR,ECD,ECDEX,X,Y,ECD0,DFN,DA,EC0
"RTN","ECXSETUP",38,0)
 Q
"RTN","ECXSETUP",39,0)
 ;
"RTN","ECXSETUP",40,0)
GET ;
"RTN","ECXSETUP",41,0)
 Q:'$D(^DPT(DFN,0))  S D0=^DPT(DFN,0),ECAD=$P(EC,"^"),^TMP($J,DFN,ECDA)=""
"RTN","ECXSETUP",42,0)
 S ECTM=$$ECXTIME^ECXUTL(ECAD),ECXYM=$$ECXYM^ECXUTL(ECED)
"RTN","ECXSETUP",43,0)
 I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXSETUP",44,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(DFN,ECD) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(DFN,ECAD) S:ECPTPR=0 ECPTPR=""
"RTN","ECXSETUP",45,0)
 I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXSETUP",46,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(DFN) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(DFN) S:ECPTPR=0 ECPTPR=""
"RTN","ECXSETUP",47,0)
 S ECODE=DFN_"^"_$P(D0,"^",9)_"^"_$E($P($P(D0,"^"),",")_"    ",1,4)_"^3^"_$$ECXDATE^ECXUTL(ECAD,ECXYM)_"^"_ECPTTM
"RTN","ECXSETUP",48,0)
 S ECODE=ECODE_"^"_$P(D0,"^",2)_"^"_$$ECXDOB^ECXUTL($P(D0,"^",3))_"^"_$P(D0,"^",8)_"^"_$P($G(^DPT(DFN,.311)),"^",15)_"^"_+$$INSURED^IBCNS1(DFN,ECD)
"RTN","ECXSETUP",49,0)
 S D1=$G(^DPT(DFN,.11)),ECSTA=$P(D1,"^",5),STATE=$S(ECSTA:$P(^DIC(5,ECSTA,0),"^",3),1:"")
"RTN","ECXSETUP",50,0)
 S ECCTY=$P(D1,"^",7),COUNTY=$S(ECCTY:$P(^DIC(5,ECSTA,1,ECCTY,0),"^",3),1:"")
"RTN","ECXSETUP",51,0)
 S ECODE=ECODE_"^"_STATE_"^"_COUNTY_"^"_$P(D1,"^",6),D1=$P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),"^",9) I D1 S D1=$C(D1+64)
"RTN","ECXSETUP",52,0)
 S ECM=$P($G(^DG(408.32,+$P(D0,"^",14),0)),"^",2)
"RTN","ECXSETUP",53,0)
 S ECODE=ECODE_"^"_D1_"^"_$P($G(^DPT(DFN,"VET")),"^")_"^"_$P($G(^DPT(DFN,.321))_"^^^^","^",1,3)_"^"_$P($G(^DPT(DFN,.52)),"^",5)_"^"_$P($G(^DIC(21,+$P($G(^DPT(DFN,.32)),"^",3),0)),"^",3)_"^"_ECM_"^"_$P(D0,"^",5)
"RTN","ECXSETUP",54,0)
 S W=$P(EC,"^",6),FAC=$P($G(^DIC(42,+W,0)),"^",11),W=$P($G(^DIC(42,+W,44)),"^")
"RTN","ECXSETUP",55,0)
 S ECTS="" F J=1:1:10 S ECT1=$G(^DGPM(ECDA+J,0)) I $P(ECT1,"^",14)=ECDA,$P(ECT1,"^",2)=6 S ECTS=ECT1 Q
"RTN","ECXSETUP",56,0)
 ;get corresponding Treating specialty - should be the next one, but must be close
"RTN","ECXSETUP",57,0)
 S ECODE=FAC_"^"_ECODE_"^"_W_"^"_$P($G(^DIC(45.7,+$P(ECTS,"^",9),0)),"^",2)_"^"_ECPRO_$P(ECTS,"^",19)_"^"_ECDA
"RTN","ECXSETUP",58,0)
 S (ECDRG,ECDIA)="",ECPTF=+$P(EC,"^",16) I ECPTF,$D(^DGPT(ECPTF,"M")) D PTF S ECODE=ECODE_"^"_ECDRG_"^"_ECDIA
"RTN","ECXSETUP",59,0)
 S $P(ECODE,"^",31)=ECTM,$P(ECODE,"^",32)=ECPTPR,$P(ECODE,"^",33)=$P($G(^DIC(10,+$P(D0,"^",6),0)),"^",2)_"^^"
"RTN","ECXSETUP",60,0)
 ;facility^dfn^ssn^name^in/out^day^primary care team^sex^dob^religion^employment status^health ins^state^county^zip^eligibility^
"RTN","ECXSETUP",61,0)
 ;vet^vietnam^agent orange^radiation^pow^period of service^means test^marital status^ward^treating specialty^
"RTN","ECXSETUP",62,0)
 ;attending physician^mov #^DRG^diagnosis^time^primary care provider^race
"RTN","ECXSETUP",63,0)
FILE S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXSETUP",64,0)
 S ^ECX(ECFILE,EC7,0)=EC7_"^"_ECXYM_"^"_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSETUP",65,0)
 I ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSETUP",66,0)
 Q
"RTN","ECXSETUP",67,0)
 ;
"RTN","ECXSETUP",68,0)
GET1 ;look again for admission if the one we found was ASIH (ECAS=1)
"RTN","ECXSETUP",69,0)
 F EC1=EC1:0 S EC1=$O(^DGPM("ATID1",DFN,EC1)) Q:'EC1  S ECDA=$O(^(EC1,0)) I ECDA,$D(^DGPM(ECDA,0)) S EC=^DGPM(ECDA,0) I $P(EC,"^",18)'=40 S ECX=$P(EC,"^",17) Q
"RTN","ECXSETUP",70,0)
 I EC1,ECDA,$S('ECX:1,'$D(^DGPM(ECX,0)):1,^DGPM(ECX,0)>ECD:1,1:0) D GET ; find the admission movement (not ASIH) for this ASIH movement
"RTN","ECXSETUP",71,0)
 Q
"RTN","ECXSETUP",72,0)
 ;
"RTN","ECXSETUP",73,0)
 ;
"RTN","ECXSETUP",74,0)
PTF ; get admitting DRG and diagnosis from PTF
"RTN","ECXSETUP",75,0)
 ;use number for DRG and .01 for diagnosis
"RTN","ECXSETUP",76,0)
 S EC=1 I $D(^DGPT(ECPTF,"M",2,0)) S EC=2
"RTN","ECXSETUP",77,0)
 S EC2=+$P(^DGPT(ECPTF,"M",EC,0),"^",5),ECDRG=$P($G(^DGPT(ECPTF,"M",EC,"P")),"^")
"RTN","ECXSETUP",78,0)
 S ECDIA=$P($G(^ICD9(EC2,0)),"^") Q
"RTN","ECXSETUP",79,0)
 ;
"RTN","ECXSETUP",80,0)
 ;
"RTN","ECXSURG")
0^50^B20243183
"RTN","ECXSURG",1,0)
ECXSURG ;BIR/DMA,PTD-Surgery Extract for DSS ; [ 03/20/97  3:04 PM ]
"RTN","ECXSURG",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXSURG",3,0)
BEG ;entry point from option
"RTN","ECXSURG",4,0)
 D SETUP
"RTN","ECXSURG",5,0)
 D ^ECXTRAC
"RTN","ECXSURG",6,0)
 D ^ECXKILL
"RTN","ECXSURG",7,0)
 Q
"RTN","ECXSURG",8,0)
 ;
"RTN","ECXSURG",9,0)
START ;
"RTN","ECXSURG",10,0)
 S QFLG=0
"RTN","ECXSURG",11,0)
 S ECED=ECED+.3
"RTN","ECXSURG",12,0)
 S ECD=ECSD1 F  S ECD=$O(^SRF("AC",ECD)),ECD0=0 Q:'ECD  Q:ECD>ECED  F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  I $D(^SRF(ECD0,0)) S EC0=^(0),DFN=+EC0 I $D(^DPT(DFN,0)) S ECP=^(0) D STUFF Q:QFLG
"RTN","ECXSURG",13,0)
 Q
"RTN","ECXSURG",14,0)
 ;
"RTN","ECXSURG",15,0)
STUFF ;gather data - ECODE0=basic info, ECODE full data
"RTN","ECXSURG",16,0)
 S SSN=$P(ECP,"^",9),ECNA=$E($P($P(ECP,"^"),",")_"    ",1,4)
"RTN","ECXSURG",17,0)
 I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXSURG",18,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(DFN,ECD) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(DFN,ECD) S:ECPTPR=0 ECPTPR=""
"RTN","ECXSURG",19,0)
 I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXSURG",20,0)
 .S ECPTTM=+$$OUTPTTM^SDUTL3(DFN) S:ECPTTM=0 ECPTTM="" S ECPTPR=+$$OUTPTPR^SDUTL3(DFN) S:ECPTPR=0 ECPTPR=""
"RTN","ECXSURG",21,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:0),DATA2=$S($D(^(.2)):^(.2),1:""),DATAOP=$S($D(^("OP")):^("OP"),1:""),ECDIV=$S($D(^(8)):^(8),1:ECINST),ECANE="",ECSR=$P(DATA1,"^",4),ECAT=$P(DATA1,"^",13),ECNO=$G(^("NON"))
"RTN","ECXSURG",22,0)
 S ECTM=$$ECXTIME^ECXUTL($P(DATA2,"^",10)) I $P(ECNO,"^")="Y" S ECTM=$$ECXTIME^ECXUTL($P(ECNO,"^",4))
"RTN","ECXSURG",23,0)
 S ECCAN=$G(^SRF(ECD0,30))>0 I ECCAN!('$P(DATA2,"^",10)&($P(ECNO,"^")'="Y")) Q
"RTN","ECXSURG",24,0)
 ;quit if cancelled or no pt. in oper. rm. time
"RTN","ECXSURG",25,0)
 ;look for non-OR
"RTN","ECXSURG",26,0)
 I $P(ECNO,"^")="Y" S ECSR=$P(ECNO,"^",6),ECAT=$P(ECNO,"^",7),A1=$P(ECNO,"^",5),A2=$P(ECNO,"^",4),TIME="##" D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXSURG",27,0)
 S ECNL="" I $P(ECNO,"^")="Y" S ECNL=+$P(ECNO,"^",2),ECNL=$P($G(^ECX(728.44,ECNL,0)),"^",9) I ECNL="" S ECNL="UNKNOWN"
"RTN","ECXSURG",28,0)
 S ECSA=$P($G(^SRF(ECD0,.3)),"^",4),ECO=$P($G(^SRF(ECD0,0)),"^",2) S ECORTY=$P($G(^SRS(+ECO,2)),"^"),ECO=$P($G(^SRS(+ECO,0)),"^")
"RTN","ECXSURG",29,0)
 S:ECAT ECAT=2_ECAT S:ECSR ECSR=2_ECSR S:ECSA ECSA=2_ECSA
"RTN","ECXSURG",30,0)
 ;add leading 2s for pointer to 200
"RTN","ECXSURG",31,0)
 S J=$O(^SRF(ECD0,6,0)) I J,$D(^(J,0)) S ECANE=$P(^(0),"^") I $P(^(0),"^",3)'="Y" F  S J=$O(^SRF(ECD0,6,J)) Q:'J  I $D(^(J,0)),$P(^(0),"^",3)="Y" S ECANE=$P(^(0),"^") Q
"RTN","ECXSURG",32,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,"^",4),0)),"^",2)
"RTN","ECXSURG",33,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),"^"),3,0) S:ECSS="000" ECSS="999"
"RTN","ECXSURG",34,0)
 S ECODE0=ECDIV_"^"_DFN_"^"_SSN_"^"_ECNA_"^"_$S($P(EC0,"^",12)="I":3,1:1)_"^"_$$ECXDATE^ECXUTL(ECD,ECXYM)_"^"_ECD0_"^"_ECSS_"^"_ECO_"^"_ECSR_"^"_ECAT_"^"_ECSA_"^"_ECANE
"RTN","ECXSURG",35,0)
 ;ECODE0=division^dfn^ssn^name^in/out^day^case #^surg specialty^or room #^surgeon^attending^anesthesia supervisor^anesthesia technique
"RTN","ECXSURG",36,0)
 ;
"RTN","ECXSURG",37,0)
 ;get service of attending surgeon
"RTN","ECXSURG",38,0)
 S ECAT=$E(ECAT,2,$L(ECAT))
"RTN","ECXSURG",39,0)
 ;remove leading 2
"RTN","ECXSURG",40,0)
 S ECATSV=$P($G(^DIC(49,+$G(^VA(200,+ECAT,5)),730)),"^")
"RTN","ECXSURG",41,0)
 ;get primary
"RTN","ECXSURG",42,0)
 S ECPT=+$P(DATAOP,"^",2),ECPT=$P($G(^ICPT(ECPT,0)),"^")
"RTN","ECXSURG",43,0)
 S ECODE=ECODE0_"^P^"_ECPT_"^"
"RTN","ECXSURG",44,0)
 F J="10,12","2,3","1,4" S A2=$P(DATA2,"^",$P(J,",")),A1=$P(DATA2,"^",$P(J,",",2)),TIME="##" D:(A1&A2) TIME S ECODE=ECODE_"^"_TIME K TIME
"RTN","ECXSURG",45,0)
 S ECRR="" I $D(^SRF(ECD0,1.1)) S A1=$P(^(1.1),"^",8),A2=$P(^(1.1),"^",7),TIME="##" D:(A1&A2) TIME S ECRR=TIME K TIME
"RTN","ECXSURG",46,0)
 I ECNL]"" S $P(ECODE,"^",18)=ECNT
"RTN","ECXSURG",47,0)
 ;primary=ECODE0^P^CPT code^^patient time^operation time^anesthesia time
"RTN","ECXSURG",48,0)
 D FILE K EC0,DATA1,DATA2,DATA6,DATAOP,ECPT
"RTN","ECXSURG",49,0)
 ;get secondaries
"RTN","ECXSURG",50,0)
 S J=0 F  S J=$O(^SRF(ECD0,13,J)) Q:'J  I $D(^(J,0)),$D(^(2)),$P(^(2),"^")]"" S ECPT=$P(^(2),"^"),ECODE=ECODE0_"^S^"_$P($G(^ICPT(ECPT,0)),"^")_"^" D FILE
"RTN","ECXSURG",51,0)
 ;secondary=ECODE0^S^CPT code^
"RTN","ECXSURG",52,0)
 ;get prostheses
"RTN","ECXSURG",53,0)
 S J=0 F  S J=$O(^SRF(ECD0,1,J)) Q:'J  I $D(^(J,0)) S X=+^(0),Q=$P($G(^(1)),"^",2) S:'Q Q=1 S ECODE=ECODE0_"^I^^^^^^"_X_"^"_Q_"^^" D FILE
"RTN","ECXSURG",54,0)
 ;prosthesis=ECODE0^I^^^^^^prosthesis^quantity^
"RTN","ECXSURG",55,0)
 K J,Q,X
"RTN","ECXSURG",56,0)
 Q
"RTN","ECXSURG",57,0)
FILE ;add movement number^treating speciality^cancelled^time^OR type^attending's service^non-or dss id^recovery room time^^primary care team^primary care provider^admission date
"RTN","ECXSURG",58,0)
 D INP S $P(ECODE,"^",23,33)=ECMN_"^"_ECTS_"^"_$S(ECCAN:"C",1:"")_"^"_ECTM_"^"_ECORTY_"^"_ECATSV_"^"_ECNL_"^"_ECRR_"^^"_ECPTTM_"^"_ECPTPR_"^^"
"RTN","ECXSURG",59,0)
 S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXSURG",60,0)
 S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSURG",61,0)
 I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSURG",62,0)
 Q
"RTN","ECXSURG",63,0)
 ;
"RTN","ECXSURG",64,0)
TIME ; given date/time get increment
"RTN","ECXSURG",65,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG",66,0)
 S TIME=$TR($J($$FMDIFF^XLFDT(A1,A2,2)/900,6,0)," ") I TIME<0 S TIME="###"
"RTN","ECXSURG",67,0)
 Q
"RTN","ECXSURG",68,0)
SETUP S ECPACK="Surgery",ECPIECE=5,ECRTN="START^ECXSURG",ECGRP="SURG",ECHEAD="SUR",ECFILE=727.811,ECVER=7
"RTN","ECXSURG",69,0)
 Q
"RTN","ECXSURG",70,0)
 ;
"RTN","ECXSURG",71,0)
INP ; checks for in/outpatient status and gets movement number
"RTN","ECXSURG",72,0)
 S ECA=1,ECTS="" K VAIP S VAIP("D")=ECD D IN5^VADPT S ECMN=VAIP(1) I ECMN S ECA=3,ECTS=$P($G(^DIC(45.7,+VAIP(8),0)),"^",2)
"RTN","ECXSURG",73,0)
 K VAIP,VAERR
"RTN","ECXSURG",74,0)
 Q
"RTN","ECXSURG",75,0)
 ;
"RTN","ECXSURG",76,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG",77,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXTAUTO")
0^51^B17398054
"RTN","ECXTAUTO",1,0)
ECXTAUTO ;BIR/DMA-Background Queuing for Package Extracts ; 17 Mar 95 / 1:04 PM
"RTN","ECXTAUTO",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXTAUTO",3,0)
 ;Queuing and message sending for package extracts for local use
"RTN","ECXTAUTO",4,0)
 ;Input ECPACK   printed name of package (e.g. Lab, Prescriptions)
"RTN","ECXTAUTO",5,0)
 ;      ECPIECE  piece of node where last date is stored
"RTN","ECXTAUTO",6,0)
 ;      ECRTN    in the form of START^ROUTINE
"RTN","ECXTAUTO",7,0)
 ;      ECGRP    name of local mail group to receive summary message
"RTN","ECXTAUTO",8,0)
 ;               (MUST BE 1 TO 5 UPPER CASE ALPHA - NO SPACES)
"RTN","ECXTAUTO",9,0)
 ;      ECFILE   file number of the local editing file
"RTN","ECXTAUTO",10,0)
 ; generates EC23=2nd and 3rd piece of zero node in local editing file
"RTN","ECXTAUTO",11,0)
 ;               =YYMM of end date^pointer to 727
"RTN","ECXTAUTO",12,0)
 ;
"RTN","ECXTAUTO",13,0)
 Q  ;no entry from the top
"RTN","ECXTAUTO",14,0)
 ;
"RTN","ECXTAUTO",15,0)
GO ; called entry from QUE
"RTN","ECXTAUTO",16,0)
 S ECINST=+$P(^ECX(728,1,0),"^") K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTAUTO",17,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTAUTO",18,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXTAUTO",19,0)
 S ECFDT=$$FMADD^XLFDT($P($G(^ECX(728,1,ECNODE)),"^",ECPIECE),1) I ECFDT>ECED D ERROR G REQUE:'$D(ECEDNEW) Q
"RTN","ECXTAUTO",20,0)
 I ECFDT>ECSD S ECSD=ECFDT I ECSD>ECED G REQUE:'$D(ECDNEW) Q
"RTN","ECXTAUTO",21,0)
 S $P(^ECX(728,1,ECNODE+.1),"^",ECPIECE)="R"
"RTN","ECXTAUTO",22,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXTAUTO",23,0)
 L +^ECX(727,0) S EC=$P(^ECX(727,0),"^",3)+1,$P(^(0),"^",3,4)=EC_"^"_EC L -^ECX(727,0)
"RTN","ECXTAUTO",24,0)
 S ^ECX(727,EC,0)=EC_"^"_DT_"^"_ECPACK_"^"_ECSD_"^"_$E(ECED,1,7)
"RTN","ECXTAUTO",25,0)
 S ^ECX(727,EC,"HEAD")=ECHEAD
"RTN","ECXTAUTO",26,0)
 S ^ECX(727,EC,"FILE")=ECFILE
"RTN","ECXTAUTO",27,0)
 S ^ECX(727,EC,"GRP")=ECGRP
"RTN","ECXTAUTO",28,0)
 S ^ECX(727,"AC",DT,EC)="",^ECX(727,"AD",ECPACK,EC)=""
"RTN","ECXTAUTO",29,0)
 S ECRN=0,EC23=$$ECXYM^ECXUTL(ECED)_"^"_EC
"RTN","ECXTAUTO",30,0)
EXTRACT ;do specific extract
"RTN","ECXTAUTO",31,0)
 S ECXSTART=$P($$HTE^XLFDT($H),":",1,2),ECXNOW=$H
"RTN","ECXTAUTO",32,0)
 D @ECRTN
"RTN","ECXTAUTO",33,0)
 S $P(^ECX(728,1,ECNODE),"^",ECPIECE)=$P(ECED,".") S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTAUTO",34,0)
 S $P(^ECX(727,$P(EC23,"^",2),0),"^",6)=ECRN
"RTN","ECXTAUTO",35,0)
 S ECLAST=-$O(^ECX(ECFILE,"AINV","")),ECTOTAL=$P(^ECX(ECFILE,0),"^",4)+ECRN,$P(^(0),"^",3,4)=ECLAST_"^"_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXTAUTO",36,0)
 ;set piece 3 and 4 of the zero node
"RTN","ECXTAUTO",37,0)
 ;
"RTN","ECXTAUTO",38,0)
MSG ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTAUTO",39,0)
 S XMSUB=ECINST_" - "_ECPACK_" BACKGROUND EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTAUTO",40,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTAUTO",41,0)
 S ECMSG(1,0)="The BACKGROUND DSS-"_ECPACK_" extract (#"_$P(EC23,"^",2)_") for "_ECSDN,ECMSG(2,0)="through "_ECEDN_" was begun on "_$P(ECXSTART,"@")_" at "_$P(ECXSTART,"@",2)
"RTN","ECXTAUTO",42,0)
 S ECMSG(3,0)="and completed on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_"."
"RTN","ECXTAUTO",43,0)
 S ECMSG(4,0)=" ",ECMSG(5,0)="A total of "_ECRN_" records were written."
"RTN","ECXTAUTO",44,0)
 S ECMSG(6,0)=" ",ECMSG(7,0)="Extract time was [HH:MM:SS] "_$$HDIFF^XLFDT($H,ECXNOW,3),ECMSG(8,0)=" "
"RTN","ECXTAUTO",45,0)
 S XMTEXT="ECMSG(" D ^XMD
"RTN","ECXTAUTO",46,0)
 S $P(^ECX(728,1,ECNODE+.1),"^",ECPIECE)=""
"RTN","ECXTAUTO",47,0)
 Q:$D(ECEDNEW)  ;for weekly where we have to do 2, don't requeue after first
"RTN","ECXTAUTO",48,0)
 ;
"RTN","ECXTAUTO",49,0)
REQUE ;use fields in 727.1 to reque job for next time
"RTN","ECXTAUTO",50,0)
 S EC=$O(^ECX(727.1,"AF",ECFILE,0)),EC=$P(^ECX(727.1,EC,0),"^",3)
"RTN","ECXTAUTO",51,0)
 I EC="D" S ZTDTH=ZTDTH+1_","_$P(ZTDTH,",",2) D REQ^%ZTLOAD Q
"RTN","ECXTAUTO",52,0)
 I EC="W" S ZTDTH=ZTDTH+7_","_$P(ZTDTH,",",2) D REQ^%ZTLOAD Q
"RTN","ECXTAUTO",53,0)
 I EC="M" S EC=$$HTFM^XLFDT(ZTDTH,1),EC=$E(EC,1,5)+1+($E(EC,4,5)=12*8800)_$E(EC,6,14),ZTDTH=$$FMTH^XLFDT(EC,1)_","_$P(ZTDTH,",",2) D REQ^%ZTLOAD Q
"RTN","ECXTAUTO",54,0)
 Q
"RTN","ECXTAUTO",55,0)
 ;
"RTN","ECXTAUTO",56,0)
QUE ;Entry point from package extracts - determine start and stop date from 727.1
"RTN","ECXTAUTO",57,0)
 ;
"RTN","ECXTAUTO",58,0)
 K ECEDNEW
"RTN","ECXTAUTO",59,0)
 S EC=$O(^ECX(727.1,"AF",ECFILE,0)),EC=^ECX(727.1,EC,0),ECD=$P(EC,"^",4),EC=$P(EC,"^",3)
"RTN","ECXTAUTO",60,0)
 S ECDT=$P($$HTFM^XLFDT(ZTDTH,1),".")
"RTN","ECXTAUTO",61,0)
 I EC="M" S ECSD=$E(ECDT,1,5)-1-($E(ECDT,4,5)="01"*8800)_"01",ECED=$$FMADD^XLFDT($E(ECDT,1,5)_"01",-1) G GO
"RTN","ECXTAUTO",62,0)
 I EC="D" S ECED=$$HTFM^XLFDT(ZTDTH-ECD,1),ECSD=ECED G GO
"RTN","ECXTAUTO",63,0)
 I EC="W" S ECED=$$HTFM^XLFDT(ZTDTH-ECD,1),ECSD=$$HTFM^XLFDT(ZTDTH-ECD-6,1) I $E(ECED,4,5)=$E(ECSD,4,5) G GO
"RTN","ECXTAUTO",64,0)
 ;here for a weekly extract that spans 2 months.
"RTN","ECXTAUTO",65,0)
 S ECEDNEW=ECED,ECED=$$FMADD^XLFDT($E(ECED,1,5)_"01",-1) D GO
"RTN","ECXTAUTO",66,0)
 S ECED=ECEDNEW,ECSD=$E(ECED,1,5)_"01" K ECEDNEW G GO
"RTN","ECXTAUTO",67,0)
 ;
"RTN","ECXTAUTO",68,0)
ERROR ; send message when job was queued to extract data already extracted
"RTN","ECXTAUTO",69,0)
 ;
"RTN","ECXTAUTO",70,0)
 S XMSUB=ECINST_" - "_ECPACK_" BACKGROUND EXTRACT FAILURE",XMDUZ="DSS SYSTEM"
"RTN","ECXTAUTO",71,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTAUTO",72,0)
 S ECMSG(1,0)="The "_ECPACK_" extract was queued to extract data for",ECMSG(2,0)="a range of dates which had already been extracted.",ECMSG(3,0)="  The extract was NOT rerun"
"RTN","ECXTAUTO",73,0)
 S XMTEXT="ECMSG(" D ^XMD
"RTN","ECXTAUTO",74,0)
 S ECNOGO=1
"RTN","ECXTAUTO",75,0)
 Q
"RTN","ECXTLOCL")
0^52^B8798883
"RTN","ECXTLOCL",1,0)
ECXTLOCL ;BIR/DMA-Package Extracts for Local Use ; 17 Mar 95 / 1:04 PM
"RTN","ECXTLOCL",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXTLOCL",3,0)
EN ;entry point
"RTN","ECXTLOCL",4,0)
 ;Queuing and message sending for package extracts for local use
"RTN","ECXTLOCL",5,0)
 ;Input ECPACK   printed name of package (e.g. Lab, Prescriptions)
"RTN","ECXTLOCL",6,0)
 ;      ECRTN    in the form of START^ROUTINE
"RTN","ECXTLOCL",7,0)
 ;      ECGRP    name of local mail group to receive summary message
"RTN","ECXTLOCL",8,0)
 ;               (MUST BE 1 TO 5 UPPER CASE ALPHA - NO SPACES)
"RTN","ECXTLOCL",9,0)
 ;      ECFILE   file number of the local editing file
"RTN","ECXTLOCL",10,0)
 ; generates EC23=2nd and 3rd piece of zero node in local editing file
"RTN","ECXTLOCL",11,0)
 ;               =YYMM of end date^pointer to 727
"RTN","ECXTLOCL",12,0)
 ;
"RTN","ECXTLOCL",13,0)
 S EC=$O(^ECX(727.1,"AF",ECFILE,0)),EC=$P($G(^ECX(727.1,EC,0)),"^",5) I 'EC G ERROR
"RTN","ECXTLOCL",14,0)
 S ECED=$$FMADD^XLFDT(DT,-EC+1),ECSD=$$FMADD^XLFDT(DT,-EC)
"RTN","ECXTLOCL",15,0)
 ;look at results for DT-Offset so ECSD=DT-EC
"RTN","ECXTLOCL",16,0)
 S ECINST=+$P(^ECX(728,1,0),"^") K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTLOCL",17,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTLOCL",18,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXTLOCL",19,0)
 L +^ECX(727,0) S EC=$P(^ECX(727,0),"^",3)+1,$P(^(0),"^",3,4)=EC_"^"_EC L -^ECX(727,0)
"RTN","ECXTLOCL",20,0)
 S ^ECX(727,EC,0)=EC_"^"_DT_"^"_ECPACK_"^"_ECSD_"^"_$E(ECED,1,7)
"RTN","ECXTLOCL",21,0)
 S ^ECX(727,EC,"HEAD")=ECHEAD
"RTN","ECXTLOCL",22,0)
 S ^ECX(727,EC,"FILE")=ECFILE
"RTN","ECXTLOCL",23,0)
 S ^ECX(727,EC,"GRP")=ECGRP
"RTN","ECXTLOCL",24,0)
 S ^ECX(727,EC,"L")="L"
"RTN","ECXTLOCL",25,0)
 S ^ECX(727,"AC",DT,EC)="",^ECX(727,"AD",ECPACK,EC)=""
"RTN","ECXTLOCL",26,0)
 S ECRN=0,EC23=$$ECXYM^ECXUTL(ECED)_"^"_EC
"RTN","ECXTLOCL",27,0)
EXTRACT ;do specific extract
"RTN","ECXTLOCL",28,0)
 D @ECRTN
"RTN","ECXTLOCL",29,0)
 S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTLOCL",30,0)
 S $P(^ECX(727,$P(EC23,"^",2),0),"^",6)=ECRN
"RTN","ECXTLOCL",31,0)
 S ECLAST=-$O(^ECX(ECFILE,"AINV","")),ECTOTAL=$P(^ECX(ECFILE,0),"^",4)+ECRN,$P(^(0),"^",3,4)=ECLAST_"^"_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXTLOCL",32,0)
 ;set piece 3 and 4 of the zero node
"RTN","ECXTLOCL",33,0)
 ;
"RTN","ECXTLOCL",34,0)
MSG ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTLOCL",35,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTLOCL",36,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTLOCL",37,0)
 S ECMSG(1,0)="The LOCAL USE DSS-"_ECPACK_" extract for "_ECSDN_" through ",ECMSG(2,0)=ECEDN_" was completed on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_". ",ECMSG(3,0)=" ",ECMSG(4,0)="A total of "_ECRN_" records were written."
"RTN","ECXTLOCL",38,0)
 S ECMSG(5,0)=" "
"RTN","ECXTLOCL",39,0)
 S XMTEXT="ECMSG(" D ^XMD
"RTN","ECXTLOCL",40,0)
 Q
"RTN","ECXTLOCL",41,0)
 ;
"RTN","ECXTLOCL",42,0)
 Q
"RTN","ECXTLOCL",43,0)
ERROR ;local extract not properly setup
"RTN","ECXTLOCL",44,0)
 S EC(1)="The local "_ECPACK_" extract was not properly set up",EC(2)="Please review settings in file 727.1 and requeue this extract"
"RTN","ECXTLOCL",45,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))="",XMTEXT="EC(",XMSUB="Local extract not properly setup",XMDUZ="DSS SYSTEM" D ^XMD
"RTN","ECXTLOCL",46,0)
 S ZTREQ="@" Q
"RTN","ECXTRAC")
0^53^B29872240
"RTN","ECXTRAC",1,0)
ECXTRAC ;BIR/DMA,CML-Package Extracts for DSS ; 11/08/96 15:37
"RTN","ECXTRAC",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXTRAC",3,0)
 ;Date range, queuing and message sending for package extracts
"RTN","ECXTRAC",4,0)
 ;Input ECPACK   printed name of package (e.g. Lab, Prescriptions)
"RTN","ECXTRAC",5,0)
 ;      ECNODE   in file 728 where last date is stored
"RTN","ECXTRAC",6,0)
 ;      ECPIECE  piece of node where last date is stored
"RTN","ECXTRAC",7,0)
 ;      ECRTN    in the form of START^ROUTINE
"RTN","ECXTRAC",8,0)
 ;      ECGRP    name of local mail group to receive summary message
"RTN","ECXTRAC",9,0)
 ;               (MUST BE 1 TO 5 UPPER CASE ALPHA - NO SPACES)
"RTN","ECXTRAC",10,0)
 ;      ECFILE   file number of the local editing file
"RTN","ECXTRAC",11,0)
 ; generates EC23=2nd and 3rd piece of zero node in local editing file
"RTN","ECXTRAC",12,0)
 ;               =YYMM of end date^pointer to 727
"RTN","ECXTRAC",13,0)
 ;
"RTN","ECXTRAC",14,0)
BEG ;
"RTN","ECXTRAC",15,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXTRAC",16,0)
 I '$D(ECHEAD) S ECHEAD=" "
"RTN","ECXTRAC",17,0)
 I $P($G(^ECX(728,1,ECNODE+.1)),"^",ECPIECE)]"" W !!,$C(7),ECPACK," extract is already scheduled to run",!! Q
"RTN","ECXTRAC",18,0)
 W @IOF,!,"Extract ",ECPACK," Information for DSS",!!
"RTN","ECXTRAC",19,0)
 S ECINST=+$P(^ECX(728,1,0),"^") K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTRAC",20,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTRAC",21,0)
 S ECLDT=$S($D(^ECX(728,1,ECNODE)):$P(^(ECNODE),"^",ECPIECE),1:2610624) S:ECLDT="" ECLDT=2610624
"RTN","ECXTRAC",22,0)
 K %DT S %DT="AEX",%DT("A")="Starting with Date: " D ^%DT G:Y<0 END S ECSD=Y
"RTN","ECXTRAC",23,0)
EDATE K %DT S %DT="AEX",%DT("A")="Ending with Date: " D ^%DT G:Y<0 END
"RTN","ECXTRAC",24,0)
 I Y<ECSD W !!,"The ending date cannot be earlier than the starting date.  Please re-enter",!,"the ending date.",! G EDATE
"RTN","ECXTRAC",25,0)
 I $E(Y,1,5)'=$E(ECSD,1,5) W !!,"Beginning and ending dates must be in the same month and year",!! R "Type return to continue ",X:10 K X G BEG
"RTN","ECXTRAC",26,0)
 S ECED=Y
"RTN","ECXTRAC",27,0)
 I ECLDT'<ECSD W !!,"The ",ECPACK," information has already been extracted through ",$$FMTE^XLFDT(ECLDT),".",!,"Please enter a new date range.",!!,"Press <RET> to continue  " R X:DTIME G BEG
"RTN","ECXTRAC",28,0)
QUE ; queue extract
"RTN","ECXTRAC",29,0)
 ;If the extract is IVP (i.e., file=727.819), check to see which feeder key format to use
"RTN","ECXTRAC",30,0)
 ;If there is data in the intermediate file (#728.113) for the START DATE the user selects OR there is data for a date prior to the START DATE use new format
"RTN","ECXTRAC",31,0)
 I ECFILE=727.819,$O(^ECX(728.113,"A",ECSD+1),-1) D  G:CHKFLG END
"RTN","ECXTRAC",32,0)
 .D CHK Q:CHKFLG
"RTN","ECXTRAC",33,0)
 .D CHK2 Q:CHKFLG
"RTN","ECXTRAC",34,0)
 .S ECRTN="START^ECXPIVDN",ECVER=7
"RTN","ECXTRAC",35,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXTRAC",36,0)
 I '$D(ECHEAD) S ECHEAD=""
"RTN","ECXTRAC",37,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXTRAC",38,0)
 K ZTSAVE S (ZTSAVE("ECINST"),ZTSAVE("ECED"),ZTSAVE("ECSD"),ZTSAVE("ECSD1"),ZTSAVE("ECEDN"),ZTSAVE("ECSDN"),ZTSAVE("ECPACK"),ZTSAVE("ECPIECE"),ZTSAVE("ECRTN"),ZTSAVE("ECGRP"),ZTSAVE("ECNODE"),ZTSAVE("ECFILE"),ZTSAVE("ECHEAD"),ZTSAVE("ECVER"))=""
"RTN","ECXTRAC",39,0)
 S ZTDESC=ECPACK_" EXTRACT: "_ECSDN_" TO "_ECEDN,ZTRTN="START^ECXTRAC",ZTIO="" D ^%ZTLOAD
"RTN","ECXTRAC",40,0)
 I $D(ZTSK) S $P(^ECX(728,1,ECNODE+.1),"^",ECPIECE)="R" W !,"Request queued as Task #",ZTSK,".",!
"RTN","ECXTRAC",41,0)
END D ^ECXKILL
"RTN","ECXTRAC",42,0)
 Q
"RTN","ECXTRAC",43,0)
START ; entry when queued
"RTN","ECXTRAC",44,0)
 S QFLG=0
"RTN","ECXTRAC",45,0)
 L +^ECX(727,0) S EC=$P(^ECX(727,0),"^",3)+1,$P(^(0),"^",3,4)=EC_"^"_EC L -^ECX(727,0)
"RTN","ECXTRAC",46,0)
 S ^ECX(727,EC,0)=EC_"^"_DT_"^"_ECPACK_"^"_ECSD_"^"_$E(ECED,1,7)
"RTN","ECXTRAC",47,0)
 S ^ECX(727,EC,"HEAD")=ECHEAD
"RTN","ECXTRAC",48,0)
 S ^ECX(727,EC,"FILE")=ECFILE
"RTN","ECXTRAC",49,0)
 S ^ECX(727,EC,"GRP")=ECGRP
"RTN","ECXTRAC",50,0)
 I $D(ECVER) S ^ECX(727,EC,"VER")=ECVER
"RTN","ECXTRAC",51,0)
 S DA=EC,DIK="^ECX(727," D IX^DIK K DIK,DA
"RTN","ECXTRAC",52,0)
 S ECRN=0,ECXYM=$$ECXYM^ECXUTL(ECED),EC23=ECXYM_"^"_EC
"RTN","ECXTRAC",53,0)
EXTRACT ;do specific extract
"RTN","ECXTRAC",54,0)
 S ECXSTART=$P($$HTE^XLFDT($H),":",1,2),ECXNOW=$H
"RTN","ECXTRAC",55,0)
 D @ECRTN
"RTN","ECXTRAC",56,0)
 ;if task gets stop request, set ztstop and quit
"RTN","ECXTRAC",57,0)
 I QFLG S $P(^ECX(728,1,ECNODE+.1),"^",ECPIECE)="",ZTSTOP=1 Q
"RTN","ECXTRAC",58,0)
 S $P(^ECX(728,1,ECNODE),"^",ECPIECE)=$P(ECED,".") S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTRAC",59,0)
 S $P(^ECX(727,$P(EC23,"^",2),0),"^",6)=ECRN
"RTN","ECXTRAC",60,0)
 S ECLAST=-$O(^ECX(ECFILE,"AINV","")),ECTOTAL=$P(^ECX(ECFILE,0),"^",4)+ECRN,$P(^(0),"^",3,4)=ECLAST_"^"_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXTRAC",61,0)
 ;set piece 3 and 4 of the zero node
"RTN","ECXTRAC",62,0)
 ;
"RTN","ECXTRAC",63,0)
MSG ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTRAC",64,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTRAC",65,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTRAC",66,0)
 S ECMSG(1,0)="The DSS-"_ECPACK_" extract (#"_$P(EC23,"^",2)_") for "_ECSDN,ECMSG(2,0)="through "_ECEDN_" was begun on "_$P(ECXSTART,"@")_" at "_$P(ECXSTART,"@",2)
"RTN","ECXTRAC",67,0)
 S ECMSG(3,0)="and completed on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_"."
"RTN","ECXTRAC",68,0)
 S ECMSG(4,0)=" ",ECMSG(5,0)="A total of "_ECRN_" records were written."
"RTN","ECXTRAC",69,0)
 S ECMSG(6,0)=" ",ECMSG(7,0)="Extract time was [HH:MM:SS] "_$$HDIFF^XLFDT($H,ECXNOW,3),ECMSG(8,0)=" "
"RTN","ECXTRAC",70,0)
 S XMTEXT="ECMSG(" D ^XMD
"RTN","ECXTRAC",71,0)
 S $P(^ECX(728,1,ECNODE+.1),"^",ECPIECE)="" D ^ECXKILL
"RTN","ECXTRAC",72,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECXTRAC",73,0)
 Q
"RTN","ECXTRAC",74,0)
 ;
"RTN","ECXTRAC",75,0)
CHK ; called from IVP extract and IV room options to check for existence
"RTN","ECXTRAC",76,0)
 ; of necessary files for "division" functionality
"RTN","ECXTRAC",77,0)
 S CHKFLG=0
"RTN","ECXTRAC",78,0)
 I '$O(^PS(59.5,0)) W !,"The IV Room file (#59.5) does not exist!" S CHKFLG=1 Q
"RTN","ECXTRAC",79,0)
 I '$D(^ECX(728.113,0)) W $C(7),!!,"Your facility appears to be running a version of Inpatient Medications prior to",!,"the version 4.5 that is necessary to use this option." S CHKFLG=1 Q
"RTN","ECXTRAC",80,0)
 K TEST1 D FIELD^DID(59.5,.02,"","TYPE","TEST1")
"RTN","ECXTRAC",81,0)
 I '$D(TEST1) W $C(7),!!,"The Inpatient Medications Patch PSJ*4.5*27 has not yet been installed!",!,"It must be loaded before you can proceed with this option." S CHKFLG=1 Q
"RTN","ECXTRAC",82,0)
 Q
"RTN","ECXTRAC",83,0)
CHK2 ; check for all active IV rooms to have a "division"
"RTN","ECXTRAC",84,0)
 S EC=0 F  S EC=$O(^PS(59.5,EC)) Q:'EC  I '$P(^PS(59.5,EC,0),"^",4) D  I CHKFLG D MSG2 Q
"RTN","ECXTRAC",85,0)
 .S CHKFLG=$S('$G(^PS(59.5,EC,"I")):1,$G(^PS(59.5,EC,"I"))>DT:1,1:0)
"RTN","ECXTRAC",86,0)
 Q
"RTN","ECXTRAC",87,0)
MSG2 ;
"RTN","ECXTRAC",88,0)
 W !!,"All active IV Rooms in the IV Room file (#59.5) must have a ""DIVISION""",!,"assigned to run this extract!"
"RTN","ECXTRAC",89,0)
 W !!,"This information can be entered using the DSS Extract Manager's Maintenance ",!,"option ""Enter/Edit IV Room Division""." Q
"RTN","ECXTRANS")
0^54^B18511233
"RTN","ECXTRANS",1,0)
ECXTRANS ;BIR/DMA-Extract from Local Editing Files and Transmit ; [ 11/26/96  2:13 PM ]
"RTN","ECXTRANS",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXTRANS",3,0)
EN ;entry point from option
"RTN","ECXTRANS",4,0)
 I $G(^ECX(728,1,"QUEUE"))'?1"DM"1U W !,"You have not defined a proper transmission queue",!,"for entry number 1 in file 728",!,"No transmissions allowed" Q
"RTN","ECXTRANS",5,0)
 S ECXQUEUE=$G(^ECX(728,1,"QUEUE"))
"RTN","ECXTRANS",6,0)
 W ! S ECRE="",DIC=727,DIC(0)="AEQM",DIC("A")="Transmit which extract: ",DIC("S")="I '$D(^(""L"")),'$D(^(""PURG""))" D ^DIC K DIC G END:Y<0
"RTN","ECXTRANS",7,0)
 I $G(^ECX(727,+Y,"PURG")) W !,"Data for this extract was purged on ",$E(^("PURG"),4,5),"/",$E(^("PURG"),6,7),"/",$E(^("PURG"),2,3) G ECXTRANS
"RTN","ECXTRANS",8,0)
 S ECDA=+Y I $G(^ECX(727,ECDA,"TR")) W !,"This extract was transmitted on ",$E(^("TR"),4,5),"/",$E(^("TR"),6,7),"/",$E(^("TR"),2,3) S DIR(0)="Y",DIR("A")="Do you want to retransmit " D ^DIR K DIR G ECXTRANS:'Y K ^ECX(727,ECDA,"TR") S ECRE="re"
"RTN","ECXTRANS",9,0)
 S ZTSK=$G(^ECX(727,ECDA,"Q")) I ZTSK D STAT^%ZTLOAD I ZTSK(0) I ZTSK(1)<3 W !!,"Task ",ZTSK," is already queued to transmit this extract",!! K ZTSK G ECXTRANS
"RTN","ECXTRANS",10,0)
 S ZTSAVE("ECDA")="",ZTSAVE("ECXQUEUE")="",ZTSAVE("ECRE")="",ZTRTN="START^ECXTRANS",ZTIO="",ZTDESC="Transmission of extract # "_ECDA D ^%ZTLOAD
"RTN","ECXTRANS",11,0)
 I $D(ZTSK) W !,"Request queued as Task #",ZTSK,".",! S ^ECX(727,ECDA,"Q")=ZTSK K ZTSK
"RTN","ECXTRANS",12,0)
END ;exit
"RTN","ECXTRANS",13,0)
 K ECDA,ECRE,X,Y Q
"RTN","ECXTRANS",14,0)
 Q
"RTN","ECXTRANS",15,0)
 ;
"RTN","ECXTRANS",16,0)
START ; entry point
"RTN","ECXTRANS",17,0)
 S ECINST=$P(^ECX(728,1,0),"^") K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTRANS",18,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTRANS",19,0)
 S ECF=^ECX(727,ECDA,"FILE"),ECHEAD=^("HEAD"),ECGRP=^("GRP"),ECED=$P(^(0),"^",5),ECPACK=$P(^(0),"^",3),ECVER=$G(^("VER")) S:'ECVER ECVER=1 S ECVER=$$RJ^XLFSTR(ECVER,3,0)
"RTN","ECXTRANS",20,0)
 I ECPACK["(setup)" S ECXQUEUE="DMU"
"RTN","ECXTRANS",21,0)
 ;all setup extracts for all sites to go to queue DMU - Judy Sine 2/16/95
"RTN","ECXTRANS",22,0)
 I ECHEAD="LAR",+ECED<2971001 S ECXQUEUE="DMW"
"RTN","ECXTRANS",23,0)
 ;all LAR extracts for fy96/fy97 for test sites go to queue DMW;BTSO/AAC 11/18/97
"RTN","ECXTRANS",24,0)
 K ^TMP($J) S ECHD(1)=ECINST_ECHEAD_$$ECXYM^ECXUTL(ECED)_ECVER,ECRN=0,ECMSN=1,ECMIN=2,ECMAX=200,ECLN=ECMIN
"RTN","ECXTRANS",25,0)
 F J=0:0 S J=$O(^ECX(ECF,"AC",ECDA,J)) Q:'J  I $D(^ECX(ECF,J,0)) S ^TMP($J,ECMSN,ECLN,0)=$P(^ECX(ECF,J,0),"^",4,100)_"^~",ECLN=ECLN+1,ECRN=ECRN+1 I ECLN>ECMAX,$O(^ECX(ECF,"AC",ECDA,J)) S ECLN=ECMIN,ECMSN=ECMSN+1 I $$S^%ZTLOAD Q
"RTN","ECXTRANS",26,0)
 I $$S^%ZTLOAD G CLEAN
"RTN","ECXTRANS",27,0)
 ;
"RTN","ECXTRANS",28,0)
 S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTRANS",29,0)
 ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTRANS",30,0)
 S ECXLNCNT=7
"RTN","ECXTRANS",31,0)
 F ECMS=1:1:ECMSN D SEND
"RTN","ECXTRANS",32,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTRANS",33,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTRANS",34,0)
 S ^TMP($J,"LOC",1,0)="The DSS "_ECPACK_" extract (#"_ECDA_") was "_ECRE_"transmitted on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_". ",^TMP($J,"LOC",3,0)=" ",^TMP($J,"LOC",4,0)="A total of "_ECRN_" records were written."
"RTN","ECXTRANS",35,0)
 S ^TMP($J,"LOC",5,0)="A total of "_ECMSN_" messages were sent.",^TMP($J,"LOC",6,0)="    Message numbers :"
"RTN","ECXTRANS",36,0)
 S XMTEXT="^TMP($J,""LOC""," D ^XMD S ^ECX(727,ECDA,"TR")=DT
"RTN","ECXTRANS",37,0)
CLEAN ;
"RTN","ECXTRANS",38,0)
 S ZTREQ="@" K ^TMP($J),^ECX(727,ECDA,"Q") D ^ECXKILL
"RTN","ECXTRANS",39,0)
 I $$S^%ZTLOAD K ZTREQ S ZTSTOP=1
"RTN","ECXTRANS",40,0)
 Q
"RTN","ECXTRANS",41,0)
 ;
"RTN","ECXTRANS",42,0)
SEND ;send individual messages
"RTN","ECXTRANS",43,0)
 S XMSUB="("_ECGRP_") "_ECINST_" - "_ECPACK_" DSS EXTRACT, MESSAGE "_ECMS_" OF "_ECMSN,XMDUZ="DSS SYSTEM"
"RTN","ECXTRANS",44,0)
 F J=1:1:ECMIN-1 S ^TMP($J,ECMS,J,0)=ECHD(J)
"RTN","ECXTRANS",45,0)
 K XMY
"RTN","ECXTRANS",46,0)
 S XMY("XXX@Q-"_ECXQUEUE_".VA.GOV")=""
"RTN","ECXTRANS",47,0)
 S XMTEXT="^TMP($J,ECMS," D ^XMD S ^TMP($J,"LOC",ECXLNCNT,0)=XMZ,ECXLNCNT=ECXLNCNT+1
"RTN","ECXTRANS",48,0)
SETM S DA(1)=ECDA,DIC(0)="L" K ECXDD D FIELD^DID(727,301,,"SPECIFIER","ECXDD") S DIC("P")=ECXDD("SPECIFIER") K ECXDD S DIC="^ECX(727,"_DA(1)_",1,",X=XMZ,DINUM=X K DD,DO D FILE^DICN
"RTN","ECXTRANS",49,0)
 Q
"RTN","ECXTRANS",50,0)
 ;
"RTN","ECXTRT")
0^55^B15573826
"RTN","ECXTRT",1,0)
ECXTRT ;BIR/DMA,CML,PTD-Treating Specialty Change Extract ; [ 01/10/97  4:33 PM ]
"RTN","ECXTRT",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXTRT",3,0)
BEG ;entry point from option
"RTN","ECXTRT",4,0)
 D SETUP,^ECXTRAC,^ECXKILL
"RTN","ECXTRT",5,0)
 Q
"RTN","ECXTRT",6,0)
 ;
"RTN","ECXTRT",7,0)
START ; start package specific extract
"RTN","ECXTRT",8,0)
 S QFLG=0
"RTN","ECXTRT",9,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD") S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXTRT",10,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXTRT",11,0)
 F  S ECD=$O(^DGPM("ATT6",ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  F  S ECDA=$O(^DGPM("ATT6",ECD,ECDA)) Q:'ECDA  I $D(^DGPM(ECDA,0)) S EC=^(0),DFN=+$P(EC,"^",3),ECMT=$P(EC,"^",18) I $P(EC,"^",14)'=$P(EC,"^",24),$D(^DPT(DFN,0)) S D0=^(0) D  Q:QFLG
"RTN","ECXTRT",12,0)
 .S ECTM=$$ECXTIME^ECXUTL(ECD)
"RTN","ECXTRT",13,0)
 .S ECL=+$O(^DGPM("ATID6",DFN,9999999.9999999-ECD)),ECL1=+$O(^(ECL,0)),EC=$G(^DGPM(ECL1,0)) Q:'EC
"RTN","ECXTRT",14,0)
 .S ECA=$P($G(^DGPM(+$P(EC,"^",14),0)),"^")
"RTN","ECXTRT",15,0)
 .S X1=ECD,X2=$P(EC,"^") D ^%DTC S LOS=X
"RTN","ECXTRT",16,0)
 .S ECTRT=$P($G(^DIC(45.7,+$P(EC,"^",9),0)),"^",2)
"RTN","ECXTRT",17,0)
 .S ECODE="^"_DFN_"^"_$P(D0,"^",9)_"^"_$E($P($P(D0,"^"),",")_"    ",1,4)_"^3^"_$$ECXDATE^ECXUTL(ECD,ECXYM)_"^^"_$$ECXDATE^ECXUTL(ECA,ECXYM)_"^"
"RTN","ECXTRT",18,0)
 .S ECODE=ECODE_"^"_ECDA_"^6^^"_ECTRT_"^"_LOS_"^"_ECPRO_$P(EC,"^",19)_"^"_ECMT_"^"_ECTM_"^"_$$ECXTIME^ECXUTL(ECA)_"^^^^"
"RTN","ECXTRT",19,0)
 .;fac^dfn^ssn^name^i/o^day^product^adm date^dis date^mov#^type^gaining ward^treat spec^duration^attending physician^movement type^trt time^adm time^primary ward prov^end attending^end ward prov
"RTN","ECXTRT",20,0)
 .S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXTRT",21,0)
 .S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXTRT",22,0)
 .I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXTRT",23,0)
 ;
"RTN","ECXTRT",24,0)
 ;loop through discharges to get last treating specialty
"RTN","ECXTRT",25,0)
 ;
"RTN","ECXTRT",26,0)
 S ECD=ECSD1 F  S ECD=$O(^DGPM("ATT3",ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  F  S ECDA=$O(^DGPM("ATT3",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXTRT",27,0)
 .I $D(^DGPM(ECDA,0)) S EC=^(0),DFN=+$P(EC,"^",3),ECMT=$P(EC,"^",18) I $D(^DPT(DFN,0)) S D0=^(0) D
"RTN","ECXTRT",28,0)
 ..S ECTM=$$ECXTIME^ECXUTL(ECD)
"RTN","ECXTRT",29,0)
 ..S ECL=$O(^DGPM("ATID6",DFN,9999999.9999999-ECD)),ECL1=+$O(^(ECL,0)),EC=$G(^DGPM(ECL1,0))
"RTN","ECXTRT",30,0)
 ..S ECA=$P($G(^DGPM(+$P(EC,"^",14),0)),"^")
"RTN","ECXTRT",31,0)
 ..S X1=ECD,X2=$P(EC,"^") D ^%DTC S LOS=X
"RTN","ECXTRT",32,0)
 ..S ECTRT=$P($G(^DIC(45.7,+$P(EC,"^",9),0)),"^",2)
"RTN","ECXTRT",33,0)
 ..S ECODE="^"_DFN_"^"_$P(D0,"^",9)_"^"_$E($P($P(D0,"^"),",")_"    ",1,4)_"^3^"_$$ECXDATE^ECXUTL(ECD,ECXYM)_"^^"_$$ECXDATE^ECXUTL(ECA,ECXYM)_"^"_$$ECXDATE^ECXUTL(ECD,ECXYM)
"RTN","ECXTRT",34,0)
 ..S ECODE=ECODE_"^"_ECDA_"^6^^"_ECTRT_"^"_LOS_"^"_ECPRO_$P(EC,"^",19)_"^"_ECMT_"^"_ECTM_"^"_$$ECXTIME^ECXUTL(ECA)_"^^^^"
"RTN","ECXTRT",35,0)
 ..;fac^dfn^ssn^name^i/o^day^product^adm date^dis date^mov#^type^gaining ward^treat spec^duration^attending physician^movement type^trt time^adm time
"RTN","ECXTRT",36,0)
 ..S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXTRT",37,0)
 ..S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXTRT",38,0)
 .I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXTRT",39,0)
 Q
"RTN","ECXTRT",40,0)
 ;
"RTN","ECXTRT",41,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXTRT",42,0)
 S ECPACK="Treating specialty change",ECPIECE=17,ECRTN="START^ECXTRT",ECGRP="TREAT",ECHEAD="TRT",ECFILE=727.817,ECVER=7
"RTN","ECXTRT",43,0)
 Q
"RTN","ECXTRT",44,0)
 ;
"RTN","ECXTRT",45,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXTRT",46,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXTRYIT")
0^56^B15901060
"RTN","ECXTRYIT",1,0)
ECXTRYIT ;BIR/DMA-Test Run for Setup Extract Print Population ; [ 07/24/96  1:30 PM ]
"RTN","ECXTRYIT",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXTRYIT",3,0)
EN ;entry point from ooption
"RTN","ECXTRYIT",4,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXTRYIT",5,0)
 W !!,"This option will print the admission data and data for the last",!,"transfer and treating specialty change for all patients who",!,"were in the hospital on the day you select.",!!
"RTN","ECXTRYIT",6,0)
 W !!,"NOTE - This will generate a report of your inpatient population on the",!,"BEGINNING of the day you select, not the end of the day as MAS reports do.",!
"RTN","ECXTRYIT",7,0)
 W "For example, for this report, if you choose October 1, 1994, the report will",!,"start at midnight at the beginning of the day."
"RTN","ECXTRYIT",8,0)
 W "  For the MAS report, you would",!,"choose September 30, 1994.  The MAS report begins at midnight at the end",!,"of the day.",!!!
"RTN","ECXTRYIT",9,0)
DATE S DIR(0)="D",DIR("A")="Select the date ",DIR("B")=$$HTE^XLFDT($H-1) D ^DIR K DIR G END:$D(DIRUT) S ECD=Y I Y>DT W !!,"Must be a date in the past",!! G DATE
"RTN","ECXTRYIT",10,0)
 W !!,"This report must be queued to a 132 column printer.",!
"RTN","ECXTRYIT",11,0)
 S %ZIS="NQ" D ^%ZIS K %ZIS G END:POP S ZTSAVE("ECD")="",ZTDESC="Print inpatient list (DSS)",ZTRTN="START^ECXTRYIT" D ^%ZTLOAD
"RTN","ECXTRYIT",12,0)
END K POP,X,Y,ECD D ^%ZISC Q
"RTN","ECXTRYIT",13,0)
 ;
"RTN","ECXTRYIT",14,0)
START ;queued entry point
"RTN","ECXTRYIT",15,0)
 K ^TMP($J) S DFN="",ECD0=9999999.9999999-ECD
"RTN","ECXTRYIT",16,0)
 F  S DFN=$O(^DGPM("ATID1",DFN)) Q:'DFN  S EC1=$O(^(DFN,ECD0)) I EC1 S ECDA=$O(^(EC1,0)) I $D(^DGPM(ECDA,0)) S EC=^(0),ECX=+$P(EC,"^",17),ECAS=$P(EC,"^",18)=40 S:$S('ECX:1,$G(^DGPM(ECX,0))>ECD:1,1:0) ^TMP($J,DFN,ECDA)=$P(EC,"^",6) I ECAS D
"RTN","ECXTRYIT",17,0)
 .F EC1=EC1:0 S EC1=$O(^DGPM("ATID1",DFN,EC1)) Q:'EC1  S ECDA=$O(^(EC1,0)) I ECDA S EC=^DGPM(ECDA,0) I $P(EC,"^",18)'=40 S ECX=$P(EC,"^",17) Q
"RTN","ECXTRYIT",18,0)
 .I EC1,ECDA,$S('ECX:1,'$D(^DGPM(ECX,0)):1,^DGPM(ECX,0)>ECD:1,1:0) S ^TMP($J,DFN,ECDA)=$P(EC,"^",6)
"RTN","ECXTRYIT",19,0)
 ;
"RTN","ECXTRYIT",20,0)
 S DFN=0 F  S DFN=$O(^TMP($J,DFN)) Q:'DFN  S X=$O(^(DFN,0)) I $O(^(X)) K ^(X)
"RTN","ECXTRYIT",21,0)
 ;if he has an NHCU and an ASIH open, get rid of the NHCU one since
"RTN","ECXTRYIT",22,0)
 ;he may have been transferred in the hospital and we don't want to
"RTN","ECXTRYIT",23,0)
 ;find him twice
"RTN","ECXTRYIT",24,0)
 ;
"RTN","ECXTRYIT",25,0)
 ;now hunt transfers
"RTN","ECXTRYIT",26,0)
 ;
"RTN","ECXTRYIT",27,0)
 S DFN=0 F  S DFN=$O(^TMP($J,DFN)),ECCA=0 Q:'DFN  F  S ECCA=$O(^TMP($J,DFN,ECCA)) Q:'ECCA  S ECM=$O(^DGPM("APMV",DFN,ECCA,ECD0)) I ECM S ECDA=$O(^(ECM,0)) I ECDA,ECDA'=ECCA,$D(^DGPM(ECDA,0)) S EC=^(0),^TMP($J,DFN,ECCA)=$P(EC,"^",6)
"RTN","ECXTRYIT",28,0)
 ;
"RTN","ECXTRYIT",29,0)
 ;now put in name order
"RTN","ECXTRYIT",30,0)
 S DFN=0 F  S DFN=$O(^TMP($J,DFN)),ECCA=0 Q:'DFN  F  S ECCA=$O(^TMP($J,DFN,ECCA)) Q:'ECCA  D
"RTN","ECXTRYIT",31,0)
 .S W=+^(ECCA),W=$P($G(^DIC(42,W,0)),"^") S:W="" W="unknown" S ^TMP($J,"L",W,$P(^DPT(DFN,0),"^")_"^"_DFN)=$P(^DPT(DFN,0),"^",9)_"^"_$P($P(^DGPM(ECCA,0),"^"),".")
"RTN","ECXTRYIT",32,0)
 ;
"RTN","ECXTRYIT",33,0)
 S W="" F  S W=$O(^TMP($J,"L",W)),NAM="" Q:W=""  D HEAD F  S NAM=$O(^TMP($J,"L",W,NAM)) Q:NAM=""  S EC=^(NAM) W !,?5,$P(NAM,"^"),?45,$P(EC,"^"),?66,$$FMTE^XLFDT($P(EC,"^",2)) I $Y+4>IOSL,$O(^TMP($J,"L",W,NAM))]"" D HEAD
"RTN","ECXTRYIT",34,0)
 K ^TMP($J) S ZTREQ="@" D ^%ZISC Q
"RTN","ECXTRYIT",35,0)
 ;
"RTN","ECXTRYIT",36,0)
HEAD W:$Y @IOF W !!,?30,"INPATIENT WARD LIST (DSS) FOR ",$$FMTE^XLFDT(ECD),"    FOR WARD ",W,!!,?12,"PATIENT",?50,"SSN",?66,"ADMIT DATE",!
"RTN","ECXTRYIT",37,0)
 Q
"RTN","ECXUD")
0^57^B9524215
"RTN","ECXUD",1,0)
ECXUD ;BIR/DMA,PTD-Extract from UNIT DOSE EXTRACT DATA File (#728.904) ; 11/01/96 14:35
"RTN","ECXUD",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXUD",3,0)
BEG ;entry point from option
"RTN","ECXUD",4,0)
 I '$O(^ECX(728.904,"A",0)) W !,"There are no unit dose orders to extract",!! R X:5 K X Q
"RTN","ECXUD",5,0)
 D SETUP,^ECXTRAC,^ECXKILL
"RTN","ECXUD",6,0)
 Q
"RTN","ECXUD",7,0)
 ;
"RTN","ECXUD",8,0)
START ;start package specific extract
"RTN","ECXUD",9,0)
 S QFLG=0
"RTN","ECXUD",10,0)
 S ECED=ECED+.3
"RTN","ECXUD",11,0)
 F ECD=ECSD1:0 S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  F J=0:0 S J=$O(^ECX(728.904,"A",ECD,J)) Q:'J  I $D(^ECX(728.904,J,0)) S DATA=^(0),^(1)=$P(EC23,"^",2),^ECX(728.904,"AC",$P(EC23,"^",2),J)="" D STUFF Q:QFLG
"RTN","ECXUD",12,0)
 Q
"RTN","ECXUD",13,0)
 ;
"RTN","ECXUD",14,0)
STUFF ;
"RTN","ECXUD",15,0)
 S DFN=$P(DATA,"^",2) Q:'$D(^DPT(DFN,0))  S SSN=$P(^(0),"^",9),ECNA=$E($P($P(^(0),"^"),",")_"    ",1,4)
"RTN","ECXUD",16,0)
 S ECPRO=$P(DATA,"^",7),ECPRO=$E($P(ECPRO,";",2))_$P(ECPRO,";")
"RTN","ECXUD",17,0)
 D INP S W=$P(DATA,"^",6),ECDIV=$P($G(^DIC(42,+W,0)),"^",11),W=$P($G(^DIC(42,+W,44)),"^")
"RTN","ECXUD",18,0)
 S ECCAT=$P(^PSDRUG(+$P(DATA,"^",4),0),"^",2),ECINV=$P(^(0),"^",3),ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXUD",19,0)
 S ECNDC=$P($G(^PSDRUG(+$P(DATA,"^",4),2)),"^",4),ECNDF=$G(^("ND"))
"RTN","ECXUD",20,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXUD",21,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDF,"^"),4,0)_$$RJ^XLFSTR($P(ECNDF,"^",3),3,0)_ECNFC
"RTN","ECXUD",22,0)
 S ECODE=ECDIV_"^"_DFN_"^"_SSN_"^"_ECNA_"^3^"_$$ECXDATE^ECXUTL($P(DATA,"^",3),ECXYM)_"^"_ECCAT_"^"_$P(DATA,"^",5)_"^"_W_"^"_ECPRO_"^"_$P(DATA,"^",8)_"^"_ECMN_"^"_ECTS
"RTN","ECXUD",23,0)
 S ECODE=ECODE_"^"_ECNDC_"^"_ECNFC_"^"_ECINV_"^"_$E($P($P(DATA,"^",3),".",2)_"000000",1,6)_"^"_$$ECXDATE^ECXUTL(ECADM,ECXYM)_"^"_$$ECXTIME^ECXUTL(ECADM)_"^"
"RTN","ECXUD",24,0)
 ;facility^dfn^ssn^name^in/out^day^drug category^quantity^ward^provider^cost^mov #^treat spec^ndc^new feeder key^investigational^udp time^adm date^adm time
"RTN","ECXUD",25,0)
 S EC7=-$O(^ECX(ECFILE,"AINV","")) F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXUD",26,0)
 S ^ECX(ECFILE,EC7,0)=EC7_"^"_EC23_"^"_ECODE,ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXUD",27,0)
 I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXUD",28,0)
 Q
"RTN","ECXUD",29,0)
 ;
"RTN","ECXUD",30,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXUD",31,0)
 S ECPACK="Unit Dose",ECPIECE=8,ECRTN="START^ECXUD",ECGRP="UD",ECHEAD="UDP",ECFILE=727.809,ECVER=7
"RTN","ECXUD",32,0)
 S ECSD=$O(^ECX(728.904,"A",0)),ECED=$$FMADD^XLFDT($E(ECSD,1,5)+1+($E(ECSD,4,5)=12*8800)_"01",-1)
"RTN","ECXUD",33,0)
 Q
"RTN","ECXUD",34,0)
INP ; checks for in/outpatient status and gets movement number
"RTN","ECXUD",35,0)
 S ECA=1,(ECTS,ECADM)="" K VAIP S VAIP("D")=ECD D IN5^VADPT S ECMN=VAIP(1) I ECMN S ECA=3,ECTS=$P($G(^DIC(45.7,+VAIP(8),0)),"^",2)
"RTN","ECXUD",36,0)
 I +VAIP(13) S ECADM=$P(^DGPM(+VAIP(13),0),"^")
"RTN","ECXUD",37,0)
 K VAIP,VAERR
"RTN","ECXUD",38,0)
 Q
"RTN","ECXUD",39,0)
 ;
"RTN","ECXUD",40,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXUD",41,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXUD1")
0^58^B523654
"RTN","ECXUD1",1,0)
ECXUD1 ;BIR/DMA-Store Data from Unit Dose Package into 728.904 ; 26 Sep 95 / 12:44 PM
"RTN","ECXUD1",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXUD1",3,0)
 ;called from 2 unit dose routines - PSGPLF and PSGAMSA
"RTN","ECXUD1",4,0)
 ;load UD data into an EC file for later extract to vendor
"RTN","ECXUD1",5,0)
 ;
"RTN","ECXUD1",6,0)
 S X="ECXYUD1" X ^%ZOSF("TEST") I $T D ^ECXYUD1
"RTN","ECXUD1",7,0)
 I '$D(^ECX(728.904)) Q
"RTN","ECXUD1",8,0)
 L +^ECX(728.904,0):1 Q:'$T
"RTN","ECXUD1",9,0)
 N DA,DIK
"RTN","ECXUD1",10,0)
 S EC=-$O(^ECX(728.904,"AINV","")) F  S EC=EC+1 Q:'$D(^ECX(728.904,EC))
"RTN","ECXUD1",11,0)
 S ^ECX(728.904,EC,0)=EC_"^"_ECUD L -^ECX(728.904,0)
"RTN","ECXUD1",12,0)
 S DA=EC,DIK="^ECX(728.904," D IX^DIK
"RTN","ECXUD1",13,0)
 K EC Q
"RTN","ECXUTL")
0^76^B31425421
"RTN","ECXUTL",1,0)
ECXUTL ;ALB/JAP - Utilities for DSS Extracts ;Sep 17, 1997
"RTN","ECXUTL",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXUTL",3,0)
 ;
"RTN","ECXUTL",4,0)
ECXYM(ECXFMDT) ;extrinsic function
"RTN","ECXUTL",5,0)
 ;converts any FM internal format date or date/time to a 6-character string
"RTN","ECXUTL",6,0)
 ;
"RTN","ECXUTL",7,0)
 ;   input
"RTN","ECXUTL",8,0)
 ;   ECXFMDT = date or date/time; FM internal format (required)
"RTN","ECXUTL",9,0)
 ;   output
"RTN","ECXUTL",10,0)
 ;   ECXYM = YYYYMM string
"RTN","ECXUTL",11,0)
 ;
"RTN","ECXUTL",12,0)
 N MONTH,YEAR,CENTURY,ECXYM
"RTN","ECXUTL",13,0)
 ;
"RTN","ECXUTL",14,0)
 ;error checks
"RTN","ECXUTL",15,0)
 I +ECXFMDT'=ECXFMDT S ECXYM="000000" Q ECXYM
"RTN","ECXUTL",16,0)
 I $L($P(ECXFMDT,"."))'=7 S ECXYM="000000" Q ECXYM
"RTN","ECXUTL",17,0)
 I +$E(ECXFMDT,4,5)<1!(+$E(ECXFMDT,4,5)>12) S ECXYM="000000" Q ECXYM
"RTN","ECXUTL",18,0)
 ;
"RTN","ECXUTL",19,0)
 S MONTH=$E(ECXFMDT,4,5),YEAR=$E(ECXFMDT,2,3),CENTURY=$E(ECXFMDT,1)+17
"RTN","ECXUTL",20,0)
 S ECXYM=CENTURY_YEAR_MONTH
"RTN","ECXUTL",21,0)
 Q ECXYM
"RTN","ECXUTL",22,0)
 ;
"RTN","ECXUTL",23,0)
ECXYMX(ECXYM) ;extrinsic function
"RTN","ECXUTL",24,0)
 ;converts a 6-character numeric string of format YYYYMM
"RTN","ECXUTL",25,0)
 ;to a FM external format date
"RTN","ECXUTL",26,0)
 ;
"RTN","ECXUTL",27,0)
 ;   input
"RTN","ECXUTL",28,0)
 ;   ECXYM = YYYYMM string (required)
"RTN","ECXUTL",29,0)
 ;   output
"RTN","ECXUTL",30,0)
 ;   ECXYMX = FM external format date;
"RTN","ECXUTL",31,0)
 ;            SEP 1997
"RTN","ECXUTL",32,0)
 ;   error code
"RTN","ECXUTL",33,0)
 ;   if input problem, then "000000" returned
"RTN","ECXUTL",34,0)
 ;
"RTN","ECXUTL",35,0)
 N Y,%DT,CENTURY,FMCENT,ECXYMX
"RTN","ECXUTL",36,0)
 ;
"RTN","ECXUTL",37,0)
 ;error checks
"RTN","ECXUTL",38,0)
 I ECXYM="" S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",39,0)
 I +ECXYM'=ECXYM S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",40,0)
 I $L(ECXYM)'=6 S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",41,0)
 I +$E(ECXYM,1,4)<1800 S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",42,0)
 I +$E(ECXYM,5,6)<1!(+$E(ECXYM,5,6)>12) S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",43,0)
 ;
"RTN","ECXUTL",44,0)
 S CENTURY=$E(ECXYM,1,2)
"RTN","ECXUTL",45,0)
 S FMCENT=CENTURY-17
"RTN","ECXUTL",46,0)
 S Y=FMCENT_$E(ECXYM,3,6) D DD^%DT S ECXYMX=Y
"RTN","ECXUTL",47,0)
 ;
"RTN","ECXUTL",48,0)
 ;error checks
"RTN","ECXUTL",49,0)
 I $L(ECXYMX)'=8 S ECXYMX="000000"
"RTN","ECXUTL",50,0)
 I "JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC"'[$E(ECXYMX,1,3) S ECXYMX="000000"
"RTN","ECXUTL",51,0)
 Q ECXYMX
"RTN","ECXUTL",52,0)
 ;
"RTN","ECXUTL",53,0)
ECXDATE(ECXFMDT,ECXYM) ;extrinsic function
"RTN","ECXUTL",54,0)
 ;converts any FM internal format date or date/time to a 8-character string
"RTN","ECXUTL",55,0)
 ;
"RTN","ECXUTL",56,0)
 ;   input
"RTN","ECXUTL",57,0)
 ;   ECXFMDT = date or date/time; FM internal format (required)
"RTN","ECXUTL",58,0)
 ;   ECXYM = YYYYMM; year/month 6-character string (required)
"RTN","ECXUTL",59,0)
 ;   output
"RTN","ECXUTL",60,0)
 ;   ECXDATE = YYYYMMDD string
"RTN","ECXUTL",61,0)
 ;   error code
"RTN","ECXUTL",62,0)
 ;   "000000" returned, if problem with input
"RTN","ECXUTL",63,0)
 ;
"RTN","ECXUTL",64,0)
 N MONTH,YEAR,CENTURY,DAY,ECXDATE
"RTN","ECXUTL",65,0)
 ;
"RTN","ECXUTL",66,0)
 ;error checks
"RTN","ECXUTL",67,0)
 I +ECXYM'=ECXYM S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",68,0)
 I $L(ECXYM)'=6 S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",69,0)
 I +$E(ECXYM,1,4)<1800 S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",70,0)
 I +$E(ECXYM,5,6)<1!($E(ECXYM,5,6)>12) S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",71,0)
 ;special case where ecxfmdt is null; default to year/month of ecxym
"RTN","ECXUTL",72,0)
 I ECXFMDT="" S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",73,0)
 ;error checks
"RTN","ECXUTL",74,0)
 I +ECXFMDT'=ECXFMDT S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",75,0)
 I $L(ECXFMDT)<7 S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",76,0)
 I +$E(ECXFMDT,4,5)>12 S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",77,0)
 I +$E(ECXFMDT,6,7)>31 S ECXFMDT=$E(ECXFMDT,1,5)_"01"
"RTN","ECXUTL",78,0)
 ;default to 1st day of month
"RTN","ECXUTL",79,0)
 S DAY=$E(ECXFMDT,6,7) S:DAY="00" DAY="01"
"RTN","ECXUTL",80,0)
 ;default to month of ecxym
"RTN","ECXUTL",81,0)
 S MONTH=$E(ECXFMDT,4,5) S:MONTH="00" MONTH=$E(ECXYM,5,6)
"RTN","ECXUTL",82,0)
 S YEAR=$E(ECXFMDT,2,3)
"RTN","ECXUTL",83,0)
 S CENTURY=$E(ECXFMDT,1)+17
"RTN","ECXUTL",84,0)
 S ECXDATE=CENTURY_YEAR_MONTH_DAY
"RTN","ECXUTL",85,0)
 Q ECXDATE
"RTN","ECXUTL",86,0)
 ;
"RTN","ECXUTL",87,0)
ECXDATEX(ECXDATE) ;extrinsic function
"RTN","ECXUTL",88,0)
 ;converts an 8-character numeric string of format YYYYMMDD
"RTN","ECXUTL",89,0)
 ;to a FM external format date
"RTN","ECXUTL",90,0)
 ;
"RTN","ECXUTL",91,0)
 ;   input
"RTN","ECXUTL",92,0)
 ;   ECXDATE = YYYYMMDD string (required)
"RTN","ECXUTL",93,0)
 ;   output
"RTN","ECXUTL",94,0)
 ;   ECXDATEX = FM external format date;
"RTN","ECXUTL",95,0)
 ;              SEP 12, 1997
"RTN","ECXUTL",96,0)
 ;   error code
"RTN","ECXUTL",97,0)
 ;   if input problem, then "000000" returned
"RTN","ECXUTL",98,0)
 ;
"RTN","ECXUTL",99,0)
 N Y,%DT,CENTURY,FMCENT,ECXDATEX
"RTN","ECXUTL",100,0)
 ;
"RTN","ECXUTL",101,0)
 ;error checks
"RTN","ECXUTL",102,0)
 I +ECXDATE'=ECXDATE S ECXDATEX="000000" Q ECXDATEX
"RTN","ECXUTL",103,0)
 I $L(ECXDATE)'=8 S ECXDATEX="000000" Q ECXDATEX
"RTN","ECXUTL",104,0)
 I +$E(ECXDATE,7,8)>31 S ECXDATEX="000000" Q ECXDATEX
"RTN","ECXUTL",105,0)
 ;
"RTN","ECXUTL",106,0)
 S CENTURY=$E(ECXDATE,1,2)
"RTN","ECXUTL",107,0)
 S FMCENT=CENTURY-17
"RTN","ECXUTL",108,0)
 S Y=FMCENT_$E(ECXDATE,3,8) D DD^%DT S ECXDATEX=Y
"RTN","ECXUTL",109,0)
 ;
"RTN","ECXUTL",110,0)
 ;error checks
"RTN","ECXUTL",111,0)
 I $L(ECXDATEX)'=12 S ECXDATEX="000000"
"RTN","ECXUTL",112,0)
 I "JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC"'[$E(ECXDATEX,1,3) S ECXDATEX="000000"
"RTN","ECXUTL",113,0)
 Q ECXDATEX
"RTN","ECXUTL",114,0)
 ;
"RTN","ECXUTL",115,0)
ECXDOB(ECXFMDT) ;extrinsic function
"RTN","ECXUTL",116,0)
 ;converts a FM internal format date or date/time to a 6-character string
"RTN","ECXUTL",117,0)
 ;if ecxfmdt is null, the function returns 19420101
"RTN","ECXUTL",118,0)
 ;   input
"RTN","ECXUTL",119,0)
 ;   ECXFMDT = date or date/time (required); 
"RTN","ECXUTL",120,0)
 ;             must be valid FM internal format 
"RTN","ECXUTL",121,0)
 ;   output
"RTN","ECXUTL",122,0)
 ;   ECXDOB = YYYYMMDD string (required);
"RTN","ECXUTL",123,0)
 ;            defaults to 19420101
"RTN","ECXUTL",124,0)
 ;
"RTN","ECXUTL",125,0)
 N MONTH,YEAR,CENTURY,DAY,ECXDOB
"RTN","ECXUTL",126,0)
 ;only consider date portion
"RTN","ECXUTL",127,0)
 S ECXFMDT=$P(ECXFMDT,".",1)
"RTN","ECXUTL",128,0)
 ;special case where ecxfmdt is null
"RTN","ECXUTL",129,0)
 I ECXFMDT="" S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",130,0)
 ;error checks - return default
"RTN","ECXUTL",131,0)
 I +ECXFMDT'=ECXFMDT S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",132,0)
 I $L(ECXFMDT)<7 S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",133,0)
 I +ECXFMDT>DT S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",134,0)
 ;default to 1st day of month
"RTN","ECXUTL",135,0)
 S DAY=$E(ECXFMDT,6,7) S:DAY="00"!(+DAY>31) DAY="01"
"RTN","ECXUTL",136,0)
 ;default to 1st month of year
"RTN","ECXUTL",137,0)
 S MONTH=$E(ECXFMDT,4,5) S:MONTH="00"!(+MONTH>12) MONTH="01",DAY="01"
"RTN","ECXUTL",138,0)
 S YEAR=$E(ECXFMDT,2,3)
"RTN","ECXUTL",139,0)
 S CENTURY=$E(ECXFMDT,1)+17
"RTN","ECXUTL",140,0)
 S ECXDOB=CENTURY_YEAR_MONTH_DAY
"RTN","ECXUTL",141,0)
 Q ECXDOB
"RTN","ECXUTL",142,0)
 ;
"RTN","ECXUTL",143,0)
ECXTIME(ECXFMDT) ;extrinsic function
"RTN","ECXUTL",144,0)
 ;converts Fileman internal date/time to 6-character time string
"RTN","ECXUTL",145,0)
 ;format HHMMSS
"RTN","ECXUTL",146,0)
 ;
"RTN","ECXUTL",147,0)
 ;   input
"RTN","ECXUTL",148,0)
 ;   ECXFMDT = date or date/time (required); 
"RTN","ECXUTL",149,0)
 ;             must be valid FM internal format
"RTN","ECXUTL",150,0)
 ;   output
"RTN","ECXUTL",151,0)
 ;   ECXTIME = 6-character numeric string;
"RTN","ECXUTL",152,0)
 ;             format HHMMSS; string length always 6
"RTN","ECXUTL",153,0)
 ;
"RTN","ECXUTL",154,0)
 N J,JJ,TIME,HH,MM,SS,ECXTIME
"RTN","ECXUTL",155,0)
 ;if any non-numerics, set default
"RTN","ECXUTL",156,0)
 I +ECXFMDT'=ECXFMDT S ECXTIME="000300" Q ECXTIME
"RTN","ECXUTL",157,0)
 ;use only time portion of fileman internal format
"RTN","ECXUTL",158,0)
 S TIME=$P(ECXFMDT,".",2),TIME=$E(TIME,1,6)
"RTN","ECXUTL",159,0)
 ;if time unknown, set default
"RTN","ECXUTL",160,0)
 I TIME="" S ECXTIME="000300" Q ECXTIME
"RTN","ECXUTL",161,0)
 ;be sure time is 6 characters
"RTN","ECXUTL",162,0)
 S TIME=$$LJ^XLFSTR(TIME,6,0)
"RTN","ECXUTL",163,0)
 ;error checks -- set default
"RTN","ECXUTL",164,0)
 S HH=$E(TIME,1,2),MM=$E(TIME,3,4),SS=$E(TIME,5,6)
"RTN","ECXUTL",165,0)
 I +HH>23 S ECXTIME="000300" Q ECXTIME
"RTN","ECXUTL",166,0)
 I +MM>59 S MM="59"
"RTN","ECXUTL",167,0)
 I +SS>59 S SS="59"
"RTN","ECXUTL",168,0)
 S ECXTIME=HH_MM_SS
"RTN","ECXUTL",169,0)
 Q ECXTIME
"RTN","ECXUTL",170,0)
 ;
"RTN","ECXUTL",171,0)
ECXTIMEX(ECXTIME,ECXMIL) ;extrinsic function
"RTN","ECXUTL",172,0)
 ;converts a 6-character time string to external, user readable format
"RTN","ECXUTL",173,0)
 ;used as output transform for time fields in many dss extract files
"RTN","ECXUTL",174,0)
 ;   input
"RTN","ECXUTL",175,0)
 ;   ECXTIME = 6-character numeric string (required); 
"RTN","ECXUTL",176,0)
 ;   ECXMIL = if "1", then return military time (optional)          
"RTN","ECXUTL",177,0)
 ;   output
"RTN","ECXUTL",178,0)
 ;   ECXTIMEX = character string;
"RTN","ECXUTL",179,0)
 ;              if ECXMIL=1, format HH:MM:SS
"RTN","ECXUTL",180,0)
 ;              otherwise, hours:mins AM/PM
"RTN","ECXUTL",181,0)
 ;   error code
"RTN","ECXUTL",182,0)
 ;   if input problem, then "000000" returned
"RTN","ECXUTL",183,0)
 ;              
"RTN","ECXUTL",184,0)
 N TIME,HH,MM,SS,ECXTIMEX,J,JJ
"RTN","ECXUTL",185,0)
 ;error checks
"RTN","ECXUTL",186,0)
 I $L(ECXTIME)'=6 S ECXTIMEX="000000" Q ECXTIMEX
"RTN","ECXUTL",187,0)
 F J=1:1:6 S JJ=$E(ECXTIME,J) I $A(JJ)<48!($A(JJ)>57) S ECXTIMEX="000000" Q
"RTN","ECXUTL",188,0)
 I $D(ECXTIMEX) Q ECXTIMEX
"RTN","ECXUTL",189,0)
 S HH=$E(ECXTIME,1,2),MM=$E(ECXTIME,3,4),SS=$E(ECXTIME,5,6)
"RTN","ECXUTL",190,0)
 I +HH>23!(+MM>59)!(+SS>59) S ECXTIMEX="000000" Q ECXTIMEX
"RTN","ECXUTL",191,0)
 ;if ecxmil=1, return military time
"RTN","ECXUTL",192,0)
 I $G(ECXMIL) S ECXTIMEX=HH_":"_MM_":"_SS Q ECXTIMEX
"RTN","ECXUTL",193,0)
 ;otherwise, use am/pm format
"RTN","ECXUTL",194,0)
 S X="0."_ECXTIME
"RTN","ECXUTL",195,0)
 S X=$E($P(X,".",2)_"0000",1,4),%=X>1159 S:X>1259 X=X-1200
"RTN","ECXUTL",196,0)
 S X=X\100_":"_$E(X#100+100,2,3)_" "_$E("AP",%+1)_"M"
"RTN","ECXUTL",197,0)
 S ECXTIMEX=X
"RTN","ECXUTL",198,0)
 Q ECXTIMEX
"RTN","ECXUTL",199,0)
 ;
"RTN","ECXUTL",200,0)
AOIRPOW(ECXDFN,ECXAIP) ;get data on ao, ir, pow status
"RTN","ECXUTL",201,0)
 ;
"RTN","ECXUTL",202,0)
 ;   input
"RTN","ECXUTL",203,0)
 ;   ECXDFN = ien in file #2 (required)
"RTN","ECXUTL",204,0)
 ;   ECXAIP = array for returned data (required)
"RTN","ECXUTL",205,0)
 ;            (passed by reference)
"RTN","ECXUTL",206,0)
 ;
"RTN","ECXUTL",207,0)
 ;   output
"RTN","ECXUTL",208,0)
 ;   ECXAIP("AO") = agent orange status
"RTN","ECXUTL",209,0)
 ;   ECXAIP("IR") = ion. radiation status
"RTN","ECXUTL",210,0)
 ;   ECXAIP("POW") = pow status
"RTN","ECXUTL",211,0)
 ;   ECXAIP("POWL") = pow location/period
"RTN","ECXUTL",212,0)
 ;
"RTN","ECXUTL",213,0)
 N J
"RTN","ECXUTL",214,0)
 S ECXAIP("AO")="",ECXAIP("IR")="",ECXAIP("POW")="",ECXAIP("POWL")=""
"RTN","ECXUTL",215,0)
 S ECXAIP("AO")=$P($G(^DPT(ECXDFN,.321)),"^",2),ECXAIP("IR")=$P($G(^(.321)),"^",3)
"RTN","ECXUTL",216,0)
 S ECXAIP("POW")=$P($G(^DPT(ECXDFN,.52)),"^",5),ECXAIP("POWL")=$P($G(^(.52)),"^",6)
"RTN","ECXUTL",217,0)
 F J="AO","IR","POW" I ECXAIP(J)="" S ECXAIP(J)="U"
"RTN","ECXUTL",218,0)
 I ECXAIP("POWL"),ECXAIP("POW")'="Y" S ECXAIP("POWL")=""
"RTN","ECXUTL",219,0)
 Q
"RTN","ECXUTLA")
0^77^B48040435
"RTN","ECXUTLA",1,0)
ECXUTLA ;ALB/JAP - Utilities for Audit Reports ;Sep 25, 1997
"RTN","ECXUTLA",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXUTLA",3,0)
 ;
"RTN","ECXUTLA",4,0)
AUDIT(ECXHEAD,ECXERR,ECXARRAY,ECXAUD) ;set audit report parameters
"RTN","ECXUTLA",5,0)
 ;   input
"RTN","ECXUTLA",6,0)
 ;   ECXHEAD  = extract HEADER CODE (required)
"RTN","ECXUTLA",7,0)
 ;              (from file #727.1, field #7)
"RTN","ECXUTLA",8,0)
 ;   ECXERR   = passed-by-reference variable (required)
"RTN","ECXUTLA",9,0)
 ;   ECXARRAY = passed-by-reference array (required)
"RTN","ECXUTLA",10,0)
 ;   ECXAUD   = 0/1 (optional)
"RTN","ECXUTLA",11,0)
 ;              0 --> extract audit (default)
"RTN","ECXUTLA",12,0)
 ;              1 --> SAS audit
"RTN","ECXUTLA",13,0)
 ;   output
"RTN","ECXUTLA",14,0)
 ;   ECXARRAY = array of audit parameters
"RTN","ECXUTLA",15,0)
 ;              ECXARRAY("DEF")     = ien of extract type in file #727.1
"RTN","ECXUTLA",16,0)
 ;              ECXARRAY("TYPE")    = print name for extract; field #7 in file #727.1
"RTN","ECXUTLA",17,0)
 ;              ECXARRAY("EXTRACT") = ien of extract in file #727
"RTN","ECXUTLA",18,0)
 ;              ECXARRAY("START")   = start date for extract audit
"RTN","ECXUTLA",19,0)
 ;              ECXARRAY("END")     = end date for extract audit
"RTN","ECXUTLA",20,0)
 ;              ECXARRAY("ERUN")    = date on which extract was generated
"RTN","ECXUTLA",21,0)
 ;   error CODE
"RTN","ECXUTLA",22,0)
 ;   ECXERR   = 1, if input problem occurs
"RTN","ECXUTLA",23,0)
 ;              0, otherwise
"RTN","ECXUTLA",24,0)
 ;
"RTN","ECXUTLA",25,0)
 N X,Y,N,DA,DIC,DIQ,DIR,DTOUT,DUOUT,DIRUT,ECXDA,ECXTYPE,ECXSTART,ECXEND,ECXARR
"RTN","ECXUTLA",26,0)
 S ECXERR=0
"RTN","ECXUTLA",27,0)
 S N=$O(^ECX(727.1,"C",ECXHEAD,"")) S:N="" ECXERR=1
"RTN","ECXUTLA",28,0)
 Q:ECXERR
"RTN","ECXUTLA",29,0)
 S DIC="^ECX(727.1,",DIC(0)="NZ",X=N
"RTN","ECXUTLA",30,0)
 D ^DIC I Y=-1 S ECXERR=1 Q
"RTN","ECXUTLA",31,0)
 S ECXTYPE=$P(Y(0),U,7)_U_+Y K X,Y,DIC
"RTN","ECXUTLA",32,0)
 I $G(ECXAUD)=1,ECXHEAD'="DEN",ECXHEAD'="PRE",ECXHEAD'="RAD",ECXHEAD'="SUR" S ECXERR=1
"RTN","ECXUTLA",33,0)
 Q:ECXERR
"RTN","ECXUTLA",34,0)
 S DIC="^ECX(727,",DIC(0)="AEMQ",DIC("S")="I $P(^(0),U,3)=$P(ECXTYPE,U),'$D(^(""PURG""))"
"RTN","ECXUTLA",35,0)
 D ^DIC I Y=-1!($G(DUOUT))!($G(DTOUT)) S ECXERR=1 Q
"RTN","ECXUTLA",36,0)
 S DIC="^ECX(727,",(DA,ECXDA)=+Y,DR=".01;1;2;3;4;5;300",DIQ="ECXARR"
"RTN","ECXUTLA",37,0)
 D EN^DIQ1
"RTN","ECXUTLA",38,0)
 W !!,?5,"Extract:      ",ECXARR(727,ECXDA,2)," #",ECXDA
"RTN","ECXUTLA",39,0)
 W !!,?5,"Start date:   ",ECXARR(727,ECXDA,3)
"RTN","ECXUTLA",40,0)
 W !,?5,"End date:     ",ECXARR(727,ECXDA,4)
"RTN","ECXUTLA",41,0)
 W !,?5,"# of Records: ",ECXARR(727,ECXDA,5)
"RTN","ECXUTLA",42,0)
 ;if transmit date exists, then ask user if audit still needed
"RTN","ECXUTLA",43,0)
 I $L(ECXARR(727,ECXDA,300))>0 D
"RTN","ECXUTLA",44,0)
 .W !!,?5,"The extract which you have chosen to audit"
"RTN","ECXUTLA",45,0)
 .W !,?5,"was transmitted to AAC/DSS on ",ECXARR(727,ECXDA,300),".",!
"RTN","ECXUTLA",46,0)
 .S DIR(0)="Y",DIR("A")="Do you want to continue with this audit report",DIR("B")="NO" D ^DIR
"RTN","ECXUTLA",47,0)
 .S:$G(DIRUT) ECXERR=1 S:Y=0 ECXERR=1
"RTN","ECXUTLA",48,0)
 Q:ECXERR
"RTN","ECXUTLA",49,0)
 ;setup the return array
"RTN","ECXUTLA",50,0)
 S ECXARRAY("EXTRACT")=ECXARR(727,ECXDA,.01),ECXARRAY("TYPE")=$P(ECXTYPE,U),ECXARRAY("DEF")=$P(ECXTYPE,U,2)
"RTN","ECXUTLA",51,0)
 S ECXARRAY("START")=ECXARR(727,ECXDA,3),ECXARRAY("END")=ECXARR(727,ECXDA,4),ECXARRAY("ERUN")=ECXARR(727,ECXDA,1)
"RTN","ECXUTLA",52,0)
 ;determine date range only for extract audit reports
"RTN","ECXUTLA",53,0)
 I $G(ECXAUD)=0 D
"RTN","ECXUTLA",54,0)
 .S ECXSTART=ECXARRAY("START"),ECXEND=ECXARRAY("END") D RANGE^ECXUTLA(.ECXSTART,.ECXEND,.ECXERR)
"RTN","ECXUTLA",55,0)
 .I ECXERR K ECXARRAY
"RTN","ECXUTLA",56,0)
 .Q:ECXERR
"RTN","ECXUTLA",57,0)
 .S ECXARRAY("START")=ECXSTART,ECXARRAY("END")=ECXEND
"RTN","ECXUTLA",58,0)
 Q
"RTN","ECXUTLA",59,0)
 ;
"RTN","ECXUTLA",60,0)
RANGE(ECXSTART,ECXEND,ECXERR) ;determine date range for extract audit report
"RTN","ECXUTLA",61,0)
 ;   input
"RTN","ECXUTLA",62,0)
 ;   ECXSTART = start date of extract in file #727 (required)
"RTN","ECXUTLA",63,0)
 ;              passed by reference
"RTN","ECXUTLA",64,0)
 ;   ECXEND   = end date of extract in file #727 (required)
"RTN","ECXUTLA",65,0)
 ;              passed by reference
"RTN","ECXUTLA",66,0)
 ;   ECXERR   = passed by reference (required)
"RTN","ECXUTLA",67,0)
 ;   output
"RTN","ECXUTLA",68,0)
 ;   ECXSTART = user selected start date
"RTN","ECXUTLA",69,0)
 ;   ECXEND   = user selected end date
"RTN","ECXUTLA",70,0)
 ;   error CODE
"RTN","ECXUTLA",71,0)
 ;   ECXERR   = 1, if input problem occurs
"RTN","ECXUTLA",72,0)
 ;              0, otherwise
"RTN","ECXUTLA",73,0)
 ;
"RTN","ECXUTLA",74,0)
 ;
"RTN","ECXUTLA",75,0)
 ;convert dates to internal format
"RTN","ECXUTLA",76,0)
 N DATEA,DATEB,X,Y,%DT,DTOUT,OUT
"RTN","ECXUTLA",77,0)
 S (ECXERR,OUT)=0
"RTN","ECXUTLA",78,0)
 S X=ECXSTART D ^%DT S DATEA=Y
"RTN","ECXUTLA",79,0)
 S X=ECXEND D ^%DT S DATEB=Y
"RTN","ECXUTLA",80,0)
 ;allow user to select start date
"RTN","ECXUTLA",81,0)
 ;can't be less than ecxstart or greater than ecxend
"RTN","ECXUTLA",82,0)
 W !!,?5,"You can narrow the date range, if you wish.",!
"RTN","ECXUTLA",83,0)
 W !,?5,"The Start Date can't be earlier than ",ECXSTART,","
"RTN","ECXUTLA",84,0)
 W !,?5,"or later than ",ECXEND,".",!
"RTN","ECXUTLA",85,0)
 F  Q:OUT!ECXERR  D
"RTN","ECXUTLA",86,0)
 .S %DT="AEX",%DT("A")="Select Start Date: ",%DT("B")=ECXSTART,%DT(0)=DATEA
"RTN","ECXUTLA",87,0)
 .D ^%DT S:Y=-1 ECXERR=1 S:$G(DTOUT) ECXERR=1
"RTN","ECXUTLA",88,0)
 .Q:ECXERR
"RTN","ECXUTLA",89,0)
 .I Y>DATEB D  Q
"RTN","ECXUTLA",90,0)
 ..W !,?5,"But that's later than ",ECXEND,"...try again.",!
"RTN","ECXUTLA",91,0)
 .S DATEA=Y,OUT=1
"RTN","ECXUTLA",92,0)
 I ECXERR K ECXSTART,ECXEND
"RTN","ECXUTLA",93,0)
 Q:ECXERR
"RTN","ECXUTLA",94,0)
 S Y=DATEA D DD^%DT S ECXSTART=Y
"RTN","ECXUTLA",95,0)
 ;allow user to select end date
"RTN","ECXUTLA",96,0)
 ;can't be less than ecxstart or greater than ecxend
"RTN","ECXUTLA",97,0)
 W !!,?5,"The End Date can't be earlier than ",ECXSTART
"RTN","ECXUTLA",98,0)
 W !,?5,"(the Start Date you selected), or later than ",ECXEND,".",!
"RTN","ECXUTLA",99,0)
 S OUT=0
"RTN","ECXUTLA",100,0)
 F  Q:OUT!ECXERR  D
"RTN","ECXUTLA",101,0)
 .S %DT="AEX",%DT("A")="Select End Date: ",%DT("B")=ECXEND,%DT(0)=-DATEB
"RTN","ECXUTLA",102,0)
 .D ^%DT S:Y=-1 ECXERR=1 S:$G(DTOUT) ECXERR=1
"RTN","ECXUTLA",103,0)
 .Q:ECXERR
"RTN","ECXUTLA",104,0)
 .I Y<DATEA D  Q
"RTN","ECXUTLA",105,0)
 ..W !,?5,"But that's earlier than ",ECXSTART,"...try again.",!
"RTN","ECXUTLA",106,0)
 .S DATEB=Y,OUT=1
"RTN","ECXUTLA",107,0)
 I ECXERR K ECXSTART,ECXEND
"RTN","ECXUTLA",108,0)
 Q:ECXERR
"RTN","ECXUTLA",109,0)
 S Y=DATEB D DD^%DT S ECXEND=Y
"RTN","ECXUTLA",110,0)
 Q
"RTN","ECXUTLA",111,0)
 ;
"RTN","ECXUTLA",112,0)
DEVICE(ZTRTN,ZTDESC,ZTSAVE) ;get print device and optionally task to background
"RTN","ECXUTLA",113,0)
 ;   input
"RTN","ECXUTLA",114,0)
 ;   ZTRTN  = line^routine; task entry point (required)
"RTN","ECXUTLA",115,0)
 ;            variable for %ZTLOAD
"RTN","ECXUTLA",116,0)
 ;   ZTDESC = task description (required)
"RTN","ECXUTLA",117,0)
 ;            variable for %ZTLOAD
"RTN","ECXUTLA",118,0)
 ;   ZTSAVE = array; passed by reference (required)
"RTN","ECXUTLA",119,0)
 ;            variables for %ZTLOAD
"RTN","ECXUTLA",120,0)
 ;   output
"RTN","ECXUTLA",121,0)
 ;   ZTSAVE = returns ZTSAVE("POP"),ZTSAVE("ZTSK")
"RTN","ECXUTLA",122,0)
 ;
"RTN","ECXUTLA",123,0)
 N POP,ZTSK
"RTN","ECXUTLA",124,0)
 S ZTSAVE("POP")=0,ZTSAVE("ZTSK")=0
"RTN","ECXUTLA",125,0)
 ;return ztsave("pop")=1 and quit if required input not available
"RTN","ECXUTLA",126,0)
 I '$L(ZTRTN)!('$L(ZTDESC))!('$D(ZTSAVE)) S ZTSAVE("POP")=1 Q
"RTN","ECXUTLA",127,0)
 ;get print device
"RTN","ECXUTLA",128,0)
 K IO("Q") S %ZIS="QM" D ^%ZIS
"RTN","ECXUTLA",129,0)
 S ZTSAVE("POP")=POP
"RTN","ECXUTLA",130,0)
 I POP D
"RTN","ECXUTLA",131,0)
 .W !,"No device selected...exiting.",!
"RTN","ECXUTLA",132,0)
 Q:POP
"RTN","ECXUTLA",133,0)
 I $D(IO("Q")) D
"RTN","ECXUTLA",134,0)
 .S ZTSAVE("ZTREQ")="@"
"RTN","ECXUTLA",135,0)
 .D ^%ZTLOAD
"RTN","ECXUTLA",136,0)
 .I $G(ZTSK)>0 D
"RTN","ECXUTLA",137,0)
 ..W !,"Request queued as Task #",ZTSK,".",!
"RTN","ECXUTLA",138,0)
 ..S ZTSAVE("ZTSK")=ZTSK
"RTN","ECXUTLA",139,0)
 ..S ZTSAVE("POP")=0
"RTN","ECXUTLA",140,0)
 .I '$G(ZTSK) D
"RTN","ECXUTLA",141,0)
 ..W !,"Request to queue cancelled...exiting.",!
"RTN","ECXUTLA",142,0)
 ..S ZTSAVE("ZTSK")=0
"RTN","ECXUTLA",143,0)
 ..S ZTSAVE("POP")=1
"RTN","ECXUTLA",144,0)
 Q
"RTN","ECXUTLA",145,0)
 ;
"RTN","ECXUTLA",146,0)
WARDS(ECXALL,ECXDIV) ;get wards for selected divisions
"RTN","ECXUTLA",147,0)
 ;   input
"RTN","ECXUTLA",148,0)
 ;   ECXALL = 1/0 (optional)
"RTN","ECXUTLA",149,0)
 ;            1==> user selected all divisions OR
"RTN","ECXUTLA",150,0)
 ;                 facility is non-divisional
"RTN","ECXUTLA",151,0)
 ;            0==> user selected some divisions
"RTN","ECXUTLA",152,0)
 ;            if ECXALL not defined, then assume 1
"RTN","ECXUTLA",153,0)
 ;   ECXDIV = array of divisions selected (optional)
"RTN","ECXUTLA",154,0)
 ;            passed by reference array containing
"RTN","ECXUTLA",155,0)
 ;            selected divisions;
"RTN","ECXUTLA",156,0)
 ;            if ECXALL=1, then ECXDIV array isn't
"RTN","ECXUTLA",157,0)
 ;            required; information for all wards will be obtained
"RTN","ECXUTLA",158,0)
 ;            if ECXALL=0, then only wards for divisions in ECXDIV
"RTN","ECXUTLA",159,0)
 ;   output
"RTN","ECXUTLA",160,0)
 ;   ^TMP($J,"ECXWARD", contains ward name, division, g&l order
"RTN","ECXUTLA",161,0)
 ;   ^TMP($J,"ECXORDER", contains ward grouping info
"RTN","ECXUTLA",162,0)
 ;
"RTN","ECXUTLA",163,0)
 N IEN,WARD,ORDX,NAME,NM,ORDER,DIV,HIEN,GROUP,DATA
"RTN","ECXUTLA",164,0)
 K ^TMP($J,"ECXWARD"),^TMP($J,"ECXORDER")
"RTN","ECXUTLA",165,0)
 ;if ecxall not here, then set ecxall=1
"RTN","ECXUTLA",166,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXUTLA",167,0)
 S ORDX=0,NM=""
"RTN","ECXUTLA",168,0)
 F  S NM=$O(^DIC(42,"B",NM)) Q:NM=""  S IEN=$O(^DIC(42,"B",NM,"")) D
"RTN","ECXUTLA",169,0)
 .S DIV=+$P(^DIC(42,IEN,0),U,11) Q:DIV=0
"RTN","ECXUTLA",170,0)
 .I ECXALL=0,'$D(ECXDIV(DIV)) Q
"RTN","ECXUTLA",171,0)
 .S (NAME,ORDER)="",NAME=$P(^DIC(42,IEN,0),U,1),ORDER=+$P($G(^DIC(42,IEN,"ORDER")),U,1)
"RTN","ECXUTLA",172,0)
 .;'unordered' ward is probably inactive, but get basic data anyway
"RTN","ECXUTLA",173,0)
 .I ORDER=0 S ORDX=ORDX+1,ORDER="99999"_ORDX,ORDER=+ORDER
"RTN","ECXUTLA",174,0)
 .;get this ward's ien in file #44; file #727.802 & #727.808 use pointers to file #44
"RTN","ECXUTLA",175,0)
 .S HIEN=+$P($G(^DIC(42,IEN,44)),U,1) Q:HIEN=0
"RTN","ECXUTLA",176,0)
 .;if this is last ward in group, then get the group name
"RTN","ECXUTLA",177,0)
 .K GROUP I $D(^DIC(42,IEN,1,1,0)) S GROUP=$P(^DIC(42,IEN,1,1,0),U,1) I GROUP="" K GROUP
"RTN","ECXUTLA",178,0)
 .S ^TMP($J,"ECXWARD",HIEN)=ORDER_U_NAME_U_DIV_U_IEN
"RTN","ECXUTLA",179,0)
 .I $D(GROUP) S ^TMP($J,"ECXWARD",HIEN,1)=GROUP
"RTN","ECXUTLA",180,0)
 ;after all wards in file #42 are processed, arrange by g&l order
"RTN","ECXUTLA",181,0)
 S HIEN=0
"RTN","ECXUTLA",182,0)
 F  S HIEN=$O(^TMP($J,"ECXWARD",HIEN)) Q:HIEN=""  S DATA=^TMP($J,"ECXWARD",HIEN) D
"RTN","ECXUTLA",183,0)
 .S ORDER=$P(DATA,U,1),NAME=$P(DATA,U,2),DIV=$P(DATA,U,3)
"RTN","ECXUTLA",184,0)
 .S ^TMP($J,"ECXORDER",DIV,ORDER)=HIEN_U_NAME_U
"RTN","ECXUTLA",185,0)
 .I $D(^TMP($J,"ECXWARD",HIEN,1)) S GROUP=^(1),^TMP($J,"ECXORDER",DIV,ORDER,1)=1_U_GROUP_U
"RTN","ECXUTLA",186,0)
 Q
"RTN","ECXUTLA",187,0)
 ;
"RTN","ECXUTLA",188,0)
SASHEAD(ECXFL,ECXHEAD,ECXDIV,ECXARRAY,ECXPG,ECXTAB) ;header and page control
"RTN","ECXUTLA",189,0)
 ;
"RTN","ECXUTLA",190,0)
 ;   ECXFL   = feeder location (division) (required)
"RTN","ECXUTLA",191,0)
 ;   ECXHEAD = extract header from file #727.1 (required)               
"RTN","ECXUTLA",192,0)
 ;   ECXDIV  = array of divisions selected (required)
"RTN","ECXUTLA",193,0)
 ;   ECXPG   = page number (required)
"RTN","ECXUTLA",194,0)
 ;   ECXTAB  = tab location;
"RTN","ECXUTLA",195,0)
 ;             allows for proper spacing in sub-header line (optional)
"RTN","ECXUTLA",196,0)
 ;
"RTN","ECXUTLA",197,0)
 N JJ,SS,LN
"RTN","ECXUTLA",198,0)
 S $P(LN,"-",80)=""
"RTN","ECXUTLA",199,0)
 I $G(ECXTAB)="" S ECXTAB=40
"RTN","ECXUTLA",200,0)
 I $E(IOST)="C" D
"RTN","ECXUTLA",201,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTLA",202,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUTLA",203,0)
 Q:QFLG
"RTN","ECXUTLA",204,0)
 W:$Y!($E(IOST)="C") @IOF S ECXPG=ECXPG+1
"RTN","ECXUTLA",205,0)
 W !,"SAS Audit Report for "_ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract"
"RTN","ECXUTLA",206,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXUTLA",207,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXUTLA",208,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXUTLA",209,0)
 I $D(ECXDIV(ECXFL)) W !,"Division/Site:        "_$P(ECXDIV(ECXFL),U,2)_" ("_ECXFL_")",?68,"Page: "_ECXPG
"RTN","ECXUTLA",210,0)
 I '$D(ECXDIV(ECXFL)) W !,"Division/Site:        "_"Unknown",?68,"Page: "_ECXPG
"RTN","ECXUTLA",211,0)
 W !!,"Feeder Location",?ECXTAB,"Feeder Key",?68,"Quantity"
"RTN","ECXUTLA",212,0)
 W !,LN,!
"RTN","ECXUTLA",213,0)
 Q
"RTN","ECXWRD")
0^59^B9957323
"RTN","ECXWRD",1,0)
ECXWRD ;BIR/CML-Print Active Wards for Fiscal Year ; [ 11/25/96  11:55 AM ]
"RTN","ECXWRD",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXWRD",3,0)
EN ;entry point from option
"RTN","ECXWRD",4,0)
 S QFLG=1 D NOW^%DTC S YR=$E(%,2,3),MON=$E(%,4,5) S FY=$S(MON<10:YR,1:YR+1)
"RTN","ECXWRD",5,0)
 W !!,"This option prints a list of all MAS wards that were active at any time",!,"during FY",FY,".  The list is sorted by Medical Center Division and displays",!,"the pointer to the Hospital Location file (#44)."
"RTN","ECXWRD",6,0)
DEV W !!,"The right margin for this report is 80.",!!
"RTN","ECXWRD",7,0)
 K ZTSAVE S ZTSAVE("FY")=""
"RTN","ECXWRD",8,0)
 D EN^XUTMDEVQ("START^ECXWRD","DSS - Print Active Wards for Fiscal Year",.ZTSAVE) I 'POP Q
"RTN","ECXWRD",9,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","ECXWRD",10,0)
 G QUIT
"RTN","ECXWRD",11,0)
START ;
"RTN","ECXWRD",12,0)
 K ^TMP("ECXWRD",$J)
"RTN","ECXWRD",13,0)
 S ECFYB="2"_FY-1_"1000",ECFYE="2"_FY_"1001"
"RTN","ECXWRD",14,0)
 S ECWD=0 F  S ECWD=$O(^DIC(42,ECWD)) Q:'ECWD  I $D(^DIC(42,ECWD,0)) S EC=^(0) D CHK I X=0 S ECLOC=+$G(^DIC(42,ECWD,44)) I $D(^SC(ECLOC,0)) S ECLOCN=$P(^(0),"^") D
"RTN","ECXWRD",15,0)
 .S ECDIV=$P(EC,"^",11),ECDIVN=$S(ECDIV:$P(^DG(40.8,ECDIV,0),"^"),1:"UNSPECIFIED DIVISION") S ^TMP("ECXWRD",$J,ECDIVN,ECLOCN)=ECLOC
"RTN","ECXWRD",16,0)
PRT S (PG,QFLG)=0,$P(LN,"-",81)="" D NOW^%DTC S Y=$E(%,1,12) X ^DD("DD") S HDT=Y D HDR
"RTN","ECXWRD",17,0)
 I '$D(^TMP("ECXWRD",$J)) W !!,"NO DATA FOUND FOR THIS REPORT" G QUIT
"RTN","ECXWRD",18,0)
 S ECDIV="" F  S ECDIV=$O(^TMP("ECXWRD",$J,ECDIV)) Q:ECDIV=""  Q:QFLG  D:$Y+4>IOSL HDR Q:QFLG  W !!,"DIVISION: ",ECDIV S ECLOC="" F  S ECLOC=$O(^TMP("ECXWRD",$J,ECDIV,ECLOC)) Q:ECLOC=""  Q:QFLG  D
"RTN","ECXWRD",19,0)
 .D:$Y+4>IOSL HDR Q:QFLG  W !?5,ECLOC,?45,$J(^TMP("ECXWRD",$J,ECDIV,ECLOC),5)
"RTN","ECXWRD",20,0)
QUIT ;
"RTN","ECXWRD",21,0)
 I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECXWRD",22,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXWRD",23,0)
 K %,%H,%I,EC,ECDIV,ECDIVN,ECFYB,ECFYE,ECLOC,ECLOCN,ECWD,FY,HDT,JJ,LN,MON,PG,QFLG,SS,YR,X,Y,ZTSK
"RTN","ECXWRD",24,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","ECXWRD",25,0)
CHK ;has this ward been active?  (1=inactive, 0=active)
"RTN","ECXWRD",26,0)
 ;input:    ECWD = IFN of WARD LOCATION file
"RTN","ECXWRD",27,0)
 ;         ECFYB = first day of fiscal year.
"RTN","ECXWRD",28,0)
 ;         ECFYE = last day of fiscal year
"RTN","ECXWRD",29,0)
 ;output:      X = 1 if inactive (out-of-service), 0 otherwise
"RTN","ECXWRD",30,0)
 ;
"RTN","ECXWRD",31,0)
 N ECX,ECY S X=1 Q:'$D(ECWD)  S ECY=ECFYB
"RTN","ECXWRD",32,0)
 I '$O(^DIC(42,ECWD,"OOS",0)) S X=0 Q
"RTN","ECXWRD",33,0)
 S ECX=+$O(^DIC(42,ECWD,"OOS","AINV",9999998.9-ECY)),ECX=$S($D(^DIC(42,ECWD,"OOS",+$O(^(+ECX,0)),0)):^(0),1:"")
"RTN","ECXWRD",34,0)
 I '$P(ECX,U,6) S X=0 Q
"RTN","ECXWRD",35,0)
 I $P(ECX,U,6),'$P(ECX,U,4) S X=1 Q
"RTN","ECXWRD",36,0)
 I $P(ECX,U,6),$P(ECX,U,4)<ECFYE S X=0 Q
"RTN","ECXWRD",37,0)
 S X=1
"RTN","ECXWRD",38,0)
 Q
"RTN","ECXWRD",39,0)
HDR ;HEADER
"RTN","ECXWRD",40,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXWRD",41,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXWRD",42,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"Active Wards for FY",FY,!,"Printed on ",HDT,!
"RTN","ECXWRD",43,0)
 W !?40,"HOSPITAL LOCATION",!?5,"WARD",?43,"FILE POINTER",!,LN
"RTN","ECXWRD",44,0)
 Q
"RTN","ECXXREV")
0^60^B3776703
"RTN","ECXXREV",1,0)
ECXXREV ;BIR/DMA-Status Report from the Extract Log ; [ 05/29/96  5:38 PM ]
"RTN","ECXXREV",2,0)
 ;;3.0;DSS EXTRACTS;;Dec 22, 1997
"RTN","ECXXREV",3,0)
EN ;entry point from option
"RTN","ECXXREV",4,0)
 S DIC=727,DIC(0)="AEQMZ" D ^DIC K DIC G END:Y<0 S EC=+Y,EC0=Y(0)
"RTN","ECXXREV",5,0)
 S %ZIS="Q" D ^%ZIS K %ZIS I $D(IO("Q")) S ZTSAVE("EC")="",ZTSAVE("EC0")="",ZTDESC="Extract log review",ZTRTN="START^ECXXREV" D ^%ZTLOAD G END
"RTN","ECXXREV",6,0)
START ;queued entry
"RTN","ECXXREV",7,0)
 D HDR
"RTN","ECXXREV",8,0)
 I $G(^ECX(727,EC,"TR"))="" W !,"Not transmitted" G END
"RTN","ECXXREV",9,0)
 W !,"Transmitted on ",$$FMTE^XLFDT(^("TR")) I '$O(^ECX(727,EC,1,0)) W "      All messages confirmed" G END
"RTN","ECXXREV",10,0)
 W !,"Unconfirmed message numbers:" F ECM=0:0 S ECM=$O(^ECX(727,EC,1,ECM)) Q:'ECM  W ?37,ECM,! I $Y+3>IOSL S DIR(0)="E" D:$E(IOST)="C" ^DIR Q:$E(IOST)="C"&('$G(Y))  D HDR W !,"Unconfirmed message numbers (cont): "
"RTN","ECXXREV",11,0)
END K DIR,EC,EC0,ECM,X,Y D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECXXREV",12,0)
 Q
"RTN","ECXXREV",13,0)
HDR W:$Y @IOF W !,"Extract Number  ",EC,"  for ",$P(EC0,"^",3),"  run on  ",$$FMTE^XLFDT($P(EC0,"^",2))
"RTN","ECXXREV",14,0)
 Q
"SEC","^DD",727.825,727.825,38,8.5)

"SEC","^DD",727.825,727.825,38,9)

"SEC","^DIC",727.2,727.2,0,"AUDIT")
@
"SEC","^DIC",727.2,727.2,0,"DD")
@
"SEC","^DIC",727.2,727.2,0,"DEL")
@
"SEC","^DIC",727.2,727.2,0,"LAYGO")
@
"SEC","^DIC",727.2,727.2,0,"RD")
@
"SEC","^DIC",727.2,727.2,0,"WR")
@
"VER")
8.0^21.0
"^DD",727,727,0)
FIELD^^300^16
"^DD",727,727,0,"DT")
2950731
"^DD",727,727,0,"ID",1)
W "   ",$E($P(^(0),U,2),4,5)_"-"_$E($P(^(0),U,2),6,7)_"-"_$E($P(^(0),U,2),2,3)
"^DD",727,727,0,"ID",2)
W "   ",$P(^(0),U,3)
"^DD",727,727,0,"IX","AB",727.0301,.01)

"^DD",727,727,0,"IX","AC",727,1)

"^DD",727,727,0,"IX","AD",727,2)

"^DD",727,727,0,"IX","AT",727,300)

"^DD",727,727,0,"IX","B",727,.01)

"^DD",727,727,0,"IX","C",727,2)

"^DD",727,727,0,"IX","D",727,2)

"^DD",727,727,0,"IX","E",727,6)

"^DD",727,727,0,"NM","DSS EXTRACT LOG")

"^DD",727,727,0,"PT",727,10)

"^DD",727,727,0,"PT",727.802,2)

"^DD",727,727,0,"PT",727.803,2)

"^DD",727,727,0,"PT",727.804,2)

"^DD",727,727,0,"PT",727.805,2)

"^DD",727,727,0,"PT",727.806,2)

"^DD",727,727,0,"PT",727.808,2)

"^DD",727,727,0,"PT",727.809,2)

"^DD",727,727,0,"PT",727.81,2)

"^DD",727,727,0,"PT",727.811,2)

"^DD",727,727,0,"PT",727.813,2)

"^DD",727,727,0,"PT",727.814,2)

"^DD",727,727,0,"PT",727.815,2)

"^DD",727,727,0,"PT",727.817,2)

"^DD",727,727,0,"PT",727.819,2)

"^DD",727,727,0,"PT",727.82,2)

"^DD",727,727,0,"PT",727.821,2)

"^DD",727,727,0,"PT",727.822,2)

"^DD",727,727,0,"PT",727.823,2)

"^DD",727,727,0,"PT",727.824,2)

"^DD",727,727,0,"PT",727.825,2)

"^DD",727,727,0,"PT",728.113,10)

"^DD",727,727,0,"PT",728.904,8)

"^DD",727,727,0,"VRPK")
DSS EXTRACTS
"^DD",727,727,.01,0)
RECORD NUMBER^RNJ9,0I^^0;1^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",727,727,.01,1,0)
^.1
"^DD",727,727,.01,1,1,0)
727^B
"^DD",727,727,.01,1,1,1)
S ^ECX(727,"B",$E(X,1,30),DA)=""
"^DD",727,727,.01,1,1,2)
K ^ECX(727,"B",$E(X,1,30),DA)
"^DD",727,727,.01,1,1,"DT")
2941101
"^DD",727,727,.01,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",727,727,.01,21,0)
^^2^2^2970501^^^
"^DD",727,727,.01,21,1,0)
The record numbers will be sequential and be reused at some point
"^DD",727,727,.01,21,2,0)
in the future.
"^DD",727,727,.01,"DT")
2970501
"^DD",727,727,1,0)
EXTRACT DATE^DI^^0;2^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",727,727,1,1,0)
^.1
"^DD",727,727,1,1,1,0)
727^AC
"^DD",727,727,1,1,1,1)
S ^ECX(727,"AC",$E(X,1,30),DA)=""
"^DD",727,727,1,1,1,2)
K ^ECX(727,"AC",$E(X,1,30),DA)
"^DD",727,727,1,21,0)
^^1^1^2911105^^
"^DD",727,727,1,21,1,0)
The date the DSS extract was run.
"^DD",727,727,1,"DT")
2910219
"^DD",727,727,2,0)
TYPE^FI^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>20!($L(X)<1) X
"^DD",727,727,2,1,0)
^.1
"^DD",727,727,2,1,1,0)
727^AD
"^DD",727,727,2,1,1,1)
S ^ECX(727,"AD",$E(X,1,30),DA)=""
"^DD",727,727,2,1,1,2)
K ^ECX(727,"AD",$E(X,1,30),DA)
"^DD",727,727,2,1,2,0)
727^C
"^DD",727,727,2,1,2,1)
S ^ECX(727,"C",$E(X,1,30),DA)=""
"^DD",727,727,2,1,2,2)
K ^ECX(727,"C",$E(X,1,30),DA)
"^DD",727,727,2,1,2,"DT")
2941101
"^DD",727,727,2,1,3,0)
727^D^MUMPS
"^DD",727,727,2,1,3,1)
S ^ECX(727,"D",$TR(X,"zxcvbnmasdfghjklqwertyuiop","ZXCVBNMASDFGHJKLQWERTYUIOP"),DA)=""
"^DD",727,727,2,1,3,2)
K ^ECX(727,"D",$TR(X,"zxcvbnmasdfghjklqwertyuiop","ZXCVBNMASDFGHJKLQWERTYUIOP"),DA)
"^DD",727,727,2,1,3,"%D",0)
^^1^1^2941101^
"^DD",727,727,2,1,3,"%D",1,0)
Upper case for lookup
"^DD",727,727,2,1,3,"DT")
2941101
"^DD",727,727,2,3)
Answer must be 1-20 characters in length.
"^DD",727,727,2,21,0)
^^2^2^2930810^^^^
"^DD",727,727,2,21,1,0)
The type of extract that was run.  Example: Admission for MAS Admission
"^DD",727,727,2,21,2,0)
extract.
"^DD",727,727,2,23,0)
^^1^1^2930810^
"^DD",727,727,2,23,1,0)
Taken from the variable ECPACK used in the extract routines.
"^DD",727,727,2,"DT")
2941101
"^DD",727,727,3,0)
START DATE/TIME^DI^^0;4^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",727,727,3,21,0)
^^1^1^2971107^^^^
"^DD",727,727,3,21,1,0)
The beginning date covered by the extract.
"^DD",727,727,3,"DT")
2910219
"^DD",727,727,4,0)
END DATE/TIME^DI^^0;5^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",727,727,4,21,0)
^^1^1^2911105^^^
"^DD",727,727,4,21,1,0)
The ending date covered by the extract.
"^DD",727,727,4,"DT")
2910219
"^DD",727,727,5,0)
NUMBER OF RECORDS^NJ6,0I^^0;6^K:+X'=X!(X>100000)!(X<0)!(X?.E1"."1N.N) X
"^DD",727,727,5,3)
Type a Number between 0 and 100000, 0 Decimal Digits
"^DD",727,727,5,21,0)
^^1^1^2911112^^^^
"^DD",727,727,5,21,1,0)
The number of records included in this extract.
"^DD",727,727,5,"DT")
2910219
"^DD",727,727,6,0)
HEADER FOR MESSAGE^FI^^HEAD;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<1) X
"^DD",727,727,6,1,0)
^.1
"^DD",727,727,6,1,1,0)
727^E
"^DD",727,727,6,1,1,1)
S ^ECX(727,"E",$E(X,1,30),DA)=""
"^DD",727,727,6,1,1,2)
K ^ECX(727,"E",$E(X,1,30),DA)
"^DD",727,727,6,1,1,"DT")
2941101
"^DD",727,727,6,3)
Answer must be 1-30 characters in length.
"^DD",727,727,6,21,0)
^^2^2^2911105^
"^DD",727,727,6,21,1,0)
The header for the extract run.  Example: ADMISSIONS/DEMOG for the
"^DD",727,727,6,21,2,0)
MAS Admissions extract.
"^DD",727,727,6,"DT")
2941101
"^DD",727,727,7,0)
FILE NUMBER^NJ8,4I^^FILE;1^K:+X'=X!(X>999)!(X<727)!(X?.E1"."5N.N) X
"^DD",727,727,7,3)
Type a Number between 727 and 999, 4 Decimal Digits
"^DD",727,727,7,21,0)
^^2^2^2911105^^^
"^DD",727,727,7,21,1,0)
An indicator (pointer) of the file in ECX in which the data for this
"^DD",727,727,7,21,2,0)
extract can be found.
"^DD",727,727,7,"DT")
2911112
"^DD",727,727,8,0)
GROUP^FI^^GRP;1^K:$L(X)>20!($L(X)<1) X
"^DD",727,727,8,3)
Answer must be 1-20 characters in length.
"^DD",727,727,8,21,0)
^^4^4^2950317^^
"^DD",727,727,8,21,1,0)
The mail group to which this extract summary message was sent.
"^DD",727,727,8,21,2,0)
The actual mail group name will be "DSS-"group name.
"^DD",727,727,8,21,3,0)
Example: ADM for the mail group DSS-ADMS for the MAS Admission
"^DD",727,727,8,21,4,0)
extract.
"^DD",727,727,8,"DT")
2911112
"^DD",727,727,9,0)
PURGED^DI^^PURG;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",727,727,9,21,0)
^^2^2^2911112^
"^DD",727,727,9,21,1,0)
The date on which the data for this extract was deleted from the local
"^DD",727,727,9,21,2,0)
extract file.
"^DD",727,727,9,23,0)
^^2^2^2911112^
"^DD",727,727,9,23,1,0)
This date is set when data is deleted from the corresponding local
"^DD",727,727,9,23,2,0)
extract file.
"^DD",727,727,9,"DT")
2960216
"^DD",727,727,10,0)
OTHER IFCAP EXTRACT^P727'^ECX(727,^IFCAP;1^Q
"^DD",727,727,10,21,0)
^^5^5^2950411^^
"^DD",727,727,10,21,1,0)
The combined IFCAP extract consists of two separate extracts, the
"^DD",727,727,10,21,2,0)
detailed extract and the summary extract.  This field is used to
"^DD",727,727,10,21,3,0)
link the two so that they can be purged simultaneously.  Like all
"^DD",727,727,10,21,4,0)
fields in this file, it is set by the extract routines and should
"^DD",727,727,10,21,5,0)
not be edited.
"^DD",727,727,10,23,0)
^^1^1^2950411^
"^DD",727,727,10,23,1,0)
Pointer to the DSS EXTRACT LOG file (#727).
"^DD",727,727,10,"DT")
2921102
"^DD",727,727,11,0)
QUEUED^NJ9,0^^Q;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727,727,11,3)
Type a Number between 1 and 999999999, 0 Decimal Digits
"^DD",727,727,11,21,0)
6^^4^4^2950411^
"^DD",727,727,11,21,1,0)
This field will contain the number of the task (ZTSK) for this queued
"^DD",727,727,11,21,2,0)
transmission.  It is set by the transmit routine (ECXTRANS) when the
"^DD",727,727,11,21,3,0)
job is queued and cleared by the same routine when the transmission is
"^DD",727,727,11,21,4,0)
completed. This field should not be edited directly via VA FileMan.
"^DD",727,727,11,23,0)
^^4^4^2950411^^
"^DD",727,727,11,23,1,0)
The variable ZTSK is set into this field by line SET^ECXTRANS when the
"^DD",727,727,11,23,2,0)
job is queued to run and cleared by line CLEAN^ECXTRANS when the job
"^DD",727,727,11,23,3,0)
completes.  It is used to prevent the user from queuing the same
"^DD",727,727,11,23,4,0)
transmission twice.  This field should not be edited via VA FileMan.
"^DD",727,727,11,"DT")
2930505
"^DD",727,727,12,0)
LOCAL EXTRACT^SI^L:LOCAL;^L;1^Q
"^DD",727,727,12,21,0)
^^4^4^2950411^^
"^DD",727,727,12,21,1,0)
This field will be set for any extract designed to be transmitted to
"^DD",727,727,12,21,2,0)
some local non-DHCP database rather than to the commercial vendor
"^DD",727,727,12,21,3,0)
database.  If this field is set, this extract can not be chosen for
"^DD",727,727,12,21,4,0)
transmission to the commercial vendor.
"^DD",727,727,12,23,0)
^^3^3^2950411^^^
"^DD",727,727,12,23,1,0)
This field is used in a DIC("S") screen in routine ECXTRANS to prevent
"^DD",727,727,12,23,2,0)
an extract intended for local use to be transmitted to the commercial
"^DD",727,727,12,23,3,0)
vendor.
"^DD",727,727,12,"DT")
2930805
"^DD",727,727,13,0)
VERSION^F^^VER;1^K:$L(X)>3!($L(X)<1) X
"^DD",727,727,13,3)
Answer must be 1-3 characters in length.
"^DD",727,727,13,21,0)
^^4^4^2960214^^
"^DD",727,727,13,21,1,0)
This field contains a version identifier to be used as part of
"^DD",727,727,13,21,2,0)
the header in transmissions to Austin.  It can then be used by
"^DD",727,727,13,21,3,0)
the SAS programs at Austin to change the processing logic as
"^DD",727,727,13,21,4,0)
versions change.
"^DD",727,727,13,23,0)
^^2^2^2960214^^^
"^DD",727,727,13,23,1,0)
Picked up in line START+2^ECXTRANS and padded to a length of 3
"^DD",727,727,13,23,2,0)
and tacked onto the header at START+7
"^DD",727,727,13,"DT")
2950731
"^DD",727,727,300,0)
TRANSMITTED^DI^^TR;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",727,727,300,1,0)
^.1
"^DD",727,727,300,1,1,0)
727^AT
"^DD",727,727,300,1,1,1)
S ^ECX(727,"AT",$E(X,1,30),DA)=""
"^DD",727,727,300,1,1,2)
K ^ECX(727,"AT",$E(X,1,30),DA)
"^DD",727,727,300,1,1,3)
This cross reference is essental for managing and purging data in several files.  DO NOT DELETE.
"^DD",727,727,300,1,1,"DT")
2910803
"^DD",727,727,300,21,0)
^^3^3^2911105^
"^DD",727,727,300,21,1,0)
This field is set when the entries for this file are transmitted to
"^DD",727,727,300,21,2,0)
the commercial vendor.  This field and the cross reference are
"^DD",727,727,300,21,3,0)
essential for managing and purging data in this file.
"^DD",727,727,300,23,0)
^^2^2^2911105^
"^DD",727,727,300,23,1,0)
The date when these file entries were loaded into a mail message for
"^DD",727,727,300,23,2,0)
transmission, set by the transmit routine.
"^DD",727,727,300,"DT")
2930805
"^DD",727,727,301,0)
MESSAGE NUMBER^727.0301A^^1;0
"^DD",727,727,301,21,0)
^^2^2^2950411^^
"^DD",727,727,301,21,1,0)
This multiple holds the message numbers sent to the Austin Automation
"^DD",727,727,301,21,2,0)
Center for this extract.
"^DD",727,727.0301,0)
MESSAGE NUMBER SUB-FIELD^^.01^1
"^DD",727,727.0301,0,"IX","B",727.0301,.01)

"^DD",727,727.0301,0,"NM","MESSAGE NUMBER")

"^DD",727,727.0301,0,"UP")
727
"^DD",727,727.0301,.01,0)
MESSAGE NUMBER^MNJ12,0X^^0;1^K:+X'=X!(X>999999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727,727.0301,.01,1,0)
^.1
"^DD",727,727.0301,.01,1,1,0)
727.0301^B
"^DD",727,727.0301,.01,1,1,1)
S ^ECX(727,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",727,727.0301,.01,1,1,2)
K ^ECX(727,DA(1),1,"B",$E(X,1,30),DA)
"^DD",727,727.0301,.01,1,2,0)
727^AB
"^DD",727,727.0301,.01,1,2,1)
S ^ECX(727,"AB",$E(X,1,30),DA(1),DA)=""
"^DD",727,727.0301,.01,1,2,2)
K ^ECX(727,"AB",$E(X,1,30),DA(1),DA)
"^DD",727,727.0301,.01,1,2,3)
Do not delete
"^DD",727,727.0301,.01,1,2,"%D",0)
^^3^3^2940210^
"^DD",727,727.0301,.01,1,2,"%D",1,0)
This cross reference is used to manage the deletion of entries in
"^DD",727,727.0301,.01,1,2,"%D",2,0)
this sub file when confirmation messages are received from the AAC.
"^DD",727,727.0301,.01,1,2,"%D",3,0)
 
"^DD",727,727.0301,.01,1,2,"DT")
2940210
"^DD",727,727.0301,.01,3)
Type a Number between 1 and 999999999999, 0 Decimal Digits
"^DD",727,727.0301,.01,21,0)
8^^7^7^2950411^^
"^DD",727,727.0301,.01,21,1,0)
This field holds the message number of a message for this extract which
"^DD",727,727.0301,.01,21,2,0)
was sent to the Austin Automation Center.  It is created by routine
"^DD",727,727.0301,.01,21,3,0)
ECXTRANS when the message was transmitted and deleted by routine
"^DD",727,727.0301,.01,21,4,0)
ECXMDELE when the confirmation message is received from the Austin
"^DD",727,727.0301,.01,21,5,0)
Automation Center.  A necessary and sufficient condition for an extract
"^DD",727,727.0301,.01,21,6,0)
to have been successfully transmitted to the Austin Automation Center is
"^DD",727,727.0301,.01,21,7,0)
the existence of TRANSMITTED field (#300) and no entries in this multiple.
"^DD",727,727.0301,.01,23,0)
6^^5^5^2950411^^
"^DD",727,727.0301,.01,23,1,0)
Created at line SETM^ECXTRANS at the time of transmission to the
"^DD",727,727.0301,.01,23,2,0)
Austin Automation Center and deleted at line DEL^ECXMDELE when the
"^DD",727,727.0301,.01,23,3,0)
confirmation message is received from the Austin Automation Center.
"^DD",727,727.0301,.01,23,4,0)
For this deletion to occur, the server option S.ECXMDELE@<this site> must
"^DD",727,727.0301,.01,23,5,0)
be a remote member of the mail group DMS.
"^DD",727,727.0301,.01,"DT")
2940210
"^DD",727.1,727.1,0)
FIELD^^10^11
"^DD",727.1,727.1,0,"DDA")
N
"^DD",727.1,727.1,0,"DT")
2971030
"^DD",727.1,727.1,0,"IX","AF",727.1,1)

"^DD",727.1,727.1,0,"IX","B",727.1,.01)

"^DD",727.1,727.1,0,"IX","C",727.1,8)

"^DD",727.1,727.1,0,"NM","EXTRACT DEFINITIONS")

"^DD",727.1,727.1,0,"VRPK")
DSS EXTRACTS
"^DD",727.1,727.1,.01,0)
EXTRACT NAME^RFI^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",727.1,727.1,.01,1,0)
^.1
"^DD",727.1,727.1,.01,1,1,0)
727.1^B
"^DD",727.1,727.1,.01,1,1,1)
S ^ECX(727.1,"B",$E(X,1,30),DA)=""
"^DD",727.1,727.1,.01,1,1,2)
K ^ECX(727.1,"B",$E(X,1,30),DA)
"^DD",727.1,727.1,.01,3)
Answer must be 1-30 characters in length.
"^DD",727.1,727.1,.01,21,0)
^^1^1^2930415^^^^
"^DD",727.1,727.1,.01,21,1,0)
The name of the extract.
"^DD",727.1,727.1,.01,"DT")
2950421
"^DD",727.1,727.1,1,0)
FILE NUMBER^RNJ7,3I^^0;2^K:+X'=X!(X>728)!(X<727)!(X?.E1"."4N.N) X
"^DD",727.1,727.1,1,1,0)
^.1
"^DD",727.1,727.1,1,1,1,0)
727.1^AF
"^DD",727.1,727.1,1,1,1,1)
S ^ECX(727.1,"AF",$E(X,1,30),DA)=""
"^DD",727.1,727.1,1,1,1,2)
K ^ECX(727.1,"AF",$E(X,1,30),DA)
"^DD",727.1,727.1,1,1,1,3)
DO NOT DELETE
"^DD",727.1,727.1,1,1,1,"%D",0)
^^2^2^2930415^^
"^DD",727.1,727.1,1,1,1,"%D",1,0)
This cross reference is essential for determing the frequency and date
"^DD",727.1,727.1,1,1,1,"%D",2,0)
range for package extracts.  Do not delete.
"^DD",727.1,727.1,1,1,1,"DT")
2930129
"^DD",727.1,727.1,1,3)
Type a Number between 727 and 728, 3 Decimal Digits
"^DD",727.1,727.1,1,21,0)
^^1^1^2930129^
"^DD",727.1,727.1,1,21,1,0)
The number of the file into which this extract places data.
"^DD",727.1,727.1,1,23,0)
^^4^4^2930129^
"^DD",727.1,727.1,1,23,1,0)
The AF cross reference on this file is used by the extract routines,
"^DD",727.1,727.1,1,23,2,0)
using the variable ECFILE, to determine the frequency with which the
"^DD",727.1,727.1,1,23,3,0)
extract is run and, from the frequency, the starting and ending days
"^DD",727.1,727.1,1,23,4,0)
for the extract.
"^DD",727.1,727.1,1,"DT")
2940428
"^DD",727.1,727.1,2,0)
FREQUENCY^S^D:DAILY;W:WEEKLY;M:MONTHLY;^0;3^Q
"^DD",727.1,727.1,2,21,0)
^^5^5^2940225^^^^
"^DD",727.1,727.1,2,21,1,0)
This field determines the frequency with which this extract will be
"^DD",727.1,727.1,2,21,2,0)
run.  Daily extracts are run for a single day, T-X, where X is the
"^DD",727.1,727.1,2,21,3,0)
number entered in the DAYS AGO field in this file.  Weekly extracts
"^DD",727.1,727.1,2,21,4,0)
are run for the week ending on T-X.  Monthly extracts are run for
"^DD",727.1,727.1,2,21,5,0)
the previous month.
"^DD",727.1,727.1,2,23,0)
^^2^2^2940225^^^^
"^DD",727.1,727.1,2,23,1,0)
This field is used by the extract routines to determine the starting
"^DD",727.1,727.1,2,23,2,0)
and ending dates for the extract.
"^DD",727.1,727.1,2,"DT")
2940225
"^DD",727.1,727.1,3,0)
DAYS AGO^RNJ2,0^^0;4^K:+X'=X!(X>30)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.1,727.1,3,3)
Type a Number between 1 and 30, 0 Decimal Digits
"^DD",727.1,727.1,3,21,0)
^^4^4^2930811^^
"^DD",727.1,727.1,3,21,1,0)
This field is used for daily and weekly extracts to determine how
"^DD",727.1,727.1,3,21,2,0)
many days ago the extract should look for data.  For daily extracts,
"^DD",727.1,727.1,3,21,3,0)
the date would be T-X, for weekly extracts, the date range would
"^DD",727.1,727.1,3,21,4,0)
be from T-X-7 to T-X.
"^DD",727.1,727.1,3,23,0)
^^2^2^2930811^^
"^DD",727.1,727.1,3,23,1,0)
Used by the extract routines to determine the date for a daily extract
"^DD",727.1,727.1,3,23,2,0)
or the date range for a weekly extract.
"^DD",727.1,727.1,3,"DT")
2930129
"^DD",727.1,727.1,4,0)
ROUTINE^FI^^ROU;1^K:$L(X)>8!($L(X)<1)!'(X?1"ECX".UN) X
"^DD",727.1,727.1,4,3)
Answer must be 1-8 characters in length.
"^DD",727.1,727.1,4,21,0)
^^2^2^2930811^^
"^DD",727.1,727.1,4,21,1,0)
The name of the routine which performs this extract.  Data is loaded
"^DD",727.1,727.1,4,21,2,0)
into this field at creation time as should not be edited in the field
"^DD",727.1,727.1,4,23,0)
^^4^4^2930811^^
"^DD",727.1,727.1,4,23,1,0)
Data in this field is used to queue the initial extract.  Once the
"^DD",727.1,727.1,4,23,2,0)
extract manager specifies the frequency, days offset, start date
"^DD",727.1,727.1,4,23,3,0)
(which is not a data element in this file), the extract setup
"^DD",727.1,727.1,4,23,4,0)
calls %ZTLOAD to queue QUE^routine at the proper time.
"^DD",727.1,727.1,4,"DT")
2940324
"^DD",727.1,727.1,5,0)
OFFSET^NJ2,0^^0;5^K:+X'=X!(X>60)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.1,727.1,5,3)
The offset, in days, for the daily local extract
"^DD",727.1,727.1,5,21,0)
^^2^2^2930827^
"^DD",727.1,727.1,5,21,1,0)
This field is used by the local daily extract to determine how many days
"^DD",727.1,727.1,5,21,2,0)
back to look for data
"^DD",727.1,727.1,5,"DT")
2930827
"^DD",727.1,727.1,6,0)
QUEUED^SI^1:YES;^0;6^Q
"^DD",727.1,727.1,6,21,0)
^^6^6^2970925^^
"^DD",727.1,727.1,6,21,1,0)
This field is set by the software when the extract is queued to
"^DD",727.1,727.1,6,21,2,0)
run.  Once this field is set, other data elements should be
"^DD",727.1,727.1,6,21,3,0)
changed only with extreme care.  Changing either the frequency or
"^DD",727.1,727.1,6,21,4,0)
the days ago field could result in a date range being missed and
"^DD",727.1,727.1,6,21,5,0)
not extracted for trasmission to TSI.
"^DD",727.1,727.1,6,21,6,0)
 
"^DD",727.1,727.1,6,"DT")
2940324
"^DD",727.1,727.1,7,0)
TYPE^RF^^0;7^K:$L(X)>30!($L(X)<3) X
"^DD",727.1,727.1,7,3)
Answer must be 3-30 characters in length.
"^DD",727.1,727.1,7,21,0)
^^3^3^2970925^
"^DD",727.1,727.1,7,21,1,0)
This is the print name for the extract.  It has an important use in
"^DD",727.1,727.1,7,21,2,0)
supplying a data element to the TYPE field (#2) of the DSS EXTRACT
"^DD",727.1,727.1,7,21,3,0)
LOG file (#727).
"^DD",727.1,727.1,7,23,0)
^^5^5^2970925^
"^DD",727.1,727.1,7,23,1,0)
A free text field; only 1st character is capitalized.  Used as
"^DD",727.1,727.1,7,23,2,0)
print name for the extract.
"^DD",727.1,727.1,7,23,3,0)
 
"^DD",727.1,727.1,7,23,4,0)
This data element is also hard-coded into the SETUP code unit of
"^DD",727.1,727.1,7,23,5,0)
each extract routine using variable ECPACK.
"^DD",727.1,727.1,7,"DT")
2970925
"^DD",727.1,727.1,8,0)
HEADER CODE^RF^^0;8^K:$L(X)>3!($L(X)<3) X
"^DD",727.1,727.1,8,1,0)
^.1
"^DD",727.1,727.1,8,1,1,0)
727.1^C
"^DD",727.1,727.1,8,1,1,1)
S ^ECX(727.1,"C",$E(X,1,30),DA)=""
"^DD",727.1,727.1,8,1,1,2)
K ^ECX(727.1,"C",$E(X,1,30),DA)
"^DD",727.1,727.1,8,1,1,3)
Do not delete this cross-reference.
"^DD",727.1,727.1,8,1,1,"%D",0)
^^2^2^2970925^
"^DD",727.1,727.1,8,1,1,"%D",1,0)
This cross-reference will be used by all the extract audit report
"^DD",727.1,727.1,8,1,1,"%D",2,0)
routines to obtain defining information on the extract.
"^DD",727.1,727.1,8,1,1,"DT")
2970925
"^DD",727.1,727.1,8,3)
Answer must be 3 characters in length.
"^DD",727.1,727.1,8,21,0)
^^2^2^2970925^^
"^DD",727.1,727.1,8,21,1,0)
The unique 3-letter identifier code for the extract type.  Needed for
"^DD",727.1,727.1,8,21,2,0)
the header record in each extract transmission.
"^DD",727.1,727.1,8,23,0)
^^4^4^2970925^^
"^DD",727.1,727.1,8,23,1,0)
A 3-character identifying code; each character is an uppercase alpha.
"^DD",727.1,727.1,8,23,2,0)
 
"^DD",727.1,727.1,8,23,3,0)
This data element is also hard-coded into the SETUP code unit of
"^DD",727.1,727.1,8,23,4,0)
each extract routine using variable ECHEAD.
"^DD",727.1,727.1,8,"DT")
2970925
"^DD",727.1,727.1,9,0)
GROUP^RF^^0;9^K:$L(X)>5!($L(X)<2) X
"^DD",727.1,727.1,9,3)
Answer must be 2-5 characters in length.
"^DD",727.1,727.1,9,21,0)
^^1^1^2970925^
"^DD",727.1,727.1,9,21,1,0)
This code identifies the data group to which the extract belongs.
"^DD",727.1,727.1,9,23,0)
^^4^4^2970925^
"^DD",727.1,727.1,9,23,1,0)
A 2-5 character identifying code; each character is an uppercase alpha.
"^DD",727.1,727.1,9,23,2,0)
 
"^DD",727.1,727.1,9,23,3,0)
This data element is also hard-coded into the SETUP code unit of
"^DD",727.1,727.1,9,23,4,0)
each extract routine using variable ECGRP.
"^DD",727.1,727.1,9,"DT")
2970925
"^DD",727.1,727.1,10,0)
AUDIT DESCRIPTION^727.11^^1;0
"^DD",727.1,727.11,0)
AUDIT DESCRIPTION SUB-FIELD^^.01^1
"^DD",727.1,727.11,0,"DT")
2971030
"^DD",727.1,727.11,0,"NM","AUDIT DESCRIPTION")

"^DD",727.1,727.11,0,"UP")
727.1
"^DD",727.1,727.11,.01,0)
AUDIT DESCRIPTION^WL^^0;1^Q
"^DD",727.1,727.11,.01,21,0)
^^2^2^2971030^^
"^DD",727.1,727.11,.01,21,1,0)
The information contained here provides user instructions on the 
"^DD",727.1,727.11,.01,21,2,0)
recommended method for verifying the extract audit report.
"^DD",727.1,727.11,.01,"DT")
2971030
"^DD",727.2,727.2,0)
FIELD^^3^4
"^DD",727.2,727.2,0,"DDA")
N
"^DD",727.2,727.2,0,"DT")
2970226
"^DD",727.2,727.2,0,"IX","B",727.2,.01)

"^DD",727.2,727.2,0,"IX","S",727.21,2)

"^DD",727.2,727.2,0,"NM","DSS LAB TESTS")

"^DD",727.2,727.2,0,"VRPK")
DSS EXTRACTS
"^DD",727.2,727.2,.01,0)
NAME^RFIX^^0;1^K X
"^DD",727.2,727.2,.01,.1)
Name
"^DD",727.2,727.2,.01,1,0)
^.1
"^DD",727.2,727.2,.01,1,1,0)
727.2^B
"^DD",727.2,727.2,.01,1,1,1)
S ^ECX(727.2,"B",$E(X,1,30),DA)=""
"^DD",727.2,727.2,.01,1,1,2)
K ^ECX(727.2,"B",$E(X,1,30),DA)
"^DD",727.2,727.2,.01,1,1,"DT")
2950310
"^DD",727.2,727.2,.01,3)
This field is pre-set, no local entries should be made.
"^DD",727.2,727.2,.01,9)
^
"^DD",727.2,727.2,.01,21,0)
^^4^4^2970214^^
"^DD",727.2,727.2,.01,21,1,0)
The DSS LAB TEST file (#727.2) has ONE top level file entry which stores
"^DD",727.2,727.2,.01,21,2,0)
local data (i.e., local lab test names and blood/urine specimen names) for
"^DD",727.2,727.2,.01,21,3,0)
each of the laboratory tests that are tracked using the Decision Support
"^DD",727.2,727.2,.01,21,4,0)
System. This entry is called "LOCAL DSS LAR SETUP".
"^DD",727.2,727.2,.01,23,0)
^^1^1^2970214^^
"^DD",727.2,727.2,.01,23,1,0)
This field is distributed pre-set, no local entries should be made.
"^DD",727.2,727.2,.01,"DT")
2961213
"^DD",727.2,727.2,1,0)
DSS LAB TEST^727.21^^1;0
"^DD",727.2,727.2,2,0)
BLOOD SPECIMEN^727.22P^^BL;0
"^DD",727.2,727.2,3,0)
URINE SPECIMEN^727.23P^^UR;0
"^DD",727.2,727.21,0)
DSS LAB TEST SUB-FIELD^^2^3
"^DD",727.2,727.21,0,"DT")
2970226
"^DD",727.2,727.21,0,"IX","B",727.21,.01)

"^DD",727.2,727.21,0,"NM","DSS LAB TEST")

"^DD",727.2,727.21,0,"UP")
727.2
"^DD",727.2,727.21,.01,0)
DSS LAB TEST^MRFIX^^0;1^K X
"^DD",727.2,727.21,.01,1,0)
^.1
"^DD",727.2,727.21,.01,1,1,0)
727.21^B
"^DD",727.2,727.21,.01,1,1,1)
S ^ECX(727.2,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",727.2,727.21,.01,1,1,2)
K ^ECX(727.2,DA(1),1,"B",$E(X,1,30),DA)
"^DD",727.2,727.21,.01,3)
Enter name of laboratory test to be tracked for DSS.
"^DD",727.2,727.21,.01,8.5)
^
"^DD",727.2,727.21,.01,9)
^
"^DD",727.2,727.21,.01,21,0)
^^2^2^2970214^
"^DD",727.2,727.21,.01,21,1,0)
This is the laboratory test which will be tracked for the Decision Support
"^DD",727.2,727.21,.01,21,2,0)
System.
"^DD",727.2,727.21,.01,23,0)
^^2^2^2970214^^^^
"^DD",727.2,727.21,.01,23,1,0)
This entry is pre-determined by the DSS Program office and distributed
"^DD",727.2,727.21,.01,23,2,0)
with the DSS Extracts software.
"^DD",727.2,727.21,.01,"DEL",.01,0)
I 1 W !?10,"THIS LAB TEST MAY NOT BE DELETED"
"^DD",727.2,727.21,.01,"DT")
2961213
"^DD",727.2,727.21,1,0)
LOCAL LAB TEST NAME^727.211P^^LOC;0
"^DD",727.2,727.21,1,21,0)
^^2^2^2970226^^^
"^DD",727.2,727.21,1,21,1,0)
This is the data name in the LABORATORY TEST file (#60) that
"^DD",727.2,727.21,1,21,2,0)
corresponds to this laboratory test.
"^DD",727.2,727.21,1,23,0)
^^3^3^2970226^
"^DD",727.2,727.21,1,23,1,0)
Pointer to the NAME field (.01) of the LABORATORY TEST file (#60).
"^DD",727.2,727.21,1,23,2,0)
Entries will be screened to allow only individually orderable (atomic)
"^DD",727.2,727.21,1,23,3,0)
tests and tests which are linked to a National VA Lab Code.
"^DD",727.2,727.21,2,0)
SOURCE^SI^B:BLOOD;U:URINE;^0;2^Q
"^DD",727.2,727.21,2,1,0)
^.1
"^DD",727.2,727.21,2,1,1,0)
727.2^S
"^DD",727.2,727.21,2,1,1,1)
S ^ECX(727.2,"S",$E(X,1,30),DA(1),DA)=""
"^DD",727.2,727.21,2,1,1,2)
K ^ECX(727.2,"S",$E(X,1,30),DA(1),DA)
"^DD",727.2,727.21,2,1,1,3)
DO NOT DELETE!!
"^DD",727.2,727.21,2,1,1,"%D",0)
^^1^1^2961213^
"^DD",727.2,727.21,2,1,1,"%D",1,0)
This cross reference is used to sort DSS Lab Tests by source of specimen.
"^DD",727.2,727.21,2,1,1,"DT")
2961213
"^DD",727.2,727.21,2,3)
Enter the type of SPECIMEN to be used for this DSS Lab Test.
"^DD",727.2,727.21,2,21,0)
^^2^2^2970214^
"^DD",727.2,727.21,2,21,1,0)
This flag is used to denote which specimen type should be used in the
"^DD",727.2,727.21,2,21,2,0)
search criteria for this DSS Lab Test.
"^DD",727.2,727.21,2,23,0)
^^2^2^2970214^
"^DD",727.2,727.21,2,23,1,0)
This flag is used to denote which specimen type should be used in the
"^DD",727.2,727.21,2,23,2,0)
search criteria for this DSS Lab Test.  B=Blood, U=Urine
"^DD",727.2,727.21,2,"DEL",2,0)
I 1 W !?10,"THIS SOURCE FLAG MAY NOT BE DELETED"
"^DD",727.2,727.21,2,"DT")
2961213
"^DD",727.2,727.211,0)
LOCAL LAB TEST NAME SUB-FIELD^^.01^1
"^DD",727.2,727.211,0,"DT")
2970226
"^DD",727.2,727.211,0,"IX","B",727.211,.01)

"^DD",727.2,727.211,0,"NM","LOCAL LAB TEST NAME")

"^DD",727.2,727.211,0,"UP")
727.21
"^DD",727.2,727.211,.01,0)
LOCAL LAB TEST NAME^M*P60'O^LAB(60,^0;1^S DIC("S")="I $L($P(^(0),U,5)),$G(^(64))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",727.2,727.211,.01,1,0)
^.1
"^DD",727.2,727.211,.01,1,1,0)
727.211^B
"^DD",727.2,727.211,.01,1,1,1)
S ^ECX(727.2,DA(2),1,DA(1),"LOC","B",$E(X,1,30),DA)=""
"^DD",727.2,727.211,.01,1,1,2)
K ^ECX(727.2,DA(2),1,DA(1),"LOC","B",$E(X,1,30),DA)
"^DD",727.2,727.211,.01,3)
Enter a corresponding lab test (from the LABORATORY TEST file (#60)) for this DSS lab test.
"^DD",727.2,727.211,.01,12)
Only atomic tests and tests which are linked to a National VA Lab Code.
"^DD",727.2,727.211,.01,12.1)
S DIC("S")="I $L($P(^(0),U,5)),$G(^(64))"
"^DD",727.2,727.211,.01,21,0)
^^2^2^2970226^^^^
"^DD",727.2,727.211,.01,21,1,0)
This is the corresponding data name in the LABORATORY TEST file (#60) for
"^DD",727.2,727.211,.01,21,2,0)
this laboratory test.
"^DD",727.2,727.211,.01,23,0)
^^1^1^2970226^^^^
"^DD",727.2,727.211,.01,23,1,0)
Pointer to the NAME field (.01) of the LABORATORY TEST file (#60).
"^DD",727.2,727.211,.01,"DT")
2970226
"^DD",727.2,727.22,0)
BLOOD SPECIMEN SUB-FIELD^^.01^1
"^DD",727.2,727.22,0,"DT")
2961213
"^DD",727.2,727.22,0,"IX","B",727.22,.01)

"^DD",727.2,727.22,0,"NM","BLOOD SPECIMEN")

"^DD",727.2,727.22,0,"UP")
727.2
"^DD",727.2,727.22,.01,0)
BLOOD SPECIMEN^MP61'X^LAB(61,^0;1^S:$D(X) DINUM=X
"^DD",727.2,727.22,.01,1,0)
^.1
"^DD",727.2,727.22,.01,1,1,0)
727.22^B
"^DD",727.2,727.22,.01,1,1,1)
S ^ECX(727.2,DA(1),"BL","B",$E(X,1,30),DA)=""
"^DD",727.2,727.22,.01,1,1,2)
K ^ECX(727.2,DA(1),"BL","B",$E(X,1,30),DA)
"^DD",727.2,727.22,.01,3)
Enter a specimen locally considered to be a BLOOD SPECIMEN.
"^DD",727.2,727.22,.01,21,0)
^^2^2^2970205^
"^DD",727.2,727.22,.01,21,1,0)
This field contains all of the specimens a facility considers to be blood
"^DD",727.2,727.22,.01,21,2,0)
specimens.
"^DD",727.2,727.22,.01,23,0)
^^1^1^2970205^^^^
"^DD",727.2,727.22,.01,23,1,0)
Pointer to the NAME field (.01) of the TOPOGRAPHY FIELD file (#61).
"^DD",727.2,727.22,.01,"DT")
2961217
"^DD",727.2,727.23,0)
URINE SPECIMEN SUB-FIELD^^.01^1
"^DD",727.2,727.23,0,"DT")
2961213
"^DD",727.2,727.23,0,"IX","B",727.23,.01)

"^DD",727.2,727.23,0,"NM","URINE SPECIMEN")

"^DD",727.2,727.23,0,"UP")
727.2
"^DD",727.2,727.23,.01,0)
URINE SPECIMEN^MP61'X^LAB(61,^0;1^S:$D(X) DINUM=X
"^DD",727.2,727.23,.01,1,0)
^.1
"^DD",727.2,727.23,.01,1,1,0)
727.23^B
"^DD",727.2,727.23,.01,1,1,1)
S ^ECX(727.2,DA(1),"UR","B",$E(X,1,30),DA)=""
"^DD",727.2,727.23,.01,1,1,2)
K ^ECX(727.2,DA(1),"UR","B",$E(X,1,30),DA)
"^DD",727.2,727.23,.01,3)
Enter a specimen locally considered to be a URINE SPECIMEN.
"^DD",727.2,727.23,.01,21,0)
^^2^2^2970205^^^
"^DD",727.2,727.23,.01,21,1,0)
This field contains all of the specimens a facility considers to be urine
"^DD",727.2,727.23,.01,21,2,0)
specimens.
"^DD",727.2,727.23,.01,23,0)
^^1^1^2970205^^
"^DD",727.2,727.23,.01,23,1,0)
Pointer to the NAME field (.01) of the TOPOGRAPHY FIELD file (#61).
"^DD",727.2,727.23,.01,"DT")
2961217
"^DD",727.802,727.802,0)
FIELD^^36^37
"^DD",727.802,727.802,0,"DDA")
N
"^DD",727.802,727.802,0,"DIK")
ECX802
"^DD",727.802,727.802,0,"DIKOLD")
ECX802
"^DD",727.802,727.802,0,"DT")
2971002
"^DD",727.802,727.802,0,"IX","AC",727.802,2)

"^DD",727.802,727.802,0,"IX","AINV",727.802,.01)

"^DD",727.802,727.802,0,"NM","ADMISSION EXTRACT")

"^DD",727.802,727.802,0,"VRPK")
DSS EXTRACTS
"^DD",727.802,727.802,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.802,727.802,.01,.1)
Sequence Number
"^DD",727.802,727.802,.01,1,0)
^.1
"^DD",727.802,727.802,.01,1,1,0)
727.802^AINV^MUMPS
"^DD",727.802,727.802,.01,1,1,1)
S ^ECX(727.802,"AINV",-X,DA)=""
"^DD",727.802,727.802,.01,1,1,2)
K ^ECX(727.802,"AINV",-X,DA)
"^DD",727.802,727.802,.01,1,1,3)
DO NOT DELETE.
"^DD",727.802,727.802,.01,1,1,"%D",0)
^^3^3^2960808^^^^
"^DD",727.802,727.802,.01,1,1,"%D",1,0)
This is an inverse entry cross reference.  It is used to find the
"^DD",727.802,727.802,.01,1,1,"%D",2,0)
last entry in the file.  It is essential for the management of the
"^DD",727.802,727.802,.01,1,1,"%D",3,0)
extract and the purge of extract data.
"^DD",727.802,727.802,.01,1,1,"DT")
2921016
"^DD",727.802,727.802,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",727.802,727.802,.01,21,0)
^^1^1^2960731^^^^
"^DD",727.802,727.802,.01,21,1,0)
The record number for this extract entry.
"^DD",727.802,727.802,.01,23,0)
^^1^1^2960731^^^
"^DD",727.802,727.802,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",727.802,727.802,.01,"DT")
2960731
"^DD",727.802,727.802,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.802,727.802,1,.1)
Year/Month
"^DD",727.802,727.802,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.802,727.802,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.802,727.802,1,3)
Answer must be 6 characters in length.
"^DD",727.802,727.802,1,21,0)
^^2^2^2971002^^^^
"^DD",727.802,727.802,1,21,1,0)
A six character string representing the year and the month
"^DD",727.802,727.802,1,21,2,0)
for which this extract was performed.
"^DD",727.802,727.802,1,23,0)
^^1^1^2971002^^^^
"^DD",727.802,727.802,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.802,727.802,1,"DT")
2971002
"^DD",727.802,727.802,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.802,727.802,2,.1)
Extract Number
"^DD",727.802,727.802,2,1,0)
^.1
"^DD",727.802,727.802,2,1,1,0)
727.802^AC
"^DD",727.802,727.802,2,1,1,1)
S ^ECX(727.802,"AC",$E(X,1,30),DA)=""
"^DD",727.802,727.802,2,1,1,2)
K ^ECX(727.802,"AC",$E(X,1,30),DA)
"^DD",727.802,727.802,2,1,1,3)
DO NOT DELETE.
"^DD",727.802,727.802,2,1,1,"%D",0)
^^2^2^2960808^^^^
"^DD",727.802,727.802,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data
"^DD",727.802,727.802,2,1,1,"%D",2,0)
in this file.
"^DD",727.802,727.802,2,1,1,"DT")
2910802
"^DD",727.802,727.802,2,3)
Enter the extract number for this entry.
"^DD",727.802,727.802,2,21,0)
^^2^2^2960731^^^^
"^DD",727.802,727.802,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727) for this 
"^DD",727.802,727.802,2,21,2,0)
extract.
"^DD",727.802,727.802,2,23,0)
^^2^2^2960731^^^^
"^DD",727.802,727.802,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is to
"^DD",727.802,727.802,2,23,2,0)
pick up the header for the mail message.
"^DD",727.802,727.802,2,"DT")
2960731
"^DD",727.802,727.802,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.802,727.802,3,.1)
Facility
"^DD",727.802,727.802,3,3)
Enter the station number where this extract was performed.
"^DD",727.802,727.802,3,21,0)
^^1^1^2961014^^^^
"^DD",727.802,727.802,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.802,727.802,3,23,0)
^^3^3^2961014^^^^
"^DD",727.802,727.802,3,23,1,0)
An indicator of the division where this event happened.  It is derived
"^DD",727.802,727.802,3,23,2,0)
from the DIVISION field (.015) of the WARD LOCATION file (#42) which
"^DD",727.802,727.802,3,23,3,0)
points to the MEDICAL CENTER DIVISION file (#40.8).
"^DD",727.802,727.802,3,"DT")
2961014
"^DD",727.802,727.802,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.802,727.802,4,.1)
Patient No. - DFN
"^DD",727.802,727.802,4,3)
Enter the name of the patient for this extract record.
"^DD",727.802,727.802,4,21,0)
^^1^1^2961014^^^^
"^DD",727.802,727.802,4,21,1,0)
The name of the patient for this extract record.
"^DD",727.802,727.802,4,23,0)
^^3^3^2961016^^^^
"^DD",727.802,727.802,4,23,1,0)
Pointer to the PATIENT file (#2). This data represents the patient DFN. 
"^DD",727.802,727.802,4,23,2,0)
Using the "ATT1" cross reference on the PATIENT MOVEMENT file (#405), 
"^DD",727.802,727.802,4,23,3,0)
the PATIENT NO. - DFN data is derived from the PATIENT field (.03).
"^DD",727.802,727.802,4,"DT")
2961014
"^DD",727.802,727.802,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.802,727.802,5,.1)
Social Security Number
"^DD",727.802,727.802,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.802,727.802,5,21,0)
^^1^1^2961014^^^^
"^DD",727.802,727.802,5,21,1,0)
The patient's social security number.
"^DD",727.802,727.802,5,23,0)
^^3^3^2961014^^^^
"^DD",727.802,727.802,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.802,727.802,5,23,2,0)
(4) in the ADMISSION EXTRACT file (#727.802), SSN data is derived from 
"^DD",727.802,727.802,5,23,3,0)
the SOCIAL SECURITY NUMBER field (.09) in the PATIENT file (#2).
"^DD",727.802,727.802,5,"DT")
2960731
"^DD",727.802,727.802,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.802,727.802,6,.1)
Name
"^DD",727.802,727.802,6,3)
Your answer must be 4 characters in length.
"^DD",727.802,727.802,6,21,0)
^^1^1^2961014^^^^
"^DD",727.802,727.802,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.802,727.802,6,23,0)
^^4^4^2961014^
"^DD",727.802,727.802,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.802,727.802,6,23,2,0)
in the ADMISSION EXTRACT file (#727.802), NAME data is derived from the
"^DD",727.802,727.802,6,23,3,0)
NAME field  (.01) in the PATIENT file (#2). The first four characters of
"^DD",727.802,727.802,6,23,4,0)
the first "," piece are used, padded with trailing spaces if necessary.
"^DD",727.802,727.802,6,"DT")
2960731
"^DD",727.802,727.802,7,0)
IN OUT PATIENT INDICATOR^P40.9'^DIC(40.9,^0;8^Q
"^DD",727.802,727.802,7,.1)
In Out Patient Indicator
"^DD",727.802,727.802,7,3)
Enter the appropriate inpatient or outpatient indicator.
"^DD",727.802,727.802,7,21,0)
^^2^2^2961014^^^^
"^DD",727.802,727.802,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for
"^DD",727.802,727.802,7,21,2,0)
this extract entry.
"^DD",727.802,727.802,7,23,0)
^^2^2^2961014^^^^
"^DD",727.802,727.802,7,23,1,0)
For the Admission extract this field is set to 3, indicating inpatient 
"^DD",727.802,727.802,7,23,2,0)
status in the LOCATION TYPE file (#40.9).
"^DD",727.802,727.802,7,"DT")
2960731
"^DD",727.802,727.802,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.802,727.802,8,.1)
Day
"^DD",727.802,727.802,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.802,727.802,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.802,727.802,8,3)
Answer must be 8 characters in length.
"^DD",727.802,727.802,8,21,0)
^^2^2^2970922^^^^
"^DD",727.802,727.802,8,21,1,0)
This 8-character string represents the date on which the admission
"^DD",727.802,727.802,8,21,2,0)
occurred.
"^DD",727.802,727.802,8,23,0)
^^9^9^2970923^^^^
"^DD",727.802,727.802,8,23,1,0)
Data source:
"^DD",727.802,727.802,8,23,2,0)
 
"^DD",727.802,727.802,8,23,3,0)
PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.802,727.802,8,23,4,0)
 
"^DD",727.802,727.802,8,23,5,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.802,727.802,8,23,6,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.802,727.802,8,23,7,0)
then a default is used.  The default date value is the value of the 
"^DD",727.802,727.802,8,23,8,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.802,727.802,8,23,9,0)
Year 2000 compliant per vendor.
"^DD",727.802,727.802,8,"DT")
2970924
"^DD",727.802,727.802,9,0)
PRIMARY CARE TEAM^F^^0;10^K:$L(X)>4!($L(X)<1) X
"^DD",727.802,727.802,9,.1)
Primary Care Team
"^DD",727.802,727.802,9,3)
Enter primary care team assigned to this patient.
"^DD",727.802,727.802,9,21,0)
^^1^1^2961030^^^^
"^DD",727.802,727.802,9,21,1,0)
The primary care team assigned to this patient.
"^DD",727.802,727.802,9,23,0)
^^6^6^2961030^^^^
"^DD",727.802,727.802,9,23,1,0)
Using the DATE/TIME field (.01) from the PATIENT MOVEMENT file (#405) 
"^DD",727.802,727.802,9,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) 
"^DD",727.802,727.802,9,23,3,0)
in the ADMISSION EXTRACT file (#727.802), a call is made to the 
"^DD",727.802,727.802,9,23,4,0)
Scheduling API, OUTPTTM^SDUTL3. The API returns the team's internal 
"^DD",727.802,727.802,9,23,5,0)
entry number and name from the TEAM file (#404.51). Only the pointer 
"^DD",727.802,727.802,9,23,6,0)
(IEN) to File 404.51 is transmitted.
"^DD",727.802,727.802,9,"DT")
2961030
"^DD",727.802,727.802,10,0)
SEX^S^M:MALE;F:FEMALE;^0;11^Q
"^DD",727.802,727.802,10,.1)
Sex
"^DD",727.802,727.802,10,3)
Enter the patient's sex.
"^DD",727.802,727.802,10,21,0)
^^1^1^2961014^^^^
"^DD",727.802,727.802,10,21,1,0)
Data is M if this patient is a male, or F if female.
"^DD",727.802,727.802,10,23,0)
^^3^3^2961014^
"^DD",727.802,727.802,10,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.802,727.802,10,23,2,0)
in the ADMISSION EXTRACT file (#727.802), this data is derived from the
"^DD",727.802,727.802,10,23,3,0)
SEX field (.02) in the PATIENT file (#2).
"^DD",727.802,727.802,10,"DT")
2960801
"^DD",727.802,727.802,11,0)
DATE OF BIRTH^FO^^0;12^K:$L(X)>8!($L(X)<8) X
"^DD",727.802,727.802,11,.1)
Date of Birth
"^DD",727.802,727.802,11,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.802,727.802,11,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.802,727.802,11,3)
Answer must be 8 characters in length.
"^DD",727.802,727.802,11,21,0)
^^2^2^2970922^^^^
"^DD",727.802,727.802,11,21,1,0)
The patient's date of birth between December 31,1870 and today's date
"^DD",727.802,727.802,11,21,2,0)
represented by an 8-character numeric string.
"^DD",727.802,727.802,11,23,0)
^^9^9^2971113^^^^
"^DD",727.802,727.802,11,23,1,0)
Data source:
"^DD",727.802,727.802,11,23,2,0)
 
"^DD",727.802,727.802,11,23,3,0)
PATIENT MOVEMENT file (#405); PATIENT field (#.03)
"^DD",727.802,727.802,11,23,4,0)
   then to PATIENT file (#2); DATE OF BIRTH field (#.03)
"^DD",727.802,727.802,11,23,5,0)
 
"^DD",727.802,727.802,11,23,6,0)
If Date of Birth cannot be determined, then January 1, 1942, is
"^DD",727.802,727.802,11,23,7,0)
used as default.  The data element is always exactly 8 numberic
"^DD",727.802,727.802,11,23,8,0)
characters in length.  Format is YYYYMMDD.  Year 2000 compliant
"^DD",727.802,727.802,11,23,9,0)
per vendor.
"^DD",727.802,727.802,11,"DT")
2970924
"^DD",727.802,727.802,12,0)
RELIGION^P13'^DIC(13,^0;13^Q
"^DD",727.802,727.802,12,.1)
Religion
"^DD",727.802,727.802,12,3)
Enter the patient's religious preference.
"^DD",727.802,727.802,12,21,0)
^^1^1^2961014^^^^
"^DD",727.802,727.802,12,21,1,0)
The current religious preference of this patient.
"^DD",727.802,727.802,12,23,0)
^^4^4^2961014^
"^DD",727.802,727.802,12,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.802,727.802,12,23,2,0)
in the ADMISSION EXTRACT file (#727.802), RELIGION data is derived from
"^DD",727.802,727.802,12,23,3,0)
the RELIGIOUS PREFERENCE field (.08) in the PATIENT file (#2). It is a
"^DD",727.802,727.802,12,23,4,0)
pointer to the RELIGION file (#13).
"^DD",727.802,727.802,12,"DT")
2960801
"^DD",727.802,727.802,13,0)
EMPLOYMENT STATUS^S^1:EMPLOYED FULL TIME;2:EMPLOYED PART TIME;3:NOT EMPLOYED;4:SELF EMPLOYED;5:RETIRED;6:ACTIVE DUTY MILITARY;9:UNKNOWN;^0;14^Q
"^DD",727.802,727.802,13,.1)
Employment Status
"^DD",727.802,727.802,13,3)
Select the appropriate employment status.
"^DD",727.802,727.802,13,21,0)
^^1^1^2961014^^^^
"^DD",727.802,727.802,13,21,1,0)
The patient's current employment status.
"^DD",727.802,727.802,13,23,0)
^^4^4^2961014^
"^DD",727.802,727.802,13,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.802,727.802,13,23,2,0)
in the ADMISSION EXTRACT file (#727.802), EMPLOYMENT STATUS data is
"^DD",727.802,727.802,13,23,3,0)
derived from the EMPLOYMENT STATUS field (.31115) in the PATIENT file
"^DD",727.802,727.802,13,23,4,0)
(#2).
"^DD",727.802,727.802,13,"DT")
2960801
"^DD",727.802,727.802,14,0)
HEALTH INSURANCE^S^Y:YES;N:NO;U:UNKNOWN;^0;15^Q
"^DD",727.802,727.802,14,.1)
Health Insurance
"^DD",727.802,727.802,14,3)
Select the appropriate health insurance status.
"^DD",727.802,727.802,14,21,0)
^^2^2^2961125^^^^
"^DD",727.802,727.802,14,21,1,0)
Data is Y if the patient is covered by a health insurance policy, N if
"^DD",727.802,727.802,14,21,2,0)
the patient isn't covered by any policy, or U if unknown.
"^DD",727.802,727.802,14,23,0)
^^4^4^2961125^^
"^DD",727.802,727.802,14,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.802,727.802,14,23,2,0)
(4) in the ADMISSION EXTRACT file (#727.802), a call is made to the 
"^DD",727.802,727.802,14,23,3,0)
Integrated Billing API, INSURED^IBCNS1. The API returns 1 if the 
"^DD",727.802,727.802,14,23,4,0)
patient is insured e patient is not insured.
"^DD",727.802,727.802,14,"DT")
2960801
"^DD",727.802,727.802,15,0)
STATE^F^^0;16^K:$L(X)>2!($L(X)<2) X
"^DD",727.802,727.802,15,.1)
State
"^DD",727.802,727.802,15,3)
Enter the VA STATE CODE for this patient.
"^DD",727.802,727.802,15,21,0)
^^1^1^2961014^^^
"^DD",727.802,727.802,15,21,1,0)
The state in which the patient resides.
"^DD",727.802,727.802,15,23,0)
^^5^5^2961014^
"^DD",727.802,727.802,15,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.802,727.802,15,23,2,0)
in the ADMISSION EXTRACT file (#727.802), STATE data is derived from the
"^DD",727.802,727.802,15,23,3,0)
STATE field (.115) in the PATIENT file (#2) which points to the STATE file
"^DD",727.802,727.802,15,23,4,0)
(#5). For the STATE file entry, data transmitted is the two character VA
"^DD",727.802,727.802,15,23,5,0)
STATE CODE, field (2).
"^DD",727.802,727.802,15,"DT")
2960801
"^DD",727.802,727.802,16,0)
COUNTY^F^^0;17^K:$L(X)>3!($L(X)<3) X
"^DD",727.802,727.802,16,.1)
County
"^DD",727.802,727.802,16,3)
Enter the VA COUNTY CODE for this patient.
"^DD",727.802,727.802,16,21,0)
^^1^1^2961014^^^^
"^DD",727.802,727.802,16,21,1,0)
County in which the patient resides.
"^DD",727.802,727.802,16,23,0)
^^5^5^2961014^
"^DD",727.802,727.802,16,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.802,727.802,16,23,2,0)
in the ADMISSION EXTRACT file (#727.802), COUNTY data is derived from the
"^DD",727.802,727.802,16,23,3,0)
COUNTY field (.117) in the PATIENT file (#2). The data transmitted is the
"^DD",727.802,727.802,16,23,4,0)
three character VA COUNTY CODE, field (2) within the COUNTY field (3)
"^DD",727.802,727.802,16,23,5,0)
multiple of the STATE file (#5).
"^DD",727.802,727.802,16,"DT")
2960801
"^DD",727.802,727.802,17,0)
ZIP CODE^F^^0;18^K:$L(X)>5!($L(X)<5) X
"^DD",727.802,727.802,17,.1)
Zip Code
"^DD",727.802,727.802,17,3)
Your answer must be 5 characters in length.
"^DD",727.802,727.802,17,21,0)
^^1^1^2961014^^^
"^DD",727.802,727.802,17,21,1,0)
Zip code for the city in which the patient resides.
"^DD",727.802,727.802,17,23,0)
^^3^3^2961014^
"^DD",727.802,727.802,17,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.802,727.802,17,23,2,0)
in the ADMISSION EXTRACT file (#727.802), ZIP CODE data is derived from
"^DD",727.802,727.802,17,23,3,0)
the ZIP CODE field (.116) in the PATIENT file (#2).
"^DD",727.802,727.802,17,"DT")
2960801
"^DD",727.802,727.802,18,0)
ELIGIBILITY^F^^0;19^K:$L(X)>1!($L(X)<1)!'(X?1U) X
"^DD",727.802,727.802,18,.1)
Eligibility
"^DD",727.802,727.802,18,3)
Your answer must be 1 character in length.
"^DD",727.802,727.802,18,21,0)
^^1^1^2961014^^^^
"^DD",727.802,727.802,18,21,1,0)
Appropriate eligibility code based on veteran or non-veteran status.
"^DD",727.802,727.802,18,23,0)
^^9^9^2961014^^
"^DD",727.802,727.802,18,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.802,727.802,18,23,2,0)
in the ADMISSION EXTRACT file (#727.802), ELIGIBILITY data is derived from
"^DD",727.802,727.802,18,23,3,0)
the PRIMARY ELIGIBILITY CODE field (.361) in the PATIENT file (#2).
"^DD",727.802,727.802,18,23,4,0)
PRIMARY ELIGIBILITY CODE is a pointer to the ELIGIBILITY CODE file (#8).
"^DD",727.802,727.802,18,23,5,0)
The data is derived from the MAS ELIGIBILITY CODE field (8) in the
"^DD",727.802,727.802,18,23,6,0)
ELIGIBILITY CODE file (#8) which in turn is a pointer to the MAS
"^DD",727.802,727.802,18,23,7,0)
ELIGIBILITY CODE file (#8.1). The MAS eligibility code pointer value is
"^DD",727.802,727.802,18,23,8,0)
converted to an alpha character representative of it's number, i.e., 1
"^DD",727.802,727.802,18,23,9,0)
converts to A, 2 converts to B, etc.
"^DD",727.802,727.802,18,"DT")
2960801
"^DD",727.802,727.802,19,0)
VETERAN^S^Y:YES;N:NO;^0;20^Q
"^DD",727.802,727.802,19,.1)
Veteran
"^DD",727.802,727.802,19,3)
Select the appropriate veteran status for this patient.
"^DD",727.802,727.802,19,21,0)
^^1^1^2961014^^^^
"^DD",727.802,727.802,19,21,1,0)
Data is Y if this patient is a veteran, N if not.
"^DD",727.802,727.802,19,23,0)
^^3^3^2961014^^
"^DD",727.802,727.802,19,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.802,727.802,19,23,2,0)
in the ADMISSION EXTRACT file (#727.802), VETERAN data is derived from the
"^DD",727.802,727.802,19,23,3,0)
VETERAN (Y/N)? field (1901) in the PATIENT file (#2).
"^DD",727.802,727.802,19,"DT")
2960801
"^DD",727.802,727.802,20,0)
VIETNAM^S^Y:YES;N:NO;U:UNKNOWN;^0;21^Q
"^DD",727.802,727.802,20,.1)
Vietnam
"^DD",727.802,727.802,20,3)
Select the appropriate Vietnam service status for this patient.
"^DD",727.802,727.802,20,21,0)
^^1^1^2961014^^^^
"^DD",727.802,727.802,20,21,1,0)
Data is Y if this patient served in Vietnam, N if not, or U if unknown.
"^DD",727.802,727.802,20,23,0)
^^3^3^2961014^
"^DD",727.802,727.802,20,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.802,727.802,20,23,2,0)
in the ADMISSION EXTRACT file (#727.802), VIETNAM data is derived from the
"^DD",727.802,727.802,20,23,3,0)
VIETNAM SERVICE INDICATED? field (.32101) in the PATIENT file (#2).
"^DD",727.802,727.802,20,"DT")
2960801
"^DD",727.802,727.802,21,0)
AGENT ORANGE^S^Y:YES;N:NO;U:UNKNOWN;^0;22^Q
"^DD",727.802,727.802,21,.1)
Agent Orange
"^DD",727.802,727.802,21,3)
Select the appropriate Agent Orange status for this patient.
"^DD",727.802,727.802,21,21,0)
^^2^2^2961014^^^^
"^DD",727.802,727.802,21,21,1,0)
Data is Y if this patient was exposed to agent orange, N if not, or U if
"^DD",727.802,727.802,21,21,2,0)
unknown.
"^DD",727.802,727.802,21,23,0)
^^4^4^2961014^
"^DD",727.802,727.802,21,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.802,727.802,21,23,2,0)
in the ADMISSION EXTRACT file (#727.802), AGENT ORANGE data is derived
"^DD",727.802,727.802,21,23,3,0)
from the AGENT ORANGE EXPOS. INDICATED? field (.32102) in the PATIENT file
"^DD",727.802,727.802,21,23,4,0)
(#2).
"^DD",727.802,727.802,21,"DT")
2960801
"^DD",727.802,727.802,22,0)
RADIATION^S^Y:YES;N:NO;U:UNKNOWN;^0;23^Q
"^DD",727.802,727.802,22,.1)
Radiation
"^DD",727.802,727.802,22,3)
Select the appropriate radiation status for this patient.
"^DD",727.802,727.802,22,21,0)
^^2^2^2961014^^^^
"^DD",727.802,727.802,22,21,1,0)
Data is Y if this patient claims exposure to ionizing radiation, N if 
"^DD",727.802,727.802,22,21,2,0)
not, or U if unknown.
"^DD",727.802,727.802,22,23,0)
^^3^3^2961014^
"^DD",727.802,727.802,22,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.802,727.802,22,23,2,0)
in the ADMISSION EXTRACT file (#727.802), RADIATION data is derived from
"^DD",727.802,727.802,22,23,3,0)
the RADIATION EXPOSURE INDICATED? field (.32103) in the PATIENT file (#2).
"^DD",727.802,727.802,22,"DT")
2960801
"^DD",727.802,727.802,23,0)
POW^S^Y:YES;N:NO;U:UNKNOWN;^0;24^Q
"^DD",727.802,727.802,23,.1)
Prisoner of War
"^DD",727.802,727.802,23,3)
Select the appropriate POW status for this patient.
"^DD",727.802,727.802,23,21,0)
^^2^2^2961014^^^^
"^DD",727.802,727.802,23,21,1,0)
Data is Y if this patient was confined as a prisoner of war, N if not,
"^DD",727.802,727.802,23,21,2,0)
or U if unknown.
"^DD",727.802,727.802,23,23,0)
^^3^3^2961014^
"^DD",727.802,727.802,23,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.802,727.802,23,23,2,0)
in the ADMISSION EXTRACT file (#727.802), POW data is derived from the POW
"^DD",727.802,727.802,23,23,3,0)
STATUS INDICATED? field (.525) in the PATIENT file (#2).
"^DD",727.802,727.802,23,"DT")
2960801
"^DD",727.802,727.802,24,0)
PERIOD OF SERVICE^F^^0;25^K:$L(X)>1!($L(X)<1) X
"^DD",727.802,727.802,24,.1)
Period of Service
"^DD",727.802,727.802,24,3)
Enter the period of service code from the PERIOD OF SERVICE file (#21).
"^DD",727.802,727.802,24,21,0)
^^2^2^2961014^^^^
"^DD",727.802,727.802,24,21,1,0)
The period of service which best classifies this patient based on 
"^DD",727.802,727.802,24,21,2,0)
eligibility code.
"^DD",727.802,727.802,24,23,0)
^^7^7^2961014^
"^DD",727.802,727.802,24,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.802,727.802,24,23,2,0)
in the ADMISSION EXTRACT file (#727.802), PERIOD OF SERVICE data is
"^DD",727.802,727.802,24,23,3,0)
derived from the PERIOD OF SERVICE field (.323) in the PATIENT file (#2).
"^DD",727.802,727.802,24,23,4,0)
This field is a pointer to the PERIOD OF SERVICE file (#21). Using the
"^DD",727.802,727.802,24,23,5,0)
period of service pointer, the data is derived from the CODE field (.03)
"^DD",727.802,727.802,24,23,6,0)
in the PERIOD OF SERVICE file (#21). This code is a single alpha numeric
"^DD",727.802,727.802,24,23,7,0)
character.
"^DD",727.802,727.802,24,"DT")
2960801
"^DD",727.802,727.802,25,0)
MEANS TEST^S^A:CATEGORY A;B:CATEGORY B;C:CATEGORY C;P:PENDING ADJUDICATION;R:REQUIRES MEANS TEST;N:MEANS TEST NOT REQUIRED;E:EXEMPT;I:INCOMPLETE;L:NO LONGER APPLICABLE;M:NON-EXEMPT;^0;26^Q
"^DD",727.802,727.802,25,.1)
Means Test
"^DD",727.802,727.802,25,3)
Select the appropriate means test category.
"^DD",727.802,727.802,25,21,0)
^^1^1^2961014^^^^
"^DD",727.802,727.802,25,21,1,0)
The current means test category for this patient.
"^DD",727.802,727.802,25,23,0)
^^6^6^2961014^
"^DD",727.802,727.802,25,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.802,727.802,25,23,2,0)
in the ADMISSION EXTRACT file (#727.802), MEANS TEST data is derived from
"^DD",727.802,727.802,25,23,3,0)
the CURRENT MEANS TEST STATUS field (.14) in the PATIENT file (#2). This
"^DD",727.802,727.802,25,23,4,0)
field is a pointer to the MEANS TEST STATUS file (#408.32).  Using the
"^DD",727.802,727.802,25,23,5,0)
means test pointer, the data is derived from the CODE field (.02) in the
"^DD",727.802,727.802,25,23,6,0)
MEANS TEST STATUS file (#408.32).
"^DD",727.802,727.802,25,"DT")
2961024
"^DD",727.802,727.802,26,0)
MARITAL STATUS^P11'^DIC(11,^0;27^Q
"^DD",727.802,727.802,26,.1)
Marital Status
"^DD",727.802,727.802,26,3)
Enter the marital status for this patient.
"^DD",727.802,727.802,26,21,0)
^^1^1^2961014^^^^
"^DD",727.802,727.802,26,21,1,0)
Current marital status for this patient.
"^DD",727.802,727.802,26,23,0)
^^4^4^2961014^
"^DD",727.802,727.802,26,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.802,727.802,26,23,2,0)
in the ADMISSION EXTRACT file (#727.802), MARITAL STATUS data is derived
"^DD",727.802,727.802,26,23,3,0)
from the MARITAL STATUS field (.05) in the PATIENT file (#2). MARITAL
"^DD",727.802,727.802,26,23,4,0)
STATUS is a pointer to the MARITAL STATUS file (#11).
"^DD",727.802,727.802,26,"DT")
2960801
"^DD",727.802,727.802,27,0)
WARD^P44'^SC(^0;28^Q
"^DD",727.802,727.802,27,.1)
Ward
"^DD",727.802,727.802,27,3)
Enter the current ward location for this patient.
"^DD",727.802,727.802,27,21,0)
^^1^1^2961014^^^^
"^DD",727.802,727.802,27,21,1,0)
Current ward for this patient.
"^DD",727.802,727.802,27,23,0)
^^8^8^2961014^
"^DD",727.802,727.802,27,23,1,0)
Using the "ATT1" cross reference on the PATIENT MOVEMENT file (#405) and 
"^DD",727.802,727.802,27,23,2,0)
the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) in the
"^DD",727.802,727.802,27,23,3,0)
ADMISSION EXTRACT file (#727.802), WARD data is derived from the WARD
"^DD",727.802,727.802,27,23,4,0)
LOCATION field (.06) in the PATIENT MOVEMENT file (#405). This ward data
"^DD",727.802,727.802,27,23,5,0)
is a pointer to the WARD LOCATION file (#42). Using the ward pointer, the
"^DD",727.802,727.802,27,23,6,0)
data is derived from the HOSPITAL LOCATION FILE POINTER field (44) in the
"^DD",727.802,727.802,27,23,7,0)
WARD LOCATION file (#42) which is a pointer to the HOSPITAL LOCATION file
"^DD",727.802,727.802,27,23,8,0)
(#44).
"^DD",727.802,727.802,27,"DT")
2960806
"^DD",727.802,727.802,28,0)
TREATING SPECIALTY^P42.4'^DIC(42.4,^0;29^Q
"^DD",727.802,727.802,28,.1)
Treating Specialty
"^DD",727.802,727.802,28,3)
Enter the name of the treating specialty associated with this extract record.
"^DD",727.802,727.802,28,21,0)
^^1^1^2960918^^^^
"^DD",727.802,727.802,28,21,1,0)
The name of the treating specialty associated with this extract record.
"^DD",727.802,727.802,28,23,0)
^^8^8^2961015^^
"^DD",727.802,727.802,28,23,1,0)
Using the "ATT1" cross reference on the PATIENT MOVEMENT file (#405) and 
"^DD",727.802,727.802,28,23,2,0)
the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) in the
"^DD",727.802,727.802,28,23,3,0)
ADMISSION EXTRACT file (#727.802), TREATING SPECIALTY data is derived from
"^DD",727.802,727.802,28,23,4,0)
the FACILITY TREATING SPECIALTY field (.09) in the PATIENT MOVEMENT file
"^DD",727.802,727.802,28,23,5,0)
(#405). This facility treating specialty data is a pointer to the FACILITY
"^DD",727.802,727.802,28,23,6,0)
TREATING SPECIALTY file (#45.7). Using the SPECIALTY field (1) in the
"^DD",727.802,727.802,28,23,7,0)
FACILITY TREATING SPECIALTY file (#45.7), the pointer to the SPECIALTY
"^DD",727.802,727.802,28,23,8,0)
file (#42.4) is obtained.
"^DD",727.802,727.802,28,"DT")
2960918
"^DD",727.802,727.802,29,0)
ATTENDING PHYSICIAN^F^^0;30^K:$L(X)>11!($L(X)<1) X
"^DD",727.802,727.802,29,.1)
Attending Physician
"^DD",727.802,727.802,29,3)
Enter attending physician for this patient.
"^DD",727.802,727.802,29,21,0)
^^1^1^2961025^^^^
"^DD",727.802,727.802,29,21,1,0)
The attending physician assigned to this patient with this movement.
"^DD",727.802,727.802,29,23,0)
^^6^6^2961025^^^^
"^DD",727.802,727.802,29,23,1,0)
Using the "ATT1" cross reference on the PATIENT MOVEMENT file (#405) and
"^DD",727.802,727.802,29,23,2,0)
the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) in the
"^DD",727.802,727.802,29,23,3,0)
ADMISSION EXTRACT file (#727.802), ATTENDING PHYSICIAN data is derived
"^DD",727.802,727.802,29,23,4,0)
from the ATTENDING PHYSICIAN field (.19) in the PATIENT MOVEMENT file
"^DD",727.802,727.802,29,23,5,0)
(#405). This attending physician data is a pointer to the NEW PERSON file
"^DD",727.802,727.802,29,23,6,0)
(#200). This data is stored as "2"_pointer value.
"^DD",727.802,727.802,29,"DT")
2961015
"^DD",727.802,727.802,30,0)
EPISODE NUMBER^P405'^DGPM(^0;31^Q
"^DD",727.802,727.802,30,.1)
Episode Number
"^DD",727.802,727.802,30,3)
Enter the current movement number for this patient.
"^DD",727.802,727.802,30,21,0)
^^1^1^2961014^^^^
"^DD",727.802,727.802,30,21,1,0)
Current movement number for this patient.
"^DD",727.802,727.802,30,23,0)
^^5^5^2961015^^
"^DD",727.802,727.802,30,23,1,0)
Pointer to the PATIENT MOVEMENT file (#405). Using the "ATT1" cross 
"^DD",727.802,727.802,30,23,2,0)
reference on the PATIENT MOVEMENT file (#405) and the patient pointer 
"^DD",727.802,727.802,30,23,3,0)
(DFN) stored in the PATIENT NO. - DFN field (4) in the ADMISSION EXTRACT
"^DD",727.802,727.802,30,23,4,0)
file (#727.802), EPISODE NUMBER is the movement number (IEN) associated
"^DD",727.802,727.802,30,23,5,0)
with the PATIENT field (.03) in the PATIENT MOVEMENT file (#405).
"^DD",727.802,727.802,30,"DT")
2960801
"^DD",727.802,727.802,31,0)
DRG^P80.2'^ICD(^0;32^Q
"^DD",727.802,727.802,31,3)
Enter the appropriate DRG for this patient.
"^DD",727.802,727.802,31,21,0)
^^1^1^2961014^^^^
"^DD",727.802,727.802,31,21,1,0)
Current DRG for this patient with this movement.
"^DD",727.802,727.802,31,23,0)
^^7^7^2961015^^
"^DD",727.802,727.802,31,23,1,0)
Using the "ATT1" cross reference on the PATIENT MOVEMENT file (#405) and
"^DD",727.802,727.802,31,23,2,0)
the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) in the
"^DD",727.802,727.802,31,23,3,0)
ADMISSION EXTRACT file (#727.802), DRG data is derived from the PTF ENTRY
"^DD",727.802,727.802,31,23,4,0)
field (.16) in PATIENT MOVEMENT file (#405). This PTF entry data is a
"^DD",727.802,727.802,31,23,5,0)
pointer to the PTF file (#45). Uses the TRANSFER DRG field (20) within the
"^DD",727.802,727.802,31,23,6,0)
501 field (50) multiple in the PTF file (#45) to obtain the pointer value
"^DD",727.802,727.802,31,23,7,0)
to the DRG file (#80.2).
"^DD",727.802,727.802,31,"DT")
2910803
"^DD",727.802,727.802,32,0)
DIAGNOSIS^F^^0;33^K:$L(X)>7!($L(X)<1) X
"^DD",727.802,727.802,32,.1)
Diagnosis
"^DD",727.802,727.802,32,3)
Your answer must be 1 to 7 characters in length.
"^DD",727.802,727.802,32,21,0)
^^1^1^2961014^^^^
"^DD",727.802,727.802,32,21,1,0)
ICD diagnosis for this patient.
"^DD",727.802,727.802,32,23,0)
^^9^9^2961015^^
"^DD",727.802,727.802,32,23,1,0)
Using the "ATT1" cross reference on the PATIENT MOVEMENT file (#405) 
"^DD",727.802,727.802,32,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) in
"^DD",727.802,727.802,32,23,3,0)
the ADMISSION EXTRACT file (#727.802), DIAGNOSIS data is derived from the
"^DD",727.802,727.802,32,23,4,0)
PTF ENTRY field (.16) in the PATIENT MOVEMENT file (#405).  This PTF entry
"^DD",727.802,727.802,32,23,5,0)
data is a pointer to the PTF file (#45). Uses the ICD 1 field (5) within
"^DD",727.802,727.802,32,23,6,0)
the 501 field (50) multiple in the PTF file (#45) to obtain the pointer
"^DD",727.802,727.802,32,23,7,0)
value to the ICD DIAGNOSIS file (#80). This ICD diagnosis pointer value is
"^DD",727.802,727.802,32,23,8,0)
used to pull the DIAGNOSIS data from the CODE NUMBER field (.01) in the
"^DD",727.802,727.802,32,23,9,0)
ICD DIAGNOSIS file (#80).
"^DD",727.802,727.802,32,"DT")
2961024
"^DD",727.802,727.802,33,0)
TIME^FO^^0;34^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.802,727.802,33,.1)
Time
"^DD",727.802,727.802,33,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.802,727.802,33,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.802,727.802,33,3)
Answer must be 6 characters in length.
"^DD",727.802,727.802,33,21,0)
^^2^2^2970922^^^^
"^DD",727.802,727.802,33,21,1,0)
A 6-character numeric string which represents the time of day at
"^DD",727.802,727.802,33,21,2,0)
which the admission occurred.
"^DD",727.802,727.802,33,23,0)
^^6^6^2970922^^^^
"^DD",727.802,727.802,33,23,1,0)
Data source:
"^DD",727.802,727.802,33,23,2,0)
 
"^DD",727.802,727.802,33,23,3,0)
PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.802,727.802,33,23,4,0)
 
"^DD",727.802,727.802,33,23,5,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.802,727.802,33,23,6,0)
cannot be determined, then "000300" is used as default.
"^DD",727.802,727.802,33,"DT")
2970924
"^DD",727.802,727.802,34,0)
PRIMARY CARE PROVIDER^F^^0;35^K:$L(X)>11!($L(X)<1) X
"^DD",727.802,727.802,34,.1)
Primary Care Provider
"^DD",727.802,727.802,34,3)
Enter primary care provider assigned to this patient.
"^DD",727.802,727.802,34,21,0)
^^1^1^2961030^^^
"^DD",727.802,727.802,34,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.802,727.802,34,23,0)
^^6^6^2961030^^
"^DD",727.802,727.802,34,23,1,0)
Using the DATE/TIME field (.01) from the PATIENT MOVEMENT file (#405) 
"^DD",727.802,727.802,34,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) 
"^DD",727.802,727.802,34,23,3,0)
in the ADMISSION EXTRACT file (#727.802), a call is made to the 
"^DD",727.802,727.802,34,23,4,0)
Scheduling API, OUTPTPR^SDUTL3. The API returns the provider's internal 
"^DD",727.802,727.802,34,23,5,0)
entry number and name from the NEW PERSON file (#200). Only the pointer 
"^DD",727.802,727.802,34,23,6,0)
(IEN) to File 200 is transmitted.
"^DD",727.802,727.802,34,"DT")
2961015
"^DD",727.802,727.802,35,0)
RACE^F^^0;36^K:$L(X)>1!($L(X)<1) X
"^DD",727.802,727.802,35,.1)
Race
"^DD",727.802,727.802,35,3)
Enter race ABBREVIATION for this patient.
"^DD",727.802,727.802,35,21,0)
^^1^1^2961030^^^^
"^DD",727.802,727.802,35,21,1,0)
Race ABBREVIATION for this patient.
"^DD",727.802,727.802,35,23,0)
^^3^3^2961030^^^^
"^DD",727.802,727.802,35,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4),
"^DD",727.802,727.802,35,23,2,0)
RACE data is shown as the ABBREVIATION field (2) of the RACE file (#10)
"^DD",727.802,727.802,35,23,3,0)
entry pointed to by the RACE field (.06) in the PATIENT file (#2).
"^DD",727.802,727.802,35,"DT")
2961014
"^DD",727.802,727.802,36,0)
PRIMARY WARD PROVIDER^P200'^VA(200,^0;37^Q
"^DD",727.802,727.802,36,21,0)
^^1^1^2970918^
"^DD",727.802,727.802,36,21,1,0)
To be used for future development; currently set to null.
"^DD",727.802,727.802,36,23,0)
^^1^1^2970918^
"^DD",727.802,727.802,36,23,1,0)
For future development.
"^DD",727.802,727.802,36,"DT")
2970918
"^DD",727.803,727.803,0)
FIELD^^30^31
"^DD",727.803,727.803,0,"DDA")
N
"^DD",727.803,727.803,0,"DIK")
ECX803
"^DD",727.803,727.803,0,"DIKOLD")
ECX803
"^DD",727.803,727.803,0,"DT")
2970918
"^DD",727.803,727.803,0,"IX","AC",727.803,2)

"^DD",727.803,727.803,0,"IX","AINV",727.803,.01)

"^DD",727.803,727.803,0,"NM","CLINIC EXTRACT")

"^DD",727.803,727.803,0,"VRPK")
DSS EXTRACTS
"^DD",727.803,727.803,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.803,727.803,.01,.1)
Sequence Number
"^DD",727.803,727.803,.01,1,0)
^.1
"^DD",727.803,727.803,.01,1,1,0)
727.803^AINV^MUMPS
"^DD",727.803,727.803,.01,1,1,1)
S ^ECX(727.803,"AINV",-X,DA)=""
"^DD",727.803,727.803,.01,1,1,2)
K ^ECX(727.803,"AINV",-X,DA)
"^DD",727.803,727.803,.01,1,1,3)
DO NOT DELETE.
"^DD",727.803,727.803,.01,1,1,"%D",0)
^^3^3^2960808^^^
"^DD",727.803,727.803,.01,1,1,"%D",1,0)
This is an inverse entry cross reference.  It is used to find the
"^DD",727.803,727.803,.01,1,1,"%D",2,0)
last entry in the file.  It is essential for the management of the
"^DD",727.803,727.803,.01,1,1,"%D",3,0)
extract and the purge of extract data.
"^DD",727.803,727.803,.01,1,1,"DT")
2921016
"^DD",727.803,727.803,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",727.803,727.803,.01,21,0)
^^1^1^2960812^^^^
"^DD",727.803,727.803,.01,21,1,0)
The record number for this extract entry.
"^DD",727.803,727.803,.01,23,0)
^^1^1^2960812^^^^
"^DD",727.803,727.803,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",727.803,727.803,.01,"DT")
2960812
"^DD",727.803,727.803,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.803,727.803,1,.1)
Year/Month
"^DD",727.803,727.803,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.803,727.803,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.803,727.803,1,3)
Answer must be 6 characters in length.
"^DD",727.803,727.803,1,21,0)
^^2^2^2970922^^^^
"^DD",727.803,727.803,1,21,1,0)
A six character numeric string representing the year and the month
"^DD",727.803,727.803,1,21,2,0)
for which this extract was performed.
"^DD",727.803,727.803,1,23,0)
^^1^1^2970922^^^^
"^DD",727.803,727.803,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.803,727.803,1,"DT")
2970924
"^DD",727.803,727.803,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.803,727.803,2,.1)
Extract Number
"^DD",727.803,727.803,2,1,0)
^.1
"^DD",727.803,727.803,2,1,1,0)
727.803^AC
"^DD",727.803,727.803,2,1,1,1)
S ^ECX(727.803,"AC",$E(X,1,30),DA)=""
"^DD",727.803,727.803,2,1,1,2)
K ^ECX(727.803,"AC",$E(X,1,30),DA)
"^DD",727.803,727.803,2,1,1,3)
DO NOT DELETE.
"^DD",727.803,727.803,2,1,1,"%D",0)
^^2^2^2960808^^
"^DD",727.803,727.803,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data
"^DD",727.803,727.803,2,1,1,"%D",2,0)
in this file.
"^DD",727.803,727.803,2,1,1,"DT")
2910802
"^DD",727.803,727.803,2,3)
Enter the extract number for this extract.
"^DD",727.803,727.803,2,21,0)
^^2^2^2960812^^^^
"^DD",727.803,727.803,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727) for this 
"^DD",727.803,727.803,2,21,2,0)
extract.
"^DD",727.803,727.803,2,23,0)
^^2^2^2960812^^^^
"^DD",727.803,727.803,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is to
"^DD",727.803,727.803,2,23,2,0)
pick up the header for the mail message.
"^DD",727.803,727.803,2,"DT")
2960812
"^DD",727.803,727.803,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.803,727.803,3,.1)
Facility
"^DD",727.803,727.803,3,3)
Enter the station number where this extract was performed.
"^DD",727.803,727.803,3,21,0)
^^1^1^2970122^^^^
"^DD",727.803,727.803,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.803,727.803,3,23,0)
^^8^8^2970123^^^^
"^DD",727.803,727.803,3,23,1,0)
An indicator of the division where this event happened. 
"^DD",727.803,727.803,3,23,2,0)
For scheduled appointments and appended EKG visits, it is derived 
"^DD",727.803,727.803,3,23,3,0)
from the DIVISION field (3.5) of the HOSPITAL LOCATION file (#44).
"^DD",727.803,727.803,3,23,4,0)
For dispositions, stand-alones, and appended lab and x-ray visits, 
"^DD",727.803,727.803,3,23,5,0)
it is derived from the DIVISION field (3.5) in the HOSPITAL LOCATION 
"^DD",727.803,727.803,3,23,6,0)
file (#44) for the entry identified in the LOCATION field (.04) in 
"^DD",727.803,727.803,3,23,7,0)
the OUTPATIENT ENCOUNTER file (#409.68). The field points to the 
"^DD",727.803,727.803,3,23,8,0)
MEDICAL CENTER DIVISION file (#40.8).
"^DD",727.803,727.803,3,"DT")
2961014
"^DD",727.803,727.803,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.803,727.803,4,.1)
Patient No. - DFN
"^DD",727.803,727.803,4,3)
Enter the name of the patient for this extract record.
"^DD",727.803,727.803,4,21,0)
^^1^1^2970122^^^^
"^DD",727.803,727.803,4,21,1,0)
The name of the patient for this extract record.
"^DD",727.803,727.803,4,23,0)
^^7^7^2970123^^^^
"^DD",727.803,727.803,4,23,1,0)
This field points to the NAME field (.01) of the PATIENT file (#2).
"^DD",727.803,727.803,4,23,2,0)
For scheduled appointments and appended EKG visits, it is derived 
"^DD",727.803,727.803,4,23,3,0)
from the PATIENT field (.01) within the APPOINTMENT field (1900) 
"^DD",727.803,727.803,4,23,4,0)
multiple of the HOSPITAL LOCATION file (#44).
"^DD",727.803,727.803,4,23,5,0)
For dispositions, stand-alones, and appended lab and x-ray visits, 
"^DD",727.803,727.803,4,23,6,0)
it is derived from the PATIENT field (.02) in the OUTPATIENT 
"^DD",727.803,727.803,4,23,7,0)
ENCOUNTER file (#409.68).
"^DD",727.803,727.803,4,"DT")
2961014
"^DD",727.803,727.803,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.803,727.803,5,.1)
Social Security Number
"^DD",727.803,727.803,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.803,727.803,5,21,0)
^^1^1^2960812^^^^
"^DD",727.803,727.803,5,21,1,0)
The patient's social security number.
"^DD",727.803,727.803,5,23,0)
^^3^3^2961014^
"^DD",727.803,727.803,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.803,727.803,5,23,2,0)
in the CLINIC EXTRACT file (#727.803), SSN data is derived from the SOCIAL
"^DD",727.803,727.803,5,23,3,0)
SECURITY NUMBER field (.09) in the PATIENT file (#2).
"^DD",727.803,727.803,5,"DT")
2960812
"^DD",727.803,727.803,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.803,727.803,6,.1)
Name
"^DD",727.803,727.803,6,3)
Your answer must be 4 characters in length.
"^DD",727.803,727.803,6,21,0)
^^1^1^2960812^^^^
"^DD",727.803,727.803,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.803,727.803,6,23,0)
^^4^4^2961014^
"^DD",727.803,727.803,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.803,727.803,6,23,2,0)
in the CLINIC EXTRACT file (#727.803), NAME data is derived from the NAME
"^DD",727.803,727.803,6,23,3,0)
field (.01) in the PATIENT file (#2). The first four characters of the
"^DD",727.803,727.803,6,23,4,0)
first "," piece are used, padded with trailing spaces if necessary.
"^DD",727.803,727.803,6,"DT")
2960812
"^DD",727.803,727.803,7,0)
IN OUT PATIENT INDICATOR^P40.9'^DIC(40.9,^0;8^Q
"^DD",727.803,727.803,7,.1)
In Out Patient Indicator
"^DD",727.803,727.803,7,3)
Enter the appropriate inpatient or outpatient indicator.
"^DD",727.803,727.803,7,21,0)
^^2^2^2971117^^^^
"^DD",727.803,727.803,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for
"^DD",727.803,727.803,7,21,2,0)
this extract entry.
"^DD",727.803,727.803,7,23,0)
^^4^4^2971117^^
"^DD",727.803,727.803,7,23,1,0)
This field is initialized to a 1, indicating an outpatient status. If 
"^DD",727.803,727.803,7,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.803,727.803,7,23,3,0)
patient movement number, then the field is reset to a 3 indicating 
"^DD",727.803,727.803,7,23,4,0)
inpatient status.
"^DD",727.803,727.803,7,"DT")
2960812
"^DD",727.803,727.803,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.803,727.803,8,.1)
Day
"^DD",727.803,727.803,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.803,727.803,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.803,727.803,8,3)
Answer must be 8 characters in length.
"^DD",727.803,727.803,8,21,0)
^^2^2^2970923^^^^
"^DD",727.803,727.803,8,21,1,0)
This 8-character string represents the date on which the clinic
"^DD",727.803,727.803,8,21,2,0)
appointment occurred.
"^DD",727.803,727.803,8,23,0)
^^14^14^2970923^^^^
"^DD",727.803,727.803,8,23,1,0)
Data source:
"^DD",727.803,727.803,8,23,2,0)
 
"^DD",727.803,727.803,8,23,3,0)
For scheduled appointments and appended EKG visits -- 
"^DD",727.803,727.803,8,23,4,0)
HOSPITAL LOCATION file (#44); APPOINTMENT sub-file (#44.001);
"^DD",727.803,727.803,8,23,5,0)
   APPOINTMENT DATE/TIME field (#.01)
"^DD",727.803,727.803,8,23,6,0)
 
"^DD",727.803,727.803,8,23,7,0)
For dispositions, stand-alones, and appended lab and x-ray visits --
"^DD",727.803,727.803,8,23,8,0)
OUTPATIENT ENCOUNTER file (#409.68); DATE field (#.01)
"^DD",727.803,727.803,8,23,9,0)
 
"^DD",727.803,727.803,8,23,10,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.803,727.803,8,23,11,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.803,727.803,8,23,12,0)
then a default is used.  The default date value is the value of the 
"^DD",727.803,727.803,8,23,13,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.803,727.803,8,23,14,0)
Year 2000 compliant per vendor.
"^DD",727.803,727.803,8,"DT")
2970924
"^DD",727.803,727.803,9,0)
FEEDER KEY^F^^0;10^K:$L(X)>14!($L(X)<14) X
"^DD",727.803,727.803,9,.1)
Feeder Key
"^DD",727.803,727.803,9,3)
Your answer must be 14 characters in length.
"^DD",727.803,727.803,9,21,0)
^^7^7^2970915^^^^
"^DD",727.803,727.803,9,21,1,0)
Feeder key is a fixed length field. The ACTION TO SEND field (5) of the 
"^DD",727.803,727.803,9,21,2,0)
CLINIC AND STOP CODES file (#728.44) for this clinic determines the 
"^DD",727.803,727.803,9,21,3,0)
construction of this key. It is derived from DSS selected stop codes and 
"^DD",727.803,727.803,9,21,4,0)
credit stop codes (or MAS selected stop codes and credit stop codes in 
"^DD",727.803,727.803,9,21,5,0)
the absence of DSS selected ones), length of appointment, clinic 
"^DD",727.803,727.803,9,21,6,0)
internal entry number in the CLINICS AND STOP CODES file (#728.44),
"^DD",727.803,727.803,9,21,7,0)
and whether or not this was a no show appointment.
"^DD",727.803,727.803,9,23,0)
^^36^36^2970915^^^^
"^DD",727.803,727.803,9,23,1,0)
The feeder key is a 14 character code of the form SSSCCCTTTPPPPN;
"^DD",727.803,727.803,9,23,2,0)
where
"^DD",727.803,727.803,9,23,3,0)
   SSS = primary stop code
"^DD",727.803,727.803,9,23,4,0)
   CCC = secondary stop code
"^DD",727.803,727.803,9,23,5,0)
   TTT = appointment length in minutes
"^DD",727.803,727.803,9,23,6,0)
   PPPP = National Clinic code
"^DD",727.803,727.803,9,23,7,0)
   N = no-show indicator
"^DD",727.803,727.803,9,23,8,0)
  
"^DD",727.803,727.803,9,23,9,0)
One of three transmission styles may be assigned to the clinic in the 
"^DD",727.803,727.803,9,23,10,0)
CLINICS AND STOP CODES file (#728.44).
"^DD",727.803,727.803,9,23,11,0)
  
"^DD",727.803,727.803,9,23,12,0)
For all styles, SSS and CCC are taken from the CLINICS AND STOP 
"^DD",727.803,727.803,9,23,13,0)
CODES file (#728.44).  The DSS STOP CODE field (#3) and DSS CEDIT 
"^DD",727.803,727.803,9,23,14,0)
STOP CODE field (#4) are used for SSS and CCC respectively.  If field #3
"^DD",727.803,727.803,9,23,15,0)
is null, then the STOP CODE field (#1) and CREDIT STOP CODE field 
"^DD",727.803,727.803,9,23,16,0)
(#2) are used.  If field #1 is null, then data is taken from the STOP CODE 
"^DD",727.803,727.803,9,23,17,0)
NUMBER field (#8) and the CREDIT STOP CODE field (#2503) of 
"^DD",727.803,727.803,9,23,18,0)
the HOSPITAL LOCATION file (#44).  If field #8 is null, then both
"^DD",727.803,727.803,9,23,19,0)
SSS and CCC are set to "000".
"^DD",727.803,727.803,9,23,20,0)
   
"^DD",727.803,727.803,9,23,21,0)
For style 1, CCC is always "000" and PPPP is always "0000".
"^DD",727.803,727.803,9,23,22,0)
  
"^DD",727.803,727.803,9,23,23,0)
Styles 2 and 3, defined in previous versions of DSS Extracts, are no longer
"^DD",727.803,727.803,9,23,24,0)
valid.
"^DD",727.803,727.803,9,23,25,0)
   
"^DD",727.803,727.803,9,23,26,0)
For style 4,  PPPP is the National Clinic code assigned to this clinic; 
"^DD",727.803,727.803,9,23,27,0)
it is taken from the NATIONAL CLINIC filed (#7) of file #728.44.  The
"^DD",727.803,727.803,9,23,28,0)
original source if this data is the NATIONAL CLINIC file (#728,441).
"^DD",727.803,727.803,9,23,29,0)
   
"^DD",727.803,727.803,9,23,30,0)
For style 5, PPPP is always "0000".
"^DD",727.803,727.803,9,23,31,0)
  
"^DD",727.803,727.803,9,23,32,0)
In all styles, N is set to "N" if the STATUS field (#3) in the APPOINMENT 
"^DD",727.803,727.803,9,23,33,0)
sub-file (# 2.98) of the PATIENT file (#2) is set to "NO-SHOW".
"^DD",727.803,727.803,9,23,34,0)
   
"^DD",727.803,727.803,9,23,35,0)
In all styles SSS, CCC, TTT and PPPP are padded with leading zeroes as
"^DD",727.803,727.803,9,23,36,0)
needed; the Feeder is always exactly 14 characters.
"^DD",727.803,727.803,9,"DT")
2960812
"^DD",727.803,727.803,10,0)
OVERBOOK INDICATOR^S^1:OVERBOOK;^0;11^Q
"^DD",727.803,727.803,10,.1)
Overbook Indicator
"^DD",727.803,727.803,10,3)
Enter 1 for an overbook appointment; 0 or null if not an overbook.
"^DD",727.803,727.803,10,21,0)
^^1^1^2970121^^^^
"^DD",727.803,727.803,10,21,1,0)
Indicates if this was an overbook appointment for this patient.
"^DD",727.803,727.803,10,23,0)
^^3^3^2970121^^^^
"^DD",727.803,727.803,10,23,1,0)
OVERBOOK INDICATOR is derived from the OVERBOOK field (9) of the PATIENT 
"^DD",727.803,727.803,10,23,2,0)
field (2) multiple within in the APPOINTMENT field (1900) multiple of 
"^DD",727.803,727.803,10,23,3,0)
the HOSPITAL LOCATION file (#44).
"^DD",727.803,727.803,10,"DT")
2970121
"^DD",727.803,727.803,11,0)
CLINIC NAME^P44'^SC(^0;12^Q
"^DD",727.803,727.803,11,.1)
Clinic Name
"^DD",727.803,727.803,11,3)
Enter the name of the clinic.
"^DD",727.803,727.803,11,21,0)
^^1^1^2961014^^^
"^DD",727.803,727.803,11,21,1,0)
Name of the clinic.
"^DD",727.803,727.803,11,23,0)
^^1^1^2961014^
"^DD",727.803,727.803,11,23,1,0)
Internal entry number of the clinic from the HOSPITAL LOCATION file (#44).
"^DD",727.803,727.803,11,"DT")
2960812
"^DD",727.803,727.803,12,0)
MOVEMENT FILE #^P405'^DGPM(^0;13^Q
"^DD",727.803,727.803,12,.1)
Movement File Number
"^DD",727.803,727.803,12,3)
Enter the patient movement number associated with this extract record.
"^DD",727.803,727.803,12,21,0)
^^1^1^2961014^^^^
"^DD",727.803,727.803,12,21,1,0)
Current patient movement record associated with this extract record.
"^DD",727.803,727.803,12,23,0)
^^4^4^2961014^^^^
"^DD",727.803,727.803,12,23,1,0)
A call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.803,727.803,12,23,2,0)
patient movement number (indicating inpatient status). This field is set 
"^DD",727.803,727.803,12,23,3,0)
to the value of VAIP(1), which is a pointer to the PATIENT MOVEMENT file 
"^DD",727.803,727.803,12,23,4,0)
(#405).
"^DD",727.803,727.803,12,"DT")
2960812
"^DD",727.803,727.803,13,0)
TREATING SPECIALTY^P42.4'^DIC(42.4,^0;14^Q
"^DD",727.803,727.803,13,.1)
Treating Specialty
"^DD",727.803,727.803,13,3)
Enter the name of the treating specialty associated with this extract record.
"^DD",727.803,727.803,13,21,0)
^^1^1^2961014^^^^
"^DD",727.803,727.803,13,21,1,0)
The name of the treating specialty associated with this extract record.
"^DD",727.803,727.803,13,23,0)
^^6^6^2961014^^^^
"^DD",727.803,727.803,13,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.803,727.803,13,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.803,727.803,13,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.803,727.803,13,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.803,727.803,13,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.803,727.803,13,23,6,0)
SPECIALTY file (#42.4).
"^DD",727.803,727.803,13,"DT")
2960812
"^DD",727.803,727.803,14,0)
TIME^F^^0;15^K:$L(X)>6!($L(X)<6) X
"^DD",727.803,727.803,14,.1)
Time
"^DD",727.803,727.803,14,3)
Answer must be 6 characters in length.
"^DD",727.803,727.803,14,21,0)
^^1^1^2970918^^^^
"^DD",727.803,727.803,14,21,1,0)
A 6-character numeric string which represents the appointment time.
"^DD",727.803,727.803,14,23,0)
^^12^12^2970918^^^^
"^DD",727.803,727.803,14,23,1,0)
A six-character string of format HHMMSS which represents the time
"^DD",727.803,727.803,14,23,2,0)
(military time) of the appointment.
"^DD",727.803,727.803,14,23,3,0)
 
"^DD",727.803,727.803,14,23,4,0)
For scheduled appointments and appended EKG visits --
"^DD",727.803,727.803,14,23,5,0)
HOSPITAL LOCATION file (#44); APPOINTMENT sub-file (#44.001);
"^DD",727.803,727.803,14,23,6,0)
   APPOINTMENT DATA/TIME field (#.01)
"^DD",727.803,727.803,14,23,7,0)
  
"^DD",727.803,727.803,14,23,8,0)
For dispositions, stand-alones, and appended lab and x-ray visits -- 
"^DD",727.803,727.803,14,23,9,0)
OUTPATIENT ENCOUNTER file (#409.68); DATE field (#.01)
"^DD",727.803,727.803,14,23,10,0)
 
"^DD",727.803,727.803,14,23,11,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.803,727.803,14,23,12,0)
cannot be determined, then "000300" is used as default.
"^DD",727.803,727.803,14,"DT")
2970915
"^DD",727.803,727.803,15,0)
PRIMARY CARE TEAM^F^^0;16^K:$L(X)>4!($L(X)<1) X
"^DD",727.803,727.803,15,.1)
Primary Care Team
"^DD",727.803,727.803,15,3)
Enter primary care team assigned to this patient.
"^DD",727.803,727.803,15,21,0)
^^1^1^2970123^^^^
"^DD",727.803,727.803,15,21,1,0)
The primary care team assigned to this patient.
"^DD",727.803,727.803,15,23,0)
^^10^10^2970123^^^
"^DD",727.803,727.803,15,23,1,0)
For scheduled appointments and appended EKG visits, use the 
"^DD",727.803,727.803,15,23,2,0)
APPOINTMENT DATE/TIME field (.01) in the APPOINTMENT field (1900) 
"^DD",727.803,727.803,15,23,3,0)
multiple of the HOSPITAL LOCATION file (#44).
"^DD",727.803,727.803,15,23,4,0)
For dispositions, stand-alones, and appended lab and x-ray visits, 
"^DD",727.803,727.803,15,23,5,0)
use the DATE field (.01) in the OUTPATIENT ENCOUNTER file (#409.68). 
"^DD",727.803,727.803,15,23,6,0)
The date along with the patient pointer (DFN) stored in the PATIENT 
"^DD",727.803,727.803,15,23,7,0)
NO. - DFN field (4) in the CLINIC EXTRACT file (#727.803) is used to 
"^DD",727.803,727.803,15,23,8,0)
make a call to the Scheduling API, OUTPTTM^SDUTL3. The API returns 
"^DD",727.803,727.803,15,23,9,0)
the team's internal entry number and name from the TEAM file 
"^DD",727.803,727.803,15,23,10,0)
(#4.51). Only the pointer (IEN) to File 404.51 is transmitted.
"^DD",727.803,727.803,15,"DT")
2961107
"^DD",727.803,727.803,16,0)
PRIMARY CARE PROVIDER^F^^0;17^K:$L(X)>11!($L(X)<1) X
"^DD",727.803,727.803,16,.1)
Primary Care Provider
"^DD",727.803,727.803,16,3)
Enter primary care provider assigned to this patient.
"^DD",727.803,727.803,16,21,0)
^^1^1^2970123^^^
"^DD",727.803,727.803,16,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.803,727.803,16,23,0)
^^10^10^2970123^^^
"^DD",727.803,727.803,16,23,1,0)
For scheduled appointments and appended EKG visits, use the 
"^DD",727.803,727.803,16,23,2,0)
APPOINTMENT DATE/TIME field (.01) in the APPOINTMENT field (1900) 
"^DD",727.803,727.803,16,23,3,0)
multiple of the HOSPITAL LOCATION file (#44).
"^DD",727.803,727.803,16,23,4,0)
For dispositions, stand-alones, and appended lab and x-ray visits, 
"^DD",727.803,727.803,16,23,5,0)
use the DATE field (.01) in the OUTPATIENT ENCOUNTER file 409.68). 
"^DD",727.803,727.803,16,23,6,0)
The date along with the patient pointer (DFN) stored in the PATIENT 
"^DD",727.803,727.803,16,23,7,0)
NO. - DFN field (4) in the CLINIC EXTRACT file (#727.803) is used to 
"^DD",727.803,727.803,16,23,8,0)
make a call to the Scheduling API, OUTPTPR^SDUTL3. The API returns 
"^DD",727.803,727.803,16,23,9,0)
the provider's internal entry number and name from the NEW PERSON 
"^DD",727.803,727.803,16,23,10,0)
file (#200). Only the pointer (IEN) to File 200 is transmitted.
"^DD",727.803,727.803,16,"DT")
2961015
"^DD",727.803,727.803,17,0)
PROVIDER^F^^0;18^K:$L(X)>11!($L(X)<1) X
"^DD",727.803,727.803,17,.1)
Provider
"^DD",727.803,727.803,17,3)
Enter provider for this record.
"^DD",727.803,727.803,17,21,0)
^^1^1^2970123^^^
"^DD",727.803,727.803,17,21,1,0)
The provider assigned to this patient.
"^DD",727.803,727.803,17,23,0)
^^7^7^2970123^^
"^DD",727.803,727.803,17,23,1,0)
Using the internal entry number for the encounter in the OUTPATIENT 
"^DD",727.803,727.803,17,23,2,0)
ENCOUNTER file (#409.68), the VISIT FILE ENTRY field (.05) is 
"^DD",727.803,727.803,17,23,3,0)
determined. This entry is used to make a call to the Patient Care 
"^DD",727.803,727.803,17,23,4,0)
Encounter API, ENCEVENT^PXAPI. The API returns all visit data in the 
"^DD",727.803,727.803,17,23,5,0)
TMP("PXKENC",$J) array. The first provider identified as "primary" 
"^DD",727.803,727.803,17,23,6,0)
from the array is used. A default value of null is used if no 
"^DD",727.803,727.803,17,23,7,0)
"primary" provider is found.
"^DD",727.803,727.803,17,"DT")
2961015
"^DD",727.803,727.803,18,0)
CPT CODE^F^^0;19^K:$L(X)>8!($L(X)<5) X
"^DD",727.803,727.803,18,.1)
CPT Code
"^DD",727.803,727.803,18,3)
Enter CPT Code, "-", and 2 character modifier.
"^DD",727.803,727.803,18,21,0)
^^2^2^2970123^^^
"^DD",727.803,727.803,18,21,1,0)
The Current Procedural Terminology (CPT) code for the procedure 
"^DD",727.803,727.803,18,21,2,0)
performed.
"^DD",727.803,727.803,18,23,0)
^^6^6^2970123^^
"^DD",727.803,727.803,18,23,1,0)
Using the internal entry number for the encounter in the OUTPATIENT 
"^DD",727.803,727.803,18,23,2,0)
ENCOUNTER file (#409.68), the VISIT FILE ENTRY field (.05) is 
"^DD",727.803,727.803,18,23,3,0)
determined. This entry is used to make a call to the Patient Care 
"^DD",727.803,727.803,18,23,4,0)
Encounter API, ENCEVENT^PXAPI. The API returns all visit data in the 
"^DD",727.803,727.803,18,23,5,0)
TMP("PXKENC",$J) array. The first CPT code identified from the array 
"^DD",727.803,727.803,18,23,6,0)
is used. A default value of 99199 is used if no CPT code is found.
"^DD",727.803,727.803,18,"DT")
2961017
"^DD",727.803,727.803,19,0)
ICD-9 CODE^F^^0;20^K:$L(X)>7!($L(X)<1) X
"^DD",727.803,727.803,19,.1)
ICD-9 Code
"^DD",727.803,727.803,19,3)
Enter ICD-9 code for this clinic visit.
"^DD",727.803,727.803,19,21,0)
^^1^1^2970123^^
"^DD",727.803,727.803,19,21,1,0)
The ICD-9 code for this clinic visit.
"^DD",727.803,727.803,19,23,0)
^^8^8^2970123^^^
"^DD",727.803,727.803,19,23,1,0)
Using the internal entry number for the encounter in the OUTPATIENT 
"^DD",727.803,727.803,19,23,2,0)
ENCOUNTER file (#409.68), the VISIT FILE ENTRY field (.05) is 
"^DD",727.803,727.803,19,23,3,0)
determined. This entry is used to make a call to the Patient Care 
"^DD",727.803,727.803,19,23,4,0)
Encounter API, ENCEVENT^PXAPI. The API returns all visit data in the 
"^DD",727.803,727.803,19,23,5,0)
TMP("PXKENC",$J) array. The first ICD9 code identified as "primary" 
"^DD",727.803,727.803,19,23,6,0)
from the array is used. A default value of 799.9 is used if no 
"^DD",727.803,727.803,19,23,7,0)
"primary" ICD9 code is found. ICD-9 CODE is derived from the ICD 
"^DD",727.803,727.803,19,23,8,0)
DIAGNOSIS file (#80).
"^DD",727.803,727.803,19,"DT")
2961107
"^DD",727.803,727.803,20,0)
DATE OF BIRTH^FO^^0;21^K:$L(X)>8!($L(X)<8) X
"^DD",727.803,727.803,20,.1)
Date of Birth
"^DD",727.803,727.803,20,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.803,727.803,20,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.803,727.803,20,3)
Answer must be 8 characters in length.
"^DD",727.803,727.803,20,21,0)
^^1^1^2970918^^^^
"^DD",727.803,727.803,20,21,1,0)
The patient's date of birth between December 31,1870 and today's date.
"^DD",727.803,727.803,20,23,0)
^^10^10^2970918^^^^
"^DD",727.803,727.803,20,23,1,0)
Date source:
"^DD",727.803,727.803,20,23,2,0)
 
"^DD",727.803,727.803,20,23,3,0)
HOSPITAL LOCATION file (#44); APPOINTMENT sub-file (#44.0001);
"^DD",727.803,727.803,20,23,4,0)
   PATIENT sub-file (#44.003); PATIENT field (#.01)
"^DD",727.803,727.803,20,23,5,0)
PATIENT file (#2); DATE OF BIRTH field (#.03)
"^DD",727.803,727.803,20,23,6,0)
 
"^DD",727.803,727.803,20,23,7,0)
If Date of Birth cannot be determined, then January 1, 1942, is
"^DD",727.803,727.803,20,23,8,0)
used as default.  The data element is always exactly 8 numberic
"^DD",727.803,727.803,20,23,9,0)
characters in length.  Format is YYYYMMDD.  Year 2000 compliant
"^DD",727.803,727.803,20,23,10,0)
per vendor.
"^DD",727.803,727.803,20,"DT")
2970924
"^DD",727.803,727.803,21,0)
ELIGIBILITY^F^^0;22^K:$L(X)>1!($L(X)<1)!'(X?1U) X
"^DD",727.803,727.803,21,.1)
Eligibility
"^DD",727.803,727.803,21,3)
Your answer must be 1 character in length.
"^DD",727.803,727.803,21,21,0)
^^1^1^2961107^^^
"^DD",727.803,727.803,21,21,1,0)
Appropriate eligibility code based on veteran or non-veteran status.
"^DD",727.803,727.803,21,23,0)
^^9^9^2961107^^^
"^DD",727.803,727.803,21,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field
"^DD",727.803,727.803,21,23,2,0)
(4) in the CLINIC EXTRACT file (#727.803), ELIGIBILITY data is derived 
"^DD",727.803,727.803,21,23,3,0)
from the PRIMARY ELIGIBILITY CODE field (.361) in the PATIENT file (#2).
"^DD",727.803,727.803,21,23,4,0)
PRIMARY ELIGIBILITY CODE is a pointer to the ELIGIBILITY CODE file (#8).
"^DD",727.803,727.803,21,23,5,0)
The data is derived from the MAS ELIGIBILITY CODE field (8) in the
"^DD",727.803,727.803,21,23,6,0)
ELIGIBILITY CODE file (#8) which in turn is a pointer to the MAS
"^DD",727.803,727.803,21,23,7,0)
ELIGIBILITY CODE file (#8.1). The MAS eligibility code pointer value is
"^DD",727.803,727.803,21,23,8,0)
converted to an alpha character representative of it's number, i.e., 1
"^DD",727.803,727.803,21,23,9,0)
converts to A, 2 converts to B, etc.
"^DD",727.803,727.803,21,"DT")
2961014
"^DD",727.803,727.803,22,0)
VETERAN^S^Y:YES;N:NO;^0;23^Q
"^DD",727.803,727.803,22,.1)
Veteran
"^DD",727.803,727.803,22,3)
Select the appropriate veteran status for this patient.
"^DD",727.803,727.803,22,21,0)
^^1^1^2961107^^^
"^DD",727.803,727.803,22,21,1,0)
Data is Y if this patient is a veteran, N if not.
"^DD",727.803,727.803,22,23,0)
^^3^3^2961107^^
"^DD",727.803,727.803,22,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.803,727.803,22,23,2,0)
in the CLINIC EXTRACT file (#727.803), VETERAN data is derived from the
"^DD",727.803,727.803,22,23,3,0)
VETERAN (Y/N)? field (1901) in the PATIENT file (#2).
"^DD",727.803,727.803,22,"DT")
2961014
"^DD",727.803,727.803,23,0)
RACE^F^^0;24^K:$L(X)>1!($L(X)<1) X
"^DD",727.803,727.803,23,.1)
Race
"^DD",727.803,727.803,23,3)
Enter race ABBREVIATION for this patient.
"^DD",727.803,727.803,23,21,0)
^^1^1^2961107^^
"^DD",727.803,727.803,23,21,1,0)
Race ABBREVIATION for this patient.
"^DD",727.803,727.803,23,23,0)
^^3^3^2961107^^
"^DD",727.803,727.803,23,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4),
"^DD",727.803,727.803,23,23,2,0)
RACE data is shown as the ABBREVIATION field (2) of the RACE file (#10)
"^DD",727.803,727.803,23,23,3,0)
entry pointed to by the RACE field (.06) in the PATIENT file (#2).
"^DD",727.803,727.803,23,"DT")
2961014
"^DD",727.803,727.803,24,0)
AGENT ORANGE STATUS^S^Y:YES;N:NO;U:UNKNOWN;^0;25^Q
"^DD",727.803,727.803,24,.1)
Agent Orange Status
"^DD",727.803,727.803,24,21,0)
^^1^1^2970915^
"^DD",727.803,727.803,24,21,1,0)
The patient's Agent Orange status.
"^DD",727.803,727.803,24,23,0)
^^3^3^2970915^^
"^DD",727.803,727.803,24,23,1,0)
Data source:
"^DD",727.803,727.803,24,23,2,0)
 
"^DD",727.803,727.803,24,23,3,0)
PATIENT file (#2); AGENT ORANGE EXPOS. INDICATED? field (#.32102).
"^DD",727.803,727.803,24,"DT")
2970915
"^DD",727.803,727.803,25,0)
AO ENCOUNTER INDICATOR^S^Y:YES;N:NO;^0;26^Q
"^DD",727.803,727.803,25,.1)
AO Encounter Indicator
"^DD",727.803,727.803,25,21,0)
^^2^2^2970915^
"^DD",727.803,727.803,25,21,1,0)
Indicates whether treatment provided during this encounter was related
"^DD",727.803,727.803,25,21,2,0)
to the patient's Agent Orange exposure.
"^DD",727.803,727.803,25,23,0)
^^6^6^2971113^^
"^DD",727.803,727.803,25,23,1,0)
Data source:
"^DD",727.803,727.803,25,23,2,0)
 
"^DD",727.803,727.803,25,23,3,0)
PATIENT file (#2); APPOINTMENT subfile (#2.98); 
"^DD",727.803,727.803,25,23,4,0)
   OUTPATIENT ENCOUNTER field (#21)
"^DD",727.803,727.803,25,23,5,0)
   then OUTPATIENT ENCOUNTER file (#409.68); VISIT FILE ENTRY field (#.05)
"^DD",727.803,727.803,25,23,6,0)
   then VISIT file (#9000010); AGENT ORANGE EXPOSURE field (#80002).
"^DD",727.803,727.803,25,"DT")
2970915
"^DD",727.803,727.803,26,0)
RADIATION STATUS^S^Y:YES;N:NO;U:UNKNOWN;^0;27^Q
"^DD",727.803,727.803,26,.1)
Radiation Status
"^DD",727.803,727.803,26,21,0)
^^1^1^2970915^
"^DD",727.803,727.803,26,21,1,0)
The patient's Ionizing Radiation status.
"^DD",727.803,727.803,26,23,0)
^^3^3^2970915^
"^DD",727.803,727.803,26,23,1,0)
Data source:
"^DD",727.803,727.803,26,23,2,0)
 
"^DD",727.803,727.803,26,23,3,0)
PATIENT file (#2); RADIATION EXPOSURE INDICATED? field (#.32103).
"^DD",727.803,727.803,26,"DT")
2970915
"^DD",727.803,727.803,27,0)
RADIATION ENCOUNTER INDICATOR^S^Y:YES;N:NO;^0;28^Q
"^DD",727.803,727.803,27,.1)
Radiation Encounter Indicator
"^DD",727.803,727.803,27,21,0)
^^2^2^2970915^
"^DD",727.803,727.803,27,21,1,0)
Indicates whether treatment provided during this encounter was related
"^DD",727.803,727.803,27,21,2,0)
to the patient's ionizing radiation exposure.
"^DD",727.803,727.803,27,23,0)
^^6^6^2971113^^
"^DD",727.803,727.803,27,23,1,0)
Data source:
"^DD",727.803,727.803,27,23,2,0)
 
"^DD",727.803,727.803,27,23,3,0)
PATIENT file (#2); APPOINTMENT sub-file (#2.98);
"^DD",727.803,727.803,27,23,4,0)
   OUTPATIENT ENCOUNTER field (#21)
"^DD",727.803,727.803,27,23,5,0)
   then to OUTPATIENT ENCOUNTER file (#409.68); VISIT FILE ENTRY field (#.05)
"^DD",727.803,727.803,27,23,6,0)
   then to VISIT file (#9000010); IONIZING RADIATION EXPOSURE field (#80003)
"^DD",727.803,727.803,27,"DT")
2970915
"^DD",727.803,727.803,28,0)
POW STATUS^S^Y:YES;N:NO;U:UNKNOWN;^0;29^Q
"^DD",727.803,727.803,28,.1)
POW Status
"^DD",727.803,727.803,28,21,0)
^^1^1^2970915^
"^DD",727.803,727.803,28,21,1,0)
The patient's POW status.
"^DD",727.803,727.803,28,23,0)
^^3^3^2970915^
"^DD",727.803,727.803,28,23,1,0)
Data source:
"^DD",727.803,727.803,28,23,2,0)
 
"^DD",727.803,727.803,28,23,3,0)
PATIENT file (#2); POW STATUS INDICATED? field (#.525).
"^DD",727.803,727.803,28,"DT")
2970915
"^DD",727.803,727.803,29,0)
POW LOCATION^P22'^DIC(22,^0;30^Q
"^DD",727.803,727.803,29,.1)
POW Location
"^DD",727.803,727.803,29,21,0)
^^2^2^2970915^
"^DD",727.803,727.803,29,21,1,0)
If POW Status is indicated, then this is the POW confinement
"^DD",727.803,727.803,29,21,2,0)
location/period.
"^DD",727.803,727.803,29,23,0)
^^4^4^2971113^^
"^DD",727.803,727.803,29,23,1,0)
Data source:
"^DD",727.803,727.803,29,23,2,0)
 
"^DD",727.803,727.803,29,23,3,0)
PATIENT file (#2); POW CONFINEMENT LOCATION field (#.526)
"^DD",727.803,727.803,29,23,4,0)
   then to POW PERIOD file (#22); NAME field (#.01)
"^DD",727.803,727.803,29,"DT")
2970915
"^DD",727.803,727.803,30,0)
PROVIDER PERSON CLASS^P8932.1'^USC(8932.1,^0;31^Q
"^DD",727.803,727.803,30,21,0)
^^1^1^2970918^
"^DD",727.803,727.803,30,21,1,0)
To be used for future development; currently set to null.
"^DD",727.803,727.803,30,23,0)
^^1^1^2970918^
"^DD",727.803,727.803,30,23,1,0)
For future development.
"^DD",727.803,727.803,30,"DT")
2970918
"^DD",727.804,727.804,0)
FIELD^^21^21
"^DD",727.804,727.804,0,"DDA")
N
"^DD",727.804,727.804,0,"DIK")
ECX804
"^DD",727.804,727.804,0,"DIKOLD")
ECX804
"^DD",727.804,727.804,0,"DT")
2970915
"^DD",727.804,727.804,0,"IX","AC",727.804,2)

"^DD",727.804,727.804,0,"IX","AINV",727.804,.01)

"^DD",727.804,727.804,0,"NM","CLINIC NOSHOW EXTRACT")

"^DD",727.804,727.804,0,"VRPK")
DSS EXTRACTS
"^DD",727.804,727.804,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.804,727.804,.01,.1)
Sequence Number
"^DD",727.804,727.804,.01,1,0)
^.1
"^DD",727.804,727.804,.01,1,1,0)
727.804^AINV^MUMPS
"^DD",727.804,727.804,.01,1,1,1)
S ^ECX(727.804,"AINV",-X,DA)=""
"^DD",727.804,727.804,.01,1,1,2)
K ^ECX(727.804,"AINV",-X,DA)
"^DD",727.804,727.804,.01,1,1,3)
DO NOT DELETE.
"^DD",727.804,727.804,.01,1,1,"%D",0)
^^3^3^2960808^^^
"^DD",727.804,727.804,.01,1,1,"%D",1,0)
This is an inverse entry cross reference.  It is used to find the
"^DD",727.804,727.804,.01,1,1,"%D",2,0)
last entry in the file.  It is essential for the management of the
"^DD",727.804,727.804,.01,1,1,"%D",3,0)
extract and the purge of extract data.
"^DD",727.804,727.804,.01,1,1,"DT")
2921016
"^DD",727.804,727.804,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",727.804,727.804,.01,21,0)
^^1^1^2960814^^^^
"^DD",727.804,727.804,.01,21,1,0)
The record number for this extract entry.
"^DD",727.804,727.804,.01,23,0)
^^1^1^2960814^^^^
"^DD",727.804,727.804,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",727.804,727.804,.01,"DT")
2960814
"^DD",727.804,727.804,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.804,727.804,1,.1)
Year/Month
"^DD",727.804,727.804,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.804,727.804,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.804,727.804,1,3)
Answer must be 6 characters in length.
"^DD",727.804,727.804,1,21,0)
^^2^2^2970918^^^^
"^DD",727.804,727.804,1,21,1,0)
A six character string representing the year and the month
"^DD",727.804,727.804,1,21,2,0)
for which this extract was performed.
"^DD",727.804,727.804,1,23,0)
^^1^1^2970918^^^^
"^DD",727.804,727.804,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.804,727.804,1,"DT")
2970924
"^DD",727.804,727.804,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.804,727.804,2,.1)
Extract Number
"^DD",727.804,727.804,2,1,0)
^.1
"^DD",727.804,727.804,2,1,1,0)
727.804^AC
"^DD",727.804,727.804,2,1,1,1)
S ^ECX(727.804,"AC",$E(X,1,30),DA)=""
"^DD",727.804,727.804,2,1,1,2)
K ^ECX(727.804,"AC",$E(X,1,30),DA)
"^DD",727.804,727.804,2,1,1,3)
DO NOT DELETE.
"^DD",727.804,727.804,2,1,1,"%D",0)
^^2^2^2960808^^
"^DD",727.804,727.804,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data
"^DD",727.804,727.804,2,1,1,"%D",2,0)
in this file.
"^DD",727.804,727.804,2,1,1,"DT")
2910802
"^DD",727.804,727.804,2,3)
Enter the extract number for this extract.
"^DD",727.804,727.804,2,21,0)
^^2^2^2960814^^^^
"^DD",727.804,727.804,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727) for this 
"^DD",727.804,727.804,2,21,2,0)
extract.
"^DD",727.804,727.804,2,23,0)
^^2^2^2960814^^^^
"^DD",727.804,727.804,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is to
"^DD",727.804,727.804,2,23,2,0)
pick up the header for the mail message.
"^DD",727.804,727.804,2,"DT")
2960814
"^DD",727.804,727.804,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.804,727.804,3,.1)
Facility
"^DD",727.804,727.804,3,3)
Enter the station number where this extract was performed.
"^DD",727.804,727.804,3,21,0)
^^1^1^2961014^^^^
"^DD",727.804,727.804,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.804,727.804,3,23,0)
^^3^3^2961014^^^^
"^DD",727.804,727.804,3,23,1,0)
An indicator of the division where this event happened.  It is derived
"^DD",727.804,727.804,3,23,2,0)
from the DIVISION field (3.5) of the HOSPITAL LOCATION file (#44) which
"^DD",727.804,727.804,3,23,3,0)
points to the MEDICAL CENTER DIVISION file (#40.8).
"^DD",727.804,727.804,3,"DT")
2961014
"^DD",727.804,727.804,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.804,727.804,4,.1)
Patient No. - DFN
"^DD",727.804,727.804,4,3)
Enter the name of the patient for this extract record.
"^DD",727.804,727.804,4,21,0)
^^1^1^2961014^^^^
"^DD",727.804,727.804,4,21,1,0)
The name of the patient for this extract record.
"^DD",727.804,727.804,4,23,0)
^^4^4^2961016^^^
"^DD",727.804,727.804,4,23,1,0)
Pointer to the NAME field (.01) of the PATIENT file (#2). This data 
"^DD",727.804,727.804,4,23,2,0)
represents the patient DFN. PATIENT NO. - DFN data is derived from the
"^DD",727.804,727.804,4,23,3,0)
PATIENT field (.01) within the APPOINTMENT field (1900) multiple of the
"^DD",727.804,727.804,4,23,4,0)
HOSPITAL LOCATION file (#44).
"^DD",727.804,727.804,4,"DT")
2961014
"^DD",727.804,727.804,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.804,727.804,5,.1)
Social Security Number
"^DD",727.804,727.804,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.804,727.804,5,21,0)
^^1^1^2960814^^^^
"^DD",727.804,727.804,5,21,1,0)
The patient's social security number.
"^DD",727.804,727.804,5,23,0)
^^3^3^2961014^
"^DD",727.804,727.804,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.804,727.804,5,23,2,0)
in the CLINIC NOSHOW EXTRACT file (#727.804), SSN data is derived from the
"^DD",727.804,727.804,5,23,3,0)
SOCIAL SECURITY NUMBER field (.09) in the PATIENT file (#2).
"^DD",727.804,727.804,5,"DT")
2960814
"^DD",727.804,727.804,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.804,727.804,6,.1)
Name
"^DD",727.804,727.804,6,3)
Your answer must be 4 characters in length.
"^DD",727.804,727.804,6,21,0)
^^1^1^2960814^^^^
"^DD",727.804,727.804,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.804,727.804,6,23,0)
^^4^4^2961014^
"^DD",727.804,727.804,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.804,727.804,6,23,2,0)
in the CLINIC NOSHOW EXTRACT file (#727.804), NAME data is derived from
"^DD",727.804,727.804,6,23,3,0)
the NAME field (.01) in the PATIENT file (#2). The first four characters
"^DD",727.804,727.804,6,23,4,0)
of the first "," piece are used, padded with trailing spaces if necessary.
"^DD",727.804,727.804,6,"DT")
2960814
"^DD",727.804,727.804,7,0)
IN OUT PATIENT INDICATOR^P40.9'^DIC(40.9,^0;8^Q
"^DD",727.804,727.804,7,.1)
In Out Patient Indicator
"^DD",727.804,727.804,7,3)
Enter the appropriate inpatient or outpatient indicator.
"^DD",727.804,727.804,7,21,0)
^^2^2^2960814^^^^
"^DD",727.804,727.804,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for
"^DD",727.804,727.804,7,21,2,0)
this extract entry.
"^DD",727.804,727.804,7,23,0)
^^4^4^2960814^
"^DD",727.804,727.804,7,23,1,0)
This field is initialized to a 1, indicating an outpatient status. If 
"^DD",727.804,727.804,7,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.804,727.804,7,23,3,0)
patient movement number, then the field is reset to a 3 indicating 
"^DD",727.804,727.804,7,23,4,0)
inpatient status.
"^DD",727.804,727.804,7,"DT")
2960814
"^DD",727.804,727.804,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.804,727.804,8,.1)
Day
"^DD",727.804,727.804,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.804,727.804,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.804,727.804,8,3)
Answer must be 8 characters in length.
"^DD",727.804,727.804,8,21,0)
^^2^2^2970918^^^^
"^DD",727.804,727.804,8,21,1,0)
This 8-character string represents the date on which the clinic
"^DD",727.804,727.804,8,21,2,0)
appointment was scheduled to occur.
"^DD",727.804,727.804,8,23,0)
^^10^10^2970923^^^^
"^DD",727.804,727.804,8,23,1,0)
Data source:
"^DD",727.804,727.804,8,23,2,0)
 
"^DD",727.804,727.804,8,23,3,0)
HOSPITAL LOCATION file (#44); APPOINTMENT sub-file (#44.001);
"^DD",727.804,727.804,8,23,4,0)
   APPOINTMENT DATE/TIME field (#.01)
"^DD",727.804,727.804,8,23,5,0)
 
"^DD",727.804,727.804,8,23,6,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.804,727.804,8,23,7,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.804,727.804,8,23,8,0)
then a default is used.  The default date value is the value of the 
"^DD",727.804,727.804,8,23,9,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.804,727.804,8,23,10,0)
Year 2000 compliant per vendor.
"^DD",727.804,727.804,8,"DT")
2970924
"^DD",727.804,727.804,9,0)
PLACEHOLDER1^F^^0;10^K:$L(X)>1!($L(X)<1) X
"^DD",727.804,727.804,9,.1)
Placeholder1
"^DD",727.804,727.804,9,3)
Answer must be 1 character in length.
"^DD",727.804,727.804,9,21,0)
^^1^1^2970915^^^^
"^DD",727.804,727.804,9,21,1,0)
A placeholder for future use.
"^DD",727.804,727.804,9,"DT")
2970915
"^DD",727.804,727.804,10,0)
MOVEMENT FILE #^P405'^DGPM(^0;11^Q
"^DD",727.804,727.804,10,.1)
Movement File Number
"^DD",727.804,727.804,10,3)
Enter the patient movement number associated with this extract record.
"^DD",727.804,727.804,10,21,0)
^^1^1^2960814^^
"^DD",727.804,727.804,10,21,1,0)
Current patient movement record associated with this extract record.
"^DD",727.804,727.804,10,23,0)
^^4^4^2961014^^^^
"^DD",727.804,727.804,10,23,1,0)
A call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.804,727.804,10,23,2,0)
patient movement number (indicating inpatient status). This field is set 
"^DD",727.804,727.804,10,23,3,0)
to the value of VAIP(1), which is a pointer to the PATIENT MOVEMENT file 
"^DD",727.804,727.804,10,23,4,0)
(#405).
"^DD",727.804,727.804,10,"DT")
2960814
"^DD",727.804,727.804,12,0)
TREATING SPECIALTY^P42.4'^DIC(42.4,^0;12^Q
"^DD",727.804,727.804,12,.1)
Treating Specialty
"^DD",727.804,727.804,12,3)
Enter the name of the treating specialty associated with this extract record.
"^DD",727.804,727.804,12,21,0)
^^2^2^2960814^^^
"^DD",727.804,727.804,12,21,1,0)
Enter the name of the treating specialty associated with this extract 
"^DD",727.804,727.804,12,21,2,0)
record.
"^DD",727.804,727.804,12,23,0)
^^6^6^2961015^^^^
"^DD",727.804,727.804,12,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.804,727.804,12,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.804,727.804,12,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.804,727.804,12,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.804,727.804,12,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.804,727.804,12,23,6,0)
SPECIALTY file (#42.4).
"^DD",727.804,727.804,12,"DT")
2960814
"^DD",727.804,727.804,13,0)
DATE OF BIRTH^FO^^0;13^K:$L(X)>8!($L(X)<8) X
"^DD",727.804,727.804,13,.1)
Date of Birth
"^DD",727.804,727.804,13,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.804,727.804,13,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.804,727.804,13,3)
Answer must be 8 characters in length.
"^DD",727.804,727.804,13,21,0)
^^1^1^2970918^^^^
"^DD",727.804,727.804,13,21,1,0)
The patient's date of birth between December 31,1870 and today's date.
"^DD",727.804,727.804,13,23,0)
^^10^10^2971113^^^^
"^DD",727.804,727.804,13,23,1,0)
Data source:
"^DD",727.804,727.804,13,23,2,0)
 
"^DD",727.804,727.804,13,23,3,0)
HOSPITAL LOCATION file (#44); APPOINTMENT sub-file (#44.0001);
"^DD",727.804,727.804,13,23,4,0)
   PATIENT sub-file (#44.003); PATIENT field (#.01)
"^DD",727.804,727.804,13,23,5,0)
   then to PATIENT file (#2); DATE OF BIRTH field (#.03)
"^DD",727.804,727.804,13,23,6,0)
 
"^DD",727.804,727.804,13,23,7,0)
If Date of Birth cannot be determined, then January 1, 1942, is
"^DD",727.804,727.804,13,23,8,0)
used as default.  The data element is always exactly 8 numberic
"^DD",727.804,727.804,13,23,9,0)
characters in length.  Format is YYYYMMDD.  Year 2000 compliant
"^DD",727.804,727.804,13,23,10,0)
per vendor.
"^DD",727.804,727.804,13,"DT")
2970924
"^DD",727.804,727.804,14,0)
ELIGIBILITY^F^^0;14^K:$L(X)>1!($L(X)<1)!'(X?1U) X
"^DD",727.804,727.804,14,.1)
Eligibility
"^DD",727.804,727.804,14,3)
Your answer must be 1 character in length.
"^DD",727.804,727.804,14,21,0)
^^1^1^2961106^^^^
"^DD",727.804,727.804,14,21,1,0)
Appropriate eligibility code based on veteran or non-veteran status.
"^DD",727.804,727.804,14,23,0)
^^9^9^2961106^^^
"^DD",727.804,727.804,14,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.804,727.804,14,23,2,0)
in the CLINIC NOSHOW EXTRACT file (#727.804), ELIGIBILITY data is derived 
"^DD",727.804,727.804,14,23,3,0)
from the PRIMARY ELIGIBILITY CODE field (.361) in the PATIENT file (#2).
"^DD",727.804,727.804,14,23,4,0)
PRIMARY ELIGIBILITY CODE is a pointer to the ELIGIBILITY CODE file (#8).
"^DD",727.804,727.804,14,23,5,0)
The data is derived from the MAS ELIGIBILITY CODE field (8) in the
"^DD",727.804,727.804,14,23,6,0)
ELIGIBILITY CODE file (#8) which in turn is a pointer to the MAS
"^DD",727.804,727.804,14,23,7,0)
ELIGIBILITY CODE file (#8.1). The MAS eligibility code pointer value is
"^DD",727.804,727.804,14,23,8,0)
converted to an alpha character representative of it's number, i.e., 1
"^DD",727.804,727.804,14,23,9,0)
converts to A, 2 converts to B, etc.
"^DD",727.804,727.804,14,"DT")
2960814
"^DD",727.804,727.804,15,0)
VETERAN^S^Y:YES;N:NO;^0;15^Q
"^DD",727.804,727.804,15,.1)
Veteran
"^DD",727.804,727.804,15,3)
Select the appropriate veteran status for this patient.
"^DD",727.804,727.804,15,21,0)
^^1^1^2960814^^
"^DD",727.804,727.804,15,21,1,0)
Data is Y if the patient is a veteran, N if not.
"^DD",727.804,727.804,15,23,0)
^^3^3^2961014^
"^DD",727.804,727.804,15,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.804,727.804,15,23,2,0)
in the CLINIC NOSHOW EXTRACT file (#727.804), VETERAN data is derived from
"^DD",727.804,727.804,15,23,3,0)
the VETERAN (Y/N)? field (1901) in the PATIENT file (#2).
"^DD",727.804,727.804,15,"DT")
2960814
"^DD",727.804,727.804,16,0)
TIME^FO^^0;16^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.804,727.804,16,.1)
Time
"^DD",727.804,727.804,16,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.804,727.804,16,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.804,727.804,16,3)
Answer must be 6 characters in length.
"^DD",727.804,727.804,16,21,0)
^^2^2^2970918^^^^
"^DD",727.804,727.804,16,21,1,0)
A 6-character data element which represents the time for which
"^DD",727.804,727.804,16,21,2,0)
the appointment was scheduled.
"^DD",727.804,727.804,16,23,0)
^^8^8^2970918^^^^
"^DD",727.804,727.804,16,23,1,0)
A six-character string of format HHMMSS which represents the time
"^DD",727.804,727.804,16,23,2,0)
(military time) of the appointment.
"^DD",727.804,727.804,16,23,3,0)
 
"^DD",727.804,727.804,16,23,4,0)
HOSPITAL LOCATION file (#44); APPOINTMENT sub-file (#44.001);
"^DD",727.804,727.804,16,23,5,0)
   APPOINTMENT DATA/TIME field (#.01)
"^DD",727.804,727.804,16,23,6,0)
  
"^DD",727.804,727.804,16,23,7,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.804,727.804,16,23,8,0)
cannot be determined, then "000300" is used as default.
"^DD",727.804,727.804,16,"DT")
2970924
"^DD",727.804,727.804,17,0)
PRIMARY CARE TEAM^F^^0;17^K:$L(X)>4!($L(X)<1) X
"^DD",727.804,727.804,17,.1)
Primary Care Team
"^DD",727.804,727.804,17,3)
Enter primary care team assigned to this patient.
"^DD",727.804,727.804,17,21,0)
^^1^1^2961106^^
"^DD",727.804,727.804,17,21,1,0)
The primary care team assigned to this patient.
"^DD",727.804,727.804,17,23,0)
^^7^7^2961106^
"^DD",727.804,727.804,17,23,1,0)
Using the APPOINTMENT DATE/TIME field (.01) in the APPOINTMENT field 
"^DD",727.804,727.804,17,23,2,0)
(1900) multiple of the HOSPITAL LOCATION file (#44) and the patient 
"^DD",727.804,727.804,17,23,3,0)
pointer (DFN) stored in the PATIENT NO. - DFN field (4) in the CLINIC 
"^DD",727.804,727.804,17,23,4,0)
NOSHOW EXTRACT file (#727.804), a call is made to the Scheduling API, 
"^DD",727.804,727.804,17,23,5,0)
OUTPTTM^SDUTL3. The API returns the team's internal entry number and 
"^DD",727.804,727.804,17,23,6,0)
name from the TEAM file (#404.51). Only the pointer (IEN) to File 
"^DD",727.804,727.804,17,23,7,0)
404.51 is transmitted.
"^DD",727.804,727.804,17,"DT")
2961106
"^DD",727.804,727.804,18,0)
PRIMARY CARE PROVIDER^F^^0;18^K:$L(X)>11!($L(X)<1) X
"^DD",727.804,727.804,18,.1)
Primary Care Provider
"^DD",727.804,727.804,18,3)
Enter primary care provider assigned to this patient.
"^DD",727.804,727.804,18,21,0)
^^1^1^2961106^
"^DD",727.804,727.804,18,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.804,727.804,18,23,0)
^^7^7^2961106^
"^DD",727.804,727.804,18,23,1,0)
Using the APPOINTMENT DATE/TIME field (.01) in the APPOINTMENT field 
"^DD",727.804,727.804,18,23,2,0)
(1900) multiple of the HOSPITAL LOCATION file (#44) and the patient 
"^DD",727.804,727.804,18,23,3,0)
pointer (DFN) stored in the PATIENT NO. - DFN field (4) in the CLINIC 
"^DD",727.804,727.804,18,23,4,0)
NOSHOW EXTRACT file (#727.804), a call is made to the Scheduling API, 
"^DD",727.804,727.804,18,23,5,0)
OUTPTPR^SDUTL3. The API returns the provider's internal entry number 
"^DD",727.804,727.804,18,23,6,0)
and name from the NEW PERSON file (#200). Only the pointer (IEN) to 
"^DD",727.804,727.804,18,23,7,0)
File 200 is transmitted.
"^DD",727.804,727.804,18,"DT")
2961015
"^DD",727.804,727.804,19,0)
PROVIDER^F^^0;19^K:$L(X)>11!($L(X)<1) X
"^DD",727.804,727.804,19,.1)
Provider
"^DD",727.804,727.804,19,3)
Enter provider for this record.
"^DD",727.804,727.804,19,21,0)
^^1^1^2961106^
"^DD",727.804,727.804,19,21,1,0)
The provider assigned to this patient.
"^DD",727.804,727.804,19,23,0)
^^1^1^2961106^
"^DD",727.804,727.804,19,23,1,0)
This field marked as a placeholder for future use.
"^DD",727.804,727.804,19,"DT")
2961015
"^DD",727.804,727.804,20,0)
RACE^F^^0;20^K:$L(X)>1!($L(X)<1) X
"^DD",727.804,727.804,20,.1)
Race
"^DD",727.804,727.804,20,3)
Enter race ABBREVIATION for this patient.
"^DD",727.804,727.804,20,21,0)
^^1^1^2961106^^^
"^DD",727.804,727.804,20,21,1,0)
Race ABBREVIATION for this patient.
"^DD",727.804,727.804,20,23,0)
^^3^3^2961106^^
"^DD",727.804,727.804,20,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4),
"^DD",727.804,727.804,20,23,2,0)
RACE data is shown as the ABBREVIATION of the RACE file (#10) entry
"^DD",727.804,727.804,20,23,3,0)
pointed to by the RACE field (.06) in the PATIENT file (#2).
"^DD",727.804,727.804,20,"DT")
2961014
"^DD",727.804,727.804,21,0)
DSS IDENTIFIER^F^^0;21^K:$L(X)>6!($L(X)<6) X
"^DD",727.804,727.804,21,.1)
DSS Identifier
"^DD",727.804,727.804,21,3)
Answer must be 6 characters in length.
"^DD",727.804,727.804,21,21,0)
^^3^3^2971106^^^
"^DD",727.804,727.804,21,21,1,0)
The DSS Identifier consists of the primary and secondary stop codes
"^DD",727.804,727.804,21,21,2,0)
associated with this clinic.  It is exactly 6 numeric characters in 
"^DD",727.804,727.804,21,21,3,0)
length.
"^DD",727.804,727.804,21,23,0)
^^19^19^2971113^^^^
"^DD",727.804,727.804,21,23,1,0)
Data source:
"^DD",727.804,727.804,21,23,2,0)
 
"^DD",727.804,727.804,21,23,3,0)
CLINICS AND STOP CODES file (#728.44); DSS STOP CODE field (#3)
"^DD",727.804,727.804,21,23,4,0)
   and DSS CREDIT STOP CODE field (#4)
"^DD",727.804,727.804,21,23,5,0)
  
"^DD",727.804,727.804,21,23,6,0)
If field #3 is null, then use
"^DD",727.804,727.804,21,23,7,0)
   CLINICS AND STOP CODES file (#728.44); STOP CODE field (#1)
"^DD",727.804,727.804,21,23,8,0)
   and CREDIT STOP CODE (#2)
"^DD",727.804,727.804,21,23,9,0)
  
"^DD",727.804,727.804,21,23,10,0)
If field #1 is null, then use
"^DD",727.804,727.804,21,23,11,0)
   HOSPITAL LOCATION file (#44); STOP CODE NUMBER field (#8)
"^DD",727.804,727.804,21,23,12,0)
   and CREDIT STOP CODE field (#2503)
"^DD",727.804,727.804,21,23,13,0)
  
"^DD",727.804,727.804,21,23,14,0)
If field #8 is null, then use default of "000000".
"^DD",727.804,727.804,21,23,15,0)
 
"^DD",727.804,727.804,21,23,16,0)
However, if the ACTION TO SEND field (#5) of file #728.44 for
"^DD",727.804,727.804,21,23,17,0)
the clinic is set to "1" (i.e., SEND STOP CODE), then ONLY the
"^DD",727.804,727.804,21,23,18,0)
primary stop code is used.  The secondary stop code (i.e., credit
"^DD",727.804,727.804,21,23,19,0)
stop code) is set to "000".
"^DD",727.804,727.804,21,"DT")
2970915
"^DD",727.805,727.805,0)
FIELD^^17^18
"^DD",727.805,727.805,0,"DIK")
ECX805
"^DD",727.805,727.805,0,"DIKOLD")
ECX805
"^DD",727.805,727.805,0,"DT")
2970918
"^DD",727.805,727.805,0,"IX","AC",727.805,2)

"^DD",727.805,727.805,0,"IX","AINV",727.805,.01)

"^DD",727.805,727.805,0,"NM","NURSING EXTRACT")

"^DD",727.805,727.805,0,"VRPK")
DSS EXTRACTS
"^DD",727.805,727.805,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.805,727.805,.01,.1)
Sequence Number
"^DD",727.805,727.805,.01,1,0)
^.1
"^DD",727.805,727.805,.01,1,1,0)
727.805^AINV^MUMPS
"^DD",727.805,727.805,.01,1,1,1)
S ^ECX(727.805,"AINV",-X,DA)=""
"^DD",727.805,727.805,.01,1,1,2)
K ^ECX(727.805,"AINV",-X,DA)
"^DD",727.805,727.805,.01,1,1,3)
DO NOT DELETE.
"^DD",727.805,727.805,.01,1,1,"%D",0)
^^3^3^2960808^^^^
"^DD",727.805,727.805,.01,1,1,"%D",1,0)
This is an inverse entry cross reference.  It is used to find the
"^DD",727.805,727.805,.01,1,1,"%D",2,0)
last entry in the file.  It is essential for the management of the
"^DD",727.805,727.805,.01,1,1,"%D",3,0)
extract and the purge of extract data.
"^DD",727.805,727.805,.01,1,1,"DT")
2921016
"^DD",727.805,727.805,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",727.805,727.805,.01,21,0)
^^1^1^2960815^^^^
"^DD",727.805,727.805,.01,21,1,0)
The record number for this extract entry.
"^DD",727.805,727.805,.01,23,0)
^^1^1^2960815^^
"^DD",727.805,727.805,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",727.805,727.805,.01,"DT")
2960815
"^DD",727.805,727.805,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.805,727.805,1,.1)
Year/Month
"^DD",727.805,727.805,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.805,727.805,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.805,727.805,1,3)
Answer must be 6 characters in length.
"^DD",727.805,727.805,1,21,0)
2^^2^2^2970918^^
"^DD",727.805,727.805,1,21,1,0)
A six character string representing the year and the month
"^DD",727.805,727.805,1,21,2,0)
for which this extract was performed.
"^DD",727.805,727.805,1,23,0)
^^1^1^2970918^^^^
"^DD",727.805,727.805,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.805,727.805,1,"DT")
2970924
"^DD",727.805,727.805,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.805,727.805,2,.1)
Extract Number
"^DD",727.805,727.805,2,1,0)
^.1
"^DD",727.805,727.805,2,1,1,0)
727.805^AC
"^DD",727.805,727.805,2,1,1,1)
S ^ECX(727.805,"AC",$E(X,1,30),DA)=""
"^DD",727.805,727.805,2,1,1,2)
K ^ECX(727.805,"AC",$E(X,1,30),DA)
"^DD",727.805,727.805,2,1,1,3)
DO NOT DELETE.
"^DD",727.805,727.805,2,1,1,"%D",0)
^^2^2^2960808^^
"^DD",727.805,727.805,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data
"^DD",727.805,727.805,2,1,1,"%D",2,0)
in this file.
"^DD",727.805,727.805,2,1,1,"DT")
2910802
"^DD",727.805,727.805,2,3)
Enter the extract number for this extract.
"^DD",727.805,727.805,2,21,0)
^^2^2^2960815^^^^
"^DD",727.805,727.805,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727) for this 
"^DD",727.805,727.805,2,21,2,0)
extract.
"^DD",727.805,727.805,2,23,0)
^^2^2^2960815^^^^
"^DD",727.805,727.805,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is to
"^DD",727.805,727.805,2,23,2,0)
pick up the header for the mail message.
"^DD",727.805,727.805,2,"DT")
2960815
"^DD",727.805,727.805,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.805,727.805,3,.1)
Facility
"^DD",727.805,727.805,3,3)
Enter the station number where this extract was performed.
"^DD",727.805,727.805,3,21,0)
^^1^1^2961017^^^^
"^DD",727.805,727.805,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.805,727.805,3,23,0)
^^4^4^2961017^^^^
"^DD",727.805,727.805,3,23,1,0)
An indicator of the division where this event happened. Using the NAME 
"^DD",727.805,727.805,3,23,2,0)
field (.01) pointer from the DSS EXTRACTS file (#728), FACILITY is 
"^DD",727.805,727.805,3,23,3,0)
derived from the STATION NUMBER field (99) for that pointer number in 
"^DD",727.805,727.805,3,23,4,0)
the INSTITUTION file (#4).
"^DD",727.805,727.805,3,"DT")
2961017
"^DD",727.805,727.805,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.805,727.805,4,.1)
Patient No. - DFN
"^DD",727.805,727.805,4,3)
Enter the name of the patient for this extract record.
"^DD",727.805,727.805,4,21,0)
^^1^1^2961017^^^^
"^DD",727.805,727.805,4,21,1,0)
The name of the patient for this extract record.
"^DD",727.805,727.805,4,23,0)
^^3^3^2961017^
"^DD",727.805,727.805,4,23,1,0)
Pointer to the NAME field (.01) of the PATIENT file (#2). This data 
"^DD",727.805,727.805,4,23,2,0)
represents the patient DFN. PATIENT NO. - DFN data is derived from the
"^DD",727.805,727.805,4,23,3,0)
NAME field (.02) of the NURS CLASSIFICATION file (#214.6).
"^DD",727.805,727.805,4,"DT")
2961017
"^DD",727.805,727.805,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.805,727.805,5,.1)
Social Security Number
"^DD",727.805,727.805,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.805,727.805,5,21,0)
^^1^1^2961121^^^^
"^DD",727.805,727.805,5,21,1,0)
The patient's social security number.
"^DD",727.805,727.805,5,23,0)
^^3^3^2961121^^
"^DD",727.805,727.805,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.805,727.805,5,23,2,0)
in the NURSING EXTRACT file (#727.805), SSN data is derived from the
"^DD",727.805,727.805,5,23,3,0)
SOCIAL SECURITY NUMBER field (.09) in the PATIENT file (#2).
"^DD",727.805,727.805,5,"DT")
2960815
"^DD",727.805,727.805,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.805,727.805,6,.1)
Name
"^DD",727.805,727.805,6,3)
Your answer must be 4 characters in length.
"^DD",727.805,727.805,6,21,0)
^^1^1^2960815^^^^
"^DD",727.805,727.805,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.805,727.805,6,23,0)
^^4^4^2961017^
"^DD",727.805,727.805,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.805,727.805,6,23,2,0)
in the NURSING EXTRACT file (#727.805), NAME data is derived from the NAME
"^DD",727.805,727.805,6,23,3,0)
field (.01) in the PATIENT file (#2). The first four characters of the
"^DD",727.805,727.805,6,23,4,0)
first "," piece are used, padded with trailing spaces if necessary.
"^DD",727.805,727.805,6,"DT")
2960815
"^DD",727.805,727.805,7,0)
IN OUT PATIENT INDICATOR^P40.9'^DIC(40.9,^0;8^Q
"^DD",727.805,727.805,7,.1)
In Out Patient Indicator
"^DD",727.805,727.805,7,3)
Enter the appropriate inpatient or outpatient indicator.
"^DD",727.805,727.805,7,21,0)
^^2^2^2960815^^^^
"^DD",727.805,727.805,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for
"^DD",727.805,727.805,7,21,2,0)
this extract entry.
"^DD",727.805,727.805,7,23,0)
^^2^2^2960815^^^
"^DD",727.805,727.805,7,23,1,0)
For the Nursing extract this field is set to 3, indicating inpatient 
"^DD",727.805,727.805,7,23,2,0)
status in the LOCATION TYPE file (#40.9).
"^DD",727.805,727.805,7,"DT")
2960815
"^DD",727.805,727.805,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.805,727.805,8,.1)
Day
"^DD",727.805,727.805,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.805,727.805,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.805,727.805,8,3)
Answer must be 8 characters in length.
"^DD",727.805,727.805,8,21,0)
^^2^2^2970918^^^^
"^DD",727.805,727.805,8,21,1,0)
This 8-character string represents the date on which the Nursing
"^DD",727.805,727.805,8,21,2,0)
classification was done.
"^DD",727.805,727.805,8,23,0)
^^9^9^2970923^^^^
"^DD",727.805,727.805,8,23,1,0)
Data source:
"^DD",727.805,727.805,8,23,2,0)
 
"^DD",727.805,727.805,8,23,3,0)
NURS CLASSIFICATION file (#214.6); CLASSIFICATION DATE/TIME field (#.01)
"^DD",727.805,727.805,8,23,4,0)
 
"^DD",727.805,727.805,8,23,5,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.805,727.805,8,23,6,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.805,727.805,8,23,7,0)
then a default is used.  The default date value is the value of the 
"^DD",727.805,727.805,8,23,8,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.805,727.805,8,23,9,0)
Year 2000 compliant per vendor.
"^DD",727.805,727.805,8,"DT")
2970924
"^DD",727.805,727.805,9,0)
ACUITY LEVEL^F^^0;10^K:$L(X)>1!($L(X)<1)!'("ABCDEFGHP12345"[X) X
"^DD",727.805,727.805,9,.1)
Acuity Level
"^DD",727.805,727.805,9,3)
Your answer must be 1 character in length.
"^DD",727.805,727.805,9,21,0)
^^1^1^2960815^^^^
"^DD",727.805,727.805,9,21,1,0)
The patient's current Nursing AMIS classification or acuity rating.
"^DD",727.805,727.805,9,23,0)
^^2^2^2960815^^^^
"^DD",727.805,727.805,9,23,1,0)
ACUITY LEVEL is derived from the CATEGORY field (1) in the NURS 
"^DD",727.805,727.805,9,23,2,0)
CLASSIFICATION file (#214.6).
"^DD",727.805,727.805,9,"DT")
2960815
"^DD",727.805,727.805,10,0)
ENTERED BY^S^C:COMPUTER;U:USER;^0;11^Q
"^DD",727.805,727.805,10,.1)
Entered By
"^DD",727.805,727.805,10,3)
Enter C if computer generated, or U if user generated.
"^DD",727.805,727.805,10,21,0)
^^2^2^2960815^^
"^DD",727.805,727.805,10,21,1,0)
Enter C if the classification was computer generated, or U if it was 
"^DD",727.805,727.805,10,21,2,0)
user (RN) generated.
"^DD",727.805,727.805,10,23,0)
^^2^2^2960815^^
"^DD",727.805,727.805,10,23,1,0)
ENTERED BY is derived from the ENTERED BY field (3) in the NURS 
"^DD",727.805,727.805,10,23,2,0)
CLASSIFICATION file (#214.6).
"^DD",727.805,727.805,10,"DT")
2960815
"^DD",727.805,727.805,11,0)
CLASSIFIER^P200'^VA(200,^0;12^Q
"^DD",727.805,727.805,11,.1)
Classifier
"^DD",727.805,727.805,11,3)
Enter the name of the person who made the classification.
"^DD",727.805,727.805,11,21,0)
^^2^2^2960815^^^^
"^DD",727.805,727.805,11,21,1,0)
Identifies the person making the classification.  Pointer to the 
"^DD",727.805,727.805,11,21,2,0)
NEW PERSON FILE (#200)
"^DD",727.805,727.805,11,23,0)
^^2^2^2960815^^^^
"^DD",727.805,727.805,11,23,1,0)
CLASSIFIER is derived from the CLASSIFIER field (4) in the NURS 
"^DD",727.805,727.805,11,23,2,0)
CLASSIFICATION file (#214.6).
"^DD",727.805,727.805,11,"DT")
2960815
"^DD",727.805,727.805,12,0)
NURSE LOCATION^P211.4'^NURSF(211.4,^0;13^Q
"^DD",727.805,727.805,12,.1)
Nurse Location
"^DD",727.805,727.805,12,3)
Enter the ward on which the patient is classified.
"^DD",727.805,727.805,12,21,0)
^^2^2^2961017^^^^
"^DD",727.805,727.805,12,21,1,0)
Ward on which the patient is classified. Points to the NURS LOCATION 
"^DD",727.805,727.805,12,21,2,0)
file (#211.4).
"^DD",727.805,727.805,12,23,0)
^^3^3^2961017^^^^
"^DD",727.805,727.805,12,23,1,0)
NURSE LOCATION is derived from the NURS LOCATION field (6) in the NURS 
"^DD",727.805,727.805,12,23,2,0)
CLASSIFICATION file (#214.6) which is a pointer to the NURS LOCATION 
"^DD",727.805,727.805,12,23,3,0)
file (#211.4).
"^DD",727.805,727.805,12,"DT")
2960815
"^DD",727.805,727.805,13,0)
NURSING BEDSECTION^P213.3'^NURSF(213.3,^0;14^Q
"^DD",727.805,727.805,13,.1)
Nursing Bedsection
"^DD",727.805,727.805,13,3)
Enter the nursing bedsection for which the patient is classified.
"^DD",727.805,727.805,13,21,0)
^^2^2^2960815^^^^
"^DD",727.805,727.805,13,21,1,0)
Nursing bedsection for which the patient is classified. Points to the 
"^DD",727.805,727.805,13,21,2,0)
NURS AMIS WARD file (#213.3).
"^DD",727.805,727.805,13,23,0)
^^3^3^2960815^^^
"^DD",727.805,727.805,13,23,1,0)
NURSING BEDSECTION is derived from the NURSING BED SECTION field (7) in 
"^DD",727.805,727.805,13,23,2,0)
the NURS CLASSIFICATION file (#214.6) which is a pointer to the NURS 
"^DD",727.805,727.805,13,23,3,0)
AMIS WARD file (#213.3).
"^DD",727.805,727.805,13,"DT")
2960815
"^DD",727.805,727.805,14,0)
MOVEMENT FILE #^P405'^DGPM(^0;15^Q
"^DD",727.805,727.805,14,.1)
Movement File Number
"^DD",727.805,727.805,14,3)
Enter the patient movement number associated with this extract record.
"^DD",727.805,727.805,14,21,0)
^^1^1^2960815^^
"^DD",727.805,727.805,14,21,1,0)
Current patient movement record associated with this extract record.
"^DD",727.805,727.805,14,23,0)
^^4^4^2960815^^
"^DD",727.805,727.805,14,23,1,0)
A call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.805,727.805,14,23,2,0)
patient movement number (indicating inpatient status). This field is set 
"^DD",727.805,727.805,14,23,3,0)
to the value of VAIP(1), which is a pointer to the PATIENT MOVEMENT file 
"^DD",727.805,727.805,14,23,4,0)
(#405).
"^DD",727.805,727.805,14,"DT")
2960815
"^DD",727.805,727.805,15,0)
TREATING SPECIALTY^P42.4'^DIC(42.4,^0;16^Q
"^DD",727.805,727.805,15,.1)
Treating Specialty
"^DD",727.805,727.805,15,3)
Enter the name of the treating specialty associated with this extract record.
"^DD",727.805,727.805,15,21,0)
^^1^1^2960815^^^
"^DD",727.805,727.805,15,21,1,0)
The name of the treating specialty associated with this extract record.
"^DD",727.805,727.805,15,23,0)
^^6^6^2960815^^^
"^DD",727.805,727.805,15,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.805,727.805,15,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.805,727.805,15,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.805,727.805,15,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.805,727.805,15,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.805,727.805,15,23,6,0)
SPECIALTY file (#42.4).
"^DD",727.805,727.805,15,"DT")
2960815
"^DD",727.805,727.805,16,0)
ADMISSION DATE^FO^^0;17^K:$L(X)>8!($L(X)<8) X
"^DD",727.805,727.805,16,.1)
Admission Date
"^DD",727.805,727.805,16,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.805,727.805,16,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.805,727.805,16,3)
Answer must be 8 characters in length.
"^DD",727.805,727.805,16,21,0)
^^2^2^2970918^^^^
"^DD",727.805,727.805,16,21,1,0)
This 8-character string represents the date on which the admission
"^DD",727.805,727.805,16,21,2,0)
for this patient occurred.
"^DD",727.805,727.805,16,23,0)
^^10^10^2971113^^^^
"^DD",727.805,727.805,16,23,1,0)
Data source:
"^DD",727.805,727.805,16,23,2,0)
 
"^DD",727.805,727.805,16,23,3,0)
NURS CLASSIFICATION file (#214.6); NAME field (#.02)
"^DD",727.805,727.805,16,23,4,0)
   then to PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.805,727.805,16,23,5,0)
 
"^DD",727.805,727.805,16,23,6,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.805,727.805,16,23,7,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.805,727.805,16,23,8,0)
then a default is used.  The default date value is the value of the 
"^DD",727.805,727.805,16,23,9,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.805,727.805,16,23,10,0)
Year 2000 compliant per vendor.
"^DD",727.805,727.805,16,"DT")
2970924
"^DD",727.805,727.805,17,0)
ADMISSION TIME^FO^^0;18^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.805,727.805,17,.1)
Admission Time
"^DD",727.805,727.805,17,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.805,727.805,17,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.805,727.805,17,3)
Answer must be 6 characters in length.
"^DD",727.805,727.805,17,21,0)
^^2^2^2970918^^^^
"^DD",727.805,727.805,17,21,1,0)
A 6-character numeric string which represents the time of day at
"^DD",727.805,727.805,17,21,2,0)
which the patient admission occurred.
"^DD",727.805,727.805,17,23,0)
^^6^6^2971113^^^^
"^DD",727.805,727.805,17,23,1,0)
Data source:
"^DD",727.805,727.805,17,23,2,0)
 
"^DD",727.805,727.805,17,23,3,0)
NURS CLASSIFICATION file (#214.6); NAME field (#.02)
"^DD",727.805,727.805,17,23,4,0)
   then to PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.805,727.805,17,23,5,0)
 
"^DD",727.805,727.805,17,23,6,0)
Format is YYYYMMDD; Year 2000 compliant per vendor.
"^DD",727.805,727.805,17,"DT")
2970924
"^DD",727.806,727.806,0)
FIELD^^9^51
"^DD",727.806,727.806,0,"DDA")
N
"^DD",727.806,727.806,0,"DIK")
ECX806
"^DD",727.806,727.806,0,"DIKOLD")
ECX806
"^DD",727.806,727.806,0,"DT")
2970918
"^DD",727.806,727.806,0,"IX","AC",727.806,2)

"^DD",727.806,727.806,0,"IX","AINV",727.806,.01)

"^DD",727.806,727.806,0,"NM","DENTAL EXTRACT")

"^DD",727.806,727.806,0,"VRPK")
DSS EXTRACTS
"^DD",727.806,727.806,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.806,727.806,.01,.1)
Sequence Number
"^DD",727.806,727.806,.01,1,0)
^.1
"^DD",727.806,727.806,.01,1,1,0)
727.806^AINV^MUMPS
"^DD",727.806,727.806,.01,1,1,1)
S ^ECX(727.806,"AINV",-X,DA)=""
"^DD",727.806,727.806,.01,1,1,2)
K ^ECX(727.806,"AINV",-X,DA)
"^DD",727.806,727.806,.01,1,1,3)
DO NOT DELETE.
"^DD",727.806,727.806,.01,1,1,"%D",0)
^^3^3^2960808^^^
"^DD",727.806,727.806,.01,1,1,"%D",1,0)
This is an inverse entry cross reference.  It is used to find the
"^DD",727.806,727.806,.01,1,1,"%D",2,0)
last entry in the file.  It is essential for the management of the
"^DD",727.806,727.806,.01,1,1,"%D",3,0)
extract and the purge of extract data.
"^DD",727.806,727.806,.01,1,1,"DT")
2921016
"^DD",727.806,727.806,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",727.806,727.806,.01,21,0)
^^1^1^2960909^^^^
"^DD",727.806,727.806,.01,21,1,0)
The record number for this extract entry.
"^DD",727.806,727.806,.01,23,0)
^^1^1^2960909^^^
"^DD",727.806,727.806,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",727.806,727.806,.01,"DT")
2960909
"^DD",727.806,727.806,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.806,727.806,1,.1)
Year/Month
"^DD",727.806,727.806,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.806,727.806,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.806,727.806,1,3)
Answer must be 6 characters in length.
"^DD",727.806,727.806,1,21,0)
^^2^2^2970918^^^^
"^DD",727.806,727.806,1,21,1,0)
A six character string representing the year and the month
"^DD",727.806,727.806,1,21,2,0)
for which this extract was performed.
"^DD",727.806,727.806,1,23,0)
^^1^1^2970918^^^^
"^DD",727.806,727.806,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.806,727.806,1,"DT")
2970924
"^DD",727.806,727.806,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.806,727.806,2,.1)
Extract Number
"^DD",727.806,727.806,2,1,0)
^.1
"^DD",727.806,727.806,2,1,1,0)
727.806^AC
"^DD",727.806,727.806,2,1,1,1)
S ^ECX(727.806,"AC",$E(X,1,30),DA)=""
"^DD",727.806,727.806,2,1,1,2)
K ^ECX(727.806,"AC",$E(X,1,30),DA)
"^DD",727.806,727.806,2,1,1,3)
DO NOT DELETE.
"^DD",727.806,727.806,2,1,1,"%D",0)
^^2^2^2960808^
"^DD",727.806,727.806,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data
"^DD",727.806,727.806,2,1,1,"%D",2,0)
in this file.
"^DD",727.806,727.806,2,1,1,"DT")
2910802
"^DD",727.806,727.806,2,3)
Enter the extract number for this extract.
"^DD",727.806,727.806,2,21,0)
^^2^2^2960909^^^^
"^DD",727.806,727.806,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727) for this 
"^DD",727.806,727.806,2,21,2,0)
extract.
"^DD",727.806,727.806,2,23,0)
^^2^2^2960909^^^^
"^DD",727.806,727.806,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is to
"^DD",727.806,727.806,2,23,2,0)
pick up the header for the mail message.
"^DD",727.806,727.806,2,"DT")
2960909
"^DD",727.806,727.806,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.806,727.806,3,.1)
Facility
"^DD",727.806,727.806,3,3)
Enter the station number where this extract was performed.
"^DD",727.806,727.806,3,21,0)
^^1^1^2960909^^^^
"^DD",727.806,727.806,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.806,727.806,3,23,0)
^^3^3^2960909^^^^
"^DD",727.806,727.806,3,23,1,0)
An indicator of the division where this event happened. It is derived 
"^DD",727.806,727.806,3,23,2,0)
from the STATION.DIVISION field (.3) of the DENTAL TREATMENT (AMIS) file 
"^DD",727.806,727.806,3,23,3,0)
(#221).
"^DD",727.806,727.806,3,"DT")
2961016
"^DD",727.806,727.806,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.806,727.806,4,.1)
Patient No. - DFN
"^DD",727.806,727.806,4,3)
Enter the name of the patient for this extract record.
"^DD",727.806,727.806,4,21,0)
^^1^1^2961021^^^^
"^DD",727.806,727.806,4,21,1,0)
The name of the patient for this extract record.
"^DD",727.806,727.806,4,23,0)
^^2^2^2961021^^^^
"^DD",727.806,727.806,4,23,1,0)
Derived from the PATIENT (POINTER) field (3) in the DENTAL TREATMENT 
"^DD",727.806,727.806,4,23,2,0)
(AMIS) file (#221). This field is a pointer to the PATIENT file (#2).
"^DD",727.806,727.806,4,"DT")
2961016
"^DD",727.806,727.806,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.806,727.806,5,.1)
Social Security Number
"^DD",727.806,727.806,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.806,727.806,5,21,0)
^^1^1^2961021^^^^
"^DD",727.806,727.806,5,21,1,0)
The patient's social security number.
"^DD",727.806,727.806,5,23,0)
^^3^3^2961021^^^^
"^DD",727.806,727.806,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.806,727.806,5,23,2,0)
(4) in the DENTAL EXTRACT file (#727.806), SSN data is derived from the 
"^DD",727.806,727.806,5,23,3,0)
SOCIAL SECURITY NUMBER field (.09) in the PATIENT file (#2).
"^DD",727.806,727.806,5,"DT")
2960909
"^DD",727.806,727.806,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.806,727.806,6,.1)
Name
"^DD",727.806,727.806,6,3)
Your answer must be 4 characters in length.
"^DD",727.806,727.806,6,21,0)
^^1^1^2961021^^^^
"^DD",727.806,727.806,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.806,727.806,6,23,0)
^^4^4^2961021^^^^
"^DD",727.806,727.806,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.806,727.806,6,23,2,0)
(4) in the DENTAL EXTRACT file (#727.806), NAME data is derived from the 
"^DD",727.806,727.806,6,23,3,0)
NAME field (.01) in the PATIENT file (#2). The first four characters of 
"^DD",727.806,727.806,6,23,4,0)
the first "," piece are used, padded with trailing spaces if necessary.
"^DD",727.806,727.806,6,"DT")
2960909
"^DD",727.806,727.806,7,0)
IN OUT PATIENT INDICATOR^P40.9'^DIC(40.9,^0;8^Q
"^DD",727.806,727.806,7,.1)
In Out Patient Indicator
"^DD",727.806,727.806,7,3)
Enter the appropriate inpatient or outpatient indicator.
"^DD",727.806,727.806,7,21,0)
^^2^2^2960909^^^^
"^DD",727.806,727.806,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for
"^DD",727.806,727.806,7,21,2,0)
this extract entry.
"^DD",727.806,727.806,7,23,0)
^^4^4^2960909^^^
"^DD",727.806,727.806,7,23,1,0)
This field is initialized to a 1, indicating an outpatient status. If 
"^DD",727.806,727.806,7,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.806,727.806,7,23,3,0)
patient movement number, then the field is reset to a 3 indicating 
"^DD",727.806,727.806,7,23,4,0)
inpatient status.
"^DD",727.806,727.806,7,"DT")
2960909
"^DD",727.806,727.806,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.806,727.806,8,.1)
Day
"^DD",727.806,727.806,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.806,727.806,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.806,727.806,8,3)
Answer must be 8 characters in length.
"^DD",727.806,727.806,8,21,0)
^^2^2^2970918^^^^
"^DD",727.806,727.806,8,21,1,0)
This 8-character string represents the date on which the Dental
"^DD",727.806,727.806,8,21,2,0)
procedure was performed.
"^DD",727.806,727.806,8,23,0)
^^9^9^2970923^^^^
"^DD",727.806,727.806,8,23,1,0)
Data source:
"^DD",727.806,727.806,8,23,2,0)
 
"^DD",727.806,727.806,8,23,3,0)
DENTAL TREATMENT (AMIS) file (#221); DATE field (#.01)
"^DD",727.806,727.806,8,23,4,0)
 
"^DD",727.806,727.806,8,23,5,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.806,727.806,8,23,6,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.806,727.806,8,23,7,0)
then a default is used.  The default date value is the value of the 
"^DD",727.806,727.806,8,23,8,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.806,727.806,8,23,9,0)
Year 2000 compliant per vendor.
"^DD",727.806,727.806,8,"DT")
2970924
"^DD",727.806,727.806,9,0)
PROVIDER^F^^0;10^K:$L(X)>11!($L(X)<1) X
"^DD",727.806,727.806,9,.1)
Provider
"^DD",727.806,727.806,9,3)
Enter provider who saw this patient.
"^DD",727.806,727.806,9,21,0)
^^1^1^2961021^^^^
"^DD",727.806,727.806,9,21,1,0)
Provider of medical care for this patient for this extract.
"^DD",727.806,727.806,9,23,0)
^^4^4^2961021^^^^
"^DD",727.806,727.806,9,23,1,0)
Provider is derived from the DENTAL PROVIDER field (.5) in the DENTAL 
"^DD",727.806,727.806,9,23,2,0)
TREATMENT (AMIS) file. DENTAL PROVIDER is a pointer to the DENTAL 
"^DD",727.806,727.806,9,23,3,0)
PROVIDER file (#220.5). It is preceded by a 1 if it is a pointer to File 
"^DD",727.806,727.806,9,23,4,0)
16 or a 2 if it is a pointer to File 200.
"^DD",727.806,727.806,9,"DT")
2961016
"^DD",727.806,727.806,10,0)
SCREENING/COMPLETE EXAM^S^S:SCREENING;C:COMPLETE;^0;11^Q
"^DD",727.806,727.806,10,.1)
Screening/Complete Exam
"^DD",727.806,727.806,10,3)
Select S for screening or C for complete exam.
"^DD",727.806,727.806,10,21,0)
^^1^1^2960909^^^
"^DD",727.806,727.806,10,21,1,0)
Exam will be S for screening or C for complete.
"^DD",727.806,727.806,10,23,0)
^^2^2^2960909^^^
"^DD",727.806,727.806,10,23,1,0)
Derived from the SCREENING/COMPLETE EXAM field (6) of the DENTAL 
"^DD",727.806,727.806,10,23,2,0)
TREATMENT (AMIS) file (#221).
"^DD",727.806,727.806,10,"DT")
2960909
"^DD",727.806,727.806,11,0)
ADMIN PROCEDURE^S^1:ADMIN PROCEDURE;^0;12^Q
"^DD",727.806,727.806,11,.1)
Admin Procedure
"^DD",727.806,727.806,11,3)
Enter 1 or A for an administrative procedure.
"^DD",727.806,727.806,11,21,0)
^^3^3^2960909^^^
"^DD",727.806,727.806,11,21,1,0)
An entry should be made in this field when a case, a service or a 
"^DD",727.806,727.806,11,21,2,0)
procedure has been administratively completed or terminated without an 
"^DD",727.806,727.806,11,21,3,0)
actual patient visit (i.e., chart review, telephone call, death, etc.).
"^DD",727.806,727.806,11,23,0)
^^2^2^2960909^^^
"^DD",727.806,727.806,11,23,1,0)
Derived from the ADMIN PROCEDURE field (7) of the DENTAL TREATMENT 
"^DD",727.806,727.806,11,23,2,0)
(AMIS) file (#221).
"^DD",727.806,727.806,11,"DT")
2960909
"^DD",727.806,727.806,12,0)
X-RAYS EXTRAORAL #^NJ1,0^^0;13^K:+X'=X!(X>4)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,12,.1)
Number of Extraoral X-Rays
"^DD",727.806,727.806,12,3)
Enter a number between 0 and 4, 0 decimal digits.
"^DD",727.806,727.806,12,21,0)
^^2^2^2960909^^^
"^DD",727.806,727.806,12,21,1,0)
Enter the number of EXTRAORAL radiographs taken on this patient for 
"^DD",727.806,727.806,12,21,2,0)
panoramic, cephalometric or other extraoral procedures.
"^DD",727.806,727.806,12,23,0)
^^2^2^2960909^^^
"^DD",727.806,727.806,12,23,1,0)
Derived from the X-RAYS EXTRAORAL # field (8) of the DENTAL TREATMENT 
"^DD",727.806,727.806,12,23,2,0)
(AMIS) file (#221).
"^DD",727.806,727.806,12,"DT")
2960910
"^DD",727.806,727.806,13,0)
X-RAYS INTRAORAL #^NJ2,0^^0;14^K:+X'=X!(X>24)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,13,.1)
Number of Intraoral X-Rays
"^DD",727.806,727.806,13,3)
Enter a number between 0 and 24, 0 decimal digits.
"^DD",727.806,727.806,13,21,0)
^^2^2^2960909^^
"^DD",727.806,727.806,13,21,1,0)
Enter the number of INTRAORAL radiographs taken for this patient for PA, 
"^DD",727.806,727.806,13,21,2,0)
bitewing, occlusal and other intraoral procedures.
"^DD",727.806,727.806,13,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,13,23,1,0)
Derived from the X-RAYS INTRAORAL # field (10) of the DENTAL TREATMENT 
"^DD",727.806,727.806,13,23,2,0)
(AMIS) file (#221).
"^DD",727.806,727.806,13,"DT")
2960910
"^DD",727.806,727.806,14,0)
PROPHY NATURAL DENTITION^S^1:YES;^0;15^Q
"^DD",727.806,727.806,14,.1)
Prophy Natural Dentition
"^DD",727.806,727.806,14,3)
Enter a 1 or Y for yes.
"^DD",727.806,727.806,14,21,0)
^^3^3^2960909^^^
"^DD",727.806,727.806,14,21,1,0)
In special circumstances, when a patient is of such a difficult nature
"^DD",727.806,727.806,14,21,2,0)
that two or more appointments are needed to complete the prophylaxis,
"^DD",727.806,727.806,14,21,3,0)
credit for each treatment episode may be recorded.
"^DD",727.806,727.806,14,23,0)
^^2^2^2960909^^^
"^DD",727.806,727.806,14,23,1,0)
Derived from the PROPHY NATURAL DENTITION field (11) of the DENTAL 
"^DD",727.806,727.806,14,23,2,0)
TREATMENT (AMIS) file (#221).
"^DD",727.806,727.806,14,"DT")
2960909
"^DD",727.806,727.806,15,0)
PROPHY DENTURE^S^1:YES;^0;16^Q
"^DD",727.806,727.806,15,.1)
Prophy Denture
"^DD",727.806,727.806,15,3)
Enter a 1 or Y for yes if the patient had one or more complete and/or partial removable prostheses cleaned and polished by any provider.
"^DD",727.806,727.806,15,21,0)
^^3^3^2960909^^^
"^DD",727.806,727.806,15,21,1,0)
If a patient had a prophylaxis of natural dentition and a removable
"^DD",727.806,727.806,15,21,2,0)
prosthesis cleaned on the same visit, an entry can be made for both
"^DD",727.806,727.806,15,21,3,0)
procedures.
"^DD",727.806,727.806,15,23,0)
^^2^2^2960909^^^
"^DD",727.806,727.806,15,23,1,0)
Derived from the PROPHY DENTURE field (12) of the DENTAL TREATMENT 
"^DD",727.806,727.806,15,23,2,0)
(AMIS) file (#221).
"^DD",727.806,727.806,15,"DT")
2960909
"^DD",727.806,727.806,16,0)
OPERATING ROOM^S^1:YES;^0;17^Q
"^DD",727.806,727.806,16,.1)
Operating Room
"^DD",727.806,727.806,16,3)
Enter a 1 or Y for yes if this patient was treated in the operating room.
"^DD",727.806,727.806,16,21,0)
^^2^2^2960909^^^^
"^DD",727.806,727.806,16,21,1,0)
Patient was treated in the operating room. These cases must be credited 
"^DD",727.806,727.806,16,21,2,0)
to a dental staff provider or a dental consultant or attending.
"^DD",727.806,727.806,16,23,0)
^^2^2^2960909^^^^
"^DD",727.806,727.806,16,23,1,0)
Derived from the OPERATING ROOM field (38) of the DENTAL TREATMENT 
"^DD",727.806,727.806,16,23,2,0)
(AMIS) file (#221).
"^DD",727.806,727.806,16,"DT")
2960909
"^DD",727.806,727.806,17,0)
NEOPLASM CONFIRMED MALIGNANT #^NJ1,0^^0;18^K:+X'=X!(X>2)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,17,.1)
Number of Neoplasm Confirmed Malignant
"^DD",727.806,727.806,17,3)
Enter a number between 0 and 2, 0 decimal digits.
"^DD",727.806,727.806,17,21,0)
^^2^2^2960909^^
"^DD",727.806,727.806,17,21,1,0)
The number of confirmed malignant neoplasms initially recognized by
"^DD",727.806,727.806,17,21,2,0)
a member of the Dental Service.
"^DD",727.806,727.806,17,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,17,23,1,0)
Derived from the NEOPLASM CONFIRMED MALIGNANT # field (14) of the DENTAL 
"^DD",727.806,727.806,17,23,2,0)
TREATMENT (AMIS) file (#221).
"^DD",727.806,727.806,17,"DT")
2960910
"^DD",727.806,727.806,18,0)
NEOPLASM REMOVED #^NJ1,0^^0;19^K:+X'=X!(X>4)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,18,.1)
Number of Neoplasm Removed
"^DD",727.806,727.806,18,3)
Enter a number between 0 and 4, 0 decimal digits.
"^DD",727.806,727.806,18,21,0)
^^1^1^2960909^^
"^DD",727.806,727.806,18,21,1,0)
The number of neoplasms removed including excisional biopsies.
"^DD",727.806,727.806,18,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,18,23,1,0)
Derived from the NEOPLASM REMOVED # field (15) of the DENTAL TREATMENT 
"^DD",727.806,727.806,18,23,2,0)
(AMIS) file (#221).
"^DD",727.806,727.806,18,"DT")
2960910
"^DD",727.806,727.806,19,0)
BIOPSY/SMEAR #^NJ1,0^^0;20^K:+X'=X!(X>4)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,19,.1)
Number of Biopsies/Smears
"^DD",727.806,727.806,19,3)
Enter a number between 0 and 4, 0 decimal digits.
"^DD",727.806,727.806,19,21,0)
^^2^2^2960909^^
"^DD",727.806,727.806,19,21,1,0)
The number of incisional biopsies plus the number of cytological smears
"^DD",727.806,727.806,19,21,2,0)
taken.
"^DD",727.806,727.806,19,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,19,23,1,0)
Derived from the BIOPSY/SMEAR # field (16) of the DENTAL TREATMENT 
"^DD",727.806,727.806,19,23,2,0)
(AMIS) file (#221).
"^DD",727.806,727.806,19,"DT")
2960910
"^DD",727.806,727.806,20,0)
FRACTURE #^NJ1,0^^0;21^K:+X'=X!(X>4)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,20,.1)
Number of Fractures
"^DD",727.806,727.806,20,3)
Enter a number between 0 and 4, 0 decimal digits.
"^DD",727.806,727.806,20,21,0)
^^2^2^2960909^^
"^DD",727.806,727.806,20,21,1,0)
The number of maxillofacial fractures (surgical sites or procedures)
"^DD",727.806,727.806,20,21,2,0)
reduced.
"^DD",727.806,727.806,20,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,20,23,1,0)
Derived from the FRACTURE # field (17) of the DENTAL TREATMENT (AMIS) 
"^DD",727.806,727.806,20,23,2,0)
file (#221).
"^DD",727.806,727.806,20,"DT")
2960910
"^DD",727.806,727.806,21,0)
PATIENT CATEGORY^P220.2'^DIC(220.2,^0;22^Q
"^DD",727.806,727.806,21,.1)
Patient Category
"^DD",727.806,727.806,21,3)
Select the appropriate patient category for this sitting.
"^DD",727.806,727.806,21,21,0)
^^1^1^2961021^^^^
"^DD",727.806,727.806,21,21,1,0)
The appropriate patient category for this dental sitting.
"^DD",727.806,727.806,21,23,0)
^^3^3^2961021^^^^
"^DD",727.806,727.806,21,23,1,0)
Derived from the PATIENT CATEGORY field (4.5) of the DENTAL TREATMENT 
"^DD",727.806,727.806,21,23,2,0)
(AMIS) file (#221). This field is a pointer to the DENTAL CLASSIFICATION 
"^DD",727.806,727.806,21,23,3,0)
file (#220.2).
"^DD",727.806,727.806,21,"DT")
2960909
"^DD",727.806,727.806,22,0)
OTHER SIGNIF. SURG. (CTV)^NJ2,0^^0;23^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,22,.1)
Other Signif. Surg. (CTV)
"^DD",727.806,727.806,22,3)
Enter a number between 0 and 99, 0 decimal digits.
"^DD",727.806,727.806,22,21,0)
^^1^1^2960909^^
"^DD",727.806,727.806,22,21,1,0)
The weighted value (CTV's) for the surgical procedure performed.
"^DD",727.806,727.806,22,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,22,23,1,0)
Derived from the OTHER SIGNIF. SURG. (CTV) field (19) of the DENTAL 
"^DD",727.806,727.806,22,23,2,0)
TREATMENT (AMIS) file (#221).
"^DD",727.806,727.806,22,"DT")
2960909
"^DD",727.806,727.806,23,0)
SURFACES RESTORED #^NJ2,0^^0;24^K:+X'=X!(X>24)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,23,.1)
Number of Surfaces Restored
"^DD",727.806,727.806,23,3)
Enter a number between 0 and 24, 0 decimal digits.
"^DD",727.806,727.806,23,21,0)
^^1^1^2960909^^
"^DD",727.806,727.806,23,21,1,0)
The number of surfaces restored with permanent restorative material.
"^DD",727.806,727.806,23,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,23,23,1,0)
Derived from the SURFACES RESTORED # field (21) of the DENTAL TREATMENT 
"^DD",727.806,727.806,23,23,2,0)
(AMIS) file (#221).
"^DD",727.806,727.806,23,"DT")
2960910
"^DD",727.806,727.806,24,0)
ROOT CANAL THERAPY #^NJ1,0^^0;25^K:+X'=X!(X>8)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,24,.1)
Number of Root Canal Therapy
"^DD",727.806,727.806,24,3)
Enter a number between 0 and 8, 0 decimal digits.
"^DD",727.806,727.806,24,21,0)
^^1^1^2960909^^
"^DD",727.806,727.806,24,21,1,0)
The number of root canals permanently filled.
"^DD",727.806,727.806,24,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,24,23,1,0)
Derived from the ROOT CANAL THERAPY # field (22) of the DENTAL TREATMENT 
"^DD",727.806,727.806,24,23,2,0)
(AMIS) file (#221).
"^DD",727.806,727.806,24,"DT")
2960910
"^DD",727.806,727.806,25,0)
PERIDONTAL QUADS (SURGICAL) #^NJ1,0^^0;26^K:+X'=X!(X>4)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,25,.1)
Peridontal Quads (Surgical) Number
"^DD",727.806,727.806,25,3)
Enter a number between 0 and 4, 0 decimal digits.
"^DD",727.806,727.806,25,21,0)
^^1^1^2960909^^
"^DD",727.806,727.806,25,21,1,0)
The number of quadrant equivalents of periodontal surgery.
"^DD",727.806,727.806,25,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,25,23,1,0)
Derived from the PERIODONTAL QUADS (SURGICAL) # field (23) of the DENTAL 
"^DD",727.806,727.806,25,23,2,0)
TREATMENT (AMIS) file (#221).
"^DD",727.806,727.806,25,"DT")
2960909
"^DD",727.806,727.806,26,0)
PERIO QUADS (ROOT PLANE) #^NJ1,0^^0;27^K:+X'=X!(X>4)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,26,.1)
Number of Perio Quads (Root Plane)
"^DD",727.806,727.806,26,3)
Enter a number between 0 and 4, 0 decimal digits.
"^DD",727.806,727.806,26,21,0)
^^2^2^2960909^^
"^DD",727.806,727.806,26,21,1,0)
The number of quadrant equivalents of subgingival curettage and/or
"^DD",727.806,727.806,26,21,2,0)
root planing.
"^DD",727.806,727.806,26,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,26,23,1,0)
Derived from the PERIO QUADS (ROOT PLANE) # field (24) of the DENTAL 
"^DD",727.806,727.806,26,23,2,0)
TREATMENT (AMIS) file (#221).
"^DD",727.806,727.806,26,"DT")
2960910
"^DD",727.806,727.806,27,0)
PATIENT ED (CTV)^S^0:NONE;3:INDIVIDUAL;4:GROUP;^0;28^Q
"^DD",727.806,727.806,27,.1)
Patient Ed (CTV)
"^DD",727.806,727.806,27,3)
Enter a 0 or N for none, a 3 or I for individual, or a 4 or G for group patient instruction.
"^DD",727.806,727.806,27,21,0)
^^1^1^2960909^^^^
"^DD",727.806,727.806,27,21,1,0)
The weighted value of preventive dentistry instructions.
"^DD",727.806,727.806,27,23,0)
^^3^3^2960909^^^^
"^DD",727.806,727.806,27,23,1,0)
Derived from the PATIENT ED. (CTV) field (25) of the DENTAL TREATMENT 
"^DD",727.806,727.806,27,23,2,0)
(AMIS) file (#221). Your answer must be 0 for none, 3 for individual or 
"^DD",727.806,727.806,27,23,3,0)
4 for group.
"^DD",727.806,727.806,27,"DT")
2960909
"^DD",727.806,727.806,28,0)
SPOT CHECK EXAM^S^1:STAFF;3:FEE;^0;29^Q
"^DD",727.806,727.806,28,.1)
Spot Check Exam
"^DD",727.806,727.806,28,3)
Enter a 1 or S for staff dentist or a 3 or F for fee dentist.
"^DD",727.806,727.806,28,21,0)
^^2^2^2960909^^^^
"^DD",727.806,727.806,28,21,1,0)
Spot check examination was performed on this patient by staff or a fee
"^DD",727.806,727.806,28,21,2,0)
dentist.
"^DD",727.806,727.806,28,23,0)
^^2^2^2960909^^^^
"^DD",727.806,727.806,28,23,1,0)
Derived from the SPOT CHECK EXAM field (6.7) of the DENTAL TREATMENT 
"^DD",727.806,727.806,28,23,2,0)
(AMIS) file (#221). Your answer must be 1 for staff or 3 for fee.
"^DD",727.806,727.806,28,"DT")
2960909
"^DD",727.806,727.806,29,0)
INDIVIDUAL CROWNS #^NJ2,0^^0;30^K:+X'=X!(X>28)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,29,.1)
Number of Individual Crowns
"^DD",727.806,727.806,29,3)
Enter a number between 0 and 28, 0 decimal digits.
"^DD",727.806,727.806,29,21,0)
^^1^1^2960909^^
"^DD",727.806,727.806,29,21,1,0)
The number of permanent crowns cemented.
"^DD",727.806,727.806,29,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,29,23,1,0)
Derived from the INDIVIDUAL CROWNS # field (27) of the DENTAL TREATMENT 
"^DD",727.806,727.806,29,23,2,0)
(AMIS) file (#221).
"^DD",727.806,727.806,29,"DT")
2960910
"^DD",727.806,727.806,30,0)
POST & CORES #^NJ2,0^^0;31^K:+X'=X!(X>28)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,30,.1)
Number of Post and Cores
"^DD",727.806,727.806,30,3)
Enter a number between 0 and 28, 0 decimal digits.
"^DD",727.806,727.806,30,21,0)
^^2^2^2960909^^
"^DD",727.806,727.806,30,21,1,0)
The number of teeth on which a post/core or overdenture coping was
"^DD",727.806,727.806,30,21,2,0)
cemented.
"^DD",727.806,727.806,30,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,30,23,1,0)
Derived from the POST & CORES # field (28) of the DENTAL TREATMENT 
"^DD",727.806,727.806,30,23,2,0)
(AMIS) file (#221).
"^DD",727.806,727.806,30,"DT")
2960910
"^DD",727.806,727.806,31,0)
FIXED PARTIALS (ABUT) #^NJ2,0^^0;32^K:+X'=X!(X>24)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,31,.1)
Number of Fixed Partials (Abut)
"^DD",727.806,727.806,31,3)
Enter a number between 0 and 24, 0 decimal digits.
"^DD",727.806,727.806,31,21,0)
^^1^1^2960909^^
"^DD",727.806,727.806,31,21,1,0)
The number of abut units contained in the fixed prosthesis inserted.
"^DD",727.806,727.806,31,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,31,23,1,0)
Derived from the FIXED PARTIALS (ABUT) # field (29) of the DENTAL 
"^DD",727.806,727.806,31,23,2,0)
TREATMENT (AMIS) file (#221).
"^DD",727.806,727.806,31,"DT")
2960910
"^DD",727.806,727.806,32,0)
FIXED PARTIALS (PONT ONLY) #^NJ2,0^^0;33^K:+X'=X!(X>28)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,32,.1)
Number of Fixed Partials (Pont Only)
"^DD",727.806,727.806,32,3)
Enter a number between 0 and 28, 0 decimal digits.
"^DD",727.806,727.806,32,21,0)
^^1^1^2960909^^
"^DD",727.806,727.806,32,21,1,0)
The number of PONTIC UNITS contained in the fixed prosthesis inserted.
"^DD",727.806,727.806,32,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,32,23,1,0)
Derived from the FIXED PARTIALS (PONT ONLY) # field (30) of the DENTAL 
"^DD",727.806,727.806,32,23,2,0)
TREATMENT (AMIS) file (#221).
"^DD",727.806,727.806,32,"DT")
2960910
"^DD",727.806,727.806,33,0)
REMOVABLE PARTIALS #^NJ1,0^^0;34^K:+X'=X!(X>2)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,33,.1)
Number of Removable Partials
"^DD",727.806,727.806,33,3)
Enter a number between 0 and 2, 0 decimal digits.
"^DD",727.806,727.806,33,21,0)
^^1^1^2960909^^
"^DD",727.806,727.806,33,21,1,0)
The number of R.P.D.s that were delivered to the patient.
"^DD",727.806,727.806,33,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,33,23,1,0)
Derived from the REMOVABLE PARTIALS # field (31) of the DENTAL TREATMENT 
"^DD",727.806,727.806,33,23,2,0)
(AMIS) file (#221).
"^DD",727.806,727.806,33,"DT")
2960910
"^DD",727.806,727.806,34,0)
COMPLETE DENTURES #^NJ1,0^^0;35^K:+X'=X!(X>2)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,34,.1)
Number of Complete Dentures
"^DD",727.806,727.806,34,3)
Enter a number between 0 and 2, 0 decimal digits.
"^DD",727.806,727.806,34,21,0)
^^2^2^2960909^^
"^DD",727.806,727.806,34,21,1,0)
The number of COMPLETE DENTURE units (each separate prosthesis is one
"^DD",727.806,727.806,34,21,2,0)
unit) delivered to the patient.
"^DD",727.806,727.806,34,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,34,23,1,0)
Derived from the COMPLETE DENTURES # field (32) of the DENTAL TREATMENT 
"^DD",727.806,727.806,34,23,2,0)
(AMIS) file (#221).
"^DD",727.806,727.806,34,"DT")
2960910
"^DD",727.806,727.806,35,0)
PROSTHETIC REPAIR #^NJ1,0^^0;36^K:+X'=X!(X>2)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,35,.1)
Number of Prosthetic Repairs
"^DD",727.806,727.806,35,3)
Enter a number between 0 and 2, 0 decimal digits.
"^DD",727.806,727.806,35,21,0)
^^2^2^2960909^^^
"^DD",727.806,727.806,35,21,1,0)
The number of removable dentures and special appliances that were 
"^DD",727.806,727.806,35,21,2,0)
repaired for this patient.
"^DD",727.806,727.806,35,22)
type a number between 0 and 2.
"^DD",727.806,727.806,35,23,0)
^^2^2^2960909^^^
"^DD",727.806,727.806,35,23,1,0)
Derived from the PROSTHETIC REPAIR # field (33) of the DENTAL TREATMENT 
"^DD",727.806,727.806,35,23,2,0)
(AMIS) file (#221).
"^DD",727.806,727.806,35,"DT")
2960910
"^DD",727.806,727.806,36,0)
SPLINT AND SPEC. PROCESS (CTV)^NJ2,0^^0;37^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,36,.1)
Splint and Spec. Process (CTV)
"^DD",727.806,727.806,36,3)
Enter a number between 0 and 99, 0 decimal digits.
"^DD",727.806,727.806,36,21,0)
^^2^2^2960909^^^
"^DD",727.806,727.806,36,21,1,0)
Contains the weighted values (CTV) assigned to special appliance 
"^DD",727.806,727.806,36,21,2,0)
delivered to or disposed of for the patient.
"^DD",727.806,727.806,36,23,0)
^^2^2^2960909^^^
"^DD",727.806,727.806,36,23,1,0)
Derived from the SPLINTS & SPEC. PROCS. (CTV) field (34) of the DENTAL 
"^DD",727.806,727.806,36,23,2,0)
TREATMENT (AMIS) file (#221).
"^DD",727.806,727.806,36,"DT")
2960909
"^DD",727.806,727.806,37,0)
EXTRACTIONS #^NJ2,0^^0;38^K:+X'=X!(X>29)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,37,.1)
Number of Extractions
"^DD",727.806,727.806,37,3)
Enter a number between 0 and 29, 0 decimal digits.
"^DD",727.806,727.806,37,21,0)
^^2^2^2960909^^
"^DD",727.806,727.806,37,21,1,0)
The number of non-impacted (erupted) teeth extracted. These are simple 
"^DD",727.806,727.806,37,21,2,0)
extractions where no surgical techniques are involved.
"^DD",727.806,727.806,37,22)
Enter a whole # between 0-29.
"^DD",727.806,727.806,37,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,37,23,1,0)
Derived from the EXTRACTIONS # field (35) of the DENTAL TREATMENT (AMIS) 
"^DD",727.806,727.806,37,23,2,0)
file (#221).
"^DD",727.806,727.806,37,"DT")
2960910
"^DD",727.806,727.806,38,0)
SURGICAL EXTRACTIONS #^NJ1,0^^0;39^K:+X'=X!(X>6)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,38,.1)
Number of Surgical Extractions
"^DD",727.806,727.806,38,3)
Enter a number between 0 and 6 indicating the number of teeth surgically extracted.
"^DD",727.806,727.806,38,21,0)
^^3^3^2960909^^
"^DD",727.806,727.806,38,21,1,0)
This includes any type of impaction or an erupted tooth where an 
"^DD",727.806,727.806,38,21,2,0)
intentional flap is required. Also includes all post-operative care and 
"^DD",727.806,727.806,38,21,3,0)
instructions.
"^DD",727.806,727.806,38,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,38,23,1,0)
Derived from the SURGICAL EXTRACTIONS # field (36) of the DENTAL 
"^DD",727.806,727.806,38,23,2,0)
TREATMENT (AMIS) file (#221).
"^DD",727.806,727.806,38,"DT")
2960910
"^DD",727.806,727.806,39,0)
OTHER SIG TREATMENT (CTV)^NJ2,0^^0;40^K:+X'=X!(X>39)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,39,.1)
Other Significant Treatment (CTV)
"^DD",727.806,727.806,39,3)
Enter a whole number between 0 and 39 indicating the weighted values (CTV) of the procedure performed.
"^DD",727.806,727.806,39,21,0)
^^1^1^2960909^^
"^DD",727.806,727.806,39,21,1,0)
Contains weighted values for procedures (CTV).
"^DD",727.806,727.806,39,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,39,23,1,0)
Derived from the OTHER SIGNIFICANT TREAT (CTV) field (37) of the DENTAL 
"^DD",727.806,727.806,39,23,2,0)
TREATMENT (AMIS) file (#221).
"^DD",727.806,727.806,39,"DT")
2960909
"^DD",727.806,727.806,40,0)
DIVISION (STATION DIVISION)^F^^0;41^K:$L(X)>5!($L(X)<1) X
"^DD",727.806,727.806,40,.1)
Division (Station Division)
"^DD",727.806,727.806,40,3)
Select the appropriate station (division) number for this Dental treatment entry.
"^DD",727.806,727.806,40,21,0)
^^1^1^2960909^^^^
"^DD",727.806,727.806,40,21,1,0)
Contains the appropriate station number for this entry.
"^DD",727.806,727.806,40,23,0)
^^3^3^2960909^^^^
"^DD",727.806,727.806,40,23,1,0)
Derived from the STATION.DIVISION field (.3) of the DENTAL TREATMENT 
"^DD",727.806,727.806,40,23,2,0)
(AMIS) file (#221). This field matches a STATION.DIVISION field (.01) 
"^DD",727.806,727.806,40,23,3,0)
entry in the DENTAL SITE PARAMETERS file (#225).
"^DD",727.806,727.806,40,"DT")
2960909
"^DD",727.806,727.806,41,0)
COMPLETIONS/TERMINATIONS^S^2:COMPLETION;3:TERMINATION;^0;42^Q
"^DD",727.806,727.806,41,.1)
Completions/Terminations
"^DD",727.806,727.806,41,3)
Enter 2 or C for a completion, or 3 or T for a termination.
"^DD",727.806,727.806,41,21,0)
^^1^1^2960909^^
"^DD",727.806,727.806,41,21,1,0)
Contains a code indicating completion or termination of a case.
"^DD",727.806,727.806,41,23,0)
^^2^2^2960909^^
"^DD",727.806,727.806,41,23,1,0)
Derived from the COMPLETIONS/TERMINATIONS field (7.1) of the DENTAL 
"^DD",727.806,727.806,41,23,2,0)
TREATMENT (AMIS) file (#221).
"^DD",727.806,727.806,41,"DT")
2960909
"^DD",727.806,727.806,42,0)
INTERDISCIPLINARY CONSULT^S^1:INTERDISCIPLINARY CONSULT;^0;43^Q
"^DD",727.806,727.806,42,.1)
Interdisciplinary Consult
"^DD",727.806,727.806,42,3)
Enter 1 or I for Interdisciplinary consult.
"^DD",727.806,727.806,42,21,0)
^^1^1^2960910^^^^
"^DD",727.806,727.806,42,21,1,0)
Contains all consults instituted via forms 513 and 10-10m.
"^DD",727.806,727.806,42,23,0)
^^2^2^2960910^^^^
"^DD",727.806,727.806,42,23,1,0)
Derived from the INTERDISCIPLINARY CONSULT field (6.2) of the DENTAL 
"^DD",727.806,727.806,42,23,2,0)
TREATMENT (AMIS) file (#221).
"^DD",727.806,727.806,42,"DT")
2960910
"^DD",727.806,727.806,43,0)
EVALUATIONS^S^1:Evaluation;^0;44^Q
"^DD",727.806,727.806,43,.1)
Evaluations
"^DD",727.806,727.806,43,3)
Enter a 1 or an E for an evaluation.
"^DD",727.806,727.806,43,21,0)
^^1^1^2960910^^^
"^DD",727.806,727.806,43,21,1,0)
Describes the professional evaluations not to exceed one per visit.
"^DD",727.806,727.806,43,23,0)
^^2^2^2960910^^^
"^DD",727.806,727.806,43,23,1,0)
Derived from the EVALUATION field (6.4) of the DENTAL TREATMENT (AMIS) 
"^DD",727.806,727.806,43,23,2,0)
file (#221).
"^DD",727.806,727.806,43,"DT")
2960910
"^DD",727.806,727.806,44,0)
PRE AUTHORIZATION/2ND OPINION^S^2:PRE-AUTH/2ND OPINION;^0;45^Q
"^DD",727.806,727.806,44,.1)
Pre-authorization/2nd Opinion
"^DD",727.806,727.806,44,3)
Enter a 2 for a pre-authorization/second opinion exam.
"^DD",727.806,727.806,44,21,0)
^^4^4^2960910^^
"^DD",727.806,727.806,44,21,1,0)
A pre-authorization exam is performed on a fee basis patient in order
"^DD",727.806,727.806,44,21,2,0)
to determine treatment needs prior to authorization of the patient to
"^DD",727.806,727.806,44,21,3,0)
a fee-for-service provider.  A second opinion exam is performed when
"^DD",727.806,727.806,44,21,4,0)
the original estimate on a fee basis dental case exceeds $500.00.
"^DD",727.806,727.806,44,23,0)
^^2^2^2960910^^
"^DD",727.806,727.806,44,23,1,0)
Derived from the PRE AUTH/2ND OPINION EXAM field (6.6) of the DENTAL 
"^DD",727.806,727.806,44,23,2,0)
TREATMENT (AMIS) file (#221).
"^DD",727.806,727.806,44,"DT")
2960910
"^DD",727.806,727.806,45,0)
SPOT CHECK DISCREPANCY^NJ1,0^^0;46^K:+X'=X!(X>3)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.806,727.806,45,.1)
Spot Check Discrepancy
"^DD",727.806,727.806,45,3)
Enter a number between 0 and 3, 0 decimal digits.
"^DD",727.806,727.806,45,21,0)
^^3^3^2960910^^^
"^DD",727.806,727.806,45,21,1,0)
Indicates the category of discrepancy. 1 is a minor discrepancy only. 
"^DD",727.806,727.806,45,21,2,0)
2 is a major discrepancy, quality only. 3 is a major discrepancy, 
"^DD",727.806,727.806,45,21,3,0)
misrepresentation only.
"^DD",727.806,727.806,45,23,0)
^^2^2^2960910^^^
"^DD",727.806,727.806,45,23,1,0)
Derived from the SPOT CHECK DISCREPANCY # field (6.8) of the DENTAL 
"^DD",727.806,727.806,45,23,2,0)
TREATMENT (AMIS) file (#221).
"^DD",727.806,727.806,45,"DT")
2960910
"^DD",727.806,727.806,46,0)
MOVEMENT FILE #^P405'^DGPM(^0;47^Q
"^DD",727.806,727.806,46,.1)
Movement File Number
"^DD",727.806,727.806,46,3)
Enter the patient movement number associated with this extract record.
"^DD",727.806,727.806,46,21,0)
^^1^1^2960910^^
"^DD",727.806,727.806,46,21,1,0)
Current patient movement record associated with this extract record.
"^DD",727.806,727.806,46,23,0)
^^4^4^2960910^^
"^DD",727.806,727.806,46,23,1,0)
A call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.806,727.806,46,23,2,0)
patient movement number (indicating inpatient status). This field is set 
"^DD",727.806,727.806,46,23,3,0)
to the value of VAIP(1), which is a pointer to the PATIENT MOVEMENT file 
"^DD",727.806,727.806,46,23,4,0)
(#405).
"^DD",727.806,727.806,46,"DT")
2960910
"^DD",727.806,727.806,47,0)
TREATING SPECIALTY^P42.4'^DIC(42.4,^0;48^Q
"^DD",727.806,727.806,47,.1)
Treating Specialty
"^DD",727.806,727.806,47,3)
Enter the name of the treating specialty associated with this extract record.
"^DD",727.806,727.806,47,21,0)
^^1^1^2960910^^^^
"^DD",727.806,727.806,47,21,1,0)
The name of the treating specialty associated with this extract record.
"^DD",727.806,727.806,47,23,0)
^^6^6^2960910^^^^
"^DD",727.806,727.806,47,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.806,727.806,47,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.806,727.806,47,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.806,727.806,47,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.806,727.806,47,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.806,727.806,47,23,6,0)
SPECIALTY file (#42.4).
"^DD",727.806,727.806,47,"DT")
2960910
"^DD",727.806,727.806,48,0)
PRIMARY CARE TEAM^F^^0;49^K:$L(X)>4!($L(X)<1) X
"^DD",727.806,727.806,48,.1)
Primary Care Team
"^DD",727.806,727.806,48,3)
Enter primary care team assigned to this patient.
"^DD",727.806,727.806,48,21,0)
^^1^1^2961031^^^^
"^DD",727.806,727.806,48,21,1,0)
The primary care team assigned to this patient.
"^DD",727.806,727.806,48,23,0)
^^6^6^2961031^^
"^DD",727.806,727.806,48,23,1,0)
Using the DATE field (.01) from the DENTAL TREATMENT (AMIS) file (#221) 
"^DD",727.806,727.806,48,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) 
"^DD",727.806,727.806,48,23,3,0)
in the DENTAL EXTRACT file (#727.806), a call is made to the Scheduling 
"^DD",727.806,727.806,48,23,4,0)
API, OUTPTTM^SDUTL3. The API returns the team's internal entry number 
"^DD",727.806,727.806,48,23,5,0)
and name from the TEAM file (#404.51). Only the pointer (IEN) to File 
"^DD",727.806,727.806,48,23,6,0)
404.51 is transmitted.
"^DD",727.806,727.806,48,"DT")
2961031
"^DD",727.806,727.806,49,0)
PRIMARY CARE PROVIDER^F^^0;50^K:$L(X)>11!($L(X)<1) X
"^DD",727.806,727.806,49,.1)
Primary Care Provider
"^DD",727.806,727.806,49,3)
Enter primary care provider assigned to this patient.
"^DD",727.806,727.806,49,21,0)
^^1^1^2961031^^^^
"^DD",727.806,727.806,49,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.806,727.806,49,23,0)
^^6^6^2961031^^
"^DD",727.806,727.806,49,23,1,0)
Using the DATE field (.01) from the DENTAL TREATMENT (AMIS) file (#221) 
"^DD",727.806,727.806,49,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) 
"^DD",727.806,727.806,49,23,3,0)
in the DENTAL EXTRACT file (#727.806), a call is made to the Scheduling 
"^DD",727.806,727.806,49,23,4,0)
API, OUTPTPR^SDUTL3. The API returns the provider's internal entry 
"^DD",727.806,727.806,49,23,5,0)
number and name from the NEW PERSON file (#200). Only the pointer (IEN) 
"^DD",727.806,727.806,49,23,6,0)
to File 200 is transmitted.
"^DD",727.806,727.806,49,"DT")
2961016
"^DD",727.806,727.806,50,0)
TIME^FO^^0;51^K:$L(X)>6!($L(X)<6) X
"^DD",727.806,727.806,50,.1)
Time
"^DD",727.806,727.806,50,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.806,727.806,50,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.806,727.806,50,3)
Answer must be 6 characters in length.
"^DD",727.806,727.806,50,21,0)
^^2^2^2970918^^^^
"^DD",727.806,727.806,50,21,1,0)
A 6-character numeric string which represents the Dental 
"^DD",727.806,727.806,50,21,2,0)
procedure time.
"^DD",727.806,727.806,50,23,0)
^^6^6^2970918^^^^
"^DD",727.806,727.806,50,23,1,0)
Data source:
"^DD",727.806,727.806,50,23,2,0)
 
"^DD",727.806,727.806,50,23,3,0)
DENTAL TREATMENT (AMIS) file (#221); DATE field (#.01)
"^DD",727.806,727.806,50,23,4,0)
 
"^DD",727.806,727.806,50,23,5,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.806,727.806,50,23,6,0)
cannot be determined, then "000300" is used as default.
"^DD",727.806,727.806,50,"DT")
2970924
"^DD",727.808,727.808,0)
FIELD^^23^24
"^DD",727.808,727.808,0,"DIK")
ECX808
"^DD",727.808,727.808,0,"DIKOLD")
ECX808
"^DD",727.808,727.808,0,"DT")
2970918
"^DD",727.808,727.808,0,"IX","AC",727.808,2)

"^DD",727.808,727.808,0,"IX","AINV",727.808,.01)

"^DD",727.808,727.808,0,"NM","PHYSICAL MOVEMENT EXTRACT")

"^DD",727.808,727.808,0,"VRPK")
DSS EXTRACTS
"^DD",727.808,727.808,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.808,727.808,.01,.1)
Sequence Number
"^DD",727.808,727.808,.01,1,0)
^.1
"^DD",727.808,727.808,.01,1,1,0)
727.808^AINV^MUMPS
"^DD",727.808,727.808,.01,1,1,1)
S ^ECX(727.808,"AINV",-X,DA)=""
"^DD",727.808,727.808,.01,1,1,2)
K ^ECX(727.808,"AINV",-X,DA)
"^DD",727.808,727.808,.01,1,1,3)
DO NOT DELETE.
"^DD",727.808,727.808,.01,1,1,"%D",0)
^^3^3^2961009^^^
"^DD",727.808,727.808,.01,1,1,"%D",1,0)
This is an inverse entry cross reference.  It is used to find the
"^DD",727.808,727.808,.01,1,1,"%D",2,0)
last entry in the file.  It is essential for the management of the
"^DD",727.808,727.808,.01,1,1,"%D",3,0)
extract and the purge of extract data.
"^DD",727.808,727.808,.01,1,1,"DT")
2921016
"^DD",727.808,727.808,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",727.808,727.808,.01,21,0)
^^1^1^2960910^^^^
"^DD",727.808,727.808,.01,21,1,0)
The record number for this extract entry.
"^DD",727.808,727.808,.01,23,0)
^^1^1^2960910^^^^
"^DD",727.808,727.808,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",727.808,727.808,.01,"DT")
2960910
"^DD",727.808,727.808,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.808,727.808,1,.1)
Year/Month
"^DD",727.808,727.808,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.808,727.808,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.808,727.808,1,3)
Answer must be 6 characters in length.
"^DD",727.808,727.808,1,21,0)
^^2^2^2970922^^^^
"^DD",727.808,727.808,1,21,1,0)
A six character numeric string representing the year and the month
"^DD",727.808,727.808,1,21,2,0)
for which this extract was performed.
"^DD",727.808,727.808,1,23,0)
^^1^1^2970922^^^^
"^DD",727.808,727.808,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.808,727.808,1,"DT")
2970924
"^DD",727.808,727.808,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.808,727.808,2,.1)
Extract Number
"^DD",727.808,727.808,2,1,0)
^.1
"^DD",727.808,727.808,2,1,1,0)
727.808^AC
"^DD",727.808,727.808,2,1,1,1)
S ^ECX(727.808,"AC",$E(X,1,30),DA)=""
"^DD",727.808,727.808,2,1,1,2)
K ^ECX(727.808,"AC",$E(X,1,30),DA)
"^DD",727.808,727.808,2,1,1,3)
DO NOT DELETE.
"^DD",727.808,727.808,2,1,1,"%D",0)
^^2^2^2961009^^
"^DD",727.808,727.808,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data
"^DD",727.808,727.808,2,1,1,"%D",2,0)
in this file.
"^DD",727.808,727.808,2,1,1,"DT")
2910802
"^DD",727.808,727.808,2,3)
Enter the extract number for this extract.
"^DD",727.808,727.808,2,21,0)
^^2^2^2960910^^^^
"^DD",727.808,727.808,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727) for this 
"^DD",727.808,727.808,2,21,2,0)
extract.
"^DD",727.808,727.808,2,23,0)
^^2^2^2960910^^^^
"^DD",727.808,727.808,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is to
"^DD",727.808,727.808,2,23,2,0)
pick up the header for the mail message.
"^DD",727.808,727.808,2,"DT")
2960910
"^DD",727.808,727.808,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.808,727.808,3,.1)
Facility
"^DD",727.808,727.808,3,3)
Enter the station number where this extract was performed.
"^DD",727.808,727.808,3,21,0)
^^1^1^2961014^^^^
"^DD",727.808,727.808,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.808,727.808,3,23,0)
^^3^3^2961014^^^^
"^DD",727.808,727.808,3,23,1,0)
An indicator of the division where this event happened.  It is derived
"^DD",727.808,727.808,3,23,2,0)
from the DIVISION field (.015) of the WARD LOCATION file (#42) which
"^DD",727.808,727.808,3,23,3,0)
points to the MEDICAL CENTER DIVISION file (#40.8).
"^DD",727.808,727.808,3,"DT")
2961014
"^DD",727.808,727.808,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.808,727.808,4,.1)
Patient No. - DFN
"^DD",727.808,727.808,4,3)
Enter the name of the patient for this extract record.
"^DD",727.808,727.808,4,21,0)
^^1^1^2961021^^^^
"^DD",727.808,727.808,4,21,1,0)
The name of the patient for this extract record.
"^DD",727.808,727.808,4,23,0)
^^4^4^2961021^^
"^DD",727.808,727.808,4,23,1,0)
Pointer to the PATIENT file (#2). This data represents the patient DFN. 
"^DD",727.808,727.808,4,23,2,0)
Using the "ATT2" or "ATT3" cross reference on the PATIENT MOVEMENT file 
"^DD",727.808,727.808,4,23,3,0)
(#405), the PATIENT NO. - DFN data is derived from the PATIENT field
"^DD",727.808,727.808,4,23,4,0)
(.03).
"^DD",727.808,727.808,4,"DT")
2961014
"^DD",727.808,727.808,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.808,727.808,5,.1)
Social Security Number
"^DD",727.808,727.808,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.808,727.808,5,21,0)
^^1^1^2961021^^^^
"^DD",727.808,727.808,5,21,1,0)
The patient's social security number.
"^DD",727.808,727.808,5,23,0)
^^3^3^2961021^^
"^DD",727.808,727.808,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.808,727.808,5,23,2,0)
in the PHYSICAL MOVEMENT EXTRACT file (#727.808), SSN data is derived from
"^DD",727.808,727.808,5,23,3,0)
the SOCIAL SECURITY NUMBER field (.09) in the PATIENT file (#2).
"^DD",727.808,727.808,5,"DT")
2960911
"^DD",727.808,727.808,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.808,727.808,6,.1)
Name
"^DD",727.808,727.808,6,3)
Your answer must be 4 characters in length.
"^DD",727.808,727.808,6,21,0)
^^1^1^2961021^^^^
"^DD",727.808,727.808,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.808,727.808,6,23,0)
^^5^5^2961021^^
"^DD",727.808,727.808,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.808,727.808,6,23,2,0)
in the PHYSICAL MOVEMENT EXTRACT file (#727.808), NAME data is derived
"^DD",727.808,727.808,6,23,3,0)
from the NAME field (.01) in the PATIENT file (#2). The first four
"^DD",727.808,727.808,6,23,4,0)
characters of the first "," piece are used, padded with trailing spaces
"^DD",727.808,727.808,6,23,5,0)
if necessary.
"^DD",727.808,727.808,6,"DT")
2960911
"^DD",727.808,727.808,7,0)
IN OUT PATIENT INDICATOR^P40.9'^DIC(40.9,^0;8^Q
"^DD",727.808,727.808,7,.1)
In Out Patient Indicator
"^DD",727.808,727.808,7,3)
Enter the appropriate inpatient or outpatient indicator.
"^DD",727.808,727.808,7,21,0)
^^2^2^2960911^^^^
"^DD",727.808,727.808,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for
"^DD",727.808,727.808,7,21,2,0)
this extract entry.
"^DD",727.808,727.808,7,23,0)
^^2^2^2961014^^^^
"^DD",727.808,727.808,7,23,1,0)
For the Physical Movement extract this field is set to 3, indicating 
"^DD",727.808,727.808,7,23,2,0)
inpatient status in the LOCATION TYPE file (#40.9).
"^DD",727.808,727.808,7,"DT")
2960911
"^DD",727.808,727.808,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.808,727.808,8,.1)
Day
"^DD",727.808,727.808,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.808,727.808,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.808,727.808,8,3)
Answer must be 8 characters in length.
"^DD",727.808,727.808,8,21,0)
^^2^2^2970922^^^^
"^DD",727.808,727.808,8,21,1,0)
This 8-character numeric string represents the date of the physical
"^DD",727.808,727.808,8,21,2,0)
movement.
"^DD",727.808,727.808,8,23,0)
^^9^9^2970923^^^^
"^DD",727.808,727.808,8,23,1,0)
Data source:
"^DD",727.808,727.808,8,23,2,0)
 
"^DD",727.808,727.808,8,23,3,0)
PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.808,727.808,8,23,4,0)
 
"^DD",727.808,727.808,8,23,5,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.808,727.808,8,23,6,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.808,727.808,8,23,7,0)
then a default is used.  The default date value is the value of the 
"^DD",727.808,727.808,8,23,8,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.808,727.808,8,23,9,0)
Year 2000 compliant per vendor.
"^DD",727.808,727.808,8,"DT")
2970924
"^DD",727.808,727.808,9,0)
PRODUCT^F^^0;10^K:$L(X)>1!($L(X)<1) X
"^DD",727.808,727.808,9,.1)
Product
"^DD",727.808,727.808,9,3)
Your answer must be 1 character in length.
"^DD",727.808,727.808,9,21,0)
^^2^2^2960911^^
"^DD",727.808,727.808,9,21,1,0)
The product or feeder key for this extract as defined by the DSS 
"^DD",727.808,727.808,9,21,2,0)
Program Office.
"^DD",727.808,727.808,9,23,0)
^^1^1^2961014^^^^
"^DD",727.808,727.808,9,23,1,0)
For the Physical Movement extract, the PRODUCT field is null.
"^DD",727.808,727.808,9,"DT")
2960911
"^DD",727.808,727.808,10,0)
ADMISSION DATE^FO^^0;11^K:$L(X)>8!($L(X)<8) X
"^DD",727.808,727.808,10,.1)
Admission Date
"^DD",727.808,727.808,10,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.808,727.808,10,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.808,727.808,10,3)
Answer must be 8 characters in length.
"^DD",727.808,727.808,10,21,0)
^^2^2^2970923^^^^
"^DD",727.808,727.808,10,21,1,0)
This 8-character string represents the date on which the admission
"^DD",727.808,727.808,10,21,2,0)
associated with this physical movement occurred.
"^DD",727.808,727.808,10,23,0)
^^10^10^2971113^^^^
"^DD",727.808,727.808,10,23,1,0)
Data source:
"^DD",727.808,727.808,10,23,2,0)
 
"^DD",727.808,727.808,10,23,3,0)
PATIENT MOVEMENT file (#405); ADMISSION/CHECK-IN MOVEMENT field (#.14)
"^DD",727.808,727.808,10,23,4,0)
   then to PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.808,727.808,10,23,5,0)
 
"^DD",727.808,727.808,10,23,6,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.808,727.808,10,23,7,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.808,727.808,10,23,8,0)
then a default is used.  The default date value is the value of the 
"^DD",727.808,727.808,10,23,9,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.808,727.808,10,23,10,0)
Year 2000 compliant per vendor.
"^DD",727.808,727.808,10,"DT")
2970924
"^DD",727.808,727.808,11,0)
DISCHARGE DATE^FO^^0;12^K:$L(X)>8!($L(X)<8) X
"^DD",727.808,727.808,11,.1)
Discharge Date
"^DD",727.808,727.808,11,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.808,727.808,11,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.808,727.808,11,3)
Answer must be 8 characters in length.
"^DD",727.808,727.808,11,21,0)
^^2^2^2970922^^^^
"^DD",727.808,727.808,11,21,1,0)
This 8-character string represents the date on which the Discharge
"^DD",727.808,727.808,11,21,2,0)
occurred for discharge-type movements.
"^DD",727.808,727.808,11,23,0)
^^9^9^2970923^^^^
"^DD",727.808,727.808,11,23,1,0)
Data source:
"^DD",727.808,727.808,11,23,2,0)
 
"^DD",727.808,727.808,11,23,3,0)
PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.808,727.808,11,23,4,0)
 
"^DD",727.808,727.808,11,23,5,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.808,727.808,11,23,6,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.808,727.808,11,23,7,0)
then a default is used.  The default date value is the value of the 
"^DD",727.808,727.808,11,23,8,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.808,727.808,11,23,9,0)
Year 2000 compliant per vendor.
"^DD",727.808,727.808,11,"DT")
2970924
"^DD",727.808,727.808,12,0)
MOVEMENT FILE #^P405'^DGPM(^0;13^Q
"^DD",727.808,727.808,12,.1)
Movement File Number
"^DD",727.808,727.808,12,3)
Enter the patient movement number associated with this extract record.
"^DD",727.808,727.808,12,21,0)
^^1^1^2960911^^
"^DD",727.808,727.808,12,21,1,0)
Current patient movement record associated with this extract record.
"^DD",727.808,727.808,12,23,0)
^^3^3^2961014^^^
"^DD",727.808,727.808,12,23,1,0)
The ^DGPM("ATT2" or "ATT3",DATE,D0) cross reference is used to 
"^DD",727.808,727.808,12,23,2,0)
obtain the current movement number associated with this patient. 
"^DD",727.808,727.808,12,23,3,0)
It is a pointer to the PATIENT MOVEMENT file (#405).
"^DD",727.808,727.808,12,"DT")
2960911
"^DD",727.808,727.808,13,0)
TYPE^F^^0;14^K:$L(X)>1!($L(X)<1) X
"^DD",727.808,727.808,13,.1)
Type
"^DD",727.808,727.808,13,3)
Your answer must be 1 character in length.
"^DD",727.808,727.808,13,21,0)
^^2^2^2960911^^^^
"^DD",727.808,727.808,13,21,1,0)
The type of movement for this patient, either transfer (2) or 
"^DD",727.808,727.808,13,21,2,0)
discharge (3).
"^DD",727.808,727.808,13,23,0)
^^2^2^2961014^^^^
"^DD",727.808,727.808,13,23,1,0)
Using the "ATT"_TYPE cross reference where TYPE=2 (transfer) or 
"^DD",727.808,727.808,13,23,2,0)
TYPE=3 (discharge).
"^DD",727.808,727.808,13,"DT")
2960911
"^DD",727.808,727.808,14,0)
LOSING WARD^P44'^SC(^0;15^Q
"^DD",727.808,727.808,14,.1)
Losing Ward
"^DD",727.808,727.808,14,3)
Enter the ward from which this patient was transferred.
"^DD",727.808,727.808,14,21,0)
^^1^1^2960911^^^^
"^DD",727.808,727.808,14,21,1,0)
The ward from which this patient was transferred.
"^DD",727.808,727.808,14,23,0)
^^4^4^2961014^^^^
"^DD",727.808,727.808,14,23,1,0)
LOSING WARD is derived from HOSPITAL LOCATION FILE POINTER field (44) of 
"^DD",727.808,727.808,14,23,2,0)
the WARD LOCATION file (#42) as pointed to by the WARD LOCATION field 
"^DD",727.808,727.808,14,23,3,0)
(.06) of the PATIENT MOVEMENT file (#405). LOSING WARD is a pointer to 
"^DD",727.808,727.808,14,23,4,0)
the HOSPITAL LOCATION file (#44).
"^DD",727.808,727.808,14,"DT")
2960911
"^DD",727.808,727.808,15,0)
TREATING SPECIALTY^P42.4'^DIC(42.4,^0;16^Q
"^DD",727.808,727.808,15,.1)
Treating Specialty
"^DD",727.808,727.808,15,3)
Enter the name of the treating specialty associated with this extract record.
"^DD",727.808,727.808,15,21,0)
^^1^1^2960911^^^^
"^DD",727.808,727.808,15,21,1,0)
The name of the treating specialty associated with this extract record.
"^DD",727.808,727.808,15,23,0)
^^1^1^2961015^^^^
"^DD",727.808,727.808,15,23,1,0)
For the Physical Movement extract, the TREATING SPECIALTY field is null.
"^DD",727.808,727.808,15,"DT")
2960911
"^DD",727.808,727.808,16,0)
DURATION^NJ4,0^^0;17^K:+X'=X!(X>5000)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.808,727.808,16,.1)
Duration
"^DD",727.808,727.808,16,3)
Enter a number between 0 and 5000, 0 decimal digits.
"^DD",727.808,727.808,16,21,0)
^^1^1^2960911^^^
"^DD",727.808,727.808,16,21,1,0)
Duration of stay within this movement.
"^DD",727.808,727.808,16,23,0)
^^4^4^2961014^^^^
"^DD",727.808,727.808,16,23,1,0)
Calculated as current movement date minus the date (DATE/TIME 
"^DD",727.808,727.808,16,23,2,0)
field (.01) of the PATIENT MOVEMENT file (#405)) of the last physical 
"^DD",727.808,727.808,16,23,3,0)
movement (ADMISSION/CHECK-IN MOVEMENT field (.14) of the PATIENT 
"^DD",727.808,727.808,16,23,4,0)
MOVEMENT file (#405)).
"^DD",727.808,727.808,16,"DT")
2960911
"^DD",727.808,727.808,17,0)
ATTENDING PHYSICIAN^F^^0;18^K:$L(X)>11!($L(X)<1) X
"^DD",727.808,727.808,17,.1)
Attending Physician
"^DD",727.808,727.808,17,3)
Enter attending physician assigned to this patient.
"^DD",727.808,727.808,17,21,0)
^^1^1^2961025^^^^
"^DD",727.808,727.808,17,21,1,0)
The attending physician assigned to this patient with this movement.
"^DD",727.808,727.808,17,23,0)
^^1^1^2961025^^^^
"^DD",727.808,727.808,17,23,1,0)
For the Physical Movement extract, the ATTENDING PHYSICIAN field is null.
"^DD",727.808,727.808,17,"DT")
2961025
"^DD",727.808,727.808,18,0)
MOVEMENT TYPE^P405.2'^DG(405.2,^0;19^Q
"^DD",727.808,727.808,18,.1)
Movement Type
"^DD",727.808,727.808,18,3)
Enter the patient movement type associated with this extract record.
"^DD",727.808,727.808,18,21,0)
^^1^1^2970723^^^^
"^DD",727.808,727.808,18,21,1,0)
THE MAS movement type for this movement.
"^DD",727.808,727.808,18,23,0)
^^3^3^2970723^^^^
"^DD",727.808,727.808,18,23,1,0)
MOVEMENT TYPE is derived from the MAS MOVEMENT TYPE field (.18) of 
"^DD",727.808,727.808,18,23,2,0)
the PATIENT MOVEMENT file (#405). It is a pointer to the MAS MOVEMENT 
"^DD",727.808,727.808,18,23,3,0)
TYPE file (#405.2).
"^DD",727.808,727.808,18,"DT")
2960911
"^DD",727.808,727.808,19,0)
MOV TIME^FO^^0;20^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.808,727.808,19,.1)
MOV Time
"^DD",727.808,727.808,19,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.808,727.808,19,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.808,727.808,19,3)
Answer must be 6 characters in length.
"^DD",727.808,727.808,19,21,0)
^^2^2^2970922^^^^
"^DD",727.808,727.808,19,21,1,0)
This 6-character numeric string represents the time of day at
"^DD",727.808,727.808,19,21,2,0)
which the physical movement occurred.
"^DD",727.808,727.808,19,23,0)
^^6^6^2970923^^^^
"^DD",727.808,727.808,19,23,1,0)
Data source:
"^DD",727.808,727.808,19,23,2,0)
 
"^DD",727.808,727.808,19,23,3,0)
PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.808,727.808,19,23,4,0)
 
"^DD",727.808,727.808,19,23,5,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.808,727.808,19,23,6,0)
cannot be determined, then "000300" is used as default.
"^DD",727.808,727.808,19,"DT")
2970924
"^DD",727.808,727.808,20,0)
GAINING WARD^P44'^SC(^0;21^Q
"^DD",727.808,727.808,20,.1)
Gaining Ward
"^DD",727.808,727.808,20,3)
Enter the ward to which this patient was moved.
"^DD",727.808,727.808,20,21,0)
^^2^2^2961014^^^
"^DD",727.808,727.808,20,21,1,0)
The ward to which this patient was moved. This is null for discharge 
"^DD",727.808,727.808,20,21,2,0)
type movements.
"^DD",727.808,727.808,20,23,0)
^^4^4^2961014^^^
"^DD",727.808,727.808,20,23,1,0)
GAINING WARD is derived from the HOSPITAL LOCATION FILE POINTER field 
"^DD",727.808,727.808,20,23,2,0)
(44) of the WARD LOCATION file (#42) as pointed to by the WARD LOCATION 
"^DD",727.808,727.808,20,23,3,0)
field (.06) of the PATIENT MOVEMENT file (#405). GAINING WARD is a 
"^DD",727.808,727.808,20,23,4,0)
pointer to the HOSPITAL LOCATION file (#44).
"^DD",727.808,727.808,20,"DT")
2960911
"^DD",727.808,727.808,21,0)
ADMISSION TIME^FO^^0;22^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.808,727.808,21,.1)
Admission Time
"^DD",727.808,727.808,21,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.808,727.808,21,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.808,727.808,21,3)
Answer must be 6 characters in length.
"^DD",727.808,727.808,21,21,0)
^^2^2^2970922^^^^
"^DD",727.808,727.808,21,21,1,0)
A 6-character numeric string which represents the time of day at
"^DD",727.808,727.808,21,21,2,0)
which the admission associated with the physical movement occurred.
"^DD",727.808,727.808,21,23,0)
^^7^7^2971113^^^^
"^DD",727.808,727.808,21,23,1,0)
Data source:
"^DD",727.808,727.808,21,23,2,0)
 
"^DD",727.808,727.808,21,23,3,0)
PATIENT MOVEMENT file (#405); ADMISSION/CHECK-IN MOVEMENT field (#.14)
"^DD",727.808,727.808,21,23,4,0)
   then to PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.808,727.808,21,23,5,0)
 
"^DD",727.808,727.808,21,23,6,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.808,727.808,21,23,7,0)
cannot be determined, then "000300" is used as default.
"^DD",727.808,727.808,21,"DT")
2970924
"^DD",727.808,727.808,22,0)
LAST ATTENDING^P200'^VA(200,^0;23^Q
"^DD",727.808,727.808,22,21,0)
^^1^1^2970918^
"^DD",727.808,727.808,22,21,1,0)
To be used for future development; currently set to null.
"^DD",727.808,727.808,22,23,0)
^^1^1^2970918^
"^DD",727.808,727.808,22,23,1,0)
For future development.
"^DD",727.808,727.808,22,"DT")
2970918
"^DD",727.808,727.808,23,0)
LAST WARD PROVIDER^P200'^VA(200,^0;24^Q
"^DD",727.808,727.808,23,21,0)
^^1^1^2970918^
"^DD",727.808,727.808,23,21,1,0)
To be used for future development; currently set to null.
"^DD",727.808,727.808,23,23,0)
^^1^1^2970918^
"^DD",727.808,727.808,23,23,1,0)
For future development.
"^DD",727.808,727.808,23,"DT")
2970918
"^DD",727.809,727.809,0)
FIELD^^21^22
"^DD",727.809,727.809,0,"DDA")
N
"^DD",727.809,727.809,0,"DIK")
ECX809
"^DD",727.809,727.809,0,"DIKOLD")
ECX809
"^DD",727.809,727.809,0,"DT")
2970922
"^DD",727.809,727.809,0,"IX","AC",727.809,2)

"^DD",727.809,727.809,0,"IX","AINV",727.809,.01)

"^DD",727.809,727.809,0,"NM","UNIT DOSE LOCAL EXTRACT")

"^DD",727.809,727.809,0,"VRPK")
DSS EXTRACTS
"^DD",727.809,727.809,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.809,727.809,.01,.1)
Sequence Number
"^DD",727.809,727.809,.01,1,0)
^.1
"^DD",727.809,727.809,.01,1,1,0)
727.809^AINV^MUMPS
"^DD",727.809,727.809,.01,1,1,1)
S ^ECX(727.809,"AINV",-X,DA)=""
"^DD",727.809,727.809,.01,1,1,2)
K ^ECX(727.809,"AINV",-X,DA)
"^DD",727.809,727.809,.01,1,1,3)
DO NOT DELETE.
"^DD",727.809,727.809,.01,1,1,"%D",0)
^^3^3^2960808^^^
"^DD",727.809,727.809,.01,1,1,"%D",1,0)
This is an inverse entry cross reference.  It is used to find the
"^DD",727.809,727.809,.01,1,1,"%D",2,0)
last entry in the file.  It is essential for the management of the
"^DD",727.809,727.809,.01,1,1,"%D",3,0)
extract and the purge of extract data.
"^DD",727.809,727.809,.01,1,1,"DT")
2921016
"^DD",727.809,727.809,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",727.809,727.809,.01,21,0)
^^1^1^2960913^^^^
"^DD",727.809,727.809,.01,21,1,0)
The record number for this extract entry.
"^DD",727.809,727.809,.01,23,0)
^^1^1^2960913^^^
"^DD",727.809,727.809,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",727.809,727.809,.01,"DT")
2960913
"^DD",727.809,727.809,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.809,727.809,1,.1)
Year/Month
"^DD",727.809,727.809,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.809,727.809,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.809,727.809,1,3)
Answer must be 6 characters in length.
"^DD",727.809,727.809,1,21,0)
^^2^2^2970922^^^^
"^DD",727.809,727.809,1,21,1,0)
A six character numeric string representing the year and the month
"^DD",727.809,727.809,1,21,2,0)
for which this extract was performed.
"^DD",727.809,727.809,1,23,0)
^^1^1^2970922^^^^
"^DD",727.809,727.809,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.809,727.809,1,"DT")
2970924
"^DD",727.809,727.809,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.809,727.809,2,.1)
Extract Number
"^DD",727.809,727.809,2,1,0)
^.1
"^DD",727.809,727.809,2,1,1,0)
727.809^AC
"^DD",727.809,727.809,2,1,1,1)
S ^ECX(727.809,"AC",$E(X,1,30),DA)=""
"^DD",727.809,727.809,2,1,1,2)
K ^ECX(727.809,"AC",$E(X,1,30),DA)
"^DD",727.809,727.809,2,1,1,3)
DO NOT DELETE.
"^DD",727.809,727.809,2,1,1,"%D",0)
^^2^2^2960808^
"^DD",727.809,727.809,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data
"^DD",727.809,727.809,2,1,1,"%D",2,0)
in this file.
"^DD",727.809,727.809,2,1,1,"DT")
2910802
"^DD",727.809,727.809,2,3)
Enter the extract number for this extract.
"^DD",727.809,727.809,2,21,0)
^^2^2^2960913^^^^
"^DD",727.809,727.809,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727) for this 
"^DD",727.809,727.809,2,21,2,0)
extract.
"^DD",727.809,727.809,2,23,0)
^^2^2^2960913^^^^
"^DD",727.809,727.809,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is to
"^DD",727.809,727.809,2,23,2,0)
pick up the header for the mail message.
"^DD",727.809,727.809,2,"DT")
2960913
"^DD",727.809,727.809,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.809,727.809,3,.1)
Facility
"^DD",727.809,727.809,3,3)
Enter the station number where this extract was performed.
"^DD",727.809,727.809,3,21,0)
^^1^1^2960913^^^^
"^DD",727.809,727.809,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.809,727.809,3,23,0)
^^3^3^2960913^^^^
"^DD",727.809,727.809,3,23,1,0)
An indicator of the division where this event happened. It is derived
"^DD",727.809,727.809,3,23,2,0)
from the DIVISION field (.015) of the WARD LOCATION file (#42) which
"^DD",727.809,727.809,3,23,3,0)
points to the MEDICAL CENTER DIVISION file (#40.8).
"^DD",727.809,727.809,3,"DT")
2961018
"^DD",727.809,727.809,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.809,727.809,4,.1)
Patient No. - DFN
"^DD",727.809,727.809,4,3)
Enter the name of the patient for this extract record.
"^DD",727.809,727.809,4,21,0)
^^1^1^2970701^^^^
"^DD",727.809,727.809,4,21,1,0)
The name of the patient for this extract record.
"^DD",727.809,727.809,4,23,0)
^^3^3^2970701^^^
"^DD",727.809,727.809,4,23,1,0)
Pointer to the NAME field (.01) of the PATIENT file (#2). PATIENT NO. -
"^DD",727.809,727.809,4,23,2,0)
DFN data is derived from the DFN field (1) of the UNIT DOSE EXTRACT 
"^DD",727.809,727.809,4,23,3,0)
DATA file (#728.904).
"^DD",727.809,727.809,4,"DT")
2961018
"^DD",727.809,727.809,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.809,727.809,5,.1)
Social Security Number
"^DD",727.809,727.809,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.809,727.809,5,21,0)
^^1^1^2970701^^^^
"^DD",727.809,727.809,5,21,1,0)
The patient's social security number.
"^DD",727.809,727.809,5,23,0)
^^3^3^2970701^^^
"^DD",727.809,727.809,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.809,727.809,5,23,2,0)
in the UNIT DOSE LOCAL EXTRACT file (#727.809), SSN data is derived from
"^DD",727.809,727.809,5,23,3,0)
the SOCIAL SECURITY NUMBER field (.09) in the PATIENT file (#2).
"^DD",727.809,727.809,5,"DT")
2960913
"^DD",727.809,727.809,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.809,727.809,6,.1)
Name
"^DD",727.809,727.809,6,3)
Your answer must be 4 characters in length.
"^DD",727.809,727.809,6,21,0)
^^1^1^2961021^^^^
"^DD",727.809,727.809,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.809,727.809,6,23,0)
^^4^4^2961021^^
"^DD",727.809,727.809,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.809,727.809,6,23,2,0)
in the UNIT DOSE LOCAL EXTRACT file (#727.809), NAME data is derived from
"^DD",727.809,727.809,6,23,3,0)
the NAME field (.01) in the PATIENT file (#2). The first four characters
"^DD",727.809,727.809,6,23,4,0)
of the first "," piece are used, padded with trailing spaces if necessary.
"^DD",727.809,727.809,6,"DT")
2960913
"^DD",727.809,727.809,7,0)
IN OUT PATIENT INDICATOR^P40.9'^DIC(40.9,^0;8^Q
"^DD",727.809,727.809,7,.1)
In Out Patient Indicator
"^DD",727.809,727.809,7,3)
Enter the appropriate inpatient or outpatient indicator.
"^DD",727.809,727.809,7,21,0)
^^2^2^2960913^^^^
"^DD",727.809,727.809,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this 
"^DD",727.809,727.809,7,21,2,0)
extract entry.
"^DD",727.809,727.809,7,23,0)
^^2^2^2960913^^^
"^DD",727.809,727.809,7,23,1,0)
For the Unit Dose Local extract this field is set to 3, indicating 
"^DD",727.809,727.809,7,23,2,0)
inpatient status in the LOCATION TYPE file (#40.9).
"^DD",727.809,727.809,7,"DT")
2960913
"^DD",727.809,727.809,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.809,727.809,8,.1)
Day
"^DD",727.809,727.809,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.809,727.809,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.809,727.809,8,3)
Answer must be 8 characters in length.
"^DD",727.809,727.809,8,21,0)
^^2^2^2970922^^^^
"^DD",727.809,727.809,8,21,1,0)
This 8-character string represents the date on which the Unit Dose 
"^DD",727.809,727.809,8,21,2,0)
event (dispense or return) occurred.
"^DD",727.809,727.809,8,23,0)
^^15^15^2970923^^^^
"^DD",727.809,727.809,8,23,1,0)
Data source:
"^DD",727.809,727.809,8,23,2,0)
 
"^DD",727.809,727.809,8,23,3,0)
(1) UNIT DOSE EXTRACT DATA file (#728.904); DATE field (#2)
"^DD",727.809,727.809,8,23,4,0)
Data is inserted in this field by Pharmacy routines PSGPLF and
"^DD",727.809,727.809,8,23,5,0)
PSGAMSA; these routines derive the data from --
"^DD",727.809,727.809,8,23,6,0)
(2) UNIT DOSE PICK LIST STATS file (#57.6); DATE field (#.01)
"^DD",727.809,727.809,8,23,7,0)
    PICK LIST file (#53.5); START DATE/TIME field (#.03)
"^DD",727.809,727.809,8,23,8,0)
    or
"^DD",727.809,727.809,8,23,9,0)
    DT (i.e., FileMan variable for Today's Date)
"^DD",727.809,727.809,8,23,10,0)
 
"^DD",727.809,727.809,8,23,11,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.809,727.809,8,23,12,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.809,727.809,8,23,13,0)
then a default is used.  The default date value is the value of the 
"^DD",727.809,727.809,8,23,14,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.809,727.809,8,23,15,0)
Year 2000 compliant per vendor.
"^DD",727.809,727.809,8,"DT")
2970924
"^DD",727.809,727.809,9,0)
VA DRUG CLASSIFICATION^F^^0;10^K:$L(X)>5!($L(X)<5) X
"^DD",727.809,727.809,9,.1)
VA Drug Classification
"^DD",727.809,727.809,9,3)
Your answer must be 5 characters in length.
"^DD",727.809,727.809,9,21,0)
^^1^1^2960913^^^
"^DD",727.809,727.809,9,21,1,0)
The VA Drug Classification for the item in this order.
"^DD",727.809,727.809,9,23,0)
^^3^3^2960913^^^
"^DD",727.809,727.809,9,23,1,0)
Derived from the VA CLASSIFICATION field (2) in the DRUG file (#50) 
"^DD",727.809,727.809,9,23,2,0)
for the drug identified by the DRUG field (3) in the UNIT DOSE EXTRACT 
"^DD",727.809,727.809,9,23,3,0)
DATA file (#728.904).
"^DD",727.809,727.809,9,"DT")
2960913
"^DD",727.809,727.809,10,0)
QUANTITY^NJ8,2^^0;11^K:+X'=X!(X>10000)!(X<0)!(X?.E1"."3N.N) X
"^DD",727.809,727.809,10,.1)
Quantity
"^DD",727.809,727.809,10,3)
Enter a number between 0 and 10000, 2 decimal digits.
"^DD",727.809,727.809,10,21,0)
^^1^1^2960913^^^^
"^DD",727.809,727.809,10,21,1,0)
Quantity dispensed.
"^DD",727.809,727.809,10,23,0)
^^2^2^2960913^^^^
"^DD",727.809,727.809,10,23,1,0)
QUANTITY is derived from the QUANTITY field (4) of the UNIT DOSE EXTRACT 
"^DD",727.809,727.809,10,23,2,0)
DATA file (#728.904).
"^DD",727.809,727.809,10,"DT")
2960913
"^DD",727.809,727.809,11,0)
WARD^P44'^SC(^0;12^Q
"^DD",727.809,727.809,11,.1)
Ward
"^DD",727.809,727.809,11,3)
Enter the ward location for this patient.
"^DD",727.809,727.809,11,21,0)
^^1^1^2960913^^
"^DD",727.809,727.809,11,21,1,0)
This is the location of the patient when he received the medication.
"^DD",727.809,727.809,11,23,0)
^^5^5^2960913^^^
"^DD",727.809,727.809,11,23,1,0)
Ward is derived from the WARD field (5) in the UNIT DOSE EXTRACT DATA 
"^DD",727.809,727.809,11,23,2,0)
file (#728.904) which is a pointer to the WARD LOCATION file (#42). 
"^DD",727.809,727.809,11,23,3,0)
Using the ward pointer, the data is derived from the HOSPITAL LOCATION 
"^DD",727.809,727.809,11,23,4,0)
FILE POINTER field (44) in the WARD LOCATION file (#42) which is a 
"^DD",727.809,727.809,11,23,5,0)
pointer to the HOSPITAL LOCATION file (#44).
"^DD",727.809,727.809,11,"DT")
2960913
"^DD",727.809,727.809,12,0)
PROVIDER^F^^0;13^K:$L(X)>11!($L(X)<1) X
"^DD",727.809,727.809,12,.1)
Provider
"^DD",727.809,727.809,12,3)
Enter provider assigned to this patient.
"^DD",727.809,727.809,12,21,0)
^^1^1^2961021^^^^
"^DD",727.809,727.809,12,21,1,0)
The provider assigned to this patient.
"^DD",727.809,727.809,12,23,0)
^^3^3^2961021^^^^
"^DD",727.809,727.809,12,23,1,0)
PROVIDER data is derived from the PROVIDER field (6) of the UNIT DOSE 
"^DD",727.809,727.809,12,23,2,0)
EXTRACT DATA file (#728.904). It is a pointer to the NEW PERSON file 
"^DD",727.809,727.809,12,23,3,0)
(#200). This data is stored as "2"_pointer value.
"^DD",727.809,727.809,12,"DT")
2961018
"^DD",727.809,727.809,13,0)
COST^NJ8,2^^0;14^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>10000)!(X<0) X
"^DD",727.809,727.809,13,.1)
Cost
"^DD",727.809,727.809,13,3)
Enter a dollar amount between 0 and 10000, 2 decimal digits.
"^DD",727.809,727.809,13,21,0)
^^1^1^2961021^^^^
"^DD",727.809,727.809,13,21,1,0)
Cost of drug dispensed for this patient.
"^DD",727.809,727.809,13,23,0)
^^2^2^2961021^^^^
"^DD",727.809,727.809,13,23,1,0)
COST data is derived from the TOTAL COST field (7) of the UNIT DOSE 
"^DD",727.809,727.809,13,23,2,0)
EXTRACT DATA file (#728.904).
"^DD",727.809,727.809,13,"DT")
2960913
"^DD",727.809,727.809,14,0)
MOVEMENT FILE #^P405'^DGPM(^0;15^Q
"^DD",727.809,727.809,14,.1)
Movement File Number
"^DD",727.809,727.809,14,3)
Enter the patient movement number associated with this extract record.
"^DD",727.809,727.809,14,21,0)
^^1^1^2960913^^
"^DD",727.809,727.809,14,21,1,0)
Current patient movement record associated with this extract record.
"^DD",727.809,727.809,14,23,0)
^^4^4^2960913^^
"^DD",727.809,727.809,14,23,1,0)
A call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.809,727.809,14,23,2,0)
patient movement number (indicating inpatient status). This field is set 
"^DD",727.809,727.809,14,23,3,0)
to the value of VAIP(1), which is a pointer to the PATIENT MOVEMENT file 
"^DD",727.809,727.809,14,23,4,0)
(#405).
"^DD",727.809,727.809,14,"DT")
2960913
"^DD",727.809,727.809,15,0)
TREATING SPECIALTY^P42.4'^DIC(42.4,^0;16^Q
"^DD",727.809,727.809,15,.1)
Treating Specialty
"^DD",727.809,727.809,15,3)
Enter the name of the treating specialty associated with this extract record.
"^DD",727.809,727.809,15,21,0)
^^1^1^2960913^^^
"^DD",727.809,727.809,15,21,1,0)
The name of the treating specialty associated with this extract record.
"^DD",727.809,727.809,15,23,0)
^^6^6^2960913^^^
"^DD",727.809,727.809,15,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.809,727.809,15,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.809,727.809,15,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.809,727.809,15,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.809,727.809,15,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.809,727.809,15,23,6,0)
SPECIALTY file (#42.4).
"^DD",727.809,727.809,15,"DT")
2960913
"^DD",727.809,727.809,16,0)
NDC^F^^0;17^K:$L(X)>15!($L(X)<1) X
"^DD",727.809,727.809,16,.1)
National Drug Code
"^DD",727.809,727.809,16,3)
Your answer must be 1 to 15 characters in length.
"^DD",727.809,727.809,16,21,0)
^^1^1^2960913^^
"^DD",727.809,727.809,16,21,1,0)
This is the National Drug Code for the drug/supply item in this order.
"^DD",727.809,727.809,16,23,0)
^^3^3^2960913^^
"^DD",727.809,727.809,16,23,1,0)
Derived from the NDC field (31) in the DRUG file (#50) for the drug 
"^DD",727.809,727.809,16,23,2,0)
identified by the DRUG field (3) in the UNIT DOSE EXTRACT DATA file 
"^DD",727.809,727.809,16,23,3,0)
(#728.904).
"^DD",727.809,727.809,16,"DT")
2960913
"^DD",727.809,727.809,17,0)
NEW FEEDER KEY^F^^0;18^K:$L(X)>20!($L(X)<19) X
"^DD",727.809,727.809,17,.1)
New Feeder Key
"^DD",727.809,727.809,17,3)
Your answer must be 19 to 20 characters in length.
"^DD",727.809,727.809,17,21,0)
^^4^4^2960913^^
"^DD",727.809,727.809,17,21,1,0)
The feeder key for the drug in this record. The feeder key is a nineteen 
"^DD",727.809,727.809,17,21,2,0)
digit number made up of the pointer to the NATIONAL DRUG file padded to 
"^DD",727.809,727.809,17,21,3,0)
four digits, the pointer to the VA Product Name padded to three digits, 
"^DD",727.809,727.809,17,21,4,0)
and the twelve digit National Drug Code.
"^DD",727.809,727.809,17,23,0)
^^8^8^2960913^^
"^DD",727.809,727.809,17,23,1,0)
NEW FEEDER KEY is compiled for the drug identified by the DRUG field (3) 
"^DD",727.809,727.809,17,23,2,0)
in the UNIT DOSE EXTRACT DATA file (#728.904). It contains the NATIONAL 
"^DD",727.809,727.809,17,23,3,0)
DRUG FILE ENTRY field (20) from the DRUG file (#50) which is a pointer 
"^DD",727.809,727.809,17,23,4,0)
to the NATIONAL DRUG file (#50.6) padded to four digits. This is 
"^DD",727.809,727.809,17,23,5,0)
concatenated with the PSNDF VA PRODUCT NAME ENTRY field (22) from the 
"^DD",727.809,727.809,17,23,6,0)
DRUG file (#50) which is a pointer to the VA Product Name in the 
"^DD",727.809,727.809,17,23,7,0)
NATIONAL DRUG file (#50.6) padded to three digits. This is concatenated 
"^DD",727.809,727.809,17,23,8,0)
with the twelve digit NDC field (31) from the DRUG file (#50).
"^DD",727.809,727.809,17,"DT")
2960913
"^DD",727.809,727.809,18,0)
INVESTIGATIONAL^S^I:INVESTIGATIONAL;^0;19^Q
"^DD",727.809,727.809,18,.1)
Investigational
"^DD",727.809,727.809,18,3)
Enter I if the drug is investigational.
"^DD",727.809,727.809,18,21,0)
^^2^2^2960913^^
"^DD",727.809,727.809,18,21,1,0)
This field contains the letter I if the drug in this record is 
"^DD",727.809,727.809,18,21,2,0)
investigational. Otherwise it is null.
"^DD",727.809,727.809,18,23,0)
^^2^2^2960913^^
"^DD",727.809,727.809,18,23,1,0)
Derived from the DEA, SPECIAL HDLG field (3) in the DRUG file (#50).
"^DD",727.809,727.809,18,23,2,0)
If the DEA, SPECIAL HDLG field contains an I, this field is set to I.
"^DD",727.809,727.809,18,"DT")
2960913
"^DD",727.809,727.809,19,0)
UDP TIME^FO^^0;20^K:$L(X)>6!($L(X)<6) X
"^DD",727.809,727.809,19,.1)
UDP Time
"^DD",727.809,727.809,19,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.809,727.809,19,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.809,727.809,19,3)
Answer must be 6 characters in length.
"^DD",727.809,727.809,19,21,0)
^^1^1^2970918^^^^
"^DD",727.809,727.809,19,21,1,0)
A 6-character numeric string representing a time data element.
"^DD",727.809,727.809,19,23,0)
^^15^15^2970918^^^^
"^DD",727.809,727.809,19,23,1,0)
Data source:
"^DD",727.809,727.809,19,23,2,0)
 
"^DD",727.809,727.809,19,23,3,0)
(1) UNIT DOSE EXTRACT DATA file (#728.904); DATE field (#2)
"^DD",727.809,727.809,19,23,4,0)
Data is inserted in this field by Pharmacy routines PSGPLF and
"^DD",727.809,727.809,19,23,5,0)
PSGAMSA; these routines derive the data from --
"^DD",727.809,727.809,19,23,6,0)
(2) UNIT DOSE PICK LIST STATS file (#57.6); DATE field (#.01)
"^DD",727.809,727.809,19,23,7,0)
    PICK LIST file (#53.5); START DATE/TIME field (#.03)
"^DD",727.809,727.809,19,23,8,0)
    where only the 1st "." piece (date) is used.
"^DD",727.809,727.809,19,23,9,0)
    or
"^DD",727.809,727.809,19,23,10,0)
    DT (i.e., FileMan variable for Today's Date)
"^DD",727.809,727.809,19,23,11,0)
 
"^DD",727.809,727.809,19,23,12,0)
The source for this data element does NOT provide any time information;
"^DD",727.809,727.809,19,23,13,0)
only date is provided.  Consequently, the UDP TIME field is always
"^DD",727.809,727.809,19,23,14,0)
set to "000000".
"^DD",727.809,727.809,19,23,15,0)
 
"^DD",727.809,727.809,19,"DT")
2970924
"^DD",727.809,727.809,20,0)
ADMISSION DATE^FO^^0;21^K:$L(X)>8!($L(X)<8) X
"^DD",727.809,727.809,20,.1)
Admission Date
"^DD",727.809,727.809,20,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.809,727.809,20,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.809,727.809,20,3)
Answer must be 8 characters in length.
"^DD",727.809,727.809,20,21,0)
^^2^2^2970922^^^^
"^DD",727.809,727.809,20,21,1,0)
This 8-character string represents the date on which the admission
"^DD",727.809,727.809,20,21,2,0)
associated with this Unit Dose event occurred.
"^DD",727.809,727.809,20,23,0)
^^10^10^2971113^^^^
"^DD",727.809,727.809,20,23,1,0)
Data source:
"^DD",727.809,727.809,20,23,2,0)
 
"^DD",727.809,727.809,20,23,3,0)
UNIT DOSE EXTRACT DATA file (#728.904); DFN field (#1)
"^DD",727.809,727.809,20,23,4,0)
   then to PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.809,727.809,20,23,5,0)
 
"^DD",727.809,727.809,20,23,6,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.809,727.809,20,23,7,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.809,727.809,20,23,8,0)
then a default is used.  The default date value is the value of the 
"^DD",727.809,727.809,20,23,9,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.809,727.809,20,23,10,0)
Year 2000 compliant per vendor.
"^DD",727.809,727.809,20,"DT")
2970924
"^DD",727.809,727.809,21,0)
ADMISSION TIME^FO^^0;22^K:$L(X)>6!($L(X)<6) X
"^DD",727.809,727.809,21,.1)
Admission Time
"^DD",727.809,727.809,21,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.809,727.809,21,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.809,727.809,21,3)
Answer must be 6 characters in length.
"^DD",727.809,727.809,21,21,0)
^^2^2^2970922^^^^
"^DD",727.809,727.809,21,21,1,0)
A 6-character numeric string which represents the time of day at
"^DD",727.809,727.809,21,21,2,0)
which the admission associated with the Unit Dose event occurred.
"^DD",727.809,727.809,21,23,0)
^^12^12^2971113^^^^
"^DD",727.809,727.809,21,23,1,0)
A call to IN5^VADPT (using the patient IEN and the event date) returns 
"^DD",727.809,727.809,21,23,2,0)
the internal file number of the admission associated with this movement. 
"^DD",727.809,727.809,21,23,3,0)
ADMISSION TIME is derived from the DATE/TIME field (.01) of the PATIENT 
"^DD",727.809,727.809,21,23,4,0)
MOVEMENT file (#405) for the movement found in VAIP(13). ADMISSION TIME 
"^DD",727.809,727.809,21,23,5,0)
is padded with trailing zeros to six digits.
"^DD",727.809,727.809,21,23,6,0)
Data source:
"^DD",727.809,727.809,21,23,7,0)
 
"^DD",727.809,727.809,21,23,8,0)
UNIT DOSE EXTRACT DATA file (#728.904); DFN field (#1)
"^DD",727.809,727.809,21,23,9,0)
   then to PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.809,727.809,21,23,10,0)
 
"^DD",727.809,727.809,21,23,11,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.809,727.809,21,23,12,0)
cannot be determined, then "000300" is used as default.
"^DD",727.809,727.809,21,"DT")
2970924
"^DD",727.81,727.81,0)
FIELD^^9^34
"^DD",727.81,727.81,0,"DDA")
N
"^DD",727.81,727.81,0,"DIK")
ECX810
"^DD",727.81,727.81,0,"DIKOLD")
ECX810
"^DD",727.81,727.81,0,"DT")
2970918
"^DD",727.81,727.81,0,"IX","AC",727.81,2)

"^DD",727.81,727.81,0,"IX","AINV",727.81,.01)

"^DD",727.81,727.81,0,"NM","PRESCRIPTION EXTRACT")

"^DD",727.81,727.81,0,"VRPK")
DSS EXTRACTS
"^DD",727.81,727.81,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.81,727.81,.01,.1)
Sequence Number
"^DD",727.81,727.81,.01,1,0)
^.1
"^DD",727.81,727.81,.01,1,1,0)
727.81^AINV^MUMPS
"^DD",727.81,727.81,.01,1,1,1)
S ^ECX(727.81,"AINV",-X,DA)=""
"^DD",727.81,727.81,.01,1,1,2)
K ^ECX(727.81,"AINV",-X,DA)
"^DD",727.81,727.81,.01,1,1,3)
DO NOT DELETE.
"^DD",727.81,727.81,.01,1,1,"%D",0)
^^3^3^2960808^^^
"^DD",727.81,727.81,.01,1,1,"%D",1,0)
This is an inverse entry cross reference.  It is used to find the
"^DD",727.81,727.81,.01,1,1,"%D",2,0)
last entry in the file.  It is essential for the management of the
"^DD",727.81,727.81,.01,1,1,"%D",3,0)
extract and the purge of extract data.
"^DD",727.81,727.81,.01,1,1,"DT")
2921016
"^DD",727.81,727.81,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",727.81,727.81,.01,21,0)
^^1^1^2960918^^^^
"^DD",727.81,727.81,.01,21,1,0)
The record number for this extract entry.
"^DD",727.81,727.81,.01,23,0)
^^1^1^2960918^^^
"^DD",727.81,727.81,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",727.81,727.81,.01,"DT")
2960918
"^DD",727.81,727.81,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.81,727.81,1,.1)
Year/Month
"^DD",727.81,727.81,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.81,727.81,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.81,727.81,1,3)
Answer must be 6 characters in length.
"^DD",727.81,727.81,1,21,0)
^^2^2^2970918^^^^
"^DD",727.81,727.81,1,21,1,0)
A six character numeric string representing the year and the month
"^DD",727.81,727.81,1,21,2,0)
for which this extract was performed.
"^DD",727.81,727.81,1,23,0)
^^1^1^2970918^^^^
"^DD",727.81,727.81,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.81,727.81,1,"DT")
2970924
"^DD",727.81,727.81,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.81,727.81,2,.1)
Extract Number
"^DD",727.81,727.81,2,1,0)
^.1
"^DD",727.81,727.81,2,1,1,0)
727.81^AC
"^DD",727.81,727.81,2,1,1,1)
S ^ECX(727.81,"AC",$E(X,1,30),DA)=""
"^DD",727.81,727.81,2,1,1,2)
K ^ECX(727.81,"AC",$E(X,1,30),DA)
"^DD",727.81,727.81,2,1,1,3)
DO NOT DELETE.
"^DD",727.81,727.81,2,1,1,"%D",0)
^^2^2^2960808^
"^DD",727.81,727.81,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data
"^DD",727.81,727.81,2,1,1,"%D",2,0)
in this file.
"^DD",727.81,727.81,2,1,1,"DT")
2910802
"^DD",727.81,727.81,2,3)
Enter the extract number for this extract.
"^DD",727.81,727.81,2,21,0)
^^2^2^2960918^^^^
"^DD",727.81,727.81,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727) for this 
"^DD",727.81,727.81,2,21,2,0)
extract.
"^DD",727.81,727.81,2,23,0)
^^2^2^2960918^^^^
"^DD",727.81,727.81,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is to
"^DD",727.81,727.81,2,23,2,0)
pick up the header for the mail message.
"^DD",727.81,727.81,2,"DT")
2960918
"^DD",727.81,727.81,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.81,727.81,3,.1)
Facility
"^DD",727.81,727.81,3,3)
Enter the station number where this extract was performed.
"^DD",727.81,727.81,3,21,0)
^^1^1^2960918^^^^
"^DD",727.81,727.81,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.81,727.81,3,23,0)
^^4^4^2960918^^^^
"^DD",727.81,727.81,3,23,1,0)
An indicator of the division where this event happened. Using the NAME 
"^DD",727.81,727.81,3,23,2,0)
field (.01) pointer from the DSS EXTRACTS file (#728), FACILITY is 
"^DD",727.81,727.81,3,23,3,0)
derived from the STATION NUMBER field (99) for that pointer number in 
"^DD",727.81,727.81,3,23,4,0)
the INSTITUTION file (#4).
"^DD",727.81,727.81,3,"DT")
2961015
"^DD",727.81,727.81,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.81,727.81,4,.1)
Patient No. - DFN
"^DD",727.81,727.81,4,3)
Enter the name of the patient for this extract record.
"^DD",727.81,727.81,4,21,0)
^^1^1^2961021^^^^
"^DD",727.81,727.81,4,21,1,0)
The name of the patient for this extract record.
"^DD",727.81,727.81,4,23,0)
^^3^3^2961021^^^
"^DD",727.81,727.81,4,23,1,0)
Derived from the PATIENT field (2) in the PRESCRIPTION file (#52). 
"^DD",727.81,727.81,4,23,2,0)
PATIENT NO. - DFN is a pointer to the NAME field (.01) of the PATIENT 
"^DD",727.81,727.81,4,23,3,0)
file (#2). This data represents the patient DFN.
"^DD",727.81,727.81,4,"DT")
2961015
"^DD",727.81,727.81,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.81,727.81,5,.1)
Social Security Number
"^DD",727.81,727.81,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.81,727.81,5,21,0)
^^1^1^2961021^^^^
"^DD",727.81,727.81,5,21,1,0)
The patient's social security number.
"^DD",727.81,727.81,5,23,0)
^^3^3^2961021^^
"^DD",727.81,727.81,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.81,727.81,5,23,2,0)
in the PRESCRIPTION EXTRACT file (#727.81), SSN data is derived from the
"^DD",727.81,727.81,5,23,3,0)
SOCIAL SECURITY NUMBER field (.09) in the PATIENT file (#2).
"^DD",727.81,727.81,5,"DT")
2960918
"^DD",727.81,727.81,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.81,727.81,6,.1)
Name
"^DD",727.81,727.81,6,3)
Your answer must be 4 characters in length.
"^DD",727.81,727.81,6,21,0)
^^1^1^2961021^^^^
"^DD",727.81,727.81,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.81,727.81,6,23,0)
^^4^4^2961021^^
"^DD",727.81,727.81,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.81,727.81,6,23,2,0)
in the PRESCRIPTION EXTRACT file (#727.81), NAME data is derived from the
"^DD",727.81,727.81,6,23,3,0)
NAME field (.01) in the PATIENT file (#2). The first four characters of
"^DD",727.81,727.81,6,23,4,0)
the first "," piece are used, padded with trailing spaces if necessary.
"^DD",727.81,727.81,6,"DT")
2960918
"^DD",727.81,727.81,7,0)
IN OUT PATIENT INDICATOR^P40.9'^DIC(40.9,^0;8^Q
"^DD",727.81,727.81,7,.1)
In Out Patient Indicator
"^DD",727.81,727.81,7,3)
Enter the appropriate inpatient or outpatient indicator.
"^DD",727.81,727.81,7,21,0)
^^2^2^2960918^^^^
"^DD",727.81,727.81,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for
"^DD",727.81,727.81,7,21,2,0)
this extract entry.
"^DD",727.81,727.81,7,23,0)
^^4^4^2960918^^^
"^DD",727.81,727.81,7,23,1,0)
This field is initialized to a 1, indicating an outpatient status. If 
"^DD",727.81,727.81,7,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.81,727.81,7,23,3,0)
patient movement number, then the field is reset to a 3 indicating 
"^DD",727.81,727.81,7,23,4,0)
inpatient status.
"^DD",727.81,727.81,7,"DT")
2960918
"^DD",727.81,727.81,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.81,727.81,8,.1)
Day
"^DD",727.81,727.81,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.81,727.81,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.81,727.81,8,3)
Answer must be 8 characters in length.
"^DD",727.81,727.81,8,21,0)
^^2^2^2970918^^^^
"^DD",727.81,727.81,8,21,1,0)
This 8-character string represents the date on which the Prescription
"^DD",727.81,727.81,8,21,2,0)
fill/refill was released.
"^DD",727.81,727.81,8,23,0)
^^19^19^2971113^^^^
"^DD",727.81,727.81,8,23,1,0)
If the version of Outpatient Pharmacy is prior to V. 6.0, DAY is 
"^DD",727.81,727.81,8,23,2,0)
derived from $E(DATE,6,7) where date is the FILL DATE field (22) of 
"^DD",727.81,727.81,8,23,3,0)
the PRESCRIPTION file (#52).
"^DD",727.81,727.81,8,23,4,0)
  
"^DD",727.81,727.81,8,23,5,0)
Data source for Outpatient Pharmacy v6.0 and later:
"^DD",727.81,727.81,8,23,6,0)
 
"^DD",727.81,727.81,8,23,7,0)
PRESCRIPTION file (#52); REFILL sub-file (#52.1); 
"^DD",727.81,727.81,8,23,8,0)
   RELEASED DATE/TIME field (#17)
"^DD",727.81,727.81,8,23,9,0)
   
"^DD",727.81,727.81,8,23,10,0)
or
"^DD",727.81,727.81,8,23,11,0)
   
"^DD",727.81,727.81,8,23,12,0)
PRESCRIPTION file (#52); PARTIAL DATE sub-file (#52.2);
"^DD",727.81,727.81,8,23,13,0)
   RELEASED DATE/TIME field (#8)
"^DD",727.81,727.81,8,23,14,0)
 
"^DD",727.81,727.81,8,23,15,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.81,727.81,8,23,16,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.81,727.81,8,23,17,0)
then a default is used.  The default date value is the value of the 
"^DD",727.81,727.81,8,23,18,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.81,727.81,8,23,19,0)
Year 2000 compliant per vendor.
"^DD",727.81,727.81,8,"DT")
2970924
"^DD",727.81,727.81,9,0)
DIVISION^P59'^PS(59,^0;10^Q
"^DD",727.81,727.81,9,.1)
Division
"^DD",727.81,727.81,9,3)
Enter the outpatient pharmacy site.
"^DD",727.81,727.81,9,21,0)
^^1^1^2961015^^^
"^DD",727.81,727.81,9,21,1,0)
The outpatient pharmacy site for this extract entry.
"^DD",727.81,727.81,9,23,0)
^^7^7^2961015^^^^
"^DD",727.81,727.81,9,23,1,0)
For new prescriptions, DIVISION is derived from the DIVISION field 
"^DD",727.81,727.81,9,23,2,0)
(20) of the PRESCRIPTION file (#52). For refill prescriptions, 
"^DD",727.81,727.81,9,23,3,0)
DIVISION is derived from the DIVISION field (8) within the REFILL 
"^DD",727.81,727.81,9,23,4,0)
multiple (52) of the PRESCRIPTION file (#52). For partial prescriptions, 
"^DD",727.81,727.81,9,23,5,0)
DIVISION is derived from the DIVISION field (.09) within the PARTIAL 
"^DD",727.81,727.81,9,23,6,0)
DATE multiple (60) of the PRESCRIPTION file (#52). DIVISION is a pointer 
"^DD",727.81,727.81,9,23,7,0)
to the OUTPATIENT SITE file (#59)
"^DD",727.81,727.81,9,"DT")
2960918
"^DD",727.81,727.81,10,0)
PROVIDER^F^^0;11^K:$L(X)>11!($L(X)<1) X
"^DD",727.81,727.81,10,.1)
Provider
"^DD",727.81,727.81,10,3)
Enter provider for this record.
"^DD",727.81,727.81,10,21,0)
^^1^1^2961021^^^^
"^DD",727.81,727.81,10,21,1,0)
The provider assigned to this patient.
"^DD",727.81,727.81,10,23,0)
^^9^9^2961021^^^^
"^DD",727.81,727.81,10,23,1,0)
Derived from the PROVIDER field (4) in the PRESCRIPTION file (#52) 
"^DD",727.81,727.81,10,23,2,0)
for new prescriptions, or from the PROVIDER field (15) within the REFILL 
"^DD",727.81,727.81,10,23,3,0)
multiple (52) in the PRESCRIPTION file (#52) for refill prescriptions, 
"^DD",727.81,727.81,10,23,4,0)
or from the PROVIDER field (6) within the PARTIAL DATE multiple (60) in 
"^DD",727.81,727.81,10,23,5,0)
the PRESCRIPTION file (#52) for partial prescriptions.
"^DD",727.81,727.81,10,23,6,0)
  
"^DD",727.81,727.81,10,23,7,0)
If PROVIDER is a pointer to the NEW PERSON file (#200), it is stored as 
"^DD",727.81,727.81,10,23,8,0)
"2"_pointer value. If PROVIDER is a pointer to the PROVIDER file (#6), 
"^DD",727.81,727.81,10,23,9,0)
it is stored as "6"_pointer value.
"^DD",727.81,727.81,10,"DT")
2961015
"^DD",727.81,727.81,11,0)
VA DRUG CLASSIFICATION^F^^0;12^K:$L(X)>5!($L(X)<5) X
"^DD",727.81,727.81,11,.1)
VA Drug Classification
"^DD",727.81,727.81,11,3)
Your answer must be 5 characters in length.
"^DD",727.81,727.81,11,21,0)
^^1^1^2961015^
"^DD",727.81,727.81,11,21,1,0)
The VA Drug Classification for the drug/supply item in this prescription.
"^DD",727.81,727.81,11,23,0)
^^2^2^2961015^
"^DD",727.81,727.81,11,23,1,0)
Derived from the VA CLASSIFICATION field (2) in the DRUG file (#50) for
"^DD",727.81,727.81,11,23,2,0)
the drug identified by the DRUG field (6) in the PRESCRIPTION file (#52).
"^DD",727.81,727.81,11,"DT")
2960918
"^DD",727.81,727.81,12,0)
MAIL^F^^0;13^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,12,.1)
Mail
"^DD",727.81,727.81,12,3)
Your answer must be 1 character in length.
"^DD",727.81,727.81,12,21,0)
^^2^2^2970729^^^^
"^DD",727.81,727.81,12,21,1,0)
Data will be 1 if this prescription was mailed from the VAMC or a 2 
"^DD",727.81,727.81,12,21,2,0)
if mailed from a CMOP.
"^DD",727.81,727.81,12,23,0)
^^6^6^2970729^^^^
"^DD",727.81,727.81,12,23,1,0)
Derived from the MAIL/WINDOW field (11) in the PRESCRIPTION file 
"^DD",727.81,727.81,12,23,2,0)
(#52) for new prescriptions, or from the MAIL/WINDOW field (2) within 
"^DD",727.81,727.81,12,23,3,0)
the REFILL multiple (52) in the PRESCRIPTION file (#52) for refill 
"^DD",727.81,727.81,12,23,4,0)
prescriptions, or from the MAIL/WINDOW field (.02) within the PARTIAL 
"^DD",727.81,727.81,12,23,5,0)
DATE multiple (60) in the PRESCRIPTION file (#52) for partial 
"^DD",727.81,727.81,12,23,6,0)
prescriptions.
"^DD",727.81,727.81,12,"DT")
2960918
"^DD",727.81,727.81,13,0)
PLACEHOLDER1^F^^0;14^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,13,.1)
Placeholder1
"^DD",727.81,727.81,13,3)
Your answer must be 1 character in length.
"^DD",727.81,727.81,13,21,0)
^^1^1^2961021^^
"^DD",727.81,727.81,13,21,1,0)
This field marked as a placeholder for future use.
"^DD",727.81,727.81,13,23,0)
^^1^1^2961021^^
"^DD",727.81,727.81,13,23,1,0)
This field marked as a placeholder for future use.
"^DD",727.81,727.81,13,"DT")
2961015
"^DD",727.81,727.81,14,0)
NEW^F^^0;15^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,14,.1)
New
"^DD",727.81,727.81,14,3)
Your answer must be 1 character in length.
"^DD",727.81,727.81,14,21,0)
^^1^1^2961127^^^^
"^DD",727.81,727.81,14,21,1,0)
Data will be 1 if this is a new prescription.
"^DD",727.81,727.81,14,23,0)
^^17^17^2961127^^
"^DD",727.81,727.81,14,23,1,0)
If the version of Outpatient Pharmacy is prior to V. 6.0, examine 
"^DD",727.81,727.81,14,23,2,0)
the "AD" cross reference on the FILL DATE field (22) of the 
"^DD",727.81,727.81,14,23,3,0)
PRESCRIPTION file (#52) for new prescriptions or the REFILL DATE 
"^DD",727.81,727.81,14,23,4,0)
field (.01) within the REFILL multiple (52) of the PRESCRIPTION 
"^DD",727.81,727.81,14,23,5,0)
file (#52) for refill prescriptions. Cross reference is 
"^DD",727.81,727.81,14,23,6,0)
^PSRX("AD",DATE,D0,REFILL# or 0 for new RX).
"^DD",727.81,727.81,14,23,7,0)
  
"^DD",727.81,727.81,14,23,8,0)
If the version of Outpatient Pharmacy is V. 6.0 or greater:
"^DD",727.81,727.81,14,23,9,0)
1.  Examine the "AL" cross reference on the RELEASED DATE/TIME 
"^DD",727.81,727.81,14,23,10,0)
field (31) of the PRESCRIPTION file (#52) for new prescriptions or the 
"^DD",727.81,727.81,14,23,11,0)
RELEASED DATE/TIME field (17) within the REFILL multiple (52) of the 
"^DD",727.81,727.81,14,23,12,0)
PRESCRIPTION file (#52) for refill prescriptions. Cross reference is 
"^DD",727.81,727.81,14,23,13,0)
^PSRX("AL",DATE,D0,REFILL# or 0 for new RX).
"^DD",727.81,727.81,14,23,14,0)
2.  Examine the "AM" cross reference on the RELEASED DATE/TIME 
"^DD",727.81,727.81,14,23,15,0)
field (8) within the PARTIAL DATE multiple (60) of the PRESCRIPTION 
"^DD",727.81,727.81,14,23,16,0)
file (#52) for partial prescriptions. Cross reference is 
"^DD",727.81,727.81,14,23,17,0)
^PSRX("AM",DATE,D0,PARTIAL_REFILL#).
"^DD",727.81,727.81,14,"DT")
2960918
"^DD",727.81,727.81,15,0)
PLACEHOLDER2^F^^0;16^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,15,.1)
Placeholder2
"^DD",727.81,727.81,15,3)
Your answer must be 1 character in length.
"^DD",727.81,727.81,15,21,0)
^^1^1^2961021^^
"^DD",727.81,727.81,15,21,1,0)
This field marked as a placeholder for future use.
"^DD",727.81,727.81,15,23,0)
^^1^1^2961021^^
"^DD",727.81,727.81,15,23,1,0)
This field marked as a placeholder for future use.
"^DD",727.81,727.81,15,"DT")
2961015
"^DD",727.81,727.81,16,0)
QUANTITY^F^^0;17^K:$L(X)>4!($L(X)<1) X
"^DD",727.81,727.81,16,.1)
Quantity
"^DD",727.81,727.81,16,3)
Your answer must be 1 to 4 characters in length.
"^DD",727.81,727.81,16,21,0)
^^1^1^2961015^^^
"^DD",727.81,727.81,16,21,1,0)
Quantity of drug dispensed.
"^DD",727.81,727.81,16,23,0)
^^5^5^2961015^^^^
"^DD",727.81,727.81,16,23,1,0)
Derived from the QTY field (7) in the PRESCRIPTION file (#52) for new 
"^DD",727.81,727.81,16,23,2,0)
prescriptions, or from the QTY field (1) within the REFILL multiple (52) 
"^DD",727.81,727.81,16,23,3,0)
in the PRESCRIPTION file (#52) for refill prescriptions, or from the QTY 
"^DD",727.81,727.81,16,23,4,0)
field (.04) within the PARTIAL DATE multiple (60) in the PRESCRIPTION 
"^DD",727.81,727.81,16,23,5,0)
file (#52) for partial prescriptions.
"^DD",727.81,727.81,16,"DT")
2960918
"^DD",727.81,727.81,17,0)
COST^NJ8,2^^0;18^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>10000)!(X<0) X
"^DD",727.81,727.81,17,.1)
Cost
"^DD",727.81,727.81,17,3)
Enter a dollar amount between 0 and 10000, 2 decimal digits.
"^DD",727.81,727.81,17,21,0)
^^1^1^2961015^^^
"^DD",727.81,727.81,17,21,1,0)
Cost of drug dispensed.
"^DD",727.81,727.81,17,23,0)
^^14^14^2961015^^^^
"^DD",727.81,727.81,17,23,1,0)
Cost is calculated as quantity * price.
"^DD",727.81,727.81,17,23,2,0)
  
"^DD",727.81,727.81,17,23,3,0)
Quantity is derived from the QTY field (7) in the PRESCRIPTION file 
"^DD",727.81,727.81,17,23,4,0)
(#52) for new prescriptions, or from the QTY field (1) within the REFILL 
"^DD",727.81,727.81,17,23,5,0)
multiple (52) in the PRESCRIPTION file (#52) for refill prescriptions, 
"^DD",727.81,727.81,17,23,6,0)
or from the QTY field (.04) within the PARTIAL DATE multiple (60) in the 
"^DD",727.81,727.81,17,23,7,0)
PRESCRIPTION file (#52) for partial prescriptions.
"^DD",727.81,727.81,17,23,8,0)
  
"^DD",727.81,727.81,17,23,9,0)
Price is derived from the UNIT PRICE OF DRUG is field (17) in the 
"^DD",727.81,727.81,17,23,10,0)
PRESCRIPTION file (#52) for new prescriptions, or from the CURRENT UNIT 
"^DD",727.81,727.81,17,23,11,0)
PRICE OF DRUG field (1.2) within the REFILL multiple (52) in the 
"^DD",727.81,727.81,17,23,12,0)
PRESCRIPTION file (#52) for refill prescriptions, or from the CURRENT 
"^DD",727.81,727.81,17,23,13,0)
UNIT PRICE OF DRUG field (.042) within the PARTIAL DATE multiple (60) in 
"^DD",727.81,727.81,17,23,14,0)
the PRESCRIPTION file (#52) for partial prescriptions.
"^DD",727.81,727.81,17,"DT")
2960918
"^DD",727.81,727.81,18,0)
PLACEHOLDER3^F^^0;19^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,18,.1)
Placeholder3
"^DD",727.81,727.81,18,3)
Answer must be 1 character in length.
"^DD",727.81,727.81,18,21,0)
^^1^1^2961021^^
"^DD",727.81,727.81,18,21,1,0)
This field marked as a placeholder for future use.
"^DD",727.81,727.81,18,23,0)
^^1^1^2961021^^^
"^DD",727.81,727.81,18,23,1,0)
This field marked as a placeholder for future use.
"^DD",727.81,727.81,18,"DT")
2961015
"^DD",727.81,727.81,19,0)
MOVEMENT FILE #^P405'^DGPM(^0;20^Q
"^DD",727.81,727.81,19,.1)
Movement File Number
"^DD",727.81,727.81,19,3)
Enter the patient movement number associated with this extract record.
"^DD",727.81,727.81,19,21,0)
^^1^1^2961015^^^^
"^DD",727.81,727.81,19,21,1,0)
Current patient movement record associated with this extract record.
"^DD",727.81,727.81,19,23,0)
^^4^4^2961015^^^^
"^DD",727.81,727.81,19,23,1,0)
A call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.81,727.81,19,23,2,0)
patient movement number (indicating inpatient status). This field is set 
"^DD",727.81,727.81,19,23,3,0)
to the value of VAIP(1), which is a pointer to the PATIENT MOVEMENT file 
"^DD",727.81,727.81,19,23,4,0)
(#405).
"^DD",727.81,727.81,19,"DT")
2960918
"^DD",727.81,727.81,20,0)
TREATING SPECIALTY^P42.4'^DIC(42.4,^0;21^Q
"^DD",727.81,727.81,20,.1)
Treating Specialty
"^DD",727.81,727.81,20,3)
Enter the name of the treating specialty associated with this extract record.
"^DD",727.81,727.81,20,21,0)
^^3^3^2961015^^^^
"^DD",727.81,727.81,20,21,1,0)
The treating specialty assigned to this patient when the prescription 
"^DD",727.81,727.81,20,21,2,0)
was issued, if the patient was an inpatient at that time. Otherwise, 
"^DD",727.81,727.81,20,21,3,0)
this field is null.
"^DD",727.81,727.81,20,23,0)
^^6^6^2961015^^^^
"^DD",727.81,727.81,20,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.81,727.81,20,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.81,727.81,20,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.81,727.81,20,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.81,727.81,20,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.81,727.81,20,23,6,0)
SPECIALTY file (#42.4).
"^DD",727.81,727.81,20,"DT")
2960918
"^DD",727.81,727.81,21,0)
PLACEHOLDER4^F^^0;22^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,21,.1)
Placeholder4
"^DD",727.81,727.81,21,3)
Your answer must be 1 character in length.
"^DD",727.81,727.81,21,21,0)
^^1^1^2961021^^
"^DD",727.81,727.81,21,21,1,0)
This field marked as a placeholder for future use.
"^DD",727.81,727.81,21,23,0)
^^1^1^2961021^^
"^DD",727.81,727.81,21,23,1,0)
This field marked as a placeholder for future use.
"^DD",727.81,727.81,21,"DT")
2961015
"^DD",727.81,727.81,22,0)
UNIT OF ISSUE^F^^0;23^K:$L(X)>10!($L(X)<1) X
"^DD",727.81,727.81,22,.1)
Unit of Issue
"^DD",727.81,727.81,22,3)
Answer must be 1-10 characters in length.
"^DD",727.81,727.81,22,21,0)
^^1^1^2961015^^^
"^DD",727.81,727.81,22,21,1,0)
This units in which this item was dispensed.
"^DD",727.81,727.81,22,23,0)
^^3^3^2961015^^^
"^DD",727.81,727.81,22,23,1,0)
Derived from the DISPENSE UNIT field (14.5) in the DRUG file (#50) 
"^DD",727.81,727.81,22,23,2,0)
for the drug identified by the DRUG field (6) in the PRESCRIPTION 
"^DD",727.81,727.81,22,23,3,0)
file (#52).
"^DD",727.81,727.81,22,"DT")
2961015
"^DD",727.81,727.81,23,0)
DATE OF BIRTH^FO^^0;24^K:$L(X)>8!($L(X)<8) X
"^DD",727.81,727.81,23,.1)
Date of Birth
"^DD",727.81,727.81,23,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.81,727.81,23,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.81,727.81,23,3)
Answer must be 8 characters in length.
"^DD",727.81,727.81,23,21,0)
^^2^2^2970918^^^^
"^DD",727.81,727.81,23,21,1,0)
The patient's date of birth between December 31,1870 and today's date
"^DD",727.81,727.81,23,21,2,0)
represented by an 8-character numeric string.
"^DD",727.81,727.81,23,23,0)
^^9^9^2971113^^^^
"^DD",727.81,727.81,23,23,1,0)
Data source:
"^DD",727.81,727.81,23,23,2,0)
 
"^DD",727.81,727.81,23,23,3,0)
PRESCRIPTION file (#52); PATIENT field (#2)
"^DD",727.81,727.81,23,23,4,0)
   then to PATIENT file (#2); DATE OF BIRTH field (#.03)
"^DD",727.81,727.81,23,23,5,0)
 
"^DD",727.81,727.81,23,23,6,0)
If Date of Birth cannot be determined, then January 1, 1942, is
"^DD",727.81,727.81,23,23,7,0)
used as default.  The data element is always exactly 8 numberic
"^DD",727.81,727.81,23,23,8,0)
characters in length.  Format is YYYYMMDD.  Year 2000 compliant
"^DD",727.81,727.81,23,23,9,0)
per vendor.
"^DD",727.81,727.81,23,"DT")
2970924
"^DD",727.81,727.81,24,0)
ELIGIBILITY^F^^0;25^K:$L(X)>1!($L(X)<1)!'(X?1U) X
"^DD",727.81,727.81,24,.1)
Eligibility
"^DD",727.81,727.81,24,3)
Your answer must be 1 character in length.
"^DD",727.81,727.81,24,21,0)
^^1^1^2961021^^^^
"^DD",727.81,727.81,24,21,1,0)
Appropriate eligibility code based on veteran or non-veteran status.
"^DD",727.81,727.81,24,23,0)
^^9^9^2961021^^^
"^DD",727.81,727.81,24,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.81,727.81,24,23,2,0)
in the PRESCRIPTION EXTRACT file (#727.81), ELIGIBILITY data is derived 
"^DD",727.81,727.81,24,23,3,0)
from the PRIMARY ELIGIBILITY CODE field (.361) in the PATIENT file (#2). 
"^DD",727.81,727.81,24,23,4,0)
PRIMARY ELIGIBILITY CODE is a pointer to the ELIGIBILITY CODE file (#8). 
"^DD",727.81,727.81,24,23,5,0)
The data is derived from the MAS ELIGIBILITY CODE field (8) in the 
"^DD",727.81,727.81,24,23,6,0)
ELIGIBILITY CODE file (#8) which in turn is a pointer to the MAS 
"^DD",727.81,727.81,24,23,7,0)
ELIGIBILITY CODE file (#8.1). The MAS eligibility code pointer value 
"^DD",727.81,727.81,24,23,8,0)
is converted to an alpha character representative of it's number, i.e., 
"^DD",727.81,727.81,24,23,9,0)
1 converts to A, 2 converts to B, etc.
"^DD",727.81,727.81,24,"DT")
2960918
"^DD",727.81,727.81,25,0)
VETERAN^S^Y:YES;N:NO;^0;26^Q
"^DD",727.81,727.81,25,.1)
Veteran
"^DD",727.81,727.81,25,3)
Select the appropriate veteran status for this patient.
"^DD",727.81,727.81,25,21,0)
^^1^1^2961021^^^^
"^DD",727.81,727.81,25,21,1,0)
Data is Y if the patient is a veteran, N if not.
"^DD",727.81,727.81,25,23,0)
^^3^3^2961021^^
"^DD",727.81,727.81,25,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.81,727.81,25,23,2,0)
in the PRESCRIPTION EXTRACT file (#727.81), VETERAN data is derived from
"^DD",727.81,727.81,25,23,3,0)
the VETERAN (Y/N)? field (1901) in the PATIENT file (#2).
"^DD",727.81,727.81,25,"DT")
2960918
"^DD",727.81,727.81,26,0)
COPAY^RS^1:YES;0:NO;^0;27^Q
"^DD",727.81,727.81,26,.1)
Copay
"^DD",727.81,727.81,26,3)
Enter 1 if this prescription was billed for copay.
"^DD",727.81,727.81,26,21,0)
^^1^1^2961015^^^^
"^DD",727.81,727.81,26,21,1,0)
This field indicates whether this prescription was billed for copay.
"^DD",727.81,727.81,26,23,0)
^^5^5^2961015^^^^
"^DD",727.81,727.81,26,23,1,0)
Derived from the existence of the IB NUMBER field (106) in the 
"^DD",727.81,727.81,26,23,2,0)
PRESCRIPTION file (#52) for new prescriptions or from the IB NUMBER 
"^DD",727.81,727.81,26,23,3,0)
field (9) within the REFILL multiple (52) in the PRESCRIPTION file 
"^DD",727.81,727.81,26,23,4,0)
(#52) for refill prescriptions. If that field is not null, the 
"^DD",727.81,727.81,26,23,5,0)
prescription was billed for copay and this field is set to 1.
"^DD",727.81,727.81,26,"DT")
2960918
"^DD",727.81,727.81,27,0)
FEEDER KEY^F^^0;28^K:$L(X)>20!($L(X)<19) X
"^DD",727.81,727.81,27,.1)
Feeder Key
"^DD",727.81,727.81,27,3)
Your answer must be 19 to 20 characters in length.
"^DD",727.81,727.81,27,21,0)
^^4^4^2961015^^^^
"^DD",727.81,727.81,27,21,1,0)
The feeder key for the drug in this record. The feeder key is a nineteen 
"^DD",727.81,727.81,27,21,2,0)
digit number made up of the pointer to the NATIONAL DRUG file padded to 
"^DD",727.81,727.81,27,21,3,0)
four digits, the pointer to the VA Product Name padded to three digits, 
"^DD",727.81,727.81,27,21,4,0)
and the twelve digit National Drug Code.
"^DD",727.81,727.81,27,23,0)
^^8^8^2961015^^^^
"^DD",727.81,727.81,27,23,1,0)
FEEDER KEY is compiled for the drug identified by the DRUG field (6) 
"^DD",727.81,727.81,27,23,2,0)
in the PRESCRIPTION file (#52). It contains the NATIONAL DRUG FILE 
"^DD",727.81,727.81,27,23,3,0)
ENTRY field (20) from the DRUG file (#50) which is a pointer to the 
"^DD",727.81,727.81,27,23,4,0)
NATIONAL DRUG file (#50.6) padded to four digits. This is concatenated 
"^DD",727.81,727.81,27,23,5,0)
with the PSNDF VA PRODUCT NAME ENTRY field (22) from the DRUG file 
"^DD",727.81,727.81,27,23,6,0)
(#50) which is a pointer to the VA Product Name in the NATIONAL DRUG 
"^DD",727.81,727.81,27,23,7,0)
file (#50.6) padded to three digits. This is concatenated with the 
"^DD",727.81,727.81,27,23,8,0)
twelve digit NDC field (31) from the DRUG file (#50).
"^DD",727.81,727.81,27,"DT")
2960918
"^DD",727.81,727.81,28,0)
INVESTIGATIONAL^S^I:INVESTIGATIONAL;^0;29^Q
"^DD",727.81,727.81,28,.1)
Investigational
"^DD",727.81,727.81,28,3)
Enter I if the drug is investigational.
"^DD",727.81,727.81,28,21,0)
^^2^2^2961015^^^
"^DD",727.81,727.81,28,21,1,0)
This field contains the letter I if the drug in this record is 
"^DD",727.81,727.81,28,21,2,0)
investigational. Otherwise it is null.
"^DD",727.81,727.81,28,23,0)
^^2^2^2961015^^^^
"^DD",727.81,727.81,28,23,1,0)
Derived from the DEA, SPECIAL HDLG field (3) in the DRUG file (#50).
"^DD",727.81,727.81,28,23,2,0)
If the DEA, SPECIAL HDLG field contains an I, this field is set to I.
"^DD",727.81,727.81,28,"DT")
2960918
"^DD",727.81,727.81,29,0)
DAYS SUPPLY^NJ3,0^^0;30^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.81,727.81,29,.1)
Days Supply
"^DD",727.81,727.81,29,3)
Enter a number between 1 and 31, 0 decimal digits.
"^DD",727.81,727.81,29,21,0)
^^1^1^2961015^^^
"^DD",727.81,727.81,29,21,1,0)
The number of days covered by this prescription.
"^DD",727.81,727.81,29,23,0)
^^6^6^2961015^^^
"^DD",727.81,727.81,29,23,1,0)
Derived from the DAYS SUPPLY field (8) in the PRESCRIPTION file 
"^DD",727.81,727.81,29,23,2,0)
(#52) for new prescriptions, or from the DAYS SUPPLY field (1.1) 
"^DD",727.81,727.81,29,23,3,0)
within the REFILL multiple (52) in the PRESCRIPTION file (#52) for 
"^DD",727.81,727.81,29,23,4,0)
refill prescriptions, or from the DAYS SUPPLY field (.041) within the 
"^DD",727.81,727.81,29,23,5,0)
PARTIAL DATE multiple (60) in the PRESCRIPTION file (#52) for partial 
"^DD",727.81,727.81,29,23,6,0)
prescriptions.
"^DD",727.81,727.81,29,"DT")
2960918
"^DD",727.81,727.81,30,0)
PRIMARY CARE TEAM^F^^0;31^K:$L(X)>4!($L(X)<1) X
"^DD",727.81,727.81,30,.1)
Primary Care Team
"^DD",727.81,727.81,30,3)
Enter primary care team assigned to this patient.
"^DD",727.81,727.81,30,21,0)
^^1^1^2961030^^^^
"^DD",727.81,727.81,30,21,1,0)
The primary care team assigned to this patient.
"^DD",727.81,727.81,30,23,0)
^^6^6^2961030^^^
"^DD",727.81,727.81,30,23,1,0)
Using the RELEASED DATE/TIME (V. 6 or >) field or the FILL DATE (V. <6)
"^DD",727.81,727.81,30,23,2,0)
field from the PRESCRIPTION file (#52) and the patient pointer (DFN)
"^DD",727.81,727.81,30,23,3,0)
stored in the PATIENT NO. - DFN field (4) in the PRESCRIPTION EXTRACT
"^DD",727.81,727.81,30,23,4,0)
file (#727.81), a call is made to the Scheduling API, OUTPTTM^SDUTL3. 
"^DD",727.81,727.81,30,23,5,0)
The API returns the team's internal entry number and name from the TEAM 
"^DD",727.81,727.81,30,23,6,0)
file (#404.51). Only the pointer (IEN) to File 404.51 is transmitted.
"^DD",727.81,727.81,30,"DT")
2961030
"^DD",727.81,727.81,31,0)
PRIMARY CARE PROVIDER^F^^0;32^K:$L(X)>11!($L(X)<1) X
"^DD",727.81,727.81,31,.1)
Primary Care Provider
"^DD",727.81,727.81,31,3)
Enter primary care provider assigned to this patient.
"^DD",727.81,727.81,31,21,0)
^^1^1^2961030^^^^
"^DD",727.81,727.81,31,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.81,727.81,31,23,0)
^^7^7^2961030^^^
"^DD",727.81,727.81,31,23,1,0)
Using the RELEASED DATE/TIME (V. 6 or >) field or the FILL DATE (V. <6)
"^DD",727.81,727.81,31,23,2,0)
field from the PRESCRIPTION file (#52) and the patient pointer (DFN)
"^DD",727.81,727.81,31,23,3,0)
stored in the PATIENT NO. - DFN field (4) in the PRESCRIPTION EXTRACT
"^DD",727.81,727.81,31,23,4,0)
file (#727.81), a call is made to the Scheduling API, OUTPTPR^SDUTL3. 
"^DD",727.81,727.81,31,23,5,0)
The API returns the provider's internal entry number and name from the 
"^DD",727.81,727.81,31,23,6,0)
NEW PERSON file (#200). Only the pointer (IEN) to File 200 is 
"^DD",727.81,727.81,31,23,7,0)
transmitted.
"^DD",727.81,727.81,31,"DT")
2961015
"^DD",727.81,727.81,32,0)
TIME^FO^^0;33^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.81,727.81,32,.1)
Time
"^DD",727.81,727.81,32,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.81,727.81,32,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.81,727.81,32,3)
Answer must be 6 characters in length.
"^DD",727.81,727.81,32,21,0)
^^2^2^2970918^^^^
"^DD",727.81,727.81,32,21,1,0)
A 6-character numeric string that represents the time of day at
"^DD",727.81,727.81,32,21,2,0)
which the Presription fill/refill was released.
"^DD",727.81,727.81,32,23,0)
^^15^15^2971113^^^^
"^DD",727.81,727.81,32,23,1,0)
If the version of Outpatient Pharmacy is prior to V. 6.0, TIME is 
"^DD",727.81,727.81,32,23,2,0)
derived from the FILL DATE field (22) of the PRESCRIPTION file (#52).
"^DD",727.81,727.81,32,23,3,0)
  
"^DD",727.81,727.81,32,23,4,0)
Data source for Outpatient Pharmacy v6.0 and later:
"^DD",727.81,727.81,32,23,5,0)
 
"^DD",727.81,727.81,32,23,6,0)
PRESCRIPTION file (#52); REFILL sub-file (#52.1); 
"^DD",727.81,727.81,32,23,7,0)
   RELEASED DATE/TIME field (#17)
"^DD",727.81,727.81,32,23,8,0)
   
"^DD",727.81,727.81,32,23,9,0)
or
"^DD",727.81,727.81,32,23,10,0)
   
"^DD",727.81,727.81,32,23,11,0)
PRESCRIPTION file (#52); PARTIAL DATE sub-file (#52.2);
"^DD",727.81,727.81,32,23,12,0)
   RELEASED DATE/TIME field (#8)
"^DD",727.81,727.81,32,23,13,0)
  
"^DD",727.81,727.81,32,23,14,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.81,727.81,32,23,15,0)
cannot be determined, then "000300" is used as default.
"^DD",727.81,727.81,32,"DT")
2970924
"^DD",727.81,727.81,33,0)
RACE^F^^0;34^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,33,.1)
Race
"^DD",727.81,727.81,33,3)
Enter race ABBREVIATION for this patient.
"^DD",727.81,727.81,33,21,0)
^^1^1^2961029^^^^
"^DD",727.81,727.81,33,21,1,0)
Race ABBREVIATION for this patient.
"^DD",727.81,727.81,33,23,0)
^^3^3^2961029^^^
"^DD",727.81,727.81,33,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4),
"^DD",727.81,727.81,33,23,2,0)
RACE data is shown as the ABBREVIATION field (2) of the RACE file (#10)
"^DD",727.81,727.81,33,23,3,0)
entry pointed to by the RACE field (.06) in the PATIENT file (#2).
"^DD",727.81,727.81,33,"DT")
2961015
"^DD",727.811,727.811,0)
FIELD^^35^34
"^DD",727.811,727.811,0,"DIK")
ECX811
"^DD",727.811,727.811,0,"DIKOLD")
ECX811
"^DD",727.811,727.811,0,"DT")
2970912
"^DD",727.811,727.811,0,"IX","AC",727.811,2)

"^DD",727.811,727.811,0,"IX","AINV",727.811,.01)

"^DD",727.811,727.811,0,"NM","SURGERY EXTRACT")

"^DD",727.811,727.811,0,"VRPK")
DSS EXTRACTS
"^DD",727.811,727.811,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.811,727.811,.01,.1)
Sequence Number
"^DD",727.811,727.811,.01,1,0)
^.1
"^DD",727.811,727.811,.01,1,1,0)
727.811^AINV^MUMPS
"^DD",727.811,727.811,.01,1,1,1)
S ^ECX(727.811,"AINV",-X,DA)=""
"^DD",727.811,727.811,.01,1,1,2)
K ^ECX(727.811,"AINV",-X,DA)
"^DD",727.811,727.811,.01,1,1,3)
DO NOT DELETE.
"^DD",727.811,727.811,.01,1,1,"%D",0)
^^3^3^2960808^^^
"^DD",727.811,727.811,.01,1,1,"%D",1,0)
This is an inverse entry cross reference.  It is used to find the
"^DD",727.811,727.811,.01,1,1,"%D",2,0)
last entry in the file.  It is essential for the management of the
"^DD",727.811,727.811,.01,1,1,"%D",3,0)
extract and the purge of extract data.
"^DD",727.811,727.811,.01,1,1,"DT")
2921016
"^DD",727.811,727.811,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",727.811,727.811,.01,21,0)
^^1^1^2961002^^^^
"^DD",727.811,727.811,.01,21,1,0)
The record number for this extract entry.
"^DD",727.811,727.811,.01,23,0)
^^1^1^2961002^^^
"^DD",727.811,727.811,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",727.811,727.811,.01,"DT")
2961002
"^DD",727.811,727.811,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.811,727.811,1,.1)
Year/Month
"^DD",727.811,727.811,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.811,727.811,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.811,727.811,1,3)
Answer must be 6 characters in length.
"^DD",727.811,727.811,1,21,0)
^^2^2^2970912^^^^
"^DD",727.811,727.811,1,21,1,0)
A six character string representing the year and the month
"^DD",727.811,727.811,1,21,2,0)
for which this extract was performed.
"^DD",727.811,727.811,1,23,0)
^^1^1^2970912^^^^
"^DD",727.811,727.811,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.811,727.811,1,"DT")
2970924
"^DD",727.811,727.811,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.811,727.811,2,.1)
Extract Number
"^DD",727.811,727.811,2,1,0)
^.1
"^DD",727.811,727.811,2,1,1,0)
727.811^AC
"^DD",727.811,727.811,2,1,1,1)
S ^ECX(727.811,"AC",$E(X,1,30),DA)=""
"^DD",727.811,727.811,2,1,1,2)
K ^ECX(727.811,"AC",$E(X,1,30),DA)
"^DD",727.811,727.811,2,1,1,3)
DO NOT DELETE.
"^DD",727.811,727.811,2,1,1,"%D",0)
^^2^2^2960808^
"^DD",727.811,727.811,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data
"^DD",727.811,727.811,2,1,1,"%D",2,0)
in this file.
"^DD",727.811,727.811,2,1,1,"DT")
2910802
"^DD",727.811,727.811,2,3)
Enter the extract number for this extract.
"^DD",727.811,727.811,2,21,0)
^^2^2^2961002^^^^
"^DD",727.811,727.811,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727) for this 
"^DD",727.811,727.811,2,21,2,0)
extract.
"^DD",727.811,727.811,2,23,0)
^^2^2^2961002^^^^
"^DD",727.811,727.811,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is to
"^DD",727.811,727.811,2,23,2,0)
pick up the header for the mail message.
"^DD",727.811,727.811,2,"DT")
2961002
"^DD",727.811,727.811,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.811,727.811,3,.1)
Facility
"^DD",727.811,727.811,3,3)
Answer must be 1-7 characters in length.
"^DD",727.811,727.811,3,21,0)
^^2^2^2970912^^^^
"^DD",727.811,727.811,3,21,1,0)
Identifies the Surgery site/division for this extract record.
"^DD",727.811,727.811,3,21,2,0)
It represents the station number from the INSTITUTION file (#4).
"^DD",727.811,727.811,3,23,0)
^^7^7^2970912^^^^
"^DD",727.811,727.811,3,23,1,0)
If there is data in the DIVISION field (50) of the SURGERY file (#130) 
"^DD",727.811,727.811,3,23,2,0)
for the extract record, this pointer to the INSTITUTION file (#4) is 
"^DD",727.811,727.811,3,23,3,0)
used. Otherwise, FACILITY is derived as follows. Using the NAME field 
"^DD",727.811,727.811,3,23,4,0)
(#.01) pointer from the DSS EXTRACTS file (#728), FACILITY is derived 
"^DD",727.811,727.811,3,23,5,0)
from the STATION NUMBER field (#99) for that pointer number in the 
"^DD",727.811,727.811,3,23,6,0)
INSTITUTION file (#4). An indicator of the division where this event 
"^DD",727.811,727.811,3,23,7,0)
happened.
"^DD",727.811,727.811,3,"DT")
2970911
"^DD",727.811,727.811,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.811,727.811,4,.1)
Patient No. - DFN
"^DD",727.811,727.811,4,3)
Enter the name of the patient for this extract record.
"^DD",727.811,727.811,4,21,0)
^^1^1^2961021^^^^
"^DD",727.811,727.811,4,21,1,0)
The name of the patient for this extract record.
"^DD",727.811,727.811,4,23,0)
^^3^3^2961021^^
"^DD",727.811,727.811,4,23,1,0)
Derived from the PATIENT (.01) field in the SURGERY file (#130). 
"^DD",727.811,727.811,4,23,2,0)
PATIENT NO. - DFN is a pointer to the NAME field (.01) of the PATIENT 
"^DD",727.811,727.811,4,23,3,0)
file (#2). This data represents the patient DFN.
"^DD",727.811,727.811,4,"DT")
2961018
"^DD",727.811,727.811,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.811,727.811,5,.1)
Social Security Number
"^DD",727.811,727.811,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.811,727.811,5,21,0)
^^1^1^2961021^^^^
"^DD",727.811,727.811,5,21,1,0)
The patient's social security number.
"^DD",727.811,727.811,5,23,0)
^^3^3^2961021^^
"^DD",727.811,727.811,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.811,727.811,5,23,2,0)
in the SURGERY EXTRACT file (#727.811), SSN data is derived from the
"^DD",727.811,727.811,5,23,3,0)
SOCIAL SECURITY NUMBER field (.09) in the PATIENT file (#2).
"^DD",727.811,727.811,5,"DT")
2961002
"^DD",727.811,727.811,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.811,727.811,6,.1)
Name
"^DD",727.811,727.811,6,3)
Your answer must be 4 characters in length.
"^DD",727.811,727.811,6,21,0)
^^1^1^2961021^^^^
"^DD",727.811,727.811,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.811,727.811,6,23,0)
^^4^4^2961021^^^
"^DD",727.811,727.811,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.811,727.811,6,23,2,0)
in the SURGERY EXTRACT file (#727.811), NAME data is derived from the NAME
"^DD",727.811,727.811,6,23,3,0)
field (.01) in the PATIENT file (#2). The first four characters of the
"^DD",727.811,727.811,6,23,4,0)
first "," piece are used, padded with trailing spaces if necessary.
"^DD",727.811,727.811,6,"DT")
2961002
"^DD",727.811,727.811,7,0)
IN OUT PATIENT INDICATOR^F^^0;8^K:$L(X)>3!($L(X)<1) X
"^DD",727.811,727.811,7,.1)
In Out Patient Indicator
"^DD",727.811,727.811,7,3)
Answer must be 1-3 characters in length.
"^DD",727.811,727.811,7,21,0)
^^2^2^2970912^^^^
"^DD",727.811,727.811,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for
"^DD",727.811,727.811,7,21,2,0)
this extract.
"^DD",727.811,727.811,7,23,0)
^^4^4^2970912^^^^
"^DD",727.811,727.811,7,23,1,0)
Derived from the IN/OUT-PATIENT STATUS field (.011) in the SURGERY file 
"^DD",727.811,727.811,7,23,2,0)
(#130) for the extract record. If IN/OUT-PATIENT STATUS is an I, this 
"^DD",727.811,727.811,7,23,3,0)
field is set to 3 indicating inpatient status. Otherwise it is set to 1 
"^DD",727.811,727.811,7,23,4,0)
indicating outpatient status.
"^DD",727.811,727.811,7,"DT")
2970911
"^DD",727.811,727.811,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.811,727.811,8,.1)
Day
"^DD",727.811,727.811,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.811,727.811,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.811,727.811,8,3)
Answer must be 8 characters in length.
"^DD",727.811,727.811,8,21,0)
^^2^2^2970912^^^^
"^DD",727.811,727.811,8,21,1,0)
This 8-character string represents the date on which the procedure
"^DD",727.811,727.811,8,21,2,0)
associated with this Surgery extract record was performed.
"^DD",727.811,727.811,8,23,0)
^^9^9^2970923^^^^
"^DD",727.811,727.811,8,23,1,0)
Date source:
"^DD",727.811,727.811,8,23,2,0)
 
"^DD",727.811,727.811,8,23,3,0)
SURGERY file (#130); DATE OF OPERATION field (#.09)
"^DD",727.811,727.811,8,23,4,0)
 
"^DD",727.811,727.811,8,23,5,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.811,727.811,8,23,6,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.811,727.811,8,23,7,0)
then a default is used.  The default date value is the value of the 
"^DD",727.811,727.811,8,23,8,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.811,727.811,8,23,9,0)
Year 2000 compliant per vendor.
"^DD",727.811,727.811,8,"DT")
2970924
"^DD",727.811,727.811,9,0)
CASE NUMBER^F^^0;10^K:$L(X)>12!($L(X)<1) X
"^DD",727.811,727.811,9,.1)
Case Number
"^DD",727.811,727.811,9,3)
Answer must be 1-12 characters in length.
"^DD",727.811,727.811,9,21,0)
^^1^1^2970912^^^^
"^DD",727.811,727.811,9,21,1,0)
This character string represents in IEN in the SURGERY file (#130).
"^DD",727.811,727.811,9,23,0)
^^2^2^2970912^^^^
"^DD",727.811,727.811,9,23,1,0)
CASE NUMBER is the internal entry number (IEN) of the entry from the 
"^DD",727.811,727.811,9,23,2,0)
SURGERY file (#130) for this extract record. 
"^DD",727.811,727.811,9,"DT")
2970911
"^DD",727.811,727.811,10,0)
SURGICAL SPECIALTY^F^^0;11^K:$L(X)>3!($L(X)<3)!'(X?3N) X
"^DD",727.811,727.811,10,.1)
Surgical Specialty
"^DD",727.811,727.811,10,3)
Your answer must be 3 characters in length.
"^DD",727.811,727.811,10,21,0)
^^1^1^2970729^^^^
"^DD",727.811,727.811,10,21,1,0)
The surgical specialty credited for doing this operative procedure.
"^DD",727.811,727.811,10,23,0)
^^6^6^2970729^^^^
"^DD",727.811,727.811,10,23,1,0)
Derived from the NATIONAL SURGICAL SPECIALTY field (1) in the LOCAL 
"^DD",727.811,727.811,10,23,2,0)
SURGICAL SPECIALTY file (#137.45) for the pointer value found in the 
"^DD",727.811,727.811,10,23,3,0)
SURGERY SPECIALTY field (.04) of the SURGERY file (#130). SURGICAL 
"^DD",727.811,727.811,10,23,4,0)
SPECIALTY is the three digit CODE field (.01) from the SURGICAL 
"^DD",727.811,727.811,10,23,5,0)
SPECIALTY file (#45.3). If no surgical specialty is found, this field 
"^DD",727.811,727.811,10,23,6,0)
is sent as 999.
"^DD",727.811,727.811,10,"DT")
2961002
"^DD",727.811,727.811,11,0)
OR ROOM NUMBER^F^^0;12^K:$L(X)>6!($L(X)<1) X
"^DD",727.811,727.811,11,.1)
OR Room Number
"^DD",727.811,727.811,11,3)
Answer must be 1-6 characters in length.
"^DD",727.811,727.811,11,21,0)
^^3^3^2970912^^^^
"^DD",727.811,727.811,11,21,1,0)
This character string represents an IEN to the HOSPITAL LOCATION
"^DD",727.811,727.811,11,21,2,0)
file (#44) for the operating room where the principal operation
"^DD",727.811,727.811,11,21,3,0)
was performed.
"^DD",727.811,727.811,11,23,0)
^^5^5^2970912^^^^
"^DD",727.811,727.811,11,23,1,0)
Derived from the OPERATING ROOM field (#.02) in the SURGERY file (#130). 
"^DD",727.811,727.811,11,23,2,0)
Field #.02 points to the OPERATING ROOM file (#131.7), which in turn is 
"^DD",727.811,727.811,11,23,3,0)
a pointer to the HOSPITAL LOCATION file (#44).
"^DD",727.811,727.811,11,23,4,0)
 
"^DD",727.811,727.811,11,23,5,0)
The character string stored in this field represents an IEN in file #44.
"^DD",727.811,727.811,11,"DT")
2970911
"^DD",727.811,727.811,12,0)
SURGEON^F^^0;13^K:$L(X)>11!($L(X)<1) X
"^DD",727.811,727.811,12,.1)
Surgeon
"^DD",727.811,727.811,12,3)
Enter person performing the major portion of the principal operative procedure.
"^DD",727.811,727.811,12,21,0)
^^2^2^2961021^^^^
"^DD",727.811,727.811,12,21,1,0)
The person performing the major portion of the principal operative
"^DD",727.811,727.811,12,21,2,0)
procedure.
"^DD",727.811,727.811,12,23,0)
^^5^5^2961021^^^^
"^DD",727.811,727.811,12,23,1,0)
Derived from the SURGEON field (.14) in the SURGERY file (#130) for 
"^DD",727.811,727.811,12,23,2,0)
the surgical case. If the case is a non-OR surgical procedure, the 
"^DD",727.811,727.811,12,23,3,0)
PROVIDER field (123) from the SURGERY file (#130) is used. In either 
"^DD",727.811,727.811,12,23,4,0)
occurrence, it is a pointer to the NEW PERSON file (#200). This data 
"^DD",727.811,727.811,12,23,5,0)
is stored as "2"_pointer value.
"^DD",727.811,727.811,12,"DT")
2961018
"^DD",727.811,727.811,13,0)
ATTENDING SURGEON^F^^0;14^K:$L(X)>11!($L(X)<1) X
"^DD",727.811,727.811,13,.1)
Attending Surgeon
"^DD",727.811,727.811,13,3)
The attending staff surgeon responsible for this case.
"^DD",727.811,727.811,13,21,0)
^^1^1^2961018^^^^
"^DD",727.811,727.811,13,21,1,0)
The attending staff surgeon responsible for this case.
"^DD",727.811,727.811,13,23,0)
^^5^5^2961018^^^^
"^DD",727.811,727.811,13,23,1,0)
Derived from the ATTEND SURG field (.164) in the SURGERY file (#130) 
"^DD",727.811,727.811,13,23,2,0)
for the surgical case. If the case is a non-OR surgical procedure, the 
"^DD",727.811,727.811,13,23,3,0)
ATTEND PROVIDER field (124) from the SURGERY file (#130) is used. In 
"^DD",727.811,727.811,13,23,4,0)
either occurrence, it is a pointer to the NEW PERSON file (#200). This 
"^DD",727.811,727.811,13,23,5,0)
data is stored as "2"_pointer value.
"^DD",727.811,727.811,13,"DT")
2961018
"^DD",727.811,727.811,14,0)
ANESTHESIA SUPERVISOR^F^^0;15^K:$L(X)>11!($L(X)<1) X
"^DD",727.811,727.811,14,.1)
Anesthesia Supervisor
"^DD",727.811,727.811,14,3)
Enter the anesthesiology staff supervisor.
"^DD",727.811,727.811,14,21,0)
^^1^1^2961018^^^^
"^DD",727.811,727.811,14,21,1,0)
This is the anesthesiology staff supervisor.
"^DD",727.811,727.811,14,23,0)
^^3^3^2961018^^^^
"^DD",727.811,727.811,14,23,1,0)
Derived from the ANESTHESIOLOGIST SUPVR field (.34) in the SURGERY 
"^DD",727.811,727.811,14,23,2,0)
file (#130) for the surgical case. This field is a pointer to the NEW 
"^DD",727.811,727.811,14,23,3,0)
PERSON file (#200) and is stored as "2"_pointer value.
"^DD",727.811,727.811,14,"DT")
2961018
"^DD",727.811,727.811,15,0)
ANESTHESIA TECHNIQUE^S^S:SPINAL;E:EPIDURAL;O:OTHER;G:GENERAL;M:MONITORED ANESTHESIA CARE;L:LOCAL;^0;16^Q
"^DD",727.811,727.811,15,.1)
Anesthesia Technique
"^DD",727.811,727.811,15,3)
Enter the anesthesia technique used for this surgical case.
"^DD",727.811,727.811,15,21,0)
^^2^2^2970729^^^^
"^DD",727.811,727.811,15,21,1,0)
The code corresponding to the type of anesthesia technique used 
"^DD",727.811,727.811,15,21,2,0)
during this case.
"^DD",727.811,727.811,15,23,0)
^^3^3^2970729^^^^
"^DD",727.811,727.811,15,23,1,0)
Derived from the ANESTHESIA TECHNIQUE field (.01) within the ANESTHESIA 
"^DD",727.811,727.811,15,23,2,0)
TECHNIQUE multiple (.37) of the SURGERY file (#130). This anesthesia 
"^DD",727.811,727.811,15,23,3,0)
technique is the principal technique.
"^DD",727.811,727.811,15,"DT")
2961002
"^DD",727.811,727.811,16,0)
PRIMARY/SECONDARY/PROSTHETICS^F^^0;17^K:$L(X)>1!($L(X)<1) X
"^DD",727.811,727.811,16,.1)
Primary/Secondary/Prosthetics
"^DD",727.811,727.811,16,3)
Your answer must be 1 character in length.
"^DD",727.811,727.811,16,21,0)
^^1^1^2970729^^^^
"^DD",727.811,727.811,16,21,1,0)
The indicator if this is a primary, secondary or prostheses.
"^DD",727.811,727.811,16,23,0)
^^4^4^2970729^^^^
"^DD",727.811,727.811,16,23,1,0)
Data is P for primary when the extract record is for a principal 
"^DD",727.811,727.811,16,23,2,0)
procedure. It is S for secondary when the extract record is for other 
"^DD",727.811,727.811,16,23,3,0)
procedure. It is I for implants (prostheses) when the extract record is 
"^DD",727.811,727.811,16,23,4,0)
for a prosthesis item.
"^DD",727.811,727.811,16,"DT")
2961002
"^DD",727.811,727.811,17,0)
CPT^F^^0;18^K:$L(X)>8!($L(X)<5) X
"^DD",727.811,727.811,17,.1)
Current Procedural Terminology
"^DD",727.811,727.811,17,3)
Enter CPT Code, "-", and 2 character modifier.
"^DD",727.811,727.811,17,21,0)
^^2^2^2961021^^^^
"^DD",727.811,727.811,17,21,1,0)
The Current Procedural Terminology (CPT) code for the operative 
"^DD",727.811,727.811,17,21,2,0)
procedure.
"^DD",727.811,727.811,17,23,0)
^^6^6^2961021^^^^
"^DD",727.811,727.811,17,23,1,0)
For the principal procedure, CPT is derived from the CPT CODE field 
"^DD",727.811,727.811,17,23,2,0)
(.01) in the CPT file (#81) as defined by the PRINCIPAL PROCEDURE CODE 
"^DD",727.811,727.811,17,23,3,0)
field (27) in the SURGERY file (#130).
"^DD",727.811,727.811,17,23,4,0)
If the extract record is for a secondary procedure, CPT is derived 
"^DD",727.811,727.811,17,23,5,0)
from the OTHER PROCEDURE CPT CODE field (3) within the OTHER PROCEDURES 
"^DD",727.811,727.811,17,23,6,0)
multiple (.42) in the SURGERY file (#130).
"^DD",727.811,727.811,17,"DT")
2961018
"^DD",727.811,727.811,19,0)
PATIENT TIME^F^^0;20^K:$L(X)>4!($L(X)<1) X
"^DD",727.811,727.811,19,.1)
Patient Time
"^DD",727.811,727.811,19,3)
Your answer must be 1 to 4 characters in length.
"^DD",727.811,727.811,19,21,0)
^^1^1^2961018^^^^
"^DD",727.811,727.811,19,21,1,0)
The time, in 15 minute increments, the patient was in the OR.
"^DD",727.811,727.811,19,23,0)
^^2^2^2961018^^^^
"^DD",727.811,727.811,19,23,1,0)
Derived from the TIME PAT OUT OR field (.232) minus the TIME PAT IN OR 
"^DD",727.811,727.811,19,23,2,0)
field (.205) in the SURGERY file (#130).
"^DD",727.811,727.811,19,"DT")
2961002
"^DD",727.811,727.811,20,0)
OPERATION TIME^F^^0;21^K:$L(X)>4!($L(X)<1) X
"^DD",727.811,727.811,20,.1)
Operation Time
"^DD",727.811,727.811,20,3)
Your answer must be 1 to 4 characters in length.
"^DD",727.811,727.811,20,21,0)
^^1^1^2961002^^^
"^DD",727.811,727.811,20,21,1,0)
The time, in 15 minute increments, of the principal operative procedure.
"^DD",727.811,727.811,20,23,0)
^^5^5^2961002^^^
"^DD",727.811,727.811,20,23,1,0)
Derived from the TIME OPERATION ENDS field (.23) minus the TIME OPERATION 
"^DD",727.811,727.811,20,23,2,0)
BEGAN field (.22) in the SURGERY file (#130) for the surgical case. If the 
"^DD",727.811,727.811,20,23,3,0)
case is a non-OR surgical precede, OPERATION TIME is derived from the TIME 
"^DD",727.811,727.811,20,23,4,0)
PROCEDURE ENDED field (122) minus the TIME PROCEDURE BEGAN field (121) in 
"^DD",727.811,727.811,20,23,5,0)
the SURGERY file (#130).
"^DD",727.811,727.811,20,"DT")
2961002
"^DD",727.811,727.811,21,0)
ANESTHESIA TIME^F^^0;22^K:$L(X)>4!($L(X)<1) X
"^DD",727.811,727.811,21,.1)
Anesthesia Time
"^DD",727.811,727.811,21,3)
Your answer must be 1 to 4 characters in length.
"^DD",727.811,727.811,21,21,0)
^^1^1^2961002^^^
"^DD",727.811,727.811,21,21,1,0)
The time, in 15 minute increments, of the anesthesia care administered.
"^DD",727.811,727.811,21,23,0)
^^2^2^2961002^^^
"^DD",727.811,727.811,21,23,1,0)
Derived from the ANES CARE END TIME field (.24) minus the ANES CARE START 
"^DD",727.811,727.811,21,23,2,0)
TIME field (.21) in the SURGERY file (#130).
"^DD",727.811,727.811,21,"DT")
2961002
"^DD",727.811,727.811,22,0)
PROSTHESIS^F^^0;23^K:$L(X)>10!($L(X)<1) X
"^DD",727.811,727.811,22,.1)
Prosthesis
"^DD",727.811,727.811,22,3)
Answer must be 1-10 characters in length.
"^DD",727.811,727.811,22,21,0)
^^2^2^2970912^^^^
"^DD",727.811,727.811,22,21,1,0)
The character string in this field represents an IEN in the 
"^DD",727.811,727.811,22,21,2,0)
PROSTHESIS file (#130.9).
"^DD",727.811,727.811,22,23,0)
^^6^6^2970912^^
"^DD",727.811,727.811,22,23,1,0)
Derived from the PROSTHESIS ITEM field (#.01) within the PROSTHESIS 
"^DD",727.811,727.811,22,23,2,0)
INSTALLED multiple (#.47) in the SURGERY file (#130). PROSTHESIS ITEM  
"^DD",727.811,727.811,22,23,3,0)
is a pointer to the PROSTHESIS file (#131.9).
"^DD",727.811,727.811,22,23,4,0)
 
"^DD",727.811,727.811,22,23,5,0)
The character string in this field represents an IEN in the PROSTHESIS
"^DD",727.811,727.811,22,23,6,0)
file (#130.9).
"^DD",727.811,727.811,22,"DT")
2970911
"^DD",727.811,727.811,23,0)
QUANTITY^NJ2,0^^0;24^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.811,727.811,23,.1)
Quantity
"^DD",727.811,727.811,23,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",727.811,727.811,23,21,0)
^^1^1^2970912^^^^
"^DD",727.811,727.811,23,21,1,0)
The quantity of the prosthetic device used for this operative procedure.
"^DD",727.811,727.811,23,23,0)
^^3^3^2970912^^^^
"^DD",727.811,727.811,23,23,1,0)
Derived from the QUANTITY field (#7) within the PROSTHESIS INSTALLED 
"^DD",727.811,727.811,23,23,2,0)
multiple (#.47) in the SURGERY file (#130) for the PROSTHESIS ITEM 
"^DD",727.811,727.811,23,23,3,0)
referred to in the PROSTHESIS field (#22) of this file.
"^DD",727.811,727.811,23,"DT")
2970911
"^DD",727.811,727.811,25,0)
MOVEMENT FILE #^P405'^DGPM(^0;26^Q
"^DD",727.811,727.811,25,.1)
Movement File Number
"^DD",727.811,727.811,25,3)
Enter the patient movement number associated with this extract record.
"^DD",727.811,727.811,25,21,0)
^^1^1^2961002^^^
"^DD",727.811,727.811,25,21,1,0)
Current patient movement record associated with this extract record.
"^DD",727.811,727.811,25,23,0)
^^4^4^2961002^^^
"^DD",727.811,727.811,25,23,1,0)
A call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.811,727.811,25,23,2,0)
patient movement number (indicating inpatient status). This field is set 
"^DD",727.811,727.811,25,23,3,0)
to the value of VAIP(1), which is a pointer to the PATIENT MOVEMENT file 
"^DD",727.811,727.811,25,23,4,0)
(#405).
"^DD",727.811,727.811,25,"DT")
2961002
"^DD",727.811,727.811,26,0)
TREATING SPECIALTY^F^^0;27^K:$L(X)>4!($L(X)<1) X
"^DD",727.811,727.811,26,.1)
Treating Specialty
"^DD",727.811,727.811,26,3)
Answer must be 1-4 characters in length.
"^DD",727.811,727.811,26,21,0)
^^2^2^2970912^^^^
"^DD",727.811,727.811,26,21,1,0)
The character string in this field represents an IEN in the 
"^DD",727.811,727.811,26,21,2,0)
SPECIALTY file (#42.4).
"^DD",727.811,727.811,26,23,0)
^^9^9^2970912^^^^
"^DD",727.811,727.811,26,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.811,727.811,26,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.811,727.811,26,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.811,727.811,26,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.811,727.811,26,23,5,0)
(#45.7), is used to get the SPECIALTY field (#1) which points to the 
"^DD",727.811,727.811,26,23,6,0)
SPECIALTY file (#42.4).
"^DD",727.811,727.811,26,23,7,0)
 
"^DD",727.811,727.811,26,23,8,0)
That pointer value is stored here as a character string; this field
"^DD",727.811,727.811,26,23,9,0)
represents and IEN in file #42.4.
"^DD",727.811,727.811,26,"DT")
2970911
"^DD",727.811,727.811,27,0)
CANCELLED^S^C:C;^0;28^Q
"^DD",727.811,727.811,27,.1)
Cancelled
"^DD",727.811,727.811,27,3)
Enter C if the procedure was cancelled.
"^DD",727.811,727.811,27,21,0)
^^2^2^2970912^^^^
"^DD",727.811,727.811,27,21,1,0)
If set, this field indicates that the surgical procedure was cancelled 
"^DD",727.811,727.811,27,21,2,0)
after being started.
"^DD",727.811,727.811,27,23,0)
^^7^7^2970912^^^^
"^DD",727.811,727.811,27,23,1,0)
If cancellation information exists (^SRF(D0,30)) or
"^DD",727.811,727.811,27,23,2,0)
for a regular procedure (not a non-OR procedure ^SRF(D0,NON)), 
"^DD",727.811,727.811,27,23,3,0)
there is no data in the TIME PAT IN OR field (.205),
"^DD",727.811,727.811,27,23,4,0)
then the extract record is not sent as per 2/7/94 decision.
"^DD",727.811,727.811,27,23,5,0)
 
"^DD",727.811,727.811,27,23,6,0)
This field is being retained for backward compatibility; essentially
"^DD",727.811,727.811,27,23,7,0)
it serves as a placeholder in the data line.
"^DD",727.811,727.811,27,"DT")
2970911
"^DD",727.811,727.811,28,0)
TIME^FO^^0;29^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.811,727.811,28,.1)
Time
"^DD",727.811,727.811,28,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.811,727.811,28,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.811,727.811,28,3)
Answer must be 6 characters in length.
"^DD",727.811,727.811,28,21,0)
^^1^1^2970912^^^^
"^DD",727.811,727.811,28,21,1,0)
The military time when the patient entered the OR.
"^DD",727.811,727.811,28,23,0)
^^6^6^2970923^^^^
"^DD",727.811,727.811,28,23,1,0)
Data source:
"^DD",727.811,727.811,28,23,2,0)
 
"^DD",727.811,727.811,28,23,3,0)
SURGERY file (#130); TIME PAT IN OR field (#.205)
"^DD",727.811,727.811,28,23,4,0)
 
"^DD",727.811,727.811,28,23,5,0)
The character string is always consists of exactly 6 numerics.  The
"^DD",727.811,727.811,28,23,6,0)
field default is "000300" for Year 2000 compliance per vendor.
"^DD",727.811,727.811,28,"DT")
2970924
"^DD",727.811,727.811,29,0)
OR TYPE^F^^0;30^K:$L(X)>4!($L(X)<1) X
"^DD",727.811,727.811,29,.1)
OR Type
"^DD",727.811,727.811,29,3)
Answer must be 1-4 characters in length.
"^DD",727.811,727.811,29,21,0)
^^3^3^2971027^^^^
"^DD",727.811,727.811,29,21,1,0)
The OR TYPE of the operating room where this procedure was done.
"^DD",727.811,727.811,29,21,2,0)
This field is a character string which represents an IEN in the
"^DD",727.811,727.811,29,21,3,0)
OPERATING ROOM TYPE file (#134).
"^DD",727.811,727.811,29,23,0)
^^7^7^2971027^^^^
"^DD",727.811,727.811,29,23,1,0)
For the OPERATING ROOM field (#.02) identified in the SURGERY file 
"^DD",727.811,727.811,29,23,2,0)
(#130), OR TYPE is derived from the TYPE field (#9) in the OPERATING 
"^DD",727.811,727.811,29,23,3,0)
ROOM file (#131.7). It is a pointer to the OPERATING ROOM TYPE file 
"^DD",727.811,727.811,29,23,4,0)
(#134) which is a national standard operating room types list.
"^DD",727.811,727.811,29,23,5,0)
 
"^DD",727.811,727.811,29,23,6,0)
That pointer value is stored here as a character string; this field
"^DD",727.811,727.811,29,23,7,0)
then represents an IEN in file #134.
"^DD",727.811,727.811,29,"DT")
2970911
"^DD",727.811,727.811,30,0)
ATTENDING'S SERVICE^F^^0;31^K:$L(X)>4!($L(X)<1) X
"^DD",727.811,727.811,30,.1)
Attending's Service
"^DD",727.811,727.811,30,3)
Answer must be 1-4 characters in length.
"^DD",727.811,727.811,30,21,0)
^^3^3^2970912^^^^
"^DD",727.811,727.811,30,21,1,0)
The service to which the attending surgeon is assigned.
"^DD",727.811,727.811,30,21,2,0)
The character string in this field represents an IEN in the NATIONAL
"^DD",727.811,727.811,30,21,3,0)
SERVICE file (#730).
"^DD",727.811,727.811,30,23,0)
^^10^10^2970912^^^^
"^DD",727.811,727.811,30,23,1,0)
ATTENDING'S SERVICE is an IEN in the NATIONAL SERVICE file (#730). 
"^DD",727.811,727.811,30,23,2,0)
 
"^DD",727.811,727.811,30,23,3,0)
It is derived from the SERVICE/SECTION field (#29) in the NEW PERSON file 
"^DD",727.811,727.811,30,23,4,0)
(#200) for the ATTENDING SURGEON field (#13) in the SURGERY EXTRACT file 
"^DD",727.811,727.811,30,23,5,0)
(#727.811) which is a pointer to the SERVICE/SECTION file (#49). 
"^DD",727.811,727.811,30,23,6,0)
The pointer value found in the NATIONAL SERVICE field (#730) of the 
"^DD",727.811,727.811,30,23,7,0)
SERVICE/SECTION file (#49) points to the NATIONAL SERVICE file (#730). 
"^DD",727.811,727.811,30,23,8,0)
 
"^DD",727.811,727.811,30,23,9,0)
The pointer value to file #730 is stored in this field as a character
"^DD",727.811,727.811,30,23,10,0)
string.
"^DD",727.811,727.811,30,"DT")
2970911
"^DD",727.811,727.811,31,0)
NON OR DSS IDENTIFIER^F^^0;32^K:$L(X)>10!($L(X)<1) X
"^DD",727.811,727.811,31,.1)
Non-OR DSS Identifier
"^DD",727.811,727.811,31,3)
Your answer must be 1 to 10 characters in length.
"^DD",727.811,727.811,31,21,0)
^^1^1^2961210^^^^
"^DD",727.811,727.811,31,21,1,0)
The DSS UNIT IDENTIFIER for the non-OR location for this procedure.
"^DD",727.811,727.811,31,23,0)
^^5^5^2961210^^^^
"^DD",727.811,727.811,31,23,1,0)
For a non-OR procedure, the NON-OR LOCATION field (119) in the SURGERY 
"^DD",727.811,727.811,31,23,2,0)
file (#130) points to the HOSPITAL LOCATION file (#44). The pointer is 
"^DD",727.811,727.811,31,23,3,0)
used to examine the DSS UNIT IDENTIFIER field (8) in the CLINIC AND STOP 
"^DD",727.811,727.811,31,23,4,0)
CODES file (#728.44), to determine if this clinic is used for non-OR 
"^DD",727.811,727.811,31,23,5,0)
surgical procedures.
"^DD",727.811,727.811,31,"DT")
2961210
"^DD",727.811,727.811,32,0)
RECOVERY ROOM (PACU) TIME^F^^0;33^K:$L(X)>4!($L(X)<1) X
"^DD",727.811,727.811,32,.1)
Recovery Room (PACU) Time
"^DD",727.811,727.811,32,3)
Your answer must be 1 to 4 characters in length.
"^DD",727.811,727.811,32,21,0)
^^2^2^2961002^^^^
"^DD",727.811,727.811,32,21,1,0)
The time, in 15 minute increments, that the patient spent in the
"^DD",727.811,727.811,32,21,2,0)
post anesthesia care unit.
"^DD",727.811,727.811,32,23,0)
^^2^2^2961002^^^^
"^DD",727.811,727.811,32,23,1,0)
Derived from the PAC(U) DISCH TIME field (1.18) minus the ADMIT PAC(U) 
"^DD",727.811,727.811,32,23,2,0)
TIME field (1.17) in the SURGERY file (#130).
"^DD",727.811,727.811,32,"DT")
2961002
"^DD",727.811,727.811,34,0)
PRIMARY CARE TEAM^F^^0;35^K:$L(X)>4!($L(X)<1) X
"^DD",727.811,727.811,34,.1)
Primary Care Team
"^DD",727.811,727.811,34,3)
Enter primary care team assigned to this patient.
"^DD",727.811,727.811,34,21,0)
^^1^1^2961031^^^^
"^DD",727.811,727.811,34,21,1,0)
The primary care team assigned to this patient.
"^DD",727.811,727.811,34,23,0)
^^6^6^2961031^^^
"^DD",727.811,727.811,34,23,1,0)
Using the DATE OF OPERATION field (.09) from the SURGERY file (#130) 
"^DD",727.811,727.811,34,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) 
"^DD",727.811,727.811,34,23,3,0)
in the SURGERY EXTRACT file (#727.811), a call is made to the Scheduling 
"^DD",727.811,727.811,34,23,4,0)
API, OUTPTTM^SDUTL3. The API returns the team's internal entry number 
"^DD",727.811,727.811,34,23,5,0)
and name from the TEAM file (#404.51). Only the pointer (IEN) to File 
"^DD",727.811,727.811,34,23,6,0)
404.51 is transmitted.
"^DD",727.811,727.811,34,"DT")
2961031
"^DD",727.811,727.811,35,0)
PRIMARY CARE PROVIDER^F^^0;36^K:$L(X)>11!($L(X)<1) X
"^DD",727.811,727.811,35,.1)
Primary Care Provider
"^DD",727.811,727.811,35,3)
Enter primary care provider assigned to this patient.
"^DD",727.811,727.811,35,21,0)
^^1^1^2961031^^
"^DD",727.811,727.811,35,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.811,727.811,35,23,0)
^^6^6^2961031^^
"^DD",727.811,727.811,35,23,1,0)
Using the DATE OF OPERATION field (.09) from the SURGERY file (#130) 
"^DD",727.811,727.811,35,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) 
"^DD",727.811,727.811,35,23,3,0)
in the SURGERY EXTRACT file (#727.811), a call is made to the Scheduling 
"^DD",727.811,727.811,35,23,4,0)
API, OUTPTPR^SDUTL3. The API returns the provider's internal entry 
"^DD",727.811,727.811,35,23,5,0)
number and name from the NEW PERSON file (#200). Only the pointer (IEN) 
"^DD",727.811,727.811,35,23,6,0)
to File 200 is transmitted.
"^DD",727.811,727.811,35,"DT")
2961018
"^DD",727.811,727.811,36,0)
ADMISSION DATE^FO^^0;37^K:$L(X)>8!($L(X)<8) X
"^DD",727.811,727.811,36,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.811,727.811,36,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.811,727.811,36,3)
Answer must be 8 characters in length.
"^DD",727.811,727.811,36,21,0)
^^1^1^2970923^
"^DD",727.811,727.811,36,21,1,0)
To be used for future development; currently set to null.
"^DD",727.811,727.811,36,23,0)
^^1^1^2970923^^
"^DD",727.811,727.811,36,23,1,0)
For future development.
"^DD",727.811,727.811,36,"DT")
2970924
"^DD",727.813,727.813,0)
FIELD^^9^22
"^DD",727.813,727.813,0,"DDA")
N
"^DD",727.813,727.813,0,"DIK")
ECX813
"^DD",727.813,727.813,0,"DIKOLD")
ECX813
"^DD",727.813,727.813,0,"DT")
2970918
"^DD",727.813,727.813,0,"IX","AC",727.813,2)

"^DD",727.813,727.813,0,"IX","AINV",727.813,.01)

"^DD",727.813,727.813,0,"NM","LABORATORY EXTRACT")

"^DD",727.813,727.813,0,"VRPK")
DSS EXTRACTS
"^DD",727.813,727.813,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.813,727.813,.01,.1)
Sequence Number
"^DD",727.813,727.813,.01,1,0)
^.1
"^DD",727.813,727.813,.01,1,1,0)
727.813^AINV^MUMPS
"^DD",727.813,727.813,.01,1,1,1)
S ^ECX(727.813,"AINV",-X,DA)=""
"^DD",727.813,727.813,.01,1,1,2)
K ^ECX(727.813,"AINV",-X,DA)
"^DD",727.813,727.813,.01,1,1,3)
DO NOT DELETE.
"^DD",727.813,727.813,.01,1,1,"%D",0)
^^3^3^2960808^^^^
"^DD",727.813,727.813,.01,1,1,"%D",1,0)
This is an inverse entry cross reference.  It is used to find the
"^DD",727.813,727.813,.01,1,1,"%D",2,0)
last entry in the file.  It is essential for the management of the
"^DD",727.813,727.813,.01,1,1,"%D",3,0)
extract and the purge of extract data.
"^DD",727.813,727.813,.01,1,1,"DT")
2921016
"^DD",727.813,727.813,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",727.813,727.813,.01,21,0)
^^1^1^2960730^^^^
"^DD",727.813,727.813,.01,21,1,0)
The record number for this extract entry.
"^DD",727.813,727.813,.01,23,0)
^^1^1^2960730^^^^
"^DD",727.813,727.813,.01,23,1,0)
The internal entry number (IEN) for this record.  This entry is DINUMed.
"^DD",727.813,727.813,.01,"DT")
2960730
"^DD",727.813,727.813,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.813,727.813,1,.1)
Year/Month
"^DD",727.813,727.813,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.813,727.813,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.813,727.813,1,3)
Answer must be 6 characters in length.
"^DD",727.813,727.813,1,21,0)
^^2^2^2970922^^^^
"^DD",727.813,727.813,1,21,1,0)
A six character numeric string representing the year and the month
"^DD",727.813,727.813,1,21,2,0)
for which this extract was performed.
"^DD",727.813,727.813,1,23,0)
^^1^1^2970922^^^^
"^DD",727.813,727.813,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.813,727.813,1,"DT")
2970924
"^DD",727.813,727.813,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.813,727.813,2,.1)
Extract Number
"^DD",727.813,727.813,2,1,0)
^.1
"^DD",727.813,727.813,2,1,1,0)
727.813^AC
"^DD",727.813,727.813,2,1,1,1)
S ^ECX(727.813,"AC",$E(X,1,30),DA)=""
"^DD",727.813,727.813,2,1,1,2)
K ^ECX(727.813,"AC",$E(X,1,30),DA)
"^DD",727.813,727.813,2,1,1,3)
DO NOT DELETE.
"^DD",727.813,727.813,2,1,1,"%D",0)
^^2^2^2960808^^^^
"^DD",727.813,727.813,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data
"^DD",727.813,727.813,2,1,1,"%D",2,0)
in this file.
"^DD",727.813,727.813,2,1,1,"DT")
2910802
"^DD",727.813,727.813,2,3)
Enter the extract number for this extract.
"^DD",727.813,727.813,2,21,0)
^^2^2^2960730^^^^
"^DD",727.813,727.813,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727) for this 
"^DD",727.813,727.813,2,21,2,0)
extract.
"^DD",727.813,727.813,2,23,0)
^^2^2^2960730^^^^
"^DD",727.813,727.813,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is to
"^DD",727.813,727.813,2,23,2,0)
pick up the header for the mail message.
"^DD",727.813,727.813,2,"DT")
2960730
"^DD",727.813,727.813,3,0)
FACILITY^F^^0;4^K:$L(X)>11!($L(X)<1) X
"^DD",727.813,727.813,3,.1)
Facility
"^DD",727.813,727.813,3,3)
Enter the station number where this extract was performed.
"^DD",727.813,727.813,3,21,0)
^^1^1^2960815^^^^
"^DD",727.813,727.813,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.813,727.813,3,23,0)
^^4^4^2960815^^^^
"^DD",727.813,727.813,3,23,1,0)
An indicator of the division where this event happened. Using the NAME 
"^DD",727.813,727.813,3,23,2,0)
field (.01) pointer from the DSS EXTRACTS file (#728), FACILITY is 
"^DD",727.813,727.813,3,23,3,0)
derived from the STATION NUMBER field (99) for that pointer number in 
"^DD",727.813,727.813,3,23,4,0)
the INSTITUTION file (#4).
"^DD",727.813,727.813,3,"DT")
2961017
"^DD",727.813,727.813,4,0)
PATIENT NO. - DFN^NJ2,0^^0;5^K:+X'=X!(X>10)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.813,727.813,4,.1)
Patient No. - DFN
"^DD",727.813,727.813,4,3)
Enter a number between 0 and 999999999, 0 decimal digits.
"^DD",727.813,727.813,4,21,0)
^^8^8^2961022^^
"^DD",727.813,727.813,4,21,1,0)
The entity to which this extract applies. 
"^DD",727.813,727.813,4,21,2,0)
1. For Lab Extract without LMIP Codes:
"^DD",727.813,727.813,4,21,3,0)
It could be an inpatient, a referral patient, or a research subject 
"^DD",727.813,727.813,4,21,4,0)
(which could be a patient, animal, tissue sample, etc.).
"^DD",727.813,727.813,4,21,5,0)
 
"^DD",727.813,727.813,4,21,6,0)
2. For Lab Extract with LMIP Codes:
"^DD",727.813,727.813,4,21,7,0)
The patient to whom this extract applies. It could be an inpatient or a 
"^DD",727.813,727.813,4,21,8,0)
referral patient.
"^DD",727.813,727.813,4,23,0)
^^10^10^2961022^^
"^DD",727.813,727.813,4,23,1,0)
1. For Lab Extract without LMIP Codes:
"^DD",727.813,727.813,4,23,2,0)
Internal entry number in the PATIENT file (#2), or the REFERRAL  
"^DD",727.813,727.813,4,23,3,0)
file (#67), or the RESEARCH file (#67.1). Derived from the NAME field 
"^DD",727.813,727.813,4,23,4,0)
(.03) as defined from the PARENT FILE field (.02) in the LAB DATA file 
"^DD",727.813,727.813,4,23,5,0)
(#63).
"^DD",727.813,727.813,4,23,6,0)
 
"^DD",727.813,727.813,4,23,7,0)
2. For Lab Extract with LMIP Codes:
"^DD",727.813,727.813,4,23,8,0)
Internal entry number in the PATIENT file (#2) or the REFERRAL PATIENT 
"^DD",727.813,727.813,4,23,9,0)
file (#67).  Derived from the NAME field (.03) as defined from the PARENT
"^DD",727.813,727.813,4,23,10,0)
FILE field (.02) in the LAB DATA file (#63).
"^DD",727.813,727.813,4,"DT")
2961017
"^DD",727.813,727.813,5,0)
SSN IDENTIFYING NUMBER^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.813,727.813,5,.1)
Social Security Identifying Number
"^DD",727.813,727.813,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.813,727.813,5,21,0)
^^2^2^2961127^^^^
"^DD",727.813,727.813,5,21,1,0)
The patient's social security number or the identifying number for a
"^DD",727.813,727.813,5,21,2,0)
non-patient entity.
"^DD",727.813,727.813,5,23,0)
^^13^13^2961127^^^^
"^DD",727.813,727.813,5,23,1,0)
SSN or identifying number as defined by one of two methods:
"^DD",727.813,727.813,5,23,2,0)
1. For Lab Extract without LMIP Codes:
"^DD",727.813,727.813,5,23,3,0)
   If the PARENT FILE field (.02) in the LAB DATA file (#63) is
"^DD",727.813,727.813,5,23,4,0)
   a. PATIENT file (#2) = SOCIAL SECURITY NUMBER field (.09)
"^DD",727.813,727.813,5,23,5,0)
   b. REFERRAL PATIENT file (#67) = "000123456"
"^DD",727.813,727.813,5,23,6,0)
   c. RESEARCH file (#67.1) = "888888888"
"^DD",727.813,727.813,5,23,7,0)
 
"^DD",727.813,727.813,5,23,8,0)
2. For Lab Extract with LMIP Codes:
"^DD",727.813,727.813,5,23,9,0)
   If the PATIENT field (9) of the ACCESSION WKLD CODE TIME field (1) 
"^DD",727.813,727.813,5,23,10,0)
   multiple within the WKLD CODE field (1) multiple within the DATE 
"^DD",727.813,727.813,5,23,11,0)
   field (.03) multiple of the WKLD DATA file (#64.1) is
"^DD",727.813,727.813,5,23,12,0)
   a. PATIENT file (#2) = SOCIAL SECURITY NUMBER field (.09)
"^DD",727.813,727.813,5,23,13,0)
   b. REFERRAL PATIENT file (#67) = "000123456"
"^DD",727.813,727.813,5,"DT")
2961017
"^DD",727.813,727.813,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.813,727.813,6,.1)
Name
"^DD",727.813,727.813,6,3)
Your answer must be 4 characters in length.
"^DD",727.813,727.813,6,21,0)
^^1^1^2961127^^^^
"^DD",727.813,727.813,6,21,1,0)
The first four characters of the patient's last name or entity's name.
"^DD",727.813,727.813,6,23,0)
^^16^16^2961127^^
"^DD",727.813,727.813,6,23,1,0)
Free text first four characters of the patient's or entity's last name 
"^DD",727.813,727.813,6,23,2,0)
as determined by one of two methods:
"^DD",727.813,727.813,6,23,3,0)
1. For Lab Extract without LMIP Codes:
"^DD",727.813,727.813,6,23,4,0)
   If the PARENT FILE field (.02) in the LAB DATA file (#63) is 
"^DD",727.813,727.813,6,23,5,0)
   a. PATIENT file (#2) = NAME field (.01) in the PATIENT file (#2). 
"^DD",727.813,727.813,6,23,6,0)
   b. REFERRAL PATIENT file (#67) = "RFRL"
"^DD",727.813,727.813,6,23,7,0)
   c. RESEARCH file (#67.1) = "RSCH"
"^DD",727.813,727.813,6,23,8,0)
 
"^DD",727.813,727.813,6,23,9,0)
2. For Lab Extract with LMIP Codes:
"^DD",727.813,727.813,6,23,10,0)
   If the PATIENT field (9) of the ACCESSION WKLD CODE TIME field (1) 
"^DD",727.813,727.813,6,23,11,0)
   multiple within the WKLD CODE field (1) multiple within the DATE 
"^DD",727.813,727.813,6,23,12,0)
   field (.03) multiple of the WKLD DATA file (#64.1) is
"^DD",727.813,727.813,6,23,13,0)
   a. PATIENT file (#2) = NAME field (.01) in the PATIENT file (#2). 
"^DD",727.813,727.813,6,23,14,0)
   b. REFERRAL PATIENT file (#67) = "RFRL"
"^DD",727.813,727.813,6,23,15,0)
 
"^DD",727.813,727.813,6,23,16,0)
If necessary, trailing spaces are padded to equal 4 characters. 
"^DD",727.813,727.813,6,"DT")
2960730
"^DD",727.813,727.813,7,0)
IN OUT PATIENT INDICATOR^P40.9'^DIC(40.9,^0;8^Q
"^DD",727.813,727.813,7,.1)
In Out Patient Indicator
"^DD",727.813,727.813,7,3)
Enter 1 to indicate outpatient status, 3 for inpatient status.
"^DD",727.813,727.813,7,21,0)
^^2^2^2960730^^^^
"^DD",727.813,727.813,7,21,1,0)
Indicates whether the patient or entity was an inpatient or an 
"^DD",727.813,727.813,7,21,2,0)
outpatient for this extract.  
"^DD",727.813,727.813,7,23,0)
^^4^4^2960730^^^^
"^DD",727.813,727.813,7,23,1,0)
This field is initialized to a 1, indicating an outpatient status.  If 
"^DD",727.813,727.813,7,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.813,727.813,7,23,3,0)
patient movement number, then the field is reset to a 3 indicating 
"^DD",727.813,727.813,7,23,4,0)
inpatient status. 
"^DD",727.813,727.813,7,"DT")
2960731
"^DD",727.813,727.813,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.813,727.813,8,.1)
Day
"^DD",727.813,727.813,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.813,727.813,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.813,727.813,8,3)
Answer must be 8 characters in length.
"^DD",727.813,727.813,8,21,0)
^^2^2^2970922^^^^
"^DD",727.813,727.813,8,21,1,0)
This 8-character numeric string represents the order date of
"^DD",727.813,727.813,8,21,2,0)
the Laboratory test.
"^DD",727.813,727.813,8,23,0)
^^19^19^2970923^^^^
"^DD",727.813,727.813,8,23,1,0)
Data source --
"^DD",727.813,727.813,8,23,2,0)
 
"^DD",727.813,727.813,8,23,3,0)
1. For Lab Extract without LMIP Codes:
"^DD",727.813,727.813,8,23,4,0)
   LAB ORDER ENTRY file (#69); SPECIMEN sub-file (#69.01);
"^DD",727.813,727.813,8,23,5,0)
      DATE/TIME ORDERED field (#5)
"^DD",727.813,727.813,8,23,6,0)
 
"^DD",727.813,727.813,8,23,7,0)
2. For Lab Extract with LMIP Codes:
"^DD",727.813,727.813,8,23,8,0)
   WKLD LOG file (#64.03); DATE ORDERED field (#13)
"^DD",727.813,727.813,8,23,9,0)
   Data inserted in this field by Laboratory routine LRCAPDSS
"^DD",727.813,727.813,8,23,10,0)
   and is derived from:
"^DD",727.813,727.813,8,23,11,0)
   WKLD DATA file (#64.1); DATE sub-file (#64.11);
"^DD",727.813,727.813,8,23,12,0)
      WKLD CODE sub-file (#64.111); ACCESSION WKLD CODE TIME sub-file
"^DD",727.813,727.813,8,23,13,0)
      (#64.1111); DATA ORDERED field (#11)
"^DD",727.813,727.813,8,23,14,0)
 
"^DD",727.813,727.813,8,23,15,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.813,727.813,8,23,16,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.813,727.813,8,23,17,0)
then a default is used.  The default date value is the value of the 
"^DD",727.813,727.813,8,23,18,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.813,727.813,8,23,19,0)
Year 2000 compliant per vendor.
"^DD",727.813,727.813,8,"DT")
2970924
"^DD",727.813,727.813,9,0)
ACCESSION AREA^P68'^LRO(68,^0;10^Q
"^DD",727.813,727.813,9,.1)
Accession Area
"^DD",727.813,727.813,9,3)
Enter the accession area for this lab extract entry.
"^DD",727.813,727.813,9,21,0)
^^1^1^2960815^^^^
"^DD",727.813,727.813,9,21,1,0)
The accession area of the laboratory.
"^DD",727.813,727.813,9,23,0)
^^10^10^2960815^^^^
"^DD",727.813,727.813,9,23,1,0)
1. For Lab Extract without LMIP Codes:
"^DD",727.813,727.813,9,23,2,0)
   AREA field (.01) in the ACCESSION file (#68) as pointed to by the 
"^DD",727.813,727.813,9,23,3,0)
   ACCESSION AREA field (3) within the TEST multiple (6) within the 
"^DD",727.813,727.813,9,23,4,0)
   SPECIMEN multiple (1) of the LAB ORDER ENTRY file (#69). 
"^DD",727.813,727.813,9,23,5,0)
 
"^DD",727.813,727.813,9,23,6,0)
2. For Lab Extract with LMIP Codes:
"^DD",727.813,727.813,9,23,7,0)
   AREA field (.01) in the ACCESSION file (#68) as pointed to by the 
"^DD",727.813,727.813,9,23,8,0)
   MAJ. SECT. field (6) of the ACCESSION WKLD CODE TIME field (1) 
"^DD",727.813,727.813,9,23,9,0)
   multiple within the WKLD CODE field (1) multiple within the DATE 
"^DD",727.813,727.813,9,23,10,0)
   field (.03) multiple of the WKLD DATA file (#64.1).
"^DD",727.813,727.813,9,"DT")
2960730
"^DD",727.813,727.813,10,0)
ABBREVIATION^F^^0;11^K:$L(X)>5!($L(X)<1) X
"^DD",727.813,727.813,10,.1)
Abbreviation
"^DD",727.813,727.813,10,3)
Your answer must be 1 to 5 characters in length.
"^DD",727.813,727.813,10,21,0)
^^1^1^2960730^^^^
"^DD",727.813,727.813,10,21,1,0)
The abbreviation for the accession area associated with this event.
"^DD",727.813,727.813,10,23,0)
^^10^10^2960730^^^^
"^DD",727.813,727.813,10,23,1,0)
1. For Lab Extract without LMIP Codes:
"^DD",727.813,727.813,10,23,2,0)
   ABBREVIATION field (.09) of the ACCESSION file (#68) as pointed to by 
"^DD",727.813,727.813,10,23,3,0)
   the ACCESSION AREA field (3) within the TEST multiple (6) within the 
"^DD",727.813,727.813,10,23,4,0)
   SPECIMEN # multiple (1) of the LAB ORDER ENTRY file (#69).
"^DD",727.813,727.813,10,23,5,0)
 
"^DD",727.813,727.813,10,23,6,0)
2. For Lab Extract with LMIP Codes:
"^DD",727.813,727.813,10,23,7,0)
   ABBREVIATION field (.09) in the ACCESSION file (#68) as pointed to by 
"^DD",727.813,727.813,10,23,8,0)
   the MAJ. SECT. field (6) of the ACCESSION WKLD CODE TIME field 
"^DD",727.813,727.813,10,23,9,0)
   (1) multiple within the WKLD CODE field (1) multiple within the DATE 
"^DD",727.813,727.813,10,23,10,0)
   field (.03) multiple of the WKLD DATA file (#64.1).
"^DD",727.813,727.813,10,"DT")
2960730
"^DD",727.813,727.813,11,0)
TEST^P60'^LAB(60,^0;12^Q
"^DD",727.813,727.813,11,.1)
Test
"^DD",727.813,727.813,11,3)
Enter the lab test for this entry.
"^DD",727.813,727.813,11,21,0)
^^1^1^2970728^^^^
"^DD",727.813,727.813,11,21,1,0)
The lab test associated with this event for this patient or entity.  
"^DD",727.813,727.813,11,23,0)
^^10^10^2970728^^^^
"^DD",727.813,727.813,11,23,1,0)
1. For Lab Extract without LMIP Codes:
"^DD",727.813,727.813,11,23,2,0)
   NAME field (.01) in the LABORATORY TEST FILE (#60) as pointed to by 
"^DD",727.813,727.813,11,23,3,0)
   TEST/PROCEDURE field (.01) of the TEST multiple (6) within the 
"^DD",727.813,727.813,11,23,4,0)
   SPECIMEN # multiple (1) of the LAB ORDER ENTRY file (#69).
"^DD",727.813,727.813,11,23,5,0)
 
"^DD",727.813,727.813,11,23,6,0)
2. For Lab Extract with LMIP Codes:
"^DD",727.813,727.813,11,23,7,0)
   NAME field (.01) in the LABORATORY TEST FILE (#60) as pointed to by
"^DD",727.813,727.813,11,23,8,0)
   the LAB TEST field (1) of the ACCESSION WKLD CODE TIME field (1) 
"^DD",727.813,727.813,11,23,9,0)
   multiple within the WKLD CODE field (1) multiple within the DATE 
"^DD",727.813,727.813,11,23,10,0)
   field (.03) multiple of the WKLD DATA file (#64.1).
"^DD",727.813,727.813,11,"DT")
2960730
"^DD",727.813,727.813,12,0)
URGENCY OF TEST^P62.05'^LAB(62.05,^0;13^Q
"^DD",727.813,727.813,12,.1)
Urgency of Test
"^DD",727.813,727.813,12,3)
Enter urgency of test completed.
"^DD",727.813,727.813,12,21,0)
^^1^1^2960730^^^
"^DD",727.813,727.813,12,21,1,0)
The urgency of the test completed.
"^DD",727.813,727.813,12,23,0)
^^10^10^2960730^^^^
"^DD",727.813,727.813,12,23,1,0)
1. For Lab Extract without LMIP Codes:
"^DD",727.813,727.813,12,23,2,0)
   URGENCY field (.01) in the URGENCY FILE (#62.05) as pointed to by 
"^DD",727.813,727.813,12,23,3,0)
   URGENCY field (1) of the TEST multiple (6) within the SPECIMEN # 
"^DD",727.813,727.813,12,23,4,0)
   multiple (1) of the LAB ORDER ENTRY file (#69). 
"^DD",727.813,727.813,12,23,5,0)
 
"^DD",727.813,727.813,12,23,6,0)
2. For Lab Extract with LMIP Codes:
"^DD",727.813,727.813,12,23,7,0)
   URGENCY field (.01) in the URGENCY FILE (#62.05) as pointed to by
"^DD",727.813,727.813,12,23,8,0)
   the URGENCY field (22) of the ACCESSION WKLD CODE TIME field (1) 
"^DD",727.813,727.813,12,23,9,0)
   multiple within the WKLD CODE field (1) multiple within the DATE 
"^DD",727.813,727.813,12,23,10,0)
   field (.03) multiple of the WKLD DATA file (#64.1).
"^DD",727.813,727.813,12,"DT")
2960730
"^DD",727.813,727.813,13,0)
TREATING SPECIALTY^P42.4'^DIC(42.4,^0;14^Q
"^DD",727.813,727.813,13,.1)
Treating Specialty
"^DD",727.813,727.813,13,3)
Enter treating specialty for this patient or entity.
"^DD",727.813,727.813,13,21,0)
^^2^2^2960730^^^^
"^DD",727.813,727.813,13,21,1,0)
Indicates treating specialty for this patient or entity.  Will be set to 
"^DD",727.813,727.813,13,21,2,0)
null for outpatients.  
"^DD",727.813,727.813,13,23,0)
^^14^14^2960730^^^^
"^DD",727.813,727.813,13,23,1,0)
1. For Lab Extract without LMIP Codes:
"^DD",727.813,727.813,13,23,2,0)
   This field is initialized to a null, indicating an outpatient 
"^DD",727.813,727.813,13,23,3,0)
   status. If a call to IN5^VADPT (using the patient IEN and the event 
"^DD",727.813,727.813,13,23,4,0)
   date) returns a patient movement number (indicating inpatient 
"^DD",727.813,727.813,13,23,5,0)
   status), then the value of VAIP(8), which is the pointer to the 
"^DD",727.813,727.813,13,23,6,0)
   FACILITY TREATING SPECIALTY file (#45.7), is used to get the 
"^DD",727.813,727.813,13,23,7,0)
   SPECIALTY field (1) which points to the SPECIALTY file (#42.4). 
"^DD",727.813,727.813,13,23,8,0)
 
"^DD",727.813,727.813,13,23,9,0)
2. For Lab Extract with LMIP Codes:
"^DD",727.813,727.813,13,23,10,0)
   NAME field (.01) in the SPECIALTY file (#42.4), as pointed to by the 
"^DD",727.813,727.813,13,23,11,0)
   NAME field (.01) in the FACILITY TREATING SPECIALTY file (#45.7), as 
"^DD",727.813,727.813,13,23,12,0)
   pointed to by the TREATING SPECIALTY field (16) of the ACCESSION WKLD 
"^DD",727.813,727.813,13,23,13,0)
   CODE TIME field (1) multiple within the WKLD CODE field (1) multiple 
"^DD",727.813,727.813,13,23,14,0)
   within the DATE field (.03) multiple of the WKLD DATA file (#64.1).
"^DD",727.813,727.813,13,"DT")
2960730
"^DD",727.813,727.813,14,0)
LOCATION^F^^0;15^K:$L(X)>6!($L(X)<1) X
"^DD",727.813,727.813,14,.1)
Location
"^DD",727.813,727.813,14,3)
Your answer must be 1 to 6 characters in length.
"^DD",727.813,727.813,14,21,0)
^^1^1^2961022^^^^
"^DD",727.813,727.813,14,21,1,0)
The service/location from which the original order came.
"^DD",727.813,727.813,14,23,0)
^^14^14^2961022^^^
"^DD",727.813,727.813,14,23,1,0)
1. For Lab Extract without LMIP Codes:
"^DD",727.813,727.813,14,23,2,0)
   NAME field (.01) of the HOSPITAL LOCATION file (#44) as pointed to by 
"^DD",727.813,727.813,14,23,3,0)
   the ORDERING LOCATION field (23) within the SPECIMEN # multiple (1) 
"^DD",727.813,727.813,14,23,4,0)
   of the LAB ORDER ENTRY file (#69). 
"^DD",727.813,727.813,14,23,5,0)
 
"^DD",727.813,727.813,14,23,6,0)
2. For Lab Extract with LMIP Codes:
"^DD",727.813,727.813,14,23,7,0)
   NAME field (.01) of the HOSPITAL LOCATION file (#44) as pointed to by 
"^DD",727.813,727.813,14,23,8,0)
   the ORDERING LOCATION field (20) of the ACCESSION WKLD CODE TIME 
"^DD",727.813,727.813,14,23,9,0)
   field (1) multiple within the WKLD CODE field (1) multiple within the 
"^DD",727.813,727.813,14,23,10,0)
   DATE field (.03) multiple of the WKLD DATA file (#64.1).
"^DD",727.813,727.813,14,23,11,0)
 
"^DD",727.813,727.813,14,23,12,0)
In the case of the Lab Extract with LMIP Codes, this field may sometimes 
"^DD",727.813,727.813,14,23,13,0)
be null since Lab allows "non-standard" locations to be entered and 
"^DD",727.813,727.813,14,23,14,0)
these entries would be of no help to the purpose of this extract.
"^DD",727.813,727.813,14,"DT")
2961017
"^DD",727.813,727.813,15,0)
PROVIDER^F^^0;16^K:$L(X)>11!($L(X)<1) X
"^DD",727.813,727.813,15,.1)
Provider
"^DD",727.813,727.813,15,3)
Enter provider for this record.
"^DD",727.813,727.813,15,21,0)
^^1^1^2961022^^^^
"^DD",727.813,727.813,15,21,1,0)
The provider assigned to this patient or entity.  
"^DD",727.813,727.813,15,23,0)
^^11^11^2961022^^^^
"^DD",727.813,727.813,15,23,1,0)
1. For Lab Extract without LMIP Codes:
"^DD",727.813,727.813,15,23,2,0)
   NAME field (.01) of the PROVIDER file (#6) or the NAME field (.01) of 
"^DD",727.813,727.813,15,23,3,0)
   the NEW PERSON file (#200) as pointed to by the PROVIDER field (7) 
"^DD",727.813,727.813,15,23,4,0)
   within the SPECIMEN # multiple (1) of the LAB ORDER ENTRY file (#69). 
"^DD",727.813,727.813,15,23,5,0)
 
"^DD",727.813,727.813,15,23,6,0)
2. For Lab Extract with LMIP Codes:
"^DD",727.813,727.813,15,23,7,0)
   NAME field (.01) of the PROVIDER file (#6) or the NAME field (.01) of 
"^DD",727.813,727.813,15,23,8,0)
   the NEW PERSON file (#200) as pointed to by the PROVIDER field (15) 
"^DD",727.813,727.813,15,23,9,0)
   of the ACCESSION WKLD CODE TIME field (1) multiple within the WKLD 
"^DD",727.813,727.813,15,23,10,0)
   CODE field (1) multiple within the DATE field (.03) multiple of the 
"^DD",727.813,727.813,15,23,11,0)
   WKLD DATA file (#64.1).
"^DD",727.813,727.813,15,"DT")
2961017
"^DD",727.813,727.813,16,0)
MOVEMENT FILE #^P405'^DGPM(^0;17^Q
"^DD",727.813,727.813,16,.1)
Movement File Number
"^DD",727.813,727.813,16,3)
Enter the movement number associated with this patient or null for an entity. 
"^DD",727.813,727.813,16,21,0)
^^3^3^2960731^^^^
"^DD",727.813,727.813,16,21,1,0)
Movement number from the PATIENT MOVEMENT file (#405) associated with 
"^DD",727.813,727.813,16,21,2,0)
this event for a patient.  This field will be set to null for non-
"^DD",727.813,727.813,16,21,3,0)
patient or outpatient events.
"^DD",727.813,727.813,16,23,0)
^^5^5^2960731^^^^
"^DD",727.813,727.813,16,23,1,0)
This field is initialized to a null, indicating an outpatient status.  
"^DD",727.813,727.813,16,23,2,0)
If a call to IN5^VADPT (using the patient IEN and the event date) 
"^DD",727.813,727.813,16,23,3,0)
returns a patient movement number (indicating inpatient status), then 
"^DD",727.813,727.813,16,23,4,0)
this field is set to the value of VAIP(1), which is the pointer to the 
"^DD",727.813,727.813,16,23,5,0)
PATIENT MOVEMENT file (#405). 
"^DD",727.813,727.813,16,"DT")
2960730
"^DD",727.813,727.813,17,0)
FILE^F^^0;18^K:$L(X)>5!($L(X)<1) X
"^DD",727.813,727.813,17,.1)
File
"^DD",727.813,727.813,17,3)
Your answer must be 1 to 5 characters in length.
"^DD",727.813,727.813,17,21,0)
^^2^2^2961127^^^^
"^DD",727.813,727.813,17,21,1,0)
Parent file from which entity was extracted, i.e., PATIENT file (#2), 
"^DD",727.813,727.813,17,21,2,0)
REFERRAL PATIENT file (#67), or RESEARCH file (#67.1).
"^DD",727.813,727.813,17,23,0)
^^14^14^2961127^^^^
"^DD",727.813,727.813,17,23,1,0)
1. For Lab Extract without LMIP Codes:
"^DD",727.813,727.813,17,23,2,0)
   If the PARENT FILE field (.02) of the LAB DATA file (#63) as pointed 
"^DD",727.813,727.813,17,23,3,0)
   to by the LRDFN field (.01) within the SPECIMEN # multiple (1) of the 
"^DD",727.813,727.813,17,23,4,0)
   LAB ORDER ENTRY file (#69) is
"^DD",727.813,727.813,17,23,5,0)
   a. 2 = PATIENT file (#2)
"^DD",727.813,727.813,17,23,6,0)
   b. 67 = REFERRAL PATIENT file (#67)
"^DD",727.813,727.813,17,23,7,0)
   c. 67.1 = RESEARCH file (#67.1).
"^DD",727.813,727.813,17,23,8,0)
 
"^DD",727.813,727.813,17,23,9,0)
2. For Lab Extract with LMIP Codes:
"^DD",727.813,727.813,17,23,10,0)
   If the PATIENT field (9) of the ACCESSION WKLD CODE TIME field (1) 
"^DD",727.813,727.813,17,23,11,0)
   multiple within the WKLD CODE field (1) multiple within the DATE 
"^DD",727.813,727.813,17,23,12,0)
   field (.03) contains
"^DD",727.813,727.813,17,23,13,0)
   a. ^DPT( = PATIENT file (#2)
"^DD",727.813,727.813,17,23,14,0)
   b. ^LRT(67, = REFERRAL PATIENT file (#67)
"^DD",727.813,727.813,17,"DT")
2961022
"^DD",727.813,727.813,18,0)
TIME^FO^^0;19^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.813,727.813,18,.1)
Time
"^DD",727.813,727.813,18,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.813,727.813,18,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.813,727.813,18,3)
Answer must be 6 characters in length.
"^DD",727.813,727.813,18,21,0)
^^2^2^2970918^^^^
"^DD",727.813,727.813,18,21,1,0)
A 6-character numeric string that represents the time of day
"^DD",727.813,727.813,18,21,2,0)
at which the Laboratory test was ordered.
"^DD",727.813,727.813,18,23,0)
^^18^18^2970918^^^^
"^DD",727.813,727.813,18,23,1,0)
1. For Lab Extract without LMIP Codes:
"^DD",727.813,727.813,18,23,2,0)
 
"^DD",727.813,727.813,18,23,3,0)
Data source --
"^DD",727.813,727.813,18,23,4,0)
 
"^DD",727.813,727.813,18,23,5,0)
1. For Lab Extract without LMIP Codes:
"^DD",727.813,727.813,18,23,6,0)
   LAB ORDER ENTRY file (#69); SPECIMEN sub-file (#69.01);
"^DD",727.813,727.813,18,23,7,0)
      DATE/TIME ORDERED field (#5)
"^DD",727.813,727.813,18,23,8,0)
 
"^DD",727.813,727.813,18,23,9,0)
2. For Lab Extract with LMIP Codes:
"^DD",727.813,727.813,18,23,10,0)
   WKLD LOG file (#64.03); DATE ORDERED field (#13)
"^DD",727.813,727.813,18,23,11,0)
   Data inserted in this field by Laboratory routine LRCAPDSS
"^DD",727.813,727.813,18,23,12,0)
   and is derived from:
"^DD",727.813,727.813,18,23,13,0)
   WKLD DATA file (#64.1); DATE sub-file (#64.11);
"^DD",727.813,727.813,18,23,14,0)
      WKLD CODE sub-file (#64.111); ACCESSION WKLD CODE TIME sub-file
"^DD",727.813,727.813,18,23,15,0)
      (#64.1111); DATA ORDERED field (#11)
"^DD",727.813,727.813,18,23,16,0)
 
"^DD",727.813,727.813,18,23,17,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.813,727.813,18,23,18,0)
cannot be determined, then "000300" is used as default.
"^DD",727.813,727.813,18,"DT")
2970924
"^DD",727.813,727.813,19,0)
WORKLOAD CODE^F^^0;20^K:$L(X)>10!($L(X)<1) X
"^DD",727.813,727.813,19,.1)
Workload Code
"^DD",727.813,727.813,19,3)
Your answer must be 1 to 10 characters in length.
"^DD",727.813,727.813,19,21,0)
^^3^3^2970428^^^^
"^DD",727.813,727.813,19,21,1,0)
For Lab Extract with LMIP Codes, this is the workload code for this event.
"^DD",727.813,727.813,19,21,2,0)
This corresponds to a CAP code.  For Lab Extract without LMIP Codes, this
"^DD",727.813,727.813,19,21,3,0)
field is set to null.
"^DD",727.813,727.813,19,23,0)
^^7^7^2970428^^^^
"^DD",727.813,727.813,19,23,1,0)
1. For Lab Extract without LMIP Codes:
"^DD",727.813,727.813,19,23,2,0)
   This field is set to null.  
"^DD",727.813,727.813,19,23,3,0)
 
"^DD",727.813,727.813,19,23,4,0)
2. For Lab Extract with LMIP Codes:
"^DD",727.813,727.813,19,23,5,0)
   WKLD CODE field (1) of the WKLD CODE file (#64) as pointed to by the
"^DD",727.813,727.813,19,23,6,0)
   WKLD CODE field (.01) of the WKLD CODE field (1) multiple within the
"^DD",727.813,727.813,19,23,7,0)
   DATE field (.03) multiple of the WKLD DATA file (#64.1).
"^DD",727.813,727.813,19,"DT")
2961017
"^DD",727.813,727.813,20,0)
PRIMARY CARE TEAM^F^^0;21^K:$L(X)>4!($L(X)<1) X
"^DD",727.813,727.813,20,.1)
Primary Care Team
"^DD",727.813,727.813,20,3)
Enter primary care team assigned to this patient.
"^DD",727.813,727.813,20,21,0)
^^1^1^2961101^^^
"^DD",727.813,727.813,20,21,1,0)
The primary care team assigned to this patient.
"^DD",727.813,727.813,20,23,0)
^^12^12^2961101^
"^DD",727.813,727.813,20,23,1,0)
The ACCESSION DATE is defined by one of two methods. For Lab Extract 
"^DD",727.813,727.813,20,23,2,0)
without LMIP Codes, ACCESSION DATE is defined by the DATE ORDERED field 
"^DD",727.813,727.813,20,23,3,0)
(.01) of the LAB ORDER ENTRY file (#69). For Lab Extract with LMIP 
"^DD",727.813,727.813,20,23,4,0)
Codes, ACCESSION DATE is defined by the DATE ORDERED field (11) of the 
"^DD",727.813,727.813,20,23,5,0)
ACCESSION WKLD CODE TIME field (1) multiple within the WKLD CODE field 
"^DD",727.813,727.813,20,23,6,0)
(1) multiple within the DATE field (.03) multiple of the WKLD DATA file 
"^DD",727.813,727.813,20,23,7,0)
(#64.1).
"^DD",727.813,727.813,20,23,8,0)
  
"^DD",727.813,727.813,20,23,9,0)
Using the ACCESSION DATE and the patient pointer (DFN) stored in the 
"^DD",727.813,727.813,20,23,10,0)
PATIENT NO. - DFN field (4) in the LABORATORY EXTRACT file (#727.813), a 
"^DD",727.813,727.813,20,23,11,0)
call is made to the Scheduling API, OUTPTTM^SDUTL3. The API returns the 
"^DD",727.813,727.813,20,23,12,0)
team's internal entry number and name from the TEAM file (#404.51). Only the pointer (IEN) to File 404.51 is transmitted.
"^DD",727.813,727.813,20,"DT")
2961101
"^DD",727.813,727.813,21,0)
PRIMARY CARE PROVIDER^F^^0;22^K:$L(X)>11!($L(X)<1) X
"^DD",727.813,727.813,21,.1)
Primary Care Provider
"^DD",727.813,727.813,21,3)
Enter primary care provider assigned to this patient.
"^DD",727.813,727.813,21,21,0)
^^1^1^2961101^^
"^DD",727.813,727.813,21,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.813,727.813,21,23,0)
^^13^13^2961101^
"^DD",727.813,727.813,21,23,1,0)
The ACCESSION DATE is defined by one of two methods. For Lab Extract 
"^DD",727.813,727.813,21,23,2,0)
without LMIP Codes, ACCESSION DATE is defined by the DATE ORDERED field 
"^DD",727.813,727.813,21,23,3,0)
(.01) of the LAB ORDER ENTRY file (#69). For Lab Extract with LMIP 
"^DD",727.813,727.813,21,23,4,0)
Codes, ACCESSION DATE is defined by the DATE ORDERED field (11) of the 
"^DD",727.813,727.813,21,23,5,0)
ACCESSION WKLD CODE TIME field (1) multiple within the WKLD CODE field 
"^DD",727.813,727.813,21,23,6,0)
(1) multiple within the DATE field (.03) multiple of the WKLD DATA file 
"^DD",727.813,727.813,21,23,7,0)
(#64.1).
"^DD",727.813,727.813,21,23,8,0)
  
"^DD",727.813,727.813,21,23,9,0)
Using the ACCESSION DATE and the patient pointer (DFN) stored in the 
"^DD",727.813,727.813,21,23,10,0)
PATIENT NO. - DFN field (4) in the LABORATORY EXTRACT file (#727.813), a 
"^DD",727.813,727.813,21,23,11,0)
call is made to the Scheduling API, OUTPTPR^SDUTL3. The API returns the 
"^DD",727.813,727.813,21,23,12,0)
provider's internal entry number and name from the NEW PERSON file 
"^DD",727.813,727.813,21,23,13,0)
(#200). Only the pointer (IEN) to File 200 is transmitted.
"^DD",727.813,727.813,21,"DT")
2961017
"^DD",727.814,727.814,0)
FIELD^^22^23
"^DD",727.814,727.814,0,"DIK")
ECX814
"^DD",727.814,727.814,0,"DIKOLD")
ECX814
"^DD",727.814,727.814,0,"DT")
2970918
"^DD",727.814,727.814,0,"IX","AC",727.814,2)

"^DD",727.814,727.814,0,"IX","AINV",727.814,.01)

"^DD",727.814,727.814,0,"NM","RADIOLOGY EXTRACT")

"^DD",727.814,727.814,0,"VRPK")
DSS EXTRACTS
"^DD",727.814,727.814,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.814,727.814,.01,.1)
Sequence Number
"^DD",727.814,727.814,.01,1,0)
^.1
"^DD",727.814,727.814,.01,1,1,0)
727.814^AINV^MUMPS
"^DD",727.814,727.814,.01,1,1,1)
S ^ECX(727.814,"AINV",-X,DA)=""
"^DD",727.814,727.814,.01,1,1,2)
K ^ECX(727.814,"AINV",-X,DA)
"^DD",727.814,727.814,.01,1,1,3)
DO NOT DELETE.
"^DD",727.814,727.814,.01,1,1,"%D",0)
^^3^3^2960808^^
"^DD",727.814,727.814,.01,1,1,"%D",1,0)
This is an inverse entry cross reference.  It is used to find the
"^DD",727.814,727.814,.01,1,1,"%D",2,0)
last entry in the file.  It is essential for the management of the
"^DD",727.814,727.814,.01,1,1,"%D",3,0)
extract and the purge of extract data.
"^DD",727.814,727.814,.01,1,1,"DT")
2921016
"^DD",727.814,727.814,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",727.814,727.814,.01,21,0)
^^1^1^2961004^^^^
"^DD",727.814,727.814,.01,21,1,0)
The record number for this extract entry.
"^DD",727.814,727.814,.01,23,0)
^^1^1^2961004^^^
"^DD",727.814,727.814,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",727.814,727.814,.01,"DT")
2961004
"^DD",727.814,727.814,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.814,727.814,1,.1)
Year/Month
"^DD",727.814,727.814,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.814,727.814,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.814,727.814,1,3)
Answer must be 6 characters in length.
"^DD",727.814,727.814,1,21,0)
^^2^2^2970918^^^^
"^DD",727.814,727.814,1,21,1,0)
A six character numeric string representing the year and the month
"^DD",727.814,727.814,1,21,2,0)
for which this extract was performed.
"^DD",727.814,727.814,1,23,0)
^^1^1^2970918^^^^
"^DD",727.814,727.814,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.814,727.814,1,"DT")
2970924
"^DD",727.814,727.814,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.814,727.814,2,.1)
Extract Number
"^DD",727.814,727.814,2,1,0)
^.1
"^DD",727.814,727.814,2,1,1,0)
727.814^AC
"^DD",727.814,727.814,2,1,1,1)
S ^ECX(727.814,"AC",$E(X,1,30),DA)=""
"^DD",727.814,727.814,2,1,1,2)
K ^ECX(727.814,"AC",$E(X,1,30),DA)
"^DD",727.814,727.814,2,1,1,3)
DO NOT DELETE.
"^DD",727.814,727.814,2,1,1,"%D",0)
^^2^2^2960808^
"^DD",727.814,727.814,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data
"^DD",727.814,727.814,2,1,1,"%D",2,0)
in this file.
"^DD",727.814,727.814,2,1,1,"DT")
2910802
"^DD",727.814,727.814,2,3)
Enter the extract number for this extract.
"^DD",727.814,727.814,2,21,0)
^^2^2^2961004^^^^
"^DD",727.814,727.814,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727) for this 
"^DD",727.814,727.814,2,21,2,0)
extract.
"^DD",727.814,727.814,2,23,0)
^^2^2^2961004^^^^
"^DD",727.814,727.814,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is to
"^DD",727.814,727.814,2,23,2,0)
pick up the header for the mail message.
"^DD",727.814,727.814,2,"DT")
2961004
"^DD",727.814,727.814,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.814,727.814,3,.1)
Facility
"^DD",727.814,727.814,3,3)
Enter the station number where this extract was performed.
"^DD",727.814,727.814,3,21,0)
^^1^1^2971113^^^^
"^DD",727.814,727.814,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.814,727.814,3,23,0)
^^4^4^2971113^^^^
"^DD",727.814,727.814,3,23,1,0)
Derived from the HOSPITAL DIVISION field (3) within the REGISTERED 
"^DD",727.814,727.814,3,23,2,0)
EXAMS multiple (2) in the RAD/NUC MED PATIENT file (#70). HOSPITAL 
"^DD",727.814,727.814,3,23,3,0)
DIVISION points to the RAD/NUC MED DIVISION file (#79) which in turn 
"^DD",727.814,727.814,3,23,4,0)
points to the INSTITUTION file (#4).
"^DD",727.814,727.814,3,"DT")
2961017
"^DD",727.814,727.814,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.814,727.814,4,.1)
Patient No. - DFN
"^DD",727.814,727.814,4,3)
Enter the name of the patient for this extract record.
"^DD",727.814,727.814,4,21,0)
^^1^1^2971113^^^^
"^DD",727.814,727.814,4,21,1,0)
The name of the patient for this extract record.
"^DD",727.814,727.814,4,23,0)
^^3^3^2971113^^^^
"^DD",727.814,727.814,4,23,1,0)
Derived from the NAME field (.01) of the RAD/NUC MED PATIENT file (#70), 
"^DD",727.814,727.814,4,23,2,0)
which is DINUMed to the PATIENT file (#2). This data represents the 
"^DD",727.814,727.814,4,23,3,0)
patient DFN.
"^DD",727.814,727.814,4,"DT")
2961018
"^DD",727.814,727.814,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.814,727.814,5,.1)
Social Security Number
"^DD",727.814,727.814,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.814,727.814,5,21,0)
^^1^1^2961022^^^^
"^DD",727.814,727.814,5,21,1,0)
The patient's social security number.
"^DD",727.814,727.814,5,23,0)
^^3^3^2961022^^
"^DD",727.814,727.814,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.814,727.814,5,23,2,0)
in the RADIOLOGY EXTRACT file (#727.814), SSN data is derived from the
"^DD",727.814,727.814,5,23,3,0)
SOCIAL SECURITY NUMBER field (.09) in the PATIENT file (#2).
"^DD",727.814,727.814,5,"DT")
2961004
"^DD",727.814,727.814,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.814,727.814,6,.1)
Name
"^DD",727.814,727.814,6,3)
Your answer must be 4 characters in length.
"^DD",727.814,727.814,6,21,0)
^^1^1^2961022^^^^
"^DD",727.814,727.814,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.814,727.814,6,23,0)
^^4^4^2961022^^
"^DD",727.814,727.814,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.814,727.814,6,23,2,0)
in the RADIOLOGY EXTRACT file (#727.814), NAME data is derived from the
"^DD",727.814,727.814,6,23,3,0)
NAME field (.01) in the PATIENT file (#2). The first four characters of
"^DD",727.814,727.814,6,23,4,0)
the first "," piece are used, padded with trailing spaces if necessary.
"^DD",727.814,727.814,6,"DT")
2961004
"^DD",727.814,727.814,7,0)
IN OUT PATIENT INDICATOR^P40.9'^DIC(40.9,^0;8^Q
"^DD",727.814,727.814,7,.1)
In Out Patient Indicator
"^DD",727.814,727.814,7,3)
Enter the appropriate inpatient or outpatient indicator.
"^DD",727.814,727.814,7,21,0)
^^2^2^2970724^^^^
"^DD",727.814,727.814,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this 
"^DD",727.814,727.814,7,21,2,0)
extract entry.
"^DD",727.814,727.814,7,23,0)
^^4^4^2970724^^^^
"^DD",727.814,727.814,7,23,1,0)
This field is initialized to a 1, indicating an outpatient status. If 
"^DD",727.814,727.814,7,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.814,727.814,7,23,3,0)
patient movement number, then the field is reset to a 3 indicating 
"^DD",727.814,727.814,7,23,4,0)
inpatient status.
"^DD",727.814,727.814,7,"DT")
2961004
"^DD",727.814,727.814,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.814,727.814,8,.1)
Day
"^DD",727.814,727.814,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.814,727.814,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.814,727.814,8,3)
Answer must be 8 characters in length.
"^DD",727.814,727.814,8,21,0)
^^2^2^2970918^^^^
"^DD",727.814,727.814,8,21,1,0)
An 8-character numeric string that represents the date on which the
"^DD",727.814,727.814,8,21,2,0)
Radiology procedure was performed.
"^DD",727.814,727.814,8,23,0)
^^10^10^2970923^^^^
"^DD",727.814,727.814,8,23,1,0)
Data source:
"^DD",727.814,727.814,8,23,2,0)
 
"^DD",727.814,727.814,8,23,3,0)
RAD/NUC MED PATIENT file (#70); REGISTERED EXAMS sub-file (#70.02)
"^DD",727.814,727.814,8,23,4,0)
   EXAM DATE field (#.01)
"^DD",727.814,727.814,8,23,5,0)
 
"^DD",727.814,727.814,8,23,6,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.814,727.814,8,23,7,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.814,727.814,8,23,8,0)
then a default is used.  The default date value is the value of the 
"^DD",727.814,727.814,8,23,9,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.814,727.814,8,23,10,0)
Year 2000 compliant per vendor.
"^DD",727.814,727.814,8,"DT")
2970924
"^DD",727.814,727.814,9,0)
CPT CODE^F^^0;10^K:$L(X)>8!($L(X)<5) X
"^DD",727.814,727.814,9,.1)
CPT Code
"^DD",727.814,727.814,9,3)
Enter CPT Code, "-", and 2 character modifier.
"^DD",727.814,727.814,9,21,0)
^^2^2^2971113^^^^
"^DD",727.814,727.814,9,21,1,0)
The Current Procedural Terminology (CPT) code for the radiology 
"^DD",727.814,727.814,9,21,2,0)
procedure performed.
"^DD",727.814,727.814,9,23,0)
^^5^5^2971113^^^^
"^DD",727.814,727.814,9,23,1,0)
Derived from the CPT CODE field (9) in the RAD/NUC MED PROCEDURES file 
"^DD",727.814,727.814,9,23,2,0)
(#71) for the procedure identified in the RADIOLOGY PROCEDURE field (2) 
"^DD",727.814,727.814,9,23,3,0)
of the EXAMINATIONS multiple (50) of the REGISTERED EXAMS multiple (2) 
"^DD",727.814,727.814,9,23,4,0)
in the RAD/NUC MED PATIENT file (#70). CPT CODE is a pointer to the CPT 
"^DD",727.814,727.814,9,23,5,0)
CODE field (.01) in the CPT file (#81).
"^DD",727.814,727.814,9,"DT")
2961018
"^DD",727.814,727.814,10,0)
PROCEDURE^P71'^RAMIS(71,^0;11^Q
"^DD",727.814,727.814,10,.1)
Procedure
"^DD",727.814,727.814,10,3)
Enter the radiology procedure associated with this case.
"^DD",727.814,727.814,10,21,0)
^^1^1^2971113^^^^
"^DD",727.814,727.814,10,21,1,0)
The radiology procedure associated with this case.
"^DD",727.814,727.814,10,23,0)
^^4^4^2971113^^^^
"^DD",727.814,727.814,10,23,1,0)
Derived from the RADIOLOGY PROCEDURE field (2) within the EXAMINATIONS 
"^DD",727.814,727.814,10,23,2,0)
multiple (50) of the REGISTERED EXAMS multiple (2) of the RAD/NUC MED 
"^DD",727.814,727.814,10,23,3,0)
PATIENT file (#70). This field in a pointer to the RAD/NUC MED
"^DD",727.814,727.814,10,23,4,0)
PROCEDURES file (#71).
"^DD",727.814,727.814,10,"DT")
2961004
"^DD",727.814,727.814,11,0)
IMAGING LOCATION^P79.1'^RA(79.1,^0;12^Q
"^DD",727.814,727.814,11,.1)
Imaging Location
"^DD",727.814,727.814,11,3)
Enter name of the imaging location where this radiology exam was performed.
"^DD",727.814,727.814,11,21,0)
^^1^1^2971113^^^^
"^DD",727.814,727.814,11,21,1,0)
The imaging location where this radiology exam was performed.
"^DD",727.814,727.814,11,23,0)
^^3^3^2971113^^^^
"^DD",727.814,727.814,11,23,1,0)
Derived from the IMAGING LOCATION field (4) within the REGISTERED EXAMS 
"^DD",727.814,727.814,11,23,2,0)
multiple (2) of the RAD/NUC MED PATIENT file (#70). It is a pointer to the 
"^DD",727.814,727.814,11,23,3,0)
IMAGING LOCATIONS file (#79.1).
"^DD",727.814,727.814,11,"DT")
2961004
"^DD",727.814,727.814,12,0)
LOCATION (WARD OR CLINIC)^P44'^SC(^0;13^Q
"^DD",727.814,727.814,12,.1)
Location (Ward or Clinic)
"^DD",727.814,727.814,12,3)
Enter the ward or clinic of the patient at the time of the radiologic exam.
"^DD",727.814,727.814,12,21,0)
^^1^1^2971113^^^^
"^DD",727.814,727.814,12,21,1,0)
The patient's ward or clinic location.
"^DD",727.814,727.814,12,23,0)
^^10^10^2971113^^^^
"^DD",727.814,727.814,12,23,1,0)
Derived from the WARD field (6) within the EXAMINATIONS multiple (50) of 
"^DD",727.814,727.814,12,23,2,0)
the REGISTERED EXAMS multiple (2) of the RAD/NUC MED PATIENT file (#70). 
"^DD",727.814,727.814,12,23,3,0)
Using this WARD LOCATION file (#42) pointer, the data is derived from 
"^DD",727.814,727.814,12,23,4,0)
the HOSPITAL LOCATION FILE POINTER field (44) in the WARD LOCATION file 
"^DD",727.814,727.814,12,23,5,0)
(#42) which is a pointer to the HOSPITAL LOCATION file (#44).
"^DD",727.814,727.814,12,23,6,0)
  
"^DD",727.814,727.814,12,23,7,0)
If the patient is not assigned to a ward, data is derived from the 
"^DD",727.814,727.814,12,23,8,0)
PRINCIPAL CLINIC field (8) within the EXAMINATIONS multiple (50) of the 
"^DD",727.814,727.814,12,23,9,0)
REGISTERED EXAMS multiple (2) of the RAD/NUC MED PATIENT file (#70). 
"^DD",727.814,727.814,12,23,10,0)
PRINCIPAL CLINIC is a pointer to the HOSPITAL LOCATION file (#44).
"^DD",727.814,727.814,12,"DT")
2961004
"^DD",727.814,727.814,13,0)
SERVICE^P49'^DIC(49,^0;14^Q
"^DD",727.814,727.814,13,.1)
Service
"^DD",727.814,727.814,13,3)
Enter the name of the service.
"^DD",727.814,727.814,13,21,0)
^^1^1^2961004^^^^
"^DD",727.814,727.814,13,21,1,0)
Indicates the name of the service treating the patient.
"^DD",727.814,727.814,13,23,0)
^^3^3^2971113^^^^
"^DD",727.814,727.814,13,23,1,0)
Derived from the SERVICE field (7) within the EXAMINATIONS multiple (50) 
"^DD",727.814,727.814,13,23,2,0)
of the REGISTERED EXAMS multiple (2) of the RAD/NUC MED PATIENT file 
"^DD",727.814,727.814,13,23,3,0)
(#70). SERVICE is a pointer to the HOSPITAL SERVICE file (#49).
"^DD",727.814,727.814,13,"DT")
2961004
"^DD",727.814,727.814,14,0)
DIAGNOSTIC CODE^P78.3'^RA(78.3,^0;15^Q
"^DD",727.814,727.814,14,.1)
Diagnostic Code
"^DD",727.814,727.814,14,3)
Enter the diagnostic code associated with this exam.
"^DD",727.814,727.814,14,21,0)
^^1^1^2971113^^^^
"^DD",727.814,727.814,14,21,1,0)
Indicates the diagnostic code associated with this exam.
"^DD",727.814,727.814,14,23,0)
^^4^4^2971113^^^^
"^DD",727.814,727.814,14,23,1,0)
Derived from the PRIMARY DIAGNOSTIC CODE field (13) within the 
"^DD",727.814,727.814,14,23,2,0)
EXAMINATIONS multiple (50) of the REGISTERED EXAMS multiple (2) of 
"^DD",727.814,727.814,14,23,3,0)
the RAD/NUC MED PATIENT file (#70). DIAGNOSTIC CODE is a pointer to 
"^DD",727.814,727.814,14,23,4,0)
the DIAGNOSTIC CODES file (#78.3).
"^DD",727.814,727.814,14,"DT")
2961004
"^DD",727.814,727.814,15,0)
REQUESTING PHYSICIAN^F^^0;16^K:$L(X)>11!($L(X)<1) X
"^DD",727.814,727.814,15,.1)
Requesting Physician
"^DD",727.814,727.814,15,3)
Your answer must be 1 to 11 characters in length.
"^DD",727.814,727.814,15,21,0)
^^1^1^2971113^^^^
"^DD",727.814,727.814,15,21,1,0)
Indicates the person requesting this radiology exam.
"^DD",727.814,727.814,15,23,0)
^^6^6^2971113^^^^
"^DD",727.814,727.814,15,23,1,0)
Derived from the REQUESTING PHYSICIAN field (14) within the EXAMINATIONS 
"^DD",727.814,727.814,15,23,2,0)
multiple (50) of the REGISTERED EXAMS multiple (2) of the RAD/NUC MED 
"^DD",727.814,727.814,15,23,3,0)
PATIENT file (#70). If REQUESTING PHYSICIAN is a pointer to the NEW 
"^DD",727.814,727.814,15,23,4,0)
PERSON file (#200), it is stored as "2"_pointer value. If REQUESTING 
"^DD",727.814,727.814,15,23,5,0)
PHYSICIAN is a pointer to the PROVIDER file (#6), it is stored as 
"^DD",727.814,727.814,15,23,6,0)
"6"_pointer value.
"^DD",727.814,727.814,15,"DT")
2961018
"^DD",727.814,727.814,16,0)
MODIFIERS^F^^0;17^K:$L(X)>15!($L(X)<1) X
"^DD",727.814,727.814,16,.1)
Modifiers
"^DD",727.814,727.814,16,3)
Your answer must be 1 to 15 characters in length.
"^DD",727.814,727.814,16,21,0)
^^1^1^2971113^^^^
"^DD",727.814,727.814,16,21,1,0)
Indicates radiology modifiers associated with this exam.
"^DD",727.814,727.814,16,23,0)
^^5^5^2971113^^^^
"^DD",727.814,727.814,16,23,1,0)
Derived from the MODIFIERS field (.01) within the MODIFIERS multiple 
"^DD",727.814,727.814,16,23,2,0)
(#125) of the EXAMINATIONS multiple (50) within the REGISTERED EXAMS 
"^DD",727.814,727.814,16,23,3,0)
multiple (2) of the RAD/NUC MED PATIENT file (#70). This field consists of 
"^DD",727.814,727.814,16,23,4,0)
a string of pointers to the PROCEDURE MODIFIERS file (#71.2) separated 
"^DD",727.814,727.814,16,23,5,0)
by semi-colons (;).
"^DD",727.814,727.814,16,"DT")
2961022
"^DD",727.814,727.814,17,0)
MOVEMENT FILE #^P405'^DGPM(^0;18^Q
"^DD",727.814,727.814,17,.1)
Movement File Number
"^DD",727.814,727.814,17,3)
Enter the patient movement number associated with this extract record.
"^DD",727.814,727.814,17,21,0)
^^1^1^2961004^^
"^DD",727.814,727.814,17,21,1,0)
Current patient movement record associated with this extract record.
"^DD",727.814,727.814,17,23,0)
^^4^4^2961004^^
"^DD",727.814,727.814,17,23,1,0)
A call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.814,727.814,17,23,2,0)
patient movement number (indicating inpatient status). This field is set 
"^DD",727.814,727.814,17,23,3,0)
to the value of VAIP(1), which is a pointer to the PATIENT MOVEMENT file 
"^DD",727.814,727.814,17,23,4,0)
(#405).
"^DD",727.814,727.814,17,"DT")
2961004
"^DD",727.814,727.814,18,0)
TREATING SPECIALTY^P42.4'^DIC(42.4,^0;19^Q
"^DD",727.814,727.814,18,.1)
Treating Specialty
"^DD",727.814,727.814,18,3)
Enter the name of the treating specialty associated with this extract record.
"^DD",727.814,727.814,18,21,0)
^^1^1^2961004^^
"^DD",727.814,727.814,18,21,1,0)
The name of the treating specialty associated with this extract record.
"^DD",727.814,727.814,18,23,0)
^^6^6^2961004^^^
"^DD",727.814,727.814,18,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.814,727.814,18,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.814,727.814,18,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.814,727.814,18,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.814,727.814,18,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.814,727.814,18,23,6,0)
SPECIALTY file (#42.4).
"^DD",727.814,727.814,18,"DT")
2961004
"^DD",727.814,727.814,19,0)
TIME^FO^^0;20^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.814,727.814,19,.1)
Time
"^DD",727.814,727.814,19,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.814,727.814,19,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.814,727.814,19,3)
Answer must be 6 characters in length.
"^DD",727.814,727.814,19,21,0)
^^2^2^2971113^^^^
"^DD",727.814,727.814,19,21,1,0)
A 6-character numeric string that represents the time of day when
"^DD",727.814,727.814,19,21,2,0)
this Radiology procedure was performed.
"^DD",727.814,727.814,19,23,0)
^^7^7^2971113^^^^
"^DD",727.814,727.814,19,23,1,0)
Data source:
"^DD",727.814,727.814,19,23,2,0)
 
"^DD",727.814,727.814,19,23,3,0)
RAD/NUC MED PATIENT file (#70); REGISTERED EXAMS sub-file (#70.02)
"^DD",727.814,727.814,19,23,4,0)
   EXAM DATE field (#.01)
"^DD",727.814,727.814,19,23,5,0)
 
"^DD",727.814,727.814,19,23,6,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.814,727.814,19,23,7,0)
cannot be determined, then "000300" is used as default.
"^DD",727.814,727.814,19,"DT")
2970924
"^DD",727.814,727.814,20,0)
IMAGING TYPE^P79.2'^RA(79.2,^0;21^Q
"^DD",727.814,727.814,20,.1)
Imaging Type
"^DD",727.814,727.814,20,3)
Enter the type of imaging used for this radiology exam.
"^DD",727.814,727.814,20,21,0)
^^1^1^2971113^^^^
"^DD",727.814,727.814,20,21,1,0)
The type of imaging used for this radiology exam.
"^DD",727.814,727.814,20,23,0)
^^3^3^2971113^^^^
"^DD",727.814,727.814,20,23,1,0)
Derived from the TYPE OF IMAGING field (2) within the REGISTERED EXAMS 
"^DD",727.814,727.814,20,23,2,0)
multiple (2) of the RAD/NUC MED PATIENT file (#70). It is a pointer to the 
"^DD",727.814,727.814,20,23,3,0)
IMAGING TYPE file (#79.2).
"^DD",727.814,727.814,20,"DT")
2961004
"^DD",727.814,727.814,21,0)
PRIMARY CARE TEAM^F^^0;22^K:$L(X)>4!($L(X)<1) X
"^DD",727.814,727.814,21,.1)
Primary Care Team
"^DD",727.814,727.814,21,3)
Enter primary care team assigned to this patient.
"^DD",727.814,727.814,21,21,0)
^^1^1^2961031^^^
"^DD",727.814,727.814,21,21,1,0)
The primary care team assigned to this patient.
"^DD",727.814,727.814,21,23,0)
^^6^6^2971113^^^
"^DD",727.814,727.814,21,23,1,0)
Using the EXAM DATE field (.01) within the REGISTERED EXAMS multiple 
"^DD",727.814,727.814,21,23,2,0)
(2) of the RAD/NUC MED PATIENT file (#70) and the patient pointer (DFN) 
"^DD",727.814,727.814,21,23,3,0)
stored in the PATIENT NO. - DFN field (4) in the RADIOLOGY EXTRACT file 
"^DD",727.814,727.814,21,23,4,0)
(#727.814), a call is made to the Scheduling API, OUTPTTM^SDUTL3. The 
"^DD",727.814,727.814,21,23,5,0)
API returns the team's internal entry number and name from the TEAM file 
"^DD",727.814,727.814,21,23,6,0)
(#404.51). Only the pointer (IEN) to File 404.51 is transmitted.
"^DD",727.814,727.814,21,"DT")
2961031
"^DD",727.814,727.814,22,0)
PRIMARY CARE PROVIDER^F^^0;23^K:$L(X)>11!($L(X)<1) X
"^DD",727.814,727.814,22,.1)
Primary Care Provider
"^DD",727.814,727.814,22,3)
Enter primary care provider assigned to this patient.
"^DD",727.814,727.814,22,21,0)
^^1^1^2961031^^
"^DD",727.814,727.814,22,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.814,727.814,22,23,0)
^^6^6^2971113^^
"^DD",727.814,727.814,22,23,1,0)
Using the EXAM DATE field (.01) within the REGISTERED EXAMS multiple 
"^DD",727.814,727.814,22,23,2,0)
(2) of the RAD/NUC MED PATIENT file (#70) and the patient pointer (DFN) 
"^DD",727.814,727.814,22,23,3,0)
stored in the PATIENT NO. - DFN field (4) in the RADIOLOGY EXTRACT file 
"^DD",727.814,727.814,22,23,4,0)
(#727.814), a call is made to the Scheduling API, OUTPTPR^SDUTL3. The 
"^DD",727.814,727.814,22,23,5,0)
API returns the provider's internal entry number and name from the NEW 
"^DD",727.814,727.814,22,23,6,0)
PERSON file (#200). Only the pointer (IEN) to File 200 is transmitted.
"^DD",727.814,727.814,22,"DT")
2961018
"^DD",727.815,727.815,0)
FIELD^^9^33
"^DD",727.815,727.815,0,"DDA")
N
"^DD",727.815,727.815,0,"DIK")
ECX815
"^DD",727.815,727.815,0,"DIKOLD")
ECX815
"^DD",727.815,727.815,0,"DT")
2971030
"^DD",727.815,727.815,0,"IX","AC",727.815,2)

"^DD",727.815,727.815,0,"IX","AINV",727.815,.01)

"^DD",727.815,727.815,0,"NM","EVENT CAPTURE LOCAL EXTRACT")

"^DD",727.815,727.815,0,"VRPK")
DSS EXTRACTS
"^DD",727.815,727.815,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.815,727.815,.01,.1)
Sequence Number
"^DD",727.815,727.815,.01,1,0)
^.1
"^DD",727.815,727.815,.01,1,1,0)
727.815^AINV^MUMPS
"^DD",727.815,727.815,.01,1,1,1)
S ^ECX(727.815,"AINV",-X,DA)=""
"^DD",727.815,727.815,.01,1,1,2)
K ^ECX(727.815,"AINV",-X,DA)
"^DD",727.815,727.815,.01,1,1,3)
DO NOT DELETE
"^DD",727.815,727.815,.01,1,1,"%D",0)
^^3^3^2960401^^
"^DD",727.815,727.815,.01,1,1,"%D",1,0)
This is an inverse entry cross reference. It is used to find the
"^DD",727.815,727.815,.01,1,1,"%D",2,0)
last entry in the file. It is essential for the management of the
"^DD",727.815,727.815,.01,1,1,"%D",3,0)
extract and the purge of extract data.  DO NOT DELETE.
"^DD",727.815,727.815,.01,1,1,"DT")
2921016
"^DD",727.815,727.815,.01,3)
Type a Number between 1 and 999999999, 0 Decimal Digits
"^DD",727.815,727.815,.01,21,0)
^^1^1^2960401^^^^
"^DD",727.815,727.815,.01,21,1,0)
The record number for this extract entry.
"^DD",727.815,727.815,.01,23,0)
^^2^2^2960401^^^^
"^DD",727.815,727.815,.01,23,1,0)
The internal entry number (IEN) for this record.
"^DD",727.815,727.815,.01,23,2,0)
This entry is DINUMed.
"^DD",727.815,727.815,.01,"DT")
2921016
"^DD",727.815,727.815,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.815,727.815,1,.1)
Year/Month
"^DD",727.815,727.815,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.815,727.815,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.815,727.815,1,3)
Answer must be 6 characters in length.
"^DD",727.815,727.815,1,21,0)
^^2^2^2970922^^^^
"^DD",727.815,727.815,1,21,1,0)
A six character string representing the year and the month
"^DD",727.815,727.815,1,21,2,0)
for which this extract was performed.
"^DD",727.815,727.815,1,23,0)
^^1^1^2970922^^^^
"^DD",727.815,727.815,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.815,727.815,1,"DT")
2970924
"^DD",727.815,727.815,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.815,727.815,2,.1)
Extract Number
"^DD",727.815,727.815,2,1,0)
^.1
"^DD",727.815,727.815,2,1,1,0)
727.815^AC
"^DD",727.815,727.815,2,1,1,1)
S ^ECX(727.815,"AC",$E(X,1,30),DA)=""
"^DD",727.815,727.815,2,1,1,2)
K ^ECX(727.815,"AC",$E(X,1,30),DA)
"^DD",727.815,727.815,2,1,1,3)
DO NOT DELETE
"^DD",727.815,727.815,2,1,1,"%D",0)
^^2^2^2960401^
"^DD",727.815,727.815,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data
"^DD",727.815,727.815,2,1,1,"%D",2,0)
in this file.
"^DD",727.815,727.815,2,1,1,"DT")
2910802
"^DD",727.815,727.815,2,3)
Enter the extract number for this extract.
"^DD",727.815,727.815,2,21,0)
^^1^1^2970603^^^^
"^DD",727.815,727.815,2,21,1,0)
The DSS extract log entry for this Event Capture extract.
"^DD",727.815,727.815,2,23,0)
^^2^2^2970603^^^^
"^DD",727.815,727.815,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose
"^DD",727.815,727.815,2,23,2,0)
is to pick up the header for the mail message.
"^DD",727.815,727.815,2,"DT")
2950317
"^DD",727.815,727.815,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.815,727.815,3,.1)
Facility
"^DD",727.815,727.815,3,3)
Enter the station number where this extract was performed.
"^DD",727.815,727.815,3,21,0)
1^^1^1^2960401^^^
"^DD",727.815,727.815,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.815,727.815,3,23,0)
^^3^3^2960401^^^^
"^DD",727.815,727.815,3,23,1,0)
A free text field that represents the STATION NUMBER field (99)
"^DD",727.815,727.815,3,23,2,0)
from the INSTITUTION file (#4). It is derived from the LOCATION
"^DD",727.815,727.815,3,23,3,0)
field (3) in the EVENT CAPTURE PATIENT file (#721).
"^DD",727.815,727.815,3,"DT")
2951204
"^DD",727.815,727.815,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.815,727.815,4,.1)
Patient No. - DFN
"^DD",727.815,727.815,4,3)
Enter the name of the patient for this extract record.
"^DD",727.815,727.815,4,21,0)
1^^1^1^2960401^^
"^DD",727.815,727.815,4,21,1,0)
The name of the patient for this extract record.
"^DD",727.815,727.815,4,23,0)
^^3^3^2960401^^^^
"^DD",727.815,727.815,4,23,1,0)
A pointer to the PATIENT file (#2). This patient pointer is
"^DD",727.815,727.815,4,23,2,0)
pulled from the PATIENT field (1) in the EVENT CAPTURE
"^DD",727.815,727.815,4,23,3,0)
PATIENT file (#721).
"^DD",727.815,727.815,4,"DT")
2971030
"^DD",727.815,727.815,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.815,727.815,5,.1)
Social Security Number
"^DD",727.815,727.815,5,3)
Enter the social security number for this patient's extract record.
"^DD",727.815,727.815,5,21,0)
^^2^2^2960401^^^^
"^DD",727.815,727.815,5,21,1,0)
The social security number (SSN) for the patient associated
"^DD",727.815,727.815,5,21,2,0)
with this extract record.
"^DD",727.815,727.815,5,23,0)
^^2^2^2960401^^^^
"^DD",727.815,727.815,5,23,1,0)
The social security number extracted from the SSN field (.09)
"^DD",727.815,727.815,5,23,2,0)
from the PATIENT file (#2).
"^DD",727.815,727.815,5,"DT")
2910802
"^DD",727.815,727.815,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.815,727.815,6,.1)
Name
"^DD",727.815,727.815,6,3)
Enter the first four characters of this patients last name.
"^DD",727.815,727.815,6,21,0)
^^2^2^2960401^^^^
"^DD",727.815,727.815,6,21,1,0)
The first four characters of the patient's last name associated
"^DD",727.815,727.815,6,21,2,0)
with this extract record.
"^DD",727.815,727.815,6,23,0)
^^4^4^2960401^^^
"^DD",727.815,727.815,6,23,1,0)
Free text first four characters of the patients last name.
"^DD",727.815,727.815,6,23,2,0)
This is extracted from the patient's name stored in the
"^DD",727.815,727.815,6,23,3,0)
NAME field (.01) in the PATIENT file (#2). If necessary,
"^DD",727.815,727.815,6,23,4,0)
trailing spaces are padded to equal 4 characters.
"^DD",727.815,727.815,6,"DT")
2910802
"^DD",727.815,727.815,7,0)
IN OUT PATIENT INDICATOR^P40.9'^DIC(40.9,^0;8^Q
"^DD",727.815,727.815,7,.1)
In Out Patient Indicator
"^DD",727.815,727.815,7,3)
Enter 1 for outpatient or 3 for inpatient.
"^DD",727.815,727.815,7,21,0)
^^2^2^2960401^^^^
"^DD",727.815,727.815,7,21,1,0)
This indicates whether this patient was an inpatient or an 
"^DD",727.815,727.815,7,21,2,0)
outpatient for this extract record.
"^DD",727.815,727.815,7,23,0)
^^3^3^2960401^^^^
"^DD",727.815,727.815,7,23,1,0)
A pointer to the LOCATION TYPE file (#40.9).
"^DD",727.815,727.815,7,23,2,0)
This field will be a 3 if the patient was listed as an inpatient
"^DD",727.815,727.815,7,23,3,0)
for this record. The field will be a 1 if listed as an outpatient.
"^DD",727.815,727.815,7,"DT")
2910802
"^DD",727.815,727.815,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.815,727.815,8,.1)
Day
"^DD",727.815,727.815,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.815,727.815,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.815,727.815,8,3)
Answer must be 8 characters in length.
"^DD",727.815,727.815,8,21,0)
^^3^3^2970922^^^^
"^DD",727.815,727.815,8,21,1,0)
This 8-character string represents the date on which the procedure
"^DD",727.815,727.815,8,21,2,0)
associated with this Event Capture Patient extract record
"^DD",727.815,727.815,8,21,3,0)
was performed.
"^DD",727.815,727.815,8,23,0)
^^9^9^2970923^^^^
"^DD",727.815,727.815,8,23,1,0)
The day when this event occurred. Date is pulled from the
"^DD",727.815,727.815,8,23,2,0)
DATE/TIME OF PROCEDURE field (2) in the EVENT CAPTURE
"^DD",727.815,727.815,8,23,3,0)
PATIENT file (#721). 
"^DD",727.815,727.815,8,23,4,0)
 
"^DD",727.815,727.815,8,23,5,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.815,727.815,8,23,6,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.815,727.815,8,23,7,0)
then a default is used.  The default date value is the value of the 
"^DD",727.815,727.815,8,23,8,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.815,727.815,8,23,9,0)
Year 2000 compliant per vendor.
"^DD",727.815,727.815,8,"DT")
2970924
"^DD",727.815,727.815,9,0)
DSS UNIT^P724'^ECD(^0;10^Q
"^DD",727.815,727.815,9,.1)
DSS Unit
"^DD",727.815,727.815,9,3)
Enter the name of the DSS unit for this extract record.
"^DD",727.815,727.815,9,21,0)
^^1^1^2960401^^
"^DD",727.815,727.815,9,21,1,0)
This is the name of the DSS unit for this extract record.
"^DD",727.815,727.815,9,23,0)
^^3^3^2960401^^^^
"^DD",727.815,727.815,9,23,1,0)
A pointer to the DSS UNIT file (#724). DSS unit pointer
"^DD",727.815,727.815,9,23,2,0)
is pulled from the DSS UNIT field (6) in the EVENT CAPTURE
"^DD",727.815,727.815,9,23,3,0)
PATIENT file (#721).
"^DD",727.815,727.815,9,"DT")
2910828
"^DD",727.815,727.815,10,0)
CATEGORY^F^^0;11^K:$L(X)>6!($L(X)<1) X
"^DD",727.815,727.815,10,.1)
Category
"^DD",727.815,727.815,10,3)
Answer must be 1-6 characters in length.
"^DD",727.815,727.815,10,21,0)
1^^2^2^2970911^^^
"^DD",727.815,727.815,10,21,1,0)
This field contains the IEN in file #726 for the Category associated
"^DD",727.815,727.815,10,21,2,0)
with this extract record.
"^DD",727.815,727.815,10,23,0)
^^4^4^2970911^^^^
"^DD",727.815,727.815,10,23,1,0)
A character string which represents the IEN of the Category
"^DD",727.815,727.815,10,23,2,0)
in the EVENT CAPTURE CATEGORY file (#726).
"^DD",727.815,727.815,10,23,3,0)
Category is pulled from the CATEGORY field (7) in the
"^DD",727.815,727.815,10,23,4,0)
EVENT CAPTURE PATIENT file (#721).
"^DD",727.815,727.815,10,"DT")
2970911
"^DD",727.815,727.815,11,0)
PROCEDURE^F^^0;12^K:$L(X)>8!($L(X)<5) X
"^DD",727.815,727.815,11,.1)
Procedure
"^DD",727.815,727.815,11,3)
Answer must be 5-8 characters in length.
"^DD",727.815,727.815,11,21,0)
1^^2^2^2971030^^^^
"^DD",727.815,727.815,11,21,1,0)
This field contains the name of the procedure selected
"^DD",727.815,727.815,11,21,2,0)
for this extract record.
"^DD",727.815,727.815,11,23,0)
^^7^7^2971030^^^^
"^DD",727.815,727.815,11,23,1,0)
The procedure pointer is pulled from the PROCEDURE field (8)
"^DD",727.815,727.815,11,23,2,0)
in the EVENT CAPTURE PATIENT file (#721). It is the CPT
"^DD",727.815,727.815,11,23,3,0)
code for procedures from the CPT file (#81). For national
"^DD",727.815,727.815,11,23,4,0)
procedures from the EC NATIONAL PROCEDURE file (#725),
"^DD",727.815,727.815,11,23,5,0)
it is the NATIONAL NUMBER field (1)_"N". For local procedures
"^DD",727.815,727.815,11,23,6,0)
from the EC NATIONAL PROCEDURE file (#725), it is the NATIONAL
"^DD",727.815,727.815,11,23,7,0)
NUMBER field (1)_"L".
"^DD",727.815,727.815,11,"DT")
2971030
"^DD",727.815,727.815,12,0)
VOLUME^NJ4,0^^0;13^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.815,727.815,12,.1)
Volume
"^DD",727.815,727.815,12,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",727.815,727.815,12,21,0)
^^1^1^2960401^^
"^DD",727.815,727.815,12,21,1,0)
This field tracks the volume of this specific procedure performed.
"^DD",727.815,727.815,12,23,0)
^^3^3^2960401^^
"^DD",727.815,727.815,12,23,1,0)
Numeric volume for this procedure associated with this extract
"^DD",727.815,727.815,12,23,2,0)
record. Volume is pulled from the VOLUME field (9) in the
"^DD",727.815,727.815,12,23,3,0)
EVENT CAPTURE PATIENT file (#721).
"^DD",727.815,727.815,12,"DT")
2911108
"^DD",727.815,727.815,13,0)
COST CENTER^F^^0;14^K:$L(X)>8!($L(X)<6) X
"^DD",727.815,727.815,13,.1)
Cost Center
"^DD",727.815,727.815,13,3)
Enter the cost center associated with this extract record.
"^DD",727.815,727.815,13,21,0)
^^1^1^2960401^^
"^DD",727.815,727.815,13,21,1,0)
This is the cost center associated with this extract record.
"^DD",727.815,727.815,13,23,0)
^^3^3^2960401^^
"^DD",727.815,727.815,13,23,1,0)
A pointer to the COST CENTER file (#420.1). Cost center
"^DD",727.815,727.815,13,23,2,0)
is derived from the COST CENTER field (3) in the DSS UNIT
"^DD",727.815,727.815,13,23,3,0)
file (#724).
"^DD",727.815,727.815,13,"DT")
2951204
"^DD",727.815,727.815,14,0)
ORDERING SECTION^F^^0;15^K:$L(X)>6!($L(X)<1) X
"^DD",727.815,727.815,14,.1)
Ordering Section
"^DD",727.815,727.815,14,3)
Answer must be 1-6 characters in length.
"^DD",727.815,727.815,14,21,0)
^^2^2^2970912^^^^
"^DD",727.815,727.815,14,21,1,0)
This is the IEN in file #723 of the Ordering Section associated with
"^DD",727.815,727.815,14,21,2,0)
this extract record.
"^DD",727.815,727.815,14,23,0)
^^4^4^2970912^^^^
"^DD",727.815,727.815,14,23,1,0)
This character string represents the IEN of the Ordering Section
"^DD",727.815,727.815,14,23,2,0)
in the MEDICAL SPECIALTY file (#723).
"^DD",727.815,727.815,14,23,3,0)
The Ordering Section is pulled from the ORDERING SECTION field (#11) 
"^DD",727.815,727.815,14,23,4,0)
in the EVENT CAPTURE PATIENT file (#721).
"^DD",727.815,727.815,14,"DT")
2970911
"^DD",727.815,727.815,15,0)
SECTION^F^^0;16^K:$L(X)>6!($L(X)<1) X
"^DD",727.815,727.815,15,.1)
Section
"^DD",727.815,727.815,15,3)
Answer must be 1-6 characters in length.
"^DD",727.815,727.815,15,21,0)
^^2^2^2970912^^^^
"^DD",727.815,727.815,15,21,1,0)
This is the IEN in file #723 of the Medical Specialty of the DSS Unit 
"^DD",727.815,727.815,15,21,2,0)
associated with this extract record.
"^DD",727.815,727.815,15,23,0)
^^4^4^2970912^^^^
"^DD",727.815,727.815,15,23,1,0)
This character string represents an IEN in the MEDICAL
"^DD",727.815,727.815,15,23,2,0)
SPECIALTY file (#723).
"^DD",727.815,727.815,15,23,3,0)
The data is pulled from the SECTION field (#5) in the EVENT
"^DD",727.815,727.815,15,23,4,0)
CAPTURE PATIENT file (#721).
"^DD",727.815,727.815,15,"DT")
2970911
"^DD",727.815,727.815,16,0)
PROVIDER^F^^0;17^K:$L(X)>10!($L(X)<2) X
"^DD",727.815,727.815,16,.1)
Provider
"^DD",727.815,727.815,16,3)
Answer must be 2-10 characters in length.
"^DD",727.815,727.815,16,21,0)
^^4^4^2970912^^^^
"^DD",727.815,727.815,16,21,1,0)
This character string is an IEN for the NEW PERSON file (#200);
"^DD",727.815,727.815,16,21,2,0)
a '2' has been appended to the beginning of the character string.
"^DD",727.815,727.815,16,21,3,0)
It represents the Provider who performed the procedure associated
"^DD",727.815,727.815,16,21,4,0)
with the Event Capture Patient record.
"^DD",727.815,727.815,16,23,0)
^^4^4^2970912^^^^
"^DD",727.815,727.815,16,23,1,0)
A character string of format "2"_IEN, where IEN is the internal 
"^DD",727.815,727.815,16,23,2,0)
entry number for the Provider in the NEW PERSON file (#200).
"^DD",727.815,727.815,16,23,3,0)
Data is derived from the PROVIDER field (#10) in the EVENT CAPTURE 
"^DD",727.815,727.815,16,23,4,0)
PATIENT file (#721).
"^DD",727.815,727.815,16,"DT")
2971030
"^DD",727.815,727.815,18,0)
PROVIDER #2^F^^0;19^K:$L(X)>10!($L(X)<2) X
"^DD",727.815,727.815,18,.1)
Provider #2
"^DD",727.815,727.815,18,3)
Answer must be 2-10 characters in length.
"^DD",727.815,727.815,18,21,0)
^^4^4^2971030^^^^
"^DD",727.815,727.815,18,21,1,0)
This character string is an IEN for the NEW PERSON file (#200);
"^DD",727.815,727.815,18,21,2,0)
a '2' has been appended to the beginning of the character string.
"^DD",727.815,727.815,18,21,3,0)
It represents the assisting Provider who performed the procedure 
"^DD",727.815,727.815,18,21,4,0)
associated with the Event Capture Patient record.
"^DD",727.815,727.815,18,23,0)
^^4^4^2971030^^^^
"^DD",727.815,727.815,18,23,1,0)
A character string of format "2"_IEN, where IEN is the internal 
"^DD",727.815,727.815,18,23,2,0)
entry number for the Provider in the NEW PERSON file (#200).
"^DD",727.815,727.815,18,23,3,0)
Data is pulled from the PROVIDER #2 field (#16) in the EVENT CAPTURE
"^DD",727.815,727.815,18,23,4,0)
PATIENT file (#721).
"^DD",727.815,727.815,18,"DT")
2971030
"^DD",727.815,727.815,20,0)
PROVIDER #3^F^^0;21^K:$L(X)>10!($L(X)<2) X
"^DD",727.815,727.815,20,.1)
Provider #3
"^DD",727.815,727.815,20,3)
Answer must be 2-10 characters in length.
"^DD",727.815,727.815,20,21,0)
1^^4^4^2970912^^^^
"^DD",727.815,727.815,20,21,1,0)
This character string is an IEN for the NEW PERSON file (#200);
"^DD",727.815,727.815,20,21,2,0)
a '2' has been appended to the beginning of the character string.
"^DD",727.815,727.815,20,21,3,0)
It represents an assisting Provider who performed the procedure 
"^DD",727.815,727.815,20,21,4,0)
associated with the Event Capture Patient record.
"^DD",727.815,727.815,20,23,0)
^^4^4^2970912^^^^
"^DD",727.815,727.815,20,23,1,0)
A character string of format "2"_IEN, where IEN is the internal 
"^DD",727.815,727.815,20,23,2,0)
entry number for the Provider in the NEW PERSON file (#200).
"^DD",727.815,727.815,20,23,3,0)
Data is pulled from the PROVIDER #3 field (#17) in the EVENT CAPTURE
"^DD",727.815,727.815,20,23,4,0)
PATIENT file (#721).
"^DD",727.815,727.815,20,"DT")
2910828
"^DD",727.815,727.815,24,0)
MOVEMENT FILE #^P405'^DGPM(^0;24^Q
"^DD",727.815,727.815,24,.1)
Movement File Number
"^DD",727.815,727.815,24,3)
Enter the patient movement number associated with this extract record.
"^DD",727.815,727.815,24,21,0)
^^1^1^2960401^^^^
"^DD",727.815,727.815,24,21,1,0)
Current patient movement record associated with this extract record.
"^DD",727.815,727.815,24,23,0)
^^1^1^2960401^^^^
"^DD",727.815,727.815,24,23,1,0)
A pointer to the PATIENT MOVEMENT file (#405).
"^DD",727.815,727.815,24,"DT")
2911216
"^DD",727.815,727.815,25,0)
TREATING SPECIALTY^F^^0;25^K:$L(X)>6!($L(X)<1) X
"^DD",727.815,727.815,25,.1)
Treating Specialty
"^DD",727.815,727.815,25,3)
Answer must be 1-6 characters in length.
"^DD",727.815,727.815,25,21,0)
^^3^3^2970912^^^^
"^DD",727.815,727.815,25,21,1,0)
The IEN in file #42.4 of the Specialty associated with the patient
"^DD",727.815,727.815,25,21,2,0)
on the date of the Event Capture procedure.  Only applicable
"^DD",727.815,727.815,25,21,3,0)
if the patient was an inpatient on the date of the procedure.
"^DD",727.815,727.815,25,23,0)
^^8^8^2970912^^^^
"^DD",727.815,727.815,25,23,1,0)
A character string which represents an IEN in the SPECIALTY file (#42.4).
"^DD",727.815,727.815,25,23,2,0)
 
"^DD",727.815,727.815,25,23,3,0)
This field is initialized to a null, indicating an outpatient status. If
"^DD",727.815,727.815,25,23,4,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a
"^DD",727.815,727.815,25,23,5,0)
patient movement number (indicating inpatient status), then the value of
"^DD",727.815,727.815,25,23,6,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.815,727.815,25,23,7,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.815,727.815,25,23,8,0)
SPECIALTY file (#42.4).
"^DD",727.815,727.815,25,"DT")
2970911
"^DD",727.815,727.815,26,0)
TIME^FO^^0;26^K:$L(X)>6!($L(X)<6) X
"^DD",727.815,727.815,26,.1)
Time
"^DD",727.815,727.815,26,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.815,727.815,26,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.815,727.815,26,3)
Answer must be 6 characters in length.
"^DD",727.815,727.815,26,21,0)
^^1^1^2970922^^^^
"^DD",727.815,727.815,26,21,1,0)
The time when the Event Capture procedure was performed.
"^DD",727.815,727.815,26,23,0)
^^9^9^2970922^^^^
"^DD",727.815,727.815,26,23,1,0)
A six-character string of format HHMMSS which represents the time
"^DD",727.815,727.815,26,23,2,0)
(military time) when the procedure was performed.
"^DD",727.815,727.815,26,23,3,0)
 
"^DD",727.815,727.815,26,23,4,0)
Time is extracted from the date information pulled from the
"^DD",727.815,727.815,26,23,5,0)
DATE/TIME OF PROCEDURE field (#2) in the EVENT CAPTURE
"^DD",727.815,727.815,26,23,6,0)
PATIENT file (#721). 
"^DD",727.815,727.815,26,23,7,0)
 
"^DD",727.815,727.815,26,23,8,0)
A default of "000300" will be used if field #2 of file #721 does
"^DD",727.815,727.815,26,23,9,0)
not have a time portion.
"^DD",727.815,727.815,26,"DT")
2970924
"^DD",727.815,727.815,27,0)
PRIMARY CARE TEAM^F^^0;27^K:$L(X)>4!($L(X)<1) X
"^DD",727.815,727.815,27,.1)
Primary Care Team
"^DD",727.815,727.815,27,3)
Enter primary care team assigned to this patient.
"^DD",727.815,727.815,27,21,0)
^^1^1^2961106^^^
"^DD",727.815,727.815,27,21,1,0)
The primary care team assigned to this patient.
"^DD",727.815,727.815,27,23,0)
^^6^6^2961106^
"^DD",727.815,727.815,27,23,1,0)
Using the DATE/TIME OF PROCEDURE field (2) from the EVENT CAPTURE 
"^DD",727.815,727.815,27,23,2,0)
PATIENT file (#721) and the patient pointer (DFN) stored in the PATIENT 
"^DD",727.815,727.815,27,23,3,0)
NO. - DFN field (4) in the EVENT CAPTURE LOCAL EXTRACT file (#727.815), 
"^DD",727.815,727.815,27,23,4,0)
a call is made to the Scheduling API, OUTPTTM^SDUTL3. The API returns 
"^DD",727.815,727.815,27,23,5,0)
the team's internal entry number and name from the TEAM file (#404.51). 
"^DD",727.815,727.815,27,23,6,0)
Only the pointer (IEN) to File 404.51 is transmitted.
"^DD",727.815,727.815,27,"DT")
2961106
"^DD",727.815,727.815,28,0)
PRIMARY CARE PROVIDER^F^^0;28^K:$L(X)>11!($L(X)<1) X
"^DD",727.815,727.815,28,.1)
Primary Care Provider
"^DD",727.815,727.815,28,3)
Enter primary care provider assigned to this patient.
"^DD",727.815,727.815,28,21,0)
^^1^1^2961106^^
"^DD",727.815,727.815,28,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.815,727.815,28,23,0)
^^6^6^2961106^
"^DD",727.815,727.815,28,23,1,0)
Using the DATE/TIME OF PROCEDURE field (2) from the EVENT CAPTURE 
"^DD",727.815,727.815,28,23,2,0)
PATIENT file (#721) and the patient pointer (DFN) stored in the PATIENT 
"^DD",727.815,727.815,28,23,3,0)
NO. - DFN field (4) in the EVENT CAPTURE LOCAL EXTRACT file (#727.815), 
"^DD",727.815,727.815,28,23,4,0)
a call is made to the Scheduling API, OUTPTPR^SDUTL3. The API returns 
"^DD",727.815,727.815,28,23,5,0)
the provider's internal entry number and name from the NEW PERSON file 
"^DD",727.815,727.815,28,23,6,0)
(#200). Only the pointer (IEN) to File 200 is transmitted.
"^DD",727.815,727.815,28,"DT")
2961017
"^DD",727.815,727.815,29,0)
PCE CPT CODE^F^^0;29^K:$L(X)>8!($L(X)<5) X
"^DD",727.815,727.815,29,.1)
Patient Care Encounter CPT Code
"^DD",727.815,727.815,29,3)
Enter the PCE CPT code for this record.
"^DD",727.815,727.815,29,21,0)
^^2^2^2961119^^^
"^DD",727.815,727.815,29,21,1,0)
The Current Procedural Terminology (CPT) code for the procedure 
"^DD",727.815,727.815,29,21,2,0)
performed.
"^DD",727.815,727.815,29,23,0)
^^2^2^2961119^^
"^DD",727.815,727.815,29,23,1,0)
PCE CPT CODE is derived from the PCE CPT CODE field (19) in the EVENT 
"^DD",727.815,727.815,29,23,2,0)
CAPTURE PATIENT file (#721).
"^DD",727.815,727.815,29,"DT")
2961023
"^DD",727.815,727.815,30,0)
ICD-9 CODE^F^^0;30^K:$L(X)>7!($L(X)<1) X
"^DD",727.815,727.815,30,.1)
ICD-9 Code
"^DD",727.815,727.815,30,3)
Enter the ICD-9 code for this record.
"^DD",727.815,727.815,30,21,0)
^^1^1^2961119^^^^
"^DD",727.815,727.815,30,21,1,0)
The ICD-9 for the procedure performed.
"^DD",727.815,727.815,30,23,0)
^^3^3^2961119^^
"^DD",727.815,727.815,30,23,1,0)
ICD-9 CODE is derived from the ICD-9 CODE field (20) in the EVENT 
"^DD",727.815,727.815,30,23,2,0)
CAPTURE PATIENT file (#721) which points to the ICD DIAGNOSIS file 
"^DD",727.815,727.815,30,23,3,0)
(#80).
"^DD",727.815,727.815,30,"DT")
2961106
"^DD",727.815,727.815,31,0)
AGENT ORANGE^S^Y:YES;N:NO;U:UNKNOWN;^0;31^Q
"^DD",727.815,727.815,31,.1)
Agent Orange
"^DD",727.815,727.815,31,3)
Select the appropriate agent orange status for this patient.
"^DD",727.815,727.815,31,21,0)
^^2^2^2961119^^^^
"^DD",727.815,727.815,31,21,1,0)
Data is Y if this patient was exposed to agent orange, N if not, 
"^DD",727.815,727.815,31,21,2,0)
or U if unknown.
"^DD",727.815,727.815,31,23,0)
^^2^2^2961119^^^^
"^DD",727.815,727.815,31,23,1,0)
AGENT ORANGE data is derived from the AGENT ORANGE field (21) in the 
"^DD",727.815,727.815,31,23,2,0)
EVENT CAPTURE PATIENT file (#721).
"^DD",727.815,727.815,31,"DT")
2961017
"^DD",727.815,727.815,32,0)
RADIATION EXPOSURE^S^Y:YES;N:NO;U:UNKNOWN;^0;32^Q
"^DD",727.815,727.815,32,.1)
Radiation Exposure
"^DD",727.815,727.815,32,3)
Select the appropriate radiation status for this patient.
"^DD",727.815,727.815,32,21,0)
^^2^2^2961119^^^^
"^DD",727.815,727.815,32,21,1,0)
Data is Y if this patient claims exposure to ionizing radiation, 
"^DD",727.815,727.815,32,21,2,0)
N if not, or U if unknown.
"^DD",727.815,727.815,32,23,0)
^^2^2^2961119^^^^
"^DD",727.815,727.815,32,23,1,0)
RADIATION EXPOSURE data is derived from the RADIATION EXPOSURE field 
"^DD",727.815,727.815,32,23,2,0)
(22) in the EVENT CAPTURE PATIENT file (#721).
"^DD",727.815,727.815,32,"DT")
2961017
"^DD",727.815,727.815,33,0)
ENVIRONMENTAL CONTAMINANTS^S^Y:YES;N:NO;U:UNKNOWN;^0;33^Q
"^DD",727.815,727.815,33,.1)
Environmental Contaminants
"^DD",727.815,727.815,33,3)
Select the appropriate environmental contaminants status for this patient.
"^DD",727.815,727.815,33,21,0)
^^2^2^2961119^^^^
"^DD",727.815,727.815,33,21,1,0)
Data is Y if this patient claims exposure to environmental contaminants, 
"^DD",727.815,727.815,33,21,2,0)
N if not, U if unknown.
"^DD",727.815,727.815,33,23,0)
^^2^2^2961119^^^
"^DD",727.815,727.815,33,23,1,0)
ENVIRONMENTAL CONTAMINANTS data is derived from the ENVIRONMENTAL 
"^DD",727.815,727.815,33,23,2,0)
CONTAMINANTS field (23) in the EVENT CAPTURE PATIENT file (#721).
"^DD",727.815,727.815,33,"DT")
2961017
"^DD",727.815,727.815,34,0)
SERVICE CONNECTED^S^Y:YES;N:NO;^0;34^Q
"^DD",727.815,727.815,34,.1)
Service Connected
"^DD",727.815,727.815,34,3)
Select the appropriate service connected status for this patient.
"^DD",727.815,727.815,34,21,0)
^^1^1^2961119^^^^
"^DD",727.815,727.815,34,21,1,0)
Data is Y if this patient is service connected, N if not.
"^DD",727.815,727.815,34,23,0)
^^2^2^2961119^^^^
"^DD",727.815,727.815,34,23,1,0)
SERVICE CONNECTED data is derived from the SERVICE CONNECTED field (24) 
"^DD",727.815,727.815,34,23,2,0)
in the EVENT CAPTURE PATIENT file (#721).
"^DD",727.815,727.815,34,"DT")
2961017
"^DD",727.815,727.815,35,0)
SENT TO PCE^S^Y:YES;N:NO;^0;35^Q
"^DD",727.815,727.815,35,.1)
Sent to PCE
"^DD",727.815,727.815,35,3)
Enter Y if data has been sent to PCE, N if not.
"^DD",727.815,727.815,35,21,0)
^^1^1^2961119^^
"^DD",727.815,727.815,35,21,1,0)
This field flags data that has been sent from Event Capture to PCE.
"^DD",727.815,727.815,35,23,0)
^^1^1^2961119^^
"^DD",727.815,727.815,35,23,1,0)
Record is flagged Y when sent to PCE, N or null if not sent.
"^DD",727.815,727.815,35,"DT")
2961022
"^DD",727.815,727.815,37,0)
DSS IDENTIFIER^F^^0;37^K:$L(X)>6!($L(X)<6) X
"^DD",727.815,727.815,37,.1)
DSS Identifier
"^DD",727.815,727.815,37,3)
Answer must be 6 characters in length.
"^DD",727.815,727.815,37,21,0)
^^4^4^2970912^^^^
"^DD",727.815,727.815,37,21,1,0)
The DSS Identifier represents the primary and secondary stop codes of
"^DD",727.815,727.815,37,21,2,0)
the Associated Clinic in the Event Capture Patient record, OR it is
"^DD",727.815,727.815,37,21,3,0)
the Associated Stop Code of the DSS Unit in the Event Capture Patient
"^DD",727.815,727.815,37,21,4,0)
record.  This data element is always exactly 6 characters in length.
"^DD",727.815,727.815,37,23,0)
^^22^22^2971113^^^^
"^DD",727.815,727.815,37,23,1,0)
The DSS Identifier represents the primary and secondary stop codes of
"^DD",727.815,727.815,37,23,2,0)
the Associated Clinic in the Event Capture Patient record, OR it is
"^DD",727.815,727.815,37,23,3,0)
the Associated Stop Code of the DSS Unit in the Event Capture Patient
"^DD",727.815,727.815,37,23,4,0)
record.  This data element is always exactly 6 characters in length.
"^DD",727.815,727.815,37,23,5,0)
 
"^DD",727.815,727.815,37,23,6,0)
If the secondary stop code is not known, then "000" will be 
"^DD",727.815,727.815,37,23,7,0)
used as the 2nd 3-characters. If the primary stop code is not
"^DD",727.815,727.815,37,23,8,0)
known, then "000000" will be used.  If the DSS Unit does not have
"^DD",727.815,727.815,37,23,9,0)
an Associated Stop Code, then "000000" will be used.
"^DD",727.815,727.815,37,23,10,0)
 
"^DD",727.815,727.815,37,23,11,0)
The source of the data is:
"^DD",727.815,727.815,37,23,12,0)
 
"^DD",727.815,727.815,37,23,13,0)
   (1) EVENT CAPTURE PATIENT file (#721); ASSOCIATED CLINIC field (#26)
"^DD",727.815,727.815,37,23,14,0)
   (2) HOSPITAL LOCATION file (#44); STOP CODE NUMBER field (#8)
"^DD",727.815,727.815,37,23,15,0)
       and CREDIT STOP CODE field (#2503)
"^DD",727.815,727.815,37,23,16,0)
   (3) CLINIC STOP file (#40.7); AMIS REPORTING STOP CODE field (#1)
"^DD",727.815,727.815,37,23,17,0)
  
"^DD",727.815,727.815,37,23,18,0)
OR
"^DD",727.815,727.815,37,23,19,0)
  
"^DD",727.815,727.815,37,23,20,0)
   (1) EVENT CAPTURE PATIENT file (#721); DSS UNIT field (#6)
"^DD",727.815,727.815,37,23,21,0)
   (2) DSS UNIT file (#724); ASSOCIATED STOP CODE field (#9)
"^DD",727.815,727.815,37,23,22,0)
   (3) CLINIC STOP file (#40.7); AMIS REPORTING STOP CODE field (#1)
"^DD",727.815,727.815,37,"DT")
2970911
"^DD",727.815,727.815,38,0)
DCM DEPARTMENT^F^^0;38^K:$L(X)>7!($L(X)<4) X
"^DD",727.815,727.815,38,.1)
DCM Department
"^DD",727.815,727.815,38,3)
Answer must be 4-7 characters in length.
"^DD",727.815,727.815,38,21,0)
^^2^2^2970912^^^
"^DD",727.815,727.815,38,21,1,0)
This is the DCM Department associated with the DSS Unit of this
"^DD",727.815,727.815,38,21,2,0)
Event Capture extract record.
"^DD",727.815,727.815,38,23,0)
^^13^13^2971113^^^^
"^DD",727.815,727.815,38,23,1,0)
This data element will be derived from the UNIT NUMBER 
"^DD",727.815,727.815,38,23,2,0)
field (#4) of the DSS UNIT file (#724).
"^DD",727.815,727.815,38,23,3,0)
  
"^DD",727.815,727.815,38,23,4,0)
Format  ABBC.xx     where
"^DD",727.815,727.815,38,23,5,0)
     A = clinical service identifier
"^DD",727.815,727.815,38,23,6,0)
    BB = financial indicator
"^DD",727.815,727.815,38,23,7,0)
     C = division identifier
"^DD",727.815,727.815,38,23,8,0)
   .xx = subsection identifier (optional)
"^DD",727.815,727.815,38,23,9,0)
  
"^DD",727.815,727.815,38,23,10,0)
  
"^DD",727.815,727.815,38,23,11,0)
The source of the data is:
"^DD",727.815,727.815,38,23,12,0)
   (1) EVENT CAPTURE PATIENT file (#721); DSS UNIT field (#6)
"^DD",727.815,727.815,38,23,13,0)
   (2) DSS UNIT file (#724); UNIT NUMBER field (#4)
"^DD",727.815,727.815,38,"DT")
2970911
"^DD",727.817,727.817,0)
FIELD^^23^24
"^DD",727.817,727.817,0,"DDA")
N
"^DD",727.817,727.817,0,"DIK")
ECX817
"^DD",727.817,727.817,0,"DIKOLD")
ECX817
"^DD",727.817,727.817,0,"DT")
2970922
"^DD",727.817,727.817,0,"IX","AC",727.817,2)

"^DD",727.817,727.817,0,"IX","AINV",727.817,.01)

"^DD",727.817,727.817,0,"NM","TREATING SPECIALTY CHANGE EXTRACT")

"^DD",727.817,727.817,0,"VRPK")
DSS EXTRACTS
"^DD",727.817,727.817,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.817,727.817,.01,.1)
Sequence Number
"^DD",727.817,727.817,.01,1,0)
^.1
"^DD",727.817,727.817,.01,1,1,0)
727.817^AINV^MUMPS
"^DD",727.817,727.817,.01,1,1,1)
S ^ECX(727.817,"AINV",-X,DA)=""
"^DD",727.817,727.817,.01,1,1,2)
K ^ECX(727.817,"AINV",-X,DA)
"^DD",727.817,727.817,.01,1,1,3)
DO NOT DELETE.
"^DD",727.817,727.817,.01,1,1,"%D",0)
^^3^3^2960808^^
"^DD",727.817,727.817,.01,1,1,"%D",1,0)
This is an inverse entry cross reference.  It is used to find the
"^DD",727.817,727.817,.01,1,1,"%D",2,0)
last entry in the file.  It is essential for the management of the
"^DD",727.817,727.817,.01,1,1,"%D",3,0)
extract and the purge of extract data.
"^DD",727.817,727.817,.01,1,1,"DT")
2921016
"^DD",727.817,727.817,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",727.817,727.817,.01,21,0)
^^1^1^2961004^^^^
"^DD",727.817,727.817,.01,21,1,0)
The record number for this extract entry.
"^DD",727.817,727.817,.01,23,0)
^^1^1^2961004^^^^
"^DD",727.817,727.817,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",727.817,727.817,.01,"DT")
2961004
"^DD",727.817,727.817,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.817,727.817,1,.1)
Year/Month
"^DD",727.817,727.817,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.817,727.817,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.817,727.817,1,3)
Answer must be 6 characters in length.
"^DD",727.817,727.817,1,21,0)
^^2^2^2970922^^^^
"^DD",727.817,727.817,1,21,1,0)
A six character numeric string representing the year and the month
"^DD",727.817,727.817,1,21,2,0)
for which this extract was performed.
"^DD",727.817,727.817,1,23,0)
^^1^1^2970922^^^^
"^DD",727.817,727.817,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.817,727.817,1,"DT")
2970924
"^DD",727.817,727.817,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.817,727.817,2,.1)
Extract Number
"^DD",727.817,727.817,2,1,0)
^.1
"^DD",727.817,727.817,2,1,1,0)
727.817^AC
"^DD",727.817,727.817,2,1,1,1)
S ^ECX(727.817,"AC",$E(X,1,30),DA)=""
"^DD",727.817,727.817,2,1,1,2)
K ^ECX(727.817,"AC",$E(X,1,30),DA)
"^DD",727.817,727.817,2,1,1,3)
DO NOT DELETE.
"^DD",727.817,727.817,2,1,1,"%D",0)
^^2^2^2960808^
"^DD",727.817,727.817,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data
"^DD",727.817,727.817,2,1,1,"%D",2,0)
in this file.
"^DD",727.817,727.817,2,1,1,"DT")
2910802
"^DD",727.817,727.817,2,3)
Enter the extract number for this extract.
"^DD",727.817,727.817,2,21,0)
^^2^2^2961004^^^^
"^DD",727.817,727.817,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727) for this 
"^DD",727.817,727.817,2,21,2,0)
extract.
"^DD",727.817,727.817,2,23,0)
^^2^2^2961004^^^^
"^DD",727.817,727.817,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is to
"^DD",727.817,727.817,2,23,2,0)
pick up the header for the mail message.
"^DD",727.817,727.817,2,"DT")
2961004
"^DD",727.817,727.817,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.817,727.817,3,.1)
Facility
"^DD",727.817,727.817,3,3)
Enter the station number where this extract was performed.
"^DD",727.817,727.817,3,21,0)
^^1^1^2961004^^^^
"^DD",727.817,727.817,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.817,727.817,3,23,0)
^^1^1^2961004^^^^
"^DD",727.817,727.817,3,23,1,0)
For the Treating Specialty Change extract, the FACILITY field is null.
"^DD",727.817,727.817,3,"DT")
2961015
"^DD",727.817,727.817,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.817,727.817,4,.1)
Patient No. - DFN
"^DD",727.817,727.817,4,3)
Enter the name of the patient for this extract record.
"^DD",727.817,727.817,4,21,0)
^^1^1^2961023^^^^
"^DD",727.817,727.817,4,21,1,0)
The name of the patient for this extract record.
"^DD",727.817,727.817,4,23,0)
^^3^3^2961023^^^^
"^DD",727.817,727.817,4,23,1,0)
Derived from the PATIENT field (.03) in the PATIENT MOVEMENT file 
"^DD",727.817,727.817,4,23,2,0)
(#405), which is a pointer to the PATIENT file (#2). This data 
"^DD",727.817,727.817,4,23,3,0)
represents the patient DFN.
"^DD",727.817,727.817,4,"DT")
2961015
"^DD",727.817,727.817,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.817,727.817,5,.1)
Social Security Number
"^DD",727.817,727.817,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.817,727.817,5,21,0)
^^1^1^2961023^^^^
"^DD",727.817,727.817,5,21,1,0)
The patient's social security number.
"^DD",727.817,727.817,5,23,0)
^^4^4^2961023^^
"^DD",727.817,727.817,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN 
"^DD",727.817,727.817,5,23,2,0)
field (4) in the TREATING SPECIALTY CHANGE EXTRACT file (#727.817), 
"^DD",727.817,727.817,5,23,3,0)
SSN data is derived from the SOCIAL SECURITY NUMBER field (.09) in 
"^DD",727.817,727.817,5,23,4,0)
the PATIENT file (#2).
"^DD",727.817,727.817,5,"DT")
2961004
"^DD",727.817,727.817,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.817,727.817,6,.1)
Name
"^DD",727.817,727.817,6,3)
Your answer must be 4 characters in length.
"^DD",727.817,727.817,6,21,0)
^^1^1^2961023^^^^
"^DD",727.817,727.817,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.817,727.817,6,23,0)
^^5^5^2961023^^
"^DD",727.817,727.817,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN 
"^DD",727.817,727.817,6,23,2,0)
field (4) in the TREATING SPECIALTY CHANGE EXTRACT file (#727.817), 
"^DD",727.817,727.817,6,23,3,0)
NAME data is derived from the NAME field (.01) in the PATIENT file 
"^DD",727.817,727.817,6,23,4,0)
(#2). The first four characters of the first "," piece are used, 
"^DD",727.817,727.817,6,23,5,0)
padded with trailing spaces if necessary.
"^DD",727.817,727.817,6,"DT")
2961004
"^DD",727.817,727.817,7,0)
IN OUT PATIENT INDICATOR^P40.9'^DIC(40.9,^0;8^Q
"^DD",727.817,727.817,7,.1)
In Out Patient Indicator
"^DD",727.817,727.817,7,3)
Enter the appropriate inpatient or outpatient indicator.
"^DD",727.817,727.817,7,21,0)
^^2^2^2961004^^^^
"^DD",727.817,727.817,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this 
"^DD",727.817,727.817,7,21,2,0)
extract entry.
"^DD",727.817,727.817,7,23,0)
^^2^2^2961004^^^
"^DD",727.817,727.817,7,23,1,0)
For the Treating Specialty Change extract this field is set to 3, 
"^DD",727.817,727.817,7,23,2,0)
indicating inpatient status in the LOCATION TYPE file (#40.9).
"^DD",727.817,727.817,7,"DT")
2961004
"^DD",727.817,727.817,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.817,727.817,8,.1)
Day
"^DD",727.817,727.817,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.817,727.817,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.817,727.817,8,3)
Answer must be 8 characters in length.
"^DD",727.817,727.817,8,21,0)
^^2^2^2970922^^^^
"^DD",727.817,727.817,8,21,1,0)
An 8-character numeric string that represents the date on which
"^DD",727.817,727.817,8,21,2,0)
the Treating Specialty change took place.
"^DD",727.817,727.817,8,23,0)
^^9^9^2970923^^^^
"^DD",727.817,727.817,8,23,1,0)
Data source:
"^DD",727.817,727.817,8,23,2,0)
 
"^DD",727.817,727.817,8,23,3,0)
PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.817,727.817,8,23,4,0)
 
"^DD",727.817,727.817,8,23,5,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.817,727.817,8,23,6,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.817,727.817,8,23,7,0)
then a default is used.  The default date value is the value of the 
"^DD",727.817,727.817,8,23,8,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.817,727.817,8,23,9,0)
Year 2000 compliant per vendor.
"^DD",727.817,727.817,8,"DT")
2970924
"^DD",727.817,727.817,9,0)
PRODUCT^F^^0;10^K:$L(X)>1!($L(X)<1) X
"^DD",727.817,727.817,9,.1)
Product
"^DD",727.817,727.817,9,3)
The product or feeder key for this extract.
"^DD",727.817,727.817,9,21,0)
^^1^1^2961015^^^
"^DD",727.817,727.817,9,21,1,0)
The product or feeder key for this extract.
"^DD",727.817,727.817,9,23,0)
^^1^1^2961015^^^
"^DD",727.817,727.817,9,23,1,0)
For the Treating Specialty Change extract, the PRODUCT field is null.
"^DD",727.817,727.817,9,"DT")
2961004
"^DD",727.817,727.817,9,"V",0)
^.12P
"^DD",727.817,727.817,10,0)
ADMISSION DATE^FO^^0;11^K:$L(X)>8!($L(X)<8) X
"^DD",727.817,727.817,10,.1)
Admission Date
"^DD",727.817,727.817,10,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.817,727.817,10,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.817,727.817,10,3)
Answer must be 8 characters in length.
"^DD",727.817,727.817,10,21,0)
^^2^2^2970922^^^^
"^DD",727.817,727.817,10,21,1,0)
An 8-character numeric string that represents the date of the Admission
"^DD",727.817,727.817,10,21,2,0)
associated with this Treating Specialty change.
"^DD",727.817,727.817,10,23,0)
^^10^10^2970923^^^^
"^DD",727.817,727.817,10,23,1,0)
Data source:
"^DD",727.817,727.817,10,23,2,0)
 
"^DD",727.817,727.817,10,23,3,0)
PATIENT MOVEMENT file (#405); ADMISSION/CHECK-IN MOVEMENT field (#.14)
"^DD",727.817,727.817,10,23,4,0)
PATIENT MOVEMENT FILE (#405); DATE/TIME (#.01)
"^DD",727.817,727.817,10,23,5,0)
 
"^DD",727.817,727.817,10,23,6,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.817,727.817,10,23,7,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.817,727.817,10,23,8,0)
then a default is used.  The default date value is the value of the 
"^DD",727.817,727.817,10,23,9,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.817,727.817,10,23,10,0)
Year 2000 compliant per vendor.
"^DD",727.817,727.817,10,"DT")
2970924
"^DD",727.817,727.817,11,0)
DISCHARGE DATE^FO^^0;12^K:$L(X)>8!($L(X)<8) X
"^DD",727.817,727.817,11,.1)
Discharge Date
"^DD",727.817,727.817,11,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.817,727.817,11,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.817,727.817,11,3)
Answer must be 8 characters in length.
"^DD",727.817,727.817,11,21,0)
^^3^3^2970922^^^^
"^DD",727.817,727.817,11,21,1,0)
An 8-character numeric string that represents the date of Discharge
"^DD",727.817,727.817,11,21,2,0)
associated with this Treating Specialty change, if it is the last
"^DD",727.817,727.817,11,21,3,0)
specialty change prior to discharge.  Otherwise, this field is null.
"^DD",727.817,727.817,11,23,0)
^^9^9^2970923^^^^
"^DD",727.817,727.817,11,23,1,0)
Data source:
"^DD",727.817,727.817,11,23,2,0)
 
"^DD",727.817,727.817,11,23,3,0)
PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.817,727.817,11,23,4,0)
 
"^DD",727.817,727.817,11,23,5,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.817,727.817,11,23,6,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.817,727.817,11,23,7,0)
then a default is used.  The default date value is the value of the 
"^DD",727.817,727.817,11,23,8,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.817,727.817,11,23,9,0)
Year 2000 compliant per vendor.
"^DD",727.817,727.817,11,"DT")
2970924
"^DD",727.817,727.817,12,0)
MOVEMENT FILE #^P405'^DGPM(^0;13^Q
"^DD",727.817,727.817,12,.1)
Movement File Number
"^DD",727.817,727.817,12,3)
Enter the patient movement number associated with this extract record.
"^DD",727.817,727.817,12,21,0)
^^1^1^2961004^^
"^DD",727.817,727.817,12,21,1,0)
Current patient movement record associated with this extract record.
"^DD",727.817,727.817,12,23,0)
^^3^3^2961004^^
"^DD",727.817,727.817,12,23,1,0)
The ^DGPM("ATT3" or "ATT6",DATE,D0) cross reference is used to 
"^DD",727.817,727.817,12,23,2,0)
obtain the current movement number associated with this patient. 
"^DD",727.817,727.817,12,23,3,0)
It is a pointer to the PATIENT MOVEMENT file (#405).
"^DD",727.817,727.817,12,"DT")
2961004
"^DD",727.817,727.817,13,0)
TYPE^F^^0;14^K:$L(X)>1!($L(X)<1) X
"^DD",727.817,727.817,13,.1)
Type
"^DD",727.817,727.817,13,3)
Your answer must be 1 character in length.
"^DD",727.817,727.817,13,21,0)
^^1^1^2970708^^^^
"^DD",727.817,727.817,13,21,1,0)
The type of movement for this patient.
"^DD",727.817,727.817,13,23,0)
^^1^1^2970708^^^^
"^DD",727.817,727.817,13,23,1,0)
Using the "ATT"_TYPE cross reference where TYPE=6 (specialty change).
"^DD",727.817,727.817,13,"DT")
2961004
"^DD",727.817,727.817,14,0)
GAINING WARD^P44'^SC(^0;15^Q
"^DD",727.817,727.817,14,.1)
Gaining Ward
"^DD",727.817,727.817,14,3)
Enter the patient's ward.
"^DD",727.817,727.817,14,21,0)
^^1^1^2961023^^^^
"^DD",727.817,727.817,14,21,1,0)
The ward on which this patient was placed.
"^DD",727.817,727.817,14,23,0)
^^1^1^2961023^^^^
"^DD",727.817,727.817,14,23,1,0)
For the Treating Specialty Change extract, the GAINING WARD field is null.
"^DD",727.817,727.817,14,"DT")
2961015
"^DD",727.817,727.817,15,0)
TREATING SPECIALTY^P42.4'^DIC(42.4,^0;16^Q
"^DD",727.817,727.817,15,.1)
Treating Specialty
"^DD",727.817,727.817,15,3)
Enter the name of the treating specialty associated with this extract record.
"^DD",727.817,727.817,15,21,0)
^^1^1^2971120^^^^
"^DD",727.817,727.817,15,21,1,0)
The name of the treating specialty associated with this extract record.
"^DD",727.817,727.817,15,23,0)
^^15^15^2971120^^^^
"^DD",727.817,727.817,15,23,1,0)
Using the "ATT3" or "ATT6" cross reference on the PATIENT MOVEMENT file 
"^DD",727.817,727.817,15,23,2,0)
(#405) and the patient pointer (DFN) stored in the PATIENT NO. - DFN 
"^DD",727.817,727.817,15,23,3,0)
field (4) in the TREATING SPECIALTY CHANGE EXTRACT file (#727.817), 
"^DD",727.817,727.817,15,23,4,0)
NEW TREATING SPECIALTY data is derived from the FACILITY TREATING 
"^DD",727.817,727.817,15,23,5,0)
SPECIALTY field (.09) in the PATIENT MOVEMENT file (#405). This facility 
"^DD",727.817,727.817,15,23,6,0)
treating specialty data is a pointer to the FACILITY TREATING SPECIALTY 
"^DD",727.817,727.817,15,23,7,0)
file (#45.7). Using the SPECIALTY field (1) in the FACILITY TREATING 
"^DD",727.817,727.817,15,23,8,0)
SPECIALTY file (#45.7), the pointer to the SPECIALTY file (#42.4) is 
"^DD",727.817,727.817,15,23,9,0)
obtained.
"^DD",727.817,727.817,15,23,10,0)
 
"^DD",727.817,727.817,15,23,11,0)
This Specialty is then the LOSING Specialty for the Treating Specialty
"^DD",727.817,727.817,15,23,12,0)
change occurring on the date in the TRT extract record.  One can only
"^DD",727.817,727.817,15,23,13,0)
look at this in terms of the losing specialty since it is necessary
"^DD",727.817,727.817,15,23,14,0)
to derive a length of stay (DURATION, field #16) in the Treating
"^DD",727.817,727.817,15,23,15,0)
Specialty upto the date of the change.
"^DD",727.817,727.817,15,"DT")
2971120
"^DD",727.817,727.817,16,0)
DURATION^NJ4,0^^0;17^K:+X'=X!(X>5000)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.817,727.817,16,.1)
Duration
"^DD",727.817,727.817,16,3)
Enter a number between 0 and 5000, 0 decimal digits.
"^DD",727.817,727.817,16,21,0)
^^1^1^2961004^^^
"^DD",727.817,727.817,16,21,1,0)
Duration of stay within this movement.
"^DD",727.817,727.817,16,23,0)
^^3^3^2961004^^^
"^DD",727.817,727.817,16,23,1,0)
Calculated as current treating specialty date minus the date (DATE/TIME 
"^DD",727.817,727.817,16,23,2,0)
field (.01) of the PATIENT MOVEMENT file (#405)) of the last treating 
"^DD",727.817,727.817,16,23,3,0)
specialty change.
"^DD",727.817,727.817,16,"DT")
2961004
"^DD",727.817,727.817,17,0)
ATTENDING PHYSICIAN^F^^0;18^K:$L(X)>11!($L(X)<1) X
"^DD",727.817,727.817,17,.1)
Attending Physician
"^DD",727.817,727.817,17,3)
Enter attending physician assigned to this patient.
"^DD",727.817,727.817,17,21,0)
^^1^1^2961025^^^^
"^DD",727.817,727.817,17,21,1,0)
The attending physician assigned to this patient with this movement.
"^DD",727.817,727.817,17,23,0)
^^4^4^2961025^^^^
"^DD",727.817,727.817,17,23,1,0)
Derived from the ATTENDING PHYSICIAN field (.19) of the PATIENT MOVEMENT 
"^DD",727.817,727.817,17,23,2,0)
file (#405). If ATTENDING PHYSICIAN is a pointer to the NEW PERSON file 
"^DD",727.817,727.817,17,23,3,0)
(#200), it is stored as "2"_pointer value. If ATTENDING PHYSICIAN is a 
"^DD",727.817,727.817,17,23,4,0)
pointer to the PROVIDER file (#6), it is stored as "6"_pointer value.
"^DD",727.817,727.817,17,"DT")
2961025
"^DD",727.817,727.817,18,0)
MOVEMENT TYPE^P405.2'^DG(405.2,^0;19^Q
"^DD",727.817,727.817,18,.1)
Movement Type
"^DD",727.817,727.817,18,3)
Enter the patient movement number associated with this extract record.
"^DD",727.817,727.817,18,21,0)
^^1^1^2970708^^^
"^DD",727.817,727.817,18,21,1,0)
The MAS movement type for this movement.
"^DD",727.817,727.817,18,23,0)
^^3^3^2970708^^^
"^DD",727.817,727.817,18,23,1,0)
MOVEMENT TYPE is derived from the MAS MOVEMENT TYPE field (.18) of 
"^DD",727.817,727.817,18,23,2,0)
the PATIENT MOVEMENT file (#405). It is a pointer to the MAS MOVEMENT 
"^DD",727.817,727.817,18,23,3,0)
TYPE file (#405.2).
"^DD",727.817,727.817,18,"DT")
2961004
"^DD",727.817,727.817,19,0)
TRT TIME^FO^^0;20^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.817,727.817,19,.1)
TRT Time
"^DD",727.817,727.817,19,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.817,727.817,19,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.817,727.817,19,3)
Answer must be 6 characters in length.
"^DD",727.817,727.817,19,21,0)
^^2^2^2970922^^^^
"^DD",727.817,727.817,19,21,1,0)
A 6-character numeric string representing the time of day when the
"^DD",727.817,727.817,19,21,2,0)
Treating Specialty change took place.
"^DD",727.817,727.817,19,23,0)
^^7^7^2970922^^^^
"^DD",727.817,727.817,19,23,1,0)
Data source:
"^DD",727.817,727.817,19,23,2,0)
 
"^DD",727.817,727.817,19,23,3,0)
PATIENT MOVEMENT file (#405); DATE/TIME field (#.01);
"^DD",727.817,727.817,19,23,4,0)
   2nd "." piece only.
"^DD",727.817,727.817,19,23,5,0)
 
"^DD",727.817,727.817,19,23,6,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.817,727.817,19,23,7,0)
cannot be determined, then "000300" is used as default.
"^DD",727.817,727.817,19,"DT")
2970924
"^DD",727.817,727.817,20,0)
ADMISSION TIME^FO^^0;21^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.817,727.817,20,.1)
Admission Time
"^DD",727.817,727.817,20,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.817,727.817,20,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.817,727.817,20,3)
Answer must be 6 characters in length.
"^DD",727.817,727.817,20,21,0)
^^2^2^2970922^^^^
"^DD",727.817,727.817,20,21,1,0)
A 6-character numeric string that represent the time of day of the
"^DD",727.817,727.817,20,21,2,0)
Admission associated with this Treating Specialty change.
"^DD",727.817,727.817,20,23,0)
^^7^7^2970922^^^^
"^DD",727.817,727.817,20,23,1,0)
Data source:
"^DD",727.817,727.817,20,23,2,0)
 
"^DD",727.817,727.817,20,23,3,0)
PATIENT MOVEMENT file (#405); ADMISSION/CHECK-IN MOVEMENT field (#.14)
"^DD",727.817,727.817,20,23,4,0)
PATIENT MOVEMENT FILE (#405); DATE/TIME (#.01)
"^DD",727.817,727.817,20,23,5,0)
 
"^DD",727.817,727.817,20,23,6,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.817,727.817,20,23,7,0)
cannot be determined, then "000300" is used as default.
"^DD",727.817,727.817,20,"DT")
2970924
"^DD",727.817,727.817,21,0)
PRIMARY WARD PROVIDER^P200'^VA(200,^0;22^Q
"^DD",727.817,727.817,21,21,0)
^^1^1^2970922^
"^DD",727.817,727.817,21,21,1,0)
To be used for future development; currently set to null.
"^DD",727.817,727.817,21,23,0)
^^1^1^2970922^
"^DD",727.817,727.817,21,23,1,0)
For future development.
"^DD",727.817,727.817,21,"DT")
2970922
"^DD",727.817,727.817,22,0)
END ATTENDING^P200'^VA(200,^0;23^Q
"^DD",727.817,727.817,22,21,0)
^^1^1^2970922^
"^DD",727.817,727.817,22,21,1,0)
To be used for future development; currently set to null.
"^DD",727.817,727.817,22,23,0)
^^1^1^2970922^
"^DD",727.817,727.817,22,23,1,0)
For future development.
"^DD",727.817,727.817,22,"DT")
2970922
"^DD",727.817,727.817,23,0)
END WARD PROVIDER^P200'^VA(200,^0;24^Q
"^DD",727.817,727.817,23,21,0)
^^1^1^2970922^
"^DD",727.817,727.817,23,21,1,0)
To be used for future development; currently set to null.
"^DD",727.817,727.817,23,23,0)
^^1^1^2970922^
"^DD",727.817,727.817,23,23,1,0)
For future development.
"^DD",727.817,727.817,23,"DT")
2970922
"^DD",727.819,727.819,0)
FIELD^^26^26
"^DD",727.819,727.819,0,"DDA")
N
"^DD",727.819,727.819,0,"DIK")
ECX819
"^DD",727.819,727.819,0,"DIKOLD")
ECX819
"^DD",727.819,727.819,0,"DT")
2970922
"^DD",727.819,727.819,0,"IX","AC",727.819,2)

"^DD",727.819,727.819,0,"IX","AINV",727.819,.01)

"^DD",727.819,727.819,0,"NM","IV DETAIL EXTRACT")

"^DD",727.819,727.819,0,"VRPK")
DSS EXTRACTS
"^DD",727.819,727.819,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.819,727.819,.01,.1)
Sequence Number
"^DD",727.819,727.819,.01,1,0)
^.1
"^DD",727.819,727.819,.01,1,1,0)
727.819^AINV^MUMPS
"^DD",727.819,727.819,.01,1,1,1)
S ^ECX(727.819,"AINV",-X,DA)=""
"^DD",727.819,727.819,.01,1,1,2)
K ^ECX(727.819,"AINV",-X,DA)
"^DD",727.819,727.819,.01,1,1,3)
DO NOT DELETE.
"^DD",727.819,727.819,.01,1,1,"%D",0)
^^3^3^2960808^^
"^DD",727.819,727.819,.01,1,1,"%D",1,0)
This is an inverse entry cross reference.  It is used to find the
"^DD",727.819,727.819,.01,1,1,"%D",2,0)
last entry in the file.  It is essential for the management of the
"^DD",727.819,727.819,.01,1,1,"%D",3,0)
extract and the purge of extract data.
"^DD",727.819,727.819,.01,1,1,"DT")
2921016
"^DD",727.819,727.819,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",727.819,727.819,.01,21,0)
^^1^1^2960925^^^^
"^DD",727.819,727.819,.01,21,1,0)
The record number for this extract entry.
"^DD",727.819,727.819,.01,23,0)
^^1^1^2960925^^^
"^DD",727.819,727.819,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",727.819,727.819,.01,"DT")
2960925
"^DD",727.819,727.819,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.819,727.819,1,.1)
Year/Month
"^DD",727.819,727.819,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.819,727.819,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.819,727.819,1,3)
Answer must be 6 characters in length.
"^DD",727.819,727.819,1,21,0)
^^2^2^2970922^^^^
"^DD",727.819,727.819,1,21,1,0)
A six character numeric string representing the year and the month
"^DD",727.819,727.819,1,21,2,0)
for which this extract was performed.
"^DD",727.819,727.819,1,23,0)
^^1^1^2970922^^^^
"^DD",727.819,727.819,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.819,727.819,1,"DT")
2970924
"^DD",727.819,727.819,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.819,727.819,2,.1)
Extract Number
"^DD",727.819,727.819,2,1,0)
^.1
"^DD",727.819,727.819,2,1,1,0)
727.819^AC
"^DD",727.819,727.819,2,1,1,1)
S ^ECX(727.819,"AC",$E(X,1,30),DA)=""
"^DD",727.819,727.819,2,1,1,2)
K ^ECX(727.819,"AC",$E(X,1,30),DA)
"^DD",727.819,727.819,2,1,1,3)
DO NOT DELETE.
"^DD",727.819,727.819,2,1,1,"%D",0)
^^2^2^2960808^
"^DD",727.819,727.819,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data
"^DD",727.819,727.819,2,1,1,"%D",2,0)
in this file.
"^DD",727.819,727.819,2,1,1,"DT")
2910802
"^DD",727.819,727.819,2,3)
Enter the extract number for this extract.
"^DD",727.819,727.819,2,21,0)
^^2^2^2960925^^^^
"^DD",727.819,727.819,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727) for this 
"^DD",727.819,727.819,2,21,2,0)
extract.
"^DD",727.819,727.819,2,23,0)
^^2^2^2960925^^^^
"^DD",727.819,727.819,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is to
"^DD",727.819,727.819,2,23,2,0)
pick up the header for the mail message.
"^DD",727.819,727.819,2,"DT")
2960925
"^DD",727.819,727.819,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.819,727.819,3,.1)
Facility
"^DD",727.819,727.819,3,3)
Enter the station number where this extract was performed.
"^DD",727.819,727.819,3,21,0)
^^1^1^2960925^^^^
"^DD",727.819,727.819,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.819,727.819,3,23,0)
^^14^14^2960925^^^^
"^DD",727.819,727.819,3,23,1,0)
For sites running a version of Inpatient Medications prior to V. 4.5:
"^DD",727.819,727.819,3,23,2,0)
An indicator of the division where this event happened. Using the NAME 
"^DD",727.819,727.819,3,23,3,0)
field (.01) pointer from the DSS EXTRACTS file (#728), FACILITY is 
"^DD",727.819,727.819,3,23,4,0)
derived from the STATION NUMBER field (99) for that pointer number in 
"^DD",727.819,727.819,3,23,5,0)
the INSTITUTION file (#4).
"^DD",727.819,727.819,3,23,6,0)
  
"^DD",727.819,727.819,3,23,7,0)
For sites running Inpatient Medications V. 4.5 or higher:
"^DD",727.819,727.819,3,23,8,0)
For inpatients: 
"^DD",727.819,727.819,3,23,9,0)
Derived from the DIVISION field (3.5) in the HOSPITAL LOCATION 
"^DD",727.819,727.819,3,23,10,0)
file (#44) for the ward identified in the WARD LOCATION file (#42).
"^DD",727.819,727.819,3,23,11,0)
For outpatients with IV orders: 
"^DD",727.819,727.819,3,23,12,0)
Derived from the DIVISION field (.02) in the IV ROOM file (#59.5) for 
"^DD",727.819,727.819,3,23,13,0)
the IV room identified by the IV ROOM field (.22) in the IV multiple 
"^DD",727.819,727.819,3,23,14,0)
(100) of the PHARMACY PATIENT file (#55).
"^DD",727.819,727.819,3,"DT")
2961017
"^DD",727.819,727.819,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.819,727.819,4,.1)
Patient No. - DFN
"^DD",727.819,727.819,4,3)
Enter the name of the patient for this extract record.
"^DD",727.819,727.819,4,21,0)
^^1^1^2961017^^^^
"^DD",727.819,727.819,4,21,1,0)
The name of the patient for this extract record.
"^DD",727.819,727.819,4,23,0)
^^10^10^2961017^
"^DD",727.819,727.819,4,23,1,0)
For sites running a version of Inpatient Medications prior to V. 4.5:
"^DD",727.819,727.819,4,23,2,0)
Derived from the PATIENT field (.01) within the PATIENT multiple 
"^DD",727.819,727.819,4,23,3,0)
(8) within the IV DRUG multiple (2) within the DATE multiple (2) of 
"^DD",727.819,727.819,4,23,4,0)
the IV STATS file (#50.8). PATIENT NO. - DFN is a pointer to the NAME
"^DD",727.819,727.819,4,23,5,0)
field (.01) of the PATIENT file (#2). This data represents the patient
"^DD",727.819,727.819,4,23,6,0)
DFN.
"^DD",727.819,727.819,4,23,7,0)
  
"^DD",727.819,727.819,4,23,8,0)
For sites running Inpatient Medications V. 4.5 or higher: Pointer to the
"^DD",727.819,727.819,4,23,9,0)
NAME field (.01) of the PATIENT file (#2). PATIENT NO. - DFN data is
"^DD",727.819,727.819,4,23,10,0)
derived from the DFN field (1) of the IV EXTRACT DATA file (#728.113).
"^DD",727.819,727.819,4,"DT")
2961017
"^DD",727.819,727.819,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.819,727.819,5,.1)
Social Security Number
"^DD",727.819,727.819,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.819,727.819,5,21,0)
^^1^1^2960925^^^^
"^DD",727.819,727.819,5,21,1,0)
The patient's social security number.
"^DD",727.819,727.819,5,23,0)
^^3^3^2961017^
"^DD",727.819,727.819,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.819,727.819,5,23,2,0)
in the IV DETAIL EXTRACT file (#727.819), SSN data is derived from the
"^DD",727.819,727.819,5,23,3,0)
SOCIAL SECURITY NUMBER field (.09) in the PATIENT file (#2).
"^DD",727.819,727.819,5,"DT")
2960925
"^DD",727.819,727.819,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.819,727.819,6,.1)
Name
"^DD",727.819,727.819,6,3)
Your answer must be 4 characters in length.
"^DD",727.819,727.819,6,21,0)
^^1^1^2960925^^^^
"^DD",727.819,727.819,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.819,727.819,6,23,0)
^^4^4^2961017^
"^DD",727.819,727.819,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.819,727.819,6,23,2,0)
in the IV DETAIL EXTRACT file (#727.819), NAME data is derived from the
"^DD",727.819,727.819,6,23,3,0)
NAME field (.01) in the PATIENT file (#2). The first four characters of
"^DD",727.819,727.819,6,23,4,0)
the first "," piece are used, padded with trailing spaces if necessary.
"^DD",727.819,727.819,6,"DT")
2960925
"^DD",727.819,727.819,7,0)
IN OUT PATIENT INDICATOR^P40.9'^DIC(40.9,^0;8^Q
"^DD",727.819,727.819,7,.1)
In Out Patient Indicator
"^DD",727.819,727.819,7,3)
Enter the appropriate inpatient or outpatient indicator.
"^DD",727.819,727.819,7,21,0)
^^2^2^2960925^^^^
"^DD",727.819,727.819,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this 
"^DD",727.819,727.819,7,21,2,0)
extract entry.
"^DD",727.819,727.819,7,23,0)
^^12^12^2960925^^^
"^DD",727.819,727.819,7,23,1,0)
For sites running a version of Inpatient Medications prior to V. 4.5:
"^DD",727.819,727.819,7,23,2,0)
Derived from the WARD PTR field (4) of the PATIENT multiple (8) within 
"^DD",727.819,727.819,7,23,3,0)
the IV DRUG multiple (2) within the DATE multiple (2) of the IV STATS 
"^DD",727.819,727.819,7,23,4,0)
file (#50.8). If the WARD PTR value is equal to .5, the IN OUT PATIENT 
"^DD",727.819,727.819,7,23,5,0)
INDICATOR field is set to 1 indicating an outpatient status or else it 
"^DD",727.819,727.819,7,23,6,0)
is set to 3 indicating inpatient status.
"^DD",727.819,727.819,7,23,7,0)
  
"^DD",727.819,727.819,7,23,8,0)
For sites running Inpatient Medications V. 4.5 or higher:
"^DD",727.819,727.819,7,23,9,0)
This field is initialized to a 1, indicating an outpatient status. If 
"^DD",727.819,727.819,7,23,10,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.819,727.819,7,23,11,0)
patient movement number, then the field is reset to a 3 indicating 
"^DD",727.819,727.819,7,23,12,0)
inpatient status.
"^DD",727.819,727.819,7,"DT")
2960925
"^DD",727.819,727.819,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.819,727.819,8,.1)
Day
"^DD",727.819,727.819,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.819,727.819,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.819,727.819,8,3)
Answer must be 8 characters in length.
"^DD",727.819,727.819,8,21,0)
^^2^2^2970922^^^^
"^DD",727.819,727.819,8,21,1,0)
An 8-character numeric string that represents the date on which the
"^DD",727.819,727.819,8,21,2,0)
IV medication was dispensed.
"^DD",727.819,727.819,8,23,0)
^^15^15^2970923^^^^
"^DD",727.819,727.819,8,23,1,0)
Data source:
"^DD",727.819,727.819,8,23,2,0)
  
"^DD",727.819,727.819,8,23,3,0)
For sites running a version prior to Inpatient Medications v4.5 --
"^DD",727.819,727.819,8,23,4,0)
IV STATS file (#50.8); DATE sub-file (#50.803); DATE field (#.01)
"^DD",727.819,727.819,8,23,5,0)
 
"^DD",727.819,727.819,8,23,6,0)
For sites running Inpatient Medications v4.5 or higher:
"^DD",727.819,727.819,8,23,7,0)
IV EXTRACT DATA file (#728.113); DATE/TIME field (#4)
"^DD",727.819,727.819,8,23,8,0)
which is set by routine PSIVSTAT and is always the current date/time,
"^DD",727.819,727.819,8,23,9,0)
i.e., NOW.
"^DD",727.819,727.819,8,23,10,0)
 
"^DD",727.819,727.819,8,23,11,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.819,727.819,8,23,12,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.819,727.819,8,23,13,0)
then a default is used.  The default date value is the value of the 
"^DD",727.819,727.819,8,23,14,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.819,727.819,8,23,15,0)
Year 2000 compliant per vendor.
"^DD",727.819,727.819,8,"DT")
2970924
"^DD",727.819,727.819,9,0)
VA DRUG CLASSIFICATION^F^^0;10^K:$L(X)>5!($L(X)<5) X
"^DD",727.819,727.819,9,.1)
VA Drug Classification
"^DD",727.819,727.819,9,3)
Your answer must be 5 characters in length.
"^DD",727.819,727.819,9,21,0)
^^1^1^2961127^^^^
"^DD",727.819,727.819,9,21,1,0)
The VA Drug Classification for the item in this order.
"^DD",727.819,727.819,9,23,0)
^^18^18^2971113^^^^
"^DD",727.819,727.819,9,23,1,0)
For sites running a version of Inpatient Medications prior to V. 4.5:
"^DD",727.819,727.819,9,23,2,0)
Derived from the VA CLASSIFICATION field (2) in the DRUG file (#50) 
"^DD",727.819,727.819,9,23,3,0)
for the drug identified by the GENERIC DRUG field (1) in either the 
"^DD",727.819,727.819,9,23,4,0)
IV ADDITIVES file (#52.6) for additives or the IV SOLUTIONS file 
"^DD",727.819,727.819,9,23,5,0)
(#52.7) for solutions.
"^DD",727.819,727.819,9,23,6,0)
  
"^DD",727.819,727.819,9,23,7,0)
Using the "AC" cross reference on the IV STATS file (#50.8) and a 
"^DD",727.819,727.819,9,23,8,0)
^TMP( array built from the "AC" cross reference, GENERIC DRUG is 
"^DD",727.819,727.819,9,23,9,0)
derived from the following:
"^DD",727.819,727.819,9,23,10,0)
 the IV DRUG field (.01),
"^DD",727.819,727.819,9,23,11,0)
 the TYPE field (6), and
"^DD",727.819,727.819,9,23,12,0)
 the IEN of the additive or solution for the IV DRUG within the IV DRUG 
"^DD",727.819,727.819,9,23,13,0)
 multiple (2) of the DATE multiple (2) of the IV STATS file (#50.8).
"^DD",727.819,727.819,9,23,14,0)
  
"^DD",727.819,727.819,9,23,15,0)
For sites running Inpatient Medications V. 4.5 or higher:
"^DD",727.819,727.819,9,23,16,0)
Derived from the VA CLASSIFICATION field (2) in the DRUG file (#50) 
"^DD",727.819,727.819,9,23,17,0)
for the drug identified by the DRUG field (3) in the IV EXTRACT DATA 
"^DD",727.819,727.819,9,23,18,0)
file (#728.113).
"^DD",727.819,727.819,9,"DT")
2960925
"^DD",727.819,727.819,10,0)
QUANTITY^NJ8,2^^0;11^K:+X'=X!(X>10000)!(X<0)!(X?.E1"."3N.N) X
"^DD",727.819,727.819,10,.1)
Quantity
"^DD",727.819,727.819,10,3)
Enter a number between 0 and 10000, 2 decimal digits.
"^DD",727.819,727.819,10,21,0)
^^1^1^2961017^^^^
"^DD",727.819,727.819,10,21,1,0)
Quantity dispensed.
"^DD",727.819,727.819,10,23,0)
^^12^12^2961017^^^
"^DD",727.819,727.819,10,23,1,0)
For sites running a version of Inpatient Medications prior to V. 4.5:
"^DD",727.819,727.819,10,23,2,0)
Derived from the DISPENSED UNITS (PATIENT) field (1) minus the RETURNED 
"^DD",727.819,727.819,10,23,3,0)
UNITS (PATIENT) field (2) minus the CANCELED UNITS (PATIENT) field (5). 
"^DD",727.819,727.819,10,23,4,0)
These fields are in the PATIENT multiple (8) of the IV DRUG multiple (2) 
"^DD",727.819,727.819,10,23,5,0)
within the DATE multiple (2) of the IV STATS file (#50.8).
"^DD",727.819,727.819,10,23,6,0)
  
"^DD",727.819,727.819,10,23,7,0)
For sites running Inpatient Medications V. 4.5 or higher:
"^DD",727.819,727.819,10,23,8,0)
Quantity is calculated by incrementing a counter based upon the value 
"^DD",727.819,727.819,10,23,9,0)
found in the TRANSACTION TYPE field (5) in the IV EXTRACT DATA file 
"^DD",727.819,727.819,10,23,10,0)
(#728.113). If TRANSACTION TYPE equals 1 for DISPENSED, the counter is 
"^DD",727.819,727.819,10,23,11,0)
incremented by 1; if 4 for CANCELED, no change is made to the counter; 
"^DD",727.819,727.819,10,23,12,0)
if 2 for RETURNED or 3 for DESTROYED, the counter is decremented by 1.
"^DD",727.819,727.819,10,"DT")
2960925
"^DD",727.819,727.819,11,0)
WARD^P44'^SC(^0;12^Q
"^DD",727.819,727.819,11,.1)
Ward
"^DD",727.819,727.819,11,3)
Enter the ward location for this patient.
"^DD",727.819,727.819,11,21,0)
^^1^1^2960925^^^^
"^DD",727.819,727.819,11,21,1,0)
The ward on which this patient's IV drug was administered.
"^DD",727.819,727.819,11,23,0)
^^16^16^2960925^^^^
"^DD",727.819,727.819,11,23,1,0)
For sites running a version of Inpatient Medications prior to V. 4.5:
"^DD",727.819,727.819,11,23,2,0)
Ward is derived from the WARD PTR field (4) in the PATIENT multiple 
"^DD",727.819,727.819,11,23,3,0)
(8) of the IV DRUG multiple (2) within the DATE multiple (2) of the 
"^DD",727.819,727.819,11,23,4,0)
IV STATS file (#50.8) which is a pointer to the WARD LOCATION file 
"^DD",727.819,727.819,11,23,5,0)
(#42). Using the ward pointer, the data is derived from the HOSPITAL 
"^DD",727.819,727.819,11,23,6,0)
LOCATION FILE POINTER field (44) in the WARD LOCATION file (#42) which 
"^DD",727.819,727.819,11,23,7,0)
is a pointer to the HOSPITAL LOCATION file (#44). For outpatient IVs, 
"^DD",727.819,727.819,11,23,8,0)
WARD is set to "CLI".
"^DD",727.819,727.819,11,23,9,0)
  
"^DD",727.819,727.819,11,23,10,0)
For sites running Inpatient Medications V. 4.5 or higher:
"^DD",727.819,727.819,11,23,11,0)
This field is initialized to .5, indicating an outpatient status. A 
"^DD",727.819,727.819,11,23,12,0)
call is made to IN5^VADPT using the patient IEN and the event date. 
"^DD",727.819,727.819,11,23,13,0)
If data is returned identifying an inpatient episode, the value of 
"^DD",727.819,727.819,11,23,14,0)
VAIP(5), ward location, is used to get the HOSPITAL LOCATION FILE 
"^DD",727.819,727.819,11,23,15,0)
POINTER field (44) in the WARD LOCATION file (#42) which is a pointer 
"^DD",727.819,727.819,11,23,16,0)
to the HOSPITAL LOCATION file (#44).
"^DD",727.819,727.819,11,"DT")
2960925
"^DD",727.819,727.819,13,0)
COST^NJ8,2^^0;13^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>10000)!(X<0) X
"^DD",727.819,727.819,13,.1)
Cost
"^DD",727.819,727.819,13,3)
Enter a dollar amount between 0 and 10000, 2 decimal digits.
"^DD",727.819,727.819,13,21,0)
^^1^1^2960925^^
"^DD",727.819,727.819,13,21,1,0)
Cost of drug dispensed for this patient.
"^DD",727.819,727.819,13,23,0)
^^10^10^2960925^^^
"^DD",727.819,727.819,13,23,1,0)
For sites running a version of Inpatient Medications prior to V. 4.5:
"^DD",727.819,727.819,13,23,2,0)
COST is derived from the QUANTITY field (10) in the IV DETAIL EXTRACT 
"^DD",727.819,727.819,13,23,3,0)
file (#727.819) multiplied by the price. Price comes from the AVERAGE 
"^DD",727.819,727.819,13,23,4,0)
DRUG COST PER UNIT field (4) of the IV DRUG multiple (2) within the DATE 
"^DD",727.819,727.819,13,23,5,0)
multiple (2) of the IV STATS file (#50.8).
"^DD",727.819,727.819,13,23,6,0)
  
"^DD",727.819,727.819,13,23,7,0)
For sites running Inpatient Medications V. 4.5 or higher:
"^DD",727.819,727.819,13,23,8,0)
Calculated by multiplying the COST field (12) in the IV EXTRACT DATA 
"^DD",727.819,727.819,13,23,9,0)
file (#728.113) by the QUANTITY field (10) in the IV DETAIL EXTRACT 
"^DD",727.819,727.819,13,23,10,0)
file (#727.819) above.
"^DD",727.819,727.819,13,"DT")
2960925
"^DD",727.819,727.819,14,0)
MOVEMENT FILE #^P405'^DGPM(^0;14^Q
"^DD",727.819,727.819,14,.1)
Movement File Number
"^DD",727.819,727.819,14,3)
Enter the patient movement number associated with this extract record.
"^DD",727.819,727.819,14,21,0)
^^1^1^2961017^^^
"^DD",727.819,727.819,14,21,1,0)
Current patient movement record associated with this extract record.
"^DD",727.819,727.819,14,23,0)
^^4^4^2961017^^^
"^DD",727.819,727.819,14,23,1,0)
A call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.819,727.819,14,23,2,0)
patient movement number (indicating inpatient status). This field is set 
"^DD",727.819,727.819,14,23,3,0)
to the value of VAIP(1), which is a pointer to the PATIENT MOVEMENT file 
"^DD",727.819,727.819,14,23,4,0)
(#405).
"^DD",727.819,727.819,14,"DT")
2960925
"^DD",727.819,727.819,15,0)
TREATING SPECIALTY^P42.4'^DIC(42.4,^0;15^Q
"^DD",727.819,727.819,15,.1)
Treating Specialty
"^DD",727.819,727.819,15,3)
Enter the name of the treating specialty associated with this extract record.
"^DD",727.819,727.819,15,21,0)
^^1^1^2960925^^^
"^DD",727.819,727.819,15,21,1,0)
The name of the treating specialty associated with this extract record.
"^DD",727.819,727.819,15,23,0)
^^6^6^2960925^^^
"^DD",727.819,727.819,15,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.819,727.819,15,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.819,727.819,15,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.819,727.819,15,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.819,727.819,15,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.819,727.819,15,23,6,0)
SPECIALTY file (#42.4).
"^DD",727.819,727.819,15,"DT")
2960925
"^DD",727.819,727.819,16,0)
NDC^F^^0;16^K:$L(X)>15!($L(X)<1) X
"^DD",727.819,727.819,16,.1)
National Drug Code
"^DD",727.819,727.819,16,3)
Your answer must be 1 to 15 characters in length.
"^DD",727.819,727.819,16,21,0)
^^1^1^2961127^^^
"^DD",727.819,727.819,16,21,1,0)
This is the National Drug Code for the drug/supply item in this order.
"^DD",727.819,727.819,16,23,0)
^^17^17^2961127^^^
"^DD",727.819,727.819,16,23,1,0)
For sites running a version of Inpatient Medications prior to V. 4.5:
"^DD",727.819,727.819,16,23,2,0)
Derived from the NDC field (31) in the DRUG file (#50) for the drug 
"^DD",727.819,727.819,16,23,3,0)
identified by the GENERIC DRUG field (1) in either the IV ADDITIVES 
"^DD",727.819,727.819,16,23,4,0)
file (#52.6) for additives or the IV SOLUTIONS file (#52.7) for 
"^DD",727.819,727.819,16,23,5,0)
solutions.
"^DD",727.819,727.819,16,23,6,0)
  
"^DD",727.819,727.819,16,23,7,0)
Using the "AC" cross reference on the IV STATS file (#50.8) and a 
"^DD",727.819,727.819,16,23,8,0)
^TMP( array built from the "AC" cross reference, GENERIC DRUG is 
"^DD",727.819,727.819,16,23,9,0)
derived from the following:
"^DD",727.819,727.819,16,23,10,0)
 the IV DRUG field (.01),
"^DD",727.819,727.819,16,23,11,0)
 the TYPE field (6), and
"^DD",727.819,727.819,16,23,12,0)
 the IEN of the additive or solution for the IV DRUG within the IV DRUG 
"^DD",727.819,727.819,16,23,13,0)
 multiple (2) of the DATE multiple (2) of the IV STATS file (#50.8).
"^DD",727.819,727.819,16,23,14,0)
  
"^DD",727.819,727.819,16,23,15,0)
For sites running Inpatient Medications V. 4.5 or higher:
"^DD",727.819,727.819,16,23,16,0)
Derived from the NDC field (31) in the DRUG file (#50) for the drug 
"^DD",727.819,727.819,16,23,17,0)
identified by the DRUG field (3) in the IV EXTRACT DATA file (#728.113).
"^DD",727.819,727.819,16,"DT")
2960925
"^DD",727.819,727.819,17,0)
INVESTIGATIONAL^S^I:INVESTIGATIONAL;^0;17^Q
"^DD",727.819,727.819,17,.1)
Investigational
"^DD",727.819,727.819,17,3)
Enter I if the drug is investigational.
"^DD",727.819,727.819,17,21,0)
^^2^2^2960925^^
"^DD",727.819,727.819,17,21,1,0)
This field contains the letter I if the drug in this record is 
"^DD",727.819,727.819,17,21,2,0)
investigational. Otherwise it is null.
"^DD",727.819,727.819,17,23,0)
^^2^2^2960925^^
"^DD",727.819,727.819,17,23,1,0)
Derived from the DEA, SPECIAL HDLG field (3) in the DRUG file (#50).
"^DD",727.819,727.819,17,23,2,0)
If the DEA, SPECIAL HDLG field contains an I, this field is set to I.
"^DD",727.819,727.819,17,"DT")
2960925
"^DD",727.819,727.819,18,0)
PHARMACY IV DISPENSING FEE^F^^0;18^K:$L(X)>2!($L(X)<1) X
"^DD",727.819,727.819,18,.1)
Pharmacy IV Dispensing Fee
"^DD",727.819,727.819,18,3)
Your answer must be 1 to 2 characters in length.
"^DD",727.819,727.819,18,21,0)
^^2^2^2960926^^^
"^DD",727.819,727.819,18,21,1,0)
The type of IV dispensed - A for admixture, C for chemotherapy, 
"^DD",727.819,727.819,18,21,2,0)
H for hyperal, P for piggyback, or S for syringe.
"^DD",727.819,727.819,18,23,0)
^^12^12^2960926^^
"^DD",727.819,727.819,18,23,1,0)
For sites running a version of Inpatient Medications prior to V. 4.5:
"^DD",727.819,727.819,18,23,2,0)
This field is set to null.
"^DD",727.819,727.819,18,23,3,0)
  
"^DD",727.819,727.819,18,23,4,0)
For sites running Inpatient Medications V. 4.5 or higher:
"^DD",727.819,727.819,18,23,5,0)
Derived from the TYPE field (11) of the IV EXTRACT DATA file (#728.113). 
"^DD",727.819,727.819,18,23,6,0)
TYPE is the type of IV dispensed - A for admixture, C for chemotherapy, 
"^DD",727.819,727.819,18,23,7,0)
H for hyperal, P for piggyback, or S for syringe.
"^DD",727.819,727.819,18,23,8,0)
  
"^DD",727.819,727.819,18,23,9,0)
If the TYPE is H for hyperal (TPN), the SOLUTION VOLUME is calculated. 
"^DD",727.819,727.819,18,23,10,0)
This field is sent as H1 if the volume is less than or equal 1000 ML, 
"^DD",727.819,727.819,18,23,11,0)
H2 if the volume is less than or equal 2000 ML, and H3 if the volume is 
"^DD",727.819,727.819,18,23,12,0)
greater than 2000 ML.
"^DD",727.819,727.819,18,"DT")
2960925
"^DD",727.819,727.819,19,0)
NEW FEEDER KEY^F^^0;19^K:$L(X)>20!($L(X)<19) X
"^DD",727.819,727.819,19,.1)
New Feeder Key
"^DD",727.819,727.819,19,3)
Your answer must be 19 to 20 characters in length. 
"^DD",727.819,727.819,19,21,0)
^^4^4^2960925^
"^DD",727.819,727.819,19,21,1,0)
The feeder key for the drug in this record. The feeder key is a nineteen 
"^DD",727.819,727.819,19,21,2,0)
digit number made up of the pointer to the NATIONAL DRUG file padded to 
"^DD",727.819,727.819,19,21,3,0)
four digits, the pointer to the VA Product Name padded to three digits, 
"^DD",727.819,727.819,19,21,4,0)
and the twelve digit National Drug Code.
"^DD",727.819,727.819,19,23,0)
^^12^12^2960925^
"^DD",727.819,727.819,19,23,1,0)
For sites running a version of Inpatient Medications prior to V. 4.5:
"^DD",727.819,727.819,19,23,2,0)
This field is set to null.
"^DD",727.819,727.819,19,23,3,0)
  
"^DD",727.819,727.819,19,23,4,0)
For sites running Inpatient Medications V. 4.5 or higher:
"^DD",727.819,727.819,19,23,5,0)
NEW FEEDER KEY is compiled for the drug identified by the DRUG field (3) 
"^DD",727.819,727.819,19,23,6,0)
in the IV EXTRACT DATA file (#728.113). It contains the NATIONAL 
"^DD",727.819,727.819,19,23,7,0)
DRUG FILE ENTRY field (20) from the DRUG file (#50) which is a pointer 
"^DD",727.819,727.819,19,23,8,0)
to the NATIONAL DRUG file (#50.6) padded to four digits. This is 
"^DD",727.819,727.819,19,23,9,0)
concatenated with the PSNDF VA PRODUCT NAME ENTRY field (22) from the 
"^DD",727.819,727.819,19,23,10,0)
DRUG file (#50) which is a pointer to the VA Product Name in the 
"^DD",727.819,727.819,19,23,11,0)
NATIONAL DRUG file (#50.6) padded to three digits. This is concatenated 
"^DD",727.819,727.819,19,23,12,0)
with the twelve digit NDC field (31) from the DRUG file (#50).
"^DD",727.819,727.819,19,"DT")
2960925
"^DD",727.819,727.819,20,0)
TOTAL DOSES PER DAY^F^^0;20^K:$L(X)>20!($L(X)<1) X
"^DD",727.819,727.819,20,.1)
Total Doses Per Day
"^DD",727.819,727.819,20,3)
Your answer must be 1 to 20 characters in length.
"^DD",727.819,727.819,20,21,0)
^^1^1^2960925^^
"^DD",727.819,727.819,20,21,1,0)
The total doses per day including units.
"^DD",727.819,727.819,20,23,0)
^^9^9^2960925^^
"^DD",727.819,727.819,20,23,1,0)
For sites running a version of Inpatient Medications prior to V. 4.5:
"^DD",727.819,727.819,20,23,2,0)
This field is set to null.
"^DD",727.819,727.819,20,23,3,0)
  
"^DD",727.819,727.819,20,23,4,0)
For sites running Inpatient Medications V. 4.5 or higher:
"^DD",727.819,727.819,20,23,5,0)
For additives, TOTAL DOSES PER DAY is derived from the ADDITIVE STRENGTH 
"^DD",727.819,727.819,20,23,6,0)
field (6) and the ADDITIVE STRENGTH UNITS field (7) from the IV EXTRACT 
"^DD",727.819,727.819,20,23,7,0)
DATA file (#728.113).
"^DD",727.819,727.819,20,23,8,0)
For solutions, TOTAL DOSES PER DAY is derived from the SOLUTION VOLUME
"^DD",727.819,727.819,20,23,9,0)
field (8), recorded in MLs, from the IV EXTRACT DATA file (#728.113).
"^DD",727.819,727.819,20,"DT")
2960925
"^DD",727.819,727.819,21,0)
PRIMARY CARE TEAM^F^^0;21^K:$L(X)>4!($L(X)<1) X
"^DD",727.819,727.819,21,.1)
Primary Care Team
"^DD",727.819,727.819,21,3)
Enter primary care team assigned to this patient.
"^DD",727.819,727.819,21,21,0)
^^1^1^2961104^^^^
"^DD",727.819,727.819,21,21,1,0)
The primary care team assigned to this patient.
"^DD",727.819,727.819,21,23,0)
^^11^11^2961104^^^^
"^DD",727.819,727.819,21,23,1,0)
DATE is defined by one of two methods. For sites running a version of 
"^DD",727.819,727.819,21,23,2,0)
Inpatient Medications prior to V. 4.5, DATE is defined by the DATE field 
"^DD",727.819,727.819,21,23,3,0)
(.01) of the DATE multiple (2) in the IV STATS file (#50.8). For sites 
"^DD",727.819,727.819,21,23,4,0)
running Inpatient Medications V. 4.5 or higher, DATE is defined by the 
"^DD",727.819,727.819,21,23,5,0)
DATE/TIME field (4) of the IV EXTRACT DATA file (#728.113).
"^DD",727.819,727.819,21,23,6,0)
  
"^DD",727.819,727.819,21,23,7,0)
Using the DATE and the patient pointer (DFN) stored in the PATIENT NO. - 
"^DD",727.819,727.819,21,23,8,0)
DFN field (4) in the IV DETAIL EXTRACT file (#727.819), a call is made 
"^DD",727.819,727.819,21,23,9,0)
to the Scheduling API, OUTPTTM^SDUTL3. The API returns the team's 
"^DD",727.819,727.819,21,23,10,0)
internal entry number and name from the TEAM file (#404.51). Only the 
"^DD",727.819,727.819,21,23,11,0)
pointer (IEN) to File 404.51 is transmitted.
"^DD",727.819,727.819,21,"DT")
2961104
"^DD",727.819,727.819,22,0)
PRIMARY CARE PROVIDER^F^^0;22^K:$L(X)>11!($L(X)<1) X
"^DD",727.819,727.819,22,.1)
Primary Care Provider
"^DD",727.819,727.819,22,3)
Enter primary care provider assigned to this patient.
"^DD",727.819,727.819,22,21,0)
^^1^1^2961104^^^^
"^DD",727.819,727.819,22,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.819,727.819,22,23,0)
^^11^11^2961104^^^
"^DD",727.819,727.819,22,23,1,0)
DATE is defined by one of two methods. For sites running a version of 
"^DD",727.819,727.819,22,23,2,0)
Inpatient Medications prior to V. 4.5, DATE is defined by the DATE field 
"^DD",727.819,727.819,22,23,3,0)
(.01) of the DATE multiple (2) in the IV STATS file (#50.8). For sites 
"^DD",727.819,727.819,22,23,4,0)
running Inpatient Medications V. 4.5 or higher, DATE is defined by the 
"^DD",727.819,727.819,22,23,5,0)
DATE/TIME field (4) of the IV EXTRACT DATA file (#728.113).
"^DD",727.819,727.819,22,23,6,0)
  
"^DD",727.819,727.819,22,23,7,0)
Using the DATE and the patient pointer (DFN) stored in the PATIENT NO. - 
"^DD",727.819,727.819,22,23,8,0)
DFN field (4) in the IV DETAIL EXTRACT file (#727.819), a call is made 
"^DD",727.819,727.819,22,23,9,0)
to the Scheduling API, OUTPTPR^SDUTL3. The API returns the provider's 
"^DD",727.819,727.819,22,23,10,0)
internal entry number and name from the NEW PERSON file (#200). Only the 
"^DD",727.819,727.819,22,23,11,0)
pointer (IEN) to File 200 is transmitted.
"^DD",727.819,727.819,22,"DT")
2961017
"^DD",727.819,727.819,23,0)
IVP TIME^FO^^0;23^K:$L(X)>6!($L(X)<6) X
"^DD",727.819,727.819,23,.1)
IVP Time
"^DD",727.819,727.819,23,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.819,727.819,23,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.819,727.819,23,3)
Answer must be 6 characters in length.
"^DD",727.819,727.819,23,21,0)
^^2^2^2970922^^^^
"^DD",727.819,727.819,23,21,1,0)
A 6-character numeric string representing the time of day when the IV
"^DD",727.819,727.819,23,21,2,0)
medication was dispensed.
"^DD",727.819,727.819,23,23,0)
^^12^12^2970922^^^^
"^DD",727.819,727.819,23,23,1,0)
Data source:
"^DD",727.819,727.819,23,23,2,0)
 
"^DD",727.819,727.819,23,23,3,0)
For sites running a version prior to Inpatient Medications v4.5 --
"^DD",727.819,727.819,23,23,4,0)
IV STATS file (#50.8); DATE sub-file (#50.803); DATE field (#.01)
"^DD",727.819,727.819,23,23,5,0)
 
"^DD",727.819,727.819,23,23,6,0)
For sites running Inpatient Medications v4.5 or higher:
"^DD",727.819,727.819,23,23,7,0)
IV EXTRACT DATA file (#728.113); DATE/TIME field (#4)
"^DD",727.819,727.819,23,23,8,0)
which is set by routine PSIVSTAT and is always the current date/time,
"^DD",727.819,727.819,23,23,9,0)
i.e., NOW.
"^DD",727.819,727.819,23,23,10,0)
 
"^DD",727.819,727.819,23,23,11,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.819,727.819,23,23,12,0)
cannot be determined, then "000300" is used as default.
"^DD",727.819,727.819,23,"DT")
2970924
"^DD",727.819,727.819,24,0)
ADMISSION DATE^FO^^0;24^K:$L(X)>8!($L(X)<8) X
"^DD",727.819,727.819,24,.1)
Admission Date
"^DD",727.819,727.819,24,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.819,727.819,24,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.819,727.819,24,3)
Answer must be 8 characters in length.
"^DD",727.819,727.819,24,21,0)
^^2^2^2970922^^^^
"^DD",727.819,727.819,24,21,1,0)
An 8-character numeric string that represents the Admission date for
"^DD",727.819,727.819,24,21,2,0)
IV medications dispensed to inpatients.
"^DD",727.819,727.819,24,23,0)
^^10^10^2971113^^^^
"^DD",727.819,727.819,24,23,1,0)
Data source:
"^DD",727.819,727.819,24,23,2,0)
 
"^DD",727.819,727.819,24,23,3,0)
IV EXTRACT DATA file (#728.113); DFN field (#1)
"^DD",727.819,727.819,24,23,4,0)
   then to PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.819,727.819,24,23,5,0)
 
"^DD",727.819,727.819,24,23,6,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.819,727.819,24,23,7,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.819,727.819,24,23,8,0)
then a default is used.  The default date value is the value of the 
"^DD",727.819,727.819,24,23,9,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.819,727.819,24,23,10,0)
Year 2000 compliant per vendor.
"^DD",727.819,727.819,24,"DT")
2970924
"^DD",727.819,727.819,25,0)
ADMISSION TIME^FO^^0;25^K:$L(X)>6!($L(X)<6) X
"^DD",727.819,727.819,25,.1)
Admission Time
"^DD",727.819,727.819,25,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.819,727.819,25,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.819,727.819,25,3)
Answer must be 6 characters in length.
"^DD",727.819,727.819,25,21,0)
^^2^2^2970922^^^^
"^DD",727.819,727.819,25,21,1,0)
A 6-character numeric string that represents the time of the patient's
"^DD",727.819,727.819,25,21,2,0)
Admission for IV medications dispensed to inpatients.
"^DD",727.819,727.819,25,23,0)
^^7^7^2971113^^^^
"^DD",727.819,727.819,25,23,1,0)
Data source:
"^DD",727.819,727.819,25,23,2,0)
 
"^DD",727.819,727.819,25,23,3,0)
IV EXTRACT DATA file (#728.113); DFN field (#1)
"^DD",727.819,727.819,25,23,4,0)
   then to PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.819,727.819,25,23,5,0)
 
"^DD",727.819,727.819,25,23,6,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.819,727.819,25,23,7,0)
cannot be determined, then "000300" is used as default.
"^DD",727.819,727.819,25,"DT")
2970924
"^DD",727.819,727.819,26,0)
DSS IDENTIFIER FOR ENCOUNTER^F^^0;26^K:$L(X)>6!($L(X)<6) X
"^DD",727.819,727.819,26,3)
Answer must be 6 characters in length.
"^DD",727.819,727.819,26,21,0)
^^1^1^2970922^
"^DD",727.819,727.819,26,21,1,0)
To be used for future development; currently set to null.
"^DD",727.819,727.819,26,23,0)
^^1^1^2970922^
"^DD",727.819,727.819,26,23,1,0)
For future development.
"^DD",727.819,727.819,26,"DT")
2970922
"^DD",727.82,727.82,0)
FIELD^^35^36
"^DD",727.82,727.82,0,"DDA")
N
"^DD",727.82,727.82,0,"DIK")
ECX820
"^DD",727.82,727.82,0,"DIKOLD")
ECX820
"^DD",727.82,727.82,0,"DT")
2970922
"^DD",727.82,727.82,0,"IX","AC",727.82,2)

"^DD",727.82,727.82,0,"IX","AINV",727.82,.01)

"^DD",727.82,727.82,0,"IX","AM",727.82,1)

"^DD",727.82,727.82,0,"NM","ADMISSION SETUP EXTRACT")

"^DD",727.82,727.82,0,"VRPK")
DSS EXTRACTS
"^DD",727.82,727.82,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.82,727.82,.01,.1)
Sequence Number
"^DD",727.82,727.82,.01,1,0)
^.1
"^DD",727.82,727.82,.01,1,1,0)
727.82^AINV^MUMPS
"^DD",727.82,727.82,.01,1,1,1)
S ^ECX(727.82,"AINV",-X,DA)=""
"^DD",727.82,727.82,.01,1,1,2)
K ^ECX(727.82,"AINV",-X,DA)
"^DD",727.82,727.82,.01,1,1,3)
DO NOT DELETE.
"^DD",727.82,727.82,.01,1,1,"%D",0)
^^3^3^2960808^^^
"^DD",727.82,727.82,.01,1,1,"%D",1,0)
This is an inverse entry cross reference.  It is used to find the
"^DD",727.82,727.82,.01,1,1,"%D",2,0)
last entry in the file.  It is essential for the management of the
"^DD",727.82,727.82,.01,1,1,"%D",3,0)
extract and the purge of extract data.
"^DD",727.82,727.82,.01,1,1,"DT")
2921016
"^DD",727.82,727.82,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",727.82,727.82,.01,21,0)
^^1^1^2961011^^^^
"^DD",727.82,727.82,.01,21,1,0)
The record number for this extract entry.
"^DD",727.82,727.82,.01,23,0)
^^1^1^2961011^^
"^DD",727.82,727.82,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",727.82,727.82,.01,"DT")
2961011
"^DD",727.82,727.82,1,0)
YEAR MONTH^FO^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.82,727.82,1,.1)
Year/Month
"^DD",727.82,727.82,1,1,0)
^.1
"^DD",727.82,727.82,1,1,1,0)
727.82^AM
"^DD",727.82,727.82,1,1,1,1)
S ^ECX(727.82,"AM",$E(X,1,30),DA)=""
"^DD",727.82,727.82,1,1,1,2)
K ^ECX(727.82,"AM",$E(X,1,30),DA)
"^DD",727.82,727.82,1,1,1,3)
DO NOT DELETE
"^DD",727.82,727.82,1,1,1,"%D",0)
^^3^3^2930623^^
"^DD",727.82,727.82,1,1,1,"%D",1,0)
This cross reference is essential for moving data into file 727.802 to
"^DD",727.82,727.82,1,1,1,"%D",2,0)
be transmitted to the DSS package.  DO NOT DELETE OR MODIFY.
"^DD",727.82,727.82,1,1,1,"%D",3,0)
 
"^DD",727.82,727.82,1,1,1,"DT")
2921226
"^DD",727.82,727.82,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.82,727.82,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.82,727.82,1,3)
Answer must be 6 characters in length.
"^DD",727.82,727.82,1,21,0)
^^2^2^2970922^^^^
"^DD",727.82,727.82,1,21,1,0)
A six character string representing the year and the month
"^DD",727.82,727.82,1,21,2,0)
for which this extract was performed.
"^DD",727.82,727.82,1,23,0)
^^1^1^2970922^^^^
"^DD",727.82,727.82,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.82,727.82,1,"DT")
2970924
"^DD",727.82,727.82,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.82,727.82,2,.1)
Extract Number
"^DD",727.82,727.82,2,1,0)
^.1
"^DD",727.82,727.82,2,1,1,0)
727.82^AC
"^DD",727.82,727.82,2,1,1,1)
S ^ECX(727.82,"AC",$E(X,1,30),DA)=""
"^DD",727.82,727.82,2,1,1,2)
K ^ECX(727.82,"AC",$E(X,1,30),DA)
"^DD",727.82,727.82,2,1,1,3)
DO NOT DELETE.
"^DD",727.82,727.82,2,1,1,"%D",0)
^^2^2^2960808^
"^DD",727.82,727.82,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data
"^DD",727.82,727.82,2,1,1,"%D",2,0)
in this file.
"^DD",727.82,727.82,2,1,1,"DT")
2910802
"^DD",727.82,727.82,2,3)
Enter the extract number for this extract.
"^DD",727.82,727.82,2,21,0)
^^2^2^2961011^^^^
"^DD",727.82,727.82,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727) for this 
"^DD",727.82,727.82,2,21,2,0)
extract.
"^DD",727.82,727.82,2,23,0)
^^2^2^2961011^^^^
"^DD",727.82,727.82,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is to
"^DD",727.82,727.82,2,23,2,0)
pick up the header for the mail message.
"^DD",727.82,727.82,2,"DT")
2961011
"^DD",727.82,727.82,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.82,727.82,3,.1)
Facility
"^DD",727.82,727.82,3,3)
Enter the station number where this extract was performed.
"^DD",727.82,727.82,3,21,0)
^^1^1^2961011^^^^
"^DD",727.82,727.82,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.82,727.82,3,23,0)
^^3^3^2961011^^^^
"^DD",727.82,727.82,3,23,1,0)
An indicator of the division where this event happened. It is derived
"^DD",727.82,727.82,3,23,2,0)
from the DIVISION field (.015) of the WARD LOCATION file (#42) which
"^DD",727.82,727.82,3,23,3,0)
points to the MEDICAL CENTER DIVISION file (#40.8).
"^DD",727.82,727.82,3,"DT")
2961015
"^DD",727.82,727.82,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.82,727.82,4,.1)
Patient No. - DFN
"^DD",727.82,727.82,4,3)
Enter the name of the patient for this extract record.
"^DD",727.82,727.82,4,21,0)
^^1^1^2961011^^^^
"^DD",727.82,727.82,4,21,1,0)
The name of the patient for this extract record.
"^DD",727.82,727.82,4,23,0)
^^3^3^2961016^
"^DD",727.82,727.82,4,23,1,0)
Pointer to the PATIENT file (#2). This data represents the patient DFN. 
"^DD",727.82,727.82,4,23,2,0)
Using the "ATID1" cross reference on the PATIENT MOVEMENT file (#405), 
"^DD",727.82,727.82,4,23,3,0)
the PATIENT NO. - DFN data is derived from the PATIENT field (.03).
"^DD",727.82,727.82,4,"DT")
2961015
"^DD",727.82,727.82,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.82,727.82,5,.1)
Social Security Number
"^DD",727.82,727.82,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.82,727.82,5,21,0)
^^1^1^2961011^^^^
"^DD",727.82,727.82,5,21,1,0)
The patient's social security number.
"^DD",727.82,727.82,5,23,0)
^^3^3^2961015^
"^DD",727.82,727.82,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.82,727.82,5,23,2,0)
in the ADMISSION SETUP EXTRACT file (#727.82), SSN data is derived from
"^DD",727.82,727.82,5,23,3,0)
the SOCIAL SECURITY NUMBER field (.09) in the PATIENT file (#2).
"^DD",727.82,727.82,5,"DT")
2961011
"^DD",727.82,727.82,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.82,727.82,6,.1)
Name
"^DD",727.82,727.82,6,3)
Your answer must be 4 characters in length.
"^DD",727.82,727.82,6,21,0)
^^1^1^2961011^^^^
"^DD",727.82,727.82,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.82,727.82,6,23,0)
^^4^4^2961015^
"^DD",727.82,727.82,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.82,727.82,6,23,2,0)
in the ADMISSION SETUP EXTRACT file (#727.82), NAME data is derived from
"^DD",727.82,727.82,6,23,3,0)
the NAME field (.01) in the PATIENT file (#2). The first four characters
"^DD",727.82,727.82,6,23,4,0)
of the first "," piece are used, padded with trailing spaces if necessary.
"^DD",727.82,727.82,6,"DT")
2961011
"^DD",727.82,727.82,7,0)
IN OUT PATIENT INDICATOR^P40.9'^DIC(40.9,^0;8^Q
"^DD",727.82,727.82,7,.1)
In Out Patient Indicator
"^DD",727.82,727.82,7,3)
Enter the appropriate inpatient or outpatient indicator.
"^DD",727.82,727.82,7,21,0)
^^2^2^2961011^^^^
"^DD",727.82,727.82,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this 
"^DD",727.82,727.82,7,21,2,0)
extract entry.
"^DD",727.82,727.82,7,23,0)
^^2^2^2961011^^^
"^DD",727.82,727.82,7,23,1,0)
For the Admission Setup extract this field is set to 3, indicating 
"^DD",727.82,727.82,7,23,2,0)
inpatient status in the LOCATION TYPE file (#40.9).
"^DD",727.82,727.82,7,"DT")
2961011
"^DD",727.82,727.82,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.82,727.82,8,.1)
Day
"^DD",727.82,727.82,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.82,727.82,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.82,727.82,8,3)
Answer must be 8 characters in length.
"^DD",727.82,727.82,8,21,0)
^^2^2^2970922^^^^
"^DD",727.82,727.82,8,21,1,0)
This 8-character string represents the date on which the admission
"^DD",727.82,727.82,8,21,2,0)
occurred.
"^DD",727.82,727.82,8,23,0)
^^9^9^2970923^^^^
"^DD",727.82,727.82,8,23,1,0)
Data source:
"^DD",727.82,727.82,8,23,2,0)
 
"^DD",727.82,727.82,8,23,3,0)
PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.82,727.82,8,23,4,0)
 
"^DD",727.82,727.82,8,23,5,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.82,727.82,8,23,6,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.82,727.82,8,23,7,0)
then a default is used.  The default date value is the value of the 
"^DD",727.82,727.82,8,23,8,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.82,727.82,8,23,9,0)
Year 2000 compliant per vendor.
"^DD",727.82,727.82,8,"DT")
2970924
"^DD",727.82,727.82,9,0)
PRIMARY CARE TEAM^F^^0;10^K:$L(X)>4!($L(X)<1) X
"^DD",727.82,727.82,9,.1)
Primary Care Team
"^DD",727.82,727.82,9,3)
Enter primary care team assigned to this patient.
"^DD",727.82,727.82,9,21,0)
^^1^1^2961030^^^^
"^DD",727.82,727.82,9,21,1,0)
The primary care team assigned to this patient.
"^DD",727.82,727.82,9,23,0)
^^6^6^2961030^^^^
"^DD",727.82,727.82,9,23,1,0)
Using the DATE/TIME field (.01) from the PATIENT MOVEMENT file (#405) 
"^DD",727.82,727.82,9,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) 
"^DD",727.82,727.82,9,23,3,0)
in the ADMISSION SETUP EXTRACT file (#727.82), a call is made to the 
"^DD",727.82,727.82,9,23,4,0)
Scheduling API, OUTPTTM^SDUTL3. The API returns the team's internal 
"^DD",727.82,727.82,9,23,5,0)
entry number and name from the TEAM file (#404.51). Only the pointer 
"^DD",727.82,727.82,9,23,6,0)
(IEN) to File 404.51 is transmitted.
"^DD",727.82,727.82,9,"DT")
2961030
"^DD",727.82,727.82,10,0)
SEX^S^M:MALE;F:FEMALE;^0;11^Q
"^DD",727.82,727.82,10,.1)
Sex
"^DD",727.82,727.82,10,3)
Enter the patient's sex.
"^DD",727.82,727.82,10,21,0)
^^1^1^2961015^^^^
"^DD",727.82,727.82,10,21,1,0)
Data is M if this patient is a male, or F if female.
"^DD",727.82,727.82,10,23,0)
^^3^3^2961015^
"^DD",727.82,727.82,10,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.82,727.82,10,23,2,0)
in the ADMISSION SETUP EXTRACT file (#727.82), this data is derived from
"^DD",727.82,727.82,10,23,3,0)
the SEX field (.02) in the PATIENT file (#2).
"^DD",727.82,727.82,10,"DT")
2961011
"^DD",727.82,727.82,11,0)
DATE OF BIRTH^FO^^0;12^K:$L(X)>8!($L(X)<8) X
"^DD",727.82,727.82,11,.1)
Date of Birth
"^DD",727.82,727.82,11,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.82,727.82,11,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.82,727.82,11,3)
Answer must be 8 characters in length.
"^DD",727.82,727.82,11,21,0)
^^2^2^2970922^^^^
"^DD",727.82,727.82,11,21,1,0)
The patient's date of birth between December 31,1870 and today's date
"^DD",727.82,727.82,11,21,2,0)
represented by an 8-character numeric string.
"^DD",727.82,727.82,11,23,0)
^^9^9^2971113^^^
"^DD",727.82,727.82,11,23,1,0)
Data source:
"^DD",727.82,727.82,11,23,2,0)
 
"^DD",727.82,727.82,11,23,3,0)
PATIENT MOVEMENT file (#405); PATIENT field (#.03)
"^DD",727.82,727.82,11,23,4,0)
   then to PATIENT file (#2); DATE OF BIRTH field (#.03)
"^DD",727.82,727.82,11,23,5,0)
 
"^DD",727.82,727.82,11,23,6,0)
If Date of Birth cannot be determined, then January 1, 1942, is
"^DD",727.82,727.82,11,23,7,0)
used as default.  The data element is always exactly 8 numberic
"^DD",727.82,727.82,11,23,8,0)
characters in length.  Format is YYYYMMDD.  Year 2000 compliant
"^DD",727.82,727.82,11,23,9,0)
per vendor.
"^DD",727.82,727.82,11,"DT")
2970924
"^DD",727.82,727.82,12,0)
RELIGION^P13'^DIC(13,^0;13^Q
"^DD",727.82,727.82,12,.1)
Religion
"^DD",727.82,727.82,12,3)
Enter the patient's religious preference.
"^DD",727.82,727.82,12,21,0)
^^1^1^2961011^^^
"^DD",727.82,727.82,12,21,1,0)
The current religious preference of this patient.
"^DD",727.82,727.82,12,23,0)
^^4^4^2961015^
"^DD",727.82,727.82,12,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.82,727.82,12,23,2,0)
in the ADMISSION SETUP EXTRACT file (#727.82), RELIGION data is derived
"^DD",727.82,727.82,12,23,3,0)
from the RELIGIOUS PREFERENCE field (.08) in the PATIENT file (#2). It is
"^DD",727.82,727.82,12,23,4,0)
a pointer to the RELIGION file (#13).
"^DD",727.82,727.82,12,"DT")
2961011
"^DD",727.82,727.82,13,0)
EMPLOYMENT STATUS^S^1:EMPLOYED FULL TIME;2:EMPLOYED PART TIME;3:NOT EMPLOYED;4:SELF EMPLOYED;5:RETIRED;6:ACTIVE DUTY MILITARY;9:UNKNOWN;^0;14^Q
"^DD",727.82,727.82,13,.1)
Employment Status
"^DD",727.82,727.82,13,3)
Select the appropriate employment status.
"^DD",727.82,727.82,13,21,0)
^^1^1^2961011^^
"^DD",727.82,727.82,13,21,1,0)
The patient's current employment status.
"^DD",727.82,727.82,13,23,0)
^^4^4^2961015^
"^DD",727.82,727.82,13,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.82,727.82,13,23,2,0)
in the ADMISSION EXTRACT file (#727.802), EMPLOYMENT STATUS data is
"^DD",727.82,727.82,13,23,3,0)
derived from the EMPLOYMENT STATUS field (.31115) in the PATIENT file
"^DD",727.82,727.82,13,23,4,0)
(#2).
"^DD",727.82,727.82,13,"DT")
2961011
"^DD",727.82,727.82,14,0)
HEALTH INSURANCE^S^Y:YES;N:NO;U:UNKNOWN;^0;15^Q
"^DD",727.82,727.82,14,.1)
Health Insurance
"^DD",727.82,727.82,14,3)
Select the appropriate health insurance status.
"^DD",727.82,727.82,14,21,0)
^^2^2^2961125^^^
"^DD",727.82,727.82,14,21,1,0)
Data is Y if the patient is covered by a health insurance policy, N if
"^DD",727.82,727.82,14,21,2,0)
the patient isn't covered by any policy, or U if unknown.
"^DD",727.82,727.82,14,23,0)
^^4^4^2961125^^
"^DD",727.82,727.82,14,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.82,727.82,14,23,2,0)
(4) in the ADMISSION EXTRACT file (#727.802), a call is made to the 
"^DD",727.82,727.82,14,23,3,0)
Integrated Billing API, INSURED^IBCNS1. The API returns 1 if the 
"^DD",727.82,727.82,14,23,4,0)
patient is insured or 0 if the patient is not insured.
"^DD",727.82,727.82,14,"DT")
2961011
"^DD",727.82,727.82,15,0)
STATE^F^^0;16^K:$L(X)>2!($L(X)<2) X
"^DD",727.82,727.82,15,.1)
State
"^DD",727.82,727.82,15,3)
Enter the VA STATE CODE for this patient.
"^DD",727.82,727.82,15,21,0)
^^1^1^2961011^^
"^DD",727.82,727.82,15,21,1,0)
The state in which the patient resides.
"^DD",727.82,727.82,15,23,0)
^^5^5^2961015^
"^DD",727.82,727.82,15,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.82,727.82,15,23,2,0)
in the ADMISSION SETUP EXTRACT file (#727.82), STATE data is derived from
"^DD",727.82,727.82,15,23,3,0)
the STATE field (.115) in the PATIENT file (#2) which points to the STATE
"^DD",727.82,727.82,15,23,4,0)
file (#5). For the STATE file entry, data transmitted is the two character
"^DD",727.82,727.82,15,23,5,0)
VA STATE CODE, field (2).
"^DD",727.82,727.82,15,"DT")
2961011
"^DD",727.82,727.82,16,0)
COUNTY^F^^0;17^K:$L(X)>3!($L(X)<3) X
"^DD",727.82,727.82,16,.1)
County
"^DD",727.82,727.82,16,3)
Enter the VA COUNTY CODE for this patient.
"^DD",727.82,727.82,16,21,0)
^^1^1^2961011^^^
"^DD",727.82,727.82,16,21,1,0)
County in which patient resides.
"^DD",727.82,727.82,16,23,0)
^^5^5^2961015^
"^DD",727.82,727.82,16,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.82,727.82,16,23,2,0)
in the ADMISSION SETUP EXTRACT file (#727.82), COUNTY data is derived from
"^DD",727.82,727.82,16,23,3,0)
the COUNTY field (.117) in the PATIENT file (#2). The data transmitted is
"^DD",727.82,727.82,16,23,4,0)
the three character VA COUNTY CODE, field (2) within the COUNTY field (3)
"^DD",727.82,727.82,16,23,5,0)
multiple of the STATE file (#5).
"^DD",727.82,727.82,16,"DT")
2961011
"^DD",727.82,727.82,17,0)
ZIP CODE^F^^0;18^K:$L(X)>5!($L(X)<5) X
"^DD",727.82,727.82,17,.1)
Zip Code
"^DD",727.82,727.82,17,3)
Your answer must be 5 characters in length.
"^DD",727.82,727.82,17,21,0)
^^1^1^2961011^^
"^DD",727.82,727.82,17,21,1,0)
Zip code for the city in which the patient resides.
"^DD",727.82,727.82,17,23,0)
^^3^3^2961015^
"^DD",727.82,727.82,17,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.82,727.82,17,23,2,0)
in the ADMISSION SETUP EXTRACT file (#727.82), ZIP CODE data is derived
"^DD",727.82,727.82,17,23,3,0)
from the ZIP CODE field (.116) in the PATIENT file (#2).
"^DD",727.82,727.82,17,"DT")
2961011
"^DD",727.82,727.82,18,0)
ELIGIBILITY^F^^0;19^K:$L(X)>1!($L(X)<1)!'(X?1U) X
"^DD",727.82,727.82,18,.1)
Eligibility
"^DD",727.82,727.82,18,3)
Your answer must be 1 character in length.
"^DD",727.82,727.82,18,21,0)
^^1^1^2961011^^^^
"^DD",727.82,727.82,18,21,1,0)
Appropriate eligibility code based on veteran or non-veteran status.
"^DD",727.82,727.82,18,23,0)
^^9^9^2961015^
"^DD",727.82,727.82,18,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.82,727.82,18,23,2,0)
in the ADMISSION SETUP EXTRACT file (#727.82), ELIGIBILITY data is derived
"^DD",727.82,727.82,18,23,3,0)
from the PRIMARY ELIGIBILITY CODE field (.361) in the PATIENT file (#2).
"^DD",727.82,727.82,18,23,4,0)
PRIMARY ELIGIBILITY CODE is a pointer to the ELIGIBILITY CODE file (#8).
"^DD",727.82,727.82,18,23,5,0)
The data is derived from the MAS ELIGIBILITY CODE field (8) in the
"^DD",727.82,727.82,18,23,6,0)
ELIGIBILITY CODE file (#8) which in turn is a pointer to the MAS
"^DD",727.82,727.82,18,23,7,0)
ELIGIBILITY CODE file (#8.1). The MAS eligibility code pointer value is
"^DD",727.82,727.82,18,23,8,0)
converted to an alpha character representative of it's number, i.e., 1
"^DD",727.82,727.82,18,23,9,0)
converts to A, 2 converts to B, etc.
"^DD",727.82,727.82,18,"DT")
2961011
"^DD",727.82,727.82,19,0)
VETERAN^S^Y:YES;N:NO;^0;20^Q
"^DD",727.82,727.82,19,.1)
Veteran
"^DD",727.82,727.82,19,3)
Select the appropriate veteran status for this patient.
"^DD",727.82,727.82,19,21,0)
^^1^1^2961011^^
"^DD",727.82,727.82,19,21,1,0)
Data is Y if this patient is a veteran, N if not.
"^DD",727.82,727.82,19,23,0)
^^3^3^2961015^
"^DD",727.82,727.82,19,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.82,727.82,19,23,2,0)
in the ADMISSION SETUP EXTRACT file (#727.82), VETERAN data is derived
"^DD",727.82,727.82,19,23,3,0)
from the VETERAN (Y/N)? field (1901) in the PATIENT file (#2).
"^DD",727.82,727.82,19,"DT")
2961011
"^DD",727.82,727.82,20,0)
VIETNAM^S^Y:YES;N:NO;U:UNKNOWN;^0;21^Q
"^DD",727.82,727.82,20,.1)
Vietnam
"^DD",727.82,727.82,20,3)
Select the appropriate Vietnam service status for this patient.
"^DD",727.82,727.82,20,21,0)
^^1^1^2961011^^
"^DD",727.82,727.82,20,21,1,0)
Data is Y if this patient served in Vietnam, N if not, or U if unknown.
"^DD",727.82,727.82,20,23,0)
^^4^4^2961015^
"^DD",727.82,727.82,20,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT  NO. - DFN field (4)
"^DD",727.82,727.82,20,23,2,0)
in the ADMISSION SETUP EXTRACT file (#727.82), VIETNAM data is derived
"^DD",727.82,727.82,20,23,3,0)
from the VIETNAM SERVICE INDICATED? field (.32101) in the PATIENT file
"^DD",727.82,727.82,20,23,4,0)
(#2).
"^DD",727.82,727.82,20,"DT")
2961011
"^DD",727.82,727.82,21,0)
AGENT ORANGE^S^Y:YES;N:NO;U:UNKNOWN;^0;22^Q
"^DD",727.82,727.82,21,.1)
Agent Orange
"^DD",727.82,727.82,21,3)
Select the appropriate agent orange status for this patient.
"^DD",727.82,727.82,21,21,0)
^^2^2^2961023^^^^
"^DD",727.82,727.82,21,21,1,0)
Data is Y if this patient was exposed to agent orange, N if not, 
"^DD",727.82,727.82,21,21,2,0)
or U if unknown.
"^DD",727.82,727.82,21,23,0)
^^4^4^2961023^^^
"^DD",727.82,727.82,21,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.82,727.82,21,23,2,0)
in the ADMISSION SETUP EXTRACT file (#727.82), AGENT ORANGE data is
"^DD",727.82,727.82,21,23,3,0)
derived from the AGENT ORANGE EXPOS. INDICATED? field (.32102) in the
"^DD",727.82,727.82,21,23,4,0)
PATIENT file (#2).
"^DD",727.82,727.82,21,"DT")
2961011
"^DD",727.82,727.82,22,0)
RADIATION^S^Y:YES;N:NO;U:UNKNOWN;^0;23^Q
"^DD",727.82,727.82,22,.1)
Radiation
"^DD",727.82,727.82,22,3)
Select the appropriate radiation status for this patient.
"^DD",727.82,727.82,22,21,0)
^^2^2^2961016^^^
"^DD",727.82,727.82,22,21,1,0)
Data is Y if this patient claims exposure to ionizing radiation, N if 
"^DD",727.82,727.82,22,21,2,0)
not, or U if unknown.
"^DD",727.82,727.82,22,23,0)
^^4^4^2961016^^
"^DD",727.82,727.82,22,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.82,727.82,22,23,2,0)
in the ADMISSION SETUP EXTRACT file (#727.82), RADIATION data is derived
"^DD",727.82,727.82,22,23,3,0)
from the RADIATION EXPOSURE INDICATED? field (.32103) in the PATIENT file
"^DD",727.82,727.82,22,23,4,0)
(#2).
"^DD",727.82,727.82,22,"DT")
2961011
"^DD",727.82,727.82,23,0)
POW^S^Y:YES;N:NO;U:UNKNOWN;^0;24^Q
"^DD",727.82,727.82,23,.1)
Prisoner of War
"^DD",727.82,727.82,23,3)
Select the appropriate POW status for this patient.
"^DD",727.82,727.82,23,21,0)
^^2^2^2961011^^
"^DD",727.82,727.82,23,21,1,0)
Data is Y if this patient was confined as a prisoner of war, N if not,
"^DD",727.82,727.82,23,21,2,0)
or U if unknown.
"^DD",727.82,727.82,23,23,0)
^^3^3^2961015^
"^DD",727.82,727.82,23,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.82,727.82,23,23,2,0)
in the ADMISSION SETUP EXTRACT file (#727.82), POW data is derived from
"^DD",727.82,727.82,23,23,3,0)
the POW STATUS INDICATED? field (.525) in the PATIENT file (#2).
"^DD",727.82,727.82,23,"DT")
2961011
"^DD",727.82,727.82,24,0)
PERIOD OF SERVICE^F^^0;25^K:$L(X)>1!($L(X)<1) X
"^DD",727.82,727.82,24,.1)
Period of Service
"^DD",727.82,727.82,24,3)
Enter the period of service code from the PERIOD OF SERVICE file (#21).
"^DD",727.82,727.82,24,21,0)
^^2^2^2961011^^^
"^DD",727.82,727.82,24,21,1,0)
The period of service which best classifies this patient based on
"^DD",727.82,727.82,24,21,2,0)
eligibility code.
"^DD",727.82,727.82,24,23,0)
^^7^7^2961015^
"^DD",727.82,727.82,24,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.82,727.82,24,23,2,0)
in the ADMISSION SETUP EXTRACT file (#727.82), PERIOD OF SERVICE data is
"^DD",727.82,727.82,24,23,3,0)
derived from the PERIOD OF SERVICE field (.323) in the PATIENT file (#2).
"^DD",727.82,727.82,24,23,4,0)
This field is a pointer to the PERIOD OF SERVICE file (#21). Using the
"^DD",727.82,727.82,24,23,5,0)
period of service pointer, the data is derived from the CODE field (.03)
"^DD",727.82,727.82,24,23,6,0)
in the PERIOD OF SERVICE file (#21). This code is a single alpha numeric
"^DD",727.82,727.82,24,23,7,0)
character.
"^DD",727.82,727.82,24,"DT")
2961011
"^DD",727.82,727.82,25,0)
MEANS TEST^S^A:CATEGORY A;B:CATEGORY B;C:CATEGORY C;P:PENDING ADJUDICATION;R:REQUIRES MEANS TEST;N:MEANS TEST NOT REQUIRED;E:EXEMPT;I:INCOMPLETE;L:NO LONGER APPLICABLE;M:NON-EXEMPT;^0;26^Q
"^DD",727.82,727.82,25,.1)
Means Test
"^DD",727.82,727.82,25,3)
Select the appropriate means test category.
"^DD",727.82,727.82,25,21,0)
^^1^1^2961011^^^^
"^DD",727.82,727.82,25,21,1,0)
The current means test category for this patient.
"^DD",727.82,727.82,25,23,0)
^^6^6^2961015^
"^DD",727.82,727.82,25,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.82,727.82,25,23,2,0)
in the ADMISSION SETUP EXTRACT file (#727.82), MEANS TEST data is derived
"^DD",727.82,727.82,25,23,3,0)
from the CURRENT MEANS TEST STATUS field (.14) in the PATIENT file (#2).
"^DD",727.82,727.82,25,23,4,0)
This field is a pointer to the MEANS TEST STATUS file (#408.32).  Using
"^DD",727.82,727.82,25,23,5,0)
the means test pointer, the data is derived from the CODE field (.02) in
"^DD",727.82,727.82,25,23,6,0)
the MEANS TEST STATUS file (#408.32).
"^DD",727.82,727.82,25,"DT")
2961024
"^DD",727.82,727.82,26,0)
MARITAL STATUS^P11'^DIC(11,^0;27^Q
"^DD",727.82,727.82,26,.1)
Marital Status
"^DD",727.82,727.82,26,3)
Enter the marital status for this patient.
"^DD",727.82,727.82,26,21,0)
^^1^1^2961011^^
"^DD",727.82,727.82,26,21,1,0)
Current marital status for this patient.
"^DD",727.82,727.82,26,23,0)
^^4^4^2961015^
"^DD",727.82,727.82,26,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.82,727.82,26,23,2,0)
in the ADMISSION SETUP EXTRACT file (#727.82), MARITAL STATUS data is
"^DD",727.82,727.82,26,23,3,0)
derived from the MARITAL STATUS field (.05) in the PATIENT file (#2).
"^DD",727.82,727.82,26,23,4,0)
MARITAL STATUS is a pointer to the MARITAL STATUS file (#11).
"^DD",727.82,727.82,26,"DT")
2961011
"^DD",727.82,727.82,27,0)
WARD^P44'^SC(^0;28^Q
"^DD",727.82,727.82,27,.1)
Ward
"^DD",727.82,727.82,27,3)
Enter the current ward location for this patient.
"^DD",727.82,727.82,27,21,0)
^^1^1^2961015^^^
"^DD",727.82,727.82,27,21,1,0)
Current ward for this patient.
"^DD",727.82,727.82,27,23,0)
^^8^8^2961015^
"^DD",727.82,727.82,27,23,1,0)
Using the "ATID1" cross reference on the PATIENT MOVEMENT file (#405) 
"^DD",727.82,727.82,27,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) in
"^DD",727.82,727.82,27,23,3,0)
the ADMISSION SETUP EXTRACT file (#727.82), WARD data is derived from the
"^DD",727.82,727.82,27,23,4,0)
WARD LOCATION field (.06) in the PATIENT MOVEMENT file (#405). This ward
"^DD",727.82,727.82,27,23,5,0)
data is a pointer to the WARD LOCATION file (#42). Using the ward pointer,
"^DD",727.82,727.82,27,23,6,0)
the data is derived from the HOSPITAL LOCATION FILE POINTER field (44) in
"^DD",727.82,727.82,27,23,7,0)
the WARD LOCATION file (#42) which is a pointer to the HOSPITAL LOCATION
"^DD",727.82,727.82,27,23,8,0)
file (#44).
"^DD",727.82,727.82,27,"DT")
2961011
"^DD",727.82,727.82,28,0)
TREATING SPECIALTY^P42.4'^DIC(42.4,^0;29^Q
"^DD",727.82,727.82,28,.1)
Treating Specialty
"^DD",727.82,727.82,28,3)
Enter the name of the treating specialty associated with this extract record.
"^DD",727.82,727.82,28,21,0)
^^1^1^2961015^^^^
"^DD",727.82,727.82,28,21,1,0)
The name of the treating specialty associated with this extract record.
"^DD",727.82,727.82,28,23,0)
^^8^8^2961015^
"^DD",727.82,727.82,28,23,1,0)
Using the "ATID1" cross reference on the PATIENT MOVEMENT file (#405) 
"^DD",727.82,727.82,28,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) in
"^DD",727.82,727.82,28,23,3,0)
the ADMISSION SETUP EXTRACT file (#727.82), TREATING SPECIALTY data is
"^DD",727.82,727.82,28,23,4,0)
derived from the FACILITY TREATING SPECIALTY field (.09) in the PATIENT
"^DD",727.82,727.82,28,23,5,0)
MOVEMENT file (#405). This facility treating specialty data is a pointer
"^DD",727.82,727.82,28,23,6,0)
to the FACILITY TREATING SPECIALTY file (#45.7). Using the SPECIALTY field
"^DD",727.82,727.82,28,23,7,0)
(1) in the FACILITY TREATING SPECIALTY file (#45.7), the pointer to the
"^DD",727.82,727.82,28,23,8,0)
SPECIALTY file (#42.4) is obtained.
"^DD",727.82,727.82,28,"DT")
2960918
"^DD",727.82,727.82,29,0)
ATTENDING PHYSICIAN^F^^0;30^K:$L(X)>11!($L(X)<1) X
"^DD",727.82,727.82,29,.1)
Attending Physician
"^DD",727.82,727.82,29,3)
Enter attending physician for this patient.
"^DD",727.82,727.82,29,21,0)
^^1^1^2961025^^^^
"^DD",727.82,727.82,29,21,1,0)
The attending physician assigned to this patient with this movement.
"^DD",727.82,727.82,29,23,0)
^^6^6^2961025^^
"^DD",727.82,727.82,29,23,1,0)
Using the "ATID1" cross reference on the PATIENT MOVEMENT file (#405) 
"^DD",727.82,727.82,29,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) in
"^DD",727.82,727.82,29,23,3,0)
the ADMISSION SETUP EXTRACT file (#727.82), ATTENDING PHYSICIAN data is
"^DD",727.82,727.82,29,23,4,0)
derived from the ATTENDING PHYSICIAN field (.19) in the PATIENT MOVEMENT
"^DD",727.82,727.82,29,23,5,0)
file (#405). This attending physician data is a pointer to the NEW PERSON
"^DD",727.82,727.82,29,23,6,0)
file (#200). This data is stored as "2"_pointer value.
"^DD",727.82,727.82,29,"DT")
2961015
"^DD",727.82,727.82,30,0)
EPISODE NUMBER^P405'^DGPM(^0;31^Q
"^DD",727.82,727.82,30,.1)
Episode Number
"^DD",727.82,727.82,30,3)
Enter the current movement number for this patient.
"^DD",727.82,727.82,30,21,0)
^^1^1^2961015^^^
"^DD",727.82,727.82,30,21,1,0)
Current movement number for this patient.
"^DD",727.82,727.82,30,23,0)
^^6^6^2961015^
"^DD",727.82,727.82,30,23,1,0)
Pointer to the PATIENT MOVEMENT file (#405). Using the "ATID1" cross 
"^DD",727.82,727.82,30,23,2,0)
reference on the PATIENT MOVEMENT file (#405) and the patient pointer 
"^DD",727.82,727.82,30,23,3,0)
(DFN) stored in the PATIENT NO. - DFN field (4) in the ADMISSION SETUP
"^DD",727.82,727.82,30,23,4,0)
EXTRACT file (#727.82), EPISODE NUMBER is the movement number (IEN)
"^DD",727.82,727.82,30,23,5,0)
associated with the PATIENT field (.03) in the PATIENT MOVEMENT file
"^DD",727.82,727.82,30,23,6,0)
(#405).
"^DD",727.82,727.82,30,"DT")
2961011
"^DD",727.82,727.82,31,0)
DRG^P80.2'^ICD(^0;32^Q
"^DD",727.82,727.82,31,3)
Enter the appropriate DRG for this patient.
"^DD",727.82,727.82,31,21,0)
^^1^1^2961015^^^^
"^DD",727.82,727.82,31,21,1,0)
Current DRG for this patient with this movement.
"^DD",727.82,727.82,31,23,0)
^^7^7^2961015^
"^DD",727.82,727.82,31,23,1,0)
Using the "ATID1" cross reference on the PATIENT MOVEMENT file (#405) 
"^DD",727.82,727.82,31,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) in
"^DD",727.82,727.82,31,23,3,0)
the ADMISSION SETUP EXTRACT file (#727.82), DRG data is derived from the
"^DD",727.82,727.82,31,23,4,0)
PTF ENTRY field (.16) in PATIENT MOVEMENT file (#405). This PTF entry data
"^DD",727.82,727.82,31,23,5,0)
is a pointer to the PTF file (#45). Uses the TRANSFER DRG field (20)
"^DD",727.82,727.82,31,23,6,0)
within the 501 field (50) multiple in the PTF file (#45) to obtain the
"^DD",727.82,727.82,31,23,7,0)
pointer value to the DRG file (#80.2).
"^DD",727.82,727.82,31,"DT")
2910803
"^DD",727.82,727.82,32,0)
DIAGNOSIS^F^^0;33^K:$L(X)>7!($L(X)<1) X
"^DD",727.82,727.82,32,.1)
Diagnosis
"^DD",727.82,727.82,32,3)
Your answer must be 1 to 7 characters in length.
"^DD",727.82,727.82,32,21,0)
^^1^1^2961015^^^^
"^DD",727.82,727.82,32,21,1,0)
ICD diagnosis for this patient.
"^DD",727.82,727.82,32,23,0)
^^9^9^2961015^
"^DD",727.82,727.82,32,23,1,0)
Using the "ATID1" cross reference on the PATIENT MOVEMENT file (#405) 
"^DD",727.82,727.82,32,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) in
"^DD",727.82,727.82,32,23,3,0)
the ADMISSION SETUP EXTRACT file (#727.82), DIAGNOSIS data is derived from
"^DD",727.82,727.82,32,23,4,0)
the PTF ENTRY field (.16) in the PATIENT MOVEMENT file (#405). This PTF
"^DD",727.82,727.82,32,23,5,0)
entry data is a pointer to the PTF file (#45). Uses the ICD 1 field (5)
"^DD",727.82,727.82,32,23,6,0)
within the 501 field (50) multiple in the PTF file (#45) to obtain the
"^DD",727.82,727.82,32,23,7,0)
pointer value to the ICD DIAGNOSIS file (#80). This ICD diagnosis pointer
"^DD",727.82,727.82,32,23,8,0)
value is used to pull the DIAGNOSIS data from the CODE NUMBER field (.01)
"^DD",727.82,727.82,32,23,9,0)
in the ICD DIAGNOSIS file (#80).
"^DD",727.82,727.82,32,"DT")
2961011
"^DD",727.82,727.82,33,0)
TIME^FO^^0;34^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.82,727.82,33,.1)
Time
"^DD",727.82,727.82,33,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.82,727.82,33,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.82,727.82,33,3)
Answer must be 6 characters in length.
"^DD",727.82,727.82,33,21,0)
^^2^2^2970922^^^
"^DD",727.82,727.82,33,21,1,0)
A 6-character numeric string which represents the time of day at
"^DD",727.82,727.82,33,21,2,0)
which the admission occurred.
"^DD",727.82,727.82,33,23,0)
^^6^6^2970922^^^
"^DD",727.82,727.82,33,23,1,0)
Data source:
"^DD",727.82,727.82,33,23,2,0)
 
"^DD",727.82,727.82,33,23,3,0)
PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.82,727.82,33,23,4,0)
 
"^DD",727.82,727.82,33,23,5,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.82,727.82,33,23,6,0)
cannot be determined, then "000300" is used as default.
"^DD",727.82,727.82,33,"DT")
2970924
"^DD",727.82,727.82,34,0)
PRIMARY CARE PROVIDER^F^^0;35^K:$L(X)>11!($L(X)<1) X
"^DD",727.82,727.82,34,.1)
Primary Care Provider
"^DD",727.82,727.82,34,3)
Enter primary care provider assigned to this patient.
"^DD",727.82,727.82,34,21,0)
^^1^1^2961030^^^
"^DD",727.82,727.82,34,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.82,727.82,34,23,0)
^^6^6^2961030^^
"^DD",727.82,727.82,34,23,1,0)
Using the DATE/TIME field (.01) from the PATIENT MOVEMENT file (#405) 
"^DD",727.82,727.82,34,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) 
"^DD",727.82,727.82,34,23,3,0)
in the ADMISSION SETUP EXTRACT file (#727.82), a call is made to the 
"^DD",727.82,727.82,34,23,4,0)
Scheduling API, OUTPTPR^SDUTL3. The API returns the provider's internal 
"^DD",727.82,727.82,34,23,5,0)
entry number and name from the NEW PERSON file (#200). Only the pointer 
"^DD",727.82,727.82,34,23,6,0)
(IEN) to File 200 is transmitted.
"^DD",727.82,727.82,34,"DT")
2961015
"^DD",727.82,727.82,35,0)
RACE^F^^0;36^K:$L(X)>1!($L(X)<1) X
"^DD",727.82,727.82,35,.1)
Race
"^DD",727.82,727.82,35,3)
Enter race ABBREVIATION for this patient.
"^DD",727.82,727.82,35,21,0)
^^1^1^2961025^^
"^DD",727.82,727.82,35,21,1,0)
Race ABBREVIATION for this patient.
"^DD",727.82,727.82,35,23,0)
^^3^3^2961025^
"^DD",727.82,727.82,35,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.82,727.82,35,23,2,0)
(4), RACE data is shown as the ABBREVIATION field (2) of the RACE file 
"^DD",727.82,727.82,35,23,3,0)
(#10) entry pointed to by the RACE field (.06) in the PATIENT file (#2).
"^DD",727.82,727.82,35,"DT")
2961025
"^DD",727.821,727.821,0)
FIELD^^21^22
"^DD",727.821,727.821,0,"DIK")
ECX821
"^DD",727.821,727.821,0,"DIKOLD")
ECX821
"^DD",727.821,727.821,0,"DT")
2970922
"^DD",727.821,727.821,0,"IX","AC",727.821,2)

"^DD",727.821,727.821,0,"IX","AINV",727.821,.01)

"^DD",727.821,727.821,0,"IX","AM",727.821,1)

"^DD",727.821,727.821,0,"NM","PHYSICAL MOVEMENT SETUP EXTRACT")

"^DD",727.821,727.821,0,"VRPK")
DSS EXTRACTS
"^DD",727.821,727.821,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.821,727.821,.01,.1)
Sequence Number
"^DD",727.821,727.821,.01,1,0)
^.1
"^DD",727.821,727.821,.01,1,1,0)
727.821^AINV^MUMPS
"^DD",727.821,727.821,.01,1,1,1)
S ^ECX(727.821,"AINV",-X,DA)=""
"^DD",727.821,727.821,.01,1,1,2)
K ^ECX(727.821,"AINV",-X,DA)
"^DD",727.821,727.821,.01,1,1,3)
DO NOT DELETE.
"^DD",727.821,727.821,.01,1,1,"%D",0)
^^3^3^2960808^^
"^DD",727.821,727.821,.01,1,1,"%D",1,0)
This is an inverse entry cross reference.  It is used to find the
"^DD",727.821,727.821,.01,1,1,"%D",2,0)
last entry in the file.  It is essential for the management of the
"^DD",727.821,727.821,.01,1,1,"%D",3,0)
extract and the purge of extract data.
"^DD",727.821,727.821,.01,1,1,"DT")
2921016
"^DD",727.821,727.821,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",727.821,727.821,.01,21,0)
^^1^1^2961015^^^^
"^DD",727.821,727.821,.01,21,1,0)
The record number for this extract entry.
"^DD",727.821,727.821,.01,23,0)
^^1^1^2961015^^^
"^DD",727.821,727.821,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",727.821,727.821,.01,"DT")
2961015
"^DD",727.821,727.821,1,0)
YEAR MONTH^FO^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.821,727.821,1,.1)
Year/Month
"^DD",727.821,727.821,1,1,0)
^.1
"^DD",727.821,727.821,1,1,1,0)
727.821^AM
"^DD",727.821,727.821,1,1,1,1)
S ^ECX(727.821,"AM",$E(X,1,30),DA)=""
"^DD",727.821,727.821,1,1,1,2)
K ^ECX(727.821,"AM",$E(X,1,30),DA)
"^DD",727.821,727.821,1,1,1,3)
DO NOT DELETE
"^DD",727.821,727.821,1,1,1,"%D",0)
^^5^5^2921226^
"^DD",727.821,727.821,1,1,1,"%D",1,0)
This cross reference is essential for moving data from this file to file
"^DD",727.821,727.821,1,1,1,"%D",2,0)
727.808 to be transfered to the DSS software.
"^DD",727.821,727.821,1,1,1,"%D",3,0)
 
"^DD",727.821,727.821,1,1,1,"%D",4,0)
DO NO DELETE OR MODIFY.
"^DD",727.821,727.821,1,1,1,"%D",5,0)
 
"^DD",727.821,727.821,1,1,1,"DT")
2921226
"^DD",727.821,727.821,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.821,727.821,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.821,727.821,1,3)
Answer must be 6 characters in length.
"^DD",727.821,727.821,1,21,0)
^^2^2^2970922^^^^
"^DD",727.821,727.821,1,21,1,0)
A six character numeric string representing the year and the month
"^DD",727.821,727.821,1,21,2,0)
for which this extract was performed.
"^DD",727.821,727.821,1,23,0)
^^1^1^2970922^^^^
"^DD",727.821,727.821,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.821,727.821,1,"DT")
2970924
"^DD",727.821,727.821,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.821,727.821,2,.1)
Extract Number
"^DD",727.821,727.821,2,1,0)
^.1
"^DD",727.821,727.821,2,1,1,0)
727.821^AC
"^DD",727.821,727.821,2,1,1,1)
S ^ECX(727.821,"AC",$E(X,1,30),DA)=""
"^DD",727.821,727.821,2,1,1,2)
K ^ECX(727.821,"AC",$E(X,1,30),DA)
"^DD",727.821,727.821,2,1,1,3)
DO NOT DELETE.
"^DD",727.821,727.821,2,1,1,"%D",0)
^^2^2^2960808^
"^DD",727.821,727.821,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data
"^DD",727.821,727.821,2,1,1,"%D",2,0)
in this file.
"^DD",727.821,727.821,2,1,1,"DT")
2910802
"^DD",727.821,727.821,2,3)
Enter the extract number for this extract.
"^DD",727.821,727.821,2,21,0)
^^2^2^2961015^^^^
"^DD",727.821,727.821,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727) for this 
"^DD",727.821,727.821,2,21,2,0)
extract.
"^DD",727.821,727.821,2,23,0)
^^2^2^2961015^^^^
"^DD",727.821,727.821,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is to
"^DD",727.821,727.821,2,23,2,0)
pick up the header for the mail message.
"^DD",727.821,727.821,2,"DT")
2961015
"^DD",727.821,727.821,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.821,727.821,3,.1)
Facility
"^DD",727.821,727.821,3,3)
Enter the station number where this extract was performed.
"^DD",727.821,727.821,3,21,0)
^^1^1^2961015^^^^
"^DD",727.821,727.821,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.821,727.821,3,23,0)
^^3^3^2961015^^^^
"^DD",727.821,727.821,3,23,1,0)
An indicator of the division where this event happened.  It is derived
"^DD",727.821,727.821,3,23,2,0)
from the DIVISION field (.015) of the WARD LOCATION file (#42) which
"^DD",727.821,727.821,3,23,3,0)
points to the MEDICAL CENTER DIVISION file (#40.8).
"^DD",727.821,727.821,3,"DT")
2961016
"^DD",727.821,727.821,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.821,727.821,4,.1)
Patient No. - DFN
"^DD",727.821,727.821,4,3)
Enter the name of the patient for this extract record.
"^DD",727.821,727.821,4,21,0)
^^1^1^2961016^^^^
"^DD",727.821,727.821,4,21,1,0)
The name of the patient for this extract record.
"^DD",727.821,727.821,4,23,0)
^^3^3^2961016^^
"^DD",727.821,727.821,4,23,1,0)
Pointer to the PATIENT file (#2). This data represents the patient DFN. 
"^DD",727.821,727.821,4,23,2,0)
Using the "ATID1" cross reference on the PATIENT MOVEMENT file (#405), 
"^DD",727.821,727.821,4,23,3,0)
the PATIENT NO. - DFN data is derived from the PATIENT field (.03).
"^DD",727.821,727.821,4,"DT")
2961016
"^DD",727.821,727.821,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.821,727.821,5,.1)
Social Security Number
"^DD",727.821,727.821,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.821,727.821,5,21,0)
^^1^1^2961016^^^^
"^DD",727.821,727.821,5,21,1,0)
The patient's social security number.
"^DD",727.821,727.821,5,23,0)
^^4^4^2961016^
"^DD",727.821,727.821,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.821,727.821,5,23,2,0)
in the PHYSICAL MOVEMENT SETUP EXTRACT file (#727.821), SSN data is
"^DD",727.821,727.821,5,23,3,0)
derived from the SOCIAL SECURITY NUMBER field (.09) in the PATIENT file
"^DD",727.821,727.821,5,23,4,0)
(#2).
"^DD",727.821,727.821,5,"DT")
2961015
"^DD",727.821,727.821,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.821,727.821,6,.1)
Name
"^DD",727.821,727.821,6,3)
Your answer must be 4 characters in length.
"^DD",727.821,727.821,6,21,0)
^^1^1^2961016^^^^
"^DD",727.821,727.821,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.821,727.821,6,23,0)
^^5^5^2961016^
"^DD",727.821,727.821,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.821,727.821,6,23,2,0)
in the PHYSICAL MOVEMENT SETUP EXTRACT file (#727.821), NAME data is
"^DD",727.821,727.821,6,23,3,0)
derived from the NAME field (.01) in the PATIENT file (#2). The first four
"^DD",727.821,727.821,6,23,4,0)
characters of the first "," piece are used, padded with trailing spaces if
"^DD",727.821,727.821,6,23,5,0)
necessary.
"^DD",727.821,727.821,6,"DT")
2961015
"^DD",727.821,727.821,7,0)
IN OUT PATIENT INDICATOR^P40.9'^DIC(40.9,^0;8^Q
"^DD",727.821,727.821,7,.1)
In Out Patient Indicator
"^DD",727.821,727.821,7,3)
Enter the appropriate inpatient or outpatient indicator.
"^DD",727.821,727.821,7,21,0)
^^2^2^2961015^^^^
"^DD",727.821,727.821,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this 
"^DD",727.821,727.821,7,21,2,0)
extract entry.
"^DD",727.821,727.821,7,23,0)
^^4^4^2961015^^^^
"^DD",727.821,727.821,7,23,1,0)
This field is initialized to a 1, indicating an outpatient status. If 
"^DD",727.821,727.821,7,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.821,727.821,7,23,3,0)
patient movement number, then the field is reset to a 3 indicating 
"^DD",727.821,727.821,7,23,4,0)
inpatient status.
"^DD",727.821,727.821,7,"DT")
2961015
"^DD",727.821,727.821,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.821,727.821,8,.1)
Day
"^DD",727.821,727.821,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.821,727.821,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.821,727.821,8,3)
Answer must be 8 characters in length.
"^DD",727.821,727.821,8,21,0)
^^2^2^2970922^^^^
"^DD",727.821,727.821,8,21,1,0)
This 8-character numeric string represents the date of the physical
"^DD",727.821,727.821,8,21,2,0)
movement.
"^DD",727.821,727.821,8,23,0)
^^9^9^2970923^^^^
"^DD",727.821,727.821,8,23,1,0)
Data source:
"^DD",727.821,727.821,8,23,2,0)
 
"^DD",727.821,727.821,8,23,3,0)
PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.821,727.821,8,23,4,0)
 
"^DD",727.821,727.821,8,23,5,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.821,727.821,8,23,6,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.821,727.821,8,23,7,0)
then a default is used.  The default date value is the value of the 
"^DD",727.821,727.821,8,23,8,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.821,727.821,8,23,9,0)
Year 2000 compliant per vendor.
"^DD",727.821,727.821,8,"DT")
2970924
"^DD",727.821,727.821,9,0)
PRODUCT^F^^0;10^K:$L(X)>1!($L(X)<1) X
"^DD",727.821,727.821,9,.1)
Product
"^DD",727.821,727.821,9,3)
Your answer must be 1 character in length.
"^DD",727.821,727.821,9,21,0)
^^2^2^2961016^^^
"^DD",727.821,727.821,9,21,1,0)
The product or feeder key for this extract as defined by the DSS 
"^DD",727.821,727.821,9,21,2,0)
Program Office.
"^DD",727.821,727.821,9,23,0)
^^1^1^2961016^^^
"^DD",727.821,727.821,9,23,1,0)
For the Physical Movement Setup extract, the PRODUCT field is null.
"^DD",727.821,727.821,9,"DT")
2961015
"^DD",727.821,727.821,10,0)
ADMISSION DATE^FO^^0;11^K:$L(X)>8!($L(X)<8) X
"^DD",727.821,727.821,10,.1)
Admission Date
"^DD",727.821,727.821,10,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.821,727.821,10,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.821,727.821,10,3)
Answer must be 8 characters in length.
"^DD",727.821,727.821,10,21,0)
^^2^2^2970922^^^^
"^DD",727.821,727.821,10,21,1,0)
This 8-character string represents the date on which the admission
"^DD",727.821,727.821,10,21,2,0)
associated with this physical movement occurred.
"^DD",727.821,727.821,10,23,0)
^^10^10^2971113^^^^
"^DD",727.821,727.821,10,23,1,0)
Data source:
"^DD",727.821,727.821,10,23,2,0)
 
"^DD",727.821,727.821,10,23,3,0)
PATIENT MOVEMENT file (#405); ADMISSION/CHECK-IN MOVEMENT field (#.14)
"^DD",727.821,727.821,10,23,4,0)
   then to PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.821,727.821,10,23,5,0)
 
"^DD",727.821,727.821,10,23,6,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.821,727.821,10,23,7,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.821,727.821,10,23,8,0)
then a default is used.  The default date value is the value of the 
"^DD",727.821,727.821,10,23,9,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.821,727.821,10,23,10,0)
Year 2000 compliant per vendor.
"^DD",727.821,727.821,10,"DT")
2970924
"^DD",727.821,727.821,11,0)
DISCHARGE DATE^FO^^0;12^K:$L(X)>8!($L(X)<8) X
"^DD",727.821,727.821,11,.1)
Discharge Date
"^DD",727.821,727.821,11,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.821,727.821,11,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.821,727.821,11,3)
Answer must be 8 characters in length.
"^DD",727.821,727.821,11,21,0)
^^2^2^2970922^^^^
"^DD",727.821,727.821,11,21,1,0)
This 8-charcter numeric string represents the date on which an\
"^DD",727.821,727.821,11,21,2,0)
associated patient Discharge occurred.
"^DD",727.821,727.821,11,23,0)
^^3^3^2970923^^^^
"^DD",727.821,727.821,11,23,1,0)
For the Physical Movement Setup extract, the DISCHARGE DATE field is null.
"^DD",727.821,727.821,11,23,2,0)
 
"^DD",727.821,727.821,11,23,3,0)
Format is YYYYMMDD; Year 2000 compliant per vendor.
"^DD",727.821,727.821,11,"DT")
2970924
"^DD",727.821,727.821,12,0)
MOVEMENT FILE #^P405'^DGPM(^0;13^Q
"^DD",727.821,727.821,12,.1)
Movement File Number
"^DD",727.821,727.821,12,3)
Enter the patient movement number associated with this extract record.
"^DD",727.821,727.821,12,21,0)
^^1^1^2961015^^
"^DD",727.821,727.821,12,21,1,0)
Current patient movement record associated with this extract record.
"^DD",727.821,727.821,12,23,0)
^^3^3^2961015^^
"^DD",727.821,727.821,12,23,1,0)
The ^DGPM("APMV",DFN,CORRES_ADM,INVERSE_DATE,D0) cross reference is 
"^DD",727.821,727.821,12,23,2,0)
used to obtain the current movement number associated with this patient.
"^DD",727.821,727.821,12,23,3,0)
It is a pointer to the PATIENT MOVEMENT file (#405).
"^DD",727.821,727.821,12,"DT")
2961015
"^DD",727.821,727.821,13,0)
TYPE^F^^0;14^K:$L(X)>1!($L(X)<1) X
"^DD",727.821,727.821,13,.1)
Type
"^DD",727.821,727.821,13,3)
Your answer must be 1 character in length.
"^DD",727.821,727.821,13,21,0)
^^2^2^2961016^
"^DD",727.821,727.821,13,21,1,0)
The type of movement for this patient, either transfer (2) or discharge
"^DD",727.821,727.821,13,21,2,0)
(3).
"^DD",727.821,727.821,13,23,0)
^^2^2^2961016^^^
"^DD",727.821,727.821,13,23,1,0)
For the Physical Movement Setup extract, the TYPE field is set to 2 
"^DD",727.821,727.821,13,23,2,0)
for transfer.
"^DD",727.821,727.821,13,"DT")
2961015
"^DD",727.821,727.821,14,0)
LOSING WARD^P44'^SC(^0;15^Q
"^DD",727.821,727.821,14,.1)
Losing Ward
"^DD",727.821,727.821,14,3)
Enter the ward from which this patient was transferred.
"^DD",727.821,727.821,14,21,0)
^^1^1^2961016^^^^
"^DD",727.821,727.821,14,21,1,0)
The ward from which this patient was transferred.
"^DD",727.821,727.821,14,23,0)
^^4^4^2961016^^^^
"^DD",727.821,727.821,14,23,1,0)
LOSING WARD is derived from HOSPITAL LOCATION FILE POINTER field (44) of 
"^DD",727.821,727.821,14,23,2,0)
the WARD LOCATION file (#42) as pointed to by the WARD LOCATION field 
"^DD",727.821,727.821,14,23,3,0)
(.06) of the PATIENT MOVEMENT file (#405). LOSING WARD is a pointer to 
"^DD",727.821,727.821,14,23,4,0)
the HOSPITAL LOCATION file (#44).
"^DD",727.821,727.821,14,"DT")
2961015
"^DD",727.821,727.821,15,0)
TREATING SPECIALTY^P42.4'^DIC(42.4,^0;16^Q
"^DD",727.821,727.821,15,.1)
Treating Specialty
"^DD",727.821,727.821,15,3)
Enter the name of the treating specialty associated with this extract record.
"^DD",727.821,727.821,15,21,0)
^^1^1^2961016^^^^
"^DD",727.821,727.821,15,21,1,0)
The name of the treating specialty associated with this extract record.
"^DD",727.821,727.821,15,23,0)
^^2^2^2961016^^^^
"^DD",727.821,727.821,15,23,1,0)
For the Physical Movement Setup extract, the TREATING SPECIALTY field is 
"^DD",727.821,727.821,15,23,2,0)
null.
"^DD",727.821,727.821,15,"DT")
2961015
"^DD",727.821,727.821,16,0)
DURATION^NJ4,0^^0;17^K:+X'=X!(X>5000)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.821,727.821,16,.1)
Duration
"^DD",727.821,727.821,16,3)
Enter a number between 0 and 5000, 0 decimal digits.
"^DD",727.821,727.821,16,21,0)
^^1^1^2961016^^^^
"^DD",727.821,727.821,16,21,1,0)
Duration of stay within this movement.
"^DD",727.821,727.821,16,23,0)
^^4^4^2961016^
"^DD",727.821,727.821,16,23,1,0)
Calculated as current movement date minus the date (DATE/TIME field (.01)
"^DD",727.821,727.821,16,23,2,0)
of the PATIENT MOVEMENT file (#405)) of the last physical movement
"^DD",727.821,727.821,16,23,3,0)
(ADMISSION/CHECK-IN MOVEMENT field (.14) of the PATIENT MOVEMENT file
"^DD",727.821,727.821,16,23,4,0)
(#405)).
"^DD",727.821,727.821,16,"DT")
2961015
"^DD",727.821,727.821,17,0)
ATTENDING PHYSICIAN^F^^0;18^K:$L(X)>11!($L(X)<1) X
"^DD",727.821,727.821,17,.1)
Attending Physician
"^DD",727.821,727.821,17,3)
Enter attending physician assigned to this patient.
"^DD",727.821,727.821,17,21,0)
^^1^1^2961025^^^^
"^DD",727.821,727.821,17,21,1,0)
The attending physician assigned to this patient with this movement.
"^DD",727.821,727.821,17,23,0)
^^2^2^2961025^^^^
"^DD",727.821,727.821,17,23,1,0)
For the Physical Movement Setup extract, the ATTENDING PHYSICIAN 
"^DD",727.821,727.821,17,23,2,0)
field is null.
"^DD",727.821,727.821,17,"DT")
2961025
"^DD",727.821,727.821,18,0)
MOVEMENT TYPE^P405.2'^DG(405.2,^0;19^Q
"^DD",727.821,727.821,18,.1)
Movement Type
"^DD",727.821,727.821,18,3)
Enter the patient movement number associated with this extract record.
"^DD",727.821,727.821,18,21,0)
^^1^1^2961016^^^
"^DD",727.821,727.821,18,21,1,0)
THE MAS movement type for this movement.
"^DD",727.821,727.821,18,23,0)
^^3^3^2961016^^^
"^DD",727.821,727.821,18,23,1,0)
MOVEMENT TYPE is derived from the MAS MOVEMENT TYPE field (.18) of 
"^DD",727.821,727.821,18,23,2,0)
the PATIENT MOVEMENT file (#405). It is a pointer to the MAS MOVEMENT 
"^DD",727.821,727.821,18,23,3,0)
TYPE file (#405.2).
"^DD",727.821,727.821,18,"DT")
2961015
"^DD",727.821,727.821,19,0)
MOV TIME^FO^^0;20^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.821,727.821,19,.1)
MOV Time
"^DD",727.821,727.821,19,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.821,727.821,19,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.821,727.821,19,3)
Answer must be 6 characters in length.
"^DD",727.821,727.821,19,21,0)
^^2^2^2970922^^
"^DD",727.821,727.821,19,21,1,0)
This 6-character numeric string represents the time of day at
"^DD",727.821,727.821,19,21,2,0)
which the physical movement occurred.
"^DD",727.821,727.821,19,23,0)
^^6^6^2970922^^
"^DD",727.821,727.821,19,23,1,0)
Data source:
"^DD",727.821,727.821,19,23,2,0)
 
"^DD",727.821,727.821,19,23,3,0)
PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.821,727.821,19,23,4,0)
 
"^DD",727.821,727.821,19,23,5,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.821,727.821,19,23,6,0)
cannot be determined, then "000300" is used as default.
"^DD",727.821,727.821,19,"DT")
2970924
"^DD",727.821,727.821,20,0)
GAINING WARD^P44'^SC(^0;21^Q
"^DD",727.821,727.821,20,3)
Enter the ward to which this patient was moved.
"^DD",727.821,727.821,20,21,0)
^^2^2^2961016^^^
"^DD",727.821,727.821,20,21,1,0)
The ward to which this patient was moved. This is null for discharge 
"^DD",727.821,727.821,20,21,2,0)
type movements.
"^DD",727.821,727.821,20,23,0)
^^4^4^2961016^^
"^DD",727.821,727.821,20,23,1,0)
GAINING WARD is derived from the HOSPITAL LOCATION FILE POINTER field 
"^DD",727.821,727.821,20,23,2,0)
(44) of the WARD LOCATION file (#42) as pointed to by the WARD LOCATION 
"^DD",727.821,727.821,20,23,3,0)
field (.06) of the PATIENT MOVEMENT file (#405). GAINING WARD is a 
"^DD",727.821,727.821,20,23,4,0)
pointer to the HOSPITAL LOCATION file (#44).
"^DD",727.821,727.821,20,"DT")
2961015
"^DD",727.821,727.821,21,0)
ADMISSION TIME^FO^^0;22^K:$L(X)>6!($L(X)<6) X
"^DD",727.821,727.821,21,.1)
Admission Time
"^DD",727.821,727.821,21,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.821,727.821,21,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.821,727.821,21,3)
Answer must be 6 characters in length.
"^DD",727.821,727.821,21,21,0)
^^2^2^2970922^^^
"^DD",727.821,727.821,21,21,1,0)
A 6-character numeric string which represents the time of day at
"^DD",727.821,727.821,21,21,2,0)
which the admission associated with the physical movement occurred.
"^DD",727.821,727.821,21,23,0)
^^7^7^2971113^^^
"^DD",727.821,727.821,21,23,1,0)
Data source:
"^DD",727.821,727.821,21,23,2,0)
 
"^DD",727.821,727.821,21,23,3,0)
PATIENT MOVEMENT file (#405); ADMISSION/CHECK-IN MOVEMENT field (#.14)
"^DD",727.821,727.821,21,23,4,0)
   then to PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.821,727.821,21,23,5,0)
 
"^DD",727.821,727.821,21,23,6,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.821,727.821,21,23,7,0)
cannot be determined, then "000300" is used as default.
"^DD",727.821,727.821,21,"DT")
2970924
"^DD",727.822,727.822,0)
FIELD^^20^21
"^DD",727.822,727.822,0,"DIK")
ECX822
"^DD",727.822,727.822,0,"DIKOLD")
ECX822
"^DD",727.822,727.822,0,"DT")
2970922
"^DD",727.822,727.822,0,"IX","AC",727.822,2)

"^DD",727.822,727.822,0,"IX","AINV",727.822,.01)

"^DD",727.822,727.822,0,"IX","AM",727.822,1)

"^DD",727.822,727.822,0,"NM","TREATING SPECIALTY CHANGE SETUP EXTRACT")

"^DD",727.822,727.822,0,"VRPK")
DSS EXTRACTS
"^DD",727.822,727.822,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.822,727.822,.01,.1)
Sequence Number
"^DD",727.822,727.822,.01,1,0)
^.1
"^DD",727.822,727.822,.01,1,1,0)
727.822^AINV^MUMPS
"^DD",727.822,727.822,.01,1,1,1)
S ^ECX(727.822,"AINV",-X,DA)=""
"^DD",727.822,727.822,.01,1,1,2)
K ^ECX(727.822,"AINV",-X,DA)
"^DD",727.822,727.822,.01,1,1,3)
DO NOT DELETE.
"^DD",727.822,727.822,.01,1,1,"%D",0)
^^3^3^2960808^^
"^DD",727.822,727.822,.01,1,1,"%D",1,0)
This is an inverse entry cross reference.  It is used to find the
"^DD",727.822,727.822,.01,1,1,"%D",2,0)
last entry in the file.  It is essential for the management of the
"^DD",727.822,727.822,.01,1,1,"%D",3,0)
extract and the purge of extract data.
"^DD",727.822,727.822,.01,1,1,"DT")
2921016
"^DD",727.822,727.822,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",727.822,727.822,.01,21,0)
^^1^1^2961015^^^^
"^DD",727.822,727.822,.01,21,1,0)
The record number for this extract entry.
"^DD",727.822,727.822,.01,23,0)
^^1^1^2961015^^^
"^DD",727.822,727.822,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",727.822,727.822,.01,"DT")
2961015
"^DD",727.822,727.822,1,0)
YEAR MONTH^FO^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.822,727.822,1,.1)
Year/Month
"^DD",727.822,727.822,1,1,0)
^.1
"^DD",727.822,727.822,1,1,1,0)
727.822^AM
"^DD",727.822,727.822,1,1,1,1)
S ^ECX(727.822,"AM",$E(X,1,30),DA)=""
"^DD",727.822,727.822,1,1,1,2)
K ^ECX(727.822,"AM",$E(X,1,30),DA)
"^DD",727.822,727.822,1,1,1,3)
DO NOT DELETE
"^DD",727.822,727.822,1,1,1,"%D",0)
^^5^5^2921226^
"^DD",727.822,727.822,1,1,1,"%D",1,0)
This cross reference is essential for moving data from this file to file
"^DD",727.822,727.822,1,1,1,"%D",2,0)
727.817 to be transfered to the DSS software.
"^DD",727.822,727.822,1,1,1,"%D",3,0)
 
"^DD",727.822,727.822,1,1,1,"%D",4,0)
DO NOT DELETE OR MODIFY.
"^DD",727.822,727.822,1,1,1,"%D",5,0)
 
"^DD",727.822,727.822,1,1,1,"DT")
2921226
"^DD",727.822,727.822,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.822,727.822,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.822,727.822,1,3)
Answer must be 6 characters in length.
"^DD",727.822,727.822,1,21,0)
^^2^2^2970922^^^^
"^DD",727.822,727.822,1,21,1,0)
A six character numeric string representing the year and the month
"^DD",727.822,727.822,1,21,2,0)
for which this extract was performed.
"^DD",727.822,727.822,1,23,0)
^^1^1^2970922^^^^
"^DD",727.822,727.822,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.822,727.822,1,"DT")
2970924
"^DD",727.822,727.822,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.822,727.822,2,.1)
Extract Number
"^DD",727.822,727.822,2,1,0)
^.1
"^DD",727.822,727.822,2,1,1,0)
727.822^AC
"^DD",727.822,727.822,2,1,1,1)
S ^ECX(727.822,"AC",$E(X,1,30),DA)=""
"^DD",727.822,727.822,2,1,1,2)
K ^ECX(727.822,"AC",$E(X,1,30),DA)
"^DD",727.822,727.822,2,1,1,3)
DO NOT DELETE.
"^DD",727.822,727.822,2,1,1,"%D",0)
^^2^2^2960808^
"^DD",727.822,727.822,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data
"^DD",727.822,727.822,2,1,1,"%D",2,0)
in this file.
"^DD",727.822,727.822,2,1,1,"DT")
2910802
"^DD",727.822,727.822,2,3)
Enter the extract number for this extract.
"^DD",727.822,727.822,2,21,0)
^^2^2^2961015^^^^
"^DD",727.822,727.822,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727) for this 
"^DD",727.822,727.822,2,21,2,0)
extract.
"^DD",727.822,727.822,2,23,0)
^^2^2^2961015^^^^
"^DD",727.822,727.822,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is to
"^DD",727.822,727.822,2,23,2,0)
pick up the header for the mail message.
"^DD",727.822,727.822,2,"DT")
2961015
"^DD",727.822,727.822,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.822,727.822,3,.1)
Facility
"^DD",727.822,727.822,3,3)
Enter the station number where this extract was performed.
"^DD",727.822,727.822,3,21,0)
^^1^1^2961015^^^^
"^DD",727.822,727.822,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.822,727.822,3,23,0)
^^2^2^2961015^^^^
"^DD",727.822,727.822,3,23,1,0)
For the Treating Specialty Change Setup extract, the FACILITY field 
"^DD",727.822,727.822,3,23,2,0)
is null.
"^DD",727.822,727.822,3,"DT")
2961016
"^DD",727.822,727.822,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.822,727.822,4,.1)
Patient No. - DFN
"^DD",727.822,727.822,4,3)
Enter the name of the patient for this extract record.
"^DD",727.822,727.822,4,21,0)
^^1^1^2961016^^^^
"^DD",727.822,727.822,4,21,1,0)
The name of the patient for this extract record.
"^DD",727.822,727.822,4,23,0)
^^3^3^2961016^^^^
"^DD",727.822,727.822,4,23,1,0)
Derived from the PATIENT field (.03) in the PATIENT MOVEMENT file 
"^DD",727.822,727.822,4,23,2,0)
(#405), which is a pointer to the PATIENT file (#2). This data 
"^DD",727.822,727.822,4,23,3,0)
represents the patient DFN.
"^DD",727.822,727.822,4,"DT")
2961016
"^DD",727.822,727.822,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.822,727.822,5,.1)
Social Security Number
"^DD",727.822,727.822,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.822,727.822,5,21,0)
^^1^1^2961015^^^^
"^DD",727.822,727.822,5,21,1,0)
The patient's social security number.
"^DD",727.822,727.822,5,23,0)
^^4^4^2961016^
"^DD",727.822,727.822,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.822,727.822,5,23,2,0)
in the TREATING SPECIALTY CHANGE SETUP EXTRACT file (#727.822), SSN data
"^DD",727.822,727.822,5,23,3,0)
is derived from the SOCIAL SECURITY NUMBER field (.09) in the PATIENT file
"^DD",727.822,727.822,5,23,4,0)
(#2).
"^DD",727.822,727.822,5,"DT")
2961015
"^DD",727.822,727.822,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.822,727.822,6,.1)
Name
"^DD",727.822,727.822,6,3)
Your answer must be 4 characters in length.
"^DD",727.822,727.822,6,21,0)
^^1^1^2961015^^^^
"^DD",727.822,727.822,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.822,727.822,6,23,0)
^^5^5^2961016^
"^DD",727.822,727.822,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.822,727.822,6,23,2,0)
in the TREATING SPECIALTY CHANGE SETUP EXTRACT file (#727.822), NAME data
"^DD",727.822,727.822,6,23,3,0)
is derived from the NAME field (.01) in the PATIENT file (#2). The first
"^DD",727.822,727.822,6,23,4,0)
four characters of the first "," piece are used, padded with trailing
"^DD",727.822,727.822,6,23,5,0)
spaces if necessary.
"^DD",727.822,727.822,6,"DT")
2961015
"^DD",727.822,727.822,7,0)
IN OUT PATIENT INDICATOR^P40.9'^DIC(40.9,^0;8^Q
"^DD",727.822,727.822,7,.1)
In Out Patient Indicator
"^DD",727.822,727.822,7,3)
Enter the appropriate inpatient or outpatient indicator.
"^DD",727.822,727.822,7,21,0)
^^2^2^2961015^^^^
"^DD",727.822,727.822,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this 
"^DD",727.822,727.822,7,21,2,0)
extract entry.
"^DD",727.822,727.822,7,23,0)
^^2^2^2961015^^^
"^DD",727.822,727.822,7,23,1,0)
For the Treating Specialty Change Setup extract this field is set to 3, 
"^DD",727.822,727.822,7,23,2,0)
indicating inpatient status in the LOCATION TYPE file (#40.9).
"^DD",727.822,727.822,7,"DT")
2961015
"^DD",727.822,727.822,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.822,727.822,8,.1)
Day
"^DD",727.822,727.822,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.822,727.822,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.822,727.822,8,3)
Answer must be 8 characters in length.
"^DD",727.822,727.822,8,21,0)
^^2^2^2970922^^^^
"^DD",727.822,727.822,8,21,1,0)
An 8-character numeric string that represents the date on which
"^DD",727.822,727.822,8,21,2,0)
the Treating Specialty change took place.
"^DD",727.822,727.822,8,23,0)
^^9^9^2970923^^^^
"^DD",727.822,727.822,8,23,1,0)
Data source:
"^DD",727.822,727.822,8,23,2,0)
 
"^DD",727.822,727.822,8,23,3,0)
PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.822,727.822,8,23,4,0)
 
"^DD",727.822,727.822,8,23,5,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.822,727.822,8,23,6,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.822,727.822,8,23,7,0)
then a default is used.  The default date value is the value of the 
"^DD",727.822,727.822,8,23,8,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.822,727.822,8,23,9,0)
Year 2000 compliant per vendor.
"^DD",727.822,727.822,8,"DT")
2970924
"^DD",727.822,727.822,9,0)
PRODUCT^F^^0;10^K:$L(X)>1!($L(X)<1) X
"^DD",727.822,727.822,9,.1)
Product
"^DD",727.822,727.822,9,3)
The product or feeder key for this extract.
"^DD",727.822,727.822,9,21,0)
^^1^1^2961016^^^
"^DD",727.822,727.822,9,21,1,0)
The product or feeder key for this extract.
"^DD",727.822,727.822,9,23,0)
^^2^2^2961016^
"^DD",727.822,727.822,9,23,1,0)
For the Treating Specialty Change Setup extract, the PRODUCT field is
"^DD",727.822,727.822,9,23,2,0)
null.
"^DD",727.822,727.822,9,"DT")
2961015
"^DD",727.822,727.822,10,0)
ADMISSION DATE^FO^^0;11^K:$L(X)>8!($L(X)<8) X
"^DD",727.822,727.822,10,.1)
Admission Date
"^DD",727.822,727.822,10,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.822,727.822,10,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.822,727.822,10,3)
Answer must be 8 characters in length.
"^DD",727.822,727.822,10,21,0)
^^2^2^2970922^^^
"^DD",727.822,727.822,10,21,1,0)
An 8-character numeric string that represents the date of the Admission
"^DD",727.822,727.822,10,21,2,0)
associated with this Treating Specialty change.
"^DD",727.822,727.822,10,23,0)
^^10^10^2971113^^^^
"^DD",727.822,727.822,10,23,1,0)
Data source:
"^DD",727.822,727.822,10,23,2,0)
 
"^DD",727.822,727.822,10,23,3,0)
PATIENT MOVEMENT file (#405); ADMISSION/CHECK-IN MOVEMENT field (#.14)
"^DD",727.822,727.822,10,23,4,0)
   then to PATIENT MOVEMENT FILE (#405); DATE/TIME (#.01)
"^DD",727.822,727.822,10,23,5,0)
 
"^DD",727.822,727.822,10,23,6,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.822,727.822,10,23,7,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.822,727.822,10,23,8,0)
then a default is used.  The default date value is the value of the 
"^DD",727.822,727.822,10,23,9,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.822,727.822,10,23,10,0)
Year 2000 compliant per vendor.
"^DD",727.822,727.822,10,"DT")
2970924
"^DD",727.822,727.822,11,0)
DISCHARGE DATE^FO^^0;12^K:$L(X)>8!($L(X)<8) X
"^DD",727.822,727.822,11,.1)
Discharge Date
"^DD",727.822,727.822,11,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.822,727.822,11,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.822,727.822,11,3)
Answer must be 8 characters in length.
"^DD",727.822,727.822,11,21,0)
^^2^2^2970922^^^
"^DD",727.822,727.822,11,21,1,0)
This 8-character numeric string represents a Discharge date associated
"^DD",727.822,727.822,11,21,2,0)
with the Treating Specialty change.
"^DD",727.822,727.822,11,23,0)
^^4^4^2970923^^^^
"^DD",727.822,727.822,11,23,1,0)
For the Treating Specialty Change Setup extract, the DISCHARGE DATE 
"^DD",727.822,727.822,11,23,2,0)
field is null.
"^DD",727.822,727.822,11,23,3,0)
 
"^DD",727.822,727.822,11,23,4,0)
Format is YYYYMMDD; Year 2000 compliant per vendor.
"^DD",727.822,727.822,11,"DT")
2970924
"^DD",727.822,727.822,12,0)
MOVEMENT FILE #^P405'^DGPM(^0;13^Q
"^DD",727.822,727.822,12,.1)
Movement File Number
"^DD",727.822,727.822,12,3)
Enter the patient movement number associated with this extract record.
"^DD",727.822,727.822,12,21,0)
^^1^1^2961015^^^
"^DD",727.822,727.822,12,21,1,0)
Current patient movement record associated with this extract record.
"^DD",727.822,727.822,12,23,0)
^^3^3^2961015^^^
"^DD",727.822,727.822,12,23,1,0)
The ^DGPM("ATS",DFN,ADM,INV_DATE, cross reference is used to 
"^DD",727.822,727.822,12,23,2,0)
obtain the current movement number associated with this patient. 
"^DD",727.822,727.822,12,23,3,0)
It is a pointer to the PATIENT MOVEMENT file (#405).
"^DD",727.822,727.822,12,"DT")
2961015
"^DD",727.822,727.822,13,0)
TYPE^F^^0;14^K:$L(X)>1!($L(X)<1) X
"^DD",727.822,727.822,13,.1)
Type
"^DD",727.822,727.822,13,3)
Your answer must be 1 character in length.
"^DD",727.822,727.822,13,21,0)
^^1^1^2961015^^
"^DD",727.822,727.822,13,21,1,0)
The type of movement for this patient.
"^DD",727.822,727.822,13,23,0)
^^1^1^2961015^^
"^DD",727.822,727.822,13,23,1,0)
Using the "ATT"_TYPE cross reference where TYPE=6 (specialty change).
"^DD",727.822,727.822,13,"DT")
2961015
"^DD",727.822,727.822,14,0)
GAINING WARD^P44'^SC(^0;15^Q
"^DD",727.822,727.822,14,.1)
Gaining Ward
"^DD",727.822,727.822,14,3)
Enter the patient's ward.
"^DD",727.822,727.822,14,21,0)
^^1^1^2961016^^^^
"^DD",727.822,727.822,14,21,1,0)
The ward on which this patient was placed.
"^DD",727.822,727.822,14,23,0)
^^2^2^2961016^
"^DD",727.822,727.822,14,23,1,0)
For the Treating Specialty Change Setup extract, the GAINING WARD field is
"^DD",727.822,727.822,14,23,2,0)
null.
"^DD",727.822,727.822,14,"DT")
2961016
"^DD",727.822,727.822,15,0)
NEW TREATING SPECIALTY^P42.4'^DIC(42.4,^0;16^Q
"^DD",727.822,727.822,15,.1)
New Treating Specialty
"^DD",727.822,727.822,15,3)
Enter the name of the treating specialty associated with this extract record.
"^DD",727.822,727.822,15,21,0)
^^1^1^2961016^^^^
"^DD",727.822,727.822,15,21,1,0)
The name of the treating specialty associated with this extract record.
"^DD",727.822,727.822,15,23,0)
^^5^5^2961016^
"^DD",727.822,727.822,15,23,1,0)
NEW TREATING SPECIALTY is derived from the FACILITY TREATING SPECIALTY
"^DD",727.822,727.822,15,23,2,0)
field (.09) in the PATIENT MOVEMENT file (#405). This facility treating
"^DD",727.822,727.822,15,23,3,0)
specialty data is a pointer to the FACILITY TREATING SPECIALTY file
"^DD",727.822,727.822,15,23,4,0)
(#45.7). Using the SPECIALTY field (1) in the FACILITY TREATING SPECIALTY
"^DD",727.822,727.822,15,23,5,0)
file (#45.7), the pointer to the SPECIALTY file (#42.4) is obtained.
"^DD",727.822,727.822,15,"DT")
2961016
"^DD",727.822,727.822,16,0)
DURATION^NJ4,0^^0;17^K:+X'=X!(X>5000)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.822,727.822,16,.1)
Duration
"^DD",727.822,727.822,16,3)
Enter a number between 0 and 5000, 0 decimal digits.
"^DD",727.822,727.822,16,21,0)
^^1^1^2961015^^^
"^DD",727.822,727.822,16,21,1,0)
Duration of stay within this movement.
"^DD",727.822,727.822,16,23,0)
^^3^3^2961015^^^
"^DD",727.822,727.822,16,23,1,0)
Calculated as current treating specialty date minus the date (DATE/TIME 
"^DD",727.822,727.822,16,23,2,0)
field (.01) of the PATIENT MOVEMENT file (#405)) of the last treating 
"^DD",727.822,727.822,16,23,3,0)
specialty change.
"^DD",727.822,727.822,16,"DT")
2961015
"^DD",727.822,727.822,17,0)
ATTENDING PHYSICIAN^F^^0;18^K:$L(X)>11!($L(X)<1) X
"^DD",727.822,727.822,17,.1)
Attending Physician
"^DD",727.822,727.822,17,3)
Enter attending physician for this patient.
"^DD",727.822,727.822,17,21,0)
^^1^1^2961025^^^^
"^DD",727.822,727.822,17,21,1,0)
The attending physician assigned to this patient with this movement.
"^DD",727.822,727.822,17,23,0)
^^4^4^2961025^^^^
"^DD",727.822,727.822,17,23,1,0)
Derived from the ATTENDING PHYSICIAN field (.19) of the PATIENT MOVEMENT 
"^DD",727.822,727.822,17,23,2,0)
file (#405). If ATTENDING PHYSICIAN is a pointer to the NEW PERSON file 
"^DD",727.822,727.822,17,23,3,0)
(#200), it is stored as "2"_pointer value. If ATTENDING PHYSICIAN is a 
"^DD",727.822,727.822,17,23,4,0)
pointer to the PROVIDER file (#6), it is stored as "6"_pointer value.
"^DD",727.822,727.822,17,"DT")
2961016
"^DD",727.822,727.822,18,0)
MOVEMENT TYPE^P405.2'^DG(405.2,^0;19^Q
"^DD",727.822,727.822,18,.1)
Movement Type
"^DD",727.822,727.822,18,3)
Enter the patient movement number associated with this extract record.
"^DD",727.822,727.822,18,21,0)
^^1^1^2961016^^^
"^DD",727.822,727.822,18,21,1,0)
The MAS movement type for this movement.
"^DD",727.822,727.822,18,23,0)
^^3^3^2961016^^^
"^DD",727.822,727.822,18,23,1,0)
MOVEMENT TYPE is derived from the MAS MOVEMENT TYPE field (.18) of 
"^DD",727.822,727.822,18,23,2,0)
the PATIENT MOVEMENT file (#405). It is a pointer to the MAS MOVEMENT 
"^DD",727.822,727.822,18,23,3,0)
TYPE file (#405.2).
"^DD",727.822,727.822,18,"DT")
2961015
"^DD",727.822,727.822,19,0)
TRT TIME^FO^^0;20^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.822,727.822,19,.1)
TRT Time
"^DD",727.822,727.822,19,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.822,727.822,19,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.822,727.822,19,3)
Answer must be 6 characters in length.
"^DD",727.822,727.822,19,21,0)
^^2^2^2970922^^
"^DD",727.822,727.822,19,21,1,0)
A 6-character numeric string representing the time of day when the
"^DD",727.822,727.822,19,21,2,0)
Treating Specialty change took place.
"^DD",727.822,727.822,19,23,0)
^^7^7^2970922^^
"^DD",727.822,727.822,19,23,1,0)
Data source:
"^DD",727.822,727.822,19,23,2,0)
 
"^DD",727.822,727.822,19,23,3,0)
PATIENT MOVEMENT file (#405); DATE/TIME field (#.01);
"^DD",727.822,727.822,19,23,4,0)
   2nd "." piece only.
"^DD",727.822,727.822,19,23,5,0)
 
"^DD",727.822,727.822,19,23,6,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.822,727.822,19,23,7,0)
cannot be determined, then "000300" is used as default.
"^DD",727.822,727.822,19,"DT")
2970924
"^DD",727.822,727.822,20,0)
ADMISSION TIME^FO^^0;21^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.822,727.822,20,.1)
Admission Time
"^DD",727.822,727.822,20,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.822,727.822,20,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.822,727.822,20,3)
Answer must be 6 characters in length.
"^DD",727.822,727.822,20,21,0)
^^2^2^2970922^^^
"^DD",727.822,727.822,20,21,1,0)
A 6-character numeric string that represent the time of day of the
"^DD",727.822,727.822,20,21,2,0)
Admission associated with this Treating Specialty change.
"^DD",727.822,727.822,20,23,0)
^^7^7^2971113^^^
"^DD",727.822,727.822,20,23,1,0)
Data source:
"^DD",727.822,727.822,20,23,2,0)
 
"^DD",727.822,727.822,20,23,3,0)
PATIENT MOVEMENT file (#405); ADMISSION/CHECK-IN MOVEMENT field (#.14)
"^DD",727.822,727.822,20,23,4,0)
   then to PATIENT MOVEMENT FILE (#405); DATE/TIME (#.01)
"^DD",727.822,727.822,20,23,5,0)
 
"^DD",727.822,727.822,20,23,6,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.822,727.822,20,23,7,0)
cannot be determined, then "000300" is used as default.
"^DD",727.822,727.822,20,"DT")
2970924
"^DD",727.823,727.823,0)
FIELD^^13^14
"^DD",727.823,727.823,0,"DDA")
N
"^DD",727.823,727.823,0,"DIK")
ECX823
"^DD",727.823,727.823,0,"DIKOLD")
ECX823
"^DD",727.823,727.823,0,"DT")
2970922
"^DD",727.823,727.823,0,"IX","AC",727.823,2)

"^DD",727.823,727.823,0,"IX","AINV",727.823,.01)

"^DD",727.823,727.823,0,"NM","PAI EXTRACT")

"^DD",727.823,727.823,0,"VRPK")
DSS EXTRACTS
"^DD",727.823,727.823,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.823,727.823,.01,.1)
Sequence Number
"^DD",727.823,727.823,.01,1,0)
^.1
"^DD",727.823,727.823,.01,1,1,0)
727.823^AINV^MUMPS
"^DD",727.823,727.823,.01,1,1,1)
S ^ECX(727.823,"AINV",-X,DA)=""
"^DD",727.823,727.823,.01,1,1,2)
K ^ECX(727.823,"AINV",-X,DA)
"^DD",727.823,727.823,.01,1,1,3)
DO NOT DELETE.
"^DD",727.823,727.823,.01,1,1,"%D",0)
^^3^3^2960808^^
"^DD",727.823,727.823,.01,1,1,"%D",1,0)
This is an inverse entry cross reference.  It is used to find the
"^DD",727.823,727.823,.01,1,1,"%D",2,0)
last entry in the file.  It is essential for the management of the
"^DD",727.823,727.823,.01,1,1,"%D",3,0)
extract and the purge of extract data.
"^DD",727.823,727.823,.01,1,1,"DT")
2921016
"^DD",727.823,727.823,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",727.823,727.823,.01,21,0)
^^1^1^2961008^^^^
"^DD",727.823,727.823,.01,21,1,0)
The record number for this extract entry.
"^DD",727.823,727.823,.01,23,0)
^^1^1^2961008^^^^
"^DD",727.823,727.823,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",727.823,727.823,.01,"DT")
2961008
"^DD",727.823,727.823,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.823,727.823,1,.1)
Year/Month
"^DD",727.823,727.823,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.823,727.823,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.823,727.823,1,3)
Answer must be 6 characters in length.
"^DD",727.823,727.823,1,21,0)
^^2^2^2970922^^^^
"^DD",727.823,727.823,1,21,1,0)
A six character numeric string representing the year and the month
"^DD",727.823,727.823,1,21,2,0)
for which this extract was performed.
"^DD",727.823,727.823,1,23,0)
^^1^1^2970922^^^^
"^DD",727.823,727.823,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.823,727.823,1,"DT")
2970924
"^DD",727.823,727.823,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.823,727.823,2,.1)
Extract Number
"^DD",727.823,727.823,2,1,0)
^.1
"^DD",727.823,727.823,2,1,1,0)
727.823^AC
"^DD",727.823,727.823,2,1,1,1)
S ^ECX(727.823,"AC",$E(X,1,30),DA)=""
"^DD",727.823,727.823,2,1,1,2)
K ^ECX(727.823,"AC",$E(X,1,30),DA)
"^DD",727.823,727.823,2,1,1,3)
DO NOT DELETE.
"^DD",727.823,727.823,2,1,1,"%D",0)
^^2^2^2960808^
"^DD",727.823,727.823,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data
"^DD",727.823,727.823,2,1,1,"%D",2,0)
in this file.
"^DD",727.823,727.823,2,1,1,"DT")
2910802
"^DD",727.823,727.823,2,3)
Enter the extract number for this extract.
"^DD",727.823,727.823,2,21,0)
^^2^2^2961008^^^^
"^DD",727.823,727.823,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727) for this 
"^DD",727.823,727.823,2,21,2,0)
extract.
"^DD",727.823,727.823,2,23,0)
^^2^2^2961008^^^^
"^DD",727.823,727.823,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is to
"^DD",727.823,727.823,2,23,2,0)
pick up the header for the mail message.
"^DD",727.823,727.823,2,"DT")
2961008
"^DD",727.823,727.823,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.823,727.823,3,.1)
Facility
"^DD",727.823,727.823,3,3)
Enter the station number where this extract was performed.
"^DD",727.823,727.823,3,21,0)
^^1^1^2961014^^^^
"^DD",727.823,727.823,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.823,727.823,3,23,0)
^^1^1^2961014^^^^
"^DD",727.823,727.823,3,23,1,0)
For the PAI extract, the FACILITY field is null.
"^DD",727.823,727.823,3,"DT")
2961014
"^DD",727.823,727.823,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.823,727.823,4,.1)
Patient No. - DFN
"^DD",727.823,727.823,4,3)
Enter the name of the patient for this extract record.
"^DD",727.823,727.823,4,21,0)
^^1^1^2961015^^^^
"^DD",727.823,727.823,4,21,1,0)
The name of the patient for this extract record.
"^DD",727.823,727.823,4,23,0)
^^2^2^2961016^^^^
"^DD",727.823,727.823,4,23,1,0)
Derived from the NAME field (.01) in the PAF file (#45.9). NAME is a 
"^DD",727.823,727.823,4,23,2,0)
pointer to the PATIENT file (#2). This data represents the patient DFN.
"^DD",727.823,727.823,4,"DT")
2961015
"^DD",727.823,727.823,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.823,727.823,5,.1)
Social Security Number
"^DD",727.823,727.823,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.823,727.823,5,21,0)
^^1^1^2961015^^^^
"^DD",727.823,727.823,5,21,1,0)
The patient's social security number.
"^DD",727.823,727.823,5,23,0)
^^3^3^2961015^
"^DD",727.823,727.823,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.823,727.823,5,23,2,0)
in the PAI EXTRACT file (#727.823), SSN data is derived from the SOCIAL
"^DD",727.823,727.823,5,23,3,0)
SECURITY NUMBER field (.09) in the PATIENT file (#2).
"^DD",727.823,727.823,5,"DT")
2961008
"^DD",727.823,727.823,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.823,727.823,6,.1)
Name
"^DD",727.823,727.823,6,3)
Your answer must be 4 characters in length.
"^DD",727.823,727.823,6,21,0)
^^1^1^2961015^^^^
"^DD",727.823,727.823,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.823,727.823,6,23,0)
^^4^4^2961015^
"^DD",727.823,727.823,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.823,727.823,6,23,2,0)
in the PAI EXTRACT file (#727.823), NAME data is derived from the NAME
"^DD",727.823,727.823,6,23,3,0)
field (.01) in the PATIENT file (#2). The first four characters of the
"^DD",727.823,727.823,6,23,4,0)
first "," piece are used, padded with trailing spaces if necessary.
"^DD",727.823,727.823,6,"DT")
2961008
"^DD",727.823,727.823,7,0)
IN OUT PATIENT INDICATOR^P40.9'^DIC(40.9,^0;8^Q
"^DD",727.823,727.823,7,.1)
In Out Patient Indicator
"^DD",727.823,727.823,7,3)
Enter the appropriate inpatient or outpatient indicator.
"^DD",727.823,727.823,7,21,0)
^^2^2^2961015^^^^
"^DD",727.823,727.823,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this 
"^DD",727.823,727.823,7,21,2,0)
extract entry.
"^DD",727.823,727.823,7,23,0)
^^2^2^2961015^^^^
"^DD",727.823,727.823,7,23,1,0)
For the PAI extract this field is set to 3, indicating inpatient status 
"^DD",727.823,727.823,7,23,2,0)
in the LOCATION TYPE file (#40.9).
"^DD",727.823,727.823,7,"DT")
2961008
"^DD",727.823,727.823,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.823,727.823,8,.1)
Day
"^DD",727.823,727.823,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.823,727.823,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.823,727.823,8,3)
Answer must be 8 characters in length.
"^DD",727.823,727.823,8,21,0)
^^2^2^2970922^^^^
"^DD",727.823,727.823,8,21,1,0)
A 6-character numeric string that represents tha date on which the
"^DD",727.823,727.823,8,21,2,0)
patient classification occurred.
"^DD",727.823,727.823,8,23,0)
^^9^9^2970923^^^^
"^DD",727.823,727.823,8,23,1,0)
Data source:
"^DD",727.823,727.823,8,23,2,0)
 
"^DD",727.823,727.823,8,23,3,0)
PAF file (#45.9); ASSESSMENT DATE field (#2)
"^DD",727.823,727.823,8,23,4,0)
 
"^DD",727.823,727.823,8,23,5,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.823,727.823,8,23,6,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.823,727.823,8,23,7,0)
then a default is used.  The default date value is the value of the 
"^DD",727.823,727.823,8,23,8,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.823,727.823,8,23,9,0)
Year 2000 compliant per vendor.
"^DD",727.823,727.823,8,"DT")
2970924
"^DD",727.823,727.823,9,0)
ADMISSION DATE^RFO^^0;10^K:$L(X)>8!($L(X)<8) X
"^DD",727.823,727.823,9,.1)
Admission Date
"^DD",727.823,727.823,9,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.823,727.823,9,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.823,727.823,9,3)
Answer must be 8 characters in length.
"^DD",727.823,727.823,9,21,0)
^^2^2^2970922^^^^
"^DD",727.823,727.823,9,21,1,0)
This 8-character string represents the date on which the
"^DD",727.823,727.823,9,21,2,0)
patient Admission took place.
"^DD",727.823,727.823,9,23,0)
^^11^11^2971113^^^^
"^DD",727.823,727.823,9,23,1,0)
DATE.
"^DD",727.823,727.823,9,23,2,0)
Data source:
"^DD",727.823,727.823,9,23,3,0)
 
"^DD",727.823,727.823,9,23,4,0)
PAF file (#45.9); DATE OF ADMISSION/TRANSFER IN field (#7)
"^DD",727.823,727.823,9,23,5,0)
   then to PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.823,727.823,9,23,6,0)
 
"^DD",727.823,727.823,9,23,7,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.823,727.823,9,23,8,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.823,727.823,9,23,9,0)
then a default is used.  The default date value is the value of the 
"^DD",727.823,727.823,9,23,10,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.823,727.823,9,23,11,0)
Year 2000 compliant per vendor.
"^DD",727.823,727.823,9,"DT")
2970924
"^DD",727.823,727.823,10,0)
ADMISSION TIME^FO^^0;11^K:$L(X)>6!($L(X)<6) X
"^DD",727.823,727.823,10,.1)
Admission Time
"^DD",727.823,727.823,10,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.823,727.823,10,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.823,727.823,10,3)
Answer must be 6 characters in length.
"^DD",727.823,727.823,10,21,0)
^^2^2^2970922^^^
"^DD",727.823,727.823,10,21,1,0)
A 6-character numeric string that represents the time of day
"^DD",727.823,727.823,10,21,2,0)
at which the patient Admission occurred.
"^DD",727.823,727.823,10,23,0)
^^12^12^2971113^^^^
"^DD",727.823,727.823,10,23,1,0)
Derived by using the DATE OF ADMISSION/TRANSFER IN field (7) in the 
"^DD",727.823,727.823,10,23,2,0)
PAF file (#45.9) to find the corresponding admission in the PATIENT 
"^DD",727.823,727.823,10,23,3,0)
MOVEMENT file (#405). The TIME portion of the DATE/TIME field (.01) 
"^DD",727.823,727.823,10,23,4,0)
for that admission in the PATIENT MOVEMENT file (#405) is the ADMISSION 
"^DD",727.823,727.823,10,23,5,0)
TIME, padded with trailing zeroes to six digits.
"^DD",727.823,727.823,10,23,6,0)
Data source:
"^DD",727.823,727.823,10,23,7,0)
 
"^DD",727.823,727.823,10,23,8,0)
PAF file (#45.9); DATE OF ADMISSION/TRANSFER IN field (#7)
"^DD",727.823,727.823,10,23,9,0)
   then to PATIENT MOVEMENT file (#405); DATE/TIME field (#.01)
"^DD",727.823,727.823,10,23,10,0)
 
"^DD",727.823,727.823,10,23,11,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.823,727.823,10,23,12,0)
cannot be determined, then "000300" is used as default.
"^DD",727.823,727.823,10,"DT")
2970924
"^DD",727.823,727.823,11,0)
TRANSFER/ADMISSION DATE^FO^^0;12^K:$L(X)>8!($L(X)<8) X
"^DD",727.823,727.823,11,.1)
Transfer/Admission Date
"^DD",727.823,727.823,11,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.823,727.823,11,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.823,727.823,11,3)
Answer must be 8 characters in length.
"^DD",727.823,727.823,11,21,0)
^^2^2^2970922^^^^
"^DD",727.823,727.823,11,21,1,0)
An 8-character numeric string that represents the date on which the
"^DD",727.823,727.823,11,21,2,0)
patient was admitted or transferred to the long-term ward.
"^DD",727.823,727.823,11,23,0)
^^9^9^2970923^^^^
"^DD",727.823,727.823,11,23,1,0)
Data source:
"^DD",727.823,727.823,11,23,2,0)
 
"^DD",727.823,727.823,11,23,3,0)
PAF file (#45.9); DATE OF ADMISSION/TRANSFER in field (#7)
"^DD",727.823,727.823,11,23,4,0)
 
"^DD",727.823,727.823,11,23,5,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.823,727.823,11,23,6,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.823,727.823,11,23,7,0)
then a default is used.  The default date value is the value of the 
"^DD",727.823,727.823,11,23,8,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.823,727.823,11,23,9,0)
Year 2000 compliant per vendor.
"^DD",727.823,727.823,11,"DT")
2970924
"^DD",727.823,727.823,12,0)
TRANSFER/ADMISSION TIME^FO^^0;13^K:$L(X)>6!($L(X)<6) X
"^DD",727.823,727.823,12,.1)
Transfer/Admission Time
"^DD",727.823,727.823,12,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.823,727.823,12,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.823,727.823,12,3)
Answer must be 6 characters in length.
"^DD",727.823,727.823,12,21,0)
^^2^2^2970922^^^^
"^DD",727.823,727.823,12,21,1,0)
A 6-character numeric string that represents the time of day at which
"^DD",727.823,727.823,12,21,2,0)
the patient's admission or transfer to the long-term ward occurred.
"^DD",727.823,727.823,12,23,0)
^^6^6^2970922^^^^
"^DD",727.823,727.823,12,23,1,0)
Data source:
"^DD",727.823,727.823,12,23,2,0)
 
"^DD",727.823,727.823,12,23,3,0)
PAF file (#45.9); DATE OF ADMISSION/TRANSFER in field (#7)
"^DD",727.823,727.823,12,23,4,0)
 
"^DD",727.823,727.823,12,23,5,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.823,727.823,12,23,6,0)
cannot be determined, then "000300" is used as default.
"^DD",727.823,727.823,12,"DT")
2970924
"^DD",727.823,727.823,13,0)
RACE^F^^0;14^K:$L(X)>1!($L(X)<1) X
"^DD",727.823,727.823,13,.1)
Race
"^DD",727.823,727.823,13,3)
Enter race ABBREVIATION for this patient.
"^DD",727.823,727.823,13,21,0)
^^1^1^2961015^^
"^DD",727.823,727.823,13,21,1,0)
Race ABBREVIATION for this patient.
"^DD",727.823,727.823,13,23,0)
^^3^3^2961015^
"^DD",727.823,727.823,13,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4),
"^DD",727.823,727.823,13,23,2,0)
RACE data is shown as the ABBREVIATION field (2) of the RACE file (#10)
"^DD",727.823,727.823,13,23,3,0)
entry pointed to by the RACE field (.06) in the PATIENT file (#2).
"^DD",727.823,727.823,13,"DT")
2961015
"^DD",727.824,727.824,0)
FIELD^^9^19
"^DD",727.824,727.824,0,"DDA")
N
"^DD",727.824,727.824,0,"DIK")
ECX824
"^DD",727.824,727.824,0,"DIKOLD")
ECX824
"^DD",727.824,727.824,0,"DT")
2970923
"^DD",727.824,727.824,0,"IX","AC",727.824,2)

"^DD",727.824,727.824,0,"IX","AINV",727.824,.01)

"^DD",727.824,727.824,0,"NM","LAB RESULTS EXTRACT")

"^DD",727.824,727.824,0,"VRPK")
DSS EXTRACTS
"^DD",727.824,727.824,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.824,727.824,.01,.1)
Sequence Number
"^DD",727.824,727.824,.01,1,0)
^.1
"^DD",727.824,727.824,.01,1,1,0)
727.824^AINV^MUMPS
"^DD",727.824,727.824,.01,1,1,1)
S ^ECX(727.824,"AINV",-X,DA)=""
"^DD",727.824,727.824,.01,1,1,2)
K ^ECX(727.824,"AINV",-X,DA)
"^DD",727.824,727.824,.01,1,1,3)
DO NOT DELETE.
"^DD",727.824,727.824,.01,1,1,"%D",0)
^^3^3^2960808^^
"^DD",727.824,727.824,.01,1,1,"%D",1,0)
This is an inverse entry cross reference.  It is used to find the
"^DD",727.824,727.824,.01,1,1,"%D",2,0)
last entry in the file.  It is essential for the management of the
"^DD",727.824,727.824,.01,1,1,"%D",3,0)
extract and the purge of extract data.
"^DD",727.824,727.824,.01,1,1,"DT")
2921016
"^DD",727.824,727.824,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",727.824,727.824,.01,21,0)
^^1^1^2961009^^^^
"^DD",727.824,727.824,.01,21,1,0)
The record number for this extract entry.
"^DD",727.824,727.824,.01,23,0)
^^1^1^2961009^^^
"^DD",727.824,727.824,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",727.824,727.824,.01,"DT")
2961009
"^DD",727.824,727.824,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.824,727.824,1,.1)
Year/Month
"^DD",727.824,727.824,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.824,727.824,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.824,727.824,1,3)
Answer must be 6 characters in length.
"^DD",727.824,727.824,1,21,0)
^^2^2^2970923^^^^
"^DD",727.824,727.824,1,21,1,0)
A six character numeric string representing the year and the month
"^DD",727.824,727.824,1,21,2,0)
for which this extract was performed.
"^DD",727.824,727.824,1,23,0)
^^1^1^2970923^^^^
"^DD",727.824,727.824,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.824,727.824,1,"DT")
2970924
"^DD",727.824,727.824,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.824,727.824,2,.1)
Extract Number
"^DD",727.824,727.824,2,1,0)
^.1
"^DD",727.824,727.824,2,1,1,0)
727.824^AC
"^DD",727.824,727.824,2,1,1,1)
S ^ECX(727.824,"AC",$E(X,1,30),DA)=""
"^DD",727.824,727.824,2,1,1,2)
K ^ECX(727.824,"AC",$E(X,1,30),DA)
"^DD",727.824,727.824,2,1,1,3)
DO NOT DELETE.
"^DD",727.824,727.824,2,1,1,"%D",0)
^^2^2^2960808^
"^DD",727.824,727.824,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data
"^DD",727.824,727.824,2,1,1,"%D",2,0)
in this file.
"^DD",727.824,727.824,2,1,1,"DT")
2910802
"^DD",727.824,727.824,2,3)
Enter the extract number for this extract.
"^DD",727.824,727.824,2,21,0)
^^2^2^2961009^^^^
"^DD",727.824,727.824,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727) for this 
"^DD",727.824,727.824,2,21,2,0)
extract.
"^DD",727.824,727.824,2,23,0)
^^2^2^2961009^^^^
"^DD",727.824,727.824,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is to
"^DD",727.824,727.824,2,23,2,0)
pick up the header for the mail message.
"^DD",727.824,727.824,2,"DT")
2961009
"^DD",727.824,727.824,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.824,727.824,3,.1)
Facility
"^DD",727.824,727.824,3,3)
Enter the station number where this extract was performed.
"^DD",727.824,727.824,3,21,0)
^^1^1^2961009^^^^
"^DD",727.824,727.824,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.824,727.824,3,23,0)
^^4^4^2961009^^^
"^DD",727.824,727.824,3,23,1,0)
An indicator of the division where this event happened. Using the NAME 
"^DD",727.824,727.824,3,23,2,0)
field (.01) pointer from the DSS EXTRACTS file (#728), FACILITY is 
"^DD",727.824,727.824,3,23,3,0)
derived from the STATION NUMBER field (99) for that pointer number in 
"^DD",727.824,727.824,3,23,4,0)
the INSTITUTION file (#4).
"^DD",727.824,727.824,3,"DT")
2961018
"^DD",727.824,727.824,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.824,727.824,4,.1)
Patient No. - DFN
"^DD",727.824,727.824,4,3)
Enter the name of the patient for this extract record.
"^DD",727.824,727.824,4,21,0)
^^1^1^2961024^^^^
"^DD",727.824,727.824,4,21,1,0)
The name of the patient for this extract record.
"^DD",727.824,727.824,4,23,0)
^^3^3^2961024^^
"^DD",727.824,727.824,4,23,1,0)
Pointer to the NAME field (.01) of the PATIENT file (#2). This data 
"^DD",727.824,727.824,4,23,2,0)
represents the patient DFN. PATIENT NO. - DFN data is derived from the
"^DD",727.824,727.824,4,23,3,0)
NAME field (.03) in the LAB DATA file.(#63)
"^DD",727.824,727.824,4,"DT")
2961018
"^DD",727.824,727.824,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.824,727.824,5,.1)
Social Security Number
"^DD",727.824,727.824,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.824,727.824,5,21,0)
^^1^1^2961018^^^^
"^DD",727.824,727.824,5,21,1,0)
The patient's social security number.
"^DD",727.824,727.824,5,23,0)
^^3^3^2961018^
"^DD",727.824,727.824,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT No. - DFN field (4)
"^DD",727.824,727.824,5,23,2,0)
in the LAB RESULTS EXTRACT file (#727.824), SSN data is derived from the
"^DD",727.824,727.824,5,23,3,0)
SOCIAL SECURITY NUMBER field (.09) in the PATIENT file (#2).
"^DD",727.824,727.824,5,"DT")
2961009
"^DD",727.824,727.824,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.824,727.824,6,.1)
Name
"^DD",727.824,727.824,6,3)
Your answer must be 4 characters in length.
"^DD",727.824,727.824,6,21,0)
^^1^1^2961018^^^^
"^DD",727.824,727.824,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.824,727.824,6,23,0)
^^4^4^2961018^
"^DD",727.824,727.824,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT No. - DFN field (4)
"^DD",727.824,727.824,6,23,2,0)
in the LAB RESULTS EXTRACT file (#727.824), NAME data is derived from the
"^DD",727.824,727.824,6,23,3,0)
NAME field (.01) in the PATIENT file (#2). The first four characters of
"^DD",727.824,727.824,6,23,4,0)
the first "," piece are used, padded with trailing spaces if necessary.
"^DD",727.824,727.824,6,"DT")
2961009
"^DD",727.824,727.824,7,0)
IN OUT PATIENT INDICATOR^P40.9'^DIC(40.9,^0;8^Q
"^DD",727.824,727.824,7,.1)
In Out Patient Indicator
"^DD",727.824,727.824,7,3)
Enter the appropriate inpatient or outpatient indicator.
"^DD",727.824,727.824,7,21,0)
^^2^2^2961009^^^^
"^DD",727.824,727.824,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this 
"^DD",727.824,727.824,7,21,2,0)
extract entry.
"^DD",727.824,727.824,7,23,0)
^^4^4^2961009^^^
"^DD",727.824,727.824,7,23,1,0)
This field is initialized to a 1, indicating an outpatient status. If 
"^DD",727.824,727.824,7,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.824,727.824,7,23,3,0)
patient movement number, then the field is reset to a 3 indicating 
"^DD",727.824,727.824,7,23,4,0)
inpatient status.
"^DD",727.824,727.824,7,"DT")
2961009
"^DD",727.824,727.824,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.824,727.824,8,.1)
Day
"^DD",727.824,727.824,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.824,727.824,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.824,727.824,8,3)
Answer must be 8 characters in length.
"^DD",727.824,727.824,8,21,0)
^^2^2^2970923^^^^
"^DD",727.824,727.824,8,21,1,0)
An 8-character numeric string that represents the date on which
"^DD",727.824,727.824,8,21,2,0)
the Laboratory test result was ready for reporting.
"^DD",727.824,727.824,8,23,0)
^^12^12^2971113^^^^
"^DD",727.824,727.824,8,23,1,0)
Data source:
"^DD",727.824,727.824,8,23,2,0)
 
"^DD",727.824,727.824,8,23,3,0)
LAB DSS LAR EXTRACT file (#64.036); DATE RESULTS AVAIL field (#5)
"^DD",727.824,727.824,8,23,4,0)
   
"^DD",727.824,727.824,8,23,5,0)
LAB DATA file (#63); CHEM, HEM, TOX, RIA, SER, etc. sub-file (#63.04);
"^DD",727.824,727.824,8,23,6,0)
   DATE REPORT COMPLETED field (#.03)
"^DD",727.824,727.824,8,23,7,0)
 
"^DD",727.824,727.824,8,23,8,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.824,727.824,8,23,9,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.824,727.824,8,23,10,0)
then a default is used.  The default date value is the value of the 
"^DD",727.824,727.824,8,23,11,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.824,727.824,8,23,12,0)
Year 2000 compliant per vendor.
"^DD",727.824,727.824,8,"DT")
2970924
"^DD",727.824,727.824,9,0)
TEST CODE^RF^^0;10^K:$L(X)>4!($L(X)<4)!'(X?4N) X
"^DD",727.824,727.824,9,.1)
Test Code
"^DD",727.824,727.824,9,3)
Your answer must be 4 characters in length.
"^DD",727.824,727.824,9,21,0)
^^1^1^2961009^^^
"^DD",727.824,727.824,9,21,1,0)
The coded value of the lab test as specified by the vendor.
"^DD",727.824,727.824,9,23,0)
^^2^2^2961009^^
"^DD",727.824,727.824,9,23,1,0)
The internal entry number of the lab test in the DSS LAB TEST file
"^DD",727.824,727.824,9,23,2,0)
(727.2) padded with leading zeroes to four characters.
"^DD",727.824,727.824,9,"DT")
2961009
"^DD",727.824,727.824,10,0)
RESULTS^NJ10,4^^0;11^K:+X'=X!(X>10000)!(X<-10000)!(X?.E1"."5N.N) X
"^DD",727.824,727.824,10,.1)
Results
"^DD",727.824,727.824,10,3)
Enter a number between -10000 and 10000, 4 decimal digits.
"^DD",727.824,727.824,10,21,0)
^^1^1^2961009^^
"^DD",727.824,727.824,10,21,1,0)
The result of the lab test.
"^DD",727.824,727.824,10,23,0)
^^3^3^2961009^
"^DD",727.824,727.824,10,23,1,0)
Results of the test identified in the CHEM, HEM, TOX, RIA, SER, etc. 
"^DD",727.824,727.824,10,23,2,0)
multiple (4) within the LAB DATA file (#63). (First "^" piece of 
"^DD",727.824,727.824,10,23,3,0)
^LR(LRDFN,"CH",INVERSE_DATE,TEST_IEN).)
"^DD",727.824,727.824,10,"DT")
2961009
"^DD",727.824,727.824,12,0)
HI/LO INDICATOR^S^H:HIGH;L:LOW;^0;12^Q
"^DD",727.824,727.824,12,.1)
Hi/Lo Indicator
"^DD",727.824,727.824,12,3)
Enter H for high or L for low.
"^DD",727.824,727.824,12,21,0)
^^1^1^2961009^^
"^DD",727.824,727.824,12,21,1,0)
An indication of whether the results were abnormally high or low.
"^DD",727.824,727.824,12,23,0)
^^3^3^2961009^
"^DD",727.824,727.824,12,23,1,0)
Results indicator of the test identified in the CHEM, HEM, TOX, RIA, 
"^DD",727.824,727.824,12,23,2,0)
SER, etc. multiple (4) within the LAB DATA file (#63). (Second "^" 
"^DD",727.824,727.824,12,23,3,0)
piece of ^LR(LRDFN,"CH",INVERSE_DATE,TEST_IEN).)
"^DD",727.824,727.824,12,"DT")
2961009
"^DD",727.824,727.824,13,0)
DATE ORDERED^FO^^0;13^K:$L(X)>8!($L(X)<8) X
"^DD",727.824,727.824,13,.1)
Date Ordered
"^DD",727.824,727.824,13,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.824,727.824,13,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.824,727.824,13,3)
Answer must be 8 characters in length.
"^DD",727.824,727.824,13,21,0)
^^2^2^2970923^^^^
"^DD",727.824,727.824,13,21,1,0)
An 8-character numeric string that represents the date on which
"^DD",727.824,727.824,13,21,2,0)
the Laboratory test was ordered.
"^DD",727.824,727.824,13,23,0)
^^12^12^2971113^^^^
"^DD",727.824,727.824,13,23,1,0)
Data source:
"^DD",727.824,727.824,13,23,2,0)
 
"^DD",727.824,727.824,13,23,3,0)
LAB DSS LAR EXTRACT file (#64.036); DATE RESULTS AVAIL field (#5)
"^DD",727.824,727.824,13,23,4,0)
   
"^DD",727.824,727.824,13,23,5,0)
LAB DATA file (#63); CHEM, HEM, TOX, RIA, SER, etc. sub-file (#63.04);
"^DD",727.824,727.824,13,23,6,0)
   DATE/TIME SPECIMEN TAKEN field (#.01)
"^DD",727.824,727.824,13,23,7,0)
 
"^DD",727.824,727.824,13,23,8,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.824,727.824,13,23,9,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.824,727.824,13,23,10,0)
then a default is used.  The default date value is the value of the 
"^DD",727.824,727.824,13,23,11,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.824,727.824,13,23,12,0)
Year 2000 compliant per vendor.
"^DD",727.824,727.824,13,"DT")
2970924
"^DD",727.824,727.824,14,0)
TIME ORDERED^FO^^0;14^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.824,727.824,14,.1)
Time Ordered
"^DD",727.824,727.824,14,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.824,727.824,14,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.824,727.824,14,3)
Answer must be 6 characters in length
"^DD",727.824,727.824,14,21,0)
^^2^2^2970923^^^^
"^DD",727.824,727.824,14,21,1,0)
A 6-character numeric string that represents the time of day at which
"^DD",727.824,727.824,14,21,2,0)
the Laboratory test was ordered.
"^DD",727.824,727.824,14,23,0)
^^8^8^2970923^^^^
"^DD",727.824,727.824,14,23,1,0)
Data source:
"^DD",727.824,727.824,14,23,2,0)
 
"^DD",727.824,727.824,14,23,3,0)
LAB DSS LAR EXTRACT file (#64.036); DATE RESULTS AVAIL field (#5)
"^DD",727.824,727.824,14,23,4,0)
LAB DATA file (#63); CHEM, HEM, TOX, RIA, SER, etc. sub-file (#63.04);
"^DD",727.824,727.824,14,23,5,0)
   DATE/TIME SPECIMEN TAKEN field (#.01)
"^DD",727.824,727.824,14,23,6,0)
 
"^DD",727.824,727.824,14,23,7,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.824,727.824,14,23,8,0)
cannot be determined, then "000300" is used as default.
"^DD",727.824,727.824,14,"DT")
2970924
"^DD",727.824,727.824,15,0)
DATE RESULTS READY^FO^^0;15^K:$L(X)>8!($L(X)<8) X
"^DD",727.824,727.824,15,.1)
Date Results Ready
"^DD",727.824,727.824,15,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.824,727.824,15,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.824,727.824,15,3)
Answer must be 8 characters in length.
"^DD",727.824,727.824,15,21,0)
^^2^2^2970923^^^
"^DD",727.824,727.824,15,21,1,0)
An 8-character numeric string that represents the date on which
"^DD",727.824,727.824,15,21,2,0)
the Laboratory test result was ready for reporting.
"^DD",727.824,727.824,15,23,0)
^^12^12^2971113^^^^
"^DD",727.824,727.824,15,23,1,0)
Data source:
"^DD",727.824,727.824,15,23,2,0)
 
"^DD",727.824,727.824,15,23,3,0)
LAB DSS LAR EXTRACT file (#64.036); DATE RESULTS AVAIL field (#5)
"^DD",727.824,727.824,15,23,4,0)
  
"^DD",727.824,727.824,15,23,5,0)
LAB DATA file (#63); CHEM, HEM, TOX, RIA, SER, etc. sub-file (#63.04);
"^DD",727.824,727.824,15,23,6,0)
   DATE REPORT COMPLETED field (#.03)
"^DD",727.824,727.824,15,23,7,0)
 
"^DD",727.824,727.824,15,23,8,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.824,727.824,15,23,9,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.824,727.824,15,23,10,0)
then a default is used.  The default date value is the value of the 
"^DD",727.824,727.824,15,23,11,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.824,727.824,15,23,12,0)
Year 2000 compliant per vendor.
"^DD",727.824,727.824,15,"DT")
2970924
"^DD",727.824,727.824,16,0)
TIME RESULTS READY^RFO^^0;16^K:$L(X)>6!($L(X)<6) X
"^DD",727.824,727.824,16,.1)
Time Results Ready
"^DD",727.824,727.824,16,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.824,727.824,16,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.824,727.824,16,3)
Answer must be 6 characters in length.
"^DD",727.824,727.824,16,21,0)
^^2^2^2970923^^^^
"^DD",727.824,727.824,16,21,1,0)
A 6-character numeric string that represents the time of day at
"^DD",727.824,727.824,16,21,2,0)
which the Laboratory test result was ready for reporting.
"^DD",727.824,727.824,16,23,0)
^^9^9^2971113^^^^
"^DD",727.824,727.824,16,23,1,0)
Data source:
"^DD",727.824,727.824,16,23,2,0)
 
"^DD",727.824,727.824,16,23,3,0)
LAB DSS LAR EXTRACT file (#64.036); DATE RESULTS AVAIL field (#5)
"^DD",727.824,727.824,16,23,4,0)
   
"^DD",727.824,727.824,16,23,5,0)
LAB DATA file (#63); CHEM, HEM, TOX, RIA, SER, etc. sub-file (#63.04);
"^DD",727.824,727.824,16,23,6,0)
   DATE REPORT COMPLETED field (#.03)
"^DD",727.824,727.824,16,23,7,0)
 
"^DD",727.824,727.824,16,23,8,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.824,727.824,16,23,9,0)
cannot be determined, then "000300" is used as default.
"^DD",727.824,727.824,16,"DT")
2970924
"^DD",727.824,727.824,17,0)
MOVEMENT FILE #^P405'^DGPM(^0;17^Q
"^DD",727.824,727.824,17,.1)
Movement File Number
"^DD",727.824,727.824,17,3)
Enter the patient movement number associated with this extract record.
"^DD",727.824,727.824,17,21,0)
^^1^1^2961009^
"^DD",727.824,727.824,17,21,1,0)
Current patient movement record associated with this extract record.
"^DD",727.824,727.824,17,23,0)
^^4^4^2961009^
"^DD",727.824,727.824,17,23,1,0)
A call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.824,727.824,17,23,2,0)
patient movement number (indicating inpatient status). This field is set 
"^DD",727.824,727.824,17,23,3,0)
to the value of VAIP(1), which is a pointer to the PATIENT MOVEMENT file 
"^DD",727.824,727.824,17,23,4,0)
(#405).
"^DD",727.824,727.824,17,"DT")
2961009
"^DD",727.824,727.824,18,0)
TREATING SPECIALTY^P42.4'^DIC(42.4,^0;18^Q
"^DD",727.824,727.824,18,.1)
Treating Specialty
"^DD",727.824,727.824,18,3)
Enter the name of the treating specialty associated with this extract record.
"^DD",727.824,727.824,18,21,0)
^^1^1^2961009^
"^DD",727.824,727.824,18,21,1,0)
The name of the treating specialty associated with this extract record.
"^DD",727.824,727.824,18,23,0)
^^6^6^2961009^
"^DD",727.824,727.824,18,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.824,727.824,18,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.824,727.824,18,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.824,727.824,18,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.824,727.824,18,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.824,727.824,18,23,6,0)
SPECIALTY file (#42.4).
"^DD",727.824,727.824,18,"DT")
2961009
"^DD",727.824,727.824,19,0)
WORKLOAD CODE^F^^0;19^K:$L(X)>10!($L(X)<1) X
"^DD",727.824,727.824,19,.1)
Workload Code
"^DD",727.824,727.824,19,3)
Enter the workload code for this event.
"^DD",727.824,727.824,19,21,0)
^^1^1^2970616^^
"^DD",727.824,727.824,19,21,1,0)
The workload code for this event which corresponds to a CAP code.
"^DD",727.824,727.824,19,23,0)
^^4^4^2970616^^
"^DD",727.824,727.824,19,23,1,0)
WKLD CODE field (1) of the WKLD CODE file (#64) as pointed to by the 
"^DD",727.824,727.824,19,23,2,0)
NATIONAL VA LAB CODE field (64) of the LABORATORY TEST file (#60) as
"^DD",727.824,727.824,19,23,3,0)
pointed to by the LOCAL LAB TEST NAME field (1) multiple within the DSS
"^DD",727.824,727.824,19,23,4,0)
LAB TEST field (1) multiple of the DSS LAB TESTS file (#727.2).
"^DD",727.824,727.824,19,"DT")
2961018
"^DD",727.825,727.825,0)
FIELD^^9^33
"^DD",727.825,727.825,0,"DDA")
N
"^DD",727.825,727.825,0,"DIK")
ECX825
"^DD",727.825,727.825,0,"DIKOLD")
ECX825
"^DD",727.825,727.825,0,"DT")
2970912
"^DD",727.825,727.825,0,"IX","AC",727.825,2)

"^DD",727.825,727.825,0,"IX","AINV",727.825,.01)

"^DD",727.825,727.825,0,"NM","QUASAR EXTRACT")

"^DD",727.825,727.825,0,"VRPK")
DSS EXTRACTS
"^DD",727.825,727.825,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.825,727.825,.01,.1)
Sequence Number
"^DD",727.825,727.825,.01,1,0)
^.1
"^DD",727.825,727.825,.01,1,1,0)
727.825^AINV^MUMPS
"^DD",727.825,727.825,.01,1,1,1)
S ^ECX(727.825,"AINV",-X,DA)=""
"^DD",727.825,727.825,.01,1,1,2)
K ^ECX(727.825,"AINV",-X,DA)
"^DD",727.825,727.825,.01,1,1,3)
DO NOT DELETE.
"^DD",727.825,727.825,.01,1,1,"%D",0)
^^3^3^2960808^^^^
"^DD",727.825,727.825,.01,1,1,"%D",1,0)
This is an inverse entry cross reference. It is used to find the
"^DD",727.825,727.825,.01,1,1,"%D",2,0)
last entry in the file. It is essential for the management of the
"^DD",727.825,727.825,.01,1,1,"%D",3,0)
extract and the purge of extract data.
"^DD",727.825,727.825,.01,1,1,"DT")
2921016
"^DD",727.825,727.825,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",727.825,727.825,.01,21,0)
^^1^1^2960701^^^^
"^DD",727.825,727.825,.01,21,1,0)
The record number for this extract entry.
"^DD",727.825,727.825,.01,23,0)
^^1^1^2960701^^^^
"^DD",727.825,727.825,.01,23,1,0)
The internal entry number (IEN) for this record.  This entry is DINUMed.
"^DD",727.825,727.825,.01,"DT")
2960621
"^DD",727.825,727.825,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.825,727.825,1,.1)
Year/Month
"^DD",727.825,727.825,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.825,727.825,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.825,727.825,1,3)
Answer must be 6 characters in length.
"^DD",727.825,727.825,1,21,0)
^^2^2^2970912^^^^
"^DD",727.825,727.825,1,21,1,0)
A six character string representing the year and the month
"^DD",727.825,727.825,1,21,2,0)
for which this extract was performed.
"^DD",727.825,727.825,1,23,0)
^^1^1^2970912^^^^
"^DD",727.825,727.825,1,23,1,0)
Format is YYYYMM; Year 2000 compliant per vendor.
"^DD",727.825,727.825,1,"DT")
2970924
"^DD",727.825,727.825,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.825,727.825,2,.1)
Extract Number
"^DD",727.825,727.825,2,1,0)
^.1
"^DD",727.825,727.825,2,1,1,0)
727.825^AC
"^DD",727.825,727.825,2,1,1,1)
S ^ECX(727.825,"AC",$E(X,1,30),DA)=""
"^DD",727.825,727.825,2,1,1,2)
K ^ECX(727.825,"AC",$E(X,1,30),DA)
"^DD",727.825,727.825,2,1,1,3)
DO NOT DELETE.
"^DD",727.825,727.825,2,1,1,"%D",0)
^^2^2^2960808^^
"^DD",727.825,727.825,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data in
"^DD",727.825,727.825,2,1,1,"%D",2,0)
this file.
"^DD",727.825,727.825,2,1,1,"DT")
2910802
"^DD",727.825,727.825,2,3)
Enter the extract number for this extract.
"^DD",727.825,727.825,2,21,0)
^^2^2^2960807^^^^
"^DD",727.825,727.825,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727)
"^DD",727.825,727.825,2,21,2,0)
for this extract.
"^DD",727.825,727.825,2,23,0)
^^2^2^2960807^^^^
"^DD",727.825,727.825,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is
"^DD",727.825,727.825,2,23,2,0)
to pick up the header for the mail message.
"^DD",727.825,727.825,2,"DT")
2960621
"^DD",727.825,727.825,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.825,727.825,3,.1)
Facility
"^DD",727.825,727.825,3,3)
Enter the station number where this extract was performed.
"^DD",727.825,727.825,3,21,0)
1^^1^1^2961007^^^^
"^DD",727.825,727.825,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.825,727.825,3,23,0)
^^3^3^2961007^^^^
"^DD",727.825,727.825,3,23,1,0)
A free text field that represents the facility NAME (.01) from the
"^DD",727.825,727.825,3,23,2,0)
INSTITUTION file (#4). It is derived from the SITE NAME field
"^DD",727.825,727.825,3,23,3,0)
(.01) in the A&SP SITE PARAMETER file (#509850.8).
"^DD",727.825,727.825,3,"DT")
2960701
"^DD",727.825,727.825,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.825,727.825,4,.1)
Patient No. - DFN
"^DD",727.825,727.825,4,3)
Enter the name of the patient for this extract record.
"^DD",727.825,727.825,4,21,0)
1^^1^1^2961023^^^^
"^DD",727.825,727.825,4,21,1,0)
The name of the patient for this extract record.
"^DD",727.825,727.825,4,23,0)
^^4^4^2961023^^^^
"^DD",727.825,727.825,4,23,1,0)
This pointer is derived from the PATIENT NAME field (1) in the A&SP
"^DD",727.825,727.825,4,23,2,0)
CLINIC VISIT file (#509850.6), which points to the A&SP PATIENT
"^DD",727.825,727.825,4,23,3,0)
file (#509850.2).  This file, in turn is a DINEMed pointer to the
"^DD",727.825,727.825,4,23,4,0)
PATIENT file (#2).
"^DD",727.825,727.825,4,"DT")
2961016
"^DD",727.825,727.825,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.825,727.825,5,.1)
Social Security Number
"^DD",727.825,727.825,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.825,727.825,5,21,0)
^^1^1^2961023^^^^
"^DD",727.825,727.825,5,21,1,0)
The patient's social security number.
"^DD",727.825,727.825,5,23,0)
^^3^3^2961023^^^^
"^DD",727.825,727.825,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN 
"^DD",727.825,727.825,5,23,2,0)
field (4) in the QUASAR EXTRACT file (#727.825), SSN data is derived 
"^DD",727.825,727.825,5,23,3,0)
from the SOCIAL SECURITY NUMBER field (.09) in the PATIENT file (#2).
"^DD",727.825,727.825,5,"DT")
2960621
"^DD",727.825,727.825,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.825,727.825,6,.1)
Name
"^DD",727.825,727.825,6,3)
Your answer must be 4 characters in length.
"^DD",727.825,727.825,6,21,0)
^^1^1^2961023^^^^
"^DD",727.825,727.825,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.825,727.825,6,23,0)
^^4^4^2961023^^^^
"^DD",727.825,727.825,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.825,727.825,6,23,2,0)
(4) in the QUASAR EXTRACT file (#727.825), NAME data is derived from the 
"^DD",727.825,727.825,6,23,3,0)
NAME field (.01) in the PATIENT file (#2). The first four characters of 
"^DD",727.825,727.825,6,23,4,0)
the first "," piece are used, padded with trailing spaces if necessary. 
"^DD",727.825,727.825,6,"DT")
2960621
"^DD",727.825,727.825,7,0)
IN OUT PATIENT INDICATOR^P40.9'^DIC(40.9,^0;8^Q
"^DD",727.825,727.825,7,.1)
In Out Patient Indicator
"^DD",727.825,727.825,7,3)
Enter the appropriate inpatient or outpatient indicator.
"^DD",727.825,727.825,7,21,0)
^^2^2^2960814^^^^
"^DD",727.825,727.825,7,21,1,0)
Indicates whether this patient was an inpatient or an outpatient
"^DD",727.825,727.825,7,21,2,0)
for this extract entry.
"^DD",727.825,727.825,7,23,0)
^^4^4^2960814^^^^
"^DD",727.825,727.825,7,23,1,0)
This field is initialized to a 1, indicating an outpatient status. If 
"^DD",727.825,727.825,7,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.825,727.825,7,23,3,0)
patient movement number, then the field is reset to a 3 indicating 
"^DD",727.825,727.825,7,23,4,0)
inpatient status.
"^DD",727.825,727.825,7,"DT")
2960807
"^DD",727.825,727.825,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.825,727.825,8,.1)
Day
"^DD",727.825,727.825,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.825,727.825,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.825,727.825,8,3)
Answer must be 8 characters in length.
"^DD",727.825,727.825,8,21,0)
^^2^2^2970912^^^^
"^DD",727.825,727.825,8,21,1,0)
This 8-character string represents the date on which the extract was 
"^DD",727.825,727.825,8,21,2,0)
performed.
"^DD",727.825,727.825,8,23,0)
^^9^9^2970923^^^^
"^DD",727.825,727.825,8,23,1,0)
Data source:
"^DD",727.825,727.825,8,23,2,0)
 
"^DD",727.825,727.825,8,23,3,0)
A&SP CLINIC VISIT file (#509850.6); DATE field (#.01)
"^DD",727.825,727.825,8,23,4,0)
 
"^DD",727.825,727.825,8,23,5,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.825,727.825,8,23,6,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.825,727.825,8,23,7,0)
then a default is used.  The default date value is the value of the 
"^DD",727.825,727.825,8,23,8,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.825,727.825,8,23,9,0)
Year 2000 compliant per vendor.
"^DD",727.825,727.825,8,"DT")
2970924
"^DD",727.825,727.825,9,0)
DSS UNIT^P724'^ECD(^0;10^Q
"^DD",727.825,727.825,9,.1)
DSS Unit
"^DD",727.825,727.825,9,3)
Enter the name of the DSS unit for this extract record.
"^DD",727.825,727.825,9,21,0)
^^1^1^2960807^^^^
"^DD",727.825,727.825,9,21,1,0)
This is the name of the DSS unit for this extract record.
"^DD",727.825,727.825,9,23,0)
^^4^4^2960807^^^^
"^DD",727.825,727.825,9,23,1,0)
A pointer to the DSS UNIT file (#724). The DSS unit pointer is derived 
"^DD",727.825,727.825,9,23,2,0)
from the AUDIOLOGY DSS UNIT LINK field (727.8251) or from the SPEECH 
"^DD",727.825,727.825,9,23,3,0)
PATHOLOGY DSS UNIT LINK field (727.8252) in the A&SP SITE PARAMETER file 
"^DD",727.825,727.825,9,23,4,0)
(#509850.8).
"^DD",727.825,727.825,9,"DT")
2960621
"^DD",727.825,727.825,10,0)
CATEGORY^F^^0;11^K:$L(X)>6!($L(X)<1) X
"^DD",727.825,727.825,10,.1)
Category
"^DD",727.825,727.825,10,3)
Enter the category for this extract record.
"^DD",727.825,727.825,10,21,0)
1^^2^2^2961023^^^^
"^DD",727.825,727.825,10,21,1,0)
This field contains the name of the category selected for this 
"^DD",727.825,727.825,10,21,2,0)
extract record.
"^DD",727.825,727.825,10,23,0)
^^1^1^2961023^^^^
"^DD",727.825,727.825,10,23,1,0)
For the QUASAR extract, the CATEGORY field is null.
"^DD",727.825,727.825,10,"DT")
2961016
"^DD",727.825,727.825,11,0)
PROCEDURE^F^^0;12^K:$L(X)>8!($L(X)<5) X
"^DD",727.825,727.825,11,.1)
Procedure
"^DD",727.825,727.825,11,3)
Enter the CPT Code "-" and 2 character modifier.
"^DD",727.825,727.825,11,21,0)
1^^2^2^2961023^^^^
"^DD",727.825,727.825,11,21,1,0)
This field contains the CPT code of the procedure selected for
"^DD",727.825,727.825,11,21,2,0)
this extract record.
"^DD",727.825,727.825,11,23,0)
^^3^3^2961023^^^^
"^DD",727.825,727.825,11,23,1,0)
The procedure pointer is derived from the PROCEDURE CODE field (10)
"^DD",727.825,727.825,11,23,2,0)
in the A&SP CLINIC VISIT file (#509850.6). It is the CPT code for
"^DD",727.825,727.825,11,23,3,0)
procedures from the CPT file (#81).
"^DD",727.825,727.825,11,"DT")
2961023
"^DD",727.825,727.825,12,0)
VOLUME^NJ4,0^^0;13^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.825,727.825,12,.1)
Volume
"^DD",727.825,727.825,12,3)
Enter a number between 1 and 9999, 0 decimal digits.
"^DD",727.825,727.825,12,21,0)
^^1^1^2960701^^^^
"^DD",727.825,727.825,12,21,1,0)
This field tracks the volume of this specific procedure performed.
"^DD",727.825,727.825,12,23,0)
^^1^1^2960701^^^^
"^DD",727.825,727.825,12,23,1,0)
Numeric volume for this procedure associated with this extract record.
"^DD",727.825,727.825,12,"DT")
2960621
"^DD",727.825,727.825,13,0)
COST CENTER^F^^0;14^K:$L(X)>8!($L(X)<6) X
"^DD",727.825,727.825,13,.1)
Cost Center
"^DD",727.825,727.825,13,3)
Enter the cost center associated with this extract record.
"^DD",727.825,727.825,13,21,0)
^^1^1^2960807^^^^
"^DD",727.825,727.825,13,21,1,0)
This is the cost center associated with this extract record.
"^DD",727.825,727.825,13,23,0)
^^4^4^2960807^^^^
"^DD",727.825,727.825,13,23,1,0)
Cost center is derived from the COST CENTER field (3) in the DSS UNIT 
"^DD",727.825,727.825,13,23,2,0)
file (#724). The DSS unit pointer is derived from the AUDIOLOGY DSS UNIT 
"^DD",727.825,727.825,13,23,3,0)
LINK field (727.8251) or from the SPEECH PATHOLOGY DSS UNIT LINK field 
"^DD",727.825,727.825,13,23,4,0)
(727.8252) in the A&SP SITE PARAMETER file (#509850.8).
"^DD",727.825,727.825,13,"DT")
2960701
"^DD",727.825,727.825,14,0)
ORDERING SECTION^F^^0;15^K:$L(X)>6!($L(X)<1) X
"^DD",727.825,727.825,14,.1)
Ordering Section
"^DD",727.825,727.825,14,3)
Answer must be 1-6 characters in length.
"^DD",727.825,727.825,14,21,0)
^^2^2^2970912^^^^
"^DD",727.825,727.825,14,21,1,0)
This is the IEN in file #723 of the Ordering Section associated with
"^DD",727.825,727.825,14,21,2,0)
this extract record.
"^DD",727.825,727.825,14,23,0)
^^6^6^2970912^^^^
"^DD",727.825,727.825,14,23,1,0)
This character string represents the IEN of the Ordering Section
"^DD",727.825,727.825,14,23,2,0)
in the MEDICAL SPECIALTY file (#723).  The Ordering Section
"^DD",727.825,727.825,14,23,3,0)
comes from the MEDICAL SPECIALTY field (#2) in the DSS UNIT file (#724). 
"^DD",727.825,727.825,14,23,4,0)
The DSS unit pointer is derived from the AUDIOLOGY DSS UNIT LINK field 
"^DD",727.825,727.825,14,23,5,0)
(#727.8251) or from the SPEECH PATHOLOGY DSS UNIT LINK field (#727.8252) 
"^DD",727.825,727.825,14,23,6,0)
in the A&SP SITE PARAMETER file (#509850.8).
"^DD",727.825,727.825,14,"DT")
2970911
"^DD",727.825,727.825,15,0)
SECTION^F^^0;16^K:$L(X)>6!($L(X)<1) X
"^DD",727.825,727.825,15,.1)
Section
"^DD",727.825,727.825,15,3)
Answer must be 1-6 characters in length.
"^DD",727.825,727.825,15,21,0)
^^2^2^2970912^^^^
"^DD",727.825,727.825,15,21,1,0)
This is the IEN in file #723 of the Medical Specialty of the DSS Unit
"^DD",727.825,727.825,15,21,2,0)
associated with this extract record.
"^DD",727.825,727.825,15,23,0)
^^6^6^2970912^^^^
"^DD",727.825,727.825,15,23,1,0)
This character string represents an IEN in the MEDICAL SPECIALTY
"^DD",727.825,727.825,15,23,2,0)
file (#723).  This data element is derived from the MEDICAL
"^DD",727.825,727.825,15,23,3,0)
SPECIALTY field (#2) in the DSS UNIT file (#724). The DSS unit 
"^DD",727.825,727.825,15,23,4,0)
pointer is derived from the AUDIOLOGY DSS UNIT LINK field (#727.8251) 
"^DD",727.825,727.825,15,23,5,0)
or from the SPEECH PATHOLOGY DSS UNIT LINK field (#727.8252) in the  
"^DD",727.825,727.825,15,23,6,0)
A&SP SITE PARAMETER file (#509850.8).
"^DD",727.825,727.825,15,"DT")
2970911
"^DD",727.825,727.825,16,0)
PROVIDER^F^^0;17^K:$L(X)>10!($L(X)<2) X
"^DD",727.825,727.825,16,.1)
Provider
"^DD",727.825,727.825,16,3)
Answer must be 2-10 characters in length.
"^DD",727.825,727.825,16,21,0)
^^4^4^2970912^^^^
"^DD",727.825,727.825,16,21,1,0)
This character string is an IEN for the NEW PERSON file (#200);
"^DD",727.825,727.825,16,21,2,0)
a '2' has been appended to the beginning of the character string.
"^DD",727.825,727.825,16,21,3,0)
It represents the Provider who performed the procedure associated
"^DD",727.825,727.825,16,21,4,0)
with the A&SP Clinic Visit record.
"^DD",727.825,727.825,16,23,0)
^^4^4^2970912^^^^
"^DD",727.825,727.825,16,23,1,0)
A character string of format "2"_IEN, where IEN is the internal 
"^DD",727.825,727.825,16,23,2,0)
entry number for the Provider in the NEW PERSON file (#200).  Data is
"^DD",727.825,727.825,16,23,3,0)
derived from LEAD ROLE field (#.27) in the A&SP CLINIC VISIT file
"^DD",727.825,727.825,16,23,4,0)
(#509850.6).
"^DD",727.825,727.825,16,"DT")
2970912
"^DD",727.825,727.825,18,0)
PROVIDER #2^F^^0;19^K:$L(X)>10!($L(X)<2) X
"^DD",727.825,727.825,18,.1)
Provider #2
"^DD",727.825,727.825,18,3)
Answer must be 2-10 characters in length.
"^DD",727.825,727.825,18,21,0)
^^1^1^2970912^^^^
"^DD",727.825,727.825,18,21,1,0)
The Provider #2 field is not used for the QUASAR extract.
"^DD",727.825,727.825,18,23,0)
^^1^1^2970912^^^^
"^DD",727.825,727.825,18,23,1,0)
For the QUASAR extract, the PROVIDER #2 field is null.
"^DD",727.825,727.825,18,"DT")
2970912
"^DD",727.825,727.825,20,0)
PROVIDER #3^F^^0;21^K:$L(X)>10!($L(X)<2) X
"^DD",727.825,727.825,20,.1)
Provider #3
"^DD",727.825,727.825,20,3)
Answer must be 2-10 characters in length.
"^DD",727.825,727.825,20,21,0)
1^^1^1^2970912^^^^
"^DD",727.825,727.825,20,21,1,0)
The Provider #3 field is not used for the QUASAR extract.
"^DD",727.825,727.825,20,23,0)
^^1^1^2970912^^^^
"^DD",727.825,727.825,20,23,1,0)
For the QUASAR extract, the PROVIDER #3 field is null.
"^DD",727.825,727.825,20,"DT")
2970912
"^DD",727.825,727.825,24,0)
MOVEMENT FILE #^P405'^DGPM(^0;24^Q
"^DD",727.825,727.825,24,.1)
Movement File Number
"^DD",727.825,727.825,24,3)
Enter the patient movement number associated with this extract record.
"^DD",727.825,727.825,24,21,0)
^^1^1^2960814^^^^
"^DD",727.825,727.825,24,21,1,0)
Current patient movement record associated with this extract record.
"^DD",727.825,727.825,24,23,0)
^^4^4^2960814^^^^
"^DD",727.825,727.825,24,23,1,0)
A call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.825,727.825,24,23,2,0)
patient movement number (indicating inpatient status). This field is set 
"^DD",727.825,727.825,24,23,3,0)
to the value of VAIP(1), which is a pointer to the PATIENT MOVEMENT file 
"^DD",727.825,727.825,24,23,4,0)
(#405).
"^DD",727.825,727.825,24,"DT")
2960701
"^DD",727.825,727.825,25,0)
TREATING SPECIALTY^F^^0;25^K:$L(X)>6!($L(X)<1) X
"^DD",727.825,727.825,25,.1)
Treating Specialty
"^DD",727.825,727.825,25,3)
Answer must be 1-6 characters in length.
"^DD",727.825,727.825,25,21,0)
^^3^3^2970912^^^^
"^DD",727.825,727.825,25,21,1,0)
The IEN in file #42.4 of the Specialty associated with the patient
"^DD",727.825,727.825,25,21,2,0)
on the date of the Event Capture procedure.  Only applicable
"^DD",727.825,727.825,25,21,3,0)
if the patient was an inpatient on the date of the procedure.
"^DD",727.825,727.825,25,23,0)
^^8^8^2970912^^^^
"^DD",727.825,727.825,25,23,1,0)
A character string which represents an IEN in the SPECIALTY file (#42.4).
"^DD",727.825,727.825,25,23,2,0)
 
"^DD",727.825,727.825,25,23,3,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.825,727.825,25,23,4,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.825,727.825,25,23,5,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.825,727.825,25,23,6,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.825,727.825,25,23,7,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.825,727.825,25,23,8,0)
SPECIALTY file (#42.4).
"^DD",727.825,727.825,25,"DT")
2970911
"^DD",727.825,727.825,26,0)
TIME^FO^^0;26^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.825,727.825,26,.1)
Time
"^DD",727.825,727.825,26,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.825,727.825,26,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.825,727.825,26,3)
Answer must be 6 characters in length.
"^DD",727.825,727.825,26,21,0)
^^2^2^2970912^^^^
"^DD",727.825,727.825,26,21,1,0)
The time when the procedure associated with this extract record 
"^DD",727.825,727.825,26,21,2,0)
was performed.
"^DD",727.825,727.825,26,23,0)
^^4^4^2970923^^^^
"^DD",727.825,727.825,26,23,1,0)
A six-character string of format HHMMSS which represents the time
"^DD",727.825,727.825,26,23,2,0)
(military time) when the procedure was performed.
"^DD",727.825,727.825,26,23,3,0)
 
"^DD",727.825,727.825,26,23,4,0)
A default of "000000" will be used in this field.
"^DD",727.825,727.825,26,"DT")
2970924
"^DD",727.825,727.825,27,0)
PRIMARY CARE TEAM^F^^0;27^K:$L(X)>4!($L(X)<1) X
"^DD",727.825,727.825,27,.1)
Primary Care Team
"^DD",727.825,727.825,27,3)
Enter primary care team assigned to this patient.
"^DD",727.825,727.825,27,21,0)
^^1^1^2961105^^
"^DD",727.825,727.825,27,21,1,0)
The primary care team assigned to this patient.
"^DD",727.825,727.825,27,23,0)
^^6^6^2961105^
"^DD",727.825,727.825,27,23,1,0)
Using the DATE field (.01) from the A&SP CLINIC VISIT file (#509850.6) 
"^DD",727.825,727.825,27,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) 
"^DD",727.825,727.825,27,23,3,0)
in the QUASAR EXTRACT file (#727.825), a call is made to the Scheduling 
"^DD",727.825,727.825,27,23,4,0)
API, OUTPTTM^SDUTL3. The API returns the team's internal entry number 
"^DD",727.825,727.825,27,23,5,0)
and name from the TEAM file (#404.51). Only the pointer (IEN) to File 
"^DD",727.825,727.825,27,23,6,0)
404.51 is transmitted.
"^DD",727.825,727.825,27,"DT")
2961105
"^DD",727.825,727.825,28,0)
PRIMARY CARE PROVIDER^F^^0;28^K:$L(X)>11!($L(X)<1) X
"^DD",727.825,727.825,28,.1)
Primary Care Provider
"^DD",727.825,727.825,28,3)
Enter primary care provider assigned to this patient.
"^DD",727.825,727.825,28,21,0)
^^1^1^2961105^^
"^DD",727.825,727.825,28,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.825,727.825,28,23,0)
^^6^6^2961105^
"^DD",727.825,727.825,28,23,1,0)
Using the DATE field (.01) from the A&SP CLINIC VISIT file (#509850.6) 
"^DD",727.825,727.825,28,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) 
"^DD",727.825,727.825,28,23,3,0)
in the QUASAR EXTRACT file (#727.825), a call is made to the Scheduling 
"^DD",727.825,727.825,28,23,4,0)
API, OUTPTPR^SDUTL3. The API returns the provider's internal entry 
"^DD",727.825,727.825,28,23,5,0)
number and name from the NEW PERSON file (#200). Only the pointer (IEN) 
"^DD",727.825,727.825,28,23,6,0)
to File 200 is transmitted.
"^DD",727.825,727.825,28,"DT")
2961016
"^DD",727.825,727.825,29,0)
PCE CPT CODE^F^^0;29^K:$L(X)>8!($L(X)<5) X
"^DD",727.825,727.825,29,.1)
Patient Care Encounter CPT Code
"^DD",727.825,727.825,29,3)
Enter CPT Code, "-", and 2 character modifier.
"^DD",727.825,727.825,29,21,0)
^^2^2^2961105^^
"^DD",727.825,727.825,29,21,1,0)
This field contains the CPT code of the procedure selected for this 
"^DD",727.825,727.825,29,21,2,0)
extract record.
"^DD",727.825,727.825,29,23,0)
^^3^3^2961105^^
"^DD",727.825,727.825,29,23,1,0)
The procedure pointer is derived from the PROCEDURE CODE field (10) 
"^DD",727.825,727.825,29,23,2,0)
in the A&SP CLINIC VISIT file (#509850.6). It is the CPT code for 
"^DD",727.825,727.825,29,23,3,0)
procedures from the CPT file (#81).
"^DD",727.825,727.825,29,"DT")
2961017
"^DD",727.825,727.825,30,0)
ICD-9 CODE^F^^0;30^K:$L(X)>7!($L(X)<1) X
"^DD",727.825,727.825,30,.1)
ICD-9 Code
"^DD",727.825,727.825,30,3)
Enter ICD-9 code for this record.
"^DD",727.825,727.825,30,21,0)
^^1^1^2961105^^^
"^DD",727.825,727.825,30,21,1,0)
This field contains the ICD9 diagnostic code for this extract record.
"^DD",727.825,727.825,30,23,0)
^^7^7^2961105^^^
"^DD",727.825,727.825,30,23,1,0)
The diagnostic code pointer is derived from the first entry in the 
"^DD",727.825,727.825,30,23,2,0)
DIAGNOSTIC CODE field (3) in the A&SP CLINIC VISIT file (#509850.6). It 
"^DD",727.825,727.825,30,23,3,0)
is a pointer to the A&SP DIAGNOSTIC CONDITION file (#509850.1) which is 
"^DD",727.825,727.825,30,23,4,0)
a DINUMed pointer to the ICD DIAGNOSIS file (#80). The first code 
"^DD",727.825,727.825,30,23,5,0)
entered is always assumed to be the primary complaint. Subsequent codes 
"^DD",727.825,727.825,30,23,6,0)
are assumed to be secondary complaints. Using the pointer, ICD-9 CODE is 
"^DD",727.825,727.825,30,23,7,0)
derived from the ICD DIAGNOSIS file (#80).
"^DD",727.825,727.825,30,"DT")
2961105
"^DD",727.825,727.825,31,0)
AGENT ORANGE^S^Y:YES;N:NO;U:UNKNOWN;^0;31^Q
"^DD",727.825,727.825,31,.1)
Agent Orange
"^DD",727.825,727.825,31,3)
Select the appropriate agent orange status for this patient.
"^DD",727.825,727.825,31,21,0)
^^2^2^2961023^^^
"^DD",727.825,727.825,31,21,1,0)
Data is Y if this patient was exposed to agent orange, N if not, 
"^DD",727.825,727.825,31,21,2,0)
or U if unknown.
"^DD",727.825,727.825,31,23,0)
^^4^4^2961023^^
"^DD",727.825,727.825,31,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.825,727.825,31,23,2,0)
(4) in the QUASAR EXTRACT file (#727.825), AGENT ORANGE data is derived 
"^DD",727.825,727.825,31,23,3,0)
from the AGENT ORANGE EXPOS. INDICATED? field (.32102) in the PATIENT 
"^DD",727.825,727.825,31,23,4,0)
file (#2).
"^DD",727.825,727.825,31,"DT")
2961017
"^DD",727.825,727.825,32,0)
RADIATION EXPOSURE^S^Y:YES;N:NO;U:UNKNOWN;^0;32^Q
"^DD",727.825,727.825,32,.1)
Radiation Exposure
"^DD",727.825,727.825,32,3)
Select the appropriate radiation status for this patient.
"^DD",727.825,727.825,32,21,0)
^^2^2^2961023^^^
"^DD",727.825,727.825,32,21,1,0)
Data is Y if this patient claims exposure to ionizing radiation, N if 
"^DD",727.825,727.825,32,21,2,0)
not, or U if unknown.
"^DD",727.825,727.825,32,23,0)
^^3^3^2961023^^
"^DD",727.825,727.825,32,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.825,727.825,32,23,2,0)
in the QUASAR EXTRACT file (#727.825), RADIATION data is derived from the
"^DD",727.825,727.825,32,23,3,0)
RADIATION EXPOSURE INDICATED? field (.32103) in the PATIENT file (#2).
"^DD",727.825,727.825,32,"DT")
2961017
"^DD",727.825,727.825,33,0)
ENVIRONMENTAL CONTAMINANTS^S^Y:YES;N:NO;U:UNKNOWN;^0;33^Q
"^DD",727.825,727.825,33,.1)
Environmental Contaminants
"^DD",727.825,727.825,33,3)
Select the appropriate environmental contaminants status for this patient.
"^DD",727.825,727.825,33,21,0)
^^2^2^2961023^^^
"^DD",727.825,727.825,33,21,1,0)
Data is Y if this patient claims exposure to environmental contaminants, 
"^DD",727.825,727.825,33,21,2,0)
N if not, or U if unknown.
"^DD",727.825,727.825,33,23,0)
^^4^4^2961023^^
"^DD",727.825,727.825,33,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.825,727.825,33,23,2,0)
in the QUASAR EXTRACT file (#727.825), ENVIRONMENTAL CONTAMINANTS data is
"^DD",727.825,727.825,33,23,3,0)
derived from the ENVIRONMENTAL CONTAMINANTS? field (.322013) in the
"^DD",727.825,727.825,33,23,4,0)
PATIENT file (#2).
"^DD",727.825,727.825,33,"DT")
2961017
"^DD",727.825,727.825,34,0)
SERVICE CONNECTED^S^Y:YES;N:NO;^0;34^Q
"^DD",727.825,727.825,34,.1)
Service Connected
"^DD",727.825,727.825,34,3)
Select the appropriate service connected status for this patient.
"^DD",727.825,727.825,34,21,0)
^^1^1^2961023^^
"^DD",727.825,727.825,34,21,1,0)
Data is Y if this patient is service connected, N if not.
"^DD",727.825,727.825,34,23,0)
^^3^3^2961023^^
"^DD",727.825,727.825,34,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.825,727.825,34,23,2,0)
in the QUASAR EXTRACT file (#727.825), SERVICE CONNECTED data is derived
"^DD",727.825,727.825,34,23,3,0)
from the SERVICE CONNECTED? field (.301) in the PATIENT file (#2).
"^DD",727.825,727.825,34,"DT")
2961017
"^DD",727.825,727.825,35,0)
SENT TO PCE^S^Y:YES;N:NO;^0;35^Q
"^DD",727.825,727.825,35,.1)
Sent to PCE
"^DD",727.825,727.825,35,3)
Enter Y if data has been sent to PCE, N if not.
"^DD",727.825,727.825,35,21,0)
^^1^1^2961105^^
"^DD",727.825,727.825,35,21,1,0)
This field marked as a placeholder for future use.
"^DD",727.825,727.825,35,23,0)
^^2^2^2961105^^
"^DD",727.825,727.825,35,23,1,0)
For the QUASAR extract, the SENT TO PCE field is NO. This field is 
"^DD",727.825,727.825,35,23,2,0)
marked as a placeholder for future use.
"^DD",727.825,727.825,35,"DT")
2961017
"^DD",727.825,727.825,37,0)
DSS IDENTIFIER^F^^0;37^K:$L(X)>6!($L(X)<6) X
"^DD",727.825,727.825,37,.1)
DSS Identifier
"^DD",727.825,727.825,37,3)
Answer must be 6 characters in length.
"^DD",727.825,727.825,37,21,0)
^^6^6^2970912^^
"^DD",727.825,727.825,37,21,1,0)
The DSS Identifier (stop code or credit stop code pair) of the 
"^DD",727.825,727.825,37,21,2,0)
clinic associated with the A&SP CLINIC VISIT (file #509850.6) 
"^DD",727.825,727.825,37,21,3,0)
record.  This identifier will be exactly 6 characters in length.  
"^DD",727.825,727.825,37,21,4,0)
The first 3 characters will identify the primary stop code.  
"^DD",727.825,727.825,37,21,5,0)
The second three characters will identify the credit stop code, 
"^DD",727.825,727.825,37,21,6,0)
if any.
"^DD",727.825,727.825,37,23,0)
^^15^15^2971113^^^^
"^DD",727.825,727.825,37,23,1,0)
The DSS Identifier (stop code or credit stop code pair) of the 
"^DD",727.825,727.825,37,23,2,0)
clinic associated with the A&SP CLINIC VISIT (file #509850.6) 
"^DD",727.825,727.825,37,23,3,0)
record.  This identifier will be exactly 6 characters in length.  
"^DD",727.825,727.825,37,23,4,0)
The first 3 characters will identify the primary stop code.  
"^DD",727.825,727.825,37,23,5,0)
The second three characters will identify the secondary stop
"^DD",727.825,727.825,37,23,6,0)
code.  If the secondary stop code (credit stop code) is not
"^DD",727.825,727.825,37,23,7,0)
known, then "000" will be used as the last 3 characters of the
"^DD",727.825,727.825,37,23,8,0)
data element.
"^DD",727.825,727.825,37,23,9,0)
  
"^DD",727.825,727.825,37,23,10,0)
Data source:
"^DD",727.825,727.825,37,23,11,0)
 
"^DD",727.825,727.825,37,23,12,0)
   (1) A&SP CLINIC VISIT file (#509850.6); CLINIC LOCATION field (#2.6)
"^DD",727.825,727.825,37,23,13,0)
   (2) HOSPITAL LOCATION file (#44); STOP CODE NUMBER field (#8) 
"^DD",727.825,727.825,37,23,14,0)
       and CREDIT STOP CODE field (#2503)
"^DD",727.825,727.825,37,23,15,0)
   (3) CLINIC STOP file (#40.7); AMIS REPORTING STOP CODE field (#1)
"^DD",727.825,727.825,37,"DT")
2970911
"^DD",727.825,727.825,38,0)
DCM DEPARTMENT^F^^0;38^K:$L(X)>7!($L(X)<4) X
"^DD",727.825,727.825,38,.1)
DCM Department
"^DD",727.825,727.825,38,3)
Answer must be 4-7 characters in length.
"^DD",727.825,727.825,38,21,0)
^^2^2^2970912^
"^DD",727.825,727.825,38,21,1,0)
This is the DCM Department associated with the DSS Unit of this
"^DD",727.825,727.825,38,21,2,0)
A&SP Clinic Visit extract record.
"^DD",727.825,727.825,38,23,0)
^^15^15^2971113^^
"^DD",727.825,727.825,38,23,1,0)
This data element will be derived from the UNIT NUMBER 
"^DD",727.825,727.825,38,23,2,0)
field (#4) of the DSS UNIT file (#724).
"^DD",727.825,727.825,38,23,3,0)
  
"^DD",727.825,727.825,38,23,4,0)
Format  ABBC.xx     where
"^DD",727.825,727.825,38,23,5,0)
     A = clinical service identifier
"^DD",727.825,727.825,38,23,6,0)
    BB = financial indicator
"^DD",727.825,727.825,38,23,7,0)
     C = division identifier
"^DD",727.825,727.825,38,23,8,0)
   .xx = subsection identifier (optional)
"^DD",727.825,727.825,38,23,9,0)
 
"^DD",727.825,727.825,38,23,10,0)
The source of the data is:
"^DD",727.825,727.825,38,23,11,0)
 
"^DD",727.825,727.825,38,23,12,0)
   (1) A&SP CLINIC VISIT file (#509850.6); CLINIC STOP CODE field (#4)
"^DD",727.825,727.825,38,23,13,0)
   (2) A&SP SITE PARAMETERS file (#509850.8); AUDIOLOGY DSS UNIT LINK 
"^DD",727.825,727.825,38,23,14,0)
       field (#727.8251) or SPEECH PATHOLOGY DSS UNIT LINK (#727.8252)
"^DD",727.825,727.825,38,23,15,0)
   (3) DSSUNIT file (#724); UNIT NUMBER field (#4)
"^DD",727.825,727.825,38,"DT")
2970912
"^DD",728,728,0)
FIELD^^58^54
"^DD",728,728,0,"DDA")
N
"^DD",728,728,0,"DT")
2960625
"^DD",728,728,0,"IX","B",728,.01)

"^DD",728,728,0,"NM","DSS EXTRACTS")

"^DD",728,728,0,"VRPK")
DSS EXTRACTS
"^DD",728,728,.01,0)
NAME^RP4'^DIC(4,^0;1^Q
"^DD",728,728,.01,1,0)
^.1
"^DD",728,728,.01,1,1,0)
728^B
"^DD",728,728,.01,1,1,1)
S ^ECX(728,"B",$E(X,1,30),DA)=""
"^DD",728,728,.01,1,1,2)
K ^ECX(728,"B",$E(X,1,30),DA)
"^DD",728,728,.01,3)
Enter your DSS location or station number.
"^DD",728,728,.01,21,0)
^^2^2^2970908^^^^
"^DD",728,728,.01,21,1,0)
This field contains a pointer to the corresponding location (station number)
"^DD",728,728,.01,21,2,0)
entry in the INSTITUTION file (#4).
"^DD",728,728,.01,23,0)
^^1^1^2970908^^
"^DD",728,728,.01,23,1,0)
Pointer to the INSTITUTION file (#4).
"^DD",728,728,.01,"DT")
2891012
"^DD",728,728,.5,0)
LAB LMIP^SI^0:NO;1:YES;^LMIP;1^Q
"^DD",728,728,.5,3)
Enter "YES" if you are ready to send LMIP Codes for LAB Extract.
"^DD",728,728,.5,21,0)
^^15^15^2960605^
"^DD",728,728,.5,21,1,0)
This field is a flag that indicates whether a facility is ready to send 
"^DD",728,728,.5,21,2,0)
LMIP codes for the LAB Extract. To answer "YES" to this question, the 
"^DD",728,728,.5,21,3,0)
site must be able to answer "YES" to BOTH of the following questions:
"^DD",728,728,.5,21,4,0)
 
"^DD",728,728,.5,21,5,0)
1. They are in DSS Implementation Round 5 or higher, OR they are in IR1 
"^DD",728,728,.5,21,6,0)
   through IR4 and are extracting data for FY97 or beyond.
"^DD",728,728,.5,21,7,0)
2. All Lab CO directives for LMIP have been completed at their facility.
"^DD",728,728,.5,21,8,0)
   This means that their Lab Service has matched all entries in the 
"^DD",728,728,.5,21,9,0)
   LABORATORY TEST file (#60) to an LMIP code and therefore they are 
"^DD",728,728,.5,21,10,0)
   ready to use the new DSS LAB Extract version that sends only the LMIP 
"^DD",728,728,.5,21,11,0)
   codes to DSS for their initial LAB Feeder Key Values.
"^DD",728,728,.5,21,12,0)
 
"^DD",728,728,.5,21,13,0)
**NOTE** Once this field is set to "YES", the facility is not asked any 
"^DD",728,728,.5,21,14,0)
of these questions again and will automatically use the new DSS LAB 
"^DD",728,728,.5,21,15,0)
Extract version for all future extracts.
"^DD",728,728,.5,"DT")
2970523
"^DD",728,728,7,0)
LAST DATE LAB^D^^7;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,7,3)
Enter the last date that information was extracted for Laboratory.
"^DD",728,728,7,21,0)
^^2^2^2950314^^^^
"^DD",728,728,7,21,1,0)
This field contains the last date that Laboratory information was
"^DD",728,728,7,21,2,0)
extracted to the DSS software.
"^DD",728,728,7,23,0)
^^2^2^2960625^^
"^DD",728,728,7,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,7,23,2,0)
the VA FileMan.
"^DD",728,728,7,"DT")
2900522
"^DD",728,728,8,0)
LAST DATE OP PHARMACY^D^^7;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,8,3)
Enter the last date that information was extracted for Outpatient Pharmacy.
"^DD",728,728,8,21,0)
^^2^2^2950314^^^
"^DD",728,728,8,21,1,0)
This field contains the last date that Outpatient Pharmacy information
"^DD",728,728,8,21,2,0)
was extracted to the DSS software.
"^DD",728,728,8,23,0)
^^2^2^2951018^
"^DD",728,728,8,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,8,23,2,0)
the VA FileMan.
"^DD",728,728,8,"DT")
2900522
"^DD",728,728,9,0)
LAST DATE EC^D^^7;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,9,3)
Enter the last date that information was extracted for Event Capture.
"^DD",728,728,9,21,0)
^^2^2^2950314^^^^
"^DD",728,728,9,21,1,0)
This field contains the last date that Event Capture information was
"^DD",728,728,9,21,2,0)
extracted to the DSS software.
"^DD",728,728,9,23,0)
^^2^2^2951018^
"^DD",728,728,9,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,9,23,2,0)
the VA FileMan.
"^DD",728,728,9,"DT")
2940328
"^DD",728,728,10,0)
LAST DATE ADT^D^^7;4^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,10,3)
Enter the last date that information was extracted for ADT.
"^DD",728,728,10,21,0)
^^2^2^2950315^^^^
"^DD",728,728,10,21,1,0)
This field contains the last date that MAS admission/discharge/transfer
"^DD",728,728,10,21,2,0)
information was extracted to the DSS software.
"^DD",728,728,10,23,0)
^^2^2^2951018^
"^DD",728,728,10,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,10,23,2,0)
the VA FileMan.
"^DD",728,728,10,"DT")
2900821
"^DD",728,728,11,0)
LAST DATE SURGERY^D^^7;5^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,11,3)
Enter the last date that information was extracted for Surgery.
"^DD",728,728,11,21,0)
^^2^2^2950314^^^^
"^DD",728,728,11,21,1,0)
This field contains the last date that Surgery information was extracted
"^DD",728,728,11,21,2,0)
to the DSS software.
"^DD",728,728,11,23,0)
^^2^2^2951018^
"^DD",728,728,11,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,11,23,2,0)
the VA FileMan.
"^DD",728,728,11,"DT")
2900614
"^DD",728,728,12,0)
LAST DATE RADIOLOGY^D^^7;6^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,12,3)
Enter the last date that information was extracted for Radiology.
"^DD",728,728,12,21,0)
^^2^2^2950314^^^^
"^DD",728,728,12,21,1,0)
This field contains the last date that Radiology information was extracted
"^DD",728,728,12,21,2,0)
to the DSS software.
"^DD",728,728,12,23,0)
^^2^2^2951018^
"^DD",728,728,12,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,12,23,2,0)
the VA FileMan.
"^DD",728,728,12,"DT")
2900821
"^DD",728,728,13,0)
LAST DATE NURSING^D^^7;7^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,13,3)
Enter the last date that information was extracted for Nursing.
"^DD",728,728,13,21,0)
^^2^2^2950314^^
"^DD",728,728,13,21,1,0)
This field contains the last date that Nursing information was extracted 
"^DD",728,728,13,21,2,0)
to the DSS software.
"^DD",728,728,13,23,0)
^^2^2^2951018^
"^DD",728,728,13,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,13,23,2,0)
the VA FileMan.
"^DD",728,728,13,"DT")
2901210
"^DD",728,728,14,0)
LAST DATE UD MEDS^D^^7;8^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,14,3)
Enter the last date that information was extracted for Pharmacy Unit Dose.
"^DD",728,728,14,21,0)
^^2^2^2951018^^^
"^DD",728,728,14,21,1,0)
This field contains the last date that Pharmacy Unit Dose information
"^DD",728,728,14,21,2,0)
was extracted to the DSS software.
"^DD",728,728,14,23,0)
^^2^2^2951018^
"^DD",728,728,14,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,14,23,2,0)
the VA FileMan.
"^DD",728,728,14,"DT")
2910214
"^DD",728,728,15,0)
LAST DATE DENTAL^D^^7;9^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,15,3)
Enter the last date that information was extracted for Dental.
"^DD",728,728,15,21,0)
^^2^2^2950314^^
"^DD",728,728,15,21,1,0)
This field contains the last date that Dental information was extracted
"^DD",728,728,15,21,2,0)
to the DSS software.
"^DD",728,728,15,23,0)
^^2^2^2951018^
"^DD",728,728,15,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,15,23,2,0)
the VA FileMan.
"^DD",728,728,15,"DT")
2910228
"^DD",728,728,16,0)
LAST DATE IFCAP^D^^7;10^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,16,3)
Enter the last date that information was extracted for IFCAP.
"^DD",728,728,16,21,0)
^^2^2^2950314^^
"^DD",728,728,16,21,1,0)
This field contains the last date that IFCAP/DSS Unit information was
"^DD",728,728,16,21,2,0)
extracted to the DSS software.
"^DD",728,728,16,23,0)
^^2^2^2951018^
"^DD",728,728,16,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,16,23,2,0)
the VA FileMan.
"^DD",728,728,16,"DT")
2910228
"^DD",728,728,17,0)
LAST DATE CLINIC VISITS^D^^7;11^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,17,3)
Enter the last date that information was extracted for Clinic Visits.
"^DD",728,728,17,21,0)
^^2^2^2950314^^
"^DD",728,728,17,21,1,0)
This field contains the last date that Clinic Visits information was
"^DD",728,728,17,21,2,0)
extracted to the DSS software.
"^DD",728,728,17,23,0)
^^2^2^2951018^
"^DD",728,728,17,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,17,23,2,0)
the VA FileMan.
"^DD",728,728,17,"DT")
2910322
"^DD",728,728,18,0)
LAST DATE WARD STOCK^D^^7;12^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,18,3)
Enter the last date that information was extracted for Ward Stock.
"^DD",728,728,18,21,0)
^^2^2^2950314^^
"^DD",728,728,18,21,1,0)
This field contains the last date that Ward Stock information was extracted
"^DD",728,728,18,21,2,0)
to the DSS software.
"^DD",728,728,18,23,0)
^^2^2^2951018^
"^DD",728,728,18,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,18,23,2,0)
the VA FileMan.
"^DD",728,728,18,"DT")
2910514
"^DD",728,728,19,0)
LAST DATE ADMISSIONS^D^^7;13^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,19,3)
Enter the last date that information was extracted for Patient Admissions.
"^DD",728,728,19,21,0)
^^2^2^2950314^^^
"^DD",728,728,19,21,1,0)
This field contains the last date that Patient Admissions information
"^DD",728,728,19,21,2,0)
was extracted to the DSS software.
"^DD",728,728,19,23,0)
^^2^2^2951018^
"^DD",728,728,19,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,19,23,2,0)
the VA FileMan.
"^DD",728,728,19,"DT")
2910603
"^DD",728,728,20,0)
LAST DATE MOVEMENT^D^^7;14^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,20,3)
Enter the last date that information was extracted for Patient Movement.
"^DD",728,728,20,21,0)
^^2^2^2950314^^
"^DD",728,728,20,21,1,0)
This field contains the last date that Patient Movement information was
"^DD",728,728,20,21,2,0)
extracted to the DSS software.
"^DD",728,728,20,23,0)
^^2^2^2951018^
"^DD",728,728,20,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,20,23,2,0)
the VA FileMan.
"^DD",728,728,20,"DT")
2910603
"^DD",728,728,21,0)
LAST DATE NO SHOWS^D^^7;15^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,21,3)
Enter the last date that information was extracted for Clinic No-Shows.
"^DD",728,728,21,21,0)
^^2^2^2950314^^
"^DD",728,728,21,21,1,0)
This field contains the last date that Clinic No-Shows information was
"^DD",728,728,21,21,2,0)
extracted to the DSS software.
"^DD",728,728,21,23,0)
^^2^2^2951018^
"^DD",728,728,21,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,21,23,2,0)
the VA FileMan.
"^DD",728,728,21,"DT")
2910604
"^DD",728,728,22,0)
LAB^S^R:RUNNING;^7.1;1^Q
"^DD",728,728,22,3)
Enter R if the extract is currently running.
"^DD",728,728,22,21,0)
^^1^1^2950314^^
"^DD",728,728,22,21,1,0)
This field contains data if the Laboratory extract is currently running.
"^DD",728,728,22,23,0)
^^2^2^2951018^
"^DD",728,728,22,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,22,23,2,0)
the VA FileMan.
"^DD",728,728,22,"DT")
2910613
"^DD",728,728,23,0)
OP^S^R:RUNNING;^7.1;2^Q
"^DD",728,728,23,3)
Enter R if the extract is currently running.
"^DD",728,728,23,21,0)
^^2^2^2950314^^^
"^DD",728,728,23,21,1,0)
This fields contains data if the Outpatient Pharmacy extract is currently
"^DD",728,728,23,21,2,0)
running.
"^DD",728,728,23,23,0)
^^2^2^2951018^
"^DD",728,728,23,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,23,23,2,0)
the VA FileMan.
"^DD",728,728,23,"DT")
2910613
"^DD",728,728,24,0)
EC^S^R:RUNNING;^7.1;3^Q
"^DD",728,728,24,3)
Enter R if the extract is currently running.
"^DD",728,728,24,21,0)
^^1^1^2950314^^^
"^DD",728,728,24,21,1,0)
This field contains data if the Event Capture extract is currently running.
"^DD",728,728,24,23,0)
^^2^2^2951018^
"^DD",728,728,24,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,24,23,2,0)
the VA FileMan.
"^DD",728,728,24,"DT")
2910613
"^DD",728,728,25,0)
SURGERY^S^R:RUNNING;^7.1;5^Q
"^DD",728,728,25,3)
Enter R if the extract is currently running.
"^DD",728,728,25,21,0)
^^1^1^2970929^^^
"^DD",728,728,25,21,1,0)
This field contains data if the Surgery extract is currently running.
"^DD",728,728,25,23,0)
^^2^2^2970929^^
"^DD",728,728,25,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,25,23,2,0)
the VA FileMan.
"^DD",728,728,25,"DT")
2910613
"^DD",728,728,26,0)
RADIOLOGY^S^R:RUNNING;^7.1;6^Q
"^DD",728,728,26,3)
Enter R if the extract is currently running.
"^DD",728,728,26,21,0)
^^1^1^2950314^^
"^DD",728,728,26,21,1,0)
This field contains data if the Radiology extract is currently running.
"^DD",728,728,26,23,0)
^^2^2^2951018^
"^DD",728,728,26,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,26,23,2,0)
the VA FileMan.
"^DD",728,728,26,"DT")
2910613
"^DD",728,728,27,0)
NURSING^S^R:RUNNING;^7.1;7^Q
"^DD",728,728,27,3)
Enter R if the extract is currently running.
"^DD",728,728,27,21,0)
^^1^1^2950314^^
"^DD",728,728,27,21,1,0)
This field contains data if the Nursing extract is currently running.
"^DD",728,728,27,23,0)
^^2^2^2951018^
"^DD",728,728,27,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,27,23,2,0)
the VA FileMan.
"^DD",728,728,27,"DT")
2910613
"^DD",728,728,28,0)
UD^S^R:RUNNING;^7.1;8^Q
"^DD",728,728,28,3)
Enter R if the extract is currently running.
"^DD",728,728,28,21,0)
^^2^2^2951018^^^
"^DD",728,728,28,21,1,0)
This field contains data if the Pharmacy Unit Dose extract is currently
"^DD",728,728,28,21,2,0)
running.
"^DD",728,728,28,23,0)
^^2^2^2951018^
"^DD",728,728,28,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,28,23,2,0)
the VA FileMan.
"^DD",728,728,28,"DT")
2910613
"^DD",728,728,29,0)
ADT^S^R:RUNNING;^7.1;4^Q
"^DD",728,728,29,3)
Enter R if the extract is currently running.
"^DD",728,728,29,21,0)
^^2^2^2950315^^
"^DD",728,728,29,21,1,0)
This field contains data if the MAS Admission/Discharge/Transfer extract
"^DD",728,728,29,21,2,0)
is currently running.
"^DD",728,728,29,23,0)
^^2^2^2951018^
"^DD",728,728,29,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,29,23,2,0)
the VA FileMan.
"^DD",728,728,29,"DT")
2910613
"^DD",728,728,30,0)
DENTAL^S^R:RUNNING;^7.1;9^Q
"^DD",728,728,30,3)
Enter R if the extract is currently running.
"^DD",728,728,30,21,0)
^^1^1^2950315^^^
"^DD",728,728,30,21,1,0)
This field contains data if the Dental extract is currently running.
"^DD",728,728,30,23,0)
^^2^2^2951018^
"^DD",728,728,30,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,30,23,2,0)
the VA FileMan.
"^DD",728,728,30,"DT")
2910613
"^DD",728,728,31,0)
IFCAP^S^R:RUNNING;^7.1;10^Q
"^DD",728,728,31,3)
Enter R if the extract is currently running.
"^DD",728,728,31,21,0)
^^2^2^2950315^^
"^DD",728,728,31,21,1,0)
This field contains data if the IFCAP/DSS Unit extract is currently
"^DD",728,728,31,21,2,0)
running.
"^DD",728,728,31,23,0)
^^2^2^2951018^
"^DD",728,728,31,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,31,23,2,0)
the VA FileMan.
"^DD",728,728,31,"DT")
2910613
"^DD",728,728,32,0)
CLINIC^S^R:RUNNING;^7.1;11^Q
"^DD",728,728,32,3)
Enter R if the extract is currently running.
"^DD",728,728,32,21,0)
^^1^1^2951018^^^
"^DD",728,728,32,21,1,0)
This field contains data if the Clinic Visit extract is currently running.
"^DD",728,728,32,23,0)
^^2^2^2951018^
"^DD",728,728,32,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,32,23,2,0)
the VA FileMan.
"^DD",728,728,32,"DT")
2910613
"^DD",728,728,33,0)
WARD STOCK^S^R:RUNNING;^7.1;12^Q
"^DD",728,728,33,3)
Enter R if the extract is currently running.
"^DD",728,728,33,21,0)
^^1^1^2950315^^
"^DD",728,728,33,21,1,0)
This field contains data if the Ward Stock extract is currently running.
"^DD",728,728,33,23,0)
^^2^2^2951018^
"^DD",728,728,33,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,33,23,2,0)
the VA FileMan.
"^DD",728,728,33,"DT")
2910613
"^DD",728,728,34,0)
ADMISSIONS^S^R:RUNNING;^7.1;13^Q
"^DD",728,728,34,3)
Enter R if the extract is currently running.
"^DD",728,728,34,21,0)
^^2^2^2971002^^^^
"^DD",728,728,34,21,1,0)
This field contains data if the Patient Admissions extract is currently
"^DD",728,728,34,21,2,0)
running.
"^DD",728,728,34,23,0)
^^2^2^2971002^^
"^DD",728,728,34,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,34,23,2,0)
the VA FileMan.
"^DD",728,728,34,"DT")
2910613
"^DD",728,728,35,0)
MOVES^S^R:RUNNING;^7.1;14^Q
"^DD",728,728,35,3)
Enter R if the extract is currently running.
"^DD",728,728,35,21,0)
^^2^2^2950315^^
"^DD",728,728,35,21,1,0)
This field contains data if the Patient Movements extract is currently
"^DD",728,728,35,21,2,0)
running.
"^DD",728,728,35,23,0)
^^2^2^2951018^
"^DD",728,728,35,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,35,23,2,0)
the VA FileMan.
"^DD",728,728,35,"DT")
2910613
"^DD",728,728,36,0)
NO SHOW^S^R:RUNNING;^7.1;15^Q
"^DD",728,728,36,3)
Enter R if the extract is currently running.
"^DD",728,728,36,21,0)
^^1^1^2950315^^
"^DD",728,728,36,21,1,0)
This field contains data if the Clinic No-Show extract is currently running.
"^DD",728,728,36,23,0)
^^2^2^2951018^
"^DD",728,728,36,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,36,23,2,0)
the VA FileMan.
"^DD",728,728,36,"DT")
2910613
"^DD",728,728,37,0)
LAST DATE IVS^D^^7;16^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,37,3)
Enter the last date that information was extracted for Pharmacy IV.
"^DD",728,728,37,21,0)
^^2^2^2951018^^^^
"^DD",728,728,37,21,1,0)
This field contains the last date that the Pharmacy IV information was
"^DD",728,728,37,21,2,0)
extracted to the DSS software.
"^DD",728,728,37,23,0)
^^2^2^2951018^^^^
"^DD",728,728,37,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,37,23,2,0)
the VA FileMan.
"^DD",728,728,37,"DT")
2911204
"^DD",728,728,38,0)
IVS^S^R:RUNNING;^7.1;16^Q
"^DD",728,728,38,3)
Enter R if the extract is currently running.
"^DD",728,728,38,21,0)
^^1^1^2951018^^^^
"^DD",728,728,38,21,1,0)
This field contains data if the Pharmacy IV extract is currently running.
"^DD",728,728,38,23,0)
^^2^2^2951018^^^^
"^DD",728,728,38,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,38,23,2,0)
the VA FileMan.
"^DD",728,728,38,"DT")
2911204
"^DD",728,728,39,0)
LAST DATE TREATING SPECIALTY^D^^7;17^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,39,3)
Enter the last date that information was extracted for Treating Specialty Change.
"^DD",728,728,39,21,0)
^^2^2^2951018^^^^
"^DD",728,728,39,21,1,0)
This field contains the last date that the Treating Specialty Change
"^DD",728,728,39,21,2,0)
information was extracted to the DSS software.
"^DD",728,728,39,23,0)
^^2^2^2951018^^^^
"^DD",728,728,39,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,39,23,2,0)
the VA FileMan.
"^DD",728,728,39,"DT")
2920410
"^DD",728,728,40,0)
TREATING SPEC^S^R:RUNNING;^7.1;17^Q
"^DD",728,728,40,3)
Enter R if the extract is currently running.
"^DD",728,728,40,21,0)
^^2^2^2951018^^^
"^DD",728,728,40,21,1,0)
This field contains data if the Treating Specialty Change extract is
"^DD",728,728,40,21,2,0)
currently running.
"^DD",728,728,40,23,0)
^^2^2^2951018^^^
"^DD",728,728,40,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,40,23,2,0)
the VA FileMan.
"^DD",728,728,40,"DT")
2920410
"^DD",728,728,41,0)
LAST DATE IFCAP SUMMARY^D^^7;18^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,41,3)
Enter the last date that information was extracted for the IFCAP Summary.
"^DD",728,728,41,21,0)
^^2^2^2951018^^^
"^DD",728,728,41,21,1,0)
This field contains the last date that IFCAP Summary information was
"^DD",728,728,41,21,2,0)
extracted to the DSS software.
"^DD",728,728,41,23,0)
^^2^2^2951018^
"^DD",728,728,41,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,41,23,2,0)
the VA FileMan.
"^DD",728,728,41,"DT")
2920826
"^DD",728,728,42,0)
IFCAP SUMMARY^S^R:RUNNING;^7.1;18^Q
"^DD",728,728,42,3)
Enter R if the extract is currently running.
"^DD",728,728,42,21,0)
^^1^1^2950315^^
"^DD",728,728,42,21,1,0)
This field comntains data if the IFCAP Summary extract is currently running.
"^DD",728,728,42,23,0)
^^2^2^2951018^
"^DD",728,728,42,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,42,23,2,0)
the VA FileMan.
"^DD",728,728,42,"DT")
2920826
"^DD",728,728,43,0)
LAST DATE IV DETAIL^D^^7;19^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,43,3)
Enter the last date that information was extracted for the Pharmacy IV Detail.
"^DD",728,728,43,21,0)
^^2^2^2951018^^^^
"^DD",728,728,43,21,1,0)
This field contains the last date that the Pharmacy IV Detail information
"^DD",728,728,43,21,2,0)
was extracted to the DSS software.
"^DD",728,728,43,23,0)
^^2^2^2951018^
"^DD",728,728,43,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,43,23,2,0)
the VA FileMan.
"^DD",728,728,43,"DT")
2920922
"^DD",728,728,44,0)
IV DETAIL^S^R:RUNNING;^7.1;19^Q
"^DD",728,728,44,3)
Enter R if the extract is currently running.
"^DD",728,728,44,21,0)
^^2^2^2951025^^^^
"^DD",728,728,44,21,1,0)
This field contains data if the Pharmacy IV Detail extract is currently
"^DD",728,728,44,21,2,0)
running.
"^DD",728,728,44,23,0)
^^2^2^2951025^^^^
"^DD",728,728,44,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,44,23,2,0)
the VA FileMan.
"^DD",728,728,44,"DT")
2920922
"^DD",728,728,45,0)
SETUP DATE^D^^S;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,45,3)
Enter the date that the Setup information was extracted.
"^DD",728,728,45,21,0)
^^2^2^2951018^^^^
"^DD",728,728,45,21,1,0)
This field contains the last date that the Setup information
"^DD",728,728,45,21,2,0)
was extracted to the DSS software.
"^DD",728,728,45,23,0)
^^2^2^2951018^
"^DD",728,728,45,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,45,23,2,0)
the VA FileMan.
"^DD",728,728,45,"DT")
2921222
"^DD",728,728,46,0)
SETUP RUNNING^S^R:RUNNING;^S;2^Q
"^DD",728,728,46,3)
Enter R if the extract is currently running.
"^DD",728,728,46,21,0)
^^1^1^2951018^^^
"^DD",728,728,46,21,1,0)
This field contains data if the Setup extract is running.
"^DD",728,728,46,23,0)
^^2^2^2951018^
"^DD",728,728,46,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,46,23,2,0)
the VA FileMan.
"^DD",728,728,46,"DT")
2921222
"^DD",728,728,47,0)
LAST DATE PAI^D^^7;20^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,47,3)
Enter the last date that information was extracted for PAI.
"^DD",728,728,47,21,0)
^^2^2^2950315^^^
"^DD",728,728,47,21,1,0)
This field contains the last date that the PAI information was
"^DD",728,728,47,21,2,0)
extracted to the DSS software.
"^DD",728,728,47,23,0)
^^2^2^2951018^^^^
"^DD",728,728,47,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,47,23,2,0)
the VA FileMan.
"^DD",728,728,47,"DT")
2930106
"^DD",728,728,48,0)
PAI^S^R:RUNNING;^7.1;20^Q
"^DD",728,728,48,3)
Enter R if the extract is currently running.
"^DD",728,728,48,21,0)
^^1^1^2950315^^
"^DD",728,728,48,21,1,0)
This field contains data if the PAI extract is currently running.
"^DD",728,728,48,23,0)
^^2^2^2951018^^^
"^DD",728,728,48,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,48,23,2,0)
the VA FileMan.
"^DD",728,728,48,"DT")
2930106
"^DD",728,728,49,0)
AUSTIN QUEUE NAME^F^^QUEUE;1^K:$L(X)>3!($L(X)<3)!'(X?1"DM"1U) X
"^DD",728,728,49,3)
Enter the three character identifier of the assigned Austin queue for your site.
"^DD",728,728,49,21,0)
^^3^3^2960130^^^^
"^DD",728,728,49,21,1,0)
The name of the queue in Austin to which DSS data will be sent.  This
"^DD",728,728,49,21,2,0)
should be of the two characters DM followed by a single upper case
"^DD",728,728,49,21,3,0)
letter.
"^DD",728,728,49,23,0)
7^^6^6^2960130^^^
"^DD",728,728,49,23,1,0)
This field determines the Austin queue to which data is sent.
"^DD",728,728,49,23,2,0)
During implementation, sites at different stages may be asked
"^DD",728,728,49,23,3,0)
to direct transmission to different queues.  This field is used
"^DD",728,728,49,23,4,0)
by the routine ECXTRANS.  The entry in this field should begin
"^DD",728,728,49,23,5,0)
with the two letters DM.  The third letter will be assigned by
"^DD",728,728,49,23,6,0)
the Austin Automation Center.
"^DD",728,728,49,"DT")
2941227
"^DD",728,728,50,0)
LAST DATE LAB RESULTS^D^^7;21^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,50,3)
Enter the last date that information was extracted for Lab Results.
"^DD",728,728,50,21,0)
^^2^2^2951018^^^
"^DD",728,728,50,21,1,0)
This field contains the last date that the Laboratory Results information
"^DD",728,728,50,21,2,0)
was extracted to the DSS software.
"^DD",728,728,50,23,0)
^^2^2^2951018^^
"^DD",728,728,50,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,50,23,2,0)
the VA FileMan.
"^DD",728,728,50,"DT")
2950307
"^DD",728,728,51,0)
LAB RESULTS^S^R:RUNNING;^7.1;21^Q
"^DD",728,728,51,3)
Enter R if the extract is currently running.
"^DD",728,728,51,21,0)
^^2^2^2951018^^
"^DD",728,728,51,21,1,0)
This field contains data if the Laboratory Results extract is currently
"^DD",728,728,51,21,2,0)
running.
"^DD",728,728,51,23,0)
^^2^2^2951018^
"^DD",728,728,51,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,51,23,2,0)
the VA FileMan.
"^DD",728,728,51,"DT")
2950307
"^DD",728,728,52,0)
RECIPIENT^D^^R1;1^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,52,3)
Enter the last date that Recipient information was extracted.
"^DD",728,728,52,21,0)
^^2^2^2951018^^^
"^DD",728,728,52,21,1,0)
This field contains the last date that the Recipient information was
"^DD",728,728,52,21,2,0)
extracted to the Rational Meds software.
"^DD",728,728,52,23,0)
^^2^2^2951018^^^^
"^DD",728,728,52,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,52,23,2,0)
the VA FileMan.
"^DD",728,728,52,"DT")
2950728
"^DD",728,728,53,0)
PROVIDER^D^^R1;2^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,53,3)
Enter the last date that Provider information was extracted.
"^DD",728,728,53,21,0)
^^2^2^2951018^^
"^DD",728,728,53,21,1,0)
This field contains the last date that the Provider information was
"^DD",728,728,53,21,2,0)
extracted to the Rational Meds software.
"^DD",728,728,53,23,0)
^^2^2^2951018^^
"^DD",728,728,53,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,53,23,2,0)
the VA FileMan.
"^DD",728,728,53,"DT")
2950728
"^DD",728,728,54,0)
PHARMACY^D^^R1;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,54,3)
Enter the last date that Pharmacy Claim information was extracted.
"^DD",728,728,54,21,0)
^^1^1^2951127^^^^
"^DD",728,728,54,21,1,0)
Enter the last date that Hospital Claim information was extracted.
"^DD",728,728,54,23,0)
^^2^2^2951127^^^^
"^DD",728,728,54,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,54,23,2,0)
the VA FileMan.
"^DD",728,728,54,"DT")
2950728
"^DD",728,728,55,0)
HOSPITAL^D^^R1;4^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,55,3)
Enter the last date that Hospital Claim information was extracted.
"^DD",728,728,55,21,0)
^^2^2^2951018^^^
"^DD",728,728,55,21,1,0)
This field contains the last date that the Hospital Claim information
"^DD",728,728,55,21,2,0)
was extracted to the Rational Meds software.
"^DD",728,728,55,23,0)
^^2^2^2951018^^^
"^DD",728,728,55,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,55,23,2,0)
the VA FileMan.
"^DD",728,728,55,"DT")
2950728
"^DD",728,728,56,0)
IV CLAIM^D^^R1;5^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,56,21,0)
^^1^1^2951127^
"^DD",728,728,56,21,1,0)
The last date for which the Rational Meds IV claim was extracted.
"^DD",728,728,56,23,0)
^^2^2^2951127^
"^DD",728,728,56,23,1,0)
This field is set by the extract routine and should not be
"^DD",728,728,56,23,2,0)
manipulated by using VA FileMan.
"^DD",728,728,56,"DT")
2951127
"^DD",728,728,57,0)
LAST DATE QUASAR^D^^7;22^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,57,.1)
Last Date QUASAR
"^DD",728,728,57,3)
Enter the last date that information was extracted for QUASAR.
"^DD",728,728,57,21,0)
^^2^2^2960625^^
"^DD",728,728,57,21,1,0)
This field contains the last date that Audiology and Speech Pathology
"^DD",728,728,57,21,2,0)
information was extracted to the DSS software.
"^DD",728,728,57,23,0)
^^2^2^2960625^
"^DD",728,728,57,23,1,0)
This date is set by the extract routine.  It must not be manipulated
"^DD",728,728,57,23,2,0)
via VA FileMan.
"^DD",728,728,57,"DT")
2960625
"^DD",728,728,58,0)
QUASAR^S^R:RUNNING;^7.1;22^Q
"^DD",728,728,58,3)
Enter R if the extract is currently running.
"^DD",728,728,58,21,0)
^^1^1^2960625^^
"^DD",728,728,58,21,1,0)
This field contains data if the QUASAR extract is currently running.
"^DD",728,728,58,23,0)
^^2^2^2960625^
"^DD",728,728,58,23,1,0)
This data is set by the extract routine.  It must not be manipulated
"^DD",728,728,58,23,2,0)
via VA FileMan.
"^DD",728,728,58,"DT")
2960625
"^DD",728.113,728.113,0)
FIELD^^12^13
"^DD",728.113,728.113,0,"DT")
2961101
"^DD",728.113,728.113,0,"IX","A",728.113,2)

"^DD",728.113,728.113,0,"IX","AC",728.113,10)

"^DD",728.113,728.113,0,"IX","AINV",728.113,.01)

"^DD",728.113,728.113,0,"IX","AREV",728.113,2)

"^DD",728.113,728.113,0,"NM","IV EXTRACT DATA")

"^DD",728.113,728.113,0,"VRPK")
DSS EXTRACTS
"^DD",728.113,728.113,.01,0)
SEQUENCE NUMBER^RNJ6,0XI^^0;1^K:+X'=X!(X>100000)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",728.113,728.113,.01,.1)
Sequence Number
"^DD",728.113,728.113,.01,1,0)
^.1
"^DD",728.113,728.113,.01,1,1,0)
728.113^AINV^MUMPS
"^DD",728.113,728.113,.01,1,1,1)
S ^ECX(728.113,"AINV",-X,DA)=""
"^DD",728.113,728.113,.01,1,1,2)
K ^ECX(728.113,"AINV",-X,DA)
"^DD",728.113,728.113,.01,1,1,3)
DO NOT DELETE.
"^DD",728.113,728.113,.01,1,1,"%D",0)
^^3^3^2960919^^^^
"^DD",728.113,728.113,.01,1,1,"%D",1,0)
This is an inverse entry cross reference.  It is used to find the
"^DD",728.113,728.113,.01,1,1,"%D",2,0)
last entry in the file.  It is essential for the management of the
"^DD",728.113,728.113,.01,1,1,"%D",3,0)
data held in this file.
"^DD",728.113,728.113,.01,1,1,"DT")
2950926
"^DD",728.113,728.113,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",728.113,728.113,.01,21,0)
^^1^1^2960919^
"^DD",728.113,728.113,.01,21,1,0)
The record number for this extract entry.
"^DD",728.113,728.113,.01,23,0)
^^1^1^2960919^
"^DD",728.113,728.113,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",728.113,728.113,.01,"DT")
2960919
"^DD",728.113,728.113,1,0)
DFN^P2'I^DPT(^0;2^Q
"^DD",728.113,728.113,1,.1)
Patient Number
"^DD",728.113,728.113,1,3)
Enter the name of the patient for this extract record.
"^DD",728.113,728.113,1,21,0)
^^2^2^2960919^^^^
"^DD",728.113,728.113,1,21,1,0)
Enter the name of the patient receiving medication for this extract 
"^DD",728.113,728.113,1,21,2,0)
record.
"^DD",728.113,728.113,1,23,0)
^^3^3^2960919^^^
"^DD",728.113,728.113,1,23,1,0)
Derived from the NAME field (.01) in the PHARMACY PATIENT file (#55) 
"^DD",728.113,728.113,1,23,2,0)
which is DINUMed to the PATIENT file (#2). This data represents the 
"^DD",728.113,728.113,1,23,3,0)
patient DFN.
"^DD",728.113,728.113,1,"DT")
2960919
"^DD",728.113,728.113,2,0)
ORDER NUMBER^NJ5,0I^^0;3^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",728.113,728.113,2,.1)
Order Number
"^DD",728.113,728.113,2,1,0)
^.1
"^DD",728.113,728.113,2,1,1,0)
728.113^A^MUMPS
"^DD",728.113,728.113,2,1,1,1)
S ^ECX(728.113,"A",$P($P(^ECX(728.113,DA,0),"^",5),"."),$P(^ECX(728.113,DA,0),"^",2),X,DA)=""
"^DD",728.113,728.113,2,1,1,2)
K ^ECX(728.113,"A",$P($P(^ECX(728.113,DA,0),"^",5),"."),$P(^ECX(728.113,DA,0),"^",2),X,DA)
"^DD",728.113,728.113,2,1,1,3)
DO NOT DELETE
"^DD",728.113,728.113,2,1,1,"%D",0)
^^2^2^2961118^^^^
"^DD",728.113,728.113,2,1,1,"%D",1,0)
This cross reference, DATE/TIME, DFN, ORDER NUMBER is used to extract
"^DD",728.113,728.113,2,1,1,"%D",2,0)
data from this file into the IV DETAIL EXTRACT file (#727.819).
"^DD",728.113,728.113,2,1,1,"DT")
2961118
"^DD",728.113,728.113,2,1,2,0)
728.113^AREV^MUMPS
"^DD",728.113,728.113,2,1,2,1)
S ^ECX(728.113,"AREV",9999999-($P($P(^ECX(728.113,DA,0),"^",5),".")),$P(^ECX(728.113,DA,0),"^",2),X,DA)=""
"^DD",728.113,728.113,2,1,2,2)
K ^ECX(728.113,"AREV",9999999-($P($P(^ECX(728.113,DA,0),"^",5),".")),$P(^ECX(728.113,DA,0),"^",2),X,DA)
"^DD",728.113,728.113,2,1,2,3)
DO NOT DELETE
"^DD",728.113,728.113,2,1,2,"%D",0)
^^3^3^2961118^^^^
"^DD",728.113,728.113,2,1,2,"%D",1,0)
This inverse cross reference, DATE/TIME, DFN, ORDER NUMBER is used 
"^DD",728.113,728.113,2,1,2,"%D",2,0)
to identify dates prior to the START DATE selected for the IV DETAIL
"^DD",728.113,728.113,2,1,2,"%D",3,0)
EXTRACT.
"^DD",728.113,728.113,2,1,2,"DT")
2961118
"^DD",728.113,728.113,2,3)
Enter a number between 1 and 99999, 0 decimal digits.
"^DD",728.113,728.113,2,21,0)
^^1^1^2960919^^^^
"^DD",728.113,728.113,2,21,1,0)
This is the internal entry number of the order.
"^DD",728.113,728.113,2,23,0)
^^2^2^2960919^
"^DD",728.113,728.113,2,23,1,0)
Derived from the ORDER NUMBER field (.01) within the IV multiple (100) 
"^DD",728.113,728.113,2,23,2,0)
of the PHARMACY PATIENT file (#55).
"^DD",728.113,728.113,2,"DT")
2961118
"^DD",728.113,728.113,3,0)
DRUG^P50'I^PSDRUG(^0;4^Q
"^DD",728.113,728.113,3,.1)
Drug
"^DD",728.113,728.113,3,3)
Enter the drug dispensed.
"^DD",728.113,728.113,3,21,0)
^^1^1^2960919^^^
"^DD",728.113,728.113,3,21,1,0)
This is the item dispensed as identified in the local DRUG file (#50).
"^DD",728.113,728.113,3,23,0)
^^11^11^2960919^^
"^DD",728.113,728.113,3,23,1,0)
A pointer to the DRUG file (#50).
"^DD",728.113,728.113,3,23,2,0)
  
"^DD",728.113,728.113,3,23,3,0)
For an IV additive, DRUG is derived from the GENERIC DRUG field (1) 
"^DD",728.113,728.113,3,23,4,0)
in the IV ADDITIVES file (#52.6) for the ADDITIVE (.01) identified in 
"^DD",728.113,728.113,3,23,5,0)
the ADDITIVE multiple (1) within the IV multiple (100) of the PHARMACY 
"^DD",728.113,728.113,3,23,6,0)
PATIENT file (#55).
"^DD",728.113,728.113,3,23,7,0)
  
"^DD",728.113,728.113,3,23,8,0)
For an IV solution, DRUG is derived from the GENERIC DRUG field (1) 
"^DD",728.113,728.113,3,23,9,0)
in the IV SOLUTIONS file (#52.7) for the SOLUTION (.01) identified in 
"^DD",728.113,728.113,3,23,10,0)
the SOLUTION multiple (3) within the IV multiple (100) of the PHARMACY 
"^DD",728.113,728.113,3,23,11,0)
PATIENT file (#55).
"^DD",728.113,728.113,3,"DT")
2960919
"^DD",728.113,728.113,4,0)
DATE/TIME^DI^^0;5^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",728.113,728.113,4,.1)
Date/Time
"^DD",728.113,728.113,4,3)
Enter the date/time this drug was dispensed.
"^DD",728.113,728.113,4,21,0)
^^1^1^2961101^^^^
"^DD",728.113,728.113,4,21,1,0)
This is the date/time of the transaction.
"^DD",728.113,728.113,4,23,0)
^^2^2^2971113^^^
"^DD",728.113,728.113,4,23,1,0)
DATE/TIME is calculated and stored in the DATE OF TRANSACTION field (3) 
"^DD",728.113,728.113,4,23,2,0)
within the TRANSACTION NUMBER multiple (1) of the IV STATS file (#50.8).
"^DD",728.113,728.113,4,"DT")
2961101
"^DD",728.113,728.113,5,0)
TRANSACTION TYPE^SI^1:DISPENSED;2:RETURNED;3:DESTROYED;4:CANCELED;^0;6^Q
"^DD",728.113,728.113,5,.1)
Transaction Type
"^DD",728.113,728.113,5,3)
Enter the status of the IV transaction.
"^DD",728.113,728.113,5,21,0)
^^1^1^2960919^^^^
"^DD",728.113,728.113,5,21,1,0)
This is the type of the transaction.
"^DD",728.113,728.113,5,23,0)
^^4^4^2960919^
"^DD",728.113,728.113,5,23,1,0)
TRANSACTION TYPE defines the status of the IV order: 1 for dispensed, 
"^DD",728.113,728.113,5,23,2,0)
2 for returned, 3 for destroyed, or 4 for canceled. This data comes 
"^DD",728.113,728.113,5,23,3,0)
from the STATUS field (2) within the TRANSACTION NUMBER multiple (1) 
"^DD",728.113,728.113,5,23,4,0)
of the IV STATS file (#50.8).
"^DD",728.113,728.113,5,"DT")
2960919
"^DD",728.113,728.113,6,0)
ADDITIVE STRENGTH^FI^^0;7^K:$L(X)>30!($L(X)<1) X
"^DD",728.113,728.113,6,.1)
Additive Strength
"^DD",728.113,728.113,6,3)
Your answer must be 1 to 30 characters in length.
"^DD",728.113,728.113,6,21,0)
^^2^2^2960919^^^^
"^DD",728.113,728.113,6,21,1,0)
This is the amount of the additive used in the manufacturing of this 
"^DD",728.113,728.113,6,21,2,0)
IV order.
"^DD",728.113,728.113,6,23,0)
^^2^2^2960919^
"^DD",728.113,728.113,6,23,1,0)
Derived from the STRENGTH field (.02) within the ADDITIVE multiple (1) 
"^DD",728.113,728.113,6,23,2,0)
within the IV multiple (100) of the PHARMACY PATIENT file (#55).
"^DD",728.113,728.113,6,"DT")
2960919
"^DD",728.113,728.113,7,0)
ADDITIVE STRENGTH UNITS^FI^^0;8^K:$L(X)>20!($L(X)<1) X
"^DD",728.113,728.113,7,.1)
Additive Strength Units
"^DD",728.113,728.113,7,3)
Your answer must be 1 to 20 characters in length.
"^DD",728.113,728.113,7,21,0)
^^1^1^2960919^^^^
"^DD",728.113,728.113,7,21,1,0)
This is the units in which the strength of this additive is measured.
"^DD",728.113,728.113,7,23,0)
^^3^3^2960919^
"^DD",728.113,728.113,7,23,1,0)
Derived from the DRUG UNIT field (2) in the IV ADDITIVES file (#52.6) 
"^DD",728.113,728.113,7,23,2,0)
for the ADDITIVE (.01) identified in the ADDITIVE multiple (1) within 
"^DD",728.113,728.113,7,23,3,0)
the IV multiple (100) in the PHARMACY PATIENT file (#55).
"^DD",728.113,728.113,7,"DT")
2960919
"^DD",728.113,728.113,8,0)
SOLUTION VOLUME^NJ5,0I^^0;9^K:+X'=X!(X>10000)!(X<1)!(X?.E1"."1N.N) X
"^DD",728.113,728.113,8,.1)
Solution Volume
"^DD",728.113,728.113,8,3)
Enter a number between 1 and 10000, 0 decimal digits.
"^DD",728.113,728.113,8,21,0)
^^1^1^2960925^^^
"^DD",728.113,728.113,8,21,1,0)
The volume (in MLs) of this solution in this order.
"^DD",728.113,728.113,8,23,0)
^^2^2^2960925^^
"^DD",728.113,728.113,8,23,1,0)
Derived from the VOLUME field (1) within the SOLUTION multiple (3) 
"^DD",728.113,728.113,8,23,2,0)
within the IV multiple (100) of the PHARMACY PATIENT file (#55).
"^DD",728.113,728.113,8,"DT")
2960919
"^DD",728.113,728.113,9,0)
PROVIDER^FI^^0;10^K:$L(X)>12!($L(X)<1) X
"^DD",728.113,728.113,9,.1)
Provider
"^DD",728.113,728.113,9,3)
Your answer must be 1 to 12 characters in length.
"^DD",728.113,728.113,9,21,0)
^^1^1^2960919^^
"^DD",728.113,728.113,9,21,1,0)
This is the provider responsible for this medication order.
"^DD",728.113,728.113,9,23,0)
^^3^3^2960919^
"^DD",728.113,728.113,9,23,1,0)
Derived from the PROVIDER field (.06) within the IV multiple (100) 
"^DD",728.113,728.113,9,23,2,0)
of the PHARMACY PATIENT file (#55). Provider is a pointer to the NEW 
"^DD",728.113,728.113,9,23,3,0)
PERSON file (#200).
"^DD",728.113,728.113,9,"DT")
2960919
"^DD",728.113,728.113,10,0)
EXTRACT NUMBER^P727'^ECX(727,^1;1^Q
"^DD",728.113,728.113,10,.1)
Extract Number
"^DD",728.113,728.113,10,1,0)
^.1
"^DD",728.113,728.113,10,1,1,0)
728.113^AC
"^DD",728.113,728.113,10,1,1,1)
S ^ECX(728.113,"AC",$E(X,1,30),DA)=""
"^DD",728.113,728.113,10,1,1,2)
K ^ECX(728.113,"AC",$E(X,1,30),DA)
"^DD",728.113,728.113,10,1,1,3)
DO NOT DELETE.
"^DD",728.113,728.113,10,1,1,"%D",0)
^^4^4^2960919^^^^
"^DD",728.113,728.113,10,1,1,"%D",1,0)
This cross reference is essential to manage the transfer of data
"^DD",728.113,728.113,10,1,1,"%D",2,0)
from this file to the IV DETAIL EXTRACT file (#727.819) and utimately 
"^DD",728.113,728.113,10,1,1,"%D",3,0)
to the commercial DSS software. It is also used to control purging 
"^DD",728.113,728.113,10,1,1,"%D",4,0)
of this file.
"^DD",728.113,728.113,10,1,1,"DT")
2951103
"^DD",728.113,728.113,10,3)
Enter the extract number for this medication dispensing action.
"^DD",728.113,728.113,10,21,0)
^^1^1^2960919^^^
"^DD",728.113,728.113,10,21,1,0)
Pointer to the corresponding entry in the DSS EXTRACT LOG file (#727).
"^DD",728.113,728.113,10,23,0)
^^4^4^2960919^
"^DD",728.113,728.113,10,23,1,0)
This entry and the corresponding cross reference are set when data is 
"^DD",728.113,728.113,10,23,2,0)
extracted from this file into the IV DETAIL EXTRACT file (#727.819). 
"^DD",728.113,728.113,10,23,3,0)
The cross reference on this field is used to control extracting data 
"^DD",728.113,728.113,10,23,4,0)
from this file and also used to permit purging of data in this file.
"^DD",728.113,728.113,10,"DT")
2960919
"^DD",728.113,728.113,11,0)
TYPE^F^^0;11^K:$L(X)>5!($L(X)<1) X
"^DD",728.113,728.113,11,.1)
Type
"^DD",728.113,728.113,11,3)
Your answer must be 1 to 5 characters in length.
"^DD",728.113,728.113,11,21,0)
^^2^2^2960919^^
"^DD",728.113,728.113,11,21,1,0)
The type of IV dispensed - A for admixture, C for chemotherapy, H for 
"^DD",728.113,728.113,11,21,2,0)
hyperal, P for piggyback, or S for syringe.
"^DD",728.113,728.113,11,23,0)
^^2^2^2960919^
"^DD",728.113,728.113,11,23,1,0)
Derived from the TYPE field (.04) within the IV multiple (100) of 
"^DD",728.113,728.113,11,23,2,0)
the PHARMACY PATIENT file (#55).
"^DD",728.113,728.113,11,"DT")
2960919
"^DD",728.113,728.113,12,0)
COST^NJ9,3^^0;12^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."4N.N) X
"^DD",728.113,728.113,12,.1)
Cost
"^DD",728.113,728.113,12,3)
Enter a number between 0 and 99999, 3 decimal digits.
"^DD",728.113,728.113,12,21,0)
^^1^1^2960919^^
"^DD",728.113,728.113,12,21,1,0)
Cost of this item.
"^DD",728.113,728.113,12,23,0)
^^9^9^2960919^
"^DD",728.113,728.113,12,23,1,0)
For an IV additive, COST is derived from the AVERAGE DRUG COST PER 
"^DD",728.113,728.113,12,23,2,0)
UNIT field (7) in the IV ADDITIVES file (#52.6) for the ADDITIVE (.01) 
"^DD",728.113,728.113,12,23,3,0)
identified in the ADDITIVE multiple (1) within the IV multiple (100) 
"^DD",728.113,728.113,12,23,4,0)
of the PHARMACY PATIENT file (#55).
"^DD",728.113,728.113,12,23,5,0)
  
"^DD",728.113,728.113,12,23,6,0)
For an IV solution, COST is derived from the AVERAGE DRUG COST field (7) 
"^DD",728.113,728.113,12,23,7,0)
in the IV SOLUTIONS file (#52.7) for the SOLUTION (.01) identified in 
"^DD",728.113,728.113,12,23,8,0)
the SOLUTION multiple (3) within the IV multiple (100) of the PHARMACY 
"^DD",728.113,728.113,12,23,9,0)
PATIENT file (#55).
"^DD",728.113,728.113,12,"DT")
2960919
"^DD",728.44,728.44,0)
FIELD^^9^10
"^DD",728.44,728.44,0,"DDA")
N
"^DD",728.44,728.44,0,"DT")
2960717
"^DD",728.44,728.44,0,"IX","AC",728.44,6)

"^DD",728.44,728.44,0,"IX","B",728.44,.01)

"^DD",728.44,728.44,0,"NM","CLINICS AND STOP CODES")

"^DD",728.44,728.44,0,"VRPK")
DSS EXTRACTS
"^DD",728.44,728.44,.01,0)
CLINIC NAME^RP44XI^SC(^0;1^K X W !,"Entries into this file may be made only by using the DSS software",!!
"^DD",728.44,728.44,.01,1,0)
^.1
"^DD",728.44,728.44,.01,1,1,0)
728.44^B
"^DD",728.44,728.44,.01,1,1,1)
S ^ECX(728.44,"B",$E(X,1,30),DA)=""
"^DD",728.44,728.44,.01,1,1,2)
K ^ECX(728.44,"B",$E(X,1,30),DA)
"^DD",728.44,728.44,.01,1,1,"DT")
2961212
"^DD",728.44,728.44,.01,3)
Enter the clinic name.
"^DD",728.44,728.44,.01,21,0)
^^1^1^2970903^^^^
"^DD",728.44,728.44,.01,21,1,0)
The name of the clinic.
"^DD",728.44,728.44,.01,23,0)
^^1^1^2970903^^^^
"^DD",728.44,728.44,.01,23,1,0)
Pointer to the HOSPITAL LOCATION file (#44).
"^DD",728.44,728.44,.01,"DEL",.01,0)
I 1 W !,"Entries must not be deleted from this file!,",!!
"^DD",728.44,728.44,.01,"DT")
2961212
"^DD",728.44,728.44,1,0)
STOP CODE^FI^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",728.44,728.44,1,3)
Answer must be 1-30 characters in length.
"^DD",728.44,728.44,1,8.5)
^
"^DD",728.44,728.44,1,9)
^
"^DD",728.44,728.44,1,21,0)
^^2^2^2971106^^^^
"^DD",728.44,728.44,1,21,1,0)
The stop code for this clinic as determined by Medical Administration
"^DD",728.44,728.44,1,21,2,0)
Service (MAS).
"^DD",728.44,728.44,1,23,0)
^^1^1^2971106^^^^
"^DD",728.44,728.44,1,23,1,0)
Stop code from the HOSPITAL LOCATION file (#44) for this clinic.
"^DD",728.44,728.44,1,"DT")
2971106
"^DD",728.44,728.44,2,0)
CREDIT STOP CODE^FI^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",728.44,728.44,2,3)
Answer must be 1-30 characters in length.
"^DD",728.44,728.44,2,8.5)
^
"^DD",728.44,728.44,2,9)
^
"^DD",728.44,728.44,2,10)

"^DD",728.44,728.44,2,21,0)
^^3^3^2970527^^^^
"^DD",728.44,728.44,2,21,1,0)
The credit stop code, if none exists, for this clinic as determined
"^DD",728.44,728.44,2,21,2,0)
by Medical Administration Service (MAS).
"^DD",728.44,728.44,2,21,3,0)
 
"^DD",728.44,728.44,2,23,0)
^^1^1^2970527^^^
"^DD",728.44,728.44,2,23,1,0)
The credit stop code for this clinic in the HOSPITAL LOCATION file (#44).
"^DD",728.44,728.44,2,"DT")
2910312
"^DD",728.44,728.44,3,0)
DSS STOP CODE^F^^0;4^K:$L(X)>3!($L(X)<1)!'(X?1.3N) X
"^DD",728.44,728.44,3,3)
Answer must be 1-3 characters in length.
"^DD",728.44,728.44,3,21,0)
^^1^1^2970904^^^^
"^DD",728.44,728.44,3,21,1,0)
The stop code for this clinic as determined by DSS.
"^DD",728.44,728.44,3,"DT")
2950608
"^DD",728.44,728.44,4,0)
DSS CREDIT STOP CODE^F^^0;5^K:$L(X)>30!($L(X)<1) X
"^DD",728.44,728.44,4,3)
Answer must be 1-30 characters in length.
"^DD",728.44,728.44,4,21,0)
^^1^1^2970527^^^^
"^DD",728.44,728.44,4,21,1,0)
The credit stop code for this clinic as determined by DSS.
"^DD",728.44,728.44,4,"DT")
2950612
"^DD",728.44,728.44,5,0)
ACTION TO SEND^RS^1:SEND STOP CODE;2:SEND CREDIT STOP CODE;3:SEND BOTH AS SEPARATE RECORDS;4:SEND BOTH AS ONE RECORD WITH NATIONAL CODE;5:SEND BOTH AS ONE RECORD WITHOUT NATIONAL CODE;6:DO NOT SEND;^0;6^Q
"^DD",728.44,728.44,5,3)
Select the appropriate stop code action.
"^DD",728.44,728.44,5,21,0)
^^2^2^2950713^^^^
"^DD",728.44,728.44,5,21,1,0)
This determines how alternate stop code and alternate credit stop
"^DD",728.44,728.44,5,21,2,0)
codes are combined to form a feeder key for this clinic.
"^DD",728.44,728.44,5,23,0)
^^2^2^2950713^^^^
"^DD",728.44,728.44,5,23,1,0)
This field is used in routine ECXSCX to create the feeder key for
"^DD",728.44,728.44,5,23,2,0)
this clinic.
"^DD",728.44,728.44,5,"DT")
2951212
"^DD",728.44,728.44,6,0)
DATE LAST REVIEWED^D^^0;7^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728.44,728.44,6,1,0)
^.1
"^DD",728.44,728.44,6,1,1,0)
728.44^AC^MUMPS
"^DD",728.44,728.44,6,1,1,1)
S ^ECX(728.44,"A1",-X,DA)=""
"^DD",728.44,728.44,6,1,1,2)
K ^ECX(728.44,"A1",-X,DA)
"^DD",728.44,728.44,6,1,1,3)
DO NOT DELETE.
"^DD",728.44,728.44,6,1,1,"%D",0)
^^2^2^2960808^^^
"^DD",728.44,728.44,6,1,1,"%D",1,0)
An inverse date cross reference to tell the user when data in this file
"^DD",728.44,728.44,6,1,1,"%D",2,0)
was last reviewed.
"^DD",728.44,728.44,6,1,1,"DT")
2920924
"^DD",728.44,728.44,6,3)
Enter the date this data was reviewed.
"^DD",728.44,728.44,6,8.5)
^
"^DD",728.44,728.44,6,9)
^
"^DD",728.44,728.44,6,21,0)
^^1^1^2950314^^
"^DD",728.44,728.44,6,21,1,0)
The date this data in this file was last reviewed.
"^DD",728.44,728.44,6,23,0)
^^2^2^2950314^^
"^DD",728.44,728.44,6,23,1,0)
This field is used to prompt users that the data in this file might
"^DD",728.44,728.44,6,23,2,0)
need to be reviewed.
"^DD",728.44,728.44,6,"DT")
2920924
"^DD",728.44,728.44,7,0)
NATIONAL CODE^RP728.441'^ECX(728.441,^0;8^Q
"^DD",728.44,728.44,7,3)
Enter the appropriate national code.
"^DD",728.44,728.44,7,21,0)
^^2^2^2970908^^^^
"^DD",728.44,728.44,7,21,1,0)
A pointer to the NATIONAL CLINIC file (#728.441) to provide a way to send
"^DD",728.44,728.44,7,21,2,0)
a national identifier to the commercial software when using action code 4.
"^DD",728.44,728.44,7,23,0)
^^3^3^2970908^^^^
"^DD",728.44,728.44,7,23,1,0)
Pointer to the NATIONAL CLINIC file (#728.441).
"^DD",728.44,728.44,7,23,2,0)
Used to provide a way to send a national identifier to the commercial
"^DD",728.44,728.44,7,23,3,0)
software when data from the ACTION TO SEND field (#5) is code 4.
"^DD",728.44,728.44,7,"DT")
2950414
"^DD",728.44,728.44,8,0)
DSS UNIT IDENTIFIER^FX^^0;9^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>10!($L(X)<1) X
"^DD",728.44,728.44,8,1,0)
^.1^^0
"^DD",728.44,728.44,8,3)
The identifier if this clinic is used for non-OR surgical procedures.
"^DD",728.44,728.44,8,21,0)
^^2^2^2970729^^^^
"^DD",728.44,728.44,8,21,1,0)
This field will identify clinics which are used for non-OR
"^DD",728.44,728.44,8,21,2,0)
procedures in the Surgery package.
"^DD",728.44,728.44,8,"DT")
2940621
"^DD",728.44,728.44,9,0)
INACTIVE DATE^D^^0;10^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728.44,728.44,9,3)
Enter the date this clinic became inactive.
"^DD",728.44,728.44,9,21,0)
^^1^1^2960717^^^^
"^DD",728.44,728.44,9,21,1,0)
This is the date that MAS inactivated this clinic.
"^DD",728.44,728.44,9,23,0)
^^1^1^2960717^^
"^DD",728.44,728.44,9,23,1,0)
From the INACTIVE DATE field (2505) in the HOSPITAL LOCATION file (#44).
"^DD",728.44,728.44,9,"DT")
2960717
"^DD",728.441,728.441,0)
FIELD^^2^3
"^DD",728.441,728.441,0,"IX","B",728.441,.01)

"^DD",728.441,728.441,0,"NM","NATIONAL CLINIC")

"^DD",728.441,728.441,0,"PT",728.44,7)

"^DD",728.441,728.441,0,"VRPK")
DSS EXTRACTS
"^DD",728.441,728.441,.01,0)
CODE^RFI^^0;1^K:$L(X)>4!($L(X)<4)!'(X?4U) X
"^DD",728.441,728.441,.01,1,0)
^.1
"^DD",728.441,728.441,.01,1,1,0)
728.441^B
"^DD",728.441,728.441,.01,1,1,1)
S ^ECX(728.441,"B",$E(X,1,30),DA)=""
"^DD",728.441,728.441,.01,1,1,2)
K ^ECX(728.441,"B",$E(X,1,30),DA)
"^DD",728.441,728.441,.01,3)
Answer must be 4 characters in length.
"^DD",728.441,728.441,.01,21,0)
^^1^1^2950414^^^^
"^DD",728.441,728.441,.01,21,1,0)
The national standard four character code for the clinic.
"^DD",728.441,728.441,.01,23,0)
^^5^5^2950414^^^^
"^DD",728.441,728.441,.01,23,1,0)
This file is pointed to by the NATIONAL CODE field (#7) of the CLINICS AND
"^DD",728.441,728.441,.01,23,2,0)
STOP CODES file (#728.44) and is used to send a nationally standard
"^DD",728.441,728.441,.01,23,3,0)
clinic code to the commercial software for clinics where the ACTION
"^DD",728.441,728.441,.01,23,4,0)
TO SEND field (#5) from the CLINICS AND STOP CODES file (#728.44)
"^DD",728.441,728.441,.01,23,5,0)
is 4 (SEND BOTH AS ONE RECORD WITH NATIONAL CODE)
"^DD",728.441,728.441,.01,"DT")
2960119
"^DD",728.441,728.441,1,0)
SHORT DESCRIPTION^RF^^0;2^K:$L(X)>50!($L(X)<3) X
"^DD",728.441,728.441,1,3)
Answer must be 3-50 characters in length.
"^DD",728.441,728.441,1,21,0)
^^2^2^2950314^^^
"^DD",728.441,728.441,1,21,1,0)
The short description for the type of clinic represented by this
"^DD",728.441,728.441,1,21,2,0)
national code.
"^DD",728.441,728.441,1,"DT")
2960612
"^DD",728.441,728.441,2,0)
LONG DESCRIPTION^728.4412^^1;0
"^DD",728.441,728.441,2,21,0)
^^3^3^2950314^^^
"^DD",728.441,728.441,2,21,1,0)
The long description for the type of clinic represented by this code.
"^DD",728.441,728.441,2,21,2,0)
This discription may be used to provide guidance in assigning
"^DD",728.441,728.441,2,21,3,0)
national codes to clinics.
"^DD",728.441,728.4412,0)
LONG DESCRIPTION SUB-FIELD^^.01^1
"^DD",728.441,728.4412,0,"NM","LONG DESCRIPTION")

"^DD",728.441,728.4412,0,"UP")
728.441
"^DD",728.441,728.4412,.01,0)
LONG DESCRIPTION^W^^0;1^Q
"^DD",728.441,728.4412,.01,3)
Enter the full description for this national clinic code.
"^DD",728.441,728.4412,.01,21,0)
^^3^3^2950314^^^
"^DD",728.441,728.4412,.01,21,1,0)
The long description for the type of clinic represented by this code.
"^DD",728.441,728.4412,.01,21,2,0)
This discription may be used to provide guidance in assigning
"^DD",728.441,728.4412,.01,21,3,0)
national codes to clinics.
"^DD",728.441,728.4412,.01,"DT")
2940310
"^DD",728.506,728.506,0)
FIELD^^2^3
"^DD",728.506,728.506,0,"IX","AP",728.5061,.01)

"^DD",728.506,728.506,0,"IX","B",728.506,.01)

"^DD",728.506,728.506,0,"NM","DSS DRUG PRODUCT CODE")

"^DD",728.506,728.506,0,"VRPK")
DSS EXTRACTS
"^DD",728.506,728.506,.01,0)
DSS DRUG PRODUCT CODE^RNJ3,0XI^^0;1^K:+X'=X!(X>500)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",728.506,728.506,.01,1,0)
^.1
"^DD",728.506,728.506,.01,1,1,0)
728.506^B
"^DD",728.506,728.506,.01,1,1,1)
S ^ECX(728.506,"B",$E(X,1,30),DA)=""
"^DD",728.506,728.506,.01,1,1,2)
K ^ECX(728.506,"B",$E(X,1,30),DA)
"^DD",728.506,728.506,.01,3)
Type a Number between 1 and 500, 0 Decimal Digits
"^DD",728.506,728.506,.01,9)
^
"^DD",728.506,728.506,.01,21,0)
^^4^4^2950314^^^^
"^DD",728.506,728.506,.01,21,1,0)
This is the product code as determined by the DSS pharmaceutical task
"^DD",728.506,728.506,.01,21,2,0)
force.  The DESCRIPTION field (#1) indicates how this code is determined
"^DD",728.506,728.506,.01,21,3,0)
by a combination of VA drug classification, route of administration, and
"^DD",728.506,728.506,.01,21,4,0)
(in some cases) by specific generic name of a particular item.
"^DD",728.506,728.506,.01,"DT")
2950314
"^DD",728.506,728.506,1,0)
DESCRIPTION^FI^^0;2^K:$L(X)>200!($L(X)<3) X
"^DD",728.506,728.506,1,3)
Answer must be 3-200 characters in length.
"^DD",728.506,728.506,1,21,0)
^^1^1^2950314^^
"^DD",728.506,728.506,1,21,1,0)
VA classification description.
"^DD",728.506,728.506,1,"DT")
2900514
"^DD",728.506,728.506,2,0)
IDENTIFIER^728.5061A^^1;0
"^DD",728.506,728.506,2,9)
^
"^DD",728.506,728.506,2,21,0)
^^2^2^2950314^
"^DD",728.506,728.506,2,21,1,0)
Drug identifier composed of two numbers, separated by the letter "A",
"^DD",728.506,728.506,2,21,2,0)
that represents drug and dose form from the NATIONAL DRUG file (#50.6).
"^DD",728.506,728.5061,0)
IDENTIFIER SUB-FIELD^^.01^1
"^DD",728.506,728.5061,0,"IX","B",728.5061,.01)

"^DD",728.506,728.5061,0,"NM","IDENTIFIER")

"^DD",728.506,728.5061,0,"UP")
728.506
"^DD",728.506,728.5061,.01,0)
IDENTIFIER^FI^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>25!($L(X)<3)!'(X?1.N1"A"1.N) X
"^DD",728.506,728.5061,.01,1,0)
^.1
"^DD",728.506,728.5061,.01,1,1,0)
728.5061^B
"^DD",728.506,728.5061,.01,1,1,1)
S ^ECX(728.506,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",728.506,728.5061,.01,1,1,2)
K ^ECX(728.506,DA(1),1,"B",$E(X,1,30),DA)
"^DD",728.506,728.5061,.01,1,2,0)
728.506^AP^MUMPS
"^DD",728.506,728.5061,.01,1,2,1)
S ^ECX(728.506,"AP",X,DA(1))=""
"^DD",728.506,728.5061,.01,1,2,2)
K ^ECX(728.506,"AP",X,DA(1))
"^DD",728.506,728.5061,.01,1,2,3)
DO NOT DELETE.
"^DD",728.506,728.5061,.01,1,2,"%D",0)
^^4^4^2960808^^^^
"^DD",728.506,728.5061,.01,1,2,"%D",1,0)
This cross reference is used to find the DSS drug product code
"^DD",728.506,728.5061,.01,1,2,"%D",2,0)
for a drug selected out of the DRUG file (#50) based on information
"^DD",728.506,728.5061,.01,1,2,"%D",3,0)
which links that drug to the NATIONAL DRUG file (#50.6) and defines
"^DD",728.506,728.5061,.01,1,2,"%D",4,0)
the elements which were used to define drug product codes.
"^DD",728.506,728.5061,.01,3)
Answer must be 3-25 characters in length.
"^DD",728.506,728.5061,.01,9)
^
"^DD",728.506,728.5061,.01,21,0)
^^2^2^2950314^^^
"^DD",728.506,728.5061,.01,21,1,0)
Drug identifier composed of two numbers, separated by the letter "A",
"^DD",728.506,728.5061,.01,21,2,0)
that represent drug and dose form from the NATIONAL DRUG file (#50.6).
"^DD",728.506,728.5061,.01,"DT")
2900514
"^DD",728.904,728.904,0)
FIELD^^8^9
"^DD",728.904,728.904,0,"DDA")
N
"^DD",728.904,728.904,0,"DIK")
ECX8904
"^DD",728.904,728.904,0,"DIKOLD")
ECX8904
"^DD",728.904,728.904,0,"DT")
2961101
"^DD",728.904,728.904,0,"IX","A",728.904,2)

"^DD",728.904,728.904,0,"IX","AC",728.904,8)

"^DD",728.904,728.904,0,"IX","AINV",728.904,.01)

"^DD",728.904,728.904,0,"NM","UNIT DOSE EXTRACT DATA")

"^DD",728.904,728.904,0,"VRPK")
DSS EXTRACTS
"^DD",728.904,728.904,.01,0)
SEQUENCE NUMBER^RNJ6,0XI^^0;1^K:+X'=X!(X>100000)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",728.904,728.904,.01,.1)
Sequence Number
"^DD",728.904,728.904,.01,1,0)
^.1
"^DD",728.904,728.904,.01,1,1,0)
728.904^AINV^MUMPS
"^DD",728.904,728.904,.01,1,1,1)
S ^ECX(728.904,"AINV",-X,DA)=""
"^DD",728.904,728.904,.01,1,1,2)
K ^ECX(728.904,"AINV",-X,DA)
"^DD",728.904,728.904,.01,1,1,3)
DO NOT DELETE.
"^DD",728.904,728.904,.01,1,1,"%D",0)
^^3^3^2960912^^^^
"^DD",728.904,728.904,.01,1,1,"%D",1,0)
This is an inverse entry cross reference. It is used to find the
"^DD",728.904,728.904,.01,1,1,"%D",2,0)
last entry in the file. It is essential for the management of the 
"^DD",728.904,728.904,.01,1,1,"%D",3,0)
data held in this file.
"^DD",728.904,728.904,.01,1,1,"DT")
2950926
"^DD",728.904,728.904,.01,3)
Enter a number between 1 and 999999999, 0 decimal digits.
"^DD",728.904,728.904,.01,21,0)
^^1^1^2960912^^^
"^DD",728.904,728.904,.01,21,1,0)
The record number for this extract entry.
"^DD",728.904,728.904,.01,23,0)
^^1^1^2960912^
"^DD",728.904,728.904,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",728.904,728.904,.01,"DT")
2960912
"^DD",728.904,728.904,1,0)
DFN^P2'I^DPT(^0;2^Q
"^DD",728.904,728.904,1,.1)
Patient Number
"^DD",728.904,728.904,1,3)
Enter the name of the patient for this extract record.
"^DD",728.904,728.904,1,21,0)
^^2^2^2960912^^^^
"^DD",728.904,728.904,1,21,1,0)
Enter the name of the patient receiving medication for this extract 
"^DD",728.904,728.904,1,21,2,0)
record.
"^DD",728.904,728.904,1,23,0)
^^4^4^2960912^^^
"^DD",728.904,728.904,1,23,1,0)
Derived from the PATIENT field (.01) within the PATIENT multiple (1) 
"^DD",728.904,728.904,1,23,2,0)
of the PICK LIST file (#53.5). Patient is a pointer to the PHARMACY 
"^DD",728.904,728.904,1,23,3,0)
PATIENT file (#55) which is DINUMed to the PATIENT file (#2). This 
"^DD",728.904,728.904,1,23,4,0)
data represents the patient DFN.
"^DD",728.904,728.904,1,"DT")
2960912
"^DD",728.904,728.904,2,0)
DATE^DI^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",728.904,728.904,2,.1)
Date
"^DD",728.904,728.904,2,1,0)
^.1
"^DD",728.904,728.904,2,1,1,0)
728.904^A
"^DD",728.904,728.904,2,1,1,1)
S ^ECX(728.904,"A",$E(X,1,30),DA)=""
"^DD",728.904,728.904,2,1,1,2)
K ^ECX(728.904,"A",$E(X,1,30),DA)
"^DD",728.904,728.904,2,1,1,3)
DO NOT DELETE.
"^DD",728.904,728.904,2,1,1,"%D",0)
^^1^1^2960912^^
"^DD",728.904,728.904,2,1,1,"%D",1,0)
This cross reference is essential.
"^DD",728.904,728.904,2,1,1,"DT")
2911112
"^DD",728.904,728.904,2,3)
Enter the date/time this drug was dispensed.
"^DD",728.904,728.904,2,21,0)
^^1^1^2970611^^^^
"^DD",728.904,728.904,2,21,1,0)
This is the date/time when the medication was dispensed.
"^DD",728.904,728.904,2,23,0)
^^2^2^2971113^^^^
"^DD",728.904,728.904,2,23,1,0)
Date is derived from the START DATE/TIME field (.03) of the PICK LIST 
"^DD",728.904,728.904,2,23,2,0)
file (#53.5).
"^DD",728.904,728.904,2,"DT")
2961101
"^DD",728.904,728.904,3,0)
DRUG^P50'I^PSDRUG(^0;4^Q
"^DD",728.904,728.904,3,.1)
Drug
"^DD",728.904,728.904,3,3)
Enter the drug dispensed.
"^DD",728.904,728.904,3,21,0)
^^1^1^2960912^^^^
"^DD",728.904,728.904,3,21,1,0)
This is the item dispensed as identified in the local DRUG file (#50).
"^DD",728.904,728.904,3,23,0)
^^3^3^2960912^^^
"^DD",728.904,728.904,3,23,1,0)
Drug is derived from the DISPENSE DRUG field (.01) within the DISPENSE 
"^DD",728.904,728.904,3,23,2,0)
DRUG multiple (2) within the UNIT DOSE multiple (62) of the PHARMACY 
"^DD",728.904,728.904,3,23,3,0)
PATIENT file (#55). It is a pointer to the DRUG file (#50).
"^DD",728.904,728.904,3,"DT")
2960912
"^DD",728.904,728.904,4,0)
QUANTITY^NJ5,0I^^0;5^K:+X'=X!(X>10000)!(X<1)!(X?.E1"."1N.N) X
"^DD",728.904,728.904,4,.1)
Quantity
"^DD",728.904,728.904,4,3)
Enter a number between 1 and 10000, 0 decimal digits.
"^DD",728.904,728.904,4,21,0)
^^1^1^2960912^^^
"^DD",728.904,728.904,4,21,1,0)
This is the number of items dispensed.
"^DD",728.904,728.904,4,23,0)
^^3^3^2960912^
"^DD",728.904,728.904,4,23,1,0)
Quantity is derived from the #DOSES ACTUALLY DISPENSED field (.03) 
"^DD",728.904,728.904,4,23,2,0)
within the DISPENSE DRUG multiple (1) within the ORDER multiple (1) 
"^DD",728.904,728.904,4,23,3,0)
within the PATIENT multiple (1) of the PICK LIST file (#53.5).
"^DD",728.904,728.904,4,"DT")
2960912
"^DD",728.904,728.904,5,0)
WARD^P42'I^DIC(42,^0;6^Q
"^DD",728.904,728.904,5,.1)
Ward
"^DD",728.904,728.904,5,3)
Enter the ward location for this patient.
"^DD",728.904,728.904,5,21,0)
^^1^1^2960912^^^
"^DD",728.904,728.904,5,21,1,0)
This is the location of the patient when he received the medication.
"^DD",728.904,728.904,5,23,0)
^^3^3^2960912^^
"^DD",728.904,728.904,5,23,1,0)
Derived from the WARD field (.03) within the PATIENT multiple (1) of 
"^DD",728.904,728.904,5,23,2,0)
the PICK LIST file (#53.5). WARD is a pointer to the WARD LOCATION 
"^DD",728.904,728.904,5,23,3,0)
file (#42).
"^DD",728.904,728.904,5,"DT")
2960912
"^DD",728.904,728.904,6,0)
PROVIDER^FI^^0;7^K:$L(X)>30!($L(X)<1) X
"^DD",728.904,728.904,6,.1)
Provider
"^DD",728.904,728.904,6,3)
Your answer must be 1 to 30 characters in length.
"^DD",728.904,728.904,6,21,0)
^^1^1^2960912^^^^
"^DD",728.904,728.904,6,21,1,0)
This is the provider responsible for this medication order.
"^DD",728.904,728.904,6,23,0)
^^3^3^2960912^^
"^DD",728.904,728.904,6,23,1,0)
Derived from the PROVIDER field (1) within the UNIT DOSE multiple 
"^DD",728.904,728.904,6,23,2,0)
(62) of the PHARMACY PATIENT file (#55). Provider is the NEW PERSON 
"^DD",728.904,728.904,6,23,3,0)
file (#200) pointer number concatenated with ";200".
"^DD",728.904,728.904,6,"DT")
2960912
"^DD",728.904,728.904,7,0)
TOTAL COST^NJ5,0I^^0;8^K:+X'=X!(X>10000)!(X<0)!(X?.E1"."1N.N) X
"^DD",728.904,728.904,7,.1)
Total Cost
"^DD",728.904,728.904,7,3)
Enter a number between 0 and 10000, 0 decimal digits.
"^DD",728.904,728.904,7,21,0)
^^1^1^2960912^^^
"^DD",728.904,728.904,7,21,1,0)
This is the total cost of the items dispensed in this order.
"^DD",728.904,728.904,7,23,0)
^^3^3^2960912^
"^DD",728.904,728.904,7,23,1,0)
Total cost is derived from the PRICE PER DISPENSE UNIT field (16) of the 
"^DD",728.904,728.904,7,23,2,0)
DRUG file (#50) multiplied by the #DOSES ACTUALLY DISPENSED field (.03) 
"^DD",728.904,728.904,7,23,3,0)
within the DISPENSE DRUG multiple (1) of the PICK LIST file (#53.5).
"^DD",728.904,728.904,7,"DT")
2960912
"^DD",728.904,728.904,8,0)
EXTRACT NUMBER^P727'^ECX(727,^1;1^Q
"^DD",728.904,728.904,8,.1)
Extract Number
"^DD",728.904,728.904,8,1,0)
^.1
"^DD",728.904,728.904,8,1,1,0)
728.904^AC
"^DD",728.904,728.904,8,1,1,1)
S ^ECX(728.904,"AC",$E(X,1,30),DA)=""
"^DD",728.904,728.904,8,1,1,2)
K ^ECX(728.904,"AC",$E(X,1,30),DA)
"^DD",728.904,728.904,8,1,1,3)
DO NOT DELETE.
"^DD",728.904,728.904,8,1,1,"%D",0)
^^5^5^2960913^^^^
"^DD",728.904,728.904,8,1,1,"%D",1,0)
This cross reference is essential for managing the transfer of data
"^DD",728.904,728.904,8,1,1,"%D",2,0)
from this to file the UNIT DOSE LOCAL EXTRACT file (#727.809) and 
"^DD",728.904,728.904,8,1,1,"%D",3,0)
ultimately to the commercial DSS software. It is also used to control 
"^DD",728.904,728.904,8,1,1,"%D",4,0)
purging of data from this file. This cross reference must not be 
"^DD",728.904,728.904,8,1,1,"%D",5,0)
modified.
"^DD",728.904,728.904,8,1,1,"DT")
2911112
"^DD",728.904,728.904,8,3)
Enter the extract number for this medication dispensing action.
"^DD",728.904,728.904,8,21,0)
^^1^1^2960912^^^^
"^DD",728.904,728.904,8,21,1,0)
Pointer to the corresponding entry in the DSS EXTRACT LOG file (#727).
"^DD",728.904,728.904,8,23,0)
^^4^4^2960912^^^^
"^DD",728.904,728.904,8,23,1,0)
This entry and the corresponding cross reference are set when data is
"^DD",728.904,728.904,8,23,2,0)
extracted from this file into the UNIT DOSE LOCAL EXTRACT file (#727.809).
"^DD",728.904,728.904,8,23,3,0)
The cross reference on this field is used to control extracting data
"^DD",728.904,728.904,8,23,4,0)
from this file and also used to permit purging of data in this file.
"^DD",728.904,728.904,8,"DT")
2960912
"^DIC",727,727,0)
DSS EXTRACT LOG
"^DIC",727,727,0,"GL")
^ECX(727,
"^DIC",727,727,"%D",0)
^^10^10^2950413^^^^
"^DIC",727,727,"%D",1,0)
This file contains data about the extracts from DHCP packages.  Each
"^DIC",727,727,"%D",2,0)
entry includes the date of the extract, the package for which the
"^DIC",727,727,"%D",3,0)
extract was run, the date range covered by the extract, and the
"^DIC",727,727,"%D",4,0)
number of records sent.  Data is entered into this file by the
"^DIC",727,727,"%D",5,0)
extract routines at the time extracts are transmitted to the
"^DIC",727,727,"%D",6,0)
commercial software.  Data in this file may be viewed by appropriate
"^DIC",727,727,"%D",7,0)
options within the DSS package.  It is not intended that this file
"^DIC",727,727,"%D",8,0)
be read directly via VA FileMan and DATA IN THIS FILE MUST NEVER
"^DIC",727,727,"%D",9,0)
BE EDITED.  Editing data in this file will severely compromise the
"^DIC",727,727,"%D",10,0)
integrity of all DSS applications.
"^DIC",727,"B","DSS EXTRACT LOG",727)

"^DIC",727.1,727.1,0)
EXTRACT DEFINITIONS^1
"^DIC",727.1,727.1,0,"GL")
^ECX(727.1,
"^DIC",727.1,727.1,"%D",0)
^^6^6^2950413^^^
"^DIC",727.1,727.1,"%D",1,0)
This file provides a mechanism for sites to tailor the running of
"^DIC",727.1,727.1,"%D",2,0)
package extracts by defining the frequency (daily, weekly, or monthly)
"^DIC",727.1,727.1,"%D",3,0)
with which the extracts will run and the number of days in the past
"^DIC",727.1,727.1,"%D",4,0)
for which data will be extracted.  The EXTRACT NAME field (#.01) and
"^DIC",727.1,727.1,"%D",5,0)
the FILE NUMBER field (#1) are national standard entries, exported with
"^DIC",727.1,727.1,"%D",6,0)
the file, and should not be edited locally.
"^DIC",727.1,"B","EXTRACT DEFINITIONS",727.1)

"^DIC",727.2,727.2,0)
DSS LAB TESTS
"^DIC",727.2,727.2,0,"GL")
^ECX(727.2,
"^DIC",727.2,727.2,"%D",0)
^^10^10^2970212^^
"^DIC",727.2,727.2,"%D",1,0)
This file contains the set of laboratory tests tracked by the Decision
"^DIC",727.2,727.2,"%D",2,0)
Support System along with the corresponding local data names in the
"^DIC",727.2,727.2,"%D",3,0)
LABORATORY TEST file (#60) pointed to by these tests.  This file also
"^DIC",727.2,727.2,"%D",4,0)
contains the local names for BLOOD and URINE specimens.  Each DSS Lab Test
"^DIC",727.2,727.2,"%D",5,0)
is assigned a predefined indicator (SOURCE field) of the type of specimen
"^DIC",727.2,727.2,"%D",6,0)
(blood or urine) that will be used as search criteria in conjunction with 
"^DIC",727.2,727.2,"%D",7,0)
the local names for blood and urine specimens.
"^DIC",727.2,727.2,"%D",8,0)
 
"^DIC",727.2,727.2,"%D",9,0)
Entries in this file are determined by the DSS Program Office and should
"^DIC",727.2,727.2,"%D",10,0)
not be changed or deleted.  New entries in this file should not be made.  
"^DIC",727.2,"B","DSS LAB TESTS",727.2)

"^DIC",727.802,727.802,0)
ADMISSION EXTRACT
"^DIC",727.802,727.802,0,"GL")
^ECX(727.802,
"^DIC",727.802,727.802,"%D",0)
^^18^18^2960807^^^^
"^DIC",727.802,727.802,"%D",1,0)
This file contains data elements as specified by the Decision Support 
"^DIC",727.802,727.802,"%D",2,0)
System (DSS) Program Office for the MAS Admission extract from existing 
"^DIC",727.802,727.802,"%D",3,0)
DHCP files. Entries into this file are made by extracting data from 
"^DIC",727.802,727.802,"%D",4,0)
several files. Once approved by the DSS site manager, entries in this
"^DIC",727.802,727.802,"%D",5,0)
file are loaded into an electronic mail message and sent to the 
"^DIC",727.802,727.802,"%D",6,0)
commercial vendor. This file is intended to be used for validation 
"^DIC",727.802,727.802,"%D",7,0)
purposes only. Entries should be made only by the extract load routine.
"^DIC",727.802,727.802,"%D",8,0)
  
"^DIC",727.802,727.802,"%D",9,0)
Since validation techniques will be determined by the local site, it is 
"^DIC",727.802,727.802,"%D",10,0)
intended that the site add whatever cross references deemed necessary. 
"^DIC",727.802,727.802,"%D",11,0)
However, this file contains two nationally determined cross references, 
"^DIC",727.802,727.802,"%D",12,0)
the "AC" cross reference on the EXTRACT NUMBER field (2) and the "AINV" 
"^DIC",727.802,727.802,"%D",13,0)
cross reference on the SEQUENCE NUMBER field (.01). These cross 
"^DIC",727.802,727.802,"%D",14,0)
references are used by the DSS Extracts software package as an essential 
"^DIC",727.802,727.802,"%D",15,0)
feature for managing and purging data in this file and should not be 
"^DIC",727.802,727.802,"%D",16,0)
modified.
"^DIC",727.802,727.802,"%D",17,0)
  
"^DIC",727.802,727.802,"%D",18,0)
This file should NOT be modified directly using VA FileMan.
"^DIC",727.802,"B","ADMISSION EXTRACT",727.802)

"^DIC",727.803,727.803,0)
CLINIC EXTRACT
"^DIC",727.803,727.803,0,"GL")
^ECX(727.803,
"^DIC",727.803,727.803,"%D",0)
^^18^18^2960807^^^^
"^DIC",727.803,727.803,"%D",1,0)
This file contains data elements as specified by the Decision Support 
"^DIC",727.803,727.803,"%D",2,0)
System (DSS) Program Office for the MAS Clinic (Clinic Visit) extract 
"^DIC",727.803,727.803,"%D",3,0)
from existing DHCP files. Entries into this file are made by extracting 
"^DIC",727.803,727.803,"%D",4,0)
data from several files. Once approved by the DSS site manager, entries 
"^DIC",727.803,727.803,"%D",5,0)
in this file are loaded into an electronic mail message and sent to the 
"^DIC",727.803,727.803,"%D",6,0)
commercial vendor. This file is intended to be used for validation 
"^DIC",727.803,727.803,"%D",7,0)
purposes only. Entries should be made only by the extract load routine.
"^DIC",727.803,727.803,"%D",8,0)
  
"^DIC",727.803,727.803,"%D",9,0)
Since validation techniques will be determined by the local site, it is 
"^DIC",727.803,727.803,"%D",10,0)
intended that the site add whatever cross references deemed necessary. 
"^DIC",727.803,727.803,"%D",11,0)
However, this file contains two nationally determined cross references, 
"^DIC",727.803,727.803,"%D",12,0)
the "AC" cross reference on the EXTRACT NUMBER field (2) and the "AINV" 
"^DIC",727.803,727.803,"%D",13,0)
cross reference on the SEQUENCE NUMBER field (.01). These cross 
"^DIC",727.803,727.803,"%D",14,0)
references are used by the DSS Extracts software package as an essential 
"^DIC",727.803,727.803,"%D",15,0)
feature for managing and purging data in this file and should not be 
"^DIC",727.803,727.803,"%D",16,0)
modified.
"^DIC",727.803,727.803,"%D",17,0)
  
"^DIC",727.803,727.803,"%D",18,0)
This file should NOT be modified directly using VA FileMan.
"^DIC",727.803,"B","CLINIC EXTRACT",727.803)

"^DIC",727.804,727.804,0)
CLINIC NOSHOW EXTRACT
"^DIC",727.804,727.804,0,"GL")
^ECX(727.804,
"^DIC",727.804,727.804,"%D",0)
^^18^18^2960807^^^^
"^DIC",727.804,727.804,"%D",1,0)
This file contains data elements as specified by the Decision Support 
"^DIC",727.804,727.804,"%D",2,0)
System (DSS) Program Office for the MAS Clinic No Show extract from 
"^DIC",727.804,727.804,"%D",3,0)
existing DHCP files. Entries into this file are made by extracting data 
"^DIC",727.804,727.804,"%D",4,0)
from several files. Once approved by the DSS site manager, entries in 
"^DIC",727.804,727.804,"%D",5,0)
this file are loaded into an electronic mail message and sent to the 
"^DIC",727.804,727.804,"%D",6,0)
commercial vendor. This file is intended to be used for validation 
"^DIC",727.804,727.804,"%D",7,0)
purposes only. Entries should be made only by the extract load routine.
"^DIC",727.804,727.804,"%D",8,0)
  
"^DIC",727.804,727.804,"%D",9,0)
Since validation techniques will be determined by the local site, it is 
"^DIC",727.804,727.804,"%D",10,0)
intended that the site add whatever cross references deemed necessary. 
"^DIC",727.804,727.804,"%D",11,0)
However, this file contains two nationally determined cross references, 
"^DIC",727.804,727.804,"%D",12,0)
the "AC" cross reference on the EXTRACT NUMBER field (2) and the "AINV" 
"^DIC",727.804,727.804,"%D",13,0)
cross reference on the SEQUENCE NUMBER field (.01). These cross 
"^DIC",727.804,727.804,"%D",14,0)
references are used by the DSS Extracts software package as an essential 
"^DIC",727.804,727.804,"%D",15,0)
feature for managing and purging data in this file and should not be 
"^DIC",727.804,727.804,"%D",16,0)
modified.
"^DIC",727.804,727.804,"%D",17,0)
  
"^DIC",727.804,727.804,"%D",18,0)
This file should NOT be modified directly using VA FileMan.
"^DIC",727.804,"B","CLINIC NOSHOW EXTRACT",727.804)

"^DIC",727.805,727.805,0)
NURSING EXTRACT
"^DIC",727.805,727.805,0,"GL")
^ECX(727.805,
"^DIC",727.805,727.805,"%D",0)
^^18^18^2960807^^^^
"^DIC",727.805,727.805,"%D",1,0)
This file contains data elements as specified by the Decision Support 
"^DIC",727.805,727.805,"%D",2,0)
System (DSS) Program Office for the Nursing extract from existing 
"^DIC",727.805,727.805,"%D",3,0)
DHCP files. Entries into this file are made by extracting data from 
"^DIC",727.805,727.805,"%D",4,0)
several files. Once approved by the DSS site manager, entries in this
"^DIC",727.805,727.805,"%D",5,0)
file are loaded into an electronic mail message and sent to the 
"^DIC",727.805,727.805,"%D",6,0)
commercial vendor. This file is intended to be used for validation 
"^DIC",727.805,727.805,"%D",7,0)
purposes only. Entries should be made only by the extract load routine.
"^DIC",727.805,727.805,"%D",8,0)
  
"^DIC",727.805,727.805,"%D",9,0)
Since validation techniques will be determined by the local site, it is 
"^DIC",727.805,727.805,"%D",10,0)
intended that the site add whatever cross references deemed necessary. 
"^DIC",727.805,727.805,"%D",11,0)
However, this file contains two nationally determined cross references, 
"^DIC",727.805,727.805,"%D",12,0)
the "AC" cross reference on the EXTRACT NUMBER field (2) and the "AINV" 
"^DIC",727.805,727.805,"%D",13,0)
cross reference on the SEQUENCE NUMBER field (.01). These cross 
"^DIC",727.805,727.805,"%D",14,0)
references are used by the DSS Extracts software package as an essential 
"^DIC",727.805,727.805,"%D",15,0)
feature for managing and purging data in this file and should not be 
"^DIC",727.805,727.805,"%D",16,0)
modified.
"^DIC",727.805,727.805,"%D",17,0)
  
"^DIC",727.805,727.805,"%D",18,0)
This file should NOT be modified directly using VA FileMan.
"^DIC",727.805,"B","NURSING EXTRACT",727.805)

"^DIC",727.806,727.806,0)
DENTAL EXTRACT
"^DIC",727.806,727.806,0,"GL")
^ECX(727.806,
"^DIC",727.806,727.806,"%D",0)
^^18^18^2960807^^^^
"^DIC",727.806,727.806,"%D",1,0)
This file contains data elements as specified by the Decision Support 
"^DIC",727.806,727.806,"%D",2,0)
System (DSS) Program Office for the Dental extract from existing 
"^DIC",727.806,727.806,"%D",3,0)
DHCP files. Entries into this file are made by extracting data from 
"^DIC",727.806,727.806,"%D",4,0)
several files. Once approved by the DSS site manager, entries in this
"^DIC",727.806,727.806,"%D",5,0)
file are loaded into an electronic mail message and sent to the 
"^DIC",727.806,727.806,"%D",6,0)
commercial vendor. This file is intended to be used for validation 
"^DIC",727.806,727.806,"%D",7,0)
purposes only. Entries should be made only by the extract load routine.
"^DIC",727.806,727.806,"%D",8,0)
  
"^DIC",727.806,727.806,"%D",9,0)
Since validation techniques will be determined by the local site, it is 
"^DIC",727.806,727.806,"%D",10,0)
intended that the site add whatever cross references deemed necessary. 
"^DIC",727.806,727.806,"%D",11,0)
However, this file contains two nationally determined cross references, 
"^DIC",727.806,727.806,"%D",12,0)
the "AC" cross reference on the EXTRACT NUMBER field (2) and the "AINV" 
"^DIC",727.806,727.806,"%D",13,0)
cross reference on the SEQUENCE NUMBER field (.01). These cross 
"^DIC",727.806,727.806,"%D",14,0)
references are used by the DSS Extracts software package as an essential 
"^DIC",727.806,727.806,"%D",15,0)
feature for managing and purging data in this file and should not be 
"^DIC",727.806,727.806,"%D",16,0)
modified.
"^DIC",727.806,727.806,"%D",17,0)
  
"^DIC",727.806,727.806,"%D",18,0)
This file should NOT be modified directly using VA FileMan.
"^DIC",727.806,"B","DENTAL EXTRACT",727.806)

"^DIC",727.808,727.808,0)
PHYSICAL MOVEMENT EXTRACT
"^DIC",727.808,727.808,0,"GL")
^ECX(727.808,
"^DIC",727.808,727.808,"%D",0)
^^19^19^2960807^^^^
"^DIC",727.808,727.808,"%D",1,0)
This file contains data elements as specified by the Decision Support 
"^DIC",727.808,727.808,"%D",2,0)
System (DSS) Program Office for the MAS Physical Movement (Transfer and 
"^DIC",727.808,727.808,"%D",3,0)
Discharge) extract from existing DHCP files. Entries into this file are 
"^DIC",727.808,727.808,"%D",4,0)
made by extracting data from several files. Once approved by the DSS 
"^DIC",727.808,727.808,"%D",5,0)
site manager, entries in this file are loaded into an electronic mail 
"^DIC",727.808,727.808,"%D",6,0)
message and sent to the commercial vendor. This file is intended to be 
"^DIC",727.808,727.808,"%D",7,0)
used for validation purposes only. Entries should be made only by the 
"^DIC",727.808,727.808,"%D",8,0)
extract load routine.
"^DIC",727.808,727.808,"%D",9,0)
  
"^DIC",727.808,727.808,"%D",10,0)
Since validation techniques will be determined by the local site, it is 
"^DIC",727.808,727.808,"%D",11,0)
intended that the site add whatever cross references deemed necessary. 
"^DIC",727.808,727.808,"%D",12,0)
However, this file contains two nationally determined cross references, 
"^DIC",727.808,727.808,"%D",13,0)
the "AC" cross reference on the EXTRACT NUMBER field (2) and the "AINV" 
"^DIC",727.808,727.808,"%D",14,0)
cross reference on the SEQUENCE NUMBER field (.01). These cross 
"^DIC",727.808,727.808,"%D",15,0)
references are used by the DSS Extracts software package as an essential 
"^DIC",727.808,727.808,"%D",16,0)
feature for managing and purging data in this file and should not be 
"^DIC",727.808,727.808,"%D",17,0)
modified.
"^DIC",727.808,727.808,"%D",18,0)
  
"^DIC",727.808,727.808,"%D",19,0)
This file should NOT be modified directly using VA FileMan.
"^DIC",727.808,"B","PHYSICAL MOVEMENT EXTRACT",727.808)

"^DIC",727.809,727.809,0)
UNIT DOSE LOCAL EXTRACT
"^DIC",727.809,727.809,0,"GL")
^ECX(727.809,
"^DIC",727.809,727.809,"%D",0)
^^18^18^2960807^^^^
"^DIC",727.809,727.809,"%D",1,0)
This file contains data elements as specified by the Decision Support 
"^DIC",727.809,727.809,"%D",2,0)
System (DSS) Program Office for the Pharmacy Unit Dose extract from 
"^DIC",727.809,727.809,"%D",3,0)
existing DHCP files. Entries into this file are made by extracting data 
"^DIC",727.809,727.809,"%D",4,0)
from several files. Once approved by the DSS site manager, entries in 
"^DIC",727.809,727.809,"%D",5,0)
this file are loaded into an electronic mail message and sent to the 
"^DIC",727.809,727.809,"%D",6,0)
commercial vendor. This file is intended to be used for validation 
"^DIC",727.809,727.809,"%D",7,0)
purposes only. Entries should be made only by the extract load routine.
"^DIC",727.809,727.809,"%D",8,0)
  
"^DIC",727.809,727.809,"%D",9,0)
Since validation techniques will be determined by the local site, it is 
"^DIC",727.809,727.809,"%D",10,0)
intended that the site add whatever cross references deemed necessary. 
"^DIC",727.809,727.809,"%D",11,0)
However, this file contains two nationally determined cross references, 
"^DIC",727.809,727.809,"%D",12,0)
the "AC" cross reference on the EXTRACT NUMBER field (2) and the "AINV" 
"^DIC",727.809,727.809,"%D",13,0)
cross reference on the SEQUENCE NUMBER field (.01). These cross 
"^DIC",727.809,727.809,"%D",14,0)
references are used by the DSS Extracts software package as an essential 
"^DIC",727.809,727.809,"%D",15,0)
feature for managing and purging data in this file and should not be 
"^DIC",727.809,727.809,"%D",16,0)
modified.
"^DIC",727.809,727.809,"%D",17,0)
  
"^DIC",727.809,727.809,"%D",18,0)
This file should NOT be modified directly using VA FileMan.
"^DIC",727.809,"B","UNIT DOSE LOCAL EXTRACT",727.809)

"^DIC",727.81,727.81,0)
PRESCRIPTION EXTRACT
"^DIC",727.81,727.81,0,"GL")
^ECX(727.81,
"^DIC",727.81,727.81,"%D",0)
^^19^19^2960918^^^^
"^DIC",727.81,727.81,"%D",1,0)
This file contains data elements as specified by the Decision Support 
"^DIC",727.81,727.81,"%D",2,0)
System (DSS) Program Office for the Pharmacy Outpatient (Prescription) 
"^DIC",727.81,727.81,"%D",3,0)
extract from existing DHCP files. Entries into this file are made by 
"^DIC",727.81,727.81,"%D",4,0)
extracting data from several files. Once approved by the DSS site 
"^DIC",727.81,727.81,"%D",5,0)
manager, entries in this file are loaded into an electronic mail message 
"^DIC",727.81,727.81,"%D",6,0)
and sent to the commercial vendor. This file is intended to be used for 
"^DIC",727.81,727.81,"%D",7,0)
validation purposes only. Entries should be made only by the extract 
"^DIC",727.81,727.81,"%D",8,0)
load routine.
"^DIC",727.81,727.81,"%D",9,0)
  
"^DIC",727.81,727.81,"%D",10,0)
Since validation techniques will be determined by the local site, it is 
"^DIC",727.81,727.81,"%D",11,0)
intended that the site add whatever cross references deemed necessary. 
"^DIC",727.81,727.81,"%D",12,0)
However, this file contains two nationally determined cross references, 
"^DIC",727.81,727.81,"%D",13,0)
the "AC" cross reference on the EXTRACT NUMBER field (2) and the "AINV" 
"^DIC",727.81,727.81,"%D",14,0)
cross reference on the SEQUENCE NUMBER field (.01). These cross 
"^DIC",727.81,727.81,"%D",15,0)
references are used by the DSS Extracts software package as an essential 
"^DIC",727.81,727.81,"%D",16,0)
feature for managing and purging data in this file and should not be 
"^DIC",727.81,727.81,"%D",17,0)
modified.
"^DIC",727.81,727.81,"%D",18,0)
  
"^DIC",727.81,727.81,"%D",19,0)
This file should NOT be modified directly using VA FileMan.
"^DIC",727.81,"B","PRESCRIPTION EXTRACT",727.81)

"^DIC",727.811,727.811,0)
SURGERY EXTRACT
"^DIC",727.811,727.811,0,"GL")
^ECX(727.811,
"^DIC",727.811,727.811,"%D",0)
^^18^18^2971008^^^^
"^DIC",727.811,727.811,"%D",1,0)
This file contains data elements as specified by the Decision Support 
"^DIC",727.811,727.811,"%D",2,0)
System (DSS) Program Office for the Surgery extract from existing 
"^DIC",727.811,727.811,"%D",3,0)
DHCP files. Entries into this file are made by extracting data from 
"^DIC",727.811,727.811,"%D",4,0)
several files. Once approved by the DSS site manager, entries in this
"^DIC",727.811,727.811,"%D",5,0)
file are loaded into an electronic mail message and sent to the 
"^DIC",727.811,727.811,"%D",6,0)
commercial vendor. This file is intended to be used for validation 
"^DIC",727.811,727.811,"%D",7,0)
purposes only. Entries should be made only by the extract load routine.
"^DIC",727.811,727.811,"%D",8,0)
  
"^DIC",727.811,727.811,"%D",9,0)
Since validation techniques will be determined by the local site, it is 
"^DIC",727.811,727.811,"%D",10,0)
intended that the site add whatever cross references deemed necessary. 
"^DIC",727.811,727.811,"%D",11,0)
However, this file contains two nationally determined cross references, 
"^DIC",727.811,727.811,"%D",12,0)
the "AC" cross reference on the EXTRACT NUMBER field (2) and the "AINV" 
"^DIC",727.811,727.811,"%D",13,0)
cross reference on the SEQUENCE NUMBER field (.01). These cross 
"^DIC",727.811,727.811,"%D",14,0)
references are used by the DSS Extracts software package as an essential 
"^DIC",727.811,727.811,"%D",15,0)
feature for managing and purging data in this file and should not be 
"^DIC",727.811,727.811,"%D",16,0)
modified.
"^DIC",727.811,727.811,"%D",17,0)
  
"^DIC",727.811,727.811,"%D",18,0)
This file should NOT be modified directly using VA FileMan.
"^DIC",727.811,"B","SURGERY EXTRACT",727.811)

"^DIC",727.813,727.813,0)
LABORATORY EXTRACT
"^DIC",727.813,727.813,0,"GL")
^ECX(727.813,
"^DIC",727.813,727.813,"%D",0)
^^23^23^2960730^^^^
"^DIC",727.813,727.813,"%D",1,0)
This file contains data elements as specified by the Decision Support 
"^DIC",727.813,727.813,"%D",2,0)
System (DSS) Program Office for the Laboratory extract from existing 
"^DIC",727.813,727.813,"%D",3,0)
DHCP files. Entries into this file are made by extracting data by two 
"^DIC",727.813,727.813,"%D",4,0)
different methods depending upon whether or not LMIP codes are used. 
"^DIC",727.813,727.813,"%D",5,0)
Using LMIP codes, the data are extracted, in large part, from the WKLD 
"^DIC",727.813,727.813,"%D",6,0)
LOG file (#64.03) which is populated by a routine provided by the 
"^DIC",727.813,727.813,"%D",7,0)
Laboratory development team.  Not using LMIP codes, the data are derived 
"^DIC",727.813,727.813,"%D",8,0)
from several Lab files as well as from several other DHCP files. Once 
"^DIC",727.813,727.813,"%D",9,0)
approved by the DSS site manager, entries in this file are loaded into 
"^DIC",727.813,727.813,"%D",10,0)
an electronic mail message and sent to the commercial vendor. This file 
"^DIC",727.813,727.813,"%D",11,0)
is intended to be used for validation purposes only. Entries should be 
"^DIC",727.813,727.813,"%D",12,0)
made only by the extract load routine.
"^DIC",727.813,727.813,"%D",13,0)
  
"^DIC",727.813,727.813,"%D",14,0)
Since validation techniques will be determined by the local site, it is 
"^DIC",727.813,727.813,"%D",15,0)
intended that the site add whatever cross references deemed necessary. 
"^DIC",727.813,727.813,"%D",16,0)
However, this file contains two nationally determined cross references, 
"^DIC",727.813,727.813,"%D",17,0)
the "AC" cross reference on the EXTRACT NUMBER field (2) and the "AINV" 
"^DIC",727.813,727.813,"%D",18,0)
cross reference on the SEQUENCE NUMBER field (.01). These cross 
"^DIC",727.813,727.813,"%D",19,0)
references are used by the DSS Extracts software package as an essential 
"^DIC",727.813,727.813,"%D",20,0)
feature for managing and purging data in this file and should not be 
"^DIC",727.813,727.813,"%D",21,0)
modified.
"^DIC",727.813,727.813,"%D",22,0)
  
"^DIC",727.813,727.813,"%D",23,0)
This file should NOT be modified directly using VA FileMan.
"^DIC",727.813,"B","LABORATORY EXTRACT",727.813)

"^DIC",727.814,727.814,0)
RADIOLOGY EXTRACT
"^DIC",727.814,727.814,0,"GL")
^ECX(727.814,
"^DIC",727.814,727.814,"%D",0)
^^18^18^2960807^^^^
"^DIC",727.814,727.814,"%D",1,0)
This file contains data elements as specified by the Decision Support 
"^DIC",727.814,727.814,"%D",2,0)
System (DSS) Program Office for the Radiology extract from existing 
"^DIC",727.814,727.814,"%D",3,0)
DHCP files. Entries into this file are made by extracting data from 
"^DIC",727.814,727.814,"%D",4,0)
several files. Once approved by the DSS site manager, entries in this
"^DIC",727.814,727.814,"%D",5,0)
file are loaded into an electronic mail message and sent to the 
"^DIC",727.814,727.814,"%D",6,0)
commercial vendor. This file is intended to be used for validation 
"^DIC",727.814,727.814,"%D",7,0)
purposes only. Entries should be made only by the extract load routine.
"^DIC",727.814,727.814,"%D",8,0)
  
"^DIC",727.814,727.814,"%D",9,0)
Since validation techniques will be determined by the local site, it is 
"^DIC",727.814,727.814,"%D",10,0)
intended that the site add whatever cross references deemed necessary. 
"^DIC",727.814,727.814,"%D",11,0)
However, this file contains two nationally determined cross references, 
"^DIC",727.814,727.814,"%D",12,0)
the "AC" cross reference on the EXTRACT NUMBER field (2) and the "AINV" 
"^DIC",727.814,727.814,"%D",13,0)
cross reference on the SEQUENCE NUMBER field (.01). These cross 
"^DIC",727.814,727.814,"%D",14,0)
references are used by the DSS Extracts software package as an essential 
"^DIC",727.814,727.814,"%D",15,0)
feature for managing and purging data in this file and should not be 
"^DIC",727.814,727.814,"%D",16,0)
modified.
"^DIC",727.814,727.814,"%D",17,0)
  
"^DIC",727.814,727.814,"%D",18,0)
This file should NOT be modified directly using VA FileMan.
"^DIC",727.814,"B","RADIOLOGY EXTRACT",727.814)

"^DIC",727.815,727.815,0)
EVENT CAPTURE LOCAL EXTRACT^727.815
"^DIC",727.815,727.815,0,"GL")
^ECX(727.815,
"^DIC",727.815,727.815,"%D",0)
^^20^20^2971030^^^^
"^DIC",727.815,727.815,"%D",1,0)
This file contains data elements as specified by the Decision
"^DIC",727.815,727.815,"%D",2,0)
Support System (DSS) Program Office for the Event Capture
"^DIC",727.815,727.815,"%D",3,0)
extract from the existing Event Capture DHCP files. Entries
"^DIC",727.815,727.815,"%D",4,0)
into this file are made by extracting data from several files.
"^DIC",727.815,727.815,"%D",5,0)
Once approved by the DSS site manager, entries in this file
"^DIC",727.815,727.815,"%D",6,0)
are loaded into an electronic mail message and sent to the 
"^DIC",727.815,727.815,"%D",7,0)
commercial vendor. This file is intended to be used for
"^DIC",727.815,727.815,"%D",8,0)
validation purposes only. Entries should be made only by the
"^DIC",727.815,727.815,"%D",9,0)
extract load routine.
"^DIC",727.815,727.815,"%D",10,0)
 
"^DIC",727.815,727.815,"%D",11,0)
Since validation techniques will be determined by the local site,
"^DIC",727.815,727.815,"%D",12,0)
it is intended that the site add whatever cross references deemed
"^DIC",727.815,727.815,"%D",13,0)
necessary. However, this file contains two nationally determined
"^DIC",727.815,727.815,"%D",14,0)
cross references, the"AC" cross reference on the EXTRACT NUMBER
"^DIC",727.815,727.815,"%D",15,0)
field (2) and the "AINV" cross-reference on the SEQUENCE NUMBER
"^DIC",727.815,727.815,"%D",16,0)
field (.01). These cross references are used by the DSS Extracts
"^DIC",727.815,727.815,"%D",17,0)
software package as an essential feature for managing and purging
"^DIC",727.815,727.815,"%D",18,0)
data in this file and should not be modified.
"^DIC",727.815,727.815,"%D",19,0)
 
"^DIC",727.815,727.815,"%D",20,0)
This file should NOT be modified directly using VA FileMan.
"^DIC",727.815,"B","EVENT CAPTURE LOCAL EXTRACT",727.815)

"^DIC",727.817,727.817,0)
TREATING SPECIALTY CHANGE EXTRACT
"^DIC",727.817,727.817,0,"GL")
^ECX(727.817,
"^DIC",727.817,727.817,"%D",0)
^^19^19^2960918^^^^
"^DIC",727.817,727.817,"%D",1,0)
This file contains data elements as specified by the Decision Support 
"^DIC",727.817,727.817,"%D",2,0)
System (DSS) Program Office for the MAS Treating Specialty Change 
"^DIC",727.817,727.817,"%D",3,0)
extract from existing DHCP files. Entries into this file are made by 
"^DIC",727.817,727.817,"%D",4,0)
extracting data from several files. Once approved by the DSS site 
"^DIC",727.817,727.817,"%D",5,0)
manager, entries in this file are loaded into an electronic mail message 
"^DIC",727.817,727.817,"%D",6,0)
and sent to the commercial vendor. This file is intended to be used for 
"^DIC",727.817,727.817,"%D",7,0)
validation purposes only. Entries should be made only by the extract 
"^DIC",727.817,727.817,"%D",8,0)
load routine.
"^DIC",727.817,727.817,"%D",9,0)
  
"^DIC",727.817,727.817,"%D",10,0)
Since validation techniques will be determined by the local site, it is 
"^DIC",727.817,727.817,"%D",11,0)
intended that the site add whatever cross references deemed necessary. 
"^DIC",727.817,727.817,"%D",12,0)
However, this file contains two nationally determined cross references, 
"^DIC",727.817,727.817,"%D",13,0)
the "AC" cross reference on the EXTRACT NUMBER field (2) and the "AINV" 
"^DIC",727.817,727.817,"%D",14,0)
cross reference on the SEQUENCE NUMBER field (.01). These cross 
"^DIC",727.817,727.817,"%D",15,0)
references are used by the DSS Extracts software package as an essential 
"^DIC",727.817,727.817,"%D",16,0)
feature for managing and purging data in this file and should not be 
"^DIC",727.817,727.817,"%D",17,0)
modified.
"^DIC",727.817,727.817,"%D",18,0)
  
"^DIC",727.817,727.817,"%D",19,0)
This file should NOT be modified directly using VA FileMan.
"^DIC",727.817,"B","TREATING SPECIALTY CHANGE EXTRACT",727.817)

"^DIC",727.819,727.819,0)
IV DETAIL EXTRACT
"^DIC",727.819,727.819,0,"GL")
^ECX(727.819,
"^DIC",727.819,727.819,"%",0)
^1.005^^0
"^DIC",727.819,727.819,"%D",0)
^^18^18^2960807^^^^
"^DIC",727.819,727.819,"%D",1,0)
This file contains data elements as specified by the Decision Support 
"^DIC",727.819,727.819,"%D",2,0)
System (DSS) Program Office for the Pharmacy IV extract from existing 
"^DIC",727.819,727.819,"%D",3,0)
DHCP files. Entries into this file are made by extracting data from 
"^DIC",727.819,727.819,"%D",4,0)
several files. Once approved by the DSS site manager, entries in this
"^DIC",727.819,727.819,"%D",5,0)
file are loaded into an electronic mail message and sent to the 
"^DIC",727.819,727.819,"%D",6,0)
commercial vendor. This file is intended to be used for validation 
"^DIC",727.819,727.819,"%D",7,0)
purposes only. Entries should be made only by the extract load routine.
"^DIC",727.819,727.819,"%D",8,0)
  
"^DIC",727.819,727.819,"%D",9,0)
Since validation techniques will be determined by the local site, it is 
"^DIC",727.819,727.819,"%D",10,0)
intended that the site add whatever cross references deemed necessary. 
"^DIC",727.819,727.819,"%D",11,0)
However, this file contains two nationally determined cross references, 
"^DIC",727.819,727.819,"%D",12,0)
the "AC" cross reference on the EXTRACT NUMBER field (2) and the "AINV" 
"^DIC",727.819,727.819,"%D",13,0)
cross reference on the SEQUENCE NUMBER field (.01). These cross 
"^DIC",727.819,727.819,"%D",14,0)
references are used by the DSS Extracts software package as an essential 
"^DIC",727.819,727.819,"%D",15,0)
feature for managing and purging data in this file and should not be 
"^DIC",727.819,727.819,"%D",16,0)
modified.
"^DIC",727.819,727.819,"%D",17,0)
  
"^DIC",727.819,727.819,"%D",18,0)
This file should NOT be modified directly using VA FileMan.
"^DIC",727.819,"B","IV DETAIL EXTRACT",727.819)

"^DIC",727.82,727.82,0)
ADMISSION SETUP EXTRACT
"^DIC",727.82,727.82,0,"GL")
^ECX(727.82,
"^DIC",727.82,727.82,"%D",0)
^^12^12^2960807^^^^
"^DIC",727.82,727.82,"%D",1,0)
This file is used to hold information to create data for the inpatient
"^DIC",727.82,727.82,"%D",2,0)
population on the date that a site chooses to begin using DSS.  Data
"^DIC",727.82,727.82,"%D",3,0)
is entered into this file by a background job which identifies all
"^DIC",727.82,727.82,"%D",4,0)
patients who were in the facility on the selected date.  Then these
"^DIC",727.82,727.82,"%D",5,0)
entries are moved, by another background job, to the ADMISSION EXTRACT
"^DIC",727.82,727.82,"%D",6,0)
file (#727.802) to be transferred to the DSS package.  Once the transfer
"^DIC",727.82,727.82,"%D",7,0)
to the ADMISSION EXTRACT file (#727.802) is complete, data is purged
"^DIC",727.82,727.82,"%D",8,0)
from this file, and it becomes inactive.
"^DIC",727.82,727.82,"%D",9,0)
 
"^DIC",727.82,727.82,"%D",10,0)
Data elements in this file should never be entered, edited, or deleted
"^DIC",727.82,727.82,"%D",11,0)
through the VA FileMan.
"^DIC",727.82,727.82,"%D",12,0)
 
"^DIC",727.82,"B","ADMISSION SETUP EXTRACT",727.82)

"^DIC",727.821,727.821,0)
PHYSICAL MOVEMENT SETUP EXTRACT
"^DIC",727.821,727.821,0,"GL")
^ECX(727.821,
"^DIC",727.821,727.821,"%D",0)
^^12^12^2960807^^^^
"^DIC",727.821,727.821,"%D",1,0)
This file is used to hold information to create data for the physical
"^DIC",727.821,727.821,"%D",2,0)
movements (transfers and discharges) for inpatients on the date that a
"^DIC",727.821,727.821,"%D",3,0)
site chooses to begin using DSS.  Data is entered into this file by a
"^DIC",727.821,727.821,"%D",4,0)
background job which identifies all patients who were in the facility
"^DIC",727.821,727.821,"%D",5,0)
on the selected date.  Then these entries are moved, by another
"^DIC",727.821,727.821,"%D",6,0)
background job, to the PHYSICAL MOVEMENT EXTRACT file (#727.808)
"^DIC",727.821,727.821,"%D",7,0)
to be transferred to the DSS package.  Once the transfer to the PHYSICAL
"^DIC",727.821,727.821,"%D",8,0)
MOVEMENT EXTRACT file (#727.808) is complete, data is purged from
"^DIC",727.821,727.821,"%D",9,0)
this file, and it becomes inactive.
"^DIC",727.821,727.821,"%D",10,0)
  
"^DIC",727.821,727.821,"%D",11,0)
Data elements in this file should never be entered, edited, or deleted
"^DIC",727.821,727.821,"%D",12,0)
through the VA FileMan.
"^DIC",727.821,"B","PHYSICAL MOVEMENT SETUP EXTRACT",727.821)

"^DIC",727.822,727.822,0)
TREATING SPECIALTY CHANGE SETUP EXTRACT
"^DIC",727.822,727.822,0,"GL")
^ECX(727.822,
"^DIC",727.822,727.822,"%D",0)
^^12^12^2960807^^^^
"^DIC",727.822,727.822,"%D",1,0)
This file is used to hold information to create data for the treating
"^DIC",727.822,727.822,"%D",2,0)
specialty changes for inpatients on the date that a site
"^DIC",727.822,727.822,"%D",3,0)
chooses to begin using DSS.  Data is entered into this file by a
"^DIC",727.822,727.822,"%D",4,0)
background job which identifies all patients who were in the facility
"^DIC",727.822,727.822,"%D",5,0)
on the selected date.  Then these entries are moved, by another
"^DIC",727.822,727.822,"%D",6,0)
background job, to the TREATING SPECIALTY CHANGE EXTRACT file (#727.817)
"^DIC",727.822,727.822,"%D",7,0)
to be transferred to the DSS package.  Once the transfer to the
"^DIC",727.822,727.822,"%D",8,0)
TREATING SPECIALTY CHANGE EXTRACT file (#727.817) is complete, data
"^DIC",727.822,727.822,"%D",9,0)
is purged from this file, and it becomes inactive.
"^DIC",727.822,727.822,"%D",10,0)
  
"^DIC",727.822,727.822,"%D",11,0)
Data elements in this file should never be entered, edited, or deleted
"^DIC",727.822,727.822,"%D",12,0)
through the VA FileMan.
"^DIC",727.822,"B","TREATING SPECIALTY CHANGE SETUP EXTRACT",727.822)

"^DIC",727.823,727.823,0)
PAI EXTRACT
"^DIC",727.823,727.823,0,"GL")
^ECX(727.823,
"^DIC",727.823,727.823,"%D",0)
^^19^19^2960807^
"^DIC",727.823,727.823,"%D",1,0)
This file contains data elements as specified by the Decision Support 
"^DIC",727.823,727.823,"%D",2,0)
System (DSS) Program Office for the Patient Assessment Instrument (PAI) 
"^DIC",727.823,727.823,"%D",3,0)
extract from existing DHCP files. Entries into this file are made by 
"^DIC",727.823,727.823,"%D",4,0)
extracting data from the PAF file (#45.9). Once approved by the DSS site 
"^DIC",727.823,727.823,"%D",5,0)
manager, entries in this file are loaded into an electronic mail message 
"^DIC",727.823,727.823,"%D",6,0)
and sent to the commercial vendor. This file is intended to be used for 
"^DIC",727.823,727.823,"%D",7,0)
validation purposes only. Entries should be made only by the extract 
"^DIC",727.823,727.823,"%D",8,0)
load routine.
"^DIC",727.823,727.823,"%D",9,0)
  
"^DIC",727.823,727.823,"%D",10,0)
Since validation techniques will be determined by the local site, it is 
"^DIC",727.823,727.823,"%D",11,0)
intended that the site add whatever cross references deemed necessary. 
"^DIC",727.823,727.823,"%D",12,0)
However, this file contains two nationally determined cross references, 
"^DIC",727.823,727.823,"%D",13,0)
the "AC" cross reference on the EXTRACT NUMBER field (2) and the "AINV" 
"^DIC",727.823,727.823,"%D",14,0)
cross reference on the SEQUENCE NUMBER field (.01). These cross 
"^DIC",727.823,727.823,"%D",15,0)
references are used by the DSS Extracts software package as an essential 
"^DIC",727.823,727.823,"%D",16,0)
feature for managing and purging data in this file and should not be 
"^DIC",727.823,727.823,"%D",17,0)
modified.
"^DIC",727.823,727.823,"%D",18,0)
  
"^DIC",727.823,727.823,"%D",19,0)
This file should NOT be modified directly using VA FileMan.
"^DIC",727.823,"B","PAI EXTRACT",727.823)

"^DIC",727.824,727.824,0)
LAB RESULTS EXTRACT
"^DIC",727.824,727.824,0,"GL")
^ECX(727.824,
"^DIC",727.824,727.824,"%D",0)
^^18^18^2960807^^^^
"^DIC",727.824,727.824,"%D",1,0)
This file contains data elements as specified by the Decision Support 
"^DIC",727.824,727.824,"%D",2,0)
System (DSS) Program Office for the Laboratory Results extract from 
"^DIC",727.824,727.824,"%D",3,0)
existing DHCP files. Entries into this file are made by extracting data 
"^DIC",727.824,727.824,"%D",4,0)
from several files. Once approved by the DSS site manager, entries in 
"^DIC",727.824,727.824,"%D",5,0)
this file are loaded into an electronic mail message and sent to the 
"^DIC",727.824,727.824,"%D",6,0)
commercial vendor. This file is intended to be used for validation 
"^DIC",727.824,727.824,"%D",7,0)
purposes only. Entries should be made only by the extract load routine.
"^DIC",727.824,727.824,"%D",8,0)
  
"^DIC",727.824,727.824,"%D",9,0)
Since validation techniques will be determined by the local site, it is 
"^DIC",727.824,727.824,"%D",10,0)
intended that the site add whatever cross references deemed necessary. 
"^DIC",727.824,727.824,"%D",11,0)
However, this file contains two nationally determined cross references, 
"^DIC",727.824,727.824,"%D",12,0)
the "AC" cross reference on the EXTRACT NUMBER field (2) and the "AINV" 
"^DIC",727.824,727.824,"%D",13,0)
cross reference on the SEQUENCE NUMBER field (.01). These cross 
"^DIC",727.824,727.824,"%D",14,0)
references are used by the DSS Extracts software package as an essential 
"^DIC",727.824,727.824,"%D",15,0)
feature for managing and purging data in this file and should not be 
"^DIC",727.824,727.824,"%D",16,0)
modified.
"^DIC",727.824,727.824,"%D",17,0)
  
"^DIC",727.824,727.824,"%D",18,0)
This file should NOT be modified directly using VA FileMan.
"^DIC",727.824,"B","LAB RESULTS EXTRACT",727.824)

"^DIC",727.825,727.825,0)
QUASAR EXTRACT^727.825
"^DIC",727.825,727.825,0,"GL")
^ECX(727.825,
"^DIC",727.825,727.825,"%D",0)
^^17^17^2960807^^^^
"^DIC",727.825,727.825,"%D",1,0)
This file contains data elements as specified by the Decision Support
"^DIC",727.825,727.825,"%D",2,0)
System (DSS) Program Office for the QUASAR extract from existing QUASAR
"^DIC",727.825,727.825,"%D",3,0)
DHCP files. Entries into this file are made by extracting data
"^DIC",727.825,727.825,"%D",4,0)
from several files.  Once approved by the DSS site manager, entries in
"^DIC",727.825,727.825,"%D",5,0)
this file are loaded into an electronic mail message and sent to the
"^DIC",727.825,727.825,"%D",6,0)
commercial vendor. This file is intended to be used for validation
"^DIC",727.825,727.825,"%D",7,0)
purposes only. Entries should be made only by the extract load routine.
"^DIC",727.825,727.825,"%D",8,0)
  
"^DIC",727.825,727.825,"%D",9,0)
Since validation techniques will be determined by the local site, it is
"^DIC",727.825,727.825,"%D",10,0)
intended that the site add whatever cross references deemed necessary.
"^DIC",727.825,727.825,"%D",11,0)
However, this file contains two nationally determined cross references,
"^DIC",727.825,727.825,"%D",12,0)
the "AC" cross reference on the EXTRACT NUMBER field (2) and the "AINV"
"^DIC",727.825,727.825,"%D",13,0)
cross reference on the SEQUENCE NUMBER field (.01). These cross references
"^DIC",727.825,727.825,"%D",14,0)
are used by the DSS Extracts software package as an essential feature for
"^DIC",727.825,727.825,"%D",15,0)
managing and purging data in this file and should not be modified.
"^DIC",727.825,727.825,"%D",16,0)
  
"^DIC",727.825,727.825,"%D",17,0)
This file should NOT be modified directly using VA FileMan.
"^DIC",727.825,"B","QUASAR EXTRACT",727.825)

"^DIC",728,728,0)
DSS EXTRACTS
"^DIC",728,728,0,"GL")
^ECX(728,
"^DIC",728,728,"%D",0)
^^11^11^2971008^^^^
"^DIC",728,728,"%D",1,0)
This file contains various data extract information utilized by the DSS
"^DIC",728,728,"%D",2,0)
Extracts software.  This data includes the last date an extract was
"^DIC",728,728,"%D",3,0)
run, the Austin queue receiving the extract data, and extract setup
"^DIC",728,728,"%D",4,0)
information.
"^DIC",728,728,"%D",5,0)
 
"^DIC",728,728,"%D",6,0)
Data in this file should be entered and edited only by using the DSS
"^DIC",728,728,"%D",7,0)
software and not by direct access via VA FileMan.
"^DIC",728,728,"%D",8,0)
 
"^DIC",728,728,"%D",9,0)
**TECH NOTE**
"^DIC",728,728,"%D",10,0)
When adding a new extract, make sure that the "LAST DATE XXX" is on
"^DIC",728,728,"%D",11,0)
same piece of the 7 node as the "XXX" field is on the 7.1 node.
"^DIC",728,"B","DSS EXTRACTS",728)

"^DIC",728.113,728.113,0)
IV EXTRACT DATA^728.113
"^DIC",728.113,728.113,0,"GL")
^ECX(728.113,
"^DIC",728.113,728.113,"%D",0)
^^9^9^2960829^^^^
"^DIC",728.113,728.113,"%D",1,0)
This file holds data from the IV module of the Inpatient
"^DIC",728.113,728.113,"%D",2,0)
Medications package to be extracted by the DSS software.  Data is entered
"^DIC",728.113,728.113,"%D",3,0)
into this file by routine ECXPIV1 which is called by statistics options
"^DIC",728.113,728.113,"%D",4,0)
in the IV module. Data is deleted from this file after it is
"^DIC",728.113,728.113,"%D",5,0)
extracted in a form to be shipped to the commercial software.
"^DIC",728.113,728.113,"%D",6,0)
 
"^DIC",728.113,728.113,"%D",7,0)
Data in this file should not be entered, edited, or deleted through
"^DIC",728.113,728.113,"%D",8,0)
direct access via VA FileMan.
"^DIC",728.113,728.113,"%D",9,0)
 
"^DIC",728.113,"B","IV EXTRACT DATA",728.113)

"^DIC",728.44,728.44,0)
CLINICS AND STOP CODES
"^DIC",728.44,728.44,0,"GL")
^ECX(728.44,
"^DIC",728.44,728.44,"%D",0)
^^13^13^2960711^^^^
"^DIC",728.44,728.44,"%D",1,0)
This file holds the DSS translation tables for entries in the HOSPITAL
"^DIC",728.44,728.44,"%D",2,0)
LOCATION file (#44).  For each clinic, this file holds its name, stop code,
"^DIC",728.44,728.44,"%D",3,0)
credit stop code, and DSS alternatives for both stop code and credit stop
"^DIC",728.44,728.44,"%D",4,0)
code.  Also included is a field indicating which code should be sent to the
"^DIC",728.44,728.44,"%D",5,0)
DSS commercial software, that is, stop code, credit stop code, or both.  If
"^DIC",728.44,728.44,"%D",6,0)
there is no data in this file for a given clinic, the stop code in the
"^DIC",728.44,728.44,"%D",7,0)
HOSPITAL LOCATION file (#44) will be used.  If DSS alternate stop
"^DIC",728.44,728.44,"%D",8,0)
codes are entered, they will be used in place of those entered in the
"^DIC",728.44,728.44,"%D",9,0)
HOSPITAL LOCATION file (#44).  This file should be reviewed by the
"^DIC",728.44,728.44,"%D",10,0)
DSS manager on a regular basis and corrected as needed.  Since several
"^DIC",728.44,728.44,"%D",11,0)
fields in this file are linked to fields in the HOSPITAL LOCATION
"^DIC",728.44,728.44,"%D",12,0)
file (#44), data in this file should be entered and edited only by using
"^DIC",728.44,728.44,"%D",13,0)
the DSS software and not by direct access via VA FileMan.
"^DIC",728.44,"B","CLINICS AND STOP CODES",728.44)

"^DIC",728.441,728.441,0)
NATIONAL CLINIC
"^DIC",728.441,728.441,0,"GL")
^ECX(728.441,
"^DIC",728.441,728.441,"%D",0)
^^8^8^2951022^^^^
"^DIC",728.441,728.441,"%D",1,0)
This file contains the national standard clinic codes to be sent to the
"^DIC",728.441,728.441,"%D",2,0)
commercial software as part of the DHCP DSS Extracts software.  Entries
"^DIC",728.441,728.441,"%D",3,0)
in this file are compiled by the DSS Program Office.
"^DIC",728.441,728.441,"%D",4,0)
 
"^DIC",728.441,728.441,"%D",5,0)
This is a standard file exported with the DSS Extracts software.  No
"^DIC",728.441,728.441,"%D",6,0)
additions, deletions, or modifications to entries in this file are
"^DIC",728.441,728.441,"%D",7,0)
permitted.  As updates become necessary, a new version of this file
"^DIC",728.441,728.441,"%D",8,0)
will be released nationally.
"^DIC",728.441,"B","NATIONAL CLINIC",728.441)

"^DIC",728.506,728.506,0)
DSS DRUG PRODUCT CODE
"^DIC",728.506,728.506,0,"GL")
^ECX(728.506,
"^DIC",728.506,728.506,"%D",0)
^^15^15^2950417^^^^
"^DIC",728.506,728.506,"%D",1,0)
This file holds information needed to determine the DSS drug product
"^DIC",728.506,728.506,"%D",2,0)
code for any entry in the local DRUG file (#50) which has been matched
"^DIC",728.506,728.506,"%D",3,0)
to an entry in the NATIONAL DRUG file (#50.6).  The determining factors
"^DIC",728.506,728.506,"%D",4,0)
are VA classification, route of administration, and, in some cases,
"^DIC",728.506,728.506,"%D",5,0)
specific VA product name.  These factors have been determined by the
"^DIC",728.506,728.506,"%D",6,0)
DSS pharmaceutical task force based, in part, on information provided
"^DIC",728.506,728.506,"%D",7,0)
by the National Drug File (NDF) task force.  Use of this file depends
"^DIC",728.506,728.506,"%D",8,0)
on fields in the local DRUG file (#50) which were set by the matching
"^DIC",728.506,728.506,"%D",9,0)
process in the National Drug File package as specified by the NDF task
"^DIC",728.506,728.506,"%D",10,0)
force.
"^DIC",728.506,728.506,"%D",11,0)
 
"^DIC",728.506,728.506,"%D",12,0)
For these reasons, it is imperative that neither the data nor the
"^DIC",728.506,728.506,"%D",13,0)
data dictionary for this file be modified at the local VAMC.  As
"^DIC",728.506,728.506,"%D",14,0)
modifications are required, they will be sent from the developers as
"^DIC",728.506,728.506,"%D",15,0)
directed by the involved task force members.
"^DIC",728.506,"B","DSS DRUG PRODUCT CODE",728.506)

"^DIC",728.904,728.904,0)
UNIT DOSE EXTRACT DATA
"^DIC",728.904,728.904,0,"GL")
^ECX(728.904,
"^DIC",728.904,728.904,"%D",0)
^^9^9^2960912^^^^
"^DIC",728.904,728.904,"%D",1,0)
This file holds data from the Unit Dose module of the Inpatient
"^DIC",728.904,728.904,"%D",2,0)
Medications package to be extracted by the DSS software.  Data is entered
"^DIC",728.904,728.904,"%D",3,0)
into this file by routine ECXUD1 which is called by pick list options
"^DIC",728.904,728.904,"%D",4,0)
in the Unit Dose module. Data is deleted from this file after it is
"^DIC",728.904,728.904,"%D",5,0)
extracted in a form to be shipped to the commercial software.
"^DIC",728.904,728.904,"%D",6,0)
 
"^DIC",728.904,728.904,"%D",7,0)
Data in this file should not be entered, edited, or deleted through
"^DIC",728.904,728.904,"%D",8,0)
direct access via VA FileMan.
"^DIC",728.904,728.904,"%D",9,0)
 
"^DIC",728.904,"B","UNIT DOSE EXTRACT DATA",728.904)

**END**
**END**
