Released XU*8*67 SEQ #62
Extracted from mail message
**KIDS**:XU*8.0*67^

**INSTALL NAME**
XU*8.0*67
"BLD",8,0)
XU*8.0*67^KERNEL^0^2971009^y
"BLD",8,1,0)
^^120^120^2980226^
"BLD",8,1,1,0)
**** This patch will add to the number of entries in the LOCK table. ****
"BLD",8,1,2,0)
**** Depending on the number of jobs on a system node the Lock table ****
"BLD",8,1,3,0)
**** may need to be increased.                                       ****
"BLD",8,1,4,0)

"BLD",8,1,5,0)
 Certain long running task (i.e. HL7 filers and LLP's) are getting removed 
"BLD",8,1,6,0)
 from the system by the daily 'job' and 'Taskman' clean-up routines even 
"BLD",8,1,7,0)
 though they are still active.  Taskman has been modified to lock the 
"BLD",8,1,8,0)
 ^%ZTSCH("TASK",tasknumber) node when starting a task and release the lock 
"BLD",8,1,9,0)
 at completion.  The clean-up routines will now attempt to lock this node to 
"BLD",8,1,10,0)
 determine if the task is still active.
"BLD",8,1,11,0)
  
"BLD",8,1,12,0)
 These problems were reported in the following NOIS's:  MAR-1196-20400, 
"BLD",8,1,13,0)
 CMO-1196-41389, WNY-1296-11772, MAD-0197-40149, ISH-0197-41376, 
"BLD",8,1,14,0)
 HIN-0297-41185.
"BLD",8,1,15,0)
  
"BLD",8,1,16,0)
 In addition to being tested locally, the following sites tested this patch:
"BLD",8,1,17,0)
  
"BLD",8,1,18,0)
  Baltimore VAMC, Dayton VAMC, Columbia VAMC
"BLD",8,1,19,0)
  
"BLD",8,1,20,0)
WNY-1296-11772, CMO-1196-41389, MAR-1196-20400
"BLD",8,1,21,0)
HIN-0297-41185 ZTMS3   Prevent TaskMan and Kernel clean-up programs from 
"BLD",8,1,22,0)
ISH-0197-41376          blowing away tasks that need to run for long periods
"BLD",8,1,23,0)
MAD-0197-40149  XUTMK   of time.  This requires that tasks only use 
"BLD",8,1,24,0)
                XUTMRJD INCREMENTAL locks.
"BLD",8,1,25,0)
                                
"BLD",8,1,26,0)
Long time requests for tasks that restart themselfas if they stop unexpectedly.
"BLD",8,1,27,0)
Part of the problem has been to know when a TASK is running.  The change to 
"BLD",8,1,28,0)
prevent clean-up programs from deleting the info about long running tasks
"BLD",8,1,29,0)
puts into place the needed part so that taskman can check and restart tasks
"BLD",8,1,30,0)
that need to be persistent.
"BLD",8,1,31,0)

"BLD",8,1,32,0)
SFC-1197-60720   ZTMS2  Taskman would not check the device file OUT-OF-SERVICE
"BLD",8,1,33,0)
                 ZTMS3  field.  This was caused by DT not being set at the time
"BLD",8,1,34,0)
                 ZTMS   of the call to %ZIS.
"BLD",8,1,35,0)

"BLD",8,1,36,0)
ZTLOAD has two new supported tags.
"BLD",8,1,37,0)

"BLD",8,1,38,0)
$$PSET^%ZTLOAD to set a task as persistent.  Returns 1 if the flag is set other
"BLD",8,1,39,0)
wise returns 0.
"BLD",8,1,40,0)
PCLEAR^%ZTLOAD to clear the persistent flag for a task.
"BLD",8,1,41,0)

"BLD",8,1,42,0)
                 Checksum
"BLD",8,1,43,0)
Routine         Old       New      2nd Line
"BLD",8,1,44,0)
XQ1          11726256  11899807    **1,15,59,67**
"BLD",8,1,45,0)
XQ82          3479466   3479466    **59,67**
"BLD",8,1,46,0)
XUTMG19                 3890099    **20,67**
"BLD",8,1,47,0)
XUTMK         6472549   6655042    **49,67**
"BLD",8,1,48,0)
XUTMRJD       6554859   6838266    **49,67**
"BLD",8,1,49,0)
XUTMTZ                  7805273    **67**
"BLD",8,1,50,0)
ZTLOAD        1188558   1753065    **67**
"BLD",8,1,51,0)
ZTLOAD2       3203201   3185920    **1,67**
"BLD",8,1,52,0)
ZTLOAD3                 3918318    **67**
"BLD",8,1,53,0)
ZTLOAD7       3885066   4104573    **67**
"BLD",8,1,54,0)
ZTM           7821111   8229940    **24,36,64,67**
"BLD",8,1,55,0)
ZTM0          5563711   5758864    **42,36,67**
"BLD",8,1,56,0)
ZTMS          5336388   5366119    **2,18,24,36,67**
"BLD",8,1,57,0)
ZTMS2         5283853   5301865    **2,18,23,36,67**
"BLD",8,1,58,0)
ZTMS3         9572340  10241859    **1,18,36,49,64,67**
"BLD",8,1,59,0)

"BLD",8,1,60,0)
========================================================================= 
"BLD",8,1,61,0)
Installation:
"BLD",8,1,62,0)

"BLD",8,1,63,0)
  1.  DSM sites - Some of these routines are usually mapped,
"BLD",8,1,64,0)
      so you will need to disable mapping for the effected routines.
"BLD",8,1,65,0)
      
"BLD",8,1,66,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"BLD",8,1,67,0)
      option will load the KIDS package onto your system.
"BLD",8,1,68,0)
      
"BLD",8,1,69,0)
  3.  The patch has now been loaded into a Transport global on your
"BLD",8,1,70,0)
      system. You now need to use KIDS to install the Transport global.
"BLD",8,1,71,0)
      On the KIDS menu, under the 'Installation' menu, use the following
"BLD",8,1,72,0)
      options:
"BLD",8,1,73,0)
      
"BLD",8,1,74,0)
         Verify Checksum's in Transport Global
"BLD",8,1,75,0)
         Print Transport Global
"BLD",8,1,76,0)
         Compare Transport Global to Current System
"BLD",8,1,77,0)
         Backup a Transport Global
"BLD",8,1,78,0)
         
"BLD",8,1,79,0)
 4.   Inhibit users from login into the system. (If you install when few
"BLD",8,1,80,0)
      user are on the system and the possibility of some CLOBER errors is
"BLD",8,1,81,0)
      acceptable then users can stay on the system.)
"BLD",8,1,82,0)
      Also place TASKMAN in a wait state.
"BLD",8,1,83,0)
      
"BLD",8,1,84,0)
  5.  On the KIDS menu, under the 'Installation' menu, use the following
"BLD",8,1,85,0)
      option:
"BLD",8,1,86,0)
         Install Package(s)  'XU*8.0*67'
"BLD",8,1,87,0)
                              =========
"BLD",8,1,88,0)
         
"BLD",8,1,89,0)
  7.  MSM Sites - Answer YES to the question 'Want to MOVE routines to
"BLD",8,1,90,0)
      other CPUs?'. Enter the names of your Compute and Print server(s).
"BLD",8,1,91,0)
      MSM Sites - With Taskman not working you need to move the routine to
"BLD",8,1,92,0)
      other CPU's with the D ^XPDCPU
"BLD",8,1,93,0)
      
"BLD",8,1,94,0)
  8.  After installing this patch, 
"BLD",8,1,95,0)
      DSM/MSM sites - you need to move several routines from 
"BLD",8,1,96,0)
      your production account to each manager account:
"BLD",8,1,97,0)
      OpenM Sites - you don't need to move anything, skip this step.
"BLD",8,1,98,0)
      ZTLOAD
"BLD",8,1,99,0)
      ZTLOAD3
"BLD",8,1,100,0)
      ZTLOAD7
"BLD",8,1,101,0)
      ZTM
"BLD",8,1,102,0)
      ZTM0
"BLD",8,1,103,0)
      ZTMS
"BLD",8,1,104,0)
      ZTMS2
"BLD",8,1,105,0)
      ZTMS3
"BLD",8,1,106,0)

"BLD",8,1,107,0)
      And in the manager account,  (OpenM sites remain in VAH)
"BLD",8,1,108,0)
       
"BLD",8,1,109,0)
      All sites:
"BLD",8,1,110,0)
      DO RELOAD^ZTMGRSET
"BLD",8,1,111,0)
      Select the System
"BLD",8,1,112,0)
      Patch number to load: 67
"BLD",8,1,113,0)
                            ==
"BLD",8,1,114,0)
       
"BLD",8,1,115,0)
  9.  DSM Sites, after patch has installed, rebuild your map set.
"BLD",8,1,116,0)
 10.  Enable user's login.
"BLD",8,1,117,0)
      Remove TASKMAN from the wait state.
"BLD",8,1,118,0)

"BLD",8,1,119,0)
=========================================================================
"BLD",8,1,120,0)

"BLD",8,4,0)
^9.64PA^19.2^1
"BLD",8,4,19.2,0)
19.2
"BLD",8,4,19.2,2,0)
^9.641^19.2^1
"BLD",8,4,19.2,2,19.2,0)
OPTION SCHEDULING  (File-top level)
"BLD",8,4,19.2,2,19.2,1,0)
^9.6411^9^1
"BLD",8,4,19.2,2,19.2,1,9,0)
SPECIAL QUEUEING
"BLD",8,4,19.2,222)
y^y^p^^^^n
"BLD",8,4,"APDD",19.2,19.2)

"BLD",8,4,"APDD",19.2,19.2,9)

"BLD",8,4,"B",19.2,19.2)

"BLD",8,"ABPKG")
n
"BLD",8,"KRN",0)
^9.67PA^19^13
"BLD",8,"KRN",.4,0)
.4
"BLD",8,"KRN",.401,0)
.401
"BLD",8,"KRN",.402,0)
.402
"BLD",8,"KRN",.403,0)
.403
"BLD",8,"KRN",.403,"NM",0)
^9.68A^1^1
"BLD",8,"KRN",.403,"NM",1,0)
XU OPTION SCHEDULE    FILE #19.2^19.2^0
"BLD",8,"KRN",.403,"NM","B","XU OPTION SCHEDULE    FILE #19.2",1)

"BLD",8,"KRN",.5,0)
.5
"BLD",8,"KRN",.84,0)
.84
"BLD",8,"KRN",3.6,0)
3.6
"BLD",8,"KRN",3.8,0)
3.8
"BLD",8,"KRN",9.2,0)
9.2
"BLD",8,"KRN",9.8,0)
9.8
"BLD",8,"KRN",9.8,"NM",0)
^9.68A^15^15
"BLD",8,"KRN",9.8,"NM",1,0)
XQ82^^0^B4749918
"BLD",8,"KRN",9.8,"NM",2,0)
XUTMK^^0^B19043637
"BLD",8,"KRN",9.8,"NM",3,0)
XUTMRJD^^0^B22692879
"BLD",8,"KRN",9.8,"NM",4,0)
ZTMS3^^0^B23276639
"BLD",8,"KRN",9.8,"NM",5,0)
ZTM^^0^B24560405
"BLD",8,"KRN",9.8,"NM",6,0)
ZTLOAD^^0^B3773968
"BLD",8,"KRN",9.8,"NM",7,0)
ZTLOAD3^^0^B9043599
"BLD",8,"KRN",9.8,"NM",8,0)
XUTMTZ^^0^B17203268
"BLD",8,"KRN",9.8,"NM",9,0)
ZTMS^^0^B12456789
"BLD",8,"KRN",9.8,"NM",10,0)
ZTM0^^0^B11585005
"BLD",8,"KRN",9.8,"NM",11,0)
XUTMG19^^0^B13649724
"BLD",8,"KRN",9.8,"NM",12,0)
XQ1^^0^B30078521
"BLD",8,"KRN",9.8,"NM",13,0)
ZTMS2^^0^B16642594
"BLD",8,"KRN",9.8,"NM",14,0)
ZTLOAD2^^0^B5693902
"BLD",8,"KRN",9.8,"NM",15,0)
ZTLOAD7^^0^B8718521
"BLD",8,"KRN",9.8,"NM","B","XQ1",12)

"BLD",8,"KRN",9.8,"NM","B","XQ82",1)

"BLD",8,"KRN",9.8,"NM","B","XUTMG19",11)

"BLD",8,"KRN",9.8,"NM","B","XUTMK",2)

"BLD",8,"KRN",9.8,"NM","B","XUTMRJD",3)

"BLD",8,"KRN",9.8,"NM","B","XUTMTZ",8)

"BLD",8,"KRN",9.8,"NM","B","ZTLOAD",6)

"BLD",8,"KRN",9.8,"NM","B","ZTLOAD2",14)

"BLD",8,"KRN",9.8,"NM","B","ZTLOAD3",7)

"BLD",8,"KRN",9.8,"NM","B","ZTLOAD7",15)

"BLD",8,"KRN",9.8,"NM","B","ZTM",5)

"BLD",8,"KRN",9.8,"NM","B","ZTM0",10)

"BLD",8,"KRN",9.8,"NM","B","ZTMS",9)

"BLD",8,"KRN",9.8,"NM","B","ZTMS2",13)

"BLD",8,"KRN",9.8,"NM","B","ZTMS3",4)

"BLD",8,"KRN",19,0)
19
"BLD",8,"KRN",19.1,0)
19.1
"BLD",8,"KRN",101,0)
101
"BLD",8,"KRN","B",.4,.4)

"BLD",8,"KRN","B",.401,.401)

"BLD",8,"KRN","B",.402,.402)

"BLD",8,"KRN","B",.403,.403)

"BLD",8,"KRN","B",.5,.5)

"BLD",8,"KRN","B",.84,.84)

"BLD",8,"KRN","B",3.6,3.6)

"BLD",8,"KRN","B",3.8,3.8)

"BLD",8,"KRN","B",9.2,9.2)

"BLD",8,"KRN","B",9.8,9.8)

"BLD",8,"KRN","B",19,19)

"BLD",8,"KRN","B",19.1,19.1)

"BLD",8,"KRN","B",101,101)

"BLD",8,"QUES",0)
^9.62^^
"BLD",8,"REQB",0)
^9.611^1^1
"BLD",8,"REQB",1,0)
XU*8.0*59^2
"BLD",8,"REQB","B","XU*8.0*59",1)

"FIA",19.2)
OPTION SCHEDULING
"FIA",19.2,0)
^DIC(19.2,
"FIA",19.2,0,0)
19.2PI
"FIA",19.2,0,1)
y^y^p^^^^n
"FIA",19.2,0,10)

"FIA",19.2,0,11)

"FIA",19.2,0,"RLRO")

"FIA",19.2,0,"VR")
8.0^XU
"FIA",19.2,19.2)
1
"FIA",19.2,19.2,9)

"KRN",.403,9,-1)
0^1
"KRN",.403,9,0)
XU OPTION SCHEDULE^^^^2940310^^^19.2^0^0^1
"KRN",.403,9,40,0)
^.4031I^2^2
"KRN",.403,9,40,1,0)
1^^1,1^2
"KRN",.403,9,40,1,1)
Page 1
"KRN",.403,9,40,1,40,0)
^.4032PI^43^1
"KRN",.403,9,40,1,40,43,0)
XU OPTION SCHEDULE^2^1,1^e
"KRN",.403,9,40,2,0)
2^^1,1^^1
"KRN",.403,9,40,2,1)
Page 2
"KRN",.403,9,40,2,40,0)
^.4032PI^49^2
"KRN",.403,9,40,2,40,48,0)
XUOPTION SCHEDULE 2^1^1,1^e
"KRN",.403,9,40,2,40,49,0)
XUOPTION SCHEDULE 3^2^8,5^e
"KRN",.403,9,40,2,40,49,2)
5
"KRN",.404,43,0)
XU OPTION SCHEDULE^19.2
"KRN",.404,43,40,0)
^.4044I^11^11
"KRN",.404,43,40,1,0)
6^QUEUED TO RUN AT WHAT TIME^3
"KRN",.404,43,40,1,1)
2
"KRN",.404,43,40,1,2)
6,31^30^6,3
"KRN",.404,43,40,1,10)
S:X="" DDSBR=5
"KRN",.404,43,40,1,11)
K T S T(1)="This is the date/time you want this option to be started by TaskMan.",T(2)="",T(3)="The current time is "_$$HTE^XLFDT($H,"1P") D HLP^DDSUTL(.T)
"KRN",.404,43,40,2,0)
7^DEVICE FOR QUEUED JOB OUTPUT^3
"KRN",.404,43,40,2,1)
3
"KRN",.404,43,40,2,2)
8,31^30^8,1
"KRN",.404,43,40,2,11)
D HLP^DDSUTL("Only enter a DEVICE if the job needs an output device.")
"KRN",.404,43,40,3,0)
8^QUEUED TO RUN ON VOLUME SET^3
"KRN",.404,43,40,3,1)
5
"KRN",.404,43,40,3,2)
10,31^10^10,2
"KRN",.404,43,40,3,11)
D HLP^DDSUTL("This is the Volume set [:node] that you want the job to run on.")
"KRN",.404,43,40,4,0)
9^RESCHEDULING FREQUENCY^3
"KRN",.404,43,40,4,1)
6
"KRN",.404,43,40,4,2)
12,31^30^12,7
"KRN",.404,43,40,4,11)
D HLP^DDSUTL("If this field is blank then the job will run only once.")
"KRN",.404,43,40,5,0)
11^SPECIAL QUEUEING^3
"KRN",.404,43,40,5,1)
9
"KRN",.404,43,40,5,2)
16,31^20^16,13
"KRN",.404,43,40,5,11)
K T S T(1)="This field is only for special jobs:",T(2)="1. That need to start every time the system is rebooted.",T(3)="2. Need to be persistent.",T(4)="3. BOTH" D HLP^DDSUTL(.T)
"KRN",.404,43,40,6,0)
1^Edit Option Schedule^1^
"KRN",.404,43,40,6,2)
^^1,27^1
"KRN",.404,43,40,7,0)
2^Option Name^3
"KRN",.404,43,40,7,1)
.01
"KRN",.404,43,40,7,2)
2,18^30^2,5
"KRN",.404,43,40,8,0)
5^__________________________________________________________________________^1^
"KRN",.404,43,40,8,2)
^^4,3^1
"KRN",.404,43,40,9,0)
3^Menu Text^4
"KRN",.404,43,40,9,2)
3,16^32^3,5
"KRN",.404,43,40,9,30)
={NAME:MENU TEXT}
"KRN",.404,43,40,10,0)
4^TASK ID^3
"KRN",.404,43,40,10,1)
12
"KRN",.404,43,40,10,2)
3,67^7^3,58
"KRN",.404,43,40,10,4)
^^^1
"KRN",.404,43,40,11,0)
10^TASK PARAMETERS^3
"KRN",.404,43,40,11,1)
15
"KRN",.404,43,40,11,2)
14,31^48^14,14
"KRN",.404,48,0)
XUOPTION SCHEDULE 2^19.2
"KRN",.404,48,40,0)
^.4044I^3^3
"KRN",.404,48,40,1,0)
1^Edit Option Schedule^1^
"KRN",.404,48,40,1,2)
^^1,26^
"KRN",.404,48,40,2,0)
2^Option Name^3
"KRN",.404,48,40,2,1)
.01
"KRN",.404,48,40,2,2)
2,18^30^2,5
"KRN",.404,48,40,2,4)
^^^1
"KRN",.404,48,40,3,0)
3^_____________________________________________________________________^1^
"KRN",.404,48,40,3,2)
^^3,5^1
"KRN",.404,49,0)
XUOPTION SCHEDULE 3^19.21
"KRN",.404,49,40,0)
^.4044I^2^2
"KRN",.404,49,40,1,0)
1^VARIABLE NAME^3
"KRN",.404,49,40,1,1)
.01
"KRN",.404,49,40,1,2)
1,16^20^1,1
"KRN",.404,49,40,1,4)
0
"KRN",.404,49,40,2,0)
2^VALUE^3
"KRN",.404,49,40,2,1)
1
"KRN",.404,49,40,2,2)
1,48^24^1,41
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^2950703^2970507^.5
"PKG",3,22,1,"PAH",1,0)
67^2971009
"PKG",3,22,1,"PAH",1,1,0)
^^120^120^2980226
"PKG",3,22,1,"PAH",1,1,1,0)
**** This patch will add to the number of entries in the LOCK table. ****
"PKG",3,22,1,"PAH",1,1,2,0)
**** Depending on the number of jobs on a system node the Lock table ****
"PKG",3,22,1,"PAH",1,1,3,0)
**** may need to be increased.                                       ****
"PKG",3,22,1,"PAH",1,1,4,0)

"PKG",3,22,1,"PAH",1,1,5,0)
 Certain long running task (i.e. HL7 filers and LLP's) are getting removed 
"PKG",3,22,1,"PAH",1,1,6,0)
 from the system by the daily 'job' and 'Taskman' clean-up routines even 
"PKG",3,22,1,"PAH",1,1,7,0)
 though they are still active.  Taskman has been modified to lock the 
"PKG",3,22,1,"PAH",1,1,8,0)
 ^%ZTSCH("TASK",tasknumber) node when starting a task and release the lock 
"PKG",3,22,1,"PAH",1,1,9,0)
 at completion.  The clean-up routines will now attempt to lock this node to 
"PKG",3,22,1,"PAH",1,1,10,0)
 determine if the task is still active.
"PKG",3,22,1,"PAH",1,1,11,0)
  
"PKG",3,22,1,"PAH",1,1,12,0)
 These problems were reported in the following NOIS's:  MAR-1196-20400, 
"PKG",3,22,1,"PAH",1,1,13,0)
 CMO-1196-41389, WNY-1296-11772, MAD-0197-40149, ISH-0197-41376, 
"PKG",3,22,1,"PAH",1,1,14,0)
 HIN-0297-41185.
"PKG",3,22,1,"PAH",1,1,15,0)
  
"PKG",3,22,1,"PAH",1,1,16,0)
 In addition to being tested locally, the following sites tested this patch:
"PKG",3,22,1,"PAH",1,1,17,0)
  
"PKG",3,22,1,"PAH",1,1,18,0)
  Baltimore VAMC, Dayton VAMC, Columbia VAMC
"PKG",3,22,1,"PAH",1,1,19,0)
  
"PKG",3,22,1,"PAH",1,1,20,0)
WNY-1296-11772, CMO-1196-41389, MAR-1196-20400
"PKG",3,22,1,"PAH",1,1,21,0)
HIN-0297-41185 ZTMS3   Prevent TaskMan and Kernel clean-up programs from 
"PKG",3,22,1,"PAH",1,1,22,0)
ISH-0197-41376          blowing away tasks that need to run for long periods
"PKG",3,22,1,"PAH",1,1,23,0)
MAD-0197-40149  XUTMK   of time.  This requires that tasks only use 
"PKG",3,22,1,"PAH",1,1,24,0)
                XUTMRJD INCREMENTAL locks.
"PKG",3,22,1,"PAH",1,1,25,0)
                                
"PKG",3,22,1,"PAH",1,1,26,0)
Long time requests for tasks that restart themselfas if they stop unexpectedly.
"PKG",3,22,1,"PAH",1,1,27,0)
Part of the problem has been to know when a TASK is running.  The change to 
"PKG",3,22,1,"PAH",1,1,28,0)
prevent clean-up programs from deleting the info about long running tasks
"PKG",3,22,1,"PAH",1,1,29,0)
puts into place the needed part so that taskman can check and restart tasks
"PKG",3,22,1,"PAH",1,1,30,0)
that need to be persistent.
"PKG",3,22,1,"PAH",1,1,31,0)

"PKG",3,22,1,"PAH",1,1,32,0)
SFC-1197-60720   ZTMS2  Taskman would not check the device file OUT-OF-SERVICE
"PKG",3,22,1,"PAH",1,1,33,0)
                 ZTMS3  field.  This was caused by DT not being set at the time
"PKG",3,22,1,"PAH",1,1,34,0)
                 ZTMS   of the call to %ZIS.
"PKG",3,22,1,"PAH",1,1,35,0)

"PKG",3,22,1,"PAH",1,1,36,0)
ZTLOAD has two new supported tags.
"PKG",3,22,1,"PAH",1,1,37,0)

"PKG",3,22,1,"PAH",1,1,38,0)
$$PSET^%ZTLOAD to set a task as persistent.  Returns 1 if the flag is set other
"PKG",3,22,1,"PAH",1,1,39,0)
wise returns 0.
"PKG",3,22,1,"PAH",1,1,40,0)
PCLEAR^%ZTLOAD to clear the persistent flag for a task.
"PKG",3,22,1,"PAH",1,1,41,0)

"PKG",3,22,1,"PAH",1,1,42,0)
                 Checksum
"PKG",3,22,1,"PAH",1,1,43,0)
Routine         Old       New      2nd Line
"PKG",3,22,1,"PAH",1,1,44,0)
XQ1          11726256  11899807    **1,15,59,67**
"PKG",3,22,1,"PAH",1,1,45,0)
XQ82          3479466   3479466    **59,67**
"PKG",3,22,1,"PAH",1,1,46,0)
XUTMG19                 3890099    **20,67**
"PKG",3,22,1,"PAH",1,1,47,0)
XUTMK         6472549   6655042    **49,67**
"PKG",3,22,1,"PAH",1,1,48,0)
XUTMRJD       6554859   6838266    **49,67**
"PKG",3,22,1,"PAH",1,1,49,0)
XUTMTZ                  7805273    **67**
"PKG",3,22,1,"PAH",1,1,50,0)
ZTLOAD        1188558   1753065    **67**
"PKG",3,22,1,"PAH",1,1,51,0)
ZTLOAD2       3203201   3185920    **1,67**
"PKG",3,22,1,"PAH",1,1,52,0)
ZTLOAD3                 3918318    **67**
"PKG",3,22,1,"PAH",1,1,53,0)
ZTLOAD7       3885066   4104573    **67**
"PKG",3,22,1,"PAH",1,1,54,0)
ZTM           7821111   8229940    **24,36,64,67**
"PKG",3,22,1,"PAH",1,1,55,0)
ZTM0          5563711   5758864    **42,36,67**
"PKG",3,22,1,"PAH",1,1,56,0)
ZTMS          5336388   5366119    **2,18,24,36,67**
"PKG",3,22,1,"PAH",1,1,57,0)
ZTMS2         5283853   5301865    **2,18,23,36,67**
"PKG",3,22,1,"PAH",1,1,58,0)
ZTMS3         9572340  10241859    **1,18,36,49,64,67**
"PKG",3,22,1,"PAH",1,1,59,0)

"PKG",3,22,1,"PAH",1,1,60,0)
========================================================================= 
"PKG",3,22,1,"PAH",1,1,61,0)
Installation:
"PKG",3,22,1,"PAH",1,1,62,0)

"PKG",3,22,1,"PAH",1,1,63,0)
  1.  DSM sites - Some of these routines are usually mapped,
"PKG",3,22,1,"PAH",1,1,64,0)
      so you will need to disable mapping for the effected routines.
"PKG",3,22,1,"PAH",1,1,65,0)
      
"PKG",3,22,1,"PAH",1,1,66,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",3,22,1,"PAH",1,1,67,0)
      option will load the KIDS package onto your system.
"PKG",3,22,1,"PAH",1,1,68,0)
      
"PKG",3,22,1,"PAH",1,1,69,0)
  3.  The patch has now been loaded into a Transport global on your
"PKG",3,22,1,"PAH",1,1,70,0)
      system. You now need to use KIDS to install the Transport global.
"PKG",3,22,1,"PAH",1,1,71,0)
      On the KIDS menu, under the 'Installation' menu, use the following
"PKG",3,22,1,"PAH",1,1,72,0)
      options:
"PKG",3,22,1,"PAH",1,1,73,0)
      
"PKG",3,22,1,"PAH",1,1,74,0)
         Verify Checksum's in Transport Global
"PKG",3,22,1,"PAH",1,1,75,0)
         Print Transport Global
"PKG",3,22,1,"PAH",1,1,76,0)
         Compare Transport Global to Current System
"PKG",3,22,1,"PAH",1,1,77,0)
         Backup a Transport Global
"PKG",3,22,1,"PAH",1,1,78,0)
         
"PKG",3,22,1,"PAH",1,1,79,0)
 4.   Inhibit users from login into the system. (If you install when few
"PKG",3,22,1,"PAH",1,1,80,0)
      user are on the system and the possibility of some CLOBER errors is
"PKG",3,22,1,"PAH",1,1,81,0)
      acceptable then users can stay on the system.)
"PKG",3,22,1,"PAH",1,1,82,0)
      Also place TASKMAN in a wait state.
"PKG",3,22,1,"PAH",1,1,83,0)
      
"PKG",3,22,1,"PAH",1,1,84,0)
  5.  On the KIDS menu, under the 'Installation' menu, use the following
"PKG",3,22,1,"PAH",1,1,85,0)
      option:
"PKG",3,22,1,"PAH",1,1,86,0)
         Install Package(s)  'XU*8.0*67'
"PKG",3,22,1,"PAH",1,1,87,0)
                              =========
"PKG",3,22,1,"PAH",1,1,88,0)
         
"PKG",3,22,1,"PAH",1,1,89,0)
  7.  MSM Sites - Answer YES to the question 'Want to MOVE routines to
"PKG",3,22,1,"PAH",1,1,90,0)
      other CPUs?'. Enter the names of your Compute and Print server(s).
"PKG",3,22,1,"PAH",1,1,91,0)
      MSM Sites - With Taskman not working you need to move the routine to
"PKG",3,22,1,"PAH",1,1,92,0)
      other CPU's with the D ^XPDCPU
"PKG",3,22,1,"PAH",1,1,93,0)
      
"PKG",3,22,1,"PAH",1,1,94,0)
  8.  After installing this patch, 
"PKG",3,22,1,"PAH",1,1,95,0)
      DSM/MSM sites - you need to move several routines from 
"PKG",3,22,1,"PAH",1,1,96,0)
      your production account to each manager account:
"PKG",3,22,1,"PAH",1,1,97,0)
      OpenM Sites - you don't need to move anything, skip this step.
"PKG",3,22,1,"PAH",1,1,98,0)
      ZTLOAD
"PKG",3,22,1,"PAH",1,1,99,0)
      ZTLOAD3
"PKG",3,22,1,"PAH",1,1,100,0)
      ZTLOAD7
"PKG",3,22,1,"PAH",1,1,101,0)
      ZTM
"PKG",3,22,1,"PAH",1,1,102,0)
      ZTM0
"PKG",3,22,1,"PAH",1,1,103,0)
      ZTMS
"PKG",3,22,1,"PAH",1,1,104,0)
      ZTMS2
"PKG",3,22,1,"PAH",1,1,105,0)
      ZTMS3
"PKG",3,22,1,"PAH",1,1,106,0)

"PKG",3,22,1,"PAH",1,1,107,0)
      And in the manager account,  (OpenM sites remain in VAH)
"PKG",3,22,1,"PAH",1,1,108,0)
       
"PKG",3,22,1,"PAH",1,1,109,0)
      All sites:
"PKG",3,22,1,"PAH",1,1,110,0)
      DO RELOAD^ZTMGRSET
"PKG",3,22,1,"PAH",1,1,111,0)
      Select the System
"PKG",3,22,1,"PAH",1,1,112,0)
      Patch number to load: 67
"PKG",3,22,1,"PAH",1,1,113,0)
                            ==
"PKG",3,22,1,"PAH",1,1,114,0)
       
"PKG",3,22,1,"PAH",1,1,115,0)
  9.  DSM Sites, after patch has installed, rebuild your map set.
"PKG",3,22,1,"PAH",1,1,116,0)
 10.  Enable user's login.
"PKG",3,22,1,"PAH",1,1,117,0)
      Remove TASKMAN from the wait state.
"PKG",3,22,1,"PAH",1,1,118,0)

"PKG",3,22,1,"PAH",1,1,119,0)
=========================================================================
"PKG",3,22,1,"PAH",1,1,120,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
15
"RTN","XQ1")
0^12^B30078521
"RTN","XQ1",1,0)
XQ1 ; SEA/MJM - DRIVER FOR MENUMAN (PART 2) ;10/02/97  13:45
"RTN","XQ1",2,0)
 ;;8.0;KERNEL;**1,15,59,67**;Jul 10, 1995
"RTN","XQ1",3,0)
 S DIC=19,DIC(0)="AEQM" D ^DIC Q:Y<0  S (XQDIC,XQY)=+Y K DIC,XQUR,Y,^VA(200,DUZ,202.1) ;G ^XQ
"RTN","XQ1",4,0)
 D INIT^XQ12
"RTN","XQ1",5,0)
 G M^XQ
"RTN","XQ1",6,0)
 ;
"RTN","XQ1",7,0)
KILL K D,D0,D1,DA,DIC,DIE,DIR,DIS,DR,XQI,XQV,XQW,XQZ
"RTN","XQ1",8,0)
 D CLEAN^DILF
"RTN","XQ1",9,0)
 ;
"RTN","XQ1",10,0)
OUT ;Exit point for all option types
"RTN","XQ1",11,0)
 I $D(XQXFLG("ZEBRA")) L ^XWB("SESSION",XQXFLG("ZEBRA")) ;Clear by setting new lock
"RTN","XQ1",12,0)
 E  L  ;Clear the lock table
"RTN","XQ1",13,0)
 S U="^" I $D(ZTQUEUED) S XQF=$S('$D(^DIC(19,XQY,15)):0,'$L(^(15)):0,1:1) X:XQF ^(15) Q  ;Quit here if it's a Taskman job
"RTN","XQ1",14,0)
 I '$D(DT)!('$D(DTIME))!('$D(DUZ))!('$D(DUZ(0)))!('$D(DUZ("AG")))!('$D(DUZ("AUTO"))) D DVARS^XQ12
"RTN","XQ1",15,0)
 I $D(DUZ("AUTO")),DUZ("AUTO"),$D(XQY),$D(^DIC(19,+XQY,0))#2,$P(^(0),"^",11)["y" W !!,*7,"Press RETURN to continue..." R %:DTIME
"RTN","XQ1",16,0)
 I $D(^XUTL("XQ",$J,"RBX")) G RBX^XQ73
"RTN","XQ1",17,0)
 I $D(^XUTL("XQ",$J,"T")) S XQY=+^(^("T")),XQT="" S:$D(^DIC(19,+XQY,0)) XQT=$P(^(0),U,4) I '$D(XQUIT),("LOQX"'[XQT),$D(^DIC(19,XQY,15)),$L(^(15)) X ^(15) ;W "  ==> OUT^XQ1"
"RTN","XQ1",18,0)
 Q:'$D(^XUTL("XQ",$J,"T"))
"RTN","XQ1",19,0)
 I $D(^XUTL("XQ",$J,"T")) S XQTT=$S($D(XQUIT):^XUTL("XQ",$J,"T"),1:^XUTL("XQ",$J,"T")-1) K XQUIT
"RTN","XQ1",20,0)
 I XQTT'<1 S ^XUTL("XQ",$J,"T")=XQTT,XQY=^(XQTT),XQY0=$P(XQY,U,2,999),XQPSM=$P(XQY,U,1),XQY=+XQPSM,XQPSM=$P(XQPSM,XQY,2,99),XQABOLD=1
"RTN","XQ1",21,0)
 I XQTT=0 S XQY=-1
"RTN","XQ1",22,0)
 I $P(XQY0,U,4)="M" S XQAA=$P(XQY0,U,2) I $P(XQY0,U,17),$D(^DIC(19,+XQY,26)),$L(^(26)) X ^(26) ;W "  ==> OUT^XQ1"
"RTN","XQ1",23,0)
 K X,XQF,XQJS,XQOK,XQTT,XQZ,Y,Z
"RTN","XQ1",24,0)
 G M1^XQ
"RTN","XQ1",25,0)
 ;
"RTN","XQ1",26,0)
A ;ACTION type option entry point
"RTN","XQ1",27,0)
 X:$D(^DIC(19,+XQY,20)) ^(20) ;W "  ==> A^XQ1"
"RTN","XQ1",28,0)
 I $D(XQUIT) K XQUIT G OUT
"RTN","XQ1",29,0)
 I $P(XQY0,U,17),$D(^DIC(19,XQY,26)),$L(^(26)) X ^(26) ;W "  ==> A^XQ1"
"RTN","XQ1",30,0)
 G OUT
"RTN","XQ1",31,0)
 ;
"RTN","XQ1",32,0)
C ;ScreenMan type options
"RTN","XQ1",33,0)
 D DIC G:DA=-1 KILL S XQZ="DR,DDSFILE,DDSFILE(1)",XQW=39 D SET
"RTN","XQ1",34,0)
 S DDSPAGE=$P($G(^DIC(19,+XQY,43)),U) K:DDSPAGE="" DDSPAGE
"RTN","XQ1",35,0)
 S DDSPARM=$P($G(^DIC(19,+XQY,43)),U,2) K:DDSPARM="" DDSPARM
"RTN","XQ1",36,0)
 I DDSFILE["(",DDSFILE'[U S DDSFILE=U_DDSFILE
"RTN","XQ1",37,0)
 I $D(DDSFILE(1)),DDSFILE(1)["(",DDSFILE(1)'[U S DDSFILE(1)=U_DDSFILE(1)
"RTN","XQ1",38,0)
 D ^DDS K DDSFILE G C
"RTN","XQ1",39,0)
 ;
"RTN","XQ1",40,0)
P ;PRINT type option
"RTN","XQ1",41,0)
 S XQZ="DIC,PG,L,FLDS,BY,FR,TO,DHD,DCOPIES,DIS(0),IOP,DHIT,DIOBEG,DIOEND",XQW=59 D SET
"RTN","XQ1",42,0)
 I $D(DIS(0))#2 F XQI=1:1:3 Q:'$D(^DIC(19,+XQY,69+(XQI/10)))  Q:^(69+(XQI/10))=""  S DIS(XQI)=^(69+(XQI/10))
"RTN","XQ1",43,0)
 S:$D(XQIOP) IOP=XQIOP
"RTN","XQ1",44,0)
 S XQI=$G(^DIC(19,XQY,79)) S:XQI>0 DIASKHD="" S:$P(XQI,U,2) DISUPNO=1 S:$P(XQI,U,3) DIPCRIT=1
"RTN","XQ1",45,0)
 D D1,EN1^DIP K IOP,DIOBEG,DIS,DP G OUT
"RTN","XQ1",46,0)
 ;
"RTN","XQ1",47,0)
I ;INQUIRE type option
"RTN","XQ1",48,0)
I1 D DIC G KILL:DA=-1 S DI=DIC,XQZ="DIC,DR,DIQ(0)",XQW=79 D SET,D1 S:$D(DIC)[0 DIC=DI
"RTN","XQ1",49,0)
 I $D(^DIC(19,+XQY,63)),$L(^(63)) S FLDS=^(63)
"RTN","XQ1",50,0)
 E  S FLDS="[CAPTIONED]"
"RTN","XQ1",51,0)
 I $G(^DIC(19,+XQY,83))["Y" S IOP="HOME"
"RTN","XQ1",52,0)
I2 ;
"RTN","XQ1",53,0)
 W ! S XQZ="DHD",XQW=66 D SET K ^UTILITY($J),^(U,$J) S ^($J,1,DA)="",@("L=+$P("_DI_"0),U,2)"),DPP(1)=L_"^^^@",L=0,C=",",Q="""",DPP=1,DPP(1,"IX")="^UTILITY(U,$J,"_DI_"^2" D N^DIP1 S Y=XQY G I1
"RTN","XQ1",54,0)
 ;
"RTN","XQ1",55,0)
E ;EDIT type option entry point
"RTN","XQ1",56,0)
E1 D DIC G KILL:DA=-1 K DIE,DIC S XQZ="DIE,DR",XQW=49 D SET S XQZ="DIE(""W"")",XQW=53 D SET
"RTN","XQ1",57,0)
 I $D(^DIC(19,XQY,53)),$L(^(53)) S %=^(53),DIE("NO^")=$S(%="N":"",1:%)
"RTN","XQ1",58,0)
 S:DIE["(" DIE=U_DIE D ^DIE S Y=XQY G E1
"RTN","XQ1",59,0)
 ;
"RTN","XQ1",60,0)
DIC ;Get FileMan parameters from Option File and do look up
"RTN","XQ1",61,0)
 ;S XQSV=XQY
"RTN","XQ1",62,0)
 W ! K DIC S XQZ="DIC,DIC(0),DIC(""A""),DIC(""B""),DIC(""S""),DIC(""W""),D",XQW=29 D SET,D1
"RTN","XQ1",63,0)
 ;D:'$D(D) ^DIC
"RTN","XQ1",64,0)
 I '$D(D) D ^DIC
"RTN","XQ1",65,0)
 I $D(D) S:D="" D="B" D IX^DIC
"RTN","XQ1",66,0)
 S DA=+Y,Y=XQY
"RTN","XQ1",67,0)
 Q
"RTN","XQ1",68,0)
 ;
"RTN","XQ1",69,0)
D1 S:DIC["(" DIC=U_DIC Q
"RTN","XQ1",70,0)
 ;
"RTN","XQ1",71,0)
SET F XQI=1:1 S XQV=$P(XQZ,",",XQI) Q:XQV=""  K @XQV I $D(^DIC(19,+XQY,XQW+XQI)),^(XQW+XQI)]"" S @XQV=^(XQW+XQI)
"RTN","XQ1",72,0)
 I $D(DIC("A")),DIC("A")]"" S DIC("A")=DIC("A")_" "
"RTN","XQ1",73,0)
 K XQI,J
"RTN","XQ1",74,0)
 Q
"RTN","XQ1",75,0)
 ;
"RTN","XQ1",76,0)
R ;RUN ROUTINE type option entry point
"RTN","XQ1",77,0)
 G:'$D(^DIC(19,XQY,25)) OUT:$D(ZTQUEUED),M1^XQ S XQZ=^(25) G:'$L(XQZ) M1^XQ S:XQZ'[U XQZ=U_XQZ I XQZ["[" D DO^%XUCI G OUT
"RTN","XQ1",78,0)
 D @XQZ G OUT
"RTN","XQ1",79,0)
 ;
"RTN","XQ1",80,0)
W ;Window type option entry point
"RTN","XQ1",81,0)
 S XQOK=1
"RTN","XQ1",82,0)
 I $D(^DIC(19,XQY,25)),$L(^(25)) D  G OUT ;Routine type
"RTN","XQ1",83,0)
 .S XQZ=^DIC(19,XQY,25)
"RTN","XQ1",84,0)
 .S:XQZ'[U XQZ=U_XQZ
"RTN","XQ1",85,0)
 .I XQZ["[" D DO^%XUCI Q
"RTN","XQ1",86,0)
 .D @XQZ
"RTN","XQ1",87,0)
 .Q
"RTN","XQ1",88,0)
 ;
"RTN","XQ1",89,0)
 I $D(^DIC(19,XQY,24)),$L(^(24)) D  G:XQOK OUT ;Pointer type
"RTN","XQ1",90,0)
 .S XQZ=^DIC(19,XQY,24)
"RTN","XQ1",91,0)
 .S XQZ=$P($G(^XTV(8995,XQZ,0)),U) I XQZ="" S XQOK=0 Q
"RTN","XQ1",92,0)
 .D PREP^XG
"RTN","XQ1",93,0)
 .S XQWIN=$$NEXTNM^XGCLOAD("XQWIN")
"RTN","XQ1",94,0)
 .;D GET^XGCLOAD(XQZ,XQWIN,"^TMP($J)")
"RTN","XQ1",95,0)
 .D GET^XGCLOAD(XQZ,$NA(^TMP($J,XQWIN)))
"RTN","XQ1",96,0)
 .D M^XG(XQWIN,$NA(^TMP($J,XQWIN)))
"RTN","XQ1",97,0)
 .D ESTA^XG() ;Send it off to window land
"RTN","XQ1",98,0)
 .; 
"RTN","XQ1",99,0)
 .D K^XG(XQWIN) ;Return here after the ESTOP
"RTN","XQ1",100,0)
 .;I $D(^%ZOSF("OS")),^%ZOSF("OS")["MSM" ZSTOP
"RTN","XQ1",101,0)
 .Q
"RTN","XQ1",102,0)
 ;
"RTN","XQ1",103,0)
 G M1^XQ ;Window failed
"RTN","XQ1",104,0)
 ;
"RTN","XQ1",105,0)
Z ;Window suite option       
"RTN","XQ1",106,0)
 G EN^XQSUITE
"RTN","XQ1",107,0)
 ;
"RTN","XQ1",108,0)
S ;Server-type option pseudo entry-point can't be invoked from Meun System
"RTN","XQ1",109,0)
 G OUT
"RTN","XQ1",110,0)
 ;
"RTN","XQ1",111,0)
B ;Client/Server option can't be run from menu system
"RTN","XQ1",112,0)
 G OUT
"RTN","XQ1",113,0)
 ;
"RTN","XQ1",114,0)
L ;OE/RR Limited option
"RTN","XQ1",115,0)
O ;OE/RR Protocol (orderables) type option entry point
"RTN","XQ1",116,0)
X ;OE/RR Extended Action type option (Subset of Protocol type)
"RTN","XQ1",117,0)
Q ;OE/RR Protocol Menu type option entry point
"RTN","XQ1",118,0)
 S XQOR=+XQY,XQOR(1)=XQT D XQ^XQOR K XQOR G OUT
"RTN","XQ1",119,0)
 ;
"RTN","XQ1",120,0)
ZTSK ;Task Manager entry point
"RTN","XQ1",121,0)
 G:$G(XQSCH)'>0 ZTSK2 S U="^",XQ=$G(^DIC(19.2,XQSCH,0)),XQY=+XQ Q:XQY'>0
"RTN","XQ1",122,0)
 S X1=$P(XQ,U,2),X2=$P(XQ,U,6)
"RTN","XQ1",123,0)
REQ S DA=XQSCH,DIE="^DIC(19.2,",DR=$S((X2="")&($P(XQ,U,9)=""):".01///@",X2="":"2///@",1:"2////"_$$SCH^XLFDT(X2,+X1,1))
"RTN","XQ1",124,0)
 L +^%ZTSK(ZTSK,0) D ^DIE L -^%ZTSK(ZTSK,0)
"RTN","XQ1",125,0)
 I $P(XQ,U,7)["P" S %=$$PSET^%ZTLOAD(ZTQUEUED) ;Set as persistent
"RTN","XQ1",126,0)
 K DA,DIE,DR,X1,X2,XQ,ZTQPARAM
"RTN","XQ1",127,0)
 I $D(^DIC(19.2,XQSCH,3)),$L(^(3)) S ZTQPARAM=^(3)
"RTN","XQ1",128,0)
 I $D(^DIC(19.2,XQSCH,2)) D  ;Build other symbols
"RTN","XQ1",129,0)
 . S X2=XQSCH N XQSCH,XQY
"RTN","XQ1",130,0)
 . F X1=0:0 S X1=$O(^DIC(19.2,X2,2,X1)) Q:X1'>0  S X=^(X1,0),@($P(X,U)_"="_$P(X,U,2))
"RTN","XQ1",131,0)
 . Q
"RTN","XQ1",132,0)
ZTSK2 S ZTREQ="@" Q:'$D(XQY)  D UI^XQ12
"RTN","XQ1",133,0)
 Q:'$D(^DIC(19,XQY,0))  S XQY0=^(0),XQT=$P(XQY0,U,4) Q:XQT'="A"&(XQT'="P")&(XQT'="R")
"RTN","XQ1",134,0)
 S X=$P(XQY0,U,8) I X>0,X<11 X ^%ZOSF("PRIORITY")
"RTN","XQ1",135,0)
 I $P(XQY0,U,3)]""!($D(XQUIT)) S XQT="KILL"
"RTN","XQ1",136,0)
 ;
"RTN","XQ1",137,0)
RUN S:XQT="P"&$L(IO) XQIOP=ION_";"_IOST_";"_IOM_";"_IOSL G @XQT
"RTN","XQ1",138,0)
 Q
"RTN","XQ82")
0^1^B4749918
"RTN","XQ82",1,0)
XQ82 ;SF-ISC.SEA/JLI - CLEAN OLD $JOB DATA OUT OF XUTL("XQ", & OTHERS ;9/18/97  08:34
"RTN","XQ82",2,0)
 ;;8.0;KERNEL;**59,67**;Jul 10, 1995
"RTN","XQ82",3,0)
 S DDATE=$$HTFM^XLFDT($H-7) ;Get seven days ago in FM format
"RTN","XQ82",4,0)
 ;For any entry in user stack w/ date older than 7 days or w/o zero node
"RTN","XQ82",5,0)
 ;kill XUTL("XQ",n) and corresponding UTILITY(n) and TMP(n) nodes.
"RTN","XQ82",6,0)
 F J=0:0 S J=$O(^XUTL("XQ",J)) Q:J'>0  I $S('$D(^(J,0)):1,1:^(0)<DDATE) D
"RTN","XQ82",7,0)
 . I $D(^XUTL("XQ",J,"ZTSKNUM")) L +^%ZTSCH("TASK",^XUTL("XQ",J,"ZTSKNUM")):0 Q:'$T  L -^%ZTSCH("TASK",^XUTL("XQ",J,"ZTSKNUM"))
"RTN","XQ82",8,0)
 . K ^XUTL("XQ",J),^UTILITY(J),^TMP(J)
"RTN","XQ82",9,0)
 . Q
"RTN","XQ82",10,0)
 ;Loop thru UTILITY and look for nodes w/o corresponding XUTL("XQ",n)
"RTN","XQ82",11,0)
L1 S A="" F  S A=$O(^UTILITY(A)) Q:A=""  D
"RTN","XQ82",12,0)
 . I A>0,'$D(^XUTL("XQ",A)) K ^UTILITY(A) Q  ;UTILITY($J) w/o XUTL("XQ",$J) node.
"RTN","XQ82",13,0)
 . Q:A>0  Q:"^ROU^GLO^LRLTR^"[("^"_A_"^")
"RTN","XQ82",14,0)
 . F J=0:0 S J=$O(^UTILITY(A,J)) Q:J'>0  I '$D(^XUTL("XQ",J)) K ^UTILITY(A,J) ;Remove UTILITY(namespace,$J) w/o XUTL("XQ",$J)
"RTN","XQ82",15,0)
 . Q
"RTN","XQ82",16,0)
 ;Loop thru TMP and look for nodes w/o corresponding XUTL("XQ",n)
"RTN","XQ82",17,0)
L2 S A="" F  S A=$O(^TMP(A)) Q:A=""  D
"RTN","XQ82",18,0)
 . I A>0,'$D(^XUTL("XQ",A)) K ^TMP(A) Q  ;TMP($J) w/o XUTL("XQ",$J) node.
"RTN","XQ82",19,0)
 . Q:A>0  ;Q:"^ROU^GLO^LRLTR^"[("^"_A_"^")
"RTN","XQ82",20,0)
 . F J=0:0 S J=$O(^TMP(A,J)) Q:J'>0  I '$D(^XUTL("XQ",J)) K ^TMP(A,J) ;Remove TMP(namespace,$J) w/o XUTL("XQ",$J)
"RTN","XQ82",21,0)
 . Q
"RTN","XQ82",22,0)
L3 ;Now to cleanup the XTMP global w/ XTMP(namespace,0)<DT
"RTN","XQ82",23,0)
 S A="" F  S A=$O(^XTMP(A)) Q:A=""  S J=$G(^XTMP(A,0)) I J<DT K ^XTMP(A)
"RTN","XQ82",24,0)
L4 ;Now go thru and clean old ^XUSEC(0,"CUR",duz,sign-on) nodes.
"RTN","XQ82",25,0)
 F I=0:0 S I=$O(^XUSEC(0,"CUR",I)) Q:I'>0  F J=0:0 S J=$O(^XUSEC(0,"CUR",I,J)) Q:(J'>0)!(J'<DDATE)  K ^XUSEC(0,"CUR",I,J)
"RTN","XQ82",26,0)
L5 ;Now go through and clean old ^XUSEC(0,"AS*" nodes.
"RTN","XQ82",27,0)
 D L51("AS1"),L51("AS2")
"RTN","XQ82",28,0)
EXIT ;
"RTN","XQ82",29,0)
 K X,%DT,Y,J,K,DDATE
"RTN","XQ82",30,0)
 Q
"RTN","XQ82",31,0)
L51(NDX) ;
"RTN","XQ82",32,0)
 S I="" F  S I=$O(^XUSEC(0,NDX,I)) Q:I=""  F J=0:0 S J=$O(^XUSEC(0,NDX,I,J)) Q:(J'>0)!(J'<DDATE)  K ^XUSEC(0,NDX,I,J)
"RTN","XQ82",33,0)
 Q
"RTN","XUTMG19")
0^11^B13649724
"RTN","XUTMG19",1,0)
XUTMG19 ;SF/RWF - TaskMan Code For File 19.2 ;10/02/97  16:29
"RTN","XUTMG19",2,0)
 ;;8.0;KERNEL;**20,67**;Jul 10, 1995
"RTN","XUTMG19",3,0)
 ;
"RTN","XUTMG19",4,0)
 Q
"RTN","XUTMG19",5,0)
FIND ;subroutine--find scheduled task that will run this option
"RTN","XUTMG19",6,0)
 ;Return XUTASK = task number, XUDTH = H3 time
"RTN","XUTMG19",7,0)
 N %,OPT,X,X1,Y X ^%ZOSF("UCI") S XUTASK=0,Y=$P(Y,","),OPT=$$GET(19,$$GET(19.2,DA,.01),.01)
"RTN","XUTMG19",8,0)
 S X=+$S($D(ZTMQDT):ZTMQDT,$D(^DIC(19.2,DA,0)):$$GET(19.2,DA,2),1:0) Q:'X
"RTN","XUTMG19",9,0)
 S XUDTH=$$H3^%ZTM($$FMTH^XLFDT(X))
"RTN","XUTMG19",10,0)
 S %=$$GET(19.2,DA,12) I %>0 D CHECK Q:XUTASK
"RTN","XUTMG19",11,0)
 F  S %=$O(^%ZTSCH(XUDTH,%)) Q:%'>0  I $P($G(^%ZTSK(%,0)),"^",1,2)="ZTSK^XQ1" D CHECK Q:XUTASK
"RTN","XUTMG19",12,0)
 Q
"RTN","XUTMG19",13,0)
CHECK ;Check a task
"RTN","XUTMG19",14,0)
 S X1=$G(^%ZTSK(%,0)) Q:$P(X1,"^",1,2)'="ZTSK^XQ1"  Q:$P(X1,"^",11)'=Y
"RTN","XUTMG19",15,0)
 I $G(^%ZTSK(%,.03))'[OPT Q  ;Check for name in desc.
"RTN","XUTMG19",16,0)
 S:$G(^%ZTSK(%,.3,"XQSCH"))=DA XUTASK=%
"RTN","XUTMG19",17,0)
 Q
"RTN","XUTMG19",18,0)
 ;
"RTN","XUTMG19",19,0)
GET(FN,IEN,FE) ;
"RTN","XUTMG19",20,0)
 N A,B,C S A=$G(^DD(FN,FE,0)),A=$P(A,"^",4)
"RTN","XUTMG19",21,0)
 S B=$P(A,";"),C=$P(A,";",2)
"RTN","XUTMG19",22,0)
 Q $P($G(^DIC(FN,IEN,B)),"^",C)
"RTN","XUTMG19",23,0)
 ;--------------------------------------------------------------------
"RTN","XUTMG19",24,0)
IT2 ;input transform for time (#2)
"RTN","XUTMG19",25,0)
 N Y,% S %DT="ETRXF" D ^%DT S X=Y,%=$$NOW^XLFDT() I %+.0002>X K X
"RTN","XUTMG19",26,0)
 I '$D(X),'$D(DDS) D CT^XUTMG19
"RTN","XUTMG19",27,0)
 Q
"RTN","XUTMG19",28,0)
 ;
"RTN","XUTMG19",29,0)
CT ;IT2--show current time %=NOW
"RTN","XUTMG19",30,0)
 W !,?5,"The current time is ",$E(%,9,10),":",$E(%,11,12)
"RTN","XUTMG19",31,0)
 Q
"RTN","XUTMG19",32,0)
 ;
"RTN","XUTMG19",33,0)
S2 ;set logic for AZTM cross-reference on time (#2)
"RTN","XUTMG19",34,0)
 N DV,ZTSK,ZTIO,ZTDTH,ZTDESC,ZTRTN,ZTCPU,X1
"RTN","XUTMG19",35,0)
 S ZTDTH=X I 'ZTDTH G EXIT
"RTN","XUTMG19",36,0)
 S ZTCPU=$$GET(19.2,DA,5) I ZTCPU']"" K ZTCPU
"RTN","XUTMG19",37,0)
 S ZTRTN="ZTSK^XQ1"
"RTN","XUTMG19",38,0)
 S ZTSAVE("XQSCH")=DA,X1=+^DIC(19.2,DA,0),ZTSAVE("XQY")=X1
"RTN","XUTMG19",39,0)
 S ZTDESC=$P(^DIC(19,X1,0),U)_" - "_$P(^DIC(19,X1,0),U,2)
"RTN","XUTMG19",40,0)
 S ZTIO=$$GET(19.2,DA,3)
"RTN","XUTMG19",41,0)
 D ^%ZTLOAD S ^DIC(19.2,DA,1)=ZTSK
"RTN","XUTMG19",42,0)
EXIT Q
"RTN","XUTMG19",43,0)
 ;
"RTN","XUTMG19",44,0)
K2 ;kill logic for AZTM cross-reference on time (#2)
"RTN","XUTMG19",45,0)
 N XUTASK,XUDTH,XUTMT S ZTMQDT=X D FIND K ZTMQDT I XUTASK'>0 Q
"RTN","XUTMG19",46,0)
 Q:XUTASK=$G(ZTQUEUED)
"RTN","XUTMG19",47,0)
 S XUTMT=XUTASK,^DIC(19.2,DA,1)="" D ^XUTMTD
"RTN","XUTMG19",48,0)
 Q
"RTN","XUTMG19",49,0)
 ;
"RTN","XUTMG19",50,0)
 ;--------------------------------------------------------------------
"RTN","XUTMG19",51,0)
 ;
"RTN","XUTMG19",52,0)
IT3 ;input transform for device (#3)
"RTN","XUTMG19",53,0)
 N DIC,Y,XUTMG19
"RTN","XUTMG19",54,0)
 I X[""""!($A(X)=45)!($L(X)>70) K X Q
"RTN","XUTMG19",55,0)
 S DIC="^%ZIS(1,",DIC(0)="E",XUTMG19=X,X=$P(X,";") D ^DIC
"RTN","XUTMG19",56,0)
 I Y=-1 K X Q
"RTN","XUTMG19",57,0)
 S $P(XUTMG19,";")=$P(Y,U,2),IOP=XUTMG19,%ZIS="NQR" D ^%ZIS
"RTN","XUTMG19",58,0)
 I POP K X
"RTN","XUTMG19",59,0)
 E  S X=ION_";"_$S($D(IO("DOC"))#2:IO("DOC"),1:IOST_";"_IOM_";"_IOSL)
"RTN","XUTMG19",60,0)
 D RESETVAR^%ZIS
"RTN","XUTMG19",61,0)
 Q
"RTN","XUTMG19",62,0)
 ;
"RTN","XUTMG19",63,0)
S3 ;set logic for AZTIO cross-reference of device (#3)
"RTN","XUTMG19",64,0)
 N XUTASK,XUDTH D FIND I XUTASK'>0 Q
"RTN","XUTMG19",65,0)
 S $P(^%ZTSK(XUTASK,.2),U)=X
"RTN","XUTMG19",66,0)
 Q
"RTN","XUTMG19",67,0)
 ;
"RTN","XUTMG19",68,0)
K3 ;kill logic for AZTIO cross-reference of device (#3)
"RTN","XUTMG19",69,0)
 N XUTASK,XUDTH D FIND I XUTASK'>0 Q
"RTN","XUTMG19",70,0)
 S $P(^%ZTSK(XUTASK,.2),U)=""
"RTN","XUTMG19",71,0)
 Q
"RTN","XUTMG19",72,0)
 ;
"RTN","XUTMG19",73,0)
 ;--------------------------------------------------------------------
"RTN","XUTMG19",74,0)
 ;
"RTN","XUTMG19",75,0)
IT6 ;input transform for re-sch freq
"RTN","XUTMG19",76,0)
 I $L(X)>15!($L(X)<2) K X Q
"RTN","XUTMG19",77,0)
 I X?1.3N1"H" Q
"RTN","XUTMG19",78,0)
 I X?1.4N1"S" Q
"RTN","XUTMG19",79,0)
 I X?1.3N1"D" Q
"RTN","XUTMG19",80,0)
 I X?1.2N1"M" Q
"RTN","XUTMG19",81,0)
 I X?1.2N1"M(".E1")" Q
"RTN","XUTMG19",82,0)
 I "MTWRFSUDE"[$E(X),"@,"[$E(X,2) Q
"RTN","XUTMG19",83,0)
 K X
"RTN","XUTMG19",84,0)
 Q
"RTN","XUTMG19",85,0)
 ;
"RTN","XUTMG19",86,0)
 ;-------------------------------------------------------------------
"RTN","XUTMG19",87,0)
 ;
"RTN","XUTMG19",88,0)
IT5 ;input transform for volume (#5)
"RTN","XUTMG19",89,0)
 N X1,X2 S X1=$P(X,":"),X2=$P(X,":",2)
"RTN","XUTMG19",90,0)
 I X[""""!($A(X)=45) K X Q
"RTN","XUTMG19",91,0)
 I $L(X)>21!($L(X)<2) K X Q
"RTN","XUTMG19",92,0)
 I '((X?1.8UN)!(X?1.8UN.1":".12UN)) K X Q
"RTN","XUTMG19",93,0)
 I X'[":",'$D(^%ZIS(14.5,"B",X)) K X Q
"RTN","XUTMG19",94,0)
 I X[":",'$D(^%ZIS(14.7,"B",X)) K X Q
"RTN","XUTMG19",95,0)
 Q
"RTN","XUTMG19",96,0)
 ;
"RTN","XUTMG19",97,0)
S5 ;set logic for AZTVOL cross-reference of volume
"RTN","XUTMG19",98,0)
 N XUTASK,XUDTH D FIND I XUTASK'>0 Q
"RTN","XUTMG19",99,0)
 S $P(^%ZTSK(XUTASK,0),U,14)=X
"RTN","XUTMG19",100,0)
 Q
"RTN","XUTMG19",101,0)
 ;
"RTN","XUTMG19",102,0)
K5 ;kill logic for AZTVOL cross-reference on volume
"RTN","XUTMG19",103,0)
 N XUTASK,XUDTH D FIND I XUTASK'>0 Q
"RTN","XUTMG19",104,0)
 S $P(^%ZTSK(XUTASK,0),U,14)=""
"RTN","XUTMG19",105,0)
 Q
"RTN","XUTMG19",106,0)
 ;
"RTN","XUTMG19",107,0)
 ;--------------------------------------------------------------------
"RTN","XUTMG19",108,0)
 ;
"RTN","XUTMG19",109,0)
IT9 ;input transform for special queueing (#9)
"RTN","XUTMG19",110,0)
 N Y S Y=$P(^DIC(19,+^DIC(19.2,DA,0),0),U,4)
"RTN","XUTMG19",111,0)
 I Y="A"!(Y="R") Q
"RTN","XUTMG19",112,0)
 K X W $C(7),"  ONLY FOR 'ROUTINE' OR 'ACTION' TYPES OF OPTIONS"
"RTN","XUTMG19",113,0)
 Q
"RTN","XUTMG19",114,0)
 ;
"RTN","XUTMG19",115,0)
S9 ;set logic for ASTARTUP cross-reference on special queueing
"RTN","XUTMG19",116,0)
 Q:X'["S"  ;Only for startup type
"RTN","XUTMG19",117,0)
 N Y,Y1,XUCPU,XIO S XUCPU=$$GET(19.2,DA,5),Y1=$$GET(19.2,DA,.01)
"RTN","XUTMG19",118,0)
 X ^%ZOSF("UCI") I XUCPU]"" S $P(Y,",",2)=XUCPU
"RTN","XUTMG19",119,0)
 S ^%ZTSCH("STARTUP",Y,DA_"Q"_Y1)=$H_U_$$GET(19.2,DA,3)_U
"RTN","XUTMG19",120,0)
 Q
"RTN","XUTMG19",121,0)
 ;
"RTN","XUTMG19",122,0)
K9 ;kill logic for ASTARTUP cross-reference on special queueing
"RTN","XUTMG19",123,0)
 N Y,Y1,XUCPU S XUCPU=$$GET(19.2,DA,5),Y1=$$GET(19.2,DA,.01)
"RTN","XUTMG19",124,0)
 X ^%ZOSF("UCI") I XUCPU]"" S $P(Y,",",2)=XUCPU
"RTN","XUTMG19",125,0)
 K ^%ZTSCH("STARTUP",Y,Y1),^%ZTSCH("STARTUP",Y,DA_"Q"_Y1)
"RTN","XUTMG19",126,0)
 Q
"RTN","XUTMG19",127,0)
 ;
"RTN","XUTMK")
0^2^B19043637
"RTN","XUTMK",1,0)
XUTMK ;SEA/RDS - Taskman: Option, ZTMCLEAN/ZTMQCLEAN ;08/28/97  10:17
"RTN","XUTMK",2,0)
 ;;8.0;KERNEL;**49,67**;Jul 10, 1995
"RTN","XUTMK",3,0)
 ;
"RTN","XUTMK",4,0)
SETUP ;Setup Variables And Synchronize ^%ZTSK With ^%ZTSCH
"RTN","XUTMK",5,0)
 S ZTDTH=0
"RTN","XUTMK",6,0)
 F  S ZTDTH=$O(^%ZTSCH(ZTDTH)) Q:'ZTDTH  F ZTS=0:0 S ZTS=$O(^%ZTSCH(ZTDTH,ZTS)) Q:'ZTS  D
"RTN","XUTMK",7,0)
 . L +^%ZTSK(ZTS):2 Q:'$T  K:$D(^%ZTSK(ZTS,0))[0 ^%ZTSK(ZTS),^%ZTSCH(ZTDTH,ZTS)
"RTN","XUTMK",8,0)
 . S:$D(^%ZTSK(ZTS,0))#2 $P(^(0),U,6)=$$H0^%ZTM(ZTDTH)
"RTN","XUTMK",9,0)
 . L -^%ZTSK(ZTS) Q
"RTN","XUTMK",10,0)
 I $D(ZTKEEP)#2 G SX
"RTN","XUTMK",11,0)
 S ZTKEEP="",ZTV=^%ZOSF("VOL"),ZTI=$O(^%ZIS(14.5,"B",ZTV,""))
"RTN","XUTMK",12,0)
 I ZTI]"",$D(^%ZIS(14.5,ZTI,0))#2 S ZTKEEP=$P(^(0),U,9)
"RTN","XUTMK",13,0)
SX S:ZTKEEP="" ZTKEEP=7 S ZTKEEP=$H-ZTKEEP,ZTCNT=0,ZTMAX=100,ZTS=.9
"RTN","XUTMK",14,0)
 ;
"RTN","XUTMK",15,0)
CLEAN ;Delete Obsolete Entries
"RTN","XUTMK",16,0)
 I '(ZTCNT#20),$$S^%ZTLOAD S ZTSTOP=1 Q
"RTN","XUTMK",17,0)
 S ZTS=$O(^%ZTSK(ZTS)) I 'ZTS G FINAL
"RTN","XUTMK",18,0)
 S ZTMAX=ZTS,ZTCNT=ZTCNT+1
"RTN","XUTMK",19,0)
 L +^%ZTSK(ZTS):2 I '$T G CLEAN
"RTN","XUTMK",20,0)
 I $D(^%ZTSK(ZTS,0))[0 K ^%ZTSK(ZTS) W:'$D(ZTQUEUED) "." G NEXT
"RTN","XUTMK",21,0)
 ;
"RTN","XUTMK",22,0)
1 ;keep active tasks
"RTN","XUTMK",23,0)
 I $D(^%ZTSCH("TASK",ZTS)) G NEXT
"RTN","XUTMK",24,0)
 S ZTREC=^%ZTSK(ZTS,0),ZTDTH=$P(ZTREC,U,6) I ZTDTH="" G 2
"RTN","XUTMK",25,0)
 S:ZTDTH'["," ZTDTH=$$H0^%ZTM(ZTDTH) S ZTDTH3=$$H3^%ZTM(ZTDTH)
"RTN","XUTMK",26,0)
 I $D(^%ZTSCH(ZTDTH3,ZTS)) G NEXT
"RTN","XUTMK",27,0)
 I $D(^%ZTSCH("JOB",ZTDTH3,ZTS)) G NEXT
"RTN","XUTMK",28,0)
 S ZTCNTPU=$P(ZTREC,U,14),ZTIO=$P($G(^%ZTSK(ZTS,.2)),U,2)
"RTN","XUTMK",29,0)
 I ZTCNTPU]"",$D(^%ZTSCH("LINK",ZTCNTPU,ZTDTH3,ZTS)) G NEXT
"RTN","XUTMK",30,0)
 I ZTIO]"",$D(^%ZTSCH("IO",ZTIO,ZTDTH3,ZTS)) G NEXT
"RTN","XUTMK",31,0)
 ;
"RTN","XUTMK",32,0)
2 ;keep young inactive tasks
"RTN","XUTMK",33,0)
 S Z1=$G(^%ZTSK(ZTS,.1))
"RTN","XUTMK",34,0)
 I Z1]"",$P(Z1,U,8),$H'>$P(Z1,U,8) G NEXT ;Remember Until
"RTN","XUTMK",35,0)
 S ZTF=$S($P(Z1,U)="":0,"135AG"[$P(Z1,U):0,1:$P(Z1,U,2)'<ZTKEEP) ;Last status update
"RTN","XUTMK",36,0)
 S ZTF=$S(ZTF:ZTF,ZTDTH="":0,1:ZTDTH'<+ZTKEEP) ;Run time
"RTN","XUTMK",37,0)
 S ZTF=$S(ZTF:ZTF,$P(ZTREC,U,5)="":0,1:$P(ZTREC,U,5)'<+ZTKEEP) ;creation date
"RTN","XUTMK",38,0)
 I ZTF G NEXT
"RTN","XUTMK",39,0)
 ;
"RTN","XUTMK",40,0)
3 ;delete old inactive tasks
"RTN","XUTMK",41,0)
 K ^%ZTSK(ZTS) W:'$D(ZTQUEUED) "."
"RTN","XUTMK",42,0)
NEXT L -^%ZTSK(ZTS) G CLEAN
"RTN","XUTMK",43,0)
 ;
"RTN","XUTMK",44,0)
FINAL ;Final Steps.
"RTN","XUTMK",45,0)
 L +^%ZTSK(-1) ;lock top
"RTN","XUTMK",46,0)
 S $P(^%ZTSK(0),"^",3,4)=ZTMAX_"^"_ZTCNT
"RTN","XUTMK",47,0)
 I ^%ZTSK(-1)>9000000 S ^%ZTSK(-1)=100
"RTN","XUTMK",48,0)
 L -^%ZTSK(-1)
"RTN","XUTMK",49,0)
 D CLIST,TASK
"RTN","XUTMK",50,0)
 ;Call TM error purge
"RTN","XUTMK",51,0)
 S %=$$PURGE^XUTMKE(0,ZTKEEP,"")
"RTN","XUTMK",52,0)
 K ZT,ZTDTH,ZTF,ZTI,ZTKEEP,ZTS,ZTV
"RTN","XUTMK",53,0)
 Q
"RTN","XUTMK",54,0)
 ;
"RTN","XUTMK",55,0)
CLIST ;Clean up the C list
"RTN","XUTMK",56,0)
 S ZT1=""
"RTN","XUTMK",57,0)
 F  S ZT1=$O(^%ZTSCH("C",ZT1)),ZT2="" Q:ZT1=""  F  S ZT2=$O(^%ZTSCH("C",ZT1,ZT2)),ZT3="" Q:ZT2=""  D
"RTN","XUTMK",58,0)
 . F  S ZT3=$O(^%ZTSCH("C",ZT1,ZT2,ZT3)) Q:ZT3=""  I $D(^%ZTSK(ZT3,0))[0 K ^%ZTSCH("C",ZT1,ZT2,ZT3)
"RTN","XUTMK",59,0)
 . Q
"RTN","XUTMK",60,0)
 Q
"RTN","XUTMK",61,0)
TASK ;Clean the TASK nodes.
"RTN","XUTMK",62,0)
 N ZT1,ZT2
"RTN","XUTMK",63,0)
 F ZT1=0:0 S ZT1=$O(^%ZTSCH("TASK",ZT1)) Q:ZT1'>0  D
"RTN","XUTMK",64,0)
 . L +^%ZTSCH("TASK",ZT1):0 Q:'$T
"RTN","XUTMK",65,0)
 . L -^%ZTSCH("TASK",ZT1)
"RTN","XUTMK",66,0)
 . S ZT2=^%ZTSCH("TASK",ZT1) I $D(^(ZT1,1)) S $P(ZT2,U,5)=^(1)
"RTN","XUTMK",67,0)
 . I "^XMAD^"[(U_$E($P(ZT2,U,2),1,4)_U) Q
"RTN","XUTMK",68,0)
 . I $H-$P(ZT2,U,5)>4  K ^(ZT1)
"RTN","XUTMK",69,0)
 . Q
"RTN","XUTMK",70,0)
 Q
"RTN","XUTMK",71,0)
 ;
"RTN","XUTMK",72,0)
OPTION ;Entry Point For ZTMCLEAN Option
"RTN","XUTMK",73,0)
 W !!,"This option queues a task to clean up the Task file."
"RTN","XUTMK",74,0)
 W !,"All tasks that have been inactive for a certain number of days are deleted.",!
"RTN","XUTMK",75,0)
 ;
"RTN","XUTMK",76,0)
ZTKEEP ;ask user how long to keep inactive tasks
"RTN","XUTMK",77,0)
 S DIR(0)="NA^0:365",DIR("A")="Number of days to save inactive tasks: ",DIR("B")=""
"RTN","XUTMK",78,0)
 S ZTV=^%ZOSF("VOL"),ZTI=$O(^%ZIS(14.5,"B",ZTV,""))
"RTN","XUTMK",79,0)
 I ZTI]"",$D(^%ZIS(14.5,ZTI,0))#2 S DIR("B")=$P(^(0),U,9)
"RTN","XUTMK",80,0)
 I DIR("B")="" S DIR("B")=7
"RTN","XUTMK",81,0)
 S DIR("?")="     Answer must be an integer between 0 and 365",DIR("??")="^D HELP1^XUTMK"
"RTN","XUTMK",82,0)
 D ^DIR W:$D(DTOUT) $C(7)
"RTN","XUTMK",83,0)
 K DIR,DIRUT,DTOUT,DUOUT,ZTI,ZTV
"RTN","XUTMK",84,0)
 I Y'=0&'Y K %,X,Y D NOTQED Q
"RTN","XUTMK",85,0)
 S ZTKEEP=Y
"RTN","XUTMK",86,0)
 ;
"RTN","XUTMK",87,0)
ZTDTH ;ask user when to start the cleanup
"RTN","XUTMK",88,0)
 S DIR(0)="DA^::AERSX",DIR("A")="Start time for cleanup task: ",DIR("B")="NOW"
"RTN","XUTMK",89,0)
 S DIR("?")="     Answer must be a date and time",DIR("??")="^D HELP2^XUTMK"
"RTN","XUTMK",90,0)
 D ^DIR W:$D(DTOUT) $C(7)
"RTN","XUTMK",91,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","XUTMK",92,0)
 I 'Y K %,X,Y D NOTQED Q
"RTN","XUTMK",93,0)
 S ZTDTH=Y
"RTN","XUTMK",94,0)
 ;
"RTN","XUTMK",95,0)
QUEUE ;queue the cleanup task
"RTN","XUTMK",96,0)
 S ZTRTN="XUTMK",ZTIO="",ZTDESC="TaskMan: clean the Task file",ZTSAVE("ZTKEEP")=""
"RTN","XUTMK",97,0)
 D ^%ZTLOAD
"RTN","XUTMK",98,0)
 W !!?5,"Task file cleanup queued!" H 1
"RTN","XUTMK",99,0)
 K ZTSK Q
"RTN","XUTMK",100,0)
 ;
"RTN","XUTMK",101,0)
HELP1 ;ZTKEEP--?? help for first prompt
"RTN","XUTMK",102,0)
 W !!?5,"Answer how many days inactive tasks should be kept."
"RTN","XUTMK",103,0)
 W !?5,"Any task currently scheduled, waiting, or running is still active."
"RTN","XUTMK",104,0)
 Q
"RTN","XUTMK",105,0)
 ;
"RTN","XUTMK",106,0)
HELP2 ;ZTDTH--?? help for second prompt
"RTN","XUTMK",107,0)
 W !!?5,"Answer exactly when the task should begin the cleanup."
"RTN","XUTMK",108,0)
 Q
"RTN","XUTMK",109,0)
 ;
"RTN","XUTMK",110,0)
NOTQED ;OPTION--feedback when task is canceled
"RTN","XUTMK",111,0)
 W !!?5,"Task file cleanup NOT queued!" H 1
"RTN","XUTMK",112,0)
 Q
"RTN","XUTMK",113,0)
 ;
"RTN","XUTMRJD")
0^3^B22692879
"RTN","XUTMRJD",1,0)
XUTMRJD ;SEA/RDS - TaskMan: Option, XURESJOB exit action ;08/07/97  15:01
"RTN","XUTMRJD",2,0)
 ;;8.0;KERNEL;**49,67**;Jul 10, 1995
"RTN","XUTMRJD",3,0)
MAIN ;
"RTN","XUTMRJD",4,0)
 ;Main module of XURESJOB exit action
"RTN","XUTMRJD",5,0)
 I '$O(^%ZTSCH("TASK",0)) Q
"RTN","XUTMRJD",6,0)
 N ZTCOUNT,ZTENV,ZTKEY,ZTNAME,ZTPLURAL,ZTSK,ZTOOPS,ZTOUT,XUTMUCI
"RTN","XUTMRJD",7,0)
 S (ZTOOPS,ZTOUT)=0
"RTN","XUTMRJD",8,0)
 K ^TMP($J,"XUTMRJD")
"RTN","XUTMRJD",9,0)
 D ENV^XUTMUTL Q:'$D(ZTENV)
"RTN","XUTMRJD",10,0)
 D EXPLAIN
"RTN","XUTMRJD",11,0)
 D PROMPT1 Q:ZTOUT
"RTN","XUTMRJD",12,0)
M2 F  D  I ZTOUT Q
"RTN","XUTMRJD",13,0)
 .D PROMPT2 I ZTOUT Q
"RTN","XUTMRJD",14,0)
 .D PROMPT3 Q:ZTOUT
"RTN","XUTMRJD",15,0)
 .D:'ZTOOPS DISPLAY I ZTOUT Q
"RTN","XUTMRJD",16,0)
 .D PROMPT4 I ZTOOPS!ZTOUT Q
"RTN","XUTMRJD",17,0)
 .D REMOVE
"RTN","XUTMRJD",18,0)
 .Q
"RTN","XUTMRJD",19,0)
 K ^TMP($J,"XUTMRJD")
"RTN","XUTMRJD",20,0)
 Q
"RTN","XUTMRJD",21,0)
EXPLAIN ;
"RTN","XUTMRJD",22,0)
 ;MAIN--explain purpose of this exit action
"RTN","XUTMRJD",23,0)
 W !!,"If you forcibly exited any processes, some of them may have"
"RTN","XUTMRJD",24,0)
 W !,"been TaskMan tasks.  If so, TaskMan still believes the tasks"
"RTN","XUTMRJD",25,0)
 W !,"are running.  You can correct this problem by telling TaskMan"
"RTN","XUTMRJD",26,0)
 W !,"which tasks you forcibly exited.  TaskMan will then remove those"
"RTN","XUTMRJD",27,0)
 W !,"tasks from its list of running tasks.",!
"RTN","XUTMRJD",28,0)
 Q
"RTN","XUTMRJD",29,0)
PROMPT1 ;
"RTN","XUTMRJD",30,0)
 ;MAIN--ask whether system manager forcibly exited any tasks
"RTN","XUTMRJD",31,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","XUTMRJD",32,0)
 S DIR(0)="Y",DIR("A")="Did you forcibly exit any tasks",DIR("B")="Yes"
"RTN","XUTMRJD",33,0)
 S DIR("?")="^D HELP1A^XUTMRJD1",DIR("??")="^D HELP1B^XUTMRJD1"
"RTN","XUTMRJD",34,0)
 W ! D ^DIR
"RTN","XUTMRJD",35,0)
 I $D(DTOUT) W "     ** TIME-OUT **",$C(7)
"RTN","XUTMRJD",36,0)
 I $D(DUOUT) W "     ** ^-ESCAPE **"
"RTN","XUTMRJD",37,0)
 I $D(DIRUT) S ZTOUT=1 Q
"RTN","XUTMRJD",38,0)
 S ZTOUT='Y
"RTN","XUTMRJD",39,0)
 Q
"RTN","XUTMRJD",40,0)
PROMPT2 ;
"RTN","XUTMRJD",41,0)
 ;MAIN--ask system manager to select tasks to remove from Task List
"RTN","XUTMRJD",42,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y,XUTMT S ZTSK="" K ^TMP($J,"XUTMT")
"RTN","XUTMRJD",43,0)
 F  D  Q:ZTSK!ZTOUT
"RTN","XUTMRJD",44,0)
 .W ! S XUTMT(0)="AL"
"RTN","XUTMRJD",45,0)
 .S XUTMT("A")="Which tasks did you forcibly exit (?T for list):  "
"RTN","XUTMRJD",46,0)
 .S XUTMT("S1")="D SCREEN2A^XUTMRJD1",XUTMT("S2")="D SCREEN2B^XUTMRJD1"
"RTN","XUTMRJD",47,0)
 .S XUTMT("?")="^D HELP2A^XUTMRJD1",XUTMT("??")="^D HELP2B^XUTMRJD1"
"RTN","XUTMRJD",48,0)
 .D ^XUTMT
"RTN","XUTMRJD",49,0)
P21 .;
"RTN","XUTMRJD",50,0)
 .I ZTSK="?SYSTEM STATUS" X ^%ZOSF("SS") Q
"RTN","XUTMRJD",51,0)
 .I ZTSK="?TASK LIST" D  Q
"RTN","XUTMRJD",52,0)
 ..K XUTMT
"RTN","XUTMRJD",53,0)
 ..S XUTMT(0)="R4"
"RTN","XUTMRJD",54,0)
 ..S XUTMT("NODE")="^%ZTSCH(""TASK"","
"RTN","XUTMRJD",55,0)
 ..S XUTMT("NONE")="There are no running tasks listed"
"RTN","XUTMRJD",56,0)
 ..W ! D ^XUTMT
"RTN","XUTMRJD",57,0)
 ..Q
"RTN","XUTMRJD",58,0)
 .I 'ZTSK S ZTOUT=1 W !!?5,"No tasks selected.",! Q
"RTN","XUTMRJD",59,0)
 .Q
"RTN","XUTMRJD",60,0)
 K ^TMP($J,"XUTMT")
"RTN","XUTMRJD",61,0)
 Q
"RTN","XUTMRJD",62,0)
PROMPT3 ;
"RTN","XUTMRJD",63,0)
 ;MAIN--ask system manager whether to display the selected tasks
"RTN","XUTMRJD",64,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","XUTMRJD",65,0)
 S ZTCOUNT=^TMP($J,"XUTMRJD")
"RTN","XUTMRJD",66,0)
 S ZTPLURAL="" I ZTCOUNT>1 S ZTPLURAL="s"
"RTN","XUTMRJD",67,0)
 W !!?5,"You have selected ",ZTCOUNT," task",ZTPLURAL," listed as running."
"RTN","XUTMRJD",68,0)
 W !
"RTN","XUTMRJD",69,0)
P3 ;
"RTN","XUTMRJD",70,0)
 S DIR(0)="Y",DIR("A")="Do you want to see the task"_ZTPLURAL_" you have selected",DIR("B")="Yes"
"RTN","XUTMRJD",71,0)
 S DIR("?")="^D HELP3A^XUTMRJD1",DIR("??")="^D HELP3B^XUTMRJD1"
"RTN","XUTMRJD",72,0)
 D ^DIR
"RTN","XUTMRJD",73,0)
 I $D(DTOUT) W "     ** TIME-OUT **",$C(7)
"RTN","XUTMRJD",74,0)
 I $D(DUOUT) W "     ** ^-ESCAPE **"
"RTN","XUTMRJD",75,0)
 I $D(DIRUT) S ZTOUT=1 Q
"RTN","XUTMRJD",76,0)
 I 'Y S ZTOOPS=1
"RTN","XUTMRJD",77,0)
 Q
"RTN","XUTMRJD",78,0)
DISPLAY ;
"RTN","XUTMRJD",79,0)
 ;MAIN--display the selected tasks
"RTN","XUTMRJD",80,0)
 N XUTMT,ZTSK
"RTN","XUTMRJD",81,0)
 S XUTMT(0)="R4"
"RTN","XUTMRJD",82,0)
 S XUTMT("NODE")="^TMP($J,""XUTMRJD"","
"RTN","XUTMRJD",83,0)
 S XUTMT("NONE")="There is an error in this program."
"RTN","XUTMRJD",84,0)
 W ! D ^XUTMT
"RTN","XUTMRJD",85,0)
 Q
"RTN","XUTMRJD",86,0)
PROMPT4 ;
"RTN","XUTMRJD",87,0)
 ;MAIN--ask system manager to confirm choice of tasks
"RTN","XUTMRJD",88,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","XUTMRJD",89,0)
 W ! S DIR(0)="Y",DIR("A")="Are you sure you want to remove"
"RTN","XUTMRJD",90,0)
 S DIR("A")=DIR("A")_$S(ZTCOUNT=1:" this task",1:" these tasks")_" from the list of running tasks"
"RTN","XUTMRJD",91,0)
P41 ;
"RTN","XUTMRJD",92,0)
 S DIR("B")="No",DIR("?")="^D HELP4A^XUTMRJD1",DIR("??")="^D HELP4B^XUTMRJD1"
"RTN","XUTMRJD",93,0)
 D ^DIR
"RTN","XUTMRJD",94,0)
 I $D(DTOUT) W "     ** TIME-OUT **",$C(7)
"RTN","XUTMRJD",95,0)
 I $D(DUOUT) W "     ** ^-ESCAPE **"
"RTN","XUTMRJD",96,0)
 I $D(DIRUT) S ZTOUT=1 Q
"RTN","XUTMRJD",97,0)
 S ZTOOPS='Y I Y Q
"RTN","XUTMRJD",98,0)
 W !!?5,"The selected task",ZTPLURAL," will remain listed as running.",!
"RTN","XUTMRJD",99,0)
 Q
"RTN","XUTMRJD",100,0)
REMOVE ;
"RTN","XUTMRJD",101,0)
 ;MAIN--remove selected tasks from Task List
"RTN","XUTMRJD",102,0)
 N ZTSK
"RTN","XUTMRJD",103,0)
 W !!,"Removing selected task",ZTPLURAL,"..."
"RTN","XUTMRJD",104,0)
 ;L +^%ZTSCH("TASK")  removed patch #67
"RTN","XUTMRJD",105,0)
 S ZTSK=0 F  S ZTSK=$O(^TMP($J,"XUTMRJD",ZTSK)) Q:'ZTSK  D
"RTN","XUTMRJD",106,0)
 .L +^%ZTSCH("TASK",ZTSK):0 I '$T D  Q
"RTN","XUTMRJD",107,0)
 ..W !!,"Task is still running, kill job first"
"RTN","XUTMRJD",108,0)
 ..W !,"Task "_ZTSK_" will not be removed, continuing..."
"RTN","XUTMRJD",109,0)
 ..Q
"RTN","XUTMRJD",110,0)
 .L -^%ZTSCH("TASK",ZTSK)
"RTN","XUTMRJD",111,0)
 .K ^%ZTSCH("TASK",ZTSK)
"RTN","XUTMRJD",112,0)
 .W !?5,"...",ZTSK," removed."
"RTN","XUTMRJD",113,0)
 ;L -^%ZTSCH("TASK")  removed patch #67
"RTN","XUTMRJD",114,0)
 W !?5,"...finished!"
"RTN","XUTMRJD",115,0)
 Q
"RTN","XUTMRJD",116,0)
ASK ;Call from the option
"RTN","XUTMRJD",117,0)
 I '$O(^%ZTSCH("TASK",0)) Q
"RTN","XUTMRJD",118,0)
 N ZTCOUNT,ZTENV,ZTKEY,ZTNAME,ZTPLURAL,ZTSK,ZTOOPS,ZTOUT,XUTMUCI
"RTN","XUTMRJD",119,0)
 S (ZTOOPS,ZTOUT)=0
"RTN","XUTMRJD",120,0)
 K ^TMP($J,"XUTMRJD")
"RTN","XUTMRJD",121,0)
 D ENV^XUTMUTL Q:'$D(ZTENV)
"RTN","XUTMRJD",122,0)
 W !,"This will allow you to remove entries from TaskMans list of",!,"running tasks that you believe are not running."
"RTN","XUTMRJD",123,0)
 W !,"The questions will be asked assuming you have just killed a task"
"RTN","XUTMRJD",124,0)
 G M2
"RTN","XUTMTZ")
0^8^B17203268
"RTN","XUTMTZ",1,0)
XUTMTZ ;SEA/RDS - Taskman: Toolkit: Test Utilities (General) ;10/01/97  15:11
"RTN","XUTMTZ",2,0)
 ;;8.0;KERNEL;**67**;Jul 10, 1995
"RTN","XUTMTZ",3,0)
LOAD ;Load up Queue jobs
"RTN","XUTMTZ",4,0)
 W !,"This call will allow you to start a large number of tasks for",!,"TaskMan to run."
"RTN","XUTMTZ",5,0)
 R !,"Enter the number of jobs to start: ",JOBS:DTIME Q:+JOBS'>0
"RTN","XUTMTZ",6,0)
 L +^TMP("XUTMTZ") K ^TMP("XUTMTZ"),ZTIO,ZTUCI,ZTCPU W !,"use '^' for no device."
"RTN","XUTMTZ",7,0)
 S %ZIS="Q" D ^%ZIS S TASKIO=POP
"RTN","XUTMTZ",8,0)
 S %DT="AETSX",%DT("B")="NOW" D ^%DT Q:Y<1  S XUDTH=Y
"RTN","XUTMTZ",9,0)
LD2 R !,"Entry point to use: ",RTN:DTIME
"RTN","XUTMTZ",10,0)
 I RTN["?" D  G LD2
"RTN","XUTMTZ",11,0)
 . F I=3:1 S X=$T(+I) Q:X=""  W:$E($P(X," ",2),1,2)=";;" !,X
"RTN","XUTMTZ",12,0)
 I $T(@RTN)'[";;" W !,"Not valid" G LD2
"RTN","XUTMTZ",13,0)
 W !,"=============================================================="
"RTN","XUTMTZ",14,0)
 W !,"New Batch:  ",$H,"...",$J,!,"Tasks: "
"RTN","XUTMTZ",15,0)
 F QUASI=1:1:JOBS S ZTRTN=RTN_"^XUTMTZ",ZTDTH=XUDTH,ZTDESC=$T(@RTN)_", Job #"_QUASI S:TASKIO ZTIO="" D ^%ZTLOAD W ZTSK,", "
"RTN","XUTMTZ",16,0)
 W !,"..............................................................."
"RTN","XUTMTZ",17,0)
 D HOME^%ZIS L -^TMP("XUTMTZ")
"RTN","XUTMTZ",18,0)
 Q
"RTN","XUTMTZ",19,0)
 ;
"RTN","XUTMTZ",20,0)
ERROR ;;Test Taskman's Error Handling
"RTN","XUTMTZ",21,0)
 S ^TMP("XUTMTZ",$H,$J)=ZTSK_", TEST ERROR HANDLING"
"RTN","XUTMTZ",22,0)
 H 1 X "ERROR "
"RTN","XUTMTZ",23,0)
 ;
"RTN","XUTMTZ",24,0)
BASIC ;;Basic Test With Hang
"RTN","XUTMTZ",25,0)
 L +^TMP("XUTMTZ") S ^TMP("XUTMTZ",$H,$J)=ZTSK_", BASIC TEST"_U_ZTDESC
"RTN","XUTMTZ",26,0)
 I IO]"" W "." S IONOFF=1
"RTN","XUTMTZ",27,0)
 H 1 L -^TMP("XUTMTZ") Q
"RTN","XUTMTZ",28,0)
 ;
"RTN","XUTMTZ",29,0)
QUICK ;;Quick Test To Exercise Submanager
"RTN","XUTMTZ",30,0)
 S FRANK="HONEST" Q
"RTN","XUTMTZ",31,0)
 ;
"RTN","XUTMTZ",32,0)
STOP ;;Test Stop Code
"RTN","XUTMTZ",33,0)
 S ^TMP("XUTMTZ",$H,$J)=ZTSK_", STOP CODE TEST: "
"RTN","XUTMTZ",34,0)
 H 60
"RTN","XUTMTZ",35,0)
 I $$S^%ZTLOAD S ZTSTOP=1,^TMP("XUTMTZ",$H,$J)="Stop Request Acknowledged." Q
"RTN","XUTMTZ",36,0)
 S ^TMP("XUTMTZ",$H,$J)="No Stop Request Detected." Q
"RTN","XUTMTZ",37,0)
 ;
"RTN","XUTMTZ",38,0)
SIZE ;TOOL--SIZE OF ROUTINES
"RTN","XUTMTZ",39,0)
 X ^%ZOSF("RSEL") S ZT1="" F ZT=0:0 S ZT1=$O(^TMP($J,ZT1)) Q:ZT1=""  X "ZL @ZT1 X ^%ZOSF(""SIZE"") W !,ZT1,?10,Y,?15,"" "",$P($P($T(+1),"";"",2),""-"",2,999)"
"RTN","XUTMTZ",40,0)
 K ^TMP($J) Q
"RTN","XUTMTZ",41,0)
 ;
"RTN","XUTMTZ",42,0)
MULTPL ;test task--Test running multiple managers on different nodes of VAXcluster
"RTN","XUTMTZ",43,0)
 L +^TMP("XUTMTZ") H 1
"RTN","XUTMTZ",44,0)
 W !,"..............................................................."
"RTN","XUTMTZ",45,0)
 W !,ZTSK,":  ",$H,"...",$J
"RTN","XUTMTZ",46,0)
 L -^TMP("XUTMTZ") Q
"RTN","XUTMTZ",47,0)
 ;
"RTN","XUTMTZ",48,0)
STOP2 ;;Test ZTSTOP code
"RTN","XUTMTZ",49,0)
 F ZT=1:1:792 S X=$$S^%ZTLOAD Q:X  W 9
"RTN","XUTMTZ",50,0)
 I X S ZTSTOP=1
"RTN","XUTMTZ",51,0)
 Q
"RTN","XUTMTZ",52,0)
 ;
"RTN","XUTMTZ",53,0)
WATCH ;DON'T QUEUE--watch tasks as they are scheduled and unscheduled
"RTN","XUTMTZ",54,0)
 S ZTSK=0
"RTN","XUTMTZ",55,0)
 F ZT=0:0 D LOOKUP W !,"Update: ",ZTU,?15,"Queued: ",ZTS,?30,"Late: ",ZTO,?40,"New: ",ZTN,?50,"Subs: ",ZTSU,?60,"Free Subs: ",ZTF R X:1 Q:X="^"
"RTN","XUTMTZ",56,0)
 Q
"RTN","XUTMTZ",57,0)
 ;
"RTN","XUTMTZ",58,0)
LOOKUP ;WATCH--get data to show
"RTN","XUTMTZ",59,0)
 S ZTH=$H,ZTR=$S($D(^%ZTSCH("RUN"))#2:^("RUN"),1:""),ZTU="off"
"RTN","XUTMTZ",60,0)
 I ZTR S ZTU=ZTH-ZTR*86400+$P(ZTH,",",2)-$P(ZTR,",",2) I ZTU>99 S ZTU="late"
"RTN","XUTMTZ",61,0)
 S ZT1=0,ZTO=0,ZTS=0 F ZT=0:0 S ZT1=$O(^%ZTSCH(ZT1)),ZT2="" Q:'ZT1  F ZT=0:0 S ZT2=$O(^%ZTSCH(ZT1,ZT2)) Q:'ZT2  S ZTS=ZTS+1,ZTH=$H I ZTH-ZT1*86400+$P(ZTH,",",2)-$P(ZT1,",",2)>0 S ZTO=ZTO+1
"RTN","XUTMTZ",62,0)
 S ZTN=^%ZTSK(-1)-ZTSK,ZTSK=^(-1)
"RTN","XUTMTZ",63,0)
 S ZTSU=0,ZT1="" F ZT=0:0 S ZT1=$O(^%ZTSCH("TASK",ZT1)) Q:ZT1=""  S ZTSU=ZTSU+1
"RTN","XUTMTZ",64,0)
 S ZTF=0 I $D(^%ZTSCH("SUB"))#2 S ZTF=^("SUB"),ZTSU=ZTSU+ZTF
"RTN","XUTMTZ",65,0)
 Q
"RTN","XUTMTZ",66,0)
 ;
"RTN","XUTMTZ",67,0)
HANG ;;Wait five minutes then quit
"RTN","XUTMTZ",68,0)
 H 300 Q
"RTN","XUTMTZ",69,0)
 ;
"RTN","XUTMTZ",70,0)
OWN ;;Hold a device until told to release it
"RTN","XUTMTZ",71,0)
 F A=0:0 H 1 I $D(^%ZTSK(ZTSK,.4))#2 Q
"RTN","XUTMTZ",72,0)
 Q
"RTN","XUTMTZ",73,0)
 ;
"RTN","XUTMTZ",74,0)
QOWN ;entry--queue an own task
"RTN","XUTMTZ",75,0)
 S ZTRTN="OWN^XUTMTZ",ZTDTH=$H,ZTIO="",ZTDESC="Toad test 1",ZTSAVE("ZTREQ")="@" D ^%ZTLOAD Q
"RTN","XUTMTZ",76,0)
 ;
"RTN","XUTMTZ",77,0)
Q ;entry--queue a test task
"RTN","XUTMTZ",78,0)
 S ZTRTN="QUICK^XUTMTZ",ZTDTH=$H,ZTIO="",ZTDESC="Toad test",ZTSAVE("ZTREQ")="@" D ^%ZTLOAD Q
"RTN","XUTMTZ",79,0)
 ;
"RTN","XUTMTZ",80,0)
DELAY ;;Record delay in start
"RTN","XUTMTZ",81,0)
 S ZTN=$H,ZTO=$P(^%ZTSK(ZTSK,0),"^",6),Y=$$DIFF^%ZTM(ZTN,ZTO,0)
"RTN","XUTMTZ",82,0)
 S ^TMP("XUTMTZ",ZTN,ZTSK)="DELAY^"_IO_"^"_ZTN_"^"_ZTO_"^"_Y
"RTN","XUTMTZ",83,0)
 I $$S^%ZTLOAD("DELAY TIME IS "_Y)
"RTN","XUTMTZ",84,0)
 Q
"RTN","XUTMTZ",85,0)
PTASK ;;See if persistent status works.
"RTN","XUTMTZ",86,0)
 S CNT=$G(^%ZTSCH("TASK",ZTSK,"CNT"),0)
"RTN","XUTMTZ",87,0)
 S ^%ZTSCH("TASK",ZTSK,"CNT",CNT)=$$HTE^XLFDT($H)
"RTN","XUTMTZ",88,0)
 I '$D(^%ZTSCH("TASK",ZTSK,"P")) S X=$$PSET^%ZTLOAD(ZTSK) H 15 HALT
"RTN","XUTMTZ",89,0)
 H 30
"RTN","XUTMTZ",90,0)
 S ^("CNT")=$G(^("CNT"))+1 I ^("CNT")>5 S X=$$PCLEAR^%ZTLOAD(ZTSK) Q
"RTN","XUTMTZ",91,0)
 HALT
"RTN","XUTMTZ",92,0)
 Q
"RTN","ZTLOAD")
0^6^B3773968
"RTN","ZTLOAD",1,0)
%ZTLOAD ;SEA/RDS-TaskMan: Programmer Interface: Entry Points ;10/9/97  15:22
"RTN","ZTLOAD",2,0)
 ;;8.0;KERNEL;**67**;JUL 10, 1995
"RTN","ZTLOAD",3,0)
 ;
"RTN","ZTLOAD",4,0)
QUEUE ;queue a task (create, schedule) (Entry Point = ^%ZTLOAD)
"RTN","ZTLOAD",5,0)
 G ^%ZTLOAD1
"RTN","ZTLOAD",6,0)
 ;
"RTN","ZTLOAD",7,0)
S(MSG) ;Entry Point: extrinsic variable returns boolean: should task stop?
"RTN","ZTLOAD",8,0)
 I $D(MSG),$G(ZTQUEUED)>.5 S ^%ZTSK(ZTQUEUED,.11)=MSG,$P(^%ZTSK(ZTQUEUED,.1),"^",2)=$H
"RTN","ZTLOAD",9,0)
 I $G(ZTQUEUED)>.5,$D(^%ZTSCH("TASK",ZTQUEUED)) S ^%ZTSCH("TASK",ZTQUEUED,1)=$H
"RTN","ZTLOAD",10,0)
 N ZTSTOP S ZTSTOP=0
"RTN","ZTLOAD",11,0)
 I $G(ZTQUEUED)>.5,$P($G(^%ZTSK(ZTQUEUED,.1)),"^",10)]"" S ZTSTOP=1
"RTN","ZTLOAD",12,0)
 Q ZTSTOP
"RTN","ZTLOAD",13,0)
 ;
"RTN","ZTLOAD",14,0)
TM() ;Entry Point: extrinsic variable returns boolean: is TM running?
"RTN","ZTLOAD",15,0)
 N ZTH,ZTR S ZTH=$H,ZTR=$G(^%ZTSCH("RUN"))
"RTN","ZTLOAD",16,0)
 Q ZTH-ZTR*86400+$P(ZTH,",",2)-$P(ZTR,",",2)<500
"RTN","ZTLOAD",17,0)
 ;
"RTN","ZTLOAD",18,0)
REQ ;Entry Point: requeue a task (edit, reschedule)
"RTN","ZTLOAD",19,0)
 G ^%ZTLOAD3
"RTN","ZTLOAD",20,0)
 ;
"RTN","ZTLOAD",21,0)
KILL ;Entry Point: delete a task
"RTN","ZTLOAD",22,0)
 N % S ZTSK=$G(ZTSK) ;I $D(ZTSK)[0 S ZTSK=""
"RTN","ZTLOAD",23,0)
 K ZTSK(0) S ZTSK(0)=0 ;I $D(ZTSK)>1 S ZTLOAD=ZTSK K ZTSK S ZTSK=ZTLOAD K ZTLOAD
"RTN","ZTLOAD",24,0)
 I ZTSK>1,$D(^%ZTSK(ZTSK)) D  ;could be one!
"RTN","ZTLOAD",25,0)
 . L +^%ZTSK(ZTSK):20 Q:'$T
"RTN","ZTLOAD",26,0)
 . Q:$D(^%ZTSCH("ZTSK",ZTSK,"P"))  K ^%ZTSK(ZTSK) L -^%ZTSK(ZTSK) S ZTSK(0)=1
"RTN","ZTLOAD",27,0)
 Q
"RTN","ZTLOAD",28,0)
 ;
"RTN","ZTLOAD",29,0)
ISQED ;Entry Point: return whether task is pending (scheduled or waiting)
"RTN","ZTLOAD",30,0)
 G ^%ZTLOAD4
"RTN","ZTLOAD",31,0)
 ;
"RTN","ZTLOAD",32,0)
STAT ;Entry Point: return status of a task
"RTN","ZTLOAD",33,0)
 G ^%ZTLOAD5
"RTN","ZTLOAD",34,0)
 ;
"RTN","ZTLOAD",35,0)
DQ ;Entry Point: dequeue a task (unschedule)
"RTN","ZTLOAD",36,0)
 G ^%ZTLOAD6
"RTN","ZTLOAD",37,0)
 ;
"RTN","ZTLOAD",38,0)
DESC(DESC,LST) ;Find tasks with description
"RTN","ZTLOAD",39,0)
 G DESC^%ZTLOAD5
"RTN","ZTLOAD",40,0)
RTN(RTN,LST) ;Find tasks that call this routine
"RTN","ZTLOAD",41,0)
 G RTN^%ZTLOAD5
"RTN","ZTLOAD",42,0)
OPTION(OPNM,LST) ;Find tasks for this OPTION.
"RTN","ZTLOAD",43,0)
 G OPTION^%ZTLOAD5
"RTN","ZTLOAD",44,0)
 ;
"RTN","ZTLOAD",45,0)
ZTSAVE(%,%1) ;input variables in string delimited by ; to build ZTSAVE array
"RTN","ZTLOAD",46,0)
 N %2 K:$G(%1) ZTSAVE
"RTN","ZTLOAD",47,0)
 F %1=1:1 S %2=$P(%,";",%1) Q:%2=""  S ZTSAVE(%2)=""
"RTN","ZTLOAD",48,0)
 Q
"RTN","ZTLOAD",49,0)
PSET(ZTM) ;Set the persistents node
"RTN","ZTLOAD",50,0)
 D TN Q:'$D(^%ZTSCH("TASK",ZTM)) 0
"RTN","ZTLOAD",51,0)
 S ^%ZTSCH("TASK",ZTM,"P")=""
"RTN","ZTLOAD",52,0)
 Q 1
"RTN","ZTLOAD",53,0)
PCLEAR(ZTM) ;Clear the persistents node
"RTN","ZTLOAD",54,0)
 D TN Q:'$D(^%ZTSCH("TASK",ZTM))
"RTN","ZTLOAD",55,0)
 K ^%ZTSCH("TASK",ZTM,"P")
"RTN","ZTLOAD",56,0)
 Q
"RTN","ZTLOAD",57,0)
TN S ZTM=$S($G(ZTM)>0:ZTM,$G(ZTQUEUED)>.9:ZTQUEUED,$G(ZTSK)>0:ZTSK,1:0)
"RTN","ZTLOAD",58,0)
 Q
"RTN","ZTLOAD2")
0^14^B5693902
"RTN","ZTLOAD2",1,0)
%ZTLOAD2 ;SEA/RDS-TaskMan: P I: Queue, Part 2 ;11/20/97  09:30
"RTN","ZTLOAD2",2,0)
 ;;8.0;KERNEL;**1,67**;JUL 03, 1995
"RTN","ZTLOAD2",3,0)
 ;
"RTN","ZTLOAD2",4,0)
REJECT ;GET--reject bad task
"RTN","ZTLOAD2",5,0)
 I '$D(ZTQUEUED) W !,"QUEUE INFORMATION MISSING - NOT QUEUED"
"RTN","ZTLOAD2",6,0)
 K ZTA1,ZTA4,ZTC1,ZTCPU,ZTDESC,ZTDTH,ZTIO,ZTKIL,ZTNOGO,ZTPRI,ZTRTN,ZTSAVE,ZTSK,ZTUCI
"RTN","ZTLOAD2",7,0)
 Q
"RTN","ZTLOAD2",8,0)
 ;
"RTN","ZTLOAD2",9,0)
RESTRCT ;GET--flag tasks with output restricted from certain times; check.
"RTN","ZTLOAD2",10,0)
 I $D(ZTQUEUED) Q
"RTN","ZTLOAD2",11,0)
 S ZTNOGO=0
"RTN","ZTLOAD2",12,0)
 I ZTDTH="@" Q
"RTN","ZTLOAD2",13,0)
 I ZTDTH'?1.5N1","1.5N Q
"RTN","ZTLOAD2",14,0)
 S X=$$HTFM^%ZTLOAD7(ZTDTH) D ^XQ92 I X="" S ZTDTH="" W !,"Sorry--that time is restricted!",!,$C(7)
"RTN","ZTLOAD2",15,0)
 Q
"RTN","ZTLOAD2",16,0)
 ;
"RTN","ZTLOAD2",17,0)
ASK ;GET--ask for start time
"RTN","ZTLOAD2",18,0)
 N %DT,Y
"RTN","ZTLOAD2",19,0)
 I $D(ZTQUEUED) D:ZTDTH]""  Q
"RTN","ZTLOAD2",20,0)
 . S %DT="FRS",X=ZTDTH D ^%DT
"RTN","ZTLOAD2",21,0)
 . S ZTDTH=$$FMTH^%ZTLOAD7(+Y) I Y'>0 S ZTDTH=""
"RTN","ZTLOAD2",22,0)
 . Q
"RTN","ZTLOAD2",23,0)
 S %DT="AERSX",%DT("A")="Requested Start Time: ",%DT("B")="NOW",%DT(0)="NOW"
"RTN","ZTLOAD2",24,0)
 I $D(ZTNOGO) D  I X="" Q
"RTN","ZTLOAD2",25,0)
 . S Y=+XQY D NEXT^XQ92 I X="" W !,"Output is never allowed from this option!",$C(7),$C(7) Q
"RTN","ZTLOAD2",26,0)
 . S %DT("B")=$$FMTE^%ZTLOAD7(X),%DT="AERSX"
"RTN","ZTLOAD2",27,0)
 . Q
"RTN","ZTLOAD2",28,0)
 I $D(ZTNOGO),'$D(XQNOGO) W !,"Output from this option is restricted during certain times."
"RTN","ZTLOAD2",29,0)
 F ZT=0:0 D ^%DT Q:(Y<0)!'$D(ZTNOGO)  S ZT=Y,X=Y D ^XQ92 S Y=ZT Q:X]""  W !!,"That is a restricted time!",!,$C(7)
"RTN","ZTLOAD2",30,0)
 S:Y>0 ZTDTH=$$FMTH^%ZTLOAD7(+Y)
"RTN","ZTLOAD2",31,0)
 K %DT,%T,X5,ZT
"RTN","ZTLOAD2",32,0)
 Q
"RTN","ZTLOAD2",33,0)
 ;
"RTN","ZTLOAD2",34,0)
OPTION ;GET--get option data
"RTN","ZTLOAD2",35,0)
 S ZTA4=$G(ZTSAVE("XQY")) I 'ZTA4 S ZTA4=$G(XQY) I 'ZTA4 S ZTA4=""
"RTN","ZTLOAD2",36,0)
 S ZTA1="O" I 'ZTA4 S ZTA1="" Q
"RTN","ZTLOAD2",37,0)
 S ZTA5=$P($G(^DIC(19,ZTA4,0)),U)
"RTN","ZTLOAD2",38,0)
 Q
"RTN","ZTLOAD2",39,0)
 ;
"RTN","ZTLOAD2",40,0)
ZTKIL ;GET--convert forget time
"RTN","ZTLOAD2",41,0)
 S ZTKIL=$S(ZTKIL?5N:ZTKIL,ZTKIL?5N1","1.5N:ZTKIL,ZTKIL?7N.".".N:$$FMTH^%ZTLOAD7(ZTKIL),1:"")
"RTN","ZTLOAD2",42,0)
 Q
"RTN","ZTLOAD2",43,0)
 ;
"RTN","ZTLOAD2",44,0)
SPOOL ;DEVICE--for predefined ZTIO spool device, pick up IO("DOC") if missing
"RTN","ZTLOAD2",45,0)
 I $G(IO("DOC"))="" Q
"RTN","ZTLOAD2",46,0)
 I ZTIO[IO("DOC") Q
"RTN","ZTLOAD2",47,0)
 I $P(ZTIO,";",2)?.N D
"RTN","ZTLOAD2",48,0)
 .S ZTIO=$P(ZTIO,";")_";"_IO("DOC")_";"_$P(ZTIO,";",2,999)
"RTN","ZTLOAD2",49,0)
 E  I $P(ZTIO,";",2)?1.2A1"-"1.ANP,$P(ZTIO,";",3)?.N D
"RTN","ZTLOAD2",50,0)
 .S ZTIO=$P(ZTIO,";",1,2)_";"_IO("DOC")_";"_$P(ZTIO,";",3,999)
"RTN","ZTLOAD2",51,0)
 Q
"RTN","ZTLOAD2",52,0)
 ;
"RTN","ZTLOAD3")
0^7^B9043599
"RTN","ZTLOAD3",1,0)
%ZTLOAD3 ;SEA/RDS - TaskMan: Task Requeue ;10/01/97  14:15
"RTN","ZTLOAD3",2,0)
 ;;8.0;KERNEL;**67**;JUL 10, 1995
"RTN","ZTLOAD3",3,0)
 ;
"RTN","ZTLOAD3",4,0)
INPUT ;check for error conditions
"RTN","ZTLOAD3",5,0)
 N ZT1,ZT2,ZT3
"RTN","ZTLOAD3",6,0)
 S ZTSK=$G(ZTSK)
"RTN","ZTLOAD3",7,0)
 I $D(ZTSK)>1 S ZT1=ZTSK K ZTSK S ZTSK=ZT1
"RTN","ZTLOAD3",8,0)
 L +^%ZTSK(ZTSK) S ZTREC=$G(^%ZTSK(ZTSK,0)) I ZTREC="" G BAD
"RTN","ZTLOAD3",9,0)
 I $D(ZTDTH)#2,ZTDTH]"",ZTDTH'?1.5N1","1.5N,ZTDTH'?7N.".".N,ZTDTH'="@","SHD"'[$E(ZTDTH,$L(ZTDTH)) G BAD
"RTN","ZTLOAD3",10,0)
 ;
"RTN","ZTLOAD3",11,0)
DQ ;make sure task is not pending
"RTN","ZTLOAD3",12,0)
 D UNSCH^%ZTLOAD6
"RTN","ZTLOAD3",13,0)
 I $D(^%ZTSK(ZTSK,0))[0 G BAD
"RTN","ZTLOAD3",14,0)
 ;
"RTN","ZTLOAD3",15,0)
ZTDTH ;determine task's next start time
"RTN","ZTLOAD3",16,0)
 I $D(ZTDTH)[0 S ZTDTH=$P(ZTREC,"^",6) G ZTRTN
"RTN","ZTLOAD3",17,0)
 I ZTDTH="" S ZTDTH=$H G ZTRTN
"RTN","ZTLOAD3",18,0)
 I ZTDTH?1.5N1","1.5N G ZTRTN
"RTN","ZTLOAD3",19,0)
 I ZTDTH?7N.".".N S ZTDTH=$$FMTH^%ZTLOAD7(ZTDTH) G ZTRTN
"RTN","ZTLOAD3",20,0)
 I ZTDTH="@" G ZTRTN
"RTN","ZTLOAD3",21,0)
 S ZTH=$H,ZTL=$E(ZTDTH,$L(ZTDTH))
"RTN","ZTLOAD3",22,0)
 I ZTL="S" S ZTDTH=$P(ZTH,",",2)+ZTDTH\86400+ZTH_","_($P(ZTH,",",2)+ZTDTH#86400) G ZTRTN
"RTN","ZTLOAD3",23,0)
 I ZTL="H" S ZTDTH=ZTDTH*3600,ZTDTH=$P(ZTH,",",2)+ZTDTH\86400+ZTH_","_($P(ZTH,",",2)+ZTDTH#86400) G ZTRTN
"RTN","ZTLOAD3",24,0)
 S ZTDTH=ZTH+ZTDTH_","_$P(ZTH,",",2)
"RTN","ZTLOAD3",25,0)
 ;
"RTN","ZTLOAD3",26,0)
ZTRTN ;determine whether entry point should change
"RTN","ZTLOAD3",27,0)
 I $D(ZTRTN)[0 G ZTIO
"RTN","ZTLOAD3",28,0)
 I ZTRTN="" G ZTIO
"RTN","ZTLOAD3",29,0)
 I ZTRTN'[U S ZTRTN=U_ZTRTN
"RTN","ZTLOAD3",30,0)
 S ZT=$P(ZTREC,U,1,2)
"RTN","ZTLOAD3",31,0)
 I ZT'=ZTRTN S $P(ZTREC,U,1,2)=ZTRTN I ZT="ZTSK^XQ1" S $P(ZTREC,U,7,9)="R^^"
"RTN","ZTLOAD3",32,0)
 ;
"RTN","ZTLOAD3",33,0)
ZTIO ;determine whether i/o device should change
"RTN","ZTLOAD3",34,0)
 N ZTREC2,ZTREC25
"RTN","ZTLOAD3",35,0)
 S ZTREC2=$G(^%ZTSK(ZTSK,.2)),ZT=$P(ZTREC2,U)
"RTN","ZTLOAD3",36,0)
 I $D(ZTIO)[0 G ZTIO1
"RTN","ZTLOAD3",37,0)
 I ZTIO="" G ZTIO1
"RTN","ZTLOAD3",38,0)
 I $P(ZTIO,";")'=$P(ZT,";") S $P(ZTREC2,U,6)="",ZTREC25=""
"RTN","ZTLOAD3",39,0)
 I ZTIO="@" S $P(ZTREC2,U)="" G ZTIO1
"RTN","ZTLOAD3",40,0)
 I ZTIO'=ZT S $P(ZTREC2,U)=ZTIO
"RTN","ZTLOAD3",41,0)
 ;
"RTN","ZTLOAD3",42,0)
ZTIO1 ;set hunt group suppression flag
"RTN","ZTLOAD3",43,0)
 S $P(ZTREC2,U,5)=$S($D(ZTIO(1))[0:"",ZTIO(1)="D":"DIRECT",1:"")
"RTN","ZTLOAD3",44,0)
 ;
"RTN","ZTLOAD3",45,0)
ZTDESC ;determine whether description should change
"RTN","ZTLOAD3",46,0)
 I $S($D(ZTDESC)[0:1,ZTDESC="":1,1:0) S ZTDESC=$G(^%ZTSK(ZTSK,.03))
"RTN","ZTLOAD3",47,0)
 I ZTDESC=""!(ZTDESC="No Description (%ZTLOAD)") S ZTDESC="No Description (REQ~%ZTLOAD)"
"RTN","ZTLOAD3",48,0)
 S ^%ZTSK(ZTSK,.03)=ZTDESC
"RTN","ZTLOAD3",49,0)
 ;
"RTN","ZTLOAD3",50,0)
RECORD ;record changes in Task File entry
"RTN","ZTLOAD3",51,0)
 I $D(ZTREC2)#2 S ^%ZTSK(ZTSK,.2)=ZTREC2
"RTN","ZTLOAD3",52,0)
 I $D(ZTREC25)#2 S ^%ZTSK(ZTSK,.25)=ZTREC25
"RTN","ZTLOAD3",53,0)
 I ZTDTH'="@" S $P(ZTREC,U,6)=ZTDTH
"RTN","ZTLOAD3",54,0)
 S ^%ZTSK(ZTSK,0)=ZTREC
"RTN","ZTLOAD3",55,0)
 S $P(^%ZTSK(ZTSK,.1),U,1,3)=$S(ZTDTH'="@":"1^"_$H_"^REQUEUED",1:"H^"_$H_"^EDITED BUT NOT REQUEUED")
"RTN","ZTLOAD3",56,0)
 ;
"RTN","ZTLOAD3",57,0)
ZTSAVE ;See if new data to save
"RTN","ZTLOAD3",58,0)
 K %H,%T,X,X1,Y,ZT,ZT1,ZT2,ZT3,ZTDESC,ZTH,ZTIO,ZTL,ZTOS,ZTREC,ZTREC1,ZTREC2,ZTREC25,ZTRTN
"RTN","ZTLOAD3",59,0)
 I $D(ZTSAVE)=11 K:$G(ZTSAVE)="KILL" ^%ZTSK(ZTSK,.3) D ZTSAVE^%ZTLOAD1
"RTN","ZTLOAD3",60,0)
SCHED ;schedule task, cleanup, quit
"RTN","ZTLOAD3",61,0)
 I ZTDTH'="@" S ^%ZTSCH($$H3^%ZTLOAD1(ZTDTH),ZTSK)=""
"RTN","ZTLOAD3",62,0)
 K %X,%Y,X,X1,Y,ZT1,ZT2,ZT3,ZTDTH,ZTSAVE
"RTN","ZTLOAD3",63,0)
 L -^%ZTSK(ZTSK) S ZTSK(0)=1
"RTN","ZTLOAD3",64,0)
 Q
"RTN","ZTLOAD3",65,0)
 ;
"RTN","ZTLOAD3",66,0)
BAD L -^%ZTSK(ZTSK) S ZTSK(0)=0
"RTN","ZTLOAD3",67,0)
 Q
"RTN","ZTLOAD3",68,0)
REQP(ZT1) ;Reschedule a persistent task. Called from ZTM
"RTN","ZTLOAD3",69,0)
 N ZTSK,ZT2,ZT3,ZTDTH,ZTSAVE S ZTDTH=$H,ZTSK=ZT1
"RTN","ZTLOAD3",70,0)
 L +^%ZTSK(ZTSK):20 Q:'$T
"RTN","ZTLOAD3",71,0)
 I $D(^%ZTSK(ZTSK,0))[0 Q  ;SEND ALERT TO USER
"RTN","ZTLOAD3",72,0)
 G SCHED
"RTN","ZTLOAD7")
0^15^B8718521
"RTN","ZTLOAD7",1,0)
%ZTLOAD7 ;ISC-SF/RWF - TASKMAN Utilities ;02/25/98  10:46
"RTN","ZTLOAD7",2,0)
 ;;8.0;KERNEL;**67**;JUL 10, 1995
"RTN","ZTLOAD7",3,0)
 ;See XLFDT for notes.
"RTN","ZTLOAD7",4,0)
HTFM(%H,%F) ;$H to FM
"RTN","ZTLOAD7",5,0)
 N X,%,%Y,%M,%D S:'$D(%F) %F=0
"RTN","ZTLOAD7",6,0)
 S %=(%H>21608)+(%H>94657)+%H-.1,%Y=%\365.25+141,%=%#365.25\1
"RTN","ZTLOAD7",7,0)
 S %D=%+306#(%Y#4=0+365)#153#61#31+1,%M=%-%D\29+1
"RTN","ZTLOAD7",8,0)
 S X=%Y_"00"+%M_"00"+%D,%=$P(%H,",",2)
"RTN","ZTLOAD7",9,0)
 S %=%#60/100+(%#3600\60)/100+(%\3600)/100
"RTN","ZTLOAD7",10,0)
 S:%&('%F) X=X_% Q X
"RTN","ZTLOAD7",11,0)
 ;
"RTN","ZTLOAD7",12,0)
FMTH(X,%F) ;FM to $H
"RTN","ZTLOAD7",13,0)
 N %Y,%H S:'$D(%F) %F=0 D H S:%F %H=+%H Q %H
"RTN","ZTLOAD7",14,0)
H ;
"RTN","ZTLOAD7",15,0)
 N %,%M,%D,%T I X<1410000 S %H=0,%Y=-1 Q
"RTN","ZTLOAD7",16,0)
 S %Y=$E(X,1,3),%M=$E(X,4,5),%D=$E(X,6,7)
"RTN","ZTLOAD7",17,0)
 S %T=$E(X_0,9,10)*60+$E(X_"000",11,12)*60+$E(X_"00000",13,14)
"RTN","ZTLOAD7",18,0)
 S %L=%Y+1700 S:%M<3 %L=%L-1 S %L=(%L\4)-(%L\100)+(%L\400)-446
"RTN","ZTLOAD7",19,0)
 S %H=$P("^31^59^90^120^151^181^212^243^273^304^334","^",%M)+%D
"RTN","ZTLOAD7",20,0)
 S %=('%M)!('%D),%Y=%Y-141,%H=(%H+(%Y*365)+%L+%)_","_%T,%Y=$S(%:-1,1:%H+4#7)
"RTN","ZTLOAD7",21,0)
 Q
"RTN","ZTLOAD7",22,0)
 ;
"RTN","ZTLOAD7",23,0)
HTE(%H,%F) ;$H to external
"RTN","ZTLOAD7",24,0)
 Q:%H'>0 %H N Y,%T,%R S %F=$G(%F) S Y=$$HTFM(%H,0) G T2
"RTN","ZTLOAD7",25,0)
FMTE(Y,%F) ;FM to external
"RTN","ZTLOAD7",26,0)
 Q:'Y Y N %T,%R S %F=$G(%F)
"RTN","ZTLOAD7",27,0)
T2 S %T="."_$E($P(Y,".",2)_"000000",1,7) D @("EF"_$S(%F<1:1,%F>4:1,1:+%F\1)) Q %R
"RTN","ZTLOAD7",28,0)
DOW(X,Y) ;Day of Week
"RTN","ZTLOAD7",29,0)
 N %Y,%M,%D,%H,%T D H I $G(Y) Q %Y
"RTN","ZTLOAD7",30,0)
 Q $P("Sun^Mon^Tues^Wednes^Thurs^Fri^Satur","^",%Y+1)_"day"
"RTN","ZTLOAD7",31,0)
 ;
"RTN","ZTLOAD7",32,0)
FMDIFF(X1,X2,X3) ;FM diff in two dates in days if x3=1 seconds if x3=2.
"RTN","ZTLOAD7",33,0)
 N %H,%Y,X S:'$D(X3) X3=1 S X=X1 D H S X1=+%H,X1(1)=$P(%H,",",2),X=X2 D H
"RTN","ZTLOAD7",34,0)
D2 S X=(X1-%H) S:X3>1 X=X*86400+(X1(1)-$P(%H,",",2))
"RTN","ZTLOAD7",35,0)
 I X3=3 S %=X,X="" S:%>86400 X=(%\86400) S:%#86400 X=X_" "_(%#86400\3600)_":"_$E(%#3600\60+100,2,3)_":"_$E(%#60+100,2,3)
"RTN","ZTLOAD7",36,0)
 Q X
"RTN","ZTLOAD7",37,0)
HDIFF(X1,X2,X3) ;$H diff in two dates, X3 same as FMDIFF.
"RTN","ZTLOAD7",38,0)
 N X,%H,%T S:'$D(X3) X3=1 S X1(1)=$P(X1,",",2),X1=+X1,%H=X2
"RTN","ZTLOAD7",39,0)
 G D2
"RTN","ZTLOAD7",40,0)
HADD(X,D,H,M,S) ;Add to $H date
"RTN","ZTLOAD7",41,0)
 N %H,%T S %H=+X,%T=$P(X,",",2) D A2 Q %H_","_%T
"RTN","ZTLOAD7",42,0)
A2 S %H=%H+$G(D),%T=%T+($G(H)*3600)+($G(M)*60)+$G(S)
"RTN","ZTLOAD7",43,0)
 S:%T>86400 %H=%H+(%T\86400),%T=%T#86400 S:%T<0 %H=%H+(%T\86400)-1,%T=%T#86400
"RTN","ZTLOAD7",44,0)
 Q
"RTN","ZTLOAD7",45,0)
FMADD(X,D,H,M,S) ;Add to FM date
"RTN","ZTLOAD7",46,0)
 N %H,%T S %H=$$FMTH(X,0),%T=$P(%H,",",2) D A2 Q $$HTFM(%H_","_%T)
"RTN","ZTLOAD7",47,0)
 ;
"RTN","ZTLOAD7",48,0)
EF1 S %R=$P($T(M)," ",$S($E(Y,4,5):$E(Y,4,5)+2,1:0))_" "_$S($E(Y,6,7):$E(Y,6,7)_", ",1:"")_($E(Y,1,3)+1700)
"RTN","ZTLOAD7",49,0)
 S:$E(%R)=" " %R=$E(%R,2,99)
"RTN","ZTLOAD7",50,0)
TM N % Q:%T'>0!(%F["D")
"RTN","ZTLOAD7",51,0)
 I %F'["P" S %R=%R_"@"_$E(%T,2,3)_":"_$E(%T,4,5)_$S(%F["M":"",$E(%T,6,7)!(%F["S"):":"_$E(%T,6,7),1:"")
"RTN","ZTLOAD7",52,0)
 I %F["P" D
"RTN","ZTLOAD7",53,0)
 . S %R=%R_" "_$S($E(%T,2,3)>12:$E(%T,2,3)-12,1:+$E(%T,2,3))_":"_$E(%T,4,5)_$S(%F["M":"",$E(%T,6,7)!(%F["S"):":"_$E(%T,6,7),1:"")
"RTN","ZTLOAD7",54,0)
 . S %R=%R_$S($E(%T,2,7)<120000:" am",$E(%T,2,3)=24:" am",1:" pm")
"RTN","ZTLOAD7",55,0)
 . Q
"RTN","ZTLOAD7",56,0)
 Q
"RTN","ZTLOAD7",57,0)
M ;; Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec
"RTN","ZTLOAD7",58,0)
EF2 S %R=$J(+$E(Y,4,5),2)_"/"_$J(+$E(Y,6,7),2)_"/"_$E(Y,2,3)
"RTN","ZTLOAD7",59,0)
 I %F'["F" S %R=$TR(%R," ")
"RTN","ZTLOAD7",60,0)
 G TM
"RTN","ZTLOAD7",61,0)
EF3 S %R=$J(+$E(Y,6,7),2)_"/"_$J(+$E(Y,4,5),2)_"/"_$E(Y,2,3)
"RTN","ZTLOAD7",62,0)
 I %F'["F" S %R=$TR(%R," ")
"RTN","ZTLOAD7",63,0)
 G TM
"RTN","ZTLOAD7",64,0)
EF4 S %R=$E(Y,2,3)_"/"_$J(+$E(Y,4,5),2)_"/"_$J(+$E(Y,6,7),2)
"RTN","ZTLOAD7",65,0)
 I %F'["F" S %R=$TR(%R," ")
"RTN","ZTLOAD7",66,0)
 G TM
"RTN","ZTM")
0^5^B24560405
"RTN","ZTM",1,0)
%ZTM ;SEA/RDS-TaskMan: Manager, Part 1 (Main Loop) ;10/01/97  14:50
"RTN","ZTM",2,0)
 ;;8.0;KERNEL;**24,36,64,67**;JUL 10, 1995
"RTN","ZTM",3,0)
 ;
"RTN","ZTM",4,0)
LOOP ;Taskman's Main Loop
"RTN","ZTM",5,0)
 F %ZTLOOP=0:1 S %ZTLOOP=%ZTLOOP#8 D CHECK,SCHQ,IDLE:%ZTCHK
"RTN","ZTM",6,0)
 S %ZTFALL="" G LOOP
"RTN","ZTM",7,0)
 ;
"RTN","ZTM",8,0)
CHECK ;LOOP--Check Status And Update Loop Data
"RTN","ZTM",9,0)
 Q:%ZTLOOP&$G(%ZTCHK)
"RTN","ZTM",10,0)
 I $D(^%ZTSCH("RUN"))[0 K ^%ZTSCH("STATUS",$J) H
"RTN","ZTM",11,0)
 S ^%ZTSCH("RUN")=$H
"RTN","ZTM",12,0)
 I $D(^%ZTSCH("WAIT"))#2 D STATUS("WAIT^Taskman Waiting") H 5 G CHECK
"RTN","ZTM",13,0)
 ;
"RTN","ZTM",14,0)
 I $D(^%ZTSCH("UPDATE",$J))[0 D UPDATE^%ZTM5 D
"RTN","ZTM",15,0)
 . Q:"GP"[%ZTYPE
"RTN","ZTM",16,0)
 . K ^%ZTSCH("STATUS")
"RTN","ZTM",17,0)
 . S ^%ZTSCH("RUN")=%ZTNODE_" is the wrong type of volume set for TaskMan."
"RTN","ZTM",18,0)
 . H
"RTN","ZTM",19,0)
 I %ZTVLI D STATUS("PAUSE^Logons Inhibited") H 60 G CHECK ;Set in %ZTM5
"RTN","ZTM",20,0)
 I @%ZTNLG D INHIBIT^%ZTM5(1),STATUS("PAUSE^No Signons Allowed") H 60 G CHECK
"RTN","ZTM",21,0)
 I $G(^%ZIS(14.5,"LOGON",%ZTVOL)) D INHIBIT^%ZTM5(0) ;Check field
"RTN","ZTM",22,0)
 I $D(ZTREQUIR)#2 D STATUS("PAUSE^Required link to "_ZTREQUIR_" is down.") H 60 D REQUIR^%ZTM5 G CHECK
"RTN","ZTM",23,0)
 ;
"RTN","ZTM",24,0)
 I $D(^%ZTSCH("LINK"))#2,$$DIFF($H,^("LINK"))>900 D LINK^%ZTM3
"RTN","ZTM",25,0)
 ;
"RTN","ZTM",26,0)
 X ^%ZOSF("ACTJ") S %ZTRUN=%ZTVMJ>Y
"RTN","ZTM",27,0)
 I %ZTRUN,%ZTPFLG("BAL")]"" D BALANCE^%ZTM6 I $D(ZTOVERLD)#2 D STATUS("BALANCE^This cpu ("_%ZTPAIR_") is waiting to balance the load.") H 5 G CHECK
"RTN","ZTM",28,0)
 I %ZTRUN D STATUS("RUN^Main Loop")
"RTN","ZTM",29,0)
 E  D STATUS("RUN^Taskman Job Limit Reached")
"RTN","ZTM",30,0)
 Q
"RTN","ZTM",31,0)
 ;
"RTN","ZTM",32,0)
STATUS(MSG) ;Record TM status
"RTN","ZTM",33,0)
 S ^%ZTSCH("STATUS",$J)=$H_"^"_MSG Q
"RTN","ZTM",34,0)
 ;
"RTN","ZTM",35,0)
SCHQ ;LOOP--Check Schedule List
"RTN","ZTM",36,0)
 S %ZTIME=$$H3($H),ZTDTH=0,%ZTCHK=1,IO=""
"RTN","ZTM",37,0)
S1 S ZTDTH=$O(^%ZTSCH(ZTDTH)) Q:(ZTDTH>%ZTIME)  Q:('ZTDTH)!(ZTDTH'?6.N)  I +ZTDTH<0 K ^%ZTSCH(ZTDTH) G S1
"RTN","ZTM",38,0)
 S ZTSK=0
"RTN","ZTM",39,0)
S2 L  S ZTSK=$O(^%ZTSCH(ZTDTH,ZTSK)) G S1:ZTSK="" S ZTST=$G(^%ZTSCH(ZTDTH,ZTSK))
"RTN","ZTM",40,0)
 L ^%ZTSK(ZTSK):1 G S2:'$T K ^%ZTSCH(ZTDTH,ZTSK)
"RTN","ZTM",41,0)
 I $D(^%ZTSK(ZTSK,0))[0 S:$D(^%ZTSK(ZTSK)) $P(^(ZTSK,.1),U,1,3)="I^"_$H_U_1 G S2
"RTN","ZTM",42,0)
 I $D(^%ZTSK(ZTSK,.1))#2,$P(^(.1),U,10)]"" S $P(^(.1),U,1,3)="D^"_$H_"^1" G S2
"RTN","ZTM",43,0)
 D ^%ZTM1 G S2:%ZTREJCT
"RTN","ZTM",44,0)
 ;
"RTN","ZTM",45,0)
SEND ;Send Task To Submanager
"RTN","ZTM",46,0)
 S %ZTCHK=0,ZTPAIR=""
"RTN","ZTM",47,0)
 I ZTDVOL'=%ZTVOL D XLINK^%ZTM2 G:'ZTJOBIT SCHX
"RTN","ZTM",48,0)
 S $P(^%ZTSK(ZTSK,.1),U,1,2)=$S(ZTYPE="C":"M",1:3)_U_$H
"RTN","ZTM",49,0)
 ;See that the Lock doesn't change $T with the 'I 1' at end.
"RTN","ZTM",50,0)
 I (ZTYPE'="C")&(%ZTNODE[ZTNODE) L +^%ZTSCH("JOB"):10 S ^%ZTSCH("JOB",ZTDTH,ZTSK)=IO I 1
"RTN","ZTM",51,0)
 E  L +^%ZTSCH("C"):10 S ZTPAIR=ZTDVOL_$S(ZTNODE]"":":"_ZTNODE,1:""),^%ZTSCH("C",ZTPAIR,ZTDTH,ZTSK)=IO
"RTN","ZTM",52,0)
 I '$D(^%ZTSCH("STOP")),(ZTYPE="C"!(%ZTRUN&$$NEWSUB)),'$$OOS(ZTPAIR) D
"RTN","ZTM",53,0)
 . I 1 X %ZTJOB H %ZTSLO I '$T X %ZTJOB H %ZTSLO
"RTN","ZTM",54,0)
 . Q
"RTN","ZTM",55,0)
SCHX L  K ZTREP Q
"RTN","ZTM",56,0)
 ;
"RTN","ZTM",57,0)
IDLE ;LOOP--DEV Node Maintenance; Backup JOB Commands
"RTN","ZTM",58,0)
 ;only proceed with idle work if 15 seconds since last check
"RTN","ZTM",59,0)
 S (ZTREC,ZTCVOL)="" H 2 Q:%ZTLOOP
"RTN","ZTM",60,0)
 I $D(^%ZTSCH("STOP")) Q
"RTN","ZTM",61,0)
 L ^%ZTSCH("IDLE")
"RTN","ZTM",62,0)
 I $$DIFF(%ZTIME,^%ZTSCH("IDLE"),1)<15 L  Q
"RTN","ZTM",63,0)
 S ^%ZTSCH("IDLE")=%ZTIME L
"RTN","ZTM",64,0)
I1 ;
"RTN","ZTM",65,0)
 ;clear out old DEV nodes
"RTN","ZTM",66,0)
 I $D(^%ZTSCH("DEV")) S %ZTIO="" F  S %ZTIO=$O(^%ZTSCH("DEV",%ZTIO)) Q:%ZTIO=""  D
"RTN","ZTM",67,0)
 . L ^%ZTSCH("DEV",%ZTIO):5 I '$T Q
"RTN","ZTM",68,0)
 . N X S X=$G(^%ZTSCH("DEV",%ZTIO)) Q:'$L(X)
"RTN","ZTM",69,0)
 . I $$DIFF(%ZTIME,X,1)>120 K ^%ZTSCH("DEV",%ZTIO)
"RTN","ZTM",70,0)
 . Q
"RTN","ZTM",71,0)
 L  ;clear all locks.
"RTN","ZTM",72,0)
I2 ;
"RTN","ZTM",73,0)
 ;job new submanagers cross-volume for each unfinished C list
"RTN","ZTM",74,0)
 I $D(^%ZTSCH("C")) D
"RTN","ZTM",75,0)
 . S X="ERCL^%ZTM2",@^%ZOSF("TRAP")
"RTN","ZTM",76,0)
 . S ZTVOL="" F  S ZTVOL=$O(^%ZTSCH("C",ZTVOL)) Q:ZTVOL=""  D
"RTN","ZTM",77,0)
 .. S ZTNODE="",ZTDVOL=ZTVOL S:ZTDVOL[":" ZTNODE=$P(ZTDVOL,":",2),ZTDVOL=$P(ZTDVOL,":")
"RTN","ZTM",78,0)
 .. S X=$G(^%ZTSCH("C",ZTVOL))
"RTN","ZTM",79,0)
 .. I $D(^%ZTSCH("LINK",ZTDVOL))!(X>9)!$$OOS(ZTVOL) Q
"RTN","ZTM",80,0)
 .. S ^%ZTSCH("C",ZTVOL)=X+1
"RTN","ZTM",81,0)
 .. S %ZTCHK=0,ZTUCI=$O(^%ZIS(14.6,"AV",ZTDVOL,""))
"RTN","ZTM",82,0)
 .. I 1 X %ZTJOB H %ZTSLO I '$T X %ZTJOB H %ZTSLO
"RTN","ZTM",83,0)
 .. Q
"RTN","ZTM",84,0)
 . Q
"RTN","ZTM",85,0)
I3 ;job off a new submanager if none are tending the Device List
"RTN","ZTM",86,0)
 I '%ZTRUN Q
"RTN","ZTM",87,0)
 I $$NEWSUB,$O(^%ZTSCH("IO",""))]"" D  Q
"RTN","ZTM",88,0)
 . Q:'$$SUBOK()
"RTN","ZTM",89,0)
 . S %ZTCHK=0,ZTUCI=%ZTUCI,ZTDVOL=%ZTVOL,ZTNODE=""
"RTN","ZTM",90,0)
 . I 1 X %ZTJOB H %ZTSLO I '$T X %ZTJOB H %ZTSLO
"RTN","ZTM",91,0)
 . Q
"RTN","ZTM",92,0)
I4 ;job off a new submanager if the Job List still has tasks
"RTN","ZTM",93,0)
 I $D(^%ZTSCH("JOB")) D
"RTN","ZTM",94,0)
 . ;D SUB^%ZTMS1(-1)
"RTN","ZTM",95,0)
 . Q:'$$SUBOK()  S %ZTCHK=0,ZTUCI=%ZTUCI,ZTDVOL=%ZTVOL,ZTNODE=""
"RTN","ZTM",96,0)
 . I 1 X %ZTJOB H %ZTSLO I '$T X %ZTJOB H %ZTSLO
"RTN","ZTM",97,0)
 . Q
"RTN","ZTM",98,0)
I5 ;Clean up %ZTSCH
"RTN","ZTM",99,0)
 S ZTDTH="0,0" F  S ZTDTH=$O(^%ZTSCH(ZTDTH)) Q:ZTDTH'[","  D
"RTN","ZTM",100,0)
 . N ZTSK,X L +^%ZTSCH(ZTDTH)
"RTN","ZTM",101,0)
 . S ZTSK=$O(^%ZTSCH(ZTDTH,0)) I ZTSK>0 S X=^(ZTSK),^%ZTSCH($$H3(ZTDTH),ZTSK)=X K ^%ZTSCH(ZTDTH,ZTSK)
"RTN","ZTM",102,0)
 . L -^%ZTSCH(ZTDTH)
"RTN","ZTM",103,0)
 . Q
"RTN","ZTM",104,0)
I6 ;Check on persistent jobs.
"RTN","ZTM",105,0)
 S ZTSK=0 F  S ZTSK=$O(^%ZTSCH("TASK",ZTSK)) Q:ZTSK'>0  D:$D(^%ZTSCH("TASK",ZTSK,"P"))
"RTN","ZTM",106,0)
 . L +^%ZTSCH("TASK",ZTSK):0 E  Q  ;Still running
"RTN","ZTM",107,0)
 . L -^%ZTSCH("TASK",ZTSK)
"RTN","ZTM",108,0)
 . D REQP^%ZTLOAD3(ZTSK) ;START NEW TASK.
"RTN","ZTM",109,0)
I9 K %ZTVS Q
"RTN","ZTM",110,0)
 ;
"RTN","ZTM",111,0)
DIFF(N,O,T) ;Diff in sec.
"RTN","ZTM",112,0)
 Q:$G(T) N-O ;For new seconds times
"RTN","ZTM",113,0)
 Q N-O*86400-$P(O,",",2)+$P(N,",",2)
"RTN","ZTM",114,0)
 ;
"RTN","ZTM",115,0)
OOS(BV) ;Check if Box-Volume is Out Of Service, Return 1 if OOS.
"RTN","ZTM",116,0)
 Q:BV="" 0 N %
"RTN","ZTM",117,0)
 S %=$O(^%ZIS(14.7,"B",BV,0)),%=$G(^%ZIS(14.7,+%,0))
"RTN","ZTM",118,0)
 Q:%="" 1 Q $P(%,U,11)=1
"RTN","ZTM",119,0)
 ;
"RTN","ZTM",120,0)
H3(%) ;Convert $H to seconds.
"RTN","ZTM",121,0)
 Q 86400*%+$P(%,",",2)
"RTN","ZTM",122,0)
H0(%) ;Covert from seconds to $H
"RTN","ZTM",123,0)
 Q (%\86400)_","_(%#86400)
"RTN","ZTM",124,0)
SUBOK() ;Check if sub's are starting, return 1 if OK
"RTN","ZTM",125,0)
 S ^%ZTSCH("SUB",%ZTPAIR,0)=$G(^%ZTSCH("SUB",%ZTPAIR,0))+1
"RTN","ZTM",126,0)
 Q ^%ZTSCH("SUB",%ZTPAIR,0)<10
"RTN","ZTM",127,0)
 ;
"RTN","ZTM",128,0)
NEWSUB() ;See if we need a new submanager
"RTN","ZTM",129,0)
 N JOBCNT,SUBS,%1,%2
"RTN","ZTM",130,0)
 S SUBS=^%ZTSCH("SUB",%ZTPAIR),JOBCNT=0,%1=$NA(^%ZTSCH("JOB"))
"RTN","ZTM",131,0)
 I SUBS<%ZTPFLG("MINSUB") Q 1
"RTN","ZTM",132,0)
 F  S %1=$Q(@%1) Q:%1'["JOB"  S JOBCNT=JOBCNT+1 Q:JOBCNT>SUBS
"RTN","ZTM",133,0)
 I SUBS<JOBCNT Q 1
"RTN","ZTM",134,0)
 Q 0
"RTN","ZTM0")
0^10^B11585005
"RTN","ZTM0",1,0)
%ZTM0 ;SEA/RDS-TaskMan: Manager, Part 2 (Begin) ;10/02/97  16:27
"RTN","ZTM0",2,0)
 ;;8.0;KERNEL;**42,36,67**;JUL 10, 1995
"RTN","ZTM0",3,0)
 ;
"RTN","ZTM0",4,0)
START ;Entry Point--start Task Manager at system startup
"RTN","ZTM0",5,0)
 S X="ER^%ZTM5",@^%ZOSF("TRAP"),^%ZTSCH("ER")=""
"RTN","ZTM0",6,0)
 L ^%ZTSCH
"RTN","ZTM0",7,0)
 K ^%ZTSCH("DEV"),^("LOAD"),^("LOADA"),^("STATUS"),^("STOP"),^("UPDATE")
"RTN","ZTM0",8,0)
 S ZTS=0 F  S ZTS=$O(^%ZTSCH("TASK",ZTS)) Q:'ZTS  S $P(^%ZTSK(ZTS,.1),"^",1,3)="E^"_$H_"^"
"RTN","ZTM0",9,0)
 D SETUP
"RTN","ZTM0",10,0)
 K ^%ZTSCH("TASK"),^%ZTSCH("SUB")
"RTN","ZTM0",11,0)
 S ^%ZTSCH("IDLE")=0,^%ZTSCH("SUB",%ZTPAIR)=0,^(%ZTPAIR,0)=0
"RTN","ZTM0",12,0)
 D STATUS^%ZTM("RUN^Startup Hang")
"RTN","ZTM0",13,0)
 L  H 90
"RTN","ZTM0",14,0)
S1 ;
"RTN","ZTM0",15,0)
 I "CFO"[%ZTYPE G BADTYPE
"RTN","ZTM0",16,0)
 D STATUS^%ZTM("RUN^Startup jobs")
"RTN","ZTM0",17,0)
 S %ZTLOOP=0 D CHECK^%ZTM
"RTN","ZTM0",18,0)
 S ZTU="" F  S ZTU=$O(^%ZTSCH("STARTUP",ZTU)),ZTO="" Q:ZTU=""  F  S ZTO=$O(^%ZTSCH("STARTUP",ZTU,ZTO)) Q:ZTO=""  D
"RTN","ZTM0",19,0)
 . S ZTSAVE("XQY")=$P(ZTO,"Q",2) ;This must be set for %ZTLOAD
"RTN","ZTM0",20,0)
 . S ZTDTH=$H,ZTIO=$P(^%ZTSCH("STARTUP",ZTU,ZTO),"^",2),ZTRTN="ZTSK^XQ1",ZTSAVE($S(ZTO["Q":"XQSCH",1:"XQY"))=+ZTO,ZTUCI=$P(ZTU,","),ZTCPU=$P(ZTU,",",2)
"RTN","ZTM0",21,0)
 . D ^%ZTLOAD
"RTN","ZTM0",22,0)
 . Q
"RTN","ZTM0",23,0)
 S ZTU="" F  S ZTU=$O(^%ZTSCH("C",ZTU)) Q:ZTU=""  S ^%ZTSCH("C",ZTU)=0 ;Reset VS counts in C list.
"RTN","ZTM0",24,0)
 K %ZTI,%ZTY,ZTIO,ZTO,ZTP,ZTSK,ZTU
"RTN","ZTM0",25,0)
 G ^%ZTM
"RTN","ZTM0",26,0)
 ;
"RTN","ZTM0",27,0)
RESTART ;Entry Point--restart Task Manager
"RTN","ZTM0",28,0)
 S X="ER^%ZTM5",@^%ZOSF("TRAP"),^%ZTSCH("ER")=""
"RTN","ZTM0",29,0)
 K ^%ZTSCH("STATUS"),^("STOP")
"RTN","ZTM0",30,0)
 D SETUP
"RTN","ZTM0",31,0)
 I '$D(^%ZTSCH("IDLE")) S ^%ZTSCH("IDLE")=0
"RTN","ZTM0",32,0)
 I '$D(^%ZTSCH("SUB",%ZTPAIR)) S ^%ZTSCH("SUB",%ZTPAIR)=0
"RTN","ZTM0",33,0)
 I "CFO"[%ZTYPE G BADTYPE
"RTN","ZTM0",34,0)
 D STATUS^%ZTM("RUN^Restart")
"RTN","ZTM0",35,0)
 G ^%ZTM
"RTN","ZTM0",36,0)
 ;
"RTN","ZTM0",37,0)
 ;
"RTN","ZTM0",38,0)
SETUP ;Setup Task Manager's Environment
"RTN","ZTM0",39,0)
 S ^%ZTSCH("RUN")=$H
"RTN","ZTM0",40,0)
 D STATUS^%ZTM("RUN^Setup")
"RTN","ZTM0",41,0)
 D ZOSF I Y]"" D STATUS^%ZTM("PAUSE^The following required ^%ZOSF nodes are undefined: "_Y_".") H 60 G SETUP
"RTN","ZTM0",42,0)
 S %ZTOS=^%ZOSF("OS"),U="^"
"RTN","ZTM0",43,0)
 D GETENV^%ZOSV S %ZTUCI=$P(Y,U),%ZTVOL=$P(Y,U,2),%ZTNODE=$P(Y,U,3),%ZTPAIR=$P(Y,U,4)
"RTN","ZTM0",44,0)
 D UPDATE^%ZTM5 I $D(ZTREQUIR)#2 D STATUS^%ZTM("PAUSE^Required link to "_ZTREQUIR_" is down.") H 60 G SETUP
"RTN","ZTM0",45,0)
 D JOB,NOLOG^%ZOSV S %ZTNLG=Y,DTIME=0,DUZ=0,DUZ(0)="@"
"RTN","ZTM0",46,0)
 K Z D NAME K X,Y,Z,ZT
"RTN","ZTM0",47,0)
 Q
"RTN","ZTM0",48,0)
 ;
"RTN","ZTM0",49,0)
ZOSF ;SETUP--determine whether any required ^%ZOSF nodes are missing
"RTN","ZTM0",50,0)
 S Y=""
"RTN","ZTM0",51,0)
 F X="ACTJ","ERRTN","OS","PROD","TRAP","UCI","UCICHECK","VOL" I $D(^%ZOSF(X))[0 S Y=Y_","_X
"RTN","ZTM0",52,0)
 I Y]"" S Y=$E(Y,2,$L(Y))
"RTN","ZTM0",53,0)
 Q
"RTN","ZTM0",54,0)
 ;
"RTN","ZTM0",55,0)
JOB ;SETUP--setup JOB command
"RTN","ZTM0",56,0)
 I %ZTOS["VAX DSM" D  Q
"RTN","ZTM0",57,0)
 . S:%ZTPFLG("DCL")="" %ZTJOB="J ^%ZTMS:(OPTION=""/UCI=""_$P(ZTUCI,"","")_""/VOL=""_ZTDVOL):5"
"RTN","ZTM0",58,0)
 . S:%ZTPFLG("DCL")]"" %ZTJOB="D ^%ZTMDCL"
"RTN","ZTM0",59,0)
 . Q
"RTN","ZTM0",60,0)
 ;I %ZTOS["DSM" S %ZTJOB="J ^%ZTMS[ZTUCI]:%ZTSIZ" Q
"RTN","ZTM0",61,0)
 I %ZTOS["M/SQL" S %ZTJOB="J ^%ZTMS:ZTUCI" Q
"RTN","ZTM0",62,0)
 I %ZTOS["MSM" S %ZTJOB="J ^%ZTMS[ZTUCI,ZTDVOL]:%ZTSIZ:5" Q  ;Set Maxpartsiz
"RTN","ZTM0",63,0)
 I %ZTOS["DTM" S %ZTJOB="J ^%ZTMS:(NSPACE=ZTUCI)" Q
"RTN","ZTM0",64,0)
 I %ZTOS["OpenM-NT" S %ZTJOB="J ^%ZTMS:ZTUCI:5" Q
"RTN","ZTM0",65,0)
 S %ZTJOB="Q"
"RTN","ZTM0",66,0)
 Q
"RTN","ZTM0",67,0)
 ;
"RTN","ZTM0",68,0)
NAME ;Give a name to process.
"RTN","ZTM0",69,0)
 S X="NAME^%ZTM0",@^%ZOSF("TRAP"),Z=$G(Z)+1 Q:Z>9  S X="Taskman "_%ZTVOL_" "_Z D SETENV^%ZOSV
"RTN","ZTM0",70,0)
 Q
"RTN","ZTM0",71,0)
BADTYPE ;Taskman should not run on this type of node.
"RTN","ZTM0",72,0)
 K ^%ZTSCH("STATUS")
"RTN","ZTM0",73,0)
 S ^%ZTSCH("RUN")=%ZTPAIR_" is the wrong type in taskman site parameters."
"RTN","ZTM0",74,0)
 Q
"RTN","ZTMS")
0^9^B12456789
"RTN","ZTMS",1,0)
%ZTMS ;SEA/RDS-TaskMan: Submanager, (Entry & Trap) ;11/18/97  11:01
"RTN","ZTMS",2,0)
 ;;8.0;KERNEL;**2,18,24,36,67**;Jul 10, 1995
"RTN","ZTMS",3,0)
 ;
"RTN","ZTMS",4,0)
START ;Bottom level of submanager
"RTN","ZTMS",5,0)
 I $$NEWERR^%ZTER() S $ETRAP="S %ZTER11S=$STACK D ERROR^%ZTMS HALT"
"RTN","ZTMS",6,0)
 E  S X="ERROR^%ZTMS",@^%ZOSF("TRAP")
"RTN","ZTMS",7,0)
 I $D(^%ZTSCH("STOP")) Q
"RTN","ZTMS",8,0)
 D NOW^%DTC S ZTQUEUED=0,U="^",DT=X
"RTN","ZTMS",9,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$STRT ZTMS")
"RTN","ZTMS",10,0)
 S X="Sub "_$J D SETENV^%ZOSV
"RTN","ZTMS",11,0)
 D PARAMS G:$D(ZTOUT) QUIT
"RTN","ZTMS",12,0)
 S ^%ZTSCH("SUB",ZTPFLG("HOME"),0)=0
"RTN","ZTMS",13,0)
 G SUBMGR^%ZTMS1
"RTN","ZTMS",14,0)
 ;
"RTN","ZTMS",15,0)
QUIT I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$STOP ZTMS")
"RTN","ZTMS",16,0)
 Q
"RTN","ZTMS",17,0)
PARAMS ;
"RTN","ZTMS",18,0)
 ;START--lookup parameters
"RTN","ZTMS",19,0)
 X ^%ZOSF("PRIINQ") S %ZTMS("PRIO")=Y ;Get starting priority
"RTN","ZTMS",20,0)
 D GETENV^%ZOSV
"RTN","ZTMS",21,0)
 S ZTCPU=$P(Y,U,2),ZTNODE=$P(Y,U,3),ZTPAIR=$P(Y,U,4),ZTUCI=$P(Y,U)_$S(ZTCPU]"":","_ZTCPU,1:"")
"RTN","ZTMS",22,0)
 S X=$O(^%ZIS(14.7,"B",ZTPAIR,0)),ZTPFLG("RT")=0,ZTPFLG("MIN")=1,ZTYPE=""
"RTN","ZTMS",23,0)
 I X>0 S %=$G(^%ZIS(14.7,X,0)) D
"RTN","ZTMS",24,0)
 . S ZTPFLG("RT")=+$P(%,U,6),ZTYPE=$P(%,U,9) S:$P(%,U,12)>1 ZTPFLG("MIN")=$P(%,U,12)
"RTN","ZTMS",25,0)
 . S ZTPFLG("HOME")=$S($P(%,U,13):$P(^%ZIS(14.7,+$P(%,U,13),0),U),1:ZTPAIR)
"RTN","ZTMS",26,0)
 . Q
"RTN","ZTMS",27,0)
 I "FO"[ZTYPE S ZTOUT=1 Q  ;SM only run on C,P,G types
"RTN","ZTMS",28,0)
 Q
"RTN","ZTMS",29,0)
ERROR ;START--trap
"RTN","ZTMS",30,0)
 ;prepare to handle error, set backup trap
"RTN","ZTMS",31,0)
 S %ZTERLGR=$$LGR^%ZOSV
"RTN","ZTMS",32,0)
 S %ZTME=$$EC^%ZOSV,ZTERROH=$H
"RTN","ZTMS",33,0)
 I $$NEWERR^%ZTER() S $ETRAP="D ERROR2^%ZTMS0 HALT"
"RTN","ZTMS",34,0)
 E  S %ZX=$G(X,"undef"),X="ERROR2^%ZTMS0",@^%ZOSF("TRAP")
"RTN","ZTMS",35,0)
 S %ZTMETSK=$S($D(%ZTTV)#2:$P(%ZTTV,"^",4),$G(ZTSK)>0:ZTSK,1:0)
"RTN","ZTMS",36,0)
 I %ZTMETSK L ^%ZTSK(%ZTMETSK) ;Unlock all other locks
"RTN","ZTMS",37,0)
 I $G(IO)]"" L +^%ZTSCH("DEV",IO) ;Keep other tasks from IO device.
"RTN","ZTMS",38,0)
 ;Check if to record error
"RTN","ZTMS",39,0)
 I '$$SCREEN^%ZTER(%ZTME) D
"RTN","ZTMS",40,0)
 . D ^%ZTER ;Kernel error file
"RTN","ZTMS",41,0)
 . ;log error and context in TaskMan Error file
"RTN","ZTMS",42,0)
 . L +^%ZTSCH("ER") H 1 S ZTERROH=$H
"RTN","ZTMS",43,0)
 . S ^%ZTSCH("ER",+ZTERROH,$P(ZTERROH,",",2))=%ZTME
"RTN","ZTMS",44,0)
 . D XREF^%ZTMS0
"RTN","ZTMS",45,0)
 . S ^%ZTSCH("ER",+ZTERROH,$P(ZTERROH,",",2),1)=ZTERROX1
"RTN","ZTMS",46,0)
 . L -^%ZTSCH("ER")
"RTN","ZTMS",47,0)
 . Q
"RTN","ZTMS",48,0)
 ;
"RTN","ZTMS",49,0)
 I $D(ZTDEVOK) S $P(^%ZTSCH("IO"),U,2)=ZTDEVOK ;Have others skip dev.
"RTN","ZTMS",50,0)
 ;Update Task file entry
"RTN","ZTMS",51,0)
 I $G(ZTQUEUED),%ZTMETSK,$D(^%ZTSK(%ZTMETSK)) D STATUS^%ZTMS0
"RTN","ZTMS",52,0)
 ;
"RTN","ZTMS",53,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$ETRP ZTMS")
"RTN","ZTMS",54,0)
 I ZTQUEUED>.9,%ZTMETSK>0,$G(DUZ)>.9,$D(^DD(8992,.01,0)) D
"RTN","ZTMS",55,0)
 . S XQA(DUZ)="",XQAMSG="Your task #"_%ZTMETSK_" stopped because of an error",XQADATA=%ZTMETSK,XQAROU="XQA^XUTMUTL"
"RTN","ZTMS",56,0)
 . D SETUP^XQALERT Q
"RTN","ZTMS",57,0)
 ;
"RTN","ZTMS",58,0)
CLEAN ;clean up global data related to this process
"RTN","ZTMS",59,0)
 I $G(ZTQUEUED)>.9,'$D(^%ZTSCH("TASK",ZTQUEUED,"P")) K ^%ZTSCH("TASK",ZTQUEUED)
"RTN","ZTMS",60,0)
 K ^TMP($J),^UTILITY($J),^XUTL("XQ",$J)
"RTN","ZTMS",61,0)
 I '$G(ZTQUEUED) D SUB^%ZTMS1(-1)
"RTN","ZTMS",62,0)
 I $D(ZTDEVN)#2,$D(%ZTIO)#2,%ZTIO]"" D DEVLK^%ZTMS1(-1,%ZTIO)
"RTN","ZTMS",63,0)
 I $D(ZTDEVOK)#2 D DEVBAD^%ZTMS0
"RTN","ZTMS",64,0)
 I $G(ZTSYNCFL)]"" S X=$$SYNCFLG^%ZTMS2("S",ZTSYNCFL,"","Stopped because of an error")
"RTN","ZTMS",65,0)
 ;
"RTN","ZTMS",66,0)
CLOSE ;close i/o device after error
"RTN","ZTMS",67,0)
 D ERCLOZ^%ZTMS0
"RTN","ZTMS",68,0)
 I $G(IO)]"" C IO H 5 ;In case of a port problem give it time to reset.
"RTN","ZTMS",69,0)
 ;
"RTN","ZTMS",70,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$ESTP ZTMS")
"RTN","ZTMS",71,0)
 I ZTQUEUED=.5,%ZTMETSK>0,$P($G(^%ZTSK(%ZTMETSK,.12)),"^")<5 D  ;Only try 5 times
"RTN","ZTMS",72,0)
 . S $P(^(.12),"^")=^%ZTSK(%ZTMETSK,.12)+1
"RTN","ZTMS",73,0)
 . S ^%ZTSCH($$NEWH^%ZTMS2($H,600),%ZTMETSK)=""
"RTN","ZTMS",74,0)
 HALT  ;Start a new process to continue
"RTN","ZTMS2")
0^13^B16642594
"RTN","ZTMS2",1,0)
%ZTMS2 ;SEA/RDS-TaskMan: Submanager, Part 4 (Unload, Get Device) ;11/18/97  11:20
"RTN","ZTMS2",2,0)
 ;;8.0;KERNEL;**2,18,23,36,67**;Jul 10, 1995
"RTN","ZTMS2",3,0)
 ;^%ZTSK(ZTSK) is locked on entry or return from GETNEXT
"RTN","ZTMS2",4,0)
PROCESS ;SUBMGR--process task and all others waiting for same device
"RTN","ZTMS2",5,0)
 D LOOKUP I $D(ZTREJECT) Q
"RTN","ZTMS2",6,0)
 D DEVICE
"RTN","ZTMS2",7,0)
 Q:POP
"RTN","ZTMS2",8,0)
 I ZTSYNCFL]"",'$$SYNCFLG("A",ZTSYNCFL,%ZTIO) D SYNCQ(ZTSYNCFL,%ZTIO,ZTDTH,ZTSK),^%ZISC Q
"RTN","ZTMS2",9,0)
 D TASK^%ZTMS3 I ZTYPE="C"!$D(ZTNONEXT) Q
"RTN","ZTMS2",10,0)
 D GETNEXT^%ZTMS7 I $D(ZTNONEXT)!$D(ZTQUIT) Q
"RTN","ZTMS2",11,0)
 G PROCESS
"RTN","ZTMS2",12,0)
 ;
"RTN","ZTMS2",13,0)
LOOKUP ;PROCESS--unload task, switch ucis, and test entry routine
"RTN","ZTMS2",14,0)
 K (%ZTIO,DT,IO,U,ZTCPU,ZTDEVN,ZTDTH,ZTNODE,ZTPAIR,ZTPFLG,ZTQUEUED,ZTSK,ZTUCI,ZTYPE)
"RTN","ZTMS2",15,0)
 D TSTAT(4,"")
"RTN","ZTMS2",16,0)
 S ZTREC=^%ZTSK(ZTSK,0),ZTREC02=^(.02)
"RTN","ZTMS2",17,0)
 S ZTREC2=^%ZTSK(ZTSK,.2),ZTREC21=^(.21),ZTREC25=^(.25)
"RTN","ZTMS2",18,0)
 S ZTSYNCFL=$P(ZTREC2,"^",7),DUZ=+$P(ZTREC,U,3),DUZ(0)="@"
"RTN","ZTMS2",19,0)
 S X=$P(ZTREC02,U)_","_$P(ZTREC02,U,2)
"RTN","ZTMS2",20,0)
 I $P(ZTREC02,U,4) S $P(X,",",2)=ZTCPU
"RTN","ZTMS2",21,0)
 ;should do a check to see if X is OK, Should check UCI mapping.
"RTN","ZTMS2",22,0)
 I X'=ZTUCI S ZTUCI=X D SWAP^%XUCI
"RTN","ZTMS2",23,0)
 S X=$P($P(ZTREC,U,2),"("),ZTRTN=$P(ZTREC,U,1,2)
"RTN","ZTMS2",24,0)
 I $E(X)'="%" X ^%ZOSF("TEST"):X]"" I X=""!'$T D REJECT S ZTREJECT=""
"RTN","ZTMS2",25,0)
 Q
"RTN","ZTMS2",26,0)
 ;
"RTN","ZTMS2",27,0)
REJECT ;LOOKUP--entry routine isn't here; reject task
"RTN","ZTMS2",28,0)
 N Y X ^%ZOSF("UCI")
"RTN","ZTMS2",29,0)
 D TSTAT("B","No routine at destination "_Y_".")
"RTN","ZTMS2",30,0)
 I $D(ZTDEVN) D DEVLK^%ZTMS1(-1,%ZTIO) K ZTDEVN
"RTN","ZTMS2",31,0)
 L  Q  ;Clear all locks
"RTN","ZTMS2",32,0)
 ;
"RTN","ZTMS2",33,0)
DEVICE ;PROCESS--prepare requested device; if can't, make task wait
"RTN","ZTMS2",34,0)
 ;shortcut & screen
"RTN","ZTMS2",35,0)
 S ZTIO=$P(ZTREC2,U),ZTIOT=$P(ZTREC2,U,3)
"RTN","ZTMS2",36,0)
 I ZTIO="" S (IO,IO(0),IOF,ION,IOS,IOST,IOT)="",POP=0 Q
"RTN","ZTMS2",37,0)
 ;
"RTN","ZTMS2",38,0)
 ;setup call
"RTN","ZTMS2",39,0)
 S %ZIS="LRS0"_$S($P(ZTREC2,U,5)="DIRECT":"D",1:"")
"RTN","ZTMS2",40,0)
 S:ZTIOT="HFS" %ZIS("HFSIO")=$P(ZTREC2,U,6),%ZIS("IOPAR")=ZTREC25
"RTN","ZTMS2",41,0)
 S:ZTIOT="MT" %ZIS("IOPAR")=ZTREC25
"RTN","ZTMS2",42,0)
 S (IO,IO(0))=%ZTIO,IOP=ZTIO
"RTN","ZTMS2",43,0)
 K ^XUTL("XQ",$J)
"RTN","ZTMS2",44,0)
 ;
"RTN","ZTMS2",45,0)
 S:$P(ZTREC2,U,4)["MINIOUT" %ZISLOCK="^%ZTSCH(""NETMAIL"",IO)" ;The hang is on the close
"RTN","ZTMS2",46,0)
 ;call
"RTN","ZTMS2",47,0)
 S %ZISTO=3 D ^%ZIS K %ZISTO,%ZISLOCK ;See that we use a timeout.
"RTN","ZTMS2",48,0)
 I %ZTIO]"" D DEVLK^%ZTMS1(-1,%ZTIO) K ZTDEVN
"RTN","ZTMS2",49,0)
 I 'POP,%ZTIO]"",IO'=%ZTIO C %ZTIO K IO(1,%ZTIO) S %ZTIO=IO ;Reset %ZTIO if IO doesn't match
"RTN","ZTMS2",50,0)
 ;
"RTN","ZTMS2",51,0)
 ;results
"RTN","ZTMS2",52,0)
 I POP,(ZTYPE'="C"),(ZTIOT="TRM")!(ZTIOT="RES")!(ZTIOT="HG") D IONQ Q  ;only add to IO queue if not type C.
"RTN","ZTMS2",53,0)
 I POP D SCHNQ Q
"RTN","ZTMS2",54,0)
 I IOT'="RES",IOT'="HG" U IO
"RTN","ZTMS2",55,0)
 S IO(0)=IO
"RTN","ZTMS2",56,0)
 I $P(^%ZIS(1,+IOS,0),U,7)="y" D ^%ZTMSH
"RTN","ZTMS2",57,0)
 Q
"RTN","ZTMS2",58,0)
 ;
"RTN","ZTMS2",59,0)
IONQ ;DEVICE--put task on Device Waiting List
"RTN","ZTMS2",60,0)
 L +^%ZTSCH("IO")
"RTN","ZTMS2",61,0)
 I $D(^%ZTSK(ZTSK,0))[0 D TSTAT("I",4) G IOQX
"RTN","ZTMS2",62,0)
 D TSTAT("A","")
"RTN","ZTMS2",63,0)
 S ZTIO(1)=$P(ZTREC2,U,5),ZTIOS=ZTREC21
"RTN","ZTMS2",64,0)
 D NQ^%ZTM4
"RTN","ZTMS2",65,0)
IOQX L  Q  ;Clear all Locks
"RTN","ZTMS2",66,0)
 ;
"RTN","ZTMS2",67,0)
SCHNQ ;DEVICE--if HFS or SPL or TYPE'=C, reschedule task 10 min in future (try later)
"RTN","ZTMS2",68,0)
 S ZTH=$$NEWH($H,300)
"RTN","ZTMS2",69,0)
 L +^%ZTSCH(ZTH,ZTSK)
"RTN","ZTMS2",70,0)
 D TSTAT(1,"rescheduled for busy device")
"RTN","ZTMS2",71,0)
 S ^%ZTSCH(ZTH,ZTSK)=""
"RTN","ZTMS2",72,0)
 L  Q  ;Clear all locks
"RTN","ZTMS2",73,0)
 ;
"RTN","ZTMS2",74,0)
NEWH(%H,%Y) ;Build a new schedule time, Return $H3 time.
"RTN","ZTMS2",75,0)
 N %
"RTN","ZTMS2",76,0)
 I %H["," S %H=$$H3^%ZTM(%H)
"RTN","ZTMS2",77,0)
 Q (%H+%Y)
"RTN","ZTMS2",78,0)
 ;
"RTN","ZTMS2",79,0)
SYNCFLG(ACT,FLAG,ZIO,STAT) ;Allocate/deallocate sync flag
"RTN","ZTMS2",80,0)
 N X,DA,SYNC
"RTN","ZTMS2",81,0)
 L +^%ZISL(14.8):30 E  Q 0
"RTN","ZTMS2",82,0)
 S X=0,SYNC=ZIO_"~"_FLAG,DA=$O(^%ZISL(14.8,"B",SYNC,0))
"RTN","ZTMS2",83,0)
 I ACT["A" D
"RTN","ZTMS2",84,0)
 . I DA S X=0 Q
"RTN","ZTMS2",85,0)
 . ;I $D(^%ZTSCH("SYNC",ZIO,FLAG)) S X=0 Q
"RTN","ZTMS2",86,0)
 . S X=$P(^%ZISL(14.8,0),"^",3)+1 F  Q:'$D(^%ZISL(14.8,X))  S X=X+1
"RTN","ZTMS2",87,0)
 . S $P(^(0),"^",3,4)=X_"^"_($P(^%ZISL(14.8,0),"^",4)+1),^%ZISL(14.8,X,0)=SYNC,^%ZISL(14.8,"B",SYNC,X)=""
"RTN","ZTMS2",88,0)
 . S X=1 Q
"RTN","ZTMS2",89,0)
 I ACT["D" D  S X=1
"RTN","ZTMS2",90,0)
 . Q:DA'>0
"RTN","ZTMS2",91,0)
 . K ^%ZISL(14.8,DA),^%ZISL(14.8,"B",SYNC,DA)
"RTN","ZTMS2",92,0)
 . S $P(^(0),"^",3,4)=(DA-1)_"^"_($P(^%ZISL(14.8,0),"^",4)-1)
"RTN","ZTMS2",93,0)
 . Q
"RTN","ZTMS2",94,0)
 I ACT["S" D  S X=1
"RTN","ZTMS2",95,0)
 . Q:DA'>0
"RTN","ZTMS2",96,0)
 . S ^%ZISL(14.8,DA,1)=$G(STAT)
"RTN","ZTMS2",97,0)
 . Q
"RTN","ZTMS2",98,0)
 I ACT["?" S X=(DA)!($D(^%ZTSCH("SYNC",ZIO,FLAG)))
"RTN","ZTMS2",99,0)
 L -^%ZISL(14.8)
"RTN","ZTMS2",100,0)
 Q X
"RTN","ZTMS2",101,0)
 ;
"RTN","ZTMS2",102,0)
SYNCQ(FLAG,ZIO,ZTH,ZTSK) ;Put task on sync flag waiting list
"RTN","ZTMS2",103,0)
 L +^%ZTSCH("SYNC")
"RTN","ZTMS2",104,0)
 S ^%ZTSCH("SYNC",ZIO,FLAG,ZTSK)=ZTH
"RTN","ZTMS2",105,0)
 L -^%ZTSCH("SYNC")
"RTN","ZTMS2",106,0)
 Q
"RTN","ZTMS2",107,0)
SCHSYNC(FLAG,ZIO) ;put a waiting task in IO queue
"RTN","ZTMS2",108,0)
 L +^%ZTSCH("SYNC") I $D(^%ZTSCH("SYNC",ZIO,FLAG)) N ZTH,ZTSK D
"RTN","ZTMS2",109,0)
 . S ZTSK=$O(^(FLAG,0)),ZTH=$G(^(+ZTSK)) Q:ZTSK=""  S:$D(^%ZTSCH("IO",ZIO))[0 ^(ZIO)=IOT
"RTN","ZTMS2",110,0)
 . S ^%ZTSCH("IO",ZIO,ZTH,ZTSK)=""
"RTN","ZTMS2",111,0)
 . K ^%ZTSCH("SYNC",ZIO,FLAG,ZTSK)
"RTN","ZTMS2",112,0)
 . Q
"RTN","ZTMS2",113,0)
 L -^%ZTSCH("SYNC")
"RTN","ZTMS2",114,0)
 Q
"RTN","ZTMS2",115,0)
TSTAT(CODE,TXT) ;Record status
"RTN","ZTMS2",116,0)
 Q:$D(^%ZTSK(ZTSK,.1))[0
"RTN","ZTMS2",117,0)
 S $P(^%ZTSK(ZTSK,.1),U,1,3)=CODE_U_$H_U_TXT
"RTN","ZTMS2",118,0)
 Q
"RTN","ZTMS3")
0^4^B23276639
"RTN","ZTMS3",1,0)
%ZTMS3 ;SEA/RDS-TaskMan: Submanager, Part 5 (Run Task) ;01/13/98  14:15
"RTN","ZTMS3",2,0)
 ;;8.0;KERNEL;**1,18,36,49,64,67**;Jul 03, 1995
"RTN","ZTMS3",3,0)
 ;
"RTN","ZTMS3",4,0)
TASK ;SUBMGR--prepare and run task; cleanup after
"RTN","ZTMS3",5,0)
 ;
"RTN","ZTMS3",6,0)
BEFORE ;prepare task
"RTN","ZTMS3",7,0)
 ;submanager's variables
"RTN","ZTMS3",8,0)
 S ZTDEF=""
"RTN","ZTMS3",9,0)
 S X=$O(^%ZIS(14.7,"B",ZTPAIR,""))
"RTN","ZTMS3",10,0)
 I X]"",$D(^%ZIS(14.7,X,0))#2 S ZTDEF=^(0)
"RTN","ZTMS3",11,0)
 S DUZ=+$P(ZTREC,U,3)
"RTN","ZTMS3",12,0)
 S %ZTTV=ZTUCI_U_IOS_U_U_ZTSK_U_IO_U_IOT_U_ZTCPU_U_ZTNODE_U_DUZ_U_U_IOF_U_IOST_U_ZTPAIR_U_ZTYPE_U
"RTN","ZTMS3",13,0)
 S %ZTTV(0)=ZTRTN_U_$P(ZTREC,U,8,9)_U_$P(ZTREC,U,6)_U_ION_U_ZTUCI_U_$P(ZTREC,U,5)_U_$S($P(ZTREC,U,10)]"":$P(ZTREC,U,10),1:$P(ZTREC,U,3))_U_$J_U_ZTSYNCFL_U
"RTN","ZTMS3",14,0)
 S %ZTTV(2)=ZTPFLG("HOME")_U_ZTPFLG("MIN")_U_ZTPFLG("RT")
"RTN","ZTMS3",15,0)
 I $D(^%ZTSCH("LOGRSRC")) D
"RTN","ZTMS3",16,0)
 .S %ZTTV(1)="!"_$P(ZTREC,U,9)
"RTN","ZTMS3",17,0)
 .I %ZTTV(1)="!" S %ZTTV(1)="!"_$P(ZTRTN,U,2)
"RTN","ZTMS3",18,0)
 ;
"RTN","ZTMS3",19,0)
 ;external calls
"RTN","ZTMS3",20,0)
 D NOW^%DTC S DT=% ;DT is Date.time at this point.
"RTN","ZTMS3",21,0)
1 D SETNM^%ZOSV($E("BTask ",(ZTIO]"")+1,6)_(ZTSK#100000000))
"RTN","ZTMS3",22,0)
 ;
"RTN","ZTMS3",23,0)
 ;priority
"RTN","ZTMS3",24,0)
 S X=$P(ZTREC,U,15)
"RTN","ZTMS3",25,0)
 S X=$S(+X'=X:0,X'<1&(X'>10):X\1,1:0)
"RTN","ZTMS3",26,0)
 S Y=$S(IOS="":0,$D(^%ZIS(1,+IOS,0))[0:0,1:+$P(^(0),U,5))
"RTN","ZTMS3",27,0)
 S Y=$S(Y'<1&(Y'>10):Y\1,1:0)
"RTN","ZTMS3",28,0)
 S X=$S(Y:Y,X:X,$P(ZTDEF,U,4):$P(ZTDEF,U,4),1:10)
"RTN","ZTMS3",29,0)
 X ^%ZOSF("PRIORITY")
"RTN","ZTMS3",30,0)
 ;
"RTN","ZTMS3",31,0)
2 ;restore saved variables
"RTN","ZTMS3",32,0)
 S X=$O(^XTV(8989.3,1,4,"B",ZTCPU,0)) S:$P($G(^XTV(8989.3,1,4,+X,0)),U,6)="y" XRTL=ZTUCI
"RTN","ZTMS3",33,0)
 K %,%H,%I,%ZTI,%ZTIO,IO("C"),IO("T"),X,Y,ZTCPU,ZTDEF,ZTIOST,ZTIOT,ZTNODE,ZTPAIR,ZTPFLG,ZTREC,ZTREC2,ZTREC21,ZTREC25,ZTUCI,^TMP($J),^UTILITY($J),^XUTL("XQ",$J)
"RTN","ZTMS3",34,0)
 S DUZ(0)="" D RESTORE^%ZTMS4
"RTN","ZTMS3",35,0)
 ;
"RTN","ZTMS3",36,0)
 ;force values
"RTN","ZTMS3",37,0)
 S DUZ=+DUZ,DTIME=0,ZTDESC=$G(^%ZTSK(ZTSK,.03)),ZTDTH=$H
"RTN","ZTMS3",38,0)
 I DUZ(0)="" S DUZ(0)=$S($D(^VA(200,DUZ,0))#2:$P(^(0),U,4),1:"")
"RTN","ZTMS3",39,0)
 I $D(DUZ(2))[0 S DUZ(2)=$S($D(^VA(200,DUZ,2,0)):$O(^(0)),1:0)
"RTN","ZTMS3",40,0)
 S ^XUTL("XQ",$J,0)=DT,^("ZTSK")=ZTDESC,^("ZTSKNUM")=ZTSK
"RTN","ZTMS3",41,0)
 S X="DUZ" F  S X=$Q(@X) Q:X=""  I $D(@X) S ^XUTL("XQ",$J,$TR(X,""""))=@X
"RTN","ZTMS3",42,0)
 F X="DUZ","IO","IOBS","IOF","IOM","ION","IOS","IOSL","IOST","IOST(0)","IOT","IOXY","XQVOL" I $D(@X) S ^XUTL("XQ",$J,X)=@X
"RTN","ZTMS3",43,0)
3 ;
"RTN","ZTMS3",44,0)
 ;final checks & sets
"RTN","ZTMS3",45,0)
 I '$D(^%ZTSK(ZTSK)) S ZTTASK=0 D AFTER Q
"RTN","ZTMS3",46,0)
 I $S($D(^%ZTSK(ZTSK,.1))[0:0,1:$P(^(.1),U,10)]"") S $P(^%ZTSK(ZTSK,.1),U,1,3)="D^"_$H_"^4",ZTTASK=0 D AFTER Q
"RTN","ZTMS3",47,0)
 S $P(^%ZTSK(ZTSK,.1),U,1,3)=5_U_$H_U
"RTN","ZTMS3",48,0)
 S ZTQUEUED=ZTSK,ZTSTAT="1 General error"
"RTN","ZTMS3",49,0)
 S ^%ZTSCH("TASK",ZTSK)=%ZTTV(0)_$H
"RTN","ZTMS3",50,0)
 ;
"RTN","ZTMS3",51,0)
RUN ;run task
"RTN","ZTMS3",52,0)
 I ^%ZOSF("OS")["MSM" D
"RTN","ZTMS3",53,0)
 . I $P($ZV,"Version ",2)]]"4.3.0" D PURGELST^%MSMOPS Q
"RTN","ZTMS3",54,0)
 . I ^%ZOSF("OS")["MSM-PC/PLUS",$P($ZV,"Version ",2)]]"4.0.11D" V 360:$J:2**$V($V(58,-5)+8,-3,2)-1:4 ZSYNC  Q
"RTN","ZTMS3",55,0)
 . Q
"RTN","ZTMS3",56,0)
 L
"RTN","ZTMS3",57,0)
 L +^%ZTSCH("TASK",ZTSK) ;establish a lock on the task to be used to indicate that it is active
"RTN","ZTMS3",58,0)
 ;Persistent task get set in ZTSK^XQ1
"RTN","ZTMS3",59,0)
 I $P(^%ZIS(14.7,+$O(^%ZIS(14.7,"B",$P(%ZTTV,U,13),"")),0),U,3)="Y" D LOGIN^%ZTMS4
"RTN","ZTMS3",60,0)
 I $D(%ZTTV(1)) D LOGRSRC^%ZOSV(%ZTTV(1))
"RTN","ZTMS3",61,0)
 S DT=DT\1 S:ZTRTN="ZTSK^XQ1" ZTREQ="@"
"RTN","ZTMS3",62,0)
 X "N %ZTTV D @ZTRTN"
"RTN","ZTMS3",63,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$AFTR ZTMS")
"RTN","ZTMS3",64,0)
 I $P(^%ZIS(14.7,+$O(^%ZIS(14.7,"B",$P(%ZTTV,"^",13),"")),0),"^",3)="Y" D LOGOUT^%ZTMS4
"RTN","ZTMS3",65,0)
 ;
"RTN","ZTMS3",66,0)
AFTER ;cleanup after task; reset partition
"RTN","ZTMS3",67,0)
 S U="^",ZTSK=$P(%ZTTV,U,4) D PCLEAR^%ZTLOAD(ZTSK) ;Clear persistent flag
"RTN","ZTMS3",68,0)
 L  ;Clear all user locks.
"RTN","ZTMS3",69,0)
 L +^%ZTSK(ZTSK)
"RTN","ZTMS3",70,0)
 I $D(ZTTASK)[0 K ^%ZTSCH("TASK",ZTSK) S ZTQUEUED=.6,ZTTASK=1
"RTN","ZTMS3",71,0)
 S X=10 X ^%ZOSF("PRIORITY")
"RTN","ZTMS3",72,0)
 D SETNM^%ZOSV("Sub "_$J) ;Change name back
"RTN","ZTMS3",73,0)
 K ^TMP($J),^UTILITY($J),^XUTL("XQ",$J) I $T(XUTL^XUSCLEAN)]"" D XUTL^XUSCLEAN
"RTN","ZTMS3",74,0)
 S ZTUCI=$P(%ZTTV,U),IOS=$P(%ZTTV,U,2),(IO,IO(0),%ZTIO)=$P(%ZTTV,U,5),IOT=$P(%ZTTV,U,6),ZTCPU=$P(%ZTTV,U,7),ZTNODE=$P(%ZTTV,U,8)
"RTN","ZTMS3",75,0)
 S IOF=$P(%ZTTV,U,11),IOST=$P(%ZTTV,U,12),ZTPAIR=$P(%ZTTV,U,13),ZTYPE=$P(%ZTTV,U,14),ZTSYNCFL=$P(%ZTTV(0),U,11)
"RTN","ZTMS3",76,0)
 S ZTPFLG("HOME")=$P(%ZTTV(2),U,1),ZTPFLG("MIN")=$P(%ZTTV(2),U,2),ZTPFLG("RT")=$P(%ZTTV(2),U,3)
"RTN","ZTMS3",77,0)
 I $G(ZTSYNCFL)]"" S X=$$SYNCFLG^%ZTMS2($S($G(ZTSTAT):"S",1:"D"),ZTSYNCFL,IO,$G(ZTSTAT)) D SCHSYNC^%ZTMS2(ZTSYNCFL,IO):'$G(ZTSTAT)
"RTN","ZTMS3",78,0)
 D POST^%ZTMS4:ZTTASK,CLOSE
"RTN","ZTMS3",79,0)
 K (%ZTIO,%ZTTV,DT,IO,IOF,IOS,IOST,IOT,U,ZTCPU,ZTNODE,ZTNONEXT,ZTPAIR,ZTPFLG,ZTQUEUED,ZTREQ,ZTSTOP,ZTUCI,ZTYPE),IO("C"),IO("T"),IO("ERROR"),IO("LASTERR")
"RTN","ZTMS3",80,0)
 S DUZ=0,DUZ(0)="@",ZTQUEUED=0
"RTN","ZTMS3",81,0)
 L  ;Clear all locks, -^%ZTSK(ZTSK)
"RTN","ZTMS3",82,0)
 Q
"RTN","ZTMS3",83,0)
 ;
"RTN","ZTMS3",84,0)
CLOSE ;RUN--close &/or close execute
"RTN","ZTMS3",85,0)
 I %ZTIO="" S ZTNONEXT=1 G CLX
"RTN","ZTMS3",86,0)
 N ZTUCI,ZTCPU,ZTNODE,IOCPU,%IO
"RTN","ZTMS3",87,0)
 I IOT="HFS"!(IOT="SPL") S ZTNONEXT=1
"RTN","ZTMS3",88,0)
 K IO("C") S:IOT'="TRM" IO("C")=1
"RTN","ZTMS3",89,0)
 S:$D(IO("CLOSE")) IO("T")=1
"RTN","ZTMS3",90,0)
 ;Here is the Lock and hang to allow IDCU ports to reset. See %ZTMS2.
"RTN","ZTMS3",91,0)
 I IOST["MINIOUT" S IO("C")=1 L +^%ZTSCH("NETMAIL",%ZTIO):60
"RTN","ZTMS3",92,0)
 I $D(IO(1,IO))#2 D ^%ZISC
"RTN","ZTMS3",93,0)
 I IOST["MINIOUT" H 6 ;Wait for terminal server to reset.
"RTN","ZTMS3",94,0)
 ;Unlock of all locks is done in clean
"RTN","ZTMS3",95,0)
 ;See that all devices are closed.
"RTN","ZTMS3",96,0)
CLX S %IO="" F  S %IO=$O(IO(1,%IO)) Q:%IO=""  I %IO'=IO K IO(1,%IO) C %IO
"RTN","ZTMS3",97,0)
 Q
"RTN","ZTMS3",98,0)
 ;
"VER")
8.0^21.0
"^DD",19.2,19.2,9,0)
SPECIAL QUEUEING^SX^S:STARTUP;SP:Startup Persistent;P:Persistent;^0;9^Q
"^DD",19.2,19.2,9,1,0)
^.1
"^DD",19.2,19.2,9,1,1,0)
19.2^ASTARTUP^MUMPS
"^DD",19.2,19.2,9,1,1,1)
D S9^XUTMG19
"^DD",19.2,19.2,9,1,1,2)
D K9^XUTMG19
"^DD",19.2,19.2,9,1,1,3)
SPECIAL TASKMAN CALL
"^DD",19.2,19.2,9,1,1,"%D",0)
^^2^2^2940630^
"^DD",19.2,19.2,9,1,1,"%D",1,0)
This cross-reference causes the updating of the option as a startup option to 
"^DD",19.2,19.2,9,1,1,"%D",2,0)
be started when the system is started.
"^DD",19.2,19.2,9,1,1,"DT")
2910220
"^DD",19.2,19.2,9,3)

"^DD",19.2,19.2,9,21,0)
^^10^10^2971002^
"^DD",19.2,19.2,9,21,1,0)
If this Option is set for "STARTUP", then TaskMan will queue
"^DD",19.2,19.2,9,21,2,0)
the job to run whenever the TaskMan/computer is started up, i.e. at System
"^DD",19.2,19.2,9,21,3,0)
Boot. 
"^DD",19.2,19.2,9,21,4,0)
If this Option is set for "Startup/Persistent", then Taskman will
"^DD",19.2,19.2,9,21,5,0)
queue the job as it does for "STARTUP" and it will mark it as a persistent
"^DD",19.2,19.2,9,21,6,0)
task to be restarted if it stops unexpectedly.
"^DD",19.2,19.2,9,21,7,0)
If this Option is set for "Persistent" then TaskMan will run it on its
"^DD",19.2,19.2,9,21,8,0)
normal schedule, marking it as Persistent, This way TaskMan will restart
"^DD",19.2,19.2,9,21,9,0)
the task if it stops unexpectedly.
"^DD",19.2,19.2,9,21,10,0)
When a task stop in a normal fashion its persistent flag will be cleared.
"^DD",19.2,19.2,9,23,0)
^^2^2^2971002^
"^DD",19.2,19.2,9,23,1,0)
The persistent part is done at ZTSK^XQ1 when it looks back to the Option
"^DD",19.2,19.2,9,23,2,0)
Scheduleing file
"^DD",19.2,19.2,9,"DT")
2971002
**END**
**END**
