Released XU*8*435 SEQ #357
Extracted from mail message
**KIDS**:XU*8.0*435^

**INSTALL NAME**
XU*8.0*435
"BLD",973,0)
XU*8.0*435^KERNEL^0^3061120^y
"BLD",973,1,0)
^^3^3^3061103^^^
"BLD",973,1,1,0)
Patch XU*8*435 (FIX SPOOLER PRINT FOR NPI LISTS)
"BLD",973,1,2,0)
 
"BLD",973,1,3,0)
See Description in the patch module on Forum.
"BLD",973,4,0)
^9.64PA^200^1
"BLD",973,4,200,0)
200
"BLD",973,4,200,2,0)
^9.641^200.042^2
"BLD",973,4,200,2,200,0)
NEW PERSON  (File-top level)
"BLD",973,4,200,2,200,1,0)
^9.6411^41.99^1
"BLD",973,4,200,2,200,1,41.99,0)
NPI
"BLD",973,4,200,2,200.042,0)
EFFECTIVE DATE/TIME  (sub-file)
"BLD",973,4,200,2,200.042,1,0)
^9.6411^.01^1
"BLD",973,4,200,2,200.042,1,.01,0)
EFFECTIVE DATE/TIME
"BLD",973,4,200,222)
y^y^p^^^^n^^n
"BLD",973,4,200,224)

"BLD",973,4,"APDD",200,200)

"BLD",973,4,"APDD",200,200,41.99)

"BLD",973,4,"APDD",200,200.042)

"BLD",973,4,"APDD",200,200.042,.01)

"BLD",973,4,"B",200,200)

"BLD",973,6.3)
10
"BLD",973,"KRN",0)
^9.67PA^8989.52^19
"BLD",973,"KRN",.4,0)
.4
"BLD",973,"KRN",.401,0)
.401
"BLD",973,"KRN",.402,0)
.402
"BLD",973,"KRN",.403,0)
.403
"BLD",973,"KRN",.5,0)
.5
"BLD",973,"KRN",.84,0)
.84
"BLD",973,"KRN",3.6,0)
3.6
"BLD",973,"KRN",3.8,0)
3.8
"BLD",973,"KRN",9.2,0)
9.2
"BLD",973,"KRN",9.8,0)
9.8
"BLD",973,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",973,"KRN",9.8,"NM",1,0)
XUSNPIE2^^0^B63626145
"BLD",973,"KRN",9.8,"NM",2,0)
XUSNPIED^^0^B23954469
"BLD",973,"KRN",9.8,"NM",3,0)
XUSNPIE1^^0^B72497454
"BLD",973,"KRN",9.8,"NM","B","XUSNPIE1",3)

"BLD",973,"KRN",9.8,"NM","B","XUSNPIE2",1)

"BLD",973,"KRN",9.8,"NM","B","XUSNPIED",2)

"BLD",973,"KRN",19,0)
19
"BLD",973,"KRN",19.1,0)
19.1
"BLD",973,"KRN",101,0)
101
"BLD",973,"KRN",409.61,0)
409.61
"BLD",973,"KRN",771,0)
771
"BLD",973,"KRN",870,0)
870
"BLD",973,"KRN",8989.51,0)
8989.51
"BLD",973,"KRN",8989.52,0)
8989.52
"BLD",973,"KRN",8994,0)
8994
"BLD",973,"KRN","B",.4,.4)

"BLD",973,"KRN","B",.401,.401)

"BLD",973,"KRN","B",.402,.402)

"BLD",973,"KRN","B",.403,.403)

"BLD",973,"KRN","B",.5,.5)

"BLD",973,"KRN","B",.84,.84)

"BLD",973,"KRN","B",3.6,3.6)

"BLD",973,"KRN","B",3.8,3.8)

"BLD",973,"KRN","B",9.2,9.2)

"BLD",973,"KRN","B",9.8,9.8)

"BLD",973,"KRN","B",19,19)

"BLD",973,"KRN","B",19.1,19.1)

"BLD",973,"KRN","B",101,101)

"BLD",973,"KRN","B",409.61,409.61)

"BLD",973,"KRN","B",771,771)

"BLD",973,"KRN","B",870,870)

"BLD",973,"KRN","B",8989.51,8989.51)

"BLD",973,"KRN","B",8989.52,8989.52)

"BLD",973,"KRN","B",8994,8994)

"BLD",973,"QUES",0)
^9.62^^
"BLD",973,"REQB",0)
^9.611^^
"FIA",200)
NEW PERSON
"FIA",200,0)
^VA(200,
"FIA",200,0,0)
200I
"FIA",200,0,1)
y^y^p^^^^n^^n
"FIA",200,0,10)

"FIA",200,0,11)

"FIA",200,0,"RLRO")

"FIA",200,0,"VR")
8.0^XU
"FIA",200,200)
1
"FIA",200,200,41.99)

"FIA",200,200,42)

"FIA",200,200.042)
1
"FIA",200,200.042,.01)

"MBREQ")
0
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3051215^2970507^.5
"PKG",3,22,1,"PAH",1,0)
435^3061120
"PKG",3,22,1,"PAH",1,1,0)
^^3^3^3061120
"PKG",3,22,1,"PAH",1,1,1,0)
Patch XU*8*435 (FIX SPOOLER PRINT FOR NPI LISTS)
"PKG",3,22,1,"PAH",1,1,2,0)
 
"PKG",3,22,1,"PAH",1,1,3,0)
See Description in the patch module on Forum.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","XUSNPIE1")
0^3^B72497454^B70700540
"RTN","XUSNPIE1",1,0)
XUSNPIE1 ;FO-OAKLAND/JLI - NATIONAL PROVIDER IDENTIFIER DATA CAPTURE ;11/20/06  10:49
"RTN","XUSNPIE1",2,0)
 ;;8.0;KERNEL;**420,410,435**; July 10, 1995;Build 10
"RTN","XUSNPIE1",3,0)
 ;
"RTN","XUSNPIE1",4,0)
 Q
"RTN","XUSNPIE1",5,0)
 ;
"RTN","XUSNPIE1",6,0)
SET(XUSIEN,XUSNPI) ;
"RTN","XUSNPIE1",7,0)
 ; set value for NPI field (#41.99) in file #200
"RTN","XUSNPIE1",8,0)
 N OLDNPI S OLDNPI=$P($G(^VA(200,XUSIEN,"NPI")),"^")
"RTN","XUSNPIE1",9,0)
 I OLDNPI K ^VA(200,"ANPI",OLDNPI,XUSIEN)
"RTN","XUSNPIE1",10,0)
 S ^VA(200,XUSIEN,"NPI")=XUSNPI_U_"D",^VA(200,"ANPI",XUSNPI,XUSIEN)=""
"RTN","XUSNPIE1",11,0)
 Q
"RTN","XUSNPIE1",12,0)
 ;
"RTN","XUSNPIE1",13,0)
SET1(XUSIEN,XUSNPI) ;
"RTN","XUSNPIE1",14,0)
 ; set value for NPI field (#41.99) in file #4
"RTN","XUSNPIE1",15,0)
 N OLDNPI S OLDNPI=$P($G(^DIC(4,XUSIEN,"NPI")),"^")
"RTN","XUSNPIE1",16,0)
 I OLDNPI K ^DIC(4,"ANPI",OLDNPI,XUSIEN)
"RTN","XUSNPIE1",17,0)
 S ^DIC(4,XUSIEN,"NPI")=XUSNPI,^DIC(4,"ANPI",XUSNPI,XUSIEN)=""
"RTN","XUSNPIE1",18,0)
 Q
"RTN","XUSNPIE1",19,0)
 ;
"RTN","XUSNPIE1",20,0)
SIGNON ; .ACT - run at user sign-on display message if NEEDS AN NPI
"RTN","XUSNPIE1",21,0)
 N XVAL,DATETIME,OPT,XVALTIME
"RTN","XUSNPIE1",22,0)
 I $$CHEKNPI^XUSNPIED(DUZ) W !!,"To enter your NPI value enter  NPI  at a menu prompt to jump to the",!,"edit option.",! H 1
"RTN","XUSNPIE1",23,0)
 ; following to insure CBO List is scheduled to run on first day of month
"RTN","XUSNPIE1",24,0)
 S XVALTIME=$E(DT,6,7) I '((XVALTIME="01")!(XVALTIME="15")) Q
"RTN","XUSNPIE1",25,0)
 S XVAL=+$E($$NOW^XLFDT(),6,10) I XVAL>(XVALTIME_".19"),XVAL<(XVALTIME_".1958") D  ; 7 PM TO 7:58 PM ON 1ST OF MONTH
"RTN","XUSNPIE1",26,0)
 . S OPT=$$FIND1^DIC(19.2,"","","XUS NPI CBO LIST") I OPT'>0 L +^TMP("XUS NPI CBO LOCK"):0 Q:'$T  D CBOQUEUE L -^TMP("XUS NPI CBO LOCK") Q
"RTN","XUSNPIE1",27,0)
 . S DATETIME=$$GET1^DIQ(19.2,OPT_",",2)
"RTN","XUSNPIE1",28,0)
 . I DATETIME'=$$FMTE^XLFDT(DT_".2") L +^DIC(19.2,OPT):0 Q:'$T  D SETQUEUE(OPT,DT_".2") L -^DIC(19.2,OPT) Q
"RTN","XUSNPIE1",29,0)
 . I '$$GET1^DIQ(19.2,OPT_",",99.1) L +^DIC(19.2,OPT):0 Q:'$T  D  L -^DIC(19.2,OPT)
"RTN","XUSNPIE1",30,0)
 . . D SETQUEUE(OPT,"@")
"RTN","XUSNPIE1",31,0)
 . . D SETQUEUE(OPT,DT_".2")
"RTN","XUSNPIE1",32,0)
 . . Q
"RTN","XUSNPIE1",33,0)
 . Q
"RTN","XUSNPIE1",34,0)
 Q
"RTN","XUSNPIE1",35,0)
 ;
"RTN","XUSNPIE1",36,0)
SETQUEUE(OPT,VALUE) ;
"RTN","XUSNPIE1",37,0)
 N FDA S FDA(19.2,OPT_",",2)=VALUE D FILE^DIE("","FDA")
"RTN","XUSNPIE1",38,0)
 Q
"RTN","XUSNPIE1",39,0)
 ;
"RTN","XUSNPIE1",40,0)
POSTINIT ;
"RTN","XUSNPIE1",41,0)
 N XUGLOB,XUUSER,XIEN,X,ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","XUSNPIE1",42,0)
 ;S XIEN=$$FIND1^DIC(19,"","","XUCOMMAND") I XIEN>0,$$FIND1^DIC(19.01,","_XIEN_",","","XUS NPI PROVIDER SELF ENTRY")'>0 S X=$$ADD^XPDMENU("XUCOMMAND","XUS NPI PROVIDER SELF ENTRY","NPI","")
"RTN","XUSNPIE1",43,0)
 ;S XIEN=$$FIND1^DIC(19,"","","XU USER SIGN-ON") I XIEN>0,$$FIND1^DIC(19.01,","_XIEN_",","","XUS NPI SIGNON CHECK")'>0 S X=$$ADD^XPDMENU("XU USER SIGN-ON","XUS NPI SIGNON CHECK","","")
"RTN","XUSNPIE1",44,0)
 ; get global containing Taxonomy values
"RTN","XUSNPIE1",45,0)
 S XUGLOB=$$CHKGLOB^XUSNPIED()
"RTN","XUSNPIE1",46,0)
 ; go through file 200 and ma
"RTN","XUSNPIE1",47,0)
 S XUUSER=0 F  S XUUSER=$O(^VA(200,XUUSER)) Q:XUUSER'>0  I $$ACTIVE^XUSER(XUUSER) D DOUSER^XUSNPIED(XUUSER,XUGLOB)
"RTN","XUSNPIE1",48,0)
 ; and send CBO a starting point list
"RTN","XUSNPIE1",49,0)
 ;S ZTIO="",ZTDTH=$$NOW^XLFDT(),ZTRTN="CBOLIST^XUSNPIED",ZTDESC="XUS NPI CBOLIST MESSAGE GENERATION" D ^%ZTLOAD
"RTN","XUSNPIE1",50,0)
 ; set up to generate CBO list monthly
"RTN","XUSNPIE1",51,0)
 D CBOQUEUE
"RTN","XUSNPIE1",52,0)
 Q
"RTN","XUSNPIE1",53,0)
 ;
"RTN","XUSNPIE1",54,0)
CBOQUEUE ;
"RTN","XUSNPIE1",55,0)
 N FDA,XUSVAL
"RTN","XUSNPIE1",56,0)
 ; check for already queued
"RTN","XUSNPIE1",57,0)
 S XUSVAL=$$FIND1^DIC(19.2,"","","XUS NPI CBO LIST") I XUSVAL>0 D  Q
"RTN","XUSNPIE1",58,0)
 . S FDA(19.2,XUSVAL_",",2)=$$SETDATE()
"RTN","XUSNPIE1",59,0)
 . S FDA(19.2,XUSVAL_",",6)="1M(1@2000,15@2000)"
"RTN","XUSNPIE1",60,0)
 . N ZTQUEUED S ZTQUEUED=1 D FILE^DIE("","FDA") K ZTQUEUED
"RTN","XUSNPIE1",61,0)
 . Q
"RTN","XUSNPIE1",62,0)
 ; no set up queued job
"RTN","XUSNPIE1",63,0)
 S XUSVAL=$$FIND1^DIC(19,"","","XUS NPI CBO LIST") Q:XUSVAL'>0  S FDA(19.2,"+1,",.01)=XUSVAL
"RTN","XUSNPIE1",64,0)
 S FDA(19.2,"+1,",2)=$$SETDATE()
"RTN","XUSNPIE1",65,0)
 S FDA(19.2,"+1,",6)="1M(1@2000,15@2000)"
"RTN","XUSNPIE1",66,0)
 N ZTQUEUED S ZTQUEUED=1 D UPDATE^DIE("","FDA") K ZTQUEUED
"RTN","XUSNPIE1",67,0)
 Q
"RTN","XUSNPIE1",68,0)
 ;
"RTN","XUSNPIE1",69,0)
SETDATE() ;
"RTN","XUSNPIE1",70,0)
 Q $S($E($$NOW^XLFDT(),6,10)<1.2:DT,$E($$NOW^XLFDT(),6,10)<15.2:$E(DT,1,5)_"15",$E(DT,4,5)>11:(($E(DT,1,3)+1)_"0101"),1:($E(DT,1,5)+1)_"01")_".2"
"RTN","XUSNPIE1",71,0)
 ;
"RTN","XUSNPIE1",72,0)
EDITNPI(IEN) ; main entry of NPI value
"RTN","XUSNPIE1",73,0)
 ; IEN is the internal entry number in file 200 for the provider
"RTN","XUSNPIE1",74,0)
 ;
"RTN","XUSNPIE1",75,0)
 N DATEVAL,DESCRIP,DONE,NPIVAL1,NPIVAL2,PROVNAME,XX,Y,CURRNPI
"RTN","XUSNPIE1",76,0)
 N ODATEVAL,OIEN,OLDNPI,XUSNONED,DIR,ADDNPI,DELETNPI,NOOLDNPI,XUSQI
"RTN","XUSNPIE1",77,0)
 S ADDNPI=1,DELETNPI=2,NOOLDNPI=0
"RTN","XUSNPIE1",78,0)
 S PROVNAME=$$GET1^DIQ(200,IEN_",",.01)
"RTN","XUSNPIE1",79,0)
 ;I '$$ACTIVE^XUSER(IEN) W !,"This user isn't currently active" Q
"RTN","XUSNPIE1",80,0)
 I $$GETTAXON^XUSNPIED(IEN,.DESCRIP)=-1 W !,"This user doesn't have a Taxonomy Code indicating a need for an NPI." S XUSNONED=1 ; but don't quit on that
"RTN","XUSNPIE1",81,0)
 I $$NPISTATS^XUSNPIED(IEN)="D" S XUSNONED=1
"RTN","XUSNPIE1",82,0)
 I $$NPISTATS^XUSNPIED(IEN)="E" W !,"This provider has been indicated as being EXEMPT from needing an NPI value.",!,"   Use Exempt option to remove it first" Q
"RTN","XUSNPIE1",83,0)
 S OLDNPI=NOOLDNPI I $$NPISTATS^XUSNPIED(IEN)="D" D  Q:OLDNPI=NOOLDNPI  ; exit without changing
"RTN","XUSNPIE1",84,0)
 . N I,X,DIR
"RTN","XUSNPIE1",85,0)
 . S CURRNPI=$$GET1^DIQ(200,IEN_",",41.99) I CURRNPI="" Q
"RTN","XUSNPIE1",86,0)
 . S OIEN=$$SRCHNPI^XUSNPI("^VA(200,",IEN,CURRNPI) I OIEN>0 S ODATEVAL=$P(OIEN,U,2),OIEN=$O(^VA(200,IEN,"NPISTATUS","C",CURRNPI,"A"),-1)
"RTN","XUSNPIE1",87,0)
 . I '$D(ODATEVAL) S OLDNPI=2 ; can't find entry in multiple, delete entry at top
"RTN","XUSNPIE1",88,0)
 . W !,"This provider already has an NPI value (",CURRNPI,") entered."
"RTN","XUSNPIE1",89,0)
 . ;S DIR(0)="Y",DIR("A")="Do you want to ADD a new NPI value as the active one",DIR("B")="NO" D ^DIR S OLDNPI=Y Q:OLDNPI
"RTN","XUSNPIE1",90,0)
 . ;K DIR S DIR(0)="Y",DIR("A")="Do you REALLY want to **DELETE** this NPI value",DIR("B")="NO" D ^DIR I Y S OLDNPI=2
"RTN","XUSNPIE1",91,0)
 . S DIR(0)="S^D:Delete;R:Replace",DIR("A")="Do you want to (D)elete or (R)eplace this NPI value?",DIR("?")="Enter either D or R or ^ to quit with out editing"
"RTN","XUSNPIE1",92,0)
 . S DIR("?",1)="If the value was entered for the incorrect individual, it should be Deleted.",DIR("?",2)="Otherwise it should be Replaced"
"RTN","XUSNPIE1",93,0)
 . D ^DIR K DIR Q:"DR"'[Y  I Y="R" S OLDNPI=ADDNPI Q
"RTN","XUSNPIE1",94,0)
 . S DIR(0)="S^V:VALID;E:ERROR",DIR("A",1)="Was the original NPI (V)alid for this provider",DIR("A")="or was it entered in (E)rror?",DIR("?")="Enter either V or E or ^ to quit with out editing"
"RTN","XUSNPIE1",95,0)
 . S DIR("?",1)="If the NPI value was entered for the incorrect individual, respond E,",DIR("?",2)="otherwise enter V"
"RTN","XUSNPIE1",96,0)
 . D ^DIR K DIR Q:"EV"'[Y  I Y="V" S Y=$$ADDNPI^XUSNPI("Individual_ID",IEN,CURRNPI,$$NOW^XLFDT(),0) D   S OLDNPI=NOOLDNPI Q
"RTN","XUSNPIE1",97,0)
 . . W !,$S(Y>-1:"Entry has been marked inactive.",1:$P(Y,U,2)),! Q:+Y=-1
"RTN","XUSNPIE1",98,0)
 . . N XUFDA S XUFDA(200,IEN_",",41.98)="@",XUFDA(200,IEN_",",41.99)="@" D FILE^DIE("","XUFDA") S Y=$$CHEKNPI^XUSNPIED(IEN)
"RTN","XUSNPIE1",99,0)
 . . Q
"RTN","XUSNPIE1",100,0)
 . S OLDNPI=DELETNPI
"RTN","XUSNPIE1",101,0)
 . Q
"RTN","XUSNPIE1",102,0)
 I $$CHEKNPI^XUSNPIED(IEN)="" W !,"Need for an NPI value isn't indicated - but you can enter an NPI",$C(7)
"RTN","XUSNPIE1",103,0)
 I IEN'=DUZ W !,"Provider: ",PROVNAME,"   ","XXX-XX-"_$E($$GET1^DIQ(200,IEN_",",9),6,9),"   DOB: " S XX=$P($G(^VA(200,IEN,1)),U,3) S:XX'="" XX=$$DATE10^XUSNPIED(XX) W XX
"RTN","XUSNPIE1",104,0)
 ;I IEN'=DUZ W !,"Status:   Active"
"RTN","XUSNPIE1",105,0)
 S DONE=0 I OLDNPI'=DELETNPI F  R !,"Enter NPI (10 digits): ",NPIVAL1:DTIME Q:'$T  Q:NPIVAL1=""  Q:NPIVAL1=U  D  Q:DONE
"RTN","XUSNPIE1",106,0)
 . I NPIVAL1'?10N D  Q
"RTN","XUSNPIE1",107,0)
 . . W !,$C(7),"Enter a 10 digit National Provider Identifier which is obtained ",!,"from 'https://nppes.cms.hhs.gov/NPPES/Welcome.do'"
"RTN","XUSNPIE1",108,0)
 . . Q:$$PROD^XUPROD()  W ! K DIR S DIR(0)="Y",DIR("A")="Do you want to generate a test NPI value" D ^DIR Q:'Y
"RTN","XUSNPIE1",109,0)
 . . R !,"Enter a nine (9) digit number as the base: ",Y:DTIME Q:Y'?9N
"RTN","XUSNPIE1",110,0)
 . . W !,"The complete NPI value is: ",Y_$$CKDIGIT^XUSNPI(Y),!
"RTN","XUSNPIE1",111,0)
 . . Q
"RTN","XUSNPIE1",112,0)
 . S XUSQI=$$QI^XUSNPI(NPIVAL1) I +XUSQI=0,$P(XUSQI,U,2)="Invalid NPI" W !,"NPI values have a specific structure to validate them...",!,"The Checksum for this entry is not valid",! Q
"RTN","XUSNPIE1",113,0)
 . I XUSQI'=0 N ZZ,DONE1 S DONE1=0 D GETLST^XPAR(.ZZ,"PKG.KERNEL","XUSNPI QUALIFIED IDENTIFIER") D  Q:DONE1
"RTN","XUSNPIE1",114,0)
 . . S ZZ="" F  S ZZ=$O(ZZ(ZZ)) Q:ZZ'>0  I $P(ZZ(ZZ),U)=$P(XUSQI,U) W !,"That NPI value is already associated with "_$P(@("^"_$P(ZZ(ZZ),U,2)_$P(XUSQI,U,2)_",0)"),U) S DONE1=1 Q
"RTN","XUSNPIE1",115,0)
 . . Q
"RTN","XUSNPIE1",116,0)
 . R !,"Please re-enter NPI  : ",NPIVAL2:DTIME Q:'$T  I NPIVAL1'=NPIVAL2 W !,"Values do not match!" Q
"RTN","XUSNPIE1",117,0)
 . S DONE=1
"RTN","XUSNPIE1",118,0)
 . Q
"RTN","XUSNPIE1",119,0)
 I OLDNPI=DELETNPI D
"RTN","XUSNPIE1",120,0)
 . I $D(ODATEVAL) D  S Y=$$CHEKNPI^XUSNPIED(IEN) Q
"RTN","XUSNPIE1",121,0)
 . . N DIR S DIR(0)="Y",DIR("A")="Confirm that you want to **DELETE** this incorrectly entered NPI",DIR("B")="NO" D ^DIR Q:'Y
"RTN","XUSNPIE1",122,0)
 . . D DELETNPI^XUSNPIE2(IEN,OIEN,ODATEVAL)
"RTN","XUSNPIE1",123,0)
 . . D CHKOLD1(IEN) ; check for earlier value, and activate if present
"RTN","XUSNPIE1",124,0)
 . . W !,"Entry was DELETED..."
"RTN","XUSNPIE1",125,0)
 . . Q
"RTN","XUSNPIE1",126,0)
 . D DELETNPI^XUSNPIE2(IEN) ; clean up where no entry in multiple
"RTN","XUSNPIE1",127,0)
 . W !,"Entry was DELETED..."
"RTN","XUSNPIE1",128,0)
 . Q
"RTN","XUSNPIE1",129,0)
 I 'DONE Q
"RTN","XUSNPIE1",130,0)
 ;N DIR S DIR("A")="Enter the date the provider was issued this number from CMS: ",DIR(0)="D^:"_$$NOW^XLFDT() D ^DIR Q:Y'>0  S DATEVAL=+Y
"RTN","XUSNPIE1",131,0)
 S DATEVAL=$$NOW^XLFDT()
"RTN","XUSNPIE1",132,0)
 ; mark previous NPI value as inactive
"RTN","XUSNPIE1",133,0)
 I OLDNPI=ADDNPI S DONE=$$ADDNPI^XUSNPI("Individual_ID",IEN,CURRNPI,DATEVAL,0) ; set status to INACTIVE
"RTN","XUSNPIE1",134,0)
 S DONE=$$ADDNPI^XUSNPI("Individual_ID",IEN,NPIVAL1,DATEVAL) I +DONE=-1 W !,"Problem writing that value into the database! --  It was **NOT** recorded.",!,$P(DONE,U,2) Q
"RTN","XUSNPIE1",135,0)
 W !!,"For provider ",PROVNAME," "_$S('$D(XUSNONED):"(who requires an NPI), ",1:"")_"the NPI ",NPIVAL1,!,"was saved to VistA successfully."
"RTN","XUSNPIE1",136,0)
 Q
"RTN","XUSNPIE1",137,0)
 ;
"RTN","XUSNPIE1",138,0)
CHKOLD1(IEN) ;
"RTN","XUSNPIE1",139,0)
 D CHKOLD1^XUSNPIE2(IEN)
"RTN","XUSNPIE1",140,0)
 Q
"RTN","XUSNPIE1",141,0)
 ;
"RTN","XUSNPIE1",142,0)
CLERXMPT ;
"RTN","XUSNPIE1",143,0)
 D CLERXMPT^XUSNPIE2
"RTN","XUSNPIE1",144,0)
 Q
"RTN","XUSNPIE1",145,0)
 ;
"RTN","XUSNPIE1",146,0)
CHKDGT(XUSNPI,XUSDA,XUSQI) ; INPUT TRANSFORM
"RTN","XUSNPIE1",147,0)
 N XUS S XUS=$$CHKDGT^XUSNPI(XUSNPI)
"RTN","XUSNPIE1",148,0)
 I XUS'>0 Q 0
"RTN","XUSNPIE1",149,0)
 N XUSQIK S XUSQIK=$$QI^XUSNPI(XUSNPI) I XUSQIK=0 Q 1
"RTN","XUSNPIE1",150,0)
 I XUSQIK'=0,$P(XUSQIK,"^",2)'=XUSDA Q 0 ; return zero if the NPI found and not bellong to the current user
"RTN","XUSNPIE1",151,0)
 N XUSQIK1 S XUSQIK1=$P(XUSQIK,"^")
"RTN","XUSNPIE1",152,0)
 I XUSQI'=XUSQIK1 Q 0
"RTN","XUSNPIE1",153,0)
 I $P($P(XUSQIK,"^",4),";")="Inactive" Q 0
"RTN","XUSNPIE1",154,0)
 N XUSROOT S XUSROOT=$$GET^XPAR("PKG.KERNEL","XUSNPI QUALIFIED IDENTIFIER",XUSQIK1)
"RTN","XUSNPIE1",155,0)
 I $E(XUSROOT)'="^" S XUSROOT="^"_XUSROOT
"RTN","XUSNPIE1",156,0)
 N XUS1 S XUS1=XUSROOT_XUSDA_","_"""NPISTATUS"""_","_"""A"""_")"
"RTN","XUSNPIE1",157,0)
 N XUS2 S XUS2=$O(@XUS1,-1) I XUS2'>0 Q 1
"RTN","XUSNPIE1",158,0)
 S XUS1=XUSROOT_XUSDA_","_"""NPISTATUS"""_","_XUS2_","_0_")"
"RTN","XUSNPIE1",159,0)
 S XUS2=$G(@XUS1) I $P(XUS2,"^",3)=XUSNPI Q 1
"RTN","XUSNPIE1",160,0)
 Q 0
"RTN","XUSNPIE2")
0^1^B63626145^B60490192
"RTN","XUSNPIE2",1,0)
XUSNPIE2 ;FO-OAKLAND/JLI - DATA ENTRY FOR INITIAL NPI VALUES ;11/3/06  14:16
"RTN","XUSNPIE2",2,0)
 ;;8.0;KERNEL;**410,435**;Jul 10, 1995;Build 10
"RTN","XUSNPIE2",3,0)
 Q
"RTN","XUSNPIE2",4,0)
 ;
"RTN","XUSNPIE2",5,0)
PRINTOPT ;
"RTN","XUSNPIE2",6,0)
 N DIR,%ZIS,ION,OPTION,PRNTFRMT,XUSDIV,XUSSORT,Y,ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","XUSNPIE2",7,0)
 K IO("Q")
"RTN","XUSNPIE2",8,0)
 W !,"Select one of the following:",!!,?11,"1",?21,"All providers",!,?11,"2",?21,"All providers without NPI numbers",!
"RTN","XUSNPIE2",9,0)
 S DIR(0)="N^1:2",DIR("A")="Select a report option: ",DIR("B")="1" D ^DIR K DIR Q:Y'>0  S OPTION=+Y
"RTN","XUSNPIE2",10,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Sort by DIVISION" D ^DIR K DIR S XUSDIV=+Y
"RTN","XUSNPIE2",11,0)
 S PRNTFRMT=1 I XUSDIV D
"RTN","XUSNPIE2",12,0)
 . S DIR(0)="N^1:2",DIR("A")="Output type (1=Printed text or 2=^-delimited):" D ^DIR K DIR Q:Y'>0  S PRNTFRMT=Y
"RTN","XUSNPIE2",13,0)
 . Q
"RTN","XUSNPIE2",14,0)
 S DIR(0)="Y",DIR("B")="YES",DIR("A")="Sort by SERVICE/SECTION"_$S(XUSDIV>0:" (as well)",1:"") D ^DIR K DIR S XUSSORT=+Y
"RTN","XUSNPIE2",15,0)
 I PRNTFRMT'=2 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","XUSNPIE2",16,0)
 I $D(IO("Q")) S ZTSAVE("OPTION")="",ZTSAVE("XUSSORT")="",ZTSAVE("XUSDIV")="",ZTSAVE("PRNTFRMT")="",ZTIO=ION,ZTRTN="DQ^XUSNPIE2",ZTDESC="NPI PRINT JOB FOR OPTION "_OPTION D ^%ZTLOAD W:$D(ZTSK) !,"Queued as Task "_ZTSK D HOME^%ZIS Q
"RTN","XUSNPIE2",17,0)
 ;
"RTN","XUSNPIE2",18,0)
DQ ; entry point for queued print job
"RTN","XUSNPIE2",19,0)
 I PRNTFRMT=2 R !,"START YOUR CAPTURE NOW AND ENTER RETURN (OR WAIT 30 SECONDS):",Y:30
"RTN","XUSNPIE2",20,0)
 U IO D PRNTPROV(OPTION,XUSSORT,XUSDIV,PRNTFRMT)
"RTN","XUSNPIE2",21,0)
 I PRNTFRMT=2 W !,"TURN OFF CAPTURE NOW"
"RTN","XUSNPIE2",22,0)
 U IO D ^%ZISC
"RTN","XUSNPIE2",23,0)
 Q
"RTN","XUSNPIE2",24,0)
 ;
"RTN","XUSNPIE2",25,0)
PRNTPROV(OPTION,XUSSORT,XUSDIV,PRNTFRMT) ;
"RTN","XUSNPIE2",26,0)
 ; PRINT PROVIDER INFO
"RTN","XUSNPIE2",27,0)
 ;
"RTN","XUSNPIE2",28,0)
 ; OPTION   SPECIFIES TYPE OF PRINT - 1=ALL PROVIDERS, 2=NEEDS NPI ONLY
"RTN","XUSNPIE2",29,0)
 ; XUSSORT  INDICATES WHETHER SORTED BY SERVICE/SECTION
"RTN","XUSNPIE2",30,0)
 ; XUSDIV   INDICATES WHETHER SORTED BY DIVISION
"RTN","XUSNPIE2",31,0)
 ; PRNTFRMT INDICATES TYPE OF OUTPUT, PRINTED OR ^-DELIMITED
"RTN","XUSNPIE2",32,0)
 ;
"RTN","XUSNPIE2",33,0)
 ; ZEXCEPT: IOSL    - KERNEL VARIABLE
"RTN","XUSNPIE2",34,0)
 N PAGENUM,LINENUM,PROVNAME,TAXDESCR,TAXONOMY,SERVSECT,DIRUT,DTOUT
"RTN","XUSNPIE2",35,0)
 N GLOBLOC,IEN,NPI,DATETIME,GLOBVALU,NCOUNT,GLOBLOC1,XUSDIVNM,CNTTOTAL,CNTNONE,CNTEXMPT,CNTDONE,MULTDIV,MULTDIVC
"RTN","XUSNPIE2",36,0)
 S CNTTOTAL=0,CNTNONE=0,CNTEXMPT=0,CNTDONE=0
"RTN","XUSNPIE2",37,0)
 S PAGENUM=0,LINENUM=0
"RTN","XUSNPIE2",38,0)
 S DATETIME=$$NOW^XLFDT()
"RTN","XUSNPIE2",39,0)
 S GLOBLOC1=$$GETDATA(OPTION,XUSSORT,XUSDIV)
"RTN","XUSNPIE2",40,0)
 I PRNTFRMT'=1 W !,"PROVIDER_NAME^LAST4^IEN^NPI^TAXONOMY_CODE^TAXONOMY DESCRIPTION"_$S(XUSDIV:"^DIVISION",1:"")_$S(XUSSORT:"^SERVICE/SECTION",1:"")
"RTN","XUSNPIE2",41,0)
 S GLOBLOC=GLOBLOC1,XUSDIVNM="" F  S XUSDIVNM=$O(@GLOBLOC1@(XUSDIVNM)) Q:XUSDIVNM=""  D  Q:$D(DIRUT)!$D(DTOUT)
"RTN","XUSNPIE2",42,0)
 . S SERVSECT="" F  S SERVSECT=$O(@GLOBLOC1@(XUSDIVNM,SERVSECT)) Q:SERVSECT=""  S GLOBLOC=$NA(@GLOBLOC1@(XUSDIVNM,SERVSECT)) D  Q:$D(DIRUT)!$D(DTOUT)
"RTN","XUSNPIE2",43,0)
 . . I PRNTFRMT=1 D HEADER(OPTION,DATETIME,.PAGENUM,.LINENUM,XUSDIV,XUSDIVNM,XUSSORT,SERVSECT) Q:$D(DIRUT)!$D(DTOUT)
"RTN","XUSNPIE2",44,0)
 . . S PROVNAME="" F  S PROVNAME=$O(@GLOBLOC@(PROVNAME)) Q:PROVNAME=""  Q:$D(DIRUT)!$D(DTOUT)  S IEN=0 F  S IEN=$O(@GLOBLOC@(PROVNAME,IEN)) Q:IEN'>0  D  Q:$D(DIRUT)!$D(DTOUT)
"RTN","XUSNPIE2",45,0)
 . . . S NCOUNT=0
"RTN","XUSNPIE2",46,0)
 . . . S TAXDESCR="" F  S TAXDESCR=$O(@GLOBLOC@(PROVNAME,IEN,TAXDESCR)) Q:TAXDESCR=""  S GLOBVALU=@GLOBLOC@(PROVNAME,IEN,TAXDESCR) D
"RTN","XUSNPIE2",47,0)
 . . . . S NPI=$P(GLOBVALU,U,3),TAXONOMY=$P(GLOBVALU,U,4)  I PRNTFRMT=1 S NCOUNT=NCOUNT+1 W:NCOUNT=1 !,PROVNAME,?33,$$ALIGNRGT(IEN,11),?49,NPI W !,?6,TAXONOMY,"  ",TAXDESCR
"RTN","XUSNPIE2",48,0)
 . . . . I PRNTFRMT'=1 W !,PROVNAME_U_$E($$GET1^DIQ(200,IEN_",",9),6,9)_U_IEN_U_NPI_U_TAXONOMY_U_TAXDESCR_$S(XUSDIV:U_XUSDIVNM,1:"")_$S(XUSSORT:U_SERVSECT,1:"")
"RTN","XUSNPIE2",49,0)
 . . . . Q
"RTN","XUSNPIE2",50,0)
 . . . I PRNTFRMT=1 S LINENUM=LINENUM+NCOUNT+1 I LINENUM>(IOSL-4) D HEADER(OPTION,DATETIME,.PAGENUM,.LINENUM,XUSDIV,XUSDIVNM,XUSSORT,SERVSECT) Q:$D(DIRUT)!$D(DTOUT)
"RTN","XUSNPIE2",51,0)
 . . . Q
"RTN","XUSNPIE2",52,0)
 . . Q
"RTN","XUSNPIE2",53,0)
 . Q
"RTN","XUSNPIE2",54,0)
 I '($D(DIRUT)!$D(DTOUT)),PRNTFRMT=1 D
"RTN","XUSNPIE2",55,0)
 . S PROVNAME="" I $O(@GLOBLOC@(PROVNAME))="" W !,?20,"* * * N O  D A T A  F O U N D * * *",!! I 1
"RTN","XUSNPIE2",56,0)
 . E  D
"RTN","XUSNPIE2",57,0)
 . . W !!,"Total Billable Providers:",?43,CNTTOTAL,!,"Billable Providers with an NPI:",?43,CNTDONE,!,"EXEMPT Billable Providers:",?43,CNTEXMPT,!,"Billable Providers Still Needing an NPI:",?43,CNTNONE
"RTN","XUSNPIE2",58,0)
 . . I $G(MULTDIV)>0 W !!,MULTDIV," Providers were repeated a total of ",MULTDIVC," times",!," due to listing under multiple divisions"
"RTN","XUSNPIE2",59,0)
 . . Q
"RTN","XUSNPIE2",60,0)
 . W !!,?27,"*** End of Report ***"
"RTN","XUSNPIE2",61,0)
 . Q
"RTN","XUSNPIE2",62,0)
 Q
"RTN","XUSNPIE2",63,0)
 ;
"RTN","XUSNPIE2",64,0)
HEADER(OPTION,DATETIME,PAGNOREF,LINNOREF,XUSDIV,XUSDIVNM,XUSSORT,SERVSECT) ;
"RTN","XUSNPIE2",65,0)
 ; ZEXCEPT: IOF,IOST  KERNEL IO VARIABLES
"RTN","XUSNPIE2",66,0)
 ; ZEXCEPT: DIRUT,DTOUT  NEWED IN CALLING PRNTPROV - INDICATE QUIT TO PRNTPROV
"RTN","XUSNPIE2",67,0)
 N TEMPVAL,DIR,X,Y
"RTN","XUSNPIE2",68,0)
 S PAGNOREF=PAGNOREF+1
"RTN","XUSNPIE2",69,0)
 ; Don't page feed on the first page
"RTN","XUSNPIE2",70,0)
 IF PAGNOREF>1 I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR I 'Y S DIRUT=1 Q
"RTN","XUSNPIE2",71,0)
 IF PAGNOREF>1 W @IOF
"RTN","XUSNPIE2",72,0)
 W:$E(IOST,1,2)'="C-" ! W "Active Provider Report",?48,$$FMTE^XLFDT(DATETIME),"  Page: ",PAGNOREF
"RTN","XUSNPIE2",73,0)
 W !," Report Option: Provider List       Active Providers",$S(OPTION=2:" Without NPI Numbers",1:"")
"RTN","XUSNPIE2",74,0)
 W !!,"Provider Name",?39,"IEN",?49,$S(OPTION'=2:"NPI",1:"")
"RTN","XUSNPIE2",75,0)
 W !,"      Taxonomy"
"RTN","XUSNPIE2",76,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","XUSNPIE2",77,0)
 S LINNOREF=6
"RTN","XUSNPIE2",78,0)
 I XUSDIV W !,"DIVISION: ",XUSDIVNM,"   " S LINNOREF=LINNOREF+1
"RTN","XUSNPIE2",79,0)
 I XUSSORT W:'XUSDIV ! W "SERVICE/SECTION: ",SERVSECT S:'XUSDIV LINNOREF=LINNOREF+1
"RTN","XUSNPIE2",80,0)
 Q
"RTN","XUSNPIE2",81,0)
 ;
"RTN","XUSNPIE2",82,0)
GETDATA(OPTION,XUSSORT,XUSDIV) ; get data for reports for providers
"RTN","XUSNPIE2",83,0)
 N NPI,PROVNAME,TAXDESCR,TAXONOMY,XUSDEFLT,XUSDIVCN,XUSDIVN,XUSDIVNM,XUSGLOB
"RTN","XUSNPIE2",84,0)
 N XUSIEN,XUSSERVC,XUSVAL,CNTCLEAN
"RTN","XUSNPIE2",85,0)
 ; ZEXCEPT: CNTTOTAL,CNTNONE,CNTEXMPT,CNTDONE - NEWed and initialized in PRNTPROV or killed based on CNTCLEAN
"RTN","XUSNPIE2",86,0)
 S CNTCLEAN=0 I '$D(CNTTOTAL) S CNTCLEAN=1
"RTN","XUSNPIE2",87,0)
 S XUSGLOB=$NA(^TMP($J,"XUSNPIPRNT")) K @XUSGLOB
"RTN","XUSNPIE2",88,0)
 I 'XUSDIV S XUSDIVNM(1)=" ",XUSDEFLT=" "
"RTN","XUSNPIE2",89,0)
 I XUSDIV S XUSDEFLT=$$NS^XUAF4($$KSP^XUPARAM("INST")),XUSDEFLT=$P(XUSDEFLT,U)
"RTN","XUSNPIE2",90,0)
 I 'XUSSORT S XUSSERVC=" "
"RTN","XUSNPIE2",91,0)
 F XUSIEN=0:0 S XUSIEN=$O(^VA(200,XUSIEN)) Q:XUSIEN'>0  I ($$NPISTATS^XUSNPIED(XUSIEN)="D")!$$ACTIVE^XUSER(XUSIEN) S XUSVAL=$$CHEKNPI^XUSNPIED(XUSIEN),XUSVAL=$$NPISTATS^XUSNPIED(XUSIEN) I XUSVAL'="" D
"RTN","XUSNPIE2",92,0)
 . S PROVNAME=$$GET1^DIQ(200,XUSIEN_",",.01),NPI=$$GETNPI^XUSNPIED(XUSIEN),TAXONOMY=$$GETTAXON^XUSNPIED(XUSIEN,.TAXDESCR) I TAXONOMY=-1 S TAXONOMY=" ",TAXDESCR=" "
"RTN","XUSNPIE2",93,0)
 . I NPI="",$$EXMPTNPI^XUSNPIED(XUSIEN) S NPI="EXEMPTED  "
"RTN","XUSNPIE2",94,0)
 . S CNTTOTAL=$G(CNTTOTAL)+1 S:NPI="" CNTNONE=$G(CNTNONE)+1 S:NPI="EXEMPTED  " CNTEXMPT=$G(CNTEXMPT)+1 S:NPI?10N CNTDONE=$G(CNTDONE)+1
"RTN","XUSNPIE2",95,0)
 . I '((XUSVAL="N")!(OPTION'=2)) Q
"RTN","XUSNPIE2",96,0)
 . I XUSSORT S XUSSERVC=$$GET1^DIQ(200,XUSIEN_",",29) I XUSSERVC="" S XUSSERVC=" "
"RTN","XUSNPIE2",97,0)
 . I XUSDIV D
"RTN","XUSNPIE2",98,0)
 . . K XUSDIVNM S XUSDIVCN=0,XUSDIVNM(1)=XUSDEFLT
"RTN","XUSNPIE2",99,0)
 . . F XUSDIVN=0:0 S XUSDIVN=$O(^VA(200,XUSIEN,2,XUSDIVN)) Q:XUSDIVN'>0  S XUSDIVCN=XUSDIVCN+1,XUSDIVNM(XUSDIVCN)=$$GET1^DIQ(200.02,XUSDIVN_","_XUSIEN_",",.01)
"RTN","XUSNPIE2",100,0)
 . . I XUSDIVCN>1 S MULTDIV=$G(MULTDIV)+1,MULTDIVC=$G(MULTDIVC)+XUSDIVCN-1
"RTN","XUSNPIE2",101,0)
 . . Q
"RTN","XUSNPIE2",102,0)
 . F XUSDIVN=0:0 S XUSDIVN=$O(XUSDIVNM(XUSDIVN)) Q:XUSDIVN'>0  S @XUSGLOB@(XUSDIVNM(XUSDIVN),XUSSERVC,PROVNAME,XUSIEN,TAXDESCR)=PROVNAME_U_XUSIEN_U_NPI_U_TAXONOMY_U_TAXDESCR
"RTN","XUSNPIE2",103,0)
 . Q
"RTN","XUSNPIE2",104,0)
 I CNTCLEAN K CNTTOTAL,CNTNONE,CNTEXMPT,CNTDONE
"RTN","XUSNPIE2",105,0)
 Q XUSGLOB
"RTN","XUSNPIE2",106,0)
 ;
"RTN","XUSNPIE2",107,0)
ALIGNRGT(TEXT,WIDTH) ; align text right in a specified width
"RTN","XUSNPIE2",108,0)
 N RESULT
"RTN","XUSNPIE2",109,0)
 S $P(RESULT," ",WIDTH)=" ",RESULT=RESULT_TEXT,RESULT=$E(RESULT,$L(RESULT)-WIDTH+1,$L(RESULT))
"RTN","XUSNPIE2",110,0)
 Q RESULT
"RTN","XUSNPIE2",111,0)
 ;
"RTN","XUSNPIE2",112,0)
CHKOLD1(IEN) ; check for earlier value, and activate if present
"RTN","XUSNPIE2",113,0)
 N IEN1,STATUS,NPI,DATE,XUFDA
"RTN","XUSNPIE2",114,0)
 S IEN1=$O(^VA(200,IEN,"NPISTATUS"," "),-1) I IEN1>0 D  I STATUS=0 D CHKOLD1(IEN)
"RTN","XUSNPIE2",115,0)
 . S STATUS=^VA(200,IEN,"NPISTATUS",IEN1,0),NPI=$P(STATUS,U,3),DATE=$P(STATUS,U),STATUS=$P(STATUS,U,2)
"RTN","XUSNPIE2",116,0)
 . I STATUS=0 D DELETNPI(IEN,IEN1,DATE) Q  ; entry making it INACTIVE - remove it
"RTN","XUSNPIE2",117,0)
 . I STATUS=1 D SET^XUSNPIE1(IEN,NPI)
"RTN","XUSNPIE2",118,0)
 . Q
"RTN","XUSNPIE2",119,0)
 Q
"RTN","XUSNPIE2",120,0)
 ;
"RTN","XUSNPIE2",121,0)
DELETNPI(IEN,OIEN,ODATEVAL) ;
"RTN","XUSNPIE2",122,0)
 N XUFDA
"RTN","XUSNPIE2",123,0)
 I $D(ODATEVAL) S XUFDA(200.042,OIEN_","_IEN_",",.01)="@"
"RTN","XUSNPIE2",124,0)
 S XUFDA(200,IEN_",",41.99)="@",XUFDA(200,IEN_",",41.98)="@"
"RTN","XUSNPIE2",125,0)
 D FILE^DIE("","XUFDA")
"RTN","XUSNPIE2",126,0)
 Q
"RTN","XUSNPIE2",127,0)
 ;
"RTN","XUSNPIE2",128,0)
CLERXMPT ; edit entry indicating whether a provider is exempt from needing an NPI
"RTN","XUSNPIE2",129,0)
 N DIC,DIR,FDA,IEN,Y
"RTN","XUSNPIE2",130,0)
 W ! S DIC="^VA(200,",DIC(0)="AEQ" S DIC("A")="select Provider: " D ^DIC Q:Y'>0  S IEN=+Y
"RTN","XUSNPIE2",131,0)
 I $$HASNPI^XUSNPIED(IEN) W !,"This Provider already has an NPI value.  Nothing to do." Q
"RTN","XUSNPIE2",132,0)
 I '$$CHEKNPI^XUSNPIED(IEN),'$$EXMPTNPI^XUSNPIED(IEN) W !,"This Provider does not appear to need an NPI or Exemption." Q
"RTN","XUSNPIE2",133,0)
 I $$EXMPTNPI^XUSNPIED(IEN) D  Q  ; currently marked as Exempt
"RTN","XUSNPIE2",134,0)
 . S DIR(0)="Y",DIR("A")="Provider is currently EXEMPT from needing an NPI, set to NEEDS an NPI (Y/N)" D ^DIR I 'Y Q
"RTN","XUSNPIE2",135,0)
 . S FDA(200,IEN_",",41.98)="N" D FILE^DIE("","FDA")
"RTN","XUSNPIE2",136,0)
 . W !,$S($$NEEDSNPI^XUSNPIED(IEN):"File updated",1:"Ecountered a problem updating file, status NOT set to NEEDS an NPI")
"RTN","XUSNPIE2",137,0)
 . Q
"RTN","XUSNPIE2",138,0)
 ; check to make sure provider should be exempt
"RTN","XUSNPIE2",139,0)
 S DIR(0)="Y",DIR("A")="Confirm that Provider should be Exempt from needing an NPI (Y/N)" D ^DIR I 'Y Q
"RTN","XUSNPIE2",140,0)
 ; and update file to show as exempt
"RTN","XUSNPIE2",141,0)
 S FDA(200,IEN_",",41.98)="E" D FILE^DIE("","FDA")
"RTN","XUSNPIE2",142,0)
 W !,$S($$EXMPTNPI^XUSNPIED(IEN):"File updated",1:"Ecountered a problem updating file, status NOT set to EXEMPT")
"RTN","XUSNPIE2",143,0)
 Q
"RTN","XUSNPIED")
0^2^B23954469^B22186958
"RTN","XUSNPIED",1,0)
XUSNPIED ;FO-OAKLAND/JLI - DATA ENTRY FOR INITIAL NPI VALUES ;11/20/06  11:20
"RTN","XUSNPIED",2,0)
 ;;8.0;KERNEL;**420,410,435**;Jul 10, 1995;Build 10
"RTN","XUSNPIED",3,0)
 Q
"RTN","XUSNPIED",4,0)
 ;
"RTN","XUSNPIED",5,0)
SIGNON ; run at user sign-on to display message if NPI value is needed.
"RTN","XUSNPIED",6,0)
 D SIGNON^XUSNPIE1
"RTN","XUSNPIED",7,0)
 Q
"RTN","XUSNPIED",8,0)
 ;
"RTN","XUSNPIED",9,0)
CLEREDIT ; Input editing of NPI value for clerical staff - ask provider
"RTN","XUSNPIED",10,0)
 N IEN,DIC,PROVNAME,DATEVAL,DESCRIP,DONE,IENS,NPIVAL1,NPIVAL2,Y,XX
"RTN","XUSNPIED",11,0)
 F  W ! S DIC="^VA(200,",DIC(0)="AEQ" S DIC("A")="Select Provider: " D ^DIC Q:Y'>0  S IEN=+Y D EDITNPI(IEN)
"RTN","XUSNPIED",12,0)
 Q
"RTN","XUSNPIED",13,0)
 ;
"RTN","XUSNPIED",14,0)
USEREDIT ; Entry point for provider to enter own data
"RTN","XUSNPIED",15,0)
 I $$NPISTATS(DUZ)="" W !,$C(7),"Please see your local NPI facilitator to add the NPI",! H 3 Q
"RTN","XUSNPIED",16,0)
 D EDITNPI(DUZ)
"RTN","XUSNPIED",17,0)
 Q
"RTN","XUSNPIED",18,0)
 ;
"RTN","XUSNPIED",19,0)
EDITNPI(IEN) ;
"RTN","XUSNPIED",20,0)
 D EDITNPI^XUSNPIE1(IEN)
"RTN","XUSNPIED",21,0)
 Q
"RTN","XUSNPIED",22,0)
 ;
"RTN","XUSNPIED",23,0)
CLERXMPT ;
"RTN","XUSNPIED",24,0)
 D CLERXMPT^XUSNPIE1
"RTN","XUSNPIED",25,0)
 Q
"RTN","XUSNPIED",26,0)
 ;
"RTN","XUSNPIED",27,0)
CHKGLOB() ; returns global location of TAXONOMY values also rebuilds if they are missing
"RTN","XUSNPIED",28,0)
 Q $$CHKGLOB^XUSNPIDA()
"RTN","XUSNPIED",29,0)
 ;
"RTN","XUSNPIED",30,0)
DOUSER(XUUSER,XUGLOB) ; check user for needing an NPI status value
"RTN","XUSNPIED",31,0)
 N PCLASS,XUDONE,PVAL,CODE,NPISTATS,XUVALUE,D0,EXPIRATN,I,NPIFLD,NPISUBFL
"RTN","XUSNPIED",32,0)
 S NPISTATS=41.98,NPISUBFL=200.042,NPIFLD=.03
"RTN","XUSNPIED",33,0)
 I $$GET1^DIQ(200,XUUSER_",",NPISTATS)'="" Q  ; user is already flagged
"RTN","XUSNPIED",34,0)
 S PCLASS=0,XUDONE=0 F  S PCLASS=$O(^VA(200,XUUSER,"USC1",PCLASS)) Q:PCLASS'>0  S D0=^(PCLASS,0) D  Q:XUDONE
"RTN","XUSNPIED",35,0)
 . S EXPIRATN=$P(D0,U,3)>0 I EXPIRATN Q
"RTN","XUSNPIED",36,0)
 . S PVAL=$P(D0,U),CODE=$$GET1^DIQ(8932.1,PVAL_",",6) I CODE'="",$D(@XUGLOB@(CODE)) D  S XUDONE=1 Q
"RTN","XUSNPIED",37,0)
 . . S XUVALUE="N" N NPIVAL F I=1:1 S NPIVAL=$$GET1^DIQ(NPISUBFL,I_","_XUUSER_",",NPIFLD) Q:NPIVAL=""  S XUVALUE="D" Q
"RTN","XUSNPIED",38,0)
 . . N XUFDA S XUFDA(200,XUUSER_",",NPISTATS)=XUVALUE
"RTN","XUSNPIED",39,0)
 . . D FILE^DIE("","XUFDA")
"RTN","XUSNPIED",40,0)
 . . Q
"RTN","XUSNPIED",41,0)
 . Q
"RTN","XUSNPIED",42,0)
 Q
"RTN","XUSNPIED",43,0)
 ;
"RTN","XUSNPIED",44,0)
CBOLIST ; list ^ delimited output to CBO exchange mail group.
"RTN","XUSNPIED",45,0)
 N DATE,DOMAIN,ADDRESS,STATNAME,COUNT,DOB,GLOBLOC,GLOBOUT
"RTN","XUSNPIED",46,0)
 N IEN,NPI,PROVNAME,SSN,TAXDESCR,TAXONOMY,STATION,STATUS,OPTION
"RTN","XUSNPIED",47,0)
 I '$$PROD^XUPROD() Q  ; messages from production systems only
"RTN","XUSNPIED",48,0)
 S DATE=(1700+$E(DT,1,3))_"-"_$E(DT,4,5)_"-"_$E(DT,6,7)
"RTN","XUSNPIED",49,0)
 S DOMAIN=$G(^XTV(8989.3,1,0)),DOMAIN=$P(DOMAIN,U)
"RTN","XUSNPIED",50,0)
 S STATION=$$NS^XUAF4($$KSP^XUPARAM("INST"))
"RTN","XUSNPIED",51,0)
 S ADDRESS=$P(STATION,U) ;$$GET1^DIQ(4.2,DOMAIN_",",.01)
"RTN","XUSNPIED",52,0)
 S STATION=$P(STATION,U,2) ;$$GET1^DIQ(4.2,DOMAIN_",",5.5)
"RTN","XUSNPIED",53,0)
 S OPTION=3
"RTN","XUSNPIED",54,0)
 S GLOBLOC=$$GETDATA(OPTION,0,0) ; get most of data into location specified by GLOBLOC
"RTN","XUSNPIED",55,0)
 S COUNT=0,GLOBOUT=$NA(^TMP($J,"XUSNPIOUT")) K @GLOBOUT
"RTN","XUSNPIED",56,0)
 S COUNT=1,@GLOBOUT@(COUNT)="--START"
"RTN","XUSNPIED",57,0)
 S GLOBLOC=$NA(@GLOBLOC@(" "," "))
"RTN","XUSNPIED",58,0)
 S PROVNAME="" F  S PROVNAME=$O(@GLOBLOC@(PROVNAME)) Q:PROVNAME=""  S IEN=0 F  S IEN=$O(@GLOBLOC@(PROVNAME,IEN)) Q:IEN'>0  D
"RTN","XUSNPIED",59,0)
 . S TAXDESCR="" F  S TAXDESCR=$O(@GLOBLOC@(PROVNAME,IEN,TAXDESCR)) Q:TAXDESCR=""  S TAXONOMY=$P(^(TAXDESCR),U,4),NPI=$P(^(TAXDESCR),U,3) D
"RTN","XUSNPIED",60,0)
 . . S DOB=$P($G(^VA(200,IEN,1)),U,3),SSN=$E($$GET1^DIQ(200,IEN_",",9),6,9) S:DOB'="" DOB=$$DATE10(DOB) S STATUS=$$NPISTATS(IEN)
"RTN","XUSNPIED",61,0)
 . . S COUNT=COUNT+1,@GLOBOUT@(COUNT)=PROVNAME_U_STATION_U_NPI_U_SSN_U_DOB_U_TAXONOMY_U_TAXDESCR_U_DATE_U_STATUS
"RTN","XUSNPIED",62,0)
 . . Q
"RTN","XUSNPIED",63,0)
 . Q
"RTN","XUSNPIED",64,0)
 S COUNT=COUNT+1,@GLOBOUT@(COUNT)="--END"
"RTN","XUSNPIED",65,0)
 ; and generate mail message
"RTN","XUSNPIED",66,0)
 N XMTEXT,XMDUZ,XMY,XMSUB
"RTN","XUSNPIED",67,0)
 S XMTEXT=$E(GLOBOUT,1,$L(GLOBOUT)-1)_",",XMDUZ=0.5,XMY("VHACONPINPF@VA.GOV")=""
"RTN","XUSNPIED",68,0)
 S XMSUB="NPI LIST "_DATE_" FOR "_ADDRESS_" ("_STATION_")"
"RTN","XUSNPIED",69,0)
 D ^XMD
"RTN","XUSNPIED",70,0)
 Q
"RTN","XUSNPIED",71,0)
 ;
"RTN","XUSNPIED",72,0)
PRINTOPT ;
"RTN","XUSNPIED",73,0)
 D PRINTOPT^XUSNPIE2
"RTN","XUSNPIED",74,0)
 Q
"RTN","XUSNPIED",75,0)
GETDATA(OPTION,XUSSORT,XUSDIV) ; get data for reports for providers
"RTN","XUSNPIED",76,0)
 Q $$GETDATA^XUSNPIE2(OPTION,XUSSORT,XUSDIV)
"RTN","XUSNPIED",77,0)
 ;
"RTN","XUSNPIED",78,0)
CHEKNPI(IEN) ; returns whether status is Needs, will check and update if not set
"RTN","XUSNPIED",79,0)
 N VALUE,FDA
"RTN","XUSNPIED",80,0)
 S VALUE=$E($$GET1^DIQ(200,IEN_",",41.98))
"RTN","XUSNPIED",81,0)
 I VALUE="N" S FDA(200,IEN_",",41.98)="" D FILE^DIE("","FDA") S VALUE="" ; XU*8*435 JLI
"RTN","XUSNPIED",82,0)
 I VALUE="",$$CHKTAXON(IEN) K FDA S FDA(200,IEN_",",41.98)="N" D FILE^DIE("","FDA") S VALUE="N"
"RTN","XUSNPIED",83,0)
 Q VALUE="N"
"RTN","XUSNPIED",84,0)
 ;
"RTN","XUSNPIED",85,0)
NEEDSNPI(IEN) ; returns whether current status is N
"RTN","XUSNPIED",86,0)
 Q $$NPISTATS(IEN)="N"
"RTN","XUSNPIED",87,0)
 ;
"RTN","XUSNPIED",88,0)
HASNPI(IEN) ; returns whether current status is D (Done)
"RTN","XUSNPIED",89,0)
 Q $$NPISTATS(IEN)="D"
"RTN","XUSNPIED",90,0)
 ;
"RTN","XUSNPIED",91,0)
EXMPTNPI(IEN) ; returns whether current status is E (Exempt)
"RTN","XUSNPIED",92,0)
 Q $$NPISTATS(IEN)="E"
"RTN","XUSNPIED",93,0)
 ;
"RTN","XUSNPIED",94,0)
NPISTATS(IEN) ; returns one letter status indicator
"RTN","XUSNPIED",95,0)
 N VAL
"RTN","XUSNPIED",96,0)
 S VAL=$E($$GET1^DIQ(200,IEN_",",41.98))
"RTN","XUSNPIED",97,0)
 I (VAL="")!(VAL="N") S VAL=$$CHEKNPI(IEN)
"RTN","XUSNPIED",98,0)
 Q $E($$GET1^DIQ(200,IEN_",",41.98))
"RTN","XUSNPIED",99,0)
 ;
"RTN","XUSNPIED",100,0)
GETNPI(IEN) ; returns current NPI value
"RTN","XUSNPIED",101,0)
 Q $$GET1^DIQ(200,IEN_",",41.99)
"RTN","XUSNPIED",102,0)
 ;
"RTN","XUSNPIED",103,0)
GETTAXON(IEN,DESCRREF) ; returns Taxonomy value (X12) and sets description in DESCRREF, otherwise -1
"RTN","XUSNPIED",104,0)
 N I,POINTER,TAXON
"RTN","XUSNPIED",105,0)
 S TAXON=-1,DESCRREF=" "
"RTN","XUSNPIED",106,0)
 ;F I=0:0 S I=$O(^VA(200,IEN,"USC1",I)) Q:I'>0  I $P(^(I,0),U,3)'>0 S POINTER=+^(0) S TAXON=$$GET1^DIQ(8932.1,POINTER_",",6),DESCRREF=$$GET1^DIQ(8932.1,POINTER_",",1) Q
"RTN","XUSNPIED",107,0)
 S POINTER=+$$GET^XUA4A72(IEN) I POINTER>0 S TAXON=$$GET1^DIQ(8932.1,POINTER_",",6),DESCRREF=$$GET1^DIQ(8932.1,POINTER_",",1) ; XU*8*435 make sure active on today
"RTN","XUSNPIED",108,0)
 I TAXON="" S TAXON=-1,DESCRREF=" "
"RTN","XUSNPIED",109,0)
 Q TAXON
"RTN","XUSNPIED",110,0)
 ;
"RTN","XUSNPIED",111,0)
CHKTAXON(IEN,TAXONOMY) ; checks whether taxonomy value (X12) is in list of billable otherwise 0-1
"RTN","XUSNPIED",112,0)
 N DESCRIP,XUSGLOB
"RTN","XUSNPIED",113,0)
 I $G(TAXONOMY)="" S TAXONOMY=$$GETTAXON(IEN,.DESCRIP)
"RTN","XUSNPIED",114,0)
 S XUSGLOB=$$CHKGLOB()
"RTN","XUSNPIED",115,0)
 Q $D(@XUSGLOB@(TAXONOMY))
"RTN","XUSNPIED",116,0)
 ;
"RTN","XUSNPIED",117,0)
DATE10(DATE) ; returns date in mm/dd/yyyyy format
"RTN","XUSNPIED",118,0)
 Q $E(DATE,4,5)_"/"_$E(DATE,6,7)_"/"_(1700+$E(DATE,1,3))
"RTN","XUSNPIED",119,0)
 ;
"RTN","XUSNPIED",120,0)
POSTINIT ; runs post init
"RTN","XUSNPIED",121,0)
 D POSTINIT^XUSNPIE1
"RTN","XUSNPIED",122,0)
 Q
"RTN","XUSNPIED",123,0)
 ;
"RTN","XUSNPIED",124,0)
CBOQUEUE ; queues CBO List to run on first day of month
"RTN","XUSNPIED",125,0)
 D CBOQUEUE^XUSNPIE1
"RTN","XUSNPIED",126,0)
 Q
"RTN","XUSNPIED",127,0)
ALIGNRGT(TEXT,WIDTH) ; align text right in a specified width
"RTN","XUSNPIED",128,0)
 Q $$ALIGNRGT^XUSNPIE2(TEXT,WIDTH)
"UP",200,200.042,-1)
200^NPISTATUS
"UP",200,200.042,0)
200.042
"VER")
8.0^22.0
"^DD",200,200,41.99,0)
NPI^FX^^NPI;1^K:'($$CHKDGT^XUSNPIE1(X,DA,"Individual_ID")) X
"^DD",200,200,41.99,1,0)
^.1^^-1
"^DD",200,200,41.99,1,1,0)
200^ANPI
"^DD",200,200,41.99,1,1,1)
S ^VA(200,"ANPI",$E(X,1,30),DA)=""
"^DD",200,200,41.99,1,1,2)
K ^VA(200,"ANPI",$E(X,1,30),DA)
"^DD",200,200,41.99,1,1,"%D",0)
^^1^1^3060301^
"^DD",200,200,41.99,1,1,"%D",1,0)
File entries by NPI.
"^DD",200,200,41.99,1,1,"DT")
3060301
"^DD",200,200,41.99,3)
Answer must be 10 characters in length and not being used.
"^DD",200,200,41.99,21,0)
^.001^2^2^3061011^^^^
"^DD",200,200,41.99,21,1,0)
Current Unique National Provider ID. A unique meaningless integer assigned
"^DD",200,200,41.99,21,2,0)
to providers.
"^DD",200,200,41.99,"DT")
3061011
"^DD",200,200,42,0)
EFFECTIVE DATE/TIME^200.042D^^NPISTATUS;0
"^DD",200,200,42,"DT")
3060425
"^DD",200,200.042,0)
EFFECTIVE DATE/TIME SUB-FIELD^^.03^3
"^DD",200,200.042,0,"NM","EFFECTIVE DATE/TIME")

"^DD",200,200.042,.01,0)
EFFECTIVE DATE/TIME^DX^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",200,200.042,.01,1,0)
^.1
"^DD",200,200.042,.01,1,1,0)
200.042^B
"^DD",200,200.042,.01,1,1,1)
S ^VA(200,DA(1),"NPISTATUS","B",$E(X,1,30),DA)=""
"^DD",200,200.042,.01,1,1,2)
K ^VA(200,DA(1),"NPISTATUS","B",$E(X,1,30),DA)
"^DD",200,200.042,.01,3)
Enter the date/time of the last change to this NPI.
"^DD",200,200.042,.01,21,0)
^^1^1^3060425^
"^DD",200,200.042,.01,21,1,0)
This field contains the date and time of the last change to the NPI field.
"^DD",200,200.042,.01,"DT")
3060425
"BLD",973,6)
^357
**END**
**END**
