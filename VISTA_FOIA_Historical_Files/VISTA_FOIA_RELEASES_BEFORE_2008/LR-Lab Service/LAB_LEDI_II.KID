KIDS Distribution saved on Feb 19, 2002@15:44:04
Released LA*5.2*46/LR*5.2*222
**KIDS**:LA*5.2*46^LR*5.2*222^

**INSTALL NAME**
LA*5.2*46
"BLD",1451,0)
LA*5.2*46^AUTOMATED LAB INSTRUMENTS^0^3020219^y
"BLD",1451,1,0)
^9.61A^343^343^3020219^^^^
"BLD",1451,1,1,0)
VISTA Laboratory Package patch LA*5.2*46 contains no changes to software
"BLD",1451,1,2,0)
controlled by VHA DIRECTIVE 99-053, titled VISTA BLOOD BANK SOFTWARE.
"BLD",1451,1,3,0)
 
"BLD",1451,1,4,0)
========================================
"BLD",1451,1,5,0)
 
"BLD",1451,1,6,0)
This patch adds support for sending/receiving Laboratory Electronic
"BLD",1451,1,7,0)
Data Interchange (LEDI) orders/results with non-VA facilities
"BLD",1451,1,8,0)
(commercial reference laboratories).
"BLD",1451,1,9,0)
 
"BLD",1451,1,10,0)

"BLD",1451,1,11,0)
As of the release date of this software, there is no national solution to
"BLD",1451,1,12,0)
implement a laboratory electronic HL7 standard interface to a facility or
"BLD",1451,1,13,0)
other entity outside the VA wide area network.  National communication
"BLD",1451,1,14,0)
security concerns are still being debated by the Department of Veterans
"BLD",1451,1,15,0)
Affairs (VA) and are awaiting resolution.  At present, a VA medical center,
"BLD",1451,1,16,0)
which intends to utilize this software in conjunction with an interface to
"BLD",1451,1,17,0)
a commercial reference laboratory or other non-VA information system entity,
"BLD",1451,1,18,0)
will need to coordinate with the vendor an acceptable communication method.
"BLD",1451,1,19,0)
Any implementation will need to be approved by the facility and VISN
"BLD",1451,1,20,0)
Information Security Officer (ISO) and meet current VA security requirements
"BLD",1451,1,21,0)
for external electronic connections. See VHA Directive 6212, Security of
"BLD",1451,1,22,0)
External Electronic Connections and VHA Directive 6210, Automated Information
"BLD",1451,1,23,0)
Systems (AIS) Security for additional information and guidance. Additional
"BLD",1451,1,24,0)
security information may be obtained from the Health Information Security
"BLD",1451,1,25,0)
Service (HISS) web page at http://vaww.va.gov/miss.
"BLD",1451,1,26,0)

"BLD",1451,1,27,0)
Implementation of a HL7 messaging interface between the VA VistA Laboratory
"BLD",1451,1,28,0)
package and a non-VA information system consists basically of three parts:
"BLD",1451,1,29,0)
 - VistA Laboratory LEDI II software.
"BLD",1451,1,30,0)
 - certified communication software and hardware
"BLD",1451,1,31,0)
 - non-VA information system capable of sending and receiving laboratory HL7
"BLD",1451,1,32,0)
   order and result messages.
"BLD",1451,1,33,0)
All three must be functional to utilize the capabilities of this LEDI II
"BLD",1451,1,34,0)
software patch. The implementation,setup, and configuration of vendor provided
"BLD",1451,1,35,0)
hardware and software is NOT addressed by this documentation.  Consult the
"BLD",1451,1,36,0)
vendor provided documentation and instructions to interface to the VistA
"BLD",1451,1,37,0)
Laboratory package.
"BLD",1451,1,38,0)
  
"BLD",1451,1,39,0)
 
"BLD",1451,1,40,0)
Additionally support is added for TCP/IP protocol as a communication
"BLD",1451,1,41,0)
protocol for the transmission of LEDI HL7 messages. This requires
"BLD",1451,1,42,0)
patch HL*1.6*19 to have been successfully installed. The implementation
"BLD",1451,1,43,0)
of this protocol in place of the current MailMan protocol will
"BLD",1451,1,44,0)
significantly increase transmission speed of messages and reduce system
"BLD",1451,1,45,0)
overhead/storage. Both systems that will be exchanging HL7 messages,
"BLD",1451,1,46,0)
using the TCP/IP protocol will need to coordinate the switch to this
"BLD",1451,1,47,0)
new transmission method. There will be two logical links established
"BLD",1451,1,48,0)
to exchange messages a server (listener) logical link to receive and
"BLD",1451,1,49,0)
process messages and a client link to transmit messages.
"BLD",1451,1,50,0)
 
"BLD",1451,1,51,0)
A new shipping code SM40 - Required Shipping Info Updated has been added
"BLD",1451,1,52,0)
to file LAB ELECTRONIC CODES (#64.061). This code is used when recording
"BLD",1451,1,53,0)
this event in file LAB SHIPPING EVENT (#62.85)
"BLD",1451,1,54,0)
 
"BLD",1451,1,55,0)
  
"BLD",1451,1,56,0)
Comments can now contain ";"character. Previously the ";" character was
"BLD",1451,1,57,0)
used to parse comments into multiple lines and filed in the database using
"BLD",1451,1,58,0)
a classical FileMan DIE call. FileMan parsed the fields to edit using
"BLD",1451,1,59,0)
the ";" character in the DR string. The new call uses a FileMan database
"BLD",1451,1,60,0)
server call, which does not have this restriction.
"BLD",1451,1,61,0)
 
"BLD",1451,1,62,0)
 
"BLD",1451,1,63,0)
New fields have been added and existing fields modified within the
"BLD",1451,1,64,0)
CHEM TEST subfile of file AUTO INSTRUMENT (#62.4) to support the
"BLD",1451,1,65,0)
following features when processing result messages. These features
"BLD",1451,1,66,0)
are site-selectable. See data dictionary field description for each
"BLD",1451,1,67,0)
field for further information. Using option LEDI Setup [LA7V SETUP],
"BLD",1451,1,68,0)
the section on Auto Instrument settings will prompt for these additional
"BLD",1451,1,69,0)
fields.
"BLD",1451,1,70,0)
 
"BLD",1451,1,71,0)
1. Process NTE segments following OBX segments. Comments found attached
"BLD",1451,1,72,0)
   to specific test results are stored as comments. The field REMARK PREFIX
"BLD",1451,1,73,0)
   #18 in CHEM TEST subfile can be used to specify a comment prefix that
"BLD",1451,1,74,0)
   will be made part of the comment.
"BLD",1451,1,75,0)
2. Store test reference ranges, abnormal flags and name of performing
"BLD",1451,1,76,0)
   laboratory. This patch stores these parameters as comments with the
"BLD",1451,1,77,0)
   results. This information is prefixed with the field REMARK PREFIX.
"BLD",1451,1,78,0)
3. Specify whether final or incomplete results are processed.
"BLD",1451,1,79,0)
 
"BLD",1451,1,80,0)
The fields that are new/modified are:
"BLD",1451,1,81,0)
    ACCEPT RESULTS FOR THIS TEST
"BLD",1451,1,82,0)
    STORE REMARKS
"BLD",1451,1,83,0)
    REMARK PREFIX
"BLD",1451,1,84,0)
    STORE PRODUCER'S ID
"BLD",1451,1,85,0)
    STORE REFERENCE RANGE
"BLD",1451,1,86,0)
    STORE ABNORMAL FLAGS
"BLD",1451,1,87,0)
 
"BLD",1451,1,88,0)
New fields have been added to the LAB SHIPPING CONFIGURATION file (#62.9)
"BLD",1451,1,89,0)
to allow collecting facilities to specify required patient/specimen
"BLD",1451,1,90,0)
information to be sent with shipping manifest. This can include specimen
"BLD",1451,1,91,0)
volume, weight, collection end date/time (collection duration),
"BLD",1451,1,92,0)
patient height and weight (NOIS ALB-1099-51591). LOINC codes are used to
"BLD",1451,1,93,0)
identify patient height, weight and specimen weight when appropriate.
"BLD",1451,1,94,0)
Editing these fields is performed using option Edit Shipping Configuration
"BLD",1451,1,95,0)
[LA7S EDIT 62.9]. The fields are:
"BLD",1451,1,96,0)
 
"BLD",1451,1,97,0)
    USE NON-VA CODES
"BLD",1451,1,98,0)
    TEST/PROFILE sub-file
"BLD",1451,1,99,0)
      DIVISION
"BLD",1451,1,100,0)
      REQUIRE PATIENT HEIGHT
"BLD",1451,1,101,0)
      PATIENT HEIGHT
"BLD",1451,1,102,0)
      PATIENT HEIGHT UNITS
"BLD",1451,1,103,0)
      PATIENT HEIGHT LOINC CODE
"BLD",1451,1,104,0)
      REQUIRE PATIENT WEIGHT
"BLD",1451,1,105,0)
      PATIENT WEIGHT
"BLD",1451,1,106,0)
      PATIENT WEIGHT UNITS
"BLD",1451,1,107,0)
      PATIENT WEIGHT LOINC CODE
"BLD",1451,1,108,0)
      REQUIRE COLLECTION VOLUME
"BLD",1451,1,109,0)
      COLLECTION VOLUME
"BLD",1451,1,110,0)
      COLLECTION VOLUME UNITS
"BLD",1451,1,111,0)
      COLLECTION VOLUME LOINC CODE
"BLD",1451,1,112,0)
      REQUIRE COLLECTION END D/T
"BLD",1451,1,113,0)
 
"BLD",1451,1,114,0)
The process of building a shipping manifest now allows the user to
"BLD",1451,1,115,0)
specify the starting and ending accession numbers to check within an
"BLD",1451,1,116,0)
accession area. This feature can shorten manifest building time when
"BLD",1451,1,117,0)
searching a yearly accession area with a large number of accessions.
"BLD",1451,1,118,0)
It allows the site to skip the accession numbers that have been
"BLD",1451,1,119,0)
completed earlier in a year and no longer need to be checked to
"BLD",1451,1,120,0)
determine it any of the tests meet the criteria for building to a
"BLD",1451,1,121,0)
manifest.
"BLD",1451,1,122,0)
 
"BLD",1451,1,123,0)
 
"BLD",1451,1,124,0)
The process of closing a shipping manifest now performs a check of
"BLD",1451,1,125,0)
certain required information. The required information check is for:
"BLD",1451,1,126,0)
 1. Each test has an order NLT code assigned.
"BLD",1451,1,127,0)
 2. If shipping to a facility that does not use VA NLT codes for
"BLD",1451,1,128,0)
    test ordering, the appropriate non-VA test codes/names
"BLD",1451,1,129,0)
    have been designated for all tests on the manifest.
"BLD",1451,1,130,0)
 3. Site-specified required patient/specimen information has been
"BLD",1451,1,131,0)
    entered.
"BLD",1451,1,132,0)
 
"BLD",1451,1,133,0)
 
"BLD",1451,1,134,0)
The process of building orders in the file LAB PENDING ORDER (#69.6)
"BLD",1451,1,135,0)
has been enhanced to use information from the file LAB SHIPPING
"BLD",1451,1,136,0)
CONFIGURATION (#62.9) to create orders based on the host facilities
"BLD",1451,1,137,0)
specified collection sample and urgency.
"BLD",1451,1,138,0)
 
"BLD",1451,1,139,0)
 
"BLD",1451,1,140,0)
The LEDI result (ORU) messages will now include the test interpretation
"BLD",1451,1,141,0)
found in LABORATORY TEST file (#60) as a comment (NTE segment) following
"BLD",1451,1,142,0)
the test results. Test results to be stored will be checked against the
"BLD",1451,1,143,0)
FileMan input transform for the data name used to store the results in
"BLD",1451,1,144,0)
file LAB DATA (#63). If the results do not pass the FileMan input
"BLD",1451,1,145,0)
transform then an error message will be generated via the Lab
"BLD",1451,1,146,0)
Universal Interface error reporting process. Results values that are
"BLD",1451,1,147,0)
"canc", "pending" or "comment" will be stored.
"BLD",1451,1,148,0)
 
"BLD",1451,1,149,0)
 
"BLD",1451,1,150,0)
The option Display Lab Universal Interface Message [LA7 PRINT LAB UI
"BLD",1451,1,151,0)
MESSAGE] has been modified to prompt the user if the Kernel Browser
"BLD",1451,1,152,0)
should be used to display a message. If the browser is not selected then
"BLD",1451,1,153,0)
a standard "scroll and roll" display of the selected message(s) is
"BLD",1451,1,154,0)
produced.
"BLD",1451,1,155,0)

"BLD",1451,1,156,0)
Option Retransmit LEDI Lab Results [LA7S RESULTS RETRANSMIT] will allow
"BLD",1451,1,157,0)
a user to retransmit the laboratory test results for selected accession(s)
"BLD",1451,1,158,0)
to the collecting/submitting facility.
"BLD",1451,1,159,0)
 
"BLD",1451,1,160,0)
The install will update several files during the post-install as necessary:
"BLD",1451,1,161,0)
 - It was found that the original release of LEDI failed to update the
"BLD",1451,1,162,0)
   field SHIP VIA #.04 in file LAB SHIPPING MANIFEST (#62.8) when a manifest
"BLD",1451,1,163,0)
   is created. This information will update existing manifests with
"BLD",1451,1,164,0)
   information from the related file LAB SHIPPING CONFIGURATION (#62.9)
"BLD",1451,1,165,0)
   entry.
"BLD",1451,1,166,0)
 
"BLD",1451,1,167,0)
 - The processing routine specified in file LA7 MESSAGE PARAMETER (#62.48)
"BLD",1451,1,168,0)
   for entries related to LEDI has been changed. Existing entries will be
"BLD",1451,1,169,0)
   updated as appropriate.
"BLD",1451,1,170,0)
 
"BLD",1451,1,171,0)
 NOIS HIN-0998-40287 corrected an undefined variable error when building a
"BLD",1451,1,172,0)
   result message.
"BLD",1451,1,173,0)
 
"BLD",1451,1,174,0)
 NOIS BOS-0498-10163 reported an undefined error when attempting to lock
"BLD",1451,1,175,0)
 LAB SHIPPING MANIFEST file (#62.8). Due to a typographically error the
"BLD",1451,1,176,0)
 character "$" was omitted from a $DATA intrinsic function.
"BLD",1451,1,177,0)
 
"BLD",1451,1,178,0)
 NOIS TAM-0401-31867 reported that option Lab Messaging File Integrity
"BLD",1451,1,179,0)
 Checker [LA7 CHECK FILES] option allowed queuing the report to the
"BLD",1451,1,180,0)
 "HOME" device. The option will now prevent queuing to the HOME device.
"BLD",1451,1,181,0)
 It also removes "HOME" as the device default value.
"BLD",1451,1,182,0)
 
"BLD",1451,1,183,0)

"BLD",1451,1,184,0)
ASSOCIATED E3R
"BLD",1451,1,185,0)
--------------
"BLD",1451,1,186,0)
E3R #15348, RETRANSMIT FUNCTION FOR LEDI
"BLD",1451,1,187,0)
 
"BLD",1451,1,188,0)
ASSOCIATED NOIS
"BLD",1451,1,189,0)
---------------
"BLD",1451,1,190,0)
  ALB-1099-51591
"BLD",1451,1,191,0)
  ALB-0100-50284
"BLD",1451,1,192,0)
  BOS-0498-10163
"BLD",1451,1,193,0)
  HIN-0998-40287
"BLD",1451,1,194,0)
  HUN-1100-21862
"BLD",1451,1,195,0)
  MIW-1197-41082
"BLD",1451,1,196,0)
  TAM-0401-31867
"BLD",1451,1,197,0)
 
"BLD",1451,1,198,0)
 
"BLD",1451,1,199,0)
TEST SITES
"BLD",1451,1,200,0)
----------
"BLD",1451,1,201,0)
  Alexandria VAMC
"BLD",1451,1,202,0)
  Biloxi VAMC
"BLD",1451,1,203,0)
  Birmingham VAMC
"BLD",1451,1,204,0)
  Fayetteville VAMC
"BLD",1451,1,205,0)
  Hines VAMC
"BLD",1451,1,206,0)
  Houston VAMC
"BLD",1451,1,207,0)
  Jackson VAMC
"BLD",1451,1,208,0)
  Little Rock VAMC
"BLD",1451,1,209,0)
  Madison VAMC
"BLD",1451,1,210,0)
  Milwaukee VAMC
"BLD",1451,1,211,0)
  Muskogee VAMC
"BLD",1451,1,212,0)
  New Orleans VAMC
"BLD",1451,1,213,0)
  Oklahoma City VAMC
"BLD",1451,1,214,0)
  Shreveport VAMC
"BLD",1451,1,215,0)
 
"BLD",1451,1,216,0)
 
"BLD",1451,1,217,0)
ROUTINE SUMMARY
"BLD",1451,1,218,0)
===============
"BLD",1451,1,219,0)
  The following routines are included in this patch.  The second line
"BLD",1451,1,220,0)
  of each of these routines now looks like:
"BLD",1451,1,221,0)
  <tab> ;;5.2;AUTOMATED LAB INSTRUMENTS;<patchlist>;Sep 27, 1994
"BLD",1451,1,222,0)
 
"BLD",1451,1,223,0)
                    Checksum       Checksum
"BLD",1451,1,224,0)
   Routine Name     Before Patch   After Patch    Patch List
"BLD",1451,1,225,0)
   ------------     ------------   -----------    ------------
"BLD",1451,1,226,0)
   LA46             N/A            9520365        **46** (Deleted by KIDS)
"BLD",1451,1,227,0)
   LA7CHKF          10597193       11028299       **27,46**
"BLD",1451,1,228,0)
   LA7QRY           N/A            1084520        **46**
"BLD",1451,1,229,0)
   LA7QRY1          N/A            3509927        **46**
"BLD",1451,1,230,0)
   LA7QRY2          N/A            4552927        **46**
"BLD",1451,1,231,0)
   LA7SBCR          1495927        653666         **27,46**
"BLD",1451,1,232,0)
   LA7SBCR1         7086650        4924406        **27,46**
"BLD",1451,1,233,0)
   LA7SBCR2         3323374        2564479        **27,46**
"BLD",1451,1,234,0)
   LA7SCE           10260809       11402708       **27,46**
"BLD",1451,1,235,0)
   LA7SM            16316313       10277989       **27,46**
"BLD",1451,1,236,0)
   LA7SM1           2146828        8553973        **27,46**
"BLD",1451,1,237,0)
   LA7SM2           N/A            12143125       **46**
"BLD",1451,1,238,0)
   LA7SMB           17707549       14649107       **27,46**
"BLD",1451,1,239,0)
   LA7SMP           15792287       11746903       **27,45,46**
"BLD",1451,1,240,0)
   LA7SMP0          N/A            9303222        **46**
"BLD",1451,1,241,0)
   LA7SMPXL         5400542        3215234        **27,42,46**
"BLD",1451,1,242,0)
   LA7SMU           11040439       7104257        **27,46**
"BLD",1451,1,243,0)
   LA7SMU1          5335635        6241668        **27,46**
"BLD",1451,1,244,0)
   LA7SMU2          N/A            5290542        **46**
"BLD",1451,1,245,0)
   LA7SRR           N/A            6233015        **46**
"BLD",1451,1,246,0)
   LA7UIIN2         9850298        12296505       **17,23,27,46**
"BLD",1451,1,247,0)
   LA7UTILA         11812487       10237097       **23,27,46**
"BLD",1451,1,248,0)
   LA7VHL           8527903        4500486        **27,46**
"BLD",1451,1,249,0)
   LA7VHLU          N/A            4469720        **46**
"BLD",1451,1,250,0)
   LA7VHLU1         N/A            2011157        **46**
"BLD",1451,1,251,0)
   LA7VHLU2         N/A            3873916        **46**
"BLD",1451,1,252,0)
   LA7VHLU3         N/A            2007360        **46**
"BLD",1451,1,253,0)
   LA7VHLU4         N/A            5424804        **46**
"BLD",1451,1,254,0)
   LA7VHLU5         N/A            5541950        **46**
"BLD",1451,1,255,0)
   LA7VIN           N/A            1398763        **46**
"BLD",1451,1,256,0)
   LA7VIN1          N/A            5261630        **46**
"BLD",1451,1,257,0)
   LA7VIN2          N/A            5808892        **46**
"BLD",1451,1,258,0)
   LA7VIN3          N/A            2061956        **46**
"BLD",1451,1,259,0)
   LA7VIN4          N/A            7936019        **46**
"BLD",1451,1,260,0)
   LA7VIN5          N/A            5205707        **46**
"BLD",1451,1,261,0)
   LA7VIN5A         N/A            5039195        **46**
"BLD",1451,1,262,0)
   LA7VMSG          16357149       3253314        **27,50,56,46**
"BLD",1451,1,263,0)
   LA7VMSG1         3358807        8200340        **56,46**
"BLD",1451,1,264,0)
   LA7VOBR          N/A            2129056        **46**
"BLD",1451,1,265,0)
   LA7VOBRA         N/A            5326634        **46**
"BLD",1451,1,266,0)
   LA7VOBX          N/A            2088674        **46**
"BLD",1451,1,267,0)
   LA7VOBX1         N/A            3799868        **46**
"BLD",1451,1,268,0)
   LA7VOBX2         N/A            4350324        **46**
"BLD",1451,1,269,0)
   LA7VOBX3         N/A            5240738        **46**
"BLD",1451,1,270,0)
   LA7VOBXA         N/A            6232009        **46**
"BLD",1451,1,271,0)
   LA7VORC          N/A            1565653        **46**
"BLD",1451,1,272,0)
   LA7VORM          17384019       6471896        **27,42,46**
"BLD",1451,1,273,0)
   LA7VORM1         20868841       7601990        **27,51,46**
"BLD",1451,1,274,0)
   LA7VORM2         N/A            3426954        **46**
"BLD",1451,1,275,0)
   LA7VORM3         N/A            6787219        **46**
"BLD",1451,1,276,0)
   LA7VORU          10077624       8070282        **27,46**
"BLD",1451,1,277,0)
   LA7VORU1         N/A            4734718        **46**
"BLD",1451,1,278,0)
   LA7VORU2         N/A            1962290        **46**
"BLD",1451,1,279,0)
   LA7VPID          N/A            4123683        **46**
"BLD",1451,1,280,0)
   LA7VSET          19500034       15979413       **27,51,55,46**
"BLD",1451,1,281,0)
   LA7VSET1         12858976       9065449        **27,51,55,46**
"BLD",1451,1,282,0)
   LA7VSTP          6154318        6079680        **27,44,51,46**
"BLD",1451,1,283,0)
   LA7VSTP1         8332246        3317926        **27,46**
"BLD",1451,1,284,0)
   LAGEN            9445120        8522786        **1,17,22,27,47,46**
"BLD",1451,1,285,0)
   LASET            6644420        6955342        **27,42,46**
"BLD",1451,1,286,0)
 
"BLD",1451,1,287,0)
 List of preceding patches: 42, 45, 47, 51, 55, 56
"BLD",1451,1,288,0)
 Sites should use CHECK^XTSUMBLD to verify checksums.
"BLD",1451,1,289,0)
     
"BLD",1451,1,290,0)
 
"BLD",1451,1,291,0)
SOFTWARE RETRIEVAL:
"BLD",1451,1,292,0)
===================
"BLD",1451,1,293,0)
   
"BLD",1451,1,294,0)
   The following software and documentation files are exported as part of
"BLD",1451,1,295,0)
   this patch:
"BLD",1451,1,296,0)
  
"BLD",1451,1,297,0)
    File Name           Contents                         Retrieval Format
"BLD",1451,1,298,0)
    ---------           --------                         ----------------
"BLD",1451,1,299,0)
    LAB_LEDI_II.KID     LA*5.2*46 KIDS build                 ASCII
"BLD",1451,1,300,0)
                        LR*5.2*222 KIDS build
"BLD",1451,1,301,0)
 
"BLD",1451,1,302,0)
    LAB_LEDI_II_IG.PDF  LABORATORY ELECTRONIC DATA           BINARY
"BLD",1451,1,303,0)
    LAB_LEDI_II_IG.DOC   INTERCHANGE PHASE II (LEDI II)
"BLD",1451,1,304,0)
                         INSTALLATION GUIDE
"BLD",1451,1,305,0)
 
"BLD",1451,1,306,0)
    LAB_LEDI_II_UM.PDF  LABORATORY ELECTRONIC DATA           BINARY
"BLD",1451,1,307,0)
    LAB_LEDI_II_UM.DOC   INTERCHANGE PHASE II (LEDI II)
"BLD",1451,1,308,0)
                         USER MANUAL
"BLD",1451,1,309,0)
 
"BLD",1451,1,310,0)
   The software files are available on one of the following OI Field
"BLD",1451,1,311,0)
   Offices' ANONYMOUS.SOFTWARE directories.
"BLD",1451,1,312,0)
 
"BLD",1451,1,313,0)
   All sites are encouraged to use their FTP capability to obtain these 
"BLD",1451,1,314,0)
   files.  Use the FTP address "download.vista.med.va.gov" (without the
"BLD",1451,1,315,0)
   quotes) to connect to the first available FTP server where the files
"BLD",1451,1,316,0)
   are located.
"BLD",1451,1,317,0)
 
"BLD",1451,1,318,0)
      OI FIELD OFFICE    FTP ADDRESS                DIRECTORY
"BLD",1451,1,319,0)
      ===============    ===========                =========
"BLD",1451,1,320,0)
      ALBANY             ftp.fo-albany.med.va.gov   [ANONYMOUS.SOFTWARE]
"BLD",1451,1,321,0)
      HINES              ftp.fo-hines.med.va.gov    [ANONYMOUS.SOFTWARE]
"BLD",1451,1,322,0)
      SALT LAKE          ftp.fo-slc.med.va.gov      [ANONYMOUS.SOFTWARE]
"BLD",1451,1,323,0)
 
"BLD",1451,1,324,0)

"BLD",1451,1,325,0)

"BLD",1451,1,326,0)
INSTALLATION INSTRUCTIONS
"BLD",1451,1,327,0)
-------------------------
"BLD",1451,1,328,0)
  The instructions for installation of the software are included in the
"BLD",1451,1,329,0)
  installation guide.
"BLD",1451,1,330,0)

"BLD",1451,1,331,0)

"BLD",1451,1,332,0)
POST-INSTALLATION INSTRUCTIONS
"BLD",1451,1,333,0)
------------------------------
"BLD",1451,1,334,0)
 
"BLD",1451,1,335,0)
 
"BLD",1451,1,336,0)
  The post-instructions for installation of the software are included in
"BLD",1451,1,337,0)
  the installation guide.
"BLD",1451,1,338,0)
  
"BLD",1451,1,339,0)
 
"BLD",1451,1,340,0)
INSTALLATION EXAMPLE
"BLD",1451,1,341,0)
====================
"BLD",1451,1,342,0)
 
"BLD",1451,1,343,0)
  An installation example is included in the installation guide.
"BLD",1451,4,0)
^9.64PA^62.48^6
"BLD",1451,4,62.4,0)
62.4
"BLD",1451,4,62.4,2,0)
^9.641^62.4^2
"BLD",1451,4,62.4,2,62.4,0)
AUTO INSTRUMENT  (File-top level)
"BLD",1451,4,62.4,2,62.4,1,0)
^9.6411^18^1
"BLD",1451,4,62.4,2,62.4,1,18,0)
STORE REMARKS
"BLD",1451,4,62.4,2,62.41,0)
CHEM TESTS  (sub-file)
"BLD",1451,4,62.4,2,62.41,1,0)
^9.6411^14^6
"BLD",1451,4,62.4,2,62.41,1,14,0)
ACCEPT RESULTS FOR THIS TEST
"BLD",1451,4,62.4,2,62.41,1,18,0)
STORE REMARKS
"BLD",1451,4,62.4,2,62.41,1,19,0)
REMARK PREFIX
"BLD",1451,4,62.4,2,62.41,1,20,0)
STORE PRODUCER'S ID
"BLD",1451,4,62.4,2,62.41,1,21,0)
STORE REFERENCE RANGE
"BLD",1451,4,62.4,2,62.41,1,22,0)
STORE ABNORMAL FLAGS
"BLD",1451,4,62.4,222)
y^n^p^^^^n
"BLD",1451,4,62.48,0)
62.48
"BLD",1451,4,62.48,2,0)
^9.641^62.48^1
"BLD",1451,4,62.48,2,62.48,0)
LA7 MESSAGE PARAMETER  (File-top level)
"BLD",1451,4,62.48,2,62.48,1,0)
^9.6411^11^2
"BLD",1451,4,62.48,2,62.48,1,10,0)
MULTIPLE PATIENTS
"BLD",1451,4,62.48,2,62.48,1,11,0)
INTERFACE TYPE
"BLD",1451,4,62.48,222)
y^n^p^^^^n
"BLD",1451,4,62.485,0)
62.485
"BLD",1451,4,62.485,222)
n^n^f^^n^^y^o^n
"BLD",1451,4,62.485,224)
I Y=15!(Y=17)!(Y=18)!(Y=23)!(Y=25)!(Y=26)!((Y>28)&(Y<46))
"BLD",1451,4,62.49,0)
62.49
"BLD",1451,4,62.49,2,0)
^9.641^62.49^1
"BLD",1451,4,62.49,2,62.49,0)
LA7 MESSAGE QUEUE  (File-top level)
"BLD",1451,4,62.49,2,62.49,1,0)
^9.6411^2^1
"BLD",1451,4,62.49,2,62.49,1,2,0)
STATUS
"BLD",1451,4,62.49,222)
y^n^p^^^^n
"BLD",1451,4,62.8,0)
62.8
"BLD",1451,4,62.8,2,0)
^9.641^62.8^2
"BLD",1451,4,62.8,2,62.8,0)
LAB SHIPPING MANIFEST  (File-top level)
"BLD",1451,4,62.8,2,62.8,1,0)
^9.6411^.05^1
"BLD",1451,4,62.8,2,62.8,1,.05,0)
USE NON-VA CODES
"BLD",1451,4,62.8,2,62.801,0)
SPECIMENS  (sub-file)
"BLD",1451,4,62.8,2,62.801,1,0)
^9.6411^2.34^21
"BLD",1451,4,62.8,2,62.801,1,1.1,0)
REQUIRE PATIENT HEIGHT
"BLD",1451,4,62.8,2,62.801,1,1.11,0)
PATIENT HEIGHT
"BLD",1451,4,62.8,2,62.801,1,1.13,0)
PATIENT HEIGHT UNITS
"BLD",1451,4,62.8,2,62.801,1,1.14,0)
PATIENT HEIGHT LOINC CODE
"BLD",1451,4,62.8,2,62.801,1,1.2,0)
REQUIRE PATIENT WEIGHT
"BLD",1451,4,62.8,2,62.801,1,1.21,0)
PATIENT WEIGHT
"BLD",1451,4,62.8,2,62.801,1,1.23,0)
PATIENT WEIGHT UNITS
"BLD",1451,4,62.8,2,62.801,1,1.24,0)
PATIENT WEIGHT LOINC CODE
"BLD",1451,4,62.8,2,62.801,1,2.1,0)
REQUIRE COLLECTION VOLUME
"BLD",1451,4,62.8,2,62.801,1,2.11,0)
COLLECTION VOLUME
"BLD",1451,4,62.8,2,62.801,1,2.13,0)
COLLECTION VOLUME UNITS
"BLD",1451,4,62.8,2,62.801,1,2.14,0)
COLLECTION VOLUME LOINC CODE
"BLD",1451,4,62.8,2,62.801,1,2.2,0)
REQUIRE COLLECTION END D/T
"BLD",1451,4,62.8,2,62.801,1,2.21,0)
COLLECTION END DATE/TIME
"BLD",1451,4,62.8,2,62.801,1,2.22,0)
COLLECTION DURATION
"BLD",1451,4,62.8,2,62.801,1,2.23,0)
COLLECTION DURATION UNITS
"BLD",1451,4,62.8,2,62.801,1,2.24,0)
COLLECTION DURATION LOINC CODE
"BLD",1451,4,62.8,2,62.801,1,2.3,0)
REQUIRE COLLECTION WEIGHT
"BLD",1451,4,62.8,2,62.801,1,2.31,0)
COLLECTION WEIGHT
"BLD",1451,4,62.8,2,62.801,1,2.33,0)
COLLECTION WEIGHT UNITS
"BLD",1451,4,62.8,2,62.801,1,2.34,0)
COLLECTION WEIGHT LOINC CODE
"BLD",1451,4,62.8,222)
y^n^p^^^^n
"BLD",1451,4,62.9,0)
62.9
"BLD",1451,4,62.9,2,0)
^9.641^62.9^2
"BLD",1451,4,62.9,2,62.9,0)
LAB SHIPPING CONFIGURATION  (File-top level)
"BLD",1451,4,62.9,2,62.9,1,0)
^9.6411^.09^3
"BLD",1451,4,62.9,2,62.9,1,.09,0)
BARCODE MANIFEST
"BLD",1451,4,62.9,2,62.9,1,.14,0)
TEST CODING SYSTEM
"BLD",1451,4,62.9,2,62.9,1,.15,0)
SPECIMEN CODING SYSTEM
"BLD",1451,4,62.9,2,62.9001,0)
TEST/PROFILE  (sub-file)
"BLD",1451,4,62.9,2,62.9001,1,0)
^9.6411^.025^21
"BLD",1451,4,62.9,2,62.9001,1,.025,0)
DIVISION
"BLD",1451,4,62.9,2,62.9001,1,.04,0)
URGENCY
"BLD",1451,4,62.9,2,62.9001,1,1.1,0)
REQUIRE PATIENT HEIGHT
"BLD",1451,4,62.9,2,62.9001,1,1.15,0)
PATIENT HEIGHT UNITS
"BLD",1451,4,62.9,2,62.9001,1,1.16,0)
PATIENT HEIGHT CODE
"BLD",1451,4,62.9,2,62.9001,1,1.2,0)
REQUIRE PATIENT WEIGHT
"BLD",1451,4,62.9,2,62.9001,1,1.25,0)
PATIENT WEIGHT UNITS
"BLD",1451,4,62.9,2,62.9001,1,1.26,0)
PATIENT WEIGHT CODE
"BLD",1451,4,62.9,2,62.9001,1,2.1,0)
REQUIRE COLLECTION VOLUME
"BLD",1451,4,62.9,2,62.9001,1,2.15,0)
COLLECTION VOLUME UNITS
"BLD",1451,4,62.9,2,62.9001,1,2.16,0)
COLLECTION VOLUME CODE
"BLD",1451,4,62.9,2,62.9001,1,2.2,0)
REQUIRE COLLECTION END D/T
"BLD",1451,4,62.9,2,62.9001,1,2.25,0)
COLLECTION DURATION UNITS
"BLD",1451,4,62.9,2,62.9001,1,2.26,0)
COLLECTION DURATION CODE
"BLD",1451,4,62.9,2,62.9001,1,2.3,0)
REQUIRE COLLECTION WEIGHT
"BLD",1451,4,62.9,2,62.9001,1,2.35,0)
COLLECTION WEIGHT UNITS
"BLD",1451,4,62.9,2,62.9001,1,2.36,0)
COLLECTION WEIGHT CODE
"BLD",1451,4,62.9,2,62.9001,1,5.1,0)
NON-VA TEST ORDER CODE
"BLD",1451,4,62.9,2,62.9001,1,5.2,0)
NON-VA TEST ORDER NAME
"BLD",1451,4,62.9,2,62.9001,1,5.3,0)
NON-VA SPECIMEN CODE
"BLD",1451,4,62.9,2,62.9001,1,5.4,0)
NON-VA SPECIMEN NAME
"BLD",1451,4,62.9,222)
y^n^p^^^^n
"BLD",1451,4,"APDD",62.4,62.4)

"BLD",1451,4,"APDD",62.4,62.4,18)

"BLD",1451,4,"APDD",62.4,62.41)

"BLD",1451,4,"APDD",62.4,62.41,14)

"BLD",1451,4,"APDD",62.4,62.41,18)

"BLD",1451,4,"APDD",62.4,62.41,19)

"BLD",1451,4,"APDD",62.4,62.41,20)

"BLD",1451,4,"APDD",62.4,62.41,21)

"BLD",1451,4,"APDD",62.4,62.41,22)

"BLD",1451,4,"APDD",62.48,62.48)

"BLD",1451,4,"APDD",62.48,62.48,10)

"BLD",1451,4,"APDD",62.48,62.48,11)

"BLD",1451,4,"APDD",62.49,62.49)

"BLD",1451,4,"APDD",62.49,62.49,2)

"BLD",1451,4,"APDD",62.8,62.8)

"BLD",1451,4,"APDD",62.8,62.8,.05)

"BLD",1451,4,"APDD",62.8,62.801)

"BLD",1451,4,"APDD",62.8,62.801,1.1)

"BLD",1451,4,"APDD",62.8,62.801,1.11)

"BLD",1451,4,"APDD",62.8,62.801,1.13)

"BLD",1451,4,"APDD",62.8,62.801,1.14)

"BLD",1451,4,"APDD",62.8,62.801,1.2)

"BLD",1451,4,"APDD",62.8,62.801,1.21)

"BLD",1451,4,"APDD",62.8,62.801,1.23)

"BLD",1451,4,"APDD",62.8,62.801,1.24)

"BLD",1451,4,"APDD",62.8,62.801,2.1)

"BLD",1451,4,"APDD",62.8,62.801,2.11)

"BLD",1451,4,"APDD",62.8,62.801,2.13)

"BLD",1451,4,"APDD",62.8,62.801,2.14)

"BLD",1451,4,"APDD",62.8,62.801,2.2)

"BLD",1451,4,"APDD",62.8,62.801,2.21)

"BLD",1451,4,"APDD",62.8,62.801,2.22)

"BLD",1451,4,"APDD",62.8,62.801,2.23)

"BLD",1451,4,"APDD",62.8,62.801,2.24)

"BLD",1451,4,"APDD",62.8,62.801,2.3)

"BLD",1451,4,"APDD",62.8,62.801,2.31)

"BLD",1451,4,"APDD",62.8,62.801,2.33)

"BLD",1451,4,"APDD",62.8,62.801,2.34)

"BLD",1451,4,"APDD",62.9,62.9)

"BLD",1451,4,"APDD",62.9,62.9,.09)

"BLD",1451,4,"APDD",62.9,62.9,.14)

"BLD",1451,4,"APDD",62.9,62.9,.15)

"BLD",1451,4,"APDD",62.9,62.9001)

"BLD",1451,4,"APDD",62.9,62.9001,.025)

"BLD",1451,4,"APDD",62.9,62.9001,.04)

"BLD",1451,4,"APDD",62.9,62.9001,1.1)

"BLD",1451,4,"APDD",62.9,62.9001,1.15)

"BLD",1451,4,"APDD",62.9,62.9001,1.16)

"BLD",1451,4,"APDD",62.9,62.9001,1.2)

"BLD",1451,4,"APDD",62.9,62.9001,1.25)

"BLD",1451,4,"APDD",62.9,62.9001,1.26)

"BLD",1451,4,"APDD",62.9,62.9001,2.1)

"BLD",1451,4,"APDD",62.9,62.9001,2.15)

"BLD",1451,4,"APDD",62.9,62.9001,2.16)

"BLD",1451,4,"APDD",62.9,62.9001,2.2)

"BLD",1451,4,"APDD",62.9,62.9001,2.25)

"BLD",1451,4,"APDD",62.9,62.9001,2.26)

"BLD",1451,4,"APDD",62.9,62.9001,2.3)

"BLD",1451,4,"APDD",62.9,62.9001,2.35)

"BLD",1451,4,"APDD",62.9,62.9001,2.36)

"BLD",1451,4,"APDD",62.9,62.9001,5.1)

"BLD",1451,4,"APDD",62.9,62.9001,5.2)

"BLD",1451,4,"APDD",62.9,62.9001,5.3)

"BLD",1451,4,"APDD",62.9,62.9001,5.4)

"BLD",1451,4,"B",62.4,62.4)

"BLD",1451,4,"B",62.48,62.48)

"BLD",1451,4,"B",62.485,62.485)

"BLD",1451,4,"B",62.49,62.49)

"BLD",1451,4,"B",62.8,62.8)

"BLD",1451,4,"B",62.9,62.9)

"BLD",1451,"ABPKG")
n
"BLD",1451,"INI")
PRE^LA46
"BLD",1451,"INID")
y
"BLD",1451,"INIT")
POST^LA46
"BLD",1451,"KRN",0)
^9.67PA^19^18
"BLD",1451,"KRN",.4,0)
.4
"BLD",1451,"KRN",.401,0)
.401
"BLD",1451,"KRN",.402,0)
.402
"BLD",1451,"KRN",.403,0)
.403
"BLD",1451,"KRN",.5,0)
.5
"BLD",1451,"KRN",.84,0)
.84
"BLD",1451,"KRN",3.6,0)
3.6
"BLD",1451,"KRN",3.8,0)
3.8
"BLD",1451,"KRN",9.2,0)
9.2
"BLD",1451,"KRN",9.8,0)
9.8
"BLD",1451,"KRN",9.8,"NM",0)
^9.68A^61^59
"BLD",1451,"KRN",9.8,"NM",1,0)
LA7SM^^0^B54631114
"BLD",1451,"KRN",9.8,"NM",2,0)
LA7SM1^^0^B30704634
"BLD",1451,"KRN",9.8,"NM",3,0)
LA7SMB^^0^B80842620
"BLD",1451,"KRN",9.8,"NM",4,0)
LA7UIIN2^^0^B38831841
"BLD",1451,"KRN",9.8,"NM",5,0)
LASET^^0^B11597716
"BLD",1451,"KRN",9.8,"NM",6,0)
LA7VMSG^^0^B14542931
"BLD",1451,"KRN",9.8,"NM",7,0)
LA7SMU^^0^B42269781
"BLD",1451,"KRN",9.8,"NM",8,0)
LA7SMP^^0^B57057060
"BLD",1451,"KRN",9.8,"NM",10,0)
LA7VSTP1^^0^B6656992
"BLD",1451,"KRN",9.8,"NM",11,0)
LA7SCE^^0^B45378724
"BLD",1451,"KRN",9.8,"NM",12,0)
LA7SMP0^^0^B35338362
"BLD",1451,"KRN",9.8,"NM",13,0)
LA7VORM1^^0^B37527834
"BLD",1451,"KRN",9.8,"NM",14,0)
LA7SMU1^^0^B18115963
"BLD",1451,"KRN",9.8,"NM",15,0)
LA7VORU^^0^B61246924
"BLD",1451,"KRN",9.8,"NM",16,0)
LA7SBCR^^0^B1661487
"BLD",1451,"KRN",9.8,"NM",17,0)
LA7SBCR1^^0^B32099762
"BLD",1451,"KRN",9.8,"NM",18,0)
LA7SBCR2^^0^B11539409
"BLD",1451,"KRN",9.8,"NM",19,0)
LA7VORM^^0^B31363097
"BLD",1451,"KRN",9.8,"NM",20,0)
LA7VORM2^^0^B11274641
"BLD",1451,"KRN",9.8,"NM",21,0)
LA7SM2^^0^B40446296
"BLD",1451,"KRN",9.8,"NM",22,0)
LA7VOBX^^0^B20048789
"BLD",1451,"KRN",9.8,"NM",23,0)
LA7VHLU^^0^B32103706
"BLD",1451,"KRN",9.8,"NM",24,0)
LA7UTILA^^0^B44622497
"BLD",1451,"KRN",9.8,"NM",25,0)
LA7VOBR^^0^B14967989
"BLD",1451,"KRN",9.8,"NM",26,0)
LA7VORC^^0^B6047893
"BLD",1451,"KRN",9.8,"NM",27,0)
LA7VHLU1^^0^B6538478
"BLD",1451,"KRN",9.8,"NM",28,0)
LA7VIN^^0^B4484413
"BLD",1451,"KRN",9.8,"NM",29,0)
LA7VIN1^^0^B34566928
"BLD",1451,"KRN",9.8,"NM",30,0)
LA7VIN2^^0^B34090549
"BLD",1451,"KRN",9.8,"NM",31,0)
LA7VIN4^^0^B42747096
"BLD",1451,"KRN",9.8,"NM",32,0)
LA7VIN5^^0^B22392211
"BLD",1451,"KRN",9.8,"NM",33,0)
LAGEN^^0^B33028842
"BLD",1451,"KRN",9.8,"NM",34,0)
LA7VHLU2^^0^B15073091
"BLD",1451,"KRN",9.8,"NM",35,0)
LA7CHKF^^0^B45130719
"BLD",1451,"KRN",9.8,"NM",36,0)
LA7VHL^^0^B18562213
"BLD",1451,"KRN",9.8,"NM",38,0)
LA7VIN3^^0^B5448818
"BLD",1451,"KRN",9.8,"NM",39,0)
LA7VSTP^^0^B21583239
"BLD",1451,"KRN",9.8,"NM",40,0)
LA7SMU2^^0^B20789198
"BLD",1451,"KRN",9.8,"NM",41,0)
LA7VHLU3^^0^B9236757
"BLD",1451,"KRN",9.8,"NM",42,0)
LA7VMSG1^^0^B47582421
"BLD",1451,"KRN",9.8,"NM",43,0)
LA7VPID^^0^B19522874
"BLD",1451,"KRN",9.8,"NM",44,0)
LA7QRY^^0^B4448752
"BLD",1451,"KRN",9.8,"NM",45,0)
LA7VOBX1^^0^B11399892
"BLD",1451,"KRN",9.8,"NM",46,0)
LA7VOBX2^^0^B15187776
"BLD",1451,"KRN",9.8,"NM",47,0)
LA7VHLU4^^0^B24283849
"BLD",1451,"KRN",9.8,"NM",48,0)
LA7VORM3^^0^B19717396
"BLD",1451,"KRN",9.8,"NM",49,0)
LA7VOBX3^^0^B26075050
"BLD",1451,"KRN",9.8,"NM",50,0)
LA7VORU2^^0^B4657576
"BLD",1451,"KRN",9.8,"NM",51,0)
LA7VORU1^^0^B33175149
"BLD",1451,"KRN",9.8,"NM",52,0)
LA7QRY1^^0^B12153831
"BLD",1451,"KRN",9.8,"NM",53,0)
LA7VOBXA^^0^B30663223
"BLD",1451,"KRN",9.8,"NM",54,0)
LA7VSET^^0^B104720363
"BLD",1451,"KRN",9.8,"NM",55,0)
LA7VHLU5^^0^B23832778
"BLD",1451,"KRN",9.8,"NM",56,0)
LA7SMPXL^^0^B10769418
"BLD",1451,"KRN",9.8,"NM",57,0)
LA7VIN5A^^0^B32530169
"BLD",1451,"KRN",9.8,"NM",58,0)
LA7VSET1^^0^B37718613
"BLD",1451,"KRN",9.8,"NM",59,0)
LA7QRY2^^0^B19638288
"BLD",1451,"KRN",9.8,"NM",60,0)
LA7VOBRA^^0^B19761602
"BLD",1451,"KRN",9.8,"NM",61,0)
LA7SRR^^0^B19306212
"BLD",1451,"KRN",9.8,"NM","B","LA7CHKF",35)

"BLD",1451,"KRN",9.8,"NM","B","LA7QRY",44)

"BLD",1451,"KRN",9.8,"NM","B","LA7QRY1",52)

"BLD",1451,"KRN",9.8,"NM","B","LA7QRY2",59)

"BLD",1451,"KRN",9.8,"NM","B","LA7SBCR",16)

"BLD",1451,"KRN",9.8,"NM","B","LA7SBCR1",17)

"BLD",1451,"KRN",9.8,"NM","B","LA7SBCR2",18)

"BLD",1451,"KRN",9.8,"NM","B","LA7SCE",11)

"BLD",1451,"KRN",9.8,"NM","B","LA7SM",1)

"BLD",1451,"KRN",9.8,"NM","B","LA7SM1",2)

"BLD",1451,"KRN",9.8,"NM","B","LA7SM2",21)

"BLD",1451,"KRN",9.8,"NM","B","LA7SMB",3)

"BLD",1451,"KRN",9.8,"NM","B","LA7SMP",8)

"BLD",1451,"KRN",9.8,"NM","B","LA7SMP0",12)

"BLD",1451,"KRN",9.8,"NM","B","LA7SMPXL",56)

"BLD",1451,"KRN",9.8,"NM","B","LA7SMU",7)

"BLD",1451,"KRN",9.8,"NM","B","LA7SMU1",14)

"BLD",1451,"KRN",9.8,"NM","B","LA7SMU2",40)

"BLD",1451,"KRN",9.8,"NM","B","LA7SRR",61)

"BLD",1451,"KRN",9.8,"NM","B","LA7UIIN2",4)

"BLD",1451,"KRN",9.8,"NM","B","LA7UTILA",24)

"BLD",1451,"KRN",9.8,"NM","B","LA7VHL",36)

"BLD",1451,"KRN",9.8,"NM","B","LA7VHLU",23)

"BLD",1451,"KRN",9.8,"NM","B","LA7VHLU1",27)

"BLD",1451,"KRN",9.8,"NM","B","LA7VHLU2",34)

"BLD",1451,"KRN",9.8,"NM","B","LA7VHLU3",41)

"BLD",1451,"KRN",9.8,"NM","B","LA7VHLU4",47)

"BLD",1451,"KRN",9.8,"NM","B","LA7VHLU5",55)

"BLD",1451,"KRN",9.8,"NM","B","LA7VIN",28)

"BLD",1451,"KRN",9.8,"NM","B","LA7VIN1",29)

"BLD",1451,"KRN",9.8,"NM","B","LA7VIN2",30)

"BLD",1451,"KRN",9.8,"NM","B","LA7VIN3",38)

"BLD",1451,"KRN",9.8,"NM","B","LA7VIN4",31)

"BLD",1451,"KRN",9.8,"NM","B","LA7VIN5",32)

"BLD",1451,"KRN",9.8,"NM","B","LA7VIN5A",57)

"BLD",1451,"KRN",9.8,"NM","B","LA7VMSG",6)

"BLD",1451,"KRN",9.8,"NM","B","LA7VMSG1",42)

"BLD",1451,"KRN",9.8,"NM","B","LA7VOBR",25)

"BLD",1451,"KRN",9.8,"NM","B","LA7VOBRA",60)

"BLD",1451,"KRN",9.8,"NM","B","LA7VOBX",22)

"BLD",1451,"KRN",9.8,"NM","B","LA7VOBX1",45)

"BLD",1451,"KRN",9.8,"NM","B","LA7VOBX2",46)

"BLD",1451,"KRN",9.8,"NM","B","LA7VOBX3",49)

"BLD",1451,"KRN",9.8,"NM","B","LA7VOBXA",53)

"BLD",1451,"KRN",9.8,"NM","B","LA7VORC",26)

"BLD",1451,"KRN",9.8,"NM","B","LA7VORM",19)

"BLD",1451,"KRN",9.8,"NM","B","LA7VORM1",13)

"BLD",1451,"KRN",9.8,"NM","B","LA7VORM2",20)

"BLD",1451,"KRN",9.8,"NM","B","LA7VORM3",48)

"BLD",1451,"KRN",9.8,"NM","B","LA7VORU",15)

"BLD",1451,"KRN",9.8,"NM","B","LA7VORU1",51)

"BLD",1451,"KRN",9.8,"NM","B","LA7VORU2",50)

"BLD",1451,"KRN",9.8,"NM","B","LA7VPID",43)

"BLD",1451,"KRN",9.8,"NM","B","LA7VSET",54)

"BLD",1451,"KRN",9.8,"NM","B","LA7VSET1",58)

"BLD",1451,"KRN",9.8,"NM","B","LA7VSTP",39)

"BLD",1451,"KRN",9.8,"NM","B","LA7VSTP1",10)

"BLD",1451,"KRN",9.8,"NM","B","LAGEN",33)

"BLD",1451,"KRN",9.8,"NM","B","LASET",5)

"BLD",1451,"KRN",19,0)
19
"BLD",1451,"KRN",19,"NM",0)
^9.68A^4^4
"BLD",1451,"KRN",19,"NM",1,0)
LA7S MANIFEST TEST REQ INFO^^0
"BLD",1451,"KRN",19,"NM",2,0)
LA7S MAIN MENU^^2
"BLD",1451,"KRN",19,"NM",3,0)
LA7S PENDING PRINT LEDI^^0
"BLD",1451,"KRN",19,"NM",4,0)
LA7S RESULTS RETRANSMIT^^0
"BLD",1451,"KRN",19,"NM","B","LA7S MAIN MENU",2)

"BLD",1451,"KRN",19,"NM","B","LA7S MANIFEST TEST REQ INFO",1)

"BLD",1451,"KRN",19,"NM","B","LA7S PENDING PRINT LEDI",3)

"BLD",1451,"KRN",19,"NM","B","LA7S RESULTS RETRANSMIT",4)

"BLD",1451,"KRN",19.1,0)
19.1
"BLD",1451,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",1451,"KRN",101,0)
101
"BLD",1451,"KRN",409.61,0)
409.61
"BLD",1451,"KRN",771,0)
771
"BLD",1451,"KRN",869.2,0)
869.2
"BLD",1451,"KRN",870,0)
870
"BLD",1451,"KRN",8994,0)
8994
"BLD",1451,"KRN","B",.4,.4)

"BLD",1451,"KRN","B",.401,.401)

"BLD",1451,"KRN","B",.402,.402)

"BLD",1451,"KRN","B",.403,.403)

"BLD",1451,"KRN","B",.5,.5)

"BLD",1451,"KRN","B",.84,.84)

"BLD",1451,"KRN","B",3.6,3.6)

"BLD",1451,"KRN","B",3.8,3.8)

"BLD",1451,"KRN","B",9.2,9.2)

"BLD",1451,"KRN","B",9.8,9.8)

"BLD",1451,"KRN","B",19,19)

"BLD",1451,"KRN","B",19.1,19.1)

"BLD",1451,"KRN","B",101,101)

"BLD",1451,"KRN","B",409.61,409.61)

"BLD",1451,"KRN","B",771,771)

"BLD",1451,"KRN","B",869.2,869.2)

"BLD",1451,"KRN","B",870,870)

"BLD",1451,"KRN","B",8994,8994)

"BLD",1451,"PRE")
LA46
"BLD",1451,"QUES",0)
^9.62^^
"BLD",1451,"REQB",0)
^9.611^7^6
"BLD",1451,"REQB",2,0)
LA*5.2*42^2
"BLD",1451,"REQB",3,0)
LA*5.2*55^2
"BLD",1451,"REQB",4,0)
LA*5.2*51^2
"BLD",1451,"REQB",5,0)
LA*5.2*45^2
"BLD",1451,"REQB",6,0)
LA*5.2*47^2
"BLD",1451,"REQB",7,0)
LA*5.2*56^2
"BLD",1451,"REQB","B","LA*5.2*42",2)

"BLD",1451,"REQB","B","LA*5.2*45",5)

"BLD",1451,"REQB","B","LA*5.2*47",6)

"BLD",1451,"REQB","B","LA*5.2*51",4)

"BLD",1451,"REQB","B","LA*5.2*55",3)

"BLD",1451,"REQB","B","LA*5.2*56",7)

"DATA",62.485,15,0)
15^Msg # |1|, test code = null: |2|^1
"DATA",62.485,15,1)
S LA7TXT(1)=LA76249,LA7TXT(2)=LA7OBX
"DATA",62.485,17,0)
17^Msg # |1|, test value = null: |2|^1
"DATA",62.485,17,1)
S LA7TXT(1)=LA76249,LA7TXT(2)=$G(LA7OBX)
"DATA",62.485,18,0)
18^Msg # |1|, test is set up incompletely in file 62.4: |2| for test |3|^1
"DATA",62.485,18,1)
S LA7TXT(1)=LA76249,LA7TXT(2)=$S($L($P($G(LA7624(0)),"^")):$P(LA7624(0),"^"),1:+$G(LA7624)),LA7TXT(3)=$S(+$G(LA76241(0)):$P($G(^LAB(60,+LA76241(0),0)),"^"),1:+$G(LA76241))
"DATA",62.485,23,0)
23^Call to HLMA to generate a HL7 message with Msg ID: |1| failed with error code |2|, |3|^1
"DATA",62.485,23,1)
S LA7TXT(1)=$P($G(HLRESLT,"UNKNOWN"),"^"),LA7TXT(2)=$P($G(HLRESLT),"^",2),LA7TXT(3)=$P($G(HLRESLT),"^",3)
"DATA",62.485,25,0)
25^Msg # |1| contained an unknown |2|.^1
"DATA",62.485,25,1)
S LA7TXT(1)=LA76249,LA7TXT(2)=LA7SITE
"DATA",62.485,26,0)
26^Msg # |1| was unable to find a test for order code |2|.^1
"DATA",62.485,26,1)
S LA7TXT(1)=$G(LA76249),LA7TXT(2)=$G(LA7X)
"DATA",62.485,29,0)
29^ORC and OBR mismatch in msg # |1|, the |2| order for |3| was not created.^1
"DATA",62.485,29,1)
S LA7TXT(1)=$G(LA76249),LA7TXT(2)=$G(LA7OTST),LA7TXT(3)=$G(LA7PNM)
"DATA",62.485,30,0)
30^Null name identified in msg # |1| while processing the order for specimen id |2|.^1
"DATA",62.485,30,1)
S LA7TXT(1)=$G(LA76249),LA7TXT(2)=$G(LA7SID)
"DATA",62.485,31,0)
31^Msg # |1| was unable to get lock on File #69.6 to add the |2| order for |3|.^1
"DATA",62.485,31,1)
S LA7TXT(1)=$G(LA76249),LA7TXT(2)=$G(LA7OTST),LA7TXT(3)=$G(LA7PNM)
"DATA",62.485,32,0)
32^A problem in msg # |1| prevented the |2| order for |2| from being processed.^1
"DATA",62.485,32,1)
S LA7TXT(1)=$G(LA76249),LA7TXT(2)=$G(LA7OTST),LA7TXT(3)=$G(LA7PNM)
"DATA",62.485,33,0)
33^Msg # |1| was unable to finish processing entry # |2| in File #69.6 due to a lock.^1
"DATA",62.485,33,1)
S LA7TXT(1)=$G(LA76249),LA7TXT(2)=$G(LA7696)
"DATA",62.485,34,0)
34^Msg # |1| contained an invalid HL7 segment identifier |2|.^1
"DATA",62.485,34,1)
S LA7TXT(1)=$G(LA76249),LA7TXT(2)=$G(LA7STYP)
"DATA",62.485,35,0)
35^Msg # |1| contained an invalid encoded HL7 segment |2|.^1
"DATA",62.485,35,1)
S LA7TXT(1)=$G(LA76249),LA7TXT(2)=$G(LA7STYP)
"DATA",62.485,36,0)
36^Msg # |1| was unable to find a result code for test dataname |2|.^1
"DATA",62.485,36,1)
S LA7TXT(1)=$G(LA76249),LA7TXT(2)=$G(LA7X)
"DATA",62.485,37,0)
37^Msg # |1| - |2|^1
"DATA",62.485,37,1)
S LA7TXT(1)=$G(LA76249),LA7TXT(2)=$G(LA7X)
"DATA",62.485,38,0)
38^Msg #|1| - Cannot adjust # of decimals for data name |2| with data type |3|.^1
"DATA",62.485,38,1)
S LA7TXT(1)=$G(LA76249),LA7TXT(2)=$G(LA7FLDNM),LA7TXT(3)=$G(LA7DDTYP)
"DATA",62.485,39,0)
39^Msg #|1| - Cannot identify an active entry in file SHIPPING CONFIGURATION (#62.9) file for collecting lab |2| and host lab |3| combination.^1
"DATA",62.485,39,1)
S LA7TXT(1)=$G(LA76249),LA7TXT(2)=$$GET1^DIQ(4,$G(LA7CSITE)_",",.01),LA7TXT(3)=$$GET1^DIQ(4,$G(LA7HSITE)_",",.01)
"DATA",62.485,40,0)
40^Msg #|1| - Result's subscript |2| does not match accession area's subscript.^1
"DATA",62.485,40,1)
S LA7TXT(1)=$G(LA76249),LA7TXT(2)=$G(LRSS)
"DATA",62.485,41,0)
41^Msg #|1| - Result's LRDFN |2| does not match accession |3| LRDFN |4|.^1
"DATA",62.485,41,1)
S LA7TXT(1)=$G(LA76249),LA7TXT(2)=$G(LRDFN),LA7TXT(3)=$P($G(LA768(.2)),"^"),LA7TXT(4)=$P($G(LA768(0)),"^")
"DATA",62.485,42,0)
42^Msg #|1|, Result's inverse date/time |2| does not match accession |3| inverse date/time |4|.^1
"DATA",62.485,42,1)
S LA7TXT(1)=$G(LA76249),LA7TXT(2)=$G(LRIDT),LA7TXT(3)=$P($G(LA768(.2)),"^"),LA7TXT(4)=$P($G(LA768(3)),"^",5)
"DATA",62.485,43,0)
43^Msg #|1|, Remote UID |2| does not match accession |3| UID |4|.^1
"DATA",62.485,43,1)
S LA7TXT(1)=$G(LA76249),LA7TXT(2)=$G(RUID),LA7TXT(3)=$P($G(LA768(.2)),"^"),LA7TXT(4)=$P($G(LA768(.3)),"^",5)
"DATA",62.485,44,0)
44^Msg #|1|, Result's remote UID |2| does not match remote UID |3|. ^1
"DATA",62.485,44,1)
S LA7TXT(1)=$G(LA76249),LA7TXT(2)=$G(RUID),LA7TXT(3)=$P($G(LA763("ORU")),"^")
"DATA",62.485,45,0)
45^Msg #|1|, Result's UID |2| does not match accession's UID |3|.^1
"DATA",62.485,45,1)
S LA7TXT(1)=$G(LA76249),LA7TXT(2)=$P($G(LA763("ORU")),"^"),LA7TXT(3)=$P($G(LA768(.3)),"^")
"FIA",62.4)
AUTO INSTRUMENT
"FIA",62.4,0)
^LAB(62.4,
"FIA",62.4,0,0)
62.4
"FIA",62.4,0,1)
y^n^p^^^^n
"FIA",62.4,0,10)

"FIA",62.4,0,11)

"FIA",62.4,0,"RLRO")

"FIA",62.4,0,"VR")
5.2^LA
"FIA",62.4,62.4)
1
"FIA",62.4,62.4,18)

"FIA",62.4,62.41)
1
"FIA",62.4,62.41,14)

"FIA",62.4,62.41,18)

"FIA",62.4,62.41,19)

"FIA",62.4,62.41,20)

"FIA",62.4,62.41,21)

"FIA",62.4,62.41,22)

"FIA",62.48)
LA7 MESSAGE PARAMETER
"FIA",62.48,0)
^LAHM(62.48,
"FIA",62.48,0,0)
62.48
"FIA",62.48,0,1)
y^n^p^^^^n
"FIA",62.48,0,10)

"FIA",62.48,0,11)

"FIA",62.48,0,"RLRO")

"FIA",62.48,0,"VR")
5.2^LA
"FIA",62.48,62.48)
1
"FIA",62.48,62.48,10)

"FIA",62.48,62.48,11)

"FIA",62.485)
LA7 MESSAGE LOG BULLETINS
"FIA",62.485,0)
^LAHM(62.485,
"FIA",62.485,0,0)
62.485
"FIA",62.485,0,1)
n^n^f^^n^^y^o^n
"FIA",62.485,0,10)

"FIA",62.485,0,11)
I Y=15!(Y=17)!(Y=18)!(Y=23)!(Y=25)!(Y=26)!((Y>28)&(Y<46))
"FIA",62.485,0,"RLRO")

"FIA",62.485,0,"VR")
5.2^LA
"FIA",62.485,62.485)
0
"FIA",62.49)
LA7 MESSAGE QUEUE
"FIA",62.49,0)
^LAHM(62.49,
"FIA",62.49,0,0)
62.49A
"FIA",62.49,0,1)
y^n^p^^^^n
"FIA",62.49,0,10)

"FIA",62.49,0,11)

"FIA",62.49,0,"RLRO")

"FIA",62.49,0,"VR")
5.2^LA
"FIA",62.49,62.49)
1
"FIA",62.49,62.49,2)

"FIA",62.8)
LAB SHIPPING MANIFEST
"FIA",62.8,0)
^LAHM(62.8,
"FIA",62.8,0,0)
62.8A
"FIA",62.8,0,1)
y^n^p^^^^n
"FIA",62.8,0,10)

"FIA",62.8,0,11)

"FIA",62.8,0,"RLRO")

"FIA",62.8,0,"VR")
5.2^LA
"FIA",62.8,62.8)
1
"FIA",62.8,62.8,.05)

"FIA",62.8,62.801)
1
"FIA",62.8,62.801,1.1)

"FIA",62.8,62.801,1.11)

"FIA",62.8,62.801,1.13)

"FIA",62.8,62.801,1.14)

"FIA",62.8,62.801,1.2)

"FIA",62.8,62.801,1.21)

"FIA",62.8,62.801,1.23)

"FIA",62.8,62.801,1.24)

"FIA",62.8,62.801,2.1)

"FIA",62.8,62.801,2.11)

"FIA",62.8,62.801,2.13)

"FIA",62.8,62.801,2.14)

"FIA",62.8,62.801,2.2)

"FIA",62.8,62.801,2.21)

"FIA",62.8,62.801,2.22)

"FIA",62.8,62.801,2.23)

"FIA",62.8,62.801,2.24)

"FIA",62.8,62.801,2.3)

"FIA",62.8,62.801,2.31)

"FIA",62.8,62.801,2.33)

"FIA",62.8,62.801,2.34)

"FIA",62.9)
LAB SHIPPING CONFIGURATION
"FIA",62.9,0)
^LAHM(62.9,
"FIA",62.9,0,0)
62.9
"FIA",62.9,0,1)
y^n^p^^^^n
"FIA",62.9,0,10)

"FIA",62.9,0,11)

"FIA",62.9,0,"RLRO")

"FIA",62.9,0,"VR")
5.2^LA
"FIA",62.9,62.9)
1
"FIA",62.9,62.9,.09)

"FIA",62.9,62.9,.14)

"FIA",62.9,62.9,.15)

"FIA",62.9,62.9001)
1
"FIA",62.9,62.9001,.025)

"FIA",62.9,62.9001,.04)

"FIA",62.9,62.9001,1.1)

"FIA",62.9,62.9001,1.15)

"FIA",62.9,62.9001,1.16)

"FIA",62.9,62.9001,1.2)

"FIA",62.9,62.9001,1.25)

"FIA",62.9,62.9001,1.26)

"FIA",62.9,62.9001,2.1)

"FIA",62.9,62.9001,2.15)

"FIA",62.9,62.9001,2.16)

"FIA",62.9,62.9001,2.2)

"FIA",62.9,62.9001,2.25)

"FIA",62.9,62.9001,2.26)

"FIA",62.9,62.9001,2.3)

"FIA",62.9,62.9001,2.35)

"FIA",62.9,62.9001,2.36)

"FIA",62.9,62.9001,5.1)

"FIA",62.9,62.9001,5.2)

"FIA",62.9,62.9001,5.3)

"FIA",62.9,62.9001,5.4)

"INI")
PRE^LA46
"INIT")
POST^LA46
"KRN",19,12261,-1)
2^2
"KRN",19,12261,0)
LA7S MAIN MENU^Lab Shipping Menu^^M^102^^^^^^^424
"KRN",19,12261,10,0)
^19.01IP^12^12
"KRN",19,12261,10,9,0)
12615^SMP^70
"KRN",19,12261,10,9,"^")
LA7S PENDING PRINT LEDI
"KRN",19,12261,10,11,0)
13083^SMR^27
"KRN",19,12261,10,11,"^")
LA7S MANIFEST TEST REQ INFO
"KRN",19,12261,10,12,0)
13905^RLR^65
"KRN",19,12261,10,12,"^")
LA7S RESULTS RETRANSMIT
"KRN",19,12261,"U")
LAB SHIPPING MENU
"KRN",19,12615,-1)
0^3
"KRN",19,12615,0)
LA7S PENDING PRINT LEDI^Print LEDI Pending Orders^^R^^^^^^^^AUTOMATED LAB INSTRUMENTS
"KRN",19,12615,1,0)
^19.06^8^8^3011210^^^^
"KRN",19,12615,1,1,0)
This option is used by the host facility to print a collecting
"KRN",19,12615,1,2,0)
facility's LEDI shipping manifest from the host facility's LAB
"KRN",19,12615,1,3,0)
PENDING ORDERS ENTRY file (#69.6). It's used to reprint a
"KRN",19,12615,1,4,0)
shipping manifest which is lost or damaged during shipment.
"KRN",19,12615,1,5,0)
The user is prompted for the shipping manifest number and prints
"KRN",19,12615,1,6,0)
a barcoded shipping manifest containing all of the patients on
"KRN",19,12615,1,7,0)
that manifest. The format is similiar to the regular shipping
"KRN",19,12615,1,8,0)
manifest received from the collecting (shipping) facility.
"KRN",19,12615,25)
LA7SMPXL
"KRN",19,12615,"U")
PRINT LEDI PENDING ORDERS
"KRN",19,13083,-1)
0^1
"KRN",19,13083,0)
LA7S MANIFEST TEST REQ INFO^Edit Required Test Information^^R^^^^^^^^AUTOMATED LAB INSTRUMENTS
"KRN",19,13083,1,0)
^19.06^6^6^3011206^^^^
"KRN",19,13083,1,1,0)
This option allows a user to enter/edit information that is
"KRN",19,13083,1,2,0)
required to be sent with a test when it is shipped.
"KRN",19,13083,1,3,0)
 
"KRN",19,13083,1,4,0)
Examples can be the total volume of urine collected for a timed
"KRN",19,13083,1,5,0)
urine test, weight of specimen collected, duration of specimen
"KRN",19,13083,1,6,0)
collection, patient height and weight.
"KRN",19,13083,25)
REQINFO^LA7SM2
"KRN",19,13083,"U")
EDIT REQUIRED TEST INFORMATION
"KRN",19,13905,-1)
0^4
"KRN",19,13905,0)
LA7S RESULTS RETRANSMIT^Retransmit LEDI Lab Results^^R^^^^^^^^AUTOMATED LAB INSTRUMENTS
"KRN",19,13905,1,0)
^19.06^4^4^3011126^^
"KRN",19,13905,1,1,0)
Allows a user at a host facility to select one or more accessions
"KRN",19,13905,1,2,0)
that were received from other LEDI collecting facilities and retransmit
"KRN",19,13905,1,3,0)
results associated with the accession(s) to the sending/collecting facility
"KRN",19,13905,1,4,0)
via HL7 messaging. 
"KRN",19,13905,25)
EN^LA7SRR
"KRN",19,13905,"U")
RETRANSMIT LEDI LAB RESULTS
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",53,-1)
1^1
"PKG",53,0)
AUTOMATED LAB INSTRUMENTS^LA^Lab Auto-Instrument Package
"PKG",53,20,0)
^9.402P^^
"PKG",53,22,0)
^9.49I^1^1
"PKG",53,22,1,0)
5.2^2940927^2950414
"PKG",53,22,1,"PAH",1,0)
46^3020219
"PKG",53,22,1,"PAH",1,1,0)
^^343^343^3020219
"PKG",53,22,1,"PAH",1,1,1,0)
VISTA Laboratory Package patch LA*5.2*46 contains no changes to software
"PKG",53,22,1,"PAH",1,1,2,0)
controlled by VHA DIRECTIVE 99-053, titled VISTA BLOOD BANK SOFTWARE.
"PKG",53,22,1,"PAH",1,1,3,0)
 
"PKG",53,22,1,"PAH",1,1,4,0)
========================================
"PKG",53,22,1,"PAH",1,1,5,0)
 
"PKG",53,22,1,"PAH",1,1,6,0)
This patch adds support for sending/receiving Laboratory Electronic
"PKG",53,22,1,"PAH",1,1,7,0)
Data Interchange (LEDI) orders/results with non-VA facilities
"PKG",53,22,1,"PAH",1,1,8,0)
(commercial reference laboratories).
"PKG",53,22,1,"PAH",1,1,9,0)
 
"PKG",53,22,1,"PAH",1,1,10,0)

"PKG",53,22,1,"PAH",1,1,11,0)
As of the release date of this software, there is no national solution to
"PKG",53,22,1,"PAH",1,1,12,0)
implement a laboratory electronic HL7 standard interface to a facility or
"PKG",53,22,1,"PAH",1,1,13,0)
other entity outside the VA wide area network.  National communication
"PKG",53,22,1,"PAH",1,1,14,0)
security concerns are still being debated by the Department of Veterans
"PKG",53,22,1,"PAH",1,1,15,0)
Affairs (VA) and are awaiting resolution.  At present, a VA medical center,
"PKG",53,22,1,"PAH",1,1,16,0)
which intends to utilize this software in conjunction with an interface to
"PKG",53,22,1,"PAH",1,1,17,0)
a commercial reference laboratory or other non-VA information system entity,
"PKG",53,22,1,"PAH",1,1,18,0)
will need to coordinate with the vendor an acceptable communication method.
"PKG",53,22,1,"PAH",1,1,19,0)
Any implementation will need to be approved by the facility and VISN
"PKG",53,22,1,"PAH",1,1,20,0)
Information Security Officer (ISO) and meet current VA security requirements
"PKG",53,22,1,"PAH",1,1,21,0)
for external electronic connections. See VHA Directive 6212, Security of
"PKG",53,22,1,"PAH",1,1,22,0)
External Electronic Connections and VHA Directive 6210, Automated Information
"PKG",53,22,1,"PAH",1,1,23,0)
Systems (AIS) Security for additional information and guidance. Additional
"PKG",53,22,1,"PAH",1,1,24,0)
security information may be obtained from the Health Information Security
"PKG",53,22,1,"PAH",1,1,25,0)
Service (HISS) web page at http://vaww.va.gov/miss.
"PKG",53,22,1,"PAH",1,1,26,0)

"PKG",53,22,1,"PAH",1,1,27,0)
Implementation of a HL7 messaging interface between the VA VistA Laboratory
"PKG",53,22,1,"PAH",1,1,28,0)
package and a non-VA information system consists basically of three parts:
"PKG",53,22,1,"PAH",1,1,29,0)
 - VistA Laboratory LEDI II software.
"PKG",53,22,1,"PAH",1,1,30,0)
 - certified communication software and hardware
"PKG",53,22,1,"PAH",1,1,31,0)
 - non-VA information system capable of sending and receiving laboratory HL7
"PKG",53,22,1,"PAH",1,1,32,0)
   order and result messages.
"PKG",53,22,1,"PAH",1,1,33,0)
All three must be functional to utilize the capabilities of this LEDI II
"PKG",53,22,1,"PAH",1,1,34,0)
software patch. The implementation,setup, and configuration of vendor provided
"PKG",53,22,1,"PAH",1,1,35,0)
hardware and software is NOT addressed by this documentation.  Consult the
"PKG",53,22,1,"PAH",1,1,36,0)
vendor provided documentation and instructions to interface to the VistA
"PKG",53,22,1,"PAH",1,1,37,0)
Laboratory package.
"PKG",53,22,1,"PAH",1,1,38,0)
  
"PKG",53,22,1,"PAH",1,1,39,0)
 
"PKG",53,22,1,"PAH",1,1,40,0)
Additionally support is added for TCP/IP protocol as a communication
"PKG",53,22,1,"PAH",1,1,41,0)
protocol for the transmission of LEDI HL7 messages. This requires
"PKG",53,22,1,"PAH",1,1,42,0)
patch HL*1.6*19 to have been successfully installed. The implementation
"PKG",53,22,1,"PAH",1,1,43,0)
of this protocol in place of the current MailMan protocol will
"PKG",53,22,1,"PAH",1,1,44,0)
significantly increase transmission speed of messages and reduce system
"PKG",53,22,1,"PAH",1,1,45,0)
overhead/storage. Both systems that will be exchanging HL7 messages,
"PKG",53,22,1,"PAH",1,1,46,0)
using the TCP/IP protocol will need to coordinate the switch to this
"PKG",53,22,1,"PAH",1,1,47,0)
new transmission method. There will be two logical links established
"PKG",53,22,1,"PAH",1,1,48,0)
to exchange messages a server (listener) logical link to receive and
"PKG",53,22,1,"PAH",1,1,49,0)
process messages and a client link to transmit messages.
"PKG",53,22,1,"PAH",1,1,50,0)
 
"PKG",53,22,1,"PAH",1,1,51,0)
A new shipping code SM40 - Required Shipping Info Updated has been added
"PKG",53,22,1,"PAH",1,1,52,0)
to file LAB ELECTRONIC CODES (#64.061). This code is used when recording
"PKG",53,22,1,"PAH",1,1,53,0)
this event in file LAB SHIPPING EVENT (#62.85)
"PKG",53,22,1,"PAH",1,1,54,0)
 
"PKG",53,22,1,"PAH",1,1,55,0)
  
"PKG",53,22,1,"PAH",1,1,56,0)
Comments can now contain ";"character. Previously the ";" character was
"PKG",53,22,1,"PAH",1,1,57,0)
used to parse comments into multiple lines and filed in the database using
"PKG",53,22,1,"PAH",1,1,58,0)
a classical FileMan DIE call. FileMan parsed the fields to edit using
"PKG",53,22,1,"PAH",1,1,59,0)
the ";" character in the DR string. The new call uses a FileMan database
"PKG",53,22,1,"PAH",1,1,60,0)
server call, which does not have this restriction.
"PKG",53,22,1,"PAH",1,1,61,0)
 
"PKG",53,22,1,"PAH",1,1,62,0)
 
"PKG",53,22,1,"PAH",1,1,63,0)
New fields have been added and existing fields modified within the
"PKG",53,22,1,"PAH",1,1,64,0)
CHEM TEST subfile of file AUTO INSTRUMENT (#62.4) to support the
"PKG",53,22,1,"PAH",1,1,65,0)
following features when processing result messages. These features
"PKG",53,22,1,"PAH",1,1,66,0)
are site-selectable. See data dictionary field description for each
"PKG",53,22,1,"PAH",1,1,67,0)
field for further information. Using option LEDI Setup [LA7V SETUP],
"PKG",53,22,1,"PAH",1,1,68,0)
the section on Auto Instrument settings will prompt for these additional
"PKG",53,22,1,"PAH",1,1,69,0)
fields.
"PKG",53,22,1,"PAH",1,1,70,0)
 
"PKG",53,22,1,"PAH",1,1,71,0)
1. Process NTE segments following OBX segments. Comments found attached
"PKG",53,22,1,"PAH",1,1,72,0)
   to specific test results are stored as comments. The field REMARK PREFIX
"PKG",53,22,1,"PAH",1,1,73,0)
   #18 in CHEM TEST subfile can be used to specify a comment prefix that
"PKG",53,22,1,"PAH",1,1,74,0)
   will be made part of the comment.
"PKG",53,22,1,"PAH",1,1,75,0)
2. Store test reference ranges, abnormal flags and name of performing
"PKG",53,22,1,"PAH",1,1,76,0)
   laboratory. This patch stores these parameters as comments with the
"PKG",53,22,1,"PAH",1,1,77,0)
   results. This information is prefixed with the field REMARK PREFIX.
"PKG",53,22,1,"PAH",1,1,78,0)
3. Specify whether final or incomplete results are processed.
"PKG",53,22,1,"PAH",1,1,79,0)
 
"PKG",53,22,1,"PAH",1,1,80,0)
The fields that are new/modified are:
"PKG",53,22,1,"PAH",1,1,81,0)
    ACCEPT RESULTS FOR THIS TEST
"PKG",53,22,1,"PAH",1,1,82,0)
    STORE REMARKS
"PKG",53,22,1,"PAH",1,1,83,0)
    REMARK PREFIX
"PKG",53,22,1,"PAH",1,1,84,0)
    STORE PRODUCER'S ID
"PKG",53,22,1,"PAH",1,1,85,0)
    STORE REFERENCE RANGE
"PKG",53,22,1,"PAH",1,1,86,0)
    STORE ABNORMAL FLAGS
"PKG",53,22,1,"PAH",1,1,87,0)
 
"PKG",53,22,1,"PAH",1,1,88,0)
New fields have been added to the LAB SHIPPING CONFIGURATION file (#62.9)
"PKG",53,22,1,"PAH",1,1,89,0)
to allow collecting facilities to specify required patient/specimen
"PKG",53,22,1,"PAH",1,1,90,0)
information to be sent with shipping manifest. This can include specimen
"PKG",53,22,1,"PAH",1,1,91,0)
volume, weight, collection end date/time (collection duration),
"PKG",53,22,1,"PAH",1,1,92,0)
patient height and weight (NOIS ALB-1099-51591). LOINC codes are used to
"PKG",53,22,1,"PAH",1,1,93,0)
identify patient height, weight and specimen weight when appropriate.
"PKG",53,22,1,"PAH",1,1,94,0)
Editing these fields is performed using option Edit Shipping Configuration
"PKG",53,22,1,"PAH",1,1,95,0)
[LA7S EDIT 62.9]. The fields are:
"PKG",53,22,1,"PAH",1,1,96,0)
 
"PKG",53,22,1,"PAH",1,1,97,0)
    USE NON-VA CODES
"PKG",53,22,1,"PAH",1,1,98,0)
    TEST/PROFILE sub-file
"PKG",53,22,1,"PAH",1,1,99,0)
      DIVISION
"PKG",53,22,1,"PAH",1,1,100,0)
      REQUIRE PATIENT HEIGHT
"PKG",53,22,1,"PAH",1,1,101,0)
      PATIENT HEIGHT
"PKG",53,22,1,"PAH",1,1,102,0)
      PATIENT HEIGHT UNITS
"PKG",53,22,1,"PAH",1,1,103,0)
      PATIENT HEIGHT LOINC CODE
"PKG",53,22,1,"PAH",1,1,104,0)
      REQUIRE PATIENT WEIGHT
"PKG",53,22,1,"PAH",1,1,105,0)
      PATIENT WEIGHT
"PKG",53,22,1,"PAH",1,1,106,0)
      PATIENT WEIGHT UNITS
"PKG",53,22,1,"PAH",1,1,107,0)
      PATIENT WEIGHT LOINC CODE
"PKG",53,22,1,"PAH",1,1,108,0)
      REQUIRE COLLECTION VOLUME
"PKG",53,22,1,"PAH",1,1,109,0)
      COLLECTION VOLUME
"PKG",53,22,1,"PAH",1,1,110,0)
      COLLECTION VOLUME UNITS
"PKG",53,22,1,"PAH",1,1,111,0)
      COLLECTION VOLUME LOINC CODE
"PKG",53,22,1,"PAH",1,1,112,0)
      REQUIRE COLLECTION END D/T
"PKG",53,22,1,"PAH",1,1,113,0)
 
"PKG",53,22,1,"PAH",1,1,114,0)
The process of building a shipping manifest now allows the user to
"PKG",53,22,1,"PAH",1,1,115,0)
specify the starting and ending accession numbers to check within an
"PKG",53,22,1,"PAH",1,1,116,0)
accession area. This feature can shorten manifest building time when
"PKG",53,22,1,"PAH",1,1,117,0)
searching a yearly accession area with a large number of accessions.
"PKG",53,22,1,"PAH",1,1,118,0)
It allows the site to skip the accession numbers that have been
"PKG",53,22,1,"PAH",1,1,119,0)
completed earlier in a year and no longer need to be checked to
"PKG",53,22,1,"PAH",1,1,120,0)
determine it any of the tests meet the criteria for building to a
"PKG",53,22,1,"PAH",1,1,121,0)
manifest.
"PKG",53,22,1,"PAH",1,1,122,0)
 
"PKG",53,22,1,"PAH",1,1,123,0)
 
"PKG",53,22,1,"PAH",1,1,124,0)
The process of closing a shipping manifest now performs a check of
"PKG",53,22,1,"PAH",1,1,125,0)
certain required information. The required information check is for:
"PKG",53,22,1,"PAH",1,1,126,0)
 1. Each test has an order NLT code assigned.
"PKG",53,22,1,"PAH",1,1,127,0)
 2. If shipping to a facility that does not use VA NLT codes for
"PKG",53,22,1,"PAH",1,1,128,0)
    test ordering, the appropriate non-VA test codes/names
"PKG",53,22,1,"PAH",1,1,129,0)
    have been designated for all tests on the manifest.
"PKG",53,22,1,"PAH",1,1,130,0)
 3. Site-specified required patient/specimen information has been
"PKG",53,22,1,"PAH",1,1,131,0)
    entered.
"PKG",53,22,1,"PAH",1,1,132,0)
 
"PKG",53,22,1,"PAH",1,1,133,0)
 
"PKG",53,22,1,"PAH",1,1,134,0)
The process of building orders in the file LAB PENDING ORDER (#69.6)
"PKG",53,22,1,"PAH",1,1,135,0)
has been enhanced to use information from the file LAB SHIPPING
"PKG",53,22,1,"PAH",1,1,136,0)
CONFIGURATION (#62.9) to create orders based on the host facilities
"PKG",53,22,1,"PAH",1,1,137,0)
specified collection sample and urgency.
"PKG",53,22,1,"PAH",1,1,138,0)
 
"PKG",53,22,1,"PAH",1,1,139,0)
 
"PKG",53,22,1,"PAH",1,1,140,0)
The LEDI result (ORU) messages will now include the test interpretation
"PKG",53,22,1,"PAH",1,1,141,0)
found in LABORATORY TEST file (#60) as a comment (NTE segment) following
"PKG",53,22,1,"PAH",1,1,142,0)
the test results. Test results to be stored will be checked against the
"PKG",53,22,1,"PAH",1,1,143,0)
FileMan input transform for the data name used to store the results in
"PKG",53,22,1,"PAH",1,1,144,0)
file LAB DATA (#63). If the results do not pass the FileMan input
"PKG",53,22,1,"PAH",1,1,145,0)
transform then an error message will be generated via the Lab
"PKG",53,22,1,"PAH",1,1,146,0)
Universal Interface error reporting process. Results values that are
"PKG",53,22,1,"PAH",1,1,147,0)
"canc", "pending" or "comment" will be stored.
"PKG",53,22,1,"PAH",1,1,148,0)
 
"PKG",53,22,1,"PAH",1,1,149,0)
 
"PKG",53,22,1,"PAH",1,1,150,0)
The option Display Lab Universal Interface Message [LA7 PRINT LAB UI
"PKG",53,22,1,"PAH",1,1,151,0)
MESSAGE] has been modified to prompt the user if the Kernel Browser
"PKG",53,22,1,"PAH",1,1,152,0)
should be used to display a message. If the browser is not selected then
"PKG",53,22,1,"PAH",1,1,153,0)
a standard "scroll and roll" display of the selected message(s) is
"PKG",53,22,1,"PAH",1,1,154,0)
produced.
"PKG",53,22,1,"PAH",1,1,155,0)

"PKG",53,22,1,"PAH",1,1,156,0)
Option Retransmit LEDI Lab Results [LA7S RESULTS RETRANSMIT] will allow
"PKG",53,22,1,"PAH",1,1,157,0)
a user to retransmit the laboratory test results for selected accession(s)
"PKG",53,22,1,"PAH",1,1,158,0)
to the collecting/submitting facility.
"PKG",53,22,1,"PAH",1,1,159,0)
 
"PKG",53,22,1,"PAH",1,1,160,0)
The install will update several files during the post-install as necessary:
"PKG",53,22,1,"PAH",1,1,161,0)
 - It was found that the original release of LEDI failed to update the
"PKG",53,22,1,"PAH",1,1,162,0)
   field SHIP VIA #.04 in file LAB SHIPPING MANIFEST (#62.8) when a manifest
"PKG",53,22,1,"PAH",1,1,163,0)
   is created. This information will update existing manifests with
"PKG",53,22,1,"PAH",1,1,164,0)
   information from the related file LAB SHIPPING CONFIGURATION (#62.9)
"PKG",53,22,1,"PAH",1,1,165,0)
   entry.
"PKG",53,22,1,"PAH",1,1,166,0)
 
"PKG",53,22,1,"PAH",1,1,167,0)
 - The processing routine specified in file LA7 MESSAGE PARAMETER (#62.48)
"PKG",53,22,1,"PAH",1,1,168,0)
   for entries related to LEDI has been changed. Existing entries will be
"PKG",53,22,1,"PAH",1,1,169,0)
   updated as appropriate.
"PKG",53,22,1,"PAH",1,1,170,0)
 
"PKG",53,22,1,"PAH",1,1,171,0)
 NOIS HIN-0998-40287 corrected an undefined variable error when building a
"PKG",53,22,1,"PAH",1,1,172,0)
   result message.
"PKG",53,22,1,"PAH",1,1,173,0)
 
"PKG",53,22,1,"PAH",1,1,174,0)
 NOIS BOS-0498-10163 reported an undefined error when attempting to lock
"PKG",53,22,1,"PAH",1,1,175,0)
 LAB SHIPPING MANIFEST file (#62.8). Due to a typographically error the
"PKG",53,22,1,"PAH",1,1,176,0)
 character "$" was omitted from a $DATA intrinsic function.
"PKG",53,22,1,"PAH",1,1,177,0)
 
"PKG",53,22,1,"PAH",1,1,178,0)
 NOIS TAM-0401-31867 reported that option Lab Messaging File Integrity
"PKG",53,22,1,"PAH",1,1,179,0)
 Checker [LA7 CHECK FILES] option allowed queuing the report to the
"PKG",53,22,1,"PAH",1,1,180,0)
 "HOME" device. The option will now prevent queuing to the HOME device.
"PKG",53,22,1,"PAH",1,1,181,0)
 It also removes "HOME" as the device default value.
"PKG",53,22,1,"PAH",1,1,182,0)
 
"PKG",53,22,1,"PAH",1,1,183,0)

"PKG",53,22,1,"PAH",1,1,184,0)
ASSOCIATED E3R
"PKG",53,22,1,"PAH",1,1,185,0)
--------------
"PKG",53,22,1,"PAH",1,1,186,0)
E3R #15348, RETRANSMIT FUNCTION FOR LEDI
"PKG",53,22,1,"PAH",1,1,187,0)
 
"PKG",53,22,1,"PAH",1,1,188,0)
ASSOCIATED NOIS
"PKG",53,22,1,"PAH",1,1,189,0)
---------------
"PKG",53,22,1,"PAH",1,1,190,0)
  ALB-1099-51591
"PKG",53,22,1,"PAH",1,1,191,0)
  ALB-0100-50284
"PKG",53,22,1,"PAH",1,1,192,0)
  BOS-0498-10163
"PKG",53,22,1,"PAH",1,1,193,0)
  HIN-0998-40287
"PKG",53,22,1,"PAH",1,1,194,0)
  HUN-1100-21862
"PKG",53,22,1,"PAH",1,1,195,0)
  MIW-1197-41082
"PKG",53,22,1,"PAH",1,1,196,0)
  TAM-0401-31867
"PKG",53,22,1,"PAH",1,1,197,0)
 
"PKG",53,22,1,"PAH",1,1,198,0)
 
"PKG",53,22,1,"PAH",1,1,199,0)
TEST SITES
"PKG",53,22,1,"PAH",1,1,200,0)
----------
"PKG",53,22,1,"PAH",1,1,201,0)
  Alexandria VAMC
"PKG",53,22,1,"PAH",1,1,202,0)
  Biloxi VAMC
"PKG",53,22,1,"PAH",1,1,203,0)
  Birmingham VAMC
"PKG",53,22,1,"PAH",1,1,204,0)
  Fayetteville VAMC
"PKG",53,22,1,"PAH",1,1,205,0)
  Hines VAMC
"PKG",53,22,1,"PAH",1,1,206,0)
  Houston VAMC
"PKG",53,22,1,"PAH",1,1,207,0)
  Jackson VAMC
"PKG",53,22,1,"PAH",1,1,208,0)
  Little Rock VAMC
"PKG",53,22,1,"PAH",1,1,209,0)
  Madison VAMC
"PKG",53,22,1,"PAH",1,1,210,0)
  Milwaukee VAMC
"PKG",53,22,1,"PAH",1,1,211,0)
  Muskogee VAMC
"PKG",53,22,1,"PAH",1,1,212,0)
  New Orleans VAMC
"PKG",53,22,1,"PAH",1,1,213,0)
  Oklahoma City VAMC
"PKG",53,22,1,"PAH",1,1,214,0)
  Shreveport VAMC
"PKG",53,22,1,"PAH",1,1,215,0)
 
"PKG",53,22,1,"PAH",1,1,216,0)
 
"PKG",53,22,1,"PAH",1,1,217,0)
ROUTINE SUMMARY
"PKG",53,22,1,"PAH",1,1,218,0)
===============
"PKG",53,22,1,"PAH",1,1,219,0)
  The following routines are included in this patch.  The second line
"PKG",53,22,1,"PAH",1,1,220,0)
  of each of these routines now looks like:
"PKG",53,22,1,"PAH",1,1,221,0)
  <tab> ;;5.2;AUTOMATED LAB INSTRUMENTS;<patchlist>;Sep 27, 1994
"PKG",53,22,1,"PAH",1,1,222,0)
 
"PKG",53,22,1,"PAH",1,1,223,0)
                    Checksum       Checksum
"PKG",53,22,1,"PAH",1,1,224,0)
   Routine Name     Before Patch   After Patch    Patch List
"PKG",53,22,1,"PAH",1,1,225,0)
   ------------     ------------   -----------    ------------
"PKG",53,22,1,"PAH",1,1,226,0)
   LA46             N/A            9520365        **46** (Deleted by KIDS)
"PKG",53,22,1,"PAH",1,1,227,0)
   LA7CHKF          10597193       11028299       **27,46**
"PKG",53,22,1,"PAH",1,1,228,0)
   LA7QRY           N/A            1084520        **46**
"PKG",53,22,1,"PAH",1,1,229,0)
   LA7QRY1          N/A            3509927        **46**
"PKG",53,22,1,"PAH",1,1,230,0)
   LA7QRY2          N/A            4552927        **46**
"PKG",53,22,1,"PAH",1,1,231,0)
   LA7SBCR          1495927        653666         **27,46**
"PKG",53,22,1,"PAH",1,1,232,0)
   LA7SBCR1         7086650        4924406        **27,46**
"PKG",53,22,1,"PAH",1,1,233,0)
   LA7SBCR2         3323374        2564479        **27,46**
"PKG",53,22,1,"PAH",1,1,234,0)
   LA7SCE           10260809       11402708       **27,46**
"PKG",53,22,1,"PAH",1,1,235,0)
   LA7SM            16316313       10277989       **27,46**
"PKG",53,22,1,"PAH",1,1,236,0)
   LA7SM1           2146828        8553973        **27,46**
"PKG",53,22,1,"PAH",1,1,237,0)
   LA7SM2           N/A            12143125       **46**
"PKG",53,22,1,"PAH",1,1,238,0)
   LA7SMB           17707549       14649107       **27,46**
"PKG",53,22,1,"PAH",1,1,239,0)
   LA7SMP           15792287       11746903       **27,45,46**
"PKG",53,22,1,"PAH",1,1,240,0)
   LA7SMP0          N/A            9303222        **46**
"PKG",53,22,1,"PAH",1,1,241,0)
   LA7SMPXL         5400542        3215234        **27,42,46**
"PKG",53,22,1,"PAH",1,1,242,0)
   LA7SMU           11040439       7104257        **27,46**
"PKG",53,22,1,"PAH",1,1,243,0)
   LA7SMU1          5335635        6241668        **27,46**
"PKG",53,22,1,"PAH",1,1,244,0)
   LA7SMU2          N/A            5290542        **46**
"PKG",53,22,1,"PAH",1,1,245,0)
   LA7SRR           N/A            6233015        **46**
"PKG",53,22,1,"PAH",1,1,246,0)
   LA7UIIN2         9850298        12296505       **17,23,27,46**
"PKG",53,22,1,"PAH",1,1,247,0)
   LA7UTILA         11812487       10237097       **23,27,46**
"PKG",53,22,1,"PAH",1,1,248,0)
   LA7VHL           8527903        4500486        **27,46**
"PKG",53,22,1,"PAH",1,1,249,0)
   LA7VHLU          N/A            4469720        **46**
"PKG",53,22,1,"PAH",1,1,250,0)
   LA7VHLU1         N/A            2011157        **46**
"PKG",53,22,1,"PAH",1,1,251,0)
   LA7VHLU2         N/A            3873916        **46**
"PKG",53,22,1,"PAH",1,1,252,0)
   LA7VHLU3         N/A            2007360        **46**
"PKG",53,22,1,"PAH",1,1,253,0)
   LA7VHLU4         N/A            5424804        **46**
"PKG",53,22,1,"PAH",1,1,254,0)
   LA7VHLU5         N/A            5541950        **46**
"PKG",53,22,1,"PAH",1,1,255,0)
   LA7VIN           N/A            1398763        **46**
"PKG",53,22,1,"PAH",1,1,256,0)
   LA7VIN1          N/A            5261630        **46**
"PKG",53,22,1,"PAH",1,1,257,0)
   LA7VIN2          N/A            5808892        **46**
"PKG",53,22,1,"PAH",1,1,258,0)
   LA7VIN3          N/A            2061956        **46**
"PKG",53,22,1,"PAH",1,1,259,0)
   LA7VIN4          N/A            7936019        **46**
"PKG",53,22,1,"PAH",1,1,260,0)
   LA7VIN5          N/A            5205707        **46**
"PKG",53,22,1,"PAH",1,1,261,0)
   LA7VIN5A         N/A            5039195        **46**
"PKG",53,22,1,"PAH",1,1,262,0)
   LA7VMSG          16357149       3253314        **27,50,56,46**
"PKG",53,22,1,"PAH",1,1,263,0)
   LA7VMSG1         3358807        8200340        **56,46**
"PKG",53,22,1,"PAH",1,1,264,0)
   LA7VOBR          N/A            2129056        **46**
"PKG",53,22,1,"PAH",1,1,265,0)
   LA7VOBRA         N/A            5326634        **46**
"PKG",53,22,1,"PAH",1,1,266,0)
   LA7VOBX          N/A            2088674        **46**
"PKG",53,22,1,"PAH",1,1,267,0)
   LA7VOBX1         N/A            3799868        **46**
"PKG",53,22,1,"PAH",1,1,268,0)
   LA7VOBX2         N/A            4350324        **46**
"PKG",53,22,1,"PAH",1,1,269,0)
   LA7VOBX3         N/A            5240738        **46**
"PKG",53,22,1,"PAH",1,1,270,0)
   LA7VOBXA         N/A            6232009        **46**
"PKG",53,22,1,"PAH",1,1,271,0)
   LA7VORC          N/A            1565653        **46**
"PKG",53,22,1,"PAH",1,1,272,0)
   LA7VORM          17384019       6471896        **27,42,46**
"PKG",53,22,1,"PAH",1,1,273,0)
   LA7VORM1         20868841       7601990        **27,51,46**
"PKG",53,22,1,"PAH",1,1,274,0)
   LA7VORM2         N/A            3426954        **46**
"PKG",53,22,1,"PAH",1,1,275,0)
   LA7VORM3         N/A            6787219        **46**
"PKG",53,22,1,"PAH",1,1,276,0)
   LA7VORU          10077624       8070282        **27,46**
"PKG",53,22,1,"PAH",1,1,277,0)
   LA7VORU1         N/A            4734718        **46**
"PKG",53,22,1,"PAH",1,1,278,0)
   LA7VORU2         N/A            1962290        **46**
"PKG",53,22,1,"PAH",1,1,279,0)
   LA7VPID          N/A            4123683        **46**
"PKG",53,22,1,"PAH",1,1,280,0)
   LA7VSET          19500034       15979413       **27,51,55,46**
"PKG",53,22,1,"PAH",1,1,281,0)
   LA7VSET1         12858976       9065449        **27,51,55,46**
"PKG",53,22,1,"PAH",1,1,282,0)
   LA7VSTP          6154318        6079680        **27,44,51,46**
"PKG",53,22,1,"PAH",1,1,283,0)
   LA7VSTP1         8332246        3317926        **27,46**
"PKG",53,22,1,"PAH",1,1,284,0)
   LAGEN            9445120        8522786        **1,17,22,27,47,46**
"PKG",53,22,1,"PAH",1,1,285,0)
   LASET            6644420        6955342        **27,42,46**
"PKG",53,22,1,"PAH",1,1,286,0)
 
"PKG",53,22,1,"PAH",1,1,287,0)
 List of preceding patches: 42, 45, 47, 51, 55, 56
"PKG",53,22,1,"PAH",1,1,288,0)
 Sites should use CHECK^XTSUMBLD to verify checksums.
"PKG",53,22,1,"PAH",1,1,289,0)
     
"PKG",53,22,1,"PAH",1,1,290,0)
 
"PKG",53,22,1,"PAH",1,1,291,0)
SOFTWARE RETRIEVAL:
"PKG",53,22,1,"PAH",1,1,292,0)
===================
"PKG",53,22,1,"PAH",1,1,293,0)
   
"PKG",53,22,1,"PAH",1,1,294,0)
   The following software and documentation files are exported as part of
"PKG",53,22,1,"PAH",1,1,295,0)
   this patch:
"PKG",53,22,1,"PAH",1,1,296,0)
  
"PKG",53,22,1,"PAH",1,1,297,0)
    File Name           Contents                         Retrieval Format
"PKG",53,22,1,"PAH",1,1,298,0)
    ---------           --------                         ----------------
"PKG",53,22,1,"PAH",1,1,299,0)
    LAB_LEDI_II.KID     LA*5.2*46 KIDS build                 ASCII
"PKG",53,22,1,"PAH",1,1,300,0)
                        LR*5.2*222 KIDS build
"PKG",53,22,1,"PAH",1,1,301,0)
 
"PKG",53,22,1,"PAH",1,1,302,0)
    LAB_LEDI_II_IG.PDF  LABORATORY ELECTRONIC DATA           BINARY
"PKG",53,22,1,"PAH",1,1,303,0)
    LAB_LEDI_II_IG.DOC   INTERCHANGE PHASE II (LEDI II)
"PKG",53,22,1,"PAH",1,1,304,0)
                         INSTALLATION GUIDE
"PKG",53,22,1,"PAH",1,1,305,0)
 
"PKG",53,22,1,"PAH",1,1,306,0)
    LAB_LEDI_II_UM.PDF  LABORATORY ELECTRONIC DATA           BINARY
"PKG",53,22,1,"PAH",1,1,307,0)
    LAB_LEDI_II_UM.DOC   INTERCHANGE PHASE II (LEDI II)
"PKG",53,22,1,"PAH",1,1,308,0)
                         USER MANUAL
"PKG",53,22,1,"PAH",1,1,309,0)
 
"PKG",53,22,1,"PAH",1,1,310,0)
   The software files are available on one of the following OI Field
"PKG",53,22,1,"PAH",1,1,311,0)
   Offices' ANONYMOUS.SOFTWARE directories.
"PKG",53,22,1,"PAH",1,1,312,0)
 
"PKG",53,22,1,"PAH",1,1,313,0)
   All sites are encouraged to use their FTP capability to obtain these 
"PKG",53,22,1,"PAH",1,1,314,0)
   files.  Use the FTP address "download.vista.med.va.gov" (without the
"PKG",53,22,1,"PAH",1,1,315,0)
   quotes) to connect to the first available FTP server where the files
"PKG",53,22,1,"PAH",1,1,316,0)
   are located.
"PKG",53,22,1,"PAH",1,1,317,0)
 
"PKG",53,22,1,"PAH",1,1,318,0)
      OI FIELD OFFICE    FTP ADDRESS                DIRECTORY
"PKG",53,22,1,"PAH",1,1,319,0)
      ===============    ===========                =========
"PKG",53,22,1,"PAH",1,1,320,0)
      ALBANY             ftp.fo-albany.med.va.gov   [ANONYMOUS.SOFTWARE]
"PKG",53,22,1,"PAH",1,1,321,0)
      HINES              ftp.fo-hines.med.va.gov    [ANONYMOUS.SOFTWARE]
"PKG",53,22,1,"PAH",1,1,322,0)
      SALT LAKE          ftp.fo-slc.med.va.gov      [ANONYMOUS.SOFTWARE]
"PKG",53,22,1,"PAH",1,1,323,0)
 
"PKG",53,22,1,"PAH",1,1,324,0)

"PKG",53,22,1,"PAH",1,1,325,0)

"PKG",53,22,1,"PAH",1,1,326,0)
INSTALLATION INSTRUCTIONS
"PKG",53,22,1,"PAH",1,1,327,0)
-------------------------
"PKG",53,22,1,"PAH",1,1,328,0)
  The instructions for installation of the software are included in the
"PKG",53,22,1,"PAH",1,1,329,0)
  installation guide.
"PKG",53,22,1,"PAH",1,1,330,0)

"PKG",53,22,1,"PAH",1,1,331,0)

"PKG",53,22,1,"PAH",1,1,332,0)
POST-INSTALLATION INSTRUCTIONS
"PKG",53,22,1,"PAH",1,1,333,0)
------------------------------
"PKG",53,22,1,"PAH",1,1,334,0)
 
"PKG",53,22,1,"PAH",1,1,335,0)
 
"PKG",53,22,1,"PAH",1,1,336,0)
  The post-instructions for installation of the software are included in
"PKG",53,22,1,"PAH",1,1,337,0)
  the installation guide.
"PKG",53,22,1,"PAH",1,1,338,0)
  
"PKG",53,22,1,"PAH",1,1,339,0)
 
"PKG",53,22,1,"PAH",1,1,340,0)
INSTALLATION EXAMPLE
"PKG",53,22,1,"PAH",1,1,341,0)
====================
"PKG",53,22,1,"PAH",1,1,342,0)
 
"PKG",53,22,1,"PAH",1,1,343,0)
  An installation example is included in the installation guide.
"PRE")
LA46
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
60
"RTN","LA46")
0^^B28178815
"RTN","LA46",1,0)
LA46 ;DALOI/JMC - LA*5.2*46 PATCH ENVIRONMENT CHECK ROUTINE ;8/21/98
"RTN","LA46",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA46",3,0)
EN ; Does not prevent loading of the transport global.
"RTN","LA46",4,0)
 ; Environment check is done only during the install.
"RTN","LA46",5,0)
 ;
"RTN","LA46",6,0)
 N XQA,XQAMSG
"RTN","LA46",7,0)
 ;
"RTN","LA46",8,0)
 I '$G(XPDENV) D  Q
"RTN","LA46",9,0)
 . S XQAMSG="Transport global for patch "_$G(XPDNM,"Unknown patch")_" loaded on "_$$HTE^XLFDT($H)
"RTN","LA46",10,0)
 . S XQA("G.LMI")=""
"RTN","LA46",11,0)
 . D SETUP^XQALERT
"RTN","LA46",12,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("Sending transport global loaded alert to mail group G.LMI",80))
"RTN","LA46",13,0)
 ;
"RTN","LA46",14,0)
 S XQAMSG="Installation of patch "_$G(XPDNM,"Unknown patch")_" started on "_$$HTE^XLFDT($H)
"RTN","LA46",15,0)
 S XQA("G.LMI")=""
"RTN","LA46",16,0)
 D SETUP^XQALERT
"RTN","LA46",17,0)
 D BMES^XPDUTL($$CJ^XLFSTR("Sending install started alert to mail group G.LMI",80))
"RTN","LA46",18,0)
 ;
"RTN","LA46",19,0)
 D CHECK
"RTN","LA46",20,0)
 D EXIT
"RTN","LA46",21,0)
 Q
"RTN","LA46",22,0)
 ;
"RTN","LA46",23,0)
CHECK ; Perform environment check
"RTN","LA46",24,0)
 I $S('$G(IOM):1,'$G(IOSL):1,$G(U)'="^":1,1:0) D  Q
"RTN","LA46",25,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("Terminal Device is not defined",80))
"RTN","LA46",26,0)
 . S XPDQUIT=2
"RTN","LA46",27,0)
 I $S('$G(DUZ):1,$D(DUZ)[0:1,$D(DUZ(0))[0:1,1:0) D  Q
"RTN","LA46",28,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("Please log in to set local DUZ... variables",80))
"RTN","LA46",29,0)
 . S XPDQUIT=2
"RTN","LA46",30,0)
 I $P($$ACTIVE^XUSER(DUZ),"^")'=1 D  Q
"RTN","LA46",31,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("You are not a valid user on this system",80))
"RTN","LA46",32,0)
 . S XPDQUIT=2
"RTN","LA46",33,0)
 S XPDIQ("XPZ1","B")="NO"
"RTN","LA46",34,0)
 Q
"RTN","LA46",35,0)
 ;
"RTN","LA46",36,0)
EXIT ;
"RTN","LA46",37,0)
 I $G(XPDQUIT) D BMES^XPDUTL($$CJ^XLFSTR("--- Install Environment Check FAILED ---",80))
"RTN","LA46",38,0)
 I '$G(XPDQUIT) D BMES^XPDUTL($$CJ^XLFSTR("--- Environment Check is Ok ---",80))
"RTN","LA46",39,0)
 Q
"RTN","LA46",40,0)
 ;
"RTN","LA46",41,0)
PRE ; KIDS Pre install for LA*5.2*46
"RTN","LA46",42,0)
 ;
"RTN","LA46",43,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** Pre install started ***",80))
"RTN","LA46",44,0)
 ;
"RTN","LA46",45,0)
 ; Check and save auto download process status
"RTN","LA46",46,0)
 S LA7ADLST=$G(^LA("ADL","STOP"))
"RTN","LA46",47,0)
 I $P(LA7ADLST,"^")=0 D
"RTN","LA46",48,0)
 . D SETSTOP^LA7ADL1(2,DUZ)
"RTN","LA46",49,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("Shutting down Lab Universal Interface Auto Download Job",80))
"RTN","LA46",50,0)
 ;
"RTN","LA46",51,0)
 I $P(LA7ADLST,"^")'=0 D BMES^XPDUTL($$CJ^XLFSTR("--- No action required ---",80))
"RTN","LA46",52,0)
 ;
"RTN","LA46",53,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** Pre install completed ***",80))
"RTN","LA46",54,0)
 Q
"RTN","LA46",55,0)
 ;
"RTN","LA46",56,0)
POST ; KIDS Post install for LA*5.2*46
"RTN","LA46",57,0)
 N I,LA7CNT,LA7I,LA7J,LA7UPD,XQA,XQAMSG
"RTN","LA46",58,0)
 ;
"RTN","LA46",59,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** Post install started ***",80))
"RTN","LA46",60,0)
 ;
"RTN","LA46",61,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** Checking LAB SHIPPING MANIFEST file #62.8 ***",80))
"RTN","LA46",62,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** for missing data in field SHIP VIA #.04 ***",80))
"RTN","LA46",63,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** updating with information from file LAB SHIPPING CONFIGURATION #62.9 ***",80))
"RTN","LA46",64,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** when appropriate. ***",80))
"RTN","LA46",65,0)
 D BMES^XPDUTL("*** Checking data: ")
"RTN","LA46",66,0)
 ;
"RTN","LA46",67,0)
 S (LA7CNT,LA7I,LA7UPD)=0
"RTN","LA46",68,0)
 S XPDIDTOT=$P($G(^LAHM(62.8,0)),"^",3)
"RTN","LA46",69,0)
 D UPDATE^XPDID(0)
"RTN","LA46",70,0)
 F LA7J=1:1 S LA7I=$O(^LAHM(62.8,LA7I)) Q:'LA7I  D
"RTN","LA46",71,0)
 . I '(LA7J#10) D UPDATE^XPDID(LA7J)
"RTN","LA46",72,0)
 . N FDA,LA7DIE
"RTN","LA46",73,0)
 . S LA7I(0)=$G(^LAHM(62.8,LA7I,0))
"RTN","LA46",74,0)
 . I $P(LA7I(0),"^",4) Q  ; already updated
"RTN","LA46",75,0)
 . I '$P(LA7I(0),"^",2) Q  ; no pointer to #62.9
"RTN","LA46",76,0)
 . I $P($G(^LAHM(62.9,$P(LA7I(0),"^",2),0)),"^",8) D
"RTN","LA46",77,0)
 . . S FDA(1,62.8,LA7I_",",.04)=$P($G(^LAHM(62.9,$P(LA7I(0),"^",2),0)),"^",8)
"RTN","LA46",78,0)
 . . D FILE^DIE("","FDA(1)","LA7DIE(1)")
"RTN","LA46",79,0)
 . . S LA7CNT=LA7CNT+1
"RTN","LA46",80,0)
 I 'LA7CNT D BMES^XPDUTL($$CJ^XLFSTR("--- No entries required updating ---",80))
"RTN","LA46",81,0)
 I LA7CNT D
"RTN","LA46",82,0)
 . S LA7UPD=1
"RTN","LA46",83,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("--- Updated "_LA7CNT_" entries in LAB SHIPPING MANIFEST file #62.8  ---",80))
"RTN","LA46",84,0)
 ;
"RTN","LA46",85,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** Checking LA7 MESSAGE PARAMETER file #62.48 ***",80))
"RTN","LA46",86,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** Updating processing routine as needed ***",80))
"RTN","LA46",87,0)
 ;
"RTN","LA46",88,0)
 S (LA7CNT,LA7I)=0
"RTN","LA46",89,0)
 F  S LA7I=$O(^LAHM(62.48,LA7I)) Q:'LA7I  D
"RTN","LA46",90,0)
 . N FDA,LA7DIE
"RTN","LA46",91,0)
 . F I=0,1 S LA7I(I)=$G(^LAHM(62.48,LA7I,I))
"RTN","LA46",92,0)
 . I $E($P(LA7I(0),"^"),1,4)'="LA7V" Q
"RTN","LA46",93,0)
 . I LA7I(1)="D QUE^LA7VIN" Q  ; already updated
"RTN","LA46",94,0)
 . S FDA(1,62.48,LA7I_",",5)="D QUE^LA7VIN"
"RTN","LA46",95,0)
 . D FILE^DIE("","FDA(1)","LA7DIE(1)")
"RTN","LA46",96,0)
 . D BMES^XPDUTL("Updating entry "_$P(LA7I(0),"^"))
"RTN","LA46",97,0)
 . S LA7CNT=LA7CNT+1
"RTN","LA46",98,0)
 ;
"RTN","LA46",99,0)
 I 'LA7CNT D BMES^XPDUTL($$CJ^XLFSTR("--- No entries required updating ---",80))
"RTN","LA46",100,0)
 I LA7CNT S LA7UPD=1
"RTN","LA46",101,0)
 ;
"RTN","LA46",102,0)
 I $P(LA7ADLST,"^")=0 D
"RTN","LA46",103,0)
 . D ZTSK^LA7ADL
"RTN","LA46",104,0)
 . D SETSTOP^LA7ADL1(1,DUZ)
"RTN","LA46",105,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("Restarting Lab Universal Interface Auto Download Job",80))
"RTN","LA46",106,0)
 . S LA7UPD=1
"RTN","LA46",107,0)
 ;
"RTN","LA46",108,0)
 I $L($G(XPDNM)) D
"RTN","LA46",109,0)
 . D PRD^DILFD(62.9,XPDNM)
"RTN","LA46",110,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("Updating package revision data for file #62.9",80))
"RTN","LA46",111,0)
 ;
"RTN","LA46",112,0)
 I 'LA7UPD D BMES^XPDUTL($$CJ^XLFSTR("--- No actions required for post install ---",80))
"RTN","LA46",113,0)
 ;
"RTN","LA46",114,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** Post install completed ***",80))
"RTN","LA46",115,0)
 ;
"RTN","LA46",116,0)
 S XQAMSG="Installation of patch "_$G(XPDNM,"Unknown patch")_" completed on "_$$HTE^XLFDT($H)
"RTN","LA46",117,0)
 S XQA("G.LMI")=""
"RTN","LA46",118,0)
 D SETUP^XQALERT
"RTN","LA46",119,0)
 D BMES^XPDUTL($$CJ^XLFSTR("Sending install completion alert to mail group G.LMI",80))
"RTN","LA46",120,0)
 ;
"RTN","LA46",121,0)
 S XQAMSG="LIM: Review LEDI II Install Guide and User Manual"
"RTN","LA46",122,0)
 S XQA("G.LMI")=""
"RTN","LA46",123,0)
 D SETUP^XQALERT
"RTN","LA46",124,0)
 ;
"RTN","LA46",125,0)
 ;
"RTN","LA46",126,0)
CLEANUP ;
"RTN","LA46",127,0)
 K LA7ADLST
"RTN","LA46",128,0)
 ;
"RTN","LA46",129,0)
 Q
"RTN","LA7CHKF")
0^35^B45130719
"RTN","LA7CHKF",1,0)
LA7CHKF ;DALOI/JMC - Check Lab Messaging File Integrity ; 2/26/97 11:00
"RTN","LA7CHKF",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46**;Sep 27, 1994
"RTN","LA7CHKF",3,0)
 ;This routine checks file integrity for Lab Messaging.
"RTN","LA7CHKF",4,0)
EN ; Run an integrity check
"RTN","LA7CHKF",5,0)
 ;
"RTN","LA7CHKF",6,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7CHKF",7,0)
 N LA7FIX,LA7ION,LA7LOG,LA7QUIT
"RTN","LA7CHKF",8,0)
 ;
"RTN","LA7CHKF",9,0)
 S LA7LOG=1
"RTN","LA7CHKF",10,0)
 S DIR(0)="SO^1:Check File Integrity;2:Fix File Entries"
"RTN","LA7CHKF",11,0)
 S DIR("A")="Select Option",DIR("B")=1
"RTN","LA7CHKF",12,0)
 D ^DIR
"RTN","LA7CHKF",13,0)
 I $D(DIRUT) Q
"RTN","LA7CHKF",14,0)
 I Y=1 S LA7FIX=0
"RTN","LA7CHKF",15,0)
 I Y=2 S LA7FIX=1
"RTN","LA7CHKF",16,0)
 ;
"RTN","LA7CHKF",17,0)
 K DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7CHKF",18,0)
 S DIR(0)="YO",DIR("A")="Print Report",DIR("B")="YES",DIR("?")="Enter 'YES' to print the integrity report."
"RTN","LA7CHKF",19,0)
 D ^DIR
"RTN","LA7CHKF",20,0)
 I $D(DIRUT) Q
"RTN","LA7CHKF",21,0)
 I Y=1 D
"RTN","LA7CHKF",22,0)
 . N %ZIS
"RTN","LA7CHKF",23,0)
 . S %ZIS="NQ0",%ZIS("A")="Select Device: ",%ZIS("B")=""
"RTN","LA7CHKF",24,0)
 . D ^%ZIS
"RTN","LA7CHKF",25,0)
 . I POP S LA7QUIT=1
"RTN","LA7CHKF",26,0)
 . S LA7ION=ION
"RTN","LA7CHKF",27,0)
 I $G(LA7QUIT) D HOME^%ZIS Q
"RTN","LA7CHKF",28,0)
 ;
"RTN","LA7CHKF",29,0)
 S ZTRTN="DQ^LA7CHKF",ZTDESC="Lab Messaging File Integrity Checker"
"RTN","LA7CHKF",30,0)
 S ZTSAVE("LA7*")="",ZTIO=""
"RTN","LA7CHKF",31,0)
 D ^%ZTLOAD,HOME^%ZIS
"RTN","LA7CHKF",32,0)
 W !,"Request ",$S($G(ZTSK):"",1:"NOT "),"Queued"
"RTN","LA7CHKF",33,0)
 Q
"RTN","LA7CHKF",34,0)
 ;
"RTN","LA7CHKF",35,0)
DQ ; Entry point from taskman
"RTN","LA7CHKF",36,0)
 D IC
"RTN","LA7CHKF",37,0)
 Q
"RTN","LA7CHKF",38,0)
 ;
"RTN","LA7CHKF",39,0)
IC ; File 62.49 Integrity checker and fix-er-upper.
"RTN","LA7CHKF",40,0)
 ;
"RTN","LA7CHKF",41,0)
 ; Check that all the cross-references have entries
"RTN","LA7CHKF",42,0)
 ;
"RTN","LA7CHKF",43,0)
 N LA7CFG,LA7DA,LA7DAT,LA7ECNT,LA7IC,LA7INAME,LA7Q,LA7ROOT,X,Y
"RTN","LA7CHKF",44,0)
 S LA7FIX=$G(LA7FIX,0) ; Set flag to fix problems 1=yes, 0=just check (default)
"RTN","LA7CHKF",45,0)
 S LA7LOG=$G(LA7LOG,0) ; Set flag to report problems, 1=yes, 0=no (default)
"RTN","LA7CHKF",46,0)
 I LA7LOG D
"RTN","LA7CHKF",47,0)
 . F  S LA7IC="LA7IC^"_$$NOW^XLFDT L +^XTMP(LA7IC):9999 Q:'$D(^XTMP(LA7IC))  L -^XTMP(LA7IC) H 1
"RTN","LA7CHKF",48,0)
 . S DT=$$DT^XLFDT
"RTN","LA7CHKF",49,0)
 . S ^XTMP(LA7IC,0)=$$FMADD^XLFDT(DT,7)_"^"_DT_"^Lab Messaging Integrity Checker"_"^"_$$NOW^XLFDT
"RTN","LA7CHKF",50,0)
 S LA7ECNT=0 ; Count of number of errors
"RTN","LA7CHKF",51,0)
 ;
"RTN","LA7CHKF",52,0)
 ; Check the "AD" cross-reference
"RTN","LA7CHKF",53,0)
 S LA7ROOT="^LAHM(62.49,""AD"")"
"RTN","LA7CHKF",54,0)
 F  S LA7ROOT=$Q(LA7ROOT) Q:LA7ROOT=""  Q:$QS(LA7ROOT,1)'=62.49!($QS(LA7ROOT,2)'="AD")  D
"RTN","LA7CHKF",55,0)
 . S LA7DAT=$QS(LA7ROOT,3),LA7DA=$QS(LA7ROOT,4)
"RTN","LA7CHKF",56,0)
 . I '$$LOCK(LA7DA) Q
"RTN","LA7CHKF",57,0)
 . I LA7DAT'=$P($P($G(^LAHM(62.49,LA7DA,0)),"^",5),".") D
"RTN","LA7CHKF",58,0)
 . . I LA7FIX K @LA7ROOT
"RTN","LA7CHKF",59,0)
 . . I LA7LOG D LOG("Bad ""AD"" cross-reference of "_LA7ROOT_" for entry "_LA7DA)
"RTN","LA7CHKF",60,0)
 . D UNLOCK(LA7DA)
"RTN","LA7CHKF",61,0)
 ;
"RTN","LA7CHKF",62,0)
 ; Check the "B" cross-reference
"RTN","LA7CHKF",63,0)
 S LA7ROOT="^LAHM(62.49,""B"")"
"RTN","LA7CHKF",64,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""  Q:$QS(LA7ROOT,1)'=62.49!($QS(LA7ROOT,2)'="B")  D
"RTN","LA7CHKF",65,0)
 . S LA7DA=$QS(LA7ROOT,4)
"RTN","LA7CHKF",66,0)
 . I '$$LOCK(LA7DA) Q
"RTN","LA7CHKF",67,0)
 . I LA7DA'=$QS(LA7ROOT,3) D
"RTN","LA7CHKF",68,0)
 . . I LA7FIX K @LA7ROOT
"RTN","LA7CHKF",69,0)
 . . I LA7LOG D LOG("""B"" cross-reference "_LA7ROOT_" points to incorrect entry "_$QS(LA7ROOT,4))
"RTN","LA7CHKF",70,0)
 . I '$D(^LAHM(62.49,LA7DA,0)) D
"RTN","LA7CHKF",71,0)
 . . I LA7FIX K @LA7ROOT
"RTN","LA7CHKF",72,0)
 . . I LA7LOG D LOG("""B"" cross-reference "_LA7ROOT_" points to missing entry "_LA7DA)
"RTN","LA7CHKF",73,0)
 . D UNLOCK(LA7DA)
"RTN","LA7CHKF",74,0)
 ;
"RTN","LA7CHKF",75,0)
 ; Check the "C" cross-reference
"RTN","LA7CHKF",76,0)
 S LA7ROOT="^LAHM(62.49,""C"")"
"RTN","LA7CHKF",77,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""  Q:$QS(LA7ROOT,1)'=62.49!($QS(LA7ROOT,2)'="C")  D
"RTN","LA7CHKF",78,0)
 . S LA7INAME=$QS(LA7ROOT,3),LA7DA=$QS(LA7ROOT,4)
"RTN","LA7CHKF",79,0)
 . I '$$LOCK(LA7DA) Q
"RTN","LA7CHKF",80,0)
 . I LA7INAME'=$E($P($G(^LAHM(62.49,LA7DA,0)),"^",6),1,30) D
"RTN","LA7CHKF",81,0)
 . . I LA7FIX K @LA7ROOT
"RTN","LA7CHKF",82,0)
 . . I LA7LOG D LOG("Bad ""C"" cross-reference of "_LA7ROOT_" on entry "_LA7DA)
"RTN","LA7CHKF",83,0)
 . D UNLOCK(LA7DA)
"RTN","LA7CHKF",84,0)
 ;
"RTN","LA7CHKF",85,0)
 ; Check the "Q" cross-reference
"RTN","LA7CHKF",86,0)
 S LA7ROOT="^LAHM(62.49,""Q"")"
"RTN","LA7CHKF",87,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""  Q:$QS(LA7ROOT,1)'=62.49!($QS(LA7ROOT,2)'="Q")  D
"RTN","LA7CHKF",88,0)
 . S LA7CFG=$QS(LA7ROOT,3)
"RTN","LA7CHKF",89,0)
 . S LA7Q=$QS(LA7ROOT,4)
"RTN","LA7CHKF",90,0)
 . S LA7DA=$QS(LA7ROOT,5)
"RTN","LA7CHKF",91,0)
 . I '$$LOCK(LA7DA) Q
"RTN","LA7CHKF",92,0)
 . S X(0)=$G(^LAHM(62.49,LA7DA,0))
"RTN","LA7CHKF",93,0)
 . S X(.5)=$G(^LAHM(62.49,LA7DA,.5))
"RTN","LA7CHKF",94,0)
 . I LA7CFG'=$P(X(.5),"^")!(LA7Q'=($P(X(0),"^",2)_$P(X(0),"^",3))) D
"RTN","LA7CHKF",95,0)
 . . I LA7LOG D LOG("Bad ""Q"" cross-reference of "_LA7ROOT_" for entry: "_LA7DA)
"RTN","LA7CHKF",96,0)
 . . I LA7FIX K @LA7ROOT
"RTN","LA7CHKF",97,0)
 . D UNLOCK(LA7DA)
"RTN","LA7CHKF",98,0)
 ;
"RTN","LA7CHKF",99,0)
 ; Check that all entries have "AD" cross-reference set.
"RTN","LA7CHKF",100,0)
 ;                              "B" cross-reference set
"RTN","LA7CHKF",101,0)
 ;                              "C" cross-reference set
"RTN","LA7CHKF",102,0)
 ;                              "Q" cross-reference set
"RTN","LA7CHKF",103,0)
 S (LA7DA,LA7TCNT)=0
"RTN","LA7CHKF",104,0)
 F  S LA7DA=$O(^LAHM(62.49,LA7DA)) Q:'LA7DA  D
"RTN","LA7CHKF",105,0)
 . I '$$LOCK(LA7DA) Q
"RTN","LA7CHKF",106,0)
 . S LA7TCNT=LA7TCNT+1 ; Count of entries in file.
"RTN","LA7CHKF",107,0)
 . S X(0)=$G(^LAHM(62.49,LA7DA,0))
"RTN","LA7CHKF",108,0)
 . S X(.5)=$G(^LAHM(62.49,LA7DA,.5))
"RTN","LA7CHKF",109,0)
 . S Y=$P(X(0),"^") ; Message number (.01 field)
"RTN","LA7CHKF",110,0)
 . I 'Y D
"RTN","LA7CHKF",111,0)
 . . I LA7FIX K ^LAHM(62.49,LA7DA)
"RTN","LA7CHKF",112,0)
 . . I LA7LOG D LOG("Entry "_LA7DA_" missing .01 field")
"RTN","LA7CHKF",113,0)
 . S Y=$P(X(0),"^",5) ; date/time entered
"RTN","LA7CHKF",114,0)
 . I Y,'$D(^LAHM(62.49,"AD",$P(Y,"."),LA7DA)) D
"RTN","LA7CHKF",115,0)
 . . I LA7FIX S ^LAHM(62.49,"AD",$P(Y,"."),LA7DA)=""
"RTN","LA7CHKF",116,0)
 . . I LA7LOG D LOG("Entry "_LA7DA_" missing ""AD"" cross-reference "_$P(Y,"."))
"RTN","LA7CHKF",117,0)
 . S Y=$P(X(0),"^")
"RTN","LA7CHKF",118,0)
 . I Y,'$D(^LAHM(62.49,"B",Y,LA7DA)) D
"RTN","LA7CHKF",119,0)
 . . I LA7FIX S ^LAHM(62.49,"B",Y,LA7DA)=""
"RTN","LA7CHKF",120,0)
 . . I LA7LOG D LOG("Entry "_LA7DA_" missing ""B"" cross-reference")
"RTN","LA7CHKF",121,0)
 . S Y=$P(X(0),"^",6) ; instrument name
"RTN","LA7CHKF",122,0)
 . I $L(Y),'$D(^LAHM(62.49,"C",$E(Y,1,30),LA7DA)) D
"RTN","LA7CHKF",123,0)
 . . I LA7FIX S ^LAHM(62.49,"C",$E(Y,1,30),LA7DA)=""
"RTN","LA7CHKF",124,0)
 . . I LA7LOG D LOG("Entry "_LA7DA_" missing ""C"" cross-reference "_Y)
"RTN","LA7CHKF",125,0)
 . S Y=$P(X(0),"^",2)_$P(X(0),"^",3) ; concatentate configuration_status
"RTN","LA7CHKF",126,0)
 . I +X(.5),$L(Y),'$D(^LAHM(62.49,"Q",+X(.5),Y,LA7DA)) D
"RTN","LA7CHKF",127,0)
 . . I LA7FIX S ^LAHM(62.49,"Q",+X(.5),Y,LA7DA)=""
"RTN","LA7CHKF",128,0)
 . . I LA7LOG D LOG("Entry "_LA7DA_" missing ^LAHM(62.49,""Q"","_+X(.5)_","""_Y_""","_LA7DA_") cross-reference")
"RTN","LA7CHKF",129,0)
 . D UNLOCK(LA7DA)
"RTN","LA7CHKF",130,0)
 I LA7LOG D
"RTN","LA7CHKF",131,0)
 . S $P(^XTMP(LA7IC,0),"^",5)=$$NOW^XLFDT ; End date/time
"RTN","LA7CHKF",132,0)
 . S $P(^XTMP(LA7IC,0),"^",6,7)=LA7TCNT_"^"_LA7ECNT ; Total^Error count
"RTN","LA7CHKF",133,0)
 . L -^XTMP(LA7IC) ; Release lock
"RTN","LA7CHKF",134,0)
 I LA7ECNT D
"RTN","LA7CHKF",135,0)
 . N XQA,XQAID,XQADATA,XQAMSG,XQAOPT,XQAROU
"RTN","LA7CHKF",136,0)
 . S XQAMSG="Lab Messaging -Warning- "_LA7ECNT_" errors found in File #62.49, LA7 MESSAGE QUEUE."
"RTN","LA7CHKF",137,0)
 . I LA7LOG S XQADATA=LA7IC,XQAROU="DISIC^LA7UXQA"
"RTN","LA7CHKF",138,0)
 . S XQAID="LA7ERR-"_$TR(LA7IC,"^",":")
"RTN","LA7CHKF",139,0)
 . I $G(DUZ)>.9 S XQA(DUZ)=""
"RTN","LA7CHKF",140,0)
 . S XQA("G.LAB MESSAGING")=""
"RTN","LA7CHKF",141,0)
 . D SETUP^XQALERT
"RTN","LA7CHKF",142,0)
 I $L($G(LA7ION)) D  ; Task print of integrity report
"RTN","LA7CHKF",143,0)
 . N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSK
"RTN","LA7CHKF",144,0)
 . S ZTRTN="DQ^LA7CHKFP",ZTDTH=$H,ZTSAVE("LA7IC")="",ZTIO=LA7ION
"RTN","LA7CHKF",145,0)
 . S ZTDESC="Print LA7 File Integrity Report"
"RTN","LA7CHKF",146,0)
 . D ^%ZTLOAD
"RTN","LA7CHKF",147,0)
 K LA7FIX,LA7ION,LA7LOG
"RTN","LA7CHKF",148,0)
 Q
"RTN","LA7CHKF",149,0)
 ;
"RTN","LA7CHKF",150,0)
LOG(X) ; Log error in XTMP global.
"RTN","LA7CHKF",151,0)
 ; Call with X = error message to store.
"RTN","LA7CHKF",152,0)
 S LA7ECNT=$G(LA7ECNT)+1
"RTN","LA7CHKF",153,0)
 S ^XTMP(LA7IC,LA7ECNT)=X
"RTN","LA7CHKF",154,0)
 Q
"RTN","LA7CHKF",155,0)
 ;
"RTN","LA7CHKF",156,0)
LOCK(LA7DA) ; Lock entry in #62.49
"RTN","LA7CHKF",157,0)
 ; Call with LA7DA = entry to lock
"RTN","LA7CHKF",158,0)
 ; Returns       0 = failure to obtain lock
"RTN","LA7CHKF",159,0)
 ;               1 = lock obtained
"RTN","LA7CHKF",160,0)
 N LA7Y
"RTN","LA7CHKF",161,0)
 S LA7Y=0,LA7DA=+$G(LA7DA)
"RTN","LA7CHKF",162,0)
 L +^LAHM(62.49,LA7DA):10
"RTN","LA7CHKF",163,0)
 I $T S LA7Y=1
"RTN","LA7CHKF",164,0)
 I 'LA7Y,$G(LA7LOG) D LOG("Unable to obtain lock on entry "_LA7DA_" in file #62.49")
"RTN","LA7CHKF",165,0)
 Q LA7Y
"RTN","LA7CHKF",166,0)
 ;
"RTN","LA7CHKF",167,0)
UNLOCK(LA7DA) ; Unlock entry in #62.49
"RTN","LA7CHKF",168,0)
 ; Call with LA7DA = entry to lock
"RTN","LA7CHKF",169,0)
 ;
"RTN","LA7CHKF",170,0)
 S LA7DA=+$G(LA7DA)
"RTN","LA7CHKF",171,0)
 L -^LAHM(62.49,LA7DA)
"RTN","LA7CHKF",172,0)
 Q
"RTN","LA7CHKF",173,0)
 ;
"RTN","LA7CHKF",174,0)
LACHK() ; Check ^LA("ADL","Q") for build up of entries.
"RTN","LA7CHKF",175,0)
 ; Send alert to mail group LAB MESSAGING warning about large # of entries.
"RTN","LA7CHKF",176,0)
 N LA7CNT,LA7DA,X,Y
"RTN","LA7CHKF",177,0)
 S LA7DA="",LA7CNT=0
"RTN","LA7CHKF",178,0)
 F  S LA7DA=$O(^LA("ADL","Q",LA7DA)) Q:LA7DA=""  S LA7CNT=LA7CNT+1
"RTN","LA7CHKF",179,0)
 I LA7CNT>500 D
"RTN","LA7CHKF",180,0)
 . N XQA,XQAID,XQADATA,XQAMSG,XQAOPT,XQAROU
"RTN","LA7CHKF",181,0)
 . S XQAMSG="Lab Messaging -Warning- "_LA7CNT_" entries in LA(""ADL"",""Q"") global - please check."
"RTN","LA7CHKF",182,0)
 . S XQAID="LA7ADL-"_$H
"RTN","LA7CHKF",183,0)
 . I $G(DUZ)>.9 S XQA(DUZ)=""
"RTN","LA7CHKF",184,0)
 . S XQA("G.LAB MESSAGING")=""
"RTN","LA7CHKF",185,0)
 . D SETUP^XQALERT
"RTN","LA7CHKF",186,0)
 Q LA7CNT
"RTN","LA7QRY")
0^44^B4448752
"RTN","LA7QRY",1,0)
LA7QRY ;DALOI/JMC - Lab HL7 Query Utility ;01/19/99  13:48
"RTN","LA7QRY",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7QRY",3,0)
 ;
"RTN","LA7QRY",4,0)
 ; Reference to variable DIQUIET supported by DBIA #2098
"RTN","LA7QRY",5,0)
 ; Reference to ^DPT("SSN") global supported by DBIA #10035
"RTN","LA7QRY",6,0)
 ;
"RTN","LA7QRY",7,0)
 Q
"RTN","LA7QRY",8,0)
 ;
"RTN","LA7QRY",9,0)
GCPR(LA7PTID,LA7SDT,LA7EDT,LA7SC,LA7SPEC,LA7ERR,LA7DEST,LA7HL7) ; Entry point for Government Computerized Patient Record query
"RTN","LA7QRY",10,0)
 ;
"RTN","LA7QRY",11,0)
 ; Call with LA7PTID = patient identifier, either SSN or MPI/ICN
"RTN","LA7QRY",12,0)
 ;                     if MPI/ICN then should be full ICN (10 digit number followed by "V" and six digit checksum)
"RTN","LA7QRY",13,0)
 ;                     For example: 1000720100V271387 
"RTN","LA7QRY",14,0)
 ;            LA7SDT = start date of query (FileMan D/T, time optional)
"RTN","LA7QRY",15,0)
 ;            LA7EDT = end date of query (FileMan D/T, time optional)
"RTN","LA7QRY",16,0)
 ;                     (FileMan D/T^type of date ("CD" or "RAD")
"RTN","LA7QRY",17,0)
 ;                     Both start and end date values can pass a parameter
"RTN","LA7QRY",18,0)
 ;                     in the second piece to indicate that the date values
"RTN","LA7QRY",19,0)
 ;                     are for specimen collection date/time (CD) or results available date (RAD)
"RTN","LA7QRY",20,0)
 ;                     Example: LA7SDT="2991001.1239^CD"
"RTN","LA7QRY",21,0)
 ;                              LA7EDT="2991002.0331^CD"
"RTN","LA7QRY",22,0)
 ;                              LA7SDT="3010201^RAD"
"RTN","LA7QRY",23,0)
 ;                              LA7EDT="3010201^RAD"
"RTN","LA7QRY",24,0)
 ;
"RTN","LA7QRY",25,0)
 ;             LA7SC = array of search codes, either NLT or LOINC
"RTN","LA7QRY",26,0)
 ;                     or "*" (wildcard) for any code
"RTN","LA7QRY",27,0)
 ;                     (code^coding system ("NLT" or "LN")
"RTN","LA7QRY",28,0)
 ;                     Example: LA7SC="*"
"RTN","LA7QRY",29,0)
 ;                                or
"RTN","LA7QRY",30,0)
 ;                              LA7SC(1)="89628.0000^NLT"
"RTN","LA7QRY",31,0)
 ;                              LA7SC(2)="84330.0000^NLT"
"RTN","LA7QRY",32,0)
 ;                              LA7SC(3)="84295.0000^NLT"
"RTN","LA7QRY",33,0)
 ;                              LA7SC(4)="14749-6^LN"
"RTN","LA7QRY",34,0)
 ;
"RTN","LA7QRY",35,0)
 ;           LA7SPEC = array of specimen types using HL7 source table 0070
"RTN","LA7QRY",36,0)
 ;                     or "*" (wildcard) for any code
"RTN","LA7QRY",37,0)
 ;                     Currently specimen type only supported for CH and MI subscripted tests.
"RTN","LA7QRY",38,0)
 ;                     Example: LA7SPEC="*"
"RTN","LA7QRY",39,0)
 ;                                or
"RTN","LA7QRY",40,0)
 ;                              LA7SPEC(1)="UR"
"RTN","LA7QRY",41,0)
 ;                              LA7SPEC(2)="SER"
"RTN","LA7QRY",42,0)
 ;                              LA7SPEC(3)="PLAS"
"RTN","LA7QRY",43,0)
 ;
"RTN","LA7QRY",44,0)
 ;           LA7DEST = closed root global reference to return search results (optional)
"RTN","LA7QRY",45,0)
 ;
"RTN","LA7QRY",46,0)
 ;                     If this parameter is omitted or equals an empty string,
"RTN","LA7QRY",47,0)
 ;                     then node ^TMP("HLS",$J) is used.
"RTN","LA7QRY",48,0)
 ;                     Example: LA7DEST=$NA(^TMP("ZZTMP",$J))
"RTN","LA7QRY",49,0)
 ;
"RTN","LA7QRY",50,0)
 ;            LA7HL7 = HL7 field separator and encoding characters (4) to use to encode results (optional)
"RTN","LA7QRY",51,0)
 ;                     If undefined or incomplete (length<5) then field separator="|" and encoding characters="^\~&"
"RTN","LA7QRY",52,0)
 ;
"RTN","LA7QRY",53,0)
 ; Returns   LA7DEST = contains global reference of search results in HL7 message structure, usually ^TMP("HLS",$J)
"RTN","LA7QRY",54,0)
 ;            LA7ERR = array (by reference) containing any errors
"RTN","LA7QRY",55,0)
 ;
"RTN","LA7QRY",56,0)
 N DFN,DIQUIET,LA76248,LA7CODE,LA7PTYP,LA7QUIT,LRDFN,LRIDT,LRSS
"RTN","LA7QRY",57,0)
 ;
"RTN","LA7QRY",58,0)
 D CLEANUP
"RTN","LA7QRY",59,0)
 S U="^",DT=$$DT^XLFDT,DTIME=$$DTIME^XUP($G(DUZ))
"RTN","LA7QRY",60,0)
 S GBL=$S($G(LA7DEST)'="":LA7DEST,1:"^TMP(""HLS"","_$J_")")
"RTN","LA7QRY",61,0)
 K LA7ERR
"RTN","LA7QRY",62,0)
 ; Prevent FileMan from issuing any unwanted WRITE(s).
"RTN","LA7QRY",63,0)
 S DIQUIET=1
"RTN","LA7QRY",64,0)
 ; Currently not using file #62.48 for configuration information.
"RTN","LA7QRY",65,0)
 S LA76248=0
"RTN","LA7QRY",66,0)
 ;
"RTN","LA7QRY",67,0)
 ; Identify patient, quit if error
"RTN","LA7QRY",68,0)
 D PATID^LA7QRY2
"RTN","LA7QRY",69,0)
 I $D(LA7ERR) Q ""
"RTN","LA7QRY",70,0)
 ;
"RTN","LA7QRY",71,0)
 ; Resolve search codes to lab datanames
"RTN","LA7QRY",72,0)
 S LA7SC=$G(LA7SC)
"RTN","LA7QRY",73,0)
 I LA7SC'="*" D CHKSC^LA7QRY1
"RTN","LA7QRY",74,0)
 ;
"RTN","LA7QRY",75,0)
 ; Convert specimen codes to file #61 Topography entries
"RTN","LA7QRY",76,0)
 S LA7SPEC=$G(LA7SPEC)
"RTN","LA7QRY",77,0)
 I LA7SPEC'="*" D SPEC^LA7QRY1
"RTN","LA7QRY",78,0)
 ;
"RTN","LA7QRY",79,0)
 ; Search by collection or results available date
"RTN","LA7QRY",80,0)
 I $P(LA7SDT,"^",2)="" S $P(LA7SDT,"^",2)="CD"
"RTN","LA7QRY",81,0)
 I $P(LA7SDT,"^",2)="RAD" D BRAD^LA7QRY2
"RTN","LA7QRY",82,0)
 I $P(LA7SDT,"^",2)="CD" D BCD^LA7QRY2
"RTN","LA7QRY",83,0)
 ;
"RTN","LA7QRY",84,0)
 I '$D(^TMP("LA7-QRY",$J)) D
"RTN","LA7QRY",85,0)
 . S LA7ERR(99)="No results found for requested parameters"
"RTN","LA7QRY",86,0)
 . S GBL=""
"RTN","LA7QRY",87,0)
 E  D BUILDMSG^LA7QRY1
"RTN","LA7QRY",88,0)
 ;
"RTN","LA7QRY",89,0)
 D CLEANUP
"RTN","LA7QRY",90,0)
 ;
"RTN","LA7QRY",91,0)
 Q GBL
"RTN","LA7QRY",92,0)
 ;
"RTN","LA7QRY",93,0)
 ;
"RTN","LA7QRY",94,0)
CLEANUP ; Cleanup TMP nodes that are used.
"RTN","LA7QRY",95,0)
 ;
"RTN","LA7QRY",96,0)
 N I
"RTN","LA7QRY",97,0)
 ;
"RTN","LA7QRY",98,0)
 F I="LA7-61","LA7-DN","LA7-LN","LA7-NLT","LA7-QRY" K ^TMP(I,$J)
"RTN","LA7QRY",99,0)
 D KVAR^LRX
"RTN","LA7QRY",100,0)
 ;
"RTN","LA7QRY",101,0)
 Q
"RTN","LA7QRY1")
0^52^B12153831
"RTN","LA7QRY1",1,0)
LA7QRY1 ;DALOI/JMC - Lab HL7 Query Utility ;01/19/99  13:48
"RTN","LA7QRY1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7QRY1",3,0)
 ;
"RTN","LA7QRY1",4,0)
 Q
"RTN","LA7QRY1",5,0)
 ;
"RTN","LA7QRY1",6,0)
CHKSC ; Check search NLT/LOINC codes
"RTN","LA7QRY1",7,0)
 ;
"RTN","LA7QRY1",8,0)
 N J
"RTN","LA7QRY1",9,0)
 ;
"RTN","LA7QRY1",10,0)
 S J=0
"RTN","LA7QRY1",11,0)
 F  S J=$O(LA7SC(J)) Q:'J  D
"RTN","LA7QRY1",12,0)
 . N X
"RTN","LA7QRY1",13,0)
 . S X=LA7SC(J)
"RTN","LA7QRY1",14,0)
 . I $P(X,"^",2)="NLT",$D(^LAM("E",$P(X,"^"))) D  Q
"RTN","LA7QRY1",15,0)
 . . S ^TMP("LA7-NLT",$J,$P(X,"^"))=""
"RTN","LA7QRY1",16,0)
 . I $P(X,"^",2)="LN",$D(^LAB(95.3,$P($P(X,"^"),"-"))) D  Q
"RTN","LA7QRY1",17,0)
 . . S ^TMP("LA7-LN",$J,$P($P(X,"^"),"-"))=""
"RTN","LA7QRY1",18,0)
 . S LA7ERR(6)="Unknown search code "_$P(X,"^")_" passed"
"RTN","LA7QRY1",19,0)
 . K LA7SC(J)
"RTN","LA7QRY1",20,0)
 Q
"RTN","LA7QRY1",21,0)
 ;
"RTN","LA7QRY1",22,0)
 ;
"RTN","LA7QRY1",23,0)
SPEC ; Convert HL7 Specimen Codes to File #61, Topography codes
"RTN","LA7QRY1",24,0)
 ; Find all topographies that use this HL7 specimen code
"RTN","LA7QRY1",25,0)
 N J,K,L
"RTN","LA7QRY1",26,0)
 ;
"RTN","LA7QRY1",27,0)
 S J=0
"RTN","LA7QRY1",28,0)
 F  S J=$O(LA7SPEC(J)) Q:'J  D
"RTN","LA7QRY1",29,0)
 . S K=LA7SPEC(J),L=0
"RTN","LA7QRY1",30,0)
 . F  S L=$O(^LAB(61,"HL7",K,L)) Q:'L  S ^TMP("LA7-61",$J,L)=""
"RTN","LA7QRY1",31,0)
 Q
"RTN","LA7QRY1",32,0)
 ;
"RTN","LA7QRY1",33,0)
 ;
"RTN","LA7QRY1",34,0)
BUILDMSG ; Build HL7 message with result of query
"RTN","LA7QRY1",35,0)
 ;
"RTN","LA7QRY1",36,0)
 N HL,HLECH,HLFS,HLQ,LA,LA763,LA7ECH,LA7FS,LA7MSH,LA7NOMSG,LA7NTESN,LA7NVAF,LA7OBRSN,LA7OBXSN,LA7PIDSN,LA7ROOT,LA7X,X
"RTN","LA7QRY1",37,0)
 ;
"RTN","LA7QRY1",38,0)
 I $L($G(LA7HL7))'=5 S LA7HL7="|^\~&"
"RTN","LA7QRY1",39,0)
 S (HL("FS"),HLFS,LA7FS)=$E(LA7HL7),(HL("ECH"),HLECH,LA7ECH)=$E(LA7HL7,2,5)
"RTN","LA7QRY1",40,0)
 S (HLQ,HL("Q"))=""""""
"RTN","LA7QRY1",41,0)
 ; Set flag to not send HL7 message
"RTN","LA7QRY1",42,0)
 S LA7NOMSG=1
"RTN","LA7QRY1",43,0)
 ; Create dummy MSH to pass HL7 delimiters
"RTN","LA7QRY1",44,0)
 S LA7MSH(0)="MSH"_LA7FS_LA7ECH_LA7FS
"RTN","LA7QRY1",45,0)
 D FILESEG^LA7VHLU(GBL,.LA7MSH)
"RTN","LA7QRY1",46,0)
 ;
"RTN","LA7QRY1",47,0)
 F X="AUTO-INST","LRDFN","LRIDT","SUB","HUID","NLT","RUID","SITE" S LA(X)=""
"RTN","LA7QRY1",48,0)
 ;
"RTN","LA7QRY1",49,0)
 ; Take search results and put in HL7 message structure
"RTN","LA7QRY1",50,0)
 S LA7ROOT="^TMP(""LA7-QRY"",$J)",(LA7QUIT,LA7PIDSN)=0
"RTN","LA7QRY1",51,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7QUIT  D
"RTN","LA7QRY1",52,0)
 . I $QS(LA7ROOT,1)'="LA7-QRY"!($QS(LA7ROOT,2)'=$J) S LA7QUIT=1 Q
"RTN","LA7QRY1",53,0)
 . I LA("LRDFN")'=$QS(LA7ROOT,3) D PID S LA7OBRSN=0
"RTN","LA7QRY1",54,0)
 . I LA("LRIDT")'=$QS(LA7ROOT,4) D ORC,OBR
"RTN","LA7QRY1",55,0)
 . I LA("SUB")'=$QS(LA7ROOT,5) D ORC,OBR
"RTN","LA7QRY1",56,0)
 . I LA("NLT")'=$P($QS(LA7ROOT,6),"!") D ORC,OBR
"RTN","LA7QRY1",57,0)
 . D OBX
"RTN","LA7QRY1",58,0)
 ;
"RTN","LA7QRY1",59,0)
 Q
"RTN","LA7QRY1",60,0)
 ;
"RTN","LA7QRY1",61,0)
 ;
"RTN","LA7QRY1",62,0)
PID ; Build PID segment
"RTN","LA7QRY1",63,0)
 ;
"RTN","LA7QRY1",64,0)
 N LA7PID
"RTN","LA7QRY1",65,0)
 ;
"RTN","LA7QRY1",66,0)
 S (LA("LRDFN"),LRDFN)=$QS(LA7ROOT,3)
"RTN","LA7QRY1",67,0)
 S LRDPF=$P(^LR(LRDFN,0),"^",2),DFN=$P(^(0),"^",3)
"RTN","LA7QRY1",68,0)
 D DEM^LRX
"RTN","LA7QRY1",69,0)
 D PID^LA7VPID(LA("LRDFN"),"",.LA7PID,.LA7PIDSN,.HL)
"RTN","LA7QRY1",70,0)
 D FILESEG^LA7VHLU(GBL,.LA7PID)
"RTN","LA7QRY1",71,0)
 S (LA("LRIDT"),LA("SUB"))=""
"RTN","LA7QRY1",72,0)
 Q
"RTN","LA7QRY1",73,0)
 ;
"RTN","LA7QRY1",74,0)
 ;
"RTN","LA7QRY1",75,0)
ORC ; Build ORC segment
"RTN","LA7QRY1",76,0)
 ;
"RTN","LA7QRY1",77,0)
 N X
"RTN","LA7QRY1",78,0)
 ;
"RTN","LA7QRY1",79,0)
 S LA("LRIDT")=$QS(LA7ROOT,4),LA("SUB")=$QS(LA7ROOT,5)
"RTN","LA7QRY1",80,0)
 S LA763(0)=$G(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),0))
"RTN","LA7QRY1",81,0)
 S X=$G(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),"ORU"))
"RTN","LA7QRY1",82,0)
 S LA("HUID")=$P(X,"^"),LA("SITE")=$P(X,"^",2),LA("RUID")=$P(X,"^",4)
"RTN","LA7QRY1",83,0)
 I LA("HUID")="" S LA("HUID")=$P(LA763(0),"^",6)
"RTN","LA7QRY1",84,0)
 D NVAF^LA7VORU
"RTN","LA7QRY1",85,0)
 S LA7NTESN=0
"RTN","LA7QRY1",86,0)
 D ORC^LA7VORU
"RTN","LA7QRY1",87,0)
 S LA("NLT")=""
"RTN","LA7QRY1",88,0)
 ;
"RTN","LA7QRY1",89,0)
 Q
"RTN","LA7QRY1",90,0)
 ;
"RTN","LA7QRY1",91,0)
 ;
"RTN","LA7QRY1",92,0)
OBR ; Build OBR segment
"RTN","LA7QRY1",93,0)
 ;
"RTN","LA7QRY1",94,0)
 N LA764,LA7NLT
"RTN","LA7QRY1",95,0)
 ;
"RTN","LA7QRY1",96,0)
 S (LA("NLT"),LA7NLT)=$P($QS(LA7ROOT,6),"!"),(LA764,LA("ORD"))=""
"RTN","LA7QRY1",97,0)
 I $L(LA7NLT) D
"RTN","LA7QRY1",98,0)
 . S LA764=+$O(^LAM("E",LA7NLT,0))
"RTN","LA7QRY1",99,0)
 . I LA764 S LA("ORD")=$$GET1^DIQ(64,LA764_",",.01)
"RTN","LA7QRY1",100,0)
 I LA("SUB")="CH" D
"RTN","LA7QRY1",101,0)
 . D OBR^LA7VORU
"RTN","LA7QRY1",102,0)
 . D NTE^LA7VORU
"RTN","LA7QRY1",103,0)
 . S LA7OBXSN=0
"RTN","LA7QRY1",104,0)
 ;
"RTN","LA7QRY1",105,0)
 Q
"RTN","LA7QRY1",106,0)
 ;
"RTN","LA7QRY1",107,0)
 ;
"RTN","LA7QRY1",108,0)
OBX ; Build OBX segment
"RTN","LA7QRY1",109,0)
 ;
"RTN","LA7QRY1",110,0)
 N LA7DATA,LA7VT
"RTN","LA7QRY1",111,0)
 ;
"RTN","LA7QRY1",112,0)
 I LA("SUB")="MI" D MI^LA7VORU1 Q
"RTN","LA7QRY1",113,0)
 I "CYEMSP"[LA("SUB") D AP^LA7VORU2 Q
"RTN","LA7QRY1",114,0)
 ;
"RTN","LA7QRY1",115,0)
 S LA7VT=$QS(LA7ROOT,7)
"RTN","LA7QRY1",116,0)
 D OBX^LA7VOBX(LA("LRDFN"),LA("SUB"),LA("LRIDT"),LA7VT,.LA7DATA,.LA7OBXSN,LA7FS,LA7ECH)
"RTN","LA7QRY1",117,0)
 I '$D(LA7DATA) Q
"RTN","LA7QRY1",118,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7QRY1",119,0)
 ; Send any test interpretation from file #60
"RTN","LA7QRY1",120,0)
 D INTRP^LA7VORU
"RTN","LA7QRY1",121,0)
 ;
"RTN","LA7QRY1",122,0)
 Q
"RTN","LA7QRY2")
0^59^B19638288
"RTN","LA7QRY2",1,0)
LA7QRY2 ;DALOI/JMC - Lab HL7 Query Utility ;01/19/99  13:48
"RTN","LA7QRY2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7QRY2",3,0)
 ;
"RTN","LA7QRY2",4,0)
 Q
"RTN","LA7QRY2",5,0)
 ;
"RTN","LA7QRY2",6,0)
PATID ; Resolve patient id and establish patient environment
"RTN","LA7QRY2",7,0)
 ;
"RTN","LA7QRY2",8,0)
 N LA7X
"RTN","LA7QRY2",9,0)
 ;
"RTN","LA7QRY2",10,0)
 S (DFN,LRDFN)="",LA7PTYP=0
"RTN","LA7QRY2",11,0)
 ;
"RTN","LA7QRY2",12,0)
 ; SSN passed as patient identifier
"RTN","LA7QRY2",13,0)
 I LA7PTID?9N.1A D
"RTN","LA7QRY2",14,0)
 . S LA7PTYP=1
"RTN","LA7QRY2",15,0)
 . S LA7X=$O(^DPT("SSN",LA7PTID,0))
"RTN","LA7QRY2",16,0)
 . I LA7X>0 D SETDFN(LA7X)
"RTN","LA7QRY2",17,0)
 ;
"RTN","LA7QRY2",18,0)
 ; MPI/ICN (integration control number) passed as patient identifier
"RTN","LA7QRY2",19,0)
 I LA7PTID?10N1"V"6N D
"RTN","LA7QRY2",20,0)
 . S LA7PTYP=2
"RTN","LA7QRY2",21,0)
 . S LA7X=$$GETDFN^MPIF001($P(LA7PTID,"V"))
"RTN","LA7QRY2",22,0)
 . I LA7X>0 D SETDFN(LA7X)
"RTN","LA7QRY2",23,0)
 ;
"RTN","LA7QRY2",24,0)
 ; If no patient identified/no laboratory record - return exception message
"RTN","LA7QRY2",25,0)
 I 'LA7PTYP S LA7ERR(1)="Invalid patient identifier passed"
"RTN","LA7QRY2",26,0)
 I 'DFN S LA7ERR(2)="No patient found with requested identifier"
"RTN","LA7QRY2",27,0)
 I DFN,'LRDFN S LA7ERR(3)="No laboratory record for requested patient"
"RTN","LA7QRY2",28,0)
 I LRDFN,'$D(^LR(LRDFN)) S LA7ERR(4)="Database error - missing laboratory record for requested patient"
"RTN","LA7QRY2",29,0)
 Q
"RTN","LA7QRY2",30,0)
 ;
"RTN","LA7QRY2",31,0)
 ;
"RTN","LA7QRY2",32,0)
BCD ; Search by specimen collection date.
"RTN","LA7QRY2",33,0)
 ;
"RTN","LA7QRY2",34,0)
 N LA763,LA7QUIT
"RTN","LA7QRY2",35,0)
 ;
"RTN","LA7QRY2",36,0)
 S (LA7SDT(0),LA7EDT(0))=0
"RTN","LA7QRY2",37,0)
 I LA7SDT S LA7SDT(0)=9999999-LA7SDT
"RTN","LA7QRY2",38,0)
 I LA7EDT S LA7EDT(0)=9999999-LA7EDT
"RTN","LA7QRY2",39,0)
 ;
"RTN","LA7QRY2",40,0)
 F LRSS="CH","MI","SP" D
"RTN","LA7QRY2",41,0)
 . S (LA7QUIT,LRIDT)=0
"RTN","LA7QRY2",42,0)
 . I LA7EDT(0) S LRIDT=$O(^LR(LRDFN,LRSS,LA7EDT(0)),-1)
"RTN","LA7QRY2",43,0)
 . F  S LRIDT=$O(^LR(LRDFN,LRSS,LRIDT)) Q:LA7QUIT  D
"RTN","LA7QRY2",44,0)
 . . ; Quit if reached end of data or outside date criteria
"RTN","LA7QRY2",45,0)
 . . I 'LRIDT!(LRIDT>LA7SDT(0)) S LA7QUIT=1 Q
"RTN","LA7QRY2",46,0)
 . . D SEARCH
"RTN","LA7QRY2",47,0)
 ;
"RTN","LA7QRY2",48,0)
 Q
"RTN","LA7QRY2",49,0)
 ;
"RTN","LA7QRY2",50,0)
 ;
"RTN","LA7QRY2",51,0)
BRAD ; Search by results available date (completion date).
"RTN","LA7QRY2",52,0)
 ; Assumes cross-references still exist for dates in LRO(69) global.
"RTN","LA7QRY2",53,0)
 ; Collects specimen date/time values for a given LRDFN and completion date.
"RTN","LA7QRY2",54,0)
 ; Cross-reference is by date only, time stripped from start date.
"RTN","LA7QRY2",55,0)
 ; Uses cross-reference ^LRO(69,DT,1,"AN",'LOCATION',LRDFN,LRIDT)=""
"RTN","LA7QRY2",56,0)
 ;
"RTN","LA7QRY2",57,0)
 N LA763,LA7DT,LA7ROOT,LA7SRC,X
"RTN","LA7QRY2",58,0)
 ;
"RTN","LA7QRY2",59,0)
 ; Check if orders still exist Iin file #69 for search range
"RTN","LA7QRY2",60,0)
 S LA7SDT(1)=(LA7SDT\1)-.0000000001,LA7EDT(1)=(LA7EDT\1)+.24,LA7SRC=0
"RTN","LA7QRY2",61,0)
 S X=$O(^LRO(69,LA7SDT(1)))
"RTN","LA7QRY2",62,0)
 I X,X<LA7EDT(1) S LA7SRC=1
"RTN","LA7QRY2",63,0)
 ;
"RTN","LA7QRY2",64,0)
 ; Search "AN" cross-reference in file #69.
"RTN","LA7QRY2",65,0)
 I LA7SRC D
"RTN","LA7QRY2",66,0)
 . S LA7DT=LA7SDT(1)
"RTN","LA7QRY2",67,0)
 . F  S LA7DT=$O(^LRO(69,LA7DT)) Q:'LA7DT!(LA7DT>LA7EDT(1))  D
"RTN","LA7QRY2",68,0)
 . . S LA7ROOT="^LRO(69,LA7DT,1,""AN"")"
"RTN","LA7QRY2",69,0)
 . . F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""!($QS(LA7ROOT,2)'=LA7DT)!($QS(LA7ROOT,4)'="AN")  D
"RTN","LA7QRY2",70,0)
 . . . I $QS(LA7ROOT,6)'=LRDFN Q
"RTN","LA7QRY2",71,0)
 . . . S LRIDT=$QS(LA7ROOT,7)
"RTN","LA7QRY2",72,0)
 . . . F LRSS="CH","MI","SP" D SEARCH
"RTN","LA7QRY2",73,0)
 ;
"RTN","LA7QRY2",74,0)
 ; If no orders in #69 then do long search through file #63.
"RTN","LA7QRY2",75,0)
 I 'LA7SRC D
"RTN","LA7QRY2",76,0)
 . F LRSS="CH","MI","SP" D
"RTN","LA7QRY2",77,0)
 . . S LRIDT=0
"RTN","LA7QRY2",78,0)
 . . F  S LRIDT=$O(^LR(LRDFN,LRSS,LRIDT)) Q:'LRIDT  D
"RTN","LA7QRY2",79,0)
 . . . S LA763(0)=$G(^LR(LRDFN,LRSS,LRIDT,0))
"RTN","LA7QRY2",80,0)
 . . . I $P(LA763(0),"^",3)>LA7SDT(1),$P(LA763(0),"^",3)<LA7EDT(1) D SEARCH
"RTN","LA7QRY2",81,0)
 ;
"RTN","LA7QRY2",82,0)
 Q
"RTN","LA7QRY2",83,0)
 ;
"RTN","LA7QRY2",84,0)
 ;
"RTN","LA7QRY2",85,0)
SEARCH ; Search subscript for a specific collection date/time
"RTN","LA7QRY2",86,0)
 ;
"RTN","LA7QRY2",87,0)
 K LA763
"RTN","LA7QRY2",88,0)
 S LA763(0)=$G(^LR(LRDFN,LRSS,LRIDT,0))
"RTN","LA7QRY2",89,0)
 ;
"RTN","LA7QRY2",90,0)
 ; Only CH, MI, and BB subscripts store pointer to file #61 in 5th piece of zeroth node.
"RTN","LA7QRY2",91,0)
 ; Quit if specific specimen codes and they do not match
"RTN","LA7QRY2",92,0)
 I "CHMIBB"[LRSS S LA761=+$P(LA763(0),"^",5)
"RTN","LA7QRY2",93,0)
 E  S LA761=0
"RTN","LA7QRY2",94,0)
 I LA761,$D(^TMP("LA7-61",$J)),'$D(^TMP("LA7-61",$J,LA761)) Q
"RTN","LA7QRY2",95,0)
 ;
"RTN","LA7QRY2",96,0)
 ; --- Chemistry
"RTN","LA7QRY2",97,0)
 I LRSS="CH" D CHSS Q
"RTN","LA7QRY2",98,0)
 ; --- Microbiology
"RTN","LA7QRY2",99,0)
 I LRSS="MI" D MISS Q
"RTN","LA7QRY2",100,0)
 ; --- Surgical pathology
"RTN","LA7QRY2",101,0)
 I LRSS="SP" D APSS Q
"RTN","LA7QRY2",102,0)
 ; --- Cytology
"RTN","LA7QRY2",103,0)
 I LRSS="CY" D APSS Q
"RTN","LA7QRY2",104,0)
 ; --- Electron Micrscopsy
"RTN","LA7QRY2",105,0)
 I LRSS="EM" D APSS Q
"RTN","LA7QRY2",106,0)
 ; --- Autopsy
"RTN","LA7QRY2",107,0)
 I LRSS="AU" D APSS Q
"RTN","LA7QRY2",108,0)
 ; --- Blood Bank
"RTN","LA7QRY2",109,0)
 I LRSS="BB" D BBSS Q
"RTN","LA7QRY2",110,0)
 Q
"RTN","LA7QRY2",111,0)
 ;
"RTN","LA7QRY2",112,0)
 ;
"RTN","LA7QRY2",113,0)
CHSS ; Search "CH" datanames for matching codes
"RTN","LA7QRY2",114,0)
 ;
"RTN","LA7QRY2",115,0)
 N LA7X,LRSB
"RTN","LA7QRY2",116,0)
 ;
"RTN","LA7QRY2",117,0)
 S LRSB=1
"RTN","LA7QRY2",118,0)
 F  S LRSB=$O(^LR(LRDFN,LRSS,LRIDT,LRSB)) Q:'LRSB  D
"RTN","LA7QRY2",119,0)
 . S LA7X=$G(^LR(LRDFN,LRSS,LRIDT,LRSB))
"RTN","LA7QRY2",120,0)
 . S LA7CODE=$$DEFCODE^LA7VHLU5(LRSS,LRSB,$P(LA7X,"^",3),LA761)
"RTN","LA7QRY2",121,0)
 . D CHECK
"RTN","LA7QRY2",122,0)
 Q
"RTN","LA7QRY2",123,0)
 ;
"RTN","LA7QRY2",124,0)
 ;
"RTN","LA7QRY2",125,0)
MISS ; Search "MI" subscripts for matching codes
"RTN","LA7QRY2",126,0)
 ;
"RTN","LA7QRY2",127,0)
 N LA7ND,LRSB
"RTN","LA7QRY2",128,0)
 ;
"RTN","LA7QRY2",129,0)
 S LA7ND=0
"RTN","LA7QRY2",130,0)
 F LA7ND=1,5,8,11,16 I $D(^LR(LRDFN,LRSS,LRIDT,LA7ND)) D
"RTN","LA7QRY2",131,0)
 . S LRSB=$S(LA7ND=1:11,LA7ND=5:14,LA7ND=8:18,LA7ND=11:22,LA7ND=16:33,1:11)
"RTN","LA7QRY2",132,0)
 . S LA7CODE=$$DEFCODE^LA7VHLU5(LRSS,LRSB,"",LA761)
"RTN","LA7QRY2",133,0)
 . D CHECK
"RTN","LA7QRY2",134,0)
 Q
"RTN","LA7QRY2",135,0)
 ;
"RTN","LA7QRY2",136,0)
 ;
"RTN","LA7QRY2",137,0)
APSS ; Search AP subscripts for matching codes
"RTN","LA7QRY2",138,0)
 ; AP results are currently not coded - use defaults
"RTN","LA7QRY2",139,0)
 ;
"RTN","LA7QRY2",140,0)
 N LA7CODE,LRSB
"RTN","LA7QRY2",141,0)
 ;
"RTN","LA7QRY2",142,0)
 S LRSB=.012
"RTN","LA7QRY2",143,0)
 S LA7CODE=$$DEFCODE^LA7VHLU5(LRSS,LRSB,"","")
"RTN","LA7QRY2",144,0)
 D CHECK
"RTN","LA7QRY2",145,0)
 ;
"RTN","LA7QRY2",146,0)
 Q
"RTN","LA7QRY2",147,0)
 ;
"RTN","LA7QRY2",148,0)
 ;
"RTN","LA7QRY2",149,0)
BBSS ; Search BB subscript for matching codes
"RTN","LA7QRY2",150,0)
 ; *** This subscript currently not supported ***
"RTN","LA7QRY2",151,0)
 Q
"RTN","LA7QRY2",152,0)
 ;
"RTN","LA7QRY2",153,0)
 ;
"RTN","LA7QRY2",154,0)
CHECK ; Check NLT order/result and LOINC codes.
"RTN","LA7QRY2",155,0)
 ;
"RTN","LA7QRY2",156,0)
 N LA7QUIT
"RTN","LA7QRY2",157,0)
 ;
"RTN","LA7QRY2",158,0)
 ; If wildcard then store
"RTN","LA7QRY2",159,0)
 ; Otherwise check for specific NLT order/result and LOINC codes
"RTN","LA7QRY2",160,0)
 I LA7SC="*" D STORE Q
"RTN","LA7QRY2",161,0)
 S LA7QUIT=0
"RTN","LA7QRY2",162,0)
 F I=1:1:3 D  Q:LA7QUIT
"RTN","LA7QRY2",163,0)
 . ; If no test code then skip
"RTN","LA7QRY2",164,0)
 . I '$L($P(LA7CODE,"!",I)) Q
"RTN","LA7QRY2",165,0)
 . ; If test code does not match a search code then quit
"RTN","LA7QRY2",166,0)
 . I '$D(^TMP($S(I=3:"LA7-LN",1:"LA7-NLT"),$J,$P(LA7CODE,"!",I))) Q
"RTN","LA7QRY2",167,0)
 . D STORE S LA7QUIT=1
"RTN","LA7QRY2",168,0)
 ;
"RTN","LA7QRY2",169,0)
 Q
"RTN","LA7QRY2",170,0)
 ;
"RTN","LA7QRY2",171,0)
 ;
"RTN","LA7QRY2",172,0)
STORE ; Store entry for building in HL7 message
"RTN","LA7QRY2",173,0)
 ;
"RTN","LA7QRY2",174,0)
 S ^TMP("LA7-QRY",$J,LRDFN,LRIDT,LRSS,LA7CODE,LRSB)=""
"RTN","LA7QRY2",175,0)
 Q
"RTN","LA7QRY2",176,0)
 ;
"RTN","LA7QRY2",177,0)
 ;
"RTN","LA7QRY2",178,0)
SETDFN(LA7X) ; Setup DFN and other lab variables.
"RTN","LA7QRY2",179,0)
 ;
"RTN","LA7QRY2",180,0)
 S DFN=LA7X,LRDFN=$P($G(^DPT(DFN,"LR")),"^")
"RTN","LA7QRY2",181,0)
 Q
"RTN","LA7SBCR")
0^16^B1661487
"RTN","LA7SBCR",1,0)
LA7SBCR ;DALOI/JMC - Shipping Barcode Reader Utility ; 7 Feb 1997
"RTN","LA7SBCR",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46**;Sep 27, 1994
"RTN","LA7SBCR",3,0)
 Q
"RTN","LA7SBCR",4,0)
 ;
"RTN","LA7SBCR",5,0)
BAR(Y) ; Ask user if utilizing a barcode reader
"RTN","LA7SBCR",6,0)
 ; Returns -1 = user aborted
"RTN","LA7SBCR",7,0)
 ;          0 = No
"RTN","LA7SBCR",8,0)
 ;          1 = Yes
"RTN","LA7SBCR",9,0)
 ;
"RTN","LA7SBCR",10,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SBCR",11,0)
 S DIR(0)="Y0",DIR("A")="Are you using a barcode reader",DIR("B")="YES"
"RTN","LA7SBCR",12,0)
 D ^DIR
"RTN","LA7SBCR",13,0)
 I $G(DIRUT) Q -1
"RTN","LA7SBCR",14,0)
 Q Y
"RTN","LA7SBCR",15,0)
 ;
"RTN","LA7SBCR",16,0)
RD(LA7SDP,LA7CASE) ; Read input from barcode reader.
"RTN","LA7SBCR",17,0)
 ; Input
"RTN","LA7SBCR",18,0)
 ;   LA7SDP=array containing default prompt to display
"RTN","LA7SBCR",19,0)
 ;   LA7CASE=0 return scanned text as barcoded
"RTN","LA7SBCR",20,0)
 ;          =1 return scanned text in upper case.
"RTN","LA7SBCR",21,0)
 ;          =2 return scanned text in lower case.
"RTN","LA7SBCR",22,0)
 ;
"RTN","LA7SBCR",23,0)
 ; Returns
"RTN","LA7SBCR",24,0)
 ;        Y=1^barcode value.
"RTN","LA7SBCR",25,0)
 ;         =0 if user quits/timeouts
"RTN","LA7SBCR",26,0)
 ;         =-1 if invalid read
"RTN","LA7SBCR",27,0)
 ;
"RTN","LA7SBCR",28,0)
 N DIR,DIRUT,DTOUT,DUOUT,I,LA7Y,X,Y
"RTN","LA7SBCR",29,0)
 I $G(LA7SDP)="" S LA7SDP="Scan barcode"
"RTN","LA7SBCR",30,0)
 S LA7CASE=+$G(LA7CASE)
"RTN","LA7SBCR",31,0)
 S I=0
"RTN","LA7SBCR",32,0)
 F  S I=$O(LA7SDP(I)) Q:'I  S DIR("A",I)=LA7SDP(I)
"RTN","LA7SBCR",33,0)
 S DIR("A")=LA7SDP
"RTN","LA7SBCR",34,0)
 S DIR(0)="FUO^3:245"
"RTN","LA7SBCR",35,0)
 D ^DIR
"RTN","LA7SBCR",36,0)
 I $D(DIRUT) Q 0 ; User quit
"RTN","LA7SBCR",37,0)
 I Y="" Q -1 ; Invalid read
"RTN","LA7SBCR",38,0)
 S LA7Y=Y
"RTN","LA7SBCR",39,0)
 I LA7CASE=1 S LA7Y=$$UP^XLFSTR(LA7Y)
"RTN","LA7SBCR",40,0)
 I LA7CASE=2 S LA7Y=$$LOW^XLFSTR(LA7Y)
"RTN","LA7SBCR",41,0)
 Q "1^"_LA7Y
"RTN","LA7SBCR",42,0)
 ;
"RTN","LA7SBCR",43,0)
DT(X) ; Validate date/time
"RTN","LA7SBCR",44,0)
 N %DT,Y
"RTN","LA7SBCR",45,0)
 S %DT="ST" D ^%DT
"RTN","LA7SBCR",46,0)
 I Y<1 S Y=""
"RTN","LA7SBCR",47,0)
 Q Y
"RTN","LA7SBCR1")
0^17^B32099762
"RTN","LA7SBCR1",1,0)
LA7SBCR1 ;DALOI/JMC - Shipping Barcode Reader Utility ; 7 Feb 1997
"RTN","LA7SBCR1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46**;Sep 27, 1994
"RTN","LA7SBCR1",3,0)
 Q
"RTN","LA7SBCR1",4,0)
 ;
"RTN","LA7SBCR1",5,0)
PT(LA7,LA7PROM,LA7SCFG) ; Setup patient/ordering site info from barcode.
"RTN","LA7SBCR1",6,0)
 ; Input:
"RTN","LA7SBCR1",7,0)
 ;        LA7=array to return values
"RTN","LA7SBCR1",8,0)
 ;    LA7PROM=array of prompts to display to user
"RTN","LA7SBCR1",9,0)
 ;    LA7SCFG=array of shipping configuration info
"RTN","LA7SBCR1",10,0)
 ;
"RTN","LA7SBCR1",11,0)
 ; Returns array LA7()
"RTN","LA7SBCR1",12,0)
 ;  If successful DFN=ien of patient in #2, if DPF=2
"RTN","LA7SBCR1",13,0)
 ;                DOB=patient's date of birth
"RTN","LA7SBCR1",14,0)
 ;                DPF=source file (2, 67, or 537010)
"RTN","LA7SBCR1",15,0)
 ;                CDT=collection date/time
"RTN","LA7SBCR1",16,0)
 ;              ERROR=0
"RTN","LA7SBCR1",17,0)
 ;                PNM=patient name
"RTN","LA7SBCR1",18,0)
 ;              RSITE=sending site
"RTN","LA7SBCR1",19,0)
 ;               RUID=specimen unique identifier
"RTN","LA7SBCR1",20,0)
 ;                SEX=patient's sex
"RTN","LA7SBCR1",21,0)
 ;                SSN=patient's SSN
"RTN","LA7SBCR1",22,0)
 ;
"RTN","LA7SBCR1",23,0)
 ;   unsuccessful ERROR=>0
"RTN","LA7SBCR1",24,0)
 ;
"RTN","LA7SBCR1",25,0)
 N LA7BCS,LA7IEN,LA7X,LA7Y,LA7Z,Y
"RTN","LA7SBCR1",26,0)
 S LA7="",LA7BCS=0,LA7PNM=""
"RTN","LA7SBCR1",27,0)
 S LA7PROM=$G(LA7PROM,"Patient/Accession Info (PD)")
"RTN","LA7SBCR1",28,0)
 S Y=$$RD^LA7SBCR(.LA7PROM,1)
"RTN","LA7SBCR1",29,0)
 ;
"RTN","LA7SBCR1",30,0)
 I Y=0 D  Q
"RTN","LA7SBCR1",31,0)
 . S LA7("ERROR")="1^User timeout/abort"
"RTN","LA7SBCR1",32,0)
 ;
"RTN","LA7SBCR1",33,0)
 I Y<1 D  Q
"RTN","LA7SBCR1",34,0)
 . S LA7("ERROR")="2^Incorrect bar-code format"
"RTN","LA7SBCR1",35,0)
 ;
"RTN","LA7SBCR1",36,0)
 ; barcode info & longitudinal parity check
"RTN","LA7SBCR1",37,0)
 ; original style bar code
"RTN","LA7SBCR1",38,0)
 I $E(Y,1,9)="1^STX^PD^" D
"RTN","LA7SBCR1",39,0)
 . S LA7=$P(Y,"STX^PD^",2)
"RTN","LA7SBCR1",40,0)
 . S LA7=$P(LA7,"^ETX",1)
"RTN","LA7SBCR1",41,0)
 . S LA7("LPC")=$P(Y,"^ETX",2)
"RTN","LA7SBCR1",42,0)
 ; new style bar code
"RTN","LA7SBCR1",43,0)
 I $E(Y,1,5)="1^PD^" D
"RTN","LA7SBCR1",44,0)
 . S LA7=$P(Y,"^",3,6)
"RTN","LA7SBCR1",45,0)
 . S LA7("LPC")=$P(Y,"^",7)
"RTN","LA7SBCR1",46,0)
 . S LA7BCS=1
"RTN","LA7SBCR1",47,0)
 ;
"RTN","LA7SBCR1",48,0)
 I LA7="" D  Q
"RTN","LA7SBCR1",49,0)
 . S LA7("ERROR")="2^Incorrect bar-code format"
"RTN","LA7SBCR1",50,0)
 ;
"RTN","LA7SBCR1",51,0)
 I $G(LA7("LPC"))'=$G(LA7SCFG("LPC")) D  Q
"RTN","LA7SBCR1",52,0)
 . S LA7("ERROR")="9^Parity check does not match on (SM) and (PD) barcodes"
"RTN","LA7SBCR1",53,0)
 ;
"RTN","LA7SBCR1",54,0)
 S LA7("RSITE")=$P(LA7,"^",2)
"RTN","LA7SBCR1",55,0)
 I LA7("RSITE")'=$P(LA7SCFG("RSITE"),"^",3) D
"RTN","LA7SBCR1",56,0)
 . S LA7("ERROR")="31^Site in PD barcode does not match shipping configuration file"
"RTN","LA7SBCR1",57,0)
 ;
"RTN","LA7SBCR1",58,0)
 ; Remote specimen identifier
"RTN","LA7SBCR1",59,0)
 S LA7("RUID")=$P(LA7,"^",3)
"RTN","LA7SBCR1",60,0)
 ;
"RTN","LA7SBCR1",61,0)
 ; Specimen collection date, using either old or new style(LA7BCS=1) bar code
"RTN","LA7SBCR1",62,0)
 I 'LA7BCS,$P(LA7,"^",5) S LA7("CDT")=$$DT^LA7SBCR($P(LA7,"^",5))
"RTN","LA7SBCR1",63,0)
 I LA7BCS,$P(LA7,"^",4) S LA7("CDT")=$$DT^LA7SBCR($P(LA7,"^",4))
"RTN","LA7SBCR1",64,0)
 ;
"RTN","LA7SBCR1",65,0)
 ; Patient identifier
"RTN","LA7SBCR1",66,0)
 S LA7X=$P(LA7,"^") ; Patient's ID
"RTN","LA7SBCR1",67,0)
 ;
"RTN","LA7SBCR1",68,0)
 ; No SSN in first piece
"RTN","LA7SBCR1",69,0)
 I LA7X="" S LA7("ERROR")="3^No SSN in barcode" Q
"RTN","LA7SBCR1",70,0)
 ; Check for patient in file #2.
"RTN","LA7SBCR1",71,0)
 D DPT(.LA7,LA7X)
"RTN","LA7SBCR1",72,0)
 ; Else try Lab Referral file.
"RTN","LA7SBCR1",73,0)
 I $G(LA7("ERROR")) D LRT(.LA7,LA7X)
"RTN","LA7SBCR1",74,0)
 ; Else try LAB PENDING ORDERS file
"RTN","LA7SBCR1",75,0)
 I $G(LA7("ERROR")),$L(LA7SCFG("SMID")),$L(LA7("RUID")) D
"RTN","LA7SBCR1",76,0)
 . S LA7("SSN")=LA7X
"RTN","LA7SBCR1",77,0)
 . D LPO(.LA7,LA7SCFG("SMID"))
"RTN","LA7SBCR1",78,0)
 ;
"RTN","LA7SBCR1",79,0)
 ; Get additional info from PD1 bar code
"RTN","LA7SBCR1",80,0)
 I +$G(LA7("ERROR"))=4 D
"RTN","LA7SBCR1",81,0)
 . S LA7("SSN")=LA7X
"RTN","LA7SBCR1",82,0)
 . D PD1
"RTN","LA7SBCR1",83,0)
 Q
"RTN","LA7SBCR1",84,0)
 ;
"RTN","LA7SBCR1",85,0)
 ;
"RTN","LA7SBCR1",86,0)
DPT(LA7,LA7X) ; Lookup in Patient file.
"RTN","LA7SBCR1",87,0)
 ; Check for patient in file #2.
"RTN","LA7SBCR1",88,0)
 S LA7Y=$O(^DPT("SSN",LA7X,0))
"RTN","LA7SBCR1",89,0)
 ; SSN not found.
"RTN","LA7SBCR1",90,0)
 I 'LA7Y S LA7("ERROR")="4^Unsuccessful SSN lookup" Q
"RTN","LA7SBCR1",91,0)
 S LA7Y(0)=$G(^DPT(LA7Y,0))
"RTN","LA7SBCR1",92,0)
 ; SSN not found.
"RTN","LA7SBCR1",93,0)
 I LA7Y(0)="" S LA7("ERROR")="4^Unsuccessful SSN lookup" Q
"RTN","LA7SBCR1",94,0)
 ;
"RTN","LA7SBCR1",95,0)
 D DPTSET(.LA7,LA7Y)
"RTN","LA7SBCR1",96,0)
 Q
"RTN","LA7SBCR1",97,0)
 ;
"RTN","LA7SBCR1",98,0)
 ;
"RTN","LA7SBCR1",99,0)
LRT(LA7,LA7X) ; Lookup in Lab Referral file.
"RTN","LA7SBCR1",100,0)
 ; Clear error flag.
"RTN","LA7SBCR1",101,0)
 S LA7("ERROR")=""
"RTN","LA7SBCR1",102,0)
 S LA7Y=$O(^LRT(67,"C",LA7X,0))
"RTN","LA7SBCR1",103,0)
 ; SSN not found.
"RTN","LA7SBCR1",104,0)
 I 'LA7Y S LA7("ERROR")="4^Unsuccessful SSN lookup" Q
"RTN","LA7SBCR1",105,0)
 S LA7Y(0)=$G(^LRT(67,LA7Y,0))
"RTN","LA7SBCR1",106,0)
 ; SSN not found.
"RTN","LA7SBCR1",107,0)
 I LA7Y(0)="" S LA7("ERROR")="4^Unsuccessful SSN lookup" Q
"RTN","LA7SBCR1",108,0)
 D LRTSET(.LA7,LA7Y)
"RTN","LA7SBCR1",109,0)
 Q
"RTN","LA7SBCR1",110,0)
 ;
"RTN","LA7SBCR1",111,0)
 ;
"RTN","LA7SBCR1",112,0)
LPO(LA7,LA7SM) ; Lookup in LAB PENDING ORDERS file #69.6
"RTN","LA7SBCR1",113,0)
 ;
"RTN","LA7SBCR1",114,0)
 N LA7696,LA7RUID
"RTN","LA7SBCR1",115,0)
 S LA7RUID=LA7("RUID")
"RTN","LA7SBCR1",116,0)
 S LA7696=$O(^LRO(69.6,"AD",LA7SM,LA7RUID,0))
"RTN","LA7SBCR1",117,0)
 I 'LA7696 Q
"RTN","LA7SBCR1",118,0)
 D LPOSET(.LA7,LA7696)
"RTN","LA7SBCR1",119,0)
 Q
"RTN","LA7SBCR1",120,0)
 ;
"RTN","LA7SBCR1",121,0)
 ;
"RTN","LA7SBCR1",122,0)
DPTSET(LA7,LA7Y) ; Setup array from Patient file.
"RTN","LA7SBCR1",123,0)
 ;
"RTN","LA7SBCR1",124,0)
 S LA7Y(0)=$G(^DPT(LA7Y,0))
"RTN","LA7SBCR1",125,0)
 ; Zeroth node not found.
"RTN","LA7SBCR1",126,0)
 I LA7Y(0)="" S LA7("ERROR")="6^No zeroth node in file" Q
"RTN","LA7SBCR1",127,0)
 S LA7("DFN")=LA7Y
"RTN","LA7SBCR1",128,0)
 S LA7("DOB")=$P(LA7Y(0),"^",3)
"RTN","LA7SBCR1",129,0)
 ; Source file
"RTN","LA7SBCR1",130,0)
 S:LA7Y LA7("DPF")=2_U_"DPT("
"RTN","LA7SBCR1",131,0)
 S LA7("PNM")=$P(LA7Y(0),"^")
"RTN","LA7SBCR1",132,0)
 S LA7("RIEN")=+$G(^DPT(LA7Y,"LRT"))
"RTN","LA7SBCR1",133,0)
 S LA7("SEX")=$P(LA7Y(0),"^",2)
"RTN","LA7SBCR1",134,0)
 S LA7("SSN")=$P(LA7Y(0),"^",9)
"RTN","LA7SBCR1",135,0)
 Q
"RTN","LA7SBCR1",136,0)
 ;
"RTN","LA7SBCR1",137,0)
 ;
"RTN","LA7SBCR1",138,0)
LRTSET(LA7,LA7Y) ; Setup array from Lab Referral file.
"RTN","LA7SBCR1",139,0)
 S LA7Y(0)=$G(^LRT(67,LA7Y,0))
"RTN","LA7SBCR1",140,0)
 ; Zeroth node not found.
"RTN","LA7SBCR1",141,0)
 I LA7Y(0)="" S LA7("ERROR")="6^No zeroth node in file" Q
"RTN","LA7SBCR1",142,0)
 S LA7("DFN")=LA7Y
"RTN","LA7SBCR1",143,0)
 S LA7("DOB")=$P(LA7Y(0),"^",3)
"RTN","LA7SBCR1",144,0)
 ;
"RTN","LA7SBCR1",145,0)
 ; Source file
"RTN","LA7SBCR1",146,0)
 S:LA7Y LA7("DPF")=67_U_"LRT(67,"
"RTN","LA7SBCR1",147,0)
 ;
"RTN","LA7SBCR1",148,0)
 S LA7("PNM")=$P(LA7Y(0),"^")
"RTN","LA7SBCR1",149,0)
 S LA7("RIEN")=LA7Y
"RTN","LA7SBCR1",150,0)
 S LA7("SEX")=$P(LA7Y(0),"^",2)
"RTN","LA7SBCR1",151,0)
 S LA7("SSN")=$P(LA7Y(0),"^",9)
"RTN","LA7SBCR1",152,0)
 Q
"RTN","LA7SBCR1",153,0)
 ;
"RTN","LA7SBCR1",154,0)
 ;
"RTN","LA7SBCR1",155,0)
LPOSET(LA7,LA7Y) ; Setup array from LAB PENDING ORDERS file #69.6
"RTN","LA7SBCR1",156,0)
 ;
"RTN","LA7SBCR1",157,0)
 S LA7Y(0)=$G(^LRO(69.6,LA7Y,0))
"RTN","LA7SBCR1",158,0)
 ; Zeroth node not found.
"RTN","LA7SBCR1",159,0)
 I LA7Y(0)="" D  Q
"RTN","LA7SBCR1",160,0)
 . S LA7("ERROR")="6^No zeroth node in file"
"RTN","LA7SBCR1",161,0)
 ; Patient identifiers don't match
"RTN","LA7SBCR1",162,0)
 I LA7("SSN")'=$P(LA7Y(0),U,9) Q
"RTN","LA7SBCR1",163,0)
 ;
"RTN","LA7SBCR1",164,0)
 S LA7("PNM")=$P(LA7Y(0),U,1)
"RTN","LA7SBCR1",165,0)
 S LA7("DOB")=$P(LA7Y(0),U,3)
"RTN","LA7SBCR1",166,0)
 S LA7("SEX")=$P(LA7Y(0),U,2)
"RTN","LA7SBCR1",167,0)
 S LA7("DPF")="67^LRT(67,"
"RTN","LA7SBCR1",168,0)
 S LA7("ERROR")=""
"RTN","LA7SBCR1",169,0)
 Q
"RTN","LA7SBCR1",170,0)
 ;
"RTN","LA7SBCR1",171,0)
 ;
"RTN","LA7SBCR1",172,0)
PD1 ; Read PD1 bar code information
"RTN","LA7SBCR1",173,0)
 ;
"RTN","LA7SBCR1",174,0)
 N LA7PROM
"RTN","LA7SBCR1",175,0)
 ;
"RTN","LA7SBCR1",176,0)
 S LA7PROM="Scan Patient Name Barcode (PD1)"
"RTN","LA7SBCR1",177,0)
 S LA7PROM(1)="Patient Demographics not found"
"RTN","LA7SBCR1",178,0)
 S LA7("ERROR")="",LA7Z=""
"RTN","LA7SBCR1",179,0)
 S Y=$$RD^LA7SBCR(.LA7PROM,1)
"RTN","LA7SBCR1",180,0)
 I Y<1 D  Q
"RTN","LA7SBCR1",181,0)
 . S LA7("ERROR")="2^Incorrect bar-code format"
"RTN","LA7SBCR1",182,0)
 ;
"RTN","LA7SBCR1",183,0)
 ; barcode info & longitudinal parity check
"RTN","LA7SBCR1",184,0)
 ; original style bar code
"RTN","LA7SBCR1",185,0)
 I $E(Y,1,10)="1^STX^PD1^" D
"RTN","LA7SBCR1",186,0)
 . S LA7Z=$P(Y,"STX^PD1^",2)
"RTN","LA7SBCR1",187,0)
 . S LA7Z=$P(LA7Z,"^ETX")
"RTN","LA7SBCR1",188,0)
 . S LA7Z("LPC")=$P(Y,"^ETX",2)
"RTN","LA7SBCR1",189,0)
 ; new style bar code
"RTN","LA7SBCR1",190,0)
 I $E(Y,1,6)="1^PD1^" D
"RTN","LA7SBCR1",191,0)
 . S LA7Z=$P(Y,"^",3,6)
"RTN","LA7SBCR1",192,0)
 . S LA7Z("LPC")=$P(Y,"^",7)
"RTN","LA7SBCR1",193,0)
 ;
"RTN","LA7SBCR1",194,0)
 I LA7Z="" D  Q
"RTN","LA7SBCR1",195,0)
 . S LA7("ERROR")="2^Incorrect bar-code format"
"RTN","LA7SBCR1",196,0)
 ;
"RTN","LA7SBCR1",197,0)
 I $G(LA7Z("LPC"))'=$G(LA7SCFG("LPC")) D  Q
"RTN","LA7SBCR1",198,0)
 . S LA7("ERROR")="10^Parity check does not match on (SM) and (PD1) barcodes"
"RTN","LA7SBCR1",199,0)
 ;
"RTN","LA7SBCR1",200,0)
 ; Name not found.
"RTN","LA7SBCR1",201,0)
 I $L($P(LA7Z,U,2))<2 D  Q
"RTN","LA7SBCR1",202,0)
 . S LA7("ERROR")="21^Unsuccessful name scan"
"RTN","LA7SBCR1",203,0)
 ;
"RTN","LA7SBCR1",204,0)
 ; wrong patient scanned not found.
"RTN","LA7SBCR1",205,0)
 I $P(LA7Z,U)'=LA7("SSN") D  Q
"RTN","LA7SBCR1",206,0)
 . S LA7("ERROR")="22^SSN does not match PD barcode"
"RTN","LA7SBCR1",207,0)
 ;
"RTN","LA7SBCR1",208,0)
 ; Wrong DOB format.
"RTN","LA7SBCR1",209,0)
 I $P(LA7Z,U,3)'?7N D  Q
"RTN","LA7SBCR1",210,0)
 . S LA7("ERROR")="23^Incorrect DOB"
"RTN","LA7SBCR1",211,0)
 ;
"RTN","LA7SBCR1",212,0)
 S LA7("PNM")=$P(LA7Z,U,2)
"RTN","LA7SBCR1",213,0)
 S LA7("DOB")=$P(LA7Z,U,3)
"RTN","LA7SBCR1",214,0)
 S LA7("SEX")=$P(LA7Z,U,4)
"RTN","LA7SBCR1",215,0)
 S LA7("DPF")="67^LRT(67,"
"RTN","LA7SBCR1",216,0)
 S LA7("ERROR")=""
"RTN","LA7SBCR1",217,0)
 Q
"RTN","LA7SBCR2")
0^18^B11539409
"RTN","LA7SBCR2",1,0)
LA7SBCR2 ;DALOI/JMC - Shipping Barcode Reader Utility ; 7 Feb 1997
"RTN","LA7SBCR2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46**;Sep 27, 1994
"RTN","LA7SBCR2",3,0)
 ;
"RTN","LA7SBCR2",4,0)
 Q
"RTN","LA7SBCR2",5,0)
 ;
"RTN","LA7SBCR2",6,0)
SITE(LA7,LA7PROM,LA7BAR) ; Setup remote site info.
"RTN","LA7SBCR2",7,0)
 ; Input:
"RTN","LA7SBCR2",8,0)
 ;                  LA7=array to return values
"RTN","LA7SBCR2",9,0)
 ;              LA7PROM=prompt to display to user
"RTN","LA7SBCR2",10,0)
 ;               LA7BAR=0/1 using barcode reader
"RTN","LA7SBCR2",11,0)
 ; Screen: Second piece of bar-code must = SITE
"RTN","LA7SBCR2",12,0)
 ; Returns array LA7()
"RTN","LA7SBCR2",13,0)
 ;
"RTN","LA7SBCR2",14,0)
 ;  If successful ERROR=0
"RTN","LA7SBCR2",15,0)
 ;               IDTYPE=source of UID
"RTN","LA7SBCR2",16,0)
 ;                  LPC=longitudinal parity check of SM barcode info
"RTN","LA7SBCR2",17,0)
 ;               RPSITE=primary sending site ien^name^station number
"RTN","LA7SBCR2",18,0)
 ;                RSITE=sending site ien^name^station number
"RTN","LA7SBCR2",19,0)
 ;                 SCFG=pointer to shipping configuration (file #62.9)^name
"RTN","LA7SBCR2",20,0)
 ;                  SDT=Shipping date/time
"RTN","LA7SBCR2",21,0)
 ;                 SMID=shipping manifest id
"RTN","LA7SBCR2",22,0)
 ;           
"RTN","LA7SBCR2",23,0)
 ;   unsuccessful ERROR=>0^error message
"RTN","LA7SBCR2",24,0)
 ;
"RTN","LA7SBCR2",25,0)
 N LA7X,X,Y
"RTN","LA7SBCR2",26,0)
 ; Initialize array.
"RTN","LA7SBCR2",27,0)
 F Y="ERROR","IDTYPE","LPC","RPSITE","RSITE","SCFG","SDT","SMID" S LA7(Y)=""
"RTN","LA7SBCR2",28,0)
 S LA7PROM=$G(LA7PROM,"Site")
"RTN","LA7SBCR2",29,0)
 I LA7BAR D BAR
"RTN","LA7SBCR2",30,0)
 ;
"RTN","LA7SBCR2",31,0)
 I 'LA7BAR D
"RTN","LA7SBCR2",32,0)
 . N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SBCR2",33,0)
 . S DIR(0)="PO^62.9:EM",DIR("A")="Select Shipping Configuration"
"RTN","LA7SBCR2",34,0)
 . S DIR("S")="I $P(^LAHM(62.9,Y,0),U,3)=DUZ(2),$P(^LAHM(62.9,Y,0),U,4)"
"RTN","LA7SBCR2",35,0)
 . D ^DIR
"RTN","LA7SBCR2",36,0)
 . I Y<1 S LA7("ERROR")=1 Q
"RTN","LA7SBCR2",37,0)
 . S LA7("SCFG")=Y
"RTN","LA7SBCR2",38,0)
 ;
"RTN","LA7SBCR2",39,0)
 I 'LA7("ERROR") D
"RTN","LA7SBCR2",40,0)
 . I LA7("SCFG") D GETSITE Q
"RTN","LA7SBCR2",41,0)
 . I 'LA7("SCFG") S LA7("ERROR")=3 Q
"RTN","LA7SBCR2",42,0)
 ;
"RTN","LA7SBCR2",43,0)
 I LA7("ERROR") D
"RTN","LA7SBCR2",44,0)
 . S LA7("ERROR")=LA7("ERROR")_"^"_$P($T(ERROR+LA7("ERROR")),";;",2)
"RTN","LA7SBCR2",45,0)
 ;
"RTN","LA7SBCR2",46,0)
 Q
"RTN","LA7SBCR2",47,0)
 ;
"RTN","LA7SBCR2",48,0)
 ;
"RTN","LA7SBCR2",49,0)
GETSITE ; Retrieve site info from institution file for this shipping configuration.
"RTN","LA7SBCR2",50,0)
 ; Set ID type from shipping configuration.
"RTN","LA7SBCR2",51,0)
 N LRX,LRY,X,Y
"RTN","LA7SBCR2",52,0)
 S Y(0)=$G(^LAHM(62.9,+LA7("SCFG"),0))
"RTN","LA7SBCR2",53,0)
 S LA7("IDTYPE")=$P(Y(0),"^",5)
"RTN","LA7SBCR2",54,0)
 ;
"RTN","LA7SBCR2",55,0)
 ; *** Remove line when other id types supported. ***
"RTN","LA7SBCR2",56,0)
 I LA7("IDTYPE")>1 S LA7("ERROR")=4
"RTN","LA7SBCR2",57,0)
 ;
"RTN","LA7SBCR2",58,0)
 S LRX=$P(Y(0),"^",2)
"RTN","LA7SBCR2",59,0)
 S LRY=$$GET1^DIQ(4,LRX_",",.01)
"RTN","LA7SBCR2",60,0)
 I LRX,$L(LRY) D
"RTN","LA7SBCR2",61,0)
 . S LRY(99)=$$GET1^DIQ(4,LRX_",",99)
"RTN","LA7SBCR2",62,0)
 . S LA7("RSITE")=LRX_"^"_LRY_"^"_LRY(99)
"RTN","LA7SBCR2",63,0)
 E  S LA7("ERROR")=5
"RTN","LA7SBCR2",64,0)
 ;
"RTN","LA7SBCR2",65,0)
 S LRX=$P(Y(0),"^",6)
"RTN","LA7SBCR2",66,0)
 S LRY=$$GET1^DIQ(4,LRX_",",.01)
"RTN","LA7SBCR2",67,0)
 I LRX,$L(LRY) D
"RTN","LA7SBCR2",68,0)
 . S LRY(99)=$$GET1^DIQ(4,LRX_",",99)
"RTN","LA7SBCR2",69,0)
 . S LA7("RPSITE")=LRX_"^"_LRY_"^"_LRY(99)
"RTN","LA7SBCR2",70,0)
 E  S LA7("ERROR")=5
"RTN","LA7SBCR2",71,0)
 Q
"RTN","LA7SBCR2",72,0)
 ;
"RTN","LA7SBCR2",73,0)
 ;
"RTN","LA7SBCR2",74,0)
BAR ; Read SM bar code
"RTN","LA7SBCR2",75,0)
 ;
"RTN","LA7SBCR2",76,0)
 N LA7BCS,Y
"RTN","LA7SBCR2",77,0)
 ;
"RTN","LA7SBCR2",78,0)
 S Y=$$RD^LA7SBCR(.LA7PROM,1),LA7=""
"RTN","LA7SBCR2",79,0)
 I Y=0 S LA7("ERROR")=1 Q
"RTN","LA7SBCR2",80,0)
 I Y<1 S LA7("ERROR")=2 Q
"RTN","LA7SBCR2",81,0)
 ;
"RTN","LA7SBCR2",82,0)
 ; barcode info & longitudinal parity check
"RTN","LA7SBCR2",83,0)
 ; original bar code style
"RTN","LA7SBCR2",84,0)
 I $E(Y,1,11)="1^STX^SITE^" D
"RTN","LA7SBCR2",85,0)
 . S LA7=$P(Y,"STX^SITE^",2)
"RTN","LA7SBCR2",86,0)
 . S LA7=$P(LA7,"^ETX",1)
"RTN","LA7SBCR2",87,0)
 . S LA7("LPC")=$P(Y,"^ETX",2)
"RTN","LA7SBCR2",88,0)
 ; new bar code style
"RTN","LA7SBCR2",89,0)
 I $E(Y,1,7)="1^SITE^" D
"RTN","LA7SBCR2",90,0)
 . S LA7=$P(Y,"^",3,5)
"RTN","LA7SBCR2",91,0)
 . S LA7("LPC")=$P(Y,"^",6)
"RTN","LA7SBCR2",92,0)
 . S LA7BCS=1
"RTN","LA7SBCR2",93,0)
 ;
"RTN","LA7SBCR2",94,0)
 I LA7="" S LA7("ERROR")=2 Q
"RTN","LA7SBCR2",95,0)
 ;
"RTN","LA7SBCR2",96,0)
 I $L($P(LA7,"^")) D
"RTN","LA7SBCR2",97,0)
 . N X,Y,Z
"RTN","LA7SBCR2",98,0)
 . S Z=$$FIND1^DIC(4,"","OMX",$P(LA7,"^"))
"RTN","LA7SBCR2",99,0)
 . I Z="" S LA7("ERROR")=5 Q
"RTN","LA7SBCR2",100,0)
 . S (X,Y)=0
"RTN","LA7SBCR2",101,0)
 . F  S X=$O(^LAHM(62.9,"C",Z,X)) Q:'X  D  Q:Y
"RTN","LA7SBCR2",102,0)
 . . S X(0)=$G(^LAHM(62.9,X,0))
"RTN","LA7SBCR2",103,0)
 . . I $P(X(0),"^",3)=DUZ(2),$P(X(0),"^",4) S LA7("SCFG")=X_"^"_$P(X(0),"^"),Y=1
"RTN","LA7SBCR2",104,0)
 ;
"RTN","LA7SBCR2",105,0)
 ; shipping date/time
"RTN","LA7SBCR2",106,0)
 I $P(LA7,"^",2) S LA7("SDT")=$$DT^LA7SBCR($P(LA7,"^",2))
"RTN","LA7SBCR2",107,0)
 ;
"RTN","LA7SBCR2",108,0)
 ; shipping manifest id
"RTN","LA7SBCR2",109,0)
 I $L($P(LA7,"^",3)) S LA7("SMID")=$P(LA7,"^",3)
"RTN","LA7SBCR2",110,0)
 ;
"RTN","LA7SBCR2",111,0)
 Q
"RTN","LA7SBCR2",112,0)
 ;
"RTN","LA7SBCR2",113,0)
 ;
"RTN","LA7SBCR2",114,0)
ERROR ;; Code/Text of error messages
"RTN","LA7SBCR2",115,0)
1 ;;User timeout/abort;;
"RTN","LA7SBCR2",116,0)
2 ;;Incorrect barcode format;;
"RTN","LA7SBCR2",117,0)
3 ;;No Shipping Configuration identified in file #62.9;;
"RTN","LA7SBCR2",118,0)
4 ;;Sender's Specimen ID source not presently supported;;
"RTN","LA7SBCR2",119,0)
5 ;;No entry in INSTITUTION file #4;;
"RTN","LA7SCE")
0^11^B45378724
"RTN","LA7SCE",1,0)
LA7SCE ;DALOI/JMC - Shipping Configuration Utility ;5/5/97  14:44
"RTN","LA7SCE",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46**;Sep 27, 1994
"RTN","LA7SCE",3,0)
 Q
"RTN","LA7SCE",4,0)
 ;
"RTN","LA7SCE",5,0)
SCFE ; Edit file #62.9, Shipping Configuration.
"RTN","LA7SCE",6,0)
 ;
"RTN","LA7SCE",7,0)
 N DA,DIE,DIC,DIR,DLAYGO,DIRUT,DR,DTOUT,DIROUT,X,Y
"RTN","LA7SCE",8,0)
 N LA7CHECK,LA7COPY,LA7SCFG,LA7SCFR,LA7TYPE,LA7VAF
"RTN","LA7SCE",9,0)
 ;
"RTN","LA7SCE",10,0)
 S DIC="^LAHM(62.9,",DIC(0)="AELMQZ",DIC("A")="Select SHIPPING CONFIGURATION: "
"RTN","LA7SCE",11,0)
 S DIC("DR")=".02;.03"
"RTN","LA7SCE",12,0)
 S DLAYGO=62.9
"RTN","LA7SCE",13,0)
 D ^DIC
"RTN","LA7SCE",14,0)
 I Y<1 Q
"RTN","LA7SCE",15,0)
 ;
"RTN","LA7SCE",16,0)
 S LA7SCFG=+Y,LA7SCFG(0)=Y(0)
"RTN","LA7SCE",17,0)
 ;
"RTN","LA7SCE",18,0)
 L +^LAHM(62.9,LA7SCFG):5
"RTN","LA7SCE",19,0)
 I '$T D  Q
"RTN","LA7SCE",20,0)
 . D EN^DDIOL("Unable to obtain lock on entry "_$P(LA7SCFG(0),"^"),"","!?3")
"RTN","LA7SCE",21,0)
 ;
"RTN","LA7SCE",22,0)
 S DIR(0)="SO^1:Collecting facility;2:Host facility",DIR("A")="Are you editing this entry as the"
"RTN","LA7SCE",23,0)
 S DIR("?",1)="Is this entry used by the Collecting facility to ship specimens,"
"RTN","LA7SCE",24,0)
 S DIR("?",2)="or by the Host facility to accept a shipment."
"RTN","LA7SCE",25,0)
 S DIR("?")="This determines which fields are edited in the file."
"RTN","LA7SCE",26,0)
 D ^DIR
"RTN","LA7SCE",27,0)
 I $D(DIRUT) D UNL629 Q
"RTN","LA7SCE",28,0)
 S LA7TYPE=+Y
"RTN","LA7SCE",29,0)
 ;
"RTN","LA7SCE",30,0)
 ; Determine if other facility is non-VA.
"RTN","LA7SCE",31,0)
 ; When acting as collecting facility is host non-VA
"RTN","LA7SCE",32,0)
 ; When acting as host is collecting facility non-VA
"RTN","LA7SCE",33,0)
 S LA7VAF=""
"RTN","LA7SCE",34,0)
 I $P(LA7SCFG(0),"^",2),$P(LA7SCFG(0),"^",3) S LA7VAF=$$GET1^DIQ(4,$S(LA7TYPE=1:$P(LA7SCFG(0),"^",3),1:$P(LA7SCFG(0),"^",2))_",","AGENCY CODE","I")
"RTN","LA7SCE",35,0)
 I LA7VAF="" D  Q
"RTN","LA7SCE",36,0)
 . N LA7MSG
"RTN","LA7SCE",37,0)
 . S LA7MSG="Unable to proceed - institution "
"RTN","LA7SCE",38,0)
 . S LA7MSG=LA7MSG_$$GET1^DIQ(4,$S(LA7TYPE=1:$P(LA7SCFG(0),"^",3),1:$P(LA7SCFG(0),"^",2))_",",.01)
"RTN","LA7SCE",39,0)
 . S LA7MSG=LA7MSG_" missing AGENCY CODE field"
"RTN","LA7SCE",40,0)
 . D EN^DDIOL(LA7MSG,"","!!?3")
"RTN","LA7SCE",41,0)
 . D UNL629
"RTN","LA7SCE",42,0)
 ;
"RTN","LA7SCE",43,0)
 ; If acting as host ask if user wants to copy test config from another entry.
"RTN","LA7SCE",44,0)
 I LA7TYPE=2 D
"RTN","LA7SCE",45,0)
 . N DIC,Y
"RTN","LA7SCE",46,0)
 . S LA7COPY=$$ASKCOPY
"RTN","LA7SCE",47,0)
 . I LA7COPY<1 Q
"RTN","LA7SCE",48,0)
 . S LA7CHECK=$$CHECK(LA7SCFG)
"RTN","LA7SCE",49,0)
 . I LA7CHECK<1 S LA7COPY=LA7CHECK Q
"RTN","LA7SCE",50,0)
 . I LA7COPY<1 Q
"RTN","LA7SCE",51,0)
 . I LA7COPY=1 D  Q
"RTN","LA7SCE",52,0)
 . . S DIC="^LAHM(62.9,",DIC(0)="AEMQZ",DIC("A")="Select SHIPPING CONFIGURATION to COPY FROM: ",DIC("S")="I Y'=LA7SCFG"
"RTN","LA7SCE",53,0)
 . . D ^DIC K DIC("S")
"RTN","LA7SCE",54,0)
 . . I Y<1 Q
"RTN","LA7SCE",55,0)
 . . S LA7SCFR=+Y,LA7SCFR(0)=Y(0)
"RTN","LA7SCE",56,0)
 . . D CLRSCT(.LA7SCFG)
"RTN","LA7SCE",57,0)
 . . D COPYSC(.LA7SCFR,.LA7SCFG)
"RTN","LA7SCE",58,0)
 . I LA7COPY=2 D  Q
"RTN","LA7SCE",59,0)
 . . D CLRSCT(.LA7SCFG)
"RTN","LA7SCE",60,0)
 . . D COPY60(.LA7SCFG)
"RTN","LA7SCE",61,0)
 I LA7TYPE=2,LA7COPY<0 D UNL629 Q
"RTN","LA7SCE",62,0)
 ;
"RTN","LA7SCE",63,0)
 ; Set up DR string when acting as collecting facility
"RTN","LA7SCE",64,0)
 I LA7TYPE=1 D
"RTN","LA7SCE",65,0)
 . S DR=".01;.02;.06;.03;.031;"_$S(LA7VAF'="V":".11;.12;.14;",1:"")_".04;.07;.08;.09;.1;.13;60"
"RTN","LA7SCE",66,0)
 . S DR(2,62.9001)=".01;.02;.025;.03;.04;.05;.06;.07;1.1;1.15;1.16;1.2;1.25;1.26;2.1;2.15;2.16;2.2;2.25;2.26;2.3;2.35;2.36"
"RTN","LA7SCE",67,0)
 ;
"RTN","LA7SCE",68,0)
 ; Set up DR string when acting as host facility
"RTN","LA7SCE",69,0)
 I LA7TYPE=2 D
"RTN","LA7SCE",70,0)
 . S DR=".01;.02;.06;.03;.031;"_$S(LA7VAF'="V":".11;.14;.15;",1:"")_".04;.05;60"
"RTN","LA7SCE",71,0)
 . S DR(2,62.9001)=".01;.04;.09"
"RTN","LA7SCE",72,0)
 ;
"RTN","LA7SCE",73,0)
 ; Determine if non-VA test codes/specimen fields should be asked
"RTN","LA7SCE",74,0)
 I LA7VAF'="V" D
"RTN","LA7SCE",75,0)
 . S DR(2,62.9001)=DR(2,62.9001)_";I $P(^LAHM(62.9,LA7SCFG,0),U,15)'=1 S Y=""@98"";5.1;5.2;@98"
"RTN","LA7SCE",76,0)
 . I LA7TYPE=2 S DR(2,62.9001)=DR(2,62.9001)_";I $P(^LAHM(62.9,LA7SCFG,0),U,16)'=1 S Y=""@99"";5.3;5.4;@99"
"RTN","LA7SCE",77,0)
 ;
"RTN","LA7SCE",78,0)
 S DA=LA7SCFG,DIE="^LAHM(62.9,"
"RTN","LA7SCE",79,0)
 D ^DIE,UNL629
"RTN","LA7SCE",80,0)
 Q
"RTN","LA7SCE",81,0)
 ;
"RTN","LA7SCE",82,0)
 ;
"RTN","LA7SCE",83,0)
 ; Unlock entry in 62.9
"RTN","LA7SCE",84,0)
UNL629 L -^LAHM(62.9,LA7SCFG)
"RTN","LA7SCE",85,0)
 ;
"RTN","LA7SCE",86,0)
 Q
"RTN","LA7SCE",87,0)
 ;
"RTN","LA7SCE",88,0)
 ;
"RTN","LA7SCE",89,0)
SCTE ; Edit file #62.91, Shipping Container.
"RTN","LA7SCE",90,0)
 N DA,DIE,DIC,DLAYGO,DR,X,Y
"RTN","LA7SCE",91,0)
 S DIC="^LAHM(62.91,",DIC(0)="AELMQZ",DIC("A")="Select SHIPPING CONTAINER: ",DLAYGO=62.91
"RTN","LA7SCE",92,0)
 D ^DIC
"RTN","LA7SCE",93,0)
 I Y<1 Q
"RTN","LA7SCE",94,0)
 S DA=+Y,DIE=DIC,DR=".01;.02"
"RTN","LA7SCE",95,0)
 D ^DIE
"RTN","LA7SCE",96,0)
 Q
"RTN","LA7SCE",97,0)
 ;
"RTN","LA7SCE",98,0)
 ;
"RTN","LA7SCE",99,0)
SCME ; Edit file #62.92, Shipping Method.
"RTN","LA7SCE",100,0)
 N DA,DIE,DIC,DLAYGO,DR,X,Y
"RTN","LA7SCE",101,0)
 S DIC="^LAHM(62.92,",DIC(0)="AELMQZ",DIC("A")="Select SHIPPING METHOD: ",DLAYGO=62.92
"RTN","LA7SCE",102,0)
 D ^DIC
"RTN","LA7SCE",103,0)
 I Y<1 Q
"RTN","LA7SCE",104,0)
 S DA=+Y,DIE=DIC,DR=".01;.02"
"RTN","LA7SCE",105,0)
 D ^DIE
"RTN","LA7SCE",106,0)
 Q
"RTN","LA7SCE",107,0)
 ;
"RTN","LA7SCE",108,0)
 ;
"RTN","LA7SCE",109,0)
SCDE ; Edit file #62.93, Shipping Condition.
"RTN","LA7SCE",110,0)
 N DA,DIE,DIC,DLAYGO,DR,X,Y
"RTN","LA7SCE",111,0)
 S DIC="^LAHM(62.93,",DIC(0)="AELMQZ",DIC("A")="Select SHIPPING CONDITION: ",DLAYGO=62.93
"RTN","LA7SCE",112,0)
 D ^DIC
"RTN","LA7SCE",113,0)
 I Y<1 Q
"RTN","LA7SCE",114,0)
 S DA=+Y,DIE=DIC,DR=".01;.02"
"RTN","LA7SCE",115,0)
 D ^DIE
"RTN","LA7SCE",116,0)
 Q
"RTN","LA7SCE",117,0)
 ;
"RTN","LA7SCE",118,0)
 ;
"RTN","LA7SCE",119,0)
ASKCOPY() ; Ask if user want to copy tests from file #60 or another configuration in file #62.9 LAB SHIPPING CONFIGURATION
"RTN","LA7SCE",120,0)
 ;  Returns LA7COPY = -1 user quit/aborted
"RTN","LA7SCE",121,0)
 ;                  = 0 do not copy
"RTN","LA7SCE",122,0)
 ;                  = 1 use file #60
"RTN","LA7SCE",123,0)
 ;                  = 2 use another entry in #62.49
"RTN","LA7SCE",124,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SCE",125,0)
 S DIR(0)="SMO^0:Do NOT copy;1:Another Shipping Configuration;2:Test Catalog - LABORATORY TEST File #60"
"RTN","LA7SCE",126,0)
 S DIR("A")="Copy a test profile from",DIR("B")="Do NOT copy"
"RTN","LA7SCE",127,0)
 S DIR("?",1)="If you want to duplicate a shipping configuration using another configuration"
"RTN","LA7SCE",128,0)
 S DIR("?",2)="or build from the tests marked as catalog tests in the LABORATORY TEST file."
"RTN","LA7SCE",129,0)
 S DIR("?")="Select the appropiate option."
"RTN","LA7SCE",130,0)
 D ^DIR
"RTN","LA7SCE",131,0)
 I $D(DIRUT) S Y=-1
"RTN","LA7SCE",132,0)
 Q Y
"RTN","LA7SCE",133,0)
 ;
"RTN","LA7SCE",134,0)
 ;
"RTN","LA7SCE",135,0)
CHECK(LA7SCFG) ; Check if test exists for configuration and warn if overwriting
"RTN","LA7SCE",136,0)
 ; Call with LA7SCFG = shiping configuration ien
"RTN","LA7SCE",137,0)
 ;   Returns  -1 = user aborted/timeout
"RTN","LA7SCE",138,0)
 ;             0 = no - don't overwrite
"RTN","LA7SCE",139,0)
 ;             1 = yes - overwrite
"RTN","LA7SCE",140,0)
 I '$O(^LAHM(62.9,LA7SCFG,60,0)) Q 1
"RTN","LA7SCE",141,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SCE",142,0)
 S DIR(0)="SBO^0:NO;1:YES"
"RTN","LA7SCE",143,0)
 S DIR("A",1)="Tests already exist for this configuration!",DIR("A")="Are you sure",DIR("B")="NO"
"RTN","LA7SCE",144,0)
 D ^DIR
"RTN","LA7SCE",145,0)
 I $D(DIRUT) S Y=-1
"RTN","LA7SCE",146,0)
 Q Y
"RTN","LA7SCE",147,0)
 ;
"RTN","LA7SCE",148,0)
 ;
"RTN","LA7SCE",149,0)
COPYSC(LA7FR,LA7TO) ; Copy one shipping configuration to another
"RTN","LA7SCE",150,0)
 ; Call with LA7FR = shipping configuration to copy FROM.
"RTN","LA7SCE",151,0)
 ;           LA7TO = shipping configuration ien to copy TO.
"RTN","LA7SCE",152,0)
 N LA760,LA762,LA6205,LA7X
"RTN","LA7SCE",153,0)
 W !!,"Copying tests from configuration: ",$P(LA7FR(0),"^")," to ",$P(LA7TO(0),"^"),!
"RTN","LA7SCE",154,0)
 S LA7X=0
"RTN","LA7SCE",155,0)
 F  S LA7X=$O(^LAHM(62.9,LA7FR,60,LA7X)) Q:'LA7X  D
"RTN","LA7SCE",156,0)
 . S LA760=$P($G(^LAHM(62.9,LA7FR,60,LA7X,0)),"^") ; file #60 laboratory test ien.
"RTN","LA7SCE",157,0)
 . S LA76205=$P($G(^LAHM(62.9,LA7FR,60,LA7X,0)),"^",4) ; file #62.05, urgency ien.
"RTN","LA7SCE",158,0)
 . S LA762=$P($G(^LAHM(62.9,LA7FR,60,LA7X,0)),"^",9) ; file #62, collection sample ien.
"RTN","LA7SCE",159,0)
 . I LA760 D FDA629(LA7TO,LA760,LA762,LA76205)
"RTN","LA7SCE",160,0)
 Q
"RTN","LA7SCE",161,0)
 ;
"RTN","LA7SCE",162,0)
 ;
"RTN","LA7SCE",163,0)
COPY60(LA7SCFG) ; Copy catalog tests from file #60 to shipping configuration.
"RTN","LA7SCE",164,0)
 ; Call with LA7SCFG = shipping configuration ien to add tests to from file #60
"RTN","LA7SCE",165,0)
 N LA760,LA762,LA7X
"RTN","LA7SCE",166,0)
 W !!,"Copying tests from file #60 LABORATORY TEST to ",$P(LA7SCFG(0),"^"),!
"RTN","LA7SCE",167,0)
 S LA760=0 ; file #60 pointer
"RTN","LA7SCE",168,0)
 I '$D(^LAHM(62.9,LA7SCFG,60,0)) S ^LAHM(62.9,LA7SCFG,60,0)="^62.9001P^0^0" ; set subfile zeroth node
"RTN","LA7SCE",169,0)
 F  S LA760=$O(^LAB(60,LA760)) Q:'LA760  D
"RTN","LA7SCE",170,0)
 . I '$P($G(^LAB(60,LA760,64)),"^",3) Q  ; Not a catalog item
"RTN","LA7SCE",171,0)
 . S LA7X=0
"RTN","LA7SCE",172,0)
 . F  S LA7X=$O(^LAB(60,LA760,3,LA7X)) Q:'LA7X  D
"RTN","LA7SCE",173,0)
 . . S LA762=+$G(^LAB(60,LA760,3,LA7X,0)) ; file #62 pointer (collection sample)
"RTN","LA7SCE",174,0)
 . . I LA762 D FDA629(LA7SCFG,LA760,LA762,"")
"RTN","LA7SCE",175,0)
 Q
"RTN","LA7SCE",176,0)
 ;
"RTN","LA7SCE",177,0)
 ;
"RTN","LA7SCE",178,0)
FDA629(LA7SCFG,LA760,LA762,LA76205) ; Add entry to TEST/PROFILE multiple
"RTN","LA7SCE",179,0)
 ; Call with  LA7SCFG = file #62.9, shipping configuration ien
"RTN","LA7SCE",180,0)
 ;              LA760 = file #60, lab test ien
"RTN","LA7SCE",181,0)
 ;              LA762 = file #62, collection sample ien
"RTN","LA7SCE",182,0)
 ;            LA76205 = file #62.05 , urgency ien
"RTN","LA7SCE",183,0)
 N FDA,LA7DIE,LA7629
"RTN","LA7SCE",184,0)
 S LA7629(1)=LA7SCFG
"RTN","LA7SCE",185,0)
 S FDA(629,62.9001,"+2,"_+LA7SCFG_",",.01)=LA760
"RTN","LA7SCE",186,0)
 I LA76205 S FDA(629,62.9001,"+2,"_+LA7SCFG_",",.04)=LA76205
"RTN","LA7SCE",187,0)
 I LA762 S FDA(629,62.9001,"+2,"_+LA7SCFG_",",.09)=LA762
"RTN","LA7SCE",188,0)
 W:$X>(IOM-2) ! W "#"
"RTN","LA7SCE",189,0)
 D UPDATE^DIE("","FDA(629)","LA7629","LA7DIE(629)") ; Add test to shipping configuration.
"RTN","LA7SCE",190,0)
 Q
"RTN","LA7SCE",191,0)
 ;
"RTN","LA7SCE",192,0)
 ;
"RTN","LA7SCE",193,0)
CLRSCT(LA7SCFG) ; Clear shipping configuration tests.
"RTN","LA7SCE",194,0)
 ; Call with LA7SCFG = file #62.9, shipping configuration ien
"RTN","LA7SCE",195,0)
 N DA,DIK,LA7X
"RTN","LA7SCE",196,0)
 W !!,"Clearing existing tests from configuration: ",$P(LA7SCFG(0),"^"),!
"RTN","LA7SCE",197,0)
 S DA(1)=+LA7SCFG,DIK="^LAHM(62.9,"_DA(1)_",60,"
"RTN","LA7SCE",198,0)
 S LA7X=0
"RTN","LA7SCE",199,0)
 F  S LA7X=$O(^LAHM(62.9,LA7SCFG,60,LA7X)) Q:'LA7X  D
"RTN","LA7SCE",200,0)
 . W:$X>(IOM-2) ! W "*"
"RTN","LA7SCE",201,0)
 . S DA=LA7X D ^DIK
"RTN","LA7SCE",202,0)
 Q
"RTN","LA7SM")
0^1^B54631114
"RTN","LA7SM",1,0)
LA7SM ;DALOI/JMC - Shipping Manifest Options ;5/5/97  14:39
"RTN","LA7SM",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46**;Sep 27, 1994
"RTN","LA7SM",3,0)
 ;
"RTN","LA7SM",4,0)
CLSHIP ; Close/ship a shipping manifest
"RTN","LA7SM",5,0)
 D INIT
"RTN","LA7SM",6,0)
 I LA7QUIT D CLEANUP Q
"RTN","LA7SM",7,0)
 S LA7SM=$$SELSM^LA7SMU(+LA7SCFG,"1,3")
"RTN","LA7SM",8,0)
 I LA7SM<0 D  Q
"RTN","LA7SM",9,0)
 . D EN^DDIOL($P(LA7SM,"^",2),"","!?5")
"RTN","LA7SM",10,0)
 . D CLEANUP
"RTN","LA7SM",11,0)
 D LOCKSM
"RTN","LA7SM",12,0)
 I LA7QUIT D  Q
"RTN","LA7SM",13,0)
 . D EN^DDIOL($P(LA7QUIT,"^",2),"","!?5")
"RTN","LA7SM",14,0)
 . D UNLOCKSM,CLEANUP
"RTN","LA7SM",15,0)
 S LA7SM(0)=$G(^LAHM(62.8,+LA7SM,0))
"RTN","LA7SM",16,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SM",17,0)
 I $P(LA7SM(0),"^",3)=1 D
"RTN","LA7SM",18,0)
 . S DIR(0)="SO^1:Close manifest;2:Ship manifest"
"RTN","LA7SM",19,0)
 . S DIR("A")="Select action to perform",DIR("B")=1
"RTN","LA7SM",20,0)
 I $P(LA7SM(0),"^",3)=3 D
"RTN","LA7SM",21,0)
 . S DIR(0)="YO"
"RTN","LA7SM",22,0)
 . S DIR("A")="Do you want to ship this manifest",DIR("B")="NO"
"RTN","LA7SM",23,0)
 D ^DIR
"RTN","LA7SM",24,0)
 I $D(DIRUT) D UNLOCKSM,CLEANUP Q
"RTN","LA7SM",25,0)
 S LA7ST=+Y
"RTN","LA7SM",26,0)
 I $P(LA7SM(0),"^",3)=3,LA7ST S LA7ST=2
"RTN","LA7SM",27,0)
 I $P(LA7SM(0),"^",3)=1 D SMSUP^LA7SMU(LA7SM,3,"SM04") ; Close manifest
"RTN","LA7SM",28,0)
 I LA7ST=2 D SHIP^LA7SM1 ; Ask for shipping date/time
"RTN","LA7SM",29,0)
 I 'LA7QUIT!$D(LA7ERR) S LA7CHK=0 D ASK^LA7SMP(LA7SM) ; Ask if want to print manifest.
"RTN","LA7SM",30,0)
 D UNLOCKSM,CLEANUP
"RTN","LA7SM",31,0)
 Q
"RTN","LA7SM",32,0)
 ;
"RTN","LA7SM",33,0)
SMET ; Edit a test on a shipping manifest
"RTN","LA7SM",34,0)
 ; Used to add/remove a test.
"RTN","LA7SM",35,0)
 D INIT
"RTN","LA7SM",36,0)
 I LA7QUIT D CLEANUP Q
"RTN","LA7SM",37,0)
 S LA7SM=$$SELSM^LA7SMU(+LA7SCFG,"0,1,3")
"RTN","LA7SM",38,0)
 I LA7SM<0 D  Q
"RTN","LA7SM",39,0)
 . D EN^DDIOL($P(LA7SM,"^",2),"","!?5")
"RTN","LA7SM",40,0)
 . D CLEANUP
"RTN","LA7SM",41,0)
 D LOCKSM
"RTN","LA7SM",42,0)
 I LA7QUIT D  Q
"RTN","LA7SM",43,0)
 . D EN^DDIOL($P(LA7QUIT,"^",2),"","!?5")
"RTN","LA7SM",44,0)
 . D UNLOCKSM,CLEANUP
"RTN","LA7SM",45,0)
 S LA7SM(0)=$G(^LAHM(62.8,LA7SM,0))
"RTN","LA7SM",46,0)
 S DIR(0)="SO^1:Add test to manifest;2:Remove test from manifest"
"RTN","LA7SM",47,0)
 S DIR("A")="Select action to perform",DIR("B")=1
"RTN","LA7SM",48,0)
 D ^DIR
"RTN","LA7SM",49,0)
 I $D(DIRUT) D CLEANUP Q
"RTN","LA7SM",50,0)
 S LA7ACTON=+Y
"RTN","LA7SM",51,0)
 I LA7ACTON=1 F  D ADDTEST Q:LA7QUIT
"RTN","LA7SM",52,0)
 I LA7ACTON=2 F  D REMVTST Q:LA7QUIT
"RTN","LA7SM",53,0)
 I LA7QUIT,$L($P(LA7QUIT,"^",2)) D EN^DDIOL($P(LA7QUIT,"^",2),"","!?5")
"RTN","LA7SM",54,0)
 E  D ASK^LA7SMP(LA7SM)
"RTN","LA7SM",55,0)
 D CLEANUP
"RTN","LA7SM",56,0)
 Q
"RTN","LA7SM",57,0)
 ;
"RTN","LA7SM",58,0)
 ;
"RTN","LA7SM",59,0)
ADDTEST ; Add individual test to an existing manifest
"RTN","LA7SM",60,0)
 ;
"RTN","LA7SM",61,0)
 N LA760,LA7AA,LA7AD,LA7AN,LA7BY,LA7DIV,LA7I,LA7UID,LA7X
"RTN","LA7SM",62,0)
 ;
"RTN","LA7SM",63,0)
 D SEL
"RTN","LA7SM",64,0)
 I LA7QUIT Q
"RTN","LA7SM",65,0)
 ;
"RTN","LA7SM",66,0)
 S DIC="^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,",DIC(0)="AEMQ",DIC("A")="Select TEST to Add: "
"RTN","LA7SM",67,0)
 S DA=LA7AN,DA(1)=LA7AD,DA(2)=LA7AA
"RTN","LA7SM",68,0)
 D ^DIC
"RTN","LA7SM",69,0)
 I Y<1 D  Q
"RTN","LA7SM",70,0)
 . S LA7QUIT=1
"RTN","LA7SM",71,0)
 . I $D(DUOUT) S $P(LA7QUIT,"^",2)="User aborted"
"RTN","LA7SM",72,0)
 . I $D(DTOUT) S $P(LA7QUIT,"^",2)="User timeout"
"RTN","LA7SM",73,0)
 S LA760=+Y
"RTN","LA7SM",74,0)
 ;
"RTN","LA7SM",75,0)
 ; Test's zeroth node.
"RTN","LA7SM",76,0)
 S LA760(0)=$G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA760,0))
"RTN","LA7SM",77,0)
 ;
"RTN","LA7SM",78,0)
 ; Test completed - skip
"RTN","LA7SM",79,0)
 I $P(LA760(0),"^",5) S LA7QUIT="1^Test already completed" Q
"RTN","LA7SM",80,0)
 ;
"RTN","LA7SM",81,0)
 ; Test urgency
"RTN","LA7SM",82,0)
 S LA76205=+$P(LA760(0),"^",2)
"RTN","LA7SM",83,0)
 I LA76205>49 S LA76205=$S(LA76205=50:9,1:LA76205-50)
"RTN","LA7SM",84,0)
 ;
"RTN","LA7SM",85,0)
 ; Don't build controls
"RTN","LA7SM",86,0)
 I $P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)),"^",2)=62.3 S LA7QUIT="1^Cannot select controls" Q
"RTN","LA7SM",87,0)
 ;
"RTN","LA7SM",88,0)
 S LA7I=0
"RTN","LA7SM",89,0)
 F  S LA7I=$O(^LAHM(62.8,+LA7SM,10,"UID",LA7UID,LA7I)) Q:'LA7I  D  Q:LA7QUIT
"RTN","LA7SM",90,0)
 . N X
"RTN","LA7SM",91,0)
 . S X(0)=$G(^LAHM(62.8,+LA7SM,10,LA7I,0))
"RTN","LA7SM",92,0)
 . I $P(X(0),"^",2)=LA760,$P(X(0),"^",8)'=0 S LA7QUIT="1^Test already on shipping manifest"
"RTN","LA7SM",93,0)
 I LA7QUIT Q
"RTN","LA7SM",94,0)
 ;
"RTN","LA7SM",95,0)
 ; Build TMP global with test profile
"RTN","LA7SM",96,0)
 D SCBLD^LA7SM1(+LA7SCFG)
"RTN","LA7SM",97,0)
 ;
"RTN","LA7SM",98,0)
 ; Accession's division
"RTN","LA7SM",99,0)
 S LA7DIV=+$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,.4)),"^")
"RTN","LA7SM",100,0)
 ;
"RTN","LA7SM",101,0)
 ; Check if test eligible for manifest
"RTN","LA7SM",102,0)
 D SCHK^LA7SM1
"RTN","LA7SM",103,0)
 I 'LA7FLAG S LA7QUIT="1^Test not selectable for this configuration" Q
"RTN","LA7SM",104,0)
 D LOCK68^LA7SMB
"RTN","LA7SM",105,0)
 S LA7I=0
"RTN","LA7SM",106,0)
 F  S LA7I=$O(LA7X(LA7I)) Q:'LA7I  D ADD^LA7SMB
"RTN","LA7SM",107,0)
 D UNLOCK68^LA7SMB
"RTN","LA7SM",108,0)
 Q
"RTN","LA7SM",109,0)
 ;
"RTN","LA7SM",110,0)
 ;
"RTN","LA7SM",111,0)
REMVTST ; Remove a test from manifest - actually flags test as "removed".
"RTN","LA7SM",112,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LA7I,LA7TCNT,LA7Y,LA760,X,Y
"RTN","LA7SM",113,0)
 D SEL
"RTN","LA7SM",114,0)
 I LA7QUIT Q
"RTN","LA7SM",115,0)
 S (LA7I,LA7TCNT)=0
"RTN","LA7SM",116,0)
 F  S LA7I=$O(^LAHM(62.8,+LA7SM,10,"UID",LA7UID,LA7I)) Q:'LA7I  D
"RTN","LA7SM",117,0)
 . S LA7I(0)=$G(^LAHM(62.8,+LA7SM,10,LA7I,0))
"RTN","LA7SM",118,0)
 . I $P(LA7I(0),"^",8)=0 Q  ; Previously "removed".
"RTN","LA7SM",119,0)
 . I $P(LA7I(0),"^",8),$P(LA7I(0),"^",8)'=1 S LA7QUIT="1^Accession not pending shipment" Q
"RTN","LA7SM",120,0)
 . S LA7TCNT=LA7TCNT+1,LA760(LA7TCNT)=LA7I_"^"_LA7I(0)
"RTN","LA7SM",121,0)
 I 'LA7TCNT,'LA7QUIT S LA7QUIT="1^Accession is not on this shipping manifest"
"RTN","LA7SM",122,0)
 I LA7QUIT Q
"RTN","LA7SM",123,0)
 S LA7I=0
"RTN","LA7SM",124,0)
 F  S LA7I=$O(LA760(LA7I)) Q:'LA7I  D EN^DDIOL(LA7I_" "_$P($G(^LAB(60,+$P(LA760(LA7I),"^",3),0)),"^"),"","!?5")
"RTN","LA7SM",125,0)
 S DIR(0)="LO^1:"_LA7TCNT,DIR("A")="Select test(s) to remove"
"RTN","LA7SM",126,0)
 D ^DIR
"RTN","LA7SM",127,0)
 I $D(DIRUT) S LA7QUIT=1 Q
"RTN","LA7SM",128,0)
 M LA7YARRY=Y
"RTN","LA7SM",129,0)
 S LA7Y=""
"RTN","LA7SM",130,0)
 F  S LA7Y=$O(LA7YARRY(LA7Y)) Q:LA7Y=""  D
"RTN","LA7SM",131,0)
 . F LA7I=1:1 Q:'$P(LA7YARRY(LA7Y),",",LA7I)  D
"RTN","LA7SM",132,0)
 . . S LA7X=$P(LA7YARRY(LA7Y),",",LA7I)
"RTN","LA7SM",133,0)
 . . N FDA,LA7628,LA768,LA7DATA
"RTN","LA7SM",134,0)
 . . S LA762801=+(LA760(LA7X))_","_+LA7SM_","
"RTN","LA7SM",135,0)
 . . S FDA(62.8,62.801,LA762801,.08)=0
"RTN","LA7SM",136,0)
 . . D FILE^DIE("","FDA(62.8)","LA7DIE(2)") ; "Remove" test from shipping manifest
"RTN","LA7SM",137,0)
 . . ; Update event file
"RTN","LA7SM",138,0)
 . . S LA7DATA="SM51^"_$$NOW^XLFDT_"^"_$P(LA760(LA7X),"^",3)_"^"_$P(LA7SM,"^",2)
"RTN","LA7SM",139,0)
 . . D SEUP^LA7SMU(LA7UID,2,LA7DATA)
"RTN","LA7SM",140,0)
 . . ; Update accession
"RTN","LA7SM",141,0)
 . . D ACCSUP^LA7SMU(LA7UID,$P(LA760(LA7X),"^",3),"@")
"RTN","LA7SM",142,0)
 Q
"RTN","LA7SM",143,0)
 ;
"RTN","LA7SM",144,0)
 ;
"RTN","LA7SM",145,0)
CANC ; Cancel a shipping manifest
"RTN","LA7SM",146,0)
 D INIT
"RTN","LA7SM",147,0)
 I LA7QUIT D CLEANUP Q
"RTN","LA7SM",148,0)
 S LA7SM=$$SELSM^LA7SMU(+LA7SCFG,"1,3")
"RTN","LA7SM",149,0)
 I LA7SM<0 D  Q
"RTN","LA7SM",150,0)
 . D EN^DDIOL($P(LA7SM,"^",2),"","!?5")
"RTN","LA7SM",151,0)
 . D CLEANUP
"RTN","LA7SM",152,0)
 D LOCKSM
"RTN","LA7SM",153,0)
 I LA7QUIT D  Q
"RTN","LA7SM",154,0)
 . D EN^DDIOL($P(LA7QUIT,"^",2),"","!?5")
"RTN","LA7SM",155,0)
 . D UNLOCKSM,CLEANUP
"RTN","LA7SM",156,0)
 S LA7SM(0)=$G(^LAHM(62.8,LA7SM,0))
"RTN","LA7SM",157,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SM",158,0)
 S DIR(0)="YO"
"RTN","LA7SM",159,0)
 S DIR("A")="Do you want to cancel this manifest",DIR("B")="NO"
"RTN","LA7SM",160,0)
 D ^DIR
"RTN","LA7SM",161,0)
 I $D(DIRUT) D UNLOCKSM,CLEANUP Q
"RTN","LA7SM",162,0)
 S LA7ST=+Y
"RTN","LA7SM",163,0)
 I LA7ST=1 D
"RTN","LA7SM",164,0)
 . S LA7I=0
"RTN","LA7SM",165,0)
 . F  S LA7I=$O(^LAHM(62.8,+LA7SM,10,LA7I)) Q:'LA7I  D
"RTN","LA7SM",166,0)
 . . S LA7I(0)=$G(^LAHM(62.8,+LA7SM,10,LA7I,0))
"RTN","LA7SM",167,0)
 . . I $P(LA7I(0),"^",8)=0 Q  ; Previously "removed".
"RTN","LA7SM",168,0)
 . . ; "Remove" test from shipping manifest
"RTN","LA7SM",169,0)
 . . S LA762801=LA7I_","_+LA7SM_","
"RTN","LA7SM",170,0)
 . . S FDA(62.8,62.801,LA762801,.08)=0
"RTN","LA7SM",171,0)
 . . D FILE^DIE("","FDA(62.8)","LA7DIE(2)")
"RTN","LA7SM",172,0)
 . . ; Update event file
"RTN","LA7SM",173,0)
 . . S LA7DATA="SM51^"_$$NOW^XLFDT_"^"_$P(LA7I(0),"^",2)_"^"_$P(LA7SM,"^",2)
"RTN","LA7SM",174,0)
 . . D SEUP^LA7SMU($P(LA7I(0),"^",5),2,LA7DATA)
"RTN","LA7SM",175,0)
 . . ; Update accession
"RTN","LA7SM",176,0)
 . . D ACCSUP^LA7SMU($P(LA7I(0),"^",5),$P(LA7I(0),"^",2),"@")
"RTN","LA7SM",177,0)
 . D SMSUP^LA7SMU(LA7SM,0,"SM00") ; Cancel manifest
"RTN","LA7SM",178,0)
 D UNLOCKSM,CLEANUP
"RTN","LA7SM",179,0)
 Q
"RTN","LA7SM",180,0)
 ;
"RTN","LA7SM",181,0)
 ;
"RTN","LA7SM",182,0)
SEL ; Select accession
"RTN","LA7SM",183,0)
 ;
"RTN","LA7SM",184,0)
 N LRAA,LRACC,LRAD,LRAN,X
"RTN","LA7SM",185,0)
 ;
"RTN","LA7SM",186,0)
 ; Select by accession, ^LRWU4 needs variable LRACC.
"RTN","LA7SM",187,0)
 S LRACC=""
"RTN","LA7SM",188,0)
 D ^LRWU4
"RTN","LA7SM",189,0)
 I $D(DUOUT) S LA7QUIT="1^User aborted" Q
"RTN","LA7SM",190,0)
 I $D(DTOUT) S LA7QUIT="1^User timeout" Q
"RTN","LA7SM",191,0)
 I (LRAA*LRAD*LRAN)<1 S LA7QUIT="1" Q
"RTN","LA7SM",192,0)
 ;
"RTN","LA7SM",193,0)
 S LA7AA=LRAA,LA7AD=LRAD,LA7AN=LRAN
"RTN","LA7SM",194,0)
 ;
"RTN","LA7SM",195,0)
 S LA7UID=$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,.3)),"^")
"RTN","LA7SM",196,0)
 I LA7UID="" S LA7QUIT="2^Database error - accession missing UID" Q
"RTN","LA7SM",197,0)
 ;
"RTN","LA7SM",198,0)
 ; Specimen type
"RTN","LA7SM",199,0)
 S LA76805=0
"RTN","LA7SM",200,0)
 S X=+$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,5,0))
"RTN","LA7SM",201,0)
 I X S LA76805=+$G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,5,X,0))
"RTN","LA7SM",202,0)
 Q
"RTN","LA7SM",203,0)
 ;
"RTN","LA7SM",204,0)
 ;
"RTN","LA7SM",205,0)
INIT ; Initialize variables
"RTN","LA7SM",206,0)
 S DT=$$DT^XLFDT
"RTN","LA7SM",207,0)
 S LA7QUIT=0
"RTN","LA7SM",208,0)
 S LA7SCFG=$$SSCFG^LA7SUTL(1) ; Select shipping configuration
"RTN","LA7SM",209,0)
 I LA7SCFG<1 S LA7QUIT=1 Q
"RTN","LA7SM",210,0)
 S LA7SCFG(0)=$G(^LAHM(62.9,+LA7SCFG,0))
"RTN","LA7SM",211,0)
 K ^TMP("LA7ERR",$J)
"RTN","LA7SM",212,0)
 Q
"RTN","LA7SM",213,0)
 ;
"RTN","LA7SM",214,0)
 ;
"RTN","LA7SM",215,0)
LOCKSM ; Lock entry in file 62.8
"RTN","LA7SM",216,0)
 L +^LAHM(62.8,+LA7SM):1 ; Set lock.
"RTN","LA7SM",217,0)
 I '$T S LA7QUIT="1^Someone else is editing this shipping manifest"
"RTN","LA7SM",218,0)
 Q
"RTN","LA7SM",219,0)
 ;
"RTN","LA7SM",220,0)
 ;
"RTN","LA7SM",221,0)
UNLOCKSM ; Unlock entry in file 62.8
"RTN","LA7SM",222,0)
 L -^LAHM(62.8,+LA7SM) ; Release lock.
"RTN","LA7SM",223,0)
 Q
"RTN","LA7SM",224,0)
 ;
"RTN","LA7SM",225,0)
 ;
"RTN","LA7SM",226,0)
CLEANUP ; Cleanup variables
"RTN","LA7SM",227,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7SM",228,0)
 K DA,DIC,DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SM",229,0)
 K LA7AA,LA7ACTON,LA7AD,LA7AN,LA7EV,LA7FLAG,LA7I,LA7QUIT,LA7SCFG,LA7SDT,LA7SM,LA7ST,LA7UID,LA7X,LA7YARRY
"RTN","LA7SM",230,0)
 K LA760,LA76205,LA762801,LA76805
"RTN","LA7SM",231,0)
 K ^TMP("LA7ERR",$J)
"RTN","LA7SM",232,0)
 Q
"RTN","LA7SM1")
0^2^B30704634
"RTN","LA7SM1",1,0)
LA7SM1 ;DALOI/JMC - Shipping Manifest Options ;5/5/97  14:39
"RTN","LA7SM1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46**;Sep 27, 1994
"RTN","LA7SM1",3,0)
 ;
"RTN","LA7SM1",4,0)
RETRANS ; Retransmit a shipping manifest.
"RTN","LA7SM1",5,0)
 ;
"RTN","LA7SM1",6,0)
 D INIT^LA7SM
"RTN","LA7SM1",7,0)
 I LA7QUIT D CLEANUP^LA7SM Q
"RTN","LA7SM1",8,0)
 ;
"RTN","LA7SM1",9,0)
 I '$P($G(^LAHM(62.9,+LA7SCFG,0)),"^",7) D  Q
"RTN","LA7SM1",10,0)
 . N MSG
"RTN","LA7SM1",11,0)
 . S MSG="This shipping configuration "_$P(LA7SCFG,"^",2)_" is not setup for electronic transmission."
"RTN","LA7SM1",12,0)
 . D EN^DDIOL(MSG,"","!?5")
"RTN","LA7SM1",13,0)
 . D CLEANUP^LA7SM
"RTN","LA7SM1",14,0)
 ;
"RTN","LA7SM1",15,0)
 S LA7SM=$$SELSM^LA7SMU(+LA7SCFG,"4")
"RTN","LA7SM1",16,0)
 I LA7SM<0 D  Q
"RTN","LA7SM1",17,0)
 . D EN^DDIOL($P(LA7SM,"^",2),"","!?5")
"RTN","LA7SM1",18,0)
 . D CLEANUP^LA7SM
"RTN","LA7SM1",19,0)
 ;
"RTN","LA7SM1",20,0)
 I LA7QUIT D  Q
"RTN","LA7SM1",21,0)
 . D EN^DDIOL($P(LA7QUIT,"^",2),"","!?5")
"RTN","LA7SM1",22,0)
 . D CLEANUP^LA7SM
"RTN","LA7SM1",23,0)
 ;
"RTN","LA7SM1",24,0)
 S LA7SM(0)=$G(^LAHM(62.8,+LA7SM,0))
"RTN","LA7SM1",25,0)
 ;
"RTN","LA7SM1",26,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SM1",27,0)
 ;
"RTN","LA7SM1",28,0)
 S DIR(0)="YO"
"RTN","LA7SM1",29,0)
 S DIR("A")="Sure you want to retransmit this manifest",DIR("B")="NO"
"RTN","LA7SM1",30,0)
 D ^DIR
"RTN","LA7SM1",31,0)
 I $D(DIRUT) D CLEANUP^LA7SM Q
"RTN","LA7SM1",32,0)
 ;
"RTN","LA7SM1",33,0)
 ; Do tasking of transmission
"RTN","LA7SM1",34,0)
 I Y D TASKSM
"RTN","LA7SM1",35,0)
 D CLEANUP^LA7SM
"RTN","LA7SM1",36,0)
 ;
"RTN","LA7SM1",37,0)
 Q
"RTN","LA7SM1",38,0)
 ;
"RTN","LA7SM1",39,0)
 ;
"RTN","LA7SM1",40,0)
SHIP ; Ship a manifest
"RTN","LA7SM1",41,0)
 ; Used to flag shipping manifest for shipping
"RTN","LA7SM1",42,0)
 ; If electronically connected -> transmit shipping manifest in HL7 message.
"RTN","LA7SM1",43,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,I,LA7I,LA7TCNT,X,Y
"RTN","LA7SM1",44,0)
 ;
"RTN","LA7SM1",45,0)
 S (LA7I,LA7TCNT)=0
"RTN","LA7SM1",46,0)
 F  S LA7I=$O(^LAHM(62.8,+LA7SM,10,LA7I)) Q:'LA7I  D
"RTN","LA7SM1",47,0)
 . I $$CHKTST^LA7SMU(+LA7SM,LA7I) Q
"RTN","LA7SM1",48,0)
 . I $P($G(^LAHM(62.8,+LA7SM,10,LA7I,0)),"^",8)'=1 Q
"RTN","LA7SM1",49,0)
 . S LA7TCNT=LA7TCNT+1 ; Test ready to ship.
"RTN","LA7SM1",50,0)
 . D CHKREQI^LA7SM2(+LA7SM,LA7I)
"RTN","LA7SM1",51,0)
 ;
"RTN","LA7SM1",52,0)
 I 'LA7TCNT D  Q
"RTN","LA7SM1",53,0)
 . S LA7QUIT=1
"RTN","LA7SM1",54,0)
 . D EN^DDIOL("No tests on shipping manifest - Shipping Aborted","","!?5")
"RTN","LA7SM1",55,0)
 ;
"RTN","LA7SM1",56,0)
 I $G(LA7ERR) D  Q
"RTN","LA7SM1",57,0)
 . S LA7QUIT=1
"RTN","LA7SM1",58,0)
 . D EN^DDIOL("Print shipping manifest for complete listing of errors","","!!?5")
"RTN","LA7SM1",59,0)
 . D EN^DDIOL("The following errors were found - Shipping Aborted","","!?5")
"RTN","LA7SM1",60,0)
 . S LA7X=""
"RTN","LA7SM1",61,0)
 . F  S LA7X=$O(LA7ERR(LA7X)) Q:LA7X=""  D EN^DDIOL(LA7ERR(LA7X),"","!?5")
"RTN","LA7SM1",62,0)
 . D EN^DDIOL("","","!")
"RTN","LA7SM1",63,0)
 ;
"RTN","LA7SM1",64,0)
 S DIR(0)="D^::EFRX",DIR("A")="Enter Manifest Shipping Date",DIR("B")="NOW"
"RTN","LA7SM1",65,0)
 D ^DIR
"RTN","LA7SM1",66,0)
 I $D(DIRUT) S LA7QUIT=1 Q
"RTN","LA7SM1",67,0)
 S LA7SDT=Y
"RTN","LA7SM1",68,0)
 D SMSUP^LA7SMU(LA7SM,4,"SM05^"_LA7SDT)
"RTN","LA7SM1",69,0)
 ;
"RTN","LA7SM1",70,0)
 K LA7I
"RTN","LA7SM1",71,0)
 S LA7I=0
"RTN","LA7SM1",72,0)
 F  S LA7I=$O(^LAHM(62.8,+LA7SM,10,LA7I)) Q:'LA7I  D
"RTN","LA7SM1",73,0)
 . S LA7I(0)=$G(^LAHM(62.8,+LA7SM,10,LA7I,0))
"RTN","LA7SM1",74,0)
 . I $P(LA7I(0),"^",8)'=1 Q  ; Not "pending shipment".
"RTN","LA7SM1",75,0)
 . ; Change status to "shipped".
"RTN","LA7SM1",76,0)
 . S LA762801=LA7I_","_+LA7SM_","
"RTN","LA7SM1",77,0)
 . S FDA(62.8,62.801,LA762801,.08)=2
"RTN","LA7SM1",78,0)
 . D FILE^DIE("","FDA(62.8)","LA7DIE(2)")
"RTN","LA7SM1",79,0)
 . ; Update event file
"RTN","LA7SM1",80,0)
 . S LA7DATA="SM53^"_$$NOW^XLFDT_"^"_$P(LA7I(0),"^",2)_"^"_$P(LA7SM,"^",2)
"RTN","LA7SM1",81,0)
 . D SEUP^LA7SMU($P(LA7I(0),"^",5),2,LA7DATA)
"RTN","LA7SM1",82,0)
 ;
"RTN","LA7SM1",83,0)
 ; Do tasking of transmission
"RTN","LA7SM1",84,0)
 I $P($G(^LAHM(62.9,+LA7SCFG,0)),"^",7) D TASKSM
"RTN","LA7SM1",85,0)
 ;
"RTN","LA7SM1",86,0)
 Q
"RTN","LA7SM1",87,0)
 ;
"RTN","LA7SM1",88,0)
 ;
"RTN","LA7SM1",89,0)
SCBLD(LA7SCFG) ; Build test profile for a configuration
"RTN","LA7SM1",90,0)
 ; Call with LA7SCFG = ien of shipping configuration in file #62.9
"RTN","LA7SM1",91,0)
 N I,X
"RTN","LA7SM1",92,0)
 ;
"RTN","LA7SM1",93,0)
 K ^TMP("LA7SMB",$J)
"RTN","LA7SM1",94,0)
 ;
"RTN","LA7SM1",95,0)
 S X=0
"RTN","LA7SM1",96,0)
 F  S X=$O(^LAHM(62.9,LA7SCFG,60,X)) Q:'X  D
"RTN","LA7SM1",97,0)
 . F I=0,1,2,5 S X(I)=$G(^LAHM(62.9,LA7SCFG,60,X,I))
"RTN","LA7SM1",98,0)
 . ; No accession area - skip
"RTN","LA7SM1",99,0)
 . I '$P(X(0),"^",2) Q
"RTN","LA7SM1",100,0)
 . ; TMP("LA7SMB",$J,accession area,file 60 test,entry #,specimen,urgency,division, node)
"RTN","LA7SM1",101,0)
 . ; specimen=0 if any specimen, urgency=0 if any urgency, division=0 if any division
"RTN","LA7SM1",102,0)
 . F I=0,1,2,5 S ^TMP("LA7SMB",$J,$P(X(0),"^",2),+X(0),X,+$P(X(0),"^",3),+$P(X(0),"^",4),+$P(X(0),"^",10),I)=X(I)
"RTN","LA7SM1",103,0)
 Q
"RTN","LA7SM1",104,0)
 ;
"RTN","LA7SM1",105,0)
 ;
"RTN","LA7SM1",106,0)
SCHK ; Check shipping configuration for test eligible to add.
"RTN","LA7SM1",107,0)
 ; Called by LA7SM, LA7SMB
"RTN","LA7SM1",108,0)
 ;
"RTN","LA7SM1",109,0)
 N LA7I,LA7J,LA7K,LA7L,LA7M
"RTN","LA7SM1",110,0)
 ;
"RTN","LA7SM1",111,0)
 K LA7X
"RTN","LA7SM1",112,0)
 ;
"RTN","LA7SM1",113,0)
 ; Flag to determine if accession/test should be added to manifest.
"RTN","LA7SM1",114,0)
 S LA7FLAG=0
"RTN","LA7SM1",115,0)
 ;
"RTN","LA7SM1",116,0)
 ; Quit if this asscession area/test not defined for configuration.
"RTN","LA7SM1",117,0)
 I '$D(^TMP("LA7SMB",$J,LA7AA,LA760)) Q
"RTN","LA7SM1",118,0)
 ;
"RTN","LA7SM1",119,0)
 S LA7I=0
"RTN","LA7SM1",120,0)
 F  S LA7I=$O(^TMP("LA7SMB",$J,LA7AA,LA760,LA7I)) Q:'LA7I  D
"RTN","LA7SM1",121,0)
 . D CHKMASK Q:'LA7FLAG
"RTN","LA7SM1",122,0)
 . F LA7J=0,1,2,5 S LA7X(LA7I,LA7J)=$G(^TMP("LA7SMB",$J,LA7AA,LA760,LA7I,LA7K,LA7L,LA7M,LA7J))
"RTN","LA7SM1",123,0)
 ;
"RTN","LA7SM1",124,0)
 Q
"RTN","LA7SM1",125,0)
 ;
"RTN","LA7SM1",126,0)
 ;
"RTN","LA7SM1",127,0)
CHKMASK ; Check pattern mask for tests that match on specimen, urgency and division.
"RTN","LA7SM1",128,0)
 ;
"RTN","LA7SM1",129,0)
 ; Specimen, urgency, and division match
"RTN","LA7SM1",130,0)
 I $D(^TMP("LA7SMB",$J,LA7AA,LA760,LA7I,LA76805,LA76205,LA7DIV)) S LA7FLAG=1,LA7K=LA76805,LA7L=LA76205,LA7M=LA7DIV Q
"RTN","LA7SM1",131,0)
 ;
"RTN","LA7SM1",132,0)
 ; Specimen and urgency match; any division
"RTN","LA7SM1",133,0)
 I $D(^TMP("LA7SMB",$J,LA7AA,LA760,LA7I,LA76805,LA76205,0)) S LA7FLAG=1,LA7K=LA76805,LA7L=LA76205,LA7M=0 Q
"RTN","LA7SM1",134,0)
 ;
"RTN","LA7SM1",135,0)
 ; Specimen and division match; any urgency
"RTN","LA7SM1",136,0)
 I $D(^TMP("LA7SMB",$J,LA7AA,LA760,LA7I,LA76805,0,LA7DIV)) S LA7FLAG=1,LA7K=LA76805,LA7L=0,LA7M=LA7DIV Q
"RTN","LA7SM1",137,0)
 ;
"RTN","LA7SM1",138,0)
 ; Specimen match; any urgency/division
"RTN","LA7SM1",139,0)
 I $D(^TMP("LA7SMB",$J,LA7AA,LA760,LA7I,LA76805,0,0)) S LA7FLAG=1,LA7K=LA76805,LA7L=0,LA7M=0 Q
"RTN","LA7SM1",140,0)
 ;
"RTN","LA7SM1",141,0)
 ; Any specimen; urgency and division match
"RTN","LA7SM1",142,0)
 I $D(^TMP("LA7SMB",$J,LA7AA,LA760,LA7I,0,LA76205,LA7DIV)) S LA7FLAG=1,LA7K=0,LA7L=LA76205,LA7M=LA7DIV Q
"RTN","LA7SM1",143,0)
 ;
"RTN","LA7SM1",144,0)
 ; Any specimen and division; urgency match
"RTN","LA7SM1",145,0)
 I $D(^TMP("LA7SMB",$J,LA7AA,LA760,LA7I,0,LA76205,0)) S LA7FLAG=1,LA7K=0,LA7L=LA76205,LA7M=0 Q
"RTN","LA7SM1",146,0)
 ;
"RTN","LA7SM1",147,0)
 ; Any specimen and urgency; division match
"RTN","LA7SM1",148,0)
 I $D(^TMP("LA7SMB",$J,LA7AA,LA760,LA7I,0,0,LA7DIV)) S LA7FLAG=1,(LA7K,LA7L)=0,LA7M=LA7DIV Q
"RTN","LA7SM1",149,0)
 ;
"RTN","LA7SM1",150,0)
 ; Any specimen, urgency or division
"RTN","LA7SM1",151,0)
 I $D(^TMP("LA7SMB",$J,LA7AA,LA760,LA7I,0,0,0)) S LA7FLAG=1,(LA7K,LA7L,LA7M)=0 Q
"RTN","LA7SM1",152,0)
 ;
"RTN","LA7SM1",153,0)
 Q
"RTN","LA7SM1",154,0)
 ;
"RTN","LA7SM1",155,0)
 ;
"RTN","LA7SM1",156,0)
TASKSM ; Task electronic transmission of manifest
"RTN","LA7SM1",157,0)
 ;
"RTN","LA7SM1",158,0)
 N MSG,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LA7SM1",159,0)
 ;
"RTN","LA7SM1",160,0)
 S ZTRTN="BUILD^LA7VORM1("""_+$P(LA7SM,"^")_""")",ZTDESC="E-Tranmission of Lab Shipping Manifest"
"RTN","LA7SM1",161,0)
 S ZTSAVE("LA7SM")="",ZTIO="",ZTDTH=$$NOW^XLFDT
"RTN","LA7SM1",162,0)
 D ^%ZTLOAD
"RTN","LA7SM1",163,0)
 ;
"RTN","LA7SM1",164,0)
 S MSG="Electronic Transmission of Shipping Manifest "_$S($G(ZTSK):"queued as task# "_ZTSK,1:"NOT queued!")
"RTN","LA7SM1",165,0)
 D EN^DDIOL(MSG,"","!?5")
"RTN","LA7SM1",166,0)
 ;
"RTN","LA7SM1",167,0)
 Q
"RTN","LA7SM2")
0^21^B40446296
"RTN","LA7SM2",1,0)
LA7SM2 ;DALOI/JMC - Shipping Manifest Options ;5/5/97  14:39
"RTN","LA7SM2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7SM2",3,0)
 ;
"RTN","LA7SM2",4,0)
REQINFO ; Enter required information prior to shipping.
"RTN","LA7SM2",5,0)
 D INIT^LA7SM
"RTN","LA7SM2",6,0)
 I LA7QUIT D CLEANUP^LA7SM Q
"RTN","LA7SM2",7,0)
 S LA7SM=$$SELSM^LA7SMU(+LA7SCFG,"0,1,3")
"RTN","LA7SM2",8,0)
 I LA7SM<0 D  Q
"RTN","LA7SM2",9,0)
 . D EN^DDIOL($P(LA7SM,"^",2),"","!?5")
"RTN","LA7SM2",10,0)
 . D CLEANUP^LA7SM
"RTN","LA7SM2",11,0)
 D LOCKSM^LA7SM
"RTN","LA7SM2",12,0)
 I LA7QUIT D  Q
"RTN","LA7SM2",13,0)
 . D EN^DDIOL($P(LA7QUIT,"^",2),"","!?5")
"RTN","LA7SM2",14,0)
 . D UNLOCKSM^LA7SM,CLEANUP^LA7SM
"RTN","LA7SM2",15,0)
 S LA7SM(0)=$G(^LAHM(62.8,+LA7SM,0))
"RTN","LA7SM2",16,0)
 F  D INFOEE Q:LA7QUIT
"RTN","LA7SM2",17,0)
 I LA7QUIT,$L($P(LA7QUIT,"^",2)) D EN^DDIOL($P(LA7QUIT,"^",2),"","!?5")
"RTN","LA7SM2",18,0)
 E  D ASK^LA7SMP(LA7SM)
"RTN","LA7SM2",19,0)
 D CLEANUP^LA7SM
"RTN","LA7SM2",20,0)
 Q
"RTN","LA7SM2",21,0)
 ;
"RTN","LA7SM2",22,0)
INFOEE ; Required Info Enter/Edit
"RTN","LA7SM2",23,0)
 ;
"RTN","LA7SM2",24,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LA7CDT,LA7I,LA7INFO,LA7J,LA7RINFO,LA7TCNT,LA7X,LA7Y,X,Y
"RTN","LA7SM2",25,0)
 ;
"RTN","LA7SM2",26,0)
 D SEL^LA7SM
"RTN","LA7SM2",27,0)
 I LA7QUIT Q
"RTN","LA7SM2",28,0)
 ;
"RTN","LA7SM2",29,0)
 S (LA7I,LA7TCNT)=0
"RTN","LA7SM2",30,0)
 F  S LA7I=$O(^LAHM(62.8,+LA7SM,10,"UID",LA7UID,LA7I)) Q:'LA7I  D
"RTN","LA7SM2",31,0)
 . F LA7J=0,1,2 S LA7I(LA7J)=$G(^LAHM(62.8,+LA7SM,10,LA7I,LA7J))
"RTN","LA7SM2",32,0)
 . I $P(LA7I(0),"^",8)=0 Q  ; Previously "removed".
"RTN","LA7SM2",33,0)
 . I $P(LA7I(0),"^",8),$P(LA7I(0),"^",8)'=1 S LA7QUIT="1^Accession not pending shipment" Q  ; Not pending shipment
"RTN","LA7SM2",34,0)
 . S LA7TCNT=LA7TCNT+1
"RTN","LA7SM2",35,0)
 . F LA7J=1,4 I $P(LA7I(1),"^",LA7J) D
"RTN","LA7SM2",36,0)
 . . I '$P(LA7I(1),"^",LA7J+2) Q  ; No units specified
"RTN","LA7SM2",37,0)
 . . S LA7X=$S(LA7J=1:1.11,LA7J=4:1.21,1:0)
"RTN","LA7SM2",38,0)
 . . S LA7RINFO(LA7X)=$P(LA7I(1),"^",LA7J+1) ; Value
"RTN","LA7SM2",39,0)
 . . S $P(LA7RINFO(LA7X),"^",2)=$P(LA7I(1),"^",LA7J+2) ; Units
"RTN","LA7SM2",40,0)
 . . S LA7RINFO(LA7X,LA7I)=LA7RINFO(LA7X)_"^"_$P(LA7I(0),"^",2)
"RTN","LA7SM2",41,0)
 . F LA7J=1,4,8 I $P(LA7I(2),"^",LA7J) D
"RTN","LA7SM2",42,0)
 . . I '($S(LA7J=4:$P(LA7I(2),"^",7),1:$P(LA7I(2),"^",LA7J+2))) Q  ; No units specified.
"RTN","LA7SM2",43,0)
 . . S LA7X=$S(LA7J=1:2.11,LA7J=4:2.21,LA7J=8:2.31,1:0)
"RTN","LA7SM2",44,0)
 . . S LA7RINFO(LA7X)=$P(LA7I(2),"^",LA7J+1) ; Value
"RTN","LA7SM2",45,0)
 . . S $P(LA7RINFO(LA7X),"^",2)=$S(LA7J=4:$P(LA7I(2),"^",7),1:$P(LA7I(2),"^",LA7J+2)) ; Units
"RTN","LA7SM2",46,0)
 . . S LA7RINFO(LA7X,LA7I)=LA7RINFO(LA7X)_"^"_$P(LA7I(0),"^",2)
"RTN","LA7SM2",47,0)
 ;
"RTN","LA7SM2",48,0)
 I 'LA7TCNT,'LA7QUIT S LA7QUIT="1^Accession is not on this shipping manifest"
"RTN","LA7SM2",49,0)
 I '$O(LA7RINFO(0)),'LA7QUIT S LA7QUIT="1^No test needs required information for shipping"
"RTN","LA7SM2",50,0)
 I LA7QUIT Q
"RTN","LA7SM2",51,0)
 ;
"RTN","LA7SM2",52,0)
 S LA7CDT=+$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,3)),"^")
"RTN","LA7SM2",53,0)
 S LA7Y=0
"RTN","LA7SM2",54,0)
 F  S LA7Y=$O(LA7RINFO(LA7Y)) Q:'LA7Y  D  Q:LA7QUIT
"RTN","LA7SM2",55,0)
 . N DA,DIR,DIRUT
"RTN","LA7SM2",56,0)
 . S DIR(0)="62.801,"_LA7Y
"RTN","LA7SM2",57,0)
 . S DIR("A")=$$GET1^DID(62.801,LA7Y,"","LABEL")
"RTN","LA7SM2",58,0)
 . I LA7Y=2.21 D
"RTN","LA7SM2",59,0)
 . . S DIR("A",1)=" "
"RTN","LA7SM2",60,0)
 . . S DIR("A",2)="Specimen Collection Date/time: "_$$FMTE^XLFDT(LA7CDT,"M")
"RTN","LA7SM2",61,0)
 . . S $P(DIR(0),"^",3)="I Y<LA7CDT!(Y>$$NOW^XLFDT) K X" ; d/t after specimen collect d/t
"RTN","LA7SM2",62,0)
 . I LA7Y'=2.21 D
"RTN","LA7SM2",63,0)
 . . N LA7X
"RTN","LA7SM2",64,0)
 . . S LA7X=$$GET1^DIQ(64.061,$P(LA7RINFO(LA7Y),"^",2)_",",.01) ; Units
"RTN","LA7SM2",65,0)
 . . S DIR("A")=DIR("A")_" (in "_LA7X_")"
"RTN","LA7SM2",66,0)
 . I $L($P(LA7RINFO(LA7Y),"^")) D   ; Default value
"RTN","LA7SM2",67,0)
 . . I LA7Y=2.21 S DIR("B")=$$FMTE^XLFDT($P(LA7RINFO(LA7Y),"^"))
"RTN","LA7SM2",68,0)
 . . E  S DIR("B")=$P(LA7RINFO(LA7Y),"^")
"RTN","LA7SM2",69,0)
 . D ^DIR
"RTN","LA7SM2",70,0)
 . I $D(DTOUT)!$D(DUOUT) S LA7QUIT=1 Q
"RTN","LA7SM2",71,0)
 . S $P(LA7INFO(LA7Y),"^")=$P(Y,"^") ; New value
"RTN","LA7SM2",72,0)
 I LA7QUIT Q
"RTN","LA7SM2",73,0)
 ;
"RTN","LA7SM2",74,0)
 S LA7Y=0
"RTN","LA7SM2",75,0)
 F  S LA7Y=$O(LA7RINFO(LA7Y)) Q:'LA7Y  D
"RTN","LA7SM2",76,0)
 . S LA7I=0
"RTN","LA7SM2",77,0)
 . F  S LA7I=$O(LA7RINFO(LA7Y,LA7I)) Q:'LA7I  D
"RTN","LA7SM2",78,0)
 . . I $P(LA7INFO(LA7Y),"^")=$P(LA7RINFO(LA7Y,LA7I),"^") Q  ; Value unchanged
"RTN","LA7SM2",79,0)
 . . N FDA,LA7628,LA768,LA7DATA
"RTN","LA7SM2",80,0)
 . . S LA762801=LA7I_","_+LA7SM_","
"RTN","LA7SM2",81,0)
 . . I LA7Y=2.21 D
"RTN","LA7SM2",82,0)
 . . . N LA7DURT,LA7UID,LA7UNITS,LA7X
"RTN","LA7SM2",83,0)
 . . . S LA7UNITS=$$GET1^DIQ(64.061,+$P(LA7RINFO(LA7Y,LA7I),"^",2)_",",.01,"E")
"RTN","LA7SM2",84,0)
 . . . S LA7DURT=$$FMDIFF^XLFDT(LA7INFO(LA7Y),LA7CDT,2) ; Collection duration (in seconds)
"RTN","LA7SM2",85,0)
 . . . I LA7UNITS="min" S LA7DURT=$FN(LA7DURT/60,"",0) ; Convert to minutes, rounded to nearest minute.
"RTN","LA7SM2",86,0)
 . . . I LA7UNITS="hr" S LA7DURT=$FN(LA7DURT/3600,"",0) ; Convert to hours, rounded to nearest hour.
"RTN","LA7SM2",87,0)
 . . . S FDA(62.8,62.801,LA762801,2.22)=LA7DURT
"RTN","LA7SM2",88,0)
 . . S FDA(62.8,62.801,LA762801,LA7Y)=$P(LA7INFO(LA7Y),"^") ; New value
"RTN","LA7SM2",89,0)
 . . D FILE^DIE("","FDA(62.8)","LA7DIE(2)") ; Update required info
"RTN","LA7SM2",90,0)
 . . ; Update event file
"RTN","LA7SM2",91,0)
 . . S LA7DATA="SM40^"_$$NOW^XLFDT_"^"_$P(LA7RINFO(LA7Y,LA7I),"^",3)_"^"_$P(LA7SM,"^",2)
"RTN","LA7SM2",92,0)
 . . D SEUP^LA7SMU(LA7UID,2,LA7DATA)
"RTN","LA7SM2",93,0)
 Q
"RTN","LA7SM2",94,0)
 ;
"RTN","LA7SM2",95,0)
 ;
"RTN","LA7SM2",96,0)
CHKREQI(LA7628,LA762801) ; Check for required info/incomplete setup
"RTN","LA7SM2",97,0)
 ; Call with LA7628 = ien of entry in file #62.8
"RTN","LA7SM2",98,0)
 ;         LA762801 = ien of entry in file #62.8, TEST subfile
"RTN","LA7SM2",99,0)
 ;
"RTN","LA7SM2",100,0)
 ; If errors sets LA7ERR array with error messages and TMP(LA7ERR",$J)
"RTN","LA7SM2",101,0)
 ;    with specific tests.
"RTN","LA7SM2",102,0)
 ;
"RTN","LA7SM2",103,0)
 N LA7FILE,LA7FLD,LA7SCFG,LA7I,LA7J
"RTN","LA7SM2",104,0)
 ;
"RTN","LA7SM2",105,0)
 S LA7ERR=$G(LA7ERR,0)
"RTN","LA7SM2",106,0)
 S LA7628(0)=$G(^LAHM(62.8,LA7628,0))
"RTN","LA7SM2",107,0)
 S LA7SCFG=$P(LA7628(0),"^",2)
"RTN","LA7SM2",108,0)
 S LA7SCFG(0)=$G(^LAHM(62.9,LA7SCFG,0))
"RTN","LA7SM2",109,0)
 ;
"RTN","LA7SM2",110,0)
 F LA7J=0,1,2,5 S LA7I(LA7J)=$G(^LAHM(62.8,LA7628,10,LA762801,LA7J))
"RTN","LA7SM2",111,0)
 ;
"RTN","LA7SM2",112,0)
 S LA7FILE=62.801
"RTN","LA7SM2",113,0)
 ;
"RTN","LA7SM2",114,0)
 I $P(LA7I(1),"^") D
"RTN","LA7SM2",115,0)
 . F LA7J=2,3,7 I '$L($P(LA7I(1),"^",LA7J)) S LA7FLD=$S(LA7J=2:1.11,LA7J=3:1.13,1:1.14) D SETERR
"RTN","LA7SM2",116,0)
 ;
"RTN","LA7SM2",117,0)
 I $P(LA7I(1),"^",4) D
"RTN","LA7SM2",118,0)
 . F LA7J=5,6,8 I '$L($P(LA7I(1),"^",LA7J)) S LA7FLD=$S(LA7J=5:1.21,LA7J=6:1.23,1:1.24) D SETERR
"RTN","LA7SM2",119,0)
 ;
"RTN","LA7SM2",120,0)
 I $P(LA7I(2),"^") D
"RTN","LA7SM2",121,0)
 . F LA7J=2,3,11 I '$L($P(LA7I(2),"^",LA7J)) S LA7FLD=$S(LA7J=2:2.11,LA7J=3:2.13,1:2.14) D SETERR
"RTN","LA7SM2",122,0)
 ;
"RTN","LA7SM2",123,0)
 I $P(LA7I(2),"^",4) D
"RTN","LA7SM2",124,0)
 . F LA7J=5,6,7,12 I '$L($P(LA7I(2),"^",LA7J)) S LA7FLD=$S(LA7J=5:2.21,LA7J=6:2.22,LA7J=7:2.23,1:2.24) D SETERR
"RTN","LA7SM2",125,0)
 ;
"RTN","LA7SM2",126,0)
 I $P(LA7I(2),"^",8) D
"RTN","LA7SM2",127,0)
 . F LA7J=9,10,13 I '$L($P(LA7I(2),"^",LA7J)) S LA7FLD=$S(LA7J=9:2.31,LA7J=10:2.33,1:2.34) D SETERR
"RTN","LA7SM2",128,0)
 ;
"RTN","LA7SM2",129,0)
 ; Check if using non-VA codes
"RTN","LA7SM2",130,0)
 I $P(LA7628(0),"^",5) D
"RTN","LA7SM2",131,0)
 . F LA7J=1,2 I '$L($P(LA7I(5),"^",LA7J)) S LA7FLD=$S(LA7J=1:5.1,1:5.2) D SETERR
"RTN","LA7SM2",132,0)
 I '$$GET1^DIQ(60,+$P(LA7I(0),"^",2)_",",64,"I") S LA7FILE=60,LA7FLD=64 D SETERR
"RTN","LA7SM2",133,0)
 I 'LA7ERR,$O(LA7ERR(""))'="" S LA7ERR=1
"RTN","LA7SM2",134,0)
 ;
"RTN","LA7SM2",135,0)
 Q
"RTN","LA7SM2",136,0)
 ;
"RTN","LA7SM2",137,0)
 ;
"RTN","LA7SM2",138,0)
SETERR ; Set error log for entries missing values in 62.8
"RTN","LA7SM2",139,0)
 ; Called from above.
"RTN","LA7SM2",140,0)
 ;
"RTN","LA7SM2",141,0)
 S LA7ERR(LA7FILE_":"_LA7FLD)="Missing Required Info - "_$$GET1^DID(LA7FILE,LA7FLD,"","LABEL")
"RTN","LA7SM2",142,0)
 S ^TMP("LA7ERR",$J,LA7FILE_":"_LA7FLD,LA7628,$P(LA7I(0),"^",5),$P(LA7I(0),"^",2))=""
"RTN","LA7SM2",143,0)
 Q
"RTN","LA7SM2",144,0)
 ;
"RTN","LA7SM2",145,0)
 ;
"RTN","LA7SM2",146,0)
BUILDRI ; Build global with required info to print on manifest.
"RTN","LA7SM2",147,0)
 ; Called from LA7SMP
"RTN","LA7SM2",148,0)
 ;
"RTN","LA7SM2",149,0)
 N LA7I,LA7X
"RTN","LA7SM2",150,0)
 ;
"RTN","LA7SM2",151,0)
 ; No required info
"RTN","LA7SM2",152,0)
 I $G(LA762801(1))="",$G(LA762801(2))="" Q
"RTN","LA7SM2",153,0)
 ;
"RTN","LA7SM2",154,0)
 F LA7I=1,2 S LA7X(LA7I)=$G(^TMP("LA7SMRI",$J,+$P(LA762801(0),"^",7),+$P(LA762801(0),"^",9),$P(LA762801(0),"^",5),LA7I))
"RTN","LA7SM2",155,0)
 ;
"RTN","LA7SM2",156,0)
 ; Check for patient required info.
"RTN","LA7SM2",157,0)
 F LA7I=1,4 I $P($G(LA762801(1)),"^",LA7I) D
"RTN","LA7SM2",158,0)
 . S $P(LA7X(1),"^",LA7I)=$P(LA762801(1),"^",LA7I)
"RTN","LA7SM2",159,0)
 . I LA7I=1 S $P(LA7X(1),"^",2,3)=$P(LA762801(1),"^",2,3) Q
"RTN","LA7SM2",160,0)
 . I LA7I=4 S $P(LA7X(1),"^",5,6)=$P(LA762801(1),"^",5,6) Q
"RTN","LA7SM2",161,0)
 ;
"RTN","LA7SM2",162,0)
 ; Check for specimen required info.
"RTN","LA7SM2",163,0)
 F LA7I=1,4,8 I $P($G(LA762801(2)),"^",LA7I) D
"RTN","LA7SM2",164,0)
 . S $P(LA7X(2),"^",LA7I)=$P(LA762801(2),"^",LA7I)
"RTN","LA7SM2",165,0)
 . I LA7I=1 S $P(LA7X(2),"^",2,3)=$P(LA762801(2),"^",2,3) Q
"RTN","LA7SM2",166,0)
 . I LA7I=4 S $P(LA7X(2),"^",5,7)=$P(LA762801(2),"^",5,7) Q
"RTN","LA7SM2",167,0)
 . I LA7I=8 S $P(LA7X(2),"^",9,10)=$P(LA762801(2),"^",9,10) Q
"RTN","LA7SM2",168,0)
 ;
"RTN","LA7SM2",169,0)
 ; Store required info for printing
"RTN","LA7SM2",170,0)
 F LA7I=1,2 I $L($G(LA7X(LA7I))) S ^TMP("LA7SMRI",$J,+$P(LA762801(0),"^",7),+$P(LA762801(0),"^",9),$P(LA762801(0),"^",5),LA7I)=LA7X(LA7I)
"RTN","LA7SM2",171,0)
 ;
"RTN","LA7SM2",172,0)
 Q
"RTN","LA7SMB")
0^3^B80842620
"RTN","LA7SMB",1,0)
LA7SMB ;DALOI/JMC - Shipping Manifest Build ;11/25/96  14:39
"RTN","LA7SMB",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46**;Sep 27, 1994
"RTN","LA7SMB",3,0)
EN ;
"RTN","LA7SMB",4,0)
 ;
"RTN","LA7SMB",5,0)
 D CLEANUP
"RTN","LA7SMB",6,0)
 S LA7QUIT=0
"RTN","LA7SMB",7,0)
 ;
"RTN","LA7SMB",8,0)
 ; Select shipping configuration
"RTN","LA7SMB",9,0)
 S LA7SCFG=$$SSCFG^LA7SUTL(1)
"RTN","LA7SMB",10,0)
 I LA7SCFG<1 D CLEANUP Q
"RTN","LA7SMB",11,0)
 ;
"RTN","LA7SMB",12,0)
 ; Determine if there's an active manifest.
"RTN","LA7SMB",13,0)
 S LA7SM=$$CHKSM^LA7SMU(+LA7SCFG)
"RTN","LA7SMB",14,0)
 I LA7SM<0 D  Q
"RTN","LA7SMB",15,0)
 . D EN^DDIOL($P(LA7SM,"^",2),"","!?5")
"RTN","LA7SMB",16,0)
 . D CLEANUP
"RTN","LA7SMB",17,0)
 ;
"RTN","LA7SMB",18,0)
 I LA7SM=0 D
"RTN","LA7SMB",19,0)
 . N DIR,DIRUT,DTOUT,X,Y
"RTN","LA7SMB",20,0)
 . S DIR(0)="YO",DIR("A",1)="There's no open shipping manifest for "_$P(LA7SCFG,"^",2)
"RTN","LA7SMB",21,0)
 . S DIR("A")="Do you want to start one",DIR("B")="NO"
"RTN","LA7SMB",22,0)
 . D ^DIR
"RTN","LA7SMB",23,0)
 . I Y'=1 S LA7QUIT=1 Q
"RTN","LA7SMB",24,0)
 . S LA7SM=$$CSM^LA7SMU(+LA7SCFG)
"RTN","LA7SMB",25,0)
 . I LA7SM<1 D EN^DDIOL($P(LA7SM,"^",2),"","!?5") S LA7QUIT=1
"RTN","LA7SMB",26,0)
 ;
"RTN","LA7SMB",27,0)
 ; Only starting a new manifest, no building
"RTN","LA7SMB",28,0)
 I $G(LA7SMON) Q
"RTN","LA7SMB",29,0)
 ;
"RTN","LA7SMB",30,0)
 I LA7QUIT=1 D CLEANUP Q
"RTN","LA7SMB",31,0)
 ;
"RTN","LA7SMB",32,0)
 D ADATE^LA7SMU1
"RTN","LA7SMB",33,0)
 I LA7QUIT=1 D CLEANUP Q
"RTN","LA7SMB",34,0)
 ;
"RTN","LA7SMB",35,0)
 ; Flag to exclude previously removed tests from building.
"RTN","LA7SMB",36,0)
 S LA7EXPRV=$$ASKPREV^LA7SMU1
"RTN","LA7SMB",37,0)
 I LA7EXPRV<0 S LA7QUIT=1
"RTN","LA7SMB",38,0)
 ;
"RTN","LA7SMB",39,0)
 I LA7QUIT=1 D CLEANUP Q
"RTN","LA7SMB",40,0)
 ;
"RTN","LA7SMB",41,0)
DQ ; Taskman entry point
"RTN","LA7SMB",42,0)
 ; Build list of tests and criteria for manifest.
"RTN","LA7SMB",43,0)
 S LA7SCFG(0)=$G(^LAHM(62.9,+LA7SCFG,0))
"RTN","LA7SMB",44,0)
 I '$D(ZTQUEUED) D EN^DDIOL("Using shipping manifest# "_$P(LA7SM,"^",2),"","!?5")
"RTN","LA7SMB",45,0)
 ;
"RTN","LA7SMB",46,0)
 ; Lock this shipping manifest
"RTN","LA7SMB",47,0)
 L +^LAHM(62.8,+LA7SM,0):5
"RTN","LA7SMB",48,0)
 I '$T D  Q
"RTN","LA7SMB",49,0)
 . I '$D(ZTQUEUED) D EN^DDIOL("Unable to obtain lock for shipping manifest "_$P(LA7SCFG,"^",2),"","!?5")
"RTN","LA7SMB",50,0)
 . D CLEANUP
"RTN","LA7SMB",51,0)
 ;
"RTN","LA7SMB",52,0)
 ; Update status
"RTN","LA7SMB",53,0)
 D SMSUP^LA7SMU(LA7SM,2,"SM03")
"RTN","LA7SMB",54,0)
 S LA7SMCNT=0
"RTN","LA7SMB",55,0)
 ;
"RTN","LA7SMB",56,0)
 ; Build TMP global with test profiles
"RTN","LA7SMB",57,0)
 D SCBLD^LA7SM1(+LA7SCFG)
"RTN","LA7SMB",58,0)
 S LA7AA=""
"RTN","LA7SMB",59,0)
 F  S LA7AA=$O(^TMP("LA7SMB",$J,LA7AA)) Q:LA7AA=""  D
"RTN","LA7SMB",60,0)
 . N LA7END,LRSS
"RTN","LA7SMB",61,0)
 . I '$D(ZTQUEUED) D EN^DDIOL("Searching accession area: "_$P($G(^LRO(68,LA7AA,0)),"^"),"","!?5")
"RTN","LA7SMB",62,0)
 . ; Use selected accession date else get current accession day for this acession area
"RTN","LA7SMB",63,0)
 . I $G(LA7AA(LA7AA)) S LA7AD=$P(LA7AA(LA7AA),"^")
"RTN","LA7SMB",64,0)
 . E  S LA7AD=$$AD^LA7SUTL(LA7AA)
"RTN","LA7SMB",65,0)
 . S LRSS=$P($G(^LRO(68,LA7AA,0)),"^",2)
"RTN","LA7SMB",66,0)
 . S LA7AN=+$P($G(LA7AA(LA7AA)),"^",2),LA7LAN=+$P($G(LA7AA(LA7AA)),"^",3),LA7END=0
"RTN","LA7SMB",67,0)
 . I LA7AN S LA7AN=LA7AN-1
"RTN","LA7SMB",68,0)
 . F  S LA7AN=$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN)) Q:'LA7AN!(LA7END)  D SCAN
"RTN","LA7SMB",69,0)
 ;
"RTN","LA7SMB",70,0)
 ; Update status
"RTN","LA7SMB",71,0)
 D SMSUP^LA7SMU(LA7SM,1,"SM02")
"RTN","LA7SMB",72,0)
 ;
"RTN","LA7SMB",73,0)
 ; Release lock on this shipping manifest
"RTN","LA7SMB",74,0)
 L -^LAHM(62.8,+LA7SM,0)
"RTN","LA7SMB",75,0)
 ;
"RTN","LA7SMB",76,0)
 I '$D(ZTQUEUED) D
"RTN","LA7SMB",77,0)
 . N DIR,DIRUT,DIROUT,DTOUT,X,Y
"RTN","LA7SMB",78,0)
 . D EN^DDIOL("There were "_$S(LA7SMCNT:LA7SMCNT,1:"NO")_" specimens added","","!?5")
"RTN","LA7SMB",79,0)
 . D ASK^LA7SMP(LA7SM)
"RTN","LA7SMB",80,0)
 D CLEANUP
"RTN","LA7SMB",81,0)
 Q
"RTN","LA7SMB",82,0)
 ;
"RTN","LA7SMB",83,0)
SMONLY ; Start a shipping manifest only, no building
"RTN","LA7SMB",84,0)
 ;
"RTN","LA7SMB",85,0)
 N LA7SMON
"RTN","LA7SMB",86,0)
 S LA7SMON=1
"RTN","LA7SMB",87,0)
 D EN
"RTN","LA7SMB",88,0)
 I LA7SM>0 D EN^DDIOL("Shipping manifest# "_$P(LA7SM,"^",2)_" is available","","!?5")
"RTN","LA7SMB",89,0)
 ;D CLEANUP
"RTN","LA7SMB",90,0)
 Q
"RTN","LA7SMB",91,0)
 ;
"RTN","LA7SMB",92,0)
 ;
"RTN","LA7SMB",93,0)
SCAN ; Scan accession for tests to build
"RTN","LA7SMB",94,0)
 ;
"RTN","LA7SMB",95,0)
 N LA76805,LA7DIV,LA7END
"RTN","LA7SMB",96,0)
 ;
"RTN","LA7SMB",97,0)
 I LA7LAN,LA7AN>LA7LAN S LA7END=1 Q
"RTN","LA7SMB",98,0)
 ;
"RTN","LA7SMB",99,0)
 ; Don't build controls
"RTN","LA7SMB",100,0)
 I $P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)),"^",2)=62.3 Q
"RTN","LA7SMB",101,0)
 ;
"RTN","LA7SMB",102,0)
 ; Don't build uncollected specimens
"RTN","LA7SMB",103,0)
 I '$P(LA7SCFG(0),"^",14),'$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,3)),"^",3) Q
"RTN","LA7SMB",104,0)
 ;
"RTN","LA7SMB",105,0)
 ; Get Specimen type - if no specimen then quit
"RTN","LA7SMB",106,0)
 ; Anatomic path does not store specimen type in #68.
"RTN","LA7SMB",107,0)
 S LA76805=""
"RTN","LA7SMB",108,0)
 I "CY^EM^SP"[LRSS S LA76805=0
"RTN","LA7SMB",109,0)
 E  D
"RTN","LA7SMB",110,0)
 . S X=+$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,5,0))
"RTN","LA7SMB",111,0)
 . I 'X Q
"RTN","LA7SMB",112,0)
 . S LA76805=+$G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,5,X,0))
"RTN","LA7SMB",113,0)
 I LA76805="" Q
"RTN","LA7SMB",114,0)
 ;
"RTN","LA7SMB",115,0)
 ; Accession's division
"RTN","LA7SMB",116,0)
 S LA7DIV=+$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,.4)),"^")
"RTN","LA7SMB",117,0)
 ;
"RTN","LA7SMB",118,0)
 S LA760=0
"RTN","LA7SMB",119,0)
 F  S LA760=$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA760)) Q:'LA760  D
"RTN","LA7SMB",120,0)
 . ; Not looking for this test.
"RTN","LA7SMB",121,0)
 . I '$D(^TMP("LA7SMB",$J,LA7AA,LA760)) Q
"RTN","LA7SMB",122,0)
 . ; Set lock.
"RTN","LA7SMB",123,0)
 . D LOCK68
"RTN","LA7SMB",124,0)
 . ; NOTE *** Do NOT add any "QUIT" after this point unless releasing LOCK set above ***.
"RTN","LA7SMB",125,0)
 . ; Test's zeroth node.
"RTN","LA7SMB",126,0)
 . S LA760(0)=$G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA760,0))
"RTN","LA7SMB",127,0)
 . ; Test completed - skip
"RTN","LA7SMB",128,0)
 . I "CY^EM^SP"'[LRSS,$P(LA760(0),"^",5) D UNLOCK68 Q
"RTN","LA7SMB",129,0)
 . ; Test already on shipping manifest - skip
"RTN","LA7SMB",130,0)
 . I $P(LA760(0),"^",10) D UNLOCK68 Q
"RTN","LA7SMB",131,0)
 . ; Previously removed - skip
"RTN","LA7SMB",132,0)
 . I LA7EXPRV,$$PREV^LA7SMU1($P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,.3)),"^"),$P(LA760(0),"^")) D UNLOCK68 Q
"RTN","LA7SMB",133,0)
 . ; Test urgency
"RTN","LA7SMB",134,0)
 . S LA76205=+$P(LA760(0),"^",2)
"RTN","LA7SMB",135,0)
 . I LA76205>49 S LA76205=$S(LA76205=50:9,1:LA76205-50)
"RTN","LA7SMB",136,0)
 . ; Check if test is eligible for manifest
"RTN","LA7SMB",137,0)
 . D SCHK^LA7SM1
"RTN","LA7SMB",138,0)
 . I LA7FLAG S LA7FLAG=$$CKTEST(LA7AA,LA7AD,LA7AN,LA760)
"RTN","LA7SMB",139,0)
 . ; Add test to shipping manifest.
"RTN","LA7SMB",140,0)
 . I LA7FLAG D
"RTN","LA7SMB",141,0)
 . . S LA7I=0
"RTN","LA7SMB",142,0)
 . . F  S LA7I=$O(LA7X(LA7I)) Q:'LA7I  D ADD
"RTN","LA7SMB",143,0)
 . ; Release lock.
"RTN","LA7SMB",144,0)
 . D UNLOCK68
"RTN","LA7SMB",145,0)
 Q
"RTN","LA7SMB",146,0)
 ;
"RTN","LA7SMB",147,0)
ADD ; Add test to shipping manifest
"RTN","LA7SMB",148,0)
 ; Called from above, LA7SM
"RTN","LA7SMB",149,0)
 ; Lock on ^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA760) should be set before entering here.
"RTN","LA7SMB",150,0)
 ;
"RTN","LA7SMB",151,0)
 N FDA,LA7628,LA768,LA7DATA
"RTN","LA7SMB",152,0)
 ;
"RTN","LA7SMB",153,0)
 S LRDFN=+$G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0))
"RTN","LA7SMB",154,0)
 S LA7UID=$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,.3)),"^")
"RTN","LA7SMB",155,0)
 S LA7SMCNT=$G(LA7SMCNT)+1
"RTN","LA7SMB",156,0)
 S ^TMP("LA7SMADD",$J,LA7SMCNT)=LRDFN_"^"_LA760_"^"_LA76805_"^"_LA76205_"^"_LA7UID
"RTN","LA7SMB",157,0)
 S LA7628(1)=+LA7SM
"RTN","LA7SMB",158,0)
 S FDA(2,62.801,"+2,"_+LA7SM_",",.01)=LRDFN
"RTN","LA7SMB",159,0)
 S FDA(2,62.801,"+2,"_+LA7SM_",",.02)=LA760
"RTN","LA7SMB",160,0)
 I LA76805 S FDA(2,62.801,"+2,"_+LA7SM_",",.03)=LA76805
"RTN","LA7SMB",161,0)
 S FDA(2,62.801,"+2,"_+LA7SM_",",.04)=LA76205
"RTN","LA7SMB",162,0)
 S FDA(2,62.801,"+2,"_+LA7SM_",",.05)=LA7UID
"RTN","LA7SMB",163,0)
 I $P($G(LA7X(LA7I,0)),"^",5) S FDA(2,62.801,"+2,"_+LA7SM_",",.06)=$P($G(LA7X(LA7I,0)),"^",5)
"RTN","LA7SMB",164,0)
 I $P($G(LA7X(LA7I,0)),"^",6) S FDA(2,62.801,"+2,"_+LA7SM_",",.07)=$P($G(LA7X(LA7I,0)),"^",6)
"RTN","LA7SMB",165,0)
 S FDA(2,62.801,"+2,"_+LA7SM_",",.08)=1
"RTN","LA7SMB",166,0)
 I $P($G(LA7X(LA7I,0)),"^",7) S FDA(2,62.801,"+2,"_+LA7SM_",",.09)=$P($G(LA7X(LA7I,0)),"^",7)
"RTN","LA7SMB",167,0)
 I $L($P($G(LA7X(LA7I,1)),"^",1)) S FDA(2,62.801,"+2,"_+LA7SM_",",1.1)=$P($G(LA7X(LA7I,1)),"^",1)
"RTN","LA7SMB",168,0)
 I $L($P($G(LA7X(LA7I,1)),"^",2)) S FDA(2,62.801,"+2,"_+LA7SM_",",1.13)=$P($G(LA7X(LA7I,1)),"^",2)
"RTN","LA7SMB",169,0)
 I $L($P($G(LA7X(LA7I,1)),"^",5)) S FDA(2,62.801,"+2,"_+LA7SM_",",1.14)=$P($G(LA7X(LA7I,1)),"^",5)
"RTN","LA7SMB",170,0)
 I $L($P($G(LA7X(LA7I,1)),"^",3)) S FDA(2,62.801,"+2,"_+LA7SM_",",1.2)=$P($G(LA7X(LA7I,1)),"^",3)
"RTN","LA7SMB",171,0)
 I $L($P($G(LA7X(LA7I,1)),"^",4)) S FDA(2,62.801,"+2,"_+LA7SM_",",1.23)=$P($G(LA7X(LA7I,1)),"^",4)
"RTN","LA7SMB",172,0)
 I $L($P($G(LA7X(LA7I,1)),"^",6)) S FDA(2,62.801,"+2,"_+LA7SM_",",1.24)=$P($G(LA7X(LA7I,1)),"^",6)
"RTN","LA7SMB",173,0)
 I $L($P($G(LA7X(LA7I,2)),"^",1)) S FDA(2,62.801,"+2,"_+LA7SM_",",2.1)=$P($G(LA7X(LA7I,2)),"^",1)
"RTN","LA7SMB",174,0)
 I $L($P($G(LA7X(LA7I,2)),"^",2)) S FDA(2,62.801,"+2,"_+LA7SM_",",2.13)=$P($G(LA7X(LA7I,2)),"^",2)
"RTN","LA7SMB",175,0)
 I $L($P($G(LA7X(LA7I,2)),"^",7)) S FDA(2,62.801,"+2,"_+LA7SM_",",2.14)=$P($G(LA7X(LA7I,2)),"^",7)
"RTN","LA7SMB",176,0)
 I $L($P($G(LA7X(LA7I,2)),"^",3)) S FDA(2,62.801,"+2,"_+LA7SM_",",2.2)=$P($G(LA7X(LA7I,2)),"^",3)
"RTN","LA7SMB",177,0)
 I $L($P($G(LA7X(LA7I,2)),"^",4)) S FDA(2,62.801,"+2,"_+LA7SM_",",2.23)=$P($G(LA7X(LA7I,2)),"^",4)
"RTN","LA7SMB",178,0)
 I $L($P($G(LA7X(LA7I,2)),"^",8)) S FDA(2,62.801,"+2,"_+LA7SM_",",2.24)=$P($G(LA7X(LA7I,2)),"^",8)
"RTN","LA7SMB",179,0)
 I $L($P($G(LA7X(LA7I,2)),"^",5)) S FDA(2,62.801,"+2,"_+LA7SM_",",2.3)=$P($G(LA7X(LA7I,2)),"^",5)
"RTN","LA7SMB",180,0)
 I $L($P($G(LA7X(LA7I,2)),"^",6)) S FDA(2,62.801,"+2,"_+LA7SM_",",2.33)=$P($G(LA7X(LA7I,2)),"^",6)
"RTN","LA7SMB",181,0)
 I $L($P($G(LA7X(LA7I,2)),"^",9)) S FDA(2,62.801,"+2,"_+LA7SM_",",2.34)=$P($G(LA7X(LA7I,2)),"^",9)
"RTN","LA7SMB",182,0)
 I $L($P($G(LA7X(LA7I,5)),"^",1)) S FDA(2,62.801,"+2,"_+LA7SM_",",5.1)=$P($G(LA7X(LA7I,5)),"^",1)
"RTN","LA7SMB",183,0)
 I $L($P($G(LA7X(LA7I,5)),"^",2)) S FDA(2,62.801,"+2,"_+LA7SM_",",5.2)=$P($G(LA7X(LA7I,5)),"^",2)
"RTN","LA7SMB",184,0)
 D UPDATE^DIE("","FDA(2)","LA7628","LA7DIE(2)") ; Add test to shipping manifest
"RTN","LA7SMB",185,0)
 ;
"RTN","LA7SMB",186,0)
 ; Update event file
"RTN","LA7SMB",187,0)
 S LA7DATA="SM50^"_$$NOW^XLFDT_"^"_LA760_"^"_$P(LA7SM,"^",2)
"RTN","LA7SMB",188,0)
 D SEUP^LA7SMU(LA7UID,2,LA7DATA)
"RTN","LA7SMB",189,0)
 ;
"RTN","LA7SMB",190,0)
 ; Update accession
"RTN","LA7SMB",191,0)
 D ACCSUP^LA7SMU(LA7UID,LA760,+LA7SM)
"RTN","LA7SMB",192,0)
 Q
"RTN","LA7SMB",193,0)
 ;
"RTN","LA7SMB",194,0)
 ;
"RTN","LA7SMB",195,0)
CKTEST(LA7AA,LA7AD,LA7AN,LA760) ; Check other tests on accession if test is part of another panel that
"RTN","LA7SMB",196,0)
 ; has been flagged for shipping.
"RTN","LA7SMB",197,0)
 ; Call with LA7AA = ien of accession area.
"RTN","LA7SMB",198,0)
 ;           LA7AD = accession date
"RTN","LA7SMB",199,0)
 ;           LA7AN = accession number
"RTN","LA7SMB",200,0)
 ;           LA760 = ien of lab test
"RTN","LA7SMB",201,0)
 ; Returns   LA7FLAG = 0 (part of another panel)
"RTN","LA7SMB",202,0)
 ;                   = 1 (not part of another panel)
"RTN","LA7SMB",203,0)
 ;
"RTN","LA7SMB",204,0)
 N LA7FLAG,LA7PCNT,LA7K,LA7J,X
"RTN","LA7SMB",205,0)
 ;
"RTN","LA7SMB",206,0)
 K ^TMP("LA7TREE",$J)
"RTN","LA7SMB",207,0)
 ;
"RTN","LA7SMB",208,0)
 S LA7FLAG=1
"RTN","LA7SMB",209,0)
 S LA7AD(LA7AD)=""
"RTN","LA7SMB",210,0)
 S LA7K=+$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)),"^",3)
"RTN","LA7SMB",211,0)
 ;
"RTN","LA7SMB",212,0)
 I LA7K D
"RTN","LA7SMB",213,0)
 . ; Check original accession date.
"RTN","LA7SMB",214,0)
 . S LA7AD(LA7K)=""
"RTN","LA7SMB",215,0)
 . ; Check rollover accession
"RTN","LA7SMB",216,0)
 . I $P($G(^LRO(68,LA7AA,1,LA7K,1,LA7AN,9)),"^") S LA7AD($P($G(^LRO(68,LA7AA,1,LA7K,1,LA7AN,9)),"^"))=""
"RTN","LA7SMB",217,0)
 S LA7AD=0
"RTN","LA7SMB",218,0)
 F  S LA7AD=$O(LA7AD(LA7AD)) Q:'LA7AD  D
"RTN","LA7SMB",219,0)
 . S LA7J=0
"RTN","LA7SMB",220,0)
 . F  S LA7J=$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA7J)) Q:'LA7J  D
"RTN","LA7SMB",221,0)
 . . I LA7J=LA760 Q
"RTN","LA7SMB",222,0)
 . . ; Not on manifest
"RTN","LA7SMB",223,0)
 . . I '$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA7J,0)),"^",10) Q
"RTN","LA7SMB",224,0)
 . . S LA7PCNT=0 D UNWIND(LA7J)
"RTN","LA7SMB",225,0)
 ;
"RTN","LA7SMB",226,0)
 ; Test is part of another test previously shipped.
"RTN","LA7SMB",227,0)
 I $D(^TMP("LA7TREE",$J,LA760)) S LA7FLAG=0
"RTN","LA7SMB",228,0)
 ;
"RTN","LA7SMB",229,0)
 K ^TMP("LA7TREE",$J)
"RTN","LA7SMB",230,0)
 ;
"RTN","LA7SMB",231,0)
 Q LA7FLAG
"RTN","LA7SMB",232,0)
 ;
"RTN","LA7SMB",233,0)
UNWIND(LA760) ; Unwind profile - set tests into global ^TMP("LA7TREE",$J).
"RTN","LA7SMB",234,0)
 ; Initialize variable LA7PCNT=0 before calling.
"RTN","LA7SMB",235,0)
 ; Kill ^TMP("LA7TREE",$J) before calling.
"RTN","LA7SMB",236,0)
 ;
"RTN","LA7SMB",237,0)
 N I,II
"RTN","LA7SMB",238,0)
 ;
"RTN","LA7SMB",239,0)
 ; Recursive panel, caught in a loop.
"RTN","LA7SMB",240,0)
 I $G(LA7PCNT)>50 Q
"RTN","LA7SMB",241,0)
 ; Test does not exist in file 60.
"RTN","LA7SMB",242,0)
 I '$D(^LAB(60,LA760,0)) Q
"RTN","LA7SMB",243,0)
 ; Bypass "workload" type tests.
"RTN","LA7SMB",244,0)
 I $P(^LAB(60,LA760,0),"^",4)="WK" Q
"RTN","LA7SMB",245,0)
 ; Atomic test
"RTN","LA7SMB",246,0)
 I $L($P(^LAB(60,LA760,0),"^",5)) S ^TMP("LA7TREE",$J,LA760)="" Q
"RTN","LA7SMB",247,0)
 ; Check panels
"RTN","LA7SMB",248,0)
 I $O(^LAB(60,LA760,2,0)) D
"RTN","LA7SMB",249,0)
 . ; Increment panel counter.
"RTN","LA7SMB",250,0)
 . S LA7PCNT=$G(LA7PCNT)+1
"RTN","LA7SMB",251,0)
 . S I=0
"RTN","LA7SMB",252,0)
 . ; Expand test on panel.
"RTN","LA7SMB",253,0)
 . F  S I=$O(^LAB(60,LA760,2,I)) Q:'I  D
"RTN","LA7SMB",254,0)
 . . ; IEN of test on panel.
"RTN","LA7SMB",255,0)
 . . S II=+$G(^LAB(60,LA760,2,I,0))
"RTN","LA7SMB",256,0)
 . . ; Recursive panel, panel calls itself.
"RTN","LA7SMB",257,0)
 . . I II,II=LA760 Q
"RTN","LA7SMB",258,0)
 . . I II S ^TMP("LA7TREE",$J,LA760)="" D UNWIND(II)
"RTN","LA7SMB",259,0)
 Q
"RTN","LA7SMB",260,0)
 ;
"RTN","LA7SMB",261,0)
LOCK68 ; Lock entry in file 68
"RTN","LA7SMB",262,0)
 ; Called from above, LA7SM
"RTN","LA7SMB",263,0)
 ;
"RTN","LA7SMB",264,0)
 L +^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA760):9999 ; Set lock.
"RTN","LA7SMB",265,0)
 ;
"RTN","LA7SMB",266,0)
 Q
"RTN","LA7SMB",267,0)
 ;
"RTN","LA7SMB",268,0)
UNLOCK68 ; Unlock entry in file 68
"RTN","LA7SMB",269,0)
 ; Called from above, LA7SM
"RTN","LA7SMB",270,0)
 ;
"RTN","LA7SMB",271,0)
 L -^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA760) ; Release lock.
"RTN","LA7SMB",272,0)
 ;
"RTN","LA7SMB",273,0)
 Q
"RTN","LA7SMB",274,0)
 ;
"RTN","LA7SMB",275,0)
CLEANUP ; Cleanup variables
"RTN","LA7SMB",276,0)
 ;
"RTN","LA7SMB",277,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7SMB",278,0)
 ;
"RTN","LA7SMB",279,0)
 K ^TMP("LA7SMB",$J),^TMP("LA7SMADD",$J),^TMP("LA7TREE",$J)
"RTN","LA7SMB",280,0)
 ;
"RTN","LA7SMB",281,0)
 K LA760,LA76205,LA76805,LA7AA,LA7AD,LA7AN,LA7EXPRV,LA7FLAG,LA7LAN,LA7PCNT,LA7QUIT,LA7SCFG,LA7SM,LA7SMCNT,LA7UID,LA7X
"RTN","LA7SMB",282,0)
 K LRDFN
"RTN","LA7SMB",283,0)
 Q
"RTN","LA7SMP")
0^8^B57057060
"RTN","LA7SMP",1,0)
LA7SMP ;DALOI/JMC - Shipping Manifest Print ;11/25/96  14:39
"RTN","LA7SMP",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,45,46**;Sep 27, 1994
"RTN","LA7SMP",3,0)
EN ;
"RTN","LA7SMP",4,0)
 D EN^DDIOL("Print Shipping Manifest","","!!")
"RTN","LA7SMP",5,0)
 D KILL^LA7SMP0
"RTN","LA7SMP",6,0)
 D INIT^LA7SMP0
"RTN","LA7SMP",7,0)
 I LA7QUIT D KILL^LA7SMP0 Q
"RTN","LA7SMP",8,0)
 S LA7SM=$$SELSM^LA7SMU(+LA7SCFG)
"RTN","LA7SMP",9,0)
 I LA7SM<0 D  Q
"RTN","LA7SMP",10,0)
 . D EN^DDIOL($P(LA7SM,"^",2),"","!?5")
"RTN","LA7SMP",11,0)
 . D KILL^LA7SMP0
"RTN","LA7SMP",12,0)
 S LA7CHK=1 ; flag to check for missing info.
"RTN","LA7SMP",13,0)
 W !
"RTN","LA7SMP",14,0)
 D DEV
"RTN","LA7SMP",15,0)
 D END^LA7SMP0
"RTN","LA7SMP",16,0)
 Q
"RTN","LA7SMP",17,0)
 ;
"RTN","LA7SMP",18,0)
 ;
"RTN","LA7SMP",19,0)
DEV ; Alternate entry point when user has already selected a manifest.
"RTN","LA7SMP",20,0)
 ;
"RTN","LA7SMP",21,0)
 ; Determine if bar codes on manifest
"RTN","LA7SMP",22,0)
 S LA7SBC=$$GET1^DIQ(62.9,+LA7SCFG_",",.09,"I")
"RTN","LA7SMP",23,0)
 ;
"RTN","LA7SMP",24,0)
 ; If not in shipping status then don't print, save paper
"RTN","LA7SMP",25,0)
 I $P($G(^LAHM(62.8,+LA7SM,0)),"^",3)<4 S LA7SBC=0
"RTN","LA7SMP",26,0)
 ;
"RTN","LA7SMP",27,0)
 I $P($G(^LAHM(62.8,+LA7SM,0)),"^",3)=4 D
"RTN","LA7SMP",28,0)
 . N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SMP",29,0)
 . S DIR(0)="YO",DIR("A")="Print barcodes on manifest",DIR("B")="YES"
"RTN","LA7SMP",30,0)
 . D ^DIR
"RTN","LA7SMP",31,0)
 . I $D(DIRUT) S LA7EXIT=1
"RTN","LA7SMP",32,0)
 . I Y'=1 S LA7SBC=0
"RTN","LA7SMP",33,0)
 ;
"RTN","LA7SMP",34,0)
 I $G(LA7EXIT) Q
"RTN","LA7SMP",35,0)
 ;
"RTN","LA7SMP",36,0)
 S %ZIS="MQ" D ^%ZIS
"RTN","LA7SMP",37,0)
 I POP D  Q
"RTN","LA7SMP",38,0)
 . D HOME^%ZIS
"RTN","LA7SMP",39,0)
 . S LA7EXIT=1
"RTN","LA7SMP",40,0)
 I $D(IO("Q")) D  Q
"RTN","LA7SMP",41,0)
 . N ZTDTH,ZTSK,ZTRTN,ZTIO,ZTSAVE
"RTN","LA7SMP",42,0)
 . S ZTRTN="DQ^LA7SMP",ZTSAVE("LA7*")="",ZTDESC="Lab Shipping Manifest Print"
"RTN","LA7SMP",43,0)
 . D ^%ZTLOAD,^%ZISC
"RTN","LA7SMP",44,0)
 . D EN^DDIOL("Request "_$S($G(ZTSK):"queued - Task #"_ZTSK,1:"NOT queued"),"","!")
"RTN","LA7SMP",45,0)
 . S LA7EXIT=1
"RTN","LA7SMP",46,0)
DQ ;
"RTN","LA7SMP",47,0)
 ;
"RTN","LA7SMP",48,0)
 U IO
"RTN","LA7SMP",49,0)
 ;
"RTN","LA7SMP",50,0)
 S LA7SM(0)=$G(^LAHM(62.8,+LA7SM,0))
"RTN","LA7SMP",51,0)
 S LA7SCFG=+$P(LA7SM(0),"^",2),LA7SCFG(0)=$G(^LAHM(62.9,LA7SCFG,0))
"RTN","LA7SMP",52,0)
 S (LA7DC,LA7EXIT,LA7END,LA7ITEM,LA7PAGE,LA7SMR,LA760,LA762801)=0
"RTN","LA7SMP",53,0)
 ;
"RTN","LA7SMP",54,0)
 ; Get collecting site's names and station numbers
"RTN","LA7SMP",55,0)
 D GETSITE^LA7SMP($P(LA7SCFG(0),"^",2),$P(LA7SCFG(0),"^",3),.LA7FSITE,.LA7TSITE)
"RTN","LA7SMP",56,0)
 ;
"RTN","LA7SMP",57,0)
 ; Flag - skip if accession deleted
"RTN","LA7SMP",58,0)
 S LA7SKIP=0
"RTN","LA7SMP",59,0)
 ; Check manifest for missing info.
"RTN","LA7SMP",60,0)
 I $G(LA7CHK)="" S LA7CHK=1
"RTN","LA7SMP",61,0)
 ;
"RTN","LA7SMP",62,0)
 S LA7NOW=$$HTE^XLFDT($H,"1M")
"RTN","LA7SMP",63,0)
 ; Manifest status
"RTN","LA7SMP",64,0)
 S LA7SMST=$P(LA7SM(0),"^",3)
"RTN","LA7SMP",65,0)
 I LA7SMST=4 D
"RTN","LA7SMP",66,0)
 . ; Get shipping date
"RTN","LA7SMP",67,0)
 . S LA7SDT=$$SMED^LA7SMU(LA7SM,"SM05")
"RTN","LA7SMP",68,0)
 . ; Flag to print receipt.
"RTN","LA7SMP",69,0)
 . I IOST["P-" S LA7SMR=$P(LA7SCFG(0),"^",10)
"RTN","LA7SMP",70,0)
 ;
"RTN","LA7SMP",71,0)
 ; Set barcode flag to "off"
"RTN","LA7SMP",72,0)
 I LA7SBC,IOST'["P-" S LA7SBC=0
"RTN","LA7SMP",73,0)
 ;
"RTN","LA7SMP",74,0)
 S $P(LA7SMST,"^",2)=$$EXTERNAL^DILFD(62.8,.03,"",LA7SMST)
"RTN","LA7SMP",75,0)
 S LA7LINE="",$P(LA7LINE,"-",IOM)=""
"RTN","LA7SMP",76,0)
 S LA7SVIA=$S($P(LA7SM(0),"^",4):$$GET1^DIQ(62.92,$P(LA7SM(0),"^",4)_",",.01),1:"None Specified")
"RTN","LA7SMP",77,0)
 ;
"RTN","LA7SMP",78,0)
 F  S LA762801=$O(^LAHM(62.8,+LA7SM,10,LA762801)) Q:'LA762801  D
"RTN","LA7SMP",79,0)
 . F I=0,1,2 S LA762801(I)=$G(^LAHM(62.8,+LA7SM,10,LA762801,I))
"RTN","LA7SMP",80,0)
 . I $P(LA762801(0),"^",8)=0 Q  ; Test previously "removed".
"RTN","LA7SMP",81,0)
 . S LA7SKIP=$$CHKTST^LA7SMU(+LA7SM,LA762801)
"RTN","LA7SMP",82,0)
 . I LA7SKIP,LA7SKIP<3 Q  ; Accession/test deleted
"RTN","LA7SMP",83,0)
 . I $G(LA7CHK) D CHKREQI^LA7SM2(+LA7SM,LA762801)
"RTN","LA7SMP",84,0)
 . S ^TMP("LA7SM",$J,+$P(LA762801(0),"^",7),+$P(LA762801(0),"^",9),$P(LA762801(0),"^",5),LA762801)=""
"RTN","LA7SMP",85,0)
 . D BUILDRI^LA7SM2
"RTN","LA7SMP",86,0)
 ;
"RTN","LA7SMP",87,0)
 S (LA7SCOND,LA7SCONT,LA7UID)=""
"RTN","LA7SMP",88,0)
 ;
"RTN","LA7SMP",89,0)
 I '$D(^TMP("LA7SM",$J)) D
"RTN","LA7SMP",90,0)
 . D HED^LA7SMP0
"RTN","LA7SMP",91,0)
 . W !!,$$CJ^XLFSTR("No entries to print",IOM)
"RTN","LA7SMP",92,0)
 ;
"RTN","LA7SMP",93,0)
 S LA7ROOT="^TMP(""LA7SM"",$J)"
"RTN","LA7SMP",94,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:$QS(LA7ROOT,1)'="LA7SM"!($QS(LA7ROOT,2)'=$J)  D  Q:LA7EXIT
"RTN","LA7SMP",95,0)
 . I LA7EXIT Q
"RTN","LA7SMP",96,0)
 . I $L(LA7UID),LA7UID'=$QS(LA7ROOT,5) W !,LA7LINE
"RTN","LA7SMP",97,0)
 . I LA7SCOND'=$QS(LA7ROOT,3)!(LA7SCONT'=$QS(LA7ROOT,4)) D  Q:LA7EXIT
"RTN","LA7SMP",98,0)
 . . I $L(LA7UID),LA7UID=$QS(LA7ROOT,5) W !,LA7LINE
"RTN","LA7SMP",99,0)
 . . I LA7PAGE,+LA7SMST'=4 W ! D WARN^LA7SMP0
"RTN","LA7SMP",100,0)
 . . S LA7SCOND=$QS(LA7ROOT,3),LA7SCONT=$QS(LA7ROOT,4)
"RTN","LA7SMP",101,0)
 . . D HED^LA7SMP0 S LA7UID=""
"RTN","LA7SMP",102,0)
 . S LA762801=$QS(LA7ROOT,6)
"RTN","LA7SMP",103,0)
 . F I=0,2,5 S LA762801(I)=$G(^LAHM(62.8,+LA7SM,10,LA762801,I))
"RTN","LA7SMP",104,0)
 . S LA760=+$P(LA762801(0),"^",2) ; File #60 test ien
"RTN","LA7SMP",105,0)
 . I LA7UID'=$QS(LA7ROOT,5) D  Q:LA7EXIT
"RTN","LA7SMP",106,0)
 . . S LA7UID=$QS(LA7ROOT,5)
"RTN","LA7SMP",107,0)
 . . S LRDFN=+LA762801(0) D PTID^LA7SMP0
"RTN","LA7SMP",108,0)
 . . S X=$Q(^LRO(68,"C",LA7UID))
"RTN","LA7SMP",109,0)
 . . I LA7UID'=$QS(X,3) S LA7SKIP=1 ; Skip - UID missing.
"RTN","LA7SMP",110,0)
 . . S LA7AA=+$QS(X,4),LA7AD=+$QS(X,5),LA7AN=+$QS(X,6)
"RTN","LA7SMP",111,0)
 . . S LA7SKIP=$$CHKTST^LA7SMU(+LA7SM,LA762801)
"RTN","LA7SMP",112,0)
 . . I LA7SKIP,LA7SKIP<3 Q  ; Skip - accession/test deleted.
"RTN","LA7SMP",113,0)
 . . S LA7ACC=$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,.2),"Accession not available"),"^")
"RTN","LA7SMP",114,0)
 . . S LA7DOC=$$PRAC^LRX($P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0),"Not available"),U,8))
"RTN","LA7SMP",115,0)
 . . S LA7CDT=$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,3),"Not available"),U,1)
"RTN","LA7SMP",116,0)
 . . S LA7SPEC=$G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,5,1,0),"Not available")
"RTN","LA7SMP",117,0)
 . . I LA7SPEC S LA7SPEC(0)=$G(^LAB(61,+LA7SPEC,0))
"RTN","LA7SMP",118,0)
 . . E  S LA7SPEC(0)="Specimen info not assigned"
"RTN","LA7SMP",119,0)
 . . S LA7ITEM=LA7ITEM+1
"RTN","LA7SMP",120,0)
 . . I ($Y+12)>IOSL D  Q:LA7EXIT
"RTN","LA7SMP",121,0)
 . . . W !
"RTN","LA7SMP",122,0)
 . . . I +LA7SMST'=4 D WARN^LA7SMP0
"RTN","LA7SMP",123,0)
 . . . D HED^LA7SMP0
"RTN","LA7SMP",124,0)
 . . D SH^LA7SMP0
"RTN","LA7SMP",125,0)
 . I LA7SKIP,LA7SKIP<3 Q  ; Skip - accession/test deleted.
"RTN","LA7SMP",126,0)
 . I ($Y+6)>IOSL D  Q:LA7EXIT
"RTN","LA7SMP",127,0)
 . . W !,LA7LINE
"RTN","LA7SMP",128,0)
 . . I +LA7SMST'=4 W ! D WARN^LA7SMP0
"RTN","LA7SMP",129,0)
 . . D HED^LA7SMP0 Q:LA7EXIT
"RTN","LA7SMP",130,0)
 . . S LA7DC=1 D SH^LA7SMP0
"RTN","LA7SMP",131,0)
 . W !,?11,$E(LA7LINE,1,41)
"RTN","LA7SMP",132,0)
 . W !,?11,$P(^LAB(60,LA760,0),"^",1),?43,$P(LA7SPEC(0),"^")
"RTN","LA7SMP",133,0)
 . I +LA7SMST'=4 D
"RTN","LA7SMP",134,0)
 . . N LA7TCOST
"RTN","LA7SMP",135,0)
 . . S LA7TCOST=$$GET1^DIQ(60,LA760_",",1,"E") Q:'$L(LA7TCOST)
"RTN","LA7SMP",136,0)
 . . W:$X>(IOM-15) ! W ?(IOM-15)," Cost: $",$FN(LA7TCOST,",",2)
"RTN","LA7SMP",137,0)
 . W !,?13,"VA NLT Code [Name]: "
"RTN","LA7SMP",138,0)
 . S LA7NLT=$$GET1^DIQ(64,+$$GET1^DIQ(60,LA760_",",64,"I")_",",1) ; NLT code.
"RTN","LA7SMP",139,0)
 . W $S($L(LA7NLT):LA7NLT,1:"*** None specified ***")
"RTN","LA7SMP",140,0)
 . S LA7NLTN=""
"RTN","LA7SMP",141,0)
 . I $L(LA7NLT) S LA7NLTN=$$GET1^DIQ(64,+$$GET1^DIQ(60,LA760_",",64,"I")_",",.01) ; NLT code test name.
"RTN","LA7SMP",142,0)
 . I $L(LA7NLTN) W:($X+$L(LA7NLTN)+3)>IOM !,?32 W " [",LA7NLTN,"]"
"RTN","LA7SMP",143,0)
 . I $P(LA7SM(0),"^",5) D  ; Print non-VA test code info
"RTN","LA7SMP",144,0)
 . . N LA7X,LA7Y,LA7Z
"RTN","LA7SMP",145,0)
 . . S LA7X=$P($G(^DIC(4,+$P(LA7SCFG(0),"^",3),0),"UNKNOWN"),"^",1)_" Order Code [Name]: "
"RTN","LA7SMP",146,0)
 . . W !,?11,LA7X,$S($L($P(LA762801(5),"^")):$P(LA762801(5),"^"),1:"*** None specified ***")," "
"RTN","LA7SMP",147,0)
 . . S LA7Y="["_$S($L($P(LA762801(5),"^",2)):$P(LA762801(5),"^",2),1:"*** None specified ***")_"]"
"RTN","LA7SMP",148,0)
 . . I $L(LA7Y)<(IOM-$X) W LA7Y Q
"RTN","LA7SMP",149,0)
 . . S LA7X=IOM-$X W $E(LA7Y,1,LA7X)
"RTN","LA7SMP",150,0)
 . . S LA7Y=$E(LA7Y,LA7X+1,$L(LA7Y)),LA7Z=IOM-11
"RTN","LA7SMP",151,0)
 . . F  S LA7X=$E(LA7Y,1,LA7Z) Q:LA7X=""  W !,?11,LA7X S LA7Y=$E(LA7Y,LA7Z+1,$L(LA7Y))
"RTN","LA7SMP",152,0)
 ;
"RTN","LA7SMP",153,0)
 I LA7EXIT Q
"RTN","LA7SMP",154,0)
 ;
"RTN","LA7SMP",155,0)
 W !,LA7LINE,!!,"End of Shipping Manifest"
"RTN","LA7SMP",156,0)
 ;
"RTN","LA7SMP",157,0)
 I +LA7SMST'=4 D
"RTN","LA7SMP",158,0)
 . I IOM<131 W !
"RTN","LA7SMP",159,0)
 . D WARN^LA7SMP0
"RTN","LA7SMP",160,0)
 ;
"RTN","LA7SMP",161,0)
 ; Print shipping manifest receipt.
"RTN","LA7SMP",162,0)
 I LA7SMR D
"RTN","LA7SMP",163,0)
 . ; Flag that we're now printing receipt
"RTN","LA7SMP",164,0)
 . S $P(LA7SMR,"^",2)=1
"RTN","LA7SMP",165,0)
 . D HED^LA7SMP0
"RTN","LA7SMP",166,0)
 . W !!,"Number of specimens: ",LA7ITEM
"RTN","LA7SMP",167,0)
 . W !!,"Receipted by: ",$$REPEAT^XLFSTR("_",40)
"RTN","LA7SMP",168,0)
 . W !!,"   Date/time: ",$$REPEAT^XLFSTR("_",20)
"RTN","LA7SMP",169,0)
 ;
"RTN","LA7SMP",170,0)
 ; Print error listing if any.
"RTN","LA7SMP",171,0)
 I $O(LA7ERR(""))'="" D
"RTN","LA7SMP",172,0)
 . S $P(LA7SMR,"^",2)=2 ; Flag printing of error listing
"RTN","LA7SMP",173,0)
 . D HED^LA7SMP0
"RTN","LA7SMP",174,0)
 . S LA7I=0
"RTN","LA7SMP",175,0)
 . F  S LA7I=$O(LA7ERR(LA7I)) Q:LA7I=""  D  Q:LA7EXIT
"RTN","LA7SMP",176,0)
 . . I ($Y+6)>IOSL D HED^LA7SMP0 Q:LA7EXIT
"RTN","LA7SMP",177,0)
 . . W LA7ERR(LA7I)
"RTN","LA7SMP",178,0)
 . . S LA7ROOT="^TMP(""LA7ERR"",$J,LA7I,$P(LA7SM,""^""))"
"RTN","LA7SMP",179,0)
 . . F  S LA7ROOT=$Q(@LA7ROOT) Q:$QS(LA7ROOT,1)'="LA7ERR"!($QS(LA7ROOT,2)'=$J)!($QS(LA7ROOT,3)'=LA7I)!($QS(LA7ROOT,4)'=$P(LA7SM,"^"))  D  Q:LA7EXIT
"RTN","LA7SMP",180,0)
 . . . I ($Y+6)>IOSL D HED^LA7SMP0 Q:LA7EXIT  W LA7ERR(LA7I)," (Cont'd)"
"RTN","LA7SMP",181,0)
 . . . W !,?10,"UID: ",$QS(LA7ROOT,5),"  Test: ",$$GET1^DIQ(60,$QS(LA7ROOT,6)_",",.01)
"RTN","LA7SMP",182,0)
 . . W !!
"RTN","LA7SMP",183,0)
 ;
"RTN","LA7SMP",184,0)
 I $D(ZTQUEUED) D END^LA7SMP0
"RTN","LA7SMP",185,0)
 ;
"RTN","LA7SMP",186,0)
 Q
"RTN","LA7SMP",187,0)
 ;
"RTN","LA7SMP",188,0)
 ;
"RTN","LA7SMP",189,0)
GETSITE(LA7X,LA7Y,LA7FS,LA7TS) ; Setup variables for ordering and host sites
"RTN","LA7SMP",190,0)
 ;
"RTN","LA7SMP",191,0)
 ; Call with  LA7X = File #4 ordering site ien
"RTN","LA7SMP",192,0)
 ;            LA7Y = File #4 host site ien
"RTN","LA7SMP",193,0)
 ;            LA7FS = array to return collecting site info
"RTN","LA7SMP",194,0)
 ;            LA7TS = array to return host site info
"RTN","LA7SMP",195,0)
 ;
"RTN","LA7SMP",196,0)
 ; Get ordering site's names and station numbers
"RTN","LA7SMP",197,0)
 S LA7FS=$$GET1^DIQ(4,LA7X_",",.01)
"RTN","LA7SMP",198,0)
 I LA7FS="" S LA7FS="UNKNOWN:Entry #"_+LA7X
"RTN","LA7SMP",199,0)
 S LA7FS(99)=$$GET1^DIQ(4,LA7X_",",99)
"RTN","LA7SMP",200,0)
 I LA7FS(99)="" S LA7FS(99)="UNK: #"_+LA7X
"RTN","LA7SMP",201,0)
 ;
"RTN","LA7SMP",202,0)
 ; Get host site's names and station numbers
"RTN","LA7SMP",203,0)
 S LA7TS=$$GET1^DIQ(4,LA7Y_",",.01)
"RTN","LA7SMP",204,0)
 I LA7TS="" S LA7TS="UNKNOWN:Entry #"_+LA7Y
"RTN","LA7SMP",205,0)
 S LA7TS(99)=$$GET1^DIQ(4,LA7Y_",",99)
"RTN","LA7SMP",206,0)
 I LA7TS(99)="" S LA7TS(99)="UNK: #"_+LA7Y
"RTN","LA7SMP",207,0)
 Q
"RTN","LA7SMP",208,0)
 ;
"RTN","LA7SMP",209,0)
 ;
"RTN","LA7SMP",210,0)
ASK(LA7SM) ; Ask it user wants to print manifest.
"RTN","LA7SMP",211,0)
 ;  Call with array LA7SM = ien of 62.8^.01 field of #62.8
"RTN","LA7SMP",212,0)
 ;
"RTN","LA7SMP",213,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SMP",214,0)
 ;
"RTN","LA7SMP",215,0)
 S DIR(0)="YO",DIR("A")="Print Shipping Manifest",DIR("B")="NO"
"RTN","LA7SMP",216,0)
 D ^DIR Q:$D(DIRUT)
"RTN","LA7SMP",217,0)
 I Y=1 D DEV,END^LA7SMP0
"RTN","LA7SMP",218,0)
 ;
"RTN","LA7SMP",219,0)
 Q
"RTN","LA7SMP0")
0^12^B35338362
"RTN","LA7SMP0",1,0)
LA7SMP0 ;DALOI/JMC - Shipping Manifest Print (Cont'd);11/25/96  14:39
"RTN","LA7SMP0",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7SMP0",3,0)
 ;
"RTN","LA7SMP0",4,0)
HED ; Header
"RTN","LA7SMP0",5,0)
 I $E(IOST,1,2)="C-" D TERM Q:$G(LA7EXIT)
"RTN","LA7SMP0",6,0)
 I LA7PAGE W @IOF S $X=0
"RTN","LA7SMP0",7,0)
 S LA7PAGE=LA7PAGE+1
"RTN","LA7SMP0",8,0)
 I +LA7SMST'=4,IOM<132 D WARN
"RTN","LA7SMP0",9,0)
 ;
"RTN","LA7SMP0",10,0)
 W !,?1,"Shipping Manifest: ",$P(LA7SM,"^",2)
"RTN","LA7SMP0",11,0)
 I +LA7SMST'=4,IOM'<132 D WARN
"RTN","LA7SMP0",12,0)
 ;
"RTN","LA7SMP0",13,0)
 W ?IOM-37," Page: ",LA7PAGE
"RTN","LA7SMP0",14,0)
 W !,?11,"to Site: ",LA7TSITE
"RTN","LA7SMP0",15,0)
 W ?IOM-40," Printed: ",LA7NOW
"RTN","LA7SMP0",16,0)
 W !,?9,"from Site: ",LA7FSITE
"RTN","LA7SMP0",17,0)
 ;
"RTN","LA7SMP0",18,0)
 I +LA7SMST=4 W !,?6,"Date Shipped: ",$P(LA7SDT,"^",2)
"RTN","LA7SMP0",19,0)
 E  W !,?12,"Status: ",$P(LA7SMST,"^",2)
"RTN","LA7SMP0",20,0)
 W ?IOM-41," Ship via: ",LA7SVIA
"RTN","LA7SMP0",21,0)
 ;
"RTN","LA7SMP0",22,0)
 ; Check if task has been asked to stop.
"RTN","LA7SMP0",23,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","LA7SMP0",24,0)
 . S (LA7EXIT,ZTSTOP)=1
"RTN","LA7SMP0",25,0)
 . W !!,"*** Report requested to stop by TaskMan ***"
"RTN","LA7SMP0",26,0)
 . W !,"*** Task #",$G(ZTQUEUED,"UNKNOWN")," stopped at ",$$HTE^XLFDT($H)," ***"
"RTN","LA7SMP0",27,0)
 ;
"RTN","LA7SMP0",28,0)
 ; Print shipping receipt
"RTN","LA7SMP0",29,0)
 I $P(LA7SMR,"^",2) D  Q
"RTN","LA7SMP0",30,0)
 . W !,LA7LINE
"RTN","LA7SMP0",31,0)
 . I $P(LA7SMR,"^",2)=2 W !!,"Following Required Information and/or Test Codes Missing",!!
"RTN","LA7SMP0",32,0)
 ;
"RTN","LA7SMP0",33,0)
 W !,"Shipping Condition: ",$S(LA7SCOND:$$GET1^DIQ(62.93,LA7SCOND_",",.01),1:"None Specified")
"RTN","LA7SMP0",34,0)
 W ?(IOM-42)," Container: ",$S(LA7SCONT:$$GET1^DIQ(62.91,LA7SCONT_",",.01),1:"None Specified")
"RTN","LA7SMP0",35,0)
 ;
"RTN","LA7SMP0",36,0)
 I $L($P(LA7SCFG(0),"^",13)) W !,?4,"Account Number: ",$P(LA7SCFG(0),"^",13)
"RTN","LA7SMP0",37,0)
 ;
"RTN","LA7SMP0",38,0)
 I LA7SBC D SBC1
"RTN","LA7SMP0",39,0)
 ;
"RTN","LA7SMP0",40,0)
 W !!,?11,"Patient Name",?41,"Patient ID",?64,"Accession"
"RTN","LA7SMP0",41,0)
 I IOM>131 W ?86,"Requested By"
"RTN","LA7SMP0",42,0)
 ;
"RTN","LA7SMP0",43,0)
 W !,?11,"Date of Birth",?41,"Sex",?64,"Specimen UID"
"RTN","LA7SMP0",44,0)
 I IOM>131 W ?86,"Collect Date/Time"
"RTN","LA7SMP0",45,0)
 I IOM'>131 W !,?11,"Requested By",?41,"Collect Date/Time"
"RTN","LA7SMP0",46,0)
 ;
"RTN","LA7SMP0",47,0)
 W !,LA7LINE
"RTN","LA7SMP0",48,0)
 Q
"RTN","LA7SMP0",49,0)
 ;
"RTN","LA7SMP0",50,0)
 ;
"RTN","LA7SMP0",51,0)
SH ; Subheader
"RTN","LA7SMP0",52,0)
 W !,"Item: ",LA7ITEM
"RTN","LA7SMP0",53,0)
 W ?11,PNM
"RTN","LA7SMP0",54,0)
 ;I LRDPF=2,LA7ICN W ?41,LA7ICN
"RTN","LA7SMP0",55,0)
 ;E  W ?41,$S(LRDPF=2:SSN,1:SSN(2))
"RTN","LA7SMP0",56,0)
 W ?41,$S(LRDPF=2:SSN,1:SSN(2))
"RTN","LA7SMP0",57,0)
 W ?64,LA7ACC
"RTN","LA7SMP0",58,0)
 I IOM>131 W ?86,LA7DOC
"RTN","LA7SMP0",59,0)
 W !
"RTN","LA7SMP0",60,0)
 I LA7DC W "Cont'd"
"RTN","LA7SMP0",61,0)
 W ?11,$$FMTE^XLFDT(DOB),?41,$S(SEX="M":"Male",SEX="F":"Female",SEX="":"Unknown",1:SEX),?64,LA7UID
"RTN","LA7SMP0",62,0)
 I IOM'>131 W !,?11,$E(LA7DOC,1,28),?41,$S(LA7CDT:$$FMTE^XLFDT(LA7CDT,"1M"),1:LA7CDT)
"RTN","LA7SMP0",63,0)
 I IOM>131 W ?86,$S(LA7CDT:$$FMTE^XLFDT(LA7CDT,"1M"),1:LA7CDT)
"RTN","LA7SMP0",64,0)
 W !
"RTN","LA7SMP0",65,0)
 ;
"RTN","LA7SMP0",66,0)
 S LA7X=$G(^TMP("LA7SMRI",$J,LA7SCOND,LA7SCONT,LA7UID,1))
"RTN","LA7SMP0",67,0)
 ;
"RTN","LA7SMP0",68,0)
 I $P(LA7X,"^") D
"RTN","LA7SMP0",69,0)
 . W !,?11,"Patient Height: ",$P(LA7X,"^",2)," ",$$GET1^DIQ(64.061,+$P(LA7X,"^",3)_",",.01)
"RTN","LA7SMP0",70,0)
 ;
"RTN","LA7SMP0",71,0)
 I $P(LA7X,"^",4) D
"RTN","LA7SMP0",72,0)
 . I $P(LA7X,"^") W ?40
"RTN","LA7SMP0",73,0)
 . E  W !,?11
"RTN","LA7SMP0",74,0)
 . W "Patient Weight: ",$P(LA7X,"^",5)," ",$$GET1^DIQ(64.061,+$P(LA7X,"^",6)_",",.01)
"RTN","LA7SMP0",75,0)
 ;
"RTN","LA7SMP0",76,0)
 S LA7X=$G(^TMP("LA7SMRI",$J,LA7SCOND,LA7SCONT,LA7UID,2))
"RTN","LA7SMP0",77,0)
 ;
"RTN","LA7SMP0",78,0)
 I $P(LA7X,"^") D
"RTN","LA7SMP0",79,0)
 . W !,?11,"Collection Volume: ",$P(LA7X,"^",2)," ",$$GET1^DIQ(64.061,+$P(LA7X,"^",3)_",",.01)
"RTN","LA7SMP0",80,0)
 ;
"RTN","LA7SMP0",81,0)
 I $P(LA7X,"^",8) D
"RTN","LA7SMP0",82,0)
 . I $P(LA7X,"^") W ?40
"RTN","LA7SMP0",83,0)
 . E  W !,?11
"RTN","LA7SMP0",84,0)
 . W "Collection Weight: ",$P(LA7X,"^",9)," ",$$GET1^DIQ(64.061,+$P(LA7X,"^",10)_",",.01)
"RTN","LA7SMP0",85,0)
 ;
"RTN","LA7SMP0",86,0)
 I $P(LA7X,"^",4) D
"RTN","LA7SMP0",87,0)
 . W !,?11,"Collection End Date/Time: ",$$FMTE^XLFDT($P(LA7X,"^",5),"1M")
"RTN","LA7SMP0",88,0)
 . W "  (Duration: ",$P(LA7X,"^",6)," ",$$GET1^DIQ(64.061,+$P(LA7X,"^",7)_",",.01),")"
"RTN","LA7SMP0",89,0)
 ;
"RTN","LA7SMP0",90,0)
 I LA7SBC D SBC2
"RTN","LA7SMP0",91,0)
 S LA7DC=0
"RTN","LA7SMP0",92,0)
 Q
"RTN","LA7SMP0",93,0)
 ;
"RTN","LA7SMP0",94,0)
WARN ; Write warning for work copy.
"RTN","LA7SMP0",95,0)
 W ?$S(IOM<131:5,1:40),"*** DO NOT USE FOR SHIPPING DOCUMENT - WORK COPY ONLY ***"
"RTN","LA7SMP0",96,0)
 Q
"RTN","LA7SMP0",97,0)
 ;
"RTN","LA7SMP0",98,0)
 ;
"RTN","LA7SMP0",99,0)
SBC1 ; Site bar codes
"RTN","LA7SMP0",100,0)
 ;
"RTN","LA7SMP0",101,0)
 ; Print "SM" bar code
"RTN","LA7SMP0",102,0)
 ; Calculate/append LPC to barcode. 
"RTN","LA7SMP0",103,0)
 I '$L($G(LA7SM("BARCODE"))) D
"RTN","LA7SMP0",104,0)
 . N LA7X,X,Y
"RTN","LA7SMP0",105,0)
 . I LA7SBC=1 D
"RTN","LA7SMP0",106,0)
 . . S LA7X="STX^SITE^"_LA7FSITE(99)_"^"_$P($G(LA7SDT),"^")_"^"_$P(LA7SM,"^",2)_"^ETX"
"RTN","LA7SMP0",107,0)
 . I LA7SBC=2 D
"RTN","LA7SMP0",108,0)
 . .S LA7X="SITE^"_LA7FSITE(99)_"^"_$P($G(LA7SDT),"^")_"^"_$P(LA7SM,"^",2)_"^"
"RTN","LA7SMP0",109,0)
 . S X=LA7X X ^%ZOSF("LPC") S LA7SM("LPC")=Y,LA7SM("BARCODE")=LA7X_Y
"RTN","LA7SMP0",110,0)
 ;
"RTN","LA7SMP0",111,0)
 W !,?18,"SM: ",$$BC128^LA7SBC(LA7SM("BARCODE"),1,60,"","",2),!
"RTN","LA7SMP0",112,0)
 ;
"RTN","LA7SMP0",113,0)
 Q
"RTN","LA7SMP0",114,0)
 ;
"RTN","LA7SMP0",115,0)
 ;
"RTN","LA7SMP0",116,0)
SBC2 ; Patient bar codes
"RTN","LA7SMP0",117,0)
 ;
"RTN","LA7SMP0",118,0)
 N LA7SDATA
"RTN","LA7SMP0",119,0)
 ;
"RTN","LA7SMP0",120,0)
 ; Print "PD" bar code
"RTN","LA7SMP0",121,0)
 I LA7SBC=1 D
"RTN","LA7SMP0",122,0)
 . S LA7SDATA="STX^PD^"_SSN(2)_"^"_LA7FSITE(99)_"^"_LA7UID_"^"_$G(SEX)_"^"_LA7CDT_"^ETX"_$G(LA7SM("LPC"))
"RTN","LA7SMP0",123,0)
 ;
"RTN","LA7SMP0",124,0)
 I LA7SBC=2 D
"RTN","LA7SMP0",125,0)
 . S LA7SDATA="PD^"_SSN(2)_"^"_LA7FSITE(99)_"^"_LA7UID_"^"_LA7CDT_"^"_$G(LA7SM("LPC"))
"RTN","LA7SMP0",126,0)
 ;
"RTN","LA7SMP0",127,0)
 W !!,?18,"PD: ",$$BC128^LA7SBC(LA7SDATA,1,60,"","",2),!
"RTN","LA7SMP0",128,0)
 ;
"RTN","LA7SMP0",129,0)
 W !,?11,$E(LA7LINE,1,69)
"RTN","LA7SMP0",130,0)
 ;
"RTN","LA7SMP0",131,0)
 ; Print "PD1" bar code
"RTN","LA7SMP0",132,0)
 I LA7SBC=1 D
"RTN","LA7SMP0",133,0)
 . S LA7SDATA="STX^PD1^"_SSN(2)_"^"_PNM_"^"_DOB_"^ETX"_$G(LA7SM("LPC"))
"RTN","LA7SMP0",134,0)
 ;
"RTN","LA7SMP0",135,0)
 I LA7SBC=2 D
"RTN","LA7SMP0",136,0)
 . S LA7SDATA="PD1^"_SSN(2)_"^"_PNM_"^"_DOB_"^"_SEX_"^"_$G(LA7SM("LPC"))
"RTN","LA7SMP0",137,0)
 ;
"RTN","LA7SMP0",138,0)
 W !,?$S(IOM<131:18,1:50),"PD1: ",$$BC128^LA7SBC(LA7SDATA,1,60,"","",2),!
"RTN","LA7SMP0",139,0)
 ;
"RTN","LA7SMP0",140,0)
 Q
"RTN","LA7SMP0",141,0)
 ;
"RTN","LA7SMP0",142,0)
 ;
"RTN","LA7SMP0",143,0)
PTID ; Get/setup patient identifier information
"RTN","LA7SMP0",144,0)
 ;
"RTN","LA7SMP0",145,0)
 S DFN=+$P(^LR(LRDFN,0),U,3),LRDPF=+$P(^(0),U,2) D PT^LRX
"RTN","LA7SMP0",146,0)
 ;
"RTN","LA7SMP0",147,0)
 ; Integration control number (ICN) from MPI
"RTN","LA7SMP0",148,0)
 S LA7ICN=""
"RTN","LA7SMP0",149,0)
 S X="MPIF001" X ^%ZOSF("TEST")
"RTN","LA7SMP0",150,0)
 I $T,LRDPF=2 D
"RTN","LA7SMP0",151,0)
 . S LA7ICN=$$GETICN^MPIF001(DFN)
"RTN","LA7SMP0",152,0)
 . I LA7ICN<1 S LA7ICN=""
"RTN","LA7SMP0",153,0)
 Q
"RTN","LA7SMP0",154,0)
 ;
"RTN","LA7SMP0",155,0)
 ;
"RTN","LA7SMP0",156,0)
TERM ;
"RTN","LA7SMP0",157,0)
 I 'LA7PAGE W @IOF S $X=0 Q
"RTN","LA7SMP0",158,0)
 ;
"RTN","LA7SMP0",159,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SMP0",160,0)
 S DIR(0)="E" D ^DIR S:$D(DIRUT) LA7EXIT=1
"RTN","LA7SMP0",161,0)
 Q
"RTN","LA7SMP0",162,0)
 ;
"RTN","LA7SMP0",163,0)
 ;
"RTN","LA7SMP0",164,0)
INIT ; Initialize variables
"RTN","LA7SMP0",165,0)
 ;
"RTN","LA7SMP0",166,0)
 S DT=$$DT^XLFDT
"RTN","LA7SMP0",167,0)
 S LA7QUIT=0
"RTN","LA7SMP0",168,0)
 ;
"RTN","LA7SMP0",169,0)
 ; Select shipping configuration
"RTN","LA7SMP0",170,0)
 S LA7SCFG=$$SSCFG^LA7SUTL(0)
"RTN","LA7SMP0",171,0)
 I LA7SCFG<1 S LA7QUIT=1 Q
"RTN","LA7SMP0",172,0)
 S LA7SCFG(0)=$G(^LAHM(62.9,+LA7SCFG,0))
"RTN","LA7SMP0",173,0)
 Q
"RTN","LA7SMP0",174,0)
 ;
"RTN","LA7SMP0",175,0)
END ;
"RTN","LA7SMP0",176,0)
 I $E(IOST,1,2)="C-",'$G(LA7EXIT) D TERM
"RTN","LA7SMP0",177,0)
 I $E(IOST,1,2)="P-" W @IOF S IONOFF=""
"RTN","LA7SMP0",178,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","LA7SMP0",179,0)
 ;
"RTN","LA7SMP0",180,0)
KILL ; Cleanup variables
"RTN","LA7SMP0",181,0)
 K %,%DT,%ZIS,A,IO("Q"),AGE,DA,DFN,DIC,DIB,DIR,DIRUT,DTOUT,DUOUT,I,J,K,LAST,PNM,SEX,SSN,X,Y,Z
"RTN","LA7SMP0",182,0)
 K LA7AA,LA7ACC,LA7AD,LA7AN,LA7CDT,LA7CHK,LA7DC,LA7DOC,LA7END,LA7ERR,LA7EV,LA7EXIT,LA7FSITE,LA7I,LA7ICN,LA7ITEM,LA7LINE,LA7NLT,LA7NLTN,LA7NOW,LA7PAGE
"RTN","LA7SMP0",183,0)
 K LA7QUIT,LA7ROOT,LA7SBC,LA7SCFG,LA7SCOND,LA7SCONT,LA7SDT,LA7SKIP,LA7SM,LA7SMR,LA7SMST,LA7SPEC,LA7SVIA,LA7TSITE,LA7UID,LA7X
"RTN","LA7SMP0",184,0)
 K LA760,LA762801
"RTN","LA7SMP0",185,0)
 K LRDFN,LRDPF,LRPRAC
"RTN","LA7SMP0",186,0)
 K ^TMP("LA7ERR",$J),^TMP("LA7SM",$J),^TMP("LA7SMRI",$J)
"RTN","LA7SMP0",187,0)
 D KVAR^LRX
"RTN","LA7SMP0",188,0)
 ;
"RTN","LA7SMP0",189,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7SMP0",190,0)
 Q
"RTN","LA7SMPXL")
0^56^B10769418
"RTN","LA7SMPXL",1,0)
LA7SMPXL ;DALOI/JMC - PRINT SHIPPING MANIFEST FROM PENDING ORDERS FILE ; 12/3/1997
"RTN","LA7SMPXL",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,42,46**;Sep 27, 1994
"RTN","LA7SMPXL",3,0)
EN ;
"RTN","LA7SMPXL",4,0)
 ;
"RTN","LA7SMPXL",5,0)
 N D,DIC,LA7SM,X,Y,%ZIS
"RTN","LA7SMPXL",6,0)
 ;
"RTN","LA7SMPXL",7,0)
 S DIC=69.6,DIC(0)="AQEZNM",DIC("A")="Select Shipping Manifest: ",D="D"
"RTN","LA7SMPXL",8,0)
 S DIC("S")="I $L($P(^(0),U,14))"
"RTN","LA7SMPXL",9,0)
 D MIX^DIC1 K DIC("S")
"RTN","LA7SMPXL",10,0)
 I Y<1 D END Q
"RTN","LA7SMPXL",11,0)
 ;
"RTN","LA7SMPXL",12,0)
 S LA7SMAN=$P(Y(0),U,14)
"RTN","LA7SMPXL",13,0)
 ;
"RTN","LA7SMPXL",14,0)
 S %ZIS="MQ"
"RTN","LA7SMPXL",15,0)
 D ^%ZIS
"RTN","LA7SMPXL",16,0)
 I POP D  Q
"RTN","LA7SMPXL",17,0)
 . D HOME^%ZIS
"RTN","LA7SMPXL",18,0)
 . D END
"RTN","LA7SMPXL",19,0)
 ;
"RTN","LA7SMPXL",20,0)
 I $D(IO("Q")) D  Q
"RTN","LA7SMPXL",21,0)
 . S ZTRTN="DQ^LA7SMPXL",ZTDESC="Shipping Manifest Reprint",ZTSAVE("LA7*")=""
"RTN","LA7SMPXL",22,0)
 . D ^%ZTLOAD,HOME^%ZIS
"RTN","LA7SMPXL",23,0)
 . D EN^DDIOL("Request "_$S($G(ZTSK):"queued - Task #"_ZTSK,1:"NOT queued"),"","!")
"RTN","LA7SMPXL",24,0)
 . D END
"RTN","LA7SMPXL",25,0)
 ;
"RTN","LA7SMPXL",26,0)
DQ ; Tasked entry point
"RTN","LA7SMPXL",27,0)
 ;
"RTN","LA7SMPXL",28,0)
 U IO
"RTN","LA7SMPXL",29,0)
 ;
"RTN","LA7SMPXL",30,0)
 S DT=$$DT^XLFDT
"RTN","LA7SMPXL",31,0)
 S LRDPF=69.6,LA7NOW=$$HTE^XLFDT($H,"1M")
"RTN","LA7SMPXL",32,0)
 S (LA7DC,LA7EXIT,LA7PAGE,LA7SCOND,LA7SCONT)=0
"RTN","LA7SMPXL",33,0)
 S LA7SCFG=0,LA7SCFG(0)=""
"RTN","LA7SMPXL",34,0)
 S LA7LINE="",$P(LA7LINE,"-",IOM)="",LA7SVIA="Electronic manifest"
"RTN","LA7SMPXL",35,0)
 ;
"RTN","LA7SMPXL",36,0)
 ; Check manifest for missing info.
"RTN","LA7SMPXL",37,0)
 S LA7CHK=0
"RTN","LA7SMPXL",38,0)
 ; Flag to print receipt.
"RTN","LA7SMPXL",39,0)
 S LA7SMR="0^0"
"RTN","LA7SMPXL",40,0)
 ; Set barcode flag
"RTN","LA7SMPXL",41,0)
 S LA7SBC=0
"RTN","LA7SMPXL",42,0)
 I IOST["P-" S LA7SBC=2
"RTN","LA7SMPXL",43,0)
 ; Shipping status flag
"RTN","LA7SMPXL",44,0)
 S LA7SMST="0^Electronic Manifest"
"RTN","LA7SMPXL",45,0)
 ;
"RTN","LA7SMPXL",46,0)
 S (LA7696,LA7QUIT)=0,LA7UID=""
"RTN","LA7SMPXL",47,0)
 S LA7SM="^"_LA7SMAN
"RTN","LA7SMPXL",48,0)
 S LA7ROOT="^LRO(69.6,""AD"",LA7SMAN)"
"RTN","LA7SMPXL",49,0)
 F LA7ITEM=1:1 S LA7ROOT=$Q(@LA7ROOT) D  Q:LA7EXIT
"RTN","LA7SMPXL",50,0)
 . I $QS(LA7ROOT,3)'=LA7SMAN S LA7EXIT=1
"RTN","LA7SMPXL",51,0)
 . I LA7EXIT Q
"RTN","LA7SMPXL",52,0)
 . I $L(LA7UID),LA7UID'=$QS(LA7ROOT,4) W !,LA7LINE
"RTN","LA7SMPXL",53,0)
 . S LA7696=$QS(LA7ROOT,5)
"RTN","LA7SMPXL",54,0)
 . D SETUP
"RTN","LA7SMPXL",55,0)
 . I ($Y+12)>IOSL!('LA7PAGE) D  Q:LA7EXIT
"RTN","LA7SMPXL",56,0)
 . . I LA7PAGE W ! D WARN^LA7SMP0
"RTN","LA7SMPXL",57,0)
 . . D HED^LA7SMP0
"RTN","LA7SMPXL",58,0)
 . D SH^LA7SMP0
"RTN","LA7SMPXL",59,0)
 . W !,?18,$E(LA7LINE,1,31)
"RTN","LA7SMPXL",60,0)
 . S LA76964=0
"RTN","LA7SMPXL",61,0)
 . F  S LA76964=$O(^LRO(69.6,LA7696,2,LA76964)) Q:LA76964<1  D
"RTN","LA7SMPXL",62,0)
 . . S LA76964(0)=$G(^LRO(69.6,LA7696,2,LA76964,0))
"RTN","LA7SMPXL",63,0)
 . . W !?18,$P(LA76964(0),"^",3),?50,$P(LA7SPEC(0),"^")
"RTN","LA7SMPXL",64,0)
 . . W !,?20,"VA NLT code [Name]: "
"RTN","LA7SMPXL",65,0)
 . . S LA7NLT=$P(LA76964(0),"^")
"RTN","LA7SMPXL",66,0)
 . . W $S($L(LA7NLT):LA7NLT,1:"*** None specified ***")
"RTN","LA7SMPXL",67,0)
 . . S LA7NLTN=$P(LA76964(0),"^",2)
"RTN","LA7SMPXL",68,0)
 . . I $L(LA7NLTN) W:($X+$L($P(LA76964(0),"^",2))+3)>IOM !,?39 W " [",LA7NLTN,"]"
"RTN","LA7SMPXL",69,0)
 ;
"RTN","LA7SMPXL",70,0)
 D END
"RTN","LA7SMPXL",71,0)
 Q
"RTN","LA7SMPXL",72,0)
 ;
"RTN","LA7SMPXL",73,0)
 ;
"RTN","LA7SMPXL",74,0)
SETUP ; Setup variables for this order
"RTN","LA7SMPXL",75,0)
 ;
"RTN","LA7SMPXL",76,0)
 N I,X
"RTN","LA7SMPXL",77,0)
 ;
"RTN","LA7SMPXL",78,0)
 F I=0,1 S LA7696(I)=$G(^LRO(69.6,LA7696,I))
"RTN","LA7SMPXL",79,0)
 ;
"RTN","LA7SMPXL",80,0)
 S PNM=$P(LA7696(0),U),SEX=$P(LA7696(0),U,2),DOB=$P(LA7696(0),U,3)
"RTN","LA7SMPXL",81,0)
 S (SSN,SSN(2))=$P(LA7696(0),U,9),LA7DOC=""
"RTN","LA7SMPXL",82,0)
 ;
"RTN","LA7SMPXL",83,0)
 S LA7ACC=$P(LA7696(0),"^",12)
"RTN","LA7SMPXL",84,0)
 S LA7UID=$P(LA7696(0),"^",6)
"RTN","LA7SMPXL",85,0)
 S LA7SPEC=+$P(LA7696(0),"^",7),LA7SPEC(0)=$G(^LAB(61,LA7SPEC,0))
"RTN","LA7SMPXL",86,0)
 S LA7CDT=$P(LA7696(1),U,2)
"RTN","LA7SMPXL",87,0)
 S LA7SDT=$P(LA7696(1),U,5)
"RTN","LA7SMPXL",88,0)
 ;
"RTN","LA7SMPXL",89,0)
 ; Get collecting site and host site info
"RTN","LA7SMPXL",90,0)
 D GETSITE^LA7SMP($P(LA7696(0),U,5),DUZ(2),.LA7FSITE,.LA7TSITE)
"RTN","LA7SMPXL",91,0)
 ;
"RTN","LA7SMPXL",92,0)
 ; Ordering provider
"RTN","LA7SMPXL",93,0)
 S I=0
"RTN","LA7SMPXL",94,0)
 F  S I=$O(^LRO(69.6,LA7696,2,I)) Q:'I  D  Q:$L(LA7DOC)
"RTN","LA7SMPXL",95,0)
 . S X=$P($G(^LRO(69.6,LA7696,2,I,1)),"^")
"RTN","LA7SMPXL",96,0)
 . I $L(X) S LA7DOC=$P(X,"[")
"RTN","LA7SMPXL",97,0)
 I LA7DOC="" S LA7DOC="REF:"_LA7FSITE(99)
"RTN","LA7SMPXL",98,0)
 ;
"RTN","LA7SMPXL",99,0)
 ; Get shipping date
"RTN","LA7SMPXL",100,0)
 S LA7SDT=$$FMTE^XLFDT($P(LA7696(1),"^",3),"")
"RTN","LA7SMPXL",101,0)
 Q
"RTN","LA7SMPXL",102,0)
 ;
"RTN","LA7SMPXL",103,0)
 ;
"RTN","LA7SMPXL",104,0)
END ;
"RTN","LA7SMPXL",105,0)
 S LA7EXIT=1
"RTN","LA7SMPXL",106,0)
 D END^LA7SMP0
"RTN","LA7SMPXL",107,0)
 K LA7696,LA76964,LA7SMAN
"RTN","LA7SMPXL",108,0)
 ;
"RTN","LA7SMPXL",109,0)
 Q
"RTN","LA7SMU")
0^7^B42269781
"RTN","LA7SMU",1,0)
LA7SMU ;DALOI/JMC - Shipping Manifest Utility ;5/5/97 14:44;
"RTN","LA7SMU",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46**;Sep 27, 1994
"RTN","LA7SMU",3,0)
 Q
"RTN","LA7SMU",4,0)
 ;
"RTN","LA7SMU",5,0)
CHKSM(X) ; Shipping manifest status check
"RTN","LA7SMU",6,0)
 ; Call with X = ien of file #62.9 LAB SHIPPING CONFIGURATION
"RTN","LA7SMU",7,0)
 ; Returns -1 = error^reason
"RTN","LA7SMU",8,0)
 ;          0 = no active shipping manifest exists
"RTN","LA7SMU",9,0)
 ;         >0 = ien of active shipping manifest in file #62.8, LAB SHIPPING MANIFEST
"RTN","LA7SMU",10,0)
 ;
"RTN","LA7SMU",11,0)
 ; No value passed
"RTN","LA7SMU",12,0)
 I '$G(X) Q "-1^No configuration passed"
"RTN","LA7SMU",13,0)
 ; Bad pointer passed
"RTN","LA7SMU",14,0)
 I '$D(^LAHM(62.9,X,0)) Q "-1^Bad configuration pointer"
"RTN","LA7SMU",15,0)
 ; Get ien of active shipping manifest.
"RTN","LA7SMU",16,0)
 S Y=+$O(^LAHM(62.8,"AC1",X,0))
"RTN","LA7SMU",17,0)
 I Y S Y=Y_"^"_$P(^LAHM(62.8,Y,0),"^")
"RTN","LA7SMU",18,0)
 Q Y
"RTN","LA7SMU",19,0)
 ;
"RTN","LA7SMU",20,0)
 ;
"RTN","LA7SMU",21,0)
CSM(LA7SCFG) ; Creates a new shipping manifest
"RTN","LA7SMU",22,0)
 ; Call with X = ien of file #62.9 LAB SHIPPING CONFIGURATION
"RTN","LA7SMU",23,0)
 ; Returns -1 = error^reason
"RTN","LA7SMU",24,0)
 ;          0 = no active shipping manifest exists
"RTN","LA7SMU",25,0)
 ;         >0 = ien of active shipping manifest in file #62.8, LAB SHIPPING MANIFEST
"RTN","LA7SMU",26,0)
 ;
"RTN","LA7SMU",27,0)
 N DATA,FDA,I,LA7CF,LA7DIE,LA7DT,LA7IEN,LA7SM,X,X4
"RTN","LA7SMU",28,0)
 ;
"RTN","LA7SMU",29,0)
 ; No value passed
"RTN","LA7SMU",30,0)
 I '$G(LA7SCFG) Q "-1^No configuration passed"
"RTN","LA7SMU",31,0)
 ;
"RTN","LA7SMU",32,0)
 ; Bad pointer passed
"RTN","LA7SMU",33,0)
 I '$D(^LAHM(62.9,LA7SCFG,0)) Q "-1^Bad configuration pointer"
"RTN","LA7SMU",34,0)
 ;
"RTN","LA7SMU",35,0)
 S LA7SCFG(0)=$G(^LAHM(62.9,LA7SCFG,0))
"RTN","LA7SMU",36,0)
 ; ien of collecting facility
"RTN","LA7SMU",37,0)
 S LA7CF=$P(LA7SCFG(0),"^",2)
"RTN","LA7SMU",38,0)
 ; file #4 INSTITUTION information
"RTN","LA7SMU",39,0)
 F I=.01,.05,99 S X4(I)=$$GET1^DIQ(4,LA7CF_",",I)
"RTN","LA7SMU",40,0)
 ;
"RTN","LA7SMU",41,0)
 ; Get station number else use short name
"RTN","LA7SMU",42,0)
 S LA7SM=""
"RTN","LA7SMU",43,0)
 I $L(X4(99)) S LA7SM=X4(99)
"RTN","LA7SMU",44,0)
 E  S LA7SM=X4(.05)
"RTN","LA7SMU",45,0)
 ; Failsafe value
"RTN","LA7SMU",46,0)
 I LA7SM="" S LA7SM="INST:"_LA7CF
"RTN","LA7SMU",47,0)
 S DT=$$DT^XLFDT,LA7DT=$$HLDATE^HLFNC(DT,"DT")
"RTN","LA7SMU",48,0)
 S LA7SM=LA7SM_"-"_LA7DT_"-"
"RTN","LA7SMU",49,0)
 ;
"RTN","LA7SMU",50,0)
 L +^LAHM(62.8,0):5 ; Set lock
"RTN","LA7SMU",51,0)
 I '$T Q "-1^Unable to obtain lock on file LAB SHIPPING MANIFEST #62.8"
"RTN","LA7SMU",52,0)
 S X=0
"RTN","LA7SMU",53,0)
 F  S X=X+1 Q:'$D(^LAHM(62.8,"B",LA7SM_X))
"RTN","LA7SMU",54,0)
 S LA7SM=LA7SM_X
"RTN","LA7SMU",55,0)
 ;
"RTN","LA7SMU",56,0)
 S FDA(1,62.8,"+1,",.01)=LA7SM
"RTN","LA7SMU",57,0)
 S FDA(1,62.8,"+1,",.02)=LA7SCFG
"RTN","LA7SMU",58,0)
 S FDA(1,62.8,"+1,",.03)=1
"RTN","LA7SMU",59,0)
 I $P(LA7SCFG(0),"^",8) S FDA(1,62.8,"+1,",.04)=$P(LA7SCFG(0),"^",8)
"RTN","LA7SMU",60,0)
 S FDA(1,62.8,"+1,",.05)=+$P(LA7SCFG(0),"^",15)
"RTN","LA7SMU",61,0)
 D UPDATE^DIE("","FDA(1)","LA7IEN","LA7DIE(1)")
"RTN","LA7SMU",62,0)
 ;
"RTN","LA7SMU",63,0)
 S DATA="SM01^"_$$NOW^XLFDT
"RTN","LA7SMU",64,0)
 D SEUP(LA7SM,1,DATA)
"RTN","LA7SMU",65,0)
 ;
"RTN","LA7SMU",66,0)
 S DATA="SM02^"_$$NOW^XLFDT
"RTN","LA7SMU",67,0)
 D SEUP(LA7SM,1,DATA)
"RTN","LA7SMU",68,0)
 ;
"RTN","LA7SMU",69,0)
 ; Release lock
"RTN","LA7SMU",70,0)
 L -^LAHM(62.8,0)
"RTN","LA7SMU",71,0)
 Q LA7IEN(1)_"^"_LA7SM
"RTN","LA7SMU",72,0)
 ;
"RTN","LA7SMU",73,0)
 ;
"RTN","LA7SMU",74,0)
SMSUP(LA7SM,LA7ST,LA7EVNC) ; Shipping manifest status update.
"RTN","LA7SMU",75,0)
 ; Call with LA7SM = ien of entry in file #62.8 LAB SHIPPING MAINFEST^.01 field
"RTN","LA7SMU",76,0)
 ;           LA7ST = status to update
"RTN","LA7SMU",77,0)
 ;         LA7EVNC = event code^event date/time (default=NOW)
"RTN","LA7SMU",78,0)
 ;
"RTN","LA7SMU",79,0)
 N DATA,FDA,LA7IEN
"RTN","LA7SMU",80,0)
 ;
"RTN","LA7SMU",81,0)
 S LA7IEN(1)=+LA7SM
"RTN","LA7SMU",82,0)
 S FDA(2,62.8,+LA7SM_",",.03)=LA7ST
"RTN","LA7SMU",83,0)
 D UPDATE^DIE("","FDA(2)","LA7IEN","LA7DIE(2)")
"RTN","LA7SMU",84,0)
 S DATA=$P(LA7EVNC,"^")_"^"_$S($P(LA7EVNC,"^",2):$P(LA7EVNC,"^",2),1:$$NOW^XLFDT)
"RTN","LA7SMU",85,0)
 D SEUP($P(LA7SM,"^",2),1,DATA)
"RTN","LA7SMU",86,0)
 Q
"RTN","LA7SMU",87,0)
 ;
"RTN","LA7SMU",88,0)
 ;
"RTN","LA7SMU",89,0)
STSUP(LA7SM,LA762801,LA7DATA) ; Shipping test status update
"RTN","LA7SMU",90,0)
 ; Call with    LA7SM = ien of shipping manifest (#62.8)
"RTN","LA7SMU",91,0)
 ;           LA762801 = ien of test entry on shipping manifest
"RTN","LA7SMU",92,0)
 ;            LA7DATA = data to be filed
"RTN","LA7SMU",93,0)
 N FDA
"RTN","LA7SMU",94,0)
 S LA762801=LA762801_","_+LA7SM_","
"RTN","LA7SMU",95,0)
 S FDA(62.8,62.801,LA762801,.08)=LA7DATA
"RTN","LA7SMU",96,0)
 D FILE^DIE("","FDA(62.8)","LA7DIE(2)")
"RTN","LA7SMU",97,0)
 Q
"RTN","LA7SMU",98,0)
 ;
"RTN","LA7SMU",99,0)
 ;
"RTN","LA7SMU",100,0)
SEUP(LA7ID,LA7EVN,LA7DATA) ; Shipping event update
"RTN","LA7SMU",101,0)
 ; Call with LA7ID = shipping identifier (manifest invoice # or UID)
"RTN","LA7SMU",102,0)
 ;           LA7EVN = event type (1=shipping manifest/2=test)
"RTN","LA7SMU",103,0)
 ;           LA7DATA = data to be filed
"RTN","LA7SMU",104,0)
 N FDA,I,LA7IEN,X
"RTN","LA7SMU",105,0)
 L +^LAHM(62.85,0) ; Set lock
"RTN","LA7SMU",106,0)
 S FDA(3,62.85,"+1,",.01)=LA7ID
"RTN","LA7SMU",107,0)
 S FDA(3,62.85,"+1,",.02)=DUZ
"RTN","LA7SMU",108,0)
 S FDA(3,62.85,"+1,",.03)=$$NOW^XLFDT
"RTN","LA7SMU",109,0)
 S FDA(3,62.85,"+1,",.04)=LA7EVN
"RTN","LA7SMU",110,0)
 I $L($P(LA7DATA,"^")) D
"RTN","LA7SMU",111,0)
 . S X=$$EVNC($P(LA7DATA,"^"))
"RTN","LA7SMU",112,0)
 . I X S FDA(3,62.85,"+1,",.05)=+X
"RTN","LA7SMU",113,0)
 F I=2:1:4 I $L($P(LA7DATA,"^",I)) S FDA(3,62.85,"+1,",$P("^.07^.08^.09","^",I))=$P(LA7DATA,"^",I)
"RTN","LA7SMU",114,0)
 ;
"RTN","LA7SMU",115,0)
 ; Add event to lab shipping event.
"RTN","LA7SMU",116,0)
 D UPDATE^DIE("","FDA(3)","LA7IEN","LA7DIE(3)")
"RTN","LA7SMU",117,0)
 ; Release lock
"RTN","LA7SMU",118,0)
 L -^LAHM(62.85,0)
"RTN","LA7SMU",119,0)
 ;
"RTN","LA7SMU",120,0)
 Q
"RTN","LA7SMU",121,0)
 ;
"RTN","LA7SMU",122,0)
 ;
"RTN","LA7SMU",123,0)
ACCSUP(LA7UID,LA760,LA7DATA) ; Accession status update
"RTN","LA7SMU",124,0)
 ; Call with LA7UID = UID of accession to update
"RTN","LA7SMU",125,0)
 ;          LA7DATA = value to update (pointer to file #62.8, LAB SHIPPING MANIFEST or "@" to delete
"RTN","LA7SMU",126,0)
 ;
"RTN","LA7SMU",127,0)
 N FDA,LA7AA,LA7AD,LA7AN,LA7CAD,LA768,X
"RTN","LA7SMU",128,0)
 S X=$Q(^LRO(68,"C",LA7UID))
"RTN","LA7SMU",129,0)
 S LA7AA=$QS(X,4),LA7AD=$QS(X,5),LA7AN=$QS(X,6)
"RTN","LA7SMU",130,0)
 S LA7CAD=$$AD^LA7SUTL(LA7AA) ; Get current accession date for this accession area.
"RTN","LA7SMU",131,0)
 S LA7AD=LA7AD-.000000001
"RTN","LA7SMU",132,0)
 F  S LA7AD=$O(^LRO(68,LA7AA,1,LA7AD)) Q:'LA7AD!(LA7AD>LA7CAD)  D
"RTN","LA7SMU",133,0)
 . I '$D(^LRO(68,LA7AA,1,LA7AD,1,LA7AN)) Q
"RTN","LA7SMU",134,0)
 . I $P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,.3)),"^")'=LA7UID Q
"RTN","LA7SMU",135,0)
 . I '$D(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA760)) Q  ; Test not on accession.
"RTN","LA7SMU",136,0)
 . S LA768=LA760_","_LA7AN_","_LA7AD_","_LA7AA_","
"RTN","LA7SMU",137,0)
 . S FDA(68,68.04,LA768,9)=LA7DATA
"RTN","LA7SMU",138,0)
 . D FILE^DIE("","FDA(68)","LA7DIE(68)")
"RTN","LA7SMU",139,0)
 Q
"RTN","LA7SMU",140,0)
 ;
"RTN","LA7SMU",141,0)
 ;
"RTN","LA7SMU",142,0)
SELSM(LA7SCFG,LA7SCR) ; Select shipping manifest
"RTN","LA7SMU",143,0)
 ; Call with LA7SCFG = ien of file #62.9 LAB SHIPPING CONFIGURATION
"RTN","LA7SMU",144,0)
 ;            LA7SCR = comma delimited list of status screen - only allow selection of manifests with matching status
"RTN","LA7SMU",145,0)
 ;      Returns LA7Y = pointer to shipping manifest or error
"RTN","LA7SMU",146,0)
 N DIC,DTOUT,DUOUT,LA7Y,X,Y
"RTN","LA7SMU",147,0)
 S DIC="^LAHM(62.8,",DIC(0)="AEMNQ",DIC("A")="Select Shipping Manifest: "
"RTN","LA7SMU",148,0)
 S DIC("S")="I $P(^LAHM(62.8,Y,0),U,2)=LA7SCFG"
"RTN","LA7SMU",149,0)
 S DIC("W")="D SMW^LA7SMU1(Y)"
"RTN","LA7SMU",150,0)
 I $L($G(LA7SCR)) S DIC("S")=DIC("S")_","""_LA7SCR_"""[$P(^LAHM(62.8,Y,0),U,3)"
"RTN","LA7SMU",151,0)
 D ^DIC
"RTN","LA7SMU",152,0)
 I Y<1 S LA7Y="-1^"
"RTN","LA7SMU",153,0)
 E  S LA7Y=Y
"RTN","LA7SMU",154,0)
 Q LA7Y
"RTN","LA7SMU",155,0)
 ;
"RTN","LA7SMU",156,0)
 ;
"RTN","LA7SMU",157,0)
SMED(LA7SM,LA7EVC) ; Determine shipping manifest's event date
"RTN","LA7SMU",158,0)
 ; Call with LA7SM = ien of entry in file #62.8 LAB SHIPPING MANIFEST
"RTN","LA7SMU",159,0)
 ;          LA7EVC = event type code
"RTN","LA7SMU",160,0)
 ;   Returns LA7Y = internal event date^external event date
"RTN","LA7SMU",161,0)
 N LA7I,LA7X,LA7Y
"RTN","LA7SMU",162,0)
 I '$G(LA7SM) Q "-1^No shipping manifest passed"
"RTN","LA7SMU",163,0)
 S LA7SM(0)=$G(^LAHM(62.8,+LA7SM,0))
"RTN","LA7SMU",164,0)
 S LA7EV=+$$EVNC(LA7EVC)
"RTN","LA7SMU",165,0)
 I LA7EVC="SM05",$P(LA7SM(0),"^",3)'>2 Q "0^Shipping manifest has not been shipped"
"RTN","LA7SMU",166,0)
 S LA7I=0,LA7Y=""
"RTN","LA7SMU",167,0)
 F  S LA7I=$O(^LAHM(62.85,"B",$P(LA7SM(0),"^"),LA7I)) Q:'LA7I  D  Q:$L(LA7Y)
"RTN","LA7SMU",168,0)
 . I $P($G(^LAHM(62.85,LA7I,0)),"^",5)'=LA7EV Q
"RTN","LA7SMU",169,0)
 . S LA7Y=$P(^LAHM(62.85,LA7I,0),"^",7)_"^"_$$FMTE^XLFDT($P(^LAHM(62.85,LA7I,0),"^",7),"M") ; Event date/time
"RTN","LA7SMU",170,0)
 I $G(LA7Y)="" S LA7Y="-2^No event date found"
"RTN","LA7SMU",171,0)
 Q LA7Y
"RTN","LA7SMU",172,0)
 ;
"RTN","LA7SMU",173,0)
 ;
"RTN","LA7SMU",174,0)
EVNC(LA7EVC) ; Resolve an event code to it's pointer/text(.01) value
"RTN","LA7SMU",175,0)
 ; Call with LA7EVC = Code to lookup, i.e. SM01, SM50
"RTN","LA7SMU",176,0)
 ;        Returns Y = ien of code in file #64.061, LAB ELECTRONIC CODES.
"RTN","LA7SMU",177,0)
 N X,Y
"RTN","LA7SMU",178,0)
 S (X,Y)=0
"RTN","LA7SMU",179,0)
 F  S X=$O(^LAB(64.061,"F",LA7EVC,X)) Q:'X  D  Q:Y
"RTN","LA7SMU",180,0)
 . S X(0)=$G(^LAB(64.061,X,0))
"RTN","LA7SMU",181,0)
 . I $P(X(0),"^",7)="E" S Y=X_"^"_$P(X(0),"^")
"RTN","LA7SMU",182,0)
 I 'Y S Y="0^Code not on file"
"RTN","LA7SMU",183,0)
 Q Y
"RTN","LA7SMU",184,0)
 ;
"RTN","LA7SMU",185,0)
 ;
"RTN","LA7SMU",186,0)
CHKTST(LA7SM,LA762801) ; Check and update if test is still valid.
"RTN","LA7SMU",187,0)
 ; Call with LA7SM = ien of shipping manifest in file #62.8
"RTN","LA7SMU",188,0)
 ;        LA762801 = ien of entry on test multiple in file #62.8
"RTN","LA7SMU",189,0)
 ;
"RTN","LA7SMU",190,0)
 ; Returns LA7SKIP = 0 (Test still on accession).
"RTN","LA7SMU",191,0)
 ;                   1 (Test not on accession).
"RTN","LA7SMU",192,0)
 ;                   2 (Accession deleted/purged).
"RTN","LA7SMU",193,0)
 ;                   3 (Test not on accession - already shipped)
"RTN","LA7SMU",194,0)
 ;                   4 (Accession deleted/purged - already shipped)
"RTN","LA7SMU",195,0)
 ;
"RTN","LA7SMU",196,0)
 N LA7AA,LA7AD,LA7AN,LA7DATA,LA7SKIP,LA7UID,X,Y
"RTN","LA7SMU",197,0)
 S LA7SKIP=0
"RTN","LA7SMU",198,0)
 S LA7SM(0)=$G(^LAHM(62.8,+LA7SM,0))
"RTN","LA7SMU",199,0)
 S LA762801(0)=$G(^LAHM(62.8,+LA7SM,10,+LA762801,0))
"RTN","LA7SMU",200,0)
 S LA7UID=$P(LA762801(0),"^",5)
"RTN","LA7SMU",201,0)
 S X=$Q(^LRO(68,"C",LA7UID))
"RTN","LA7SMU",202,0)
 S LA7AA=+$QS(X,4),LA7AD=+$QS(X,5),LA7AN=+$QS(X,6)
"RTN","LA7SMU",203,0)
 ;
"RTN","LA7SMU",204,0)
 ; Test found.
"RTN","LA7SMU",205,0)
 I $D(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,+$P(LA762801(0),"^",2),0)) Q LA7SKIP
"RTN","LA7SMU",206,0)
 ; Accession missing.
"RTN","LA7SMU",207,0)
 I '$D(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)) D
"RTN","LA7SMU",208,0)
 . ; Already shipped
"RTN","LA7SMU",209,0)
 . I $P(LA7SM(0),"^",3)>4 S LA7SKIP=4 Q
"RTN","LA7SMU",210,0)
 . S LA7SKIP=2,LA7DATA="SM62"
"RTN","LA7SMU",211,0)
 ;
"RTN","LA7SMU",212,0)
 ; Test missing.
"RTN","LA7SMU",213,0)
 I 'LA7SKIP,'$D(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,+$P(LA762801(0),"^",2),0)) D
"RTN","LA7SMU",214,0)
 . ; Already shipped
"RTN","LA7SMU",215,0)
 . I $P(LA7SM(0),"^",3)>4 S LA7SKIP=3 Q
"RTN","LA7SMU",216,0)
 . S LA7SKIP=1,LA7DATA="SM61"
"RTN","LA7SMU",217,0)
 ;
"RTN","LA7SMU",218,0)
 ; Update manifest/event file if test has not shipped.
"RTN","LA7SMU",219,0)
 I LA7SKIP,LA7SKIP<3 D
"RTN","LA7SMU",220,0)
 . ; Update test on manifest
"RTN","LA7SMU",221,0)
 . D STSUP^LA7SMU(+LA7SM,LA762801,0)
"RTN","LA7SMU",222,0)
 . ; Update event file
"RTN","LA7SMU",223,0)
 . S LA7DATA=LA7DATA_"^"_$$NOW^XLFDT_"^"_$P(LA762801(0),"^",2)_"^"_$P(LA7SM(0),"^")
"RTN","LA7SMU",224,0)
 . D SEUP^LA7SMU(LA7UID,2,LA7DATA)
"RTN","LA7SMU",225,0)
 Q LA7SKIP
"RTN","LA7SMU1")
0^14^B18115963
"RTN","LA7SMU1",1,0)
LA7SMU1 ;DALOI/JMC - Shipping Manifest Utility (Cont'd);5/5/97 14:44
"RTN","LA7SMU1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46**;Sep 27, 1994
"RTN","LA7SMU1",3,0)
 ;
"RTN","LA7SMU1",4,0)
 Q
"RTN","LA7SMU1",5,0)
 ;
"RTN","LA7SMU1",6,0)
SMW(LA7SM) ; "Write" additional information on DIC lookup of #62.48.
"RTN","LA7SMU1",7,0)
 ; Called by DIC("W")
"RTN","LA7SMU1",8,0)
 ; Call with LA7SM = ien of entry in file #62.8
"RTN","LA7SMU1",9,0)
 ;
"RTN","LA7SMU1",10,0)
 N LA7X,LA7Y,LA7EVC
"RTN","LA7SMU1",11,0)
 ;
"RTN","LA7SMU1",12,0)
 S LA7SM(0)=$G(^LAHM(62.8,LA7SM,0))
"RTN","LA7SMU1",13,0)
 ; Shipping configuration
"RTN","LA7SMU1",14,0)
 S LA7X=" "_$P($G(^LAHM(62.9,$P(LA7SM(0),"^",2),0)),"^")
"RTN","LA7SMU1",15,0)
 S LA7X=LA7X_" Status: "_$$EXTERNAL^DILFD(62.8,.03,"",$P(LA7SM(0),"^",3))
"RTN","LA7SMU1",16,0)
 S LA7EVC="SM"_$S($P(LA7SM(0),"^",3)=0:"00",1:$P("02^03^04^05^07","^",+$P(LA7SM(0),"^",3)))
"RTN","LA7SMU1",17,0)
 S LA7Y=$$SMED^LA7SMU(LA7SM,LA7EVC)
"RTN","LA7SMU1",18,0)
 S LA7X=LA7X_" as of "_$P(LA7Y,"^",2)
"RTN","LA7SMU1",19,0)
 D EN^DDIOL(LA7X,"","?18")
"RTN","LA7SMU1",20,0)
 Q
"RTN","LA7SMU1",21,0)
 ;
"RTN","LA7SMU1",22,0)
 ;
"RTN","LA7SMU1",23,0)
ADATE ; Select accession dates if specified
"RTN","LA7SMU1",24,0)
 ;
"RTN","LA7SMU1",25,0)
 N DIR,DIRUT,DTOUT,LRAA,X,Y
"RTN","LA7SMU1",26,0)
 ;
"RTN","LA7SMU1",27,0)
 S DIR(0)="YO",DIR("A")="Use default accession dates",DIR("B")="YES"
"RTN","LA7SMU1",28,0)
 S DIR("?",1)="Enter ""YES"" to use the current accession date for each accession area utilized by this shipping configuration."
"RTN","LA7SMU1",29,0)
 S DIR("?",2)=" "
"RTN","LA7SMU1",30,0)
 S DIR("?")="If you select ""NO"" then you will be asked to specify a specific accession date and starting and ending accession numbers for each accession area."
"RTN","LA7SMU1",31,0)
 D ^DIR
"RTN","LA7SMU1",32,0)
 ; User aborted
"RTN","LA7SMU1",33,0)
 I $D(DIRUT) S LA7QUIT=1 Q
"RTN","LA7SMU1",34,0)
 ; Use default accession dates
"RTN","LA7SMU1",35,0)
 I Y=1 Q
"RTN","LA7SMU1",36,0)
 ;
"RTN","LA7SMU1",37,0)
 S X=0
"RTN","LA7SMU1",38,0)
 F  S X=$O(^LAHM(62.9,+LA7SCFG,60,X)) Q:'X  D
"RTN","LA7SMU1",39,0)
 . S X(0)=$G(^LAHM(62.9,+LA7SCFG,60,X,0))
"RTN","LA7SMU1",40,0)
 . I $P(X(0),"^",2),'$D(LA7AA($P(X(0),"^",2))) S LA7AA($P(X(0),"^",2))=""
"RTN","LA7SMU1",41,0)
 ;
"RTN","LA7SMU1",42,0)
 S LA7AA=0
"RTN","LA7SMU1",43,0)
 F  S LA7AA=$O(LA7AA(LA7AA)) Q:'LA7AA  D  Q:LA7QUIT
"RTN","LA7SMU1",44,0)
 . N %DT,DTOUT,LRAA,LRAD,LREND,LRFAN,LRLAN
"RTN","LA7SMU1",45,0)
 . D EN^DDIOL("For Accession Area: "_$P($G(^LRO(68,LA7AA,0)),"^"),"","!!?2")
"RTN","LA7SMU1",46,0)
 . S LRAA=LA7AA D ADATE^LRWU3
"RTN","LA7SMU1",47,0)
 . I Y<1!($G(DTOUT)) S LA7QUIT=1 Q
"RTN","LA7SMU1",48,0)
 . S LA7AA(LA7AA)=$G(LRAD)
"RTN","LA7SMU1",49,0)
 . D LRAN^LRWU3
"RTN","LA7SMU1",50,0)
 . I LREND S LA7QUIT=1 Q
"RTN","LA7SMU1",51,0)
 . S LA7AA(LA7AA)=$G(LRAD)_"^"_$G(LRFAN)_"^"_$G(LRLAN)
"RTN","LA7SMU1",52,0)
 Q
"RTN","LA7SMU1",53,0)
 ;
"RTN","LA7SMU1",54,0)
 ;
"RTN","LA7SMU1",55,0)
ASKPREV() ; Ask if build should exclude tests from building that have previously
"RTN","LA7SMU1",56,0)
 ; been removed from a manifest. Allows user to control if tests rebuild
"RTN","LA7SMU1",57,0)
 ; onto the same or different manifest.
"RTN","LA7SMU1",58,0)
 ;
"RTN","LA7SMU1",59,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SMU1",60,0)
 ;
"RTN","LA7SMU1",61,0)
 S DIR(0)="YO"
"RTN","LA7SMU1",62,0)
 S DIR("A")="Exclude previously removed tests from building"
"RTN","LA7SMU1",63,0)
 S DIR("B")="YES"
"RTN","LA7SMU1",64,0)
 S DIR("?",1)="Answer 'YES' if you do NOT want tests previously removed"
"RTN","LA7SMU1",65,0)
 S DIR("?",2)="from a manifest to be added to this manifest."
"RTN","LA7SMU1",66,0)
 S DIR("?",3)=" "
"RTN","LA7SMU1",67,0)
 S DIR("?",4)="Answer 'NO' if you WANT tests to be added to this manifest"
"RTN","LA7SMU1",68,0)
 S DIR("?",5)="that were previouslu removed from a manifest and are"
"RTN","LA7SMU1",69,0)
 S DIR("?")="otherwise eligible to be added."
"RTN","LA7SMU1",70,0)
 D ^DIR
"RTN","LA7SMU1",71,0)
 Q $S($D(DIRUT):-1,1:+Y)
"RTN","LA7SMU1",72,0)
 ;
"RTN","LA7SMU1",73,0)
 ;
"RTN","LA7SMU1",74,0)
PREV(LA7UID,LA760) ; Determine if test previously removed from a manifest.
"RTN","LA7SMU1",75,0)
 ; Checks all manifests for accession/test combination.
"RTN","LA7SMU1",76,0)
 ; Call with LA7UID = accession's uid
"RTN","LA7SMU1",77,0)
 ;            LA760 = file #60 test ien 
"RTN","LA7SMU1",78,0)
 ;
"RTN","LA7SMU1",79,0)
 ; Returns 0 = not previously removed from a manifest
"RTN","LA7SMU1",80,0)
 ;         1 = previously removed from a manifest
"RTN","LA7SMU1",81,0)
 ;
"RTN","LA7SMU1",82,0)
 ; Called by LA7SMB
"RTN","LA7SMU1",83,0)
 ;
"RTN","LA7SMU1",84,0)
 N LA7628,LA762801,LA7FLAG,LA7ROOT,LA7X
"RTN","LA7SMU1",85,0)
 ;
"RTN","LA7SMU1",86,0)
 S LA7FLAG=0
"RTN","LA7SMU1",87,0)
 I '$L($G(LA7UID))!'(+$G(LA760)) Q LA7FLAG
"RTN","LA7SMU1",88,0)
 S LA7ROOT="^LAHM(62.8,""UID"",LA7UID)"
"RTN","LA7SMU1",89,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:$QS(LA7ROOT,3)'=LA7UID  D  Q:LA7FLAG
"RTN","LA7SMU1",90,0)
 . ; Manifest and specimen ien
"RTN","LA7SMU1",91,0)
 . S LA7628=$QS(LA7ROOT,4),LA762801=$QS(LA7ROOT,5)
"RTN","LA7SMU1",92,0)
 . S LA7X=$G(^LAHM(62.8,LA7628,10,LA762801,0))
"RTN","LA7SMU1",93,0)
 . ; Found previous test removal
"RTN","LA7SMU1",94,0)
 . I $P(LA7X,"^",2)=LA760,$P(LA7X,"^",8)=0 S LA7FLAG=1
"RTN","LA7SMU1",95,0)
 Q LA7FLAG
"RTN","LA7SMU1",96,0)
 ;
"RTN","LA7SMU1",97,0)
 ;
"RTN","LA7SMU1",98,0)
DOT(LA7CODE,LA7NCS,LA7UID,LA7628) ; Determine ordered tests
"RTN","LA7SMU1",99,0)
 ; 
"RTN","LA7SMU1",100,0)
 ; Call with LA7CODE = Test code to look up
"RTN","LA7SMU1",101,0)
 ;            LA7NCS = name of coding system
"RTN","LA7SMU1",102,0)
 ;            LA7UID = accession's UID
"RTN","LA7SMU1",103,0)
 ;            LA7628 = ien of shipping manifest in #62.8
"RTN","LA7SMU1",104,0)
 ;
"RTN","LA7SMU1",105,0)
 ; Returns     LA760 = ien of test entry in file #60 if found
"RTN","LA7SMU1",106,0)
 ;
"RTN","LA7SMU1",107,0)
 ; Given a test code, accession and a shipping manifest finds the
"RTN","LA7SMU1",108,0)
 ; file #60 test which is associated with the test code on the manifest.
"RTN","LA7SMU1",109,0)
 ;
"RTN","LA7SMU1",110,0)
 ; Called from LA7VIN4 to determine ordered test and update shipping event.
"RTN","LA7SMU1",111,0)
 N LA764,LA7I,LA7X,LA7Y
"RTN","LA7SMU1",112,0)
 ;
"RTN","LA7SMU1",113,0)
 ; Quit if no code or UID passed.
"RTN","LA7SMU1",114,0)
 I $G(LA7CODE)=""!($G(LA7UID)="") Q ""
"RTN","LA7SMU1",115,0)
 ;
"RTN","LA7SMU1",116,0)
 S (LA760,LA764)=0
"RTN","LA7SMU1",117,0)
 ; Using NLT codes
"RTN","LA7SMU1",118,0)
 I $G(LA7NCS)="99VA64" S LA764=+$O(^LAM("E",LA7CODE,0))
"RTN","LA7SMU1",119,0)
 ;
"RTN","LA7SMU1",120,0)
 ; Try NLT in case other system is returning NLT codes but not saying so
"RTN","LA7SMU1",121,0)
 I 'LA764,$D(^LAM("E",LA7CODE)) S LA764=+$O(^LAM("E",LA7CODE,0))
"RTN","LA7SMU1",122,0)
 ;
"RTN","LA7SMU1",123,0)
 S LA7I=0
"RTN","LA7SMU1",124,0)
 F  S LA7I=$O(^LAHM(62.8,LA7628,"UID",LA7UID,LA7I)) Q:'LA7I  D  Q:LA760
"RTN","LA7SMU1",125,0)
 . S LA7X=$G(^LAHM(62.8,LA7628,10,LA7I,0))
"RTN","LA7SMU1",126,0)
 . S LA7Y=$P(LA7X,"^",2)
"RTN","LA7SMU1",127,0)
 . ; Found match on NLT code
"RTN","LA7SMU1",128,0)
 . I LA7Y,+$P(^LAB(60,LA7Y,64),"^")=LA764 S LA760=LA7Y Q
"RTN","LA7SMU1",129,0)
 . ; Found match on non-VA code
"RTN","LA7SMU1",130,0)
 . I LA7CODE=$P($G(^LAHM(62.8,LA7628,10,LA7I,5)),"^") S LA760=LA7Y
"RTN","LA7SMU1",131,0)
 ;
"RTN","LA7SMU1",132,0)
 Q LA760
"RTN","LA7SMU2")
0^40^B20789198
"RTN","LA7SMU2",1,0)
LA7SMU2 ;DALOI/JMC - Shipping Manifest Utility (Cont'd);5/5/97 14:44
"RTN","LA7SMU2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7SMU2",3,0)
 Q
"RTN","LA7SMU2",4,0)
 ;
"RTN","LA7SMU2",5,0)
DTTO(LA7SCFG,LA7VNLT,LA7HLSC,LA764NCS,LA761NCS,LA7HLPRI) ; Determine test to order
"RTN","LA7SMU2",6,0)
 ; Call with LA7SCFG = ien of Shipping Configuration file #62.9
"RTN","LA7SMU2",7,0)
 ;           LA7VNLT = NLT code or non-VA test code
"RTN","LA7SMU2",8,0)
 ;           LA7HLSC = HL7 Specimen Code
"RTN","LA7SMU2",9,0)
 ;          LA764NCS = HL7 Name of Test Coding System
"RTN","LA7SMU2",10,0)
 ;          LA761NCS = HL7 Name of Specimen Coding System
"RTN","LA7SMU2",11,0)
 ;          LA7HLPRI = HL7 Priority Code
"RTN","LA7SMU2",12,0)
 ; Returns      LA7X = 0^0^0^0^ (if unsuccessful)
"RTN","LA7SMU2",13,0)
 ;   LABORATORY TEST (ien file #60)^TOPOGRAPHY (ien file #61)^COLLECTION SAMPLE (ien file #62)^URGENCY (ien file #62.05)
"RTN","LA7SMU2",14,0)
 ;
"RTN","LA7SMU2",15,0)
 N LA7V64,LA7X,X,Y
"RTN","LA7SMU2",16,0)
 ;
"RTN","LA7SMU2",17,0)
 S LA7X="0^0^0^0^"
"RTN","LA7SMU2",18,0)
 I $G(LA7HLSC)="" Q LA7X
"RTN","LA7SMU2",19,0)
 I $G(LA7VNLT)="" Q LA7X
"RTN","LA7SMU2",20,0)
 ;
"RTN","LA7SMU2",21,0)
 ; Make sure variables initialized.
"RTN","LA7SMU2",22,0)
 S LA7HLPRI=$G(LA7HLPRI),LA7SCFG=+$G(LA7SCFG)
"RTN","LA7SMU2",23,0)
 ; 
"RTN","LA7SMU2",24,0)
 ; If coding systems not defined then assume
"RTN","LA7SMU2",25,0)
 ; HL7 Table 0070 and VA NLT file
"RTN","LA7SMU2",26,0)
 I LA761NCS="0070" S LA761NCS="HL70070"
"RTN","LA7SMU2",27,0)
 I $G(LA761NCS)="" S LA761NCS="HL70070"
"RTN","LA7SMU2",28,0)
 I $G(LA764NCS)="" S LA764NCS="99VA64"
"RTN","LA7SMU2",29,0)
 ;
"RTN","LA7SMU2",30,0)
 ; Build index of tests if not previously done for this session.
"RTN","LA7SMU2",31,0)
 I '$D(^TMP("LA7TC",$J,LA7SCFG)) D BINDX
"RTN","LA7SMU2",32,0)
 ;
"RTN","LA7SMU2",33,0)
 ; Found test info with priority
"RTN","LA7SMU2",34,0)
 I $L(LA7HLPRI) D
"RTN","LA7SMU2",35,0)
 . N X
"RTN","LA7SMU2",36,0)
 . S X=$G(^TMP("LA7TC",$J,LA7SCFG,LA7VNLT,LA7HLSC,LA7HLPRI))
"RTN","LA7SMU2",37,0)
 . I +X,$P(X,"^",2),$P(X,"^",3) S LA7X=X
"RTN","LA7SMU2",38,0)
 ;
"RTN","LA7SMU2",39,0)
 ; Found test info with no priority specified
"RTN","LA7SMU2",40,0)
 I 'LA7X D
"RTN","LA7SMU2",41,0)
 . N X
"RTN","LA7SMU2",42,0)
 . S X=$G(^TMP("LA7TC",$J,LA7SCFG,LA7VNLT,LA7HLSC))
"RTN","LA7SMU2",43,0)
 . I +X,$P(X,"^",2),$P(X,"^",3) S LA7X=X
"RTN","LA7SMU2",44,0)
 ;
"RTN","LA7SMU2",45,0)
 ; Otherwise get values from files #60 LABORATORY TEST and #61, TOPOGRAPHY
"RTN","LA7SMU2",46,0)
 I 'LA7X,LA764NCS="99VA64" D
"RTN","LA7SMU2",47,0)
 . S LA7V64=$O(^LAM("E",LA7VNLT,0)) ; Lookup NLT code
"RTN","LA7SMU2",48,0)
 . I LA7V64 D
"RTN","LA7SMU2",49,0)
 . . ; Lookup test using this NLT code
"RTN","LA7SMU2",50,0)
 . . S Y=$O(^LAB(60,"AC",LA7V64,0))
"RTN","LA7SMU2",51,0)
 . . ; Get lab test for this NLT code.
"RTN","LA7SMU2",52,0)
 . . I Y S $P(LA7X,"^")=Y
"RTN","LA7SMU2",53,0)
 . ; Get default topography and collection sample for this HL7 specimen type.
"RTN","LA7SMU2",54,0)
 . S X=$O(^LAB(61,"HL7",LA7HLSC,0)) Q:'X
"RTN","LA7SMU2",55,0)
 . S X(0)=$G(^LAB(61,X,0))
"RTN","LA7SMU2",56,0)
 . ; Topography and collection sample
"RTN","LA7SMU2",57,0)
 . S $P(LA7X,"^",2,3)=X_"^"_(+$P(X(0),"^",6))
"RTN","LA7SMU2",58,0)
 ;
"RTN","LA7SMU2",59,0)
 ; No urgency mapping, get last using this HL7 code or site's default.
"RTN","LA7SMU2",60,0)
 I '$P(LA7X,"^",4) D
"RTN","LA7SMU2",61,0)
 . ; Default urgency from #69.9
"RTN","LA7SMU2",62,0)
 . N X,LA7DURG
"RTN","LA7SMU2",63,0)
 . S LA7DURG=$S($P($G(^LAB(69.9,1,3)),"^",2):$P($G(^LAB(69.9,1,3)),"^",2),1:9)
"RTN","LA7SMU2",64,0)
 . ; If no priority, use site's default.
"RTN","LA7SMU2",65,0)
 . I LA7HLPRI="" S $P(LA7X,"^",4)=LA7DURG
"RTN","LA7SMU2",66,0)
 . I '$P(LA7X,"^",4) D
"RTN","LA7SMU2",67,0)
 . . ; Find highest non-workload urgency
"RTN","LA7SMU2",68,0)
 . . S X=$O(^LAB(62.05,"HL7",LA7HLPRI,50),-1)
"RTN","LA7SMU2",69,0)
 . . ; Last urgency using this priority code else use site's default
"RTN","LA7SMU2",70,0)
 . . I X S $P(LA7X,"^",4)=X
"RTN","LA7SMU2",71,0)
 . . E  S $P(LA7X,"^",4)=LA7DURG
"RTN","LA7SMU2",72,0)
 ;
"RTN","LA7SMU2",73,0)
 ; Check if test and urgency for forced and highest urgency allowed.
"RTN","LA7SMU2",74,0)
 I $P(LA7X,"^"),$P(LA7X,"^",4) D
"RTN","LA7SMU2",75,0)
 . N LA760
"RTN","LA7SMU2",76,0)
 . S LA760=$P(LA7X,"^")
"RTN","LA7SMU2",77,0)
 . ; File #60 forced urgency
"RTN","LA7SMU2",78,0)
 . I $P($G(^LAB(60,LA760,0)),"^",18) S $P(LA7X,"^",4)=$P(^LAB(60,LA760,0),"^",18)
"RTN","LA7SMU2",79,0)
 . ; File #60 highest urgency
"RTN","LA7SMU2",80,0)
 . I $P($G(^LAB(60,LA760,0)),"^",16),$P(LA7X,"^",4)<$P(^LAB(60,LA760,0),"^",16) S $P(LA7X,"^",4)=$P(^LAB(60,LA760,0),"^",16)
"RTN","LA7SMU2",81,0)
 ;
"RTN","LA7SMU2",82,0)
 Q LA7X
"RTN","LA7SMU2",83,0)
 ;
"RTN","LA7SMU2",84,0)
BINDX ; Build index of test for a shipping configuration.
"RTN","LA7SMU2",85,0)
 ; Called from above.
"RTN","LA7SMU2",86,0)
 ;
"RTN","LA7SMU2",87,0)
 I '$D(^LAHM(62.9,LA7SCFG,0)) Q
"RTN","LA7SMU2",88,0)
 ;
"RTN","LA7SMU2",89,0)
 N LA760,LA761,LA762,LA76205,LA764,LA7HL,LA7NLT,LA7NLTN,LA7TC,LA7X
"RTN","LA7SMU2",90,0)
 ;
"RTN","LA7SMU2",91,0)
 ; Build index for each test on cofiguration
"RTN","LA7SMU2",92,0)
 S LA7X=0
"RTN","LA7SMU2",93,0)
 F  S LA7X=$O(^LAHM(62.9,LA7SCFG,60,LA7X)) Q:'LA7X  D BLD
"RTN","LA7SMU2",94,0)
 ;
"RTN","LA7SMU2",95,0)
 Q
"RTN","LA7SMU2",96,0)
 ;
"RTN","LA7SMU2",97,0)
 ;
"RTN","LA7SMU2",98,0)
BLD ; Build TMP globlal for a test
"RTN","LA7SMU2",99,0)
 ; Called from above
"RTN","LA7SMU2",100,0)
 ;
"RTN","LA7SMU2",101,0)
 S LA7X(0)=$G(^LAHM(62.9,LA7SCFG,60,LA7X,0))
"RTN","LA7SMU2",102,0)
 S LA7X(5)=$G(^LAHM(62.9,LA7SCFG,60,LA7X,5))
"RTN","LA7SMU2",103,0)
 ;
"RTN","LA7SMU2",104,0)
 ; Laboratory test.
"RTN","LA7SMU2",105,0)
 S LA760=$P(LA7X(0),"^")
"RTN","LA7SMU2",106,0)
 ;
"RTN","LA7SMU2",107,0)
 ; Collection sample.
"RTN","LA7SMU2",108,0)
 S LA762=$P(LA7X(0),"^",9)
"RTN","LA7SMU2",109,0)
 ;
"RTN","LA7SMU2",110,0)
 ; Incomplete entry.
"RTN","LA7SMU2",111,0)
 I 'LA760!('LA762) Q
"RTN","LA7SMU2",112,0)
 ;
"RTN","LA7SMU2",113,0)
 ; Test urgency.
"RTN","LA7SMU2",114,0)
 S LA76205=$P(LA7X(0),"^",4)
"RTN","LA7SMU2",115,0)
 I LA76205 D
"RTN","LA7SMU2",116,0)
 . ; File #60 forced urgency
"RTN","LA7SMU2",117,0)
 . I $P($G(^LAB(60,LA760,0)),"^",18) S LA76205=$P(^LAB(60,LA760,0),"^",18)
"RTN","LA7SMU2",118,0)
 . ; File #60 highest urgency
"RTN","LA7SMU2",119,0)
 . I $P($G(^LAB(60,LA760,0)),"^",16),LA76205<$P(^LAB(60,LA760,0),"^",16) S LA76205=$P(^LAB(60,LA760,0),"^",16)
"RTN","LA7SMU2",120,0)
 ;
"RTN","LA7SMU2",121,0)
 ; Topography
"RTN","LA7SMU2",122,0)
 S LA761=$$GET1^DIQ(62,LA762_",",2,"I")
"RTN","LA7SMU2",123,0)
 I 'LA761 Q  ; Incomplete entry.
"RTN","LA7SMU2",124,0)
 ;
"RTN","LA7SMU2",125,0)
 ; Use HL7 specimen code if using table 0070 else use mapping in 62.9
"RTN","LA7SMU2",126,0)
 S LA7HL=""
"RTN","LA7SMU2",127,0)
 I LA761NCS="HL70070" S LA7HL=$$GET1^DIQ(61,LA761_",","LEDI HL7:HL7 ABBR")
"RTN","LA7SMU2",128,0)
 I LA7HL="" S LA7HL=$P(LA7X(5),"^",3)
"RTN","LA7SMU2",129,0)
 ;
"RTN","LA7SMU2",130,0)
 ; File #64 ien
"RTN","LA7SMU2",131,0)
 S LA764=+$$GET1^DIQ(60,LA760_",",64,"I")
"RTN","LA7SMU2",132,0)
 ;
"RTN","LA7SMU2",133,0)
 ; NLT code.
"RTN","LA7SMU2",134,0)
 S LA7NLT=$$GET1^DIQ(64,LA764_",",1)
"RTN","LA7SMU2",135,0)
 ;
"RTN","LA7SMU2",136,0)
 ; NLT code test name.
"RTN","LA7SMU2",137,0)
 S LA7NLTN=$$GET1^DIQ(64,LA764_",",.01)
"RTN","LA7SMU2",138,0)
 ;
"RTN","LA7SMU2",139,0)
 ; HL7 priority code.
"RTN","LA7SMU2",140,0)
 S LA76205("HL")=$S(LA76205:$$GET1^DIQ(62.05,LA76205_",","LEDI HL7:HL7 ABBR"),1:"")
"RTN","LA7SMU2",141,0)
 ;
"RTN","LA7SMU2",142,0)
 ; Use NLT code if using VA coding else use non-VA test order code.
"RTN","LA7SMU2",143,0)
 I LA764NCS="99VA64" S LA7TC=LA7NLT
"RTN","LA7SMU2",144,0)
 E  S LA7TC=$P(LA7X(5),"^")
"RTN","LA7SMU2",145,0)
 ;
"RTN","LA7SMU2",146,0)
 ; Set TMP global with information
"RTN","LA7SMU2",147,0)
 I LA760,LA761,LA762,$L(LA7HL),$L(LA7TC) D
"RTN","LA7SMU2",148,0)
 . S ^TMP("LA7TC",$J,LA7SCFG,LA7TC,LA7HL)=LA760_"^"_LA761_"^"_LA762
"RTN","LA7SMU2",149,0)
 . I $L(LA76205("HL")) S ^TMP("LA7TC",$J,LA7SCFG,LA7TC,LA7HL,LA76205("HL"))=LA760_"^"_LA761_"^"_LA762_"^"_LA76205
"RTN","LA7SMU2",150,0)
 ;
"RTN","LA7SMU2",151,0)
 Q
"RTN","LA7SRR")
0^61^B19306212
"RTN","LA7SRR",1,0)
LA7SRR ;DALOI/JMC - Select Accessions for Resending LEDI Results ; 11/21/01
"RTN","LA7SRR",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7SRR",3,0)
 ;
"RTN","LA7SRR",4,0)
EN ; Select Accessions to resend.
"RTN","LA7SRR",5,0)
 ;
"RTN","LA7SRR",6,0)
 ; Housekeeping before we start.
"RTN","LA7SRR",7,0)
 D EXIT
"RTN","LA7SRR",8,0)
 ;
"RTN","LA7SRR",9,0)
 S (LA7CNT,LA7QUIT)=0
"RTN","LA7SRR",10,0)
 ;
"RTN","LA7SRR",11,0)
 S DIR(0)="SO^1:Range of Accessions;2:Selected Accessions"
"RTN","LA7SRR",12,0)
 S DIR("A")="Selection Method",DIR("B")=1
"RTN","LA7SRR",13,0)
 D ^DIR
"RTN","LA7SRR",14,0)
 I $D(DIRUT) D EXIT Q
"RTN","LA7SRR",15,0)
 S LA7TYPE=+Y
"RTN","LA7SRR",16,0)
 ;
"RTN","LA7SRR",17,0)
 ; Get list of accession numbers, set flags used by LRWU4.
"RTN","LA7SRR",18,0)
 S LRACC=1,LREXMPT=1
"RTN","LA7SRR",19,0)
 I LA7TYPE=1 D
"RTN","LA7SRR",20,0)
 . D ^LRWU4
"RTN","LA7SRR",21,0)
 . I LRAN<1 S LA7QUIT=1 Q
"RTN","LA7SRR",22,0)
 . S FIRST=LRAN,X=$O(^LRO(68,LRAA,1,LRAD,1,":"),-1)
"RTN","LA7SRR",23,0)
 . S DIR(0)="NO^"_LRAN_":"_X_":0",DIR("B")=LRAN
"RTN","LA7SRR",24,0)
 . S DIR("A",1)="",DIR("A")="Download from "_LRAN_" to"
"RTN","LA7SRR",25,0)
 . D ^DIR K DIR
"RTN","LA7SRR",26,0)
 . I $D(DIRUT) S LA7QUIT=1 Q
"RTN","LA7SRR",27,0)
 . S LRAN=FIRST-1,LAST=Y
"RTN","LA7SRR",28,0)
 . F  S LRAN=$O(^LRO(68,LRAA,1,LRAD,1,LRAN)) Q:'LRAN!(LRAN>LAST)  D SETTMP
"RTN","LA7SRR",29,0)
 I LA7TYPE=2 F  D  Q:LA7QUIT!(LRAN<1)
"RTN","LA7SRR",30,0)
 . D ^LRWU4
"RTN","LA7SRR",31,0)
 . I $D(DTOUT)!($D(DUOUT)) S LA7QUIT=1 Q
"RTN","LA7SRR",32,0)
 . I LRAN<1 S:'$D(^TMP("LA7S-RTM",$J)) LA7QUIT=1 Q
"RTN","LA7SRR",33,0)
 . D SETTMP
"RTN","LA7SRR",34,0)
 I LA7QUIT D EXIT Q
"RTN","LA7SRR",35,0)
 ;
"RTN","LA7SRR",36,0)
 I '$D(^TMP("LA7S-RTM",$J)) D  Q
"RTN","LA7SRR",37,0)
 . S DIR("A",1)="No accessions found to retransmit."
"RTN","LA7SRR",38,0)
 . S DIR("A")="Enter RETURN to continue or '^' to exit"
"RTN","LA7SRR",39,0)
 . S DIR(0)="E"
"RTN","LA7SRR",40,0)
 . D ^DIR,EXIT
"RTN","LA7SRR",41,0)
 ;
"RTN","LA7SRR",42,0)
 S DIR("A")="Ready to retransmit"
"RTN","LA7SRR",43,0)
 S DIR("A",1)="Found "_LA7CNT_" accessions that can be retransmitted."
"RTN","LA7SRR",44,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","LA7SRR",45,0)
 D ^DIR K DIR
"RTN","LA7SRR",46,0)
 I Y'=1 D EXIT Q
"RTN","LA7SRR",47,0)
 D EN^DDIOL("Working","","!")
"RTN","LA7SRR",48,0)
 S LA7CNT=0,LA7UID=""
"RTN","LA7SRR",49,0)
 F  S LA7UID=$O(^TMP("LA7S-RTM",$J,LA7UID)) Q:LA7UID=""  D
"RTN","LA7SRR",50,0)
 . K LA7X,LA7Y
"RTN","LA7SRR",51,0)
 . S LA7X=^TMP("LA7S-RTM",$J,LA7UID)
"RTN","LA7SRR",52,0)
 . S LA7NLT="",LA7CNT=LA7CNT+1
"RTN","LA7SRR",53,0)
 . F  S LA7NLT=$O(^TMP("LA7S-RTM",$J,LA7UID,LA7NLT)) Q:LA7NLT=""  D
"RTN","LA7SRR",54,0)
 . . S LA764=$$FIND1^DIC(64,"","MX",LA7NLT,"C")
"RTN","LA7SRR",55,0)
 . . I 'LA764 Q
"RTN","LA7SRR",56,0)
 . . S LA7NLTN=$$GET1^DIQ(64,LA764_",",.01)
"RTN","LA7SRR",57,0)
 . . M LA7Y=^TMP("LA7S-RTM",$J,LA7UID,LA7NLT)
"RTN","LA7SRR",58,0)
 . . D SET^LA7VMSG($P(LA7X,"^"),$P(LA7X,"^",2),$P(LA7X,"^",3),$P(LA7X,"^",4),LA7NLTN,LA7NLT,$P(LA7X,"^",5),$P(LA7X,"^",6),$P(LA7X,"^",7),$P(LA7X,"^",8),.LA7Y,"ORU")
"RTN","LA7SRR",59,0)
 ;
"RTN","LA7SRR",60,0)
 ; Task background job to create messages
"RTN","LA7SRR",61,0)
 S ZTIO="",ZTRTN="ORU^LA7VMSG",ZTDTH=$H
"RTN","LA7SRR",62,0)
 S ZTDESC="Resend Lab LEDI HL7 Result Message"
"RTN","LA7SRR",63,0)
 D ^%ZTLOAD
"RTN","LA7SRR",64,0)
 ;
"RTN","LA7SRR",65,0)
 K LA7X
"RTN","LA7SRR",66,0)
 S LA7X(1)="...Done",LA7X(1,"F")=""
"RTN","LA7SRR",67,0)
 I $G(ZTSK) D
"RTN","LA7SRR",68,0)
 . S LA7X(2)=LA7CNT_" accession"_$S(LA7CNT>1:"s",1:"")_" scheduled for retransmitting of results!"
"RTN","LA7SRR",69,0)
 . S LA7X(3)="Task# "_ZTSK_" queued for processing"
"RTN","LA7SRR",70,0)
 E  S LA7X(2)="*** Tasking of retransmission failed ***"
"RTN","LA7SRR",71,0)
 D EN^DDIOL(.LA7X),EXIT
"RTN","LA7SRR",72,0)
 ;
"RTN","LA7SRR",73,0)
 Q
"RTN","LA7SRR",74,0)
 ;
"RTN","LA7SRR",75,0)
 ;
"RTN","LA7SRR",76,0)
SETTMP ; Setup TMP global with accession to resend.
"RTN","LA7SRR",77,0)
 ;
"RTN","LA7SRR",78,0)
 N LA763,LA768,LA7I,LA7X,LA7Y,LRDFN,LRIDT,LRODT,LRSB,LRSS
"RTN","LA7SRR",79,0)
 ;
"RTN","LA7SRR",80,0)
 F LA7I=0,.3,3 S LA768(LA7I)=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,LA7I))
"RTN","LA7SRR",81,0)
 ;
"RTN","LA7SRR",82,0)
 ; Check accession for results available date.
"RTN","LA7SRR",83,0)
 I '$P(LA768(3),"^",4) Q
"RTN","LA7SRR",84,0)
 ; Not a LEDI specimen
"RTN","LA7SRR",85,0)
 I '$P(LA768(.3),"^",2),'$P(LA768(.3),"^",3) Q
"RTN","LA7SRR",86,0)
 ;
"RTN","LA7SRR",87,0)
 S LA7UID=$P(LA768(.3),"^"),LRSS=$P(^LRO(68,LRAA,0),"^",2)
"RTN","LA7SRR",88,0)
 I LRSS'="CH" D
"RTN","LA7SRR",89,0)
 . N LA7X
"RTN","LA7SRR",90,0)
 . S LA7X(1)=$$GET1^DIQ(68,LRAA_",",.02)_" subscript NOT supported at this time"
"RTN","LA7SRR",91,0)
 . S LA7X(2)="Accession with UID "_LA7UID_" skipped"
"RTN","LA7SRR",92,0)
 . D EN^DDIOL(.LA7X)
"RTN","LA7SRR",93,0)
 ;
"RTN","LA7SRR",94,0)
 ; Check file #63 for order codes and results/
"RTN","LA7SRR",95,0)
 S LRDFN=$P(LA768(0),"^"),LRODT=$P(LA768(0),"^",4),LRIDT=$P(LA768(3),"^",5)
"RTN","LA7SRR",96,0)
 S LRSB=1
"RTN","LA7SRR",97,0)
 F  S LRSB=$O(^LR(LRDFN,LRSS,LRIDT,LRSB)) Q:'LRSB  D
"RTN","LA7SRR",98,0)
 . S X=^LR(LRDFN,LRSS,LRIDT,LRSB)
"RTN","LA7SRR",99,0)
 . S LA7NLT=$P($P(X,"^",3),"!")
"RTN","LA7SRR",100,0)
 . I $L(LA7NLT) S LA7Y(LA7NLT,LRSB)=""
"RTN","LA7SRR",101,0)
 ;
"RTN","LA7SRR",102,0)
 I $L(LA7UID),$D(LA7Y) D
"RTN","LA7SRR",103,0)
 . S LA7CNT=LA7CNT+1
"RTN","LA7SRR",104,0)
 . S X=$P(LA768(.3),"^",1)_"^"_$P(LA768(.3),"^",2)_"^"_$P(LA768(.3),"^",5)_"^"_$P(LA768(.3),"^",3)_"^"_LRIDT_"^"_LRSS_"^"_LRDFN_"^"_LRODT
"RTN","LA7SRR",105,0)
 . S ^TMP("LA7S-RTM",$J,LA7UID)=X
"RTN","LA7SRR",106,0)
 . S LA7I=""
"RTN","LA7SRR",107,0)
 . F  S LA7I=$O(LA7Y(LA7I)) Q:LA7I=""  M ^TMP("LA7S-RTM",$J,LA7UID,LA7I)=LA7Y(LA7I)
"RTN","LA7SRR",108,0)
 Q
"RTN","LA7SRR",109,0)
 ;
"RTN","LA7SRR",110,0)
 ;
"RTN","LA7SRR",111,0)
EXIT ; Housekeeping - clean up.
"RTN","LA7SRR",112,0)
 K ^TMP("LA7S-RTM",$J)
"RTN","LA7SRR",113,0)
 K LA764,LA7CNT,LA7NLT,LA7NLTN,LA7QUIT,LA7TYPE,LA7UID,LA7X,LA7Y
"RTN","LA7SRR",114,0)
 K LRAA,LRACC,LRAD,LRAN,LREXMPT,LRIDIV,LRSS,LRX
"RTN","LA7SRR",115,0)
 K %DT,DA,DIC,DIR,DIRUT,DTOUT,DUOUT,FIRST,LAST,X,Y
"RTN","LA7SRR",116,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LA7SRR",117,0)
 Q
"RTN","LA7UIIN2")
0^4^B38831841
"RTN","LA7UIIN2",1,0)
LA7UIIN2 ;DALOI/JRR - Process Incoming UI Msgs, continued ; 12/3/1997
"RTN","LA7UIIN2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**17,23,27,46**;Sep 27, 1994
"RTN","LA7UIIN2",3,0)
 ;This routine is a continuation of LA7UIIN1 and is only called from there.
"RTN","LA7UIIN2",4,0)
 ;It is called to begin processing the NTE & OBX segments.
"RTN","LA7UIIN2",5,0)
 QUIT
"RTN","LA7UIIN2",6,0)
 ;
"RTN","LA7UIIN2",7,0)
NTE ; Process NTE segments that follow the OBR and OBX segments
"RTN","LA7UIIN2",8,0)
 ; These NTE segments contain comments from instruments or other facilities.
"RTN","LA7UIIN2",9,0)
 ; NTE segments following OBR's contain comments which refer to the entire test battery.
"RTN","LA7UIIN2",10,0)
 ; NTE segments following OBX's contain comments which are test specific.
"RTN","LA7UIIN2",11,0)
 ; Test specific comments can be prefaced with a site defined prefix -
"RTN","LA7UIIN2",12,0)
 ;   see field REMARK PREFIX (#19) in CHEM TEST multiple of AUTOMATED INSTRUMENT (#62.4 file.
"RTN","LA7UIIN2",13,0)
 ; NTE segments are not allowed anywhere except after the OBR or OBX segments.
"RTN","LA7UIIN2",14,0)
 ; There can be more than one NTE, each will be stored as a comment in ^LAH.
"RTN","LA7UIIN2",15,0)
 ;
"RTN","LA7UIIN2",16,0)
 F LA762495=LA762495:0 S LA762495=$O(^LAHM(62.49,LA76249,150,LA762495)) Q:'LA762495  S LA7NTE=$G(^(LA762495,0)) Q:$E(LA7NTE,1,3)'="NTE"  D
"RTN","LA7UIIN2",17,0)
 . N LA7,LA7I
"RTN","LA7UIIN2",18,0)
 . S LA7RMK=$P(LA7NTE,LA7FS,4)
"RTN","LA7UIIN2",19,0)
 . S LA7=$RE(LA7RMK)
"RTN","LA7UIIN2",20,0)
 . F LA7I=1:1:$L(LA7)  Q:$E(LA7,LA7I)'=" "  ; Find start of trailing spaces.
"RTN","LA7UIIN2",21,0)
 . S LA7RMK=$E(LA7RMK,1,($L(LA7RMK)-LA7I+1)) ; Truncate trailing spaces.
"RTN","LA7UIIN2",22,0)
 . I LA7RMK=$TR($P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,3)),"^",6),"~") Q  ; Don't store remark if same as specimen comment (without "~").
"RTN","LA7UIIN2",23,0)
 . I LA7RMK=$G(^LR(+$G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)),.091)) Q  ; or patient info (#.091 in file 63) - info previously downloaded
"RTN","LA7UIIN2",24,0)
 . I LA7RMK="" Q  ; No remark to store.
"RTN","LA7UIIN2",25,0)
 . I $O(LA7RMK(0,0)) D  Q  ; If test specific, store test name with comments (see below)
"RTN","LA7UIIN2",26,0)
 . . N LA7I
"RTN","LA7UIIN2",27,0)
 . . S LA7I=0
"RTN","LA7UIIN2",28,0)
 . . F  S LA7I=$O(LA7RMK(0,LA7I)) Q:'LA7I  I $P(LA7RMK(0,LA7I),"^") D RMKSET^LASET(LA7LWL,LA7ISQN,LA7RMK,$P(LA7RMK(0,LA7I),"^",2))
"RTN","LA7UIIN2",29,0)
 . I $P(LA7INST,"^",17) D RMKSET^LASET(LA7LWL,LA7ISQN,LA7RMK,"") ;store comment in 1 node of ^LAH global
"RTN","LA7UIIN2",30,0)
 K LA7RMK
"RTN","LA7UIIN2",31,0)
 Q:LA762495=""  ;no more segments to process
"RTN","LA7UIIN2",32,0)
 ;
"RTN","LA7UIIN2",33,0)
OBX F LA762495=LA762495-1:0 S LA762495=$O(^LAHM(62.49,LA76249,150,LA762495)) Q:'LA762495  K LA7OBX S LA7OBX=^(LA762495,0) Q:$E(LA7OBX,1,3)'="OBX"  D
"RTN","LA7UIIN2",34,0)
 . K LA7RMK
"RTN","LA7UIIN2",35,0)
 . S LA7TEST=$P($P(LA7OBX,LA7FS,4),LA7CS,1)
"RTN","LA7UIIN2",36,0)
 . I LA7TEST="" D  QUIT
"RTN","LA7UIIN2",37,0)
 . . D CREATE^LA7LOG(15)
"RTN","LA7UIIN2",38,0)
 . I '$D(^LAB(62.4,LA7624,3,"AC",LA7TEST)) D  QUIT  ;test code not found in auto inst file
"RTN","LA7UIIN2",39,0)
 . . D CREATE^LA7LOG(16)
"RTN","LA7UIIN2",40,0)
 . S LA76241=0 ; Process results for all tests which use this test code.
"RTN","LA7UIIN2",41,0)
 . F  S LA76241=$O(^LAB(62.4,LA7624,3,"AC",LA7TEST,LA76241)) Q:'LA76241  D
"RTN","LA7UIIN2",42,0)
 . . S LA7VAL=$P(LA7OBX,LA7FS,6)
"RTN","LA7UIIN2",43,0)
 . . F LA7I=0,1,2 S LA76241(LA7I)=$G(^LAB(62.4,LA7624,3,LA76241,LA7I))
"RTN","LA7UIIN2",44,0)
 . . I (LA76241(0)="")!(LA76241(1)="") D  QUIT  ;chem test fields incorrect
"RTN","LA7UIIN2",45,0)
 . . . D CREATE^LA7LOG(18)
"RTN","LA7UIIN2",46,0)
 . . ; Setup LA7RMK(0) variable in case comments (NTE) sent with test results.
"RTN","LA7UIIN2",47,0)
 . . S LA7RMK(0,+LA76241(0))=+$P(LA76241(2),"^",7)_"^"_$P(LA76241(2),"^",8)
"RTN","LA7UIIN2",48,0)
 . . K LA7XFORM ;this array can be set from inside PARAM 1
"RTN","LA7UIIN2",49,0)
 . . X $P(LA76241(0),"^",2) ;execute PARAM 1
"RTN","LA7UIIN2",50,0)
 . . I LA7VAL="" D  QUIT  ;no value
"RTN","LA7UIIN2",51,0)
 . . . D CREATE^LA7LOG(17)
"RTN","LA7UIIN2",52,0)
 . . D XFORM ;transform result based on fields in file 62.4
"RTN","LA7UIIN2",53,0)
 . . Q:LA7VAL=""
"RTN","LA7UIIN2",54,0)
 . . I $G(LA7LIMIT)=1 D  ;flag to not store if wasn't explicitly ordered
"RTN","LA7UIIN2",55,0)
 . . . K LA7LIMIT,LA7TREEN,^TMP("LA7TREE",$J)
"RTN","LA7UIIN2",56,0)
 . . . F LA76804=0:0 S LA76804=$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA76804)) Q:'LA76804  D UNWIND^LA7UTIL(LA76804) ;store all tests accessioned in ^TMP
"RTN","LA7UIIN2",57,0)
 . . . I '$D(^TMP("LA7TREE",$J,+LA76241(0))) S LA7LIMIT=1 ;wasn't ordered
"RTN","LA7UIIN2",58,0)
 . . I $G(LA7LIMIT) D  QUIT  ;don't store
"RTN","LA7UIIN2",59,0)
 . . . S $P(LA7RMK(0,+LA76241(0)),"^",1)=0 ; Set flag to not store comments if any.
"RTN","LA7UIIN2",60,0)
 . . . K LA7LIMIT,^TMP("LA7TREE",$J)
"RTN","LA7UIIN2",61,0)
 . . K ^TMP("LA7TREE",$J)
"RTN","LA7UIIN2",62,0)
 . . S LA76304=+$P(LA76241(1),"(",2) ;lab data field
"RTN","LA7UIIN2",63,0)
 . . I LA76304'>1 D  Q  ; No dataname for this result
"RTN","LA7UIIN2",64,0)
 . . . D CREATE^LA7LOG(18)
"RTN","LA7UIIN2",65,0)
 . . S ^LAH(LA7LWL,1,LA7ISQN,LA76304)=LA7VAL ;set data node=test value
"RTN","LA7UIIN2",66,0)
 . . D REFRNG($P(LA7OBX,LA7FS,8)) ; Store reference ranges
"RTN","LA7UIIN2",67,0)
 . . D ABFLAG($P(LA7OBX,LA7FS,9)) ; Store abnormal flags
"RTN","LA7UIIN2",68,0)
 . . D PRDID($P(LA7OBX,LA7FS,16),LA7CS) ; Store where test was performed.
"RTN","LA7UIIN2",69,0)
 I $E(LA7OBX,1,3)="NTE" S LA762495=LA762495-1 G NTE
"RTN","LA7UIIN2",70,0)
 K LA7RMK
"RTN","LA7UIIN2",71,0)
 Q
"RTN","LA7UIIN2",72,0)
 ;
"RTN","LA7UIIN2",73,0)
XFORM ; Transform the result based on fields 12,13,14,16,17 in the Chem Test
"RTN","LA7UIIN2",74,0)
 ; multiple in the Auto Instrument file (62.4), or set on the fly
"RTN","LA7UIIN2",75,0)
 ; from PARAM 1
"RTN","LA7UIIN2",76,0)
 N LA7I
"RTN","LA7UIIN2",77,0)
 S LA7XFORM=LA76241(2)
"RTN","LA7UIIN2",78,0)
 ; get PARAM 1 overides
"RTN","LA7UIIN2",79,0)
 I $D(LA7XFORM(1)),LA7XFORM(1)?1.N S $P(LA7XFORM,"^")=LA7XFORM(1)
"RTN","LA7UIIN2",80,0)
 F LA7I=2,3,5,6 I $D(LA7XFORM(LA7I)) S $P(LA7XFORM,"^",LA7I)=LA7XFORM(LA7I)
"RTN","LA7UIIN2",81,0)
 ; set up defaults if field was not answered
"RTN","LA7UIIN2",82,0)
 ;
"RTN","LA7UIIN2",83,0)
 ; accept results,yes
"RTN","LA7UIIN2",84,0)
 I $P(LA7XFORM,"^",3)="" S $P(LA7XFORM,"^",3)=1
"RTN","LA7UIIN2",85,0)
 ; strip spaces,yes
"RTN","LA7UIIN2",86,0)
 I $P(LA7XFORM,"^",6)="" S $P(LA7XFORM,"^",6)=1
"RTN","LA7UIIN2",87,0)
 ;
"RTN","LA7UIIN2",88,0)
 ; now transform
"RTN","LA7UIIN2",89,0)
 ; don't accept results
"RTN","LA7UIIN2",90,0)
 I '$P(LA7XFORM,"^",3) S LA7VAL="" Q
"RTN","LA7UIIN2",91,0)
 ; accept ordered tests only
"RTN","LA7UIIN2",92,0)
 I $P(LA7XFORM,"^",5) S LA7LIMIT=1
"RTN","LA7UIIN2",93,0)
 ; decimal places if result start with number or decimal point
"RTN","LA7UIIN2",94,0)
 ; skip results i.e. ">100".
"RTN","LA7UIIN2",95,0)
 I $P(LA7XFORM,"^")?1.N,LA7VAL?1(1N.E,1".".E) D
"RTN","LA7UIIN2",96,0)
 . S LA7VAL=$FN(LA7VAL,"",+LA7XFORM)
"RTN","LA7UIIN2",97,0)
 ; strip spaces
"RTN","LA7UIIN2",98,0)
 I $P(LA7XFORM,"^",6) S LA7VAL=$TR(LA7VAL," ","")
"RTN","LA7UIIN2",99,0)
 ; make result a comment, store comment in ^LAH global
"RTN","LA7UIIN2",100,0)
 ; set value to null after making into remark, don't store twice.
"RTN","LA7UIIN2",101,0)
 I $P(LA7XFORM,"^",2) D
"RTN","LA7UIIN2",102,0)
 . D RMKSET^LASET(LA7LWL,LA7ISQN,LA7VAL,"")
"RTN","LA7UIIN2",103,0)
 . S LA7VAL=""
"RTN","LA7UIIN2",104,0)
 Q
"RTN","LA7UIIN2",105,0)
 ;
"RTN","LA7UIIN2",106,0)
 ;
"RTN","LA7UIIN2",107,0)
PRDID(LA7PRDID,LA7CS) ; Process/Store Producer's ID
"RTN","LA7UIIN2",108,0)
 ; Store where test was performed.
"RTN","LA7UIIN2",109,0)
 ; Call with LA7PRDID = Producer's ID field
"RTN","LA7UIIN2",110,0)
 ;              LA7CS = component encoding character
"RTN","LA7UIIN2",111,0)
 N LA7X,LA7Y
"RTN","LA7UIIN2",112,0)
 S LA7PRDID=$G(LA7PRDID),LA7CS=$G(LA7CS)
"RTN","LA7UIIN2",113,0)
 ; Don't store producer's id.
"RTN","LA7UIIN2",114,0)
 I LA7PRDID=""!('$P(LA76241(2),"^",9))!(LA7CS="") Q
"RTN","LA7UIIN2",115,0)
 ;
"RTN","LA7UIIN2",116,0)
 S LA7X=$P(LA7PRDID,LA7CS,2)
"RTN","LA7UIIN2",117,0)
 I $L($P(LA7PRDID,LA7CS)) S LA7X=LA7X_$S($L(LA7X):" ",1:"")_"["_$P(LA7PRDID,LA7CS)_"]"
"RTN","LA7UIIN2",118,0)
 I LA7X="" Q
"RTN","LA7UIIN2",119,0)
 S LA7X="results from "_LA7X
"RTN","LA7UIIN2",120,0)
 S LA7Y=$P(LA7RMK(0,+LA76241(0)),"^",2)
"RTN","LA7UIIN2",121,0)
 ; If no prefix, use test name.
"RTN","LA7UIIN2",122,0)
 I '$L(LA7Y) S LA7Y=$P($G(^LAB(60,+LA76241(0),0)),"^")_": "
"RTN","LA7UIIN2",123,0)
 D RMKSET^LASET(LA7LWL,LA7ISQN,LA7X,LA7Y)
"RTN","LA7UIIN2",124,0)
 Q
"RTN","LA7UIIN2",125,0)
 ;
"RTN","LA7UIIN2",126,0)
 ;
"RTN","LA7UIIN2",127,0)
REFRNG(LA7X) ; Process/Store References Range.
"RTN","LA7UIIN2",128,0)
 ; Call with LA7X = reference range to store.
"RTN","LA7UIIN2",129,0)
 N LA7Y
"RTN","LA7UIIN2",130,0)
 S LA7X=$G(LA7X)
"RTN","LA7UIIN2",131,0)
 ; No ref range or don't store ref range.
"RTN","LA7UIIN2",132,0)
 I LA7X=""!('$P(LA76241(2),"^",10)) Q
"RTN","LA7UIIN2",133,0)
 S LA7X="ref range - "_LA7X
"RTN","LA7UIIN2",134,0)
 S LA7Y=$P(LA7RMK(0,+LA76241(0)),"^",2)
"RTN","LA7UIIN2",135,0)
 ; If no prefix, use test name.
"RTN","LA7UIIN2",136,0)
 I '$L(LA7Y) S LA7Y=$P($G(^LAB(60,+LA76241(0),0)),"^")_": "
"RTN","LA7UIIN2",137,0)
 D RMKSET^LASET(LA7LWL,LA7ISQN,LA7X,LA7Y)
"RTN","LA7UIIN2",138,0)
 Q
"RTN","LA7UIIN2",139,0)
 ;
"RTN","LA7UIIN2",140,0)
 ;
"RTN","LA7UIIN2",141,0)
ABFLAG(LA7X) ; Process/Store Abnormal Flags.
"RTN","LA7UIIN2",142,0)
 ; Call with LA7X = abnormal flags to store.
"RTN","LA7UIIN2",143,0)
 ; Converts flag to interpretation based on HL7 Table 0078.
"RTN","LA7UIIN2",144,0)
 ; If no match store code instead of interpretation
"RTN","LA7UIIN2",145,0)
 ;
"RTN","LA7UIIN2",146,0)
 N I,LA7Y,LA7Z
"RTN","LA7UIIN2",147,0)
 ;
"RTN","LA7UIIN2",148,0)
 S LA7X=$G(LA7X)
"RTN","LA7UIIN2",149,0)
 ; No flag or don't store abnormal flags.
"RTN","LA7UIIN2",150,0)
 I LA7X=""!('$P(LA76241(2),"^",11)) Q
"RTN","LA7UIIN2",151,0)
 F I=1:1:18 I LA7X=$P("L^H^LL^HH^<^>^N^A^AA^U^D^B^W^S^R^I^MS^VS","^",I) S LA7X=$P($T(ABFLAGS+I),";;",2) Q
"RTN","LA7UIIN2",152,0)
 S LA7X="normalcy status - "_LA7X
"RTN","LA7UIIN2",153,0)
 S LA7Y=$P(LA7RMK(0,+LA76241(0)),"^",2)
"RTN","LA7UIIN2",154,0)
 ;
"RTN","LA7UIIN2",155,0)
 ; If no prefix, use test name.
"RTN","LA7UIIN2",156,0)
 I '$L(LA7Y) S LA7Y=$P($G(^LAB(60,+LA76241(0),0)),"^")_": "
"RTN","LA7UIIN2",157,0)
 ;
"RTN","LA7UIIN2",158,0)
 D RMKSET^LASET(LA7LWL,LA7ISQN,LA7X,LA7Y)
"RTN","LA7UIIN2",159,0)
 Q
"RTN","LA7UIIN2",160,0)
 ;
"RTN","LA7UIIN2",161,0)
ABFLAGS ;; HL7 Table 0078 Abnormal flags
"RTN","LA7UIIN2",162,0)
 ;;Below low normal;;
"RTN","LA7UIIN2",163,0)
 ;;Above high normal;;
"RTN","LA7UIIN2",164,0)
 ;;Below lower panic limits;;
"RTN","LA7UIIN2",165,0)
 ;;Above upper panic limits;;
"RTN","LA7UIIN2",166,0)
 ;;Below absolute low-off instrument scale;;
"RTN","LA7UIIN2",167,0)
 ;;Above absolute high-off instrument scale;;
"RTN","LA7UIIN2",168,0)
 ;;Normal;;
"RTN","LA7UIIN2",169,0)
 ;;Abnormal;;
"RTN","LA7UIIN2",170,0)
 ;;Very abnormal;;
"RTN","LA7UIIN2",171,0)
 ;;Significant change up;;
"RTN","LA7UIIN2",172,0)
 ;;Significant change down;;
"RTN","LA7UIIN2",173,0)
 ;;Better;;
"RTN","LA7UIIN2",174,0)
 ;;Worse;;
"RTN","LA7UIIN2",175,0)
 ;;Susceptible;;
"RTN","LA7UIIN2",176,0)
 ;;Resistant;;
"RTN","LA7UIIN2",177,0)
 ;;Intermediate;;
"RTN","LA7UIIN2",178,0)
 ;;Moderately susceptible;;
"RTN","LA7UIIN2",179,0)
 ;;Very susceptible;;
"RTN","LA7UTILA")
0^24^B44622497
"RTN","LA7UTILA",1,0)
LA7UTILA ;DALOI/JMC - Browse UI message ; 6/19/96 09:00
"RTN","LA7UTILA",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**23,27,46**;Sep 27, 1994
"RTN","LA7UTILA",3,0)
 ;
"RTN","LA7UTILA",4,0)
EN ; Select a Universal Interface message to browse.
"RTN","LA7UTILA",5,0)
 D EXIT ; Housekeeping before we start.
"RTN","LA7UTILA",6,0)
 S DIC="^LAHM(62.49,",DIC("W")="W ""   "",$P(^(0),U,6)"
"RTN","LA7UTILA",7,0)
 S VAUTVB="LA7LIST",VAUTSTR="Message",VAUTNI=2,VAUTNALL=1
"RTN","LA7UTILA",8,0)
 D FIRST^VAUTOMA
"RTN","LA7UTILA",9,0)
 I Y<1!('$O(LA7LIST(0))) D EXIT Q
"RTN","LA7UTILA",10,0)
 ;
"RTN","LA7UTILA",11,0)
DEV ; Called from LA7UXQA - when viewing message via alert system.
"RTN","LA7UTILA",12,0)
 S DIR(0)="YO",DIR("A")="Parse message fields based on HL7 segments",DIR("B")="NO"
"RTN","LA7UTILA",13,0)
 D ^DIR K DIR
"RTN","LA7UTILA",14,0)
 I $D(DIRUT) D EXIT Q
"RTN","LA7UTILA",15,0)
 S LA7PARS=+Y ; Save flag to parse message.
"RTN","LA7UTILA",16,0)
 I LA7PARS D  I $D(DIRUT) D EXIT Q
"RTN","LA7UTILA",17,0)
 . S DIR(0)="YO",DIR("A")="Suppress blank segments",DIR("B")="YES"
"RTN","LA7UTILA",18,0)
 . D ^DIR K DIR Q:$D(DIRUT)
"RTN","LA7UTILA",19,0)
 . S $P(LA7PARS,"^",2)=+Y
"RTN","LA7UTILA",20,0)
 ; Ask device and task if requested.
"RTN","LA7UTILA",21,0)
 S %ZIS="Q" D ^%ZIS K %ZIS
"RTN","LA7UTILA",22,0)
 I POP D EXIT Q
"RTN","LA7UTILA",23,0)
 I $D(IO("Q")) D  G EXIT
"RTN","LA7UTILA",24,0)
 . S LA7TEST=0 ; Tasked - not a CRT.
"RTN","LA7UTILA",25,0)
 . S ZTRTN="DQ^LA7UTILA",ZTDESC="Print LA7 UI Messages",ZTSAVE("LA7*")=""
"RTN","LA7UTILA",26,0)
 . D ^%ZTLOAD
"RTN","LA7UTILA",27,0)
 . W !,"Request ",$S($D(ZTSK):"",1:"NOT "),"Queued"
"RTN","LA7UTILA",28,0)
 . K IO("Q")
"RTN","LA7UTILA",29,0)
 U IO(0)
"RTN","LA7UTILA",30,0)
 ;
"RTN","LA7UTILA",31,0)
 ; Flag to determine if okay to use browser (default=true).
"RTN","LA7UTILA",32,0)
 S LA7TEST=1
"RTN","LA7UTILA",33,0)
 ;
"RTN","LA7UTILA",34,0)
 ; Home device not current device or using non-CRT terminal type.
"RTN","LA7UTILA",35,0)
 I IO'=IO(0)!($E(IOST,1,2)'="C-") S LA7TEST=0
"RTN","LA7UTILA",36,0)
 ;
"RTN","LA7UTILA",37,0)
 ; If not queued and home device then test for browser
"RTN","LA7UTILA",38,0)
 I LA7TEST,'$$TEST^DDBRT D
"RTN","LA7UTILA",39,0)
 . S LA7TEST=0 ; Unable to use browser.
"RTN","LA7UTILA",40,0)
 . W !,$C(7),"This terminal does not support the needed functionality to use the Browser!"
"RTN","LA7UTILA",41,0)
 . W !,"Will use standard FileMan Data Display.",!
"RTN","LA7UTILA",42,0)
 I LA7TEST D
"RTN","LA7UTILA",43,0)
 . N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7UTILA",44,0)
 . S DIR(0)="YO",DIR("A")="Use Browser to display message(s)",DIR("B")="YES"
"RTN","LA7UTILA",45,0)
 . D ^DIR
"RTN","LA7UTILA",46,0)
 . I $D(DIRUT) S LA7TEST=-1 Q
"RTN","LA7UTILA",47,0)
 . S LA7TEST=+Y
"RTN","LA7UTILA",48,0)
 I LA7TEST<0 D EXIT Q
"RTN","LA7UTILA",49,0)
 D WAIT^DICD
"RTN","LA7UTILA",50,0)
 ;
"RTN","LA7UTILA",51,0)
DQ ; Dequeue entry point.
"RTN","LA7UTILA",52,0)
 U IO
"RTN","LA7UTILA",53,0)
 K ^TMP($J),^TMP("DDB",$J)
"RTN","LA7UTILA",54,0)
 S LA7IEN=0
"RTN","LA7UTILA",55,0)
 F  S LA7IEN=$O(LA7LIST(LA7IEN)) Q:'LA7IEN  S LA7J=1 D BRO("LA7 UI Message Display",LA7IEN,LA7IEN)
"RTN","LA7UTILA",56,0)
 I LA7TEST D  Q  ; Display using browser.
"RTN","LA7UTILA",57,0)
 . D DOCLIST^DDBR("^TMP($J,""LIST"")","R")
"RTN","LA7UTILA",58,0)
 . D EXIT
"RTN","LA7UTILA",59,0)
 S (LA7IEN,LA7QUIT)=0
"RTN","LA7UTILA",60,0)
 S HDR=""
"RTN","LA7UTILA",61,0)
 F  S HDR=$O(^TMP($J,"LIST",HDR)) Q:HDR=""  D  Q:LA7QUIT
"RTN","LA7UTILA",62,0)
 . I IOST["C-" W @IOF
"RTN","LA7UTILA",63,0)
 . W $$CJ^XLFSTR(HDR,IOM," "),!
"RTN","LA7UTILA",64,0)
 . S LA7ROOT=^TMP($J,"LIST",HDR),LA7ROOT=$E(LA7ROOT,1,$L(LA7ROOT)-1)
"RTN","LA7UTILA",65,0)
 . S LA7CONT=0 ; Flag to determine if line has been continue on followng line.
"RTN","LA7UTILA",66,0)
 . S I=0
"RTN","LA7UTILA",67,0)
 . F  S I=$O(@(LA7ROOT_","_I_")"))  Q:'I  D  Q:LA7QUIT
"RTN","LA7UTILA",68,0)
 . . S LA7X=^(I)
"RTN","LA7UTILA",69,0)
 . . I LA7X="" W ! Q  ; Print blank separator line
"RTN","LA7UTILA",70,0)
 . . F  S LA7Y=$E(LA7X,1,IOM-1) Q:LA7Y=""  D  Q:LA7QUIT
"RTN","LA7UTILA",71,0)
 . . . S LA7X=$E(LA7X,IOM,$L(LA7X))
"RTN","LA7UTILA",72,0)
 . . . I $L(LA7X) S LA7CONT=1,LA7X="--->"_LA7X
"RTN","LA7UTILA",73,0)
 . . . W !,LA7Y
"RTN","LA7UTILA",74,0)
 . . . I $Y+7>IOSL D EOP W @IOF Q:LA7QUIT
"RTN","LA7UTILA",75,0)
 . I 'LA7QUIT D EOP
"RTN","LA7UTILA",76,0)
 . W !!
"RTN","LA7UTILA",77,0)
 D EXIT
"RTN","LA7UTILA",78,0)
 Q
"RTN","LA7UTILA",79,0)
 ;
"RTN","LA7UTILA",80,0)
BRO(LA7HDR,LA7DOC,LA7IEN,LA7J) ; Setup text for browser.
"RTN","LA7UTILA",81,0)
 ; Called from above.
"RTN","LA7UTILA",82,0)
 N LA7,LA7DT,LA7X,I,J,K,X,Y
"RTN","LA7UTILA",83,0)
 D GETS^DIQ(62.49,LA7IEN,".01:149;160;161","ENR","LA7") ; Retrieve data from file 62.49
"RTN","LA7UTILA",84,0)
 S J=$G(LA7J,1)
"RTN","LA7UTILA",85,0)
 S ^TMP("DDB",$J,LA7DOC,J)=" ["_$$CJ^XLFSTR(" Message Statistics ",IOM-4,"*")_"]"
"RTN","LA7UTILA",86,0)
 S J=J+1,^TMP("DDB",$J,LA7DOC,J)=" "
"RTN","LA7UTILA",87,0)
 S I="LA7(62.49)",K=0,J(0)=J
"RTN","LA7UTILA",88,0)
 F  S I=$Q(@I) Q:I=""  Q:$QS(I,1)'=62.49  D
"RTN","LA7UTILA",89,0)
 . S X=$QS(I,3)_": "_@I
"RTN","LA7UTILA",90,0)
 . I K=0,$L(X)>((IOM\2)-1) S K=1,Y=""
"RTN","LA7UTILA",91,0)
 . I K=0 S K=1,Y=$$LJ^XLFSTR(X,(IOM\2)+2)
"RTN","LA7UTILA",92,0)
 . E  S K=0,J=J+1,^TMP("DDB",$J,LA7DOC,J)=Y_$QS(I,3)_": "_@I
"RTN","LA7UTILA",93,0)
 I K=1 S J=J+1,^TMP("DDB",$J,LA7DOC,J)=Y
"RTN","LA7UTILA",94,0)
 I J(0)=J S J=J+1,^TMP("DDB",$J,LA7DOC,J)=$$CJ^XLFSTR(" [None Found]",IOM-1)
"RTN","LA7UTILA",95,0)
 S LA7X=$G(^LAHM(62.49,LA7IEN,0))
"RTN","LA7UTILA",96,0)
 S LA7DT=$P(LA7X,"^",5) ; Date/time message received
"RTN","LA7UTILA",97,0)
 S LA7DT(0)=LA7DT\1 ; Date message received.
"RTN","LA7UTILA",98,0)
 S LA7DT(1)=LA7DT#1 ; Time message received.
"RTN","LA7UTILA",99,0)
 S K="LA7ERR^"_(LA7DT(0)-.1)
"RTN","LA7UTILA",100,0)
 S J=J+1,^TMP("DDB",$J,LA7DOC,J)=" "
"RTN","LA7UTILA",101,0)
 S J=J+1,^TMP("DDB",$J,LA7DOC,J)=" ["_$$CJ^XLFSTR(" Error Message ",IOM-4,"*")_"]"
"RTN","LA7UTILA",102,0)
 S J=J+1,^TMP("DDB",$J,LA7DOC,J)=" "
"RTN","LA7UTILA",103,0)
 S J(0)=J ; Save value of "J", determine if any error message found.
"RTN","LA7UTILA",104,0)
 F  S K=$O(^XTMP(K)) Q:K=""!($P(K,"^")'="LA7ERR")  D
"RTN","LA7UTILA",105,0)
 . I LA7DT(0)=$P(K,"^",2) S I=LA7DT(1)-.00000001 ; Start looking after date/time of message.
"RTN","LA7UTILA",106,0)
 . E  S I=0
"RTN","LA7UTILA",107,0)
 . F  S I=$O(^XTMP(K,I)) Q:'I  D
"RTN","LA7UTILA",108,0)
 . . S X=^XTMP(K,I)
"RTN","LA7UTILA",109,0)
 . . I $P(X,"^",2)=LA7IEN D
"RTN","LA7UTILA",110,0)
 . . . S J=J+1,^TMP("DDB",$J,LA7DOC,J)="Date: "_$$FMTE^XLFDT($P(K,"^",2)+I,1)
"RTN","LA7UTILA",111,0)
 . . . S J=J+1,^TMP("DDB",$J,LA7DOC,J)="Text: "_$P(X,"^",4) ; Get error message.
"RTN","LA7UTILA",112,0)
 . . . S J=J+1,^TMP("DDB",$J,LA7DOC,J)=" "
"RTN","LA7UTILA",113,0)
 I J(0)=J S J=J+1,^TMP("DDB",$J,LA7DOC,J)=$$CJ^XLFSTR("[None Found]",IOM-1)
"RTN","LA7UTILA",114,0)
 S J=J+1,^TMP("DDB",$J,LA7DOC,J)=" "
"RTN","LA7UTILA",115,0)
 S J=J+1,^TMP("DDB",$J,LA7DOC,J)=" ["_$$CJ^XLFSTR(" Text of Message ",IOM-4,"*")_"]"
"RTN","LA7UTILA",116,0)
 S J=J+1,^TMP("DDB",$J,LA7DOC,J)=" "
"RTN","LA7UTILA",117,0)
 ;
"RTN","LA7UTILA",118,0)
 ; Retrieve text of message from 62.49.
"RTN","LA7UTILA",119,0)
 S I=0,J(0)=J
"RTN","LA7UTILA",120,0)
 F  S I=$O(^LAHM(62.49,LA7IEN,150,I)) Q:'I  D
"RTN","LA7UTILA",121,0)
 . S J=J+1
"RTN","LA7UTILA",122,0)
 . S ^TMP("DDB",$J,LA7DOC,J)=$G(^LAHM(62.49,LA7IEN,150,I,0))
"RTN","LA7UTILA",123,0)
 . ; Parse each message segment.
"RTN","LA7UTILA",124,0)
 . I '$G(LA7PARS) Q
"RTN","LA7UTILA",125,0)
 . S X=$G(^LAHM(62.49,LA7IEN,150,I,0))
"RTN","LA7UTILA",126,0)
 . ; Obtain field separator and encoding characters.
"RTN","LA7UTILA",127,0)
 . I $E(X,1,3)="MSH" S HLFS=$E(X,4),HLECH=$E(X,5,8)
"RTN","LA7UTILA",128,0)
 . ; Segement ID code.
"RTN","LA7UTILA",129,0)
 . S Y=$P(X,HLFS)
"RTN","LA7UTILA",130,0)
 . ; Parse fields.
"RTN","LA7UTILA",131,0)
 . D PF
"RTN","LA7UTILA",132,0)
 ;
"RTN","LA7UTILA",133,0)
 I J(0)=J S J=J+1,^TMP("DDB",$J,LA7DOC,J)=$$CJ^XLFSTR("[None Found]",IOM-1)
"RTN","LA7UTILA",134,0)
 ;
"RTN","LA7UTILA",135,0)
 ; If linked to another entry go pasrse that entry also
"RTN","LA7UTILA",136,0)
 I $P(LA7X,"^",7) D BRO("LA7 UI Message Display",LA7DOC,$P(LA7X,"^",7),J)
"RTN","LA7UTILA",137,0)
 ;
"RTN","LA7UTILA",138,0)
 ; Setup document list.
"RTN","LA7UTILA",139,0)
 S LA7HDR=LA7HDR_" Msg #"_LA7DOC_" - "_$P(^LAHM(62.49,LA7DOC,0),"^",6)
"RTN","LA7UTILA",140,0)
 S ^TMP($J,"LIST",LA7HDR)="^TMP(""DDB"",$J,"_LA7DOC_")"
"RTN","LA7UTILA",141,0)
 Q
"RTN","LA7UTILA",142,0)
 ;
"RTN","LA7UTILA",143,0)
PF ; Parse message fields
"RTN","LA7UTILA",144,0)
 ;
"RTN","LA7UTILA",145,0)
 F K=$S(Y="MSH":1,1:2):1:$L(X,HLFS) D
"RTN","LA7UTILA",146,0)
 . S Z=$P(X,HLFS,K)
"RTN","LA7UTILA",147,0)
 . ; Don't display blank segments.
"RTN","LA7UTILA",148,0)
 . I $P(LA7PARS,"^",2),Z="" Q
"RTN","LA7UTILA",149,0)
 . S J=J+1
"RTN","LA7UTILA",150,0)
 . I Y="MSH" S V=Y_"-"_K_" = "_$S(K=1:HLFS,1:$P(X,HLFS,K))
"RTN","LA7UTILA",151,0)
 . E  S V=Y_"-"_(K-1)_" = "_$P(X,HLFS,K)
"RTN","LA7UTILA",152,0)
 . S ^TMP("DDB",$J,LA7DOC,J)=V
"RTN","LA7UTILA",153,0)
 . I Z="" Q  ; Don't parse blank segments.
"RTN","LA7UTILA",154,0)
 . I Y="MSH",K<3 Q  ; Don't parse MSH-1/2.
"RTN","LA7UTILA",155,0)
 . ; Parse components.
"RTN","LA7UTILA",156,0)
 . D PC
"RTN","LA7UTILA",157,0)
 ; Separate segments with blank line.
"RTN","LA7UTILA",158,0)
 S J=J+1,^TMP("DDB",$J,LA7DOC,J)=" "
"RTN","LA7UTILA",159,0)
 Q
"RTN","LA7UTILA",160,0)
 ;
"RTN","LA7UTILA",161,0)
PC ; Parse field components
"RTN","LA7UTILA",162,0)
 ;
"RTN","LA7UTILA",163,0)
 F L=1:1:$L(Z,$E(HLECH,1)) D
"RTN","LA7UTILA",164,0)
 . S V=$P(Z,$E(HLECH,1),L) Q:V=""
"RTN","LA7UTILA",165,0)
 . I Z[$E(HLECH,1) D
"RTN","LA7UTILA",166,0)
 . . S J=J+1
"RTN","LA7UTILA",167,0)
 . . S ^TMP("DDB",$J,LA7DOC,J)=Y_"-"_($S(Y="MSH":K,1:K-1))_"-"_L_" = "_V
"RTN","LA7UTILA",168,0)
 . I V'[$E(HLECH,2) Q
"RTN","LA7UTILA",169,0)
 . ; Parse repetition of components.
"RTN","LA7UTILA",170,0)
 . F M=1:1:$L(V,$E(HLECH,2)) D
"RTN","LA7UTILA",171,0)
 . . S J=J+1
"RTN","LA7UTILA",172,0)
 . . S ^TMP("DDB",$J,LA7DOC,J)=Y_"-"_($S(Y="MSH":K,1:K-1))_"-"_L_"-"_M_" = "_$P(V,$E(HLECH,2),M)
"RTN","LA7UTILA",173,0)
 Q
"RTN","LA7UTILA",174,0)
 ;
"RTN","LA7UTILA",175,0)
EOP ; End of page.
"RTN","LA7UTILA",176,0)
 I LA7CONT W !!,"NOTE: '--->' indicates continuation of previous line." S LA7CONT=0
"RTN","LA7UTILA",177,0)
 I $D(ZTQUEUED)!(IOST'["C-") Q
"RTN","LA7UTILA",178,0)
 S DIR(0)="E" D ^DIR K DIR S:Y'=1 LA7QUIT=1
"RTN","LA7UTILA",179,0)
 Q
"RTN","LA7UTILA",180,0)
 ;
"RTN","LA7UTILA",181,0)
EXIT ; Clean up.
"RTN","LA7UTILA",182,0)
 W @IOF
"RTN","LA7UTILA",183,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7UTILA",184,0)
 E  D ^%ZISC
"RTN","LA7UTILA",185,0)
 K ^TMP($J),^TMP("DDB",$J)
"RTN","LA7UTILA",186,0)
 K LA7CONT,LA7IEN,LA7J,LA7LIST,LA7PARS,LA7QUIT,LA7ROOT,LA7TEST,LA7X,LA7Y
"RTN","LA7UTILA",187,0)
 K DIC,DIR,HDR,HLECH,HLFS,I,J,K,L,M,V,X,Y,Z
"RTN","LA7UTILA",188,0)
 K VAUTVB,VAUTNI,VAUTSTR,VAUTNALL
"RTN","LA7UTILA",189,0)
 Q
"RTN","LA7VHL")
0^36^B18562213
"RTN","LA7VHL",1,0)
LA7VHL ;DALOI/DLR - Main Driver for incoming HL7 V1.6 messages ; 12/3/1997
"RTN","LA7VHL",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46**;Sep 27, 1994
"RTN","LA7VHL",3,0)
 ; This routine is not meant to be invoked by name
"RTN","LA7VHL",4,0)
 ;
"RTN","LA7VHL",5,0)
 QUIT
"RTN","LA7VHL",6,0)
 ;
"RTN","LA7VHL",7,0)
 ; This routine is called by the HL7 package V1.6 to process
"RTN","LA7VHL",8,0)
 ; incoming HL7 messages.  Expected variables are those
"RTN","LA7VHL",9,0)
 ; documented in the HL7 package documentation.  The line
"RTN","LA7VHL",10,0)
 ; tag is called if it is entered into the PROCESSING ROUTINE
"RTN","LA7VHL",11,0)
 ; field for the server protocol.
"RTN","LA7VHL",12,0)
 ;
"RTN","LA7VHL",13,0)
ORR ; Process incoming ORR messages
"RTN","LA7VHL",14,0)
ACK ; Process incoming ACK messages
"RTN","LA7VHL",15,0)
ORM ; Process incoming ORM messages
"RTN","LA7VHL",16,0)
ORU ; Process incoming ORU messages
"RTN","LA7VHL",17,0)
 ;
"RTN","LA7VHL",18,0)
 N HLA
"RTN","LA7VHL",19,0)
 N LA76248,LA76249,LA7AAT,LA7CS,LA7DT,LA7ECH,LA7FS,LA7HLS,LA7MEDT,LA7MTYP,LA7RAP,LA7PRID,LA7RSITE,LA7SAP,LA7SEQ,LA7SSITE,LA7TYPE,LA7VER,LA7VI
"RTN","LA7VHL",20,0)
 N X,Y
"RTN","LA7VHL",21,0)
 ;
"RTN","LA7VHL",22,0)
 S DT=$$DT^XLFDT
"RTN","LA7VHL",23,0)
 ;
"RTN","LA7VHL",24,0)
 ; Set up LA7HLS with HL variables to build ACK message.
"RTN","LA7VHL",25,0)
 ; Hande situation when systems use different encoding characters.
"RTN","LA7VHL",26,0)
 D INIT^HLFNC2(HL("EID"),.LA7HLS)
"RTN","LA7VHL",27,0)
 ;
"RTN","LA7VHL",28,0)
 S (LA76248,LA76249,LA7SEQ)=0
"RTN","LA7VHL",29,0)
 ;
"RTN","LA7VHL",30,0)
 ; Move message from HL7 global to Lab global
"RTN","LA7VHL",31,0)
 F LA7VI=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","LA7VHL",32,0)
 . N LA7SEG,LA7VJ
"RTN","LA7VHL",33,0)
 . S LA7SEG(0)=HLNODE
"RTN","LA7VHL",34,0)
 . S LA7VJ=0
"RTN","LA7VHL",35,0)
 . F  S LA7VJ=$O(HLNODE(LA7VJ)) Q:'LA7VJ  S LA7SEG(LA7VJ)=HLNODE(LA7VJ)
"RTN","LA7VHL",36,0)
 . I '$L(LA7SEG(0)) Q
"RTN","LA7VHL",37,0)
 . I $E(LA7SEG(0),1,3)="MSH" D MSH
"RTN","LA7VHL",38,0)
 . I LA7SEQ<1 D REJECT("no MSH segment found") Q
"RTN","LA7VHL",39,0)
 . D FILE6249^LA7VHLU(LA76249,.LA7SEG)
"RTN","LA7VHL",40,0)
 ;
"RTN","LA7VHL",41,0)
 I $G(LA76249)>0 D
"RTN","LA7VHL",42,0)
 . ; Update entry in 62.49
"RTN","LA7VHL",43,0)
 . ; Change status to (Q)ueued for processing from (B)uilding
"RTN","LA7VHL",44,0)
 . N FDA,LA7ERR
"RTN","LA7VHL",45,0)
 . S FDA(1,62.49,LA76249_",",2)="Q"
"RTN","LA7VHL",46,0)
 . D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7VHL",47,0)
 . ; Release lock on file #62.49 entry (tells LA7VIN message is stored).
"RTN","LA7VHL",48,0)
 . L -^LAHM(62.49,LA76249)
"RTN","LA7VHL",49,0)
 ;
"RTN","LA7VHL",50,0)
 ; Run processing routine
"RTN","LA7VHL",51,0)
 I '$D(^LAHM(62.48,LA76248,1)) D CREATE^LA7LOG(5)
"RTN","LA7VHL",52,0)
 I $D(^LAHM(62.48,LA76248,1)) X ^(1)
"RTN","LA7VHL",53,0)
 ;
"RTN","LA7VHL",54,0)
 ; Don't (ACK)nowledge ACK or ORR messages
"RTN","LA7VHL",55,0)
 I $G(LA7MTYP)="ACK"!($G(LA7MTYP)="ORR") Q
"RTN","LA7VHL",56,0)
 ;
"RTN","LA7VHL",57,0)
 ; No application acknowledgement
"RTN","LA7VHL",58,0)
 I $G(LA7AAT(1))="NE" Q
"RTN","LA7VHL",59,0)
 ;
"RTN","LA7VHL",60,0)
 ; Other system only wants ACK on successful completion condition and we found an error.
"RTN","LA7VHL",61,0)
 I $D(HLA("HLA")),$G(LA7AAT(1))="SU" Q
"RTN","LA7VHL",62,0)
 ;
"RTN","LA7VHL",63,0)
 ; Other system only wants ACK on error/reject condition
"RTN","LA7VHL",64,0)
 I '$D(HLA("HLA")),$G(LA7AAT(1))="ER" Q
"RTN","LA7VHL",65,0)
 ;
"RTN","LA7VHL",66,0)
 ; HL7 returns this as ACK if no errors found
"RTN","LA7VHL",67,0)
 I '$D(HLA("HLA")) S HLA("HLA",1)="MSA"_LA7HLS("FS")_"AA"_LA7HLS("FS")_HL("MID")
"RTN","LA7VHL",68,0)
 ;
"RTN","LA7VHL",69,0)
 ; Send ACK message
"RTN","LA7VHL",70,0)
 I $D(HLA("HLA")) D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.HLRESLTA)
"RTN","LA7VHL",71,0)
 ;
"RTN","LA7VHL",72,0)
 Q
"RTN","LA7VHL",73,0)
 ;
"RTN","LA7VHL",74,0)
 ;
"RTN","LA7VHL",75,0)
MSH ;;MSH
"RTN","LA7VHL",76,0)
 ;
"RTN","LA7VHL",77,0)
 N LA7CFIG,LA7MID,LA7NOW,X
"RTN","LA7VHL",78,0)
 ;
"RTN","LA7VHL",79,0)
 S LA7SEQ=1
"RTN","LA7VHL",80,0)
 S LA7FS=$E(LA7SEG(0),4)
"RTN","LA7VHL",81,0)
 S LA7ECH=$E(LA7SEG(0),5,8)
"RTN","LA7VHL",82,0)
 S LA7CS=$E(LA7ECH,1)
"RTN","LA7VHL",83,0)
 ; Sending application
"RTN","LA7VHL",84,0)
 S LA7SAP=$P($$P^LA7VHLU(.LA7SEG,3,LA7FS),LA7CS)
"RTN","LA7VHL",85,0)
 ; Sending facility
"RTN","LA7VHL",86,0)
 S LA7SSITE=$P($$P^LA7VHLU(.LA7SEG,4,LA7FS),LA7CS)
"RTN","LA7VHL",87,0)
 ; Receiving application
"RTN","LA7VHL",88,0)
 S LA7RAP=$P($$P^LA7VHLU(.LA7SEG,5,LA7FS),LA7CS)
"RTN","LA7VHL",89,0)
 ; Receiving facility
"RTN","LA7VHL",90,0)
 S LA7RSITE=$P($$P^LA7VHLU(.LA7SEG,6,LA7FS),LA7CS)
"RTN","LA7VHL",91,0)
 ; Date/time of message
"RTN","LA7VHL",92,0)
 S LA7MEDT=$$P^LA7VHLU(.LA7SEG,7,LA7FS)
"RTN","LA7VHL",93,0)
 ; Message type/trigger event/message structure
"RTN","LA7VHL",94,0)
 S X=$$P^LA7VHLU(.LA7SEG,9,LA7FS)
"RTN","LA7VHL",95,0)
 S LA7MTYP=$P(X,LA7CS),LA7MTYP("EVN")=$P(X,LA7CS,2),LA7MTYP("MSGSTR")=$P(X,LA7CS,3)
"RTN","LA7VHL",96,0)
 ; Message Control ID
"RTN","LA7VHL",97,0)
 S LA7MID=$$P^LA7VHLU(.LA7SEG,10,LA7FS)
"RTN","LA7VHL",98,0)
 ; Processing ID
"RTN","LA7VHL",99,0)
 S LA7PRID=$$P^LA7VHLU(.LA7SEG,11,LA7FS)
"RTN","LA7VHL",100,0)
 ; Version ID
"RTN","LA7VHL",101,0)
 S LA7VER=$$P^LA7VHLU(.LA7SEG,12,LA7FS)
"RTN","LA7VHL",102,0)
 ; Accept acknowledgement type
"RTN","LA7VHL",103,0)
 S LA7AAT(0)=$$P^LA7VHLU(.LA7SEG,15,LA7FS)
"RTN","LA7VHL",104,0)
 ; Application acknowledgement type
"RTN","LA7VHL",105,0)
 S LA7AAT(1)=$$P^LA7VHLU(.LA7SEG,16,LA7FS)
"RTN","LA7VHL",106,0)
 ;
"RTN","LA7VHL",107,0)
 S LA7CFIG=LA7SAP_LA7SSITE_LA7RAP_LA7RSITE
"RTN","LA7VHL",108,0)
 S X=LA7CFIG X ^%ZOSF("LPC")
"RTN","LA7VHL",109,0)
 S LA76248=+$O(^LAHM(62.48,"C",$E(LA7CFIG,1,27)_Y,0))
"RTN","LA7VHL",110,0)
 I 'LA76248 D  Q
"RTN","LA7VHL",111,0)
 . D CREATE^LA7LOG(1)
"RTN","LA7VHL",112,0)
 . D REJECT("no config in 62.48")
"RTN","LA7VHL",113,0)
 ;
"RTN","LA7VHL",114,0)
 I '$P($G(^LAHM(62.48,LA76248,0)),"^",3) D  Q
"RTN","LA7VHL",115,0)
 . D CREATE^LA7LOG(3)
"RTN","LA7VHL",116,0)
 . D REJECT("config is inactive")
"RTN","LA7VHL",117,0)
 ;
"RTN","LA7VHL",118,0)
 ; store incoming message in ^LAHM(62.49)
"RTN","LA7VHL",119,0)
 S LA76249=$$INIT6249^LA7VHLU
"RTN","LA7VHL",120,0)
 I LA76249<1 Q
"RTN","LA7VHL",121,0)
 ;
"RTN","LA7VHL",122,0)
 ; update entry in 62.49
"RTN","LA7VHL",123,0)
 N FDA,LA7ERR
"RTN","LA7VHL",124,0)
 I $G(LA76248) S FDA(1,62.49,LA76249_",",.5)=LA76248
"RTN","LA7VHL",125,0)
 S FDA(1,62.49,LA76249_",",1)="I"
"RTN","LA7VHL",126,0)
 S FDA(1,62.49,LA76249_",",3)=3
"RTN","LA7VHL",127,0)
 S FDA(1,62.49,LA76249_",",102)=LA7SAP
"RTN","LA7VHL",128,0)
 S FDA(1,62.49,LA76249_",",103)=LA7SSITE
"RTN","LA7VHL",129,0)
 S FDA(1,62.49,LA76249_",",104)=LA7RAP
"RTN","LA7VHL",130,0)
 S FDA(1,62.49,LA76249_",",105)=LA7RSITE
"RTN","LA7VHL",131,0)
 S FDA(1,62.49,LA76249_",",106)=LA7MEDT
"RTN","LA7VHL",132,0)
 S FDA(1,62.49,LA76249_",",108)=LA7MTYP
"RTN","LA7VHL",133,0)
 S FDA(1,62.49,LA76249_",",109)=LA7MID
"RTN","LA7VHL",134,0)
 S FDA(1,62.49,LA76249_",",110)=LA7PRID
"RTN","LA7VHL",135,0)
 S FDA(1,62.49,LA76249_",",111)=LA7VER
"RTN","LA7VHL",136,0)
 D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7VHL",137,0)
 ;
"RTN","LA7VHL",138,0)
 Q
"RTN","LA7VHL",139,0)
 ;
"RTN","LA7VHL",140,0)
REJECT(LA7AR) ; Build a reject segment if the incoming message could not be processed.
"RTN","LA7VHL",141,0)
 ; Setting HLA("HLA",1) conforms to HL7 package rules for acknowledgements
"RTN","LA7VHL",142,0)
 ; LA7AR is a free text string that is included in the reject
"RTN","LA7VHL",143,0)
 ; message for debugging purposes.
"RTN","LA7VHL",144,0)
 ;
"RTN","LA7VHL",145,0)
 S HLA("HLA",1)="MSA"_LA7HLS("FS")_"AR"_LA7HLS("FS")_HL("MID")_LA7HLS("FS")_LA7AR
"RTN","LA7VHL",146,0)
 Q
"RTN","LA7VHLU")
0^23^B32103706
"RTN","LA7VHLU",1,0)
LA7VHLU ;DALOI/JMC - HL7 segment builder utility ; 11-25-1998
"RTN","LA7VHLU",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VHLU",3,0)
 ;
"RTN","LA7VHLU",4,0)
 ; Reference to PROTOCOL file (#101) supported by DBIA #872
"RTN","LA7VHLU",5,0)
 ;
"RTN","LA7VHLU",6,0)
STARTMSG(LA7EVNT,LA76249) ; Create/initialize HL message
"RTN","LA7VHLU",7,0)
 ;
"RTN","LA7VHLU",8,0)
 ; Call with LA7EVNT = Lab event protocol in file (#101)
"RTN","LA7VHLU",9,0)
 ;           LA76249 = if entry already exists, do not create new entry
"RTN","LA7VHLU",10,0)
 ;
"RTN","LA7VHLU",11,0)
 N LA7MSH
"RTN","LA7VHLU",12,0)
 ;
"RTN","LA7VHLU",13,0)
 K ^TMP("HLS",$J)
"RTN","LA7VHLU",14,0)
 K HL,HLCOMP,HLSUB,HLFS,HLERR,HLMID
"RTN","LA7VHLU",15,0)
 K LA7PIDSN
"RTN","LA7VHLU",16,0)
 ;
"RTN","LA7VHLU",17,0)
 S LA76249=+$G(LA76249)
"RTN","LA7VHLU",18,0)
 ;
"RTN","LA7VHLU",19,0)
 D INITHL(LA7EVNT)
"RTN","LA7VHLU",20,0)
 ;
"RTN","LA7VHLU",21,0)
 I LA76249<1 S LA76249=$$INIT6249^LA7VHLU
"RTN","LA7VHLU",22,0)
 S LA7MSH(0)="MSH"_LA7FS_LA7ECH
"RTN","LA7VHLU",23,0)
 D FILE6249^LA7VHLU(LA76249,.LA7MSH)
"RTN","LA7VHLU",24,0)
 ;
"RTN","LA7VHLU",25,0)
 Q
"RTN","LA7VHLU",26,0)
 ;
"RTN","LA7VHLU",27,0)
INITHL(LA7EVNT) ; Initialize HL environment
"RTN","LA7VHLU",28,0)
 ;
"RTN","LA7VHLU",29,0)
 ; Call with LA7EVNT = Lab event protocol in file (#101)
"RTN","LA7VHLU",30,0)
 ; HL7 v1.6 interface
"RTN","LA7VHLU",31,0)
 ; LA7101 - IEN of event protocol
"RTN","LA7VHLU",32,0)
 ; HL  - array of output parameters
"RTN","LA7VHLU",33,0)
 ; INT - DHCP-to-DHCP only
"RTN","LA7VHLU",34,0)
 ;
"RTN","LA7VHLU",35,0)
 S LA7101=$O(^ORD(101,"B",LA7EVNT,0))
"RTN","LA7VHLU",36,0)
 S HL="HL",INT=0
"RTN","LA7VHLU",37,0)
 D INIT^HLFNC2(LA7101,.HL,INT)
"RTN","LA7VHLU",38,0)
 S (LA7FS,HLFS)=$G(HL("FS"))
"RTN","LA7VHLU",39,0)
 S (LA7ECH,HLECH)=$G(HL("ECH"))
"RTN","LA7VHLU",40,0)
 S HLCOMP=$E($G(HL("ECH")),1)
"RTN","LA7VHLU",41,0)
 S HLSUB=$E($G(HL("ECH")),4)
"RTN","LA7VHLU",42,0)
 Q
"RTN","LA7VHLU",43,0)
 ;
"RTN","LA7VHLU",44,0)
GEN ;generate HL7 v1.6 message
"RTN","LA7VHLU",45,0)
 ; LA7101 - IEN of event protocol
"RTN","LA7VHLU",46,0)
 ; HLARYTYP - acknowledgement array
"RTN","LA7VHLU",47,0)
 ; HLFORMAT - HLMA formatted/not formatted
"RTN","LA7VHLU",48,0)
 ; HLMTIEN - IEN in 772
"RTN","LA7VHLU",49,0)
 ; HLRESLT = message ID^error code^error description
"RTN","LA7VHLU",50,0)
 ; HLP("CONTPTR") - continuation pointer field value
"RTN","LA7VHLU",51,0)
 ; HLP("PRIORITY") - priority field value
"RTN","LA7VHLU",52,0)
 ;
"RTN","LA7VHLU",53,0)
 N HLEID,HLARYTYP,HLFORMAT,HLMTIEN,HLRESLT,HLP
"RTN","LA7VHLU",54,0)
 S HLEID=LA7101,HLARYTYP="GM",HLFORMAT=1,HLMTIEN="",HLRESLT=""
"RTN","LA7VHLU",55,0)
 D GENERATE^HLMA(HLEID,HLARYTYP,HLFORMAT,.HLRESLT,HLMTIEN,.HLP)
"RTN","LA7VHLU",56,0)
 S HLMID=$P(HLRESLT,"^")
"RTN","LA7VHLU",57,0)
 I $L($P(HLRESLT,"^",2)) D CREATE^LA7LOG(23)
"RTN","LA7VHLU",58,0)
 Q
"RTN","LA7VHLU",59,0)
 ;
"RTN","LA7VHLU",60,0)
BUILDSEG(LA7ARRAY,LA7DATA,LA7FS) ; Build HL segment
"RTN","LA7VHLU",61,0)
 ; Call with LA7ARRAY = array containing fields to build into a segment,
"RTN","LA7VHLU",62,0)
 ;                      passed by reference.
"RTN","LA7VHLU",63,0)
 ;            LA7DATA = array used to build segment, pass by reference
"RTN","LA7VHLU",64,0)
 ;                      used to return built segment.
"RTN","LA7VHLU",65,0)
 ;              LA7FS = HL field separator
"RTN","LA7VHLU",66,0)
 ;
"RTN","LA7VHLU",67,0)
 ; Returns         LA7DATA = array with segment built
"RTN","LA7VHLU",68,0)
 ;              LA7DATA(0) = if everything fits on one node
"RTN","LA7VHLU",69,0)
 ;         LA7DATA(0,1...) = multiple elements if >245 characters
"RTN","LA7VHLU",70,0)
 ;
"RTN","LA7VHLU",71,0)
 N LA7I,LA7J,LA7LAST,LA7SUB
"RTN","LA7VHLU",72,0)
 ;
"RTN","LA7VHLU",73,0)
 K LA7DATA
"RTN","LA7VHLU",74,0)
 ;
"RTN","LA7VHLU",75,0)
 S LA7FS=$G(LA7FS)
"RTN","LA7VHLU",76,0)
 ;
"RTN","LA7VHLU",77,0)
 ; Node to store data in array
"RTN","LA7VHLU",78,0)
 S LA7SUB=0
"RTN","LA7VHLU",79,0)
 ;
"RTN","LA7VHLU",80,0)
 ; Last element in array
"RTN","LA7VHLU",81,0)
 S LA7LAST=$O(LA7ARRAY(""),-1)
"RTN","LA7VHLU",82,0)
 ;
"RTN","LA7VHLU",83,0)
 F LA7I=0:1:LA7LAST D
"RTN","LA7VHLU",84,0)
 . I ($L($G(LA7DATA(LA7SUB)))+$L($G(LA7ARRAY(LA7I))))>245 S LA7SUB=LA7SUB+1
"RTN","LA7VHLU",85,0)
 . I $O(LA7ARRAY(LA7I,""))'="" D
"RTN","LA7VHLU",86,0)
 . . S LA7J=""
"RTN","LA7VHLU",87,0)
 . . F  S LA7J=$O(LA7ARRAY(LA7I,LA7J)) Q:LA7J=""  D
"RTN","LA7VHLU",88,0)
 . . . I ($L($G(LA7DATA(LA7SUB)))+$L($G(LA7ARRAY(LA7I,LA7J))))>245 S LA7SUB=LA7SUB+1
"RTN","LA7VHLU",89,0)
 . . . S LA7DATA(LA7SUB)=$G(LA7DATA(LA7SUB))_$G(LA7ARRAY(LA7I,LA7J))
"RTN","LA7VHLU",90,0)
 . S LA7DATA(LA7SUB)=$G(LA7DATA(LA7SUB))_$G(LA7ARRAY(LA7I))_LA7FS
"RTN","LA7VHLU",91,0)
 Q 
"RTN","LA7VHLU",92,0)
 ;
"RTN","LA7VHLU",93,0)
 ;
"RTN","LA7VHLU",94,0)
FILESEG(LA7ROOT,LA7DATA) ; File HL segment in global
"RTN","LA7VHLU",95,0)
 ; Call with  LA7ROOT = global root used to store HL segment
"RTN","LA7VHLU",96,0)
 ;            LA7DATA = array with data to file (pass by reference)
"RTN","LA7VHLU",97,0)
 ;
"RTN","LA7VHLU",98,0)
 N LA7HLSN,LA7I
"RTN","LA7VHLU",99,0)
 I $G(LA7ROOT)="" Q  ; no global root passed.
"RTN","LA7VHLU",100,0)
 ;
"RTN","LA7VHLU",101,0)
 ; get next subscript number
"RTN","LA7VHLU",102,0)
 S LA7HLSN=($O(@(LA7ROOT)@(""),-1))+1
"RTN","LA7VHLU",103,0)
 ;
"RTN","LA7VHLU",104,0)
 ; store first 245 characters of segment
"RTN","LA7VHLU",105,0)
 S @LA7ROOT@(LA7HLSN)=$G(LA7DATA(0))
"RTN","LA7VHLU",106,0)
 ;
"RTN","LA7VHLU",107,0)
 ; if segment >245 characters then store rest of message
"RTN","LA7VHLU",108,0)
 S LA7I=0
"RTN","LA7VHLU",109,0)
 F  S LA7I=$O(LA7DATA(LA7I)) Q:LA7I=""  D
"RTN","LA7VHLU",110,0)
 . S @LA7ROOT@(LA7HLSN,LA7I)=$G(LA7DATA(LA7I))
"RTN","LA7VHLU",111,0)
 ;
"RTN","LA7VHLU",112,0)
 Q
"RTN","LA7VHLU",113,0)
 ;
"RTN","LA7VHLU",114,0)
INIT6249() ; Create stub entry in file #62.49
"RTN","LA7VHLU",115,0)
 ; Returns ien of entry in #62.49 that was created
"RTN","LA7VHLU",116,0)
 ; NOTE: set lock on entry in #62.49, does not release it.
"RTN","LA7VHLU",117,0)
 ;       calling process should release lock
"RTN","LA7VHLU",118,0)
 ;
"RTN","LA7VHLU",119,0)
 N LA7ERR,LA7FDA,LA7IEN,X,Y
"RTN","LA7VHLU",120,0)
 ;
"RTN","LA7VHLU",121,0)
 ; Lock zeroth node of file.
"RTN","LA7VHLU",122,0)
 L +^LAHM(62.49,0):99999
"RTN","LA7VHLU",123,0)
 I '$T Q -1
"RTN","LA7VHLU",124,0)
 ;
"RTN","LA7VHLU",125,0)
 F LA76249=$P(^LAHM(62.49,0),"^",3):1 Q:'$D(^LAHM(62.49,LA76249))
"RTN","LA7VHLU",126,0)
 ; Lock entry in file 62.49 - Calling process is responsible for releasing
"RTN","LA7VHLU",127,0)
 ; lock when no longer needed.
"RTN","LA7VHLU",128,0)
 L +^LAHM(62.49,LA76249):99999
"RTN","LA7VHLU",129,0)
 I '$T Q -1
"RTN","LA7VHLU",130,0)
 ;
"RTN","LA7VHLU",131,0)
 S LA7DT=$$NOW^XLFDT
"RTN","LA7VHLU",132,0)
 S LA7FDA(1,62.49,"+1,",.01)=LA76249 ; message number
"RTN","LA7VHLU",133,0)
 S LA7FDA(1,62.49,"+1,",2)="B" ; status =(B)uilding
"RTN","LA7VHLU",134,0)
 S LA7FDA(1,62.49,"+1,",4)=LA7DT ; Date/time entered
"RTN","LA7VHLU",135,0)
 S LA7IEN(1)=LA76249
"RTN","LA7VHLU",136,0)
 D UPDATE^DIE("S","LA7FDA(1)","LA7IEN","LA7ERR")
"RTN","LA7VHLU",137,0)
 I $D(LA7ERR) S LA76249=-1
"RTN","LA7VHLU",138,0)
 ;
"RTN","LA7VHLU",139,0)
 ; Unlock zero node
"RTN","LA7VHLU",140,0)
 L -^LAHM(62.49,0)
"RTN","LA7VHLU",141,0)
 Q LA76249
"RTN","LA7VHLU",142,0)
 ;
"RTN","LA7VHLU",143,0)
 ;
"RTN","LA7VHLU",144,0)
FILE6249(LA76249,LA7DATA) ; File HL segment in LAHM(62.49) global
"RTN","LA7VHLU",145,0)
 ; Call with  LA76249 = ien of entry in file # 62.49
"RTN","LA7VHLU",146,0)
 ;            LA7DATA = array with data to file (pass by reference)
"RTN","LA7VHLU",147,0)
 ;
"RTN","LA7VHLU",148,0)
 N LA7I,LA7J,LA7WP
"RTN","LA7VHLU",149,0)
 I '$G(LA76249) Q  ; no entry passed.
"RTN","LA7VHLU",150,0)
 ;
"RTN","LA7VHLU",151,0)
 ; move data in positive number subscripts
"RTN","LA7VHLU",152,0)
 S LA7I="",LA7J=0
"RTN","LA7VHLU",153,0)
 F  S LA7I=$O(LA7DATA(LA7I)) Q:LA7I=""  D
"RTN","LA7VHLU",154,0)
 . S LA7J=LA7J+1
"RTN","LA7VHLU",155,0)
 . S LA7WP(LA7J)=LA7DATA(LA7I)
"RTN","LA7VHLU",156,0)
 ;
"RTN","LA7VHLU",157,0)
 ; set blank line which separates each segment
"RTN","LA7VHLU",158,0)
 S LA7WP(LA7J+1)=""
"RTN","LA7VHLU",159,0)
 ;
"RTN","LA7VHLU",160,0)
 ; file data
"RTN","LA7VHLU",161,0)
 D WP^DIE(62.49,LA76249_",",150,"A","LA7WP")
"RTN","LA7VHLU",162,0)
 Q
"RTN","LA7VHLU",163,0)
 ;
"RTN","LA7VHLU",164,0)
 ;
"RTN","LA7VHLU",165,0)
P(LA7X,LA7P,LA7EC) ; get piece LA7P from array (passed by ref.)
"RTN","LA7VHLU",166,0)
 ; Call with  LA7X = array to extract data from, pass by reference.
"RTN","LA7VHLU",167,0)
 ;            LA7P = piece to extract
"RTN","LA7VHLU",168,0)
 ;           LA7EC = encoding character separator
"RTN","LA7VHLU",169,0)
 ;
"RTN","LA7VHLU",170,0)
 ; Returns LA7Y = value of requested piece
"RTN","LA7VHLU",171,0)
 ;
"RTN","LA7VHLU",172,0)
 N I,L,L1,L2,LA7Y
"RTN","LA7VHLU",173,0)
 S (L2,Y)=0,LA7Y=""
"RTN","LA7VHLU",174,0)
 F I=0:1 D  Q:$L(LA7Y)!'($D(LA7X(I)))
"RTN","LA7VHLU",175,0)
 . S L1=$L($G(LA7X(I)),LA7EC),L=L1+Y-1
"RTN","LA7VHLU",176,0)
 . S:L1=1 L=L+1
"RTN","LA7VHLU",177,0)
 . S:LA7P'>L LA7Y=$P($G(LA7X(I-1)),LA7EC,LA7P-L2)_$P($G(LA7X(I)),LA7EC,(LA7P-Y))
"RTN","LA7VHLU",178,0)
 . S L2=Y,Y=L
"RTN","LA7VHLU",179,0)
 Q LA7Y
"RTN","LA7VHLU",180,0)
 ;
"RTN","LA7VHLU",181,0)
 ;
"RTN","LA7VHLU",182,0)
BLG(LA7ACTN,LA7CHGTY,LA7FS,LA7ECH) ; Build BLG segment -  billing information
"RTN","LA7VHLU",183,0)
 ; Call with  LA7ACTN = billing account Number
"RTN","LA7VHLU",184,0)
 ;           LA7CHGTY = charge type
"RTN","LA7VHLU",185,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VHLU",186,0)
 ;
"RTN","LA7VHLU",187,0)
 ; Returns LA7Y
"RTN","LA7VHLU",188,0)
 ;
"RTN","LA7VHLU",189,0)
 ; Default to CO (contract) for charge type - table 0122
"RTN","LA7VHLU",190,0)
 S LA7CHGTY=$G(LA7CHGTY,"CO")
"RTN","LA7VHLU",191,0)
 S LA7Y="BLG"_LA7FS_LA7FS_LA7CHGTY_LA7FS_$$M11^HLFNC(LA7ACTN,LA7ECH)_LA7FS
"RTN","LA7VHLU",192,0)
 Q LA7Y
"RTN","LA7VHLU",193,0)
 ;
"RTN","LA7VHLU",194,0)
 ;
"RTN","LA7VHLU",195,0)
PTEXTID(LA74,LA7UID,LA7Y) ; Retrieve patient's id that was transmitted by other system.
"RTN","LA7VHLU",196,0)
 ; Used to build PID-2 when returning results to placer.
"RTN","LA7VHLU",197,0)
 ; Looks in file LAB PENDING ORDERS (#69.6) for info pertaining to placer's order.
"RTN","LA7VHLU",198,0)
 ; Call with  LA74 = ien of placer in INSTITUTION file (#4)
"RTN","LA7VHLU",199,0)
 ;          LA7UID = placer's specimen identifier (UID, etc.)
"RTN","LA7VHLU",200,0)
 ;
"RTN","LA7VHLU",201,0)
 ; Returns array LA7Y by reference
"RTN","LA7VHLU",202,0)
 ;               LA7Y("FS")  - original field separator
"RTN","LA7VHLU",203,0)
 ;               LA7Y("ECH") - original encoding characters used
"RTN","LA7VHLU",204,0)
 ;             LA7Y("PID-2") - original PID-2 sequence
"RTN","LA7VHLU",205,0)
 ;             LA7Y("PID-4") - original PID-4 sequence
"RTN","LA7VHLU",206,0)
 ;
"RTN","LA7VHLU",207,0)
 N LA7696,LA7X
"RTN","LA7VHLU",208,0)
 ;
"RTN","LA7VHLU",209,0)
 S LA74=$G(LA74),LA7UID=$G(LA7UID),LA7Y=""
"RTN","LA7VHLU",210,0)
 ;
"RTN","LA7VHLU",211,0)
 ; Return null if no values passed
"RTN","LA7VHLU",212,0)
 I LA74<1!(LA7UID="") Q
"RTN","LA7VHLU",213,0)
 ;
"RTN","LA7VHLU",214,0)
 S LA7696=$O(^LRO(69.6,"RST",LA74,LA7UID,0))
"RTN","LA7VHLU",215,0)
 I LA7696 D
"RTN","LA7VHLU",216,0)
 . S LA7X=$G(^LRO(69.6,LA7696,700))
"RTN","LA7VHLU",217,0)
 . S LA7Y("FS")=$E(LA7X,1)
"RTN","LA7VHLU",218,0)
 . S LA7Y("ECH")=$E(LA7X,2,5)
"RTN","LA7VHLU",219,0)
 . S LA7Y("PID-2")=$G(^LRO(69.6,LA7696,700.02))
"RTN","LA7VHLU",220,0)
 . S LA7Y("PID-4")=$G(^LRO(69.6,LA7696,700.04))
"RTN","LA7VHLU",221,0)
 Q
"RTN","LA7VHLU",222,0)
 ;
"RTN","LA7VHLU",223,0)
 ;
"RTN","LA7VHLU",224,0)
RETOBR(LA74,LA7UID,LA7NLT,LA7Y) ; Retrieve placer's various OBR's that were transmitted by other system.
"RTN","LA7VHLU",225,0)
 ; Used to build OBR-4/17/18 when returning results to placer.
"RTN","LA7VHLU",226,0)
 ; Looks in file LAB PENDING ORDERS (#69.6) for info pertaining to placer's order.
"RTN","LA7VHLU",227,0)
 ;
"RTN","LA7VHLU",228,0)
 ; Call with   LA74 = ien of placer in INSTITUTION file (#4)
"RTN","LA7VHLU",229,0)
 ;           LA7UID = placer's specimen identifier (UID, accession number, etc.)
"RTN","LA7VHLU",230,0)
 ;           LA7NLT = ordered NLT test code
"RTN","LA7VHLU",231,0)
 ;
"RTN","LA7VHLU",232,0)
 ; Returns array LA7Y by reference
"RTN","LA7VHLU",233,0)
 ;               LA7Y("FS")     - original field separator
"RTN","LA7VHLU",234,0)
 ;               LA7Y("ECH")    - original encoding characters used
"RTN","LA7VHLU",235,0)
 ;               LA7Y("OBR-4")  - original OBR-4 sequence
"RTN","LA7VHLU",236,0)
 ;               LA7Y("OBR-18") - original OBR-18 sequence
"RTN","LA7VHLU",237,0)
 ;               LA7Y("OBR-19") - original OBR-19 sequence
"RTN","LA7VHLU",238,0)
 ;
"RTN","LA7VHLU",239,0)
 N LA7696,LA76964,LA7X
"RTN","LA7VHLU",240,0)
 ;
"RTN","LA7VHLU",241,0)
 S LA74=$G(LA74),LA7UID=$G(LA7UID),LA7Y=""
"RTN","LA7VHLU",242,0)
 ;
"RTN","LA7VHLU",243,0)
 ; Return null if no values passed
"RTN","LA7VHLU",244,0)
 I LA74<1!(LA7UID="")!(LA7NLT="") Q
"RTN","LA7VHLU",245,0)
 ;
"RTN","LA7VHLU",246,0)
 S LA7696=$O(^LRO(69.6,"RST",LA74,LA7UID,0))
"RTN","LA7VHLU",247,0)
 I LA7696<1 Q
"RTN","LA7VHLU",248,0)
 ;
"RTN","LA7VHLU",249,0)
 S LA7X=$G(^LRO(69.6,LA7696,700))
"RTN","LA7VHLU",250,0)
 S LA7Y("FS")=$E(LA7X,1)
"RTN","LA7VHLU",251,0)
 S LA7Y("ECH")=$E(LA7X,2,5)
"RTN","LA7VHLU",252,0)
 ;
"RTN","LA7VHLU",253,0)
 S LA76964=$O(^LRO(69.6,LA7696,2,"C",LA7NLT,0))
"RTN","LA7VHLU",254,0)
 I LA76964<1 Q
"RTN","LA7VHLU",255,0)
 ;
"RTN","LA7VHLU",256,0)
 S LA7Y("OBR-4")=$G(^LRO(69.6,LA7696,2,LA76964,700.04))
"RTN","LA7VHLU",257,0)
 S LA7Y("OBR-18")=$G(^LRO(69.6,LA7696,2,LA76964,700.18))
"RTN","LA7VHLU",258,0)
 S LA7Y("OBR-19")=$G(^LRO(69.6,LA7696,2,LA76964,700.19))
"RTN","LA7VHLU",259,0)
 ;
"RTN","LA7VHLU",260,0)
 Q
"RTN","LA7VHLU1")
0^27^B6538478
"RTN","LA7VHLU1",1,0)
LA7VHLU1 ;DALOI/JMC - HL7 segment builder utility ; 11-25-1998
"RTN","LA7VHLU1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VHLU1",3,0)
 ;
"RTN","LA7VHLU1",4,0)
 ;
"RTN","LA7VHLU1",5,0)
SETID(LA76249,LA7ID,LA7X) ; Setup identifier's in TMP global for later storing.
"RTN","LA7VHLU1",6,0)
 ; Call with LA76249 = ien of message in #62.49
"RTN","LA7VHLU1",7,0)
 ;             LA7ID = root of identifier
"RTN","LA7VHLU1",8,0)
 ;              LA7X = value to add to identifier
"RTN","LA7VHLU1",9,0)
 N Y
"RTN","LA7VHLU1",10,0)
 S Y=$O(^TMP("LA7-ID",$J,LA76249,""),-1) ; get last entry
"RTN","LA7VHLU1",11,0)
 S Y=Y+1
"RTN","LA7VHLU1",12,0)
 S ^TMP("LA7-ID",$J,LA76249,Y)=LA7ID_LA7X
"RTN","LA7VHLU1",13,0)
 Q
"RTN","LA7VHLU1",14,0)
 ;
"RTN","LA7VHLU1",15,0)
 ;
"RTN","LA7VHLU1",16,0)
UTS(LA7628,LA7UID,LA760) ; Update test status on manifest
"RTN","LA7VHLU1",17,0)
 ; Call with LA7628 = ien of shipping manifest in #62.8
"RTN","LA7VHLU1",18,0)
 ;           LA7UID = accession's UID
"RTN","LA7VHLU1",19,0)
 ;            LA760 = file # 60 ien of ordered test 
"RTN","LA7VHLU1",20,0)
 ;
"RTN","LA7VHLU1",21,0)
 ; Sets to status 4 (partial). Will deal with 5 (completed) at later time
"RTN","LA7VHLU1",22,0)
 ; when lab package has capability of designating an accession as completed.
"RTN","LA7VHLU1",23,0)
 ;
"RTN","LA7VHLU1",24,0)
 N LA762801,LA7X
"RTN","LA7VHLU1",25,0)
 ;
"RTN","LA7VHLU1",26,0)
 S LA762801=0
"RTN","LA7VHLU1",27,0)
 F  S LA762801=$O(^LAHM(62.8,LA7628,10,"UID",LA7UID,LA762801)) Q:'LA762801  D
"RTN","LA7VHLU1",28,0)
 . S LA7X=$G(^LAHM(62.8,LA7628,10,LA762801,0))
"RTN","LA7VHLU1",29,0)
 . I $P(LA7X,"^",2)'=LA760 Q  ; Not the test we're looking for.
"RTN","LA7VHLU1",30,0)
 . I $P(LA7X,"^",8)>2,$P(LA7X,"^",8)<5 D STSUP^LA7SMU(LA7628,LA762801,4)
"RTN","LA7VHLU1",31,0)
 Q
"RTN","LA7VHLU1",32,0)
 ;
"RTN","LA7VHLU1",33,0)
 ;
"RTN","LA7VHLU1",34,0)
UPID(LA76249) ; Update identifier's associated with the message in #62.49
"RTN","LA7VHLU1",35,0)
 ; Call with LA76249 = ien of message in #62.49
"RTN","LA7VHLU1",36,0)
 ;
"RTN","LA7VHLU1",37,0)
 N FDA,LA7CNT,LA7ERR,LA7I,LA7X
"RTN","LA7VHLU1",38,0)
 ;
"RTN","LA7VHLU1",39,0)
 S (LA7CNT,LA7I)=0
"RTN","LA7VHLU1",40,0)
 F  S LA7I=$O(^TMP("LA7-ID",$J,LA76249,LA7I)) Q:'LA7I  D
"RTN","LA7VHLU1",41,0)
 . S LA7CNT=LA7CNT+1
"RTN","LA7VHLU1",42,0)
 . S LA7X=^TMP("LA7-ID",$J,LA76249,LA7I)
"RTN","LA7VHLU1",43,0)
 . I LA7CNT=1 S FDA(1,62.49,LA76249_",",5)=LA7X
"RTN","LA7VHLU1",44,0)
 . ; Add code to store additional identifiers in new multiple field in #62.49
"RTN","LA7VHLU1",45,0)
 I $D(FDA(1)) D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7VHLU1",46,0)
 ;
"RTN","LA7VHLU1",47,0)
 ; Clean up
"RTN","LA7VHLU1",48,0)
 K ^TMP("LA7-ID",$J,LA76249)
"RTN","LA7VHLU1",49,0)
 Q
"RTN","LA7VHLU1",50,0)
 ;
"RTN","LA7VHLU1",51,0)
CHKDT(LA7X) ; Check validity of date/time
"RTN","LA7VHLU1",52,0)
 ; Adjust invalid times to closest valid time - correct for lab problem
"RTN","LA7VHLU1",53,0)
 ; that generated invalid FileMan date/times.
"RTN","LA7VHLU1",54,0)
 ; If hours>24 then set to 24 with no minutes/seconds
"RTN","LA7VHLU1",55,0)
 ; If minutes greater than 59 then set to 59
"RTN","LA7VHLU1",56,0)
 ; If seconds greater than 59 then set to 59
"RTN","LA7VHLU1",57,0)
 ;
"RTN","LA7VHLU1",58,0)
 N I,LA7Y,X
"RTN","LA7VHLU1",59,0)
 ;
"RTN","LA7VHLU1",60,0)
 S LA7Y=$P(LA7X,".",2)
"RTN","LA7VHLU1",61,0)
 ;
"RTN","LA7VHLU1",62,0)
 ; If time present then check otherwise skip and return input.
"RTN","LA7VHLU1",63,0)
 I $L(LA7Y) D
"RTN","LA7VHLU1",64,0)
 . F I=1:2:5 D
"RTN","LA7VHLU1",65,0)
 . . S LA7Y(I)=$E(LA7Y,I,I+1)
"RTN","LA7VHLU1",66,0)
 . . I $L(LA7Y(I))=1 S LA7Y(I)=LA7Y(I)_"0"
"RTN","LA7VHLU1",67,0)
 . . I LA7Y(I)>$S(I=1:24,1:59) S LA7Y(I)=$S(I=1:24,1:59)
"RTN","LA7VHLU1",68,0)
 . . I I=1,LA7Y(1)=24 S LA7Y=24
"RTN","LA7VHLU1",69,0)
 . S X="."_LA7Y(1)_LA7Y(3)_LA7Y(5),X=+X
"RTN","LA7VHLU1",70,0)
 . S $P(LA7X,".",2)=$P(X,".",2)
"RTN","LA7VHLU1",71,0)
 ;
"RTN","LA7VHLU1",72,0)
 Q LA7X
"RTN","LA7VHLU1",73,0)
 ;
"RTN","LA7VHLU1",74,0)
 ;
"RTN","LA7VHLU1",75,0)
REFUNIT(LA7SB,LA761) ; Find reference ranges/units from file #60
"RTN","LA7VHLU1",76,0)
 ; Call with LA7SB = dataname from "CH" subscript
"RTN","LA7VHLU1",77,0)
 ;           LA761 = pointer to topography file #61
"RTN","LA7VHLU1",78,0)
 ;
"RTN","LA7VHLU1",79,0)
 ;   Returns  LA7Y = reference low^reference high^units^critcal low^critcal high^therapeutic low^therapeutic high
"RTN","LA7VHLU1",80,0)
 ;
"RTN","LA7VHLU1",81,0)
 ; Finds first entry in file #60 that is associated with this dataname.
"RTN","LA7VHLU1",82,0)
 N LA760,LA7X,LA7Y
"RTN","LA7VHLU1",83,0)
 ;
"RTN","LA7VHLU1",84,0)
 S LA7Y=""
"RTN","LA7VHLU1",85,0)
 S LA760=+$O(^LAB(60,"C","CH;"_LA7SB_";1",0))
"RTN","LA7VHLU1",86,0)
 S LA7X=$G(^LAB(60,LA760,1,LA761,0))
"RTN","LA7VHLU1",87,0)
 S $P(LA7Y,"^")=$P(LA7X,"^",2)
"RTN","LA7VHLU1",88,0)
 S $P(LA7Y,"^",2)=$P(LA7X,"^",3)
"RTN","LA7VHLU1",89,0)
 S $P(LA7Y,"^",3)=$P(LA7X,"^",7)
"RTN","LA7VHLU1",90,0)
 S $P(LA7Y,"^",4)=$P(LA7X,"^",4)
"RTN","LA7VHLU1",91,0)
 S $P(LA7Y,"^",5)=$P(LA7X,"^",5)
"RTN","LA7VHLU1",92,0)
 S $P(LA7Y,"^",6)=$P(LA7X,"^",11)
"RTN","LA7VHLU1",93,0)
 S $P(LA7Y,"^",7)=$P(LA7X,"^",12)
"RTN","LA7VHLU1",94,0)
 ;
"RTN","LA7VHLU1",95,0)
 Q LA7Y
"RTN","LA7VHLU2")
0^34^B15073091
"RTN","LA7VHLU2",1,0)
LA7VHLU2 ;DALOI/JMC - HL7 Segment Utility ;01/19/99  13:48
"RTN","LA7VHLU2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VHLU2",3,0)
 ;
"RTN","LA7VHLU2",4,0)
 Q
"RTN","LA7VHLU2",5,0)
 ;
"RTN","LA7VHLU2",6,0)
GETSEG(LA76249,LA7NODE,LA7ARR) ; Returns the next segment from file 62.49
"RTN","LA7VHLU2",7,0)
 ;   during processing of an inbound message. The following variables
"RTN","LA7VHLU2",8,0)
 ;   are used for the processing.
"RTN","LA7VHLU2",9,0)
 ;
"RTN","LA7VHLU2",10,0)
 ; Call with  LA76249 - Entry in 62.49 where message is
"RTN","LA7VHLU2",11,0)
 ;            LA7NODE - Curent ien of "150" wp field
"RTN","LA7VHLU2",12,0)
 ;
"RTN","LA7VHLU2",13,0)
 ; Returns     LA7ARR - Data is returned in LA7ARR(0) and
"RTN","LA7VHLU2",14,0)
 ;                      LA7ARR(n) if segmemt is greater than 245 chars.
"RTN","LA7VHLU2",15,0)
 ;             LA7END - flag that end of message has been reached
"RTN","LA7VHLU2",16,0)
 ;
"RTN","LA7VHLU2",17,0)
 N LA7I,LA7END,LA7QUIT
"RTN","LA7VHLU2",18,0)
 K LA7ARR
"RTN","LA7VHLU2",19,0)
 S LA76249=+$G(LA76249),LA7NODE=$G(LA7NODE,0),(LA7END,LA7QUIT)=0
"RTN","LA7VHLU2",20,0)
 ;
"RTN","LA7VHLU2",21,0)
 S LA7NODE=$O(^LAHM(62.49,LA76249,150,LA7NODE))
"RTN","LA7VHLU2",22,0)
 I 'LA7NODE S LA7END=1
"RTN","LA7VHLU2",23,0)
 E  D
"RTN","LA7VHLU2",24,0)
 . S LA7ARR(0)=$G(^LAHM(62.49,LA76249,150,LA7NODE,0)),LA7I=0
"RTN","LA7VHLU2",25,0)
 . F  S LA7NODE=$O(^LAHM(62.49,LA76249,150,LA7NODE)) Q:'LA7NODE  D  Q:LA7QUIT
"RTN","LA7VHLU2",26,0)
 . . I $G(^LAHM(62.49,LA76249,150,LA7NODE,0))="" S LA7QUIT=1 Q
"RTN","LA7VHLU2",27,0)
 . . S LA7I=LA7I+1,LA7ARR(LA7I)=$G(^LAHM(62.49,LA76249,150,LA7NODE,0))
"RTN","LA7VHLU2",28,0)
 ;
"RTN","LA7VHLU2",29,0)
 Q LA7END
"RTN","LA7VHLU2",30,0)
 ;
"RTN","LA7VHLU2",31,0)
FINDSITE(LA7Z,LA7TYPE,LA7SEM) ; Look up an institution in file #4
"RTN","LA7VHLU2",32,0)
 ;
"RTN","LA7VHLU2",33,0)
 ; Call with LA7Z = value to lookup 
"RTN","LA7VHLU2",34,0)
 ;                  VA: "VA"(optional) followed by 3-5 character VA site number
"RTN","LA7VHLU2",35,0)
 ;                  Non-VA uses 3-5 character site assigned identifier
"RTN","LA7VHLU2",36,0)
 ;          LA7TYPE = 1 (host facility)
"RTN","LA7VHLU2",37,0)
 ;                    2 (collection facility)
"RTN","LA7VHLU2",38,0)
 ;
"RTN","LA7VHLU2",39,0)
 ;           LA7SEM = 0 (log error message)
"RTN","LA7VHLU2",40,0)
 ;                    1 (suppress error message)
"RTN","LA7VHLU2",41,0)
 ;
"RTN","LA7VHLU2",42,0)
 ; Returns     LA7Y = ien of entry in INSTITUTION file (#4).
"RTN","LA7VHLU2",43,0)
 ;
"RTN","LA7VHLU2",44,0)
 N LA7X,LA7Y
"RTN","LA7VHLU2",45,0)
 ;
"RTN","LA7VHLU2",46,0)
 S LA7TYPE=$G(LA7TYPE),LA7Z=$G(LA7Z),LA7Y="",LA7SEM=$G(LA7SEM,0)
"RTN","LA7VHLU2",47,0)
 ;
"RTN","LA7VHLU2",48,0)
 ; If VA facility then strip off "VA" before lookup
"RTN","LA7VHLU2",49,0)
 I $E(LA7Z,1,2)="VA" S LA7X=$E(LA7Z,3,$L(LA7Z))
"RTN","LA7VHLU2",50,0)
 E  S LA7X=LA7Z
"RTN","LA7VHLU2",51,0)
 ;
"RTN","LA7VHLU2",52,0)
 ; Lookup in INSTITUTION file (#4)
"RTN","LA7VHLU2",53,0)
 S LA7Y=$$FIND1^DIC(4,"","OMX",LA7X)
"RTN","LA7VHLU2",54,0)
 ;
"RTN","LA7VHLU2",55,0)
 ; If unable to find in INSTITUTION file (#4) then try looking in
"RTN","LA7VHLU2",56,0)
 ; SHIPPING CONFIGURATION file (#62.9) using non-VA identifier.
"RTN","LA7VHLU2",57,0)
 I LA7Y'>0,$L(LA7X) D
"RTN","LA7VHLU2",58,0)
 . N LA7J
"RTN","LA7VHLU2",59,0)
 . S LA7J=0
"RTN","LA7VHLU2",60,0)
 . F  S LA7J=$O(^LAHM(62.9,LA7J)) Q:'LA7J  D
"RTN","LA7VHLU2",61,0)
 . . S LA7J(0)=$G(^LAHM(62.9,LA7J,0))
"RTN","LA7VHLU2",62,0)
 . . I $P(LA7J(0),"^",4)'=1 Q  ; Not active
"RTN","LA7VHLU2",63,0)
 . . I $P(LA7J(0),"^",12)=LA7X S LA7Y=$S(LA7TYPE=1:$P(LA7J(0),"^",3),LA7TYPE=2:$P(LA7J(0),"^",2),1:"")
"RTN","LA7VHLU2",64,0)
 ;
"RTN","LA7VHLU2",65,0)
 ; No entry found
"RTN","LA7VHLU2",66,0)
 I 'LA7SEM,LA7Y'>0 D
"RTN","LA7VHLU2",67,0)
 . N LA7SITE
"RTN","LA7VHLU2",68,0)
 . S LA7SITE=$S(LA7TYPE=1:"Host",LA7TYPE=2:"Collection",1:"type")_" site: "_$S($L(LA7X):LA7X,1:"Blank-no value")
"RTN","LA7VHLU2",69,0)
 . N LA7X,LA7Y
"RTN","LA7VHLU2",70,0)
 . D CREATE^LA7LOG(25)
"RTN","LA7VHLU2",71,0)
 ;
"RTN","LA7VHLU2",72,0)
 Q LA7Y
"RTN","LA7VHLU2",73,0)
 ;
"RTN","LA7VHLU2",74,0)
RETFACID(LA7Z,LA7TYPE,LA7SEM) ; (RET)urn (FAC)ility (ID)entifier
"RTN","LA7VHLU2",75,0)
 ;
"RTN","LA7VHLU2",76,0)
 ; Call with LA7Z = ien of entry in INSTITUTION file (#4).
"RTN","LA7VHLU2",77,0)
 ;
"RTN","LA7VHLU2",78,0)
 ;          LA7TYPE = 1 (host facility)
"RTN","LA7VHLU2",79,0)
 ;                    2 (collecting facility)
"RTN","LA7VHLU2",80,0)
 ;
"RTN","LA7VHLU2",81,0)
 ;           LA7SEM = 0 (log error message)
"RTN","LA7VHLU2",82,0)
 ;                    1 (suppress error message)
"RTN","LA7VHLU2",83,0)
 ;
"RTN","LA7VHLU2",84,0)
 ; Returns     LA7Y = VA site number
"RTN","LA7VHLU2",85,0)
 ;                    non-VA site identifier
"RTN","LA7VHLU2",86,0)
 ;
"RTN","LA7VHLU2",87,0)
 N LA7Y
"RTN","LA7VHLU2",88,0)
 S LA7TYPE=$G(LA7TYPE),LA7Z=$G(LA7Z),LA7Y="",LA7SEM=$G(LA7SEM,0)
"RTN","LA7VHLU2",89,0)
 ;
"RTN","LA7VHLU2",90,0)
 S LA7Y=$$GET1^DIQ(4,LA7Z_",",99)
"RTN","LA7VHLU2",91,0)
 ;
"RTN","LA7VHLU2",92,0)
 ; If unable to find in INSTITUTION file (#4) then try looking in
"RTN","LA7VHLU2",93,0)
 ; SHIPPING CONFIGURATION file (#62.9) using non-VA identifier.
"RTN","LA7VHLU2",94,0)
 I LA7Y="" D
"RTN","LA7VHLU2",95,0)
 . N LA7J
"RTN","LA7VHLU2",96,0)
 . S LA7J=0
"RTN","LA7VHLU2",97,0)
 . F  S LA7J=$O(^LAHM(62.9,LA7J)) Q:'LA7J  D
"RTN","LA7VHLU2",98,0)
 . . S LA7J(0)=$G(^LAHM(62.9,LA7J,0))
"RTN","LA7VHLU2",99,0)
 . . I $P(LA7J(0),"^",4)'=1 Q  ; Not active
"RTN","LA7VHLU2",100,0)
 . . I LA7TYPE=1,LA7Z=$P(LA7J(0),"^",3) S LA7Y=$P(LA7J(0),"^",12)
"RTN","LA7VHLU2",101,0)
 . . I LA7TYPE=2,LA7Z=$P(LA7J(0),"^",2) S LA7Y=$P(LA7J(0),"^",12)
"RTN","LA7VHLU2",102,0)
 ;
"RTN","LA7VHLU2",103,0)
 ; No entry found
"RTN","LA7VHLU2",104,0)
 I 'LA7SEM,LA7Y="" D
"RTN","LA7VHLU2",105,0)
 . N LA7SITE
"RTN","LA7VHLU2",106,0)
 . S LA7SITE=$S(LA7TYPE=1:"Host",LA7TYPE=2:"Collection",1:"type")_" site: "_$$GET1^DIQ(4,LA7Z_",",.01)
"RTN","LA7VHLU2",107,0)
 . N LA7X,LA7Y
"RTN","LA7VHLU2",108,0)
 . D CREATE^LA7LOG(25)
"RTN","LA7VHLU2",109,0)
 ;
"RTN","LA7VHLU2",110,0)
 Q LA7Y
"RTN","LA7VHLU2",111,0)
 ;
"RTN","LA7VHLU2",112,0)
FNDOLOC(LRUID) ; Find ordering location
"RTN","LA7VHLU2",113,0)
 ; Call with LRUID = Accession's UID
"RTN","LA7VHLU2",114,0)
 ; Returns    LA7Y = ordering location^ordering institution
"RTN","LA7VHLU2",115,0)
 ;
"RTN","LA7VHLU2",116,0)
 N LRAA,LRAD,LRAN,LA7X,LA7Y,X,Y
"RTN","LA7VHLU2",117,0)
 ;
"RTN","LA7VHLU2",118,0)
 S LA7Y=""
"RTN","LA7VHLU2",119,0)
 S X=$Q(^LRO(68,"C",LRUID))
"RTN","LA7VHLU2",120,0)
 I $QS(X,3)'=LRUID Q LA7Y
"RTN","LA7VHLU2",121,0)
 S LA7X=$P($G(^LRO(68,$QS(X,4),1,$QS(X,5),1,$QS(X,6),0)),"^",13)
"RTN","LA7VHLU2",122,0)
 I 'LA7X Q LA7Y
"RTN","LA7VHLU2",123,0)
 D GETS^DIQ(44,LA7X_",",".01;3","EI","LA7Y")
"RTN","LA7VHLU2",124,0)
 S LA7Y=LA7X_"^"_LA7Y(44,LA7X_",",.01,"E")_"^"_LA7Y(44,LA7X_",",3,"I")_"^"_LA7Y(44,LA7X_",",3,"E")
"RTN","LA7VHLU2",125,0)
 Q LA7Y
"RTN","LA7VHLU2",126,0)
 ;
"RTN","LA7VHLU2",127,0)
 ;
"RTN","LA7VHLU2",128,0)
CHKICN(LA7X) ; Lookup patient using ICN
"RTN","LA7VHLU2",129,0)
 ; Call with LA7X = patient's ICN
"RTN","LA7VHLU2",130,0)
 ; Returns   LA7Y = patient's DFN^full ICN
"RTN","LA7VHLU2",131,0)
 ;                  -1^error message
"RTN","LA7VHLU2",132,0)
 ;
"RTN","LA7VHLU2",133,0)
 ; Note - until MPI can handle full ICN (number,"V" and checksum) as lookup value
"RTN","LA7VHLU2",134,0)
 ; then confirm if full ICN passed in with full ICN from MPI.
"RTN","LA7VHLU2",135,0)
 ;
"RTN","LA7VHLU2",136,0)
 N LA7Y,LA7Z
"RTN","LA7VHLU2",137,0)
 ;
"RTN","LA7VHLU2",138,0)
 S (LA7Y,LA7Z)=""
"RTN","LA7VHLU2",139,0)
 S LA7X(1)=$P(LA7X,"V")
"RTN","LA7VHLU2",140,0)
 S LA7X(2)=$P(LA7X,"V",2)
"RTN","LA7VHLU2",141,0)
 I LA7X(2)="" S LA7Y=$$GETDFN^MPIF001(LA7X(1))
"RTN","LA7VHLU2",142,0)
 E  D
"RTN","LA7VHLU2",143,0)
 . S LA7Y=$$GETDFN^MPIF001(LA7X(1))
"RTN","LA7VHLU2",144,0)
 . S LA7Z=$$GETICN^MPIF001(LA7Y)
"RTN","LA7VHLU2",145,0)
 . I LA7X'=LA7Y S LA7Y="-1^Not a valid ICN"
"RTN","LA7VHLU2",146,0)
 ;
"RTN","LA7VHLU2",147,0)
 Q LA7Y_"^"_LA7Z
"RTN","LA7VHLU3")
0^41^B9236757
"RTN","LA7VHLU3",1,0)
LA7VHLU3 ;DALOI/JMC - HL7 Segment Utility ;01/19/99  13:48
"RTN","LA7VHLU3",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VHLU3",3,0)
 ;
"RTN","LA7VHLU3",4,0)
 Q
"RTN","LA7VHLU3",5,0)
 ;
"RTN","LA7VHLU3",6,0)
NTE(LA7TXT,LA7TYP,LA7FS,LA7ECH,LA7NTESN) ; Build NTE segment -  notes and comments
"RTN","LA7VHLU3",7,0)
 ; Call with  LA7TXT = text to send
"RTN","LA7VHLU3",8,0)
 ;            LA7TYP = source of comment - HL table 0105
"RTN","LA7VHLU3",9,0)
 ;                     Default to L (ancilliary/filler)
"RTN","LA7VHLU3",10,0)
 ;             LA7FS = HL field separator
"RTN","LA7VHLU3",11,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VHLU3",12,0)
 ;          LA7NTESN = segment SET ID (pass by reference)
"RTN","LA7VHLU3",13,0)
 ;
"RTN","LA7VHLU3",14,0)
 ; Returns LA7Y - built segment
"RTN","LA7VHLU3",15,0)
 ;
"RTN","LA7VHLU3",16,0)
 N LA7Y
"RTN","LA7VHLU3",17,0)
 ;
"RTN","LA7VHLU3",18,0)
 S LA7FS=$G(LA7FS),LA7TXT=$G(LA7TXT)
"RTN","LA7VHLU3",19,0)
 ; Remove leading "~" from comments
"RTN","LA7VHLU3",20,0)
 I $E(LA7TXT,1)="~" S LA7TXT=$$TRIM^XLFSTR(LA7TXT,"L","~")
"RTN","LA7VHLU3",21,0)
 S LA7TXT=$$CHKDATA^LA7VHLU3(LA7TXT,LA7FS_LA7ECH)
"RTN","LA7VHLU3",22,0)
 ;
"RTN","LA7VHLU3",23,0)
 ; Update segment SET ID
"RTN","LA7VHLU3",24,0)
 S LA7NTESN=$G(LA7NTESN)+1
"RTN","LA7VHLU3",25,0)
 ;
"RTN","LA7VHLU3",26,0)
 ; Default source of comment if undefined
"RTN","LA7VHLU3",27,0)
 I $G(LA7TYP)="" S LA7TYP="L"
"RTN","LA7VHLU3",28,0)
 ;
"RTN","LA7VHLU3",29,0)
 S LA7Y="NTE"_LA7FS_LA7NTESN_LA7FS_LA7TYP_LA7FS_LA7TXT_LA7FS
"RTN","LA7VHLU3",30,0)
 ;
"RTN","LA7VHLU3",31,0)
 Q LA7Y
"RTN","LA7VHLU3",32,0)
 ;
"RTN","LA7VHLU3",33,0)
 ;
"RTN","LA7VHLU3",34,0)
CHKDATA(LA7IN,LA7CH) ; Check data to be built into an HL7 field for characters that
"RTN","LA7VHLU3",35,0)
 ; conflict with encoding characters. Convert conflicting character using HL7 escape encoding.
"RTN","LA7VHLU3",36,0)
 ;
"RTN","LA7VHLU3",37,0)
 ; Call with LA7IN = data to be checked
"RTN","LA7VHLU3",38,0)
 ;           LA7CH = HL7 delimiters to check for
"RTN","LA7VHLU3",39,0)
 ;
"RTN","LA7VHLU3",40,0)
 ; Returns LA7OUT - checked data, converted if appropriate
"RTN","LA7VHLU3",41,0)
 ;
"RTN","LA7VHLU3",42,0)
 N J,LA7DLIM,LA7ESC,LA7LEN,LA7OUT,X
"RTN","LA7VHLU3",43,0)
 ;
"RTN","LA7VHLU3",44,0)
 S LA7IN=$G(LA7IN),LA7CH=$G(LA7CH)
"RTN","LA7VHLU3",45,0)
 S LA7OUT=""
"RTN","LA7VHLU3",46,0)
 ;
"RTN","LA7VHLU3",47,0)
 I LA7IN=""!(LA7CH="") Q LA7OUT
"RTN","LA7VHLU3",48,0)
 ;
"RTN","LA7VHLU3",49,0)
 ; Build array of encoding characters to check
"RTN","LA7VHLU3",50,0)
 S LA7LEN=$L(LA7CH)
"RTN","LA7VHLU3",51,0)
 S LA7DLIM=$S(LA7LEN=5:"FSRET",1:"SRET")
"RTN","LA7VHLU3",52,0)
 S LA7ESC=$E(LA7CH,LA7LEN-1)
"RTN","LA7VHLU3",53,0)
 F J=1:1:LA7LEN S LA7CH($E(LA7CH,J))=$E(LA7DLIM,J)
"RTN","LA7VHLU3",54,0)
 ;
"RTN","LA7VHLU3",55,0)
 ; Check each character and convert if appropiate
"RTN","LA7VHLU3",56,0)
 F J=1:1:$L(LA7IN) D
"RTN","LA7VHLU3",57,0)
 . S X=$E(LA7IN,J)
"RTN","LA7VHLU3",58,0)
 . I $D(LA7CH(X)) S X=$$ENESC(LA7CH(X),LA7ESC)
"RTN","LA7VHLU3",59,0)
 . S LA7OUT=LA7OUT_X
"RTN","LA7VHLU3",60,0)
 ;
"RTN","LA7VHLU3",61,0)
 Q LA7OUT
"RTN","LA7VHLU3",62,0)
 ;
"RTN","LA7VHLU3",63,0)
 ;
"RTN","LA7VHLU3",64,0)
CNVFLD(LA7IN,LA7ECH1,LA7ECH2) ; Convert an encoded HL7 segment/field from one encoding scheme to another
"RTN","LA7VHLU3",65,0)
 ; Call with   LA7IN = data to be converted
"RTN","LA7VHLU3",66,0)
 ;           LA7ECH1 = delimiters of input
"RTN","LA7VHLU3",67,0)
 ;           LA7ECH2 = delimiters of output
"RTN","LA7VHLU3",68,0)
 ;
"RTN","LA7VHLU3",69,0)
 ; Returns LA7OUT - segment/field converted to new encoding scheme
"RTN","LA7VHLU3",70,0)
 ;
"RTN","LA7VHLU3",71,0)
 N J,LA7DLIM,LA7ECH,LA7ESC,LA7LEN,LA7OUT,X
"RTN","LA7VHLU3",72,0)
 ;
"RTN","LA7VHLU3",73,0)
 S LA7IN=$G(LA7IN),LA7ECH1=$G(LA7ECH1),LA7ECH2=$G(LA7ECH2)
"RTN","LA7VHLU3",74,0)
 S LA7OUT=""
"RTN","LA7VHLU3",75,0)
 ;
"RTN","LA7VHLU3",76,0)
 I LA7IN=""!(LA7ECH1="")!(LA7ECH2="") Q LA7OUT
"RTN","LA7VHLU3",77,0)
 ;
"RTN","LA7VHLU3",78,0)
 ; Abort if encoding schemes not equal length
"RTN","LA7VHLU3",79,0)
 I $L(LA7ECH1)'=$L(LA7ECH2) Q LA7OUT
"RTN","LA7VHLU3",80,0)
 ;
"RTN","LA7VHLU3",81,0)
 ; If same then return input as output
"RTN","LA7VHLU3",82,0)
 I LA7ECH1=LA7ECH2 Q LA7IN
"RTN","LA7VHLU3",83,0)
 ;
"RTN","LA7VHLU3",84,0)
 ; Determine position of HL7 ESCAPE encoding character
"RTN","LA7VHLU3",85,0)
 ; 4th position if field separator and encoding characters passed
"RTN","LA7VHLU3",86,0)
 ; 3rd position if only encoding characters passed
"RTN","LA7VHLU3",87,0)
 ; Based on length of input encoding character variable
"RTN","LA7VHLU3",88,0)
 S LA7LEN=$L(LA7ECH1)
"RTN","LA7VHLU3",89,0)
 S LA7DLIM=$S(LA7LEN=5:"FSRET",1:"SRET")
"RTN","LA7VHLU3",90,0)
 S LA7ESC=$E(LA7DLIM,LA7LEN-1)
"RTN","LA7VHLU3",91,0)
 ;
"RTN","LA7VHLU3",92,0)
 ; Build array to convert source encoding to target encoding
"RTN","LA7VHLU3",93,0)
 F J=1:1:$L(LA7ECH1) S LA7ECH($E(LA7ECH1,J))=$E(LA7ECH2,J)
"RTN","LA7VHLU3",94,0)
 ;
"RTN","LA7VHLU3",95,0)
 ; Check each character and convert if appropiate
"RTN","LA7VHLU3",96,0)
 ; If source conflicts with target encoding character
"RTN","LA7VHLU3",97,0)
 ;    then convert to escape encoding
"RTN","LA7VHLU3",98,0)
 ; If match on source encoding character - convert to new encoding
"RTN","LA7VHLU3",99,0)
 F J=1:1:$L(LA7IN) D
"RTN","LA7VHLU3",100,0)
 . S X=$E(LA7IN,J)
"RTN","LA7VHLU3",101,0)
 . I '$D(LA7ECH(X)),LA7ECH2[X S X=$$ENESC($E(LA7DLIM,($F(LA7ECH2,X)-1)),LA7ESC)
"RTN","LA7VHLU3",102,0)
 . I $D(LA7ECH(X)) S X=LA7ECH(X)
"RTN","LA7VHLU3",103,0)
 . S LA7OUT=LA7OUT_X
"RTN","LA7VHLU3",104,0)
 ;
"RTN","LA7VHLU3",105,0)
 Q LA7OUT
"RTN","LA7VHLU3",106,0)
 ;
"RTN","LA7VHLU3",107,0)
 ;
"RTN","LA7VHLU3",108,0)
ENESC(LA7X,LA7ESC) ; Encode data using HL7 escape encoding
"RTN","LA7VHLU3",109,0)
 ; Call with   LA7X = character to encode
"RTN","LA7VHLU3",110,0)
 ;           LA7ESC = HL7 escape encoding character
"RTN","LA7VHLU3",111,0)
 ;
"RTN","LA7VHLU3",112,0)
 ; Returns string of escape encoded data.
"RTN","LA7VHLU3",113,0)
 ;
"RTN","LA7VHLU3",114,0)
 N LA7Y
"RTN","LA7VHLU3",115,0)
 ;
"RTN","LA7VHLU3",116,0)
 S LA7Y=""
"RTN","LA7VHLU3",117,0)
 S LA7Y=LA7ESC_LA7X_LA7ESC
"RTN","LA7VHLU3",118,0)
 ;
"RTN","LA7VHLU3",119,0)
 Q LA7Y
"RTN","LA7VHLU3",120,0)
 ;
"RTN","LA7VHLU3",121,0)
 ;
"RTN","LA7VHLU3",122,0)
UNESC(LA7X,LA7CH) ; Unescape data using HL7 escape encoding
"RTN","LA7VHLU3",123,0)
 ; Call with  LA7X = string to decode
"RTN","LA7VHLU3",124,0)
 ;           LA7CH = HL7 delimiters (both field separator & encoding characters)
"RTN","LA7VHLU3",125,0)
 ;
"RTN","LA7VHLU3",126,0)
 ; Returns string of unencoded data.
"RTN","LA7VHLU3",127,0)
 ;
"RTN","LA7VHLU3",128,0)
 N J,LA7ESC,LA7DLIM,LA7LEN
"RTN","LA7VHLU3",129,0)
 ;
"RTN","LA7VHLU3",130,0)
 S LA7LEN=$L(LA7CH)
"RTN","LA7VHLU3",131,0)
 S LA7ESC=$E(LA7CH,LA7LEN-1)
"RTN","LA7VHLU3",132,0)
 ;
"RTN","LA7VHLU3",133,0)
 ; If data does not contain escape encoding
"RTN","LA7VHLU3",134,0)
 ;    then return input string as output
"RTN","LA7VHLU3",135,0)
 I '$L(LA7X,LA7ESC) Q LA7X
"RTN","LA7VHLU3",136,0)
 ;
"RTN","LA7VHLU3",137,0)
 ; Build array of encoding characters to replace
"RTN","LA7VHLU3",138,0)
 S LA7DLIM=$S(LA7LEN=5:"FSRET",1:"SRET")
"RTN","LA7VHLU3",139,0)
 F J=1:1:LA7LEN S LA7CH(LA7ESC_$E(LA7DLIM,J)_LA7ESC)=$E(LA7CH,J)
"RTN","LA7VHLU3",140,0)
 ;
"RTN","LA7VHLU3",141,0)
 Q $$REPLACE^XLFSTR(LA7X,.LA7CH)
"RTN","LA7VHLU4")
0^47^B24283849
"RTN","LA7VHLU4",1,0)
LA7VHLU4 ;DALOI/JMC - HL7 segment builder utility ; 11-25-1998
"RTN","LA7VHLU4",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VHLU4",3,0)
 ;
"RTN","LA7VHLU4",4,0)
 ; Reference to ^XMB global supported by DBIA #10091
"RTN","LA7VHLU4",5,0)
 ;
"RTN","LA7VHLU4",6,0)
INST(LA74,LA7FS,LA7ECH) ; Build institution field
"RTN","LA7VHLU4",7,0)
 ; Call with   LA74 = ien of institution in file #4
"RTN","LA7VHLU4",8,0)
 ;                    if null/undefined then use Kernel Site file.
"RTN","LA7VHLU4",9,0)
 ;            LA7FS = HL field separator
"RTN","LA7VHLU4",10,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VHLU4",11,0)
 ;
"RTN","LA7VHLU4",12,0)
 ; Returns facility that performed the testing (ID^text^99VA4)
"RTN","LA7VHLU4",13,0)
 ;
"RTN","LA7VHLU4",14,0)
 N LA7IENS,LA7X,LA7Y,LA7Z
"RTN","LA7VHLU4",15,0)
 ;
"RTN","LA7VHLU4",16,0)
 S LA74=$G(LA74),LA7ECH=$G(LA7ECH),LA7Y=""
"RTN","LA7VHLU4",17,0)
 ;
"RTN","LA7VHLU4",18,0)
 ; If no institution, use Kernel Site default
"RTN","LA7VHLU4",19,0)
 I LA74="" S LA74=+$P($G(^XMB(1,1,"XUS")),U,17)
"RTN","LA7VHLU4",20,0)
 ;
"RTN","LA7VHLU4",21,0)
 ; Value passed not a pointer - only build 2nd component
"RTN","LA7VHLU4",22,0)
 I $L(LA74),LA74'=+LA74 D
"RTN","LA7VHLU4",23,0)
 . S $P(LA7Y,$E(LA7ECH,1),2)=$$CHKDATA^LA7VHLU3(LA74,LA7FS_LA7ECH)
"RTN","LA7VHLU4",24,0)
 ;
"RTN","LA7VHLU4",25,0)
 I LA74>0,LA74=+LA74 D
"RTN","LA7VHLU4",26,0)
 . S LA7IENS=LA74_","
"RTN","LA7VHLU4",27,0)
 . D GETS^DIQ(4,LA7IENS,".01;95;99;100","E","LA7X")
"RTN","LA7VHLU4",28,0)
 . ; Build id - VA station # (VAxxxyy)
"RTN","LA7VHLU4",29,0)
 . ; Don't use "VA" prefix until changes made to process with prefix. 12/9/98 JMC
"RTN","LA7VHLU4",30,0)
 . S LA7Y=$S(LA7X(4,LA7IENS,95,"E")="VA":"",1:"")_LA7X(4,LA7IENS,99,"E")
"RTN","LA7VHLU4",31,0)
 . ; Build name using field #100, otherwise #.01
"RTN","LA7VHLU4",32,0)
 . S LA7Z=$S($L(LA7X(4,LA7IENS,100,"E")):LA7X(4,LA7IENS,100,"E"),1:LA7X(4,LA7IENS,.01,"E"))
"RTN","LA7VHLU4",33,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)
"RTN","LA7VHLU4",34,0)
 . S $P(LA7Y,$E(LA7ECH,1),2)=LA7Z
"RTN","LA7VHLU4",35,0)
 . ;
"RTN","LA7VHLU4",36,0)
 . S $P(LA7Y,$E(LA7ECH,1),3)="99VA4"
"RTN","LA7VHLU4",37,0)
 ;
"RTN","LA7VHLU4",38,0)
 Q LA7Y
"RTN","LA7VHLU4",39,0)
 ;
"RTN","LA7VHLU4",40,0)
XCN(LA7DUZ,LA7DIV,LA7FS,LA7ECH) ; Build composite ID and name for person
"RTN","LA7VHLU4",41,0)
 ; Call with   LA7DUZ = DUZ of person 
"RTN","LA7VHLU4",42,0)
 ;                      If not pointer to #200, then use as literal
"RTN","LA7VHLU4",43,0)
 ;             LA7DIV = Institution of user
"RTN","LA7VHLU4",44,0)
 ;              LA7FS = HL field separator
"RTN","LA7VHLU4",45,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VHLU4",46,0)
 ;           
"RTN","LA7VHLU4",47,0)
 ;
"RTN","LA7VHLU4",48,0)
 N LA7SITE,LA7VAF,LA7X,LA7Y,LA7Z,NAME
"RTN","LA7VHLU4",49,0)
 ;
"RTN","LA7VHLU4",50,0)
 S LA7Z=""
"RTN","LA7VHLU4",51,0)
 ;
"RTN","LA7VHLU4",52,0)
 ; Build from file #200
"RTN","LA7VHLU4",53,0)
 I LA7DUZ>0,LA7DUZ?1.N D
"RTN","LA7VHLU4",54,0)
 . S NAME("FILE")=200,NAME("FIELD")=.01,NAME("IENS")=LA7DUZ
"RTN","LA7VHLU4",55,0)
 . S LA7Z=$$HLNAME^XLFNAME(.NAME,"S",$E(LA7ECH))
"RTN","LA7VHLU4",56,0)
 . ; Commented out following lines, trying standardized name API above
"RTN","LA7VHLU4",57,0)
 . ;S LA7X=$$GET1^DIQ(200,LA7DUZ_",",.01)
"RTN","LA7VHLU4",58,0)
 . ;S LA7X=$$CHKDATA^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VHLU4",59,0)
 . ;S LA7Z=$$HLNAME^HLFNC(LA7X,LA7ECH)
"RTN","LA7VHLU4",60,0)
 . ; If no institution, use Kernel Site default
"RTN","LA7VHLU4",61,0)
 . I LA7DIV="" S LA7DIV=+$P($G(^XMB(1,1,"XUS")),U,17)
"RTN","LA7VHLU4",62,0)
 . S LA7SITE=$$RETFACID^LA7VHLU2(LA7DIV,0,1)
"RTN","LA7VHLU4",63,0)
 . I $L(LA7SITE) D
"RTN","LA7VHLU4",64,0)
 . . S LA7VAF=$$GET1^DIQ(4,LA7DIV_",","AGENCY CODE","I")
"RTN","LA7VHLU4",65,0)
 . . I LA7VAF="V" S LA7SITE="VA"_LA7SITE
"RTN","LA7VHLU4",66,0)
 . . S LA7DUZ=LA7DUZ_"-"_LA7SITE
"RTN","LA7VHLU4",67,0)
 . S $P(LA7Y,$E(LA7ECH))=LA7DUZ
"RTN","LA7VHLU4",68,0)
 ;
"RTN","LA7VHLU4",69,0)
 ; If only name passed
"RTN","LA7VHLU4",70,0)
 I 'LA7DUZ D
"RTN","LA7VHLU4",71,0)
 . S LA7DUZ=$$CHKDATA^LA7VHLU3(LA7DUZ,LA7FS_LA7ECH)
"RTN","LA7VHLU4",72,0)
 . S LA7Z=$$HLNAME^HLFNC(LA7DUZ,LA7ECH)
"RTN","LA7VHLU4",73,0)
 ;
"RTN","LA7VHLU4",74,0)
 S $P(LA7Y,$E(LA7ECH),2,7)=LA7Z
"RTN","LA7VHLU4",75,0)
 ;
"RTN","LA7VHLU4",76,0)
 Q LA7Y
"RTN","LA7VHLU4",77,0)
 ;
"RTN","LA7VHLU4",78,0)
 ;
"RTN","LA7VHLU4",79,0)
XAD(LA7FN,LA7DA,LA7DT,LA7FS,LA7ECH) ; Build extended address
"RTN","LA7VHLU4",80,0)
 ; Call with LA7FN = Source File number
"RTN","LA7VHLU4",81,0)
 ;                   Presently file #2 (PATIENT), #4 (INSTITUTION) or #200 (NEW PERSON)
"RTN","LA7VHLU4",82,0)
 ;           LA7DA = Entry in source file
"RTN","LA7VHLU4",83,0)
 ;           LA7DT = As of date in FileMan format
"RTN","LA7VHLU4",84,0)
 ;           LA7FS = HL field separator
"RTN","LA7VHLU4",85,0)
 ;          LA7ECH = HL encoding characters
"RTN","LA7VHLU4",86,0)
 ;
"RTN","LA7VHLU4",87,0)
 ; Returns extended address
"RTN","LA7VHLU4",88,0)
 ;
"RTN","LA7VHLU4",89,0)
 N LA7X,LA7Y,LA7Z
"RTN","LA7VHLU4",90,0)
 ;
"RTN","LA7VHLU4",91,0)
 S LA7FN=$G(LA7FN),LA7DA=$G(LA7DA),LA7DT=$G(LA7DT),LA7FS=$G(LA7FS),LA7ECH=$G(LA7ECH)
"RTN","LA7VHLU4",92,0)
 S LA7Y=""
"RTN","LA7VHLU4",93,0)
 ;
"RTN","LA7VHLU4",94,0)
 ; Build from file #2
"RTN","LA7VHLU4",95,0)
 I LA7FN=2,LA7DA D
"RTN","LA7VHLU4",96,0)
 . N DFN,VAHOW,VAPA,VAERR,VAROOT,VATEST
"RTN","LA7VHLU4",97,0)
 . S DFN=LA7DA
"RTN","LA7VHLU4",98,0)
 . I LA7DT S (VATEST("ADD",9),VATEST("ADD",10))=LA7DT
"RTN","LA7VHLU4",99,0)
 . D ADD^VADPT
"RTN","LA7VHLU4",100,0)
 . I VAERR Q
"RTN","LA7VHLU4",101,0)
 . S $P(LA7Y,$E(LA7ECH),1)=$$CHKDATA^LA7VHLU3(VAPA(1),LA7FS_LA7ECH)
"RTN","LA7VHLU4",102,0)
 . S $P(LA7Y,$E(LA7ECH),2)=$$CHKDATA^LA7VHLU3(VAPA(2),LA7FS_LA7ECH)
"RTN","LA7VHLU4",103,0)
 . S $P(LA7Y,$E(LA7ECH),3)=$$CHKDATA^LA7VHLU3(VAPA(4),LA7FS_LA7ECH)
"RTN","LA7VHLU4",104,0)
 . S $P(LA7Y,$E(LA7ECH),4)=$$CHKDATA^LA7VHLU3($P(VAPA(5),"^",2),LA7FS_LA7ECH)
"RTN","LA7VHLU4",105,0)
 . S $P(LA7Y,$E(LA7ECH),5)=$$CHKDATA^LA7VHLU3(VAPA(11),LA7FS_LA7ECH)
"RTN","LA7VHLU4",106,0)
 . I VAPA(9) S $P(LA7Y,$E(LA7ECH),7)="C"
"RTN","LA7VHLU4",107,0)
 . E  S $P(LA7Y,$E(LA7ECH),7)="P"
"RTN","LA7VHLU4",108,0)
 . S $P(LA7Y,$E(LA7ECH),9)=$$CHKDATA^LA7VHLU3($P(VAPA(7),"^",2),LA7FS_LA7ECH)
"RTN","LA7VHLU4",109,0)
 ;
"RTN","LA7VHLU4",110,0)
 I LA7FN=4,LA7DA D
"RTN","LA7VHLU4",111,0)
 . Q
"RTN","LA7VHLU4",112,0)
 ;
"RTN","LA7VHLU4",113,0)
 I LA7FN=200,LA7DA D
"RTN","LA7VHLU4",114,0)
 . Q
"RTN","LA7VHLU4",115,0)
 ;
"RTN","LA7VHLU4",116,0)
 Q LA7Y
"RTN","LA7VHLU4",117,0)
 ;
"RTN","LA7VHLU4",118,0)
 ;
"RTN","LA7VHLU4",119,0)
XON(LA7FN,LA7DA,LA7FS,LA7ECH) ; Build extended composite name/id for organization
"RTN","LA7VHLU4",120,0)
 ; Call with LA7FN = Source File number
"RTN","LA7VHLU4",121,0)
 ;                   Presently #4 (INSTITUTION)
"RTN","LA7VHLU4",122,0)
 ;           LA7DA = Entry in source file
"RTN","LA7VHLU4",123,0)
 ;           LA7FS = HL field separator
"RTN","LA7VHLU4",124,0)
 ;          LA7ECH = HL encoding characters
"RTN","LA7VHLU4",125,0)
 ;           
"RTN","LA7VHLU4",126,0)
 ;
"RTN","LA7VHLU4",127,0)
 N LA7X,LA7Y,LA7Z
"RTN","LA7VHLU4",128,0)
 ;
"RTN","LA7VHLU4",129,0)
 S LA7FN=$G(LA7FN),LA7DA=$G(LA7DA),LA7FS=$G(LA7FS),LA7ECH=$G(LA7ECH)
"RTN","LA7VHLU4",130,0)
 S LA7Y=""
"RTN","LA7VHLU4",131,0)
 ;
"RTN","LA7VHLU4",132,0)
 I LA7FN=4,LA7DA D
"RTN","LA7VHLU4",133,0)
 . Q
"RTN","LA7VHLU4",134,0)
 ;
"RTN","LA7VHLU4",135,0)
 Q LA7Y
"RTN","LA7VHLU4",136,0)
 ;
"RTN","LA7VHLU4",137,0)
 ;
"RTN","LA7VHLU4",138,0)
XTN(LA7FN,LA7DA,LA7FS,LA7ECH) ; Build extended telecommunication number
"RTN","LA7VHLU4",139,0)
 ; Call with LA7FN = Source File number
"RTN","LA7VHLU4",140,0)
 ;                   Presently #4 (INSTITUTION)
"RTN","LA7VHLU4",141,0)
 ;           LA7DA = Entry in source file
"RTN","LA7VHLU4",142,0)
 ;           LA7FS = HL field separator
"RTN","LA7VHLU4",143,0)
 ;          LA7ECH = HL encoding characters
"RTN","LA7VHLU4",144,0)
 ;           
"RTN","LA7VHLU4",145,0)
 ;
"RTN","LA7VHLU4",146,0)
 N LA7X,LA7Y,LA7Z
"RTN","LA7VHLU4",147,0)
 ;
"RTN","LA7VHLU4",148,0)
 S LA7FN=$G(LA7FN),LA7DA=$G(LA7DA),LA7FS=$G(LA7FS),LA7ECH=$G(LA7ECH)
"RTN","LA7VHLU4",149,0)
 S LA7Y=""
"RTN","LA7VHLU4",150,0)
 ;
"RTN","LA7VHLU4",151,0)
 I LA7FN=4,LA7DA D
"RTN","LA7VHLU4",152,0)
 . Q
"RTN","LA7VHLU4",153,0)
 ;
"RTN","LA7VHLU4",154,0)
 Q LA7Y
"RTN","LA7VHLU4",155,0)
 ;
"RTN","LA7VHLU4",156,0)
 ;
"RTN","LA7VHLU4",157,0)
XCNTFM(LA7X,LA7ECH) ; Resolve XCN data type to FileMan (last name, first name, mi [id])
"RTN","LA7VHLU4",158,0)
 ; Call with LA7X = HL7 field containing name
"RTN","LA7VHLU4",159,0)
 ;         LA7ECH = HL7 encoding characters
"RTN","LA7VHLU4",160,0)
 ;
"RTN","LA7VHLU4",161,0)
 ; Returns   LA7Y = ID code^DUZ^FileMan name (DUZ=0 if name not found on local system).
"RTN","LA7VHLU4",162,0)
 ;
"RTN","LA7VHLU4",163,0)
 N LA7DUZ,LA7IDC,LA7Y,LA7Z,X
"RTN","LA7VHLU4",164,0)
 ;
"RTN","LA7VHLU4",165,0)
 ; Check for coding that indicates DUZ from a VA facility
"RTN","LA7VHLU4",166,0)
 S LA7DUZ=0
"RTN","LA7VHLU4",167,0)
 S (LA7IDC,LA7Z)=$P(LA7X,$E(LA7ECH))
"RTN","LA7VHLU4",168,0)
 I LA7Z?.(1.N1"-VA"3N,1.N1"-VA"3N2U) D
"RTN","LA7VHLU4",169,0)
 . N LA7J,LA7K
"RTN","LA7VHLU4",170,0)
 . S LA7Z(1)=$P(LA7Z,"-"),LA7Z(2)=$P(LA7Z,"-",2)
"RTN","LA7VHLU4",171,0)
 . S LA7K=$$FINDSITE^LA7VHLU2(LA7Z(2),1,1)
"RTN","LA7VHLU4",172,0)
 . S LA7J=$$DIV4^XUSER(.LA7J,LA7Z(1))
"RTN","LA7VHLU4",173,0)
 . I LA7K,$D(LA7J(LA7K)) S LA7DUZ=LA7Z(1)
"RTN","LA7VHLU4",174,0)
 ;
"RTN","LA7VHLU4",175,0)
 ; Check if code resolves to a valid user.
"RTN","LA7VHLU4",176,0)
 I 'LA7DUZ,LA7Z=+LA7Z D
"RTN","LA7VHLU4",177,0)
 . S X=$$ACTIVE^XUSER(LA7Z)
"RTN","LA7VHLU4",178,0)
 . I X,$L($P(X,"^",2)) S LA7DUZ=LA7Z
"RTN","LA7VHLU4",179,0)
 ;
"RTN","LA7VHLU4",180,0)
 S LA7Y=$$FMNAME^HLFNC($P(LA7X,$E(LA7ECH),2,6),LA7ECH)
"RTN","LA7VHLU4",181,0)
 ; HL function sometimes returns trailing "," on name
"RTN","LA7VHLU4",182,0)
 S X=$RE(LA7Y) S:$E(X)="," LA7Y=$E(LA7Y,1,$L(LA7Y)-1)
"RTN","LA7VHLU4",183,0)
 ;
"RTN","LA7VHLU4",184,0)
 ; Put identifying code at end of name in "[]".
"RTN","LA7VHLU4",185,0)
 I $L($P(LA7X,$E(LA7ECH))),$L(LA7Y) S LA7Y=LA7Y_" ["_$P(LA7X,$E(LA7ECH))_"]"
"RTN","LA7VHLU4",186,0)
 ;
"RTN","LA7VHLU4",187,0)
 Q LA7IDC_"^"_LA7DUZ_"^"_LA7Y
"RTN","LA7VHLU5")
0^55^B23832778
"RTN","LA7VHLU5",1,0)
LA7VHLU5 ;DALOI/JMC - HL7 segment builder utility ; 11-1-2000
"RTN","LA7VHLU5",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VHLU5",3,0)
 ;
"RTN","LA7VHLU5",4,0)
 ;
"RTN","LA7VHLU5",5,0)
DEFCODE(LRSS,LRSB,LA7CODE,LA761) ; Determine default codes when data is not mapped
"RTN","LA7VHLU5",6,0)
 ;
"RTN","LA7VHLU5",7,0)
 ; Call with  LRSS = file #63 subscript
"RTN","LA7VHLU5",8,0)
 ;            LRSB = file #63 dataname/location
"RTN","LA7VHLU5",9,0)
 ;         LA7CODE = current codes stored with data (order nlt!result nlt!loinc code!method suffix)
"RTN","LA7VHLU5",10,0)
 ;           LA761 = specimen, pointer to file #61
"RTN","LA7VHLU5",11,0)
 ;
"RTN","LA7VHLU5",12,0)
 N I,LA7DFCDE,LA7MISS
"RTN","LA7VHLU5",13,0)
 ;
"RTN","LA7VHLU5",14,0)
 I '$L(LA7CODE) S LA7CODE="!!!"
"RTN","LA7VHLU5",15,0)
 ;
"RTN","LA7VHLU5",16,0)
 ; Replace any missing codes with defaults
"RTN","LA7VHLU5",17,0)
 ; If no missing codes then return codes passed in.
"RTN","LA7VHLU5",18,0)
 S LA7MISS=""
"RTN","LA7VHLU5",19,0)
 F I=1:1:3 I $P(LA7CODE,"!",I)="" S $P(LA7MISS,"^",I)=I
"RTN","LA7VHLU5",20,0)
 ;
"RTN","LA7VHLU5",21,0)
 I $L(LA7MISS) D
"RTN","LA7VHLU5",22,0)
 . I LRSS="CH" D CHSUB Q
"RTN","LA7VHLU5",23,0)
 . I LRSS="MI" D MISUB Q
"RTN","LA7VHLU5",24,0)
 . I LRSS="SP" D SPSUB Q
"RTN","LA7VHLU5",25,0)
 ;
"RTN","LA7VHLU5",26,0)
 Q LA7CODE
"RTN","LA7VHLU5",27,0)
 ;
"RTN","LA7VHLU5",28,0)
 ;
"RTN","LA7VHLU5",29,0)
CHSUB ; Determine codes for CH subscript.
"RTN","LA7VHLU5",30,0)
 ;
"RTN","LA7VHLU5",31,0)
 N LA760,LA7NLT,LA7X,LA7Y
"RTN","LA7VHLU5",32,0)
 ;
"RTN","LA7VHLU5",33,0)
 ; Find a file #60 test which uses this dataname. Since there can be
"RTN","LA7VHLU5",34,0)
 ; multiple tests check each until an order and result NLT code is found.
"RTN","LA7VHLU5",35,0)
 S LA760=0
"RTN","LA7VHLU5",36,0)
 F  S LA760=$O(^LAB(60,"C",LRSS_";"_LRSB_";1",LA760)) Q:'LA760  D
"RTN","LA7VHLU5",37,0)
 . ; Default order NLT
"RTN","LA7VHLU5",38,0)
 . I $P(LA7MISS,"^") D
"RTN","LA7VHLU5",39,0)
 . . S LA7X=$$NLT^LRVER1(LA760)
"RTN","LA7VHLU5",40,0)
 . . I $L(LA7X) S $P(LA7CODE,"!")=LA7X,$P(LA7MISS,"^")=""
"RTN","LA7VHLU5",41,0)
 . ; Default result NLT
"RTN","LA7VHLU5",42,0)
 . I $P(LA7MISS,"^",2) D
"RTN","LA7VHLU5",43,0)
 . . S LA7X=+$P($G(^LAB(60,LA760,64)),"^",2),LA7Y=""
"RTN","LA7VHLU5",44,0)
 . . I LA7X S LA7Y=$$GET1^DIQ(64,LA7X_",",1)
"RTN","LA7VHLU5",45,0)
 . . I $L(LA7Y) S $P(LA7CODE,"!",2)=LA7Y,$P(LA7MISS,"^",2)=""
"RTN","LA7VHLU5",46,0)
 ;
"RTN","LA7VHLU5",47,0)
 ; If no result NLT code then use order NLT as default
"RTN","LA7VHLU5",48,0)
 I $P(LA7CODE,"!",2)="" S $P(LA7CODE,"!",2)=$P(LA7CODE,"!")
"RTN","LA7VHLU5",49,0)
 ;
"RTN","LA7VHLU5",50,0)
 ; If no order NLT code found on file #60 entries then use this default
"RTN","LA7VHLU5",51,0)
 I $P(LA7CODE,"!")="" S $P(LA7CODE,"!")="81323.0000"
"RTN","LA7VHLU5",52,0)
 ;
"RTN","LA7VHLU5",53,0)
 ; Default result LOINC code based on result NLT code
"RTN","LA7VHLU5",54,0)
 ; If none on NLT result code then try order NLT code
"RTN","LA7VHLU5",55,0)
 I $P(LA7MISS,"^",3) D
"RTN","LA7VHLU5",56,0)
 . S LA7NLT=$P(LA7CODE,"!",2),LA7X=""
"RTN","LA7VHLU5",57,0)
 . I $L(LA7NLT) S LA7X=$$LNC^LRVER1(LA7NLT,$P(LA7CODE,"!",4),LA761)
"RTN","LA7VHLU5",58,0)
 . I LA7X S $P(LA7CODE,"!",3)=LA7X Q
"RTN","LA7VHLU5",59,0)
 . S LA7NLT=$P(LA7CODE,"!"),LA7X=""
"RTN","LA7VHLU5",60,0)
 . I $L(LA7NLT) S LA7X=$$LNC^LRVER1(LA7NLT,$P(LA7CODE,"!",4),LA761)
"RTN","LA7VHLU5",61,0)
 . I LA7X S $P(LA7CODE,"!",3)=LA7X
"RTN","LA7VHLU5",62,0)
 ;
"RTN","LA7VHLU5",63,0)
 Q
"RTN","LA7VHLU5",64,0)
 ;
"RTN","LA7VHLU5",65,0)
 ;
"RTN","LA7VHLU5",66,0)
MISUB ; Determine codes for MI subscript
"RTN","LA7VHLU5",67,0)
 ;
"RTN","LA7VHLU5",68,0)
 ; Bacteriology report
"RTN","LA7VHLU5",69,0)
 I LRSB=11 S LA7DFCDE="87993.0000^^" D DEFAULT Q
"RTN","LA7VHLU5",70,0)
 ;
"RTN","LA7VHLU5",71,0)
 ; Gram stain
"RTN","LA7VHLU5",72,0)
 I LRSB=11.6 S LA7DFCDE="87993.0000^87754.0000^664" D DEFAULT Q
"RTN","LA7VHLU5",73,0)
 ;
"RTN","LA7VHLU5",74,0)
 ; Bacteriology organism
"RTN","LA7VHLU5",75,0)
 I LRSB=12 S LA7DFCDE="87993.0000^87570.0000^11475" D DEFAULT Q
"RTN","LA7VHLU5",76,0)
 ;
"RTN","LA7VHLU5",77,0)
 ; Bacteria colony count
"RTN","LA7VHLU5",78,0)
 I +LRSB=12,$P(LRSB,",",2)=1 S LA7DFCDE="^87719.0000^564" D DEFAULT Q
"RTN","LA7VHLU5",79,0)
 ;
"RTN","LA7VHLU5",80,0)
 ; Parasite report
"RTN","LA7VHLU5",81,0)
 I LRSB=14 S LA7DFCDE="87505.0000^^" D DEFAULT Q
"RTN","LA7VHLU5",82,0)
 ;
"RTN","LA7VHLU5",83,0)
 ; Parasite organism 
"RTN","LA7VHLU5",84,0)
 I LRSB=16 S LA7DFCDE="87505.0000^87576.0000^17784" D DEFAULT Q
"RTN","LA7VHLU5",85,0)
 ;
"RTN","LA7VHLU5",86,0)
 ; Mycology report
"RTN","LA7VHLU5",87,0)
 I LRSB=18 S LA7DFCDE="87994.0000^^" D DEFAULT Q
"RTN","LA7VHLU5",88,0)
 ;
"RTN","LA7VHLU5",89,0)
 ; Fungal organism
"RTN","LA7VHLU5",90,0)
 I LRSB=20 S LA7DFCDE="87994.0000^87578.0000^580" D DEFAULT Q
"RTN","LA7VHLU5",91,0)
 ;
"RTN","LA7VHLU5",92,0)
 ; Fungal colony count
"RTN","LA7VHLU5",93,0)
 I +LRSB=20,$P(LRSB,",",2)=1 S LA7DFCDE="87994.0000^87723.0000^19101" D DEFAULT Q
"RTN","LA7VHLU5",94,0)
 ;
"RTN","LA7VHLU5",95,0)
 ; Mycobacterium report
"RTN","LA7VHLU5",96,0)
 I LRSB=22 S LA7DFCDE="87995.0000^^" D DEFAULT Q
"RTN","LA7VHLU5",97,0)
 ;
"RTN","LA7VHLU5",98,0)
 ; Acid Fast stain
"RTN","LA7VHLU5",99,0)
 I LRSB=24 S LA7DFCDE="87995.0000^87756.0000^11545" D DEFAULT Q
"RTN","LA7VHLU5",100,0)
 ;
"RTN","LA7VHLU5",101,0)
 ; Acid Fast stain quantity
"RTN","LA7VHLU5",102,0)
 I LRSB=25 S LA7DFCDE="87995.0000^87583.0000^11545" D DEFAULT Q
"RTN","LA7VHLU5",103,0)
 ;
"RTN","LA7VHLU5",104,0)
 ; Mycobacterium organism
"RTN","LA7VHLU5",105,0)
 I +LRSB=26,'$P(LRSB,",",2) S LA7DFCDE="87995.0000^87589.0000^543" D DEFAULT Q
"RTN","LA7VHLU5",106,0)
 ;
"RTN","LA7VHLU5",107,0)
 ; Bact or TB organism's susceptibilities
"RTN","LA7VHLU5",108,0)
 I $P(LRSB,",",2)>2,$P(LRSB,",",2)<2.999 D  Q
"RTN","LA7VHLU5",109,0)
 . I +LRSB'=12,+LRSB'=26 Q
"RTN","LA7VHLU5",110,0)
 . S LA7X=$O(^LAB(62.06,"AD",$P(LRSB,",",2),0)) Q:'LA7X
"RTN","LA7VHLU5",111,0)
 . I $P(LA7MISS,"^",2) S $P(LA7CODE,"!",2)=$$GET1^DIQ(62.06,LA7X_",","64:1")
"RTN","LA7VHLU5",112,0)
 . I $P(LA7MISS,"^",3) S $P(LA7CODE,"!",3)=$$GET1^DIQ(62.06,LA7X_",","64:25")
"RTN","LA7VHLU5",113,0)
 ;
"RTN","LA7VHLU5",114,0)
 ; Virology report
"RTN","LA7VHLU5",115,0)
 I LRSB=33 S LA7DFCDE="87996.0000^^" D DEFAULT Q
"RTN","LA7VHLU5",116,0)
 ;
"RTN","LA7VHLU5",117,0)
 ; Viral agent
"RTN","LA7VHLU5",118,0)
 I $P(LRSB,",")=36 S LA7DFCDE="87996.0000^87590.0000^6584" D DEFAULT Q
"RTN","LA7VHLU5",119,0)
 ;
"RTN","LA7VHLU5",120,0)
 Q
"RTN","LA7VHLU5",121,0)
 ;
"RTN","LA7VHLU5",122,0)
 ;
"RTN","LA7VHLU5",123,0)
SPSUB ; Determine codes for SP subscript
"RTN","LA7VHLU5",124,0)
 ;
"RTN","LA7VHLU5",125,0)
 N LA7NLT,LA7X,LA7Y
"RTN","LA7VHLU5",126,0)
 ;
"RTN","LA7VHLU5",127,0)
 ; Default order/result NLT codes
"RTN","LA7VHLU5",128,0)
 ; Default result LOINC code based on result NLT code
"RTN","LA7VHLU5",129,0)
 ;
"RTN","LA7VHLU5",130,0)
 ; specimens
"RTN","LA7VHLU5",131,0)
 I LRSB=.012!(LRSB=10) S LA7DFCDE="88515.0000^88539.0000^22633" D DEFAULT Q
"RTN","LA7VHLU5",132,0)
 ;
"RTN","LA7VHLU5",133,0)
 ; brief clinical history
"RTN","LA7VHLU5",134,0)
 I LRSB=.013 S LA7DFCDE="88515.0000^88542.0000^22636" D DEFAULT Q
"RTN","LA7VHLU5",135,0)
 ;
"RTN","LA7VHLU5",136,0)
 ; preoperative diagnosis
"RTN","LA7VHLU5",137,0)
 I LRSB=.014 S LA7DFCDE="88515.0000^88544.0000^10219" D DEFAULT Q
"RTN","LA7VHLU5",138,0)
 ;
"RTN","LA7VHLU5",139,0)
 ; operative findings
"RTN","LA7VHLU5",140,0)
 I LRSB=.015 S LA7DFCDE="88515.0000^88546.0000^10215" D DEFAULT Q
"RTN","LA7VHLU5",141,0)
 ;
"RTN","LA7VHLU5",142,0)
 ; postoperative diagnosis
"RTN","LA7VHLU5",143,0)
 I LRSB=.016 S LA7DFCDE="88515.0000^88547.0000^10218" D DEFAULT Q
"RTN","LA7VHLU5",144,0)
 ;
"RTN","LA7VHLU5",145,0)
 ; gross description
"RTN","LA7VHLU5",146,0)
 I LRSB=1 S LA7DFCDE="88515.0000^88549.0000^22634" D DEFAULT Q
"RTN","LA7VHLU5",147,0)
 ;
"RTN","LA7VHLU5",148,0)
 ; microscopic description
"RTN","LA7VHLU5",149,0)
 I LRSB=1.1 S LA7DFCDE="88515.0000^88563.0000^22635" D DEFAULT Q
"RTN","LA7VHLU5",150,0)
 ;
"RTN","LA7VHLU5",151,0)
 ; frozen section
"RTN","LA7VHLU5",152,0)
 I LRSB=1.3 S LA7DFCDE="88515.0000^88569.0000^322635" D DEFAULT Q
"RTN","LA7VHLU5",153,0)
 ;
"RTN","LA7VHLU5",154,0)
 ; surgical path diagnosis
"RTN","LA7VHLU5",155,0)
 I LRSB=1.4 S LA7DFCDE="88515.0000^88589.0000^22637" D DEFAULT Q
"RTN","LA7VHLU5",156,0)
 ;
"RTN","LA7VHLU5",157,0)
 ; supplementary report
"RTN","LA7VHLU5",158,0)
 I LRSB=1.2!(LRSB="10,5") S LA7DFCDE="88515.0000^88589.0000^22639" D DEFAULT Q
"RTN","LA7VHLU5",159,0)
 ;
"RTN","LA7VHLU5",160,0)
 ; specimen weight
"RTN","LA7VHLU5",161,0)
 I LRSB="10,2" S LA7DFCDE="88515.0000^81233.0000^3154" D DEFAULT Q
"RTN","LA7VHLU5",162,0)
 ;
"RTN","LA7VHLU5",163,0)
 Q
"RTN","LA7VHLU5",164,0)
 ;
"RTN","LA7VHLU5",165,0)
 ;
"RTN","LA7VHLU5",166,0)
DEFAULT ; Resolve codes and set defaults as needed
"RTN","LA7VHLU5",167,0)
 ;
"RTN","LA7VHLU5",168,0)
 ; Expects LA7DFCDE=default order NLT^default result NLT^default LOINC code
"RTN","LA7VHLU5",169,0)
 ;
"RTN","LA7VHLU5",170,0)
 I $P(LA7MISS,"^") S $P(LA7CODE,"!")=$P(LA7DFCDE,"^")
"RTN","LA7VHLU5",171,0)
 I $P(LA7MISS,"^",2) S $P(LA7CODE,"!",2)=$P(LA7DFCDE,"^",2)
"RTN","LA7VHLU5",172,0)
 I $P(LA7MISS,"^",3) D
"RTN","LA7VHLU5",173,0)
 . S $P(LA7CODE,"!",3)=$$LNC^LRVER1($P(LA7CODE,"!",2),$P(LA7CODE,"!",4),LA761)
"RTN","LA7VHLU5",174,0)
 . I '$P(LA7CODE,"!",3) S $P(LA7CODE,"!",3)=$P(LA7DFCDE,"^",3)
"RTN","LA7VHLU5",175,0)
 Q
"RTN","LA7VIN")
0^28^B4484413
"RTN","LA7VIN",1,0)
LA7VIN ;DALOI/JMC - Process Incoming Lab HL7 Messages ; 01/14/99
"RTN","LA7VIN",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VIN",3,0)
 ; This routine processes incoming messages for various Lab HL7 configurations.
"RTN","LA7VIN",4,0)
 Q
"RTN","LA7VIN",5,0)
 ;
"RTN","LA7VIN",6,0)
EN ; Only one process should run at a time
"RTN","LA7VIN",7,0)
 N LA76249,LA7I,LA7INTYP,LA7LOOP
"RTN","LA7VIN",8,0)
 ;
"RTN","LA7VIN",9,0)
 L +^LAHM(62.48,"Z",LA76248):10
"RTN","LA7VIN",10,0)
 E  Q
"RTN","LA7VIN",11,0)
 ;
"RTN","LA7VIN",12,0)
 ; Determine interface type
"RTN","LA7VIN",13,0)
 S LA7INTYP=+$P(^LAHM(62.48,LA76248,0),"^",9)
"RTN","LA7VIN",14,0)
 ;
"RTN","LA7VIN",15,0)
 ; main loop, LA7LOOP reset in GETIN, if no messages for 5 minutes (60x5) then quit
"RTN","LA7VIN",16,0)
 F LA7LOOP=1:1:60 D GETIN H 5
"RTN","LA7VIN",17,0)
 ;
"RTN","LA7VIN",18,0)
 ; If point of care interface then task job(s) to process results in LAH.
"RTN","LA7VIN",19,0)
 I LA7INTYP=20,$D(LA7INTYP("LWL")) D 
"RTN","LA7VIN",20,0)
 . S LA7I=0
"RTN","LA7VIN",21,0)
 . F  S LA7I=$O(LA7INTYP("LWL",LA7I)) Q:'LA7I  D QLAH(LA7I)
"RTN","LA7VIN",22,0)
 ;
"RTN","LA7VIN",23,0)
 ; Release lock
"RTN","LA7VIN",24,0)
 L -^LAHM(62.48,"Z",LA76248)
"RTN","LA7VIN",25,0)
 ; Clean up taskman
"RTN","LA7VIN",26,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7VIN",27,0)
 K LA76248
"RTN","LA7VIN",28,0)
 K CENUM,DPF,ECHOALL,ER,IDE,IDT,LALCT,LANM,LAZZ,LINK,LRTEC,NOW,RMK,T,TC,TP,TSK,WDT
"RTN","LA7VIN",29,0)
 Q
"RTN","LA7VIN",30,0)
 ;
"RTN","LA7VIN",31,0)
 ;
"RTN","LA7VIN",32,0)
GETIN ; Check the incoming queue for messages and then call LA7VIN1 to
"RTN","LA7VIN",33,0)
 ; process the message.
"RTN","LA7VIN",34,0)
 ;
"RTN","LA7VIN",35,0)
 ; Check incoming queue
"RTN","LA7VIN",36,0)
 Q:'$O(^LAHM(62.49,"Q",LA76248,"IQ",0))
"RTN","LA7VIN",37,0)
 ;
"RTN","LA7VIN",38,0)
 ; Reset timeout counter
"RTN","LA7VIN",39,0)
 S LA7LOOP=1
"RTN","LA7VIN",40,0)
 ;
"RTN","LA7VIN",41,0)
 ; Get lock on message, quit if still building, process message then release lock.
"RTN","LA7VIN",42,0)
 F  S LA76249=$O(^LAHM(62.49,"Q",LA76248,"IQ",0)) Q:'LA76249  D
"RTN","LA7VIN",43,0)
 . L +^LAHM(62.49,LA76249):1
"RTN","LA7VIN",44,0)
 . I '$T H 5 Q
"RTN","LA7VIN",45,0)
 . D NXTMSG^LA7VIN1
"RTN","LA7VIN",46,0)
 . L -^LAHM(62.49,LA76249)
"RTN","LA7VIN",47,0)
 K ^TMP("LA7TREE",$J)
"RTN","LA7VIN",48,0)
 Q
"RTN","LA7VIN",49,0)
 ;
"RTN","LA7VIN",50,0)
 ;
"RTN","LA7VIN",51,0)
QUE ; Call here to queue this processing routine to run in the background.
"RTN","LA7VIN",52,0)
 ; Required variables are:  LA76248 = pointer to configuration in 62.48
"RTN","LA7VIN",53,0)
 ;
"RTN","LA7VIN",54,0)
 N ZTDESC,ZTDTH,ZTIO,ZTSAVE,ZTRTN,ZTSK
"RTN","LA7VIN",55,0)
 ;
"RTN","LA7VIN",56,0)
 ; See if already running
"RTN","LA7VIN",57,0)
 L +^LAHM(62.48,"Z",LA76248):1
"RTN","LA7VIN",58,0)
 E  Q
"RTN","LA7VIN",59,0)
 ;
"RTN","LA7VIN",60,0)
 S ZTRTN="EN^LA7VIN",ZTDTH=$H,ZTIO=""
"RTN","LA7VIN",61,0)
 S ZTDESC="Processing Routine for "_$P(^LAHM(62.48,LA76248,0),"^")
"RTN","LA7VIN",62,0)
 S ZTSAVE("LA76248")=LA76248
"RTN","LA7VIN",63,0)
 D ^%ZTLOAD
"RTN","LA7VIN",64,0)
 ;
"RTN","LA7VIN",65,0)
 L -^LAHM(62.48,"Z",LA76248)
"RTN","LA7VIN",66,0)
 ;
"RTN","LA7VIN",67,0)
 Q
"RTN","LA7VIN",68,0)
 ;
"RTN","LA7VIN",69,0)
 ;
"RTN","LA7VIN",70,0)
QLAH(LWL) ; Call here to queue result processing routine to run in the background.
"RTN","LA7VIN",71,0)
 ; Call with LWL = pointer to loadlist in file #68.2
"RTN","LA7VIN",72,0)
 ;
"RTN","LA7VIN",73,0)
 N ZTDESC,ZTDTH,ZTIO,ZTSAVE,ZTRTN,ZTSK
"RTN","LA7VIN",74,0)
 ;
"RTN","LA7VIN",75,0)
 ; See if already running
"RTN","LA7VIN",76,0)
 L +^LAH("Z",LWL):1
"RTN","LA7VIN",77,0)
 E  Q
"RTN","LA7VIN",78,0)
 ;
"RTN","LA7VIN",79,0)
 S ZTRTN="EN^LA7VIN",ZTDTH=$H,ZTIO=""
"RTN","LA7VIN",80,0)
 S ZTDESC="Result Processing for "_$P(^LRO(68.2,LWL,0),"^")
"RTN","LA7VIN",81,0)
 S ZTSAVE("LWL")=LWL
"RTN","LA7VIN",82,0)
 ;D ^%ZTLOAD
"RTN","LA7VIN",83,0)
 ;
"RTN","LA7VIN",84,0)
 L -^LAH("Z",LWL)
"RTN","LA7VIN",85,0)
 ;
"RTN","LA7VIN",86,0)
 Q
"RTN","LA7VIN1")
0^29^B34566928
"RTN","LA7VIN1",1,0)
LA7VIN1 ;DALOI/JMC - Process Incoming UI Msgs, continued ; 01/14/99
"RTN","LA7VIN1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VIN1",3,0)
 ; This routine is a continuation of LA7VIN and is only called from there.
"RTN","LA7VIN1",4,0)
 ; It is called with each message found in the incoming queue.  
"RTN","LA7VIN1",5,0)
 Q
"RTN","LA7VIN1",6,0)
 ;
"RTN","LA7VIN1",7,0)
NXTMSG ;
"RTN","LA7VIN1",8,0)
 N FDA,LA7ABORT,LA7CNT,LA7END,LA7ERR
"RTN","LA7VIN1",9,0)
 N LA7INDX,LA7QUIT,LA7SEG,LA7STYP
"RTN","LA7VIN1",10,0)
 ;
"RTN","LA7VIN1",11,0)
 S (LA7ERR)=""
"RTN","LA7VIN1",12,0)
 S (LA7ABORT,LA7CNT,LA7END,LA7INDX,LA7QUIT,LA7SEQ)=0
"RTN","LA7VIN1",13,0)
 S DT=$$DT^XLFDT
"RTN","LA7VIN1",14,0)
 S LA7ID="UNKNOWN-I-"
"RTN","LA7VIN1",15,0)
 ;
"RTN","LA7VIN1",16,0)
 ; Message built but no text.
"RTN","LA7VIN1",17,0)
 I '$O(^LAHM(62.49,LA76249,150,0)) D  Q
"RTN","LA7VIN1",18,0)
 . S (LA7ABORT,LA7ERR)=6
"RTN","LA7VIN1",19,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",20,0)
 ;
"RTN","LA7VIN1",21,0)
 ; Process message segments
"RTN","LA7VIN1",22,0)
 ; Lab currently does not accept segments beginning with the letter "Z"
"RTN","LA7VIN1",23,0)
 ; which are reserved for locally-defined messages. "Z" segments will be
"RTN","LA7VIN1",24,0)
 ; ignored by this software.
"RTN","LA7VIN1",25,0)
 F  S LA7END=$$GETSEG^LA7VHLU2(LA76249,.LA7INDX,.LA7SEG) Q:LA7END  D
"RTN","LA7VIN1",26,0)
 . S LA7STYP=$E(LA7SEG(0),1,3) ; Segment type
"RTN","LA7VIN1",27,0)
 . I $E(LA7STYP,1)="Z" Q
"RTN","LA7VIN1",28,0)
 . ; Not a valid segment type
"RTN","LA7VIN1",29,0)
 . I LA7STYP'?2U1UN D  Q
"RTN","LA7VIN1",30,0)
 . . S LA7ERR=34
"RTN","LA7VIN1",31,0)
 . . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",32,0)
 . ; Segment encoded wrong - field separator does not match
"RTN","LA7VIN1",33,0)
 . I "MSH^FSH^BHS^"'[(LA7STYP_"^"),$E(LA7SEG(0),4)'=LA7FS D  Q
"RTN","LA7VIN1",34,0)
 . . S LA7ERR=35
"RTN","LA7VIN1",35,0)
 . . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",36,0)
 . I $T(@LA7STYP)="" Q  ; No processing logic for this segment type
"RTN","LA7VIN1",37,0)
 . D @LA7STYP
"RTN","LA7VIN1",38,0)
 ;
"RTN","LA7VIN1",39,0)
 ; Set id if only MSH segment received.
"RTN","LA7VIN1",40,0)
 I LA7SEQ<5 D
"RTN","LA7VIN1",41,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,"UNKNOWN")
"RTN","LA7VIN1",42,0)
 . S LA7ERR=6
"RTN","LA7VIN1",43,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",44,0)
 ;
"RTN","LA7VIN1",45,0)
 ; Set status to purgeable if no errors.
"RTN","LA7VIN1",46,0)
 I $P($G(^LAHM(62.49,LA76249,0)),"^",3)'="E" D
"RTN","LA7VIN1",47,0)
 . S FDA(1,62.49,LA76249_",",2)="X"
"RTN","LA7VIN1",48,0)
 . D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7VIN1",49,0)
 ;
"RTN","LA7VIN1",50,0)
 ; Store identifier's found in message.
"RTN","LA7VIN1",51,0)
 D UPID^LA7VHLU1(LA76249)
"RTN","LA7VIN1",52,0)
 ;
"RTN","LA7VIN1",53,0)
 ; Send new result alert for ORU messages if turned on.
"RTN","LA7VIN1",54,0)
 I $G(LA7MTYP)="ORU",$D(^LAHM(62.48,+$G(LA76248),20,"B",1)) D
"RTN","LA7VIN1",55,0)
 . D XQA^LA7UXQA(1,LA76248)
"RTN","LA7VIN1",56,0)
 ;
"RTN","LA7VIN1",57,0)
 ; Send new order alert for ORM messages if turned on.
"RTN","LA7VIN1",58,0)
 I $G(LA7MTYP)="ORM",$D(^LAHM(62.48,+$G(LA76248),20,"B",3)) D
"RTN","LA7VIN1",59,0)
 . N LA7ROOT
"RTN","LA7VIN1",60,0)
 . S LA7ROOT="^TMP(""LA7-ORM"",$J)"
"RTN","LA7VIN1",61,0)
 . F  S LA7ROOT=$Q(@LA7ROOT) Q:$QS(LA7ROOT,1)'="LA7-ORM"!($QS(LA7ROOT,2)'=$J)  D
"RTN","LA7VIN1",62,0)
 . . D XQA^LA7UXQA(3,$QS(LA7ROOT,3),"",$QS(LA7ROOT,4),"",$QS(LA7ROOT,5))
"RTN","LA7VIN1",63,0)
 ;
"RTN","LA7VIN1",64,0)
 ; Cleanup shipping config test info used to process orders
"RTN","LA7VIN1",65,0)
 I $G(LA7MTYP)="ORM" K ^TMP("LA7TC",$J)
"RTN","LA7VIN1",66,0)
 ;
"RTN","LA7VIN1",67,0)
 D KILLMSH
"RTN","LA7VIN1",68,0)
 ;
"RTN","LA7VIN1",69,0)
 Q
"RTN","LA7VIN1",70,0)
 ;
"RTN","LA7VIN1",71,0)
 ;
"RTN","LA7VIN1",72,0)
MSA ;; Process MSA segment
"RTN","LA7VIN1",73,0)
 ;
"RTN","LA7VIN1",74,0)
 D MSA^LA7VIN3
"RTN","LA7VIN1",75,0)
 ;
"RTN","LA7VIN1",76,0)
 ; Set sequence flag
"RTN","LA7VIN1",77,0)
 S LA7SEQ=5
"RTN","LA7VIN1",78,0)
 Q
"RTN","LA7VIN1",79,0)
 ;
"RTN","LA7VIN1",80,0)
 ;
"RTN","LA7VIN1",81,0)
BSH ;; Process various HL7 header segments
"RTN","LA7VIN1",82,0)
FSH ;;
"RTN","LA7VIN1",83,0)
MSH ;;
"RTN","LA7VIN1",84,0)
 D KILLMSH
"RTN","LA7VIN1",85,0)
 ;
"RTN","LA7VIN1",86,0)
 D MSH^LA7VIN2
"RTN","LA7VIN1",87,0)
 ;
"RTN","LA7VIN1",88,0)
 ; Set sequence flag
"RTN","LA7VIN1",89,0)
 S LA7SEQ=1
"RTN","LA7VIN1",90,0)
 Q
"RTN","LA7VIN1",91,0)
 ;
"RTN","LA7VIN1",92,0)
 ;
"RTN","LA7VIN1",93,0)
NTE ;; Process NTE segment
"RTN","LA7VIN1",94,0)
 ;
"RTN","LA7VIN1",95,0)
 I LA7SEQ<30 D  Q
"RTN","LA7VIN1",96,0)
 . ; Put code to log error - no OBR/OBX segment
"RTN","LA7VIN1",97,0)
 ;
"RTN","LA7VIN1",98,0)
 ; Flag set that there was problem with OBR segment,
"RTN","LA7VIN1",99,0)
 ; skip associated NTE segments that follow OBR/OBX segments
"RTN","LA7VIN1",100,0)
 I LA7QUIT=2 Q
"RTN","LA7VIN1",101,0)
 ;
"RTN","LA7VIN1",102,0)
 I LA7MTYP="ORU"!(LA7MTYP="ORM"&LA7INTYP=20) D NTE^LA7VIN2
"RTN","LA7VIN1",103,0)
 ;
"RTN","LA7VIN1",104,0)
 Q
"RTN","LA7VIN1",105,0)
 ;
"RTN","LA7VIN1",106,0)
 ;
"RTN","LA7VIN1",107,0)
OBR ;; Process OBR segment
"RTN","LA7VIN1",108,0)
 ;
"RTN","LA7VIN1",109,0)
 D KILLOBR
"RTN","LA7VIN1",110,0)
 ;
"RTN","LA7VIN1",111,0)
 ; Clear flag to process this segment
"RTN","LA7VIN1",112,0)
 I LA7QUIT=2 S LA7QUIT=0
"RTN","LA7VIN1",113,0)
 ;
"RTN","LA7VIN1",114,0)
 I LA7SEQ<10 D  Q
"RTN","LA7VIN1",115,0)
 . ; Put code to log error - no PID segment
"RTN","LA7VIN1",116,0)
 ;
"RTN","LA7VIN1",117,0)
 I LA7MTYP="ORU" D OBR^LA7VIN4
"RTN","LA7VIN1",118,0)
 I LA7MTYP="ORM" D
"RTN","LA7VIN1",119,0)
 . I LA7INTYP=20 D OBR^LA7VIN4 Q
"RTN","LA7VIN1",120,0)
 . D OBR^LA7VORM
"RTN","LA7VIN1",121,0)
 ;
"RTN","LA7VIN1",122,0)
 ; Set sequence flag
"RTN","LA7VIN1",123,0)
 S LA7SEQ=30
"RTN","LA7VIN1",124,0)
 Q
"RTN","LA7VIN1",125,0)
 ;
"RTN","LA7VIN1",126,0)
 ;
"RTN","LA7VIN1",127,0)
OBX ;; Process OBX segment
"RTN","LA7VIN1",128,0)
 ;
"RTN","LA7VIN1",129,0)
 D KILLOBX
"RTN","LA7VIN1",130,0)
 ;
"RTN","LA7VIN1",131,0)
 ; No OBR segment, can't process OBX
"RTN","LA7VIN1",132,0)
 I LA7SEQ<30 D  Q
"RTN","LA7VIN1",133,0)
 . D CREATE^LA7LOG(9)
"RTN","LA7VIN1",134,0)
 ;
"RTN","LA7VIN1",135,0)
 ; Flag set that there was problem with OBR segment,
"RTN","LA7VIN1",136,0)
 ; skip associated OBX segments that follow OBR segment
"RTN","LA7VIN1",137,0)
 I LA7QUIT=2 Q
"RTN","LA7VIN1",138,0)
 ;
"RTN","LA7VIN1",139,0)
 ; Process result messages (ORU) or ORM POC messages.
"RTN","LA7VIN1",140,0)
 I LA7MTYP="ORU"!(LA7MTYP="ORM"&(LA7INTYP=20)) D
"RTN","LA7VIN1",141,0)
 . ; Process "CH" subscript results.
"RTN","LA7VIN1",142,0)
 . I $G(LA7SS)="CH" D
"RTN","LA7VIN1",143,0)
 . . I '$G(LA7ISQN) Q  ; No place to store results
"RTN","LA7VIN1",144,0)
 . . D OBX^LA7VIN5
"RTN","LA7VIN1",145,0)
 . ;
"RTN","LA7VIN1",146,0)
 . ; Process "AP" subscript results.
"RTN","LA7VIN1",147,0)
 . ;I $G(LA7SS)="AP",$L($T(OBX^LA7VIN6)) D OBX^LA7VIN6
"RTN","LA7VIN1",148,0)
 . ;
"RTN","LA7VIN1",149,0)
 . ; Process "MI" subscript results.
"RTN","LA7VIN1",150,0)
 . ;I $G(LA7SS)="MI" D OBX^LA7VIN7
"RTN","LA7VIN1",151,0)
 . ;
"RTN","LA7VIN1",152,0)
 . ; Process "BB" subscript results.
"RTN","LA7VIN1",153,0)
 . ;I $G(LA7SS)="BB",$L($T(OBX^LA7VIN8)) D OBX^LA7VIN8
"RTN","LA7VIN1",154,0)
 . ;
"RTN","LA7VIN1",155,0)
 . ; Update test status on manifest
"RTN","LA7VIN1",156,0)
 . I $G(LA7628),$L(LA7UID),$G(LA7OTST) D UTS^LA7VHLU1(LA7628,LA7UID,LA7OTST)
"RTN","LA7VIN1",157,0)
 ;
"RTN","LA7VIN1",158,0)
 ; Process results that accompany orders
"RTN","LA7VIN1",159,0)
 I LA7MTYP="ORM",LA7INTYP'=20 D
"RTN","LA7VIN1",160,0)
 . ; *** This section to be developed - JMC 7/15/99 ***
"RTN","LA7VIN1",161,0)
 . Q
"RTN","LA7VIN1",162,0)
 ;
"RTN","LA7VIN1",163,0)
 ; Set sequence flag
"RTN","LA7VIN1",164,0)
 S LA7SEQ=40
"RTN","LA7VIN1",165,0)
 Q
"RTN","LA7VIN1",166,0)
 ;
"RTN","LA7VIN1",167,0)
 ;
"RTN","LA7VIN1",168,0)
ORC ;; Process ORC segment
"RTN","LA7VIN1",169,0)
 ;
"RTN","LA7VIN1",170,0)
 D KILLORC
"RTN","LA7VIN1",171,0)
 ;
"RTN","LA7VIN1",172,0)
 I LA7SEQ<10 D  Q
"RTN","LA7VIN1",173,0)
 . ; Put code to log error - no PID segment
"RTN","LA7VIN1",174,0)
 ;
"RTN","LA7VIN1",175,0)
 D ORC^LA7VIN2
"RTN","LA7VIN1",176,0)
 ;
"RTN","LA7VIN1",177,0)
 ; Set sequence flag
"RTN","LA7VIN1",178,0)
 S LA7SEQ=20
"RTN","LA7VIN1",179,0)
 Q
"RTN","LA7VIN1",180,0)
 ;
"RTN","LA7VIN1",181,0)
 ;
"RTN","LA7VIN1",182,0)
PID ;; Process PID segment
"RTN","LA7VIN1",183,0)
 ;
"RTN","LA7VIN1",184,0)
 D KILLPID
"RTN","LA7VIN1",185,0)
 ;
"RTN","LA7VIN1",186,0)
 I LA7SEQ<1 D  Q
"RTN","LA7VIN1",187,0)
 . ; Put code to log error - no MSH segment
"RTN","LA7VIN1",188,0)
 ;
"RTN","LA7VIN1",189,0)
 ; Clear flag to process this segment
"RTN","LA7VIN1",190,0)
 I LA7QUIT=1 S LA7QUIT=0
"RTN","LA7VIN1",191,0)
 ;
"RTN","LA7VIN1",192,0)
 D PID^LA7VIN2
"RTN","LA7VIN1",193,0)
 ;
"RTN","LA7VIN1",194,0)
 ; Set sequence flag
"RTN","LA7VIN1",195,0)
 S LA7SEQ=10
"RTN","LA7VIN1",196,0)
 Q
"RTN","LA7VIN1",197,0)
 ;
"RTN","LA7VIN1",198,0)
 ;
"RTN","LA7VIN1",199,0)
PV1 ;; Process PV1 segment
"RTN","LA7VIN1",200,0)
 ;
"RTN","LA7VIN1",201,0)
 D KILLPV1
"RTN","LA7VIN1",202,0)
 ;
"RTN","LA7VIN1",203,0)
 I LA7SEQ<10 D  Q
"RTN","LA7VIN1",204,0)
 . ; Put code to log error - no PID segment
"RTN","LA7VIN1",205,0)
 ;
"RTN","LA7VIN1",206,0)
 D PV1^LA7VIN2
"RTN","LA7VIN1",207,0)
 ;
"RTN","LA7VIN1",208,0)
 ; Set sequence flag
"RTN","LA7VIN1",209,0)
 S LA7SEQ=11
"RTN","LA7VIN1",210,0)
 Q
"RTN","LA7VIN1",211,0)
 ;
"RTN","LA7VIN1",212,0)
 ;
"RTN","LA7VIN1",213,0)
 ; The section below is designed to clean up variables that are created
"RTN","LA7VIN1",214,0)
 ; during the processing of a segment type and any created by processing
"RTN","LA7VIN1",215,0)
 ; of segments that are within the message definition.
"RTN","LA7VIN1",216,0)
 ;
"RTN","LA7VIN1",217,0)
KILLMSH ; Clean up variables used by MSH and following segments
"RTN","LA7VIN1",218,0)
 K LA7CSITE,LA7CS,LA7ECH,LA7FS,LA7MEDT,LA7MID,LA7MTYP
"RTN","LA7VIN1",219,0)
 K LA7RAP,LA7RFAC,LA7SAP,LA7SEQ,LA7SFAC
"RTN","LA7VIN1",220,0)
 K ^TMP("LA7-ID",$J),^TMP("LA7-ORM",$J)
"RTN","LA7VIN1",221,0)
 ;
"RTN","LA7VIN1",222,0)
KILLPID ; Clean up variables used by PID and following segments
"RTN","LA7VIN1",223,0)
 K DFN
"RTN","LA7VIN1",224,0)
 K LA7DOB,LA7ICN,LA7PNM,LA7PTID2,LA7PTID3,LA7PTID4,LA7SEX,LA7SPID,LA7SSN
"RTN","LA7VIN1",225,0)
 K LRDFN,LRTDFN
"RTN","LA7VIN1",226,0)
 ;
"RTN","LA7VIN1",227,0)
KILLPV1 ; Clean up variables used by PV1 and following segments
"RTN","LA7VIN1",228,0)
 K LA7LOC,LA7SPV1
"RTN","LA7VIN1",229,0)
 ;
"RTN","LA7VIN1",230,0)
KILLORC ; Clean up variables used by ORC and following segments
"RTN","LA7VIN1",231,0)
 K LA7628,LA7629
"RTN","LA7VIN1",232,0)
 K LA7CSITE,LA7DUR,LA7DURU,LA7ODUR,LA7ODURU,LA7ORDT,LA7OTYPE,LA7OUR
"RTN","LA7VIN1",233,0)
 K LA7PEB,LA7PON,LA7POP,LA7PVB,LA7SM
"RTN","LA7VIN1",234,0)
 ;
"RTN","LA7VIN1",235,0)
KILLOBR ; Clean up variables used by OBR and following segments
"RTN","LA7VIN1",236,0)
 K LA70070,LA760,LA761,LA762,LA7624
"RTN","LA7VIN1",237,0)
 K LA7AA,LA7AD,LA7ACC,LA7AN,LA7CDT,LA7FID,LA7ISQN,LA7LWL
"RTN","LA7VIN1",238,0)
 K LA7ONLT,LA7OTST,LA7POC,LA7SOBR,LA7SPTY,LA7SS,LA7UID,LA7UR
"RTN","LA7VIN1",239,0)
 ;
"RTN","LA7VIN1",240,0)
KILLOBX ; Clean up variables used by OBX and following segments
"RTN","LA7VIN1",241,0)
 K LA7ORS,LA7RLNC,LA7RMK,LA7RNLT,LA7RO,LA7SOBX
"RTN","LA7VIN1",242,0)
 ;
"RTN","LA7VIN1",243,0)
KILLBLG ;Clean up variables used by BLG and following segments
"RTN","LA7VIN1",244,0)
 ;
"RTN","LA7VIN1",245,0)
 Q
"RTN","LA7VIN2")
0^30^B34090549
"RTN","LA7VIN2",1,0)
LA7VIN2 ;DALOI/JMC - Process Incoming UI Msgs, continued ; 01/14/99
"RTN","LA7VIN2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VIN2",3,0)
 ;This routine is a continuation of LA7VIN1 and is only called from there.
"RTN","LA7VIN2",4,0)
 Q
"RTN","LA7VIN2",5,0)
 ;
"RTN","LA7VIN2",6,0)
MSH ; Process MSH segment
"RTN","LA7VIN2",7,0)
 N LA7X
"RTN","LA7VIN2",8,0)
 ;
"RTN","LA7VIN2",9,0)
 I $E(LA7SEG(0),1,3)'="MSH" D  Q
"RTN","LA7VIN2",10,0)
 . S (LA7ABORT,LA7ERR)=7
"RTN","LA7VIN2",11,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN2",12,0)
 ;
"RTN","LA7VIN2",13,0)
 ; Encoding characters
"RTN","LA7VIN2",14,0)
 S LA7FS=$E(LA7SEG(0),4)
"RTN","LA7VIN2",15,0)
 S LA7CS=$E(LA7SEG(0),5)
"RTN","LA7VIN2",16,0)
 S LA7ECH=$E(LA7SEG(0),5,8)
"RTN","LA7VIN2",17,0)
 ; No field or component seperator
"RTN","LA7VIN2",18,0)
 I LA7FS=""!(LA7CS="") D
"RTN","LA7VIN2",19,0)
 . S (LA7ABORT,LA7ERR)=8
"RTN","LA7VIN2",20,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN2",21,0)
 ;
"RTN","LA7VIN2",22,0)
 ; Sending application
"RTN","LA7VIN2",23,0)
 S LA7SAP=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VIN2",24,0)
 S LA7ID=LA7SAP_"-I-"
"RTN","LA7VIN2",25,0)
 ;
"RTN","LA7VIN2",26,0)
 ; Sending facility
"RTN","LA7VIN2",27,0)
 S LA7SFAC=$$P^LA7VHLU(.LA7SEG,4,LA7FS)
"RTN","LA7VIN2",28,0)
 ;
"RTN","LA7VIN2",29,0)
 ; Receiving application
"RTN","LA7VIN2",30,0)
 S LA7RAP=$$P^LA7VHLU(.LA7SEG,5,LA7FS)
"RTN","LA7VIN2",31,0)
 ;
"RTN","LA7VIN2",32,0)
 ; Receiving facility
"RTN","LA7VIN2",33,0)
 S LA7RFAC=$$P^LA7VHLU(.LA7SEG,6,LA7FS)
"RTN","LA7VIN2",34,0)
 ;
"RTN","LA7VIN2",35,0)
 ; Message date/time
"RTN","LA7VIN2",36,0)
 S LA7MEDT=$$FMDATE^HLFNC($$P^LA7VHLU(.LA7SEG,7,LA7FS))
"RTN","LA7VIN2",37,0)
 ;
"RTN","LA7VIN2",38,0)
 ; Message type
"RTN","LA7VIN2",39,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,9,LA7FS)
"RTN","LA7VIN2",40,0)
 S LA7MTYP=$P(LA7X,LA7CS,1)
"RTN","LA7VIN2",41,0)
 ;
"RTN","LA7VIN2",42,0)
 ; Message Control ID
"RTN","LA7VIN2",43,0)
 S LA7MID=$$P^LA7VHLU(.LA7SEG,10,LA7FS)
"RTN","LA7VIN2",44,0)
 ;
"RTN","LA7VIN2",45,0)
 Q
"RTN","LA7VIN2",46,0)
 ;
"RTN","LA7VIN2",47,0)
ORC ; Process ORC segment
"RTN","LA7VIN2",48,0)
 N LA7X,LA7Y
"RTN","LA7VIN2",49,0)
 ;
"RTN","LA7VIN2",50,0)
 ; Order control
"RTN","LA7VIN2",51,0)
 S LA7OTYPE=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN2",52,0)
 ;
"RTN","LA7VIN2",53,0)
 ; Place order number
"RTN","LA7VIN2",54,0)
 S LA7PON=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VIN2",55,0)
 ;
"RTN","LA7VIN2",56,0)
 ; Setup shipping manifest variable
"RTN","LA7VIN2",57,0)
 S LA7Y=0
"RTN","LA7VIN2",58,0)
 S LA7X=$P($$P^LA7VHLU(.LA7SEG,5,LA7FS),LA7CS)
"RTN","LA7VIN2",59,0)
 I $L(LA7X) S LA7Y=$O(^LAHM(62.8,"B",LA7X,0))
"RTN","LA7VIN2",60,0)
 I LA7Y S LA7628=LA7Y
"RTN","LA7VIN2",61,0)
 S LA7SM=LA7Y_"^"_LA7X
"RTN","LA7VIN2",62,0)
 ;
"RTN","LA7VIN2",63,0)
 ; Setup shipping configuration variable
"RTN","LA7VIN2",64,0)
 I $P(LA7SM,"^") S LA7629=+$P($G(^LAHM(62.8,$P(LA7SM,"^"),0)),"^",2)
"RTN","LA7VIN2",65,0)
 E  S LA7629=0
"RTN","LA7VIN2",66,0)
 ;
"RTN","LA7VIN2",67,0)
 ; Set new order/shipping mainfest received alert/identifiers
"RTN","LA7VIN2",68,0)
 I LA7MTYP="ORM",$L($P(LA7SM,"^",2)) D
"RTN","LA7VIN2",69,0)
 . S ^TMP("LA7-ORM",$J,LA76248,LA76249,$P(LA7SM,"^",2))=""
"RTN","LA7VIN2",70,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,$P(LA7SM,"^",2))
"RTN","LA7VIN2",71,0)
 ;
"RTN","LA7VIN2",72,0)
 ; Order quantity/timing (duration, units, urgency)
"RTN","LA7VIN2",73,0)
 S LA7ODUR=$P($$P^LA7VHLU(.LA7SEG,8,LA7FS),LA7CS,3)
"RTN","LA7VIN2",74,0)
 S LA7ODURU=$P($$P^LA7VHLU(.LA7SEG,8,LA7FS),LA7CS,4)
"RTN","LA7VIN2",75,0)
 S LA7OUR=$P($$P^LA7VHLU(.LA7SEG,8,LA7FS),LA7CS,6)
"RTN","LA7VIN2",76,0)
 ;
"RTN","LA7VIN2",77,0)
 ; Date/time of transaction
"RTN","LA7VIN2",78,0)
 S LA7ORDT=$$FMDATE^HLFNC($$P^LA7VHLU(.LA7SEG,10,LA7FS))
"RTN","LA7VIN2",79,0)
 ;
"RTN","LA7VIN2",80,0)
 ; Placer's entered by (duz or id ^last name, first name, mi [id])
"RTN","LA7VIN2",81,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,11,LA7FS)
"RTN","LA7VIN2",82,0)
 S LA7Y=$$XCNTFM^LA7VHLU4(LA7X,LA7ECH)
"RTN","LA7VIN2",83,0)
 I $P(LA7Y,"^",2) S LA7PEB=$P(LA7X,"^",2,3)
"RTN","LA7VIN2",84,0)
 E  S LA7PEB=$P(LA7Y,"^")_"^"_$P(LA7Y,"^",3)
"RTN","LA7VIN2",85,0)
 ;
"RTN","LA7VIN2",86,0)
 ; Placer's verified by (duz or id ^last name, first name, mi [id])
"RTN","LA7VIN2",87,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,12,LA7FS)
"RTN","LA7VIN2",88,0)
 S LA7Y=$$XCNTFM^LA7VHLU4(LA7X,LA7ECH)
"RTN","LA7VIN2",89,0)
 I $P(LA7Y,"^",2) S LA7PVB=$P(LA7X,"^",2,3)
"RTN","LA7VIN2",90,0)
 E  S LA7PVB=$P(LA7Y,"^")_"^"_$P(LA7Y,"^",3)
"RTN","LA7VIN2",91,0)
 ;
"RTN","LA7VIN2",92,0)
 ; Placer's ordering provider (duz or id^last name, first name, mi [id])
"RTN","LA7VIN2",93,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,13,LA7FS)
"RTN","LA7VIN2",94,0)
 S LA7Y=$$XCNTFM^LA7VHLU4(LA7X,LA7ECH)
"RTN","LA7VIN2",95,0)
 I $P(LA7Y,"^",2) S LA7POP=$P(LA7X,"^",2,3)
"RTN","LA7VIN2",96,0)
 E  S LA7POP=$P(LA7Y,"^")_"^"_$P(LA7Y,"^",3)
"RTN","LA7VIN2",97,0)
 ;
"RTN","LA7VIN2",98,0)
 ; Specimen collecting site from ORC segment, if none use MSH sending facility
"RTN","LA7VIN2",99,0)
 S LA7X=$P($$P^LA7VHLU(.LA7SEG,18,LA7FS),LA7CS)
"RTN","LA7VIN2",100,0)
 S LA7CSITE=$$FINDSITE^LA7VHLU2(LA7X,2,1)
"RTN","LA7VIN2",101,0)
 I LA7CSITE'>0 S LA7CSITE=$$FINDSITE^LA7VHLU2(LA7SFAC,2,0)
"RTN","LA7VIN2",102,0)
 ;
"RTN","LA7VIN2",103,0)
 Q
"RTN","LA7VIN2",104,0)
 ;
"RTN","LA7VIN2",105,0)
 ;
"RTN","LA7VIN2",106,0)
NTE ; Process NTE segment
"RTN","LA7VIN2",107,0)
 ; NTE segments contain comments from instruments or other facilities.
"RTN","LA7VIN2",108,0)
 ; NTE segments following OBR's contain comments which refer to the entire test battery.
"RTN","LA7VIN2",109,0)
 ; NTE segments following OBX's contain comments which are test specific.
"RTN","LA7VIN2",110,0)
 ; Test specific comments can be prefaced with a site defined prefix -
"RTN","LA7VIN2",111,0)
 ; see field REMARK PREFIX (#19) in CHEM TEST multiple of AUTOMATED INSTRUMENT (#62.4 file.
"RTN","LA7VIN2",112,0)
 ; There can be more than one NTE, each will be stored as a comment in ^LAH.
"RTN","LA7VIN2",113,0)
 ;
"RTN","LA7VIN2",114,0)
 N LA7,LA7I
"RTN","LA7VIN2",115,0)
 ;
"RTN","LA7VIN2",116,0)
 S LA7RMK=$$P^LA7VHLU(.LA7SEG,4,LA7FS)
"RTN","LA7VIN2",117,0)
 S LA7RMK=$$UNESC^LA7VHLU3(LA7RMK,LA7FS_LA7ECH)
"RTN","LA7VIN2",118,0)
 ;
"RTN","LA7VIN2",119,0)
 ; Find start of trailing spaces.
"RTN","LA7VIN2",120,0)
 S LA7=$RE(LA7RMK)
"RTN","LA7VIN2",121,0)
 F LA7I=1:1:$L(LA7)  Q:$E(LA7,LA7I)'=" "
"RTN","LA7VIN2",122,0)
 ; Truncate trailing spaces.
"RTN","LA7VIN2",123,0)
 S LA7RMK=$E(LA7RMK,1,($L(LA7RMK)-LA7I+1))
"RTN","LA7VIN2",124,0)
 ;
"RTN","LA7VIN2",125,0)
 ; Don't store remark if same as specimen comment (without "~").
"RTN","LA7VIN2",126,0)
 I $G(LA7AA),$G(LA7AD),$G(LA7AN),LA7RMK=$TR($P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,3)),"^",6),"~") Q
"RTN","LA7VIN2",127,0)
 ; Or patient info (#.091 in file 63) - info previously downloaded
"RTN","LA7VIN2",128,0)
 I $G(LA7AA),$G(LA7AD),$G(LA7AN),LA7RMK=$G(^LR(+$G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)),.091)) Q
"RTN","LA7VIN2",129,0)
 ;
"RTN","LA7VIN2",130,0)
 ; No remark to store.
"RTN","LA7VIN2",131,0)
 I LA7RMK="" Q
"RTN","LA7VIN2",132,0)
 ;
"RTN","LA7VIN2",133,0)
 ; If test specific, store comment prefix with comments (see LA7VIN5)
"RTN","LA7VIN2",134,0)
 I $O(LA7RMK(0,0)) D  Q
"RTN","LA7VIN2",135,0)
 . N LA7I
"RTN","LA7VIN2",136,0)
 . S LA7I=0
"RTN","LA7VIN2",137,0)
 . F  S LA7I=$O(LA7RMK(0,LA7I)) Q:'LA7I  D
"RTN","LA7VIN2",138,0)
 . . I '$P(LA7RMK(0,LA7I),"^") Q
"RTN","LA7VIN2",139,0)
 . . ; Don't store if status not "FINAL"
"RTN","LA7VIN2",140,0)
 . . I $P(LA7RMK(0,LA7I),"^")=2,"CFU"'[$G(LA7ORS) Q
"RTN","LA7VIN2",141,0)
 . . D RMKSET^LASET(LA7LWL,LA7ISQN,LA7RMK,$P(LA7RMK(0,LA7I),"^",2))
"RTN","LA7VIN2",142,0)
 ;
"RTN","LA7VIN2",143,0)
 ; Store comment in 1 node of ^LAH global
"RTN","LA7VIN2",144,0)
 I $P(LA7624(0),"^",17) D RMKSET^LASET(LA7LWL,LA7ISQN,LA7RMK,"")
"RTN","LA7VIN2",145,0)
 ;
"RTN","LA7VIN2",146,0)
 K LA7RMK
"RTN","LA7VIN2",147,0)
 Q
"RTN","LA7VIN2",148,0)
 ;
"RTN","LA7VIN2",149,0)
 ;
"RTN","LA7VIN2",150,0)
PID ; Process PID segment
"RTN","LA7VIN2",151,0)
 N LA7X,LA7Y,X,Y
"RTN","LA7VIN2",152,0)
 ;
"RTN","LA7VIN2",153,0)
 S (DFN,LA7DOB,LA7ICN,LA7PNM,LA7PTID2,LA7PTID3,LA7PTID4,LA7SEX,LA7SSN,LRDFN,LRTDFN)=""
"RTN","LA7VIN2",154,0)
 ;
"RTN","LA7VIN2",155,0)
 ; PID Set ID
"RTN","LA7VIN2",156,0)
 S LA7SPID=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN2",157,0)
 ;
"RTN","LA7VIN2",158,0)
 ; Extract patient identifiers
"RTN","LA7VIN2",159,0)
 S LA7PTID2=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VIN2",160,0)
 S LA7PTID3=$$P^LA7VHLU(.LA7SEG,4,LA7FS)
"RTN","LA7VIN2",161,0)
 S LA7PTID4=$$P^LA7VHLU(.LA7SEG,5,LA7FS)
"RTN","LA7VIN2",162,0)
 ; Resolve ICN if identifier is from MPI
"RTN","LA7VIN2",163,0)
 ; Assume SSN is identifier is "SS" or blank
"RTN","LA7VIN2",164,0)
 F I=1:1:$L(LA7PTID3,$E(LA7ECH,2)) D
"RTN","LA7VIN2",165,0)
 . N J,LA7X,LA7ID
"RTN","LA7VIN2",166,0)
 . S X=$P(LA7PTID3,$E(LA7ECH,2),I) Q:'$L(X)
"RTN","LA7VIN2",167,0)
 . S LA7PTID3(I)=X,LA7ID=$P(LA7PTID3(I),$E(LA7ECH),5)
"RTN","LA7VIN2",168,0)
 . I LA7ID="VAMPI" D  Q
"RTN","LA7VIN2",169,0)
 . . S LA7X=$$CHKICN^LA7VHLU2($P(LA7PTID3(I),$E(LA7ECH))_"V"_$P(LA7PTID3(I),$E(LA7ECH),2))
"RTN","LA7VIN2",170,0)
 . . I LA7X>0 S DFN=$P(LA7X,"^"),LA7ICN=$P(LA7X,"^",2)
"RTN","LA7VIN2",171,0)
 . I LA7ID="SS"!(LA7ID="") D  Q
"RTN","LA7VIN2",172,0)
 . . F J=1:1:3 S LA7X(J)=$P(LA7PTID3(I),$E(LA7ECH),J)
"RTN","LA7VIN2",173,0)
 . . I LA7X(1)'?9N.1A Q
"RTN","LA7VIN2",174,0)
 . . I LA7X(3)="M11",LA7X(2)'=$P($$M11^HLFNC(LA7X(1),LA7ECH),$E(LA7ECH),2) Q
"RTN","LA7VIN2",175,0)
 . . S LA7SSN=LA7X(1),DFN=$O(^DPT("SSN",LA7SSN,0))
"RTN","LA7VIN2",176,0)
 ;
"RTN","LA7VIN2",177,0)
 ; Extract patient name
"RTN","LA7VIN2",178,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,6,LA7FS)
"RTN","LA7VIN2",179,0)
 I $L(LA7X) S LA7PNM=$$FMNAME^HLFNC(LA7X,LA7ECH)
"RTN","LA7VIN2",180,0)
 ;
"RTN","LA7VIN2",181,0)
 ; Extract date of birth
"RTN","LA7VIN2",182,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,8,LA7FS)
"RTN","LA7VIN2",183,0)
 I LA7X S LA7DOB=$$FMDATE^HLFNC(LA7X)
"RTN","LA7VIN2",184,0)
 ;
"RTN","LA7VIN2",185,0)
 ; Extract patient's sex
"RTN","LA7VIN2",186,0)
 S LA7SEX=$$P^LA7VHLU(.LA7SEG,9,LA7FS)
"RTN","LA7VIN2",187,0)
 ;
"RTN","LA7VIN2",188,0)
 ; Extract patient's SSN and determine DFN
"RTN","LA7VIN2",189,0)
 ; If SSN determined previously from PID-3 then compare SSN's
"RTN","LA7VIN2",190,0)
 ; If DFN determined previously from ICN then check DFN based on SSN.
"RTN","LA7VIN2",191,0)
 S LA7X=$P($$P^LA7VHLU(.LA7SEG,20,LA7FS),LA7CS)
"RTN","LA7VIN2",192,0)
 S LA7X=$TR(LA7X,"-","") ; remove "-" if any
"RTN","LA7VIN2",193,0)
 I LA7X?9N.1A D
"RTN","LA7VIN2",194,0)
 . I $L(LA7SSN),LA7X'=LA7SSN Q
"RTN","LA7VIN2",195,0)
 . S LA7SSN=LA7X
"RTN","LA7VIN2",196,0)
 . I DFN,DFN'=$O(^DPT("SSN",LA7SSN,0)) Q
"RTN","LA7VIN2",197,0)
 . S DFN=$O(^DPT("SSN",LA7SSN,0))
"RTN","LA7VIN2",198,0)
 I DFN D
"RTN","LA7VIN2",199,0)
 . S LRDFN=$P($G(^DPT(DFN,"LR")),"^")
"RTN","LA7VIN2",200,0)
 . S LRTDFN=$P($G(^DPT(DFN,"LRT")),"^")
"RTN","LA7VIN2",201,0)
 ;
"RTN","LA7VIN2",202,0)
 Q
"RTN","LA7VIN2",203,0)
 ;
"RTN","LA7VIN2",204,0)
 ;
"RTN","LA7VIN2",205,0)
PV1 ; Process PV1 segment
"RTN","LA7VIN2",206,0)
 ;
"RTN","LA7VIN2",207,0)
 ; PV1 Set ID
"RTN","LA7VIN2",208,0)
 S LA7SPV1=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN2",209,0)
 ;
"RTN","LA7VIN2",210,0)
 ; Extract ordering location
"RTN","LA7VIN2",211,0)
 S LA7LOC=$P($$P^LA7VHLU(.LA7SEG,4,LA7FS),LA7CS)
"RTN","LA7VIN2",212,0)
 Q
"RTN","LA7VIN3")
0^38^B5448818
"RTN","LA7VIN3",1,0)
LA7VIN3 ;DALOI/JMC - Process Incoming UI Msgs, continued ; 01/14/99
"RTN","LA7VIN3",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VIN3",3,0)
 ;This routine is a continuation of LA7VIN1 and is only called from there.
"RTN","LA7VIN3",4,0)
 Q
"RTN","LA7VIN3",5,0)
 ;
"RTN","LA7VIN3",6,0)
MSA ; Process MSA segment
"RTN","LA7VIN3",7,0)
 ; The incoming MSA is used to update the status of the message
"RTN","LA7VIN3",8,0)
 ; in the LA7 MESSAGE QUEUE (#62.49)
"RTN","LA7VIN3",9,0)
 ;
"RTN","LA7VIN3",10,0)
 ; and
"RTN","LA7VIN3",11,0)
 ;
"RTN","LA7VIN3",12,0)
 ; if acknowledging ORU message - the ORDERS PENDING (#69.6) file
"RTN","LA7VIN3",13,0)
 ; if acknowledging ORM message - the SHIPPING MANIFEST (#62.8) file
"RTN","LA7VIN3",14,0)
 ;
"RTN","LA7VIN3",15,0)
 N LA7696,LA76964,LA7MSAID,LA7MSTAT,LA7ORT,LA7RUID,LA7ST,LA7SITE
"RTN","LA7VIN3",16,0)
 S LA7MSTAT=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN3",17,0)
 S LA7MSAID=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VIN3",18,0)
 I LA7MSAID="" Q
"RTN","LA7VIN3",19,0)
 ;
"RTN","LA7VIN3",20,0)
 D SETID^LA7VHLU1(LA76249,LA7ID,"ACK-"_LA7MSAID)
"RTN","LA7VIN3",21,0)
 ;
"RTN","LA7VIN3",22,0)
 S LA7ST=$$FIND1^DIC(64.061,"","MX","Results/data Received","","I $P(^(0),U,7)=""U""")
"RTN","LA7VIN3",23,0)
 ;
"RTN","LA7VIN3",24,0)
 ; Only look for messages id's that are outgoing messages, those that
"RTN","LA7VIN3",25,0)
 ; originated from this system. Other systems (incoming) messages can
"RTN","LA7VIN3",26,0)
 ; use a message id that is the same as a Vista message.
"RTN","LA7VIN3",27,0)
 ;
"RTN","LA7VIN3",28,0)
 N LA76249
"RTN","LA7VIN3",29,0)
 S LA76249=0
"RTN","LA7VIN3",30,0)
 F  S LA76249=$O(^LAHM(62.49,"ID",LA7MSAID,LA76249)) Q:'LA76249  D
"RTN","LA7VIN3",31,0)
 . I $P($G(^LAHM(62.49,LA76249,0)),"^",2)'="O" Q
"RTN","LA7VIN3",32,0)
 . D UPDF
"RTN","LA7VIN3",33,0)
 ;
"RTN","LA7VIN3",34,0)
 Q
"RTN","LA7VIN3",35,0)
 ;
"RTN","LA7VIN3",36,0)
UPDF ; Update respective files
"RTN","LA7VIN3",37,0)
 ;
"RTN","LA7VIN3",38,0)
 N FDA,I,LA7ERR,LA7MTYPE
"RTN","LA7VIN3",39,0)
 ;
"RTN","LA7VIN3",40,0)
 F I=63,100 S LA76249(I)=$G(^LAHM(62.49,LA76249,I))
"RTN","LA7VIN3",41,0)
 ;
"RTN","LA7VIN3",42,0)
 ; Update original message in #62.49
"RTN","LA7VIN3",43,0)
 S FDA(1,62.49,LA76249_",",2)=$S(LA7MSTAT="AA":"X",1:"E")
"RTN","LA7VIN3",44,0)
 I LA7MSTAT'="AA" S FDA(1,LA76249_",",161)=$$P^LA7VHLU(.LA7SEG,4,LA7FS)
"RTN","LA7VIN3",45,0)
 D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7VIN3",46,0)
 ;
"RTN","LA7VIN3",47,0)
 ; Retrieve original message's type.
"RTN","LA7VIN3",48,0)
 S LA7MTYPE=$P(LA76249(100),"^",9)
"RTN","LA7VIN3",49,0)
 ;
"RTN","LA7VIN3",50,0)
 ; If original message was an ORM, then update collecting facility's shipping manifest.
"RTN","LA7VIN3",51,0)
 I LA7MTYPE="ORM" D  Q
"RTN","LA7VIN3",52,0)
 . ; Need to code this section - JMC 1/12/00
"RTN","LA7VIN3",53,0)
 . ; Need to figure out the shipping manifest which is being acknowledged
"RTN","LA7VIN3",54,0)
 . Q
"RTN","LA7VIN3",55,0)
 ;
"RTN","LA7VIN3",56,0)
 I LA7MTYPE'="ORU" Q
"RTN","LA7VIN3",57,0)
 ; Rest of this deals with updating order/test status in LAB PENDING ORDER file
"RTN","LA7VIN3",58,0)
 ; at host lab when collection facility is acknowledging receipt of ORU message.
"RTN","LA7VIN3",59,0)
 ;
"RTN","LA7VIN3",60,0)
 I LA76249(63)="" Q
"RTN","LA7VIN3",61,0)
 S LA7SITE=$P(LA76249(63),U,2),LA7RUID=$P(LA76249(63),U,3),LA7ORT=$P(LA76249(63),U,4)
"RTN","LA7VIN3",62,0)
 S LA7696=$O(^LRO(69.6,"RST",LA7SITE,LA7RUID,0))
"RTN","LA7VIN3",63,0)
 I LA7696="" Q
"RTN","LA7VIN3",64,0)
 ;
"RTN","LA7VIN3",65,0)
 ; Update order status in 69.6
"RTN","LA7VIN3",66,0)
 S FDA(2,69.6,LA7696_",",6)=LA7ST
"RTN","LA7VIN3",67,0)
 D FILE^DIE("","FDA(2)","LA7ERR(2)")
"RTN","LA7VIN3",68,0)
 ;
"RTN","LA7VIN3",69,0)
 S LA76964=$O(^LRO(69.6,LA7696,2,"B",LA7ORT,0))
"RTN","LA7VIN3",70,0)
 I LA76964="" Q
"RTN","LA7VIN3",71,0)
 ;
"RTN","LA7VIN3",72,0)
 ; Update test status in 69.6
"RTN","LA7VIN3",73,0)
 S FDA(3,69.64,LA76964_","_LA7696_",",5)=LA7ST
"RTN","LA7VIN3",74,0)
 D FILE^DIE("","FDA(3)","LA7ERR(3)")
"RTN","LA7VIN3",75,0)
 ;
"RTN","LA7VIN3",76,0)
 Q
"RTN","LA7VIN4")
0^31^B42747096
"RTN","LA7VIN4",1,0)
LA7VIN4 ;DALOI/JMC - Process Incoming UI Msgs, continued ; 01/14/99
"RTN","LA7VIN4",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VIN4",3,0)
 ;This routine is a continuation of LA7VIN1 and is only called from there.
"RTN","LA7VIN4",4,0)
 Q
"RTN","LA7VIN4",5,0)
 ;
"RTN","LA7VIN4",6,0)
OBR ; Process OBR segments
"RTN","LA7VIN4",7,0)
 N I,LA7CUP,LA7ENTRY,LA7IDE,LA7INST,LA7PDUZ,LA7TRAY,LA7X,LA7Y
"RTN","LA7VIN4",8,0)
 ;
"RTN","LA7VIN4",9,0)
 ; OBR Set ID
"RTN","LA7VIN4",10,0)
 S LA7SOBR=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN4",11,0)
 ;
"RTN","LA7VIN4",12,0)
 S LA7624=0
"RTN","LA7VIN4",13,0)
 S LA7INST=$P($$P^LA7VHLU(.LA7SEG,19,LA7FS),LA7CS,1) ; extracting 1st piece
"RTN","LA7VIN4",14,0)
 ; Look up #62.4 entry from instrument name.
"RTN","LA7VIN4",15,0)
 I $L(LA7INST) S LA7624=+$O(^LAB(62.4,"B",LA7INST,0))
"RTN","LA7VIN4",16,0)
 ;
"RTN","LA7VIN4",17,0)
 ; If none then use sending application name to look up #62.4 entry.
"RTN","LA7VIN4",18,0)
 I 'LA7624 S LA7624=+$O(^LAB(62.4,"B",LA7SAP,0))
"RTN","LA7VIN4",19,0)
 ;
"RTN","LA7VIN4",20,0)
 ; Instrument name not found in xref
"RTN","LA7VIN4",21,0)
 I 'LA7624 D  Q
"RTN","LA7VIN4",22,0)
 . I LA7INST="" D  Q
"RTN","LA7VIN4",23,0)
 . . S LA7ERR=10,LA7QUIT=2
"RTN","LA7VIN4",24,0)
 . . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN4",25,0)
 . S LA7ERR=11,LA7QUIT=2
"RTN","LA7VIN4",26,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN4",27,0)
 S LA7624(0)=$G(^LAB(62.4,LA7624,0))
"RTN","LA7VIN4",28,0)
 S LA7ID=$P(LA7624(0),"^")_"-I-"
"RTN","LA7VIN4",29,0)
 ;
"RTN","LA7VIN4",30,0)
 S LA7LWL=+$P(LA7624(0),"^",4) ;  Load/Work List
"RTN","LA7VIN4",31,0)
 S LA7ENTRY=$P(LA7624(0),"^",6) ;LOG,LLIST,IDENT or SEQN
"RTN","LA7VIN4",32,0)
 S:LA7ENTRY="" LA7ENTRY="LOG"
"RTN","LA7VIN4",33,0)
 ;
"RTN","LA7VIN4",34,0)
 ; Placer/filler order numbers
"RTN","LA7VIN4",35,0)
 S LA7SID=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VIN4",36,0)
 S LA7FID=$$P^LA7VHLU(.LA7SEG,4,LA7FS)
"RTN","LA7VIN4",37,0)
 ;
"RTN","LA7VIN4",38,0)
 ; Test order code - find order NLT code
"RTN","LA7VIN4",39,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,5,LA7FS),LA7ONLT=""
"RTN","LA7VIN4",40,0)
 F I=1:1:$L(LA7X,$E(LA7ECH,2)) D  Q:LA7ONLT'=""
"RTN","LA7VIN4",41,0)
 . S LA7Y=$P(LA7X,$E(LA7ECH,2),I)
"RTN","LA7VIN4",42,0)
 . I $P(LA7Y,LA7CS,3)="99VA64" S LA7ONLT=$P(LA7Y,LA7CS)
"RTN","LA7VIN4",43,0)
 ;
"RTN","LA7VIN4",44,0)
 ; Specimen collection date/time
"RTN","LA7VIN4",45,0)
 S LA7CDT=$$FMDATE^HLFNC($$P^LA7VHLU(.LA7SEG,8,LA7FS))
"RTN","LA7VIN4",46,0)
 ;
"RTN","LA7VIN4",47,0)
 ; Pull info from placer field #1
"RTN","LA7VIN4",48,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,21,LA7FS)
"RTN","LA7VIN4",49,0)
 S LA7TRAY=+$P(LA7X,LA7CS,1) ;Tray
"RTN","LA7VIN4",50,0)
 S LA7CUP=+$P(LA7X,LA7CS,2) ; Cup
"RTN","LA7VIN4",51,0)
 S LA7AA=$P(LA7X,LA7CS,3) ;  Accession Area
"RTN","LA7VIN4",52,0)
 S LA7AD=$P(LA7X,LA7CS,4) ;  Accession Date
"RTN","LA7VIN4",53,0)
 S LA7AN=$P(LA7X,LA7CS,5) ;  Accession Entry
"RTN","LA7VIN4",54,0)
 S LA7ACC=$P(LA7X,LA7CS,6) ;  Accession
"RTN","LA7VIN4",55,0)
 S LA7UID=$P(LA7X,LA7CS,7) ;  Unique ID
"RTN","LA7VIN4",56,0)
 I LA7UID'?1(10UN,15UN) S LA7UID=""
"RTN","LA7VIN4",57,0)
 ;
"RTN","LA7VIN4",58,0)
 ; Sequence Number
"RTN","LA7VIN4",59,0)
 ; If point of care interface then use POC ID as IDE
"RTN","LA7VIN4",60,0)
 S LA7IDE=$P(LA7X,LA7CS,8)
"RTN","LA7VIN4",61,0)
 I LA7IDE="",LA7INTYP=20,$L(LA7FID) S LA7IDE=LA7FID
"RTN","LA7VIN4",62,0)
 ;
"RTN","LA7VIN4",63,0)
 ; UID might come as Sample ID
"RTN","LA7VIN4",64,0)
 I LA7UID="",LA7SID?1(10UN,15UN) S LA7UID=LA7SID
"RTN","LA7VIN4",65,0)
 ;
"RTN","LA7VIN4",66,0)
 ; Try to figure out LA7AA LA7AD LA7AN by using the unique ID (UID)
"RTN","LA7VIN4",67,0)
 ; accession may have rolled over, use UID to get current accession info.
"RTN","LA7VIN4",68,0)
 I LA7UID]"" D
"RTN","LA7VIN4",69,0)
 . N X
"RTN","LA7VIN4",70,0)
 . S X=$Q(^LRO(68,"C",LA7UID))
"RTN","LA7VIN4",71,0)
 . I $QS(X,3)'=LA7UID S LA7UID="" Q  ; UID not on file.
"RTN","LA7VIN4",72,0)
 . S LA7AA=+$QS(X,4),LA7AD=+$QS(X,5),LA7AN=+$QS(X,6)
"RTN","LA7VIN4",73,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,LA7UID)
"RTN","LA7VIN4",74,0)
 ;
"RTN","LA7VIN4",75,0)
 ; If still not known, compute from default accession date and area.
"RTN","LA7VIN4",76,0)
 ; Calculate accession date based on accession transform.
"RTN","LA7VIN4",77,0)
 I LA7AA<1!(LA7AD<1)!(LA7AN<1) D
"RTN","LA7VIN4",78,0)
 . N X
"RTN","LA7VIN4",79,0)
 . S LA7AA=+$P(LA7624(0),"^",11)
"RTN","LA7VIN4",80,0)
 . S X=$P($G(^LRO(68,LA7AA,0)),U,3)
"RTN","LA7VIN4",81,0)
 . S LA7AD=$S(X="D":DT,X="M":$E(DT,1,5)_"00",X="Y":$E(DT,1,3)_"0000",X="Q":$E(DT,1,3)_"0000"+(($E(DT,4,5)-1)\3*300+100),1:DT)
"RTN","LA7VIN4",82,0)
 . S LA7AN=+LA7SID
"RTN","LA7VIN4",83,0)
 . I LA7AN>0 D SETID^LA7VHLU1(LA76249,LA7ID,LA7AN)
"RTN","LA7VIN4",84,0)
 . E  D SETID^LA7VHLU1(LA76249,LA7ID,$S(LA7PNM]"":LA7PNM,LA7SSN]"":LA7SSN,1:"NO ID"))
"RTN","LA7VIN4",85,0)
 ;
"RTN","LA7VIN4",86,0)
 ; Zeroth node of acession area.
"RTN","LA7VIN4",87,0)
 S LA7AA(0)=$G(^LRO(68,+LA7AA,0))
"RTN","LA7VIN4",88,0)
 ; Accession's subscript
"RTN","LA7VIN4",89,0)
 S LA7SS=$P(LA7AA(0),"^",2)
"RTN","LA7VIN4",90,0)
 ;
"RTN","LA7VIN4",91,0)
 ; Placer's ordering provider (duz or id^last name, first name, mi [id])
"RTN","LA7VIN4",92,0)
 I $G(LA7POP)="" D
"RTN","LA7VIN4",93,0)
 . S LA7X=$$P^LA7VHLU(.LA7SEG,13,LA7FS)
"RTN","LA7VIN4",94,0)
 . S LA7Y=$P($$XCNTFM^LA7VHLU4(LA7X,LA7ECH),"^",2)
"RTN","LA7VIN4",95,0)
 . I $P(LA7Y,"^",2) S LA7POP=$P(LA7Y,"^",2,3)
"RTN","LA7VIN4",96,0)
 . E  S LA7POP=$P(LA7Y,"^")_"^"_$P(LA7Y,"^",3)
"RTN","LA7VIN4",97,0)
 ;
"RTN","LA7VIN4",98,0)
 ; Specimen(topography), collection sample, HL7 specimen source
"RTN","LA7VIN4",99,0)
 S (LA761,LA762,LA70070)=""
"RTN","LA7VIN4",100,0)
 S LA7SPTY=$$P^LA7VHLU(.LA7SEG,16,LA7FS)
"RTN","LA7VIN4",101,0)
 I $O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,5,0)) D
"RTN","LA7VIN4",102,0)
 . N X
"RTN","LA7VIN4",103,0)
 . S X=$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,5,0))
"RTN","LA7VIN4",104,0)
 . ; specimen^collection sample
"RTN","LA7VIN4",105,0)
 . S X(0)=$G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,5,X,0))
"RTN","LA7VIN4",106,0)
 . S LA761=$P(X(0),"^") ; specimen
"RTN","LA7VIN4",107,0)
 . S LA762=$P(X(0),"^",2) ; collection sample
"RTN","LA7VIN4",108,0)
 . ; HL7 code
"RTN","LA7VIN4",109,0)
 . I LA761 S LA70070=$$GET1^DIQ(61,LA761_",","LEDI HL7:HL7 ABBR")
"RTN","LA7VIN4",110,0)
 I $L(LA70070),$L($P(LA7SPTY,LA7CS)) D
"RTN","LA7VIN4",111,0)
 . ; Check if using HL7 table 0070
"RTN","LA7VIN4",112,0)
 . I $P($P(LA7SPTY,LA7CS),$E(LA7ECH,4),3)'="HL70070" Q
"RTN","LA7VIN4",113,0)
 . ; Message matches accession
"RTN","LA7VIN4",114,0)
 . I LA70070=$P($P(LA7SPTY,LA7CS),$E(LA7ECH,4)) Q
"RTN","LA7VIN4",115,0)
 . ; Log error when specimen source does not match accession's specimen
"RTN","LA7VIN4",116,0)
 . N LA7OBR
"RTN","LA7VIN4",117,0)
 . S LA7OBR(15)=$P($P(LA7SPTY,LA7CS),$E(LA7ECH,4)) ; backward compatible with old code
"RTN","LA7VIN4",118,0)
 . S LA7ERR=22,LA7QUIT=2
"RTN","LA7VIN4",119,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN4",120,0)
 ;
"RTN","LA7VIN4",121,0)
 ; Don't continue if flag set to skip this segment
"RTN","LA7VIN4",122,0)
 I LA7QUIT Q
"RTN","LA7VIN4",123,0)
 ;
"RTN","LA7VIN4",124,0)
 ; Create entry in LAH for supported subscripts.
"RTN","LA7VIN4",125,0)
 I "CHMI"[LA7SS D
"RTN","LA7VIN4",126,0)
 . I LA7ENTRY="LOG",LA7INTYP'=20,'$D(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)) D
"RTN","LA7VIN4",127,0)
 . . D CREATE^LA7LOG(13)
"RTN","LA7VIN4",128,0)
 . I LA7ENTRY="LLIST" S:'LA7CUP LA7CUP=LA7IDE ;cup=sequence number
"RTN","LA7VIN4",129,0)
 . D LAGEN
"RTN","LA7VIN4",130,0)
 . I $G(LA7ISQN)="" D  Q
"RTN","LA7VIN4",131,0)
 . . D CREATE^LA7LOG(14)
"RTN","LA7VIN4",132,0)
 ;
"RTN","LA7VIN4",133,0)
 I $L($G(LA7SM)),$L($G(LA7UID)) D SMUPDT
"RTN","LA7VIN4",134,0)
 Q
"RTN","LA7VIN4",135,0)
 ;
"RTN","LA7VIN4",136,0)
 ;
"RTN","LA7VIN4",137,0)
LAGEN ; Sets up variables for call to ^LAGEN,  build entry in LAH
"RTN","LA7VIN4",138,0)
 ; requires LA7INST,LA7TRAY,LA7CUP,LA7AA,LA7AD,LA7AN,LA7LWL
"RTN","LA7VIN4",139,0)
 ; returns LA7ISQN=subscript to store results in ^LAH global
"RTN","LA7VIN4",140,0)
 ;
"RTN","LA7VIN4",141,0)
 ; Build patient demographics array
"RTN","LA7VIN4",142,0)
 N I,J,LA7OBRA,LA7PIDA,X,Y
"RTN","LA7VIN4",143,0)
 S J="DFN^DOB^ICN^LOC^LRDFN^LRTDFN^PNM^SEX^SSN"
"RTN","LA7VIN4",144,0)
 S J(0)="DFN^LA7DOB^LA7ICN^LA7LOC^LRDFN^LRTDFN^LA7PNM^LA7SEX^LA7SSN"
"RTN","LA7VIN4",145,0)
 F I=1:1 S X=$P(J,"^",I) Q:X=""  D
"RTN","LA7VIN4",146,0)
 . S Y=$P(J(0),"^",I)
"RTN","LA7VIN4",147,0)
 . I $G(@Y)]"" S LA7PIDA(X)=@Y
"RTN","LA7VIN4",148,0)
 ;
"RTN","LA7VIN4",149,0)
 ; Build order info array
"RTN","LA7VIN4",150,0)
 S J="FID^ORCDT^ORDP^PON^SID^PEB^PVB"
"RTN","LA7VIN4",151,0)
 S J(0)="LA7FID^LA7CDT^LA7POP^LA7PON^LA7SID^LA7PEB^LA7PVB"
"RTN","LA7VIN4",152,0)
 F I=1:1 S X=$P(J,"^",I) Q:X=""  D
"RTN","LA7VIN4",153,0)
 . S Y=$P(J(0),"^",I)
"RTN","LA7VIN4",154,0)
 . I $G(@Y)]"" S LA7OBRA(X)=@Y
"RTN","LA7VIN4",155,0)
 ;
"RTN","LA7VIN4",156,0)
 K LA7ISQN,LADT,LAGEN
"RTN","LA7VIN4",157,0)
 K TRAY,CUP,LWL,WL,LROVER,METH,LOG,IDENT,ISQN
"RTN","LA7VIN4",158,0)
 ;
"RTN","LA7VIN4",159,0)
 S LA7ISQN=""
"RTN","LA7VIN4",160,0)
 S TRAY=+$G(LA7TRAY) S:'TRAY TRAY=1
"RTN","LA7VIN4",161,0)
 S CUP=+$G(LA7CUP) S:'CUP CUP=1
"RTN","LA7VIN4",162,0)
 ;
"RTN","LA7VIN4",163,0)
 S LWL=LA7LWL
"RTN","LA7VIN4",164,0)
 I '$D(^LRO(68.2,+LWL,0)) D  Q
"RTN","LA7VIN4",165,0)
 . D CREATE^LA7LOG(19)
"RTN","LA7VIN4",166,0)
 ;
"RTN","LA7VIN4",167,0)
 ; Set accession area to area of specimen, allow multiple areas on same instrument.
"RTN","LA7VIN4",168,0)
 S WL=LA7AA
"RTN","LA7VIN4",169,0)
 I '$D(^LRO(68,+WL,0)) D  Q
"RTN","LA7VIN4",170,0)
 . D CREATE^LA7LOG(20)
"RTN","LA7VIN4",171,0)
 S LROVER=$P(LA7624(0),"^",12)
"RTN","LA7VIN4",172,0)
 S METH=$P(LA7624(0),"^",10)
"RTN","LA7VIN4",173,0)
 S LOG=LA7AN
"RTN","LA7VIN4",174,0)
 S IDENT=$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)),"^",6) ;identity field
"RTN","LA7VIN4",175,0)
 S IDE=+LA7IDE
"RTN","LA7VIN4",176,0)
 S LADT=LA7AD
"RTN","LA7VIN4",177,0)
 D @(LA7ENTRY_"^LAGEN") ;this disregards the CROSS LINK field in 62.4
"RTN","LA7VIN4",178,0)
 S LA7ISQN=$G(ISQN)
"RTN","LA7VIN4",179,0)
 ;
"RTN","LA7VIN4",180,0)
 I LA7ISQN<1 Q
"RTN","LA7VIN4",181,0)
 ;
"RTN","LA7VIN4",182,0)
 ; Store patient demographics
"RTN","LA7VIN4",183,0)
 I $D(LA7PIDA) D POI^LAGEN(LA7LWL,LA7ISQN,"PID",.LA7PIDA)
"RTN","LA7VIN4",184,0)
 ;
"RTN","LA7VIN4",185,0)
 ; Store order info
"RTN","LA7VIN4",186,0)
 I $D(LA7OBRA) D POI^LAGEN(LA7LWL,LA7ISQN,"OBR",.LA7OBRA)
"RTN","LA7VIN4",187,0)
 ;
"RTN","LA7VIN4",188,0)
 ; Store interface type with results
"RTN","LA7VIN4",189,0)
 D LATYP^LAGEN(LA7LWL,LA7ISQN,LA7INTYP)
"RTN","LA7VIN4",190,0)
 ; 
"RTN","LA7VIN4",191,0)
 ; Store #62.49 ien with results
"RTN","LA7VIN4",192,0)
 D LAMSGID^LAGEN(LA7LWL,LA7ISQN,LA76249)
"RTN","LA7VIN4",193,0)
 Q
"RTN","LA7VIN4",194,0)
 ;
"RTN","LA7VIN4",195,0)
 ;
"RTN","LA7VIN4",196,0)
SMUPDT ; Update shipping manifest in shipping event file #62.85
"RTN","LA7VIN4",197,0)
 N LA7NCS,LA7TST,LA7USID
"RTN","LA7VIN4",198,0)
 ;
"RTN","LA7VIN4",199,0)
 S LA7USID=$$P^LA7VHLU(.LA7SEG,5,LA7FS) ; Universal Service ID (OBR-4)
"RTN","LA7VIN4",200,0)
 S LA7TST=$P(LA7USID,LA7CS,1) ; Test code
"RTN","LA7VIN4",201,0)
 S LA7NCS=$P(LA7USID,LA7CS,3) ; Name of coding system
"RTN","LA7VIN4",202,0)
 ;
"RTN","LA7VIN4",203,0)
 ; Determine ordered test
"RTN","LA7VIN4",204,0)
 S LA7OTST=$$DOT^LA7SMU1(LA7TST,LA7NCS,LA7UID,$P(LA7SM,"^"))
"RTN","LA7VIN4",205,0)
 ;
"RTN","LA7VIN4",206,0)
 ; Flag the Results Received Event in #62.85
"RTN","LA7VIN4",207,0)
 I LA7MTYP="ORU" D
"RTN","LA7VIN4",208,0)
 . N LA7DATA
"RTN","LA7VIN4",209,0)
 . S LA7DATA="SM70"_"^"_LA7MEDT_"^"_$G(LA7OTST)_"^"_$P(LA7SM,"^",2)
"RTN","LA7VIN4",210,0)
 . D SEUP^LA7SMU(LA7UID,"2",LA7DATA)
"RTN","LA7VIN4",211,0)
 ;
"RTN","LA7VIN4",212,0)
 ; Flag the Test Received Event in #62.85
"RTN","LA7VIN4",213,0)
 I LA7MTYP="ORR" D
"RTN","LA7VIN4",214,0)
 . N LA7DATA
"RTN","LA7VIN4",215,0)
 . S LA7DATA="SM55"_"^"_LA7MEDT_"^"_$G(LA7OTST)_"^"_$P(LA7SM,"^",2)
"RTN","LA7VIN4",216,0)
 . D SEUP^LA7SMU(LA7UID,"2",LA7DATA)
"RTN","LA7VIN4",217,0)
 Q
"RTN","LA7VIN5")
0^32^B22392211
"RTN","LA7VIN5",1,0)
LA7VIN5 ;DALOI/JMC - Process Incoming UI Msgs, continued ; 01/14/99
"RTN","LA7VIN5",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VIN5",3,0)
 ; This routine is a continuation of LA7VIN1 and is only called from there.
"RTN","LA7VIN5",4,0)
 ; It is called to process OBX segments for "CH" subscript tests.
"RTN","LA7VIN5",5,0)
 Q
"RTN","LA7VIN5",6,0)
 ;
"RTN","LA7VIN5",7,0)
OBX ;
"RTN","LA7VIN5",8,0)
 ;
"RTN","LA7VIN5",9,0)
 N LA76241,LA76304,LA7EII,LA7I,LA7LIMIT,LA7OBM,LA7SUBFL,LA7TEST,LA7TREEN,LA7UNITS,LA7VAL,LA7VTYP,LA7X,LA7XFORM,LA7Y
"RTN","LA7VIN5",10,0)
 ;
"RTN","LA7VIN5",11,0)
 K LA7RMK,^TMP("LA7TREE",$J)
"RTN","LA7VIN5",12,0)
 ;
"RTN","LA7VIN5",13,0)
 S LA7SUBFL=63.04
"RTN","LA7VIN5",14,0)
 ;
"RTN","LA7VIN5",15,0)
 ; OBX Set ID
"RTN","LA7VIN5",16,0)
 S LA7SOBX=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN5",17,0)
 ;
"RTN","LA7VIN5",18,0)
 ; Value type - type of data from Table 0125
"RTN","LA7VIN5",19,0)
 S LA7VTYP=$P($$P^LA7VHLU(.LA7SEG,3,LA7FS),LA7CS)
"RTN","LA7VIN5",20,0)
 ;
"RTN","LA7VIN5",21,0)
 ; Determine test result codes
"RTN","LA7VIN5",22,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,4,LA7FS),(LA7RNLT,LA7RLNC)=""
"RTN","LA7VIN5",23,0)
 S LA7TEST=$P(LA7X,LA7CS),LA7TEST(2)=$P(LA7X,LA7CS,4)
"RTN","LA7VIN5",24,0)
 F I=3,6 D
"RTN","LA7VIN5",25,0)
 . S LA7Y=$P(LA7X,LA7CS,I-2)
"RTN","LA7VIN5",26,0)
 . I $P(LA7X,LA7CS,I)="LN" D  Q
"RTN","LA7VIN5",27,0)
 . . I $$GET1^DIQ(95.3,+LA7Y_",",.01)=LA7Y S LA7RLNC=+LA7Y
"RTN","LA7VIN5",28,0)
 . I $P(LA7X,LA7CS,I)="99VA64" D  Q
"RTN","LA7VIN5",29,0)
 . . I $$FIND1^DIC(64,"","OMX",LA7Y) S LA7RNLT=LA7Y
"RTN","LA7VIN5",30,0)
 ;
"RTN","LA7VIN5",31,0)
 ; No test code in message
"RTN","LA7VIN5",32,0)
 I LA7TEST="" D  Q
"RTN","LA7VIN5",33,0)
 . N LA7OBX
"RTN","LA7VIN5",34,0)
 . S LA7OBX=LA7SEG(0)
"RTN","LA7VIN5",35,0)
 . D CREATE^LA7LOG(15)
"RTN","LA7VIN5",36,0)
 ;
"RTN","LA7VIN5",37,0)
 ; Test code not found in auto inst file, also check alternate codes
"RTN","LA7VIN5",38,0)
 I '$D(^LAB(62.4,LA7624,3,"AC",LA7TEST)) D
"RTN","LA7VIN5",39,0)
 . I LA7TEST(2)]"",$D(^LAB(62.4,LA7624,3,"AC",LA7TEST(2))) S LA7TEST=LA7TEST(2) Q
"RTN","LA7VIN5",40,0)
 . D CREATE^LA7LOG(16)
"RTN","LA7VIN5",41,0)
 ;
"RTN","LA7VIN5",42,0)
 ; Units - trim leading/trailing spaces
"RTN","LA7VIN5",43,0)
 S LA7UNITS=$$P^LA7VHLU(.LA7SEG,7,LA7FS)
"RTN","LA7VIN5",44,0)
 I LA7UNITS]"" S LA7UNITS=$$TRIM^XLFSTR(LA7UNITS,"LR"," ")
"RTN","LA7VIN5",45,0)
 ;
"RTN","LA7VIN5",46,0)
 ; Observation result status - Table 0085
"RTN","LA7VIN5",47,0)
 S LA7ORS=$$P^LA7VHLU(.LA7SEG,12,LA7FS)
"RTN","LA7VIN5",48,0)
 ;
"RTN","LA7VIN5",49,0)
 ; Responsible observer
"RTN","LA7VIN5",50,0)
 S LA7RO=$$XCNTFM^LA7VHLU4($$P^LA7VHLU(.LA7SEG,17,LA7FS),LA7ECH)
"RTN","LA7VIN5",51,0)
 ;
"RTN","LA7VIN5",52,0)
 ; Observation method
"RTN","LA7VIN5",53,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,18,LA7FS),LA7OBM=""
"RTN","LA7VIN5",54,0)
 I $P(LA7X,LA7CS,3)="99VA64_2" S LA7OBM=$P($P(LA7X,LA7CS,1),".",2)
"RTN","LA7VIN5",55,0)
 ;
"RTN","LA7VIN5",56,0)
 ; Equipment instance identifier
"RTN","LA7VIN5",57,0)
 S LA7EII=$$P^LA7VHLU(.LA7SEG,19,LA7FS)
"RTN","LA7VIN5",58,0)
 I LA7EII]"" D
"RTN","LA7VIN5",59,0)
 . S LA7EII=$$UNESC^LA7VHLU3(LA7EII,LA7FS_LA7ECH)
"RTN","LA7VIN5",60,0)
 . S LA7EII=$TR(LA7EII,"^",";")
"RTN","LA7VIN5",61,0)
 ;
"RTN","LA7VIN5",62,0)
 ; Process results for all tests which use this test code.
"RTN","LA7VIN5",63,0)
 S LA76241=0
"RTN","LA7VIN5",64,0)
 F  S LA76241=$O(^LAB(62.4,LA7624,3,"AC",LA7TEST,LA76241)) Q:'LA76241  D PROCESS
"RTN","LA7VIN5",65,0)
 Q
"RTN","LA7VIN5",66,0)
 ;
"RTN","LA7VIN5",67,0)
 ;
"RTN","LA7VIN5",68,0)
PROCESS ; Process results for a given test code
"RTN","LA7VIN5",69,0)
 S LA7VAL=$$P^LA7VHLU(.LA7SEG,6,LA7FS)
"RTN","LA7VIN5",70,0)
 F LA7I=0,1,2 S LA76241(LA7I)=$G(^LAB(62.4,LA7624,3,LA76241,LA7I))
"RTN","LA7VIN5",71,0)
 ;
"RTN","LA7VIN5",72,0)
 ; Chem test fields incorrect
"RTN","LA7VIN5",73,0)
 I (LA76241(0)="")!(LA76241(1)="") D  Q
"RTN","LA7VIN5",74,0)
 . D CREATE^LA7LOG(18)
"RTN","LA7VIN5",75,0)
 ;
"RTN","LA7VIN5",76,0)
 ; Setup LA7RMK(0) variable in case comments (NTE) sent with test results.
"RTN","LA7VIN5",77,0)
 S LA7RMK(0,+LA76241(0))=+$P(LA76241(2),"^",7)_"^"_$P(LA76241(2),"^",8)
"RTN","LA7VIN5",78,0)
 ;
"RTN","LA7VIN5",79,0)
 ; NOTE - this array can be set from inside PARAM 1
"RTN","LA7VIN5",80,0)
 K LA7XFORM
"RTN","LA7VIN5",81,0)
 ; execute PARAM 1
"RTN","LA7VIN5",82,0)
 X $P(LA76241(0),"^",2)
"RTN","LA7VIN5",83,0)
 I $P(LA76241(2),"^",3)=0 Q
"RTN","LA7VIN5",84,0)
 I $P(LA76241(2),"^",3)=2,"CFU"'[LA7ORS Q
"RTN","LA7VIN5",85,0)
 ;
"RTN","LA7VIN5",86,0)
 ; No value found
"RTN","LA7VIN5",87,0)
 I LA7VAL="" D  Q
"RTN","LA7VIN5",88,0)
 . D CREATE^LA7LOG(17)
"RTN","LA7VIN5",89,0)
 ;
"RTN","LA7VIN5",90,0)
 S LA76304=+$P(LA76241(1),"(",2) ;lab data field
"RTN","LA7VIN5",91,0)
 ; No dataname for this result
"RTN","LA7VIN5",92,0)
 I LA76304'>1 D  Q
"RTN","LA7VIN5",93,0)
 . D CREATE^LA7LOG(18)
"RTN","LA7VIN5",94,0)
 ;
"RTN","LA7VIN5",95,0)
 ; Transform result based on fields in file 62.4
"RTN","LA7VIN5",96,0)
 D XFORM^LA7VIN5A
"RTN","LA7VIN5",97,0)
 Q:LA7VAL=""
"RTN","LA7VIN5",98,0)
 ;
"RTN","LA7VIN5",99,0)
 ; Check if result passes input transform on data name
"RTN","LA7VIN5",100,0)
 D CHKDIE^LA7VIN5A
"RTN","LA7VIN5",101,0)
 Q:LA7VAL=""
"RTN","LA7VIN5",102,0)
 ;
"RTN","LA7VIN5",103,0)
 ; Set flag to not store comments if it wasn't explicitly ordered.
"RTN","LA7VIN5",104,0)
 I $G(LA7LIMIT)=1 D
"RTN","LA7VIN5",105,0)
 . N LA76804
"RTN","LA7VIN5",106,0)
 . K LA7LIMIT,LA7TREEN,^TMP("LA7TREE",$J)
"RTN","LA7VIN5",107,0)
 . ; Store all tests accessioned in ^TMP
"RTN","LA7VIN5",108,0)
 . S LA76804=0
"RTN","LA7VIN5",109,0)
 . F  S LA76804=$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA76804)) Q:'LA76804  D UNWIND^LA7UTIL(LA76804)
"RTN","LA7VIN5",110,0)
 . I '$D(^TMP("LA7TREE",$J,+LA76241(0))) S LA7LIMIT=1 ;wasn't ordered
"RTN","LA7VIN5",111,0)
 I $G(LA7LIMIT) D  Q
"RTN","LA7VIN5",112,0)
 . S $P(LA7RMK(0,+LA76241(0)),"^",1)=0
"RTN","LA7VIN5",113,0)
 . K LA7LIMIT,^TMP("LA7TREE",$J)
"RTN","LA7VIN5",114,0)
 K ^TMP("LA7TREE",$J)
"RTN","LA7VIN5",115,0)
 ;
"RTN","LA7VIN5",116,0)
 ; Set data node=test value
"RTN","LA7VIN5",117,0)
 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^")=LA7VAL
"RTN","LA7VIN5",118,0)
 ;
"RTN","LA7VIN5",119,0)
 ; Store reference ranges
"RTN","LA7VIN5",120,0)
 D REFRNG^LA7VIN5A($$P^LA7VHLU(.LA7SEG,8,LA7FS))
"RTN","LA7VIN5",121,0)
 ;
"RTN","LA7VIN5",122,0)
 ; Store order/result codes/observation method
"RTN","LA7VIN5",123,0)
 S LA7X=$P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",3)
"RTN","LA7VIN5",124,0)
 I LA7ONLT S $P(LA7X,"!",1)=LA7ONLT
"RTN","LA7VIN5",125,0)
 I LA7RNLT S $P(LA7X,"!",2)=LA7RNLT
"RTN","LA7VIN5",126,0)
 I LA7RLNC S $P(LA7X,"!",3)=LA7RLNC
"RTN","LA7VIN5",127,0)
 I LA7OBM S $P(LA7X,"!",4)=LA7OBM
"RTN","LA7VIN5",128,0)
 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",3)=LA7X
"RTN","LA7VIN5",129,0)
 ; 
"RTN","LA7VIN5",130,0)
 ; Store abnormal flags
"RTN","LA7VIN5",131,0)
 D ABFLAG^LA7VIN5A($$P^LA7VHLU(.LA7SEG,9,LA7FS))
"RTN","LA7VIN5",132,0)
 ;
"RTN","LA7VIN5",133,0)
 ; Store units
"RTN","LA7VIN5",134,0)
 I LA7UNITS'="" D
"RTN","LA7VIN5",135,0)
 . S LA7X=$P($G(^LAH(LA7LWL,1,LA7ISQN,LA76304)),"^",5)
"RTN","LA7VIN5",136,0)
 . S $P(LA7X,"!",7)=LA7UNITS
"RTN","LA7VIN5",137,0)
 . S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",5)=LA7X
"RTN","LA7VIN5",138,0)
 ;
"RTN","LA7VIN5",139,0)
 ; Store responsible oberver
"RTN","LA7VIN5",140,0)
 I $L(LA7RO) D
"RTN","LA7VIN5",141,0)
 . I $P(LA7RO,"^",2) S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",4)=$P(LA7RO,"^",2)
"RTN","LA7VIN5",142,0)
 . I $P(LA7RO,"^",2)=0 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",4)=$P(LA7RO,"^")
"RTN","LA7VIN5",143,0)
 ;
"RTN","LA7VIN5",144,0)
 ; Store specimen type
"RTN","LA7VIN5",145,0)
 ; Check point of care interfaces for no specimen type if specimen
"RTN","LA7VIN5",146,0)
 ; defined for this test in #62.4 and the HL7 specimen source matches
"RTN","LA7VIN5",147,0)
 ; HL7 specimen source from message.
"RTN","LA7VIN5",148,0)
 I LA7INTYP=20,'$G(LA761) D
"RTN","LA7VIN5",149,0)
 . N LA70070
"RTN","LA7VIN5",150,0)
 . S LA7X=$P(LA76241(2),"^",13) Q:'LA7X
"RTN","LA7VIN5",151,0)
 . S LA70070=$$GET1^DIQ(61,LA7X_",","LEDI HL7:HL7 ABBR")
"RTN","LA7VIN5",152,0)
 . I LA70070=LA7SPTY S LA761=LA7X
"RTN","LA7VIN5",153,0)
 I $G(LA761) D
"RTN","LA7VIN5",154,0)
 . S X=$P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",5)
"RTN","LA7VIN5",155,0)
 . S $P(X,"!")=LA761
"RTN","LA7VIN5",156,0)
 . S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",5)=X
"RTN","LA7VIN5",157,0)
 ;
"RTN","LA7VIN5",158,0)
 ; Store where test was performed.
"RTN","LA7VIN5",159,0)
 D PRDID^LA7VIN5A($$P^LA7VHLU(.LA7SEG,16,LA7FS),LA7SFAC,LA7CS)
"RTN","LA7VIN5",160,0)
 ;
"RTN","LA7VIN5",161,0)
 ; Store equipment instance identifier
"RTN","LA7VIN5",162,0)
 I $L(LA7EII) D EII^LA7VIN5A
"RTN","LA7VIN5",163,0)
 Q
"RTN","LA7VIN5A")
0^57^B32530169
"RTN","LA7VIN5A",1,0)
LA7VIN5A ;DALOI/JMC - Process Incoming UI Msgs, continued ; 01/14/99
"RTN","LA7VIN5A",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VIN5A",3,0)
 ; This routine is a continuation of LA7VIN5.
"RTN","LA7VIN5A",4,0)
 ; It is performs processing of fields in OBX segments.
"RTN","LA7VIN5A",5,0)
 Q
"RTN","LA7VIN5A",6,0)
 ;
"RTN","LA7VIN5A",7,0)
XFORM ; Transform the result based on fields 12,13,14,16,17 in the Chem Test
"RTN","LA7VIN5A",8,0)
 ; multiple in the Auto Instrument file (62.4), or set on the fly
"RTN","LA7VIN5A",9,0)
 ; from PARAM 1
"RTN","LA7VIN5A",10,0)
 N LA7I
"RTN","LA7VIN5A",11,0)
 S LA7XFORM=LA76241(2)
"RTN","LA7VIN5A",12,0)
 ;
"RTN","LA7VIN5A",13,0)
 ; get PARAM 1 overides
"RTN","LA7VIN5A",14,0)
 I $D(LA7XFORM(1)),LA7XFORM(1)?1.N S $P(LA7XFORM,"^")=LA7XFORM(1)
"RTN","LA7VIN5A",15,0)
 F LA7I=2,3,5,6 I $D(LA7XFORM(LA7I)) S $P(LA7XFORM,"^",LA7I)=LA7XFORM(LA7I)
"RTN","LA7VIN5A",16,0)
 ; set up defaults if field was not answered
"RTN","LA7VIN5A",17,0)
 ; accept results,yes
"RTN","LA7VIN5A",18,0)
 I $P(LA7XFORM,"^",3)="" S $P(LA7XFORM,"^",3)=1
"RTN","LA7VIN5A",19,0)
 ; strip spaces,yes
"RTN","LA7VIN5A",20,0)
 I $P(LA7XFORM,"^",6)="" S $P(LA7XFORM,"^",6)=1
"RTN","LA7VIN5A",21,0)
 ; now transform
"RTN","LA7VIN5A",22,0)
 ;
"RTN","LA7VIN5A",23,0)
 ; Don't accept results
"RTN","LA7VIN5A",24,0)
 I '$P(LA7XFORM,"^",3) S LA7VAL="" Q
"RTN","LA7VIN5A",25,0)
 ;
"RTN","LA7VIN5A",26,0)
 ; Only accept "FINAL" type results
"RTN","LA7VIN5A",27,0)
 I $P(LA7XFORM,"^",3)=2,"CFU"'[LA7ORS S LA7VAL="" Q
"RTN","LA7VIN5A",28,0)
 ;
"RTN","LA7VIN5A",29,0)
 ; Accept ordered tests only
"RTN","LA7VIN5A",30,0)
 I $P(LA7XFORM,"^",5) S LA7LIMIT=1
"RTN","LA7VIN5A",31,0)
 ;
"RTN","LA7VIN5A",32,0)
 ; Decimal places if number of places defined
"RTN","LA7VIN5A",33,0)
 I $P(LA7XFORM,"^")?1.N D JUSTDEC
"RTN","LA7VIN5A",34,0)
 ;
"RTN","LA7VIN5A",35,0)
 ; Strip spaces
"RTN","LA7VIN5A",36,0)
 I $P(LA7XFORM,"^",6) S LA7VAL=$TR(LA7VAL," ","")
"RTN","LA7VIN5A",37,0)
 ;
"RTN","LA7VIN5A",38,0)
 ; Make result a comment
"RTN","LA7VIN5A",39,0)
 ; Set value to null after making into remark, don't store twice.
"RTN","LA7VIN5A",40,0)
 I $P(LA7XFORM,"^",2) D
"RTN","LA7VIN5A",41,0)
 . N LA7Y
"RTN","LA7VIN5A",42,0)
 . ; Store comment in ^LAH global
"RTN","LA7VIN5A",43,0)
 . S LA7Y=$P(LA7RMK(0,+LA76241(0)),"^",2)
"RTN","LA7VIN5A",44,0)
 . D RMKSET^LASET(LA7LWL,LA7ISQN,LA7VAL,"")
"RTN","LA7VIN5A",45,0)
 . S LA7VAL=""
"RTN","LA7VIN5A",46,0)
 Q
"RTN","LA7VIN5A",47,0)
 ;
"RTN","LA7VIN5A",48,0)
 ;
"RTN","LA7VIN5A",49,0)
CHKDIE ; Check if value to be stored passes input transform of field in DD
"RTN","LA7VIN5A",50,0)
 N LA7ERR,LA7Y
"RTN","LA7VIN5A",51,0)
 ;
"RTN","LA7VIN5A",52,0)
 ; Check if this is a cancelled test from another VA.
"RTN","LA7VIN5A",53,0)
 I LA7VAL="canc" Q
"RTN","LA7VIN5A",54,0)
 ;
"RTN","LA7VIN5A",55,0)
 ; Check if this is a "see comment" result from another VA.
"RTN","LA7VIN5A",56,0)
 I LA7VAL="comment" Q
"RTN","LA7VIN5A",57,0)
 ;
"RTN","LA7VIN5A",58,0)
 ; If value fails data checker then log error and suppress result.
"RTN","LA7VIN5A",59,0)
 D CHK^DIE(LA7SUBFL,LA76304,"H",LA7VAL,.LA7Y,"LA7ERR")
"RTN","LA7VIN5A",60,0)
 I LA7Y="^" D
"RTN","LA7VIN5A",61,0)
 . N LA7X
"RTN","LA7VIN5A",62,0)
 . S LA7X=$G(LA7ERR("DIERR",1,"TEXT",1))
"RTN","LA7VIN5A",63,0)
 . D CREATE^LA7LOG(37)
"RTN","LA7VIN5A",64,0)
 . S LA7VAL=""
"RTN","LA7VIN5A",65,0)
 Q
"RTN","LA7VIN5A",66,0)
 ;
"RTN","LA7VIN5A",67,0)
 ;
"RTN","LA7VIN5A",68,0)
JUSTDEC ; Justify to number of places specified
"RTN","LA7VIN5A",69,0)
 ;
"RTN","LA7VIN5A",70,0)
 N LA7DDTYP,LA7FMT,LA7I,LA7PRFIX,LA7X
"RTN","LA7VIN5A",71,0)
 ;
"RTN","LA7VIN5A",72,0)
 ; Get data name field type from DD
"RTN","LA7VIN5A",73,0)
 ; Only justify if Vista field is numeric or free text.
"RTN","LA7VIN5A",74,0)
 S LA7DDTYP=$$GET1^DID(LA7SUBFL,LA76304,"","TYPE")
"RTN","LA7VIN5A",75,0)
 I "NUMERIC^FREE TEXT"'[LA7DDTYP D  Q
"RTN","LA7VIN5A",76,0)
 . N LA7FLDNM
"RTN","LA7VIN5A",77,0)
 . S LA7FLDNM=$$GET1^DID(63.04,LA76304,"","LABEL")
"RTN","LA7VIN5A",78,0)
 . D CREATE^LA7LOG(38)
"RTN","LA7VIN5A",79,0)
 ;
"RTN","LA7VIN5A",80,0)
 S LA7X=LA7VAL,(LA7FMT,LA7PRFIX)=""
"RTN","LA7VIN5A",81,0)
 ;
"RTN","LA7VIN5A",82,0)
 ; If comma formatted, strip comma and set flag to add back in.
"RTN","LA7VIN5A",83,0)
 S LA7X=$TR(LA7X,",","")
"RTN","LA7VIN5A",84,0)
 I LA7X'=LA7VAL S LA7FMT="P"
"RTN","LA7VIN5A",85,0)
 ;
"RTN","LA7VIN5A",86,0)
 ; If "<>=" formatted, strip and save to add back in.
"RTN","LA7VIN5A",87,0)
 F LA7I=1:1:$L(LA7X) Q:$E(LA7X,LA7I)'?1(1"<",1">",1"=")
"RTN","LA7VIN5A",88,0)
 I LA7I>1 D
"RTN","LA7VIN5A",89,0)
 . S LA7PRFIX=$E(LA7X,1,LA7I-1)
"RTN","LA7VIN5A",90,0)
 . S LA7X=$E(LA7X,LA7I,$L(LA7X))
"RTN","LA7VIN5A",91,0)
 ;
"RTN","LA7VIN5A",92,0)
 ; Format if starts with number or decimal point, skip other results.
"RTN","LA7VIN5A",93,0)
 I LA7X?1(1.N,.N1"."1.N) D
"RTN","LA7VIN5A",94,0)
 . S LA7X=$FN(LA7X,LA7FMT,+LA7XFORM)
"RTN","LA7VIN5A",95,0)
 . S LA7VAL=LA7PRFIX_LA7X
"RTN","LA7VIN5A",96,0)
 Q
"RTN","LA7VIN5A",97,0)
 ;
"RTN","LA7VIN5A",98,0)
 ;
"RTN","LA7VIN5A",99,0)
PRDID(LA7PRDID,LA7SFAC,LA7CS) ; Process/Store Producer's ID
"RTN","LA7VIN5A",100,0)
 ; Store where test was performed.
"RTN","LA7VIN5A",101,0)
 ; Call with LA7PRDID = Producer's ID field
"RTN","LA7VIN5A",102,0)
 ;            LA7SFAC = sending facility
"RTN","LA7VIN5A",103,0)
 ;              LA7CS = component encoding character
"RTN","LA7VIN5A",104,0)
 ;
"RTN","LA7VIN5A",105,0)
 N LA74,LA7X,LA7Y
"RTN","LA7VIN5A",106,0)
 ;
"RTN","LA7VIN5A",107,0)
 S LA7X=$P(LA7PRDID,LA7CS,2),LA74=""
"RTN","LA7VIN5A",108,0)
 ;
"RTN","LA7VIN5A",109,0)
 I $P(LA7PRDID,LA7CS,3)="99VA4" S LA74=$$FIND1^DIC(4,"","OMX",$P(LA7PRDID,LA7CS))
"RTN","LA7VIN5A",110,0)
 I 'LA74 S LA74=$$FINDSITE^LA7VHLU2($P(LA7PRDID,LA7CS),1,1)
"RTN","LA7VIN5A",111,0)
 I 'LA74 S LA74=$$FINDSITE^LA7VHLU2(LA7SFAC,1,1)
"RTN","LA7VIN5A",112,0)
 ;
"RTN","LA7VIN5A",113,0)
 I $L($P(LA7PRDID,LA7CS)) S LA7X=LA7X_$S($L(LA7X):" ",1:"")_"["_$P(LA7PRDID,LA7CS)_"]"
"RTN","LA7VIN5A",114,0)
 I LA7X="",LA74 S LA7X=$$GET1^DIQ(4,LA74_",",.01)
"RTN","LA7VIN5A",115,0)
 ;
"RTN","LA7VIN5A",116,0)
 ; Store producer's id in LAH global with results.
"RTN","LA7VIN5A",117,0)
 I LA74 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",8)=LA74
"RTN","LA7VIN5A",118,0)
 ;
"RTN","LA7VIN5A",119,0)
 ; Don't store producer's id.
"RTN","LA7VIN5A",120,0)
 I '$P(LA76241(2),"^",9) Q
"RTN","LA7VIN5A",121,0)
 ;
"RTN","LA7VIN5A",122,0)
 I LA7X="" Q
"RTN","LA7VIN5A",123,0)
 S LA7X="results from "_LA7X
"RTN","LA7VIN5A",124,0)
 S LA7Y=$P(LA7RMK(0,+LA76241(0)),"^",2)
"RTN","LA7VIN5A",125,0)
 ;
"RTN","LA7VIN5A",126,0)
 ; If no prefix, use test name.
"RTN","LA7VIN5A",127,0)
 I '$L(LA7Y) S LA7Y=$P($G(^LAB(60,+LA76241(0),0)),"^")_": "
"RTN","LA7VIN5A",128,0)
 ;
"RTN","LA7VIN5A",129,0)
 D RMKSET^LASET(LA7LWL,LA7ISQN,LA7X,LA7Y)
"RTN","LA7VIN5A",130,0)
 Q
"RTN","LA7VIN5A",131,0)
 ;
"RTN","LA7VIN5A",132,0)
 ;
"RTN","LA7VIN5A",133,0)
REFRNG(LA7X) ; Process/Store References Range.
"RTN","LA7VIN5A",134,0)
 ; Call with LA7X = reference range to store.
"RTN","LA7VIN5A",135,0)
 ;
"RTN","LA7VIN5A",136,0)
 N LA7Y,X
"RTN","LA7VIN5A",137,0)
 ;
"RTN","LA7VIN5A",138,0)
 ; Remove leading and trailing quotes from reference range.
"RTN","LA7VIN5A",139,0)
 S LA7X=$$TRIM^XLFSTR($G(LA7X),"RL","""")
"RTN","LA7VIN5A",140,0)
 ;
"RTN","LA7VIN5A",141,0)
 ; Store reference range in LAH global with results.
"RTN","LA7VIN5A",142,0)
 I $L(LA7X) D
"RTN","LA7VIN5A",143,0)
 . S X=$P($G(^LAH(LA7LWL,1,LA7ISQN,LA76304)),"^",5)
"RTN","LA7VIN5A",144,0)
 . S $P(X,"!",2)=$P(LA7X,"-"),$P(X,"!",3)=$P(LA7X,"-",2)
"RTN","LA7VIN5A",145,0)
 . S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",5)=X
"RTN","LA7VIN5A",146,0)
 ;
"RTN","LA7VIN5A",147,0)
 ; No ref range or don't store ref range.
"RTN","LA7VIN5A",148,0)
 I LA7X=""!('$P(LA76241(2),"^",10)) Q
"RTN","LA7VIN5A",149,0)
 S LA7X="ref range - "_LA7X
"RTN","LA7VIN5A",150,0)
 S LA7Y=$P(LA7RMK(0,+LA76241(0)),"^",2)
"RTN","LA7VIN5A",151,0)
 ;
"RTN","LA7VIN5A",152,0)
 ; If no prefix, use test name.
"RTN","LA7VIN5A",153,0)
 I '$L(LA7Y) S LA7Y=$P($G(^LAB(60,+LA76241(0),0)),"^")_": "
"RTN","LA7VIN5A",154,0)
 D RMKSET^LASET(LA7LWL,LA7ISQN,LA7X,LA7Y)
"RTN","LA7VIN5A",155,0)
 Q
"RTN","LA7VIN5A",156,0)
 ;
"RTN","LA7VIN5A",157,0)
 ;
"RTN","LA7VIN5A",158,0)
ABFLAG(LA7X) ; Process/Store Abnormal Flags.
"RTN","LA7VIN5A",159,0)
 ; Call with LA7X = abnormal flags to store.
"RTN","LA7VIN5A",160,0)
 ; Converts flag to interpretation based on HL7 Table 0078.
"RTN","LA7VIN5A",161,0)
 ; If no match store code instead of interpretation
"RTN","LA7VIN5A",162,0)
 ;
"RTN","LA7VIN5A",163,0)
 N I,LA7Y,LA7Z
"RTN","LA7VIN5A",164,0)
 ;
"RTN","LA7VIN5A",165,0)
 ; No flag.
"RTN","LA7VIN5A",166,0)
 I $G(LA7X)="" Q
"RTN","LA7VIN5A",167,0)
 ;
"RTN","LA7VIN5A",168,0)
 ; Store abnormal flags in LAH global with results.
"RTN","LA7VIN5A",169,0)
 ; Currently only storing high/low and critical flags
"RTN","LA7VIN5A",170,0)
 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",2)=$S(LA7X="L":"L",LA7X="H":"H",LA7X="LL":"L*",LA7X="HH":"H*",1:"")
"RTN","LA7VIN5A",171,0)
 ;
"RTN","LA7VIN5A",172,0)
 ; Don't store abnormal flags as comments.
"RTN","LA7VIN5A",173,0)
 I '$P(LA76241(2),"^",11) Q
"RTN","LA7VIN5A",174,0)
 ;
"RTN","LA7VIN5A",175,0)
 F I=1:1:18 I LA7X=$P("L^H^LL^HH^<^>^N^A^AA^U^D^B^W^S^R^I^MS^VS","^",I) S LA7X=$P($T(ABFLAGS+I),";;",2) Q
"RTN","LA7VIN5A",176,0)
 S LA7X="normalcy status - "_LA7X
"RTN","LA7VIN5A",177,0)
 S LA7Y=$P(LA7RMK(0,+LA76241(0)),"^",2)
"RTN","LA7VIN5A",178,0)
 ;
"RTN","LA7VIN5A",179,0)
 ; If no prefix, use test name.
"RTN","LA7VIN5A",180,0)
 I '$L(LA7Y) S LA7Y=$P($G(^LAB(60,+LA76241(0),0)),"^")_": "
"RTN","LA7VIN5A",181,0)
 ;
"RTN","LA7VIN5A",182,0)
 D RMKSET^LASET(LA7LWL,LA7ISQN,LA7X,LA7Y)
"RTN","LA7VIN5A",183,0)
 Q
"RTN","LA7VIN5A",184,0)
 ;
"RTN","LA7VIN5A",185,0)
 ;
"RTN","LA7VIN5A",186,0)
EII ; Store equipment instance identifier in LAH global with results.
"RTN","LA7VIN5A",187,0)
 ;
"RTN","LA7VIN5A",188,0)
 N I,LA7X,X
"RTN","LA7VIN5A",189,0)
 ;
"RTN","LA7VIN5A",190,0)
 S LA7X=""
"RTN","LA7VIN5A",191,0)
 F I=1:1:4 D
"RTN","LA7VIN5A",192,0)
 . S X=$P(LA7EII,LA7CS,I)
"RTN","LA7VIN5A",193,0)
 . I X="" Q
"RTN","LA7VIN5A",194,0)
 . S $P(LA7X,"!",I)=$TR(X,"!","~")
"RTN","LA7VIN5A",195,0)
 I $L(LA7X) S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",11)=LA7X
"RTN","LA7VIN5A",196,0)
 Q
"RTN","LA7VIN5A",197,0)
 ;
"RTN","LA7VIN5A",198,0)
 ;
"RTN","LA7VIN5A",199,0)
ABFLAGS ;; HL7 Table 0078 Abnormal flags
"RTN","LA7VIN5A",200,0)
 ;;Below low normal;;
"RTN","LA7VIN5A",201,0)
 ;;Above high normal;;
"RTN","LA7VIN5A",202,0)
 ;;Below lower panic limits;;
"RTN","LA7VIN5A",203,0)
 ;;Above upper panic limits;;
"RTN","LA7VIN5A",204,0)
 ;;Below absolute low-off instrument scale;;
"RTN","LA7VIN5A",205,0)
 ;;Above absolute high-off instrument scale;;
"RTN","LA7VIN5A",206,0)
 ;;Normal;;
"RTN","LA7VIN5A",207,0)
 ;;Abnormal;;
"RTN","LA7VIN5A",208,0)
 ;;Very abnormal;;
"RTN","LA7VIN5A",209,0)
 ;;Significant change up;;
"RTN","LA7VIN5A",210,0)
 ;;Significant change down;;
"RTN","LA7VIN5A",211,0)
 ;;Better;;
"RTN","LA7VIN5A",212,0)
 ;;Worse;;
"RTN","LA7VIN5A",213,0)
 ;;Susceptible;;
"RTN","LA7VIN5A",214,0)
 ;;Resistant;;
"RTN","LA7VIN5A",215,0)
 ;;Intermediate;;
"RTN","LA7VIN5A",216,0)
 ;;Moderately susceptible;;
"RTN","LA7VIN5A",217,0)
 ;;Very susceptible;;
"RTN","LA7VMSG")
0^6^B14542931
"RTN","LA7VMSG",1,0)
LA7VMSG ;DALOI/JMC - LAB ORU (Observation Result) message builder ; 12-12-96
"RTN","LA7VMSG",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,50,56,46**;Sep 27, 1994
"RTN","LA7VMSG",3,0)
 ;
"RTN","LA7VMSG",4,0)
ORU ; Bleed the ORU (Observation Result) message queue
"RTN","LA7VMSG",5,0)
 ; Tasked by LRCAPV2
"RTN","LA7VMSG",6,0)
 ;
"RTN","LA7VMSG",7,0)
 N LA7MTYP
"RTN","LA7VMSG",8,0)
 S LA7MTYP="ORU"
"RTN","LA7VMSG",9,0)
 D START^LA7VMSG1
"RTN","LA7VMSG",10,0)
 ;
"RTN","LA7VMSG",11,0)
 Q
"RTN","LA7VMSG",12,0)
 ;
"RTN","LA7VMSG",13,0)
ORR ; Bleed the ORR (Order Response) message queue
"RTN","LA7VMSG",14,0)
 ; Called by LRWLST12
"RTN","LA7VMSG",15,0)
 ;
"RTN","LA7VMSG",16,0)
 N LA7MTYP
"RTN","LA7VMSG",17,0)
 S LA7MTYP="ORR"
"RTN","LA7VMSG",18,0)
 ;D START^LA7VMSG1
"RTN","LA7VMSG",19,0)
 ;
"RTN","LA7VMSG",20,0)
 Q
"RTN","LA7VMSG",21,0)
 ;
"RTN","LA7VMSG",22,0)
 ;
"RTN","LA7VMSG",23,0)
SET(LRUID,SITE,RUID,SITEN,ORD,LRNLT,LRIDT,LRSS,LRDFN,ORDT,LA7VCH,LA7MTYP) ; adds entries to LA7V QUEUE file
"RTN","LA7VMSG",24,0)
 ; Called by LA7SRR, LRVER3, LRWLST12
"RTN","LA7VMSG",25,0)
 ; variable list
"RTN","LA7VMSG",26,0)
 ; LRUID - Host Unique ID from the local ACCESSION file (#68)
"RTN","LA7VMSG",27,0)
 ; SITE  - remote sites IEN in INSTITUTION file (#4)
"RTN","LA7VMSG",28,0)
 ; RUID  - Remote sites Unique ID from ACCESSION file (#68)
"RTN","LA7VMSG",29,0)
 ; SITEN - Primary site number of remote site ($$SITE^VASITE)
"RTN","LA7VMSG",30,0)
 ; ORD   - Free text ordered test name from WKLD CODE file (#64)
"RTN","LA7VMSG",31,0)
 ; LRNLT - National Laboratory test code from WKLD CODE file (#64)
"RTN","LA7VMSG",32,0)
 ; LRIDT - Inverse date/time (accession date/time)
"RTN","LA7VMSG",33,0)
 ; LRSS  - test subscript defined in LABORATORY TEST file (#60)
"RTN","LA7VMSG",34,0)
 ; LRDFN - IEN in LAB DATA file (#63)
"RTN","LA7VMSG",35,0)
 ; ORDT  - Order date
"RTN","LA7VMSG",36,0)
 ; LA7VCH (Optional) - array of Chemistry results
"RTN","LA7VMSG",37,0)
 ;                     ex. glucose LA7VCH(2)=LR NODE
"RTN","LA7VMSG",38,0)
 ; LA7MTYP (Optional) - Message Type (ORU or ORR) defaults to ORU
"RTN","LA7VMSG",39,0)
 ;
"RTN","LA7VMSG",40,0)
 N FDA,LA76248,LA76249,LA7DT,LA7FACID,LA7ERR,LA7RSITE,LA7Y,PORD,PORT,RSITE
"RTN","LA7VMSG",41,0)
 ;
"RTN","LA7VMSG",42,0)
 S LA7ERR=0
"RTN","LA7VMSG",43,0)
 I $G(LA7MTYP)="" S LA7MTYP="ORU"
"RTN","LA7VMSG",44,0)
 ;
"RTN","LA7VMSG",45,0)
 ; Currently not building ORR when accessioning - JMC/7/11/00
"RTN","LA7VMSG",46,0)
 I LA7MTYP="ORR" Q
"RTN","LA7VMSG",47,0)
 ;
"RTN","LA7VMSG",48,0)
 ; **** Need to figure a better way to determine sites
"RTN","LA7VMSG",49,0)
 ; **** especially when it's a non-VA facility
"RTN","LA7VMSG",50,0)
 ;
"RTN","LA7VMSG",51,0)
 ; Retrieve facility id (VA=station number, non-VA=local site assigned id)
"RTN","LA7VMSG",52,0)
 S LA7FACID=$$RETFACID^LA7VHLU2(SITEN,1,1)
"RTN","LA7VMSG",53,0)
 S LA76248=0,LA7RSITE=""
"RTN","LA7VMSG",54,0)
 ;
"RTN","LA7VMSG",55,0)
 I $D(^LAHM(62.48,"B","LA7V REMOTE "_LA7FACID)) D
"RTN","LA7VMSG",56,0)
 . S LA7RSITE="LA7V REMOTE "_LA7FACID
"RTN","LA7VMSG",57,0)
 I $D(^LAHM(62.48,"B","LA7V COLLECTION "_LA7FACID)) D
"RTN","LA7VMSG",58,0)
 . S LA7RSITE="LA7V COLLECTION "_LA7FACID
"RTN","LA7VMSG",59,0)
 ;
"RTN","LA7VMSG",60,0)
 I $L(LA7RSITE) S LA76248=$O(^LAHM(62.48,"B",LA7RSITE,0))
"RTN","LA7VMSG",61,0)
 ;
"RTN","LA7VMSG",62,0)
 ; No entry in 62.48 - *** Need to add error logging ****
"RTN","LA7VMSG",63,0)
 I 'LA76248 Q
"RTN","LA7VMSG",64,0)
 ;
"RTN","LA7VMSG",65,0)
 ; Create new outgoing entry in 62.49
"RTN","LA7VMSG",66,0)
 S LA76249=$$INIT6249^LA7VHLU
"RTN","LA7VMSG",67,0)
 I LA76249<1 D  Q
"RTN","LA7VMSG",68,0)
 . ; Log entry creation error
"RTN","LA7VMSG",69,0)
 ;
"RTN","LA7VMSG",70,0)
 ; Check/validate parameters before storing
"RTN","LA7VMSG",71,0)
 ; If error store but flag entry with error status.
"RTN","LA7VMSG",72,0)
 D CHKACC
"RTN","LA7VMSG",73,0)
 ;
"RTN","LA7VMSG",74,0)
 ; File data
"RTN","LA7VMSG",75,0)
 S FDA(1,62.49,LA76249_",",1)="O"
"RTN","LA7VMSG",76,0)
 S FDA(1,62.49,LA76249_",",.5)=LA76248
"RTN","LA7VMSG",77,0)
 S FDA(1,62.49,LA76249_",",2)=$S(LA7ERR:"E",1:"P")
"RTN","LA7VMSG",78,0)
 S FDA(1,62.49,LA76249_",",5)=LA7RSITE_"-O-"_RUID
"RTN","LA7VMSG",79,0)
 S FDA(1,62.49,LA76249_",",108)=LA7MTYP
"RTN","LA7VMSG",80,0)
 S FDA(1,62.49,LA76249_",",151)=LRUID
"RTN","LA7VMSG",81,0)
 S FDA(1,62.49,LA76249_",",152)=SITEN
"RTN","LA7VMSG",82,0)
 S FDA(1,62.49,LA76249_",",153)=RUID
"RTN","LA7VMSG",83,0)
 S FDA(1,62.49,LA76249_",",154)=ORD
"RTN","LA7VMSG",84,0)
 S FDA(1,62.49,LA76249_",",155)=LRNLT
"RTN","LA7VMSG",85,0)
 S FDA(1,62.49,LA76249_",",156)=LRIDT
"RTN","LA7VMSG",86,0)
 S FDA(1,62.49,LA76249_",",157)=LRSS
"RTN","LA7VMSG",87,0)
 S FDA(1,62.49,LA76249_",",158)=LRDFN
"RTN","LA7VMSG",88,0)
 S FDA(1,62.49,LA76249_",",159)=ORDT
"RTN","LA7VMSG",89,0)
 ;
"RTN","LA7VMSG",90,0)
 D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7VMSG",91,0)
 D CLEAN^DILF
"RTN","LA7VMSG",92,0)
 ;
"RTN","LA7VMSG",93,0)
 ; Add test to order
"RTN","LA7VMSG",94,0)
 S LA7Y=0
"RTN","LA7VMSG",95,0)
 F  S LA7Y=$O(LA7VCH(LA7Y)) Q:'LA7Y  D
"RTN","LA7VMSG",96,0)
 . N FDAIEN
"RTN","LA7VMSG",97,0)
 . S FDA(2,62.49162,"+2,"_LA76249_",",.01)=LA7Y
"RTN","LA7VMSG",98,0)
 . S FDAIEN(1)=LA76249
"RTN","LA7VMSG",99,0)
 . D UPDATE^DIE("","FDA(2)","FDAIEN","LA7ERR(2)")
"RTN","LA7VMSG",100,0)
 . D CLEAN^DILF
"RTN","LA7VMSG",101,0)
 ;
"RTN","LA7VMSG",102,0)
 ; Release lock on entry.
"RTN","LA7VMSG",103,0)
 L -^LAHM(62.49,LA76249)
"RTN","LA7VMSG",104,0)
 Q
"RTN","LA7VMSG",105,0)
 ;
"RTN","LA7VMSG",106,0)
 ;
"RTN","LA7VMSG",107,0)
CHKACC ; Check/validate parameters passed in before storing in file #62.49
"RTN","LA7VMSG",108,0)
 ;
"RTN","LA7VMSG",109,0)
 N I,LA763,LA768,LA7AA,LA7AD,LA7AN
"RTN","LA7VMSG",110,0)
 ;
"RTN","LA7VMSG",111,0)
 F I=0,"ORU" S LA763(I)=$G(^LR(LRDFN,LRSS,LRIDT,I))
"RTN","LA7VMSG",112,0)
 ;
"RTN","LA7VMSG",113,0)
 I '$D(^LRO(68,"C",LRUID)) S LRUID=RUID
"RTN","LA7VMSG",114,0)
 S I=$Q(^LRO(68,"C",LRUID)),(LA7AA,LA7AD,LA7AN)=0
"RTN","LA7VMSG",115,0)
 I $QS(I,3)=LRUID S LA7AA=$QS(I,4),LA7AD=$QS(I,5),LA7AN=$QS(I,6)
"RTN","LA7VMSG",116,0)
 F I=0,.2,.3,3 S LA768(I)=$G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,I))
"RTN","LA7VMSG",117,0)
 ;
"RTN","LA7VMSG",118,0)
 ; Mismatch on subscript with file #68
"RTN","LA7VMSG",119,0)
 I LRSS'=$P(^LRO(68,LA7AA,0),"^",2) S LA7ERR=40 D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VMSG",120,0)
 ;
"RTN","LA7VMSG",121,0)
 ; Mismatch on LRDFN with file #68
"RTN","LA7VMSG",122,0)
 I LRDFN'=$P(LA768(0),"^") S LA7ERR=41 D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VMSG",123,0)
 ;
"RTN","LA7VMSG",124,0)
 ; Mismatch on specimen inverse d/t with file #68
"RTN","LA7VMSG",125,0)
 I LRIDT'=$P(LA768(3),"^",5) S LA7ERR=42 D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VMSG",126,0)
 ;
"RTN","LA7VMSG",127,0)
 ; Mismatch on remote UID with file #68
"RTN","LA7VMSG",128,0)
 I RUID'=$P(LA768(.3),"^",5) S LA7ERR=43 D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VMSG",129,0)
 ;
"RTN","LA7VMSG",130,0)
 ; Mismatch on remote UID with file #63
"RTN","LA7VMSG",131,0)
 I RUID'=$P(LA763("ORU"),"^",5) S LA7ERR=44 D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VMSG",132,0)
 ;
"RTN","LA7VMSG",133,0)
 ; Mismatch on UID between file #63 and file #68
"RTN","LA7VMSG",134,0)
 I $P(LA768(.3),"^")'=$P(LA763("ORU"),"^") S LA7ERR=45 D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VMSG",135,0)
 ;
"RTN","LA7VMSG",136,0)
 Q
"RTN","LA7VMSG",137,0)
 ;
"RTN","LA7VMSG",138,0)
 ;
"RTN","LA7VMSG",139,0)
ACK ; ACKnowledgment message processor
"RTN","LA7VMSG",140,0)
 ;
"RTN","LA7VMSG",141,0)
 G ACK^LA7VHL
"RTN","LA7VMSG",142,0)
 Q
"RTN","LA7VMSG1")
0^42^B47582421
"RTN","LA7VMSG1",1,0)
LA7VMSG1 ;DALOI/JMC - LAB ORU (Observation Result) message builder cont'd; 4-10-00
"RTN","LA7VMSG1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**56,46**;Sep 27, 1994
"RTN","LA7VMSG1",3,0)
 ;
"RTN","LA7VMSG1",4,0)
START ; Process entries in queue
"RTN","LA7VMSG1",5,0)
 ; Called from LA7VMSG
"RTN","LA7VMSG1",6,0)
 ;
"RTN","LA7VMSG1",7,0)
 N LA,LAER,LA7VER
"RTN","LA7VMSG1",8,0)
 N EID,HLEID,HLMTIEN,HLRESLT,HLARYTYP,HLECH,HLFS,HLCOMP,HLFORMAT
"RTN","LA7VMSG1",9,0)
 N GBL,LA7V,LA7VS,LA7V0N,LA7VIEN,RSITE,LRNT
"RTN","LA7VMSG1",10,0)
 N LA76248,LA76249,LA76249P,LA7DT,LA7ECH,LA7END,LA7FS,LA7ROOT,LA7X,LRDFN,LRUID
"RTN","LA7VMSG1",11,0)
 ;
"RTN","LA7VMSG1",12,0)
 ; variable list
"RTN","LA7VMSG1",13,0)
 ; LA("LRUID") - Host Unique ID from the local ACCESSION file (#68)
"RTN","LA7VMSG1",14,0)
 ; LA("SITE")  - Primary site number of remote site ($$SITE^VASITE)
"RTN","LA7VMSG1",15,0)
 ; LA("RUID")  - Remote sites Unique ID from ACCESSION file (#68)
"RTN","LA7VMSG1",16,0)
 ; LA("ORD")   - Free text ordered test name from WKLD CODE file (#64)
"RTN","LA7VMSG1",17,0)
 ; LA("LRNLT") - National Laboratory test code from WKLD CODE file (#64)
"RTN","LA7VMSG1",18,0)
 ; LA("LRIDT") - Inverse date/time (accession date/time)
"RTN","LA7VMSG1",19,0)
 ; LA("LRSS")  - test subscript defined in LABORATORY TEST file (#60)
"RTN","LA7VMSG1",20,0)
 ; LA("LRDFN") - IEN in LAB DATA file (#63)
"RTN","LA7VMSG1",21,0)
 ; LA("ORDT")  - Order date
"RTN","LA7VMSG1",22,0)
 ; LA(62.49)   - entry in #62.49 which contains pointer to results to build
"RTN","LA7VMSG1",23,0)
 ;
"RTN","LA7VMSG1",24,0)
 L +^LAHM(62.49,"HL7 PROCESS",LA7MTYP):0 Q:'$T
"RTN","LA7VMSG1",25,0)
 ;
"RTN","LA7VMSG1",26,0)
 S GBL="^TMP(""HLS"","_$J_")"
"RTN","LA7VMSG1",27,0)
 ;
"RTN","LA7VMSG1",28,0)
 D SORTPAT
"RTN","LA7VMSG1",29,0)
 D PROCESS
"RTN","LA7VMSG1",30,0)
 D KVAR^LRX
"RTN","LA7VMSG1",31,0)
 ;
"RTN","LA7VMSG1",32,0)
 ; Release lock
"RTN","LA7VMSG1",33,0)
 L -^LAHM(62.49,"HL7 PROCESS",LA7MTYP)
"RTN","LA7VMSG1",34,0)
 ;
"RTN","LA7VMSG1",35,0)
 K ^TMP("LA76248",$J),^TMP("LA7VS",$J),^TMP("HLS",$J)
"RTN","LA7VMSG1",36,0)
 ;
"RTN","LA7VMSG1",37,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7VMSG1",38,0)
 ;
"RTN","LA7VMSG1",39,0)
 Q
"RTN","LA7VMSG1",40,0)
 ;
"RTN","LA7VMSG1",41,0)
 ;
"RTN","LA7VMSG1",42,0)
SORTPAT ; Sort all results for tranmsission
"RTN","LA7VMSG1",43,0)
 ;
"RTN","LA7VMSG1",44,0)
 N LA76248,LA76249,LA7END,LA7ROOT,LRDFN,LRUID
"RTN","LA7VMSG1",45,0)
 ;
"RTN","LA7VMSG1",46,0)
 K ^TMP("LA76248",$J)
"RTN","LA7VMSG1",47,0)
 ;
"RTN","LA7VMSG1",48,0)
 ; Flag to indicate end of global.
"RTN","LA7VMSG1",49,0)
 S LA7END=0
"RTN","LA7VMSG1",50,0)
 ;
"RTN","LA7VMSG1",51,0)
 ; Sort by configuration (LA76248), patient (LRDFN), UID (LRUID), file #62.49 ien (LA76249)
"RTN","LA7VMSG1",52,0)
 S LA7ROOT="^LAHM(62.49,LA7MTYP,""P"")"
"RTN","LA7VMSG1",53,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7END  D
"RTN","LA7VMSG1",54,0)
 . I $QS(LA7ROOT,2)'=LA7MTYP!($QS(LA7ROOT,5)<1) S LA7END=1 Q
"RTN","LA7VMSG1",55,0)
 . S LA76248=$QS(LA7ROOT,4),LA76249=$QS(LA7ROOT,5)
"RTN","LA7VMSG1",56,0)
 . L +^LAHM(62.49,LA76249):5 Q:'$T
"RTN","LA7VMSG1",57,0)
 . S LRDFN=$P($G(^LAHM(62.49,LA76249,63)),"^",8)
"RTN","LA7VMSG1",58,0)
 . S LRUID=$P($G(^LAHM(62.49,LA76249,63)),"^",1)
"RTN","LA7VMSG1",59,0)
 . I LRDFN,LRUID S ^TMP("LA76248",$J,LA76248,LRDFN,LRUID,LA76249)=""
"RTN","LA7VMSG1",60,0)
 . L -^LAHM(62.49,LA76249)
"RTN","LA7VMSG1",61,0)
 ;
"RTN","LA7VMSG1",62,0)
 Q
"RTN","LA7VMSG1",63,0)
 ;
"RTN","LA7VMSG1",64,0)
 ;
"RTN","LA7VMSG1",65,0)
PROCESS ; Process and build messages to be sent
"RTN","LA7VMSG1",66,0)
 ;
"RTN","LA7VMSG1",67,0)
 N LA7101,LA76248,LA76249,LA76249P,LA7NTESN,LA7OBRSN,LA7OBXSN,LA7PIDSN,LA7SMSG,LA7VS,LRDFN
"RTN","LA7VMSG1",68,0)
 ;
"RTN","LA7VMSG1",69,0)
 ; Cleanup
"RTN","LA7VMSG1",70,0)
 K ^TMP("LA7VS",$J),^TMP("HLS",$J)
"RTN","LA7VMSG1",71,0)
 ;
"RTN","LA7VMSG1",72,0)
 ; Initialize variables
"RTN","LA7VMSG1",73,0)
 S (LA76248,LA76249,LA76249P,LRDFN)=0
"RTN","LA7VMSG1",74,0)
 S LRUID=""
"RTN","LA7VMSG1",75,0)
 ;
"RTN","LA7VMSG1",76,0)
 ; Flag to indicate end of global.
"RTN","LA7VMSG1",77,0)
 S LA7END=0
"RTN","LA7VMSG1",78,0)
 ;
"RTN","LA7VMSG1",79,0)
 ; Process sorted list of results to transmit.
"RTN","LA7VMSG1",80,0)
 S LA7ROOT="^TMP(""LA76248"",$J)"
"RTN","LA7VMSG1",81,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7END  D
"RTN","LA7VMSG1",82,0)
 . I $QS(LA7ROOT,1)'="LA76248"!($QS(LA7ROOT,2)'=$J) S LA7END=1 Q
"RTN","LA7VMSG1",83,0)
 . I LA76248'=$QS(LA7ROOT,3) D CONFIG
"RTN","LA7VMSG1",84,0)
 . S (LA76249,LA(62.49))=$QS(LA7ROOT,6)
"RTN","LA7VMSG1",85,0)
 . S LA7X=$G(^LAHM(62.49,LA76249,63))
"RTN","LA7VMSG1",86,0)
 . S LA("HUID")=$P(LA7X,U),LA("SITE")=$P(LA7X,U,2),LA("RUID")=$P(LA7X,U,3),LA("ORD")=$P(LA7X,U,4),LA("NLT")=$P(LA7X,U,5),LA("LRIDT")=$P(LA7X,U,6),LA("SUB")=$P(LA7X,U,7),LA("LRDFN")=$P(LA7X,U,8),LA("ORDT")=$P(LA7X,U,9)
"RTN","LA7VMSG1",87,0)
 . I LRUID'=$QS(LA7ROOT,5),LA7SMSG=2 D PAT
"RTN","LA7VMSG1",88,0)
 . I LRDFN'=$QS(LA7ROOT,4) D PAT
"RTN","LA7VMSG1",89,0)
 . S LRUID=$QS(LA7ROOT,5)
"RTN","LA7VMSG1",90,0)
 . S ^TMP("LA7VS",$J,LA76249)=LA76249P
"RTN","LA7VMSG1",91,0)
 . N LA76249
"RTN","LA7VMSG1",92,0)
 . S LA76249=LA76249P
"RTN","LA7VMSG1",93,0)
 . I LA7MTYP="ORU" D EN^LA7VORU(.LA)
"RTN","LA7VMSG1",94,0)
 . I LA7MTYP="ORR" D EN^LA7VORR1(.LA)
"RTN","LA7VMSG1",95,0)
 ;
"RTN","LA7VMSG1",96,0)
 I LA76249P D SENDMSG
"RTN","LA7VMSG1",97,0)
 ;
"RTN","LA7VMSG1",98,0)
 Q
"RTN","LA7VMSG1",99,0)
 ;
"RTN","LA7VMSG1",100,0)
 ;
"RTN","LA7VMSG1",101,0)
STARTMSG ; Initialize a HL7 message and variables
"RTN","LA7VMSG1",102,0)
 ;
"RTN","LA7VMSG1",103,0)
 N LA7EVNT,SITE
"RTN","LA7VMSG1",104,0)
 ;
"RTN","LA7VMSG1",105,0)
 K ^TMP("LA7VS",$J),^TMP("HLS",$J)
"RTN","LA7VMSG1",106,0)
 ;
"RTN","LA7VMSG1",107,0)
 S LA76249P=LA76249
"RTN","LA7VMSG1",108,0)
 S SITE=$$RETFACID^LA7VHLU2(LA("SITE"),2,1)
"RTN","LA7VMSG1",109,0)
 ;
"RTN","LA7VMSG1",110,0)
 I LA7MTYP="ORU" S LA7EVNT="LA7V Results Reporting to "_SITE
"RTN","LA7VMSG1",111,0)
 I LA7MTYP="ORR" S LA7EVNT="LA7V Order Response to "_SITE
"RTN","LA7VMSG1",112,0)
 D STARTMSG^LA7VHLU(LA7EVNT,LA76249P)
"RTN","LA7VMSG1",113,0)
 ;
"RTN","LA7VMSG1",114,0)
 Q
"RTN","LA7VMSG1",115,0)
 ;
"RTN","LA7VMSG1",116,0)
 ;
"RTN","LA7VMSG1",117,0)
SENDMSG ; File HL7 message with HL and LAB packages
"RTN","LA7VMSG1",118,0)
 ;
"RTN","LA7VMSG1",119,0)
 ; No data to send
"RTN","LA7VMSG1",120,0)
 I '$D(^TMP("HLS",$J)) Q
"RTN","LA7VMSG1",121,0)
 ;
"RTN","LA7VMSG1",122,0)
 D GEN^LA7VHLU
"RTN","LA7VMSG1",123,0)
 I $P(HLMID,U)=0 D
"RTN","LA7VMSG1",124,0)
 . S LA(LA("ECNT"))=28_"^"_LA76249P_"^("_$P(HLMID,U,2)_") "_$P(HLMID,U,3)
"RTN","LA7VMSG1",125,0)
 . D CREATE^LA7LOG(28)
"RTN","LA7VMSG1",126,0)
 ;
"RTN","LA7VMSG1",127,0)
 D UPDT6249
"RTN","LA7VMSG1",128,0)
 D UPDLPD
"RTN","LA7VMSG1",129,0)
 ;
"RTN","LA7VMSG1",130,0)
 S (LA76249P,LA7PIDSN,LA7OBRSN,LA7OBXSN,LA7NTESN)=0
"RTN","LA7VMSG1",131,0)
 ;
"RTN","LA7VMSG1",132,0)
 Q
"RTN","LA7VMSG1",133,0)
 ;
"RTN","LA7VMSG1",134,0)
 ;
"RTN","LA7VMSG1",135,0)
CONFIG ; Setup for this configuration
"RTN","LA7VMSG1",136,0)
 ;
"RTN","LA7VMSG1",137,0)
 ; Send a building message
"RTN","LA7VMSG1",138,0)
 I LA76249P D SENDMSG
"RTN","LA7VMSG1",139,0)
 ;
"RTN","LA7VMSG1",140,0)
 ; Retrieve configuration information from #62.48
"RTN","LA7VMSG1",141,0)
 S LA76248=$QS(LA7ROOT,3)
"RTN","LA7VMSG1",142,0)
 S LA76248(0)=$G(^LAHM(62.48,LA76248,0))
"RTN","LA7VMSG1",143,0)
 ;
"RTN","LA7VMSG1",144,0)
 ; Flag to control message building; 1-one patient/msg, 2-one order/msg
"RTN","LA7VMSG1",145,0)
 S LA7SMSG=+$P(LA76248(0),"^",8)
"RTN","LA7VMSG1",146,0)
 ;
"RTN","LA7VMSG1",147,0)
 ; Initialize variables
"RTN","LA7VMSG1",148,0)
 S (LA76249,LA76249P,LRDFN)=0
"RTN","LA7VMSG1",149,0)
 S LRUID=""
"RTN","LA7VMSG1",150,0)
 ;
"RTN","LA7VMSG1",151,0)
 Q
"RTN","LA7VMSG1",152,0)
 ;
"RTN","LA7VMSG1",153,0)
 ;
"RTN","LA7VMSG1",154,0)
PAT ; Build patient information
"RTN","LA7VMSG1",155,0)
 ;
"RTN","LA7VMSG1",156,0)
 N LA7ALTID,LA7EXTID,LA7PID,LA7PV1
"RTN","LA7VMSG1",157,0)
 ;
"RTN","LA7VMSG1",158,0)
 ; If one patient/msg or one order/msg and message building then send it.
"RTN","LA7VMSG1",159,0)
 I LA7SMSG>0,LA76249P D SENDMSG
"RTN","LA7VMSG1",160,0)
 ;
"RTN","LA7VMSG1",161,0)
 ; If no message building then start one.
"RTN","LA7VMSG1",162,0)
 I 'LA76249P D STARTMSG
"RTN","LA7VMSG1",163,0)
 ;
"RTN","LA7VMSG1",164,0)
 ; Setup PID and PV1 segments.
"RTN","LA7VMSG1",165,0)
 S LRDFN=$QS(LA7ROOT,4)
"RTN","LA7VMSG1",166,0)
 S LRDPF=$P(^LR(LRDFN,0),"^",2),DFN=$P(^(0),"^",3)
"RTN","LA7VMSG1",167,0)
 D DEM^LRX
"RTN","LA7VMSG1",168,0)
 ;
"RTN","LA7VMSG1",169,0)
 ; Send placer's patient id (PID-3), return in PID-2, return PID-4 with alternate id
"RTN","LA7VMSG1",170,0)
 S (LA7ALTID,LA7EXTID)=""
"RTN","LA7VMSG1",171,0)
 D PTEXTID^LA7VHLU(LA("SITE"),LA("RUID"),.LA7EXTID)
"RTN","LA7VMSG1",172,0)
 I $L($G(LA7EXTID("PID-2"))) S LA7EXTID=$$CNVFLD^LA7VHLU3(LA7EXTID("PID-2"),LA7EXTID("ECH"),LA7ECH)
"RTN","LA7VMSG1",173,0)
 I $L($G(LA7EXTID("PID-4"))) S LA7ALTID=$$CNVFLD^LA7VHLU3(LA7EXTID("PID-4"),LA7EXTID("ECH"),LA7ECH)
"RTN","LA7VMSG1",174,0)
 ;
"RTN","LA7VMSG1",175,0)
 ; Build PID segment
"RTN","LA7VMSG1",176,0)
 D PID^LA7VPID(LRDFN,LA7EXTID,.LA7PID,.LA7PIDSN,.HL,LA7ALTID)
"RTN","LA7VMSG1",177,0)
 D FILESEG^LA7VHLU(GBL,.LA7PID)
"RTN","LA7VMSG1",178,0)
 D FILE6249^LA7VHLU(LA76249P,.LA7PID)
"RTN","LA7VMSG1",179,0)
 ;
"RTN","LA7VMSG1",180,0)
 ; Build PV1 segment
"RTN","LA7VMSG1",181,0)
 D PV1^LA7VPID(LRDFN,.LA7PV1,LA7FS,LA7ECH)
"RTN","LA7VMSG1",182,0)
 D FILESEG^LA7VHLU(GBL,.LA7PV1)
"RTN","LA7VMSG1",183,0)
 D FILE6249^LA7VHLU(LA76249P,.LA7PV1)
"RTN","LA7VMSG1",184,0)
 ;
"RTN","LA7VMSG1",185,0)
 S LRUID="",(LA7OBRSN,LA7OBXSN,LA7NTESN)=0
"RTN","LA7VMSG1",186,0)
 ;
"RTN","LA7VMSG1",187,0)
 Q
"RTN","LA7VMSG1",188,0)
 ;
"RTN","LA7VMSG1",189,0)
 ;
"RTN","LA7VMSG1",190,0)
UPDT6249 ; Update entries in file #62.49
"RTN","LA7VMSG1",191,0)
 ;
"RTN","LA7VMSG1",192,0)
 N LA7ERR,LA76249,LA76249P
"RTN","LA7VMSG1",193,0)
 ;
"RTN","LA7VMSG1",194,0)
 S LA76249=0
"RTN","LA7VMSG1",195,0)
 F  S LA76249=$O(^TMP("LA7VS",$J,LA76249)) Q:'LA76249  D
"RTN","LA7VMSG1",196,0)
 . N FDA,LA7ERR
"RTN","LA7VMSG1",197,0)
 . S LA76249P=+$G(^TMP("LA7VS",$J,LA76249))
"RTN","LA7VMSG1",198,0)
 . ; Set pointer to parent on child entry.
"RTN","LA7VMSG1",199,0)
 . I LA76249'=LA76249P S FDA(LA76249,62.49,LA76249_",",6)=LA76249P
"RTN","LA7VMSG1",200,0)
 . S FDA(LA76249,62.49,LA76249_",",2)="A"
"RTN","LA7VMSG1",201,0)
 . I $L($P($G(HLMID),"^")) S FDA(LA76249,62.49,LA76249_",",109)=$P(HLMID,"^")
"RTN","LA7VMSG1",202,0)
 . I $L($P($G(HLMID),"^",2)) S FDA(LA76249,62.49,LA76249_",",160)=$P(HLMID,"^",2)
"RTN","LA7VMSG1",203,0)
 . I $L($P($G(HLMID),"^",3)) S FDA(LA76249,62.49,LA76249_",",161)=$P(HLMID,"^",3)
"RTN","LA7VMSG1",204,0)
 . D FILE^DIE("","FDA(LA76249)","LA7ERR(LA76249)")
"RTN","LA7VMSG1",205,0)
 . D CLEAN^DILF
"RTN","LA7VMSG1",206,0)
 ;
"RTN","LA7VMSG1",207,0)
 Q
"RTN","LA7VMSG1",208,0)
 ;
"RTN","LA7VMSG1",209,0)
 ;
"RTN","LA7VMSG1",210,0)
UPDLPD ; Update lab pending orders (#69.6) for each entry in #62.49
"RTN","LA7VMSG1",211,0)
 ;
"RTN","LA7VMSG1",212,0)
 N LA76249
"RTN","LA7VMSG1",213,0)
 ;
"RTN","LA7VMSG1",214,0)
 S LA76249=0
"RTN","LA7VMSG1",215,0)
 F  S LA76249=$O(^TMP("LA7VS",$J,LA76249)) Q:'LA76249  D UPD696
"RTN","LA7VMSG1",216,0)
 Q
"RTN","LA7VMSG1",217,0)
 ;
"RTN","LA7VMSG1",218,0)
 ;
"RTN","LA7VMSG1",219,0)
UPD696 ; Update LAB PENDING ORDERS file #69.6
"RTN","LA7VMSG1",220,0)
 ;
"RTN","LA7VMSG1",221,0)
 N LA74,LA7696,LA76964,LA7ERR,LA7ORDT,LA7STAT,LA7X
"RTN","LA7VMSG1",222,0)
 ;
"RTN","LA7VMSG1",223,0)
 ; Find "Results Available" status in #64.061
"RTN","LA7VMSG1",224,0)
 S LA7STAT=$$FIND1^DIC(64.061,"","OMX","Results Available","","I $P(^LAB(64.061,Y,0),U,7)=""U""")
"RTN","LA7VMSG1",225,0)
 ;
"RTN","LA7VMSG1",226,0)
 S LA7X=$G(^LAHM(62.49,LA76249,63))
"RTN","LA7VMSG1",227,0)
 ;
"RTN","LA7VMSG1",228,0)
 ; Ordering institution - pointer to file #4
"RTN","LA7VMSG1",229,0)
 S LA74=$P(LA7X,"^",2)
"RTN","LA7VMSG1",230,0)
 I LA74="" Q
"RTN","LA7VMSG1",231,0)
 ;
"RTN","LA7VMSG1",232,0)
 ; Ordered test
"RTN","LA7VMSG1",233,0)
 S LA7ORDT=$P(LA7X,"^",4)
"RTN","LA7VMSG1",234,0)
 I LA7ORDT="" Q
"RTN","LA7VMSG1",235,0)
 ;
"RTN","LA7VMSG1",236,0)
 ; File #69.6 ien and ordered test multiple ien
"RTN","LA7VMSG1",237,0)
 S LA7696=0
"RTN","LA7VMSG1",238,0)
 F  S LA7696=$O(^LRO(69.6,"RST",LA74,LA("RUID"),LA7696)) Q:'LA7696  D
"RTN","LA7VMSG1",239,0)
 . N FDA
"RTN","LA7VMSG1",240,0)
 . S LA76964=$O(^LRO(69.6,LA7696,2,"B",LA7ORDT,0))
"RTN","LA7VMSG1",241,0)
 . I LA76964<1 Q
"RTN","LA7VMSG1",242,0)
 . ;
"RTN","LA7VMSG1",243,0)
 . L +^LRO(69.6,LA7696):99999
"RTN","LA7VMSG1",244,0)
 . ; Cannot get lock on ENTRY in 69.6
"RTN","LA7VMSG1",245,0)
 . I '$T D CREATE^LA7LOG(33) Q
"RTN","LA7VMSG1",246,0)
 . ;
"RTN","LA7VMSG1",247,0)
 . ; Store outgoing HL7 message ID
"RTN","LA7VMSG1",248,0)
 . S FDA(1,69.64,LA76964_","_LA7696_",",7)=$P(HLMID,U)
"RTN","LA7VMSG1",249,0)
 . ; Set to Results Available.
"RTN","LA7VMSG1",250,0)
 . S FDA(1,69.64,LA76964_","_LA7696_",",5)=LA7STAT
"RTN","LA7VMSG1",251,0)
 . D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7VMSG1",252,0)
 . D CLEAN^DILF
"RTN","LA7VMSG1",253,0)
 . ;
"RTN","LA7VMSG1",254,0)
 . L -^LRO(69.6,LA7696)
"RTN","LA7VMSG1",255,0)
 ;
"RTN","LA7VMSG1",256,0)
 Q
"RTN","LA7VOBR")
0^25^B14967989
"RTN","LA7VOBR",1,0)
LA7VOBR ;DALOI/JMC - LAB OBR segment builder ; 11-17-98
"RTN","LA7VOBR",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VOBR",3,0)
 ;
"RTN","LA7VOBR",4,0)
 Q
"RTN","LA7VOBR",5,0)
 ;
"RTN","LA7VOBR",6,0)
 ;
"RTN","LA7VOBR",7,0)
OBR1(LA7OBXSN) ; Build OBR-1 sequence - set segment id
"RTN","LA7VOBR",8,0)
 ; Call with LA7OBXSN = segment id (pass by reference)
"RTN","LA7VOBR",9,0)
 ;
"RTN","LA7VOBR",10,0)
 S LA7OBXSN=$G(LA7OBXSN)+1
"RTN","LA7VOBR",11,0)
 ;
"RTN","LA7VOBR",12,0)
 Q LA7OBXSN
"RTN","LA7VOBR",13,0)
 ;
"RTN","LA7VOBR",14,0)
OBR2(LA7ID,LA7FS,LA7ECH) ; Build OBR-2 sequence - placer's specimen id
"RTN","LA7VOBR",15,0)
 ; Call with LA7ID = placer's specimen id (accn number/UID)
"RTN","LA7VOBR",16,0)
 ;           LA7FS = HL7 field separator
"RTN","LA7VOBR",17,0)
 ;          LA7ECH = HL encoding characters
"RTN","LA7VOBR",18,0)
 ;
"RTN","LA7VOBR",19,0)
 N LA7Y
"RTN","LA7VOBR",20,0)
 ;
"RTN","LA7VOBR",21,0)
 S LA7ID=$$CHKDATA^LA7VHLU3(LA7ID,LA7FS_LA7ECH)
"RTN","LA7VOBR",22,0)
 S $P(LA7Y,$E(LA7ECH,1),1)=LA7ID
"RTN","LA7VOBR",23,0)
 ;
"RTN","LA7VOBR",24,0)
 Q LA7Y
"RTN","LA7VOBR",25,0)
 ;
"RTN","LA7VOBR",26,0)
 ;
"RTN","LA7VOBR",27,0)
OBR3(LA7ID,LA7FS,LA7ECH) ; Build OBR-3 sequence - filler's specimen id
"RTN","LA7VOBR",28,0)
 ; Call with LA7ID = filler's specimen id (accn number/UID)
"RTN","LA7VOBR",29,0)
 ;           LA7FS = HL7 field separator
"RTN","LA7VOBR",30,0)
 ;          LA7ECH = HL encoding characters
"RTN","LA7VOBR",31,0)
 ;
"RTN","LA7VOBR",32,0)
 N LA7Y
"RTN","LA7VOBR",33,0)
 ;
"RTN","LA7VOBR",34,0)
 S LA7ID=$$CHKDATA^LA7VHLU3(LA7ID,LA7FS_LA7ECH)
"RTN","LA7VOBR",35,0)
 S $P(LA7Y,$E(LA7ECH,1),1)=LA7ID
"RTN","LA7VOBR",36,0)
 ;
"RTN","LA7VOBR",37,0)
 Q LA7Y
"RTN","LA7VOBR",38,0)
 ;
"RTN","LA7VOBR",39,0)
 ;
"RTN","LA7VOBR",40,0)
OBR4(LA7NLT,LA760,LA7ALT,LA7FS,LA7ECH) ; Build OBR-4 sequence - Universal service ID
"RTN","LA7VOBR",41,0)
 ; Call with LA7NLT = NLT test code
"RTN","LA7VOBR",42,0)
 ;            LA760 = file #60 ien if known
"RTN","LA7VOBR",43,0)
 ;           LA7ALT = alternate order code and system in form 
"RTN","LA7VOBR",44,0)
 ;                     test code^test name^coding system
"RTN","LA7VOBR",45,0)
 ;            LA7FS = HL7 field separator
"RTN","LA7VOBR",46,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VOBR",47,0)
 ;
"RTN","LA7VOBR",48,0)
 ; Returns     LA7Y = OBR-4 sequence
"RTN","LA7VOBR",49,0)
 ;
"RTN","LA7VOBR",50,0)
 N LA764,LA7COMP,LA7ERR,LA7TN,LA7X,LA7Y,LA7Z
"RTN","LA7VOBR",51,0)
 ;
"RTN","LA7VOBR",52,0)
 D OBR4^LA7VOBRA
"RTN","LA7VOBR",53,0)
 ;
"RTN","LA7VOBR",54,0)
 Q LA7Y
"RTN","LA7VOBR",55,0)
 ;
"RTN","LA7VOBR",56,0)
 ;
"RTN","LA7VOBR",57,0)
OBR7(LA7DT) ; Build OBR-7 sequence - collection date/time
"RTN","LA7VOBR",58,0)
 ; Call with LA7DT = FileMan date/time
"RTN","LA7VOBR",59,0)
 ; Returns OBR-7 sequence
"RTN","LA7VOBR",60,0)
 ;
"RTN","LA7VOBR",61,0)
 S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)
"RTN","LA7VOBR",62,0)
 Q $$FMTHL7^XLFDT(LA7DT)
"RTN","LA7VOBR",63,0)
 ;
"RTN","LA7VOBR",64,0)
 ;
"RTN","LA7VOBR",65,0)
OBR8(LA7DT) ; Build OBR-8 sequence - collection end date/time
"RTN","LA7VOBR",66,0)
 ; Call with LA7DT = FileMan date/time
"RTN","LA7VOBR",67,0)
 ; Returns OBR-8 sequence
"RTN","LA7VOBR",68,0)
 ;
"RTN","LA7VOBR",69,0)
 S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)
"RTN","LA7VOBR",70,0)
 Q $$FMTHL7^XLFDT(LA7DT)
"RTN","LA7VOBR",71,0)
 ;
"RTN","LA7VOBR",72,0)
 ;
"RTN","LA7VOBR",73,0)
OBR9(LA7VOL,LA764061,LA7FS,LA7ECH) ; Build OBR-9 sequence - collection volume
"RTN","LA7VOBR",74,0)
 ; Call with    LA7VOL = collection volume
"RTN","LA7VOBR",75,0)
 ;            LA764061 = units (pointer to #64.061)
"RTN","LA7VOBR",76,0)
 ;               LA7FS = HL7 field separator
"RTN","LA7VOBR",77,0)
 ;              LA7ECH = HL encoding characters
"RTN","LA7VOBR",78,0)
 ; Returns OBR-9 sequence
"RTN","LA7VOBR",79,0)
 ;
"RTN","LA7VOBR",80,0)
 N LA7IENS,LA7X,LA7Y
"RTN","LA7VOBR",81,0)
 ;
"RTN","LA7VOBR",82,0)
 D OBR9^LA7VOBRA
"RTN","LA7VOBR",83,0)
 ;
"RTN","LA7VOBR",84,0)
 Q LA7Y
"RTN","LA7VOBR",85,0)
 ;
"RTN","LA7VOBR",86,0)
 ;
"RTN","LA7VOBR",87,0)
OBR11(LA7X) ; Build OBR-11 sequence - speciman action code
"RTN","LA7VOBR",88,0)
 ; Call with LA7X = HL7 Table 0065 entry
"RTN","LA7VOBR",89,0)
 ; Returns OBR-11 sequence
"RTN","LA7VOBR",90,0)
 ;
"RTN","LA7VOBR",91,0)
 ; JMC-12/09/99 Need to expand this function to determine based on collection status
"RTN","LA7VOBR",92,0)
 ;
"RTN","LA7VOBR",93,0)
 Q LA7X
"RTN","LA7VOBR",94,0)
 ;
"RTN","LA7VOBR",95,0)
 ;
"RTN","LA7VOBR",96,0)
OBR12(LRDFN,LA7FS,LA7ECH) ; Build OBR-12 sequence - patient info
"RTN","LA7VOBR",97,0)
 ; Call with  LRDFN = ien of patient in #63
"RTN","LA7VOBR",98,0)
 ;            LA7FS = HL7 field separator
"RTN","LA7VOBR",99,0)
 ;           LA7ECH = HL7 encoding characters
"RTN","LA7VOBR",100,0)
 ; Returns OBR-12 sequence
"RTN","LA7VOBR",101,0)
 ;
"RTN","LA7VOBR",102,0)
 N LA7X
"RTN","LA7VOBR",103,0)
 ;
"RTN","LA7VOBR",104,0)
 S LRDFN=$G(LRDFN),LA7ECH=$G(LA7ECH)
"RTN","LA7VOBR",105,0)
 ; Infection Warning
"RTN","LA7VOBR",106,0)
 S LA7X=$P($G(^LR(LRDFN,.091)),U)
"RTN","LA7VOBR",107,0)
 S LA7X=$$CHKDATA^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VOBR",108,0)
 ;
"RTN","LA7VOBR",109,0)
 Q $E(LA7ECH,1)_LA7X
"RTN","LA7VOBR",110,0)
 ;
"RTN","LA7VOBR",111,0)
 ;
"RTN","LA7VOBR",112,0)
OBR14(LA7DT) ; Build OBR-14 sequence - speciman arrival date/time
"RTN","LA7VOBR",113,0)
 ; Call with LA7DT = FileMan date/time
"RTN","LA7VOBR",114,0)
 ; Returns OBR-14 sequence
"RTN","LA7VOBR",115,0)
 ;
"RTN","LA7VOBR",116,0)
 S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)
"RTN","LA7VOBR",117,0)
 Q $$FMTHL7^XLFDT(LA7DT)
"RTN","LA7VOBR",118,0)
 ;
"RTN","LA7VOBR",119,0)
 ;
"RTN","LA7VOBR",120,0)
OBR15(LA761,LA7TXT,LA7FS,LA7ECH) ; Build OBR-15 sequence - specimen source
"RTN","LA7VOBR",121,0)
 ; Call with LA761 = ien of topography file #61
"RTN","LA7VOBR",122,0)
 ;          LA7TXT = free text to place in 3rd component
"RTN","LA7VOBR",123,0)
 ;           LA7FS = HL7 field separator
"RTN","LA7VOBR",124,0)
 ;          LA7ECH = HL encoding characters
"RTN","LA7VOBR",125,0)
 ; Returns OBR-15 sequence in LA7Y
"RTN","LA7VOBR",126,0)
 ;
"RTN","LA7VOBR",127,0)
 N LA764061,LA7COMP,LA7ERR,LA7X,LA7Y,LA7Z
"RTN","LA7VOBR",128,0)
 ;
"RTN","LA7VOBR",129,0)
 D OBR15^LA7VOBRA
"RTN","LA7VOBR",130,0)
 ;
"RTN","LA7VOBR",131,0)
 Q LA7Y
"RTN","LA7VOBR",132,0)
 ;
"RTN","LA7VOBR",133,0)
 ;
"RTN","LA7VOBR",134,0)
OBR18(LA7X,LA7FS,LA7ECH) ; Build OBR-18 sequence - Placer's field #1
"RTN","LA7VOBR",135,0)
 ; Call with   LA7X = array containing components to store, pass by reference.
"RTN","LA7VOBR",136,0)
 ;            LA7FS = HL7 field separator
"RTN","LA7VOBR",137,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VOBR",138,0)
 ;
"RTN","LA7VOBR",139,0)
 ; Returns OBR-18 sequence
"RTN","LA7VOBR",140,0)
 ;
"RTN","LA7VOBR",141,0)
 N LA7I,LA7Y,LA7Z
"RTN","LA7VOBR",142,0)
 ;
"RTN","LA7VOBR",143,0)
 S LA7Y="",LA7I=0
"RTN","LA7VOBR",144,0)
 F  S LA7I=$O(LA7X(LA7I)) Q:'LA7I  D
"RTN","LA7VOBR",145,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7X(LA7I),LA7FS_LA7ECH)
"RTN","LA7VOBR",146,0)
 . S $P(LA7Y,$E(LA7ECH,1),LA7I)=LA7Z
"RTN","LA7VOBR",147,0)
 ;
"RTN","LA7VOBR",148,0)
 Q LA7Y
"RTN","LA7VOBR",149,0)
 ;
"RTN","LA7VOBR",150,0)
 ;
"RTN","LA7VOBR",151,0)
OBR19(LA7X,LA7FS,LA7ECH) ; Build OBR-19 sequence - Placer's field #2
"RTN","LA7VOBR",152,0)
 ; Call with LA7X() = array containing components to store, pass by reference.
"RTN","LA7VOBR",153,0)
 ;            LA7FS = HL7 field separator
"RTN","LA7VOBR",154,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VOBR",155,0)
 ;
"RTN","LA7VOBR",156,0)
 ; Returns OBR-19 sequence
"RTN","LA7VOBR",157,0)
 ;
"RTN","LA7VOBR",158,0)
 N LA7I,LA7Y,LA7Z
"RTN","LA7VOBR",159,0)
 ;
"RTN","LA7VOBR",160,0)
 S LA7Y="",LA7I=0
"RTN","LA7VOBR",161,0)
 F  S LA7I=$O(LA7X(LA7I)) Q:'LA7I  D
"RTN","LA7VOBR",162,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7X(LA7I),LA7FS_LA7ECH)
"RTN","LA7VOBR",163,0)
 . S $P(LA7Y,$E(LA7ECH,1),LA7I)=LA7Z
"RTN","LA7VOBR",164,0)
 ;
"RTN","LA7VOBR",165,0)
 Q LA7Y
"RTN","LA7VOBR",166,0)
 ;
"RTN","LA7VOBR",167,0)
 ;
"RTN","LA7VOBR",168,0)
OBR22(LA7DT) ; Build OBR-22 sequence - date report completed
"RTN","LA7VOBR",169,0)
 ; Call with LA7DT = FileMan date/time
"RTN","LA7VOBR",170,0)
 ;
"RTN","LA7VOBR",171,0)
 ; Returns OBR-22 sequence
"RTN","LA7VOBR",172,0)
 ;
"RTN","LA7VOBR",173,0)
 S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)
"RTN","LA7VOBR",174,0)
 Q $$FMTHL7^XLFDT(LA7DT)
"RTN","LA7VOBR",175,0)
 ;
"RTN","LA7VOBR",176,0)
 ;
"RTN","LA7VOBR",177,0)
OBR26(LA7OBX3,LA7OBX4,LA7OBX5,LA7FS,LA7ECH)     ; Build OBR-26 sequence - Parent result
"RTN","LA7VOBR",178,0)
 ; Call with LA7OBX3 = OBX-3 observation id of parent result
"RTN","LA7VOBR",179,0)
 ;           LA7OBX4 = OBX-4 sub-id of parent result
"RTN","LA7VOBR",180,0)
 ;           LA7OBX5 = OBX-5 parent result
"RTN","LA7VOBR",181,0)
 ;             LA7FS = HL7 Field separator
"RTN","LA7VOBR",182,0)
 ;            LA7ECH = HL7 encoding characters
"RTN","LA7VOBR",183,0)
 ;
"RTN","LA7VOBR",184,0)
 N LA7C,LA7SC,LA7Y,LA7Z
"RTN","LA7VOBR",185,0)
 ;
"RTN","LA7VOBR",186,0)
 D OBR26^LA7VOBRA
"RTN","LA7VOBR",187,0)
 ;
"RTN","LA7VOBR",188,0)
 Q LA7Y
"RTN","LA7VOBR",189,0)
 ;
"RTN","LA7VOBR",190,0)
 ;
"RTN","LA7VOBR",191,0)
OBR27(LA7DUR,LA7DURU,LA76205,LA7FS,LA7ECH) ; Build OBR-27 sequence - Quantity/Timing
"RTN","LA7VOBR",192,0)
 ; Call with  LA7DUR = collection duration
"RTN","LA7VOBR",193,0)
 ;           LA7DURU = duration units (pointer to #64.061)
"RTN","LA7VOBR",194,0)
 ;           LA76205 = test urgency
"RTN","LA7VOBR",195,0)
 ;             LA7FS = HL7 field separator
"RTN","LA7VOBR",196,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VOBR",197,0)
 ;
"RTN","LA7VOBR",198,0)
 ; Returns OBR-27 sequence
"RTN","LA7VOBR",199,0)
 ;
"RTN","LA7VOBR",200,0)
 ; Since field is same as ORC-7, use builder for ORC-7 field.
"RTN","LA7VOBR",201,0)
 ;
"RTN","LA7VOBR",202,0)
 ;
"RTN","LA7VOBR",203,0)
 Q $$ORC7^LA7VORC(LA7DUR,LA7DURU,LA76205,LA7FS,LA7ECH)
"RTN","LA7VOBR",204,0)
 ;
"RTN","LA7VOBR",205,0)
 ;
"RTN","LA7VOBR",206,0)
OBR29(LA7PON,LA7FON,LA7FS,LA7ECH)       ; Build OBR-29 sequence - Parent
"RTN","LA7VOBR",207,0)
 ; Call with LA7PON = parent's placer order number
"RTN","LA7VOBR",208,0)
 ;           LA7FON = parent's filler order nubmer
"RTN","LA7VOBR",209,0)
 ;            LA7FS = HL7 field separator
"RTN","LA7VOBR",210,0)
 ;           LA7ECH = HL7 encoding characters
"RTN","LA7VOBR",211,0)
 ;
"RTN","LA7VOBR",212,0)
 N LA7Y,LA7Z
"RTN","LA7VOBR",213,0)
 ;
"RTN","LA7VOBR",214,0)
 D OBR29^LA7VOBRA
"RTN","LA7VOBR",215,0)
 ;
"RTN","LA7VOBR",216,0)
 Q LA7Y
"RTN","LA7VOBRA")
0^60^B19761602
"RTN","LA7VOBRA",1,0)
LA7VOBRA ;DALOI/JMC - LAB OBR segment builder (cont'd); 11-14-01
"RTN","LA7VOBRA",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VOBRA",3,0)
 ;
"RTN","LA7VOBRA",4,0)
 Q
"RTN","LA7VOBRA",5,0)
 ;
"RTN","LA7VOBRA",6,0)
 ;
"RTN","LA7VOBRA",7,0)
OBR4 ; Build OBR-4 sequence - Universal service ID
"RTN","LA7VOBRA",8,0)
 ;
"RTN","LA7VOBRA",9,0)
 S LA764=0,LA7Y=""
"RTN","LA7VOBRA",10,0)
 ;
"RTN","LA7VOBRA",11,0)
 ; Get test name and NLT for this WKLD CODE file #64 entry.
"RTN","LA7VOBRA",12,0)
 I $L(LA7NLT) D
"RTN","LA7VOBRA",13,0)
 . ;S LA764=$$FIND1^DIC(64,"","OMX",LA7NLT)
"RTN","LA7VOBRA",14,0)
 . S LA764=$O(^LAM("E",LA7NLT,0))
"RTN","LA7VOBRA",15,0)
 . I LA764 D GETS^DIQ(64,LA764_",",".01;1","","LA7Z","LA7ERR")
"RTN","LA7VOBRA",16,0)
 ;
"RTN","LA7VOBRA",17,0)
 ; specify component position - primary/alternate
"RTN","LA7VOBRA",18,0)
 S LA7COMP=0
"RTN","LA7VOBRA",19,0)
 ;
"RTN","LA7VOBRA",20,0)
 ; Send non-VA test codes as first coding system
"RTN","LA7VOBRA",21,0)
 I $L(LA7ALT) D
"RTN","LA7VOBRA",22,0)
 . N I
"RTN","LA7VOBRA",23,0)
 . F I=1:1:3 S $P(LA7Y,$E(LA7ECH),LA7COMP+I)=$$CHKDATA^LA7VHLU3($P(LA7ALT,"^",I),LA7FS_LA7ECH)
"RTN","LA7VOBRA",24,0)
 . S LA7COMP=LA7COMP+I
"RTN","LA7VOBRA",25,0)
 ;
"RTN","LA7VOBRA",26,0)
 ; Send NLT test codes as primary unless non-VA codes then send as alternate code
"RTN","LA7VOBRA",27,0)
 I $L($G(LA7Z(64,LA764_",",1))) D
"RTN","LA7VOBRA",28,0)
 . S $P(LA7Y,$E(LA7ECH),LA7COMP+1)=$$CHKDATA^LA7VHLU3(LA7Z(64,LA764_",",1),LA7FS_LA7ECH)
"RTN","LA7VOBRA",29,0)
 . S $P(LA7Y,$E(LA7ECH),LA7COMP+2)=$$CHKDATA^LA7VHLU3(LA7Z(64,LA764_",",.01),LA7FS_LA7ECH)
"RTN","LA7VOBRA",30,0)
 . S $P(LA7Y,$E(LA7ECH),LA7COMP+3)="99VA64"
"RTN","LA7VOBRA",31,0)
 . S LA7COMP=LA7COMP+3
"RTN","LA7VOBRA",32,0)
 ;
"RTN","LA7VOBRA",33,0)
 ; Send file #60 test name if available and no alternate
"RTN","LA7VOBRA",34,0)
 I LA7COMP<4,LA760 D
"RTN","LA7VOBRA",35,0)
 . S LA7TN=$$GET1^DIQ(60,LA760_",",.01)
"RTN","LA7VOBRA",36,0)
 . S $P(LA7Y,$E(LA7ECH),LA7COMP+1)=LA760
"RTN","LA7VOBRA",37,0)
 . S $P(LA7Y,$E(LA7ECH),LA7COMP+2)=$$CHKDATA^LA7VHLU3(LA7TN,LA7FS_LA7ECH)
"RTN","LA7VOBRA",38,0)
 . S $P(LA7Y,$E(LA7ECH),LA7COMP+3)="99VA60"
"RTN","LA7VOBRA",39,0)
 ;
"RTN","LA7VOBRA",40,0)
 Q
"RTN","LA7VOBRA",41,0)
 ;
"RTN","LA7VOBRA",42,0)
 ;
"RTN","LA7VOBRA",43,0)
OBR9 ; Build OBR-9 sequence - collection volume
"RTN","LA7VOBRA",44,0)
 ;
"RTN","LA7VOBRA",45,0)
 ; Collection volume
"RTN","LA7VOBRA",46,0)
 S $P(LA7Y,$E(LA7ECH,1))=LA7VOL
"RTN","LA7VOBRA",47,0)
 ;
"RTN","LA7VOBRA",48,0)
 I LA764061 D
"RTN","LA7VOBRA",49,0)
 . S LA7IENS=LA764061_","
"RTN","LA7VOBRA",50,0)
 . D GETS^DIQ(64.061,LA7IENS,".01;1","E","LA7Y")
"RTN","LA7VOBRA",51,0)
 . ; Collection Volume units code
"RTN","LA7VOBRA",52,0)
 . S $P(LA7X,$E(LA7ECH,4),1)=$G(LA7Y(64.061,LA7IENS,.01,"E"))
"RTN","LA7VOBRA",53,0)
 . ; Collection Volume units text
"RTN","LA7VOBRA",54,0)
 . S $P(LA7X,$E(LA7ECH,4),2)=$$CHKDATA^LA7VHLU3($G(LA7Y(64.061,LA7IENS,1,"E")),LA7FS_LA7ECH)
"RTN","LA7VOBRA",55,0)
 . ; LOINC coding system
"RTN","LA7VOBRA",56,0)
 . S $P(LA7X,$E(LA7ECH,4),3)="LN"
"RTN","LA7VOBRA",57,0)
 . S $P(LA7Y,$E(LA7ECH,1),2)=LA7X
"RTN","LA7VOBRA",58,0)
 ;
"RTN","LA7VOBRA",59,0)
 Q
"RTN","LA7VOBRA",60,0)
 ;
"RTN","LA7VOBRA",61,0)
 ;
"RTN","LA7VOBRA",62,0)
OBR15 ; Build OBR-15 sequence - specimen source
"RTN","LA7VOBRA",63,0)
 ;
"RTN","LA7VOBRA",64,0)
 S LA764061=0
"RTN","LA7VOBRA",65,0)
 S LA7COMP=0 ; specify subcomponent position - primary/alternate
"RTN","LA7VOBRA",66,0)
 S LA7Y=""
"RTN","LA7VOBRA",67,0)
 ;
"RTN","LA7VOBRA",68,0)
 ; Get entry in #64.061 for this Topography file #61 entry.
"RTN","LA7VOBRA",69,0)
 I LA761>0 S LA764061=$$GET1^DIQ(61,LA761_",",.09,"I","LA7ERR")
"RTN","LA7VOBRA",70,0)
 ;
"RTN","LA7VOBRA",71,0)
 ; If no specimen code then default to HL7 0070 entry "XXX"
"RTN","LA7VOBRA",72,0)
 I LA764061<1 D
"RTN","LA7VOBRA",73,0)
 . N LA7SCR
"RTN","LA7VOBRA",74,0)
 . S LA7SCR="I $P(^LAB(64.061,Y,0),U,5)=""0070"",$P(^LAB(64.061,Y,0),U,7)=""S"""
"RTN","LA7VOBRA",75,0)
 . S LA764061=$$FIND1^DIC(64.061,,"X","XXX","D",LA7SCR,"LA7ERR")
"RTN","LA7VOBRA",76,0)
 ;
"RTN","LA7VOBRA",77,0)
 I LA764061<1 Q LA7Y
"RTN","LA7VOBRA",78,0)
 ;
"RTN","LA7VOBRA",79,0)
 D GETS^DIQ(64.061,LA764061_",",".01;1;2;3;5","","LA7Z","LA7ERR")
"RTN","LA7VOBRA",80,0)
 I '$D(LA7Z) Q LA7Y
"RTN","LA7VOBRA",81,0)
 ;
"RTN","LA7VOBRA",82,0)
 ; Send HL7 Table 0070 coding as primary code
"RTN","LA7VOBRA",83,0)
 I $L(LA7Z(64.061,LA764061_",",2)) D
"RTN","LA7VOBRA",84,0)
 . S LA7X=$$CHKDATA^LA7VHLU3(LA7Z(64.061,LA764061_",",2),LA7FS_LA7ECH)
"RTN","LA7VOBRA",85,0)
 . S $P(LA7Y,$E(LA7ECH,4),1)=LA7X
"RTN","LA7VOBRA",86,0)
 . S LA7X=$$CHKDATA^LA7VHLU3(LA7Z(64.061,LA764061_",",.01),LA7FS_LA7ECH)
"RTN","LA7VOBRA",87,0)
 . S $P(LA7Y,$E(LA7ECH,4),2)=LA7X
"RTN","LA7VOBRA",88,0)
 . S $P(LA7Y,$E(LA7ECH,4),3)="HL7"_LA7Z(64.061,LA764061_",",5)
"RTN","LA7VOBRA",89,0)
 . S LA7COMP=LA7COMP+3
"RTN","LA7VOBRA",90,0)
 ;
"RTN","LA7VOBRA",91,0)
 ; Send LOINC code as primary unless HL7 code then send as alternate code
"RTN","LA7VOBRA",92,0)
 I $L(LA7Z(64.061,LA764061_",",1)) D
"RTN","LA7VOBRA",93,0)
 . S LA7X=$$CHKDATA^LA7VHLU3(LA7Z(64.061,LA764061_",",1),LA7FS_LA7ECH)
"RTN","LA7VOBRA",94,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+1)=LA7X
"RTN","LA7VOBRA",95,0)
 . S LA7X=$$CHKDATA^LA7VHLU3(LA7Z(64.061,LA764061_",",.01),LA7FS_LA7ECH)
"RTN","LA7VOBRA",96,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+2)=LA7X
"RTN","LA7VOBRA",97,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+3)="LN"
"RTN","LA7VOBRA",98,0)
 . S LA7COMP=LA7COMP+3
"RTN","LA7VOBRA",99,0)
 ;
"RTN","LA7VOBRA",100,0)
 ; If VA code and not HL7 and/or LOINC
"RTN","LA7VOBRA",101,0)
 I $L(LA7Z(64.061,LA764061_",",3)),LA7COMP<6 D
"RTN","LA7VOBRA",102,0)
 . S LA7X=$$CHKDATA^LA7VHLU3(LA7Z(64.061,LA764061_",",3),LA7FS_LA7ECH)
"RTN","LA7VOBRA",103,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+1)=LA7X
"RTN","LA7VOBRA",104,0)
 . S LA7X=$$CHKDATA^LA7VHLU3(LA7Z(64.061,LA764061_",",.01),LA7FS_LA7ECH)
"RTN","LA7VOBRA",105,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+2)=LA7X
"RTN","LA7VOBRA",106,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+3)="99VA64.061"
"RTN","LA7VOBRA",107,0)
 ;
"RTN","LA7VOBRA",108,0)
 ; LA7TXT should contain "CONTROL" if from file #62.3
"RTN","LA7VOBRA",109,0)
 I $L($G(LA7TXT)) D
"RTN","LA7VOBRA",110,0)
 . S LA7TXT=$$CHKDATA^LA7VHLU3(LA7TXT,LA7FS_LA7ECH)
"RTN","LA7VOBRA",111,0)
 . S $P(LA7Y,$E(LA7ECH,1),3)=LA7TXT
"RTN","LA7VOBRA",112,0)
 ;
"RTN","LA7VOBRA",113,0)
 Q
"RTN","LA7VOBRA",114,0)
 ;
"RTN","LA7VOBRA",115,0)
 ;
"RTN","LA7VOBRA",116,0)
OBR26 ; Build OBR-26 sequence - Parent result
"RTN","LA7VOBRA",117,0)
 ;
"RTN","LA7VOBRA",118,0)
 S LA7Y=""
"RTN","LA7VOBRA",119,0)
 ;
"RTN","LA7VOBRA",120,0)
 ; Move component into sub-component position
"RTN","LA7VOBRA",121,0)
 ; Translate component character to sub-component character
"RTN","LA7VOBRA",122,0)
 S LA7C=$E(LA7ECH,1),LA7SC=$E(LA7ECH,4)
"RTN","LA7VOBRA",123,0)
 ;
"RTN","LA7VOBRA",124,0)
 ; Parent result observation identifier in 1st component
"RTN","LA7VOBRA",125,0)
 I $L(LA7OBX3) S $P(LA7Y,$E(LA7ECH,1),1)=$TR(LA7OBX3,LA7C,LA7SC)
"RTN","LA7VOBRA",126,0)
 ;
"RTN","LA7VOBRA",127,0)
 ; Parent sub-id in 2nd component
"RTN","LA7VOBRA",128,0)
 I $L(LA7OBX4) S $P(LA7Y,$E(LA7ECH,1),2)=$TR(LA7OBX4,LA7C,LA7SC)
"RTN","LA7VOBRA",129,0)
 ;
"RTN","LA7VOBRA",130,0)
 ; Parent test result in 3rd component
"RTN","LA7VOBRA",131,0)
 I $L(LA7OBX5) S $P(LA7Y,$E(LA7ECH,1),3)=$TR(LA7OBX5,LA7C,LA7SC)
"RTN","LA7VOBRA",132,0)
 ;
"RTN","LA7VOBRA",133,0)
 Q
"RTN","LA7VOBRA",134,0)
 ;
"RTN","LA7VOBRA",135,0)
 ;
"RTN","LA7VOBRA",136,0)
OBR29 ; Build OBR-29 sequence - Parent
"RTN","LA7VOBRA",137,0)
 ;
"RTN","LA7VOBRA",138,0)
 S LA7Y=""
"RTN","LA7VOBRA",139,0)
 ;
"RTN","LA7VOBRA",140,0)
 I $L($G(LA7PON)) D
"RTN","LA7VOBRA",141,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7PON,LA7FS_LA7ECH)
"RTN","LA7VOBRA",142,0)
 . S $P(LA7Y,$E(LA7ECH,1),1)=LA7Z
"RTN","LA7VOBRA",143,0)
 ;
"RTN","LA7VOBRA",144,0)
 I $L($G(LA7FON)) D
"RTN","LA7VOBRA",145,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7FON,LA7FS_LA7ECH)
"RTN","LA7VOBRA",146,0)
 . S $P(LA7Y,$E(LA7ECH,2),1)=LA7Z
"RTN","LA7VOBRA",147,0)
 ;
"RTN","LA7VOBRA",148,0)
 Q
"RTN","LA7VOBX")
0^22^B20048789
"RTN","LA7VOBX",1,0)
LA7VOBX ;DALOI/JMC - LAB OBX Segment message builder ; 11-17-98
"RTN","LA7VOBX",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VOBX",3,0)
 ;
"RTN","LA7VOBX",4,0)
OBX(LRDFN,LRSS,LRIDT,LRSB,LA7ARRAY,LA7OBXSN,LA7FS,LA7ECH) ; Observation/Result segment for Lab Results.
"RTN","LA7VOBX",5,0)
 ; Call with    LRDFN = ien of entry in file #63
"RTN","LA7VOBX",6,0)
 ;               LRSS = file #63 subscript
"RTN","LA7VOBX",7,0)
 ;              LRIDT = inverse date/time of specimen
"RTN","LA7VOBX",8,0)
 ;               LRSB = ien of dataname if "CH" subscript or global subscript for others
"RTN","LA7VOBX",9,0)
 ;           LA7ARRAY = array to return OBX segment, pass by reference
"RTN","LA7VOBX",10,0)
 ;           LA7OBXSN = OBX segment sequence number, pass by reference
"RTN","LA7VOBX",11,0)
 ;              LA7FS = HL field separator
"RTN","LA7VOBX",12,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VOBX",13,0)
 ;
"RTN","LA7VOBX",14,0)
 ; Returns LA7OBXSN = current OBX segment sequence number 
"RTN","LA7VOBX",15,0)
 ;         LA7ARRAY = array containing OBX segment
"RTN","LA7VOBX",16,0)
 ;
"RTN","LA7VOBX",17,0)
 N LA7OBX,LA7VAL,LA7X
"RTN","LA7VOBX",18,0)
 ;
"RTN","LA7VOBX",19,0)
 ; No subscript/patient/specimen
"RTN","LA7VOBX",20,0)
 I $G(LRSS)=""!('$G(LRDFN))!('$G(LRIDT)) Q
"RTN","LA7VOBX",21,0)
 ;
"RTN","LA7VOBX",22,0)
 ; "CH" subscript
"RTN","LA7VOBX",23,0)
 I LRSS="CH" D CH^LA7VOBX1
"RTN","LA7VOBX",24,0)
 ;
"RTN","LA7VOBX",25,0)
 ; "MI" subscript
"RTN","LA7VOBX",26,0)
 I LRSS="MI" D MI^LA7VOBX3
"RTN","LA7VOBX",27,0)
 ;
"RTN","LA7VOBX",28,0)
 ; "SP" subscrpt
"RTN","LA7VOBX",29,0)
 I LRSS="SP" D AP^LA7VOBX2
"RTN","LA7VOBX",30,0)
 ;
"RTN","LA7VOBX",31,0)
 ; "CY" subscrpt
"RTN","LA7VOBX",32,0)
 I LRSS="CY" D AP^LA7VOBX2
"RTN","LA7VOBX",33,0)
 ;
"RTN","LA7VOBX",34,0)
 ; "EM" subscrpt
"RTN","LA7VOBX",35,0)
 I LRSS="EM" D AP^LA7VOBX2
"RTN","LA7VOBX",36,0)
 ;
"RTN","LA7VOBX",37,0)
 Q
"RTN","LA7VOBX",38,0)
 ;
"RTN","LA7VOBX",39,0)
 ;
"RTN","LA7VOBX",40,0)
OBX1(LA7OBXSN) ; Build OBX-1 sequence - Set ID (sequence number)
"RTN","LA7VOBX",41,0)
 ; Call with LA7OBXSN = sequence number (pass by reference)
"RTN","LA7VOBX",42,0)
 ;
"RTN","LA7VOBX",43,0)
 N LA7Y
"RTN","LA7VOBX",44,0)
 ;
"RTN","LA7VOBX",45,0)
 ; increment sequence number
"RTN","LA7VOBX",46,0)
 S (LA7OBXSN,LA7Y)=$G(LA7OBXSN)+1
"RTN","LA7VOBX",47,0)
 ;
"RTN","LA7VOBX",48,0)
 Q LA7Y
"RTN","LA7VOBX",49,0)
 ;
"RTN","LA7VOBX",50,0)
 ;
"RTN","LA7VOBX",51,0)
OBX2(LA7FILE,LA7FIELD) ; Build OBX-2 sequence - Value type
"RTN","LA7VOBX",52,0)
 ; Call with   LA7FILE = FileMan DD file/subfield number
"RTN","LA7VOBX",53,0)
 ;            LA7FIELD = Fileman DD field number
"RTN","LA7VOBX",54,0)
 ;
"RTN","LA7VOBX",55,0)
 ; Returns      LA7VAL = value type  (HL7 table 0125)
"RTN","LA7VOBX",56,0)
 ;
"RTN","LA7VOBX",57,0)
 N LA7ERR,LA7TYP,LA7VAL
"RTN","LA7VOBX",58,0)
 ;
"RTN","LA7VOBX",59,0)
 D OBX2^LA7VOBXA
"RTN","LA7VOBX",60,0)
 ;
"RTN","LA7VOBX",61,0)
 Q LA7VAL
"RTN","LA7VOBX",62,0)
 ;
"RTN","LA7VOBX",63,0)
 ;
"RTN","LA7VOBX",64,0)
OBX3(LA7NLT,LA7953,LA7ALT,LA7FS,LA7ECH) ; Build OBX-3 sequence - Observation identifier field
"RTN","LA7VOBX",65,0)
 ; Call with  LA7NLT = NLT code.
"RTN","LA7VOBX",66,0)
 ;            LA7953 = LOINC code
"RTN","LA7VOBX",67,0)
 ;            LA7ALT = alternate code - local/non-VA (code^text^system)
"RTN","LA7VOBX",68,0)
 ;             LA7FS = HL field separator
"RTN","LA7VOBX",69,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VOBX",70,0)
 ;
"RTN","LA7VOBX",71,0)
 N LA764,LA7J,LA7LN,LA7X,LA7Y
"RTN","LA7VOBX",72,0)
 ;
"RTN","LA7VOBX",73,0)
 D OBX3^LA7VOBXA
"RTN","LA7VOBX",74,0)
 ;
"RTN","LA7VOBX",75,0)
 Q LA7Y
"RTN","LA7VOBX",76,0)
 ;
"RTN","LA7VOBX",77,0)
 ;
"RTN","LA7VOBX",78,0)
OBX4(LA7VAL,LA7FS,LA7ECH) ; Build OBX-4 sequence - Observation sub-ID
"RTN","LA7VOBX",79,0)
 ; Call with  LA7VAL = value of the observation
"RTN","LA7VOBX",80,0)
 ;             LA7FS = HL field separator
"RTN","LA7VOBX",81,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VOBX",82,0)
 ;
"RTN","LA7VOBX",83,0)
 ; Returns LA7Y = Observation sub-ID checked for escape encoding
"RTN","LA7VOBX",84,0)
 ;
"RTN","LA7VOBX",85,0)
 N LA7Y
"RTN","LA7VOBX",86,0)
 ;
"RTN","LA7VOBX",87,0)
 S LA7Y=$$CHKDATA^LA7VHLU3(LA7VAL,LA7FS_LA7ECH)
"RTN","LA7VOBX",88,0)
 ;
"RTN","LA7VOBX",89,0)
 Q LA7Y
"RTN","LA7VOBX",90,0)
 ;
"RTN","LA7VOBX",91,0)
 ;
"RTN","LA7VOBX",92,0)
OBX5(LA7VAL,LA7OBX2,LA7FS,LA7ECH) ; Build OBX-5 sequence - Observation value
"RTN","LA7VOBX",93,0)
 ; Call with  LA7VAL = value of the observation
"RTN","LA7VOBX",94,0)
 ;           LA7OBX2 = value type
"RTN","LA7VOBX",95,0)
 ;             LA7FS = HL field separator
"RTN","LA7VOBX",96,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VOBX",97,0)
 ;
"RTN","LA7VOBX",98,0)
 N LA7Y
"RTN","LA7VOBX",99,0)
 ;
"RTN","LA7VOBX",100,0)
 D OBX5^LA7VOBXA
"RTN","LA7VOBX",101,0)
 ;
"RTN","LA7VOBX",102,0)
 Q LA7Y
"RTN","LA7VOBX",103,0)
 ;
"RTN","LA7VOBX",104,0)
 ;
"RTN","LA7VOBX",105,0)
OBX5M(LA7FN,LA7IENS,LA7FLD,LA7WP,LA7FS,LA7ECH) ; Build OBX-5 sequence - Observation value - multi-line textual result
"RTN","LA7VOBX",106,0)
 ; Call with LA7FN = File number or subfile
"RTN","LA7VOBX",107,0)
 ;         LA7IENS = Standard FileMan IENS indicating internal entry numbers
"RTN","LA7VOBX",108,0)
 ;          LA7FLD = Field number
"RTN","LA7VOBX",109,0)
 ;           LA7WP = array passed by reference to return text
"RTN","LA7VOBX",110,0)
 ;           LA7FS = HL field separator
"RTN","LA7VOBX",111,0)
 ;          LA7ECH = HL encoding characters
"RTN","LA7VOBX",112,0)
 ;
"RTN","LA7VOBX",113,0)
 ; Returns   LA7WP = subscripted array containing text of results
"RTN","LA7VOBX",114,0)
 ;                   LA7WP(0), LA7WP(1), LA7WP(2),...
"RTN","LA7VOBX",115,0)
 ;
"RTN","LA7VOBX",116,0)
 N LA7ERR,LA7I,LA7J,LA7TYPE,LA7X,LA7Y
"RTN","LA7VOBX",117,0)
 ;
"RTN","LA7VOBX",118,0)
 D OBX5M^LA7VOBXA
"RTN","LA7VOBX",119,0)
 ;
"RTN","LA7VOBX",120,0)
 Q
"RTN","LA7VOBX",121,0)
 ;
"RTN","LA7VOBX",122,0)
 ;
"RTN","LA7VOBX",123,0)
OBX5R(LA7VAL,LA7OBX2,LA7FS,LA7ECH) ; Build OBX-5 sequence with repetition - Observation value
"RTN","LA7VOBX",124,0)
 ; Call with  LA7VAL = array passed by reference
"RTN","LA7VOBX",125,0)
 ;           LA7OBX2 = value type
"RTN","LA7VOBX",126,0)
 ;             LA7FS = HL field separator
"RTN","LA7VOBX",127,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VOBX",128,0)
 ;
"RTN","LA7VOBX",129,0)
 N LA7I,LA7Y
"RTN","LA7VOBX",130,0)
 ;
"RTN","LA7VOBX",131,0)
 D OBX5R^LA7VOBXA
"RTN","LA7VOBX",132,0)
 ;
"RTN","LA7VOBX",133,0)
 Q LA7Y
"RTN","LA7VOBX",134,0)
 ;
"RTN","LA7VOBX",135,0)
 ;
"RTN","LA7VOBX",136,0)
OBX6(LA7VAL,LA764061,LA7FS,LA7ECH) ; Build OBX-6 sequence - Units
"RTN","LA7VOBX",137,0)
 ; Call with   LA7VAL = Units if in external format
"RTN","LA7VOBX",138,0)
 ;           LA764061 = ien of units in #64.061
"RTN","LA7VOBX",139,0)
 ;              LA7FS = HL field separator
"RTN","LA7VOBX",140,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VOBX",141,0)
 ; Returns units
"RTN","LA7VOBX",142,0)
 ;
"RTN","LA7VOBX",143,0)
 N LA7Y
"RTN","LA7VOBX",144,0)
 ;
"RTN","LA7VOBX",145,0)
 D OBX6^LA7VOBXA
"RTN","LA7VOBX",146,0)
 ;
"RTN","LA7VOBX",147,0)
 Q LA7Y
"RTN","LA7VOBX",148,0)
 ;
"RTN","LA7VOBX",149,0)
 ;
"RTN","LA7VOBX",150,0)
OBX7(LA7LOW,LA7HIGH,LA7FS,LA7ECH) ; Build OBX-7 sequence - Reference range
"RTN","LA7VOBX",151,0)
 ; Call with  LA7LOW = lower limit
"RTN","LA7VOBX",152,0)
 ;           LA7HIGH = upper limit
"RTN","LA7VOBX",153,0)
 ;             LA7FS = HL field separator
"RTN","LA7VOBX",154,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VOBX",155,0)
 ; Returns reference range
"RTN","LA7VOBX",156,0)
 ;
"RTN","LA7VOBX",157,0)
 N LA7Y
"RTN","LA7VOBX",158,0)
 ;
"RTN","LA7VOBX",159,0)
 D OBX7^LA7VOBXA
"RTN","LA7VOBX",160,0)
 ;
"RTN","LA7VOBX",161,0)
 Q LA7Y
"RTN","LA7VOBX",162,0)
 ;
"RTN","LA7VOBX",163,0)
 ;
"RTN","LA7VOBX",164,0)
OBX8(LA7FLAG) ; Build OBX-8 sequence - Abnormal flags
"RTN","LA7VOBX",165,0)
 ; Call with LA7FLAG = DHCP Lab normalcy flag
"RTN","LA7VOBX",166,0)
 ; Returns abnormal flags based on HL7 table 0078
"RTN","LA7VOBX",167,0)
 ;
"RTN","LA7VOBX",168,0)
 N LA7Y
"RTN","LA7VOBX",169,0)
 ;
"RTN","LA7VOBX",170,0)
 S LA7Y=$TR(LA7FLAG,"*",$E(LA7FLAG,1)) ; abnormal flag
"RTN","LA7VOBX",171,0)
 Q LA7Y
"RTN","LA7VOBX",172,0)
 ;
"RTN","LA7VOBX",173,0)
 ;
"RTN","LA7VOBX",174,0)
OBX11(LA7FLAG) ; Build OBX-11 sequence - Observation result status
"RTN","LA7VOBX",175,0)
 ; Call with LA7FLAG = DHCP Lab status flag
"RTN","LA7VOBX",176,0)
 ; Returns result status based on HL7 table 0085
"RTN","LA7VOBX",177,0)
 ;
"RTN","LA7VOBX",178,0)
 N LA7Y
"RTN","LA7VOBX",179,0)
 ;
"RTN","LA7VOBX",180,0)
 S LA7Y=""
"RTN","LA7VOBX",181,0)
 ;
"RTN","LA7VOBX",182,0)
 I LA7FLAG="canc" S LA7Y="F"
"RTN","LA7VOBX",183,0)
 I LA7FLAG="comment" S LA7Y="F"
"RTN","LA7VOBX",184,0)
 I LA7FLAG="pending" S LA7Y="I"
"RTN","LA7VOBX",185,0)
 I LA7FLAG="F" S LA7Y="F"
"RTN","LA7VOBX",186,0)
 I LA7FLAG="P" S LA7Y="P"
"RTN","LA7VOBX",187,0)
 I LA7FLAG="A" S LA7Y="C"
"RTN","LA7VOBX",188,0)
 ;
"RTN","LA7VOBX",189,0)
 Q LA7Y
"RTN","LA7VOBX",190,0)
 ;
"RTN","LA7VOBX",191,0)
 ;
"RTN","LA7VOBX",192,0)
OBX14(LA7DT) ; Build OBX-14 sequence - date/time of observation
"RTN","LA7VOBX",193,0)
 ; Call with LA7DT = FileMan date/time
"RTN","LA7VOBX",194,0)
 ; Returns OBX-14 sequence
"RTN","LA7VOBX",195,0)
 ;
"RTN","LA7VOBX",196,0)
 S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)
"RTN","LA7VOBX",197,0)
 Q $$FMTHL7^XLFDT(LA7DT)
"RTN","LA7VOBX",198,0)
 ;
"RTN","LA7VOBX",199,0)
 ;
"RTN","LA7VOBX",200,0)
OBX15(LA74,LA7FS,LA7ECH) ; Build OBX-15 sequence - Producer's ID field
"RTN","LA7VOBX",201,0)
 ; Call with   LA74 = ien of institution in file #4
"RTN","LA7VOBX",202,0)
 ;                    if null/undefined then use Kernel Site file.
"RTN","LA7VOBX",203,0)
 ;            LA7FS = HL field separator
"RTN","LA7VOBX",204,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VOBX",205,0)
 ;
"RTN","LA7VOBX",206,0)
 ; Returns facility that performed the testing (ID^text^99VA4)
"RTN","LA7VOBX",207,0)
 ;
"RTN","LA7VOBX",208,0)
 Q $$INST^LA7VHLU4(LA74,LA7FS,LA7ECH)
"RTN","LA7VOBX",209,0)
 ;
"RTN","LA7VOBX",210,0)
 ;
"RTN","LA7VOBX",211,0)
OBX16(LA7DUZ,LA7DIV,LA7FS,LA7ECH) ; Build OBX-16 sequence - Responsible observer field
"RTN","LA7VOBX",212,0)
 ; Call with   LA7DUZ = DUZ of verifying user
"RTN","LA7VOBX",213,0)
 ;             LA7DIV = Institution of user
"RTN","LA7VOBX",214,0)
 ;              LA7FS = HL field separator
"RTN","LA7VOBX",215,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VOBX",216,0)
 ;           
"RTN","LA7VOBX",217,0)
 ; Returns OBX-16 sequence
"RTN","LA7VOBX",218,0)
 ;
"RTN","LA7VOBX",219,0)
 Q $$XCN^LA7VHLU4(LA7DUZ,LA7DIV,LA7FS,LA7ECH)
"RTN","LA7VOBX",220,0)
 ;
"RTN","LA7VOBX",221,0)
 ;
"RTN","LA7VOBX",222,0)
OBX17(LA7VAL,LA7FS,LA7ECH) ; Build OBX-17 sequence - Observation method field
"RTN","LA7VOBX",223,0)
 ; Call with   LA7VAL = WKLD SUFFIX CODES #64.2 with leading decimal
"RTN","LA7VOBX",224,0)
 ;              LA7FS = HL field separator
"RTN","LA7VOBX",225,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VOBX",226,0)
 ;           
"RTN","LA7VOBX",227,0)
 ; Returns       LA7Y = OBX-17 sequence
"RTN","LA7VOBX",228,0)
 ;
"RTN","LA7VOBX",229,0)
 N LA7X,LA7Y
"RTN","LA7VOBX",230,0)
 ;
"RTN","LA7VOBX",231,0)
 ; method suffix code maybe stored without leading decimal,
"RTN","LA7VOBX",232,0)
 ;  add "." back for lookup, also add trailing space for lookup in x-ref.
"RTN","LA7VOBX",233,0)
 I LA7VAL>1 S LA7VAL="."_LA7VAL
"RTN","LA7VOBX",234,0)
 S LA7X=$O(^LAB(64.2,"C",LA7VAL_" ",0)),LA7Y=""
"RTN","LA7VOBX",235,0)
 I LA7X D
"RTN","LA7VOBX",236,0)
 . S LA7X(.01)=$$GET1^DIQ(64.2,LA7X_",",.01)
"RTN","LA7VOBX",237,0)
 . S LA7X(.01)=$$CHKDATA^LA7VHLU3(LA7X(.01),LA7FS_LA7ECH)
"RTN","LA7VOBX",238,0)
 . S LA7Y=LA7VAL_$E(LA7ECH)_LA7X(.01)_$E(LA7ECH)_"99VA64_2"
"RTN","LA7VOBX",239,0)
 ;
"RTN","LA7VOBX",240,0)
 Q LA7Y
"RTN","LA7VOBX",241,0)
 ;
"RTN","LA7VOBX",242,0)
 ;
"RTN","LA7VOBX",243,0)
OBX18(LA7VAL,LA7FS,LA7ECH) ; Build OBX-18 sequence - Equipment entity identifier field
"RTN","LA7VOBX",244,0)
 ; Call with   LA7VAL = Equipment entity identifier
"RTN","LA7VOBX",245,0)
 ;              LA7FS = HL field separator
"RTN","LA7VOBX",246,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VOBX",247,0)
 ;           
"RTN","LA7VOBX",248,0)
 ; Returns       LA7X = OBX-18 sequence
"RTN","LA7VOBX",249,0)
 ;
"RTN","LA7VOBX",250,0)
 N LA7I,LA7J,LA7X,LA7Y
"RTN","LA7VOBX",251,0)
 ;
"RTN","LA7VOBX",252,0)
 S LA7X="",LA7J=$L(LA7VAL,"!")
"RTN","LA7VOBX",253,0)
 F LA7I=1:1:LA7J D
"RTN","LA7VOBX",254,0)
 . S LA7Y=$P(LA7VAL,"!",LA7I)
"RTN","LA7VOBX",255,0)
 . I LA7Y']"" Q
"RTN","LA7VOBX",256,0)
 . S $P(LA7X,$E(LA7ECH,1),LA7I)=$$CHKDATA^LA7VHLU3(LA7Y,LA7FS_LA7ECH)
"RTN","LA7VOBX",257,0)
 ;
"RTN","LA7VOBX",258,0)
 Q LA7X
"RTN","LA7VOBX1")
0^45^B11399892
"RTN","LA7VOBX1",1,0)
LA7VOBX1 ;DALOI/JMC - LAB OBX Segment message builder (CH subscript) cont'd; 5/25/00
"RTN","LA7VOBX1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VOBX1",3,0)
 ;
"RTN","LA7VOBX1",4,0)
CH ; Observation/Result segment for "CH" subscript results.
"RTN","LA7VOBX1",5,0)
 ; Called by LA7VOBX
"RTN","LA7VOBX1",6,0)
 ;
"RTN","LA7VOBX1",7,0)
 N LA76304,LA7ALT,LA7DIV,LA7I,LA7X,LA7Y,X
"RTN","LA7VOBX1",8,0)
 ;
"RTN","LA7VOBX1",9,0)
 ; "CH" subscript requires a dataname
"RTN","LA7VOBX1",10,0)
 I '$G(LRSB) Q
"RTN","LA7VOBX1",11,0)
 ;
"RTN","LA7VOBX1",12,0)
 ; get result node from LR global.
"RTN","LA7VOBX1",13,0)
 S LA76304(0)=$G(^LR(LRDFN,LRSS,LRIDT,0))
"RTN","LA7VOBX1",14,0)
 S LA7VAL=$G(^LR(LRDFN,LRSS,LRIDT,LRSB))
"RTN","LA7VOBX1",15,0)
 ;
"RTN","LA7VOBX1",16,0)
 ; If no result NLT try to determine from file #60
"RTN","LA7VOBX1",17,0)
 I $P($P(LA7VAL,"^",3),"!",2)="" D
"RTN","LA7VOBX1",18,0)
 . S $P(LA7VAL,"^",3)=$$DEFCODE^LA7VHLU5(LRSS,LRSB,$P(LA7VAL,"^",3),$P(LA76304(0),"^",5))
"RTN","LA7VOBX1",19,0)
 . ; No result NLT code - log error
"RTN","LA7VOBX1",20,0)
 . I $P($P(LA7VAL,"^",3),"!",2)="" D
"RTN","LA7VOBX1",21,0)
 . . N LA7X
"RTN","LA7VOBX1",22,0)
 . . S LA7X="["_LRSB_"]"_$$GET1^DID(63.04,LRSB,"","LABEL")
"RTN","LA7VOBX1",23,0)
 . . D CREATE^LA7LOG(36)
"RTN","LA7VOBX1",24,0)
 ;
"RTN","LA7VOBX1",25,0)
 ; something missing - No NLT code, etc.
"RTN","LA7VOBX1",26,0)
 I LA7VAL="" Q
"RTN","LA7VOBX1",27,0)
 ;
"RTN","LA7VOBX1",28,0)
 ; Check for missing units/reference ranges
"RTN","LA7VOBX1",29,0)
 S LA7X=$P(LA7VAL,"^",5)
"RTN","LA7VOBX1",30,0)
 ;
"RTN","LA7VOBX1",31,0)
 ; Results missing units, lookup in file #60
"RTN","LA7VOBX1",32,0)
 I $P(LA7X,"!",7)="" S $P(LA7X,"!",7)=$P($$REFUNIT^LA7VHLU1(LRSB,$P(LA76304(0),"^",5)),"^",3)
"RTN","LA7VOBX1",33,0)
 ;
"RTN","LA7VOBX1",34,0)
 ; If results missing reference ranges, use values from file #60.
"RTN","LA7VOBX1",35,0)
 I $P(LA7X,"!",2)="",$P(LA7X,"!",3)="",$P(LA7X,"!",11)="",$P(LA7X,"!",12)="" D
"RTN","LA7VOBX1",36,0)
 . S LA7Y=$$REFUNIT^LA7VHLU1(LRSB,$P(LA76304(0),"^",5))
"RTN","LA7VOBX1",37,0)
 . S $P(LA7X,"!",2)=$P(LA7Y,"^")
"RTN","LA7VOBX1",38,0)
 . S $P(LA7X,"!",3)=$P(LA7Y,"^",2)
"RTN","LA7VOBX1",39,0)
 . S $P(LA7X,"!",11)=$P(LA7Y,"^",6)
"RTN","LA7VOBX1",40,0)
 . S $P(LA7X,"!",12)=$P(LA7Y,"^",7)
"RTN","LA7VOBX1",41,0)
 ; Use therapeutic low/high if low/high missing.
"RTN","LA7VOBX1",42,0)
 I $P(LA7X,"!",2)="",$P(LA7X,"!",3)="" D
"RTN","LA7VOBX1",43,0)
 . S $P(LA7X,"!",2)=$P(LA7X,"!",11)
"RTN","LA7VOBX1",44,0)
 . S $P(LA7X,"!",3)=$P(LA7X,"!",12)
"RTN","LA7VOBX1",45,0)
 ;
"RTN","LA7VOBX1",46,0)
 ; Evaluate low/high reference ranges in case M code in these fields.
"RTN","LA7VOBX1",47,0)
 S:$G(SEX)="" SEX="M" S:$G(AGE)="" AGE=99
"RTN","LA7VOBX1",48,0)
 F LA7I=2,3 I $E($P(LA7X,"!",LA7I),1,3)="$S(" D
"RTN","LA7VOBX1",49,0)
 . S @("X="_$P(LA7X,"!",LA7I))
"RTN","LA7VOBX1",50,0)
 . S $P(LA7X,"!",LA7I)=X
"RTN","LA7VOBX1",51,0)
 ;
"RTN","LA7VOBX1",52,0)
 ; Put units/reference ranges back in variable LA7VAL
"RTN","LA7VOBX1",53,0)
 S $P(LA7VAL,"^",5)=LA7X
"RTN","LA7VOBX1",54,0)
 ;
"RTN","LA7VOBX1",55,0)
 ; Initialize OBX segment
"RTN","LA7VOBX1",56,0)
 S LA7OBX(0)="OBX"
"RTN","LA7VOBX1",57,0)
 S LA7OBX(1)=$$OBX1^LA7VOBX(.LA7OBXSN)
"RTN","LA7VOBX1",58,0)
 ;
"RTN","LA7VOBX1",59,0)
 ; Value type
"RTN","LA7VOBX1",60,0)
 S LA7OBX(2)=$$OBX2^LA7VOBX(63.04,LRSB)
"RTN","LA7VOBX1",61,0)
 ;
"RTN","LA7VOBX1",62,0)
 ; Observation identifer
"RTN","LA7VOBX1",63,0)
 ; build alternate code based on dataname from file #63 in case it's needed
"RTN","LA7VOBX1",64,0)
 S LA7X=$P(LA7VAL,"^",3)
"RTN","LA7VOBX1",65,0)
 S LA7ALT="CH"_LRSB_"^"_$$GET1^DID(63.04,LRSB,"","LABEL")_"^"_"99VA63"
"RTN","LA7VOBX1",66,0)
 S LA7OBX(3)=$$OBX3^LA7VOBX($P(LA7X,"!",2),$P(LA7X,"!",3),LA7ALT,LA7FS,LA7ECH)
"RTN","LA7VOBX1",67,0)
 ;
"RTN","LA7VOBX1",68,0)
 ; Test value
"RTN","LA7VOBX1",69,0)
 S LA7OBX(5)=$$OBX5^LA7VOBX($P(LA7VAL,"^"),LA7OBX(2),LA7FS,LA7ECH)
"RTN","LA7VOBX1",70,0)
 ;
"RTN","LA7VOBX1",71,0)
 ; Units - remove leading and trailing spaces
"RTN","LA7VOBX1",72,0)
 S LA7X=$P(LA7VAL,"^",5),LA7X=$$TRIM^XLFSTR(LA7X,"LR"," ")
"RTN","LA7VOBX1",73,0)
 S LA7OBX(6)=$$OBX6^LA7VOBX($P(LA7X,"!",7),"",LA7FS,LA7ECH)
"RTN","LA7VOBX1",74,0)
 ;
"RTN","LA7VOBX1",75,0)
 ; Reference range
"RTN","LA7VOBX1",76,0)
 S LA7OBX(7)=$$OBX7^LA7VOBX($P(LA7X,"!",2),$P(LA7X,"!",3),LA7FS,LA7ECH)
"RTN","LA7VOBX1",77,0)
 ;
"RTN","LA7VOBX1",78,0)
 ; Abnormal flags
"RTN","LA7VOBX1",79,0)
 S LA7OBX(8)=$$OBX8^LA7VOBX($P(LA7VAL,U,2))
"RTN","LA7VOBX1",80,0)
 ;
"RTN","LA7VOBX1",81,0)
 ; "P"artial or "F"inal results
"RTN","LA7VOBX1",82,0)
 S LA7OBX(11)=$$OBX11^LA7VOBX($S("canccommentpending"[$P(LA7VAL,"^"):$P(LA7VAL,"^"),1:"F"))
"RTN","LA7VOBX1",83,0)
 ;
"RTN","LA7VOBX1",84,0)
 ; Observation date/time - collection date/time per HL7 standard
"RTN","LA7VOBX1",85,0)
 I $P(LA76304(0),"^") S LA7OBX(14)=$$OBX14^LA7VOBX($P(LA76304(0),"^"))
"RTN","LA7VOBX1",86,0)
 ;
"RTN","LA7VOBX1",87,0)
 S LA7DIV=$P(LA7VAL,"^",9)
"RTN","LA7VOBX1",88,0)
 I LA7DIV="",$$DIV4^XUSER(.LA7DIV,$P(LA7VAL,"^",4)) S LA7DIV=$O(LA7DIV(0))
"RTN","LA7VOBX1",89,0)
 ;
"RTN","LA7VOBX1",90,0)
 ; Facility that performed the testing
"RTN","LA7VOBX1",91,0)
 S LA7OBX(15)=$$OBX15^LA7VOBX(LA7DIV,LA7FS,LA7ECH)
"RTN","LA7VOBX1",92,0)
 ;
"RTN","LA7VOBX1",93,0)
 ; Person that verified the test
"RTN","LA7VOBX1",94,0)
 S LA7OBX(16)=$$OBX16^LA7VOBX($P(LA7VAL,"^",4),LA7DIV,LA7FS,LA7ECH)
"RTN","LA7VOBX1",95,0)
 ;
"RTN","LA7VOBX1",96,0)
 ; Observation method
"RTN","LA7VOBX1",97,0)
 S LA7X=$P($P(LA7VAL,"^",3),"!",4)
"RTN","LA7VOBX1",98,0)
 I LA7X S LA7OBX(17)=$$OBX17^LA7VOBX(LA7X,LA7FS,LA7ECH)
"RTN","LA7VOBX1",99,0)
 ;
"RTN","LA7VOBX1",100,0)
 ; Equipment entity identifier
"RTN","LA7VOBX1",101,0)
 I $L($P(LA7VAL,"^",11)) S LA7OBX(18)=$$OBX18^LA7VOBX($P(LA7VAL,"^",11),LA7FS,LA7ECH)
"RTN","LA7VOBX1",102,0)
 ;
"RTN","LA7VOBX1",103,0)
 D BUILDSEG^LA7VHLU(.LA7OBX,.LA7ARRAY,LA7FS)
"RTN","LA7VOBX1",104,0)
 ;
"RTN","LA7VOBX1",105,0)
 Q
"RTN","LA7VOBX2")
0^46^B15187776
"RTN","LA7VOBX2",1,0)
LA7VOBX2 ;DALOI/JMC - LAB OBX Segment message builder (AP subscripts) cont'd ; 05/26/00
"RTN","LA7VOBX2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VOBX2",3,0)
 ;
"RTN","LA7VOBX2",4,0)
AP ; Build OBX segments for resultss that are anatomic/surgical pathology subscripts
"RTN","LA7VOBX2",5,0)
 ; Called by LA7VOBX
"RTN","LA7VOBX2",6,0)
 ;
"RTN","LA7VOBX2",7,0)
 N LA7953,LA7ACODE,LA7CODE,LA7DIV,LA7DTO,LA7IENS,LA7OBX5,LA7OBX5M,LA7SUB,LA7SUBFL,LA7VP,LA7WP,LA7X,LA7Y
"RTN","LA7VOBX2",8,0)
 ;
"RTN","LA7VOBX2",9,0)
 S (LA7953,LA7DIV,LA7VP)=""
"RTN","LA7VOBX2",10,0)
 ;
"RTN","LA7VOBX2",11,0)
 ; Surgical pathology subscript
"RTN","LA7VOBX2",12,0)
 I LRSS="SP" S LA7SUBFL=63.08
"RTN","LA7VOBX2",13,0)
 ;
"RTN","LA7VOBX2",14,0)
 ; Cytology subscript
"RTN","LA7VOBX2",15,0)
 I LRSS="CY" S LA7SUBFL=63.09
"RTN","LA7VOBX2",16,0)
 ;
"RTN","LA7VOBX2",17,0)
 ; Electron microscopy subscript
"RTN","LA7VOBX2",18,0)
 I LRSS="EM" S LA7SUBFL=63.02
"RTN","LA7VOBX2",19,0)
 ;
"RTN","LA7VOBX2",20,0)
 S LA7IENS=""
"RTN","LA7VOBX2",21,0)
 F I=3:-1:1 I $P(LRIDT,",",I) S LRIDT(I)=$P(LRIDT,",",I),LA7IENS=LA7IENS_LRIDT(I)_","
"RTN","LA7VOBX2",22,0)
 S LA7IENS=LA7IENS_LRDFN_","
"RTN","LA7VOBX2",23,0)
 S LRIDT=$P(LRIDT,",")
"RTN","LA7VOBX2",24,0)
 S LA7SUB(0)=$G(^LR(LRDFN,LRSS,LRIDT,0))
"RTN","LA7VOBX2",25,0)
 S LA7DTO=""
"RTN","LA7VOBX2",26,0)
 ;
"RTN","LA7VOBX2",27,0)
 ; Get default codes
"RTN","LA7VOBX2",28,0)
 S LA7CODE=$$DEFCODE^LA7VHLU5(LRSS,LRSB,"","")
"RTN","LA7VOBX2",29,0)
 ;
"RTN","LA7VOBX2",30,0)
 ; Initialize OBX segment
"RTN","LA7VOBX2",31,0)
 S LA7OBX(0)="OBX"
"RTN","LA7VOBX2",32,0)
 S LA7OBX(1)=$$OBX1^LA7VOBX(.LA7OBXSN)
"RTN","LA7VOBX2",33,0)
 ;
"RTN","LA7VOBX2",34,0)
 ; Value type
"RTN","LA7VOBX2",35,0)
 S LA7X=LA7SUBFL,LA7Y=LRSB
"RTN","LA7VOBX2",36,0)
 I LRSS="SP" D
"RTN","LA7VOBX2",37,0)
 . I LRSB=1.2 S LA7X=63.817,LA7Y=1
"RTN","LA7VOBX2",38,0)
 . I LRSB="10,1.5" S LA7X=63.82,LA7Y=.01
"RTN","LA7VOBX2",39,0)
 . I LRSB="10,2" S LA7X=63.12,LA7Y=2
"RTN","LA7VOBX2",40,0)
 . I LRSB="10,5" S LA7X=63.819,LA7Y=1
"RTN","LA7VOBX2",41,0)
 S LA7OBX(2)=$$OBX2^LA7VOBX(LA7X,LA7Y)
"RTN","LA7VOBX2",42,0)
 ;
"RTN","LA7VOBX2",43,0)
 ; Observation identifier
"RTN","LA7VOBX2",44,0)
 S LA7OBX(3)=$$OBX3^LA7VOBX($P(LA7CODE,"!",2),$P(LA7CODE,"!",3),"",LA7FS,LA7ECH)
"RTN","LA7VOBX2",45,0)
 ;
"RTN","LA7VOBX2",46,0)
 ; Observation sub-ID
"RTN","LA7VOBX2",47,0)
 ; Create sub-ID for supplementary reports and special studies
"RTN","LA7VOBX2",48,0)
 I LRSS="SP" D SUBID
"RTN","LA7VOBX2",49,0)
 ;
"RTN","LA7VOBX2",50,0)
 ; Build result field
"RTN","LA7VOBX2",51,0)
 I LRSB=.012 D
"RTN","LA7VOBX2",52,0)
 . N LA7I,LA7X,LA7Y
"RTN","LA7VOBX2",53,0)
 . S LA7I=0
"RTN","LA7VOBX2",54,0)
 . F  S LA7I=$O(^LR(LRDFN,LRSS,LRIDT,.1,LA7I)) Q:'LA7I  D
"RTN","LA7VOBX2",55,0)
 . . S LA7X=$G(^LR(LRDFN,LRSS,LRIDT,.1,LA7I,0))
"RTN","LA7VOBX2",56,0)
 . . S LA7Y(LA7I)=$P(LA7X,"^")
"RTN","LA7VOBX2",57,0)
 . S LA7OBX(5)=$$OBX5R^LA7VOBX(.LA7Y,LA7OBX(2),LA7FS,LA7ECH)
"RTN","LA7VOBX2",58,0)
 ;
"RTN","LA7VOBX2",59,0)
 I LRSB'=.012 D
"RTN","LA7VOBX2",60,0)
 . I LRSS="SP",$P(LRSB,",")=10,LRSB'="10,5" Q
"RTN","LA7VOBX2",61,0)
 . I LRSS="SP",LRSB=1.2 N LRSB S LA7SUBFL=63.817,LRSB=1
"RTN","LA7VOBX2",62,0)
 . I LRSS="SP",LRSB="10,5" N LRSB S LA7SUBFL=63.819,LRSB=1
"RTN","LA7VOBX2",63,0)
 . D OBX5M^LA7VOBX(LA7SUBFL,LA7IENS,LRSB,.LA7WP,LA7FS,LA7ECH)
"RTN","LA7VOBX2",64,0)
 . D BUILDSEG^LA7VHLU(.LA7WP,.LA7OBX5M,"")
"RTN","LA7VOBX2",65,0)
 . M LA7OBX(5)=LA7OBX5M
"RTN","LA7VOBX2",66,0)
 ;
"RTN","LA7VOBX2",67,0)
 I LRSS="SP",$P(LRSB,",")=10 D
"RTN","LA7VOBX2",68,0)
 . N LA7VAL,X
"RTN","LA7VOBX2",69,0)
 . I LRSB=10 D
"RTN","LA7VOBX2",70,0)
 . . S LA7VAL=$$GET1^DIQ(63.12,LA7IENS,.01)
"RTN","LA7VOBX2",71,0)
 . . S X=$$GET1^DIQ(63.12,LA7IENS,".01:2")
"RTN","LA7VOBX2",72,0)
 . . I $L(X) S LA7VAL=$S($E(X,1,2)="T-":"",1:"T-")_X_"^"_LA7VAL_"^SNM"
"RTN","LA7VOBX2",73,0)
 . . S LA7OBX(5)=$$OBX5^LA7VOBX(LA7VAL,LA7OBX(2),LA7FS,LA7ECH)
"RTN","LA7VOBX2",74,0)
 . I LRSB="10,2" D
"RTN","LA7VOBX2",75,0)
 . . S LA7VAL=$$GET1^DIQ(63.12,LA7IENS,2)
"RTN","LA7VOBX2",76,0)
 . . S LA7OBX(5)=$$OBX5^LA7VOBX(LA7VAL,LA7OBX(2),LA7FS,LA7ECH)
"RTN","LA7VOBX2",77,0)
 . . S LA7OBX(6)=$$OBX6^LA7VOBX("g","",LA7FS,LA7ECH)
"RTN","LA7VOBX2",78,0)
 ;
"RTN","LA7VOBX2",79,0)
 ; Don't build this segment if no results/value to send
"RTN","LA7VOBX2",80,0)
 I $G(LA7OBX(5,0))="",$G(LA7OBX(5))="" Q
"RTN","LA7VOBX2",81,0)
 ;
"RTN","LA7VOBX2",82,0)
 ; "P"artial, "F"inal , "A"mended results
"RTN","LA7VOBX2",83,0)
 ; If not release date then pending
"RTN","LA7VOBX2",84,0)
 I '$P(LA7SUB(0),"^",11) S LA7OBX(11)="P"
"RTN","LA7VOBX2",85,0)
 ;
"RTN","LA7VOBX2",86,0)
 ; If release date then check for changes
"RTN","LA7VOBX2",87,0)
 I $P(LA7SUB(0),"^",11) D
"RTN","LA7VOBX2",88,0)
 . I $P(LA7SUB(0),"^",15) S LA7OBX(11)="C"
"RTN","LA7VOBX2",89,0)
 . E  S LA7OBX(11)="F"
"RTN","LA7VOBX2",90,0)
 ;
"RTN","LA7VOBX2",91,0)
 ; Date/time of supplementary/special studies reports
"RTN","LA7VOBX2",92,0)
 I LRSS="SP" D
"RTN","LA7VOBX2",93,0)
 . I LRSB=1.2 S LA7DTO=$$GET1^DIQ(63.817,LA7IENS,.01,"I")
"RTN","LA7VOBX2",94,0)
 . I LRSB="10,5" S LA7DTO=$$GET1^DIQ(63.819,LA7IENS,.02,"I")
"RTN","LA7VOBX2",95,0)
 ;
"RTN","LA7VOBX2",96,0)
 I LA7DTO S LA7OBX(14)=$$OBX14^LA7VOBX(LA7DTO)
"RTN","LA7VOBX2",97,0)
 ;
"RTN","LA7VOBX2",98,0)
 I $P(LA7SUB(0),"^",13),$$DIV4^XUSER(.LA7DIV,$P(LA7SUB(0),"^",2)) S LA7DIV=$O(LA7DIV(0))
"RTN","LA7VOBX2",99,0)
 ;
"RTN","LA7VOBX2",100,0)
 ; Facility that performed the testing
"RTN","LA7VOBX2",101,0)
 S LA7OBX(15)=$$OBX15^LA7VOBX(LA7DIV,LA7FS,LA7ECH)
"RTN","LA7VOBX2",102,0)
 ;
"RTN","LA7VOBX2",103,0)
 ; Person that verified the test
"RTN","LA7VOBX2",104,0)
 S LA7VP=$P(LA7SUB(0),"^",13)
"RTN","LA7VOBX2",105,0)
 I LA7VP S LA7OBX(16)=$$OBX16^LA7VOBX(LA7VP,LA7DIV,LA7FS,LA7ECH)
"RTN","LA7VOBX2",106,0)
 ;
"RTN","LA7VOBX2",107,0)
 D BUILDSEG^LA7VHLU(.LA7OBX,.LA7ARRAY,LA7FS)
"RTN","LA7VOBX2",108,0)
 ;
"RTN","LA7VOBX2",109,0)
 Q
"RTN","LA7VOBX2",110,0)
 ;
"RTN","LA7VOBX2",111,0)
 ;
"RTN","LA7VOBX2",112,0)
SUBID ; Build sub-id for "SP" subscript
"RTN","LA7VOBX2",113,0)
 ; Used to identify supplementary reports, specimens and related special
"RTN","LA7VOBX2",114,0)
 ; studies performed on thoese specimens.
"RTN","LA7VOBX2",115,0)
 ;
"RTN","LA7VOBX2",116,0)
 N LA7SUBID
"RTN","LA7VOBX2",117,0)
 ;
"RTN","LA7VOBX2",118,0)
 S LA7SUBID=""
"RTN","LA7VOBX2",119,0)
 ;
"RTN","LA7VOBX2",120,0)
 ; Sub-id's for supplementary reports
"RTN","LA7VOBX2",121,0)
 I LRSB=1.2 S LA7SUBID="1."_$P(LA7IENS,",")
"RTN","LA7VOBX2",122,0)
 ;
"RTN","LA7VOBX2",123,0)
 ; Sub-id's for specimens and special studies
"RTN","LA7VOBX2",124,0)
 I LRSB=10!(LRSB="10,2") S LA7SUBID="10."_$P(LA7IENS,",")
"RTN","LA7VOBX2",125,0)
 I LRSB="10,1.5"!(LRSB="10,5") S LA7SUBID="10."_$P(LA7IENS,",",2)_"."_$P(LA7IENS,",")
"RTN","LA7VOBX2",126,0)
 ;
"RTN","LA7VOBX2",127,0)
 I $L(LA7SUBID) S LA7OBX(4)=$$OBX4^LA7VOBX(LA7SUBID,LA7FS,LA7ECH)
"RTN","LA7VOBX2",128,0)
 ;
"RTN","LA7VOBX2",129,0)
 Q
"RTN","LA7VOBX3")
0^49^B26075050
"RTN","LA7VOBX3",1,0)
LA7VOBX3 ;DALOI/JMC - LAB OBX Segment message builder (MI subscripts) cont'd ; 5/26/00
"RTN","LA7VOBX3",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VOBX3",3,0)
 ;
"RTN","LA7VOBX3",4,0)
MI ; Build OBX segments for resultss that are microbiology subscript.
"RTN","LA7VOBX3",5,0)
 ; Called by LA7VOBX
"RTN","LA7VOBX3",6,0)
 ;
"RTN","LA7VOBX3",7,0)
 N I,LA761,LA76305,LA7CODE,LA7DIV,LA7ID,LA7IENS,LA7LOINC,LA7NLT,LA7OBX,LA7ORS,LA7PARNT,LA7SUBFL,LA7VAL,LA7VERP
"RTN","LA7VOBX3",8,0)
 ;
"RTN","LA7VOBX3",9,0)
 I $P(LRIDT,",",2) S LRIDT(2)=$P(LRIDT,",",2),LRIDT(3)=$P(LRIDT,",",3),LRIDT=$P(LRIDT,",")
"RTN","LA7VOBX3",10,0)
 ;
"RTN","LA7VOBX3",11,0)
 I '$D(^LR(LRDFN,LRSS,LRIDT)) Q
"RTN","LA7VOBX3",12,0)
 ;
"RTN","LA7VOBX3",13,0)
 F I=0,1,5,8,11,16 S LA76305(I)=$G(^LR(LRDFN,LRSS,LRIDT,I))
"RTN","LA7VOBX3",14,0)
 ;
"RTN","LA7VOBX3",15,0)
 S (LA7CODE,LA7ID,LA7LOINC,LA7NLT,LA7ORS,LA7SUBFL,LA7VAL,LA7VERP)=""
"RTN","LA7VOBX3",16,0)
 ;
"RTN","LA7VOBX3",17,0)
 ; Specimen topography
"RTN","LA7VOBX3",18,0)
 S LA761=$P(LA76305(0),"^",5)
"RTN","LA7VOBX3",19,0)
 ;
"RTN","LA7VOBX3",20,0)
 ; Gram stain
"RTN","LA7VOBX3",21,0)
 I LRSB=11.6 D
"RTN","LA7VOBX3",22,0)
 . N LA7ERR
"RTN","LA7VOBX3",23,0)
 . S LA7VERP=$P(LA76305(1),"^",3)
"RTN","LA7VOBX3",24,0)
 . S LA7ORS=$P(LA76305(1),"^",2)
"RTN","LA7VOBX3",25,0)
 . S LA7OBX(2)=$$OBX2^LA7VOBX(63.05,11.6)
"RTN","LA7VOBX3",26,0)
 . S LA7IENS=LRIDT(2)_","_LRIDT_","_LRDFN_","
"RTN","LA7VOBX3",27,0)
 . S LA7VAL=$$GET1^DIQ(63.29,LA7IENS,.01,"","LA7ERR")
"RTN","LA7VOBX3",28,0)
 ;
"RTN","LA7VOBX3",29,0)
 ; Micro organism
"RTN","LA7VOBX3",30,0)
 I $P(LRSB,",")=12 D
"RTN","LA7VOBX3",31,0)
 . S LA7VERP=$P(LA76305(1),"^",3)
"RTN","LA7VOBX3",32,0)
 . S LA7ORS=$P(LA76305(1),"^",2)
"RTN","LA7VOBX3",33,0)
 . S LA7SUBFL=63.3
"RTN","LA7VOBX3",34,0)
 . ; Working on colony count
"RTN","LA7VOBX3",35,0)
 . I $P(LRSB,",",2)=1 D CC Q
"RTN","LA7VOBX3",36,0)
 . ; Working on organism
"RTN","LA7VOBX3",37,0)
 . I $G(LRIDT(3))="" D ORG Q
"RTN","LA7VOBX3",38,0)
 . ; Working on susceptibilities
"RTN","LA7VOBX3",39,0)
 . I $P(LA76305(1),"^",4) S LA7VERP=$P(LA76305(1),"^",4)
"RTN","LA7VOBX3",40,0)
 . D MIC
"RTN","LA7VOBX3",41,0)
 ;
"RTN","LA7VOBX3",42,0)
 ; Parasite organism
"RTN","LA7VOBX3",43,0)
 I $P(LRSB,",")=16 D
"RTN","LA7VOBX3",44,0)
 . S LA7ORS=$P(LA76305(5),"^",2)
"RTN","LA7VOBX3",45,0)
 . S LA7VERP=$P(LA76305(5),"^",3)
"RTN","LA7VOBX3",46,0)
 . ; Working on organism
"RTN","LA7VOBX3",47,0)
 . S LA7SUBFL=63.34 D ORG
"RTN","LA7VOBX3",48,0)
 ;
"RTN","LA7VOBX3",49,0)
 ; Mycology organism
"RTN","LA7VOBX3",50,0)
 I $P(LRSB,",")=20 D
"RTN","LA7VOBX3",51,0)
 . S LA7ORS=$P(LA76305(8),"^",2)
"RTN","LA7VOBX3",52,0)
 . S LA7VERP=$P(LA76305(8),"^",3)
"RTN","LA7VOBX3",53,0)
 . S LA7SUBFL=63.37
"RTN","LA7VOBX3",54,0)
 . ; Working on colony count
"RTN","LA7VOBX3",55,0)
 . I $P(LRSB,",",2)=1 D CC Q
"RTN","LA7VOBX3",56,0)
 . ; Working on organism
"RTN","LA7VOBX3",57,0)
 . D ORG
"RTN","LA7VOBX3",58,0)
 ;
"RTN","LA7VOBX3",59,0)
 ; Acid Fast stain
"RTN","LA7VOBX3",60,0)
 I LRSB=24 D
"RTN","LA7VOBX3",61,0)
 . N LA7ERR
"RTN","LA7VOBX3",62,0)
 . S LA7VERP=$P(LA76305(11),"^",3)
"RTN","LA7VOBX3",63,0)
 . S LA7ORS=$P(LA76305(11),"^",2)
"RTN","LA7VOBX3",64,0)
 . S LA7OBX(2)=$$OBX2^LA7VOBX(63.05,24)
"RTN","LA7VOBX3",65,0)
 . S LA7IENS=LRIDT_","_LRDFN_","
"RTN","LA7VOBX3",66,0)
 . S LA7VAL=$$GET1^DIQ(63.05,LA7IENS,24,"","LA7ERR")
"RTN","LA7VOBX3",67,0)
 ;
"RTN","LA7VOBX3",68,0)
 ; Acid Fast stain quantity
"RTN","LA7VOBX3",69,0)
 I LRSB=25 D
"RTN","LA7VOBX3",70,0)
 . N LA7ERR
"RTN","LA7VOBX3",71,0)
 . S LA7VERP=$P(LA76305(11),"^",3)
"RTN","LA7VOBX3",72,0)
 . S LA7ORS=$P(LA76305(11),"^",2)
"RTN","LA7VOBX3",73,0)
 . S LA7OBX(2)=$$OBX2^LA7VOBX(63.05,25)
"RTN","LA7VOBX3",74,0)
 . S LA7IENS=LRIDT_","_LRDFN_","
"RTN","LA7VOBX3",75,0)
 . S LA7VAL=$$GET1^DIQ(63.05,LA7IENS,25,"","LA7ERR")
"RTN","LA7VOBX3",76,0)
 ;
"RTN","LA7VOBX3",77,0)
 ; TB organism
"RTN","LA7VOBX3",78,0)
 I $P(LRSB,",")=26 D
"RTN","LA7VOBX3",79,0)
 . S LA7ORS=$P(LA76305(11),"^",2)
"RTN","LA7VOBX3",80,0)
 . S LA7VERP=$P(LA76305(11),"^",5)
"RTN","LA7VOBX3",81,0)
 . S LA7SUBFL=63.39
"RTN","LA7VOBX3",82,0)
 . ; Working on organism
"RTN","LA7VOBX3",83,0)
 . I $G(LRIDT(3))="" D ORG Q
"RTN","LA7VOBX3",84,0)
 . ; Working on susceptibilities
"RTN","LA7VOBX3",85,0)
 . D MIC
"RTN","LA7VOBX3",86,0)
 ;
"RTN","LA7VOBX3",87,0)
 ; Virology virus
"RTN","LA7VOBX3",88,0)
 I $P(LRSB,",")=36 D
"RTN","LA7VOBX3",89,0)
 . S LA7ORS=$P(LA76305(16),"^",2)
"RTN","LA7VOBX3",90,0)
 . S LA7VERP=$P(LA76305(16),"^",3)
"RTN","LA7VOBX3",91,0)
 . ; Working on virus
"RTN","LA7VOBX3",92,0)
 . S LA7SUBFL=63.43
"RTN","LA7VOBX3",93,0)
 . D ORG
"RTN","LA7VOBX3",94,0)
 ;
"RTN","LA7VOBX3",95,0)
 D GEN
"RTN","LA7VOBX3",96,0)
 ;
"RTN","LA7VOBX3",97,0)
 Q
"RTN","LA7VOBX3",98,0)
 ;
"RTN","LA7VOBX3",99,0)
 ;
"RTN","LA7VOBX3",100,0)
CC ; Organism's Colony count
"RTN","LA7VOBX3",101,0)
 ; If "CFU/ml" found then move units to OBX-6 (Units).
"RTN","LA7VOBX3",102,0)
 N LA7X
"RTN","LA7VOBX3",103,0)
 ;
"RTN","LA7VOBX3",104,0)
 S LA7ID=$P(LRSB,",")_"-"_LRIDT(2)
"RTN","LA7VOBX3",105,0)
 S LA7IENS=LRIDT(2)_","_LRIDT_","_LRDFN_","
"RTN","LA7VOBX3",106,0)
 S LA7OBX(2)=$$OBX2^LA7VOBX(LA7SUBFL,1)
"RTN","LA7VOBX3",107,0)
 S LA7VAL=$$GET1^DIQ(LA7SUBFL,LA7IENS,1)
"RTN","LA7VOBX3",108,0)
 S LA7X=$$UP^XLFSTR(LA7VAL)
"RTN","LA7VOBX3",109,0)
 I LA7X["CFU/ML" D
"RTN","LA7VOBX3",110,0)
 . S LA7OBX(6)="CFU/ml"
"RTN","LA7VOBX3",111,0)
 . S LA7X("CFU/ml")="",LA7X("CFU/ML")=""
"RTN","LA7VOBX3",112,0)
 . S LA7VAL=$$REPLACE^XLFSTR(LA7VAL,.LA7X)
"RTN","LA7VOBX3",113,0)
 ;
"RTN","LA7VOBX3",114,0)
 Q
"RTN","LA7VOBX3",115,0)
 ;
"RTN","LA7VOBX3",116,0)
 ;
"RTN","LA7VOBX3",117,0)
ORG ; Organism
"RTN","LA7VOBX3",118,0)
 ;
"RTN","LA7VOBX3",119,0)
 S LA7ID=LRSB_"-"_LRIDT(2)
"RTN","LA7VOBX3",120,0)
 S LA7OBX(2)=$$OBX2^LA7VOBX(LA7SUBFL,.01)
"RTN","LA7VOBX3",121,0)
 S LA7IENS=LRIDT(2)_","_LRIDT_","_LRDFN_","
"RTN","LA7VOBX3",122,0)
 S LA7VAL=$$GET1^DIQ(LA7SUBFL,LA7IENS,.01)
"RTN","LA7VOBX3",123,0)
 ;
"RTN","LA7VOBX3",124,0)
 ; Check for Snomed coding
"RTN","LA7VOBX3",125,0)
 S X=$$GET1^DIQ(LA7SUBFL,LA7IENS,".01:2")
"RTN","LA7VOBX3",126,0)
 I $L(X) S LA7VAL=X_"^"_LA7VAL_"^SNM"
"RTN","LA7VOBX3",127,0)
 ;
"RTN","LA7VOBX3",128,0)
 S LA7OBX(8)=$$OBX8^LA7VOBX("A")
"RTN","LA7VOBX3",129,0)
 ;
"RTN","LA7VOBX3",130,0)
 Q
"RTN","LA7VOBX3",131,0)
 ;
"RTN","LA7VOBX3",132,0)
 ;
"RTN","LA7VOBX3",133,0)
MIC ; Organism's susceptibilities
"RTN","LA7VOBX3",134,0)
 ;
"RTN","LA7VOBX3",135,0)
 N LA7SUB
"RTN","LA7VOBX3",136,0)
 ;
"RTN","LA7VOBX3",137,0)
 ; Bact or TB organism
"RTN","LA7VOBX3",138,0)
 S LA7SUB=$S($P(LRSB,",")=12:3,1:12)
"RTN","LA7VOBX3",139,0)
 ;
"RTN","LA7VOBX3",140,0)
 S LA7X=$O(^LAB(62.06,"AD",LRIDT(3),0)) Q:'LA7X
"RTN","LA7VOBX3",141,0)
 S LA7OBX(2)=$$OBX2^LA7VOBX(62.06,.01)
"RTN","LA7VOBX3",142,0)
 S LA7VAL=$P($G(^LR(LRDFN,"MI",LRIDT,LA7SUB,LRIDT(2),LRIDT(3))),"^")
"RTN","LA7VOBX3",143,0)
 I "SIR"[LA7VAL S LA7OBX(8)=$$OBX8^LA7VOBX(LA7VAL)
"RTN","LA7VOBX3",144,0)
 ;
"RTN","LA7VOBX3",145,0)
 Q
"RTN","LA7VOBX3",146,0)
 ;
"RTN","LA7VOBX3",147,0)
 ;
"RTN","LA7VOBX3",148,0)
GEN ; Fields common to all MI OBX segments.
"RTN","LA7VOBX3",149,0)
 ;
"RTN","LA7VOBX3",150,0)
 S LA7CODE=$$DEFCODE^LA7VHLU5(LRSS,LRSB,LA7CODE,LA761)
"RTN","LA7VOBX3",151,0)
 ;
"RTN","LA7VOBX3",152,0)
 ; Initialize OBX segment
"RTN","LA7VOBX3",153,0)
 S LA7OBX(0)="OBX"
"RTN","LA7VOBX3",154,0)
 S LA7OBX(1)=$$OBX1^LA7VOBX(.LA7OBXSN)
"RTN","LA7VOBX3",155,0)
 ;
"RTN","LA7VOBX3",156,0)
 S (LA7OBX(3),LA7POBX3)=$$OBX3^LA7VOBX($P(LA7CODE,"!",2),$P(LA7CODE,"!",3),"",LA7FS,LA7ECH)
"RTN","LA7VOBX3",157,0)
 ;
"RTN","LA7VOBX3",158,0)
 ; Parent
"RTN","LA7VOBX3",159,0)
 I $L(LA7ID) S (LA7OBX(4),LA7POBX4)=$$OBX4^LA7VOBX(LA7ID,LA7FS,LA7ECH)
"RTN","LA7VOBX3",160,0)
 ;
"RTN","LA7VOBX3",161,0)
 ; Test value
"RTN","LA7VOBX3",162,0)
 ; Save for parent-child relationship in subsequent segments.
"RTN","LA7VOBX3",163,0)
 S (LA7OBX(5),LA7POBX5)=$$OBX5^LA7VOBX(LA7VAL,LA7OBX(2),LA7FS,LA7ECH)
"RTN","LA7VOBX3",164,0)
 ;
"RTN","LA7VOBX3",165,0)
 ;
"RTN","LA7VOBX3",166,0)
 ; Order result status - "P"artial, "F"inal , "A"mended results
"RTN","LA7VOBX3",167,0)
 ; If no status from individual components then use status from zeroth node.
"RTN","LA7VOBX3",168,0)
 ; If no release date then pending else final
"RTN","LA7VOBX3",169,0)
 ; If amended, overrides all other status
"RTN","LA7VOBX3",170,0)
 I LA7ORS="" S LA7ORS=$S('$P(LA76305(0),"^",3):"P",1:"F")
"RTN","LA7VOBX3",171,0)
 I $P(LA76305(0),"^",9) S LA7ORS="A"
"RTN","LA7VOBX3",172,0)
 S LA7OBX(11)=$$OBX11^LA7VOBX(LA7ORS)
"RTN","LA7VOBX3",173,0)
 ;
"RTN","LA7VOBX3",174,0)
 S LA7DIV=""
"RTN","LA7VOBX3",175,0)
 I $$DIV4^XUSER(.LA7DIV,$P(LA76305(0),"^",4)) S LA7DIV=$O(LA7DIV(0))
"RTN","LA7VOBX3",176,0)
 ;
"RTN","LA7VOBX3",177,0)
 ; Observation date/time - collection date/time per HL7 standard
"RTN","LA7VOBX3",178,0)
 I $P(LA76305(0),"^") S LA7OBX(14)=$$OBX14^LA7VOBX($P(LA76305(0),"^"))
"RTN","LA7VOBX3",179,0)
 ;
"RTN","LA7VOBX3",180,0)
 ; Facility that performed the testing
"RTN","LA7VOBX3",181,0)
 S LA7OBX(15)=$$OBX15^LA7VOBX(LA7DIV,LA7FS,LA7ECH)
"RTN","LA7VOBX3",182,0)
 ;
"RTN","LA7VOBX3",183,0)
 ; Person that verified the test
"RTN","LA7VOBX3",184,0)
 I $P(LA76305(0),"^",4) S LA7VERP=$P(LA76305(0),"^",4)
"RTN","LA7VOBX3",185,0)
 I LA7VERP S LA7OBX(16)=$$OBX16^LA7VOBX(LA7VERP,LA7DIV,LA7FS,LA7ECH)
"RTN","LA7VOBX3",186,0)
 ;
"RTN","LA7VOBX3",187,0)
 D BUILDSEG^LA7VHLU(.LA7OBX,.LA7ARRAY,LA7FS)
"RTN","LA7VOBX3",188,0)
 ;
"RTN","LA7VOBX3",189,0)
 Q
"RTN","LA7VOBXA")
0^53^B30663223
"RTN","LA7VOBXA",1,0)
LA7VOBXA ;DALOI/JMC - LAB OBX Segment message builder (cont'd) ; 11-17-98
"RTN","LA7VOBXA",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VOBXA",3,0)
 ;
"RTN","LA7VOBXA",4,0)
 Q
"RTN","LA7VOBXA",5,0)
 ;
"RTN","LA7VOBXA",6,0)
OBX2 ; Build OBX-2 sequence - Value type
"RTN","LA7VOBXA",7,0)
 ;
"RTN","LA7VOBXA",8,0)
 ; default value - string data
"RTN","LA7VOBXA",9,0)
 S LA7VAL="ST"
"RTN","LA7VOBXA",10,0)
 S LA7TYP="",LA7FILE=$G(LA7FILE),LA7FIELD=$G(LA7FIELD)
"RTN","LA7VOBXA",11,0)
 ;
"RTN","LA7VOBXA",12,0)
 I LA7FILE,LA7FIELD S LA7TYP=$$GET1^DID(LA7FILE,LA7FIELD,"","TYPE","","LA7ERR")
"RTN","LA7VOBXA",13,0)
 ;
"RTN","LA7VOBXA",14,0)
 I LA7TYP="DATE/TIME" S LA7VAL="TS"
"RTN","LA7VOBXA",15,0)
 I LA7TYP="FREE TEXT" S LA7VAL="ST"
"RTN","LA7VOBXA",16,0)
 I LA7TYP="WORD-PROCESSING" S LA7VAL="FT"
"RTN","LA7VOBXA",17,0)
 I LA7TYP="NUMERIC" S LA7VAL="NM"
"RTN","LA7VOBXA",18,0)
 I LA7TYP="SET OF CODES" S LA7VAL="CE"
"RTN","LA7VOBXA",19,0)
 I LA7TYP="POINTER" S LA7VAL="CE"
"RTN","LA7VOBXA",20,0)
 ;
"RTN","LA7VOBXA",21,0)
 Q
"RTN","LA7VOBXA",22,0)
 ;
"RTN","LA7VOBXA",23,0)
 ;
"RTN","LA7VOBXA",24,0)
OBX3 ; Build OBX-3 sequence - Observation identifier field
"RTN","LA7VOBXA",25,0)
 ;
"RTN","LA7VOBXA",26,0)
 ; Initialize variables 
"RTN","LA7VOBXA",27,0)
 S LA7J=1,LA7Y=""
"RTN","LA7VOBXA",28,0)
 ;
"RTN","LA7VOBXA",29,0)
 ; Identify file #64 entry from NLT code.
"RTN","LA7VOBXA",30,0)
 ; If no LOINC code passed then use default LOINC code from #64 if specified.
"RTN","LA7VOBXA",31,0)
 I $L(LA7NLT) D
"RTN","LA7VOBXA",32,0)
 . ;S LA764=$$FIND1^DIC(64,"","OMX",LA7NLT)
"RTN","LA7VOBXA",33,0)
 . S LA764=$O(^LAM("E",LA7NLT,0))
"RTN","LA7VOBXA",34,0)
 . I LA764,LA7953="" S LA7953=$$GET1^DIQ(64,LA764_",",25,"I")
"RTN","LA7VOBXA",35,0)
 ;
"RTN","LA7VOBXA",36,0)
 ; Build sequence using LOINC codes only
"RTN","LA7VOBXA",37,0)
 ; LOINC code/code name/"LN"
"RTN","LA7VOBXA",38,0)
 I $L(LA7953) D
"RTN","LA7VOBXA",39,0)
 . N LA7IENS,LA7X,LA7Z
"RTN","LA7VOBXA",40,0)
 . S LA7953=$P(LA7953,"-")
"RTN","LA7VOBXA",41,0)
 . S LA7IENS=LA7953_","
"RTN","LA7VOBXA",42,0)
 . D GETS^DIQ(95.3,LA7IENS,".01;80","E","LA7X")
"RTN","LA7VOBXA",43,0)
 . ; Invalid code???
"RTN","LA7VOBXA",44,0)
 . I $G(LA7X(95.3,LA7IENS,.01,"E"))="" Q
"RTN","LA7VOBXA",45,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3($G(LA7X(95.3,LA7IENS,.01,"E")),LA7FS_LA7ECH)
"RTN","LA7VOBXA",46,0)
 . S $P(LA7Y,$E(LA7ECH,1),LA7J)=LA7Z
"RTN","LA7VOBXA",47,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3($G(LA7X(95.3,LA7IENS,80,"E")),LA7FS_LA7ECH)
"RTN","LA7VOBXA",48,0)
 . S $P(LA7Y,$E(LA7ECH,1),LA7J+1)=LA7Z
"RTN","LA7VOBXA",49,0)
 . S $P(LA7Y,$E(LA7ECH,1),LA7J+2)="LN"
"RTN","LA7VOBXA",50,0)
 . S LA7J=4
"RTN","LA7VOBXA",51,0)
 ;
"RTN","LA7VOBXA",52,0)
 ; Build sequence using NLT codes
"RTN","LA7VOBXA",53,0)
 ; File #64 NLT code/NLT code name/"99VA64"
"RTN","LA7VOBXA",54,0)
 I $L(LA7NLT) D
"RTN","LA7VOBXA",55,0)
 . N LA764,LA7Z
"RTN","LA7VOBXA",56,0)
 . ; If LOINC is primary make NLT alternate, otherwise NLT primary.
"RTN","LA7VOBXA",57,0)
 . ;S LA764=$$FIND1^DIC(64,"","OMX",LA7NLT)
"RTN","LA7VOBXA",58,0)
 . S LA764=$O(^LAM("E",LA7NLT,0))
"RTN","LA7VOBXA",59,0)
 . I 'LA764 Q
"RTN","LA7VOBXA",60,0)
 . S $P(LA7Y,$E(LA7ECH,1),LA7J)=LA7NLT
"RTN","LA7VOBXA",61,0)
 . S LA7Z=$$GET1^DIQ(64,LA764_",",.01)
"RTN","LA7VOBXA",62,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)
"RTN","LA7VOBXA",63,0)
 . S $P(LA7Y,$E(LA7ECH,1),LA7J+1)=LA7Z
"RTN","LA7VOBXA",64,0)
 . S $P(LA7Y,$E(LA7ECH,1),LA7J+2)="99VA64"
"RTN","LA7VOBXA",65,0)
 . S LA7J=LA7J+3
"RTN","LA7VOBXA",66,0)
 ;
"RTN","LA7VOBXA",67,0)
 ; Non-standard/non-VA code
"RTN","LA7VOBXA",68,0)
 ; Don't use alternate code when it's "99VA63" and we've already encoded
"RTN","LA7VOBXA",69,0)
 ; a primary and alternate. If alternate is a non-VA code then use as
"RTN","LA7VOBXA",70,0)
 ; alternate code.
"RTN","LA7VOBXA",71,0)
 I $L(LA7ALT) D
"RTN","LA7VOBXA",72,0)
 . I LA7J>4,$P(LA7ALT,"^",3)="99VA63" Q
"RTN","LA7VOBXA",73,0)
 . I LA7J>4 S LA7J=4
"RTN","LA7VOBXA",74,0)
 . S $P(LA7Y,$E(LA7ECH,1),LA7J)=$$CHKDATA^LA7VHLU3($P(LA7ALT,"^"),LA7FS_LA7ECH)
"RTN","LA7VOBXA",75,0)
 . S $P(LA7Y,$E(LA7ECH,1),LA7J+1)=$$CHKDATA^LA7VHLU3($P(LA7ALT,"^",2),LA7FS_LA7ECH)
"RTN","LA7VOBXA",76,0)
 . S $P(LA7Y,$E(LA7ECH,1),LA7J+2)=$$CHKDATA^LA7VHLU3($P(LA7ALT,"^",3),LA7FS_LA7ECH)
"RTN","LA7VOBXA",77,0)
 ;
"RTN","LA7VOBXA",78,0)
 Q
"RTN","LA7VOBXA",79,0)
 ;
"RTN","LA7VOBXA",80,0)
 ;
"RTN","LA7VOBXA",81,0)
OBX5 ; Build OBX-5 sequence - Observation value
"RTN","LA7VOBXA",82,0)
 ; Removes trailing spaces on string and text results.
"RTN","LA7VOBXA",83,0)
 ; Removes leading & trailing spaces on numeric results.
"RTN","LA7VOBXA",84,0)
 ;
"RTN","LA7VOBXA",85,0)
 S LA7Y=""
"RTN","LA7VOBXA",86,0)
 ;
"RTN","LA7VOBXA",87,0)
 I $G(LA7OBX2)="" S LA7OBX2="ST" ; default value type
"RTN","LA7VOBXA",88,0)
 I LA7OBX2="ST"!(LA7OBX2="TX") D
"RTN","LA7VOBXA",89,0)
 . S LA7VAL=$$TRIM^XLFSTR(LA7VAL,"R"," ")
"RTN","LA7VOBXA",90,0)
 . S LA7Y=$$CHKDATA^LA7VHLU3(LA7VAL,LA7FS_LA7ECH)
"RTN","LA7VOBXA",91,0)
 I LA7OBX2="NM" S LA7Y=$$TRIM^XLFSTR(LA7VAL,"RL"," ")
"RTN","LA7VOBXA",92,0)
 I LA7OBX2="TS" D
"RTN","LA7VOBXA",93,0)
 . S LA7VAL=$$CHKDT^LA7VHLU1(LA7VAL)
"RTN","LA7VOBXA",94,0)
 . S LA7Y=$$FMTHL7^XLFDT(LA7VAL)
"RTN","LA7VOBXA",95,0)
 I LA7OBX2="CE" D
"RTN","LA7VOBXA",96,0)
 . N I,X
"RTN","LA7VOBXA",97,0)
 . F I=1:1:6 D
"RTN","LA7VOBXA",98,0)
 . . I '$L($P(LA7VAL,"^",I)) Q
"RTN","LA7VOBXA",99,0)
 . . S X=$$CHKDATA^LA7VHLU3($P(LA7VAL,"^",I),LA7FS_LA7ECH)
"RTN","LA7VOBXA",100,0)
 . . S $P(LA7Y,$E(LA7ECH),I)=X
"RTN","LA7VOBXA",101,0)
 ;
"RTN","LA7VOBXA",102,0)
 Q
"RTN","LA7VOBXA",103,0)
 ;
"RTN","LA7VOBXA",104,0)
 ;
"RTN","LA7VOBXA",105,0)
OBX5M ; Build OBX-5 sequence - Observation value - multi-line textual result
"RTN","LA7VOBXA",106,0)
 ;
"RTN","LA7VOBXA",107,0)
 K LA7WP
"RTN","LA7VOBXA",108,0)
 ;
"RTN","LA7VOBXA",109,0)
 S LA7WP=""
"RTN","LA7VOBXA",110,0)
 S LA7TYPE=$$GET1^DID(LA7FN,LA7FLD,"","TYPE","LA7ERR(1)")
"RTN","LA7VOBXA",111,0)
 ;
"RTN","LA7VOBXA",112,0)
 ; Process word-processing type field.
"RTN","LA7VOBXA",113,0)
 ; Check and encode data
"RTN","LA7VOBXA",114,0)
 I LA7TYPE="WORD-PROCESSING" D  Q
"RTN","LA7VOBXA",115,0)
 . N DIWF,DIWL,DIWR,X
"RTN","LA7VOBXA",116,0)
 . S LA7WP=$$GET1^DIQ(LA7FN,LA7IENS,LA7FLD,"","LA7WP","LA7ERR(2)")
"RTN","LA7VOBXA",117,0)
 . K ^UTILITY($J,"W")
"RTN","LA7VOBXA",118,0)
 . S DIWL=1,DIWR=245,DIWF="",LA7I=0
"RTN","LA7VOBXA",119,0)
 . I $$GET1^DID(+$$GET1^DID(LA7FN,LA7FLD,"","SPECIFIER","LA7ERR(1)"),.01,"","SPECIFIER","LA7ERR(3)")["L" S DIWF="N"
"RTN","LA7VOBXA",120,0)
 . F  S LA7I=$O(LA7WP(LA7I)) Q:'LA7I  S X=LA7WP(LA7I) D ^DIWP
"RTN","LA7VOBXA",121,0)
 . K LA7WP
"RTN","LA7VOBXA",122,0)
 . S LA7I=0
"RTN","LA7VOBXA",123,0)
 . F  S LA7I=$O(^UTILITY($J,"W",DIWL,LA7I)) Q:'LA7I  D
"RTN","LA7VOBXA",124,0)
 . . S LA7WP(LA7I)=$$CHKDATA^LA7VHLU3(^UTILITY($J,"W",DIWL,LA7I,0),LA7FS_LA7ECH)
"RTN","LA7VOBXA",125,0)
 . . I LA7I>1 S LA7WP(LA7I)=$E(LA7ECH,3)_".br"_$E(LA7ECH,3)_LA7WP(LA7I)
"RTN","LA7VOBXA",126,0)
 . K ^UTILITY($J,"W")
"RTN","LA7VOBXA",127,0)
 ;
"RTN","LA7VOBXA",128,0)
 ; Free text, assumes multiple valued
"RTN","LA7VOBXA",129,0)
 I LA7TYPE="FREE TEXT" D
"RTN","LA7VOBXA",130,0)
 . D GETS^DIQ(LA7FN,LA7IENS,LA7FLD_"*","","LA7WP","LA7ERR")
"RTN","LA7VOBXA",131,0)
 ;
"RTN","LA7VOBXA",132,0)
 Q
"RTN","LA7VOBXA",133,0)
 ;
"RTN","LA7VOBXA",134,0)
 ;
"RTN","LA7VOBXA",135,0)
OBX5R ; Build OBX-5 sequence with repetition - Observation value
"RTN","LA7VOBXA",136,0)
 ;
"RTN","LA7VOBXA",137,0)
 S (LA7I,LA7Y)=""
"RTN","LA7VOBXA",138,0)
 F  S LA7I=$O(LA7VAL(LA7I)) Q:'LA7I  D
"RTN","LA7VOBXA",139,0)
 . S LA7Y=LA7Y_$$OBX5^LA7VOBX(LA7VAL(LA7I),LA7OBX2,LA7FS,LA7ECH)_$E(LA7ECH,2)
"RTN","LA7VOBXA",140,0)
 ;
"RTN","LA7VOBXA",141,0)
 Q
"RTN","LA7VOBXA",142,0)
 ;
"RTN","LA7VOBXA",143,0)
 ;
"RTN","LA7VOBXA",144,0)
OBX6 ; Build OBX-6 sequence - Units
"RTN","LA7VOBXA",145,0)
 ;
"RTN","LA7VOBXA",146,0)
 S LA7ECH=$G(LA7ECH),LA7Y=""
"RTN","LA7VOBXA",147,0)
 ;
"RTN","LA7VOBXA",148,0)
 I $L($G(LA7VAL)) S LA7Y=LA7VAL ; unit
"RTN","LA7VOBXA",149,0)
 ;
"RTN","LA7VOBXA",150,0)
 ; Build sequence using LOINC codes only
"RTN","LA7VOBXA",151,0)
 ; LOINC code/code name/"LN"
"RTN","LA7VOBXA",152,0)
 I $G(LA764061) D
"RTN","LA7VOBXA",153,0)
 . N LA7IENS,LA7X,LA7Z
"RTN","LA7VOBXA",154,0)
 . S LA7IENS=LA764061_","
"RTN","LA7VOBXA",155,0)
 . D GETS^DIQ(64.061,LA7IENS,".01;1","E","LA7X")
"RTN","LA7VOBXA",156,0)
 . ; LOINC code
"RTN","LA7VOBXA",157,0)
 . S LA7Z=$G(LA7X(64.061,LA7IENS,.01,"E"))
"RTN","LA7VOBXA",158,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)
"RTN","LA7VOBXA",159,0)
 . S $P(LA7Y,$E(LA7ECH,1),1)=LA7Z
"RTN","LA7VOBXA",160,0)
 . ; LOINC code name
"RTN","LA7VOBXA",161,0)
 . S LA7Z=$G(LA7X(64.061,LA7IENS,1,"E"))
"RTN","LA7VOBXA",162,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)
"RTN","LA7VOBXA",163,0)
 . S $P(LA7Y,$E(LA7ECH,1),2)=LA7Z
"RTN","LA7VOBXA",164,0)
 . S $P(LA7Y,$E(LA7ECH,1),3)="LN"
"RTN","LA7VOBXA",165,0)
 ;
"RTN","LA7VOBXA",166,0)
 Q
"RTN","LA7VOBXA",167,0)
 ;
"RTN","LA7VOBXA",168,0)
 ;
"RTN","LA7VOBXA",169,0)
OBX7 ; Build OBX-7 sequence - Reference range
"RTN","LA7VOBXA",170,0)
 ; Removes leading and trailing quote marks ("").
"RTN","LA7VOBXA",171,0)
 ;
"RTN","LA7VOBXA",172,0)
 S LA7Y=""
"RTN","LA7VOBXA",173,0)
 ;
"RTN","LA7VOBXA",174,0)
 I $L($G(LA7LOW)) D
"RTN","LA7VOBXA",175,0)
 . S LA7LOW=$$TRIM^XLFSTR(LA7LOW,"RL","""")
"RTN","LA7VOBXA",176,0)
 . I LA7LOW?1A.E S LA7Y=LA7Y_LA7LOW Q  ; alphabetic value
"RTN","LA7VOBXA",177,0)
 . I $L($G(LA7HIGH))="",$E(LA7LOW)'=">" S LA7Y=">"
"RTN","LA7VOBXA",178,0)
 . S LA7Y=LA7Y_LA7LOW
"RTN","LA7VOBXA",179,0)
 ;
"RTN","LA7VOBXA",180,0)
 I $L($G(LA7HIGH)) D
"RTN","LA7VOBXA",181,0)
 . S LA7HIGH=$$TRIM^XLFSTR(LA7HIGH,"RL","""")
"RTN","LA7VOBXA",182,0)
 . I LA7HIGH?1A.E S LA7Y=LA7Y_LA7HIGH Q  ; alphabetic value
"RTN","LA7VOBXA",183,0)
 . I '$L($G(LA7LOW)) D  Q
"RTN","LA7VOBXA",184,0)
 . . I $E(LA7HIGH)'="<" S LA7Y="<"
"RTN","LA7VOBXA",185,0)
 . . S LA7Y=LA7Y_LA7HIGH
"RTN","LA7VOBXA",186,0)
 . S LA7Y=LA7Y_"-"_LA7HIGH
"RTN","LA7VOBXA",187,0)
 ;
"RTN","LA7VOBXA",188,0)
 S LA7Y=$$CHKDATA^LA7VHLU3(LA7Y,LA7FS_LA7ECH)
"RTN","LA7VOBXA",189,0)
 ;
"RTN","LA7VOBXA",190,0)
 Q
"RTN","LA7VORC")
0^26^B6047893
"RTN","LA7VORC",1,0)
LA7VORC ;DALOI/JMC - LAB ORC Segment message builder ; 11-17-98
"RTN","LA7VORC",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VORC",3,0)
 ;
"RTN","LA7VORC",4,0)
 Q
"RTN","LA7VORC",5,0)
 ;
"RTN","LA7VORC",6,0)
ORC1(LA7TYP) ; Build ORC-1 sequence - Order control
"RTN","LA7VORC",7,0)
 ; Call with LA7TYP = order type from table 0119
"RTN","LA7VORC",8,0)
 ;
"RTN","LA7VORC",9,0)
 Q LA7TYP
"RTN","LA7VORC",10,0)
 ;
"RTN","LA7VORC",11,0)
 ;
"RTN","LA7VORC",12,0)
ORC2(LA7VAL,LA7FS,LA7ECH) ; Build ORC-2 sequence - Placer order number
"RTN","LA7VORC",13,0)
 ; Call with  LA7VAL = accession number/UID
"RTN","LA7VORC",14,0)
 ;             LA7FS = HL field separator
"RTN","LA7VORC",15,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VORC",16,0)
 N LA7Y
"RTN","LA7VORC",17,0)
 ;
"RTN","LA7VORC",18,0)
 S $P(LA7Y,$E(LA7ECH),1)=$$CHKDATA^LA7VHLU3(LA7VAL,LA7FS_LA7ECH)
"RTN","LA7VORC",19,0)
 ;
"RTN","LA7VORC",20,0)
 Q LA7Y
"RTN","LA7VORC",21,0)
 ;
"RTN","LA7VORC",22,0)
 ;
"RTN","LA7VORC",23,0)
ORC3(LA7VAL,LA7FS,LA7ECH) ; Build ORC-3 sequence - Filler order number
"RTN","LA7VORC",24,0)
 ; Call with  LA7VAL = accession number/UID
"RTN","LA7VORC",25,0)
 ;             LA7FS = HL field separator
"RTN","LA7VORC",26,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VORC",27,0)
 N LA7Y
"RTN","LA7VORC",28,0)
 ;
"RTN","LA7VORC",29,0)
 S $P(LA7Y,$E(LA7ECH),1)=$$CHKDATA^LA7VHLU3(LA7VAL,LA7FS_LA7ECH)
"RTN","LA7VORC",30,0)
 ;
"RTN","LA7VORC",31,0)
 Q LA7Y
"RTN","LA7VORC",32,0)
 ;
"RTN","LA7VORC",33,0)
 ;
"RTN","LA7VORC",34,0)
ORC4(LA7VAL,LA7FS,LA7ECH) ; Build ORC-4 sequence - Placer group number
"RTN","LA7VORC",35,0)
 ; Call with  LA7VAL = LEDI - shipping manifest number
"RTN","LA7VORC",36,0)
 ;             LA7FS = HL field separator
"RTN","LA7VORC",37,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VORC",38,0)
 ; Returns ORC-4 sequence
"RTN","LA7VORC",39,0)
 ;
"RTN","LA7VORC",40,0)
 N LA7Y
"RTN","LA7VORC",41,0)
 ;
"RTN","LA7VORC",42,0)
 S $P(LA7Y,$E(LA7ECH),1)=$$CHKDATA^LA7VHLU3(LA7VAL,LA7FS_LA7ECH)
"RTN","LA7VORC",43,0)
 ;
"RTN","LA7VORC",44,0)
 Q LA7Y
"RTN","LA7VORC",45,0)
 ;
"RTN","LA7VORC",46,0)
 ;
"RTN","LA7VORC",47,0)
ORC7(LA7DUR,LA7DURU,LA76205,LA7FS,LA7ECH) ; Build ORC-7 sequence - Quantity/Timing
"RTN","LA7VORC",48,0)
 ; Call with  LA7DUR = collection duration
"RTN","LA7VORC",49,0)
 ;           LA7DURU = duration units (pointer to #64.061)
"RTN","LA7VORC",50,0)
 ;           LA76205 = test urgency
"RTN","LA7VORC",51,0)
 ;             LA7FS = HL field separator
"RTN","LA7VORC",52,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VORC",53,0)
 ;
"RTN","LA7VORC",54,0)
 ; Returns ORC-7 sequence
"RTN","LA7VORC",55,0)
 ;
"RTN","LA7VORC",56,0)
 N LA7X,LA7Y
"RTN","LA7VORC",57,0)
 ;
"RTN","LA7VORC",58,0)
 I $L(LA7DUR),LA7DURU D
"RTN","LA7VORC",59,0)
 . S LA7X=$$GET1^DIQ(64.061,LA7DURU_",",2) ; duration units
"RTN","LA7VORC",60,0)
 . S $P(LA7Y,$E(LA7ECH,1),3)=$$CHKDATA^LA7VHLU3(LA7X_LA7DUR,LA7FS_LA7ECH)
"RTN","LA7VORC",61,0)
 ;
"RTN","LA7VORC",62,0)
 I LA76205 D
"RTN","LA7VORC",63,0)
 . S LA7X=$$GET1^DIQ(64.061,+$$GET1^DIQ(62.05,LA76205_",",4,"I")_",",2) ; Urgency
"RTN","LA7VORC",64,0)
 . S $P(LA7Y,$E(LA7ECH,1),6)=$$CHKDATA^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VORC",65,0)
 ;
"RTN","LA7VORC",66,0)
 Q LA7Y
"RTN","LA7VORC",67,0)
 ;
"RTN","LA7VORC",68,0)
 ;
"RTN","LA7VORC",69,0)
ORC9(LA7DT) ; Build ORC-9 sequence - date/time of transaction
"RTN","LA7VORC",70,0)
 ; Call with LA7DT = order date/time
"RTN","LA7VORC",71,0)
 ;
"RTN","LA7VORC",72,0)
 ; Returns ORC-9 sequence
"RTN","LA7VORC",73,0)
 ;
"RTN","LA7VORC",74,0)
 S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)
"RTN","LA7VORC",75,0)
 Q $$FMTHL7^XLFDT(LA7DT)
"RTN","LA7VORC",76,0)
 ;
"RTN","LA7VORC",77,0)
 ;
"RTN","LA7VORC",78,0)
ORC12(LA7DUZ,LA7DIV,LA7FS,LA7ECH) ; Build ORC-12 sequence - Ordering provider
"RTN","LA7VORC",79,0)
 ; Call with   LA7DUZ = DUZ of ordering provider
"RTN","LA7VORC",80,0)
 ;             LA7DIV = Facility (division) of provider
"RTN","LA7VORC",81,0)
 ;             LA7FS = HL field separator
"RTN","LA7VORC",82,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VORC",83,0)
 ;           
"RTN","LA7VORC",84,0)
 ; Returns ORC-12 sequence
"RTN","LA7VORC",85,0)
 ; Also used to build OBR-16 sequence
"RTN","LA7VORC",86,0)
 ;
"RTN","LA7VORC",87,0)
 Q $$XCN^LA7VHLU4(LA7DUZ,LA7DIV,LA7FS,LA7ECH)
"RTN","LA7VORC",88,0)
 ;
"RTN","LA7VORC",89,0)
 ;
"RTN","LA7VORC",90,0)
ORC17(LA74,LA7FS,LA7ECH) ; Build ORC-17 sequence - Entering organization
"RTN","LA7VORC",91,0)
 ; Call with   LA74 = ien of institution in file #4
"RTN","LA7VORC",92,0)
 ;                    if null/undefined then use Kernel Site file.
"RTN","LA7VORC",93,0)
 ;            LA7FS = HL field separator
"RTN","LA7VORC",94,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VORC",95,0)
 ;
"RTN","LA7VORC",96,0)
 ; Returns ORC-17 sequence (ID^text^99VA4)
"RTN","LA7VORC",97,0)
 ;
"RTN","LA7VORC",98,0)
 Q $$INST^LA7VHLU4(LA74,LA7FS,LA7ECH)
"RTN","LA7VORC",99,0)
 ;
"RTN","LA7VORC",100,0)
 ;
"RTN","LA7VORC",101,0)
ORC21(LA74,LA7FS,LA7ECH) ; Build ORC-21 sequence - Ordering facility name
"RTN","LA7VORC",102,0)
 ; Call with   LA74 = ien of institution in file #4
"RTN","LA7VORC",103,0)
 ;                    if null/undefined then use Kernel Site file.
"RTN","LA7VORC",104,0)
 ;            LA7FS = HL field separator
"RTN","LA7VORC",105,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VORC",106,0)
 ;
"RTN","LA7VORC",107,0)
 ; Returns ORC-21 sequence
"RTN","LA7VORC",108,0)
 ;
"RTN","LA7VORC",109,0)
 N LA7Y
"RTN","LA7VORC",110,0)
 ;
"RTN","LA7VORC",111,0)
 Q LA7Y
"RTN","LA7VORC",112,0)
 ;
"RTN","LA7VORC",113,0)
 ;
"RTN","LA7VORC",114,0)
ORC22(LA74,LA7FS,LA7ECH) ; Build ORC-22 sequence - Ordering facility address
"RTN","LA7VORC",115,0)
 ; Call with   LA74 = ien of institution in file #4
"RTN","LA7VORC",116,0)
 ;                    if null/undefined then use Kernel Site file.
"RTN","LA7VORC",117,0)
 ;            LA7FS = HL field separator
"RTN","LA7VORC",118,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VORC",119,0)
 ;
"RTN","LA7VORC",120,0)
 ; Returns ORC-22 sequence
"RTN","LA7VORC",121,0)
 ;
"RTN","LA7VORC",122,0)
 N LA7Y
"RTN","LA7VORC",123,0)
 ;
"RTN","LA7VORC",124,0)
 S LA7Y=""
"RTN","LA7VORC",125,0)
 ;
"RTN","LA7VORC",126,0)
 Q LA7Y
"RTN","LA7VORC",127,0)
 ;
"RTN","LA7VORC",128,0)
 ;
"RTN","LA7VORC",129,0)
ORC23(LA74,LA7FS,LA7ECH) ; Build ORC-23 sequence - Ordering facility phone number
"RTN","LA7VORC",130,0)
 ; Call with   LA74 = ien of institution in file #4
"RTN","LA7VORC",131,0)
 ;                    if null/undefined then use Kernel Site file.
"RTN","LA7VORC",132,0)
 ;            LA7FS = HL field separator
"RTN","LA7VORC",133,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VORC",134,0)
 ;
"RTN","LA7VORC",135,0)
 ; Returns ORC-23 sequence
"RTN","LA7VORC",136,0)
 ;
"RTN","LA7VORC",137,0)
 N LA7Y
"RTN","LA7VORC",138,0)
 ;
"RTN","LA7VORC",139,0)
 S LA7Y=""
"RTN","LA7VORC",140,0)
 ;
"RTN","LA7VORC",141,0)
 Q LA7Y
"RTN","LA7VORC",142,0)
 ;
"RTN","LA7VORC",143,0)
 ;
"RTN","LA7VORC",144,0)
ORC24(LA74,LA7FS,LA7ECH) ; Build ORC-24 sequence - Ordering provider address
"RTN","LA7VORC",145,0)
 ; Call with   LA74 = ien of institution in file #4
"RTN","LA7VORC",146,0)
 ;                    if null/undefined then use Kernel Site file.
"RTN","LA7VORC",147,0)
 ;            LA7FS = HL field separator
"RTN","LA7VORC",148,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VORC",149,0)
 ;
"RTN","LA7VORC",150,0)
 ; Returns ORC-24 sequence
"RTN","LA7VORC",151,0)
 ;
"RTN","LA7VORC",152,0)
 N LA7Y
"RTN","LA7VORC",153,0)
 ;
"RTN","LA7VORC",154,0)
 S LA7Y=""
"RTN","LA7VORC",155,0)
 ;
"RTN","LA7VORC",156,0)
 Q LA7Y
"RTN","LA7VORM")
0^19^B31363097
"RTN","LA7VORM",1,0)
LA7VORM ;DALOI/DLR - LAB ORM (Order) message PROCESSOR ; 12-12-96
"RTN","LA7VORM",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,42,46**;Sep 27, 1994
"RTN","LA7VORM",3,0)
IN ;
"RTN","LA7VORM",4,0)
 D ORM^LA7VHL
"RTN","LA7VORM",5,0)
 Q
"RTN","LA7VORM",6,0)
 ;
"RTN","LA7VORM",7,0)
OBR ;;OBR
"RTN","LA7VORM",8,0)
 N LA760,LA76205,LA7629,LA7ACC,LA7CEDT,LA7HSITE,LA7NCS,LA7OTST,LA7OTSTN,LA7PF1,LA7PF2,LA7SID,LA7SPCS,LA7SPTY,LA7USID,LA7X,LA7Y,RTST,RTSTN
"RTN","LA7VORM",9,0)
 ;
"RTN","LA7VORM",10,0)
 ; OBR Set ID
"RTN","LA7VORM",11,0)
 S LA7SOBR=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VORM",12,0)
 ;
"RTN","LA7VORM",13,0)
 ; Placer order number
"RTN","LA7VORM",14,0)
 S LA7SID=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VORM",15,0)
 ;
"RTN","LA7VORM",16,0)
 ; Universal service ID
"RTN","LA7VORM",17,0)
 S LA7USID=$$P^LA7VHLU(.LA7SEG,5,LA7FS)
"RTN","LA7VORM",18,0)
 S LA7OTSTN=$P(LA7USID,LA7CS)
"RTN","LA7VORM",19,0)
 I LA7OTSTN="" D  Q
"RTN","LA7VORM",20,0)
 . N LA7X
"RTN","LA7VORM",21,0)
 . S LA7X="PID-"_LA7SPID_"/OBR-"_LA7SOBR
"RTN","LA7VORM",22,0)
 . D CREATE^LA7LOG(26)
"RTN","LA7VORM",23,0)
 ;
"RTN","LA7VORM",24,0)
 S LA7OTST=$P(LA7USID,LA7CS,2)
"RTN","LA7VORM",25,0)
 S LA7NCS=$P(LA7USID,LA7CS,3) ; Name of coding system
"RTN","LA7VORM",26,0)
 S RTSTN=$P(LA7USID,LA7CS,4)
"RTN","LA7VORM",27,0)
 S RTST=$P(LA7USID,LA7CS,5)
"RTN","LA7VORM",28,0)
 ;
"RTN","LA7VORM",29,0)
 ; No ORC segment
"RTN","LA7VORM",30,0)
 I LA7SEQ<20 D  Q
"RTN","LA7VORM",31,0)
 . D CREATE^LA7LOG(29)
"RTN","LA7VORM",32,0)
 ;
"RTN","LA7VORM",33,0)
 ; Missing patient name
"RTN","LA7VORM",34,0)
 I $G(LA7PNM)="" D  Q
"RTN","LA7VORM",35,0)
 . D CREATE^LA7LOG(30)
"RTN","LA7VORM",36,0)
 ;
"RTN","LA7VORM",37,0)
 ; Non-VA system, not using NLT codes/file #60 tests
"RTN","LA7VORM",38,0)
 I LA7NCS'="99VA64" D
"RTN","LA7VORM",39,0)
 . I RTSTN="" S RTSTN=LA7OTST
"RTN","LA7VORM",40,0)
 . I RTST="" S RTST=LA7OTSTN
"RTN","LA7VORM",41,0)
 ;
"RTN","LA7VORM",42,0)
 ; Specimen collection date/time
"RTN","LA7VORM",43,0)
 S LA7CDT=$$FMDATE^HLFNC($$P^LA7VHLU(.LA7SEG,8,LA7FS))
"RTN","LA7VORM",44,0)
 ;
"RTN","LA7VORM",45,0)
 ; Specimen end collection date/time (timed collection)
"RTN","LA7VORM",46,0)
 S LA7CEDT=$$FMDATE^HLFNC($$P^LA7VHLU(.LA7SEG,9,LA7FS))
"RTN","LA7VORM",47,0)
 ;
"RTN","LA7VORM",48,0)
 ; Collection volume
"RTN","LA7VORM",49,0)
 S LA7VOL=""
"RTN","LA7VORM",50,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,10,LA7FS)
"RTN","LA7VORM",51,0)
 I $L($P(LA7X,LA7CS)) D
"RTN","LA7VORM",52,0)
 . S $P(LA7VOL,"^")=$P(LA7X,LA7CS) ; volume
"RTN","LA7VORM",53,0)
 . S $P(LA7VOL,"^",2)=$P(LA7X,LA7CS,2) ; volume units
"RTN","LA7VORM",54,0)
 . S $P(LA7VOL,"^",3)=$P(LA7X,LA7CS,3) ; volume coding system
"RTN","LA7VORM",55,0)
 ;
"RTN","LA7VORM",56,0)
 ; Specimen source -  specimen code - name of specimen coding system
"RTN","LA7VORM",57,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,16,LA7FS)
"RTN","LA7VORM",58,0)
 S LA7SPTY=$P($P(LA7X,LA7CS),$E(LA7ECH,4))
"RTN","LA7VORM",59,0)
 S LA7SPCS=$P($P(LA7X,LA7CS),$E(LA7ECH,4),3)
"RTN","LA7VORM",60,0)
 ;
"RTN","LA7VORM",61,0)
 ; Placer's ordering provider (last name, first name, mi [id])
"RTN","LA7VORM",62,0)
 ; Only process if LA7POP from ORC-12 is blank.
"RTN","LA7VORM",63,0)
 I LA7POP="" D
"RTN","LA7VORM",64,0)
 . S LA7X=$$P^LA7VHLU(.LA7SEG,13,LA7FS)
"RTN","LA7VORM",65,0)
 . S LA7POP=$P($$XCNTFM^LA7VHLU4(LA7X,LA7ECH),"^",2)
"RTN","LA7VORM",66,0)
 ;
"RTN","LA7VORM",67,0)
 ; Specimen urgency
"RTN","LA7VORM",68,0)
 S LA7UR=$P($$P^LA7VHLU(.LA7SEG,28,LA7FS),LA7CS,6)
"RTN","LA7VORM",69,0)
 ; If no urgency see if it came in ORC-7
"RTN","LA7VORM",70,0)
 I LA7UR="" S LA7UR=$G(LA7OUR)
"RTN","LA7VORM",71,0)
 ;
"RTN","LA7VORM",72,0)
 ; Look for receiving facility in OBR, then use receiving facility from MSH
"RTN","LA7VORM",73,0)
 S LA7X=$P($$P^LA7VHLU(.LA7SEG,35,LA7FS),LA7CS,7)
"RTN","LA7VORM",74,0)
 S LA7HSITE=$$FINDSITE^LA7VHLU2(LA7X,1,1)
"RTN","LA7VORM",75,0)
 I LA7HSITE'>0 S LA7HSITE=$$FINDSITE^LA7VHLU2(LA7RFAC,1,0)
"RTN","LA7VORM",76,0)
 ;
"RTN","LA7VORM",77,0)
 ; Find an "active" shipping configuration for this pair.
"RTN","LA7VORM",78,0)
 S LA7629=0
"RTN","LA7VORM",79,0)
 I LA7CSITE,LA7HSITE D
"RTN","LA7VORM",80,0)
 . N LA7X
"RTN","LA7VORM",81,0)
 . S LA7X=0
"RTN","LA7VORM",82,0)
 . F  S LA7X=$O(^LAHM(62.9,"CH",LA7CSITE,LA7HSITE,LA7X)) Q:'LA7X  I $P($G(^LAHM(62.9,LA7X,0)),"^",4) S LA7629=LA7X Q
"RTN","LA7VORM",83,0)
 ; Log error and quit if no active shipping configuration identified
"RTN","LA7VORM",84,0)
 I 'LA7629 D  Q
"RTN","LA7VORM",85,0)
 . D CREATE^LA7LOG(39)
"RTN","LA7VORM",86,0)
 ;
"RTN","LA7VORM",87,0)
 S LA7X=$$DTTO^LA7SMU2(LA7629,LA7OTSTN,LA7SPTY,LA7NCS,LA7SPCS,LA7UR)
"RTN","LA7VORM",88,0)
 S LA760=$P(LA7X,"^"),LA761=$P(LA7X,"^",2),LA762=$P(LA7X,"^",3),LA76205=$P(LA7X,"^",4)
"RTN","LA7VORM",89,0)
 ;
"RTN","LA7VORM",90,0)
 ; Placer fields 1 & 2
"RTN","LA7VORM",91,0)
 S LA7PF1=$$P^LA7VHLU(.LA7SEG,19,LA7FS)
"RTN","LA7VORM",92,0)
 S LA7PF2=$$P^LA7VHLU(.LA7SEG,20,LA7FS)
"RTN","LA7VORM",93,0)
 S LA7ACC=$P(LA7PF2,LA7CS,6)
"RTN","LA7VORM",94,0)
 ;
"RTN","LA7VORM",95,0)
 ; New order - add to LAB PENDING ORDERS file #69.6
"RTN","LA7VORM",96,0)
 I LA7OTYPE="NW" D NW
"RTN","LA7VORM",97,0)
 ;
"RTN","LA7VORM",98,0)
 Q
"RTN","LA7VORM",99,0)
 ;
"RTN","LA7VORM",100,0)
NW ; Create new order in LAB PENDING ORDERS file #69.6
"RTN","LA7VORM",101,0)
 ;
"RTN","LA7VORM",102,0)
 N FDA,LA7696,LA76964,LA7DIE,LA7IEN,LA7SSITE,LA7STAT
"RTN","LA7VORM",103,0)
 ;
"RTN","LA7VORM",104,0)
 ; Get lock on 69.6
"RTN","LA7VORM",105,0)
 L +^LRO(69.6,0):99999
"RTN","LA7VORM",106,0)
 I '$T D  Q
"RTN","LA7VORM",107,0)
 . D CREATE^LA7LOG(31)
"RTN","LA7VORM",108,0)
 ;
"RTN","LA7VORM",109,0)
 S LA7696=$O(^LRO(69.6,"AD",$S($P(LA7SM,"^",2)'="":$P(LA7SM,"^",2),1:0),LA7SID,0))
"RTN","LA7VORM",110,0)
 ;
"RTN","LA7VORM",111,0)
 ; Find "In-Transit" status in #64.061
"RTN","LA7VORM",112,0)
 S LA7STAT=$$FIND1^DIC(64.061,"","OMX","In-Transit","","I $P(^LAB(64.061,Y,0),U,7)=""U""")
"RTN","LA7VORM",113,0)
 ;
"RTN","LA7VORM",114,0)
 ; Create entry in LAB PENDING ORDER ENTRY file, log error if not added
"RTN","LA7VORM",115,0)
 I $G(LA7696)'>0 D
"RTN","LA7VORM",116,0)
 . S FDA(1,69.6,"+1,",.01)=LA7PNM
"RTN","LA7VORM",117,0)
 . S FDA(1,69.6,"+1,",6)=LA7STAT
"RTN","LA7VORM",118,0)
 . D UPDATE^DIE("","FDA(1)","LA7IEN","LA7DIE(1)")
"RTN","LA7VORM",119,0)
 . S LA7696=LA7IEN(1)
"RTN","LA7VORM",120,0)
 . I LA7696<1 D CREATE^LA7LOG(32)
"RTN","LA7VORM",121,0)
 ;
"RTN","LA7VORM",122,0)
 L -^LRO(69.6,0)
"RTN","LA7VORM",123,0)
 I LA7696<1 Q
"RTN","LA7VORM",124,0)
 ;
"RTN","LA7VORM",125,0)
 L +^LRO(69.6,LA7696):99999
"RTN","LA7VORM",126,0)
 I '$T D  Q  ;cannot get lock on ENTRY in 69.6
"RTN","LA7VORM",127,0)
 . D CREATE^LA7LOG(33)
"RTN","LA7VORM",128,0)
 ;
"RTN","LA7VORM",129,0)
 ; Prevent duplication of tests
"RTN","LA7VORM",130,0)
 I $D(^LRO(69.6,LA7696,2,"C",LA7OTSTN)) D UNLOCK Q
"RTN","LA7VORM",131,0)
 ;
"RTN","LA7VORM",132,0)
 ; Determine entry in INSTITUTION file (#4) that's the sending site.
"RTN","LA7VORM",133,0)
 S LA7SSITE=$$FINDSITE^LA7VHLU2(LA7SFAC,2,0)
"RTN","LA7VORM",134,0)
 ;
"RTN","LA7VORM",135,0)
 S FDA(2,69.6,LA7696_",",.01)=LA7PNM
"RTN","LA7VORM",136,0)
 S FDA(2,69.6,LA7696_",",.02)=LA7SEX
"RTN","LA7VORM",137,0)
 S FDA(2,69.6,LA7696_",",.03)=LA7DOB
"RTN","LA7VORM",138,0)
 S FDA(2,69.6,LA7696_",",.09)=LA7SSN
"RTN","LA7VORM",139,0)
 S FDA(2,69.6,LA7696_",",1)=LA7SSITE
"RTN","LA7VORM",140,0)
 S FDA(2,69.6,LA7696_",",2)=LA7CSITE
"RTN","LA7VORM",141,0)
 S FDA(2,69.6,LA7696_",",3)=LA7SID
"RTN","LA7VORM",142,0)
 S FDA(2,69.6,LA7696_",",3.2)=LA7ACC
"RTN","LA7VORM",143,0)
 S FDA(2,69.6,LA7696_",",4)=LA761
"RTN","LA7VORM",144,0)
 S FDA(2,69.6,LA7696_",",5)=LA762
"RTN","LA7VORM",145,0)
 S FDA(2,69.6,LA7696_",",10)=LA7ORDT
"RTN","LA7VORM",146,0)
 S FDA(2,69.6,LA7696_",",11)=LA7CDT
"RTN","LA7VORM",147,0)
 S FDA(2,69.6,LA7696_",",11.1)=LA7CEDT
"RTN","LA7VORM",148,0)
 S FDA(2,69.6,LA7696_",",14)=LA7MEDT
"RTN","LA7VORM",149,0)
 S FDA(2,69.6,LA7696_",",17)=LA7MID
"RTN","LA7VORM",150,0)
 S FDA(2,69.6,LA7696_",",18)=$P(LA7SM,"^",2)
"RTN","LA7VORM",151,0)
 S FDA(3,69.6,LA7696_",",700)=LA7FS_LA7ECH
"RTN","LA7VORM",152,0)
 I $L(LA7PTID3) S FDA(3,69.6,LA7696_",",700.02)=LA7PTID3
"RTN","LA7VORM",153,0)
 I $L(LA7PTID4) S FDA(3,69.6,LA7696_",",700.04)=LA7PTID4
"RTN","LA7VORM",154,0)
 D FILE^DIE("","FDA(2)","LA7DIE(2)")
"RTN","LA7VORM",155,0)
 ;
"RTN","LA7VORM",156,0)
 ; Add test to order
"RTN","LA7VORM",157,0)
 S FDA(3,69.64,"+2,"_LA7696_",",.01)=LA7OTST
"RTN","LA7VORM",158,0)
 S FDA(3,69.64,"+2,"_LA7696_",",1)=LA7OTSTN
"RTN","LA7VORM",159,0)
 S FDA(3,69.64,"+2,"_LA7696_",",2)=RTST
"RTN","LA7VORM",160,0)
 S FDA(3,69.64,"+2,"_LA7696_",",3)=RTSTN
"RTN","LA7VORM",161,0)
 S FDA(3,69.64,"+2,"_LA7696_",",4)=LA7UR
"RTN","LA7VORM",162,0)
 S FDA(3,69.64,"+2,"_LA7696_",",11)=LA760
"RTN","LA7VORM",163,0)
 S FDA(3,69.64,"+2,"_LA7696_",",12)=LA76205
"RTN","LA7VORM",164,0)
 I $L($P(LA7POP,"^",2)) S FDA(3,69.64,"+2,"_LA7696_",",13)=$P(LA7POP,"^",2)
"RTN","LA7VORM",165,0)
 I $L(LA7USID) S FDA(3,69.64,"+2,"_LA7696_",",700.04)=LA7USID
"RTN","LA7VORM",166,0)
 I $L(LA7PF1) S FDA(3,69.64,"+2,"_LA7696_",",700.18)=LA7PF1
"RTN","LA7VORM",167,0)
 I $L(LA7PF2) S FDA(3,69.64,"+2,"_LA7696_",",700.19)=LA7PF2
"RTN","LA7VORM",168,0)
 D UPDATE^DIE("","FDA(3)","LA76964","LA7DIE(3)")
"RTN","LA7VORM",169,0)
 ;
"RTN","LA7VORM",170,0)
 ; If no test status - set to In-transit.
"RTN","LA7VORM",171,0)
 I $G(LA76964(2)),$P($G(^LRO(69.6,LA7696,2,LA76964(2),0)),"^",6)="" D
"RTN","LA7VORM",172,0)
 . S FDA(4,69.64,LA76964(2)_","_LA7696_",",5)=LA7STAT
"RTN","LA7VORM",173,0)
 . D FILE^DIE("","FDA(4)","LA7DIE(4)")
"RTN","LA7VORM",174,0)
 ; 
"RTN","LA7VORM",175,0)
 D CLEAN^DILF
"RTN","LA7VORM",176,0)
 ;
"RTN","LA7VORM",177,0)
 D UNLOCK
"RTN","LA7VORM",178,0)
 Q
"RTN","LA7VORM",179,0)
 ;
"RTN","LA7VORM",180,0)
UNLOCK ; unlock entry in file #69.6
"RTN","LA7VORM",181,0)
 L -^LRO(69.6,LA7696)
"RTN","LA7VORM",182,0)
 Q
"RTN","LA7VORM1")
0^13^B37527834
"RTN","LA7VORM1",1,0)
LA7VORM1 ;DALOI/DLR - LAB ORM (Order) message builder ; 12-12-96
"RTN","LA7VORM1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,51,46**;Sep 27, 1994
"RTN","LA7VORM1",3,0)
 ;
"RTN","LA7VORM1",4,0)
BUILD(LA7628) ;
"RTN","LA7VORM1",5,0)
 ; Call with LA7628 = ien of entry in file #62.8 Shipping Manifest
"RTN","LA7VORM1",6,0)
 ;
"RTN","LA7VORM1",7,0)
 N LA7101,LA762801,LA7629,LA7PIDSN,ECNT,GBL,SHP,SHPC,SITE,ORUID,NTST
"RTN","LA7VORM1",8,0)
 ;
"RTN","LA7VORM1",9,0)
 I $G(LA7628)<1!('$D(^LAHM(62.8,+$G(LA7628),0))) D  Q
"RTN","LA7VORM1",10,0)
 . ; Need to add error logging for manifest not found.
"RTN","LA7VORM1",11,0)
 . Q
"RTN","LA7VORM1",12,0)
 ;
"RTN","LA7VORM1",13,0)
 S GBL="^TMP(""HLS"","_$J_")",ECNT=1
"RTN","LA7VORM1",14,0)
 S LA7628(0)=$G(^LAHM(62.8,LA7628,0))
"RTN","LA7VORM1",15,0)
 S LA7629=$P(LA7628(0),U,2)
"RTN","LA7VORM1",16,0)
 S LA7629(0)=$G(^LAHM(62.9,LA7629,0))
"RTN","LA7VORM1",17,0)
 S LA76248=+$P(LA7629(0),"^",7)
"RTN","LA7VORM1",18,0)
 S LA76248(0)=$G(^LAHM(62.48,LA76248,0))
"RTN","LA7VORM1",19,0)
 ;
"RTN","LA7VORM1",20,0)
 S LA7V("INST")=$P(LA7629(0),U,11)
"RTN","LA7VORM1",21,0)
 S LA7V("CLNT")=$$GET1^DIQ(4,+$P(LA7629(0),U,2)_",",99)_"^"_$$GET1^DIQ(4,+$P(LA7629(0),U,2)_",",.01)
"RTN","LA7VORM1",22,0)
 S LA7V("HOST")=$$GET1^DIQ(4,+$P(LA7629(0),U,3)_",",99)_"^"_$$GET1^DIQ(4,+$P(LA7629(0),U,3)_",",.01)
"RTN","LA7VORM1",23,0)
 Q:LA7V("INST")=$P(LA7629(0),U,6)  ;Same system shipment
"RTN","LA7VORM1",24,0)
 ;
"RTN","LA7VORM1",25,0)
 S LA7V("NON")=$P(LA7629(0),U,12)
"RTN","LA7VORM1",26,0)
 I LA7V("NON")'="" S SITE=LA7V("NON")
"RTN","LA7VORM1",27,0)
 I LA7V("NON")="" S SITE=$$GET1^DIQ(4,+LA7V("INST")_",",99)
"RTN","LA7VORM1",28,0)
 ;assuming the receiving institution is the primary site (site with the computer system)
"RTN","LA7VORM1",29,0)
 ;
"RTN","LA7VORM1",30,0)
 ; Sort tests by patient,UID,test - only need to build one PID, PV1 per patient
"RTN","LA7VORM1",31,0)
 ; ^TMP("LA7628",$J, LRDFN, accession UID, ien of shipping manifest specimen entry)
"RTN","LA7VORM1",32,0)
 K ^TMP("LA7628",$J)
"RTN","LA7VORM1",33,0)
 S LA762801=0
"RTN","LA7VORM1",34,0)
 F  S LA762801=$O(^LAHM(62.8,LA7628,10,LA762801)) Q:'LA762801  D
"RTN","LA7VORM1",35,0)
 . S X(0)=$G(^LAHM(62.8,LA7628,10,LA762801,0))
"RTN","LA7VORM1",36,0)
 . I $P(X(0),"^",8)=0 Q  ; Removed from manifest
"RTN","LA7VORM1",37,0)
 . I $P(X(0),"^"),$L($P(X(0),"^",5)) S ^TMP("LA7628",$J,+$P(X(0),"^"),$P(X(0),"^",5),LA762801)=""
"RTN","LA7VORM1",38,0)
 K LA762801
"RTN","LA7VORM1",39,0)
 ;
"RTN","LA7VORM1",40,0)
 ; Nothing to send
"RTN","LA7VORM1",41,0)
 I '$D(^TMP("LA7628",$J)) Q
"RTN","LA7VORM1",42,0)
 ;
"RTN","LA7VORM1",43,0)
 ; Set flag = 0 (multiple PID's/message - build one message)
"RTN","LA7VORM1",44,0)
 ;            1 (one PID/message - build multiple messages)
"RTN","LA7VORM1",45,0)
 ;            2 (one ORC/message - build multiple messages)
"RTN","LA7VORM1",46,0)
 S LA7SMSG=+$P(LA76248(0),"^",8)
"RTN","LA7VORM1",47,0)
 ;
"RTN","LA7VORM1",48,0)
 I LA7SMSG=0 D STARTMSG
"RTN","LA7VORM1",49,0)
 ;
"RTN","LA7VORM1",50,0)
 S (LRDFN,LRI,LA7PIDSN)=0
"RTN","LA7VORM1",51,0)
 F  S LRDFN=$O(^TMP("LA7628",$J,LRDFN)) Q:'LRDFN  D
"RTN","LA7VORM1",52,0)
 . N LA7PID,LA7PV1
"RTN","LA7VORM1",53,0)
 . I LA7SMSG=1 D STARTMSG
"RTN","LA7VORM1",54,0)
 . I LA7SMSG<2 D PID,PV1
"RTN","LA7VORM1",55,0)
 . S LA7UID=""
"RTN","LA7VORM1",56,0)
 . F  S LA7UID=$O(^TMP("LA7628",$J,LRDFN,LA7UID)) Q:LA7UID=""  D
"RTN","LA7VORM1",57,0)
 . . N LA76802,LA7ORC,X
"RTN","LA7VORM1",58,0)
 . . S X=$Q(^LRO(68,"C",LA7UID))
"RTN","LA7VORM1",59,0)
 . . I $QS(X,3)'=LA7UID Q
"RTN","LA7VORM1",60,0)
 . . S LRAA=$QS(X,4),LRAD=$QS(X,5),LRAN=$QS(X,6)
"RTN","LA7VORM1",61,0)
 . . F I=0,.3,3 S LA76802(I)=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,I))
"RTN","LA7VORM1",62,0)
 . . I LA7SMSG=2 D STARTMSG,PID,PV1
"RTN","LA7VORM1",63,0)
 . . S (LA7OBRSN,LA762801)=0
"RTN","LA7VORM1",64,0)
 . . F  S LA762801=$O(^TMP("LA7628",$J,LRDFN,LA7UID,LA762801)) Q:'LA762801  D
"RTN","LA7VORM1",65,0)
 . . . N LA7OBR,I
"RTN","LA7VORM1",66,0)
 . . . F I=0,1,2,5 S LA762801(I)=$G(^LAHM(62.8,LA7628,10,LA762801,I))
"RTN","LA7VORM1",67,0)
 . . . I $$CHKTST^LA7SMU(LA7628,LA762801)'=0 Q  ;deleted accession
"RTN","LA7VORM1",68,0)
 . . . D ORC,OBR^LA7VORM3,OBX^LA7VORM3
"RTN","LA7VORM1",69,0)
 . . I LA7SMSG=2 D BLG,SENDMSG
"RTN","LA7VORM1",70,0)
 . I LA7SMSG<2 D BLG
"RTN","LA7VORM1",71,0)
 . I LA7SMSG=1 D SENDMSG
"RTN","LA7VORM1",72,0)
 ;
"RTN","LA7VORM1",73,0)
 I LA7SMSG=0 D SENDMSG
"RTN","LA7VORM1",74,0)
 ;
"RTN","LA7VORM1",75,0)
 ;
"RTN","LA7VORM1",76,0)
EXIT ;
"RTN","LA7VORM1",77,0)
 K ^TMP("HLS",$J),^TMP("LA7628",$J)
"RTN","LA7VORM1",78,0)
 K DIC,DFN,EID,HL,HLCOMP,HLFS,HLQ,HLSUB,INT
"RTN","LA7VORM1",79,0)
 K LA760,LA7628,LA762801,LA7629
"RTN","LA7VORM1",80,0)
 K LA7ECH,LA7FS,LA7V,LA7HDR,LA7OBRSN,LA7OBXSN,LA7VIEN,LAEVNT
"RTN","LA7VORM1",81,0)
 K LRAA,LRACC,LRAD,LRAN,LRDFN,LRI
"RTN","LA7VORM1",82,0)
 K LTST,NLT,NLTIEN,PCNT,RUID,SNIEN,TIEN,X,Y,LA
"RTN","LA7VORM1",83,0)
 D KVAR^LRX
"RTN","LA7VORM1",84,0)
 Q
"RTN","LA7VORM1",85,0)
 ;
"RTN","LA7VORM1",86,0)
 ;
"RTN","LA7VORM1",87,0)
STARTMSG ; Create/initialize HL message
"RTN","LA7VORM1",88,0)
 ;
"RTN","LA7VORM1",89,0)
 K ^TMP("HLS",$J)
"RTN","LA7VORM1",90,0)
 K HL,HLCOMP,HLSUB,HLFS,HLERR,HLMID
"RTN","LA7VORM1",91,0)
 K LA7PIDSN
"RTN","LA7VORM1",92,0)
 ;
"RTN","LA7VORM1",93,0)
 D INITHL^LA7VHLU("LA7V Order to "_SITE)
"RTN","LA7VORM1",94,0)
 ;
"RTN","LA7VORM1",95,0)
 S LA76249=$$INIT6249^LA7VHLU
"RTN","LA7VORM1",96,0)
 S LA7MSH(0)="MSH"_LA7FS_LA7ECH
"RTN","LA7VORM1",97,0)
 D FILE6249^LA7VHLU(LA76249,.LA7MSH)
"RTN","LA7VORM1",98,0)
 Q
"RTN","LA7VORM1",99,0)
 ;
"RTN","LA7VORM1",100,0)
 ;
"RTN","LA7VORM1",101,0)
SENDMSG ; File HL7 message with HL and LAB packages.
"RTN","LA7VORM1",102,0)
 ;
"RTN","LA7VORM1",103,0)
 N LA7DATA
"RTN","LA7VORM1",104,0)
 ; If no message to send then quit
"RTN","LA7VORM1",105,0)
 I '$D(^TMP("HLS",$J)) Q
"RTN","LA7VORM1",106,0)
 ;
"RTN","LA7VORM1",107,0)
 D GEN^LA7VHLU
"RTN","LA7VORM1",108,0)
 S LA7DATA="SM06"_"^"_$$NOW^XLFDT
"RTN","LA7VORM1",109,0)
 D SEUP^LA7SMU($P(LA7628(0),"^"),"1",LA7DATA)
"RTN","LA7VORM1",110,0)
 D UPDT6249
"RTN","LA7VORM1",111,0)
 Q
"RTN","LA7VORM1",112,0)
 ;
"RTN","LA7VORM1",113,0)
 ;
"RTN","LA7VORM1",114,0)
UPDT6249 ; update entry in 62.49
"RTN","LA7VORM1",115,0)
 ;
"RTN","LA7VORM1",116,0)
 N FDA,LA7ERR
"RTN","LA7VORM1",117,0)
 ;
"RTN","LA7VORM1",118,0)
 I $G(LA76248) S FDA(1,62.49,LA76249_",",.5)=LA76248
"RTN","LA7VORM1",119,0)
 S FDA(1,62.49,LA76249_",",1)="O"
"RTN","LA7VORM1",120,0)
 S FDA(1,62.49,LA76249_",",2)="A"
"RTN","LA7VORM1",121,0)
 S FDA(1,62.49,LA76249_",",5)="LA7V HOST "_SITE_"-O-"_$P($G(LA7628(0)),"^")
"RTN","LA7VORM1",122,0)
 S FDA(1,62.49,LA76249_",",108)="ORM"
"RTN","LA7VORM1",123,0)
 I $L($P($G(HLMID),"^")) S FDA(1,62.49,LA76249_",",109)=$P(HLMID,"^")
"RTN","LA7VORM1",124,0)
 I $L($P($G(HLMID),"^",2)) S FDA(1,62.49,LA76249_",",160)=$P(HLMID,"^",2)
"RTN","LA7VORM1",125,0)
 I $L($P($G(HLMID),"^",3)) S FDA(1,62.49,LA76249_",",161)=$P(HLMID,"^",3)
"RTN","LA7VORM1",126,0)
 D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7VORM1",127,0)
 ; Unlock entry
"RTN","LA7VORM1",128,0)
 L -^LAHM(62.49,LA76249)
"RTN","LA7VORM1",129,0)
 Q
"RTN","LA7VORM1",130,0)
 ;
"RTN","LA7VORM1",131,0)
 ;
"RTN","LA7VORM1",132,0)
PID ; Patient identification
"RTN","LA7VORM1",133,0)
 S LRDPF=$P(^LR(LRDFN,0),"^",2),DFN=$P(^(0),"^",3)
"RTN","LA7VORM1",134,0)
 D DEM^LRX
"RTN","LA7VORM1",135,0)
 D PID^LA7VPID(LRDFN,"",.LA7PID,.LA7PIDSN,.HL,"")
"RTN","LA7VORM1",136,0)
 D FILESEG^LA7VHLU(GBL,.LA7PID)
"RTN","LA7VORM1",137,0)
 D FILE6249^LA7VHLU(LA76249,.LA7PID)
"RTN","LA7VORM1",138,0)
 Q
"RTN","LA7VORM1",139,0)
 ;
"RTN","LA7VORM1",140,0)
 ;
"RTN","LA7VORM1",141,0)
PV1 ; Location information
"RTN","LA7VORM1",142,0)
 D PV1^LA7VPID(LRDFN,.LA7PV1,LA7FS,LA7ECH)
"RTN","LA7VORM1",143,0)
 D FILESEG^LA7VHLU(GBL,.LA7PV1)
"RTN","LA7VORM1",144,0)
 D FILE6249^LA7VHLU(LA76249,.LA7PV1)
"RTN","LA7VORM1",145,0)
 Q
"RTN","LA7VORM1",146,0)
 ;
"RTN","LA7VORM1",147,0)
 ;
"RTN","LA7VORM1",148,0)
ORC ;Order Control
"RTN","LA7VORM1",149,0)
 ;
"RTN","LA7VORM1",150,0)
 N ORC,LA7DATA,LA7DUR,LA7DURU,LA76205,LA762801,LA7X
"RTN","LA7VORM1",151,0)
 ;
"RTN","LA7VORM1",152,0)
 S ORC(0)="ORC"
"RTN","LA7VORM1",153,0)
 S ORC(1)=$$ORC1^LA7VORC("NW")
"RTN","LA7VORM1",154,0)
 ;
"RTN","LA7VORM1",155,0)
 ; Place order number - accession UID
"RTN","LA7VORM1",156,0)
 S ORC(2)=$$ORC2^LA7VORC($P(LA76802(.3),"^"),LA7FS,LA7ECH)
"RTN","LA7VORM1",157,0)
 ;
"RTN","LA7VORM1",158,0)
 ; Placer group number - shipping manifest invoice #
"RTN","LA7VORM1",159,0)
 S ORC(4)=$$ORC4^LA7VORC($P(LA7628(0),"^"),LA7FS,LA7ECH)
"RTN","LA7VORM1",160,0)
 ;
"RTN","LA7VORM1",161,0)
 ; Quantity/Timing
"RTN","LA7VORM1",162,0)
 S (LA76205,LA7DUR,LA7DURU)=""
"RTN","LA7VORM1",163,0)
 S LA762801=0
"RTN","LA7VORM1",164,0)
 F  S LA762801=$O(^TMP("LA7628",$J,LRDFN,LA7UID,LA762801)) Q:'LA762801  D
"RTN","LA7VORM1",165,0)
 . N I,LA760
"RTN","LA7VORM1",166,0)
 . ; Test duration
"RTN","LA7VORM1",167,0)
 . F I=0,2 S LA762801(I)=$G(^LAHM(62.8,LA7628,10,LA762801,I))
"RTN","LA7VORM1",168,0)
 . I $P(LA762801(2),"^",4) D
"RTN","LA7VORM1",169,0)
 . . S LA7DUR=$P(LA762801(2),"^",6) ; collection duration
"RTN","LA7VORM1",170,0)
 . . S LA7DURU=$P(LA762801(2),"^",7) ; duration units
"RTN","LA7VORM1",171,0)
 . ; Test urgency - find highest urgency on accession
"RTN","LA7VORM1",172,0)
 . S LA760=+$P(LA762801(0),"^",2)
"RTN","LA7VORM1",173,0)
 . S X=+$$GET1^DIQ(68.04,LA760_","_LRAN_","_LRAD_","_LRAA_",",1,"I")
"RTN","LA7VORM1",174,0)
 . I 'LA76205 S LA76205=X
"RTN","LA7VORM1",175,0)
 . I LA76205,X<LA76205 S LA76205=X
"RTN","LA7VORM1",176,0)
 S ORC(7)=$$ORC7^LA7VORC(LA7DUR,LA7DURU,LA76205,LA7FS,LA7ECH)
"RTN","LA7VORM1",177,0)
 ;
"RTN","LA7VORM1",178,0)
 ; Order Date/Time - if no order date/time then try draw time
"RTN","LA7VORM1",179,0)
 I $P(LA76802(0),"^",4) S ORC(9)=$$ORC9^LA7VORC($P(LA76802(0),"^",4))
"RTN","LA7VORM1",180,0)
 I '$P(LA76802(0),"^",4),$P(LA76802(3),"^") S ORC(9)=$$ORC9^LA7VORC($P(LA76802(3),"^"))
"RTN","LA7VORM1",181,0)
 ;
"RTN","LA7VORM1",182,0)
 ; Ordering provider
"RTN","LA7VORM1",183,0)
 S LA7X=$$FNDOLOC^LA7VHLU2(LA7UID)
"RTN","LA7VORM1",184,0)
 S ORC(12)=$$ORC12^LA7VORC($P(LA76802(0),"^",8),$P(LA7X,"^",3),LA7FS,LA7ECH)
"RTN","LA7VORM1",185,0)
 ;
"RTN","LA7VORM1",186,0)
 ; Entering organization - VA facility
"RTN","LA7VORM1",187,0)
 S ORC(17)=$$ORC17^LA7VORC($P($G(LA7V("CLNT")),U),LA7FS,LA7ECH)
"RTN","LA7VORM1",188,0)
 ;
"RTN","LA7VORM1",189,0)
 D BUILDSEG^LA7VHLU(.ORC,.LA7DATA,LA7FS)
"RTN","LA7VORM1",190,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7VORM1",191,0)
 D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7VORM1",192,0)
 Q
"RTN","LA7VORM1",193,0)
 ;
"RTN","LA7VORM1",194,0)
 ;
"RTN","LA7VORM1",195,0)
BLG ; Billing segment
"RTN","LA7VORM1",196,0)
 ;
"RTN","LA7VORM1",197,0)
 N LA7BLG
"RTN","LA7VORM1",198,0)
 ;
"RTN","LA7VORM1",199,0)
 I $P(LA7629(0),U,13)="" Q
"RTN","LA7VORM1",200,0)
 S LA7BLG(0)=$$BLG^LA7VHLU($P(LA7629(0),"^",13),"CO",LA7FS,LA7ECH)
"RTN","LA7VORM1",201,0)
 D FILESEG^LA7VHLU(GBL,.LA7BLG)
"RTN","LA7VORM1",202,0)
 D FILE6249^LA7VHLU(LA76249,.LA7BLG)
"RTN","LA7VORM1",203,0)
 Q
"RTN","LA7VORM2")
0^20^B11274641
"RTN","LA7VORM2",1,0)
LA7VORM2 ;DALOI/JMC - LAB ORM (Order) message builder cont'd ; 11-21-986
"RTN","LA7VORM2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VORM2",3,0)
 ;
"RTN","LA7VORM2",4,0)
 ; Observation/Result segment for Lab Results sent with Order Message
"RTN","LA7VORM2",5,0)
 ; Build OBX segments for orders that have required info to be sent
"RTN","LA7VORM2",6,0)
 ; with order.
"RTN","LA7VORM2",7,0)
 ; e.g. patient height/weight, specimen weight
"RTN","LA7VORM2",8,0)
 ;
"RTN","LA7VORM2",9,0)
PTHT(LA7VAL,LA764061,LA7953,LA74,LA7OBXSN,LA7HLSN,LA7FS,LA7ECH,LA76249) ; Send patient height
"RTN","LA7VORM2",10,0)
 ; Call with    LA7VAL = patient height
"RTN","LA7VORM2",11,0)
 ;            LA764061 = IEN of units in file #64.061
"RTN","LA7VORM2",12,0)
 ;              LA7953 = LOINC code
"RTN","LA7VORM2",13,0)
 ;                LA74 = performing institution
"RTN","LA7VORM2",14,0)
 ;            LA7OBXSN = sequence id of this OBX segment
"RTN","LA7VORM2",15,0)
 ;             LA7HLSN = segment counter for message (pass by reference)
"RTN","LA7VORM2",16,0)
 ;               LA7FS = HL field separator
"RTN","LA7VORM2",17,0)
 ;              LA7ECH = HL encoding characters
"RTN","LA7VORM2",18,0)
 ;             LA76249 = IEN of entry in #62.49
"RTN","LA7VORM2",19,0)
 ;
"RTN","LA7VORM2",20,0)
 N LA7OBX
"RTN","LA7VORM2",21,0)
 S LA7OBX(2)=$$OBX2^LA7VOBX(62.801,1.11)
"RTN","LA7VORM2",22,0)
 S LA7OBX(3)=$$OBX3^LA7VOBX("",LA7953,"",LA7FS,LA7ECH) ; LOINC code
"RTN","LA7VORM2",23,0)
 S LA7OBX(5)=$$OBX5^LA7VOBX(LA7VAL,LA7OBX(2),LA7FS,LA7ECH) ; height value
"RTN","LA7VORM2",24,0)
 S LA7OBX(6)=$$OBX6^LA7VOBX("",LA764061,LA7FS,LA7ECH) ; unit
"RTN","LA7VORM2",25,0)
 D GEN
"RTN","LA7VORM2",26,0)
 Q
"RTN","LA7VORM2",27,0)
 ;
"RTN","LA7VORM2",28,0)
PTWT(LA7VAL,LA764061,LA7953,LA74,LA7OBXSN,LA7HLSN,LA7FS,LA7ECH,LA76249) ; Send patient weight
"RTN","LA7VORM2",29,0)
 ; Call with    LA7VAL = patient weight
"RTN","LA7VORM2",30,0)
 ;            LA764061 = IEN of units in file #64.061
"RTN","LA7VORM2",31,0)
 ;              LA7953 = LOINC code
"RTN","LA7VORM2",32,0)
 ;                LA74 = performing institution
"RTN","LA7VORM2",33,0)
 ;            LA7OBXSN = sequence id of this OBX segment
"RTN","LA7VORM2",34,0)
 ;             LA7HLSN = segment counter for message (pass by reference)
"RTN","LA7VORM2",35,0)
 ;               LA7FS = HL field separator
"RTN","LA7VORM2",36,0)
 ;              LA7ECH = HL encoding characters
"RTN","LA7VORM2",37,0)
 ;             LA76249 = IEN of entry in #62.49
"RTN","LA7VORM2",38,0)
 ;
"RTN","LA7VORM2",39,0)
 N LA7OBX
"RTN","LA7VORM2",40,0)
 S LA7OBX(2)=$$OBX2^LA7VOBX(62.801,1.21)
"RTN","LA7VORM2",41,0)
 S LA7OBX(3)=$$OBX3^LA7VOBX("",LA7953,"",LA7FS,LA7ECH) ; LOINC code
"RTN","LA7VORM2",42,0)
 S LA7OBX(5)=$$OBX5^LA7VOBX(LA7VAL,LA7OBX(2),LA7FS,LA7ECH) ; weight value
"RTN","LA7VORM2",43,0)
 S LA7OBX(6)=$$OBX6^LA7VOBX("",LA764061,LA7FS,LA7ECH) ; unit
"RTN","LA7VORM2",44,0)
 D GEN
"RTN","LA7VORM2",45,0)
 Q
"RTN","LA7VORM2",46,0)
 ;
"RTN","LA7VORM2",47,0)
SPWT(LA7VAL,LA764061,LA7DUR,LA7953,LA74,LA7OBXSN,LA7HLSN,LA7FS,LA7ECH,LA76249) ; Send specimen weight
"RTN","LA7VORM2",48,0)
 ; Call with    LA7VAL = specimen weight
"RTN","LA7VORM2",49,0)
 ;            LA764061 = IEN of units in file #64.061
"RTN","LA7VORM2",50,0)
 ;              LA7DUR = collection duration
"RTN","LA7VORM2",51,0)
 ;              LA7953 = LOINC code
"RTN","LA7VORM2",52,0)
 ;                LA74 = performing institution
"RTN","LA7VORM2",53,0)
 ;            LA7OBXSN = sequence id of this OBX segment (pass by reference)
"RTN","LA7VORM2",54,0)
 ;             LA7HLSN = segment counter for message (pass by reference)
"RTN","LA7VORM2",55,0)
 ;               LA7FS = HL field separator
"RTN","LA7VORM2",56,0)
 ;              LA7ECH = HL encoding characters
"RTN","LA7VORM2",57,0)
 ;             LA76249 = IEN of entry in #62.49
"RTN","LA7VORM2",58,0)
 ;
"RTN","LA7VORM2",59,0)
 N LA7LOINC,LA7OBX
"RTN","LA7VORM2",60,0)
 S LA7OBX(2)=$$OBX2^LA7VOBX(62.801,2.31)
"RTN","LA7VORM2",61,0)
 S LA7OBX(3)=$$OBX3^LA7VOBX("",LA7953,"",LA7FS,LA7ECH) ; LOINC code
"RTN","LA7VORM2",62,0)
 S LA7OBX(5)=$$OBX5^LA7VOBX(LA7VAL,LA7OBX(2),LA7FS,LA7ECH) ; weight value
"RTN","LA7VORM2",63,0)
 S LA7OBX(6)=$$OBX6^LA7VOBX("",LA764061,LA7FS,LA7ECH) ; unit
"RTN","LA7VORM2",64,0)
 D GEN
"RTN","LA7VORM2",65,0)
 Q
"RTN","LA7VORM2",66,0)
 ;
"RTN","LA7VORM2",67,0)
 ;
"RTN","LA7VORM2",68,0)
SPCV(LA7VAL,LA764061,LA7953,LA74,LA7OBXSN,LA7HLSN,LA7FS,LA7ECH,LA76249) ; Specimen collection volume
"RTN","LA7VORM2",69,0)
 ; Call with    LA7VAL = collection volume
"RTN","LA7VORM2",70,0)
 ;            LA764061 = IEN of units in file #64.061
"RTN","LA7VORM2",71,0)
 ;              LA7953 = LOINC code
"RTN","LA7VORM2",72,0)
 ;                LA74 = performing institution
"RTN","LA7VORM2",73,0)
 ;            LA7OBXSN = sequence id of this OBX segment
"RTN","LA7VORM2",74,0)
 ;             LA7HLSN = segment counter for message (pass by reference)
"RTN","LA7VORM2",75,0)
 ;               LA7FS = HL field separator
"RTN","LA7VORM2",76,0)
 ;              LA7ECH = HL encoding characters
"RTN","LA7VORM2",77,0)
 ;             LA76249 = IEN of entry in #62.49
"RTN","LA7VORM2",78,0)
 ;
"RTN","LA7VORM2",79,0)
 N LA7OBX
"RTN","LA7VORM2",80,0)
 ;
"RTN","LA7VORM2",81,0)
 S LA7OBX(2)=$$OBX2^LA7VOBX(62.801,2.11)
"RTN","LA7VORM2",82,0)
 ; LOINC code
"RTN","LA7VORM2",83,0)
 S LA7OBX(3)=$$OBX3^LA7VOBX("",LA7953,"",LA7FS,LA7ECH)
"RTN","LA7VORM2",84,0)
 ; Collection volume
"RTN","LA7VORM2",85,0)
 S LA7OBX(5)=$$OBX5^LA7VOBX(LA7VAL,LA7OBX(2),LA7FS,LA7ECH)
"RTN","LA7VORM2",86,0)
 S LA7OBX(6)=$$OBX6^LA7VOBX("",LA764061,LA7FS,LA7ECH) ; unit
"RTN","LA7VORM2",87,0)
 D GEN
"RTN","LA7VORM2",88,0)
 Q
"RTN","LA7VORM2",89,0)
 ;
"RTN","LA7VORM2",90,0)
 ;
"RTN","LA7VORM2",91,0)
SPDUR(LA7VAL,LA764061,LA7953,LA74,LA7OBXSN,LA7HLSN,LA7FS,LA7ECH,LA76249) ; Specimen collection duration
"RTN","LA7VORM2",92,0)
 ; Call with    LA7VAL = collection duration
"RTN","LA7VORM2",93,0)
 ;            LA764061 = IEN of units in file #64.061
"RTN","LA7VORM2",94,0)
 ;              LA7953 = LOINC code
"RTN","LA7VORM2",95,0)
 ;                LA74 = performing institution
"RTN","LA7VORM2",96,0)
 ;            LA7OBXSN = sequence id of this OBX segment
"RTN","LA7VORM2",97,0)
 ;             LA7HLSN = segment counter for message (pass by reference)
"RTN","LA7VORM2",98,0)
 ;               LA7FS = HL field separator
"RTN","LA7VORM2",99,0)
 ;              LA7ECH = HL encoding characters
"RTN","LA7VORM2",100,0)
 ;             LA76249 = IEN of entry in #62.49
"RTN","LA7VORM2",101,0)
 ;
"RTN","LA7VORM2",102,0)
 N LA7OBX
"RTN","LA7VORM2",103,0)
 ;
"RTN","LA7VORM2",104,0)
 S LA7OBX(2)=$$OBX2^LA7VOBX(62.801,2.22)
"RTN","LA7VORM2",105,0)
 ; LOINC code
"RTN","LA7VORM2",106,0)
 S LA7OBX(3)=$$OBX3^LA7VOBX("",LA7953,"",LA7FS,LA7ECH)
"RTN","LA7VORM2",107,0)
 ; Collection duration
"RTN","LA7VORM2",108,0)
 S LA7OBX(5)=$$OBX5^LA7VOBX(LA7VAL,LA7OBX(2),LA7FS,LA7ECH)
"RTN","LA7VORM2",109,0)
 S LA7OBX(6)=$$OBX6^LA7VOBX("",LA764061,LA7FS,LA7ECH) ; unit
"RTN","LA7VORM2",110,0)
 D GEN
"RTN","LA7VORM2",111,0)
 Q
"RTN","LA7VORM2",112,0)
 ;
"RTN","LA7VORM2",113,0)
 ;
"RTN","LA7VORM2",114,0)
GEN ; Fields common to OBX segment
"RTN","LA7VORM2",115,0)
 ;
"RTN","LA7VORM2",116,0)
 N LA7DATA
"RTN","LA7VORM2",117,0)
 ;
"RTN","LA7VORM2",118,0)
 S LA7OBX(0)="OBX"
"RTN","LA7VORM2",119,0)
 ; OBX segment id
"RTN","LA7VORM2",120,0)
 S LA7OBX(1)=$$OBX1^LA7VOBX(.LA7OBXSN)
"RTN","LA7VORM2",121,0)
 S LA7OBX(11)="F"
"RTN","LA7VORM2",122,0)
 ; Facility that performed the testing
"RTN","LA7VORM2",123,0)
 S LA7OBX(15)=$$OBX15^LA7VOBX(LA74,LA7FS,LA7ECH)
"RTN","LA7VORM2",124,0)
 ;
"RTN","LA7VORM2",125,0)
 D BUILDSEG^LA7VHLU(.LA7OBX,.LA7DATA,LA7FS)
"RTN","LA7VORM2",126,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7VORM2",127,0)
 D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7VORM2",128,0)
 Q
"RTN","LA7VORM3")
0^48^B19717396
"RTN","LA7VORM3",1,0)
LA7VORM3 ;DALOI/JMC - LAB ORM (Order) message builder cont'd ; 11-21-986
"RTN","LA7VORM3",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VORM3",3,0)
 ;
"RTN","LA7VORM3",4,0)
 ;
"RTN","LA7VORM3",5,0)
OBR ;Observation Request segment for Lab Order
"RTN","LA7VORM3",6,0)
 N LA760,LA764,LA7ALT,LA7DATA,LA7DUR,LA7DURU,LA7NLT,LA7X,LA7Y,LRACC,OBR,SPC
"RTN","LA7VORM3",7,0)
 ;
"RTN","LA7VORM3",8,0)
 S LA760=+$P(LA762801(0),"^",2)
"RTN","LA7VORM3",9,0)
 S LA764=+$P($G(^LAB(60,LA760,64)),"^")
"RTN","LA7VORM3",10,0)
 S LA7NLT=$P($G(^LAM(LA764,0)),"^",2)
"RTN","LA7VORM3",11,0)
 ;
"RTN","LA7VORM3",12,0)
 S OBR(0)="OBR"
"RTN","LA7VORM3",13,0)
 S OBR(1)=$$OBR1^LA7VOBR(.LA7OBRSN) ;initialize OBR segment
"RTN","LA7VORM3",14,0)
 ;
"RTN","LA7VORM3",15,0)
 ; Remote UID
"RTN","LA7VORM3",16,0)
 S OBR(2)=$$OBR2^LA7VOBR(LA7UID,LA7FS,LA7ECH)
"RTN","LA7VORM3",17,0)
 ;
"RTN","LA7VORM3",18,0)
 ; Universal service ID
"RTN","LA7VORM3",19,0)
 S LA7ALT=""
"RTN","LA7VORM3",20,0)
 ; Non-VA code system
"RTN","LA7VORM3",21,0)
 I $L($P(LA762801(5),"^")) D
"RTN","LA7VORM3",22,0)
 . N LA7X
"RTN","LA7VORM3",23,0)
 . S LA7X(1)=$P(LA762801(5),"^",1)
"RTN","LA7VORM3",24,0)
 . S LA7X(2)=$P(LA762801(5),"^",2)
"RTN","LA7VORM3",25,0)
 . S LA7X(3)="99VA"_LA7V("NON")
"RTN","LA7VORM3",26,0)
 . S LA7ALT=LA7X(1)_"^"_LA7X(2)_"^"_LA7X(3)
"RTN","LA7VORM3",27,0)
 S OBR(4)=$$OBR4^LA7VOBR(LA7NLT,LA760,LA7ALT,LA7FS,LA7ECH)
"RTN","LA7VORM3",28,0)
 ;
"RTN","LA7VORM3",29,0)
 ; Collection date/time
"RTN","LA7VORM3",30,0)
 S OBR(7)=$$OBR7^LA7VOBR($P(LA76802(3),"^"))
"RTN","LA7VORM3",31,0)
 ;
"RTN","LA7VORM3",32,0)
 ; Collection end date/time
"RTN","LA7VORM3",33,0)
 I $P(LA762801(2),U,4)=1 D
"RTN","LA7VORM3",34,0)
 . S OBR(8)=$$OBR8^LA7VOBR($P(LA762801(2),U,5))
"RTN","LA7VORM3",35,0)
 ;
"RTN","LA7VORM3",36,0)
 ; Collection volume
"RTN","LA7VORM3",37,0)
 I $P(LA762801(2),U)=1 D
"RTN","LA7VORM3",38,0)
 . S OBR(9)=$$OBR9^LA7VOBR($P(LA762801(2),"^",2),$P(LA762801(2),"^",3),LA7FS,LA7ECH)
"RTN","LA7VORM3",39,0)
 ;
"RTN","LA7VORM3",40,0)
 ; Specimen action code
"RTN","LA7VORM3",41,0)
 S OBR(11)=$$OBR11^LA7VOBR("P")
"RTN","LA7VORM3",42,0)
 ;
"RTN","LA7VORM3",43,0)
 ; Infection warning - patient info
"RTN","LA7VORM3",44,0)
 S OBR(12)=$$OBR12^LA7VOBR(LRDFN,LA7FS,LA7ECH)
"RTN","LA7VORM3",45,0)
 ;
"RTN","LA7VORM3",46,0)
 ; Lab Arrival Time
"RTN","LA7VORM3",47,0)
 S OBR(14)=$$OBR14^LA7VOBR($P(LA76802(3),"^",3))
"RTN","LA7VORM3",48,0)
 ;
"RTN","LA7VORM3",49,0)
 ; Specimen source
"RTN","LA7VORM3",50,0)
 S OBR(15)=$$OBR15^LA7VOBR(+$P(LA762801(0),"^",3),"",LA7FS,LA7ECH)
"RTN","LA7VORM3",51,0)
 ;
"RTN","LA7VORM3",52,0)
 ; Ordering provider
"RTN","LA7VORM3",53,0)
 K LA7X
"RTN","LA7VORM3",54,0)
 S LA7X=$$FNDOLOC^LA7VHLU2(LA7UID)
"RTN","LA7VORM3",55,0)
 S OBR(16)=$$ORC12^LA7VORC($P(LA76802(0),"^",8),$P(LA7X,"^",3),LA7FS,LA7ECH)
"RTN","LA7VORM3",56,0)
 ;
"RTN","LA7VORM3",57,0)
 ; Placer's field #1 (HOST site)
"RTN","LA7VORM3",58,0)
 S OBR(18)="LA7V HOST "_SITE
"RTN","LA7VORM3",59,0)
 ;
"RTN","LA7VORM3",60,0)
 ; Placer's field #2
"RTN","LA7VORM3",61,0)
 K LA7X
"RTN","LA7VORM3",62,0)
 S LA7X(3)=LRAA,LA7X(4)=LRAD,LA7X(5)=LRAN,LA7X(6)=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,.2),U),LA7X(7)=LA7UID
"RTN","LA7VORM3",63,0)
 S OBR(19)=$$OBR19^LA7VOBR(.LA7X,LA7FS,LA7ECH)
"RTN","LA7VORM3",64,0)
 ;
"RTN","LA7VORM3",65,0)
 ; Test duration
"RTN","LA7VORM3",66,0)
 S (LA7DUR,LA7DURU)=""
"RTN","LA7VORM3",67,0)
 I $P(LA762801(2),"^",4) D
"RTN","LA7VORM3",68,0)
 . S LA7DUR=$P(LA762801(2),"^",6) ; collection duration
"RTN","LA7VORM3",69,0)
 . S LA7DURU=$P(LA762801(2),"^",7) ; duration units
"RTN","LA7VORM3",70,0)
 ;
"RTN","LA7VORM3",71,0)
 ; Test urgency
"RTN","LA7VORM3",72,0)
 S LA76205=+$$GET1^DIQ(68.04,LA760_","_LRAN_","_LRAD_","_LRAA_",",1,"I")
"RTN","LA7VORM3",73,0)
 S OBR(27)=$$OBR27^LA7VOBR(LA7DUR,LA7DURU,LA76205,LA7FS,LA7ECH)
"RTN","LA7VORM3",74,0)
 ;
"RTN","LA7VORM3",75,0)
 S $P(OBR(34),HLCOMP,7)=$P($G(LA7V("HOST")),U)
"RTN","LA7VORM3",76,0)
 ;
"RTN","LA7VORM3",77,0)
 D BUILDSEG^LA7VHLU(.OBR,.LA7DATA,LA7FS)
"RTN","LA7VORM3",78,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7VORM3",79,0)
 D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7VORM3",80,0)
 Q
"RTN","LA7VORM3",81,0)
 ;
"RTN","LA7VORM3",82,0)
OBX ; Build OBX segments with required info if any.
"RTN","LA7VORM3",83,0)
 ;
"RTN","LA7VORM3",84,0)
 N LA74,LA7DUR,LA7DURU
"RTN","LA7VORM3",85,0)
 ;
"RTN","LA7VORM3",86,0)
 ; Collecting facility
"RTN","LA7VORM3",87,0)
 S LA74=$P(LA7629(0),"^",2)
"RTN","LA7VORM3",88,0)
 S LA7OBXSN=0
"RTN","LA7VORM3",89,0)
 ;
"RTN","LA7VORM3",90,0)
 ; Patient height
"RTN","LA7VORM3",91,0)
 I $P(LA762801(1),"^") D PTHT^LA7VORM2($P(LA762801(1),"^",2),$P(LA762801(1),"^",3),$P(LA762801(1),"^",7),LA74,.LA7OBXSN,.LRI,LA7FS,LA7ECH,LA76249)
"RTN","LA7VORM3",92,0)
 ;
"RTN","LA7VORM3",93,0)
 ; Patient weight
"RTN","LA7VORM3",94,0)
 I $P(LA762801(1),"^",4) D PTWT^LA7VORM2($P(LA762801(1),"^",5),$P(LA762801(1),"^",6),$P(LA762801(1),"^",8),LA74,.LA7OBXSN,.LRI,LA7FS,LA7ECH,LA76249)
"RTN","LA7VORM3",95,0)
 ;
"RTN","LA7VORM3",96,0)
 ; Collection duration
"RTN","LA7VORM3",97,0)
 S (LA7DUR,LA7DURU)=""
"RTN","LA7VORM3",98,0)
 I $P(LA762801(2),"^",4) D
"RTN","LA7VORM3",99,0)
 . S LA7DUR=$P(LA762801(2),"^",6) ; collection duration
"RTN","LA7VORM3",100,0)
 . S LA7DURU=$P(LA762801(2),"^",7) ; duration units
"RTN","LA7VORM3",101,0)
 . D SPDUR^LA7VORM2($P(LA762801(2),"^",6),$P(LA762801(2),"^",7),$P(LA762801(2),"^",12),LA74,.LA7OBXSN,.LRI,LA7FS,LA7ECH,LA76249)
"RTN","LA7VORM3",102,0)
 ;
"RTN","LA7VORM3",103,0)
 ; Collection volume
"RTN","LA7VORM3",104,0)
 I $P(LA762801(2),"^",2) D
"RTN","LA7VORM3",105,0)
 . D SPCV^LA7VORM2($P(LA762801(2),"^",2),$P(LA762801(2),"^",3),$P(LA762801(2),"^",11),LA74,.LA7OBXSN,.LRI,LA7FS,LA7ECH,LA76249)
"RTN","LA7VORM3",106,0)
 ;
"RTN","LA7VORM3",107,0)
 ; Specimen weight
"RTN","LA7VORM3",108,0)
 I $P(LA762801(2),"^",8) D SPWT^LA7VORM2($P(LA762801(2),"^",9),$P(LA762801(2),"^",10),LA7DUR_LA7DURU,$P(LA762801(2),"^",13),LA74,.LA7OBXSN,.LRI,LA7FS,LA7ECH,LA76249)
"RTN","LA7VORM3",109,0)
 ;
"RTN","LA7VORM3",110,0)
 ; Check for anatomic/surigal path subscripts
"RTN","LA7VORM3",111,0)
 I "SP^CY^AU^EM"[$P($G(^LRO(68,LRAA,0)),"^",2) D AP
"RTN","LA7VORM3",112,0)
 ;
"RTN","LA7VORM3",113,0)
 Q
"RTN","LA7VORM3",114,0)
 ;
"RTN","LA7VORM3",115,0)
 ;
"RTN","LA7VORM3",116,0)
AP ; Observation/Result segment for Lab AP Results sent with Order Message
"RTN","LA7VORM3",117,0)
 ;
"RTN","LA7VORM3",118,0)
 N LA7DATA,LA7IDT,LRSB,LRSS
"RTN","LA7VORM3",119,0)
 ;
"RTN","LA7VORM3",120,0)
 S LRSS=$P($G(^LRO(68,LRAA,0)),"^",2)
"RTN","LA7VORM3",121,0)
 S LA7IDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),"^",5)
"RTN","LA7VORM3",122,0)
 ;
"RTN","LA7VORM3",123,0)
 ; Surgical pathology (SP) subscript reports
"RTN","LA7VORM3",124,0)
 ; JMC/5/25/00 - not processing field #1.2 supplementary report yet.
"RTN","LA7VORM3",125,0)
 ;I LRSS="SP" F LRSB=.012,.013,.014,.015,.016,1.1,1.2,1.3 D OBX^LA7VORU1
"RTN","LA7VORM3",126,0)
 I LRSS="SP" F LRSB=.012,.013,.014,.015,.016,1.1,1.3 D OBX^LA7VORU1
"RTN","LA7VORM3",127,0)
 ;
"RTN","LA7VORM3",128,0)
 ; Cytology (CY) subscript reports
"RTN","LA7VORM3",129,0)
 I LRSS="CY" F LRSB=.012,.013,.014,.015,.016,1.1,1.2,1.3 D OBX^LA7VORU1
"RTN","LA7VORM3",130,0)
 ;
"RTN","LA7VORM3",131,0)
 ; Cytology (EM) subscript reports
"RTN","LA7VORM3",132,0)
 I LRSS="EM" F LRSB=.012,.013,.014,.015,.016,1.1,1.2,1.3 D OBX^LA7VORU1
"RTN","LA7VORM3",133,0)
 ;
"RTN","LA7VORM3",134,0)
 Q
"RTN","LA7VORU")
0^15^B61246924
"RTN","LA7VORU",1,0)
LA7VORU ;DALOI/JMC - Builder of HL7 Lab Results OBR/OBX/NTE ; 12/3/1997
"RTN","LA7VORU",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46**;Sep 27, 1994
"RTN","LA7VORU",3,0)
 ;
"RTN","LA7VORU",4,0)
EN(LA) ; called from IN^LA7VMSG(...)
"RTN","LA7VORU",5,0)
 ; variables
"RTN","LA7VORU",6,0)
 ; LA("HUID") - Host Unique ID from the local ACCESSION file (#68)
"RTN","LA7VORU",7,0)
 ; LA("SITE") - Ordering site IEN in the INSTITUTION file (#4)
"RTN","LA7VORU",8,0)
 ; LA("RUID") - Remote sites Unique ID from ACCESSION file (#68)
"RTN","LA7VORU",9,0)
 ; LA("ORD") - Free text ordered test name from WKLD CODE file (#64)
"RTN","LA7VORU",10,0)
 ; LA("NLT") - National Laboratory test code from WKLD CODE file (#64)
"RTN","LA7VORU",11,0)
 ; LA("LRIDT") - Inverse date/time the lab arrival time (accession date/time)
"RTN","LA7VORU",12,0)
 ; LA("SUB") - test subscript defined in LABORATORY TEST file (#60)
"RTN","LA7VORU",13,0)
 ; LA("LRDFN") - IEN in LAB DATA file (#63)
"RTN","LA7VORU",14,0)
 ; LA("ORD"), LA("NLT"), and LA("SUB") are sent for specific lab results.
"RTN","LA7VORU",15,0)
 ; LA("AUTO-INST") - Auto-Instrument
"RTN","LA7VORU",16,0)
 ;
"RTN","LA7VORU",17,0)
 N LA763,LA7NLT,LA7NVAF,LA7X,PRIMARY
"RTN","LA7VORU",18,0)
 ;
"RTN","LA7VORU",19,0)
 S PRIMARY=$$PRIM^VASITE(DT),LA("AUTO-INST")=""
"RTN","LA7VORU",20,0)
 I $G(PRIMARY)'="" D
"RTN","LA7VORU",21,0)
 . S PRIMARY=$$SITE^VASITE(DT,PRIMARY)
"RTN","LA7VORU",22,0)
 . S PRIMARY=$P(PRIMARY,U,3)
"RTN","LA7VORU",23,0)
 . S LA("AUTO-INST")="LA7V HOST "_PRIMARY
"RTN","LA7VORU",24,0)
 ;
"RTN","LA7VORU",25,0)
 I '$O(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),0)) D  Q
"RTN","LA7VORU",26,0)
 . ; need to add error logging when no entry in 63.
"RTN","LA7VORU",27,0)
 ;
"RTN","LA7VORU",28,0)
 ; Get zeroth node of entry in #63.
"RTN","LA7VORU",29,0)
 S LA763(0)=$G(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),0))
"RTN","LA7VORU",30,0)
 S LA7NLT=$G(LA("NLT"))
"RTN","LA7VORU",31,0)
 ;
"RTN","LA7VORU",32,0)
 D NVAF
"RTN","LA7VORU",33,0)
 S LA7NTESN=0
"RTN","LA7VORU",34,0)
 D ORC
"RTN","LA7VORU",35,0)
 ;
"RTN","LA7VORU",36,0)
 I $G(LA("SUB"))="CH" D CH
"RTN","LA7VORU",37,0)
 I $G(LA("SUB"))="MI" D MI^LA7VORU1
"RTN","LA7VORU",38,0)
 I $G(LA("SUB"))="AP" D AP^LA7VORU2
"RTN","LA7VORU",39,0)
 Q
"RTN","LA7VORU",40,0)
 ;
"RTN","LA7VORU",41,0)
 ;
"RTN","LA7VORU",42,0)
CH ; Build segments for "CH" subscript
"RTN","LA7VORU",43,0)
 ;
"RTN","LA7VORU",44,0)
 D OBR
"RTN","LA7VORU",45,0)
 D NTE
"RTN","LA7VORU",46,0)
 S LA7OBXSN=0
"RTN","LA7VORU",47,0)
 D OBX
"RTN","LA7VORU",48,0)
 ;
"RTN","LA7VORU",49,0)
 Q
"RTN","LA7VORU",50,0)
 ;
"RTN","LA7VORU",51,0)
 ;
"RTN","LA7VORU",52,0)
ORC ; Build ORC segment
"RTN","LA7VORU",53,0)
 ;
"RTN","LA7VORU",54,0)
 N LA763,LA7696,LA7DATA,LA7SM,LA7X,LA7Y,ORC
"RTN","LA7VORU",55,0)
 ;
"RTN","LA7VORU",56,0)
 S LA763(0)=$G(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),0))
"RTN","LA7VORU",57,0)
 ;
"RTN","LA7VORU",58,0)
 S ORC(0)="ORC"
"RTN","LA7VORU",59,0)
 ;
"RTN","LA7VORU",60,0)
 ; Order control
"RTN","LA7VORU",61,0)
 S ORC(1)=$$ORC1^LA7VORC("RE")
"RTN","LA7VORU",62,0)
 ;
"RTN","LA7VORU",63,0)
 ; Remote UID
"RTN","LA7VORU",64,0)
 S ORC(2)=$$ORC2^LA7VORC(LA("RUID"),LA7FS,LA7ECH)
"RTN","LA7VORU",65,0)
 ;
"RTN","LA7VORU",66,0)
 ; Host UID
"RTN","LA7VORU",67,0)
 S ORC(3)=$$ORC3^LA7VORC(LA("HUID"),LA7FS,LA7ECH)
"RTN","LA7VORU",68,0)
 ;
"RTN","LA7VORU",69,0)
 ; Return shipping manifest if found
"RTN","LA7VORU",70,0)
 S LA7SM="",LA7696=0
"RTN","LA7VORU",71,0)
 I $L(LA("SITE")),$L(LA("RUID")) S LA7696=$O(^LRO(69.6,"RST",LA("SITE"),LA("RUID"),0))
"RTN","LA7VORU",72,0)
 I LA7696 S LA7SM=$P($G(^LRO(69.6,LA7696,0)),U,14)
"RTN","LA7VORU",73,0)
 I $L(LA7SM) S ORC(4)=$$ORC4^LA7VORC(LA7SM,LA7FS,LA7ECH)
"RTN","LA7VORU",74,0)
 ;
"RTN","LA7VORU",75,0)
 ; Ordering provider
"RTN","LA7VORU",76,0)
 S (LA7X,LA7Y)=""
"RTN","LA7VORU",77,0)
 ; "CH" subscript stores requesting provider and requesting div/location.
"RTN","LA7VORU",78,0)
 I LA("SUB")="CH" D
"RTN","LA7VORU",79,0)
 . N LA7J
"RTN","LA7VORU",80,0)
 . S LA7J=$P(LA763(0),"^",13)
"RTN","LA7VORU",81,0)
 . I $P(LA7J,";",2)="SC(" S LA7Y=$$GET1^DIQ(44,$P(LA7J,";")_",",3,"I")
"RTN","LA7VORU",82,0)
 . I $P(LA7J,";",2)="DIC(4," S LA7Y=$P(LA7J,";")
"RTN","LA7VORU",83,0)
 . S LA7X=$P(LA763(0),"^",10)
"RTN","LA7VORU",84,0)
 ;
"RTN","LA7VORU",85,0)
 ; Other subscripts only store requesting provider
"RTN","LA7VORU",86,0)
 I "CYEMMISP"[LA("SUB") S LA7X=$P(LA763(0),"^",7)
"RTN","LA7VORU",87,0)
 ; Get default institution from MailMan Site Parameters file
"RTN","LA7VORU",88,0)
 I LA7Y="" S LA7Y=$$GET1^DIQ(4.3,"1,",217,"I")
"RTN","LA7VORU",89,0)
 S ORC(12)=$$ORC12^LA7VORC(LA7X,LA7Y,LA7FS,LA7ECH)
"RTN","LA7VORU",90,0)
 ;
"RTN","LA7VORU",91,0)
 ; Entering organization
"RTN","LA7VORU",92,0)
 S ORC(17)=$$ORC17^LA7VORC(LA7Y,LA7FS,LA7ECH)
"RTN","LA7VORU",93,0)
 ;
"RTN","LA7VORU",94,0)
 D BUILDSEG^LA7VHLU(.ORC,.LA7DATA,LA7FS)
"RTN","LA7VORU",95,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7VORU",96,0)
 ;
"RTN","LA7VORU",97,0)
 ; Check for flag to only build message but do not file/send
"RTN","LA7VORU",98,0)
 I '$G(LA7NOMSG) D FILE6249^LA7VHLU(LA76249P,.LA7DATA)
"RTN","LA7VORU",99,0)
 ;
"RTN","LA7VORU",100,0)
 Q
"RTN","LA7VORU",101,0)
 ;
"RTN","LA7VORU",102,0)
 ;
"RTN","LA7VORU",103,0)
OBR ;Observation Request segment for Lab Order
"RTN","LA7VORU",104,0)
 ;
"RTN","LA7VORU",105,0)
 N LA761,LA7DATA,LA7PLOBR,LA7X,LA7Y,OBR
"RTN","LA7VORU",106,0)
 ;
"RTN","LA7VORU",107,0)
 ; Retrieve placer's OBR information stored in #69.6
"RTN","LA7VORU",108,0)
 D RETOBR^LA7VHLU(LA("SITE"),LA("RUID"),LA("NLT"),.LA7PLOBR)
"RTN","LA7VORU",109,0)
 ;
"RTN","LA7VORU",110,0)
 ; Initialize OBR segment
"RTN","LA7VORU",111,0)
 S OBR(0)="OBR"
"RTN","LA7VORU",112,0)
 S OBR(1)=$$OBR1^LA7VOBR(.LA7OBRSN)
"RTN","LA7VORU",113,0)
 ;
"RTN","LA7VORU",114,0)
 ; Remote UID
"RTN","LA7VORU",115,0)
 S OBR(2)=$$OBR2^LA7VOBR(LA("RUID"),LA7FS,LA7ECH)
"RTN","LA7VORU",116,0)
 ;
"RTN","LA7VORU",117,0)
 ; Host UID
"RTN","LA7VORU",118,0)
 S OBR(3)=$$OBR3^LA7VOBR(LA("HUID"),LA7FS,LA7ECH)
"RTN","LA7VORU",119,0)
 ;
"RTN","LA7VORU",120,0)
 ; Universal service ID, build from info stored in #69.6
"RTN","LA7VORU",121,0)
 S LA7X=""
"RTN","LA7VORU",122,0)
 ;I $D(LA7PLOBR("OBR-4")) S LA7X=$$CNVFLD^LA7VHLU3(LA7PLOBR("OBR-4"),LA7PLOBR("ECH"),LA7ECH)
"RTN","LA7VORU",123,0)
 S OBR(4)=$$OBR4^LA7VOBR(LA7NLT,"",LA7X,LA7FS,LA7ECH)
"RTN","LA7VORU",124,0)
 ;
"RTN","LA7VORU",125,0)
 ; Collection D/T
"RTN","LA7VORU",126,0)
 S OBR(7)=$$OBR7^LA7VOBR($P(LA763(0),U))
"RTN","LA7VORU",127,0)
 ;
"RTN","LA7VORU",128,0)
 ; Infection Warning
"RTN","LA7VORU",129,0)
 S OBR(12)=$$OBR12^LA7VOBR(LRDFN,LA7FS,LA7ECH)
"RTN","LA7VORU",130,0)
 ;
"RTN","LA7VORU",131,0)
 ; Lab Arrival Time
"RTN","LA7VORU",132,0)
 ; "CH" subscript does not store lab arrival time, use collection time.
"RTN","LA7VORU",133,0)
 ; Other subscripts do store lab arrival time (date/time received).
"RTN","LA7VORU",134,0)
 I "CYEMMISP"[LA("SUB") S OBR(14)=$$OBR14^LA7VOBR($P(LA763(0),"^",10))
"RTN","LA7VORU",135,0)
 I LA("SUB")="CH" S OBR(14)=$$OBR14^LA7VOBR($P(LA763(0),"^"))
"RTN","LA7VORU",136,0)
 ;
"RTN","LA7VORU",137,0)
 ; Specimen source 
"RTN","LA7VORU",138,0)
 S LA761=""
"RTN","LA7VORU",139,0)
 I "CHMI"[LA("SUB") D
"RTN","LA7VORU",140,0)
 . S LA761=$P(LA763(0),U,5)
"RTN","LA7VORU",141,0)
 . I LA761="" D CREATE^LA7LOG(27)
"RTN","LA7VORU",142,0)
 S OBR(15)=$$OBR15^LA7VOBR(LA761,"",LA7FS,LA7ECH)
"RTN","LA7VORU",143,0)
 ;
"RTN","LA7VORU",144,0)
 ; Ordering provider
"RTN","LA7VORU",145,0)
 S (LA7X,LA7Y)=""
"RTN","LA7VORU",146,0)
 ; "CH" subscript stores requesting provider and requesting div/location.
"RTN","LA7VORU",147,0)
 I LA("SUB")="CH" D
"RTN","LA7VORU",148,0)
 . N LA7J
"RTN","LA7VORU",149,0)
 . S LA7J=$P(LA763(0),"^",13)
"RTN","LA7VORU",150,0)
 . I $P(LA7J,";",2)="SC(" S LA7Y=$$GET1^DIQ(44,$P(LA7J,";")_",",3,"I")
"RTN","LA7VORU",151,0)
 . I $P(LA7J,";",2)="DIC(4," S LA7Y=$P(LA7J,";")
"RTN","LA7VORU",152,0)
 . S LA7X=$P(LA763(0),"^",10)
"RTN","LA7VORU",153,0)
 ;
"RTN","LA7VORU",154,0)
 ; Other subscripts only store requesting provider
"RTN","LA7VORU",155,0)
 I "CYEMMISP"[LA("SUB") S LA7X=$P(LA763(0),"^",7)
"RTN","LA7VORU",156,0)
 ; Get default institution from MailMan Site Parameters file
"RTN","LA7VORU",157,0)
 I LA7Y="" S LA7Y=$$GET1^DIQ(4.3,"1,",217,"I")
"RTN","LA7VORU",158,0)
 S OBR(16)=$$ORC12^LA7VORC(LA7X,LA7Y,LA7FS,LA7ECH)
"RTN","LA7VORU",159,0)
 ;
"RTN","LA7VORU",160,0)
 ; Placer Field #1 (remote auto-inst)
"RTN","LA7VORU",161,0)
 ; Build from info stored in #69.6
"RTN","LA7VORU",162,0)
 I '$L($G(LA7PLOBR("OBR-18"))) D
"RTN","LA7VORU",163,0)
 . N LA7X
"RTN","LA7VORU",164,0)
 . S LA7X(1)=LA("AUTO-INST")
"RTN","LA7VORU",165,0)
 . S OBR(18)=$$OBR18^LA7VOBR(.LA7X,LA7FS,LA7ECH)
"RTN","LA7VORU",166,0)
 ;
"RTN","LA7VORU",167,0)
 I $L($G(LA7PLOBR("OBR-18"))) D
"RTN","LA7VORU",168,0)
 . S OBR(18)=$$CNVFLD^LA7VHLU3(LA7PLOBR("OBR-18"),LA7PLOBR("ECH"),LA7ECH)
"RTN","LA7VORU",169,0)
 ;
"RTN","LA7VORU",170,0)
 ; Placer Field #2
"RTN","LA7VORU",171,0)
 I '$L($G(LA7PLOBR("OBR-19"))) D
"RTN","LA7VORU",172,0)
 . N LA7X
"RTN","LA7VORU",173,0)
 . S LA7X(7)=LA("RUID")
"RTN","LA7VORU",174,0)
 . S OBR(19)=$$OBR19^LA7VOBR(.LA7X,LA7FS,LA7ECH)
"RTN","LA7VORU",175,0)
 ;
"RTN","LA7VORU",176,0)
 I $L($G(LA7PLOBR("OBR-19"))) D
"RTN","LA7VORU",177,0)
 . S OBR(19)=$$CNVFLD^LA7VHLU3(LA7PLOBR("OBR-19"),LA7PLOBR("ECH"),LA7ECH)
"RTN","LA7VORU",178,0)
 ;
"RTN","LA7VORU",179,0)
 ; Date Report Completed
"RTN","LA7VORU",180,0)
 I $P(LA763(0),"^",3) S OBR(22)=$$OBR22^LA7VOBR($P(LA763(0),"^",3))
"RTN","LA7VORU",181,0)
 ;
"RTN","LA7VORU",182,0)
 ; Parent Result and Parent
"RTN","LA7VORU",183,0)
 I $D(LA7PARNT) D
"RTN","LA7VORU",184,0)
 . S OBR(26)=$$OBR26^LA7VOBR(LA7PARNT(1),LA7PARNT(2),LA7PARNT(3),LA7FS,LA7ECH)
"RTN","LA7VORU",185,0)
 . S OBR(29)=$$OBR29^LA7VOBR(LA("RUID"),LA("HUID"),LA7FS,LA7ECH)
"RTN","LA7VORU",186,0)
 ;
"RTN","LA7VORU",187,0)
 D BUILDSEG^LA7VHLU(.OBR,.LA7DATA,LA7FS)
"RTN","LA7VORU",188,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7VORU",189,0)
 ;
"RTN","LA7VORU",190,0)
 ; Check for flag to only build message but do not file/send
"RTN","LA7VORU",191,0)
 I $G(LA7NOMSG) Q
"RTN","LA7VORU",192,0)
 ;
"RTN","LA7VORU",193,0)
 D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7VORU",194,0)
 ;
"RTN","LA7VORU",195,0)
 Q
"RTN","LA7VORU",196,0)
 ;
"RTN","LA7VORU",197,0)
 ;
"RTN","LA7VORU",198,0)
OBX ;Observation/Result segment for Lab Results
"RTN","LA7VORU",199,0)
 ;
"RTN","LA7VORU",200,0)
 N LA7953,LA7DATA,LA7VT,LA7VTIEN,LR,LRNLT,TSTIEN
"RTN","LA7VORU",201,0)
 ;
"RTN","LA7VORU",202,0)
 S LA7VTIEN=0
"RTN","LA7VORU",203,0)
 F  S LA7VTIEN=$O(^LAHM(62.49,LA(62.49),1,LA7VTIEN)) Q:'LA7VTIEN  D
"RTN","LA7VORU",204,0)
 . S LA7VT=$P(^LAHM(62.49,LA(62.49),1,LA7VTIEN,0),U)
"RTN","LA7VORU",205,0)
 . ; Build OBX segment
"RTN","LA7VORU",206,0)
 . K LA7DATA
"RTN","LA7VORU",207,0)
 . D OBX^LA7VOBX(LA("LRDFN"),LA("SUB"),LA("LRIDT"),LA7VT,.LA7DATA,.LA7OBXSN,LA7FS,LA7ECH)
"RTN","LA7VORU",208,0)
 . ; If OBX failed to build then don't store
"RTN","LA7VORU",209,0)
 . I '$D(LA7DATA) Q
"RTN","LA7VORU",210,0)
 . ;
"RTN","LA7VORU",211,0)
 . D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7VORU",212,0)
 . D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7VORU",213,0)
 . ;
"RTN","LA7VORU",214,0)
 . ; Send any interpretation from file #60
"RTN","LA7VORU",215,0)
 . D INTRP
"RTN","LA7VORU",216,0)
 . ;
"RTN","LA7VORU",217,0)
 . ; Mark result as sent
"RTN","LA7VORU",218,0)
 . I LA("SUB")="CH" S $P(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),LA7VT),"^",10)=1
"RTN","LA7VORU",219,0)
 ;
"RTN","LA7VORU",220,0)
 Q
"RTN","LA7VORU",221,0)
 ;
"RTN","LA7VORU",222,0)
 ;
"RTN","LA7VORU",223,0)
NTE ; Build NTE segment
"RTN","LA7VORU",224,0)
 ;
"RTN","LA7VORU",225,0)
 N LA7DIV,LA7NTE,LA7SOC,LA7TXT,LA7X,X
"RTN","LA7VORU",226,0)
 ;
"RTN","LA7VORU",227,0)
 ; Source of comment - handle special codes for other systems, i,e. DOD-CHCS
"RTN","LA7VORU",228,0)
 S LA7SOC=$S($G(LA7NVAF)=1:"AC",1:"L")
"RTN","LA7VORU",229,0)
 ;
"RTN","LA7VORU",230,0)
 ; Initialize segment set id
"RTN","LA7VORU",231,0)
 S LA7NTESN=0
"RTN","LA7VORU",232,0)
 ;
"RTN","LA7VORU",233,0)
 ; Find reporting facility (division).
"RTN","LA7VORU",234,0)
 S LA7DIV=""
"RTN","LA7VORU",235,0)
 I LA("SUB")="CH" S LA7DIV=$P(LA763(0),"^",9)
"RTN","LA7VORU",236,0)
 I LA7DIV D
"RTN","LA7VORU",237,0)
 . S X=$$GET1^DIQ(4,LA7DIV_",",100)
"RTN","LA7VORU",238,0)
 . I $L(X) S LA7DIV=X
"RTN","LA7VORU",239,0)
 . E  S LA7DIV=$$GET1^DIQ(4,LA7DIV_",",.01)
"RTN","LA7VORU",240,0)
 I LA7DIV="" D
"RTN","LA7VORU",241,0)
 . S LA7DIV=$$GET1^DIQ(4,+$P($G(^XMB(1,1,"XUS")),"^",17)_",",100)
"RTN","LA7VORU",242,0)
 . I $L(LA7DIV) Q
"RTN","LA7VORU",243,0)
 . S LA7DIV=$$GET1^DIQ(4,+$P($G(^XMB(1,1,"XUS")),"^",17)_",",.01)
"RTN","LA7VORU",244,0)
 ;
"RTN","LA7VORU",245,0)
 ; Build performing laboratory comment
"RTN","LA7VORU",246,0)
 I $G(LA("ORD"))="" D
"RTN","LA7VORU",247,0)
 . S (LA("ORD"),LA7X)=""
"RTN","LA7VORU",248,0)
 . I $L($G(LA("NLT"))) S LA7X=$O(^LAM("E",LA("NLT"),0))
"RTN","LA7VORU",249,0)
 . I LA7X S LA("ORD")=$$GET1^DIQ(64,LA7X_",",.01)
"RTN","LA7VORU",250,0)
 . I LA("ORD")="",$G(LA7NLT) S LA7X=$O(^LAM("E",LA7NLT,0)) S:LA7X LA("ORD")=$$GET1^DIQ(64,LA7X_",",.01)
"RTN","LA7VORU",251,0)
 S LA7TXT=LA("ORD")_" results from "_LA7DIV_"."
"RTN","LA7VORU",252,0)
 D NTE^LA7VORU1
"RTN","LA7VORU",253,0)
 ;
"RTN","LA7VORU",254,0)
 ; Send "MI" specimen's comments
"RTN","LA7VORU",255,0)
 I LA("SUB")="MI" D
"RTN","LA7VORU",256,0)
 . K LA7NTE
"RTN","LA7VORU",257,0)
 . S LA7TXT=$G(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),99))
"RTN","LA7VORU",258,0)
 . I $L(LA7TXT) D NTE^LA7VORU1
"RTN","LA7VORU",259,0)
 ;
"RTN","LA7VORU",260,0)
 ; Send "CH" specimen's comments
"RTN","LA7VORU",261,0)
 I LA("SUB")="CH" D
"RTN","LA7VORU",262,0)
 . S LA7X=0
"RTN","LA7VORU",263,0)
 . F  S LA7X=$O(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),1,LA7X)) Q:'LA7X  D
"RTN","LA7VORU",264,0)
 . . K LA7NTE
"RTN","LA7VORU",265,0)
 . . S LA7TXT=$G(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),1,LA7X,0))
"RTN","LA7VORU",266,0)
 . . D NTE^LA7VORU1
"RTN","LA7VORU",267,0)
 Q
"RTN","LA7VORU",268,0)
 ;
"RTN","LA7VORU",269,0)
 ;
"RTN","LA7VORU",270,0)
INTRP ; Send test interpretation
"RTN","LA7VORU",271,0)
 ; Send "CH" file #60 site/specimen's interpretation field (#5.5)
"RTN","LA7VORU",272,0)
 ;
"RTN","LA7VORU",273,0)
 N LA760,LA761,LA7NTE,LA7TXT,LA7X
"RTN","LA7VORU",274,0)
 ;
"RTN","LA7VORU",275,0)
 S LA760=+$O(^LAB(60,"C","CH;"_LA7VT_";1",0))
"RTN","LA7VORU",276,0)
 S LA761=+$P(LA763(0),"^",5)
"RTN","LA7VORU",277,0)
 ;
"RTN","LA7VORU",278,0)
 ; Check if entry has interpretation entered for this test/specimen.
"RTN","LA7VORU",279,0)
 I '$D(^LAB(60,LA760,1,LA761,1)) Q
"RTN","LA7VORU",280,0)
 ;
"RTN","LA7VORU",281,0)
 ; Initialize segment set id
"RTN","LA7VORU",282,0)
 S LA7NTESN=0
"RTN","LA7VORU",283,0)
 ;
"RTN","LA7VORU",284,0)
 ; Build each line of interpretation as a NTE segment.
"RTN","LA7VORU",285,0)
 S LA7X=0
"RTN","LA7VORU",286,0)
 F  S LA7X=$O(^LAB(60,LA760,1,LA761,1,LA7X)) Q:'LA7X  D
"RTN","LA7VORU",287,0)
 . S LA7TXT=$G(^LAB(60,LA760,1,LA761,1,LA7X,0))
"RTN","LA7VORU",288,0)
 . D NTE^LA7VORU1
"RTN","LA7VORU",289,0)
 ;
"RTN","LA7VORU",290,0)
 Q
"RTN","LA7VORU",291,0)
 ;
"RTN","LA7VORU",292,0)
 ;
"RTN","LA7VORU",293,0)
NVAF ; Set flag sending to non-VA facility.
"RTN","LA7VORU",294,0)
 ; Used to code certain segments for other systems, i.e. CHCS-DOD.
"RTN","LA7VORU",295,0)
 ;
"RTN","LA7VORU",296,0)
 N LA7X
"RTN","LA7VORU",297,0)
 ;
"RTN","LA7VORU",298,0)
 S LA7X=""
"RTN","LA7VORU",299,0)
 I $G(LA("SITE")) S LA7X=$$GET1^DIQ(4,LA("SITE")_",",95,"I")
"RTN","LA7VORU",300,0)
 S LA7NVAF=$S(LA7X="N":1,LA7X="AF":1,LA7X="ARMY":1,LA7X="I":2,LA7X="O":3,1:0)
"RTN","LA7VORU",301,0)
 Q
"RTN","LA7VORU1")
0^51^B33175149
"RTN","LA7VORU1",1,0)
LA7VORU1 ;DALOI/JMC - Builder of HL7 Lab Results Microbiology OBR/OBX/NTE ; 05/26/00
"RTN","LA7VORU1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VORU1",3,0)
 Q
"RTN","LA7VORU1",4,0)
 ;
"RTN","LA7VORU1",5,0)
 ;
"RTN","LA7VORU1",6,0)
MI ; Build segments for "MI" subscript
"RTN","LA7VORU1",7,0)
 ;
"RTN","LA7VORU1",8,0)
 N LA7IDT,LA7IENS,LA7NLT,LA7POBX3,LA7POBX4,LA7POBX5,LRDFN,LRIDT,LRSB,LRSS
"RTN","LA7VORU1",9,0)
 ;
"RTN","LA7VORU1",10,0)
 S LRDFN=LA("LRDFN"),LRSS=LA("SUB"),(LA7IENS,LRIDT)=LA("LRIDT")
"RTN","LA7VORU1",11,0)
 ;
"RTN","LA7VORU1",12,0)
 ; Bacteriology Report
"RTN","LA7VORU1",13,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,1)) D
"RTN","LA7VORU1",14,0)
 . S LRSB=11,LA7NLT="87993.0000"
"RTN","LA7VORU1",15,0)
 . D OBR^LA7VORU
"RTN","LA7VORU1",16,0)
 . D NTE^LA7VORU
"RTN","LA7VORU1",17,0)
 . F LRSB=1,1.5,11 D RPTNTE
"RTN","LA7VORU1",18,0)
 . N LRSB
"RTN","LA7VORU1",19,0)
 . S LA7OBXSN=0
"RTN","LA7VORU1",20,0)
 . ; Report gram stain
"RTN","LA7VORU1",21,0)
 . I $D(^LR(LRDFN,LRSS,LRIDT,2)) D GS
"RTN","LA7VORU1",22,0)
 . ; Check for organism id
"RTN","LA7VORU1",23,0)
 . I '$D(^LR(LRDFN,LRSS,LRIDT,3)) Q
"RTN","LA7VORU1",24,0)
 . S LRSB=12
"RTN","LA7VORU1",25,0)
 . D ORG
"RTN","LA7VORU1",26,0)
 . D MIC
"RTN","LA7VORU1",27,0)
 ;
"RTN","LA7VORU1",28,0)
 ; Parasite report
"RTN","LA7VORU1",29,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,5)) D
"RTN","LA7VORU1",30,0)
 . S LRSB=14,LA7NLT="87505.0000"
"RTN","LA7VORU1",31,0)
 . D OBR^LA7VORU
"RTN","LA7VORU1",32,0)
 . D NTE^LA7VORU
"RTN","LA7VORU1",33,0)
 . F LRSB=16.5,16.4,14 D RPTNTE
"RTN","LA7VORU1",34,0)
 . ; Check for organism id
"RTN","LA7VORU1",35,0)
 . I '$D(^LR(LRDFN,LRSS,LRIDT,6)) Q
"RTN","LA7VORU1",36,0)
 . N LRSB
"RTN","LA7VORU1",37,0)
 . S LA7OBXSN=0,LA7IDT=LRIDT,LRSB=16
"RTN","LA7VORU1",38,0)
 . D ORG
"RTN","LA7VORU1",39,0)
 ;
"RTN","LA7VORU1",40,0)
 ; Mycology report
"RTN","LA7VORU1",41,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,8)) D
"RTN","LA7VORU1",42,0)
 . S LRSB=18,LA7NLT="87994.0000"
"RTN","LA7VORU1",43,0)
 . D OBR^LA7VORU
"RTN","LA7VORU1",44,0)
 . D NTE^LA7VORU
"RTN","LA7VORU1",45,0)
 . F LRSB=20.5,20.4,18 D RPTNTE
"RTN","LA7VORU1",46,0)
 . ; Check for organism id
"RTN","LA7VORU1",47,0)
 . I '$D(^LR(LRDFN,LRSS,LRIDT,9)) Q
"RTN","LA7VORU1",48,0)
 . N LRSB
"RTN","LA7VORU1",49,0)
 . S LA7OBXSN=0,LA7IDT=LRIDT,LRSB=20
"RTN","LA7VORU1",50,0)
 . D ORG
"RTN","LA7VORU1",51,0)
 ;
"RTN","LA7VORU1",52,0)
 ; Mycobacterium report
"RTN","LA7VORU1",53,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,11)) D
"RTN","LA7VORU1",54,0)
 . S LRSB=22,LA7NLT="87995.0000"
"RTN","LA7VORU1",55,0)
 . D OBR^LA7VORU
"RTN","LA7VORU1",56,0)
 . D NTE^LA7VORU
"RTN","LA7VORU1",57,0)
 . F LRSB=26.5,26.4,22 D RPTNTE
"RTN","LA7VORU1",58,0)
 . N LRSB
"RTN","LA7VORU1",59,0)
 . S LA7OBXSN=0,LA7IDT=LRIDT
"RTN","LA7VORU1",60,0)
 . ; Report acid fast stain
"RTN","LA7VORU1",61,0)
 . I $L($P(^LR(LRDFN,LRSS,LRIDT,11),"^",3)) D
"RTN","LA7VORU1",62,0)
 . . S LRSB=24 D OBX
"RTN","LA7VORU1",63,0)
 . . S LRSB=25 D OBX
"RTN","LA7VORU1",64,0)
 . ; Check for organism id
"RTN","LA7VORU1",65,0)
 . I '$D(^LR(LRDFN,LRSS,LRIDT,12)) Q
"RTN","LA7VORU1",66,0)
 . S LRSB=26
"RTN","LA7VORU1",67,0)
 . D ORG
"RTN","LA7VORU1",68,0)
 . D MIC
"RTN","LA7VORU1",69,0)
 ;
"RTN","LA7VORU1",70,0)
 ; Virology report
"RTN","LA7VORU1",71,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,16)) D
"RTN","LA7VORU1",72,0)
 . S LRSB=33,LA7NLT="87996.0000"
"RTN","LA7VORU1",73,0)
 . D OBR^LA7VORU
"RTN","LA7VORU1",74,0)
 . D NTE^LA7VORU
"RTN","LA7VORU1",75,0)
 . F LRSB=36.5,36.4,33 D RPTNTE
"RTN","LA7VORU1",76,0)
 . ; Check for virus id
"RTN","LA7VORU1",77,0)
 . I '$D(^LR(LRDFN,LRSS,LRIDT,17)) Q
"RTN","LA7VORU1",78,0)
 . N LRSB
"RTN","LA7VORU1",79,0)
 . S LA7OBXSN=0,LA7IDT=LRIDT,LRSB=36
"RTN","LA7VORU1",80,0)
 . D ORG
"RTN","LA7VORU1",81,0)
 ;
"RTN","LA7VORU1",82,0)
 Q
"RTN","LA7VORU1",83,0)
 ;
"RTN","LA7VORU1",84,0)
 ;
"RTN","LA7VORU1",85,0)
GS ; Report Gram stain
"RTN","LA7VORU1",86,0)
 ;
"RTN","LA7VORU1",87,0)
 N LA7GS
"RTN","LA7VORU1",88,0)
 ;
"RTN","LA7VORU1",89,0)
 S LRSB=11.6,LA7GS=0
"RTN","LA7VORU1",90,0)
 F  S LA7GS=$O(^LR(LRDFN,LRSS,LRIDT,2,LA7GS)) Q:'LA7GS  D
"RTN","LA7VORU1",91,0)
 . S LA7IDT=LRIDT_","_LA7GS
"RTN","LA7VORU1",92,0)
 . D OBX
"RTN","LA7VORU1",93,0)
 Q
"RTN","LA7VORU1",94,0)
 ;
"RTN","LA7VORU1",95,0)
 ;
"RTN","LA7VORU1",96,0)
RPTNTE ; Send report comments
"RTN","LA7VORU1",97,0)
 ;
"RTN","LA7VORU1",98,0)
 N LA7J,LA7ND,LA7SOC,LA7TXT
"RTN","LA7VORU1",99,0)
 ;
"RTN","LA7VORU1",100,0)
 ; Source of comment - handle special codes for other systems, i,e. DOD-CHCS
"RTN","LA7VORU1",101,0)
 S LA7SOC=$S($G(LA7NVAF)=1:"AC",1:"L")
"RTN","LA7VORU1",102,0)
 ;
"RTN","LA7VORU1",103,0)
 ; Bacterial preliminary/report/tests remark
"RTN","LA7VORU1",104,0)
 I LRSB=11 S LA7ND=4
"RTN","LA7VORU1",105,0)
 I LRSB=1 S LA7ND=19
"RTN","LA7VORU1",106,0)
 I LRSB=1.5 S LA7ND=26
"RTN","LA7VORU1",107,0)
 ; Parasite preliminary/report/tests remark
"RTN","LA7VORU1",108,0)
 I LRSB=14 S LA7ND=7
"RTN","LA7VORU1",109,0)
 I LRSB=16.5 S LA7ND=21
"RTN","LA7VORU1",110,0)
 I LRSB=16.4 S LA7ND=27
"RTN","LA7VORU1",111,0)
 ; Fungal preliminary/report/tests remark
"RTN","LA7VORU1",112,0)
 I LRSB=18 S LA7ND=10
"RTN","LA7VORU1",113,0)
 I LRSB=20.5 S LA7ND=22
"RTN","LA7VORU1",114,0)
 I LRSB=20.4 S LA7ND=28
"RTN","LA7VORU1",115,0)
 ; Mycobacteria preliminary/report/tests remark
"RTN","LA7VORU1",116,0)
 I LRSB=22 S LA7ND=13
"RTN","LA7VORU1",117,0)
 I LRSB=26.5 S LA7ND=23
"RTN","LA7VORU1",118,0)
 I LRSB=26.4 S LA7ND=29
"RTN","LA7VORU1",119,0)
 ; Viral preliminary/report/tests remark
"RTN","LA7VORU1",120,0)
 I LRSB=33 S LA7ND=18
"RTN","LA7VORU1",121,0)
 I LRSB=36.5 S LA7ND=20
"RTN","LA7VORU1",122,0)
 I LRSB=36.4 S LA7ND=30
"RTN","LA7VORU1",123,0)
 ;
"RTN","LA7VORU1",124,0)
 S LA7J=0
"RTN","LA7VORU1",125,0)
 F  S LA7J=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7J)) Q:'LA7J  D
"RTN","LA7VORU1",126,0)
 . S LA7TXT=$G(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7J,0))
"RTN","LA7VORU1",127,0)
 . D NTE
"RTN","LA7VORU1",128,0)
 Q
"RTN","LA7VORU1",129,0)
 ;
"RTN","LA7VORU1",130,0)
 ;
"RTN","LA7VORU1",131,0)
ORG ; Build OBR/OBX segments for MI subscript organism id
"RTN","LA7VORU1",132,0)
 ;
"RTN","LA7VORU1",133,0)
 N LA7ND,LA7ORG
"RTN","LA7VORU1",134,0)
 ;
"RTN","LA7VORU1",135,0)
 ; Bacterial organism
"RTN","LA7VORU1",136,0)
 I LRSB=12 S LA7ND=3
"RTN","LA7VORU1",137,0)
 ; Parasite organism
"RTN","LA7VORU1",138,0)
 I LRSB=16 S LA7ND=6
"RTN","LA7VORU1",139,0)
 ; Fungal organism
"RTN","LA7VORU1",140,0)
 I LRSB=20 S LA7ND=9
"RTN","LA7VORU1",141,0)
 ; Mycobacteria organism
"RTN","LA7VORU1",142,0)
 I LRSB=26 S LA7ND=12
"RTN","LA7VORU1",143,0)
 ; Viral agent
"RTN","LA7VORU1",144,0)
 I LRSB=36 S LA7ND=17
"RTN","LA7VORU1",145,0)
 ;
"RTN","LA7VORU1",146,0)
 S LA7ORG=0
"RTN","LA7VORU1",147,0)
 F  S LA7ORG=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG)) Q:'LA7ORG  D
"RTN","LA7VORU1",148,0)
 . S LA7IDT=LRIDT_","_LA7ORG_","
"RTN","LA7VORU1",149,0)
 . D OBX
"RTN","LA7VORU1",150,0)
 . I $L($P($G(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,0)),"^",2)) D CC
"RTN","LA7VORU1",151,0)
 . I LA7ND=17 Q
"RTN","LA7VORU1",152,0)
 . D ORGNTE
"RTN","LA7VORU1",153,0)
 Q
"RTN","LA7VORU1",154,0)
 ;
"RTN","LA7VORU1",155,0)
 ;
"RTN","LA7VORU1",156,0)
CC ; Send colony count (quantity)
"RTN","LA7VORU1",157,0)
 ;
"RTN","LA7VORU1",158,0)
 N LA7POBX3,LA7POBX4,LA7POBX5,LRSB
"RTN","LA7VORU1",159,0)
 ;
"RTN","LA7VORU1",160,0)
 I LA7ND=3 S LRSB="12,1"
"RTN","LA7VORU1",161,0)
 I LA7ND=9 S LRSB="20,1"
"RTN","LA7VORU1",162,0)
 I LA7ND=12 S LRSB="26,1"
"RTN","LA7VORU1",163,0)
 ;
"RTN","LA7VORU1",164,0)
 D OBX
"RTN","LA7VORU1",165,0)
 ;
"RTN","LA7VORU1",166,0)
 Q
"RTN","LA7VORU1",167,0)
 ;
"RTN","LA7VORU1",168,0)
 ;
"RTN","LA7VORU1",169,0)
ORGNTE ; Send comments on organisms.
"RTN","LA7VORU1",170,0)
 ;
"RTN","LA7VORU1",171,0)
 N LA7J,LA7SOC,LA7NTESN,LA7TXT
"RTN","LA7VORU1",172,0)
 ;
"RTN","LA7VORU1",173,0)
 ; Source of comment - handle special codes for other systems, i,e. DOD-CHCS
"RTN","LA7VORU1",174,0)
 S LA7SOC=$S($G(LA7NVAF)=1:"AC",1:"L")
"RTN","LA7VORU1",175,0)
 ;
"RTN","LA7VORU1",176,0)
 S (LA7J,LA7NTESN)=0
"RTN","LA7VORU1",177,0)
 F  S LA7J=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,1,LA7J)) Q:'LA7J  D
"RTN","LA7VORU1",178,0)
 . S LA7TXT=$G(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,1,LA7J,0))
"RTN","LA7VORU1",179,0)
 . D NTE
"RTN","LA7VORU1",180,0)
 Q
"RTN","LA7VORU1",181,0)
 ;
"RTN","LA7VORU1",182,0)
 ;
"RTN","LA7VORU1",183,0)
MIC ; Build OBR/OBX segments for MI subscript susceptibilities(MIC)
"RTN","LA7VORU1",184,0)
 ;
"RTN","LA7VORU1",185,0)
 N LA7ORG,LA7ND,LA7NLT,LA7SB,LA7SB1
"RTN","LA7VORU1",186,0)
 ;
"RTN","LA7VORU1",187,0)
 S (LA7NLT,LA7NLT(1))=""
"RTN","LA7VORU1",188,0)
 I LRSB=12 S LA7ND=3,LA7NLT="87565.0000",LA7NLT(1)="87993.0000"
"RTN","LA7VORU1",189,0)
 I LRSB=26 S LA7ND=12,LA7NLT="87899.0000",LA7NLT(1)="87525.0000"
"RTN","LA7VORU1",190,0)
 ;
"RTN","LA7VORU1",191,0)
 S LA7ORG=0,LA7SB=LRSB
"RTN","LA7VORU1",192,0)
 F  S LA7ORG=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG)) Q:'LA7ORG  D
"RTN","LA7VORU1",193,0)
 . N LA7PARNT
"RTN","LA7VORU1",194,0)
 . ; Check for susceptibiliites for this organism
"RTN","LA7VORU1",195,0)
 . S X=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,2))
"RTN","LA7VORU1",196,0)
 . I X<2!(X>2.99) Q
"RTN","LA7VORU1",197,0)
 . S LA7PARNT(1)=LA7POBX3,LA7PARNT(2)=LA7POBX4,LA7PARNT(3)=LA7POBX5
"RTN","LA7VORU1",198,0)
 . D OBR^LA7VORU
"RTN","LA7VORU1",199,0)
 . S LA7OBXSN=0,LA7SB1=2
"RTN","LA7VORU1",200,0)
 . F  S LA7SB1=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,LA7SB1)) Q:'LA7SB1  D
"RTN","LA7VORU1",201,0)
 . . N LRSB
"RTN","LA7VORU1",202,0)
 . . S LA7IDT=LRIDT_","_LA7ORG_","_LA7SB1,LRSB=LA7SB_","_LA7SB1
"RTN","LA7VORU1",203,0)
 . . D OBX
"RTN","LA7VORU1",204,0)
 Q
"RTN","LA7VORU1",205,0)
 ;
"RTN","LA7VORU1",206,0)
 ;
"RTN","LA7VORU1",207,0)
OBX ; Build OBX segments for MI subscript
"RTN","LA7VORU1",208,0)
 ; Also called by AP^LA7VORU2 to build AP OBX segments.
"RTN","LA7VORU1",209,0)
 ;
"RTN","LA7VORU1",210,0)
 N LA7DATA
"RTN","LA7VORU1",211,0)
 D OBX^LA7VOBX(LRDFN,LRSS,LA7IDT,LRSB,.LA7DATA,.LA7OBXSN,LA7FS,LA7ECH)
"RTN","LA7VORU1",212,0)
 ;
"RTN","LA7VORU1",213,0)
 ; If OBX failed to build then don't store
"RTN","LA7VORU1",214,0)
 I '$D(LA7DATA) Q
"RTN","LA7VORU1",215,0)
 ;
"RTN","LA7VORU1",216,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7VORU1",217,0)
 ;
"RTN","LA7VORU1",218,0)
 ; Check for flag to only build meesage but do not file/send
"RTN","LA7VORU1",219,0)
 I $G(LA7NOMSG) Q
"RTN","LA7VORU1",220,0)
 ;
"RTN","LA7VORU1",221,0)
 D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7VORU1",222,0)
 Q
"RTN","LA7VORU1",223,0)
 ;
"RTN","LA7VORU1",224,0)
 ;
"RTN","LA7VORU1",225,0)
NTE ; Build NTE segment with comment
"RTN","LA7VORU1",226,0)
 ;
"RTN","LA7VORU1",227,0)
 N LA7NTE
"RTN","LA7VORU1",228,0)
 ;
"RTN","LA7VORU1",229,0)
 S LA7NTE(0)=$$NTE^LA7VHLU3(LA7TXT,$G(LA7SOC),LA7FS,LA7ECH,.LA7NTESN)
"RTN","LA7VORU1",230,0)
 D FILESEG^LA7VHLU(GBL,.LA7NTE)
"RTN","LA7VORU1",231,0)
 ;
"RTN","LA7VORU1",232,0)
 ; Check for flag to only build meesage but do not file/send
"RTN","LA7VORU1",233,0)
 I $G(LA7NOMSG) Q
"RTN","LA7VORU1",234,0)
 ;
"RTN","LA7VORU1",235,0)
 D FILE6249^LA7VHLU(LA76249,.LA7NTE)
"RTN","LA7VORU1",236,0)
 ;
"RTN","LA7VORU1",237,0)
 Q
"RTN","LA7VORU2")
0^50^B4657576
"RTN","LA7VORU2",1,0)
LA7VORU2 ;DALOI/JMC - LAB ORM (Order) message builder cont'd ; 11-21-986
"RTN","LA7VORU2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VORU2",3,0)
 ;
"RTN","LA7VORU2",4,0)
AP ; Observation/Result segment for Lab AP Results sent with Order Message
"RTN","LA7VORU2",5,0)
 ;
"RTN","LA7VORU2",6,0)
 N LA7DATA,LA7IDT,LRSB,LRSS
"RTN","LA7VORU2",7,0)
 ;
"RTN","LA7VORU2",8,0)
 S LRDFN=LA("LRDFN"),LRSS=LA("SUB"),(LA7IDT,LRIDT)=LA("LRIDT")
"RTN","LA7VORU2",9,0)
 ;
"RTN","LA7VORU2",10,0)
 S (LA7NLT,LA("NLT"))=$P($$DEFCODE^LA7VHLU5(LRSS,.012,"",""),"!")
"RTN","LA7VORU2",11,0)
 D OBR^LA7VORU
"RTN","LA7VORU2",12,0)
 D NTE^LA7VORU
"RTN","LA7VORU2",13,0)
 ;
"RTN","LA7VORU2",14,0)
 S LA7OBXSN=0
"RTN","LA7VORU2",15,0)
 ;
"RTN","LA7VORU2",16,0)
 ; Surgical pathology (SP) subscript reports
"RTN","LA7VORU2",17,0)
 I LRSS="SP" D SP
"RTN","LA7VORU2",18,0)
 ;
"RTN","LA7VORU2",19,0)
 ; Cytology (CY) subscript reports
"RTN","LA7VORU2",20,0)
 I LRSS="CY" F LRSB=.012,.013,.014,.015,.016,1.1,1.2,1.3 D OBX^LA7VORU1
"RTN","LA7VORU2",21,0)
 ;
"RTN","LA7VORU2",22,0)
 ; Cytology (EM) subscript reports
"RTN","LA7VORU2",23,0)
 I LRSS="EM" F LRSB=.012,.013,.014,.015,.016,1.1,1.2,1.3 D OBX^LA7VORU1
"RTN","LA7VORU2",24,0)
 ;
"RTN","LA7VORU2",25,0)
 Q
"RTN","LA7VORU2",26,0)
 ;
"RTN","LA7VORU2",27,0)
 ;
"RTN","LA7VORU2",28,0)
SP ; Process "SP" subscript
"RTN","LA7VORU2",29,0)
 N LA7ORG,LA7P,LA7SR,LA7SS
"RTN","LA7VORU2",30,0)
 ;
"RTN","LA7VORU2",31,0)
 ; Process main report
"RTN","LA7VORU2",32,0)
 F LRSB=.012,.013,.014,.015,.016,1,1.1,1.3 D OBX^LA7VORU1
"RTN","LA7VORU2",33,0)
 ;
"RTN","LA7VORU2",34,0)
 ; Process supplementary reports
"RTN","LA7VORU2",35,0)
 S LRSB=1.2,LA7SR=0
"RTN","LA7VORU2",36,0)
 F  S LA7SR=$O(^LR(LRDFN,LRSS,LRIDT,1.2,LA7SR)) Q:'LA7SR  D
"RTN","LA7VORU2",37,0)
 . N LA7IDT
"RTN","LA7VORU2",38,0)
 . ; If don't release this report then skip.
"RTN","LA7VORU2",39,0)
 . I $P($G(^LR(LRDFN,LRSS,LRIDT,1.2,LA7SR,0)),"^",2)'=1 Q
"RTN","LA7VORU2",40,0)
 . S LA7IDT=LRIDT_","_LA7SR D OBX^LA7VORU1
"RTN","LA7VORU2",41,0)
 ;
"RTN","LA7VORU2",42,0)
 ; Process organ/tissue subfile
"RTN","LA7VORU2",43,0)
 S LA7ORG=0
"RTN","LA7VORU2",44,0)
 F  S LA7ORG=$O(^LR(LRDFN,LRSS,LRIDT,2,LA7ORG)) Q:'LA7ORG  D
"RTN","LA7VORU2",45,0)
 . N LA7IDT
"RTN","LA7VORU2",46,0)
 . S LRSB=10,LA7IDT=LRIDT_","_LA7ORG D OBX^LA7VORU1
"RTN","LA7VORU2",47,0)
 . S LRSB="10,2",LA7IDT=LRIDT_","_LA7ORG D OBX^LA7VORU1
"RTN","LA7VORU2",48,0)
 . ; Procedures
"RTN","LA7VORU2",49,0)
 . S LA7P=0,LRSB="10,1.5"
"RTN","LA7VORU2",50,0)
 . F  S LA7P=$O(^LR(LRDFN,LRSS,LRIDT,2,LA7ORG,4,LA7P)) Q:'LA7P  D
"RTN","LA7VORU2",51,0)
 . . S LA7IDT=LRIDT_","_LA7ORG_","_LA7P D OBX^LA7VORU1
"RTN","LA7VORU2",52,0)
 . ; Special studies
"RTN","LA7VORU2",53,0)
 . S LA7SS=0,LRSB="10,5"
"RTN","LA7VORU2",54,0)
 . F  S LA7SS=$O(^LR(LRDFN,LRSS,LRIDT,2,LA7ORG,5,LA7SS)) Q:'LA7SS  D
"RTN","LA7VORU2",55,0)
 . . S LA7IDT=LRIDT_","_LA7ORG_","_LA7SS D OBX^LA7VORU1
"RTN","LA7VORU2",56,0)
 ;
"RTN","LA7VORU2",57,0)
 Q
"RTN","LA7VPID")
0^43^B19522874
"RTN","LA7VPID",1,0)
LA7VPID ;DALOI/JMC - HL7 PID/PV1 segment builder utility ; 11-25-1998
"RTN","LA7VPID",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46**;Sep 27, 1994
"RTN","LA7VPID",3,0)
 ;
"RTN","LA7VPID",4,0)
 ; Reference to routine $$EN^VAFHLPID supported by DBIA# 263
"RTN","LA7VPID",5,0)
 ;
"RTN","LA7VPID",6,0)
PID(LRDFN,LA7EXTID,LA7ARRAY,LA7PIDSN,HL,LA7ALTID) ; Build PID segment
"RTN","LA7VPID",7,0)
 ; Call with     LRDFN = Lab DFN, passed by value
"RTN","LA7VPID",8,0)
 ;            LA7EXTID = to return as external patient id, id used by non-VA systems (optional)
"RTN","LA7VPID",9,0)
 ;            LA7ARRAY = array to return PID array, pass by reference
"RTN","LA7VPID",10,0)
 ;            LA7PIDSN = PID id counter, passsed by value
"RTN","LA7VPID",11,0)
 ;                  HL = HL7 variable array, pass by reference
"RTN","LA7VPID",12,0)
 ;            LA7ALTID = return alternate patient id, id used by non-va systems (optional)
"RTN","LA7VPID",13,0)
 ;
"RTN","LA7VPID",14,0)
 ; Returns LA7ARRAY
"RTN","LA7VPID",15,0)
 ;
"RTN","LA7VPID",16,0)
 N DFN,HLQ,LA763,LA7Y,LRDPF,VAFPID
"RTN","LA7VPID",17,0)
 ;
"RTN","LA7VPID",18,0)
 ; Change HLQ - VAFHLPID puts delete indicator when Vista has no value for field - not according to standard.
"RTN","LA7VPID",19,0)
 S HLQ=""
"RTN","LA7VPID",20,0)
 ;
"RTN","LA7VPID",21,0)
 I $G(LRDFN)=""!($G(HL("FS"))="") Q
"RTN","LA7VPID",22,0)
 I '$D(^LR(LRDFN,0)) Q
"RTN","LA7VPID",23,0)
 ;
"RTN","LA7VPID",24,0)
 S LA7EXTID=$G(LA7EXTID),LA7ALTID=$G(LA7ALTID),LA7PIDSN=$G(LA7PIDSN)+1
"RTN","LA7VPID",25,0)
 S LA763(0)=$G(^LR(LRDFN,0))
"RTN","LA7VPID",26,0)
 S LRDPF=$P(LA763(0),"^",2),DFN=$P(LA763(0),"^",3)
"RTN","LA7VPID",27,0)
 ;
"RTN","LA7VPID",28,0)
 ; REFERRAL file (#67) with PATIENT file (#2) link, use info from PATIENT file.
"RTN","LA7VPID",29,0)
 I LRDPF=67,$P($G(^LRT(67,DFN,"DPT")),"^") D
"RTN","LA7VPID",30,0)
  .S LRDPF=2
"RTN","LA7VPID",31,0)
 . S DFN=$P($G(^LRT(67,DFN,"DPT")),"^")
"RTN","LA7VPID",32,0)
 ;
"RTN","LA7VPID",33,0)
 ; Patient file - use VAF call
"RTN","LA7VPID",34,0)
 I LRDPF=2 D F2PID
"RTN","LA7VPID",35,0)
 ;
"RTN","LA7VPID",36,0)
 ; Non-patient file 
"RTN","LA7VPID",37,0)
 I LRDPF'=2 D NF2PID
"RTN","LA7VPID",38,0)
 K AGE,PNM,SEX,DOB,SSN,VA200,LRWRD,LRRB,LRTREA,VA
"RTN","LA7VPID",39,0)
 Q
"RTN","LA7VPID",40,0)
 ;
"RTN","LA7VPID",41,0)
 ;
"RTN","LA7VPID",42,0)
PV1(LRDFN,LA7ARRAY,LA7FS,LA7ECH) ; Build PV1 segment
"RTN","LA7VPID",43,0)
 ; Call with    LRDFN = ien of entry in File #63
"RTN","LA7VPID",44,0)
 ;           LA7ARRAY = array to return PV1 array, pass by reference
"RTN","LA7VPID",45,0)
 ;              LA7FS = HL field separator
"RTN","LA7VPID",46,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VPID",47,0)
 ;
"RTN","LA7VPID",48,0)
 ;
"RTN","LA7VPID",49,0)
 N DFN,LA763,LA7LOC,LRDPF,LA7Y
"RTN","LA7VPID",50,0)
 S LA763(0)=$G(^LR(LRDFN,0))
"RTN","LA7VPID",51,0)
 S LRDPF=$P(LA763(0),"^",2),DFN=$P(LA763(0),"^",3),LA7LOC=""
"RTN","LA7VPID",52,0)
 ;
"RTN","LA7VPID",53,0)
 S LA7Y(0)="PV1"
"RTN","LA7VPID",54,0)
 S LA7Y(1)=1
"RTN","LA7VPID",55,0)
 ;
"RTN","LA7VPID",56,0)
 ; Referral file with Patient file link.
"RTN","LA7VPID",57,0)
 I LRDPF=67,$P($G(^LRT(67,DFN,"DPT")),"^") D
"RTN","LA7VPID",58,0)
 . S LRDPF=2
"RTN","LA7VPID",59,0)
 . S DFN=$P($G(^LRT(67,DFN,"DPT")),"^")
"RTN","LA7VPID",60,0)
 ;
"RTN","LA7VPID",61,0)
 ; Determine patient class
"RTN","LA7VPID",62,0)
 ; Current inpatient location
"RTN","LA7VPID",63,0)
 I LRDPF=2 S LA7LOC=$G(^DPT(DFN,.1))
"RTN","LA7VPID",64,0)
 I $L(LA7LOC) S LA7Y(2)="I" ; Inpatient
"RTN","LA7VPID",65,0)
 ;
"RTN","LA7VPID",66,0)
 ; Otherwise from lab files
"RTN","LA7VPID",67,0)
 I $G(LA7LOC)="" D
"RTN","LA7VPID",68,0)
 . S LA7LOC=$G(^LR(LRDFN,.1))
"RTN","LA7VPID",69,0)
 . S LA7Y(2)="O" ; Default to outpatient
"RTN","LA7VPID",70,0)
 ;
"RTN","LA7VPID",71,0)
 ; Patient location
"RTN","LA7VPID",72,0)
 S LA7LOC=$$CHKDATA^LA7VHLU3(LA7LOC,LA7FS_LA7ECH)
"RTN","LA7VPID",73,0)
 S LA7Y(3)=LA7LOC
"RTN","LA7VPID",74,0)
 ;
"RTN","LA7VPID",75,0)
 D BUILDSEG^LA7VHLU(.LA7Y,.LA7ARRAY,LA7FS)
"RTN","LA7VPID",76,0)
 Q
"RTN","LA7VPID",77,0)
 ;
"RTN","LA7VPID",78,0)
 ;
"RTN","LA7VPID",79,0)
F2PID ; Build patient identifier field on file #2 patient
"RTN","LA7VPID",80,0)
 ;
"RTN","LA7VPID",81,0)
 N I,ICN,LA7X,X
"RTN","LA7VPID",82,0)
 S LA7ARRAY(0)=$$EN^VAFHLPID(DFN,"1,5,6,7,8,10,16,19",LA7PIDSN)
"RTN","LA7VPID",83,0)
 ;
"RTN","LA7VPID",84,0)
 ; Return external identifer in PID-2 sequence, backward compatibility to V2.2
"RTN","LA7VPID",85,0)
 I $L(LA7EXTID) D
"RTN","LA7VPID",86,0)
 . I '(LA7EXTID?1N.N) S $P(LA7ARRAY(0),HL("FS"),3)=LA7EXTID
"RTN","LA7VPID",87,0)
 . E  S $P(LA7ARRAY(0),HLFS,3)=$$M11^HLFNC(LA7EXTID,HL("ECH"))
"RTN","LA7VPID",88,0)
 ;
"RTN","LA7VPID",89,0)
 ; Send SSN as patient identifier
"RTN","LA7VPID",90,0)
 S X=$$M11^HLFNC($P(LA7ARRAY(0),HLFS,20),HL("ECH"))
"RTN","LA7VPID",91,0)
 S $P(X,$E(HL("ECH")),5)="SS"
"RTN","LA7VPID",92,0)
 S $P(LA7ARRAY(0),HLFS,4)=X
"RTN","LA7VPID",93,0)
 ;
"RTN","LA7VPID",94,0)
 ; Send DFN as patient identifier
"RTN","LA7VPID",95,0)
 S X=$$M11^HLFNC(DFN,HL("ECH"))
"RTN","LA7VPID",96,0)
 S $P(X,$E(HL("ECH")),5)="PI"
"RTN","LA7VPID",97,0)
 S $P(X,$E(HL("ECH")),6)=$$GET1^DIQ(4,+$P($G(^XMB(1,1,"XUS")),"^",17),99)_$E(HL("ECH"),4)_$G(^XMB("NETNAME"))_$E(HL("ECH"),4)_"DNS"
"RTN","LA7VPID",98,0)
 S $P(LA7ARRAY(0),HLFS,4)=$P(LA7ARRAY(0),HL("FS"),4)_$E(HL("ECH"),2)_X
"RTN","LA7VPID",99,0)
 ;
"RTN","LA7VPID",100,0)
 ; Send ICN from MPI as patient identifier
"RTN","LA7VPID",101,0)
 S ICN=$$ICN(DFN,HL("ECH"))
"RTN","LA7VPID",102,0)
 I ICN>0 S $P(LA7ARRAY(0),HLFS,4)=$P(LA7ARRAY(0),HL("FS"),4)_$E(HL("ECH"),2)_ICN
"RTN","LA7VPID",103,0)
 ;
"RTN","LA7VPID",104,0)
 ; Send alternate patient id if passed
"RTN","LA7VPID",105,0)
 I $L(LA7ALTID) S $P(LA7ARRAY(0),HL("FS"),5)=LA7ALTID
"RTN","LA7VPID",106,0)
 I $P(LA7ARRAY(0),HLFS,5)?1N.N S $P(LA7ARRAY(0),HL("FS"),5)=$$M11^HLFNC($P(LA7ARRAY(0),HL("FS"),5),HL("ECH"))
"RTN","LA7VPID",107,0)
 ;
"RTN","LA7VPID",108,0)
 ; Check for overflow (>245)
"RTN","LA7VPID",109,0)
 I $O(VAFPID(0)) D
"RTN","LA7VPID",110,0)
 . S I=0
"RTN","LA7VPID",111,0)
 . F  S I=$O(VAFPID(I)) Q:'I  S LA7ARRAY(I)=VAFPID(I)
"RTN","LA7VPID",112,0)
 ;
"RTN","LA7VPID",113,0)
 Q
"RTN","LA7VPID",114,0)
 ;
"RTN","LA7VPID",115,0)
 ;
"RTN","LA7VPID",116,0)
NF2PID ; Build patient identifier field on non-file #2 patient
"RTN","LA7VPID",117,0)
 ;
"RTN","LA7VPID",118,0)
 D PT^LRX
"RTN","LA7VPID",119,0)
 S LA7Y(0)="PID"
"RTN","LA7VPID",120,0)
 S LA7Y(1)=LA7PIDSN
"RTN","LA7VPID",121,0)
 ;
"RTN","LA7VPID",122,0)
 ; Return external identifer in PID-2 sequence, backward compatibility to V2.2
"RTN","LA7VPID",123,0)
 I $L(LA7EXTID) D
"RTN","LA7VPID",124,0)
 . I '(LA7EXTID?1N.N) S LA7Y(2)=LA7EXTID
"RTN","LA7VPID",125,0)
 . E  S LA7Y(2)=$$M11^HLFNC(LA7EXTID,HL("ECH"))
"RTN","LA7VPID",126,0)
 S LA7Y(3)=$$M11^HLFNC(SSN(2),HL("ECH"))
"RTN","LA7VPID",127,0)
 ;
"RTN","LA7VPID",128,0)
 ; Send LRDFN as alternate patient ID, unless alternate id passed
"RTN","LA7VPID",129,0)
 I $L(LA7ALTID) S LA7Y(4)=LA7ALTID
"RTN","LA7VPID",130,0)
 E  S LA7Y(4)=LRDFN
"RTN","LA7VPID",131,0)
 I LA7Y(4)?1N.N S LA7Y(4)=$$M11^HLFNC(LA7Y(4),HL("ECH"))
"RTN","LA7VPID",132,0)
 ;
"RTN","LA7VPID",133,0)
 S LA7Y(5)=$$HLNAME^HLFNC($G(PNM),HL("ECH"))
"RTN","LA7VPID",134,0)
 ;
"RTN","LA7VPID",135,0)
 I $L($G(DOB)) D
"RTN","LA7VPID",136,0)
 . S DOB=$$CHKDT^LA7VHLU1(DOB)
"RTN","LA7VPID",137,0)
 . S LA7Y(7)=$$FMTHL7^XLFDT(DOB)
"RTN","LA7VPID",138,0)
 ;
"RTN","LA7VPID",139,0)
 S LA7Y(8)=$S($L($G(SEX)):SEX,1:"U")
"RTN","LA7VPID",140,0)
 ; Race unknown
"RTN","LA7VPID",141,0)
 S LA7Y(10)=7
"RTN","LA7VPID",142,0)
 S LA7Y(19)=SSN(2)
"RTN","LA7VPID",143,0)
 ;
"RTN","LA7VPID",144,0)
 D BUILDSEG^LA7VHLU(.LA7Y,.LA7ARRAY,HL("FS"))
"RTN","LA7VPID",145,0)
 Q
"RTN","LA7VPID",146,0)
 ;
"RTN","LA7VPID",147,0)
 ;
"RTN","LA7VPID",148,0)
ICN(DFN,LA7ECH) ; Send ICN from MPI
"RTN","LA7VPID",149,0)
 ; Call with DFN = internal entry number of patient in PATIENT #2 file.
"RTN","LA7VPID",150,0)
 ;        LA7ECH = HL7 encoding characters.
"RTN","LA7VPID",151,0)
 ;
"RTN","LA7VPID",152,0)
 N ICN,LA7ICN
"RTN","LA7VPID",153,0)
 ;
"RTN","LA7VPID",154,0)
 S ICN=""
"RTN","LA7VPID",155,0)
 ;
"RTN","LA7VPID",156,0)
 S X="MPIF001" X ^%ZOSF("TEST")
"RTN","LA7VPID",157,0)
 I $T D
"RTN","LA7VPID",158,0)
 . S LA7ICN=$$GETICN^MPIF001(DFN)
"RTN","LA7VPID",159,0)
 . I LA7ICN<1 Q
"RTN","LA7VPID",160,0)
 . S ICN=$TR(LA7ICN,"V","")
"RTN","LA7VPID",161,0)
 . S $P(ICN,$E(LA7ECH,1),2)=$P(LA7ICN,"V",2)
"RTN","LA7VPID",162,0)
 . S $P(ICN,$E(LA7ECH,1),3)="ISO"
"RTN","LA7VPID",163,0)
 . S $P(ICN,$E(LA7ECH,1),4)="VAMPI"
"RTN","LA7VPID",164,0)
 . S $P(ICN,$E(LA7ECH,1),5)="PI"
"RTN","LA7VPID",165,0)
 . S $P(ICN,$E(LA7ECH,1),6)="VAMPI"
"RTN","LA7VPID",166,0)
 ;
"RTN","LA7VPID",167,0)
 Q ICN
"RTN","LA7VSET")
0^54^B104720363
"RTN","LA7VSET",1,0)
LA7VSET ;DALOI/JMC - MENU TO SETUP VISN LABS ; 12/3/1997
"RTN","LA7VSET",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,51,55,46**;Sep 27, 1994
"RTN","LA7VSET",3,0)
 ;
"RTN","LA7VSET",4,0)
 ; Reference to HL LOGICAL LINK file (#870) supported by DBIA #1495, 1496, 2063
"RTN","LA7VSET",5,0)
 ; Reference to PROTOCOL file (#101) supported by DBIA #872
"RTN","LA7VSET",6,0)
 ; Reference to MAIL GROUP file (#3.8) supported by DBIA #2061
"RTN","LA7VSET",7,0)
 ;
"RTN","LA7VSET",8,0)
 D CONV
"RTN","LA7VSET",9,0)
 ;
"RTN","LA7VSET",10,0)
 N LA76248,LA7629,LA7VNVC,PRIMARY,PRSITE,HDR,LAB,HOST,REMOTE,LRY,LRX,LA7VS,NAME
"RTN","LA7VSET",11,0)
 ;
"RTN","LA7VSET",12,0)
 S LA7VS=$$PRIM^VASITE(DT)
"RTN","LA7VSET",13,0)
 I $G(LA7VS)'="" D
"RTN","LA7VSET",14,0)
 . S LA7VS=$$SITE^VASITE(DT,LA7VS)
"RTN","LA7VSET",15,0)
 . S PRIMARY=$P(LA7VS,U,3),PRSITE=$P(LA7VS,U,2)
"RTN","LA7VSET",16,0)
 ;
"RTN","LA7VSET",17,0)
 I $G(PRIMARY)="" W !!,"No Primary Site is defined!!!!",!! R !,"Press RETURN to continue: ",X:DTIME Q
"RTN","LA7VSET",18,0)
 ;
"RTN","LA7VSET",19,0)
 S HDR="LEDI Setup"
"RTN","LA7VSET",20,0)
 S HDR(1)="Add/Edit HOST Lab",HDR(2)="Add/Edit COLLECTION Lab"
"RTN","LA7VSET",21,0)
 F  S LAB=$$MAIN Q:LAB=""  D @LAB
"RTN","LA7VSET",22,0)
 ;
"RTN","LA7VSET",23,0)
 K DIE,DA,DR,DO,DIC
"RTN","LA7VSET",24,0)
 ;
"RTN","LA7VSET",25,0)
 Q
"RTN","LA7VSET",26,0)
 ;
"RTN","LA7VSET",27,0)
MAIN() ; Display the main LEDI setup screen
"RTN","LA7VSET",28,0)
 N HDRCNT,HDRA
"RTN","LA7VSET",29,0)
 W @IOF,! F X=1:1:79 W "-"
"RTN","LA7VSET",30,0)
 W !,?((80-$L(HDR))/2),HDR
"RTN","LA7VSET",31,0)
 W ! F X=1:1:79 W "-"
"RTN","LA7VSET",32,0)
 W !
"RTN","LA7VSET",33,0)
 W !,"COLLECTION Labs:  Use option #1 to setup HOST labs."
"RTN","LA7VSET",34,0)
 W !,"  HOST Labs    :  Use option #2 to setup COLLECTION labs."
"RTN","LA7VSET",35,0)
 W !!
"RTN","LA7VSET",36,0)
 S HDRCNT=0
"RTN","LA7VSET",37,0)
 F  S HDRCNT=$O(HDR(HDRCNT)) Q:'HDRCNT  W !,HDRCNT,".",?5,HDR(HDRCNT)
"RTN","LA7VSET",38,0)
 D KDIR
"RTN","LA7VSET",39,0)
 W !!
"RTN","LA7VSET",40,0)
 S DIR(0)="NO^1:2"
"RTN","LA7VSET",41,0)
 D MHLP,^DIR
"RTN","LA7VSET",42,0)
 S HDRA=$S(Y=1:"HOST",Y=2:"REMOTE",1:"")
"RTN","LA7VSET",43,0)
 D KDIR
"RTN","LA7VSET",44,0)
 Q HDRA
"RTN","LA7VSET",45,0)
 ;
"RTN","LA7VSET",46,0)
 ;
"RTN","LA7VSET",47,0)
KDIR ; kill all DIR variables
"RTN","LA7VSET",48,0)
 K DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","LA7VSET",49,0)
 Q
"RTN","LA7VSET",50,0)
 ;
"RTN","LA7VSET",51,0)
 ;
"RTN","LA7VSET",52,0)
HOST ; HOST Lab Setup Menu
"RTN","LA7VSET",53,0)
 ;
"RTN","LA7VSET",54,0)
 N LA7CNT,LA7,LA7P,SNUM,SNAME,HOST,LA7A
"RTN","LA7VSET",55,0)
 ;
"RTN","LA7VSET",56,0)
 F  D  Q:'LA7A
"RTN","LA7VSET",57,0)
 . D HOSTBLD,HSTHDR,HOSTLST,KDIR
"RTN","LA7VSET",58,0)
 . W !! S DIR(0)="NO^1:"_LA7CNT
"RTN","LA7VSET",59,0)
 . D H1HLP,^DIR
"RTN","LA7VSET",60,0)
 . I $D(DIRUT) S LA7A=0 Q
"RTN","LA7VSET",61,0)
 . S LA7A=Y D AEHOST
"RTN","LA7VSET",62,0)
 K SNAME
"RTN","LA7VSET",63,0)
 Q
"RTN","LA7VSET",64,0)
 ;
"RTN","LA7VSET",65,0)
 ;
"RTN","LA7VSET",66,0)
HOSTBLD ; Build list of host facilities.
"RTN","LA7VSET",67,0)
 ; Identify all HOST lab using LA7 MESSAGE PARAMETER file (#62.48)
"RTN","LA7VSET",68,0)
 ;
"RTN","LA7VSET",69,0)
 N LA7,LA74,SNAME,SNUM
"RTN","LA7VSET",70,0)
 ;
"RTN","LA7VSET",71,0)
 K HOST
"RTN","LA7VSET",72,0)
 S LA7CNT=1,(LA7,LA7P)="LA7V HOST "
"RTN","LA7VSET",73,0)
 F  S LA7=$O(^LAHM(62.48,"B",LA7)) Q:LA7=""!(LA7'[LA7P)  D
"RTN","LA7VSET",74,0)
 . S LA74=0,SNUM=$P(LA7,"HOST ",2)
"RTN","LA7VSET",75,0)
 . D FIND^DIC(4,"",".01;99","MOX",SNUM,"","","","","SNAME")
"RTN","LA7VSET",76,0)
 . S SNAME=$O(SNAME("DILIST",1,0))
"RTN","LA7VSET",77,0)
 . S:SNAME'="" SNAME=SNAME("DILIST","ID",SNAME,.01)
"RTN","LA7VSET",78,0)
 . S LA74=+$G(SNAME("DILIST",2,1))
"RTN","LA7VSET",79,0)
 . I SNAME="" D  Q:SNAME=""
"RTN","LA7VSET",80,0)
 . . S SNUM=+$O(^LAHM(62.48,"B",LA7,0)),SNAME=$O(^LAHM(62.9,"AC",SNUM,0))
"RTN","LA7VSET",81,0)
 . . I SNAME="" Q
"RTN","LA7VSET",82,0)
 . . S LA74=+$P(^LAHM(62.9,SNAME,0),U,3)
"RTN","LA7VSET",83,0)
 . . S SNAME=$$GET1^DIQ(4,LA74_",",.01)
"RTN","LA7VSET",84,0)
 . . I SNAME="" Q
"RTN","LA7VSET",85,0)
 . . S SNUM=$P(LA7,"HOST ",2)
"RTN","LA7VSET",86,0)
 . S HOST(LA7CNT)=SNUM_U_SNAME_U_LA7_U_LA74
"RTN","LA7VSET",87,0)
 . S LA7CNT=LA7CNT+1
"RTN","LA7VSET",88,0)
 S HOST(LA7CNT)=""
"RTN","LA7VSET",89,0)
 ;
"RTN","LA7VSET",90,0)
 Q
"RTN","LA7VSET",91,0)
 ;
"RTN","LA7VSET",92,0)
 ;
"RTN","LA7VSET",93,0)
HSTHDR ; HOST setup header
"RTN","LA7VSET",94,0)
 S HOST="HOST Lab(s)"
"RTN","LA7VSET",95,0)
 W @IOF,! F X=1:1:79 W "-"
"RTN","LA7VSET",96,0)
 W !,?((80-$L(HOST))/2),HOST
"RTN","LA7VSET",97,0)
 W ! F X=1:1:79 W "-"
"RTN","LA7VSET",98,0)
 W !!
"RTN","LA7VSET",99,0)
 Q
"RTN","LA7VSET",100,0)
 ;
"RTN","LA7VSET",101,0)
 ;
"RTN","LA7VSET",102,0)
HOSTLST S LA7CNT=1,LA7=0 F  S LA7=$O(HOST(LA7)) Q:'LA7  I HOST(LA7)'="" W !,LA7,".",?5,$P(HOST(LA7),U,2)_"  ("_$P(HOST(LA7),U,3)_")" S LA7CNT=LA7CNT+1
"RTN","LA7VSET",103,0)
 W !,LA7CNT,".",?5,"Add HOST Lab"
"RTN","LA7VSET",104,0)
 Q
"RTN","LA7VSET",105,0)
 ;
"RTN","LA7VSET",106,0)
AEHOST ;
"RTN","LA7VSET",107,0)
 N CHA,UI
"RTN","LA7VSET",108,0)
 F  S HOST="HOST Lab Setup" D HSTHDR,HSTHDR2,KDIR W !! S DIR(0)="NO^1:"_LA7CNT D H2HLP D ^DIR S CHA=Y D:CHA>0  Q:+CHA'>0
"RTN","LA7VSET",109,0)
 . I CHA=1 D HLAB($P(HOST(LA7A),U))
"RTN","LA7VSET",110,0)
 . I CHA=2 D HLL
"RTN","LA7VSET",111,0)
 . I CHA=3 D LMC
"RTN","LA7VSET",112,0)
 . I CHA=4 D CHTST
"RTN","LA7VSET",113,0)
 D KDIR
"RTN","LA7VSET",114,0)
 Q
"RTN","LA7VSET",115,0)
 ;
"RTN","LA7VSET",116,0)
 ;
"RTN","LA7VSET",117,0)
HSTHDR2 ;
"RTN","LA7VSET",118,0)
 N LA7624,LA76248,LA7870
"RTN","LA7VSET",119,0)
 ;
"RTN","LA7VSET",120,0)
 S LA7CNT=1
"RTN","LA7VSET",121,0)
 W !!,"1. HOST Lab: ",?15,$P(HOST(LA7A),U,2)
"RTN","LA7VSET",122,0)
 W:$P(HOST(LA7A),U,2)'="" "  (Uneditable)"
"RTN","LA7VSET",123,0)
 ;
"RTN","LA7VSET",124,0)
 I $P(HOST(LA7A),U,2)="" Q
"RTN","LA7VSET",125,0)
 ;
"RTN","LA7VSET",126,0)
 S LA7870=$$FIND1^DIC(870,"","OX","LA7V "_$P(HOST(LA7A),U)),LA7CNT=2
"RTN","LA7VSET",127,0)
 W !,"2. Logical Link (MailMan or TCP/IP): ",$$GET1^DIQ(870,LA7870_",",.01)
"RTN","LA7VSET",128,0)
 ;
"RTN","LA7VSET",129,0)
 S LA76248=$$FIND1^DIC(62.48,"","OX","LA7V HOST "_$P(HOST(LA7A),U)),LA7CNT=3
"RTN","LA7VSET",130,0)
 W !,"3. Message Configuration: ",$$GET1^DIQ(62.48,LA76248_",",.01)
"RTN","LA7VSET",131,0)
 ;
"RTN","LA7VSET",132,0)
 S LA7624=$$FIND1^DIC(62.4,"","OX","LA7V HOST "_$P(HOST(LA7A),U)),LA7CNT=4
"RTN","LA7VSET",133,0)
 W !,"4. Auto Instrument: ",$$GET1^DIQ(62.4,LA7624_",",.01)
"RTN","LA7VSET",134,0)
 ;
"RTN","LA7VSET",135,0)
 Q
"RTN","LA7VSET",136,0)
 ;
"RTN","LA7VSET",137,0)
 ;
"RTN","LA7VSET",138,0)
LMC ; Edit lab message configuration file.
"RTN","LA7VSET",139,0)
 ;
"RTN","LA7VSET",140,0)
 N DIC,DA,DR,DIE
"RTN","LA7VSET",141,0)
 ;
"RTN","LA7VSET",142,0)
 S X="LA7V HOST "_$P(@LAB@(LA7A),U),DIC(0)="EMX",DIC="^LAHM(62.48,"
"RTN","LA7VSET",143,0)
 D ^DIC
"RTN","LA7VSET",144,0)
 I +Y<0 W !,"You have not entered a "_LAB_" lab." Q
"RTN","LA7VSET",145,0)
 ;
"RTN","LA7VSET",146,0)
 S DA=+Y,DIE="^LAHM(62.48,",DR="3;4;10;@20;20;I X'="""" S Y=""@20"""
"RTN","LA7VSET",147,0)
 D ^DIE
"RTN","LA7VSET",148,0)
 ;
"RTN","LA7VSET",149,0)
 Q
"RTN","LA7VSET",150,0)
 ;
"RTN","LA7VSET",151,0)
 ;
"RTN","LA7VSET",152,0)
HLAB(LRI) ;Add Host LAB
"RTN","LA7VSET",153,0)
 ;
"RTN","LA7VSET",154,0)
 N INST,LA7VNVC,LA7629
"RTN","LA7VSET",155,0)
 ;
"RTN","LA7VSET",156,0)
 I $P(HOST(LA7A),U)'="" D KDIR S DIR("A")="Are you sure you want to update the "_$P(HOST(LA7A),U,2)_" interface",DIR(0)="Y0" D ^DIR Q:+Y'>0
"RTN","LA7VSET",157,0)
 ;
"RTN","LA7VSET",158,0)
 I $P(HOST(LA7A),U)="" D
"RTN","LA7VSET",159,0)
 . N DIC,DA,DO
"RTN","LA7VSET",160,0)
 . S DIC="^DIC(4,",DIC(0)="AEMQZ"
"RTN","LA7VSET",161,0)
 . S DIC("S")="N LA7X S LA7X=$G(^(99)) I ($L($P(LA7X,U))&$P(LA7X,U,5)=""VA"")!($P(LA7X,U)=""""&$P(LA7X,U,5)'=""VA"")"
"RTN","LA7VSET",162,0)
 . D ^DIC Q:Y<1
"RTN","LA7VSET",163,0)
 . S INST=+Y
"RTN","LA7VSET",164,0)
 . I PRIMARY'=INST S HOST(LA7A+1)=HOST(LA7A),HOST(LA7A)=$$GET1^DIQ(4,INST_",",99)_U_$$GET1^DIQ(4,INST_",",.01)_"^^"_INST
"RTN","LA7VSET",165,0)
 . I $P(HOST(LA7A),U)="" D
"RTN","LA7VSET",166,0)
 . . K DIC,DA,DO
"RTN","LA7VSET",167,0)
 . . S DIC="^LAHM(62.9,",DIC(0)="AEMQ",DIC("S")="I $P(^(0),U,4)=1,$L($P(^(0),U,12)),$P(^(0),U,11)=INST"
"RTN","LA7VSET",168,0)
 . . D ^DIC Q:Y<1
"RTN","LA7VSET",169,0)
 . . S LA7629=+Y,LA7VNVC=$$UP^XLFSTR($P(^LAHM(62.9,LA7629,0),"^",12)),$P(HOST(LA7A),U)=LA7VNVC
"RTN","LA7VSET",170,0)
 . I PRIMARY=INST!(INST=DUZ(2)) W !,"To add your Hospital as a HOST site just add COLLECTION sites."
"RTN","LA7VSET",171,0)
 ;
"RTN","LA7VSET",172,0)
 I $P(HOST(LA7A),U)="" S $P(HOST(LA7A),U,2)="" Q
"RTN","LA7VSET",173,0)
 ;
"RTN","LA7VSET",174,0)
 I PRIMARY'=$P(HOST(LA7A),U) D HOST^LA7VSTP(PRIMARY,PRSITE,$P(HOST(LA7A),U),$P(HOST(LA7A),U,2))
"RTN","LA7VSET",175,0)
 ;
"RTN","LA7VSET",176,0)
 Q
"RTN","LA7VSET",177,0)
 ;
"RTN","LA7VSET",178,0)
 ;
"RTN","LA7VSET",179,0)
HLL ;add/edit logical link
"RTN","LA7VSET",180,0)
 ;
"RTN","LA7VSET",181,0)
 N HDR,PR,LA7LL
"RTN","LA7VSET",182,0)
 S HDR="Logical Link for transmissions to/from "_$P(HOST(LA7A),U,2)
"RTN","LA7VSET",183,0)
 W @IOF,! F X=1:1:79 W "-"
"RTN","LA7VSET",184,0)
 W !,?((80-$L(HDR))/2),HDR
"RTN","LA7VSET",185,0)
 W ! F X=1:1:79 W "-"
"RTN","LA7VSET",186,0)
 W !,?3,"Protocol",?40,"Logical Link",!,?3,"----------",?40,"---------------"
"RTN","LA7VSET",187,0)
 W !!
"RTN","LA7VSET",188,0)
 S PR=$O(^ORD(101,"B","LA7V Process Results from "_$P(HOST(LA7A),U),0))
"RTN","LA7VSET",189,0)
 I PR D GETLL(PR)
"RTN","LA7VSET",190,0)
 ;
"RTN","LA7VSET",191,0)
 S PR=$O(^ORD(101,"B","LA7V Send Order to "_$P(HOST(LA7A),U),0))
"RTN","LA7VSET",192,0)
 I PR D GETLL(PR)
"RTN","LA7VSET",193,0)
 ;
"RTN","LA7VSET",194,0)
 W !!
"RTN","LA7VSET",195,0)
 D KDIR
"RTN","LA7VSET",196,0)
 S DIR(0)="SBMO^MM:MAILMAN;TCP:TCP/IP",DIR("A")="Enter a Logical Link"
"RTN","LA7VSET",197,0)
 D ^DIR
"RTN","LA7VSET",198,0)
 I $D(DIRUT) Q
"RTN","LA7VSET",199,0)
 S LA7LL=Y
"RTN","LA7VSET",200,0)
 I LA7LL="MM" D MAIL^LA7VLL(HOST(LA7A))
"RTN","LA7VSET",201,0)
 I LA7LL="TCP" D TCP^LA7VLL($P(HOST(LA7A),U),PRIMARY)
"RTN","LA7VSET",202,0)
 Q
"RTN","LA7VSET",203,0)
 ;
"RTN","LA7VSET",204,0)
 ;
"RTN","LA7VSET",205,0)
CHTST ;Enter CHEM Test into the AUTO INSTRUMENT file (#62.4)
"RTN","LA7VSET",206,0)
 ;
"RTN","LA7VSET",207,0)
 N DA,DIC,DIE,DR,AI,LA7624
"RTN","LA7VSET",208,0)
 ;
"RTN","LA7VSET",209,0)
 S (AI,X)="LA7V HOST "_$P(HOST(LA7A),U)
"RTN","LA7VSET",210,0)
 S DIC(0)="QEM",DIC="^LAB(62.4," D ^DIC
"RTN","LA7VSET",211,0)
 I +Y<1 Q
"RTN","LA7VSET",212,0)
 S LA7624=+Y
"RTN","LA7VSET",213,0)
 ;
"RTN","LA7VSET",214,0)
 W !!,"AUTOMATED INSTRUMENT: ",$P(^LAB(62.4,LA7624,0),U)
"RTN","LA7VSET",215,0)
 ;
"RTN","LA7VSET",216,0)
 L +^LAB(62.4,LA7624):1
"RTN","LA7VSET",217,0)
 I '$T W !,?5,"Another user is editing this entry." Q
"RTN","LA7VSET",218,0)
 ;
"RTN","LA7VSET",219,0)
 S DA=LA7624,DIE=DIC,DR="3;10;11;12;18"
"RTN","LA7VSET",220,0)
 D ^DIE
"RTN","LA7VSET",221,0)
 W !,"Add Chem Tests to the "_AI_" Automated Instrument for "_$P(HOST(LA7A),U,2)_".",!!
"RTN","LA7VSET",222,0)
 D CHSET
"RTN","LA7VSET",223,0)
 ;
"RTN","LA7VSET",224,0)
 L -^LAB(62.4,LA7624)
"RTN","LA7VSET",225,0)
 ;
"RTN","LA7VSET",226,0)
 Q
"RTN","LA7VSET",227,0)
 ;
"RTN","LA7VSET",228,0)
 ;
"RTN","LA7VSET",229,0)
CHSET ; Edit chem test multiple for selected fields
"RTN","LA7VSET",230,0)
 ; Entry locked from above.
"RTN","LA7VSET",231,0)
 N DA,DO,DIC,DIE,DLAYGO,DR,LA7NLT,LA7Y
"RTN","LA7VSET",232,0)
 ;
"RTN","LA7VSET",233,0)
 S DA(1)=LA7624,DLAYGO=62.4
"RTN","LA7VSET",234,0)
 S DIC="^LAB(62.4,"_DA(1)_",3,",DIC(0)="AELMQZ",DIC("DR")=".01",DIC("P")=$P(^DD(62.4,30,0),U,2)
"RTN","LA7VSET",235,0)
 F  D  Q:LA7Y<1
"RTN","LA7VSET",236,0)
 . D ^DIC S LA7Y=Y Q:LA7Y<1
"RTN","LA7VSET",237,0)
 . S DIE=DIC
"RTN","LA7VSET",238,0)
 . N DA,DIC,DLAYGO ; Protect variables in case changed in DIE call.
"RTN","LA7VSET",239,0)
 . S LA7NLT=$$GET1^DIQ(64,+$P($G(^LAB(60,$P(LA7Y,U,2),64)),U,2)_",",1)
"RTN","LA7VSET",240,0)
 . S DA=+LA7Y,DA(1)=LA7624
"RTN","LA7VSET",241,0)
 . S DR=".01;2;6//"_LA7NLT_";12;13;14;16;17;18//YES;19;20;21;22"
"RTN","LA7VSET",242,0)
 . D ^DIE
"RTN","LA7VSET",243,0)
 . W !
"RTN","LA7VSET",244,0)
 Q
"RTN","LA7VSET",245,0)
 ;
"RTN","LA7VSET",246,0)
 ;
"RTN","LA7VSET",247,0)
REMOTE ;COLLECTION Lab Setup Menu
"RTN","LA7VSET",248,0)
 ;
"RTN","LA7VSET",249,0)
 D COLLECT^LA7VSET1
"RTN","LA7VSET",250,0)
 Q
"RTN","LA7VSET",251,0)
 ;
"RTN","LA7VSET",252,0)
 ;
"RTN","LA7VSET",253,0)
MHLP ;Main help
"RTN","LA7VSET",254,0)
 S DIR("?")=" "
"RTN","LA7VSET",255,0)
 S DIR("?",1)="Option #1 will setup HOST site auto-instruments, HOST site message"
"RTN","LA7VSET",256,0)
 S DIR("?",2)="configuration, and HOST and COLLECTION sites HL7 environment."
"RTN","LA7VSET",257,0)
 S DIR("?",3)=" "
"RTN","LA7VSET",258,0)
 S DIR("?",4)="Option #2 will setup COLLECTION site auto-instruments, COLLECTION site message"
"RTN","LA7VSET",259,0)
 S DIR("?",5)="configuration, and COLLECTION and HOST sites HL7 environment."
"RTN","LA7VSET",260,0)
 S DIR("?",6)=" "
"RTN","LA7VSET",261,0)
 S DIR("?",7)="Option #1 and #2 SHOULD be used by sites that are both a HOST"
"RTN","LA7VSET",262,0)
 S DIR("?",8)="and a COLLECTION site."
"RTN","LA7VSET",263,0)
 Q
"RTN","LA7VSET",264,0)
 ;
"RTN","LA7VSET",265,0)
 ;
"RTN","LA7VSET",266,0)
H1HLP ;HOST Lab(s) help
"RTN","LA7VSET",267,0)
 S DIR("?")="Enter a number between 1 and "_LA7CNT_"."
"RTN","LA7VSET",268,0)
 S DIR("?",1)="Enter a '"_LA7CNT_"' to create a new HOST lab."
"RTN","LA7VSET",269,0)
 Q
"RTN","LA7VSET",270,0)
 ;
"RTN","LA7VSET",271,0)
 ;
"RTN","LA7VSET",272,0)
H2HLP ;HOST Lab Setup help
"RTN","LA7VSET",273,0)
 S DIR("?")=" "
"RTN","LA7VSET",274,0)
 S DIR("?",1)="Enter a '1' to create the HL7 environment along with the Auto-Instrument"
"RTN","LA7VSET",275,0)
 S DIR("?",2)="and LA7 Message Configuration."
"RTN","LA7VSET",276,0)
 S DIR("?",3)="Enter a '2' to create the link between the HOST and COLLECTION labs."
"RTN","LA7VSET",277,0)
 S DIR("?",5)="Enter a '3' to configure the LA7 MESSAGE PARAMETER file."
"RTN","LA7VSET",278,0)
 S DIR("?",4)="Enter a '4' to identify the list of test you expect back from the HOST lab."
"RTN","LA7VSET",279,0)
 Q
"RTN","LA7VSET",280,0)
 ;
"RTN","LA7VSET",281,0)
 ;
"RTN","LA7VSET",282,0)
CONV ;Convert #62.4 and #62.48 from REMOTE to COLLECTION (File #771 will remain REMOTE).
"RTN","LA7VSET",283,0)
 N RMT,RMT1,UPDT,IEN
"RTN","LA7VSET",284,0)
 K DA,DR,DIE
"RTN","LA7VSET",285,0)
 S DIE="^LAB(62.4,"
"RTN","LA7VSET",286,0)
 S RMT1="LA7V REMOTE ",RMT=RMT1
"RTN","LA7VSET",287,0)
 F  S RMT=$O(^LAB(62.4,"B",RMT)) Q:RMT=""!(RMT'[RMT1)  D
"RTN","LA7VSET",288,0)
 . S IEN=$O(^LAB(62.4,"B",RMT,0))
"RTN","LA7VSET",289,0)
 . S NAME="LA7V COLLECTION"_$P($P(^LAB(62.4,IEN,0),U),"REMOTE",2)
"RTN","LA7VSET",290,0)
 . S DA=IEN,DR=".01///"_NAME
"RTN","LA7VSET",291,0)
 . W !,"Renaming Auto-Instrument "_$P(^LAB(62.4,IEN,0),U)_" to "_NAME
"RTN","LA7VSET",292,0)
 . D ^DIE
"RTN","LA7VSET",293,0)
 . S UPDT=1
"RTN","LA7VSET",294,0)
 K DA,DR,DIE
"RTN","LA7VSET",295,0)
 S DIE="^LAHM(62.48,"
"RTN","LA7VSET",296,0)
 S RMT1="LA7V REMOTE ",RMT=RMT1
"RTN","LA7VSET",297,0)
 F  S RMT=$O(^LAHM(62.48,"B",RMT)) Q:RMT=""!(RMT'[RMT1)  D
"RTN","LA7VSET",298,0)
 . S IEN=$O(^LAHM(62.48,"B",RMT,0))
"RTN","LA7VSET",299,0)
 . S NAME="LA7V COLLECTION"_$P($P(^LAHM(62.48,IEN,0),U),"REMOTE",2)
"RTN","LA7VSET",300,0)
 . S DA=IEN,DR=".01///"_NAME
"RTN","LA7VSET",301,0)
 . W !,"Renaming LA7 Message Configuration "_$P(^LAHM(62.48,IEN,0),U)_" to "_NAME
"RTN","LA7VSET",302,0)
 . D ^DIE
"RTN","LA7VSET",303,0)
 . S UPDT=1
"RTN","LA7VSET",304,0)
 I $G(UPDT)=1 D
"RTN","LA7VSET",305,0)
 . N DIR,DIRUT
"RTN","LA7VSET",306,0)
 . W !!,"For consistency and clarity the above Auto-Instrument names"
"RTN","LA7VSET",307,0)
 . W !,"and Message Configurations have been changed from REMOTE to COLLECTION."
"RTN","LA7VSET",308,0)
 . S DIR(0)="E" D ^DIR
"RTN","LA7VSET",309,0)
 Q
"RTN","LA7VSET",310,0)
 ;
"RTN","LA7VSET",311,0)
 ;
"RTN","LA7VSET",312,0)
GETLL(LA7X) ; Get Lower Level Protocol information for displaying
"RTN","LA7VSET",313,0)
 ; Call with LA7X = ien of file #101 protocol
"RTN","LA7VSET",314,0)
 ;
"RTN","LA7VSET",315,0)
 ; Called from above and LA7VSET1
"RTN","LA7VSET",316,0)
 ;
"RTN","LA7VSET",317,0)
 N LA7Y
"RTN","LA7VSET",318,0)
 ;
"RTN","LA7VSET",319,0)
 D GETS^DIQ(101,LA7X_",",".01;770.7","IE","LA7Y")
"RTN","LA7VSET",320,0)
 ;
"RTN","LA7VSET",321,0)
 W !,?3,$G(LA7Y(101,LA7X_",",.01,"E"))
"RTN","LA7VSET",322,0)
 W ?40,$G(LA7Y(101,LA7X_",",770.7,"E"))
"RTN","LA7VSET",323,0)
 I $G(LA7Y(101,LA7X_",",770.7,"I")) W " ("_$$GET1^DIQ(870,+LA7Y(101,LA7X_",",770.7,"I")_",",2)_")"
"RTN","LA7VSET",324,0)
 ;
"RTN","LA7VSET",325,0)
 Q
"RTN","LA7VSET1")
0^58^B37718613
"RTN","LA7VSET1",1,0)
LA7VSET1 ;DALOI/JMC - MENU TO SETUP VISN LABS ; 12/3/1997
"RTN","LA7VSET1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,51,55,46**;Sep 27, 1994
"RTN","LA7VSET1",3,0)
 ;
"RTN","LA7VSET1",4,0)
 ; Reference to HL LOGICAL LINK file (#870) supported by DBIA #1495, 1496, 2063
"RTN","LA7VSET1",5,0)
 ; Reference to PROTOCOL file (#101) supported by DBIA #872
"RTN","LA7VSET1",6,0)
 ; Reference to MAIL GROUP file (#3.8) supported by DBIA #2061
"RTN","LA7VSET1",7,0)
 ;
"RTN","LA7VSET1",8,0)
COLLECT ; Collection Lab Setup Menu
"RTN","LA7VSET1",9,0)
 ;
"RTN","LA7VSET1",10,0)
 N LA7CNT,LA7,LA7P,LA7A,REMOTE
"RTN","LA7VSET1",11,0)
 ;
"RTN","LA7VSET1",12,0)
 ;
"RTN","LA7VSET1",13,0)
 F  D  Q:'LA7A
"RTN","LA7VSET1",14,0)
 . S REMOTE="COLLECTION Lab(s)"
"RTN","LA7VSET1",15,0)
 . D RMTBLD,RMTHDR,RMTLST,KDIR
"RTN","LA7VSET1",16,0)
 . W !! S DIR(0)="NO^1:"_LA7CNT
"RTN","LA7VSET1",17,0)
 . D R1HLP
"RTN","LA7VSET1",18,0)
 . D ^DIR
"RTN","LA7VSET1",19,0)
 . I $D(DIRUT) S LA7A=0 Q
"RTN","LA7VSET1",20,0)
 . S LA7A=Y D AEREMT
"RTN","LA7VSET1",21,0)
 Q
"RTN","LA7VSET1",22,0)
 ;
"RTN","LA7VSET1",23,0)
 ;
"RTN","LA7VSET1",24,0)
RMTBLD ; Identify all COLLECTION labs using LA7 MESSAGE PARAMETER file (#62.48)
"RTN","LA7VSET1",25,0)
 ;
"RTN","LA7VSET1",26,0)
 N LA7,LA74,SNAME,SNUM
"RTN","LA7VSET1",27,0)
 S LA7CNT=0,(LA7,LA7P)="LA7V COLLECTION "
"RTN","LA7VSET1",28,0)
 F  S LA7=$O(^LAHM(62.48,"B",LA7)) Q:LA7=""!(LA7'[LA7P)  D
"RTN","LA7VSET1",29,0)
 . S LA74=0,SNUM=$P(LA7,"COLLECTION ",2)
"RTN","LA7VSET1",30,0)
 . D FIND^DIC(4,"",".01;99","MOX",SNUM,"","","","","SNAME")
"RTN","LA7VSET1",31,0)
 . S SNAME=$O(SNAME("DILIST",1,0))
"RTN","LA7VSET1",32,0)
 . S:SNAME'="" SNAME=SNAME("DILIST","ID",SNAME,.01)
"RTN","LA7VSET1",33,0)
 . S LA74=+$G(SNAME("DILIST",2,1))
"RTN","LA7VSET1",34,0)
 . I SNAME="" D  Q:SNAME=""
"RTN","LA7VSET1",35,0)
 . . S SNUM=$O(^LAHM(62.48,"B",LA7,0))
"RTN","LA7VSET1",36,0)
 . . S SNAME=$O(^LAHM(62.9,"AC",SNUM,0)) Q:SNAME=""
"RTN","LA7VSET1",37,0)
 . . S LA74=+$P(^LAHM(62.9,SNAME,0),U,6)
"RTN","LA7VSET1",38,0)
 . . S SNAME=$$GET1^DIQ(4,LA74_",",.01)
"RTN","LA7VSET1",39,0)
 . . Q:SNAME=""
"RTN","LA7VSET1",40,0)
 . . S SNUM=$P(LA7,"COLLECTION ",2)
"RTN","LA7VSET1",41,0)
 . S LA7CNT=LA7CNT+1
"RTN","LA7VSET1",42,0)
 . S REMOTE(LA7CNT)=SNUM_U_SNAME_U_LA7_U_LA74
"RTN","LA7VSET1",43,0)
 ;
"RTN","LA7VSET1",44,0)
 S LA7CNT=LA7CNT+1,REMOTE(LA7CNT)=""
"RTN","LA7VSET1",45,0)
 Q
"RTN","LA7VSET1",46,0)
 ;
"RTN","LA7VSET1",47,0)
 ;
"RTN","LA7VSET1",48,0)
RMTHDR ; Collection setup header
"RTN","LA7VSET1",49,0)
 ;
"RTN","LA7VSET1",50,0)
 W @IOF,! F X=1:1:79 W "-"
"RTN","LA7VSET1",51,0)
 W !,?((80-$L(REMOTE))/2),REMOTE
"RTN","LA7VSET1",52,0)
 W ! F X=1:1:79 W "-"
"RTN","LA7VSET1",53,0)
 W !!
"RTN","LA7VSET1",54,0)
 ;
"RTN","LA7VSET1",55,0)
 Q
"RTN","LA7VSET1",56,0)
 ;
"RTN","LA7VSET1",57,0)
 ;
"RTN","LA7VSET1",58,0)
RMTLST ;
"RTN","LA7VSET1",59,0)
 S LA7CNT=1,LA7=0
"RTN","LA7VSET1",60,0)
 F  S LA7=$O(REMOTE(LA7)) Q:'LA7  D
"RTN","LA7VSET1",61,0)
 . I REMOTE(LA7)="" Q
"RTN","LA7VSET1",62,0)
 . W !,LA7,".",?5,$P(REMOTE(LA7),U,2)_"  ("_$P(REMOTE(LA7),U,3)_")"
"RTN","LA7VSET1",63,0)
 . S LA7CNT=LA7CNT+1
"RTN","LA7VSET1",64,0)
 ;
"RTN","LA7VSET1",65,0)
 W !,LA7CNT,".",?5,"Add COLLECTION Lab"
"RTN","LA7VSET1",66,0)
 ;
"RTN","LA7VSET1",67,0)
 Q
"RTN","LA7VSET1",68,0)
 ;
"RTN","LA7VSET1",69,0)
 ;
"RTN","LA7VSET1",70,0)
RMTHDR2 ;
"RTN","LA7VSET1",71,0)
 N LA7624,LA76248,LA7870
"RTN","LA7VSET1",72,0)
 ;
"RTN","LA7VSET1",73,0)
 S LA7CNT=1
"RTN","LA7VSET1",74,0)
 W !!,"1. COLLECTION Lab: ",?15,$P(REMOTE(LA7A),U,2)
"RTN","LA7VSET1",75,0)
 W:$P(REMOTE(LA7A),U,2)'="" "  (Uneditable)"
"RTN","LA7VSET1",76,0)
 ;
"RTN","LA7VSET1",77,0)
 I $P(REMOTE(LA7A),U,2)="" Q
"RTN","LA7VSET1",78,0)
 ;
"RTN","LA7VSET1",79,0)
 S LA7870=$$FIND1^DIC(870,"","OX","LA7V "_$P(REMOTE(LA7A),U)),LA7CNT=2
"RTN","LA7VSET1",80,0)
 W !,"2. Logical Link (MailMan or TCP/IP): ",$$GET1^DIQ(870,LA7870_",",.01)
"RTN","LA7VSET1",81,0)
 ;
"RTN","LA7VSET1",82,0)
 S LA76248=$$FIND1^DIC(62.48,"","OX","LA7V COLLECTION "_$P(REMOTE(LA7A),U)),LA7CNT=3
"RTN","LA7VSET1",83,0)
 W !,"3. Message Configuration: ",$$GET1^DIQ(62.48,LA76248_",",.01)
"RTN","LA7VSET1",84,0)
 Q
"RTN","LA7VSET1",85,0)
 ;
"RTN","LA7VSET1",86,0)
 ;
"RTN","LA7VSET1",87,0)
AEREMT ;
"RTN","LA7VSET1",88,0)
 ;
"RTN","LA7VSET1",89,0)
 N CHA
"RTN","LA7VSET1",90,0)
 ;
"RTN","LA7VSET1",91,0)
 F  S REMOTE="COLLECTION Lab Setup" D RMTHDR,RMTHDR2,KDIR W !! S DIR(0)="NO^1:"_LA7CNT D R2HLP D ^DIR S CHA=Y D:CHA>0   Q:+CHA'>0
"RTN","LA7VSET1",92,0)
 . I CHA=1 D RLAB($P(REMOTE(LA7A),U))
"RTN","LA7VSET1",93,0)
 . I CHA=2 D RLL
"RTN","LA7VSET1",94,0)
 . I CHA=3 D LMC
"RTN","LA7VSET1",95,0)
 Q
"RTN","LA7VSET1",96,0)
 ;
"RTN","LA7VSET1",97,0)
 ;
"RTN","LA7VSET1",98,0)
LMC ; Edit Lab message configuration file
"RTN","LA7VSET1",99,0)
 ;
"RTN","LA7VSET1",100,0)
 N DIC,DA,DR,DIE,LA76248
"RTN","LA7VSET1",101,0)
 ;
"RTN","LA7VSET1",102,0)
 S LA76248=$$FIND1^DIC(62.48,"","OX","LA7V COLLECTION "_$P(REMOTE(LA7A),U))
"RTN","LA7VSET1",103,0)
 I LA76248<0 W !,"You have not entered a "_LAB_" lab." Q
"RTN","LA7VSET1",104,0)
 S DA=LA76248,DIE="^LAHM(62.48,",DR="3;4;10;@20;20;I X'="""" S Y=""@20"""
"RTN","LA7VSET1",105,0)
 D ^DIE
"RTN","LA7VSET1",106,0)
 Q
"RTN","LA7VSET1",107,0)
 ;
"RTN","LA7VSET1",108,0)
 ;
"RTN","LA7VSET1",109,0)
RLAB(LRI) ;Add REMOTE LAB
"RTN","LA7VSET1",110,0)
 ;
"RTN","LA7VSET1",111,0)
 N INST
"RTN","LA7VSET1",112,0)
 ;
"RTN","LA7VSET1",113,0)
 I $P(REMOTE(LA7A),U)'="" D KDIR S DIR("A")="Are you sure you want to update the "_$P(REMOTE(LA7A),U,2)_" interface",DIR(0)="Y0" D ^DIR Q:+Y'>0
"RTN","LA7VSET1",114,0)
 ;
"RTN","LA7VSET1",115,0)
 I $P(REMOTE(LA7A),U)="" D
"RTN","LA7VSET1",116,0)
 . N DIC,DA,DO
"RTN","LA7VSET1",117,0)
 . S DIC="^DIC(4,",DIC(0)="AEMQZ"
"RTN","LA7VSET1",118,0)
 . S DIC("S")="N LA7X S LA7X=$G(^(99)) I ($L($P(LA7X,U))&$P(LA7X,U,5)=""VA"")!($P(LA7X,U)=""""&$P(LA7X,U,5)'=""VA"")"
"RTN","LA7VSET1",119,0)
 . D ^DIC Q:Y<1
"RTN","LA7VSET1",120,0)
 . S INST=+Y
"RTN","LA7VSET1",121,0)
 . I PRIMARY'=INST S REMOTE(LA7A+1)=REMOTE(LA7A),REMOTE(LA7A)=$$GET1^DIQ(4,INST_",",99)_U_$$GET1^DIQ(4,INST_",",.01)
"RTN","LA7VSET1",122,0)
 . I $P(REMOTE(LA7A),U)="" D
"RTN","LA7VSET1",123,0)
 . . K DIC,DA,DO
"RTN","LA7VSET1",124,0)
 . . S DIC="^LAHM(62.9,",DIC(0)="AEMQ",DIC("S")="I $P(^(0),U,4)=1,$L($P(^(0),U,12)),$P(^(0),U,6)=INST"
"RTN","LA7VSET1",125,0)
 . . D ^DIC Q:Y<1
"RTN","LA7VSET1",126,0)
 . . S LA7629=+Y,LA7VNVC=$$UP^XLFSTR($P(^LAHM(62.9,LA7629,0),"^",12)),$P(REMOTE(LA7A),U)=LA7VNVC
"RTN","LA7VSET1",127,0)
 . I PRIMARY=INST!(INST=DUZ(2)) W !,"To add your Hospital as a COLLECTION site just add HOST sites."
"RTN","LA7VSET1",128,0)
 ;
"RTN","LA7VSET1",129,0)
 I $P(REMOTE(LA7A),U)="" S $P(REMOTE(LA7A),U,2)="" Q
"RTN","LA7VSET1",130,0)
 ;
"RTN","LA7VSET1",131,0)
 I PRIMARY'=$P(REMOTE(LA7A),U) D REMOTE^LA7VSTP(PRIMARY,PRSITE,$P(REMOTE(LA7A),U),$P(REMOTE(LA7A),U,2))
"RTN","LA7VSET1",132,0)
 ;
"RTN","LA7VSET1",133,0)
 Q
"RTN","LA7VSET1",134,0)
 ;
"RTN","LA7VSET1",135,0)
 ;
"RTN","LA7VSET1",136,0)
 ;
"RTN","LA7VSET1",137,0)
RLL ; add/edit logical link
"RTN","LA7VSET1",138,0)
 ;
"RTN","LA7VSET1",139,0)
 N HDR,PR,LL
"RTN","LA7VSET1",140,0)
 ;
"RTN","LA7VSET1",141,0)
 S HDR="Logical Link for transmissions to/from "_$P(REMOTE(LA7A),U,2)
"RTN","LA7VSET1",142,0)
 W @IOF,! F X=1:1:79 W "-"
"RTN","LA7VSET1",143,0)
 W !,?((80-$L(HDR))/2),HDR
"RTN","LA7VSET1",144,0)
 W ! F X=1:1:79 W "-"
"RTN","LA7VSET1",145,0)
 W !,?3,"Protocol",?40,"Logical Link",!,?3,"----------",?40,"---------------",!!
"RTN","LA7VSET1",146,0)
 ;
"RTN","LA7VSET1",147,0)
 S PR=$O(^ORD(101,"B","LA7V Process Order from "_$P(REMOTE(LA7A),U),0))
"RTN","LA7VSET1",148,0)
 I PR D GETLL^LA7VSET(PR)
"RTN","LA7VSET1",149,0)
 ;
"RTN","LA7VSET1",150,0)
 S PR=$O(^ORD(101,"B","LA7V Send Results to "_$P(REMOTE(LA7A),U),0))
"RTN","LA7VSET1",151,0)
 I PR D GETLL^LA7VSET(PR)
"RTN","LA7VSET1",152,0)
 ;
"RTN","LA7VSET1",153,0)
 W !!
"RTN","LA7VSET1",154,0)
 D KDIR
"RTN","LA7VSET1",155,0)
 S DIR("A")="Enter a Logical Link",DIR(0)="SBMO^MM:MAILMAN;TCP:TCP/IP"
"RTN","LA7VSET1",156,0)
 D ^DIR
"RTN","LA7VSET1",157,0)
 I $D(DIRUT) Q
"RTN","LA7VSET1",158,0)
 S LL=Y
"RTN","LA7VSET1",159,0)
 I LL="MM" D MAIL^LA7VLL(REMOTE(LA7A))
"RTN","LA7VSET1",160,0)
 I LL="TCP" D TCP^LA7VLL($P(REMOTE(LA7A),U),PRIMARY)
"RTN","LA7VSET1",161,0)
 ;
"RTN","LA7VSET1",162,0)
 Q
"RTN","LA7VSET1",163,0)
 ;
"RTN","LA7VSET1",164,0)
 ;
"RTN","LA7VSET1",165,0)
R1HLP ; HOST Lab(s) help
"RTN","LA7VSET1",166,0)
 S DIR("?")="Enter a number between 1 and "_LA7CNT_"."
"RTN","LA7VSET1",167,0)
 S DIR("?",1)="Enter a '"_LA7CNT_"' to create a new COLLECTION lab."
"RTN","LA7VSET1",168,0)
 Q
"RTN","LA7VSET1",169,0)
 ;
"RTN","LA7VSET1",170,0)
 ;
"RTN","LA7VSET1",171,0)
R2HLP ; HOST Lab Setup help
"RTN","LA7VSET1",172,0)
 S DIR("?")="Enter a number between 1 and "_LA7CNT_".  For new entries begin with '1.  HOST Lab:'"
"RTN","LA7VSET1",173,0)
 S DIR("?",1)="Enter a '1' to create the HL7 environment along with the Auto-Instrument"
"RTN","LA7VSET1",174,0)
 S DIR("?",2)="and LA7 Message Configuration."
"RTN","LA7VSET1",175,0)
 S DIR("?",3)="Enter a '2' to create the link between the COLLECTION and HOST labs."
"RTN","LA7VSET1",176,0)
 S DIR("?",4)="Enter a '3' to configure the LA7 MESSAGE PARAMETER file."
"RTN","LA7VSET1",177,0)
 Q
"RTN","LA7VSET1",178,0)
 ;
"RTN","LA7VSET1",179,0)
KDIR ;
"RTN","LA7VSET1",180,0)
 K DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","LA7VSET1",181,0)
 Q
"RTN","LA7VSTP")
0^39^B21583239
"RTN","LA7VSTP",1,0)
LA7VSTP ;DALOI/JMC - HL7 environment setup routine ; 12/3/1997
"RTN","LA7VSTP",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,44,51,46**;Sep 27, 1994
"RTN","LA7VSTP",3,0)
 ; This routine will create LEDI and UNIVERSAL INTERFACE HL7 v1.6 file setups.
"RTN","LA7VSTP",4,0)
 ;
"RTN","LA7VSTP",5,0)
 ; Reference to PROTOCOL file (#101) supported by DBIA #872
"RTN","LA7VSTP",6,0)
 ;
"RTN","LA7VSTP",7,0)
HOST(PRIMARY,PRSITE,LRI,SITE) ;
"RTN","LA7VSTP",8,0)
 ;
"RTN","LA7VSTP",9,0)
 N LAREMOTE,LAHOST,LASERV,LACLNT,LRS,PROT,ORU
"RTN","LA7VSTP",10,0)
 ;
"RTN","LA7VSTP",11,0)
 I $G(LRI)="" D EXIT Q
"RTN","LA7VSTP",12,0)
 ;
"RTN","LA7VSTP",13,0)
 W !,"Setting up the following Host Labs for "_PRSITE
"RTN","LA7VSTP",14,0)
 W !,"  Updating HL7 APPLICATION PARAMETER file (#771)."
"RTN","LA7VSTP",15,0)
 ;
"RTN","LA7VSTP",16,0)
 S LAREMOTE="LA7V REMOTE "_PRIMARY
"RTN","LA7VSTP",17,0)
 D SETAPP(LAREMOTE,PRIMARY)
"RTN","LA7VSTP",18,0)
 ;
"RTN","LA7VSTP",19,0)
 S LAHOST="LA7V HOST "_LRI
"RTN","LA7VSTP",20,0)
 D SETAPP(LAHOST,LRI)
"RTN","LA7VSTP",21,0)
 ;
"RTN","LA7VSTP",22,0)
 W !,"   Updating PROTOCOL file (#101)."
"RTN","LA7VSTP",23,0)
 ;
"RTN","LA7VSTP",24,0)
 ; Setup protocols to receive and process result (ORU) messages.
"RTN","LA7VSTP",25,0)
 ; Create event & subscriber protocols.
"RTN","LA7VSTP",26,0)
 S LASERV="LA7V Receive Results from "_LRI
"RTN","LA7VSTP",27,0)
 D SETPRO(LASERV,"4////E;770.1///"_LAHOST_";770.3///ORU;770.4///R01","","")
"RTN","LA7VSTP",28,0)
 ;
"RTN","LA7VSTP",29,0)
 S LACLNT="LA7V Process Results from "_LRI
"RTN","LA7VSTP",30,0)
 D SETPRO(LACLNT,"4////S;770.2///"_LAREMOTE_";770.3///@;770.4///R01;770.11///ACK;773.1////1;773.2////1;773.4////1","D ORU^LA7VHL","")
"RTN","LA7VSTP",31,0)
 ;
"RTN","LA7VSTP",32,0)
 ; Add subscriber to event.
"RTN","LA7VSTP",33,0)
 D ADDSUB(LASERV,LACLNT)
"RTN","LA7VSTP",34,0)
 ;
"RTN","LA7VSTP",35,0)
 ; Setup protocols to build and send order (ORM) messages.
"RTN","LA7VSTP",36,0)
 ; Create event & subscriber protocols.
"RTN","LA7VSTP",37,0)
 S LASERV="LA7V Order to "_LRI
"RTN","LA7VSTP",38,0)
 D SETPRO(LASERV,"4////E;770.1///"_LAREMOTE_";770.2///@;770.3///ORM;770.4///O01;770.8///AL;770.9///AL;770.11///@","","D ORR^LA7VHL")
"RTN","LA7VSTP",39,0)
 ;
"RTN","LA7VSTP",40,0)
 S LACLNT="LA7V Send Order to "_LRI
"RTN","LA7VSTP",41,0)
 D SETPRO(LACLNT,"4////S;770.1///@;770.2///"_LAHOST_";770.3///@;770.4///O01;770.11///ORR;773.1////1;773.2////1;773.4////1","","")
"RTN","LA7VSTP",42,0)
 ;
"RTN","LA7VSTP",43,0)
 ; Add subscriber to event.
"RTN","LA7VSTP",44,0)
 D ADDSUB(LASERV,LACLNT)
"RTN","LA7VSTP",45,0)
 ;
"RTN","LA7VSTP",46,0)
 D HOST^LA7VSTP1
"RTN","LA7VSTP",47,0)
 D EXIT
"RTN","LA7VSTP",48,0)
 ;
"RTN","LA7VSTP",49,0)
 Q
"RTN","LA7VSTP",50,0)
 ;
"RTN","LA7VSTP",51,0)
 ;
"RTN","LA7VSTP",52,0)
REMOTE(PRIMARY,PRSITE,LRI,SITE) ;
"RTN","LA7VSTP",53,0)
 N LAREMOTE,LAHOST,LASERV,LACLNT,LRS,PROT,ORU
"RTN","LA7VSTP",54,0)
 ;
"RTN","LA7VSTP",55,0)
 I $G(LRI)="" D EXIT Q
"RTN","LA7VSTP",56,0)
 ;
"RTN","LA7VSTP",57,0)
 W !,"Setting up the REMOTE Lab, "_SITE_" and HOST Lab "_PRSITE
"RTN","LA7VSTP",58,0)
 W !,"   Updating HL7 APPLICATION PARAMETER file (#771)."
"RTN","LA7VSTP",59,0)
 ;
"RTN","LA7VSTP",60,0)
 S LAHOST="LA7V HOST "_PRIMARY
"RTN","LA7VSTP",61,0)
 D SETAPP(LAHOST,PRIMARY)
"RTN","LA7VSTP",62,0)
 ;
"RTN","LA7VSTP",63,0)
 S LAREMOTE="LA7V REMOTE "_LRI
"RTN","LA7VSTP",64,0)
 D SETAPP(LAREMOTE,LRI)
"RTN","LA7VSTP",65,0)
 ;
"RTN","LA7VSTP",66,0)
 W !,"   Updating PROTOCOL file (#101)."
"RTN","LA7VSTP",67,0)
 ;
"RTN","LA7VSTP",68,0)
 ; Setup protocols to build and send results (ORU) message back.
"RTN","LA7VSTP",69,0)
 ; Create event & subscriber protocols.
"RTN","LA7VSTP",70,0)
 S LASERV="LA7V Results Reporting to "_LRI
"RTN","LA7VSTP",71,0)
 D SETPRO(LASERV,"4////E;770.1///"_LAHOST_";770.3///ORU;770.4///R01;770.8///AL;770.9///AL","","D ACK^LA7VHL")
"RTN","LA7VSTP",72,0)
 ;
"RTN","LA7VSTP",73,0)
 S LACLNT="LA7V Send Results to "_LRI
"RTN","LA7VSTP",74,0)
 D SETPRO(LACLNT,"4////S;770.2///"_LAREMOTE_";770.3///@;770.4///R01;770.11///ACK;773.1///1;773.2///1;773.4////1","","")
"RTN","LA7VSTP",75,0)
 ;
"RTN","LA7VSTP",76,0)
 ; Add subscriber to event.
"RTN","LA7VSTP",77,0)
 D ADDSUB(LASERV,LACLNT)
"RTN","LA7VSTP",78,0)
 ;
"RTN","LA7VSTP",79,0)
 ; Setup protocols to receive and process order (ORM) messages.
"RTN","LA7VSTP",80,0)
 ; Create event & subscriber protocols.
"RTN","LA7VSTP",81,0)
 S LASERV="LA7V Receive Order from "_LRI
"RTN","LA7VSTP",82,0)
 D SETPRO(LASERV,"4////E;770.1///"_LAREMOTE_";770.2///@;770.3///ORM;770.4///O01;770.11///@","","")
"RTN","LA7VSTP",83,0)
 ;
"RTN","LA7VSTP",84,0)
 S LACLNT="LA7V Process Order from "_LRI
"RTN","LA7VSTP",85,0)
 D SETPRO(LACLNT,"4////S;770.1///@;770.2///"_LAHOST_";770.3///@;770.4///O01;770.11///ORR;773.1////1;773.2////1;773.4////1","D IN^LA7VORM","")
"RTN","LA7VSTP",86,0)
 ;
"RTN","LA7VSTP",87,0)
 ; Add subscriber to event.
"RTN","LA7VSTP",88,0)
 D ADDSUB(LASERV,LACLNT)
"RTN","LA7VSTP",89,0)
 ;
"RTN","LA7VSTP",90,0)
 D REMOTE^LA7VSTP1
"RTN","LA7VSTP",91,0)
 D EXIT
"RTN","LA7VSTP",92,0)
 ;
"RTN","LA7VSTP",93,0)
 Q
"RTN","LA7VSTP",94,0)
 ;
"RTN","LA7VSTP",95,0)
 ;
"RTN","LA7VSTP",96,0)
EXIT ; Exit with message
"RTN","LA7VSTP",97,0)
 W !!,"HL7 v1.6 Environment setup is complete!!"
"RTN","LA7VSTP",98,0)
 K DIR
"RTN","LA7VSTP",99,0)
 S DIR(0)="E" D ^DIR
"RTN","LA7VSTP",100,0)
 Q
"RTN","LA7VSTP",101,0)
 ;
"RTN","LA7VSTP",102,0)
 ;
"RTN","LA7VSTP",103,0)
SETAPP(LA7X,LA7FAC) ;sets up the HL7 APPLICATION PARAMETER file #771
"RTN","LA7VSTP",104,0)
 ;
"RTN","LA7VSTP",105,0)
 ; Call with LA7X = value of .01 field to add to file #771
"RTN","LA7VSTP",106,0)
 ;           LA7FAC = facility name
"RTN","LA7VSTP",107,0)
 ;
"RTN","LA7VSTP",108,0)
 N DIC,DIE,DLAYGO,DR,LA7Y
"RTN","LA7VSTP",109,0)
 ;
"RTN","LA7VSTP",110,0)
 S X=LA7X
"RTN","LA7VSTP",111,0)
 S DIC="^HL(771,",DLAYGO=771,DIC(0)="L"
"RTN","LA7VSTP",112,0)
 D ^DIC
"RTN","LA7VSTP",113,0)
 S LA7Y=Y
"RTN","LA7VSTP",114,0)
 W:$P(LA7Y,"^",3) !,"     Adding "_LA7X
"RTN","LA7VSTP",115,0)
 I +LA7Y<1 Q
"RTN","LA7VSTP",116,0)
 ;
"RTN","LA7VSTP",117,0)
 S DA=+LA7Y,DIE="^HL(771,",DR="2////a;3////"_LA7FAC
"RTN","LA7VSTP",118,0)
 D ^DIE
"RTN","LA7VSTP",119,0)
 ;
"RTN","LA7VSTP",120,0)
 Q
"RTN","LA7VSTP",121,0)
 ;
"RTN","LA7VSTP",122,0)
 ;
"RTN","LA7VSTP",123,0)
SETPRO(LA7X,FIELDS,F771,F772) ;sets up the PROTOCOL file #101
"RTN","LA7VSTP",124,0)
 ; Call with   LA7X = Protocol name
"RTN","LA7VSTP",125,0)
 ;           FIELDS = FileMan DR string
"RTN","LA7VSTP",126,0)
 ;             F771 = Protocol field 771 value to set directly
"RTN","LA7VSTP",127,0)
 ;             F772 = Protocol field 772 value to set directly
"RTN","LA7VSTP",128,0)
 ;
"RTN","LA7VSTP",129,0)
 N DA,DIC,DIE,DR,SPROT
"RTN","LA7VSTP",130,0)
 ;
"RTN","LA7VSTP",131,0)
 I '$G(LA7QUIET) W !,LA7X
"RTN","LA7VSTP",132,0)
 S X=LA7X,DIC="^ORD(101,",DIC(0)="L",DLAYGO=101
"RTN","LA7VSTP",133,0)
 D ^DIC
"RTN","LA7VSTP",134,0)
 I '$G(LA7QUIET) W:$P(Y,U,3) !,"     Adding "_X
"RTN","LA7VSTP",135,0)
 ;
"RTN","LA7VSTP",136,0)
 S (DA,SPROT)=+Y
"RTN","LA7VSTP",137,0)
 I DA<0 Q
"RTN","LA7VSTP",138,0)
 S DR=FIELDS_";5////"_DUZ_";770.6////P;770.95///2.3"
"RTN","LA7VSTP",139,0)
 S DIE="^ORD(101,"
"RTN","LA7VSTP",140,0)
 D ^DIE
"RTN","LA7VSTP",141,0)
 ;
"RTN","LA7VSTP",142,0)
 I $P(^ORD(101,SPROT,0),U)=LA7X S ^ORD(101,SPROT,771)=$G(F771)
"RTN","LA7VSTP",143,0)
 I $P(^ORD(101,SPROT,0),U)=LA7X S ^ORD(101,SPROT,772)=$G(F772)
"RTN","LA7VSTP",144,0)
 ;
"RTN","LA7VSTP",145,0)
 Q
"RTN","LA7VSTP",146,0)
 ;
"RTN","LA7VSTP",147,0)
 ;
"RTN","LA7VSTP",148,0)
ADDSUB(LA7EVNT,LA7SUB) ; Add subscriber to event protocol
"RTN","LA7VSTP",149,0)
 ; Call with LA7EVNT = name of event protocol
"RTN","LA7VSTP",150,0)
 ;            LA7SUB = name of subscriber protocol
"RTN","LA7VSTP",151,0)
 ;
"RTN","LA7VSTP",152,0)
 N DIC,DA,DR,D0,DLAYGO,LA7101E,LA7101S,X,Y
"RTN","LA7VSTP",153,0)
 ;
"RTN","LA7VSTP",154,0)
 I '$D(^ORD(101,"B",LA7SUB)) Q
"RTN","LA7VSTP",155,0)
 I '$D(^ORD(101,"B",LA7EVNT)) Q
"RTN","LA7VSTP",156,0)
 ;
"RTN","LA7VSTP",157,0)
 ; Get ien for event and subscriber protocols
"RTN","LA7VSTP",158,0)
 S LA7101E=$O(^ORD(101,"B",LA7EVNT,0))
"RTN","LA7VSTP",159,0)
 S LA7101S=$O(^ORD(101,"B",LA7SUB,0))
"RTN","LA7VSTP",160,0)
 ;
"RTN","LA7VSTP",161,0)
 ; Already listed as a subscriber to this event
"RTN","LA7VSTP",162,0)
 I $D(^ORD(101,LA7101E,775,"B",LA7101S)) Q
"RTN","LA7VSTP",163,0)
 ;
"RTN","LA7VSTP",164,0)
 S X=LA7SUB,DA(1)=LA7101E,DIC="^ORD(101,"_DA(1)_",775,"
"RTN","LA7VSTP",165,0)
 S DLAYGO=101.01,DIC(0)="QEL",DIC("P")=$P(^DD(101,775,0),U,2)
"RTN","LA7VSTP",166,0)
 D ^DIC
"RTN","LA7VSTP",167,0)
 ;
"RTN","LA7VSTP",168,0)
 Q
"RTN","LA7VSTP1")
0^10^B6656992
"RTN","LA7VSTP1",1,0)
LA7VSTP1 ;DALOI/JMC - CONT. from LA7VSTP ; 12/3/1997
"RTN","LA7VSTP1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46**;Sep 27, 1994
"RTN","LA7VSTP1",3,0)
 ;
"RTN","LA7VSTP1",4,0)
HOST ; Hosts setup for Remote site
"RTN","LA7VSTP1",5,0)
 ; changing remote site to collection site but not in File 771 (1-15 char)
"RTN","LA7VSTP1",6,0)
 ;
"RTN","LA7VSTP1",7,0)
 N LAREMOTE,LA7VAI
"RTN","LA7VSTP1",8,0)
 S LAREMOTE="LA7V COLLECTION "_PRIMARY
"RTN","LA7VSTP1",9,0)
 ;
"RTN","LA7VSTP1",10,0)
 W !,"Updating LA7 MESSAGE PARAMETER file (#62.48) for the HOST Lab "_SITE_"."
"RTN","LA7VSTP1",11,0)
 W !,?5,"Adding "_LAHOST
"RTN","LA7VSTP1",12,0)
 ;
"RTN","LA7VSTP1",13,0)
 K DIC
"RTN","LA7VSTP1",14,0)
 S X=LAHOST,DLAYGO=62.48,DIC="^LAHM(62.48,",DIC(0)="LQ"
"RTN","LA7VSTP1",15,0)
 D ^DIC K DA
"RTN","LA7VSTP1",16,0)
 I Y>0 D
"RTN","LA7VSTP1",17,0)
 . S DIE=DIC,DA=+Y,DR="1///HL7;2///ACTIVE;4///ON;11///LEDI"
"RTN","LA7VSTP1",18,0)
 . D ^DIE
"RTN","LA7VSTP1",19,0)
 . S (LA7VAI,DA(1))=DA,DIC="^LAHM(62.48,"_DA(1)_",90,",DLAYGO=62.483,DIC(0)="QEML",DIC("P")=$P(^DD(62.48,90,0),U,2)
"RTN","LA7VSTP1",20,0)
 . S X=LAHOST_LRI_"LA7V REMOTE "_PRIMARY_PRIMARY
"RTN","LA7VSTP1",21,0)
 . D ^DIC
"RTN","LA7VSTP1",22,0)
 . S:$P(^LAHM(62.48,LA7VAI,0),U)=LAHOST ^(1)="D QUE^LA7VIN"
"RTN","LA7VSTP1",23,0)
 . D F629(+$P(HOST(LA7A),"^",4),LA7VAI)
"RTN","LA7VSTP1",24,0)
 K DIC,DIE,DA,DR,DLAYGO
"RTN","LA7VSTP1",25,0)
HF624 ;
"RTN","LA7VSTP1",26,0)
 K LA7VAI
"RTN","LA7VSTP1",27,0)
 W !,"Updating LAB AUTO INSTRUMENT file (#62.4) for HOST Lab "_SITE_"."
"RTN","LA7VSTP1",28,0)
 W !,?5,"Adding "_LAHOST
"RTN","LA7VSTP1",29,0)
 K DIC S X=LAHOST,DIC="^LAB(62.4,",DIC(0)="L",DLAYGO=62.4,DIC("DR")="5///LOG;6///ID;8///"_LAHOST_";18///1" D ^DIC S LA7VAI=+Y K DIC,DA,DO,DLAYGO
"RTN","LA7VSTP1",30,0)
 Q
"RTN","LA7VSTP1",31,0)
 ;
"RTN","LA7VSTP1",32,0)
 ;
"RTN","LA7VSTP1",33,0)
REMOTE ;Remote setup for Host site
"RTN","LA7VSTP1",34,0)
RF6248 ;
"RTN","LA7VSTP1",35,0)
 ;changing remote site to collection site but not in File 771 (1-15 char)
"RTN","LA7VSTP1",36,0)
 ;
"RTN","LA7VSTP1",37,0)
 N DIC,DIE,DA,DR,DLAYGO,LAREMOTE,LA7VAI
"RTN","LA7VSTP1",38,0)
 S LAREMOTE="LA7V COLLECTION "_LRI
"RTN","LA7VSTP1",39,0)
 ;
"RTN","LA7VSTP1",40,0)
 W !,"Updating LA7 MESSAGE PARAMETER file (#62.48) for the REMOTE Lab "_SITE_"."
"RTN","LA7VSTP1",41,0)
 W !,?5,"Adding "_LAREMOTE
"RTN","LA7VSTP1",42,0)
 ;
"RTN","LA7VSTP1",43,0)
 S X=LAREMOTE,DIC="^LAHM(62.48,",DIC(0)="LQ",DLAYGO=62.48
"RTN","LA7VSTP1",44,0)
 D ^DIC
"RTN","LA7VSTP1",45,0)
 I Y>0 D
"RTN","LA7VSTP1",46,0)
 . S DIE=DIC,DA=+Y,DR="1///HL7;2///ACTIVE;4///ON;11///LEDI"
"RTN","LA7VSTP1",47,0)
 . D ^DIE
"RTN","LA7VSTP1",48,0)
 . S (LA7VAI,DA(1))=DA,DIC="^LAHM(62.48,"_DA(1)_",90,",DIC(0)="QEML",DLAYGO=62.483,DIC("P")=$P(^DD(62.48,90,0),U,2)
"RTN","LA7VSTP1",49,0)
 . S X="LA7V REMOTE "_LRI_LRI_LAHOST_PRIMARY
"RTN","LA7VSTP1",50,0)
 . D ^DIC
"RTN","LA7VSTP1",51,0)
 . S:$P(^LAHM(62.48,LA7VAI,0),U)=LAREMOTE ^(1)="D QUE^LA7VIN"
"RTN","LA7VSTP1",52,0)
 ;
"RTN","LA7VSTP1",53,0)
 Q
"RTN","LA7VSTP1",54,0)
 ;
"RTN","LA7VSTP1",55,0)
 ;
"RTN","LA7VSTP1",56,0)
F629(LA74,LA76248) ; Update entries in #62.9 that use this message configuration (#62.48).
"RTN","LA7VSTP1",57,0)
 ; Check each shipping configuration that has this site as a host site's computer system.
"RTN","LA7VSTP1",58,0)
 ; Call with    LA74 = ien of entry in INSTITUTION file (#4)
"RTN","LA7VSTP1",59,0)
 ;           LA76248 = ien of entry in LA7 MESSAGE PARAMETER (#62.48)
"RTN","LA7VSTP1",60,0)
 ;
"RTN","LA7VSTP1",61,0)
 N FDA,LA7629,LA7DIE
"RTN","LA7VSTP1",62,0)
 ;
"RTN","LA7VSTP1",63,0)
 S LA7629=0
"RTN","LA7VSTP1",64,0)
 F  S LA7629=$O(^LAHM(62.9,"E",LA74,LA7629)) Q:'LA7629  D
"RTN","LA7VSTP1",65,0)
 . K FDA,LA7DIE
"RTN","LA7VSTP1",66,0)
 . S FDA(2,62.9,LA7629_",",.07)=LA76248
"RTN","LA7VSTP1",67,0)
 . D FILE^DIE("","FDA(2)","LA7DIE(2)")
"RTN","LA7VSTP1",68,0)
 Q
"RTN","LAGEN")
0^33^B33028842
"RTN","LAGEN",1,0)
LAGEN ;DALOI/CJS - LAB AUTOMATED DATA ;7/20/90  08:28
"RTN","LAGEN",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**1,17,22,27,47,46**;Sep 27, 1994
"RTN","LAGEN",3,0)
 Q
"RTN","LAGEN",4,0)
 ;
"RTN","LAGEN",5,0)
LOG ; Run by accession number.
"RTN","LAGEN",6,0)
 S LINK="",LRDFN=0,DPF=2
"RTN","LAGEN",7,0)
 I $G(LOG)<1 G LG2
"RTN","LAGEN",8,0)
 ; If overlay data -> find if accession exists in LAH
"RTN","LAGEN",9,0)
 I LROVER D  Q:ISQN>0
"RTN","LAGEN",10,0)
 . N I,X
"RTN","LAGEN",11,0)
 . S (ISQN,I)=0
"RTN","LAGEN",12,0)
 . F  S I=$O(^LAH(LWL,1,"C",LOG,I)) Q:I<1  D  Q:ISQN
"RTN","LAGEN",13,0)
 . . S X=$G(^LAH(LWL,1,I,0))
"RTN","LAGEN",14,0)
 . . ; Quit if different accession area.
"RTN","LAGEN",15,0)
 . . I $P(X,"^",3),$P(X,"^",3)'=WL Q
"RTN","LAGEN",16,0)
 . . ; Quit if different accession date and not a rollover accession (same original accession date).
"RTN","LAGEN",17,0)
 . . I $P(X,"^",4),$P(X,"^",4)'=LADT,$P($G(^LRO(68,WL,1,LADT,1,LOG,0)),"^",3)'=$P($G(^LRO(68,WL,1,$P(X,"^",4),1,LOG,0)),"^",3) Q
"RTN","LAGEN",18,0)
 . . S ISQN=I
"RTN","LAGEN",19,0)
 . . D UPDT(LWL,ISQN)
"RTN","LAGEN",20,0)
 I '$D(^LRO(68,WL,1,LADT,1,LOG,0)) S LINK="^^"_+LOG G LG2
"RTN","LAGEN",21,0)
 S X=^LRO(68,WL,1,LADT,1,LOG,0),LINK=WL_U_LADT_U_LOG,LRDFN=+X,DPF=$P(X,U,2)
"RTN","LAGEN",22,0)
LG2 D ISQN
"RTN","LAGEN",23,0)
 I $G(LOG)>0 S ^LAH(LWL,1,"C",LOG,ISQN)="",$P(^LAH(LWL,1,ISQN,0),U,3,5)=LINK
"RTN","LAGEN",24,0)
 I $G(CENUM)>0 S $P(^LAH(LWL,1,ISQN,0),U,6)=CENUM,^LAH(LWL,1,"D",+CENUM,ISQN)=""
"RTN","LAGEN",25,0)
 I $D(^LRO(68.2,LWL,1,+TRAY,1,+CUP,0)) S ^(4,ISQN)=""
"RTN","LAGEN",26,0)
 Q
"RTN","LAGEN",27,0)
 ;
"RTN","LAGEN",28,0)
 ;
"RTN","LAGEN",29,0)
ISQN ;
"RTN","LAGEN",30,0)
 L +^LAH(LWL):99999
"RTN","LAGEN",31,0)
 ;
"RTN","LAGEN",32,0)
 S (^LAH(LWL),ISQN)=1+$G(^LAH(LWL))
"RTN","LAGEN",33,0)
 ;
"RTN","LAGEN",34,0)
 S:CUP="" TRAY=1,CUP=ISQN
"RTN","LAGEN",35,0)
 S ^LAH(LWL,1,ISQN,0)=TRAY_U_CUP_"^^^^^"_METH_"^"_+$G(IDE)
"RTN","LAGEN",36,0)
 ;
"RTN","LAGEN",37,0)
 D UPDT(LWL,ISQN)
"RTN","LAGEN",38,0)
 ;
"RTN","LAGEN",39,0)
 S ^LAH(LWL,1,"B",(+TRAY)_";"_(+CUP),ISQN)=""
"RTN","LAGEN",40,0)
 ;
"RTN","LAGEN",41,0)
 ; IDE xref added to enable correct identifier for CX4/CX5 instruments
"RTN","LAGEN",42,0)
 S ^LAH(LWL,1,"E",+$G(IDE),ISQN)=""
"RTN","LAGEN",43,0)
 ;
"RTN","LAGEN",44,0)
 ; Set UID xref and .3 node, used to verify by unique identifier (UID).
"RTN","LAGEN",45,0)
 I $L($G(LA7UID)) D UID(LWL,ISQN,LA7UID)
"RTN","LAGEN",46,0)
 ;
"RTN","LAGEN",47,0)
 L -^LAH(LWL)
"RTN","LAGEN",48,0)
 Q
"RTN","LAGEN",49,0)
 ;
"RTN","LAGEN",50,0)
 ;
"RTN","LAGEN",51,0)
LLIST ;
"RTN","LAGEN",52,0)
 S LRDFN=0,DPF=2
"RTN","LAGEN",53,0)
 ;
"RTN","LAGEN",54,0)
 I LROVER D  Q:ISQN>0
"RTN","LAGEN",55,0)
 . S ISQN=+$O(^LAH(LWL,1,"B",(+TRAY)_";"_(+CUP),0))
"RTN","LAGEN",56,0)
 . I ISQN D UPDT(LWL,ISQN)
"RTN","LAGEN",57,0)
 ;
"RTN","LAGEN",58,0)
 ; Run by load/work list number sent.
"RTN","LAGEN",59,0)
 D ISQN S LINK="^^"
"RTN","LAGEN",60,0)
 ;
"RTN","LAGEN",61,0)
 I $D(^LRO(68.2,LWL,1,TRAY,1,CUP,0)) S LINK=$P(^(0),"^",1,3),^(4,ISQN)=""
"RTN","LAGEN",62,0)
 ;
"RTN","LAGEN",63,0)
 S $P(^LAH(LWL,1,ISQN,0),U,3,5)=LINK
"RTN","LAGEN",64,0)
 ;
"RTN","LAGEN",65,0)
 S DPF=2
"RTN","LAGEN",66,0)
 Q:LINK="^^"
"RTN","LAGEN",67,0)
 S WL=+$P(LINK,"^",1),WDT=+$P(LINK,"^",2),LOG=+$P(LINK,"^",3),^LAH(LWL,1,"C",LOG,ISQN)=""
"RTN","LAGEN",68,0)
 S X=$S($D(^LRO(68,WL,1,WDT,1,LOG,0)):^(0),1:"0^2"),DPF=+$P(X,U,2),LRDFN=+X
"RTN","LAGEN",69,0)
 ;
"RTN","LAGEN",70,0)
 Q
"RTN","LAGEN",71,0)
 ;
"RTN","LAGEN",72,0)
 ;
"RTN","LAGEN",73,0)
SEQN ;
"RTN","LAGEN",74,0)
 ; Run by the order data received
"RTN","LAGEN",75,0)
 S CUP=""
"RTN","LAGEN",76,0)
 D LLIST
"RTN","LAGEN",77,0)
 Q
"RTN","LAGEN",78,0)
 ;
"RTN","LAGEN",79,0)
 ;
"RTN","LAGEN",80,0)
CENUM ;
"RTN","LAGEN",81,0)
 S DPF=2,LRDFN=0,LOG=$O(^LRO(68,WL,1,DT,1,"D",+CENUM,0))
"RTN","LAGEN",82,0)
 G LOG:LOG>0 ;for martinez only
"RTN","LAGEN",83,0)
 ;IF CENUM?1A.ANP S Y=CENUM D CEPACK I Y?.ANP S DFN=$O(^LAB(62.3,"B",Y,0)) I DFN S DPF=62.3
"RTN","LAGEN",84,0)
 ;
"RTN","LAGEN",85,0)
 D ISQN
"RTN","LAGEN",86,0)
 ;
"RTN","LAGEN",87,0)
 S ^LAH(LWL,1,"C",LOG,ISQN)="",^LAH(LWL,1,"D",+CENUM,ISQN)="",$P(^LAH(LWL,1,ISQN,0),U,6)=CENUM
"RTN","LAGEN",88,0)
 ;
"RTN","LAGEN",89,0)
 I $D(^LRO(68.2,LWL,1,TRAY,1,CUP,0)) S ^(4,ISQN)=""
"RTN","LAGEN",90,0)
 Q
"RTN","LAGEN",91,0)
 ;
"RTN","LAGEN",92,0)
 ;
"RTN","LAGEN",93,0)
IDENT ;
"RTN","LAGEN",94,0)
 S DPF=2,LRDFN=0,LOG=$O(^LRO(68,WL,1,DT,1,"C",IDENT,0))
"RTN","LAGEN",95,0)
 I LOG>0 D LOG Q
"RTN","LAGEN",96,0)
 D ISQN
"RTN","LAGEN",97,0)
 Q
"RTN","LAGEN",98,0)
 ;
"RTN","LAGEN",99,0)
 ;
"RTN","LAGEN",100,0)
CONTROL ; Verify control's
"RTN","LAGEN",101,0)
 ;
"RTN","LAGEN",102,0)
 Q:'$D(^LRO(68,WL,1,DT,1,LOG,0))  Q:$P(^(0),U,2)'=62.3
"RTN","LAGEN",103,0)
 ;
"RTN","LAGEN",104,0)
 S LRDFN=+^LRO(68,WL,1,DT,1,LOG,0),IDT=9999999-$S($D(^(3)):^(3),1:0) Q:'$D(^LR(LRDFN,"CH",IDT,0))
"RTN","LAGEN",105,0)
 S $P(^LRO(68,WL,1,DT,1,LOG,3),U,4)=NOW
"RTN","LAGEN",106,0)
 S $P(^LR(LRDFN,"CH",IDT,0),U,3)=NOW
"RTN","LAGEN",107,0)
 ;
"RTN","LAGEN",108,0)
 F I=1:0 S I=$O(^LAH(LWL,1,ISQN,I)) Q:I<1  S ^LR(LRDFN,"CH",IDT,I)=^LAH(LWL,1,ISQN,I)
"RTN","LAGEN",109,0)
 ;
"RTN","LAGEN",110,0)
 S:'$D(LRTEC) LRTEC=$P(^VA(200,DUZ,0),U,2)
"RTN","LAGEN",111,0)
 ;
"RTN","LAGEN",112,0)
 F I=0:0 S I=$O(^LRO(68,WL,1,DT,1,LOG,4,I)) Q:I<1  I +$P(^(I,0),U,3)[LWL,'$P(^(0),U,5) S $P(^(0),U,5)=NOW,$P(^(0),U,4)=LRTEC,^LRO(68,WL,1,DT,1,"AC",NOW,LOG)="",^LRO(68,WL,1,DT,1,"AD",NOW\1,LOG)=""
"RTN","LAGEN",113,0)
 D CONTXREF
"RTN","LAGEN",114,0)
 K:$G(LOG) ^LAH(LWL,1,"C",+LOG)
"RTN","LAGEN",115,0)
 K ^LAH(LWL,1,"B",(+TRAY)_";"_(+CUP)),^LAH(LWL,1,ISQN)
"RTN","LAGEN",116,0)
 ;
"RTN","LAGEN",117,0)
 Q
"RTN","LAGEN",118,0)
 ;
"RTN","LAGEN",119,0)
 ;
"RTN","LAGEN",120,0)
CEPACK S Y=$P(Y,"\",1),YY="" F I=1:1:$L(Y) S:$A(Y,I)>32 YY=YY_$E(Y,I)
"RTN","LAGEN",121,0)
 S Y=YY
"RTN","LAGEN",122,0)
 K YY
"RTN","LAGEN",123,0)
 Q
"RTN","LAGEN",124,0)
 ;
"RTN","LAGEN",125,0)
 ;
"RTN","LAGEN",126,0)
CONTXREF ; Set up verification X-Ref for controls
"RTN","LAGEN",127,0)
 ;
"RTN","LAGEN",128,0)
 N DA,LRTEST,LRTN,I,LRGTN,X1,X,S1,J,J1
"RTN","LAGEN",129,0)
 ;
"RTN","LAGEN",130,0)
 S LRTEST=""
"RTN","LAGEN",131,0)
 F LRTN=0:0 S LRTN=$O(^LRO(68,WL,1,DT,1,LOG,4,LRTN)) Q:LRTN<1  I $D(^(LRTN,0)),+$P(^(0),U,3)[LWL,+$P(^(0),U,5) S:LRTEST'="" LRTEST=LRTEST_"^"_LRTN S:LRTEST="" LRTEST=LRTN
"RTN","LAGEN",132,0)
AC ;
"RTN","LAGEN",133,0)
 K ^TMP("LR",$J,"T")
"RTN","LAGEN",134,0)
 D ^LREXPD
"RTN","LAGEN",135,0)
 F X=0:0 S X=$O(^TMP("LR",$J,"T",X)) Q:X<1  S X1=$P(^(X),";",2) I X1,$D(^LR(LRDFN,"CH",IDT,X1)) S:'$D(^LRO(68,"AC",LRDFN,IDT,X1)) ^(X1)=""
"RTN","LAGEN",136,0)
 K ^TMP("LR",$J,"T")
"RTN","LAGEN",137,0)
 Q
"RTN","LAGEN",138,0)
 ;
"RTN","LAGEN",139,0)
 ;
"RTN","LAGEN",140,0)
UPDT(LWL,ISQN) ; Set/update date/time this entry in LAH has data added.
"RTN","LAGEN",141,0)
 ; Used by clear instrument data option to allow selective clearing based on date/time criteria.
"RTN","LAGEN",142,0)
 ; Call with LWL = ien of load/list in LAH
"RTN","LAGEN",143,0)
 ;          ISQN = ien of sequence
"RTN","LAGEN",144,0)
 N LANOW,LAX
"RTN","LAGEN",145,0)
 ;
"RTN","LAGEN",146,0)
 S LANOW=$$NOW^XLFDT
"RTN","LAGEN",147,0)
 S LAX=$P(^LAH(LWL,1,ISQN,0),"^",10,11)
"RTN","LAGEN",148,0)
 ;
"RTN","LAGEN",149,0)
 ; Created date/time_"^"_update date/time.
"RTN","LAGEN",150,0)
 S LAX=$S($P(LAX,"^",1):$P(LAX,"^",1),1:LANOW)_"^"_LANOW
"RTN","LAGEN",151,0)
 S $P(^LAH(LWL,1,ISQN,0),"^",10,11)=LAX
"RTN","LAGEN",152,0)
 Q
"RTN","LAGEN",153,0)
 ;
"RTN","LAGEN",154,0)
 ;
"RTN","LAGEN",155,0)
UID(LWL,ISQN,UID) ; Set .3 node and "U" xref with accession's UID.
"RTN","LAGEN",156,0)
 ; Used to verify by unique identifier (UID).
"RTN","LAGEN",157,0)
 ; Call with LWL = ien of load/list in LAH
"RTN","LAGEN",158,0)
 ;          ISQN = ien of sequence
"RTN","LAGEN",159,0)
 ;           UID = accession's UID
"RTN","LAGEN",160,0)
 ; Called from above, LRVR1, LRVRW
"RTN","LAGEN",161,0)
 ;
"RTN","LAGEN",162,0)
 N X
"RTN","LAGEN",163,0)
 ;
"RTN","LAGEN",164,0)
 S X=$P($G(^LAH(LWL,1,ISQN,.3)),"^")
"RTN","LAGEN",165,0)
 ; Kill x-ref if existing value different than new value.
"RTN","LAGEN",166,0)
 I X]"",X'=UID K ^LAH(LWL,1,"U",X,ISQN)
"RTN","LAGEN",167,0)
 ;
"RTN","LAGEN",168,0)
 S $P(^LAH(LWL,1,ISQN,.3),"^")=UID
"RTN","LAGEN",169,0)
 S ^LAH(LWL,1,"U",UID,ISQN)=""
"RTN","LAGEN",170,0)
 Q
"RTN","LAGEN",171,0)
 ;
"RTN","LAGEN",172,0)
 ;
"RTN","LAGEN",173,0)
POI(LWL,ISQN,NODE,LAID) ; Set .1 node with patient/order info
"RTN","LAGEN",174,0)
 ; Call with LWL = ien of load/list in LAH
"RTN","LAGEN",175,0)
 ;          ISQN = ien of sequence
"RTN","LAGEN",176,0)
 ;          NODE = node to store data on (PID, OBR)
"RTN","LAGEN",177,0)
 ;          LAID = array containing values
"RTN","LAGEN",178,0)
 ;                 PID - "DFN","DOB","ICN","LRDFN","LRTDFN","PNM","SEX","SSN"
"RTN","LAGEN",179,0)
 ;                 OBR - "FID","ORCDT","ORDP","PON","SID","PEB","PVB"
"RTN","LAGEN",180,0)
 ;
"RTN","LAGEN",181,0)
 ; ^LAH(LWL,1,ISQN,.1,"OBR","FID") = filler specimen id
"RTN","LAGEN",182,0)
 ; ^LAH(LWL,1,ISQN,.1,"OBR","ORCDT") = order date/time (FileMan d/t)
"RTN","LAGEN",183,0)
 ; ^LAH(LWL,1,ISQN,.1,"OBR","ORDP") = ordering provider (DUZ or id^last name, first name, mi [id])
"RTN","LAGEN",184,0)
 ; ^LAH(LWL,1,ISQN,.1,"OBR","PEB") = placer entered by (DUZ or id^last name, first name, mi [id])
"RTN","LAGEN",185,0)
 ; ^LAH(LWL,1,ISQN,.1,"OBR","PON") = placer order number
"RTN","LAGEN",186,0)
 ; ^LAH(LWL,1,ISQN,.1,"OBR","PVB") = placer verified by (DUZ or id^last name, first name, mi [id])
"RTN","LAGEN",187,0)
 ; ^LAH(LWL,1,ISQN,.1,"OBR","SID") = placer specimen id
"RTN","LAGEN",188,0)
 ; ^LAH(LWL,1,ISQN,.1,"PID","DFN") = patient's DFN in file #2
"RTN","LAGEN",189,0)
 ; ^LAH(LWL,1,ISQN,.1,"PID","DOB") = date of birth (FileMan d/t)
"RTN","LAGEN",190,0)
 ; ^LAH(LWL,1,ISQN,.1,"PID","ICN") = patient's ICN
"RTN","LAGEN",191,0)
 ; ^LAH(LWL,1,ISQN,.1,"PID","LRDFN") = patient's LRDFN in file #63
"RTN","LAGEN",192,0)
 ; ^LAH(LWL,1,ISQN,.1,"PID","LRTDFN") = patient's LRTDFN in file #67
"RTN","LAGEN",193,0)
 ; ^LAH(LWL,1,ISQN,.1,"PID","PNM") = patient's name
"RTN","LAGEN",194,0)
 ; ^LAH(LWL,1,ISQN,.1,"PID","SEX") = patient's sex
"RTN","LAGEN",195,0)
 ; ^LAH(LWL,1,ISQN,.1,"PID","SSN") = patient's SSN
"RTN","LAGEN",196,0)
 ;
"RTN","LAGEN",197,0)
 N LAX,LAY,LAZ
"RTN","LAGEN",198,0)
 ;
"RTN","LAGEN",199,0)
 S LAX=""
"RTN","LAGEN",200,0)
 F  S LAX=$O(LAID(LAX)) Q:LAX=""  D
"RTN","LAGEN",201,0)
 . S LAY=LAID(LAX)
"RTN","LAGEN",202,0)
 . I LAY="" Q
"RTN","LAGEN",203,0)
 . S LAZ=$G(^LAH(LWL,1,ISQN,.1,NODE,LAX))
"RTN","LAGEN",204,0)
 . I LAY=LAZ Q
"RTN","LAGEN",205,0)
 . ; Remove old data and cross-references.
"RTN","LAGEN",206,0)
 . I $L(LAZ) D
"RTN","LAGEN",207,0)
 . . K ^LAH(LWL,1,ISQN,.1,NODE,LAX)
"RTN","LAGEN",208,0)
 . . I $P(LAZ,"^")]"" K ^LAH(LWL,1,"A"_LAX,$P(LAZ,"^"),ISQN)
"RTN","LAGEN",209,0)
 . ; Set new values and cross-references.
"RTN","LAGEN",210,0)
 . S ^LAH(LWL,1,ISQN,.1,NODE,LAX)=LAY
"RTN","LAGEN",211,0)
 . I $P(LAY,"^")]"" S ^LAH(LWL,1,"A"_LAX,$P(LAY,"^"),ISQN)=""
"RTN","LAGEN",212,0)
 ;
"RTN","LAGEN",213,0)
 Q
"RTN","LAGEN",214,0)
 ;
"RTN","LAGEN",215,0)
 ;
"RTN","LAGEN",216,0)
LATYP(LWL,ISQN,LAX) ; Set type of interface for this entry
"RTN","LAGEN",217,0)
 ; Call with LWL = ien of load/list in LAH
"RTN","LAGEN",218,0)
 ;          ISQN = ien of sequence
"RTN","LAGEN",219,0)
 ;           LAX = type of interface
"RTN","LAGEN",220,0)
 ; 
"RTN","LAGEN",221,0)
 S $P(^LAH(LWL,1,ISQN,0),"^",12)=LAX
"RTN","LAGEN",222,0)
 Q
"RTN","LAGEN",223,0)
 ;
"RTN","LAGEN",224,0)
 ;
"RTN","LAGEN",225,0)
LAMSGID(LWL,ISQN,LAX) ; Set pointer to file #62.49 for this entry.
"RTN","LAGEN",226,0)
 ; Call with LWL = ien of load/list in LAH
"RTN","LAGEN",227,0)
 ;          ISQN = ien of sequence
"RTN","LAGEN",228,0)
 ;           LAX = ien of entry in file #62.49 that is source of these results
"RTN","LAGEN",229,0)
 ; 
"RTN","LAGEN",230,0)
 S $P(^LAH(LWL,1,ISQN,0),"^",13)=LAX
"RTN","LAGEN",231,0)
 Q
"RTN","LASET")
0^5^B11597716
"RTN","LASET",1,0)
LASET ;SLC/RWF - AUTO INSTRUMENTS SETUP VAR FOR DATA COLECTION ;2/19/91  12:03
"RTN","LASET",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,42,46**;Sep 27, 1994
"RTN","LASET",3,0)
 ;
"RTN","LASET",4,0)
LA1 ;
"RTN","LASET",5,0)
 S:$D(ZTQUEUED) ZTREQ="@" ;Clean up
"RTN","LASET",6,0)
 I $G(TSK)<1 Q
"RTN","LASET",7,0)
 L +^LA("LOCK"):99999
"RTN","LASET",8,0)
 I $D(^LA("LOCK",TSK)) S TSK=0 L -^LA("LOCK") Q
"RTN","LASET",9,0)
 S ^LA("LOCK",TSK)=$J
"RTN","LASET",10,0)
 L -^LA("LOCK")
"RTN","LASET",11,0)
 ;
"RTN","LASET",12,0)
 K ^TMP($J),^TMP("LA",$J) S TRAY=1,CUP=1
"RTN","LASET",13,0)
 S ECHOALL=0,X=^LAB(62.4,TSK,0),U="^",LWL=$P(X,U,4),WL=$P(X,U,11) I 'WL K ^LA("LOCK",TSK) S TSK=0 Q
"RTN","LASET",14,0)
 S METH=$P(X,U,10),LROVER=+$P(X,U,12),LALCT=$P(X,U,5),LAZZ=$P(^LRO(68,WL,0),U,3),LADT=$S(LAZZ="D":DT,LAZZ="M":$E(DT,1,5)_"00",LAZZ="Y":$E(DT,1,3)_"0000")
"RTN","LASET",15,0)
 S LAGEN="S "_$P(X,U,6)_"="_$P(X,U,7)_" D "_$P(X,U,6)_"^LAGEN"
"RTN","LASET",16,0)
 S TP=0,NOW=$$NOW^XLFDT
"RTN","LASET",17,0)
 ;TC(I,0)=TEST NUMBER, TC(I,1)= STORAGE LOCATION, TC(I,2)= 'S V=$E(Y(A),12,15)' PARM1, TC(I,3)= PARM2, TC(I,4)=PARM3 or ^TMP("LA",$J,I,1)=STORAGE
"RTN","LASET",18,0)
 I "T"[LALCT F I=0:0 S I=$O(^LAB(62.4,TSK,3,I)) Q:I<1  S X=^(I,0),TC=I,TC(I,0)=+X,TC(I,1)=^(1),TC(I,2)=$P(X,U,2),TC(I,3)=$P(X,U,3),TC(I,4)=$P(X,U,4)
"RTN","LASET",19,0)
 I LALCT="U" F I=0:0 S I=$O(^LAB(62.4,TSK,3,I)) Q:I<1  S X=^(I,0),Y=^(1),TC=I,^TMP("LA",$J,I,0)=+X,^(1)=Y,^(2)=$P(X,U,2),^(3)=$P(X,U,3),^(4)=$P(X,U,4)
"RTN","LASET",20,0)
 S LRTST="" F I=0:0 S I=$O(TC(I)) Q:$L(LRTST)>245!(I="")  S LRTST=LRTST_TC(I,0)_U
"RTN","LASET",21,0)
 S LRUTLITY=1 D GET^LRNORMAL:$D(LRTOP)
"RTN","LASET",22,0)
LA2 K LRUTLITY,LRTST,LRTOP,%DT Q
"RTN","LASET",23,0)
TRAP S X="TRAP^"_LANM,@^%ZOSF("TRAP")
"RTN","LASET",24,0)
 Q
"RTN","LASET",25,0)
NEW D SET Q:ER  S ZTRTN=U_$P(^LAB(62.4,T,0),U,3),ZTDTH=$H,ZTIO="",ZTDESC=" Starting Automated Routine "_ZTRTN D ^%ZTLOAD:$L(ZTRTN)
"RTN","LASET",26,0)
 Q
"RTN","LASET",27,0)
RESTART I $D(^LA(T,"I",0)) S ZTRTN=$P(^LAB(62.4,T,0),U,3),ZTDTH=$H,ZTIO="",ZTDESC="Restarting Automated Routine "_ZTRTN D ^%ZTLOAD:$L(ZTRTN)
"RTN","LASET",28,0)
 Q
"RTN","LASET",29,0)
SET S ER=$D(^LA(T,"I")) Q:ER  S:'$D(^LA(T,"I"))#2 ^LA(T,"I")=0,^("I",0)=0 Q:$D(^LA(T,"ENV"))  D GETENV^%ZOSV S ^LA(T,"ENV")=Y Q
"RTN","LASET",30,0)
SETO S:'$D(^LA(T,"O"))#2 ^LA(T,"O")=0,^("O",0)=0 Q:$D(^LA(T,"ENV"))  D GETENV^%ZOSV S ^LA(T,"ENV")=Y Q
"RTN","LASET",31,0)
 ;^LA(T,"ENV")=UCI^VOLUME SET^VAX NODE
"RTN","LASET",32,0)
ERROR S ^TMP($J,1)=LANM,^(2)=TSK D ^LABERR S LANM=^TMP($J,1),TSK=^(2),U="^"
"RTN","LASET",33,0)
 Q
"RTN","LASET",34,0)
 ;
"RTN","LASET",35,0)
RMK ;Set up nodes for comments from the instrument
"RTN","LASET",36,0)
 ; This entry point for LSI/direct connect interfaces which are coded to
"RTN","LASET",37,0)
 ; pass multiple remarks delimited by ";".
"RTN","LASET",38,0)
 N LACOM,LAII
"RTN","LASET",39,0)
 F LAII=1:1 S LACOM=$P(RMK,";",LAII) Q:'$L(LACOM)  D RMKSET(LWL,ISQN,LACOM,"")
"RTN","LASET",40,0)
 Q
"RTN","LASET",41,0)
 ;
"RTN","LASET",42,0)
RMKSET(LAWL,LAISQN,LARMK,LARMKP) ; Set remark in LAH global
"RTN","LASET",43,0)
 ; Call with  LAWL = pointer to load/worklist  (entry in LAH)
"RTN","LASET",44,0)
 ;          LAISQN = sequence number of entry in LAH
"RTN","LASET",45,0)
 ;           LARMK = remark(comment to store)
"RTN","LASET",46,0)
 ;          LARMKP = string to precede each remark, i.e. "For test..."
"RTN","LASET",47,0)
 ; Used by above
"RTN","LASET",48,0)
 ; Used by univeral interfaces (LA7*) to set remarks without using ";" as delimiter. Allows ";" in text of remark.
"RTN","LASET",49,0)
 N DIWF,DIWL,DIWR,LAI,X,Y
"RTN","LASET",50,0)
 I '$G(LAWL)!('$G(LAISQN)) Q
"RTN","LASET",51,0)
 S LARMK=$G(LARMK),LARMKP=$G(LARMKP) ; Make sure variables defined
"RTN","LASET",52,0)
 I ($L(LARMK)+$L(LARMKP))'>68 D  Q  ; Comment 68 characters or less
"RTN","LASET",53,0)
 . S LAI=$O(^LAH(LAWL,1,LAISQN,1,""),-1)+1 ; Get next subscript to store comment.
"RTN","LASET",54,0)
 . S ^LAH(LAWL,1,LAISQN,1,LAI)=LARMKP_LARMK ; Store comment
"RTN","LASET",55,0)
 ; Comment greater than 68 characters, need to reformat.
"RTN","LASET",56,0)
 K ^UTILITY($J,"W")
"RTN","LASET",57,0)
 S X=LARMK,DIWL=1,DIWR=68-$L(LARMKP),DIWF="",LAX=0 D ^DIWP ; Call FileMan to reformat.
"RTN","LASET",58,0)
 F  S LAX=$O(^UTILITY($J,"W",DIWL,LAX)) Q:'LAX  D
"RTN","LASET",59,0)
 . S LAI=$O(^LAH(LAWL,1,LAISQN,1,""),-1)+1
"RTN","LASET",60,0)
 . S ^LAH(LAWL,1,LAISQN,1,LAI)=LARMKP_$G(^UTILITY($J,"W",DIWL,LAX,0))
"RTN","LASET",61,0)
 K ^UTILITY($J,"W")
"RTN","LASET",62,0)
 Q
"UP",62.4,62.41,-1)
62.4^3
"UP",62.4,62.41,0)
62.41
"UP",62.8,62.801,-1)
62.8^10
"UP",62.8,62.801,0)
62.801
"UP",62.9,62.9001,-1)
62.9^60
"UP",62.9,62.9001,0)
62.9001
"VER")
8.0^22.0
"^DD",62.4,62.4,18,0)
STORE REMARKS^S^0:NO;1:YES;^0;17^Q
"^DD",62.4,62.4,18,3)
Answer 'Yes" if you want specimen comments to be stored.
"^DD",62.4,62.4,18,21,0)
^^5^5^3010831^^
"^DD",62.4,62.4,18,21,1,0)
This field controls if comments that are associated with an accession
"^DD",62.4,62.4,18,21,2,0)
or specimen are stored with the results. The default is NO.
"^DD",62.4,62.4,18,21,3,0)
 
"^DD",62.4,62.4,18,21,4,0)
There is a similar companion field at the test level which controls
"^DD",62.4,62.4,18,21,5,0)
comments associated with tests results.
"^DD",62.4,62.4,18,"DT")
3010831
"^DD",62.4,62.41,14,0)
ACCEPT RESULTS FOR THIS TEST^S^0:NO;1:YES;2:FINAL ONLY;^2;3^Q
"^DD",62.4,62.41,14,3)
Select if results for this test are accepted.
"^DD",62.4,62.41,14,21,0)
^^40^40^2990330^^^^
"^DD",62.4,62.41,14,21,1,0)
Determines if results (HL7 OBX segments) are processed and stored.
"^DD",62.4,62.41,14,21,2,0)
If nothing is entered, the default will be 'Yes'. 
"^DD",62.4,62.41,14,21,3,0)

"^DD",62.4,62.41,14,21,4,0)
If "YES" is selected then all test results are processed and stored.
"^DD",62.4,62.41,14,21,5,0)
 
"^DD",62.4,62.41,14,21,6,0)
Select "NO" to suppress the processing and storing any test result.
"^DD",62.4,62.41,14,21,7,0)
 
"^DD",62.4,62.41,14,21,8,0)
Selecting "FINAL ONLY" will only process/store test results when the
"^DD",62.4,62.41,14,21,9,0)
result has a status of C,F,U as defined in table 0085 below.
"^DD",62.4,62.41,14,21,10,0)

"^DD",62.4,62.41,14,21,11,0)
If there is MUMPS code in PARAM 1, it will be executed regardless of how
"^DD",62.4,62.41,14,21,12,0)
this field is set.
"^DD",62.4,62.41,14,21,13,0)

"^DD",62.4,62.41,14,21,14,0)
To accept results for this test based on other factors, or in other words - 
"^DD",62.4,62.41,14,21,15,0)
'On the fly', you can set a variable in PARAM 1 as follows:
"^DD",62.4,62.41,14,21,16,0)

"^DD",62.4,62.41,14,21,17,0)
PARAM 1: S:(CONDITION) LA7XFORM(3)=1
"^DD",62.4,62.41,14,21,18,0)

"^DD",62.4,62.41,14,21,19,0)
Where CONDITION is some MUMPS value that equates to true or false.  Consult
"^DD",62.4,62.41,14,21,20,0)
a programmer before trying this.
"^DD",62.4,62.41,14,21,21,0)

"^DD",62.4,62.41,14,21,22,0)
 
"^DD",62.4,62.41,14,21,23,0)
 
"^DD",62.4,62.41,14,21,24,0)
        Table 0085 - Observation result status codes interpretation
"^DD",62.4,62.41,14,21,25,0)
 
"^DD",62.4,62.41,14,21,26,0)
 Value  Description
"^DD",62.4,62.41,14,21,27,0)
 C      Record coming over is a correction and thus replaces a final
"^DD",62.4,62.41,14,21,28,0)
        result
"^DD",62.4,62.41,14,21,29,0)
 D      Deletes the OBX record
"^DD",62.4,62.41,14,21,30,0)
 F      Final results;  Can only be changed with a corrected result.
"^DD",62.4,62.41,14,21,31,0)
 I      Specimen in lab; results pending
"^DD",62.4,62.41,14,21,32,0)
 P      Preliminary results
"^DD",62.4,62.41,14,21,33,0)
 R      Results entered -- not verified
"^DD",62.4,62.41,14,21,34,0)
 S      Partial results
"^DD",62.4,62.41,14,21,35,0)
 X      Results cannot be obtained for this observation
"^DD",62.4,62.41,14,21,36,0)
 U      Results status change to Final.  without retransmitting results
"^DD",62.4,62.41,14,21,37,0)
        already sent as 'preliminary.'  E.g., radiology changes status
"^DD",62.4,62.41,14,21,38,0)
        from preliminary to final
"^DD",62.4,62.41,14,21,39,0)
 W      Post original as wrong, e.g., transmitted for wrong patient
"^DD",62.4,62.41,14,21,40,0)

"^DD",62.4,62.41,14,"DT")
2990329
"^DD",62.4,62.41,18,0)
STORE REMARKS^S^0:NO;1:YES;2:FINAL ONLY;^2;7^Q
"^DD",62.4,62.41,18,3)
Enter "YES" if remarks should be stored.
"^DD",62.4,62.41,18,21,0)
^.001^32^32^3001205^^^^
"^DD",62.4,62.41,18,21,1,0)
Determines if remarks/comments (HL7 NTE segments) are processed and
"^DD",62.4,62.41,18,21,2,0)
stored with results. This applies only to remarks/comments that
"^DD",62.4,62.41,18,21,3,0)
relate to a test.
"^DD",62.4,62.41,18,21,4,0)
 
"^DD",62.4,62.41,18,21,5,0)
Select "NO" to suppress the processing and storing of any
"^DD",62.4,62.41,18,21,6,0)
remarks/comments associated with a test result. 
"^DD",62.4,62.41,18,21,7,0)
 
"^DD",62.4,62.41,18,21,8,0)
If "YES" is selected then all remarks/comments associated with a
"^DD",62.4,62.41,18,21,9,0)
test result are processed and stored.
"^DD",62.4,62.41,18,21,10,0)
 
"^DD",62.4,62.41,18,21,11,0)
The default value is "NO".
"^DD",62.4,62.41,18,21,12,0)
 
"^DD",62.4,62.41,18,21,13,0)
Selecting "FINAL ONLY" will only process and store remarks/comments
"^DD",62.4,62.41,18,21,14,0)
when the associated test result has a status of C,F,U as defined in
"^DD",62.4,62.41,18,21,15,0)
table 0085 below. This only applies to NTE segments that follow OBX
"^DD",62.4,62.41,18,21,16,0)
segments.
"^DD",62.4,62.41,18,21,17,0)
 
"^DD",62.4,62.41,18,21,18,0)
        Table 0085 - Observation result status codes interpretation
"^DD",62.4,62.41,18,21,19,0)
 
"^DD",62.4,62.41,18,21,20,0)
 Value  Description
"^DD",62.4,62.41,18,21,21,0)
 C      Record coming over is a correction and thus replaces a final
"^DD",62.4,62.41,18,21,22,0)
        result
"^DD",62.4,62.41,18,21,23,0)
 D      Deletes the OBX record
"^DD",62.4,62.41,18,21,24,0)
 F      Final results;  Can only be changed with a corrected result.
"^DD",62.4,62.41,18,21,25,0)
 I      Specimen in lab; results pending
"^DD",62.4,62.41,18,21,26,0)
 P      Preliminary results
"^DD",62.4,62.41,18,21,27,0)
 R      Results entered -- not verified
"^DD",62.4,62.41,18,21,28,0)
 S      Partial results
"^DD",62.4,62.41,18,21,29,0)
 X      Results cannot be obtained for this observation
"^DD",62.4,62.41,18,21,30,0)
 U      Results status change to Final.  without retransmitting results
"^DD",62.4,62.41,18,21,31,0)
        already sent as 'preliminary.'  E.g., radiology changes status
"^DD",62.4,62.41,18,21,32,0)
        from preliminary to final
"^DD",62.4,62.41,18,"DT")
3001205
"^DD",62.4,62.41,19,0)
REMARK PREFIX^F^^2;8^K:$L(X)>30!($L(X)<1) X
"^DD",62.4,62.41,19,3)
Answer must be 1-30 characters in length.
"^DD",62.4,62.41,19,21,0)
^^13^13^3010831^^
"^DD",62.4,62.41,19,21,1,0)
Used by the Lab Universal Interface software when processing HL7
"^DD",62.4,62.41,19,21,2,0)
messages that contain NTE (notes) segments which follow OBX (test results)
"^DD",62.4,62.41,19,21,3,0)
segments. These NTE segments apply to the test, not to the specimen.
"^DD",62.4,62.41,19,21,4,0)
 
"^DD",62.4,62.41,19,21,5,0)
This field is used in conjunction with field STORE REMARKS (#18)
"^DD",62.4,62.41,19,21,6,0)
in the CHEM TESTS multiple. If field STORE REMARKS is set to YES
"^DD",62.4,62.41,19,21,7,0)
then the value of this field, if any, will be used as the prefix
"^DD",62.4,62.41,19,21,8,0)
to the remarks when storing the remark in the LAH global.
"^DD",62.4,62.41,19,21,9,0)
 
"^DD",62.4,62.41,19,21,10,0)
Example: If the text "For test POTASSIUM: " is entered in this field
"^DD",62.4,62.41,19,21,11,0)
and a remark is received associated with this test that states
"^DD",62.4,62.41,19,21,12,0)
"Specimen hemolyzed" then the remark which will be stored is
"^DD",62.4,62.41,19,21,13,0)
"For test POTASSIUM: Specimen hemolyzed".
"^DD",62.4,62.41,19,"DT")
3010831
"^DD",62.4,62.41,20,0)
STORE PRODUCER'S ID^S^0:NO;1:YES;^2;9^Q
"^DD",62.4,62.41,20,3)
Store the name and identifier of performing lab
"^DD",62.4,62.41,20,10)
Field OBX-15 Producer's ID in HL7 ORU result message 
"^DD",62.4,62.41,20,21,0)
^^6^6^3010906^^
"^DD",62.4,62.41,20,21,1,0)
Used to determine if a remark(comment) should be created and
"^DD",62.4,62.41,20,21,2,0)
stored with the results which indicates the producer of the
"^DD",62.4,62.41,20,21,3,0)
test result. Used in conjuction with field REMARK PREFIX (#19)
"^DD",62.4,62.41,20,21,4,0)
which if defined will be the prefix added to the producer's
"^DD",62.4,62.41,20,21,5,0)
name/id. This remark is generated from the value, if any, of
"^DD",62.4,62.41,20,21,6,0)
field OBX-15 Producer's ID from the HL7 ORU result message.
"^DD",62.4,62.41,20,"DT")
3010906
"^DD",62.4,62.41,21,0)
STORE REFERENCE RANGE^S^0:NO;1:YES;^2;10^Q
"^DD",62.4,62.41,21,3)
Store the reference range with results
"^DD",62.4,62.41,21,10)
Field OBX-7 References Range in HL7 ORU result message
"^DD",62.4,62.41,21,21,0)
^^7^7^3010907^
"^DD",62.4,62.41,21,21,1,0)
Used to determine if a remark(comment) should be created and
"^DD",62.4,62.41,21,21,2,0)
stored with the results which indicates the reference range
"^DD",62.4,62.41,21,21,3,0)
of the test result. Used in conjuction with field REMARK
"^DD",62.4,62.41,21,21,4,0)
PREFIX (#19) which if defined will be the prefix added to the
"^DD",62.4,62.41,21,21,5,0)
reference range. This remark is generated from the value,
"^DD",62.4,62.41,21,21,6,0)
if any, of field OBX-7 References Range from the HL7 ORU result
"^DD",62.4,62.41,21,21,7,0)
message.
"^DD",62.4,62.41,21,"DT")
3010907
"^DD",62.4,62.41,22,0)
STORE ABNORMAL FLAGS^S^0:NO;1:YES;^2;11^Q
"^DD",62.4,62.41,22,3)
Store abnormal flags with results
"^DD",62.4,62.41,22,10)
Field OBX-8 Abnormal Flags in HL7 ORU result message
"^DD",62.4,62.41,22,21,0)
^^7^7^3010907^
"^DD",62.4,62.41,22,21,1,0)
Used to determine if a remark(comment) should be created and
"^DD",62.4,62.41,22,21,2,0)
stored with the results which indicates any abnormal flags
"^DD",62.4,62.41,22,21,3,0)
associated with the test result. Used in conjuction with
"^DD",62.4,62.41,22,21,4,0)
field REMARK PREFIX (#19) which if defined will be the prefix
"^DD",62.4,62.41,22,21,5,0)
added to the abnormal flags. This remark is generated from the
"^DD",62.4,62.41,22,21,6,0)
value, if any, of field OBX-8 Abnormal Flags from the HL7 ORU
"^DD",62.4,62.41,22,21,7,0)
result message. 
"^DD",62.4,62.41,22,"DT")
3010907
"^DD",62.48,62.48,10,0)
MULTIPLE ORDERS^S^0:MULTIPLE PATIENTS;1:SINGLE PATIENT;2:SINGLE ORDER;^0;8^Q
"^DD",62.48,62.48,10,3)
Select if multiple/single patients/orders should be sent in a single message. See description (??) for additional help.
"^DD",62.48,62.48,10,21,0)
^^25^25^3010831^^^^
"^DD",62.48,62.48,10,21,1,0)
Determines when building a HL7 message if message should contain only
"^DD",62.48,62.48,10,21,2,0)
one patient/order or multiple patients/orders.
"^DD",62.48,62.48,10,21,3,0)
 
"^DD",62.48,62.48,10,21,4,0)
Default is multiple patients per message if possible.
"^DD",62.48,62.48,10,21,5,0)
 
"^DD",62.48,62.48,10,21,6,0)
This allows site to configure message building when communicating with
"^DD",62.48,62.48,10,21,7,0)
a non-VA system that can not handle a message that has more than one
"^DD",62.48,62.48,10,21,8,0)
patient in the message. It applies to both order (ORM) and result (ORU)
"^DD",62.48,62.48,10,21,9,0)
messages.
"^DD",62.48,62.48,10,21,10,0)
 
"^DD",62.48,62.48,10,21,11,0)
When communicating with a VA facility this field can be left blank
"^DD",62.48,62.48,10,21,12,0)
(default) or set to 0 - MULTIPLE PATIENTS
"^DD",62.48,62.48,10,21,13,0)

"^DD",62.48,62.48,10,21,14,0)
If the receiving system can only accept one patient per HL7 message
"^DD",62.48,62.48,10,21,15,0)
then select 1 - SINGLE PATIENT. This will place multiple orders or
"^DD",62.48,62.48,10,21,16,0)
results for multiple orders in one message but only one patient will
"^DD",62.48,62.48,10,21,17,0)
be contained in the message.
"^DD",62.48,62.48,10,21,18,0)

"^DD",62.48,62.48,10,21,19,0)
If the receiving system can only accept one order per HL7 message then
"^DD",62.48,62.48,10,21,20,0)
select 2 - SINGLE ORDER. This will place in the message one order or
"^DD",62.48,62.48,10,21,21,0)
the results associated with one order for a single patient
"^DD",62.48,62.48,10,21,22,0)
 
"^DD",62.48,62.48,10,21,23,0)
Note: An order in the VA is considered those tests found on one
"^DD",62.48,62.48,10,21,24,0)
accession. What the VA considers as an accession other non-VA systems
"^DD",62.48,62.48,10,21,25,0)
may refer to as an order.
"^DD",62.48,62.48,10,"DT")
3010831
"^DD",62.48,62.48,11,0)
INTERFACE TYPE^S^1:LAB UI;10:LEDI;20:POC;99:OTHER;^0;9^Q
"^DD",62.48,62.48,11,3)
Enter the purpose for this messaging interface.
"^DD",62.48,62.48,11,21,0)
^.001^2^2^3011221^^
"^DD",62.48,62.48,11,21,1,0)
This field determines how and for what purpose this configuration
"^DD",62.48,62.48,11,21,2,0)
is used. It allows the laboratory software to handle and process messages.
"^DD",62.48,62.48,11,"DT")
3010608
"^DD",62.485,62.485,0)
FIELD^^2^4
"^DD",62.485,62.485,0,"DDA")
N
"^DD",62.485,62.485,0,"DT")
2970205
"^DD",62.485,62.485,0,"IX","B",62.485,.01)

"^DD",62.485,62.485,0,"NM","LA7 MESSAGE LOG BULLETINS")

"^DD",62.485,62.485,0,"VRPK")
LA
"^DD",62.485,62.485,.01,0)
CODE^RNJ7,0X^^0;1^K:+X'=X!(X>9999999)!(X<$S($D(DIFROM):1,1:1000))!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",62.485,62.485,.01,1,0)
^.1
"^DD",62.485,62.485,.01,1,1,0)
62.485^B
"^DD",62.485,62.485,.01,1,1,1)
S ^LAHM(62.485,"B",$E(X,1,30),DA)=""
"^DD",62.485,62.485,.01,1,1,2)
K ^LAHM(62.485,"B",$E(X,1,30),DA)
"^DD",62.485,62.485,.01,3)
Type a Number between 1000 and 9999999, 0 Decimal Digits.
"^DD",62.485,62.485,.01,21,0)
^^3^3^2970612^^
"^DD",62.485,62.485,.01,21,1,0)
This field contains a number between 1 and 9999999 that uniquely
"^DD",62.485,62.485,.01,21,2,0)
identifies an error or exceptional condition.  Numbers below 999 are
"^DD",62.485,62.485,.01,21,3,0)
reserved for package use only.
"^DD",62.485,62.485,.01,"DT")
2950122
"^DD",62.485,62.485,1,0)
TEXT^RF^^0;2^K:$L(X)>160!($L(X)<1) X
"^DD",62.485,62.485,1,3)
Answer must be 1-160 characters in length.
"^DD",62.485,62.485,1,21,0)
^^3^3^2970612^
"^DD",62.485,62.485,1,21,1,0)
This field holds the text description of the error or exceptional
"^DD",62.485,62.485,1,21,2,0)
condition.  This field is used to create an error or exceptional condition
"^DD",62.485,62.485,1,21,3,0)
display in the ^XTMP global.
"^DD",62.485,62.485,1,23,0)
^^9^9^2970612^
"^DD",62.485,62.485,1,23,1,0)
This field is used to create error or exceptional condition displays in
"^DD",62.485,62.485,1,23,2,0)
the ^XTMP global.  The text description should contain useful information
"^DD",62.485,62.485,1,23,3,0)
about the message in the LA7 MESSAGE QUEUE file (#62.49).  The information
"^DD",62.485,62.485,1,23,4,0)
can be added to the text by using the "|" character and the LA7TXT()
"^DD",62.485,62.485,1,23,5,0)
array.
"^DD",62.485,62.485,1,23,6,0)
 
"^DD",62.485,62.485,1,23,7,0)
Example Text: Message # |1| did not contain a PID segment.
"^DD",62.485,62.485,1,23,8,0)
Array value: LA7TXT(1)=123
"^DD",62.485,62.485,1,23,9,0)
^XTMP: Message # 123 did not contain a PID segment.
"^DD",62.485,62.485,1,"DT")
2940427
"^DD",62.485,62.485,1.3,0)
SEND ALERT^S^0:NO;1:YES;^0;3^Q
"^DD",62.485,62.485,1.3,3)
Determines if alert is sent when a message is processed with this error. Alerts must also be turned on and mail group designated in file #62.48.
"^DD",62.485,62.485,1.3,21,0)
^^4^4^2970612^
"^DD",62.485,62.485,1.3,21,1,0)
This field is used to flag those errors which can generate an alert to a
"^DD",62.485,62.485,1.3,21,2,0)
site selectable mail group whenever this error occurs. The site needs to
"^DD",62.485,62.485,1.3,21,3,0)
designate a mail group in the LA7 MESSAGE PARAMETER file (#62.48) under
"^DD",62.485,62.485,1.3,21,4,0)
the ALERT CONDITION field (#20).
"^DD",62.485,62.485,1.3,"DT")
2970205
"^DD",62.485,62.485,2,0)
BUILD LOGIC^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",62.485,62.485,2,3)
This is Standard MUMPS code.
"^DD",62.485,62.485,2,9)
@
"^DD",62.485,62.485,2,21,0)
^^8^8^2970612^
"^DD",62.485,62.485,2,21,1,0)
This is standard MUMPS code that is executed to log the text
"^DD",62.485,62.485,2,21,2,0)
description error into the ^XTMP global.  The MUMPS code should set the
"^DD",62.485,62.485,2,21,3,0)
LA7TXT() array to feel in the fields in the text description.
"^DD",62.485,62.485,2,21,4,0)
 
"^DD",62.485,62.485,2,21,5,0)
 Example MUMPS code: S LA7TXT(1)=LA76249
"^DD",62.485,62.485,2,21,6,0)
 Variable value: LA76249=123
"^DD",62.485,62.485,2,21,7,0)
 Text description: Message # |1| did not contain a PID segment.
"^DD",62.485,62.485,2,21,8,0)
 ^XTMP: Message # 123 did not contain a PID segment.
"^DD",62.485,62.485,2,"DT")
2940427
"^DD",62.49,62.49,2,0)
STATUS^S^B:BUILDING;Q:QUEUED FOR ACTION;E:ERROR;X:PURGEABLE;P:PROCESS;A:AWAITING ACK;^0;3^Q
"^DD",62.49,62.49,2,1,0)
^.1
"^DD",62.49,62.49,2,1,1,0)
62.49^Q^MUMPS
"^DD",62.49,62.49,2,1,1,1)
I $P($G(^LAHM(62.49,DA,.5)),"^"),$L($P($G(^LAHM(62.49,DA,0)),"^",2)) S ^LAHM(62.49,"Q",$P(^LAHM(62.49,DA,.5),"^"),$P(^LAHM(62.49,DA,0),"^",2)_X,DA)=""
"^DD",62.49,62.49,2,1,1,2)
I $P($G(^LAHM(62.49,DA,.5)),"^"),$L($P($G(^LAHM(62.49,DA,0)),"^",2)) K ^LAHM(62.49,"Q",$P(^LAHM(62.49,DA,.5),"^"),$P(^LAHM(62.49,DA,0),"^",2)_X,DA)
"^DD",62.49,62.49,2,1,1,3)
DO NOT DELETE
"^DD",62.49,62.49,2,1,1,"%D",0)
^^8^8^2970612^
"^DD",62.49,62.49,2,1,1,"%D",1,0)
The "Q" cross reference is used by the Universal Interface routines.
"^DD",62.49,62.49,2,1,1,"%D",2,0)
 
"^DD",62.49,62.49,2,1,1,"%D",3,0)
The format is as follows
"^DD",62.49,62.49,2,1,1,"%D",4,0)
 
"^DD",62.49,62.49,2,1,1,"%D",5,0)
  ^LAHM(62.49,"Q",CONFIGURATION,TYPE_STATUS,DA)=""
"^DD",62.49,62.49,2,1,1,"%D",6,0)
 
"^DD",62.49,62.49,2,1,1,"%D",7,0)
This way every configuration (in File 62.48) can have it's own incoming
"^DD",62.49,62.49,2,1,1,"%D",8,0)
and outgoing queue.
"^DD",62.49,62.49,2,1,1,"DT")
2970307
"^DD",62.49,62.49,2,1,2,0)
62.49^ORU^MUMPS
"^DD",62.49,62.49,2,1,2,1)
N LRX S LRX(.5)=$G(^LAHM(62.49,DA,.5)),LRX(100)=$G(^LAHM(62.49,DA,100)) I X="P",$P(LRX(.5),U) S ^LAHM(62.49,$S($P(LRX(100),U,9)="":"ORU",1:$P(LRX(100),U,9)),"P",$P(LRX(.5),U),DA)=""
"^DD",62.49,62.49,2,1,2,2)
N LRX S LRX(.5)=$G(^LAHM(62.49,DA,.5)),LRX(100)=$G(^LAHM(62.49,DA,100)) K ^LAHM(62.49,$S($P(LRX(100),U,9)="":"ORU",1:$P(LRX(100),U,9)),"P",+$P(LRX(.5),U),DA)
"^DD",62.49,62.49,2,1,2,"%D",0)
^^5^5^2981207^^^^
"^DD",62.49,62.49,2,1,2,"%D",1,0)
The format is as follows
"^DD",62.49,62.49,2,1,2,"%D",2,0)
^LAHM(62.49,MESSAGE TYPE,"P",CONFIGURATION,DA)=""
"^DD",62.49,62.49,2,1,2,"%D",3,0)
 
"^DD",62.49,62.49,2,1,2,"%D",4,0)
This cross reference is used to process outgoing ORU (Observation Results
"^DD",62.49,62.49,2,1,2,"%D",5,0)
Unsolicited) and ORR (Order Response) messages.
"^DD",62.49,62.49,2,1,2,"DT")
2981207
"^DD",62.49,62.49,2,21,0)
^^2^2^2970613^^
"^DD",62.49,62.49,2,21,1,0)
This field contains the current status of the message.  The status is used
"^DD",62.49,62.49,2,21,2,0)
for queuing, processing, and purging of messages.
"^DD",62.49,62.49,2,"DT")
2981207
"^DD",62.8,62.8,.05,0)
TEST CODING SYSTEM^S^0:NLT;1:NON-VA;2:LOINC;^0;5^Q
"^DD",62.8,62.8,.05,3)
Answer with type of coding system to use for this configuration.
"^DD",62.8,62.8,.05,21,0)
^^13^13^2990224^^^
"^DD",62.8,62.8,.05,21,1,0)
If orders are being sent to a non-VA facility and the facility can not
"^DD",62.8,62.8,.05,21,2,0)
accept VA test order codes then answer with the type of coding system.
"^DD",62.8,62.8,.05,21,3,0)
"NON-VA" indicates that the other system is using a local coding system.
"^DD",62.8,62.8,.05,21,4,0)
The laboratory shipping software will then use the non-VA test codes
"^DD",62.8,62.8,.05,21,5,0)
entered for each test on this configuration.
"^DD",62.8,62.8,.05,21,6,0)
 
"^DD",62.8,62.8,.05,21,7,0)
If the non-VA facility can accept VA test codes then answer "NLT" and the
"^DD",62.8,62.8,.05,21,8,0)
software will sent VA test order codes.
"^DD",62.8,62.8,.05,21,9,0)
 
"^DD",62.8,62.8,.05,21,10,0)
VA test order codes are usually NLT codes but in the future will probably
"^DD",62.8,62.8,.05,21,11,0)
be LOINC codes. Selecting "LOINC" is currently not supported. Support will
"^DD",62.8,62.8,.05,21,12,0)
be added in a future version of the LEDI software when LOINC coding has
"^DD",62.8,62.8,.05,21,13,0)
been implemented within VA facilities.
"^DD",62.8,62.8,.05,"DT")
2990224
"^DD",62.8,62.801,1.1,0)
REQUIRE PATIENT HEIGHT^S^0:NO;1:YES;^1;1^Q
"^DD",62.8,62.801,1.1,10)

"^DD",62.8,62.801,1.1,21,0)
^.001^5^5^3010910^^^^
"^DD",62.8,62.801,1.1,21,1,0)
Determines if the patient's height is required to be sent
"^DD",62.8,62.801,1.1,21,2,0)
in the HL7 ORM order message and printed on the shipping
"^DD",62.8,62.801,1.1,21,3,0)
manifest.  Actual shipping and/or electronic transmission
"^DD",62.8,62.801,1.1,21,4,0)
of a shipping manifest will check for entry of the patient's
"^DD",62.8,62.801,1.1,21,5,0)
height and prevent release if absent.
"^DD",62.8,62.801,1.1,"DT")
3010910
"^DD",62.8,62.801,1.11,0)
PATIENT HEIGHT^NJ7,2^^1;2^K:+X'=X!(X>1000)!(X<0)!(X?.E1"."3N.N) X
"^DD",62.8,62.801,1.11,3)
Type a Number between 0 and 1000, 2 Decimal Digits
"^DD",62.8,62.801,1.11,10)
Patient's medical record
"^DD",62.8,62.801,1.11,21,0)
^^4^4^3010910^^
"^DD",62.8,62.801,1.11,21,1,0)
Stores the patient's height for transmission in the HL7
"^DD",62.8,62.801,1.11,21,2,0)
ORM order message and display on the shipping manifest
"^DD",62.8,62.801,1.11,21,3,0)
when required to accompany test orders and specimens.
"^DD",62.8,62.801,1.11,21,4,0)
See field REQUIRE PATIENT HEIGHT #1.1.
"^DD",62.8,62.801,1.11,"DT")
3010910
"^DD",62.8,62.801,1.13,0)
PATIENT HEIGHT UNITS^*P64.061'^LAB(64.061,^1;3^S DIC("S")="I $P(^(0),U,7)=""M""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",62.8,62.801,1.13,12)
Only codes that are measurements are selectable.
"^DD",62.8,62.801,1.13,12.1)
S DIC("S")="I $P(^(0),U,7)=""M"""
"^DD",62.8,62.801,1.13,21,0)
^.001^3^3^3010910^^^
"^DD",62.8,62.801,1.13,21,1,0)
Units used to measure the patient's height. Select an
"^DD",62.8,62.801,1.13,21,2,0)
entry from the LAB ELECTRONIC CODE file (#64.061) that
"^DD",62.8,62.801,1.13,21,3,0)
are measurements.
"^DD",62.8,62.801,1.13,"DT")
3010907
"^DD",62.8,62.801,1.14,0)
PATIENT HEIGHT CODE^P95.3'^LAB(95.3,^1;7^Q
"^DD",62.8,62.801,1.14,3)
Enter the appropriate LOINC code to identify the patient's height
"^DD",62.8,62.801,1.14,21,0)
^^2^2^3010907^
"^DD",62.8,62.801,1.14,21,1,0)
Select the appropriate LOINC code to identify the
"^DD",62.8,62.801,1.14,21,2,0)
patient's height.
"^DD",62.8,62.801,1.14,"DT")
3011102
"^DD",62.8,62.801,1.2,0)
REQUIRE PATIENT WEIGHT^S^0:NO;1:YES;^1;4^Q
"^DD",62.8,62.801,1.2,21,0)
^^5^5^3010910^
"^DD",62.8,62.801,1.2,21,1,0)
Determines if the patient's weight is required to be sent
"^DD",62.8,62.801,1.2,21,2,0)
in the HL7 ORM order message and printed on the shipping
"^DD",62.8,62.801,1.2,21,3,0)
manifest.  Actual shipping and/or electronic transmission
"^DD",62.8,62.801,1.2,21,4,0)
of a shipping manifest will check for entry of the patient's
"^DD",62.8,62.801,1.2,21,5,0)
weight and prevent release if absent. 
"^DD",62.8,62.801,1.2,"DT")
3010910
"^DD",62.8,62.801,1.21,0)
PATIENT WEIGHT^NJ4,0^^1;5^K:+X'=X!(X>1000)!(X<0)!(X?.E1"."1N.N) X
"^DD",62.8,62.801,1.21,3)
Type a Number between 0 and 1000, 0 Decimal Digits
"^DD",62.8,62.801,1.21,10)
Patient's medical record
"^DD",62.8,62.801,1.21,21,0)
^^4^4^3010910^
"^DD",62.8,62.801,1.21,21,1,0)
Stores the patient's weight for transmission in the HL7
"^DD",62.8,62.801,1.21,21,2,0)
ORM order message and display on the shipping manifest
"^DD",62.8,62.801,1.21,21,3,0)
when required to accompany test orders and specimens.
"^DD",62.8,62.801,1.21,21,4,0)
See field REQUIRE PATIENT WEIGHT #1.2. 
"^DD",62.8,62.801,1.21,"DT")
3010910
"^DD",62.8,62.801,1.23,0)
PATIENT WEIGHT UNITS^*P64.061'^LAB(64.061,^1;6^S DIC("S")="I $P(^(0),U,7)=""M""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",62.8,62.801,1.23,12)
Only codes that are measurements are selectable.
"^DD",62.8,62.801,1.23,12.1)
S DIC("S")="I $P(^(0),U,7)=""M"""
"^DD",62.8,62.801,1.23,21,0)
^^3^3^3010910^
"^DD",62.8,62.801,1.23,21,1,0)
Units used to measure the patient's weight. Select an
"^DD",62.8,62.801,1.23,21,2,0)
entry from the LAB ELECTRONIC CODE file (#64.061) that
"^DD",62.8,62.801,1.23,21,3,0)
are measurements. 
"^DD",62.8,62.801,1.23,"DT")
3010910
"^DD",62.8,62.801,1.24,0)
PATIENT WEIGHT CODE^P95.3'^LAB(95.3,^1;8^Q
"^DD",62.8,62.801,1.24,3)
Enter the appropriate LOINC code to identify this patient's weight.
"^DD",62.8,62.801,1.24,21,0)
^^1^1^3010910^
"^DD",62.8,62.801,1.24,21,1,0)
Select the appropriate LOINC code to identify the patient's weight.
"^DD",62.8,62.801,1.24,"DT")
3011102
"^DD",62.8,62.801,2.1,0)
REQUIRE COLLECTION VOLUME^S^0:NO;1:YES;^2;1^Q
"^DD",62.8,62.801,2.1,3)

"^DD",62.8,62.801,2.1,21,0)
^.001^5^5^3010910^^
"^DD",62.8,62.801,2.1,21,1,0)
Determines if the specimen's collection volume is required
"^DD",62.8,62.801,2.1,21,2,0)
to be sent in the HL7 ORM order message and printed on the
"^DD",62.8,62.801,2.1,21,3,0)
shipping manifest.  Actual shipping and/or electronic
"^DD",62.8,62.801,2.1,21,4,0)
transmission of a shipping manifest will check for entry of
"^DD",62.8,62.801,2.1,21,5,0)
the specimen's collection volume and prevent release if absent.
"^DD",62.8,62.801,2.1,"DT")
3010910
"^DD",62.8,62.801,2.11,0)
COLLECTION VOLUME^NJ12,5^^2;2^K:+X'=X!(X>100000)!(X<0)!(X?.E1"."6N.N) X
"^DD",62.8,62.801,2.11,3)
Type a Number between 0 and 100000, 5 Decimal Digits
"^DD",62.8,62.801,2.11,21,0)
^.001^4^4^3010910^^
"^DD",62.8,62.801,2.11,21,1,0)
Stores the specimen's collection volume for transmission
"^DD",62.8,62.801,2.11,21,2,0)
in the HL7 ORM order message and printing on the shipping
"^DD",62.8,62.801,2.11,21,3,0)
manifest when required to accompany test orders and
"^DD",62.8,62.801,2.11,21,4,0)
specimens. See field REQUIRE COLLECTION VOLUME #2.1. 
"^DD",62.8,62.801,2.11,"DT")
2980520
"^DD",62.8,62.801,2.13,0)
COLLECTION VOLUME UNITS^*P64.061'^LAB(64.061,^2;3^S DIC("S")="N LA7X S LA7X=$G(^LAB(64.061,Y,0)) I $P(LA7X,U,7)=""M""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",62.8,62.801,2.13,12)
Only codes of type=measurement are selectable.
"^DD",62.8,62.801,2.13,12.1)
S DIC("S")="N LA7X S LA7X=$G(^LAB(64.061,Y,0)) I $P(LA7X,U,7)=""M"""
"^DD",62.8,62.801,2.13,21,0)
^^3^3^3010910^
"^DD",62.8,62.801,2.13,21,1,0)
Units used to measure the specimen's collection volume.
"^DD",62.8,62.801,2.13,21,2,0)
Select an entry from the LAB ELECTRONIC CODE file 
"^DD",62.8,62.801,2.13,21,3,0)
#64.061) that is a measurement. 
"^DD",62.8,62.801,2.13,"DT")
2980520
"^DD",62.8,62.801,2.14,0)
COLLECTION VOLUME CODE^P95.3'^LAB(95.3,^2;11^Q
"^DD",62.8,62.801,2.14,3)
Enter the appropriate LOINC code for collection volume.
"^DD",62.8,62.801,2.14,21,0)
^^2^2^3010910^
"^DD",62.8,62.801,2.14,21,1,0)
Enter the appropriate LOINC code to identify the
"^DD",62.8,62.801,2.14,21,2,0)
specimen's collection volume.
"^DD",62.8,62.801,2.14,"DT")
3011102
"^DD",62.8,62.801,2.2,0)
REQUIRE COLLECTION END D/T^S^1:YES;^2;4^Q
"^DD",62.8,62.801,2.2,3)

"^DD",62.8,62.801,2.2,21,0)
^^6^6^3010910^
"^DD",62.8,62.801,2.2,21,1,0)
Determines if the specimen's collection end date/time
"^DD",62.8,62.801,2.2,21,2,0)
is required to be sent in the HL7 ORM order message
"^DD",62.8,62.801,2.2,21,3,0)
and printed on the shipping manifest.  Actual shipping
"^DD",62.8,62.801,2.2,21,4,0)
and/or electronic transmission of a shipping manifest
"^DD",62.8,62.801,2.2,21,5,0)
will check for entry of the specimen's collection end
"^DD",62.8,62.801,2.2,21,6,0)
date/time and prevent release if absent. 
"^DD",62.8,62.801,2.2,"DT")
2980520
"^DD",62.8,62.801,2.21,0)
COLLECTION END DATE/TIME^D^^2;5^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",62.8,62.801,2.21,21,0)
^^5^5^3010910^
"^DD",62.8,62.801,2.21,21,1,0)
Stores the specimen's collection end date/time for
"^DD",62.8,62.801,2.21,21,2,0)
transmission in the HL7 ORM order message and on the
"^DD",62.8,62.801,2.21,21,3,0)
shipping manifest when required to accompany test
"^DD",62.8,62.801,2.21,21,4,0)
orders and specimens.
"^DD",62.8,62.801,2.21,21,5,0)
See field REQUIRE COLLECTION END D/T #2.2.
"^DD",62.8,62.801,2.21,"DT")
2980527
"^DD",62.8,62.801,2.22,0)
COLLECTION DURATION^NJ6,0^^2;6^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",62.8,62.801,2.22,3)
Type a Number between 0 and 999999, 0 Decimal Digits
"^DD",62.8,62.801,2.22,21,0)
^.001^4^4^3010910^^
"^DD",62.8,62.801,2.22,21,1,0)
Stores the calculated duration of the specimen collection.
"^DD",62.8,62.801,2.22,21,2,0)
Based on specimen's collection date/time and end date/time.
"^DD",62.8,62.801,2.22,21,3,0)
Reported in the units specified in field COLLECTION
"^DD",62.8,62.801,2.22,21,4,0)
DURATION UNITS (#2.23)
"^DD",62.8,62.801,2.22,"DT")
2980519
"^DD",62.8,62.801,2.23,0)
COLLECTION DURATION UNITS^*P64.061'^LAB(64.061,^2;7^S DIC("S")="N LA7X S LA7X=$G(^LAB(64.061,Y,0)) I $P(LA7X,U)?.(1""s"",1""min"",1""hr""),$P(LA7X,U,7)=""M""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",62.8,62.801,2.23,3)

"^DD",62.8,62.801,2.23,12)
Only codes that are measurements and relate to time (seconds, minutes, hours) are selectable.
"^DD",62.8,62.801,2.23,12.1)
S DIC("S")="N LA7X S LA7X=$G(^LAB(64.061,Y,0)) I $P(LA7X,U)?.(1""s"",1""min"",1""hr""),$P(LA7X,U,7)=""M"""
"^DD",62.8,62.801,2.23,21,0)
^^3^3^3010910^
"^DD",62.8,62.801,2.23,21,1,0)
Units used to calculate the specimen's collection duration.
"^DD",62.8,62.801,2.23,21,2,0)
Select an entry from the LAB ELECTRONIC CODE file (#64.061) that
"^DD",62.8,62.801,2.23,21,3,0)
is a measurement and relate to time.
"^DD",62.8,62.801,2.23,"DT")
3010831
"^DD",62.8,62.801,2.24,0)
COLLECTION DURATION CODE^*P95.3'^LAB(95.3,^2;12^S DIC("S")="I $$GET1^DIQ(95.3,Y_"","",1)=""COLLECTION DURATION""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",62.8,62.801,2.24,3)
Enter the appropriate LOINC code to identify this specimen's collection duration.
"^DD",62.8,62.801,2.24,12)
Only allow selection of LOINC codes with "COLLECTION DURATION" component.
"^DD",62.8,62.801,2.24,12.1)
S DIC("S")="I $$GET1^DIQ(95.3,Y_"","",1)=""COLLECTION DURATION"""
"^DD",62.8,62.801,2.24,21,0)
^^2^2^3010910^
"^DD",62.8,62.801,2.24,21,1,0)
Enter the appropriate LOINC code to identify the
"^DD",62.8,62.801,2.24,21,2,0)
specimen's collection duration. 
"^DD",62.8,62.801,2.24,"DT")
3011102
"^DD",62.8,62.801,2.3,0)
REQUIRE COLLECTION WEIGHT^S^0:NO;1:YES;^2;8^Q
"^DD",62.8,62.801,2.3,21,0)
^^5^5^3010910^
"^DD",62.8,62.801,2.3,21,1,0)
Determines if the specimen's collection weight is required
"^DD",62.8,62.801,2.3,21,2,0)
to be sent in the HL7 ORM order message and printed on the
"^DD",62.8,62.801,2.3,21,3,0)
shipping manifest.  Actual shipping and/or electronic
"^DD",62.8,62.801,2.3,21,4,0)
transmission of a shipping manifest will check for entry of
"^DD",62.8,62.801,2.3,21,5,0)
the specimen's collection weight and prevent release if absent. 
"^DD",62.8,62.801,2.3,"DT")
2981110
"^DD",62.8,62.801,2.31,0)
COLLECTION WEIGHT^NJ12,5^^2;9^K:+X'=X!(X>100000)!(X<0)!(X?.E1"."6N.N) X
"^DD",62.8,62.801,2.31,3)
Type a Number between 0 and 100000, 5 Decimal Digits
"^DD",62.8,62.801,2.31,21,0)
^.001^5^5^3010910^^
"^DD",62.8,62.801,2.31,21,1,0)
Stores the specimen's collection weight for
"^DD",62.8,62.801,2.31,21,2,0)
transmission in the HL7 ORM order message and on the
"^DD",62.8,62.801,2.31,21,3,0)
shipping manifest when required to accompany test
"^DD",62.8,62.801,2.31,21,4,0)
orders and specimens. 
"^DD",62.8,62.801,2.31,21,5,0)
See field REQUIRE COLLECTION WEIGHT (#2.3).
"^DD",62.8,62.801,2.31,"DT")
2981110
"^DD",62.8,62.801,2.33,0)
COLLECTION WEIGHT UNITS^*P64.061'^LAB(64.061,^2;10^S DIC("S")="I $P(^(0),U,7)=""M""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",62.8,62.801,2.33,12)
Only codes that are measurements are selectable.
"^DD",62.8,62.801,2.33,12.1)
S DIC("S")="I $P(^(0),U,7)=""M"""
"^DD",62.8,62.801,2.33,21,0)
^.001^3^3^3010910^^^
"^DD",62.8,62.801,2.33,21,1,0)
Units used to measure the specimen's collection weight.
"^DD",62.8,62.801,2.33,21,2,0)
Select an entry from the LAB ELECTRONIC CODE file
"^DD",62.8,62.801,2.33,21,3,0)
#64.061) that is a measurement. 
"^DD",62.8,62.801,2.33,"DT")
2981110
"^DD",62.8,62.801,2.34,0)
COLLECTION WEIGHT CODE^P95.3'^LAB(95.3,^2;13^Q
"^DD",62.8,62.801,2.34,3)
Enter the appropriate LOINC code for collection weight
"^DD",62.8,62.801,2.34,21,0)
^^2^2^3010910^
"^DD",62.8,62.801,2.34,21,1,0)
Enter the appropriate LOINC code to identify the
"^DD",62.8,62.801,2.34,21,2,0)
specimen's collection weight. 
"^DD",62.8,62.801,2.34,"DT")
3011102
"^DD",62.9,62.9,.09,0)
BARCODE MANIFEST^S^0:NO;1:YES;2:YES-COMPACT;^0;9^Q
"^DD",62.9,62.9,.09,3)
Should site/patient/specimen information be barcoded on shipping manifest.
"^DD",62.9,62.9,.09,21,0)
^.001^9^9^3010307^^^^
"^DD",62.9,62.9,.09,21,1,0)
This field determines if site/patient/specimen information is barcoded
"^DD",62.9,62.9,.09,21,2,0)
on the shipping manifest when it has a status of "shipped".
"^DD",62.9,62.9,.09,21,3,0)
 
"^DD",62.9,62.9,.09,21,4,0)
There are two styles of bar codes. The regular style (code="YES"), which
"^DD",62.9,62.9,.09,21,5,0)
was released with the original version of Laboratory Electronic Data
"^DD",62.9,62.9,.09,21,6,0)
Interchange (LEDI), produces a long bar code. If the receiving site,
"^DD",62.9,62.9,.09,21,7,0)
which is reading these type of bar codes, has problems then switch to
"^DD",62.9,62.9,.09,21,8,0)
the compact style (code="YES-COMPACT"). This will produce a shorter bar
"^DD",62.9,62.9,.09,21,9,0)
code.
"^DD",62.9,62.9,.09,"DT")
3010307
"^DD",62.9,62.9,.14,0)
TEST CODING SYSTEM^S^0:NLT;1:NON-VA;2:LOINC;^0;15^Q
"^DD",62.9,62.9,.14,3)
Answer with type of coding system to use for this configuration.
"^DD",62.9,62.9,.14,21,0)
^.001^14^14^3011116^^^^
"^DD",62.9,62.9,.14,21,1,0)
If orders are being sent to a non-VA facility and the facility
"^DD",62.9,62.9,.14,21,2,0)
can not accept VA test order codes then answer with the type of
"^DD",62.9,62.9,.14,21,3,0)
coding system. "NON-VA" indicates that the other system is using
"^DD",62.9,62.9,.14,21,4,0)
a local coding system. The laboratory shipping software will then
"^DD",62.9,62.9,.14,21,5,0)
use the non-VA test codes entered for each test on this
"^DD",62.9,62.9,.14,21,6,0)
configuration.
"^DD",62.9,62.9,.14,21,7,0)
 
"^DD",62.9,62.9,.14,21,8,0)
If the non-VA facility can accept VA test codes then answer "NLT"
"^DD",62.9,62.9,.14,21,9,0)
and the software will sent VA test order codes.
"^DD",62.9,62.9,.14,21,10,0)
 
"^DD",62.9,62.9,.14,21,11,0)
VA test order codes are usually NLT codes but in the future may
"^DD",62.9,62.9,.14,21,12,0)
be LOINC codes. Selecting "LOINC" is currently not supported.
"^DD",62.9,62.9,.14,21,13,0)
Support will be added in a future version of the LEDI software
"^DD",62.9,62.9,.14,21,14,0)
when LOINC coding has been implemented within VA facilities.
"^DD",62.9,62.9,.14,"DT")
2990224
"^DD",62.9,62.9,.15,0)
SPECIMEN CODING SYSTEM^S^0:HL7 TABLE 0070;1:LOCAL-NON HL7;^0;16^Q
"^DD",62.9,62.9,.15,3)
Answer with type of coding system to use for this configuration.
"^DD",62.9,62.9,.15,21,0)
^^3^3^2991105^
"^DD",62.9,62.9,.15,21,1,0)
If orders are received from a non-VA facility and the facility can not
"^DD",62.9,62.9,.15,21,2,0)
transmit HL7 specimen codes from HL7 table 0070 then answer with the type
"^DD",62.9,62.9,.15,21,3,0)
of coding system "LOCAL".
"^DD",62.9,62.9,.15,"DT")
2991105
"^DD",62.9,62.9001,.025,0)
DIVISION^P4'^DIC(4,^0;10^Q
"^DD",62.9,62.9001,.025,3)
Enter the accession's division (?? - additional help).
"^DD",62.9,62.9001,.025,21,0)
^^11^11^3010921^
"^DD",62.9,62.9001,.025,21,1,0)
Collecting facilities:
"^DD",62.9,62.9001,.025,21,2,0)
 
"^DD",62.9,62.9001,.025,21,3,0)
If the manifest building process should only build accessions'
"^DD",62.9,62.9001,.025,21,4,0)
from a certain division on a manifest then enter the division
"^DD",62.9,62.9001,.025,21,5,0)
to screen these accessions. The division used here will be the
"^DD",62.9,62.9001,.025,21,6,0)
division associated with the user who created the accession.
"^DD",62.9,62.9001,.025,21,7,0)
This field will allow a site to screen accessions from
"^DD",62.9,62.9001,.025,21,8,0)
multiple divisions, only placing on the manifest an accession
"^DD",62.9,62.9001,.025,21,9,0)
from the specified division.
"^DD",62.9,62.9001,.025,21,10,0)
 
"^DD",62.9,62.9001,.025,21,11,0)
Host facilities: This field not used.
"^DD",62.9,62.9001,.025,"DT")
3010921
"^DD",62.9,62.9001,.04,0)
URGENCY^*P62.05'^LAB(62.05,^0;4^S DIC("S")="I Y<50" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",62.9,62.9001,.04,3)
Collecting facility - if only certain urgencies are shipped, specify the accession's test urgency. Host facility - see field description (??) for information.
"^DD",62.9,62.9001,.04,12)
Select regular urgencies only. Workload urgencies are excluded.
"^DD",62.9,62.9001,.04,12.1)
S DIC("S")="I Y<50"
"^DD",62.9,62.9001,.04,21,0)
^.001^35^35^3010911^^^^
"^DD",62.9,62.9001,.04,21,1,0)
COLLECTING FACILITIES:
"^DD",62.9,62.9001,.04,21,2,0)

"^DD",62.9,62.9001,.04,21,3,0)
If shipping laboratory tests that are a certain
"^DD",62.9,62.9001,.04,21,4,0)
urgency, specify the urgency that must match the
"^DD",62.9,62.9001,.04,21,5,0)
test urgency of the accession for the accession/test
"^DD",62.9,62.9001,.04,21,6,0)
to be placed on the shipping manifest.
"^DD",62.9,62.9001,.04,21,7,0)
 
"^DD",62.9,62.9001,.04,21,8,0)
HOST FACILITIES:
"^DD",62.9,62.9001,.04,21,9,0)
 
"^DD",62.9,62.9001,.04,21,10,0)
This field is used by LEDI software at the host
"^DD",62.9,62.9001,.04,21,11,0)
facility to determine the entry in the host site's
"^DD",62.9,62.9001,.04,21,12,0)
URGENCY file (#62.05) to use for ordering when the
"^DD",62.9,62.9001,.04,21,13,0)
host site has more than one entry in the URGENCY
"^DD",62.9,62.9001,.04,21,14,0)
file (#62.05) that maps to the same HL7 PRIORITY.
"^DD",62.9,62.9001,.04,21,15,0)
 
"^DD",62.9,62.9001,.04,21,16,0)
Example: Host site has three urgencies which
"^DD",62.9,62.9001,.04,21,17,0)
         map to HL7 PRIORITY: ROUTINE (R).
"^DD",62.9,62.9001,.04,21,18,0)

"^DD",62.9,62.9001,.04,21,19,0)
 Entry #     Name                LEDI HL7
"^DD",62.9,62.9001,.04,21,20,0)
 -------     ---------------     --------
"^DD",62.9,62.9001,.04,21,21,0)
  2          PATIENT WAITING     ROUTINE
"^DD",62.9,62.9001,.04,21,22,0)
  9          ROUTINE             ROUTINE
"^DD",62.9,62.9001,.04,21,23,0)
 10          NO RUSH             ROUTINE
"^DD",62.9,62.9001,.04,21,24,0)
 
"^DD",62.9,62.9001,.04,21,25,0)
 If there is no mapping defined for this field,
"^DD",62.9,62.9001,.04,21,26,0)
 then the LEDI software will use the last entry
"^DD",62.9,62.9001,.04,21,27,0)
 in the URGENCY file that maps to HL7 PRIORITY:
"^DD",62.9,62.9001,.04,21,28,0)
 ROUTINE (R); workload urgencies are excluded.
"^DD",62.9,62.9001,.04,21,29,0)
 In this case the test would be ordered with a
"^DD",62.9,62.9001,.04,21,30,0)
 URGENCY of NO RUSH.
"^DD",62.9,62.9001,.04,21,31,0)
 
"^DD",62.9,62.9001,.04,21,32,0)
 If the host site enters a mapping in this field,
"^DD",62.9,62.9001,.04,21,33,0)
 i.e. ROUTINE then the test will be ordered using
"^DD",62.9,62.9001,.04,21,34,0)
 the host site's entry for ROUTINE in the URGENCY
"^DD",62.9,62.9001,.04,21,35,0)
 file when the HL7 PRIORITY matches.
"^DD",62.9,62.9001,.04,"DT")
2970421
"^DD",62.9,62.9001,1.1,0)
REQUIRE PATIENT HEIGHT^S^0:NO;1:YES;^1;1^Q
"^DD",62.9,62.9001,1.1,3)
Is patient's height required to be sent with order for this test.
"^DD",62.9,62.9001,1.1,21,0)
^.001^3^3^3011221^^^^
"^DD",62.9,62.9001,1.1,21,1,0)
Allows site to specify that the patient's height be sent with
"^DD",62.9,62.9001,1.1,21,2,0)
an order for this test. Patient's height will be prompted for
"^DD",62.9,62.9001,1.1,21,3,0)
and printed on manifest.
"^DD",62.9,62.9001,1.1,"DT")
2981113
"^DD",62.9,62.9001,1.15,0)
PATIENT HEIGHT UNITS^*P64.061'^LAB(64.061,^1;2^S DIC("S")="I $P(^(0),U,7)=""M""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",62.9,62.9001,1.15,12)
Only codes that are measurements are selectable.
"^DD",62.9,62.9001,1.15,12.1)
S DIC("S")="I $P(^(0),U,7)=""M"""
"^DD",62.9,62.9001,1.15,21,0)
^^3^3^3010911^
"^DD",62.9,62.9001,1.15,21,1,0)
Units used to measure the patient's height.
"^DD",62.9,62.9001,1.15,21,2,0)
Select an entry from the LAB ELECTRONIC CODE
"^DD",62.9,62.9001,1.15,21,3,0)
file (#64.061) that are measurements. 
"^DD",62.9,62.9001,1.15,"DT")
2981113
"^DD",62.9,62.9001,1.16,0)
PATIENT HEIGHT CODE^*P95.3'^LAB(95.3,^1;5^S DIC("S")="I $$GET1^DIQ(95.3,Y_"","",1)=""BODY HEIGHT""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",62.9,62.9001,1.16,3)
Enter the appropriate LOINC code to identify the patient's height
"^DD",62.9,62.9001,1.16,12)
Only allow selection of LOINC codes with "BODY HEIGHT" component.
"^DD",62.9,62.9001,1.16,12.1)
S DIC("S")="I $$GET1^DIQ(95.3,Y_"","",1)=""BODY HEIGHT"""
"^DD",62.9,62.9001,1.16,21,0)
^^2^2^3010911^
"^DD",62.9,62.9001,1.16,21,1,0)
Select the appropriate LOINC code to identify
"^DD",62.9,62.9001,1.16,21,2,0)
the patient's height. 
"^DD",62.9,62.9001,1.16,"DT")
3010831
"^DD",62.9,62.9001,1.2,0)
REQUIRE PATIENT WEIGHT^S^0:NO;1:YES;^1;3^Q
"^DD",62.9,62.9001,1.2,21,0)
^.001^6^6^3010911^^
"^DD",62.9,62.9001,1.2,21,1,0)
Determines if the patient's weight is required
"^DD",62.9,62.9001,1.2,21,2,0)
to be sent in the HL7 ORM order message and
"^DD",62.9,62.9001,1.2,21,3,0)
printed on the shipping manifest.  Actual
"^DD",62.9,62.9001,1.2,21,4,0)
shipping and/or electronic transmission of a
"^DD",62.9,62.9001,1.2,21,5,0)
shipping manifest will check for entry of the
"^DD",62.9,62.9001,1.2,21,6,0)
patient's weight and prevent release if absent. 
"^DD",62.9,62.9001,1.2,"DT")
2981113
"^DD",62.9,62.9001,1.25,0)
PATIENT WEIGHT UNITS^*P64.061'^LAB(64.061,^1;4^S DIC("S")="I $P(^(0),U,7)=""M""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",62.9,62.9001,1.25,12)
Only codes that are measurements are selectable.
"^DD",62.9,62.9001,1.25,12.1)
S DIC("S")="I $P(^(0),U,7)=""M"""
"^DD",62.9,62.9001,1.25,21,0)
^^3^3^3010911^
"^DD",62.9,62.9001,1.25,21,1,0)
Units used to measure the patient's weight.
"^DD",62.9,62.9001,1.25,21,2,0)
Select an entry from the LAB ELECTRONIC CODE
"^DD",62.9,62.9001,1.25,21,3,0)
file (#64.061) that are measurements. 
"^DD",62.9,62.9001,1.25,"DT")
2981113
"^DD",62.9,62.9001,1.26,0)
PATIENT WEIGHT CODE^*P95.3'^LAB(95.3,^1;6^S DIC("S")="I $$GET1^DIQ(95.3,Y_"","",1)=""BODY WEIGHT""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",62.9,62.9001,1.26,3)
Enter the appropriate LOINC code to identify the patient's weight.
"^DD",62.9,62.9001,1.26,12)
Only allow selection of LOINC codes with "BODY WEIGHT" component.
"^DD",62.9,62.9001,1.26,12.1)
S DIC("S")="I $$GET1^DIQ(95.3,Y_"","",1)=""BODY WEIGHT"""
"^DD",62.9,62.9001,1.26,21,0)
^^2^2^3010911^
"^DD",62.9,62.9001,1.26,21,1,0)
Select the appropriate LOINC code to identify
"^DD",62.9,62.9001,1.26,21,2,0)
the patient's weight. 
"^DD",62.9,62.9001,1.26,"DT")
3010831
"^DD",62.9,62.9001,2.1,0)
REQUIRE COLLECTION VOLUME^S^0:NO;1:YES;^2;1^Q
"^DD",62.9,62.9001,2.1,21,0)
^^7^7^3010911^
"^DD",62.9,62.9001,2.1,21,1,0)
Determines if the specimen's collection volume
"^DD",62.9,62.9001,2.1,21,2,0)
is required to be sent in the HL7 ORM order
"^DD",62.9,62.9001,2.1,21,3,0)
message and printed on the shipping manifest.
"^DD",62.9,62.9001,2.1,21,4,0)
Actual shipping and/or electronic transmission
"^DD",62.9,62.9001,2.1,21,5,0)
of a shipping manifest will check for entry of
"^DD",62.9,62.9001,2.1,21,6,0)
the specimen's collection volume and prevent
"^DD",62.9,62.9001,2.1,21,7,0)
release if absent. 
"^DD",62.9,62.9001,2.1,"DT")
2981110
"^DD",62.9,62.9001,2.15,0)
COLLECTION VOLUME UNITS^*P64.061'^LAB(64.061,^2;2^S DIC("S")="I $P(^(0),U,7)=""M""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",62.9,62.9001,2.15,12)
Only codes that are measurements are selectable.
"^DD",62.9,62.9001,2.15,12.1)
S DIC("S")="I $P(^(0),U,7)=""M"""
"^DD",62.9,62.9001,2.15,21,0)
^.001^3^3^3011221^^
"^DD",62.9,62.9001,2.15,21,1,0)
Units used to measure the specimen's collection
"^DD",62.9,62.9001,2.15,21,2,0)
volume.  Select an entry from the LAB ELECTRONIC
"^DD",62.9,62.9001,2.15,21,3,0)
CODE file #64.061) that is a measurement. 
"^DD",62.9,62.9001,2.15,"DT")
2981110
"^DD",62.9,62.9001,2.16,0)
COLLECTION VOLUME CODE^*P95.3'^LAB(95.3,^2;7^S DIC("S")="I $$GET1^DIQ(95.3,Y_"","",1)=""SPECIMEN VOLUME""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",62.9,62.9001,2.16,3)
Enter the appropriate LOINC code to identify this specimen's volume
"^DD",62.9,62.9001,2.16,12)
Only allow selection of LOINC codes with "SPECIMEN VOLUME" component.
"^DD",62.9,62.9001,2.16,12.1)
S DIC("S")="I $$GET1^DIQ(95.3,Y_"","",1)=""SPECIMEN VOLUME"""
"^DD",62.9,62.9001,2.16,21,0)
^^2^2^3010911^
"^DD",62.9,62.9001,2.16,21,1,0)
Enter the appropriate LOINC code to identify
"^DD",62.9,62.9001,2.16,21,2,0)
the specimen's collection volume. 
"^DD",62.9,62.9001,2.16,"DT")
3010831
"^DD",62.9,62.9001,2.2,0)
REQUIRE COLLECTION END D/T^S^0:NO;1:YES;^2;3^Q
"^DD",62.9,62.9001,2.2,21,0)
^^7^7^3010911^
"^DD",62.9,62.9001,2.2,21,1,0)
Determines if the specimen's collection end
"^DD",62.9,62.9001,2.2,21,2,0)
date/time is required to be sent in the HL7 ORM
"^DD",62.9,62.9001,2.2,21,3,0)
order message and printed on the shipping
"^DD",62.9,62.9001,2.2,21,4,0)
manifest.  Actual shipping and/or electronic
"^DD",62.9,62.9001,2.2,21,5,0)
transmission of a shipping manifest will check
"^DD",62.9,62.9001,2.2,21,6,0)
for entry of the specimen's collection end
"^DD",62.9,62.9001,2.2,21,7,0)
date/time and prevent release if absent. 
"^DD",62.9,62.9001,2.2,"DT")
2980520
"^DD",62.9,62.9001,2.25,0)
COLLECTION DURATION UNITS^*P64.061'^LAB(64.061,^2;4^S DIC("S")="N LA7X S LA7X=$G(^LAB(64.061,Y,0)) I $P(LA7X,U)?.(1""s"",1""min"",1""hr""),$P(LA7X,U,7)=""M""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",62.9,62.9001,2.25,3)

"^DD",62.9,62.9001,2.25,12)
Only codes that are measurements and relate to time (seconds, minutes, hours) are selectable.
"^DD",62.9,62.9001,2.25,12.1)
S DIC("S")="N LA7X S LA7X=$G(^LAB(64.061,Y,0)) I $P(LA7X,U)?.(1""s"",1""min"",1""hr""),$P(LA7X,U,7)=""M"""
"^DD",62.9,62.9001,2.25,21,0)
^.001^4^4^3011221^^
"^DD",62.9,62.9001,2.25,21,1,0)
Units used to calculate the specimen's
"^DD",62.9,62.9001,2.25,21,2,0)
collection duration.  Select an entry from the
"^DD",62.9,62.9001,2.25,21,3,0)
LAB ELECTRONIC CODE file (#64.061) that is a
"^DD",62.9,62.9001,2.25,21,4,0)
measurement and relates to time. 
"^DD",62.9,62.9001,2.25,"DT")
2980519
"^DD",62.9,62.9001,2.26,0)
COLLECTION DURATION CODE^*P95.3'^LAB(95.3,^2;8^S DIC("S")="I $$GET1^DIQ(95.3,Y_"","",1)=""COLLECTION DURATION""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",62.9,62.9001,2.26,3)
Enter the appropriate LOINC code to identify this specimen's collection duration.
"^DD",62.9,62.9001,2.26,12)
Only allow selection of LOINC codes with "COLLECTION DURATION" component.
"^DD",62.9,62.9001,2.26,12.1)
S DIC("S")="I $$GET1^DIQ(95.3,Y_"","",1)=""COLLECTION DURATION"""
"^DD",62.9,62.9001,2.26,21,0)
^^2^2^3010911^
"^DD",62.9,62.9001,2.26,21,1,0)
Enter the appropriate LOINC code to identify
"^DD",62.9,62.9001,2.26,21,2,0)
the specimen's collection duration. 
"^DD",62.9,62.9001,2.26,"DT")
3010831
"^DD",62.9,62.9001,2.3,0)
REQUIRE COLLECTION WEIGHT^S^0:NO;1:YES;^2;5^Q
"^DD",62.9,62.9001,2.3,21,0)
^^7^7^3010911^
"^DD",62.9,62.9001,2.3,21,1,0)
Determines if the specimen's collection weight
"^DD",62.9,62.9001,2.3,21,2,0)
is required to be sent in the HL7 ORM order
"^DD",62.9,62.9001,2.3,21,3,0)
message and printed on the shipping manifest.
"^DD",62.9,62.9001,2.3,21,4,0)
Actual shipping and/or electronic transmission
"^DD",62.9,62.9001,2.3,21,5,0)
of a shipping manifest will check for entry of
"^DD",62.9,62.9001,2.3,21,6,0)
the specimen's collection weight and prevent
"^DD",62.9,62.9001,2.3,21,7,0)
release if absent. 
"^DD",62.9,62.9001,2.3,"DT")
2981110
"^DD",62.9,62.9001,2.35,0)
COLLECTION WEIGHT UNITS^*P64.061'^LAB(64.061,^2;6^S DIC("S")="I $P(^(0),U,7)=""M""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",62.9,62.9001,2.35,12)
Only codes that are measurements are selectable.
"^DD",62.9,62.9001,2.35,12.1)
S DIC("S")="I $P(^(0),U,7)=""M"""
"^DD",62.9,62.9001,2.35,21,0)
^^3^3^3010911^
"^DD",62.9,62.9001,2.35,21,1,0)
Units used to measure the specimen's collection weight.
"^DD",62.9,62.9001,2.35,21,2,0)
Select an entry from the LAB ELECTRONIC CODE file
"^DD",62.9,62.9001,2.35,21,3,0)
( #64.061) that is a measurement. 
"^DD",62.9,62.9001,2.35,"DT")
2981110
"^DD",62.9,62.9001,2.36,0)
COLLECTION WEIGHT CODE^*P95.3'^LAB(95.3,^2;9^S DIC("S")="I $$GET1^DIQ(95.3,Y_"","",1)=""SPECIMEN MASS""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",62.9,62.9001,2.36,3)
Enter the appropriate LOINC code to identify this specimen's weight.
"^DD",62.9,62.9001,2.36,12)
Only allow selection of LOINC codes with "SPECIMEN MASS" component.
"^DD",62.9,62.9001,2.36,12.1)
S DIC("S")="I $$GET1^DIQ(95.3,Y_"","",1)=""SPECIMEN MASS"""
"^DD",62.9,62.9001,2.36,21,0)
^^2^2^3010911^
"^DD",62.9,62.9001,2.36,21,1,0)
Enter the appropriate LOINC code to identify
"^DD",62.9,62.9001,2.36,21,2,0)
the specimen's collection weight. 
"^DD",62.9,62.9001,2.36,"DT")
3010831
"^DD",62.9,62.9001,5.1,0)
NON-VA TEST ORDER CODE^F^^5;1^K:$L(X)>20!($L(X)<1) X
"^DD",62.9,62.9001,5.1,3)
Answer must be 1-20 characters in length.
"^DD",62.9,62.9001,5.1,21,0)
^.001^14^14^3011221^^^^
"^DD",62.9,62.9001,5.1,21,1,0)
Collecting facilities:
"^DD",62.9,62.9001,5.1,21,2,0)

"^DD",62.9,62.9001,5.1,21,3,0)
If sending test orders to a non-VA facility use
"^DD",62.9,62.9001,5.1,21,4,0)
this field to store the test order codes used
"^DD",62.9,62.9001,5.1,21,5,0)
by the non-VA system. It will be used when the
"^DD",62.9,62.9001,5.1,21,6,0)
TEST CODING SYSTEM field (#.14) is set to "NON-VA".
"^DD",62.9,62.9001,5.1,21,7,0)
 
"^DD",62.9,62.9001,5.1,21,8,0)
 
"^DD",62.9,62.9001,5.1,21,9,0)
Host facilities:
"^DD",62.9,62.9001,5.1,21,10,0)
 
"^DD",62.9,62.9001,5.1,21,11,0)
If receiving test orders from a non-VA collecting
"^DD",62.9,62.9001,5.1,21,12,0)
facility that does not use VA NLT codes use this
"^DD",62.9,62.9001,5.1,21,13,0)
field to map the collecting facilities test order
"^DD",62.9,62.9001,5.1,21,14,0)
codes to the corresponding VA test.
"^DD",62.9,62.9001,5.1,"DT")
2970915
"^DD",62.9,62.9001,5.2,0)
NON-VA TEST ORDER NAME^F^^5;2^K:$L(X)>100!($L(X)<1) X
"^DD",62.9,62.9001,5.2,3)
Answer must be 1-100 characters in length.
"^DD",62.9,62.9001,5.2,21,0)
^.001^15^15^3011221^^^^
"^DD",62.9,62.9001,5.2,21,1,0)
Collecting facility:
"^DD",62.9,62.9001,5.2,21,2,0)

"^DD",62.9,62.9001,5.2,21,3,0)
If sending test orders to a non-VA facility use
"^DD",62.9,62.9001,5.2,21,4,0)
this field to store the test order name used
"^DD",62.9,62.9001,5.2,21,5,0)
by the non-VA system. The lab software to identify
"^DD",62.9,62.9001,5.2,21,6,0)
the test name on the non-VA system when orders are
"^DD",62.9,62.9001,5.2,21,7,0)
transmitted electronically uses this field. It will
"^DD",62.9,62.9001,5.2,21,8,0)
be used when the TEST CODING SYSTEM field (#.14) is
"^DD",62.9,62.9001,5.2,21,9,0)
set to "NON-VA". 
"^DD",62.9,62.9001,5.2,21,10,0)
 
"^DD",62.9,62.9001,5.2,21,11,0)
Host facility: 
"^DD",62.9,62.9001,5.2,21,12,0)

"^DD",62.9,62.9001,5.2,21,13,0)
Not used - mapping of non-VA tests coding systems
"^DD",62.9,62.9001,5.2,21,14,0)
for test order codes is via NON-VA TEST ORDER CODE
"^DD",62.9,62.9001,5.2,21,15,0)
field (#5.1).
"^DD",62.9,62.9001,5.2,"DT")
2970919
"^DD",62.9,62.9001,5.3,0)
NON-VA SPECIMEN CODE^F^^5;3^K:$L(X)>10!($L(X)<1) X
"^DD",62.9,62.9001,5.3,3)
Answer must be 1-10 characters in length
"^DD",62.9,62.9001,5.3,21,0)
^.001^13^13^3011221^^^^
"^DD",62.9,62.9001,5.3,21,1,0)
Collecting facilities: not applicable
"^DD",62.9,62.9001,5.3,21,2,0)
 
"^DD",62.9,62.9001,5.3,21,3,0)
 
"^DD",62.9,62.9001,5.3,21,4,0)
Host facilities:
"^DD",62.9,62.9001,5.3,21,5,0)
 
"^DD",62.9,62.9001,5.3,21,6,0)
If receiving test orders from a non-VA facility that
"^DD",62.9,62.9001,5.3,21,7,0)
does not use HL7 Table 0070 Specimen Source, use this
"^DD",62.9,62.9001,5.3,21,8,0)
field to store the specimen code used by the non-VA
"^DD",62.9,62.9001,5.3,21,9,0)
system. It is only used when the value of field
"^DD",62.9,62.9001,5.3,21,10,0)
SPECIMEN CODING SYSTEM (#.15) is LOCAL-NON HL7.
"^DD",62.9,62.9001,5.3,21,11,0)
It provides a means for a host facility to map non
"^DD",62.9,62.9001,5.3,21,12,0)
standard specimen codes to the site's TOPOGRAPHY file
"^DD",62.9,62.9001,5.3,21,13,0)
(#61).
"^DD",62.9,62.9001,5.3,"DT")
2991105
"^DD",62.9,62.9001,5.4,0)
NON-VA SPECIMEN NAME^F^^5;4^K:$L(X)>30!($L(X)<1) X
"^DD",62.9,62.9001,5.4,3)
Answer must be 1-30 characters in length
"^DD",62.9,62.9001,5.4,21,0)
^.001^13^13^3011221^^^^
"^DD",62.9,62.9001,5.4,21,1,0)
Collecting facilities: not applicable
"^DD",62.9,62.9001,5.4,21,2,0)
 
"^DD",62.9,62.9001,5.4,21,3,0)

"^DD",62.9,62.9001,5.4,21,4,0)
Host facilities:
"^DD",62.9,62.9001,5.4,21,5,0)

"^DD",62.9,62.9001,5.4,21,6,0)
If receiving test orders from a non-VA facility that
"^DD",62.9,62.9001,5.4,21,7,0)
does not use HL7 Table 0070 Specimen Source, use this
"^DD",62.9,62.9001,5.4,21,8,0)
field to store the specimen name used by the non-VA
"^DD",62.9,62.9001,5.4,21,9,0)
system. It is only used when the value of field
"^DD",62.9,62.9001,5.4,21,10,0)
SPECIMEN CODING SYSTEM (#.15) is LOCAL-NON HL7.
"^DD",62.9,62.9001,5.4,21,11,0)
It provides a means for a host facility to map non
"^DD",62.9,62.9001,5.4,21,12,0)
standard specimen names to the site's TOPOGRAPHY file
"^DD",62.9,62.9001,5.4,21,13,0)
(#61).
"^DD",62.9,62.9001,5.4,"DT")
2991105
"^DIC",62.485,62.485,0)
LA7 MESSAGE LOG BULLETINS^62.485
"^DIC",62.485,62.485,0,"GL")
^LAHM(62.485,
"^DIC",62.485,62.485,"%D",0)
^^8^8^2970612^
"^DIC",62.485,62.485,"%D",1,0)
This file stores canned text for logging errors or exceptional 
"^DIC",62.485,62.485,"%D",2,0)
conditions during message processing.
"^DIC",62.485,62.485,"%D",3,0)
 
"^DIC",62.485,62.485,"%D",4,0)
This file should not be edited locally by the site, but if a local
"^DIC",62.485,62.485,"%D",5,0)
messaging system is developed, and entries must be added, the site
"^DIC",62.485,62.485,"%D",6,0)
should add new entries at entry numbers higher than 999. It is preferred
"^DIC",62.485,62.485,"%D",7,0)
that the local codes be preceded with the three digit primary site number
"^DIC",62.485,62.485,"%D",8,0)
which would result in a seven digit number, site #_xxxx.
"^DIC",62.485,"B","LA7 MESSAGE LOG BULLETINS",62.485)

**INSTALL NAME**
LR*5.2*222
"BLD",1513,0)
LR*5.2*222^LAB SERVICE^0^3020219^y
"BLD",1513,1,0)
^9.61A^145^145^3020219^^^^
"BLD",1513,1,1,0)
VISTA Laboratory Package patch LR*5.2*222 contains no changes to software
"BLD",1513,1,2,0)
controlled by VHA DIRECTIVE 99-053, titled VISTA BLOOD BANK SOFTWARE.
"BLD",1513,1,3,0)
 
"BLD",1513,1,4,0)
========================================
"BLD",1513,1,5,0)

"BLD",1513,1,6,0)
Patch LR*5.2*222 will be distributed and installed with patch LA*5.2*46
"BLD",1513,1,7,0)
LEDI INTERFACE TO NON-VA SYSTEM (LEDI II).
"BLD",1513,1,8,0)
 
"BLD",1513,1,9,0)
This patch adds additional support when using the option Referral Patient
"BLD",1513,1,10,0)
Multi-purpose Accession [LRLEDI] to accession specimens thru the Laboratory
"BLD",1513,1,11,0)
Electronic Data Interface (LEDI). The changes contained in this patch are
"BLD",1513,1,12,0)
implemented in conjunction with patch LA*5.2*46. Patch LA*5.2*46 now builds
"BLD",1513,1,13,0)
the file LAB PENDING ORDERS ENTRY (#69.6) with additional information
"BLD",1513,1,14,0)
concerning mapping to local test urgency. This patch introduces changes
"BLD",1513,1,15,0)
that utilize the local urgency information stored in file #69.6 when
"BLD",1513,1,16,0)
accessioning LEDI specimens at the host laboratory.
"BLD",1513,1,17,0)
 
"BLD",1513,1,18,0)
As of the release date of this software, there is no national solution to
"BLD",1513,1,19,0)
implement a laboratory electronic HL7 standard interface to a facility or
"BLD",1513,1,20,0)
other entity outside the VA wide area network.  National communication
"BLD",1513,1,21,0)
security concerns are still being debated by the Department of Veterans
"BLD",1513,1,22,0)
Affairs (VA) and are awaiting resolution.  At present, a VA medical center,
"BLD",1513,1,23,0)
which intends to utilize this software in conjunction with an interface to
"BLD",1513,1,24,0)
a commercial reference laboratory or other non-VA information system entity,
"BLD",1513,1,25,0)
will need to coordinate with the vendor an acceptable communication method.
"BLD",1513,1,26,0)
Any implementation will need to be approved by the facility and VISN
"BLD",1513,1,27,0)
Information Security Officer (ISO) and meet current VA security requirements
"BLD",1513,1,28,0)
for external electronic connections. See VHA Directive 6212, Security of
"BLD",1513,1,29,0)
External Electronic Connections and VHA Directive 6210, Automated Information
"BLD",1513,1,30,0)
Systems (AIS) Security for additional information and guidance. Additional
"BLD",1513,1,31,0)
security information may be obtained from the Health Information Security
"BLD",1513,1,32,0)
Service (HISS) web page at http://vaww.va.gov/miss.
"BLD",1513,1,33,0)

"BLD",1513,1,34,0)
Implementation of a HL7 messaging interface between the VA VistA Laboratory
"BLD",1513,1,35,0)
package and a non-VA information system consists basically of three parts:
"BLD",1513,1,36,0)
 - VistA Laboratory LEDI II software.
"BLD",1513,1,37,0)
 - certified communication software and hardware
"BLD",1513,1,38,0)
 - non-VA information system capable of sending and receiving laboratory HL7
"BLD",1513,1,39,0)
   order and result messages.
"BLD",1513,1,40,0)
All three must be functional to utilize the capabilities of this LEDI II
"BLD",1513,1,41,0)
software patch. The implementation,setup, and configuration of vendor provided
"BLD",1513,1,42,0)
hardware and software is NOT addressed by this documentation.  Consult the
"BLD",1513,1,43,0)
vendor provided documentation and instructions to interface to the VistA
"BLD",1513,1,44,0)
Laboratory package.
"BLD",1513,1,45,0)
 
"BLD",1513,1,46,0)
 
"BLD",1513,1,47,0)
NOIS HUN-1100-21862 reported discrepancies in patient names due to Network
"BLD",1513,1,48,0)
Health Exchange not maintaining name changes. This patch removes the use
"BLD",1513,1,49,0)
of the Network Health Exchange package to lookup patient information
"BLD",1513,1,50,0)
(patient name, patient identifier and date of birth). The link in file
"BLD",1513,1,51,0)
REFERRAL PATIENT (#67), field Patient Name (#3) to file VAMC NETWORK
"BLD",1513,1,52,0)
PATIENT (#537010) is removed as a variable pointer.
"BLD",1513,1,53,0)

"BLD",1513,1,54,0)

"BLD",1513,1,55,0)
NOIS
"BLD",1513,1,56,0)
====
"BLD",1513,1,57,0)
HUN-1100-21862
"BLD",1513,1,58,0)

"BLD",1513,1,59,0)
ROUTINE SUMMARY
"BLD",1513,1,60,0)
===============
"BLD",1513,1,61,0)
  The following routines are included in this patch.  The second line
"BLD",1513,1,62,0)
  of each of these routines now looks like:
"BLD",1513,1,63,0)
  <tab> ;;5.2;LAB SERVICE;<patchlist>;Sep 27, 1994
"BLD",1513,1,64,0)
 
"BLD",1513,1,65,0)
                    Checksum       Checksum
"BLD",1513,1,66,0)
   Routine Name     Before Patch   After Patch    Patch List
"BLD",1513,1,67,0)
   ------------     ------------   -----------    ------------
"BLD",1513,1,68,0)
   LR222            N/A            6987123        **222** (Deleted by KIDS)
"BLD",1513,1,69,0)
   LRDPAREF         6854898        5111405        **153,222**
"BLD",1513,1,70,0)
   LRORDB           3786248        3782224        **153,222**
"BLD",1513,1,71,0)
 
"BLD",1513,1,72,0)
 List of preceding patches: 153
"BLD",1513,1,73,0)
 Sites should use CHECK^XTSUMBLD to verify checksums. 
"BLD",1513,1,74,0)
 
"BLD",1513,1,75,0)
  
"BLD",1513,1,76,0)
TEST SITES
"BLD",1513,1,77,0)
----------
"BLD",1513,1,78,0)
  Alexandria VAMC
"BLD",1513,1,79,0)
  Biloxi VAMC
"BLD",1513,1,80,0)
  Birmingham VAMC
"BLD",1513,1,81,0)
  Fayetteville VAMC
"BLD",1513,1,82,0)
  Hines VAMC
"BLD",1513,1,83,0)
  Houston VAMC
"BLD",1513,1,84,0)
  Jackson VAMC
"BLD",1513,1,85,0)
  Little Rock VAMC
"BLD",1513,1,86,0)
  Madison VAMC
"BLD",1513,1,87,0)
  Milwaukee VAMC
"BLD",1513,1,88,0)
  Muskogee VAMC
"BLD",1513,1,89,0)
  Oklahoma City VAMC
"BLD",1513,1,90,0)
  Shreveport VAMC
"BLD",1513,1,91,0)
 
"BLD",1513,1,92,0)
 
"BLD",1513,1,93,0)
SOFTWARE RETRIEVAL:
"BLD",1513,1,94,0)
===================
"BLD",1513,1,95,0)
 
"BLD",1513,1,96,0)
   The following software and documentation files are exported as part of
"BLD",1513,1,97,0)
   this patch:
"BLD",1513,1,98,0)
 
"BLD",1513,1,99,0)
    File Name           Contents                         Retrieval Format
"BLD",1513,1,100,0)
    ---------           --------                         ----------------
"BLD",1513,1,101,0)
    LAB_LEDI_II.KID     LA*5.2*46 KIDS build                 ASCII
"BLD",1513,1,102,0)
                        LR*5.2*222 KIDS build
"BLD",1513,1,103,0)
 
"BLD",1513,1,104,0)
    LAB_LEDI_II_IG.PDF  LABORATORY ELECTRONIC DATA           BINARY
"BLD",1513,1,105,0)
    LAB_LEDI_II_IG.DOC   INTERCHANGE PHASE II (LEDI II)
"BLD",1513,1,106,0)
                         INSTALLATION GUIDE
"BLD",1513,1,107,0)
 
"BLD",1513,1,108,0)
    LAB_LEDI_II_UM.PDF  LABORATORY ELECTRONIC DATA           BINARY
"BLD",1513,1,109,0)
    LAB_LEDI_II_UM.DOC   INTERCHANGE PHASE II (LEDI II)
"BLD",1513,1,110,0)
                         USER MANUAL
"BLD",1513,1,111,0)
  
"BLD",1513,1,112,0)
   The software files are available on one of the following OI Field
"BLD",1513,1,113,0)
   Offices' ANONYMOUS.SOFTWARE directories.
"BLD",1513,1,114,0)
 
"BLD",1513,1,115,0)
   All sites are encouraged to use their FTP capability to obtain these
"BLD",1513,1,116,0)
   files.  Use the FTP address "download.vista.med.va.gov" (without the
"BLD",1513,1,117,0)
   quotes) to connect to the first available FTP server where the files
"BLD",1513,1,118,0)
   are located.
"BLD",1513,1,119,0)
 
"BLD",1513,1,120,0)
      OI FIELD OFFICE    FTP ADDRESS                DIRECTORY
"BLD",1513,1,121,0)
      ===============    ===========                =========
"BLD",1513,1,122,0)
      ALBANY             ftp.fo-albany.med.va.gov   [ANONYMOUS.SOFTWARE]
"BLD",1513,1,123,0)
      HINES              ftp.fo-hines.med.va.gov    [ANONYMOUS.SOFTWARE]
"BLD",1513,1,124,0)
      SALT LAKE          ftp.fo-slc.med.va.gov      [ANONYMOUS.SOFTWARE]
"BLD",1513,1,125,0)
 
"BLD",1513,1,126,0)
 
"BLD",1513,1,127,0)
 
"BLD",1513,1,128,0)
INSTALLATION INSTRUCTIONS
"BLD",1513,1,129,0)
-------------------------
"BLD",1513,1,130,0)
  The instructions for installation of the software are included in the
"BLD",1513,1,131,0)
  installation guide.
"BLD",1513,1,132,0)
 
"BLD",1513,1,133,0)
 
"BLD",1513,1,134,0)
POST-INSTALLATION INSTRUCTIONS
"BLD",1513,1,135,0)
------------------------------
"BLD",1513,1,136,0)
 
"BLD",1513,1,137,0)
 
"BLD",1513,1,138,0)
  The post-instructions for installation of the software are included in
"BLD",1513,1,139,0)
  the installation guide.
"BLD",1513,1,140,0)
 
"BLD",1513,1,141,0)
 
"BLD",1513,1,142,0)
INSTALLATION EXAMPLE
"BLD",1513,1,143,0)
====================
"BLD",1513,1,144,0)
 
"BLD",1513,1,145,0)
  An installation example is included in the installation guide.
"BLD",1513,4,0)
^9.64PA^67^3
"BLD",1513,4,64.061,0)
64.061
"BLD",1513,4,64.061,222)
n^n^f^^n^^y^o^n
"BLD",1513,4,64.061,224)
I $P(^LAB(64.061,Y,0),"^",4)="SM40"
"BLD",1513,4,67,0)
67
"BLD",1513,4,67,2,0)
^9.641^67^1
"BLD",1513,4,67,2,67,0)
REFERRAL PATIENT  (File-top level)
"BLD",1513,4,67,2,67,1,0)
^9.6411^3^1
"BLD",1513,4,67,2,67,1,3,0)
Patient Name
"BLD",1513,4,67,222)
y^n^p^^^^n
"BLD",1513,4,69.6,0)
69.6
"BLD",1513,4,69.6,2,0)
^9.641^69.6^2
"BLD",1513,4,69.6,2,69.6,0)
LAB PENDING ORDERS ENTRY  (File-top level)
"BLD",1513,4,69.6,2,69.6,1,0)
^9.6411^700.04^4
"BLD",1513,4,69.6,2,69.6,1,11.1,0)
COLLECTION END DATE/TIME
"BLD",1513,4,69.6,2,69.6,1,700,0)
HL ENCODING CHARACTERS
"BLD",1513,4,69.6,2,69.6,1,700.02,0)
HL PID-2
"BLD",1513,4,69.6,2,69.6,1,700.04,0)
HL PID-4
"BLD",1513,4,69.6,2,69.64,0)
ORDERED TESTS  (sub-file)
"BLD",1513,4,69.6,2,69.64,1,0)
^9.6411^13^7
"BLD",1513,4,69.6,2,69.64,1,4,0)
REMOTE URGENCY
"BLD",1513,4,69.6,2,69.64,1,11,0)
HOST TEST
"BLD",1513,4,69.6,2,69.64,1,12,0)
HOST URGENCY
"BLD",1513,4,69.6,2,69.64,1,13,0)
ORDERING PROVIDER
"BLD",1513,4,69.6,2,69.64,1,700.04,0)
HL OBR-4
"BLD",1513,4,69.6,2,69.64,1,700.18,0)
HL OBR-18
"BLD",1513,4,69.6,2,69.64,1,700.19,0)
HL OBR-19
"BLD",1513,4,69.6,222)
y^n^p^^^^n
"BLD",1513,4,"APDD",67,67)

"BLD",1513,4,"APDD",67,67,3)

"BLD",1513,4,"APDD",69.6,69.6)

"BLD",1513,4,"APDD",69.6,69.6,11.1)

"BLD",1513,4,"APDD",69.6,69.6,700)

"BLD",1513,4,"APDD",69.6,69.6,700.02)

"BLD",1513,4,"APDD",69.6,69.6,700.04)

"BLD",1513,4,"APDD",69.6,69.64)

"BLD",1513,4,"APDD",69.6,69.64,4)

"BLD",1513,4,"APDD",69.6,69.64,11)

"BLD",1513,4,"APDD",69.6,69.64,12)

"BLD",1513,4,"APDD",69.6,69.64,13)

"BLD",1513,4,"APDD",69.6,69.64,700.04)

"BLD",1513,4,"APDD",69.6,69.64,700.18)

"BLD",1513,4,"APDD",69.6,69.64,700.19)

"BLD",1513,4,"B",64.061,64.061)

"BLD",1513,4,"B",67,67)

"BLD",1513,4,"B",69.6,69.6)

"BLD",1513,"ABPKG")
n
"BLD",1513,"INI")
PRE^LR222
"BLD",1513,"INID")
y
"BLD",1513,"INIT")
POST^LR222
"BLD",1513,"KRN",0)
^9.67PA^19^18
"BLD",1513,"KRN",.4,0)
.4
"BLD",1513,"KRN",.401,0)
.401
"BLD",1513,"KRN",.402,0)
.402
"BLD",1513,"KRN",.403,0)
.403
"BLD",1513,"KRN",.5,0)
.5
"BLD",1513,"KRN",.84,0)
.84
"BLD",1513,"KRN",3.6,0)
3.6
"BLD",1513,"KRN",3.8,0)
3.8
"BLD",1513,"KRN",9.2,0)
9.2
"BLD",1513,"KRN",9.8,0)
9.8
"BLD",1513,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",1513,"KRN",9.8,"NM",1,0)
LRORDB^^0^B11020862
"BLD",1513,"KRN",9.8,"NM",2,0)
LRDPAREF^^0^B20135466
"BLD",1513,"KRN",9.8,"NM","B","LRDPAREF",2)

"BLD",1513,"KRN",9.8,"NM","B","LRORDB",1)

"BLD",1513,"KRN",19,0)
19
"BLD",1513,"KRN",19,"NM",0)
^9.68A^^
"BLD",1513,"KRN",19.1,0)
19.1
"BLD",1513,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",1513,"KRN",101,0)
101
"BLD",1513,"KRN",409.61,0)
409.61
"BLD",1513,"KRN",771,0)
771
"BLD",1513,"KRN",869.2,0)
869.2
"BLD",1513,"KRN",870,0)
870
"BLD",1513,"KRN",8994,0)
8994
"BLD",1513,"KRN","B",.4,.4)

"BLD",1513,"KRN","B",.401,.401)

"BLD",1513,"KRN","B",.402,.402)

"BLD",1513,"KRN","B",.403,.403)

"BLD",1513,"KRN","B",.5,.5)

"BLD",1513,"KRN","B",.84,.84)

"BLD",1513,"KRN","B",3.6,3.6)

"BLD",1513,"KRN","B",3.8,3.8)

"BLD",1513,"KRN","B",9.2,9.2)

"BLD",1513,"KRN","B",9.8,9.8)

"BLD",1513,"KRN","B",19,19)

"BLD",1513,"KRN","B",19.1,19.1)

"BLD",1513,"KRN","B",101,101)

"BLD",1513,"KRN","B",409.61,409.61)

"BLD",1513,"KRN","B",771,771)

"BLD",1513,"KRN","B",869.2,869.2)

"BLD",1513,"KRN","B",870,870)

"BLD",1513,"KRN","B",8994,8994)

"BLD",1513,"PRE")
LR222
"BLD",1513,"QUES",0)
^9.62^^
"BLD",1513,"REQB",0)
^9.611^2^2
"BLD",1513,"REQB",1,0)
LR*5.2*153^2
"BLD",1513,"REQB",2,0)
LA*5.2*46^2
"BLD",1513,"REQB","B","LA*5.2*46",2)

"BLD",1513,"REQB","B","LR*5.2*153",1)

"DATA",64.061,153,0)
Required Shipping Info Updated^^^SM40^^^E
"FIA",64.061)
LAB ELECTRONIC CODES
"FIA",64.061,0)
^LAB(64.061,
"FIA",64.061,0,0)
64.061I
"FIA",64.061,0,1)
n^n^f^^n^^y^o^n
"FIA",64.061,0,10)

"FIA",64.061,0,11)
I $P(^LAB(64.061,Y,0),"^",4)="SM40"
"FIA",64.061,0,"RLRO")

"FIA",64.061,0,"VR")
5.2^LR
"FIA",64.061,64.061)
0
"FIA",64.061,64.614)
0
"FIA",67)
REFERRAL PATIENT
"FIA",67,0)
^LRT(67,
"FIA",67,0,0)
67I
"FIA",67,0,1)
y^n^p^^^^n
"FIA",67,0,10)

"FIA",67,0,11)

"FIA",67,0,"RLRO")

"FIA",67,0,"VR")
5.2^LR
"FIA",67,67)
1
"FIA",67,67,3)

"FIA",69.6)
LAB PENDING ORDERS ENTRY
"FIA",69.6,0)
^LRO(69.6,
"FIA",69.6,0,0)
69.6I
"FIA",69.6,0,1)
y^n^p^^^^n
"FIA",69.6,0,10)

"FIA",69.6,0,11)

"FIA",69.6,0,"RLRO")

"FIA",69.6,0,"VR")
5.2^LR
"FIA",69.6,69.6)
1
"FIA",69.6,69.6,11.1)

"FIA",69.6,69.6,700)

"FIA",69.6,69.6,700.02)

"FIA",69.6,69.6,700.04)

"FIA",69.6,69.64)
1
"FIA",69.6,69.64,4)

"FIA",69.6,69.64,11)

"FIA",69.6,69.64,12)

"FIA",69.6,69.64,13)

"FIA",69.6,69.64,700.04)

"FIA",69.6,69.64,700.18)

"FIA",69.6,69.64,700.19)

"INI")
PRE^LR222
"INIT")
POST^LR222
"MBREQ")
0
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2950414
"PKG",26,22,1,"PAH",1,0)
222^3020219
"PKG",26,22,1,"PAH",1,1,0)
^^145^145^3020219
"PKG",26,22,1,"PAH",1,1,1,0)
VISTA Laboratory Package patch LR*5.2*222 contains no changes to software
"PKG",26,22,1,"PAH",1,1,2,0)
controlled by VHA DIRECTIVE 99-053, titled VISTA BLOOD BANK SOFTWARE.
"PKG",26,22,1,"PAH",1,1,3,0)
 
"PKG",26,22,1,"PAH",1,1,4,0)
========================================
"PKG",26,22,1,"PAH",1,1,5,0)

"PKG",26,22,1,"PAH",1,1,6,0)
Patch LR*5.2*222 will be distributed and installed with patch LA*5.2*46
"PKG",26,22,1,"PAH",1,1,7,0)
LEDI INTERFACE TO NON-VA SYSTEM (LEDI II).
"PKG",26,22,1,"PAH",1,1,8,0)
 
"PKG",26,22,1,"PAH",1,1,9,0)
This patch adds additional support when using the option Referral Patient
"PKG",26,22,1,"PAH",1,1,10,0)
Multi-purpose Accession [LRLEDI] to accession specimens thru the Laboratory
"PKG",26,22,1,"PAH",1,1,11,0)
Electronic Data Interface (LEDI). The changes contained in this patch are
"PKG",26,22,1,"PAH",1,1,12,0)
implemented in conjunction with patch LA*5.2*46. Patch LA*5.2*46 now builds
"PKG",26,22,1,"PAH",1,1,13,0)
the file LAB PENDING ORDERS ENTRY (#69.6) with additional information
"PKG",26,22,1,"PAH",1,1,14,0)
concerning mapping to local test urgency. This patch introduces changes
"PKG",26,22,1,"PAH",1,1,15,0)
that utilize the local urgency information stored in file #69.6 when
"PKG",26,22,1,"PAH",1,1,16,0)
accessioning LEDI specimens at the host laboratory.
"PKG",26,22,1,"PAH",1,1,17,0)
 
"PKG",26,22,1,"PAH",1,1,18,0)
As of the release date of this software, there is no national solution to
"PKG",26,22,1,"PAH",1,1,19,0)
implement a laboratory electronic HL7 standard interface to a facility or
"PKG",26,22,1,"PAH",1,1,20,0)
other entity outside the VA wide area network.  National communication
"PKG",26,22,1,"PAH",1,1,21,0)
security concerns are still being debated by the Department of Veterans
"PKG",26,22,1,"PAH",1,1,22,0)
Affairs (VA) and are awaiting resolution.  At present, a VA medical center,
"PKG",26,22,1,"PAH",1,1,23,0)
which intends to utilize this software in conjunction with an interface to
"PKG",26,22,1,"PAH",1,1,24,0)
a commercial reference laboratory or other non-VA information system entity,
"PKG",26,22,1,"PAH",1,1,25,0)
will need to coordinate with the vendor an acceptable communication method.
"PKG",26,22,1,"PAH",1,1,26,0)
Any implementation will need to be approved by the facility and VISN
"PKG",26,22,1,"PAH",1,1,27,0)
Information Security Officer (ISO) and meet current VA security requirements
"PKG",26,22,1,"PAH",1,1,28,0)
for external electronic connections. See VHA Directive 6212, Security of
"PKG",26,22,1,"PAH",1,1,29,0)
External Electronic Connections and VHA Directive 6210, Automated Information
"PKG",26,22,1,"PAH",1,1,30,0)
Systems (AIS) Security for additional information and guidance. Additional
"PKG",26,22,1,"PAH",1,1,31,0)
security information may be obtained from the Health Information Security
"PKG",26,22,1,"PAH",1,1,32,0)
Service (HISS) web page at http://vaww.va.gov/miss.
"PKG",26,22,1,"PAH",1,1,33,0)

"PKG",26,22,1,"PAH",1,1,34,0)
Implementation of a HL7 messaging interface between the VA VistA Laboratory
"PKG",26,22,1,"PAH",1,1,35,0)
package and a non-VA information system consists basically of three parts:
"PKG",26,22,1,"PAH",1,1,36,0)
 - VistA Laboratory LEDI II software.
"PKG",26,22,1,"PAH",1,1,37,0)
 - certified communication software and hardware
"PKG",26,22,1,"PAH",1,1,38,0)
 - non-VA information system capable of sending and receiving laboratory HL7
"PKG",26,22,1,"PAH",1,1,39,0)
   order and result messages.
"PKG",26,22,1,"PAH",1,1,40,0)
All three must be functional to utilize the capabilities of this LEDI II
"PKG",26,22,1,"PAH",1,1,41,0)
software patch. The implementation,setup, and configuration of vendor provided
"PKG",26,22,1,"PAH",1,1,42,0)
hardware and software is NOT addressed by this documentation.  Consult the
"PKG",26,22,1,"PAH",1,1,43,0)
vendor provided documentation and instructions to interface to the VistA
"PKG",26,22,1,"PAH",1,1,44,0)
Laboratory package.
"PKG",26,22,1,"PAH",1,1,45,0)
 
"PKG",26,22,1,"PAH",1,1,46,0)
 
"PKG",26,22,1,"PAH",1,1,47,0)
NOIS HUN-1100-21862 reported discrepancies in patient names due to Network
"PKG",26,22,1,"PAH",1,1,48,0)
Health Exchange not maintaining name changes. This patch removes the use
"PKG",26,22,1,"PAH",1,1,49,0)
of the Network Health Exchange package to lookup patient information
"PKG",26,22,1,"PAH",1,1,50,0)
(patient name, patient identifier and date of birth). The link in file
"PKG",26,22,1,"PAH",1,1,51,0)
REFERRAL PATIENT (#67), field Patient Name (#3) to file VAMC NETWORK
"PKG",26,22,1,"PAH",1,1,52,0)
PATIENT (#537010) is removed as a variable pointer.
"PKG",26,22,1,"PAH",1,1,53,0)

"PKG",26,22,1,"PAH",1,1,54,0)

"PKG",26,22,1,"PAH",1,1,55,0)
NOIS
"PKG",26,22,1,"PAH",1,1,56,0)
====
"PKG",26,22,1,"PAH",1,1,57,0)
HUN-1100-21862
"PKG",26,22,1,"PAH",1,1,58,0)

"PKG",26,22,1,"PAH",1,1,59,0)
ROUTINE SUMMARY
"PKG",26,22,1,"PAH",1,1,60,0)
===============
"PKG",26,22,1,"PAH",1,1,61,0)
  The following routines are included in this patch.  The second line
"PKG",26,22,1,"PAH",1,1,62,0)
  of each of these routines now looks like:
"PKG",26,22,1,"PAH",1,1,63,0)
  <tab> ;;5.2;LAB SERVICE;<patchlist>;Sep 27, 1994
"PKG",26,22,1,"PAH",1,1,64,0)
 
"PKG",26,22,1,"PAH",1,1,65,0)
                    Checksum       Checksum
"PKG",26,22,1,"PAH",1,1,66,0)
   Routine Name     Before Patch   After Patch    Patch List
"PKG",26,22,1,"PAH",1,1,67,0)
   ------------     ------------   -----------    ------------
"PKG",26,22,1,"PAH",1,1,68,0)
   LR222            N/A            6987123        **222** (Deleted by KIDS)
"PKG",26,22,1,"PAH",1,1,69,0)
   LRDPAREF         6854898        5111405        **153,222**
"PKG",26,22,1,"PAH",1,1,70,0)
   LRORDB           3786248        3782224        **153,222**
"PKG",26,22,1,"PAH",1,1,71,0)
 
"PKG",26,22,1,"PAH",1,1,72,0)
 List of preceding patches: 153
"PKG",26,22,1,"PAH",1,1,73,0)
 Sites should use CHECK^XTSUMBLD to verify checksums. 
"PKG",26,22,1,"PAH",1,1,74,0)
 
"PKG",26,22,1,"PAH",1,1,75,0)
  
"PKG",26,22,1,"PAH",1,1,76,0)
TEST SITES
"PKG",26,22,1,"PAH",1,1,77,0)
----------
"PKG",26,22,1,"PAH",1,1,78,0)
  Alexandria VAMC
"PKG",26,22,1,"PAH",1,1,79,0)
  Biloxi VAMC
"PKG",26,22,1,"PAH",1,1,80,0)
  Birmingham VAMC
"PKG",26,22,1,"PAH",1,1,81,0)
  Fayetteville VAMC
"PKG",26,22,1,"PAH",1,1,82,0)
  Hines VAMC
"PKG",26,22,1,"PAH",1,1,83,0)
  Houston VAMC
"PKG",26,22,1,"PAH",1,1,84,0)
  Jackson VAMC
"PKG",26,22,1,"PAH",1,1,85,0)
  Little Rock VAMC
"PKG",26,22,1,"PAH",1,1,86,0)
  Madison VAMC
"PKG",26,22,1,"PAH",1,1,87,0)
  Milwaukee VAMC
"PKG",26,22,1,"PAH",1,1,88,0)
  Muskogee VAMC
"PKG",26,22,1,"PAH",1,1,89,0)
  Oklahoma City VAMC
"PKG",26,22,1,"PAH",1,1,90,0)
  Shreveport VAMC
"PKG",26,22,1,"PAH",1,1,91,0)
 
"PKG",26,22,1,"PAH",1,1,92,0)
 
"PKG",26,22,1,"PAH",1,1,93,0)
SOFTWARE RETRIEVAL:
"PKG",26,22,1,"PAH",1,1,94,0)
===================
"PKG",26,22,1,"PAH",1,1,95,0)
 
"PKG",26,22,1,"PAH",1,1,96,0)
   The following software and documentation files are exported as part of
"PKG",26,22,1,"PAH",1,1,97,0)
   this patch:
"PKG",26,22,1,"PAH",1,1,98,0)
 
"PKG",26,22,1,"PAH",1,1,99,0)
    File Name           Contents                         Retrieval Format
"PKG",26,22,1,"PAH",1,1,100,0)
    ---------           --------                         ----------------
"PKG",26,22,1,"PAH",1,1,101,0)
    LAB_LEDI_II.KID     LA*5.2*46 KIDS build                 ASCII
"PKG",26,22,1,"PAH",1,1,102,0)
                        LR*5.2*222 KIDS build
"PKG",26,22,1,"PAH",1,1,103,0)
 
"PKG",26,22,1,"PAH",1,1,104,0)
    LAB_LEDI_II_IG.PDF  LABORATORY ELECTRONIC DATA           BINARY
"PKG",26,22,1,"PAH",1,1,105,0)
    LAB_LEDI_II_IG.DOC   INTERCHANGE PHASE II (LEDI II)
"PKG",26,22,1,"PAH",1,1,106,0)
                         INSTALLATION GUIDE
"PKG",26,22,1,"PAH",1,1,107,0)
 
"PKG",26,22,1,"PAH",1,1,108,0)
    LAB_LEDI_II_UM.PDF  LABORATORY ELECTRONIC DATA           BINARY
"PKG",26,22,1,"PAH",1,1,109,0)
    LAB_LEDI_II_UM.DOC   INTERCHANGE PHASE II (LEDI II)
"PKG",26,22,1,"PAH",1,1,110,0)
                         USER MANUAL
"PKG",26,22,1,"PAH",1,1,111,0)
  
"PKG",26,22,1,"PAH",1,1,112,0)
   The software files are available on one of the following OI Field
"PKG",26,22,1,"PAH",1,1,113,0)
   Offices' ANONYMOUS.SOFTWARE directories.
"PKG",26,22,1,"PAH",1,1,114,0)
 
"PKG",26,22,1,"PAH",1,1,115,0)
   All sites are encouraged to use their FTP capability to obtain these
"PKG",26,22,1,"PAH",1,1,116,0)
   files.  Use the FTP address "download.vista.med.va.gov" (without the
"PKG",26,22,1,"PAH",1,1,117,0)
   quotes) to connect to the first available FTP server where the files
"PKG",26,22,1,"PAH",1,1,118,0)
   are located.
"PKG",26,22,1,"PAH",1,1,119,0)
 
"PKG",26,22,1,"PAH",1,1,120,0)
      OI FIELD OFFICE    FTP ADDRESS                DIRECTORY
"PKG",26,22,1,"PAH",1,1,121,0)
      ===============    ===========                =========
"PKG",26,22,1,"PAH",1,1,122,0)
      ALBANY             ftp.fo-albany.med.va.gov   [ANONYMOUS.SOFTWARE]
"PKG",26,22,1,"PAH",1,1,123,0)
      HINES              ftp.fo-hines.med.va.gov    [ANONYMOUS.SOFTWARE]
"PKG",26,22,1,"PAH",1,1,124,0)
      SALT LAKE          ftp.fo-slc.med.va.gov      [ANONYMOUS.SOFTWARE]
"PKG",26,22,1,"PAH",1,1,125,0)
 
"PKG",26,22,1,"PAH",1,1,126,0)
 
"PKG",26,22,1,"PAH",1,1,127,0)
 
"PKG",26,22,1,"PAH",1,1,128,0)
INSTALLATION INSTRUCTIONS
"PKG",26,22,1,"PAH",1,1,129,0)
-------------------------
"PKG",26,22,1,"PAH",1,1,130,0)
  The instructions for installation of the software are included in the
"PKG",26,22,1,"PAH",1,1,131,0)
  installation guide.
"PKG",26,22,1,"PAH",1,1,132,0)
 
"PKG",26,22,1,"PAH",1,1,133,0)
 
"PKG",26,22,1,"PAH",1,1,134,0)
POST-INSTALLATION INSTRUCTIONS
"PKG",26,22,1,"PAH",1,1,135,0)
------------------------------
"PKG",26,22,1,"PAH",1,1,136,0)
 
"PKG",26,22,1,"PAH",1,1,137,0)
 
"PKG",26,22,1,"PAH",1,1,138,0)
  The post-instructions for installation of the software are included in
"PKG",26,22,1,"PAH",1,1,139,0)
  the installation guide.
"PKG",26,22,1,"PAH",1,1,140,0)
 
"PKG",26,22,1,"PAH",1,1,141,0)
 
"PKG",26,22,1,"PAH",1,1,142,0)
INSTALLATION EXAMPLE
"PKG",26,22,1,"PAH",1,1,143,0)
====================
"PKG",26,22,1,"PAH",1,1,144,0)
 
"PKG",26,22,1,"PAH",1,1,145,0)
  An installation example is included in the installation guide.
"PRE")
LR222
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","LR222")
0^^B17581637
"RTN","LR222",1,0)
LR222 ;DALOI/JMC - LR*5.2*222 PATCH ENVIRONMENT CHECK ROUTINE ;10/21/98
"RTN","LR222",2,0)
 ;;5.2;LAB SERVICE;**222**;Sep 27, 1994
"RTN","LR222",3,0)
EN ; Does not prevent loading of the transport global.
"RTN","LR222",4,0)
 ; Environment check is done only during the install.
"RTN","LR222",5,0)
 ;
"RTN","LR222",6,0)
 N XQA,XQAMSG
"RTN","LR222",7,0)
 ;
"RTN","LR222",8,0)
 I '$G(XPDENV) D  Q
"RTN","LR222",9,0)
 . S XQAMSG="Transport global for patch "_$G(XPDNM,"Unknown patch")_" loaded on "_$$HTE^XLFDT($H)
"RTN","LR222",10,0)
 . S XQA("G.LMI")=""
"RTN","LR222",11,0)
 . D SETUP^XQALERT
"RTN","LR222",12,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("Sending transport global loaded alert to mail group G.LMI",80))
"RTN","LR222",13,0)
 ;
"RTN","LR222",14,0)
 S XQAMSG="Installation of patch "_$G(XPDNM,"Unknown patch")_" started on "_$$HTE^XLFDT($H)
"RTN","LR222",15,0)
 S XQA("G.LMI")=""
"RTN","LR222",16,0)
 D SETUP^XQALERT
"RTN","LR222",17,0)
 ;
"RTN","LR222",18,0)
 D BMES^XPDUTL($$CJ^XLFSTR("Sending install started alert to mail group G.LMI",80))
"RTN","LR222",19,0)
 ;
"RTN","LR222",20,0)
 D CHECK
"RTN","LR222",21,0)
 D EXIT
"RTN","LR222",22,0)
 Q
"RTN","LR222",23,0)
 ;
"RTN","LR222",24,0)
CHECK ; Perform environment check
"RTN","LR222",25,0)
 I $S('$G(IOM):1,'$G(IOSL):1,$G(U)'="^":1,1:0) D  Q
"RTN","LR222",26,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("Terminal Device is not defined",80))
"RTN","LR222",27,0)
 . S XPDQUIT=2
"RTN","LR222",28,0)
 I $S('$G(DUZ):1,$D(DUZ)[0:1,$D(DUZ(0))[0:1,1:0) D  Q
"RTN","LR222",29,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("Please log in to set local DUZ... variables",80))
"RTN","LR222",30,0)
 . S XPDQUIT=2
"RTN","LR222",31,0)
 I $P($$ACTIVE^XUSER(DUZ),"^")'=1 D  Q
"RTN","LR222",32,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("You are not a valid user on this system",80))
"RTN","LR222",33,0)
 . S XPDQUIT=2
"RTN","LR222",34,0)
 S XPDIQ("XPZ1","B")="NO"
"RTN","LR222",35,0)
 Q
"RTN","LR222",36,0)
 ;
"RTN","LR222",37,0)
EXIT ;
"RTN","LR222",38,0)
 I $G(XPDQUIT) D BMES^XPDUTL($$CJ^XLFSTR("--- Install Environment Check FAILED ---",80))
"RTN","LR222",39,0)
 I '$G(XPDQUIT) D BMES^XPDUTL($$CJ^XLFSTR("--- Environment Check is Ok ---",80))
"RTN","LR222",40,0)
 Q
"RTN","LR222",41,0)
 ;
"RTN","LR222",42,0)
PRE ; KIDS Pre install for LR*5.2*222
"RTN","LR222",43,0)
 N LRACT
"RTN","LR222",44,0)
 S LRACT=0 ; flag if pre did anything
"RTN","LR222",45,0)
 ;
"RTN","LR222",46,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** Pre install started ***",80))
"RTN","LR222",47,0)
 ;
"RTN","LR222",48,0)
 I $$VFIELD^DILFD(67,3) D
"RTN","LR222",49,0)
 . N DA,DIK
"RTN","LR222",50,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("*** Deleting field Patient Name (#3) from file REFERRAL PATIENT (#67) ***",80))
"RTN","LR222",51,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("*** Will be re-installed by this patch ***",80))
"RTN","LR222",52,0)
 . S LRACT=1,DIK="^DD(67,",DA=3,DA(1)=67
"RTN","LR222",53,0)
 . D ^DIK
"RTN","LR222",54,0)
 ;
"RTN","LR222",55,0)
 ; Convert data for field #11.1 in file #69.6 if old location
"RTN","LR222",56,0)
 I $$VFIELD^DILFD(69.6,11.1) D
"RTN","LR222",57,0)
 . N LRDA,LRI,LRX,LRY,XPDIDTOT
"RTN","LR222",58,0)
 . D FIELD^DID(69.6,11.1,"","GLOBAL SUBSCRIPT LOCATION","LRX")
"RTN","LR222",59,0)
 . I LRX("GLOBAL SUBSCRIPT LOCATION")="1;9" Q
"RTN","LR222",60,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("*** Checking field COLLECTION END DATE/TIME (#11.1) ***",80))
"RTN","LR222",61,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("*** in file LAB PENDING ORDERS ENTRY (#69.6) ***",80))
"RTN","LR222",62,0)
 . S (LRDA,LRY)=0,XPDIDTOT=$P($G(^LRO(69.6,0)),"^",3)
"RTN","LR222",63,0)
 . D UPDATE^XPDID(0)
"RTN","LR222",64,0)
 . F LRI=1:1 S LRDA=$O(^LRO(69.6,LRDA)) Q:'LRDA  D
"RTN","LR222",65,0)
 . . S LRDA(0)=$G(^LRO(69.6,LRDA,0))
"RTN","LR222",66,0)
 . . I '(LRI#100) D UPDATE^XPDID(LRI)
"RTN","LR222",67,0)
 . . I '$P(LRDA(0),"^",15) Q
"RTN","LR222",68,0)
 . . S $P(^LRO(69.6,LRDA,1),"^",9)=$P(LRDA(0),"^",15)
"RTN","LR222",69,0)
 . . S $P(^LRO(69.6,LRDA,0),"^",15)="",LRY=LRY+1
"RTN","LR222",70,0)
 . . I LRY'=1 Q
"RTN","LR222",71,0)
 . . D BMES^XPDUTL($$CJ^XLFSTR("*** Moving data in field COLLECTION END DATE/TIME (#11.1) ***",80))
"RTN","LR222",72,0)
 . . S LRACT=1
"RTN","LR222",73,0)
 ;
"RTN","LR222",74,0)
 I 'LRACT D BMES^XPDUTL($$CJ^XLFSTR("--- No actions required for pre install ---",80))
"RTN","LR222",75,0)
 ;
"RTN","LR222",76,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** Pre install completed ***",80))
"RTN","LR222",77,0)
 Q
"RTN","LR222",78,0)
 ;
"RTN","LR222",79,0)
POST ; KIDS Post install for LR*5.2*222
"RTN","LR222",80,0)
 N LRACT,XQA,XQAMSG
"RTN","LR222",81,0)
 S LRACT=0 ; flag if post did anything
"RTN","LR222",82,0)
 ;
"RTN","LR222",83,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** Post install started ***",80))
"RTN","LR222",84,0)
 ;
"RTN","LR222",85,0)
 ; Check DD for file PATIENT REFERRAL (#67), field NHE FILE REF (#2.2)
"RTN","LR222",86,0)
 ; Delete if found.
"RTN","LR222",87,0)
 ; Frank Stalling wants to keep the data for now - JMC 7/19/99
"RTN","LR222",88,0)
 ;I $$VFIELD^DILFD(67,2.2) D
"RTN","LR222",89,0)
 ;. N DA,DIK,LRDA
"RTN","LR222",90,0)
 ;. D BMES^XPDUTL($$CJ^XLFSTR("*** Deleting field NHE FILE REF (#2.2) from file REFERRAL PATIENT (#67) ***",80))
"RTN","LR222",91,0)
 ;. S LRACT=1,LRDA=0
"RTN","LR222",92,0)
 ;. S DIK="^DD(67,",DA=2.2,DA(1)=67
"RTN","LR222",93,0)
 ;. D ^DIK
"RTN","LR222",94,0)
 ;. F  S LRDA=$O(^LRT(67,LRDA)) Q:'LRDA  D
"RTN","LR222",95,0)
 ;. . I $D(^LRT(67,LRDA,"NHE")) S LRACT=2 K ^LRT(67,LRDA,"NHE")
"RTN","LR222",96,0)
 ;. D BMES^XPDUTL($$CJ^XLFSTR("*** Deleted field NHE FILE REF (#2.2) from file REFERRAL PATIENT (#67) ***",80))
"RTN","LR222",97,0)
 ;. I LRACT=2 D BMES^XPDUTL($$CJ^XLFSTR("*** and data associated with this field ***",80))
"RTN","LR222",98,0)
 ;
"RTN","LR222",99,0)
 I 'LRACT D BMES^XPDUTL($$CJ^XLFSTR("--- No actions required for post install ---",80))
"RTN","LR222",100,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** Post install completed ***",80))
"RTN","LR222",101,0)
 ;
"RTN","LR222",102,0)
 D BMES^XPDUTL($$CJ^XLFSTR("Sending install completion alert to mail group G.LMI",80))
"RTN","LR222",103,0)
 S XQAMSG="Installation of patch "_$G(XPDNM,"Unknown patch")_" completed on "_$$HTE^XLFDT($H)
"RTN","LR222",104,0)
 S XQA("G.LMI")=""
"RTN","LR222",105,0)
 D SETUP^XQALERT
"RTN","LR222",106,0)
 ;
"RTN","LR222",107,0)
 Q
"RTN","LRDPAREF")
0^2^B20135466
"RTN","LRDPAREF",1,0)
LRDPAREF ;DALOI/FHS - PENDING ORDER FILE PATIENT LOOKUP ; 12/3/1997
"RTN","LRDPAREF",2,0)
 ;;5.2;LAB SERVICE;**153,222**;Sep 27, 1994
"RTN","LRDPAREF",3,0)
 ; Special patient lookup of Lab Orders Pending File
"RTN","LRDPAREF",4,0)
 ;
"RTN","LRDPAREF",5,0)
EN ; From ^LRDPA
"RTN","LRDPAREF",6,0)
 ; Initialize array LRSD.
"RTN","LRDPAREF",7,0)
 ;  CDT=collection date/time
"RTN","LRDPAREF",8,0)
 ;  DFN=ien of patient in selected file
"RTN","LRDPAREF",9,0)
 ;  DOB=patient's date of birth
"RTN","LRDPAREF",10,0)
 ;  DPF=source file (2, or 67)
"RTN","LRDPAREF",11,0)
 ;  ERROR=0
"RTN","LRDPAREF",12,0)
 ;  LPC=longitudinal parity check
"RTN","LRDPAREF",13,0)
 ;  PNM=patient name
"RTN","LRDPAREF",14,0)
 ;  RIEN=IEN of ^LRT(67
"RTN","LRDPAREF",15,0)
 ;  RPSITE=primary sending site
"RTN","LRDPAREF",16,0)
 ;  RSITE=sending site
"RTN","LRDPAREF",17,0)
 ;  RUID=specimen unique identifier
"RTN","LRDPAREF",18,0)
 ;  SEX=patient's sex
"RTN","LRDPAREF",19,0)
 ;  SSN=patient's SSN
"RTN","LRDPAREF",20,0)
 ;  LA7PNM=Patient Bar code read if lookup fails
"RTN","LRDPAREF",21,0)
 ;  On exit LRDPF set to '67^LRT(67, DFN=RIEN
"RTN","LRDPAREF",22,0)
 ;
"RTN","LRDPAREF",23,0)
 N DA,DIC,DIE,DIR,DIRUT,DTOUT,DUOUT
"RTN","LRDPAREF",24,0)
 ;
"RTN","LRDPAREF",25,0)
 K LRSD,LA7PNM
"RTN","LRDPAREF",26,0)
 ;
"RTN","LRDPAREF",27,0)
 F Y="CDT","DFN","DOB","DPF","ERROR","LPC","PNM","RIEN","RPSITE","RSITE","RUID","SEX","SSN" S LRSD(Y)=""
"RTN","LRDPAREF",28,0)
 S LREND=0
"RTN","LRDPAREF",29,0)
 D:'$D(LRLABKY) LABKEY^LRPARAM
"RTN","LRDPAREF",30,0)
 I $G(LRREFBAR) D 
"RTN","LRDPAREF",31,0)
 . D BAR K LA7PNM
"RTN","LRDPAREF",32,0)
 . I LRSD("ERROR") D ERRMSG(LRSD("ERROR"),"Barcode error #")
"RTN","LRDPAREF",33,0)
 I '$G(LRREFBAR)!(LRSD("ERROR")) D MAN
"RTN","LRDPAREF",34,0)
 I LRSD("ERROR") D  Q
"RTN","LRDPAREF",35,0)
 . I LRSD("ERROR") D ERRMSG(LRSD("ERROR"),"Error #")
"RTN","LRDPAREF",36,0)
 . D CLEAN
"RTN","LRDPAREF",37,0)
 S LRSD("RPSITE")=LRRSITE("RPSITE")
"RTN","LRDPAREF",38,0)
CK ;S PNM=LRSD("PNM"),SSN=LRSD("SSN"),DOB=LRSD("DOB"),SEX=LRSD("SEX"),LRXDPF=LRSD("DPF"),LRXDFN=LRSD("DFN")
"RTN","LRDPAREF",39,0)
 D ^LRDPAREX
"RTN","LRDPAREF",40,0)
 I $G(LREND)!($G(LRSD("ERROR"))) D  G CLEAN
"RTN","LRDPAREF",41,0)
 . S LRSD("ERROR",1)="12^Validation Failure "
"RTN","LRDPAREF",42,0)
 . W !,$C(7),$P(LRSD("ERROR"),"^",2),!
"RTN","LRDPAREF",43,0)
OK ;
"RTN","LRDPAREF",44,0)
 S:'$G(DFN) DFN=-1 S Y=DFN
"RTN","LRDPAREF",45,0)
 I DFN=-1 S LRDFN=-1 K DIC S VA200="" Q
"RTN","LRDPAREF",46,0)
 S X="^"_$P(LRDPF,"^",2)_Y_",""LR"")",LRDFN=+$S($D(@X):@X,1:-1) G E3:LRDFN>0
"RTN","LRDPAREF",47,0)
 L +^LR(0):999999
"RTN","LRDPAREF",48,0)
 S LRDFN=$P(^LR(0),U,3)
"RTN","LRDPAREF",49,0)
 F LRDFN=LRDFN:1 Q:'$D(^LR(LRDFN,0))#2
"RTN","LRDPAREF",50,0)
 S ^LR(0)=$P(^LR(0),"^",1,2)_"^"_LRDFN_"^"_(1+$P(^(0),"^",4))
"RTN","LRDPAREF",51,0)
E2 L +^LR(LRDFN):999999
"RTN","LRDPAREF",52,0)
 S ^LR(LRDFN,0)=LRDFN_"^"_+LRDPF_"^"_DFN
"RTN","LRDPAREF",53,0)
 S ^LR("B",LRDFN,LRDFN)=""
"RTN","LRDPAREF",54,0)
 S @X=LRDFN,^LRT(67,LRSD("RIEN"),"LR")=LRDFN
"RTN","LRDPAREF",55,0)
 L -(^LR(0),^LR(LRDFN))
"RTN","LRDPAREF",56,0)
E3 I '$D(^LR(LRDFN,0))#2 D  Q
"RTN","LRDPAREF",57,0)
 . W !!,"Internal patient ID incorrect in ^LR( for ",PNM,"."
"RTN","LRDPAREF",58,0)
 . W !,"Contact Lab Coordinator.",$C(7)
"RTN","LRDPAREF",59,0)
 . S LRDFN=-1
"RTN","LRDPAREF",60,0)
 I LRDFN>0,$P(^LR(LRDFN,0),"^",2)'=+LRDPF!($P(^(0),"^",3)'=DFN) D  Q
"RTN","LRDPAREF",61,0)
 . W !,$C(7),"Internal patient ID incorrect for ",PNM,"."
"RTN","LRDPAREF",62,0)
 . W !,"Contact Lab Coordinator."
"RTN","LRDPAREF",63,0)
 . S LRDFN=-1
"RTN","LRDPAREF",64,0)
 D INF^LRX,PT^LRX
"RTN","LRDPAREF",65,0)
RUID ;
"RTN","LRDPAREF",66,0)
 I LRSD("RUID")="" D
"RTN","LRDPAREF",67,0)
 . N DIR,DIRUT,DTOUT,X,Y
"RTN","LRDPAREF",68,0)
 . ; If VA facility, require 10 character UID.
"RTN","LRDPAREF",69,0)
 . I LRRSITE("RSITE"),$$GET1^DIQ(4,+LRRSITE("RSITE")_",",95)="V" D
"RTN","LRDPAREF",70,0)
 . . S DIR(0)="F^10:10"
"RTN","LRDPAREF",71,0)
 . . S DIR("?")="Enter the sending facility's ten character UID for this specimen"
"RTN","LRDPAREF",72,0)
 . E  S DIR(0)="F^1:30",DIR("?")="Enter sending facility's specimen ID, 1-30 characters"
"RTN","LRDPAREF",73,0)
 . S DIR("A")="Enter Remote UID"
"RTN","LRDPAREF",74,0)
 . D ^DIR
"RTN","LRDPAREF",75,0)
 . I $D(DIRUT) S LREND=1,LRDFN=-1 Q
"RTN","LRDPAREF",76,0)
 . S LRSD("RUID")=Y
"RTN","LRDPAREF",77,0)
 ;
"RTN","LRDPAREF",78,0)
 Q
"RTN","LRDPAREF",79,0)
DUP W !?5,"There are duplicate SSNs in the Referral File <abort>",!,$C(7)
"RTN","LRDPAREF",80,0)
ERR ;
"RTN","LRDPAREF",81,0)
 S LRDFN=-1 W !,"ERROR",!
"RTN","LRDPAREF",82,0)
 Q
"RTN","LRDPAREF",83,0)
 ;
"RTN","LRDPAREF",84,0)
ERR1 ;
"RTN","LRDPAREF",85,0)
 S LRDFN=-1 W !,"ERROR1",!
"RTN","LRDPAREF",86,0)
 Q
"RTN","LRDPAREF",87,0)
 ;
"RTN","LRDPAREF",88,0)
CLEAN ;
"RTN","LRDPAREF",89,0)
 S LRDFN=-1
"RTN","LRDPAREF",90,0)
 S LREND=1
"RTN","LRDPAREF",91,0)
 Q
"RTN","LRDPAREF",92,0)
 ;
"RTN","LRDPAREF",93,0)
 ;
"RTN","LRDPAREF",94,0)
BAR ; Scan PD bar code for patient/specimen info
"RTN","LRDPAREF",95,0)
 ;
"RTN","LRDPAREF",96,0)
 N DA,DIC,DIR,DIRUT,DR,DTOUT,DUOUT
"RTN","LRDPAREF",97,0)
 ;
"RTN","LRDPAREF",98,0)
 D PT^LA7SBCR1(.LRSD,"Scan Patient/Accession Barcode (PD)",.LRRSITE)
"RTN","LRDPAREF",99,0)
 I LRSD("ERROR") Q
"RTN","LRDPAREF",100,0)
 D DIQ
"RTN","LRDPAREF",101,0)
 Q
"RTN","LRDPAREF",102,0)
 ;
"RTN","LRDPAREF",103,0)
 ;
"RTN","LRDPAREF",104,0)
MAN ; Manual referral patient lookup
"RTN","LRDPAREF",105,0)
 ;
"RTN","LRDPAREF",106,0)
 N DIR,DIC,DA
"RTN","LRDPAREF",107,0)
 ;
"RTN","LRDPAREF",108,0)
 S LRSD("ERROR")=""
"RTN","LRDPAREF",109,0)
 K ^DISV(DUZ,"^DPT("),^("^LRT(67,")
"RTN","LRDPAREF",110,0)
 S DIR(0)="67,3",DIR("A")="Select Patient Name -'^M' To enter New Name "
"RTN","LRDPAREF",111,0)
 D ^DIR
"RTN","LRDPAREF",112,0)
 I $D(DIRUT) S LRSD("ERROR")="1^User timeout/abort or Up-arrow entered"
"RTN","LRDPAREF",113,0)
 I Y["DPT(" D DPTSET^LA7SBCR1(.LRSD,+Y) K ^DISV(DUZ,"^DPT(")
"RTN","LRDPAREF",114,0)
 I Y["LRT(" D LRTSET^LA7SBCR1(.LRSD,+Y) K ^DISV(DUZ,"^LRT(67,")
"RTN","LRDPAREF",115,0)
 I $E(X,1,2)="^M" D  Q
"RTN","LRDPAREF",116,0)
 . K DIRUT,DIR
"RTN","LRDPAREF",117,0)
 . D KEYIN^LRDPAREX
"RTN","LRDPAREF",118,0)
 . S:$G(LREND) LRSD("ERROR")="15^Manual Patient entry not complete"
"RTN","LRDPAREF",119,0)
 I $G(LRSD("ERROR")) Q
"RTN","LRDPAREF",120,0)
 D DIQ K DIR
"RTN","LRDPAREF",121,0)
 S DIR(0)="Y",DIR("A")="Is this the correct patient" D ^DIR
"RTN","LRDPAREF",122,0)
 I Y'=1 D  Q
"RTN","LRDPAREF",123,0)
 . S LRSD("ERROR")="5^Unsuccessful patient lookup"
"RTN","LRDPAREF",124,0)
 . D CLEAN
"RTN","LRDPAREF",125,0)
 K DIR
"RTN","LRDPAREF",126,0)
 Q
"RTN","LRDPAREF",127,0)
 ;
"RTN","LRDPAREF",128,0)
DIQ ; Display patient info
"RTN","LRDPAREF",129,0)
 Q:'$G(LRSD("DFN"))
"RTN","LRDPAREF",130,0)
 N DA,DIC,DX,S
"RTN","LRDPAREF",131,0)
 S DIC=$S(+LRSD("DPF")=2:"^DPT(",+LRSD("DPF")=67:"^LRT(67,",1:"")
"RTN","LRDPAREF",132,0)
 I DIC="" Q
"RTN","LRDPAREF",133,0)
 S DA=LRSD("DFN"),DR=0,S=0
"RTN","LRDPAREF",134,0)
 W @IOF
"RTN","LRDPAREF",135,0)
 D EN^LRDIQ
"RTN","LRDPAREF",136,0)
 Q
"RTN","LRDPAREF",137,0)
 ;
"RTN","LRDPAREF",138,0)
ERRMSG(X,Y) ; Display error message to user
"RTN","LRDPAREF",139,0)
 ; Call with X=error message code^error message text
"RTN","LRDPAREF",140,0)
 ;           Y=message prefix
"RTN","LRDPAREF",141,0)
 S X=Y_$P(LRSD("ERROR"),"^")_" - "_$P(LRSD("ERROR"),"^",2)
"RTN","LRDPAREF",142,0)
 D EN^DDIOL(X,"","!?5")
"RTN","LRDPAREF",143,0)
 Q
"RTN","LRORDB")
0^1^B11020862
"RTN","LRORDB",1,0)
LRORDB ;DALOI/FHS - ORDER LEDI TEST USING BARCODE FROM 69.6 ; 12/3/1997
"RTN","LRORDB",2,0)
 ;;5.2;LAB SERVICE;**153,222**;Sep 27, 1994
"RTN","LRORDB",3,0)
 ;
"RTN","LRORDB",4,0)
EN(LRRUID,LRSSMP) ;
"RTN","LRORDB",5,0)
 ;
"RTN","LRORDB",6,0)
 N LRSTATUS,LRX
"RTN","LRORDB",7,0)
 ;
"RTN","LRORDB",8,0)
 K LROT
"RTN","LRORDB",9,0)
 ;
"RTN","LRORDB",10,0)
 S (LROT,LRSTATUS)=""
"RTN","LRORDB",11,0)
 ;
"RTN","LRORDB",12,0)
 Q:'$L($G(LRRUID))!('$L($G(LRSSMP)))
"RTN","LRORDB",13,0)
 S LR696=$O(^LRO(69.6,"AD",LRSSMP,LRRUID,0)) Q:'LR696
"RTN","LRORDB",14,0)
 Q:'$D(^LRO(69.6,LR696,0))#2
"RTN","LRORDB",15,0)
 ;
"RTN","LRORDB",16,0)
 S LRX=+$P(^LRO(69.6,LR696,0),U,10)
"RTN","LRORDB",17,0)
 I LRX S LRSTATUS=$$GET1^DIQ(64.061,LRX_",",.01)
"RTN","LRORDB",18,0)
 I $L(LRSTATUS),LRSTATUS'="In-Transit" D  Q
"RTN","LRORDB",19,0)
 . N DA,DIR,DIC,DIRUT,DTOUT,DUOUT,DX,S,X,Y
"RTN","LRORDB",20,0)
 . S DIR("A",1)="This order has a status of [ "_LRSTATUS_" ]"
"RTN","LRORDB",21,0)
 . S DIR("A",2)="No test selected."
"RTN","LRORDB",22,0)
 . S DIR("A")="Would you like a display of the Order?"
"RTN","LRORDB",23,0)
 . S DIR(0)="Y" D ^DIR
"RTN","LRORDB",24,0)
 . I $D(DIROUT)!(Y'=1) W ! Q
"RTN","LRORDB",25,0)
 . S DA=LR696,DIC="^LRO(69.6,",S=0 W @IOF D EN^LRDIQ W !
"RTN","LRORDB",26,0)
 D LROT(LR696)
"RTN","LRORDB",27,0)
 I $O(LROT(0)) D LL3^LROW3
"RTN","LRORDB",28,0)
 I '$O(LROT(0)) D  Q
"RTN","LRORDB",29,0)
 . W !?5,"Found NO tests on Shipping Manifest "_$G(LRRSITE("SMID"))
"RTN","LRORDB",30,0)
 . W !,"For UID "_$G(LRRUID),!!
"RTN","LRORDB",31,0)
 S $P(^LRO(69.6,LR696,0),U,11)=$G(LRSD("RIEN"))
"RTN","LRORDB",32,0)
 Q
"RTN","LRORDB",33,0)
 ;
"RTN","LRORDB",34,0)
 ;
"RTN","LRORDB",35,0)
LROT(LR696) ;
"RTN","LRORDB",36,0)
 ;
"RTN","LRORDB",37,0)
 N LR60,LR6205,LR6964,LRATG,LRNLT,LRX,LRY,X
"RTN","LRORDB",38,0)
 ;
"RTN","LRORDB",39,0)
 K LROT
"RTN","LRORDB",40,0)
 ;
"RTN","LRORDB",41,0)
 S LR696(0)=$G(^LRO(69.6,LR696,0))
"RTN","LRORDB",42,0)
 S LRSPEC=+$P(LR696(0),U,7),LRSAMP=+$P(LR696(0),U,8) Q:'LRSPEC!('$D(^LAB(61,LRSPEC,0)))
"RTN","LRORDB",43,0)
 S LR6964=0
"RTN","LRORDB",44,0)
 F  S LR6964=+$O(^LRO(69.6,LR696,2,LR6964)) Q:LR6964<1  D
"RTN","LRORDB",45,0)
 . S LR6964(0)=$G(^LRO(69.6,LR696,2,LR6964,0))
"RTN","LRORDB",46,0)
 . I LR6964(0)="" Q
"RTN","LRORDB",47,0)
 . S LR60=$P(LR6964(0),U,11) ; Lab test to order
"RTN","LRORDB",48,0)
 . S LR6205=$P(LR6964(0),U,12) ; Urgency
"RTN","LRORDB",49,0)
 . S LRATG=0
"RTN","LRORDB",50,0)
 . ; If have everything, then don't check accession test group.
"RTN","LRORDB",51,0)
 . I LR60,LRSPEC,LRSAMP,LR6205 D  Q:LRATG
"RTN","LRORDB",52,0)
 . . S LR64=+$G(^LAB(60,LR60,64))
"RTN","LRORDB",53,0)
 . . I 'LR64 Q
"RTN","LRORDB",54,0)
 . . S LRNLT=$P($G(^LAM(LR64,0)),U,2),LRNLT(2)=$P($G(^LAM(LR64,0)),U)
"RTN","LRORDB",55,0)
 . . ; Find available spot.
"RTN","LRORDB",56,0)
 . . F LRATG=LRWPC+1:1 I '$D(LROT(LRSAMP,LRSPEC,LRATG)) S LRWPC=LRATG Q
"RTN","LRORDB",57,0)
 . . D CHKURG,SETLROT
"RTN","LRORDB",58,0)
 . S LRNLT=$P(LR6964(0),U,2) Q:'LRNLT
"RTN","LRORDB",59,0)
 . S LRNLT(1)=+$O(^LAM("C",LRNLT_" ",0))
"RTN","LRORDB",60,0)
 . I 'LRNLT(1)!('$D(^LAM(LRNLT(1),0))) Q
"RTN","LRORDB",61,0)
 . S LRNLT(2)=$P(^LAM(LRNLT(1),0),U),LR60=0
"RTN","LRORDB",62,0)
 . F  S LR60=+$O(^LAB(60,"AC",LRNLT(1),LR60)) Q:'LR60  D
"RTN","LRORDB",63,0)
 . . S LRATG=+$O(^TMP("LRSTIK",$J,"C",LR60,0)) Q:LRATG<1
"RTN","LRORDB",64,0)
 . . S LRATG(1)=$G(^TMP("LRSTIK",$J,LRATG)) Q:'LRATG(1)!('$P(LRATG(1),U,3))
"RTN","LRORDB",65,0)
 . . S:'$G(LRSAMP) LRSAMP=$P(LRATG(1),U,3)
"RTN","LRORDB",66,0)
 . . D CHKURG,SETLROT
"RTN","LRORDB",67,0)
 Q
"RTN","LRORDB",68,0)
 ;
"RTN","LRORDB",69,0)
 ;
"RTN","LRORDB",70,0)
SETLROT ; Setup LROT array
"RTN","LRORDB",71,0)
 ;
"RTN","LRORDB",72,0)
 S LROT(LRSAMP,LRSPEC,LRATG)=LR60
"RTN","LRORDB",73,0)
 S LROT(LRSAMP,LRSPEC,LRATG,1)=LR6205
"RTN","LRORDB",74,0)
 S LROT(LRSAMP,LRSPEC,LRATG,"B",LR60)=LR6964_U_LRNLT_U_LRNLT(2)
"RTN","LRORDB",75,0)
 ;
"RTN","LRORDB",76,0)
 ; Required comment
"RTN","LRORDB",77,0)
 S:$P($G(^LAB(60,LR60,0)),U,19) LROT(LRSAMP,LRSPEC,LRATG,2)=$P(^(0),U,19)
"RTN","LRORDB",78,0)
 ;
"RTN","LRORDB",79,0)
 Q
"RTN","LRORDB",80,0)
 ;
"RTN","LRORDB",81,0)
 ;
"RTN","LRORDB",82,0)
CHKURG ; Check for forced, highest allowed and missing urgency on this test
"RTN","LRORDB",83,0)
 ;
"RTN","LRORDB",84,0)
 N X
"RTN","LRORDB",85,0)
 ;
"RTN","LRORDB",86,0)
 ; Forced urgency
"RTN","LRORDB",87,0)
 I +$P(^LAB(60,LR60,0),U,18) S LR6205=+$P(^LAB(60,LR60,0),U,18)
"RTN","LRORDB",88,0)
 ;
"RTN","LRORDB",89,0)
 ; If missing urgency then look above workload urgencies for last urgency
"RTN","LRORDB",90,0)
 ; that matches on HL7 urgency othewise use site's default for routine.
"RTN","LRORDB",91,0)
 I 'LR6205 D
"RTN","LRORDB",92,0)
 . S X=$P(LR6964(0),U,5)
"RTN","LRORDB",93,0)
 . I $L(X) S LR6205=+$O(^LAB(62.05,"HL7",X,50),-1)
"RTN","LRORDB",94,0)
 . S LR6205=$S(LR6205>0:LR6205,1:LROUTINE)
"RTN","LRORDB",95,0)
 ;
"RTN","LRORDB",96,0)
 ; Highest urgency allowed, reset if higher than highest allowed.
"RTN","LRORDB",97,0)
 S X=+$P(^LAB(60,LR60,0),U,16)
"RTN","LRORDB",98,0)
 I LR6205<X S LR6205=X
"RTN","LRORDB",99,0)
 ;
"RTN","LRORDB",100,0)
 Q
"UP",69.6,69.64,-1)
69.6^2
"UP",69.6,69.64,0)
69.64
"VER")
8.0^22.0
"^DD",64.061,64.061,0)
FIELD^^11^12
"^DD",64.061,64.061,0,"DDA")
N
"^DD",64.061,64.061,0,"DT")
3010814
"^DD",64.061,64.061,0,"ID",7)
W "   ",@("$P($P($C(59)_$S($D(^DD(64.061,7,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,7)_"":"",2),$C(59),1)")
"^DD",64.061,64.061,0,"ID",8)
W "   ",$P(^(0),U,8)
"^DD",64.061,64.061,0,"IX","B",64.061,.01)

"^DD",64.061,64.061,0,"IX","C",64.061,.01)

"^DD",64.061,64.061,0,"IX","D",64.061,2)

"^DD",64.061,64.061,0,"IX","E",64.061,1)

"^DD",64.061,64.061,0,"IX","F",64.061,3)

"^DD",64.061,64.061,0,"IX","G",64.061,7)

"^DD",64.061,64.061,0,"IX","VR",64.061,.01)

"^DD",64.061,64.061,0,"NM","LAB ELECTRONIC CODES")

"^DD",64.061,64.061,0,"PT",61,.09)

"^DD",64.061,64.061,0,"PT",61,.0961)

"^DD",64.061,64.061,0,"PT",62.05,4)

"^DD",64.061,64.061,0,"PT",62.801,1.13)

"^DD",64.061,64.061,0,"PT",62.801,1.23)

"^DD",64.061,64.061,0,"PT",62.801,2.13)

"^DD",64.061,64.061,0,"PT",62.801,2.23)

"^DD",64.061,64.061,0,"PT",62.801,2.33)

"^DD",64.061,64.061,0,"PT",62.85,.05)

"^DD",64.061,64.061,0,"PT",62.9001,1.15)

"^DD",64.061,64.061,0,"PT",62.9001,1.25)

"^DD",64.061,64.061,0,"PT",62.9001,2.15)

"^DD",64.061,64.061,0,"PT",62.9001,2.25)

"^DD",64.061,64.061,0,"PT",62.9001,2.35)

"^DD",64.061,64.061,0,"PT",64,25.2)

"^DD",64.061,64.061,0,"PT",64,25.3)

"^DD",64.061,64.061,0,"PT",64.02,.01)

"^DD",64.061,64.061,0,"PT",64.02,1)

"^DD",64.061,64.061,0,"PT",69.6,6)

"^DD",64.061,64.061,0,"PT",69.64,5)

"^DD",64.061,64.061,0,"PT",95.3,1.5)

"^DD",64.061,64.061,0,"PT",95.3,1.6)

"^DD",64.061,64.061,0,"PT",95.3,1.7)

"^DD",64.061,64.061,0,"PT",95.3,2)

"^DD",64.061,64.061,0,"PT",95.3,3)

"^DD",64.061,64.061,0,"PT",95.3,3.1)

"^DD",64.061,64.061,0,"PT",95.3,4)

"^DD",64.061,64.061,0,"PT",95.3,5)

"^DD",64.061,64.061,0,"PT",95.3,7)

"^DD",64.061,64.061,0,"PT",95.3,10)

"^DD",64.061,64.061,0,"VRPK")
LR
"^DD",64.061,64.061,.01,0)
NAME^RFI^^0;1^K:$L(X)>60!($L(X)<1) X
"^DD",64.061,64.061,.01,1,0)
^.1
"^DD",64.061,64.061,.01,1,1,0)
64.061^B^MUMPS
"^DD",64.061,64.061,.01,1,1,1)
S ^LAB(64.061,"B",$E(X,1,60),DA)=""
"^DD",64.061,64.061,.01,1,1,2)
K ^LAB(64.061,"B",$E(X,1,60),DA)
"^DD",64.061,64.061,.01,1,1,"DT")
2991228
"^DD",64.061,64.061,.01,1,2,0)
64.061^C^MUMPS
"^DD",64.061,64.061,.01,1,2,1)
D UP^LRXREF S ^LAB(64.061,"C",X,DA)=""
"^DD",64.061,64.061,.01,1,2,2)
D UP^LRXREF K ^LAB(64.061,"C",X,DA)
"^DD",64.061,64.061,.01,1,2,"%D",0)
^^5^5^2991228^^
"^DD",64.061,64.061,.01,1,2,"%D",1,0)
This MUMPS cross reference stores the electronic code name in upper case
"^DD",64.061,64.061,.01,1,2,"%D",2,0)
and is used for look-up and sorting purposes.  The format for the cross
"^DD",64.061,64.061,.01,1,2,"%D",3,0)
reference stored is below.
"^DD",64.061,64.061,.01,1,2,"%D",4,0)
 
"^DD",64.061,64.061,.01,1,2,"%D",5,0)
   ^LAB(64.061,"C",Code Name in Upper Case,IEN) = ""
"^DD",64.061,64.061,.01,1,2,"DT")
2961205
"^DD",64.061,64.061,.01,1,3,0)
64.061^VR^MUMPS
"^DD",64.061,64.061,.01,1,3,1)
S ^LAB(64.061,"VR")=$G(^LAB(64.061,"VR"))
"^DD",64.061,64.061,.01,1,3,2)
Q
"^DD",64.061,64.061,.01,1,3,3)
This cross reference tracks version numbers
"^DD",64.061,64.061,.01,1,3,"%D",0)
^^1^1^3010102^
"^DD",64.061,64.061,.01,1,3,"%D",1,0)
This cross reference is set during file installation or updates.
"^DD",64.061,64.061,.01,1,3,"DT")
3010102
"^DD",64.061,64.061,.01,3)
Answer must be 1-60 characters in length.
"^DD",64.061,64.061,.01,"DEL",1,0)
I 1
"^DD",64.061,64.061,.01,"DT")
3010824
"^DD",64.061,64.061,1,0)
LOINC ABBR^FI^^0;2^K:$L(X)>55!($L(X)<1) X
"^DD",64.061,64.061,1,1,0)
^.1
"^DD",64.061,64.061,1,1,1,0)
64.061^E^MUMPS
"^DD",64.061,64.061,1,1,1,1)
S ^LAB(64.061,"E",X,DA)=""
"^DD",64.061,64.061,1,1,1,2)
K ^LAB(64.061,"E",X,DA)
"^DD",64.061,64.061,1,1,1,"DT")
2981009
"^DD",64.061,64.061,1,3)
Answer must be 1-55 characters in length.
"^DD",64.061,64.061,1,"DT")
3010824
"^DD",64.061,64.061,2,0)
HL7 ABBR^FI^^0;3^K:$L(X)>10!($L(X)<1) X
"^DD",64.061,64.061,2,1,0)
^.1
"^DD",64.061,64.061,2,1,1,0)
64.061^D
"^DD",64.061,64.061,2,1,1,1)
S ^LAB(64.061,"D",$E(X,1,30),DA)=""
"^DD",64.061,64.061,2,1,1,2)
K ^LAB(64.061,"D",$E(X,1,30),DA)
"^DD",64.061,64.061,2,1,1,"%D",0)
^^1^1^2970519^
"^DD",64.061,64.061,2,1,1,"%D",1,0)
Quick reference to find entry by the HL7 code
"^DD",64.061,64.061,2,1,1,"DT")
2970519
"^DD",64.061,64.061,2,3)
Answer must be 1-10 characters in length.
"^DD",64.061,64.061,2,"DT")
3010824
"^DD",64.061,64.061,3,0)
LAB ABBR^F^^0;4^K:$L(X)>10!($L(X)<1) X
"^DD",64.061,64.061,3,1,0)
^.1
"^DD",64.061,64.061,3,1,1,0)
64.061^F
"^DD",64.061,64.061,3,1,1,1)
S ^LAB(64.061,"F",$E(X,1,30),DA)=""
"^DD",64.061,64.061,3,1,1,2)
K ^LAB(64.061,"F",$E(X,1,30),DA)
"^DD",64.061,64.061,3,1,1,"%D",0)
^^1^1^2970616^
"^DD",64.061,64.061,3,1,1,"%D",1,0)
Quick reference to find entry by lab code.
"^DD",64.061,64.061,3,1,1,"DT")
2970616
"^DD",64.061,64.061,3,3)
Answer must be 1-10 characters in length.
"^DD",64.061,64.061,3,"DT")
2970708
"^DD",64.061,64.061,4,0)
ASSOCIATED FILES^64.614AV^^7;0
"^DD",64.061,64.061,5,0)
HL7 TABLE^F^^0;5^K:$L(X)>10!($L(X)<2) X
"^DD",64.061,64.061,5,3)
Answer must be 2-10 characters in length.
"^DD",64.061,64.061,5,"DT")
2980313
"^DD",64.061,64.061,6,0)
ATTRIBUTE^F^^0;6^K:$L(X)>30!($L(X)<1) X
"^DD",64.061,64.061,6,3)
Answer must be 1-30 characters in length.
"^DD",64.061,64.061,6,"DT")
3001113
"^DD",64.061,64.061,7,0)
TYPE^S^U:UPDATE/STATUS;S:SPECIMEN;P:PRIORITY;E:EVENT;M:MEASUREMENTS;G:GENERAL;C:CHALLENGE;PR:PROPERTY;A:ADJUSTMENT;^0;7^Q
"^DD",64.061,64.061,7,1,0)
^.1
"^DD",64.061,64.061,7,1,1,0)
64.061^G
"^DD",64.061,64.061,7,1,1,1)
S ^LAB(64.061,"G",$E(X,1,30),DA)=""
"^DD",64.061,64.061,7,1,1,2)
K ^LAB(64.061,"G",$E(X,1,30),DA)
"^DD",64.061,64.061,7,1,1,"%D",0)
^^1^1^2981008^
"^DD",64.061,64.061,7,1,1,"%D",1,0)
To check for correct entry according to type.
"^DD",64.061,64.061,7,1,1,"DT")
2981008
"^DD",64.061,64.061,7,"DT")
2981008
"^DD",64.061,64.061,8,0)
DESCRIPTION^F^^0;8^K:$L(X)>30!($L(X)<2) X
"^DD",64.061,64.061,8,3)
Answer must be 2-30 characters in length.
"^DD",64.061,64.061,8,"DT")
2970612
"^DD",64.061,64.061,9,0)
LOINC TABLE^NJ3,0^^0;9^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",64.061,64.061,9,3)
Type a Number between 0 and 200, 0 Decimal Digits
"^DD",64.061,64.061,9,21,0)
^^2^2^2990119^^
"^DD",64.061,64.061,9,21,1,0)
This field contains the number of the LOINC table from the
"^DD",64.061,64.061,9,21,2,0)
LOINC Users' Guide.
"^DD",64.061,64.061,9,"DT")
2980921
"^DD",64.061,64.061,10,0)
SUBTYPE^P64.062'^LAB(64.062,^0;10^Q
"^DD",64.061,64.061,10,1,0)
^.1
"^DD",64.061,64.061,10,1,1,0)
^^TRIGGER^64.061^11
"^DD",64.061,64.061,10,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^LAB(64.061,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y X ^DD(64.061,10,1,1,1.1) S DIH=$G(^LAB(64.061,DIV(0),0)),DIV=X S $P(^(0),U,11)=DIV,DIH=64.061,DIG=11 D ^DICR
"^DD",64.061,64.061,10,1,1,1.1)
S X=DIV S I(0,0)=$G(D0),D0=DIV S:'D0!'$D(^LAB(64.062,+D0,0)) D0=-1 S Y(101)=$S($D(^LAB(64.062,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0)
"^DD",64.061,64.061,10,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^LAB(64.061,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X="" S DIH=$G(^LAB(64.061,DIV(0),0)),DIV=X S $P(^(0),U,11)=DIV,DIH=64.061,DIG=11 D ^DICR
"^DD",64.061,64.061,10,1,1,"CREATE VALUE")
SUBTYPE:ABBR
"^DD",64.061,64.061,10,1,1,"DELETE VALUE")
@
"^DD",64.061,64.061,10,1,1,"FIELD")
`11
"^DD",64.061,64.061,10,21,0)
^^1^1^3001109^
"^DD",64.061,64.061,10,21,1,0)
This field is used to further define properties. Can be used as screen element.
"^DD",64.061,64.061,10,"DT")
3001109
"^DD",64.061,64.061,11,0)
SCREEN^FI^^0;11^K:$L(X)>3!($L(X)<1) X
"^DD",64.061,64.061,11,3)
Answer must be 1-3 characters in length
"^DD",64.061,64.061,11,5,1,0)
64.061^10^1
"^DD",64.061,64.061,11,21,0)
^^3^3^3001109^
"^DD",64.061,64.061,11,21,1,0)
This field contains a screen value triggered by SUBTYPE (#10) field. Look
"^DD",64.061,64.061,11,21,2,0)
can be done on this file by indicating how the returned value should be
"^DD",64.061,64.061,11,21,3,0)
screened.
"^DD",64.061,64.061,11,"DT")
3001109
"^DD",64.061,64.614,0)
ASSOCIATED FILES SUB-FIELD^^.01^1
"^DD",64.061,64.614,0,"DT")
2970108
"^DD",64.061,64.614,0,"IX","B",64.614,.01)

"^DD",64.061,64.614,0,"NM","ASSOCIATED FILES")

"^DD",64.061,64.614,0,"UP")
64.061
"^DD",64.061,64.614,.01,0)
ASSOCIATED FILES^V^^0;1^Q
"^DD",64.061,64.614,.01,1,0)
^.1
"^DD",64.061,64.614,.01,1,1,0)
64.614^B
"^DD",64.061,64.614,.01,1,1,1)
S ^LAB(64.061,DA(1),7,"B",$E(X,1,30),DA)=""
"^DD",64.061,64.614,.01,1,1,2)
K ^LAB(64.061,DA(1),7,"B",$E(X,1,30),DA)
"^DD",64.061,64.614,.01,1,1,3)
Required Index for Variable Pointer
"^DD",64.061,64.614,.01,"DT")
2970108
"^DD",64.061,64.614,.01,"V",0)
^.12P^2^2
"^DD",64.061,64.614,.01,"V",1,0)
61^Topography^1^LAB(61,^^n
"^DD",64.061,64.614,.01,"V",2,0)
62.05^Urgency^2^LAB(62.05,
"^DD",67,67,3,0)
Patient Name^V^^3;1^Q
"^DD",67,67,3,21,0)
^^3^3^2990719^^^
"^DD",67,67,3,21,1,0)
This field controls the sequence used to lookup of patient's demographic
"^DD",67,67,3,21,2,0)
information already stored in either ^DPT( or the ^LRT(67 files.
"^DD",67,67,3,21,3,0)
This field is used by LEDI patient accessioning software.
"^DD",67,67,3,"DT")
2970217
"^DD",67,67,3,"V",0)
^.12P^3^2
"^DD",67,67,3,"V",1,0)
2^Patient file entry^1^PAT
"^DD",67,67,3,"V",3,0)
67^Referral Patient^3^REF^^n
"^DD",69.6,69.6,11.1,0)
COLLECTION END DATE/TIME^D^^1;9^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",69.6,69.6,11.1,3)
Enter the date/time that the specimen collection ended.
"^DD",69.6,69.6,11.1,21,0)
^^3^3^3010425^
"^DD",69.6,69.6,11.1,21,1,0)
Used to record the collection end date/time of specimen collection
"^DD",69.6,69.6,11.1,21,2,0)
when the specimen has a timed collection, i.e. 24 hour urine,
"^DD",69.6,69.6,11.1,21,3,0)
72 hour stool, etc.
"^DD",69.6,69.6,11.1,"DT")
3010425
"^DD",69.6,69.6,700,0)
HL ENCODING CHARACTERS^F^^700;E1,5^K:$L(X)>5!($L(X)<1) X
"^DD",69.6,69.6,700,3)
Answer must be 1-5 characters in length
"^DD",69.6,69.6,700,10)
HL7 ORM order message
"^DD",69.6,69.6,700,21,0)
^^4^4^3010904^^^
"^DD",69.6,69.6,700,21,1,0)
Stores the HL7 field separator and encoding characters from the
"^DD",69.6,69.6,700,21,2,0)
HL7 message used to create this pending order entry. This allows
"^DD",69.6,69.6,700,21,3,0)
the HL7 data that is saved from the message to be processed and
"^DD",69.6,69.6,700,21,4,0)
returned to the placer.
"^DD",69.6,69.6,700,"DT")
3010904
"^DD",69.6,69.6,700.02,0)
HL PID-2^F^^700.02;E1,20^K:$L(X)>20!($L(X)<1) X
"^DD",69.6,69.6,700.02,3)
Answer must be 1-20 characters in length
"^DD",69.6,69.6,700.02,10)
HL7 ORM order message
"^DD",69.6,69.6,700.02,21,0)
^^2^2^3010904^^^
"^DD",69.6,69.6,700.02,21,1,0)
Stores the placer's patient identification information from PID-2
"^DD",69.6,69.6,700.02,21,2,0)
for transmittal back to the placer when the order is completed.
"^DD",69.6,69.6,700.02,"DT")
3010904
"^DD",69.6,69.6,700.04,0)
HL PID-4^F^^700.04;E1,20^K:$L(X)>20!($L(X)<1) X
"^DD",69.6,69.6,700.04,3)
Answer must be 1-20 characters in length.
"^DD",69.6,69.6,700.04,10)
HL7 ORM order message
"^DD",69.6,69.6,700.04,21,0)
^^2^2^3010831^^
"^DD",69.6,69.6,700.04,21,1,0)
Stores the placer's patient identification information from PID-4
"^DD",69.6,69.6,700.04,21,2,0)
for transmittal back to the placer when the order is completed. 
"^DD",69.6,69.6,700.04,"DT")
3010904
"^DD",69.6,69.64,4,0)
REMOTE URGENCY^F^^0;5^K:$L(X)>10!($L(X)<1) X
"^DD",69.6,69.64,4,3)
Answer must be 1-10 characters in length.
"^DD",69.6,69.64,4,10)
HL7 ORM order message
"^DD",69.6,69.64,4,21,0)
^^1^1^3010831^
"^DD",69.6,69.64,4,21,1,0)
Stores the HL7 test urgency from the placer's order message.
"^DD",69.6,69.64,4,"DT")
3010904
"^DD",69.6,69.64,11,0)
HOST TEST^P60'^LAB(60,^0;11^Q
"^DD",69.6,69.64,11,3)
Enter the host's laboratory test which corresponds to the remote's ordered test.
"^DD",69.6,69.64,11,21,0)
^^6^6^3010904^^^
"^DD",69.6,69.64,11,21,1,0)
This field stores the host's file 60 test which should be ordered
"^DD",69.6,69.64,11,21,2,0)
when processing referral lab orders. It's built by the LEDI software
"^DD",69.6,69.64,11,21,3,0)
when processing the HL7 ORM order message. Based on the test code
"^DD",69.6,69.64,11,21,4,0)
from the message and the corresponding shipping configuration 
"^DD",69.6,69.64,11,21,5,0)
associated with the placer, the appropriate host test is selected
"^DD",69.6,69.64,11,21,6,0)
and stored in this field.
"^DD",69.6,69.64,11,"DT")
3010904
"^DD",69.6,69.64,12,0)
HOST URGENCY^*P62.05'^LAB(62.05,^0;12^S DIC("S")="I Y<50" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",69.6,69.64,12,3)
Enter the urgency to order this test at the host site.
"^DD",69.6,69.64,12,12)
Only non-workload urgencies can be selected.
"^DD",69.6,69.64,12,12.1)
S DIC("S")="I Y<50"
"^DD",69.6,69.64,12,21,0)
^^5^5^3010904^^^^
"^DD",69.6,69.64,12,21,1,0)
This field stores the host's local urgency which should be used 
"^DD",69.6,69.64,12,21,2,0)
when processing referral lab orders. It's built by the LEDI software
"^DD",69.6,69.64,12,21,3,0)
when processing the HL7 ORM order message. Based on the HL7 urgency
"^DD",69.6,69.64,12,21,4,0)
from the message and the corresponding shipping configuration the
"^DD",69.6,69.64,12,21,5,0)
appropriate host urgency for the order is determined.
"^DD",69.6,69.64,12,"DT")
3010904
"^DD",69.6,69.64,13,0)
ORDERING PROVIDER^F^^1;1^K:$L(X)>40!($L(X)<1) X
"^DD",69.6,69.64,13,3)
Answer must be 1-40 characters in length.
"^DD",69.6,69.64,13,10)
HL7 ORM order message
"^DD",69.6,69.64,13,21,0)
^^3^3^3010904^^^
"^DD",69.6,69.64,13,21,1,0)
The name of the provider ordering this test. It is derived from
"^DD",69.6,69.64,13,21,2,0)
the HL7 ORM order message and contains the human readable name
"^DD",69.6,69.64,13,21,3,0)
of the ordering provider.
"^DD",69.6,69.64,13,"DT")
3010904
"^DD",69.6,69.64,700.04,0)
HL OBR-4^F^^700.04;E1,200^K:$L(X)>200!($L(X)<1) X
"^DD",69.6,69.64,700.04,.1)
UNIVERSAL SERVICE ID
"^DD",69.6,69.64,700.04,3)
Answer must be 1-200 characters in length
"^DD",69.6,69.64,700.04,10)
HL7 ORM order message
"^DD",69.6,69.64,700.04,21,0)
^^1^1^3010904^^^
"^DD",69.6,69.64,700.04,21,1,0)
The placer's specimen identifier from the HL7 ORM order message.
"^DD",69.6,69.64,700.04,"DT")
3010904
"^DD",69.6,69.64,700.18,0)
HL OBR-18^F^^700.18;E1,60^K:$L(X)>60!($L(X)<1) X
"^DD",69.6,69.64,700.18,.1)
PLACER FIELD 1
"^DD",69.6,69.64,700.18,3)
Answer must be 1-60 characters in length
"^DD",69.6,69.64,700.18,10)
HL7 ORM order message
"^DD",69.6,69.64,700.18,21,0)
^^5^5^3010904^^
"^DD",69.6,69.64,700.18,21,1,0)
Stores the placer's field #1 from the OBR segment of the HL7
"^DD",69.6,69.64,700.18,21,2,0)
ORM order message. This field is returned to the placer when
"^DD",69.6,69.64,700.18,21,3,0)
the HL7 ORU result message is created and transmitted to
"^DD",69.6,69.64,700.18,21,4,0)
the placer. The HL7 standard requires that the filler of an
"^DD",69.6,69.64,700.18,21,5,0)
order return to the placer the value of this field.
"^DD",69.6,69.64,700.18,"DT")
3010904
"^DD",69.6,69.64,700.19,0)
HL OBR-19^F^^700.19;E1,60^K:$L(X)>60!($L(X)<1) X
"^DD",69.6,69.64,700.19,.1)
PLACER FIELD 2
"^DD",69.6,69.64,700.19,3)
Answer must be 1-60 characters in length
"^DD",69.6,69.64,700.19,10)
HL7 ORM order message
"^DD",69.6,69.64,700.19,21,0)
^^5^5^3010904^^
"^DD",69.6,69.64,700.19,21,1,0)
Stores the placer's field #2 from the OBR segment of the HL7
"^DD",69.6,69.64,700.19,21,2,0)
ORM order message. This field is returned to the placer when
"^DD",69.6,69.64,700.19,21,3,0)
the HL7 ORU result message is created and transmitted to
"^DD",69.6,69.64,700.19,21,4,0)
the placer. The HL7 standard requires that the filler of an
"^DD",69.6,69.64,700.19,21,5,0)
order return to the placer the value of this field.
"^DD",69.6,69.64,700.19,"DT")
3010904
"^DIC",64.061,64.061,0)
LAB ELECTRONIC CODES^64.061
"^DIC",64.061,64.061,0,"GL")
^LAB(64.061,
"^DIC",64.061,64.061,"%",0)
^1.005^^0
"^DIC",64.061,64.061,"%D",0)
^^7^7^2980917^^
"^DIC",64.061,64.061,"%D",1,0)
Lab Electronic Codes file contains a collection of codes used in
"^DIC",64.061,64.061,"%D",2,0)
electronic messaging. Some of these codes originated in established
"^DIC",64.061,64.061,"%D",3,0)
recognized sources (i.e. HL7 tables). Other codes are unique to the
"^DIC",64.061,64.061,"%D",4,0)
laboratory package needs or requirements.
"^DIC",64.061,64.061,"%D",5,0)
 
"^DIC",64.061,64.061,"%D",6,0)
This file is a standard file for many types of terms used in electronic
"^DIC",64.061,64.061,"%D",7,0)
messaging.
"^DIC",64.061,"B","LAB ELECTRONIC CODES",64.061)

**END**
**END**
