Released KMPD*2*3 SEQ #3
Extracted from mail message
**KIDS**:KMPD*2.0*3^

**INSTALL NAME**
KMPD*2.0*3
"BLD",6020,0)
KMPD*2.0*3^CAPACITY MANAGEMENT TOOLS^0^3050503^y
"BLD",6020,1,0)
^^1^1^3050209^
"BLD",6020,1,1,0)
Patch KMPD*2*3
"BLD",6020,4,0)
^9.64PA^^
"BLD",6020,"KRN",0)
^9.67PA^8989.52^19
"BLD",6020,"KRN",.4,0)
.4
"BLD",6020,"KRN",.401,0)
.401
"BLD",6020,"KRN",.402,0)
.402
"BLD",6020,"KRN",.403,0)
.403
"BLD",6020,"KRN",.5,0)
.5
"BLD",6020,"KRN",.84,0)
.84
"BLD",6020,"KRN",3.6,0)
3.6
"BLD",6020,"KRN",3.8,0)
3.8
"BLD",6020,"KRN",9.2,0)
9.2
"BLD",6020,"KRN",9.8,0)
9.8
"BLD",6020,"KRN",9.8,"NM",0)
^9.68A^10^9
"BLD",6020,"KRN",9.8,"NM",1,0)
KMPDSS^^0^B5601421
"BLD",6020,"KRN",9.8,"NM",2,0)
KMPDSSA^^1^
"BLD",6020,"KRN",9.8,"NM",3,0)
KMPDUTL^^0^B11094485
"BLD",6020,"KRN",9.8,"NM",5,0)
KMPDSSD^^0^B78192650
"BLD",6020,"KRN",9.8,"NM",6,0)
KMPDSSR^^0^B16217057
"BLD",6020,"KRN",9.8,"NM",7,0)
KMPDSSS^^0^B37207871
"BLD",6020,"KRN",9.8,"NM",8,0)
KMPDUTL1^^0^B28456598
"BLD",6020,"KRN",9.8,"NM",9,0)
KMPDSS1^^0^B4453794
"BLD",6020,"KRN",9.8,"NM",10,0)
KMPDSSD1^^0^B9539619
"BLD",6020,"KRN",9.8,"NM","B","KMPDSS",1)

"BLD",6020,"KRN",9.8,"NM","B","KMPDSS1",9)

"BLD",6020,"KRN",9.8,"NM","B","KMPDSSA",2)

"BLD",6020,"KRN",9.8,"NM","B","KMPDSSD",5)

"BLD",6020,"KRN",9.8,"NM","B","KMPDSSD1",10)

"BLD",6020,"KRN",9.8,"NM","B","KMPDSSR",6)

"BLD",6020,"KRN",9.8,"NM","B","KMPDSSS",7)

"BLD",6020,"KRN",9.8,"NM","B","KMPDUTL",3)

"BLD",6020,"KRN",9.8,"NM","B","KMPDUTL1",8)

"BLD",6020,"KRN",19,0)
19
"BLD",6020,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",6020,"KRN",19,"NM",1,0)
KMPD STATUS^^0
"BLD",6020,"KRN",19,"NM","B","KMPD STATUS",1)

"BLD",6020,"KRN",19.1,0)
19.1
"BLD",6020,"KRN",101,0)
101
"BLD",6020,"KRN",409.61,0)
409.61
"BLD",6020,"KRN",409.61,"NM",0)
^9.68A^1^1
"BLD",6020,"KRN",409.61,"NM",1,0)
KMPD STATUS^^0
"BLD",6020,"KRN",409.61,"NM","B","KMPD STATUS",1)

"BLD",6020,"KRN",771,0)
771
"BLD",6020,"KRN",870,0)
870
"BLD",6020,"KRN",8989.51,0)
8989.51
"BLD",6020,"KRN",8989.52,0)
8989.52
"BLD",6020,"KRN",8994,0)
8994
"BLD",6020,"KRN","B",.4,.4)

"BLD",6020,"KRN","B",.401,.401)

"BLD",6020,"KRN","B",.402,.402)

"BLD",6020,"KRN","B",.403,.403)

"BLD",6020,"KRN","B",.5,.5)

"BLD",6020,"KRN","B",.84,.84)

"BLD",6020,"KRN","B",3.6,3.6)

"BLD",6020,"KRN","B",3.8,3.8)

"BLD",6020,"KRN","B",9.2,9.2)

"BLD",6020,"KRN","B",9.8,9.8)

"BLD",6020,"KRN","B",19,19)

"BLD",6020,"KRN","B",19.1,19.1)

"BLD",6020,"KRN","B",101,101)

"BLD",6020,"KRN","B",409.61,409.61)

"BLD",6020,"KRN","B",771,771)

"BLD",6020,"KRN","B",870,870)

"BLD",6020,"KRN","B",8989.51,8989.51)

"BLD",6020,"KRN","B",8989.52,8989.52)

"BLD",6020,"KRN","B",8994,8994)

"BLD",6020,"QUES",0)
^9.62^^
"BLD",6020,"REQB",0)
^9.611^1^1
"BLD",6020,"REQB",1,0)
KMPD*2.0*2^1
"BLD",6020,"REQB","B","KMPD*2.0*2",1)

"KRN",19,18204,-1)
0^1
"KRN",19,18204,0)
KMPD STATUS^CP Environment Check^^R^^^^^^^^CAPACITY MANAGEMENT TOOLS
"KRN",19,18204,1,0)
^^2^2^3020220^
"KRN",19,18204,1,1,0)
This option displays the status of the [KMPD BACKGROUND DRIVER] option, 
"KRN",19,18204,1,2,0)
and information on the CM HL7 DATA file (#8973.1).
"KRN",19,18204,25)
EN^KMPDSS
"KRN",19,18204,"U")
CP ENVIRONMENT CHECK
"KRN",409.61,598,-1)
0^1
"KRN",409.61,598,0)
KMPD STATUS^2^^80^5^21^0^1^^^KMPD STATUS^1^^1
"KRN",409.61,598,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,598,"FNL")
D EXIT^KMPDSS1
"KRN",409.61,598,"HDR")
D HDR^KMPDSS1
"KRN",409.61,598,"HLP")
D HELP^KMPDSS1
"KRN",409.61,598,"INIT")
D INIT^KMPDSS1
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",556,-1)
1^1
"PKG",556,0)
CAPACITY MANAGEMENT TOOLS^KMPD^Capacity Management Tools
"PKG",556,22,0)
^9.49I^1^1
"PKG",556,22,1,0)
2.0^3040331^3040315^10292
"PKG",556,22,1,"PAH",1,0)
3^3050503^10292
"PKG",556,22,1,"PAH",1,1,0)
^^1^1^3050503
"PKG",556,22,1,"PAH",1,1,1,0)
Patch KMPD*2*3
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","KMPDSS")
0^1^B5601421
"RTN","KMPDSS",1,0)
KMPDSS ;OAK/RAK - CM Tools Status ;2/14/05  10:43
"RTN","KMPDSS",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**3**;Mar 22, 2002
"RTN","KMPDSS",3,0)
 ;
"RTN","KMPDSS",4,0)
EN ;-entry point
"RTN","KMPDSS",5,0)
 ;
"RTN","KMPDSS",6,0)
 N DIR,OUT,X,Y
"RTN","KMPDSS",7,0)
 ;
"RTN","KMPDSS",8,0)
 S OUT=0
"RTN","KMPDSS",9,0)
 F  D  Q:OUT
"RTN","KMPDSS",10,0)
 .D HDR^KMPDUTL4(" Check Capacity Planning Environment ")
"RTN","KMPDSS",11,0)
 .S DIR(0)="SO^H:HL7;R:RUM;S:SAGG;T:Timing"
"RTN","KMPDSS",12,0)
 .W !! D ^DIR I Y=""!(Y="^") SET OUT=1 Q
"RTN","KMPDSS",13,0)
 .D DISPLAY^KMPDSS1(Y_"^"_Y(0))
"RTN","KMPDSS",14,0)
 ;
"RTN","KMPDSS",15,0)
 Q
"RTN","KMPDSS",16,0)
 ;
"RTN","KMPDSS",17,0)
VERDSPL(KMPDPKG) ;--display routine version info
"RTN","KMPDSS",18,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDSS",19,0)
 ; KMPDPKG... CM Package:
"RTN","KMPDSS",20,0)
 ;            "D" - CM Tools
"RTN","KMPDSS",21,0)
 ;            "R" - RUM
"RTN","KMPDSS",22,0)
 ;            "S" - SAGG
"RTN","KMPDSS",23,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDSS",24,0)
 Q:$G(KMPDPKG)=""
"RTN","KMPDSS",25,0)
 Q:KMPDPKG'="D"&(KMPDPKG'="R")&(KMPDPKG'="S")
"RTN","KMPDSS",26,0)
 N I,X
"RTN","KMPDSS",27,0)
 ; routine check
"RTN","KMPDSS",28,0)
 D VERPTCH^KMPDUTL1(KMPDPKG,.X)
"RTN","KMPDSS",29,0)
 W !?5,$S(KMPDPKG="D":"CM TOOLS",KMPDPKG="R":"RUM",1:"SAGG")
"RTN","KMPDSS",30,0)
 W " routines",$$REPEAT^XLFSTR(".",28-$X),": "
"RTN","KMPDSS",31,0)
 I '$P($G(X(0)),U,3) W "No Problems"
"RTN","KMPDSS",32,0)
 E  D 
"RTN","KMPDSS",33,0)
 .W !?20,"Current Version",?55,"Should be"
"RTN","KMPDSS",34,0)
 .S I=0 F  S I=$O(X(I)) Q:I=""  I $P(X(I),U) D 
"RTN","KMPDSS",35,0)
 ..W !?3,I,?20,$P(X(I),U,4)
"RTN","KMPDSS",36,0)
 ..W:$P(X(I),U,5)]"" " - ",$P(X(I),U,5)
"RTN","KMPDSS",37,0)
 ..W ?55,$P(X(I),U,2)
"RTN","KMPDSS",38,0)
 ..W:$P(X(I),U,3)]"" " - ",$P(X(I),U,3)
"RTN","KMPDSS",39,0)
 Q
"RTN","KMPDSS",40,0)
 ;
"RTN","KMPDSS",41,0)
PRM ;-- edit parameters file
"RTN","KMPDSS",42,0)
 ;
"RTN","KMPDSS",43,0)
 N DDSFILE,DR,DA
"RTN","KMPDSS",44,0)
 ;
"RTN","KMPDSS",45,0)
 S DA=$O(^KMPD(8973,0)) Q:'DA
"RTN","KMPDSS",46,0)
 S DDSFILE=8973,DR="[KMPD PARAMETERS EDIT]" D ^DDS
"RTN","KMPDSS",47,0)
 ;
"RTN","KMPDSS",48,0)
 Q
"RTN","KMPDSS",49,0)
 ;
"RTN","KMPDSS",50,0)
SST ;-- start/stop coversheet collection
"RTN","KMPDSS",51,0)
 ; check for cprs patch
"RTN","KMPDSS",52,0)
 I '$$PATCH^XPDUTL("OR*3.0*209") D  Q
"RTN","KMPDSS",53,0)
 .W !! D EN^DDIOL($C(7)_"*** Patch OR*3.0*209 must be installed for CPRS Timing data to be collected ***")
"RTN","KMPDSS",54,0)
 ;
"RTN","KMPDSS",55,0)
 N DIR,STAT,X,Y
"RTN","KMPDSS",56,0)
 S STAT=$G(^KMPTMP("KMPD-CPRS"))
"RTN","KMPDSS",57,0)
 W !!!,"Timing Collection is currently [ ",$S(STAT:"Running",1:"STOPPED")," ]",!
"RTN","KMPDSS",58,0)
 S DIR(0)="YO",DIR("B")="N"
"RTN","KMPDSS",59,0)
 S DIR("A")="Do you want to '"_$S(STAT:"Stop",1:"Start")_"' the collection"
"RTN","KMPDSS",60,0)
 D ^DIR Q:'Y
"RTN","KMPDSS",61,0)
 S ^KMPTMP("KMPD-CPRS")=$S(STAT:"",1:1)
"RTN","KMPDSS",62,0)
 W !!,"Timing Collection has been [ ",$S(STAT:"STOPPED",1:"Started")," ]"
"RTN","KMPDSS",63,0)
 Q
"RTN","KMPDSS1")
0^9^B4453794
"RTN","KMPDSS1",1,0)
KMPDSS1 ;OAK/RAK - CP Status ;2/14/05  10:49
"RTN","KMPDSS1",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**3**;Mar 22, 2002
"RTN","KMPDSS1",3,0)
 ;
"RTN","KMPDSS1",4,0)
DISPLAY(KMPDAPP) ;-display environment data
"RTN","KMPDSS1",5,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSS1",6,0)
 ; KMPDAPP... CP application
"RTN","KMPDSS1",7,0)
 ;             H^HL7
"RTN","KMPDSS1",8,0)
 ;             R^RUM
"RTN","KMPDSS1",9,0)
 ;             S^SAGG
"RTN","KMPDSS1",10,0)
 ;             T^TIMING
"RTN","KMPDSS1",11,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSS1",12,0)
 ;
"RTN","KMPDSS1",13,0)
 Q:$G(KMPDAPP)=""
"RTN","KMPDSS1",14,0)
 Q:"HRST"'[$P(KMPDAPP,U)
"RTN","KMPDSS1",15,0)
 ;
"RTN","KMPDSS1",16,0)
 S KMPDNMSP=$P(KMPDAPP,U) Q:KMPDNMSP=""
"RTN","KMPDSS1",17,0)
 S KMPDTITL=$P(KMPDAPP,U,2)
"RTN","KMPDSS1",18,0)
 ;
"RTN","KMPDSS1",19,0)
 D EN^VALM("KMPD STATUS")
"RTN","KMPDSS1",20,0)
 ;
"RTN","KMPDSS1",21,0)
 Q
"RTN","KMPDSS1",22,0)
 ;
"RTN","KMPDSS1",23,0)
HDR ; -- header code
"RTN","KMPDSS1",24,0)
 ;
"RTN","KMPDSS1",25,0)
 Q:$G(KMPDNMSP)=""
"RTN","KMPDSS1",26,0)
 ;
"RTN","KMPDSS1",27,0)
 N ROUTINE,TEXT,VERSION
"RTN","KMPDSS1",28,0)
 ;
"RTN","KMPDSS1",29,0)
 S ROUTINE="KMP"_$S(KMPDNMSP="H"!(KMPDNMSP="T"):"D",1:KMPDNMSP)_"UTL"
"RTN","KMPDSS1",30,0)
 ;
"RTN","KMPDSS1",31,0)
 ; version data
"RTN","KMPDSS1",32,0)
 ; if sagg
"RTN","KMPDSS1",33,0)
 I $P(KMPDNMSP,U)="S" D 
"RTN","KMPDSS1",34,0)
 .S VERSION="" S X="KMPSUTL" X ^%ZOSF("TEST") Q:'$T
"RTN","KMPDSS1",35,0)
 .S VERSION=$P($T(+2^KMPSUTL),";",3)_"^"_$P($T(+2^KMPSUTL),";",5)
"RTN","KMPDSS1",36,0)
 ; all others
"RTN","KMPDSS1",37,0)
 E  S @("VERSION=$$VERSION^"_ROUTINE)
"RTN","KMPDSS1",38,0)
 ;
"RTN","KMPDSS1",39,0)
 ; header text
"RTN","KMPDSS1",40,0)
 S TEXT="Environment Check for "_$G(KMPDTITL)
"RTN","KMPDSS1",41,0)
 S TEXT=$J(" ",IOM-$L(TEXT)\2)_TEXT
"RTN","KMPDSS1",42,0)
 S VALMHDR(1)=TEXT
"RTN","KMPDSS1",43,0)
 S TEXT=$$PKG($P(KMPDNMSP,U))_" v"_$P(VERSION,U)_" "_$P(VERSION,U,2)
"RTN","KMPDSS1",44,0)
 S TEXT=$J(" ",IOM-$L(TEXT)\2)_TEXT
"RTN","KMPDSS1",45,0)
 S VALMHDR(2)=TEXT
"RTN","KMPDSS1",46,0)
 ;
"RTN","KMPDSS1",47,0)
 Q
"RTN","KMPDSS1",48,0)
 ;
"RTN","KMPDSS1",49,0)
INIT ; -- init variables and list array
"RTN","KMPDSS1",50,0)
 ;
"RTN","KMPDSS1",51,0)
 Q:$G(KMPDNMSP)=""
"RTN","KMPDSS1",52,0)
 ;
"RTN","KMPDSS1",53,0)
 N ROUTINE
"RTN","KMPDSS1",54,0)
 ;
"RTN","KMPDSS1",55,0)
 S ROUTINE="FORMAT^KMPDSS"_$S(KMPDNMSP="H"!(KMPDNMSP="T"):"D",1:KMPDNMSP)_"(.VALMCNT)"
"RTN","KMPDSS1",56,0)
 ;
"RTN","KMPDSS1",57,0)
 D @(ROUTINE)
"RTN","KMPDSS1",58,0)
 ;
"RTN","KMPDSS1",59,0)
 ;D FORMAT^KMPRSSA(.VALMCNT)
"RTN","KMPDSS1",60,0)
 ;
"RTN","KMPDSS1",61,0)
 Q
"RTN","KMPDSS1",62,0)
 ;
"RTN","KMPDSS1",63,0)
HELP ; -- help code
"RTN","KMPDSS1",64,0)
 ;
"RTN","KMPDSS1",65,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","KMPDSS1",66,0)
 ;
"RTN","KMPDSS1",67,0)
 Q
"RTN","KMPDSS1",68,0)
 ;
"RTN","KMPDSS1",69,0)
EXIT ; -- exit code
"RTN","KMPDSS1",70,0)
 ;
"RTN","KMPDSS1",71,0)
 K @VALMAR
"RTN","KMPDSS1",72,0)
 ;
"RTN","KMPDSS1",73,0)
 Q
"RTN","KMPDSS1",74,0)
 ;
"RTN","KMPDSS1",75,0)
EXPND ; -- expand code
"RTN","KMPDSS1",76,0)
 ;
"RTN","KMPDSS1",77,0)
 Q
"RTN","KMPDSS1",78,0)
 ;
"RTN","KMPDSS1",79,0)
PKG(KMPDNM) ;-- extrinsic function - return package name
"RTN","KMPDSS1",80,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSS1",81,0)
 ; KMPDNM... H - HL7
"RTN","KMPDSS1",82,0)
 ;           R - RUM
"RTN","KMPDSS1",83,0)
 ;           S - SAGG
"RTN","KMPDSS1",84,0)
 ;           T - Timing
"RTN","KMPDSS1",85,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSS1",86,0)
 ;
"RTN","KMPDSS1",87,0)
 Q:$G(KMPDNM)="" ""
"RTN","KMPDSS1",88,0)
 Q:"HRST"'[KMPDNM ""
"RTN","KMPDSS1",89,0)
 ;
"RTN","KMPDSS1",90,0)
 N IEN,NMSP
"RTN","KMPDSS1",91,0)
 ;
"RTN","KMPDSS1",92,0)
 S NMSP="KMP"_$S(KMPDNM="H"!(KMPDNM="T"):"D",1:KMPDNM)
"RTN","KMPDSS1",93,0)
 S IEN=$O(^DIC(9.4,"C",NMSP,0))
"RTN","KMPDSS1",94,0)
 Q $P($G(^DIC(9.4,+IEN,0)),U)
"RTN","KMPDSSA")
1^2
"RTN","KMPDSSD")
0^5^B78192650
"RTN","KMPDSSD",1,0)
KMPDSSD ;OAK/RAK - CM Tools Status ;2/14/05  11:42
"RTN","KMPDSSD",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**3**;Mar 22, 2002
"RTN","KMPDSSD",3,0)
 ;
"RTN","KMPDSSD",4,0)
FORMAT(KMPDLN) ;-format text for display
"RTN","KMPDSSD",5,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSD",6,0)
 ; KMPDLN.... return number of lines - called by reference
"RTN","KMPDSSD",7,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSD",8,0)
 ;
"RTN","KMPDSSD",9,0)
 Q:$G(KMPDNMSP)=""
"RTN","KMPDSSD",10,0)
 ;
"RTN","KMPDSSD",11,0)
 N LN,VERSION,X S LN=0 K TMP
"RTN","KMPDSSD",12,0)
 ;
"RTN","KMPDSSD",13,0)
 ; if no kmpdutl routine
"RTN","KMPDSSD",14,0)
 S X="KMPDUTL" X ^%ZOSF("TEST") I '$T D  Q
"RTN","KMPDSSD",15,0)
 .S LN=LN+1
"RTN","KMPDSSD",16,0)
 .D SET^VALM10(LN,"The CM Tools Package is not installed!")
"RTN","KMPDSSD",17,0)
 ;
"RTN","KMPDSSD",18,0)
 ; version data
"RTN","KMPDSSD",19,0)
 S VERSION=$$VERSION^KMPDUTL
"RTN","KMPDSSD",20,0)
 ;
"RTN","KMPDSSD",21,0)
 ; option data
"RTN","KMPDSSD",22,0)
 D OPT("KMPD BACKGROUND DRIVER")
"RTN","KMPDSSD",23,0)
 ;
"RTN","KMPDSSD",24,0)
 ; bacground data
"RTN","KMPDSSD",25,0)
 D BKGRND
"RTN","KMPDSSD",26,0)
 ;
"RTN","KMPDSSD",27,0)
 ; file data
"RTN","KMPDSSD",28,0)
 D FILES
"RTN","KMPDSSD",29,0)
 ;
"RTN","KMPDSSD",30,0)
 ; routine version check
"RTN","KMPDSSD",31,0)
 D ROUCHK^KMPDSSD1("D")
"RTN","KMPDSSD",32,0)
 ;
"RTN","KMPDSSD",33,0)
 ; node/cpu data
"RTN","KMPDSSD",34,0)
 D CPU^KMPDSSD1
"RTN","KMPDSSD",35,0)
 ;
"RTN","KMPDSSD",36,0)
 ; mailgroup members
"RTN","KMPDSSD",37,0)
 D MGRP^KMPDSSD1
"RTN","KMPDSSD",38,0)
 ;
"RTN","KMPDSSD",39,0)
 ; legend
"RTN","KMPDSSD",40,0)
 D LEGEND
"RTN","KMPDSSD",41,0)
 ;
"RTN","KMPDSSD",42,0)
 S KMPDLN=LN
"RTN","KMPDSSD",43,0)
 ;
"RTN","KMPDSSD",44,0)
 Q
"RTN","KMPDSSD",45,0)
 ;
"RTN","KMPDSSD",46,0)
BKGRND ; hl7 background info
"RTN","KMPDSSD",47,0)
 ;
"RTN","KMPDSSD",48,0)
 N DATA,DELTA,ENDT,I,STAT,STDT,Z
"RTN","KMPDSSD",49,0)
 ;
"RTN","KMPDSSD",50,0)
 D PARAMS^KMPDUT("DATA") Q:'$D(DATA)
"RTN","KMPDSSD",51,0)
 S DATA(3)=$G(DATA(3)),DATA(4)=$G(DATA(4))
"RTN","KMPDSSD",52,0)
 S STDT=$P(DATA(3),U,5),ENDT=$P(DATA(3),U,6),DELTA=$P(DATA(3),U,7)
"RTN","KMPDSSD",53,0)
 S:$E(DELTA)=" " $E(DELTA)="0"
"RTN","KMPDSSD",54,0)
 ; if hl7
"RTN","KMPDSSD",55,0)
 I KMPDNMSP="H" D 
"RTN","KMPDSSD",56,0)
 .S LN=LN+1
"RTN","KMPDSSD",57,0)
 .D SET^VALM10(LN,"")
"RTN","KMPDSSD",58,0)
 .S LN=LN+1
"RTN","KMPDSSD",59,0)
 .D SET^VALM10(LN,"   Hl7 Dly Bckgrnd Last Start.. "_$$FMTE^XLFDT(STDT))
"RTN","KMPDSSD",60,0)
 .S LN=LN+1
"RTN","KMPDSSD",61,0)
 .D SET^VALM10(LN,"   HL7 Dly Bckgrnd Last Stop... "_$$FMTE^XLFDT(ENDT))
"RTN","KMPDSSD",62,0)
 .S LN=LN+1
"RTN","KMPDSSD",63,0)
 .D SET^VALM10(LN,"   HL7 Dly Bkgrnd Total Time... "_DELTA)
"RTN","KMPDSSD",64,0)
 .S STDT=$P(DATA(3),U,8),ENDT=$P(DATA(3),U,9),DELTA=$P(DATA(3),U,10)
"RTN","KMPDSSD",65,0)
 .S:$E(DELTA)=" " $E(DELTA)="0"
"RTN","KMPDSSD",66,0)
 .S LN=LN+1
"RTN","KMPDSSD",67,0)
 .D SET^VALM10(LN,"")
"RTN","KMPDSSD",68,0)
 .S LN=LN+1
"RTN","KMPDSSD",69,0)
 .D SET^VALM10(LN,"   HL7 Wkly Backgrnd Last Start "_$$FMTE^XLFDT(STDT))
"RTN","KMPDSSD",70,0)
 .S LN=LN+1
"RTN","KMPDSSD",71,0)
 .D SET^VALM10(LN,"   HL7 Wkly Bckgrnd Last Stop.. "_$$FMTE^XLFDT(ENDT))
"RTN","KMPDSSD",72,0)
 .S LN=LN+1
"RTN","KMPDSSD",73,0)
 .D SET^VALM10(LN,"   HL7 Wkly Bckgrnd Total Time. "_DELTA)
"RTN","KMPDSSD",74,0)
 .S LN=LN+1
"RTN","KMPDSSD",75,0)
 .D SET^VALM10(LN,"   HL7 Purge Data After........ "_$P(DATA(3),U,11)_" weeks")
"RTN","KMPDSSD",76,0)
 .D TRANSTO^KMPDUTL7(1,3,.Z)
"RTN","KMPDSSD",77,0)
 .I '$D(Z) S LN=LN+1 D SET^VALM10(LN,"   HL7 Transmit Data to........ <>")
"RTN","KMPDSSD",78,0)
 .E  D 
"RTN","KMPDSSD",79,0)
 ..S I=$O(Z("")) I I'="" S LN=LN+1 D SET^VALM10(LN,"   HL7 Transmit Data to........ "_I)
"RTN","KMPDSSD",80,0)
 ..F  S I=$O(Z(I)) Q:I=""  S LN=LN+1 D SET^VALM10(LN,$J(" ",32)_I)
"RTN","KMPDSSD",81,0)
 .S LN=LN+1
"RTN","KMPDSSD",82,0)
 .D SET^VALM10(LN,"")
"RTN","KMPDSSD",83,0)
 ;
"RTN","KMPDSSD",84,0)
 ; timing background info - if available
"RTN","KMPDSSD",85,0)
 I KMPDNMSP="T" D 
"RTN","KMPDSSD",86,0)
 .S LN=LN+1
"RTN","KMPDSSD",87,0)
 .D SET^VALM10(LN,"")
"RTN","KMPDSSD",88,0)
 .I '$D(DATA(4)) S LN=LN+1 D SET^VALM10(LN,"   There is no Timing data to report") Q
"RTN","KMPDSSD",89,0)
 .S STAT=$G(^KMPTMP("KMPD-CPRS"))
"RTN","KMPDSSD",90,0)
 .S LN=LN+1
"RTN","KMPDSSD",91,0)
 .D SET^VALM10(LN,"   TMG Collection Status....... "_$S(STAT:"Running",1:"STOPPED!"))
"RTN","KMPDSSD",92,0)
 .S STDT=$P(DATA(4),U,5),ENDT=$P(DATA(4),U,6),DELTA=$P(DATA(4),U,7)
"RTN","KMPDSSD",93,0)
 .S:$E(DELTA)=" " $E(DELTA)="0"
"RTN","KMPDSSD",94,0)
 .S LN=LN+1
"RTN","KMPDSSD",95,0)
 .D SET^VALM10(LN,"   TMG Dly Bckgrnd Last Start.. "_$$FMTE^XLFDT(STDT))
"RTN","KMPDSSD",96,0)
 .S LN=LN+1
"RTN","KMPDSSD",97,0)
 .D SET^VALM10(LN,"   TMG Dly Bckgrnd Last Stop... "_$$FMTE^XLFDT(ENDT))
"RTN","KMPDSSD",98,0)
 .S LN=LN+1
"RTN","KMPDSSD",99,0)
 .D SET^VALM10(LN,"   TMG Dly Bkgrnd Total Time... "_DELTA)
"RTN","KMPDSSD",100,0)
 .S STDT=$P(DATA(4),U,8),ENDT=$P(DATA(4),U,9),DELTA=$P(DATA(4),U,10)
"RTN","KMPDSSD",101,0)
 .S:$E(DELTA)=" " $E(DELTA)="0"
"RTN","KMPDSSD",102,0)
 .S LN=LN+1
"RTN","KMPDSSD",103,0)
 .D SET^VALM10(LN,"   TMG Purge Data After........ "_$P(DATA(4),U,11)_" weeks")
"RTN","KMPDSSD",104,0)
 .D TRANSTO^KMPDUTL7(1,4,.Z)
"RTN","KMPDSSD",105,0)
 .I '$D(Z) S LN=LN+1 D SET^VALM10(LN,"   TMG Transmit Data to........ <>")
"RTN","KMPDSSD",106,0)
 .E  D 
"RTN","KMPDSSD",107,0)
 ..S I=$O(Z("")) I I'="" S LN=LN+1 D SET^VALM10(LN,"   TMG Transmit Data to........ "_I)
"RTN","KMPDSSD",108,0)
 ..F  S I=$O(Z(I)) Q:I=""  S LN=LN+1 D SET^VALM10(LN,$J(" ",32)_I)
"RTN","KMPDSSD",109,0)
 .S LN=LN+1
"RTN","KMPDSSD",110,0)
 .D SET^VALM10(LN,"")
"RTN","KMPDSSD",111,0)
 ;
"RTN","KMPDSSD",112,0)
 Q
"RTN","KMPDSSD",113,0)
 ;
"RTN","KMPDSSD",114,0)
FILES ;-- file data
"RTN","KMPDSSD",115,0)
 ;
"RTN","KMPDSSD",116,0)
 N TEXT,X
"RTN","KMPDSSD",117,0)
 ;
"RTN","KMPDSSD",118,0)
 S LN=LN+1
"RTN","KMPDSSD",119,0)
 D SET^VALM10(LN,$J(" ",35)_" # of     Oldest     Recent")
"RTN","KMPDSSD",120,0)
 S LN=LN+1
"RTN","KMPDSSD",121,0)
 D SET^VALM10(LN,"   File"_$J(" ",28)_"Entries    Date       Date")
"RTN","KMPDSSD",122,0)
 S LN=LN+1
"RTN","KMPDSSD",123,0)
 D SET^VALM10(LN,"   -------------------------       -------   -------   -------")
"RTN","KMPDSSD",124,0)
 ;
"RTN","KMPDSSD",125,0)
 ; if hl7
"RTN","KMPDSSD",126,0)
 I KMPDNMSP="H" D 
"RTN","KMPDSSD",127,0)
 .; file name
"RTN","KMPDSSD",128,0)
 .S TEXT="   8973.1 - "_$P($G(^DIC(8973.1,0)),U)
"RTN","KMPDSSD",129,0)
 .; number of entries
"RTN","KMPDSSD",130,0)
 .S TEXT=TEXT_$J(" ",35-$L(TEXT))_$J($FN($P($G(^KMPD(8973.1,0)),U,4),",",0),7)
"RTN","KMPDSSD",131,0)
 .; oldest date
"RTN","KMPDSSD",132,0)
 .S X=$$FMTE^XLFDT(+$O(^KMPD(8973.1,"B",0)),2)
"RTN","KMPDSSD",133,0)
 .S X=$S(X=0:"---",1:X)
"RTN","KMPDSSD",134,0)
 .S TEXT=TEXT_$J(" ",45-$L(TEXT))_X
"RTN","KMPDSSD",135,0)
 .; current date
"RTN","KMPDSSD",136,0)
 .S X=$$FMTE^XLFDT(+$O(^KMPD(8973.1,"B","A"),-1),2)
"RTN","KMPDSSD",137,0)
 .S X=$S(X=0:"---",1:X)
"RTN","KMPDSSD",138,0)
 .S TEXT=TEXT_$J(" ",55-$L(TEXT))_X
"RTN","KMPDSSD",139,0)
 .S LN=LN+1
"RTN","KMPDSSD",140,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD",141,0)
 ;
"RTN","KMPDSSD",142,0)
 ; if timing data
"RTN","KMPDSSD",143,0)
 I KMPDNMSP="T" D 
"RTN","KMPDSSD",144,0)
 .; file name
"RTN","KMPDSSD",145,0)
 .S TEXT="   8973.2 - "_$P($G(^DIC(8973.2,0)),U)
"RTN","KMPDSSD",146,0)
 .; number of entries
"RTN","KMPDSSD",147,0)
 .S TEXT=TEXT_$J(" ",35-$L(TEXT))_$J($FN($P($G(^KMPD(8973.2,0)),U,4),",",0),7)
"RTN","KMPDSSD",148,0)
 .; oldest date
"RTN","KMPDSSD",149,0)
 .S X=$$FMTE^XLFDT($P(+$O(^KMPD(8973.2,"C",0)),"."),2)
"RTN","KMPDSSD",150,0)
 .S X=$S(X=0:"---",1:X)
"RTN","KMPDSSD",151,0)
 .S TEXT=TEXT_$J(" ",45-$L(TEXT))_X
"RTN","KMPDSSD",152,0)
 .; most recent date
"RTN","KMPDSSD",153,0)
 .S X=$$FMTE^XLFDT($P(+$O(^KMPD(8973.2,"ASTDTTM","A"),-1),"."),2)
"RTN","KMPDSSD",154,0)
 .S X=$S(X=0:"---",1:X)
"RTN","KMPDSSD",155,0)
 .S TEXT=TEXT_$J(" ",55-$L(TEXT))_X
"RTN","KMPDSSD",156,0)
 .S LN=LN+1
"RTN","KMPDSSD",157,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD",158,0)
 ;
"RTN","KMPDSSD",159,0)
 Q
"RTN","KMPDSSD",160,0)
 ;
"RTN","KMPDSSD",161,0)
LEGEND ;-- display legend
"RTN","KMPDSSD",162,0)
 ;
"RTN","KMPDSSD",163,0)
 S LN=LN+1
"RTN","KMPDSSD",164,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSD",165,0)
 S LN=LN+1
"RTN","KMPDSSD",166,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSD",167,0)
 I KMPDNMSP="H" D 
"RTN","KMPDSSD",168,0)
 .S LN=LN+1
"RTN","KMPDSSD",169,0)
 .D SET^VALM10(LN,"     HL7 = Health Level Seven")
"RTN","KMPDSSD",170,0)
 I KMPDNMSP="T" D 
"RTN","KMPDSSD",171,0)
 .S LN=LN+1
"RTN","KMPDSSD",172,0)
 .D SET^VALM10(LN,"     TMG = Timing Data")
"RTN","KMPDSSD",173,0)
 ;
"RTN","KMPDSSD",174,0)
 Q
"RTN","KMPDSSD",175,0)
 ;
"RTN","KMPDSSD",176,0)
OPT(KMPDOPT) ;-- option data
"RTN","KMPDSSD",177,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSD",178,0)
 ; KMPDOPT... Option name - free text
"RTN","KMPDSSD",179,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSD",180,0)
 ;
"RTN","KMPDSSD",181,0)
 Q:$G(KMPDOPT)=""
"RTN","KMPDSSD",182,0)
 ;
"RTN","KMPDSSD",183,0)
 N DIR,DOW,FREQ,KMPDX,KMPDX1,OPTEXT,STATUS,TEXT,X,Y
"RTN","KMPDSSD",184,0)
 ;
"RTN","KMPDSSD",185,0)
 S STATUS=$$TSKSTAT^KMPDUTL1(KMPDOPT)
"RTN","KMPDSSD",186,0)
 ;
"RTN","KMPDSSD",187,0)
 ; option not in system
"RTN","KMPDSSD",188,0)
 Q:(+STATUS)=3
"RTN","KMPDSSD",189,0)
 ;
"RTN","KMPDSSD",190,0)
 S OPTEXT=""
"RTN","KMPDSSD",191,0)
 S:KMPDOPT="KMPD BACKGROUND DRIVER" OPTEXT="CM Tools Background Driver"
"RTN","KMPDSSD",192,0)
 S:KMPDOPT="KMPR BACKGROUND DRIVER" OPTEXT="RUM Background Driver"
"RTN","KMPDSSD",193,0)
 S:KMPDOPT="KMPS SAGG REPORT" OPTEXT="SAGG Master Background Task"
"RTN","KMPDSSD",194,0)
 ;
"RTN","KMPDSSD",195,0)
 ; if background option is missing
"RTN","KMPDSSD",196,0)
 I (+STATUS)=3 D  Q
"RTN","KMPDSSD",197,0)
 .S LN=LN+1
"RTN","KMPDSSD",198,0)
 .D SET^VALM10(LN,"   The "_OPTEXT_" option [KMPD BACKGROUND DRIVER] is missing!")
"RTN","KMPDSSD",199,0)
 ;
"RTN","KMPDSSD",200,0)
 ; background option is present
"RTN","KMPDSSD",201,0)
 ;
"RTN","KMPDSSD",202,0)
 ; if cm tools and not scheduled or no task id
"RTN","KMPDSSD",203,0)
 I KMPDOPT="KMPD BACKGROUND DRIVER"&(+(STATUS)=3) D  Q:'Y
"RTN","KMPDSSD",204,0)
 .K DIR S DIR(0)="YO",DIR("B")="YES"
"RTN","KMPDSSD",205,0)
 .S DIR("A")="Do you want to queue this option to run each night at 1:30am"
"RTN","KMPDSSD",206,0)
 .W ! D ^DIR I 'Y D  Q
"RTN","KMPDSSD",207,0)
 ..S LN=LN+1
"RTN","KMPDSSD",208,0)
 ..D SET^VALM10(LN,"   The "_OPTEXT_" ["_KMPDOPT_"] is not scheduled")
"RTN","KMPDSSD",209,0)
 ..S LN=LN+1
"RTN","KMPDSSD",210,0)
 ..D SET^VALM10(LN,"   to run!"),SET^VALM10(LN,"")
"RTN","KMPDSSD",211,0)
 .D QUEBKG^KMPDUTL("KMPD BACKGROUND DRIVER","T+1@0130","1D",0)
"RTN","KMPDSSD",212,0)
 ;
"RTN","KMPDSSD",213,0)
 ; if not scheduled or no task id
"RTN","KMPDSSD",214,0)
 I KMPDOPT="KMPR BACKGROUND DRIVER"&(+(STATUS)=3) D   Q:'Y
"RTN","KMPDSSD",215,0)
 .K DIR S DIR(0)="YO",DIR("B")="YES"
"RTN","KMPDSSD",216,0)
 .S DIR("A")="Do you want to queue this option to run each night at 1am"
"RTN","KMPDSSD",217,0)
 .W ! D ^DIR I 'Y D  Q
"RTN","KMPDSSD",218,0)
 .. S LN=LN+1
"RTN","KMPDSSD",219,0)
 ..D SET^VALM10(LN,"   The "_OPTEXT_" ["_KMPDOPT_"] is not scheduled")
"RTN","KMPDSSD",220,0)
 ..S LN=LN+1
"RTN","KMPDSSD",221,0)
 ..D SET^VALM10(LN,"   to run!"),SET^VALM10(LN,"")
"RTN","KMPDSSD",222,0)
 .D QUEBKG^KMPRUTL1
"RTN","KMPDSSD",223,0)
 ;
"RTN","KMPDSSD",224,0)
 ; check status again in case it has been requeued
"RTN","KMPDSSD",225,0)
 S STATUS=$$TSKSTAT^KMPDUTL1(KMPDOPT)
"RTN","KMPDSSD",226,0)
 ;
"RTN","KMPDSSD",227,0)
 ; not scheduled
"RTN","KMPDSSD",228,0)
 I (+STATUS)=1 S LN=LN+1 D SET^VALM10(LN,"   The "_OPTEXT_" [KMPD BACKGROUND DRIVER] is not scheduled") Q
"RTN","KMPDSSD",229,0)
 ;
"RTN","KMPDSSD",230,0)
 S TEXT="   "_OPTEXT
"RTN","KMPDSSD",231,0)
 S TEXT=TEXT_$$REPEAT^XLFSTR(".",31-$L(TEXT))
"RTN","KMPDSSD",232,0)
 S TEXT=TEXT_" "_KMPDOPT
"RTN","KMPDSSD",233,0)
 S LN=LN+1
"RTN","KMPDSSD",234,0)
 D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD",235,0)
 S LN=LN+1
"RTN","KMPDSSD",236,0)
 D SET^VALM10(LN,"   QUEUED TO RUN AT............ "_$P(STATUS,U,3))
"RTN","KMPDSSD",237,0)
 S LN=LN+1
"RTN","KMPDSSD",238,0)
 D SET^VALM10(LN,"   RESCHEDULING FREQUENCY...... "_$P(STATUS,U,5))
"RTN","KMPDSSD",239,0)
 ;
"RTN","KMPDSSD",240,0)
 ; check to see if SAGG is not running on the weekend (Fri-Sun)
"RTN","KMPDSSD",241,0)
 S DOW=$P(STATUS,U,4),FREQ=$P(STATUS,U,6)
"RTN","KMPDSSD",242,0)
 I KMPDOPT="KMPS SAGG REPORT" I (DOW<0)!((DOW>0)&(DOW<5))!(FREQ<0)!(FREQ'="28D") D 
"RTN","KMPDSSD",243,0)
 .S LN=LN+1
"RTN","KMPDSSD",244,0)
 .D SET^VALM10(LN,"                                ***It is STRONGLY recommended that this job be")
"RTN","KMPDSSD",245,0)
 .S LN=LN+1
"RTN","KMPDSSD",246,0)
 .D SET^VALM10(LN,"                                   rescheduled to run over the weekend every 28 days.***")
"RTN","KMPDSSD",247,0)
 ;
"RTN","KMPDSSD",248,0)
 S LN=LN+1
"RTN","KMPDSSD",249,0)
 D SET^VALM10(LN,"   TASK ID..................... "_$P(STATUS,U,7))
"RTN","KMPDSSD",250,0)
 ; user info.
"RTN","KMPDSSD",251,0)
 S TEXT="   QUEUED BY................... "_$P(STATUS,U,8)
"RTN","KMPDSSD",252,0)
 ; user
"RTN","KMPDSSD",253,0)
 S TEXT=TEXT_"  ("_$S($P(STATUS,U,9)["NOT ACTIVE":"Not Active - ",1:"Active")_")"
"RTN","KMPDSSD",254,0)
 S LN=LN+1
"RTN","KMPDSSD",255,0)
 D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD",256,0)
 ; if user is not active
"RTN","KMPDSSD",257,0)
 I $P(STATUS,U,9)="NOT ACTIVE" D 
"RTN","KMPDSSD",258,0)
 .S LN=LN+1
"RTN","KMPDSSD",259,0)
 .D SET^VALM10(LN,"                                ***The user that originally queued this task is no ")
"RTN","KMPDSSD",260,0)
 .S LN=LN+1
"RTN","KMPDSSD",261,0)
 .D SET^VALM10(LN,"                                   longer active. Therefore the 'SAGG Master Background")
"RTN","KMPDSSD",262,0)
 .S LN=LN+1
"RTN","KMPDSSD",263,0)
 .D SET^VALM10(LN,"                                   Task' [KMPS SAGG REPORT] must be scheduled again by")
"RTN","KMPDSSD",264,0)
 .S LN=LN=1
"RTN","KMPDSSD",265,0)
 .D SET^VALM10(LN,"                                   an active user.***")
"RTN","KMPDSSD",266,0)
 ;
"RTN","KMPDSSD",267,0)
 Q
"RTN","KMPDSSD1")
0^10^B9539619
"RTN","KMPDSSD1",1,0)
KMPDSSD1 ;OAK/RAK - CM Tools Status ;2/14/05  11:43
"RTN","KMPDSSD1",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**3**;Mar 22, 2002
"RTN","KMPDSSD1",3,0)
 ;
"RTN","KMPDSSD1",4,0)
CPU ;-- cpu/node data
"RTN","KMPDSSD1",5,0)
 ;
"RTN","KMPDSSD1",6,0)
 N COUNT,DATA,I,LEN,TEXT
"RTN","KMPDSSD1",7,0)
 ;
"RTN","KMPDSSD1",8,0)
 D CPUGET^KMPDUTL6(.DATA)
"RTN","KMPDSSD1",9,0)
 Q:'$D(DATA)
"RTN","KMPDSSD1",10,0)
 S LN=LN+1
"RTN","KMPDSSD1",11,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSD1",12,0)
 S TEXT="   Node/CPU Data............... "
"RTN","KMPDSSD1",13,0)
 S (COUNT,I,LEN)=0
"RTN","KMPDSSD1",14,0)
 F  S I=$O(DATA(I)) Q:'I  D 
"RTN","KMPDSSD1",15,0)
 .S COUNT=COUNT+1,DATA=$G(DATA(I,0)) Q:DATA=""
"RTN","KMPDSSD1",16,0)
 .; length of node name
"RTN","KMPDSSD1",17,0)
 .S:'LEN LEN=$L($P(DATA,U))+2
"RTN","KMPDSSD1",18,0)
 .S TEXT=$S(COUNT=1:TEXT,1:$J(" ",32))_$P(DATA,U)
"RTN","KMPDSSD1",19,0)
 .S TEXT=TEXT_$J(" ",32-$L(TEXT)+LEN)_$P(DATA,U,2)_" ("_$P(DATA,U,3)_")"
"RTN","KMPDSSD1",20,0)
 .S LN=LN+1
"RTN","KMPDSSD1",21,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD1",22,0)
 ;
"RTN","KMPDSSD1",23,0)
 Q
"RTN","KMPDSSD1",24,0)
 ;
"RTN","KMPDSSD1",25,0)
MGRP ;-- mail group members
"RTN","KMPDSSD1",26,0)
 ;
"RTN","KMPDSSD1",27,0)
 N MEMBER,NAME,NMARRY
"RTN","KMPDSSD1",28,0)
 ;
"RTN","KMPDSSD1",29,0)
 S IEN=$O(^XMB(3.8,"B","KMP-CAPMAN",0)) Q:'IEN
"RTN","KMPDSSD1",30,0)
 ;
"RTN","KMPDSSD1",31,0)
 S LN=LN+1
"RTN","KMPDSSD1",32,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSD1",33,0)
 ;
"RTN","KMPDSSD1",34,0)
 S TEXT="   KMP-CAPMAN Mail Group......."
"RTN","KMPDSSD1",35,0)
 ; check MEMBER field #2
"RTN","KMPDSSD1",36,0)
 S MEMBER=0
"RTN","KMPDSSD1",37,0)
 F  S MEMBER=$O(^XMB(3.8,IEN,1,"B",MEMBER)) Q:'MEMBER  D
"RTN","KMPDSSD1",38,0)
 .S NAME=$P($G(^VA(200,MEMBER,0)),U)
"RTN","KMPDSSD1",39,0)
 .I NAME'="" S NMARRY(NAME)=MEMBER
"RTN","KMPDSSD1",40,0)
 ;
"RTN","KMPDSSD1",41,0)
 I '$D(NMARRY) S LN=LN+1 D SET^VALM10(LN,TEXT_" No Users") Q
"RTN","KMPDSSD1",42,0)
 ;
"RTN","KMPDSSD1",43,0)
 S NAME=""
"RTN","KMPDSSD1",44,0)
 F  S NAME=$O(NMARRY(NAME)) Q:NAME=""  D
"RTN","KMPDSSD1",45,0)
 .S MEMBER=NMARRY(NAME)
"RTN","KMPDSSD1",46,0)
 .S TEXT=TEXT_$J(" ",32-$L(TEXT))_NAME
"RTN","KMPDSSD1",47,0)
 .S MEMBER=$$ACTIVE^XUSER(MEMBER) I '+MEMBER S TEXT=TEXT_" ("_$P(MEMBER,U,2)_")"
"RTN","KMPDSSD1",48,0)
 .S LN=LN+1
"RTN","KMPDSSD1",49,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD1",50,0)
 .S TEXT=""
"RTN","KMPDSSD1",51,0)
 ;
"RTN","KMPDSSD1",52,0)
 Q
"RTN","KMPDSSD1",53,0)
 ;
"RTN","KMPDSSD1",54,0)
ROUCHK(KMPDPKG) ;--display routine version info
"RTN","KMPDSSD1",55,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDSSD1",56,0)
 ; KMPDPKG... CM Package:
"RTN","KMPDSSD1",57,0)
 ;            "D" - CM Tools
"RTN","KMPDSSD1",58,0)
 ;            "R" - RUM
"RTN","KMPDSSD1",59,0)
 ;            "S" - SAGG
"RTN","KMPDSSD1",60,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDSSD1",61,0)
 ;
"RTN","KMPDSSD1",62,0)
 Q:$G(KMPDPKG)=""
"RTN","KMPDSSD1",63,0)
 Q:KMPDPKG'="D"&(KMPDPKG'="R")&(KMPDPKG'="S")
"RTN","KMPDSSD1",64,0)
 ;
"RTN","KMPDSSD1",65,0)
 N I,TEXT,X
"RTN","KMPDSSD1",66,0)
 ;
"RTN","KMPDSSD1",67,0)
 ; routine check
"RTN","KMPDSSD1",68,0)
 D VERPTCH^KMPDUTL1(KMPDPKG,.X)
"RTN","KMPDSSD1",69,0)
 S LN=LN+1
"RTN","KMPDSSD1",70,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSD1",71,0)
 S LN=LN+1
"RTN","KMPDSSD1",72,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSD1",73,0)
 S TEXT="   "_$S(KMPDPKG="D":"CM TOOLS",KMPDPKG="R":"RUM",1:"SAGG")_" routines"
"RTN","KMPDSSD1",74,0)
 S TEXT=TEXT_$$REPEAT^XLFSTR(".",31-$L(TEXT))
"RTN","KMPDSSD1",75,0)
 I '$P($G(X(0)),U,3) S LN=LN+1 D SET^VALM10(LN,TEXT_" "_+X(0)_" Routines - No Problems") Q
"RTN","KMPDSSD1",76,0)
 S LN=LN+1
"RTN","KMPDSSD1",77,0)
 D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD1",78,0)
 S LN=LN+1
"RTN","KMPDSSD1",79,0)
 D SET^VALM10(LN,$J(" ",20)_"Current Version"_$J(" ",20)_"Should be")
"RTN","KMPDSSD1",80,0)
 S I=0 F  S I=$O(X(I)) Q:I=""  I $P(X(I),U) D 
"RTN","KMPDSSD1",81,0)
 .S TEXT="   "_I
"RTN","KMPDSSD1",82,0)
 .S TEXT=TEXT_$J(" ",20-$L(TEXT))_$P(X(I),U,4)
"RTN","KMPDSSD1",83,0)
 .S:$P(X(I),U,5)]"" TEXT=TEXT_" - "_$P(X(I),U,5)
"RTN","KMPDSSD1",84,0)
 .S TEXT=TEXT_$J(" ",55-$L(TEXT))_$P(X(I),U,2)
"RTN","KMPDSSD1",85,0)
 .S:$P(X(I),U,3)]"" TEXT=TEXT_" - "_$P(X(I),U,3)
"RTN","KMPDSSD1",86,0)
 .S LN=LN+1
"RTN","KMPDSSD1",87,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD1",88,0)
 ;
"RTN","KMPDSSD1",89,0)
 Q
"RTN","KMPDSSD1",90,0)
 ;
"RTN","KMPDSSD1",91,0)
PKG(KMPDNMSP) ;-- extrinsic function - return package name
"RTN","KMPDSSD1",92,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSD1",93,0)
 ; KMPDNMSP... H - HL7
"RTN","KMPDSSD1",94,0)
 ;             R - RUM
"RTN","KMPDSSD1",95,0)
 ;             S - SAGG
"RTN","KMPDSSD1",96,0)
 ;             T - Timing
"RTN","KMPDSSD1",97,0)
 ;
"RTN","KMPDSSD1",98,0)
 ; Return: Package name
"RTN","KMPDSSD1",99,0)
 ;         "" if not found
"RTN","KMPDSSD1",100,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSD1",101,0)
 ;
"RTN","KMPDSSD1",102,0)
 Q:$G(KMPDNMSP)="" ""
"RTN","KMPDSSD1",103,0)
 ;
"RTN","KMPDSSD1",104,0)
 N IEN,NMSP
"RTN","KMPDSSD1",105,0)
 S NMSP="KMP"_$S(KMPDNMSP="H"!(KMPDNMSP="T"):"D",1:KMPDNMSP)
"RTN","KMPDSSD1",106,0)
 S IEN=$O(^DIC(9.4,"C",NMSP,0))
"RTN","KMPDSSD1",107,0)
 Q $S(IEN:$P($G(^DIC(9.4,+IEN,0)),U),1:"")
"RTN","KMPDSSR")
0^6^B16217057
"RTN","KMPDSSR",1,0)
KMPDSSR ;OAK/RAK - Resource Usage Monitor Status ;2/14/05  13:50
"RTN","KMPDSSR",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**3**;Mar 22, 2002
"RTN","KMPDSSR",3,0)
 ;
"RTN","KMPDSSR",4,0)
FORMAT(KMPRLN) ;-format text for display
"RTN","KMPDSSR",5,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSR",6,0)
 ; KMPRLN.... return number of lines - called by referrence
"RTN","KMPDSSR",7,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSR",8,0)
 ;
"RTN","KMPDSSR",9,0)
 N CHECK,LN,VERSION S LN=0 K TMP
"RTN","KMPDSSR",10,0)
 ;
"RTN","KMPDSSR",11,0)
 ; check environment
"RTN","KMPDSSR",12,0)
 ;D ENVCHECK^KMPRUTL1(.CHECK,1)
"RTN","KMPDSSR",13,0)
 ; if RUM turned on but background job not queued ask user if they want
"RTN","KMPDSSR",14,0)
 ; to queue it at this time.
"RTN","KMPDSSR",15,0)
 ;D:(+CHECK)=200 ENVCHECK^KMPRUTL1(.CHECK)
"RTN","KMPDSSR",16,0)
 ;
"RTN","KMPDSSR",17,0)
 ; if no kmprutl routine
"RTN","KMPDSSR",18,0)
 S X="KMPRUTL" X ^%ZOSF("TEST") I '$T D  Q
"RTN","KMPDSSR",19,0)
 .S LN=LN+1
"RTN","KMPDSSR",20,0)
 .D SET^VALM10(LN,"The CAPACITY MANAGEMENT - RUM package is not installed!")
"RTN","KMPDSSR",21,0)
 ;
"RTN","KMPDSSR",22,0)
 ; option data
"RTN","KMPDSSR",23,0)
 D OPT^KMPDSSD("KMPR BACKGROUND DRIVER")
"RTN","KMPDSSR",24,0)
 ;
"RTN","KMPDSSR",25,0)
 ; background data
"RTN","KMPDSSR",26,0)
 D BKGRND
"RTN","KMPDSSR",27,0)
 ;
"RTN","KMPDSSR",28,0)
 ; file data
"RTN","KMPDSSR",29,0)
 D FILES
"RTN","KMPDSSR",30,0)
 ;
"RTN","KMPDSSR",31,0)
 ; routine version check
"RTN","KMPDSSR",32,0)
 D ROUCHK^KMPDSSD1("R")
"RTN","KMPDSSR",33,0)
 ;
"RTN","KMPDSSR",34,0)
 ; node/cpu data
"RTN","KMPDSSR",35,0)
 D CPU^KMPDSSD1
"RTN","KMPDSSR",36,0)
 ;
"RTN","KMPDSSR",37,0)
 ; mail group members
"RTN","KMPDSSR",38,0)
 D MGRP^KMPDSSD1
"RTN","KMPDSSR",39,0)
 ;
"RTN","KMPDSSR",40,0)
 ; legend
"RTN","KMPDSSR",41,0)
 D LEGEND
"RTN","KMPDSSR",42,0)
 ;
"RTN","KMPDSSR",43,0)
 S KMPRLN=LN
"RTN","KMPDSSR",44,0)
 ;
"RTN","KMPDSSR",45,0)
 Q
"RTN","KMPDSSR",46,0)
 ;
"RTN","KMPDSSR",47,0)
BKGRND ; rum background info
"RTN","KMPDSSR",48,0)
 ;
"RTN","KMPDSSR",49,0)
 N DATA,DELTA,ENDT,I,STAT,STDT,Z
"RTN","KMPDSSR",50,0)
 ;
"RTN","KMPDSSR",51,0)
 S LN=LN+1
"RTN","KMPDSSR",52,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSR",53,0)
 S LN=LN+1
"RTN","KMPDSSR",54,0)
 D SET^VALM10(LN,"   Temporary collection global..")
"RTN","KMPDSSR",55,0)
 S LN=LN+1
"RTN","KMPDSSR",56,0)
 D SET^VALM10(LN,"   ^KMPTMP(""KMPR"").............. "_$S('$D(^KMPTMP("KMPR")):"NOT ",1:"")_"Present")
"RTN","KMPDSSR",57,0)
 S LN=LN+1
"RTN","KMPDSSR",58,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSR",59,0)
 ;
"RTN","KMPDSSR",60,0)
 D PARAMS^KMPDUT("DATA") Q:'$D(DATA)
"RTN","KMPDSSR",61,0)
 S DATA(2)=$G(DATA(2))
"RTN","KMPDSSR",62,0)
 S STDT=$P(DATA(2),U,5),ENDT=$P(DATA(2),U,6),DELTA=$P(DATA(2),U,7)
"RTN","KMPDSSR",63,0)
 S:$E(DELTA)=" " $E(DELTA)="0"
"RTN","KMPDSSR",64,0)
 S LN=LN+1
"RTN","KMPDSSR",65,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSR",66,0)
 S LN=LN+1
"RTN","KMPDSSR",67,0)
 D SET^VALM10(LN,"   RUM Dly Bckgrnd Last Start... "_$$FMTE^XLFDT(STDT))
"RTN","KMPDSSR",68,0)
 S LN=LN+1
"RTN","KMPDSSR",69,0)
 D SET^VALM10(LN,"   RUM Dly Bckgrnd Last Stop.... "_$$FMTE^XLFDT(ENDT))
"RTN","KMPDSSR",70,0)
 S LN=LN+1
"RTN","KMPDSSR",71,0)
 D SET^VALM10(LN,"   RUM Dly Bkgrnd Total Time.... "_DELTA)
"RTN","KMPDSSR",72,0)
 S LN=LN+1
"RTN","KMPDSSR",73,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSR",74,0)
 S LN=LN+1
"RTN","KMPDSSR",75,0)
 S STDT=$P(DATA(2),U,8),ENDT=$P(DATA(2),U,9),DELTA=$P(DATA(2),U,10)
"RTN","KMPDSSR",76,0)
 S:$E(DELTA)=" " $E(DELTA)="0"
"RTN","KMPDSSR",77,0)
 D SET^VALM10(LN,"   RUM Wkly Backgrnd Last Start. "_$$FMTE^XLFDT(STDT))
"RTN","KMPDSSR",78,0)
 S LN=LN+1
"RTN","KMPDSSR",79,0)
 D SET^VALM10(LN,"   RUM Wkly Bckgrnd Last Stop... "_$$FMTE^XLFDT(ENDT))
"RTN","KMPDSSR",80,0)
 S LN=LN+1
"RTN","KMPDSSR",81,0)
 D SET^VALM10(LN,"   RUM Wkly Bckgrnd Total Time.. "_DELTA)
"RTN","KMPDSSR",82,0)
 S LN=LN+1
"RTN","KMPDSSR",83,0)
 D SET^VALM10(LN,"   RUM Purge Data After......... "_$P(DATA(2),U,11)_" weeks")
"RTN","KMPDSSR",84,0)
 D TRANSTO^KMPDUTL7(1,2,.Z)
"RTN","KMPDSSR",85,0)
 I '$D(Z) D SET^VALM10(LN,"   RUM Transmit Data to......... <>") S LN=LN+1
"RTN","KMPDSSR",86,0)
 E  D 
"RTN","KMPDSSR",87,0)
 .S I=$O(Z("")) I I'="" S LN=LN+1 D SET^VALM10(LN,"   RUM Transmit Data to......... "_I)
"RTN","KMPDSSR",88,0)
 .F  S I=$O(Z(I)) Q:I=""  S LN=LN+1 D SET^VALM10(LN,$J(" ",33)_I)
"RTN","KMPDSSR",89,0)
 S LN=LN+1
"RTN","KMPDSSR",90,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSR",91,0)
 ;
"RTN","KMPDSSR",92,0)
 Q
"RTN","KMPDSSR",93,0)
 ;
"RTN","KMPDSSR",94,0)
FILES ;-- file data
"RTN","KMPDSSR",95,0)
 ;
"RTN","KMPDSSR",96,0)
 N TEXT,X
"RTN","KMPDSSR",97,0)
 ;
"RTN","KMPDSSR",98,0)
 S LN=LN+1
"RTN","KMPDSSR",99,0)
 D SET^VALM10(LN,$J(" ",35)_" # of     Oldest     Recent")
"RTN","KMPDSSR",100,0)
 S LN=LN+1
"RTN","KMPDSSR",101,0)
 D SET^VALM10(LN,"   File"_$J(" ",28)_"Entries    Date       Date")
"RTN","KMPDSSR",102,0)
 S LN=LN+1
"RTN","KMPDSSR",103,0)
 D SET^VALM10(LN,"   -------------------------       -------   -------   -------")
"RTN","KMPDSSR",104,0)
 ; file name
"RTN","KMPDSSR",105,0)
 S TEXT="   8971.1-"_$P($G(^DIC(8971.1,0)),U)
"RTN","KMPDSSR",106,0)
 ; number of entries
"RTN","KMPDSSR",107,0)
 S TEXT=TEXT_$J(" ",35-$L(TEXT))_$J($FN($P($G(^KMPR(8971.1,0)),U,4),",",0),7)
"RTN","KMPDSSR",108,0)
 ; oldest date
"RTN","KMPDSSR",109,0)
 S X=$$FMTE^XLFDT(+$O(^KMPR(8971.1,"B",0)),2)
"RTN","KMPDSSR",110,0)
 S X=$S(X=0:"---",1:X)
"RTN","KMPDSSR",111,0)
 S TEXT=TEXT_$J(" ",45-$L(TEXT))_X
"RTN","KMPDSSR",112,0)
 ; current date
"RTN","KMPDSSR",113,0)
 S X=$$FMTE^XLFDT(+$O(^KMPR(8971.1,"B","A"),-1),2)
"RTN","KMPDSSR",114,0)
 S X=$S(X=0:"---",1:X)
"RTN","KMPDSSR",115,0)
 S TEXT=TEXT_$J(" ",55-$L(TEXT))_X
"RTN","KMPDSSR",116,0)
 S LN=LN+1
"RTN","KMPDSSR",117,0)
 D SET^VALM10(LN,TEXT)
"RTN","KMPDSSR",118,0)
 ;
"RTN","KMPDSSR",119,0)
 Q
"RTN","KMPDSSR",120,0)
 ;
"RTN","KMPDSSR",121,0)
LEGEND ;-- display legend
"RTN","KMPDSSR",122,0)
 ;
"RTN","KMPDSSR",123,0)
 S LN=LN+1 D SET^VALM10(LN,"")
"RTN","KMPDSSR",124,0)
 S LN=LN+1 D SET^VALM10(LN,"")
"RTN","KMPDSSR",125,0)
 S LN=LN+1
"RTN","KMPDSSR",126,0)
 D SET^VALM10(LN,"     RUM = Resource Usage Monitor")
"RTN","KMPDSSR",127,0)
 ;
"RTN","KMPDSSR",128,0)
 Q
"RTN","KMPDSSS")
0^7^B37207871
"RTN","KMPDSSS",1,0)
KMPDSSS ;OAK/RAK - CP Status - SAGG ;2/14/05  13:56
"RTN","KMPDSSS",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**3**;Mar 22, 2002
"RTN","KMPDSSS",3,0)
 ;
"RTN","KMPDSSS",4,0)
 ;
"RTN","KMPDSSS",5,0)
FORMAT(KMPDLN) ;-format text for dislay
"RTN","KMPDSSS",6,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSS",7,0)
 ; KMPDLN.... return number of lines - called by reference
"RTN","KMPDSSS",8,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSS",9,0)
 ;
"RTN","KMPDSSS",10,0)
 Q:$G(KMPDNMSP)=""
"RTN","KMPDSSS",11,0)
 ;
"RTN","KMPDSSS",12,0)
 N LN,X S LN=0 K TMP
"RTN","KMPDSSS",13,0)
 ;
"RTN","KMPDSSS",14,0)
 ; if no kmpsutl routine
"RTN","KMPDSSS",15,0)
 S X="KMPSUTL" X ^%ZOSF("TEST") I '$T D  Q
"RTN","KMPDSSS",16,0)
 .S LN=LN+1
"RTN","KMPDSSS",17,0)
 .D SET^VALM10(LN,"The SAGG Package is not installed!")
"RTN","KMPDSSS",18,0)
 ;
"RTN","KMPDSSS",19,0)
 ; status
"RTN","KMPDSSS",20,0)
 D STATUS
"RTN","KMPDSSS",21,0)
 ;
"RTN","KMPDSSS",22,0)
 ; option data
"RTN","KMPDSSS",23,0)
 D OPT^KMPDSSD("KMPS SAGG REPORT")
"RTN","KMPDSSS",24,0)
 ;
"RTN","KMPDSSS",25,0)
 ; bacground data
"RTN","KMPDSSS",26,0)
 D BKGRND
"RTN","KMPDSSS",27,0)
 ;
"RTN","KMPDSSS",28,0)
 ; file data
"RTN","KMPDSSS",29,0)
 D FILES
"RTN","KMPDSSS",30,0)
 ;
"RTN","KMPDSSS",31,0)
 ; routine version check
"RTN","KMPDSSS",32,0)
 D ROUCHK^KMPDSSD1("S")
"RTN","KMPDSSS",33,0)
 ;
"RTN","KMPDSSS",34,0)
 ; node/cpu data
"RTN","KMPDSSS",35,0)
 D CPU^KMPDSSD1
"RTN","KMPDSSS",36,0)
 ;
"RTN","KMPDSSS",37,0)
 ; mail group member
"RTN","KMPDSSS",38,0)
 D MGRP^KMPDSSD1
"RTN","KMPDSSS",39,0)
 ;
"RTN","KMPDSSS",40,0)
 ; legend
"RTN","KMPDSSS",41,0)
 D LEGEND
"RTN","KMPDSSS",42,0)
 ;
"RTN","KMPDSSS",43,0)
 S KMPDLN=LN
"RTN","KMPDSSS",44,0)
 ;
"RTN","KMPDSSS",45,0)
 Q
"RTN","KMPDSSS",46,0)
 ;
"RTN","KMPDSSS",47,0)
BKGRND ;- background
"RTN","KMPDSSS",48,0)
 ;
"RTN","KMPDSSS",49,0)
 N CURSTAT,DASH,LOC,OPT,PLTFRM,PROD,SITENUM,STAT,TEXT,VOL,VOLDA
"RTN","KMPDSSS",50,0)
 ;
"RTN","KMPDSSS",51,0)
 S SITENUM=$P($$SITE^VASITE(),U,3) Q:'SITENUM
"RTN","KMPDSSS",52,0)
 S OPT="KMPS SAGG REPORT",STAT=$$TSKSTAT^KMPSUTL1(OPT),CURSTAT=$$CURSTAT^KMPDUTL1(STAT)
"RTN","KMPDSSS",53,0)
 ;
"RTN","KMPDSSS",54,0)
 S LN=LN+1
"RTN","KMPDSSS",55,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSS",56,0)
 S LN=LN+1
"RTN","KMPDSSS",57,0)
 D SET^VALM10(LN,"   Temporary collection global.")
"RTN","KMPDSSS",58,0)
 S LN=LN+1
"RTN","KMPDSSS",59,0)
 D SET^VALM10(LN,"   ^XTMP(""KMPS"")............... "_$S('$D(^XTMP("KMPS",SITENUM,0)):"NOT ",1:"")_"Present")
"RTN","KMPDSSS",60,0)
 ;
"RTN","KMPDSSS",61,0)
 S PLTFRM=$$MPLTF^KMPDUTL1,PROD=$P(^%ZOSF("PROD"),",")
"RTN","KMPDSSS",62,0)
 I PLTFRM="DSM" D
"RTN","KMPDSSS",63,0)
 .S LOC=$G(^KMPS(8970.1,1,0))
"RTN","KMPDSSS",64,0)
 .S TEXT="   Global Location............ "
"RTN","KMPDSSS",65,0)
 .S TEXT=TEXT_$S($P(LOC,U,3)="":PROD,1:$P(LOC,U,3))_","_$S($P(LOC,U,2)="":"UNKNOWN",1:$P(LOC,U,2))
"RTN","KMPDSSS",66,0)
 .S LN=LN+1
"RTN","KMPDSSS",67,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPDSSS",68,0)
 ;
"RTN","KMPDSSS",69,0)
 S LN=LN+1
"RTN","KMPDSSS",70,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSS",71,0)
 S LN=LN+1
"RTN","KMPDSSS",72,0)
 D SET^VALM10(LN,"   SAGG Project collection routines will monitor the following:")
"RTN","KMPDSSS",73,0)
 S LN=LN+1
"RTN","KMPDSSS",74,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSS",75,0)
 S DASH=0,(TEXT,VOL)=""
"RTN","KMPDSSS",76,0)
 F  S VOL=$O(^KMPS(8970.1,1,1,"B",VOL)) Q:VOL=""  D
"RTN","KMPDSSS",77,0)
 .S VOLDA=$O(^KMPS(8970.1,1,1,"B",VOL,0))
"RTN","KMPDSSS",78,0)
 .S LOC=$P(^KMPS(8970.1,1,1,VOLDA,0),U,2)
"RTN","KMPDSSS",79,0)
 .S:LOC="" LOC=PROD
"RTN","KMPDSSS",80,0)
 .S TEXT=TEXT_$J(" ",10)
"RTN","KMPDSSS",81,0)
 .S:DASH TEXT=TEXT_$J(" ",40-$L(TEXT))
"RTN","KMPDSSS",82,0)
 .S TEXT=TEXT_$S(PLTFRM="DSM":LOC_",",1:"")_VOL
"RTN","KMPDSSS",83,0)
 .S DASH=1
"RTN","KMPDSSS",84,0)
 .I $L(TEXT)>60 S DASH=0,LN=LN+1 D SET^VALM10(LN,TEXT) S TEXT=""
"RTN","KMPDSSS",85,0)
 ;
"RTN","KMPDSSS",86,0)
 I '+CURSTAT&$D(^XTMP("KMPS","START")) D 
"RTN","KMPDSSS",87,0)
 .S LN=LN+1 D SET^VALM10(LN,"") S LN=LN+1 D SET^VALM10(LN,"")
"RTN","KMPDSSS",88,0)
 .S LN=LN+1
"RTN","KMPDSSS",89,0)
 .D SET^VALM10(LN,"   SAGG Project collection routines are still running on:")
"RTN","KMPDSSS",90,0)
 .S DASH=0,(TEXT,VOL)=""
"RTN","KMPDSSS",91,0)
 .F  S VOL=$O(^XTMP("KMPS","START",VOL)) Q:VOL=""  D
"RTN","KMPDSSS",92,0)
 ..S:DASH TEXT=TEXT_$J(" ",40-$L(TEXT))
"RTN","KMPDSSS",93,0)
 ..S TEXT=TEXT_VOL
"RTN","KMPDSSS",94,0)
 ..S DASH=1
"RTN","KMPDSSS",95,0)
 ..I $L(TEXT)>60 S DASH=0,LN=LN+1 D SET^VALM10(LN,TEXT) S TEXT=""
"RTN","KMPDSSS",96,0)
 ;
"RTN","KMPDSSS",97,0)
 ; check for any reported errors
"RTN","KMPDSSS",98,0)
 I $D(^XTMP("KMPS","ERROR")) D 
"RTN","KMPDSSS",99,0)
 .S LN=LN+1 D SET^VALM10(LN,"") S LN=LN+1 D SET^VALM10(LN,"")
"RTN","KMPDSSS",100,0)
 .S LN=LN+1
"RTN","KMPDSSS",101,0)
 .D SET^VALM10(LN,"   SAGG Project collection routines have recorded an error on")
"RTN","KMPDSSS",102,0)
 .S LN=LN+1
"RTN","KMPDSSS",103,0)
 .D SET^VALM10(LN,"   the following Volume Set(s):")
"RTN","KMPDSSS",104,0)
 .S LN=LN+1 D SET^VALM10(LN,"")
"RTN","KMPDSSS",105,0)
 .S DASH=0,(TEXT,VOL)=""
"RTN","KMPDSSS",106,0)
 .F  S VOL=$O(^XTMP("KMPS","ERROR",VOL)) Q:VOL=""  D
"RTN","KMPDSSS",107,0)
 ..S:DASH TEXT=TEXT_$J(" ",40-$L(TEXT))
"RTN","KMPDSSS",108,0)
 ..S TEXT=TEXT_VOL
"RTN","KMPDSSS",109,0)
 ..S DASH=1
"RTN","KMPDSSS",110,0)
 ..I $L(TEXT)>60 S DASH=0,LN=LN+1 D SET^VALM10(LN,TEXT) S TEXT=""
"RTN","KMPDSSS",111,0)
 ;
"RTN","KMPDSSS",112,0)
 ; check to see if SAGG was told to stop or has reported errors
"RTN","KMPDSSS",113,0)
 I (+CURSTAT)>3 D 
"RTN","KMPDSSS",114,0)
 .I +CURSTAT=4 D
"RTN","KMPDSSS",115,0)
 ..S LN=LN+1
"RTN","KMPDSSS",116,0)
 ..D SET^VALM10(LN,"   SAGG has been running over a day. Use ^%S"_$S(PLTFRM="DSM":"Y",1:"S")_" and check to see if")
"RTN","KMPDSSS",117,0)
 ..S LN=LN+1
"RTN","KMPDSSS",118,0)
 ..D SET^VALM10(LN,"   the KMPSGE routine is still running.")
"RTN","KMPDSSS",119,0)
 .S LN=LN+1
"RTN","KMPDSSS",120,0)
 .D SET^VALM10(LN,"   NOTE:  Any incomplete data that has been collected will be")
"RTN","KMPDSSS",121,0)
 .S LN=LN+1
"RTN","KMPDSSS",122,0)
 .D SET^VALM10(LN,"   deleted automatically the next time that SAGG runs.")
"RTN","KMPDSSS",123,0)
 .I $D(^XTMP("KMPS","ERROR")) S LN=LN+1 D SET^VALM10(LN,"            First determine the cause of any volume set errors.")
"RTN","KMPDSSS",124,0)
 .S LN=LN+1
"RTN","KMPDSSS",125,0)
 .D SET^VALM10(LN,"            Reschedule SAGG to collect global data if necessary.")
"RTN","KMPDSSS",126,0)
 ;
"RTN","KMPDSSS",127,0)
 Q
"RTN","KMPDSSS",128,0)
 ;
"RTN","KMPDSSS",129,0)
FILES ;-- file data
"RTN","KMPDSSS",130,0)
 ;
"RTN","KMPDSSS",131,0)
 N TEXT,X
"RTN","KMPDSSS",132,0)
 ;
"RTN","KMPDSSS",133,0)
 S LN=LN+1
"RTN","KMPDSSS",134,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSS",135,0)
 S LN=LN+1
"RTN","KMPDSSS",136,0)
 D SET^VALM10(LN,$J(" ",35)_" # of") ;     Oldest     Recent")
"RTN","KMPDSSS",137,0)
 S LN=LN+1
"RTN","KMPDSSS",138,0)
 D SET^VALM10(LN,"   File"_$J(" ",28)_"Entries") ;    Date       Date")
"RTN","KMPDSSS",139,0)
 S LN=LN+1
"RTN","KMPDSSS",140,0)
 D SET^VALM10(LN,"   -------------------------       -------") ;   -------   -------")
"RTN","KMPDSSS",141,0)
 ; file name
"RTN","KMPDSSS",142,0)
 S TEXT="   8970.1-"_$P($G(^DIC(8970.1,0)),U)
"RTN","KMPDSSS",143,0)
 ; number of entries
"RTN","KMPDSSS",144,0)
 S TEXT=TEXT_$J(" ",35-$L(TEXT))_$J($FN($P($G(^KMPS(8970.1,0)),U,4),",",0),7)
"RTN","KMPDSSS",145,0)
 S LN=LN+1
"RTN","KMPDSSS",146,0)
 D SET^VALM10(LN,TEXT)
"RTN","KMPDSSS",147,0)
 ;
"RTN","KMPDSSS",148,0)
 Q
"RTN","KMPDSSS",149,0)
 ;
"RTN","KMPDSSS",150,0)
LEGEND ;-- display full package name
"RTN","KMPDSSS",151,0)
 ;
"RTN","KMPDSSS",152,0)
 S LN=LN+1 D SET^VALM10(LN,"")
"RTN","KMPDSSS",153,0)
 S LN=LN+1 D SET^VALM10(LN,"")
"RTN","KMPDSSS",154,0)
 S LN=LN+1
"RTN","KMPDSSS",155,0)
 D SET^VALM10(LN,"   SAGG = Statistical Analysis of Global Growth")
"RTN","KMPDSSS",156,0)
 ;
"RTN","KMPDSSS",157,0)
 Q
"RTN","KMPDSSS",158,0)
 ;
"RTN","KMPDSSS",159,0)
STATUS ;-- current status
"RTN","KMPDSSS",160,0)
 ;
"RTN","KMPDSSS",161,0)
 N CURSTAT,DOW,OPT,SESSNUM,SITNUM,STAT,STRTDT
"RTN","KMPDSSS",162,0)
 ;
"RTN","KMPDSSS",163,0)
 S SITNUM=$P($$SITE^VASITE(),U,3) Q:'SITNUM
"RTN","KMPDSSS",164,0)
 S OPT="KMPS SAGG REPORT",STAT=$$TSKSTAT^KMPSUTL1(OPT),CURSTAT=$$CURSTAT^KMPDUTL1(STAT)
"RTN","KMPDSSS",165,0)
 S LN=LN+1
"RTN","KMPDSSS",166,0)
 D SET^VALM10(LN,"   Current Status.............. "_$P(CURSTAT,U,2))
"RTN","KMPDSSS",167,0)
 I $D(^XTMP("KMPS",SITNUM,0)) D
"RTN","KMPDSSS",168,0)
 .S SESSNUM=^XTMP("KMPS",SITNUM,0),STRTDT=$P(SESSNUM,U,4),SESSNUM=+SESSNUM
"RTN","KMPDSSS",169,0)
 .S LN=LN+1
"RTN","KMPDSSS",170,0)
 .D SET^VALM10(LN,"   Session Number.............. "_SESSNUM)
"RTN","KMPDSSS",171,0)
 .S DOW=$$DOW^XLFDT(STRTDT)
"RTN","KMPDSSS",172,0)
 .S LN=LN+1
"RTN","KMPDSSS",173,0)
 .D SET^VALM10(LN,"   Start Date.................. "_$$FMTE^XLFDT(STRTDT,"P")_" (",DOW,")")
"RTN","KMPDSSS",174,0)
 ;
"RTN","KMPDSSS",175,0)
 S LN=LN+1
"RTN","KMPDSSS",176,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSS",177,0)
 ;
"RTN","KMPDSSS",178,0)
 Q
"RTN","KMPDUTL")
0^3^B11094485
"RTN","KMPDUTL",1,0)
KMPDUTL ;OAK/RAK - CM Tools Utility ;2/17/04  10:50
"RTN","KMPDUTL",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**1,2,3**;Mar 22, 2002
"RTN","KMPDUTL",3,0)
 ;
"RTN","KMPDUTL",4,0)
QUEBKG(KMPDOPT,KMPDTIME,KMPDFREQ,KMPDDEL) ;-- queue background job
"RTN","KMPDUTL",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",6,0)
 ; KMPDOPT.... Option name to queue (free text name in .01 field of 
"RTN","KMPDUTL",7,0)
 ;                                   OPTION file)
"RTN","KMPDUTL",8,0)
 ; KMPDTIME... Date/time to queue option (T@1400, etc)
"RTN","KMPDUTL",9,0)
 ; KMPDFREQ... Scheduling frequency (1D, etc)
"RTN","KMPDUTL",10,0)
 ; KMPDDEL.... Delete option if it already exists in file 19.2
"RTN","KMPDUTL",11,0)
 ;              0 - do not delete (quit if already scheduled)
"RTN","KMPDUTL",12,0)
 ;              1 - delete if already in file 19.2
"RTN","KMPDUTL",13,0)
 ;
"RTN","KMPDUTL",14,0)
 ; This API will queue an option from file #19 (OPTION) to run in file
"RTN","KMPDUTL",15,0)
 ; 19.2 (OPTION SCHEDULE).
"RTN","KMPDUTL",16,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",17,0)
 Q:$G(KMPDOPT)=""
"RTN","KMPDUTL",18,0)
 Q:$G(KMPDTIME)=""
"RTN","KMPDUTL",19,0)
 Q:$G(KMPDFREQ)=""
"RTN","KMPDUTL",20,0)
 S KMPDDEL=+$G(KMPDDEL)
"RTN","KMPDUTL",21,0)
 N DA,DIFROM,DIK,FDA,ERROR,IEN,IEN1,IENZ,TEXT,X,Y,Z
"RTN","KMPDUTL",22,0)
 ; Newing DIFROM will force reschedule when installing from KIDS
"RTN","KMPDUTL",23,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPDUTL",24,0)
 ; change to internal format
"RTN","KMPDUTL",25,0)
 D FMDTI^KMPDU(.Z,KMPDTIME)
"RTN","KMPDUTL",26,0)
 Q:Z(0)="^"!(Z(0)="")
"RTN","KMPDUTL",27,0)
 S KMPDTIME=Z(0) K Z
"RTN","KMPDUTL",28,0)
 S TEXT=KMPDOPT
"RTN","KMPDUTL",29,0)
 ; quit if not in file 19
"RTN","KMPDUTL",30,0)
 S IEN=$O(^DIC(19,"B",TEXT,0)) Q:'IEN
"RTN","KMPDUTL",31,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPDUTL",32,0)
 ; quit if already in file 19.2 and not KMPDDEL
"RTN","KMPDUTL",33,0)
 Q:IEN1&('KMPDDEL)
"RTN","KMPDUTL",34,0)
 ; delete if in file 19.2
"RTN","KMPDUTL",35,0)
 I IEN1 S DIK="^DIC(19.2,",DA=IEN1 D ^DIK
"RTN","KMPDUTL",36,0)
 ; add entry
"RTN","KMPDUTL",37,0)
 S FDA($J,19.2,"+1,",.01)=IEN
"RTN","KMPDUTL",38,0)
 ; queued to run at what time
"RTN","KMPDUTL",39,0)
 S FDA($J,19.2,"+1,",2)=KMPDTIME
"RTN","KMPDUTL",40,0)
 ; rescheduling frequency.
"RTN","KMPDUTL",41,0)
 S FDA($J,19.2,"+1,",6)=KMPDFREQ
"RTN","KMPDUTL",42,0)
 D UPDATE^DIE("","FDA($J)",.IENZ,"ERROR")
"RTN","KMPDUTL",43,0)
 I $D(ERROR) D MSG^DIALOG("W","",60,10,"ERROR")
"RTN","KMPDUTL",44,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPDUTL",45,0)
 I '$G(^DIC(19.2,+IEN1,1)) D 
"RTN","KMPDUTL",46,0)
 .D MES^XPDUTL("     ERROR - Not able to reschedule "_KMPDOPT)
"RTN","KMPDUTL",47,0)
 .D MES^XPDUTL("     Use 'Schedule/Unschedule Options' [XUTM SCHEDULE] to reschedule.")
"RTN","KMPDUTL",48,0)
 ;
"RTN","KMPDUTL",49,0)
 Q
"RTN","KMPDUTL",50,0)
 ;
"RTN","KMPDUTL",51,0)
VERSION() ;-- extrinsic - return current version.
"RTN","KMPDUTL",52,0)
 Q $P($T(+2^KMPDUTL),";",3)_"^"_$P($T(+2^KMPDUTL),";",5)
"RTN","KMPDUTL",53,0)
 ;
"RTN","KMPDUTL",54,0)
VRSNGET(KMPDAPPL) ;-- extrinsic function - get version^patches
"RTN","KMPDUTL",55,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",56,0)
 ; KMPDAPPL... application:
"RTN","KMPDUTL",57,0)
 ;              0 - CM Tools
"RTN","KMPDUTL",58,0)
 ;              1 - SAGG
"RTN","KMPDUTL",59,0)
 ;              2 - RUM
"RTN","KMPDUTL",60,0)
 ;
"RTN","KMPDUTL",61,0)
 ; Return: Version^Patch^VersionInstallDate^PatchInstallDate
"RTN","KMPDUTL",62,0)
 ;         null = no application
"RTN","KMPDUTL",63,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",64,0)
 ;
"RTN","KMPDUTL",65,0)
 Q:$G(KMPDAPPL)="" ""
"RTN","KMPDUTL",66,0)
 Q:KMPDAPPL<0!(KMPDAPPL>2) ""
"RTN","KMPDUTL",67,0)
 ;
"RTN","KMPDUTL",68,0)
 N DATA,VERSION S VERSION=""
"RTN","KMPDUTL",69,0)
 ;
"RTN","KMPDUTL",70,0)
 ; cm tools
"RTN","KMPDUTL",71,0)
 I KMPDAPPL=0 D 
"RTN","KMPDUTL",72,0)
 .S DATA=$G(^KMPD(8973,1,KMPDAPPL))
"RTN","KMPDUTL",73,0)
 .S VERSION=$P(DATA,U,2)_U_$P(DATA,U,4)_U_$P(DATA,U,3)_U_$P(DATA,U,5)
"RTN","KMPDUTL",74,0)
 ;
"RTN","KMPDUTL",75,0)
 ; all other applications
"RTN","KMPDUTL",76,0)
 E  D 
"RTN","KMPDUTL",77,0)
 .S DATA=$G(^KMPD(8973,1,KMPDAPPL))
"RTN","KMPDUTL",78,0)
 .S VERSION=$P(DATA,U)_U_$P(DATA,U,3)_U_$P(DATA,U,2)_U_$P(DATA,U,4)
"RTN","KMPDUTL",79,0)
 ;
"RTN","KMPDUTL",80,0)
 Q VERSION
"RTN","KMPDUTL",81,0)
 ;
"RTN","KMPDUTL",82,0)
PTCHINFO ; -- patch information: routine name ^ current version ^ current patch(es)
"RTN","KMPDUTL",83,0)
 ;;KMPDBD01^2.0^**2**
"RTN","KMPDUTL",84,0)
 ;;KMPDHU01^2.0
"RTN","KMPDUTL",85,0)
 ;;KMPDHU02^2.0
"RTN","KMPDUTL",86,0)
 ;;KMPDHU03^2.0
"RTN","KMPDUTL",87,0)
 ;;KMPDHUA^2.0
"RTN","KMPDUTL",88,0)
 ;;KMPDSS^2.0^**3**
"RTN","KMPDUTL",89,0)
 ;;KMPDSS1^2.0^**3**
"RTN","KMPDUTL",90,0)
 ;;KMPDSSD^2.0^**3**
"RTN","KMPDUTL",91,0)
 ;;KMPDSSD1^2.0^**3**
"RTN","KMPDUTL",92,0)
 ;;KMPDSSR^2.0^**3**
"RTN","KMPDUTL",93,0)
 ;;KMPDSSS^2.0^**3**
"RTN","KMPDUTL",94,0)
 ;;KMPDTM^2.0^**1**
"RTN","KMPDUTL",95,0)
 ;;KMPDTP1^2.0
"RTN","KMPDUTL",96,0)
 ;;KMPDTP2^2.0
"RTN","KMPDUTL",97,0)
 ;;KMPDTP3^2.0
"RTN","KMPDUTL",98,0)
 ;;KMPDTP4^2.0
"RTN","KMPDUTL",99,0)
 ;;KMPDTP5^2.0
"RTN","KMPDUTL",100,0)
 ;;KMPDTP6^2.0
"RTN","KMPDUTL",101,0)
 ;;KMPDTP7^2.0
"RTN","KMPDUTL",102,0)
 ;;KMPDTU01^2.0
"RTN","KMPDUTL",103,0)
 ;;KMPDTU02^2.0
"RTN","KMPDUTL",104,0)
 ;;KMPDTU10^2.0
"RTN","KMPDUTL",105,0)
 ;;KMPDTU11^2.0
"RTN","KMPDUTL",106,0)
 ;;KMPDU^2.0^**2**
"RTN","KMPDUTL",107,0)
 ;;KMPDU1^2.0
"RTN","KMPDUTL",108,0)
 ;;KMPDU2^2.0^**2**
"RTN","KMPDUTL",109,0)
 ;;KMPDU3^2.0^**2**
"RTN","KMPDUTL",110,0)
 ;;KMPDU4^2.0
"RTN","KMPDUTL",111,0)
 ;;KMPDU5^2.0^**2**
"RTN","KMPDUTL",112,0)
 ;;KMPDU11^2.0
"RTN","KMPDUTL",113,0)
 ;;KMPDUG^2.0
"RTN","KMPDUTL",114,0)
 ;;KMPDUG1^2.0
"RTN","KMPDUTL",115,0)
 ;;KMPDUG2^2.0
"RTN","KMPDUTL",116,0)
 ;;KMPDUGV^2.0
"RTN","KMPDUTL",117,0)
 ;;KMPDUT^2.0
"RTN","KMPDUTL",118,0)
 ;;KMPDUT2^2.0
"RTN","KMPDUTL",119,0)
 ;;KMPDUT4^2.0
"RTN","KMPDUTL",120,0)
 ;;KMPDUT4A^2.0
"RTN","KMPDUTL",121,0)
 ;;KMPDUT4B^2.0
"RTN","KMPDUTL",122,0)
 ;;KMPDUT4C^2.0
"RTN","KMPDUTL",123,0)
 ;;KMPDUT5^2.0
"RTN","KMPDUTL",124,0)
 ;;KMPDUTL^2.0^**1,2,3**
"RTN","KMPDUTL",125,0)
 ;;KMPDUTL1^2.0^**3**
"RTN","KMPDUTL",126,0)
 ;;KMPDUTL2^2.0
"RTN","KMPDUTL",127,0)
 ;;KMPDUTL3^2.0
"RTN","KMPDUTL",128,0)
 ;;KMPDUTL4^2.0
"RTN","KMPDUTL",129,0)
 ;;KMPDUTL5^2.0
"RTN","KMPDUTL",130,0)
 ;;KMPDUTL6^2.0
"RTN","KMPDUTL",131,0)
 ;;KMPDUTL7^2.0^**2**
"RTN","KMPDUTL",132,0)
 ;;KMPDUTL8^2.0^**2**
"RTN","KMPDUTL1")
0^8^B28456598
"RTN","KMPDUTL1",1,0)
KMPDUTL1 ;OAK/RAK,KAK - CM TOOLS Utilities ;2/17/04  10:51
"RTN","KMPDUTL1",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**3**;Mar 22, 2002
"RTN","KMPDUTL1",3,0)
 ;
"RTN","KMPDUTL1",4,0)
CONT(KMPDEXT)  ;-- function displays 'return to continue' message at bottom of page
"RTN","KMPDUTL1",5,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUTL1",6,0)
 ; KMPDEXT 0 = do not show 'to exit' text
"RTN","KMPDUTL1",7,0)
 ;         1 = show 'to exit' text
"RTN","KMPDUTL1",8,0)
 ;
"RTN","KMPDUTL1",9,0)
 ; Return: 0 = continue
"RTN","KMPDUTL1",10,0)
 ;         1 = quit
"RTN","KMPDUTL1",11,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUTL1",12,0)
 ;
"RTN","KMPDUTL1",13,0)
 N DIR,X,Y
"RTN","KMPDUTL1",14,0)
 ;
"RTN","KMPDUTL1",15,0)
 S KMPDEXT=+$G(KMPDEXT)
"RTN","KMPDUTL1",16,0)
 F  Q:$Y>(IOSL-3)  W !
"RTN","KMPDUTL1",17,0)
 S DIR(0)="EA"
"RTN","KMPDUTL1",18,0)
 S DIR("A")="Press RETURN to continue"_$S(KMPDEXT:" or '^' to exit: ",1:": ")
"RTN","KMPDUTL1",19,0)
 D ^DIR
"RTN","KMPDUTL1",20,0)
 Q +$G(Y)
"RTN","KMPDUTL1",21,0)
 ;
"RTN","KMPDUTL1",22,0)
CURSTAT(STAT)   ;-- current status
"RTN","KMPDUTL1",23,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",24,0)
 ; input:  STAT (optional) = data from $$TSKSTAT^KMPSUTL1
"RTN","KMPDUTL1",25,0)
 ; output: See codes below
"RTN","KMPDUTL1",26,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",27,0)
 ;
"RTN","KMPDUTL1",28,0)
 N RESULT,SITNUM,STRTDT
"RTN","KMPDUTL1",29,0)
 ;
"RTN","KMPDUTL1",30,0)
 S RESULT="",SITNUM=^DD("SITE",1),STRTDT=$G(^XTMP("KMPS",SITNUM,0))
"RTN","KMPDUTL1",31,0)
 ;
"RTN","KMPDUTL1",32,0)
 I $D(^XTMP("KMPS","ERROR")) Q "6^ERRORS RECORDED"
"RTN","KMPDUTL1",33,0)
 I $D(^XTMP("KMPS","STOP")) Q "7^STOPPING"
"RTN","KMPDUTL1",34,0)
 I $D(^XTMP("KMPS","START")) L +^XTMP("KMPS"):0 I $T L -^XTMP("KMPS") Q "5^DID NOT COMPLETE"
"RTN","KMPDUTL1",35,0)
 I +STRTDT I +$H-STRTDT>2 Q "5^DID NOT COMPLETE"
"RTN","KMPDUTL1",36,0)
 I +STRTDT I +$H-STRTDT>1 Q "4^RUNNING TOO LONG"
"RTN","KMPDUTL1",37,0)
 I $D(^XTMP("KMPS","START")) Q "0^RUNNING"
"RTN","KMPDUTL1",38,0)
 I $D(STAT) Q $P(STAT,U,1,2)
"RTN","KMPDUTL1",39,0)
 E  Q "3^NOT RUNNING"
"RTN","KMPDUTL1",40,0)
 Q "9^UNKNOWN"
"RTN","KMPDUTL1",41,0)
 ;
"RTN","KMPDUTL1",42,0)
SYSINFO() ;-- returns system information
"RTN","KMPDUTL1",43,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",44,0)
 ; Returns:
"RTN","KMPDUTL1",45,0)
 ;         "^" piece 1 - type of M platform
"RTN","KMPDUTL1",46,0)
 ;         "^" piece 2 - $ZV => name and version of M system
"RTN","KMPDUTL1",47,0)
 ;         "^" piece 3 - operating system version
"RTN","KMPDUTL1",48,0)
 ;
"RTN","KMPDUTL1",49,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",50,0)
 ;
"RTN","KMPDUTL1",51,0)
 N MPLTF,OSVER,SYSINFO
"RTN","KMPDUTL1",52,0)
 ;
"RTN","KMPDUTL1",53,0)
 S MPLTF=$$MPLTF(),OSVER=$$OSVER(MPLTF)
"RTN","KMPDUTL1",54,0)
 S SYSINFO=MPLTF_U_$ZV_U_OSVER
"RTN","KMPDUTL1",55,0)
 Q SYSINFO
"RTN","KMPDUTL1",56,0)
 ;
"RTN","KMPDUTL1",57,0)
MPLTF() ;-- returns the type of M platform
"RTN","KMPDUTL1",58,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",59,0)
 ; Returns:  DSM    for DSM platform
"RTN","KMPDUTL1",60,0)
 ;           CVMS   for Cache for OpenVMS platform
"RTN","KMPDUTL1",61,0)
 ;           CWINNT for Cache for Windows NT platform
"RTN","KMPDUTL1",62,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",63,0)
 ;
"RTN","KMPDUTL1",64,0)
 N MPLTF,ZV
"RTN","KMPDUTL1",65,0)
 ;
"RTN","KMPDUTL1",66,0)
 S ZV=$ZV
"RTN","KMPDUTL1",67,0)
 S MPLTF=$S(ZV["DSM":"DSM",ZV["VMS":"CVMS",ZV["Windows":"CWINNT",1:"UNK")
"RTN","KMPDUTL1",68,0)
 Q MPLTF
"RTN","KMPDUTL1",69,0)
 ;
"RTN","KMPDUTL1",70,0)
OSVER(MPLTF) ;-- returns the operating system version
"RTN","KMPDUTL1",71,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",72,0)
 ; input: MPLTF = type of M platform
"RTN","KMPDUTL1",73,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",74,0)
 ;
"RTN","KMPDUTL1",75,0)
 I $G(MPLTF)="" Q ""
"RTN","KMPDUTL1",76,0)
 ;
"RTN","KMPDUTL1",77,0)
 I MPLTF["DSM" Q $ZC(%GETSYI,"VERSION")
"RTN","KMPDUTL1",78,0)
 I MPLTF["CVMS" Q $$CVMSVER^KMPDUTL5()
"RTN","KMPDUTL1",79,0)
 I MPLTF["CWINNT" Q $$CWNTVER^KMPDUTL5()
"RTN","KMPDUTL1",80,0)
 Q ""
"RTN","KMPDUTL1",81,0)
 ;
"RTN","KMPDUTL1",82,0)
TSKSTAT(OPT) ;-- status of scheduled task option
"RTN","KMPDUTL1",83,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",84,0)
 ; input  OPT = option name
"RTN","KMPDUTL1",85,0)
 ; 
"RTN","KMPDUTL1",86,0)
 ; output RTN = by "^" piece
"RTN","KMPDUTL1",87,0)
 ;               1 - status code
"RTN","KMPDUTL1",88,0)
 ;               2 - literal condition
"RTN","KMPDUTL1",89,0)
 ;               3 - scheduled date@time (day)
"RTN","KMPDUTL1",90,0)
 ;               4 - numeric day-of-week
"RTN","KMPDUTL1",91,0)
 ;               5 - expanded scheduled frequency
"RTN","KMPDUTL1",92,0)
 ;               6 - short form frequency
"RTN","KMPDUTL1",93,0)
 ;               7 - task id
"RTN","KMPDUTL1",94,0)
 ;               8 - queued by
"RTN","KMPDUTL1",95,0)
 ;               9 - user status
"RTN","KMPDUTL1",96,0)
 ;
"RTN","KMPDUTL1",97,0)
 ; where status code^condition:
"RTN","KMPDUTL1",98,0)
 ;            = 0^SCHEDULED
"RTN","KMPDUTL1",99,0)
 ;            = 1^NOT SCHEDULED and 'scheduled date@time' will
"RTN","KMPDUTL1",100,0)
 ;                   be UNKNOWN and 'numeric day of week' will be -1
"RTN","KMPDUTL1",101,0)
 ;            = 2^NOT RESCHEDULED
"RTN","KMPDUTL1",102,0)
 ;            = 3^MISSING when OPT does not exist
"RTN","KMPDUTL1",103,0)
 ;            = 9^UNKNOWN
"RTN","KMPDUTL1",104,0)
 ;            = ""^UNDEFINED
"RTN","KMPDUTL1",105,0)
 ;
"RTN","KMPDUTL1",106,0)
 ; where user status = ACTIVE or NOT ACTIVE
"RTN","KMPDUTL1",107,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",108,0)
 ;
"RTN","KMPDUTL1",109,0)
 Q:$G(OPT)="" "^UNDEFINED"
"RTN","KMPDUTL1",110,0)
 ;
"RTN","KMPDUTL1",111,0)
 N ACTV,DA,DAY,DOW,FREQ,RTN,TSK,TSKINFO,USER,Y
"RTN","KMPDUTL1",112,0)
 ;
"RTN","KMPDUTL1",113,0)
 S (DOW,FREQ)=-1
"RTN","KMPDUTL1",114,0)
 S RTN="9^UNKNOWN^NO DATE^-1^UNKNOWN^^^UNKNOWN^NOT ACTIVE"
"RTN","KMPDUTL1",115,0)
 ;
"RTN","KMPDUTL1",116,0)
 I '$D(^DIC(19,"B",OPT)) S $P(RTN,U,1,2)="3^MISSING" Q RTN
"RTN","KMPDUTL1",117,0)
 S DA=$O(^DIC(19,"B",OPT,0)),DA=+$O(^DIC(19.2,"B",DA,0))
"RTN","KMPDUTL1",118,0)
 S TSKINFO=$G(^DIC(19.2,DA,0)),(DOW,Y)=$P(TSKINFO,U,2),FREQ=$P(TSKINFO,U,6)
"RTN","KMPDUTL1",119,0)
 D:+Y DD^%DT S $P(TSKINFO,U,2)=Y
"RTN","KMPDUTL1",120,0)
 I DOW'="" S DAY=$$DOW^XLFDT(DOW),DOW=$$DOW^XLFDT(DOW,1)
"RTN","KMPDUTL1",121,0)
 S TSK=+$G(^DIC(19.2,+DA,1))
"RTN","KMPDUTL1",122,0)
 I (DOW="")!(TSK="") S $P(RTN,U,1,2)="1^NOT SCHEDULED"
"RTN","KMPDUTL1",123,0)
 E  D
"RTN","KMPDUTL1",124,0)
 .S $P(RTN,U,1,2)="0^SCHEDULED"
"RTN","KMPDUTL1",125,0)
 .I FREQ="" S $P(RTN,U,1,2)="2^NOT RESCHEDULED"
"RTN","KMPDUTL1",126,0)
 .; queued to run at
"RTN","KMPDUTL1",127,0)
 .S $P(RTN,U,3,4)=$S($P(TSKINFO,U,2)="":"NO DATE",1:$P(TSKINFO,U,2))_$S($D(DAY):" ("_DAY_")",1:"")_U_DOW
"RTN","KMPDUTL1",128,0)
 ; rescheduling frequency
"RTN","KMPDUTL1",129,0)
 I FREQ?1.3N1A D
"RTN","KMPDUTL1",130,0)
 .S $P(RTN,U,5,6)=+FREQ_" "_$S(FREQ["D":"day",FREQ["M":"month",1:FREQ)_$S(+FREQ>1:"s",1:"")_U_FREQ
"RTN","KMPDUTL1",131,0)
 E  S $P(RTN,U,5,6)=$S(FREQ="":"UNKNOWN",1:FREQ)_U_FREQ
"RTN","KMPDUTL1",132,0)
 ; task id
"RTN","KMPDUTL1",133,0)
 S $P(RTN,U,7)=TSK
"RTN","KMPDUTL1",134,0)
 ; find if the user is active
"RTN","KMPDUTL1",135,0)
 I TSK D
"RTN","KMPDUTL1",136,0)
 .S TSKINFO=$G(^%ZTSK(TSK,0))
"RTN","KMPDUTL1",137,0)
 .S USER=+$P(TSKINFO,U,3)
"RTN","KMPDUTL1",138,0)
 .S ACTV=+$$ACTIVE^XUSER(USER)
"RTN","KMPDUTL1",139,0)
 .; queued by
"RTN","KMPDUTL1",140,0)
 .S $P(RTN,U,8)=$P($G(^VA(200,USER,0)),U)
"RTN","KMPDUTL1",141,0)
 I $G(ACTV) S $P(RTN,U,9)="ACTIVE"
"RTN","KMPDUTL1",142,0)
 Q RTN
"RTN","KMPDUTL1",143,0)
 ;
"RTN","KMPDUTL1",144,0)
VERPTCH(PKG,RTNARRY)    ;-- returns current version and patch status of specified CM package
"RTN","KMPDUTL1",145,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",146,0)
 ; input PKG = 'D' for CM TOOLS
"RTN","KMPDUTL1",147,0)
 ;             'R' for RUM
"RTN","KMPDUTL1",148,0)
 ;             'S' for SAGG
"RTN","KMPDUTL1",149,0)
 ; Return array (passed by reference) in format:
"RTN","KMPDUTL1",150,0)
 ; output RTNARRY = -1 for error
"RTN","KMPDUTL1",151,0)
 ;        RTNARRY(0) = number of routines^total rtns ok^total rtns bad^total rtns missing
"RTN","KMPDUTL1",152,0)
 ;        RTNARRY(rtn name) = {0=good 1=bad 2=missing routine}^released version^released patch(es)^site version^site patch(es)
"RTN","KMPDUTL1",153,0)
 ;
"RTN","KMPDUTL1",154,0)
 ; This code will reference line tag PTCHINFO^KMP_pkg_UTL for the
"RTN","KMPDUTL1",155,0)
 ; following patch information text starting at PTCHINFO+1:
"RTN","KMPDUTL1",156,0)
 ;
"RTN","KMPDUTL1",157,0)
 ;        ;;routine name ^ current version ^ current patch(es)
"RTN","KMPDUTL1",158,0)
 ;
"RTN","KMPDUTL1",159,0)
 ; Example:    
"RTN","KMPDUTL1",160,0)
 ;           PATCHINFO  ;-- patch information
"RTN","KMPDUTL1",161,0)
 ;                      ;;KMPSGE^1.8^**1,2**
"RTN","KMPDUTL1",162,0)
 ;                      ;;KMPSUTL^1.8^**1,2**
"RTN","KMPDUTL1",163,0)
 ;  last line >         ;;
"RTN","KMPDUTL1",164,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",165,0)
 ;
"RTN","KMPDUTL1",166,0)
 K RTNARRY
"RTN","KMPDUTL1",167,0)
 ;
"RTN","KMPDUTL1",168,0)
 N BAD,I,INFO,INFOSITE,OK,OUT,PTCH,PTCHSITE,RTN
"RTN","KMPDUTL1",169,0)
 N TAG,TOTBAD,TOTMISS,TOTOK,TOTRTN,X,VER,VERSITE
"RTN","KMPDUTL1",170,0)
 ;
"RTN","KMPDUTL1",171,0)
 I $G(PKG)=""!("DRS"'[$G(PKG))!($L(PKG)'=1) S RTNARRY=-1 Q
"RTN","KMPDUTL1",172,0)
 S X="KMP"_PKG_"UTL"
"RTN","KMPDUTL1",173,0)
 X ^%ZOSF("TEST") I '$T S RTNARRY=-1 Q
"RTN","KMPDUTL1",174,0)
 ;
"RTN","KMPDUTL1",175,0)
 S (OUT,TOTBAD,TOTMISS,TOTOK,TOTRTN)=0
"RTN","KMPDUTL1",176,0)
 F I=1:1 D  Q:OUT
"RTN","KMPDUTL1",177,0)
 .S TAG="PTCHINFO+"_I_"^KMP"_PKG_"UTL"
"RTN","KMPDUTL1",178,0)
 .S INFO=$P($T(@TAG),";;",2)
"RTN","KMPDUTL1",179,0)
 .I INFO="" S OUT=1 Q
"RTN","KMPDUTL1",180,0)
 .S RTN=$P(INFO,U),VER=$P(INFO,U,2),PTCH=$P(INFO,U,3)
"RTN","KMPDUTL1",181,0)
 .; if routine is missing
"RTN","KMPDUTL1",182,0)
 .I $T(@(RTN_"^"_RTN))="" D  Q
"RTN","KMPDUTL1",183,0)
 ..S TOTMISS=TOTMISS+1,TOTRTN=TOTRTN+1
"RTN","KMPDUTL1",184,0)
 ..S RTNARRY(RTN)="2^"_VER_U_PTCH_"^^"
"RTN","KMPDUTL1",185,0)
 .X "ZL @RTN S INFOSITE=$T(+2)"
"RTN","KMPDUTL1",186,0)
 .S VERSITE=$P(INFOSITE,";",3),PTCHSITE=$P(INFOSITE,";",5)
"RTN","KMPDUTL1",187,0)
 .I VERSITE'=VER!(PTCHSITE'=PTCH) S BAD=1,OK=0
"RTN","KMPDUTL1",188,0)
 .E  S BAD=0,OK=1
"RTN","KMPDUTL1",189,0)
 .S TOTBAD=TOTBAD+BAD,TOTOK=TOTOK+OK,TOTRTN=TOTRTN+1
"RTN","KMPDUTL1",190,0)
 .S RTNARRY(RTN)=BAD_U_VER_U_PTCH_U_VERSITE_U_PTCHSITE
"RTN","KMPDUTL1",191,0)
 S RTNARRY(0)=TOTRTN_U_TOTOK_U_TOTBAD_U_TOTMISS
"RTN","KMPDUTL1",192,0)
 Q
"VER")
8.0^22.0
**END**
**END**
