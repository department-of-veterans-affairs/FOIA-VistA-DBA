KIDS Distribution saved on Jan 25, 2002@12:09:59
PXRM*1.5*7 BUILD 01/25/2002
**KIDS**:PXRM*1.5*7^

**INSTALL NAME**
PXRM*1.5*7
"BLD",3208,0)
PXRM*1.5*7^CLINICAL REMINDERS^0^3020125^y
"BLD",3208,1,0)
^^3^3^3010829^^
"BLD",3208,1,1,0)
This patch provides tools for Clinical Reminders to support MST
"BLD",3208,1,2,0)
functionality. See the National Patch Module for a complete
"BLD",3208,1,3,0)
description.
"BLD",3208,4,0)
^9.64PA^800^3
"BLD",3208,4,800,0)
800
"BLD",3208,4,800,222)
y^y^f^^^^n
"BLD",3208,4,811.6,0)
811.6
"BLD",3208,4,811.6,222)
y^y^f^^^^n
"BLD",3208,4,811.8,0)
811.8
"BLD",3208,4,811.8,222)
n^n^f^^y^^y^r^n
"BLD",3208,4,811.8,224)
I Y=2
"BLD",3208,4,"B",800,800)

"BLD",3208,4,"B",811.6,811.6)

"BLD",3208,4,"B",811.8,811.8)

"BLD",3208,"INI")
PRE^PXRMP7I
"BLD",3208,"INID")
^n
"BLD",3208,"INIT")
POST^PXRMP7I
"BLD",3208,"KRN",0)
^9.67PA^19^17
"BLD",3208,"KRN",.4,0)
.4
"BLD",3208,"KRN",.4,"NM",0)
^9.68A^2^2
"BLD",3208,"KRN",.4,"NM",1,0)
PXRM SPONSOR INQUIRY    FILE #811.6^811.6^0
"BLD",3208,"KRN",.4,"NM",2,0)
PXRM SPONSOR LIST    FILE #811.6^811.6^0
"BLD",3208,"KRN",.4,"NM","B","PXRM SPONSOR INQUIRY    FILE #811.6",1)

"BLD",3208,"KRN",.4,"NM","B","PXRM SPONSOR LIST    FILE #811.6",2)

"BLD",3208,"KRN",.401,0)
.401
"BLD",3208,"KRN",.402,0)
.402
"BLD",3208,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",3208,"KRN",.402,"NM",1,0)
PXRM SPONSOR EDIT    FILE #811.6^811.6^1^
"BLD",3208,"KRN",.402,"NM","B","PXRM SPONSOR EDIT    FILE #811.6",1)

"BLD",3208,"KRN",.403,0)
.403
"BLD",3208,"KRN",.5,0)
.5
"BLD",3208,"KRN",.84,0)
.84
"BLD",3208,"KRN",3.6,0)
3.6
"BLD",3208,"KRN",3.8,0)
3.8
"BLD",3208,"KRN",9.2,0)
9.2
"BLD",3208,"KRN",9.8,0)
9.8
"BLD",3208,"KRN",9.8,"NM",0)
^9.68A^33^33
"BLD",3208,"KRN",9.8,"NM",1,0)
PXRMDLLA^^0^B92794941
"BLD",3208,"KRN",9.8,"NM",2,0)
PXRMRPCC^^0^B19989140
"BLD",3208,"KRN",9.8,"NM",3,0)
PXRMEXDG^^0^B39114488
"BLD",3208,"KRN",9.8,"NM",4,0)
PXRMEXLD^^0^B88402628
"BLD",3208,"KRN",9.8,"NM",5,0)
PXRMEXLB^^0^B32982155
"BLD",3208,"KRN",9.8,"NM",6,0)
PXRMMST^^0^B51660558
"BLD",3208,"KRN",9.8,"NM",7,0)
PXRMEDU^^0^B20630711
"BLD",3208,"KRN",9.8,"NM",8,0)
PXRMEXAM^^0^B20153587
"BLD",3208,"KRN",9.8,"NM",9,0)
PXRMHF^^0^B62881908
"BLD",3208,"KRN",9.8,"NM",10,0)
PXRMTERM^^0^B31489891
"BLD",3208,"KRN",9.8,"NM",11,0)
PXRMUTIL^^0^B49770447
"BLD",3208,"KRN",9.8,"NM",12,0)
PXRMINQ^^0^B18904895
"BLD",3208,"KRN",9.8,"NM",13,0)
PXRMINTR^^0^B43831570
"BLD",3208,"KRN",9.8,"NM",14,0)
PXRMSPED^^0^B5772426
"BLD",3208,"KRN",9.8,"NM",15,0)
PXRMEXLC^^0^B33311948
"BLD",3208,"KRN",9.8,"NM",16,0)
PXRMEXPR^^0^B39925559
"BLD",3208,"KRN",9.8,"NM",17,0)
PXRMEXU1^^0^B69576342
"BLD",3208,"KRN",9.8,"NM",18,0)
PXRMEXSI^^0^B25282487
"BLD",3208,"KRN",9.8,"NM",19,0)
PXRMDEDT^^0^B87879865
"BLD",3208,"KRN",9.8,"NM",20,0)
PXRMDEDX^^0^B13934520
"BLD",3208,"KRN",9.8,"NM",21,0)
PXRMEXID^^0^B48057497
"BLD",3208,"KRN",9.8,"NM",22,0)
PXRMEXU5^^0^B13766605
"BLD",3208,"KRN",9.8,"NM",23,0)
PXRMMSG^^0^B1174055
"BLD",3208,"KRN",9.8,"NM",24,0)
PXRMP7I^^0^B5101215
"BLD",3208,"KRN",9.8,"NM",25,0)
PXRMEXHF^^0^B44878456
"BLD",3208,"KRN",9.8,"NM",26,0)
PXRMEXIC^^0^B32382685
"BLD",3208,"KRN",9.8,"NM",27,0)
PXRMMH^^0^B27697816
"BLD",3208,"KRN",9.8,"NM",28,0)
PXRMDATE^^0^B23143454
"BLD",3208,"KRN",9.8,"NM",29,0)
PXRMEXPU^^0^B38103498
"BLD",3208,"KRN",9.8,"NM",30,0)
PXRMEXIU^^0^B61838266
"BLD",3208,"KRN",9.8,"NM",31,0)
PXRMEXU4^^0^B50354222
"BLD",3208,"KRN",9.8,"NM",32,0)
PXRMPDEM^^0^B830500
"BLD",3208,"KRN",9.8,"NM",33,0)
PXRMEXLI^^0^B19945664
"BLD",3208,"KRN",9.8,"NM","B","PXRMDATE",28)

"BLD",3208,"KRN",9.8,"NM","B","PXRMDEDT",19)

"BLD",3208,"KRN",9.8,"NM","B","PXRMDEDX",20)

"BLD",3208,"KRN",9.8,"NM","B","PXRMDLLA",1)

"BLD",3208,"KRN",9.8,"NM","B","PXRMEDU",7)

"BLD",3208,"KRN",9.8,"NM","B","PXRMEXAM",8)

"BLD",3208,"KRN",9.8,"NM","B","PXRMEXDG",3)

"BLD",3208,"KRN",9.8,"NM","B","PXRMEXHF",25)

"BLD",3208,"KRN",9.8,"NM","B","PXRMEXIC",26)

"BLD",3208,"KRN",9.8,"NM","B","PXRMEXID",21)

"BLD",3208,"KRN",9.8,"NM","B","PXRMEXIU",30)

"BLD",3208,"KRN",9.8,"NM","B","PXRMEXLB",5)

"BLD",3208,"KRN",9.8,"NM","B","PXRMEXLC",15)

"BLD",3208,"KRN",9.8,"NM","B","PXRMEXLD",4)

"BLD",3208,"KRN",9.8,"NM","B","PXRMEXLI",33)

"BLD",3208,"KRN",9.8,"NM","B","PXRMEXPR",16)

"BLD",3208,"KRN",9.8,"NM","B","PXRMEXPU",29)

"BLD",3208,"KRN",9.8,"NM","B","PXRMEXSI",18)

"BLD",3208,"KRN",9.8,"NM","B","PXRMEXU1",17)

"BLD",3208,"KRN",9.8,"NM","B","PXRMEXU4",31)

"BLD",3208,"KRN",9.8,"NM","B","PXRMEXU5",22)

"BLD",3208,"KRN",9.8,"NM","B","PXRMHF",9)

"BLD",3208,"KRN",9.8,"NM","B","PXRMINQ",12)

"BLD",3208,"KRN",9.8,"NM","B","PXRMINTR",13)

"BLD",3208,"KRN",9.8,"NM","B","PXRMMH",27)

"BLD",3208,"KRN",9.8,"NM","B","PXRMMSG",23)

"BLD",3208,"KRN",9.8,"NM","B","PXRMMST",6)

"BLD",3208,"KRN",9.8,"NM","B","PXRMP7I",24)

"BLD",3208,"KRN",9.8,"NM","B","PXRMPDEM",32)

"BLD",3208,"KRN",9.8,"NM","B","PXRMRPCC",2)

"BLD",3208,"KRN",9.8,"NM","B","PXRMSPED",14)

"BLD",3208,"KRN",9.8,"NM","B","PXRMTERM",10)

"BLD",3208,"KRN",9.8,"NM","B","PXRMUTIL",11)

"BLD",3208,"KRN",19,0)
19
"BLD",3208,"KRN",19,"NM",0)
^9.68A^8^8
"BLD",3208,"KRN",19,"NM",1,0)
PXRM MANAGERS MENU^^2
"BLD",3208,"KRN",19,"NM",2,0)
PXRM MST SYNCHRONIZATION^^0
"BLD",3208,"KRN",19,"NM",3,0)
PXRM SPONSOR INQUIRY^^0
"BLD",3208,"KRN",19,"NM",4,0)
PXRM SPONSOR MANAGEMENT^^0
"BLD",3208,"KRN",19,"NM",5,0)
PXRM MST MANAGEMENT^^0
"BLD",3208,"KRN",19,"NM",6,0)
PXRM MST REPORT^^0
"BLD",3208,"KRN",19,"NM",7,0)
PXRM SPONSOR EDIT^^0
"BLD",3208,"KRN",19,"NM",8,0)
PXRM SPONSOR LIST^^0
"BLD",3208,"KRN",19,"NM","B","PXRM MANAGERS MENU",1)

"BLD",3208,"KRN",19,"NM","B","PXRM MST MANAGEMENT",5)

"BLD",3208,"KRN",19,"NM","B","PXRM MST REPORT",6)

"BLD",3208,"KRN",19,"NM","B","PXRM MST SYNCHRONIZATION",2)

"BLD",3208,"KRN",19,"NM","B","PXRM SPONSOR EDIT",7)

"BLD",3208,"KRN",19,"NM","B","PXRM SPONSOR INQUIRY",3)

"BLD",3208,"KRN",19,"NM","B","PXRM SPONSOR LIST",8)

"BLD",3208,"KRN",19,"NM","B","PXRM SPONSOR MANAGEMENT",4)

"BLD",3208,"KRN",19.1,0)
19.1
"BLD",3208,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",3208,"KRN",101,0)
101
"BLD",3208,"KRN",101,"NM",0)
^9.68A^^
"BLD",3208,"KRN",409.61,0)
409.61
"BLD",3208,"KRN",771,0)
771
"BLD",3208,"KRN",870,0)
870
"BLD",3208,"KRN",8994,0)
8994
"BLD",3208,"KRN","B",.4,.4)

"BLD",3208,"KRN","B",.401,.401)

"BLD",3208,"KRN","B",.402,.402)

"BLD",3208,"KRN","B",.403,.403)

"BLD",3208,"KRN","B",.5,.5)

"BLD",3208,"KRN","B",.84,.84)

"BLD",3208,"KRN","B",3.6,3.6)

"BLD",3208,"KRN","B",3.8,3.8)

"BLD",3208,"KRN","B",9.2,9.2)

"BLD",3208,"KRN","B",9.8,9.8)

"BLD",3208,"KRN","B",19,19)

"BLD",3208,"KRN","B",19.1,19.1)

"BLD",3208,"KRN","B",101,101)

"BLD",3208,"KRN","B",409.61,409.61)

"BLD",3208,"KRN","B",771,771)

"BLD",3208,"KRN","B",870,870)

"BLD",3208,"KRN","B",8994,8994)

"BLD",3208,"QUES",0)
^9.62^^
"BLD",3208,"REQB",0)
^9.611^3^3
"BLD",3208,"REQB",1,0)
PXRM*1.5*5^2
"BLD",3208,"REQB",2,0)
DG*5.3*353^2
"BLD",3208,"REQB",3,0)
PXRM*1.5*1^2
"BLD",3208,"REQB","B","DG*5.3*353",2)

"BLD",3208,"REQB","B","PXRM*1.5*1",3)

"BLD",3208,"REQB","B","PXRM*1.5*5",1)

"DATA",811.8,2,0)
IHD POST MI FOLLOW UP^CROMWELL,TIMOTHY J at ST LOUIS, MO (CONS)^3010913.120224
"DATA",811.8,2,100,1,0)
<?xml version="1.0" standalone="yes"?>
"DATA",811.8,2,100,2,0)
<REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,2,100,3,0)
<PACKAGE_VERSION>1.5</PACKAGE_VERSION>
"DATA",811.8,2,100,4,0)
<INDEX_AT>1005</INDEX_AT>
"DATA",811.8,2,100,5,0)
<SOURCE>
"DATA",811.8,2,100,6,0)
<NAME>IHD POST MI FOLLOW UP</NAME>
"DATA",811.8,2,100,7,0)
<USER>CROMWELL,TIMOTHY J</USER>
"DATA",811.8,2,100,8,0)
<SITE>ST LOUIS, MO (CONS)</SITE>
"DATA",811.8,2,100,9,0)
<DATE_PACKED>09/13/2001@12:02:24</DATE_PACKED>
"DATA",811.8,2,100,10,0)
</SOURCE>
"DATA",811.8,2,100,11,0)
<DESCRIPTION><![CDATA[
"DATA",811.8,2,100,12,0)
    Patients with diagnosis associated with prior Acute Myocardial
"DATA",811.8,2,100,13,0)
Infarction or Ischemic Heart Disease / CAD are recommended to be on the
"DATA",811.8,2,100,14,0)
following therapy, or have documented reason for exclusion:
"DATA",811.8,2,100,15,0)
 
"DATA",811.8,2,100,16,0)
    1.  Aspirin therapy 
"DATA",811.8,2,100,17,0)
    2.  Beta blocker therapy 
"DATA",811.8,2,100,18,0)
    3.  ACE Inhibitor for EF <= 40% 
"DATA",811.8,2,100,19,0)
    4.  Lipid profile and LDL-C level 
"DATA",811.8,2,100,20,0)
    5.  Cholesterol management plan
"DATA",811.8,2,100,21,0)
    6.  Diet counselling for Cholesterol and Cardiac risk factors 
"DATA",811.8,2,100,22,0)
    7.  Exercise program for Cholesterol and Cardiac risk factors
"DATA",811.8,2,100,23,0)
 
"DATA",811.8,2,100,24,0)
 
"DATA",811.8,2,100,25,0)
TARGET GROUP: 
"DATA",811.8,2,100,26,0)
Patients with a diagnosis associated with prior Acute Myocardial
"DATA",811.8,2,100,27,0)
Infarction or Ischemic Heart Disease.
"DATA",811.8,2,100,28,0)
 
"DATA",811.8,2,100,29,0)
        All patients with a diagnosis of congestive heart failure will be 
"DATA",811.8,2,100,30,0)
evaluated every 12 months with review of Therapy(ies).  
"DATA",811.8,2,100,31,0)
]]></DESCRIPTION>
"DATA",811.8,2,100,32,0)
<KEYWORDS>
"DATA",811.8,2,100,33,0)
</KEYWORDS>
"DATA",811.8,2,100,34,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,35,0)
<FILE_NAME>DRUG</FILE_NAME>
"DATA",811.8,2,100,36,0)
<FILE_NUMBER>50</FILE_NUMBER>
"DATA",811.8,2,100,37,0)
<POINT_01>ASPIRIN 325MG TAB</POINT_01>
"DATA",811.8,2,100,38,0)
<INTERNAL_ENTRY_NUMBER>276</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,39,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,40,0)
<![CDATA[
"DATA",811.8,2,100,41,0)
50;+276,;.01~ASPIRIN 325MG TAB
"DATA",811.8,2,100,42,0)
]]>
"DATA",811.8,2,100,43,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,44,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,45,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,46,0)
<FILE_NAME>DRUG</FILE_NAME>
"DATA",811.8,2,100,47,0)
<FILE_NUMBER>50</FILE_NUMBER>
"DATA",811.8,2,100,48,0)
<POINT_01>ASPIRIN 325MG EC TAB</POINT_01>
"DATA",811.8,2,100,49,0)
<INTERNAL_ENTRY_NUMBER>277</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,50,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,51,0)
<![CDATA[
"DATA",811.8,2,100,52,0)
50;+277,;.01~ASPIRIN 325MG EC TAB
"DATA",811.8,2,100,53,0)
]]>
"DATA",811.8,2,100,54,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,55,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,56,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,57,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,2,100,58,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,2,100,59,0)
<POINT_01>REMINDER FACTORS</POINT_01>
"DATA",811.8,2,100,60,0)
<INTERNAL_ENTRY_NUMBER>41</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,61,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,62,0)
<![CDATA[
"DATA",811.8,2,100,63,0)
9999999.64;+41,;.01~REMINDER FACTORS
"DATA",811.8,2,100,64,0)
9999999.64;+41,;.03~REMINDER FACTORS
"DATA",811.8,2,100,65,0)
9999999.64;+41,;.08~YES
"DATA",811.8,2,100,66,0)
9999999.64;+41,;.1~CATEGORY
"DATA",811.8,2,100,67,0)
]]>
"DATA",811.8,2,100,68,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,69,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,70,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,71,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,2,100,72,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,2,100,73,0)
<POINT_01>DIABETIC CARE</POINT_01>
"DATA",811.8,2,100,74,0)
<INTERNAL_ENTRY_NUMBER>74</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,75,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,76,0)
<![CDATA[
"DATA",811.8,2,100,77,0)
9999999.64;+74,;.01~DIABETIC CARE
"DATA",811.8,2,100,78,0)
9999999.64;+74,;.03~DIABETIC CARE
"DATA",811.8,2,100,79,0)
9999999.64;+74,;.08~NO
"DATA",811.8,2,100,80,0)
9999999.64;+74,;.1~CATEGORY
"DATA",811.8,2,100,81,0)
]]>
"DATA",811.8,2,100,82,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,83,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,84,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,85,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,2,100,86,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,2,100,87,0)
<POINT_01>ISCHEMIC HEART DISEASE</POINT_01>
"DATA",811.8,2,100,88,0)
<INTERNAL_ENTRY_NUMBER>657090</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,89,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,90,0)
<![CDATA[
"DATA",811.8,2,100,91,0)
9999999.64;+657090,;.01~ISCHEMIC HEART DISEASE
"DATA",811.8,2,100,92,0)
9999999.64;+657090,;.1~CATEGORY
"DATA",811.8,2,100,93,0)
]]>
"DATA",811.8,2,100,94,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,95,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,96,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,97,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,2,100,98,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,2,100,99,0)
<POINT_01>NON-VA PROVIDED MEDICATIONS</POINT_01>
"DATA",811.8,2,100,100,0)
<INTERNAL_ENTRY_NUMBER>657209</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,101,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,102,0)
<![CDATA[
"DATA",811.8,2,100,103,0)
9999999.64;+657209,;.01~NON-VA PROVIDED MEDICATIONS
"DATA",811.8,2,100,104,0)
9999999.64;+657209,;.1~CATEGORY
"DATA",811.8,2,100,105,0)
]]>
"DATA",811.8,2,100,106,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,107,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,108,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,109,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,2,100,110,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,2,100,111,0)
<POINT_01>REFUSED LIPID PROFILE</POINT_01>
"DATA",811.8,2,100,112,0)
<INTERNAL_ENTRY_NUMBER>657035</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,113,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,114,0)
<![CDATA[
"DATA",811.8,2,100,115,0)
9999999.64;+657035,;.01~REFUSED LIPID PROFILE
"DATA",811.8,2,100,116,0)
9999999.64;+657035,;.03~DIABETIC CARE
"DATA",811.8,2,100,117,0)
9999999.64;+657035,;.08~YES
"DATA",811.8,2,100,118,0)
9999999.64;+657035,;.1~FACTOR
"DATA",811.8,2,100,119,0)
]]>
"DATA",811.8,2,100,120,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,121,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,122,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,123,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,2,100,124,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,2,100,125,0)
<POINT_01>ASA CONTRAINDICATED</POINT_01>
"DATA",811.8,2,100,126,0)
<INTERNAL_ENTRY_NUMBER>657207</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,127,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,128,0)
<![CDATA[
"DATA",811.8,2,100,129,0)
9999999.64;+657207,;.01~ASA CONTRAINDICATED
"DATA",811.8,2,100,130,0)
9999999.64;+657207,;.03~ISCHEMIC HEART DISEASE
"DATA",811.8,2,100,131,0)
9999999.64;+657207,;.08~YES
"DATA",811.8,2,100,132,0)
9999999.64;+657207,;.1~FACTOR
"DATA",811.8,2,100,133,0)
]]>
"DATA",811.8,2,100,134,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,135,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,136,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,137,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,2,100,138,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,2,100,139,0)
<POINT_01>BETA BLOCKERS CONTRAINDICATED</POINT_01>
"DATA",811.8,2,100,140,0)
<INTERNAL_ENTRY_NUMBER>657208</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,141,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,142,0)
<![CDATA[
"DATA",811.8,2,100,143,0)
9999999.64;+657208,;.01~BETA BLOCKERS CONTRAINDICATED
"DATA",811.8,2,100,144,0)
9999999.64;+657208,;.03~ISCHEMIC HEART DISEASE
"DATA",811.8,2,100,145,0)
9999999.64;+657208,;.08~YES
"DATA",811.8,2,100,146,0)
9999999.64;+657208,;.1~FACTOR
"DATA",811.8,2,100,147,0)
]]>
"DATA",811.8,2,100,148,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,149,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,150,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,151,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,2,100,152,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,2,100,153,0)
<POINT_01>TAKING ASA OTHER SOURCE</POINT_01>
"DATA",811.8,2,100,154,0)
<INTERNAL_ENTRY_NUMBER>657210</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,155,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,156,0)
<![CDATA[
"DATA",811.8,2,100,157,0)
9999999.64;+657210,;.01~TAKING ASA OTHER SOURCE
"DATA",811.8,2,100,158,0)
9999999.64;+657210,;.03~NON-VA PROVIDED MEDICATIONS
"DATA",811.8,2,100,159,0)
9999999.64;+657210,;.08~YES
"DATA",811.8,2,100,160,0)
9999999.64;+657210,;.1~FACTOR
"DATA",811.8,2,100,161,0)
]]>
"DATA",811.8,2,100,162,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,163,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,164,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,165,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,2,100,166,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,2,100,167,0)
<POINT_01>TAKING BETA BLOCKERS OTHER SOURCE</POINT_01>
"DATA",811.8,2,100,168,0)
<INTERNAL_ENTRY_NUMBER>657211</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,169,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,170,0)
<![CDATA[
"DATA",811.8,2,100,171,0)
9999999.64;+657211,;.01~TAKING BETA BLOCKERS OTHER SOURCE
"DATA",811.8,2,100,172,0)
9999999.64;+657211,;.03~NON-VA PROVIDED MEDICATIONS
"DATA",811.8,2,100,173,0)
9999999.64;+657211,;.08~YES
"DATA",811.8,2,100,174,0)
9999999.64;+657211,;.1~FACTOR
"DATA",811.8,2,100,175,0)
]]>
"DATA",811.8,2,100,176,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,177,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,178,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,179,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,2,100,180,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,2,100,181,0)
<POINT_01>IHD POST MI REVIEW COMPLETE</POINT_01>
"DATA",811.8,2,100,182,0)
<INTERNAL_ENTRY_NUMBER>657218</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,183,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,184,0)
<![CDATA[
"DATA",811.8,2,100,185,0)
9999999.64;+657218,;.01~IHD POST MI REVIEW COMPLETE
"DATA",811.8,2,100,186,0)
9999999.64;+657218,;.03~REMINDER FACTORS
"DATA",811.8,2,100,187,0)
9999999.64;+657218,;.08~YES
"DATA",811.8,2,100,188,0)
9999999.64;+657218,;.1~FACTOR
"DATA",811.8,2,100,189,0)
]]>
"DATA",811.8,2,100,190,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,191,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,192,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,193,0)
<FILE_NAME>LABORATORY TEST</FILE_NAME>
"DATA",811.8,2,100,194,0)
<FILE_NUMBER>60</FILE_NUMBER>
"DATA",811.8,2,100,195,0)
<POINT_01>CALCULATED LDL</POINT_01>
"DATA",811.8,2,100,196,0)
<INTERNAL_ENTRY_NUMBER>902</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,197,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,198,0)
<![CDATA[
"DATA",811.8,2,100,199,0)
60;+902,;.01~CALCULATED LDL
"DATA",811.8,2,100,200,0)
]]>
"DATA",811.8,2,100,201,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,202,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,203,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,204,0)
<FILE_NAME>ORDER DIALOG</FILE_NAME>
"DATA",811.8,2,100,205,0)
<FILE_NUMBER>101.41</FILE_NUMBER>
"DATA",811.8,2,100,206,0)
<POINT_01>PSO OERR</POINT_01>
"DATA",811.8,2,100,207,0)
<INTERNAL_ENTRY_NUMBER>147</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,208,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,209,0)
<![CDATA[
"DATA",811.8,2,100,210,0)
101.41;+147,;.01~PSO OERR
"DATA",811.8,2,100,211,0)
]]>
"DATA",811.8,2,100,212,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,213,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,214,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,215,0)
<FILE_NAME>ORDER DIALOG</FILE_NAME>
"DATA",811.8,2,100,216,0)
<FILE_NUMBER>101.41</FILE_NUMBER>
"DATA",811.8,2,100,217,0)
<POINT_01>LR LIPID PROFILE</POINT_01>
"DATA",811.8,2,100,218,0)
<INTERNAL_ENTRY_NUMBER>7932</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,219,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,220,0)
<![CDATA[
"DATA",811.8,2,100,221,0)
101.41;+7932,;.01~LR LIPID PROFILE
"DATA",811.8,2,100,222,0)
]]>
"DATA",811.8,2,100,223,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,224,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,225,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,226,0)
<FILE_NAME>ORDERABLE ITEMS</FILE_NAME>
"DATA",811.8,2,100,227,0)
<FILE_NUMBER>101.43</FILE_NUMBER>
"DATA",811.8,2,100,228,0)
<POINT_01>ASPIRIN TAB </POINT_01>
"DATA",811.8,2,100,229,0)
<INTERNAL_ENTRY_NUMBER>2241</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,230,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,231,0)
<![CDATA[
"DATA",811.8,2,100,232,0)
101.43;+2241,;.01~ASPIRIN TAB 
"DATA",811.8,2,100,233,0)
]]>
"DATA",811.8,2,100,234,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,235,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,236,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,237,0)
<FILE_NAME>ORDERABLE ITEMS</FILE_NAME>
"DATA",811.8,2,100,238,0)
<FILE_NUMBER>101.43</FILE_NUMBER>
"DATA",811.8,2,100,239,0)
<POINT_01>ASPIRIN TAB,EC </POINT_01>
"DATA",811.8,2,100,240,0)
<INTERNAL_ENTRY_NUMBER>2242</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,241,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,242,0)
<![CDATA[
"DATA",811.8,2,100,243,0)
101.43;+2242,;.01~ASPIRIN TAB,EC 
"DATA",811.8,2,100,244,0)
]]>
"DATA",811.8,2,100,245,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,246,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,247,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,248,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,2,100,249,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,2,100,250,0)
<POINT_01>ACUTE MYOCARDIAL INFARCTION</POINT_01>
"DATA",811.8,2,100,251,0)
<INTERNAL_ENTRY_NUMBER>13</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,252,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,253,0)
<![CDATA[
"DATA",811.8,2,100,254,0)
811.2;+13,;.01~ACUTE MYOCARDIAL INFARCTION
"DATA",811.8,2,100,255,0)
811.2;+13,;.02~Codes used to signify acute MI
"DATA",811.8,2,100,256,0)
811.2;+13,;4~IN,EN,PL
"DATA",811.8,2,100,257,0)
811.2;+13,;100~LOCAL
"DATA",811.8,2,100,258,0)
811.21;+1,+13,;.01~09/13/2001@12:02:37
"DATA",811.8,2,100,259,0)
811.21;+1,+13,;1~CROMWELL,TIMOTHY J
"DATA",811.8,2,100,260,0)
811.21;+1,+13,;2~WP-start~1
"DATA",811.8,2,100,261,0)
Exchange Stub
"DATA",811.8,2,100,262,0)
811.22102;+2,+13,;.01~410.00
"DATA",811.8,2,100,263,0)
811.22102;+2,+13,;1~410.90
"DATA",811.8,2,100,264,0)
811.22102;+3,+13,;.01~412.
"DATA",811.8,2,100,265,0)
811.22102;+3,+13,;1~412.
"DATA",811.8,2,100,266,0)
]]>
"DATA",811.8,2,100,267,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,268,0)
<IEN_ROOT>
"DATA",811.8,2,100,269,0)
<![CDATA[
"DATA",811.8,2,100,270,0)
1^1
"DATA",811.8,2,100,271,0)
2^1
"DATA",811.8,2,100,272,0)
3^2
"DATA",811.8,2,100,273,0)
]]>
"DATA",811.8,2,100,274,0)
</IEN_ROOT>
"DATA",811.8,2,100,275,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,276,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,277,0)
<FILE_NAME>REMINDER TERM</FILE_NAME>
"DATA",811.8,2,100,278,0)
<FILE_NUMBER>811.5</FILE_NUMBER>
"DATA",811.8,2,100,279,0)
<POINT_01>ASPIRIN THERAPY</POINT_01>
"DATA",811.8,2,100,280,0)
<INTERNAL_ENTRY_NUMBER>27</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,281,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,282,0)
<![CDATA[
"DATA",811.8,2,100,283,0)
811.5;+27,;.01~ASPIRIN THERAPY
"DATA",811.8,2,100,284,0)
811.5;+27,;100~LOCAL
"DATA",811.8,2,100,285,0)
811.52;+1,+27,;.01~OI.ASPIRIN TAB 
"DATA",811.8,2,100,286,0)
811.52;+1,+27,;9~1Y
"DATA",811.8,2,100,287,0)
811.52;+2,+27,;.01~OI.ASPIRIN TAB,EC 
"DATA",811.8,2,100,288,0)
811.52;+2,+27,;9~1Y
"DATA",811.8,2,100,289,0)
811.52;+3,+27,;.01~DR.ASPIRIN 325MG EC TAB
"DATA",811.8,2,100,290,0)
811.52;+3,+27,;16~BOTH
"DATA",811.8,2,100,291,0)
811.52;+4,+27,;.01~DR.ASPIRIN 325MG TAB
"DATA",811.8,2,100,292,0)
811.52;+4,+27,;16~BOTH
"DATA",811.8,2,100,293,0)
811.53;+5,+27,;.01~09/13/2001@12:02:37
"DATA",811.8,2,100,294,0)
811.53;+5,+27,;1~CROMWELL,TIMOTHY J
"DATA",811.8,2,100,295,0)
811.53;+5,+27,;2~WP-start~1
"DATA",811.8,2,100,296,0)
Exchange Stub
"DATA",811.8,2,100,297,0)
]]>
"DATA",811.8,2,100,298,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,299,0)
<IEN_ROOT>
"DATA",811.8,2,100,300,0)
<![CDATA[
"DATA",811.8,2,100,301,0)
1^1
"DATA",811.8,2,100,302,0)
2^2
"DATA",811.8,2,100,303,0)
3^3
"DATA",811.8,2,100,304,0)
4^4
"DATA",811.8,2,100,305,0)
5^1
"DATA",811.8,2,100,306,0)
]]>
"DATA",811.8,2,100,307,0)
</IEN_ROOT>
"DATA",811.8,2,100,308,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,309,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,310,0)
<FILE_NAME>VA DRUG CLASS</FILE_NAME>
"DATA",811.8,2,100,311,0)
<FILE_NUMBER>50.605</FILE_NUMBER>
"DATA",811.8,2,100,312,0)
<POINT_01>CV100</POINT_01>
"DATA",811.8,2,100,313,0)
<INTERNAL_ENTRY_NUMBER>54</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,314,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,315,0)
<![CDATA[
"DATA",811.8,2,100,316,0)
50.605;+54,;.01~CV100
"DATA",811.8,2,100,317,0)
]]>
"DATA",811.8,2,100,318,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,319,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,320,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,321,0)
<FILE_NAME>TIU TEMPLATE FIELD</FILE_NAME>
"DATA",811.8,2,100,322,0)
<FILE_NUMBER>8927.1</FILE_NUMBER>
"DATA",811.8,2,100,323,0)
<POINT_01>BETA BLOCKERS CONTRAINDICATIONS</POINT_01>
"DATA",811.8,2,100,324,0)
<INTERNAL_ENTRY_NUMBER>44</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,325,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,326,0)
<![CDATA[
"DATA",811.8,2,100,327,0)
8927.1;+44,;.01~BETA BLOCKERS CONTRAINDICATIONS
"DATA",811.8,2,100,328,0)
8927.1;+44,;.02~Check Boxes
"DATA",811.8,2,100,329,0)
8927.1;+44,;.03~NO
"DATA",811.8,2,100,330,0)
8927.1;+44,;.04~0
"DATA",811.8,2,100,331,0)
8927.1;+44,;.07~0
"DATA",811.8,2,100,332,0)
8927.1;+44,;.08~YES
"DATA",811.8,2,100,333,0)
8927.1;+44,;.09~YES
"DATA",811.8,2,100,334,0)
8927.1;+44,;.1~0
"DATA",811.8,2,100,335,0)
8927.1;+44,;.11~0
"DATA",811.8,2,100,336,0)
8927.1;+44,;.12~0
"DATA",811.8,2,100,337,0)
8927.1;+44,;.13~0
"DATA",811.8,2,100,338,0)
8927.1;+44,;.14~0
"DATA",811.8,2,100,339,0)
8927.1;+44,;.15~0
"DATA",811.8,2,100,340,0)
8927.1;+44,;2~WP-start~3
"DATA",811.8,2,100,341,0)
Tim Cromwell
"DATA",811.8,2,100,342,0)
For clinical reminder
"DATA",811.8,2,100,343,0)
7/31/01
"DATA",811.8,2,100,344,0)
8927.1;+44,;10~WP-start~9
"DATA",811.8,2,100,345,0)
allergy or intolerance to beta blockers
"DATA",811.8,2,100,346,0)
asthma
"DATA",811.8,2,100,347,0)
bi-fasicular block on EKG
"DATA",811.8,2,100,348,0)
bradycardia
"DATA",811.8,2,100,349,0)
PR intervals >.24 seconds
"DATA",811.8,2,100,350,0)
2d or 3d degree heart block
"DATA",811.8,2,100,351,0)
symptomatic heart failure
"DATA",811.8,2,100,352,0)
systolic BP<100mm HG
"DATA",811.8,2,100,353,0)
other, documented below
"DATA",811.8,2,100,354,0)
]]>
"DATA",811.8,2,100,355,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,356,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,357,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,358,0)
<FILE_NAME>TIU TEMPLATE FIELD</FILE_NAME>
"DATA",811.8,2,100,359,0)
<FILE_NUMBER>8927.1</FILE_NUMBER>
"DATA",811.8,2,100,360,0)
<POINT_01>A GENERIC WORD PROCESSING BOX</POINT_01>
"DATA",811.8,2,100,361,0)
<INTERNAL_ENTRY_NUMBER>2</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,362,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,363,0)
<![CDATA[
"DATA",811.8,2,100,364,0)
8927.1;+2,;.01~A GENERIC WORD PROCESSING BOX
"DATA",811.8,2,100,365,0)
8927.1;+2,;.02~Word Processing
"DATA",811.8,2,100,366,0)
8927.1;+2,;.03~NO
"DATA",811.8,2,100,367,0)
8927.1;+2,;.04~74
"DATA",811.8,2,100,368,0)
8927.1;+2,;.07~0
"DATA",811.8,2,100,369,0)
8927.1;+2,;.08~NO
"DATA",811.8,2,100,370,0)
8927.1;+2,;.09~NO
"DATA",811.8,2,100,371,0)
8927.1;+2,;.1~2
"DATA",811.8,2,100,372,0)
8927.1;+2,;.11~0
"DATA",811.8,2,100,373,0)
8927.1;+2,;.12~0
"DATA",811.8,2,100,374,0)
8927.1;+2,;.13~0
"DATA",811.8,2,100,375,0)
8927.1;+2,;.14~0
"DATA",811.8,2,100,376,0)
8927.1;+2,;.15~0
"DATA",811.8,2,100,377,0)
8927.1;+2,;2~WP-start~1
"DATA",811.8,2,100,378,0)
Tim Cromwell  7/18/01
"DATA",811.8,2,100,379,0)
]]>
"DATA",811.8,2,100,380,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,381,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,382,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,383,0)
<FILE_NAME>TIU TEMPLATE FIELD</FILE_NAME>
"DATA",811.8,2,100,384,0)
<FILE_NUMBER>8927.1</FILE_NUMBER>
"DATA",811.8,2,100,385,0)
<POINT_01>ASA CONTRAINDICATIONS</POINT_01>
"DATA",811.8,2,100,386,0)
<INTERNAL_ENTRY_NUMBER>43</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,387,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,388,0)
<![CDATA[
"DATA",811.8,2,100,389,0)
8927.1;+43,;.01~ASA CONTRAINDICATIONS
"DATA",811.8,2,100,390,0)
8927.1;+43,;.02~Check Boxes
"DATA",811.8,2,100,391,0)
8927.1;+43,;.03~NO
"DATA",811.8,2,100,392,0)
8927.1;+43,;.04~33
"DATA",811.8,2,100,393,0)
8927.1;+43,;.07~0
"DATA",811.8,2,100,394,0)
8927.1;+43,;.08~YES
"DATA",811.8,2,100,395,0)
8927.1;+43,;.09~YES
"DATA",811.8,2,100,396,0)
8927.1;+43,;.1~0
"DATA",811.8,2,100,397,0)
8927.1;+43,;.11~0
"DATA",811.8,2,100,398,0)
8927.1;+43,;.12~0
"DATA",811.8,2,100,399,0)
8927.1;+43,;.13~0
"DATA",811.8,2,100,400,0)
8927.1;+43,;.14~0
"DATA",811.8,2,100,401,0)
8927.1;+43,;.15~0
"DATA",811.8,2,100,402,0)
8927.1;+43,;2~WP-start~2
"DATA",811.8,2,100,403,0)
Tim Cromwell 7/24/01
"DATA",811.8,2,100,404,0)
for clinical reminder
"DATA",811.8,2,100,405,0)
8927.1;+43,;10~WP-start~5
"DATA",811.8,2,100,406,0)
allergy or intolerance to Aspirin
"DATA",811.8,2,100,407,0)
taking anti-platelet medication
"DATA",811.8,2,100,408,0)
taking NSAID
"DATA",811.8,2,100,409,0)
taking warfarin/coumadin
"DATA",811.8,2,100,410,0)
other reason, documented below
"DATA",811.8,2,100,411,0)
]]>
"DATA",811.8,2,100,412,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,413,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,414,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,415,0)
<FILE_NAME>TIU TEMPLATE FIELD</FILE_NAME>
"DATA",811.8,2,100,416,0)
<FILE_NUMBER>8927.1</FILE_NUMBER>
"DATA",811.8,2,100,417,0)
<POINT_01>A GENERIC WORD PROCESSING BOX</POINT_01>
"DATA",811.8,2,100,418,0)
<INTERNAL_ENTRY_NUMBER>2</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,419,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,420,0)
<![CDATA[
"DATA",811.8,2,100,421,0)
8927.1;+2,;.01~A GENERIC WORD PROCESSING BOX
"DATA",811.8,2,100,422,0)
8927.1;+2,;.02~Word Processing
"DATA",811.8,2,100,423,0)
8927.1;+2,;.03~NO
"DATA",811.8,2,100,424,0)
8927.1;+2,;.04~74
"DATA",811.8,2,100,425,0)
8927.1;+2,;.07~0
"DATA",811.8,2,100,426,0)
8927.1;+2,;.08~NO
"DATA",811.8,2,100,427,0)
8927.1;+2,;.09~NO
"DATA",811.8,2,100,428,0)
8927.1;+2,;.1~2
"DATA",811.8,2,100,429,0)
8927.1;+2,;.11~0
"DATA",811.8,2,100,430,0)
8927.1;+2,;.12~0
"DATA",811.8,2,100,431,0)
8927.1;+2,;.13~0
"DATA",811.8,2,100,432,0)
8927.1;+2,;.14~0
"DATA",811.8,2,100,433,0)
8927.1;+2,;.15~0
"DATA",811.8,2,100,434,0)
8927.1;+2,;2~WP-start~1
"DATA",811.8,2,100,435,0)
Tim Cromwell  7/18/01
"DATA",811.8,2,100,436,0)
]]>
"DATA",811.8,2,100,437,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,438,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,439,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,440,0)
<FILE_NAME>REMINDER DEFINITION</FILE_NAME>
"DATA",811.8,2,100,441,0)
<FILE_NUMBER>811.9</FILE_NUMBER>
"DATA",811.8,2,100,442,0)
<POINT_01>IHD POST MI FOLLOW UP</POINT_01>
"DATA",811.8,2,100,443,0)
<INTERNAL_ENTRY_NUMBER>53</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,444,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,445,0)
<![CDATA[
"DATA",811.8,2,100,446,0)
811.9;+53,;.01~IHD POST MI FOLLOW UP
"DATA",811.8,2,100,447,0)
811.9;+53,;1.2~Ischemic HD/Post MI Follow Up
"DATA",811.8,2,100,448,0)
811.9;+53,;1.3~1M
"DATA",811.8,2,100,449,0)
811.9;+53,;1.7~JUL 24, 2001@11:34:49
"DATA",811.8,2,100,450,0)
811.9;+53,;2~WP-start~19
"DATA",811.8,2,100,451,0)
    Patients with diagnosis associated with prior Acute Myocardial
"DATA",811.8,2,100,452,0)
Infarction or Ischemic Heart Disease / CAD are recommended to be on the
"DATA",811.8,2,100,453,0)
following therapy, or have documented reason for exclusion:
"DATA",811.8,2,100,454,0)
 
"DATA",811.8,2,100,455,0)
    1.  Aspirin therapy 
"DATA",811.8,2,100,456,0)
    2.  Beta blocker therapy 
"DATA",811.8,2,100,457,0)
    3.  ACE Inhibitor for EF <= 40% 
"DATA",811.8,2,100,458,0)
    4.  Lipid profile and LDL-C level 
"DATA",811.8,2,100,459,0)
    5.  Cholesterol management plan
"DATA",811.8,2,100,460,0)
    6.  Diet counselling for Cholesterol and Cardiac risk factors 
"DATA",811.8,2,100,461,0)
    7.  Exercise program for Cholesterol and Cardiac risk factors
"DATA",811.8,2,100,462,0)
 
"DATA",811.8,2,100,463,0)
 
"DATA",811.8,2,100,464,0)
TARGET GROUP: 
"DATA",811.8,2,100,465,0)
Patients with a diagnosis associated with prior Acute Myocardial
"DATA",811.8,2,100,466,0)
Infarction or Ischemic Heart Disease.
"DATA",811.8,2,100,467,0)
 
"DATA",811.8,2,100,468,0)
        All patients with a diagnosis of congestive heart failure will be 
"DATA",811.8,2,100,469,0)
evaluated every 12 months with review of Therapy(ies).  
"DATA",811.8,2,100,470,0)
811.9;+53,;31~(SEX)&(AGE)&FI(2)
"DATA",811.8,2,100,471,0)
811.9;+53,;32~1
"DATA",811.8,2,100,472,0)
811.9;+53,;33~2
"DATA",811.8,2,100,473,0)
811.9;+53,;34~(FI(7)!FI(5)!FI(10))&(FI(4)!FI(12)!FI(9))&(FI(6)!FI(8)!FI(11))
"DATA",811.8,2,100,474,0)
811.9;+53,;35~(FI(7)!FI(5)!FI(10))&(FI(4)!FI(12)!FI(9))&(FI(6)!FI(8)!FI(11))
"DATA",811.8,2,100,475,0)
811.9;+53,;36~9
"DATA",811.8,2,100,476,0)
811.9;+53,;37~7;5;10;4;12;9;6;8;11
"DATA",811.8,2,100,477,0)
811.9;+53,;40~0
"DATA",811.8,2,100,478,0)
811.9;+53,;42~0
"DATA",811.8,2,100,479,0)
811.9;+53,;51~IHD POST MI FOLLOW UP
"DATA",811.8,2,100,480,0)
811.9;+53,;100~LOCAL
"DATA",811.8,2,100,481,0)
811.9;+53,;103~C
"DATA",811.8,2,100,482,0)
811.9001;+1,+53,;.01~09/13/2001@12:02:38
"DATA",811.8,2,100,483,0)
811.9001;+1,+53,;1~CROMWELL,TIMOTHY J
"DATA",811.8,2,100,484,0)
811.9001;+1,+53,;2~WP-start~1
"DATA",811.8,2,100,485,0)
Exchange Stub
"DATA",811.8,2,100,486,0)
811.902;+10,+53,;.01~HF.BETA BLOCKERS CONTRAINDICATED
"DATA",811.8,2,100,487,0)
811.902;+10,+53,;9~1Y
"DATA",811.8,2,100,488,0)
811.902;+11,+53,;.01~HF.REFUSED LIPID PROFILE
"DATA",811.8,2,100,489,0)
811.902;+11,+53,;9~1Y
"DATA",811.8,2,100,490,0)
811.902;+2,+53,;.01~HF.TAKING ASA OTHER SOURCE
"DATA",811.8,2,100,491,0)
811.902;+2,+53,;9~1Y
"DATA",811.8,2,100,492,0)
811.902;+3,+53,;.01~HF.TAKING BETA BLOCKERS OTHER SOURCE
"DATA",811.8,2,100,493,0)
811.902;+3,+53,;9~1Y
"DATA",811.8,2,100,494,0)
811.902;+4,+53,;.01~HF.IHD POST MI REVIEW COMPLETE
"DATA",811.8,2,100,495,0)
811.902;+4,+53,;9~3M
"DATA",811.8,2,100,496,0)
811.902;+5,+53,;.01~TX.ACUTE MYOCARDIAL INFARCTION
"DATA",811.8,2,100,497,0)
811.902;+5,+53,;8~AND
"DATA",811.8,2,100,498,0)
811.902;+5,+53,;9~30D
"DATA",811.8,2,100,499,0)
811.902;+6,+53,;.01~LT.CALCULATED LDL
"DATA",811.8,2,100,500,0)
811.902;+6,+53,;9~1Y
"DATA",811.8,2,100,501,0)
811.902;+6,+53,;14~I V<130
"DATA",811.8,2,100,502,0)
811.902;+7,+53,;.01~RT.ASPIRIN THERAPY
"DATA",811.8,2,100,503,0)
811.902;+7,+53,;9~1Y
"DATA",811.8,2,100,504,0)
811.902;+8,+53,;.01~DC.CV100
"DATA",811.8,2,100,505,0)
811.902;+8,+53,;9~1Y
"DATA",811.8,2,100,506,0)
811.902;+9,+53,;.01~HF.ASA CONTRAINDICATED
"DATA",811.8,2,100,507,0)
811.902;+9,+53,;9~1Y
"DATA",811.8,2,100,508,0)
811.97;+12,+53,;.01~1Y
"DATA",811.8,2,100,509,0)
]]>
"DATA",811.8,2,100,510,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,511,0)
<IEN_ROOT>
"DATA",811.8,2,100,512,0)
<![CDATA[
"DATA",811.8,2,100,513,0)
1^1
"DATA",811.8,2,100,514,0)
2^10
"DATA",811.8,2,100,515,0)
3^11
"DATA",811.8,2,100,516,0)
4^12
"DATA",811.8,2,100,517,0)
5^2
"DATA",811.8,2,100,518,0)
6^4
"DATA",811.8,2,100,519,0)
7^5
"DATA",811.8,2,100,520,0)
8^6
"DATA",811.8,2,100,521,0)
9^7
"DATA",811.8,2,100,522,0)
10^8
"DATA",811.8,2,100,523,0)
11^9
"DATA",811.8,2,100,524,0)
12^1
"DATA",811.8,2,100,525,0)
]]>
"DATA",811.8,2,100,526,0)
</IEN_ROOT>
"DATA",811.8,2,100,527,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,528,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,529,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,2,100,530,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,2,100,531,0)
<POINT_01>TIMZ IHD POST MI FOLLOW UP STATEMENT</POINT_01>
"DATA",811.8,2,100,532,0)
<INTERNAL_ENTRY_NUMBER>72</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,533,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,534,0)
<![CDATA[
"DATA",811.8,2,100,535,0)
801.41;+72,;.01~TIMZ IHD POST MI FOLLOW UP STATEMENT
"DATA",811.8,2,100,536,0)
801.41;+72,;4~dialog element
"DATA",811.8,2,100,537,0)
801.41;+72,;23~YES
"DATA",811.8,2,100,538,0)
801.41;+72,;25~WP-start~14
"DATA",811.8,2,100,539,0)
If this reminder is DUE, this patient has a history of MI and/or ischemic
"DATA",811.8,2,100,540,0)
heart disease, AND one or more of the following:<br>
"DATA",811.8,2,100,541,0)
1. Not on Aspirin therapy (or rationale)<br>
"DATA",811.8,2,100,542,0)
and/or<br>
"DATA",811.8,2,100,543,0)
2. Not on Beta-blockers   (or rationale)<br>
"DATA",811.8,2,100,544,0)
and/or<br>
"DATA",811.8,2,100,545,0)
3. Patient's calculated LDL is >130.<br>
"DATA",811.8,2,100,546,0)
 
"DATA",811.8,2,100,547,0)
To help you distinguish which of the 3 conditions is causing the reminder
"DATA",811.8,2,100,548,0)
to be DUE, examine the steps below.  If the patient is on ASA or Beta
"DATA",811.8,2,100,549,0)
blockers, the text will indicate this.  If not, you can choose to place
"DATA",811.8,2,100,550,0)
the patient on drug therapy, or indicate the reason why not.  The value of
"DATA",811.8,2,100,551,0)
the last calculated LDL will display, give you a choice to order the lab
"DATA",811.8,2,100,552,0)
test, or provide rationale.
"DATA",811.8,2,100,553,0)
801.41;+72,;51~SUPPRESS
"DATA",811.8,2,100,554,0)
801.41;+72,;100~LOCAL
"DATA",811.8,2,100,555,0)
801.44;+1,+72,;.01~09/13/2001@12:02:38
"DATA",811.8,2,100,556,0)
801.44;+1,+72,;1~CROMWELL,TIMOTHY J
"DATA",811.8,2,100,557,0)
801.44;+1,+72,;2~WP-start~1
"DATA",811.8,2,100,558,0)
Exchange Stub
"DATA",811.8,2,100,559,0)
]]>
"DATA",811.8,2,100,560,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,561,0)
<IEN_ROOT>
"DATA",811.8,2,100,562,0)
<![CDATA[
"DATA",811.8,2,100,563,0)
1^1
"DATA",811.8,2,100,564,0)
]]>
"DATA",811.8,2,100,565,0)
</IEN_ROOT>
"DATA",811.8,2,100,566,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,567,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,568,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,2,100,569,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,2,100,570,0)
<POINT_01>TIMZ IHD POST MI FOLLOW UP STATEMENT GROUP</POINT_01>
"DATA",811.8,2,100,571,0)
<INTERNAL_ENTRY_NUMBER>138</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,572,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,573,0)
<![CDATA[
"DATA",811.8,2,100,574,0)
801.41;+138,;.01~TIMZ IHD POST MI FOLLOW UP STATEMENT GROUP
"DATA",811.8,2,100,575,0)
801.41;+138,;4~dialog group
"DATA",811.8,2,100,576,0)
801.41;+138,;23~YES
"DATA",811.8,2,100,577,0)
801.41;+138,;25~WP-start~2
"DATA",811.8,2,100,578,0)
For HELP in determining why this reminder is DUE and how to resolve it,
"DATA",811.8,2,100,579,0)
CLICK HERE.
"DATA",811.8,2,100,580,0)
801.41;+138,;100~LOCAL
"DATA",811.8,2,100,581,0)
801.412;+1,+138,;.01~1
"DATA",811.8,2,100,582,0)
801.412;+1,+138,;2~TIMZ IHD POST MI FOLLOW UP STATEMENT
"DATA",811.8,2,100,583,0)
801.44;+2,+138,;.01~09/13/2001@12:02:39
"DATA",811.8,2,100,584,0)
801.44;+2,+138,;1~CROMWELL,TIMOTHY J
"DATA",811.8,2,100,585,0)
801.44;+2,+138,;2~WP-start~1
"DATA",811.8,2,100,586,0)
Exchange Stub
"DATA",811.8,2,100,587,0)
]]>
"DATA",811.8,2,100,588,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,589,0)
<IEN_ROOT>
"DATA",811.8,2,100,590,0)
<![CDATA[
"DATA",811.8,2,100,591,0)
1^1
"DATA",811.8,2,100,592,0)
2^1
"DATA",811.8,2,100,593,0)
]]>
"DATA",811.8,2,100,594,0)
</IEN_ROOT>
"DATA",811.8,2,100,595,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,596,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,597,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,2,100,598,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,2,100,599,0)
<POINT_01>IHD POST MI REVIEW COMPLETE</POINT_01>
"DATA",811.8,2,100,600,0)
<INTERNAL_ENTRY_NUMBER>139</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,601,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,602,0)
<![CDATA[
"DATA",811.8,2,100,603,0)
801.41;+139,;.01~IHD POST MI REVIEW COMPLETE
"DATA",811.8,2,100,604,0)
801.41;+139,;4~dialog element
"DATA",811.8,2,100,605,0)
801.41;+139,;15~HF.IHD POST MI REVIEW COMPLETE
"DATA",811.8,2,100,606,0)
801.41;+139,;25~WP-start~3
"DATA",811.8,2,100,607,0)
If patient's LDL remains >130 and other conditions are addressed (ASA,
"DATA",811.8,2,100,608,0)
BETA Blockers), click here to indicate that you have reviewed the MI
"DATA",811.8,2,100,609,0)
Follow up (clears the reminder for 3 months).
"DATA",811.8,2,100,610,0)
801.41;+139,;35~WP-start~1
"DATA",811.8,2,100,611,0)
Patient's post-MI follow up has been reviewed.
"DATA",811.8,2,100,612,0)
801.41;+139,;100~LOCAL
"DATA",811.8,2,100,613,0)
801.44;+1,+139,;.01~09/13/2001@12:02:39
"DATA",811.8,2,100,614,0)
801.44;+1,+139,;1~CROMWELL,TIMOTHY J
"DATA",811.8,2,100,615,0)
801.44;+1,+139,;2~WP-start~1
"DATA",811.8,2,100,616,0)
Exchange Stub
"DATA",811.8,2,100,617,0)
]]>
"DATA",811.8,2,100,618,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,619,0)
<IEN_ROOT>
"DATA",811.8,2,100,620,0)
<![CDATA[
"DATA",811.8,2,100,621,0)
1^1
"DATA",811.8,2,100,622,0)
]]>
"DATA",811.8,2,100,623,0)
</IEN_ROOT>
"DATA",811.8,2,100,624,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,625,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,626,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,2,100,627,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,2,100,628,0)
<POINT_01>EDZ ORDER LIPID PROFILE</POINT_01>
"DATA",811.8,2,100,629,0)
<INTERNAL_ENTRY_NUMBER>657328</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,630,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,631,0)
<![CDATA[
"DATA",811.8,2,100,632,0)
801.41;+657328,;.01~EDZ ORDER LIPID PROFILE
"DATA",811.8,2,100,633,0)
801.41;+657328,;4~dialog element
"DATA",811.8,2,100,634,0)
801.41;+657328,;13~DONE AT ENCOUNTER
"DATA",811.8,2,100,635,0)
801.41;+657328,;15~Q.LR LIPID PROFILE
"DATA",811.8,2,100,636,0)
801.41;+657328,;25~WP-start~1
"DATA",811.8,2,100,637,0)
Click here to order Lipid Profile (HDL Battery) for patient
"DATA",811.8,2,100,638,0)
801.41;+657328,;35~WP-start~1
"DATA",811.8,2,100,639,0)
Lipid profile ordered for patient.
"DATA",811.8,2,100,640,0)
801.41;+657328,;100~LOCAL
"DATA",811.8,2,100,641,0)
801.44;+1,+657328,;.01~09/13/2001@12:02:39
"DATA",811.8,2,100,642,0)
801.44;+1,+657328,;1~CROMWELL,TIMOTHY J
"DATA",811.8,2,100,643,0)
801.44;+1,+657328,;2~WP-start~1
"DATA",811.8,2,100,644,0)
Exchange Stub
"DATA",811.8,2,100,645,0)
]]>
"DATA",811.8,2,100,646,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,647,0)
<IEN_ROOT>
"DATA",811.8,2,100,648,0)
<![CDATA[
"DATA",811.8,2,100,649,0)
1^1
"DATA",811.8,2,100,650,0)
]]>
"DATA",811.8,2,100,651,0)
</IEN_ROOT>
"DATA",811.8,2,100,652,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,653,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,654,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,2,100,655,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,2,100,656,0)
<POINT_01>EDZ LIPID PROFILE REFUSED</POINT_01>
"DATA",811.8,2,100,657,0)
<INTERNAL_ENTRY_NUMBER>657331</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,658,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,659,0)
<![CDATA[
"DATA",811.8,2,100,660,0)
801.41;+657331,;.01~EDZ LIPID PROFILE REFUSED
"DATA",811.8,2,100,661,0)
801.41;+657331,;4~dialog element
"DATA",811.8,2,100,662,0)
801.41;+657331,;13~PATIENT REFUSED
"DATA",811.8,2,100,663,0)
801.41;+657331,;15~HF.REFUSED LIPID PROFILE
"DATA",811.8,2,100,664,0)
801.41;+657331,;25~WP-start~2
"DATA",811.8,2,100,665,0)
Lipid profile refused or lipid therapy contraindicated for following
"DATA",811.8,2,100,666,0)
reason:
"DATA",811.8,2,100,667,0)
801.41;+657331,;100~LOCAL
"DATA",811.8,2,100,668,0)
801.412;+1,+657331,;.01~1
"DATA",811.8,2,100,669,0)
801.412;+1,+657331,;2~PXRM COMMENT
"DATA",811.8,2,100,670,0)
801.412;+1,+657331,;6~   
"DATA",811.8,2,100,671,0)
801.412;+1,+657331,;7~YES
"DATA",811.8,2,100,672,0)
801.44;+2,+657331,;.01~09/13/2001@12:02:39
"DATA",811.8,2,100,673,0)
801.44;+2,+657331,;1~CROMWELL,TIMOTHY J
"DATA",811.8,2,100,674,0)
801.44;+2,+657331,;2~WP-start~1
"DATA",811.8,2,100,675,0)
Exchange Stub
"DATA",811.8,2,100,676,0)
]]>
"DATA",811.8,2,100,677,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,678,0)
<IEN_ROOT>
"DATA",811.8,2,100,679,0)
<![CDATA[
"DATA",811.8,2,100,680,0)
1^1
"DATA",811.8,2,100,681,0)
2^1
"DATA",811.8,2,100,682,0)
]]>
"DATA",811.8,2,100,683,0)
</IEN_ROOT>
"DATA",811.8,2,100,684,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,685,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,686,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,2,100,687,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,2,100,688,0)
<POINT_01>IHD POST MI CALCULATED LDL GROUP</POINT_01>
"DATA",811.8,2,100,689,0)
<INTERNAL_ENTRY_NUMBER>78</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,690,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,691,0)
<![CDATA[
"DATA",811.8,2,100,692,0)
801.41;+78,;.01~IHD POST MI CALCULATED LDL GROUP
"DATA",811.8,2,100,693,0)
801.41;+78,;4~dialog group
"DATA",811.8,2,100,694,0)
801.41;+78,;7~2
"DATA",811.8,2,100,695,0)
801.41;+78,;9~NONE OR ONE SELECTION
"DATA",811.8,2,100,696,0)
801.41;+78,;23~YES
"DATA",811.8,2,100,697,0)
801.41;+78,;25~WP-start~2
"DATA",811.8,2,100,698,0)
3. Patient's last calculated LDL was:|CALC LDL| (If no LDL in past year,
"DATA",811.8,2,100,699,0)
click the checkbox to the left to order one, or indicate patient refusal).
"DATA",811.8,2,100,700,0)
801.41;+78,;50~HIDE
"DATA",811.8,2,100,701,0)
801.41;+78,;100~LOCAL
"DATA",811.8,2,100,702,0)
801.412;+1,+78,;.01~2
"DATA",811.8,2,100,703,0)
801.412;+1,+78,;2~EDZ LIPID PROFILE REFUSED
"DATA",811.8,2,100,704,0)
801.412;+1,+78,;8~NO
"DATA",811.8,2,100,705,0)
801.412;+2,+78,;.01~1
"DATA",811.8,2,100,706,0)
801.412;+2,+78,;2~EDZ ORDER LIPID PROFILE
"DATA",811.8,2,100,707,0)
801.412;+2,+78,;8~NO
"DATA",811.8,2,100,708,0)
801.412;+3,+78,;.01~3
"DATA",811.8,2,100,709,0)
801.412;+3,+78,;2~IHD POST MI REVIEW COMPLETE
"DATA",811.8,2,100,710,0)
801.412;+3,+78,;8~NO
"DATA",811.8,2,100,711,0)
801.44;+4,+78,;.01~09/13/2001@12:02:39
"DATA",811.8,2,100,712,0)
801.44;+4,+78,;1~CROMWELL,TIMOTHY J
"DATA",811.8,2,100,713,0)
801.44;+4,+78,;2~WP-start~1
"DATA",811.8,2,100,714,0)
Exchange Stub
"DATA",811.8,2,100,715,0)
]]>
"DATA",811.8,2,100,716,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,717,0)
<IEN_ROOT>
"DATA",811.8,2,100,718,0)
<![CDATA[
"DATA",811.8,2,100,719,0)
1^1
"DATA",811.8,2,100,720,0)
2^2
"DATA",811.8,2,100,721,0)
3^3
"DATA",811.8,2,100,722,0)
4^1
"DATA",811.8,2,100,723,0)
]]>
"DATA",811.8,2,100,724,0)
</IEN_ROOT>
"DATA",811.8,2,100,725,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,726,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,727,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,2,100,728,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,2,100,729,0)
<POINT_01>BETA BLOCKERS TAKING FROM OTHER SOURCE</POINT_01>
"DATA",811.8,2,100,730,0)
<INTERNAL_ENTRY_NUMBER>80</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,731,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,732,0)
<![CDATA[
"DATA",811.8,2,100,733,0)
801.41;+80,;.01~BETA BLOCKERS TAKING FROM OTHER SOURCE
"DATA",811.8,2,100,734,0)
801.41;+80,;4~dialog element
"DATA",811.8,2,100,735,0)
801.41;+80,;15~HF.TAKING BETA BLOCKERS OTHER SOURCE
"DATA",811.8,2,100,736,0)
801.41;+80,;25~WP-start~1
"DATA",811.8,2,100,737,0)
Patient is taking beta blockers from a non-VA source. 
"DATA",811.8,2,100,738,0)
801.41;+80,;100~LOCAL
"DATA",811.8,2,100,739,0)
801.44;+1,+80,;.01~09/13/2001@12:02:39
"DATA",811.8,2,100,740,0)
801.44;+1,+80,;1~CROMWELL,TIMOTHY J
"DATA",811.8,2,100,741,0)
801.44;+1,+80,;2~WP-start~1
"DATA",811.8,2,100,742,0)
Exchange Stub
"DATA",811.8,2,100,743,0)
]]>
"DATA",811.8,2,100,744,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,745,0)
<IEN_ROOT>
"DATA",811.8,2,100,746,0)
<![CDATA[
"DATA",811.8,2,100,747,0)
1^1
"DATA",811.8,2,100,748,0)
]]>
"DATA",811.8,2,100,749,0)
</IEN_ROOT>
"DATA",811.8,2,100,750,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,751,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,752,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,2,100,753,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,2,100,754,0)
<POINT_01>BETA BLOCKERS CONTRAINDICATED</POINT_01>
"DATA",811.8,2,100,755,0)
<INTERNAL_ENTRY_NUMBER>76</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,756,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,757,0)
<![CDATA[
"DATA",811.8,2,100,758,0)
801.41;+76,;.01~BETA BLOCKERS CONTRAINDICATED
"DATA",811.8,2,100,759,0)
801.41;+76,;4~dialog element
"DATA",811.8,2,100,760,0)
801.41;+76,;13~CONTRAINDICATED
"DATA",811.8,2,100,761,0)
801.41;+76,;15~HF.BETA BLOCKERS CONTRAINDICATED
"DATA",811.8,2,100,762,0)
801.41;+76,;25~WP-start~3
"DATA",811.8,2,100,763,0)
Beta blockers are contraindicated for the following reason(s):
"DATA",811.8,2,100,764,0)
{FLD:BETA BLOCKERS CONTRAINDICATIONS}
"DATA",811.8,2,100,765,0)
{FLD:A GENERIC WORD PROCESSING BOX}
"DATA",811.8,2,100,766,0)
801.41;+76,;100~LOCAL
"DATA",811.8,2,100,767,0)
801.44;+1,+76,;.01~09/13/2001@12:02:39
"DATA",811.8,2,100,768,0)
801.44;+1,+76,;1~CROMWELL,TIMOTHY J
"DATA",811.8,2,100,769,0)
801.44;+1,+76,;2~WP-start~1
"DATA",811.8,2,100,770,0)
Exchange Stub
"DATA",811.8,2,100,771,0)
]]>
"DATA",811.8,2,100,772,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,773,0)
<IEN_ROOT>
"DATA",811.8,2,100,774,0)
<![CDATA[
"DATA",811.8,2,100,775,0)
1^1
"DATA",811.8,2,100,776,0)
]]>
"DATA",811.8,2,100,777,0)
</IEN_ROOT>
"DATA",811.8,2,100,778,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,779,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,780,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,2,100,781,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,2,100,782,0)
<POINT_01>TIMZ GO TO OUTPATIENT MED LIST</POINT_01>
"DATA",811.8,2,100,783,0)
<INTERNAL_ENTRY_NUMBER>75</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,784,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,785,0)
<![CDATA[
"DATA",811.8,2,100,786,0)
801.41;+75,;.01~TIMZ GO TO OUTPATIENT MED LIST
"DATA",811.8,2,100,787,0)
801.41;+75,;4~dialog element
"DATA",811.8,2,100,788,0)
801.41;+75,;15~Q.PSO OERR
"DATA",811.8,2,100,789,0)
801.41;+75,;23~YES
"DATA",811.8,2,100,790,0)
801.41;+75,;25~WP-start~2
"DATA",811.8,2,100,791,0)
Click here to be taken back to the outpatient pharmacy file after
"DATA",811.8,2,100,792,0)
finishing the clinical reminder.  You can then place a med order.
"DATA",811.8,2,100,793,0)
801.41;+75,;100~LOCAL
"DATA",811.8,2,100,794,0)
801.44;+1,+75,;.01~09/13/2001@12:02:39
"DATA",811.8,2,100,795,0)
801.44;+1,+75,;1~CROMWELL,TIMOTHY J
"DATA",811.8,2,100,796,0)
801.44;+1,+75,;2~WP-start~1
"DATA",811.8,2,100,797,0)
Exchange Stub
"DATA",811.8,2,100,798,0)
]]>
"DATA",811.8,2,100,799,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,800,0)
<IEN_ROOT>
"DATA",811.8,2,100,801,0)
<![CDATA[
"DATA",811.8,2,100,802,0)
1^1
"DATA",811.8,2,100,803,0)
]]>
"DATA",811.8,2,100,804,0)
</IEN_ROOT>
"DATA",811.8,2,100,805,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,806,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,807,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,2,100,808,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,2,100,809,0)
<POINT_01>IHD POST MI BETA BLOCKERS GROUP</POINT_01>
"DATA",811.8,2,100,810,0)
<INTERNAL_ENTRY_NUMBER>77</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,811,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,812,0)
<![CDATA[
"DATA",811.8,2,100,813,0)
801.41;+77,;.01~IHD POST MI BETA BLOCKERS GROUP
"DATA",811.8,2,100,814,0)
801.41;+77,;4~dialog group
"DATA",811.8,2,100,815,0)
801.41;+77,;7~2
"DATA",811.8,2,100,816,0)
801.41;+77,;9~NONE OR ONE SELECTION
"DATA",811.8,2,100,817,0)
801.41;+77,;23~YES
"DATA",811.8,2,100,818,0)
801.41;+77,;25~WP-start~2
"DATA",811.8,2,100,819,0)
2. BETA BLOCKERS |BETA BLOCKERS| (If patient is on Beta blockers, no
"DATA",811.8,2,100,820,0)
further action is required, if not, click the checkbox to the left).
"DATA",811.8,2,100,821,0)
801.41;+77,;50~HIDE
"DATA",811.8,2,100,822,0)
801.41;+77,;100~LOCAL
"DATA",811.8,2,100,823,0)
801.412;+1,+77,;.01~1
"DATA",811.8,2,100,824,0)
801.412;+1,+77,;2~TIMZ GO TO OUTPATIENT MED LIST
"DATA",811.8,2,100,825,0)
801.412;+1,+77,;8~YES
"DATA",811.8,2,100,826,0)
801.412;+2,+77,;.01~3
"DATA",811.8,2,100,827,0)
801.412;+2,+77,;2~BETA BLOCKERS CONTRAINDICATED
"DATA",811.8,2,100,828,0)
801.412;+2,+77,;8~NO
"DATA",811.8,2,100,829,0)
801.412;+3,+77,;.01~2
"DATA",811.8,2,100,830,0)
801.412;+3,+77,;2~BETA BLOCKERS TAKING FROM OTHER SOURCE
"DATA",811.8,2,100,831,0)
801.412;+3,+77,;8~NO
"DATA",811.8,2,100,832,0)
801.44;+4,+77,;.01~09/13/2001@12:02:39
"DATA",811.8,2,100,833,0)
801.44;+4,+77,;1~CROMWELL,TIMOTHY J
"DATA",811.8,2,100,834,0)
801.44;+4,+77,;2~WP-start~1
"DATA",811.8,2,100,835,0)
Exchange Stub
"DATA",811.8,2,100,836,0)
]]>
"DATA",811.8,2,100,837,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,838,0)
<IEN_ROOT>
"DATA",811.8,2,100,839,0)
<![CDATA[
"DATA",811.8,2,100,840,0)
1^2
"DATA",811.8,2,100,841,0)
2^3
"DATA",811.8,2,100,842,0)
3^4
"DATA",811.8,2,100,843,0)
4^1
"DATA",811.8,2,100,844,0)
]]>
"DATA",811.8,2,100,845,0)
</IEN_ROOT>
"DATA",811.8,2,100,846,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,847,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,848,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,2,100,849,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,2,100,850,0)
<POINT_01>ASPIRIN THERAPY TAKING FROM OTHER SOURCE</POINT_01>
"DATA",811.8,2,100,851,0)
<INTERNAL_ENTRY_NUMBER>79</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,852,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,853,0)
<![CDATA[
"DATA",811.8,2,100,854,0)
801.41;+79,;.01~ASPIRIN THERAPY TAKING FROM OTHER SOURCE
"DATA",811.8,2,100,855,0)
801.41;+79,;4~dialog element
"DATA",811.8,2,100,856,0)
801.41;+79,;15~HF.TAKING ASA OTHER SOURCE
"DATA",811.8,2,100,857,0)
801.41;+79,;25~WP-start~1
"DATA",811.8,2,100,858,0)
Patient is taking aspirin from a non-VA source. 
"DATA",811.8,2,100,859,0)
801.41;+79,;100~LOCAL
"DATA",811.8,2,100,860,0)
801.44;+1,+79,;.01~09/13/2001@12:02:39
"DATA",811.8,2,100,861,0)
801.44;+1,+79,;1~CROMWELL,TIMOTHY J
"DATA",811.8,2,100,862,0)
801.44;+1,+79,;2~WP-start~1
"DATA",811.8,2,100,863,0)
Exchange Stub
"DATA",811.8,2,100,864,0)
]]>
"DATA",811.8,2,100,865,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,866,0)
<IEN_ROOT>
"DATA",811.8,2,100,867,0)
<![CDATA[
"DATA",811.8,2,100,868,0)
1^1
"DATA",811.8,2,100,869,0)
]]>
"DATA",811.8,2,100,870,0)
</IEN_ROOT>
"DATA",811.8,2,100,871,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,872,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,873,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,2,100,874,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,2,100,875,0)
<POINT_01>ASPIRIN THERAPY CONTRAINDICATED</POINT_01>
"DATA",811.8,2,100,876,0)
<INTERNAL_ENTRY_NUMBER>73</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,877,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,878,0)
<![CDATA[
"DATA",811.8,2,100,879,0)
801.41;+73,;.01~ASPIRIN THERAPY CONTRAINDICATED
"DATA",811.8,2,100,880,0)
801.41;+73,;4~dialog element
"DATA",811.8,2,100,881,0)
801.41;+73,;13~CONTRAINDICATED
"DATA",811.8,2,100,882,0)
801.41;+73,;15~HF.ASA CONTRAINDICATED
"DATA",811.8,2,100,883,0)
801.41;+73,;25~WP-start~3
"DATA",811.8,2,100,884,0)
Aspirin is contraindicated for the following reason(s):
"DATA",811.8,2,100,885,0)
{FLD:ASA CONTRAINDICATIONS}
"DATA",811.8,2,100,886,0)
{FLD:A GENERIC WORD PROCESSING BOX}
"DATA",811.8,2,100,887,0)
801.41;+73,;100~LOCAL
"DATA",811.8,2,100,888,0)
801.44;+1,+73,;.01~09/13/2001@12:02:39
"DATA",811.8,2,100,889,0)
801.44;+1,+73,;1~CROMWELL,TIMOTHY J
"DATA",811.8,2,100,890,0)
801.44;+1,+73,;2~WP-start~1
"DATA",811.8,2,100,891,0)
Exchange Stub
"DATA",811.8,2,100,892,0)
]]>
"DATA",811.8,2,100,893,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,894,0)
<IEN_ROOT>
"DATA",811.8,2,100,895,0)
<![CDATA[
"DATA",811.8,2,100,896,0)
1^1
"DATA",811.8,2,100,897,0)
]]>
"DATA",811.8,2,100,898,0)
</IEN_ROOT>
"DATA",811.8,2,100,899,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,900,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,901,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,2,100,902,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,2,100,903,0)
<POINT_01>IHD POST MI ASPIRIN THERAPY GROUP</POINT_01>
"DATA",811.8,2,100,904,0)
<INTERNAL_ENTRY_NUMBER>74</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,905,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,906,0)
<![CDATA[
"DATA",811.8,2,100,907,0)
801.41;+74,;.01~IHD POST MI ASPIRIN THERAPY GROUP
"DATA",811.8,2,100,908,0)
801.41;+74,;4~dialog group
"DATA",811.8,2,100,909,0)
801.41;+74,;7~2
"DATA",811.8,2,100,910,0)
801.41;+74,;9~NONE OR ONE SELECTION
"DATA",811.8,2,100,911,0)
801.41;+74,;23~YES
"DATA",811.8,2,100,912,0)
801.41;+74,;25~WP-start~2
"DATA",811.8,2,100,913,0)
1. ASPIRIN Therapy |ASPIRIN| (If patient is on ASA, no further action is
"DATA",811.8,2,100,914,0)
required, if not, click the checkbox to the left).
"DATA",811.8,2,100,915,0)
801.41;+74,;50~HIDE
"DATA",811.8,2,100,916,0)
801.41;+74,;100~LOCAL
"DATA",811.8,2,100,917,0)
801.412;+1,+74,;.01~3
"DATA",811.8,2,100,918,0)
801.412;+1,+74,;2~ASPIRIN THERAPY CONTRAINDICATED
"DATA",811.8,2,100,919,0)
801.412;+1,+74,;8~NO
"DATA",811.8,2,100,920,0)
801.412;+2,+74,;.01~1
"DATA",811.8,2,100,921,0)
801.412;+2,+74,;2~TIMZ GO TO OUTPATIENT MED LIST
"DATA",811.8,2,100,922,0)
801.412;+2,+74,;8~YES
"DATA",811.8,2,100,923,0)
801.412;+3,+74,;.01~2
"DATA",811.8,2,100,924,0)
801.412;+3,+74,;2~ASPIRIN THERAPY TAKING FROM OTHER SOURCE
"DATA",811.8,2,100,925,0)
801.412;+3,+74,;8~NO
"DATA",811.8,2,100,926,0)
801.44;+4,+74,;.01~09/13/2001@12:02:39
"DATA",811.8,2,100,927,0)
801.44;+4,+74,;1~CROMWELL,TIMOTHY J
"DATA",811.8,2,100,928,0)
801.44;+4,+74,;2~WP-start~1
"DATA",811.8,2,100,929,0)
Exchange Stub
"DATA",811.8,2,100,930,0)
]]>
"DATA",811.8,2,100,931,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,932,0)
<IEN_ROOT>
"DATA",811.8,2,100,933,0)
<![CDATA[
"DATA",811.8,2,100,934,0)
1^1
"DATA",811.8,2,100,935,0)
2^2
"DATA",811.8,2,100,936,0)
3^3
"DATA",811.8,2,100,937,0)
4^1
"DATA",811.8,2,100,938,0)
]]>
"DATA",811.8,2,100,939,0)
</IEN_ROOT>
"DATA",811.8,2,100,940,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,941,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,942,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,2,100,943,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,2,100,944,0)
<POINT_01>TIMZ BREAK</POINT_01>
"DATA",811.8,2,100,945,0)
<INTERNAL_ENTRY_NUMBER>69</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,946,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,947,0)
<![CDATA[
"DATA",811.8,2,100,948,0)
801.41;+69,;.01~TIMZ BREAK
"DATA",811.8,2,100,949,0)
801.41;+69,;4~dialog element
"DATA",811.8,2,100,950,0)
801.41;+69,;23~YES
"DATA",811.8,2,100,951,0)
801.41;+69,;25~WP-start~1
"DATA",811.8,2,100,952,0)
<br><br>
"DATA",811.8,2,100,953,0)
801.41;+69,;51~SUPPRESS
"DATA",811.8,2,100,954,0)
801.41;+69,;100~LOCAL
"DATA",811.8,2,100,955,0)
801.44;+1,+69,;.01~09/13/2001@12:02:39
"DATA",811.8,2,100,956,0)
801.44;+1,+69,;1~CROMWELL,TIMOTHY J
"DATA",811.8,2,100,957,0)
801.44;+1,+69,;2~WP-start~1
"DATA",811.8,2,100,958,0)
Exchange Stub
"DATA",811.8,2,100,959,0)
]]>
"DATA",811.8,2,100,960,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,961,0)
<IEN_ROOT>
"DATA",811.8,2,100,962,0)
<![CDATA[
"DATA",811.8,2,100,963,0)
1^1
"DATA",811.8,2,100,964,0)
]]>
"DATA",811.8,2,100,965,0)
</IEN_ROOT>
"DATA",811.8,2,100,966,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,967,0)
<FILEMAN_FILE>
"DATA",811.8,2,100,968,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,2,100,969,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,2,100,970,0)
<POINT_01>IHD POST MI FOLLOW UP</POINT_01>
"DATA",811.8,2,100,971,0)
<INTERNAL_ENTRY_NUMBER>71</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,2,100,972,0)
<FILEMAN_FDA>
"DATA",811.8,2,100,973,0)
<![CDATA[
"DATA",811.8,2,100,974,0)
801.41;+71,;.01~IHD POST MI FOLLOW UP
"DATA",811.8,2,100,975,0)
801.41;+71,;2~IHD POST MI FOLLOW UP
"DATA",811.8,2,100,976,0)
801.41;+71,;4~reminder dialog
"DATA",811.8,2,100,977,0)
801.41;+71,;100~LOCAL
"DATA",811.8,2,100,978,0)
801.412;+1,+71,;.01~30
"DATA",811.8,2,100,979,0)
801.412;+1,+71,;2~IHD POST MI CALCULATED LDL GROUP
"DATA",811.8,2,100,980,0)
801.412;+2,+71,;.01~5
"DATA",811.8,2,100,981,0)
801.412;+2,+71,;2~TIMZ IHD POST MI FOLLOW UP STATEMENT GROUP
"DATA",811.8,2,100,982,0)
801.412;+3,+71,;.01~12
"DATA",811.8,2,100,983,0)
801.412;+3,+71,;2~TIMZ BREAK
"DATA",811.8,2,100,984,0)
801.412;+4,+71,;.01~20
"DATA",811.8,2,100,985,0)
801.412;+4,+71,;2~IHD POST MI ASPIRIN THERAPY GROUP
"DATA",811.8,2,100,986,0)
801.412;+5,+71,;.01~25
"DATA",811.8,2,100,987,0)
801.412;+5,+71,;2~IHD POST MI BETA BLOCKERS GROUP
"DATA",811.8,2,100,988,0)
801.44;+6,+71,;.01~09/13/2001@12:02:39
"DATA",811.8,2,100,989,0)
801.44;+6,+71,;1~CROMWELL,TIMOTHY J
"DATA",811.8,2,100,990,0)
801.44;+6,+71,;2~WP-start~1
"DATA",811.8,2,100,991,0)
Exchange Stub
"DATA",811.8,2,100,992,0)
]]>
"DATA",811.8,2,100,993,0)
</FILEMAN_FDA>
"DATA",811.8,2,100,994,0)
<IEN_ROOT>
"DATA",811.8,2,100,995,0)
<![CDATA[
"DATA",811.8,2,100,996,0)
1^10
"DATA",811.8,2,100,997,0)
2^11
"DATA",811.8,2,100,998,0)
3^7
"DATA",811.8,2,100,999,0)
4^8
"DATA",811.8,2,100,1000,0)
5^9
"DATA",811.8,2,100,1001,0)
6^1
"DATA",811.8,2,100,1002,0)
]]>
"DATA",811.8,2,100,1003,0)
</IEN_ROOT>
"DATA",811.8,2,100,1004,0)
</FILEMAN_FILE>
"DATA",811.8,2,100,1005,0)
<INDEX>
"DATA",811.8,2,100,1006,0)
<NUMBER_OF_COMPONENTS>40</NUMBER_OF_COMPONENTS>
"DATA",811.8,2,100,1007,0)
<COMPONENT>
"DATA",811.8,2,100,1008,0)
<FDA_END>41</FDA_END>
"DATA",811.8,2,100,1009,0)
<FDA_START>41</FDA_START>
"DATA",811.8,2,100,1010,0)
<FILE_START>34</FILE_START>
"DATA",811.8,2,100,1011,0)
</COMPONENT>
"DATA",811.8,2,100,1012,0)
<COMPONENT>
"DATA",811.8,2,100,1013,0)
<FDA_END>52</FDA_END>
"DATA",811.8,2,100,1014,0)
<FDA_START>52</FDA_START>
"DATA",811.8,2,100,1015,0)
<FILE_START>45</FILE_START>
"DATA",811.8,2,100,1016,0)
</COMPONENT>
"DATA",811.8,2,100,1017,0)
<COMPONENT>
"DATA",811.8,2,100,1018,0)
<FDA_END>66</FDA_END>
"DATA",811.8,2,100,1019,0)
<FDA_START>63</FDA_START>
"DATA",811.8,2,100,1020,0)
<FILE_START>56</FILE_START>
"DATA",811.8,2,100,1021,0)
</COMPONENT>
"DATA",811.8,2,100,1022,0)
<COMPONENT>
"DATA",811.8,2,100,1023,0)
<FDA_END>80</FDA_END>
"DATA",811.8,2,100,1024,0)
<FDA_START>77</FDA_START>
"DATA",811.8,2,100,1025,0)
<FILE_START>70</FILE_START>
"DATA",811.8,2,100,1026,0)
</COMPONENT>
"DATA",811.8,2,100,1027,0)
<COMPONENT>
"DATA",811.8,2,100,1028,0)
<FDA_END>92</FDA_END>
"DATA",811.8,2,100,1029,0)
<FDA_START>91</FDA_START>
"DATA",811.8,2,100,1030,0)
<FILE_START>84</FILE_START>
"DATA",811.8,2,100,1031,0)
</COMPONENT>
"DATA",811.8,2,100,1032,0)
<COMPONENT>
"DATA",811.8,2,100,1033,0)
<FDA_END>104</FDA_END>
"DATA",811.8,2,100,1034,0)
<FDA_START>103</FDA_START>
"DATA",811.8,2,100,1035,0)
<FILE_START>96</FILE_START>
"DATA",811.8,2,100,1036,0)
</COMPONENT>
"DATA",811.8,2,100,1037,0)
<COMPONENT>
"DATA",811.8,2,100,1038,0)
<FDA_END>118</FDA_END>
"DATA",811.8,2,100,1039,0)
<FDA_START>115</FDA_START>
"DATA",811.8,2,100,1040,0)
<FILE_START>108</FILE_START>
"DATA",811.8,2,100,1041,0)
</COMPONENT>
"DATA",811.8,2,100,1042,0)
<COMPONENT>
"DATA",811.8,2,100,1043,0)
<FDA_END>132</FDA_END>
"DATA",811.8,2,100,1044,0)
<FDA_START>129</FDA_START>
"DATA",811.8,2,100,1045,0)
<FILE_START>122</FILE_START>
"DATA",811.8,2,100,1046,0)
</COMPONENT>
"DATA",811.8,2,100,1047,0)
<COMPONENT>
"DATA",811.8,2,100,1048,0)
<FDA_END>146</FDA_END>
"DATA",811.8,2,100,1049,0)
<FDA_START>143</FDA_START>
"DATA",811.8,2,100,1050,0)
<FILE_START>136</FILE_START>
"DATA",811.8,2,100,1051,0)
</COMPONENT>
"DATA",811.8,2,100,1052,0)
<COMPONENT>
"DATA",811.8,2,100,1053,0)
<FDA_END>160</FDA_END>
"DATA",811.8,2,100,1054,0)
<FDA_START>157</FDA_START>
"DATA",811.8,2,100,1055,0)
<FILE_START>150</FILE_START>
"DATA",811.8,2,100,1056,0)
</COMPONENT>
"DATA",811.8,2,100,1057,0)
<COMPONENT>
"DATA",811.8,2,100,1058,0)
<FDA_END>174</FDA_END>
"DATA",811.8,2,100,1059,0)
<FDA_START>171</FDA_START>
"DATA",811.8,2,100,1060,0)
<FILE_START>164</FILE_START>
"DATA",811.8,2,100,1061,0)
</COMPONENT>
"DATA",811.8,2,100,1062,0)
<COMPONENT>
"DATA",811.8,2,100,1063,0)
<FDA_END>188</FDA_END>
"DATA",811.8,2,100,1064,0)
<FDA_START>185</FDA_START>
"DATA",811.8,2,100,1065,0)
<FILE_START>178</FILE_START>
"DATA",811.8,2,100,1066,0)
</COMPONENT>
"DATA",811.8,2,100,1067,0)
<COMPONENT>
"DATA",811.8,2,100,1068,0)
<FDA_END>199</FDA_END>
"DATA",811.8,2,100,1069,0)
<FDA_START>199</FDA_START>
"DATA",811.8,2,100,1070,0)
<FILE_START>192</FILE_START>
"DATA",811.8,2,100,1071,0)
</COMPONENT>
"DATA",811.8,2,100,1072,0)
<COMPONENT>
"DATA",811.8,2,100,1073,0)
<FDA_END>210</FDA_END>
"DATA",811.8,2,100,1074,0)
<FDA_START>210</FDA_START>
"DATA",811.8,2,100,1075,0)
<FILE_START>203</FILE_START>
"DATA",811.8,2,100,1076,0)
</COMPONENT>
"DATA",811.8,2,100,1077,0)
<COMPONENT>
"DATA",811.8,2,100,1078,0)
<FDA_END>221</FDA_END>
"DATA",811.8,2,100,1079,0)
<FDA_START>221</FDA_START>
"DATA",811.8,2,100,1080,0)
<FILE_START>214</FILE_START>
"DATA",811.8,2,100,1081,0)
</COMPONENT>
"DATA",811.8,2,100,1082,0)
<COMPONENT>
"DATA",811.8,2,100,1083,0)
<FDA_END>232</FDA_END>
"DATA",811.8,2,100,1084,0)
<FDA_START>232</FDA_START>
"DATA",811.8,2,100,1085,0)
<FILE_START>225</FILE_START>
"DATA",811.8,2,100,1086,0)
</COMPONENT>
"DATA",811.8,2,100,1087,0)
<COMPONENT>
"DATA",811.8,2,100,1088,0)
<FDA_END>243</FDA_END>
"DATA",811.8,2,100,1089,0)
<FDA_START>243</FDA_START>
"DATA",811.8,2,100,1090,0)
<FILE_START>236</FILE_START>
"DATA",811.8,2,100,1091,0)
</COMPONENT>
"DATA",811.8,2,100,1092,0)
<COMPONENT>
"DATA",811.8,2,100,1093,0)
<FDA_END>265</FDA_END>
"DATA",811.8,2,100,1094,0)
<FDA_START>254</FDA_START>
"DATA",811.8,2,100,1095,0)
<FILE_START>247</FILE_START>
"DATA",811.8,2,100,1096,0)
<IEN_ROOT_END>272</IEN_ROOT_END>
"DATA",811.8,2,100,1097,0)
<IEN_ROOT_START>270</IEN_ROOT_START>
"DATA",811.8,2,100,1098,0)
</COMPONENT>
"DATA",811.8,2,100,1099,0)
<COMPONENT>
"DATA",811.8,2,100,1100,0)
<FDA_END>296</FDA_END>
"DATA",811.8,2,100,1101,0)
<FDA_START>283</FDA_START>
"DATA",811.8,2,100,1102,0)
<FILE_START>276</FILE_START>
"DATA",811.8,2,100,1103,0)
<IEN_ROOT_END>305</IEN_ROOT_END>
"DATA",811.8,2,100,1104,0)
<IEN_ROOT_START>301</IEN_ROOT_START>
"DATA",811.8,2,100,1105,0)
</COMPONENT>
"DATA",811.8,2,100,1106,0)
<COMPONENT>
"DATA",811.8,2,100,1107,0)
<FDA_END>316</FDA_END>
"DATA",811.8,2,100,1108,0)
<FDA_START>316</FDA_START>
"DATA",811.8,2,100,1109,0)
<FILE_START>309</FILE_START>
"DATA",811.8,2,100,1110,0)
</COMPONENT>
"DATA",811.8,2,100,1111,0)
<COMPONENT>
"DATA",811.8,2,100,1112,0)
<FDA_END>353</FDA_END>
"DATA",811.8,2,100,1113,0)
<FDA_START>327</FDA_START>
"DATA",811.8,2,100,1114,0)
<FILE_START>320</FILE_START>
"DATA",811.8,2,100,1115,0)
</COMPONENT>
"DATA",811.8,2,100,1116,0)
<COMPONENT>
"DATA",811.8,2,100,1117,0)
<FDA_END>378</FDA_END>
"DATA",811.8,2,100,1118,0)
<FDA_START>364</FDA_START>
"DATA",811.8,2,100,1119,0)
<FILE_START>357</FILE_START>
"DATA",811.8,2,100,1120,0)
</COMPONENT>
"DATA",811.8,2,100,1121,0)
<COMPONENT>
"DATA",811.8,2,100,1122,0)
<FDA_END>410</FDA_END>
"DATA",811.8,2,100,1123,0)
<FDA_START>389</FDA_START>
"DATA",811.8,2,100,1124,0)
<FILE_START>382</FILE_START>
"DATA",811.8,2,100,1125,0)
</COMPONENT>
"DATA",811.8,2,100,1126,0)
<COMPONENT>
"DATA",811.8,2,100,1127,0)
<FDA_END>435</FDA_END>
"DATA",811.8,2,100,1128,0)
<FDA_START>421</FDA_START>
"DATA",811.8,2,100,1129,0)
<FILE_START>414</FILE_START>
"DATA",811.8,2,100,1130,0)
</COMPONENT>
"DATA",811.8,2,100,1131,0)
<COMPONENT>
"DATA",811.8,2,100,1132,0)
<FDA_END>508</FDA_END>
"DATA",811.8,2,100,1133,0)
<FDA_START>446</FDA_START>
"DATA",811.8,2,100,1134,0)
<FILE_START>439</FILE_START>
"DATA",811.8,2,100,1135,0)
<IEN_ROOT_END>524</IEN_ROOT_END>
"DATA",811.8,2,100,1136,0)
<IEN_ROOT_START>513</IEN_ROOT_START>
"DATA",811.8,2,100,1137,0)
</COMPONENT>
"DATA",811.8,2,100,1138,0)
<COMPONENT>
"DATA",811.8,2,100,1139,0)
<FDA_END>558</FDA_END>
"DATA",811.8,2,100,1140,0)
<FDA_START>535</FDA_START>
"DATA",811.8,2,100,1141,0)
<FILE_START>528</FILE_START>
"DATA",811.8,2,100,1142,0)
<IEN_ROOT_END>563</IEN_ROOT_END>
"DATA",811.8,2,100,1143,0)
<IEN_ROOT_START>563</IEN_ROOT_START>
"DATA",811.8,2,100,1144,0)
</COMPONENT>
"DATA",811.8,2,100,1145,0)
<COMPONENT>
"DATA",811.8,2,100,1146,0)
<FDA_END>586</FDA_END>
"DATA",811.8,2,100,1147,0)
<FDA_START>574</FDA_START>
"DATA",811.8,2,100,1148,0)
<FILE_START>567</FILE_START>
"DATA",811.8,2,100,1149,0)
<IEN_ROOT_END>592</IEN_ROOT_END>
"DATA",811.8,2,100,1150,0)
<IEN_ROOT_START>591</IEN_ROOT_START>
"DATA",811.8,2,100,1151,0)
</COMPONENT>
"DATA",811.8,2,100,1152,0)
<COMPONENT>
"DATA",811.8,2,100,1153,0)
<FDA_END>616</FDA_END>
"DATA",811.8,2,100,1154,0)
<FDA_START>603</FDA_START>
"DATA",811.8,2,100,1155,0)
<FILE_START>596</FILE_START>
"DATA",811.8,2,100,1156,0)
<IEN_ROOT_END>621</IEN_ROOT_END>
"DATA",811.8,2,100,1157,0)
<IEN_ROOT_START>621</IEN_ROOT_START>
"DATA",811.8,2,100,1158,0)
</COMPONENT>
"DATA",811.8,2,100,1159,0)
<COMPONENT>
"DATA",811.8,2,100,1160,0)
<FDA_END>644</FDA_END>
"DATA",811.8,2,100,1161,0)
<FDA_START>632</FDA_START>
"DATA",811.8,2,100,1162,0)
<FILE_START>625</FILE_START>
"DATA",811.8,2,100,1163,0)
<IEN_ROOT_END>649</IEN_ROOT_END>
"DATA",811.8,2,100,1164,0)
<IEN_ROOT_START>649</IEN_ROOT_START>
"DATA",811.8,2,100,1165,0)
</COMPONENT>
"DATA",811.8,2,100,1166,0)
<COMPONENT>
"DATA",811.8,2,100,1167,0)
<FDA_END>675</FDA_END>
"DATA",811.8,2,100,1168,0)
<FDA_START>660</FDA_START>
"DATA",811.8,2,100,1169,0)
<FILE_START>653</FILE_START>
"DATA",811.8,2,100,1170,0)
<IEN_ROOT_END>681</IEN_ROOT_END>
"DATA",811.8,2,100,1171,0)
<IEN_ROOT_START>680</IEN_ROOT_START>
"DATA",811.8,2,100,1172,0)
</COMPONENT>
"DATA",811.8,2,100,1173,0)
<COMPONENT>
"DATA",811.8,2,100,1174,0)
<FDA_END>714</FDA_END>
"DATA",811.8,2,100,1175,0)
<FDA_START>692</FDA_START>
"DATA",811.8,2,100,1176,0)
<FILE_START>685</FILE_START>
"DATA",811.8,2,100,1177,0)
<IEN_ROOT_END>722</IEN_ROOT_END>
"DATA",811.8,2,100,1178,0)
<IEN_ROOT_START>719</IEN_ROOT_START>
"DATA",811.8,2,100,1179,0)
</COMPONENT>
"DATA",811.8,2,100,1180,0)
<COMPONENT>
"DATA",811.8,2,100,1181,0)
<FDA_END>742</FDA_END>
"DATA",811.8,2,100,1182,0)
<FDA_START>733</FDA_START>
"DATA",811.8,2,100,1183,0)
<FILE_START>726</FILE_START>
"DATA",811.8,2,100,1184,0)
<IEN_ROOT_END>747</IEN_ROOT_END>
"DATA",811.8,2,100,1185,0)
<IEN_ROOT_START>747</IEN_ROOT_START>
"DATA",811.8,2,100,1186,0)
</COMPONENT>
"DATA",811.8,2,100,1187,0)
<COMPONENT>
"DATA",811.8,2,100,1188,0)
<FDA_END>770</FDA_END>
"DATA",811.8,2,100,1189,0)
<FDA_START>758</FDA_START>
"DATA",811.8,2,100,1190,0)
<FILE_START>751</FILE_START>
"DATA",811.8,2,100,1191,0)
<IEN_ROOT_END>775</IEN_ROOT_END>
"DATA",811.8,2,100,1192,0)
<IEN_ROOT_START>775</IEN_ROOT_START>
"DATA",811.8,2,100,1193,0)
</COMPONENT>
"DATA",811.8,2,100,1194,0)
<COMPONENT>
"DATA",811.8,2,100,1195,0)
<FDA_END>797</FDA_END>
"DATA",811.8,2,100,1196,0)
<FDA_START>786</FDA_START>
"DATA",811.8,2,100,1197,0)
<FILE_START>779</FILE_START>
"DATA",811.8,2,100,1198,0)
<IEN_ROOT_END>802</IEN_ROOT_END>
"DATA",811.8,2,100,1199,0)
<IEN_ROOT_START>802</IEN_ROOT_START>
"DATA",811.8,2,100,1200,0)
</COMPONENT>
"DATA",811.8,2,100,1201,0)
<COMPONENT>
"DATA",811.8,2,100,1202,0)
<FDA_END>835</FDA_END>
"DATA",811.8,2,100,1203,0)
<FDA_START>813</FDA_START>
"DATA",811.8,2,100,1204,0)
<FILE_START>806</FILE_START>
"DATA",811.8,2,100,1205,0)
<IEN_ROOT_END>843</IEN_ROOT_END>
"DATA",811.8,2,100,1206,0)
<IEN_ROOT_START>840</IEN_ROOT_START>
"DATA",811.8,2,100,1207,0)
</COMPONENT>
"DATA",811.8,2,100,1208,0)
<COMPONENT>
"DATA",811.8,2,100,1209,0)
<FDA_END>863</FDA_END>
"DATA",811.8,2,100,1210,0)
<FDA_START>854</FDA_START>
"DATA",811.8,2,100,1211,0)
<FILE_START>847</FILE_START>
"DATA",811.8,2,100,1212,0)
<IEN_ROOT_END>868</IEN_ROOT_END>
"DATA",811.8,2,100,1213,0)
<IEN_ROOT_START>868</IEN_ROOT_START>
"DATA",811.8,2,100,1214,0)
</COMPONENT>
"DATA",811.8,2,100,1215,0)
<COMPONENT>
"DATA",811.8,2,100,1216,0)
<FDA_END>891</FDA_END>
"DATA",811.8,2,100,1217,0)
<FDA_START>879</FDA_START>
"DATA",811.8,2,100,1218,0)
<FILE_START>872</FILE_START>
"DATA",811.8,2,100,1219,0)
<IEN_ROOT_END>896</IEN_ROOT_END>
"DATA",811.8,2,100,1220,0)
<IEN_ROOT_START>896</IEN_ROOT_START>
"DATA",811.8,2,100,1221,0)
</COMPONENT>
"DATA",811.8,2,100,1222,0)
<COMPONENT>
"DATA",811.8,2,100,1223,0)
<FDA_END>929</FDA_END>
"DATA",811.8,2,100,1224,0)
<FDA_START>907</FDA_START>
"DATA",811.8,2,100,1225,0)
<FILE_START>900</FILE_START>
"DATA",811.8,2,100,1226,0)
<IEN_ROOT_END>937</IEN_ROOT_END>
"DATA",811.8,2,100,1227,0)
<IEN_ROOT_START>934</IEN_ROOT_START>
"DATA",811.8,2,100,1228,0)
</COMPONENT>
"DATA",811.8,2,100,1229,0)
<COMPONENT>
"DATA",811.8,2,100,1230,0)
<FDA_END>958</FDA_END>
"DATA",811.8,2,100,1231,0)
<FDA_START>948</FDA_START>
"DATA",811.8,2,100,1232,0)
<FILE_START>941</FILE_START>
"DATA",811.8,2,100,1233,0)
<IEN_ROOT_END>963</IEN_ROOT_END>
"DATA",811.8,2,100,1234,0)
<IEN_ROOT_START>963</IEN_ROOT_START>
"DATA",811.8,2,100,1235,0)
</COMPONENT>
"DATA",811.8,2,100,1236,0)
<COMPONENT>
"DATA",811.8,2,100,1237,0)
<FDA_END>991</FDA_END>
"DATA",811.8,2,100,1238,0)
<FDA_START>974</FDA_START>
"DATA",811.8,2,100,1239,0)
<FILE_START>967</FILE_START>
"DATA",811.8,2,100,1240,0)
<IEN_ROOT_END>1001</IEN_ROOT_END>
"DATA",811.8,2,100,1241,0)
<IEN_ROOT_START>996</IEN_ROOT_START>
"DATA",811.8,2,100,1242,0)
</COMPONENT>
"DATA",811.8,2,100,1243,0)
</INDEX>
"DATA",811.8,2,100,1244,0)
</REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,2,110,0)
^811.804^29^29
"DATA",811.8,2,110,1,0)
Reminder:    IHD POST MI FOLLOW UP
"DATA",811.8,2,110,2,0)
Source:      CROMWELL,TIMOTHY J at ST LOUIS, MO (CONS)
"DATA",811.8,2,110,3,0)
Date Packed: 09/13/2001@12:02:24
"DATA",811.8,2,110,4,0)

"DATA",811.8,2,110,5,0)
Description:
"DATA",811.8,2,110,6,0)
    Patients with diagnosis associated with prior Acute Myocardial
"DATA",811.8,2,110,7,0)
Infarction or Ischemic Heart Disease / CAD are recommended to be on the
"DATA",811.8,2,110,8,0)
following therapy, or have documented reason for exclusion:
"DATA",811.8,2,110,9,0)
 
"DATA",811.8,2,110,10,0)
    1.  Aspirin therapy 
"DATA",811.8,2,110,11,0)
    2.  Beta blocker therapy 
"DATA",811.8,2,110,12,0)
    3.  ACE Inhibitor for EF <= 40% 
"DATA",811.8,2,110,13,0)
    4.  Lipid profile and LDL-C level 
"DATA",811.8,2,110,14,0)
    5.  Cholesterol management plan
"DATA",811.8,2,110,15,0)
    6.  Diet counselling for Cholesterol and Cardiac risk factors 
"DATA",811.8,2,110,16,0)
    7.  Exercise program for Cholesterol and Cardiac risk factors
"DATA",811.8,2,110,17,0)
 
"DATA",811.8,2,110,18,0)
 
"DATA",811.8,2,110,19,0)
TARGET GROUP: 
"DATA",811.8,2,110,20,0)
Patients with a diagnosis associated with prior Acute Myocardial
"DATA",811.8,2,110,21,0)
Infarction or Ischemic Heart Disease.
"DATA",811.8,2,110,22,0)
 
"DATA",811.8,2,110,23,0)
        All patients with a diagnosis of congestive heart failure will be 
"DATA",811.8,2,110,24,0)
evaluated every 12 months with review of Therapy(ies).  
"DATA",811.8,2,110,25,0)

"DATA",811.8,2,110,26,0)
Keywords:
"DATA",811.8,2,110,27,0)
No keywords given
"DATA",811.8,2,110,28,0)

"DATA",811.8,2,110,29,0)
Components:
"DATA",811.8,2,119)
11
"DATA",811.8,2,120,0)
^811.802A^40^40
"DATA",811.8,2,120,1,0)
DRUG^50^2
"DATA",811.8,2,120,1,1,0)
^811.8021A^2^2
"DATA",811.8,2,120,1,1,1,0)
ASPIRIN 325MG TAB^41^41^^
"DATA",811.8,2,120,1,1,2,0)
ASPIRIN 325MG EC TAB^52^52^^
"DATA",811.8,2,120,2,0)
HEALTH FACTORS^9999999.64^10
"DATA",811.8,2,120,2,1,0)
^811.8021A^10^10
"DATA",811.8,2,120,2,1,1,0)
REMINDER FACTORS^63^66^^
"DATA",811.8,2,120,2,1,2,0)
DIABETIC CARE^77^80^^
"DATA",811.8,2,120,2,1,3,0)
ISCHEMIC HEART DISEASE^91^92^^
"DATA",811.8,2,120,2,1,4,0)
NON-VA PROVIDED MEDICATIONS^103^104^^
"DATA",811.8,2,120,2,1,5,0)
REFUSED LIPID PROFILE^115^118^^
"DATA",811.8,2,120,2,1,6,0)
ASA CONTRAINDICATED^129^132^^
"DATA",811.8,2,120,2,1,7,0)
BETA BLOCKERS CONTRAINDICATED^143^146^^
"DATA",811.8,2,120,2,1,8,0)
TAKING ASA OTHER SOURCE^157^160^^
"DATA",811.8,2,120,2,1,9,0)
TAKING BETA BLOCKERS OTHER SOURCE^171^174^^
"DATA",811.8,2,120,2,1,10,0)
IHD POST MI REVIEW COMPLETE^185^188^^
"DATA",811.8,2,120,3,0)
LABORATORY TEST^60^1
"DATA",811.8,2,120,3,1,0)
^811.8021A^1^1
"DATA",811.8,2,120,3,1,1,0)
CALCULATED LDL^199^199^^
"DATA",811.8,2,120,4,0)
ORDER DIALOG^101.41^2
"DATA",811.8,2,120,4,1,0)
^811.8021A^2^2
"DATA",811.8,2,120,4,1,1,0)
PSO OERR^210^210^^
"DATA",811.8,2,120,4,1,2,0)
LR LIPID PROFILE^221^221^^
"DATA",811.8,2,120,5,0)
ORDERABLE ITEMS^101.43^2
"DATA",811.8,2,120,5,1,0)
^811.8021A^2^2
"DATA",811.8,2,120,5,1,1,0)
ASPIRIN TAB ^232^232^^
"DATA",811.8,2,120,5,1,2,0)
ASPIRIN TAB,EC ^243^243^^
"DATA",811.8,2,120,6,0)
REMINDER TAXONOMY^811.2^1
"DATA",811.8,2,120,6,1,0)
^811.8021A^1^1
"DATA",811.8,2,120,6,1,1,0)
ACUTE MYOCARDIAL INFARCTION^254^265^270^272
"DATA",811.8,2,120,7,0)
REMINDER TERM^811.5^1
"DATA",811.8,2,120,7,1,0)
^811.8021A^1^1
"DATA",811.8,2,120,7,1,1,0)
ASPIRIN THERAPY^283^296^301^305
"DATA",811.8,2,120,8,0)
TIU TEMPLATE FIELD^8927.1^4
"DATA",811.8,2,120,8,1,0)
^811.8021A^4^4
"DATA",811.8,2,120,8,1,1,0)
BETA BLOCKERS CONTRAINDICATIONS^327^353^^
"DATA",811.8,2,120,8,1,2,0)
A GENERIC WORD PROCESSING BOX^364^378^^
"DATA",811.8,2,120,8,1,3,0)
ASA CONTRAINDICATIONS^389^410^^
"DATA",811.8,2,120,8,1,4,0)
A GENERIC WORD PROCESSING BOX^421^435^^
"DATA",811.8,2,120,9,0)
VA DRUG CLASS^50.605^1
"DATA",811.8,2,120,9,1,0)
^811.8021A^1^1
"DATA",811.8,2,120,9,1,1,0)
CV100^316^316^^
"DATA",811.8,2,120,10,0)
REMINDER DEFINITION^811.9^1
"DATA",811.8,2,120,10,1,0)
^811.8021A^1^1
"DATA",811.8,2,120,10,1,1,0)
IHD POST MI FOLLOW UP^446^508^513^524
"DATA",811.8,2,120,11,0)
REMINDER DIALOG^801.41^15
"DATA",811.8,2,120,11,1,0)
^811.8021A^15^15
"DATA",811.8,2,120,11,1,1,0)
TIMZ IHD POST MI FOLLOW UP STATEMENT^535^558^563^563
"DATA",811.8,2,120,11,1,2,0)
TIMZ IHD POST MI FOLLOW UP STATEMENT GROUP^574^586^591^592
"DATA",811.8,2,120,11,1,3,0)
IHD POST MI REVIEW COMPLETE^603^616^621^621
"DATA",811.8,2,120,11,1,4,0)
EDZ ORDER LIPID PROFILE^632^644^649^649
"DATA",811.8,2,120,11,1,5,0)
EDZ LIPID PROFILE REFUSED^660^675^680^681
"DATA",811.8,2,120,11,1,6,0)
IHD POST MI CALCULATED LDL GROUP^692^714^719^722
"DATA",811.8,2,120,11,1,7,0)
BETA BLOCKERS TAKING FROM OTHER SOURCE^733^742^747^747
"DATA",811.8,2,120,11,1,8,0)
BETA BLOCKERS CONTRAINDICATED^758^770^775^775
"DATA",811.8,2,120,11,1,9,0)
TIMZ GO TO OUTPATIENT MED LIST^786^797^802^802
"DATA",811.8,2,120,11,1,10,0)
IHD POST MI BETA BLOCKERS GROUP^813^835^840^843
"DATA",811.8,2,120,11,1,11,0)
ASPIRIN THERAPY TAKING FROM OTHER SOURCE^854^863^868^868
"DATA",811.8,2,120,11,1,12,0)
ASPIRIN THERAPY CONTRAINDICATED^879^891^896^896
"DATA",811.8,2,120,11,1,13,0)
IHD POST MI ASPIRIN THERAPY GROUP^907^929^934^937
"DATA",811.8,2,120,11,1,14,0)
TIMZ BREAK^948^958^963^963
"DATA",811.8,2,120,11,1,15,0)
IHD POST MI FOLLOW UP^974^991^996^1001
"DATA",811.8,2,130,0)
^811.803DA^7^7
"DATA",811.8,2,130,1,0)
3010924.10502^TROST,DEBBIE
"DATA",811.8,2,130,1,1,0)
^811.8031A^17^17
"DATA",811.8,2,130,1,1,1,0)
1^HEALTH FACTORS^REMINDER FACTORS^S^
"DATA",811.8,2,130,1,1,2,0)
2^HEALTH FACTORS^DIABETIC CARE^I^
"DATA",811.8,2,130,1,1,3,0)
3^HEALTH FACTORS^ISCHEMIC HEART DISEASE^I^
"DATA",811.8,2,130,1,1,4,0)
4^HEALTH FACTORS^NON-VA PROVIDED MEDICATIONS^I^
"DATA",811.8,2,130,1,1,5,0)
5^HEALTH FACTORS^REFUSED LIPID PROFILE^I^
"DATA",811.8,2,130,1,1,6,0)
6^HEALTH FACTORS^ASA CONTRAINDICATED^I^
"DATA",811.8,2,130,1,1,7,0)
7^HEALTH FACTORS^BETA BLOCKERS CONTRAINDICATED^I^
"DATA",811.8,2,130,1,1,8,0)
8^HEALTH FACTORS^TAKING ASA OTHER SOURCE^I^
"DATA",811.8,2,130,1,1,9,0)
9^HEALTH FACTORS^TAKING BETA BLOCKERS OTHER SOURCE^I^
"DATA",811.8,2,130,1,1,10,0)
10^HEALTH FACTORS^IHD POST MI REVIEW COMPLETE^I^
"DATA",811.8,2,130,1,1,11,0)
11^REMINDER TAXONOMY^ACUTE MYOCARDIAL INFARCTION^I^
"DATA",811.8,2,130,1,1,12,0)
12^REMINDER TERM^ASPIRIN THERAPY^I^
"DATA",811.8,2,130,1,1,12,1,0)
^811.80315A^4^4
"DATA",811.8,2,130,1,1,12,1,1,0)
   Finding Changes
"DATA",811.8,2,130,1,1,12,1,2,0)
     Original                           New
"DATA",811.8,2,130,1,1,12,1,3,0)
    DR.ASPIRIN 325MG EC TAB            DR.ASPIRIN 325MG E.C. U/D
"DATA",811.8,2,130,1,1,12,1,4,0)
    DR.ASPIRIN 325MG TAB               DR.ASPIRIN 325MG E.C. U/D
"DATA",811.8,2,130,1,1,13,0)
13^TIU TEMPLATE FIELD^BETA BLOCKERS CONTRAINDICATIONS^I^
"DATA",811.8,2,130,1,1,14,0)
14^TIU TEMPLATE FIELD^A GENERIC WORD PROCESSING BOX^I^
"DATA",811.8,2,130,1,1,15,0)
15^TIU TEMPLATE FIELD^ASA CONTRAINDICATIONS^I^
"DATA",811.8,2,130,1,1,16,0)
16^TIU TEMPLATE FIELD^A GENERIC WORD PROCESSING BOX^I^
"DATA",811.8,2,130,1,1,17,0)
17^REMINDER DEFINITION^IHD POST MI FOLLOW UP^I^
"DATA",811.8,2,130,1,1,17,1,0)
^811.80315A^2^2
"DATA",811.8,2,130,2,0)
3010924.110247^TROST,DEBBIE
"DATA",811.8,2,130,2,1,0)
^811.8031A^17^17
"DATA",811.8,2,130,2,1,1,0)
1^HEALTH FACTORS^REMINDER FACTORS^S^
"DATA",811.8,2,130,2,1,2,0)
2^HEALTH FACTORS^DIABETIC CARE^S^
"DATA",811.8,2,130,2,1,3,0)
3^HEALTH FACTORS^ISCHEMIC HEART DISEASE^S^
"DATA",811.8,2,130,2,1,4,0)
4^HEALTH FACTORS^NON-VA PROVIDED MEDICATIONS^S^
"DATA",811.8,2,130,2,1,5,0)
5^HEALTH FACTORS^REFUSED LIPID PROFILE^S^
"DATA",811.8,2,130,2,1,6,0)
6^HEALTH FACTORS^ASA CONTRAINDICATED^S^
"DATA",811.8,2,130,2,1,7,0)
7^HEALTH FACTORS^BETA BLOCKERS CONTRAINDICATED^S^
"DATA",811.8,2,130,2,1,8,0)
8^HEALTH FACTORS^TAKING ASA OTHER SOURCE^S^
"DATA",811.8,2,130,2,1,9,0)
9^HEALTH FACTORS^TAKING BETA BLOCKERS OTHER SOURCE^S^
"DATA",811.8,2,130,2,1,10,0)
10^HEALTH FACTORS^IHD POST MI REVIEW COMPLETE^S^
"DATA",811.8,2,130,2,1,11,0)
11^REMINDER TAXONOMY^ACUTE MYOCARDIAL INFARCTION^S^
"DATA",811.8,2,130,2,1,12,0)
12^REMINDER TERM^ASPIRIN THERAPY^S^
"DATA",811.8,2,130,2,1,13,0)
13^TIU TEMPLATE FIELD^BETA BLOCKERS CONTRAINDICATIONS^S^
"DATA",811.8,2,130,2,1,14,0)
14^TIU TEMPLATE FIELD^A GENERIC WORD PROCESSING BOX^S^
"DATA",811.8,2,130,2,1,15,0)
15^TIU TEMPLATE FIELD^ASA CONTRAINDICATIONS^S^
"DATA",811.8,2,130,2,1,16,0)
16^TIU TEMPLATE FIELD^A GENERIC WORD PROCESSING BOX^S^
"DATA",811.8,2,130,2,1,17,0)
17^REMINDER DEFINITION^IHD POST MI FOLLOW UP^I^
"DATA",811.8,2,130,2,1,17,1,0)
^811.80315A^3^3
"DATA",811.8,2,130,2,1,17,1,1,0)
   Finding Changes
"DATA",811.8,2,130,2,1,17,1,2,0)
     Original                           New
"DATA",811.8,2,130,2,1,17,1,3,0)
    LT.CALCULATED LDL                  LT.LDL-CHOL CALCULATION
"DATA",811.8,2,130,3,0)
3010924.1106^TROST,DEBBIE
"DATA",811.8,2,130,3,1,0)
^811.8031A^17^17
"DATA",811.8,2,130,3,1,1,0)
1^HEALTH FACTORS^REMINDER FACTORS^S^
"DATA",811.8,2,130,3,1,2,0)
2^HEALTH FACTORS^DIABETIC CARE^S^
"DATA",811.8,2,130,3,1,3,0)
3^HEALTH FACTORS^ISCHEMIC HEART DISEASE^S^
"DATA",811.8,2,130,3,1,4,0)
4^HEALTH FACTORS^NON-VA PROVIDED MEDICATIONS^S^
"DATA",811.8,2,130,3,1,5,0)
5^HEALTH FACTORS^REFUSED LIPID PROFILE^S^
"DATA",811.8,2,130,3,1,6,0)
6^HEALTH FACTORS^ASA CONTRAINDICATED^S^
"DATA",811.8,2,130,3,1,7,0)
7^HEALTH FACTORS^BETA BLOCKERS CONTRAINDICATED^S^
"DATA",811.8,2,130,3,1,8,0)
8^HEALTH FACTORS^TAKING ASA OTHER SOURCE^S^
"DATA",811.8,2,130,3,1,9,0)
9^HEALTH FACTORS^TAKING BETA BLOCKERS OTHER SOURCE^S^
"DATA",811.8,2,130,3,1,10,0)
10^HEALTH FACTORS^IHD POST MI REVIEW COMPLETE^S^
"DATA",811.8,2,130,3,1,11,0)
11^REMINDER TAXONOMY^ACUTE MYOCARDIAL INFARCTION^S^
"DATA",811.8,2,130,3,1,12,0)
12^REMINDER TERM^ASPIRIN THERAPY^S^
"DATA",811.8,2,130,3,1,13,0)
13^TIU TEMPLATE FIELD^BETA BLOCKERS CONTRAINDICATIONS^S^
"DATA",811.8,2,130,3,1,14,0)
14^TIU TEMPLATE FIELD^A GENERIC WORD PROCESSING BOX^S^
"DATA",811.8,2,130,3,1,15,0)
15^TIU TEMPLATE FIELD^ASA CONTRAINDICATIONS^S^
"DATA",811.8,2,130,3,1,16,0)
16^TIU TEMPLATE FIELD^A GENERIC WORD PROCESSING BOX^S^
"DATA",811.8,2,130,3,1,17,0)
17^REMINDER DEFINITION^IHD POST MI FOLLOW UP^I^
"DATA",811.8,2,130,3,1,17,1,0)
^811.80315A^3^3
"DATA",811.8,2,130,3,1,17,1,1,0)
   Finding Changes
"DATA",811.8,2,130,3,1,17,1,2,0)
     Original                           New
"DATA",811.8,2,130,3,1,17,1,3,0)
    LT.CALCULATED LDL                  LT.CBC
"DATA",811.8,2,130,4,0)
3010924.11072^TROST,DEBBIE
"DATA",811.8,2,130,4,1,0)
^811.8031A^1^1
"DATA",811.8,2,130,4,1,1,0)
17^REMINDER DEFINITION^IHD POST MI FOLLOW UP^I^
"DATA",811.8,2,130,4,1,1,1,0)
^811.80315A^3^3
"DATA",811.8,2,130,4,1,1,1,1,0)
   Finding Changes
"DATA",811.8,2,130,4,1,1,1,2,0)
     Original                           New
"DATA",811.8,2,130,4,1,1,1,3,0)
    LT.CALCULATED LDL                  LT.FINGERSTICK,GLUCOSE(WARD)
"DATA",811.8,2,130,5,0)
3010924.11095^TROST,DEBBIE
"DATA",811.8,2,130,5,1,0)
^811.8031A^16^16
"DATA",811.8,2,130,5,1,1,0)
1^REMINDER DIALOG^IHD POST MI FOLLOW UP^I^
"DATA",811.8,2,130,5,1,1,1,0)
^811.80315A^3^3
"DATA",811.8,2,130,5,1,1,1,1,0)
   Finding Changes
"DATA",811.8,2,130,5,1,1,1,2,0)
     Original                           New
"DATA",811.8,2,130,5,1,1,1,3,0)
    Q.LR LIPID PROFILE                 Q.ZZJM LIPID PROFILE
"DATA",811.8,2,130,5,1,2,0)
2^REMINDER DIALOG^TIMZ IHD POST MI FOLLOW UP STATEMENT GROUP^I^
"DATA",811.8,2,130,5,1,2,1,0)
^811.80315A^3^3
"DATA",811.8,2,130,5,1,2,1,1,0)
   Finding Changes
"DATA",811.8,2,130,5,1,2,1,2,0)
     Original                           New
"DATA",811.8,2,130,5,1,2,1,3,0)
    Q.LR LIPID PROFILE                 Q.ZZJM LIPID PROFILE
"DATA",811.8,2,130,5,1,3,0)
3^REMINDER DIALOG^TIMZ IHD POST MI FOLLOW UP STATEMENT^I^
"DATA",811.8,2,130,5,1,3,1,0)
^811.80315A^3^3
"DATA",811.8,2,130,5,1,3,1,1,0)
   Finding Changes
"DATA",811.8,2,130,5,1,3,1,2,0)
     Original                           New
"DATA",811.8,2,130,5,1,3,1,3,0)
    Q.LR LIPID PROFILE                 Q.ZZJM LIPID PROFILE
"DATA",811.8,2,130,5,1,4,0)
4^REMINDER DIALOG^TIMZ BREAK^I^
"DATA",811.8,2,130,5,1,4,1,0)
^811.80315A^3^3
"DATA",811.8,2,130,5,1,4,1,1,0)
   Finding Changes
"DATA",811.8,2,130,5,1,4,1,2,0)
     Original                           New
"DATA",811.8,2,130,5,1,4,1,3,0)
    Q.LR LIPID PROFILE                 Q.ZZJM LIPID PROFILE
"DATA",811.8,2,130,5,1,5,0)
5^REMINDER DIALOG^IHD POST MI ASPIRIN THERAPY GROUP^I^
"DATA",811.8,2,130,5,1,5,1,0)
^811.80315A^3^3
"DATA",811.8,2,130,5,1,5,1,1,0)
   Finding Changes
"DATA",811.8,2,130,5,1,5,1,2,0)
     Original                           New
"DATA",811.8,2,130,5,1,5,1,3,0)
    Q.LR LIPID PROFILE                 Q.ZZJM LIPID PROFILE
"DATA",811.8,2,130,5,1,6,0)
6^REMINDER DIALOG^TIMZ GO TO OUTPATIENT MED LIST^O^
"DATA",811.8,2,130,5,1,6,1,0)
^811.80315A^3^3
"DATA",811.8,2,130,5,1,6,1,1,0)
   Finding Changes
"DATA",811.8,2,130,5,1,6,1,2,0)
     Original                           New
"DATA",811.8,2,130,5,1,6,1,3,0)
    Q.LR LIPID PROFILE                 Q.ZZJM LIPID PROFILE
"DATA",811.8,2,130,5,1,7,0)
7^REMINDER DIALOG^ASPIRIN THERAPY TAKING FROM OTHER SOURCE^I^
"DATA",811.8,2,130,5,1,7,1,0)
^811.80315A^3^3
"DATA",811.8,2,130,5,1,7,1,1,0)
   Finding Changes
"DATA",811.8,2,130,5,1,7,1,2,0)
     Original                           New
"DATA",811.8,2,130,5,1,7,1,3,0)
    Q.LR LIPID PROFILE                 Q.ZZJM LIPID PROFILE
"DATA",811.8,2,130,5,1,8,0)
8^REMINDER DIALOG^ASPIRIN THERAPY CONTRAINDICATED^I^
"DATA",811.8,2,130,5,1,8,1,0)
^811.80315A^3^3
"DATA",811.8,2,130,5,1,8,1,1,0)
   Finding Changes
"DATA",811.8,2,130,5,1,8,1,2,0)
     Original                           New
"DATA",811.8,2,130,5,1,8,1,3,0)
    Q.LR LIPID PROFILE                 Q.ZZJM LIPID PROFILE
"DATA",811.8,2,130,5,1,9,0)
9^REMINDER DIALOG^IHD POST MI BETA BLOCKERS GROUP^I^
"DATA",811.8,2,130,5,1,9,1,0)
^811.80315A^3^3
"DATA",811.8,2,130,5,1,9,1,1,0)
   Finding Changes
"DATA",811.8,2,130,5,1,9,1,2,0)
     Original                           New
"DATA",811.8,2,130,5,1,9,1,3,0)
    Q.LR LIPID PROFILE                 Q.ZZJM LIPID PROFILE
"DATA",811.8,2,130,5,1,10,0)
10^REMINDER DIALOG^TIMZ GO TO OUTPATIENT MED LIST^I^
"DATA",811.8,2,130,5,1,10,1,0)
^811.80315A^3^3
"DATA",811.8,2,130,5,1,10,1,1,0)
   Finding Changes
"DATA",811.8,2,130,5,1,10,1,2,0)
     Original                           New
"DATA",811.8,2,130,5,1,10,1,3,0)
    Q.LR LIPID PROFILE                 Q.ZZJM LIPID PROFILE
"DATA",811.8,2,130,5,1,11,0)
11^REMINDER DIALOG^BETA BLOCKERS TAKING FROM OTHER SOURCE^I^
"DATA",811.8,2,130,5,1,11,1,0)
^811.80315A^3^3
"DATA",811.8,2,130,5,1,11,1,1,0)
   Finding Changes
"DATA",811.8,2,130,5,1,11,1,2,0)
     Original                           New
"DATA",811.8,2,130,5,1,11,1,3,0)
    Q.LR LIPID PROFILE                 Q.ZZJM LIPID PROFILE
"DATA",811.8,2,130,5,1,12,0)
12^REMINDER DIALOG^BETA BLOCKERS CONTRAINDICATED^I^
"DATA",811.8,2,130,5,1,12,1,0)
^811.80315A^3^3
"DATA",811.8,2,130,5,1,12,1,1,0)
   Finding Changes
"DATA",811.8,2,130,5,1,12,1,2,0)
     Original                           New
"DATA",811.8,2,130,5,1,12,1,3,0)
    Q.LR LIPID PROFILE                 Q.ZZJM LIPID PROFILE
"DATA",811.8,2,130,5,1,13,0)
13^REMINDER DIALOG^IHD POST MI CALCULATED LDL GROUP^I^
"DATA",811.8,2,130,5,1,13,1,0)
^811.80315A^3^3
"DATA",811.8,2,130,5,1,13,1,1,0)
   Finding Changes
"DATA",811.8,2,130,5,1,13,1,2,0)
     Original                           New
"DATA",811.8,2,130,5,1,13,1,3,0)
    Q.LR LIPID PROFILE                 Q.ZZJM LIPID PROFILE
"DATA",811.8,2,130,5,1,14,0)
14^REMINDER DIALOG^EDZ ORDER LIPID PROFILE^I^
"DATA",811.8,2,130,5,1,14,1,0)
^811.80315A^3^3
"DATA",811.8,2,130,5,1,14,1,1,0)
   Finding Changes
"DATA",811.8,2,130,5,1,14,1,2,0)
     Original                           New
"DATA",811.8,2,130,5,1,14,1,3,0)
    Q.LR LIPID PROFILE                 Q.ZZJM LIPID PROFILE
"DATA",811.8,2,130,5,1,15,0)
15^REMINDER DIALOG^EDZ LIPID PROFILE REFUSED^I^
"DATA",811.8,2,130,5,1,15,1,0)
^811.80315A^3^3
"DATA",811.8,2,130,5,1,15,1,1,0)
   Finding Changes
"DATA",811.8,2,130,5,1,15,1,2,0)
     Original                           New
"DATA",811.8,2,130,5,1,15,1,3,0)
    Q.LR LIPID PROFILE                 Q.ZZJM LIPID PROFILE
"DATA",811.8,2,130,5,1,16,0)
16^REMINDER DIALOG^IHD POST MI REVIEW COMPLETE^I^
"DATA",811.8,2,130,5,1,16,1,0)
^811.80315A^3^3
"DATA",811.8,2,130,5,1,16,1,1,0)
   Finding Changes
"DATA",811.8,2,130,5,1,16,1,2,0)
     Original                           New
"DATA",811.8,2,130,5,1,16,1,3,0)
    Q.LR LIPID PROFILE                 Q.ZZJM LIPID PROFILE
"DATA",811.8,2,130,6,0)
3010925.094128^HARTLEY,PETER
"DATA",811.8,2,130,7,0)
3010925.09415^HARTLEY,PETER
"FIA",800)
CLINICAL REMINDER PARAMETERS
"FIA",800,0)
^PXRM(800,
"FIA",800,0,0)
800O
"FIA",800,0,1)
y^y^f^^^^n
"FIA",800,0,10)

"FIA",800,0,11)

"FIA",800,0,"RLRO")

"FIA",800,0,"VR")
1.5^PXRM
"FIA",800,800)
0
"FIA",800,800.01)
0
"FIA",800,800.02)
0
"FIA",800,800.04)
0
"FIA",800,800.41)
0
"FIA",811.6)
REMINDER SPONSOR
"FIA",811.6,0)
^PXRMD(811.6,
"FIA",811.6,0,0)
811.6Is
"FIA",811.6,0,1)
y^y^f^^^^n
"FIA",811.6,0,10)

"FIA",811.6,0,11)

"FIA",811.6,0,"RLRO")

"FIA",811.6,0,"VR")
1.5^PXRM
"FIA",811.6,811.6)
0
"FIA",811.6,811.61)
0
"FIA",811.6,811.611)
0
"FIA",811.6,811.62)
0
"FIA",811.8)
REMINDER EXCHANGE FILE
"FIA",811.8,0)
^PXD(811.8,
"FIA",811.8,0,0)
811.8s
"FIA",811.8,0,1)
n^n^f^^y^^y^r^n
"FIA",811.8,0,10)

"FIA",811.8,0,11)
I Y=2
"FIA",811.8,0,"RLRO")

"FIA",811.8,0,"VR")
1.5^PXRM
"FIA",811.8,811.8)
0
"FIA",811.8,811.801)
0
"FIA",811.8,811.802)
0
"FIA",811.8,811.8021)
0
"FIA",811.8,811.803)
0
"FIA",811.8,811.8031)
0
"FIA",811.8,811.80315)
0
"FIA",811.8,811.804)
0
"INI")
PRE^PXRMP7I
"INIT")
POST^PXRMP7I
"IX",811.6,811.6,"B",0)
811.6^B^This is a new style B cross-reference^R^^F^IR^I^811.6^^^^^LS
"IX",811.6,811.6,"B",1)
S ^PXRMD(811.6,"B",$E(X,1,64),DA)=""
"IX",811.6,811.6,"B",2)
K ^PXRMD(811.6,"B",$E(X,1,64),DA)
"IX",811.6,811.6,"B",2.5)
K ^PXRMD(811.6,"B")
"IX",811.6,811.6,"B",11.1,0)
^.114IA^1^1
"IX",811.6,811.6,"B",11.1,1,0)
1^F^811.6^.01^64^1^F
"IX",811.6,811.6,"C",0)
811.6^C^Determine if a sponsor is used as an associate sponsor.^R^^F^IR^W^811.62^^^^^LS
"IX",811.6,811.6,"C",.1,0)
^^2^2^3010830^^
"IX",811.6,811.6,"C",.1,1,0)
This cross-reference is used to determine if a sponsor is being used as
"IX",811.6,811.6,"C",.1,2,0)
an associated sponsor.
"IX",811.6,811.6,"C",1)
S ^PXRMD(811.6,"C",X,DA(1),DA)=""
"IX",811.6,811.6,"C",2)
K ^PXRMD(811.6,"C",X,DA(1),DA)
"IX",811.6,811.6,"C",2.5)
K ^PXRMD(811.6,"C")
"IX",811.6,811.6,"C",11.1,0)
^.114IA^1^1
"IX",811.6,811.6,"C",11.1,1,0)
1^F^811.62^.01^^1^F
"IX",811.8,811.8,"B",0)
811.8^B^Uniqueness Index for Key 'A' of File #811.8^R^^R^IR^I^811.8^^^^^LS
"IX",811.8,811.8,"B",1)
S ^PXD(811.8,"B",X(1),X(2),DA)=""
"IX",811.8,811.8,"B",2)
K ^PXD(811.8,"B",X(1),X(2),DA)
"IX",811.8,811.8,"B",2.5)
K ^PXD(811.8,"B")
"IX",811.8,811.8,"B",11.1,0)
^.114IA^2^2
"IX",811.8,811.8,"B",11.1,1,0)
1^F^811.8^.01^^1
"IX",811.8,811.8,"B",11.1,2,0)
2^F^811.8^.03^^2
"IX",811.8,811.8,"D",0)
811.8^D^Cross-reference on date and time^R^^F^IR^I^811.8^^^^^LS
"IX",811.8,811.8,"D",1)
S ^PXD(811.8,"D",X,DA)=""
"IX",811.8,811.8,"D",2)
K ^PXD(811.8,"D",X,DA)
"IX",811.8,811.8,"D",2.5)
K ^PXD(811.8,"D")
"IX",811.8,811.8,"D",11.1,0)
^.114IA^1^1
"IX",811.8,811.8,"D",11.1,1,0)
1^F^811.8^.03^^1^F
"IX",811.8,811.8,"D",11.1,1,3)

"IX",811.8,811.802,"B",0)
811.802^B^New style B cross-reference^R^^F^IR^I^811.802^^^^^LS
"IX",811.8,811.802,"B",1)
S ^PXD(811.8,DA(1),120,"B",$E(X,1,64),DA)=""
"IX",811.8,811.802,"B",2)
K ^PXD(811.8,DA(1),120,"B",$E(X,1,64),DA)
"IX",811.8,811.802,"B",2.5)
K ^PXD(811.8,DA(1),120,"B")
"IX",811.8,811.802,"B",11.1,0)
^.114IA^1^1
"IX",811.8,811.802,"B",11.1,1,0)
1^F^811.802^.01^64^1^F
"IX",811.8,811.802,"B",11.1,1,3)

"IX",811.8,811.803,"B",0)
811.803^B^New style B cross-reference^R^^F^IR^I^811.803^^^^^LS
"IX",811.8,811.803,"B",1)
S ^PXD(811.8,DA(1),130,"B",X,DA)=""
"IX",811.8,811.803,"B",2)
K ^PXD(811.8,DA(1),130,"B",X,DA)
"IX",811.8,811.803,"B",2.5)
K ^PXD(811.8,DA(1),130,"B")
"IX",811.8,811.803,"B",11.1,0)
^.114IA^1^1
"IX",811.8,811.803,"B",11.1,1,0)
1^F^811.803^.01^^1^F
"KEY",811.6,811.6,"A",0)
811.6^A^P^124
"KEY",811.6,811.6,"A",2,0)
^.312IA^1^1
"KEY",811.6,811.6,"A",2,1,0)
.01^811.6^1
"KEY",811.8,811.8,"A",0)
811.8^A^P^41
"KEY",811.8,811.8,"A",2,0)
^.312IA^2^2
"KEY",811.8,811.8,"A",2,1,0)
.01^811.8^1
"KEY",811.8,811.8,"A",2,2,0)
.03^811.8^2
"KEYPTR",811.6,811.6,"A")
811.6^B
"KEYPTR",811.8,811.8,"A")
811.8^B
"KRN",.4,1100,-1)
0^2
"KRN",.4,1100,0)
PXRM SPONSOR LIST^3010829.1402^@^811.6^^@^3011016
"KRN",.4,1100,"F",1)
"Name:";C1~.01;C8;X~"Class:";C1~.02;C8;X~"";S1~
"KRN",.4,1100,"H")
REMINDER SPONSOR LIST
"KRN",.4,1232,-1)
0^1
"KRN",.4,1232,0)
PXRM SPONSOR INQUIRY^3010905.1122^@^811.6^^@^3010925
"KRN",.4,1232,"F",1)
"Name:";C1;S1~.01;C8;X~"Class:";C1~.02;C8;X~1,"";S1~1,"Contact:";C1~1,.01;C10;X~1,1,.01;C3~"Associated Sponsors:";C1;S1~2,.01;C2~
"KRN",.4,1232,"H")
REMINDER SPONSOR LIST
"KRN",.402,1416,-1)
1^1
"KRN",.402,1416,0)
PXRM SPONSOR EDIT    FILE #811.6
"KRN",19,8601,-1)
0^7
"KRN",19,8601,0)
PXRM SPONSOR EDIT^Edit Reminder Sponsor^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,8601,1,0)
^19.06^1^1^3010605^^^^
"KRN",19,8601,1,1,0)
The option allows for editing of Reminder Sponsors.
"KRN",19,8601,25)
PXRMSPED
"KRN",19,8601,30)

"KRN",19,8601,50)

"KRN",19,8601,51)

"KRN",19,8601,63)

"KRN",19,8601,"U")
EDIT REMINDER SPONSOR
"KRN",19,8602,-1)
0^4
"KRN",19,8602,0)
PXRM SPONSOR MANAGEMENT^Reminder Sponsor Management^^M^^^^^^^^CLINICAL REMINDERS
"KRN",19,8602,1,0)
^19.06^1^1^3010829^^^
"KRN",19,8602,1,1,0)
This option provides the functions for Reminder Sponsor Management.
"KRN",19,8602,10,0)
^19.01IP^3^3
"KRN",19,8602,10,1,0)
8603^SL^5
"KRN",19,8602,10,1,"^")
PXRM SPONSOR LIST
"KRN",19,8602,10,2,0)
8732^SI^10
"KRN",19,8602,10,2,"^")
PXRM SPONSOR INQUIRY
"KRN",19,8602,10,3,0)
8601^SE^15
"KRN",19,8602,10,3,"^")
PXRM SPONSOR EDIT
"KRN",19,8602,99)
58829,41096
"KRN",19,8602,"U")
REMINDER SPONSOR MANAGEMENT
"KRN",19,8603,-1)
0^8
"KRN",19,8603,0)
PXRM SPONSOR LIST^List Reminder Sponsors^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,8603,1,0)
^19.06^1^1^3010829^^^
"KRN",19,8603,1,1,0)
This option is used to get a list of Reminder Sponsors.
"KRN",19,8603,25)
SPONSOR^PXRMLIST
"KRN",19,8603,30)

"KRN",19,8603,"U")
LIST REMINDER SPONSORS
"KRN",19,8604,-1)
2^1
"KRN",19,8604,0)
PXRM MANAGERS MENU^Reminder Managers Menu^^M^1342^^^^^^^364
"KRN",19,8604,10,0)
^19.01IP^13^13
"KRN",19,8604,10,3,0)
8602^SM^15
"KRN",19,8604,10,3,"^")
PXRM SPONSOR MANAGEMENT
"KRN",19,8604,10,13,0)
8737^MST^65
"KRN",19,8604,10,13,"^")
PXRM MST MANAGEMENT
"KRN",19,8604,"U")
REMINDER MANAGERS MENU
"KRN",19,8731,-1)
0^2
"KRN",19,8731,0)
PXRM MST SYNCHRONIZATION^Reminders MST Synchronization^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,8731,1,0)
^^3^3^3010829^
"KRN",19,8731,1,1,0)
This option is used to run the Clinical Reminders MST synchronization.
"KRN",19,8731,1,2,0)
The synchronization should not be run until the site has finished
"KRN",19,8731,1,3,0)
mapping the MST reminder terms.
"KRN",19,8731,25)
QUE^PXRMMST
"KRN",19,8731,200.9)
y
"KRN",19,8731,"U")
REMINDERS MST SYNCHRONIZATION
"KRN",19,8732,-1)
0^3
"KRN",19,8732,0)
PXRM SPONSOR INQUIRY^Reminder Sponsor Inquiry^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,8732,1,0)
^^1^1^3010829^
"KRN",19,8732,1,1,0)
This option is used to do a reminder sponsor inquiry.
"KRN",19,8732,25)
SPONSOR^PXRMINQ
"KRN",19,8732,"U")
REMINDER SPONSOR INQUIRY
"KRN",19,8736,-1)
0^6
"KRN",19,8736,0)
PXRM MST REPORT^Reminders MST Synchronization Report^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,8736,1,0)
^^1^1^3010904^
"KRN",19,8736,1,1,0)
This option runs the Clinical Reminders MST synchronization report.
"KRN",19,8736,25)
SYNREP^PXRMMST
"KRN",19,8736,"U")
REMINDERS MST SYNCHRONIZATION 
"KRN",19,8737,-1)
0^5
"KRN",19,8737,0)
PXRM MST MANAGEMENT^Reminders MST Synchronization Management^^M^^^^^^^^CLINICAL REMINDERS
"KRN",19,8737,1,0)
^^1^1^3010904^
"KRN",19,8737,1,1,0)
This option provides the Clinical Reminders MST management options.
"KRN",19,8737,10,0)
^19.01IP^2^2
"KRN",19,8737,10,1,0)
8731^SYN^5
"KRN",19,8737,10,1,"^")
PXRM MST SYNCHRONIZATION
"KRN",19,8737,10,2,0)
8736^REP^10
"KRN",19,8737,10,2,"^")
PXRM MST REPORT
"KRN",19,8737,99)
58829,41096
"KRN",19,8737,"U")
REMINDERS MST SYNCHRONIZATION 
"MBREQ")
0
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",364,-1)
1^1
"PKG",364,0)
CLINICAL REMINDERS^PXRM^Clinical Reminders^^^3011030
"PKG",364,20,0)
^9.402P^^
"PKG",364,22,0)
^9.49I^1^1
"PKG",364,22,1,0)
1.5^3000619^3000622^1342
"PKG",364,22,1,"PAH",1,0)
7^3020125^1342
"PKG",364,22,1,"PAH",1,1,0)
^^3^3^3020125
"PKG",364,22,1,"PAH",1,1,1,0)
This patch provides tools for Clinical Reminders to support MST
"PKG",364,22,1,"PAH",1,1,2,0)
functionality. See the National Patch Module for a complete
"PKG",364,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
33
"RTN","PXRMDATE")
0^28^B23143454
"RTN","PXRMDATE",1,0)
PXRMDATE ; SLC/PKR - Clinical Reminders date utilities. ;10/02/2001
"RTN","PXRMDATE",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,7**;Jun 19, 2000
"RTN","PXRMDATE",3,0)
 ;
"RTN","PXRMDATE",4,0)
 ;=======================================================================
"RTN","PXRMDATE",5,0)
DUE(RESDATE,FREQ,DUE,DUEDATE) ;Determine if the reminder is
"RTN","PXRMDATE",6,0)
 ;due now. Compute the due date.  This will be the date of the
"RTN","PXRMDATE",7,0)
 ;resolution finding + the reminder frequency. Subtract the due in
"RTN","PXRMDATE",8,0)
 ;advance time to see if the reminder should be marked as due.
"RTN","PXRMDATE",9,0)
 ;
"RTN","PXRMDATE",10,0)
 N DATE,DIAT,DIATOK,LDATE,TDDUE,TODAY
"RTN","PXRMDATE",11,0)
 I FREQ="" D  Q
"RTN","PXRMDATE",12,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","INCMPLT")="Incomplete reminder definition see the Clinical Reminder coordinator."
"RTN","PXRMDATE",13,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","FREQ")="No reminder frequency - cannot compute due date!"
"RTN","PXRMDATE",14,0)
 ;
"RTN","PXRMDATE",15,0)
 ;If the final frequency is 0Y then the reminder is not due.
"RTN","PXRMDATE",16,0)
 I FREQ="0Y" D  Q
"RTN","PXRMDATE",17,0)
 . S DUE=0
"RTN","PXRMDATE",18,0)
 . S DUEDATE=""
"RTN","PXRMDATE",19,0)
 ;
"RTN","PXRMDATE",20,0)
 I RESDATE["X" S LDATE=0
"RTN","PXRMDATE",21,0)
 E  S LDATE=+RESDATE
"RTN","PXRMDATE",22,0)
 S TODAY=$$NOW
"RTN","PXRMDATE",23,0)
 S DUE=""
"RTN","PXRMDATE",24,0)
 I LDATE=0 D  Q
"RTN","PXRMDATE",25,0)
 . S DUE="DUE NOW"
"RTN","PXRMDATE",26,0)
 . S DUEDATE="DUE NOW"
"RTN","PXRMDATE",27,0)
 ;
"RTN","PXRMDATE",28,0)
 S DATE=$$FULLDATE(LDATE)
"RTN","PXRMDATE",29,0)
 S DUEDATE=$$NEWDATE(DATE,FREQ)
"RTN","PXRMDATE",30,0)
 ;
"RTN","PXRMDATE",31,0)
 ;If the due date is less than or equal to today's date the reminder
"RTN","PXRMDATE",32,0)
 ;is due.
"RTN","PXRMDATE",33,0)
 I DUEDATE'>TODAY D  Q
"RTN","PXRMDATE",34,0)
 . S DUE="DUE NOW"
"RTN","PXRMDATE",35,0)
 ;
"RTN","PXRMDATE",36,0)
 S DIAT="-"_$P($G(^PXD(811.9,PXRMITEM,0)),U,4)
"RTN","PXRMDATE",37,0)
 I (+DIAT)=0 D
"RTN","PXRMDATE",38,0)
 . S DIATOK=0
"RTN","PXRMDATE",39,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"WARNING","DIAT")="Warning no do in advance time"
"RTN","PXRMDATE",40,0)
 E  S DIATOK=1
"RTN","PXRMDATE",41,0)
 ;
"RTN","PXRMDATE",42,0)
 I DIATOK S TDDUE=$$NEWDATE(DUEDATE,DIAT)
"RTN","PXRMDATE",43,0)
 E  S TDDUE=DUEDATE
"RTN","PXRMDATE",44,0)
 I TDDUE'>TODAY S DUE="DUE SOON"
"RTN","PXRMDATE",45,0)
 E  S DUE="RESOLVED"
"RTN","PXRMDATE",46,0)
 Q
"RTN","PXRMDATE",47,0)
 ;
"RTN","PXRMDATE",48,0)
 ;=======================================================================
"RTN","PXRMDATE",49,0)
EDATE(DATE) ;Check for an historical (event) date, format as appropriate.
"RTN","PXRMDATE",50,0)
 N TEMP
"RTN","PXRMDATE",51,0)
 S TEMP=$$FMTE^XLFDT(DATE,"5DZ")
"RTN","PXRMDATE",52,0)
 I DATE["E" S TEMP=TEMP_" (E)"
"RTN","PXRMDATE",53,0)
 Q TEMP
"RTN","PXRMDATE",54,0)
 ;
"RTN","PXRMDATE",55,0)
 ;=======================================================================
"RTN","PXRMDATE",56,0)
FMDFINVL(INVDT,DATE) ;Convert an inverse date (LABORATORY format
"RTN","PXRMDATE",57,0)
 ;9999999-date) to Fileman format.
"RTN","PXRMDATE",58,0)
 I $L(INVDT)=0 Q INVDT
"RTN","PXRMDATE",59,0)
 N TEMP
"RTN","PXRMDATE",60,0)
 S TEMP=9999999-INVDT
"RTN","PXRMDATE",61,0)
 ;If DATE is TRUE return only the date portion.
"RTN","PXRMDATE",62,0)
 I DATE S TEMP=$P(TEMP,".",1)
"RTN","PXRMDATE",63,0)
 Q TEMP
"RTN","PXRMDATE",64,0)
 ;
"RTN","PXRMDATE",65,0)
 ;=======================================================================
"RTN","PXRMDATE",66,0)
FMDFINVR(INVDT,DATE) ;Convert an inverse date (RADIOLOGY format
"RTN","PXRMDATE",67,0)
 ;9999999.9999-date) to Fileman format.
"RTN","PXRMDATE",68,0)
 I $L(INVDT)=0 Q INVDT
"RTN","PXRMDATE",69,0)
 N TEMP
"RTN","PXRMDATE",70,0)
 S TEMP=9999999.9999-INVDT
"RTN","PXRMDATE",71,0)
 ;If DATE is TRUE return only the date portion.
"RTN","PXRMDATE",72,0)
 I DATE S TEMP=$P(TEMP,".",1)
"RTN","PXRMDATE",73,0)
 Q TEMP
"RTN","PXRMDATE",74,0)
 ;
"RTN","PXRMDATE",75,0)
 ;=======================================================================
"RTN","PXRMDATE",76,0)
FULLDATE(DATE) ;See if DATE is a full date, i.e., it has a month and
"RTN","PXRMDATE",77,0)
 ;a day. If the month is missing assume Jan. If the day is missing
"RTN","PXRMDATE",78,0)
 ;assume the first. Issue a warning so the user knows what happened.  
"RTN","PXRMDATE",79,0)
 ;We assume the date is in Fileman format.
"RTN","PXRMDATE",80,0)
 N DAY,MISSING,MONTH,TDATE,YEAR
"RTN","PXRMDATE",81,0)
 S TDATE=DATE
"RTN","PXRMDATE",82,0)
 S MISSING=0
"RTN","PXRMDATE",83,0)
 S DAY=$E(DATE,6,7)
"RTN","PXRMDATE",84,0)
 S MONTH=$E(DATE,4,5)
"RTN","PXRMDATE",85,0)
 S YEAR=$E(DATE,1,3)
"RTN","PXRMDATE",86,0)
 I +DAY=0 D
"RTN","PXRMDATE",87,0)
 . S DAY=1
"RTN","PXRMDATE",88,0)
 . S MISSING=1
"RTN","PXRMDATE",89,0)
 . S ^TMP("PXRM",$J,"WA","INFO",PXRMITEM,"NO DAY")="Encounter date missing day, using the first for the date due calculation."
"RTN","PXRMDATE",90,0)
 I +MONTH=0 D
"RTN","PXRMDATE",91,0)
 . S MONTH=1
"RTN","PXRMDATE",92,0)
 . S MISSING=1
"RTN","PXRMDATE",93,0)
 . S ^TMP("PXRM",$J,"WA","INFO",PXRMITEM,"NO MONTH")="Encounter date missing month, using January for the date due calculation."
"RTN","PXRMDATE",94,0)
 I MISSING D
"RTN","PXRMDATE",95,0)
 . S TDATE=(YEAR*1E4)+(MONTH*1E2)+DAY
"RTN","PXRMDATE",96,0)
 . I DATE["E" S TDATE=TDATE_"E"
"RTN","PXRMDATE",97,0)
 Q TDATE
"RTN","PXRMDATE",98,0)
 ;
"RTN","PXRMDATE",99,0)
 ;=======================================================================
"RTN","PXRMDATE",100,0)
INVFFMDL(DT,DATE) ;Convert a Fileman date to its inverse (LABORATORY
"RTN","PXRMDATE",101,0)
 ;format 9999999-date) to Fileman format.
"RTN","PXRMDATE",102,0)
 I $L(DT)=0 Q DT
"RTN","PXRMDATE",103,0)
 N TEMP
"RTN","PXRMDATE",104,0)
 S TEMP=9999999-DT
"RTN","PXRMDATE",105,0)
 ;If DATE is true the return only the date portion.
"RTN","PXRMDATE",106,0)
 I DATE S TEMP=$P(TEMP,".",1)
"RTN","PXRMDATE",107,0)
 Q TEMP
"RTN","PXRMDATE",108,0)
 ;
"RTN","PXRMDATE",109,0)
 ;=======================================================================
"RTN","PXRMDATE",110,0)
FRQINDAY(FREQ) ;Given a frequency in the form ND, NM, or NY where N is a
"RTN","PXRMDATE",111,0)
 ;number and D stands for days, M for months, and Y for years return
"RTN","PXRMDATE",112,0)
 ;the value in days.
"RTN","PXRMDATE",113,0)
 N CODE,LEN,MULT,NUM
"RTN","PXRMDATE",114,0)
 S LEN=$L(FREQ)
"RTN","PXRMDATE",115,0)
 S NUM=$E(FREQ,1,LEN-1)
"RTN","PXRMDATE",116,0)
 S CODE=$E(FREQ,LEN,LEN)
"RTN","PXRMDATE",117,0)
 S MULT=1.0
"RTN","PXRMDATE",118,0)
 I CODE="M" S MULT=30.42
"RTN","PXRMDATE",119,0)
 I CODE="Y" S MULT=365.25
"RTN","PXRMDATE",120,0)
 Q +(MULT*NUM)
"RTN","PXRMDATE",121,0)
 ;
"RTN","PXRMDATE",122,0)
 ;=======================================================================
"RTN","PXRMDATE",123,0)
NDAYS(INT) ;Given an interval in the form ND, NM, or NY where D stands
"RTN","PXRMDATE",124,0)
 ;for days, M for months, and Y for years convert to days and return
"RTN","PXRMDATE",125,0)
 ;that value. 
"RTN","PXRMDATE",126,0)
 N LEN,NUM,UNIT
"RTN","PXRMDATE",127,0)
 S LEN=$L(INT)
"RTN","PXRMDATE",128,0)
 I LEN=0 Q 0
"RTN","PXRMDATE",129,0)
 S NUM=$E(INT,1,LEN-1)
"RTN","PXRMDATE",130,0)
 S UNIT=$E(INT,LEN)
"RTN","PXRMDATE",131,0)
 I UNIT="D" Q NUM
"RTN","PXRMDATE",132,0)
 I UNIT="M" Q 30.42*NUM
"RTN","PXRMDATE",133,0)
 I UNIT="Y" Q 365.25*NUM
"RTN","PXRMDATE",134,0)
 Q INT
"RTN","PXRMDATE",135,0)
 ;
"RTN","PXRMDATE",136,0)
 ;=======================================================================
"RTN","PXRMDATE",137,0)
NEWDATE(VADATE,OFFSET) ;Given a date in VA Fileman format (VADATE) and an
"RTN","PXRMDATE",138,0)
 ;offset of the form NY, NM, ND where N is a number and Y stands for
"RTN","PXRMDATE",139,0)
 ;years, M for months, and D for days return the new date in VA Fileman
"RTN","PXRMDATE",140,0)
 ;format. 
"RTN","PXRMDATE",141,0)
 N LEN,NEWDATE,NUM,UNIT
"RTN","PXRMDATE",142,0)
 S LEN=$L(OFFSET)
"RTN","PXRMDATE",143,0)
 S NUM=+$E(OFFSET,1,LEN-1)
"RTN","PXRMDATE",144,0)
 S UNIT=$E(OFFSET,LEN)
"RTN","PXRMDATE",145,0)
 I UNIT="D" G DAY
"RTN","PXRMDATE",146,0)
 I UNIT="M" G MONTH
"RTN","PXRMDATE",147,0)
 I UNIT="Y" G YEAR
"RTN","PXRMDATE",148,0)
 ;Unknown unit just return the original date
"RTN","PXRMDATE",149,0)
 Q VADATE
"RTN","PXRMDATE",150,0)
DAY ;
"RTN","PXRMDATE",151,0)
 S NEWDATE=+$$FMADD^XLFDT(VADATE,NUM)
"RTN","PXRMDATE",152,0)
 Q NEWDATE
"RTN","PXRMDATE",153,0)
MONTH ;
"RTN","PXRMDATE",154,0)
 ;Convert the months to days and then add the days using the DAY code.
"RTN","PXRMDATE",155,0)
 ;Multiply the number of months by the average number of days in a month.
"RTN","PXRMDATE",156,0)
 N INT,FRAC
"RTN","PXRMDATE",157,0)
 S NUM=30.42*NUM
"RTN","PXRMDATE",158,0)
 ;Round the number of days, FMADD^XLFDT has problems with non-integer
"RTN","PXRMDATE",159,0)
 ;days.
"RTN","PXRMDATE",160,0)
 S INT=+$P(NUM,".",1)
"RTN","PXRMDATE",161,0)
 S FRAC=NUM-INT
"RTN","PXRMDATE",162,0)
 I FRAC<0.5 S NUM=INT
"RTN","PXRMDATE",163,0)
 E  S NUM=INT+1
"RTN","PXRMDATE",164,0)
 G DAY
"RTN","PXRMDATE",165,0)
 Q
"RTN","PXRMDATE",166,0)
YEAR ;
"RTN","PXRMDATE",167,0)
 Q VADATE+(10000*NUM)
"RTN","PXRMDATE",168,0)
 ;
"RTN","PXRMDATE",169,0)
 ;=======================================================================
"RTN","PXRMDATE",170,0)
NOW() ;If PXRMDATE has a date return it, otherwise return the current date.
"RTN","PXRMDATE",171,0)
 N NOW
"RTN","PXRMDATE",172,0)
 I +$G(PXRMDATE)>0 S NOW=PXRMDATE
"RTN","PXRMDATE",173,0)
 E  S NOW=$$NOW^XLFDT
"RTN","PXRMDATE",174,0)
 Q NOW
"RTN","PXRMDATE",175,0)
 ;
"RTN","PXRMDATE",176,0)
 ;=======================================================================
"RTN","PXRMDATE",177,0)
VALID(FIND0,TFINDO,DATE) ;Given the date determine if the finding is
"RTN","PXRMDATE",178,0)
 ;valid. FIND0 is the 0 node of the finding multiple, TFIND0 is the
"RTN","PXRMDATE",179,0)
 ;0 node of the term finding.
"RTN","PXRMDATE",180,0)
 N EFP,EFD,EXPDATE,VALID
"RTN","PXRMDATE",181,0)
 ;First check the EFFECTIVE PERIOD.
"RTN","PXRMDATE",182,0)
 S EFP=$P(TFIND0,U,8)
"RTN","PXRMDATE",183,0)
 I EFP="" S EFP=$P(FIND0,U,8)
"RTN","PXRMDATE",184,0)
 S VALID=1
"RTN","PXRMDATE",185,0)
 I EFP'="" D
"RTN","PXRMDATE",186,0)
 . S EXPDATE=$$NEWDATE(DATE,EFP)
"RTN","PXRMDATE",187,0)
 . I $$NOW>EXPDATE S VALID=0
"RTN","PXRMDATE",188,0)
 I 'VALID Q VALID
"RTN","PXRMDATE",189,0)
 ;If the finding is still valid check the EFFECTIVE DATE.
"RTN","PXRMDATE",190,0)
 S EFD=$P(TFIND0,U,11)
"RTN","PXRMDATE",191,0)
 I EFD="" S EFD=$P(FIND0,U,11)
"RTN","PXRMDATE",192,0)
 I EFD'="" D
"RTN","PXRMDATE",193,0)
 . I DATE<EFD S VALID=0
"RTN","PXRMDATE",194,0)
 Q VALID
"RTN","PXRMDATE",195,0)
 ;
"RTN","PXRMDATE",196,0)
 ;=======================================================================
"RTN","PXRMDATE",197,0)
VDATE(VIEN) ;Given a visit ien return the visit date.
"RTN","PXRMDATE",198,0)
 N DATE
"RTN","PXRMDATE",199,0)
 I +VIEN>0 S DATE=$P($G(^AUPNVSIT(VIEN,0)),U,1)
"RTN","PXRMDATE",200,0)
 E  S DATE=0
"RTN","PXRMDATE",201,0)
 I $L(DATE)=0 S DATE=0
"RTN","PXRMDATE",202,0)
 ;Check for historical encounter.
"RTN","PXRMDATE",203,0)
 I $$ISHIST^PXRMVSIT(VIEN) D
"RTN","PXRMDATE",204,0)
 . S DATE=DATE_"E"
"RTN","PXRMDATE",205,0)
 Q DATE
"RTN","PXRMDATE",206,0)
 ;
"RTN","PXRMDEDT")
0^19^B87879865
"RTN","PXRMDEDT",1,0)
PXRMDEDT ; SLC/PJH - Edit PXRM reminder dialog. ;12/21/2001
"RTN","PXRMDEDT",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5,7**;Jun 19, 2000
"RTN","PXRMDEDT",3,0)
 ;
"RTN","PXRMDEDT",4,0)
 ;Used by protocol PXRM SELECTION ADD/PXRM GENERAL ADD
"RTN","PXRMDEDT",5,0)
 ;
"RTN","PXRMDEDT",6,0)
 ;Add Dialog
"RTN","PXRMDEDT",7,0)
 ;----------
"RTN","PXRMDEDT",8,0)
ADD N DA,DIC,Y,DTOUT,DUOUT,DTYP,DLAYGO,HED
"RTN","PXRMDEDT",9,0)
 S HED="ADD DIALOG"
"RTN","PXRMDEDT",10,0)
 W IORESET
"RTN","PXRMDEDT",11,0)
 F  D  Q:$D(DTOUT)
"RTN","PXRMDEDT",12,0)
 .S DIC="^PXRMD(801.41,"
"RTN","PXRMDEDT",13,0)
 .;Set the starting place for additions.
"RTN","PXRMDEDT",14,0)
 .D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMDEDT",15,0)
 .S DIC(0)="AELMQ",DLAYGO=801.41
"RTN","PXRMDEDT",16,0)
 .S DIC("A")="Select DIALOG to add: "
"RTN","PXRMDEDT",17,0)
 .S DIC("DR")="4///"_$G(PXRMDTYP)
"RTN","PXRMDEDT",18,0)
 .D ^DIC
"RTN","PXRMDEDT",19,0)
 .I $D(DUOUT) S DTOUT=1
"RTN","PXRMDEDT",20,0)
 .I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMDEDT",21,0)
 .I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMDEDT",22,0)
 .I $P(Y,U,3)'=1 W !,"This dialog name already exists" Q
"RTN","PXRMDEDT",23,0)
 .S DA=$P(Y,U,1)
"RTN","PXRMDEDT",24,0)
 .;Determine dialog type
"RTN","PXRMDEDT",25,0)
 .S DTYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",26,0)
 .;Enter dialog type if a new entry
"RTN","PXRMDEDT",27,0)
 .I DTYP="" D  Q:$D(Y)
"RTN","PXRMDEDT",28,0)
 ..N DIE,DR
"RTN","PXRMDEDT",29,0)
 ..S DIE=801.41,DR=4
"RTN","PXRMDEDT",30,0)
 ..D ^DIE
"RTN","PXRMDEDT",31,0)
 .;
"RTN","PXRMDEDT",32,0)
 .;Edit Dialog
"RTN","PXRMDEDT",33,0)
 .D EDIT(DTYP,DA)
"RTN","PXRMDEDT",34,0)
 Q
"RTN","PXRMDEDT",35,0)
 ;
"RTN","PXRMDEDT",36,0)
 ;Delete a line from the reminder dialog
"RTN","PXRMDEDT",37,0)
 ;--------------------------------------
"RTN","PXRMDEDT",38,0)
DEL(DIEN,PXRMDIEN) ;
"RTN","PXRMDEDT",39,0)
 N DA,DIK
"RTN","PXRMDEDT",40,0)
 S DA(1)=PXRMDIEN,DA=$O(^PXRMD(801.41,PXRMDIEN,10,"D",DIEN,"")) Q:'DA
"RTN","PXRMDEDT",41,0)
 S DIK="^PXRMD(801.41,"_DA(1)_",10,"
"RTN","PXRMDEDT",42,0)
 D ^DIK
"RTN","PXRMDEDT",43,0)
 Q
"RTN","PXRMDEDT",44,0)
 ;
"RTN","PXRMDEDT",45,0)
 ;called by protocol PXRM DIALOG EDIT
"RTN","PXRMDEDT",46,0)
 ;-----------------------------------
"RTN","PXRMDEDT",47,0)
EDIT(TYP,DA) ;
"RTN","PXRMDEDT",48,0)
 Q:'$$LOCK(DA)
"RTN","PXRMDEDT",49,0)
 W IORESET
"RTN","PXRMDEDT",50,0)
 N CS1,CS2,DIC,DIDEL,DIE,DR,DTOUT,DUOUT,DINUSE,TYP,ODA,Y
"RTN","PXRMDEDT",51,0)
 ;Save checksum
"RTN","PXRMDEDT",52,0)
 S CS1=$$FILE^PXRMEXCS(801.41,DA)
"RTN","PXRMDEDT",53,0)
 ;Check dialog type
"RTN","PXRMDEDT",54,0)
 S TYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",55,0)
 S DIE="^PXRMD(801.41,",DIDEL=801.41,DINUSE=0,ODA=DA
"RTN","PXRMDEDT",56,0)
 ;Reminder Dialog
"RTN","PXRMDEDT",57,0)
 I TYP="R" S DR="[PXRM EDIT REMINDER DIALOG]"
"RTN","PXRMDEDT",58,0)
 ;Dialog Element
"RTN","PXRMDEDT",59,0)
 I TYP="E" S DR="[PXRM EDIT ELEMENT]"
"RTN","PXRMDEDT",60,0)
 ;Additional Prompt
"RTN","PXRMDEDT",61,0)
 I TYP="P" S DR="[PXRM EDIT PROMPT]"
"RTN","PXRMDEDT",62,0)
 ;Forced Value
"RTN","PXRMDEDT",63,0)
 I TYP="F" S DR="[PXRM EDIT FORCED VALUE]"
"RTN","PXRMDEDT",64,0)
 ;Dialog Group (Finding item dialog)
"RTN","PXRMDEDT",65,0)
 I TYP="G" S DR="[PXRM EDIT GROUP]"
"RTN","PXRMDEDT",66,0)
 ;Result Group
"RTN","PXRMDEDT",67,0)
 I TYP="S" S DR="[PXRM RESULT GROUP]"
"RTN","PXRMDEDT",68,0)
 ;Result Element
"RTN","PXRMDEDT",69,0)
 I TYP="T" S DR="[PXRM RESULT ELEMENT]"
"RTN","PXRMDEDT",70,0)
 ;Allows limited edit of national dialogs
"RTN","PXRMDEDT",71,0)
 I $P($G(^PXRMD(801.41,DA,100)),U)="N" D
"RTN","PXRMDEDT",72,0)
 .I $G(PXRMINST)=1,DUZ(0)="@" Q
"RTN","PXRMDEDT",73,0)
 .S DR="[PXRM EDIT NATIONAL DIALOG]",DINUSE=1
"RTN","PXRMDEDT",74,0)
 ;
"RTN","PXRMDEDT",75,0)
 I "GEPF"[TYP D
"RTN","PXRMDEDT",76,0)
 .I '$D(^PXRMD(801.41,"AD",DA)) W !,"Not used by any other dialog",! Q
"RTN","PXRMDEDT",77,0)
 .I PXRMGTYP'="DLG" S DINUSE=1 Q
"RTN","PXRMDEDT",78,0)
 .I PXRMGTYP="DLG" D  Q
"RTN","PXRMDEDT",79,0)
 ..N SUB
"RTN","PXRMDEDT",80,0)
 ..S SUB=0
"RTN","PXRMDEDT",81,0)
 ..F  S SUB=$O(^PXRMD(801.41,"AD",DA,SUB)) Q:'SUB  Q:DINUSE  D
"RTN","PXRMDEDT",82,0)
 ...I SUB'=PXRMDIEN S DINUSE=1
"RTN","PXRMDEDT",83,0)
 I DINUSE D
"RTN","PXRMDEDT",84,0)
 .W !,"CURRENT DIALOG ELEMENT/GROUP NAME: "_$P($G(^PXRMD(801.41,DA,0)),U)
"RTN","PXRMDEDT",85,0)
 .I TYP="S" Q
"RTN","PXRMDEDT",86,0)
 .I PXRMGTYP="DLGE" W !,"Used by:" D USE^PXRMDLST(DA,10,"")
"RTN","PXRMDEDT",87,0)
 .I PXRMGTYP'="DLGE" W !,"Used by:" D USE^PXRMDLST(DA,10,PXRMDIEN)
"RTN","PXRMDEDT",88,0)
 ;
"RTN","PXRMDEDT",89,0)
 ;Save list of components
"RTN","PXRMDEDT",90,0)
 N COMP D COMP^PXRMDEDX(DA,.COMP)
"RTN","PXRMDEDT",91,0)
 ;
"RTN","PXRMDEDT",92,0)
 ;Edit dialog then unlock
"RTN","PXRMDEDT",93,0)
 D ^DIE,UNLOCK(ODA)
"RTN","PXRMDEDT",94,0)
 ;Deleted ???
"RTN","PXRMDEDT",95,0)
 I '$D(DA) D  Q
"RTN","PXRMDEDT",96,0)
 .;Clear any pointers from #811.9
"RTN","PXRMDEDT",97,0)
 .I $D(PXRMDIEN) D PURGE(PXRMDIEN)
"RTN","PXRMDEDT",98,0)
 .;Option to delete components
"RTN","PXRMDEDT",99,0)
 .I $D(COMP) D DELETE^PXRMDEDX(.COMP)
"RTN","PXRMDEDT",100,0)
 .S VALMBCK="Q"
"RTN","PXRMDEDT",101,0)
 ;
"RTN","PXRMDEDT",102,0)
 ;Update edit history
"RTN","PXRMDEDT",103,0)
 I (TYP'="R") D
"RTN","PXRMDEDT",104,0)
 .S CS2=$$FILE^PXRMEXCS(801.41,DA) Q:CS2=CS1  Q:+CS2=0
"RTN","PXRMDEDT",105,0)
 .D SEHIST^PXRMUTIL(801.41,DIC,DA)
"RTN","PXRMDEDT",106,0)
 ;
"RTN","PXRMDEDT",107,0)
 ;Redisplay changes (reminder dialog option only)
"RTN","PXRMDEDT",108,0)
 I PXRMGTYP="DLG",TYP="R" D
"RTN","PXRMDEDT",109,0)
 .;Get name of reminder dialog again
"RTN","PXRMDEDT",110,0)
 .S Y=$P($G(^PXRMD(801.41,DA,0)),U)
"RTN","PXRMDEDT",111,0)
 .;Format headings to include dialog name
"RTN","PXRMDEDT",112,0)
 .S PXRMHD="REMINDER DIALOG NAME: "_$P(Y,U)
"RTN","PXRMDEDT",113,0)
 .;Check if the set is disable and add to header if disabled
"RTN","PXRMDEDT",114,0)
 .I $P(^PXRMD(801.41,DA,0),U,3)]"" S PXRMHD=PXRMHD_" (DISABLED)"
"RTN","PXRMDEDT",115,0)
 .;Reset header in case name has changed
"RTN","PXRMDEDT",116,0)
 .S HEADER=PXRMHD,VALMHDR(1)=HEADER
"RTN","PXRMDEDT",117,0)
 Q
"RTN","PXRMDEDT",118,0)
 ;
"RTN","PXRMDEDT",119,0)
 ;Add SINGLE dialog element (protocol PXRM DIALOG SELECTION ITEM)
"RTN","PXRMDEDT",120,0)
 ;-------------------------
"RTN","PXRMDEDT",121,0)
ESEL(PXRMDIEN,SEL) ;
"RTN","PXRMDEDT",122,0)
 N DA,DIC,DLAYGO,DNEW,DTOUT,DUOUT,DTYP,Y
"RTN","PXRMDEDT",123,0)
 ;
"RTN","PXRMDEDT",124,0)
 S DIC="^PXRMD(801.41,"
"RTN","PXRMDEDT",125,0)
 S DLAYGO="801.41"
"RTN","PXRMDEDT",126,0)
 ;Set the starting place for additions.
"RTN","PXRMDEDT",127,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMDEDT",128,0)
 S DIC(0)="AEMQL"
"RTN","PXRMDEDT",129,0)
 S DIC("A")="Select new DIALOG ELEMENT: "
"RTN","PXRMDEDT",130,0)
 S DIC("S")="I ""EG""[$P(^PXRMD(801.41,Y,0),U,4)&(Y'=PXRMDIEN)"
"RTN","PXRMDEDT",131,0)
 S DIC("DR")="4///E"
"RTN","PXRMDEDT",132,0)
 W !
"RTN","PXRMDEDT",133,0)
 D ^DIC
"RTN","PXRMDEDT",134,0)
 I $D(DUOUT) S DTOUT=1
"RTN","PXRMDEDT",135,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMDEDT",136,0)
 I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMDEDT",137,0)
 S DA=$P(Y,U,1) Q:'DA
"RTN","PXRMDEDT",138,0)
 S DNEW=$P(Y,U,3)
"RTN","PXRMDEDT",139,0)
 ;Add to dialog
"RTN","PXRMDEDT",140,0)
 D EADD(SEL,DA,PXRMDIEN)
"RTN","PXRMDEDT",141,0)
 ;Determine dialog type
"RTN","PXRMDEDT",142,0)
 S DTYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",143,0)
 ;
"RTN","PXRMDEDT",144,0)
 ;Edit Dialog
"RTN","PXRMDEDT",145,0)
 I DNEW D EDIT(DTYP,DA)
"RTN","PXRMDEDT",146,0)
 Q
"RTN","PXRMDEDT",147,0)
 ;
"RTN","PXRMDEDT",148,0)
 ;Update dialog component multiple
"RTN","PXRMDEDT",149,0)
 ;--------------------------------
"RTN","PXRMDEDT",150,0)
EADD(SEL,NSUB,PXRMDIEN) ;
"RTN","PXRMDEDT",151,0)
 N DA,DATA,NEXT
"RTN","PXRMDEDT",152,0)
 S DATA=$G(^PXRMD(801.41,PXRMDIEN,10,0)),NEXT=$P(DATA,U,3)+1
"RTN","PXRMDEDT",153,0)
 I DATA="" S DATA="^801.412IA"
"RTN","PXRMDEDT",154,0)
 S DA=NSUB,DA(1)=PXRMDIEN
"RTN","PXRMDEDT",155,0)
 S ^PXRMD(801.41,PXRMDIEN,10,NEXT,0)=SEL_U_DA_"^^^^^^^"
"RTN","PXRMDEDT",156,0)
 ;Update next slot
"RTN","PXRMDEDT",157,0)
 S $P(DATA,U,4)=$P(DATA,U,4)+1,$P(DATA,U,3)=NEXT
"RTN","PXRMDEDT",158,0)
 S ^PXRMD(801.41,PXRMDIEN,10,0)=DATA
"RTN","PXRMDEDT",159,0)
 ;Re-index
"RTN","PXRMDEDT",160,0)
 N DIK,DA S DIK="^PXRMD(801.41,",DA=PXRMDIEN
"RTN","PXRMDEDT",161,0)
 D IX^DIK
"RTN","PXRMDEDT",162,0)
 Q
"RTN","PXRMDEDT",163,0)
 ;
"RTN","PXRMDEDT",164,0)
 ;Edit individual element (protocol PXRM DIALOG SELECTION ITEM)
"RTN","PXRMDEDT",165,0)
 ;-----------------------
"RTN","PXRMDEDT",166,0)
IND(DIEN) ;
"RTN","PXRMDEDT",167,0)
 W IORESET
"RTN","PXRMDEDT",168,0)
 N DIC,DIDEL,DR,DTOUT,DUOUT,DINUSE,HED,NATIONAL,Y
"RTN","PXRMDEDT",169,0)
 ;
"RTN","PXRMDEDT",170,0)
 S NATIONAL=0
"RTN","PXRMDEDT",171,0)
 ;Limited edit of National dialogs
"RTN","PXRMDEDT",172,0)
 I $P($G(^PXRMD(801.41,PXRMDIEN,100)),U)="N" D
"RTN","PXRMDEDT",173,0)
 .I $G(PXRMINST)=1,DUZ(0)="@" Q
"RTN","PXRMDEDT",174,0)
 .S NATIONAL=1
"RTN","PXRMDEDT",175,0)
 ;
"RTN","PXRMDEDT",176,0)
 W !,"CURRENT DIALOG ELEMENT NAME: "_$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMDEDT",177,0)
 ;Ask what to do with it
"RTN","PXRMDEDT",178,0)
 N ANS
"RTN","PXRMDEDT",179,0)
 I 'NATIONAL D PROMPT(.ANS) Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDEDT",180,0)
 ;National can only be edited
"RTN","PXRMDEDT",181,0)
 I NATIONAL S ANS="E"
"RTN","PXRMDEDT",182,0)
 ;Delete line
"RTN","PXRMDEDT",183,0)
 I ANS="D" D DEL(DIEN,PXRMDIEN) Q
"RTN","PXRMDEDT",184,0)
 ;Copy and Replace option
"RTN","PXRMDEDT",185,0)
 I ANS="C" D SEL^PXRMDCPY(.DIEN,PXRMDIEN) Q:$D(DTOUT)!$D(DUOUT) 
"RTN","PXRMDEDT",186,0)
 ;Determine if a taxonomy dialog
"RTN","PXRMDEDT",187,0)
 N FIND
"RTN","PXRMDEDT",188,0)
 S FIND=$P($G(^PXRMD(801.41,IEN,1)),U,5),VALMBCK="R"
"RTN","PXRMDEDT",189,0)
 ;Edit taxomomy dialog
"RTN","PXRMDEDT",190,0)
 I $P(FIND,";",2)="PXD(811.2," D EDIT^PXRMGEDT("DTAX",$P(FIND,";"),0) Q
"RTN","PXRMDEDT",191,0)
 ;Determine dialog type
"RTN","PXRMDEDT",192,0)
 S DTYP=$P($G(^PXRMD(801.41,DIEN,0)),U,4) Q:DTYP=""
"RTN","PXRMDEDT",193,0)
 ;Option to change an element to a group
"RTN","PXRMDEDT",194,0)
 I DTYP="E",'NATIONAL D NTYP(.DTYP) Q:$D(DUOUT)!$D(DTOUT)  D:DTYP="G"
"RTN","PXRMDEDT",195,0)
 .S $P(^PXRMD(801.41,DIEN,0),U,4)=DTYP
"RTN","PXRMDEDT",196,0)
 .W !,"Dialog element changed to a dialog group"
"RTN","PXRMDEDT",197,0)
 ;Edit Element
"RTN","PXRMDEDT",198,0)
 D EDIT(DTYP,DIEN)
"RTN","PXRMDEDT",199,0)
 Q
"RTN","PXRMDEDT",200,0)
 ;
"RTN","PXRMDEDT",201,0)
 ;Change Dialog Element Type
"RTN","PXRMDEDT",202,0)
 ;--------------------------
"RTN","PXRMDEDT",203,0)
NTYP(TYP) ;
"RTN","PXRMDEDT",204,0)
 N X,Y,DIR K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDEDT",205,0)
 S DIR(0)="SA"_U_"E:Element;"
"RTN","PXRMDEDT",206,0)
 S DIR(0)=DIR(0)_"G:Group;"
"RTN","PXRMDEDT",207,0)
 S DIR("A")="Dialog Element Type: "
"RTN","PXRMDEDT",208,0)
 S DIR("B")="E"
"RTN","PXRMDEDT",209,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMDEDT",210,0)
 S DIR("??")=U_"D HELP^PXRMDEDT(3)"
"RTN","PXRMDEDT",211,0)
 D ^DIR K DIR
"RTN","PXRMDEDT",212,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDEDT",213,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDEDT",214,0)
 S TYP=Y
"RTN","PXRMDEDT",215,0)
 Q
"RTN","PXRMDEDT",216,0)
 ;
"RTN","PXRMDEDT",217,0)
 ;Select Dialog Element Action
"RTN","PXRMDEDT",218,0)
 ;----------------------------
"RTN","PXRMDEDT",219,0)
PROMPT(ANS) ;
"RTN","PXRMDEDT",220,0)
 N X,Y,DIR K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDEDT",221,0)
 S DIR(0)="S"_U_"E:Edit;"
"RTN","PXRMDEDT",222,0)
 S DIR(0)=DIR(0)_"C:Copy and Replace current element;"
"RTN","PXRMDEDT",223,0)
 S DIR(0)=DIR(0)_"D:Delete element from this dialog;"
"RTN","PXRMDEDT",224,0)
 S DIR("A")="Select Dialog Element Action"
"RTN","PXRMDEDT",225,0)
 S DIR("B")="E"
"RTN","PXRMDEDT",226,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMDEDT",227,0)
 S DIR("??")=U_"D HELP^PXRMDEDT(1)"
"RTN","PXRMDEDT",228,0)
 D ^DIR K DIR
"RTN","PXRMDEDT",229,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDEDT",230,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDEDT",231,0)
 S ANS=Y
"RTN","PXRMDEDT",232,0)
 Q
"RTN","PXRMDEDT",233,0)
 ;
"RTN","PXRMDEDT",234,0)
 ;Clear pointers from the reminder file and process ID file
"RTN","PXRMDEDT",235,0)
 ;---------------------------------------------------------
"RTN","PXRMDEDT",236,0)
PURGE(DIEN) ;
"RTN","PXRMDEDT",237,0)
 ;Purge pointers to this dialog from reminder file
"RTN","PXRMDEDT",238,0)
 N RIEN
"RTN","PXRMDEDT",239,0)
 S RIEN=0
"RTN","PXRMDEDT",240,0)
 F  S RIEN=$O(^PXD(811.9,"AG",DIEN,RIEN)) Q:'RIEN  D
"RTN","PXRMDEDT",241,0)
 .K ^PXD(811.9,RIEN,51),^PXD(811.9,"AG",DIEN,RIEN)
"RTN","PXRMDEDT",242,0)
 ;
"RTN","PXRMDEDT",243,0)
 Q
"RTN","PXRMDEDT",244,0)
 ;
"RTN","PXRMDEDT",245,0)
 ;General help text routine. Write out the text in the HTEXT array.
"RTN","PXRMDEDT",246,0)
HELP(CALL) ;
"RTN","PXRMDEDT",247,0)
 N HTEXT
"RTN","PXRMDEDT",248,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDEDT",249,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMDEDT",250,0)
 ;
"RTN","PXRMDEDT",251,0)
 I CALL=1 D
"RTN","PXRMDEDT",252,0)
 .S HTEXT(1)="Select E to edit dialog element. If you wish to create"
"RTN","PXRMDEDT",253,0)
 .S HTEXT(2)="a new dialog element just for this reminder dialog select"
"RTN","PXRMDEDT",254,0)
 .S HTEXT(3)="C to copy and replace the current element. Select D to"
"RTN","PXRMDEDT",255,0)
 .S HTEXT(4)="delete the sequence number/element from the dialog."
"RTN","PXRMDEDT",256,0)
 I CALL=2 D
"RTN","PXRMDEDT",257,0)
 .S HTEXT(1)="Enter Y to copy the current dialog element to a new name"
"RTN","PXRMDEDT",258,0)
 .S HTEXT(2)="and then use this new element in the reminder dialog."
"RTN","PXRMDEDT",259,0)
 I CALL=3 D
"RTN","PXRMDEDT",260,0)
 .S HTEXT(1)="Enter G to change the current dialog element into a dialog"
"RTN","PXRMDEDT",261,0)
 .S HTEXT(2)="group so that additional elements can be added. Enter E to"
"RTN","PXRMDEDT",262,0)
 .S HTEXT(3)="leave the type of the dialog element unchanged."
"RTN","PXRMDEDT",263,0)
 I CALL=4 D
"RTN","PXRMDEDT",264,0)
 .S HTEXT(1)="Enter Y to change the dialog prompt created into a forced"
"RTN","PXRMDEDT",265,0)
 .S HTEXT(2)="value. To edit the new forced value switch to the forced"
"RTN","PXRMDEDT",266,0)
 .S HTEXT(3)="value screen using CV. This option only applies to prompts"
"RTN","PXRMDEDT",267,0)
 .S HTEXT(4)="which update PCE or vitals."
"RTN","PXRMDEDT",268,0)
 .S HTEXT(5)="Enter N to leave the dialog prompt unchanged."
"RTN","PXRMDEDT",269,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDT",270,0)
 S IC=""
"RTN","PXRMDEDT",271,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMDEDT",272,0)
 . S X=HTEXT(IC)
"RTN","PXRMDEDT",273,0)
 . D ^DIWP
"RTN","PXRMDEDT",274,0)
 W !
"RTN","PXRMDEDT",275,0)
 S IC=0
"RTN","PXRMDEDT",276,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMDEDT",277,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMDEDT",278,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDT",279,0)
 W !
"RTN","PXRMDEDT",280,0)
 Q
"RTN","PXRMDEDT",281,0)
 ;
"RTN","PXRMDEDT",282,0)
LOCK(DA) ;Lock the record
"RTN","PXRMDEDT",283,0)
 N OK
"RTN","PXRMDEDT",284,0)
 S OK=1
"RTN","PXRMDEDT",285,0)
 I '$$VEDIT^PXRMUTIL("^PXRMD(801.41,",DA) D
"RTN","PXRMDEDT",286,0)
 .N DTYP
"RTN","PXRMDEDT",287,0)
 .S DTYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",288,0)
 .;Allow edit of findings but not component multiple on groups 
"RTN","PXRMDEDT",289,0)
 .I DTYP="G",$G(PXRMDIEN),DA'=PXRMDIEN Q
"RTN","PXRMDEDT",290,0)
 .;Allow edit of element findings
"RTN","PXRMDEDT",291,0)
 .I DTYP="E" Q
"RTN","PXRMDEDT",292,0)
 .S OK=0
"RTN","PXRMDEDT",293,0)
 .W !!,?5,"VA- and national class reminder dialogs may not be edited" H 2
"RTN","PXRMDEDT",294,0)
 I 'OK Q 0
"RTN","PXRMDEDT",295,0)
 ;
"RTN","PXRMDEDT",296,0)
 L +^PXRMD(801.41,DA):0 I  Q 1
"RTN","PXRMDEDT",297,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2 Q 0
"RTN","PXRMDEDT",298,0)
 ;
"RTN","PXRMDEDT",299,0)
 ;
"RTN","PXRMDEDT",300,0)
UNLOCK(DA) ;Unlock the record
"RTN","PXRMDEDT",301,0)
 L -^PXRMD(801.41,DA)
"RTN","PXRMDEDT",302,0)
 Q
"RTN","PXRMDEDX")
0^20^B13934520
"RTN","PXRMDEDX",1,0)
PXRMDEDX ;SLC/PJH - Delete dialog components ;12/12/2001
"RTN","PXRMDEDX",2,0)
 ;;1.5;CLINICAL REMINDERS;**7**;Jun 19, 2000
"RTN","PXRMDEDX",3,0)
 ;
"RTN","PXRMDEDX",4,0)
 ;=====================================================================
"RTN","PXRMDEDX",5,0)
 ;
"RTN","PXRMDEDX",6,0)
 ;Yes/No Prompts
"RTN","PXRMDEDX",7,0)
 ;--------------
"RTN","PXRMDEDX",8,0)
ASK(YESNO,TEXT,HELP) ;
"RTN","PXRMDEDX",9,0)
 W !
"RTN","PXRMDEDX",10,0)
 N DIR,X,Y
"RTN","PXRMDEDX",11,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDEDX",12,0)
 S DIR(0)="YA0"
"RTN","PXRMDEDX",13,0)
 M DIR("A")=TEXT
"RTN","PXRMDEDX",14,0)
 S DIR("B")="Y"
"RTN","PXRMDEDX",15,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMDEDX",16,0)
 S DIR("??")=U_"D HLP^PXRMDEDX(HELP)"
"RTN","PXRMDEDX",17,0)
 D ^DIR K DIR
"RTN","PXRMDEDX",18,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDEDX",19,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDEDX",20,0)
 S YESNO=$E(Y(0))
"RTN","PXRMDEDX",21,0)
 Q
"RTN","PXRMDEDX",22,0)
 ;
"RTN","PXRMDEDX",23,0)
 ;Give option to delete all descendents
"RTN","PXRMDEDX",24,0)
 ;-------------------------------------
"RTN","PXRMDEDX",25,0)
DELETE(COMP) ;
"RTN","PXRMDEDX",26,0)
 N ANS,HLP,DIEN,DNAM,DTYP,IC,TEXT
"RTN","PXRMDEDX",27,0)
 ;Parent name and type
"RTN","PXRMDEDX",28,0)
 S DNAM=$P(COMP(0),U),DTYP=$P(COMP(0),U,2)
"RTN","PXRMDEDX",29,0)
 ;Prompt information
"RTN","PXRMDEDX",30,0)
 I DTYP="R" D
"RTN","PXRMDEDX",31,0)
 .S TEXT(1)="Reminder dialog "_DNAM_" had unused components."
"RTN","PXRMDEDX",32,0)
 .S TEXT="Delete all these components:"
"RTN","PXRMDEDX",33,0)
 I DTYP="G" D
"RTN","PXRMDEDX",34,0)
 .S TEXT(1)="Dialog group "_DNAM_" had unused elements or prompts."
"RTN","PXRMDEDX",35,0)
 .S TEXT="Delete all these components:"
"RTN","PXRMDEDX",36,0)
 I DTYP="E" D
"RTN","PXRMDEDX",37,0)
 .S TEXT(1)="Deleted dialog element "_DNAM_" had unused prompts."
"RTN","PXRMDEDX",38,0)
 .S TEXT="Delete all these components:"
"RTN","PXRMDEDX",39,0)
 ;List component names
"RTN","PXRMDEDX",40,0)
 S IC=2,DIEN=0,TEXT(2)="",HLP=1
"RTN","PXRMDEDX",41,0)
 F  S DIEN=$O(COMP(DIEN)) Q:'DIEN  D  Q:IC>15
"RTN","PXRMDEDX",42,0)
 .S IC=IC+1 I IC>15 S TEXT(IC)="<<more>>" Q
"RTN","PXRMDEDX",43,0)
 .N DTYP
"RTN","PXRMDEDX",44,0)
 .S DTYP=$P(COMP(DIEN),U,2)
"RTN","PXRMDEDX",45,0)
 .S DTYP=$S(DTYP="E":"element",DTYP="G":"group",1:"prompt")
"RTN","PXRMDEDX",46,0)
 .S TEXT(IC)=$P(COMP(DIEN),U)_$J("",5)_DTYP
"RTN","PXRMDEDX",47,0)
 S TEXT(IC+1)=""
"RTN","PXRMDEDX",48,0)
 ;Ask Delete Y/N?
"RTN","PXRMDEDX",49,0)
 D ASK(.ANS,.TEXT,HLP) Q:$G(ANS)'="Y"
"RTN","PXRMDEDX",50,0)
 ;Use DIK to remove all unused components
"RTN","PXRMDEDX",51,0)
 N DA,DIK
"RTN","PXRMDEDX",52,0)
 S DIEN=0
"RTN","PXRMDEDX",53,0)
 ;Scan list of unused components
"RTN","PXRMDEDX",54,0)
 F  S DIEN=$O(COMP(DIEN)) Q:'DIEN  D
"RTN","PXRMDEDX",55,0)
 .;Delete component dialog
"RTN","PXRMDEDX",56,0)
 .S DA=DIEN,DIK="^PXRMD(801.41," D ^DIK
"RTN","PXRMDEDX",57,0)
 Q
"RTN","PXRMDEDX",58,0)
 ;
"RTN","PXRMDEDX",59,0)
 ;Build list of components
"RTN","PXRMDEDX",60,0)
 ;------------------------
"RTN","PXRMDEDX",61,0)
COMP(PXRMDIEN,COMP) ;
"RTN","PXRMDEDX",62,0)
 ;Build list of components
"RTN","PXRMDEDX",63,0)
 D COMPR(PXRMDIEN,.COMP) Q:'$D(COMP)
"RTN","PXRMDEDX",64,0)
 ;Get reminder dialog, group or element name and type
"RTN","PXRMDEDX",65,0)
 N DDATA
"RTN","PXRMDEDX",66,0)
 S DDATA=$G(^PXRMD(801.41,PXRMDIEN,0))
"RTN","PXRMDEDX",67,0)
 ;Save for future use
"RTN","PXRMDEDX",68,0)
 S COMP(0)=$P(DDATA,U)_U_$P(DDATA,U,4)
"RTN","PXRMDEDX",69,0)
 Q
"RTN","PXRMDEDX",70,0)
 ;
"RTN","PXRMDEDX",71,0)
 ;Recursive call
"RTN","PXRMDEDX",72,0)
 ;--------------
"RTN","PXRMDEDX",73,0)
COMPR(PXRMDIEN,COMP) ;
"RTN","PXRMDEDX",74,0)
 N DIEN,DNAME,DNODE,DTYP,PARENT,SUB
"RTN","PXRMDEDX",75,0)
 S DIEN=0,PARENT="LOCAL"
"RTN","PXRMDEDX",76,0)
 ;Check if parent is national
"RTN","PXRMDEDX",77,0)
 I $P($G(^PXRMD(801.41,PXRMDIEN,100)),U)="N" S PARENT="NATIONAL"
"RTN","PXRMDEDX",78,0)
 ;
"RTN","PXRMDEDX",79,0)
 F  S DIEN=$O(^PXRMD(801.41,PXRMDIEN,10,"D",DIEN)) Q:'DIEN  D
"RTN","PXRMDEDX",80,0)
 .;Ignore national components
"RTN","PXRMDEDX",81,0)
 .I $P($G(^PXRMD(801.41,DIEN,100)),U)="N",PARENT'="NATIONAL" Q
"RTN","PXRMDEDX",82,0)
 .;Ignore if in use
"RTN","PXRMDEDX",83,0)
 .I $$USED(DIEN,PXRMDIEN) Q
"RTN","PXRMDEDX",84,0)
 .;Save component dialog type and name
"RTN","PXRMDEDX",85,0)
 .S DNODE=$G(^PXRMD(801.41,DIEN,0)),DNAME=$P(DNODE,U),DTYP=$P(DNODE,U,4)
"RTN","PXRMDEDX",86,0)
 .S COMP(DIEN)=DNAME_U_DTYP
"RTN","PXRMDEDX",87,0)
 .;For groups and element check sub-components
"RTN","PXRMDEDX",88,0)
 .I (DTYP="G")!(DTYP="E") D COMPR(DIEN,.COMP)
"RTN","PXRMDEDX",89,0)
 Q
"RTN","PXRMDEDX",90,0)
 ;
"RTN","PXRMDEDX",91,0)
 ;Check if in use
"RTN","PXRMDEDX",92,0)
 ;---------------
"RTN","PXRMDEDX",93,0)
USED(DIEN,PXRMDIEN) ;
"RTN","PXRMDEDX",94,0)
 N SUB,DINUSE
"RTN","PXRMDEDX",95,0)
 S SUB=0,DINUSE=0
"RTN","PXRMDEDX",96,0)
 F  S SUB=$O(^PXRMD(801.41,"AD",DIEN,SUB)) Q:'SUB  D  Q:DINUSE
"RTN","PXRMDEDX",97,0)
 .;In use by other than parent
"RTN","PXRMDEDX",98,0)
 .I SUB'=PXRMDIEN S DINUSE=1
"RTN","PXRMDEDX",99,0)
 Q DINUSE
"RTN","PXRMDEDX",100,0)
 ;
"RTN","PXRMDEDX",101,0)
 ;General help text routine.
"RTN","PXRMDEDX",102,0)
 ;--------------------------
"RTN","PXRMDEDX",103,0)
HLP(CALL) ;
"RTN","PXRMDEDX",104,0)
 N HTEXT
"RTN","PXRMDEDX",105,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDEDX",106,0)
 S DIWF="C75",DIWL=0,DIWR=75
"RTN","PXRMDEDX",107,0)
 ;
"RTN","PXRMDEDX",108,0)
 I CALL=1 D
"RTN","PXRMDEDX",109,0)
 .S HTEXT(1)="Enter 'Yes' to DELETE all sub-components listed above"
"RTN","PXRMDEDX",110,0)
 .S HTEXT(2)="or enter 'No' to quit."
"RTN","PXRMDEDX",111,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDX",112,0)
 S IC=""
"RTN","PXRMDEDX",113,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMDEDX",114,0)
 . S X=HTEXT(IC)
"RTN","PXRMDEDX",115,0)
 . D ^DIWP
"RTN","PXRMDEDX",116,0)
 W !
"RTN","PXRMDEDX",117,0)
 S IC=0
"RTN","PXRMDEDX",118,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMDEDX",119,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMDEDX",120,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDX",121,0)
 W !
"RTN","PXRMDEDX",122,0)
 Q
"RTN","PXRMDLLA")
0^1^B92794941
"RTN","PXRMDLLA",1,0)
PXRMDLLA ;SLC/PJH - REMINDER DIALOG LOADER ;08/24/2001
"RTN","PXRMDLLA",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5,7**;Jun 19, 2000
"RTN","PXRMDLLA",3,0)
 ;
"RTN","PXRMDLLA",4,0)
CODE(DFIEN,DFTYP) ;
"RTN","PXRMDLLA",5,0)
 Q:DFIEN="" ""
"RTN","PXRMDLLA",6,0)
 Q:DFTYP["ICD9" $P($G(^ICD9(DFIEN,0)),U)
"RTN","PXRMDLLA",7,0)
 Q:DFTYP["ICPT" $P($$CPT^ICPTCOD(DFIEN),U,2)
"RTN","PXRMDLLA",8,0)
 Q ""
"RTN","PXRMDLLA",9,0)
 ;
"RTN","PXRMDLLA",10,0)
CODES(FILE,TXIEN,ARRAY) ;Return list of selectable codes from taxonomy file
"RTN","PXRMDLLA",11,0)
 N CNT,CODE,DATA,IEN,TEMP,TEXT,NODE,SUB
"RTN","PXRMDLLA",12,0)
 S SUB=0,CNT=0,NODE=$S(FILE=80:"SDX",FILE=81:"SPR")
"RTN","PXRMDLLA",13,0)
 F  S SUB=$O(^PXD(811.2,TXIEN,NODE,SUB)) Q:'SUB  D
"RTN","PXRMDLLA",14,0)
 .S DATA=$G(^PXD(811.2,TXIEN,NODE,SUB,0)) Q:DATA=""
"RTN","PXRMDLLA",15,0)
 .;Ignore if disabled
"RTN","PXRMDLLA",16,0)
 .I $P(DATA,U,3)=1 Q
"RTN","PXRMDLLA",17,0)
 .;Get ien of code
"RTN","PXRMDLLA",18,0)
 .S IEN=$P(DATA,U) Q:IEN=""
"RTN","PXRMDLLA",19,0)
 .;Translate ien to code
"RTN","PXRMDLLA",20,0)
 .I FILE=80 S CODE=$P($G(^ICD9(IEN,0)),U)
"RTN","PXRMDLLA",21,0)
 .I FILE=81 S CODE=$P($$CPT^ICPTCOD(IEN),U,2)
"RTN","PXRMDLLA",22,0)
 .;Ignore invalid codes
"RTN","PXRMDLLA",23,0)
 .S TEMP=$$CODE^PXRMVAL(CODE,FILE) Q:'$P(TEMP,U)  Q:$P(TEMP,U,9)=1
"RTN","PXRMDLLA",24,0)
 .;Set display text from taxonomy selectable code text
"RTN","PXRMDLLA",25,0)
 .S TEXT=$P(DATA,U,2)
"RTN","PXRMDLLA",26,0)
 .;otherwise use icd9/cpt description
"RTN","PXRMDLLA",27,0)
 .I TEXT="",FILE=80 S TEXT=$G(^ICD9(IEN,1))
"RTN","PXRMDLLA",28,0)
 .I TEXT="",FILE=80 S TEXT=$P($G(^ICD9(IEN,0)),U,3)
"RTN","PXRMDLLA",29,0)
 .I TEXT="",FILE=81 S TEXT=$P($$CPT^ICPTCOD(IEN),U,3)
"RTN","PXRMDLLA",30,0)
 .S CNT=CNT+1,ARRAY(CNT)=IEN_U_CODE_U_TEXT
"RTN","PXRMDLLA",31,0)
 Q
"RTN","PXRMDLLA",32,0)
 ;
"RTN","PXRMDLLA",33,0)
EXP(TIEN,DCUR,DTTYP) ;Expand taxonomy codes
"RTN","PXRMDLLA",34,0)
 N CODES,CNT,FILE,LIT,CAT
"RTN","PXRMDLLA",35,0)
 S FILE=$S(DTTYP="POV":80,DTTYP="CPT":81,1:"") Q:'FILE
"RTN","PXRMDLLA",36,0)
 S LIT="Selectable "_$S(FILE=80:"Diagnoses:",1:"Procedures:")
"RTN","PXRMDLLA",37,0)
 S CAT=$P($G(^PXD(811.2,TIEN,0)),U)
"RTN","PXRMDLLA",38,0)
 ;
"RTN","PXRMDLLA",39,0)
 S OCNT=OCNT+1
"RTN","PXRMDLLA",40,0)
 S ORY(OCNT)=3_U_DITEM_U_U_DTTYP_U_U_U_U_U_CAT_U_LIT
"RTN","PXRMDLLA",41,0)
 ;Get selectable codes
"RTN","PXRMDLLA",42,0)
 D CODES(FILE,TIEN,.CODES)
"RTN","PXRMDLLA",43,0)
 S CNT=0
"RTN","PXRMDLLA",44,0)
 ;Save selectable codes as type 5 records
"RTN","PXRMDLLA",45,0)
 F  S CNT=$O(CODES(CNT)) Q:'CNT  D
"RTN","PXRMDLLA",46,0)
 .S OCNT=OCNT+1,ORY(OCNT)=5_U_DITEM_U_U_DTTYP_U_U_CODES(CNT)
"RTN","PXRMDLLA",47,0)
 Q
"RTN","PXRMDLLA",48,0)
 ;
"RTN","PXRMDLLA",49,0)
FREC(DFIEN,DFTYP) ;Build type 3 record
"RTN","PXRMDLLA",50,0)
 ;Dialog type/text and resolution  
"RTN","PXRMDLLA",51,0)
 S DNAM=$$NAME(DFIEN,DFTYP),DCOD=$$CODE(DFIEN,DFTYP)
"RTN","PXRMDLLA",52,0)
 ;Translate vitals ien to PCE code - This will need a DBIA
"RTN","PXRMDLLA",53,0)
 I DPCE="VIT" D
"RTN","PXRMDLLA",54,0)
 .S DFIEN=$$GET1^DIQ(120.51,DFIEN,7,"E")
"RTN","PXRMDLLA",55,0)
 .;Vitals Caption
"RTN","PXRMDLLA",56,0)
 .S DVIT=$P($G(^PXRMD(801.41,DITEM,2)),U,4)
"RTN","PXRMDLLA",57,0)
 I DFTYP]"" D
"RTN","PXRMDLLA",58,0)
 .S OCNT=OCNT+1
"RTN","PXRMDLLA",59,0)
 .S ORY(OCNT)=3_U_DITEM_U_U_DPCE_U_DEXC_U_DFIEN_U_DCOD_U_DNAM_U_U_DVIT
"RTN","PXRMDLLA",60,0)
 .;Get order type for orderable items
"RTN","PXRMDLLA",61,0)
 .S:DPCE="Q" $P(ORY(OCNT),U,11)=$P($G(^ORD(101.41,DFIEN,0)),U,4)
"RTN","PXRMDLLA",62,0)
 .;If mental health check if a GAF score
"RTN","PXRMDLLA",63,0)
 .I DPCE="MH",DFIEN D
"RTN","PXRMDLLA",64,0)
 ..I $P($G(^YTT(601,DFIEN,0)),U)="GAF" S $P(ORY(OCNT),U,12)=1
"RTN","PXRMDLLA",65,0)
 Q
"RTN","PXRMDLLA",66,0)
 ;
"RTN","PXRMDLLA",67,0)
GUI(IEN) ;Work out prompt type for PCE
"RTN","PXRMDLLA",68,0)
 Q:IEN="" ""
"RTN","PXRMDLLA",69,0)
 N SUB S SUB=$P($G(^PXRMD(801.41,IEN,46)),U)
"RTN","PXRMDLLA",70,0)
 Q:'SUB ""
"RTN","PXRMDLLA",71,0)
 Q $P($G(^PXRMD(801.42,SUB,0)),U)
"RTN","PXRMDLLA",72,0)
 ;
"RTN","PXRMDLLA",73,0)
LOAD(DITEM,DCUR,DTTYP) ;Load dialog questions into array
"RTN","PXRMDLLA",74,0)
 N DARRAY,DCOD,DEXC,DFIND,DFIEN,DFTYP,DNAM,DPCE,DRES,DSEQ,DSUB,DTYP,OCNT
"RTN","PXRMDLLA",75,0)
 N DVIT
"RTN","PXRMDLLA",76,0)
 ;
"RTN","PXRMDLLA",77,0)
 ;Build list of PCE codes
"RTN","PXRMDLLA",78,0)
 S DARRAY("AUTTEDT(")="PED"
"RTN","PXRMDLLA",79,0)
 S DARRAY("AUTTEXAM(")="XAM"
"RTN","PXRMDLLA",80,0)
 S DARRAY("AUTTHF(")="HF"
"RTN","PXRMDLLA",81,0)
 S DARRAY("AUTTIMM(")="IMM"
"RTN","PXRMDLLA",82,0)
 S DARRAY("AUTTSK(")="SK"
"RTN","PXRMDLLA",83,0)
 ;
"RTN","PXRMDLLA",84,0)
 S DARRAY("GMRD(120.51,")="VIT"
"RTN","PXRMDLLA",85,0)
 S DARRAY("ORD(101.41,")="Q"
"RTN","PXRMDLLA",86,0)
 S DARRAY("YTT(601,")="MH"
"RTN","PXRMDLLA",87,0)
 ;
"RTN","PXRMDLLA",88,0)
 S DARRAY("ICD9(")="POV"
"RTN","PXRMDLLA",89,0)
 S DARRAY("ICPT(")="CPT"
"RTN","PXRMDLLA",90,0)
 ;
"RTN","PXRMDLLA",91,0)
 S DARRAY("PXD(811.2,")="T" ;dialog cpt/pov is generated from taxonomy
"RTN","PXRMDLLA",92,0)
 ;
"RTN","PXRMDLLA",93,0)
 ;Get the dialog element
"RTN","PXRMDLLA",94,0)
 S OCNT=0,DTYP=$P($G(^PXRMD(801.41,DITEM,0)),U,4)
"RTN","PXRMDLLA",95,0)
 ;Finding detail
"RTN","PXRMDLLA",96,0)
 S DRES=$P($G(^PXRMD(801.41,DITEM,1)),U,3)
"RTN","PXRMDLLA",97,0)
 S DFIND=$P($G(^PXRMD(801.41,DITEM,1)),U,5)
"RTN","PXRMDLLA",98,0)
 S DFIEN=$P(DFIND,";"),DFTYP=$P(DFIND,";",2)
"RTN","PXRMDLLA",99,0)
 S DPCE="",DVIT="" I DFTYP'="" S DPCE=$G(DARRAY(DFTYP))
"RTN","PXRMDLLA",100,0)
 ;Exclude from P/N
"RTN","PXRMDLLA",101,0)
 S DEXC=$P($G(^PXRMD(801.41,DITEM,2)),U,3)
"RTN","PXRMDLLA",102,0)
 ;
"RTN","PXRMDLLA",103,0)
 ;Non taxonomy codes (3 - finding record)
"RTN","PXRMDLLA",104,0)
 I DPCE'="T" D FREC(DFIEN,DFTYP)
"RTN","PXRMDLLA",105,0)
 ;
"RTN","PXRMDLLA",106,0)
 ;Taxonomy codes need expanding (3 - finding record)
"RTN","PXRMDLLA",107,0)
 I DPCE="T" D EXP(DFIEN,DCUR,DTTYP)
"RTN","PXRMDLLA",108,0)
 ;
"RTN","PXRMDLLA",109,0)
 ;Prompt details (4 - prompt records)
"RTN","PXRMDLLA",110,0)
 N ARRAY,DTITLE,DREQ,DSEQ,DSSEQ,DSUB,DTYP
"RTN","PXRMDLLA",111,0)
 ;If not a taxonomy get prompts from dialog file
"RTN","PXRMDLLA",112,0)
 I DPCE'="T" D PROTH(DITEM)
"RTN","PXRMDLLA",113,0)
 ;Ceck for MST findings
"RTN","PXRMDLLA",114,0)
 I (DPCE'="T"),(DFTYP]"") D MST(DFTYP,DFIEN)
"RTN","PXRMDLLA",115,0)
 ;If a taxonomy get details from general finding parameters (CPT/POV)
"RTN","PXRMDLLA",116,0)
 I DPCE="T" D
"RTN","PXRMDLLA",117,0)
 .;Quit if finding type not passed
"RTN","PXRMDLLA",118,0)
 .Q:DTTYP=""
"RTN","PXRMDLLA",119,0)
 .N RSUB,FNODE
"RTN","PXRMDLLA",120,0)
 .;Get parameter file node for this finding type
"RTN","PXRMDLLA",121,0)
 .S FNODE=$O(^PXRMD(801.45,"B",DTTYP,"")) Q:FNODE=""
"RTN","PXRMDLLA",122,0)
 .;Derive resolution from line ien 1=done 2=done elsewhere
"RTN","PXRMDLLA",123,0)
 .S RSUB=DCUR+1 I (RSUB<1)!(RSUB>2) Q
"RTN","PXRMDLLA",124,0)
 .;Get details from 811.5
"RTN","PXRMDLLA",125,0)
 .D PRTAX(FNODE,RSUB)
"RTN","PXRMDLLA",126,0)
 ;Return array of type 4 records
"RTN","PXRMDLLA",127,0)
 S DSEQ=""
"RTN","PXRMDLLA",128,0)
 F  S DSEQ=$O(ARRAY(DSEQ)) Q:'DSEQ  D
"RTN","PXRMDLLA",129,0)
 .S OCNT=OCNT+1
"RTN","PXRMDLLA",130,0)
 .S ORY(OCNT)=4_U_DITEM_U_DSEQ_U_ARRAY(DSEQ)
"RTN","PXRMDLLA",131,0)
 .S DSSEQ=""
"RTN","PXRMDLLA",132,0)
 .F  S DSSEQ=$O(ARRAY(DSEQ,DSSEQ)) Q:'DSSEQ  D
"RTN","PXRMDLLA",133,0)
 ..S OCNT=OCNT+1
"RTN","PXRMDLLA",134,0)
 ..S ORY(OCNT)=4_U_DITEM_U_DSEQ_"."_DSSEQ_U_ARRAY(DSEQ,DSSEQ)
"RTN","PXRMDLLA",135,0)
 ;
"RTN","PXRMDLLA",136,0)
 ;Get progress note text if defined
"RTN","PXRMDLLA",137,0)
 I DPCE'="T" D:'DEXC PTXT(DITEM)
"RTN","PXRMDLLA",138,0)
 ;Additional findings
"RTN","PXRMDLLA",139,0)
 N FASUB
"RTN","PXRMDLLA",140,0)
 S FASUB=0
"RTN","PXRMDLLA",141,0)
 F  S FASUB=$O(^PXRMD(801.41,DITEM,3,FASUB)) Q:'FASUB  D
"RTN","PXRMDLLA",142,0)
 .S DFIND=$P($G(^PXRMD(801.41,DITEM,3,FASUB,0)),U)
"RTN","PXRMDLLA",143,0)
 .S DFIEN=$P(DFIND,";"),DFTYP=$P(DFIND,";",2) Q:DFTYP=""  Q:DFIEN=""
"RTN","PXRMDLLA",144,0)
 .S DVIT="",DPCE=$G(DARRAY(DFTYP))
"RTN","PXRMDLLA",145,0)
 .I DPCE'="" D FREC(DFIEN,DFTYP)
"RTN","PXRMDLLA",146,0)
 Q
"RTN","PXRMDLLA",147,0)
 ;
"RTN","PXRMDLLA",148,0)
 ;Pass MST code as a forced value
"RTN","PXRMDLLA",149,0)
MST(DFTYP,DFIEN) ;
"RTN","PXRMDLLA",150,0)
 ;Validate finding ien
"RTN","PXRMDLLA",151,0)
 Q:DFIEN=""
"RTN","PXRMDLLA",152,0)
 ;For each MST term check if finding is mapped
"RTN","PXRMDLLA",153,0)
 N FOUND,TCOND,TIEN,TNAM,TSUB
"RTN","PXRMDLLA",154,0)
 S FOUND=0
"RTN","PXRMDLLA",155,0)
 F TNAM="POSITIVE","NEGATIVE","DECLINES" D  Q:FOUND
"RTN","PXRMDLLA",156,0)
 .;Get term IEN
"RTN","PXRMDLLA",157,0)
 .S TIEN=$O(^PXRMD(811.5,"B","MST "_TNAM_" REPORT","")) Q:'TIEN
"RTN","PXRMDLLA",158,0)
 .;Check if finding is mapped to term
"RTN","PXRMDLLA",159,0)
 .Q:'$D(^PXRMD(811.5,TIEN,20,"E",DFTYP,DFIEN))
"RTN","PXRMDLLA",160,0)
 .;If exam and term condition logic is null ignore
"RTN","PXRMDLLA",161,0)
 .I DFTYP="AUTTEXAM(" D  Q:TCOND=""
"RTN","PXRMDLLA",162,0)
 ..S TCOND="",TSUB=$O(^PXRMD(811.5,TIEN,20,"E",DFTYP,DFIEN,"")) Q:'TSUB
"RTN","PXRMDLLA",163,0)
 ..S TCOND=$P($G(^PXRMD(811.5,TIEN,20,TSUB,3)),U)
"RTN","PXRMDLLA",164,0)
 .;If it is then create additional prompt for MST
"RTN","PXRMDLLA",165,0)
 .N DSEQ,DEXC,DDEF,DGUI,DTYP,DTEXT,DSNL,DREQ
"RTN","PXRMDLLA",166,0)
 .;Add to end of array
"RTN","PXRMDLLA",167,0)
 .S DSEQ=$O(ARRAY(""),-1)+1
"RTN","PXRMDLLA",168,0)
 .;Null fields
"RTN","PXRMDLLA",169,0)
 .S DDEF="",DEXC="",DTEXT="",DSNL="",DREQ=""
"RTN","PXRMDLLA",170,0)
 .;MST status (exept for exams)
"RTN","PXRMDLLA",171,0)
 .I DFTYP'="AUTTEXAM(" S DDEF=$$STCODE^PXRMMST("MST "_TNAM_" REPORT")
"RTN","PXRMDLLA",172,0)
 .;GUI process and forced value
"RTN","PXRMDLLA",173,0)
 .S DGUI="MST",DTYP="F"
"RTN","PXRMDLLA",174,0)
 .;Save in array
"RTN","PXRMDLLA",175,0)
 .S ARRAY(DSEQ)=DGUI_U_DEXC_U_DDEF_U_DTYP_U_DTEXT_U_DSNL_U_DREQ
"RTN","PXRMDLLA",176,0)
 .;Quit after the first term is found
"RTN","PXRMDLLA",177,0)
 .S FOUND=1
"RTN","PXRMDLLA",178,0)
 Q
"RTN","PXRMDLLA",179,0)
 ;
"RTN","PXRMDLLA",180,0)
 ;Returns item name
"RTN","PXRMDLLA",181,0)
NAME(DFIEN,DFTYP) ;
"RTN","PXRMDLLA",182,0)
 Q:DFTYP="" ""
"RTN","PXRMDLLA",183,0)
 Q:DFIEN="" ""
"RTN","PXRMDLLA",184,0)
 N NAME,FGLOB,POSN
"RTN","PXRMDLLA",185,0)
 I DFTYP["ICD9" S NAME=$P($G(^ICD9(DFIEN,1)),U) Q:NAME]"" NAME
"RTN","PXRMDLLA",186,0)
 S POSN=2
"RTN","PXRMDLLA",187,0)
 S:DFTYP["AUTT" POSN=1 S:DFTYP["AUTTEDT" POSN=4 S:DFTYP["ICD" POSN=3
"RTN","PXRMDLLA",188,0)
 S FGLOB=U_DFTYP_DFIEN_",0)",NAME=$P($G(@FGLOB),U,POSN)
"RTN","PXRMDLLA",189,0)
 I (POSN>1),NAME="" S NAME=$P($G(@FGLOB),U)
"RTN","PXRMDLLA",190,0)
 I NAME="" S NAME=DFIEN
"RTN","PXRMDLLA",191,0)
 Q NAME
"RTN","PXRMDLLA",192,0)
 ;
"RTN","PXRMDLLA",193,0)
PROTH(IEN) ; Additional prompts defined in 801.41
"RTN","PXRMDLLA",194,0)
 N DDATA,DDEF,DIEN,DEXC,DGUI,DNAME,DOVR,DREQ,DSEQ,DSNL,DSUB,DTXT,DTYP
"RTN","PXRMDLLA",195,0)
 S DSEQ=0
"RTN","PXRMDLLA",196,0)
 F  S DSEQ=$O(^PXRMD(801.41,IEN,10,"B",DSEQ)) Q:'DSEQ  D
"RTN","PXRMDLLA",197,0)
 .;Get prompts in sequence
"RTN","PXRMDLLA",198,0)
 .S DSUB=$O(^PXRMD(801.41,IEN,10,"B",DSEQ,"")) Q:'DSUB
"RTN","PXRMDLLA",199,0)
 .;Prompt ien
"RTN","PXRMDLLA",200,0)
 .S DIEN=$P($G(^PXRMD(801.41,IEN,10,DSUB,0)),U,2) Q:'DIEN
"RTN","PXRMDLLA",201,0)
 .;Ignore disabled components, and those that are not prompts
"RTN","PXRMDLLA",202,0)
 .Q:($P($G(^PXRMD(801.41,DIEN,0)),U,3)]"")!("PF"'[$P($G(^(0)),U,4))
"RTN","PXRMDLLA",203,0)
 .;Set defaults to null
"RTN","PXRMDLLA",204,0)
 .S DDEF="",DEXC="",DREQ="",DSNL=""
"RTN","PXRMDLLA",205,0)
 .;Prompt name and GUI process (quit if null)
"RTN","PXRMDLLA",206,0)
 .S DNAME=$P($G(^PXRMD(801.41,DIEN,0)),U),DGUI=$$GUI(DIEN)
"RTN","PXRMDLLA",207,0)
 .;Type Prompt or Forced
"RTN","PXRMDLLA",208,0)
 .S DTYP=$P($G(^PXRMD(801.41,DIEN,0)),U,4)
"RTN","PXRMDLLA",209,0)
 .I "PF"[DTYP D
"RTN","PXRMDLLA",210,0)
 ..;Required/Prompt caption
"RTN","PXRMDLLA",211,0)
 ..S DDATA=$G(^PXRMD(801.41,DIEN,2)),DTXT=$P(DDATA,U,4)
"RTN","PXRMDLLA",212,0)
 ..;Default value or forced value
"RTN","PXRMDLLA",213,0)
 ..S:DTYP="P" DDEF=$P(DDATA,U) S:DTYP="F" DDEF=$P(DDATA,U,2)
"RTN","PXRMDLLA",214,0)
 ..;Override caption/start new line/exclude PN from dialog file
"RTN","PXRMDLLA",215,0)
 ..S DDATA=$G(^PXRMD(801.41,IEN,10,DSUB,0)),DREQ=$P(DDATA,U,9)
"RTN","PXRMDLLA",216,0)
 ..S DOVR=$P(DDATA,U,6),DSNL=$P(DDATA,U,7),DEXC=$P(DDATA,U,8)
"RTN","PXRMDLLA",217,0)
 ..S DNAME=DTXT I DOVR]"" S DNAME=DOVR
"RTN","PXRMDLLA",218,0)
 ..;Convert date to fileman format
"RTN","PXRMDLLA",219,0)
 ..I DGUI="VST_DATE",DDEF["T" S DDEF=$$DT^XLFDT()
"RTN","PXRMDLLA",220,0)
 .S ARRAY(DSEQ)=DGUI_U_DEXC_U_DDEF_U_DTYP_U_DNAME_U_DSNL_U_DREQ
"RTN","PXRMDLLA",221,0)
 .;Additional checkboxes
"RTN","PXRMDLLA",222,0)
 .I DGUI="COM",DIEN>1 D
"RTN","PXRMDLLA",223,0)
 ..N DSSEQ,DSUB,DTEXT
"RTN","PXRMDLLA",224,0)
 ..S DSSEQ=0
"RTN","PXRMDLLA",225,0)
 ..F  S DSSEQ=$O(^PXRMD(801.41,DIEN,45,"B",DSSEQ)) Q:'DSSEQ  D
"RTN","PXRMDLLA",226,0)
 ...S DSUB=$O(^PXRMD(801.41,DIEN,45,"B",DSSEQ,"")) Q:'DSUB
"RTN","PXRMDLLA",227,0)
 ...S DTEXT=$P($G(^PXRMD(801.41,DIEN,45,DSUB,0)),U,2) Q:DTEXT=""
"RTN","PXRMDLLA",228,0)
 ...S ARRAY(DSEQ,DSSEQ)=U_DEXC_U_DDEF_U_DTYP_U_DTEXT_U_DSNL_U_DREQ
"RTN","PXRMDLLA",229,0)
 Q
"RTN","PXRMDLLA",230,0)
 ;
"RTN","PXRMDLLA",231,0)
PRTAX(FNODE,RSUB) ;Get all additional fields for this resolution type
"RTN","PXRMDLLA",232,0)
 N ACNT,ASUB
"RTN","PXRMDLLA",233,0)
 N DDATA,DDEF,DEXC,DGUI,DNAME,DREQ,DSEQ,DSUB,DTYP
"RTN","PXRMDLLA",234,0)
 S ASUB=0,DSEQ=0
"RTN","PXRMDLLA",235,0)
 F  S ASUB=$O(^PXRMD(801.45,FNODE,1,RSUB,5,ASUB)) Q:'ASUB  D
"RTN","PXRMDLLA",236,0)
 .S DDATA=$G(^PXRMD(801.45,FNODE,1,RSUB,5,ASUB,0)) Q:DDATA=""
"RTN","PXRMDLLA",237,0)
 .;Ignore if disabled
"RTN","PXRMDLLA",238,0)
 .I $P(DDATA,U,3)=1 Q
"RTN","PXRMDLLA",239,0)
 .S DSUB=$P(DDATA,U) Q:DDATA=""
"RTN","PXRMDLLA",240,0)
 .S DSEQ=DSEQ+1
"RTN","PXRMDLLA",241,0)
 .;Set defaults to null
"RTN","PXRMDLLA",242,0)
 .S DDEF="",DEXC="",DREQ="",DSNL=""
"RTN","PXRMDLLA",243,0)
 .;Prompt name and GUI process (quit if null)
"RTN","PXRMDLLA",244,0)
 .S DNAME=$P($G(^PXRMD(801.41,DSUB,0)),U),DGUI=$$GUI(DSUB)
"RTN","PXRMDLLA",245,0)
 .;Type Prompt or Forced
"RTN","PXRMDLLA",246,0)
 .S DTYP=$P($G(^PXRMD(801.41,DSUB,0)),U,4)
"RTN","PXRMDLLA",247,0)
 .I DTYP="P" D
"RTN","PXRMDLLA",248,0)
 ..S DREQ=$P(DDATA,U,2),DTXT=$P($G(^PXRMD(801.41,DSUB,2)),U,4)
"RTN","PXRMDLLA",249,0)
 ..;Override caption/start new line/exclude from PN from finding type 
"RTN","PXRMDLLA",250,0)
 ..S DOVR=$P(DDATA,U,5),DSNL=$P(DDATA,U,6),DEXC=$P(DDATA,U,7)
"RTN","PXRMDLLA",251,0)
 ..S DNAME=DTXT I DOVR]"" S DNAME=DOVR
"RTN","PXRMDLLA",252,0)
 ..;Required/Prompt caption
"RTN","PXRMDLLA",253,0)
 ..S DDATA=$G(^PXRMD(801.41,DSUB,2))
"RTN","PXRMDLLA",254,0)
 .S ARRAY(DSEQ)=DGUI_U_DEXC_U_DDEF_U_DTYP_U_DNAME_U_DSNL_U_DREQ
"RTN","PXRMDLLA",255,0)
 Q
"RTN","PXRMDLLA",256,0)
 ;
"RTN","PXRMDLLA",257,0)
PTXT(ITEM) ;Get progress note (WP) text for type 6 records
"RTN","PXRMDLLA",258,0)
 N LAST,NULL,SUB,TEXT S SUB=0,LAST=0
"RTN","PXRMDLLA",259,0)
 F  S SUB=$O(^PXRMD(801.41,ITEM,35,SUB)) Q:'SUB  D
"RTN","PXRMDLLA",260,0)
 .S TEXT=$G(^PXRMD(801.41,ITEM,35,SUB,0))
"RTN","PXRMDLLA",261,0)
 .S NULL=0 I (TEXT="")!($E(TEXT)=" ") S NULL=1
"RTN","PXRMDLLA",262,0)
 .I LAST,'NULL S TEXT="<br>"_TEXT
"RTN","PXRMDLLA",263,0)
 .S LAST=0 I NULL S TEXT="<br>"_TEXT,LAST=1
"RTN","PXRMDLLA",264,0)
 .S OCNT=OCNT+1,ORY(OCNT)=6_U_ITEM_U_U_TEXT
"RTN","PXRMDLLA",265,0)
 Q
"RTN","PXRMDLLA",266,0)
 ;
"RTN","PXRMDLLA",267,0)
TOK(TIEN,TYPE) ;Check if selectable codes exist
"RTN","PXRMDLLA",268,0)
 N DATA,FOUND,SUB
"RTN","PXRMDLLA",269,0)
 S FOUND=0,SUB=0
"RTN","PXRMDLLA",270,0)
 F  S SUB=$O(^PXD(811.2,TIEN,TYPE,SUB)) Q:'SUB  D  Q:FOUND
"RTN","PXRMDLLA",271,0)
 .S DATA=$G(^PXD(811.2,TIEN,TYPE,SUB,0)) Q:DATA=""
"RTN","PXRMDLLA",272,0)
 .;Ignore disabled codes
"RTN","PXRMDLLA",273,0)
 .I '$P(DATA,U,3) S FOUND=1
"RTN","PXRMDLLA",274,0)
 Q FOUND
"RTN","PXRMDLLA",275,0)
 ;
"RTN","PXRMDLLA",276,0)
TEST(ORY,DITEM,DCUR,DTTYP) ;
"RTN","PXRMDLLA",277,0)
 D LOAD(DITEM,DCUR,DTTYP)
"RTN","PXRMDLLA",278,0)
 Q
"RTN","PXRMEDU")
0^7^B20630711
"RTN","PXRMEDU",1,0)
PXRMEDU ; SLC/PKR - Handle education findings. ;08/29/2001
"RTN","PXRMEDU",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,7**;Jun 19, 2000
"RTN","PXRMEDU",3,0)
 ;
"RTN","PXRMEDU",4,0)
 ;=======================================================================
"RTN","PXRMEDU",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate education findings.
"RTN","PXRMEDU",6,0)
 N EDUIEN,FIND0,FIND3,FINDING,INVDATE
"RTN","PXRMEDU",7,0)
 S EDUIEN=""
"RTN","PXRMEDU",8,0)
 F  S EDUIEN=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTEDT(",EDUIEN)) Q:+EDUIEN=0  D
"RTN","PXRMEDU",9,0)
 . S INVDATE=$O(^AUPNVPED("AA",DFN,EDUIEN,""))
"RTN","PXRMEDU",10,0)
 . S FINDING=""
"RTN","PXRMEDU",11,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTEDT(",EDUIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMEDU",12,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMEDU",13,0)
 .. S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMEDU",14,0)
 .. D FIEVAL(DFN,EDUIEN,INVDATE,FIND0,FIND3,"","",FINDING,.FIEVAL)
"RTN","PXRMEDU",15,0)
 Q
"RTN","PXRMEDU",16,0)
 ;
"RTN","PXRMEDU",17,0)
 ;=======================================================================
"RTN","PXRMEDU",18,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate education terms.
"RTN","PXRMEDU",19,0)
 N EDUIEN,FIND0,FIND3,INVDATE,TFIND0,TFIND3,TFINDING
"RTN","PXRMEDU",20,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMEDU",21,0)
 S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMEDU",22,0)
 S EDUIEN=""
"RTN","PXRMEDU",23,0)
 F  S EDUIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTEDT(",EDUIEN)) Q:+EDUIEN=0  D
"RTN","PXRMEDU",24,0)
 . S INVDATE=$O(^AUPNVPED("AA",DFN,EDUIEN,""))
"RTN","PXRMEDU",25,0)
 . S TFINDING=""
"RTN","PXRMEDU",26,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTEDT(",EDUIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMEDU",27,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMEDU",28,0)
 .. S TFIND3=$G(^PXRMD(811.5,TERMIEN,20,TFINDING,3))
"RTN","PXRMEDU",29,0)
 .. D FIEVAL(DFN,EDUIEN,INVDATE,FIND0,FIND3,TFIND0,TFIND3,TFINDING,.TFIEVAL)
"RTN","PXRMEDU",30,0)
 Q
"RTN","PXRMEDU",31,0)
 ;
"RTN","PXRMEDU",32,0)
 ;=======================================================================
"RTN","PXRMEDU",33,0)
FIEVAL(DFN,EDUIEN,INVDATE,FIND0,FIND3,TFIND0,TFIND3,FINDING,FIEVAL) ;
"RTN","PXRMEDU",34,0)
 N CONVAL,DATE,IEN,IND,LOU,TEMP,VALID,VIEN
"RTN","PXRMEDU",35,0)
 I INVDATE="" S FIEVAL(FINDING)=0 Q
"RTN","PXRMEDU",36,0)
 S IEN=$O(^AUPNVPED("AA",DFN,EDUIEN,INVDATE,""))
"RTN","PXRMEDU",37,0)
 S TEMP=$G(^AUPNVPED(IEN,0))
"RTN","PXRMEDU",38,0)
 S LOU=$P(TEMP,U,6)
"RTN","PXRMEDU",39,0)
 S VIEN=$P(TEMP,U,3)
"RTN","PXRMEDU",40,0)
 S DATE=$$VDATE^PXRMDATE(VIEN)
"RTN","PXRMEDU",41,0)
 ;Save the rest of the finding information.
"RTN","PXRMEDU",42,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMEDU",43,0)
 S FIEVAL(FINDING,"FINDING")=EDUIEN_";AUTTEDT("
"RTN","PXRMEDU",44,0)
 S FIEVAL(FINDING,"SOURCE")=IEN_";AUPNVPED("
"RTN","PXRMEDU",45,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMEDU",46,0)
 S FIEVAL(FINDING,"LEVEL OF UNDERSTANDING")=LOU
"RTN","PXRMEDU",47,0)
 S FIEVAL(FINDING,"VALUE")=LOU
"RTN","PXRMEDU",48,0)
 S FIEVAL(FINDING,"VIEN")=VIEN
"RTN","PXRMEDU",49,0)
 ;Determine if the finding has expired.
"RTN","PXRMEDU",50,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMEDU",51,0)
 I 'VALID D  Q
"RTN","PXRMEDU",52,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMEDU",53,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMEDU",54,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMEDU",55,0)
 S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,LOU)
"RTN","PXRMEDU",56,0)
 I CONVAL'="" D
"RTN","PXRMEDU",57,0)
 . I CONVAL D
"RTN","PXRMEDU",58,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMEDU",59,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMEDU",60,0)
 . E  D
"RTN","PXRMEDU",61,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMEDU",62,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMEDU",63,0)
 Q
"RTN","PXRMEDU",64,0)
 ;
"RTN","PXRMEDU",65,0)
 ;=======================================================================
"RTN","PXRMEDU",66,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMEDU",67,0)
 ;maintenance output.
"RTN","PXRMEDU",68,0)
 N EDUIEN,EM,FIEN,IND,PNAME,LOU,TEMP,VDATE
"RTN","PXRMEDU",69,0)
 S EDUIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMEDU",70,0)
 S FIEN=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMEDU",71,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMEDU",72,0)
 S LOU=$G(FIEVAL(FINDING,"VALUE"))
"RTN","PXRMEDU",73,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMEDU",74,0)
 S TEMP=TEMP_" Education: "
"RTN","PXRMEDU",75,0)
 S IND=$P(^AUPNVPED(EDUIEN,0),U,1)
"RTN","PXRMEDU",76,0)
 S PNAME=$P(^AUTTEDT(FIEN,0),U,4)
"RTN","PXRMEDU",77,0)
 I $L(PNAME)'>0 S PNAME=$P(^AUTTEDT(FIEN,0),U,1)
"RTN","PXRMEDU",78,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMEDU",79,0)
 I $L(LOU)>0 D
"RTN","PXRMEDU",80,0)
 . S TEMP=TEMP_"; level of understanding - "
"RTN","PXRMEDU",81,0)
 . S TEMP=TEMP_$$EXTERNAL^DILFD(9000010.16,.06,"",LOU,.EM)
"RTN","PXRMEDU",82,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMEDU",83,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMEDU",84,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMEDU",85,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMEDU",86,0)
 S NLINES=NLINES+1
"RTN","PXRMEDU",87,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMEDU",88,0)
 I $D(PXRMDEV) D
"RTN","PXRMEDU",89,0)
 . N UID
"RTN","PXRMEDU",90,0)
 . S UID="EDUCATION "_PNAME
"RTN","PXRMEDU",91,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMEDU",92,0)
 ;
"RTN","PXRMEDU",93,0)
 ;For historical encounters display the location and comments.
"RTN","PXRMEDU",94,0)
 I VDATE["E" D
"RTN","PXRMEDU",95,0)
 . N INDEX,VIEN
"RTN","PXRMEDU",96,0)
 . S INDEX="EDU-"_PNAME
"RTN","PXRMEDU",97,0)
 . S VIEN=FIEVAL(FINDING,"VIEN")
"RTN","PXRMEDU",98,0)
 . D HLCV^PXRMVSIT(.NLINES,.TEXT,VIEN,INDEX)
"RTN","PXRMEDU",99,0)
 Q
"RTN","PXRMEDU",100,0)
 ;
"RTN","PXRMEDU",101,0)
 ;=======================================================================
"RTN","PXRMEDU",102,0)
PATLIST(INDEX,EDUIEN,FINDING,FIND0,FIND3,TFIND0,TFIND3,FIEVAL) ;Build a
"RTN","PXRMEDU",103,0)
 ;list of patients with a particular exam.
"RTN","PXRMEDU",104,0)
 K ^TMP(INDEX,$J,FINDING)
"RTN","PXRMEDU",105,0)
 K ^TMP("PXRMEDULIST",$J)
"RTN","PXRMEDU",106,0)
 N CONVAL,DATE,DFN,IND,TEMP,VALID,VALUE
"RTN","PXRMEDU",107,0)
 S IND=0
"RTN","PXRMEDU",108,0)
 F  S IND=+$O(^AUPNVPED("B",EDUIEN,IND)) Q:IND=0  D
"RTN","PXRMEDU",109,0)
 . S TEMP=$G(^AUPNVPED(IND,0))
"RTN","PXRMEDU",110,0)
 . S DFN=$P(TEMP,U,2)
"RTN","PXRMEDU",111,0)
 . S VISIT=$P(TEMP,U,3)
"RTN","PXRMEDU",112,0)
 . S DATE=$P(^AUPNVSIT(VISIT,0),U,1)
"RTN","PXRMEDU",113,0)
 . S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMEDU",114,0)
 . I 'VALID Q
"RTN","PXRMEDU",115,0)
 .;Save the result.
"RTN","PXRMEDU",116,0)
 . S VALUE=$P(TEMP,U,4)
"RTN","PXRMEDU",117,0)
 . S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,VALUE)
"RTN","PXRMEDU",118,0)
 . I (CONVAL="")!(CONVAL) D
"RTN","PXRMEDU",119,0)
 .. S TEMP="RESULT~"_VALUE_U_"SOURCE~"_IND_";AUPNVPED("_U_"VISIT~"_VISIT
"RTN","PXRMEDU",120,0)
 .. S ^TMP("PXRMEDULIST",$J,DFN,DATE)=TEMP
"RTN","PXRMEDU",121,0)
 ;Only valid entries are on the list, save the most recent.
"RTN","PXRMEDU",122,0)
 S DFN=0
"RTN","PXRMEDU",123,0)
 F  S DFN=+$O(^TMP("PXRMEDULIST",$J,DFN)) Q:DFN=0  D
"RTN","PXRMEDU",124,0)
 . S DATE=$O(^TMP("PXRMEDULIST",$J,DFN,""),-1)
"RTN","PXRMEDU",125,0)
 . S ^TMP(INDEX,$J,DFN,DATE,FINDING)="FINDING~"_FIEVAL(FINDING,"FINDING")_U_^TMP("PXRMEDULIST",$J,DFN,DATE)
"RTN","PXRMEDU",126,0)
 K ^TMP("PXRMEDULIST",$J)
"RTN","PXRMEDU",127,0)
 Q
"RTN","PXRMEDU",128,0)
 ;
"RTN","PXRMEXAM")
0^8^B20153587
"RTN","PXRMEXAM",1,0)
PXRMEXAM ; SLC/PKR - Handle examination findings. ;08/24/2001
"RTN","PXRMEXAM",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,7**;Jun 19, 2000
"RTN","PXRMEXAM",3,0)
 ;
"RTN","PXRMEXAM",4,0)
 ;=======================================================================
"RTN","PXRMEXAM",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate exam findings.
"RTN","PXRMEXAM",6,0)
 N EXAMIEN,INVDATE,FIND0,FIND3,FINDING
"RTN","PXRMEXAM",7,0)
 S EXAMIEN=""
"RTN","PXRMEXAM",8,0)
 F  S EXAMIEN=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTEXAM(",EXAMIEN)) Q:+EXAMIEN=0  D
"RTN","PXRMEXAM",9,0)
 . S INVDATE=$O(^AUPNVXAM("AA",DFN,EXAMIEN,""))
"RTN","PXRMEXAM",10,0)
 . S FINDING=""
"RTN","PXRMEXAM",11,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTEXAM(",EXAMIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMEXAM",12,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMEXAM",13,0)
 .. S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMEXAM",14,0)
 .. D FIEVAL(DFN,EXAMIEN,INVDATE,FIND0,FIND3,"","",FINDING,.FIEVAL)
"RTN","PXRMEXAM",15,0)
 Q
"RTN","PXRMEXAM",16,0)
 ;
"RTN","PXRMEXAM",17,0)
 ;=======================================================================
"RTN","PXRMEXAM",18,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate exam terms.
"RTN","PXRMEXAM",19,0)
 N EXAMIEN,FIND0,FIND3,INVDATE,LFIEVAL,TFIND0,TFIND3,TFINDING
"RTN","PXRMEXAM",20,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMEXAM",21,0)
 S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMEXAM",22,0)
 S EXAMIEN=""
"RTN","PXRMEXAM",23,0)
 F  S EXAMIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTEXAM(",EXAMIEN)) Q:+EXAMIEN=0  D
"RTN","PXRMEXAM",24,0)
 . S INVDATE=$O(^AUPNVXAM("AA",DFN,EXAMIEN,""))
"RTN","PXRMEXAM",25,0)
 . S TFINDING=""
"RTN","PXRMEXAM",26,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTEXAM(",EXAMIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMEXAM",27,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMEXAM",28,0)
 .. S TFIND3=$G(^PXRMD(811.5,TERMIEN,20,TFINDING,3))
"RTN","PXRMEXAM",29,0)
 .. D FIEVAL(DFN,EXAMIEN,INVDATE,FIND0,FIND3,TFIND0,TFIND3,TFINDING,.TFIEVAL)
"RTN","PXRMEXAM",30,0)
 Q
"RTN","PXRMEXAM",31,0)
 ;
"RTN","PXRMEXAM",32,0)
 ;=======================================================================
"RTN","PXRMEXAM",33,0)
FIEVAL(DFN,EXAMIEN,INVDATE,FIND0,FIND3,TFIND0,TFIND3,FINDING,FIEVAL) ;
"RTN","PXRMEXAM",34,0)
 N CONVAL,DATE,IEN,IND,RSLT,TEMP,VALID,VIEN
"RTN","PXRMEXAM",35,0)
 I INVDATE="" S FIEVAL(FINDING)=0 Q
"RTN","PXRMEXAM",36,0)
 S IEN=$O(^AUPNVXAM("AA",DFN,EXAMIEN,INVDATE,""))
"RTN","PXRMEXAM",37,0)
 S TEMP=$G(^AUPNVXAM(IEN,0))
"RTN","PXRMEXAM",38,0)
 S RSLT=$P(TEMP,U,4)
"RTN","PXRMEXAM",39,0)
 S VIEN=$P(TEMP,U,3)
"RTN","PXRMEXAM",40,0)
 S DATE=$$VDATE^PXRMDATE(VIEN)
"RTN","PXRMEXAM",41,0)
 ;Save the rest of the finding information.
"RTN","PXRMEXAM",42,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMEXAM",43,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMEXAM",44,0)
 S FIEVAL(FINDING,"FINDING")=EXAMIEN_";AUTTEXAM("
"RTN","PXRMEXAM",45,0)
 S FIEVAL(FINDING,"SOURCE")=IEN_";AUPNVXAM("
"RTN","PXRMEXAM",46,0)
 S FIEVAL(FINDING,"RESULT")=RSLT
"RTN","PXRMEXAM",47,0)
 S FIEVAL(FINDING,"VALUE")=RSLT
"RTN","PXRMEXAM",48,0)
 S FIEVAL(FINDING,"VIEN")=VIEN
"RTN","PXRMEXAM",49,0)
 ;Determine if the finding has expired.
"RTN","PXRMEXAM",50,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMEXAM",51,0)
 I 'VALID D  Q
"RTN","PXRMEXAM",52,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMEXAM",53,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMEXAM",54,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMEXAM",55,0)
 S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,RSLT)
"RTN","PXRMEXAM",56,0)
 I CONVAL'="" D
"RTN","PXRMEXAM",57,0)
 . I CONVAL D
"RTN","PXRMEXAM",58,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMEXAM",59,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMEXAM",60,0)
 . E  D
"RTN","PXRMEXAM",61,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMEXAM",62,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMEXAM",63,0)
 Q
"RTN","PXRMEXAM",64,0)
 ;
"RTN","PXRMEXAM",65,0)
 ;=======================================================================
"RTN","PXRMEXAM",66,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMEXAM",67,0)
 ;maintenance output.
"RTN","PXRMEXAM",68,0)
 N EXAMIEN,EM,FIEN,IND,PNAME,RSLT,TEMP,VDATE
"RTN","PXRMEXAM",69,0)
 S EXAMIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMEXAM",70,0)
 S FIEN=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMEXAM",71,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMEXAM",72,0)
 S RSLT=$G(FIEVAL(FINDING,"VALUE"))
"RTN","PXRMEXAM",73,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMEXAM",74,0)
 S TEMP=TEMP_" Exam: "
"RTN","PXRMEXAM",75,0)
 S IND=$P(^AUPNVXAM(EXAMIEN,0),U,1)
"RTN","PXRMEXAM",76,0)
 S PNAME=$P(^AUTTEXAM(FIEN,0),U,1)
"RTN","PXRMEXAM",77,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMEXAM",78,0)
 I $L(RSLT)>0 D
"RTN","PXRMEXAM",79,0)
 . S TEMP=TEMP_"; result - "
"RTN","PXRMEXAM",80,0)
 . S TEMP=TEMP_$$EXTERNAL^DILFD(9000010.13,.04,"",RSLT,.EM)
"RTN","PXRMEXAM",81,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMEXAM",82,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMEXAM",83,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMEXAM",84,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMEXAM",85,0)
 S NLINES=NLINES+1
"RTN","PXRMEXAM",86,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMEXAM",87,0)
 I $D(PXRMDEV) D
"RTN","PXRMEXAM",88,0)
 . N UID
"RTN","PXRMEXAM",89,0)
 . S UID="EXAM "_PNAME
"RTN","PXRMEXAM",90,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMEXAM",91,0)
 ;
"RTN","PXRMEXAM",92,0)
 ;For historical encounters display the location and comments.
"RTN","PXRMEXAM",93,0)
 I VDATE["E" D
"RTN","PXRMEXAM",94,0)
 . N INDEX,VIEN
"RTN","PXRMEXAM",95,0)
 . S INDEX="EXAM-"_PNAME
"RTN","PXRMEXAM",96,0)
 . S VIEN=FIEVAL(FINDING,"VIEN")
"RTN","PXRMEXAM",97,0)
 . D HLCV^PXRMVSIT(.NLINES,.TEXT,VIEN,INDEX)
"RTN","PXRMEXAM",98,0)
 Q
"RTN","PXRMEXAM",99,0)
 ;
"RTN","PXRMEXAM",100,0)
 ;=======================================================================
"RTN","PXRMEXAM",101,0)
PATLIST(INDEX,EXAMIEN,FINDING,FIND0,FIND3,TFIND0,TFIND3,FIEVAL) ;Build a
"RTN","PXRMEXAM",102,0)
 ;list of patients with a particular exam.
"RTN","PXRMEXAM",103,0)
 K ^TMP(INDEX,$J,FINDING)
"RTN","PXRMEXAM",104,0)
 K ^TMP("PXRMEXLIST",$J)
"RTN","PXRMEXAM",105,0)
 N CONVAL,DATE,DFN,IND,TEMP,VALID,VALUE
"RTN","PXRMEXAM",106,0)
 S IND=0
"RTN","PXRMEXAM",107,0)
 F  S IND=+$O(^AUPNVXAM("B",EXAMIEN,IND)) Q:IND=0  D
"RTN","PXRMEXAM",108,0)
 . S TEMP=$G(^AUPNVXAM(IND,0))
"RTN","PXRMEXAM",109,0)
 . S DFN=$P(TEMP,U,2)
"RTN","PXRMEXAM",110,0)
 . S VISIT=$P(TEMP,U,3)
"RTN","PXRMEXAM",111,0)
 . S DATE=$P(^AUPNVSIT(VISIT,0),U,1)
"RTN","PXRMEXAM",112,0)
 . S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMEXAM",113,0)
 . I 'VALID Q
"RTN","PXRMEXAM",114,0)
 .;Save the result.
"RTN","PXRMEXAM",115,0)
 . S VALUE=$P(TEMP,U,4)
"RTN","PXRMEXAM",116,0)
 . S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,VALUE)
"RTN","PXRMEXAM",117,0)
 . I (CONVAL="")!(CONVAL) D
"RTN","PXRMEXAM",118,0)
 .. S TEMP="RESULT~"_VALUE_U_"SOURCE~"_IND_";AUPNVXAM("_U_"VISIT~"_VISIT
"RTN","PXRMEXAM",119,0)
 .. S ^TMP("PXRMEXLIST",$J,DFN,DATE)=TEMP
"RTN","PXRMEXAM",120,0)
 ;Only valid entries are on the list, save the most recent.
"RTN","PXRMEXAM",121,0)
 S DFN=0
"RTN","PXRMEXAM",122,0)
 F  S DFN=+$O(^TMP("PXRMEXLIST",$J,DFN)) Q:DFN=0  D
"RTN","PXRMEXAM",123,0)
 . S DATE=$O(^TMP("PXRMEXLIST",$J,DFN,""),-1)
"RTN","PXRMEXAM",124,0)
 . S ^TMP(INDEX,$J,DFN,DATE,FINDING)="FINDING~"_FIEVAL(FINDING,"FINDING")_U_^TMP("PXRMEXLIST",$J,DFN,DATE)
"RTN","PXRMEXAM",125,0)
 K ^TMP("PXRMEXLIST",$J)
"RTN","PXRMEXAM",126,0)
 Q
"RTN","PXRMEXAM",127,0)
 ;
"RTN","PXRMEXDG")
0^3^B39114488
"RTN","PXRMEXDG",1,0)
PXRMEXDG ;SLC/PJH - Reminder Dialog Exchange index build ;12/18/2001
"RTN","PXRMEXDG",2,0)
 ;;1.5;CLINICAL REMINDERS;**5,7**;Jun 19, 2000
"RTN","PXRMEXDG",3,0)
 ;
"RTN","PXRMEXDG",4,0)
 ;=====================================================================
"RTN","PXRMEXDG",5,0)
DIALOG(RIEN,DLIST,FLIST,OLIST,TLIST) ;
"RTN","PXRMEXDG",6,0)
 ;
"RTN","PXRMEXDG",7,0)
 ;Routine to get dialog details for a given reminder
"RTN","PXRMEXDG",8,0)
 ;
"RTN","PXRMEXDG",9,0)
 ;Called as DIALOG^PXRMEXDG(RIEN,.DLIST,.FLIST)
"RTN","PXRMEXDG",10,0)
 ;
"RTN","PXRMEXDG",11,0)
 ;RIEN   - Reminder IEN
"RTN","PXRMEXDG",12,0)
 ;DLIST  - List of dialogs (components first)
"RTN","PXRMEXDG",13,0)
 ;FLIST  - Finding list used by PXRMEXPR
"RTN","PXRMEXDG",14,0)
 ;OLIST  - List of embedded TIU objects
"RTN","PXRMEXDG",15,0)
 ;TLIST  - List of embedded TIU templates
"RTN","PXRMEXDG",16,0)
 ;
"RTN","PXRMEXDG",17,0)
 ;Initialize
"RTN","PXRMEXDG",18,0)
 K DLIST
"RTN","PXRMEXDG",19,0)
 N DARRAY,DCNT,DIALOG,DIEN,FCNT,FINDING,OCNT,RCNT,RESULT,TEMP
"RTN","PXRMEXDG",20,0)
 ;Check if reminder exists
"RTN","PXRMEXDG",21,0)
 Q:'$D(^PXD(811.9,RIEN,0))
"RTN","PXRMEXDG",22,0)
 ;Get dialog ien from reminder definition
"RTN","PXRMEXDG",23,0)
 S DIEN=$P($G(^PXD(811.9,RIEN,51)),U) Q:'DIEN
"RTN","PXRMEXDG",24,0)
 ;Check dialog pointer is valid
"RTN","PXRMEXDG",25,0)
 Q:'$D(^PXRMD(801.41,DIEN))
"RTN","PXRMEXDG",26,0)
 ;Dialog and Finding count
"RTN","PXRMEXDG",27,0)
 S DCNT=0,FCNT=0,RCNT=0,TCNT=0
"RTN","PXRMEXDG",28,0)
 ;Get details
"RTN","PXRMEXDG",29,0)
 D DGET(DIEN)
"RTN","PXRMEXDG",30,0)
 ;
"RTN","PXRMEXDG",31,0)
 ;Now build the dialog list (components first)
"RTN","PXRMEXDG",32,0)
 S DCNT="",OCNT=0
"RTN","PXRMEXDG",33,0)
 F  S DCNT=$O(DARRAY(DCNT),-1) Q:'DCNT  D
"RTN","PXRMEXDG",34,0)
 .;Ignore dialogs previously encountered
"RTN","PXRMEXDG",35,0)
 .S DIEN=DARRAY(DCNT) Q:$D(DIALOG(DIEN))
"RTN","PXRMEXDG",36,0)
 .;Save dialog in output array
"RTN","PXRMEXDG",37,0)
 .S OCNT=OCNT+1,DIALOG(DIEN)="",TEMP("DIALOG",OCNT)=DIEN
"RTN","PXRMEXDG",38,0)
 ;
"RTN","PXRMEXDG",39,0)
 ;Save the dialog and result details to DLIST
"RTN","PXRMEXDG",40,0)
 N CNT,COUNT,DTYP
"RTN","PXRMEXDG",41,0)
 S COUNT=0
"RTN","PXRMEXDG",42,0)
 F DTYP="RESULT","DIALOG" D
"RTN","PXRMEXDG",43,0)
 .F CNT=1:1 S DIEN=$G(TEMP(DTYP,CNT)) Q:'DIEN  D
"RTN","PXRMEXDG",44,0)
 ..S COUNT=COUNT+1,DLIST("DIALOG",COUNT,DIEN)=""
"RTN","PXRMEXDG",45,0)
 ;
"RTN","PXRMEXDG",46,0)
 I COUNT>0 S DLIST("DIALOG")=801.41
"RTN","PXRMEXDG",47,0)
 ;
"RTN","PXRMEXDG",48,0)
 ;Add Dialog Findings to FLIST if not aready present
"RTN","PXRMEXDG",49,0)
 N DIC,DO,IEN,FNAME,FNUM,SUB
"RTN","PXRMEXDG",50,0)
 S SUB=0
"RTN","PXRMEXDG",51,0)
 F  S SUB=$O(TEMP("FINDING",SUB)) Q:'SUB  D
"RTN","PXRMEXDG",52,0)
 .S IEN=$P(TEMP("FINDING",SUB),";"),DIC=U_$P(TEMP("FINDING",SUB),";",2)
"RTN","PXRMEXDG",53,0)
 .K DO D DO^DIC1
"RTN","PXRMEXDG",54,0)
 .S FNUM=+DO(2),FNAME=$P(DO,U) I ('FNUM)!(FNAME="") Q
"RTN","PXRMEXDG",55,0)
 .;Check if present in FLIST
"RTN","PXRMEXDG",56,0)
 .I $D(FLIST(FNAME,"F",IEN)) Q
"RTN","PXRMEXDG",57,0)
 .;Otherwise add to list
"RTN","PXRMEXDG",58,0)
 .S:'$D(FLIST(FNAME)) FLIST(FNAME)=FNUM S FLIST(FNAME,"F",IEN)=""
"RTN","PXRMEXDG",59,0)
 .;Add the Health Factor category to FLIST
"RTN","PXRMEXDG",60,0)
 .I FNAME="HEALTH FACTORS" D
"RTN","PXRMEXDG",61,0)
 ..N HFCAT
"RTN","PXRMEXDG",62,0)
 ..S HFCAT=$P($G(^AUTTHF(IEN,0)),U,3) S:HFCAT FLIST(FNAME,"C",HFCAT)=""
"RTN","PXRMEXDG",63,0)
 ;
"RTN","PXRMEXDG",64,0)
 ;Store any TIU components
"RTN","PXRMEXDG",65,0)
 N GLOB,DIEN,CNT
"RTN","PXRMEXDG",66,0)
 ;Set global for search
"RTN","PXRMEXDG",67,0)
 S GLOB="^PXRMD(801.41,"
"RTN","PXRMEXDG",68,0)
 ;Search through all component dialogs
"RTN","PXRMEXDG",69,0)
 S CNT=0
"RTN","PXRMEXDG",70,0)
 F  S CNT=$O(DLIST("DIALOG",CNT)) Q:'CNT  D
"RTN","PXRMEXDG",71,0)
 .S DIEN=$O(DLIST("DIALOG",CNT,"")) Q:'DIEN
"RTN","PXRMEXDG",72,0)
 .;Search Dialog Text for TIU Objects and Templates
"RTN","PXRMEXDG",73,0)
 .D TIUSRCH(GLOB,DIEN,25,.OLIST,.TLIST)
"RTN","PXRMEXDG",74,0)
 .;Search P/N Text for TIU Objects and Templates
"RTN","PXRMEXDG",75,0)
 .D TIUSRCH(GLOB,DIEN,35,.OLIST,.TLIST)
"RTN","PXRMEXDG",76,0)
 ;
"RTN","PXRMEXDG",77,0)
 Q
"RTN","PXRMEXDG",78,0)
 ;
"RTN","PXRMEXDG",79,0)
 ;Get the dialog components
"RTN","PXRMEXDG",80,0)
 ;-------------------------
"RTN","PXRMEXDG",81,0)
DGET(D0) ;Save dialog ien
"RTN","PXRMEXDG",82,0)
 S DCNT=DCNT+1,DARRAY(DCNT)=D0
"RTN","PXRMEXDG",83,0)
 ;And details (except for reminder dialog)
"RTN","PXRMEXDG",84,0)
 I DCNT>1 D
"RTN","PXRMEXDG",85,0)
 .;Finding items
"RTN","PXRMEXDG",86,0)
 .D DFIND(D0)
"RTN","PXRMEXDG",87,0)
 .;Additional Finding Items
"RTN","PXRMEXDG",88,0)
 .D DFINDA(D0)
"RTN","PXRMEXDG",89,0)
 .;Result groups
"RTN","PXRMEXDG",90,0)
 .D DRESULT(D0)
"RTN","PXRMEXDG",91,0)
 ;
"RTN","PXRMEXDG",92,0)
 ;Dialog components
"RTN","PXRMEXDG",93,0)
 N DCOMP,DDATA,DSUB
"RTN","PXRMEXDG",94,0)
 S DSUB=0
"RTN","PXRMEXDG",95,0)
 F  S DSUB=$O(^PXRMD(801.41,D0,10,DSUB)) Q:'DSUB  D
"RTN","PXRMEXDG",96,0)
 .;Get any component dialogs
"RTN","PXRMEXDG",97,0)
 .S DCOMP=$P($G(^PXRMD(801.41,D0,10,DSUB,0)),U,2) Q:'DCOMP
"RTN","PXRMEXDG",98,0)
 .;If component exists get sub-components
"RTN","PXRMEXDG",99,0)
 .S DDATA=$G(^PXRMD(801.41,DCOMP,0)) Q:DDATA=""
"RTN","PXRMEXDG",100,0)
 .;Exclude national PXRM prompts
"RTN","PXRMEXDG",101,0)
 .I $E(DDATA,1,4)="PXRM",$P($G(^PXRMD(801.41,DCOMP,100)),U)="N" Q
"RTN","PXRMEXDG",102,0)
 .;Sub-components
"RTN","PXRMEXDG",103,0)
 .D DGET(DCOMP)
"RTN","PXRMEXDG",104,0)
 Q
"RTN","PXRMEXDG",105,0)
 ;
"RTN","PXRMEXDG",106,0)
 ;Build list of finding items
"RTN","PXRMEXDG",107,0)
 ;---------------------------
"RTN","PXRMEXDG",108,0)
DFIND(DIEN) ;
"RTN","PXRMEXDG",109,0)
 N FIND,FIEN,FGLOB,FNAM
"RTN","PXRMEXDG",110,0)
 ;Finding Item
"RTN","PXRMEXDG",111,0)
 S FIND=$P($G(^PXRMD(801.41,DIEN,1)),U,5)
"RTN","PXRMEXDG",112,0)
 ;If a finding item exists check and save
"RTN","PXRMEXDG",113,0)
 I FIND]"" D
"RTN","PXRMEXDG",114,0)
 .;Finding item defined
"RTN","PXRMEXDG",115,0)
 .S FIEN=$P(FIND,";"),FGLOB=$P(FIND,";",2) Q:'FIEN  Q:FGLOB=""
"RTN","PXRMEXDG",116,0)
 .;And finding item exists
"RTN","PXRMEXDG",117,0)
 .Q:'$D(@(U_FGLOB_FIEN_",0)"))
"RTN","PXRMEXDG",118,0)
 .;Finding name
"RTN","PXRMEXDG",119,0)
 .S FNAM=$P($G(@(U_FGLOB_FIEN_",0)")),U) S:FNAM="" FNAM="???"
"RTN","PXRMEXDG",120,0)
 .;And not previously saved
"RTN","PXRMEXDG",121,0)
 .I '$D(FINDING(FIND)) D
"RTN","PXRMEXDG",122,0)
 ..S FCNT=FCNT+1,FINDING(FIND)="",TEMP("FINDING",FCNT)=FIND
"RTN","PXRMEXDG",123,0)
 Q
"RTN","PXRMEXDG",124,0)
 ;
"RTN","PXRMEXDG",125,0)
 ;Build list of additional findings
"RTN","PXRMEXDG",126,0)
 ;---------------------------------
"RTN","PXRMEXDG",127,0)
DFINDA(DIEN) ;
"RTN","PXRMEXDG",128,0)
 N FIND,FIEN,FGLOB,FNAM,FSUB
"RTN","PXRMEXDG",129,0)
 S FSUB=0
"RTN","PXRMEXDG",130,0)
 F  S FSUB=$O(^PXRMD(801.41,DIEN,3,FSUB)) Q:'FSUB  D
"RTN","PXRMEXDG",131,0)
 .;Additional Finding Item
"RTN","PXRMEXDG",132,0)
 .S FIND=$P($G(^PXRMD(801.41,DIEN,3,FSUB,0)),U)
"RTN","PXRMEXDG",133,0)
 .;If a finding item exists check and save
"RTN","PXRMEXDG",134,0)
 .I FIND]"" D
"RTN","PXRMEXDG",135,0)
 ..;Finding item defined
"RTN","PXRMEXDG",136,0)
 ..S FIEN=$P(FIND,";"),FGLOB=$P(FIND,";",2) Q:'FIEN  Q:FGLOB=""
"RTN","PXRMEXDG",137,0)
 ..;And finding item exists
"RTN","PXRMEXDG",138,0)
 ..Q:'$D(@(U_FGLOB_FIEN_",0)"))
"RTN","PXRMEXDG",139,0)
 ..;Finding name
"RTN","PXRMEXDG",140,0)
 ..S FNAM=$P($G(@(U_FGLOB_FIEN_",0)")),U) S:FNAM="" FNAM="???"
"RTN","PXRMEXDG",141,0)
 ..;And not previously saved
"RTN","PXRMEXDG",142,0)
 ..I '$D(FINDING(FIND)) D
"RTN","PXRMEXDG",143,0)
 ...S FCNT=FCNT+1,FINDING(FIND)="",TEMP("FINDING",FCNT)=FIND
"RTN","PXRMEXDG",144,0)
 Q
"RTN","PXRMEXDG",145,0)
 ;
"RTN","PXRMEXDG",146,0)
 ;Build list of result groups
"RTN","PXRMEXDG",147,0)
 ;---------------------------
"RTN","PXRMEXDG",148,0)
DRESULT(DIEN) ;
"RTN","PXRMEXDG",149,0)
 N RIEN
"RTN","PXRMEXDG",150,0)
 ;Result Group/Element pointer
"RTN","PXRMEXDG",151,0)
 S RIEN=$P($G(^PXRMD(801.41,DIEN,0)),U,15) Q:'RIEN  Q:$D(RESULT(RIEN))
"RTN","PXRMEXDG",152,0)
 ;Result group compoments
"RTN","PXRMEXDG",153,0)
 N DSUB,REIEN
"RTN","PXRMEXDG",154,0)
 S DSUB=0
"RTN","PXRMEXDG",155,0)
 F  S DSUB=$O(^PXRMD(801.41,RIEN,10,DSUB)) Q:'DSUB  D
"RTN","PXRMEXDG",156,0)
 .;Get result element
"RTN","PXRMEXDG",157,0)
 .S REIEN=$P($G(^PXRMD(801.41,RIEN,10,DSUB,0)),U,2) Q:'REIEN
"RTN","PXRMEXDG",158,0)
 .Q:'$D(^PXRMD(801.41,REIEN,0))
"RTN","PXRMEXDG",159,0)
 .;If element exists get save it
"RTN","PXRMEXDG",160,0)
 .S RCNT=RCNT+1,OUTPUT("RESULT",RCNT)=REIEN
"RTN","PXRMEXDG",161,0)
 ;
"RTN","PXRMEXDG",162,0)
 ;Save result group
"RTN","PXRMEXDG",163,0)
 S RCNT=RCNT+1,RESULT(RIEN)="",TEMP("RESULT",RCNT)=RIEN
"RTN","PXRMEXDG",164,0)
 Q
"RTN","PXRMEXDG",165,0)
 ;
"RTN","PXRMEXDG",166,0)
 ;Extract TIU Objects/Templates from any WP text
"RTN","PXRMEXDG",167,0)
 ;----------------------------------------------
"RTN","PXRMEXDG",168,0)
TIUSRCH(GLOB,IEN,NODE,OLIST,TLIST) ;
"RTN","PXRMEXDG",169,0)
 N OCNT,TCNT,TEXT
"RTN","PXRMEXDG",170,0)
 ;Add to existing arrays
"RTN","PXRMEXDG",171,0)
 S OCNT=+$O(OLIST(""),-1),TCNT=+$O(TLIST(""),-1),SUB=0
"RTN","PXRMEXDG",172,0)
 ;Scan WP fields
"RTN","PXRMEXDG",173,0)
 F  S SUB=$O(@(GLOB_IEN_","_NODE_","_SUB_")")) Q:'SUB  D
"RTN","PXRMEXDG",174,0)
 .;Get individual line
"RTN","PXRMEXDG",175,0)
 .S TEXT=$G(@(GLOB_IEN_","_NODE_","_SUB_",0)")) Q:TEXT=""
"RTN","PXRMEXDG",176,0)
 .;Most text lines will have no TIU link so ignore them
"RTN","PXRMEXDG",177,0)
 .I (TEXT'["|")&(TEXT'["{FLD:") Q
"RTN","PXRMEXDG",178,0)
 .;Templates are in format {FLD:fldname} (only applies to dialogs)
"RTN","PXRMEXDG",179,0)
 .I GLOB[801.41 D TIUXTR("{FLD:","}",TEXT,.TLIST,.TCNT)
"RTN","PXRMEXDG",180,0)
 .;Objects are in format |Objectname|
"RTN","PXRMEXDG",181,0)
 .D TIUXTR("|","|",TEXT,.OLIST,.OCNT)
"RTN","PXRMEXDG",182,0)
 Q
"RTN","PXRMEXDG",183,0)
 ;
"RTN","PXRMEXDG",184,0)
TIUXTR(SRCH,SRCH1,TEXT,OUTPUT,CNT) ;
"RTN","PXRMEXDG",185,0)
 N EXIST,IC,TXT,ONAME
"RTN","PXRMEXDG",186,0)
 S TXT=TEXT
"RTN","PXRMEXDG",187,0)
 F  D  Q:TXT'[SRCH
"RTN","PXRMEXDG",188,0)
 .S TXT=$E(TXT,$F(TXT,SRCH),$L(TXT)) Q:TXT'[SRCH1
"RTN","PXRMEXDG",189,0)
 .S ONAME=$P(TXT,SRCH1) Q:ONAME=""
"RTN","PXRMEXDG",190,0)
 .;Check if already selected
"RTN","PXRMEXDG",191,0)
 .S EXIST=0,IC=0
"RTN","PXRMEXDG",192,0)
 .F  S IC=$O(OUTPUT(IC)) Q:'IC  Q:EXIST  D
"RTN","PXRMEXDG",193,0)
 ..I $G(OUTPUT(IC))=ONAME S EXIST=1
"RTN","PXRMEXDG",194,0)
 .;Save array of object/template names
"RTN","PXRMEXDG",195,0)
 .I 'EXIST S CNT=CNT+1,OUTPUT(CNT)=ONAME
"RTN","PXRMEXDG",196,0)
 Q
"RTN","PXRMEXHF")
0^25^B44878456
"RTN","PXRMEXHF",1,0)
PXRMEXHF ; SLC/PKR - Routines to select and deal with host files. ;09/24/2001
"RTN","PXRMEXHF",2,0)
 ;;1.5;CLINICAL REMINDERS;**5,7**;Jun 19, 2000
"RTN","PXRMEXHF",3,0)
 ;======================================================================
"RTN","PXRMEXHF",4,0)
CHF(SUCCESS,LIST,PATH,FILE) ;Put the repository entries in LIST into the
"RTN","PXRMEXHF",5,0)
 ;host file specified by PATH and FILE.
"RTN","PXRMEXHF",6,0)
 N GBL,LIEN,RIEN
"RTN","PXRMEXHF",7,0)
 S SUCCESS=1
"RTN","PXRMEXHF",8,0)
 S LIEN=$O(LIST(""))
"RTN","PXRMEXHF",9,0)
 I LIEN="" Q
"RTN","PXRMEXHF",10,0)
 S RIEN=$$RIEN^PXRMEXU1(LIEN)
"RTN","PXRMEXHF",11,0)
 S GBL="^PXD(811.8,"_RIEN_",100,1,0)"
"RTN","PXRMEXHF",12,0)
 ;Save the first entry.
"RTN","PXRMEXHF",13,0)
 S SUCCESS(LIEN)=$$GTF^%ZISH(GBL,4,PATH,FILE)
"RTN","PXRMEXHF",14,0)
 I SUCCESS(LIEN)=0 Q
"RTN","PXRMEXHF",15,0)
 ;Append any remaining entries.
"RTN","PXRMEXHF",16,0)
 F  S LIEN=$O(LIST(LIEN)) Q:+LIEN=0  D
"RTN","PXRMEXHF",17,0)
 . S RIEN=$$RIEN^PXRMEXU1(LIEN)
"RTN","PXRMEXHF",18,0)
 . S GBL="^PXD(811.8,"_RIEN_",100,1,0)"
"RTN","PXRMEXHF",19,0)
 . S SUCCESS(LIEN)=$$GATF^%ZISH(GBL,4,PATH,FILE)
"RTN","PXRMEXHF",20,0)
 Q
"RTN","PXRMEXHF",21,0)
 ;
"RTN","PXRMEXHF",22,0)
 ;======================================================================
"RTN","PXRMEXHF",23,0)
GETEHF() ;Get an existing host file.
"RTN","PXRMEXHF",24,0)
 ;Build a list of all .PRD files in the current directory.
"RTN","PXRMEXHF",25,0)
 N FILESPEC,FILELIST,PATH
"RTN","PXRMEXHF",26,0)
 S FILESPEC("*.PRD")=""
"RTN","PXRMEXHF",27,0)
 S PATH=$$PWD^%ZISH
"RTN","PXRMEXHF",28,0)
 N DIR,X,Y
"RTN","PXRMEXHF",29,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXHF",30,0)
 S DIR(0)="FAU"_U_"1:32"
"RTN","PXRMEXHF",31,0)
 S DIR("A")="Enter a path: "
"RTN","PXRMEXHF",32,0)
 S DIR("B")=PATH
"RTN","PXRMEXHF",33,0)
 S DIR("?",1)="A host file is a file on your host system."
"RTN","PXRMEXHF",34,0)
 S DIR("?",2)="A complete host file consists of a path, file name, and extension"
"RTN","PXRMEXHF",35,0)
 S DIR("?",3)="A path consists of a device and directory name."
"RTN","PXRMEXHF",36,0)
 S DIR("?",4)="The default extension is prd (Packed Reminder Definition)."
"RTN","PXRMEXHF",37,0)
 S DIR("?")="The default path is "_PATH
"RTN","PXRMEXHF",38,0)
 D ^DIR K DIR
"RTN","PXRMEXHF",39,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXHF",40,0)
 I $D(DIRUT) S DTOUT=1
"RTN","PXRMEXHF",41,0)
 I $D(DTOUT)!($D(DUOUT)) Q ""
"RTN","PXRMEXHF",42,0)
 S PATH=Y
"RTN","PXRMEXHF",43,0)
 S Y=$$LIST^%ZISH(PATH,"FILESPEC","FILELIST")
"RTN","PXRMEXHF",44,0)
 I Y D
"RTN","PXRMEXHF",45,0)
 . W !,"The following PRD files were found in ",PATH
"RTN","PXRMEXHF",46,0)
 . S FILE=""
"RTN","PXRMEXHF",47,0)
 . F  S FILE=$O(FILELIST(FILE)) Q:FILE=""  D
"RTN","PXRMEXHF",48,0)
 .. W !,?2,FILE
"RTN","PXRMEXHF",49,0)
 E  W !,"No PRD files were found in path ",PATH
"RTN","PXRMEXHF",50,0)
 ;
"RTN","PXRMEXHF",51,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXHF",52,0)
 S DIR(0)="FAOU"_U_"1:32"
"RTN","PXRMEXHF",53,0)
 S DIR("A")="Enter a file name: "
"RTN","PXRMEXHF",54,0)
 S DIR("?",1)="A file name has the format NAME.EXTENSION, the default extension is PRD"
"RTN","PXRMEXHF",55,0)
 S DIR("?",2)="Therefore if you type in FILE for the file name, the host file will be"
"RTN","PXRMEXHF",56,0)
 S DIR("?")="  "_PATH_"FILE.PRD"
"RTN","PXRMEXHF",57,0)
 D ^DIR K DIR
"RTN","PXRMEXHF",58,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXHF",59,0)
 I $D(DIRUT) S DTOUT=1
"RTN","PXRMEXHF",60,0)
 I $D(DTOUT)!($D(DUOUT)) Q ""
"RTN","PXRMEXHF",61,0)
 S FILE=Y
"RTN","PXRMEXHF",62,0)
 ;Add the default extension if there isn't one.
"RTN","PXRMEXHF",63,0)
 I FILE'["." S FILE=FILE_".PRD"
"RTN","PXRMEXHF",64,0)
 Q PATH_U_FILE
"RTN","PXRMEXHF",65,0)
 ;
"RTN","PXRMEXHF",66,0)
 ;======================================================================
"RTN","PXRMEXHF",67,0)
GETHFS() ;Get the name of a host file to store repository entries in.
"RTN","PXRMEXHF",68,0)
 N DIROUT,DIRUT,DTOUT,DUOUT,FILE,HFNAME,PATH
"RTN","PXRMEXHF",69,0)
GETHF ;As a default set the path to the current directory.
"RTN","PXRMEXHF",70,0)
 S PATH=$$PWD^%ZISH
"RTN","PXRMEXHF",71,0)
 N DIR,X,Y
"RTN","PXRMEXHF",72,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXHF",73,0)
 S DIR(0)="FAU"_U_"1:32"
"RTN","PXRMEXHF",74,0)
 S DIR("A")="Enter a path: "
"RTN","PXRMEXHF",75,0)
 S DIR("B")=PATH
"RTN","PXRMEXHF",76,0)
 S DIR("?",1)="A host file is a file on your host system."
"RTN","PXRMEXHF",77,0)
 S DIR("?",2)="A complete host file consists of a path, file name, and extension"
"RTN","PXRMEXHF",78,0)
 S DIR("?",3)="A path consists of a device and directory name."
"RTN","PXRMEXHF",79,0)
 S DIR("?",4)="The default extension is prd (Packed Reminder Definition)."
"RTN","PXRMEXHF",80,0)
 S DIR("?")="The default path is "_PATH
"RTN","PXRMEXHF",81,0)
 D ^DIR K DIR
"RTN","PXRMEXHF",82,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXHF",83,0)
 I $D(DIRUT) S DTOUT=1
"RTN","PXRMEXHF",84,0)
 I $D(DTOUT)!($D(DUOUT)) Q 0
"RTN","PXRMEXHF",85,0)
 S PATH=Y
"RTN","PXRMEXHF",86,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXHF",87,0)
 S DIR(0)="FAU"_U_"1:32"
"RTN","PXRMEXHF",88,0)
 S DIR("A")="Enter a file name: "
"RTN","PXRMEXHF",89,0)
 S DIR("?",1)="A file name has the format NAME.EXTENSION, the default extension is PRD"
"RTN","PXRMEXHF",90,0)
 S DIR("?",2)="Therefore if you type in FILE for the file name, the host file will be"
"RTN","PXRMEXHF",91,0)
 S DIR("?")="  "_PATH_"FILE.PRD"
"RTN","PXRMEXHF",92,0)
 D ^DIR K DIR
"RTN","PXRMEXHF",93,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXHF",94,0)
 I $D(DIRUT) S DTOUT=1
"RTN","PXRMEXHF",95,0)
 I $D(DTOUT)!($D(DUOUT)) Q 0
"RTN","PXRMEXHF",96,0)
 S FILE=Y
"RTN","PXRMEXHF",97,0)
 ;Add the default extension if there isn't one.
"RTN","PXRMEXHF",98,0)
 I FILE'["." S FILE=FILE_".PRD"
"RTN","PXRMEXHF",99,0)
 S HFNAME=PATH_FILE
"RTN","PXRMEXHF",100,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXHF",101,0)
 S DIR(0)="YAO"
"RTN","PXRMEXHF",102,0)
 S DIR("A")="Will save selected entries to host file "_HFNAME_"?: "
"RTN","PXRMEXHF",103,0)
 S DIR("B")="Y"
"RTN","PXRMEXHF",104,0)
 D ^DIR K DIR
"RTN","PXRMEXHF",105,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXHF",106,0)
 I $D(DIRUT) S DTOUT=1
"RTN","PXRMEXHF",107,0)
 I $D(DTOUT)!($D(DUOUT)) Q 0
"RTN","PXRMEXHF",108,0)
 I 'Y G GETHF
"RTN","PXRMEXHF",109,0)
 Q PATH_U_FILE
"RTN","PXRMEXHF",110,0)
 ;
"RTN","PXRMEXHF",111,0)
 ;======================================================================
"RTN","PXRMEXHF",112,0)
LHF(SUCCESS,PATH,FILE) ;Load a host file containing repository entries into
"RTN","PXRMEXHF",113,0)
 ;the repository.
"RTN","PXRMEXHF",114,0)
 N CURRL,CSUM,DATEP,DONE,FDA,GBL,IENROOT,IND,LINE,MSG,NENTRY,NLINES
"RTN","PXRMEXHF",115,0)
 N RETMP,RNAME,SITE,SOURCE,SSOURCE,US,USER,VRSN
"RTN","PXRMEXHF",116,0)
 K ^TMP("PXRMEXHF",$J)
"RTN","PXRMEXHF",117,0)
 S GBL="^TMP(""PXRMEXHF"",$J,1,0)"
"RTN","PXRMEXHF",118,0)
 S GBL=$NA(@GBL)
"RTN","PXRMEXHF",119,0)
 S SUCCESS=$$FTG^%ZISH(PATH,FILE,GBL,3)
"RTN","PXRMEXHF",120,0)
 I 'SUCCESS Q
"RTN","PXRMEXHF",121,0)
 ;Make sure it has the correct format.
"RTN","PXRMEXHF",122,0)
 I (^TMP("PXRMEXHF",$J,1,0)'["xml")!(^TMP("PXRMEXHF",$J,2,0)'="<REMINDER_EXCHANGE_FILE_ENTRY>") D  Q
"RTN","PXRMEXHF",123,0)
 . W !,"This host file does not have the correct format!"
"RTN","PXRMEXHF",124,0)
 . H 2
"RTN","PXRMEXHF",125,0)
 . S SUCCESS=0
"RTN","PXRMEXHF",126,0)
 . K ^TMP("PXRMEXHF",$J)
"RTN","PXRMEXHF",127,0)
 W !,"Loading host file ",PATH,FILE
"RTN","PXRMEXHF",128,0)
 S RETMP="^TMP(""PXRMEXLHF"",$J)"
"RTN","PXRMEXHF",129,0)
 S (CURRL,DONE,NENTRY,NLINES,SSOURCE)=0
"RTN","PXRMEXHF",130,0)
 F  Q:DONE  D
"RTN","PXRMEXHF",131,0)
 . S CURRL=CURRL+1
"RTN","PXRMEXHF",132,0)
 . I '$D(^TMP("PXRMEXHF",$J,CURRL,0)) S DONE=1 Q
"RTN","PXRMEXHF",133,0)
 . S LINE=^TMP("PXRMEXHF",$J,CURRL,0)
"RTN","PXRMEXHF",134,0)
 . S NLINES=NLINES+1
"RTN","PXRMEXHF",135,0)
 . S ^TMP("PXRMEXLHF",$J,NLINES,0)=LINE
"RTN","PXRMEXHF",136,0)
 . I LINE["<PACKAGE_VERSION>" S VRSN=$$GETTAGV^PXRMEXU3(LINE,"<PACKAGE_VERSION>")
"RTN","PXRMEXHF",137,0)
 . I LINE="<SOURCE>" S SSOURCE=1
"RTN","PXRMEXHF",138,0)
 . I SSOURCE D
"RTN","PXRMEXHF",139,0)
 .. I LINE["<NAME>" S RNAME=$$GETTAGV^PXRMEXU3(LINE,"<NAME>")
"RTN","PXRMEXHF",140,0)
 .. I LINE["<USER>" S USER=$$GETTAGV^PXRMEXU3(LINE,"<USER>")
"RTN","PXRMEXHF",141,0)
 .. I LINE["<SITE>" S SITE=$$GETTAGV^PXRMEXU3(LINE,"<SITE>")
"RTN","PXRMEXHF",142,0)
 .. I LINE["<DATE_PACKED>" S DATEP=$$GETTAGV^PXRMEXU3(LINE,"<DATE_PACKED>")
"RTN","PXRMEXHF",143,0)
 . I LINE="</SOURCE>" D
"RTN","PXRMEXHF",144,0)
 .. S SSOURCE=0
"RTN","PXRMEXHF",145,0)
 .. S SOURCE=USER_" at "_SITE
"RTN","PXRMEXHF",146,0)
 .;See if the entry is loaded into the temporary storage.
"RTN","PXRMEXHF",147,0)
 . I LINE="</REMINDER_EXCHANGE_FILE_ENTRY>" D
"RTN","PXRMEXHF",148,0)
 .. S NLINES=0
"RTN","PXRMEXHF",149,0)
 .. S NENTRY=NENTRY+1
"RTN","PXRMEXHF",150,0)
 ..;Make sure it has the correct format.
"RTN","PXRMEXHF",151,0)
 .. I (^TMP("PXRMEXLHF",$J,1,0)'["xml")!(^TMP("PXRMEXLHF",$J,2,0)'="<REMINDER_EXCHANGE_FILE_ENTRY>") D  Q
"RTN","PXRMEXHF",152,0)
 ... W !,"There is a problem reading this host file try a new copy of it."
"RTN","PXRMEXHF",153,0)
 ... S SUCCESS=0
"RTN","PXRMEXHF",154,0)
 ... H 2
"RTN","PXRMEXHF",155,0)
 ..;Make sure this entry does not already exist.
"RTN","PXRMEXHF",156,0)
 .. I $$REXISTS^PXRMEXIU(RNAME,DATEP) D
"RTN","PXRMEXHF",157,0)
 ... W !,RNAME," with a date packed of ",DATEP
"RTN","PXRMEXHF",158,0)
 ... W !,"is already in the Exchange File."
"RTN","PXRMEXHF",159,0)
 ... S SUCCESS(NENTRY)=0
"RTN","PXRMEXHF",160,0)
 ... H 2
"RTN","PXRMEXHF",161,0)
 .. E  D
"RTN","PXRMEXHF",162,0)
 ... K FDA,IENROOT
"RTN","PXRMEXHF",163,0)
 ... S FDA(811.8,"+1,",.01)=RNAME
"RTN","PXRMEXHF",164,0)
 ... S FDA(811.8,"+1,",.02)=SOURCE
"RTN","PXRMEXHF",165,0)
 ... S FDA(811.8,"+1,",.03)=DATEP
"RTN","PXRMEXHF",166,0)
 ... D UPDATE^PXRMEXPU(.US,.FDA,.IENROOT)
"RTN","PXRMEXHF",167,0)
 ... S SUCCESS(NENTRY)=US
"RTN","PXRMEXHF",168,0)
 ...;Create the description and save the data.
"RTN","PXRMEXHF",169,0)
 ... N DESCT,KEYWORDT
"RTN","PXRMEXHF",170,0)
 ... D DESC^PXRMEXU3(RETMP,.DESCT)
"RTN","PXRMEXHF",171,0)
 ... D KEYWORD^PXRMEXU3(RETMP,.KEYWORDT)
"RTN","PXRMEXHF",172,0)
 ... D DESC^PXRMEXU1(IENROOT(1),RNAME,SOURCE,DATEP,"DESCT","KEYWORDT")
"RTN","PXRMEXHF",173,0)
 ... M ^PXD(811.8,IENROOT(1),100)=^TMP("PXRMEXLHF",$J)
"RTN","PXRMEXHF",174,0)
 .. K ^TMP("PXRMEXLHF",$J)
"RTN","PXRMEXHF",175,0)
 ;
"RTN","PXRMEXHF",176,0)
 ;Check the success of the entry installs.
"RTN","PXRMEXHF",177,0)
 S SUCCESS=1
"RTN","PXRMEXHF",178,0)
 S IND=""
"RTN","PXRMEXHF",179,0)
 F  S IND=$O(SUCCESS(IND)) Q:+IND=0  D
"RTN","PXRMEXHF",180,0)
 . I 'SUCCESS(IND) S SUCCESS=0 Q
"RTN","PXRMEXHF",181,0)
 K ^TMP("PXRMEXHF",$J)
"RTN","PXRMEXHF",182,0)
 K ^TMP("PXRMEXLHF",$J)
"RTN","PXRMEXHF",183,0)
 Q
"RTN","PXRMEXHF",184,0)
 ;
"RTN","PXRMEXIC")
0^26^B32382685
"RTN","PXRMEXIC",1,0)
PXRMEXIC ; SLC/PKR/PJH - Routines to install repository entry components. ;12/28/2001
"RTN","PXRMEXIC",2,0)
 ;;1.5;CLINICAL REMINDERS;**5,7**;Jun 19, 2000
"RTN","PXRMEXIC",3,0)
 ;======================================================================
"RTN","PXRMEXIC",4,0)
FILE(PXRMRIEN,EXISTS,IND120,JND120,ACTION,ATTR,NAMECHG) ;Read and process a
"RTN","PXRMEXIC",5,0)
 ;file entry in repository entry PXRMRIEN. IND120 and JND120 are the
"RTN","PXRMEXIC",6,0)
 ;indexes for the component list. ACTION is the possible actions, they
"RTN","PXRMEXIC",7,0)
 ;are I=install, O=overwrite, C=copy to a new name. If the action is
"RTN","PXRMEXIC",8,0)
 ;C then NAMECHG will contain the new name.
"RTN","PXRMEXIC",9,0)
 I ACTION="S" Q
"RTN","PXRMEXIC",10,0)
 N DATA,FDA,FDAEND,FDASTART,FIELD,FILENUM
"RTN","PXRMEXIC",11,0)
 N IEN,IENS,IENREND,IENROOT,IENRSTR,IND,INDICES
"RTN","PXRMEXIC",12,0)
 N LINE,MSG,OFDA,ORGIEN,NEW01,PXRMEDOK,PXRMEXCH
"RTN","PXRMEXIC",13,0)
 N SRCIEN,TEMP,TOPFNUM
"RTN","PXRMEXIC",14,0)
 N WPLCNT,WPTMP
"RTN","PXRMEXIC",15,0)
 ;Set PXRMEDOK so files pointing to sponsors can be installed.
"RTN","PXRMEXIC",16,0)
 ;Set PXRMEXCH so national entries can be installed and prevent
"RTN","PXRMEXIC",17,0)
 ;execution of the input transform for custom logic fields.
"RTN","PXRMEXIC",18,0)
 S (PXRMEDOK,PXRMEXCH)=1
"RTN","PXRMEXIC",19,0)
 S TEMP=^PXD(811.8,PXRMRIEN,120,IND120,1,JND120,0)
"RTN","PXRMEXIC",20,0)
 S FDASTART=+$P(TEMP,U,2)
"RTN","PXRMEXIC",21,0)
 S FDAEND=+$P(TEMP,U,3)
"RTN","PXRMEXIC",22,0)
 S IENRSTR=+$P(TEMP,U,4)
"RTN","PXRMEXIC",23,0)
 S IENREND=+$P(TEMP,U,5)
"RTN","PXRMEXIC",24,0)
 F IND=FDASTART:1:FDAEND D
"RTN","PXRMEXIC",25,0)
 . S LINE=^PXD(811.8,PXRMRIEN,100,IND,0)
"RTN","PXRMEXIC",26,0)
 . S INDICES=$P(LINE,"~",1)
"RTN","PXRMEXIC",27,0)
 . S DATA=$P(LINE,"~",2)
"RTN","PXRMEXIC",28,0)
 . S FILENUM=$P(INDICES,";",1)
"RTN","PXRMEXIC",29,0)
 . S IENS=$P(INDICES,";",2)
"RTN","PXRMEXIC",30,0)
 . I IND=START S SRCIEN=+IENS
"RTN","PXRMEXIC",31,0)
 . S FIELD=$P(INDICES,";",3)
"RTN","PXRMEXIC",32,0)
 . I LINE["WP-start" D
"RTN","PXRMEXIC",33,0)
 .. S DATA="WPTMP("_IND_","_+FIELD_")"
"RTN","PXRMEXIC",34,0)
 .. S WPLCNT=$P(LINE,"~",3)
"RTN","PXRMEXIC",35,0)
 .. D WORDPROC(PXRMRIEN,.WPTMP,IND,+FIELD,.IND,WPLCNT)
"RTN","PXRMEXIC",36,0)
 . I (IND=START)&(FIELD=.01) D
"RTN","PXRMEXIC",37,0)
 ..;Save the top level file number.
"RTN","PXRMEXIC",38,0)
 .. S TOPFNUM=FILENUM
"RTN","PXRMEXIC",39,0)
 ..;If the action is copy let FileMan determine where to put it.
"RTN","PXRMEXIC",40,0)
 .. I ACTION="C" S IENROOT(SRCIEN)=""
"RTN","PXRMEXIC",41,0)
 ..;
"RTN","PXRMEXIC",42,0)
 ..;If the action is install try to install at the source ien. If
"RTN","PXRMEXIC",43,0)
 ..;an entry already exists at the source ien let FileMan determine
"RTN","PXRMEXIC",44,0)
 ..;where to put it.
"RTN","PXRMEXIC",45,0)
 .. I ACTION="I" D
"RTN","PXRMEXIC",46,0)
 ... S ORGIEN=+$$FIND1^DIC(FILENUM,"","Q","`"_SRCIEN)
"RTN","PXRMEXIC",47,0)
 ... I ORGIEN>0 S IENROOT(SRCIEN)=""
"RTN","PXRMEXIC",48,0)
 ... E  S IENROOT(SRCIEN)=SRCIEN
"RTN","PXRMEXIC",49,0)
 ..;
"RTN","PXRMEXIC",50,0)
 .. I ACTION="O" D
"RTN","PXRMEXIC",51,0)
 ... S ORGIEN=$$EXISTS^PXRMEXIU(FILENUM,DATA)
"RTN","PXRMEXIC",52,0)
 ... S IENROOT(SRCIEN)=""
"RTN","PXRMEXIC",53,0)
 .;
"RTN","PXRMEXIC",54,0)
 . S FDA(FILENUM,IENS,FIELD)=DATA
"RTN","PXRMEXIC",55,0)
 ;
"RTN","PXRMEXIC",56,0)
 ;Initialize the edit history.
"RTN","PXRMEXIC",57,0)
 D INIEH(TOPFNUM,IENS,.FDA,.WPTMP)
"RTN","PXRMEXIC",58,0)
 ;Build the IENROOT
"RTN","PXRMEXIC",59,0)
 F IND=IENRSTR:1:IENREND D
"RTN","PXRMEXIC",60,0)
 . I IND=0 Q
"RTN","PXRMEXIC",61,0)
 . S TEMP=^PXD(811.8,PXRMRIEN,100,IND,0)
"RTN","PXRMEXIC",62,0)
 . S IENROOT($P(TEMP,U,1))=$P(TEMP,U,2)
"RTN","PXRMEXIC",63,0)
 ;Check for name changes, i.e., the copy action.
"RTN","PXRMEXIC",64,0)
 D NAMECHG(.FDA,.NAMECHG,TOPFNUM)
"RTN","PXRMEXIC",65,0)
 ;Special handling for file 801.41
"RTN","PXRMEXIC",66,0)
 I TOPFNUM=801.41 D  Q:PXRMDONE
"RTN","PXRMEXIC",67,0)
 . I ACTION="O" D MERGE^PXRMEXU5(801.41,EXISTS,"15;18*",.FDA,.IENROOT,"R")
"RTN","PXRMEXIC",68,0)
 . D DLG^PXRMEXU4(.FDA,.NAMECHG)
"RTN","PXRMEXIC",69,0)
 ;
"RTN","PXRMEXIC",70,0)
 ;If the file number is 811.4 the user must have programmer
"RTN","PXRMEXIC",71,0)
 ;access to install it.
"RTN","PXRMEXIC",72,0)
 I (TOPFNUM=811.4)&(DUZ(0)'="@") D  Q
"RTN","PXRMEXIC",73,0)
 . W !,"Only programmers can install Reminder Computed Findings."
"RTN","PXRMEXIC",74,0)
 ;
"RTN","PXRMEXIC",75,0)
 ;Special handling for file 811.5.
"RTN","PXRMEXIC",76,0)
 I TOPFNUM=811.5 D  Q:'$D(FDA)
"RTN","PXRMEXIC",77,0)
 .;If the site has any findings already mapped merge them in.
"RTN","PXRMEXIC",78,0)
 . I ACTION="O" D MERGE^PXRMEXU5(811.5,EXISTS,"20*",.FDA,.IENROOT,"M")
"RTN","PXRMEXIC",79,0)
 . D TERM^PXRMEXIU(.FDA,.NAMECHG)
"RTN","PXRMEXIC",80,0)
 ;
"RTN","PXRMEXIC",81,0)
 ;Special handling for file 811.9.
"RTN","PXRMEXIC",82,0)
 I TOPFNUM=811.9 D
"RTN","PXRMEXIC",83,0)
 . D DEF^PXRMEXIU(.FDA,.NAMECHG)
"RTN","PXRMEXIC",84,0)
 .;Don't execute the input transform for custom logic fields.
"RTN","PXRMEXIC",85,0)
 . S PXRMEXCH=1
"RTN","PXRMEXIC",86,0)
 ;
"RTN","PXRMEXIC",87,0)
 ;Special handling for file 9999999.64.
"RTN","PXRMEXIC",88,0)
 I TOPFNUM=9999999.64 D
"RTN","PXRMEXIC",89,0)
 . D HF^PXRMEXIU(.FDA,.NAMECHG)
"RTN","PXRMEXIC",90,0)
 ;
"RTN","PXRMEXIC",91,0)
 ;If the action is overwrite do a test install before deleting the
"RTN","PXRMEXIC",92,0)
 ;original entry.
"RTN","PXRMEXIC",93,0)
 I ACTION="O" D
"RTN","PXRMEXIC",94,0)
 . K OFDA M OFDA=FDA
"RTN","PXRMEXIC",95,0)
 .;Make the .01 unique for the test install.
"RTN","PXRMEXIC",96,0)
 . S IENS=$O(FDA(TOPFNUM,""))
"RTN","PXRMEXIC",97,0)
 . S FDA(TOPFNUM,IENS,.01)="tmp"_$E(FDA(TOPFNUM,IENS,.01),1,32)
"RTN","PXRMEXIC",98,0)
 I $D(FDA) D UPDATE^DIE("E","FDA","IENROOT","MSG")
"RTN","PXRMEXIC",99,0)
 I $D(MSG) D
"RTN","PXRMEXIC",100,0)
 . W !,"The update failed, UPDATE^DIE returned the following error message:"
"RTN","PXRMEXIC",101,0)
 . D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMEXIC",102,0)
 . W !!,ATTR("FILE NAME")," entry ",$G(ATTR("PT01"))," did not get installed!"
"RTN","PXRMEXIC",103,0)
 . W !,"Examine the above error message for the reason.",!
"RTN","PXRMEXIC",104,0)
 . H 2
"RTN","PXRMEXIC",105,0)
 ;
"RTN","PXRMEXIC",106,0)
 ;If the action was overwrite and the orginal update worked put the
"RTN","PXRMEXIC",107,0)
 ;entry at its original ien.
"RTN","PXRMEXIC",108,0)
 I (ACTION="O")&('$D(MSG)) D
"RTN","PXRMEXIC",109,0)
 . D DELETE^PXRMEXFI(TOPFNUM,IENROOT(SRCIEN))
"RTN","PXRMEXIC",110,0)
 . D DELETE^PXRMEXFI(TOPFNUM,ORGIEN)
"RTN","PXRMEXIC",111,0)
 . S IENROOT(SRCIEN)=ORGIEN
"RTN","PXRMEXIC",112,0)
 . D UPDATE^DIE("E","OFDA","IENROOT","MSG")
"RTN","PXRMEXIC",113,0)
 Q
"RTN","PXRMEXIC",114,0)
 ;
"RTN","PXRMEXIC",115,0)
 ;======================================================================
"RTN","PXRMEXIC",116,0)
INIEH(FILENUM,IENS,FDA,WPTMP) ;If the file is a clinical reminder file and
"RTN","PXRMEXIC",117,0)
 ;it has an edit history initialize the history.
"RTN","PXRMEXIC",118,0)
 I (FILENUM<800)!(FILENUM>811.9) Q
"RTN","PXRMEXIC",119,0)
 ;
"RTN","PXRMEXIC",120,0)
 N IENS,SFN,TARGET,WP
"RTN","PXRMEXIC",121,0)
 D FIELD^DID(FILENUM,"EDIT HISTORY","","SPECIFIER","TARGET")
"RTN","PXRMEXIC",122,0)
 S SFN=+$G(TARGET("SPECIFIER"))
"RTN","PXRMEXIC",123,0)
 I SFN=0 Q
"RTN","PXRMEXIC",124,0)
 S IENS=$O(FDA(SFN,""))
"RTN","PXRMEXIC",125,0)
 I IENS="" Q
"RTN","PXRMEXIC",126,0)
 S FDA(SFN,IENS,.01)=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMEXIC",127,0)
 S FDA(SFN,IENS,1)=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXRMEXIC",128,0)
 ;The word-processing field is set when the packing is done.
"RTN","PXRMEXIC",129,0)
 S WP=FDA(SFN,IENS,2)
"RTN","PXRMEXIC",130,0)
 K @WP
"RTN","PXRMEXIC",131,0)
 S @WP@(1)="Exchange Install"
"RTN","PXRMEXIC",132,0)
 Q
"RTN","PXRMEXIC",133,0)
 ;
"RTN","PXRMEXIC",134,0)
 ;======================================================================
"RTN","PXRMEXIC",135,0)
NAMECHG(FDA,NAMECHG,FILENUM) ;If this component has been copied to a new
"RTN","PXRMEXIC",136,0)
 ;name make the change.
"RTN","PXRMEXIC",137,0)
 N CLASS,IENS,PT01
"RTN","PXRMEXIC",138,0)
 S IENS=$O(FDA(FILENUM,""))
"RTN","PXRMEXIC",139,0)
 S PT01=FDA(FILENUM,IENS,.01)
"RTN","PXRMEXIC",140,0)
 I $D(NAMECHG(FILENUM,PT01)) D
"RTN","PXRMEXIC",141,0)
 . S FDA(FILENUM,IENS,.01)=NAMECHG(FILENUM,PT01)
"RTN","PXRMEXIC",142,0)
 . I (FILENUM<801.41)!(FILENUM>811.9) Q
"RTN","PXRMEXIC",143,0)
 .;Once a component has been copied CLASS can no longer be national.
"RTN","PXRMEXIC",144,0)
 . S CLASS=$G(FDA(FILENUM,IENS,100))
"RTN","PXRMEXIC",145,0)
 . I CLASS["N" S FDA(FILENUM,IENS,100)="LOCAL"
"RTN","PXRMEXIC",146,0)
 .;The Sponsor is also removed.
"RTN","PXRMEXIC",147,0)
 . K FDA(FILENUM,IENS,101)
"RTN","PXRMEXIC",148,0)
 Q
"RTN","PXRMEXIC",149,0)
 ;
"RTN","PXRMEXIC",150,0)
 ;======================================================================
"RTN","PXRMEXIC",151,0)
RTNLD(PXRMRIEN,START,END,ATTR,RTN) ;Load a routine from the repository into
"RTN","PXRMEXIC",152,0)
 ;the array RTN.
"RTN","PXRMEXIC",153,0)
 N IND,LINE,LN,ROUTINE
"RTN","PXRMEXIC",154,0)
 S LINE=^PXD(811.8,PXRMRIEN,100,START,0)
"RTN","PXRMEXIC",155,0)
 S ROUTINE=$P(LINE,";",1)
"RTN","PXRMEXIC",156,0)
 S ROUTINE=$TR(ROUTINE," ","")
"RTN","PXRMEXIC",157,0)
 S ATTR("FILE NUMBER")=0
"RTN","PXRMEXIC",158,0)
 S ATTR("NAME")=$P(LINE,";",1)
"RTN","PXRMEXIC",159,0)
 S ATTR("NAME")=$TR(ATTR("NAME")," ","")
"RTN","PXRMEXIC",160,0)
 S ATTR("MIN FIELD LENGTH")=3
"RTN","PXRMEXIC",161,0)
 S ATTR("FIELD LENGTH")=8
"RTN","PXRMEXIC",162,0)
 S LN=0
"RTN","PXRMEXIC",163,0)
 F IND=START:1:END D
"RTN","PXRMEXIC",164,0)
 . S LN=LN+1
"RTN","PXRMEXIC",165,0)
 . S LINE=^PXD(811.8,PXRMRIEN,100,IND,0)
"RTN","PXRMEXIC",166,0)
 . S RTN(LN,0)=LINE
"RTN","PXRMEXIC",167,0)
 Q
"RTN","PXRMEXIC",168,0)
 ;
"RTN","PXRMEXIC",169,0)
 ;======================================================================
"RTN","PXRMEXIC",170,0)
RTNSAVE(RTN,NAME) ;Save the routine loaded in RTN to the name
"RTN","PXRMEXIC",171,0)
 ;found in NAMECHG.
"RTN","PXRMEXIC",172,0)
 N DIE,XCN
"RTN","PXRMEXIC",173,0)
 ;%ZOSF("SAVE") requires a global.
"RTN","PXRMEXIC",174,0)
 K ^TMP($J,"PXRMRTN")
"RTN","PXRMEXIC",175,0)
 S DIE="^TMP($J,""PXRMRTN"","
"RTN","PXRMEXIC",176,0)
 M ^TMP($J,"PXRMRTN")=RTN
"RTN","PXRMEXIC",177,0)
 S XCN=0
"RTN","PXRMEXIC",178,0)
 S X=NAME
"RTN","PXRMEXIC",179,0)
 X ^%ZOSF("SAVE")
"RTN","PXRMEXIC",180,0)
 K ^TMP($J,"PXRMRTN")
"RTN","PXRMEXIC",181,0)
 Q
"RTN","PXRMEXIC",182,0)
 ;
"RTN","PXRMEXIC",183,0)
 ;======================================================================
"RTN","PXRMEXIC",184,0)
WORDPROC(PXRMRIEN,WPTMP,I1,I2,IND,WPLCNT) ;Load WPTMP with the word
"RTN","PXRMEXIC",185,0)
 ;processing field.
"RTN","PXRMEXIC",186,0)
 N I3
"RTN","PXRMEXIC",187,0)
 F I3=1:1:WPLCNT D
"RTN","PXRMEXIC",188,0)
 . S IND=IND+1
"RTN","PXRMEXIC",189,0)
 . S WPTMP(I1,I2,I3)=$G(^PXD(811.8,PXRMRIEN,100,IND,0))
"RTN","PXRMEXIC",190,0)
 Q
"RTN","PXRMEXIC",191,0)
 ;
"RTN","PXRMEXID")
0^21^B48057497
"RTN","PXRMEXID",1,0)
PXRMEXID ;SLC/PJH - Reminder Dialog Exchange Install Routine. ;12/18/2001
"RTN","PXRMEXID",2,0)
 ;;1.5;CLINICAL REMINDERS;**5,7**;Jun 19, 2001
"RTN","PXRMEXID",3,0)
 ;
"RTN","PXRMEXID",4,0)
 ;=====================================================================
"RTN","PXRMEXID",5,0)
 ;
"RTN","PXRMEXID",6,0)
 ;Install all components in an exchange file entry
"RTN","PXRMEXID",7,0)
 ;------------------------------------------------
"RTN","PXRMEXID",8,0)
INSALL N ALL,IND,PXRMDONE
"RTN","PXRMEXID",9,0)
 N DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXID",10,0)
 K ^TMP("PXRMEXIA",$J)
"RTN","PXRMEXID",11,0)
 ;
"RTN","PXRMEXID",12,0)
 ;Set the install date and time.
"RTN","PXRMEXID",13,0)
 S IND="",PXRMDONE=0,^TMP("PXRMEXIA",$J,"DT")=$$NOW^XLFDT
"RTN","PXRMEXID",14,0)
 ;
"RTN","PXRMEXID",15,0)
 ;Go to full screen mode.
"RTN","PXRMEXID",16,0)
 D FULL^VALM1
"RTN","PXRMEXID",17,0)
 ;
"RTN","PXRMEXID",18,0)
 ;Check if all or none exists - option to install all unchanged
"RTN","PXRMEXID",19,0)
 N DNAME
"RTN","PXRMEXID",20,0)
 S DNAME=$G(^TMP("PXRMEXTMP",$J,"PXRMDNAM"))
"RTN","PXRMEXID",21,0)
 D EXIST^PXRMEXIX(.ALL,DNAME,"reminder dialog","")
"RTN","PXRMEXID",22,0)
 ;
"RTN","PXRMEXID",23,0)
 ;Lock the entire file
"RTN","PXRMEXID",24,0)
 Q:'$$LOCK
"RTN","PXRMEXID",25,0)
 ;
"RTN","PXRMEXID",26,0)
 ;Install all components
"RTN","PXRMEXID",27,0)
 F  S IND=$O(^TMP("PXRMEXLD",$J,"SEL",IND),-1) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMEXID",28,0)
 .D INSCOM(IND,1)
"RTN","PXRMEXID",29,0)
 ;
"RTN","PXRMEXID",30,0)
 ;Clear lock
"RTN","PXRMEXID",31,0)
 D UNLOCK
"RTN","PXRMEXID",32,0)
 ;
"RTN","PXRMEXID",33,0)
 ;Rebuild display workfile
"RTN","PXRMEXID",34,0)
 D DISP^PXRMEXLD(PXRMMODE)
"RTN","PXRMEXID",35,0)
 ;
"RTN","PXRMEXID",36,0)
 K PXRMNMCH
"RTN","PXRMEXID",37,0)
 Q
"RTN","PXRMEXID",38,0)
 ;
"RTN","PXRMEXID",39,0)
 ;Build list of descendents names
"RTN","PXRMEXID",40,0)
 ;-------------------------------
"RTN","PXRMEXID",41,0)
INSBLD(NAME,INAME) ;
"RTN","PXRMEXID",42,0)
 N DNAME,IDATA,ISEQ
"RTN","PXRMEXID",43,0)
 S ISEQ=0
"RTN","PXRMEXID",44,0)
 F  S ISEQ=$O(^TMP("PXRMEXTMP",$J,"DMAP",NAME,ISEQ)) Q:'ISEQ  D
"RTN","PXRMEXID",45,0)
 .S IDATA=$G(^TMP("PXRMEXTMP",$J,"DMAP",NAME,ISEQ)) Q:IDATA=""
"RTN","PXRMEXID",46,0)
 .S DNAME=$P(IDATA,U) Q:DNAME=""  Q:$$PXRM(DNAME)  S INAME(DNAME)=""
"RTN","PXRMEXID",47,0)
 .;Check for descendants
"RTN","PXRMEXID",48,0)
 .I $D(^TMP("PXRMEXTMP",$J,"DMAP",DNAME)) D INSBLD(DNAME,.INAME)
"RTN","PXRMEXID",49,0)
 Q
"RTN","PXRMEXID",50,0)
 ;
"RTN","PXRMEXID",51,0)
 ;Install component IND
"RTN","PXRMEXID",52,0)
 ;---------------------
"RTN","PXRMEXID",53,0)
INSCOM(IND,SILENT) ;
"RTN","PXRMEXID",54,0)
 N ACTION,ATTR,DTYP,EXIEN,END,EXISTS,FILENUM,IND120,JND120
"RTN","PXRMEXID",55,0)
 N NEWPT01,PT01,START,TEMP
"RTN","PXRMEXID",56,0)
 S TEMP=^TMP("PXRMEXLD",$J,"SEL",IND),FILENUM=$P(TEMP,U,1)
"RTN","PXRMEXID",57,0)
 S EXISTS=$P(TEMP,U,4),START=$P(TEMP,U,2),END=$P(TEMP,U,3) Q:START=""
"RTN","PXRMEXID",58,0)
 S JND120=$P(TEMP,U,6) Q:'JND120
"RTN","PXRMEXID",59,0)
 S IND120=$P(TEMP,U,5) Q:'IND120
"RTN","PXRMEXID",60,0)
 S TEMP=^PXD(811.8,PXRMRIEN,100,START,0),PT01=$P(TEMP,"~",2) Q:PT01=""
"RTN","PXRMEXID",61,0)
 S DTYP=$G(^TMP("PXRMEXTMP",$J,"DTYP",PT01))
"RTN","PXRMEXID",62,0)
 I DTYP="dialog" S DTYP="reminder dialog"
"RTN","PXRMEXID",63,0)
 ;
"RTN","PXRMEXID",64,0)
 ;Go to full screen mode.
"RTN","PXRMEXID",65,0)
 D FULL^VALM1
"RTN","PXRMEXID",66,0)
 ;
"RTN","PXRMEXID",67,0)
 ;Check for descendents
"RTN","PXRMEXID",68,0)
 I 'SILENT,$$INSDSC(PT01) D  Q:PXRMDONE
"RTN","PXRMEXID",69,0)
 .N ANS,INDS,TEXT
"RTN","PXRMEXID",70,0)
 .S TEXT(1)=PT01_" ("_DTYP_") contains sub-components."
"RTN","PXRMEXID",71,0)
 .S TEXT="Install all sub-components with the "_DTYP_": "
"RTN","PXRMEXID",72,0)
 .;Give option to install all descendents
"RTN","PXRMEXID",73,0)
 .D ASK^PXRMEXIX(.ANS,.TEXT,1) Q:PXRMDONE
"RTN","PXRMEXID",74,0)
 .I $G(ANS)="Y" D
"RTN","PXRMEXID",75,0)
 ..S INDS=IND
"RTN","PXRMEXID",76,0)
 ..N IDATA,INAME,IND
"RTN","PXRMEXID",77,0)
 ..;Build list of decendents to install
"RTN","PXRMEXID",78,0)
 ..D INSBLD(PT01,.INAME)
"RTN","PXRMEXID",79,0)
 ..;Check if all or none exists - option to install all unchanged
"RTN","PXRMEXID",80,0)
 ..D EXIST^PXRMEXIX(.ALL,PT01,DTYP,.INAME) Q:PXRMDONE
"RTN","PXRMEXID",81,0)
 ..;Start at the end of the list
"RTN","PXRMEXID",82,0)
 ..S IND=""
"RTN","PXRMEXID",83,0)
 ..F  S IND=$O(^TMP("PXRMEXLD",$J,"SEL",IND),-1) Q:PXRMDONE!(IND=INDS)  D
"RTN","PXRMEXID",84,0)
 ...N PT01,START,TEMP
"RTN","PXRMEXID",85,0)
 ...S TEMP=^TMP("PXRMEXLD",$J,"SEL",IND),START=$P(TEMP,U,2) Q:START=""
"RTN","PXRMEXID",86,0)
 ...S PT01=$P(^PXD(811.8,PXRMRIEN,100,START,0),"~",2) Q:PT01=""
"RTN","PXRMEXID",87,0)
 ...;Ignore namechanges
"RTN","PXRMEXID",88,0)
 ...I $D(PXRMNMCH(801.41,PT01)) Q
"RTN","PXRMEXID",89,0)
 ...;Only install descendents
"RTN","PXRMEXID",90,0)
 ...I $D(INAME(PT01)) D INSCOM(IND,1)
"RTN","PXRMEXID",91,0)
 ;
"RTN","PXRMEXID",92,0)
 D SETATTR^PXRMEXFI(.ATTR,FILENUM)
"RTN","PXRMEXID",93,0)
 ;Double check that it hasn't been installed
"RTN","PXRMEXID",94,0)
 S EXIEN=$$EXISTS^PXRMEXIU(801.41,PT01)
"RTN","PXRMEXID",95,0)
 I EXIEN,'EXISTS S EXISTS=1
"RTN","PXRMEXID",96,0)
 ;If all components installed the default is 'Install or Overwrite'
"RTN","PXRMEXID",97,0)
 S:ALL ACTION=$S(EXISTS:"O",1:"I"),ATTR("PT01")=PT01,PXRMNMCH="",NEWPT01=""
"RTN","PXRMEXID",98,0)
 S:'ALL ACTION=$$GETFACT^PXRMEXFI(PT01,.ATTR,.NEWPT01,.PXRMNMCH,EXISTS)
"RTN","PXRMEXID",99,0)
 ;Save what was done for the installation summary.
"RTN","PXRMEXID",100,0)
 S ^TMP("PXRMEXIA",$J,IND,ATTR("FILE NAME"),ATTR("PT01"),ACTION)=NEWPT01
"RTN","PXRMEXID",101,0)
 ;Clear heading
"RTN","PXRMEXID",102,0)
 S VALMHDR(2)=""
"RTN","PXRMEXID",103,0)
 ;If the ACTION is Quit then quit the entire install.
"RTN","PXRMEXID",104,0)
 I ACTION="Q" S PXRMDONE=1 S VALMHDR(2)="Install not completed" Q
"RTN","PXRMEXID",105,0)
 ;If the ACTION is Skip then skip this component.
"RTN","PXRMEXID",106,0)
 I ACTION="S" S VALMBCK="R" Q
"RTN","PXRMEXID",107,0)
 ;If the ACTION is Replace then skip this component.
"RTN","PXRMEXID",108,0)
 I ACTION="P" S VALMBCK="R",VALMHDR(2)=PT01_" replaced with "_NEWPT01 Q
"RTN","PXRMEXID",109,0)
 ;Install this component.
"RTN","PXRMEXID",110,0)
 D FILE^PXRMEXIC(PXRMRIEN,EXIEN,IND120,JND120,ACTION,.ATTR,.PXRMNMCH)
"RTN","PXRMEXID",111,0)
 S VALMBCK="R"
"RTN","PXRMEXID",112,0)
 I PXRMDONE S VALMHDR(2)="Install aborted" Q
"RTN","PXRMEXID",113,0)
 I NEWPT01="" S VALMHDR(2)=PT01_" ("_DTYP_") installed from exchange file."
"RTN","PXRMEXID",114,0)
 I NEWPT01'="" S VALMHDR(2)=PT01_" installed as "_NEWPT01_"."
"RTN","PXRMEXID",115,0)
 ;If reminder dialog - disable and give option to link
"RTN","PXRMEXID",116,0)
 I DTYP="reminder dialog" D
"RTN","PXRMEXID",117,0)
 .N DNAME
"RTN","PXRMEXID",118,0)
 .S DNAME=PT01
"RTN","PXRMEXID",119,0)
 .I NEWPT01'="" S DNAME=NEWPT01
"RTN","PXRMEXID",120,0)
 .D INSLNK(DNAME)
"RTN","PXRMEXID",121,0)
 Q
"RTN","PXRMEXID",122,0)
 ;
"RTN","PXRMEXID",123,0)
 ;Check for descendents (either elements or prompts)
"RTN","PXRMEXID",124,0)
 ;--------------------------------------------------
"RTN","PXRMEXID",125,0)
INSDSC(NAME) ;
"RTN","PXRMEXID",126,0)
 N DATA,DFOUND,SUB
"RTN","PXRMEXID",127,0)
 S DFOUND=0,SUB=0
"RTN","PXRMEXID",128,0)
 F  S SUB=$O(^TMP("PXRMEXTMP",$J,"DMAP",NAME,SUB)) Q:'SUB  D  Q:DFOUND
"RTN","PXRMEXID",129,0)
 .S DATA=$G(^TMP("PXRMEXTMP",$J,"DMAP",NAME,SUB)) Q:DATA=""
"RTN","PXRMEXID",130,0)
 .I '$$PXRM($P(DATA,U)) S DFOUND=1
"RTN","PXRMEXID",131,0)
 Q DFOUND
"RTN","PXRMEXID",132,0)
 ;
"RTN","PXRMEXID",133,0)
 ;Option to link dialog to a reminder
"RTN","PXRMEXID",134,0)
 ;-----------------------------------
"RTN","PXRMEXID",135,0)
INSLNK(DNAME) ;
"RTN","PXRMEXID",136,0)
 N DIEN,DISABLE,DSRC,RNAME
"RTN","PXRMEXID",137,0)
 N DA,DIE,DR
"RTN","PXRMEXID",138,0)
 ;Disable
"RTN","PXRMEXID",139,0)
 S DIEN=$O(^PXRMD(801.41,"B",DNAME,"")) Q:'DIEN
"RTN","PXRMEXID",140,0)
 ;Set dialog as disabled
"RTN","PXRMEXID",141,0)
 S DISABLE="DISABLED IN EXCHANGE"
"RTN","PXRMEXID",142,0)
 ;Except for National dialogs
"RTN","PXRMEXID",143,0)
 I $P(^PXRMD(801.41,DIEN,100),U)="N" S DISABLE=""
"RTN","PXRMEXID",144,0)
 ;
"RTN","PXRMEXID",145,0)
 S DR="3///^S X=DISABLE",DIE="^PXRMD(801.41,",DA=$P(DIEN,U)
"RTN","PXRMEXID",146,0)
 D ^DIE
"RTN","PXRMEXID",147,0)
 ;
"RTN","PXRMEXID",148,0)
 ;Quit if already linked
"RTN","PXRMEXID",149,0)
 I $D(^PXD(811.9,"AG",DIEN)) Q
"RTN","PXRMEXID",150,0)
 ;
"RTN","PXRMEXID",151,0)
 S RNAME=""
"RTN","PXRMEXID",152,0)
 ;If reminder was renamed use as default
"RTN","PXRMEXID",153,0)
 I $D(PXRMNMCH(811.9)) D
"RTN","PXRMEXID",154,0)
 .S RNAME=$O(PXRMNMCH(811.9,"")) Q:RNAME=""
"RTN","PXRMEXID",155,0)
 .S RNAME=$G(PXRMNMCH(811.9,RNAME))
"RTN","PXRMEXID",156,0)
 ;Otherwise use original reminder name as default
"RTN","PXRMEXID",157,0)
 I RNAME="" D
"RTN","PXRMEXID",158,0)
 .N DATA,FOUND,RIEN,SUB
"RTN","PXRMEXID",159,0)
 .S SUB=0,FOUND=0
"RTN","PXRMEXID",160,0)
 .F  S SUB=$O(^TMP("PXRMEXLC",$J,"SEL",SUB),-1) Q:'SUB  Q:FOUND  D
"RTN","PXRMEXID",161,0)
 ..S DATA=$G(^TMP("PXRMEXLC",$J,"SEL",SUB)) Q:$P(DATA,U)'=811.9
"RTN","PXRMEXID",162,0)
 ..S RIEN=$P(DATA,U,4),FOUND=1 Q:'RIEN
"RTN","PXRMEXID",163,0)
 ..S RNAME=$P($G(^PXD(811.9,RIEN,0)),U)
"RTN","PXRMEXID",164,0)
 ;
"RTN","PXRMEXID",165,0)
 W !!,"Reminder Dialog "_DNAME_" is not linked to a reminder.",!
"RTN","PXRMEXID",166,0)
 ;Select reminder to link
"RTN","PXRMEXID",167,0)
 S IEN=$$SELECT^PXRMINQ("^PXD(811.9,","Select Reminder to Link: ",RNAME)
"RTN","PXRMEXID",168,0)
 ;Update reminder link in #811.9
"RTN","PXRMEXID",169,0)
 I $P(IEN,U)'=-1 D
"RTN","PXRMEXID",170,0)
 .N DA,DIE,DIK,DR
"RTN","PXRMEXID",171,0)
 .;Set reminder to dialog pointer
"RTN","PXRMEXID",172,0)
 .S DR="51///^S X=DNAME",DIE="^PXD(811.9,",DA=$P(IEN,U)
"RTN","PXRMEXID",173,0)
 .D ^DIE
"RTN","PXRMEXID",174,0)
 .;Reindex the AG cross-references.
"RTN","PXRMEXID",175,0)
 .S DIK="^PXD(811.9,",DA=$P(IEN,U)
"RTN","PXRMEXID",176,0)
 .D IX^DIK
"RTN","PXRMEXID",177,0)
 .;If source reminder is null replace with linked reminder
"RTN","PXRMEXID",178,0)
 .S DSRC=$P($G(^PXRMD(801.41,DIEN,0)),U,2) Q:DSRC
"RTN","PXRMEXID",179,0)
 .S DSRC=$P(IEN,U)
"RTN","PXRMEXID",180,0)
 .S DR="2///^S X=DSRC",DIE="^PXRMD(801.41,",DA=$P(DIEN,U)
"RTN","PXRMEXID",181,0)
 .D ^DIE
"RTN","PXRMEXID",182,0)
 ;
"RTN","PXRMEXID",183,0)
 Q
"RTN","PXRMEXID",184,0)
 ;Install Selected Components
"RTN","PXRMEXID",185,0)
 ;---------------------------
"RTN","PXRMEXID",186,0)
INSSEL N ALL,IND,PXRMDONE,VALMY
"RTN","PXRMEXID",187,0)
 N DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXID",188,0)
 N VALMBG,VALMLST
"RTN","PXRMEXID",189,0)
 S VALMBG=1,VALMLST=+$O(^TMP("PXRMEXLD",$J,"IDX",""),-1)
"RTN","PXRMEXID",190,0)
 ;Get the list to install.
"RTN","PXRMEXID",191,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMEXID",192,0)
 ;
"RTN","PXRMEXID",193,0)
 K ^TMP("PXRMEXIA",$J)
"RTN","PXRMEXID",194,0)
 ;Set the install date and time.
"RTN","PXRMEXID",195,0)
 S ALL="",PXRMDONE=0,^TMP("PXRMEXIA",$J,"DT")=$$NOW^XLFDT
"RTN","PXRMEXID",196,0)
 ;
"RTN","PXRMEXID",197,0)
 ;Lock the entire file
"RTN","PXRMEXID",198,0)
 Q:'$$LOCK
"RTN","PXRMEXID",199,0)
 ;
"RTN","PXRMEXID",200,0)
 S IND=0
"RTN","PXRMEXID",201,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMEXID",202,0)
 .D INSCOM(IND,0)
"RTN","PXRMEXID",203,0)
 ;
"RTN","PXRMEXID",204,0)
 ;Clear locks
"RTN","PXRMEXID",205,0)
 D UNLOCK
"RTN","PXRMEXID",206,0)
 ;
"RTN","PXRMEXID",207,0)
 ;Rebuild workfile
"RTN","PXRMEXID",208,0)
 D DISP^PXRMEXLD(PXRMMODE)
"RTN","PXRMEXID",209,0)
 ;
"RTN","PXRMEXID",210,0)
 Q
"RTN","PXRMEXID",211,0)
 ;
"RTN","PXRMEXID",212,0)
 ;Install the exchange entry PXRMRIEN
"RTN","PXRMEXID",213,0)
 ;-----------------------------------
"RTN","PXRMEXID",214,0)
INSTALL N IEN,IND,VALMY
"RTN","PXRMEXID",215,0)
 ;Make sure the component list exists for this entry. PXRMRIEN is
"RTN","PXRMEXID",216,0)
 ;set in INSTALL^PXRMEXLR.
"RTN","PXRMEXID",217,0)
 I '$D(^PXD(811.8,PXRMRIEN,120)) D CLIST^PXRMEXU1(.PXRMRIEN)
"RTN","PXRMEXID",218,0)
 I PXRMRIEN=-1 Q
"RTN","PXRMEXID",219,0)
 ;Format the component list for display.
"RTN","PXRMEXID",220,0)
 D CDISP^PXRMEXLC(PXRMRIEN)
"RTN","PXRMEXID",221,0)
 S VALMBCK="R",VALMCNT=$O(^TMP("PXRMEXLD",$J,"IDX"),-1)
"RTN","PXRMEXID",222,0)
 Q
"RTN","PXRMEXID",223,0)
 ;
"RTN","PXRMEXID",224,0)
PXRM(NAME) ;Validate prompts
"RTN","PXRMEXID",225,0)
 ;
"RTN","PXRMEXID",226,0)
 ;Ignore non-PXRM
"RTN","PXRMEXID",227,0)
 I $E(NAME,1,4)'="PXRM" Q 0
"RTN","PXRMEXID",228,0)
 ;
"RTN","PXRMEXID",229,0)
 ;Check if this is a national code
"RTN","PXRMEXID",230,0)
 N DIEN
"RTN","PXRMEXID",231,0)
 S DIEN=$O(^PXRMD(801.41,"B",NAME,""))
"RTN","PXRMEXID",232,0)
 ;If not found abort
"RTN","PXRMEXID",233,0)
 I 'DIEN Q 0
"RTN","PXRMEXID",234,0)
 ;Check class
"RTN","PXRMEXID",235,0)
 I $P($G(^PXRMD(801.41,DIEN,100)),U)="N" Q 1
"RTN","PXRMEXID",236,0)
 ;Otherwise local
"RTN","PXRMEXID",237,0)
 Q 0
"RTN","PXRMEXID",238,0)
 ;
"RTN","PXRMEXID",239,0)
 ;Lock the dialog file
"RTN","PXRMEXID",240,0)
LOCK() ;
"RTN","PXRMEXID",241,0)
 L +^PXRMD(801.41):0 I  Q 1
"RTN","PXRMEXID",242,0)
 E  W !,"Another user is editing this file, try later" H 2
"RTN","PXRMEXID",243,0)
 Q 0
"RTN","PXRMEXID",244,0)
 ;
"RTN","PXRMEXID",245,0)
 ;Clear lock
"RTN","PXRMEXID",246,0)
UNLOCK L -^PXRMD(801.41)
"RTN","PXRMEXID",247,0)
 Q
"RTN","PXRMEXIU")
0^30^B61838266
"RTN","PXRMEXIU",1,0)
PXRMEXIU ; SLC/PKR/PJH - Utilities for installing repository entries. ;01/03/2002
"RTN","PXRMEXIU",2,0)
 ;;1.5;CLINICAL REMINDERS;**5,7**;Jun 19, 2000
"RTN","PXRMEXIU",3,0)
 ;======================================================================
"RTN","PXRMEXIU",4,0)
DEF(FDA,NAMECHG) ;Check the reminder definition to make sure the related
"RTN","PXRMEXIU",5,0)
 ;reminder exists and all the findings exist.
"RTN","PXRMEXIU",6,0)
 N ABBR,ALIST,IEN,IENS,FILENUM,FINDING,LRD,OFINDING,PT01
"RTN","PXRMEXIU",7,0)
 N RRG,SPONSOR,TEXT
"RTN","PXRMEXIU",8,0)
 S IENS=$O(FDA(811.9,""))
"RTN","PXRMEXIU",9,0)
 ;
"RTN","PXRMEXIU",10,0)
 ;Related reminder guideline field 1.4.
"RTN","PXRMEXIU",11,0)
 I $D(FDA(811.9,IENS,1.4)) D
"RTN","PXRMEXIU",12,0)
 . S RRG=FDA(811.9,IENS,1.4)
"RTN","PXRMEXIU",13,0)
 . S IEN=$$EXISTS^PXRMEXIU(811.9,RRG)
"RTN","PXRMEXIU",14,0)
 . I IEN=0 D
"RTN","PXRMEXIU",15,0)
 ..;Get replacement.
"RTN","PXRMEXIU",16,0)
 .. N DIC,X,Y
"RTN","PXRMEXIU",17,0)
 .. S TEXT(1)=" "
"RTN","PXRMEXIU",18,0)
 .. S TEXT(2)="The Related Reminder Guideline does not exist on your system!"
"RTN","PXRMEXIU",19,0)
 .. S TEXT(3)="It is "_RRG_" input a replacement or ^ to leave it empty."
"RTN","PXRMEXIU",20,0)
 .. D MES^XPDUTL(.TEXT)
"RTN","PXRMEXIU",21,0)
 ..;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXIU",22,0)
 .. I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXIU",23,0)
 .. S DIC=811.9,DIC(0)="AEMQ"
"RTN","PXRMEXIU",24,0)
 .. D ^DIC
"RTN","PXRMEXIU",25,0)
 .. I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXIU",26,0)
 .. I Y=-1 K FDA(811.9,IENS,1.4)
"RTN","PXRMEXIU",27,0)
 .. E  S FDA(811.9,IENS,1.4)=$P(Y,U,2)
"RTN","PXRMEXIU",28,0)
 ;
"RTN","PXRMEXIU",29,0)
 ;Sponsor field 101.
"RTN","PXRMEXIU",30,0)
 I $D(FDA(811.9,IENS,101)) D
"RTN","PXRMEXIU",31,0)
 . S SPONSOR=FDA(811.9,IENS,101)
"RTN","PXRMEXIU",32,0)
 . S IEN=$$FIND1^DIC(811.6,"","",SPONSOR)
"RTN","PXRMEXIU",33,0)
 . I IEN=0 D
"RTN","PXRMEXIU",34,0)
 ..;Get replacement.
"RTN","PXRMEXIU",35,0)
 .. N DIC,X,Y
"RTN","PXRMEXIU",36,0)
 .. S TEXT(1)=" "
"RTN","PXRMEXIU",37,0)
 .. S TEXT(2)="The Sponsor does not exist on your system!"
"RTN","PXRMEXIU",38,0)
 .. S TEXT(3)="It is "_SPONSOR_" input a replacement or ^ to leave it empty."
"RTN","PXRMEXIU",39,0)
 .. D MES^XPDUTL(.TEXT)
"RTN","PXRMEXIU",40,0)
 ..;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXIU",41,0)
 .. I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXIU",42,0)
 .. S DIC=811.6,DIC(0)="AEMQ"
"RTN","PXRMEXIU",43,0)
 .. D ^DIC
"RTN","PXRMEXIU",44,0)
 .. I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXIU",45,0)
 .. I Y=-1 K FDA(811.9,IENS,101)
"RTN","PXRMEXIU",46,0)
 .. E  S FDA(811.9,IENS,101)=$P(Y,U,2)
"RTN","PXRMEXIU",47,0)
 ;
"RTN","PXRMEXIU",48,0)
 ;Linked reminder dialog field 51.
"RTN","PXRMEXIU",49,0)
 S LRD=+$G(FDA(811.9,IENS,51))
"RTN","PXRMEXIU",50,0)
 S IEN=$$EXISTS^PXRMEXIU(801.41,LRD)
"RTN","PXRMEXIU",51,0)
 I IEN=0 K FDA(811.9,IENS,51)
"RTN","PXRMEXIU",52,0)
 ;
"RTN","PXRMEXIU",53,0)
 ;Search the finding multiple for replacements and missing findings.
"RTN","PXRMEXIU",54,0)
 D BLDALIST^PXRMVPTR(811.902,.01,.ALIST)
"RTN","PXRMEXIU",55,0)
 S IENS=""
"RTN","PXRMEXIU",56,0)
 F  S IENS=$O(FDA(811.902,IENS)) Q:IENS=""  D
"RTN","PXRMEXIU",57,0)
 . S (FINDING,OFINDING)=FDA(811.902,IENS,.01)
"RTN","PXRMEXIU",58,0)
 . S ABBR=$P(FINDING,".",1)
"RTN","PXRMEXIU",59,0)
 . S PT01=$P(FINDING,".",2)
"RTN","PXRMEXIU",60,0)
 . S FILENUM=$P(ALIST(ABBR),U,1)
"RTN","PXRMEXIU",61,0)
 . I $D(NAMECHG(FILENUM,PT01)) D
"RTN","PXRMEXIU",62,0)
 .. S FINDING=ABBR_"."_NAMECHG(FILENUM,PT01)
"RTN","PXRMEXIU",63,0)
 .. S FDA(811.902,IENS,.01)=FINDING
"RTN","PXRMEXIU",64,0)
 . S IEN=+$$VFIND1(FINDING,.ALIST)
"RTN","PXRMEXIU",65,0)
 . I IEN=0 D
"RTN","PXRMEXIU",66,0)
 ..;Get replacement
"RTN","PXRMEXIU",67,0)
 .. N DIC,DUOUT,TEXT,X,Y
"RTN","PXRMEXIU",68,0)
 .. S TEXT="Finding "_FINDING_" does not exist input a replacement or ^ to quit the install."
"RTN","PXRMEXIU",69,0)
 .. D BMES^XPDUTL(TEXT)
"RTN","PXRMEXIU",70,0)
 .. S DIC=FILENUM
"RTN","PXRMEXIU",71,0)
 .. S DIC(0)="AEMNQ"
"RTN","PXRMEXIU",72,0)
 .. S Y=-1
"RTN","PXRMEXIU",73,0)
 .. F  Q:+Y'=-1  D
"RTN","PXRMEXIU",74,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXIU",75,0)
 ... I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXIU",76,0)
 ... D ^DIC
"RTN","PXRMEXIU",77,0)
 ... I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXIU",78,0)
 ... I $D(DUOUT) D
"RTN","PXRMEXIU",79,0)
 .... S Y=""
"RTN","PXRMEXIU",80,0)
 .... K FDA
"RTN","PXRMEXIU",81,0)
 .. I Y="" K FDA(811.902,IENS)
"RTN","PXRMEXIU",82,0)
 .. E  D
"RTN","PXRMEXIU",83,0)
 ... S FINDING=ABBR_"."_$P(Y,U,2)
"RTN","PXRMEXIU",84,0)
 ... S FDA(811.902,IENS,.01)=FINDING
"RTN","PXRMEXIU",85,0)
 .;Save the finding information for the history.
"RTN","PXRMEXIU",86,0)
 . S ^TMP("PXRMEXIA",$J,"DEFF",$P(IENS,",",1),OFINDING)=FINDING
"RTN","PXRMEXIU",87,0)
 .;Save changes to Orderable items for dialog
"RTN","PXRMEXIU",88,0)
 .I FILENUM=101.43,OFINDING'=FINDING
"RTN","PXRMEXIU",89,0)
 . S NAMECHG(FILENUM,$P(OFINDING,".",2))=$P(FINDING,".",2)
"RTN","PXRMEXIU",90,0)
 Q
"RTN","PXRMEXIU",91,0)
 ;
"RTN","PXRMEXIU",92,0)
 ;======================================================================
"RTN","PXRMEXIU",93,0)
EXISTS(FILENUM,NAME) ;Check for existence of an entry with the same name.
"RTN","PXRMEXIU",94,0)
 ;Return the ien if it does, 0 otherwise.
"RTN","PXRMEXIU",95,0)
 N IEN
"RTN","PXRMEXIU",96,0)
 I FILENUM=0 S IEN=$$EXISTS^PXRMEXCF(NAME) Q
"RTN","PXRMEXIU",97,0)
 N FLAGS,RESULT
"RTN","PXRMEXIU",98,0)
 S RESULT=NAME
"RTN","PXRMEXIU",99,0)
 ;Special lookup for files 80 and 80.1, they do not have a standard "B"
"RTN","PXRMEXIU",100,0)
 ;cross-reference.
"RTN","PXRMEXIU",101,0)
 I (FILENUM=80)!(FILENUM=80.1) D
"RTN","PXRMEXIU",102,0)
 .;Name may or may not have the necessary space appended, make sure
"RTN","PXRMEXIU",103,0)
 .;it does.
"RTN","PXRMEXIU",104,0)
 . S RESULT=$S($E(NAME,$L(NAME))'=" ":NAME_" ",1:NAME)
"RTN","PXRMEXIU",105,0)
 . S FLAGS="MX"
"RTN","PXRMEXIU",106,0)
 E  S FLAGS="BX"
"RTN","PXRMEXIU",107,0)
 I FILENUM=811.6 S FLAGS=FLAGS_"U"
"RTN","PXRMEXIU",108,0)
 ;File 8927.1 only allows upper case .01s.
"RTN","PXRMEXIU",109,0)
 I FILENUM=8927.1 S RESULT=$$UP^XLFSTR(NAME)
"RTN","PXRMEXIU",110,0)
 S IEN=$$FIND1^DIC(FILENUM,"",FLAGS,RESULT)
"RTN","PXRMEXIU",111,0)
 ;If IEN is null then there was an error try FIND^DIC.
"RTN","PXRMEXIU",112,0)
 I IEN="" D
"RTN","PXRMEXIU",113,0)
 . N FILENAME,LIST,MSG,NENTRIES,TEXT
"RTN","PXRMEXIU",114,0)
 . S FILENAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXRMEXIU",115,0)
 . D FIND^DIC(FILENUM,"","",FLAGS,NAME,"","","","","LIST","MSG")
"RTN","PXRMEXIU",116,0)
 . S NENTRIES=+$P(LIST("DILIST",0),U,1)
"RTN","PXRMEXIU",117,0)
 . S TEXT="Warning there are "_NENTRIES_" "_FILENAME_" entries with the name "_NAME_"!"
"RTN","PXRMEXIU",118,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMEXIU",119,0)
 . D EN^DDIOL("You should stop and fix this problem now, if you continue")
"RTN","PXRMEXIU",120,0)
 . D EN^DDIOL("you will probably get a number of errors.")
"RTN","PXRMEXIU",121,0)
 . H 3
"RTN","PXRMEXIU",122,0)
 .;Set the IEN to the first entry in the list.
"RTN","PXRMEXIU",123,0)
 . S IEN=LIST("DILIST",2,1)
"RTN","PXRMEXIU",124,0)
 Q IEN
"RTN","PXRMEXIU",125,0)
 ;
"RTN","PXRMEXIU",126,0)
 ;======================================================================
"RTN","PXRMEXIU",127,0)
GETACT(CHOICES) ;Get the action
"RTN","PXRMEXIU",128,0)
 ;If CHOICES is empty the only action is skip.
"RTN","PXRMEXIU",129,0)
 I CHOICES="" Q "S"
"RTN","PXRMEXIU",130,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXIU",131,0)
 S DIR(0)="S"_U
"RTN","PXRMEXIU",132,0)
 I CHOICES["C" S DIR(0)=DIR(0)_"C:Create a new entry by copying to a new name"
"RTN","PXRMEXIU",133,0)
 I CHOICES["D" S DIR(0)=DIR(0)_";D:Delete (from the reminder/dialog)"
"RTN","PXRMEXIU",134,0)
 I CHOICES["I" S DIR(0)=DIR(0)_";I:Install or Overwrite the current entry"
"RTN","PXRMEXIU",135,0)
 I CHOICES["P" S DIR(0)=DIR(0)_";P:Replace (in the reminder/dialog) with an existing entry"
"RTN","PXRMEXIU",136,0)
 I CHOICES["Q" S DIR(0)=DIR(0)_";Q:Quit the install"
"RTN","PXRMEXIU",137,0)
 I CHOICES["R" S DIR(0)=DIR(0)_";R:Restart"
"RTN","PXRMEXIU",138,0)
 I CHOICES["S" S DIR(0)=DIR(0)_";S:Skip, do not install this entry"
"RTN","PXRMEXIU",139,0)
 D ^DIR K DIR
"RTN","PXRMEXIU",140,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXIU",141,0)
 I $D(DTOUT)!($D(DUOUT)) S Y="S"
"RTN","PXRMEXIU",142,0)
 Q Y
"RTN","PXRMEXIU",143,0)
 ;
"RTN","PXRMEXIU",144,0)
 ;======================================================================
"RTN","PXRMEXIU",145,0)
GETNAME(MIN,MAX) ;Get a name to use.
"RTN","PXRMEXIU",146,0)
 N X,Y
"RTN","PXRMEXIU",147,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXIU",148,0)
 S DIR(0)="FAOU"_U_MIN_":"_MAX
"RTN","PXRMEXIU",149,0)
 S DIR("A")="Input the new name: "
"RTN","PXRMEXIU",150,0)
 D ^DIR K DIR
"RTN","PXRMEXIU",151,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXIU",152,0)
 I $D(DTOUT)!($D(DUOUT)) Q ""
"RTN","PXRMEXIU",153,0)
 Q Y
"RTN","PXRMEXIU",154,0)
 ;
"RTN","PXRMEXIU",155,0)
 ;======================================================================
"RTN","PXRMEXIU",156,0)
GETUNAME(ATTR,TA) ;Get a unique name to use.
"RTN","PXRMEXIU",157,0)
 ;ATTR holds the attributes, TA is a temporary array holding what is
"RTN","PXRMEXIU",158,0)
 ;in the packed reminder.
"RTN","PXRMEXIU",159,0)
 N IEN,NEWPT01,SAME,TEXT
"RTN","PXRMEXIU",160,0)
GNEW ;
"RTN","PXRMEXIU",161,0)
 S NEWPT01=$$GETNAME(ATTR("MIN FIELD LENGTH"),ATTR("FIELD LENGTH"))
"RTN","PXRMEXIU",162,0)
 S IEN=+$$EXISTS(ATTR("FILE NUMBER"),NEWPT01)
"RTN","PXRMEXIU",163,0)
 ;If an entry with the same name exists, see if the old and new are
"RTN","PXRMEXIU",164,0)
 ;identical.
"RTN","PXRMEXIU",165,0)
 I IEN>0 D  G GNEW
"RTN","PXRMEXIU",166,0)
 . S TEXT(1)=ATTR("FILE NAME")_" entry "_NEWPT01_" already EXISTS,"
"RTN","PXRMEXIU",167,0)
 . S SAME=$$SAME(.ATTR,.TA,NEWPT01)
"RTN","PXRMEXIU",168,0)
 . I SAME S TEXT(2)="what do you want to do?"
"RTN","PXRMEXIU",169,0)
 . I 'SAME S TEXT(2)="but packed routine is different, what do you want to do?"
"RTN","PXRMEXIU",170,0)
 . W !,TEXT(1),!,TEXT(2)
"RTN","PXRMEXIU",171,0)
 E  S ATTR("NAME")=NEWPT01
"RTN","PXRMEXIU",172,0)
 Q NEWPT01
"RTN","PXRMEXIU",173,0)
 ;
"RTN","PXRMEXIU",174,0)
 ;======================================================================
"RTN","PXRMEXIU",175,0)
HF(FDA,NAMECHG) ;Check the health factor to make sure a category does not
"RTN","PXRMEXIU",176,0)
 ;have a category.
"RTN","PXRMEXIU",177,0)
 N IENS
"RTN","PXRMEXIU",178,0)
 S IENS=$O(FDA(9999999.64,""))
"RTN","PXRMEXIU",179,0)
 I IENS="" Q
"RTN","PXRMEXIU",180,0)
 I FDA(9999999.64,IENS,.1)="CATEGORY" K FDA(9999999.64,IENS,.03)
"RTN","PXRMEXIU",181,0)
 Q
"RTN","PXRMEXIU",182,0)
 ;
"RTN","PXRMEXIU",183,0)
 ;===============================================================
"RTN","PXRMEXIU",184,0)
REXISTS(NAME,DATEP) ;See if this Exchange File entry already exists.
"RTN","PXRMEXIU",185,0)
 N IEN,LUVALUE
"RTN","PXRMEXIU",186,0)
 S LUVALUE(1)=NAME
"RTN","PXRMEXIU",187,0)
 S LUVALUE(2)=DATEP
"RTN","PXRMEXIU",188,0)
 S IEN=+$$FIND1^DIC(811.8,"","KU",.LUVALUE)
"RTN","PXRMEXIU",189,0)
 Q IEN
"RTN","PXRMEXIU",190,0)
 ;
"RTN","PXRMEXIU",191,0)
 ;======================================================================
"RTN","PXRMEXIU",192,0)
SAME(ATTR,TA,NAME) ;Check existing entry and entry in packed reminder
"RTN","PXRMEXIU",193,0)
 ;definition to see if they are identical.
"RTN","PXRMEXIU",194,0)
 ;Present version only works for computed finding routines, other
"RTN","PXRMEXIU",195,0)
 ;types of entries can be added later.
"RTN","PXRMEXIU",196,0)
 N SAME
"RTN","PXRMEXIU",197,0)
 I ATTR("FILE NAME")="COMPUTED FINDING ROUTINE" S SAME=$$SAME^PXRMEXCF(.ATTR,.TA,NAME)
"RTN","PXRMEXIU",198,0)
 E  S SAME=1
"RTN","PXRMEXIU",199,0)
 Q SAME
"RTN","PXRMEXIU",200,0)
 ;
"RTN","PXRMEXIU",201,0)
 ;======================================================================
"RTN","PXRMEXIU",202,0)
TERM(FDA,NAMECHG) ;Check the reminder term to make sure all the
"RTN","PXRMEXIU",203,0)
 ;findings exist.
"RTN","PXRMEXIU",204,0)
 N ABBR,ALIST,IEN,IENS,FILENUM,FINDING,OFINDING,PT01
"RTN","PXRMEXIU",205,0)
 ;
"RTN","PXRMEXIU",206,0)
 ;Search the finding multiple for replacements and missing findings.
"RTN","PXRMEXIU",207,0)
 D BLDALIST^PXRMVPTR(811.52,.01,.ALIST)
"RTN","PXRMEXIU",208,0)
 S IENS=""
"RTN","PXRMEXIU",209,0)
 F  S IENS=$O(FDA(811.52,IENS)) Q:IENS=""  D
"RTN","PXRMEXIU",210,0)
 . S (FINDING,OFINDING)=FDA(811.52,IENS,.01)
"RTN","PXRMEXIU",211,0)
 . S ABBR=$P(FINDING,".",1)
"RTN","PXRMEXIU",212,0)
 . S PT01=$P(FINDING,".",2)
"RTN","PXRMEXIU",213,0)
 . S FILENUM=$P(ALIST(ABBR),U,1)
"RTN","PXRMEXIU",214,0)
 . I $D(NAMECHG(FILENUM,PT01)) D
"RTN","PXRMEXIU",215,0)
 .. S FINDING=ABBR_"."_NAMECHG(FILENUM,PT01)
"RTN","PXRMEXIU",216,0)
 .. S FDA(811.52,IENS,.01)=FINDING
"RTN","PXRMEXIU",217,0)
 . S IEN=+$$VFIND1(FINDING,.ALIST)
"RTN","PXRMEXIU",218,0)
 . I IEN=0 D
"RTN","PXRMEXIU",219,0)
 ..;Get replacement
"RTN","PXRMEXIU",220,0)
 .. N DIC,DUOUT,TEXT,X,Y
"RTN","PXRMEXIU",221,0)
 .. S TEXT="Finding "_FINDING_" does not exist input a replacement or ^ to quit the install."
"RTN","PXRMEXIU",222,0)
 .. D BMES^XPDUTL(TEXT)
"RTN","PXRMEXIU",223,0)
 .. S DIC=FILENUM
"RTN","PXRMEXIU",224,0)
 .. S DIC(0)="AEMNQ"
"RTN","PXRMEXIU",225,0)
 .. S Y=-1
"RTN","PXRMEXIU",226,0)
 .. F  Q:+Y'=-1  D
"RTN","PXRMEXIU",227,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXIU",228,0)
 ... I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXIU",229,0)
 ... D ^DIC
"RTN","PXRMEXIU",230,0)
 ... I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXIU",231,0)
 ... I $D(DUOUT) D
"RTN","PXRMEXIU",232,0)
 .... S Y=""
"RTN","PXRMEXIU",233,0)
 .... K FDA
"RTN","PXRMEXIU",234,0)
 .. I Y="" K FDA(811.52,IENS)
"RTN","PXRMEXIU",235,0)
 .. E  D
"RTN","PXRMEXIU",236,0)
 ... S FINDING=ABBR_"."_$P(Y,U,2)
"RTN","PXRMEXIU",237,0)
 ... S FDA(811.52,IENS,.01)=FINDING
"RTN","PXRMEXIU",238,0)
 .;Save the finding information for the history.
"RTN","PXRMEXIU",239,0)
 . S ^TMP("PXRMEXIA",$J,"TRMF",$P(IENS,",",1),OFINDING)=FINDING
"RTN","PXRMEXIU",240,0)
 Q
"RTN","PXRMEXIU",241,0)
 ;
"RTN","PXRMEXIU",242,0)
 ;======================================================================
"RTN","PXRMEXIU",243,0)
VFIND1(VPTR,ALIST) ;Given a variable pointer of the form ABBR.NAME
"RTN","PXRMEXIU",244,0)
 ;and ALIST which contains the link between abbreviations and files
"RTN","PXRMEXIU",245,0)
 ;return the IEN if it exists and 0 if no match if found.
"RTN","PXRMEXIU",246,0)
 N ABBR,IEN,FILENUM,PT01,RESULT
"RTN","PXRMEXIU",247,0)
 S IEN=0
"RTN","PXRMEXIU",248,0)
 S ABBR=$P(VPTR,".",1)
"RTN","PXRMEXIU",249,0)
 S PT01=$P(VPTR,".",2,99)
"RTN","PXRMEXIU",250,0)
 S FILENUM=$P(ALIST(ABBR),U,1)
"RTN","PXRMEXIU",251,0)
 S IEN=$$EXISTS(FILENUM,PT01)
"RTN","PXRMEXIU",252,0)
 Q IEN
"RTN","PXRMEXIU",253,0)
 ;
"RTN","PXRMEXLB")
0^5^B32982155
"RTN","PXRMEXLB",1,0)
PXRMEXLB ;SLC/PJH - Reminder Dialog Exchange. ;12/19/2001
"RTN","PXRMEXLB",2,0)
 ;;1.5;CLINICAL REMINDERS;**5,7**;Jun 19, 2000
"RTN","PXRMEXLB",3,0)
 ;
"RTN","PXRMEXLB",4,0)
 ;=====================================================================
"RTN","PXRMEXLB",5,0)
 ;
"RTN","PXRMEXLB",6,0)
 ;Build list of dialog components - called once from PXRMEXLC
"RTN","PXRMEXLB",7,0)
 ;-------------------------------
"RTN","PXRMEXLB",8,0)
DBUILD(IND,NITEMS,FILENUM) ;
"RTN","PXRMEXLB",9,0)
 N DARRAY,DDATA,DDLG,DEND,DLOC,DMAP,DNAM,DNODE,DSEQ,DSTRT,DSUB,JND
"RTN","PXRMEXLB",10,0)
 ;
"RTN","PXRMEXLB",11,0)
 K ^TMP("PXRMEXTMP",$J),^TMP("PXRMEXFND",$J)
"RTN","PXRMEXLB",12,0)
 ;
"RTN","PXRMEXLB",13,0)
 ;Scan dialog components in 120 and save name and type
"RTN","PXRMEXLB",14,0)
 S JND=0
"RTN","PXRMEXLB",15,0)
 F  S JND=$O(^PXD(811.8,IEN,120,IND,1,JND)) Q:'JND  D
"RTN","PXRMEXLB",16,0)
 .S DDATA=$G(^PXD(811.8,IEN,120,IND,1,JND,0)) Q:DDATA=""
"RTN","PXRMEXLB",17,0)
 .S DNAM=$P(DDATA,U),DSTRT=$P(DDATA,U,2),DEND=$P(DDATA,U,3)
"RTN","PXRMEXLB",18,0)
 .;Extract dialog type and text and findings from exchange file
"RTN","PXRMEXLB",19,0)
 .D DPARSE
"RTN","PXRMEXLB",20,0)
 ;Scan dialog components in 120 and save dialog links
"RTN","PXRMEXLB",21,0)
 S JND="B"
"RTN","PXRMEXLB",22,0)
 F  S JND=$O(^PXD(811.8,IEN,120,IND,1,JND),-1) Q:'JND  D
"RTN","PXRMEXLB",23,0)
 .S DDATA=$G(^PXD(811.8,IEN,120,IND,1,JND,0)) Q:DDATA=""
"RTN","PXRMEXLB",24,0)
 .S DSTRT=$P(DDATA,U,2),DEND=$P(DDATA,U,3)
"RTN","PXRMEXLB",25,0)
 .S DDLG=$P(DDATA,U),DSUB=DSTRT+2
"RTN","PXRMEXLB",26,0)
 .I JND=NITEMS D
"RTN","PXRMEXLB",27,0)
 ..S ^TMP("PXRMEXTMP",$J,"PXRMDNAM")=DDLG
"RTN","PXRMEXLB",28,0)
 ..I $P($G(^PXD(811.8,IEN,100,DSUB,0)),";",3)'["100~NATIONAL" Q
"RTN","PXRMEXLB",29,0)
 ..S ^TMP("PXRMEXTMP",$J,"PXRMDNAT")=""
"RTN","PXRMEXLB",30,0)
 .F  S DSUB=$O(^PXD(811.8,IEN,100,DSUB)) Q:DSUB>DEND  D
"RTN","PXRMEXLB",31,0)
 ..S DNODE=$G(^PXD(811.8,IEN,100,DSUB,0)) I $P(DNODE,";")'="801.412" Q
"RTN","PXRMEXLB",32,0)
 ..S DNODE=$P(DNODE,";",3) I $E(DNODE,1,4)'=".01~" Q
"RTN","PXRMEXLB",33,0)
 ..S DSEQ=$P(DNODE,"~",2) Q:DSEQ=""
"RTN","PXRMEXLB",34,0)
 ..S DNODE=$G(^PXD(811.8,IEN,100,DSUB+1,0)) I $P(DNODE,";")'="801.412" Q
"RTN","PXRMEXLB",35,0)
 ..S DNODE=$P(DNODE,";",3) I $E(DNODE,1,2)'="2~" Q
"RTN","PXRMEXLB",36,0)
 ..S DNAM=$P(DNODE,"~",2) Q:DNAM=""
"RTN","PXRMEXLB",37,0)
 ..S DLOC=$G(^TMP("PXRMEXTMP",$J,"DLOC",DNAM))
"RTN","PXRMEXLB",38,0)
 ..S ^TMP("PXRMEXTMP",$J,"DMAP",DDLG,DSEQ)=DNAM_U_DLOC
"RTN","PXRMEXLB",39,0)
 ;
"RTN","PXRMEXLB",40,0)
 ;Build index of dialog findings by name
"RTN","PXRMEXLB",41,0)
 ;
"RTN","PXRMEXLB",42,0)
 ;// This index will be unique with PKR's changes to the way findings
"RTN","PXRMEXLB",43,0)
 ;// are stored in FDA. The section number may be needed to determine 
"RTN","PXRMEXLB",44,0)
 ;// if a rename has been done.
"RTN","PXRMEXLB",45,0)
 ;
"RTN","PXRMEXLB",46,0)
 N FDATA,FILENAM,FILENUM,FNAME
"RTN","PXRMEXLB",47,0)
 S IND=0
"RTN","PXRMEXLB",48,0)
 F  S IND=$O(^PXD(811.8,IEN,120,IND)) Q:'IND  D
"RTN","PXRMEXLB",49,0)
 .S FDATA=$G(^PXD(811.8,IEN,120,IND,0)) Q:FDATA=""
"RTN","PXRMEXLB",50,0)
 .S FILENAM=$P(FDATA,U),FILENUM=$P(FDATA,U,2) Q:FILENAM=""  Q:'FILENUM
"RTN","PXRMEXLB",51,0)
 .;Ignore reminder dialogs
"RTN","PXRMEXLB",52,0)
 .I FILENAM="REMINDER DIALOG" Q
"RTN","PXRMEXLB",53,0)
 .;Ignore reminder terms
"RTN","PXRMEXLB",54,0)
 .I FILENAM="REMINDER TERM" Q
"RTN","PXRMEXLB",55,0)
 .;Strip off trailing S in finding file name
"RTN","PXRMEXLB",56,0)
 .I $E(FILENAM,$L(FILENAM))="S" S $E(FILENAM,$L(FILENAM))=""
"RTN","PXRMEXLB",57,0)
 .S JND=0
"RTN","PXRMEXLB",58,0)
 .F  S JND=$O(^PXD(811.8,IEN,120,IND,1,JND)) Q:'JND  D
"RTN","PXRMEXLB",59,0)
 ..S FNAME=$P($G(^PXD(811.8,IEN,120,IND,1,JND,0)),U) Q:FNAME=""
"RTN","PXRMEXLB",60,0)
 ..;Save entry
"RTN","PXRMEXLB",61,0)
 ..S ^TMP("PXRMEXFND",$J,FNAME)=FILENUM_U_FILENAM_U_IND
"RTN","PXRMEXLB",62,0)
 Q
"RTN","PXRMEXLB",63,0)
 ;
"RTN","PXRMEXLB",64,0)
 ;Scan exchange file to get dialog fields
"RTN","PXRMEXLB",65,0)
 ;---------------------------------------
"RTN","PXRMEXLB",66,0)
DPARSE N DCNT,DFIND,DFIAD,DFNAM,DFQUIT,DLCT,DLINES,DSUB,DTEXT,DTXT,DTYP
"RTN","PXRMEXLB",67,0)
 ;
"RTN","PXRMEXLB",68,0)
 ;Find where all the field numbers are kept
"RTN","PXRMEXLB",69,0)
 N DARRAY,DDATA,DFNUM,DRAW,DSTRING
"RTN","PXRMEXLB",70,0)
 S DSUB=DSTRT,DSTRING=";4;5;15;24;25;"
"RTN","PXRMEXLB",71,0)
 F  S DSUB=$O(^PXD(811.8,IEN,100,DSUB)) Q:'DSUB  D  Q:DSUB>DEND
"RTN","PXRMEXLB",72,0)
 .S DDATA=$G(^PXD(811.8,IEN,100,DSUB,0)) Q:DDATA=""
"RTN","PXRMEXLB",73,0)
 .I $P(DDATA,";")'=801.41 Q
"RTN","PXRMEXLB",74,0)
 .S DFNUM=$P(DDATA,";",3),DFNUM=$P(DFNUM,"~") Q:DFNUM=""
"RTN","PXRMEXLB",75,0)
 .I DSTRING[(";"_DFNUM_";") S DARRAY(DFNUM)=DSUB
"RTN","PXRMEXLB",76,0)
 ;
"RTN","PXRMEXLB",77,0)
 ;Determine dialog component type
"RTN","PXRMEXLB",78,0)
 S DSUB=DARRAY(4) Q:'DSUB
"RTN","PXRMEXLB",79,0)
 S DTYP=$P($G(^PXD(811.8,IEN,100,DSUB,0)),"~",2)
"RTN","PXRMEXLB",80,0)
 S:DTYP[" " DTYP=$P(DTYP," ",2) S:DTYP="value" DTYP="forced"
"RTN","PXRMEXLB",81,0)
 ;
"RTN","PXRMEXLB",82,0)
 ;Initialise text and finding fields
"RTN","PXRMEXLB",83,0)
 S DTXT="*NONE*",DFIND=""
"RTN","PXRMEXLB",84,0)
 ;Get text appropriate for the type of component
"RTN","PXRMEXLB",85,0)
 I (DTYP="element")!(DTYP="group") D
"RTN","PXRMEXLB",86,0)
 .;search for WP text
"RTN","PXRMEXLB",87,0)
 .S DSUB=$G(DARRAY(25)) D:DSUB
"RTN","PXRMEXLB",88,0)
 ..S DTEXT=$P($G(^PXD(811.8,IEN,100,DSUB,0)),";",3) Q:DTEXT=""
"RTN","PXRMEXLB",89,0)
 ..;Get the line count
"RTN","PXRMEXLB",90,0)
 ..S DLINES=$P(DTEXT,"~",3),DCNT=0
"RTN","PXRMEXLB",91,0)
 ..;Get the wp text lines
"RTN","PXRMEXLB",92,0)
 ..F DLCT=DSUB+1:1:DSUB+DLINES D
"RTN","PXRMEXLB",93,0)
 ...S DTEXT=$G(^PXD(811.8,IEN,100,DLCT,0))
"RTN","PXRMEXLB",94,0)
 ...S DCNT=DCNT+1,DTXT(DCNT)=DTEXT
"RTN","PXRMEXLB",95,0)
 ...;Check for embedded TIU templates
"RTN","PXRMEXLB",96,0)
 ...D DTIU(DNAM,DTEXT)
"RTN","PXRMEXLB",97,0)
 ..;Reformat text to 50 characters
"RTN","PXRMEXLB",98,0)
 ..D DWP(.DTXT)
"RTN","PXRMEXLB",99,0)
 .;
"RTN","PXRMEXLB",100,0)
 .;Search for finding item
"RTN","PXRMEXLB",101,0)
 .S DSUB=$G(DARRAY(15)) D:DSUB
"RTN","PXRMEXLB",102,0)
 ..S DFIND=$P($G(^PXD(811.8,IEN,100,DSUB,0)),";",3) Q:DFIND=""
"RTN","PXRMEXLB",103,0)
 ..;Finding name
"RTN","PXRMEXLB",104,0)
 ..S DFIND=$P(DFIND,"~",2) Q:DFIND=""
"RTN","PXRMEXLB",105,0)
 ..I $P(DFIND,".")="ICD9" S DFIND=$P(DFIND," ")
"RTN","PXRMEXLB",106,0)
 .;
"RTN","PXRMEXLB",107,0)
 .;Search for additional finding - start after WP text
"RTN","PXRMEXLB",108,0)
 .S DSUB=+$G(DARRAY(25)) D:DSUB
"RTN","PXRMEXLB",109,0)
 ..S DCNT=0,DFQUIT=0
"RTN","PXRMEXLB",110,0)
 ..F DLCT=DSUB+1+DLINES:1 D  Q:DFQUIT  Q:DLCT>DEND
"RTN","PXRMEXLB",111,0)
 ...S DTEXT=$G(^PXD(811.8,IEN,100,DLCT,0))
"RTN","PXRMEXLB",112,0)
 ...;Ignore line if this is not an additional finding
"RTN","PXRMEXLB",113,0)
 ...I $P(DTEXT,";")'=801.4118 S:$P(DTEXT,";")>801.4118 DFQUIT=1 Q
"RTN","PXRMEXLB",114,0)
 ...S DFNAM=$P(DTEXT,"~",2) Q:DFNAM=""
"RTN","PXRMEXLB",115,0)
 ...I $P(DFNAM,".")="ICD9" S DFNAM=$P(DFNAM," ")
"RTN","PXRMEXLB",116,0)
 ...S DCNT=DCNT+1,DFIAD(DCNT)=DFNAM
"RTN","PXRMEXLB",117,0)
 ;
"RTN","PXRMEXLB",118,0)
 I DTYP="prompt" D
"RTN","PXRMEXLB",119,0)
 .;search for prompt caption
"RTN","PXRMEXLB",120,0)
 .S DSUB=$G(DARRAY(24)) Q:'DSUB
"RTN","PXRMEXLB",121,0)
 .S DTEXT=$P($G(^PXD(811.8,IEN,100,DSUB,0)),";",3) Q:DTEXT=""
"RTN","PXRMEXLB",122,0)
 .S DTXT=$P(DTEXT,"~",2)
"RTN","PXRMEXLB",123,0)
 ;
"RTN","PXRMEXLB",124,0)
 I DTYP="group" D
"RTN","PXRMEXLB",125,0)
 .;search for group caption
"RTN","PXRMEXLB",126,0)
 .S DSUB=$G(DARRAY(5)) Q:'DSUB
"RTN","PXRMEXLB",127,0)
 .S DTEXT=$P($G(^PXD(811.8,IEN,100,DSUB,0)),";",3) Q:DTEXT=""
"RTN","PXRMEXLB",128,0)
 .S DTXT=$P(DTEXT,"~",2)
"RTN","PXRMEXLB",129,0)
 .Q
"RTN","PXRMEXLB",130,0)
 ;
"RTN","PXRMEXLB",131,0)
 ;Save dialog type
"RTN","PXRMEXLB",132,0)
 S ^TMP("PXRMEXTMP",$J,"DTYP",DNAM)=DTYP
"RTN","PXRMEXLB",133,0)
 ;Save dialog component text (first line only)
"RTN","PXRMEXLB",134,0)
 S ^TMP("PXRMEXTMP",$J,"DTXT",DNAM)=DTXT
"RTN","PXRMEXLB",135,0)
 ;
"RTN","PXRMEXLB",136,0)
 ;Save main finding
"RTN","PXRMEXLB",137,0)
 I DFIND]"" S ^TMP("PXRMEXTMP",$J,"DFND",DNAM,1)=$P(DFIND,".",2,99)
"RTN","PXRMEXLB",138,0)
 ;Save additional findings
"RTN","PXRMEXLB",139,0)
 S DSUB=0
"RTN","PXRMEXLB",140,0)
 F   S DSUB=$O(DFIAD(DSUB)) Q:'DSUB  D
"RTN","PXRMEXLB",141,0)
 .S ^TMP("PXRMEXTMP",$J,"DFND",DNAM,DSUB+1)=$P(DFIAD(DSUB),".",2,99)
"RTN","PXRMEXLB",142,0)
 ;
"RTN","PXRMEXLB",143,0)
 ;Save additional WP text lines
"RTN","PXRMEXLB",144,0)
 S DSUB=0
"RTN","PXRMEXLB",145,0)
 F   S DSUB=$O(DTXT(DSUB)) Q:'DSUB  D
"RTN","PXRMEXLB",146,0)
 .S ^TMP("PXRMEXTMP",$J,"DTXT",DNAM,DSUB)=DTXT(DSUB)
"RTN","PXRMEXLB",147,0)
 ;
"RTN","PXRMEXLB",148,0)
 ;Save dialog's position in exchange file
"RTN","PXRMEXLB",149,0)
 S ^TMP("PXRMEXTMP",$J,"DLOC",DNAM)=DSTRT_U_DEND_U_IND_U_JND
"RTN","PXRMEXLB",150,0)
 Q
"RTN","PXRMEXLB",151,0)
 ;
"RTN","PXRMEXLB",152,0)
 ;Extract any TIU templates
"RTN","PXRMEXLB",153,0)
 ;-------------------------
"RTN","PXRMEXLB",154,0)
DTIU(DNAM,TEXT) ;
"RTN","PXRMEXLB",155,0)
 N IC,TCNT,TLIST,TNAM
"RTN","PXRMEXLB",156,0)
 ;Templates are in format {FLD:fldname}
"RTN","PXRMEXLB",157,0)
 S TCNT=0 D TIUXTR^PXRMEXDG("{FLD:","}",TEXT,.TLIST,.TCNT) Q:'TCNT
"RTN","PXRMEXLB",158,0)
 ;
"RTN","PXRMEXLB",159,0)
 F IC=1:1:TCNT D
"RTN","PXRMEXLB",160,0)
 .S TNAM=$G(TLIST(TCNT)) Q:TNAM=""
"RTN","PXRMEXLB",161,0)
 .S ^TMP("PXRMEXTMP",$J,"DTIU",DNAM,TNAM)=""
"RTN","PXRMEXLB",162,0)
 Q
"RTN","PXRMEXLB",163,0)
 ;
"RTN","PXRMEXLB",164,0)
 ;Process WP fields
"RTN","PXRMEXLB",165,0)
 ;-----------------
"RTN","PXRMEXLB",166,0)
DWP(TEXT) ;
"RTN","PXRMEXLB",167,0)
 N DIWF,DIWL,DIWR,IC,X
"RTN","PXRMEXLB",168,0)
 S DIWF="C50",DIWL=0,DIWR=50
"RTN","PXRMEXLB",169,0)
 ;
"RTN","PXRMEXLB",170,0)
 K ^UTILITY($J,"W")
"RTN","PXRMEXLB",171,0)
 S IC=""
"RTN","PXRMEXLB",172,0)
 F  S IC=$O(TEXT(IC)) Q:IC=""  D
"RTN","PXRMEXLB",173,0)
 .S X=TEXT(IC)
"RTN","PXRMEXLB",174,0)
 .D ^DIWP
"RTN","PXRMEXLB",175,0)
 ;
"RTN","PXRMEXLB",176,0)
 K TEXT
"RTN","PXRMEXLB",177,0)
 S IC=0
"RTN","PXRMEXLB",178,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMEXLB",179,0)
 .S DTEXT=$G(^UTILITY($J,"W",0,IC,0))
"RTN","PXRMEXLB",180,0)
 .I IC=1 S TEXT=DTEXT Q
"RTN","PXRMEXLB",181,0)
 .S TEXT(IC-1)=DTEXT
"RTN","PXRMEXLB",182,0)
 ;
"RTN","PXRMEXLB",183,0)
 K ^UTILITY($J,"W")
"RTN","PXRMEXLB",184,0)
 Q
"RTN","PXRMEXLC")
0^15^B33311948
"RTN","PXRMEXLC",1,0)
PXRMEXLC ; SLC/PKR/PJH - Routines to display repository entry components. ;08/30/2001
"RTN","PXRMEXLC",2,0)
 ;;1.5;CLINICAL REMINDERS;**5,7**;Jun 19, 2000
"RTN","PXRMEXLC",3,0)
 ;======================================================================
"RTN","PXRMEXLC",4,0)
BLDLIST(FORCE) ;Build a list of all repository entries.
"RTN","PXRMEXLC",5,0)
 ;If FORCE is true then force rebuilding of the list.
"RTN","PXRMEXLC",6,0)
 I FORCE K ^TMP("PXRMEXLR",$J)
"RTN","PXRMEXLC",7,0)
 I $D(^TMP("PXRMEXLR",$J,"VALMCNT")) S VALMCNT=^TMP("PXRMEXLR",$J,"VALMCNT")
"RTN","PXRMEXLC",8,0)
 E  D
"RTN","PXRMEXLC",9,0)
 . N IEN,RELIST
"RTN","PXRMEXLC",10,0)
 . D RE^PXRMLIST(.RELIST,.IEN)
"RTN","PXRMEXLC",11,0)
 . M ^TMP("PXRMEXLR",$J)=RELIST
"RTN","PXRMEXLC",12,0)
 . S VALMCNT=RELIST("VALMCNT")
"RTN","PXRMEXLC",13,0)
 . F IND=1:1:VALMCNT D
"RTN","PXRMEXLC",14,0)
 .. S ^TMP("PXRMEXLR",$J,"IDX",IND,IND)=IEN(IND)
"RTN","PXRMEXLC",15,0)
 Q
"RTN","PXRMEXLC",16,0)
 ;
"RTN","PXRMEXLC",17,0)
 ;======================================================================
"RTN","PXRMEXLC",18,0)
CDISP(IEN) ;Format component list for display.
"RTN","PXRMEXLC",19,0)
 N CAT,CMPNT,END,EOKTI,EXISTS,FILENUM,FOKTI,IND,INDEX,JND,JNDS,KND
"RTN","PXRMEXLC",20,0)
 N MSG,NCMPNT,NDLINE,NDSEL,NITEMS,NLINE,NSEL,PT01,START,TEMP,TEMP0,TYPE
"RTN","PXRMEXLC",21,0)
 K ^TMP("PXRMEXLC",$J)
"RTN","PXRMEXLC",22,0)
 K ^TMP("PXRMEXLD",$J)
"RTN","PXRMEXLC",23,0)
 S (NDLINE,NLINE)=0
"RTN","PXRMEXLC",24,0)
 S (NDSEL,NSEL)=1
"RTN","PXRMEXLC",25,0)
 ;Load the description.
"RTN","PXRMEXLC",26,0)
 F IND=1:1:$P(^PXD(811.8,IEN,110,0),U,4) D
"RTN","PXRMEXLC",27,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",28,0)
 . S ^TMP("PXRMEXLC",$J,NLINE,0)=^PXD(811.8,IEN,110,IND,0)
"RTN","PXRMEXLC",29,0)
 . S ^TMP("PXRMEXLC",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",30,0)
 S NLINE=NLINE+1
"RTN","PXRMEXLC",31,0)
 S ^TMP("PXRMEXLC",$J,NLINE,0)=" "
"RTN","PXRMEXLC",32,0)
 S ^TMP("PXRMEXLC",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",33,0)
 S NCMPNT=^PXD(811.8,IEN,119)
"RTN","PXRMEXLC",34,0)
 ;Load the text for display.
"RTN","PXRMEXLC",35,0)
 F IND=1:1:NCMPNT D
"RTN","PXRMEXLC",36,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",37,0)
 . S TEMP=^PXD(811.8,IEN,120,IND,0)
"RTN","PXRMEXLC",38,0)
 . S ^TMP("PXRMEXLC",$J,NLINE,0)=$P(TEMP,U,1)
"RTN","PXRMEXLC",39,0)
 . S ^TMP("PXRMEXLC",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",40,0)
 . S FILENUM=$P(TEMP,U,2)
"RTN","PXRMEXLC",41,0)
 . S FOKTI=$$FOKTI^PXRMEXFI(FILENUM)
"RTN","PXRMEXLC",42,0)
 . S NITEMS=$P(TEMP,U,3)
"RTN","PXRMEXLC",43,0)
 . I $P(TEMP,U,1)="REMINDER DIALOG" D
"RTN","PXRMEXLC",44,0)
 ..;Save details of the dialog in ^TMP("PXRMEXTMP")
"RTN","PXRMEXLC",45,0)
 .. S JNDS=NITEMS D DBUILD^PXRMEXLB(IND,NITEMS,FILENUM)
"RTN","PXRMEXLC",46,0)
 . E  S JNDS=1
"RTN","PXRMEXLC",47,0)
 . F JND=JNDS:1:NITEMS D
"RTN","PXRMEXLC",48,0)
 .. S TEMP=^PXD(811.8,IEN,120,IND,1,JND,0)
"RTN","PXRMEXLC",49,0)
 .. S EOKTI=FOKTI
"RTN","PXRMEXLC",50,0)
 .. S PT01=$P(TEMP,U,1)
"RTN","PXRMEXLC",51,0)
 .. I FILENUM=0 S EXISTS=$$EXISTS^PXRMEXCF(PT01)
"RTN","PXRMEXLC",52,0)
 .. E  S EXISTS=$$EXISTS^PXRMEXIU(FILENUM,PT01)
"RTN","PXRMEXLC",53,0)
 ..;If this is an education topic and it starts with VA- it
"RTN","PXRMEXLC",54,0)
 ..;cannot be transported.
"RTN","PXRMEXLC",55,0)
 .. I (FILENUM=9999999.09)&(PT01["VA-") S EOKTI=0
"RTN","PXRMEXLC",56,0)
 ..;If this is a health factor see if it is a category.
"RTN","PXRMEXLC",57,0)
 .. S CAT=""
"RTN","PXRMEXLC",58,0)
 .. I (FILENUM=9999999.64) D
"RTN","PXRMEXLC",59,0)
 ... S TYPE=""
"RTN","PXRMEXLC",60,0)
 ... S START=$P(TEMP,U,2)
"RTN","PXRMEXLC",61,0)
 ... S END=$P(TEMP,U,3)
"RTN","PXRMEXLC",62,0)
 ... F KND=START:1:END D
"RTN","PXRMEXLC",63,0)
 .... S TEMP0=$P(^PXD(811.8,IEN,100,KND,0),";",3)
"RTN","PXRMEXLC",64,0)
 .... I $P(TEMP0,"~",1)=.1 S TYPE=$P(TEMP0,"~",2)
"RTN","PXRMEXLC",65,0)
 ... I TYPE="CATEGORY" S CAT="X"
"RTN","PXRMEXLC",66,0)
 .. S NLINE=NLINE+1
"RTN","PXRMEXLC",67,0)
 .. I IND=1,JND=1 S NSEL=1,INDEX=$S(EOKTI:NSEL,1:"")
"RTN","PXRMEXLC",68,0)
 .. E  D
"RTN","PXRMEXLC",69,0)
 ...;If entries in this file are ok to install add them to the
"RTN","PXRMEXLC",70,0)
 ...;selectable list. Make sure the first selectable entry exists
"RTN","PXRMEXLC",71,0)
 ...;before incrementing NSEL.
"RTN","PXRMEXLC",72,0)
 ... I EOKTI S NSEL=$S($D(^TMP("PXRMEXLC",$J,"SEL",1)):NSEL+1,1:NSEL),INDEX=NSEL
"RTN","PXRMEXLC",73,0)
 ... E  S INDEX=""
"RTN","PXRMEXLC",74,0)
 .. S ^TMP("PXRMEXLC",$J,NLINE,0)=$$FMTDATA(INDEX,PT01,CAT,EXISTS)
"RTN","PXRMEXLC",75,0)
 .. S ^TMP("PXRMEXLC",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",76,0)
 ..;Store the file number, node 120 indexes and the ien if it exists.
"RTN","PXRMEXLC",77,0)
 .. I INDEX=NSEL S ^TMP("PXRMEXLC",$J,"SEL",NSEL)=FILENUM_U_IND_U_JND_U_EXISTS
"RTN","PXRMEXLC",78,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",79,0)
 . S ^TMP("PXRMEXLC",$J,NLINE,0)=""
"RTN","PXRMEXLC",80,0)
 . S ^TMP("PXRMEXLC",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",81,0)
 Q
"RTN","PXRMEXLC",82,0)
 ;
"RTN","PXRMEXLC",83,0)
 ;======================================================================
"RTN","PXRMEXLC",84,0)
DDISP(IND,NITEMS,FILENUM) ;Setup dialog display list.
"RTN","PXRMEXLC",85,0)
 N JND,NLINE,NSEL,TEMP
"RTN","PXRMEXLC",86,0)
 S (NLINE,NSEL)=0
"RTN","PXRMEXLC",87,0)
 F JND=1:1:NITEMS D
"RTN","PXRMEXLC",88,0)
 . S TEMP=^PXD(811.8,IEN,120,IND,1,JND,0)
"RTN","PXRMEXLC",89,0)
 . S PT01=$P(TEMP,U,1)
"RTN","PXRMEXLC",90,0)
 . S EXISTS=$$EXISTS^PXRMEXIU(FILENUM,PT01)
"RTN","PXRMEXLC",91,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",92,0)
 . S NSEL=NSEL+1
"RTN","PXRMEXLC",93,0)
 . S ^TMP("PXRMEXLD",$J,NLINE,0)=$$FMTDATA(NSEL,PT01,CAT,EXISTS)
"RTN","PXRMEXLC",94,0)
 . S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",95,0)
 .;Store the file number, start and stop line in the repository.
"RTN","PXRMEXLC",96,0)
 . S ^TMP("PXRMEXLD",$J,"SEL",NSEL)=FILENUM_U_$P(TEMP,U,2,3)
"RTN","PXRMEXLC",97,0)
 Q
"RTN","PXRMEXLC",98,0)
 ;
"RTN","PXRMEXLC",99,0)
 ;======================================================================
"RTN","PXRMEXLC",100,0)
FMTDATA(NSEL,PT01,CAT,EXISTS) ;Format items for display.
"RTN","PXRMEXLC",101,0)
 N NSTI,TEMP
"RTN","PXRMEXLC",102,0)
 S TEMP=$$RJ^XLFSTR(NSEL,4," ")_"  "_$E(PT01,1,54)
"RTN","PXRMEXLC",103,0)
 I CAT="X" D
"RTN","PXRMEXLC",104,0)
 . S NSTI=63-$L(TEMP)
"RTN","PXRMEXLC",105,0)
 . S TEMP=TEMP_$$INSCHR(NSTI," ")_"X"
"RTN","PXRMEXLC",106,0)
 I EXISTS D
"RTN","PXRMEXLC",107,0)
 . S NSTI=75-$L(TEMP)
"RTN","PXRMEXLC",108,0)
 . S TEMP=TEMP_$$INSCHR(NSTI," ")_"X"
"RTN","PXRMEXLC",109,0)
 Q TEMP
"RTN","PXRMEXLC",110,0)
 ;
"RTN","PXRMEXLC",111,0)
 ;======================================================================
"RTN","PXRMEXLC",112,0)
HISTLIST(LIST,VALMCNT) ;Build a list of install histories in
"RTN","PXRMEXLC",113,0)
 ;^TMP("PXRMEXIH",$J).
"RTN","PXRMEXLC",114,0)
 N DATE,DC,ENTRY,IHIND,IND,INDONE,NLINE,NSEL,RIEN,SOURCE,TEMP,USER
"RTN","PXRMEXLC",115,0)
 K ^TMP("PXRMEXIH",$J)
"RTN","PXRMEXLC",116,0)
 S (NLINE,NSEL)=0
"RTN","PXRMEXLC",117,0)
 S IND=""
"RTN","PXRMEXLC",118,0)
 F  S IND=$O(LIST(IND)) Q:IND=""  D
"RTN","PXRMEXLC",119,0)
 . S RIEN=^TMP("PXRMEXLR",$J,"IDX",IND,IND)
"RTN","PXRMEXLC",120,0)
 . I $D(^PXD(811.8,RIEN,130)) S INDONE=1
"RTN","PXRMEXLC",121,0)
 . E  S INDONE=0
"RTN","PXRMEXLC",122,0)
 . S TEMP=^PXD(811.8,RIEN,0)
"RTN","PXRMEXLC",123,0)
 . S ENTRY=$P(TEMP,U,1)
"RTN","PXRMEXLC",124,0)
 . S SOURCE=$P(TEMP,U,2)
"RTN","PXRMEXLC",125,0)
 . S DATE=$P(TEMP,U,3)
"RTN","PXRMEXLC",126,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",127,0)
 . I INDONE S NSEL=NSEL+1
"RTN","PXRMEXLC",128,0)
 . S ^TMP("PXRMEXIH",$J,NLINE,0)=$$FRE^PXRMLIST(" ",ENTRY,SOURCE,DATE)
"RTN","PXRMEXLC",129,0)
 . I INDONE S ^TMP("PXRMEXIH",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",130,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",131,0)
 . S ^TMP("PXRMEXIH",$J,NLINE,0)="     Installation Date       Installed By"
"RTN","PXRMEXLC",132,0)
 . I INDONE S ^TMP("PXRMEXIH",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",133,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",134,0)
 . S ^TMP("PXRMEXIH",$J,NLINE,0)="     -----------------       ------------"
"RTN","PXRMEXLC",135,0)
 . I INDONE S ^TMP("PXRMEXIH",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",136,0)
 . I 'INDONE D  Q
"RTN","PXRMEXLC",137,0)
 .. S NLINE=NLINE+1
"RTN","PXRMEXLC",138,0)
 .. S ^TMP("PXRMEXIH",$J,NLINE,0)="      none"
"RTN","PXRMEXLC",139,0)
 .. S NLINE=NLINE+1
"RTN","PXRMEXLC",140,0)
 .. S ^TMP("PXRMEXIH",$J,NLINE,0)=" "
"RTN","PXRMEXLC",141,0)
 . S DATE=""
"RTN","PXRMEXLC",142,0)
 . S DC=0
"RTN","PXRMEXLC",143,0)
 . F  S DATE=$O(^PXD(811.8,RIEN,130,"B",DATE)) Q:DATE=""  D
"RTN","PXRMEXLC",144,0)
 .. S NLINE=NLINE+1
"RTN","PXRMEXLC",145,0)
 .. S DC=DC+1
"RTN","PXRMEXLC",146,0)
 .. I DC>1 S NSEL=NSEL+1
"RTN","PXRMEXLC",147,0)
 .. S IHIND=$O(^PXD(811.8,RIEN,130,"B",DATE,""))
"RTN","PXRMEXLC",148,0)
 .. S TEMP=^PXD(811.8,RIEN,130,IHIND,0)
"RTN","PXRMEXLC",149,0)
 .. S ^TMP("PXRMEXIH",$J,NLINE,0)=$$RJ^XLFSTR(NSEL,4," ")_" "_$$FMTE^XLFDT($P(TEMP,U,1),"5Z")_"   "_$P(TEMP,U,2)
"RTN","PXRMEXLC",150,0)
 .. S ^TMP("PXRMEXIH",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",151,0)
 .. S ^TMP("PXRMEXIH",$J,"SEL",NSEL)=RIEN_U_IHIND
"RTN","PXRMEXLC",152,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",153,0)
 . S ^TMP("PXRMEXIH",$J,NLINE,0)=" "
"RTN","PXRMEXLC",154,0)
 . S ^TMP("PXRMEXIH",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",155,0)
 S VALMCNT=NLINE
"RTN","PXRMEXLC",156,0)
 Q
"RTN","PXRMEXLC",157,0)
 ;
"RTN","PXRMEXLC",158,0)
 ;======================================================================
"RTN","PXRMEXLC",159,0)
INSCHR(NUM,CHR) ;Return a string of NUM characters (CHR).
"RTN","PXRMEXLC",160,0)
 N IND,TEMP
"RTN","PXRMEXLC",161,0)
 S TEMP=""
"RTN","PXRMEXLC",162,0)
 I NUM<1 Q TEMP
"RTN","PXRMEXLC",163,0)
 F IND=1:1:NUM S TEMP=TEMP_CHR
"RTN","PXRMEXLC",164,0)
 Q TEMP
"RTN","PXRMEXLC",165,0)
 ;
"RTN","PXRMEXLD")
0^4^B88402628
"RTN","PXRMEXLD",1,0)
PXRMEXLD ;SLC/PJH - Reminder Dialog Exchange Main Routine. ;11/07/2001
"RTN","PXRMEXLD",2,0)
 ;;1.5;CLINICAL REMINDERS;**5,7**;Jun 19, 2000
"RTN","PXRMEXLD",3,0)
 ;
"RTN","PXRMEXLD",4,0)
 ;=====================================================================
"RTN","PXRMEXLD",5,0)
 ;
"RTN","PXRMEXLD",6,0)
 ;List Manager Functions (PXRM EX LIST DIALOG) called from PXRMEXLI
"RTN","PXRMEXLD",7,0)
 ;--------------------------------------------
"RTN","PXRMEXLD",8,0)
START N PXRMBG,PXRMMODE,VALMBCK,VALMBG,VALMCNT,VALMSG,X,XMZ
"RTN","PXRMEXLD",9,0)
 S X="IORESET"
"RTN","PXRMEXLD",10,0)
 D EN^VALM("PXRM EX LIST DIALOG")
"RTN","PXRMEXLD",11,0)
 ;
"RTN","PXRMEXLD",12,0)
 ;Rebuild Display
"RTN","PXRMEXLD",13,0)
 D CDISP^PXRMEXLC(PXRMRIEN)
"RTN","PXRMEXLD",14,0)
 Q
"RTN","PXRMEXLD",15,0)
 ;
"RTN","PXRMEXLD",16,0)
 ;Entry action for list PXRM EX LIST DIALOG
"RTN","PXRMEXLD",17,0)
 ;-----------------------------------------
"RTN","PXRMEXLD",18,0)
ENTRY D FIND Q
"RTN","PXRMEXLD",19,0)
 ;
"RTN","PXRMEXLD",20,0)
 ;Display Dialog Details
"RTN","PXRMEXLD",21,0)
 ;----------------------
"RTN","PXRMEXLD",22,0)
DETAIL S PXRMMODE=0 D DISP(PXRMMODE) Q
"RTN","PXRMEXLD",23,0)
 ;
"RTN","PXRMEXLD",24,0)
 ;Display Findings
"RTN","PXRMEXLD",25,0)
 ;--------------------------
"RTN","PXRMEXLD",26,0)
FIND S PXRMMODE=2 D DISP(PXRMMODE) Q
"RTN","PXRMEXLD",27,0)
 ;
"RTN","PXRMEXLD",28,0)
 ;Display Dialog Summary
"RTN","PXRMEXLD",29,0)
 ;----------------------
"RTN","PXRMEXLD",30,0)
SUM S PXRMMODE=3 D DISP(PXRMMODE) Q
"RTN","PXRMEXLD",31,0)
 ;
"RTN","PXRMEXLD",32,0)
 ;Display Dialog Usage
"RTN","PXRMEXLD",33,0)
 ;--------------------
"RTN","PXRMEXLD",34,0)
USE S PXRMMODE=4 D DISP(PXRMMODE) Q
"RTN","PXRMEXLD",35,0)
 ;
"RTN","PXRMEXLD",36,0)
 ;Display Dialog Text
"RTN","PXRMEXLD",37,0)
 ;-------------------
"RTN","PXRMEXLD",38,0)
TEXT S PXRMMODE=1 D DISP(PXRMMODE) Q
"RTN","PXRMEXLD",39,0)
 ;
"RTN","PXRMEXLD",40,0)
EXIT K ^TMP("PXRMEXLD",$J) Q
"RTN","PXRMEXLD",41,0)
 ;
"RTN","PXRMEXLD",42,0)
PEXIT ;PXRM EXCH DIALOG MENU protocol exit code
"RTN","PXRMEXLD",43,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEXLD",44,0)
 ;Reset after page up/down etc
"RTN","PXRMEXLD",45,0)
 D XQORM
"RTN","PXRMEXLD",46,0)
 Q
"RTN","PXRMEXLD",47,0)
 ;
"RTN","PXRMEXLD",48,0)
HELP N ORU,ORUPRMT,XQORM,PXRMTAG S PXRMTAG="DLG"
"RTN","PXRMEXLD",49,0)
 D EN^VALM("PXRM EX DIALOG HELP")
"RTN","PXRMEXLD",50,0)
 Q
"RTN","PXRMEXLD",51,0)
 ;
"RTN","PXRMEXLD",52,0)
HDR S VALMHDR(1)="Packed reminder dialog: "
"RTN","PXRMEXLD",53,0)
 S VALMHDR(1)=VALMHDR(1)_$G(^TMP("PXRMEXTMP",$J,"PXRMDNAM"))
"RTN","PXRMEXLD",54,0)
 I $D(^TMP("PXRMEXTMP",$J,"PXRMDNAT")) D
"RTN","PXRMEXLD",55,0)
 .S VALMHDR(1)=VALMHDR(1)_" [NATIONAL DIALOG]"
"RTN","PXRMEXLD",56,0)
 S VALMHDR("TITLE")=VALMHDR(1)
"RTN","PXRMEXLD",57,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEXLD",58,0)
 Q
"RTN","PXRMEXLD",59,0)
 ;
"RTN","PXRMEXLD",60,0)
 ;Build list manager workfile from ^TMP("PXRMEXTMP" (see ^PXRMEXLB)
"RTN","PXRMEXLD",61,0)
DISP(VIEW) ;
"RTN","PXRMEXLD",62,0)
 K ^TMP("PXRMEXLD",$J)
"RTN","PXRMEXLD",63,0)
 N DDATA,DDLG,DEND,DREP,DSTRT,IND,JND,NLINE,NSEL
"RTN","PXRMEXLD",64,0)
 S NLINE=0,NSEL=0,VALMBCK="R",VALMCNT=NLINE
"RTN","PXRMEXLD",65,0)
 S DDLG=$G(^TMP("PXRMEXTMP",$J,"PXRMDNAM")) Q:DDLG=""
"RTN","PXRMEXLD",66,0)
 ;
"RTN","PXRMEXLD",67,0)
 ;Save reminder dialog
"RTN","PXRMEXLD",68,0)
 S DDATA=^TMP("PXRMEXTMP",$J,"DLOC",DDLG)
"RTN","PXRMEXLD",69,0)
 S DSTRT=$P(DDATA,U,1),DEND=$P(DDATA,U,2)
"RTN","PXRMEXLD",70,0)
 S IND=$P(DDATA,U,3),JND=$P(DDATA,U,4),DREP=""
"RTN","PXRMEXLD",71,0)
 D DLINE(DDLG,"","")
"RTN","PXRMEXLD",72,0)
 S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=$J("",79)
"RTN","PXRMEXLD",73,0)
 S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",74,0)
 ;Process components
"RTN","PXRMEXLD",75,0)
 D DCMP(DDLG,"")
"RTN","PXRMEXLD",76,0)
 ;Change header
"RTN","PXRMEXLD",77,0)
 I VIEW=0 D CHGCAP^VALM("HEADER2","Dialog Details")
"RTN","PXRMEXLD",78,0)
 I VIEW=1 D CHGCAP^VALM("HEADER2","Dialog Text")
"RTN","PXRMEXLD",79,0)
 I VIEW=2 D CHGCAP^VALM("HEADER2","Dialog Findings")
"RTN","PXRMEXLD",80,0)
 I VIEW=3 D CHGCAP^VALM("HEADER2","Dialog Summary")
"RTN","PXRMEXLD",81,0)
 I VIEW=4 D CHGCAP^VALM("HEADER2","Dialog Usage")
"RTN","PXRMEXLD",82,0)
 ;
"RTN","PXRMEXLD",83,0)
 S VALMCNT=NLINE,^TMP("PXRMEXLD",$J,"VALMCNT")=VALMCNT,VALMBG=1
"RTN","PXRMEXLD",84,0)
 ;
"RTN","PXRMEXLD",85,0)
 ;Reset protocol
"RTN","PXRMEXLD",86,0)
 D XQORM
"RTN","PXRMEXLD",87,0)
 Q
"RTN","PXRMEXLD",88,0)
 ;
"RTN","PXRMEXLD",89,0)
 ;Update workfile
"RTN","PXRMEXLD",90,0)
DLINE(DNAM,LEV,DSEQ) ;
"RTN","PXRMEXLD",91,0)
 ;Check if standard PXRM prompt
"RTN","PXRMEXLD",92,0)
 N DPXRM S DPXRM=$$PXRM^PXRMEXID(DNAM)
"RTN","PXRMEXLD",93,0)
 ;
"RTN","PXRMEXLD",94,0)
 ;Ignore PXRM prompts if doing a finding view (DF)
"RTN","PXRMEXLD",95,0)
 I VIEW>1,DPXRM Q
"RTN","PXRMEXLD",96,0)
 ;
"RTN","PXRMEXLD",97,0)
 N DEXIST,DPTX,DTXT,DTYP,EXIST,ITEM,TEMP,SEP
"RTN","PXRMEXLD",98,0)
 S ITEM=""
"RTN","PXRMEXLD",99,0)
 I DPXRM=0 S NSEL=NSEL+1,ITEM=NSEL
"RTN","PXRMEXLD",100,0)
 S NLINE=NLINE+1,SEP=$E(LEV,$L(LEV)),DEXIST=0
"RTN","PXRMEXLD",101,0)
 S TEMP=$J(ITEM,3)_$J("",4)_LEV_DSEQ
"RTN","PXRMEXLD",102,0)
 ;Determine type
"RTN","PXRMEXLD",103,0)
 S DTYP=$G(^TMP("PXRMEXTMP",$J,"DTYP",DNAM))
"RTN","PXRMEXLD",104,0)
 ;Dialog component display
"RTN","PXRMEXLD",105,0)
 I (VIEW'=1) D
"RTN","PXRMEXLD",106,0)
 .I $L(TEMP)<13 S TEMP=TEMP_$J("",12+$L(SEP)-$L(TEMP))_$E(DNAM,1,50)
"RTN","PXRMEXLD",107,0)
 .E  S TEMP=TEMP_" "_$E(DNAM,1,50)
"RTN","PXRMEXLD",108,0)
 I VIEW=1 D
"RTN","PXRMEXLD",109,0)
 .I DTYP]"" S DTXT=$G(^TMP("PXRMEXTMP",$J,"DTXT",DNAM))
"RTN","PXRMEXLD",110,0)
 .I DTYP="" S DTXT=DNAM
"RTN","PXRMEXLD",111,0)
 .I DREP'="" S DTXT=DNAM
"RTN","PXRMEXLD",112,0)
 .I $L(TEMP)<13 S TEMP=TEMP_$J("",12+$L(SEP)-$L(TEMP))_$E(DTXT,1,50)
"RTN","PXRMEXLD",113,0)
 .E  S TEMP=TEMP_" "_$E(DTXT,1,50)
"RTN","PXRMEXLD",114,0)
 ;Add Type
"RTN","PXRMEXLD",115,0)
 S TEMP=TEMP_$J("",65-$L(TEMP))_DTYP
"RTN","PXRMEXLD",116,0)
 ;Exists flag
"RTN","PXRMEXLD",117,0)
 I DPXRM=0,$$EXISTS^PXRMEXIU(801.41,DNAM) D
"RTN","PXRMEXLD",118,0)
 .S TEMP=TEMP_$J("",75-$L(TEMP))_"X",DEXIST=1
"RTN","PXRMEXLD",119,0)
 S ^TMP("PXRMEXLD",$J,NLINE,0)=TEMP
"RTN","PXRMEXLD",120,0)
 ;
"RTN","PXRMEXLD",121,0)
 ;Set up selection index
"RTN","PXRMEXLD",122,0)
 S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)="" Q:DPXRM=1
"RTN","PXRMEXLD",123,0)
 ;Store the file number, start and stop line in the exchange file.
"RTN","PXRMEXLD",124,0)
 S ^TMP("PXRMEXLD",$J,"SEL",NSEL)=FILENUM_U_DSTRT_U_DEND_U_DEXIST_U_IND_U_JND
"RTN","PXRMEXLD",125,0)
 ;
"RTN","PXRMEXLD",126,0)
 ;Check for replacements
"RTN","PXRMEXLD",127,0)
 I DREP'="" D
"RTN","PXRMEXLD",128,0)
 .N TEMP
"RTN","PXRMEXLD",129,0)
 .S TEMP=$J("",12+$L(SEP))_"(Replaced with "_PXRMNMCH(FILENUM,DNAM)_")"
"RTN","PXRMEXLD",130,0)
 .S TEMP=$E(TEMP,1,74),TEMP=TEMP_$J("",75-$L(TEMP))_"X"
"RTN","PXRMEXLD",131,0)
 .S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=TEMP
"RTN","PXRMEXLD",132,0)
 .S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",133,0)
 .S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=$J("",79)
"RTN","PXRMEXLD",134,0)
 .S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",135,0)
 ;
"RTN","PXRMEXLD",136,0)
 ;Insert additional text lines
"RTN","PXRMEXLD",137,0)
 I VIEW=1,DREP="" D
"RTN","PXRMEXLD",138,0)
 .N DSUB,DTXT,FILENUM
"RTN","PXRMEXLD",139,0)
 .S DSUB=0,FILENUM=8927.1
"RTN","PXRMEXLD",140,0)
 .F  S DSUB=$O(^TMP("PXRMEXTMP",$J,"DTXT",DNAM,DSUB)) Q:'DSUB  D
"RTN","PXRMEXLD",141,0)
 ..S DTXT=$G(^TMP("PXRMEXTMP",$J,"DTXT",DNAM,DSUB)),NLINE=NLINE+1
"RTN","PXRMEXLD",142,0)
 ..S ^TMP("PXRMEXLD",$J,NLINE,0)=$J("",12+$L(SEP))_$E(DTXT,1,50)
"RTN","PXRMEXLD",143,0)
 ..S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",144,0)
 .;TIU template changes
"RTN","PXRMEXLD",145,0)
 .I $D(PXRMNMCH(FILENUM)),$D(^TMP("PXRMEXTMP",$J,"DTIU",DNAM)) D
"RTN","PXRMEXLD",146,0)
 ..N TEMP,TNAM,TNNAM
"RTN","PXRMEXLD",147,0)
 ..S TNAM=""
"RTN","PXRMEXLD",148,0)
 ..F  S TNAM=$O(^TMP("PXRMEXTMP",$J,"DTIU",DNAM,TNAM)) Q:TNAM=""  D
"RTN","PXRMEXLD",149,0)
 ...S TNNAM=$G(PXRMNMCH(FILENUM,TNAM)) Q:TNNAM=""
"RTN","PXRMEXLD",150,0)
 ...S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=$J("",79)
"RTN","PXRMEXLD",151,0)
 ...S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",152,0)
 ...S TEMP=$J("",12+$L(SEP))_"(TIU template "_TNAM_" copied to "_TNNAM_")"
"RTN","PXRMEXLD",153,0)
 ...S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=TEMP
"RTN","PXRMEXLD",154,0)
 ...S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",155,0)
 ...S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=$J("",79)
"RTN","PXRMEXLD",156,0)
 ...S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",157,0)
 ;Insert finding items
"RTN","PXRMEXLD",158,0)
 I VIEW=2,("element;group"[DTYP),DREP="" D
"RTN","PXRMEXLD",159,0)
 .N DSUB,FDATA,FILENUM,FLIT,FLONG,FNAME,FOUND,FREP,FTAB,FTYP,TEMP
"RTN","PXRMEXLD",160,0)
 .;Findings and additional findings
"RTN","PXRMEXLD",161,0)
 .S DSUB=0,FOUND=0
"RTN","PXRMEXLD",162,0)
 .F  S DSUB=$O(^TMP("PXRMEXTMP",$J,"DFND",DNAM,DSUB)) Q:'DSUB  D
"RTN","PXRMEXLD",163,0)
 ..S FNAME=$G(^TMP("PXRMEXTMP",$J,"DFND",DNAM,DSUB)) Q:FNAME=""
"RTN","PXRMEXLD",164,0)
 ..S FDATA=$G(^TMP("PXRMEXFND",$J,FNAME))
"RTN","PXRMEXLD",165,0)
 ..S FILENUM=$P(FDATA,U),FTYP=$P(FDATA,U,2) Q:'FILENUM
"RTN","PXRMEXLD",166,0)
 ..S FREP=$G(PXRMNMCH(FILENUM,FNAME)) I FREP=FNAME S FREP=""
"RTN","PXRMEXLD",167,0)
 ..S NLINE=NLINE+1,EXIST=$$EXISTS^PXRMEXIU(FILENUM,FNAME),FOUND=1
"RTN","PXRMEXLD",168,0)
 ..I DSUB=1 S FLIT="Finding: "
"RTN","PXRMEXLD",169,0)
 ..I DSUB>1 S FLIT="Add. Finding: "
"RTN","PXRMEXLD",170,0)
 ..S FLONG=0 I $L(FLIT_FNAME_" ("_FTYP_")")>60 S FLONG=1
"RTN","PXRMEXLD",171,0)
 ..I 'FLONG S FNAME=FLIT_FNAME_" ("_FTYP_")"
"RTN","PXRMEXLD",172,0)
 ..I FLONG S FNAME=FLIT_FNAME
"RTN","PXRMEXLD",173,0)
 ..S TEMP=$J("",12+$L(SEP))_$E(FNAME,1,60)_$J("",60-$L(FNAME))
"RTN","PXRMEXLD",174,0)
 ..I EXIST S TEMP=TEMP_$J("",75-$L(TEMP))_"X"
"RTN","PXRMEXLD",175,0)
 ..S ^TMP("PXRMEXLD",$J,NLINE,0)=TEMP
"RTN","PXRMEXLD",176,0)
 ..S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",177,0)
 ..I FLONG D
"RTN","PXRMEXLD",178,0)
 ...S NLINE=NLINE+1
"RTN","PXRMEXLD",179,0)
 ...S FTAB=$S(DSUB=1:21,1:26)
"RTN","PXRMEXLD",180,0)
 ...S ^TMP("PXRMEXLD",$J,NLINE,0)=$J("",FTAB)_"("_FTYP_")"
"RTN","PXRMEXLD",181,0)
 ...S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",182,0)
 ..I FREP'="" D
"RTN","PXRMEXLD",183,0)
 ...S NLINE=NLINE+1
"RTN","PXRMEXLD",184,0)
 ...S FTAB=$S(DSUB=1:21,1:26)
"RTN","PXRMEXLD",185,0)
 ...S ^TMP("PXRMEXLD",$J,NLINE,0)=$J("",FTAB)_"(Replaced by "_FREP_")"
"RTN","PXRMEXLD",186,0)
 ...S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",187,0)
 .;If no findings
"RTN","PXRMEXLD",188,0)
 .I 'FOUND D
"RTN","PXRMEXLD",189,0)
 ..S NLINE=NLINE+1
"RTN","PXRMEXLD",190,0)
 ..S ^TMP("PXRMEXLD",$J,NLINE,0)=$J("",12+$L(SEP))_"Finding: *NONE*"
"RTN","PXRMEXLD",191,0)
 ..S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",192,0)
 ;
"RTN","PXRMEXLD",193,0)
 ;Usage screen
"RTN","PXRMEXLD",194,0)
 I VIEW=4,DREP="" D
"RTN","PXRMEXLD",195,0)
 .N DOTHER,DTXT,DTYPE,OTHER,TYPE
"RTN","PXRMEXLD",196,0)
 .D OTHER(DNAM,.DOTHER) Q:'$D(DOTHER)
"RTN","PXRMEXLD",197,0)
 .S OTHER=""
"RTN","PXRMEXLD",198,0)
 .F  S OTHER=$O(DOTHER(OTHER)) Q:OTHER=""  D
"RTN","PXRMEXLD",199,0)
 ..S TYPE=DOTHER(OTHER),NLINE=NLINE+1,DTYPE="REMINDER DIALOG"
"RTN","PXRMEXLD",200,0)
 ..I TYPE="G" S DTYPE="DIALOG GROUP"
"RTN","PXRMEXLD",201,0)
 ..I TYPE="E" S DTYPE="DIALOG ELEMENT"
"RTN","PXRMEXLD",202,0)
 ..S DTXT="USED BY: "_OTHER_" ("_DTYPE_")"
"RTN","PXRMEXLD",203,0)
 ..S ^TMP("PXRMEXLD",$J,NLINE,0)=$J("",12+$L(SEP))_DTXT
"RTN","PXRMEXLD",204,0)
 ..S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",205,0)
 Q
"RTN","PXRMEXLD",206,0)
 ;
"RTN","PXRMEXLD",207,0)
 ;Save details of dialog components for display
"RTN","PXRMEXLD",208,0)
DCMP(DLG,LEV) ;
"RTN","PXRMEXLD",209,0)
 N DDATA,DDLG,DEND,DNAM,DSEQ,DSTRT,IND,JND
"RTN","PXRMEXLD",210,0)
 S DSEQ=0
"RTN","PXRMEXLD",211,0)
 F  S DSEQ=$O(^TMP("PXRMEXTMP",$J,"DMAP",DLG,DSEQ)) Q:'DSEQ  D
"RTN","PXRMEXLD",212,0)
 .S DDATA=^TMP("PXRMEXTMP",$J,"DMAP",DLG,DSEQ)
"RTN","PXRMEXLD",213,0)
 .S DNAM=$P(DDATA,U),DSTRT=$P(DDATA,U,2),DEND=$P(DDATA,U,3) Q:DNAM=""
"RTN","PXRMEXLD",214,0)
 .S IND=$P(DDATA,U,4),JND=$P(DDATA,U,5)
"RTN","PXRMEXLD",215,0)
 .;Check if this component has been replaced
"RTN","PXRMEXLD",216,0)
 .S DREP=$G(PXRMNMCH(FILENUM,DNAM)) I DREP=DNAM S DREP=""
"RTN","PXRMEXLD",217,0)
 .;Save line in workfile
"RTN","PXRMEXLD",218,0)
 .D DLINE(DNAM,LEV,DSEQ) Q:DREP'=""
"RTN","PXRMEXLD",219,0)
 .;
"RTN","PXRMEXLD",220,0)
 .;Process any sub-components
"RTN","PXRMEXLD",221,0)
 .I $D(^TMP("PXRMEXTMP",$J,"DMAP",DNAM)) D DCMP(DNAM,LEV_DSEQ_".")
"RTN","PXRMEXLD",222,0)
 .;Extra line feed
"RTN","PXRMEXLD",223,0)
 .I LEV="" D
"RTN","PXRMEXLD",224,0)
 ..S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=$J("",79)
"RTN","PXRMEXLD",225,0)
 ..S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",226,0)
 Q
"RTN","PXRMEXLD",227,0)
 ;
"RTN","PXRMEXLD",228,0)
 ;Rebuild string in ascending or descending order
"RTN","PXRMEXLD",229,0)
ORDER(STRING,ORDER) ;
"RTN","PXRMEXLD",230,0)
 N ARRAY,ITEM,CNT
"RTN","PXRMEXLD",231,0)
 F CNT=1:1 S ITEM=$P(STRING,",",CNT) Q:'ITEM  S ARRAY(ITEM)=""
"RTN","PXRMEXLD",232,0)
 K STRING
"RTN","PXRMEXLD",233,0)
 F CNT=1:1 S ITEM=$O(ARRAY(ITEM),ORDER) Q:'ITEM  D
"RTN","PXRMEXLD",234,0)
 .S $P(STRING,",",CNT)=ITEM
"RTN","PXRMEXLD",235,0)
 Q
"RTN","PXRMEXLD",236,0)
 ;
"RTN","PXRMEXLD",237,0)
 ;Check if used by other dialogs
"RTN","PXRMEXLD",238,0)
OTHER(NAME,LIST) ;
"RTN","PXRMEXLD",239,0)
 N DDATA,DIEN,DNAME,DTYP,IEN
"RTN","PXRMEXLD",240,0)
 S IEN=$O(^PXRMD(801.41,"B",NAME,0)) Q:'IEN
"RTN","PXRMEXLD",241,0)
 ;Check if used by other dialogs
"RTN","PXRMEXLD",242,0)
 I '$D(^PXRMD(801.41,"AD",IEN)) Q
"RTN","PXRMEXLD",243,0)
 ;Build list of dialogs using this component
"RTN","PXRMEXLD",244,0)
 S DIEN=0
"RTN","PXRMEXLD",245,0)
 F  S DIEN=$O(^PXRMD(801.41,"AD",IEN,DIEN)) Q:'DIEN  D
"RTN","PXRMEXLD",246,0)
 .S DDATA=$G(^PXRMD(801.41,DIEN,0)) Q:DDATA=""
"RTN","PXRMEXLD",247,0)
 .S DNAME=$P(DDATA,U),DTYP=$P(DDATA,U,4) Q:DNAME=""
"RTN","PXRMEXLD",248,0)
 .;Include only dialogs that are not part of this reminder dialog
"RTN","PXRMEXLD",249,0)
 .I $D(^TMP("PXRMEXTMP",$J,"DMAP",DNAME)) Q
"RTN","PXRMEXLD",250,0)
 .S LIST(DNAME)=DTYP
"RTN","PXRMEXLD",251,0)
 Q
"RTN","PXRMEXLD",252,0)
 ;
"RTN","PXRMEXLD",253,0)
 ;Validate sequence numbers
"RTN","PXRMEXLD",254,0)
VALID(STRING) ;
"RTN","PXRMEXLD",255,0)
 N CNT,FOUND,OK
"RTN","PXRMEXLD",256,0)
 S FOUND=0,OK=1
"RTN","PXRMEXLD",257,0)
 F CNT=1:1 S SEL=$P(STRING,",",CNT) Q:'SEL  D
"RTN","PXRMEXLD",258,0)
 .;Invalid selection
"RTN","PXRMEXLD",259,0)
 .I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("SEL",SEL))) D  Q
"RTN","PXRMEXLD",260,0)
 ..S OK=0 W $C(7),!,SEL_" is not a valid item number." H 2
"RTN","PXRMEXLD",261,0)
 .S FOUND=1
"RTN","PXRMEXLD",262,0)
 Q:OK&FOUND 1
"RTN","PXRMEXLD",263,0)
 Q 0
"RTN","PXRMEXLD",264,0)
 ;
"RTN","PXRMEXLD",265,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM EXCH SELECT DIALOG",0))_U_"1:"_VALMCNT
"RTN","PXRMEXLD",266,0)
 S XQORM("A")="Select Action: "
"RTN","PXRMEXLD",267,0)
 Q
"RTN","PXRMEXLD",268,0)
 ;
"RTN","PXRMEXLD",269,0)
XSEL ;PXRM EXCH SELECT DIALOG validation
"RTN","PXRMEXLD",270,0)
 N ALL,CNT,ERR,IEN,IND,PXRMDONE,SELECT,SEL
"RTN","PXRMEXLD",271,0)
 S ALL="",PXRMDONE=0,PXRMBG=$G(VALMBG)
"RTN","PXRMEXLD",272,0)
 ;Invalid selection
"RTN","PXRMEXLD",273,0)
 S SELECT=$P(XQORNOD(0),"=",2) I '$$VALID(SELECT) S VALMBCK="R" Q
"RTN","PXRMEXLD",274,0)
 ;
"RTN","PXRMEXLD",275,0)
 ;Sort the SELECTION into reverse order
"RTN","PXRMEXLD",276,0)
 D ORDER(.SELECT,-1)
"RTN","PXRMEXLD",277,0)
 ;
"RTN","PXRMEXLD",278,0)
 ;Lock the file
"RTN","PXRMEXLD",279,0)
 I '$$LOCK^PXRMEXID S VALMBCK="R" Q
"RTN","PXRMEXLD",280,0)
 ;
"RTN","PXRMEXLD",281,0)
 ;Install dialog component(s)
"RTN","PXRMEXLD",282,0)
 S CNT=0
"RTN","PXRMEXLD",283,0)
 F CNT=1:1 S SEL=$P(SELECT,",",CNT) Q:'SEL  D  Q:PXRMDONE
"RTN","PXRMEXLD",284,0)
 .D INSCOM^PXRMEXID(SEL,0)
"RTN","PXRMEXLD",285,0)
 ;
"RTN","PXRMEXLD",286,0)
 ;Unlock file
"RTN","PXRMEXLD",287,0)
 D UNLOCK^PXRMEXID
"RTN","PXRMEXLD",288,0)
 ;
"RTN","PXRMEXLD",289,0)
 ;
"RTN","PXRMEXLD",290,0)
 ;Rebuild Workfile
"RTN","PXRMEXLD",291,0)
 D DISP^PXRMEXLD(PXRMMODE)
"RTN","PXRMEXLD",292,0)
 ;
"RTN","PXRMEXLD",293,0)
 ;Refresh
"RTN","PXRMEXLD",294,0)
 S VALMBCK="R" I $D(PXRMBG) S VALMBG=PXRMBG
"RTN","PXRMEXLD",295,0)
 Q
"RTN","PXRMEXLI")
0^33^B19945664
"RTN","PXRMEXLI",1,0)
PXRMEXLI ; SLC/PKR - List Manager routines for repository entry install. ;12/14/2001
"RTN","PXRMEXLI",2,0)
 ;;1.5;CLINICAL REMINDERS;**5,7**;Jun 19, 2000
"RTN","PXRMEXLI",3,0)
 ;
"RTN","PXRMEXLI",4,0)
 ;======================================================================
"RTN","PXRMEXLI",5,0)
INSALL ;Install all components in a repository entry.
"RTN","PXRMEXLI",6,0)
 N IND,INSTALL
"RTN","PXRMEXLI",7,0)
 K ^TMP("PXRMEXIA",$J)
"RTN","PXRMEXLI",8,0)
 ;Set the install date and time.
"RTN","PXRMEXLI",9,0)
 S ^TMP("PXRMEXIA",$J,"DT")=$$NOW^XLFDT
"RTN","PXRMEXLI",10,0)
 ;Initialize the name change storage.
"RTN","PXRMEXLI",11,0)
 K PXRMNMCH
"RTN","PXRMEXLI",12,0)
 S (IND,INSTALL,PXRMDONE)=0
"RTN","PXRMEXLI",13,0)
 F  S IND=$O(^TMP("PXRMEXLC",$J,"SEL",IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMEXLI",14,0)
 . D INSCOM(IND,.INSTALL)
"RTN","PXRMEXLI",15,0)
 ;
"RTN","PXRMEXLI",16,0)
 ;If anything was installed rebuild the display.
"RTN","PXRMEXLI",17,0)
 I INSTALL D CDISP^PXRMEXLC(PXRMRIEN)
"RTN","PXRMEXLI",18,0)
 ;
"RTN","PXRMEXLI",19,0)
 ;Save the install history in the repository.
"RTN","PXRMEXLI",20,0)
 D SAVHIST^PXRMEXU1
"RTN","PXRMEXLI",21,0)
 Q
"RTN","PXRMEXLI",22,0)
 ;
"RTN","PXRMEXLI",23,0)
 ;======================================================================
"RTN","PXRMEXLI",24,0)
INSCOM(IND,INSTALL) ;Install component IND.
"RTN","PXRMEXLI",25,0)
 ;PXRMRIEN is not passed because this is invoked by the ListManger
"RTN","PXRMEXLI",26,0)
 ;action to install a repository entry.
"RTN","PXRMEXLI",27,0)
 N ACTION,ATTR,END,EXISTS,FIELDNUM,FILENUM,IND120,JND120,NEWPT01
"RTN","PXRMEXLI",28,0)
 N PT01,RTN,START,TEMP,TEMP0
"RTN","PXRMEXLI",29,0)
 S TEMP=^TMP("PXRMEXLC",$J,"SEL",IND)
"RTN","PXRMEXLI",30,0)
 S FILENUM=$P(TEMP,U,1)
"RTN","PXRMEXLI",31,0)
 S EXISTS=$P(TEMP,U,4)
"RTN","PXRMEXLI",32,0)
 ;Dialogs use their own installation screen.
"RTN","PXRMEXLI",33,0)
 I FILENUM=801.41 D  Q
"RTN","PXRMEXLI",34,0)
 . D START^PXRMEXLD
"RTN","PXRMEXLI",35,0)
 . S VALMBCK="R"
"RTN","PXRMEXLI",36,0)
 S IND120=$P(TEMP,U,2)
"RTN","PXRMEXLI",37,0)
 S JND120=$P(TEMP,U,3)
"RTN","PXRMEXLI",38,0)
 S TEMP=^PXD(811.8,PXRMRIEN,120,IND120,1,JND120,0)
"RTN","PXRMEXLI",39,0)
 S START=$P(TEMP,U,2)
"RTN","PXRMEXLI",40,0)
 S END=$P(TEMP,U,3)
"RTN","PXRMEXLI",41,0)
 S TEMP=^PXD(811.8,PXRMRIEN,100,START,0)
"RTN","PXRMEXLI",42,0)
 ;Go to full screen mode.
"RTN","PXRMEXLI",43,0)
 D FULL^VALM1
"RTN","PXRMEXLI",44,0)
 I ((FILENUM=0)!(FILENUM=811.4)),DUZ(0)'="@" D  Q
"RTN","PXRMEXLI",45,0)
 . I FILENUM=0 W !,"Only programmers can install routines."
"RTN","PXRMEXLI",46,0)
 . I FILENUM=811.4 W !,"Only programmers can install Reminder Computed Findings."
"RTN","PXRMEXLI",47,0)
 . H 2
"RTN","PXRMEXLI",48,0)
 . S VALMBCK="R"
"RTN","PXRMEXLI",49,0)
 I FILENUM=0 D
"RTN","PXRMEXLI",50,0)
 . D RTNLD^PXRMEXIC(PXRMRIEN,START,END,.ATTR,.RTN)
"RTN","PXRMEXLI",51,0)
 . S ACTION=$$GETRACT^PXRMEXCF(.ATTR,.NEWNAME,.PXRMNMCH,.RTN,EXISTS)
"RTN","PXRMEXLI",52,0)
 .;Save what was done for the installation summary.
"RTN","PXRMEXLI",53,0)
 . S ^TMP("PXRMEXIA",$J,IND,"ROUTINE",ATTR("NAME"),ACTION)=NEWNAME
"RTN","PXRMEXLI",54,0)
 E  D
"RTN","PXRMEXLI",55,0)
 .;Make sure we have the .01, some files have .001.
"RTN","PXRMEXLI",56,0)
 . S TEMP0=$P(TEMP,";",3)
"RTN","PXRMEXLI",57,0)
 . S FIELDNUM=$P(TEMP0,"~",1)
"RTN","PXRMEXLI",58,0)
 . I FIELDNUM=.001 S TEMP=^PXD(811.8,PXRMRIEN,100,(START+1),0)
"RTN","PXRMEXLI",59,0)
 . S PT01=$P(TEMP,"~",2)
"RTN","PXRMEXLI",60,0)
 . D SETATTR^PXRMEXFI(.ATTR,FILENUM)
"RTN","PXRMEXLI",61,0)
 . S ACTION=$$GETFACT^PXRMEXFI(PT01,.ATTR,.NEWPT01,.PXRMNMCH,EXISTS)
"RTN","PXRMEXLI",62,0)
 .;Save what was done for the installation summary.
"RTN","PXRMEXLI",63,0)
 . S ^TMP("PXRMEXIA",$J,IND,ATTR("FILE NAME"),ATTR("PT01"),ACTION)=NEWPT01
"RTN","PXRMEXLI",64,0)
 ;If the ACTION is Quit then quit the entire install.
"RTN","PXRMEXLI",65,0)
 I ACTION="Q" S PXRMDONE=1 Q
"RTN","PXRMEXLI",66,0)
 ;If the ACTION is Skip then skip this component.
"RTN","PXRMEXLI",67,0)
 I ACTION="S" S VALMBCK="R" Q
"RTN","PXRMEXLI",68,0)
 ;If the ACTION is rePlace then skip this component.
"RTN","PXRMEXLI",69,0)
 I ACTION="P" S VALMBCK="R" Q
"RTN","PXRMEXLI",70,0)
 ;Install this component.
"RTN","PXRMEXLI",71,0)
 I FILENUM=0 D
"RTN","PXRMEXLI",72,0)
 . S NEWPT01=$P($G(PXRMNMCH(ATTR("FILE NUMBER"),ATTR("NAME"))),"~",2)
"RTN","PXRMEXLI",73,0)
 . I NEWPT01="" S NEWPT01=ATTR("NAME")
"RTN","PXRMEXLI",74,0)
 . D RTNSAVE^PXRMEXIC(.RTN,NEWPT01)
"RTN","PXRMEXLI",75,0)
 . S INSTALL=1
"RTN","PXRMEXLI",76,0)
 E  D
"RTN","PXRMEXLI",77,0)
 . D FILE^PXRMEXIC(PXRMRIEN,EXISTS,IND120,JND120,ACTION,.ATTR,.PXRMNMCH)
"RTN","PXRMEXLI",78,0)
 . S INSTALL=1
"RTN","PXRMEXLI",79,0)
 S VALMBCK="R"
"RTN","PXRMEXLI",80,0)
 Q
"RTN","PXRMEXLI",81,0)
 ;
"RTN","PXRMEXLI",82,0)
 ;======================================================================
"RTN","PXRMEXLI",83,0)
INSSEL ;Get a list of components to install.
"RTN","PXRMEXLI",84,0)
 N IND,INSTALL,VALMBG,VALMLST,VALMY
"RTN","PXRMEXLI",85,0)
 ;
"RTN","PXRMEXLI",86,0)
 S VALMBG=1,VALMLST=+$O(^TMP("PXRMEXLC",$J,"IDX",""),-1)
"RTN","PXRMEXLI",87,0)
 ;
"RTN","PXRMEXLI",88,0)
 ;Get the list to install.
"RTN","PXRMEXLI",89,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMEXLI",90,0)
 ;If there is no list quit.
"RTN","PXRMEXLI",91,0)
 I '$D(VALMY) Q
"RTN","PXRMEXLI",92,0)
 ;
"RTN","PXRMEXLI",93,0)
 K ^TMP("PXRMEXIA",$J)
"RTN","PXRMEXLI",94,0)
 ;Set the install date and time.
"RTN","PXRMEXLI",95,0)
 S ^TMP("PXRMEXIA",$J,"DT")=$$NOW^XLFDT
"RTN","PXRMEXLI",96,0)
 ;
"RTN","PXRMEXLI",97,0)
 ;Initialize the name change storage.
"RTN","PXRMEXLI",98,0)
 K PXRMNMCH
"RTN","PXRMEXLI",99,0)
 S (IND,INSTALL)=0
"RTN","PXRMEXLI",100,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMEXLI",101,0)
 .D INSCOM(IND,.INSTALL)
"RTN","PXRMEXLI",102,0)
 ;
"RTN","PXRMEXLI",103,0)
 ;If anything was installed rebuild the display.
"RTN","PXRMEXLI",104,0)
 I INSTALL D CDISP^PXRMEXLC(PXRMRIEN)
"RTN","PXRMEXLI",105,0)
 ;
"RTN","PXRMEXLI",106,0)
 ;Save the install history in the repository.
"RTN","PXRMEXLI",107,0)
 D SAVHIST^PXRMEXU1
"RTN","PXRMEXLI",108,0)
 Q
"RTN","PXRMEXLI",109,0)
 ;
"RTN","PXRMEXLI",110,0)
 ;======================================================================
"RTN","PXRMEXLI",111,0)
INSTALL ;Install the repository entry PXRMRIEN.
"RTN","PXRMEXLI",112,0)
 N IEN,IND,VALMY
"RTN","PXRMEXLI",113,0)
 ;Make sure the component list exists for this entry. PXRMRIEN is
"RTN","PXRMEXLI",114,0)
 ;set in INSTALL^PXRMEXLR.
"RTN","PXRMEXLI",115,0)
 I '$D(^PXD(811.8,PXRMRIEN,120)) D CLIST^PXRMEXU1(.PXRMRIEN)
"RTN","PXRMEXLI",116,0)
 I PXRMRIEN=-1 Q
"RTN","PXRMEXLI",117,0)
 ;Format the component list for display.
"RTN","PXRMEXLI",118,0)
 D CDISP^PXRMEXLC(PXRMRIEN)
"RTN","PXRMEXLI",119,0)
 S VALMCNT=$O(^TMP("PXRMEXLC",$J,"IDX"),-1)
"RTN","PXRMEXLI",120,0)
 S VALMBCK="R"
"RTN","PXRMEXLI",121,0)
 D XQORM
"RTN","PXRMEXLI",122,0)
 Q
"RTN","PXRMEXLI",123,0)
 ;
"RTN","PXRMEXLI",124,0)
 ;Exit action added to PXRM EXCH INSTALL MENU
"RTN","PXRMEXLI",125,0)
PEXIT ;PXRM EXCH INSTALL MENU protocol exit code
"RTN","PXRMEXLI",126,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEXLI",127,0)
 ;Reset after page up/down etc
"RTN","PXRMEXLI",128,0)
 D XQORM
"RTN","PXRMEXLI",129,0)
 Q
"RTN","PXRMEXLI",130,0)
 ;
"RTN","PXRMEXLI",131,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM EXCH SELECT COMPONENT",0))_U_"1:"_VALMCNT
"RTN","PXRMEXLI",132,0)
 S XQORM("A")="Select Action: "
"RTN","PXRMEXLI",133,0)
 Q
"RTN","PXRMEXLI",134,0)
 ;
"RTN","PXRMEXLI",135,0)
XSEL ;PXRM EXCH SELECT COMPONENT validation
"RTN","PXRMEXLI",136,0)
 N CNT,SELECT,SEL,PXRMDONE
"RTN","PXRMEXLI",137,0)
 S SELECT=$P(XQORNOD(0),"=",2)
"RTN","PXRMEXLI",138,0)
 I '$$VALID^PXRMEXLD(SELECT) S VALMBCK="R" Q
"RTN","PXRMEXLI",139,0)
 ;
"RTN","PXRMEXLI",140,0)
 ;Sort selections into ascending sequence order
"RTN","PXRMEXLI",141,0)
 D ORDER^PXRMEXLD(.SELECT,1)
"RTN","PXRMEXLI",142,0)
 ;
"RTN","PXRMEXLI",143,0)
 K ^TMP("PXRMEXIA",$J)
"RTN","PXRMEXLI",144,0)
 ;Set the install date and time.
"RTN","PXRMEXLI",145,0)
 S ^TMP("PXRMEXIA",$J,"DT")=$$NOW^XLFDT
"RTN","PXRMEXLI",146,0)
 ;
"RTN","PXRMEXLI",147,0)
 ;Install selected component
"RTN","PXRMEXLI",148,0)
 N INSTALL
"RTN","PXRMEXLI",149,0)
 S INSTALL=0,CNT=0,PXRMDONE=0
"RTN","PXRMEXLI",150,0)
 F CNT=1:1 S SEL=$P(SELECT,",",CNT) Q:'SEL  D  Q:PXRMDONE
"RTN","PXRMEXLI",151,0)
 .D INSCOM(SEL,.INSTALL)
"RTN","PXRMEXLI",152,0)
 ;
"RTN","PXRMEXLI",153,0)
 ;If anything was installed rebuild the display.
"RTN","PXRMEXLI",154,0)
 I INSTALL D CDISP^PXRMEXLC(PXRMRIEN)
"RTN","PXRMEXLI",155,0)
 ;
"RTN","PXRMEXLI",156,0)
 ;Save the install history in the repository.
"RTN","PXRMEXLI",157,0)
 D SAVHIST^PXRMEXU1
"RTN","PXRMEXLI",158,0)
 ;
"RTN","PXRMEXLI",159,0)
 ;Clear any renames made in the last session
"RTN","PXRMEXLI",160,0)
 K PXRMNMCH
"RTN","PXRMEXLI",161,0)
 Q
"RTN","PXRMEXPR")
0^16^B39925559
"RTN","PXRMEXPR",1,0)
PXRMEXPR ; SLC/PKR/PJH - Routines to create packed reminder definitions. ;08/31/2001
"RTN","PXRMEXPR",2,0)
 ;;1.5;CLINICAL REMINDERS;**5,7**;Jun 19, 2000
"RTN","PXRMEXPR",3,0)
 ;======================================================================
"RTN","PXRMEXPR",4,0)
ADDFILE(FLIST,ROOT,FILENAME) ;Add a file to the list of finding files.
"RTN","PXRMEXPR",5,0)
 N DIC,DO,FILENUM
"RTN","PXRMEXPR",6,0)
 S DIC="^"_ROOT
"RTN","PXRMEXPR",7,0)
 K DO
"RTN","PXRMEXPR",8,0)
 D DO^DIC1
"RTN","PXRMEXPR",9,0)
 S FILENUM=+DO(2)
"RTN","PXRMEXPR",10,0)
 S FILENAME=$P(DO,U,1)
"RTN","PXRMEXPR",11,0)
 S FLIST(FILENAME)=FILENUM
"RTN","PXRMEXPR",12,0)
 Q
"RTN","PXRMEXPR",13,0)
 ;
"RTN","PXRMEXPR",14,0)
 ;======================================================================
"RTN","PXRMEXPR",15,0)
ADDFIND(FLIST,FILENAME,IEN) ;Add a finding to the list of findings.
"RTN","PXRMEXPR",16,0)
 S FLIST(FILENAME,"F",IEN)=""
"RTN","PXRMEXPR",17,0)
 ;Make sure categories are included for any health factors and they
"RTN","PXRMEXPR",18,0)
 ;come first in the list of health factors.
"RTN","PXRMEXPR",19,0)
 I FILENAME="HEALTH FACTORS" D
"RTN","PXRMEXPR",20,0)
 . N CAT
"RTN","PXRMEXPR",21,0)
 . S CAT=$P(^AUTTHF(IEN,0),U,3)
"RTN","PXRMEXPR",22,0)
 . S FLIST(FILENAME,"C",CAT)=""
"RTN","PXRMEXPR",23,0)
 Q
"RTN","PXRMEXPR",24,0)
 ;
"RTN","PXRMEXPR",25,0)
 ;======================================================================
"RTN","PXRMEXPR",26,0)
BLDSPON(RIEN,FINDLIST,SPONLIST) ;Build the sponsor list.
"RTN","PXRMEXPR",27,0)
 N DIEN,IEN,IND,IND0
"RTN","PXRMEXPR",28,0)
 ;Start with the definition.
"RTN","PXRMEXPR",29,0)
 D GETSPON(811.9,RIEN,.SPONLIST)
"RTN","PXRMEXPR",30,0)
 ;If there is a dialog add it.
"RTN","PXRMEXPR",31,0)
 S DIEN=+$P($G(^PXD(811.9,RIEN,51)),U,1)
"RTN","PXRMEXPR",32,0)
 I DIEN>0 D GETSPON(801.41,DIEN,.SPONLIST)
"RTN","PXRMEXPR",33,0)
 ;Go through the finding list to find additional sponsors.
"RTN","PXRMEXPR",34,0)
 S IND=""
"RTN","PXRMEXPR",35,0)
 F  S IND=$O(FINDLIST(IND)) Q:IND=""  D
"RTN","PXRMEXPR",36,0)
 . S FILENUM=FINDLIST(IND)
"RTN","PXRMEXPR",37,0)
 . I (FILENUM'<800)&(FILENUM'>811.9) D
"RTN","PXRMEXPR",38,0)
 .. S IND0=""
"RTN","PXRMEXPR",39,0)
 .. F  S IND0=$O(FINDLIST(IND,IND0)) Q:IND0=""  D
"RTN","PXRMEXPR",40,0)
 ... S IEN=""
"RTN","PXRMEXPR",41,0)
 ... F  S IEN=+$O(FINDLIST(IND,IND0,IEN)) Q:IEN=0  D
"RTN","PXRMEXPR",42,0)
 .... D GETSPON(FILENUM,IEN,.SPONLIST)
"RTN","PXRMEXPR",43,0)
 ;Add any associated sponsors to the begining of the list.
"RTN","PXRMEXPR",44,0)
 S IND=""
"RTN","PXRMEXPR",45,0)
 F  S IND=$O(SPONLIST("S",IND)) Q:IND=""  D
"RTN","PXRMEXPR",46,0)
 . S IND0=0
"RTN","PXRMEXPR",47,0)
 . F  S IND0=+$O(^PXRMD(811.6,IND,2,IND0)) Q:IND0=0  D
"RTN","PXRMEXPR",48,0)
 .. S IEN=+^PXRMD(811.6,IND,2,IND0,0)
"RTN","PXRMEXPR",49,0)
 .. S SPONLIST("A",IEN)=""
"RTN","PXRMEXPR",50,0)
 Q
"RTN","PXRMEXPR",51,0)
 ;
"RTN","PXRMEXPR",52,0)
 ;======================================================================
"RTN","PXRMEXPR",53,0)
BLDTEXT(TMPIND) ;Combine the source information and the users input into the
"RTN","PXRMEXPR",54,0)
 ;"TEXT" array.
"RTN","PXRMEXPR",55,0)
 N IC,IND
"RTN","PXRMEXPR",56,0)
 S (IC,IND)=0
"RTN","PXRMEXPR",57,0)
 F  S IC=$O(^TMP(TMPIND,$J,"SRC",IC)) Q:+IC=0  D
"RTN","PXRMEXPR",58,0)
 . S IND=IND+1
"RTN","PXRMEXPR",59,0)
 . S ^TMP(TMPIND,$J,"TEXT",1,IND)=^TMP(TMPIND,$J,"SRC",IC)
"RTN","PXRMEXPR",60,0)
 ;
"RTN","PXRMEXPR",61,0)
 S IC=0
"RTN","PXRMEXPR",62,0)
 F  S IC=$O(^TMP(TMPIND,$J,"TXT",1,IC)) Q:+IC=0  D
"RTN","PXRMEXPR",63,0)
 . S IND=IND+1
"RTN","PXRMEXPR",64,0)
 . S ^TMP(TMPIND,$J,"TEXT",1,IND)=^TMP(TMPIND,$J,"TXT",1,IC,0)
"RTN","PXRMEXPR",65,0)
 Q
"RTN","PXRMEXPR",66,0)
 ;
"RTN","PXRMEXPR",67,0)
 ;======================================================================
"RTN","PXRMEXPR",68,0)
GETDFIND(RIEN,FLIST) ;Build the list of definition findings.
"RTN","PXRMEXPR",69,0)
 ;FLIST has the format FLIST(FILENAME)=file number, and for each
"RTN","PXRMEXPR",70,0)
 ;finding from the file FLIST(FILENAME,"F",IEN)="". For Health Factors
"RTN","PXRMEXPR",71,0)
 ;category entries are FLIST(FILENAME,"C",IEN)="".
"RTN","PXRMEXPR",72,0)
 N FILENAME,IEN,ROOT
"RTN","PXRMEXPR",73,0)
 S ROOT=""
"RTN","PXRMEXPR",74,0)
 F  S ROOT=$O(^PXD(811.9,RIEN,20,"E",ROOT)) Q:ROOT=""  D
"RTN","PXRMEXPR",75,0)
 . D ADDFILE(.FLIST,ROOT,.FILENAME)
"RTN","PXRMEXPR",76,0)
 . S IEN=0
"RTN","PXRMEXPR",77,0)
 . F  S IEN=$O(^PXD(811.9,RIEN,20,"E",ROOT,IEN)) Q:+IEN=0  D
"RTN","PXRMEXPR",78,0)
 .. D ADDFIND(.FLIST,FILENAME,IEN)
"RTN","PXRMEXPR",79,0)
 Q
"RTN","PXRMEXPR",80,0)
 ;
"RTN","PXRMEXPR",81,0)
 ;======================================================================
"RTN","PXRMEXPR",82,0)
GETSPON(FILENUM,IEN,SPONLIST) ;Add sponsors to the sponsor list.
"RTN","PXRMEXPR",83,0)
 N ENTRY,ROOT,SPONSOR
"RTN","PXRMEXPR",84,0)
 S ROOT=$$GET1^DID(FILENUM,"","","GLOBAL NAME")
"RTN","PXRMEXPR",85,0)
 S ENTRY=ROOT_IEN_",100)"
"RTN","PXRMEXPR",86,0)
 S ENTRY=$G(@ENTRY)
"RTN","PXRMEXPR",87,0)
 S SPONSOR=$P(ENTRY,U,2)
"RTN","PXRMEXPR",88,0)
 I SPONSOR'="" S SPONLIST("S",SPONSOR)=""
"RTN","PXRMEXPR",89,0)
 Q
"RTN","PXRMEXPR",90,0)
 ;
"RTN","PXRMEXPR",91,0)
 ;======================================================================
"RTN","PXRMEXPR",92,0)
GETTFIND(FLIST) ;If there are any terms in the list of findings go through
"RTN","PXRMEXPR",93,0)
 ;them and add the mapped findings to the list of findings.
"RTN","PXRMEXPR",94,0)
 I '$D(FLIST("REMINDER TERM")) Q
"RTN","PXRMEXPR",95,0)
 N FILENAME,ROOT,TIEN
"RTN","PXRMEXPR",96,0)
 S TIEN=0
"RTN","PXRMEXPR",97,0)
 F  S TIEN=$O(FLIST("REMINDER TERM","F",TIEN)) Q:+TIEN=0  D
"RTN","PXRMEXPR",98,0)
 . S ROOT=""
"RTN","PXRMEXPR",99,0)
 . F  S ROOT=$O(^PXRMD(811.5,TIEN,20,"E",ROOT)) Q:ROOT=""  D
"RTN","PXRMEXPR",100,0)
 .. D ADDFILE(.FLIST,ROOT,.FILENAME)
"RTN","PXRMEXPR",101,0)
 .. S IEN=0
"RTN","PXRMEXPR",102,0)
 .. F  S IEN=$O(^PXRMD(811.5,TIEN,20,"E",ROOT,IEN)) Q:+IEN=0  D
"RTN","PXRMEXPR",103,0)
 ... D ADDFIND(.FLIST,FILENAME,IEN)
"RTN","PXRMEXPR",104,0)
 Q
"RTN","PXRMEXPR",105,0)
 ;
"RTN","PXRMEXPR",106,0)
 ;======================================================================
"RTN","PXRMEXPR",107,0)
GETTEXT(RIEN,TMPIND,INDEX) ;Let the user input some text.
"RTN","PXRMEXPR",108,0)
 N DIC,DWLW,DWPK
"RTN","PXRMEXPR",109,0)
 ;If this is the description text, load the reminder description as
"RTN","PXRMEXPR",110,0)
 ;the default.
"RTN","PXRMEXPR",111,0)
 S RIEN=+RIEN
"RTN","PXRMEXPR",112,0)
 I RIEN>0 M ^TMP(TMPIND,$J,INDEX,1)=^PXD(811.9,RIEN,1)
"RTN","PXRMEXPR",113,0)
 S DIC="^TMP(TMPIND,$J,"""_INDEX_""",1,"
"RTN","PXRMEXPR",114,0)
 S DWLW=72
"RTN","PXRMEXPR",115,0)
 S DWPK=1
"RTN","PXRMEXPR",116,0)
 D EN^DIWE
"RTN","PXRMEXPR",117,0)
 Q
"RTN","PXRMEXPR",118,0)
 ;
"RTN","PXRMEXPR",119,0)
 ;======================================================================
"RTN","PXRMEXPR",120,0)
PACK(RTP,TMPIND) ;Create the packed reminder, store it in
"RTN","PXRMEXPR",121,0)
 ;^TMP(TMPIND,$J). TMPIND should be namespaced and set by the caller.
"RTN","PXRMEXPR",122,0)
 ;Save the source information
"RTN","PXRMEXPR",123,0)
 I +RTP'>0 Q
"RTN","PXRMEXPR",124,0)
 K ^TMP(TMPIND,$J)
"RTN","PXRMEXPR",125,0)
 D PUTSRC(RTP,TMPIND)
"RTN","PXRMEXPR",126,0)
 ;
"RTN","PXRMEXPR",127,0)
 ;Have the user input text that describes the reminder.
"RTN","PXRMEXPR",128,0)
 W !,"Enter a description of the reminder you are packing." H 3
"RTN","PXRMEXPR",129,0)
 D GETTEXT(RTP,TMPIND,"DESC")
"RTN","PXRMEXPR",130,0)
 ;
"RTN","PXRMEXPR",131,0)
 ;Have the user input keywords for indexing the reminder.
"RTN","PXRMEXPR",132,0)
 W !,"Enter keywords or phrases to help index the reminder you are packing."
"RTN","PXRMEXPR",133,0)
 W !,"Separate the keywords or phrases on each line with commas." H 3
"RTN","PXRMEXPR",134,0)
 D GETTEXT(0,TMPIND,"KEYWORD")
"RTN","PXRMEXPR",135,0)
 ;
"RTN","PXRMEXPR",136,0)
 ;Combine the source and input text into the "TEXT" array.
"RTN","PXRMEXPR",137,0)
 D BLDTEXT(TMPIND)
"RTN","PXRMEXPR",138,0)
 ;
"RTN","PXRMEXPR",139,0)
 W !,"Packing the reminder ... "
"RTN","PXRMEXPR",140,0)
 ;Build lists of the various reminder components.
"RTN","PXRMEXPR",141,0)
 N CF,IEN,IND0,FINDLIST,FILELIST,FILENAME,FILENUM,DLGLIST
"RTN","PXRMEXPR",142,0)
 N NUMF,NUMR,OBJLIST,RIEN,ROUTINE,RTNLIST
"RTN","PXRMEXPR",143,0)
 N SERROR,SPONLIST,TEMLIST
"RTN","PXRMEXPR",144,0)
 S RIEN=$P(RTP,U,1)
"RTN","PXRMEXPR",145,0)
 ;
"RTN","PXRMEXPR",146,0)
 ;Get the list of definition findings and start the sponsor list.
"RTN","PXRMEXPR",147,0)
 D GETDFIND(RIEN,.FINDLIST)
"RTN","PXRMEXPR",148,0)
 ;
"RTN","PXRMEXPR",149,0)
 ;Add term findings to the list.
"RTN","PXRMEXPR",150,0)
 D GETTFIND(.FINDLIST)
"RTN","PXRMEXPR",151,0)
 ;
"RTN","PXRMEXPR",152,0)
 ;If a dialog exists for this reminder add it and its findings to the
"RTN","PXRMEXPR",153,0)
 ;list. Also collect any embedded TIU objects or templates
"RTN","PXRMEXPR",154,0)
 D DIALOG^PXRMEXDG(RIEN,.DLGLIST,.FINDLIST,.OBJLIST,.TEMLIST)
"RTN","PXRMEXPR",155,0)
 ;
"RTN","PXRMEXPR",156,0)
 ;The finding list is complete, search the definition, dialog and
"RTN","PXRMEXPR",157,0)
 ;all the findings for sponsors.
"RTN","PXRMEXPR",158,0)
 D BLDSPON(RIEN,.FINDLIST,.SPONLIST)
"RTN","PXRMEXPR",159,0)
 ;
"RTN","PXRMEXPR",160,0)
 ;Put sponsors first on the file list.
"RTN","PXRMEXPR",161,0)
 S NUMF=0
"RTN","PXRMEXPR",162,0)
 S IND0=0
"RTN","PXRMEXPR",163,0)
 F  S IND0=$O(SPONLIST(IND0)) Q:IND0=""  D
"RTN","PXRMEXPR",164,0)
 . S IEN=0
"RTN","PXRMEXPR",165,0)
 . F  S IEN=$O(SPONLIST(IND0,IEN)) Q:IEN=""  D
"RTN","PXRMEXPR",166,0)
 .. S NUMF=NUMF+1
"RTN","PXRMEXPR",167,0)
 .. S FILELIST(NUMF)="REMINDER SPONSOR"_U_811.6_U_IEN
"RTN","PXRMEXPR",168,0)
 ;
"RTN","PXRMEXPR",169,0)
 ;Look for any computed findings and put the associated routines
"RTN","PXRMEXPR",170,0)
 ;on the routine list.
"RTN","PXRMEXPR",171,0)
 S (IEN,NUMR)=0
"RTN","PXRMEXPR",172,0)
 F  S IEN=$O(FINDLIST("REMINDER COMPUTED FINDINGS","F",IEN)) Q:IEN=""  D
"RTN","PXRMEXPR",173,0)
 . S ROUTINE=$P(^PXRMD(811.4,IEN,0),U,2)
"RTN","PXRMEXPR",174,0)
 . S NUMR=NUMR+1
"RTN","PXRMEXPR",175,0)
 . S RTNLIST(NUMR)=ROUTINE
"RTN","PXRMEXPR",176,0)
 ;
"RTN","PXRMEXPR",177,0)
 ;Go through the finding list and create the file list in the same
"RTN","PXRMEXPR",178,0)
 ;order as the finding list.
"RTN","PXRMEXPR",179,0)
 S FILENAME=""
"RTN","PXRMEXPR",180,0)
 F  S FILENAME=$O(FINDLIST(FILENAME)) Q:FILENAME=""  D
"RTN","PXRMEXPR",181,0)
 . S FILENUM=FINDLIST(FILENAME)
"RTN","PXRMEXPR",182,0)
 . S IND0=""
"RTN","PXRMEXPR",183,0)
 . F  S IND0=$O(FINDLIST(FILENAME,IND0)) Q:IND0=""  D
"RTN","PXRMEXPR",184,0)
 .. S IEN=0
"RTN","PXRMEXPR",185,0)
 .. F  S IEN=$O(FINDLIST(FILENAME,IND0,IEN)) Q:IEN=""  D
"RTN","PXRMEXPR",186,0)
 ... S NUMF=NUMF+1
"RTN","PXRMEXPR",187,0)
 ... S FILELIST(NUMF)=FILENAME_U_FILENUM_U_IEN
"RTN","PXRMEXPR",188,0)
 ;
"RTN","PXRMEXPR",189,0)
 ;Add TIU templates to the file list.
"RTN","PXRMEXPR",190,0)
 S IND0=0
"RTN","PXRMEXPR",191,0)
 F  S IND0=$O(TEMLIST(IND0)) Q:IND0=""  D
"RTN","PXRMEXPR",192,0)
 . S IEN=$$EXISTS^PXRMEXIU(8927.1,TEMLIST(IND0))
"RTN","PXRMEXPR",193,0)
 . S NUMF=NUMF+1
"RTN","PXRMEXPR",194,0)
 . S FILELIST(NUMF)="TIU TEMPLATE FIELD"_U_8927.1_U_IEN
"RTN","PXRMEXPR",195,0)
 ;
"RTN","PXRMEXPR",196,0)
 ;Put the reminder at next to last.
"RTN","PXRMEXPR",197,0)
 S NUMF=NUMF+1
"RTN","PXRMEXPR",198,0)
 S FILELIST(NUMF)="REMINDER DEFINITION"_U_811.9_U_RIEN
"RTN","PXRMEXPR",199,0)
 ;
"RTN","PXRMEXPR",200,0)
 ;Put dialogs last on the file list.
"RTN","PXRMEXPR",201,0)
 S FILENUM=$G(DLGLIST("DIALOG"))
"RTN","PXRMEXPR",202,0)
 S IND0=""
"RTN","PXRMEXPR",203,0)
 F  S IND0=$O(DLGLIST("DIALOG",IND0)) Q:IND0=""  D
"RTN","PXRMEXPR",204,0)
 . S IEN=""
"RTN","PXRMEXPR",205,0)
 . F  S IEN=$O(DLGLIST("DIALOG",IND0,IEN)) Q:IEN=""  D
"RTN","PXRMEXPR",206,0)
 .. S NUMF=NUMF+1
"RTN","PXRMEXPR",207,0)
 .. S FILELIST(NUMF)="REMINDER DIALOG"_U_FILENUM_U_IEN
"RTN","PXRMEXPR",208,0)
 ;
"RTN","PXRMEXPR",209,0)
 S SERROR=0
"RTN","PXRMEXPR",210,0)
 ;Put any routines into the ^TMP array.
"RTN","PXRMEXPR",211,0)
 D GRTN^PXRMEXPU(.RTNLIST,NUMR,TMPIND,.SERROR)
"RTN","PXRMEXPR",212,0)
 ;Put the GETS^DIQ extracts of the findings, dialogs, and
"RTN","PXRMEXPR",213,0)
 ;reminder definition into the ^TMP array.
"RTN","PXRMEXPR",214,0)
 D GDIQF^PXRMEXPU(.FILELIST,NUMF,TMPIND,.SERROR)
"RTN","PXRMEXPR",215,0)
 ;
"RTN","PXRMEXPR",216,0)
 ;If there were any errors saving the data kill the ^TMP array.
"RTN","PXRMEXPR",217,0)
 I SERROR K ^TMP(TMPIND,$J)
"RTN","PXRMEXPR",218,0)
 Q
"RTN","PXRMEXPR",219,0)
 ;
"RTN","PXRMEXPR",220,0)
 ;======================================================================
"RTN","PXRMEXPR",221,0)
PUTSRC(RTP,TMPIND) ;Save the source information
"RTN","PXRMEXPR",222,0)
 N LOC
"RTN","PXRMEXPR",223,0)
 S LOC=$$SITE^VASITE
"RTN","PXRMEXPR",224,0)
 S ^TMP(TMPIND,$J,"SRC","REMINDER")=$P(RTP,U,2)
"RTN","PXRMEXPR",225,0)
 S ^TMP(TMPIND,$J,"SRC","USER")=$P(^VA(200,DUZ,0),U,1)
"RTN","PXRMEXPR",226,0)
 S ^TMP(TMPIND,$J,"SRC","SITE")=$P(LOC,U,2)
"RTN","PXRMEXPR",227,0)
 S ^TMP(TMPIND,$J,"SRC","DATE")=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMEXPR",228,0)
 Q
"RTN","PXRMEXPR",229,0)
 ;
"RTN","PXRMEXPU")
0^29^B38103498
"RTN","PXRMEXPU",1,0)
PXRMEXPU ; SLC/PKR - Utilities for packing and unpacking repository entries. ;12/17/2001
"RTN","PXRMEXPU",2,0)
 ;;1.5;CLINICAL REMINDERS;**5,7**;Jun 19, 2000
"RTN","PXRMEXPU",3,0)
 ;======================================================================
"RTN","PXRMEXPU",4,0)
ASSAF(LIENS,LASTI) ;Assemble the stored pieces of the IENS.
"RTN","PXRMEXPU",5,0)
 N IENSA,IND
"RTN","PXRMEXPU",6,0)
 S IENSA=""
"RTN","PXRMEXPU",7,0)
 F IND=LIENS:-1:1 D
"RTN","PXRMEXPU",8,0)
 . S IENSA=IENSA_LASTI(IND)
"RTN","PXRMEXPU",9,0)
 Q IENSA
"RTN","PXRMEXPU",10,0)
 ;
"RTN","PXRMEXPU",11,0)
 ;======================================================================
"RTN","PXRMEXPU",12,0)
CONTOFDA(DIQOUT,IENROOT,IEN,SIEN) ;Convert the iens from the form
"RTN","PXRMEXPU",13,0)
 ;returned by GETS^DIQ to the FDA laygo form used by UPDATE^DIE.
"RTN","PXRMEXPU",14,0)
 ;DIQOUT contains the GETS^DIQ output. If any of the fields are
"RTN","PXRMEXPU",15,0)
 ;variable pointers change them to the resolved form.
"RTN","PXRMEXPU",16,0)
 N ABBR,IENS,IENSA,INTERNAL,FIELD,FILENUM
"RTN","PXRMEXPU",17,0)
 N LASTI,LIENS,LINE,PTRTO,ROOT,TEMP,TYPE,VLIST,VPTRLIST,WPLCNT
"RTN","PXRMEXPU",18,0)
 S LASTI(1)="+"_IEN_","
"RTN","PXRMEXPU",19,0)
 S LASTI(2)=+$G(SIEN)
"RTN","PXRMEXPU",20,0)
 S FILENUM=""
"RTN","PXRMEXPU",21,0)
 F  S FILENUM=$O(DIQOUT(FILENUM)) Q:FILENUM=""  D
"RTN","PXRMEXPU",22,0)
 . K TYPE,VPTRLIST
"RTN","PXRMEXPU",23,0)
 . S IENS=""
"RTN","PXRMEXPU",24,0)
 . F  S IENS=$O(DIQOUT(FILENUM,IENS)) Q:IENS=""  D
"RTN","PXRMEXPU",25,0)
 .. S LIENS=$L(IENS,",")-1
"RTN","PXRMEXPU",26,0)
 .. D SETLASTI(LIENS,.LASTI)
"RTN","PXRMEXPU",27,0)
 ..;Assemble the adding form of the IENS.
"RTN","PXRMEXPU",28,0)
 .. S IENSA=$$ASSAF(LIENS,.LASTI)
"RTN","PXRMEXPU",29,0)
 ..;Save IENROOT for UPDATE^DIE so all nodes will be installed at
"RTN","PXRMEXPU",30,0)
 ..;their original locations.
"RTN","PXRMEXPU",31,0)
 .. I LIENS>1 S IENROOT(+LASTI(LIENS))=$P(IENS,",",1)
"RTN","PXRMEXPU",32,0)
 .. S FIELD=""
"RTN","PXRMEXPU",33,0)
 .. F  S FIELD=$O(DIQOUT(FILENUM,IENS,FIELD)) Q:FIELD=""  D
"RTN","PXRMEXPU",34,0)
 ...;If there is no data then don't keep this entry.
"RTN","PXRMEXPU",35,0)
 ... I DIQOUT(FILENUM,IENS,FIELD)="" K DIQOUT(FILENUM,IENS,FIELD) Q
"RTN","PXRMEXPU",36,0)
 ...;Get the field type, if it is a variable-pointer then set up
"RTN","PXRMEXPU",37,0)
 ...;the resolved form.
"RTN","PXRMEXPU",38,0)
 ... I '$D(TYPE(FILENUM,FIELD)) S TYPE(FILENUM,FIELD)=$$GET1^DID(FILENUM,FIELD,"","TYPE")
"RTN","PXRMEXPU",39,0)
 ... I TYPE(FILENUM,FIELD)="POINTER" S PTRTO=$$GET1^DID(FILENUM,FIELD,"","POINTER")
"RTN","PXRMEXPU",40,0)
 ... E  S PTRTO=""
"RTN","PXRMEXPU",41,0)
 ...;If the field's type is COMPUTED then don't transport it.
"RTN","PXRMEXPU",42,0)
 ... I TYPE(FILENUM,FIELD)="COMPUTED" K DIQOUT(FILENUM,IENS,FIELD) Q
"RTN","PXRMEXPU",43,0)
 ... I TYPE(FILENUM,FIELD)="VARIABLE-POINTER" D
"RTN","PXRMEXPU",44,0)
 .... I '$D(VPTRLIST(FILENUM,FIELD)) D
"RTN","PXRMEXPU",45,0)
 ..... K VLIST
"RTN","PXRMEXPU",46,0)
 ..... D BLDRLIST^PXRMVPTR(FILENUM,FIELD,.VLIST)
"RTN","PXRMEXPU",47,0)
 ..... M VPTRLIST(FILENUM,FIELD)=VLIST
"RTN","PXRMEXPU",48,0)
 .... S INTERNAL=$$GET1^DIQ(FILENUM,IENS,FIELD,"I")
"RTN","PXRMEXPU",49,0)
 .... S (PTRTO,ROOT)=$P(INTERNAL,";",2)
"RTN","PXRMEXPU",50,0)
 .... S ABBR=$P(VPTRLIST(FILENUM,FIELD,ROOT),U,4)
"RTN","PXRMEXPU",51,0)
 .... S DIQOUT(FILENUM,IENS,FIELD)=ABBR_"."_DIQOUT(FILENUM,IENS,FIELD)
"RTN","PXRMEXPU",52,0)
 ... I TYPE(FILENUM,FIELD)="WORD-PROCESSING" D
"RTN","PXRMEXPU",53,0)
 .... S (LINE,WPLCNT)=0
"RTN","PXRMEXPU",54,0)
 .... F  S LINE=$O(DIQOUT(FILENUM,IENS,FIELD,LINE)) Q:LINE=""  D
"RTN","PXRMEXPU",55,0)
 ..... S WPLCNT=WPLCNT+1
"RTN","PXRMEXPU",56,0)
 ..... S DIQOUT(FILENUM,IENSA,FIELD,LINE)=DIQOUT(FILENUM,IENS,FIELD,LINE)
"RTN","PXRMEXPU",57,0)
 .... I WPLCNT>0 S DIQOUT(FILENUM,IENS,FIELD)="WP-start~"_WPLCNT
"RTN","PXRMEXPU",58,0)
 .... E  K DIQOUT(FILENUM,IENS,FIELD)
"RTN","PXRMEXPU",59,0)
 ...;Done processing, save the adding form.
"RTN","PXRMEXPU",60,0)
 ... S TEMP=DIQOUT(FILENUM,IENS,FIELD)
"RTN","PXRMEXPU",61,0)
 ...;For fields that point to files 80 and 80.1 we have to append a space
"RTN","PXRMEXPU",62,0)
 ...;so FileMan can resolve the pointers when installing a component.
"RTN","PXRMEXPU",63,0)
 ... I PTRTO["ICD" S TEMP=TEMP_" "
"RTN","PXRMEXPU",64,0)
 ... S DIQOUT(FILENUM,IENSA,FIELD)=TEMP
"RTN","PXRMEXPU",65,0)
 ... K DIQOUT(FILENUM,IENS,FIELD)
"RTN","PXRMEXPU",66,0)
 Q
"RTN","PXRMEXPU",67,0)
 ;
"RTN","PXRMEXPU",68,0)
 ;======================================================================
"RTN","PXRMEXPU",69,0)
GDIQF(LIST,NUM,TMPIND,SERROR) ;Save file entries into ^TMP(TMPIND,$J).
"RTN","PXRMEXPU",70,0)
 N DIQOUT,IENROOT,IND,FIELD,FILENAME,IENS,MSG,PT01,TEMP
"RTN","PXRMEXPU",71,0)
 S ^TMP(TMPIND,$J,"NUMF")=NUM
"RTN","PXRMEXPU",72,0)
 F IND=1:1:NUM D
"RTN","PXRMEXPU",73,0)
 . S TEMP=LIST(IND)
"RTN","PXRMEXPU",74,0)
 . S FILENAME=$P(TEMP,U,1)
"RTN","PXRMEXPU",75,0)
 . S FILENUM=$P(TEMP,U,2)
"RTN","PXRMEXPU",76,0)
 . S IEN=$P(TEMP,U,3)
"RTN","PXRMEXPU",77,0)
 . K DIQOUT,IENROOT
"RTN","PXRMEXPU",78,0)
 .;If the file entry is ok to install then get the entire entry,
"RTN","PXRMEXPU",79,0)
 .;otherwise just get the .01.
"RTN","PXRMEXPU",80,0)
 . I $$FOKTI^PXRMEXFI(FILENUM) S FIELD="**"
"RTN","PXRMEXPU",81,0)
 . E  S FIELD=.01
"RTN","PXRMEXPU",82,0)
 .;For PCE education topics VA- entries cannot be transported.
"RTN","PXRMEXPU",83,0)
 . I FILENUM=9999999.09 D
"RTN","PXRMEXPU",84,0)
 .. S PT01=$$GET1^DIQ(FILENUM,IEN,.01)
"RTN","PXRMEXPU",85,0)
 .. I PT01["VA-" S FIELD=.01
"RTN","PXRMEXPU",86,0)
 . D GETS^DIQ(FILENUM,IEN,FIELD,"","DIQOUT","MSG")
"RTN","PXRMEXPU",87,0)
 . I $D(MSG) D  Q
"RTN","PXRMEXPU",88,0)
 .. S SERROR=1,IND=NUM
"RTN","PXRMEXPU",89,0)
 .. N ETEXT
"RTN","PXRMEXPU",90,0)
 .. S ETEXT="GETS^DIQ failed for "_FILENAME_", it returned the following error message:"
"RTN","PXRMEXPU",91,0)
 .. W !,ETEXT
"RTN","PXRMEXPU",92,0)
 .. D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMEXPU",93,0)
 .. H 2
"RTN","PXRMEXPU",94,0)
 .. K MSG
"RTN","PXRMEXPU",95,0)
 .;Remove edit history from all reminder files.
"RTN","PXRMEXPU",96,0)
 . D RMEH(FILENUM,.DIQOUT)
"RTN","PXRMEXPU",97,0)
 .;Convert the iens to the FDA adding form.
"RTN","PXRMEXPU",98,0)
 . D CONTOFDA(.DIQOUT,.IENROOT,IEN)
"RTN","PXRMEXPU",99,0)
 .;Load the converted DIQOUT into TMP.
"RTN","PXRMEXPU",100,0)
 . M ^TMP(TMPIND,$J,IND,FILENAME)=DIQOUT
"RTN","PXRMEXPU",101,0)
 . M ^TMP(TMPIND,$J,IND,FILENAME_"_IENROOT")=IENROOT
"RTN","PXRMEXPU",102,0)
 Q
"RTN","PXRMEXPU",103,0)
 ;
"RTN","PXRMEXPU",104,0)
 ;======================================================================
"RTN","PXRMEXPU",105,0)
GETREM(ACTION) ;Get the reminder to save.
"RTN","PXRMEXPU",106,0)
 N DIC,Y
"RTN","PXRMEXPU",107,0)
 S DIC="^PXD(811.9,"
"RTN","PXRMEXPU",108,0)
 S DIC(0)="AEMQ"
"RTN","PXRMEXPU",109,0)
 S DIC("A")="Select Reminder Definition to "_ACTION_": "
"RTN","PXRMEXPU",110,0)
 D ^DIC
"RTN","PXRMEXPU",111,0)
 G:Y=-1 END
"RTN","PXRMEXPU",112,0)
END ;
"RTN","PXRMEXPU",113,0)
 Q Y
"RTN","PXRMEXPU",114,0)
 ;
"RTN","PXRMEXPU",115,0)
 ;======================================================================
"RTN","PXRMEXPU",116,0)
GRTN(LIST,NUM,TMPIND,SERROR) ;Save routines into ^TMP(TMPIND,$J).
"RTN","PXRMEXPU",117,0)
 N DIF,IEN,IND,TEMP,X,XCNP
"RTN","PXRMEXPU",118,0)
 S ^TMP(TMPIND,$J,"NUMR")=NUM
"RTN","PXRMEXPU",119,0)
 S X=""
"RTN","PXRMEXPU",120,0)
 F IND=1:1:NUM D
"RTN","PXRMEXPU",121,0)
 .;Make sure the routine exists.
"RTN","PXRMEXPU",122,0)
 . S X=LIST(IND)
"RTN","PXRMEXPU",123,0)
 . X ^%ZOSF("TEST")
"RTN","PXRMEXPU",124,0)
 . I $T D
"RTN","PXRMEXPU",125,0)
 .. S DIF="^TMP(TMPIND,$J,""ROUTINE"","""_X_""","
"RTN","PXRMEXPU",126,0)
 .. S XCNP=0
"RTN","PXRMEXPU",127,0)
 .. X ^%ZOSF("LOAD")
"RTN","PXRMEXPU",128,0)
 . E  D
"RTN","PXRMEXPU",129,0)
 .. S SERROR=1
"RTN","PXRMEXPU",130,0)
 .. W !,"Warning could not find routine ",X
"RTN","PXRMEXPU",131,0)
 .. H 2
"RTN","PXRMEXPU",132,0)
 Q
"RTN","PXRMEXPU",133,0)
 ;
"RTN","PXRMEXPU",134,0)
 ;======================================================================
"RTN","PXRMEXPU",135,0)
RMEH(FILENUM,DIQOUT) ;Clear the edit history from all reminder files.
"RTN","PXRMEXPU",136,0)
 ;Leave a stub so it can be filled in when the file is installed.
"RTN","PXRMEXPU",137,0)
 I (FILENUM<800)!(FILENUM>811.9) Q
"RTN","PXRMEXPU",138,0)
 N IEN,SFN,TARGET
"RTN","PXRMEXPU",139,0)
 ;Edit History is stored in node 110 for all files, get the
"RTN","PXRMEXPU",140,0)
 ;subfile number.
"RTN","PXRMEXPU",141,0)
 D FIELD^DID(FILENUM,110,"","SPECIFIER","TARGET")
"RTN","PXRMEXPU",142,0)
 S SFN=+$G(TARGET("SPECIFIER"))
"RTN","PXRMEXPU",143,0)
 I SFN=0 Q
"RTN","PXRMEXPU",144,0)
 ;Clean out the history.
"RTN","PXRMEXPU",145,0)
 S IENS=""
"RTN","PXRMEXPU",146,0)
 F  S IENS=$O(DIQOUT(SFN,IENS)) Q:IENS=""  K DIQOUT(SFN,IENS)
"RTN","PXRMEXPU",147,0)
 ;Create a stub for the install.
"RTN","PXRMEXPU",148,0)
 S IENS="1,"_$O(DIQOUT(FILENUM,""))
"RTN","PXRMEXPU",149,0)
 S DIQOUT(SFN,IENS,.01)=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMEXPU",150,0)
 S DIQOUT(SFN,IENS,1)=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXRMEXPU",151,0)
 S DIQOUT(SFN,IENS,2)="DIQOUT("_SFN_","_IENS_"2)"
"RTN","PXRMEXPU",152,0)
 S DIQOUT(SFN,IENS,2,1)="Exchange Stub"
"RTN","PXRMEXPU",153,0)
 Q
"RTN","PXRMEXPU",154,0)
 ;
"RTN","PXRMEXPU",155,0)
 ;======================================================================
"RTN","PXRMEXPU",156,0)
SETLASTI(LIENS,LASTI) ;Assemble the pieces of the IENS for the
"RTN","PXRMEXPU",157,0)
 ;FDA in the adding form. Note in this scheme we go from right to left.
"RTN","PXRMEXPU",158,0)
 ;The first index is fixed don't do anything with it.
"RTN","PXRMEXPU",159,0)
 I LIENS=1 Q
"RTN","PXRMEXPU",160,0)
 ;The second index is just incremented.
"RTN","PXRMEXPU",161,0)
 I LIENS=2 D  Q
"RTN","PXRMEXPU",162,0)
 . N T2
"RTN","PXRMEXPU",163,0)
 . S T2=+LASTI(LIENS)+1
"RTN","PXRMEXPU",164,0)
 . I T2=+LASTI(1) S T2=T2+1
"RTN","PXRMEXPU",165,0)
 . S LASTI(LIENS)="+"_T2_","
"RTN","PXRMEXPU",166,0)
 ;For the third and higher index make sure it is one higher than the
"RTN","PXRMEXPU",167,0)
 ;previous index.
"RTN","PXRMEXPU",168,0)
 I $G(LASTI(LIENS))<LASTI(LIENS-1) S LASTI(LIENS)="+"_(LASTI(LIENS-1)+1)_","
"RTN","PXRMEXPU",169,0)
 E  S LASTI(LIENS)="+"_(LASTI(LIENS)+1)_","
"RTN","PXRMEXPU",170,0)
 Q
"RTN","PXRMEXPU",171,0)
 ;
"RTN","PXRMEXPU",172,0)
 ;======================================================================
"RTN","PXRMEXPU",173,0)
UPDATE(SUCCESS,FDA,FDAIEN) ;Call to add new entries to the repository.
"RTN","PXRMEXPU",174,0)
 N MSG
"RTN","PXRMEXPU",175,0)
 ;Try to eliminate gaps in the repository.
"RTN","PXRMEXPU",176,0)
 S $P(^PXD(811.8,0),U,3)=0
"RTN","PXRMEXPU",177,0)
 D UPDATE^DIE("E","FDA","FDAIEN","MSG")
"RTN","PXRMEXPU",178,0)
 I $D(MSG) D
"RTN","PXRMEXPU",179,0)
 . N DATE,RNAME
"RTN","PXRMEXPU",180,0)
 . S SUCCESS=0
"RTN","PXRMEXPU",181,0)
 . W !,"The update failed, UPDATE^DIE returned the following error message:"
"RTN","PXRMEXPU",182,0)
 . D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMEXPU",183,0)
 . S RNAME=FDA(811.8,"+1,",.01)
"RTN","PXRMEXPU",184,0)
 . S DATE=FDA(811.8,"+1,",.03)
"RTN","PXRMEXPU",185,0)
 . W !!,"Exchange File entry ",RNAME," date packed ",DATE," did not get stored!"
"RTN","PXRMEXPU",186,0)
 . W !,"Examine the above error message for the reason.",!
"RTN","PXRMEXPU",187,0)
 . H 2
"RTN","PXRMEXPU",188,0)
 E  S SUCCESS=1
"RTN","PXRMEXPU",189,0)
 Q
"RTN","PXRMEXPU",190,0)
 ;
"RTN","PXRMEXSI")
0^18^B25282487
"RTN","PXRMEXSI",1,0)
PXRMEXSI ; SLC/PKR/PJH - Silent repository entry install. ;12/19/2001
"RTN","PXRMEXSI",2,0)
 ;;1.5;CLINICAL REMINDERS;**5,7**;Jun 19, 2000
"RTN","PXRMEXSI",3,0)
 ;
"RTN","PXRMEXSI",4,0)
 ;======================================================================
"RTN","PXRMEXSI",5,0)
BUILD ;Build list manager workfile from ^TMP("PXRMEXTMP" (see ^PXRMEXLB)
"RTN","PXRMEXSI",6,0)
 N DDATA,DDLG,IND,JND,NLINE,NSEL
"RTN","PXRMEXSI",7,0)
 S NLINE=0,NSEL=0
"RTN","PXRMEXSI",8,0)
 S DDLG=$G(^TMP("PXRMEXTMP",$J,"PXRMDNAM")) Q:DDLG=""
"RTN","PXRMEXSI",9,0)
 ;
"RTN","PXRMEXSI",10,0)
 ;Save reminder dialog
"RTN","PXRMEXSI",11,0)
 S DDATA=^TMP("PXRMEXTMP",$J,"DLOC",DDLG)
"RTN","PXRMEXSI",12,0)
 S IND=$P(DDATA,U,3),JND=$P(DDATA,U,4)
"RTN","PXRMEXSI",13,0)
 D DSAVE(DDLG)
"RTN","PXRMEXSI",14,0)
 ;
"RTN","PXRMEXSI",15,0)
 ;Process sub-components
"RTN","PXRMEXSI",16,0)
 D DCMP(DDLG)
"RTN","PXRMEXSI",17,0)
 Q
"RTN","PXRMEXSI",18,0)
 ;
"RTN","PXRMEXSI",19,0)
 ;======================================================================
"RTN","PXRMEXSI",20,0)
DCMP(DLG) ;Search for dialog components
"RTN","PXRMEXSI",21,0)
 N DDLG,DEND,DNAM,DSEQ,DSTRT,IND,JND
"RTN","PXRMEXSI",22,0)
 S DSEQ=0
"RTN","PXRMEXSI",23,0)
 F  S DSEQ=$O(^TMP("PXRMEXTMP",$J,"DMAP",DLG,DSEQ)) Q:'DSEQ  D
"RTN","PXRMEXSI",24,0)
 .S DDATA=^TMP("PXRMEXTMP",$J,"DMAP",DLG,DSEQ)
"RTN","PXRMEXSI",25,0)
 .S DNAM=$P(DDATA,U),DSTRT=$P(DDATA,U,2),DEND=$P(DDATA,U,3) Q:DNAM=""
"RTN","PXRMEXSI",26,0)
 .S IND=$P(DDATA,U,4),JND=$P(DDATA,U,5)
"RTN","PXRMEXSI",27,0)
 .;Save line in workfile
"RTN","PXRMEXSI",28,0)
 .D DSAVE(DNAM)
"RTN","PXRMEXSI",29,0)
 .;
"RTN","PXRMEXSI",30,0)
 .;Process any sub-components
"RTN","PXRMEXSI",31,0)
 .I $D(^TMP("PXRMEXTMP",$J,"DMAP",DNAM)) D DCMP(DNAM)
"RTN","PXRMEXSI",32,0)
 Q
"RTN","PXRMEXSI",33,0)
 ;
"RTN","PXRMEXSI",34,0)
 ;======================================================================
"RTN","PXRMEXSI",35,0)
DSAVE(DNAM) ;Update workfile
"RTN","PXRMEXSI",36,0)
 ;Ignore national prompts
"RTN","PXRMEXSI",37,0)
 I $$PXRM^PXRMEXID(DNAM) Q
"RTN","PXRMEXSI",38,0)
 N DEXIST
"RTN","PXRMEXSI",39,0)
 S NSEL=NSEL+1
"RTN","PXRMEXSI",40,0)
 ;Check if dialog exists
"RTN","PXRMEXSI",41,0)
 S DEXIST=$$EXISTS^PXRMEXIU(801.41,DNAM)
"RTN","PXRMEXSI",42,0)
 ;Store the file number, start and stop line in the exchange file.
"RTN","PXRMEXSI",43,0)
 S ^TMP("PXRMEXLD",$J,"SEL",NSEL)=FILENUM_U_IND_U_JND_U_DEXIST
"RTN","PXRMEXSI",44,0)
 Q
"RTN","PXRMEXSI",45,0)
 ;
"RTN","PXRMEXSI",46,0)
 ;======================================================================
"RTN","PXRMEXSI",47,0)
INITMPG ;Initialize ^TMP arrays.
"RTN","PXRMEXSI",48,0)
 K ^TMP("PXRMEXIA",$J)
"RTN","PXRMEXSI",49,0)
 K ^TMP("PXRMEXLC",$J)
"RTN","PXRMEXSI",50,0)
 K ^TMP("PXRMEXLD",$J)
"RTN","PXRMEXSI",51,0)
 K ^TMP("PXRMEXTMP",$J)
"RTN","PXRMEXSI",52,0)
 Q
"RTN","PXRMEXSI",53,0)
 ;
"RTN","PXRMEXSI",54,0)
 ;======================================================================
"RTN","PXRMEXSI",55,0)
INSCOM(PXRMRIEN,IND,TEMP,REMNAME) ;Install component IND of PXRMRIEN.
"RTN","PXRMEXSI",56,0)
 N ACTION,ATTR,END,EXISTS,FILENUM,IND120,JND120,NAME
"RTN","PXRMEXSI",57,0)
 N PT01,RTN,START
"RTN","PXRMEXSI",58,0)
 S FILENUM=$P(TEMP,U,1),EXISTS=$P(TEMP,U,4)
"RTN","PXRMEXSI",59,0)
 S IND120=$P(TEMP,U,2),JND120=$P(TEMP,U,3)
"RTN","PXRMEXSI",60,0)
 S TEMP=^PXD(811.8,PXRMRIEN,120,IND120,1,JND120,0)
"RTN","PXRMEXSI",61,0)
 S ACTION="I"
"RTN","PXRMEXSI",62,0)
 I EXISTS D
"RTN","PXRMEXSI",63,0)
 . S ACTION="O"
"RTN","PXRMEXSI",64,0)
 S START=$P(TEMP,U,2)
"RTN","PXRMEXSI",65,0)
 S END=$P(TEMP,U,3)
"RTN","PXRMEXSI",66,0)
 S TEMP=^PXD(811.8,PXRMRIEN,100,START,0)
"RTN","PXRMEXSI",67,0)
 I FILENUM=0 D
"RTN","PXRMEXSI",68,0)
 . D RTNLD^PXRMEXIC(PXRMRIEN,START,END,.ATTR,.RTN)
"RTN","PXRMEXSI",69,0)
 .;Save what was done for the installation summary.
"RTN","PXRMEXSI",70,0)
 . S ^TMP("PXRMEXIA",$J,IND,"ROUTINE",ATTR("NAME"),ACTION)=""
"RTN","PXRMEXSI",71,0)
 E  D 
"RTN","PXRMEXSI",72,0)
 . S PT01=$P(TEMP,"~",2)
"RTN","PXRMEXSI",73,0)
 . D SETATTR^PXRMEXFI(.ATTR,FILENUM)
"RTN","PXRMEXSI",74,0)
 .;Save what was done for the installation summary.
"RTN","PXRMEXSI",75,0)
 . S ^TMP("PXRMEXIA",$J,IND,ATTR("FILE NAME"),PT01,ACTION)=""
"RTN","PXRMEXSI",76,0)
 ;Install this component.
"RTN","PXRMEXSI",77,0)
 I FILENUM=0 D RTNSAVE^PXRMEXIC(.RTN,ATTR("NAME"))
"RTN","PXRMEXSI",78,0)
 E  D FILE^PXRMEXIC(PXRMRIEN,EXISTS,IND120,JND120,ACTION,.ATTR,.PXRMNMCH)
"RTN","PXRMEXSI",79,0)
 ;Save reminder name
"RTN","PXRMEXSI",80,0)
 I FILENUM=811.9 S REMNAME=PT01
"RTN","PXRMEXSI",81,0)
 ;If this component was not installed add to the no install message.
"RTN","PXRMEXSI",82,0)
 Q
"RTN","PXRMEXSI",83,0)
 ;
"RTN","PXRMEXSI",84,0)
 ;======================================================================
"RTN","PXRMEXSI",85,0)
INSDLG(PXRMRIEN) ;Install dialog components (in reverse order)
"RTN","PXRMEXSI",86,0)
 ;
"RTN","PXRMEXSI",87,0)
 K ^TMP("PXRMEXSI",$J)
"RTN","PXRMEXSI",88,0)
 ;
"RTN","PXRMEXSI",89,0)
 N IND,TEMP,JND120
"RTN","PXRMEXSI",90,0)
 ;Build list of components
"RTN","PXRMEXSI",91,0)
 D BUILD
"RTN","PXRMEXSI",92,0)
 ;
"RTN","PXRMEXSI",93,0)
 S IND=""
"RTN","PXRMEXSI",94,0)
 F  S IND=$O(^TMP("PXRMEXLD",$J,"SEL",IND),-1) Q:'IND  D
"RTN","PXRMEXSI",95,0)
 .S TEMP=^TMP("PXRMEXLD",$J,"SEL",IND),JND120=$P(TEMP,U,3)
"RTN","PXRMEXSI",96,0)
 .;Skip install if dialog occurs more than once
"RTN","PXRMEXSI",97,0)
 .I $D(^TMP("PXRMEXSI",$J,JND120)) Q
"RTN","PXRMEXSI",98,0)
 .S ^TMP("PXRMEXSI",$J,JND120)=""
"RTN","PXRMEXSI",99,0)
 .;Silent Dialog Install
"RTN","PXRMEXSI",100,0)
 .D INSCOM(PXRMRIEN,IND,TEMP,.REMNAME)
"RTN","PXRMEXSI",101,0)
 ;
"RTN","PXRMEXSI",102,0)
 K ^TMP("PXRMEXSI",$J)
"RTN","PXRMEXSI",103,0)
 Q
"RTN","PXRMEXSI",104,0)
 ;
"RTN","PXRMEXSI",105,0)
 ;======================================================================
"RTN","PXRMEXSI",106,0)
INSTALL(PXRMRIEN) ;Install all components in a repository entry.
"RTN","PXRMEXSI",107,0)
 N DNAME,FILENUM,IND,PXRMNMCH,REMNAME,TEMP
"RTN","PXRMEXSI",108,0)
 ;Initialize TMP globals.
"RTN","PXRMEXSI",109,0)
 D INITMPG
"RTN","PXRMEXSI",110,0)
 ;Restore the "^" characters.
"RTN","PXRMEXSI",111,0)
 D POSTKIDS^PXRMEXU5(PXRMRIEN)
"RTN","PXRMEXSI",112,0)
 ;Build the component list.
"RTN","PXRMEXSI",113,0)
 K ^PXD(811.8,PXRMRIEN,100,"B")
"RTN","PXRMEXSI",114,0)
 K ^PXD(811.8,PXRMRIEN,120)
"RTN","PXRMEXSI",115,0)
 D CLIST^PXRMEXU1(.PXRMRIEN)
"RTN","PXRMEXSI",116,0)
 I PXRMRIEN=-1 Q
"RTN","PXRMEXSI",117,0)
 ;Build the selectable list.
"RTN","PXRMEXSI",118,0)
 D CDISP^PXRMEXLC(PXRMRIEN)
"RTN","PXRMEXSI",119,0)
 ;Set the install date and time.
"RTN","PXRMEXSI",120,0)
 S ^TMP("PXRMEXIA",$J,"DT")=$$NOW^XLFDT
"RTN","PXRMEXSI",121,0)
 ;Initialize the name change storage.
"RTN","PXRMEXSI",122,0)
 K PXRMNMCH
"RTN","PXRMEXSI",123,0)
 S (IND,INSTALL)=0
"RTN","PXRMEXSI",124,0)
 F  S IND=$O(^TMP("PXRMEXLC",$J,"SEL",IND)) Q:+IND=0  D
"RTN","PXRMEXSI",125,0)
 . S TEMP=^TMP("PXRMEXLC",$J,"SEL",IND)
"RTN","PXRMEXSI",126,0)
 . S FILENUM=$P(TEMP,U,1)
"RTN","PXRMEXSI",127,0)
 . ;Install dialog components
"RTN","PXRMEXSI",128,0)
 . I FILENUM=801.41 N PXRMDONE S PXRMDONE=0 D INSDLG(PXRMRIEN) Q
"RTN","PXRMEXSI",129,0)
 . ;Install component
"RTN","PXRMEXSI",130,0)
 . E  D INSCOM(PXRMRIEN,IND,TEMP,.REMNAME)
"RTN","PXRMEXSI",131,0)
 ;
"RTN","PXRMEXSI",132,0)
 ;Get the dialog name
"RTN","PXRMEXSI",133,0)
 S DNAME=$G(^TMP("PXRMEXTMP",$J,"PXRMDNAM"))
"RTN","PXRMEXSI",134,0)
 ;Link the dialog if it exists
"RTN","PXRMEXSI",135,0)
 I DNAME'="" D
"RTN","PXRMEXSI",136,0)
 . N DIEN,RIEN
"RTN","PXRMEXSI",137,0)
 .;Get the dialog ien
"RTN","PXRMEXSI",138,0)
 . S DIEN=$$EXISTS^PXRMEXIU(801.41,DNAME) Q:'DIEN
"RTN","PXRMEXSI",139,0)
 .;Get the reminder ien
"RTN","PXRMEXSI",140,0)
 . S RIEN=+$$EXISTS^PXRMEXIU(811.9,REMNAME) Q:'RIEN
"RTN","PXRMEXSI",141,0)
 . I RIEN>0 D
"RTN","PXRMEXSI",142,0)
 .. N DA,DIE,DIK,DR
"RTN","PXRMEXSI",143,0)
 ..;Set reminder to dialog pointer
"RTN","PXRMEXSI",144,0)
 .. S DR="51///^S X=DNAME",DIE="^PXD(811.9,",DA=RIEN
"RTN","PXRMEXSI",145,0)
 .. D ^DIE
"RTN","PXRMEXSI",146,0)
 ..;Reindex the AG cross-references.
"RTN","PXRMEXSI",147,0)
 .. S DIK="^PXD(811.9,",DA=RIEN
"RTN","PXRMEXSI",148,0)
 .. D IX^DIK
"RTN","PXRMEXSI",149,0)
 ;
"RTN","PXRMEXSI",150,0)
 ;Save the install history.
"RTN","PXRMEXSI",151,0)
 D SAVHIST^PXRMEXU1
"RTN","PXRMEXSI",152,0)
 ;If any components were skipped send the message.
"RTN","PXRMEXSI",153,0)
 I $D(^TMP("PXRMEXNI",$J)) D
"RTN","PXRMEXSI",154,0)
 . N NE,XMSUB
"RTN","PXRMEXSI",155,0)
 . S NE=$O(^TMP("PXRMEXNI",$J,""),-1)+1
"RTN","PXRMEXSI",156,0)
 . S ^TMP("PXRMEXNI",$J,NE,0)="Please review and make changes as necessary."
"RTN","PXRMEXSI",157,0)
 . K ^TMP("PXRMXMZ",$J)
"RTN","PXRMEXSI",158,0)
 . M ^TMP("PXRMXMZ",$J)=^TMP("PXRMEXNI",$J)
"RTN","PXRMEXSI",159,0)
 . S XMSUB="COMPONENTS SKIPPED DURING SILENT MODE INSTALL"
"RTN","PXRMEXSI",160,0)
 . D SEND^PXRMMSG(XMSUB)
"RTN","PXRMEXSI",161,0)
 ;Cleanup TMP globals.
"RTN","PXRMEXSI",162,0)
 D INITMPG
"RTN","PXRMEXSI",163,0)
 Q
"RTN","PXRMEXSI",164,0)
 ;
"RTN","PXRMEXU1")
0^17^B69576342
"RTN","PXRMEXU1",1,0)
PXRMEXU1 ; SLC/PKR/PJH - Reminder exchange repository utilities, #1. ;09/04/2001
"RTN","PXRMEXU1",2,0)
 ;;1.5;CLINICAL REMINDERS;**5,7**;Jun 19, 2000
"RTN","PXRMEXU1",3,0)
 ;======================================================================
"RTN","PXRMEXU1",4,0)
CLIST(IEN) ;Build the list of components for the repository
"RTN","PXRMEXU1",5,0)
 ;entry IEN.
"RTN","PXRMEXU1",6,0)
 N CMPNT,COMIND,COMORDR,CSTART,CSUM,END,FILENAME,FILENUM
"RTN","PXRMEXU1",7,0)
 N IND,INDEXAT,JND,LINE,NCMPNT,NCTYPE,NITEMS,NLINES,NUCMPNT
"RTN","PXRMEXU1",8,0)
 N PT01,START,TEMP,TAG,TYPE,UCOM,VRSN
"RTN","PXRMEXU1",9,0)
 S LINE=^PXD(811.8,IEN,100,1,0)
"RTN","PXRMEXU1",10,0)
 ;Make sure it is XML version 1.
"RTN","PXRMEXU1",11,0)
 I LINE'["<?xml version=""1.0""" D  Q
"RTN","PXRMEXU1",12,0)
 . W !,"Exchange file entry not in proper format!"
"RTN","PXRMEXU1",13,0)
 . S IEN=-1
"RTN","PXRMEXU1",14,0)
 . H 2
"RTN","PXRMEXU1",15,0)
 S LINE=^PXD(811.8,IEN,100,2,0)
"RTN","PXRMEXU1",16,0)
 I LINE'="<REMINDER_EXCHANGE_FILE_ENTRY>" D  Q
"RTN","PXRMEXU1",17,0)
 . W !,"Not an Exchange File entry!"
"RTN","PXRMEXU1",18,0)
 . S IEN=-1
"RTN","PXRMEXU1",19,0)
 . H 2
"RTN","PXRMEXU1",20,0)
 ;S CSUM=$P(LINE,U,2)
"RTN","PXRMEXU1",21,0)
 S LINE=^PXD(811.8,IEN,100,3,0)
"RTN","PXRMEXU1",22,0)
 S VRSN=$$GETTAGV^PXRMEXU3(LINE,"<PACKAGE_VERSION>")
"RTN","PXRMEXU1",23,0)
 S LINE=^PXD(811.8,IEN,100,4,0)
"RTN","PXRMEXU1",24,0)
 S INDEXAT=+$P(LINE,"<INDEX_AT>",2)
"RTN","PXRMEXU1",25,0)
 S LINE=^PXD(811.8,IEN,100,INDEXAT,0)
"RTN","PXRMEXU1",26,0)
 I LINE'="<INDEX>" D  Q
"RTN","PXRMEXU1",27,0)
 . W !,"Index missing, cannot continue!"
"RTN","PXRMEXU1",28,0)
 . S IEN=-1
"RTN","PXRMEXU1",29,0)
 . H 2
"RTN","PXRMEXU1",30,0)
 S JND=INDEXAT+1
"RTN","PXRMEXU1",31,0)
 S LINE=^PXD(811.8,IEN,100,JND,0)
"RTN","PXRMEXU1",32,0)
 S NCMPNT=+$$GETTAGV^PXRMEXU3(LINE,"<NUMBER_OF_COMPONENTS>")
"RTN","PXRMEXU1",33,0)
 F IND=1:1:NCMPNT D
"RTN","PXRMEXU1",34,0)
 . K END,START
"RTN","PXRMEXU1",35,0)
 . F  S JND=JND+1,LINE=^PXD(811.8,IEN,100,JND,0) Q:LINE="</COMPONENT>"  D
"RTN","PXRMEXU1",36,0)
 .. S TAG=$$GETTAG^PXRMEXU3(LINE)
"RTN","PXRMEXU1",37,0)
 .. I TAG["START" S START(TAG)=+$$GETTAGV^PXRMEXU3(LINE,TAG)
"RTN","PXRMEXU1",38,0)
 .. I TAG["END" S END(TAG)=+$$GETTAGV^PXRMEXU3(LINE,TAG)
"RTN","PXRMEXU1",39,0)
 . I $D(START("<M_ROUTINE_START>")) D
"RTN","PXRMEXU1",40,0)
 .. S CSTART=START("<M_ROUTINE_START>")
"RTN","PXRMEXU1",41,0)
 .. S CMPNT(IND,"TYPE")="ROUTINE"
"RTN","PXRMEXU1",42,0)
 .. S LINE=^PXD(811.8,IEN,100,CSTART+1,0)
"RTN","PXRMEXU1",43,0)
 .. S CMPNT(IND,"NAME")=$$GETTAGV^PXRMEXU3(LINE,"<ROUTINE_NAME>")
"RTN","PXRMEXU1",44,0)
 .. S CMPNT(IND,"FILENUM")=0
"RTN","PXRMEXU1",45,0)
 ..;Save the actual start and end of the code.
"RTN","PXRMEXU1",46,0)
 .. S CMPNT(IND,"START")=START("<ROUTINE_CODE_START>")
"RTN","PXRMEXU1",47,0)
 .. S CMPNT(IND,"END")=END("<ROUTINE_CODE_END>")
"RTN","PXRMEXU1",48,0)
 . I $D(START("<FILE_START>")) D
"RTN","PXRMEXU1",49,0)
 .. S CSTART=START("<FILE_START>")
"RTN","PXRMEXU1",50,0)
 .. S LINE=^PXD(811.8,IEN,100,CSTART+1,0)
"RTN","PXRMEXU1",51,0)
 .. S (CMPNT(IND,"TYPE"),CMPNT(IND,"FILENAME"))=$$GETTAGV^PXRMEXU3(LINE,"<FILE_NAME>")
"RTN","PXRMEXU1",52,0)
 .. S LINE=^PXD(811.8,IEN,100,CSTART+2,0)
"RTN","PXRMEXU1",53,0)
 .. S CMPNT(IND,"FILENUM")=$$GETTAGV^PXRMEXU3(LINE,"<FILE_NUMBER>")
"RTN","PXRMEXU1",54,0)
 .. S LINE=^PXD(811.8,IEN,100,CSTART+3,0)
"RTN","PXRMEXU1",55,0)
 .. S (CMPNT(IND,"NAME"),CMPNT(IND,"POINT_01"))=$$GETTAGV^PXRMEXU3(LINE,"<POINT_01>")
"RTN","PXRMEXU1",56,0)
 ..;Save the actual start and end of the FileMan FDA.
"RTN","PXRMEXU1",57,0)
 .. S CMPNT(IND,"FDA_START")=START("<FDA_START>")
"RTN","PXRMEXU1",58,0)
 .. S CMPNT(IND,"FDA_END")=END("<FDA_END>")
"RTN","PXRMEXU1",59,0)
 .. S CMPNT(IND,"IEN_ROOT_START")=$G(START("<IEN_ROOT_START>"))
"RTN","PXRMEXU1",60,0)
 .. S CMPNT(IND,"IEN_ROOT_END")=$G(END("<IEN_ROOT_END>"))
"RTN","PXRMEXU1",61,0)
 ;Build some indexes to order the component list.
"RTN","PXRMEXU1",62,0)
 F IND=1:1:NCMPNT D
"RTN","PXRMEXU1",63,0)
 . S TYPE=CMPNT(IND,"TYPE")
"RTN","PXRMEXU1",64,0)
 . S COMIND(TYPE,IND)=""
"RTN","PXRMEXU1",65,0)
 . S UCOM(TYPE)=""
"RTN","PXRMEXU1",66,0)
 ;Build the component order for display. The order is Routines,
"RTN","PXRMEXU1",67,0)
 ;Sponsors, ..., Definition, Dialog. Where ... stands for all other
"RTN","PXRMEXU1",68,0)
 ;components.
"RTN","PXRMEXU1",69,0)
 S NUCMPNT=0
"RTN","PXRMEXU1",70,0)
 I $D(UCOM("ROUTINE")) D
"RTN","PXRMEXU1",71,0)
 . S NUCMPNT=NUCMPNT+1
"RTN","PXRMEXU1",72,0)
 . S COMORDR(NUCMPNT,"ROUTINE")=""
"RTN","PXRMEXU1",73,0)
 . K UCOM("ROUTINE")
"RTN","PXRMEXU1",74,0)
 I $D(UCOM("REMINDER SPONSOR")) D
"RTN","PXRMEXU1",75,0)
 . S NUCMPNT=NUCMPNT+1
"RTN","PXRMEXU1",76,0)
 . S COMORDR(NUCMPNT,"REMINDER SPONSOR")=""
"RTN","PXRMEXU1",77,0)
 . K UCOM("REMINDER SPONSOR")
"RTN","PXRMEXU1",78,0)
 S TYPE=""
"RTN","PXRMEXU1",79,0)
 F  S TYPE=$O(UCOM(TYPE)) Q:TYPE=""  D
"RTN","PXRMEXU1",80,0)
 . I (TYPE="REMINDER DEFINITION")!(TYPE="REMINDER DIALOG") Q
"RTN","PXRMEXU1",81,0)
 . S NUCMPNT=NUCMPNT+1
"RTN","PXRMEXU1",82,0)
 . S COMORDR(NUCMPNT,TYPE)=""
"RTN","PXRMEXU1",83,0)
 . K UCOM(TYPE)
"RTN","PXRMEXU1",84,0)
 I $D(UCOM("REMINDER DEFINITION")) D
"RTN","PXRMEXU1",85,0)
 . S NUCMPNT=NUCMPNT+1
"RTN","PXRMEXU1",86,0)
 . S COMORDR(NUCMPNT,"REMINDER DEFINITION")=""
"RTN","PXRMEXU1",87,0)
 . K UCOM("REMINDER DEFINITION")
"RTN","PXRMEXU1",88,0)
 I $D(UCOM("REMINDER DIALOG")) D
"RTN","PXRMEXU1",89,0)
 . S NUCMPNT=NUCMPNT+1
"RTN","PXRMEXU1",90,0)
 . S COMORDR(NUCMPNT,"REMINDER DIALOG")=""
"RTN","PXRMEXU1",91,0)
 . K UCOM("REMINDER DIALOG")
"RTN","PXRMEXU1",92,0)
 ;Set the 0 node.
"RTN","PXRMEXU1",93,0)
 S ^PXD(811.8,IEN,120,0)=U_"811.802A"_U_NCMPNT_U_NCMPNT
"RTN","PXRMEXU1",94,0)
 S NCTYPE=0
"RTN","PXRMEXU1",95,0)
 S NITEMS=0
"RTN","PXRMEXU1",96,0)
 F NCTYPE=1:1:NUCMPNT D
"RTN","PXRMEXU1",97,0)
 . S TYPE=$O(COMORDR(NCTYPE,""))
"RTN","PXRMEXU1",98,0)
 . S NITEMS=0
"RTN","PXRMEXU1",99,0)
 . S IND=""
"RTN","PXRMEXU1",100,0)
 . F  S IND=$O(COMIND(TYPE,IND)) Q:IND=""  D
"RTN","PXRMEXU1",101,0)
 .. S NITEMS=NITEMS+1
"RTN","PXRMEXU1",102,0)
 .. I NITEMS=1 S FILENUM=CMPNT(IND,"FILENUM")
"RTN","PXRMEXU1",103,0)
 .. I TYPE="ROUTINE" S TEMP=CMPNT(IND,"NAME")_U_CMPNT(IND,"START")_U_CMPNT(IND,"END")
"RTN","PXRMEXU1",104,0)
 .. E  S TEMP=CMPNT(IND,"NAME")_U_CMPNT(IND,"FDA_START")_U_CMPNT(IND,"FDA_END")_U_$G(CMPNT(IND,"IEN_ROOT_START"))_U_$G(CMPNT(IND,"IEN_ROOT_END"))
"RTN","PXRMEXU1",105,0)
 .. S ^PXD(811.8,IEN,120,NCTYPE,1,NITEMS,0)=TEMP
"RTN","PXRMEXU1",106,0)
 . S ^PXD(811.8,IEN,120,NCTYPE,0)=TYPE_U_FILENUM_U_NITEMS
"RTN","PXRMEXU1",107,0)
 . S ^PXD(811.8,IEN,120,NCTYPE,1,0)=U_"811.8021A"_U_NITEMS_U_NITEMS
"RTN","PXRMEXU1",108,0)
 ;
"RTN","PXRMEXU1",109,0)
 ;Save the number of component types.
"RTN","PXRMEXU1",110,0)
 S ^PXD(811.8,IEN,119)=NCTYPE
"RTN","PXRMEXU1",111,0)
 Q
"RTN","PXRMEXU1",112,0)
 ;
"RTN","PXRMEXU1",113,0)
 ;======================================================================
"RTN","PXRMEXU1",114,0)
DELETE(LIST) ;Delete the repository entries in LIST.
"RTN","PXRMEXU1",115,0)
 N DA,DIK
"RTN","PXRMEXU1",116,0)
 S DIK="^PXD(811.8,"
"RTN","PXRMEXU1",117,0)
 S DA=""
"RTN","PXRMEXU1",118,0)
 F  S DA=$O(LIST(DA)) Q:+DA=0  D ^DIK
"RTN","PXRMEXU1",119,0)
 Q
"RTN","PXRMEXU1",120,0)
 ;
"RTN","PXRMEXU1",121,0)
 ;======================================================================
"RTN","PXRMEXU1",122,0)
DELHIST(RIEN,IHIND) ;Delete install history IHIND in repository entry RIEN.
"RTN","PXRMEXU1",123,0)
 N DATE
"RTN","PXRMEXU1",124,0)
 S DATE=$P(^PXD(811.8,RIEN,130,IHIND,0),U)
"RTN","PXRMEXU1",125,0)
 K ^PXD(811.8,RIEN,130,IHIND)
"RTN","PXRMEXU1",126,0)
 K ^PXD(811.8,RIEN,130,"B",DATE)
"RTN","PXRMEXU1",127,0)
 Q
"RTN","PXRMEXU1",128,0)
 ;
"RTN","PXRMEXU1",129,0)
 ;======================================================================
"RTN","PXRMEXU1",130,0)
DESC(RIEN,RNAME,SOURCE,DATEP,DESC,KEYWORD) ;Build the description.
"RTN","PXRMEXU1",131,0)
 N JND,LC,NKEYW
"RTN","PXRMEXU1",132,0)
 S LC=1
"RTN","PXRMEXU1",133,0)
 S ^PXD(811.8,RIEN,110,LC,0)="Reminder:    "_RNAME
"RTN","PXRMEXU1",134,0)
 S LC=LC+1
"RTN","PXRMEXU1",135,0)
 S ^PXD(811.8,RIEN,110,LC,0)="Source:      "_SOURCE
"RTN","PXRMEXU1",136,0)
 S LC=LC+1
"RTN","PXRMEXU1",137,0)
 S ^PXD(811.8,RIEN,110,LC,0)="Date Packed: "_DATEP
"RTN","PXRMEXU1",138,0)
 S LC=LC+1
"RTN","PXRMEXU1",139,0)
 S ^PXD(811.8,RIEN,110,LC,0)=""
"RTN","PXRMEXU1",140,0)
 ;Add the user's description.
"RTN","PXRMEXU1",141,0)
 S LC=LC+1
"RTN","PXRMEXU1",142,0)
 S ^PXD(811.8,RIEN,110,LC,0)="Description:"
"RTN","PXRMEXU1",143,0)
 F JND=1:1:+$P($G(@DESC@(1,0)),U,4) D
"RTN","PXRMEXU1",144,0)
 . S LC=LC+1
"RTN","PXRMEXU1",145,0)
 . S ^PXD(811.8,RIEN,110,LC,0)=@DESC@(1,JND,0)
"RTN","PXRMEXU1",146,0)
 S LC=LC+1
"RTN","PXRMEXU1",147,0)
 S ^PXD(811.8,RIEN,110,LC,0)=""
"RTN","PXRMEXU1",148,0)
 ;Add the keywords.
"RTN","PXRMEXU1",149,0)
 S LC=LC+1
"RTN","PXRMEXU1",150,0)
 S ^PXD(811.8,RIEN,110,LC,0)="Keywords:"
"RTN","PXRMEXU1",151,0)
 S NKEYW=+$P($G(@KEYWORD@(1,0)),U,4)
"RTN","PXRMEXU1",152,0)
 I NKEYW=0 D
"RTN","PXRMEXU1",153,0)
 . S LC=LC+1
"RTN","PXRMEXU1",154,0)
 . S ^PXD(811.8,RIEN,110,LC,0)="No keywords given"
"RTN","PXRMEXU1",155,0)
 F JND=1:1:NKEYW D
"RTN","PXRMEXU1",156,0)
 . S LC=LC+1
"RTN","PXRMEXU1",157,0)
 . S ^PXD(811.8,RIEN,110,LC,0)=@KEYWORD@(1,JND,0)
"RTN","PXRMEXU1",158,0)
 S LC=LC+1
"RTN","PXRMEXU1",159,0)
 S ^PXD(811.8,RIEN,110,LC,0)=""
"RTN","PXRMEXU1",160,0)
 S LC=LC+1
"RTN","PXRMEXU1",161,0)
 S ^PXD(811.8,RIEN,110,LC,0)="Components:"
"RTN","PXRMEXU1",162,0)
 S ^PXD(811.8,RIEN,110,0)=U_811.804_U_LC_U_LC
"RTN","PXRMEXU1",163,0)
 Q
"RTN","PXRMEXU1",164,0)
 ;
"RTN","PXRMEXU1",165,0)
 ;======================================================================
"RTN","PXRMEXU1",166,0)
RIEN(LIEN) ;Given the list ien return the repository ien.
"RTN","PXRMEXU1",167,0)
 N RIEN
"RTN","PXRMEXU1",168,0)
 S RIEN=$G(^TMP("PXRMEXLR",$J,"IDX",LIEN,LIEN))
"RTN","PXRMEXU1",169,0)
 Q RIEN
"RTN","PXRMEXU1",170,0)
 ;
"RTN","PXRMEXU1",171,0)
 ;======================================================================
"RTN","PXRMEXU1",172,0)
SAVHIST ;Save the installation history in the repository.
"RTN","PXRMEXU1",173,0)
 N ACTION,DATE,CMPNT,FTYPE,IND,INDEX,ITEM,JND,NEWNAME,TEMP,USER
"RTN","PXRMEXU1",174,0)
 ;Find the first open spot in the Installation History node.
"RTN","PXRMEXU1",175,0)
 S (IND,JND)=0
"RTN","PXRMEXU1",176,0)
 F  S IND=+$O(^PXD(811.8,PXRMRIEN,130,IND)) S JND=JND+1 Q:(IND=0)!(JND>IND)
"RTN","PXRMEXU1",177,0)
 ;Set the 0 node.
"RTN","PXRMEXU1",178,0)
 S ^PXD(811.8,PXRMRIEN,130,0)=U_"811.803DA"_U_JND_U_JND
"RTN","PXRMEXU1",179,0)
 S IND=JND
"RTN","PXRMEXU1",180,0)
 S DATE=^TMP("PXRMEXIA",$J,"DT")
"RTN","PXRMEXU1",181,0)
 S USER=$$GET1^DIQ(200,DUZ,.01,"")
"RTN","PXRMEXU1",182,0)
 S ^PXD(811.8,PXRMRIEN,130,IND,0)=DATE_U_USER
"RTN","PXRMEXU1",183,0)
 S ^PXD(811.8,PXRMRIEN,130,"B",DATE,IND)=""
"RTN","PXRMEXU1",184,0)
 S (INDEX,JND)=0
"RTN","PXRMEXU1",185,0)
 F  S INDEX=$O(^TMP("PXRMEXIA",$J,INDEX)) Q:+INDEX=0  D
"RTN","PXRMEXU1",186,0)
 . S JND=JND+1
"RTN","PXRMEXU1",187,0)
 . S CMPNT=$O(^TMP("PXRMEXIA",$J,INDEX,""))
"RTN","PXRMEXU1",188,0)
 . S ITEM=$O(^TMP("PXRMEXIA",$J,INDEX,CMPNT,""))
"RTN","PXRMEXU1",189,0)
 . S ACTION=$O(^TMP("PXRMEXIA",$J,INDEX,CMPNT,ITEM,""))
"RTN","PXRMEXU1",190,0)
 . S NEWNAME=$G(^TMP("PXRMEXIA",$J,INDEX,CMPNT,ITEM,ACTION))
"RTN","PXRMEXU1",191,0)
 . S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,0)=INDEX_U_CMPNT_U_ITEM_U_ACTION_U_NEWNAME
"RTN","PXRMEXU1",192,0)
 .;Set the 0 node.
"RTN","PXRMEXU1",193,0)
 . S ^PXD(811.8,PXRMRIEN,130,IND,1,0)=U_"811.8031A"_U_JND_U_JND
"RTN","PXRMEXU1",194,0)
 .;Check for finding item changes and save them.
"RTN","PXRMEXU1",195,0)
 . S FTYPE=""
"RTN","PXRMEXU1",196,0)
 . I CMPNT["DEFINITION" S FTYPE="DEFF"
"RTN","PXRMEXU1",197,0)
 . I CMPNT["DIALOG" S FTYPE="DIAF"
"RTN","PXRMEXU1",198,0)
 . I CMPNT["TERM" S FTYPE="TRMF"
"RTN","PXRMEXU1",199,0)
 . I (FTYPE'=""),($D(^TMP("PXRMEXIA",$J,FTYPE))) D
"RTN","PXRMEXU1",200,0)
 .. N FI,FINDING,KND,OFINDING
"RTN","PXRMEXU1",201,0)
 .. S KND=2
"RTN","PXRMEXU1",202,0)
 .. S FI=""
"RTN","PXRMEXU1",203,0)
 .. F  S FI=$O(^TMP("PXRMEXIA",$J,FTYPE,FI)) Q:FI=""  D
"RTN","PXRMEXU1",204,0)
 ... S OFINDING=$O(^TMP("PXRMEXIA",$J,FTYPE,FI,""))
"RTN","PXRMEXU1",205,0)
 ... S FINDING=^TMP("PXRMEXIA",$J,FTYPE,FI,OFINDING)
"RTN","PXRMEXU1",206,0)
 ... I OFINDING=FINDING Q
"RTN","PXRMEXU1",207,0)
 ... S KND=KND+1
"RTN","PXRMEXU1",208,0)
 ... S TEMP=$E(OFINDING,1,33)
"RTN","PXRMEXU1",209,0)
 ... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,KND,0)="    "_TEMP_$$INSCHR^PXRMEXLC((35-$L(TEMP))," ")_FINDING
"RTN","PXRMEXU1",210,0)
 .. S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,0)=U_"811.80315A"_U_KND_U_KND
"RTN","PXRMEXU1",211,0)
 .. I KND>2 D
"RTN","PXRMEXU1",212,0)
 ... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,1,0)="   Finding Changes"
"RTN","PXRMEXU1",213,0)
 ... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,2,0)="     Original"_$$INSCHR^PXRMEXLC(27," ")_"New"
"RTN","PXRMEXU1",214,0)
 .;
"RTN","PXRMEXU1",215,0)
 .;Check for TIU template replacements and save them.
"RTN","PXRMEXU1",216,0)
 . I CMPNT["DIALOG" S FTYPE="DIATIU"
"RTN","PXRMEXU1",217,0)
 . E  S FTYPE=""
"RTN","PXRMEXU1",218,0)
 . I (FTYPE'=""),($D(^TMP("PXRMEXIA",$J,FTYPE))) D
"RTN","PXRMEXU1",219,0)
 .. N KND,OTIUT,TIUT,TYPE
"RTN","PXRMEXU1",220,0)
 .. S TYPE=""
"RTN","PXRMEXU1",221,0)
 .. S KND=2
"RTN","PXRMEXU1",222,0)
 .. F  S TYPE=$O(^TMP("PXRMEXIA",$J,FTYPE,TYPE)) Q:TYPE=""  D
"RTN","PXRMEXU1",223,0)
 ... S OTIUT=""
"RTN","PXRMEXU1",224,0)
 ... F  S OTIUT=$O(^TMP("PXRMEXIA",$J,FTYPE,TYPE,OTIUT)) Q:OTIUT=""  D
"RTN","PXRMEXU1",225,0)
 .... S TIUT=$G(^TMP("PXRMEXIA",$J,FTYPE,TYPE,OTIUT))
"RTN","PXRMEXU1",226,0)
 .... I OTIUT=TIUT Q
"RTN","PXRMEXU1",227,0)
 .... I '$D(^TMP("PXRMEXIA",$J,FTYPE,TYPE,OTIUT,ITEM)) Q
"RTN","PXRMEXU1",228,0)
 .... S KND=KND+1
"RTN","PXRMEXU1",229,0)
 .... S TEMP=$E(OTIUT,1,33)
"RTN","PXRMEXU1",230,0)
 .... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,KND,0)="    "_TEMP_$$INSCHR^PXRMEXLC((35-$L(TEMP))," ")_TIUT
"RTN","PXRMEXU1",231,0)
 ... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,0)=U_"811.80315A"_U_KND_U_KND
"RTN","PXRMEXU1",232,0)
 ... I KND>2 D
"RTN","PXRMEXU1",233,0)
 .... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,1,0)="   "_TYPE
"RTN","PXRMEXU1",234,0)
 .... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,2,0)="     Original"_$$INSCHR^PXRMEXLC(27," ")_"New"
"RTN","PXRMEXU1",235,0)
 ;
"RTN","PXRMEXU1",236,0)
 K ^TMP("PXRMEXIA",$J)
"RTN","PXRMEXU1",237,0)
 Q
"RTN","PXRMEXU1",238,0)
 ;
"RTN","PXRMEXU4")
0^31^B50354222
"RTN","PXRMEXU4",1,0)
PXRMEXU4 ; SLC/PJH,PKR - Reminder Exchange #4, dialog changes. ;01/03/2002
"RTN","PXRMEXU4",2,0)
 ;;1.5;CLINICAL REMINDERS;**5,7**;Jun 19, 2000
"RTN","PXRMEXU4",3,0)
 ;======================================================================
"RTN","PXRMEXU4",4,0)
DLG(FDA,NAMECHG) ;Check the dialog for renamed entries
"RTN","PXRMEXU4",5,0)
 N ABBR,ACTION,ALIST,DNAM,IEN,IENS,FILENUM,FINDING,NEWNAM,OFINDING
"RTN","PXRMEXU4",6,0)
 N ORITEM,OORITEM,PT01,RESULT,RRG,SRC,WP
"RTN","PXRMEXU4",7,0)
 S IENS=$O(FDA(801.41,""))
"RTN","PXRMEXU4",8,0)
 ;Definition .01
"RTN","PXRMEXU4",9,0)
 S (PT01,DNAM)=FDA(801.41,IENS,.01)
"RTN","PXRMEXU4",10,0)
 I $D(NAMECHG(801.41,PT01)) D
"RTN","PXRMEXU4",11,0)
 .S (FDA(801.41,IENS,.01),DNAM)=NAMECHG(801.41,PT01)
"RTN","PXRMEXU4",12,0)
 ;
"RTN","PXRMEXU4",13,0)
 ;Build list of finding types
"RTN","PXRMEXU4",14,0)
 D BLDALIST^PXRMVPTR(801.4118,.01,.ALIST)
"RTN","PXRMEXU4",15,0)
 ;Plus field 15 files
"RTN","PXRMEXU4",16,0)
 S ALIST("MH")=601,ALIST("TX")=811.2
"RTN","PXRMEXU4",17,0)
 ;Plus field 17 file
"RTN","PXRMEXU4",18,0)
 S ALIST("OI")=101.43
"RTN","PXRMEXU4",19,0)
 ;
"RTN","PXRMEXU4",20,0)
 ;Process SOURCE REMINDER
"RTN","PXRMEXU4",21,0)
 S SRC=+$G(FDA(801.41,IENS,2))
"RTN","PXRMEXU4",22,0)
 S IEN=$$EXISTS^PXRMEXIU(811.9,SRC)
"RTN","PXRMEXU4",23,0)
 I IEN=0 K FDA(801.41,IENS,2)
"RTN","PXRMEXU4",24,0)
 ;
"RTN","PXRMEXU4",25,0)
 ;Clear RESULT if not defined
"RTN","PXRMEXU4",26,0)
 S RESULT=+$G(FDA(801.41,IENS,55))
"RTN","PXRMEXU4",27,0)
 S IEN=$$EXISTS^PXRMEXIU(801.41,RESULT)
"RTN","PXRMEXU4",28,0)
 I IEN=0 K FDA(801.41,IENS,55)
"RTN","PXRMEXU4",29,0)
 ;
"RTN","PXRMEXU4",30,0)
 ;Process ORDERABLE ITEM
"RTN","PXRMEXU4",31,0)
 S (ORITEM,OORITEM)=$G(FDA(801.41,IENS,17)),ACTION=""
"RTN","PXRMEXU4",32,0)
 I ORITEM'="" D  I ACTION="Q" K FDA S PXRMDONE=1 Q
"RTN","PXRMEXU4",33,0)
 .S PT01=ORITEM
"RTN","PXRMEXU4",34,0)
 .S ABBR="OI",FILENUM=$P(ALIST(ABBR),U)
"RTN","PXRMEXU4",35,0)
 .I $D(NAMECHG(FILENUM,PT01)) D
"RTN","PXRMEXU4",36,0)
 ..S ORITEM=NAMECHG(FILENUM,PT01)
"RTN","PXRMEXU4",37,0)
 ..S FDA(801.41,IENS,17)=ORITEM
"RTN","PXRMEXU4",38,0)
 .S IEN=+$$VFIND1^PXRMEXIU(ABBR_"."_ORITEM,.ALIST)
"RTN","PXRMEXU4",39,0)
 .I IEN=0 D
"RTN","PXRMEXU4",40,0)
 ..;Get replacement
"RTN","PXRMEXU4",41,0)
 ..N DIC,DUOUT,MSG,X,Y
"RTN","PXRMEXU4",42,0)
 ..S MSG(1)=" "
"RTN","PXRMEXU4",43,0)
 ..S MSG(2)="ORDERABLE ITEM  entry "_ORITEM_" does not exist."
"RTN","PXRMEXU4",44,0)
 ..D MES^XPDUTL(.MSG)
"RTN","PXRMEXU4",45,0)
 ..S ACTION=$$GETACT^PXRMEXIU("DPQ") I ACTION="S" S ACTION="Q"
"RTN","PXRMEXU4",46,0)
 ..I ACTION="Q" Q
"RTN","PXRMEXU4",47,0)
 ..I ACTION="D" K FDA(801.41,IENS,17) Q
"RTN","PXRMEXU4",48,0)
 ..S DIC=FILENUM
"RTN","PXRMEXU4",49,0)
 ..S DIC(0)="AEMNQ"
"RTN","PXRMEXU4",50,0)
 ..S Y=-1
"RTN","PXRMEXU4",51,0)
 ..F  Q:+Y'=-1  D
"RTN","PXRMEXU4",52,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXU4",53,0)
 ...I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXU4",54,0)
 ...D ^DIC
"RTN","PXRMEXU4",55,0)
 ...I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXU4",56,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXU4",57,0)
 ...I $D(DUOUT) S Y="" Q
"RTN","PXRMEXU4",58,0)
 ...I Y=-1 D BMES^XPDUTL(,"You must input a replacement!")
"RTN","PXRMEXU4",59,0)
 ..I Y="" S ACTION="Q" Q
"RTN","PXRMEXU4",60,0)
 ..S ORITEM=$P(Y,U,2)
"RTN","PXRMEXU4",61,0)
 ..S FDA(801.41,IENS,17)=ORITEM
"RTN","PXRMEXU4",62,0)
 .;Save the finding information for the history.
"RTN","PXRMEXU4",63,0)
 .I ORITEM'=OORITEM D
"RTN","PXRMEXU4",64,0)
 .. S ^TMP("PXRMEXIA",$J,"DIAF",$P(IENS,",",1),ABBR_"."_OORITEM)=ABBR_"."_ORITEM
"RTN","PXRMEXU4",65,0)
 ;
"RTN","PXRMEXU4",66,0)
 ;Process FINDING ITEM
"RTN","PXRMEXU4",67,0)
 S (FINDING,OFINDING)=$G(FDA(801.41,IENS,15)),ACTION=""
"RTN","PXRMEXU4",68,0)
 I FINDING'="" D  I ACTION="Q" K FDA S PXRMDONE=1 Q
"RTN","PXRMEXU4",69,0)
 .S ABBR=$P(FINDING,".",1)
"RTN","PXRMEXU4",70,0)
 .S PT01=$P(FINDING,".",2)
"RTN","PXRMEXU4",71,0)
 .S FILENUM=$P(ALIST(ABBR),U,1)
"RTN","PXRMEXU4",72,0)
 .I $D(NAMECHG(FILENUM,PT01)) D
"RTN","PXRMEXU4",73,0)
 ..S FINDING=ABBR_"."_NAMECHG(FILENUM,PT01)
"RTN","PXRMEXU4",74,0)
 ..S FDA(801.41,IENS,15)=FINDING
"RTN","PXRMEXU4",75,0)
 .S IEN=+$$VFIND1^PXRMEXIU(FINDING,.ALIST)
"RTN","PXRMEXU4",76,0)
 .I IEN=0 D
"RTN","PXRMEXU4",77,0)
 ..;Get replacement
"RTN","PXRMEXU4",78,0)
 ..N DIC,DUOUT,MSG,X,Y
"RTN","PXRMEXU4",79,0)
 ..S MSG(1)=" "
"RTN","PXRMEXU4",80,0)
 ..S MSG(2)="FINDING entry "_FINDING_" does not exist."
"RTN","PXRMEXU4",81,0)
 ..D MES^XPDUTL(.MSG)
"RTN","PXRMEXU4",82,0)
 ..S ACTION=$$GETACT^PXRMEXIU("DPQ") I ACTION="S" S ACTION="Q"
"RTN","PXRMEXU4",83,0)
 ..I ACTION="Q" Q
"RTN","PXRMEXU4",84,0)
 ..I ACTION="D" K FDA(801.41,IENS,15) Q
"RTN","PXRMEXU4",85,0)
 ..S DIC=FILENUM
"RTN","PXRMEXU4",86,0)
 ..S DIC(0)="AEMNQ"
"RTN","PXRMEXU4",87,0)
 ..S Y=-1
"RTN","PXRMEXU4",88,0)
 ..F  Q:+Y'=-1  D
"RTN","PXRMEXU4",89,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXU4",90,0)
 ...I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXU4",91,0)
 ...D ^DIC
"RTN","PXRMEXU4",92,0)
 ...I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXU4",93,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXU4",94,0)
 ...I $D(DUOUT) S Y="" Q
"RTN","PXRMEXU4",95,0)
 ...I Y=-1 D BMES^XPDUTL(,"You must input a replacement!")
"RTN","PXRMEXU4",96,0)
 ..I Y="" S ACTION="Q" Q
"RTN","PXRMEXU4",97,0)
 ..S FINDING=ABBR_"."_$P(Y,U,2)
"RTN","PXRMEXU4",98,0)
 ..S FDA(801.41,IENS,15)=FINDING
"RTN","PXRMEXU4",99,0)
 .;Save the finding information for the history.
"RTN","PXRMEXU4",100,0)
 .I FINDING'=OFINDING D
"RTN","PXRMEXU4",101,0)
 .. S ^TMP("PXRMEXIA",$J,"DIAF",$P(IENS,",",1),OFINDING)=FINDING
"RTN","PXRMEXU4",102,0)
 .;Convert ICD9 codes to `ien format
"RTN","PXRMEXU4",103,0)
 .I $P(FINDING,".")="ICD9" S FDA(801.41,IENS,15)=$$ICD9(FINDING)
"RTN","PXRMEXU4",104,0)
 ;
"RTN","PXRMEXU4",105,0)
 ;Look for replacements of TIU templates.
"RTN","PXRMEXU4",106,0)
 I $D(NAMECHG(8927.1)) D
"RTN","PXRMEXU4",107,0)
 .S WP=$G(FDA(801.41,IENS,25))
"RTN","PXRMEXU4",108,0)
 .I WP'="" D TIURPL("{FLD:",WP,.NAMECHG,8927.1)
"RTN","PXRMEXU4",109,0)
 .S WP=$G(FDA(801.41,IENS,35))
"RTN","PXRMEXU4",110,0)
 ;
"RTN","PXRMEXU4",111,0)
 ;Process ADDITIONAL FINDINGS
"RTN","PXRMEXU4",112,0)
 S IENS="",ACTION=""
"RTN","PXRMEXU4",113,0)
 F  S IENS=$O(FDA(801.4118,IENS)) Q:IENS=""  D  I ACTION="Q" K FDA S PXRMDONE=1 Q
"RTN","PXRMEXU4",114,0)
 . S (FINDING,OFINDING)=FDA(801.4118,IENS,.01)
"RTN","PXRMEXU4",115,0)
 . S ABBR=$P(FINDING,".",1)
"RTN","PXRMEXU4",116,0)
 . S PT01=$P(FINDING,".",2)
"RTN","PXRMEXU4",117,0)
 . S FILENUM=$P(ALIST(ABBR),U,1)
"RTN","PXRMEXU4",118,0)
 . I $D(NAMECHG(FILENUM,PT01)) D
"RTN","PXRMEXU4",119,0)
 .. S FINDING=ABBR_"."_NAMECHG(FILENUM,PT01)
"RTN","PXRMEXU4",120,0)
 .. S FDA(801.4118,IENS,.01)=FINDING
"RTN","PXRMEXU4",121,0)
 . S IEN=+$$VFIND1^PXRMEXIU(FINDING,.ALIST)
"RTN","PXRMEXU4",122,0)
 . I IEN=0 D  Q:ACTION="Q"
"RTN","PXRMEXU4",123,0)
 ..;Get replacement
"RTN","PXRMEXU4",124,0)
 .. N DIC,DUOUT,MSG,X,Y
"RTN","PXRMEXU4",125,0)
 .. S MSG(1)=" "
"RTN","PXRMEXU4",126,0)
 .. S MSG(2)="ADDITIONAL FINDING entry "_FINDING_" does not exist."
"RTN","PXRMEXU4",127,0)
 .. D MES^XPDUTL(.MSG)
"RTN","PXRMEXU4",128,0)
 .. S ACTION=$$GETACT^PXRMEXIU("DPQ")
"RTN","PXRMEXU4",129,0)
 .. I ACTION="S" S ACTION="Q"
"RTN","PXRMEXU4",130,0)
 .. I ACTION="Q" Q
"RTN","PXRMEXU4",131,0)
 .. I ACTION="D" K FDA(801.4118,IENS) Q
"RTN","PXRMEXU4",132,0)
 .. S DIC=FILENUM
"RTN","PXRMEXU4",133,0)
 .. S DIC(0)="AEMNQ"
"RTN","PXRMEXU4",134,0)
 .. S Y=-1
"RTN","PXRMEXU4",135,0)
 .. F  Q:+Y'=-1  D
"RTN","PXRMEXU4",136,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXU4",137,0)
 ... I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXU4",138,0)
 ... D ^DIC
"RTN","PXRMEXU4",139,0)
 ... I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXU4",140,0)
 ... I $D(DUOUT) S Y="" Q
"RTN","PXRMEXU4",141,0)
 ... I Y=-1 D BMES^XPDUTL("You must input a replacement!")
"RTN","PXRMEXU4",142,0)
 .. I Y="" S ACTION="Q" Q
"RTN","PXRMEXU4",143,0)
 .. S FINDING=ABBR_"."_$P(Y,U,2)
"RTN","PXRMEXU4",144,0)
 .. S FDA(801.4118,IENS,.01)=FINDING
"RTN","PXRMEXU4",145,0)
 . ;Save the finding information for the history.
"RTN","PXRMEXU4",146,0)
 . I FINDING'=OFINDING D
"RTN","PXRMEXU4",147,0)
 .. S ^TMP("PXRMEXIA",$J,"DIAF",$P(IENS,",",1),OFINDING)=FINDING
"RTN","PXRMEXU4",148,0)
 . ;Convert ICD9 codes to `ien format
"RTN","PXRMEXU4",149,0)
 . I $P(FINDING,".")="ICD9" S FDA(801.4118,IENS,.01)=$$ICD9(FINDING)
"RTN","PXRMEXU4",150,0)
 ;
"RTN","PXRMEXU4",151,0)
 ;
"RTN","PXRMEXU4",152,0)
 ;Process DIALOG COMPONENT
"RTN","PXRMEXU4",153,0)
 S IENS="",ACTION=""
"RTN","PXRMEXU4",154,0)
 F  S IENS=$O(FDA(801.412,IENS)) Q:IENS=""  D  I ACTION="Q" K FDA S PXRMDONE=1 Q
"RTN","PXRMEXU4",155,0)
 . S PT01=$G(FDA(801.412,IENS,2)) Q:PT01=""
"RTN","PXRMEXU4",156,0)
 . S FILENUM=801.41,NEWNAM=$G(NAMECHG(FILENUM,PT01))
"RTN","PXRMEXU4",157,0)
 .I NEWNAM'="" D
"RTN","PXRMEXU4",158,0)
 .. S FDA(801.412,IENS,2)=NEWNAM,PT01=NEWNAM
"RTN","PXRMEXU4",159,0)
 .S IEN=$$EXISTS^PXRMEXIU(FILENUM,PT01)
"RTN","PXRMEXU4",160,0)
 .I IEN=0 D
"RTN","PXRMEXU4",161,0)
 ..;Get replacement
"RTN","PXRMEXU4",162,0)
 .. N DIC,DUOUT,MSG,X,Y
"RTN","PXRMEXU4",163,0)
 .. S MSG(1)=" "
"RTN","PXRMEXU4",164,0)
 .. S MSG(2)="COMPONENT DIALOG entry "_PT01_" does not exist."
"RTN","PXRMEXU4",165,0)
 .. D MES^XPDUTL(.MSG)
"RTN","PXRMEXU4",166,0)
 .. S ACTION=$$GETACT^PXRMEXIU("DPQ")
"RTN","PXRMEXU4",167,0)
 .. I ACTION="S" S ACTION="Q"
"RTN","PXRMEXU4",168,0)
 .. I ACTION="Q" Q
"RTN","PXRMEXU4",169,0)
 .. I ACTION="D" K FDA(801.412,IENS) Q
"RTN","PXRMEXU4",170,0)
 .. S DIC=FILENUM
"RTN","PXRMEXU4",171,0)
 .. S DIC(0)="AEMNQ"
"RTN","PXRMEXU4",172,0)
 .. S DIC("S")="I ""EG""[$P(^PXRMD(801.41,Y,0),U,4)"
"RTN","PXRMEXU4",173,0)
 .. S Y=-1
"RTN","PXRMEXU4",174,0)
 .. F  Q:+Y'=-1  D
"RTN","PXRMEXU4",175,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXU4",176,0)
 ... I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXU4",177,0)
 ... D ^DIC
"RTN","PXRMEXU4",178,0)
 ... I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXU4",179,0)
 ... I $D(DUOUT) S Y="" Q
"RTN","PXRMEXU4",180,0)
 ... I Y=-1 D BMES^XPDUTL("You must input a replacement!")
"RTN","PXRMEXU4",181,0)
 .. I Y="" S ACTION="Q" Q
"RTN","PXRMEXU4",182,0)
 .. I Y'="" S FDA(801.412,IENS,2)=$P(Y,U,2)
"RTN","PXRMEXU4",183,0)
 ;
"RTN","PXRMEXU4",184,0)
 Q
"RTN","PXRMEXU4",185,0)
 ;
"RTN","PXRMEXU4",186,0)
 ;Convert ICD9 codes to `ien format
"RTN","PXRMEXU4",187,0)
ICD9(CODE) ;
"RTN","PXRMEXU4",188,0)
 N IEN
"RTN","PXRMEXU4",189,0)
 S IEN=$$FIND1^DIC(80,"","AMX",$P(CODE,".",2,99))
"RTN","PXRMEXU4",190,0)
 I 'IEN Q ""
"RTN","PXRMEXU4",191,0)
 Q "`"_IEN
"RTN","PXRMEXU4",192,0)
 ;
"RTN","PXRMEXU4",193,0)
 ;======================================================================
"RTN","PXRMEXU4",194,0)
TIURPL(SRCH,WP,NAMEGHC,FILENUM) ;Replace TIU templates whose names have
"RTN","PXRMEXU4",195,0)
 ;changed.
"RTN","PXRMEXU4",196,0)
 N IND,RS,TEXT,TS,TYPE
"RTN","PXRMEXU4",197,0)
 I FILENUM=8927.1 S TYPE="TIU TEMPLATE"
"RTN","PXRMEXU4",198,0)
 E  S TYPE="TIU OBJECT"
"RTN","PXRMEXU4",199,0)
 S IND=1
"RTN","PXRMEXU4",200,0)
 F  S TEXT=$G(@WP@(IND)) Q:TEXT=""  D
"RTN","PXRMEXU4",201,0)
 .I TEXT[SRCH D
"RTN","PXRMEXU4",202,0)
 ..S TS=""
"RTN","PXRMEXU4",203,0)
 ..F  S TS=$O(NAMECHG(FILENUM,TS)) Q:TS=""  D
"RTN","PXRMEXU4",204,0)
 ...S RS=NAMECHG(FILENUM,TS) Q:TEXT'[TS
"RTN","PXRMEXU4",205,0)
 ...S @WP@(IND)=$$STRREP^PXRMUTIL(TEXT,TS,RS)
"RTN","PXRMEXU4",206,0)
 ...;Save the replacement information for the history.
"RTN","PXRMEXU4",207,0)
 ...S ^TMP("PXRMEXIA",$J,"DIATIU",TYPE,TS)=RS
"RTN","PXRMEXU4",208,0)
 ...S ^TMP("PXRMEXIA",$J,"DIATIU",TYPE,TS,DNAM)=""
"RTN","PXRMEXU4",209,0)
 .S IND=IND+1
"RTN","PXRMEXU4",210,0)
 Q
"RTN","PXRMEXU4",211,0)
 ;
"RTN","PXRMEXU5")
0^22^B13766605
"RTN","PXRMEXU5",1,0)
PXRMEXU5 ; SLC/PKR - Reminder exchange KIDS utilities, #5. ;12/19/2001
"RTN","PXRMEXU5",2,0)
 ;;1.5;CLINICAL REMINDERS;**7**;Jun 19, 2000
"RTN","PXRMEXU5",3,0)
 ;======================================================================
"RTN","PXRMEXU5",4,0)
MERGE(FILENUM,IEN,FIELD,FDA,IENROOT,MODE) ;Merge or replace portions of
"RTN","PXRMEXU5",5,0)
 ;an FDA.
"RTN","PXRMEXU5",6,0)
 ;FILENUM - the file number
"RTN","PXRMEXU5",7,0)
 ;IEN - internal entry number
"RTN","PXRMEXU5",8,0)
 ;FIELD - semicolon separated list of fields.
"RTN","PXRMEXU5",9,0)
 ;This are arguments for GETS^DIQ, see that documentation for 
"RTN","PXRMEXU5",10,0)
 ;more information.
"RTN","PXRMEXU5",11,0)
 ;FDA and IENROOT are the FDA and IENROOT for UPDATE^DIE. These
"RTN","PXRMEXU5",12,0)
 ;are already setup with the contents of the packed reminder before
"RTN","PXRMEXU5",13,0)
 ;this routine is called.
"RTN","PXRMEXU5",14,0)
 ;The default is to merge any existing nodes of the FDA with the nodes
"RTN","PXRMEXU5",15,0)
 ;already existing at the site. If MODE="R" then the existing nodes
"RTN","PXRMEXU5",16,0)
 ;will be replaced with the nodes already in the FDA.
"RTN","PXRMEXU5",17,0)
 N DIQOUT,IENS,IND,IND1,IND2,IND3,MSG,SIEN,SPEC,TIENROOT
"RTN","PXRMEXU5",18,0)
 S IENS=IEN_","
"RTN","PXRMEXU5",19,0)
 D GETS^DIQ(FILENUM,IENS,FIELD,"","DIQOUT","MSG")
"RTN","PXRMEXU5",20,0)
 I $D(MSG) D  Q
"RTN","PXRMEXU5",21,0)
 . S SERROR=1,IND=NUM
"RTN","PXRMEXU5",22,0)
 . N ETEXT
"RTN","PXRMEXU5",23,0)
 . S ETEXT="GETS^DIQ failed for "_FILENAME_", it returned the following error message:"
"RTN","PXRMEXU5",24,0)
 . W !,ETEXT
"RTN","PXRMEXU5",25,0)
 . D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMEXU5",26,0)
 . H 2
"RTN","PXRMEXU5",27,0)
 . K MSG
"RTN","PXRMEXU5",28,0)
 ;Make sure that the FDA ien is compatible with the site ien.
"RTN","PXRMEXU5",29,0)
 S IND1=$O(FDA(""),-1)
"RTN","PXRMEXU5",30,0)
 ;Set the starting ien to be the last one in the FDA.
"RTN","PXRMEXU5",31,0)
 S SIEN=+$O(FDA(IND1,""),-1)
"RTN","PXRMEXU5",32,0)
 ;Convert the iens to the FDA adding form.
"RTN","PXRMEXU5",33,0)
 D CONTOFDA^PXRMEXPU(.DIQOUT,.TIENROOT,IEN,SIEN)
"RTN","PXRMEXU5",34,0)
 ;Remove any duplicates and make the indexes compatible.
"RTN","PXRMEXU5",35,0)
 D RMDUP(IEN,.DIQOUT,.FDA)
"RTN","PXRMEXU5",36,0)
 S IND1=""
"RTN","PXRMEXU5",37,0)
 F  S IND1=$O(DIQOUT(IND1)) Q:IND1=""  D
"RTN","PXRMEXU5",38,0)
 .;Get the start for IENROOT.
"RTN","PXRMEXU5",39,0)
 . S SPEC=$$GET1^DID(IND1,".01","","SPECIFIER")
"RTN","PXRMEXU5",40,0)
 . I SPEC["M",MODE="R" K FDA(IND1)
"RTN","PXRMEXU5",41,0)
 . S IND2=$O(FDA(IND1,""))
"RTN","PXRMEXU5",42,0)
 . S SIEN=+IND2
"RTN","PXRMEXU5",43,0)
 . S IND2=""
"RTN","PXRMEXU5",44,0)
 . F  S IND2=$O(DIQOUT(IND1,IND2)) Q:IND2=""  D
"RTN","PXRMEXU5",45,0)
 .. S IND3=+IND2
"RTN","PXRMEXU5",46,0)
 ..;Add the offset, if there is one, to get the correct IENROOT.
"RTN","PXRMEXU5",47,0)
 .. I $D(TIENROOT(IND3)) S IENROOT(IND3)=TIENROOT(IND3)+SIEN
"RTN","PXRMEXU5",48,0)
 .. S IND3=""
"RTN","PXRMEXU5",49,0)
 .. F  S IND3=$O(DIQOUT(IND1,IND2,IND3)) Q:IND3=""  D
"RTN","PXRMEXU5",50,0)
 ... S FDA(IND1,IND2,IND3)=DIQOUT(IND1,IND2,IND3)
"RTN","PXRMEXU5",51,0)
 Q
"RTN","PXRMEXU5",52,0)
 ;
"RTN","PXRMEXU5",53,0)
 ;======================================================================
"RTN","PXRMEXU5",54,0)
NONULL(PXRMRIEN) ;Set any lines with a length of 0 equal to a space
"RTN","PXRMEXU5",55,0)
 ;so KIDS will not delete them.
"RTN","PXRMEXU5",56,0)
 N IND
"RTN","PXRMEXU5",57,0)
 S IND=0
"RTN","PXRMEXU5",58,0)
 F  S IND=+$O(^PXD(811.8,PXRMRIEN,100,IND)) Q:IND=0  D
"RTN","PXRMEXU5",59,0)
 . I $L(^PXD(811.8,PXRMRIEN,100,IND,0))=0 S ^PXD(811.8,PXRMRIEN,100,IND,0)=" "
"RTN","PXRMEXU5",60,0)
 Q
"RTN","PXRMEXU5",61,0)
 ;
"RTN","PXRMEXU5",62,0)
 ;======================================================================
"RTN","PXRMEXU5",63,0)
POSTKIDS(PXRMRIEN) ;Change all ACK characters in node 100 of Exchange
"RTN","PXRMEXU5",64,0)
 ;File entry PXRMRIEN back to "^".
"RTN","PXRMEXU5",65,0)
 N ACK,UPA
"RTN","PXRMEXU5",66,0)
 S ACK=$C(6)
"RTN","PXRMEXU5",67,0)
 S UPA="^"
"RTN","PXRMEXU5",68,0)
 D REPCHAR(PXRMRIEN,ACK,UPA)
"RTN","PXRMEXU5",69,0)
 Q
"RTN","PXRMEXU5",70,0)
 ;
"RTN","PXRMEXU5",71,0)
 ;======================================================================
"RTN","PXRMEXU5",72,0)
PREKIDS(PXRMRIEN) ;Change all "^" characters in node 100 of Exchange
"RTN","PXRMEXU5",73,0)
 ;File entry PXRMRIEN so that KIDS does not truncate lines when it
"RTN","PXRMEXU5",74,0)
 ;installs the file.
"RTN","PXRMEXU5",75,0)
 N ACK,UPA
"RTN","PXRMEXU5",76,0)
 S ACK=$C(6)
"RTN","PXRMEXU5",77,0)
 S UPA="^"
"RTN","PXRMEXU5",78,0)
 D REPCHAR(PXRMRIEN,UPA,ACK)
"RTN","PXRMEXU5",79,0)
 D NONULL(PXRMRIEN)
"RTN","PXRMEXU5",80,0)
 Q
"RTN","PXRMEXU5",81,0)
 ;
"RTN","PXRMEXU5",82,0)
 ;======================================================================
"RTN","PXRMEXU5",83,0)
REPCHAR(PXRMRIEN,CHAR1,CHAR2) ;Replace CHAR1 with CHAR2 for all lines in node
"RTN","PXRMEXU5",84,0)
 ;100 of entry PXRMRIEN of the Exchange File.
"RTN","PXRMEXU5",85,0)
 N IND,LINE
"RTN","PXRMEXU5",86,0)
 S IND=0
"RTN","PXRMEXU5",87,0)
 F  S IND=+$O(^PXD(811.8,PXRMRIEN,100,IND)) Q:IND=0  D
"RTN","PXRMEXU5",88,0)
 . S LINE=$TR(^PXD(811.8,PXRMRIEN,100,IND,0),CHAR1,CHAR2)
"RTN","PXRMEXU5",89,0)
 . S ^PXD(811.8,PXRMRIEN,100,IND,0)=LINE
"RTN","PXRMEXU5",90,0)
 Q
"RTN","PXRMEXU5",91,0)
 ;
"RTN","PXRMEXU5",92,0)
 ;======================================================================
"RTN","PXRMEXU5",93,0)
RMDUP(IEN,DIQOUT,FDA) ;Remove any entries that are in both DIQOUT and FDA
"RTN","PXRMEXU5",94,0)
 ;from FDA so the site version is presevered.
"RTN","PXRMEXU5",95,0)
 N DIQOUTS,DLIST,FLIST,IND1,IND2,IND2S,IND3,IENS,OIENS
"RTN","PXRMEXU5",96,0)
 S IENS="+"_IEN_","
"RTN","PXRMEXU5",97,0)
 S IND1=$O(FDA("")),OIENS=$O(FDA(IND1,""))
"RTN","PXRMEXU5",98,0)
 S IND1=""
"RTN","PXRMEXU5",99,0)
 F  S IND1=$O(DIQOUT(IND1)) Q:IND1=""  D
"RTN","PXRMEXU5",100,0)
 . S IND2=""
"RTN","PXRMEXU5",101,0)
 . F  S IND2=$O(DIQOUT(IND1,IND2)) Q:IND2=""  D
"RTN","PXRMEXU5",102,0)
 .. S IND2S=$$STRREP^PXRMUTIL(IND2,IENS,OIENS)
"RTN","PXRMEXU5",103,0)
 .. S IND3=""
"RTN","PXRMEXU5",104,0)
 .. F  S IND3=$O(DIQOUT(IND1,IND2,IND3)) Q:IND3=""  D
"RTN","PXRMEXU5",105,0)
 ... S DIQOUTS(IND1,IND2S,IND3)=DIQOUT(IND1,IND2,IND3)
"RTN","PXRMEXU5",106,0)
 ... I IND3=.01 S DLIST(DIQOUT(IND1,IND2,IND3))=IND1_U_IND2_U_IND3 Q
"RTN","PXRMEXU5",107,0)
 ;
"RTN","PXRMEXU5",108,0)
 S IND1=""
"RTN","PXRMEXU5",109,0)
 F  S IND1=$O(FDA(IND1)) Q:IND1=""  D
"RTN","PXRMEXU5",110,0)
 . S IND2=""
"RTN","PXRMEXU5",111,0)
 . F  S IND2=$O(FDA(IND1,IND2)) Q:IND2=""  D
"RTN","PXRMEXU5",112,0)
 .. S IND3=""
"RTN","PXRMEXU5",113,0)
 .. F  S IND3=$O(FDA(IND1,IND2,IND3)) Q:IND3=""  D
"RTN","PXRMEXU5",114,0)
 ... I IND3=.01 S FLIST(FDA(IND1,IND2,IND3))=IND1_U_IND2_U_IND3 Q
"RTN","PXRMEXU5",115,0)
 ;
"RTN","PXRMEXU5",116,0)
 S IND3=""
"RTN","PXRMEXU5",117,0)
 F  S IND3=$O(DLIST(IND3)) Q:IND3=""  D
"RTN","PXRMEXU5",118,0)
 . I $D(FLIST(IND3)) D
"RTN","PXRMEXU5",119,0)
 .. S IND1=$P(FLIST(IND3),U,1)
"RTN","PXRMEXU5",120,0)
 .. S IND2=$P(FLIST(IND3),U,2)
"RTN","PXRMEXU5",121,0)
 .. K FDA(IND1,IND2)
"RTN","PXRMEXU5",122,0)
 K DIQOUT
"RTN","PXRMEXU5",123,0)
 M DIQOUT=DIQOUTS
"RTN","PXRMEXU5",124,0)
 Q
"RTN","PXRMEXU5",125,0)
 ;
"RTN","PXRMHF")
0^9^B62881908
"RTN","PXRMHF",1,0)
PXRMHF ; SLC/PKR - Handle Health Factor findings. ;09/6/2001
"RTN","PXRMHF",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,7**;Jun 19, 2000
"RTN","PXRMHF",3,0)
 ;
"RTN","PXRMHF",4,0)
 ;=======================================================================
"RTN","PXRMHF",5,0)
BLDPC(DFN) ;Build a list of Health Factors associated with this patient,
"RTN","PXRMHF",6,0)
 ;keep only the most recent of each.
"RTN","PXRMHF",7,0)
 N CAT,DATE,IEN,INVDATE,HFIND,NPATHF,TEMP,TYPE,VIEN
"RTN","PXRMHF",8,0)
 I '$D(^XTMP(PXRMDFN,"HF","NPATHF")) D
"RTN","PXRMHF",9,0)
 . K ^XTMP(PXRMDFN,"HF")
"RTN","PXRMHF",10,0)
 . S NPATHF=0
"RTN","PXRMHF",11,0)
 . S HFIND=""
"RTN","PXRMHF",12,0)
 . F  S HFIND=$O(^AUPNVHF("AA",DFN,HFIND)) Q:HFIND=""  D
"RTN","PXRMHF",13,0)
 .. S INVDATE=$O(^AUPNVHF("AA",DFN,HFIND,""))
"RTN","PXRMHF",14,0)
 .. S IEN=$O(^AUPNVHF("AA",DFN,HFIND,INVDATE,""))
"RTN","PXRMHF",15,0)
 .. S VIEN=$P(^AUPNVHF(IEN,0),U,3)
"RTN","PXRMHF",16,0)
 .. S DATE=$$VDATE^PXRMDATE(VIEN)
"RTN","PXRMHF",17,0)
 .. S TEMP=$G(^AUTTHF(HFIND,0))
"RTN","PXRMHF",18,0)
 .. S TYPE=$P(TEMP,U,10)
"RTN","PXRMHF",19,0)
 .. I TYPE="C" S CAT=HFIND
"RTN","PXRMHF",20,0)
 .. E  S CAT=$P(^AUTTHF(HFIND,0),U,3)
"RTN","PXRMHF",21,0)
 ..;If the category is null then send a warning.
"RTN","PXRMHF",22,0)
 .. I CAT="" D WARN(TEMP)  Q
"RTN","PXRMHF",23,0)
 .. S NPATHF=NPATHF+1
"RTN","PXRMHF",24,0)
 ..;Store the heath factor, its category, the entry in AUPNVHF,
"RTN","PXRMHF",25,0)
 ..;the visit, and the date.
"RTN","PXRMHF",26,0)
 .. S ^XTMP(PXRMDFN,"HF",CAT,INVDATE,HFIND)=IEN_U_VIEN_U_DATE
"RTN","PXRMHF",27,0)
 . S ^XTMP(PXRMDFN,"HF","NPATHF")=NPATHF
"RTN","PXRMHF",28,0)
 E  S NPATHF=^XTMP(PXRMDFN,"HF","NPATHF")
"RTN","PXRMHF",29,0)
 Q NPATHF
"RTN","PXRMHF",30,0)
 ;
"RTN","PXRMHF",31,0)
 ;=======================================================================
"RTN","PXRMHF",32,0)
EVALFI(DFN,FIEVAL) ;Evaluate health factor findings.
"RTN","PXRMHF",33,0)
 ;Setup an array of health factors for matching.
"RTN","PXRMHF",34,0)
 N CAT,HFIEN,FIHF,FINDING,NPATHF,WCR
"RTN","PXRMHF",35,0)
 ;
"RTN","PXRMHF",36,0)
 S NPATHF=$$BLDPC(DFN)
"RTN","PXRMHF",37,0)
 ;If the patient has no health factors set all health factor findings
"RTN","PXRMHF",38,0)
 ;to false and quit.
"RTN","PXRMHF",39,0)
 I NPATHF=0 D  Q
"RTN","PXRMHF",40,0)
 . S HFIEN=""
"RTN","PXRMHF",41,0)
 . F  S HFIEN=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTHF(",HFIEN)) Q:+HFIEN=0  D
"RTN","PXRMHF",42,0)
 .. S FINDING=""
"RTN","PXRMHF",43,0)
 .. F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTHF(",HFIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMHF",44,0)
 ... S FIEVAL(FINDING)=0
"RTN","PXRMHF",45,0)
 ;
"RTN","PXRMHF",46,0)
 S HFIEN=""
"RTN","PXRMHF",47,0)
 ;Build the list of health factor findings for this reminder.
"RTN","PXRMHF",48,0)
 F  S HFIEN=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTHF(",HFIEN)) Q:+HFIEN=0  D
"RTN","PXRMHF",49,0)
 . S CAT=$P(^AUTTHF(HFIEN,0),U,3)
"RTN","PXRMHF",50,0)
 .;If the category is null then send a warning.
"RTN","PXRMHF",51,0)
 . I CAT="" D WARN(^AUTTHF(HFIEN,0))  Q
"RTN","PXRMHF",52,0)
 . S FINDING=""
"RTN","PXRMHF",53,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTHF(",HFIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMHF",54,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMHF",55,0)
 ..;Get the Within Category Rank
"RTN","PXRMHF",56,0)
 .. S WCR=$P(^PXD(811.9,PXRMITEM,20,FINDING,0),U,10)
"RTN","PXRMHF",57,0)
 .. I WCR="" S WCR=9999
"RTN","PXRMHF",58,0)
 .. S FIHF(CAT,HFIEN,WCR)=FINDING
"RTN","PXRMHF",59,0)
 ;
"RTN","PXRMHF",60,0)
 D MPHF(DFN,.FIHF,.FIEVAL)
"RTN","PXRMHF",61,0)
 Q
"RTN","PXRMHF",62,0)
 ;
"RTN","PXRMHF",63,0)
 ;=======================================================================
"RTN","PXRMHF",64,0)
EVALTERM(DFN,FINDING,TERMIEN,TERMEVAL) ;Evaluate health factor terms.
"RTN","PXRMHF",65,0)
 N CAT,HFIEN,FIHF,NPATHF,TERMHF,TFINDING,WCR
"RTN","PXRMHF",66,0)
 ;
"RTN","PXRMHF",67,0)
 S NPATHF=$$BLDPC(DFN)
"RTN","PXRMHF",68,0)
 ;If the patient has no health factors set all health factor
"RTN","PXRMHF",69,0)
 ;findings to false and quit.
"RTN","PXRMHF",70,0)
 I NPATHF=0 D  Q
"RTN","PXRMHF",71,0)
 . S HFIEN=""
"RTN","PXRMHF",72,0)
 . F  S HFIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTHF(",HFIEN)) Q:+HFIEN=0  D
"RTN","PXRMHF",73,0)
 .. S TFINDING=""
"RTN","PXRMHF",74,0)
 .. F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTHF(",HFIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMHF",75,0)
 ... S TERMEVAL(TFINDING)=0
"RTN","PXRMHF",76,0)
 ;
"RTN","PXRMHF",77,0)
 S HFIEN=""
"RTN","PXRMHF",78,0)
 ;Build the list of health factor findings for this term.
"RTN","PXRMHF",79,0)
 F  S HFIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTHF(",HFIEN)) Q:+HFIEN=0  D
"RTN","PXRMHF",80,0)
 . S CAT=$P(^AUTTHF(HFIEN,0),U,3)
"RTN","PXRMHF",81,0)
 . S TFINDING=""
"RTN","PXRMHF",82,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTHF(",HFIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMHF",83,0)
 .. S TERMEVAL(TFINDING)=0
"RTN","PXRMHF",84,0)
 ..;Get the Within Category Rank, look at the term finding level first.
"RTN","PXRMHF",85,0)
 .. S WCR=$P(^PXRMD(811.5,TERMIEN,20,TFINDING,0),U,10)
"RTN","PXRMHF",86,0)
 .. I WCR="" S WCR=$P(^PXD(811.9,PXRMITEM,20,FINDING,0),U,10)
"RTN","PXRMHF",87,0)
 .. I WCR="" S WCR=9999
"RTN","PXRMHF",88,0)
 .. S TERMHF(CAT,HFIEN,WCR)=FINDING_U_TERMIEN_U_TFINDING
"RTN","PXRMHF",89,0)
 ;
"RTN","PXRMHF",90,0)
 D MPHF(DFN,.TERMHF,.TERMEVAL)
"RTN","PXRMHF",91,0)
 Q
"RTN","PXRMHF",92,0)
 ;
"RTN","PXRMHF",93,0)
 ;=======================================================================
"RTN","PXRMHF",94,0)
MPHF(DFN,FIHF,FIEVAL) ;Find the matches.
"RTN","PXRMHF",95,0)
 N CONVAL,CAT,DATE,DONE,F0,FIND0,FIND3,HFIEN,INVDATE,LEVEL,SORTLIST
"RTN","PXRMHF",96,0)
 N TEMP,TF0,TFIND0,TFIND3,VALID,WCR
"RTN","PXRMHF",97,0)
 S CAT=0
"RTN","PXRMHF",98,0)
 F  S CAT=$O(^XTMP(PXRMDFN,"HF",CAT)) Q:+CAT=0  D
"RTN","PXRMHF",99,0)
 . I '$D(FIHF(CAT)) Q
"RTN","PXRMHF",100,0)
 .;Have a category get health factors.
"RTN","PXRMHF",101,0)
 . S INVDATE=0
"RTN","PXRMHF",102,0)
 . F  S INVDATE=$O(^XTMP(PXRMDFN,"HF",CAT,INVDATE)) Q:INVDATE=""  D
"RTN","PXRMHF",103,0)
 .. S HFIEN=0
"RTN","PXRMHF",104,0)
 .. F  S HFIEN=$O(^XTMP(PXRMDFN,"HF",CAT,INVDATE,HFIEN)) Q:HFIEN=""  D
"RTN","PXRMHF",105,0)
 ... I '$D(FIHF(CAT,HFIEN)) Q
"RTN","PXRMHF",106,0)
 ... S WCR=$O(FIHF(CAT,HFIEN,""))
"RTN","PXRMHF",107,0)
 ... S SORTLIST(CAT,INVDATE,WCR,HFIEN)=""
"RTN","PXRMHF",108,0)
 ;Process SORTLIST the first factor in the category will be true
"RTN","PXRMHF",109,0)
 ;the others false unless WCR=0 in which case it is treated as an
"RTN","PXRMHF",110,0)
 ;individual finding.
"RTN","PXRMHF",111,0)
 S CAT=0
"RTN","PXRMHF",112,0)
 F  S CAT=$O(SORTLIST(CAT)) Q:CAT=""  D
"RTN","PXRMHF",113,0)
 . S DONE=0
"RTN","PXRMHF",114,0)
 . S INVDATE=0
"RTN","PXRMHF",115,0)
 . F  S INVDATE=$O(SORTLIST(CAT,INVDATE)) Q:(INVDATE="")!(DONE)  D
"RTN","PXRMHF",116,0)
 .. S WCR=""
"RTN","PXRMHF",117,0)
 .. F  S WCR=$O(SORTLIST(CAT,INVDATE,WCR)) Q:(WCR="")!(DONE)  D
"RTN","PXRMHF",118,0)
 ... S HFIEN=""
"RTN","PXRMHF",119,0)
 ... F  S HFIEN=$O(SORTLIST(CAT,INVDATE,WCR,HFIEN)) Q:(HFIEN="")!(DONE)  D
"RTN","PXRMHF",120,0)
 ....;If this is a term finding it will be the third piece.
"RTN","PXRMHF",121,0)
 .... S F0=$P(FIHF(CAT,HFIEN,WCR),U,1)
"RTN","PXRMHF",122,0)
 .... S TF0=$P(FIHF(CAT,HFIEN,WCR),U,3)
"RTN","PXRMHF",123,0)
 .... I TF0="" S FINDING=F0
"RTN","PXRMHF",124,0)
 .... E  S FINDING=TF0
"RTN","PXRMHF",125,0)
 .... S TEMP=^XTMP(PXRMDFN,"HF",CAT,INVDATE,HFIEN)
"RTN","PXRMHF",126,0)
 .... S FIEVAL(FINDING)=1
"RTN","PXRMHF",127,0)
 .... S (DATE,FIEVAL(FINDING,"DATE"))=$P(TEMP,U,3)
"RTN","PXRMHF",128,0)
 .... S FIEVAL(FINDING,"FINDING")=HFIEN_";AUTTHF("
"RTN","PXRMHF",129,0)
 .... S FIEVAL(FINDING,"SOURCE")=$P(TEMP,U,1)_";AUPNVHF("
"RTN","PXRMHF",130,0)
 .... S FIEVAL(FINDING,"VIEN")=$P(TEMP,U,2)
"RTN","PXRMHF",131,0)
 ....;The value is the level/severity.
"RTN","PXRMHF",132,0)
 .... S LEVEL=$P(^AUPNVHF($P(TEMP,U,1),0),U,5)
"RTN","PXRMHF",133,0)
 .... S FIEVAL(FINDING,"LEVEL")=LEVEL
"RTN","PXRMHF",134,0)
 .... S FIEVAL(FINDING,"VALUE")=LEVEL
"RTN","PXRMHF",135,0)
 ....;If there is an condition for this finding evaluate it.
"RTN","PXRMHF",136,0)
 .... S FIND0=^PXD(811.9,PXRMITEM,20,F0,0)
"RTN","PXRMHF",137,0)
 .... S FIND3=$G(^PXD(811.9,PXRMITEM,20,F0,3))
"RTN","PXRMHF",138,0)
 .... I TF0="" S (TFIND0,TFIND3)=""
"RTN","PXRMHF",139,0)
 .... E  D
"RTN","PXRMHF",140,0)
 ..... S TFIND0=^PXRMD(811.5,$P(FIHF(CAT,HFIEN,WCR),U,2),20,TF0,0)
"RTN","PXRMHF",141,0)
 ..... S TFIND3=$G(^PXRMD(811.5,$P(FIHF(CAT,HFIEN,WCR),U,2),20,TF0,3))
"RTN","PXRMHF",142,0)
 ....;Determine if the finding has expired.
"RTN","PXRMHF",143,0)
 .... S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMHF",144,0)
 .... I 'VALID D  Q
"RTN","PXRMHF",145,0)
 ..... S FIEVAL(FINDING)=0
"RTN","PXRMHF",146,0)
 ..... S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMHF",147,0)
 .... S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,LEVEL)
"RTN","PXRMHF",148,0)
 .... I CONVAL'="" D
"RTN","PXRMHF",149,0)
 ..... I CONVAL D
"RTN","PXRMHF",150,0)
 ...... S FIEVAL(FINDING)=CONVAL
"RTN","PXRMHF",151,0)
 ...... S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMHF",152,0)
 ..... E  D
"RTN","PXRMHF",153,0)
 ...... K FIEVAL(FINDING)
"RTN","PXRMHF",154,0)
 ...... S FIEVAL(FINDING)=0
"RTN","PXRMHF",155,0)
 .... I WCR>0 S DONE=1
"RTN","PXRMHF",156,0)
 Q
"RTN","PXRMHF",157,0)
 ;
"RTN","PXRMHF",158,0)
 ;=======================================================================
"RTN","PXRMHF",159,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMHF",160,0)
 ;maintenance output.
"RTN","PXRMHF",161,0)
 N EM,FIEN,PNAME,LEVEL,TEMP,VDATE
"RTN","PXRMHF",162,0)
 S FIEN=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMHF",163,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMHF",164,0)
 S LEVEL=$G(FIEVAL(FINDING,"VALUE"))
"RTN","PXRMHF",165,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMHF",166,0)
 S TEMP=TEMP_" Health Factor: "
"RTN","PXRMHF",167,0)
 S PNAME=$P(^AUTTHF(FIEN,0),U,1)
"RTN","PXRMHF",168,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMHF",169,0)
 I $L(LEVEL)>0 D
"RTN","PXRMHF",170,0)
 . S TEMP=TEMP_"; level/severity - "
"RTN","PXRMHF",171,0)
 . S TEMP=TEMP_$$EXTERNAL^DILFD(9000010.23,.04,"",LEVEL,.EM)
"RTN","PXRMHF",172,0)
 ;If the health factor has expired add "EXPIRED"
"RTN","PXRMHF",173,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMHF",174,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMHF",175,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMHF",176,0)
 S NLINES=NLINES+1
"RTN","PXRMHF",177,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMHF",178,0)
 I $D(PXRMDEV) D
"RTN","PXRMHF",179,0)
 . N UID
"RTN","PXRMHF",180,0)
 . S UID="HEALTH FACTOR "_PNAME
"RTN","PXRMHF",181,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMHF",182,0)
 ;
"RTN","PXRMHF",183,0)
 ;For historical encounters display the location and comments.
"RTN","PXRMHF",184,0)
 I VDATE["E" D
"RTN","PXRMHF",185,0)
 . N INDEX,VIEN
"RTN","PXRMHF",186,0)
 . S INDEX="HF-"_PNAME
"RTN","PXRMHF",187,0)
 . S VIEN=FIEVAL(FINDING,"VIEN")
"RTN","PXRMHF",188,0)
 . D HLCV^PXRMVSIT(.NLINES,.TEXT,VIEN,INDEX)
"RTN","PXRMHF",189,0)
 Q
"RTN","PXRMHF",190,0)
 ;
"RTN","PXRMHF",191,0)
 ;=======================================================================
"RTN","PXRMHF",192,0)
PATLIST(INDEX,HFIEN,FINDING,FIND0,FIND3,TFIND0,TFIND3,FIEVAL) ;Build a
"RTN","PXRMHF",193,0)
 ;list of patients with a particular health factor.
"RTN","PXRMHF",194,0)
 K ^TMP(INDEX,$J,FINDING)
"RTN","PXRMHF",195,0)
 K ^TMP("PXRMHFLIST",$J)
"RTN","PXRMHF",196,0)
 N CONVAL,DATE,DFN,HFLIST,IND,TEMP,VALID,VALUE
"RTN","PXRMHF",197,0)
 S IND=0
"RTN","PXRMHF",198,0)
 F  S IND=+$O(^AUPNVHF("B",HFIEN,IND)) Q:IND=0  D
"RTN","PXRMHF",199,0)
 . S TEMP=$G(^AUPNVHF(IND,0))
"RTN","PXRMHF",200,0)
 . S DFN=$P(TEMP,U,2)
"RTN","PXRMHF",201,0)
 . S VISIT=$P(TEMP,U,3)
"RTN","PXRMHF",202,0)
 . S DATE=$P(^AUPNVSIT(VISIT,0),U,1)
"RTN","PXRMHF",203,0)
 . S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMHF",204,0)
 . I 'VALID Q
"RTN","PXRMHF",205,0)
 .;Save the level/severity.
"RTN","PXRMHF",206,0)
 . S VALUE=$P(TEMP,U,4)
"RTN","PXRMHF",207,0)
 . S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,VALUE)
"RTN","PXRMHF",208,0)
 . I (CONVAL="")!(CONVAL) D
"RTN","PXRMHF",209,0)
 .. S TEMP="RESULT~"_VALUE_U_"SOURCE~"_IND_";AUPNVHF("_U_"VISIT~"_VISIT
"RTN","PXRMHF",210,0)
 .. S ^TMP("PXRMHFLIST",$J,DFN,DATE)=TEMP
"RTN","PXRMHF",211,0)
 ;Only valid entries are on the list, save the most recent.
"RTN","PXRMHF",212,0)
 S DFN=0
"RTN","PXRMHF",213,0)
 F  S DFN=+$O(^TMP("PXRMHFLIST",$J,DFN)) Q:DFN=0  D
"RTN","PXRMHF",214,0)
 . S DATE=$O(^TMP("PXRMHFLIST",$J,DFN,""),-1)
"RTN","PXRMHF",215,0)
 . S ^TMP(INDEX,$J,DFN,DATE,FINDING)="FINDING~"_FIEVAL(FINDING,"FINDING")_U_^TMP("PXRMHFLIST",$J,DFN,DATE)
"RTN","PXRMHF",216,0)
 K ^TMP("PXRMHFLIST",$J)
"RTN","PXRMHF",217,0)
 Q
"RTN","PXRMHF",218,0)
 ;
"RTN","PXRMHF",219,0)
 ;=======================================================================
"RTN","PXRMHF",220,0)
WARN(HF0) ;Issue a warning if a health factor is missing its category.
"RTN","PXRMHF",221,0)
 N XMSUB
"RTN","PXRMHF",222,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMHF",223,0)
 S XMSUB="CLINICAL REMINDER DATA PROBLEM, HEALTH FACTOR"
"RTN","PXRMHF",224,0)
 S ^TMP("PXRMXMZ",$J,1,0)="Health Factor "_$P(HF0,U,1)
"RTN","PXRMHF",225,0)
 S ^TMP("PXRMXMZ",$J,2,0)="does not have a category, this is a required field."
"RTN","PXRMHF",226,0)
 S ^TMP("PXRMXMZ",$J,3,0)="This health factor will be ignored for all patients until the problem is fixed."
"RTN","PXRMHF",227,0)
 D SEND^PXRMMSG(XMSUB)
"RTN","PXRMHF",228,0)
 Q
"RTN","PXRMHF",229,0)
 ;
"RTN","PXRMINQ")
0^12^B18904895
"RTN","PXRMINQ",1,0)
PXRMINQ ; SLC/PKR - Clinical Reminder inquiry routines. ;08/31/2001
"RTN","PXRMINQ",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5,7**;Jun 19, 2000
"RTN","PXRMINQ",3,0)
 ;
"RTN","PXRMINQ",4,0)
 ;======================================================================
"RTN","PXRMINQ",5,0)
DISP(DIC,FLDS) ;Display detail.
"RTN","PXRMINQ",6,0)
 N L
"RTN","PXRMINQ",7,0)
 S L=0
"RTN","PXRMINQ",8,0)
 D EN1^DIP
"RTN","PXRMINQ",9,0)
 Q
"RTN","PXRMINQ",10,0)
 ;
"RTN","PXRMINQ",11,0)
 ;======================================================================
"RTN","PXRMINQ",12,0)
HEADER(TEXT) ;Display Header (see DHD variable).
"RTN","PXRMINQ",13,0)
 N TEMP,TEXTLEN,TEXTUND
"RTN","PXRMINQ",14,0)
 S TEXTUND=$TR($J("",IOM)," ","-")
"RTN","PXRMINQ",15,0)
 S TEMP=NOW_"  Page "_DC
"RTN","PXRMINQ",16,0)
 S TEXTLEN=$L(TEMP)
"RTN","PXRMINQ",17,0)
 W TEXT
"RTN","PXRMINQ",18,0)
 W ?(IOM-TEXTLEN),TEMP
"RTN","PXRMINQ",19,0)
 W !,TEXTUND,!!
"RTN","PXRMINQ",20,0)
 Q
"RTN","PXRMINQ",21,0)
 ;
"RTN","PXRMINQ",22,0)
 ;======================================================================
"RTN","PXRMINQ",23,0)
REM ;Do reminder inquiry.
"RTN","PXRMINQ",24,0)
 N BY,DC,DHD,FLDS,FROM,IENN,NOW,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMINQ",25,0)
 ;Build the finding variable pointer information.
"RTN","PXRMINQ",26,0)
 D BLDRLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMINQ",27,0)
 S FLDS="[PXRM DEFINITION INQUIRY]"
"RTN","PXRMINQ",28,0)
 S IENN=0
"RTN","PXRMINQ",29,0)
 S PXRMROOT="^PXD(811.9,"
"RTN","PXRMINQ",30,0)
 F  Q:IENN=-1  D
"RTN","PXRMINQ",31,0)
 . S IENN=$$SELECT(PXRMROOT,"Select Reminder Definition: ","")
"RTN","PXRMINQ",32,0)
 . I IENN=-1 Q
"RTN","PXRMINQ",33,0)
 . D SET(IENN,"REMINDER DEFINITION INQUIRY")
"RTN","PXRMINQ",34,0)
 . D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",35,0)
 Q
"RTN","PXRMINQ",36,0)
 ;
"RTN","PXRMINQ",37,0)
 ;======================================================================
"RTN","PXRMINQ",38,0)
REMVAR(VAR,IEN) ;Do reminder inquiry for reminder IEN return formatted
"RTN","PXRMINQ",39,0)
 ;output in VAR. VAR can be either a local variable or a global.
"RTN","PXRMINQ",40,0)
 ;If it is a local it is indexed for the broker. If it is a global
"RTN","PXRMINQ",41,0)
 ;it should be passed in closed form i.e., ^TMP("PXRMTEST",$J).
"RTN","PXRMINQ",42,0)
 ;It will be returned formatted for ListMan i.e.,
"RTN","PXRMINQ",43,0)
 ;^TMP("PXRMTEST",$J,N,0).
"RTN","PXRMINQ",44,0)
 N %ZIS,BY,DC,DHD,DONE,FF,FILENAME,FILESPEC,FLDS,FROM,GBL,HFNAME
"RTN","PXRMINQ",45,0)
 N IND,IOP,NOW,PATH,PXRMFVPL,PXRMROOT,SUCCESS,TO,UNIQN
"RTN","PXRMINQ",46,0)
 ;Build the finding variable pointer information.
"RTN","PXRMINQ",47,0)
 D BLDRLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMINQ",48,0)
 S FLDS="[PXRM DEFINITION INQUIRY]"
"RTN","PXRMINQ",49,0)
 S PXRMROOT="^PXD(811.9,"
"RTN","PXRMINQ",50,0)
 D SET(IEN,"")
"RTN","PXRMINQ",51,0)
 ;Make sure the PXRM WORKSTATION device exists.
"RTN","PXRMINQ",52,0)
 D MKWSDEV^PXRMHOST
"RTN","PXRMINQ",53,0)
 ;Set up the output file before DIP is called.
"RTN","PXRMINQ",54,0)
 S PATH=$$PWD^%ZISH
"RTN","PXRMINQ",55,0)
 S NOW=$$NOW^XLFDT
"RTN","PXRMINQ",56,0)
 S NOW=$TR(NOW,".","")
"RTN","PXRMINQ",57,0)
 S UNIQN=$J_NOW
"RTN","PXRMINQ",58,0)
 S FILENAME="PXRMWSD"_UNIQN_".DAT"
"RTN","PXRMINQ",59,0)
 S HFNAME=PATH_FILENAME
"RTN","PXRMINQ",60,0)
 S IOP="PXRM WORKSTATION;80"
"RTN","PXRMINQ",61,0)
 S %ZIS("HFSMODE")="W"
"RTN","PXRMINQ",62,0)
 S %ZIS("HFSNAME")=HFNAME
"RTN","PXRMINQ",63,0)
 D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",64,0)
 ;Move the host file into a global.
"RTN","PXRMINQ",65,0)
 S GBL="^TMP(""PXRMINQ"",$J,1,0)"
"RTN","PXRMINQ",66,0)
 S GBL=$NA(@GBL)
"RTN","PXRMINQ",67,0)
 K ^TMP("PXRMINQ",$J)
"RTN","PXRMINQ",68,0)
 S SUCCESS=$$FTG^%ZISH(PATH,FILENAME,GBL,3)
"RTN","PXRMINQ",69,0)
 ;Look for a form feed, remove it and all subsequent lines.
"RTN","PXRMINQ",70,0)
 S FF=$C(12)
"RTN","PXRMINQ",71,0)
 I $G(VAR)["^" D
"RTN","PXRMINQ",72,0)
 . S VAR=$NA(@VAR)
"RTN","PXRMINQ",73,0)
 . S VAR=$P(VAR,")",1)
"RTN","PXRMINQ",74,0)
 . S VAR=VAR_",IND,0)"
"RTN","PXRMINQ",75,0)
 . S (DONE,IND)=0
"RTN","PXRMINQ",76,0)
 . F  Q:DONE  S IND=$O(^TMP("PXRMINQ",$J,IND)) Q:+IND=0  D
"RTN","PXRMINQ",77,0)
 .. I ^TMP("PXRMINQ",$J,IND,0)=FF S DONE=1 Q
"RTN","PXRMINQ",78,0)
 .. S @VAR=^TMP("PXRMINQ",$J,IND,0)
"RTN","PXRMINQ",79,0)
 E  D
"RTN","PXRMINQ",80,0)
 . S (DONE,IND)=0
"RTN","PXRMINQ",81,0)
 . F  Q:DONE  S IND=$O(^TMP("PXRMINQ",$J,IND)) Q:+IND=0  D
"RTN","PXRMINQ",82,0)
 .. S VAR(IND)=^TMP("PXRMINQ",$J,IND,0)
"RTN","PXRMINQ",83,0)
 .. I VAR(IND)=FF K ARRAY(IND) S DONE=1
"RTN","PXRMINQ",84,0)
 K ^TMP("PXRMINQ",$J)
"RTN","PXRMINQ",85,0)
 ;Delete the host file.
"RTN","PXRMINQ",86,0)
 S FILESPEC(FILENAME)=""
"RTN","PXRMINQ",87,0)
 S SUCCESS=$$DEL^%ZISH(PATH,$NA(FILESPEC))
"RTN","PXRMINQ",88,0)
 Q
"RTN","PXRMINQ",89,0)
 ;
"RTN","PXRMINQ",90,0)
 ;======================================================================
"RTN","PXRMINQ",91,0)
SELECT(ROOT,PROMPT,DEFAULT) ;Select the entry.
"RTN","PXRMINQ",92,0)
 N DIC,Y
"RTN","PXRMINQ",93,0)
 S DIC=ROOT
"RTN","PXRMINQ",94,0)
 S DIC(0)="AEMQ"
"RTN","PXRMINQ",95,0)
 S DIC("A")=PROMPT
"RTN","PXRMINQ",96,0)
 I $G(DEFAULT)'="" S DIC("B")=DEFAULT
"RTN","PXRMINQ",97,0)
 D ^DIC
"RTN","PXRMINQ",98,0)
 Q Y
"RTN","PXRMINQ",99,0)
 ;
"RTN","PXRMINQ",100,0)
 ;======================================================================
"RTN","PXRMINQ",101,0)
SET(Y,TEXT) ;Set data for entry selection and the header.
"RTN","PXRMINQ",102,0)
 ;
"RTN","PXRMINQ",103,0)
 ;These variables need to be setup every time because DIP kills them.
"RTN","PXRMINQ",104,0)
 S BY="NUMBER"
"RTN","PXRMINQ",105,0)
 S (FR,TO)=+$P(Y,U,1)
"RTN","PXRMINQ",106,0)
 ;
"RTN","PXRMINQ",107,0)
 ;If TEXT is null then no header.
"RTN","PXRMINQ",108,0)
 I $L(TEXT)>0 D
"RTN","PXRMINQ",109,0)
 . S NOW=$$NOW^XLFDT
"RTN","PXRMINQ",110,0)
 . S NOW=$$FMTE^XLFDT(NOW,"1P")
"RTN","PXRMINQ",111,0)
 . S DHD="W ?0 D HEADER^PXRMINQ("""_TEXT_""")"
"RTN","PXRMINQ",112,0)
 E  S DHD="@@"
"RTN","PXRMINQ",113,0)
 Q
"RTN","PXRMINQ",114,0)
 ;
"RTN","PXRMINQ",115,0)
 ;======================================================================
"RTN","PXRMINQ",116,0)
SPONSOR ;Do sponsor inquiry.
"RTN","PXRMINQ",117,0)
 N BY,DC,DHD,FLDS,FROM,IENN,NOW,PXRMEDOK,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMINQ",118,0)
 S PXRMEDOK=1
"RTN","PXRMINQ",119,0)
 S FLDS="[PXRM SPONSOR INQUIRY]"
"RTN","PXRMINQ",120,0)
 S IENN=0
"RTN","PXRMINQ",121,0)
 S PXRMROOT="^PXRMD(811.6,"
"RTN","PXRMINQ",122,0)
 F  Q:IENN=-1  D
"RTN","PXRMINQ",123,0)
 . S IENN=$$SELECT(PXRMROOT,"Select Reminder Sponsor: ","")
"RTN","PXRMINQ",124,0)
 . I IENN=-1 Q
"RTN","PXRMINQ",125,0)
 . D SET(IENN,"REMINDER SPONSOR INQUIRY")
"RTN","PXRMINQ",126,0)
 . D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",127,0)
 Q
"RTN","PXRMINQ",128,0)
 ;
"RTN","PXRMINQ",129,0)
 ;======================================================================
"RTN","PXRMINQ",130,0)
TAX ;Do taxonomy inquiry.
"RTN","PXRMINQ",131,0)
 N BY,DC,DHD,FLDS,FROM,IENN,NOW,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMINQ",132,0)
 S FLDS="[PXRM TAXONOMY INQUIRY]"
"RTN","PXRMINQ",133,0)
 S IENN=0
"RTN","PXRMINQ",134,0)
 S PXRMROOT="^PXD(811.2,"
"RTN","PXRMINQ",135,0)
 F  Q:IENN=-1  D
"RTN","PXRMINQ",136,0)
 . S IENN=$$SELECT(PXRMROOT,"Select Reminder Taxonomy: ","")
"RTN","PXRMINQ",137,0)
 . I IENN=-1 Q
"RTN","PXRMINQ",138,0)
 . D SET(IENN,"REMINDER TAXONOMY INQUIRY")
"RTN","PXRMINQ",139,0)
 . D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",140,0)
 Q
"RTN","PXRMINQ",141,0)
 ;
"RTN","PXRMINQ",142,0)
 ;======================================================================
"RTN","PXRMINQ",143,0)
TERM ;Do term inquiry.
"RTN","PXRMINQ",144,0)
 N BY,DC,DHD,FLDS,FROM,IENN,NOW,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMINQ",145,0)
 ;Build the finding variable pointer information
"RTN","PXRMINQ",146,0)
 D BLDRLIST^PXRMVPTR(811.52,.01,.PXRMFVPL)
"RTN","PXRMINQ",147,0)
 S FLDS="[PXRM TERM INQUIRY]"
"RTN","PXRMINQ",148,0)
 S IENN=0
"RTN","PXRMINQ",149,0)
 S PXRMROOT="^PXRMD(811.5,"
"RTN","PXRMINQ",150,0)
 F  Q:IENN=-1  D
"RTN","PXRMINQ",151,0)
 . S IENN=$$SELECT(PXRMROOT,"Select Reminder Term: ","")
"RTN","PXRMINQ",152,0)
 . I IENN=-1 Q
"RTN","PXRMINQ",153,0)
 . D SET(IENN,"REMINDER TERM INQUIRY")
"RTN","PXRMINQ",154,0)
 . D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",155,0)
 Q
"RTN","PXRMINQ",156,0)
 ;
"RTN","PXRMINTR")
0^13^B43831570
"RTN","PXRMINTR",1,0)
PXRMINTR ; SLC/PKR/PJH - Input transforms for Clinical Reminders. ;09/05/2001
"RTN","PXRMINTR",2,0)
 ;;1.5;CLINICAL REMINDERS;**5,7**;Jun 19, 2000
"RTN","PXRMINTR",3,0)
 ;=======================================================================
"RTN","PXRMINTR",4,0)
VASP(X) ;Check for valid associate sponsor in file 811.6.
"RTN","PXRMINTR",5,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMINTR",6,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMINTR",7,0)
 ;Do not execute as part of exchange.
"RTN","PXRMINTR",8,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMINTR",9,0)
 ;Make sure that an associated sponsor does not point to itself.
"RTN","PXRMINTR",10,0)
 I X=DA D  Q 0
"RTN","PXRMINTR",11,0)
 . D EN^DDIOL("An associated sponsor cannot point to itself.")
"RTN","PXRMINTR",12,0)
 ;A sponsor cannot be an associated sponsor if it contains associated
"RTN","PXRMINTR",13,0)
 ;sponsors.
"RTN","PXRMINTR",14,0)
 I $D(^PXRMD(811.6,X,2,"B")) D  Q 0
"RTN","PXRMINTR",15,0)
 . D EN^DDIOL("A sponsor cannot be selected as an associated sponsor if it contains associated sponsors.")
"RTN","PXRMINTR",16,0)
 ;The class of an associated sponsor must match that of the sponsor.
"RTN","PXRMINTR",17,0)
 N ASCLASS,SCLASS
"RTN","PXRMINTR",18,0)
 S SCLASS=$P(^PXRMD(811.6,DA,0),U,2)
"RTN","PXRMINTR",19,0)
 S ASCLASS=$P(^PXRMD(811.6,X,0),U,2)
"RTN","PXRMINTR",20,0)
 I ASCLASS'=SCLASS D  Q 0
"RTN","PXRMINTR",21,0)
 . N TEXT
"RTN","PXRMINTR",22,0)
 . S TEXT="The associated sponsor's class is "_ASCLASS_", it does not match the sponsor's class which is "_SCLASS_". They must match."
"RTN","PXRMINTR",23,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",24,0)
 Q 1
"RTN","PXRMINTR",25,0)
 ;
"RTN","PXRMINTR",26,0)
 ;=======================================================================
"RTN","PXRMINTR",27,0)
VCLASS(X) ;Check for valid CLASS field, ordinary users cannot create
"RTN","PXRMINTR",28,0)
 ;National classes.
"RTN","PXRMINTR",29,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMINTR",30,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMINTR",31,0)
 ;Do not execute as part of exchange.
"RTN","PXRMINTR",32,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMINTR",33,0)
 I (X["N"),(($G(PXRMINST)'=1)!(DUZ(0)'="@")) D  Q 0
"RTN","PXRMINTR",34,0)
 . D EN^DDIOL("You are not allowed to create a NATIONAL class")
"RTN","PXRMINTR",35,0)
 E  Q 1
"RTN","PXRMINTR",36,0)
 ;
"RTN","PXRMINTR",37,0)
 ;=======================================================================
"RTN","PXRMINTR",38,0)
VCOND(X) ;Make sure X is a valid CONDITION.
"RTN","PXRMINTR",39,0)
 I '$D(X) Q
"RTN","PXRMINTR",40,0)
 ;The CONDITION must start with "I ".
"RTN","PXRMINTR",41,0)
 I $E(X,1,2)'="I " D  Q
"RTN","PXRMINTR",42,0)
 . K X
"RTN","PXRMINTR",43,0)
 . D EN^DDIOL("CONDITION must start with ""I"" followed by a single space")
"RTN","PXRMINTR",44,0)
 N COND,CS,RS
"RTN","PXRMINTR",45,0)
 ;Find the condition and the left and right sides.
"RTN","PXRMINTR",46,0)
 S (CS,RS)=""
"RTN","PXRMINTR",47,0)
 F COND="=",">","<","[","]" Q:CS'=""  D
"RTN","PXRMINTR",48,0)
 . S RS=$P(X,COND,2)
"RTN","PXRMINTR",49,0)
 . I RS'="" S CS=COND
"RTN","PXRMINTR",50,0)
 I CS="" D  Q
"RTN","PXRMINTR",51,0)
 . K X
"RTN","PXRMINTR",52,0)
 . D EN^DDIOL("CONDITION must use a conditional operator i.e., =, >, <, [, or ]")
"RTN","PXRMINTR",53,0)
 ;As a safety measure everything after the "I " cannot contain space
"RTN","PXRMINTR",54,0)
 ;or ^.
"RTN","PXRMINTR",55,0)
 S RS=$E(X,3,$L(X))
"RTN","PXRMINTR",56,0)
 S RS=$TR(RS," ^","~")
"RTN","PXRMINTR",57,0)
 S X="I "_RS
"RTN","PXRMINTR",58,0)
 D ^DIM
"RTN","PXRMINTR",59,0)
 I '$D(X) D EN^DDIOL("This is not a valid CONDITION")
"RTN","PXRMINTR",60,0)
 Q
"RTN","PXRMINTR",61,0)
 ;
"RTN","PXRMINTR",62,0)
 ;=======================================================================
"RTN","PXRMINTR",63,0)
VFINDING(X) ;Check X to see if it is a valid finding. This is the input
"RTN","PXRMINTR",64,0)
 ;transform on the .01 field of the reminder findings multiple. Data
"RTN","PXRMINTR",65,0)
 ;element 811.902,.01.
"RTN","PXRMINTR",66,0)
 ;Include stubs for all possible finding types in case we need input
"RTN","PXRMINTR",67,0)
 ;transforms on them.
"RTN","PXRMINTR",68,0)
 ;I X["AUTTEDT(" Q 1
"RTN","PXRMINTR",69,0)
 ;I X["AUTTEXAM(" Q 1
"RTN","PXRMINTR",70,0)
 I X["AUTTHF(" Q $$VHF(X)
"RTN","PXRMINTR",71,0)
 ;I X["AUTTIMM(" Q 1
"RTN","PXRMINTR",72,0)
 ;I X["AUTTSK(" Q 1
"RTN","PXRMINTR",73,0)
 ;I X["GMRD(120.51," Q 1
"RTN","PXRMINTR",74,0)
 I X["LAB(60," Q $$VLAB(X)
"RTN","PXRMINTR",75,0)
 ;I X["ORD(101.43," Q 1
"RTN","PXRMINTR",76,0)
 I X["PXD(811.2," Q $$VTAX(X)
"RTN","PXRMINTR",77,0)
 ;I X["PXRMD(811.4," Q 1
"RTN","PXRMINTR",78,0)
 ;I X["PXRMD(811.5," Q 1
"RTN","PXRMINTR",79,0)
 ;I X["PS(50.605," Q 1
"RTN","PXRMINTR",80,0)
 ;I X["PSDRUG(" Q 1
"RTN","PXRMINTR",81,0)
 ;I X["PSNDF(50.6," Q 1
"RTN","PXRMINTR",82,0)
 ;I X["RAMIS(71," Q 1
"RTN","PXRMINTR",83,0)
 I X["YTT(601," Q $$VMH(X)
"RTN","PXRMINTR",84,0)
 Q 1
"RTN","PXRMINTR",85,0)
 ;
"RTN","PXRMINTR",86,0)
 ;=======================================================================
"RTN","PXRMINTR",87,0)
VHF(X) ;Check for valid health factor findings. It must be a factor, not
"RTN","PXRMINTR",88,0)
 ;a category.
"RTN","PXRMINTR",89,0)
 N CAT,IEN,TEMP,TYPE
"RTN","PXRMINTR",90,0)
 S IEN=$P(X,";",1)
"RTN","PXRMINTR",91,0)
 S TEMP=$G(^AUTTHF(IEN,0))
"RTN","PXRMINTR",92,0)
 S TYPE=$P(TEMP,U,10)
"RTN","PXRMINTR",93,0)
 I TYPE="C" D  Q 0
"RTN","PXRMINTR",94,0)
 . D EN^DDIOL("Category health factors cannot be used in reminder definitions!")
"RTN","PXRMINTR",95,0)
 I TYPE'="F" D  Q 0
"RTN","PXRMINTR",96,0)
 . D EN^DDIOL("Only factor health factors can be used in reminder definitions!")
"RTN","PXRMINTR",97,0)
 ;Make sure that the health factor has a category.
"RTN","PXRMINTR",98,0)
 S CAT=$P(TEMP,U,3)
"RTN","PXRMINTR",99,0)
 I CAT="" D  Q 0
"RTN","PXRMINTR",100,0)
 . D EN^DDIOL("Factor health factors must have a category!")
"RTN","PXRMINTR",101,0)
 Q 1
"RTN","PXRMINTR",102,0)
 ;
"RTN","PXRMINTR",103,0)
 ;=======================================================================
"RTN","PXRMINTR",104,0)
VIGNAC(X) ;Check X to see if it contains valid IGNORE ON N/A codes.
"RTN","PXRMINTR",105,0)
 ;This is part of the input transform for this field. The length of the
"RTN","PXRMINTR",106,0)
 ;IGNORE ON N/A field is 8 characters. The valid codes are:
"RTN","PXRMINTR",107,0)
 ;   A - age
"RTN","PXRMINTR",108,0)
 ;   I - inactive
"RTN","PXRMINTR",109,0)
 ;   R - race
"RTN","PXRMINTR",110,0)
 ;   S - sex
"RTN","PXRMINTR",111,0)
 ;   * - wildcard matches anything.
"RTN","PXRMINTR",112,0)
 N LEN
"RTN","PXRMINTR",113,0)
 S LEN=$L(X)
"RTN","PXRMINTR",114,0)
 I (LEN>8)!(LEN<1) Q 0
"RTN","PXRMINTR",115,0)
 ;
"RTN","PXRMINTR",116,0)
 N TEMP,TEXT
"RTN","PXRMINTR",117,0)
 S TEMP=X
"RTN","PXRMINTR",118,0)
 S TEMP=$TR(TEMP,"A","")
"RTN","PXRMINTR",119,0)
 S TEMP=$TR(TEMP,"I","")
"RTN","PXRMINTR",120,0)
 S TEMP=$TR(TEMP,"R","")
"RTN","PXRMINTR",121,0)
 S TEMP=$TR(TEMP,"S","")
"RTN","PXRMINTR",122,0)
 S TEMP=$TR(TEMP,"*","")
"RTN","PXRMINTR",123,0)
 ;At this point TEMP should be NULL,if it is not then there are
"RTN","PXRMINTR",124,0)
 ;bad codes.
"RTN","PXRMINTR",125,0)
 S LEN=$L(TEMP)
"RTN","PXRMINTR",126,0)
 I LEN=1 D  Q 0
"RTN","PXRMINTR",127,0)
 . S TEXT=TEMP_" is not a valid IGNORE ON N/A code!"
"RTN","PXRMINTR",128,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",129,0)
 I LEN>1 D  Q 0
"RTN","PXRMINTR",130,0)
 . S TEXT=TEMP_" are not valid IGNORE ON N/A codes!"
"RTN","PXRMINTR",131,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",132,0)
 Q 1
"RTN","PXRMINTR",133,0)
 ;
"RTN","PXRMINTR",134,0)
 ;=======================================================================
"RTN","PXRMINTR",135,0)
VLAB(X) ;Check for valid lab findings. They must be in the
"RTN","PXRMINTR",136,0)
 ;chemistry/hematology node and are not a panel.
"RTN","PXRMINTR",137,0)
 I X'["LAB(60" Q 1
"RTN","PXRMINTR",138,0)
 N LAB0,LABTEST,TEST,WARN
"RTN","PXRMINTR",139,0)
 S LABTEST=$P(X,";",1)
"RTN","PXRMINTR",140,0)
 S LAB0=^LAB(60,LABTEST,0)
"RTN","PXRMINTR",141,0)
 S WARN='+$P(X,";",3)
"RTN","PXRMINTR",142,0)
 I $P(LAB0,U,4)'["CH" D  Q 0
"RTN","PXRMINTR",143,0)
 . I WARN D
"RTN","PXRMINTR",144,0)
 .. S TEXT(1)=$P(LAB0,U,1)_" is not a ""CH"" subscript lab, cannot be used for a reminder!"
"RTN","PXRMINTR",145,0)
 .. S TEXT(2)="Contact your Lab ADPAC for help"
"RTN","PXRMINTR",146,0)
 .. D EN^DDIOL(.TEXT)
"RTN","PXRMINTR",147,0)
 I $P($P(LAB0,U,5),";",2)="" D  Q 0
"RTN","PXRMINTR",148,0)
 . I WARN D
"RTN","PXRMINTR",149,0)
 .. S TEXT(1)=$P(LAB0,U,1)_" is a lab panel, cannot be used for a reminder!"
"RTN","PXRMINTR",150,0)
 .. S TEXT(2)="Contact your Lab ADPAC for help"
"RTN","PXRMINTR",151,0)
 .. D EN^DDIOL(.TEXT)
"RTN","PXRMINTR",152,0)
 Q 1
"RTN","PXRMINTR",153,0)
 ;
"RTN","PXRMINTR",154,0)
 ;=======================================================================
"RTN","PXRMINTR",155,0)
VMH(X) ;The site must have the routine YTAPI installed in order to use
"RTN","PXRMINTR",156,0)
 ;mental health instrument findings.
"RTN","PXRMINTR",157,0)
 N EXISTS
"RTN","PXRMINTR",158,0)
 S EXISTS=$$EXISTS^PXRMEXCF("YTAPI")
"RTN","PXRMINTR",159,0)
 I EXISTS Q 1
"RTN","PXRMINTR",160,0)
 N TEXT
"RTN","PXRMINTR",161,0)
 S TEXT(1)="Your site does not have the routine YTAPI installed."
"RTN","PXRMINTR",162,0)
 S TEXT(2)="It is required in order to use Mental Instrument findings."
"RTN","PXRMINTR",163,0)
 S TEXT(3)="The routine was originally released in patch YS*5.01*53."
"RTN","PXRMINTR",164,0)
 S TEXT(4)=" "
"RTN","PXRMINTR",165,0)
 D EN^DDIOL(.TEXT)
"RTN","PXRMINTR",166,0)
 Q 0
"RTN","PXRMINTR",167,0)
 ;
"RTN","PXRMINTR",168,0)
 ;=======================================================================
"RTN","PXRMINTR",169,0)
VNAME(NAME,FILE) ;Check for valid .01 value.
"RTN","PXRMINTR",170,0)
 ;For files 801.41, 811.2, 811.4 and 811.9 the name cannot start with VA-
"RTN","PXRMINTR",171,0)
 ;unless this is a national reminder.
"RTN","PXRMINTR",172,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMINTR",173,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMINTR",174,0)
 ;Do not execute as part of exchange.
"RTN","PXRMINTR",175,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMINTR",176,0)
 N STEXT,TEXT,VALID
"RTN","PXRMINTR",177,0)
 S VALID=1
"RTN","PXRMINTR",178,0)
 I (FILE=811.2)!(FILE=811.4)!(FILE=811.9)!(FILE=801.41) D
"RTN","PXRMINTR",179,0)
 . S STEXT=$E(NAME,1,3)
"RTN","PXRMINTR",180,0)
 . I (STEXT="VA-"),(($G(PXRMINST)'=1)!(DUZ(0)'="@")) D
"RTN","PXRMINTR",181,0)
 .. S TEXT=NAME_" cannot start with ""VA-"", reserved for national distribution!"
"RTN","PXRMINTR",182,0)
 .. D EN^DDIOL(TEXT)
"RTN","PXRMINTR",183,0)
 .. H 2
"RTN","PXRMINTR",184,0)
 .. S VALID=0
"RTN","PXRMINTR",185,0)
 Q VALID
"RTN","PXRMINTR",186,0)
 ;
"RTN","PXRMINTR",187,0)
 ;=======================================================================
"RTN","PXRMINTR",188,0)
VSPONSOR(X) ;Make sure file Class and Sponsor Class match.
"RTN","PXRMINTR",189,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMINTR",190,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMINTR",191,0)
 ;Do not execute as part of exchange.
"RTN","PXRMINTR",192,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMINTR",193,0)
 N FCLASS,SCLASS,TEXT,VALID
"RTN","PXRMINTR",194,0)
 S VALID=1
"RTN","PXRMINTR",195,0)
 S FCLASS=$P(@(DIC_DA_",100)"),U,1)
"RTN","PXRMINTR",196,0)
 S SCLASS=$P(^PXRMD(811.6,X,0),U,2)
"RTN","PXRMINTR",197,0)
 I SCLASS'=FCLASS D
"RTN","PXRMINTR",198,0)
 . S FCLASS=$$EXTERNAL^DILFD(811.6,.02,"",FCLASS)
"RTN","PXRMINTR",199,0)
 . S SCLASS=$$EXTERNAL^DILFD(811.6,.02,"",SCLASS)
"RTN","PXRMINTR",200,0)
 . S TEXT="Sponsor Class is "_SCLASS_", File Class is "_FCLASS_" they must match!"
"RTN","PXRMINTR",201,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",202,0)
 . S VALID=0
"RTN","PXRMINTR",203,0)
 Q VALID
"RTN","PXRMINTR",204,0)
 ;
"RTN","PXRMINTR",205,0)
 ;=======================================================================
"RTN","PXRMINTR",206,0)
VTAX(X) ;Make sure the taxonomy is active.
"RTN","PXRMINTR",207,0)
 N IEN,INACTIVE
"RTN","PXRMINTR",208,0)
 S IEN=$P(X,";",1)
"RTN","PXRMINTR",209,0)
 S INACTIVE=$P(^PXD(811.2,IEN,0),U,6)
"RTN","PXRMINTR",210,0)
 I INACTIVE D  Q 0
"RTN","PXRMINTR",211,0)
 . D EN^DDIOL("This taxonomy is inactive and cannot be selected.")
"RTN","PXRMINTR",212,0)
 E  Q 1
"RTN","PXRMINTR",213,0)
 ;
"RTN","PXRMINTR",214,0)
 ;=======================================================================
"RTN","PXRMINTR",215,0)
VTPER(X) ;Check for valid time period. They must be of the form NS,
"RTN","PXRMINTR",216,0)
 ; where N is a number and S is D for days, M for months, or Y for years.
"RTN","PXRMINTR",217,0)
 N LEN
"RTN","PXRMINTR",218,0)
 S X=$$UP^XLFSTR(X)
"RTN","PXRMINTR",219,0)
 S LEN=$L(X)
"RTN","PXRMINTR",220,0)
 I (LEN>5)!(LEN<2) Q 0
"RTN","PXRMINTR",221,0)
 I ((X'?1N.N1"D")&(X'?1N.N1"M")&(X'?1N.N1"Y")) Q 0
"RTN","PXRMINTR",222,0)
 Q 1
"RTN","PXRMINTR",223,0)
 ;
"RTN","PXRMINTR",224,0)
 ;=======================================================================
"RTN","PXRMINTR",225,0)
VUSAGE(X) ;Check X to see if it contains valid USAGE codes.
"RTN","PXRMINTR",226,0)
 ;This is part of the input transform for this field. The length of the
"RTN","PXRMINTR",227,0)
 ;USAGE field is 10 characters. The valid codes are:
"RTN","PXRMINTR",228,0)
 ;   C - CPRS
"RTN","PXRMINTR",229,0)
 ;   R - reports
"RTN","PXRMINTR",230,0)
 ;   X - extracts
"RTN","PXRMINTR",231,0)
 ;   * - wildcard matches anything.
"RTN","PXRMINTR",232,0)
 N LEN
"RTN","PXRMINTR",233,0)
 S LEN=$L(X)
"RTN","PXRMINTR",234,0)
 I (LEN>10)!(LEN<1) Q 0
"RTN","PXRMINTR",235,0)
 ;
"RTN","PXRMINTR",236,0)
 N TEMP,TEXT
"RTN","PXRMINTR",237,0)
 S TEMP=X
"RTN","PXRMINTR",238,0)
 S TEMP=$TR(TEMP,"C","")
"RTN","PXRMINTR",239,0)
 S TEMP=$TR(TEMP,"R","")
"RTN","PXRMINTR",240,0)
 S TEMP=$TR(TEMP,"X","")
"RTN","PXRMINTR",241,0)
 S TEMP=$TR(TEMP,"*","")
"RTN","PXRMINTR",242,0)
 ;At this point TEMP should be NULL,if it is not then there are
"RTN","PXRMINTR",243,0)
 ;bad codes.
"RTN","PXRMINTR",244,0)
 S LEN=$L(TEMP)
"RTN","PXRMINTR",245,0)
 I LEN=1 D  Q 0
"RTN","PXRMINTR",246,0)
 . S TEXT=TEMP_" is not a valid USAGE code!"
"RTN","PXRMINTR",247,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",248,0)
 I LEN>1 D  Q 0
"RTN","PXRMINTR",249,0)
 . S TEXT=TEMP_" are not valid USAGE codes!"
"RTN","PXRMINTR",250,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",251,0)
 Q 1
"RTN","PXRMMH")
0^27^B27697816
"RTN","PXRMMH",1,0)
PXRMMH ; SLC/PKR - Handle mental health findings. ;09/28/2001
"RTN","PXRMMH",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,7**;Jun 19, 2000
"RTN","PXRMMH",3,0)
 ;
"RTN","PXRMMH",4,0)
 ;=======================================================================
"RTN","PXRMMH",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate mental health instrument findings.
"RTN","PXRMMH",6,0)
 N FIND0,FIND3,FINDING,MHIEN,YS
"RTN","PXRMMH",7,0)
 S YS("DFN")=DFN
"RTN","PXRMMH",8,0)
 S YS("LIMIT")=1
"RTN","PXRMMH",9,0)
 S MHIEN=""
"RTN","PXRMMH",10,0)
 F  S MHIEN=$O(^PXD(811.9,PXRMITEM,20,"E","YTT(601,",MHIEN)) Q:+MHIEN=0  D
"RTN","PXRMMH",11,0)
 . S FINDING=""
"RTN","PXRMMH",12,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","YTT(601,",MHIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMMH",13,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMMH",14,0)
 .. S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMMH",15,0)
 .. D FIEVAL(DFN,MHIEN,FIND0,FIND3,"","",FINDING,.FIEVAL,.YS)
"RTN","PXRMMH",16,0)
 Q
"RTN","PXRMMH",17,0)
 ;
"RTN","PXRMMH",18,0)
 ;=======================================================================
"RTN","PXRMMH",19,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate mental health instrument terms.
"RTN","PXRMMH",20,0)
 N FIND0,FIND3,MHIEN,TFIND0,TFIND3,TFINDING,YS
"RTN","PXRMMH",21,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMMH",22,0)
 S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMMH",23,0)
 S YS("DFN")=DFN
"RTN","PXRMMH",24,0)
 S YS("LIMIT")=1
"RTN","PXRMMH",25,0)
 S MHIEN=""
"RTN","PXRMMH",26,0)
 F  S MHIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","YTT(601,",MHIEN)) Q:+MHIEN=0  D
"RTN","PXRMMH",27,0)
 . S TFINDING=""
"RTN","PXRMMH",28,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","YTT(601,",MHIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMMH",29,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMMH",30,0)
 .. S TFIND3=$G(^PXRMD(811.5,TERMIEN,20,TFINDING,3))
"RTN","PXRMMH",31,0)
 .. D FIEVAL(DFN,MHIEN,FIND0,FIND3,TFIND0,TFIND3,TFINDING,.TFIEVAL,.YS)
"RTN","PXRMMH",32,0)
 Q
"RTN","PXRMMH",33,0)
 ;
"RTN","PXRMMH",34,0)
 ;=======================================================================
"RTN","PXRMMH",35,0)
FIEVAL(DFN,MHIEN,FIND0,FIND3,TFIND0,TFIND3,FINDING,FIEVAL,YS) ;
"RTN","PXRMMH",36,0)
 N CONVAL,MHTEST,SCALE,SCNAME,SCORE,TEMP,TSCORE
"RTN","PXRMMH",37,0)
 N X,Y,VALID,YSDATA,YTT0
"RTN","PXRMMH",38,0)
 S YTT0=^YTT(601,MHIEN,0)
"RTN","PXRMMH",39,0)
 S MHTEST=$P(YTT0,U,1)
"RTN","PXRMMH",40,0)
 S SCALE=$P(TFIND0,U,12)
"RTN","PXRMMH",41,0)
 I SCALE="" S SCALE=$P(FIND0,U,12)
"RTN","PXRMMH",42,0)
 S YS("CODE")=MHTEST
"RTN","PXRMMH",43,0)
 ;The scale can be either the name or the number.
"RTN","PXRMMH",44,0)
 I (SCALE'=""),(+SCALE=0) D
"RTN","PXRMMH",45,0)
 . S SCALE=$O(^YTT(601,MHIEN,"S","C",SCALE,""))
"RTN","PXRMMH",46,0)
 S YS("DFN")=DFN
"RTN","PXRMMH",47,0)
 S YS("SCALE")=SCALE
"RTN","PXRMMH",48,0)
 K YSDATA
"RTN","PXRMMH",49,0)
 D LISTONE^YTAPI(.YSDATA,.YS)
"RTN","PXRMMH",50,0)
 ;The most recent results will be in YSDATA(2)
"RTN","PXRMMH",51,0)
 S TEMP=$G(YSDATA(2))
"RTN","PXRMMH",52,0)
 S X=$P(TEMP,U,1)
"RTN","PXRMMH",53,0)
 I (X="")!(X="no psych pt") S FIEVAL(FINDING)=0 Q
"RTN","PXRMMH",54,0)
 ;Save the rest of the finding information.
"RTN","PXRMMH",55,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMMH",56,0)
 S FIEVAL(FINDING,"DATE")=$P(TEMP,U,1)
"RTN","PXRMMH",57,0)
 S DATE=$P(TEMP,U,1)
"RTN","PXRMMH",58,0)
 S FIEVAL(FINDING,"FINDING")=MHIEN_";YTT(601,"
"RTN","PXRMMH",59,0)
 S FIEVAL(FINDING,"SCALE")=SCALE
"RTN","PXRMMH",60,0)
 S FIEVAL(FINDING,"TEST")=MHTEST
"RTN","PXRMMH",61,0)
 ;Determine if the finding has expired.
"RTN","PXRMMH",62,0)
  S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMMH",63,0)
  I 'VALID D  Q
"RTN","PXRMMH",64,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMMH",65,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMMH",66,0)
 ;If a scale was specified save the scoring information and check
"RTN","PXRMMH",67,0)
 ;for an action.
"RTN","PXRMMH",68,0)
 I SCALE'="" D
"RTN","PXRMMH",69,0)
 . S FIEVAL(FINDING,"SCNAME")=$P(TEMP,U,4)
"RTN","PXRMMH",70,0)
 . S SCORE=$P(TEMP,U,5)
"RTN","PXRMMH",71,0)
 . S FIEVAL(FINDING,"SCORE")=SCORE
"RTN","PXRMMH",72,0)
 . S FIEVAL(FINDING,"VALUE")=SCORE
"RTN","PXRMMH",73,0)
 . S TSCORE=$P(TEMP,U,6)
"RTN","PXRMMH",74,0)
 . I TSCORE'="" S FIEVAL(FINDING,"TSCORE")=TSCORE
"RTN","PXRMMH",75,0)
 .;If there is a condition for this finding evaluate it.
"RTN","PXRMMH",76,0)
 . S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,SCORE)
"RTN","PXRMMH",77,0)
 . I CONVAL'="" D
"RTN","PXRMMH",78,0)
 .. I CONVAL D
"RTN","PXRMMH",79,0)
 ... S FIEVAL(FINDING)=CONVAL
"RTN","PXRMMH",80,0)
 ... S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMMH",81,0)
 .. E  D
"RTN","PXRMMH",82,0)
 ... K FIEVAL(FINDING)
"RTN","PXRMMH",83,0)
 ... S FIEVAL(FINDING)=0
"RTN","PXRMMH",84,0)
 Q
"RTN","PXRMMH",85,0)
 ;
"RTN","PXRMMH",86,0)
 ;=======================================================================
"RTN","PXRMMH",87,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMMH",88,0)
 ;maintenance output.
"RTN","PXRMMH",89,0)
 N DATE,MHTEST,TEMP
"RTN","PXRMMH",90,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMMH",91,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMMH",92,0)
 S TEMP=TEMP_" Mental Health Instrument: "
"RTN","PXRMMH",93,0)
 S MHTEST=FIEVAL(FINDING,"TEST")
"RTN","PXRMMH",94,0)
 S TEMP=TEMP_MHTEST
"RTN","PXRMMH",95,0)
 ;If there is scoring information give it.
"RTN","PXRMMH",96,0)
 I $D(FIEVAL(FINDING,"SCNAME")) D
"RTN","PXRMMH",97,0)
 . S TEMP=TEMP_"; Scale name - "_FIEVAL(FINDING,"SCNAME")
"RTN","PXRMMH",98,0)
 . I $D(FIEVAL(FINDING,"VALUE")) S TEMP=TEMP_"; Raw score - "_FIEVAL(FINDING,"VALUE")
"RTN","PXRMMH",99,0)
 . I $D(FIEVAL(FINDING,"TSCORE")) S TEMP=TEMP_" Transformed score - "_FIEVAL(FINDING,"TSCORE")
"RTN","PXRMMH",100,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMMH",101,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMMH",102,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMMH",103,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMMH",104,0)
 S NLINES=NLINES+1
"RTN","PXRMMH",105,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMMH",106,0)
 I $D(PXRMDEV) D
"RTN","PXRMMH",107,0)
 . N UID
"RTN","PXRMMH",108,0)
 . S UID="MHTEST "_MHTEST
"RTN","PXRMMH",109,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMMH",110,0)
 Q
"RTN","PXRMMH",111,0)
 ;
"RTN","PXRMMH",112,0)
 ;=======================================================================
"RTN","PXRMMH",113,0)
SCHELP(MHIEN) ;Xecutable help for MH SCALE
"RTN","PXRMMH",114,0)
 N IND,JND,NUM,SCALE,TEMP,TEMP1
"RTN","PXRMMH",115,0)
 I MHIEN=0 D  Q
"RTN","PXRMMH",116,0)
 . S SCALE(1)="This is not a valid Mental Health finding, selecting an MH scale does"
"RTN","PXRMMH",117,0)
 . S SCALE(2)="not make sense"
"RTN","PXRMMH",118,0)
 . D EN^DDIOL(.SCALE)
"RTN","PXRMMH",119,0)
 S SCALE(1)="SCALE NUMBER  SCALE NAME"
"RTN","PXRMMH",120,0)
 S SCALE(2)="------------------------"
"RTN","PXRMMH",121,0)
 S IND=0
"RTN","PXRMMH",122,0)
 S JND=2
"RTN","PXRMMH",123,0)
 F  S IND=$O(^YTT(601,MHIEN,"S",IND)) Q:+IND=0  D
"RTN","PXRMMH",124,0)
 . S TEMP=^YTT(601,MHIEN,"S",IND,0)
"RTN","PXRMMH",125,0)
 . S JND=JND+1
"RTN","PXRMMH",126,0)
 . S TEMP1=$P(TEMP,U,1)
"RTN","PXRMMH",127,0)
 . S NUM=6-$L(TEMP1)
"RTN","PXRMMH",128,0)
 . S SCALE(JND)=$$INSCHR^PXRMEXLC(NUM," ")_TEMP1_"        "_$P(TEMP,U,2)
"RTN","PXRMMH",129,0)
 D EN^DDIOL(.SCALE)
"RTN","PXRMMH",130,0)
 Q
"RTN","PXRMMH",131,0)
 ;
"RTN","PXRMMH",132,0)
 ;=======================================================================
"RTN","PXRMMH",133,0)
SCHELPF ;Xecutable help for MH SCALE in 811.9 findings.
"RTN","PXRMMH",134,0)
 N FIND0,MHIEN
"RTN","PXRMMH",135,0)
 S FIND0=^PXD(811.9,DA(1),20,DA,0)
"RTN","PXRMMH",136,0)
 I FIND0["YTT(601" S MHIEN=$P(FIND0,";",1)
"RTN","PXRMMH",137,0)
 E  S MHIEN=0
"RTN","PXRMMH",138,0)
 D SCHELP(MHIEN)
"RTN","PXRMMH",139,0)
 Q
"RTN","PXRMMH",140,0)
 ;
"RTN","PXRMMH",141,0)
 ;=======================================================================
"RTN","PXRMMH",142,0)
SCHELPT ;Xecutable help for MH SCALE in 811.5 findings.
"RTN","PXRMMH",143,0)
 N MHIEN,TFIND0
"RTN","PXRMMH",144,0)
 S TFIND0=^PXRMD(811.5,DA(1),20,DA,0)
"RTN","PXRMMH",145,0)
 I TFIND0["YTT(601" S MHIEN=$P(TFIND0,";",1)
"RTN","PXRMMH",146,0)
 E  S MHIEN=0
"RTN","PXRMMH",147,0)
 D SCHELP(MHIEN)
"RTN","PXRMMH",148,0)
 Q
"RTN","PXRMMH",149,0)
 ;
"RTN","PXRMMH",150,0)
 ;=======================================================================
"RTN","PXRMMH",151,0)
VSCALE(FIND0) ;Make sure that mental health scale is valid.
"RTN","PXRMMH",152,0)
 ;Either the scale number or the scale name can be used.
"RTN","PXRMMH",153,0)
 N MHIEN,MHTEST
"RTN","PXRMMH",154,0)
 S MHTEST=$P(FIND0,U,1)
"RTN","PXRMMH",155,0)
 S MHIEN=$P(MHTEST,";",1)
"RTN","PXRMMH",156,0)
 I +X>0 D
"RTN","PXRMMH",157,0)
 . I '$D(^YTT(601,MHIEN,"S",X)) K X
"RTN","PXRMMH",158,0)
 E  D
"RTN","PXRMMH",159,0)
 . S SCALE=$O(^YTT(601,MHIEN,"S","C",X,""))
"RTN","PXRMMH",160,0)
 . I SCALE="" K X
"RTN","PXRMMH",161,0)
 Q
"RTN","PXRMMH",162,0)
 ;
"RTN","PXRMMH",163,0)
 ;=======================================================================
"RTN","PXRMMH",164,0)
VSCALEF ;Make sure that mental health scale is valid for a finding.
"RTN","PXRMMH",165,0)
 I X="" Q
"RTN","PXRMMH",166,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMMH",167,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMMH",168,0)
 ;Do not execute as part of exchange.
"RTN","PXRMMH",169,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMMH",170,0)
 N FIND0
"RTN","PXRMMH",171,0)
 S FIND0=^PXD(811.9,DA(1),20,DA,0)
"RTN","PXRMMH",172,0)
 D VSCALE(FIND0)
"RTN","PXRMMH",173,0)
 Q
"RTN","PXRMMH",174,0)
 ;
"RTN","PXRMMH",175,0)
 ;=======================================================================
"RTN","PXRMMH",176,0)
VSCALET ;Make sure that mental health scale is valid for a term finding.
"RTN","PXRMMH",177,0)
 I X="" Q
"RTN","PXRMMH",178,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMMH",179,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMMH",180,0)
 ;Do not execute as part of exchange.
"RTN","PXRMMH",181,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMMH",182,0)
 N TFIND0
"RTN","PXRMMH",183,0)
 S TFIND0=^PXRMD(811.5,DA(1),20,DA,0)
"RTN","PXRMMH",184,0)
 D VSCALE(TFIND0)
"RTN","PXRMMH",185,0)
 Q
"RTN","PXRMMH",186,0)
 ;
"RTN","PXRMMSG")
0^23^B1174055
"RTN","PXRMMSG",1,0)
PXRMMSG ; SLC/PKR - Routine for sending MailMan messages. ;08/03/2001
"RTN","PXRMMSG",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,7**;Jun 19, 2000
"RTN","PXRMMSG",3,0)
 ;
"RTN","PXRMMSG",4,0)
 ;======================================================================
"RTN","PXRMMSG",5,0)
SEND(XMSUB) ;Send a MailMan message to the mail group defined
"RTN","PXRMMSG",6,0)
 ;by the site and to the user. The text of the message is in
"RTN","PXRMMSG",7,0)
 ;^TMP("PXRMXMZ",$J,N,0), where the are N lines of text. The subject
"RTN","PXRMMSG",8,0)
 ;is the string XMSUB.
"RTN","PXRMMSG",9,0)
 N MGIEN,MGROUP,NL,REF,REMINDER,XMDUZ,XMY,XMZ
"RTN","PXRMMSG",10,0)
 ;
"RTN","PXRMMSG",11,0)
 ;If this is a test run write out the message.
"RTN","PXRMMSG",12,0)
 I $D(PXRMDEV) D
"RTN","PXRMMSG",13,0)
 . S REF="^TMP(""PXRMXMZ"",$J)"
"RTN","PXRMMSG",14,0)
 . D AWRITE^PXRMUTIL(REF)
"RTN","PXRMMSG",15,0)
 ;
"RTN","PXRMMSG",16,0)
 ;Make sure the subject does not exceed 64 characters.
"RTN","PXRMMSG",17,0)
 S XMUSB=$E(XMSUB,1,64)
"RTN","PXRMMSG",18,0)
 ;
"RTN","PXRMMSG",19,0)
 ;Make the sender the Postmaster.
"RTN","PXRMMSG",20,0)
 S XMDUZ=0.5
"RTN","PXRMMSG",21,0)
 ;
"RTN","PXRMMSG",22,0)
RETRY ;Get the message number.
"RTN","PXRMMSG",23,0)
 D XMZ^XMA2
"RTN","PXRMMSG",24,0)
 I XMZ<1 G RETRY
"RTN","PXRMMSG",25,0)
 ;
"RTN","PXRMMSG",26,0)
 ;Load the message
"RTN","PXRMMSG",27,0)
 M ^XMB(3.9,XMZ,2)=^TMP("PXRMXMZ",$J)
"RTN","PXRMMSG",28,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMMSG",29,0)
 S NL=$O(^XMB(3.9,XMZ,2,""),-1)
"RTN","PXRMMSG",30,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92^"_+NL_U_+NL_U_DT
"RTN","PXRMMSG",31,0)
 ;
"RTN","PXRMMSG",32,0)
 ;Send the message to the site defined mailgroup or the user if
"RTN","PXRMMSG",33,0)
 ;there is no mailgroup.
"RTN","PXRMMSG",34,0)
 S MGIEN=$G(^PXRM(800,1,"MGFE"))
"RTN","PXRMMSG",35,0)
 I MGIEN'="" D
"RTN","PXRMMSG",36,0)
 . S MGROUP="G."_$$GET1^DIQ(3.8,MGIEN,.01)
"RTN","PXRMMSG",37,0)
 . S XMY(MGROUP)=""
"RTN","PXRMMSG",38,0)
 E  S XMY(DUZ)=""
"RTN","PXRMMSG",39,0)
 D ENT1^XMD
"RTN","PXRMMSG",40,0)
 ;
"RTN","PXRMMSG",41,0)
 Q
"RTN","PXRMMSG",42,0)
 ;
"RTN","PXRMMST")
0^6^B51660558
"RTN","PXRMMST",1,0)
PXRMMST ; SLC/PKR - Routines for dealing with MST. ;01/25/2002
"RTN","PXRMMST",2,0)
 ;;1.5;CLINICAL REMINDERS;**7**;Jun 19, 2000
"RTN","PXRMMST",3,0)
 ;
"RTN","PXRMMST",4,0)
 ;=======================================================================
"RTN","PXRMMST",5,0)
GSYINFO(TYPE) ;Return the Clinical Reminders MST synchronization date
"RTN","PXRMMST",6,0)
 ;and number of updates made. The format is an up-arrow delimited
"RTN","PXRMMST",7,0)
 ;string. The first piece is the date and the second is the number
"RTN","PXRMMST",8,0)
 ;of updates. If TYPE is "I" then the data for the initial
"RTN","PXRMMST",9,0)
 ;synchronization is returned. For any other value the data for the
"RTN","PXRMMST",10,0)
 ;last daily synchronization is returned.
"RTN","PXRMMST",11,0)
 I $G(TYPE)="I" Q $P($G(^PXRM(800,1,"MST")),U,1,2) Q
"RTN","PXRMMST",12,0)
 Q $P($G(^PXRM(800,1,"MST")),U,3,4)
"RTN","PXRMMST",13,0)
 ;
"RTN","PXRMMST",14,0)
 ;=======================================================================
"RTN","PXRMMST",15,0)
QUE ;Queue the MST synchronization job.
"RTN","PXRMMST",16,0)
 N DIR,DTOUT,DUOUT,MINDT,SDTIME,STIME,X,Y
"RTN","PXRMMST",17,0)
 S MINDT=$$NOW^XLFDT
"RTN","PXRMMST",18,0)
 W !,"Queue the Clinical Reminders MST synchronization."
"RTN","PXRMMST",19,0)
 S DIR("A",1)="Enter the date and time you want the job to start."
"RTN","PXRMMST",20,0)
 S DIR("A")="It must be after "_$$FMTE^XLFDT(MINDT,"5Z")_" "
"RTN","PXRMMST",21,0)
 S DIR(0)="DAU"_U_MINDT_"::RSX"
"RTN","PXRMMST",22,0)
 D ^DIR
"RTN","PXRMMST",23,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMMST",24,0)
 S SDTIME=Y
"RTN","PXRMMST",25,0)
 K DIR
"RTN","PXRMMST",26,0)
 S DIR(0)="YA"
"RTN","PXRMMST",27,0)
 S DIR("A")="Do you want to run the MST synchronization at the same time every day? "
"RTN","PXRMMST",28,0)
 S DIR("B")="Y"
"RTN","PXRMMST",29,0)
 D ^DIR
"RTN","PXRMMST",30,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMMST",31,0)
 I Y S STIME="1."_$P(SDTIME,".",2)
"RTN","PXRMMST",32,0)
 E  S STIME=-1
"RTN","PXRMMST",33,0)
 ;
"RTN","PXRMMST",34,0)
 ;Put the task into the queue.
"RTN","PXRMMST",35,0)
 K ZTSAVE
"RTN","PXRMMST",36,0)
 ;S ZTSAVE("START")=SDTIME
"RTN","PXRMMST",37,0)
 S ZTSAVE("STIME")=STIME
"RTN","PXRMMST",38,0)
 S ZTRTN="SYNCH^PXRMMST"
"RTN","PXRMMST",39,0)
 S ZTDESC="Clinical Reminders MST synchronization job"
"RTN","PXRMMST",40,0)
 S ZTDTH=SDTIME
"RTN","PXRMMST",41,0)
 S ZTIO=""
"RTN","PXRMMST",42,0)
 D ^%ZTLOAD
"RTN","PXRMMST",43,0)
 W !,"Task number ",ZTSK," queued."
"RTN","PXRMMST",44,0)
 Q
"RTN","PXRMMST",45,0)
 ;
"RTN","PXRMMST",46,0)
 ;=======================================================================
"RTN","PXRMMST",47,0)
STATUS(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for checking a
"RTN","PXRMMST",48,0)
 ;patient's MST status.
"RTN","PXRMMST",49,0)
 N IEN,TEMP
"RTN","PXRMMST",50,0)
 S TEMP=$$GETSTAT^DGMSTAPI(DFN)
"RTN","PXRMMST",51,0)
 S IEN=$P(TEMP,U,1)
"RTN","PXRMMST",52,0)
 I IEN=-1 D  Q
"RTN","PXRMMST",53,0)
 . S TEST=0
"RTN","PXRMMST",54,0)
 . S VALUE=""
"RTN","PXRMMST",55,0)
 . S DATE=DT
"RTN","PXRMMST",56,0)
 I IEN=0 D  Q
"RTN","PXRMMST",57,0)
 . S TEST=0
"RTN","PXRMMST",58,0)
 . S VALUE=$P(TEMP,U,2)
"RTN","PXRMMST",59,0)
 . S DATE=$P(TEMP,U,3)
"RTN","PXRMMST",60,0)
 . S TEXT="No MST status found"
"RTN","PXRMMST",61,0)
 ;If we get to here then a valid entry was found.
"RTN","PXRMMST",62,0)
 S TEST=1
"RTN","PXRMMST",63,0)
 S VALUE=$P(TEMP,U,2)
"RTN","PXRMMST",64,0)
 S DATE=$P(TEMP,U,3)
"RTN","PXRMMST",65,0)
 Q
"RTN","PXRMMST",66,0)
 ;
"RTN","PXRMMST",67,0)
 ;=======================================================================
"RTN","PXRMMST",68,0)
STCODE(TERM) ;Return the MST status code based on the term name.
"RTN","PXRMMST",69,0)
 N STCODE
"RTN","PXRMMST",70,0)
 S STCODE=$S(TERM="MST DECLINES REPORT":"D",TERM="MST NEGATIVE REPORT":"N",TERM="MST POSITIVE REPORT":"Y",1:"U")
"RTN","PXRMMST",71,0)
 Q STCODE
"RTN","PXRMMST",72,0)
 ;
"RTN","PXRMMST",73,0)
 ;=======================================================================
"RTN","PXRMMST",74,0)
SYNCH ;Synchronize the MST history file.
"RTN","PXRMMST",75,0)
 N INID,LTIME,NUMUPD,START,TEMP
"RTN","PXRMMST",76,0)
 ;STIME is passed from QUE via ZTSAVE.
"RTN","PXRMMST",77,0)
 D UPDSTAT(.NUMUPD,.START)
"RTN","PXRMMST",78,0)
 ;If the initial sync data has been stored then update the daily
"RTN","PXRMMST",79,0)
 ;data.
"RTN","PXRMMST",80,0)
 S INID=+$P($G(^PXRM(800,1,"MST")),U,1)
"RTN","PXRMMST",81,0)
 I INID>0 D
"RTN","PXRMMST",82,0)
 . S $P(^PXRM(800,1,"MST"),U,3)=$$NOW^XLFDT
"RTN","PXRMMST",83,0)
 . S $P(^PXRM(800,1,"MST"),U,4)=NUMUPD
"RTN","PXRMMST",84,0)
 . S $P(^PXRM(800,1,"MST"),U,6)=START
"RTN","PXRMMST",85,0)
 E  D
"RTN","PXRMMST",86,0)
 . S $P(^PXRM(800,1,"MST"),U,1)=$$NOW^XLFDT
"RTN","PXRMMST",87,0)
 . S $P(^PXRM(800,1,"MST"),U,2)=NUMUPD
"RTN","PXRMMST",88,0)
 . S $P(^PXRM(800,1,"MST"),U,5)=START
"RTN","PXRMMST",89,0)
 ;
"RTN","PXRMMST",90,0)
 ;Cleanup the task stuff.
"RTN","PXRMMST",91,0)
 I STIME=-1 S ZTREQ="@" Q
"RTN","PXRMMST",92,0)
 E  D
"RTN","PXRMMST",93,0)
 . S TEMP=$G(^PXRM(800,1,"MST"))
"RTN","PXRMMST",94,0)
 . S LTIME=+$P(TEMP,U,3)
"RTN","PXRMMST",95,0)
 . I LTIME=0 S LTIME=+$P(TEMP,U,1)
"RTN","PXRMMST",96,0)
 .;Adding STIME sets the new starting time at exactly one day following
"RTN","PXRMMST",97,0)
 .;the previous starting time.
"RTN","PXRMMST",98,0)
 . S $P(ZTREQ,U,1)=$P(LTIME,".",1)+STIME
"RTN","PXRMMST",99,0)
 Q
"RTN","PXRMMST",100,0)
 ;
"RTN","PXRMMST",101,0)
 ;=======================================================================
"RTN","PXRMMST",102,0)
SYNREP ;Provide a report of the synchronization data.
"RTN","PXRMMST",103,0)
 N EDTIME,EITIME,IDATE,LDATE,NIUPD,NLUPD,TEMP
"RTN","PXRMMST",104,0)
 S TEMP=$G(^PXRM(800,1,"MST"))
"RTN","PXRMMST",105,0)
 S IDATE=$$FMTE^XLFDT($P(TEMP,U,1))
"RTN","PXRMMST",106,0)
 I IDATE=0 S IDATE="none"
"RTN","PXRMMST",107,0)
 S NIUPD=$P(TEMP,U,2)
"RTN","PXRMMST",108,0)
 S EITIME=$$FMDIFF^XLFDT($P(TEMP,U,1),$P(TEMP,U,5),2)
"RTN","PXRMMST",109,0)
 S LDATE=$$FMTE^XLFDT($P(TEMP,U,3))
"RTN","PXRMMST",110,0)
 I LDATE=0 S LDATE="none"
"RTN","PXRMMST",111,0)
 S NLUPD=$P(TEMP,U,4)
"RTN","PXRMMST",112,0)
 S EDTIME=$$FMDIFF^XLFDT($P(TEMP,U,3),$P(TEMP,U,6),2)
"RTN","PXRMMST",113,0)
 W !!,"Clinical Reminders MST Synchronization Report"
"RTN","PXRMMST",114,0)
 W !,"---------------------------------------------"
"RTN","PXRMMST",115,0)
 W !,"Initial synchronization date: ",IDATE
"RTN","PXRMMST",116,0)
 W !,"Number of updates made: ",NIUPD
"RTN","PXRMMST",117,0)
 I EITIME>60 D
"RTN","PXRMMST",118,0)
 . S EITIME=$$FMDIFF^XLFDT($P(TEMP,U,1),$P(TEMP,U,5),3)
"RTN","PXRMMST",119,0)
 . W !,"Elapsed time: ",EITIME
"RTN","PXRMMST",120,0)
 E  W !,"Elapsed time: ",EITIME," secs"
"RTN","PXRMMST",121,0)
 W !!,"Last daily synchronization date: ",LDATE
"RTN","PXRMMST",122,0)
 W !,"Number of updates made: ",NLUPD
"RTN","PXRMMST",123,0)
 I EDTIME>60 D
"RTN","PXRMMST",124,0)
 . S EDTIME=$$FMDIFF^XLFDT($P(TEMP,U,3),$P(TEMP,U,6),3)
"RTN","PXRMMST",125,0)
 . W !,"Elapsed time: ",EDTIME
"RTN","PXRMMST",126,0)
 E  W !,"Elapsed time: ",EDTIME," secs"
"RTN","PXRMMST",127,0)
 Q
"RTN","PXRMMST",128,0)
 ;
"RTN","PXRMMST",129,0)
 ;=======================================================================
"RTN","PXRMMST",130,0)
UPDSTAT(NUMUPD,START) ;Update the MST history file using term mappings.
"RTN","PXRMMST",131,0)
 N DFN,DATE,FIEVAL,FINDING,INDEX,MSTDATE,PROV,STAT,STCODE,SOURCE
"RTN","PXRMMST",132,0)
 N TEMP,TERM,TERMIEN,VFIEN,VPRVIEN
"RTN","PXRMMST",133,0)
 ;Set the start time for the synchronization.
"RTN","PXRMMST",134,0)
 S START=$$NOW^XLFDT
"RTN","PXRMMST",135,0)
 S INDEX="PXRM_MST_LIST"
"RTN","PXRMMST",136,0)
 S NUMUPD=0
"RTN","PXRMMST",137,0)
 ;Search all the MST terms to build patient lists.
"RTN","PXRMMST",138,0)
 F TERM="MST DECLINES REPORT","MST NEGATIVE REPORT","MST POSITIVE REPORT" D
"RTN","PXRMMST",139,0)
 . K ^TMP(INDEX,$J)
"RTN","PXRMMST",140,0)
 .;The status code depends on the term name.
"RTN","PXRMMST",141,0)
 . S STCODE=$$STCODE(TERM)
"RTN","PXRMMST",142,0)
 . S TERMIEN=$O(^PXRMD(811.5,"B",TERM,""))
"RTN","PXRMMST",143,0)
 . D PATLIST^PXRMTERM(INDEX,TERMIEN,1,"","",.FIEVAL)
"RTN","PXRMMST",144,0)
 . S DFN=0
"RTN","PXRMMST",145,0)
 . F  S DFN=+$O(^TMP(INDEX,$J,DFN)) Q:DFN=0  D
"RTN","PXRMMST",146,0)
 .. S DATE=$O(^TMP(INDEX,$J,DFN,""))
"RTN","PXRMMST",147,0)
 .. S STAT=$$GETSTAT^DGMSTAPI(DFN)
"RTN","PXRMMST",148,0)
 .. I $P(STAT,U,1) S MSTDATE=$P(STAT,U,3)
"RTN","PXRMMST",149,0)
 .. E  S MSTDATE=0
"RTN","PXRMMST",150,0)
 .. I DATE>MSTDATE D
"RTN","PXRMMST",151,0)
 ...;Determine the provider.
"RTN","PXRMMST",152,0)
 ... S FINDING=$O(^TMP(INDEX,$J,DFN,DATE,""))
"RTN","PXRMMST",153,0)
 ... S SOURCE=$$ATTVALUE^PXRMUTIL(^TMP(INDEX,$J,DFN,DATE,FINDING),"SOURCE",U,"~")
"RTN","PXRMMST",154,0)
 ... S TEMP="^"_$P(SOURCE,";",2)_$P(SOURCE,";",1)_",12)"
"RTN","PXRMMST",155,0)
 ... S PROV=$P($G(@TEMP),U,4)
"RTN","PXRMMST",156,0)
 ... I PROV="" D
"RTN","PXRMMST",157,0)
 .... S VISIT=$$ATTVALUE^PXRMUTIL(^TMP(INDEX,$J,DFN,DATE,FINDING),"VISIT",U,"~")
"RTN","PXRMMST",158,0)
 .... S VPRVIEN=+$O(^AUPNVPRV("AD",VISIT,""))
"RTN","PXRMMST",159,0)
 .... I VPRVIEN>0 S PROV=$P(^AUPNVPRV(VPRVIEN,0),U,1)
"RTN","PXRMMST",160,0)
 ... S NUMUPD=NUMUPD+1
"RTN","PXRMMST",161,0)
 ... S TEMP=$$NEWSTAT^DGMSTAPI(DFN,STCODE,DATE,PROV)
"RTN","PXRMMST",162,0)
 ... I +TEMP=-1 D
"RTN","PXRMMST",163,0)
 .... N FN,GBL,IEN,NAME,TARGET,XMSUB,VADM
"RTN","PXRMMST",164,0)
 .... K ^TMP("PXRMXMZ",$J)
"RTN","PXRMMST",165,0)
 .... S XMSUB="CLINICAL REMINDER MST UPDATE PROBLEM"
"RTN","PXRMMST",166,0)
 .... S ^TMP("PXRMXMZ",$J,1,0)="NEWSTAT^DGMSTAPI returned the following error:"
"RTN","PXRMMST",167,0)
 .... S ^TMP("PXRMXMZ",$J,2,0)=$P(TEMP,U,2)
"RTN","PXRMMST",168,0)
 .... S ^TMP("PXRMXMZ",$J,3,0)="The following data was passed to NEWSTAT^DGMSTAPI"
"RTN","PXRMMST",169,0)
 .... S ^TMP("PXRMXMZ",$J,4,0)="DFN= "_DFN
"RTN","PXRMMST",170,0)
 .... S ^TMP("PXRMXMZ",$J,5,0)="Status code= "_STCODE
"RTN","PXRMMST",171,0)
 .... S ^TMP("PXRMXMZ",$J,6,0)="Date= "_DATE
"RTN","PXRMMST",172,0)
 .... S ^TMP("PXRMXMZ",$J,7,0)="Provider= "_PROV
"RTN","PXRMMST",173,0)
 .... S ^TMP("PXRMXMZ",$J,8,0)="Data source= "_SOURCE
"RTN","PXRMMST",174,0)
 .... S ^TMP("PXRMXMZ",$J,9,0)="This corresponds to the following:"
"RTN","PXRMMST",175,0)
 .... D DEM^VADPT
"RTN","PXRMMST",176,0)
 .... S ^TMP("PXRMXMZ",$J,10,0)="Patient= "_VADM(1)
"RTN","PXRMMST",177,0)
 .... S ^TMP("PXRMXMZ",$J,11,0)="SSN= "_$P(VADM(2),U,2)
"RTN","PXRMMST",178,0)
 .... S ^TMP("PXRMXMZ",$J,12,0)="MST Status= "_$$EXTERNAL^DILFD(29.11,3,"",STCODE)
"RTN","PXRMMST",179,0)
 .... S ^TMP("PXRMXMZ",$J,13,0)="Date= "_$$FMTE^XLFDT(DATE,"5Z")
"RTN","PXRMMST",180,0)
 .... I PROV="" S TEMP="Unknown"
"RTN","PXRMMST",181,0)
 .... E  S TEMP=$$GET1^DIQ(200,PROV,.01,"","","")
"RTN","PXRMMST",182,0)
 .... I TEMP="" S TEMP="Unknown"
"RTN","PXRMMST",183,0)
 .... S ^TMP("PXRMXMZ",$J,14,0)="Provider= "_TEMP
"RTN","PXRMMST",184,0)
 .... S GBL="^"_$P($P(SOURCE,";",2),"(",1)
"RTN","PXRMMST",185,0)
 .... S TEMP=GBL_"(0)"
"RTN","PXRMMST",186,0)
 .... S FN=+$P(@TEMP,U,2)
"RTN","PXRMMST",187,0)
 .... S TEMP=GBL_"("_$P(SOURCE,";",1)_",0)"
"RTN","PXRMMST",188,0)
 .... S TEMP=$G(@TEMP)
"RTN","PXRMMST",189,0)
 .... S IEN=$P(TEMP,U,1)
"RTN","PXRMMST",190,0)
 .... D FIELD^DID(FN,.01,"N","POINTER","TARGET")
"RTN","PXRMMST",191,0)
 .... S GBL="^"_$P(TARGET("POINTER"),"(",1)
"RTN","PXRMMST",192,0)
 .... S TEMP=GBL_"(0)"
"RTN","PXRMMST",193,0)
 .... S FN=$P(@TEMP,U,1)
"RTN","PXRMMST",194,0)
 .... S TEMP=GBL_"("_IEN_",0)"
"RTN","PXRMMST",195,0)
 .... S NAME=$P(@TEMP,U,1)
"RTN","PXRMMST",196,0)
 .... S ^TMP("PXRMXMZ",$J,14,0)="Data type= "_FN
"RTN","PXRMMST",197,0)
 .... S ^TMP("PXRMXMZ",$J,15,0)="Name= "_NAME
"RTN","PXRMMST",198,0)
 .... D SEND^PXRMMSG(XMSUB)
"RTN","PXRMMST",199,0)
 K ^TMP(INDEX,$J)
"RTN","PXRMMST",200,0)
 Q
"RTN","PXRMMST",201,0)
 ;
"RTN","PXRMP7I")
0^24^B5101215
"RTN","PXRMP7I",1,0)
PXRMP7I ; SLC/PKR - Patch 7 inits. ;01/15/2002
"RTN","PXRMP7I",2,0)
 ;;1.5;CLINICAL REMINDERS;**7**;Jun 19, 2000
"RTN","PXRMP7I",3,0)
 ;
"RTN","PXRMP7I",4,0)
 Q
"RTN","PXRMP7I",5,0)
 ;===============================================================
"RTN","PXRMP7I",6,0)
DELDD N DIU
"RTN","PXRMP7I",7,0)
 ;Delete the data dictionaries that are being updated, leave the data.
"RTN","PXRMP7I",8,0)
 S DIU(0)=""
"RTN","PXRMP7I",9,0)
 F DIU=800,811.6 D EN^DIU2
"RTN","PXRMP7I",10,0)
 Q
"RTN","PXRMP7I",11,0)
 ;
"RTN","PXRMP7I",12,0)
 ;===============================================================
"RTN","PXRMP7I",13,0)
DELEI ;If the Exchange File entry already exists delete it.
"RTN","PXRMP7I",14,0)
 N IND,LIST,LUVALUE,NUM,TEXT
"RTN","PXRMP7I",15,0)
 S LUVALUE(1)="VA-MST SCREENING"
"RTN","PXRMP7I",16,0)
 D FIND^DIC(811.8,"","","U",.LUVALUE,"","","","","LIST")
"RTN","PXRMP7I",17,0)
 S NUM=$P(LIST("DILIST",0),U,1)
"RTN","PXRMP7I",18,0)
 I NUM=0 Q
"RTN","PXRMP7I",19,0)
 S TEXT="Deleting Exchange File entry "_LUVALUE(1)
"RTN","PXRMP7I",20,0)
 F IND=1:1:NUM D
"RTN","PXRMP7I",21,0)
 . N DA,DIK
"RTN","PXRMP7I",22,0)
 . S DIK="^PXD(811.8,"
"RTN","PXRMP7I",23,0)
 . S DA=LIST("DILIST",2,IND)
"RTN","PXRMP7I",24,0)
 . D BMES^XPDUTL(TEXT)
"RTN","PXRMP7I",25,0)
 . D ^DIK
"RTN","PXRMP7I",26,0)
 Q
"RTN","PXRMP7I",27,0)
 ;
"RTN","PXRMP7I",28,0)
 ;===============================================================
"RTN","PXRMP7I",29,0)
MST ;Change MST dialogs to VA- and National
"RTN","PXRMP7I",30,0)
 N NAME,PXRMINST,TEXT
"RTN","PXRMP7I",31,0)
 S PXRMINST=1
"RTN","PXRMP7I",32,0)
 S TEXT="Renaming existing MST REMINDER DIALOGS:"
"RTN","PXRMP7I",33,0)
 D BMES^XPDUTL(TEXT)
"RTN","PXRMP7I",34,0)
 S NAME="TEXT MST STATUS QUESTIONS" D VACHG(NAME)
"RTN","PXRMP7I",35,0)
 S NAME="HF MST NO" D VACHG(NAME)
"RTN","PXRMP7I",36,0)
 S NAME="HF MST YES" D VACHG(NAME)
"RTN","PXRMP7I",37,0)
 S NAME="HF PATIENT REFUSED (MST)" D VACHG(NAME)
"RTN","PXRMP7I",38,0)
 S NAME="TEXT MST SERVICES" D VACHG(NAME)
"RTN","PXRMP7I",39,0)
 Q
"RTN","PXRMP7I",40,0)
 ;===============================================================
"RTN","PXRMP7I",41,0)
PRE ;Pre-inits
"RTN","PXRMP7I",42,0)
 D DELEI
"RTN","PXRMP7I",43,0)
 D DELDD
"RTN","PXRMP7I",44,0)
 D MST
"RTN","PXRMP7I",45,0)
 Q
"RTN","PXRMP7I",46,0)
 ;
"RTN","PXRMP7I",47,0)
 ;===============================================================
"RTN","PXRMP7I",48,0)
POST ;Post-inits
"RTN","PXRMP7I",49,0)
 D SMEXINS
"RTN","PXRMP7I",50,0)
 Q
"RTN","PXRMP7I",51,0)
 ;
"RTN","PXRMP7I",52,0)
 ;===============================================================
"RTN","PXRMP7I",53,0)
SMEXINS ;Silent mode install.
"RTN","PXRMP7I",54,0)
 N IEN,LUVALUE
"RTN","PXRMP7I",55,0)
 S LUVALUE(1)="VA-MST SCREENING"
"RTN","PXRMP7I",56,0)
 S LUVALUE(2)="01/15/2002@08:55:40"
"RTN","PXRMP7I",57,0)
 S IEN=+$$FIND1^DIC(811.8,"","KU",.LUVALUE)
"RTN","PXRMP7I",58,0)
 I IEN'=0 D
"RTN","PXRMP7I",59,0)
 . N TEXT
"RTN","PXRMP7I",60,0)
 . S TEXT="Installing reminder "_LUVALUE(1)
"RTN","PXRMP7I",61,0)
 . D BMES^XPDUTL(TEXT)
"RTN","PXRMP7I",62,0)
 . D INSTALL^PXRMEXSI(IEN)
"RTN","PXRMP7I",63,0)
 Q
"RTN","PXRMP7I",64,0)
 ;
"RTN","PXRMP7I",65,0)
 ;===============================================================
"RTN","PXRMP7I",66,0)
VACHG(OLD) ;Rename dialogs and change to national
"RTN","PXRMP7I",67,0)
 N DA,DIE,DR,NEW,SUB,X
"RTN","PXRMP7I",68,0)
 S NEW="VA-"_OLD,STATUS="NATIONAL"
"RTN","PXRMP7I",69,0)
 ;Quit if new name already defined
"RTN","PXRMP7I",70,0)
 S SUB=$O(^PXRMD(801.41,"B",NEW,"")) Q:SUB
"RTN","PXRMP7I",71,0)
 ;Quit if old name not defined
"RTN","PXRMP7I",72,0)
 S SUB=$O(^PXRMD(801.41,"B",OLD,"")) Q:'SUB
"RTN","PXRMP7I",73,0)
 ;Change name
"RTN","PXRMP7I",74,0)
 S DIE="^PXRMD(801.41,",DR=".01///^S X=NEW",DA=SUB
"RTN","PXRMP7I",75,0)
 D ^DIE
"RTN","PXRMP7I",76,0)
 ;Status becomes national
"RTN","PXRMP7I",77,0)
 S DIE="^PXRMD(801.41,",DR="100///^S X=STATUS",DA=SUB
"RTN","PXRMP7I",78,0)
 D ^DIE
"RTN","PXRMP7I",79,0)
 ;Message
"RTN","PXRMP7I",80,0)
 S TEXT="New name: "_NEW
"RTN","PXRMP7I",81,0)
 D BMES^XPDUTL(TEXT)
"RTN","PXRMP7I",82,0)
 Q
"RTN","PXRMPDEM")
0^32^B830500
"RTN","PXRMPDEM",1,0)
PXRMPDEM ; SLC/PKR - Computed findings for patient demographics. ;11/14/2001
"RTN","PXRMPDEM",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,7**;Jun 19, 2000
"RTN","PXRMPDEM",3,0)
 ;
"RTN","PXRMPDEM",4,0)
 ;=======================================================================
"RTN","PXRMPDEM",5,0)
DOB(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for checking a patient's
"RTN","PXRMPDEM",6,0)
 ;date of birth.
"RTN","PXRMPDEM",7,0)
 S DATE=DT
"RTN","PXRMPDEM",8,0)
 I PXRMDOB="" S TEST=0
"RTN","PXRMPDEM",9,0)
 E  D
"RTN","PXRMPDEM",10,0)
 . S TEST=1
"RTN","PXRMPDEM",11,0)
 . S VALUE=PXRMDOB
"RTN","PXRMPDEM",12,0)
 Q
"RTN","PXRMPDEM",13,0)
 ;
"RTN","PXRMPDEM",14,0)
 ;=======================================================================
"RTN","PXRMPDEM",15,0)
DOD(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for checking a patient's
"RTN","PXRMPDEM",16,0)
 ;date of death.
"RTN","PXRMPDEM",17,0)
 S DATE=DT
"RTN","PXRMPDEM",18,0)
 I PXRMDOD="" S TEST=0
"RTN","PXRMPDEM",19,0)
 E  D
"RTN","PXRMPDEM",20,0)
 . S TEST=1
"RTN","PXRMPDEM",21,0)
 . S VALUE=PXRMDOD
"RTN","PXRMPDEM",22,0)
 Q
"RTN","PXRMPDEM",23,0)
 ;
"RTN","PXRMPDEM",24,0)
 ;=======================================================================
"RTN","PXRMPDEM",25,0)
RACE(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for checking a patient's race.
"RTN","PXRMPDEM",26,0)
 S DATE=DT
"RTN","PXRMPDEM",27,0)
 I PXRMRACE="" S TEST=0
"RTN","PXRMPDEM",28,0)
 E  D
"RTN","PXRMPDEM",29,0)
 . S TEST=1
"RTN","PXRMPDEM",30,0)
 . S VALUE=PXRMRACE
"RTN","PXRMPDEM",31,0)
 Q
"RTN","PXRMPDEM",32,0)
 ;
"RTN","PXRMPDEM",33,0)
 ;=======================================================================
"RTN","PXRMPDEM",34,0)
VETERAN(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for checking if a
"RTN","PXRMPDEM",35,0)
 ;patient is a veteran.
"RTN","PXRMPDEM",36,0)
 N VAEL
"RTN","PXRMPDEM",37,0)
 S DATE=DT
"RTN","PXRMPDEM",38,0)
 D ELIG^VADPT
"RTN","PXRMPDEM",39,0)
 S TEST=VAEL(4)
"RTN","PXRMPDEM",40,0)
 S VALUE=""
"RTN","PXRMPDEM",41,0)
 Q
"RTN","PXRMPDEM",42,0)
 ;
"RTN","PXRMRPCC")
0^2^B19989140
"RTN","PXRMRPCC",1,0)
PXRMRPCC ;SLC/PJH - PXRM REMINDER DIALOG ;12/12/2001
"RTN","PXRMRPCC",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,7**;Jun 19, 2000
"RTN","PXRMRPCC",3,0)
 ;
"RTN","PXRMRPCC",4,0)
ACTIVE(ORY,ORREM) ;Check if active dialog exist for reminders
"RTN","PXRMRPCC",5,0)
 ;
"RTN","PXRMRPCC",6,0)
 ; input parameter ORREM is array of reminder ien [.01#811.9]
"RTN","PXRMRPCC",7,0)
 N DDIS,DIEN,OCNT,RIEN,RSTA
"RTN","PXRMRPCC",8,0)
 S OCNT=0,RIEN=0
"RTN","PXRMRPCC",9,0)
 ;Get reminder ien from array
"RTN","PXRMRPCC",10,0)
 F  S RIEN=$O(ORREM(RIEN)) Q:'RIEN  D
"RTN","PXRMRPCC",11,0)
 .;Dialog ien for reminder
"RTN","PXRMRPCC",12,0)
 .S DIEN=$P($G(^PXD(811.9,RIEN,51)),U),RSTA=0
"RTN","PXRMRPCC",13,0)
 .;Dialog status
"RTN","PXRMRPCC",14,0)
 .I DIEN S DDIS=$P($G(^PXRMD(801.41,DIEN,0)),U,3)
"RTN","PXRMRPCC",15,0)
 .;If dialog and dialog not disabled
"RTN","PXRMRPCC",16,0)
 .I DIEN,DDIS="" S RSTA=1
"RTN","PXRMRPCC",17,0)
 .;Return reminder and if active dialog exists
"RTN","PXRMRPCC",18,0)
 .S OCNT=OCNT+1,ORY(OCNT)=RIEN_U_RSTA
"RTN","PXRMRPCC",19,0)
 Q
"RTN","PXRMRPCC",20,0)
 ;
"RTN","PXRMRPCC",21,0)
 ;
"RTN","PXRMRPCC",22,0)
DIALOG(ORY,ORREM) ;Load reminder dialog associated with the reminder
"RTN","PXRMRPCC",23,0)
 ;
"RTN","PXRMRPCC",24,0)
 ; input parameter ORREM - reminder ien [.01,#811.9]
"RTN","PXRMRPCC",25,0)
 ;
"RTN","PXRMRPCC",26,0)
 N DATA,DIEN
"RTN","PXRMRPCC",27,0)
 S DIEN=$G(^PXD(811.9,ORREM,51))
"RTN","PXRMRPCC",28,0)
 ;
"RTN","PXRMRPCC",29,0)
 ;Quit if no dialog for this reminder
"RTN","PXRMRPCC",30,0)
 I 'DIEN S ORY(1)="-1^no dialog for this reminder" Q
"RTN","PXRMRPCC",31,0)
 ;
"RTN","PXRMRPCC",32,0)
 ;Check if a reminder dialog and enabled
"RTN","PXRMRPCC",33,0)
 S DATA=$G(^PXRMD(801.41,DIEN,0))
"RTN","PXRMRPCC",34,0)
 ;
"RTN","PXRMRPCC",35,0)
 I $P(DATA,U,4)'="R" S ORY(1)="-1^reminder dialog invalid" Q
"RTN","PXRMRPCC",36,0)
 ;
"RTN","PXRMRPCC",37,0)
 I $P(DATA,U,3) S ORY(1)="-1^reminder dialog disabled" Q
"RTN","PXRMRPCC",38,0)
 ;
"RTN","PXRMRPCC",39,0)
 ;Load dialog lines into local array
"RTN","PXRMRPCC",40,0)
 D LOAD^PXRMDLL(DIEN)
"RTN","PXRMRPCC",41,0)
 Q
"RTN","PXRMRPCC",42,0)
 ;
"RTN","PXRMRPCC",43,0)
HDR(ORY,ORLOC) ;Progress Note Header by location/service/user
"RTN","PXRMRPCC",44,0)
 N ORSRV,PASS
"RTN","PXRMRPCC",45,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","PXRMRPCC",46,0)
 S PASS=DUZ_";VA(200,"
"RTN","PXRMRPCC",47,0)
 I +$G(ORLOC) S PASS=PASS_"^LOC.`"_ORLOC
"RTN","PXRMRPCC",48,0)
 I ORSRV S PASS=PASS_"^SRV.`"_+$G(ORSRV)
"RTN","PXRMRPCC",49,0)
 S ORY=$$GET^XPAR(PASS_"^DIV^SYS^PKG","PXRM PROGRESS NOTE HEADERS",1,"Q")
"RTN","PXRMRPCC",50,0)
 Q
"RTN","PXRMRPCC",51,0)
 ;
"RTN","PXRMRPCC",52,0)
PROMPT(ORY,ORDLG,ORDCUR,ORFTYP) ;Load additional prompts for a dialog element
"RTN","PXRMRPCC",53,0)
 ;
"RTN","PXRMRPCC",54,0)
 ; input parameters
"RTN","PXRMRPCC",55,0)
 ;
"RTN","PXRMRPCC",56,0)
 ; ORDLG  - dialog element ien [.01,#801.41]
"RTN","PXRMRPCC",57,0)
 ; ORDCUR - 0 = current, 1 = Historical for taxonomies only
"RTN","PXRMRPCC",58,0)
 ; ORFTYP - finding type (CPT/POV) for taxonomies only
"RTN","PXRMRPCC",59,0)
 ;
"RTN","PXRMRPCC",60,0)
 ; These fields can be found in the output array of DIALOG^PXRMRPCC
"RTN","PXRMRPCC",61,0)
 ;
"RTN","PXRMRPCC",62,0)
 D LOAD^PXRMDLLA(ORDLG,ORDCUR,$G(ORFTYP))
"RTN","PXRMRPCC",63,0)
 Q 
"RTN","PXRMRPCC",64,0)
 ;
"RTN","PXRMRPCC",65,0)
RES(ORY,ORREM) ; Reminder Resources/Inquiry
"RTN","PXRMRPCC",66,0)
 ;
"RTN","PXRMRPCC",67,0)
 ; input parameter ORREM - reminder ien [.01,#811.9]
"RTN","PXRMRPCC",68,0)
 ;
"RTN","PXRMRPCC",69,0)
 D REMVAR^PXRMINQ(.ORY,ORREM)
"RTN","PXRMRPCC",70,0)
 Q
"RTN","PXRMRPCC",71,0)
 ;
"RTN","PXRMRPCC",72,0)
MH(ORY,OTEST) ; Mental Health dialog
"RTN","PXRMRPCC",73,0)
 ;
"RTN","PXRMRPCC",74,0)
 ; Input mental health instrument NAME
"RTN","PXRMRPCC",75,0)
 ;
"RTN","PXRMRPCC",76,0)
 N YS,ARRAY S YS("CODE")=OTEST D SHOWALL^YTAPI3(.ARRAY,.YS) ; DBIA 2895
"RTN","PXRMRPCC",77,0)
 ;
"RTN","PXRMRPCC",78,0)
 N FNODE,FSUB,IC,NODE,OCNT,SUB
"RTN","PXRMRPCC",79,0)
 S SUB="ARRAY",OCNT=0
"RTN","PXRMRPCC",80,0)
 F  S SUB=$Q(@SUB) Q:SUB=""  D
"RTN","PXRMRPCC",81,0)
 .S FSUB=$P($P(SUB,"(",2),")"),FNODE=""
"RTN","PXRMRPCC",82,0)
 .F IC=1:1 S NODE=$P(FSUB,",",IC) Q:NODE=""  D
"RTN","PXRMRPCC",83,0)
 ..I $E(NODE)="""" S NODE=$P(NODE,"""",2)
"RTN","PXRMRPCC",84,0)
 ..S $P(FNODE,";",IC)=NODE
"RTN","PXRMRPCC",85,0)
 .Q:FNODE=""
"RTN","PXRMRPCC",86,0)
 .S OCNT=OCNT+1,ORY(OCNT)=FNODE_U_@SUB
"RTN","PXRMRPCC",87,0)
 Q
"RTN","PXRMRPCC",88,0)
 ;
"RTN","PXRMRPCC",89,0)
MHR(ORY,RESULT,ORES) ; Mental Health score and P/N text
"RTN","PXRMRPCC",90,0)
 ;
"RTN","PXRMRPCC",91,0)
 ; Input MH result IEN and mental health instrument response
"RTN","PXRMRPCC",92,0)
 ;
"RTN","PXRMRPCC",93,0)
 D ^PXRMDLR
"RTN","PXRMRPCC",94,0)
 ;
"RTN","PXRMRPCC",95,0)
 Q
"RTN","PXRMRPCC",96,0)
 ;
"RTN","PXRMRPCC",97,0)
MHS(ORY,YS) ; Mental Health save response
"RTN","PXRMRPCC",98,0)
 ;
"RTN","PXRMRPCC",99,0)
 ; Input mental health instrument response
"RTN","PXRMRPCC",100,0)
 N ARRAY
"RTN","PXRMRPCC",101,0)
 D SAVEIT^YTAPI1(.ARRAY,.YS) ; DBIA 2893
"RTN","PXRMRPCC",102,0)
 I ARRAY(1)'="[DATA]" S ORY(1)="-1^"_ARRAY(1)_ARRAY(2)
"RTN","PXRMRPCC",103,0)
 I ARRAY(1)="[DATA]" S ORY(1)=ARRAY(1)_ARRAY(2)
"RTN","PXRMRPCC",104,0)
 Q
"RTN","PXRMRPCC",105,0)
 ;
"RTN","PXRMRPCC",106,0)
MST(ORY,DFN,DGMSTDT,DGMSTSC,DGMSTPR,FTYP,FIEN,RESULT) ; File MST status
"RTN","PXRMRPCC",107,0)
 ;
"RTN","PXRMRPCC",108,0)
 ;    DFN     - PATIENT IEN
"RTN","PXRMRPCC",109,0)
 ;    DGMSTDT - VISIT DATE/TIME
"RTN","PXRMRPCC",110,0)
 ;    DGMSTSC - MST STATUS (D/N/Y) (OPTIONAL)
"RTN","PXRMRPCC",111,0)
 ;    DGMSTPR - PROVIDER IEN
"RTN","PXRMRPCC",112,0)
 ;    FTYP - FINDING TYPE          (OPTIONAL)
"RTN","PXRMRPCC",113,0)
 ;    FIEN - FINDING IEN           (OPTIONAL)
"RTN","PXRMRPCC",114,0)
 ;    RESULT                       (EXAMS ONLY)
"RTN","PXRMRPCC",115,0)
 ;
"RTN","PXRMRPCC",116,0)
 ;If status is not present calculate (normally used for EXAMS only)
"RTN","PXRMRPCC",117,0)
 I DGMSTSC="",FTYP="XAM" S DGMSTSC=$$STATUS(FTYP,FIEN,RESULT)
"RTN","PXRMRPCC",118,0)
 ;
"RTN","PXRMRPCC",119,0)
 ;Quit if no status code found
"RTN","PXRMRPCC",120,0)
 I DGMSTSC="" S ORY(1)="-1^No status code - MST not updated" Q
"RTN","PXRMRPCC",121,0)
 ;
"RTN","PXRMRPCC",122,0)
 ;Update the MST package - DBIA 2716
"RTN","PXRMRPCC",123,0)
 S ORY(1)=$$NEWSTAT^DGMSTAPI(DFN,DGMSTSC,DGMSTDT,DGMSTPR)
"RTN","PXRMRPCC",124,0)
 Q
"RTN","PXRMRPCC",125,0)
 ;
"RTN","PXRMRPCC",126,0)
STATUS(DFTYP,DFIEN,RESULT) ; Status calculation for exams
"RTN","PXRMRPCC",127,0)
 ;
"RTN","PXRMRPCC",128,0)
 ;    DFTYP - FINDING TYPE
"RTN","PXRMRPCC",129,0)
 ;    DFIEN - FINDING IEN
"RTN","PXRMRPCC",130,0)
 ;    RESULT
"RTN","PXRMRPCC",131,0)
 ;
"RTN","PXRMRPCC",132,0)
 N DARRAY,STATUS
"RTN","PXRMRPCC",133,0)
 S STATUS=""
"RTN","PXRMRPCC",134,0)
 ;Check if this is an EXAM finding
"RTN","PXRMRPCC",135,0)
 I DFTYP'="XAM" Q STATUS
"RTN","PXRMRPCC",136,0)
 ;Invalid finding returns null status 
"RTN","PXRMRPCC",137,0)
 I (DFIEN="")!(DFIEN="") Q STATUS
"RTN","PXRMRPCC",138,0)
 ;For each MST term check if finding is mapped
"RTN","PXRMRPCC",139,0)
 N COND,FOUND,TIEN,TNAM,TSUB
"RTN","PXRMRPCC",140,0)
 S FOUND=0
"RTN","PXRMRPCC",141,0)
 F TNAM="POSITIVE","NEGATIVE","DECLINES" D  Q:FOUND
"RTN","PXRMRPCC",142,0)
 .;Get term IEN
"RTN","PXRMRPCC",143,0)
 .S TIEN=$O(^PXRMD(811.5,"B","MST "_TNAM_" REPORT","")) Q:'TIEN
"RTN","PXRMRPCC",144,0)
 .;Check if finding is mapped to term
"RTN","PXRMRPCC",145,0)
 .Q:'$D(^PXRMD(811.5,TIEN,20,"E","AUTTEXAM(",DFIEN))
"RTN","PXRMRPCC",146,0)
 .;Check if finding is mapped to term
"RTN","PXRMRPCC",147,0)
 .S TSUB=$O(^PXRMD(811.5,TIEN,20,"E","AUTTEXAM(",DFIEN,"")) Q:'TSUB
"RTN","PXRMRPCC",148,0)
 .;If it is then check term condition logic
"RTN","PXRMRPCC",149,0)
 .S COND=$P($G(^PXRMD(811.5,TIEN,20,TSUB,3)),U)
"RTN","PXRMRPCC",150,0)
 .;If no condition field ignore the term
"RTN","PXRMRPCC",151,0)
 .I COND="" Q
"RTN","PXRMRPCC",152,0)
 .;Ignore if null result
"RTN","PXRMRPCC",153,0)
 .I $G(RESULT)="" Q
"RTN","PXRMRPCC",154,0)
 .;If condition is defined check if result matches value
"RTN","PXRMRPCC",155,0)
 .N V S V=RESULT X COND
"RTN","PXRMRPCC",156,0)
 .;Set status
"RTN","PXRMRPCC",157,0)
 .I  S FOUND=1,STATUS=$$STCODE^PXRMMST("MST "_TNAM_" REPORT")
"RTN","PXRMRPCC",158,0)
 ;
"RTN","PXRMRPCC",159,0)
 ;Return Status
"RTN","PXRMRPCC",160,0)
 Q STATUS
"RTN","PXRMSPED")
0^14^B5772426
"RTN","PXRMSPED",1,0)
PXRMSPED ; SLC/PKR - Edit a reminder sponsor. ;08/30/2001
"RTN","PXRMSPED",2,0)
 ;;1.5;CLINICAL REMINDERS;**5,7**;Jun 19, 2000
"RTN","PXRMSPED",3,0)
 ;
"RTN","PXRMSPED",4,0)
 ;=======================================================================
"RTN","PXRMSPED",5,0)
 N DA,DIC,DLAYGO,DTOUT,DUOUT,FILEA,IENA,NUM,Y
"RTN","PXRMSPED",6,0)
GETNAME ;Get the name of the computed finding to edit.
"RTN","PXRMSPED",7,0)
 K CLASS,DA,DIC,DLAYGO,DTOUT,DUOUT,INUSE,PXRMEDOK,Y
"RTN","PXRMSPED",8,0)
 S PXRMEDOK=1
"RTN","PXRMSPED",9,0)
 S DIC="^PXRMD(811.6,"
"RTN","PXRMSPED",10,0)
 S DIC(0)="AEMQL"
"RTN","PXRMSPED",11,0)
 S DIC("A")="Select Reminder Sponsor: "
"RTN","PXRMSPED",12,0)
 S DLAYGO=811.6
"RTN","PXRMSPED",13,0)
 ;Set the starting place for additions.
"RTN","PXRMSPED",14,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMSPED",15,0)
 W !
"RTN","PXRMSPED",16,0)
 D ^DIC
"RTN","PXRMSPED",17,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMSPED",18,0)
 I Y=-1 G END
"RTN","PXRMSPED",19,0)
 S DA=$P(Y,U,1)
"RTN","PXRMSPED",20,0)
 S CLASS=$P($G(^PXRMD(811.6,DA,0)),U,2)
"RTN","PXRMSPED",21,0)
 I (CLASS="N")&('$G(PXRMINST)) D  G GETNAME
"RTN","PXRMSPED",22,0)
 . W !,"You cannot edit National Class Sponsors!"
"RTN","PXRMSPED",23,0)
 D EDIT(DIC,DA)
"RTN","PXRMSPED",24,0)
 G GETNAME
"RTN","PXRMSPED",25,0)
END ;
"RTN","PXRMSPED",26,0)
 Q
"RTN","PXRMSPED",27,0)
 ;
"RTN","PXRMSPED",28,0)
 ;=======================================================================
"RTN","PXRMSPED",29,0)
EDIT(ROOT,DA) ;
"RTN","PXRMSPED",30,0)
 N DIE,DR,DIDEL
"RTN","PXRMSPED",31,0)
 S DIE=ROOT,DIDEL=811.6
"RTN","PXRMSPED",32,0)
 S DR=".01;.02"
"RTN","PXRMSPED",33,0)
 D ^DIE
"RTN","PXRMSPED",34,0)
 ;
"RTN","PXRMSPED",35,0)
 S DR="1"
"RTN","PXRMSPED",36,0)
 D ^DIE
"RTN","PXRMSPED",37,0)
 ;
"RTN","PXRMSPED",38,0)
 S DR="2"
"RTN","PXRMSPED",39,0)
 D ^DIE
"RTN","PXRMSPED",40,0)
 Q
"RTN","PXRMSPED",41,0)
 ;
"RTN","PXRMSPED",42,0)
 ;=======================================================================
"RTN","PXRMSPED",43,0)
INUSE(SIEN) ;This is used by ^DD(811.6,.01,"DEL",1,0) to determine if it
"RTN","PXRMSPED",44,0)
 ;is ok to delete a sponsor.
"RTN","PXRMSPED",45,0)
 N FILE,FILEA,IEN,IENA,IENT,IND,LIST,NUM,SP
"RTN","PXRMSPED",46,0)
 D EN^DDIOL("Checking usage ...")
"RTN","PXRMSPED",47,0)
 S NUM=0
"RTN","PXRMSPED",48,0)
 ;First check for use as an associated sponsor.
"RTN","PXRMSPED",49,0)
 S SP=""
"RTN","PXRMSPED",50,0)
 F  S SP=$O(^PXRMD(811.6,"C",SIEN,SP)) Q:SP=""  D
"RTN","PXRMSPED",51,0)
 . S NUM=NUM+1
"RTN","PXRMSPED",52,0)
 . S FILEA(NUM)=811.6
"RTN","PXRMSPED",53,0)
 . S IENA(NUM)=SP
"RTN","PXRMSPED",54,0)
 F FILE=801.41,811.2,811.4,811.5,811.9 D
"RTN","PXRMSPED",55,0)
 . K LIST
"RTN","PXRMSPED",56,0)
 . D LIST^DIC(FILE,"","@","","","","","","","","LIST")
"RTN","PXRMSPED",57,0)
 . S IENT=$P(LIST("DILIST",0),U,1)
"RTN","PXRMSPED",58,0)
 . F IND=1:1:IENT D
"RTN","PXRMSPED",59,0)
 .. S IEN=LIST("DILIST",2,IND)
"RTN","PXRMSPED",60,0)
 .. S SP=+$$GET1^DIQ(FILE,IEN,101,"I")
"RTN","PXRMSPED",61,0)
 .. I SP=SIEN D
"RTN","PXRMSPED",62,0)
 ... S NUM=NUM+1
"RTN","PXRMSPED",63,0)
 ... S FILEA(NUM)=FILE
"RTN","PXRMSPED",64,0)
 ... S IENA(NUM)=IEN
"RTN","PXRMSPED",65,0)
 I NUM>0 D
"RTN","PXRMSPED",66,0)
 . D EN^DDIOL("This Sponsor cannot be deleted, it is in use by the following:")
"RTN","PXRMSPED",67,0)
 . D EN^DDIOL("FILE","","!!")
"RTN","PXRMSPED",68,0)
 . D EN^DDIOL("ENTRY","","?35")
"RTN","PXRMSPED",69,0)
 . D EN^DDIOL("----")
"RTN","PXRMSPED",70,0)
 . D EN^DDIOL("-----","","?35")
"RTN","PXRMSPED",71,0)
 . F IND=1:1:NUM D
"RTN","PXRMSPED",72,0)
 .. S IENA(IND)=$$GET1^DIQ(FILEA(IND),IENA(IND),.01)
"RTN","PXRMSPED",73,0)
 .. S FILEA(IND)=$$GET1^DID(FILEA(IND),"","","NAME")
"RTN","PXRMSPED",74,0)
 .. D EN^DDIOL(FILEA(IND))
"RTN","PXRMSPED",75,0)
 .. D EN^DDIOL(IENA(IND),"","?35")
"RTN","PXRMSPED",76,0)
 . D EN^DDIOL("","","!!")
"RTN","PXRMSPED",77,0)
 Q NUM
"RTN","PXRMSPED",78,0)
 ;
"RTN","PXRMTERM")
0^10^B31489891
"RTN","PXRMTERM",1,0)
PXRMTERM ; SLC/PKR - Handle reminder terms. ;08/29/2001
"RTN","PXRMTERM",2,0)
 ;;1.5;CLINICAL REMINDERS;**1,7**;Jun 19, 2000
"RTN","PXRMTERM",3,0)
 ;
"RTN","PXRMTERM",4,0)
 ;=======================================================================
"RTN","PXRMTERM",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate reminder terms.
"RTN","PXRMTERM",6,0)
 N FINDING,EXP,IND,INVDATE,STATUS,TERMIEN,TFIEVAL,TSORT
"RTN","PXRMTERM",7,0)
 S TERMIEN=""
"RTN","PXRMTERM",8,0)
 F  S TERMIEN=$O(^PXD(811.9,PXRMITEM,20,"E","PXRMD(811.5,",TERMIEN)) Q:+TERMIEN=0  D
"RTN","PXRMTERM",9,0)
 . S FINDING=""
"RTN","PXRMTERM",10,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","PXRMD(811.5,",TERMIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMTERM",11,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMTERM",12,0)
 .. K TFIEVAL,TSORT
"RTN","PXRMTERM",13,0)
 .. D EVALTERM(DFN,FINDING,TERMIEN,.TFIEVAL)
"RTN","PXRMTERM",14,0)
 ..;Use the most recent of the true term findings as the value for the
"RTN","PXRMTERM",15,0)
 ..;finding. If there are no true ones use the most recent expired.
"RTN","PXRMTERM",16,0)
 .. S IND=0
"RTN","PXRMTERM",17,0)
 .. F  S IND=$O(TFIEVAL(IND)) Q:+IND=0  D
"RTN","PXRMTERM",18,0)
 ... S INVDATE=$$FMDFINVL^PXRMDATE(+$G(TFIEVAL(IND,"DATE")),1)
"RTN","PXRMTERM",19,0)
 ...;Set STATUS=0 for a true finding.
"RTN","PXRMTERM",20,0)
 ... I TFIEVAL(IND) S (STATUS,EXP)=0
"RTN","PXRMTERM",21,0)
 ... E  D
"RTN","PXRMTERM",22,0)
 .... S STATUS=1
"RTN","PXRMTERM",23,0)
 ....;Check for expired finding.
"RTN","PXRMTERM",24,0)
 .... I $D(TFIEVAL(IND,"EXPIRED")) S EXP=1
"RTN","PXRMTERM",25,0)
 .... E  S EXP=0
"RTN","PXRMTERM",26,0)
 ... S TSORT(STATUS,EXP,INVDATE,IND)=""
"RTN","PXRMTERM",27,0)
 .. ;First look for the most recent true finding.
"RTN","PXRMTERM",28,0)
 .. S INVDATE=+$O(TSORT(0,0,0))
"RTN","PXRMTERM",29,0)
 .. I INVDATE>0 S IND=$O(TSORT(0,0,INVDATE,""))
"RTN","PXRMTERM",30,0)
 ..;No true finding, look for the most recent expired finding.
"RTN","PXRMTERM",31,0)
 .. I IND="" D
"RTN","PXRMTERM",32,0)
 ... S INVDATE=+$O(TSORT(1,1,0))
"RTN","PXRMTERM",33,0)
 ... I INVDATE>0 S IND=$O(TSORT(1,1,INVDATE,""))
"RTN","PXRMTERM",34,0)
 .. I +IND>0 D
"RTN","PXRMTERM",35,0)
 ... M FIEVAL(FINDING)=TFIEVAL(IND)
"RTN","PXRMTERM",36,0)
 ... S FIEVAL(FINDING,"TERM")=^PXRMD(811.5,TERMIEN,0)
"RTN","PXRMTERM",37,0)
 Q
"RTN","PXRMTERM",38,0)
 ;
"RTN","PXRMTERM",39,0)
 ;=======================================================================
"RTN","PXRMTERM",40,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate all the findings in a term.
"RTN","PXRMTERM",41,0)
 ;Use the "E" cross-reference just like the finding evaluation.
"RTN","PXRMTERM",42,0)
 I '$D(^PXRMD(811.5,TERMIEN,20,"E")) D  Q
"RTN","PXRMTERM",43,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"WARNING","NOFI")="Warning no findings items in reminder term "_$P(^PXRMD(811.5,TERMIEN,0),U,1)
"RTN","PXRMTERM",44,0)
 N FTYPE
"RTN","PXRMTERM",45,0)
 S FTYPE=""
"RTN","PXRMTERM",46,0)
 F  S FTYPE=$O(^PXRMD(811.5,TERMIEN,20,"E",FTYPE)) Q:FTYPE=""  D
"RTN","PXRMTERM",47,0)
 . I FTYPE="AUTTEDT(" D EVALTERM^PXRMEDU(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",48,0)
 . I FTYPE="AUTTEXAM(" D EVALTERM^PXRMEXAM(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",49,0)
 . I FTYPE="AUTTHF(" D EVALTERM^PXRMHF(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",50,0)
 . I FTYPE="AUTTIMM(" D EVALTERM^PXRMIMM(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",51,0)
 . I FTYPE="AUTTSK(" D EVALTERM^PXRMSKIN(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",52,0)
 . I FTYPE="GMRD(120.51," D EVALTERM^PXRMMEAS(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",53,0)
 . I FTYPE="LAB(60," D EVALTERM^PXRMLAB(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",54,0)
 . I FTYPE="ORD(101.43," D EVALTERM^PXRMORDR(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",55,0)
 . I FTYPE="PXD(811.2," D EVALTERM^PXRMTAX(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",56,0)
 . I FTYPE="PXRMD(811.4," D EVALTERM^PXRMCF(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",57,0)
 . I FTYPE="PXRMD(811.5," D EVALTERM^PXRMTERM(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",58,0)
 . I FTYPE="PS(50.605," D EVALTERM^PXRMDRCL(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",59,0)
 . I FTYPE="PSDRUG(" D EVALTERM^PXRMDRUG(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",60,0)
 . I FTYPE="PSNDF(50.6," D EVALTERM^PXRMDGEN(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",61,0)
 . I FTYPE="RAMIS(71," D EVALTERM^PXRMRAD(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",62,0)
 . I FTYPE="YTT(601," D EVALTERM^PXRMMH(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",63,0)
 Q
"RTN","PXRMTERM",64,0)
 ;
"RTN","PXRMTERM",65,0)
 ;=======================================================================
"RTN","PXRMTERM",66,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMTERM",67,0)
 ;maintenance output.
"RTN","PXRMTERM",68,0)
 N TEMP
"RTN","PXRMTERM",69,0)
 S TEMP="Reminder Term: "_$P(FIEVAL(FINDING,"TERM"),U,1)
"RTN","PXRMTERM",70,0)
 S NLINES=NLINES+1
"RTN","PXRMTERM",71,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMTERM",72,0)
 Q
"RTN","PXRMTERM",73,0)
 ;
"RTN","PXRMTERM",74,0)
 ;=======================================================================
"RTN","PXRMTERM",75,0)
PATLIST(INDEX,TERMIEN,FINDING,FIND0,FIND3,FIEVAL) ;Build a list
"RTN","PXRMTERM",76,0)
 ;of patients for all the findings in a term.
"RTN","PXRMTERM",77,0)
 I $D(PXRMPID),'$D(^PXRMD(811.5,TERMIEN,20,"E")) D  Q
"RTN","PXRMTERM",78,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"WARNING","NOFI")="Warning no findings items in reminder term "_$P(^PXRMD(811.5,TERMIEN,0),U,1)
"RTN","PXRMTERM",79,0)
 N DATE,FIEN,FTYPE,TFIEVAL,TFIND0,TFIND3,TFINDING
"RTN","PXRMTERM",80,0)
 S FTYPE=""
"RTN","PXRMTERM",81,0)
 F  S FTYPE=$O(^PXRMD(811.5,TERMIEN,20,"E",FTYPE)) Q:FTYPE=""  D
"RTN","PXRMTERM",82,0)
 . S FIEN=0
"RTN","PXRMTERM",83,0)
 . F  S FIEN=+$O(^PXRMD(811.5,TERMIEN,20,"E",FTYPE,FIEN)) Q:FIEN=0  D
"RTN","PXRMTERM",84,0)
 .. S TFINDING=+$O(^PXRMD(811.5,TERMIEN,20,"E",FTYPE,FIEN,""))
"RTN","PXRMTERM",85,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMTERM",86,0)
 .. S TFIND3=$G(^PXRMD(811.5,TERMIEN,20,TFINDING,3))
"RTN","PXRMTERM",87,0)
 .. S TFIEVAL(TFINDING,"FINDING")=FIEN_";"_FTYPE
"RTN","PXRMTERM",88,0)
 .. I FTYPE="AUTTEDT(" D PATLIST^PXRMEDU("PXRMTERM",FIEN,TFINDING,FIND0,FIND3,TFIND0,TFIND3,.TFIEVAL) Q
"RTN","PXRMTERM",89,0)
 .. I FTYPE="AUTTEXAM(" D PATLIST^PXRMEXAM("PXRMTERM",FIEN,TFINDING,FIND0,FIND3,TFIND0,TFIND3,.TFIEVAL) Q
"RTN","PXRMTERM",90,0)
 .. I FTYPE="AUTTHF(" D PATLIST^PXRMHF("PXRMTERM",FIEN,TFINDING,FIND0,FIND3,TFIND0,TFIND3,.TFIEVAL) Q
"RTN","PXRMTERM",91,0)
 .. ;I FTYPE="AUTTIMM(" D PATLIST^PXRMIMM(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",92,0)
 .. ;I FTYPE="AUTTSK(" D PATLIST^PXRMSKIN(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",93,0)
 .. ;I FTYPE="GMRD(120.51," D PATLIST^PXRMMEAS(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",94,0)
 .. ;I FTYPE="LAB(60," D PATLIST^PXRMLAB(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",95,0)
 .. ;I FTYPE="ORD(101.43," D PATLIST^PXRMORDR(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",96,0)
 .. ;I FTYPE="PXD(811.2," D PATLIST^PXRMTAX(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",97,0)
 .. ;I FTYPE="PXRMD(811.4," D PATLIST^PXRMCF(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",98,0)
 .. ;I FTYPE="PS(50.605," D PATLIST^PXRMDRCL(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",99,0)
 .. ;I FTYPE="PSDRUG(" D PATLIST^PXRMDRUG(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",100,0)
 .. ;I FTYPE="PSNDF(50.6," D PATLIST^PXRMDGEN(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",101,0)
 .. ;I FTYPE="RAMIS(71," D PATLIST^PXRMRAD(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",102,0)
 .. ;I FTYPE="YTT(601," D PATLIST^PXRMMH(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",103,0)
 ;Process the lists and return most recent finding for each patient
"RTN","PXRMTERM",104,0)
 ;as the result for the term.
"RTN","PXRMTERM",105,0)
 S DFN=0
"RTN","PXRMTERM",106,0)
 F  S DFN=+$O(^TMP("PXRMTERM",$J,DFN)) Q:DFN=0  D
"RTN","PXRMTERM",107,0)
 . S DATE=$O(^TMP("PXRMTERM",$J,DFN,""),-1)
"RTN","PXRMTERM",108,0)
 . S TFINDING=$O(^TMP("PXRMTERM",$J,DFN,DATE,""))
"RTN","PXRMTERM",109,0)
 . S ^TMP(INDEX,$J,DFN,DATE,FINDING)=^TMP("PXRMTERM",$J,DFN,DATE,TFINDING)
"RTN","PXRMTERM",110,0)
 K ^TMP("PXRMTERM",$J)
"RTN","PXRMTERM",111,0)
 Q
"RTN","PXRMTERM",112,0)
 ;
"RTN","PXRMUTIL")
0^11^B49770447
"RTN","PXRMUTIL",1,0)
PXRMUTIL ; SLC/PKR - Utility routines for use by PXRM. ;08/27/2001
"RTN","PXRMUTIL",2,0)
 ;;1.5;CLINICAL REMINDERS;**2,5,7**;Jun 19, 2000
"RTN","PXRMUTIL",3,0)
 ;
"RTN","PXRMUTIL",4,0)
 ;=======================================================================
"RTN","PXRMUTIL",5,0)
ANTON(ANUM) ;Convert an alphabetic number to its decimal form. This is the
"RTN","PXRMUTIL",6,0)
 ;inverse of NTOAN.
"RTN","PXRMUTIL",7,0)
 N INT
"RTN","PXRMUTIL",8,0)
 S INT("A")=0,INT("B")=1,INT("C")=2,INT("D")=3,INT("E")=4,INT("F")=5
"RTN","PXRMUTIL",9,0)
 S INT("G")=6,INT("H")=7,INT("I")=8,INT("J")=9,INT("K")=10,INT("L")=11
"RTN","PXRMUTIL",10,0)
 S INT("M")=12,INT("N")=13,INT("O")=14,INT("P")=15,INT("Q")=16
"RTN","PXRMUTIL",11,0)
 S INT("R")=17,INT("S")=18,INT("T")=19,INT("U")=20,INT("V")=21
"RTN","PXRMUTIL",12,0)
 S INT("W")=22,INT("X")=23,INT("Y")=24,INT("Z")=25
"RTN","PXRMUTIL",13,0)
 ;
"RTN","PXRMUTIL",14,0)
 N LEN,NUMBR,P26,PWR
"RTN","PXRMUTIL",15,0)
 S LEN=$L(ANUM),NUMBER=0,P26=1
"RTN","PXRMUTIL",16,0)
 F DC=LEN:-1:1 D
"RTN","PXRMUTIL",17,0)
 . S DIGIT=$E(ANUM,DC)
"RTN","PXRMUTIL",18,0)
 . S NUMBER=NUMBER+(P26*INT(DIGIT))
"RTN","PXRMUTIL",19,0)
 . S P26=26*P26
"RTN","PXRMUTIL",20,0)
 Q NUMBER
"RTN","PXRMUTIL",21,0)
 ;
"RTN","PXRMUTIL",22,0)
 ;=======================================================================
"RTN","PXRMUTIL",23,0)
ATTVALUE(STRING,ATTR,SEP,AVSEP) ;STRING contains a list of attribute value
"RTN","PXRMUTIL",24,0)
 ;pairs. Each pair is separated by SEP and the attribute value pair
"RTN","PXRMUTIL",25,0)
 ;is separated by AVSEP. Return the value for the attribute ATTR.
"RTN","PXRMUTIL",26,0)
 N AVPAIR,IND,NUMAVP,VALUE
"RTN","PXRMUTIL",27,0)
 S NUMAVP=$L(STRING,SEP)
"RTN","PXRMUTIL",28,0)
 S VALUE=""
"RTN","PXRMUTIL",29,0)
 F IND=1:1:NUMAVP Q:VALUE'=""  D
"RTN","PXRMUTIL",30,0)
 . S AVPAIR=$P(STRING,SEP,IND)
"RTN","PXRMUTIL",31,0)
 . I AVPAIR[ATTR S VALUE=$P(AVPAIR,AVSEP,2)
"RTN","PXRMUTIL",32,0)
 Q VALUE
"RTN","PXRMUTIL",33,0)
 ;
"RTN","PXRMUTIL",34,0)
 ;=======================================================================
"RTN","PXRMUTIL",35,0)
AWRITE(REF) ;Write all the descendants of the array reference.
"RTN","PXRMUTIL",36,0)
 ;REF is the starting array reference, for example A or ^TMP("PXRM",$J).
"RTN","PXRMUTIL",37,0)
 N DONE,IC,IND,LEN,PROOT,ROOT,START,TEMP
"RTN","PXRMUTIL",38,0)
 I REF="" Q
"RTN","PXRMUTIL",39,0)
 S PROOT=$P(REF,")",1)
"RTN","PXRMUTIL",40,0)
 ;Build the root so we can tell when we are done.
"RTN","PXRMUTIL",41,0)
 S TEMP=$NA(@REF)
"RTN","PXRMUTIL",42,0)
 S ROOT=$P(TEMP,")",1)
"RTN","PXRMUTIL",43,0)
 S REF=$Q(@REF)
"RTN","PXRMUTIL",44,0)
 I REF'[ROOT Q
"RTN","PXRMUTIL",45,0)
 S DONE=0
"RTN","PXRMUTIL",46,0)
 F IC=0:0 Q:(REF="")!(DONE)  D
"RTN","PXRMUTIL",47,0)
 . S START=$F(REF,ROOT)
"RTN","PXRMUTIL",48,0)
 . S LEN=$L(REF)
"RTN","PXRMUTIL",49,0)
 . S IND=$E(REF,START,LEN)
"RTN","PXRMUTIL",50,0)
 . W !,PROOT_IND,"=",@REF
"RTN","PXRMUTIL",51,0)
 . S REF=$Q(@REF)
"RTN","PXRMUTIL",52,0)
 . I REF'[ROOT S DONE=1
"RTN","PXRMUTIL",53,0)
 Q
"RTN","PXRMUTIL",54,0)
 ;
"RTN","PXRMUTIL",55,0)
 ;=======================================================================
"RTN","PXRMUTIL",56,0)
COND(FIND3,TFIND3,V) ;Evaluate the finding condition. TFIND3 will be defined
"RTN","PXRMUTIL",57,0)
 ;if this is being called from a term evaluation. V is the value.
"RTN","PXRMUTIL",58,0)
 N CASESEN,COND,CONVAL
"RTN","PXRMUTIL",59,0)
 S CONVAL=""
"RTN","PXRMUTIL",60,0)
 S COND=$P(TFIND3,U,1)
"RTN","PXRMUTIL",61,0)
 S CASESEN=$P(TFIND3,U,2)
"RTN","PXRMUTIL",62,0)
 I COND="" D
"RTN","PXRMUTIL",63,0)
 . S COND=$P(FIND3,U,1)
"RTN","PXRMUTIL",64,0)
 . S CASESEN=$P(FIND3,U,2)
"RTN","PXRMUTIL",65,0)
 . I CASESEN="" S CASESEN=2
"RTN","PXRMUTIL",66,0)
 I $L(COND)>0 D
"RTN","PXRMUTIL",67,0)
 . S V=$TR(V," ","~")
"RTN","PXRMUTIL",68,0)
 . I 'CASESEN D
"RTN","PXRMUTIL",69,0)
 .. S COND=$$UP^XLFSTR(COND)
"RTN","PXRMUTIL",70,0)
 .. S V=$$UP^XLFSTR(V)
"RTN","PXRMUTIL",71,0)
 . X COND
"RTN","PXRMUTIL",72,0)
 . S CONVAL=$T
"RTN","PXRMUTIL",73,0)
 Q CONVAL
"RTN","PXRMUTIL",74,0)
 ;
"RTN","PXRMUTIL",75,0)
 ;=======================================================================
"RTN","PXRMUTIL",76,0)
DIWPS(DIWF,DIWL,DIWR) ;Setup the formatting for the DIWP call. The variables
"RTN","PXRMUTIL",77,0)
 ;should be NEWED by the caller.
"RTN","PXRMUTIL",78,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMUTIL",79,0)
DIWPK ;
"RTN","PXRMUTIL",80,0)
 K ^UTILITY($J,"W")
"RTN","PXRMUTIL",81,0)
 Q
"RTN","PXRMUTIL",82,0)
 ;
"RTN","PXRMUTIL",83,0)
 ;=======================================================================
"RTN","PXRMUTIL",84,0)
FNFR(ROOT) ;Given the root of a file return the file number.
"RTN","PXRMUTIL",85,0)
 Q +$P(@(ROOT_"0)"),U,2)
"RTN","PXRMUTIL",86,0)
 ;
"RTN","PXRMUTIL",87,0)
 ;=======================================================================
"RTN","PXRMUTIL",88,0)
MATCH(N1,ARRAY1,KEY1,N2,ARRAY2,KEY2,NMAT,MARRAY) ;Given two sorted
"RTN","PXRMUTIL",89,0)
 ;arrays look for matches between the KEY1 piece of ARRAY1 and the KEY2
"RTN","PXRMUTIL",90,0)
 ;piece of ARRAY2. Return ARRAY1_U_ARRAY2 matches in MARRAY.
"RTN","PXRMUTIL",91,0)
 ;Initialize the number of matches to 0.
"RTN","PXRMUTIL",92,0)
 S NMAT=0
"RTN","PXRMUTIL",93,0)
 I (N1'>0)!(N2'>0) Q
"RTN","PXRMUTIL",94,0)
 N A1,A2,IC,JC
"RTN","PXRMUTIL",95,0)
 S (IC,JC)=1
"RTN","PXRMUTIL",96,0)
ML ;
"RTN","PXRMUTIL",97,0)
 S A1=$P(@ARRAY1@(IC),U,KEY1),A2=$P(@ARRAY2@(JC),U,KEY2)
"RTN","PXRMUTIL",98,0)
 I A1=A2 D  Q:IC>N1  Q:JC>N2  G ML
"RTN","PXRMUTIL",99,0)
 . S NMAT=NMAT+1
"RTN","PXRMUTIL",100,0)
 . S @MARRAY@(NMAT)=@ARRAY1@(IC)_U_@ARRAY2@(JC)
"RTN","PXRMUTIL",101,0)
 . S IC=IC+1,JC=JC+1
"RTN","PXRMUTIL",102,0)
 I A1<A2 S IC=IC+1 Q:IC>N1  G ML
"RTN","PXRMUTIL",103,0)
 S JC=JC+1 Q:JC>N2  G ML
"RTN","PXRMUTIL",104,0)
 Q
"RTN","PXRMUTIL",105,0)
 ;
"RTN","PXRMUTIL",106,0)
 ;=======================================================================
"RTN","PXRMUTIL",107,0)
NTOAN(NUMBER) ;Given an integer N return an alphabetic string that can be
"RTN","PXRMUTIL",108,0)
 ;used for sorting. This will be modulus 26. For example N=0 returns
"RTN","PXRMUTIL",109,0)
 ;A, N=26 returns BA etc.
"RTN","PXRMUTIL",110,0)
 N ALPH
"RTN","PXRMUTIL",111,0)
 S ALPH(0)="A",ALPH(1)="B",ALPH(2)="C",ALPH(3)="D",ALPH(4)="E"
"RTN","PXRMUTIL",112,0)
 S ALPH(5)="F",ALPH(6)="G",ALPH(7)="H",ALPH(8)="I",ALPH(9)="J"
"RTN","PXRMUTIL",113,0)
 S ALPH(10)="K",ALPH(11)="L",ALPH(12)="M",ALPH(13)="N",ALPH(14)="O"
"RTN","PXRMUTIL",114,0)
 S ALPH(15)="P",ALPH(16)="Q",ALPH(17)="R",ALPH(18)="S",ALPH(19)="T"
"RTN","PXRMUTIL",115,0)
 S ALPH(20)="U",ALPH(21)="V",ALPH(22)="W",ALPH(23)="X",ALPH(24)="Y"
"RTN","PXRMUTIL",116,0)
 S ALPH(25)="Z"
"RTN","PXRMUTIL",117,0)
 ;
"RTN","PXRMUTIL",118,0)
 N ANUM,DIGIT,NUM,P26,PC,PWR
"RTN","PXRMUTIL",119,0)
 S ANUM="",NUM=NUMBER,PWR=0
"RTN","PXRMUTIL",120,0)
 S P26(PWR)=1
"RTN","PXRMUTIL",121,0)
 F PWR=1:1 S P26(PWR)=26*P26(PWR-1) I P26(PWR)>NUMBER Q
"RTN","PXRMUTIL",122,0)
 S PWR=PWR-1
"RTN","PXRMUTIL",123,0)
 F PC=PWR:-1:0 D
"RTN","PXRMUTIL",124,0)
 . S DIGIT=NUM\P26(PC)
"RTN","PXRMUTIL",125,0)
 . S ANUM=ANUM_ALPH(DIGIT)
"RTN","PXRMUTIL",126,0)
 . S NUM=NUM-(DIGIT*P26(PC))
"RTN","PXRMUTIL",127,0)
 Q ANUM
"RTN","PXRMUTIL",128,0)
 ;
"RTN","PXRMUTIL",129,0)
 ;=======================================================================
"RTN","PXRMUTIL",130,0)
POSTFIX(PFSTACK,EXPR,OPER) ;Given an expression, EXPR, in infix notation
"RTN","PXRMUTIL",131,0)
 ;convert it to postfix and return the result in PFSTACK. PFSTACK(0)
"RTN","PXRMUTIL",132,0)
 ;will contain the number of elements in PFSTACK. OPER is a
"RTN","PXRMUTIL",133,0)
 ;string containing allowable operators.
"RTN","PXRMUTIL",134,0)
 N CHAR,IND,LEN,OPERP,PFP,SP,SPACE,STACK,SYM,SYMP,SYMT,TAB,TEMP
"RTN","PXRMUTIL",135,0)
 S SPACE=$C(32)
"RTN","PXRMUTIL",136,0)
 S TAB=$C(9)
"RTN","PXRMUTIL",137,0)
 S TEMP=""
"RTN","PXRMUTIL",138,0)
 S OPERP=OPER_"()"
"RTN","PXRMUTIL",139,0)
 S SYMP=0
"RTN","PXRMUTIL",140,0)
 S LEN=$L(EXPR)
"RTN","PXRMUTIL",141,0)
 ;Break the expression into (, ), operators, and operands.
"RTN","PXRMUTIL",142,0)
 ;Remove spaces and tabs and put the symbols onto the symbol
"RTN","PXRMUTIL",143,0)
 ;stack in left to right order. Symbol number 1 is SYM(1).
"RTN","PXRMUTIL",144,0)
 F IND=1:1:LEN D
"RTN","PXRMUTIL",145,0)
 . S CHAR=$E(EXPR,IND)
"RTN","PXRMUTIL",146,0)
 . I (CHAR=SPACE)!(CHAR=TAB) Q
"RTN","PXRMUTIL",147,0)
 . I OPERP[CHAR D
"RTN","PXRMUTIL",148,0)
 .. I $L(TEMP)>0 D
"RTN","PXRMUTIL",149,0)
 ... S SYMP=SYMP+1
"RTN","PXRMUTIL",150,0)
 ... S SYM(SYMP)=TEMP
"RTN","PXRMUTIL",151,0)
 ... S TEMP=""
"RTN","PXRMUTIL",152,0)
 .. S SYMP=SYMP+1
"RTN","PXRMUTIL",153,0)
 .. S SYM(SYMP)=CHAR
"RTN","PXRMUTIL",154,0)
 . E  S TEMP=TEMP_CHAR
"RTN","PXRMUTIL",155,0)
 . I (IND=LEN)&(TEMP'="") D
"RTN","PXRMUTIL",156,0)
 .. S SYMP=SYMP+1
"RTN","PXRMUTIL",157,0)
 .. S SYM(SYMP)=TEMP
"RTN","PXRMUTIL",158,0)
 ;Process the symbols.
"RTN","PXRMUTIL",159,0)
 S (PFP,SP)=0
"RTN","PXRMUTIL",160,0)
 S LEN=SYMP
"RTN","PXRMUTIL",161,0)
 F SYMP=1:1:LEN D
"RTN","PXRMUTIL",162,0)
 . S SYMT=SYM(SYMP)
"RTN","PXRMUTIL",163,0)
 .;
"RTN","PXRMUTIL",164,0)
 .;Symbol is "("
"RTN","PXRMUTIL",165,0)
 . I SYMT="(" D  Q
"RTN","PXRMUTIL",166,0)
 .. S SP=SP+1
"RTN","PXRMUTIL",167,0)
 .. S STACK(SP)=SYMT
"RTN","PXRMUTIL",168,0)
 .;
"RTN","PXRMUTIL",169,0)
 .;Symbol is an operator
"RTN","PXRMUTIL",170,0)
 . I OPER[SYMT D  Q
"RTN","PXRMUTIL",171,0)
 .. S LEN=SP
"RTN","PXRMUTIL",172,0)
 .. F IND=LEN:-1:1 S TEMP=STACK(IND) Q:TEMP="("  D
"RTN","PXRMUTIL",173,0)
 ...;M has no operator precedence so we don't need to check.
"RTN","PXRMUTIL",174,0)
 ... S PFP=PFP+1
"RTN","PXRMUTIL",175,0)
 ... S PFSTACK(PFP)=TEMP
"RTN","PXRMUTIL",176,0)
 ... K STACK(SP)
"RTN","PXRMUTIL",177,0)
 ... S SP=SP-1
"RTN","PXRMUTIL",178,0)
 .. S SP=SP+1
"RTN","PXRMUTIL",179,0)
 .. S STACK(SP)=SYMT
"RTN","PXRMUTIL",180,0)
 .;
"RTN","PXRMUTIL",181,0)
 .;Symbol is ")"
"RTN","PXRMUTIL",182,0)
 . I SYMT=")" D  Q
"RTN","PXRMUTIL",183,0)
 .. S LEN=SP
"RTN","PXRMUTIL",184,0)
 .. F IND=LEN:-1:1 S TEMP=STACK(IND) Q:TEMP="("  D
"RTN","PXRMUTIL",185,0)
 ... S PFP=PFP+1
"RTN","PXRMUTIL",186,0)
 ... S PFSTACK(PFP)=TEMP
"RTN","PXRMUTIL",187,0)
 ... K STACK(SP)
"RTN","PXRMUTIL",188,0)
 ... S SP=SP-1
"RTN","PXRMUTIL",189,0)
 ..;Pop the "(" at the top of the stack.
"RTN","PXRMUTIL",190,0)
 .. K STACK(SP)
"RTN","PXRMUTIL",191,0)
 .. S SP=SP-1
"RTN","PXRMUTIL",192,0)
 .;
"RTN","PXRMUTIL",193,0)
 .;If we get to here then symbol is an operand.
"RTN","PXRMUTIL",194,0)
 . S PFP=PFP+1
"RTN","PXRMUTIL",195,0)
 . S PFSTACK(PFP)=SYMT
"RTN","PXRMUTIL",196,0)
 ;
"RTN","PXRMUTIL",197,0)
 ;Pop and output anything left on the stack.
"RTN","PXRMUTIL",198,0)
 F IND=SP:-1:1 D
"RTN","PXRMUTIL",199,0)
 . S PFP=PFP+1
"RTN","PXRMUTIL",200,0)
 . S PFSTACK(PFP)=STACK(IND)
"RTN","PXRMUTIL",201,0)
 ;
"RTN","PXRMUTIL",202,0)
 ;Save the number of elements in PFSTACK.
"RTN","PXRMUTIL",203,0)
 S PFSTACK(0)=PFP
"RTN","PXRMUTIL",204,0)
 Q
"RTN","PXRMUTIL",205,0)
 ;
"RTN","PXRMUTIL",206,0)
 ;=======================================================================
"RTN","PXRMUTIL",207,0)
SEHIST(FILENUM,ROOT,IEN) ;Set the edit date and edit by and prompt the
"RTN","PXRMUTIL",208,0)
 ;user for the edit comment.
"RTN","PXRMUTIL",209,0)
 N DIC,DIR,DWLW,DWPK,ENTRY,FDA,FDAIEN,IENS,IND,MSG,SFN,TARGET,X,Y
"RTN","PXRMUTIL",210,0)
 K ^TMP("PXRMWP",$J)
"RTN","PXRMUTIL",211,0)
 D FIELD^DID(FILENUM,"EDIT HISTORY","","SPECIFIER","TARGET")
"RTN","PXRMUTIL",212,0)
 S SFN=+$G(TARGET("SPECIFIER"))
"RTN","PXRMUTIL",213,0)
 I SFN=0 Q
"RTN","PXRMUTIL",214,0)
 S ENTRY=ROOT_IEN_",110)"
"RTN","PXRMUTIL",215,0)
 S IND=$O(@ENTRY@("B"),-1)
"RTN","PXRMUTIL",216,0)
 S IND=IND+1
"RTN","PXRMUTIL",217,0)
 S IENS="+"_IND_","_IEN_","
"RTN","PXRMUTIL",218,0)
 S FDAIEN(IEN)=IEN
"RTN","PXRMUTIL",219,0)
 S FDA(SFN,IENS,.01)=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMUTIL",220,0)
 S FDA(SFN,IENS,1)=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXRMUTIL",221,0)
 ;Prompt the user for edit comments.
"RTN","PXRMUTIL",222,0)
 S DIC="^TMP(""PXRMWP"",$J,"
"RTN","PXRMUTIL",223,0)
 S DWLW=72
"RTN","PXRMUTIL",224,0)
 S DWPK=1
"RTN","PXRMUTIL",225,0)
 W !,"Input your edit comments."
"RTN","PXRMUTIL",226,0)
 S DIR(0)="Y"_U_"AO"
"RTN","PXRMUTIL",227,0)
 S DIR("A")="Edit"
"RTN","PXRMUTIL",228,0)
 S DIR("B")="NO"
"RTN","PXRMUTIL",229,0)
 D ^DIR
"RTN","PXRMUTIL",230,0)
 I Y D
"RTN","PXRMUTIL",231,0)
 . D EN^DIWE
"RTN","PXRMUTIL",232,0)
 . K ^TMP("PXRMWP",$J,0)
"RTN","PXRMUTIL",233,0)
 . I $D(^TMP("PXRMWP",$J)) S FDA(SFN,IENS,2)="^TMP(""PXRMWP"",$J)"
"RTN","PXRMUTIL",234,0)
 D UPDATE^DIE("E","FDA","FDAIEN","MSG")
"RTN","PXRMUTIL",235,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMUTIL",236,0)
 K ^TMP("PXRMWP",$J)
"RTN","PXRMUTIL",237,0)
 Q
"RTN","PXRMUTIL",238,0)
 ;
"RTN","PXRMUTIL",239,0)
 ;=======================================================================
"RTN","PXRMUTIL",240,0)
SORT(N,ARRAY,KEY) ;Sort an ARRAY with N elements into ascending order,
"RTN","PXRMUTIL",241,0)
 ;return the number of unique elements. KEY is the piece of ARRAY on
"RTN","PXRMUTIL",242,0)
 ;which to base the sort. The default is the first piece.
"RTN","PXRMUTIL",243,0)
 ;
"RTN","PXRMUTIL",244,0)
 I (N'>0)!(N=1) Q N
"RTN","PXRMUTIL",245,0)
 N IC,IND,TEMP
"RTN","PXRMUTIL",246,0)
 I '$D(KEY) S KEY=1
"RTN","PXRMUTIL",247,0)
 F IC=1:1:N D
"RTN","PXRMUTIL",248,0)
 . S TEMP=@ARRAY@(IC)
"RTN","PXRMUTIL",249,0)
 . S ^TMP($J,"SORT",$P(TEMP,U,KEY))=TEMP
"RTN","PXRMUTIL",250,0)
 S IND=""
"RTN","PXRMUTIL",251,0)
 F IC=1:1 S IND=$O(^TMP($J,"SORT",IND)) Q:IND=""  D
"RTN","PXRMUTIL",252,0)
 . S @ARRAY@(IC)=^TMP($J,"SORT",IND)
"RTN","PXRMUTIL",253,0)
 K ^TMP($J,"SORT")
"RTN","PXRMUTIL",254,0)
 ;Get rid of any redundant elements.
"RTN","PXRMUTIL",255,0)
 F IND=IC:1:N K @ARRAY@(IND)
"RTN","PXRMUTIL",256,0)
 Q IC-1
"RTN","PXRMUTIL",257,0)
 ;
"RTN","PXRMUTIL",258,0)
 ;=======================================================================
"RTN","PXRMUTIL",259,0)
STRREP(STRING,TS,RS) ;Replace every occurence of the target string (TS)
"RTN","PXRMUTIL",260,0)
 ;in STRING with the replacement string (RS).
"RTN","PXRMUTIL",261,0)
 ;Example 9.19 (page 220) in "The Complete Mumps" by John Lewkowicz:
"RTN","PXRMUTIL",262,0)
 ;  F  Q:STRING'[TS  S STRING=$P(STRING,TS)_RS_$P(STRING,TS,2,999)
"RTN","PXRMUTIL",263,0)
 ;fails if any portion of the target string is contained in the with
"RTN","PXRMUTIL",264,0)
 ;string. Therefore a more elaborate version is required.
"RTN","PXRMUTIL",265,0)
 ;
"RTN","PXRMUTIL",266,0)
 N IND,NPCS,STR
"RTN","PXRMUTIL",267,0)
 I STRING'[TS Q STRING
"RTN","PXRMUTIL",268,0)
 ;Count the number of pieces using the target string as the delimiter.
"RTN","PXRMUTIL",269,0)
 S NPCS=$L(STRING,TS)
"RTN","PXRMUTIL",270,0)
 ;Extract the pieces and concatenate RS
"RTN","PXRMUTIL",271,0)
 S STR=""
"RTN","PXRMUTIL",272,0)
 F IND=1:1:NPCS-1 S STR=STR_$P(STRING,TS,IND)_RS
"RTN","PXRMUTIL",273,0)
 S STR=STR_$P(STRING,TS,NPCS)
"RTN","PXRMUTIL",274,0)
 Q STR
"RTN","PXRMUTIL",275,0)
 ;
"RTN","PXRMUTIL",276,0)
 ;=======================================================================
"RTN","PXRMUTIL",277,0)
VEDIT(ROOT,IEN) ;This is used as a DIC("S") screen to select which entries
"RTN","PXRMUTIL",278,0)
 ;a user can edit.
"RTN","PXRMUTIL",279,0)
 N CLASS,ENTRY,VALID
"RTN","PXRMUTIL",280,0)
 S ENTRY=ROOT_IEN_")"
"RTN","PXRMUTIL",281,0)
 S CLASS=$P($G(@ENTRY@(100)),U,1)
"RTN","PXRMUTIL",282,0)
 I CLASS="N" D
"RTN","PXRMUTIL",283,0)
 . I ($G(PXRMINST)=1),(DUZ(0)="@") S VALID=1
"RTN","PXRMUTIL",284,0)
 . E  S VALID=0
"RTN","PXRMUTIL",285,0)
 E  S VALID=1
"RTN","PXRMUTIL",286,0)
 Q VALID
"RTN","PXRMUTIL",287,0)
 ;
"SEC","^DIC",800,800,0,"AUDIT")
@
"SEC","^DIC",800,800,0,"DD")
@
"SEC","^DIC",800,800,0,"DEL")
@
"SEC","^DIC",800,800,0,"LAYGO")
@
"SEC","^DIC",800,800,0,"RD")

"SEC","^DIC",800,800,0,"WR")
@
"SEC","^DIC",811.6,811.6,0,"AUDIT")
@
"SEC","^DIC",811.6,811.6,0,"DD")
@
"SEC","^DIC",811.6,811.6,0,"DEL")
@
"SEC","^DIC",811.6,811.6,0,"LAYGO")
@
"SEC","^DIC",811.6,811.6,0,"RD")

"SEC","^DIC",811.6,811.6,0,"WR")
@
"VER")
8.0^22.0
"^DD",800,800,0)
FIELD^^14^15
"^DD",800,800,0,"DDA")
N
"^DD",800,800,0,"DT")
3011218
"^DD",800,800,0,"IX","B",800,.01)

"^DD",800,800,0,"NM","CLINICAL REMINDER PARAMETERS")

"^DD",800,800,0,"VRPK")
PXRM
"^DD",800,800,.01,0)
ONE^RNJ1,0^^0;1^K:+X'=X!(X>1)!(X<1)!(X?.E1"."1N.N) X
"^DD",800,800,.01,1,0)
^.1
"^DD",800,800,.01,1,1,0)
800^B
"^DD",800,800,.01,1,1,1)
S ^PXRM(800,"B",$E(X,1,30),DA)=""
"^DD",800,800,.01,1,1,2)
K ^PXRM(800,"B",$E(X,1,30),DA)
"^DD",800,800,.01,3)
Type a Number between 1 and 1, 0 Decimal Digits
"^DD",800,800,.01,21,0)
^.001^2^2^3000508^^^^
"^DD",800,800,.01,21,1,0)
This file contains parameters used by the Clinical Reminders. There is
"^DD",800,800,.01,21,2,0)
only one entry.
"^DD",800,800,.01,23,0)
^.001^1^1^3000508^^^^
"^DD",800,800,.01,23,1,0)
There is one entry in this file.
"^DD",800,800,.01,"DT")
2990209
"^DD",800,800,1,0)
DEFAULT REMINDER DISCLAIMER^800.01^^DISC1;0
"^DD",800,800,1,21,0)
^.001^2^2^3010904^^^^
"^DD",800,800,1,21,1,0)
This is the default reminder disclaimer that is distributed with the
"^DD",800,800,1,21,2,0)
package.
"^DD",800,800,2,0)
SITE REMINDER DISCLAIMER^800.02^^DISC2;0
"^DD",800,800,2,21,0)
^^3^3^3000508^
"^DD",800,800,2,21,1,0)
This is the site defined reminder disclaimer. If there is an entry in
"^DD",800,800,2,21,2,0)
this field then the site defined disclaimer will override the default
"^DD",800,800,2,21,3,0)
disclaimer.
"^DD",800,800,3,0)
MAIL GROUP FOR ERRORS^P3.8^XMB(3.8,^MGFE;1^Q
"^DD",800,800,3,3)
Enter the name of the MailMan group that will receive reminder evaluation error messages.
"^DD",800,800,3,21,0)
^.001^4^4^3000508^^^^
"^DD",800,800,3,21,1,0)
When there is an error during reminder evaluation members of this
"^DD",800,800,3,21,2,0)
MailMan mail group will be sent a message notifying them of the error.
"^DD",800,800,3,21,3,0)
If there is no entry in this field then the error message will go to
"^DD",800,800,3,21,4,0)
the user.
"^DD",800,800,3,"DT")
2990209
"^DD",800,800,4,0)
WEB SITES^800.04^^1;0
"^DD",800,800,4,21,0)
^.001^1^1^3000508^^^^
"^DD",800,800,4,21,1,0)
This is a list of web sites for general reminder information.
"^DD",800,800,4,"DT")
2991129
"^DD",800,800,5,0)
VERSION^F^^VERSION;1^K:$L(X)>20!($L(X)<3) X
"^DD",800,800,5,3)
Answer must be 3-20 characters in length.
"^DD",800,800,5,21,0)
^^1^1^3000706^
"^DD",800,800,5,21,1,0)
This is the current version of the Clinical Reminders package.
"^DD",800,800,5,"DT")
3000706
"^DD",800,800,6,0)
FULL SSN^S^Y:YES;N:NO;^FULL SSN;1^Q
"^DD",800,800,6,21,0)
^^5^5^3011031^
"^DD",800,800,6,21,1,0)
This field is the default for the Reminders Due report but may be modified
"^DD",800,800,6,21,2,0)
at run time. If the FULL SSN field equals Y then the full SSN is printed.
"^DD",800,800,6,21,3,0)
Otherwise only the first four digits of the SSN are printed.
"^DD",800,800,6,21,4,0)
 
"^DD",800,800,6,21,5,0)
The standard setting for this field is Y. 
"^DD",800,800,6,"DT")
3010802
"^DD",800,800,7,0)
INITIAL MST SYNCH COMP DATE^D^^MST;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",800,800,7,21,0)
^.001^1^1^3010904^^
"^DD",800,800,7,21,1,0)
This is the date and time the initial MST synchronization was completed.
"^DD",800,800,7,"DT")
3010904
"^DD",800,800,8,0)
INITIAL MST SYNCH UPDATE COUNT^NJ7,0^^MST;2^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",800,800,8,3)
Type a Number between 0 and 9999999, 0 Decimal Digits
"^DD",800,800,8,21,0)
^^2^2^3010828^
"^DD",800,800,8,21,1,0)
This is the number of updates that were made during the initial
"^DD",800,800,8,21,2,0)
synchronization.
"^DD",800,800,8,"DT")
3010904
"^DD",800,800,9,0)
DAILY MST SYNC COMP DATE^D^^MST;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",800,800,9,21,0)
^^1^1^3010828^
"^DD",800,800,9,21,1,0)
This is the date and time the last daily MST synchronization was completed.
"^DD",800,800,9,"DT")
3010904
"^DD",800,800,10,0)
DAILY MST SYNCH UPDATE COUNT^NJ7,0^^MST;4^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",800,800,10,3)
Type a Number between 0 and 9999999, 0 Decimal Digits
"^DD",800,800,10,21,0)
^.001^1^1^3010904^^
"^DD",800,800,10,21,1,0)
This is the number of updates made during the last daily MST synchronization.
"^DD",800,800,10,"DT")
3010904
"^DD",800,800,11,0)
INITIAL MST SYNCH START DATE^D^^MST;5^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",800,800,11,21,0)
^.001^2^2^3011031^^
"^DD",800,800,11,21,1,0)
This is the date and time the initial Clinical Reminders MST
"^DD",800,800,11,21,2,0)
synchronization was set to run.
"^DD",800,800,11,"DT")
3010904
"^DD",800,800,12,0)
DAILY MST SYNCH START DATE^D^^MST;6^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",800,800,12,21,0)
^^2^2^3010904^
"^DD",800,800,12,21,1,0)
This is the date and time the last daily Clinical Reminders MST
"^DD",800,800,12,21,2,0)
synchronization was set to start.
"^DD",800,800,12,"DT")
3010904
"^DD",800,800,13,0)
TRUNCATE EMPLOYEE SSN^S^Y:YES;N:NO;^TRUNCATE EMPLOYEE SSN;1^Q
"^DD",800,800,13,3)
Enter 'N' only if full employee SSN is required on reports.
"^DD",800,800,13,21,0)
^^10^10^3011205^
"^DD",800,800,13,21,1,0)
The detailed reminders due report has the option to print the full SSN for
"^DD",800,800,13,21,2,0)
the patients selected (see FULL SSN field). However, if a patient is an
"^DD",800,800,13,21,3,0)
employee (fields 361 and 391 in PATIENT file) the SSN will be truncated.
"^DD",800,800,13,21,4,0)
 
"^DD",800,800,13,21,5,0)
If a site, for their own reasons, requires the full SSN for employees to
"^DD",800,800,13,21,6,0)
be printed on their reports then this may be done by setting the TRUNCATE
"^DD",800,800,13,21,7,0)
EMPLOYEE SSN field to 'No'.
"^DD",800,800,13,21,8,0)
 
"^DD",800,800,13,21,9,0)
The default value installed for this field is 'Yes'. This ensures that 
"^DD",800,800,13,21,10,0)
full employee SSN's are not printed on the report. 
"^DD",800,800,13,"DT")
3011205
"^DD",800,800,14,0)
EDIT HISTORY COUNT^NJ3,0^^EDIT HISTORY COUNT;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",800,800,14,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",800,800,14,21,0)
^^2^2^3020115^
"^DD",800,800,14,21,1,0)
This field is used by reminder inquiry to determine how many occurrences 
"^DD",800,800,14,21,2,0)
of the edit history to display. The default is the last two occurrences.
"^DD",800,800,14,"DT")
3011218
"^DD",800,800.01,0)
DEFAULT REMINDER DISCLAIMER SUB-FIELD^^.01^1
"^DD",800,800.01,0,"DT")
2990209
"^DD",800,800.01,0,"NM","DEFAULT REMINDER DISCLAIMER")

"^DD",800,800.01,0,"UP")
800
"^DD",800,800.01,.01,0)
DEFAULT REMINDER DISCLAIMER^W^^0;1^Q
"^DD",800,800.01,.01,3)
Do not edit the default disclaimer.
"^DD",800,800.01,.01,"DT")
2990209
"^DD",800,800.02,0)
SITE REMINDER DISCLAIMER SUB-FIELD^^.01^1
"^DD",800,800.02,0,"DT")
2990209
"^DD",800,800.02,0,"NM","SITE REMINDER DISCLAIMER")

"^DD",800,800.02,0,"UP")
800
"^DD",800,800.02,.01,0)
SITE REMINDER DISCLAIMER^W^^0;1^Q
"^DD",800,800.02,.01,3)
Enter the site defined reminder disclaimer.
"^DD",800,800.02,.01,21,0)
^.001^1^1^3000508^^
"^DD",800,800.02,.01,21,1,0)
This is the site defined reminder disclaimer.
"^DD",800,800.02,.01,"DT")
2990209
"^DD",800,800.04,0)
WEB SITES SUB-FIELD^^1^3
"^DD",800,800.04,0,"DT")
2991130
"^DD",800,800.04,0,"IX","B",800.04,.01)

"^DD",800,800.04,0,"NM","WEB SITES")

"^DD",800,800.04,0,"UP")
800
"^DD",800,800.04,.01,0)
URL^MF^^0;1^K:$L(X)>128!($L(X)<1) X
"^DD",800,800.04,.01,1,0)
^.1
"^DD",800,800.04,.01,1,1,0)
800.04^B
"^DD",800,800.04,.01,1,1,1)
S ^PXRM(800,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",800,800.04,.01,1,1,2)
K ^PXRM(800,DA(1),1,"B",$E(X,1,30),DA)
"^DD",800,800.04,.01,3)
Enter the URL for the web site.
"^DD",800,800.04,.01,21,0)
^.001^1^1^3000508^^^^
"^DD",800,800.04,.01,21,1,0)
This is the URL for the web site.
"^DD",800,800.04,.01,"DT")
2991129
"^DD",800,800.04,.02,0)
WEB SITE TITLE^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",800,800.04,.02,3)
Enter the web site title, up to 60 characters.
"^DD",800,800.04,.02,21,0)
^.001^1^1^3000508^^
"^DD",800,800.04,.02,21,1,0)
This is the web site title.
"^DD",800,800.04,.02,"DT")
2991130
"^DD",800,800.04,1,0)
WEB SITE DESCRIPTION^800.41^^1;0
"^DD",800,800.04,1,21,0)
^^1^1^3000508^
"^DD",800,800.04,1,21,1,0)
This is a description of the web site.
"^DD",800,800.41,0)
WEB SITE DESCRIPTION SUB-FIELD^^.01^1
"^DD",800,800.41,0,"DT")
2991130
"^DD",800,800.41,0,"NM","WEB SITE DESCRIPTION")

"^DD",800,800.41,0,"UP")
800.04
"^DD",800,800.41,.01,0)
WEB SITE DESCRIPTION^W^^0;1^Q
"^DD",800,800.41,.01,3)
Enter the web site description.
"^DD",800,800.41,.01,21,0)
^.001^2^2^3000508^^
"^DD",800,800.41,.01,21,1,0)
This is the web site description. It is used to give more information
"^DD",800,800.41,.01,21,2,0)
about why this web site is relevant for clinical reminders.
"^DD",800,800.41,.01,"DT")
2991130
"^DD",811.6,811.6,0)
FIELD^^2^4
"^DD",811.6,811.6,0,"DDA")
N
"^DD",811.6,811.6,0,"DT")
3010905
"^DD",811.6,811.6,0,"ID",.02)
W "   ",@("$P($P($C(59)_$S($D(^DD(811.6,.02,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,2)_"":"",2),$C(59),1)")
"^DD",811.6,811.6,0,"NM","REMINDER SPONSOR")

"^DD",811.6,811.6,0,"PT",801.41,101)

"^DD",811.6,811.6,0,"PT",811.2,101)

"^DD",811.6,811.6,0,"PT",811.4,101)

"^DD",811.6,811.6,0,"PT",811.5,101)

"^DD",811.6,811.6,0,"PT",811.62,.01)

"^DD",811.6,811.6,0,"PT",811.9,101)

"^DD",811.6,811.6,0,"VRPK")
PXRM
"^DD",811.6,811.6,.01,0)
NAME^RF^^0;1^K:$L(X)>225!($L(X)<3)!'(X'?1P.E) X
"^DD",811.6,811.6,.01,1,0)
^.1^^0
"^DD",811.6,811.6,.01,3)
Answer must be 3-225 characters in length.
"^DD",811.6,811.6,.01,21,0)
^.001^2^2^3010830^^^^
"^DD",811.6,811.6,.01,21,1,0)
This is the name of a group or organization that sponsors reminder
"^DD",811.6,811.6,.01,21,2,0)
components.
"^DD",811.6,811.6,.01,"DEL",1,0)
I $$INUSE^PXRMSPED(DA)
"^DD",811.6,811.6,.01,"DT")
3010829
"^DD",811.6,811.6,.02,0)
CLASS^RSX^N:NATIONAL;V:VISN;L:LOCAL;^0;2^K:'$$VCLASS^PXRMINTR(X) X
"^DD",811.6,811.6,.02,3)
Enter the class.
"^DD",811.6,811.6,.02,21,0)
^.001^1^1^3010501^^^^
"^DD",811.6,811.6,.02,21,1,0)
This is the class of organization or group that the sponsor is.
"^DD",811.6,811.6,.02,"DT")
3010605
"^DD",811.6,811.6,1,0)
CONTACT INFORMATION^811.61^^1;0
"^DD",811.6,811.6,1,21,0)
^.001^1^1^3010905^^^^
"^DD",811.6,811.6,1,21,1,0)
This multiple contains a list of contacts at the sponsor organization.
"^DD",811.6,811.6,2,0)
ASSOCIATED SPONSORS^811.62P^^2;0
"^DD",811.6,811.61,0)
CONTACT INFORMATION SUB-FIELD^^1^2
"^DD",811.6,811.61,0,"DT")
3010905
"^DD",811.6,811.61,0,"IX","B",811.61,.01)

"^DD",811.6,811.61,0,"NM","CONTACT INFORMATION")

"^DD",811.6,811.61,0,"UP")
811.6
"^DD",811.6,811.61,.01,0)
CONTACT^MF^^0;1^K:$L(X)>64!($L(X)<3) X
"^DD",811.6,811.61,.01,1,0)
^.1
"^DD",811.6,811.61,.01,1,1,0)
811.61^B
"^DD",811.6,811.61,.01,1,1,1)
S ^PXRMD(811.6,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",811.6,811.61,.01,1,1,2)
K ^PXRMD(811.6,DA(1),1,"B",$E(X,1,30),DA)
"^DD",811.6,811.61,.01,3)
Answer must be 3-64 characters in length.
"^DD",811.6,811.61,.01,"DT")
3010905
"^DD",811.6,811.61,1,0)
DETAILED INFORMATION^811.611^^1;0
"^DD",811.6,811.611,0)
DETAILED INFORMATION SUB-FIELD^^.01^1
"^DD",811.6,811.611,0,"DT")
3010905
"^DD",811.6,811.611,0,"NM","DETAILED INFORMATION")

"^DD",811.6,811.611,0,"UP")
811.61
"^DD",811.6,811.611,.01,0)
DETAILED INFORMATION^WL^^0;1^Q
"^DD",811.6,811.611,.01,"DT")
3010905
"^DD",811.6,811.62,0)
ASSOCIATED SPONSORS SUB-FIELD^^.01^1
"^DD",811.6,811.62,0,"DT")
3010830
"^DD",811.6,811.62,0,"IX","B",811.62,.01)

"^DD",811.6,811.62,0,"NM","ASSOCIATED SPONSORS")

"^DD",811.6,811.62,0,"UP")
811.6
"^DD",811.6,811.62,.01,0)
ASSOCIATED SPONSORS^MP811.6'X^PXRMD(811.6,^0;1^K:'$$VASP^PXRMINTR(X) X
"^DD",811.6,811.62,.01,1,0)
^.1
"^DD",811.6,811.62,.01,1,1,0)
811.62^B
"^DD",811.6,811.62,.01,1,1,1)
S ^PXRMD(811.6,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",811.6,811.62,.01,1,1,2)
K ^PXRMD(811.6,DA(1),2,"B",$E(X,1,30),DA)
"^DD",811.6,811.62,.01,3)
Enter an associated sponsor.
"^DD",811.6,811.62,.01,"DT")
3010830
"^DD",811.8,811.8,0)
FIELD^^130^8
"^DD",811.8,811.8,0,"DDA")
N
"^DD",811.8,811.8,0,"DT")
3010313
"^DD",811.8,811.8,0,"NM","REMINDER EXCHANGE FILE")

"^DD",811.8,811.8,0,"SCR")
I 0>1
"^DD",811.8,811.8,0,"VRPK")
PXRM
"^DD",811.8,811.8,.01,0)
NAME^RFX^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E) X
"^DD",811.8,811.8,.01,.1)

"^DD",811.8,811.8,.01,1,0)
^.1^^0
"^DD",811.8,811.8,.01,3)
Answer must be 3-64 characters in length.
"^DD",811.8,811.8,.01,21,0)
^.001^2^2^3010316^^^^
"^DD",811.8,811.8,.01,21,1,0)
This is the name of the entry in the Exchange File. It will be the same
"^DD",811.8,811.8,.01,21,2,0)
as the name of the reminder definition that was packed.
"^DD",811.8,811.8,.01,"DT")
3010601
"^DD",811.8,811.8,.02,0)
SOURCE^F^^0;2^K:$L(X)>64!($L(X)<3) X
"^DD",811.8,811.8,.02,3)
Answer must be 3-64 characters in length.
"^DD",811.8,811.8,.02,21,0)
^^2^2^3010316^
"^DD",811.8,811.8,.02,21,1,0)
This is the source of the packed reminder. It will contain the name of
"^DD",811.8,811.8,.02,21,2,0)
person who packed it and their site.
"^DD",811.8,811.8,.02,"DT")
3000706
"^DD",811.8,811.8,.03,0)
DATE PACKED^D^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",811.8,811.8,.03,21,0)
^^3^3^3010316^
"^DD",811.8,811.8,.03,21,1,0)
This is the date and time the reminder was originally packed. When a
"^DD",811.8,811.8,.03,21,2,0)
packed reminder is put into the Exchange File from a MailMan message or
"^DD",811.8,811.8,.03,21,3,0)
a host file this will reflect the original packing date and time.
"^DD",811.8,811.8,.03,"DT")
3000712
"^DD",811.8,811.8,100,0)
DATA^811.801A^^100;0
"^DD",811.8,811.8,100,21,0)
^^1^1^3010316^
"^DD",811.8,811.8,100,21,1,0)
This node contains the actual packed reminder as XML data.
"^DD",811.8,811.8,110,0)
DESCRIPTION^811.804^^110;0
"^DD",811.8,811.8,110,21,0)
^.001^4^4^3010530^^^
"^DD",811.8,811.8,110,21,1,0)
This contains formatted information about the Exchange File entry. It
"^DD",811.8,811.8,110,21,2,0)
includes source information, a brief description, and keywords. This
"^DD",811.8,811.8,110,21,3,0)
information will be displayed when an entry is selected for possible
"^DD",811.8,811.8,110,21,4,0)
installation.
"^DD",811.8,811.8,119,0)
NUMBER OF UNIQUE COMPONENTS^NJ6,0^^110;1^K:+X'=X!(X>100000)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.8,811.8,119,3)
Type a Number between 0 and 100000, 0 Decimal Digits
"^DD",811.8,811.8,119,21,0)
^^1^1^3010316^
"^DD",811.8,811.8,119,21,1,0)
This is the number of unique components in the packed reminder.
"^DD",811.8,811.8,119,"DT")
3001103
"^DD",811.8,811.8,120,0)
COMPONENT LIST^811.802A^^120;0
"^DD",811.8,811.8,120,21,0)
^.001^1^1^3010316^^
"^DD",811.8,811.8,120,21,1,0)
This is a list of components that are included in the packed reminder.
"^DD",811.8,811.8,130,0)
INSTALLATION HISTORY^811.803DA^^130;0
"^DD",811.8,811.8,130,21,0)
^.001^2^2^3010316^^
"^DD",811.8,811.8,130,21,1,0)
This multiple is used to record a history of every time a packed
"^DD",811.8,811.8,130,21,2,0)
reminder is installed.
"^DD",811.8,811.801,0)
DATA SUB-FIELD^I^.01^1
"^DD",811.8,811.801,0,"DT")
3000706
"^DD",811.8,811.801,0,"IX","B",811.801,.01)

"^DD",811.8,811.801,0,"NM","DATA")

"^DD",811.8,811.801,0,"UP")
811.8
"^DD",811.8,811.801,.01,0)
DATA^F^^0;1^K:$L(X)>245!($L(X)<1) X
"^DD",811.8,811.801,.01,1,0)
^.1
"^DD",811.8,811.801,.01,1,1,0)
811.801^B
"^DD",811.8,811.801,.01,1,1,1)
S ^PXD(811.8,DA(1),100,"B",$E(X,1,30),DA)=""
"^DD",811.8,811.801,.01,1,1,2)
K ^PXD(811.8,DA(1),100,"B",$E(X,1,30),DA)
"^DD",811.8,811.801,.01,3)
Answer must be 1-245 characters in length.
"^DD",811.8,811.801,.01,21,0)
^^1^1^3010316^
"^DD",811.8,811.801,.01,21,1,0)
This is a line of XML data.
"^DD",811.8,811.801,.01,"DT")
3000706
"^DD",811.8,811.802,0)
COMPONENT LIST SUB-FIELD^^1^4
"^DD",811.8,811.802,0,"DT")
3010130
"^DD",811.8,811.802,0,"NM","COMPONENT LIST")

"^DD",811.8,811.802,0,"UP")
811.8
"^DD",811.8,811.802,.01,0)
COMPONENT^F^^0;1^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.802,.01,1,0)
^.1^^0
"^DD",811.8,811.802,.01,3)
Answer must be 1-64 characters in length.
"^DD",811.8,811.802,.01,21,0)
^^1^1^3010316^
"^DD",811.8,811.802,.01,21,1,0)
This is the name of the component, for example ROUTINE or EDUCATION TOPIC.
"^DD",811.8,811.802,.01,"DT")
3000728
"^DD",811.8,811.802,.02,0)
FILE NUMBER^NJ14,4^^0;2^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."5N.N) X
"^DD",811.8,811.802,.02,3)
Type a Number between 1 and 999999999, 4 Decimal Digits
"^DD",811.8,811.802,.02,21,0)
^^2^2^3010316^
"^DD",811.8,811.802,.02,21,1,0)
This is the file number of the component. If the component is a routine
"^DD",811.8,811.802,.02,21,2,0)
then the file number will be 0.
"^DD",811.8,811.802,.02,"DT")
3001101
"^DD",811.8,811.802,.03,0)
NUMBER OF ITEMS^NJ4,0^^0;3^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.802,.03,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",811.8,811.802,.03,21,0)
^^4^4^3010316^
"^DD",811.8,811.802,.03,21,1,0)
This is the number of this type of component that are included in the
"^DD",811.8,811.802,.03,21,2,0)
packed reminder. For example, if this particular component is Health
"^DD",811.8,811.802,.03,21,3,0)
Factors and there are three of them in the packed reminder the NUMBER
"^DD",811.8,811.802,.03,21,4,0)
OF ITEMS would be 3.
"^DD",811.8,811.802,.03,"DT")
3001101
"^DD",811.8,811.802,1,0)
ITEM LIST^811.8021A^^1;0
"^DD",811.8,811.802,1,21,0)
^^3^3^3010316^
"^DD",811.8,811.802,1,21,1,0)
This is the list of items of the component type. For example, if the
"^DD",811.8,811.802,1,21,2,0)
component type is health factors and there are three of them the three
"^DD",811.8,811.802,1,21,3,0)
entries are specified in this list.
"^DD",811.8,811.8021,0)
ITEM LIST SUB-FIELD^^2^5
"^DD",811.8,811.8021,0,"DT")
3010130
"^DD",811.8,811.8021,0,"IX","B",811.8021,.01)

"^DD",811.8,811.8021,0,"NM","ITEM LIST")

"^DD",811.8,811.8021,0,"UP")
811.802
"^DD",811.8,811.8021,.01,0)
ITEM^F^^0;1^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.8021,.01,1,0)
^.1
"^DD",811.8,811.8021,.01,1,1,0)
811.8021^B
"^DD",811.8,811.8021,.01,1,1,1)
S ^PXD(811.8,DA(2),120,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",811.8,811.8021,.01,1,1,2)
K ^PXD(811.8,DA(2),120,DA(1),1,"B",$E(X,1,30),DA)
"^DD",811.8,811.8021,.01,3)
Answer must be 1-64 characters in length.
"^DD",811.8,811.8021,.01,21,0)
^^1^1^3010316^
"^DD",811.8,811.8021,.01,21,1,0)
This is the name of the item.
"^DD",811.8,811.8021,.01,"DT")
3000728
"^DD",811.8,811.8021,.02,0)
START LINE^NJ4,0^^0;2^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.8021,.02,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",811.8,811.8021,.02,21,0)
^^1^1^3010316^
"^DD",811.8,811.8021,.02,21,1,0)
This is the line in node 100 where the data for this item starts.
"^DD",811.8,811.8021,.02,"DT")
3000728
"^DD",811.8,811.8021,.03,0)
END LINE^NJ4,0^^0;3^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.8021,.03,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",811.8,811.8021,.03,21,0)
^^1^1^3010316^
"^DD",811.8,811.8021,.03,21,1,0)
This is the line in node 100 where the data for this item ends.
"^DD",811.8,811.8021,.03,"DT")
3000728
"^DD",811.8,811.8021,1,0)
IEN ROOT START LINE^NJ4,0^^0;4^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.8021,1,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",811.8,811.8021,1,21,0)
^^1^1^3010316^
"^DD",811.8,811.8021,1,21,1,0)
This is the line in node 100 where the ien root for this item starts.
"^DD",811.8,811.8021,1,"DT")
3010130
"^DD",811.8,811.8021,2,0)
IEN ROOT END LINE^NJ4,0^^0;5^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.8021,2,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",811.8,811.8021,2,21,0)
^^1^1^3010316^
"^DD",811.8,811.8021,2,21,1,0)
This is the line in node 100 where the ien root ends.
"^DD",811.8,811.8021,2,"DT")
3010130
"^DD",811.8,811.803,0)
INSTALLATION HISTORY SUB-FIELD^^1^3
"^DD",811.8,811.803,0,"DT")
3010313
"^DD",811.8,811.803,0,"NM","INSTALLATION HISTORY")

"^DD",811.8,811.803,0,"UP")
811.8
"^DD",811.8,811.803,.01,0)
INSTALLATION DATE AND TIME^D^^0;1^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",811.8,811.803,.01,1,0)
^.1^^0
"^DD",811.8,811.803,.01,21,0)
^^1^1^3010316^
"^DD",811.8,811.803,.01,21,1,0)
This is the date and time of the installation.
"^DD",811.8,811.803,.01,"DT")
3001121
"^DD",811.8,811.803,.02,0)
INSTALLED BY^F^^0;2^K:$L(X)>45!($L(X)<1) X
"^DD",811.8,811.803,.02,3)
Answer must be 1-45 characters in length.
"^DD",811.8,811.803,.02,21,0)
^^1^1^3010316^
"^DD",811.8,811.803,.02,21,1,0)
This is the person who did the installation.
"^DD",811.8,811.803,.02,"DT")
3001116
"^DD",811.8,811.803,1,0)
COMPONENT LIST^811.8031A^^1;0
"^DD",811.8,811.803,1,21,0)
^.001^2^2^3010316^^
"^DD",811.8,811.803,1,21,1,0)
This list contains a multiple of the packed reminder components that
"^DD",811.8,811.803,1,21,2,0)
were selected as part of this installation.
"^DD",811.8,811.8031,0)
COMPONENT LIST SUB-FIELD^^5^6
"^DD",811.8,811.8031,0,"DT")
3010313
"^DD",811.8,811.8031,0,"IX","B",811.8031,.01)

"^DD",811.8,811.8031,0,"NM","COMPONENT LIST")

"^DD",811.8,811.8031,0,"UP")
811.803
"^DD",811.8,811.8031,.01,0)
INDEX^NJ6,0^^0;1^K:+X'=X!(X>100000)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.8,811.8031,.01,1,0)
^.1
"^DD",811.8,811.8031,.01,1,1,0)
811.8031^B
"^DD",811.8,811.8031,.01,1,1,1)
S ^PXD(811.8,DA(2),130,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",811.8,811.8031,.01,1,1,2)
K ^PXD(811.8,DA(2),130,DA(1),1,"B",$E(X,1,30),DA)
"^DD",811.8,811.8031,.01,3)
Type a Number between 0 and 100000, 0 Decimal Digits
"^DD",811.8,811.8031,.01,21,0)
^.001^2^2^3010316^^
"^DD",811.8,811.8031,.01,21,1,0)
This number corresponds to the item number in the ListManager display
"^DD",811.8,811.8031,.01,21,2,0)
of the components in the Exchange File entry.
"^DD",811.8,811.8031,.01,"DT")
3001115
"^DD",811.8,811.8031,1,0)
COMPONENT^F^^0;2^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.8031,1,3)
Answer must be 1-64 characters in length.
"^DD",811.8,811.8031,1,21,0)
^^1^1^3010316^
"^DD",811.8,811.8031,1,21,1,0)
This is the type of component, Education Topic, Health Factor, etc.
"^DD",811.8,811.8031,1,"DT")
3001115
"^DD",811.8,811.8031,2,0)
ITEM^F^^0;3^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.8031,2,3)
Answer must be 1-64 characters in length.
"^DD",811.8,811.8031,2,21,0)
^^2^2^3010316^
"^DD",811.8,811.8031,2,21,1,0)
This is the name of the component. For example, if the component is a
"^DD",811.8,811.8031,2,21,2,0)
health factor then this is the name of the health factor.
"^DD",811.8,811.8031,2,"DT")
3001115
"^DD",811.8,811.8031,3,0)
ACTION^F^^0;4^K:$L(X)>4!($L(X)<1) X
"^DD",811.8,811.8031,3,3)
Answer must be 1-4 characters in length.
"^DD",811.8,811.8031,3,21,0)
^^1^1^3010316^
"^DD",811.8,811.8031,3,21,1,0)
This is the action that was taken with the item.
"^DD",811.8,811.8031,3,"DT")
3001115
"^DD",811.8,811.8031,4,0)
NEWNAME^F^^0;5^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.8031,4,3)
Answer must be 1-64 characters in length.
"^DD",811.8,811.8031,4,21,0)
^^1^1^3010316^
"^DD",811.8,811.8031,4,21,1,0)
If the item was copied to a new name then the new name is stored here.
"^DD",811.8,811.8031,4,"DT")
3001115
"^DD",811.8,811.8031,5,0)
ADDITIONAL DETAILS^811.80315A^^1;0
"^DD",811.8,811.8031,5,21,0)
^.001^3^3^3010316^^
"^DD",811.8,811.8031,5,21,1,0)
This multiple is used to store additional details about the
"^DD",811.8,811.8031,5,21,2,0)
installation. As an example, if a finding in a reminder definition is
"^DD",811.8,811.8031,5,21,3,0)
replaced with another finding that information is stored here.
"^DD",811.8,811.80315,0)
ADDITIONAL DETAILS SUB-FIELD^^.01^1
"^DD",811.8,811.80315,0,"DT")
3010313
"^DD",811.8,811.80315,0,"IX","B",811.80315,.01)

"^DD",811.8,811.80315,0,"NM","ADDITIONAL DETAILS")

"^DD",811.8,811.80315,0,"UP")
811.8031
"^DD",811.8,811.80315,.01,0)
ADDITIONAL DETAILS^F^^0;1^K:$L(X)>80!($L(X)<1) X
"^DD",811.8,811.80315,.01,1,0)
^.1
"^DD",811.8,811.80315,.01,1,1,0)
811.80315^B
"^DD",811.8,811.80315,.01,1,1,1)
S ^PXD(811.8,DA(3),130,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",811.8,811.80315,.01,1,1,2)
K ^PXD(811.8,DA(3),130,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",811.8,811.80315,.01,3)
Answer must be 1-80 characters in length.
"^DD",811.8,811.80315,.01,21,0)
^^1^1^3010316^
"^DD",811.8,811.80315,.01,21,1,0)
This is a line of additional information.
"^DD",811.8,811.80315,.01,"DT")
3010313
"^DD",811.8,811.804,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.8,811.804,0,"DT")
3001221
"^DD",811.8,811.804,0,"NM","DESCRIPTION")

"^DD",811.8,811.804,0,"UP")
811.8
"^DD",811.8,811.804,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",811.8,811.804,.01,"DT")
3001221
"^DIC",800,800,0)
CLINICAL REMINDER PARAMETERS^800
"^DIC",800,800,0,"GL")
^PXRM(800,
"^DIC",800,800,"%",0)
^1.005^^0
"^DIC",800,800,"%D",0)
^^2^2^3000608^
"^DIC",800,800,"%D",1,0)
This file has one entry that contains parameters used by Clinical
"^DIC",800,800,"%D",2,0)
Reminders.
"^DIC",800,"B","CLINICAL REMINDER PARAMETERS",800)

"^DIC",811.6,811.6,0)
REMINDER SPONSOR^811.6
"^DIC",811.6,811.6,0,"GL")
^PXRMD(811.6,
"^DIC",811.6,811.6,"%",0)
^1.005^^0
"^DIC",811.6,811.6,"%D",0)
^^5^5^3010607^^^^
"^DIC",811.6,811.6,"%D",1,0)
This file contains the names of groups or organizations that are sponsors
"^DIC",811.6,811.6,"%D",2,0)
of reminder components such as definitions, terms, and dialogs.
"^DIC",811.6,811.6,"%D",3,0)

"^DIC",811.6,811.6,"%D",4,0)
Entries cannot be edited using FileMan, you must use the Reminder
"^DIC",811.6,811.6,"%D",5,0)
Sponsor Edit option.
"^DIC",811.6,"B","REMINDER SPONSOR",811.6)

"^DIC",811.8,811.8,0)
REMINDER EXCHANGE FILE^811.8
"^DIC",811.8,811.8,0,"GL")
^PXD(811.8,
"^DIC",811.8,811.8,"%",0)
^1.005^^0
"^DIC",811.8,811.8,"%D",0)
^^2^2^3010601^^^^
"^DIC",811.8,811.8,"%D",1,0)
The Reminder Exchange File is used to store packed reminder
"^DIC",811.8,811.8,"%D",2,0)
definitions. Entries in this file should never be edited.
"^DIC",811.8,"B","REMINDER EXCHANGE FILE",811.8)

**END**
**END**
