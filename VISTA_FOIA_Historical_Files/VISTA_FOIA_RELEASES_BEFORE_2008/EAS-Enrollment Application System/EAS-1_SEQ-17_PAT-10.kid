Released EAS*1*10 SEQ #17
Extracted from mail message
**KIDS**:EAS*1.0*10^

**INSTALL NAME**
EAS*1.0*10
"BLD",4324,0)
EAS*1.0*10^ENROLLMENT APPLICATION SYSTEM^0^3021112^y
"BLD",4324,1,0)
^^1^1^3021024^
"BLD",4324,1,1,0)
See national patch module for detailed description.
"BLD",4324,4,0)
^9.64PA^^
"BLD",4324,"ABPKG")
n
"BLD",4324,"KRN",0)
^9.67PA^8989.52^19
"BLD",4324,"KRN",.4,0)
.4
"BLD",4324,"KRN",.401,0)
.401
"BLD",4324,"KRN",.402,0)
.402
"BLD",4324,"KRN",.403,0)
.403
"BLD",4324,"KRN",.5,0)
.5
"BLD",4324,"KRN",.84,0)
.84
"BLD",4324,"KRN",3.6,0)
3.6
"BLD",4324,"KRN",3.8,0)
3.8
"BLD",4324,"KRN",9.2,0)
9.2
"BLD",4324,"KRN",9.8,0)
9.8
"BLD",4324,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",4324,"KRN",9.8,"NM",1,0)
EASXDR^^0^B30215977
"BLD",4324,"KRN",9.8,"NM",2,0)
EASXDR1^^0^B71069317
"BLD",4324,"KRN",9.8,"NM",3,0)
EASXDRPT^^0^B23237326
"BLD",4324,"KRN",9.8,"NM",4,0)
EASXDRUT^^0^B3180685
"BLD",4324,"KRN",9.8,"NM",5,0)
EASXRPT1^^0^B15104519
"BLD",4324,"KRN",9.8,"NM","B","EASXDR",1)

"BLD",4324,"KRN",9.8,"NM","B","EASXDR1",2)

"BLD",4324,"KRN",9.8,"NM","B","EASXDRPT",3)

"BLD",4324,"KRN",9.8,"NM","B","EASXDRUT",4)

"BLD",4324,"KRN",9.8,"NM","B","EASXRPT1",5)

"BLD",4324,"KRN",19,0)
19
"BLD",4324,"KRN",19,"NM",0)
^9.68A^4^4
"BLD",4324,"KRN",19,"NM",1,0)
DG MEANS TEST SUPERVISOR MENU^^2
"BLD",4324,"KRN",19,"NM",2,0)
EAS DELETE MT/COPAY DEPENDENT^^0
"BLD",4324,"KRN",19,"NM",3,0)
EAS DUPLICATE DEPENDENTS RPT^^0
"BLD",4324,"KRN",19,"NM",4,0)
EAS MERGE DUP MT/COPAY DEP^^0
"BLD",4324,"KRN",19,"NM","B","DG MEANS TEST SUPERVISOR MENU",1)

"BLD",4324,"KRN",19,"NM","B","EAS DELETE MT/COPAY DEPENDENT",2)

"BLD",4324,"KRN",19,"NM","B","EAS DUPLICATE DEPENDENTS RPT",3)

"BLD",4324,"KRN",19,"NM","B","EAS MERGE DUP MT/COPAY DEP",4)

"BLD",4324,"KRN",19.1,0)
19.1
"BLD",4324,"KRN",101,0)
101
"BLD",4324,"KRN",409.61,0)
409.61
"BLD",4324,"KRN",771,0)
771
"BLD",4324,"KRN",870,0)
870
"BLD",4324,"KRN",8989.51,0)
8989.51
"BLD",4324,"KRN",8989.52,0)
8989.52
"BLD",4324,"KRN",8994,0)
8994
"BLD",4324,"KRN","B",.4,.4)

"BLD",4324,"KRN","B",.401,.401)

"BLD",4324,"KRN","B",.402,.402)

"BLD",4324,"KRN","B",.403,.403)

"BLD",4324,"KRN","B",.5,.5)

"BLD",4324,"KRN","B",.84,.84)

"BLD",4324,"KRN","B",3.6,3.6)

"BLD",4324,"KRN","B",3.8,3.8)

"BLD",4324,"KRN","B",9.2,9.2)

"BLD",4324,"KRN","B",9.8,9.8)

"BLD",4324,"KRN","B",19,19)

"BLD",4324,"KRN","B",19.1,19.1)

"BLD",4324,"KRN","B",101,101)

"BLD",4324,"KRN","B",409.61,409.61)

"BLD",4324,"KRN","B",771,771)

"BLD",4324,"KRN","B",870,870)

"BLD",4324,"KRN","B",8989.51,8989.51)

"BLD",4324,"KRN","B",8989.52,8989.52)

"BLD",4324,"KRN","B",8994,8994)

"BLD",4324,"QUES",0)
^9.62^^
"BLD",4324,"REQB",0)
^9.611^^
"KRN",19,869,-1)
2^1
"KRN",19,869,0)
DG MEANS TEST SUPERVISOR MENU^Means Test Supervisor Menu^^M^100888^DG MEANSTEST^^^^^^5^y
"KRN",19,869,10,0)
^19.01IP^7^7
"KRN",19,869,10,5,0)
11391
"KRN",19,869,10,5,"^")
EAS DUPLICATE DEPENDENTS RPT
"KRN",19,869,10,6,0)
11351
"KRN",19,869,10,6,"^")
EAS MERGE DUP MT/COPAY DEP
"KRN",19,869,10,7,0)
11390
"KRN",19,869,10,7,"^")
EAS DELETE MT/COPAY DEPENDENT
"KRN",19,869,"U")
MEANS TEST SUPERVISOR MENU
"KRN",19,11351,-1)
0^4
"KRN",19,11351,0)
EAS MERGE DUP MT/COPAY DEP^Merge Duplicate MT/Copay Dependents^^R^^DG MEANSTEST^^^^^^ENROLLMENT APPLICATION SYSTEM^y
"KRN",19,11351,1,0)
^^4^4^3020513^
"KRN",19,11351,1,1,0)
This menu option will allow holders of the DG MEANSTEST security key the
"KRN",19,11351,1,2,0)
ability to merge dependents considered to be duplicates in the PATIENT 
"KRN",19,11351,1,3,0)
RELATION File.  Data deleted during the process is stored in an ^XTMP
"KRN",19,11351,1,4,0)
global for 10 days.
"KRN",19,11351,25)
OPTION^EASXDR
"KRN",19,11351,"U")
MERGE DUPLICATE MT/COPAY DEPEN
"KRN",19,11390,-1)
0^2
"KRN",19,11390,0)
EAS DELETE MT/COPAY DEPENDENT^Delete Means Test/Copay Dependents^^R^^DG MEANSTEST^^^^^^ENROLLMENT APPLICATION SYSTEM^y
"KRN",19,11390,1,0)
^^5^5^3020513^
"KRN",19,11390,1,1,0)
This menu option requires the user to be a holder of the DG MEANSTEST
"KRN",19,11390,1,2,0)
security key.  The option will allow authorized users to delete a Means 
"KRN",19,11390,1,3,0)
Test and/or Copay Test Dependent without having to manually process all
"KRN",19,11390,1,4,0)
Means Tests on file for the patient.  Data deleted during the process is
"KRN",19,11390,1,5,0)
stored in an ^XTMP global for 10 days.
"KRN",19,11390,25)
DELETE^EASXDR
"KRN",19,11390,"U")
DELETE MEANS TEST/COPAY DEPEND
"KRN",19,11391,-1)
0^3
"KRN",19,11391,0)
EAS DUPLICATE DEPENDENTS RPT^Duplicate Dependents Report^^R^^DG MEANSTEST^^^^^^ENROLLMENT APPLICATION SYSTEM^y^1
"KRN",19,11391,1,0)
^^5^5^3020513^
"KRN",19,11391,1,1,0)
This report will allow Means Test supervisors who hold the DG MEANSTEST
"KRN",19,11391,1,2,0)
security key to determine which dependents could be duplicates in the 
"KRN",19,11391,1,3,0)
PATIENT RELATION File.  In most cases, these duplicates can be corrected
"KRN",19,11391,1,4,0)
by using either the EAS DELETE MT/COPAY DEPENDENT or EAS MERGE DUP
"KRN",19,11391,1,5,0)
MT/COPAY DEP menu options.
"KRN",19,11391,20)
W !
"KRN",19,11391,25)
RPT^EASXDRPT
"KRN",19,11391,"U")
DUPLICATE DEPENDENTS REPORT
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",552,-1)
1^1
"PKG",552,0)
ENROLLMENT APPLICATION SYSTEM^EAS^ENROLLMENT
"PKG",552,20,0)
^9.402P^2^1
"PKG",552,20,2,0)
2^^EASXDR
"PKG",552,20,2,1)

"PKG",552,20,"B",2,2)

"PKG",552,22,0)
^9.49I^1^1
"PKG",552,22,1,0)
1.0^3010315^3010419^66481
"PKG",552,22,1,"PAH",1,0)
10^3021112^100888
"PKG",552,22,1,"PAH",1,1,0)
^^1^1^3021112
"PKG",552,22,1,"PAH",1,1,1,0)
See national patch module for detailed description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","EASXDR")
0^1^B30215977
"RTN","EASXDR",1,0)
EASXDR ;ALB/BRM - ROUTINE TO MERGE ENTRIES DURING PATIENT MERGE; ; 5/10/02 9:27am
"RTN","EASXDR",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**10**;Mar 15, 2001
"RTN","EASXDR",3,0)
 ;
"RTN","EASXDR",4,0)
EN(ARRAY) ;Entry point called with the name of the array containing the
"RTN","EASXDR",5,0)
 ; from and to pointers of the record being merged.  The array is
"RTN","EASXDR",6,0)
 ; formatted as follows:
"RTN","EASXDR",7,0)
 ;    ARRAY(FROM_IEN,TO_IEN,"FROM_IEN;DPT(","TO_IEN;DPT(")=""
"RTN","EASXDR",8,0)
 ;
"RTN","EASXDR",9,0)
 ; The code in this routine will prevent duplicate dependent entries
"RTN","EASXDR",10,0)
 ; from being created when the from and to records are the same
"RTN","EASXDR",11,0)
 ;
"RTN","EASXDR",12,0)
 N EASARY,IEN,DFNFR,DFNTO,IENFR,IENTO,OKTOMRG
"RTN","EASXDR",13,0)
 F DFNFR=0:0 S DFNFR=$O(@ARRAY@(DFNFR))  Q:$G(DFNFR)'>0  D
"RTN","EASXDR",14,0)
 .S DFNTO=$O(@ARRAY@(DFNFR,0))
"RTN","EASXDR",15,0)
 .S IENFR=$O(@ARRAY@(DFNFR,DFNTO,0))
"RTN","EASXDR",16,0)
 .S IENTO=$O(@ARRAY@(DFNFR,DFNTO,IENFR,0))
"RTN","EASXDR",17,0)
 .;attempt to merge relation entries
"RTN","EASXDR",18,0)
 .S OKTOMRG=$$CHKRELAT^EASXDR1(DFNFR,DFNTO,1)
"RTN","EASXDR",19,0)
 Q
"RTN","EASXDR",20,0)
OPTION ; entry point from 'Fix Duplicate Patient Relations' menu option
"RTN","EASXDR",21,0)
 N DTOUT,DUOUT,DIRUT,DIROUT,DA,DIR,DIC,X,Y,DFN,DGMSGF,SSN,VETNAM
"RTN","EASXDR",22,0)
 S DGMSGF=1
"RTN","EASXDR",23,0)
 S DIR(0)="408.12,.03"
"RTN","EASXDR",24,0)
 S DIR("A")="Select Patient SSN"
"RTN","EASXDR",25,0)
 S DIR("?")="Select the SSN of the patient whose Patient Relation entries should be merged."
"RTN","EASXDR",26,0)
 D ^DIR Q:$D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT))
"RTN","EASXDR",27,0)
 W !
"RTN","EASXDR",28,0)
 I '+Y W !?2,Y(0)," Cannot be merged.  Please select a new entry."
"RTN","EASXDR",29,0)
 I $P(Y,";",2)["DGPR(408.13," D  G:'$D(DFN) OPTION
"RTN","EASXDR",30,0)
 .I '$D(^DGPR(408.12,"C",Y)) W !?2,Y(0)," Cannot be merged.  Please select a new entry." Q
"RTN","EASXDR",31,0)
 .S IEN12=$O(^DGPR(408.12,"C",Y,""))
"RTN","EASXDR",32,0)
 .S DFN=$P($G(^DGPR(408.12,IEN12,0)),"^")
"RTN","EASXDR",33,0)
 .S VETNAM=$P($G(^DPT(DFN,0)),"^")
"RTN","EASXDR",34,0)
 .S SSN=$P($G(^DPT(DFN,0)),"^",9)
"RTN","EASXDR",35,0)
 .W !?2,Y(0)," is not in the Patient (#2) file."
"RTN","EASXDR",36,0)
 .W !!?2,"The following patient must be used to merge this entry:"
"RTN","EASXDR",37,0)
 .W !?2,"SSN:",SSN,?20,"Patient Name:",VETNAM,!!
"RTN","EASXDR",38,0)
 .K DIR,Y
"RTN","EASXDR",39,0)
 .S DIR(0)="Y",DIR("B")="YES"
"RTN","EASXDR",40,0)
 .S DIR("A")="Would you like to continue this merge using "_VETNAM
"RTN","EASXDR",41,0)
 .S DIR("?",1)="Answer 'YES' if you would like to continue the merge process"
"RTN","EASXDR",42,0)
 .S DIR("?",2)="using the displayed patient.  This will merge all duplicate"
"RTN","EASXDR",43,0)
 .S DIR("?")="Patient Relations associated with the selected patient."
"RTN","EASXDR",44,0)
 .D ^DIR Q:$D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT))
"RTN","EASXDR",45,0)
 .I 'Y K DFN Q
"RTN","EASXDR",46,0)
 .S Y=DFN
"RTN","EASXDR",47,0)
 S DFN=+Y
"RTN","EASXDR",48,0)
 S MSG=$$CHKRELAT^EASXDR1(DFN,DFN,0)
"RTN","EASXDR",49,0)
 I 'MSG W !?2,"No Patient Relation entries were merged for this patient.",!! G OPTION
"RTN","EASXDR",50,0)
 W !?2,+MSG_" Patient Relation "_$S(+MSG=1:"entry was",1:"entries were")_" successfully merged."
"RTN","EASXDR",51,0)
 W !!?2,"Data deleted during this merge will be stored for 10 days"
"RTN","EASXDR",52,0)
 W !?2,"in the following global: ^XTMP(""EASXDR1"",""DATA"","_DFN_")",!!
"RTN","EASXDR",53,0)
 G OPTION
"RTN","EASXDR",54,0)
 Q
"RTN","EASXDR",55,0)
CHGACT(MRGFRIEN,MRGTOIEN,EFFDT) ;
"RTN","EASXDR",56,0)
 N DIE,DIR,DIRUT,DTOUT,DUOUT,DIROUT,DIC,DA,DR,DIQ,X,Y,SSNFR,SSNTO
"RTN","EASXDR",57,0)
 N ACTIVE
"RTN","EASXDR",58,0)
 ; display data about each record
"RTN","EASXDR",59,0)
 D FINDSSN(MRGFRIEN,.SSNFR),FINDSSN(MRGTOIEN,.SSNTO)
"RTN","EASXDR",60,0)
 W:SSNFR'="" !!,"SSN:"_SSNFR
"RTN","EASXDR",61,0)
 S DIC="^DGPR(408.12,",DA=MRGFRIEN,DIQ(0)="R" D EN^DIQ
"RTN","EASXDR",62,0)
 W:SSNTO'="" !,"SSN:"_SSNTO
"RTN","EASXDR",63,0)
 S DIC="^DGPR(408.12,",DA=MRGTOIEN,DIQ(0)="R" D EN^DIQ
"RTN","EASXDR",64,0)
 ; ask user to enter the correct active flag for this date
"RTN","EASXDR",65,0)
 S DIR(0)="Y"
"RTN","EASXDR",66,0)
 S DIR("A")="Should the active flag be 'YES' or 'NO' for "_$$FMTE^XLFDT($G(EFFDT))
"RTN","EASXDR",67,0)
 D ^DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) Q
"RTN","EASXDR",68,0)
 S ACTIVE=Y
"RTN","EASXDR",69,0)
 N IEN12,SUBIEN,ACTROOT,FDA,DIERR
"RTN","EASXDR",70,0)
 F IEN12=MRGFRIEN,MRGTOIEN D
"RTN","EASXDR",71,0)
 .S ACTROOT="^DGPR(408.12,"_IEN12_",""E"")"
"RTN","EASXDR",72,0)
 .S SUBIEN=""
"RTN","EASXDR",73,0)
 .Q:'$D(@ACTROOT@("B",EFFDT))
"RTN","EASXDR",74,0)
 .F  S SUBIEN=$O(@ACTROOT@("B",EFFDT,SUBIEN)) Q:'SUBIEN  D
"RTN","EASXDR",75,0)
 ..I $P($G(@ACTROOT@(SUBIEN,0)),"^",2)=ACTIVE Q
"RTN","EASXDR",76,0)
 ..S FDA(408.1275,SUBIEN_","_IEN12_",",.02)=ACTIVE
"RTN","EASXDR",77,0)
 ..D FILE^DIE("K","FDA","DIERR")
"RTN","EASXDR",78,0)
 ; update arrays
"RTN","EASXDR",79,0)
 K ^TMP($J,"EASXDR"),ERROR
"RTN","EASXDR",80,0)
 M ^TMP($J,"EASXDR","MRGTO",MRGTOIEN)=^DGPR(408.12,MRGTOIEN)
"RTN","EASXDR",81,0)
 M ^TMP($J,"EASXDR","MRGFR",MRGFRIEN)=^DGPR(408.12,MRGFRIEN)
"RTN","EASXDR",82,0)
 ;D LOOP^EASXDR1
"RTN","EASXDR",83,0)
 Q
"RTN","EASXDR",84,0)
FINDSSN(IEN40812,SSN) ;find SSN associated with Patient Relation entry
"RTN","EASXDR",85,0)
 N ROOT,NODE12,POINT
"RTN","EASXDR",86,0)
 S SSN="UNKNOWN"
"RTN","EASXDR",87,0)
 S NODE12=$G(^DGPR(408.12,IEN40812,0))
"RTN","EASXDR",88,0)
 S POINT=$P(NODE12,"^",3)
"RTN","EASXDR",89,0)
 S ROOT="^"_$P(POINT,";",2)_$P(POINT,";")_")"
"RTN","EASXDR",90,0)
 I '$D(@ROOT@(0)) Q
"RTN","EASXDR",91,0)
 S SSN=$P($G(@ROOT@(0)),"^",9)
"RTN","EASXDR",92,0)
 Q
"RTN","EASXDR",93,0)
DELETE ; entry point from 'Delete Duplicate MT/Copay Dependents' menu option
"RTN","EASXDR",94,0)
 N MSG,DTOUT,DUOUT,DIRUT,DIROUT,DA,DIR,DIC,X,Y,DFN,DGMSGF,SSN,VETNAM
"RTN","EASXDR",95,0)
 S DGMSGF=1
"RTN","EASXDR",96,0)
 S DIR(0)="408.12,.03"
"RTN","EASXDR",97,0)
 S DIR("A")="Select MT/Copay Dependent to be deleted"
"RTN","EASXDR",98,0)
 S DIR("?")="Select the SSN of the patient whose Patient Relation entries should be deleted."
"RTN","EASXDR",99,0)
 D ^DIR Q:$D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT))
"RTN","EASXDR",100,0)
 S IEN12=$O(^DGPR(408.12,"C",Y,""))
"RTN","EASXDR",101,0)
 I 'IEN12 W !!?2,Y(0)," Cannot be deleted.  Please select a new entry.",! G DELETE
"RTN","EASXDR",102,0)
 S DIC="^DGPR(408.12,",DA=IEN12,DIQ(0)="R" D EN^DIQ
"RTN","EASXDR",103,0)
 K DIR,Y,DTOUT,DIROUT,DIRUT,DUOUT
"RTN","EASXDR",104,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","EASXDR",105,0)
 S DIR("A")="Would you like to PERMANENTLY DELETE this record"
"RTN","EASXDR",106,0)
 S DIR("?",1)="Answer 'YES' if you would like to continue the deletion process"
"RTN","EASXDR",107,0)
 S DIR("?",2)="using the displayed patient.  This process will permanently delete the"
"RTN","EASXDR",108,0)
 S DIR("?")="408.13, 408.21, and 408.22 file entries associated with the selected patient."
"RTN","EASXDR",109,0)
 D ^DIR
"RTN","EASXDR",110,0)
 G:$D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT))!('Y) DELETE
"RTN","EASXDR",111,0)
 S MSG=$$REMOVE^EASXDR1(IEN12,"")
"RTN","EASXDR",112,0)
 I 'MSG W !?2,"No Patient Relation entries were deleted for this patient.",!! G DELETE
"RTN","EASXDR",113,0)
 W !?2,+MSG_" Patient Relation "_$S(+MSG=1:"entry was",1:"entries were")_" successfully deleted."
"RTN","EASXDR",114,0)
 W !!?2,"Data deleted during this process will be stored for 10 days"
"RTN","EASXDR",115,0)
 W !?2,"in the following global: ^XTMP(""EASXDR1"",""DATA"",""DELETE"",408.12,"_IEN12_")",!!
"RTN","EASXDR",116,0)
 G DELETE
"RTN","EASXDR",117,0)
 Q
"RTN","EASXDR1")
0^2^B71069317
"RTN","EASXDR1",1,0)
EASXDR1 ;ALB/BRM - CHECK RELATIONS DURING XDR PATIENT MERGE; ; 4/10/02 12:29pm
"RTN","EASXDR1",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**10**;Mar 15, 2001
"RTN","EASXDR1",3,0)
 ;
"RTN","EASXDR1",4,0)
CHKRELAT(DFNFR,DFNTO,SILENT) ;can the relations on these 2 records be merged?
"RTN","EASXDR1",5,0)
 ;
"RTN","EASXDR1",6,0)
 ;INPUT:
"RTN","EASXDR1",7,0)
 ;       DFNFR : the patient file ien of the merge from record
"RTN","EASXDR1",8,0)
 ;       DFNTO : the patient file ien of the merge to record
"RTN","EASXDR1",9,0)
 ;       SILENT: (optional) used to prevent screen writes and user
"RTN","EASXDR1",10,0)
 ;               interaction during the merge process
"RTN","EASXDR1",11,0)
 ;
"RTN","EASXDR1",12,0)
 ; Note: DFNFR and DFNTO can both be the same if this process is
"RTN","EASXDR1",13,0)
 ;       to clean-up patient relation file entries within the same 
"RTN","EASXDR1",14,0)
 ;       patient
"RTN","EASXDR1",15,0)
 ;
"RTN","EASXDR1",16,0)
 Q:'$G(DFNFR) "0^From DFN not passed"
"RTN","EASXDR1",17,0)
 Q:'$G(DFNTO) "0^To DFN not passed"
"RTN","EASXDR1",18,0)
 Q:'$D(^DGPR(408.12,"B",DFNFR)) "0^This patient did not have any relation entries that needed to be merged."
"RTN","EASXDR1",19,0)
 Q:'$D(^DGPR(408.12,"B",DFNTO)) "0^This patient did not have any relation entries that needed to be merged."
"RTN","EASXDR1",20,0)
 N ARYNAM2,REL,RELAT,NOMRGMSG,REASON,ARYNAM,X,ERR,NAMFIL
"RTN","EASXDR1",21,0)
 N ERROR,DIC,FRDATA,MRGFRIEN,MRGTOIEN,MSG,NAME,RELPNTR
"RTN","EASXDR1",22,0)
 N ACTOK,RELATE,EFFDT,SUBIEN,UPDMSG,MRGARY,MRGROOT,OK,IEN12TO
"RTN","EASXDR1",23,0)
 N ACTIVFR,ACTIVTO,SUBIENFR,SUBIENTO,ERRNUM,NAMIEN,IEN12FR
"RTN","EASXDR1",24,0)
 S MRGROOT="^TMP($J,""EASXDR1"",""B"")"
"RTN","EASXDR1",25,0)
 K ^TMP($J,"EASXDR1"),^TMP($J,"EASXDR")
"RTN","EASXDR1",26,0)
 S ^XTMP("EASXDR1",0)=$$FMADD^XLFDT($$NOW^XLFDT(),10)_U_$$NOW^XLFDT()_U_"EASXDR1 - DUPLICATE PATIENT RELATION MERGE"
"RTN","EASXDR1",27,0)
 ; find 408.12 entries for FROM and TO records
"RTN","EASXDR1",28,0)
 F X="IEN12FR","IEN12TO" D
"RTN","EASXDR1",29,0)
 .S REL="DFN"_$E(X,6,7),@X=""
"RTN","EASXDR1",30,0)
 .S ARYNAM="^TMP($J,""EASXDR1"","""_$E(X,6,7)_""")"
"RTN","EASXDR1",31,0)
 .S ARYNAM2="^TMP($J,""EASXDR1"",""B"","""_$E(X,6,7)_""")"
"RTN","EASXDR1",32,0)
 .F  S @X=$O(^DGPR(408.12,"B",@REL,@X)) Q:'@X  D
"RTN","EASXDR1",33,0)
 ..I '$D(^DGPR(408.12,@X)) S @ARYNAM@(@X)=(@REL)_"^NO 408.12 RECORD" Q
"RTN","EASXDR1",34,0)
 ..M @ARYNAM@((@X))=^DGPR(408.12,@X)
"RTN","EASXDR1",35,0)
 ..S RELPNTR=$P($G(@ARYNAM@(@X,0)),"^",3)
"RTN","EASXDR1",36,0)
 ..S NAMIEN=$P(RELPNTR,";")_",",NAMFIL=$P(RELPNTR,";",2)
"RTN","EASXDR1",37,0)
 ..I NAMFIL="DPT(" S NAMFIL=2
"RTN","EASXDR1",38,0)
 ..E  S NAMFIL=$TR($P(NAMFIL,"(",2),",")
"RTN","EASXDR1",39,0)
 ..K NAME
"RTN","EASXDR1",40,0)
 ..I NAMIEN,NAMFIL S NAME=$$GET1^DIQ(NAMFIL,NAMIEN,.01)
"RTN","EASXDR1",41,0)
 ..S @ARYNAM@(@X,"NAME")=$G(NAME)
"RTN","EASXDR1",42,0)
 ..S RELAT=$P($G(^DGPR(408.12,@X,0)),"^",2)
"RTN","EASXDR1",43,0)
 ..S @ARYNAM2@(RELAT,@X)=""
"RTN","EASXDR1",44,0)
 ; merge duplicate records (if they exist)
"RTN","EASXDR1",45,0)
 S RELATE="",OK=0,ERRNUM=0
"RTN","EASXDR1",46,0)
 F  S RELATE=$O(@MRGROOT@("TO",RELATE)) Q:'RELATE  D
"RTN","EASXDR1",47,0)
 .S MRGTOIEN=""
"RTN","EASXDR1",48,0)
 .F  S MRGTOIEN=$O(@MRGROOT@("TO",RELATE,MRGTOIEN)) Q:'MRGTOIEN  D LOOP
"RTN","EASXDR1",49,0)
 Q +$G(OK)
"RTN","EASXDR1",50,0)
LOOP ;
"RTN","EASXDR1",51,0)
 M ^TMP($J,"EASXDR","MRGTO",MRGTOIEN)=^DGPR(408.12,MRGTOIEN)
"RTN","EASXDR1",52,0)
 S MRGFRIEN=""
"RTN","EASXDR1",53,0)
 F  S MRGFRIEN=$O(@MRGROOT@("FR",RELATE,MRGFRIEN)) Q:'MRGFRIEN  D
"RTN","EASXDR1",54,0)
 .Q:MRGFRIEN=MRGTOIEN  ;do not update if FROM and TO iens are the same
"RTN","EASXDR1",55,0)
 .K ERROR
"RTN","EASXDR1",56,0)
 .I RELATE'=1 D  Q:$D(ERROR)
"RTN","EASXDR1",57,0)
 ..I '$$MRGOTHR(MRGFRIEN,MRGTOIEN) S ERROR(MRGFRIEN)="DEPENDENT NAMES DO NOT MATCH" K @MRGROOT@("FR",RELATE,MRGTOIEN) Q
"RTN","EASXDR1",58,0)
 ..I '$$SSNMATCH(MRGFRIEN,MRGTOIEN) D  Q:$D(ERROR)
"RTN","EASXDR1",59,0)
 ...Q:$P($G(^DGPR(408.12,MRGFRIEN,0)),"^",2)'=$P($G(^DGPR(408.12,MRGTOIEN,0)),"^",2)
"RTN","EASXDR1",60,0)
 ...S ERROR(MRGFRIEN)="DEPENDENT SSNS DO NOT MATCH"
"RTN","EASXDR1",61,0)
 ...D:'$G(SILENT) FAILED(MRGFRIEN,MRGTOIEN,$G(ERROR(MRGFRIEN)))
"RTN","EASXDR1",62,0)
 ...K @MRGROOT@("FR",RELATE,MRGTOIEN)
"RTN","EASXDR1",63,0)
 .M ^TMP($J,"EASXDR","MRGFR",MRGFRIEN)=^DGPR(408.12,MRGFRIEN)
"RTN","EASXDR1",64,0)
 .S EFFDT=""
"RTN","EASXDR1",65,0)
 .F  S EFFDT=$O(^TMP($J,"EASXDR","MRGFR",MRGFRIEN,"E","B",EFFDT)) Q:'EFFDT  D
"RTN","EASXDR1",66,0)
 ..I $D(^DGPR(408.12,MRGTOIEN,"E","B",EFFDT)) D  Q
"RTN","EASXDR1",67,0)
 ...S ACTOK=$$CHKACT()
"RTN","EASXDR1",68,0)
 ..S SUBIEN=+$O(^TMP($J,"EASXDR","MRGFR",MRGFRIEN,"E","B",EFFDT,""))
"RTN","EASXDR1",69,0)
 ..Q:('SUBIEN)!('$D(^TMP($J,"EASXDR","MRGFR",MRGFRIEN,"E",SUBIEN)))
"RTN","EASXDR1",70,0)
 ..S FRDATA=$G(^TMP($J,"EASXDR","MRGFR",MRGFRIEN,"E",SUBIEN,0))
"RTN","EASXDR1",71,0)
 ..S UPDMSG=$$UPDATE(MRGTOIEN,FRDATA,MRGFRIEN)
"RTN","EASXDR1",72,0)
 ..I 'UPDMSG D  Q
"RTN","EASXDR1",73,0)
 ...S ERROR(MRGFRIEN,SUBIEN)=$P(UPDMSG,"^",2),ERRNUM=ERRNUM+1
"RTN","EASXDR1",74,0)
 ...Q:$P(UPDMSG,"^",2)="The entry does not exist."
"RTN","EASXDR1",75,0)
 ...S ^XTMP("EASXDR1","DATA",DFNFR,"ERROR - NOT MERGED",MRGFRIEN,SUBIEN)=$P(UPDMSG,"^",2)
"RTN","EASXDR1",76,0)
 .I '$D(ERROR),$$REMOVE(MRGFRIEN,MRGTOIEN) D  ;
"RTN","EASXDR1",77,0)
 ..S OK=OK+1
"RTN","EASXDR1",78,0)
 ..D:'$G(SILENT) SUCCESS(MRGFRIEN,MRGTOIEN)
"RTN","EASXDR1",79,0)
 ..K @MRGROOT@("FR",RELATE,MRGFRIEN)
"RTN","EASXDR1",80,0)
 ..K @MRGROOT@("TO",RELATE,MRGFRIEN)
"RTN","EASXDR1",81,0)
 ..I $D(@MRGROOT@("TO",RELATE,MRGFRIEN)) K @MRGROOT@("TO",RELATE,MRGFRIEN)
"RTN","EASXDR1",82,0)
 ..K ^TMP($J,"EASXDR")
"RTN","EASXDR1",83,0)
 ..M ^TMP($J,"EASXDR","MRGFR",MRGFRIEN)=^DGPR(408.12,MRGFRIEN)
"RTN","EASXDR1",84,0)
 ..M ^TMP($J,"EASXDR","MRGTO",MRGTOIEN)=^DGPR(408.12,MRGTOIEN)
"RTN","EASXDR1",85,0)
 Q
"RTN","EASXDR1",86,0)
CHKACT() ; ensure both records contain the same active flag for eff. date
"RTN","EASXDR1",87,0)
 N OK
"RTN","EASXDR1",88,0)
 S OK=1
"RTN","EASXDR1",89,0)
 S SUBIENFR=+$O(^TMP($J,"EASXDR","MRGFR",MRGFRIEN,"E","B",EFFDT,""))
"RTN","EASXDR1",90,0)
 S SUBIENTO=+$O(^TMP($J,"EASXDR","MRGTO",MRGTOIEN,"E","B",EFFDT,""))
"RTN","EASXDR1",91,0)
 S ACTIVFR=$P($G(^TMP($J,"EASXDR","MRGFR",MRGFRIEN,"E",SUBIENFR,0)),"^",2)
"RTN","EASXDR1",92,0)
 S ACTIVTO=$P($G(^TMP($J,"EASXDR","MRGTO",MRGTOIEN,"E",SUBIENTO,0)),"^",2)
"RTN","EASXDR1",93,0)
 I ACTIVFR'=ACTIVTO D  Q OK
"RTN","EASXDR1",94,0)
 .S OK=0
"RTN","EASXDR1",95,0)
 .S ERROR(MRGFRIEN,SUBIENFR)="'Active' flag does not match for effective date: "_$$FMTE^XLFDT(EFFDT),ERRNUM=ERRNUM+1
"RTN","EASXDR1",96,0)
 .S ^XTMP("EASXDR1","DATA",DFNFR,408.12,"ERROR - NOT MERGED",MRGFRIEN,SUBIENFR)=ERROR(MRGFRIEN,SUBIENFR)
"RTN","EASXDR1",97,0)
 .D:'$G(SILENT) FAILED(MRGFRIEN,MRGTOIEN,$G(ERROR(MRGFRIEN,SUBIENFR)))
"RTN","EASXDR1",98,0)
 .I '$D(ERROR) S OK=1
"RTN","EASXDR1",99,0)
 Q OK
"RTN","EASXDR1",100,0)
UPDATE(MRGTOIEN,FRDATA,MRGFRIEN) ;
"RTN","EASXDR1",101,0)
 Q:('MRGTOIEN)!(FRDATA="") "0^RECORD NOT UPDATED - BAD INPUT DATA"
"RTN","EASXDR1",102,0)
 N DIERR,IENS,FDA,MSGROOT,IENROOT,NAMEFR,NAMETO
"RTN","EASXDR1",103,0)
 S IENS="+1,"_MRGTOIEN_","
"RTN","EASXDR1",104,0)
 S FDA(408.1275,IENS,.01)=$P(FRDATA,"^")
"RTN","EASXDR1",105,0)
 S FDA(408.1275,IENS,.02)=$P(FRDATA,"^",2)
"RTN","EASXDR1",106,0)
 S FDA(408.1275,IENS,.03)=$P(FRDATA,"^",3)
"RTN","EASXDR1",107,0)
 S FDA(408.1275,IENS,.04)=$P(FRDATA,"^",4)
"RTN","EASXDR1",108,0)
 S NAMEFR=$G(^TMP($J,"EASXDR1","FR",MRGFRIEN,"NAME"))
"RTN","EASXDR1",109,0)
 I NAMEFR="" S NAMEFR=$$GET1^DIQ(408.12,MRGFRIEN_",",.03,"E")
"RTN","EASXDR1",110,0)
 S NAMETO=$G(^TMP($J,"EASXDR1","TO",MRGTOIEN,"NAME"))
"RTN","EASXDR1",111,0)
 I NAMETO="" S NAMEFR=$$GET1^DIQ(408.12,MRGTOIEN_",",.03,"E")
"RTN","EASXDR1",112,0)
 D UPDATE^DIE("","FDA","IENROOT","MSGROOT")
"RTN","EASXDR1",113,0)
 I '$D(DIERR) D  Q "1^UPDATED "_$G(IENROOT)
"RTN","EASXDR1",114,0)
 .K @MRGROOT@("FR",RELATE,MRGFRIEN)
"RTN","EASXDR1",115,0)
 .K @MRGROOT@("TO",RELATE,MRGFRIEN)
"RTN","EASXDR1",116,0)
 .I $D(@MRGROOT@("TO",RELATE,MRGFRIEN)) K @MRGROOT@("TO",RELATE,MRGFRIEN)
"RTN","EASXDR1",117,0)
 .K ^TMP($J,"EASXDR")
"RTN","EASXDR1",118,0)
 .M ^TMP($J,"EASXDR","MRGFR",MRGFRIEN)=^DGPR(408.12,MRGFRIEN)
"RTN","EASXDR1",119,0)
 .M ^TMP($J,"EASXDR","MRGTO",MRGTOIEN)=^DGPR(408.12,MRGTOIEN)
"RTN","EASXDR1",120,0)
 Q "0^"_$G(MSGROOT("DIERR",1,"TEXT",1))
"RTN","EASXDR1",121,0)
DEL(ROOT,IEN) ;delete entries
"RTN","EASXDR1",122,0)
 Q:'IEN "1^INVALID INPUT PARAMETER"
"RTN","EASXDR1",123,0)
 N DA,DIK,MSG,X,Y,FILE
"RTN","EASXDR1",124,0)
 S FILE=$TR($P(ROOT,"(",2),",")
"RTN","EASXDR1",125,0)
 S MSG="1^DELETE ERROR "_ROOT_IEN  ;default to error condition
"RTN","EASXDR1",126,0)
 M ^XTMP("EASXDR1","DATA",DFNFR,FILE,IEN)=@(ROOT_IEN_")")
"RTN","EASXDR1",127,0)
 S DA=IEN,DIK=ROOT D ^DIK S MSG="0^RECORD DELETED"
"RTN","EASXDR1",128,0)
 Q MSG
"RTN","EASXDR1",129,0)
MRGOTHR(MRGFRIEN,MRGTOIEN) ;
"RTN","EASXDR1",130,0)
 Q:('MRGFRIEN)!('MRGTOIEN) 0
"RTN","EASXDR1",131,0)
 N NAMEFR,NAMETO
"RTN","EASXDR1",132,0)
 S NAMEFR=$G(^TMP($J,"EASXDR1","FR",MRGFRIEN,"NAME"))
"RTN","EASXDR1",133,0)
 S NAMETO=$G(^TMP($J,"EASXDR1","TO",MRGTOIEN,"NAME"))
"RTN","EASXDR1",134,0)
 I NAMEFR=NAMETO Q 1  ;ok to proceed with dependent merge
"RTN","EASXDR1",135,0)
 Q 0  ;different dependent - do not merge entries.
"RTN","EASXDR1",136,0)
SUCCESS(MRGFRIEN,MRGTOIEN) ;display message when merge is successful
"RTN","EASXDR1",137,0)
 Q:('$D(MRGFRIEN))!('$D(MRGTOIEN))
"RTN","EASXDR1",138,0)
 S NAMEFR=$G(^TMP($J,"EASXDR1","FR",MRGFRIEN,"NAME"))
"RTN","EASXDR1",139,0)
 I NAMEFR="" S NAMEFR=$$GET1^DIQ(408.12,MRGFRIEN_",",.03,"E")
"RTN","EASXDR1",140,0)
 S NAMETO=$G(^TMP($J,"EASXDR1","TO",MRGTOIEN,"NAME"))
"RTN","EASXDR1",141,0)
 I NAMETO="" S NAMEFR=$$GET1^DIQ(408.12,MRGTOIEN_",",.03,"E")
"RTN","EASXDR1",142,0)
 W !!?2,MRGFRIEN," ",NAMEFR," was merged into ",MRGTOIEN," ",NAMETO
"RTN","EASXDR1",143,0)
 Q
"RTN","EASXDR1",144,0)
FAILED(MRGFRIEN,MRGTOIEN,MSG) ;display message when merge fails
"RTN","EASXDR1",145,0)
 Q:('$D(MRGFRIEN))!('$D(MRGTOIEN))!('$D(MSG))
"RTN","EASXDR1",146,0)
 N EFFDT1
"RTN","EASXDR1",147,0)
 S NAMEFR=$G(^TMP($J,"EASXDR1","FR",+MRGFRIEN,"NAME"))
"RTN","EASXDR1",148,0)
 I NAMEFR="" S NAMEFR=$$GET1^DIQ(408.12,MRGFRIEN_",",.03,"E")
"RTN","EASXDR1",149,0)
 S NAMETO=$G(^TMP($J,"EASXDR1","TO",+MRGTOIEN,"NAME"))
"RTN","EASXDR1",150,0)
 I NAMETO="" S NAMEFR=$$GET1^DIQ(408.12,MRGTOIEN_",",.03,"E")
"RTN","EASXDR1",151,0)
 W !!?2,MRGFRIEN," ",NAMEFR," could not be merged into ",MRGTOIEN," ",NAMETO,"."
"RTN","EASXDR1",152,0)
 W !?2,"Reason: ",$G(MSG)
"RTN","EASXDR1",153,0)
 S EFFDT1=$G(EFFDT)
"RTN","EASXDR1",154,0)
 I MSG["'Active' flag does not match" D
"RTN","EASXDR1",155,0)
 .D CHGACT^EASXDR(MRGFRIEN,MRGTOIEN,$G(EFFDT))
"RTN","EASXDR1",156,0)
 .S EFFDT=EFFDT1
"RTN","EASXDR1",157,0)
 .K ^TMP($J,"EASXDR1","FR",RELATE,MRGTOIEN)
"RTN","EASXDR1",158,0)
 Q
"RTN","EASXDR1",159,0)
REMOVE(MRGFRIEN,MRGTOIEN) ;delete and/or repoint "old" entries
"RTN","EASXDR1",160,0)
 Q:('MRGFRIEN) "0^RECORD NOT DELETED - BAD INPUT DATA"
"RTN","EASXDR1",161,0)
 I '$D(MRGTOIEN) N MRGTOIEN S MRGTOIEN="***DELETE***"
"RTN","EASXDR1",162,0)
 I '$D(DFNFR) N DFNFR S DFNFR="DELETE"  ;from DFN is not present
"RTN","EASXDR1",163,0)
 N VARPNT,MSG22,MSG21,ERROR,IEN40821,IEN40822,IEN40812,IEN40813
"RTN","EASXDR1",164,0)
 N MSG12,MSG13,VARPNT2
"RTN","EASXDR1",165,0)
 S IEN40812=MRGFRIEN
"RTN","EASXDR1",166,0)
 S IEN40821=""
"RTN","EASXDR1",167,0)
 S ^XTMP("EASXDR1","DATA",DFNFR,408.12,MRGFRIEN)=$S(MRGTOIEN:"RECORD MERGED INTO 408.12 IEN # "_MRGTOIEN,1:"RECORD DELETED")
"RTN","EASXDR1",168,0)
 F  S IEN40821=$O(^DGMT(408.21,"C",IEN40812,IEN40821)) Q:'IEN40821!($G(ERROR))  D
"RTN","EASXDR1",169,0)
 .S IEN40822=""
"RTN","EASXDR1",170,0)
 .F  S IEN40822=$O(^DGMT(408.22,"AIND",IEN40821,IEN40822)) Q:'IEN40822!($G(ERROR))  D
"RTN","EASXDR1",171,0)
 ..S MSG22=$$DEL("^DGMT(408.22,",IEN40822)
"RTN","EASXDR1",172,0)
 ..I MSG22 S ERROR="1^"_IEN40822_"^"_$P(MSG22,"^",2)_"^408.22 DELETE" Q
"RTN","EASXDR1",173,0)
 ..I DFNFR="DELETE" S ^XTMP("EASXDR1","DATA",DFNFR,408.12,MRGFRIEN,"SEE 408.22",IEN40822)=""
"RTN","EASXDR1",174,0)
 .Q:$G(ERROR)
"RTN","EASXDR1",175,0)
 .S MSG21=$$DEL("^DGMT(408.21,",IEN40821)
"RTN","EASXDR1",176,0)
 .I MSG21 S ERROR="1^"_IEN40821_"^"_$P(MSG21,"^",2)_"^408.21 DELETE" Q
"RTN","EASXDR1",177,0)
 .I DFNFR="DELETE" S ^XTMP("EASXDR1","DATA",DFNFR,408.12,MRGFRIEN,"SEE 408.21",IEN40821)=""
"RTN","EASXDR1",178,0)
 Q:$G(ERROR) "0^"_$P(ERROR,"^",2,4)
"RTN","EASXDR1",179,0)
 S VARPNT=$P($G(^DGPR(408.12,IEN40812,0)),"^",3)
"RTN","EASXDR1",180,0)
 S IEN40813="" S:VARPNT["DGPR" IEN40813=$P(VARPNT,";")
"RTN","EASXDR1",181,0)
 S MSG12=$$DEL("^DGPR(408.12,",IEN40812)
"RTN","EASXDR1",182,0)
 I MSG12 Q "0^"_IEN40812_"^"_$P(MSG12,"^",2)_"^408.12 DELETE"
"RTN","EASXDR1",183,0)
 Q:'IEN40813 "1^"_MRGFRIEN_" DELETED"
"RTN","EASXDR1",184,0)
 S VARPNT2=""
"RTN","EASXDR1",185,0)
 ;ensure that the new record is not pointing to the same relation
"RTN","EASXDR1",186,0)
 S:MRGTOIEN VARPNT2=$P($G(^DGPR(408.12,MRGTOIEN,0)),"^",3)
"RTN","EASXDR1",187,0)
 Q:VARPNT=VARPNT2 "1^"_MRGFRIEN_" DELETED"
"RTN","EASXDR1",188,0)
 S MSG13=$$DEL("^DGPR(408.13,",IEN40813)
"RTN","EASXDR1",189,0)
 I DFNFR="DELETE" S ^XTMP("EASXDR1","DATA",DFNFR,408.12,MRGFRIEN,"SEE 408.13",IEN40813)=""
"RTN","EASXDR1",190,0)
 Q:MSG13 "0^"_$P(MSG13,"^",2)
"RTN","EASXDR1",191,0)
 Q "1^"_MRGFRIEN_" DELETED"
"RTN","EASXDR1",192,0)
SSNMATCH(FRIEN,TOIEN) ;
"RTN","EASXDR1",193,0)
 N SSNFR,SSNTO
"RTN","EASXDR1",194,0)
 D FINDSSN^EASXDR(FRIEN,.SSNFR),FINDSSN^EASXDR(TOIEN,.SSNTO)
"RTN","EASXDR1",195,0)
 Q:SSNFR=SSNTO 1  ;SSNs match
"RTN","EASXDR1",196,0)
 Q:(SSNFR="UNKNOWN")!(SSNFR="") 1  ;use SSN of the 'merge to' record
"RTN","EASXDR1",197,0)
 Q 0
"RTN","EASXDRPT")
0^3^B23237326
"RTN","EASXDRPT",1,0)
EASXDRPT ;ALB/AEG - DUP PT RELATION REPORT ;7-12-02
"RTN","EASXDRPT",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**10**;Mar 15,2001
"RTN","EASXDRPT",3,0)
 ;
"RTN","EASXDRPT",4,0)
RPT ; Option Entry Point.
"RTN","EASXDRPT",5,0)
 D TEXT^EASXDRUT
"RTN","EASXDRPT",6,0)
 W !
"RTN","EASXDRPT",7,0)
 ;
"RTN","EASXDRPT",8,0)
EN1 ; Device Handler.
"RTN","EASXDRPT",9,0)
 N %ZIS
"RTN","EASXDRPT",10,0)
 S %ZIS="QM" D ^%ZIS
"RTN","EASXDRPT",11,0)
 I POP W !!,?5,"REPORT CANCELLED!",$C(7),! G STOPIT
"RTN","EASXDRPT",12,0)
 I $D(IO("Q")) D QUEIT G STOPIT
"RTN","EASXDRPT",13,0)
 I '$D(IO("Q")) D  Q
"RTN","EASXDRPT",14,0)
 .I $E(IOST,1,2)="C-" D WAIT^DICD,START Q
"RTN","EASXDRPT",15,0)
 .E  D START Q
"RTN","EASXDRPT",16,0)
 Q
"RTN","EASXDRPT",17,0)
 ;
"RTN","EASXDRPT",18,0)
START ;
"RTN","EASXDRPT",19,0)
 D SETUP^EASXDRUT
"RTN","EASXDRPT",20,0)
 D INIT,FIND,PURGE
"RTN","EASXDRPT",21,0)
 D PRINT^EASXRPT1
"RTN","EASXDRPT",22,0)
 D QUIT
"RTN","EASXDRPT",23,0)
 Q
"RTN","EASXDRPT",24,0)
 ;
"RTN","EASXDRPT",25,0)
INIT ; Setup scratch globals and initialize processing.
"RTN","EASXDRPT",26,0)
 N EASA,EASB,EASC,EASAA,EASAB,EASAC,QUO
"RTN","EASXDRPT",27,0)
 S QUO=""""
"RTN","EASXDRPT",28,0)
 F EASA=1,2 D
"RTN","EASXDRPT",29,0)
 .F EASB=1,2 D
"RTN","EASXDRPT",30,0)
 ..F EASC=1,2 D
"RTN","EASXDRPT",31,0)
 ...S EASAA=$S(EASA=1:"EASXDRPT",1:"DECEASED")
"RTN","EASXDRPT",32,0)
 ...S EASAB=$S(EASB=1:"CATC",1:"CATOTHER")
"RTN","EASXDRPT",33,0)
 ...S EASAC=$S(EASC=1:"NOCMOR",1:"CMORE")
"RTN","EASXDRPT",34,0)
 ...S ROOT(EASA,EASB,EASC)="^TMP("_QUO_EASAA_QUO_","_QUO_EASAB_QUO_","_QUO_EASAC_QUO_","_$J_")"
"RTN","EASXDRPT",35,0)
 ...Q
"RTN","EASXDRPT",36,0)
 ..Q
"RTN","EASXDRPT",37,0)
 .Q
"RTN","EASXDRPT",38,0)
 Q
"RTN","EASXDRPT",39,0)
 ;
"RTN","EASXDRPT",40,0)
FIND ; Search for potential dups in file #408.12
"RTN","EASXDRPT",41,0)
 N EASDOD,EASMTS,EASSRC,SRC,REC12,EASPER,EASREL,EASACT,EASCNT
"RTN","EASXDRPT",42,0)
 N NODE
"RTN","EASXDRPT",43,0)
 S DFN=0
"RTN","EASXDRPT",44,0)
 F  S DFN=$O(^DGPR(408.12,"B",DFN)) Q:DFN'>0  D
"RTN","EASXDRPT",45,0)
 .S EASDOD=$S($$GET1^DIQ(2,DFN_",",.351,"I")]"":2,1:1)
"RTN","EASXDRPT",46,0)
 .S EASMTS=$S($P($$LST^DGMTU(DFN),U,4)="C":1,1:2)
"RTN","EASXDRPT",47,0)
 .; The following call is supported via DBIA #2701
"RTN","EASXDRPT",48,0)
 .S SRC=$$IFVCCI^MPIF001(DFN)
"RTN","EASXDRPT",49,0)
 .S EASSRC=$S(SRC=1:2,1:1)
"RTN","EASXDRPT",50,0)
 .S REC12=0
"RTN","EASXDRPT",51,0)
 .F  S REC12=$O(^DGPR(408.12,"B",DFN,REC12)) Q:REC12'>0  D
"RTN","EASXDRPT",52,0)
 ..S NODE=$G(^DGPR(408.12,REC12,0))
"RTN","EASXDRPT",53,0)
 ..S EASPER=$$GET1^DIQ(408.12,REC12_",",.03,"E")
"RTN","EASXDRPT",54,0)
 ..S:EASPER']"" EASPER="NO PERSON ENTRY"
"RTN","EASXDRPT",55,0)
 ..S EASREL=$$GET1^DIQ(408.12,REC12_",",.02,"E")
"RTN","EASXDRPT",56,0)
 ..S:EASREL']"" EASREL="NO RELATION ENTRY"
"RTN","EASXDRPT",57,0)
 ..S EASCNT=1
"RTN","EASXDRPT",58,0)
 ..I $D(DUPS(DFN,EASREL,EASPER)) D
"RTN","EASXDRPT",59,0)
 ...S EASCNT=$O(DUPS(DFN,EASREL,EASPER,""),-1)+1
"RTN","EASXDRPT",60,0)
 ..S DUPS(DFN,EASREL,EASPER,EASCNT)=REC12
"RTN","EASXDRPT",61,0)
 ..I EASREL="NO RELATION ENTRY" D  Q
"RTN","EASXDRPT",62,0)
 ...S @ROOT(EASDOD,EASMTS,EASSRC)@("NO RELATION",DFN,EASCNT)=REC12_U_EASPER
"RTN","EASXDRPT",63,0)
 ..I EASPER="NO PERSON ENTRY" D  Q
"RTN","EASXDRPT",64,0)
 ...S @ROOT(EASDOD,EASMTS,EASSRC)@("NO PERSON",DFN,EASCNT)=REC12_U_EASREL
"RTN","EASXDRPT",65,0)
 ..S EASACT=$$ACTIVE(REC12)
"RTN","EASXDRPT",66,0)
 ..S @ROOT(EASDOD,EASMTS,EASSRC)@(DFN,EASREL,EASCNT)=REC12_U_EASPER_U_EASACT
"RTN","EASXDRPT",67,0)
 .K DUPS(DFN)
"RTN","EASXDRPT",68,0)
 Q
"RTN","EASXDRPT",69,0)
 ;
"RTN","EASXDRPT",70,0)
ACTIVE(REC12) ; Is relation entry active ?
"RTN","EASXDRPT",71,0)
 N RETV,EASSUB,EASTIEN,ACTF
"RTN","EASXDRPT",72,0)
 S (RETV,ACTF)="",EASSUB=0
"RTN","EASXDRPT",73,0)
 F  S EASSUB=$O(^DGPR(408.12,REC12,"E",EASSUB)) Q:EASSUB'>0  D  Q:$L(RETV,"~")>1
"RTN","EASXDRPT",74,0)
 .S ACTF=$$GET1^DIQ(408.1275,EASSUB_","_REC12_",",".02")
"RTN","EASXDRPT",75,0)
 .Q:ACTF']"" RETV
"RTN","EASXDRPT",76,0)
 .S EASTIEN=$$GET1^DIQ(408.1275,EASSUB_","_REC12_",",.04,"I")
"RTN","EASXDRPT",77,0)
 .S EASTIEN=$S(EASTIEN>0:$$GET1^DIQ(408.31,EASTIEN_",",.019,"I"),1:"")
"RTN","EASXDRPT",78,0)
 .S EASTIEN=$S(EASTIEN>0:$$GET1^DIQ(408.33,EASTIEN_",",.01,"E"),1:"")
"RTN","EASXDRPT",79,0)
 .S RETV=ACTF_"~"_EASTIEN_"~"_EASSUB
"RTN","EASXDRPT",80,0)
 Q RETV
"RTN","EASXDRPT",81,0)
 ;
"RTN","EASXDRPT",82,0)
PURGE ; Purge non-duplicate from temp globals.
"RTN","EASXDRPT",83,0)
 N AA,AB,AC
"RTN","EASXDRPT",84,0)
 F AA=1,2 F AB=1,2 F AC=1,2 D MORE
"RTN","EASXDRPT",85,0)
 Q
"RTN","EASXDRPT",86,0)
 ;
"RTN","EASXDRPT",87,0)
MORE ; Purge of non-dups continued.
"RTN","EASXDRPT",88,0)
 N DFN,REL,LSTNUM,CNT,NODE2,CNT2
"RTN","EASXDRPT",89,0)
 S (LNAME,DFN)=0
"RTN","EASXDRPT",90,0)
 F  S DFN=$O(@ROOT(AA,AB,AC)@(DFN)) Q:DFN'>0  D
"RTN","EASXDRPT",91,0)
 .S REL=""
"RTN","EASXDRPT",92,0)
 .F  S REL=$O(@ROOT(AA,AB,AC)@(DFN,REL)) Q:REL']""  D
"RTN","EASXDRPT",93,0)
 ..S LSTNUM=$O(@ROOT(AA,AB,AC)@(DFN,REL,""),-1)
"RTN","EASXDRPT",94,0)
 ..I $D(@ROOT(AA,AB,AC)@(DFN,REL,LSTNUM,"E")) D  Q
"RTN","EASXDRPT",95,0)
 ...S LNAME=$S($L(REL)>LNAME:$L(REL),1:LNAME)
"RTN","EASXDRPT",96,0)
 ..D NAME
"RTN","EASXDRPT",97,0)
 ..I $O(@ROOT(AA,AB,AC)@(DFN,REL,""))=LSTNUM D  Q
"RTN","EASXDRPT",98,0)
 ...K @ROOT(AA,AB,AC)@(DFN,REL,LSTNUM)
"RTN","EASXDRPT",99,0)
 ..S CNT=""
"RTN","EASXDRPT",100,0)
 ..F  S CNT=$O(@ROOT(AA,AB,AC)@(DFN,REL,CNT)) Q:CNT'>0  D
"RTN","EASXDRPT",101,0)
 ...S NODE2=@ROOT(AA,AB,AC)@(DFN,REL,CNT)
"RTN","EASXDRPT",102,0)
 ...I $P(NODE2,U,4)']"" D
"RTN","EASXDRPT",103,0)
 ....K @ROOT(AA,AB,AC)@(DFN,REL,CNT)
"RTN","EASXDRPT",104,0)
 ...I $P(NODE2,U,4)]"" D
"RTN","EASXDRPT",105,0)
 ....S LNAME=$S($L(REL)>LNAME:$L(REL),1:LNAME)
"RTN","EASXDRPT",106,0)
 ...Q
"RTN","EASXDRPT",107,0)
 ..Q
"RTN","EASXDRPT",108,0)
 .Q
"RTN","EASXDRPT",109,0)
 Q
"RTN","EASXDRPT",110,0)
 ;
"RTN","EASXDRPT",111,0)
NAME ; Check names
"RTN","EASXDRPT",112,0)
 N CNT,CHKNAME,CNT2
"RTN","EASXDRPT",113,0)
 S CNT=""
"RTN","EASXDRPT",114,0)
 F  S CNT=$O(@ROOT(AA,AB,AC)@(DFN,REL,CNT)) Q:CNT'>0  D
"RTN","EASXDRPT",115,0)
 .S CHKNAME=$P($G(@ROOT(AA,AB,AC)@(DFN,REL,CNT)),U,2)
"RTN","EASXDRPT",116,0)
 .I CHKNAME["MERGING" D
"RTN","EASXDRPT",117,0)
 ..S $P(@ROOT(AA,AB,AC)@(DFN,REL,CNT),U,4)="SHOULD BE MERGED"
"RTN","EASXDRPT",118,0)
 .I $P($G(@ROOT(AA,AB,AC)@(DFN,REL,CNT)),U,4)]"" Q
"RTN","EASXDRPT",119,0)
 .S CNT2=CNT
"RTN","EASXDRPT",120,0)
 .F  S CNT2=$O(@ROOT(AA,AB,AC)@(DFN,REL,CNT2)) Q:CNT2'>0  D
"RTN","EASXDRPT",121,0)
 ..I CHKNAME'=$P($G(@ROOT(AA,AB,AC)@(DFN,REL,CNT2)),U,2) Q
"RTN","EASXDRPT",122,0)
 ..S $P(@ROOT(AA,AB,AC)@(DFN,REL,CNT2),U,4)="SHOULD BE MERGED"
"RTN","EASXDRPT",123,0)
 ..S $P(@ROOT(AA,AB,AC)@(DFN,REL,CNT),U,4)="SHOULD BE MERGED"
"RTN","EASXDRPT",124,0)
 Q
"RTN","EASXDRPT",125,0)
 ;
"RTN","EASXDRPT",126,0)
QUIT ; Cleanup and quit.
"RTN","EASXDRPT",127,0)
 N A,B,C
"RTN","EASXDRPT",128,0)
 F A=1,2 D
"RTN","EASXDRPT",129,0)
 .F B=1,2 D
"RTN","EASXDRPT",130,0)
 ..F C=1,2 K @ROOT(A,B,C)
"RTN","EASXDRPT",131,0)
 K DUPS,LNAME,POP,ROOT,ZTSK
"RTN","EASXDRPT",132,0)
 K COL1,COL2,COL3,COL4,COL5,COL6,COL7,DAL,EQL,FSTP
"RTN","EASXDRPT",133,0)
 Q
"RTN","EASXDRPT",134,0)
STOPIT ;
"RTN","EASXDRPT",135,0)
 Q
"RTN","EASXDRPT",136,0)
QUEIT ; Que task
"RTN","EASXDRPT",137,0)
 N ZTDESC,ZTRTN,ZTSAVE
"RTN","EASXDRPT",138,0)
 S ZTDESC="EAS DUPLICATE PT REL REPORT",ZTRTN="START^EASXDRPT"
"RTN","EASXDRPT",139,0)
 S ZTSAVE("*")=""
"RTN","EASXDRPT",140,0)
 W !
"RTN","EASXDRPT",141,0)
 D ^%ZTLOAD
"RTN","EASXDRPT",142,0)
 I $G(ZTSK)>0 W !!,">>> Task Number #"_$G(ZTSK)_" queued. <<<",! H .5
"RTN","EASXDRPT",143,0)
 D HOME^%ZIS
"RTN","EASXDRPT",144,0)
 Q
"RTN","EASXDRUT")
0^4^B3180685
"RTN","EASXDRUT",1,0)
EASXDRUT ;ALB/AEG - Duplicate Patient Relations Utilities ;7-12-02
"RTN","EASXDRUT",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**10**;Mar 15, 2002
"RTN","EASXDRUT",3,0)
 ;
"RTN","EASXDRUT",4,0)
TEXT ; Print Screen Text upon Entry into the option.
"RTN","EASXDRUT",5,0)
 N TEX,I F I=1:1 S TEX=$P($T(DESC+I),";;",2) Q:TEX="QUIT"  D
"RTN","EASXDRUT",6,0)
 .I I'>2 W !,?17,TEX
"RTN","EASXDRUT",7,0)
 .E  W !,?3,TEX
"RTN","EASXDRUT",8,0)
 K I,X
"RTN","EASXDRUT",9,0)
 Q
"RTN","EASXDRUT",10,0)
 ;
"RTN","EASXDRUT",11,0)
DESC ; Text to be printed upon entry into the option.
"RTN","EASXDRUT",12,0)
 ;;*** DUPLICATE PATIENT RELATIONS REPORT ***
"RTN","EASXDRUT",13,0)
 ;;
"RTN","EASXDRUT",14,0)
 ;;This report will search the PATIENT RELATION file (#408.12) to identify
"RTN","EASXDRUT",15,0)
 ;;those entries where potential duplicates exist.
"RTN","EASXDRUT",16,0)
 ;;
"RTN","EASXDRUT",17,0)
 ;;This report is designed for an 80 column print device or a terminal
"RTN","EASXDRUT",18,0)
 ;;using the HOME device.  The report may take a long time to generate,
"RTN","EASXDRUT",19,0)
 ;;accordingly, it is recommended that it be queued to an 80 column
"RTN","EASXDRUT",20,0)
 ;;print device.  The P-MESSAGE device is NOT recommended for use, nor
"RTN","EASXDRUT",21,0)
 ;;should the output format be specified at the device prompt in order to 
"RTN","EASXDRUT",22,0)
 ;;do a screen capture.
"RTN","EASXDRUT",23,0)
 ;;QUIT
"RTN","EASXDRUT",24,0)
 ;
"RTN","EASXDRUT",25,0)
SETUP ; Setup output variables based on terminal type.
"RTN","EASXDRUT",26,0)
 S COL1=0
"RTN","EASXDRUT",27,0)
 S COL2=11
"RTN","EASXDRUT",28,0)
 S COL3=38
"RTN","EASXDRUT",29,0)
 S COL4=48
"RTN","EASXDRUT",30,0)
 S COL5=58
"RTN","EASXDRUT",31,0)
 S COL6=63
"RTN","EASXDRUT",32,0)
 S COL7=74
"RTN","EASXDRUT",33,0)
 S $P(EQL,"=",IOM)=""
"RTN","EASXDRUT",34,0)
 S $P(DAL,"-",IOM)=""
"RTN","EASXDRUT",35,0)
 Q
"RTN","EASXDRUT",36,0)
 ;
"RTN","EASXDRUT",37,0)
PAUSE ;
"RTN","EASXDRUT",38,0)
 N IY,ZZ
"RTN","EASXDRUT",39,0)
 S ZZ=$Y
"RTN","EASXDRUT",40,0)
 I $E(IOST,1,2)="C-" D
"RTN","EASXDRUT",41,0)
 .F IY=ZZ:1:(IOSL-4) W !
"RTN","EASXDRUT",42,0)
 .K DIR,DIRUT
"RTN","EASXDRUT",43,0)
 .S DIR(0)="E"
"RTN","EASXDRUT",44,0)
 .D ^DIR
"RTN","EASXDRUT",45,0)
 .;W @IOF
"RTN","EASXDRUT",46,0)
 Q
"RTN","EASXRPT1")
0^5^B15104519
"RTN","EASXRPT1",1,0)
EASXRPT1 ;ALB/AEG - Duplicate Pt. Relation Report ; 7-12-02
"RTN","EASXRPT1",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**10**;Mar 15,2001
"RTN","EASXRPT1",3,0)
 ;
"RTN","EASXRPT1",4,0)
PRINT ; Output to selected I/O device.
"RTN","EASXRPT1",5,0)
 U IO
"RTN","EASXRPT1",6,0)
 N USER,RUN,A,B,C,HDR,PG,IY
"RTN","EASXRPT1",7,0)
 K DIR,DIRUT
"RTN","EASXRPT1",8,0)
 S USER=$$GET1^DIQ(200,DUZ_",",.01,"E")
"RTN","EASXRPT1",9,0)
 S FSTP=1
"RTN","EASXRPT1",10,0)
 S RUN="Run Date "_$$FMTE^XLFDT($E($$NOW^XLFDT,1,14),"1P")_" by "_USER
"RTN","EASXRPT1",11,0)
 S HDR(4)="Duplicate PATIENT RELATION file Entries"
"RTN","EASXRPT1",12,0)
 S HDR(5)="** Includes duplicates for both dependent and patient entries"
"RTN","EASXRPT1",13,0)
 F A=1,2 D  Q:$D(DIRUT)
"RTN","EASXRPT1",14,0)
 .S HDR(1)=$S(A=2:"DECEASED PATIENT, NO ACTION REQUIRED",1:"ACTIVE DUPLICATE ENTRIES")
"RTN","EASXRPT1",15,0)
 .F B=1,2 D  Q:$D(DIRUT)
"RTN","EASXRPT1",16,0)
 ..S HDR(2)=$S(B=2:"Non Category C",1:"Category C")
"RTN","EASXRPT1",17,0)
 ..F C=1,2 D  Q:$D(DIRUT)
"RTN","EASXRPT1",18,0)
 ...S HDR(3)=$S(C=2:"CMOR",1:"NON-CMOR")
"RTN","EASXRPT1",19,0)
 ...S PG=0
"RTN","EASXRPT1",20,0)
 ...D HDR,LOOP
"RTN","EASXRPT1",21,0)
 ...Q
"RTN","EASXRPT1",22,0)
 ..Q
"RTN","EASXRPT1",23,0)
 .Q
"RTN","EASXRPT1",24,0)
 D ^%ZISC
"RTN","EASXRPT1",25,0)
 Q
"RTN","EASXRPT1",26,0)
 ;
"RTN","EASXRPT1",27,0)
HDR ; Report Header
"RTN","EASXRPT1",28,0)
 N IX
"RTN","EASXRPT1",29,0)
 S PG=PG+1,HDR(6)="PAGE "_PG
"RTN","EASXRPT1",30,0)
 I '+$G(FSTP) W @IOF
"RTN","EASXRPT1",31,0)
 W !,DAL
"RTN","EASXRPT1",32,0)
 W !,RUN,!
"RTN","EASXRPT1",33,0)
 F IX=1,2,3,4 W !?((IOM-$L(HDR(IX)))\2),HDR(IX)
"RTN","EASXRPT1",34,0)
 W !
"RTN","EASXRPT1",35,0)
 W !,?((IOM-3)-$L(HDR(5)))\2,HDR(5),?((IOM-1)-$L(HDR(6))),HDR(6)
"RTN","EASXRPT1",36,0)
 W !,EQL
"RTN","EASXRPT1",37,0)
 W !,"* - Represents entries without an SSN in the INCOME PERSON file (#408.13)"
"RTN","EASXRPT1",38,0)
 W !,?4,"These entries must be corrected using the Edit an Existing Means Test",!,?4,"Option before merging or deleting."
"RTN","EASXRPT1",39,0)
 I HDR(1)["Deceased" W !!,"NOTE: Corrective action does not apply to deceased duplicates."
"RTN","EASXRPT1",40,0)
 W !!?(COL3),"408.12"
"RTN","EASXRPT1",41,0)
 W !,"SSN",?COL2,"NAME",?(COL3+2),"IEN",?COL4,"DOB",?COL5,"ACT",?COL6,"EFF DATE",?COL7,"TYPE"
"RTN","EASXRPT1",42,0)
 W !,$E(DAL,1,9),?COL2,$E(DAL,1,25),?COL3,$E(DAL,1,7),?COL4,$E(DAL,1,8),?COL5,$E(DAL,1,3),?COL6,$E(DAL,1,8),?COL7,$E(DAL,1,5)
"RTN","EASXRPT1",43,0)
 S FSTP=0
"RTN","EASXRPT1",44,0)
 Q
"RTN","EASXRPT1",45,0)
 ;
"RTN","EASXRPT1",46,0)
LOOP ; Loop thru data and provide output for report.
"RTN","EASXRPT1",47,0)
 N DATA,IEN,FILE,DNODE,PNAME,SEX,DOB,SSN,NODE2,EASACT,TTYPE,EDATE
"RTN","EASXRPT1",48,0)
 S DFN=0
"RTN","EASXRPT1",49,0)
 I '$O(@ROOT(A,B,C)@(DFN)) D  Q
"RTN","EASXRPT1",50,0)
 .W !!,"NO DUPLICATE ENTRIES FOUND"
"RTN","EASXRPT1",51,0)
 .I $E(IOST,1,2)="C-" D PAUSE^EASXDRUT Q:$D(DIRUT)
"RTN","EASXRPT1",52,0)
 .Q
"RTN","EASXRPT1",53,0)
 F  S DFN=$O(@ROOT(A,B,C)@(DFN)) Q:DFN'>0  D  Q:$D(DIRUT)
"RTN","EASXRPT1",54,0)
 .S EASREL=""
"RTN","EASXRPT1",55,0)
 .W !!,"VETERAN: "_$S($$GET1^DIQ(2,DFN_",",.01,"E")]"":$$GET1^DIQ(2,DFN_",",.01,"E"),1:"UNKNOWN")_" - "_$S($$GET1^DIQ(2,DFN_",",.09,"E")]"":$$GET1^DIQ(2,DFN_",",.09,"E"),1:"UNKNOWN SSN")
"RTN","EASXRPT1",56,0)
 .F  S EASREL=$O(@ROOT(A,B,C)@(DFN,EASREL)) Q:EASREL']""  D  Q:$D(DIRUT)
"RTN","EASXRPT1",57,0)
 ..S EASCNT=0
"RTN","EASXRPT1",58,0)
 ..F  S EASCNT=$O(@ROOT(A,B,C)@(DFN,EASREL,EASCNT)) Q:EASCNT'>0  D  Q:$D(DIRUT)
"RTN","EASXRPT1",59,0)
 ...S DATA=$G(@ROOT(A,B,C)@(DFN,EASREL,EASCNT))
"RTN","EASXRPT1",60,0)
 ...S IEN=$P(DATA,U)
"RTN","EASXRPT1",61,0)
 ...S FILE=$P($$GET1^DIQ(408.12,IEN_",",.03,"I"),";",2)_$P($$GET1^DIQ(408.12,IEN_",",.03,"I"),";")
"RTN","EASXRPT1",62,0)
 ...S DNODE=$G(@("^"_FILE_",0)"))
"RTN","EASXRPT1",63,0)
 ...S PNAME=$P(DNODE,U),PNAME=$E(PNAME,1,25)
"RTN","EASXRPT1",64,0)
 ...S SEX=$P(DNODE,U,2),DOB=$$FMTE^XLFDT($P(DNODE,U,3),"2P")
"RTN","EASXRPT1",65,0)
 ...S SSN=$P(DNODE,U,9)
"RTN","EASXRPT1",66,0)
 ...I SSN']"" S SSN=$$GET1^DIQ(2,DFN_",",.09,"E")_"*"
"RTN","EASXRPT1",67,0)
 ...S NODE2=$G(^DGPR(408.12,+$P(DATA,U),"E",+$P($P(DATA,U,3),"~",3),0))
"RTN","EASXRPT1",68,0)
 ...S EASACT=$P(DATA,U,3)
"RTN","EASXRPT1",69,0)
 ...S TTYPE=$P(EASACT,"~",3)
"RTN","EASXRPT1",70,0)
 ...S TTYPE=$S(TTYPE]"":$$GET1^DIQ(408.33,TTYPE_",",.01,"E"),1:"UNK")
"RTN","EASXRPT1",71,0)
 ...S TTYPE=$P(TTYPE," ",1)
"RTN","EASXRPT1",72,0)
 ...S EASACT=$P(EASACT,"~")
"RTN","EASXRPT1",73,0)
 ...S EDATE=$$FMTE^XLFDT($P($P(NODE2,U),"."),"2P")
"RTN","EASXRPT1",74,0)
 ...W !,SSN,?COL2,PNAME,?COL3,$J(IEN,7),?COL4,$J(DOB,8),?COL5,$J($S(EASACT=1:"YES",EASACT=0:"NO",1:EASACT),3),?COL6,$J(EDATE,8),?COL7,TTYPE
"RTN","EASXRPT1",75,0)
 ...I $Y'<(IOSL-3) D PAUSE^EASXDRUT Q:$D(DIRUT)  D HDR
"RTN","EASXRPT1",76,0)
 Q:$D(DIRUT)
"RTN","EASXRPT1",77,0)
 F IY=$Y:1:(IOSL-4) W !
"RTN","EASXRPT1",78,0)
 I $E(IOST,1,2)="C-" D
"RTN","EASXRPT1",79,0)
 .K DIR,DIRUT
"RTN","EASXRPT1",80,0)
 .S DIR(0)="E"
"RTN","EASXRPT1",81,0)
 .D ^DIR
"RTN","EASXRPT1",82,0)
 Q
"RTN","EASXRPT1",83,0)
 ;
"VER")
8.0^22
**END**
**END**
