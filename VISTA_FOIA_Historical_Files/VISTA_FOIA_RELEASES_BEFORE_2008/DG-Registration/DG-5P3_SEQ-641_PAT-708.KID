Released DG*5.3*708 SEQ #641
Extracted from mail message
**KIDS**:DG*5.3*708^

**INSTALL NAME**
DG*5.3*708
"BLD",6100,0)
DG*5.3*708^REGISTRATION^0^3060927^y
"BLD",6100,1,0)
^^1^1^3060811^^
"BLD",6100,1,1,0)
Undefined MERGE+39 Pgm DGENUPL4
"BLD",6100,4,0)
^9.64PA^^
"BLD",6100,6)
1^
"BLD",6100,6.3)
7
"BLD",6100,"KRN",0)
^9.67PA^8989.52^19
"BLD",6100,"KRN",.4,0)
.4
"BLD",6100,"KRN",.401,0)
.401
"BLD",6100,"KRN",.402,0)
.402
"BLD",6100,"KRN",.403,0)
.403
"BLD",6100,"KRN",.5,0)
.5
"BLD",6100,"KRN",.84,0)
.84
"BLD",6100,"KRN",3.6,0)
3.6
"BLD",6100,"KRN",3.8,0)
3.8
"BLD",6100,"KRN",9.2,0)
9.2
"BLD",6100,"KRN",9.8,0)
9.8
"BLD",6100,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",6100,"KRN",9.8,"NM",1,0)
DGENUPL4^^0^B69012473
"BLD",6100,"KRN",9.8,"NM","B","DGENUPL4",1)
 
"BLD",6100,"KRN",19,0)
19
"BLD",6100,"KRN",19.1,0)
19.1
"BLD",6100,"KRN",101,0)
101
"BLD",6100,"KRN",409.61,0)
409.61
"BLD",6100,"KRN",771,0)
771
"BLD",6100,"KRN",870,0)
870
"BLD",6100,"KRN",8989.51,0)
8989.51
"BLD",6100,"KRN",8989.52,0)
8989.52
"BLD",6100,"KRN",8994,0)
8994
"BLD",6100,"KRN","B",.4,.4)
 
"BLD",6100,"KRN","B",.401,.401)
 
"BLD",6100,"KRN","B",.402,.402)
 
"BLD",6100,"KRN","B",.403,.403)
 
"BLD",6100,"KRN","B",.5,.5)
 
"BLD",6100,"KRN","B",.84,.84)
 
"BLD",6100,"KRN","B",3.6,3.6)
 
"BLD",6100,"KRN","B",3.8,3.8)
 
"BLD",6100,"KRN","B",9.2,9.2)
 
"BLD",6100,"KRN","B",9.8,9.8)
 
"BLD",6100,"KRN","B",19,19)
 
"BLD",6100,"KRN","B",19.1,19.1)
 
"BLD",6100,"KRN","B",101,101)
 
"BLD",6100,"KRN","B",409.61,409.61)
 
"BLD",6100,"KRN","B",771,771)
 
"BLD",6100,"KRN","B",870,870)
 
"BLD",6100,"KRN","B",8989.51,8989.51)
 
"BLD",6100,"KRN","B",8989.52,8989.52)
 
"BLD",6100,"KRN","B",8994,8994)
 
"BLD",6100,"QUES",0)
^9.62^^
"BLD",6100,"REQB",0)
^9.611^1^1
"BLD",6100,"REQB",1,0)
DG*5.3*673^2
"BLD",6100,"REQB","B","DG*5.3*673",1)
 
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
708^3060927^123456834
"PKG",5,22,1,"PAH",1,1,0)
^^1^1^3060927
"PKG",5,22,1,"PAH",1,1,1,0)
Undefined MERGE+39 Pgm DGENUPL4
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")
 
"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","DGENUPL4")
0^1^B69012473^B66292292
"RTN","DGENUPL4",1,0)
DGENUPL4 ;ALB/CJM,RTK,ISA/KWP,ISD/GSN,PHH,RGL,PJR,BRM,TDM,TMK,EG - PROCESS INCOMING (Z11 EVENT TYPE) HL7 MESSAGES ; 09/25/2006
"RTN","DGENUPL4",2,0)
 ;;5.3;REGISTRATION;**147,177,232,253,327,367,377,514,451,625,673,708**;Aug 13,1993;Build 7
"RTN","DGENUPL4",3,0)
 ;
"RTN","DGENUPL4",4,0)
UOBJECTS(DFN,DGPAT,DGELG,DGCDIS,DGOEIF,MSGID,ERRCOUNT,MSGS,OLDPAT,OLDELG,OLDCDIS,OLDOEIF) ;
"RTN","DGENUPL4",5,0)
 ;Used to update PATIENT, ELIGIBILITY, CATASTROPHIC
"RTN","DGENUPL4",6,0)
 ;DISABILITY, and OEF/OIF CONFLICT objects 'in memory'.
"RTN","DGENUPL4",7,0)
 ;
"RTN","DGENUPL4",8,0)
 ;Input:
"RTN","DGENUPL4",9,0)
 ;  DFN - ien of record in the PATIENT file
"RTN","DGENUPL4",10,0)
 ;  DGPAT - PATIENT object array (pass by reference)
"RTN","DGENUPL4",11,0)
 ;  DGELG - ELIGIBILITY object array (pass by ref)
"RTN","DGENUPL4",12,0)
 ;  DGCDIS - CATASTROPHIC DISABILITY object array (pass by ref)
"RTN","DGENUPL4",13,0)
 ;  DGOEIF - OEF/OIF conflict object array (pass by ref)
"RTN","DGENUPL4",14,0)
 ;  MSGID - message control id of the HL7 message being processed
"RTN","DGENUPL4",15,0)
 ;  ERRCOUNT - count of errors (pass by ref)
"RTN","DGENUPL4",16,0)
 ;  MSGS - array of messages for the site (pass by ref)
"RTN","DGENUPL4",17,0)
 ;
"RTN","DGENUPL4",18,0)
 ;Output:
"RTN","DGENUPL4",19,0)
 ;  Function Value: 1 if update was successful 'in memory',
"RTN","DGENUPL4",20,0)
 ;           consistency checks pass and the objects can be stored in
"RTN","DGENUPL4",21,0)
 ;           the local database, 0 otherwise.
"RTN","DGENUPL4",22,0)
 ;  DGPAT - PATIENT object array (pass by reference)
"RTN","DGENUPL4",23,0)
 ;  DGELG - ELIGIBILITY object array (pass by ref)
"RTN","DGENUPL4",24,0)
 ;  DGCDIS - CATASTROPHIC DISABILITY object array (pass by ref)
"RTN","DGENUPL4",25,0)
 ;  ERRCOUNT - count of errors (pass by ref)
"RTN","DGENUPL4",26,0)
 ;  MSGS - array of messages for the site (pass by ref)
"RTN","DGENUPL4",27,0)
 ;  OLDPAT - patient object array as it currently exists in database before the update (pass by ref)
"RTN","DGENUPL4",28,0)
 ;  OLDELG - eligibility object array as it currently exists in database before the update (pass by ref)
"RTN","DGENUPL4",29,0)
 ;  OLDCDIS - catastrophically disability object array as it currently exists in database before the update (pass by ref)
"RTN","DGENUPL4",30,0)
 ;  OLDOEIF - OEF/OIF conflict data as it currently exists in database before the update (pass by ref)
"RTN","DGENUPL4",31,0)
 ;
"RTN","DGENUPL4",32,0)
 N DGPAT3,DGELG3,DGCDIS3,SUCCESS
"RTN","DGENUPL4",33,0)
 S SUCCESS=1
"RTN","DGENUPL4",34,0)
 D
"RTN","DGENUPL4",35,0)
 .;first get local site's current data
"RTN","DGENUPL4",36,0)
 .I ('$$GET^DGENPTA(DFN,.OLDPAT))!('$$GET^DGENELA(DFN,.OLDELG))!('$$GET^DGENCDA(DFN,.OLDCDIS))!('$P($$GET^DGENOEIF(DFN,.OLDOEIF,0),U,2)) D  Q
"RTN","DGENUPL4",37,0)
 ..D ADDERROR^DGENUPL(MSGID,DGPAT("SSN"),"UNABLE TO ACCESS PATIENT RECORD",.ERRCOUNT)
"RTN","DGENUPL4",38,0)
 ..S SUCCESS=0
"RTN","DGENUPL4",39,0)
 .;
"RTN","DGENUPL4",40,0)
 .;Phase II CD Consistency Checks (SRS 6.5.1.4) check VISTA against HEC
"RTN","DGENUPL4",41,0)
 .S SUCCESS=$$CDCHECK^DGENUPL9()
"RTN","DGENUPL4",42,0)
 .Q:'SUCCESS
"RTN","DGENUPL4",43,0)
 .;
"RTN","DGENUPL4",44,0)
 .;now merge with the update
"RTN","DGENUPL4",45,0)
 .D MERGE
"RTN","DGENUPL4",46,0)
 .;
"RTN","DGENUPL4",47,0)
 .;add the assumed values
"RTN","DGENUPL4",48,0)
 .D ADD
"RTN","DGENUPL4",49,0)
 .;
"RTN","DGENUPL4",50,0)
 .;now do the consistency checks
"RTN","DGENUPL4",51,0)
 .S SUCCESS=$$CHECK()
"RTN","DGENUPL4",52,0)
 .Q:'SUCCESS
"RTN","DGENUPL4",53,0)
 .;
"RTN","DGENUPL4",54,0)
 .;replace input arrays with fully updated versions
"RTN","DGENUPL4",55,0)
 .K DGPAT M DGPAT=DGPAT3
"RTN","DGENUPL4",56,0)
 .K DGELG M DGELG=DGELG3
"RTN","DGENUPL4",57,0)
 .K DGCDIS M DGCDIS=DGCDIS3
"RTN","DGENUPL4",58,0)
 ;
"RTN","DGENUPL4",59,0)
 I SUCCESS D
"RTN","DGENUPL4",60,0)
 .;
"RTN","DGENUPL4",61,0)
 .;list of required notifications
"RTN","DGENUPL4",62,0)
 .;
"RTN","DGENUPL4",63,0)
 .;change in date of death
"RTN","DGENUPL4",64,0)
 .I DGPAT("DEATH"),$P(OLDPAT("DEATH"),".")'=$P(DGPAT("DEATH"),".") D
"RTN","DGENUPL4",65,0)
 ..D ADDMSG^DGENUPL3(.MSGS,"HEC SHOWS DATE OF DEATH = "_$$FMTE^XLFDT(DGPAT("DEATH"),"1"),1)
"RTN","DGENUPL4",66,0)
 ..D ADDMSG^DGENUPL3(.MSGS,$S('OLDPAT("DEATH"):"SITE DOES NOT HAVE DATE OF DEATH",1:"SITE HAS DATE OF DEATH = "_$$FMTE^XLFDT(OLDPAT("DEATH"),"1")),1)
"RTN","DGENUPL4",67,0)
 .;
"RTN","DGENUPL4",68,0)
 .I OLDPAT("DEATH"),'DGPAT("DEATH") D
"RTN","DGENUPL4",69,0)
 ..D ADDMSG^DGENUPL3(.MSGS,"HEC SHOWS NO DATE OF DEATH",1)
"RTN","DGENUPL4",70,0)
 ..D ADDMSG^DGENUPL3(.MSGS,"SITE HAS DATE OF DEATH = "_$$FMTE^XLFDT(OLDPAT("DEATH"),"1"),1)
"RTN","DGENUPL4",71,0)
 .;
"RTN","DGENUPL4",72,0)
 .;change in POW
"RTN","DGENUPL4",73,0)
 .I OLDELG("POW")="N",DGELG("POW")="Y" D ADDMSG^DGENUPL3(.MSGS,"POW STATUS CHANGED TO YES")
"RTN","DGENUPL4",74,0)
 .I OLDELG("POW")="Y",DGELG("POW")="N" D ADDMSG^DGENUPL3(.MSGS,"POW STATUS CHANGED TO NO")
"RTN","DGENUPL4",75,0)
 .;
"RTN","DGENUPL4",76,0)
 .;SC to NSC
"RTN","DGENUPL4",77,0)
 .I OLDELG("SC")="Y",DGELG("SC")="N" D ADDMSG^DGENUPL3(.MSGS,"VETERAN CHANGED TO NON-SERVICE CONNECTED",1)
"RTN","DGENUPL4",78,0)
 .;
"RTN","DGENUPL4",79,0)
 .; Change from Eligible to Ineligible
"RTN","DGENUPL4",80,0)
 .I 'OLDPAT("INELDATE"),DGPAT("INELDATE") D ADDMSG^DGENUPL3(.MSGS,"VETERAN PREVIOUSLY ELIGIBLE FOR VA HEALTH CARE, NOW INELIGIBLE.",1)
"RTN","DGENUPL4",81,0)
 .;
"RTN","DGENUPL4",82,0)
 .; Check for erroneous CD deletion
"RTN","DGENUPL4",83,0)
 .I OLDCDIS("VCD")="","@"[DGCDIS("VCD") Q  ;no notification is needed
"RTN","DGENUPL4",84,0)
 .;
"RTN","DGENUPL4",85,0)
 .; CD Determination Changed
"RTN","DGENUPL4",86,0)
 .I OLDCDIS("VCD")'=DGCDIS("VCD") D ADDMSG^DGENUPL3(.MSGS,"VETERANS CD EVALUATION HAS CHANGED.")
"RTN","DGENUPL4",87,0)
 D EP^DGENUPLB
"RTN","DGENUPL4",88,0)
 Q SUCCESS
"RTN","DGENUPL4",89,0)
 ;
"RTN","DGENUPL4",90,0)
ADD ;
"RTN","DGENUPL4",91,0)
 ;Description: adds computed and assumed values to the updated objects
"RTN","DGENUPL4",92,0)
 ;
"RTN","DGENUPL4",93,0)
 ;Input: DGELG3(),DGPAT3() created in the UOBJECTS procedure.
"RTN","DGENUPL4",94,0)
 ;
"RTN","DGENUPL4",95,0)
 N SUB,TYPE,DATA
"RTN","DGENUPL4",96,0)
 S DGELG3("ELIGENTBY")=.5
"RTN","DGENUPL4",97,0)
 S SUB=0 F  S SUB=$O(DGELG3("RATEDIS",SUB)) Q:'SUB  S DGELG3("RATEDIS",SUB,"RDSC")=1
"RTN","DGENUPL4",98,0)
 ;
"RTN","DGENUPL4",99,0)
 ; Default Patient Types
"RTN","DGENUPL4",100,0)
 I DGELG3("SC")="N" S DGPAT3("VETERAN")="Y",DGPAT3("PATYPE")=$O(^DG(391,"B","NSC VETERAN",0))
"RTN","DGENUPL4",101,0)
 I DGELG3("SC")="Y" S DGPAT3("VETERAN")="Y",DGPAT3("PATYPE")=$O(^DG(391,"B","SC VETERAN",0))
"RTN","DGENUPL4",102,0)
 ;
"RTN","DGENUPL4",103,0)
 ; If Ineldate apply business rules
"RTN","DGENUPL4",104,0)
 I DGPAT3("INELDATE"),DGELG3("SC")'="Y" D
"RTN","DGENUPL4",105,0)
 .S DGPAT3("VETERAN")="N",DGPAT3("PATYPE")=$O(^DG(391,"B","NON-VETERAN (OTHER)",0))
"RTN","DGENUPL4",106,0)
 .S DGELG3("POS")=$O(^DIC(21,"B","OTHER NON-VETERANS",0))
"RTN","DGENUPL4",107,0)
 ;
"RTN","DGENUPL4",108,0)
 ;update/set ELIGIBILITY VERIF. SOURCE field (Ineligible Project):
"RTN","DGENUPL4",109,0)
 I DGELG3("ELIGVERIF")["VIVA" S DATA(.3613)="H"
"RTN","DGENUPL4",110,0)
 E  S DATA(.3613)="V"
"RTN","DGENUPL4",111,0)
 ;
"RTN","DGENUPL4",112,0)
 ; File data fields modified by Ineligible Business Rules
"RTN","DGENUPL4",113,0)
 I $$UPD^DGENDBS(2,DFN,.DATA,.ERROR)
"RTN","DGENUPL4",114,0)
 Q
"RTN","DGENUPL4",115,0)
 ;
"RTN","DGENUPL4",116,0)
MERGE ;
"RTN","DGENUPL4",117,0)
 ;Description: merges arrays with current patient data with the updates
"RTN","DGENUPL4",118,0)
 ; Merges DGPAT() + OLDPAT() -> DGPAT3()
"RTN","DGENUPL4",119,0)
 ;        DGELG() + OLDELG() -> DGELG3()
"RTN","DGENUPL4",120,0)
 ; overlays catastrophic disability array with data from HEC
"RTN","DGENUPL4",121,0)
 ;        DGCDIS() is info from HEC
"RTN","DGENUPL4",122,0)
 ;
"RTN","DGENUPL4",123,0)
 N SUB,SUB2,LOC,HEC,NATCODE
"RTN","DGENUPL4",124,0)
 M DGPAT3=OLDPAT,DGELG3=OLDELG
"RTN","DGENUPL4",125,0)
 K DGCDIS3 M DGCDIS3=OLDCDIS K DGCDIS3("EXT"),DGCDIS3("PROC"),DGCDIS3("COND"),DGCDIS3("DIAG")
"RTN","DGENUPL4",126,0)
 ;nothing on HEC...delete VistA
"RTN","DGENUPL4",127,0)
 I $G(DGCDIS("EXT",1,1))="",$G(DGCDIS("PROC",1))="",$G(DGCDIS("COND",1))="",$G(DGCDIS("DIAG",1))="" D
"RTN","DGENUPL4",128,0)
 . S DGCDIS("VCD")="@"
"RTN","DGENUPL4",129,0)
 . S DGCDIS("BY")="@"
"RTN","DGENUPL4",130,0)
 . S DGCDIS("DATE")="@"
"RTN","DGENUPL4",131,0)
 . S DGCDIS("FACDET")="@"
"RTN","DGENUPL4",132,0)
 . S DGCDIS("METDET")="@"
"RTN","DGENUPL4",133,0)
 . S DGCDIS("REVDTE")="@"
"RTN","DGENUPL4",134,0)
 . Q
"RTN","DGENUPL4",135,0)
 ;
"RTN","DGENUPL4",136,0)
 ;discard MT status from local database - don't ever want to use it during upload
"RTN","DGENUPL4",137,0)
 S DGELG3("MTSTA")=DGELG("MTSTA")
"RTN","DGENUPL4",138,0)
 ;
"RTN","DGENUPL4",139,0)
 ;patient array
"RTN","DGENUPL4",140,0)
 S SUB=""
"RTN","DGENUPL4",141,0)
 F  S SUB=$O(DGPAT(SUB)) Q:(SUB="")  I (DGPAT(SUB)'="") S DGPAT3(SUB)=$S((DGPAT(SUB)="@"):"",1:DGPAT(SUB))
"RTN","DGENUPL4",142,0)
 ;
"RTN","DGENUPL4",143,0)
 ;Allow Ineligible info deletion (Ineligible Project):
"RTN","DGENUPL4",144,0)
 I $D(DGPAT("INELDEC")),DGPAT("INELDEC")="" S DGPAT("INELDEC")="@"
"RTN","DGENUPL4",145,0)
 I $D(DGPAT("INELREA")),DGPAT("INELREA")="" S DGPAT("INELREA")="@"
"RTN","DGENUPL4",146,0)
 I $D(DGPAT("INELDATE")),DGPAT("INELDATE")="" S DGPAT("INELDATE")="@"
"RTN","DGENUPL4",147,0)
 ;
"RTN","DGENUPL4",148,0)
 ;catastrophic disability array
"RTN","DGENUPL4",149,0)
 S SUB=""
"RTN","DGENUPL4",150,0)
 F  S SUB=$O(DGCDIS(SUB)) Q:(SUB="")  D
"RTN","DGENUPL4",151,0)
 .I $D(DGCDIS(SUB))=1 I ($G(DGCDIS(SUB))'="") S DGCDIS3(SUB)=DGCDIS(SUB)
"RTN","DGENUPL4",152,0)
 .I $D(DGCDIS(SUB))=10 D
"RTN","DGENUPL4",153,0)
 ..S SUB2=""
"RTN","DGENUPL4",154,0)
 ..F  S SUB2=$O(DGCDIS(SUB,SUB2)) Q:SUB2=""  D
"RTN","DGENUPL4",155,0)
 ...I ($G(DGCDIS(SUB,SUB2))'="") S DGCDIS3(SUB,SUB2)=DGCDIS(SUB,SUB2)
"RTN","DGENUPL4",156,0)
 ...I SUB="PROC" D
"RTN","DGENUPL4",157,0)
 ....N CDPROC,CDEXT,LIEN
"RTN","DGENUPL4",158,0)
 ....S CDPROC=$G(DGCDIS("PROC",SUB2))
"RTN","DGENUPL4",159,0)
 ....Q:CDPROC=""
"RTN","DGENUPL4",160,0)
 ....S CDEXT=$G(DGCDIS("EXT",SUB2,1))
"RTN","DGENUPL4",161,0)
 ....Q:CDEXT=""
"RTN","DGENUPL4",162,0)
 ....S LIEN=$O(^DGEN(27.17,CDPROC,1,"B",CDEXT,0))
"RTN","DGENUPL4",163,0)
 ....Q:LIEN=""
"RTN","DGENUPL4",164,0)
 ....S DGCDIS3("EXT",SUB2,LIEN)=CDEXT
"RTN","DGENUPL4",165,0)
 ;
"RTN","DGENUPL4",166,0)
 ;eligibility array
"RTN","DGENUPL4",167,0)
 F  S SUB=$O(DGELG(SUB)) Q:(SUB="")  I ($G(DGELG(SUB))'="") S DGELG3(SUB)=$S((DGELG(SUB)="@"):"",1:DGELG(SUB))
"RTN","DGENUPL4",168,0)
 ;
"RTN","DGENUPL4",169,0)
 ;rated disabilities from HEC should replace local sites
"RTN","DGENUPL4",170,0)
 D
"RTN","DGENUPL4",171,0)
 .K DGELG3("RATEDIS")
"RTN","DGENUPL4",172,0)
 .M DGELG3("RATEDIS")=DGELG("RATEDIS")
"RTN","DGENUPL4",173,0)
 ;
"RTN","DGENUPL4",174,0)
 ;primary eligibility
"RTN","DGENUPL4",175,0)
 I (DGELG("ELIG","CODE")'="") S DGELG3("ELIG","CODE")=$S((DGELG("ELIG","CODE")="@"):"",($$NATCODE^DGENELA(DGELG("ELIG","CODE"))=$$NATCODE^DGENELA(DGELG3("ELIG","CODE"))):DGELG3("ELIG","CODE"),1:DGELG("ELIG","CODE"))
"RTN","DGENUPL4",176,0)
 ;
"RTN","DGENUPL4",177,0)
 ;patient eligibilities multiple
"RTN","DGENUPL4",178,0)
 ;delete veteran type codes not mapped to national codes sent by HEC, but leave non-veteran types and the codes where there is a match
"RTN","DGENUPL4",179,0)
 ;first find all local codes already in the patient file and the ones sent from HEC, keep in arrays LOC and HEC
"RTN","DGENUPL4",180,0)
 S NATCODE=$$NATCODE^DGENELA(DGELG("ELIG","CODE")) I NATCODE S HEC(NATCODE)=""
"RTN","DGENUPL4",181,0)
 S SUB=0 F  S SUB=$O(DGELG("ELIG","CODE",SUB)) Q:'SUB  S NATCODE=$$NATCODE^DGENELA(SUB) I NATCODE S HEC(NATCODE)=""
"RTN","DGENUPL4",182,0)
 S SUB=0 F  S SUB=$O(DGELG3("ELIG","CODE",SUB)) Q:'SUB  S NATCODE=$$NATCODE^DGENELA(SUB) I NATCODE S LOC(NATCODE)=""
"RTN","DGENUPL4",183,0)
 ;Now discard the codes in the local patient database that don't map to a national code sent by HEC, as well as HUMANIARIAN EMERGENCY code if not sent by HEC: 
"RTN","DGENUPL4",184,0)
 S SUB=0
"RTN","DGENUPL4",185,0)
 F  S SUB=$O(DGELG3("ELIG","CODE",SUB)) Q:'SUB  D
"RTN","DGENUPL4",186,0)
 .I $P($G(^DIC(8,SUB,0)),"^",5)="Y"!($P($G(^DIC(8,SUB,0)),"^")["HUMANITARIAN EMERGENCY"),'$D(HEC($$NATCODE^DGENELA(SUB))) K DGELG3("ELIG","CODE",SUB)
"RTN","DGENUPL4",187,0)
 ;now add codes included in the update that the local database does not already contain
"RTN","DGENUPL4",188,0)
 S SUB=0
"RTN","DGENUPL4",189,0)
 F  S SUB=$O(DGELG("ELIG","CODE",SUB)) Q:'SUB  D
"RTN","DGENUPL4",190,0)
 .I '$D(LOC($$NATCODE^DGENELA(SUB))) S DGELG3("ELIG","CODE",SUB)=SUB
"RTN","DGENUPL4",191,0)
 ;Agent Orange Exp. Location, use local database when upload is NULL
"RTN","DGENUPL4",192,0)
 D AO^DGENUPL9
"RTN","DGENUPL4",193,0)
 Q
"RTN","DGENUPL4",194,0)
 ;
"RTN","DGENUPL4",195,0)
CHECK() ;
"RTN","DGENUPL4",196,0)
 ;
"RTN","DGENUPL4",197,0)
 N SUCCESS,ALIVE,ERRMSG,DGENR
"RTN","DGENUPL4",198,0)
 S SUCCESS=1
"RTN","DGENUPL4",199,0)
 S ERRMSG=""
"RTN","DGENUPL4",200,0)
 ;
"RTN","DGENUPL4",201,0)
 ;if upload includes date of death, check for indications that patient is alive
"RTN","DGENUPL4",202,0)
 I DGPAT3("DEATH"),'OLDPAT("DEATH") D  S:ALIVE SUCCESS=0
"RTN","DGENUPL4",203,0)
 .;
"RTN","DGENUPL4",204,0)
 .;determine if patient is at the moment being registered
"RTN","DGENUPL4",205,0)
 .S ALIVE=$$IFREG^DGREG(DFN)
"RTN","DGENUPL4",206,0)
 .;
"RTN","DGENUPL4",207,0)
 .;check if an inpatient
"RTN","DGENUPL4",208,0)
 .I 'ALIVE,$$INPAT^DGENPTA(DFN,DT,DT) S ALIVE=1
"RTN","DGENUPL4",209,0)
 .;
"RTN","DGENUPL4",210,0)
 .;Phase II locally enrolled with enrollment date after death date and status of unverified and rejected-initial application by vamc (SRS 6.5.1.2 e)
"RTN","DGENUPL4",211,0)
 .N CURIEN,CURENR
"RTN","DGENUPL4",212,0)
 .S CURIEN=$$FINDCUR^DGENA(DFN)
"RTN","DGENUPL4",213,0)
 .I CURIEN,$$GET^DGENA(CURIEN,.CURENR),CURENR("DATE")>DGPAT3("DEATH"),CURENR("STATUS")=1!(CURENR("STATUS")=14) S ALIVE=1
"RTN","DGENUPL4",214,0)
 .;there is an indication that he patient may not be dead
"RTN","DGENUPL4",215,0)
 .D:ALIVE ADDERROR^DGENUPL(MSGID,DGPAT("SSN"),"LOCAL SITE VERIFY PATIENT DEATH",.ERRCOUNT),ADDMSG^DGENUPL3(.MSGS,"ELIBILITY UPLOAD CONTAINED DATE OF DEATH AND WAS REJECTED, PLEASE VERIFY PATIENT DEATH",1),NOTIFY^DGENUPL3(.DGPAT,.MSGS)
"RTN","DGENUPL4",216,0)
 ;
"RTN","DGENUPL4",217,0)
 ;only do consistency checks on this data if it is verified
"RTN","DGENUPL4",218,0)
 I SUCCESS,(DGELG3("ELIGSTA")="V") D
"RTN","DGENUPL4",219,0)
 .I $$CHECK^DGENPTA1(.DGPAT3,.ERRMSG),$$CHECK^DGENELA1(.DGELG3,.DGPAT3,.DGCDIS3,.ERRMSG),$$CHECK^DGENCDA1(.DGCDIS3,.ERRMSG)
"RTN","DGENUPL4",220,0)
 .E  D
"RTN","DGENUPL4",221,0)
 ..S SUCCESS=0
"RTN","DGENUPL4",222,0)
 ..D ADDERROR^DGENUPL(MSGID,DGPAT("SSN"),ERRMSG,.ERRCOUNT)
"RTN","DGENUPL4",223,0)
 Q SUCCESS
"VER")
8.0^22.0
"BLD",6100,6)
^641
**END**
**END**
