Released DI*22*146 SEQ #129
Extracted from mail message
**KIDS**:DI*22.0*146^

**INSTALL NAME**
DI*22.0*146
"BLD",572,0)
DI*22.0*146^VA FILEMAN^0^3060124^y
"BLD",572,1,0)
^^2^2^3060104^
"BLD",572,1,1,0)
See patch DI*22*146 in the National Patch Module on FORUM for complete
"BLD",572,1,2,0)
information on this patch.
"BLD",572,4,0)
^9.64PA^^
"BLD",572,"KRN",0)
^9.67PA^8989.52^19
"BLD",572,"KRN",.4,0)
.4
"BLD",572,"KRN",.401,0)
.401
"BLD",572,"KRN",.402,0)
.402
"BLD",572,"KRN",.403,0)
.403
"BLD",572,"KRN",.5,0)
.5
"BLD",572,"KRN",.84,0)
.84
"BLD",572,"KRN",3.6,0)
3.6
"BLD",572,"KRN",3.8,0)
3.8
"BLD",572,"KRN",9.2,0)
9.2
"BLD",572,"KRN",9.8,0)
9.8
"BLD",572,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",572,"KRN",9.8,"NM",1,0)
DIK1^^0^12914189
"BLD",572,"KRN",9.8,"NM",2,0)
DIKC^^0^61603904
"BLD",572,"KRN",9.8,"NM","B","DIK1",1)

"BLD",572,"KRN",9.8,"NM","B","DIKC",2)

"BLD",572,"KRN",19,0)
19
"BLD",572,"KRN",19.1,0)
19.1
"BLD",572,"KRN",101,0)
101
"BLD",572,"KRN",409.61,0)
409.61
"BLD",572,"KRN",771,0)
771
"BLD",572,"KRN",870,0)
870
"BLD",572,"KRN",8989.51,0)
8989.51
"BLD",572,"KRN",8989.52,0)
8989.52
"BLD",572,"KRN",8994,0)
8994
"BLD",572,"KRN","B",.4,.4)

"BLD",572,"KRN","B",.401,.401)

"BLD",572,"KRN","B",.402,.402)

"BLD",572,"KRN","B",.403,.403)

"BLD",572,"KRN","B",.5,.5)

"BLD",572,"KRN","B",.84,.84)

"BLD",572,"KRN","B",3.6,3.6)

"BLD",572,"KRN","B",3.8,3.8)

"BLD",572,"KRN","B",9.2,9.2)

"BLD",572,"KRN","B",9.8,9.8)

"BLD",572,"KRN","B",19,19)

"BLD",572,"KRN","B",19.1,19.1)

"BLD",572,"KRN","B",101,101)

"BLD",572,"KRN","B",409.61,409.61)

"BLD",572,"KRN","B",771,771)

"BLD",572,"KRN","B",870,870)

"BLD",572,"KRN","B",8989.51,8989.51)

"BLD",572,"KRN","B",8989.52,8989.52)

"BLD",572,"KRN","B",8994,8994)

"BLD",572,"PRE")
DIENVWRN
"BLD",572,"QUES",0)
^9.62^^
"BLD",572,"REQB",0)
^9.611^2^2
"BLD",572,"REQB",1,0)
DI*22.0*41^2
"BLD",572,"REQB",2,0)
DI*22.0*95^2
"BLD",572,"REQB","B","DI*22.0*41",1)

"BLD",572,"REQB","B","DI*22.0*95",2)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
VA FILEMAN^DI^FM INIT
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
22.0^2990330^3051028^41
"PKG",5,22,1,"PAH",1,0)
146^3060124^41
"PKG",5,22,1,"PAH",1,1,0)
^^2^2^3060124
"PKG",5,22,1,"PAH",1,1,1,0)
See patch DI*22*146 in the National Patch Module on FORUM for complete
"PKG",5,22,1,"PAH",1,1,2,0)
information on this patch.
"PRE")
DIENVWRN
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","DIENVWRN")
0^^B3680036
"RTN","DIENVWRN",1,0)
DIENVWRN ;IRMFO-SF/FM STAFF-ENVIRONMENT CHECK ROUTINE ;9:36 AM  26 Jan 2004
"RTN","DIENVWRN",2,0)
 ;;22.0;VA FileMan;;Mar 30, 1999
"RTN","DIENVWRN",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DIENVWRN",4,0)
 ;
"RTN","DIENVWRN",5,0)
 ; Check XPDENV 0 = Loading; 1 = Installing
"RTN","DIENVWRN",6,0)
 I 'XPDENV Q  ; Loading Distribution - No Check
"RTN","DIENVWRN",7,0)
 ;
"RTN","DIENVWRN",8,0)
INSCHK ; Do Checks During Install Only
"RTN","DIENVWRN",9,0)
 W $C(7)
"RTN","DIENVWRN",10,0)
 D MES^XPDUTL("** Although Queuing is allowed - it is HIGHLY recommended that ALL Users and")
"RTN","DIENVWRN",11,0)
 D MES^XPDUTL("VISTA Background jobs be STOPPED before installation of this patch.  Failure")
"RTN","DIENVWRN",12,0)
 D MES^XPDUTL("to do so may result in 'source routine edited' error(s). Edits will be")
"RTN","DIENVWRN",13,0)
 D MES^XPDUTL("lost and record(s) may be left in an inconsistent state, for example,")
"RTN","DIENVWRN",14,0)
 D MES^XPDUTL("not all Cross-Referencing completed; which in turn may cause FUTURE")
"RTN","DIENVWRN",15,0)
 D MES^XPDUTL("VistA/FileMan Hard Errors or corrupted Data. **")
"RTN","DIENVWRN",16,0)
 ;
"RTN","DIENVWRN",17,0)
TMCHK ; Check to see if TaskMan is still running
"RTN","DIENVWRN",18,0)
 S X=$$TM^%ZTLOAD
"RTN","DIENVWRN",19,0)
 I X,'$D(^%ZTSCH("WAIT")) D
"RTN","DIENVWRN",20,0)
 . W $C(7)
"RTN","DIENVWRN",21,0)
 . D BMES^XPDUTL("* Warning TaskMan Has NOT Been Stopped or Placed in a WAIT State!")
"RTN","DIENVWRN",22,0)
 ;
"RTN","DIENVWRN",23,0)
LINH ; Check to see if Logons are Inhibited
"RTN","DIENVWRN",24,0)
 D GETENV^%ZOSV  ; $P(Y,"^",2) = Installing Volume
"RTN","DIENVWRN",25,0)
 S X=+$G(^%ZIS(14.5,"LOGON",$P(Y,"^",2)))
"RTN","DIENVWRN",26,0)
 I 'X D
"RTN","DIENVWRN",27,0)
 . W $C(7)
"RTN","DIENVWRN",28,0)
 . D BMES^XPDUTL("* Warning Logons are NOT Inhibited!")
"RTN","DIENVWRN",29,0)
 Q
"RTN","DIK1")
0^1^B12914189
"RTN","DIK1",1,0)
DIK1 ;SFISC/GFT-ACTUAL INDEXER ;24JAN2006
"RTN","DIK1",2,0)
 ;;22.0;VA FileMan;**1,10,41,146**;Mar 30, 1999
"RTN","DIK1",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DIK1",4,0)
EN D DI
"RTN","DIK1",5,0)
 D INDEX^DIKC(DIK,.DA,"","","KT")
"RTN","DIK1",6,0)
 ;
"RTN","DIK1",7,0)
 D K G Q:'$D(@(DIK_"0)"))
"RTN","DIK1",8,0)
 S Y=^(0),DH=$S($O(^(0))'>0:0,1:$P(Y,U,4)-1),X=$P($P(Y,U,3),U,DH>0) D 3:X=DA
"RTN","DIK1",9,0)
 S ^(0)=$P(Y,U,1,2)_U_X_U_DH
"RTN","DIK1",10,0)
Q K:$G(DIKJ) ^UTILITY("DIK",DIKJ)
"RTN","DIK1",11,0)
 K DB(0),DIKJ,DIKS,DIN,DH,DU,DV,DW,DIKGP Q
"RTN","DIK1",12,0)
 ;
"RTN","DIK1",13,0)
K S X="",Y=1 I $D(DIFKEP(DA))#2,DIK="^DIC(",$D(@(DIK_DA_",0,""GL"")")) S X=^("GL"),Y="^DIC("_DA_","
"RTN","DIK1",14,0)
 I X'=Y K @(DIK_"DA)"),X,Y Q
"RTN","DIK1",15,0)
 S X=DIK_"DA,",DH=@(X_"0)") K ^(0),^("%") S Y="""%""" F  S Y=$O(@(X_Y_")")) Q:$E(Y)'="%"  S Y=""""_Y_"""" K @(X_Y_")")
"RTN","DIK1",16,0)
 S @(X_"0)")=DH K X,Y
"RTN","DIK1",17,0)
 Q
"RTN","DIK1",18,0)
 ;
"RTN","DIK1",19,0)
3 N X1
"RTN","DIK1",20,0)
 S X1=X,X=+$O(^(X1),-1)
"RTN","DIK1",21,0)
 S:X'>0 X=+$O(^(X1))
"RTN","DIK1",22,0)
 Q
"RTN","DIK1",23,0)
 ;
"RTN","DIK1",24,0)
DI S (DIC,DIN)=DIK,DH=DH(DU),DV=1 F  S DV=$O(DA(DV)) Q:DV'>0  S DU=DU+1
"RTN","DIK1",25,0)
DIN S DV=0 F  S DV=$O(^UTILITY("DIK",DIKJ,DH,DV)) Q:DV=""  D R:$G(DIKSET)!(DV-.01)
"RTN","DIK1",26,0)
DVA S DV=$O(DV(DH,DV)) I DV="" Q:$G(DIKSET)  S DV=.01 D R:$D(^UTILITY("DIK",DIKJ,DH,DV)) Q
"RTN","DIK1",27,0)
 S X=DIN_DA_","_DV(DH,DV) I @("'$D("_X_"))") G DVA
"RTN","DIK1",28,0)
 S DU(DU)=DIN,DIN=X_",",DH(DU)=DH,DH=DV(DH,DV,0),DV(DU)=DV,DU=DU+1 F X=DU:-1:1 I $D(DA(X)) S DA(X+1)=DA(X)
"RTN","DIK1",29,0)
 S DA(1)=DA,DA=0
"RTN","DIK1",30,0)
DA I '$D(DV(DH(DU-1),DV,"NOLOOP")) F  S @("DA=$O("_DIN_"DA))") Q:DA'>0  D DIN
"RTN","DIK1",31,0)
 D:$D(^UTILITY("DIK",DIKJ,"KW",DH)) KW(DH)
"RTN","DIK1",32,0)
 S DU=DU-1,DIN=DU(DU),DH=DH(DU),DV=DV(DU),DA=DA(1) K DA(1) F X=2:1 G DVA:'$D(DA(X)) S DA(X-1)=DA(X) K DA(X)
"RTN","DIK1",33,0)
 ;
"RTN","DIK1",34,0)
R S X=^UTILITY("DIK",DIKJ,DH,DV),%=^(DV,0) I @("$D("_DIN_DA_",X))[0") Q
"RTN","DIK1",35,0)
 X % Q:X']""  S DIKS=X,DW=0
"RTN","DIK1",36,0)
XEC S DW=$O(^UTILITY("DIK",DIKJ,DH,DV,DW)) Q:DW=""  X ^(DW) S X=DIKS G XEC
"RTN","DIK1",37,0)
 ;
"RTN","DIK1",38,0)
RCR K Y,%RCR F %="DIKS","DIK","DW","DH","DIN","DU","DV","X","KW","DIKSET" S %RCR(%)=""
"RTN","DIK1",39,0)
 S %RCR="RR^DIK1",Y=^UTILITY("DIK",DIKJ,DH,DV,DW,0) G STORLIST^%RCR
"RTN","DIK1",40,0)
 ;
"RTN","DIK1",41,0)
RR X Y Q
"RTN","DIK1",42,0)
 ;
"RTN","DIK1",43,0)
AUDIT N %,%F,%T,%D,DIKF,DIKDA Q:DIIX=3&($D(DIKNM)!$D(DIKKS))  S %=DV N DV S DV=%
"RTN","DIK1",44,0)
 S %F=DH F %=1:1 Q:'$D(^DD(%F,0,"UP"))  S %D=%F,%F=^("UP"),DV(%)=$O(^DD(%F,"SB",%D,0)) S:DV(%)="" DV(%)=-1
"RTN","DIK1",45,0)
 S DIKDA="",DIKF="" F %=%-1:-1:1 S DIKDA=DIKDA_DA(%)_",",DIKF=DIKF_DV(%)_","
"RTN","DIK1",46,0)
 I $D(^DD(DH,DV,"AX")) X ^("AX") I '$T Q
"RTN","DIK1",47,0)
 D ADD^DIET S DIAU(DH,DV,DIKDA_DA)="^DIA("_%F_","_+Y_",",^DIA(%F,%D,0)=DIKDA_DA_U_%T_U_DIKF_DV_U_DUZ,^DIA(%F,"B",DIKDA_DA,%D)=""
"RTN","DIK1",48,0)
SET N C S (%F,C)=$P(^DD(DH,DV,0),U,2),Y=X D:Y]"" S^DIQ S @(DIAU(DH,DV,DIKDA_DA)_"DIIX)")=Y S:DIIX=2&($D(DIKNM)!$D(DIKKS)) ^(3)=Y
"RTN","DIK1",49,0)
 K DIAU I %F["P"!(%F["V")!(%F["S") S ^(DIIX+.1)=X_U_%F
"RTN","DIK1",50,0)
 Q
"RTN","DIK1",51,0)
 ;
"RTN","DIK1",52,0)
1 ;
"RTN","DIK1",53,0)
 N DIKLK
"RTN","DIK1",54,0)
 S DIKLK=DIK_DA_")" L +@DIKLK:10 K:'$T DIKLK D DI L:$D(DIKLK) -@DIKLK G Q
"RTN","DIK1",55,0)
 ;
"RTN","DIK1",56,0)
CNT ;
"RTN","DIK1",57,0)
 N DIKLK,DIKLAST S DIKLAST=$S(DA:DA,1:"")
"RTN","DIK1",58,0)
 S DU=$E(DIK,1,$L(DIK)-1),DIKLK=$S(DIK[",":DU_")",1:DU) L +@DIKLK:10 K:'$T DIKLK
"RTN","DIK1",59,0)
C I @("$O("_DIK_"DA))'>0") S $P(@(DIK_"0)"),U,4)=DCNT D:$D(^UTILITY("DIK",DIKJ,"KW",DH(1))) KW(DH(1)) K DCNT L:$D(DIKLK) -@DIKLK G Q ;**DI*22*146
"RTN","DIK1",60,0)
 S DA=$O(^(DA)) G C:$P($G(^(DA,0)),U)']"" S DIKLAST=DA,DU=1,DCNT=DCNT+1 S:DA="" DA=-1 D:(DCNT#100=0) WR D DI K DB(0) G C
"RTN","DIK1",61,0)
WR I $D(IO)#2,$D(IO(0))#2,IO=IO(0),IO="" Q
"RTN","DIK1",62,0)
 W "." Q
"RTN","DIK1",63,0)
 ;
"RTN","DIK1",64,0)
KW(FIL) ;Kill entire regular indexes
"RTN","DIK1",65,0)
 N NAM
"RTN","DIK1",66,0)
 S NAM="" F  S NAM=$O(^UTILITY("DIK",DIKJ,"KW",FIL,NAM)) Q:NAM=""  K @(DIN_""""_NAM_""")")
"RTN","DIK1",67,0)
 Q
"RTN","DIKC")
0^2^B61603904
"RTN","DIKC",1,0)
DIKC ;SFISC/MKO-FIRE INDEX FILE CROSS REFERENCES ;27DEC2005
"RTN","DIKC",2,0)
 ;;22.0;VA FileMan;**1,22,11,68,95,146**;Mar 30, 1999
"RTN","DIKC",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DIKC",4,0)
 ;
"RTN","DIKC",5,0)
INDEX(DIFILE,DIREC,DIFLD,DIXREF,DICTRL) ;Fire Index file xrefs
"RTN","DIKC",6,0)
 N DA,DIF,DIKACT,DIKCT,DIKERR,DIKLOCK,DIKLOG,DIKON,DIKRFIL
"RTN","DIKC",7,0)
 N DIKTMP,DIKVAL,DIMF,DIROOT
"RTN","DIKC",8,0)
 ;
"RTN","DIKC",9,0)
 ;Initialization
"RTN","DIKC",10,0)
 S DIF=$E("D",$G(DICTRL)["D")
"RTN","DIKC",11,0)
 I DIF["D",'$D(DIQUIET) N DIQUIET S DIQUIET=1
"RTN","DIKC",12,0)
 I DIF["D",'$D(DIFM) N DIFM S DIFM=1 D INIZE^DIEFU
"RTN","DIKC",13,0)
 ;
"RTN","DIKC",14,0)
 ;Check (and convert) input parameters
"RTN","DIKC",15,0)
 D CHK^DIKC2 G:$G(DIKERR)]"" EXIT
"RTN","DIKC",16,0)
 ;
"RTN","DIKC",17,0)
 ;Setup variables
"RTN","DIKC",18,0)
 S DIKCT=$E("C",$G(DICTRL)["C")_$E("T",$G(DICTRL)["T")
"RTN","DIKC",19,0)
 S DIKLOG=$E("K",$G(DICTRL)["K")_$E("S",$G(DICTRL)["S")
"RTN","DIKC",20,0)
 S:DIKLOG="" DIKLOG=$E("K",DIKCT'["C")_$E("S",DIKCT'["T")
"RTN","DIKC",21,0)
 S DIKACT=$E("R",$G(DICTRL)["R")_$E("I",$G(DICTRL)["I")
"RTN","DIKC",22,0)
 S DIKRFIL=$S($G(DICTRL)["W":+$P(DICTRL,"W",2),1:DIFILE)
"RTN","DIKC",23,0)
 I $G(DICTRL)["k" D
"RTN","DIKC",24,0)
 . S DIKLOCK=+$P(DICTRL,"k",2)\1
"RTN","DIKC",25,0)
 . S:DIKLOCK<0 DIKLOCK=-DIKLOCK
"RTN","DIKC",26,0)
 . S:$E($P(DICTRL,"k",2))="-" DIKLOCK("STOP")=1
"RTN","DIKC",27,0)
 E  S DIKLOCK=1
"RTN","DIKC",28,0)
 ;
"RTN","DIKC",29,0)
 ;Load xref information into @DIKTMP
"RTN","DIKC",30,0)
 S DIKTMP=$G(DICTRL("LOGIC"))
"RTN","DIKC",31,0)
 I $G(DIKTMP)="" D
"RTN","DIKC",32,0)
 . S DIKTMP=$$GETTMP^DIKC1("DIKC")
"RTN","DIKC",33,0)
 . I $G(DIXREF)?."^" D
"RTN","DIKC",34,0)
 .. I $G(DIFLD) D
"RTN","DIKC",35,0)
 ... D LOADFLD^DIKC1(DIKRFIL,DIFLD,DIKLOG_"W",DIKACT,DIKVAL,DIKTMP,DIKTMP,$E("i",$G(DICTRL)["i"))
"RTN","DIKC",36,0)
 .. E  D LOADALL^DIKC1(DIKRFIL,DIKLOG,DIKACT,DIKVAL,DIKTMP,$E("s",$G(DICTRL)["s")_$E("i",$G(DICTRL)["i"),.DIMF)
"RTN","DIKC",37,0)
 . E  D LOADXREF^DIKC1(DIKRFIL,$G(DIFLD),DIKLOG,.DIXREF,DIKVAL,DIKTMP)
"RTN","DIKC",38,0)
 ;
"RTN","DIKC",39,0)
 D:DIKRFIL'=DIFILE SBINFO^DIKCU(DIKRFIL,.DIMF)
"RTN","DIKC",40,0)
 ;
"RTN","DIKC",41,0)
 ;Fire the xrefs for all records or the record specified in DA
"RTN","DIKC",42,0)
 I 'DA D
"RTN","DIKC",43,0)
 . L +@DIROOT:DIKLOCK E  D  Q:$G(DIKLOCK("STOP"))
"RTN","DIKC",44,0)
 .. S DIKLOCK=""
"RTN","DIKC",45,0)
 .. D:DIF["D" ERR^DIKCU2(112,DIFILE)
"RTN","DIKC",46,0)
 . D FIREALL(DIFILE,.DA,DIROOT,DIKLOG,.DIMF,DIKTMP,DIKON,"",DIKCT)
"RTN","DIKC",47,0)
 . L:DIKLOCK]"" -@DIROOT
"RTN","DIKC",48,0)
 E  D
"RTN","DIKC",49,0)
 . L +@DIROOT@(DA):DIKLOCK E  D  Q:$G(DIKLOCK("STOP"))
"RTN","DIKC",50,0)
 .. S DIKLOCK=""
"RTN","DIKC",51,0)
 .. D:DIF["D" ERR^DIKCU2(110,DIFILE,$$IENS^DIKCU(DIFILE,.DA))
"RTN","DIKC",52,0)
 . D:$D(@DIKTMP@(DIFILE)) FIRE(DIFILE,.DA,DIKLOG,DIKTMP,DIKON,"",DIKCT)
"RTN","DIKC",53,0)
 . D:$D(DIMF(DIFILE)) FIRESUB(DIFILE,.DA,DIROOT,DIKLOG,.DIMF,DIKTMP,DIKON,"",DIKCT)
"RTN","DIKC",54,0)
 . L:DIKLOCK]"" -@DIROOT@(DA)
"RTN","DIKC",55,0)
 ;
"RTN","DIKC",56,0)
 ;Cleanup ^TMP
"RTN","DIKC",57,0)
 K @DIKTMP
"RTN","DIKC",58,0)
 ;
"RTN","DIKC",59,0)
EXIT ;Move error messages if necessary
"RTN","DIKC",60,0)
 I DIF["D",$G(DIERR),$G(DICTRL("MSG"))]"" D CALLOUT^DIEFU(DICTRL("MSG"))
"RTN","DIKC",61,0)
 Q
"RTN","DIKC",62,0)
 ;
"RTN","DIKC",63,0)
FIREALL(DIFILE,DA,DIROOT,DILOG,DIMF,DIKTMP,DIKON,DIKEY,DIKCT) ;Fire xrefs, all recs
"RTN","DIKC",64,0)
 N DICNT,DIIENS,DILAST,DIXR
"RTN","DIKC",65,0)
 S DILOG=$G(DILOG),DIKON=$G(DIKON)
"RTN","DIKC",66,0)
 S DIIENS=$$IENS^DIKCU(DIFILE,.DA)
"RTN","DIKC",67,0)
 ;
"RTN","DIKC",68,0)
 ;Kill entire indexes
"RTN","DIKC",69,0)
 I DILOG["K",$D(@DIKTMP@("KW",DIFILE)) D XECKW(DIFILE,.DA,$D(DIMF(DIFILE))>0)
"RTN","DIKC",70,0)
 I '$D(@DIKTMP@(DIFILE)),'$D(DIMF(DIFILE)) Q
"RTN","DIKC",71,0)
 ;
"RTN","DIKC",72,0)
 ;Loop through all records in the file
"RTN","DIKC",73,0)
 S (DICNT,DA)=0 F  S DA=$O(@DIROOT@(DA)) Q:DA'=+DA  D
"RTN","DIKC",74,0)
 . S $P(DIIENS,",")=DA
"RTN","DIKC",75,0)
 . S DICNT=DICNT+1
"RTN","DIKC",76,0)
 . D:$D(@DIKTMP@(DIFILE)) FIRE(DIFILE,.DA,DILOG,DIKTMP,DIKON,.DIKEY,DIKCT,DIIENS)
"RTN","DIKC",77,0)
 . D:$D(DIMF(DIFILE)) FIRESUB(DIFILE,.DA,DIROOT,DILOG,.DIMF,DIKTMP,DIKON,.DIKEY,DIKCT)
"RTN","DIKC",78,0)
 ;
"RTN","DIKC",79,0)
 ;Update header node
"RTN","DIKC",80,0)
 I $D(@DIROOT@(0))#2 D
"RTN","DIKC",81,0)
 . S DILAST=$O(@DIROOT@(" "),-1) S:'DILAST DILAST=""
"RTN","DIKC",82,0)
 . S:'DICNT DICNT=""
"RTN","DIKC",83,0)
 . S $P(@DIROOT@(0),U,4)=DICNT ;**DI*22*146
"RTN","DIKC",84,0)
 Q
"RTN","DIKC",85,0)
 ;
"RTN","DIKC",86,0)
FIRE(DIFILE,DA,DILOG,DIKTMP,DIKON,DIKEY,DIKCT,DIIENS) ;Fire xrefs, one record
"RTN","DIKC",87,0)
 N DI01,DIKCLOG,DINULL,DION,DIXR,I,J,X,X2,XN
"RTN","DIKC",88,0)
 S DILOG=$G(DILOG),DIKON=$G(DIKON)
"RTN","DIKC",89,0)
 S:$G(DIIENS)="" DIIENS=$$IENS^DIKCU(DIFILE,.DA)
"RTN","DIKC",90,0)
 ;
"RTN","DIKC",91,0)
 I DIKON="" S DIXR=0 F  S DIXR=$O(@DIKTMP@(DIFILE,DIXR)) Q:DIXR'=+DIXR  D
"RTN","DIKC",92,0)
 . D SETXARR(DIFILE,DIXR,DIKTMP,.DINULL) Q:DINULL
"RTN","DIKC",93,0)
 . I $G(DIKCT)="" D XECUTE(DIFILE,DIXR,DILOG,.X,.X,DIKTMP) Q
"RTN","DIKC",94,0)
 . ;
"RTN","DIKC",95,0)
 . K XN S XN="",I=0 F  S I=$O(X(I)) Q:'I  S XN(I)=""
"RTN","DIKC",96,0)
 . I $G(DIKCT)="C" D XECUTE(DIFILE,DIXR,"S",.XN,.X,DIKTMP) Q
"RTN","DIKC",97,0)
 . I $G(DIKCT)="T" D XECUTE(DIFILE,DIXR,"K",.X,.XN,DIKTMP) Q
"RTN","DIKC",98,0)
 ;
"RTN","DIKC",99,0)
 E  S DIXR=0 F  S DIXR=$O(@DIKTMP@(DIFILE,DIXR)) Q:DIXR'=+DIXR  D
"RTN","DIKC",100,0)
 . K DINFLD
"RTN","DIKC",101,0)
 . S DIKCLOG=""
"RTN","DIKC",102,0)
 . ;
"RTN","DIKC",103,0)
 . ;Set X2 array to new values
"RTN","DIKC",104,0)
 . S DION=$P(DIKON,U,2)
"RTN","DIKC",105,0)
 . D SETXARR(DIFILE,DIXR,DIKTMP,.DINULL,DION) M X2=X
"RTN","DIKC",106,0)
 . ;
"RTN","DIKC",107,0)
 . ;If SET requested, make sure no new values are null
"RTN","DIKC",108,0)
 . I DILOG["S" D
"RTN","DIKC",109,0)
 .. I 'DINULL S DIKCLOG="S"
"RTN","DIKC",110,0)
 .. E  I $P(DIKON,U,4)="N" S I=0 F  S I=$O(^DD("KEY","AU",DIXR,I)) Q:'I  D
"RTN","DIKC",111,0)
 ... S DIKEY(DIFILE,I,DIIENS)="n"
"RTN","DIKC",112,0)
 ... S J=0 F  S J=$O(DINULL(J)) Q:'J  S DIKEY(DIFILE,I,DIIENS,$P(DINULL(J),U),$P(DINULL(J),U,2))=$P(DINULL(J),U,3)
"RTN","DIKC",113,0)
 . ;
"RTN","DIKC",114,0)
 . ;Set X array to old values
"RTN","DIKC",115,0)
 . S DION=$P(DIKON,U)
"RTN","DIKC",116,0)
 . D SETXARR(DIFILE,DIXR,DIKTMP,.DINULL,DION,.DI01)
"RTN","DIKC",117,0)
 . ;
"RTN","DIKC",118,0)
 . ;If KILL requested, make sure no old values are null
"RTN","DIKC",119,0)
 . I DILOG["K",'DINULL S DIKCLOG="K"_DIKCLOG
"RTN","DIKC",120,0)
 . ;
"RTN","DIKC",121,0)
 . ;If "C" flag, set old .01 value to null
"RTN","DIKC",122,0)
 . I $G(DIKCT)="C",$D(DI01) D
"RTN","DIKC",123,0)
 .. S I=0 F  S I=$O(DI01(I)) Q:'I  S X(I)=""
"RTN","DIKC",124,0)
 .. S:$O(DI01(0))=$O(X(0)) X=""
"RTN","DIKC",125,0)
 .. S DIKCLOG=$TR(DIKCLOG,"K")
"RTN","DIKC",126,0)
 . ;
"RTN","DIKC",127,0)
 . ;If "T" flag, set all new values to null
"RTN","DIKC",128,0)
 . I $G(DIKCT)="T" S X2="",I=0 F  S I=$O(X2(I)) Q:'I  S X2(I)=""
"RTN","DIKC",129,0)
 . ;
"RTN","DIKC",130,0)
 . ;Execute the kill and set logic
"RTN","DIKC",131,0)
 . D XECUTE(DIFILE,DIXR,DIKCLOG,.X,.X2,DIKTMP)
"RTN","DIKC",132,0)
 . ;
"RTN","DIKC",133,0)
 . I DIKCLOG["S",$P(DIKON,U,3)="K",$D(^DD("KEY","AU",DIXR)) D
"RTN","DIKC",134,0)
 .. Q:$$UNIQUE^DIKK2(DIFILE,DIXR,.X2,.DA,DIKTMP)
"RTN","DIKC",135,0)
 .. S I=0 F  S I=$O(^DD("KEY","AU",DIXR,I)) Q:'I  S DIKEY(DIFILE,I,DIIENS)=""
"RTN","DIKC",136,0)
 Q
"RTN","DIKC",137,0)
 ;
"RTN","DIKC",138,0)
FIRESUB(DIFILE,DA,DIROOT,DILOG,DIMF,DIKTMP,DIKON,DIKEY,DIKCT) ;Fire xrefs for
"RTN","DIKC",139,0)
 ;all subfiles under DIFILE, for all subrecords under DA
"RTN","DIKC",140,0)
 Q:'$D(DIMF(DIFILE))
"RTN","DIKC",141,0)
 N DIMULTF,DISBFILE,DISBROOT,X
"RTN","DIKC",142,0)
 S DILOG=$G(DILOG),DIKON=$G(DIKON)
"RTN","DIKC",143,0)
 ;
"RTN","DIKC",144,0)
 ;Push down the DA array
"RTN","DIKC",145,0)
 D PUSHDA^DIKCU(.DA)
"RTN","DIKC",146,0)
 ;
"RTN","DIKC",147,0)
 ;Loop through DIMF array and fire xrefs for subfiles
"RTN","DIKC",148,0)
 S DIMULTF=0 F  S DIMULTF=$O(DIMF(DIFILE,DIMULTF)) Q:'DIMULTF  D
"RTN","DIKC",149,0)
 . S DISBROOT=$NA(@DIROOT@(DA(1),DIMF(DIFILE,DIMULTF))) Q:'$D(@DISBROOT)
"RTN","DIKC",150,0)
 . S DISBFILE=DIMF(DIFILE,DIMULTF,0)
"RTN","DIKC",151,0)
 . D FIREALL(DISBFILE,.DA,DISBROOT,DILOG,.DIMF,DIKTMP,DIKON,.DIKEY,DIKCT)
"RTN","DIKC",152,0)
 ;
"RTN","DIKC",153,0)
 ;Pop the DA array
"RTN","DIKC",154,0)
 D POPDA^DIKCU(.DA)
"RTN","DIKC",155,0)
 Q
"RTN","DIKC",156,0)
 ;
"RTN","DIKC",157,0)
XECUTE(DIFILE,DIXR,DILOG,DIKCX1,DIKCX2,DIKTMP) ;Xecute the logic in ^TMP
"RTN","DIKC",158,0)
 Q:$G(DILOG)=""
"RTN","DIKC",159,0)
 N DIKCOD,DIKCON,X,X1,X2
"RTN","DIKC",160,0)
 ;
"RTN","DIKC",161,0)
 ;Execute kill logic
"RTN","DIKC",162,0)
 I DILOG["K" D
"RTN","DIKC",163,0)
 . S DIKCOD=$G(@DIKTMP@(DIFILE,DIXR,"K")) Q:DIKCOD?."^"
"RTN","DIKC",164,0)
 . S DIKCON=$G(@DIKTMP@(DIFILE,DIXR,"KC"))
"RTN","DIKC",165,0)
 . I DIKCON'?."^" M X=DIKCX1,X1=DIKCX1,X2=DIKCX2 X DIKCON Q:'$G(X)  K X,X1,X2
"RTN","DIKC",166,0)
 . M X=DIKCX1,X1=DIKCX1,X2=DIKCX2
"RTN","DIKC",167,0)
 . X DIKCOD K X,X1,X2
"RTN","DIKC",168,0)
 ;
"RTN","DIKC",169,0)
 ;Execute set logic
"RTN","DIKC",170,0)
 I DILOG["S" D
"RTN","DIKC",171,0)
 . S DIKCOD=$G(@DIKTMP@(DIFILE,DIXR,"S")) Q:DIKCOD?."^"
"RTN","DIKC",172,0)
 . S DIKCON=$G(@DIKTMP@(DIFILE,DIXR,"SC"))
"RTN","DIKC",173,0)
 . I DIKCON'?."^" M X=DIKCX2,X1=DIKCX1,X2=DIKCX2 X DIKCON Q:'$G(X)  K X,X1,X2
"RTN","DIKC",174,0)
 . M X=DIKCX2,X1=DIKCX1,X2=DIKCX2
"RTN","DIKC",175,0)
 . X DIKCOD
"RTN","DIKC",176,0)
 Q
"RTN","DIKC",177,0)
 ;
"RTN","DIKC",178,0)
XECKW(DIFILE,DA,DIKSUB) ;Execute the logic to kill the entire index
"RTN","DIKC",179,0)
 N DIKFIL,DIKKW,DIKKW0,DIKLDIF,DIXR
"RTN","DIKC",180,0)
 ;
"RTN","DIKC",181,0)
 S DIXR=0 F  S DIXR=$O(@DIKTMP@("KW",DIFILE,DIXR)) Q:DIXR'=+DIXR  D
"RTN","DIKC",182,0)
 . S DIKKW=$G(@DIKTMP@("KW",DIFILE,DIXR)) Q:DIKKW?."^"
"RTN","DIKC",183,0)
 . S DIKKW0=$G(@DIKTMP@("KW",DIFILE,DIXR,0))
"RTN","DIKC",184,0)
 . ;
"RTN","DIKC",185,0)
 . ;If not a whole file xref, kill the entire index and quit
"RTN","DIKC",186,0)
 . I DIKKW0="" X DIKKW D  Q
"RTN","DIKC",187,0)
 .. I '$D(@DIKTMP@(DIFILE,DIXR,"S")) K @DIKTMP@(DIFILE,DIXR)
"RTN","DIKC",188,0)
 .. E  K @DIKTMP@(DIFILE,DIXR,"K"),@DIKTMP@(DIFILE,DIXR,"KC")
"RTN","DIKC",189,0)
 . ;
"RTN","DIKC",190,0)
 . ;Quit if this isn't a whole file xref or we're not doing subfiles
"RTN","DIKC",191,0)
 . Q:$P(DIKKW0,U)'="W"!'$G(DIKSUB)
"RTN","DIKC",192,0)
 . ;
"RTN","DIKC",193,0)
 . ;Kill the whole index after pushing DA the appropriate amount
"RTN","DIKC",194,0)
 . S DIKFIL=$P(DIKKW0,U,2),DIKLDIF=$P(DIKKW0,U,3)
"RTN","DIKC",195,0)
 . D PUSHDA^DIKCU(.DA,DIKLDIF)
"RTN","DIKC",196,0)
 . X DIKKW
"RTN","DIKC",197,0)
 . I '$D(@DIKTMP@(DIKFIL,DIXR,"S")) K @DIKTMP@(DIKFIL,DIXR)
"RTN","DIKC",198,0)
 . E  K @DIKTMP@(DIKFIL,DIXR,"K"),@DIKTMP@(DIKFIL,DIXR,"KC")
"RTN","DIKC",199,0)
 . D POPDA^DIKCU(.DA,DIKLDIF)
"RTN","DIKC",200,0)
 Q
"RTN","DIKC",201,0)
 ;
"RTN","DIKC",202,0)
SETXARR(DIFILE,DIXR,DIKTMP,DINULL,DION,DI01) ;Loop through DIKTMP and set X array.
"RTN","DIKC",203,0)
 ;If any values used as subscripts are null, return
"RTN","DIKC",204,0)
 ; DINULL=1
"RTN","DIKC",205,0)
 ; DINULL(order#) = ""
"RTN","DIKC",206,0)
 ;                  or file^field^levDiff (for field type subscripts)
"RTN","DIKC",207,0)
 ; DI01(order#) = "" if order # is .01 field
"RTN","DIKC",208,0)
 ;
"RTN","DIKC",209,0)
 N DIKCX,DIKF,DIKO,X1,X2
"RTN","DIKC",210,0)
 K X,DI01,DINULL
"RTN","DIKC",211,0)
 S DINULL=0,(DIKF,DIKO)=$O(@DIKTMP@(DIFILE,DIXR,0)) Q:'DIKF
"RTN","DIKC",212,0)
 ;
"RTN","DIKC",213,0)
 S:$G(DION)="" DION=U
"RTN","DIKC",214,0)
 F  D  S DIKO=$O(@DIKTMP@(DIFILE,DIXR,DIKO)) Q:'DIKO
"RTN","DIKC",215,0)
 . K DIKCX M DIKCX=X
"RTN","DIKC",216,0)
 . X $G(@DIKTMP@(DIFILE,DIXR,DIKO))
"RTN","DIKC",217,0)
 . I $G(X)]"",$D(@DIKTMP@(DIFILE,DIXR,DIKO,"T")) X @DIKTMP@(DIFILE,DIXR,DIKO,"T")
"RTN","DIKC",218,0)
 . S:$D(X)#2 (DIKCX,DIKCX(DIKO))=X K X M X=DIKCX
"RTN","DIKC",219,0)
 . S:$P($G(@DIKTMP@(DIFILE,DIXR,DIKO,"F")),U,2)=.01 DI01(DIKO)=""
"RTN","DIKC",220,0)
 . I $G(X(DIKO))="",$G(@DIKTMP@(DIFILE,DIXR,DIKO,"SS")) S DINULL=1 S:$G(@DIKTMP@(DIFILE,DIXR,DIKO,"F")) DINULL(DIKO)=@DIKTMP@(DIFILE,DIXR,DIKO,"F")
"RTN","DIKC",221,0)
 ;
"RTN","DIKC",222,0)
 S:$D(X(DIKF))#2 X=$G(X(DIKF))
"RTN","DIKC",223,0)
 Q
"RTN","DIKC",224,0)
 ;
"RTN","DIKC",225,0)
 ;#110  The record is currently locked.
"RTN","DIKC",226,0)
 ;#112  The file is currently locked.
"VER")
8^22.0
"BLD",572,6)
^129
**END**
**END**
