Released ECX*3*105 SEQ #99
Extracted from mail message
**KIDS**:ECX*3.0*105^

**INSTALL NAME**
ECX*3.0*105
"BLD",7002,0)
ECX*3.0*105^DSS EXTRACTS^0^3071128^y
"BLD",7002,1,0)
^^1^1^3070525^
"BLD",7002,1,1,0)
DSS FY08
"BLD",7002,4,0)
^9.64PA^727.832^18
"BLD",7002,4,727.1,0)
727.1
"BLD",7002,4,727.1,222)
y^y^f^^n^^y^o^n
"BLD",7002,4,727.1,224)

"BLD",7002,4,727.802,0)
727.802
"BLD",7002,4,727.802,2,0)
^9.641^727.802^1
"BLD",7002,4,727.802,2,727.802,0)
ADMISSION EXTRACT  (File-top level)
"BLD",7002,4,727.802,2,727.802,1,0)
^9.6411^83^10
"BLD",7002,4,727.802,2,727.802,1,39,0)
PLACEHOLDER
"BLD",7002,4,727.802,2,727.802,1,40,0)
PLACEHOLDER
"BLD",7002,4,727.802,2,727.802,1,41,0)
PLACEHOLDER
"BLD",7002,4,727.802,2,727.802,1,51,0)
PLACEHOLDER
"BLD",7002,4,727.802,2,727.802,1,82,0)
OEF/OEF
"BLD",7002,4,727.802,2,727.802,1,83,0)
OEF/OIF RETURN DATE
"BLD",7002,4,727.802,2,727.802,1,84,0)
ASSOCIATED PC PROVIDER NPI
"BLD",7002,4,727.802,2,727.802,1,85,0)
ATTENDING PHYSICIAN NPI
"BLD",7002,4,727.802,2,727.802,1,86,0)
PRIMARY CARE PROVIDER NPI
"BLD",7002,4,727.802,2,727.802,1,87,0)
PRIMARY WARD PROVIDER NPI
"BLD",7002,4,727.802,222)
y^y^p^^^^n^^n
"BLD",7002,4,727.802,224)

"BLD",7002,4,727.808,0)
727.808
"BLD",7002,4,727.808,2,0)
^9.641^727.808^1
"BLD",7002,4,727.808,2,727.808,0)
PHYSICAL MOVEMENT EXTRACT  (File-top level)
"BLD",7002,4,727.808,2,727.808,1,0)
^9.6411^35^2
"BLD",7002,4,727.808,2,727.808,1,35,0)
DISCHARGE ASSOC PC PROV. NPI
"BLD",7002,4,727.808,2,727.808,1,36,0)
DISCHARGE PC PROVIDER NPI
"BLD",7002,4,727.808,222)
y^y^p^^^^n^^n
"BLD",7002,4,727.808,224)

"BLD",7002,4,727.809,0)
727.809
"BLD",7002,4,727.809,2,0)
^9.641^727.809^1
"BLD",7002,4,727.809,2,727.809,0)
UNIT DOSE LOCAL EXTRACT  (File-top level)
"BLD",7002,4,727.809,2,727.809,1,0)
^9.6411^78^8
"BLD",7002,4,727.809,2,727.809,1,24,0)
PLACEHOLDER
"BLD",7002,4,727.809,2,727.809,1,52,0)
PLACEHOLDER
"BLD",7002,4,727.809,2,727.809,1,55,0)
PLACEHOLDER
"BLD",7002,4,727.809,2,727.809,1,77,0)
OEF/OIF
"BLD",7002,4,727.809,2,727.809,1,78,0)
OEF/OIF RETURN DATE
"BLD",7002,4,727.809,2,727.809,1,79,0)
ASSOCIATE PC PROVIDER NPI
"BLD",7002,4,727.809,2,727.809,1,80,0)
PRIMARY CARE PROVIDER NPI
"BLD",7002,4,727.809,2,727.809,1,81,0)
PROVIDER NPI
"BLD",7002,4,727.809,222)
y^y^p^^^^n^^n
"BLD",7002,4,727.809,224)

"BLD",7002,4,727.81,0)
727.81
"BLD",7002,4,727.81,2,0)
^9.641^727.81^1
"BLD",7002,4,727.81,2,727.81,0)
PRESCRIPTION EXTRACT  (File-top level)
"BLD",7002,4,727.81,2,727.81,1,0)
^9.6411^93^8
"BLD",7002,4,727.81,2,727.81,1,38,0)
PLACEHOLDER
"BLD",7002,4,727.81,2,727.81,1,39,0)
PLACEHOLDER
"BLD",7002,4,727.81,2,727.81,1,53,0)
PLACEHOLDER
"BLD",7002,4,727.81,2,727.81,1,92,0)
OEF/OIF
"BLD",7002,4,727.81,2,727.81,1,93,0)
OEF/OIF RETURN DATE
"BLD",7002,4,727.81,2,727.81,1,94,0)
ASSOCIATE PC PROVIDER NPI
"BLD",7002,4,727.81,2,727.81,1,95,0)
PRIMARY CARE PROVIDER NPI
"BLD",7002,4,727.81,2,727.81,1,96,0)
PROVIDER NPI
"BLD",7002,4,727.81,222)
y^y^p^^^^n^^n
"BLD",7002,4,727.81,224)

"BLD",7002,4,727.811,0)
727.811
"BLD",7002,4,727.811,2,0)
^9.641^727.811^1
"BLD",7002,4,727.811,2,727.811,0)
SURGERY EXTRACT  (File-top level)
"BLD",7002,4,727.811,2,727.811,1,0)
^9.6411^90^22
"BLD",7002,4,727.811,2,727.811,1,39,0)
PLACEHOLDER
"BLD",7002,4,727.811,2,727.811,1,40,0)
PLACEHOLDER
"BLD",7002,4,727.811,2,727.811,1,41,0)
PLACEHOLDER
"BLD",7002,4,727.811,2,727.811,1,42,0)
PLACEHOLDER
"BLD",7002,4,727.811,2,727.811,1,46,0)
PLACEHOLDER
"BLD",7002,4,727.811,2,727.811,1,80,0)
OEF/OIF
"BLD",7002,4,727.811,2,727.811,1,81,0)
OEF/OIF RETURN DATE
"BLD",7002,4,727.811,2,727.811,1,82,0)
CLINIC POINTER
"BLD",7002,4,727.811,2,727.811,1,83,0)
CREDIT STOP
"BLD",7002,4,727.811,2,727.811,1,84,0)
STOP CODE
"BLD",7002,4,727.811,2,727.811,1,85,0)
PRINC POSTOP DIAGNOSIS CODE
"BLD",7002,4,727.811,2,727.811,1,86,0)
OTHER POSTOP DIAGNOSIS CODE #1
"BLD",7002,4,727.811,2,727.811,1,87,0)
OTHER POSTOP DIAGNOSIS CODE #2
"BLD",7002,4,727.811,2,727.811,1,88,0)
OTHER POSTOP DIAGNOSIS CODE #3
"BLD",7002,4,727.811,2,727.811,1,89,0)
OTHER POSTOP DIAGNOSIS CODE #4
"BLD",7002,4,727.811,2,727.811,1,90,0)
OTHER POSTOP DIAGNOSIS CODE #5
"BLD",7002,4,727.811,2,727.811,1,91,0)
ANESTHESIA SUPERVISOR NPI
"BLD",7002,4,727.811,2,727.811,1,92,0)
ASSOCIATE PC PROVIDER NPI
"BLD",7002,4,727.811,2,727.811,1,93,0)
ATTENDING SURGEON NPI
"BLD",7002,4,727.811,2,727.811,1,94,0)
PRIMARY CARE PROVIDER NPI
"BLD",7002,4,727.811,2,727.811,1,95,0)
PRINCIPAL ANESTHETIST NPI
"BLD",7002,4,727.811,2,727.811,1,96,0)
SURGEON NPI
"BLD",7002,4,727.811,222)
y^y^p^^^^n^^n
"BLD",7002,4,727.811,224)

"BLD",7002,4,727.812,0)
727.812
"BLD",7002,4,727.812,2,0)
^9.641^727.812^1
"BLD",7002,4,727.812,2,727.812,0)
MENTAL HEALTH EXTRACT  (File-top level)
"BLD",7002,4,727.812,2,727.812,1,0)
^9.6411^66^8
"BLD",7002,4,727.812,2,727.812,1,15,0)
PLACEHOLDER
"BLD",7002,4,727.812,2,727.812,1,18,0)
PLACEHOLDER
"BLD",7002,4,727.812,2,727.812,1,30,0)
PLACEHOLDER
"BLD",7002,4,727.812,2,727.812,1,62,0)
ASSOCIATE PC PROVIDER NPI
"BLD",7002,4,727.812,2,727.812,1,63,0)
ATTENDING PHYSICIAN NPI
"BLD",7002,4,727.812,2,727.812,1,64,0)
PRIMARY CARE PROVIDER NPI
"BLD",7002,4,727.812,2,727.812,1,65,0)
PROVIDER NPI
"BLD",7002,4,727.812,2,727.812,1,66,0)
WARD PROVIDER NPI
"BLD",7002,4,727.812,222)
y^y^p^^^^n^^n
"BLD",7002,4,727.812,224)

"BLD",7002,4,727.813,0)
727.813
"BLD",7002,4,727.813,2,0)
^9.641^727.813^1
"BLD",7002,4,727.813,2,727.813,0)
LABORATORY EXTRACT  (File-top level)
"BLD",7002,4,727.813,2,727.813,1,0)
^9.6411^41^6
"BLD",7002,4,727.813,2,727.813,1,24,0)
PLACEHOLDER
"BLD",7002,4,727.813,2,727.813,1,25,0)
PLACEHOLDER
"BLD",7002,4,727.813,2,727.813,1,29,0)
PLACEHOLDER
"BLD",7002,4,727.813,2,727.813,1,39,0)
ASSOCIATE PC PROVIDER NPI
"BLD",7002,4,727.813,2,727.813,1,40,0)
PRIMARY CARE PROVIDER NPI
"BLD",7002,4,727.813,2,727.813,1,41,0)
PROVIDER NPI
"BLD",7002,4,727.813,222)
y^y^p^^^^n^^n
"BLD",7002,4,727.813,224)

"BLD",7002,4,727.814,0)
727.814
"BLD",7002,4,727.814,2,0)
^9.641^727.814^1
"BLD",7002,4,727.814,2,727.814,0)
RADIOLOGY EXTRACT  (File-top level)
"BLD",7002,4,727.814,2,727.814,1,0)
^9.6411^47^7
"BLD",7002,4,727.814,2,727.814,1,25,0)
PLACEHOLDER
"BLD",7002,4,727.814,2,727.814,1,26,0)
PLACEHOLDER
"BLD",7002,4,727.814,2,727.814,1,30,0)
PLACEHOLDER
"BLD",7002,4,727.814,2,727.814,1,44,0)
ASSOCIATE PC PROVIDER NPI
"BLD",7002,4,727.814,2,727.814,1,45,0)
INTERPRETING RADIOLOGIST NPI
"BLD",7002,4,727.814,2,727.814,1,46,0)
PRIMARY CARE PROVIDER NPI
"BLD",7002,4,727.814,2,727.814,1,47,0)
REQUESTING PHYSICIAN NPI
"BLD",7002,4,727.814,222)
y^y^p^^^^n^^n
"BLD",7002,4,727.814,224)

"BLD",7002,4,727.815,0)
727.815
"BLD",7002,4,727.815,2,0)
^9.641^727.815^1
"BLD",7002,4,727.815,2,727.815,0)
EVENT CAPTURE LOCAL EXTRACT  (File-top level)
"BLD",7002,4,727.815,2,727.815,1,0)
^9.6411^91^12
"BLD",7002,4,727.815,2,727.815,1,44,0)
PLACEHOLDER
"BLD",7002,4,727.815,2,727.815,1,45,0)
PLACEHOLDER
"BLD",7002,4,727.815,2,727.815,1,46,0)
PLACEHOLDER
"BLD",7002,4,727.815,2,727.815,1,48,0)
PLACEHOLDER
"BLD",7002,4,727.815,2,727.815,1,51,0)
PLACEHOLDER
"BLD",7002,4,727.815,2,727.815,1,90,0)
OEF/OIF
"BLD",7002,4,727.815,2,727.815,1,91,0)
OEF/OIF RETURN DATE
"BLD",7002,4,727.815,2,727.815,1,92,0)
ASSOCIATE PC PROVIDER NPI
"BLD",7002,4,727.815,2,727.815,1,93,0)
PRIMARY CARE PROVIDER NPI
"BLD",7002,4,727.815,2,727.815,1,94,0)
PROVIDER NPI
"BLD",7002,4,727.815,2,727.815,1,95,0)
PROVIDER #2 NPI
"BLD",7002,4,727.815,2,727.815,1,96,0)
PROVIDER #3 NPI
"BLD",7002,4,727.815,222)
y^y^p^^^^n^^n
"BLD",7002,4,727.815,224)

"BLD",7002,4,727.817,0)
727.817
"BLD",7002,4,727.817,2,0)
^9.641^727.817^1
"BLD",7002,4,727.817,2,727.817,0)
TREATING SPECIALTY CHANGE EXTRACT  (File-top level)
"BLD",7002,4,727.817,2,727.817,1,0)
^9.6411^43^8
"BLD",7002,4,727.817,2,727.817,1,26,0)
PLACEHOLDER
"BLD",7002,4,727.817,2,727.817,1,27,0)
PLACEHOLDER
"BLD",7002,4,727.817,2,727.817,1,28,0)
PLACEHOLDER
"BLD",7002,4,727.817,2,727.817,1,29,0)
PLACEHOLDER
"BLD",7002,4,727.817,2,727.817,1,40,0)
LOSING ATTENDING PHYSICIAN NPI
"BLD",7002,4,727.817,2,727.817,1,41,0)
LOSING PRIM WARD PROVIDER NPI
"BLD",7002,4,727.817,2,727.817,1,42,0)
NEW ATTENDING PHYSICIAN NPI
"BLD",7002,4,727.817,2,727.817,1,43,0)
NEW PRIMARY WARD PROVIDER NPI
"BLD",7002,4,727.817,222)
y^y^p^^^^n^^n
"BLD",7002,4,727.817,224)

"BLD",7002,4,727.819,0)
727.819
"BLD",7002,4,727.819,2,0)
^9.641^727.819^1
"BLD",7002,4,727.819,2,727.819,0)
IV DETAIL EXTRACT  (File-top level)
"BLD",7002,4,727.819,2,727.819,1,0)
^9.6411^83^8
"BLD",7002,4,727.819,2,727.819,1,29,0)
PLACEHOLDER
"BLD",7002,4,727.819,2,727.819,1,33,0)
PLACEHOLDER
"BLD",7002,4,727.819,2,727.819,1,63,0)
PLACEHOLDER
"BLD",7002,4,727.819,2,727.819,1,82,0)
OEF/OIF
"BLD",7002,4,727.819,2,727.819,1,83,0)
OEF/OIF RETURN DATE
"BLD",7002,4,727.819,2,727.819,1,84,0)
ASSOCIATE PC PROVIDER NPI
"BLD",7002,4,727.819,2,727.819,1,85,0)
ORDERING PROVIDER NPI
"BLD",7002,4,727.819,2,727.819,1,86,0)
PRIMARY CARE PROVIDER NPI
"BLD",7002,4,727.819,222)
y^y^p^^^^n^^n
"BLD",7002,4,727.819,224)

"BLD",7002,4,727.824,0)
727.824
"BLD",7002,4,727.824,2,0)
^9.641^727.824^1
"BLD",7002,4,727.824,2,727.824,0)
LAB RESULTS EXTRACT  (File-top level)
"BLD",7002,4,727.824,2,727.824,1,0)
^9.6411^30^1
"BLD",7002,4,727.824,2,727.824,1,30,0)
ORDERING PROVIDER NPI
"BLD",7002,4,727.824,222)
y^y^p^^^^n^^n
"BLD",7002,4,727.824,224)

"BLD",7002,4,727.825,0)
727.825
"BLD",7002,4,727.825,2,0)
^9.641^727.825^1
"BLD",7002,4,727.825,2,727.825,0)
QUASAR EXTRACT  (File-top level)
"BLD",7002,4,727.825,2,727.825,1,0)
^9.6411^91^12
"BLD",7002,4,727.825,2,727.825,1,44,0)
PLACEHOLDER
"BLD",7002,4,727.825,2,727.825,1,45,0)
PLACEHOLDER
"BLD",7002,4,727.825,2,727.825,1,46,0)
PLACEHOLDER
"BLD",7002,4,727.825,2,727.825,1,48,0)
PLACEHOLDER
"BLD",7002,4,727.825,2,727.825,1,51,0)
PLACEHOLDER
"BLD",7002,4,727.825,2,727.825,1,90,0)
OEF/OIF
"BLD",7002,4,727.825,2,727.825,1,91,0)
OEF/OIF RETURN DATE
"BLD",7002,4,727.825,2,727.825,1,92,0)
ASSOCIATE PC PROVIDER NPI
"BLD",7002,4,727.825,2,727.825,1,93,0)
PRIMARY CARE PROVIDER NPI
"BLD",7002,4,727.825,2,727.825,1,94,0)
PROVIDER NPI
"BLD",7002,4,727.825,2,727.825,1,95,0)
PROVIDER #2 NPI
"BLD",7002,4,727.825,2,727.825,1,96,0)
PROVIDER #3 NPI
"BLD",7002,4,727.825,222)
y^y^p^^^^n^^n
"BLD",7002,4,727.825,224)

"BLD",7002,4,727.826,0)
727.826
"BLD",7002,4,727.826,2,0)
^9.641^727.826^1
"BLD",7002,4,727.826,2,727.826,0)
PROSTHETICS EXTRACT  (File-top level)
"BLD",7002,4,727.826,2,727.826,1,0)
^9.6411^84^8
"BLD",7002,4,727.826,2,727.826,1,37,0)
PLACEHOLDER
"BLD",7002,4,727.826,2,727.826,1,52,0)
PLACEHOLDER
"BLD",7002,4,727.826,2,727.826,1,81,0)
OEF/OIF
"BLD",7002,4,727.826,2,727.826,1,82,0)
OEF/OIF RETURN DATE
"BLD",7002,4,727.826,2,727.826,1,83,0)
NPPD CODE
"BLD",7002,4,727.826,2,727.826,1,84,0)
NPPD ENTRY DATE
"BLD",7002,4,727.826,2,727.826,1,85,0)
ASSOCIATE PC PROVIDER NPI
"BLD",7002,4,727.826,2,727.826,1,86,0)
PRIMARY CARE PROVIDER NPI
"BLD",7002,4,727.826,222)
y^y^p^^^^n^^n
"BLD",7002,4,727.826,224)

"BLD",7002,4,727.827,0)
727.827
"BLD",7002,4,727.827,2,0)
^9.641^727.827^1
"BLD",7002,4,727.827,2,727.827,0)
CLINIC EXTRACT  (File-top level)
"BLD",7002,4,727.827,2,727.827,1,0)
^9.6411^89^8
"BLD",7002,4,727.827,2,727.827,1,46,0)
PLACEHOLDER
"BLD",7002,4,727.827,2,727.827,1,47,0)
PLACEHOLDER
"BLD",7002,4,727.827,2,727.827,1,58,0)
PLACEHOLDER
"BLD",7002,4,727.827,2,727.827,1,88,0)
OEF/OIF
"BLD",7002,4,727.827,2,727.827,1,89,0)
OEF/OIF RETURN DATE
"BLD",7002,4,727.827,2,727.827,1,90,0)
ASSOCIATE PC PROVIDER NPI
"BLD",7002,4,727.827,2,727.827,1,91,0)
PRIMARY CARE PROVIDER NPI
"BLD",7002,4,727.827,2,727.827,1,92,0)
PROVIDER NPI
"BLD",7002,4,727.827,222)
y^y^p^^^^n^^n
"BLD",7002,4,727.827,224)

"BLD",7002,4,727.829,0)
727.829
"BLD",7002,4,727.829,2,0)
^9.641^727.829^1
"BLD",7002,4,727.829,2,727.829,0)
BLOOD BANK EXTRACT  (File-top level)
"BLD",7002,4,727.829,2,727.829,1,0)
^9.6411^24^4
"BLD",7002,4,727.829,2,727.829,1,23,0)
UNIT MODIFIED
"BLD",7002,4,727.829,2,727.829,1,24,0)
UNIT MODIFICATION
"BLD",7002,4,727.829,2,727.829,1,28,0)
ORDERING PROVIDER NPI
"BLD",7002,4,727.829,2,727.829,1,29,0)
REQUESTING PROVIDER NPI
"BLD",7002,4,727.829,222)
y^y^p^^^^n^^n
"BLD",7002,4,727.829,224)

"BLD",7002,4,727.832,0)
727.832
"BLD",7002,4,727.832,2,0)
^9.641^727.832^1
"BLD",7002,4,727.832,2,727.832,0)
NUTRITION EXTRACT  (File-top level)
"BLD",7002,4,727.832,2,727.832,1,0)
^9.6411^61^7
"BLD",7002,4,727.832,2,727.832,1,50,0)
DELIVERY FEEDER LOCATION
"BLD",7002,4,727.832,2,727.832,1,51,0)
QUANTITY
"BLD",7002,4,727.832,2,727.832,1,59,0)
OEF/OIF
"BLD",7002,4,727.832,2,727.832,1,60,0)
OEF/OIF RETURN DATE
"BLD",7002,4,727.832,2,727.832,1,61,0)
TF UNITS
"BLD",7002,4,727.832,2,727.832,1,62,0)
ORDERING PROVIDER NPI
"BLD",7002,4,727.832,2,727.832,1,63,0)
PRIMARY CARE PROVIDER NPI
"BLD",7002,4,727.832,222)
y^y^p^^^^n^^n
"BLD",7002,4,727.832,224)

"BLD",7002,4,"APDD",727.802,727.802)

"BLD",7002,4,"APDD",727.802,727.802,39)

"BLD",7002,4,"APDD",727.802,727.802,40)

"BLD",7002,4,"APDD",727.802,727.802,41)

"BLD",7002,4,"APDD",727.802,727.802,51)

"BLD",7002,4,"APDD",727.802,727.802,82)

"BLD",7002,4,"APDD",727.802,727.802,83)

"BLD",7002,4,"APDD",727.802,727.802,84)

"BLD",7002,4,"APDD",727.802,727.802,85)

"BLD",7002,4,"APDD",727.802,727.802,86)

"BLD",7002,4,"APDD",727.802,727.802,87)

"BLD",7002,4,"APDD",727.808,727.808)

"BLD",7002,4,"APDD",727.808,727.808,35)

"BLD",7002,4,"APDD",727.808,727.808,36)

"BLD",7002,4,"APDD",727.809,727.809)

"BLD",7002,4,"APDD",727.809,727.809,24)

"BLD",7002,4,"APDD",727.809,727.809,52)

"BLD",7002,4,"APDD",727.809,727.809,55)

"BLD",7002,4,"APDD",727.809,727.809,77)

"BLD",7002,4,"APDD",727.809,727.809,78)

"BLD",7002,4,"APDD",727.809,727.809,79)

"BLD",7002,4,"APDD",727.809,727.809,80)

"BLD",7002,4,"APDD",727.809,727.809,81)

"BLD",7002,4,"APDD",727.81,727.81)

"BLD",7002,4,"APDD",727.81,727.81,38)

"BLD",7002,4,"APDD",727.81,727.81,39)

"BLD",7002,4,"APDD",727.81,727.81,53)

"BLD",7002,4,"APDD",727.81,727.81,92)

"BLD",7002,4,"APDD",727.81,727.81,93)

"BLD",7002,4,"APDD",727.81,727.81,94)

"BLD",7002,4,"APDD",727.81,727.81,95)

"BLD",7002,4,"APDD",727.81,727.81,96)

"BLD",7002,4,"APDD",727.811,727.811)

"BLD",7002,4,"APDD",727.811,727.811,39)

"BLD",7002,4,"APDD",727.811,727.811,40)

"BLD",7002,4,"APDD",727.811,727.811,41)

"BLD",7002,4,"APDD",727.811,727.811,42)

"BLD",7002,4,"APDD",727.811,727.811,46)

"BLD",7002,4,"APDD",727.811,727.811,80)

"BLD",7002,4,"APDD",727.811,727.811,81)

"BLD",7002,4,"APDD",727.811,727.811,82)

"BLD",7002,4,"APDD",727.811,727.811,83)

"BLD",7002,4,"APDD",727.811,727.811,84)

"BLD",7002,4,"APDD",727.811,727.811,85)

"BLD",7002,4,"APDD",727.811,727.811,86)

"BLD",7002,4,"APDD",727.811,727.811,87)

"BLD",7002,4,"APDD",727.811,727.811,88)

"BLD",7002,4,"APDD",727.811,727.811,89)

"BLD",7002,4,"APDD",727.811,727.811,90)

"BLD",7002,4,"APDD",727.811,727.811,91)

"BLD",7002,4,"APDD",727.811,727.811,92)

"BLD",7002,4,"APDD",727.811,727.811,93)

"BLD",7002,4,"APDD",727.811,727.811,94)

"BLD",7002,4,"APDD",727.811,727.811,95)

"BLD",7002,4,"APDD",727.811,727.811,96)

"BLD",7002,4,"APDD",727.812,727.812)

"BLD",7002,4,"APDD",727.812,727.812,15)

"BLD",7002,4,"APDD",727.812,727.812,18)

"BLD",7002,4,"APDD",727.812,727.812,30)

"BLD",7002,4,"APDD",727.812,727.812,62)

"BLD",7002,4,"APDD",727.812,727.812,63)

"BLD",7002,4,"APDD",727.812,727.812,64)

"BLD",7002,4,"APDD",727.812,727.812,65)

"BLD",7002,4,"APDD",727.812,727.812,66)

"BLD",7002,4,"APDD",727.813,727.813)

"BLD",7002,4,"APDD",727.813,727.813,24)

"BLD",7002,4,"APDD",727.813,727.813,25)

"BLD",7002,4,"APDD",727.813,727.813,29)

"BLD",7002,4,"APDD",727.813,727.813,39)

"BLD",7002,4,"APDD",727.813,727.813,40)

"BLD",7002,4,"APDD",727.813,727.813,41)

"BLD",7002,4,"APDD",727.814,727.814)

"BLD",7002,4,"APDD",727.814,727.814,25)

"BLD",7002,4,"APDD",727.814,727.814,26)

"BLD",7002,4,"APDD",727.814,727.814,30)

"BLD",7002,4,"APDD",727.814,727.814,44)

"BLD",7002,4,"APDD",727.814,727.814,45)

"BLD",7002,4,"APDD",727.814,727.814,46)

"BLD",7002,4,"APDD",727.814,727.814,47)

"BLD",7002,4,"APDD",727.815,727.815)

"BLD",7002,4,"APDD",727.815,727.815,44)

"BLD",7002,4,"APDD",727.815,727.815,45)

"BLD",7002,4,"APDD",727.815,727.815,46)

"BLD",7002,4,"APDD",727.815,727.815,48)

"BLD",7002,4,"APDD",727.815,727.815,51)

"BLD",7002,4,"APDD",727.815,727.815,90)

"BLD",7002,4,"APDD",727.815,727.815,91)

"BLD",7002,4,"APDD",727.815,727.815,92)

"BLD",7002,4,"APDD",727.815,727.815,93)

"BLD",7002,4,"APDD",727.815,727.815,94)

"BLD",7002,4,"APDD",727.815,727.815,95)

"BLD",7002,4,"APDD",727.815,727.815,96)

"BLD",7002,4,"APDD",727.817,727.817)

"BLD",7002,4,"APDD",727.817,727.817,26)

"BLD",7002,4,"APDD",727.817,727.817,27)

"BLD",7002,4,"APDD",727.817,727.817,28)

"BLD",7002,4,"APDD",727.817,727.817,29)

"BLD",7002,4,"APDD",727.817,727.817,40)

"BLD",7002,4,"APDD",727.817,727.817,41)

"BLD",7002,4,"APDD",727.817,727.817,42)

"BLD",7002,4,"APDD",727.817,727.817,43)

"BLD",7002,4,"APDD",727.819,727.819)

"BLD",7002,4,"APDD",727.819,727.819,29)

"BLD",7002,4,"APDD",727.819,727.819,33)

"BLD",7002,4,"APDD",727.819,727.819,63)

"BLD",7002,4,"APDD",727.819,727.819,82)

"BLD",7002,4,"APDD",727.819,727.819,83)

"BLD",7002,4,"APDD",727.819,727.819,84)

"BLD",7002,4,"APDD",727.819,727.819,85)

"BLD",7002,4,"APDD",727.819,727.819,86)

"BLD",7002,4,"APDD",727.824,727.824)

"BLD",7002,4,"APDD",727.824,727.824,30)

"BLD",7002,4,"APDD",727.825,727.825)

"BLD",7002,4,"APDD",727.825,727.825,44)

"BLD",7002,4,"APDD",727.825,727.825,45)

"BLD",7002,4,"APDD",727.825,727.825,46)

"BLD",7002,4,"APDD",727.825,727.825,48)

"BLD",7002,4,"APDD",727.825,727.825,51)

"BLD",7002,4,"APDD",727.825,727.825,90)

"BLD",7002,4,"APDD",727.825,727.825,91)

"BLD",7002,4,"APDD",727.825,727.825,92)

"BLD",7002,4,"APDD",727.825,727.825,93)

"BLD",7002,4,"APDD",727.825,727.825,94)

"BLD",7002,4,"APDD",727.825,727.825,95)

"BLD",7002,4,"APDD",727.825,727.825,96)

"BLD",7002,4,"APDD",727.826,727.826)

"BLD",7002,4,"APDD",727.826,727.826,37)

"BLD",7002,4,"APDD",727.826,727.826,52)

"BLD",7002,4,"APDD",727.826,727.826,81)

"BLD",7002,4,"APDD",727.826,727.826,82)

"BLD",7002,4,"APDD",727.826,727.826,83)

"BLD",7002,4,"APDD",727.826,727.826,84)

"BLD",7002,4,"APDD",727.826,727.826,85)

"BLD",7002,4,"APDD",727.826,727.826,86)

"BLD",7002,4,"APDD",727.827,727.827)

"BLD",7002,4,"APDD",727.827,727.827,46)

"BLD",7002,4,"APDD",727.827,727.827,47)

"BLD",7002,4,"APDD",727.827,727.827,58)

"BLD",7002,4,"APDD",727.827,727.827,88)

"BLD",7002,4,"APDD",727.827,727.827,89)

"BLD",7002,4,"APDD",727.827,727.827,90)

"BLD",7002,4,"APDD",727.827,727.827,91)

"BLD",7002,4,"APDD",727.827,727.827,92)

"BLD",7002,4,"APDD",727.829,727.829)

"BLD",7002,4,"APDD",727.829,727.829,23)

"BLD",7002,4,"APDD",727.829,727.829,24)

"BLD",7002,4,"APDD",727.829,727.829,28)

"BLD",7002,4,"APDD",727.829,727.829,29)

"BLD",7002,4,"APDD",727.832,727.832)

"BLD",7002,4,"APDD",727.832,727.832,50)

"BLD",7002,4,"APDD",727.832,727.832,51)

"BLD",7002,4,"APDD",727.832,727.832,59)

"BLD",7002,4,"APDD",727.832,727.832,60)

"BLD",7002,4,"APDD",727.832,727.832,61)

"BLD",7002,4,"APDD",727.832,727.832,62)

"BLD",7002,4,"APDD",727.832,727.832,63)

"BLD",7002,4,"B",727.1,727.1)

"BLD",7002,4,"B",727.802,727.802)

"BLD",7002,4,"B",727.808,727.808)

"BLD",7002,4,"B",727.809,727.809)

"BLD",7002,4,"B",727.81,727.81)

"BLD",7002,4,"B",727.811,727.811)

"BLD",7002,4,"B",727.812,727.812)

"BLD",7002,4,"B",727.813,727.813)

"BLD",7002,4,"B",727.814,727.814)

"BLD",7002,4,"B",727.815,727.815)

"BLD",7002,4,"B",727.817,727.817)

"BLD",7002,4,"B",727.819,727.819)

"BLD",7002,4,"B",727.824,727.824)

"BLD",7002,4,"B",727.825,727.825)

"BLD",7002,4,"B",727.826,727.826)

"BLD",7002,4,"B",727.827,727.827)

"BLD",7002,4,"B",727.829,727.829)

"BLD",7002,4,"B",727.832,727.832)

"BLD",7002,6.3)
70
"BLD",7002,"ABPKG")
n
"BLD",7002,"INID")
^
"BLD",7002,"INIT")

"BLD",7002,"KRN",0)
^9.67PA^8989.52^19
"BLD",7002,"KRN",.4,0)
.4
"BLD",7002,"KRN",.401,0)
.401
"BLD",7002,"KRN",.402,0)
.402
"BLD",7002,"KRN",.403,0)
.403
"BLD",7002,"KRN",.5,0)
.5
"BLD",7002,"KRN",.84,0)
.84
"BLD",7002,"KRN",3.6,0)
3.6
"BLD",7002,"KRN",3.8,0)
3.8
"BLD",7002,"KRN",9.2,0)
9.2
"BLD",7002,"KRN",9.8,0)
9.8
"BLD",7002,"KRN",9.8,"NM",0)
^9.68A^51^49
"BLD",7002,"KRN",9.8,"NM",1,0)
ECXAPHA2^^0^B23749184
"BLD",7002,"KRN",9.8,"NM",2,0)
ECXDIVIV^^0^B13391238
"BLD",7002,"KRN",9.8,"NM",3,0)
ECXDRUG2^^0^B16714262
"BLD",7002,"KRN",9.8,"NM",4,0)
ECXDVSN1^^0^B26922111
"BLD",7002,"KRN",9.8,"NM",5,0)
ECXFELOC^^0^B17796989
"BLD",7002,"KRN",9.8,"NM",6,0)
ECXOPRX^^0^B50701153
"BLD",7002,"KRN",9.8,"NM",8,0)
ECXPIVDN^^0^B49192647
"BLD",7002,"KRN",9.8,"NM",9,0)
ECXUD^^0^B52727032
"BLD",7002,"KRN",9.8,"NM",10,0)
ECXTRAC^^0^B56593271
"BLD",7002,"KRN",9.8,"NM",11,0)
ECXUTL5^^0^B34282148
"BLD",7002,"KRN",9.8,"NM",12,0)
ECXUSUR^^0^B28806381
"BLD",7002,"KRN",9.8,"NM",13,0)
ECXUSUR1^^0^B13707019
"BLD",7002,"KRN",9.8,"NM",14,0)
ECXSCX1^^0^B66163252
"BLD",7002,"KRN",9.8,"NM",15,0)
ECXNUT^^0^B31304371
"BLD",7002,"KRN",9.8,"NM",16,0)
ECXNUT1^^0^B65556381
"BLD",7002,"KRN",9.8,"NM",17,0)
ECXPRO^^0^B34644187
"BLD",7002,"KRN",9.8,"NM",18,0)
ECXPRO1^^0^B20355381
"BLD",7002,"KRN",9.8,"NM",19,0)
ECXSCLD^^0^B37438531
"BLD",7002,"KRN",9.8,"NM",20,0)
ECXANUT^^0^B53849197
"BLD",7002,"KRN",9.8,"NM",21,0)
ECXLARA^^0^B27828116
"BLD",7002,"KRN",9.8,"NM",22,0)
ECXUTL2^^0^B70446907
"BLD",7002,"KRN",9.8,"NM",23,0)
ECXKILL^^0^B6793618
"BLD",7002,"KRN",9.8,"NM",24,0)
ECXADM^^0^B41911607
"BLD",7002,"KRN",9.8,"NM",25,0)
ECXPIVD2^^0^B8379900
"BLD",7002,"KRN",9.8,"NM",27,0)
ECXLBB^^0^B46626691
"BLD",7002,"KRN",9.8,"NM",28,0)
ECXOPRX1^^0^B8259189
"BLD",7002,"KRN",9.8,"NM",29,0)
ECXSCXN^^0^B57423281
"BLD",7002,"KRN",9.8,"NM",30,0)
ECXSCX2^^0^B8581538
"BLD",7002,"KRN",9.8,"NM",31,0)
ECXQSR^^0^B40606655
"BLD",7002,"KRN",9.8,"NM",32,0)
ECXQSR1^^0^B9419721
"BLD",7002,"KRN",9.8,"NM",33,0)
ECXTRT^^0^B56335762
"BLD",7002,"KRN",9.8,"NM",34,0)
ECXTRT2^^0^B4380192
"BLD",7002,"KRN",9.8,"NM",35,0)
ECXSURG^^0^B47425322
"BLD",7002,"KRN",9.8,"NM",36,0)
ECXSURG1^^0^B12420655
"BLD",7002,"KRN",9.8,"NM",37,0)
ECXUTL4^^0^B51789740
"BLD",7002,"KRN",9.8,"NM",38,0)
ECXRAD^^0^B33912770
"BLD",7002,"KRN",9.8,"NM",39,0)
ECXMOV^^0^B19849006
"BLD",7002,"KRN",9.8,"NM",40,0)
ECXEC^^0^B42363608
"BLD",7002,"KRN",9.8,"NM",41,0)
ECXMTL^^0^B38000130
"BLD",7002,"KRN",9.8,"NM",42,0)
ECXLABN^^0^B29839550
"BLD",7002,"KRN",9.8,"NM",43,0)
ECXTREX^^0^B11391344
"BLD",7002,"KRN",9.8,"NM",44,0)
ECXUTL3^^0^B62713398
"BLD",7002,"KRN",9.8,"NM",45,0)
ECXLABR^^0^B22461494
"BLD",7002,"KRN",9.8,"NM",46,0)
ECXUTL6^^0^B26325386
"BLD",7002,"KRN",9.8,"NM",47,0)
ECXDVSN^^0^B42115293
"BLD",7002,"KRN",9.8,"NM",48,0)
ECXPLBB^^0^B17966665
"BLD",7002,"KRN",9.8,"NM",49,0)
ECXLBB1^^0^B22409654
"BLD",7002,"KRN",9.8,"NM",50,0)
ECXSCXN1^^0^B9414223
"BLD",7002,"KRN",9.8,"NM",51,0)
ECXATRT^^0^B50979096
"BLD",7002,"KRN",9.8,"NM","B","ECXADM",24)

"BLD",7002,"KRN",9.8,"NM","B","ECXANUT",20)

"BLD",7002,"KRN",9.8,"NM","B","ECXAPHA2",1)

"BLD",7002,"KRN",9.8,"NM","B","ECXATRT",51)

"BLD",7002,"KRN",9.8,"NM","B","ECXDIVIV",2)

"BLD",7002,"KRN",9.8,"NM","B","ECXDRUG2",3)

"BLD",7002,"KRN",9.8,"NM","B","ECXDVSN",47)

"BLD",7002,"KRN",9.8,"NM","B","ECXDVSN1",4)

"BLD",7002,"KRN",9.8,"NM","B","ECXEC",40)

"BLD",7002,"KRN",9.8,"NM","B","ECXFELOC",5)

"BLD",7002,"KRN",9.8,"NM","B","ECXKILL",23)

"BLD",7002,"KRN",9.8,"NM","B","ECXLABN",42)

"BLD",7002,"KRN",9.8,"NM","B","ECXLABR",45)

"BLD",7002,"KRN",9.8,"NM","B","ECXLARA",21)

"BLD",7002,"KRN",9.8,"NM","B","ECXLBB",27)

"BLD",7002,"KRN",9.8,"NM","B","ECXLBB1",49)

"BLD",7002,"KRN",9.8,"NM","B","ECXMOV",39)

"BLD",7002,"KRN",9.8,"NM","B","ECXMTL",41)

"BLD",7002,"KRN",9.8,"NM","B","ECXNUT",15)

"BLD",7002,"KRN",9.8,"NM","B","ECXNUT1",16)

"BLD",7002,"KRN",9.8,"NM","B","ECXOPRX",6)

"BLD",7002,"KRN",9.8,"NM","B","ECXOPRX1",28)

"BLD",7002,"KRN",9.8,"NM","B","ECXPIVD2",25)

"BLD",7002,"KRN",9.8,"NM","B","ECXPIVDN",8)

"BLD",7002,"KRN",9.8,"NM","B","ECXPLBB",48)

"BLD",7002,"KRN",9.8,"NM","B","ECXPRO",17)

"BLD",7002,"KRN",9.8,"NM","B","ECXPRO1",18)

"BLD",7002,"KRN",9.8,"NM","B","ECXQSR",31)

"BLD",7002,"KRN",9.8,"NM","B","ECXQSR1",32)

"BLD",7002,"KRN",9.8,"NM","B","ECXRAD",38)

"BLD",7002,"KRN",9.8,"NM","B","ECXSCLD",19)

"BLD",7002,"KRN",9.8,"NM","B","ECXSCX1",14)

"BLD",7002,"KRN",9.8,"NM","B","ECXSCX2",30)

"BLD",7002,"KRN",9.8,"NM","B","ECXSCXN",29)

"BLD",7002,"KRN",9.8,"NM","B","ECXSCXN1",50)

"BLD",7002,"KRN",9.8,"NM","B","ECXSURG",35)

"BLD",7002,"KRN",9.8,"NM","B","ECXSURG1",36)

"BLD",7002,"KRN",9.8,"NM","B","ECXTRAC",10)

"BLD",7002,"KRN",9.8,"NM","B","ECXTREX",43)

"BLD",7002,"KRN",9.8,"NM","B","ECXTRT",33)

"BLD",7002,"KRN",9.8,"NM","B","ECXTRT2",34)

"BLD",7002,"KRN",9.8,"NM","B","ECXUD",9)

"BLD",7002,"KRN",9.8,"NM","B","ECXUSUR",12)

"BLD",7002,"KRN",9.8,"NM","B","ECXUSUR1",13)

"BLD",7002,"KRN",9.8,"NM","B","ECXUTL2",22)

"BLD",7002,"KRN",9.8,"NM","B","ECXUTL3",44)

"BLD",7002,"KRN",9.8,"NM","B","ECXUTL4",37)

"BLD",7002,"KRN",9.8,"NM","B","ECXUTL5",11)

"BLD",7002,"KRN",9.8,"NM","B","ECXUTL6",46)

"BLD",7002,"KRN",19,0)
19
"BLD",7002,"KRN",19,"NM",0)
^9.68A^99^98
"BLD",7002,"KRN",19,"NM",1,0)
ECXIV^^0
"BLD",7002,"KRN",19,"NM",2,0)
ECX MAINTENANCE^^0
"BLD",7002,"KRN",19,"NM",3,0)
ECX SOURCE AUDITS^^0
"BLD",7002,"KRN",19,"NM",4,0)
ECX LAB MAINTENACE^^0
"BLD",7002,"KRN",19,"NM",5,0)
ECX PHARMACY MAINTENANCE^^0
"BLD",7002,"KRN",19,"NM",6,0)
ECX SURGERY MAINTENANCE^^0
"BLD",7002,"KRN",19,"NM",7,0)
ECX PROSTHETICS MAINTENANCE^^0
"BLD",7002,"KRN",19,"NM",9,0)
ECX CBOC REPORT^^0
"BLD",7002,"KRN",19,"NM",10,0)
ECX CPT INQUIRY^^0
"BLD",7002,"KRN",19,"NM",11,0)
ECX DSSDEPT MGMT^^0
"BLD",7002,"KRN",19,"NM",12,0)
ECX NUTRITION WORKSHEETS^^0
"BLD",7002,"KRN",19,"NM",13,0)
ECX PHA EDIT^^0
"BLD",7002,"KRN",19,"NM",14,0)
ECX PHA FKEY^^0
"BLD",7002,"KRN",19,"NM",15,0)
ECX PHA VOL^^0
"BLD",7002,"KRN",19,"NM",16,0)
ECX PHA UDP/IVP SOURCE AUDIT^^0
"BLD",7002,"KRN",19,"NM",17,0)
ECXFEKEY^^0
"BLD",7002,"KRN",19,"NM",18,0)
ECXFELOC^^0
"BLD",7002,"KRN",19,"NM",19,0)
ECX PRO COST REPORT^^0
"BLD",7002,"KRN",19,"NM",20,0)
ECX PRO COST^^0
"BLD",7002,"KRN",19,"NM",21,0)
ECX PRO YTD REPORT^^0
"BLD",7002,"KRN",19,"NM",22,0)
ECX PRO LAB REPORT^^0
"BLD",7002,"KRN",19,"NM",23,0)
ECX SETUP CLINIC^^0
"BLD",7002,"KRN",19,"NM",24,0)
ECX SETUP LAB^^0
"BLD",7002,"KRN",19,"NM",25,0)
ECX SETUP INP CENSUS^^0
"BLD",7002,"KRN",19,"NM",26,0)
ECX SETUP INP MEDS^^0
"BLD",7002,"KRN",19,"NM",27,0)
ECX SUR VOL^^0
"BLD",7002,"KRN",19,"NM",28,0)
ECX SUR VOL REPORT^^0
"BLD",7002,"KRN",19,"NM",29,0)
ECX ADM SOURCE AUDIT^^0
"BLD",7002,"KRN",19,"NM",30,0)
ECX ECS SOURCE AUDIT^^0
"BLD",7002,"KRN",19,"NM",31,0)
ECX LAB SOURCE AUDIT (PATIENT)^^0
"BLD",7002,"KRN",19,"NM",32,0)
ECX MOV SOURCE AUDIT^^0
"BLD",7002,"KRN",19,"NM",33,0)
ECX MTL SOURCE AUDIT^^0
"BLD",7002,"KRN",19,"NM",34,0)
ECX NUR SOURCE AUDIT^^0
"BLD",7002,"KRN",19,"NM",35,0)
ECX NUT SOURCE AUDIT^^0
"BLD",7002,"KRN",19,"NM",36,0)
ECX PAI SOURCE AUDIT^^0
"BLD",7002,"KRN",19,"NM",37,0)
ECX PHA SOURCE AUDIT^^0
"BLD",7002,"KRN",19,"NM",38,0)
ECX QSR SOURCE AUDIT^^0
"BLD",7002,"KRN",19,"NM",39,0)
ECX PRO SOURCE AUDIT^^0
"BLD",7002,"KRN",19,"NM",40,0)
ECX RAD SOURCE AUDIT^^0
"BLD",7002,"KRN",19,"NM",41,0)
ECX SUR SOURCE AUDIT^^0
"BLD",7002,"KRN",19,"NM",42,0)
ECX TRT SOURCE AUDIT^^0
"BLD",7002,"KRN",19,"NM",43,0)
ECX DIVISION ID^^0
"BLD",7002,"KRN",19,"NM",44,0)
ECX WARD DSSDEPT^^0
"BLD",7002,"KRN",19,"NM",45,0)
ECX LAR SOURCE AUDIT^^0
"BLD",7002,"KRN",19,"NM",46,0)
ECX LAB RESULTS TRANS EDIT^^0
"BLD",7002,"KRN",19,"NM",47,0)
ECX UNTRANS LAR REPORT^^0
"BLD",7002,"KRN",19,"NM",48,0)
ECX CLN STOP REP^^0
"BLD",7002,"KRN",19,"NM",49,0)
ECX EXTRACT LOG REVIEW^^0
"BLD",7002,"KRN",19,"NM",50,0)
ECX EXTRACT LOG SUMMARY^^0
"BLD",7002,"KRN",19,"NM",51,0)
ECX FISCAL YEAR EXTRACT^^0
"BLD",7002,"KRN",19,"NM",52,0)
ECX IV DIV EDIT^^0
"BLD",7002,"KRN",19,"NM",53,0)
ECX IV DIV PRINT^^0
"BLD",7002,"KRN",19,"NM",54,0)
ECX NATIONAL CLINIC^^0
"BLD",7002,"KRN",19,"NM",55,0)
ECX NUT DIV EDIT^^0
"BLD",7002,"KRN",19,"NM",56,0)
ECX NUT DIV PRINT^^0
"BLD",7002,"KRN",19,"NM",57,0)
ECX NUT PRO EDIT^^0
"BLD",7002,"KRN",19,"NM",58,0)
ECX NUT PRO PRINT^^0
"BLD",7002,"KRN",19,"NM",59,0)
ECX PHA VOL EDIT^^0
"BLD",7002,"KRN",19,"NM",60,0)
ECX PHA VOL EDIT LOG^^0
"BLD",7002,"KRN",19,"NM",61,0)
ECX SAS AUDITS^^0
"BLD",7002,"KRN",19,"NM",62,0)
ECX SAS PRESCRIPTION^^0
"BLD",7002,"KRN",19,"NM",63,0)
ECX SAS RADIOLOGY^^0
"BLD",7002,"KRN",19,"NM",64,0)
ECX SAS SURGERY^^0
"BLD",7002,"KRN",19,"NM",65,0)
ECX TRANSMISSION^^0
"BLD",7002,"KRN",19,"NM",66,0)
ECXADM^^0
"BLD",7002,"KRN",19,"NM",67,0)
ECXEC^^0
"BLD",7002,"KRN",19,"NM",68,0)
ECXLAB^^0
"BLD",7002,"KRN",19,"NM",69,0)
ECXLABR^^0
"BLD",7002,"KRN",19,"NM",70,0)
ECXLABRS^^0
"BLD",7002,"KRN",19,"NM",71,0)
ECXLARP^^0
"BLD",7002,"KRN",19,"NM",72,0)
ECXLBB^^0
"BLD",7002,"KRN",19,"NM",73,0)
ECXMENU^^0
"BLD",7002,"KRN",19,"NM",74,0)
ECXMGR^^0
"BLD",7002,"KRN",19,"NM",75,0)
ECXMOV^^0
"BLD",7002,"KRN",19,"NM",76,0)
ECXMTL^^0
"BLD",7002,"KRN",19,"NM",77,0)
ECXNDC^^0
"BLD",7002,"KRN",19,"NM",78,0)
ECXNURS^^0
"BLD",7002,"KRN",19,"NM",79,0)
ECXPAI^^0
"BLD",7002,"KRN",19,"NM",80,0)
ECXPCT^^0
"BLD",7002,"KRN",19,"NM",81,0)
ECXPRO^^0
"BLD",7002,"KRN",19,"NM",82,0)
ECXPSO^^0
"BLD",7002,"KRN",19,"NM",83,0)
ECXPURG^^0
"BLD",7002,"KRN",19,"NM",84,0)
ECXQSR^^0
"BLD",7002,"KRN",19,"NM",85,0)
ECXRAD^^0
"BLD",7002,"KRN",19,"NM",86,0)
ECXSCAPPROV^^0
"BLD",7002,"KRN",19,"NM",87,0)
ECXSCEDIT^^0
"BLD",7002,"KRN",19,"NM",88,0)
ECXSCLIST^^0
"BLD",7002,"KRN",19,"NM",89,0)
ECXSCLOAD^^0
"BLD",7002,"KRN",19,"NM",90,0)
ECXSCX^^0
"BLD",7002,"KRN",19,"NM",91,0)
ECXSETUP^^0
"BLD",7002,"KRN",19,"NM",92,0)
ECXSURG^^0
"BLD",7002,"KRN",19,"NM",93,0)
ECXTRANS^^0
"BLD",7002,"KRN",19,"NM",94,0)
ECXTRT^^0
"BLD",7002,"KRN",19,"NM",95,0)
ECXTRYIT^^0
"BLD",7002,"KRN",19,"NM",96,0)
ECXUD^^0
"BLD",7002,"KRN",19,"NM",97,0)
ECXWRD^^0
"BLD",7002,"KRN",19,"NM",98,0)
ECX LBB SOURCE AUDIT^^0
"BLD",7002,"KRN",19,"NM",99,0)
ECXNUT^^0
"BLD",7002,"KRN",19,"NM","B","ECX ADM SOURCE AUDIT",29)

"BLD",7002,"KRN",19,"NM","B","ECX CBOC REPORT",9)

"BLD",7002,"KRN",19,"NM","B","ECX CLN STOP REP",48)

"BLD",7002,"KRN",19,"NM","B","ECX CPT INQUIRY",10)

"BLD",7002,"KRN",19,"NM","B","ECX DIVISION ID",43)

"BLD",7002,"KRN",19,"NM","B","ECX DSSDEPT MGMT",11)

"BLD",7002,"KRN",19,"NM","B","ECX ECS SOURCE AUDIT",30)

"BLD",7002,"KRN",19,"NM","B","ECX EXTRACT LOG REVIEW",49)

"BLD",7002,"KRN",19,"NM","B","ECX EXTRACT LOG SUMMARY",50)

"BLD",7002,"KRN",19,"NM","B","ECX FISCAL YEAR EXTRACT",51)

"BLD",7002,"KRN",19,"NM","B","ECX IV DIV EDIT",52)

"BLD",7002,"KRN",19,"NM","B","ECX IV DIV PRINT",53)

"BLD",7002,"KRN",19,"NM","B","ECX LAB MAINTENACE",4)

"BLD",7002,"KRN",19,"NM","B","ECX LAB RESULTS TRANS EDIT",46)

"BLD",7002,"KRN",19,"NM","B","ECX LAB SOURCE AUDIT (PATIENT)",31)

"BLD",7002,"KRN",19,"NM","B","ECX LAR SOURCE AUDIT",45)

"BLD",7002,"KRN",19,"NM","B","ECX LBB SOURCE AUDIT",98)

"BLD",7002,"KRN",19,"NM","B","ECX MAINTENANCE",2)

"BLD",7002,"KRN",19,"NM","B","ECX MOV SOURCE AUDIT",32)

"BLD",7002,"KRN",19,"NM","B","ECX MTL SOURCE AUDIT",33)

"BLD",7002,"KRN",19,"NM","B","ECX NATIONAL CLINIC",54)

"BLD",7002,"KRN",19,"NM","B","ECX NUR SOURCE AUDIT",34)

"BLD",7002,"KRN",19,"NM","B","ECX NUT DIV EDIT",55)

"BLD",7002,"KRN",19,"NM","B","ECX NUT DIV PRINT",56)

"BLD",7002,"KRN",19,"NM","B","ECX NUT PRO EDIT",57)

"BLD",7002,"KRN",19,"NM","B","ECX NUT PRO PRINT",58)

"BLD",7002,"KRN",19,"NM","B","ECX NUT SOURCE AUDIT",35)

"BLD",7002,"KRN",19,"NM","B","ECX NUTRITION WORKSHEETS",12)

"BLD",7002,"KRN",19,"NM","B","ECX PAI SOURCE AUDIT",36)

"BLD",7002,"KRN",19,"NM","B","ECX PHA EDIT",13)

"BLD",7002,"KRN",19,"NM","B","ECX PHA FKEY",14)

"BLD",7002,"KRN",19,"NM","B","ECX PHA SOURCE AUDIT",37)

"BLD",7002,"KRN",19,"NM","B","ECX PHA UDP/IVP SOURCE AUDIT",16)

"BLD",7002,"KRN",19,"NM","B","ECX PHA VOL",15)

"BLD",7002,"KRN",19,"NM","B","ECX PHA VOL EDIT",59)

"BLD",7002,"KRN",19,"NM","B","ECX PHA VOL EDIT LOG",60)

"BLD",7002,"KRN",19,"NM","B","ECX PHARMACY MAINTENANCE",5)

"BLD",7002,"KRN",19,"NM","B","ECX PRO COST",20)

"BLD",7002,"KRN",19,"NM","B","ECX PRO COST REPORT",19)

"BLD",7002,"KRN",19,"NM","B","ECX PRO LAB REPORT",22)

"BLD",7002,"KRN",19,"NM","B","ECX PRO SOURCE AUDIT",39)

"BLD",7002,"KRN",19,"NM","B","ECX PRO YTD REPORT",21)

"BLD",7002,"KRN",19,"NM","B","ECX PROSTHETICS MAINTENANCE",7)

"BLD",7002,"KRN",19,"NM","B","ECX QSR SOURCE AUDIT",38)

"BLD",7002,"KRN",19,"NM","B","ECX RAD SOURCE AUDIT",40)

"BLD",7002,"KRN",19,"NM","B","ECX SAS AUDITS",61)

"BLD",7002,"KRN",19,"NM","B","ECX SAS PRESCRIPTION",62)

"BLD",7002,"KRN",19,"NM","B","ECX SAS RADIOLOGY",63)

"BLD",7002,"KRN",19,"NM","B","ECX SAS SURGERY",64)

"BLD",7002,"KRN",19,"NM","B","ECX SETUP CLINIC",23)

"BLD",7002,"KRN",19,"NM","B","ECX SETUP INP CENSUS",25)

"BLD",7002,"KRN",19,"NM","B","ECX SETUP INP MEDS",26)

"BLD",7002,"KRN",19,"NM","B","ECX SETUP LAB",24)

"BLD",7002,"KRN",19,"NM","B","ECX SOURCE AUDITS",3)

"BLD",7002,"KRN",19,"NM","B","ECX SUR SOURCE AUDIT",41)

"BLD",7002,"KRN",19,"NM","B","ECX SUR VOL",27)

"BLD",7002,"KRN",19,"NM","B","ECX SUR VOL REPORT",28)

"BLD",7002,"KRN",19,"NM","B","ECX SURGERY MAINTENANCE",6)

"BLD",7002,"KRN",19,"NM","B","ECX TRANSMISSION",65)

"BLD",7002,"KRN",19,"NM","B","ECX TRT SOURCE AUDIT",42)

"BLD",7002,"KRN",19,"NM","B","ECX UNTRANS LAR REPORT",47)

"BLD",7002,"KRN",19,"NM","B","ECX WARD DSSDEPT",44)

"BLD",7002,"KRN",19,"NM","B","ECXADM",66)

"BLD",7002,"KRN",19,"NM","B","ECXEC",67)

"BLD",7002,"KRN",19,"NM","B","ECXFEKEY",17)

"BLD",7002,"KRN",19,"NM","B","ECXFELOC",18)

"BLD",7002,"KRN",19,"NM","B","ECXIV",1)

"BLD",7002,"KRN",19,"NM","B","ECXLAB",68)

"BLD",7002,"KRN",19,"NM","B","ECXLABR",69)

"BLD",7002,"KRN",19,"NM","B","ECXLABRS",70)

"BLD",7002,"KRN",19,"NM","B","ECXLARP",71)

"BLD",7002,"KRN",19,"NM","B","ECXLBB",72)

"BLD",7002,"KRN",19,"NM","B","ECXMENU",73)

"BLD",7002,"KRN",19,"NM","B","ECXMGR",74)

"BLD",7002,"KRN",19,"NM","B","ECXMOV",75)

"BLD",7002,"KRN",19,"NM","B","ECXMTL",76)

"BLD",7002,"KRN",19,"NM","B","ECXNDC",77)

"BLD",7002,"KRN",19,"NM","B","ECXNURS",78)

"BLD",7002,"KRN",19,"NM","B","ECXNUT",99)

"BLD",7002,"KRN",19,"NM","B","ECXPAI",79)

"BLD",7002,"KRN",19,"NM","B","ECXPCT",80)

"BLD",7002,"KRN",19,"NM","B","ECXPRO",81)

"BLD",7002,"KRN",19,"NM","B","ECXPSO",82)

"BLD",7002,"KRN",19,"NM","B","ECXPURG",83)

"BLD",7002,"KRN",19,"NM","B","ECXQSR",84)

"BLD",7002,"KRN",19,"NM","B","ECXRAD",85)

"BLD",7002,"KRN",19,"NM","B","ECXSCAPPROV",86)

"BLD",7002,"KRN",19,"NM","B","ECXSCEDIT",87)

"BLD",7002,"KRN",19,"NM","B","ECXSCLIST",88)

"BLD",7002,"KRN",19,"NM","B","ECXSCLOAD",89)

"BLD",7002,"KRN",19,"NM","B","ECXSCX",90)

"BLD",7002,"KRN",19,"NM","B","ECXSETUP",91)

"BLD",7002,"KRN",19,"NM","B","ECXSURG",92)

"BLD",7002,"KRN",19,"NM","B","ECXTRANS",93)

"BLD",7002,"KRN",19,"NM","B","ECXTRT",94)

"BLD",7002,"KRN",19,"NM","B","ECXTRYIT",95)

"BLD",7002,"KRN",19,"NM","B","ECXUD",96)

"BLD",7002,"KRN",19,"NM","B","ECXWRD",97)

"BLD",7002,"KRN",19.1,0)
19.1
"BLD",7002,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",7002,"KRN",101,0)
101
"BLD",7002,"KRN",409.61,0)
409.61
"BLD",7002,"KRN",771,0)
771
"BLD",7002,"KRN",870,0)
870
"BLD",7002,"KRN",8989.51,0)
8989.51
"BLD",7002,"KRN",8989.52,0)
8989.52
"BLD",7002,"KRN",8994,0)
8994
"BLD",7002,"KRN","B",.4,.4)

"BLD",7002,"KRN","B",.401,.401)

"BLD",7002,"KRN","B",.402,.402)

"BLD",7002,"KRN","B",.403,.403)

"BLD",7002,"KRN","B",.5,.5)

"BLD",7002,"KRN","B",.84,.84)

"BLD",7002,"KRN","B",3.6,3.6)

"BLD",7002,"KRN","B",3.8,3.8)

"BLD",7002,"KRN","B",9.2,9.2)

"BLD",7002,"KRN","B",9.8,9.8)

"BLD",7002,"KRN","B",19,19)

"BLD",7002,"KRN","B",19.1,19.1)

"BLD",7002,"KRN","B",101,101)

"BLD",7002,"KRN","B",409.61,409.61)

"BLD",7002,"KRN","B",771,771)

"BLD",7002,"KRN","B",870,870)

"BLD",7002,"KRN","B",8989.51,8989.51)

"BLD",7002,"KRN","B",8989.52,8989.52)

"BLD",7002,"KRN","B",8994,8994)

"BLD",7002,"PRET")

"BLD",7002,"QUES",0)
^9.62^^
"BLD",7002,"REQB",0)
^9.611^14^13
"BLD",7002,"REQB",1,0)
ECX*3.0*28^1
"BLD",7002,"REQB",2,0)
ECX*3.0*92^1
"BLD",7002,"REQB",3,0)
ECX*3.0*96^1
"BLD",7002,"REQB",4,0)
ECX*3.0*80^1
"BLD",7002,"REQB",6,0)
ECX*3.0*93^1
"BLD",7002,"REQB",7,0)
ECX*3.0*84^1
"BLD",7002,"REQB",8,0)
ECX*3.0*8^1
"BLD",7002,"REQB",9,0)
ECX*3.0*33^1
"BLD",7002,"REQB",10,0)
ECX*3.0*106^1
"BLD",7002,"REQB",11,0)
PSO*7.0*267^1
"BLD",7002,"REQB",12,0)
ECX*3.0*103^2
"BLD",7002,"REQB",13,0)
ECX*3.0*107^2
"BLD",7002,"REQB",14,0)
FH*5.5*10^1
"BLD",7002,"REQB","B","ECX*3.0*103",12)

"BLD",7002,"REQB","B","ECX*3.0*106",10)

"BLD",7002,"REQB","B","ECX*3.0*107",13)

"BLD",7002,"REQB","B","ECX*3.0*28",1)

"BLD",7002,"REQB","B","ECX*3.0*33",9)

"BLD",7002,"REQB","B","ECX*3.0*8",8)

"BLD",7002,"REQB","B","ECX*3.0*80",4)

"BLD",7002,"REQB","B","ECX*3.0*84",7)

"BLD",7002,"REQB","B","ECX*3.0*92",2)

"BLD",7002,"REQB","B","ECX*3.0*93",6)

"BLD",7002,"REQB","B","ECX*3.0*96",3)

"BLD",7002,"REQB","B","FH*5.5*10",14)

"BLD",7002,"REQB","B","PSO*7.0*267",11)

"DATA",727.1,1,0)
ADMISSIONS^727.802^M^^^^Admission^ADM^ADMS^13^^0
"DATA",727.1,1,1,0)
^^34^34^2980706^^^^
"DATA",727.1,1,1,1,0)
   
"DATA",727.1,1,1,2,0)
Verify against: Gains and Losses Sheet/Bed Status Report
"DATA",727.1,1,1,3,0)
Menu Option:    Gains and Losses (G&L) Sheet [DG G&L SHEET]
"DATA",727.1,1,1,4,0)
 
"DATA",727.1,1,1,5,0)
The Gains and Losses Sheet is the primary VistA report against which ADM
"DATA",727.1,1,1,6,0)
extract data should be verified.  However, if starting the verification
"DATA",727.1,1,1,7,0)
process at the beginning of the fiscal year, the Bed Status Report can also
"DATA",727.1,1,1,8,0)
be used.  Copies of these reports are readily available from patient
"DATA",727.1,1,1,9,0)
administration services at most medical centers.
"DATA",727.1,1,1,10,0)
   
"DATA",727.1,1,1,11,0)
The G&L Sheet shows admissions by ward for a specific day.  To verify the
"DATA",727.1,1,1,12,0)
data on the extract audit report, the verifier must accumulate the data
"DATA",727.1,1,1,13,0)
given on the G&L Sheet  either manually or through use of a spreadsheet
"DATA",727.1,1,1,14,0)
application. For example, if the Admission Extract Audit Report covers
"DATA",727.1,1,1,15,0)
the period July 1 to July 15, then accumulate the admission data from the
"DATA",727.1,1,1,16,0)
G&L Sheet for each day from July 1 through July 15.  The accumulated data
"DATA",727.1,1,1,17,0)
for a given ward (e.g.,total number of admissions for Ward A during the
"DATA",727.1,1,1,18,0)
period) should match the figure reported on the extract audit for the same
"DATA",727.1,1,1,19,0)
ward and date range.
"DATA",727.1,1,1,20,0)
 
"DATA",727.1,1,1,21,0)
If verification is done through the Bed Status Report, simply use the
"DATA",727.1,1,1,22,0)
"Cumulative Totals" table which displays fiscal year-to-date totals of
"DATA",727.1,1,1,23,0)
interward losses and discharges by ward group.  The Admission (ADM) Extract
"DATA",727.1,1,1,24,0)
Audit also displays totals by ward group.  Some arithmetic manipulation is
"DATA",727.1,1,1,25,0)
needed here in order to compare the figures on the two reports.  For
"DATA",727.1,1,1,26,0)
example, to verify data for the month of July, the user must first develop
"DATA",727.1,1,1,27,0)
a "Cumulative Totals" table for the month of July.  This is done by
"DATA",727.1,1,1,28,0)
subtracting the figures contained in the "Cumulative Totals" table of
"DATA",727.1,1,1,29,0)
June 30 from the figures contained in the "Cumulative Totals" table of
"DATA",727.1,1,1,30,0)
July 31.  (Again, this can be accomplished manually, or with the aid of a
"DATA",727.1,1,1,31,0)
spreadsheet application.)  The resulting month of July table can then be
"DATA",727.1,1,1,32,0)
compared directly to the ward group totals shown on the extract audit
"DATA",727.1,1,1,33,0)
report generated for the period July 1 to July 31.
"DATA",727.1,1,1,34,0)
 
"DATA",727.1,1,"ROU")
ECXADM
"DATA",727.1,2,0)
CLINIC^727.803^M^30^30^^Clinic/Inactive^ZZZ^SCX^11^200^1
"DATA",727.1,2,"ROU")
ECXSCX
"DATA",727.1,3,0)
CLINIC NOSHOW^727.804^M^30^^^Clinic no shows^NOS^SCNS^15^200^1
"DATA",727.1,3,"ROU")
ECXSCNS
"DATA",727.1,4,0)
NURSING^727.805^M^^^^Nursing^NUR^NURS^7^^0
"DATA",727.1,4,1,0)
^^21^21^2990805^^^^
"DATA",727.1,4,1,1,0)
  
"DATA",727.1,4,1,2,0)
Verify against: Report 10-1106 Segment 200, Cumulative Daily
"DATA",727.1,4,1,3,0)
                 Patient Classification Data
"DATA",727.1,4,1,4,0)
Menu option:    Patient Category Totals-Midnight Acuity Reports
"DATA",727.1,4,1,5,0)
                [NURAPR-RES-MDPC]
"DATA",727.1,4,1,6,0)
  
"DATA",727.1,4,1,7,0)
The report against which to verify NUR extract audit data is the VistA 
"DATA",727.1,4,1,8,0)
Nursing application's Report 10-1106 Segment 200, Cumulative Daily Patient
"DATA",727.1,4,1,9,0)
Classification Data report.  However, it is possible that the figures shown
"DATA",727.1,4,1,10,0)
on this report may not exactly match those on the Nursing (NUR) Extract
"DATA",727.1,4,1,11,0)
Audit Report.  The reason for this is that the DSS Nursing extract does not
"DATA",727.1,4,1,12,0)
include classification data for any patient discharged or transferred on
"DATA",727.1,4,1,13,0)
the same day, but after the classification took place.  So the figures on
"DATA",727.1,4,1,14,0)
the NUR extract report may occassionally be slightly lower for some Nursing
"DATA",727.1,4,1,15,0)
locations. 
"DATA",727.1,4,1,16,0)
  
"DATA",727.1,4,1,17,0)
It is recommended that the Cumulative Daily Patient Classification Data
"DATA",727.1,4,1,18,0)
report be generated for an entire month for each Nursing Location.  Both
"DATA",727.1,4,1,19,0)
the Cumulative Daily Patient Classification Data and the Nursing (NUR)
"DATA",727.1,4,1,20,0)
Extract Audit Report list classification totals by Nursing Bedsection
"DATA",727.1,4,1,21,0)
within each Nursing Location.
"DATA",727.1,4,"ROU")
ECXNURS
"DATA",727.1,5,0)
DENTAL^727.806^M^^^^Dental^DEN^DENT^9^^0
"DATA",727.1,5,1,0)
^^24^24^2980706^^^^
"DATA",727.1,5,1,1,0)
   
"DATA",727.1,5,1,2,0)
Verify against: Dental Service Treatment Report - Summary Report for Clinic
"DATA",727.1,5,1,3,0)
Menu Option:    Clinic Summary [DENTTREATCLINIC RPT]
"DATA",727.1,5,1,4,0)
 
"DATA",727.1,5,1,5,0)
The Dental Extract Audit Report should be run for each site/division
"DATA",727.1,5,1,6,0)
defined by the VistA DENTAL application site parameters.  It can be
"DATA",727.1,5,1,7,0)
verified against the Dental Service Treatment Report - Summary Report
"DATA",727.1,5,1,8,0)
for Clinic generated for the same site/division and date range.  Use the
"DATA",727.1,5,1,9,0)
first page of the Summary Report for Clinic and add-up (either manually
"DATA",727.1,5,1,10,0)
or through a spreadsheet application) the totals shown for a particular
"DATA",727.1,5,1,11,0)
procedure in each of the inpatient/outpatient dental categories.  This
"DATA",727.1,5,1,12,0)
total (across all dental categories) should match the total for that
"DATA",727.1,5,1,13,0)
procedure shown on the Dental Extract Audit Report.
"DATA",727.1,5,1,14,0)
  
"DATA",727.1,5,1,15,0)
Be sure that the extract audit report and the Dental clinic summary
"DATA",727.1,5,1,16,0)
report being compared are reporting data from the same division and date
"DATA",727.1,5,1,17,0)
range.  Both reports show this information in the report header.
"DATA",727.1,5,1,18,0)
  
"DATA",727.1,5,1,19,0)
The Dental Service Treatment Report - Summary Report for Clinic is
"DATA",727.1,5,1,20,0)
routinely generated by Dental Service administrative staff at most medical
"DATA",727.1,5,1,21,0)
centers, so a copy of the report should be easily obtainable. Please note
"DATA",727.1,5,1,22,0)
that (1) not all dental procedures appear on the extract audit report,
"DATA",727.1,5,1,23,0)
and (2) the Summary Report for Clinic only shows the first 20 characters
"DATA",727.1,5,1,24,0)
of the procedure name.
"DATA",727.1,5,"ROU")
ECXDENT
"DATA",727.1,6,0)
BLOOD BANK^727.829^M^^^^Blood Bank^LBB^LBB^27^200^0
"DATA",727.1,6,"ROU")
ECXLBB
"DATA",727.1,7,0)
PHYSICAL MOVEMENT^727.808^M^^^^Movement^MOV^MOVS^14^^0
"DATA",727.1,7,1,0)
^^67^67^2980706^^^^
"DATA",727.1,7,1,1,0)
 
"DATA",727.1,7,1,2,0)
Verify against: Gains & Losses Sheet/Bed Status Report
"DATA",727.1,7,1,3,0)
Menu Option:    Gains and Losses (G&L) Sheet [DG G&L SHEET]
"DATA",727.1,7,1,4,0)
 
"DATA",727.1,7,1,5,0)
The Gains and Losses Sheet is the primary VistA report against which MOV
"DATA",727.1,7,1,6,0)
extract data should be verified.  However, if starting the verification
"DATA",727.1,7,1,7,0)
process at the beginning of the fiscal year, the Bed Status Report can
"DATA",727.1,7,1,8,0)
also be used.  Copies of these reports are readily available from patient
"DATA",727.1,7,1,9,0)
administration services at most medical centers.
"DATA",727.1,7,1,10,0)
  
"DATA",727.1,7,1,11,0)
The G&L Sheet shows interward transfers and discharges by ward for a
"DATA",727.1,7,1,12,0)
specific day.  To verify the data on the extract audit report, the 
"DATA",727.1,7,1,13,0)
verifier must accumulate the data given on the G&L Sheet either 
"DATA",727.1,7,1,14,0)
manually or through use of a spreadsheet application. For example,
"DATA",727.1,7,1,15,0)
if the Movement (MOV) Extract Audit Report covers the period July 1
"DATA",727.1,7,1,16,0)
to July 15, then accumulate the transfer and discharge data from the
"DATA",727.1,7,1,17,0)
G&L Sheet for each day from July 1 through July 15.  The accumulated
"DATA",727.1,7,1,18,0)
data for a given ward (e.g.,total number of transfers out and total
"DATA",727.1,7,1,19,0)
number of discharges for Ward A during the period) should match 
"DATA",727.1,7,1,20,0)
the figures reported on the extract audit for the same ward and
"DATA",727.1,7,1,21,0)
date range.
"DATA",727.1,7,1,22,0)
  
"DATA",727.1,7,1,23,0)
Please note that the Movement (MOV) Extract Audit Report shows a
"DATA",727.1,7,1,24,0)
detailed break-out of both transfers and discharges by movement type.
"DATA",727.1,7,1,25,0)
Individual totals by movement type are listed for each ward, thereby
"DATA",727.1,7,1,26,0)
enabling the user to verify data with much specificity.  If the user
"DATA",727.1,7,1,27,0)
does not care to verify data to this level of detail, then the figure
"DATA",727.1,7,1,28,0)
in the last column of each row should be used.  This figure represents
"DATA",727.1,7,1,29,0)
the total number of transfers or discharges of all types for a given
"DATA",727.1,7,1,30,0)
ward during the date range selected.  The section of the MOV Extract
"DATA",727.1,7,1,31,0)
Audit Report which shows MAS Movement (Transfer) Types is reporting
"DATA",727.1,7,1,32,0)
number of interward transfer losses for each ward.
"DATA",727.1,7,1,33,0)
  
"DATA",727.1,7,1,34,0)
If verification is done through the Bed Status Report, simply use the
"DATA",727.1,7,1,35,0)
"Cumulative Totals" table which displays fiscal year-to-date totals of
"DATA",727.1,7,1,36,0)
interward losses and discharges by ward group.  The Movement (MOV) Extract
"DATA",727.1,7,1,37,0)
Audit also displays totals by ward group.  Some arithmetic manipulation is
"DATA",727.1,7,1,38,0)
needed here in order to compare the figures on the two reports.  For
"DATA",727.1,7,1,39,0)
example, to verify data for the month of July, the user must first develop
"DATA",727.1,7,1,40,0)
a "Cumulative Totals" table for the month of July.  This is done by
"DATA",727.1,7,1,41,0)
subtracting the figures contained in the "Cumulative Totals" table of
"DATA",727.1,7,1,42,0)
June 30 from the figures contained in the "Cumulative Totals" table of
"DATA",727.1,7,1,43,0)
July 31 for the appropriate fiscal year.  (Again, this can be accomplished
"DATA",727.1,7,1,44,0)
manually, or with the aid of a spreadsheet application.)  The resulting
"DATA",727.1,7,1,45,0)
Cumulative Totals table can now be compared to your MOV Extract Audit
"DATA",727.1,7,1,46,0)
Report for the period July 1 to July 31.
"DATA",727.1,7,1,47,0)
  
"DATA",727.1,7,1,48,0)
When verifying the totals for discharge movements, you can directly
"DATA",727.1,7,1,49,0)
compare the total number of discharges shown in the last column for each
"DATA",727.1,7,1,50,0)
ward group on the MOV Extract Audit Report to the total discharges for
"DATA",727.1,7,1,51,0)
that same ward group on the Cumulative Totals table.
"DATA",727.1,7,1,52,0)
  
"DATA",727.1,7,1,53,0)
When verifying the total for transfer movements, the method of comparison
"DATA",727.1,7,1,54,0)
will depend on whether your site has NHCU wards.  The presence of NHCU
"DATA",727.1,7,1,55,0)
wards means that there may be ASIH movements which will not be reflected
"DATA",727.1,7,1,56,0)
in the total interward losses shown on the Cumulative Totals table.
"DATA",727.1,7,1,57,0)
  
"DATA",727.1,7,1,58,0)
   (1) If your site does not have NHCU wards, you can directly compare
"DATA",727.1,7,1,59,0)
       the total number of transfers shown in the last column for each
"DATA",727.1,7,1,60,0)
       ward group on the MOV Extract Audit Report to the total interward
"DATA",727.1,7,1,61,0)
       losses for that same ward group on the Cumulative Totals table.
"DATA",727.1,7,1,62,0)
  
"DATA",727.1,7,1,63,0)
   (2) If your site does have NHCU wards, you should directly compare
"DATA",727.1,7,1,64,0)
       the total number of interward transfers (i.e., MAS Movement Type
"DATA",727.1,7,1,65,0)
       is 4) shown in the fourth column for each ward group on the
"DATA",727.1,7,1,66,0)
       MOV Extract Audit Report to the total interward losses for that
"DATA",727.1,7,1,67,0)
       same ward group on the Cumulative Totals table.
"DATA",727.1,7,"ROU")
ECXMOV
"DATA",727.1,8,0)
UNIT DOSE^727.809^M^^^^Unit Dose^UDP^UD^8^^0
"DATA",727.1,8,"ROU")
ECXUD
"DATA",727.1,9,0)
PRESCRIPTION^727.81^M^^^^Prescription^PRE^PRES^2^^0
"DATA",727.1,9,"ROU")
ECXOPRX
"DATA",727.1,10,0)
SURGERY^727.811^M^^^^Surgery^SUR^SURG^5^^0
"DATA",727.1,10,1,0)
^^34^34^2980706^^^^
"DATA",727.1,10,1,1,0)
  
"DATA",727.1,10,1,2,0)
Verify against: Surgical Service Cumulative Report of CPT Codes
"DATA",727.1,10,1,3,0)
Menu option:    Cumulative Report of CPT Codes [SROACCT]
"DATA",727.1,10,1,4,0)
  
"DATA",727.1,10,1,5,0)
The Surgery (SUR) Extract Audit Report may be verified against the Surgical
"DATA",727.1,10,1,6,0)
Service Cumulative Report of CPT Codes found in the VistA Surgery package.
"DATA",727.1,10,1,7,0)
  
"DATA",727.1,10,1,8,0)
It should be noted that the report from the Surgery application package
"DATA",727.1,10,1,9,0)
combines data from all Surgery sites/divisions for its CPT code listing.
"DATA",727.1,10,1,10,0)
The SUR extract audit report, on the other hand, organizes and prints 
"DATA",727.1,10,1,11,0)
procedure data by Surgery site/division.  
"DATA",727.1,10,1,12,0)
  
"DATA",727.1,10,1,13,0)
When generating the Cumulative Report of CPT Codes, generate one report
"DATA",727.1,10,1,14,0)
for O.R. Surgical Procedures and another for Non-O.R. Procedures.  If the
"DATA",727.1,10,1,15,0)
facility has multiple Surgery sites (i.e., the SURGERY SITE PARAMETERS
"DATA",727.1,10,1,16,0)
file (#133) has more than one entry), then for any given procedure the 
"DATA",727.1,10,1,17,0)
total from each divisional extract audit report must be added together
"DATA",727.1,10,1,18,0)
to get the total appearing on the Cumulative Report of CPT Codes.  Be sure
"DATA",727.1,10,1,19,0)
that both the SUR extract audit report and the Cumulative Report of CPT
"DATA",727.1,10,1,20,0)
Codes are generated for the same date range.
"DATA",727.1,10,1,21,0)
 
"DATA",727.1,10,1,22,0)
Also note that adding together the Total O.R. Surgical Procedures and
"DATA",727.1,10,1,23,0)
the Total Non-O.R. Surgical Procedures across all Surgery Divisions
"DATA",727.1,10,1,24,0)
appearing on the SUR Extract Audit Report may not equal the total number
"DATA",727.1,10,1,25,0)
of extract records.  This is because the SUR Extract Audit Report does
"DATA",727.1,10,1,26,0)
not include the "Implant" extract records which normally do not have
"DATA",727.1,10,1,27,0)
CPT codes associated with them.
"DATA",727.1,10,1,28,0)
 
"DATA",727.1,10,1,29,0)
If you able to run a FileMan print (or search), you can find all the
"DATA",727.1,10,1,30,0)
"Implant" records by looking for those records in file #727.811 with
"DATA",727.1,10,1,31,0)
a PRIMARY/SECONDARY/PROSTHETICS field (#16) set to "I".  The total
"DATA",727.1,10,1,32,0)
number of "Implant" records plus the totals from the SUR Extract
"DATA",727.1,10,1,33,0)
Audit Report should now equal the total number of records in the
"DATA",727.1,10,1,34,0)
SUR extract.
"DATA",727.1,10,"ROU")
ECXSURG
"DATA",727.1,11,0)
MENTAL HEALTH^727.812^M^^^^Mental Health^MTL^MTL^24^^0
"DATA",727.1,11,1,0)
^^20^20^3000222^
"DATA",727.1,11,1,1,0)
Verify against: Usage Statistics, Site Report by Date
"DATA",727.1,11,1,2,0)
Menu Option:    Usage Statistics [YSMUSE], Site Report by Date [YSAS 
"DATA",727.1,11,1,3,0)
                MANAGEMENT REPORT]
"DATA",727.1,11,1,4,0)
  
"DATA",727.1,11,1,5,0)
The 'Usage Statistics' report in the MENTAL HEALTH VistA software should be 
"DATA",727.1,11,1,6,0)
used to verify the Psych instrument segment of the DSS MTL Extract Audit
"DATA",727.1,11,1,7,0)
report.  It must be noted that the Usage report is produced based on month 
"DATA",727.1,11,1,8,0)
and year, the days are ignored.
"DATA",727.1,11,1,9,0)
  
"DATA",727.1,11,1,10,0)
The 'Site Report by Date' should be used to verify the ASI segment on the
"DATA",727.1,11,1,11,0)
DSS MTL Extract Audit Report.  It is possible that the figures on the DSS
"DATA",727.1,11,1,12,0)
MTL report may be higher than those on the Site Report.  The reason being
"DATA",727.1,11,1,13,0)
that the MENTAL HEALTH 'Site Report' does not currently display test that
"DATA",727.1,11,1,14,0)
are inactive.  The DSS MTL Extract Audit Report will report both active
"DATA",727.1,11,1,15,0)
and inactive tests performed during a specified date range.
"DATA",727.1,11,1,16,0)
  
"DATA",727.1,11,1,17,0)
Currently, there is no report in the MENTAL HEALTH VistA package to verify
"DATA",727.1,11,1,18,0)
the GAF segment on the DSS MTL Extract Audit Report. However, the general
"DATA",727.1,11,1,19,0)
format seen in the MENTAL HEALTH VistA, Print GAF's by Clinic/Date [YSGAF
"DATA",727.1,11,1,20,0)
PRINT CLINIC] is being followed.
"DATA",727.1,11,"ROU")
ECXMTL
"DATA",727.1,12,0)
LABORATORY^727.813^M^^^^Laboratory^LAB^LAB^1^^0
"DATA",727.1,12,1,0)
64^^138^138^2980713^^^^
"DATA",727.1,12,1,1,0)
 
"DATA",727.1,12,1,2,0)
Verify against: Workload Statistics by Accession Area and Shifts
"DATA",727.1,12,1,3,0)
Menu Option:    Workload statistics by accession area and shift [LRRP8]
"DATA",727.1,12,1,4,0)
 
"DATA",727.1,12,1,5,0)
The VistA LAB report recommended for verification of DSS LAB extract data
"DATA",727.1,12,1,6,0)
is the Workload Statistics by Accession Area and Shifts report.  This report
"DATA",727.1,12,1,7,0)
is only available to those Laboratory services that utilize LMIP codes
"DATA",727.1,12,1,8,0)
for workload reporting.  A copy of this report can be obtained from the
"DATA",727.1,12,1,9,0)
Laboratory Service administrator or LAB ADPAC at most VA medical centers.
"DATA",727.1,12,1,10,0)
  
"DATA",727.1,12,1,11,0)
Confirm that the LAB Workload Statistics by Accession Area and Shifts report
"DATA",727.1,12,1,12,0)
was generated using parameters similar to those outlined here:
"DATA",727.1,12,1,13,0)
  
"DATA",727.1,12,1,14,0)
  
"DATA",727.1,12,1,15,0)
  Workload statistics by accession area and shift
"DATA",727.1,12,1,16,0)
  
"DATA",727.1,12,1,17,0)
  PRINT THE COMMENT PAGES?  NO//
"DATA",727.1,12,1,18,0)
  
"DATA",727.1,12,1,19,0)
  Select WKLD DATA INSTITUTION: ?                
"DATA",727.1,12,1,20,0)
   Answer with WKLD DATA NUMBER, or INSTITUTION        
"DATA",727.1,12,1,21,0)
  Choose from:                                         
"DATA",727.1,12,1,22,0)
     500             ALBANY                            
"DATA",727.1,12,1,23,0)
     11000           ISC REGION 1
"DATA",727.1,12,1,24,0)
     
"DATA",727.1,12,1,25,0)
  Select WKLD DATA INSTITUTION: ALBANY      NY             VAMC      500
"DATA",727.1,12,1,26,0)
  
"DATA",727.1,12,1,27,0)
       Select one of the following:
"DATA",727.1,12,1,28,0)
  
"DATA",727.1,12,1,29,0)
            Y         YES
"DATA",727.1,12,1,30,0)
            N         NO
"DATA",727.1,12,1,31,0)
  
"DATA",727.1,12,1,32,0)
  Do you want to select accession areas (YES or NO) : NO// YES
"DATA",727.1,12,1,33,0)
  Select ACCESSION AREA: CHEMISTRY      
"DATA",727.1,12,1,34,0)
  Select ACCESSION AREA: 
"DATA",727.1,12,1,35,0)
  DATE selection:
"DATA",727.1,12,1,36,0)
  
"DATA",727.1,12,1,37,0)
       Select one of the following:
"DATA",727.1,12,1,38,0)
  
"DATA",727.1,12,1,39,0)
            1         A specific date
"DATA",727.1,12,1,40,0)
            2         A range of dates
"DATA",727.1,12,1,41,0)
  
"DATA",727.1,12,1,42,0)
  Enter response: 2  A range of dates
"DATA",727.1,12,1,43,0)
  Date to START with: TODAY//7 1 97  (JUL 01, 1997)
"DATA",727.1,12,1,44,0)
  Date to END  with: LAST//7 31 97  (JUL 31, 1997)
"DATA",727.1,12,1,45,0)
  
"DATA",727.1,12,1,46,0)
       Select one of the following:
"DATA",727.1,12,1,47,0)
  
"DATA",727.1,12,1,48,0)
            Y         YES
"DATA",727.1,12,1,49,0)
            N         NO
"DATA",727.1,12,1,50,0)
  
"DATA",727.1,12,1,51,0)
  Do you want to select workload codes (YES or NO) : NO// 
"DATA",727.1,12,1,52,0)
  TIME selection:
"DATA",727.1,12,1,53,0)
  
"DATA",727.1,12,1,54,0)
       Select one of the following:
"DATA",727.1,12,1,55,0)
  
"DATA",727.1,12,1,56,0)
            1         A time range
"DATA",727.1,12,1,57,0)
            2         A set of shifts
"DATA",727.1,12,1,58,0)
  
"DATA",727.1,12,1,59,0)
  Enter response: 1  A time range
"DATA",727.1,12,1,60,0)
  Enter TIME RANGE in military format HHMM.SS (0.00 - 2400.00):
"DATA",727.1,12,1,61,0)
  START time: :  (0.00-2400.00): 0
"DATA",727.1,12,1,62,0)
  STOP time: :  (0.00-2400.00): 2400
"DATA",727.1,12,1,63,0)
  REPORT selection:
"DATA",727.1,12,1,64,0)
  
"DATA",727.1,12,1,65,0)
       Select one of the following:
"DATA",727.1,12,1,66,0)
  
"DATA",727.1,12,1,67,0)
            1         Detail report
"DATA",727.1,12,1,68,0)
            2         Summary report
"DATA",727.1,12,1,69,0)
  
"DATA",727.1,12,1,70,0)
  Enter response: 1  Detail report
"DATA",727.1,12,1,71,0)
  DEVICE: HOME// A138
"DATA",727.1,12,1,72,0)
   
"DATA",727.1,12,1,73,0)
  
"DATA",727.1,12,1,74,0)
Remember, if the facility has more than one Institution indentified in 
"DATA",727.1,12,1,75,0)
the WKLD DATA file (#64.1), a report for each must be generated.  If the
"DATA",727.1,12,1,76,0)
same Accession Area and procedures appear on more than one Institution's
"DATA",727.1,12,1,77,0)
workload statistics report, then the count from each for a given procedure
"DATA",727.1,12,1,78,0)
must be added together to compare with the figure on the LAB extract
"DATA",727.1,12,1,79,0)
audit report.
"DATA",727.1,12,1,80,0)
  
"DATA",727.1,12,1,81,0)
The workload statistics report can be many pages, so it is advisable to
"DATA",727.1,12,1,82,0)
limit it to a selected Accession Area for which data is being seen on the 
"DATA",727.1,12,1,83,0)
Laboratory (LAB) Extract Audit Report.  Be sure that the date range for
"DATA",727.1,12,1,84,0)
this workload statistics report is the same as the date range on the 
"DATA",727.1,12,1,85,0)
DSS LAB extract audit report.
"DATA",727.1,12,1,86,0)
   
"DATA",727.1,12,1,87,0)
It is also important to remember that these two reports will never show
"DATA",727.1,12,1,88,0)
a 100% correspondence in the totals reported.  This is because the 
"DATA",727.1,12,1,89,0)
workload statistics report is generated by procedure completion date,
"DATA",727.1,12,1,90,0)
whereas the LAB extract is essentially generated by specimen collection
"DATA",727.1,12,1,91,0)
date.  The LAB extract uses the specimen collection date because the
"DATA",727.1,12,1,92,0)
data extracted and sent to AAC must be correlated with patient encounter
"DATA",727.1,12,1,93,0)
data in order to produce the correct costing analysis.  And the specimen
"DATA",727.1,12,1,94,0)
collection date is always closely related to the encounter date.
"DATA",727.1,12,1,95,0)
 
"DATA",727.1,12,1,96,0)
In order to minimize the discrepancies between the two reports for
"DATA",727.1,12,1,97,0)
verification purposes, generate the reports for the full month.  Use
"DATA",727.1,12,1,98,0)
a start date of the first of the month, and an end date of the last day
"DATA",727.1,12,1,99,0)
of the month for both reports.  Narrowing the date range will cause
"DATA",727.1,12,1,100,0)
more and larger discrepancies to be seen.  However, there will be some
"DATA",727.1,12,1,101,0)
Lab procedures which always display differences in the totals shown
"DATA",727.1,12,1,102,0)
on these reports.  These procedures are those which frequently have
"DATA",727.1,12,1,103,0)
significant lag (i.e., greater than 30 days) between specimen collection
"DATA",727.1,12,1,104,0)
and test completion.
"DATA",727.1,12,1,105,0)
  
"DATA",727.1,12,1,106,0)
In order to be included in a DSS LAB extract, a lab procedure/test
"DATA",727.1,12,1,107,0)
must have an associated WKLD Code which satisfies at least one of the
"DATA",727.1,12,1,108,0)
following criteria:
"DATA",727.1,12,1,109,0)
   
"DATA",727.1,12,1,110,0)
  (1) The last 4 digits (after the decimal point) of the WKLD Code
"DATA",727.1,12,1,111,0)
      are "9999".
"DATA",727.1,12,1,112,0)
  
"DATA",727.1,12,1,113,0)
  (2) The first digit after the decimal of the WKLD Code is "8".
"DATA",727.1,12,1,114,0)
  
"DATA",727.1,12,1,115,0)
  (3) The WKLD Code is billable.  The BILLABLE PROCEDURE field
"DATA",727.1,12,1,116,0)
      (#4) for this WKLD Code entry in the WKLD CODE file (#64)
"DATA",727.1,12,1,117,0)
      is set to "YES".
"DATA",727.1,12,1,118,0)
  
"DATA",727.1,12,1,119,0)
  (4) The WKLD Code is marked as a DSS feeder key.  The DSS Feeder
"DATA",727.1,12,1,120,0)
      Key field (#14) for this WKLD Code entry in the WKLD CODE 
"DATA",727.1,12,1,121,0)
      file (#64) is set to "YES".
"DATA",727.1,12,1,122,0)
  
"DATA",727.1,12,1,123,0)
So there may be many more LMIP codes appearing on the workload statistics
"DATA",727.1,12,1,124,0)
report than on the extract audit report for a given Accession Area.
"DATA",727.1,12,1,125,0)
Verify extract data by comparing totals for each procedure/LMIP code
"DATA",727.1,12,1,126,0)
appearing on the extract audit report with the total for the same 
"DATA",727.1,12,1,127,0)
procedure/LMIP code on the Laboratory workload statistics report.
"DATA",727.1,12,1,128,0)
Also, verify that each procedure/LMIP code which satisfies criteria
"DATA",727.1,12,1,129,0)
(1) or (2) on the workload statistics report also appears on the LAB
"DATA",727.1,12,1,130,0)
extract audit report.
"DATA",727.1,12,1,131,0)
 
"DATA",727.1,12,1,132,0)
Remember, since the LAB extract is based on specimen collection date
"DATA",727.1,12,1,133,0)
rather than test completion (workload) date, it will not be unusual to
"DATA",727.1,12,1,134,0)
see small differences in the totals reported for a given procedure.
"DATA",727.1,12,1,135,0)
Procedures which consistently show a significantly lower total on the
"DATA",727.1,12,1,136,0)
LAB extract audit report than on the workload statistics report are
"DATA",727.1,12,1,137,0)
probably procedures which frequently have a large lag between date
"DATA",727.1,12,1,138,0)
of specimen collection and date of workload reporting.
"DATA",727.1,12,"ROU")
ECXLABN
"DATA",727.1,13,0)
RADIOLOGY^727.814^M^^^^Radiology^RAD^RAD^6^^0
"DATA",727.1,13,1,0)
^^33^33^2980706^^^^
"DATA",727.1,13,1,1,0)
   
"DATA",727.1,13,1,2,0)
Verify against: Procedure/CPT Statistics Report, Inpatient
"DATA",727.1,13,1,3,0)
                Procedure/CPT Statistics Report, Outpatient
"DATA",727.1,13,1,4,0)
Menu Option:    Procedure/CPT Statistics Report [RA CPTSTATS]
"DATA",727.1,13,1,5,0)
 
"DATA",727.1,13,1,6,0)
The Procedure/CPT Statistics Report for Radiology is the primary VistA
"DATA",727.1,13,1,7,0)
report against which RAD extract data should be verified.  The Procedure/CPT
"DATA",727.1,13,1,8,0)
Statistics Report and the DSS Radiology (RAD) Extract Audit print data in
"DATA",727.1,13,1,9,0)
very similar formats, so verification of extract data should be a simple,
"DATA",727.1,13,1,10,0)
one-to-one process.  However, the totals by procedure shown on the RAD 
"DATA",727.1,13,1,11,0)
extract audit report may be lower in some cases.  This is because the
"DATA",727.1,13,1,12,0)
RAD extract data does not include cancelled exams or any other exam
"DATA",727.1,13,1,13,0)
where the EXAM STATUS field (#3) in the RAD/NUC MED PATIENT file (#70) 
"DATA",727.1,13,1,14,0)
has an ORDER field (#3) in the EXAMINATION STATUS file (#72) with a 
"DATA",727.1,13,1,15,0)
value of zero.  Comparing the two reports over a shorter time period will
"DATA",727.1,13,1,16,0)
help to minimize these differences.  (For example, instead of generating
"DATA",727.1,13,1,17,0)
each report for an entire month, use a 1-3 day date range.)
"DATA",727.1,13,1,18,0)
 
"DATA",727.1,13,1,19,0)
When generating each of these reports, the user may select the Radiology
"DATA",727.1,13,1,20,0)
division and the date range of the data to be included.  Both reports list
"DATA",727.1,13,1,21,0)
CPT procedures and the number of occurrences.  The procedures are grouped
"DATA",727.1,13,1,22,0)
by Radiology division and imaging type.  The Procedure/CPT Statistics Report
"DATA",727.1,13,1,23,0)
lists inpatient and outpatient data seperately, while the Radiology (RAD)
"DATA",727.1,13,1,24,0)
Extract Audit Report shows the inpatient and outpatient data side-by-side.
"DATA",727.1,13,1,25,0)
 
"DATA",727.1,13,1,26,0)
The extract audit report shows data for ALL procedures and imaging types
"DATA",727.1,13,1,27,0)
within the division(s) selected.  Therefore, the user should accept the
"DATA",727.1,13,1,28,0)
default answer to the following prompts when requesting the Procedure/CPT
"DATA",727.1,13,1,29,0)
Statistics Report:
"DATA",727.1,13,1,30,0)
 
"DATA",727.1,13,1,31,0)
   Select Imaging Type: All//  
"DATA",727.1,13,1,32,0)
  
"DATA",727.1,13,1,33,0)
   Do you wish to include all Procedures? Yes//
"DATA",727.1,13,"ROU")
ECXRAD
"DATA",727.1,14,0)
EVENT CAPTURE^727.815^M^^^^Event Capture^ECS^EC^3^^0
"DATA",727.1,14,1,0)
^^16^16^2980706^^^^
"DATA",727.1,14,1,1,0)
 
"DATA",727.1,14,1,2,0)
Verify against: DSS Unit Workload Summary Report
"DATA",727.1,14,1,3,0)
Menu Option:    DSS Unit Workload Summary [ECRDSSU]
"DATA",727.1,14,1,4,0)
  
"DATA",727.1,14,1,5,0)
The DSS Unit Workload Summary Report, available in the VistA Event Capture 
"DATA",727.1,14,1,6,0)
application, provides a convenient method of verifying ECS extract data.
"DATA",727.1,14,1,7,0)
  
"DATA",727.1,14,1,8,0)
Both the DSS Unit Workload Summary Report and the Event Capture (ECS)
"DATA",727.1,14,1,9,0)
Extract Audit Report list procedures alphabetically within Category
"DATA",727.1,14,1,10,0)
and DSS Unit for one, many, or all Event Capture Locations.  Of course,
"DATA",727.1,14,1,11,0)
the date range specified for each report must be the same.
"DATA",727.1,14,1,12,0)
  
"DATA",727.1,14,1,13,0)
Verification of extract data is quite straightforward.  The figures
"DATA",727.1,14,1,14,0)
which reflect the total volume of procedures on the extract audit report
"DATA",727.1,14,1,15,0)
can be directly compared to the corresponding figures on the Event
"DATA",727.1,14,1,16,0)
Capture workload summary report.
"DATA",727.1,14,"ROU")
ECXEC
"DATA",727.1,15,0)
IV^727.819^M^^^^IVs (detail)^IVP^IV^19^^0
"DATA",727.1,15,"ROU")
ECXPIVDN
"DATA",727.1,16,0)
TREATING SPECIALTY CHANGE^727.817^M^^^^Treating specialty change^TRT^TREAT^17^^0
"DATA",727.1,16,1,0)
^^65^65^2980706^^^^
"DATA",727.1,16,1,1,0)
 
"DATA",727.1,16,1,2,0)
Verify against: Gains & Losses Sheet/Treating Specialty Report
"DATA",727.1,16,1,3,0)
Menu Option:    Gains and Losses (G&L) Sheet [DG G&L SHEET]
"DATA",727.1,16,1,4,0)
 
"DATA",727.1,16,1,5,0)
The Treating Specialty Report included in the printout of the Gains and
"DATA",727.1,16,1,6,0)
Losses Sheet is the primary VistA report against which TRT extract data
"DATA",727.1,16,1,7,0)
can be verified.  Copies of these reports are readily available from
"DATA",727.1,16,1,8,0)
patient administration services at most medical centers.
"DATA",727.1,16,1,9,0)
  
"DATA",727.1,16,1,10,0)
The G&L Treating Specialty Report is generated on a daily basis, and shows
"DATA",727.1,16,1,11,0)
gains and losses to each facility treating specialty during the previous
"DATA",727.1,16,1,12,0)
24-hour period.  The Treating Specialty Change (TRT) Extract Audit
"DATA",727.1,16,1,13,0)
Report shows total losses to the various specialties for a date range
"DATA",727.1,16,1,14,0)
(usually, one month for a given extract).  Therefore, the figures from the
"DATA",727.1,16,1,15,0)
G&L Treating Specialty Report must be tallied (either manually or with
"DATA",727.1,16,1,16,0)
the help of a spreadsheet application) over the same date range in order
"DATA",727.1,16,1,17,0)
to compare totals with the TRT extract audit report.
"DATA",727.1,16,1,18,0)
   
"DATA",727.1,16,1,19,0)
The user should note, that the G&L Treating Specialty Report is based
"DATA",727.1,16,1,20,0)
on facility treating specialties which are entries in the FACILITY TREATING
"DATA",727.1,16,1,21,0)
SPECIALTY file (#45.7).  The TRT extract, however, submits data to the 
"DATA",727.1,16,1,22,0)
Decision Support System (DSS) based on nationally recognized specialties
"DATA",727.1,16,1,23,0)
which are entries in the SPECIALTY file (#42.4).  
"DATA",727.1,16,1,24,0)
   
"DATA",727.1,16,1,25,0)
Therefore, the Treating Specialty Change (TRT) Extract Audit Report
"DATA",727.1,16,1,26,0)
displays both identifiers. The national specialty name (along with its
"DATA",727.1,16,1,27,0)
DSS code in parentheses) and the total number of losses to that specialty
"DATA",727.1,16,1,28,0)
are printed first.  There may be one or more Facility Treating Specialties
"DATA",727.1,16,1,29,0)
associated with a given national specialty.  The names of the associated
"DATA",727.1,16,1,30,0)
facility treating specialties are printed immediately underneath the
"DATA",727.1,16,1,31,0)
specialty name, and slightly indented.  (Only active facility treating
"DATA",727.1,16,1,32,0)
specialties are displayed.)
"DATA",727.1,16,1,33,0)
  
"DATA",727.1,16,1,34,0)
If there is more than one facility treating specialty associated with
"DATA",727.1,16,1,35,0)
the national specialty, then you must add together the losses shown on
"DATA",727.1,16,1,36,0)
the G&L Treating Specialty Report for each of those facility treating
"DATA",727.1,16,1,37,0)
specialties to arrive at the total number of losses shown on the TRT
"DATA",727.1,16,1,38,0)
Extract Audit Report for the specialty.
"DATA",727.1,16,1,39,0)
  
"DATA",727.1,16,1,40,0)
Both reports also show total losses by Service, so verification may be
"DATA",727.1,16,1,41,0)
accomplished with a lower degree of specificity.
"DATA",727.1,16,1,42,0)
  
"DATA",727.1,16,1,43,0)
Important note:
"DATA",727.1,16,1,44,0)
  
"DATA",727.1,16,1,45,0)
The total losses for all specialties seen on the TRT Extract Audit
"DATA",727.1,16,1,46,0)
Report ("Grand Total for all Services") may not reflect the total
"DATA",727.1,16,1,47,0)
number of records contained in the TRT extract.  This is because the
"DATA",727.1,16,1,48,0)
TRT extract includes provider-only changes, as well as true treating 
"DATA",727.1,16,1,49,0)
specialty changes.  In order to compare the TRT Extract Audit Report
"DATA",727.1,16,1,50,0)
to the G&L Treating Specialty Report, these provider-only changes
"DATA",727.1,16,1,51,0)
are being screened out of the total counts on the extract audit
"DATA",727.1,16,1,52,0)
report to the extent possible.  If your facility logs many of these
"DATA",727.1,16,1,53,0)
provider-only changes for its inpatients, you will see a significant
"DATA",727.1,16,1,54,0)
difference in the "Grand Total for all Services" and the total number
"DATA",727.1,16,1,55,0)
of records in the TRT extract.
"DATA",727.1,16,1,56,0)
  
"DATA",727.1,16,1,57,0)
The logic being used to screen out provider-only changes will
"DATA",727.1,16,1,58,0)
not be 100% effective if your facility has more than one active
"DATA",727.1,16,1,59,0)
facility treating specialty associated with a national specialty.
"DATA",727.1,16,1,60,0)
When this is the case, it is not possible to distinguish true
"DATA",727.1,16,1,61,0)
treating specialty changes from provider-only changes with the data
"DATA",727.1,16,1,62,0)
currently available in the extract record.  This will cause the
"DATA",727.1,16,1,63,0)
total losses for the specialty on the TRT Extract Audit Report
"DATA",727.1,16,1,64,0)
to be inflated.
"DATA",727.1,16,1,65,0)
  
"DATA",727.1,16,"ROU")
ECXTRT
"DATA",727.1,17,0)
PAI^727.823^M^^^^PAF^PAS^PAI^20^^0
"DATA",727.1,17,1,0)
^^33^33^2971223^^^^
"DATA",727.1,17,1,1,0)
   
"DATA",727.1,17,1,2,0)
Verify against: Record Status Report
"DATA",727.1,17,1,3,0)
Menu Option:    Record Status Report [DG RUG STATUS]
"DATA",727.1,17,1,4,0)
  
"DATA",727.1,17,1,5,0)
At the present time, there is no feasible method by which to truly
"DATA",727.1,17,1,6,0)
verify data extracted for the DSS PAI Extract.  The PAF (PAS) Extract
"DATA",727.1,17,1,7,0)
Audit Report simply states the total number of patient assessment
"DATA",727.1,17,1,8,0)
records extracted from the PAF file (#45.9) for the date range.  That
"DATA",727.1,17,1,9,0)
total number could be verified by performing a simple VA FileMan
"DATA",727.1,17,1,10,0)
print from file #45.9.  The print template can be set up to display
"DATA",727.1,17,1,11,0)
simply the total number of records within a date range, rather than
"DATA",727.1,17,1,12,0)
showing data within each record.  Sort the records in the PAF file by
"DATA",727.1,17,1,13,0)
the ASSESSMENT DATE field (#2) and specify a start date and end date
"DATA",727.1,17,1,14,0)
which match those used in the PAF (PAS) Extract Audit Report.
"DATA",727.1,17,1,15,0)
  
"DATA",727.1,17,1,16,0)
The Record Status Report, available through VistA's PIMS application,
"DATA",727.1,17,1,17,0)
could also be used for this purpose.  It should be noted, however, that
"DATA",727.1,17,1,18,0)
use of the Record Status Report is not very efficient.  Much more
"DATA",727.1,17,1,19,0)
information is displayed on this report than is needed to verify the
"DATA",727.1,17,1,20,0)
simple total shown on the PAF (PAS) Extract Audit Report.  But if the
"DATA",727.1,17,1,21,0)
Record Status Report is used, please be sure that the following prompts
"DATA",727.1,17,1,22,0)
are answered as indicated below when setting up the report request:
"DATA",727.1,17,1,23,0)
  
"DATA",727.1,17,1,24,0)
   (Record Status Report [DG RUG STATUS])
"DATA",727.1,17,1,25,0)
  
"DATA",727.1,17,1,26,0)
   Select division: ALL// <cr>
"DATA",727.1,17,1,27,0)
   (C)NH, (R)egular PAIs, (B)oth: B// REGULAR PAIS
"DATA",727.1,17,1,28,0)
   Select ward: ALL// <cr>
"DATA",727.1,17,1,29,0)
   Sort by (A)ssessment or (T)ransfer/Admission Date: T// ASSESSMENT
"DATA",727.1,17,1,30,0)
  
"DATA",727.1,17,1,31,0)
Counting the number of records displayed on this report should provide
"DATA",727.1,17,1,32,0)
the same total as shown on the PAF (PAS) Extract Audit Report for the
"DATA",727.1,17,1,33,0)
same date range.
"DATA",727.1,17,"ROU")
ECXPAI
"DATA",727.1,18,0)
LAB RESULTS^727.824^M^^^^Lab Results^LAR^LAB^21^^0
"DATA",727.1,18,"ROU")
ECXLABR
"DATA",727.1,19,0)
QUASAR^727.825^M^1^^^QUASAR^ECQ^QSR^22^^0
"DATA",727.1,19,1,0)
^727.11^49^49^3001018^^^^
"DATA",727.1,19,1,1,0)
 
"DATA",727.1,19,1,2,0)
Verify against: Audiology & Speech Pathology Procedure Statistics for
"DATA",727.1,19,1,3,0)
                   All Clinicians
"DATA",727.1,19,1,4,0)
                Audiology & Speech Pathology Procedure Statistics for
"DATA",727.1,19,1,5,0)
                   All Other Providers
"DATA",727.1,19,1,6,0)
Menu Option:    Statistics by Procedure [ACKQAS PROC STATS]
"DATA",727.1,19,1,7,0)
  
"DATA",727.1,19,1,8,0)
The Audiology & Speech Pathology Procedure Statistics report, available
"DATA",727.1,19,1,9,0)
in the VistA QUASAR application, provides a convenient method of verifying
"DATA",727.1,19,1,10,0)
ECQ extract data.
"DATA",727.1,19,1,11,0)
   
"DATA",727.1,19,1,12,0)
This QUASAR report must be generated twice.  Generate one report for 'ALL
"DATA",727.1,19,1,13,0)
CLINICIANS', and another for 'ALL OTHER PROVIDERS'.  Be sure that each
"DATA",727.1,19,1,14,0)
report is generated for BOTH Audiology and Speech, and specify a date
"DATA",727.1,19,1,15,0)
range that is the same as the date range specified for the QUASAR (ECQ)
"DATA",727.1,19,1,16,0)
Extract Audit Report.
"DATA",727.1,19,1,17,0)
  
"DATA",727.1,19,1,18,0)
The Audiology & Speech Pathology Procedure Statistics report displays 
"DATA",727.1,19,1,19,0)
procedure data both in detail and summary form.  The summary appears on 
"DATA",727.1,19,1,20,0)
the last page(s) of the printout; the page header contains the word 
"DATA",727.1,19,1,21,0)
"Summary".
"DATA",727.1,19,1,22,0)
  
"DATA",727.1,19,1,23,0)
Procedure data on both the Audiology & Speech Pathology Procedure
"DATA",727.1,19,1,24,0)
Statistics report and the QUASAR (ECQ) Extract Audit Report is grouped
"DATA",727.1,19,1,25,0)
by functional area; i.e., either Audiology or Speech.
"DATA",727.1,19,1,26,0)
  
"DATA",727.1,19,1,27,0)
Verify any procedure volume figure appearing in the QUASAR (ECQ)
"DATA",727.1,19,1,28,0)
Extract Audit Report bycomparing it to the sum of:
"DATA",727.1,19,1,29,0)
  
"DATA",727.1,19,1,30,0)
     the count figure for that procedure on 
"DATA",727.1,19,1,31,0)
     the summary page of the All Clinicians report
"DATA",727.1,19,1,32,0)
  
"DATA",727.1,19,1,33,0)
     plus--
"DATA",727.1,19,1,34,0)
  
"DATA",727.1,19,1,35,0)
     the count figure for the same procedure on the
"DATA",727.1,19,1,36,0)
     summary page of the All Other Providers report.
"DATA",727.1,19,1,37,0)
  
"DATA",727.1,19,1,38,0)
Or verification can be accomplished to a lower degree of specificity
"DATA",727.1,19,1,39,0)
by comparing the total number of all types of procedures for a DSS Unit
"DATA",727.1,19,1,40,0)
(i.e., either Audiology or Speech) with the sum of:
"DATA",727.1,19,1,41,0)
  
"DATA",727.1,19,1,42,0)
     the total figure (for either Audiology or Speech) on
"DATA",727.1,19,1,43,0)
     the summary page of the All Clinicians report
"DATA",727.1,19,1,44,0)
  
"DATA",727.1,19,1,45,0)
     plus--
"DATA",727.1,19,1,46,0)
  
"DATA",727.1,19,1,47,0)
     the total figure (for either Audiology or Speech) on
"DATA",727.1,19,1,48,0)
     summary page of the All Other Providers report.
"DATA",727.1,19,1,49,0)
  
"DATA",727.1,19,"ROU")
ECXQSR
"DATA",727.1,20,0)
PROSTHETICS^727.826^M^^^^Prosthetics^PRO^PRO^23^^0
"DATA",727.1,20,1,0)
^^182^182^2990504
"DATA",727.1,20,1,1,0)
 The following PROSTHETICS package options may be used to verify the PRO
"DATA",727.1,20,1,2,0)
 extract audit report.
"DATA",727.1,20,1,3,0)
  
"DATA",727.1,20,1,4,0)
 RMPR NPPD PRT          Print NPPD Worksheets
"DATA",727.1,20,1,5,0)
 RMPR NPPD PRL L        Print NPPD Single Line Detail
"DATA",727.1,20,1,6,0)
   
"DATA",727.1,20,1,7,0)
 Please note, however, that these Prosthetics package options organize
"DATA",727.1,20,1,8,0)
 and display data by the ENTRY DATE field (#.01) of the Prosthetics 
"DATA",727.1,20,1,9,0)
 items in its RECORD OF PROS APPLIANCE/REPAIR file (#660).  The PRO
"DATA",727.1,20,1,10,0)
 extract record does not use the ENTRY DATE.  Instead, it uses the
"DATA",727.1,20,1,11,0)
 DELIVERY DATE (field #10) of the Prosthetic item.  Therefore, the PRO
"DATA",727.1,20,1,12,0)
 extract audit report organizes and displays data by DELIVERY DATE.
"DATA",727.1,20,1,13,0)
  
"DATA",727.1,20,1,14,0)
 Because of this date difference, the user may see many discrepancies 
"DATA",727.1,20,1,15,0)
 between the PRO extract audit report and the PROSTHETICS package NPPD
"DATA",727.1,20,1,16,0)
 reports.  This will be particularly true for large, high cost items 
"DATA",727.1,20,1,17,0)
 which are ordered far in advance of actual delivery date.  The DSS 
"DATA",727.1,20,1,18,0)
 program office has requested that PROSTHETICS provide an NPPD report 
"DATA",727.1,20,1,19,0)
 which is sorted by DELIVERY DATE rather than ENTRY DATE to facilitate 
"DATA",727.1,20,1,20,0)
 this validation process.
"DATA",727.1,20,1,21,0)
  
"DATA",727.1,20,1,22,0)
 A PRO extract audit report can be printed in SUMMARY or in DETAIL.
"DATA",727.1,20,1,23,0)
 The SUMMARY report displays data by NPPD line item, while the DETAIL
"DATA",727.1,20,1,24,0)
 report shows a breakout of data contained in a specific line item. 
"DATA",727.1,20,1,25,0)
 The following shows each NPPD category and the line items it contains:
"DATA",727.1,20,1,26,0)
   
"DATA",727.1,20,1,27,0)
 1.   WHEELCHAIRS AND ACCESSORIES
"DATA",727.1,20,1,28,0)
  
"DATA",727.1,20,1,29,0)
      100 A   MOTORIZED
"DATA",727.1,20,1,30,0)
      100 A1  SCOOTERS
"DATA",727.1,20,1,31,0)
      100 B   MANUAL CUSTOM
"DATA",727.1,20,1,32,0)
      100 C   MANUAL A/O
"DATA",727.1,20,1,33,0)
      100 D   ACCESSORIES
"DATA",727.1,20,1,34,0)
      100 E   CUSHION FOAM
"DATA",727.1,20,1,35,0)
      100 F   CUSHION SPEC
"DATA",727.1,20,1,36,0)
   
"DATA",727.1,20,1,37,0)
 2.   ARTIFICAL LEGS
"DATA",727.1,20,1,38,0)
  
"DATA",727.1,20,1,39,0)
      200 A   LEG IPOP
"DATA",727.1,20,1,40,0)
      200 B   LEG TEM
"DATA",727.1,20,1,41,0)
      200 C   LEG PART FOOT
"DATA",727.1,20,1,42,0)
      200 E   LEG SYMES
"DATA",727.1,20,1,43,0)
      200 F   LEG B/K
"DATA",727.1,20,1,44,0)
      200 G   LEG A/O
"DATA",727.1,20,1,45,0)
      200 H   LEG A/K
"DATA",727.1,20,1,46,0)
  
"DATA",727.1,20,1,47,0)
 3.   ARTIFICAL ARMS AND TERMINAL DEVICES
"DATA",727.1,20,1,48,0)
  
"DATA",727.1,20,1,49,0)
      300 A   ARM B/E
"DATA",727.1,20,1,50,0)
      300 B   ARM, A/E
"DATA",727.1,20,1,51,0)
      300 C   COSMETIC GLOVES
"DATA",727.1,20,1,52,0)
      300 D   ARM, A/O
"DATA",727.1,20,1,53,0)
      300 E   TERMINAL DEVICES
"DATA",727.1,20,1,54,0)
      300 F   EXT. POWERED,ARM
"DATA",727.1,20,1,55,0)
  
"DATA",727.1,20,1,56,0)
 4.   BRACES AND ORTHOTICS
"DATA",727.1,20,1,57,0)
  
"DATA",727.1,20,1,58,0)
      400 A   BRACE ANKLE
"DATA",727.1,20,1,59,0)
      400 B   BRACE LEG AK
"DATA",727.1,20,1,60,0)
      400 C   BRACE, SPINAL
"DATA",727.1,20,1,61,0)
      400 D   BRACE AL/OTH
"DATA",727.1,20,1,62,0)
      400 E   ELAS HOSE, EA
"DATA",727.1,20,1,63,0)
      400 F   BRACES, KNEE
"DATA",727.1,20,1,64,0)
      400 G   CORSET/BELT
"DATA",727.1,20,1,65,0)
  
"DATA",727.1,20,1,66,0)
 5.   SHOES/ORTHOTICS
"DATA",727.1,20,1,67,0)
  
"DATA",727.1,20,1,68,0)
      500 A   ARCH SUPT, EA
"DATA",727.1,20,1,69,0)
      500 B   SHOE INLAY, EA
"DATA",727.1,20,1,70,0)
      500 C   SHOE MOLDED, EA
"DATA",727.1,20,1,71,0)
      500 D   SHOE ORTH OTH
"DATA",727.1,20,1,72,0)
      500 E   INSERTS, SHOE
"DATA",727.1,20,1,73,0)
      500 F   SHOES A/O, EA
"DATA",727.1,20,1,74,0)
  
"DATA",727.1,20,1,75,0)
 6.   NEUROSENSORY AIDS
"DATA",727.1,20,1,76,0)
   
"DATA",727.1,20,1,77,0)
      600 1   EYEGLASSES PR
"DATA",727.1,20,1,78,0)
      600 A   SP OVER 2,500
"DATA",727.1,20,1,79,0)
      600 B   HEARING AIDS
"DATA",727.1,20,1,80,0)
      600 C   AID FOR BLIND
"DATA",727.1,20,1,81,0)
      600 D   CONT LENS, EA.
"DATA",727.1,20,1,82,0)
      600 E   EAR INSERT
"DATA",727.1,20,1,83,0)
  
"DATA",727.1,20,1,84,0)
 7.   RESTORATIONS
"DATA",727.1,20,1,85,0)
  
"DATA",727.1,20,1,86,0)
      700 A   EYE
"DATA",727.1,20,1,87,0)
      700 B   FACIAL
"DATA",727.1,20,1,88,0)
      700 C   BODY, OTHER
"DATA",727.1,20,1,89,0)
  
"DATA",727.1,20,1,90,0)
 8.   OXYGEN AND RESPIRATIORY
"DATA",727.1,20,1,91,0)
  
"DATA",727.1,20,1,92,0)
      800 A   OXYGEN EQP
"DATA",727.1,20,1,93,0)
      800 B   OXYGEN CONCEN
"DATA",727.1,20,1,94,0)
      800 C   OXYGEN GAS
"DATA",727.1,20,1,95,0)
      800 D   OXYGEN, SUPPLIES
"DATA",727.1,20,1,96,0)
      800 E   OXYGEN LIQUID
"DATA",727.1,20,1,97,0)
      800 F   VENTILATOR, A/O
"DATA",727.1,20,1,98,0)
  
"DATA",727.1,20,1,99,0)
 9.   MEDICAL EQUIPMENT, MISC., ALL OTHER NEW
"DATA",727.1,20,1,100,0)
  
"DATA",727.1,20,1,101,0)
      900 A   WALKING AIDS
"DATA",727.1,20,1,102,0)
      900 B   INVALID LIFT
"DATA",727.1,20,1,103,0)
      900 C   BED HOSP STD
"DATA",727.1,20,1,104,0)
      900 D   BED HOSP SPEC
"DATA",727.1,20,1,105,0)
      900 E   MATTRESS STAN
"DATA",727.1,20,1,106,0)
      900 F   MATTRESS SPEC
"DATA",727.1,20,1,107,0)
      900 G   BED, ACCESSORIES
"DATA",727.1,20,1,108,0)
      900 H   ENVIRON CONTR
"DATA",727.1,20,1,109,0)
      900 I   SPEC HOME EQP (SAFETY)
"DATA",727.1,20,1,110,0)
      900 J   TENS UNIT
"DATA",727.1,20,1,111,0)
      900 K   MED EQP AL/OTH
"DATA",727.1,20,1,112,0)
      900 L   EQP RENTAL
"DATA",727.1,20,1,113,0)
      910 A   MED SUP AL/OTH
"DATA",727.1,20,1,114,0)
      920 A   HOME DIAL EQP
"DATA",727.1,20,1,115,0)
      920 B   HOME DIAL SUP
"DATA",727.1,20,1,116,0)
      930 A   MOD VANS
"DATA",727.1,20,1,117,0)
      930 B   ADAPT EQP AL/OTH
"DATA",727.1,20,1,118,0)
      999 A   AL/OTH ITEMS
"DATA",727.1,20,1,119,0)
      999 X   HCPCS NOT GRP
"DATA",727.1,20,1,120,0)
      999 Z   NO HCPCS
"DATA",727.1,20,1,121,0)
  
"DATA",727.1,20,1,122,0)
 10.  REPAIR
"DATA",727.1,20,1,123,0)
  
"DATA",727.1,20,1,124,0)
      R10     WHEELCHAIR
"DATA",727.1,20,1,125,0)
      R20 A   LEG A/K
"DATA",727.1,20,1,126,0)
      R20 B   LEG B/K, PTB
"DATA",727.1,20,1,127,0)
      R20 C   LEG B/K, STD
"DATA",727.1,20,1,128,0)
      R20 D   LEG ALL OTHER
"DATA",727.1,20,1,129,0)
      R30     ART ARM,TOTAL
"DATA",727.1,20,1,130,0)
      R40     BRACE TOTAL
"DATA",727.1,20,1,131,0)
      R50 A   ORTH SHOE ALL
"DATA",727.1,20,1,132,0)
      R50 B   SHOE MOD
"DATA",727.1,20,1,133,0)
      R50 C   A/O ITEM SERV
"DATA",727.1,20,1,134,0)
      R60 A   AID FOR BLIND
"DATA",727.1,20,1,135,0)
      R60 B   EYEGLASS RPR
"DATA",727.1,20,1,136,0)
      R60 C   HEARING AID
"DATA",727.1,20,1,137,0)
      R70     HOME DIAL EQU
"DATA",727.1,20,1,138,0)
      R80 A   INVALID LIFTS
"DATA",727.1,20,1,139,0)
      R80 B   REPAIR TO ECU
"DATA",727.1,20,1,140,0)
      R80 C   MED EQUIP A/O
"DATA",727.1,20,1,141,0)
      R90     ALL OTHER
"DATA",727.1,20,1,142,0)
      R90 A   SHIPPING
"DATA",727.1,20,1,143,0)
      R99 X   HCPCS NOT GRP
"DATA",727.1,20,1,144,0)
      R99 Z   NO HCPCS
"DATA",727.1,20,1,145,0)
   
"DATA",727.1,20,1,146,0)
 Compare a SUMMARY report to the Print NPPD Worksheets report of the
"DATA",727.1,20,1,147,0)
 PROSTHETICS package.  Compare a DETAIL report to the Print NPPD Single
"DATA",727.1,20,1,148,0)
 Line Detail report of the PROSTHETICS package.  In spite of the date
"DATA",727.1,20,1,149,0)
 problem indicated above, the user should usually specify the same date
"DATA",727.1,20,1,150,0)
 range for both the PRO extract audit report and its related NPPD 
"DATA",727.1,20,1,151,0)
 report.  This date range will generally be a one month period which
"DATA",727.1,20,1,152,0)
 covers the first day through the last day of a given month.
"DATA",727.1,20,1,153,0)
   
"DATA",727.1,20,1,154,0)
 However, it may be useful under certain conditions to vary the date 
"DATA",727.1,20,1,155,0)
 range when comparing DETAIL from the PRO extract audit report with an
"DATA",727.1,20,1,156,0)
 NPPD single line report.  For example, if it is known that for some
"DATA",727.1,20,1,157,0)
 complex Prosthetics items (e.g., artificial limbs) the order date 
"DATA",727.1,20,1,158,0)
 normally precedes delivery date by about 90 days, and if you wish to
"DATA",727.1,20,1,159,0)
 verify January PRO extract data, then --
"DATA",727.1,20,1,160,0)
  
"DATA",727.1,20,1,161,0)
 (a) generate a DETAIL display for the appropriate NPPD line item
"DATA",727.1,20,1,162,0)
     category (e.g., 200 A, LEG IPOP) from a PRO extract audit report 
"DATA",727.1,20,1,163,0)
     which covers a date range of January 1 through January 31;
"DATA",727.1,20,1,164,0)
  
"DATA",727.1,20,1,165,0)
 (b) generate an NPPD single line detail report for that same line
"DATA",727.1,20,1,166,0)
     item for a date range of October 1 through October 31.
"DATA",727.1,20,1,167,0)
   
"DATA",727.1,20,1,168,0)
 The NPPD single line report for October may coincide quite well
"DATA",727.1,20,1,169,0)
 with the PRO extract audit report DETAIL for January. 
"DATA",727.1,20,1,170,0)
  
"DATA",727.1,20,1,171,0)
 A further note for sites that are multi-divisional for PROSTHETICS.
"DATA",727.1,20,1,172,0)
 ===================================================================
"DATA",727.1,20,1,173,0)
  
"DATA",727.1,20,1,174,0)
    A multi-divisional Prosthetics site can print NPPD data reports
"DATA",727.1,20,1,175,0)
    for only ONE division at a time.  The PRO extract audit report
"DATA",727.1,20,1,176,0)
    may be printed for a single division or for an entire facility.
"DATA",727.1,20,1,177,0)
  
"DATA",727.1,20,1,178,0)
    To compare the PRO extract audit report with the PROSTHETICS 
"DATA",727.1,20,1,179,0)
    package NPPD report, the user must select the same division for
"DATA",727.1,20,1,180,0)
    both reports.  Or the user may generate a PRO extract audit
"DATA",727.1,20,1,181,0)
    report for the entire facility and compare its data to the sum
"DATA",727.1,20,1,182,0)
    of the data from each of the single division NPPD reports.
"DATA",727.1,20,"ROU")
ECXPRO
"DATA",727.1,21,0)
NUTRITION^727.832^M^^^^Nutrition^NUT^NUT^28^200^0
"DATA",727.1,21,"ROU")
ECXNUT
"DATA",727.1,23,0)
CLINIC I^727.827^M^30^^^Clinic^CLI^SCX^25^200^0
"DATA",727.1,23,"ROU")
ECXSCXN
"DATA",727.1,24,0)
BCMA EXTRACT^727.828^M^30^30^^Bar Code Medical Adm^BCM^BCM^26^^1
"DATA",727.1,24,"ROU")
ECXBCM
"FIA",727.1)
EXTRACT DEFINITIONS
"FIA",727.1,0)
^ECX(727.1,
"FIA",727.1,0,0)
727.1
"FIA",727.1,0,1)
y^y^f^^n^^y^o^n
"FIA",727.1,0,10)

"FIA",727.1,0,11)

"FIA",727.1,0,"RLRO")

"FIA",727.1,0,"VR")
3.0^ECX
"FIA",727.1,727.1)
0
"FIA",727.1,727.11)
0
"FIA",727.802)
ADMISSION EXTRACT
"FIA",727.802,0)
^ECX(727.802,
"FIA",727.802,0,0)
727.802
"FIA",727.802,0,1)
y^y^p^^^^n^^n
"FIA",727.802,0,10)

"FIA",727.802,0,11)

"FIA",727.802,0,"RLRO")

"FIA",727.802,0,"VR")
3.0^ECX
"FIA",727.802,727.802)
1
"FIA",727.802,727.802,39)

"FIA",727.802,727.802,40)

"FIA",727.802,727.802,41)

"FIA",727.802,727.802,51)

"FIA",727.802,727.802,82)

"FIA",727.802,727.802,83)

"FIA",727.802,727.802,84)

"FIA",727.802,727.802,85)

"FIA",727.802,727.802,86)

"FIA",727.802,727.802,87)

"FIA",727.808)
PHYSICAL MOVEMENT EXTRACT
"FIA",727.808,0)
^ECX(727.808,
"FIA",727.808,0,0)
727.808
"FIA",727.808,0,1)
y^y^p^^^^n^^n
"FIA",727.808,0,10)

"FIA",727.808,0,11)

"FIA",727.808,0,"RLRO")

"FIA",727.808,0,"VR")
3.0^ECX
"FIA",727.808,727.808)
1
"FIA",727.808,727.808,35)

"FIA",727.808,727.808,36)

"FIA",727.809)
UNIT DOSE LOCAL EXTRACT
"FIA",727.809,0)
^ECX(727.809,
"FIA",727.809,0,0)
727.809
"FIA",727.809,0,1)
y^y^p^^^^n^^n
"FIA",727.809,0,10)

"FIA",727.809,0,11)

"FIA",727.809,0,"RLRO")

"FIA",727.809,0,"VR")
3.0^ECX
"FIA",727.809,727.809)
1
"FIA",727.809,727.809,24)

"FIA",727.809,727.809,52)

"FIA",727.809,727.809,55)

"FIA",727.809,727.809,77)

"FIA",727.809,727.809,78)

"FIA",727.809,727.809,79)

"FIA",727.809,727.809,80)

"FIA",727.809,727.809,81)

"FIA",727.81)
PRESCRIPTION EXTRACT
"FIA",727.81,0)
^ECX(727.81,
"FIA",727.81,0,0)
727.81
"FIA",727.81,0,1)
y^y^p^^^^n^^n
"FIA",727.81,0,10)

"FIA",727.81,0,11)

"FIA",727.81,0,"RLRO")

"FIA",727.81,0,"VR")
3.0^ECX
"FIA",727.81,727.81)
1
"FIA",727.81,727.81,38)

"FIA",727.81,727.81,39)

"FIA",727.81,727.81,53)

"FIA",727.81,727.81,92)

"FIA",727.81,727.81,93)

"FIA",727.81,727.81,94)

"FIA",727.81,727.81,95)

"FIA",727.81,727.81,96)

"FIA",727.811)
SURGERY EXTRACT
"FIA",727.811,0)
^ECX(727.811,
"FIA",727.811,0,0)
727.811
"FIA",727.811,0,1)
y^y^p^^^^n^^n
"FIA",727.811,0,10)

"FIA",727.811,0,11)

"FIA",727.811,0,"RLRO")

"FIA",727.811,0,"VR")
3.0^ECX
"FIA",727.811,727.811)
1
"FIA",727.811,727.811,39)

"FIA",727.811,727.811,40)

"FIA",727.811,727.811,41)

"FIA",727.811,727.811,42)

"FIA",727.811,727.811,46)

"FIA",727.811,727.811,80)

"FIA",727.811,727.811,81)

"FIA",727.811,727.811,82)

"FIA",727.811,727.811,83)

"FIA",727.811,727.811,84)

"FIA",727.811,727.811,85)

"FIA",727.811,727.811,86)

"FIA",727.811,727.811,87)

"FIA",727.811,727.811,88)

"FIA",727.811,727.811,89)

"FIA",727.811,727.811,90)

"FIA",727.811,727.811,91)

"FIA",727.811,727.811,92)

"FIA",727.811,727.811,93)

"FIA",727.811,727.811,94)

"FIA",727.811,727.811,95)

"FIA",727.811,727.811,96)

"FIA",727.812)
MENTAL HEALTH EXTRACT
"FIA",727.812,0)
^ECX(727.812,
"FIA",727.812,0,0)
727.812
"FIA",727.812,0,1)
y^y^p^^^^n^^n
"FIA",727.812,0,10)

"FIA",727.812,0,11)

"FIA",727.812,0,"RLRO")

"FIA",727.812,0,"VR")
3.0^ECX
"FIA",727.812,727.812)
1
"FIA",727.812,727.812,15)

"FIA",727.812,727.812,18)

"FIA",727.812,727.812,30)

"FIA",727.812,727.812,62)

"FIA",727.812,727.812,63)

"FIA",727.812,727.812,64)

"FIA",727.812,727.812,65)

"FIA",727.812,727.812,66)

"FIA",727.813)
LABORATORY EXTRACT
"FIA",727.813,0)
^ECX(727.813,
"FIA",727.813,0,0)
727.813
"FIA",727.813,0,1)
y^y^p^^^^n^^n
"FIA",727.813,0,10)

"FIA",727.813,0,11)

"FIA",727.813,0,"RLRO")

"FIA",727.813,0,"VR")
3.0^ECX
"FIA",727.813,727.813)
1
"FIA",727.813,727.813,24)

"FIA",727.813,727.813,25)

"FIA",727.813,727.813,29)

"FIA",727.813,727.813,39)

"FIA",727.813,727.813,40)

"FIA",727.813,727.813,41)

"FIA",727.814)
RADIOLOGY EXTRACT
"FIA",727.814,0)
^ECX(727.814,
"FIA",727.814,0,0)
727.814
"FIA",727.814,0,1)
y^y^p^^^^n^^n
"FIA",727.814,0,10)

"FIA",727.814,0,11)

"FIA",727.814,0,"RLRO")

"FIA",727.814,0,"VR")
3.0^ECX
"FIA",727.814,727.814)
1
"FIA",727.814,727.814,25)

"FIA",727.814,727.814,26)

"FIA",727.814,727.814,30)

"FIA",727.814,727.814,44)

"FIA",727.814,727.814,45)

"FIA",727.814,727.814,46)

"FIA",727.814,727.814,47)

"FIA",727.815)
EVENT CAPTURE LOCAL EXTRACT
"FIA",727.815,0)
^ECX(727.815,
"FIA",727.815,0,0)
727.815
"FIA",727.815,0,1)
y^y^p^^^^n^^n
"FIA",727.815,0,10)

"FIA",727.815,0,11)

"FIA",727.815,0,"RLRO")

"FIA",727.815,0,"VR")
3.0^ECX
"FIA",727.815,727.815)
1
"FIA",727.815,727.815,44)

"FIA",727.815,727.815,45)

"FIA",727.815,727.815,46)

"FIA",727.815,727.815,48)

"FIA",727.815,727.815,51)

"FIA",727.815,727.815,90)

"FIA",727.815,727.815,91)

"FIA",727.815,727.815,92)

"FIA",727.815,727.815,93)

"FIA",727.815,727.815,94)

"FIA",727.815,727.815,95)

"FIA",727.815,727.815,96)

"FIA",727.817)
TREATING SPECIALTY CHANGE EXTRACT
"FIA",727.817,0)
^ECX(727.817,
"FIA",727.817,0,0)
727.817
"FIA",727.817,0,1)
y^y^p^^^^n^^n
"FIA",727.817,0,10)

"FIA",727.817,0,11)

"FIA",727.817,0,"RLRO")

"FIA",727.817,0,"VR")
3.0^ECX
"FIA",727.817,727.817)
1
"FIA",727.817,727.817,26)

"FIA",727.817,727.817,27)

"FIA",727.817,727.817,28)

"FIA",727.817,727.817,29)

"FIA",727.817,727.817,40)

"FIA",727.817,727.817,41)

"FIA",727.817,727.817,42)

"FIA",727.817,727.817,43)

"FIA",727.819)
IV DETAIL EXTRACT
"FIA",727.819,0)
^ECX(727.819,
"FIA",727.819,0,0)
727.819
"FIA",727.819,0,1)
y^y^p^^^^n^^n
"FIA",727.819,0,10)

"FIA",727.819,0,11)

"FIA",727.819,0,"RLRO")

"FIA",727.819,0,"VR")
3.0^ECX
"FIA",727.819,727.819)
1
"FIA",727.819,727.819,29)

"FIA",727.819,727.819,33)

"FIA",727.819,727.819,63)

"FIA",727.819,727.819,82)

"FIA",727.819,727.819,83)

"FIA",727.819,727.819,84)

"FIA",727.819,727.819,85)

"FIA",727.819,727.819,86)

"FIA",727.824)
LAB RESULTS EXTRACT
"FIA",727.824,0)
^ECX(727.824,
"FIA",727.824,0,0)
727.824
"FIA",727.824,0,1)
y^y^p^^^^n^^n
"FIA",727.824,0,10)

"FIA",727.824,0,11)

"FIA",727.824,0,"RLRO")

"FIA",727.824,0,"VR")
3.0^ECX
"FIA",727.824,727.824)
1
"FIA",727.824,727.824,30)

"FIA",727.825)
QUASAR EXTRACT
"FIA",727.825,0)
^ECX(727.825,
"FIA",727.825,0,0)
727.825
"FIA",727.825,0,1)
y^y^p^^^^n^^n
"FIA",727.825,0,10)

"FIA",727.825,0,11)

"FIA",727.825,0,"RLRO")

"FIA",727.825,0,"VR")
3.0^ECX
"FIA",727.825,727.825)
1
"FIA",727.825,727.825,44)

"FIA",727.825,727.825,45)

"FIA",727.825,727.825,46)

"FIA",727.825,727.825,48)

"FIA",727.825,727.825,51)

"FIA",727.825,727.825,90)

"FIA",727.825,727.825,91)

"FIA",727.825,727.825,92)

"FIA",727.825,727.825,93)

"FIA",727.825,727.825,94)

"FIA",727.825,727.825,95)

"FIA",727.825,727.825,96)

"FIA",727.826)
PROSTHETICS EXTRACT
"FIA",727.826,0)
^ECX(727.826,
"FIA",727.826,0,0)
727.826
"FIA",727.826,0,1)
y^y^p^^^^n^^n
"FIA",727.826,0,10)

"FIA",727.826,0,11)

"FIA",727.826,0,"RLRO")

"FIA",727.826,0,"VR")
3.0^ECX
"FIA",727.826,727.826)
1
"FIA",727.826,727.826,37)

"FIA",727.826,727.826,52)

"FIA",727.826,727.826,81)

"FIA",727.826,727.826,82)

"FIA",727.826,727.826,83)

"FIA",727.826,727.826,84)

"FIA",727.826,727.826,85)

"FIA",727.826,727.826,86)

"FIA",727.827)
CLINIC EXTRACT
"FIA",727.827,0)
^ECX(727.827,
"FIA",727.827,0,0)
727.827
"FIA",727.827,0,1)
y^y^p^^^^n^^n
"FIA",727.827,0,10)

"FIA",727.827,0,11)

"FIA",727.827,0,"RLRO")

"FIA",727.827,0,"VR")
3.0^ECX
"FIA",727.827,727.827)
1
"FIA",727.827,727.827,46)

"FIA",727.827,727.827,47)

"FIA",727.827,727.827,58)

"FIA",727.827,727.827,88)

"FIA",727.827,727.827,89)

"FIA",727.827,727.827,90)

"FIA",727.827,727.827,91)

"FIA",727.827,727.827,92)

"FIA",727.829)
BLOOD BANK EXTRACT
"FIA",727.829,0)
^ECX(727.829,
"FIA",727.829,0,0)
727.829
"FIA",727.829,0,1)
y^y^p^^^^n^^n
"FIA",727.829,0,10)

"FIA",727.829,0,11)

"FIA",727.829,0,"RLRO")

"FIA",727.829,0,"VR")
3.0^ECX
"FIA",727.829,727.829)
1
"FIA",727.829,727.829,23)

"FIA",727.829,727.829,24)

"FIA",727.829,727.829,28)

"FIA",727.829,727.829,29)

"FIA",727.832)
NUTRITION EXTRACT
"FIA",727.832,0)
^ECX(727.832,
"FIA",727.832,0,0)
727.832
"FIA",727.832,0,1)
y^y^p^^^^n^^n
"FIA",727.832,0,10)

"FIA",727.832,0,11)

"FIA",727.832,0,"RLRO")

"FIA",727.832,0,"VR")
3.0^ECX
"FIA",727.832,727.832)
1
"FIA",727.832,727.832,50)

"FIA",727.832,727.832,51)

"FIA",727.832,727.832,59)

"FIA",727.832,727.832,60)

"FIA",727.832,727.832,61)

"FIA",727.832,727.832,62)

"FIA",727.832,727.832,63)

"KRN",19,10114,-1)
0^68
"KRN",19,10114,0)
ECXLAB^Lab Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10114,1,0)
^^4^4^2950417^^^^
"KRN",19,10114,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10114,1,2,0)
laboratory data for a selected date range. This data is stored in
"KRN",19,10114,1,3,0)
the LABORATORY EXTRACT file (#727.813) until the data is transmitted
"KRN",19,10114,1,4,0)
to the commercial vendor.
"KRN",19,10114,25)
EN^ECXLAB1
"KRN",19,10114,"U")
LAB EXTRACT
"KRN",19,10115,-1)
0^78
"KRN",19,10115,0)
ECXNURS^Nursing Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10115,1,0)
^^4^4^2950417^^^^
"KRN",19,10115,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10115,1,2,0)
nursing data for a selected date range. This data is stored in the
"KRN",19,10115,1,3,0)
NURSING EXTRACT file (#727.805) until the data is transmitted
"KRN",19,10115,1,4,0)
to the commercial vendor.
"KRN",19,10115,25)
BEG^ECXNURS
"KRN",19,10115,"U")
NURSING EXTRACT
"KRN",19,10116,-1)
0^82
"KRN",19,10116,0)
ECXPSO^Prescription Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10116,1,0)
^19.06^4^4^3060526^^^^
"KRN",19,10116,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10116,1,2,0)
prescription (pharmacy outpatient) data for a selected date range.
"KRN",19,10116,1,3,0)
This data is stored in the PRESCRIPTION EXTRACT file (#727.81)
"KRN",19,10116,1,4,0)
until the data is transmitted to the commercial vendor.
"KRN",19,10116,25)
BEG^ECXOPRX
"KRN",19,10116,"U")
PRESCRIPTION EXTRACT
"KRN",19,10117,-1)
0^85
"KRN",19,10117,0)
ECXRAD^Radiology Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10117,1,0)
^^4^4^2950417^^^^
"KRN",19,10117,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10117,1,2,0)
radiology data for a selected date range. This data is stored in the
"KRN",19,10117,1,3,0)
RADIOLOGY EXTRACT file (#727.814) until the data is transmitted
"KRN",19,10117,1,4,0)
to the commercial vendor.
"KRN",19,10117,25)
BEG^ECXRAD
"KRN",19,10117,"U")
RADIOLOGY EXTRACT
"KRN",19,10118,-1)
0^92
"KRN",19,10118,0)
ECXSURG^Surgery Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10118,1,0)
^^4^4^2950417^^^^
"KRN",19,10118,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10118,1,2,0)
surgery data for a selected date range. This data is stored in the
"KRN",19,10118,1,3,0)
SURGERY EXTRACT file (#727.811) until the data is transmitted
"KRN",19,10118,1,4,0)
to the commercial vendor.
"KRN",19,10118,25)
BEG^ECXSURG
"KRN",19,10118,"U")
SURGERY EXTRACT
"KRN",19,10119,-1)
0^73
"KRN",19,10119,0)
ECXMENU^Package Extracts^^M^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10119,1,0)
^19.06^2^2^3030822^^^^
"KRN",19,10119,1,1,0)
Using this menu the extract manager has the ability to generate the
"KRN",19,10119,1,2,0)
individual package extracts.
"KRN",19,10119,3.92,0)
^19.392A
"KRN",19,10119,10,0)
^19.01IP^25^25
"KRN",19,10119,10,1,0)
10114^LAB^35
"KRN",19,10119,10,1,"^")
ECXLAB
"KRN",19,10119,10,2,0)
10115^NUR^45
"KRN",19,10119,10,2,"^")
ECXNURS
"KRN",19,10119,10,3,0)
10116^PRE^55
"KRN",19,10119,10,3,"^")
ECXPSO
"KRN",19,10119,10,4,0)
10117^RAD^65
"KRN",19,10119,10,4,"^")
ECXRAD
"KRN",19,10119,10,5,0)
10120^ECS^25
"KRN",19,10119,10,5,"^")
ECXEC
"KRN",19,10119,10,6,0)
10118^SUR^70
"KRN",19,10119,10,6,"^")
ECXSURG
"KRN",19,10119,10,8,0)
10124^ADM^5
"KRN",19,10119,10,8,"^")
ECXADM
"KRN",19,10119,10,10,0)
10126^MOV^75
"KRN",19,10119,10,10,"^")
ECXMOV
"KRN",19,10119,10,13,0)
10128^CLI^15
"KRN",19,10119,10,13,"^")
ECXSCX
"KRN",19,10119,10,14,0)
10129^UDP^85
"KRN",19,10119,10,14,"^")
ECXUD
"KRN",19,10119,10,15,0)
10133^IVP^30
"KRN",19,10119,10,15,"^")
ECXIV
"KRN",19,10119,10,16,0)
10134^TRT^80
"KRN",19,10119,10,16,"^")
ECXTRT
"KRN",19,10119,10,17,0)
10136^PAS^50
"KRN",19,10119,10,17,"^")
ECXPAI
"KRN",19,10119,10,19,0)
10164^LAR^40
"KRN",19,10119,10,19,"^")
ECXLABR
"KRN",19,10119,10,20,0)
10170^ECQ^60
"KRN",19,10119,10,20,"^")
ECXQSR
"KRN",19,10119,10,21,0)
10854^PRO^63
"KRN",19,10119,10,21,"^")
ECXPRO
"KRN",19,10119,10,22,0)
11347^MTL^47
"KRN",19,10119,10,22,"^")
ECXMTL
"KRN",19,10119,10,23,0)
12462
"KRN",19,10119,10,23,"^")
ECX FISCAL YEAR EXTRACT
"KRN",19,10119,10,24,0)
13053^LBB
"KRN",19,10119,10,24,"^")
ECXLBB
"KRN",19,10119,10,25,0)
13242^NUT^46
"KRN",19,10119,10,25,"^")
ECXNUT
"KRN",19,10119,99)
60716,30272
"KRN",19,10119,"U")
PACKAGE EXTRACTS
"KRN",19,10120,-1)
0^67
"KRN",19,10120,0)
ECXEC^Event Capture Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10120,1,0)
^^4^4^2950417^^^^
"KRN",19,10120,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10120,1,2,0)
event capture data for a selected date range. This data is stored in
"KRN",19,10120,1,3,0)
the EVENT CAPTURE LOCAL EXTRACT file (#727.815) until the data
"KRN",19,10120,1,4,0)
is transmitted to the commercial vendor.
"KRN",19,10120,25)
BEG^ECXEC
"KRN",19,10120,"U")
EVENT CAPTURE EXTRACT
"KRN",19,10121,-1)
0^89
"KRN",19,10121,0)
ECXSCLOAD^Create DSS Clinic Stop Code File^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10121,1,0)
^^46^46^2960717^^^^
"KRN",19,10121,1,1,0)
 This option allows the DSS extract manager to create the CLINICS AND
"KRN",19,10121,1,2,0)
 STOP CODES file (#728.44) which will contain clinics, the stop codes
"KRN",19,10121,1,3,0)
 assigned to those clinics by MAS, and the stop codes used for those
"KRN",19,10121,1,4,0)
 clinics by DSS.  The process by which new clinic entries are added and 
"KRN",19,10121,1,5,0)
 existing clinic entries are edited is as follows:
"KRN",19,10121,1,6,0)
  
"KRN",19,10121,1,7,0)
 NEW CLINIC ENTRIES
"KRN",19,10121,1,8,0)
  1. The HOSPITAL LOCATION file (#44) is searched for all clinics.  
"KRN",19,10121,1,9,0)
     Clinics that are currently inactive are ignored.  
"KRN",19,10121,1,10,0)
  2. New clinic entries to the CLINICS AND STOP CODES file (#728.44) are 
"KRN",19,10121,1,11,0)
     added with the following field defaults:
"KRN",19,10121,1,12,0)
     a. STOP CODE field (1) = STOP CODE NUMBER field (8) in HOSPITAL 
"KRN",19,10121,1,13,0)
        LOCATION file (#44)
"KRN",19,10121,1,14,0)
     b. CREDIT STOP CODE field (2) = CREDIT STOP CODE field (2503) in 
"KRN",19,10121,1,15,0)
        HOSPITAL LOCATION file (#44)
"KRN",19,10121,1,16,0)
     c. DSS STOP CODE field (3)= STOP CODE NUMBER field (8) in HOSPITAL 
"KRN",19,10121,1,17,0)
        LOCATION file (#44)
"KRN",19,10121,1,18,0)
     d. DSS CREDIT STOP CODE field (4) = CREDIT STOP CODE field (2503) 
"KRN",19,10121,1,19,0)
        in HOSPITAL LOCATION file (#44)
"KRN",19,10121,1,20,0)
     e. ACTION TO SEND field (5) = 
"KRN",19,10121,1,21,0)
        "1" (SEND STOP CODE) if CREDIT STOP CODE field (2) does not
"KRN",19,10121,1,22,0)
            exist
"KRN",19,10121,1,23,0)
        "5" (SEND BOTH AS ONE RECORD WITHOUT NATIONAL CODE) if CREDIT 
"KRN",19,10121,1,24,0)
            STOP CODE field (2) exists
"KRN",19,10121,1,25,0)
        "6" (DO NOT SEND) if Clinic is flagged as a "non-count" clinic 
"KRN",19,10121,1,26,0)
            in HOSPITAL LOCATION file (#44)
"KRN",19,10121,1,27,0)
 
"KRN",19,10121,1,28,0)
 EXISTING CLINIC ENTRIES
"KRN",19,10121,1,29,0)
  1. All pre-existing clinics are checked against their counterpart in 
"KRN",19,10121,1,30,0)
     the HOSPITAL LOCATION file (#44) to be sure that the STOP CODE 
"KRN",19,10121,1,31,0)
     field (1) in the CLINICS AND STOP CODES file (#728.44) matches the 
"KRN",19,10121,1,32,0)
     STOP CODE NUMBER field (8) in the HOSPITAL LOCATION file (#44).  
"KRN",19,10121,1,33,0)
     The same check is made on the CREDIT STOP CODE field (2) to be sure 
"KRN",19,10121,1,34,0)
     that it matches the CREDIT STOP CODE field (2503) in the HOSPITAL 
"KRN",19,10121,1,35,0)
     LOCATION file (#44).
"KRN",19,10121,1,36,0)
  2. Any pre-existing clinic that is now marked as "inactive" in the 
"KRN",19,10121,1,37,0)
     HOSPITAL LOCATION file (#44) is flagged as such in the CLINICS AND 
"KRN",19,10121,1,38,0)
     STOP CODES file (#728.44).  This inactive indicator will be 
"KRN",19,10121,1,39,0)
     displayed as an "*" beside the clinic name on the worksheet for the
"KRN",19,10121,1,40,0)
     "Clinics and DSS Stop Codes Print".  NOTE: "Inactive" clinics may 
"KRN",19,10121,1,41,0)
     still have valid past data for DSS.
"KRN",19,10121,1,42,0)
  3. Any stop code changes to pre-existing clinics will delete the DATE 
"KRN",19,10121,1,43,0)
     LAST REVIEWED field (6) in the CLINICS AND STOP CODES file (#728.44).
"KRN",19,10121,1,44,0)
     This will ensure that the edited clinics will print out as 
"KRN",19,10121,1,45,0)
     "unreviewed" the next time the clinic worksheet (from the "Clinics 
"KRN",19,10121,1,46,0)
     and DSS Stop Codes Print") is produced.
"KRN",19,10121,25)
EN^ECXSCLD
"KRN",19,10121,"U")
CREATE DSS CLINIC STOP CODE FI
"KRN",19,10122,-1)
0^88
"KRN",19,10122,0)
ECXSCLIST^Clinics and DSS Stop Codes Print^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10122,1,0)
^^4^4^2950612^^^^
"KRN",19,10122,1,1,0)
Using this option a worksheet may be printed for the DSS extract
"KRN",19,10122,1,2,0)
manager to use when creating the CLINICS AND STOP CODES file (#728.44)
"KRN",19,10122,1,3,0)
which relates clinics, the stop codes for those clinics used by MAS, and
"KRN",19,10122,1,4,0)
the stop codes required by DSS.
"KRN",19,10122,25)
PRINT^ECXSCLD
"KRN",19,10122,"U")
CLINICS AND DSS STOP CODES PRI
"KRN",19,10123,-1)
0^87
"KRN",19,10123,0)
ECXSCEDIT^Enter/Edit DSS Stop Codes for Clinics^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10123,1,0)
^19.06^4^4^3020731^^^^
"KRN",19,10123,1,1,0)
This options provides a method for the extract manager to select
"KRN",19,10123,1,2,0)
the stop codes for each clinic which will be associated with that
"KRN",19,10123,1,3,0)
clinic for the DSS extract.  These codes may be the same as those
"KRN",19,10123,1,4,0)
associated with the clinic by MAS but they may differ.
"KRN",19,10123,25)
EDIT^ECXSCLD
"KRN",19,10123,"U")
ENTER/EDIT DSS STOP CODES FOR 
"KRN",19,10124,-1)
0^66
"KRN",19,10124,0)
ECXADM^Admissions Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10124,1,0)
^^4^4^2950417^^^^
"KRN",19,10124,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10124,1,2,0)
patient admissions data for a selected date range. This data is stored
"KRN",19,10124,1,3,0)
in the ADMISSION EXTRACT file (#727.802) until the data is transmitted
"KRN",19,10124,1,4,0)
to the commercial vendor.
"KRN",19,10124,3.91,0)
^19.391^^0
"KRN",19,10124,3.92,0)
^19.392A^^0
"KRN",19,10124,25)
BEG^ECXADM
"KRN",19,10124,"U")
ADMISSIONS EXTRACT
"KRN",19,10126,-1)
0^75
"KRN",19,10126,0)
ECXMOV^Transfer and Discharge Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10126,1,0)
^^4^4^2950417^^^^
"KRN",19,10126,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10126,1,2,0)
patient movement (transfer and discharge) data for a selected date
"KRN",19,10126,1,3,0)
range. This data is stored in the PHYSICAL MOVEMENT EXTRACT file
"KRN",19,10126,1,4,0)
(#727.808) until the data is transmitted to the commercial vendor.
"KRN",19,10126,25)
BEG^ECXMOV
"KRN",19,10126,"U")
TRANSFER AND DISCHARGE EXTRACT
"KRN",19,10128,-1)
0^90
"KRN",19,10128,0)
ECXSCX^Clinic Visit Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10128,1,0)
^19.06^5^5^3000629^^^^
"KRN",19,10128,1,1,0)
Extract Clinic visit data.
"KRN",19,10128,1,2,0)
This option provides the extract manager the ability to extract the
"KRN",19,10128,1,3,0)
clinic visit data for a selected date range. This data is stored in the
"KRN",19,10128,1,4,0)
CLINIC EXTRACT file (#727.827) 
"KRN",19,10128,1,5,0)
until data is transmitted to the commercial vendor.
"KRN",19,10128,25)
BEG^ECXSCXN
"KRN",19,10128,"U")
CLINIC VISIT EXTRACT
"KRN",19,10129,-1)
0^96
"KRN",19,10129,0)
ECXUD^Unit Dose Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10129,1,0)
^19.06^4^4^3030115^^^^
"KRN",19,10129,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10129,1,2,0)
pharmacy unit dose data for a selected date range. This data is
"KRN",19,10129,1,3,0)
stored in the UNIT DOSE LOCAL EXTRACT file (#727.809)
"KRN",19,10129,1,4,0)
until the data is transmitted to the commercial vendor.
"KRN",19,10129,25)
BEG^ECXUD
"KRN",19,10129,"U")
UNIT DOSE EXTRACT
"KRN",19,10130,-1)
0^74
"KRN",19,10130,0)
ECXMGR^Extract Manager's Options^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10130,1,0)
^19.06^3^3^3060829^^^^
"KRN",19,10130,1,1,0)
This is the main menu for the DSS extract manager. All setup options,
"KRN",19,10130,1,2,0)
audit reports, maintenance activities, package extracts, and
"KRN",19,10130,1,3,0)
transmission management options reside within the menu structure.
"KRN",19,10130,10,0)
^19.01IP^13^13
"KRN",19,10130,10,4,0)
10119^P^10
"KRN",19,10130,10,4,"^")
ECXMENU
"KRN",19,10130,10,8,0)
10149^E^20
"KRN",19,10130,10,8,"^")
ECX SOURCE AUDITS
"KRN",19,10130,10,11,0)
10152^S^15
"KRN",19,10130,10,11,"^")
ECX SAS AUDITS
"KRN",19,10130,10,12,0)
10161^M^5
"KRN",19,10130,10,12,"^")
ECX MAINTENANCE
"KRN",19,10130,10,13,0)
10162^T^25
"KRN",19,10130,10,13,"^")
ECX TRANSMISSION
"KRN",19,10130,99)
60716,30272
"KRN",19,10130,99.1)
60934,42170
"KRN",19,10130,"U")
EXTRACT MANAGER'S OPTIONS
"KRN",19,10131,-1)
0^83
"KRN",19,10131,0)
ECXPURG^Purge Data from Extract Files^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10131,1,0)
^^20^20^2961121^^
"KRN",19,10131,1,1,0)
This option purges individual or a range of DSS extracts, or data that 
"KRN",19,10131,1,2,0)
resides in the "holding files" for the IVP and UDP extracts.
"KRN",19,10131,1,3,0)
 
"KRN",19,10131,1,4,0)
Care must be taken for several reasons:
"KRN",19,10131,1,5,0)
 
"KRN",19,10131,1,6,0)
-  You can purge ANY existing extract.  This includes transmitted and non-
"KRN",19,10131,1,7,0)
   transmitted extracts as well as extracts that did not run to completion
"KRN",19,10131,1,8,0)
   due to errors or system problems.
"KRN",19,10131,1,9,0)
-  Choosing a range of extracts (or a broad date range for the "holding
"KRN",19,10131,1,10,0)
   files") could mean an excessively large number of records and be very
"KRN",19,10131,1,11,0)
   CPU intensive.  Please be sure to queue this purge for off-hours and
"KRN",19,10131,1,12,0)
   limit the number of extracts to be purged per a single queued session.
"KRN",19,10131,1,13,0)
-  Data in the IVP and UDP holding files CANNOT be recreated.  Once it is
"KRN",19,10131,1,14,0)
   purged, extracts can no longer be generated for that time period.
"KRN",19,10131,1,15,0)
 
"KRN",19,10131,1,16,0)
PURGE RECOMMENDATIONS:
"KRN",19,10131,1,17,0)
Deletion of any local DHCP extracts or DHCP "source of extracts" (i.e., lab 
"KRN",19,10131,1,18,0)
data, etc.) is not recommended until your facility has successfully created 
"KRN",19,10131,1,19,0)
extracts, transmitted to the Austin Automation Center, audited the counts, 
"KRN",19,10131,1,20,0)
loaded the data into DSS AND ARE CONTENT WITH THE RESULTS.
"KRN",19,10131,25)
EN^ECXPURG
"KRN",19,10131,"U")
PURGE DATA FROM EXTRACT FILES
"KRN",19,10132,-1)
0^93
"KRN",19,10132,0)
ECXTRANS^Transmit Data from Extract Files^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10132,1,0)
^^3^3^2950418^^^^
"KRN",19,10132,1,1,0)
This option allows messages containing the data from an individual
"KRN",19,10132,1,2,0)
extract to be sent to the Austin Automation Center in a series of mail
"KRN",19,10132,1,3,0)
messages.
"KRN",19,10132,25)
EN^ECXTRANS
"KRN",19,10132,"U")
TRANSMIT DATA FROM EXTRACT FIL
"KRN",19,10133,-1)
0^1
"KRN",19,10133,0)
ECXIV^IV Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10133,1,0)
^19.06^4^4^3070313^^^^
"KRN",19,10133,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10133,1,2,0)
pharmacy IV data for a selected date range. This data is stored in
"KRN",19,10133,1,3,0)
the IV DETAIL EXTRACT file (#727.819) until the data is transmitted
"KRN",19,10133,1,4,0)
to the commercial vendor.
"KRN",19,10133,25)
BEG^ECXPIVDN
"KRN",19,10133,"U")
IV EXTRACT
"KRN",19,10134,-1)
0^94
"KRN",19,10134,0)
ECXTRT^Treating Specialty Change Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10134,1,0)
^^4^4^2950417^^^^
"KRN",19,10134,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10134,1,2,0)
treating specialty change data for a selected date range. This data is
"KRN",19,10134,1,3,0)
stored in the TREATING SPECIALTY CHANGE EXTRACT file (#727.817)
"KRN",19,10134,1,4,0)
until the data is transmitted to the commercial vendor.
"KRN",19,10134,25)
BEG^ECXTRT
"KRN",19,10134,"U")
TREATING SPECIALTY CHANGE EXTR
"KRN",19,10135,-1)
0^86
"KRN",19,10135,0)
ECXSCAPPROV^Approve Reviewed DSS Clinic Worksheet^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10135,1,0)
^^6^6^2960717^^^^
"KRN",19,10135,1,1,0)
This option provides the extract manager a mechanism to approve all
"KRN",19,10135,1,2,0)
DSS Stop Codes and DSS Credit Stop Codes as site defined in the CLINICS 
"KRN",19,10135,1,3,0)
AND STOP CODES file (#728.44).  Running this option will mark all 
"KRN",19,10135,1,4,0)
currently existing entries in this file as "reviewed" with a date.  This 
"KRN",19,10135,1,5,0)
will allow sites to select to print the "Clinics and DSS Stop Codes 
"KRN",19,10135,1,6,0)
Print" by ALL or UNREVIEWED.
"KRN",19,10135,25)
APPROVE^ECXSCLD
"KRN",19,10135,"U")
APPROVE REVIEWED DSS CLINIC WO
"KRN",19,10136,-1)
0^79
"KRN",19,10136,0)
ECXPAI^PAI File Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10136,1,0)
^^4^4^2960530^^^^
"KRN",19,10136,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10136,1,2,0)
patient assessment instrument (PAI) data for a selected date range.
"KRN",19,10136,1,3,0)
This data is stored in the PAI EXTRACT file (#727.823) until the
"KRN",19,10136,1,4,0)
data is transmitted to the commercial vendor.
"KRN",19,10136,25)
BEG^ECXPAI
"KRN",19,10136,"U")
PAI FILE EXTRACT
"KRN",19,10137,-1)
0^91
"KRN",19,10137,0)
ECXSETUP^Generate the Inpatient Setup Extract^^R^^ECXMGR^^^^^^DSS EXTRACTS^^1
"KRN",19,10137,1,0)
^^7^7^2950421^^^^
"KRN",19,10137,1,1,0)
This option generates the inpatient setup extract which creates
"KRN",19,10137,1,2,0)
the hospital population for the selected DSS start up date. This data
"KRN",19,10137,1,3,0)
is stored in the ADMISSION SETUP EXTRACT file (#727.82), the
"KRN",19,10137,1,4,0)
PHYSICAL MOVEMENT SETUP EXTRACT file (#727.821), and the
"KRN",19,10137,1,5,0)
TREATING SPECIALTY CHANGE SETUP EXTRACT file (#727.822) until
"KRN",19,10137,1,6,0)
the data is transmitted to the commercial vendor. The option MUST
"KRN",19,10137,1,7,0)
only be run once.
"KRN",19,10137,20)
W !!!,"WARNING.",!,"This is very resource intensive and should be queued to run at slack time.",!!!
"KRN",19,10137,25)
EN^ECXSETUP
"KRN",19,10137,"U")
GENERATE THE INPATIENT SETUP E
"KRN",19,10139,-1)
0^29
"KRN",19,10139,0)
ECX ADM SOURCE AUDIT^Admission (ADM) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10139,1,0)
^19.06^14^14^3010829^^^^
"KRN",19,10139,1,1,0)
This option will generate a report from the ADMISSION EXTRACT
"KRN",19,10139,1,2,0)
file (#727.802) which will allow the DSS extract manager to
"KRN",19,10139,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10139,1,4,0)
Center.
"KRN",19,10139,1,5,0)
  
"KRN",19,10139,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10139,1,7,0)
in the verification process:
"KRN",19,10139,1,8,0)
  
"KRN",19,10139,1,9,0)
Report Title - Gains and Losses Sheet/Bed Status Report
"KRN",19,10139,1,10,0)
Menu Option -  Gains and Losses (G&L) Sheet [DG G&L SHEET]
"KRN",19,10139,1,11,0)
  
"KRN",19,10139,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10139,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10139,1,14,0)
division (if applicable).
"KRN",19,10139,25)
EN^ECXAADM
"KRN",19,10139,"U")
ADMISSION (ADM) EXTRACT AUDIT
"KRN",19,10140,-1)
0^32
"KRN",19,10140,0)
ECX MOV SOURCE AUDIT^Physical Movement (MOV) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10140,1,0)
^^14^14^2990503^^
"KRN",19,10140,1,1,0)
This option will generate a report from the PHYSICAL MOVEMENT
"KRN",19,10140,1,2,0)
EXTRACT file (#727.808) which will allow the DSS extract manager to
"KRN",19,10140,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10140,1,4,0)
Center.
"KRN",19,10140,1,5,0)
  
"KRN",19,10140,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10140,1,7,0)
in the verification process:
"KRN",19,10140,1,8,0)
  
"KRN",19,10140,1,9,0)
Report Title - Gains & Losses Sheet/Bed Status Report
"KRN",19,10140,1,10,0)
Menu Option -  Gains and Losses (G&L) Sheet [DG G&L SHEET]
"KRN",19,10140,1,11,0)
  
"KRN",19,10140,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10140,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10140,1,14,0)
division (if applicable).
"KRN",19,10140,25)
EN^ECXAMOV
"KRN",19,10140,60)

"KRN",19,10140,62)

"KRN",19,10140,63)

"KRN",19,10140,64)

"KRN",19,10140,65)

"KRN",19,10140,66)

"KRN",19,10140,"U")
PHYSICAL MOVEMENT (MOV) EXTRAC
"KRN",19,10141,-1)
0^42
"KRN",19,10141,0)
ECX TRT SOURCE AUDIT^Treating Specialty Change (TRT) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10141,1,0)
^^14^14^2971107^
"KRN",19,10141,1,1,0)
This option will generate a report from the TREATING SPECIALTY
"KRN",19,10141,1,2,0)
CHANGE EXTRACT file (#727.817) which will allow the DSS extract 
"KRN",19,10141,1,3,0)
manager to verify extract data before transmission to the Austin 
"KRN",19,10141,1,4,0)
Automation Center.
"KRN",19,10141,1,5,0)
  
"KRN",19,10141,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10141,1,7,0)
in the verification process:
"KRN",19,10141,1,8,0)
  
"KRN",19,10141,1,9,0)
Report Title - Gains & Losses Sheet/Treating Specialty Report
"KRN",19,10141,1,10,0)
Menu Option -  Gains and Losses (G&L) Sheet [DG G&L SHEET]
"KRN",19,10141,1,11,0)
  
"KRN",19,10141,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10141,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10141,1,14,0)
division (if applicable).
"KRN",19,10141,25)
EN^ECXATRT
"KRN",19,10141,60)

"KRN",19,10141,62)

"KRN",19,10141,63)

"KRN",19,10141,64)

"KRN",19,10141,65)

"KRN",19,10141,66)

"KRN",19,10141,"U")
TREATING SPECIALTY CHANGE (TRT
"KRN",19,10143,-1)
0^36
"KRN",19,10143,0)
ECX PAI SOURCE AUDIT^PAI (PAS) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10143,1,0)
^^14^14^2971107^
"KRN",19,10143,1,1,0)
This option will generate a report from the PAI EXTRACT file
"KRN",19,10143,1,2,0)
(#727.823) which will allow the DSS extract manager to verify
"KRN",19,10143,1,3,0)
extract data before transmission to the Austin Automation
"KRN",19,10143,1,4,0)
Center.
"KRN",19,10143,1,5,0)
  
"KRN",19,10143,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10143,1,7,0)
in the verification process:
"KRN",19,10143,1,8,0)
  
"KRN",19,10143,1,9,0)
Report Title - Record Status Report
"KRN",19,10143,1,10,0)
Menu Option -  Record Status Report [DG RUG STATUS]
"KRN",19,10143,1,11,0)
  
"KRN",19,10143,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10143,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10143,1,14,0)
division (if applicable).
"KRN",19,10143,25)
EN^ECXAPAS
"KRN",19,10143,60)

"KRN",19,10143,62)

"KRN",19,10143,63)

"KRN",19,10143,64)

"KRN",19,10143,65)

"KRN",19,10143,66)

"KRN",19,10143,"U")
PAI (PAS) EXTRACT AUDIT
"KRN",19,10144,-1)
0^30
"KRN",19,10144,0)
ECX ECS SOURCE AUDIT^Event Capture (ECS) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10144,1,0)
^^14^14^2971107^
"KRN",19,10144,1,1,0)
This option will generate a report from the EVENT CAPTURE LOCAL 
"KRN",19,10144,1,2,0)
EXTRACT file (#727.815) which will allow the DSS extract manager to
"KRN",19,10144,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10144,1,4,0)
Center.
"KRN",19,10144,1,5,0)
  
"KRN",19,10144,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10144,1,7,0)
in the verification process:
"KRN",19,10144,1,8,0)
  
"KRN",19,10144,1,9,0)
Report Title - DSS Unit Workload Summary Report
"KRN",19,10144,1,10,0)
Menu Option -  DSS Unit Workload Summary [ECRDSSU]
"KRN",19,10144,1,11,0)
  
"KRN",19,10144,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10144,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10144,1,14,0)
division (if applicable).
"KRN",19,10144,25)
EN^ECXAECS
"KRN",19,10144,60)

"KRN",19,10144,62)

"KRN",19,10144,63)

"KRN",19,10144,64)

"KRN",19,10144,"U")
EVENT CAPTURE (ECS) EXTRACT AU
"KRN",19,10145,-1)
0^31
"KRN",19,10145,0)
ECX LAB SOURCE AUDIT (PATIENT)^Laboratory (LAB) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10145,1,0)
^^14^14^2971117^^^^
"KRN",19,10145,1,1,0)
This option will generate a report from the LABORATORY EXTRACT
"KRN",19,10145,1,2,0)
file (#727.813) which will allow the DSS extract manager to
"KRN",19,10145,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10145,1,4,0)
Center.
"KRN",19,10145,1,5,0)
  
"KRN",19,10145,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10145,1,7,0)
in the verification process:
"KRN",19,10145,1,8,0)
  
"KRN",19,10145,1,9,0)
Report Title - Workload Statistics by Accession Area and Shifts
"KRN",19,10145,1,10,0)
Menu Option -  Workload statistics by accession area and shift [LRRP8]
"KRN",19,10145,1,11,0)
  
"KRN",19,10145,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10145,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10145,1,14,0)
division (if applicable).
"KRN",19,10145,25)
EN^ECXALAB
"KRN",19,10145,60)

"KRN",19,10145,62)

"KRN",19,10145,63)

"KRN",19,10145,64)

"KRN",19,10145,"U")
LABORATORY (LAB) EXTRACT AUDIT
"KRN",19,10147,-1)
0^34
"KRN",19,10147,0)
ECX NUR SOURCE AUDIT^Nursing (NUR) Extract Audit^^R^^^^^^^^DSS EXTRACTS^^1
"KRN",19,10147,1,0)
^^16^16^2971107^
"KRN",19,10147,1,1,0)
This option will generate a report from the NURSING EXTRACT
"KRN",19,10147,1,2,0)
file (#727.805) which will allow the DSS extract manager to
"KRN",19,10147,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10147,1,4,0)
Center.
"KRN",19,10147,1,5,0)
  
"KRN",19,10147,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10147,1,7,0)
in the verification process:
"KRN",19,10147,1,8,0)
  
"KRN",19,10147,1,9,0)
Report Title - Report 10-1106 Segment 200,
"KRN",19,10147,1,10,0)
               Cumulative Daily Patient Classification Data
"KRN",19,10147,1,11,0)
Menu Option -  Patient Category Totals-Midnight Acuity Reports
"KRN",19,10147,1,12,0)
               [NURAPR-RES-MDPC]
"KRN",19,10147,1,13,0)
  
"KRN",19,10147,1,14,0)
Be sure that the extract audit report and the external application
"KRN",19,10147,1,15,0)
report are generated for the same date or date range and the same
"KRN",19,10147,1,16,0)
division (if applicable).
"KRN",19,10147,20)
W !,"The start date should be the same as the end date",!!
"KRN",19,10147,25)
EN^ECXANUR
"KRN",19,10147,60)

"KRN",19,10147,62)

"KRN",19,10147,63)

"KRN",19,10147,64)

"KRN",19,10147,"U")
NURSING (NUR) EXTRACT AUDIT
"KRN",19,10148,-1)
0^40
"KRN",19,10148,0)
ECX RAD SOURCE AUDIT^Radiology (RAD) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10148,1,0)
^^15^15^2971107^
"KRN",19,10148,1,1,0)
This option will generate a report from the RADIOLOGY EXTRACT
"KRN",19,10148,1,2,0)
file (#727.814) which will allow the DSS extract manager to
"KRN",19,10148,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10148,1,4,0)
Center.
"KRN",19,10148,1,5,0)
  
"KRN",19,10148,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10148,1,7,0)
in the verification process:
"KRN",19,10148,1,8,0)
  
"KRN",19,10148,1,9,0)
Report Title - Procedure/CPT Statistics Report, Inpatient
"KRN",19,10148,1,10,0)
               Procedure/CPT Statistics Report, Outpatient
"KRN",19,10148,1,11,0)
Menu Option -  Procedure/CPT Statistics Report [RA CPTSTATS]
"KRN",19,10148,1,12,0)
  
"KRN",19,10148,1,13,0)
Be sure that the extract audit report and the external application
"KRN",19,10148,1,14,0)
report are generated for the same date or date range and the same
"KRN",19,10148,1,15,0)
division (if applicable).
"KRN",19,10148,25)
EN^ECXARAD
"KRN",19,10148,60)

"KRN",19,10148,62)

"KRN",19,10148,63)

"KRN",19,10148,64)

"KRN",19,10148,"U")
RADIOLOGY (RAD) EXTRACT AUDIT
"KRN",19,10149,-1)
0^3
"KRN",19,10149,0)
ECX SOURCE AUDITS^Extract Audit Reports Menu^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10149,10,0)
^19.01IP^18^17
"KRN",19,10149,10,1,0)
10139^ADM^1
"KRN",19,10149,10,1,"^")
ECX ADM SOURCE AUDIT
"KRN",19,10149,10,3,0)
10144^ECS^2
"KRN",19,10149,10,3,"^")
ECX ECS SOURCE AUDIT
"KRN",19,10149,10,4,0)
10145^LAB^3
"KRN",19,10149,10,4,"^")
ECX LAB SOURCE AUDIT (PATIENT)
"KRN",19,10149,10,6,0)
10140^MOV^6
"KRN",19,10149,10,6,"^")
ECX MOV SOURCE AUDIT
"KRN",19,10149,10,7,0)
10143^PAS^9
"KRN",19,10149,10,7,"^")
ECX PAI SOURCE AUDIT
"KRN",19,10149,10,8,0)
10148^RAD^13
"KRN",19,10149,10,8,"^")
ECX RAD SOURCE AUDIT
"KRN",19,10149,10,9,0)
10150^SUR^14
"KRN",19,10149,10,9,"^")
ECX SUR SOURCE AUDIT
"KRN",19,10149,10,10,0)
10141^TRT^15
"KRN",19,10149,10,10,"^")
ECX TRT SOURCE AUDIT
"KRN",19,10149,10,11,0)
10147^NUR^8
"KRN",19,10149,10,11,"^")
ECX NUR SOURCE AUDIT
"KRN",19,10149,10,12,0)
10171^ECQ^1.5
"KRN",19,10149,10,12,"^")
ECX QSR SOURCE AUDIT
"KRN",19,10149,10,13,0)
10855^PRO^12
"KRN",19,10149,10,13,"^")
ECX PRO SOURCE AUDIT
"KRN",19,10149,10,14,0)
11348^MTL^7
"KRN",19,10149,10,14,"^")
ECX MTL SOURCE AUDIT
"KRN",19,10149,10,15,0)
12021^PHA^10
"KRN",19,10149,10,15,"^")
ECX PHA SOURCE AUDIT
"KRN",19,10149,10,16,0)
13444^NUT^8.5
"KRN",19,10149,10,16,"^")
ECX NUT SOURCE AUDIT
"KRN",19,10149,10,17,0)
13453^LAR^4
"KRN",19,10149,10,17,"^")
ECX LAR SOURCE AUDIT
"KRN",19,10149,10,18,0)
13054^LBB^5
"KRN",19,10149,10,18,"^")
ECX LBB SOURCE AUDIT
"KRN",19,10149,99)
60820,37379
"KRN",19,10149,"U")
EXTRACT AUDIT REPORTS MENU
"KRN",19,10150,-1)
0^41
"KRN",19,10150,0)
ECX SUR SOURCE AUDIT^Surgery (SUR) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10150,1,0)
^^14^14^2971107^
"KRN",19,10150,1,1,0)
This option will generate a report from the SURGERY EXTRACT
"KRN",19,10150,1,2,0)
file (#727.811) which will allow the DSS extract manager to
"KRN",19,10150,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10150,1,4,0)
Center.
"KRN",19,10150,1,5,0)
  
"KRN",19,10150,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10150,1,7,0)
in the verification process:
"KRN",19,10150,1,8,0)
  
"KRN",19,10150,1,9,0)
Report Title - Surgical Service Cumulative Report of CPT Codes
"KRN",19,10150,1,10,0)
Menu Option -  Cumulative Report of CPT Codes [SROACCT]
"KRN",19,10150,1,11,0)
  
"KRN",19,10150,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10150,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10150,1,14,0)
division (if applicable).
"KRN",19,10150,25)
EN^ECXASUR
"KRN",19,10150,60)

"KRN",19,10150,62)

"KRN",19,10150,63)

"KRN",19,10150,64)

"KRN",19,10150,"U")
SURGERY (SUR) EXTRACT AUDIT
"KRN",19,10151,-1)
0^49
"KRN",19,10151,0)
ECX EXTRACT LOG REVIEW^Review a Particular Extract for Transmission^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10151,1,0)
^^2^2^2950419^^^^
"KRN",19,10151,1,1,0)
This option allows the review of a particular extract to verify the
"KRN",19,10151,1,2,0)
transmission of messages to the Austin Automation Center.
"KRN",19,10151,25)
EN^ECXXREV
"KRN",19,10151,"U")
REVIEW A PARTICULAR EXTRACT FO
"KRN",19,10152,-1)
0^61
"KRN",19,10152,0)
ECX SAS AUDITS^SAS Extract Audit Reports^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10152,1,0)
^^3^3^2950417^^^^
"KRN",19,10152,1,1,0)
This menu holds the audit reports for those extracts which have
"KRN",19,10152,1,2,0)
additional records created by the SAS programs at the Austin
"KRN",19,10152,1,3,0)
Automation Center.
"KRN",19,10152,10,0)
^19.01PI^4^3
"KRN",19,10152,10,2,0)
10154^RAD^15
"KRN",19,10152,10,2,"^")
ECX SAS RADIOLOGY
"KRN",19,10152,10,3,0)
10155^PRE^10
"KRN",19,10152,10,3,"^")
ECX SAS PRESCRIPTION
"KRN",19,10152,10,4,0)
10156^SUR^20
"KRN",19,10152,10,4,"^")
ECX SAS SURGERY
"KRN",19,10152,99)
60458,33386
"KRN",19,10152,"U")
SAS EXTRACT AUDIT REPORTS
"KRN",19,10154,-1)
0^63
"KRN",19,10154,0)
ECX SAS RADIOLOGY^SAS Radiology Audit Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10154,1,0)
^^4^4^2971028^^^^
"KRN",19,10154,1,1,0)
This option emulates the SAS routine at the Austin Automation Center
"KRN",19,10154,1,2,0)
which creates new records from the radiology extract. Using this option
"KRN",19,10154,1,3,0)
a summary report may be printed for all records sorted by feeder location
"KRN",19,10154,1,4,0)
and feeder key.
"KRN",19,10154,25)
EN^ECXSARAD
"KRN",19,10154,"U")
SAS RADIOLOGY AUDIT REPORT
"KRN",19,10155,-1)
0^62
"KRN",19,10155,0)
ECX SAS PRESCRIPTION^SAS Prescription Audit Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10155,1,0)
^^4^4^2950417^^^^
"KRN",19,10155,1,1,0)
This option emulates the SAS routine at the Austin Automation Center
"KRN",19,10155,1,2,0)
which creates new records from the prescription (pharmacy outpatient)
"KRN",19,10155,1,3,0)
extract. Using this option a summary report may be printed for all
"KRN",19,10155,1,4,0)
records sorted by feeder location and feeder key.
"KRN",19,10155,25)
EN^ECXSARXS
"KRN",19,10155,"U")
SAS PRESCRIPTION AUDIT REPORT
"KRN",19,10156,-1)
0^64
"KRN",19,10156,0)
ECX SAS SURGERY^SAS Surgery Audit Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10156,1,0)
^^4^4^2971028^^^^
"KRN",19,10156,1,1,0)
This option emulates the SAS routine at the Austin Automation Center
"KRN",19,10156,1,2,0)
which creates new records from the surgery extract. Using this option
"KRN",19,10156,1,3,0)
a summary report may be printed for all records sorted by feeder location
"KRN",19,10156,1,4,0)
and feeder key.
"KRN",19,10156,25)
EN^ECXSASUR
"KRN",19,10156,"U")
SAS SURGERY AUDIT REPORT
"KRN",19,10157,-1)
0^50
"KRN",19,10157,0)
ECX EXTRACT LOG SUMMARY^Summary Report of Extract Logs^^R^^^^^^^^DSS EXTRACTS^^
"KRN",19,10157,1,0)
^19.06^3^3^3060615^^^^
"KRN",19,10157,1,1,0)
Using this option a summary report may be printed from the EXTRACT
"KRN",19,10157,1,2,0)
LOG file (#727) displaying extract number, feeder system, data set
"KRN",19,10157,1,3,0)
dates (date range), record count, date transmitted, and date purged.
"KRN",19,10157,20)

"KRN",19,10157,25)
EN^ECXLOG
"KRN",19,10157,60)

"KRN",19,10157,62)
0
"KRN",19,10157,63)

"KRN",19,10157,64)

"KRN",19,10157,"U")
SUMMARY REPORT OF EXTRACT LOGS
"KRN",19,10159,-1)
0^18
"KRN",19,10159,0)
ECXFELOC^Print Feeder Locations^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10159,1,0)
^^2^2^2980806^^^^
"KRN",19,10159,1,1,0)
Using this option a list of feeder locations sorted by the feeder system may
"KRN",19,10159,1,2,0)
be printed.
"KRN",19,10159,25)
EN^ECXFELOC
"KRN",19,10159,"U")
PRINT FEEDER LOCATIONS
"KRN",19,10160,-1)
0^17
"KRN",19,10160,0)
ECXFEKEY^Print Feeder Keys^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10160,1,0)
^19.06^2^2^3020222^^^^
"KRN",19,10160,1,1,0)
Using this option a list of feeder keys sorted by the feeder system may be
"KRN",19,10160,1,2,0)
printed.
"KRN",19,10160,25)
EN^ECXFEKEY
"KRN",19,10160,"U")
PRINT FEEDER KEYS
"KRN",19,10161,-1)
0^2
"KRN",19,10161,0)
ECX MAINTENANCE^Maintenance^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10161,1,0)
^19.06^4^4^3070605^^^^
"KRN",19,10161,1,1,0)
This menu provides the extract manager various options to
"KRN",19,10161,1,2,0)
maintain the files necessary to extract data from existing
"KRN",19,10161,1,3,0)
DHCP files and to generate reports of feeder keys and feeder
"KRN",19,10161,1,4,0)
locations.
"KRN",19,10161,10,0)
^19.01IP^30^17
"KRN",19,10161,10,1,0)
10173^10^10
"KRN",19,10161,10,1,"^")
ECX SETUP CLINIC
"KRN",19,10161,10,3,0)
10174^13^13
"KRN",19,10161,10,3,"^")
ECX SETUP INP MEDS
"KRN",19,10161,10,4,0)
10160^7^7
"KRN",19,10161,10,4,"^")
ECXFEKEY
"KRN",19,10161,10,5,0)
10159^8^8
"KRN",19,10161,10,5,"^")
ECXFELOC
"KRN",19,10161,10,7,0)
10175^12^12
"KRN",19,10161,10,7,"^")
ECX SETUP INP CENSUS
"KRN",19,10161,10,8,0)
10177^11^11
"KRN",19,10161,10,8,"^")
ECX SETUP LAB
"KRN",19,10161,10,9,0)
10853^3^3
"KRN",19,10161,10,9,"^")
ECX DSSDEPT MGMT
"KRN",19,10161,10,16,0)
12456^1^1
"KRN",19,10161,10,16,"^")
ECX CBOC REPORT
"KRN",19,10161,10,19,0)
12463^2^2
"KRN",19,10161,10,19,"^")
ECX CPT INQUIRY
"KRN",19,10161,10,24,0)
13259^5^5
"KRN",19,10161,10,24,"^")
ECX NUTRITION WORKSHEETS
"KRN",19,10161,10,26,0)
13455^4^4
"KRN",19,10161,10,26,"^")
ECX LAB MAINTENACE
"KRN",19,10161,10,27,0)
13456^6^6
"KRN",19,10161,10,27,"^")
ECX PHARMACY MAINTENANCE
"KRN",19,10161,10,29,0)
13457^9^9
"KRN",19,10161,10,29,"^")
ECX PROSTHETICS MAINTENANCE
"KRN",19,10161,10,30,0)
13458^14^14
"KRN",19,10161,10,30,"^")
ECX SURGERY MAINTENANCE
"KRN",19,10161,10.1)
File Maintenance for DSS
"KRN",19,10161,99)
60795,27433
"KRN",19,10161,"U")
MAINTENANCE
"KRN",19,10162,-1)
0^65
"KRN",19,10162,0)
ECX TRANSMISSION^Transmission Management^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10162,1,0)
^19.06^3^3^3040921^^^^
"KRN",19,10162,1,1,0)
This menu contains the options that provide the extract manager the
"KRN",19,10162,1,2,0)
ability to manage the transmissions of the extracted data to the
"KRN",19,10162,1,3,0)
commercial vendor.
"KRN",19,10162,10,0)
^19.01IP^4^4
"KRN",19,10162,10,1,0)
10132^T^20
"KRN",19,10162,10,1,"^")
ECXTRANS
"KRN",19,10162,10,2,0)
10151^R^10
"KRN",19,10162,10,2,"^")
ECX EXTRACT LOG REVIEW
"KRN",19,10162,10,3,0)
10157^S^15
"KRN",19,10162,10,3,"^")
ECX EXTRACT LOG SUMMARY
"KRN",19,10162,10,4,0)
10131^P^5
"KRN",19,10162,10,4,"^")
ECXPURG
"KRN",19,10162,99)
60534,32242
"KRN",19,10162,"U")
TRANSMISSION MANAGEMENT
"KRN",19,10163,-1)
0^95
"KRN",19,10163,0)
ECXTRYIT^Trial for Setup Extract^^R^^ECXMGR^^^^^^DSS EXTRACTS^^1
"KRN",19,10163,1,0)
^^5^5^2950418^^^^
"KRN",19,10163,1,1,0)
This option uses the logic of the admission setup extract to generate
"KRN",19,10163,1,2,0)
a printed report of the inpatient population on a selected day. This
"KRN",19,10163,1,3,0)
report should be compared to reports from MAS to eliminate any
"KRN",19,10163,1,4,0)
problems in the ADMISSION SETUP EXTRACT file (#727.82) used
"KRN",19,10163,1,5,0)
to generate the admission setup extract.
"KRN",19,10163,20)
W !!!,"WARNING.",!,"This is very resource intensive and should be queued to run at slack time.",!!!
"KRN",19,10163,25)
EN^ECXTRYIT
"KRN",19,10163,"U")
TRIAL FOR SETUP EXTRACT
"KRN",19,10164,-1)
0^69
"KRN",19,10164,0)
ECXLABR^Lab Results Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10164,1,0)
^19.06^4^4^3030513^^^^
"KRN",19,10164,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10164,1,2,0)
laboratory results data for a selected date range. This data is stored in
"KRN",19,10164,1,3,0)
the LAB RESULTS EXTRACT file (#727.824) until the data is transmitted
"KRN",19,10164,1,4,0)
to the commercial vendor.
"KRN",19,10164,25)
BEG^ECXLABR
"KRN",19,10164,"U")
LAB RESULTS EXTRACT
"KRN",19,10165,-1)
0^70
"KRN",19,10165,0)
ECXLABRS^Link DSS Selected Lab Tests to Local Lab Tests^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10165,1,0)
^19.06^5^5^3030905^^
"KRN",19,10165,1,1,0)
Using this option the extract manager has the ability to link the DSS
"KRN",19,10165,1,2,0)
selected tests in the DSS LAB TESTS file (#727.2) to the local lab tests
"KRN",19,10165,1,3,0)
in the LABORATORY TESTS file (#60).  Local names for BLOOD, URINE and 
"KRN",19,10165,1,4,0)
FECES specimens must also be defined.  This information is critical for 
"KRN",19,10165,1,5,0)
the DSS Lab Results Extract.
"KRN",19,10165,25)
EN^ECXLABRS
"KRN",19,10165,"U")
LINK DSS SELECTED LAB TESTS TO
"KRN",19,10166,-1)
0^54
"KRN",19,10166,0)
ECX NATIONAL CLINIC^National Clinic Codes for DSS List^^P^^^^^^^^DSS EXTRACTS
"KRN",19,10166,1,0)
^^2^2^2950419^^^
"KRN",19,10166,1,1,0)
This option prints a list of the national clinic codes for DSS from the
"KRN",19,10166,1,2,0)
NATIONAL CLINIC file (#728.441).
"KRN",19,10166,60)
ECX(728.441,
"KRN",19,10166,62)
0
"KRN",19,10166,63)
[ECX CLINIC CODE]
"KRN",19,10166,64)
[ECX CLINIC CODE]
"KRN",19,10166,65)

"KRN",19,10166,66)

"KRN",19,10166,"U")
NATIONAL CLINIC CODES FOR DSS 
"KRN",19,10167,-1)
0^52
"KRN",19,10167,0)
ECX IV DIV EDIT^Enter/Edit IV Room Division^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10167,1,0)
^^4^4^2960319^^^
"KRN",19,10167,1,1,0)
This option allows editing of the DIVISION field (.02) of the IV
"KRN",19,10167,1,2,0)
Room file (#59.5).  The purpose of the DIVISION field is to provide
"KRN",19,10167,1,3,0)
a way to tie outpatient IV data to a Medical Center Division for DSS
"KRN",19,10167,1,4,0)
purposes.
"KRN",19,10167,25)
ED^ECXDIVIV
"KRN",19,10167,"U")
ENTER/EDIT IV ROOM DIVISION
"KRN",19,10168,-1)
0^53
"KRN",19,10168,0)
ECX IV DIV PRINT^Print IV Room Worksheet^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10168,1,0)
^^5^5^2960319^^
"KRN",19,10168,1,1,0)
This option will print a worksheet listing all the entries in the 
"KRN",19,10168,1,2,0)
IV Room file (#59.5) of the Inpatient Medications Package.  This 
"KRN",19,10168,1,3,0)
worksheet is intended to be used by the DSS Manager to define the 
"KRN",19,10168,1,4,0)
DIVISION (as a pointer to the Medical Center Division file (#40.8))
"KRN",19,10168,1,5,0)
for each IV Room for DSS purposes.
"KRN",19,10168,25)
PRT^ECXDIVIV
"KRN",19,10168,"U")
PRINT IV ROOM WORKSHEET
"KRN",19,10169,-1)
0^97
"KRN",19,10169,0)
ECXWRD^Active MAS Wards for Fiscal Year Print^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10169,1,0)
^^7^7^2980721^^^
"KRN",19,10169,1,1,0)
This option prints a list of all MAS wards that were active at any time 
"KRN",19,10169,1,2,0)
during the current fiscal year.  The list is sorted by Medical Center 
"KRN",19,10169,1,3,0)
Division and displays the pointer to the HOSPITAL LOCATION file (#44),
"KRN",19,10169,1,4,0)
the service and specialty associated with the ward in the WARD LOCATION
"KRN",19,10169,1,5,0)
file (#42), and the DSS Department code associated with the ward in the
"KRN",19,10169,1,6,0)
DSS WARD file (#727.4).
"KRN",19,10169,1,7,0)
      
"KRN",19,10169,25)
EN^ECXWRD
"KRN",19,10169,"U")
ACTIVE MAS WARDS FOR FISCAL YE
"KRN",19,10170,-1)
0^84
"KRN",19,10170,0)
ECXQSR^QUASAR Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10170,1,0)
^^4^4^2961121^^
"KRN",19,10170,1,1,0)
This option allows you to extract Audiology and Speech Pathology
"KRN",19,10170,1,2,0)
clinic visit data for a selected date range. This data is stored
"KRN",19,10170,1,3,0)
in the QUASAR EXTRACT (#727.825) file until it is transmitted to
"KRN",19,10170,1,4,0)
the commercial vendor.
"KRN",19,10170,25)
BEG^ECXQSR
"KRN",19,10170,"U")
QUASAR EXTRACT
"KRN",19,10171,-1)
0^38
"KRN",19,10171,0)
ECX QSR SOURCE AUDIT^QUASAR (ECQ) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10171,1,0)
^^16^16^2971107^
"KRN",19,10171,1,1,0)
This option will generate a report from the QUASAR EXTRACT file
"KRN",19,10171,1,2,0)
(#727.825) which will allow the DSS extract manager to verify
"KRN",19,10171,1,3,0)
extract data before transmission to the Austin Automation Center.
"KRN",19,10171,1,4,0)
  
"KRN",19,10171,1,5,0)
The following VistA application report should be of assistance
"KRN",19,10171,1,6,0)
in the verification process:
"KRN",19,10171,1,7,0)
  
"KRN",19,10171,1,8,0)
Report Title - Audiology & Speech Pathology Procedure Statistics for
"KRN",19,10171,1,9,0)
                 All Clinicians
"KRN",19,10171,1,10,0)
               Audiology & Speech Pathology Procedure Statistics for
"KRN",19,10171,1,11,0)
                 All Other Providers
"KRN",19,10171,1,12,0)
Menu Option -  Statistics by Procedure [ACKQAS PROC STATS]
"KRN",19,10171,1,13,0)
  
"KRN",19,10171,1,14,0)
Be sure that the extract audit report and the external application
"KRN",19,10171,1,15,0)
report are generated for the same date or date range and the same
"KRN",19,10171,1,16,0)
division (if applicable).
"KRN",19,10171,25)
EN^ECXAECQ
"KRN",19,10171,"U")
QUASAR (ECQ) EXTRACT AUDIT
"KRN",19,10172,-1)
0^77
"KRN",19,10172,0)
ECXNDC^Pharmacy NDC Lookup^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10172,1,0)
^^7^7^2960829^
"KRN",19,10172,1,1,0)
This option will allow lookups on the local DRUG file (#50) using NDCs
"KRN",19,10172,1,2,0)
from DSS Pharmacy Feeder Keys that have been rejected because the 1st
"KRN",19,10172,1,3,0)
seven characters are zeros (Ex. "0000000000003073531").  This would occur
"KRN",19,10172,1,4,0)
when a pharmacy item has not been matched to NDF.  To use this option,
"KRN",19,10172,1,5,0)
please enter the NDC (last twelve characters) from a rejected feeder key. 
"KRN",19,10172,1,6,0)
This will display the following information from the local DRUG file
"KRN",19,10172,1,7,0)
(#50): LOCAL GENERIC NAME, DISPENSE UNIT, and PRICE PER DISPENSE UNIT.
"KRN",19,10172,25)
EN^ECXNDC
"KRN",19,10172,"U")
PHARMACY NDC LOOKUP
"KRN",19,10173,-1)
0^23
"KRN",19,10173,0)
ECX SETUP CLINIC^Setup for DSS Clinic Information^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10173,1,0)
^19.06^2^2^3050202^^^^
"KRN",19,10173,1,1,0)
This menu provides access to the various options needed to accurately
"KRN",19,10173,1,2,0)
define DSS clinic information.
"KRN",19,10173,10,0)
^19.01IP^6^6
"KRN",19,10173,10,1,0)
10166^1^5
"KRN",19,10173,10,1,"^")
ECX NATIONAL CLINIC
"KRN",19,10173,10,2,0)
10121^2^10
"KRN",19,10173,10,2,"^")
ECXSCLOAD
"KRN",19,10173,10,3,0)
10122^3^15
"KRN",19,10173,10,3,"^")
ECXSCLIST
"KRN",19,10173,10,4,0)
10123^4^20
"KRN",19,10173,10,4,"^")
ECXSCEDIT
"KRN",19,10173,10,5,0)
10135^5^25
"KRN",19,10173,10,5,"^")
ECXSCAPPROV
"KRN",19,10173,10,6,0)
12461^6^30
"KRN",19,10173,10,6,"^")
ECX CLN STOP REP
"KRN",19,10173,99)
60309,26450
"KRN",19,10173,"U")
SETUP FOR DSS CLINIC INFORMATI
"KRN",19,10174,-1)
0^26
"KRN",19,10174,0)
ECX SETUP INP MEDS^Setup for Inpatient Medications Information^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10174,1,0)
^^2^2^2961004^
"KRN",19,10174,1,1,0)
This menu provides access to the various options needed to accurately
"KRN",19,10174,1,2,0)
define DSS Inpatient Medications pharmacy information.
"KRN",19,10174,10,0)
^19.01IP^3^3
"KRN",19,10174,10,1,0)
10168^1^5
"KRN",19,10174,10,1,"^")
ECX IV DIV PRINT
"KRN",19,10174,10,2,0)
10167^2^10
"KRN",19,10174,10,2,"^")
ECX IV DIV EDIT
"KRN",19,10174,10,3,0)
10172^3^15
"KRN",19,10174,10,3,"^")
ECXNDC
"KRN",19,10174,99)
60309,26437
"KRN",19,10174,"U")
SETUP FOR INPATIENT MEDICATION
"KRN",19,10175,-1)
0^25
"KRN",19,10175,0)
ECX SETUP INP CENSUS^Setup for Inpatient Census Information^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10175,1,0)
^^2^2^2961108^^^
"KRN",19,10175,1,1,0)
This menu provides access to the various options needed to accurately
"KRN",19,10175,1,2,0)
define and create DSS Inpatient Census information.
"KRN",19,10175,10,0)
^19.01IP^4^4
"KRN",19,10175,10,1,0)
10163^1^5
"KRN",19,10175,10,1,"^")
ECXTRYIT
"KRN",19,10175,10,2,0)
10137^2^10
"KRN",19,10175,10,2,"^")
ECXSETUP
"KRN",19,10175,10,3,0)
10169^3^15
"KRN",19,10175,10,3,"^")
ECXWRD
"KRN",19,10175,10,4,0)
10176^4^20
"KRN",19,10175,10,4,"^")
ECXPCT
"KRN",19,10175,99)
60309,26437
"KRN",19,10175,"U")
SETUP FOR INPATIENT CENSUS INF
"KRN",19,10176,-1)
0^80
"KRN",19,10176,0)
ECXPCT^Primary Care Team Print^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10176,1,0)
^^4^4^2961121^^
"KRN",19,10176,1,1,0)
This option prints a list of all Primary Care Teams.  The list is sorted
"KRN",19,10176,1,2,0)
alphabetically by TEAM name and displays the pointer to the TEAM file
"KRN",19,10176,1,3,0)
(#404.51). The intent of this option is to provide help for building
"KRN",19,10176,1,4,0)
primary care teams on the commercial DSS System.
"KRN",19,10176,25)
EN^ECXPCT
"KRN",19,10176,"U")
PRIMARY CARE TEAM PRINT
"KRN",19,10177,-1)
0^24
"KRN",19,10177,0)
ECX SETUP LAB^Setup for DSS Lab Results Information^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10177,1,0)
^^2^2^2961108^
"KRN",19,10177,1,1,0)
This menu provides access to the options needed to accurately define DSS
"KRN",19,10177,1,2,0)
Lab Results Extract information.
"KRN",19,10177,10,0)
^19.01IP^2^2
"KRN",19,10177,10,1,0)
10165^1^5
"KRN",19,10177,10,1,"^")
ECXLABRS
"KRN",19,10177,10,2,0)
10178^2^10
"KRN",19,10177,10,2,"^")
ECXLARP
"KRN",19,10177,99)
60309,26437
"KRN",19,10177,"U")
SETUP FOR DSS LAB RESULTS INFO
"KRN",19,10178,-1)
0^71
"KRN",19,10178,0)
ECXLARP^Print DSS Lab Test Datasheet^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10178,1,0)
^19.06^5^5^3050513^^^^
"KRN",19,10178,1,1,0)
This option prints a list of the DSS Lab Tests used for the Lab Results
"KRN",19,10178,1,2,0)
Extract (LAR).  It will display the local lab data names for each test.
"KRN",19,10178,1,3,0)
It will also show the blood, urine and feces specimens used by your 
"KRN",19,10178,1,4,0)
facility.  This information is critical for generating the DSS Lab 
"KRN",19,10178,1,5,0)
Results Extract.
"KRN",19,10178,25)
EN^ECXLARP
"KRN",19,10178,"U")
PRINT DSS LAB TEST DATASHEET
"KRN",19,10850,-1)
0^43
"KRN",19,10850,0)
ECX DIVISION ID^Enter/Edit DSS Division Identifier^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10850,1,0)
^19.06^3^3^3020715^^^
"KRN",19,10850,1,1,0)
This option should only be used by the DSS Site Manager to enter or
"KRN",19,10850,1,2,0)
edit the DSS Division Identifier associated with any medical center
"KRN",19,10850,1,3,0)
division.
"KRN",19,10850,25)
EN^ECXDVSNX
"KRN",19,10850,"U")
ENTER/EDIT DSS DIVISION IDENTI
"KRN",19,10851,-1)
0^44
"KRN",19,10851,0)
ECX WARD DSSDEPT^Enter/Edit DSS Ward^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10851,1,0)
^19.06^3^3^3020731^^
"KRN",19,10851,1,1,0)
This option should only be used by the DSS Site Manager to enter or
"KRN",19,10851,1,2,0)
edit the DSS Department code associated with each medical center
"KRN",19,10851,1,3,0)
ward.
"KRN",19,10851,25)
EN^ECXWRDX
"KRN",19,10851,"U")
ENTER/EDIT DSS WARD
"KRN",19,10853,-1)
0^11
"KRN",19,10853,0)
ECX DSSDEPT MGMT^DSS Department Management^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10853,1,0)
^19.06^2^2^3030714^^^^
"KRN",19,10853,1,1,0)
This menu holds the set of options needed for DSS Department management
"KRN",19,10853,1,2,0)
functions.
"KRN",19,10853,10,0)
^19.01IP^2^2
"KRN",19,10853,10,1,0)
10850^1^1
"KRN",19,10853,10,1,"^")
ECX DIVISION ID
"KRN",19,10853,10,2,0)
10851^2^2
"KRN",19,10853,10,2,"^")
ECX WARD DSSDEPT
"KRN",19,10853,99)
60309,26441
"KRN",19,10853,"U")
DSS DEPARTMENT MANAGEMENT
"KRN",19,10854,-1)
0^81
"KRN",19,10854,0)
ECXPRO^Prosthetics Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10854,1,0)
^^1^1^2990422^^
"KRN",19,10854,1,1,0)
This option will execute the Prosthetics extract.
"KRN",19,10854,10.1)
Prosthetics Extract
"KRN",19,10854,25)
BEG^ECXPRO
"KRN",19,10854,"U")
PROSTHETICS EXTRACT
"KRN",19,10855,-1)
0^39
"KRN",19,10855,0)
ECX PRO SOURCE AUDIT^Prosthetics (PRO) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10855,1,0)
^^2^2^3000302^^
"KRN",19,10855,1,1,0)
This option will generate an audit report of the prosthetics information
"KRN",19,10855,1,2,0)
that has been extracted.
"KRN",19,10855,10.1)
PRO Extract Audit
"KRN",19,10855,25)
EN^ECXAPRO
"KRN",19,10855,"U")
PROSTHETICS (PRO) EXTRACT AUDI
"KRN",19,11176,-1)
0^21
"KRN",19,11176,0)
ECX PRO YTD REPORT^Prosthetics (PRO) YTD HCPCS Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,11176,1,0)
^19.06^11^11^3030714^^^
"KRN",19,11176,1,1,0)
This report option will list PRO extract data by HCPCS code.  Data is
"KRN",19,11176,1,2,0)
accumulated from all extract records for extracts dated within the
"KRN",19,11176,1,3,0)
beginning and end of a fiscal year.  
"KRN",19,11176,1,4,0)
 
"KRN",19,11176,1,5,0)
If the site is non-divisional, data is reported under the facility
"KRN",19,11176,1,6,0)
Station Number.
"KRN",19,11176,1,7,0)
 
"KRN",19,11176,1,8,0)
If the site is multi-divisional (for Prosthetics), data can be
"KRN",19,11176,1,9,0)
reported for any one division, or for all divisions belonging to
"KRN",19,11176,1,10,0)
the same primary station/division.  If data is from all divisions, 
"KRN",19,11176,1,11,0)
then data is reported under the Station Number of the Primary Division.
"KRN",19,11176,10.1)
PRO YTD Report
"KRN",19,11176,25)
EN^ECXCPRO
"KRN",19,11176,"U")
PROSTHETICS (PRO) YTD HCPCS RE
"KRN",19,11237,-1)
0^22
"KRN",19,11237,0)
ECX PRO LAB REPORT^Prosthetics (PRO) YTD Laboratory Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,11237,1,0)
^^10^10^2990324^^^
"KRN",19,11237,1,1,0)
This report option will list PRO extract data by HCPCS code for items 
"KRN",19,11237,1,2,0)
produced within the Prosthetics laboratories of the facilty.  Data is
"KRN",19,11237,1,3,0)
accumulated from all extract records for extracts dated within the 
"KRN",19,11237,1,4,0)
beginning and end of a fiscal year.  
"KRN",19,11237,1,5,0)
  
"KRN",19,11237,1,6,0)
If the site is non-divisional, data is reported under the facility Station
"KRN",19,11237,1,7,0)
Number.
"KRN",19,11237,1,8,0)
  
"KRN",19,11237,1,9,0)
If the site is multi-divisional (for Prosthetics), data is reported for
"KRN",19,11237,1,10,0)
for all divisions belonging to the same primary station/division.
"KRN",19,11237,25)
EN^ECXLPRO
"KRN",19,11237,"U")
PROSTHETICS (PRO) YTD LABORATO
"KRN",19,11347,-1)
0^76
"KRN",19,11347,0)
ECXMTL^Mental Health Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,11347,1,0)
^^4^4^2990527^
"KRN",19,11347,1,1,0)
This option provides the extract manager the ability to extract Mental 
"KRN",19,11347,1,2,0)
Health diagnostic data for a selected date range. This data is stored 
"KRN",19,11347,1,3,0)
in the MENTAL HEALTH EXTRACT file (#727.812) until the data is 
"KRN",19,11347,1,4,0)
transmitted to the commercial vendor.  
"KRN",19,11347,25)
BEG^ECXMTL
"KRN",19,11347,"U")
MENTAL HEALTH EXTRACT
"KRN",19,11348,-1)
0^33
"KRN",19,11348,0)
ECX MTL SOURCE AUDIT^Mental Health (MTL) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,11348,1,0)
^^16^16^2990603^
"KRN",19,11348,1,1,0)
This option will generate a report from the MENTAL HEALTH EXTRACT
"KRN",19,11348,1,2,0)
file (#727.812) which will allow the DSS extract manager to
"KRN",19,11348,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,11348,1,4,0)
Center.
"KRN",19,11348,1,5,0)
  
"KRN",19,11348,1,6,0)
The following VistA application reports should be of assistance
"KRN",19,11348,1,7,0)
in the verification process:
"KRN",19,11348,1,8,0)
  
"KRN",19,11348,1,9,0)
Report Title - USAGE STATISTICS
"KRN",19,11348,1,10,0)
Menu Option -  Usage Statistics [YSMUSE]
"KRN",19,11348,1,11,0)
   
"KRN",19,11348,1,12,0)
Report Title - Addiction Severity Index Status Report
"KRN",19,11348,1,13,0)
Menu Option - Site Report by Date [YSAS MANAGEMENT REPORT]
"KRN",19,11348,1,14,0)
  
"KRN",19,11348,1,15,0)
Be sure that the extract audit report and the external application
"KRN",19,11348,1,16,0)
report are generated for the same date or date range.
"KRN",19,11348,25)
EN^ECXAMTL
"KRN",19,11348,"U")
MENTAL HEALTH (MTL) EXTRACT AU
"KRN",19,12021,-1)
0^37
"KRN",19,12021,0)
ECX PHA SOURCE AUDIT^Pharmacy Extracts Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12021,1,0)
^19.06^7^7^3060630^^^^
"KRN",19,12021,1,1,0)
This menu option allows the user to select one of the three Pharmacy
"KRN",19,12021,1,2,0)
Extracts to generate a report of extract records with unusual volumes
"KRN",19,12021,1,3,0)
and/or Feeder Keys of all zeros.  At the beginning of each report, after
"KRN",19,12021,1,4,0)
the extract and date range has been specified, statistics will be
"KRN",19,12021,1,5,0)
displayed on the volume to allow the user to decide if further auditing is
"KRN",19,12021,1,6,0)
required by continuing with the Unusual Volume Report and/or the Zero
"KRN",19,12021,1,7,0)
Feeder Keys Report.
"KRN",19,12021,25)
EN^ECXAPHA
"KRN",19,12021,99)
58653,54105
"KRN",19,12021,"U")
PHARMACY EXTRACTS AUDIT
"KRN",19,12024,-1)
0^14
"KRN",19,12024,0)
ECX PHA FKEY^Pharmacy Extracts Incomplete Feeder Key Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12024,25)
EN^ECXDRUG1
"KRN",19,12024,"U")
PHARMACY EXTRACTS INCOMPLETE F
"KRN",19,12382,-1)
0^46
"KRN",19,12382,0)
ECX LAB RESULTS TRANS EDIT^Add/Edit Lab Results Translation Table^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,12382,25)
EN^ECXLRED
"KRN",19,12382,"U")
ADD/EDIT LAB RESULTS TRANSLATI
"KRN",19,12383,-1)
0^47
"KRN",19,12383,0)
ECX UNTRANS LAR REPORT^Lab Results Extract Untranslatable Results Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12383,25)
EN^ECXALAR
"KRN",19,12383,"U")
LAB RESULTS EXTRACT UNTRANSLAT
"KRN",19,12456,-1)
0^9
"KRN",19,12456,0)
ECX CBOC REPORT^CBOC Activity Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12456,1,0)
^19.06^6^6^3030923^^^^
"KRN",19,12456,1,1,0)
This option displays all records from the CLI Extract that have a 
"KRN",19,12456,1,2,0)
Community Based Outpatient Clinic (CBOC) status of Y (=yes).  The 
"KRN",19,12456,1,3,0)
report is grouped by Feeder Key,Division, and Clinic; it lists the P
"KRN",19,12456,1,4,0)
atient Name, SSN, and Date of Visit for each record.  Totals for 
"KRN",19,12456,1,5,0)
unique SSNs and Visits will be printed for each Clinic, Division, 
"KRN",19,12456,1,6,0)
and Feeder Key, as well as overall totals for the station.
"KRN",19,12456,25)
EN^ECXUCBOC
"KRN",19,12456,"U")
CBOC ACTIVITY REPORT
"KRN",19,12458,-1)
0^20
"KRN",19,12458,0)
ECX PRO COST^Prosthetic Extract Unusual Cost Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12458,1,0)
0
"KRN",19,12458,25)
EN^ECXUPRO
"KRN",19,12458,"U")
PROSTHETIC EXTRACT UNUSUAL COS
"KRN",19,12459,-1)
0^27
"KRN",19,12459,0)
ECX SUR VOL^Surgery Extract Unusual Volume Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12459,1,0)
^19.06^9^9^3030715^^
"KRN",19,12459,1,1,0)
This option creates a report that lists unusual volumes that would be generated
"KRN",19,12459,1,2,0)
by the Surgery extract (SUR) as determined by a user-defined threshold value.
"KRN",19,12459,1,3,0)
It should be run prior to the generation of the actual extract to identify and
"KRN",19,12459,1,4,0)
fix, as necessary, any volumes determined to be erroneous.
"KRN",19,12459,1,5,0)

"KRN",19,12459,1,6,0)
Unusual volumes are defined as Operation Time, Patient Time, or Anesthesia Time
"KRN",19,12459,1,7,0)
fields greater than the threshold value.
"KRN",19,12459,1,8,0)

"KRN",19,12459,1,9,0)
The report is sorted by descending Volume and Case Number.
"KRN",19,12459,25)
EN^ECXUSUR
"KRN",19,12459,"U")
SURGERY EXTRACT UNUSUAL VOLUME
"KRN",19,12461,-1)
0^48
"KRN",19,12461,0)
ECX CLN STOP REP^DSS Identifier Non-Conforming Clinics Report^^R^^^^^^^y^DSS EXTRACTS
"KRN",19,12461,1,0)
^19.06^5^5^3030811^^^^
"KRN",19,12461,1,1,0)
This option synchronizes the Primary and Secondary Stop Codes found 
"KRN",19,12461,1,2,0)
in the Clinics and Stop Codes File #728.44 with the Primary and 
"KRN",19,12461,1,3,0)
Secondary Stop codes found in the Hospital Location File #44.  It 
"KRN",19,12461,1,4,0)
produces a report of the Clinics that are non-conforming to the stop 
"KRN",19,12461,1,5,0)
code restriction types.
"KRN",19,12461,10.1)
DSS Id. Non-Conform Cln Rep
"KRN",19,12461,25)
ECXSCRP
"KRN",19,12461,"U")
DSS IDENTIFIER NON-CONFORMING 
"KRN",19,12462,-1)
0^51
"KRN",19,12462,0)
ECX FISCAL YEAR EXTRACT^Extract data using chosen fiscal year logic^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,12462,1,0)
^19.06^7^7^3030915^^
"KRN",19,12462,1,1,0)
This option allows the user to run any nationally supported DSS extract
"KRN",19,12462,1,2,0)
for any timeframe using user selected fiscal year extract logic.  The
"KRN",19,12462,1,3,0)
extracts were baselined to FY 2003 logic.
"KRN",19,12462,1,4,0)
 
"KRN",19,12462,1,5,0)
Extracts for current fiscal year data using current fiscal year logic
"KRN",19,12462,1,6,0)
will go to AAC production queue; everything else goes to the AAC test 
"KRN",19,12462,1,7,0)
queue.
"KRN",19,12462,25)
EN^ECXTREX
"KRN",19,12462,"U")
EXTRACT DATA USING CHOSEN FISC
"KRN",19,12463,-1)
0^10
"KRN",19,12463,0)
ECX CPT INQUIRY^CPT Inquiry^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12463,1,0)
^19.06^2^2^3030923^^^
"KRN",19,12463,1,1,0)
This inquiry allows the user to select a CPT code, then displays the Short
"KRN",19,12463,1,2,0)
Name, Category, and Description for the selected code.
"KRN",19,12463,25)
EN^ECXUCPT
"KRN",19,12463,"U")
CPT INQUIRY
"KRN",19,12464,-1)
0^15
"KRN",19,12464,0)
ECX PHA VOL^Pharmacy Extracts Unusual Volume Report^^R^^^^^^^^
"KRN",19,12464,25)
EN^ECXAPHA
"KRN",19,12464,99)
59457,58244
"KRN",19,12464,"U")
PHARMACY EXTRACTS UNUSUAL VOLU
"KRN",19,12503,-1)
0^28
"KRN",19,12503,0)
ECX SUR VOL REPORT^SUR Volume Report^^R^^^^^^^^DSS EXTRACTS^^1^1
"KRN",19,12503,1,0)
^19.06^3^3^3050510^^^^
"KRN",19,12503,1,1,0)
This option creates a report that lists volumes for all surgical 
"KRN",19,12503,1,2,0)
cases that would be generated by the Surgery extract (SUR) for
"KRN",19,12503,1,3,0)
transmission to AAC for review.
"KRN",19,12503,15)
K FLAG
"KRN",19,12503,20)
S FLAG=1
"KRN",19,12503,25)
EN^ECXUSUR
"KRN",19,12503,"U")
SUR VOLUME REPORT
"KRN",19,12504,-1)
0^19
"KRN",19,12504,0)
ECX PRO COST REPORT^Cost by PSAS HCPC Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12504,1,0)
^19.06^2^2^3041105^^
"KRN",19,12504,1,1,0)
This option generates a report for prosthetics and it includes all
"KRN",19,12504,1,2,0)
expenditures for a given time frame.
"KRN",19,12504,25)
EN^ECXPROCT
"KRN",19,12504,"U")
COST BY PSAS HCPC REPORT
"KRN",19,13053,-1)
0^72
"KRN",19,13053,0)
ECXLBB^Blood Bank Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13053,1,0)
^^4^4^3041209^
"KRN",19,13053,1,1,0)
This option provides the extract manager the ability to extract blood bank
"KRN",19,13053,1,2,0)
data for a selected date range. This data is stored in the BLOOD BANK
"KRN",19,13053,1,3,0)
EXTRACT file (#727.829) until the data is transmitted to the commercial
"KRN",19,13053,1,4,0)
vendor.
"KRN",19,13053,25)
BEG^ECXLBB
"KRN",19,13053,"U")
BLOOD BANK EXTRACT
"KRN",19,13054,-1)
0^98
"KRN",19,13054,0)
ECX LBB SOURCE AUDIT^Laboratory Blood Bank (LBB) Extract Audit^^R^^^^^^^^DSS EXTRACTS^^
"KRN",19,13054,1,0)
^19.06^5^5^3070709^^^^
"KRN",19,13054,1,1,0)
This report is to provide DSS on-site support with a list of unmatched 
"KRN",19,13054,1,2,0)
blood products.  The report will contain those records that do not have a 
"KRN",19,13054,1,3,0)
value in either the DSS Product Dept or DSS IP # fields.  The result 
"KRN",19,13054,1,4,0)
report will enable the DSS on-site support team to correct the unmatched 
"KRN",19,13054,1,5,0)
blood products prior to running the LBB Extract.
"KRN",19,13054,20)

"KRN",19,13054,25)
ECXPLBB
"KRN",19,13054,"U")
LABORATORY BLOOD BANK (LBB) EX
"KRN",19,13242,-1)
0^99
"KRN",19,13242,0)
ECXNUT^Nutrition Extract^^A^^^^^^^^DSS EXTRACTS^^1
"KRN",19,13242,1,0)
^^1^1^3060413^
"KRN",19,13242,1,1,0)
This option will execute the Nutrition Extract.
"KRN",19,13242,20)
D BEG^ECXNUT
"KRN",19,13242,"U")
NUTRITION EXTRACT
"KRN",19,13243,-1)
0^60
"KRN",19,13243,0)
ECX PHA VOL EDIT LOG^Pharmacy Volume Edit Log^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13243,1,0)
^19.06^3^3^3060721^^^
"KRN",19,13243,1,1,0)
This option will allow authorized users to view edit changes made to the 
"KRN",19,13243,1,2,0)
Pharmacy extracts (IVP, PRE and UDP) through the Pharmacy Edit Option 
"KRN",19,13243,1,3,0)
[ECX PHA VOL EDIT].
"KRN",19,13243,25)
EN^ECXPHAU
"KRN",19,13243,"U")
PHARMACY VOLUME EDIT LOG
"KRN",19,13244,-1)
0^59
"KRN",19,13244,0)
ECX PHA VOL EDIT^Pharmacy Volume Edit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13244,1,0)
^19.06^4^4^3061019^^
"KRN",19,13244,1,1,0)
This option will allow authorized users to edit the Pharmacy extracts
"KRN",19,13244,1,2,0)
(IVP, PRE or UDP). Corrections will be allowed to the Quantity field 
"KRN",19,13244,1,3,0)
for the IVP, PRE and UDP extracts. Additionally, correction will be 
"KRN",19,13244,1,4,0)
allowed to the Unit of Issue field for the PRE extract.
"KRN",19,13244,25)
EN^ECXPHVE
"KRN",19,13244,"U")
PHARMACY VOLUME EDIT
"KRN",19,13245,-1)
0^13
"KRN",19,13245,0)
ECX PHA EDIT^Pharmacy Edit and Edit Log^^M^^ECXPVE^^^^^^DSS EXTRACTS
"KRN",19,13245,1,0)
^^3^3^3060830^
"KRN",19,13245,1,1,0)
This option will allow authorized users (i.e. holders of the ECXPVE 
"KRN",19,13245,1,2,0)
key) to edit the Pharmacy extracts (IVP, PRE or UDP). It will also allow
"KRN",19,13245,1,3,0)
the user to view the Pharmacy log with edit changes.
"KRN",19,13245,10,0)
^19.01IP^2^2
"KRN",19,13245,10,1,0)
13244^1
"KRN",19,13245,10,1,"^")
ECX PHA VOL EDIT
"KRN",19,13245,10,2,0)
13243^2
"KRN",19,13245,10,2,"^")
ECX PHA VOL EDIT LOG
"KRN",19,13245,25)

"KRN",19,13245,99)
60716,30272
"KRN",19,13245,"U")
PHARMACY EDIT AND EDIT LOG
"KRN",19,13246,-1)
0^16
"KRN",19,13246,0)
ECX PHA UDP/IVP SOURCE AUDIT^UDP/IVP Source Audit Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13246,1,0)
^^2^2^3060628^
"KRN",19,13246,1,1,0)
This menu option allows DSS site teams to periodically check the 
"KRN",19,13246,1,2,0)
availability of UDP & IVP source data to avoid data from being lost.
"KRN",19,13246,25)
EN^ECXPHAA
"KRN",19,13246,"U")
UDP/IVP SOURCE AUDIT REPORT
"KRN",19,13255,-1)
0^57
"KRN",19,13255,0)
ECX NUT PRO EDIT^Enter/Edit Nutrition Product Worksheet^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13255,1,0)
^19.06^3^3^3060612^^^^
"KRN",19,13255,1,1,0)
This option allows DSS site teams to assign standardized DSS Product 
"KRN",19,13255,1,2,0)
values to each Diet, Supplemental Feeding, Tube Feeding and Standing 
"KRN",19,13255,1,3,0)
Orders.
"KRN",19,13255,25)
EN^ECXNUTPE
"KRN",19,13255,"U")
ENTER/EDIT NUTRITION PRODUCT W
"KRN",19,13256,-1)
0^58
"KRN",19,13256,0)
ECX NUT PRO PRINT^Print Nutrition Product Worksheet^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13256,1,0)
^^8^8^3060612^
"KRN",19,13256,1,1,0)
This option allows site teams to assign standardized DSS Product (Feeder 
"KRN",19,13256,1,2,0)
Key) values to each Diet, Supplemental Feeding, Tube Feeding and Standing
"KRN",19,13256,1,3,0)
Order. This worksheet is divided into four categories:
"KRN",19,13256,1,4,0)
 
"KRN",19,13256,1,5,0)
Production Diets
"KRN",19,13256,1,6,0)
Supplemental Feedings
"KRN",19,13256,1,7,0)
Tube Feedings
"KRN",19,13256,1,8,0)
Standing Orders.
"KRN",19,13256,25)
EN^ECXNUTPP
"KRN",19,13256,"U")
PRINT NUTRITION PRODUCT WORKSH
"KRN",19,13257,-1)
0^55
"KRN",19,13257,0)
ECX NUT DIV EDIT^Enter/Edit Nutrition Division Worksheet^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13257,1,0)
^19.06^3^3^3060612^^^^
"KRN",19,13257,1,1,0)
This option allows DSS site teams to assign standardized Division values 
"KRN",19,13257,1,2,0)
of the Institution file (#4) to all locally named Production and Delivery 
"KRN",19,13257,1,3,0)
locations.
"KRN",19,13257,25)
EN^ECXNUTDE
"KRN",19,13257,"U")
ENTER/EDIT NUTRITION DIVISION 
"KRN",19,13258,-1)
0^56
"KRN",19,13258,0)
ECX NUT DIV PRINT^Print Nutrition Division Worksheet^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13258,1,0)
^^3^3^3060612^
"KRN",19,13258,1,1,0)
This option allows DSS site teams to print a listing of all production and
"KRN",19,13258,1,2,0)
delivery location in the nutrition files (#119.71) and (#119.72) and there
"KRN",19,13258,1,3,0)
standardized associated division from the institution file (#4).
"KRN",19,13258,25)
EN^ECXNUTDP
"KRN",19,13258,"U")
PRINT NUTRITION DIVISION WORKS
"KRN",19,13259,-1)
0^12
"KRN",19,13259,0)
ECX NUTRITION WORKSHEETS^Nutrition Worksheets^^M^^^^^^^^DSS EXTRACTS
"KRN",19,13259,10,0)
^19.01IP^4^4
"KRN",19,13259,10,1,0)
13255^3^3
"KRN",19,13259,10,1,"^")
ECX NUT PRO EDIT
"KRN",19,13259,10,2,0)
13256^4^4
"KRN",19,13259,10,2,"^")
ECX NUT PRO PRINT
"KRN",19,13259,10,3,0)
13257^1^1
"KRN",19,13259,10,3,"^")
ECX NUT DIV EDIT
"KRN",19,13259,10,4,0)
13258^2^2
"KRN",19,13259,10,4,"^")
ECX NUT DIV PRINT
"KRN",19,13259,99)
60716,30272
"KRN",19,13259,"U")
NUTRITION WORKSHEETS
"KRN",19,13444,-1)
0^35
"KRN",19,13444,0)
ECX NUT SOURCE AUDIT^Nutrition (NUT) Extract Audit^^R^^^^^^^^DSS EXTRACTS^^
"KRN",19,13444,1,0)
^19.06^2^2^3070525^^
"KRN",19,13444,1,1,0)
The Nutrition (NUT) Extract audit report option is used to validate the 
"KRN",19,13444,1,2,0)
nutrition meal records from the NUTRITION EXTRACT file (#727.832).
"KRN",19,13444,20)

"KRN",19,13444,25)
EN^ECXANUT
"KRN",19,13444,"U")
NUTRITION (NUT) EXTRACT AUDIT
"KRN",19,13453,-1)
0^45
"KRN",19,13453,0)
ECX LAR SOURCE AUDIT^Laboratory Results (LAR) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13453,1,0)
^19.06^3^3^3070525^^^
"KRN",19,13453,1,1,0)
The Laboratory Results (LAR) Extract audit report option is used to
"KRN",19,13453,1,2,0)
validate the laboratory results records from the LAB RESULTS EXTRACT
"KRN",19,13453,1,3,0)
file (#727.824).
"KRN",19,13453,25)
EN^ECXLARA
"KRN",19,13453,"U")
LABORATORY RESULTS (LAR) EXTRA
"KRN",19,13455,-1)
0^4
"KRN",19,13455,0)
ECX LAB MAINTENACE^Laboratory^^M^^^^^^^^DSS EXTRACTS
"KRN",19,13455,10,0)
^19.01IP^2^2
"KRN",19,13455,10,1,0)
12383^2
"KRN",19,13455,10,1,"^")
ECX UNTRANS LAR REPORT
"KRN",19,13455,10,2,0)
12382^1
"KRN",19,13455,10,2,"^")
ECX LAB RESULTS TRANS EDIT
"KRN",19,13455,99)
60821,27733
"KRN",19,13455,"U")
LABORATORY
"KRN",19,13456,-1)
0^5
"KRN",19,13456,0)
ECX PHARMACY MAINTENANCE^Pharmacy^^M^^^^^^^^DSS EXTRACTS
"KRN",19,13456,10,0)
^19.01IP^4^4
"KRN",19,13456,10,1,0)
12024^2
"KRN",19,13456,10,1,"^")
ECX PHA FKEY
"KRN",19,13456,10,2,0)
12464^3
"KRN",19,13456,10,2,"^")
ECX PHA VOL
"KRN",19,13456,10,3,0)
13245^1
"KRN",19,13456,10,3,"^")
ECX PHA EDIT
"KRN",19,13456,10,4,0)
13246^4
"KRN",19,13456,10,4,"^")
ECX PHA UDP/IVP SOURCE AUDIT
"KRN",19,13456,99)
60821,27869
"KRN",19,13456,"U")
PHARMACY
"KRN",19,13457,-1)
0^7
"KRN",19,13457,0)
ECX PROSTHETICS MAINTENANCE^Prosthetics^^M^^^^^^^^DSS EXTRACTS
"KRN",19,13457,10,0)
^19.01IP^4^4
"KRN",19,13457,10,1,0)
11176^3
"KRN",19,13457,10,1,"^")
ECX PRO YTD REPORT
"KRN",19,13457,10,2,0)
11237^4
"KRN",19,13457,10,2,"^")
ECX PRO LAB REPORT
"KRN",19,13457,10,3,0)
12458^2
"KRN",19,13457,10,3,"^")
ECX PRO COST
"KRN",19,13457,10,4,0)
12504^1
"KRN",19,13457,10,4,"^")
ECX PRO COST REPORT
"KRN",19,13457,99)
60821,27980
"KRN",19,13457,"U")
PROSTHETICS
"KRN",19,13458,-1)
0^6
"KRN",19,13458,0)
ECX SURGERY MAINTENANCE^Surgery^^M^^^^^^^^DSS EXTRACTS
"KRN",19,13458,10,0)
^19.01IP^2^2
"KRN",19,13458,10,1,0)
12459^2
"KRN",19,13458,10,1,"^")
ECX SUR VOL
"KRN",19,13458,10,2,0)
12503^1
"KRN",19,13458,10,2,"^")
ECX SUR VOL REPORT
"KRN",19,13458,99)
60821,28022
"KRN",19,13458,"U")
SURGERY
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0^3010618^2980112^11714
"PKG",513,22,1,"PAH",1,0)
105^3071128
"PKG",513,22,1,"PAH",1,1,0)
^^1^1^3071128
"PKG",513,22,1,"PAH",1,1,1,0)
DSS FY08
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
49
"RTN","ECXADM")
0^24^B41911607^B36453744
"RTN","ECXADM",1,0)
ECXADM ;ALB/JAP,BIR/DMA,CML,PTD-Admissions Extract ; 10/15/07 12:14pm
"RTN","ECXADM",2,0)
 ;;3.0;DSS EXTRACTS;**1,4,11,8,13,24,33,39,46,71,84,92,107,105**;Dec 22, 1997;Build 70
"RTN","ECXADM",3,0)
BEG ;entry point from option
"RTN","ECXADM",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXADM",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXADM",6,0)
 Q
"RTN","ECXADM",7,0)
 ;
"RTN","ECXADM",8,0)
START ; start package specific extract
"RTN","ECXADM",9,0)
 S QFLG=0
"RTN","ECXADM",10,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXADM",11,0)
 F  S ECD=$O(^DGPM("ATT1",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D
"RTN","ECXADM",12,0)
 .F  S ECDA=$O(^DGPM("ATT1",ECD,ECDA)) Q:ECDA=""  D
"RTN","ECXADM",13,0)
 ..I $D(^DGPM(ECDA,0)) D
"RTN","ECXADM",14,0)
 ...S EC=^DGPM(ECDA,0),ECXDFN=$P(EC,U,3) D GET
"RTN","ECXADM",15,0)
 Q
"RTN","ECXADM",16,0)
 ;
"RTN","ECXADM",17,0)
GET ;gather extract data
"RTN","ECXADM",18,0)
 N ADM,W,X,ECXNPRFI,ECXATTPC,ECXPRVPC,ECXEST
"RTN","ECXADM",19,0)
 ;patient demographics
"RTN","ECXADM",20,0)
 S ECXERR=0 D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXADM",21,0)
 Q:ECXERR
"RTN","ECXADM",22,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXADM",23,0)
 S ECXFAC=$P($G(^DIC(42,+$P(EC,U,6),0)),U,11)
"RTN","ECXADM",24,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)  ;Get production division
"RTN","ECXADM",25,0)
 ;admission data
"RTN","ECXADM",26,0)
 S ELGA=$P($G(^DIC(8,+$P(EC,U,20),0)),U,9)
"RTN","ECXADM",27,0)
 I ELGA S ELGA=$$ELIG^ECXUTL3(ELGA,ECXSVC)
"RTN","ECXADM",28,0)
 S (ECDRG,ECDIA,ECXSADM)="",ECPTF=+$P(EC,U,16) I ECPTF,$D(^DGPT(ECPTF,"M")) D PTF
"RTN","ECXADM",29,0)
 ;get encounter classification
"RTN","ECXADM",30,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC)="",ECXVISIT=$P(EC,U,27)
"RTN","ECXADM",31,0)
 I ECXVISIT'="" D
"RTN","ECXADM",32,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXADM",33,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXADM",34,0)
 .S ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXADM",35,0)
 .S ECXECE=$G(ECXVIST("PGE"))
"RTN","ECXADM",36,0)
 ;use movement record date & time
"RTN","ECXADM",37,0)
 S ADM=$$INP^ECXUTL2(ECXDFN,ECD)
"RTN","ECXADM",38,0)
 S ECXA=$P(ADM,U),ECXMN=$P(ADM,U,2),ECXSPC=$P(ADM,U,3)
"RTN","ECXADM",39,0)
 S (ECXADMDT,ECXDATE)=$P(ADM,U,4)
"RTN","ECXADM",40,0)
 ;if movement# doesn't match cross-ref ien, then quit
"RTN","ECXADM",41,0)
 Q:ECXMN'=ECDA
"RTN","ECXADM",42,0)
 S ECTM=$$ECXTIME^ECXUTL(ECXDATE)
"RTN","ECXADM",43,0)
 S ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXADM",44,0)
 S W=$P(ADM,U,9)
"RTN","ECXADM",45,0)
 S ECXWRD=$P(W,";",1),ECXFAC=$P(W,";",2),ECXDSSD=$P(W,";",3)
"RTN","ECXADM",46,0)
 S ECXPRV=$P(ADM,U,7),ECXPRNPI="",ECXATT=$P(ADM,U,8),ECXATNPI=""
"RTN","ECXADM",47,0)
 S ECXDOM=$P(ADM,U,10),ECXATTPC=$P(ADM,U,12),ECXPRVPC=$P(ADM,U,11)
"RTN","ECXADM",48,0)
 N ECXUSRTN
"RTN","ECXADM",49,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXATT,2,$L(ECXATT)),ECD)
"RTN","ECXADM",50,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",51,0)
 S ECATTNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",52,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXPRV,2,$L(ECXPRV)),ECD)
"RTN","ECXADM",53,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",54,0)
 S ECPWNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",55,0)
 ;
"RTN","ECXADM",56,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXADM",57,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXSPC)
"RTN","ECXADM",58,0)
 ;
"RTN","ECXADM",59,0)
 ;- Patient Type
"RTN","ECXADM",60,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(ECXDFN)
"RTN","ECXADM",61,0)
 ;
"RTN","ECXADM",62,0)
 ;- If null encounter number, don't file record
"RTN","ECXADM",63,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,,ECXSPC,ECXOBS,ECHEAD,,)
"RTN","ECXADM",64,0)
 D:ECXENC'="" FILE
"RTN","ECXADM",65,0)
 Q
"RTN","ECXADM",66,0)
 ;
"RTN","ECXADM",67,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographic data
"RTN","ECXADM",68,0)
 N OK,X
"RTN","ECXADM",69,0)
 K ECXPAT
"RTN","ECXADM",70,0)
 S ECXDATE=$P(ECXDATE,".")
"RTN","ECXADM",71,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;2;3;4;5",.ECXPAT)
"RTN","ECXADM",72,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXADM",73,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXADM",74,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXADM",75,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXADM",76,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXADM",77,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXADM",78,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXADM",79,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXADM",80,0)
 S ECXVNS=ECXPAT("VIETNAM")
"RTN","ECXADM",81,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXADM",82,0)
 S ECXMNS=ECXPAT("MEANS")
"RTN","ECXADM",83,0)
 S ECXRACE=ECXPAT("RACE")
"RTN","ECXADM",84,0)
 S ECXRELG=ECXPAT("RELIGION")
"RTN","ECXADM",85,0)
 S ECXEMP=ECXPAT("EMPLOY")
"RTN","ECXADM",86,0)
 S ECXMAR=ECXPAT("MARITAL")
"RTN","ECXADM",87,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXADM",88,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXADM",89,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXADM",90,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXADM",91,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXADM",92,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXADM",93,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXADM",94,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXADM",95,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXADM",96,0)
 S ECXSVC=ECXPAT("SC%")
"RTN","ECXADM",97,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXADM",98,0)
 S ECXHI=+$$INSUR^IBBAPI(ECXDFN,ECXDATE)
"RTN","ECXADM",99,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXADM",100,0)
 ;
"RTN","ECXADM",101,0)
 ;-OEF/OIF Data
"RTN","ECXADM",102,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXADM",103,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXADM",104,0)
 ;
"RTN","ECXADM",105,0)
 ;- Agent Orange location
"RTN","ECXADM",106,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXADM",107,0)
 ;
"RTN","ECXADM",108,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXADM",109,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXADM",110,0)
 ; - Race and Ethnicity
"RTN","ECXADM",111,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXADM",112,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXADM",113,0)
 ;
"RTN","ECXADM",114,0)
 ;get primary care data
"RTN","ECXADM",115,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXADM",116,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXADM",117,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXADM",118,0)
 ;get combat veteran data
"RTN","ECXADM",119,0)
 I $$CVEDT^ECXUTL5(ECXDFN,ECD)
"RTN","ECXADM",120,0)
 ;get national patient record flag if exist
"RTN","ECXADM",121,0)
 D NPRF^ECXUTL5
"RTN","ECXADM",122,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXADM",123,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXADM",124,0)
 Q
"RTN","ECXADM",125,0)
 ;
"RTN","ECXADM",126,0)
PTF ; get admitting DRG, diagnosis, source of admission from PTF
"RTN","ECXADM",127,0)
 ;use number for DRG and .01 for diagnosis
"RTN","ECXADM",128,0)
 N EC,EC1,ECX
"RTN","ECXADM",129,0)
 S EC=1 I $D(^DGPT(ECPTF,"M",2,0)) S EC=2
"RTN","ECXADM",130,0)
 S EC1=+$P(^DGPT(ECPTF,"M",EC,0),U,5)
"RTN","ECXADM",131,0)
 S ECDRG=$P($G(^DGPT(ECPTF,"M",EC,"P")),U)
"RTN","ECXADM",132,0)
 S ECDIA=$P($G(^ICD9(EC1,0)),U)
"RTN","ECXADM",133,0)
 S ECX=+$P($G(^DGPT(ECPTF,101)),U),ECXSADM=$P($G(^DIC(45.1,ECX,0)),U,11)
"RTN","ECXADM",134,0)
 Q
"RTN","ECXADM",135,0)
 ;
"RTN","ECXADM",136,0)
FILE ;file the extract record
"RTN","ECXADM",137,0)
 ;node0
"RTN","ECXADM",138,0)
 ;facility^dfn^ssn^name^in/out^day^primary care team^sex^dob^
"RTN","ECXADM",139,0)
 ;religion^employment status^health ins^state^county^zip^
"RTN","ECXADM",140,0)
 ;eligibility^vet^vietnam^agent orange^radiation^pow^
"RTN","ECXADM",141,0)
 ;period of service^means test^marital status^
"RTN","ECXADM",142,0)
 ;ward^treating specialty^attending physician^mov #^DRG^diagnosis^
"RTN","ECXADM",143,0)
 ;time^primary care provider^race^primary ward provider
"RTN","ECXADM",144,0)
 ;node1
"RTN","ECXADM",145,0)
 ;mpi^dss dept^attending npi^pc provider npi^ward provider npi^
"RTN","ECXADM",146,0)
 ;admission elig^mst status^^sharing payor^
"RTN","ECXADM",147,0)
 ;sharing insurance^enrollment location^
"RTN","ECXADM",148,0)
 ;pc prov person class^assoc pc provider^assoc pc prov person class^
"RTN","ECXADM",149,0)
 ;assoc pc prov npi^dom^enrollment cat^enrollment stat^enrollment
"RTN","ECXADM",150,0)
 ;priority^purple heart ind.^obs pat ind^encounter num^agent orange
"RTN","ECXADM",151,0)
 ;loc^production div^pow loc^source of admission^head & neck canc. ind
"RTN","ECXADM",152,0)
 ;^ethnicity^race1^enrollment priority_sub group^user enrollee^patient
"RTN","ECXADM",153,0)
 ;type^combat vet elig^combat vet elig end date^enc cv eligible^
"RTN","ECXADM",154,0)
 ;national patient record flag ECXNPRFI^att phy person class ECXATTPC
"RTN","ECXADM",155,0)
 ;^primary ward provider person class ECXPRVPC^environ contamin ECXEST
"RTN","ECXADM",156,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange indic ECXAO
"RTN","ECXADM",157,0)
 ;^environ contam ECXECE^encoun head/neck ECXHNC^encoun MST ECXMIL^rad
"RTN","ECXADM",158,0)
 ;encoun ECXIR^ OEF/OIF ECXOEF^ OEF/OIF return date ECXOEFDT
"RTN","ECXADM",159,0)
 ;^associate pc provider npi ECASNPI^attending physician npi ECATNPI^
"RTN","ECXADM",160,0)
 ;primary care provider npi ECPTNPI^primary ward provider npi ECPWNPI
"RTN","ECXADM",161,0)
 ;
"RTN","ECXADM",162,0)
 ;Convert specialty to PTF Code
"RTN","ECXADM",163,0)
 ;
"RTN","ECXADM",164,0)
 N ECXDATA
"RTN","ECXADM",165,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPC,.ECXDATA)
"RTN","ECXADM",166,0)
 S ECXSPC=$G(ECXDATA(7))
"RTN","ECXADM",167,0)
 ;
"RTN","ECXADM",168,0)
 N DA,DIK
"RTN","ECXADM",169,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXADM",170,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE_U
"RTN","ECXADM",171,0)
 S ECODE=ECODE_ECPTTM_U_ECXSEX_U_ECXDOB_U_ECXRELG_U
"RTN","ECXADM",172,0)
 S ECODE=ECODE_ECXEMP_U_ECXHI_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U
"RTN","ECXADM",173,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECXVNS_U_ECXAST_U_ECXRST_U_ECXPST_U
"RTN","ECXADM",174,0)
 S ECODE=ECODE_ECXPOS_U_ECXMNS_U_ECXMAR_U
"RTN","ECXADM",175,0)
 S ECODE=ECODE_ECXWRD_U_ECXSPC_U_ECXATT_U_ECDA_U_ECDRG_U_ECDIA_U
"RTN","ECXADM",176,0)
 S ECODE=ECODE_ECTM_U_ECPTPR_U_ECXRACE_U_ECXPRV_U
"RTN","ECXADM",177,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_""_U_""_U_""_U_ELGA_U
"RTN","ECXADM",178,0)
 S ECODE1=ECODE1_ECXMST_U_U_U_U_ECXENRL_U_ECCLAS_U
"RTN","ECXADM",179,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXADM",180,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXADM",181,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXPLOC_U_ECXSADM_U_ECXHNCI_U_ECXETH_U
"RTN","ECXADM",182,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXADM",183,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXADM",184,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXATTPC_U_ECXPRVPC_U_ECXEST
"RTN","ECXADM",185,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXADM",186,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECATTNPI_U_ECPTNPI_U_ECPWNPI
"RTN","ECXADM",187,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2)
"RTN","ECXADM",188,0)
 S ECRN=ECRN+1
"RTN","ECXADM",189,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXADM",190,0)
 Q
"RTN","ECXADM",191,0)
 ;
"RTN","ECXADM",192,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXADM",193,0)
 S ECHEAD="ADM"
"RTN","ECXADM",194,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXADM",195,0)
 Q
"RTN","ECXADM",196,0)
 ;
"RTN","ECXADM",197,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXADM",198,0)
 ; should be queued with a 1D frequency
"RTN","ECXADM",199,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXADM",200,0)
 ;
"RTN","ECXADM",201,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXADM",202,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXADM",203,0)
 ;
"RTN","ECXANUT")
0^20^B53849197^n/a
"RTN","ECXANUT",1,0)
ECXANUT ;ALB/JRC - NUT Extract Audit Report ; 8/29/07 9:45am
"RTN","ECXANUT",2,0)
 ;;3.0;DSS EXTRACTS;**105**;Dec 22, 1997;Build 70
"RTN","ECXANUT",3,0)
 Q
"RTN","ECXANUT",4,0)
EN ;entry point for NUT extract audit report
"RTN","ECXANUT",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,SCRNARR,REPORT
"RTN","ECXANUT",6,0)
 N SCRNARR,ECXERR,ECXHEAD,ECXAUD,ECXARRAY,STATUS,FLAG,ECXALL,TMP
"RTN","ECXANUT",7,0)
 N ZTQUEUED,ZTSTOP
"RTN","ECXANUT",8,0)
 S SCRNARR="^TMP(""ECX"",$J,""SCRNARR"")"
"RTN","ECXANUT",9,0)
 K @SCRNARR@("DIVISION")
"RTN","ECXANUT",10,0)
 S (ECXERR,FLAG)=0
"RTN","ECXANUT",11,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXANUT",12,0)
 S ECXHEAD="NUT",ECXAUD=0
"RTN","ECXANUT",13,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXANUT",14,0)
 ;select extract
"RTN","ECXANUT",15,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXANUT",16,0)
 Q:ECXERR
"RTN","ECXANUT",17,0)
 W !!
"RTN","ECXANUT",18,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXANUT",19,0)
 S ECXERR=$$NUT^ECXDVSN()
"RTN","ECXANUT",20,0)
 I ECXERR=1 D  Q
"RTN","ECXANUT",21,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXANUT",22,0)
 .K @SCRNARR@("DIVISION")
"RTN","ECXANUT",23,0)
 .D AUDIT^ECXKILL
"RTN","ECXANUT",24,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXANUT",25,0)
 W !
"RTN","ECXANUT",26,0)
 ;prompt for report type, (s)ummary or (d)etail
"RTN","ECXANUT",27,0)
 S REPORT=$$REPORT() Q:FLAG
"RTN","ECXANUT",28,0)
 ;if detail selected, prompt for (i)npatient, (o)utpatient or (b)oth
"RTN","ECXANUT",29,0)
 I REPORT="D" S STATUS=$$STATUS() Q:FLAG
"RTN","ECXANUT",30,0)
 ;determine output device and queue if requested
"RTN","ECXANUT",31,0)
 S ECXPGM="PROCESS^ECXANUT",ECXDESC="NUT Extract Audit Report"
"RTN","ECXANUT",32,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("STATUS")="",ECXSAVE("REPORT")="",ECXSAVE("FLAG")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("SCRNARR")="",TMP=$$OREF^DILF(SCRNARR),ECXSAVE(TMP)=""
"RTN","ECXANUT",33,0)
 W !
"RTN","ECXANUT",34,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXANUT",35,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXANUT",36,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXANUT",37,0)
 .K @SCRNARR@("DIVISION")
"RTN","ECXANUT",38,0)
 .D AUDIT^ECXKILL
"RTN","ECXANUT",39,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXANUT",40,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXANUT",41,0)
 .D PROCESS^ECXANUT
"RTN","ECXANUT",42,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXANUT",43,0)
 D HOME^%ZIS
"RTN","ECXANUT",44,0)
 D AUDIT^ECXKILL
"RTN","ECXANUT",45,0)
 Q
"RTN","ECXANUT",46,0)
 ;
"RTN","ECXANUT",47,0)
PROCESS ;process data in file #727.832 and store in ^tmp global
"RTN","ECXANUT",48,0)
 N %,ARRAY,ECXEXT,ECXDEF,X,ECXSTART,ECXEND,ECXRUN,IEN,NODE0,NODE1,DATE,FKEY,DIV,OBS,DLTYPE,DFL,ENC,FPD,FPF,I,PFK
"RTN","ECXANUT",49,0)
 S ARRAY="^TMP($J,""ECXORDER"")"
"RTN","ECXANUT",50,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXANUT",51,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXANUT",52,0)
 ;get run date in external format
"RTN","ECXANUT",53,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXANUT",54,0)
 ;get records in date range and set values
"RTN","ECXANUT",55,0)
 S IEN=0 F  S IEN=$O(^ECX(727.832,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:FLAG
"RTN","ECXANUT",56,0)
 .S NODE0=$G(^ECX(727.832,IEN,0)),NODE1=$G(^(1))
"RTN","ECXANUT",57,0)
 .S DATE=$P(NODE0,U,9),STAT=$P(NODE0,U,8),PFK=$P(NODE1,U,8),DIV=$P(NODE1,U,7),OBS=$P(NODE1,U,2),DLT=$P(NODE1,U,10),FPD=$P(NODE1,U,6),FPF=$P(NODE1,U,9),ENC=$P(NODE1,U,4),DFL=$P(NODE1,U,11)
"RTN","ECXANUT",58,0)
 .;filter out divisions if not all selected
"RTN","ECXANUT",59,0)
 .Q:$G(@SCRNARR@("DIVISION"))'=1&'$D(@SCRNARR@("DIVISION",+$G(DIV)))
"RTN","ECXANUT",60,0)
 .;convert free text date to fm internal format date
"RTN","ECXANUT",61,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXANUT",62,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXANUT",63,0)
 .;Update totals and store in ^tmp global, add count for each unique 
"RTN","ECXANUT",64,0)
 .;feeder key/delivery location. Under each unique key create a record
"RTN","ECXANUT",65,0)
 .;for each unique combination of in/out code, observation status
"RTN","ECXANUT",66,0)
 .;save it in ^tmp global for later use.
"RTN","ECXANUT",67,0)
 .I REPORT="S" D
"RTN","ECXANUT",68,0)
 ..F I="DIV","DLT","STAT","OBS","PFK" I @I="" S @I="UNKNOWN"
"RTN","ECXANUT",69,0)
 ..;Increment delivery location type (dlt) counter
"RTN","ECXANUT",70,0)
 ..;S ^TMP($J,"ECXDLT",DIV,DLT,STAT,OBS)=$G(^TMP($J,"ECXDLT",DIV,DLT,STAT,OBS))+1
"RTN","ECXANUT",71,0)
 ..S ^TMP($J,DIV,"ECXDLT",DLT,STAT,OBS)=$G(^TMP($J,DIV,"ECXDLT",DLT,STAT,OBS))+1
"RTN","ECXANUT",72,0)
 ..;Increment feeder key (fk) counter 
"RTN","ECXANUT",73,0)
 ..;S ^TMP($J,"ECXFKEY",DIV,PFK,STAT,OBS)=$G(^TMP($J,"ECXFKEY",DIV,PFK,STAT,OBS))+1
"RTN","ECXANUT",74,0)
 ..S ^TMP($J,DIV,"ECXFKEY",PFK,STAT,OBS)=$G(^TMP($J,DIV,"ECXFKEY",PFK,STAT,OBS))+1
"RTN","ECXANUT",75,0)
 .I REPORT="D" D
"RTN","ECXANUT",76,0)
 ..F I="FPD","FPF","PFK","OBS","ENC" I $G(@I)="" S @I="UNKNOWN"
"RTN","ECXANUT",77,0)
 ..F I="DIV","DFL","DLT" I $G(@I)="" S @I="UNK"
"RTN","ECXANUT",78,0)
 ..;Check patient status and screen if necessary
"RTN","ECXANUT",79,0)
 ..Q:STATUS'="B"&(STATUS'=STAT)
"RTN","ECXANUT",80,0)
 ..;Increment fpd, fpf, pfk, obs counter
"RTN","ECXANUT",81,0)
 ..S ^TMP($J,FPD,FPF,PFK,OBS)=$G(^TMP($J,FPD,FPF,PFK,OBS))+1
"RTN","ECXANUT",82,0)
 ..;Increment div, dfl, dlt counter
"RTN","ECXANUT",83,0)
 ..S ^TMP($J,FPD,FPF,PFK,OBS,ENC,DIV,DFL,DLT)=$G(^TMP($J,FPD,FPF,PFK,OBS,ENC,DIV,DFL,DLT))+1
"RTN","ECXANUT",84,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXANUT",85,0)
 D PRINT
"RTN","ECXANUT",86,0)
 D AUDIT^ECXKILL
"RTN","ECXANUT",87,0)
 Q
"RTN","ECXANUT",88,0)
 ;
"RTN","ECXANUT",89,0)
PRINT ;print report
"RTN","ECXANUT",90,0)
 N FLAG,PG,LN,KEY,DLT,STAT,OBS,TOTAL,TCNT,CNT
"RTN","ECXANUT",91,0)
 U IO
"RTN","ECXANUT",92,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXANUT",93,0)
 S (FLAG,PG)=0,$P(LN,"-",80)=""
"RTN","ECXANUT",94,0)
 I '$D(^TMP($J)) D  Q
"RTN","ECXANUT",95,0)
 .S DIV=0 F  S DIV=$O(@SCRNARR@("DIVISION",DIV)) Q:'DIV  D
"RTN","ECXANUT",96,0)
 ..D HEADER
"RTN","ECXANUT",97,0)
 ..W !
"RTN","ECXANUT",98,0)
 ..W !,"**************************************************"
"RTN","ECXANUT",99,0)
 ..W !,"*  No data available for this patient division.  *"
"RTN","ECXANUT",100,0)
 ..W !,"**************************************************"
"RTN","ECXANUT",101,0)
 I REPORT="S" D
"RTN","ECXANUT",102,0)
 .S DIV="" F  S DIV=$O(^TMP($J,DIV)) Q:DIV']""  D  Q:FLAG
"RTN","ECXANUT",103,0)
 ..D HEADER Q:FLAG
"RTN","ECXANUT",104,0)
 ..S KEY="" F  S KEY=$O(^TMP($J,DIV,KEY)) Q:KEY']""  D  Q:FLAG
"RTN","ECXANUT",105,0)
 ...S PFK="" F  S PFK=$O(^TMP($J,DIV,KEY,PFK)) Q:PFK']""  D  Q:FLAG
"RTN","ECXANUT",106,0)
 ....D SUB Q:FLAG
"RTN","ECXANUT",107,0)
 ....S STAT="" F  S STAT=$O(^TMP($J,DIV,KEY,PFK,STAT)) Q:STAT']""  D  Q:FLAG
"RTN","ECXANUT",108,0)
 .....S OBS="" F  S OBS=$O(^TMP($J,DIV,KEY,PFK,STAT,OBS)) Q:OBS']""  D  Q:FLAG
"RTN","ECXANUT",109,0)
 ......S TOTAL=$P(^TMP($J,DIV,KEY,PFK,STAT,OBS),U)
"RTN","ECXANUT",110,0)
 ......;Print by delivery location type (feeder key)
"RTN","ECXANUT",111,0)
 ......D:($Y+3>IOSL) HEADER,SUB Q:FLAG
"RTN","ECXANUT",112,0)
 ......W !,?1,STAT,?12,$S(OBS="NO":" NO",1:"YES"),?30,TOTAL
"RTN","ECXANUT",113,0)
 ;detail report print
"RTN","ECXANUT",114,0)
 I REPORT="D" D
"RTN","ECXANUT",115,0)
 .S FPD="" F  S FPD=$O(^TMP($J,FPD)) Q:FPD']""  D  Q:FLAG
"RTN","ECXANUT",116,0)
 ..S FPF="" F  S FPF=$O(^TMP($J,FPD,FPF)) Q:FPF']""  D  Q:FLAG
"RTN","ECXANUT",117,0)
 ...S PFK="" F  S PFK=$O(^TMP($J,FPD,FPF,PFK)) Q:PFK']""  D  Q:FLAG
"RTN","ECXANUT",118,0)
 ....S OBS="" F  S OBS=$O(^TMP($J,FPD,FPF,PFK,OBS)) Q:OBS']""  D  Q:FLAG
"RTN","ECXANUT",119,0)
 .....S TCNT=$G(^TMP($J,FPD,FPF,PFK,OBS))
"RTN","ECXANUT",120,0)
 .....D HEADER
"RTN","ECXANUT",121,0)
 .....S ENC="" F  S ENC=$O(^TMP($J,FPD,FPF,PFK,OBS,ENC)) Q:ENC']""  D  Q:FLAG
"RTN","ECXANUT",122,0)
 ......S DIV="" F  S DIV=$O(^TMP($J,FPD,FPF,PFK,OBS,ENC,DIV)) Q:DIV']""  D  Q:FLAG
"RTN","ECXANUT",123,0)
 .......S DFL="" F  S DFL=$O(^TMP($J,FPD,FPF,PFK,OBS,ENC,DIV,DFL)) Q:DFL']""  D  Q:FLAG
"RTN","ECXANUT",124,0)
 ........S DLT="" F  S DLT=$O(^TMP($J,FPD,FPF,PFK,OBS,ENC,DIV,DFL,DLT)) Q:DLT']""  D  Q:FLAG
"RTN","ECXANUT",125,0)
 .........S CNT=$G(^TMP($J,FPD,FPF,PFK,OBS,ENC,DIV,DFL,DLT))
"RTN","ECXANUT",126,0)
 .........W !,?1,$E(ENC,1,25),?28,DIV,?42,DFL,?60,DLT,?71,CNT
"RTN","ECXANUT",127,0)
 .........D:($Y+3>IOSL) HEADER Q:FLAG
"RTN","ECXANUT",128,0)
 Q
"RTN","ECXANUT",129,0)
 ;
"RTN","ECXANUT",130,0)
HEADER ;header and page control
"RTN","ECXANUT",131,0)
 N JJ,SS,DIR,DIRUT,DTOUT,DUOUT,DSSID
"RTN","ECXANUT",132,0)
 I $E(IOST)="C" D
"RTN","ECXANUT",133,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXANUT",134,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y FLAG=1
"RTN","ECXANUT",135,0)
 Q:FLAG
"RTN","ECXANUT",136,0)
 S DSSID=$S($G(DIV):$$NNT^XUAF4(DIV),1:"UNKNOWN^^")
"RTN","ECXANUT",137,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXANUT",138,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"_$S(REPORT="S":"  (Summary)",1:"  (Detail)")
"RTN","ECXANUT",139,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXANUT",140,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXANUT",141,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXANUT",142,0)
 W !,"Patient Division: "_$P(DSSID,U)_$S($P(DSSID,U,2)'="":" ("_$P(DSSID,U,2)_")",1:""),?68,$S(REPORT="S":"Page: "_PG,1:"")
"RTN","ECXANUT",143,0)
 ;Detailed report sub-header
"RTN","ECXANUT",144,0)
 Q:'$D(^TMP($J))
"RTN","ECXANUT",145,0)
 I REPORT="D" D
"RTN","ECXANUT",146,0)
 .W !,"Patient Status: "_$S(STATUS="I":"Inpatient",STATUS="O":"Outpatient",1:"Inpatient and Outpatient"),?68,"Page: "_PG
"RTN","ECXANUT",147,0)
 .W !!,"Prod Div: "_FPD_" Prod Fac: "_FPF_" Prod FK: "_PFK_" OBS: "_OBS,?60," TOTAL: ",TCNT
"RTN","ECXANUT",148,0)
 .W !,?1,"Encounter Number",?28,"Del Div",?42,"Del Feed Loc",?60,"Loc Type",?71,"Count"
"RTN","ECXANUT",149,0)
 Q
"RTN","ECXANUT",150,0)
SUB ;Summary report sub-header
"RTN","ECXANUT",151,0)
 I REPORT="S" D
"RTN","ECXANUT",152,0)
 .W !!,"FEEDER KEY: "_PFK
"RTN","ECXANUT",153,0)
 .W !!,"I/O",?12,"OBS",?30,"TOTAL"
"RTN","ECXANUT",154,0)
 Q
"RTN","ECXANUT",155,0)
 ;
"RTN","ECXANUT",156,0)
REPORT() ;Select report type
"RTN","ECXANUT",157,0)
 ;
"RTN","ECXANUT",158,0)
 ;      Output - S = summary
"RTN","ECXANUT",159,0)
 ;               D = detail
"RTN","ECXANUT",160,0)
 ;Init variables
"RTN","ECXANUT",161,0)
 N DIR,DIRUT,DUOUT,X,Y
"RTN","ECXANUT",162,0)
 S DIR(0)="S^S:SUMMARY;D:DETAIL"
"RTN","ECXANUT",163,0)
 S DIR("A")="Select type of report"
"RTN","ECXANUT",164,0)
 S DIR("?",1)="S = Summary"
"RTN","ECXANUT",165,0)
 S DIR("?",2)="D = Detail"
"RTN","ECXANUT",166,0)
 D ^DIR
"RTN","ECXANUT",167,0)
 I $D(DIRUT)!$D(DUOUT) S FLAG=1 Q ""
"RTN","ECXANUT",168,0)
 Q Y
"RTN","ECXANUT",169,0)
 ;
"RTN","ECXANUT",170,0)
STATUS() ;Select patient status for report
"RTN","ECXANUT",171,0)
 ;
"RTN","ECXANUT",172,0)
 ;      Output - I = inpatient
"RTN","ECXANUT",173,0)
 ;               O = outpatient
"RTN","ECXANUT",174,0)
 ;               B = both
"RTN","ECXANUT",175,0)
 ;Init variables
"RTN","ECXANUT",176,0)
 N DIR,DIRUT,DUOUT,X,Y
"RTN","ECXANUT",177,0)
 S DIR(0)="S^I:INPATIENT;O:OUTPATIENT;B:BOTH"
"RTN","ECXANUT",178,0)
 S DIR("A")=" report?"
"RTN","ECXANUT",179,0)
 S DIR("A")="Select patient status for report"
"RTN","ECXANUT",180,0)
 S DIR("?",1)="I = Inpatient"
"RTN","ECXANUT",181,0)
 S DIR("?",2)="O = Outpatient"
"RTN","ECXANUT",182,0)
 S DIR("?",3)="B = Both"
"RTN","ECXANUT",183,0)
 D ^DIR
"RTN","ECXANUT",184,0)
 I $D(DIRUT)!$D(DUOUT) S FLAG=1 Q ""
"RTN","ECXANUT",185,0)
 Q Y
"RTN","ECXAPHA2")
0^1^B23749184^B21178232
"RTN","ECXAPHA2",1,0)
ECXAPHA2 ;ALB/TMD-Pharmacy Extracts Unusual Volumes Report ; 10/18/07 2:10pm
"RTN","ECXAPHA2",2,0)
 ;;3.0;DSS EXTRACTS;**40,49,84,104,105**;Dec 22, 1997;Build 70
"RTN","ECXAPHA2",3,0)
 ;
"RTN","ECXAPHA2",4,0)
EN ; entry point
"RTN","ECXAPHA2",5,0)
 N COUNT,ECUNIT,LINE,ECDFN,ECD,ECDRG,ECDAY,ECDFN,ECQTY,ECUNIT,ECCOST,ECDS
"RTN","ECXAPHA2",6,0)
 K ^TMP($J)
"RTN","ECXAPHA2",7,0)
 S (COUNT,ECDS)=0,ECUNIT=""
"RTN","ECXAPHA2",8,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXAPHA2",9,0)
 S LINE=$S(ECXOPT=1:"PRE",ECXOPT=2:"IVP",ECXOPT=3:"UDP",1:"EXIT")
"RTN","ECXAPHA2",10,0)
 D @LINE
"RTN","ECXAPHA2",11,0)
 Q
"RTN","ECXAPHA2",12,0)
 ;
"RTN","ECXAPHA2",13,0)
PRE ; entry point for PRE data
"RTN","ECXAPHA2",14,0)
 N ECRFL,ECRX,ECREF,ECDATA,ECDATA1,ECPRC,IEN
"RTN","ECXAPHA2",15,0)
 K ^TMP($J,"ECXDSS")
"RTN","ECXAPHA2",16,0)
 ;call pharmacy api pso52ex
"RTN","ECXAPHA2",17,0)
 D EXTRACT^PSO52EX(ECD,ECED,"ECXDSS")
"RTN","ECXAPHA2",18,0)
 S ECREF="RF"
"RTN","ECXAPHA2",19,0)
 ;order thru fills and refills; refill values 0 thru 11
"RTN","ECXAPHA2",20,0)
 ;     Note:  refill 0 = original fill
"RTN","ECXAPHA2",21,0)
 F  S ECD=$O(^TMP($J,"ECXDSS","AL",ECD)),IEN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S IEN=$O(^(ECD,IEN)),ECRFL=""  Q:'IEN  Q:ECXERR  F  S ECRFL=$O(^(IEN,ECRFL)) Q:'ECRFL  Q:ECXERR  D PRE2
"RTN","ECXAPHA2",22,0)
 ;
"RTN","ECXAPHA2",23,0)
 ;order thru partial fills
"RTN","ECXAPHA2",24,0)
 S ECD=ECSD1,ECREF="P"
"RTN","ECXAPHA2",25,0)
 F  S ECD=$O(^TMP($J,"ECXDSS","AM",ECD)),IEN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S IEN=$O(^(ECD,IEN)),ECRFL=""  Q:'IEN  Q:ECXERR  F  S ECRFL=$O(^(IEN,ECRFL)) Q:'ECRFL  Q:ECXERR  D PRE2
"RTN","ECXAPHA2",26,0)
 K ^TMP($J,"ECXDSS")
"RTN","ECXAPHA2",27,0)
 Q
"RTN","ECXAPHA2",28,0)
 ;
"RTN","ECXAPHA2",29,0)
PRE2 ; get Prescription data
"RTN","ECXAPHA2",30,0)
 I (ECREF="RF")&(ECRFL) D
"RTN","ECXAPHA2",31,0)
 .S ECQTY=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,1)
"RTN","ECXAPHA2",32,0)
 .S ECDS=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,1.1)
"RTN","ECXAPHA2",33,0)
 .S ECPRC=^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,1.2)
"RTN","ECXAPHA2",34,0)
 I (ECREF="RF")&('ECRFL) D
"RTN","ECXAPHA2",35,0)
 .S ECQTY=+^TMP($J,"ECXDSS",IEN,7)
"RTN","ECXAPHA2",36,0)
 .S ECDS=+^TMP($J,"ECXDSS",IEN,8)
"RTN","ECXAPHA2",37,0)
 .S ECPRC=+^TMP($J,"ECXDSS",IEN,17)
"RTN","ECXAPHA2",38,0)
 I ECREF="P" D
"RTN","ECXAPHA2",39,0)
 .S ECQTY=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,.04)
"RTN","ECXAPHA2",40,0)
 .S ECDS=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,.041)
"RTN","ECXAPHA2",41,0)
 .S ECPRC=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,.042)
"RTN","ECXAPHA2",42,0)
 ;check to see if quantity>threshold
"RTN","ECXAPHA2",43,0)
 I ECQTY>ECTHLD D
"RTN","ECXAPHA2",44,0)
 .S ECDAY=ECD
"RTN","ECXAPHA2",45,0)
 .S ECDFN=$P(^TMP($J,"ECXDSS",IEN,2),U)
"RTN","ECXAPHA2",46,0)
 .S ECDRG=+$P(^TMP($J,"ECXDSS",IEN,6),U)
"RTN","ECXAPHA2",47,0)
 .S ECCOST=ECQTY*ECPRC
"RTN","ECXAPHA2",48,0)
 .D FILE Q:ECXERR
"RTN","ECXAPHA2",49,0)
 Q
"RTN","ECXAPHA2",50,0)
 ;
"RTN","ECXAPHA2",51,0)
IVP ; entry point for IVP Data
"RTN","ECXAPHA2",52,0)
 N DFN,ON,DA,SA,ECCOUNT
"RTN","ECXAPHA2",53,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^("S") D  Q:ECXERR
"RTN","ECXAPHA2",54,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:ECXERR  I $D(^ECX(728.113,DA,0)) S EC=^(0) Q:ECXERR  D
"RTN","ECXAPHA2",55,0)
 ..S ECDRG=$P(EC,U,4)
"RTN","ECXAPHA2",56,0)
 ..S SA=$S($P(EC,U,8)]"":"A",$P(EC,U,9):"S",1:"")
"RTN","ECXAPHA2",57,0)
 ..; set up new record for first DA for this drug
"RTN","ECXAPHA2",58,0)
 ..I '$D(^TMP($J,SA,ECDRG)) D
"RTN","ECXAPHA2",59,0)
 ...S ECQTY=+$S(SA="A":+$P(EC,U,7),SA="S":+$P(EC,U,9),1:0)
"RTN","ECXAPHA2",60,0)
 ...S ECUNIT=$S(SA="A":$P(EC,U,8),SA="S":"ML",1:"")
"RTN","ECXAPHA2",61,0)
 ...S ECCOST=$P(EC,U,12),ECDFN=DFN
"RTN","ECXAPHA2",62,0)
 ...S ^TMP($J,SA,ECDRG)=ECUNIT_U_ECD_U_ECDFN_U_ECCOST_U_ECQTY
"RTN","ECXAPHA2",63,0)
 ...S ^(ECDRG,1)=0
"RTN","ECXAPHA2",64,0)
 ..; add to qty (0,1, or -1) to total
"RTN","ECXAPHA2",65,0)
 ..S ^TMP($J,SA,ECDRG,1)=^TMP($J,SA,ECDRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXAPHA2",66,0)
 .; looped thru all DAs for this order - now check for unusual volumes
"RTN","ECXAPHA2",67,0)
 .F SA="S","A" S ECDRG="" F  S ECDRG=$O(^TMP($J,SA,ECDRG)) Q:ECDRG=""  Q:ECXERR  D
"RTN","ECXAPHA2",68,0)
 ..S ECQTY=$P(^TMP($J,SA,ECDRG),U,5),ECCOUNT=^(ECDRG,1)
"RTN","ECXAPHA2",69,0)
 ..S ECQTY=ECQTY*ECCOUNT
"RTN","ECXAPHA2",70,0)
 ..; check to see if quantity is outside of threshold range
"RTN","ECXAPHA2",71,0)
 ..I (ECQTY>ECTHLD)!(ECQTY<-ECTHLD) D
"RTN","ECXAPHA2",72,0)
 ...S ECUNIT=$P(^TMP($J,SA,ECDRG),U)
"RTN","ECXAPHA2",73,0)
 ...S ECDAY=$P(^(ECDRG),U,2)
"RTN","ECXAPHA2",74,0)
 ...S ECDFN=$P(^(ECDRG),U,3)
"RTN","ECXAPHA2",75,0)
 ...S ECCOST=$P(^(ECDRG),U,4)*ECCOUNT
"RTN","ECXAPHA2",76,0)
 ...D FILE Q:ECXERR
"RTN","ECXAPHA2",77,0)
 K ^TMP($J,"A"),^("S")
"RTN","ECXAPHA2",78,0)
 Q
"RTN","ECXAPHA2",79,0)
 ;
"RTN","ECXAPHA2",80,0)
UDP ; entry point for UDP data
"RTN","ECXAPHA2",81,0)
 N ECXJ,ECDATA
"RTN","ECXAPHA2",82,0)
 F  S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:ECXERR  D
"RTN","ECXAPHA2",83,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:ECXERR  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXAPHA2",84,0)
 ..S DATA=^ECX(728.904,ECXJ,0),ECQTY=$P(DATA,U,5)
"RTN","ECXAPHA2",85,0)
 ..;check to see if quantity>threshold
"RTN","ECXAPHA2",86,0)
 ..I ECQTY>ECTHLD D
"RTN","ECXAPHA2",87,0)
 ...S ECDFN=$P(DATA,U,2),ECDRG=$P(DATA,U,4),ECCOST=$P(DATA,U,8),ECDAY=ECD
"RTN","ECXAPHA2",88,0)
 ...D FILE Q:ECXERR
"RTN","ECXAPHA2",89,0)
 Q
"RTN","ECXAPHA2",90,0)
 ;
"RTN","ECXAPHA2",91,0)
FILE ; put records in temp file to print later
"RTN","ECXAPHA2",92,0)
 N OK,ECXPAT,ECNAME,ECSSN,ECGNAME,ECNDC,ECPROD,ECFKEY,ECXPHA
"RTN","ECXAPHA2",93,0)
 ; get demographics
"RTN","ECXAPHA2",94,0)
 S OK=$$PAT^ECXUTL3(ECDFN,$P(ECD,"."),"1;",.ECXPAT)
"RTN","ECXAPHA2",95,0)
 I 'OK Q
"RTN","ECXAPHA2",96,0)
 S ECNAME=ECXPAT("NAME")
"RTN","ECXAPHA2",97,0)
 S ECSSN=ECXPAT("SSN")
"RTN","ECXAPHA2",98,0)
 S ECDAY=$E(ECDAY,4,5)_"/"_$E(ECDAY,6,7)
"RTN","ECXAPHA2",99,0)
 ; get drug file data
"RTN","ECXAPHA2",100,0)
 S ECXPHA="",ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXAPHA2",101,0)
 S ECGNAME=$P(ECXPHA,U)
"RTN","ECXAPHA2",102,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXAPHA2",103,0)
 S ECNDC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0)
"RTN","ECXAPHA2",104,0)
 S ECNDC=$TR(ECNDC,"*",0)
"RTN","ECXAPHA2",105,0)
 S ECPROD=$P(ECXPHA,U,6)
"RTN","ECXAPHA2",106,0)
 S ECPROD=$$RJ^XLFSTR(ECPROD,5,0)
"RTN","ECXAPHA2",107,0)
 S ECFKEY=ECPROD_ECNDC
"RTN","ECXAPHA2",108,0)
 I ECXOPT'=2 S ECUNIT=$P(ECXPHA,U,8)
"RTN","ECXAPHA2",109,0)
 ; file 
"RTN","ECXAPHA2",110,0)
 S ^TMP($J,ECFKEY,-ECQTY,ECDAY,ECSSN)=ECNAME_U_ECSSN_U_ECDAY_U_ECGNAME_U_ECFKEY_U_ECQTY_U_ECUNIT_U_"$"_$FNUMBER(ECCOST,",",2)_U_ECDS
"RTN","ECXAPHA2",111,0)
 S COUNT=COUNT+1
"RTN","ECXAPHA2",112,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZSTOP,ECXERR)=1
"RTN","ECXAPHA2",113,0)
 Q
"RTN","ECXAPHA2",114,0)
 ;
"RTN","ECXAPHA2",115,0)
EXIT S ECXERR=1 Q
"RTN","ECXATRT")
0^51^B50979096^B50969112
"RTN","ECXATRT",1,0)
ECXATRT ;ALB/JAP - TRT Extract Audit Report ;O4/12/2007
"RTN","ECXATRT",2,0)
 ;;3.0;DSS EXTRACTS;**1,6,8,107,105**;Dec 22, 1997;Build 70
"RTN","ECXATRT",3,0)
 ;
"RTN","ECXATRT",4,0)
EN ;entry point for TRT extract audit report
"RTN","ECXATRT",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR
"RTN","ECXATRT",6,0)
 S ECXERR=0
"RTN","ECXATRT",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXATRT",8,0)
 S ECXHEAD="TRT",ECXAUD=0
"RTN","ECXATRT",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXATRT",10,0)
 ;select extract
"RTN","ECXATRT",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXATRT",12,0)
 Q:ECXERR
"RTN","ECXATRT",13,0)
 ;currently, this extract does not capture divisional data
"RTN","ECXATRT",14,0)
 S ECXALL=1
"RTN","ECXATRT",15,0)
 D TRT^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXATRT",16,0)
 I ECXERR=1 D  Q
"RTN","ECXATRT",17,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXATRT",18,0)
 .D AUDIT^ECXKILL
"RTN","ECXATRT",19,0)
 ;determine output device and queue if requested
"RTN","ECXATRT",20,0)
 W !
"RTN","ECXATRT",21,0)
 S ECXPGM="PROCESS^ECXATRT",ECXDESC="TRT Extract Audit Report"
"RTN","ECXATRT",22,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXATRT",23,0)
 W !
"RTN","ECXATRT",24,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXATRT",25,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXATRT",26,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXATRT",27,0)
 .D AUDIT^ECXKILL
"RTN","ECXATRT",28,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXATRT",29,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXATRT",30,0)
 .D PROCESS^ECXATRT
"RTN","ECXATRT",31,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXATRT",32,0)
 D HOME^%ZIS
"RTN","ECXATRT",33,0)
 D AUDIT^ECXKILL
"RTN","ECXATRT",34,0)
 Q
"RTN","ECXATRT",35,0)
 ;
"RTN","ECXATRT",36,0)
PROCESS ;process data in file #727.817
"RTN","ECXATRT",37,0)
 N X,Y,W,DATA,DATE,DIV,IEN,TS,SPEC,FTS,FTSNM,SERV,ECX,QQFLG,CNT,A1,A2,NUM,MN,NEWFTS,NEWSPEC
"RTN","ECXATRT",38,0)
 K ^TMP($J,"ECXAUD"),^TMP($J,"ECXSPEC")
"RTN","ECXATRT",39,0)
 S (QQFLG,CNT)=0
"RTN","ECXATRT",40,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXATRT",41,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXATRT",42,0)
 ;get run date in external format
"RTN","ECXATRT",43,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXATRT",44,0)
 ;set up the specialty array for site/division
"RTN","ECXATRT",45,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXATRT",46,0)
 S DIV="" F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  D
"RTN","ECXATRT",47,0)
 .S DIC="^DIC(42.4,",DR=".01;3",DIQ(0)="E",DIQ="ECX"
"RTN","ECXATRT",48,0)
 .S SPEC="" F  S SPEC=$O(^DIC(42.4,"B",SPEC)) Q:SPEC=""  S TS=$O(^(SPEC,0)) D
"RTN","ECXATRT",49,0)
 ..K ECX S DA=TS D EN^DIQ1
"RTN","ECXATRT",50,0)
 ..S SPEC=$G(ECX(42.4,TS,.01,"E")),SERV=$G(ECX(42.4,TS,3,"E")) S:SERV="" SERV="Unknown"
"RTN","ECXATRT",51,0)
 ..S ^TMP($J,"ECXSPEC",DIV,TS)=0_U_SERV_U_SPEC,NUM(TS)=0
"RTN","ECXATRT",52,0)
 ;set up the specialty to facility treating specialty conversion array;
"RTN","ECXATRT",53,0)
 ;determine if active between ecxstart and ecxend;
"RTN","ECXATRT",54,0)
 ;ignore if facility treating specialty not active within date range of report;
"RTN","ECXATRT",55,0)
 S DIC="^DIC(45.7,",DR=".01;1",DIQ(0)="I",DIQ="ECX"
"RTN","ECXATRT",56,0)
 S FTSNM="" F  S FTSNM=$O(^DIC(45.7,"B",FTSNM)) Q:FTSNM=""  S FTS=$O(^(FTSNM,0)) D
"RTN","ECXATRT",57,0)
 .K ECX S DA=FTS D EN^DIQ1
"RTN","ECXATRT",58,0)
 .S FTSNM=$G(ECX(45.7,FTS,.01,"I")),TS=$G(ECX(45.7,FTS,1,"I"))
"RTN","ECXATRT",59,0)
 .Q:TS=""
"RTN","ECXATRT",60,0)
 .S A1=$$ACTIVE^DGACT(45.7,FTS,ECXSTART),A2=$$ACTIVE^DGACT(45.7,FTS,ECXEND)
"RTN","ECXATRT",61,0)
 .Q:A1=0&(A2=0)
"RTN","ECXATRT",62,0)
 .;num(ts) will hold the number of active facility treat. specialties (file #45.7) associated 
"RTN","ECXATRT",63,0)
 .;with this national specialty (file #42.4).
"RTN","ECXATRT",64,0)
 .I '$D(NUM(TS)) S NUM(TS)=0
"RTN","ECXATRT",65,0)
 .S ^TMP($J,"ECXTS",TS,FTS)=FTSNM,^TMP($J,"ECXREVTS",FTS)=TS,NUM(TS)=NUM(TS)+1
"RTN","ECXATRT",66,0)
 ;get extract records in date range
"RTN","ECXATRT",67,0)
 S IEN="" F  S IEN=$O(^ECX(727.817,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXATRT",68,0)
 .S DATA=^ECX(727.817,IEN,0),DATE=$P(DATA,U,9),DIV=$P(DATA,U,4)
"RTN","ECXATRT",69,0)
 .;currently the 4th piece of extract record is always null for trt
"RTN","ECXATRT",70,0)
 .S:DIV="" DIV=1
"RTN","ECXATRT",71,0)
 .;convert free text date to fm internal format date
"RTN","ECXATRT",72,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXATRT",73,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXATRT",74,0)
 .I $D(ECXDIV(DIV)) D
"RTN","ECXATRT",75,0)
 ..;ts is the old specialty, newfts is the new facility treat. spec. for the movement date;
"RTN","ECXATRT",76,0)
 ..;after patch #1 'losing treating specialty los' field (#17) is non-null only for actual specialty changes;
"RTN","ECXATRT",77,0)
 ..;so should be able to distinguish true ts changes from provider-only changes;
"RTN","ECXATRT",78,0)
 ..;although it will still be possible that old and new specialty are the same, but facility
"RTN","ECXATRT",79,0)
 ..;treat. spec. was changed, but we've lost that info in the extract.
"RTN","ECXATRT",80,0)
 ..;
"RTN","ECXATRT",81,0)
 ..;filter out those records which are definitely provider-only changes;
"RTN","ECXATRT",82,0)
 ..;these are the records that have 'losing treating specialty los' which is null;
"RTN","ECXATRT",83,0)
 ..;but for extracts done prior to patch #1, still need to compare old & new specialty.
"RTN","ECXATRT",84,0)
 ..;
"RTN","ECXATRT",85,0)
 ..;convert 15th and 16th piece from PTF code back to Specialty
"RTN","ECXATRT",86,0)
 ..;ECX*3.0*107
"RTN","ECXATRT",87,0)
 ..;
"RTN","ECXATRT",88,0)
 ..N ECXTS
"RTN","ECXATRT",89,0)
 ..S ECXTS=$P(DATA,U,15) I ECXTS'="" S ECXTS=$O(^DIC(42.4,"C",$G(ECXTS),0)),$P(DATA,U,15)=ECXTS
"RTN","ECXATRT",90,0)
 ..S ECXTS=$P(DATA,U,16) I ECXTS'="" S ECXTS=$O(^DIC(42.4,"C",$G(ECXTS),0)),$P(DATA,U,16)=ECXTS
"RTN","ECXATRT",91,0)
 ..S NEWTS=$P(DATA,U,15),TS=$P(DATA,U,16),LOS=$P(DATA,U,17)
"RTN","ECXATRT",92,0)
 ..;leaving this next line in here for v3.0 extracts done prior to patch #1
"RTN","ECXATRT",93,0)
 ..Q:(NUM(+TS)=1)&(NEWTS=TS)
"RTN","ECXATRT",94,0)
 ..Q:LOS=""
"RTN","ECXATRT",95,0)
 ..S $P(^(TS),U,1)=$P(^TMP($J,"ECXSPEC",DIV,TS),U,1)+1,CNT=CNT+1
"RTN","ECXATRT",96,0)
 ..I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXATRT",97,0)
 ;after all extract records processed, arrange by service and specialty;
"RTN","ECXATRT",98,0)
 ;total can only be associated with specialty, not facility treating specialty;
"RTN","ECXATRT",99,0)
 ;include specialty only if total loss is non-zero
"RTN","ECXATRT",100,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXATRT",101,0)
 S DIV="" F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  I $D(^TMP($J,"ECXSPEC",DIV)) D
"RTN","ECXATRT",102,0)
 .S TS="" F  S TS=$O(^TMP($J,"ECXSPEC",DIV,TS)) Q:TS=""  D
"RTN","ECXATRT",103,0)
 ..S TOT=+$P(^TMP($J,"ECXSPEC",DIV,TS),U,1) I TOT>0 D
"RTN","ECXATRT",104,0)
 ...S SERV=$P(^(TS),U,2),SPEC=$P(^(TS),U,3)
"RTN","ECXATRT",105,0)
 ...S ^TMP($J,"ECXAUD",DIV,SERV,SPEC)=TOT_U_TS
"RTN","ECXATRT",106,0)
 ;print the report
"RTN","ECXATRT",107,0)
 D PRINT
"RTN","ECXATRT",108,0)
 D AUDIT^ECXKILL
"RTN","ECXATRT",109,0)
 Q
"RTN","ECXATRT",110,0)
 ;
"RTN","ECXATRT",111,0)
PRINT ;print trt data by site, by service, by specialty
"RTN","ECXATRT",112,0)
 N JJ,SS,LN,P,DIV,DIVNM,GTOT,SVCTOT,PG,QFLG,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXATRT",113,0)
 U IO
"RTN","ECXATRT",114,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXATRT",115,0)
 S (QFLG,PG)=0,$P(LN,"-",80)=""
"RTN","ECXATRT",116,0)
 ;division associated with the treat. spec. change is not actually known; division is dss site
"RTN","ECXATRT",117,0)
 S DIV="" S DIV=$O(ECXDIV(DIV)) Q:DIV=""  S GTOT=0
"RTN","ECXATRT",118,0)
 D HEADER
"RTN","ECXATRT",119,0)
 I '$D(^TMP($J,"ECXAUD",DIV)) D  Q
"RTN","ECXATRT",120,0)
 .W !!,?5,"No data available for this DSS Site.",!!
"RTN","ECXATRT",121,0)
 I $D(^TMP($J,"ECXAUD",DIV)) S SERV="" F  S SERV=$O(^TMP($J,"ECXAUD",DIV,SERV)) Q:SERV=""  D  Q:QFLG
"RTN","ECXATRT",122,0)
 .S SVCTOT=0
"RTN","ECXATRT",123,0)
 .;write the service name
"RTN","ECXATRT",124,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,SERV
"RTN","ECXATRT",125,0)
 .S SPEC="" F  S SPEC=$O(^TMP($J,"ECXAUD",DIV,SERV,SPEC)) Q:SPEC=""  D  Q:QFLG
"RTN","ECXATRT",126,0)
 ..;write the specialty name and total
"RTN","ECXATRT",127,0)
 ..S TOT=$P(^TMP($J,"ECXAUD",DIV,SERV,SPEC),U,1),TS=$P(^(SPEC),U,2)
"RTN","ECXATRT",128,0)
 ..W ?22,$E(SPEC,1,30)_" ("_TS_")",?68,$$RJ^XLFSTR(TOT,5," "),!
"RTN","ECXATRT",129,0)
 ..S SVCTOT=SVCTOT+TOT,GTOT=GTOT+TOT
"RTN","ECXATRT",130,0)
 ..S FTS="" F  S FTS=$O(^TMP($J,"ECXTS",TS,FTS)) Q:FTS=""  D  Q:QFLG
"RTN","ECXATRT",131,0)
 ...S FTSNM=^TMP($J,"ECXTS",TS,FTS)
"RTN","ECXATRT",132,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG  W ?25,$E(FTSNM,1,30),!
"RTN","ECXATRT",133,0)
 .;write the service subtotal
"RTN","ECXATRT",134,0)
 .Q:QFLG
"RTN","ECXATRT",135,0)
 .W ?22,$E(LN,1,54),!
"RTN","ECXATRT",136,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W "Total for "_SERV_":",?68,$$RJ^XLFSTR(SVCTOT,5," "),!
"RTN","ECXATRT",137,0)
 ;write the grandtotal for all services at facility
"RTN","ECXATRT",138,0)
 D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Grand Total for all Services:",?68,$$RJ^XLFSTR(GTOT,5," ")
"RTN","ECXATRT",139,0)
 ;print the audit descriptive narrative
"RTN","ECXATRT",140,0)
 I $E(IOST)'="C" D
"RTN","ECXATRT",141,0)
 .W @IOF S PG=PG+1
"RTN","ECXATRT",142,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXATRT",143,0)
 .W !,"DSS Extract Log #:    "_ECXEXT
"RTN","ECXATRT",144,0)
 .W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXATRT",145,0)
 .W !,"Report Run Date/Time: "_ECXRUN,?68,"Page: ",PG
"RTN","ECXATRT",146,0)
 .W !!,LN,!!
"RTN","ECXATRT",147,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXATRT",148,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXATRT",149,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXATRT",150,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXATRT",151,0)
 Q
"RTN","ECXATRT",152,0)
 ;
"RTN","ECXATRT",153,0)
HEADER ;header and page control
"RTN","ECXATRT",154,0)
 N JJ,SS
"RTN","ECXATRT",155,0)
 I $E(IOST)="C" D
"RTN","ECXATRT",156,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXATRT",157,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXATRT",158,0)
 Q:QFLG
"RTN","ECXATRT",159,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXATRT",160,0)
 ;W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXATRT",161,0)
 W !,"Treating Specialty Change"_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXATRT",162,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXATRT",163,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXATRT",164,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXATRT",165,0)
 W !,"DSS Site:             "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")",?68,"Page: "_PG
"RTN","ECXATRT",166,0)
 W !!,"Service",?22,"Specialty (DSS Code)",?68,"# of Losses"
"RTN","ECXATRT",167,0)
 W !,?25,"Facility Treating Specialty"
"RTN","ECXATRT",168,0)
 W !,LN,!
"RTN","ECXATRT",169,0)
 Q
"RTN","ECXDIVIV")
0^2^B13391238^B12532326
"RTN","ECXDIVIV",1,0)
ECXDIVIV ;BIR/CML-Enter/Edit and Print IV Room Division ; 3/13/07 10:48am
"RTN","ECXDIVIV",2,0)
 ;;3.0;DSS EXTRACTS;**8,105**;Dec 22, 1997;Build 70
"RTN","ECXDIVIV",3,0)
 ;
"RTN","ECXDIVIV",4,0)
ED ;enter/edit division field for iv rooms
"RTN","ECXDIVIV",5,0)
 N CHKFLG,DIC,DIE,DA,DR
"RTN","ECXDIVIV",6,0)
 W !!,"This option allows editing of the DIVISION field for IV Rooms.",!
"RTN","ECXDIVIV",7,0)
 S CHKFLG=0,OUT=0
"RTN","ECXDIVIV",8,0)
 D CHK Q:CHKFLG
"RTN","ECXDIVIV",9,0)
 F  D  Q:OUT
"RTN","ECXDIVIV",10,0)
 .W ! S DIC=59.5,DIC(0)="QEAMZ" D ^DIC
"RTN","ECXDIVIV",11,0)
 .I Y<0 S OUT=1 Q
"RTN","ECXDIVIV",12,0)
 .I $G(^PS(59.5,+Y,"I"))]"" W "   *INACTIVE*",$C(7)
"RTN","ECXDIVIV",13,0)
 .S DIE=DIC,DA=+Y
"RTN","ECXDIVIV",14,0)
 .S DR=.02 D ^DIE K DA
"RTN","ECXDIVIV",15,0)
 Q
"RTN","ECXDIVIV",16,0)
 ;
"RTN","ECXDIVIV",17,0)
PRT ;print worksheet
"RTN","ECXDIVIV",18,0)
 W !!,"This option will produce a worksheet listing all entries in the IV Room file"
"RTN","ECXDIVIV",19,0)
 W !,"(#59.5).  It should be used to help DSS and Pharmacy services define and"
"RTN","ECXDIVIV",20,0)
 W !,"review the DIVISION assignments for each IV Room.",!! S QFLG=0
"RTN","ECXDIVIV",21,0)
 S QFLG=0,CHKFLG=0
"RTN","ECXDIVIV",22,0)
 D CHK Q:CHKFLG
"RTN","ECXDIVIV",23,0)
 D EN^XUTMDEVQ("START^ECXDIVIV","DSS - IV Room List")
"RTN","ECXDIVIV",24,0)
 I POP D
"RTN","ECXDIVIV",25,0)
 .W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","ECXDIVIV",26,0)
 .D PAUSE
"RTN","ECXDIVIV",27,0)
 K ^TMP($J,"ECXDSS")
"RTN","ECXDIVIV",28,0)
 Q
"RTN","ECXDIVIV",29,0)
 ;
"RTN","ECXDIVIV",30,0)
START ;queued entry point
"RTN","ECXDIVIV",31,0)
 N CHKFLG,DIV,DIVNM,INACT,IV,IVRM,JJ,LN1,LN2,PDT,PG,QFLG,SS,X,Y
"RTN","ECXDIVIV",32,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXDIVIV",33,0)
 K ^TMP("ECXDIVIV",$J),^TMP($J,"ECXDSS") S QFLG=0,IV=0
"RTN","ECXDIVIV",34,0)
 ;call pharmacy encapsulation api and return all iv rooms information
"RTN","ECXDIVIV",35,0)
 D ALL^PSJ59P5(,"??","ECXDSS")
"RTN","ECXDIVIV",36,0)
 F  S IV=$O(^TMP($J,"ECXDSS",IV)) Q:'IV  D
"RTN","ECXDIVIV",37,0)
 .S IVRM=$G(^TMP($J,"ECXDSS",IV,.01)),DIV=$P($G(^(.02)),U)
"RTN","ECXDIVIV",38,0)
 .S DIVNM=$S(DIV="":"ZZZ",1:$E($P(^DG(40.8,DIV,0),U),1,30))
"RTN","ECXDIVIV",39,0)
 .K INACT I $P($G(^TMP($J,"ECXDSS",IV,19)),U)]"" S INACT=$P(^(19),U,2)
"RTN","ECXDIVIV",40,0)
 .S ^TMP("ECXDIVIV",$J,DIVNM,IVRM)=$S($D(INACT):INACT,1:"")
"RTN","ECXDIVIV",41,0)
 ;print report
"RTN","ECXDIVIV",42,0)
 S PG=0,PDT=$$FMTE^XLFDT(DT),$P(LN1,"-",81)="",$P(LN2,"_",30)=""
"RTN","ECXDIVIV",43,0)
 D HDR
"RTN","ECXDIVIV",44,0)
 I '$D(^TMP("ECXDIVIV",$J)) W !!,"No Data found for this worksheet."
"RTN","ECXDIVIV",45,0)
 I $D(^TMP("ECXDIVIV",$J)) S DIVNM="" D
"RTN","ECXDIVIV",46,0)
 .F  S DIVNM=$O(^TMP("ECXDIVIV",$J,DIVNM)) Q:DIVNM=""  Q:QFLG  D
"RTN","ECXDIVIV",47,0)
 ..S IVRM=""
"RTN","ECXDIVIV",48,0)
 ..F  S IVRM=$O(^TMP("ECXDIVIV",$J,DIVNM,IVRM)) Q:IVRM=""  Q:QFLG  D
"RTN","ECXDIVIV",49,0)
 ...S INACT=^TMP("ECXDIVIV",$J,DIVNM,IVRM)
"RTN","ECXDIVIV",50,0)
 ...D:$Y+4>IOSL HDR Q:QFLG
"RTN","ECXDIVIV",51,0)
 ...W !!,IVRM,?34,$S(DIVNM="ZZZ":LN2,1:DIVNM),?60,INACT
"RTN","ECXDIVIV",52,0)
 I $E(IOST)="C"&('QFLG) D PAUSE
"RTN","ECXDIVIV",53,0)
 K ^TMP("ECXDIVIV",$J) S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECXDIVIV",54,0)
 W:$E(IOST)'="C" @IOF
"RTN","ECXDIVIV",55,0)
 D ^%ZISC
"RTN","ECXDIVIV",56,0)
 Q
"RTN","ECXDIVIV",57,0)
 ;
"RTN","ECXDIVIV",58,0)
HDR ;header
"RTN","ECXDIVIV",59,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXDIVIV",60,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1
"RTN","ECXDIVIV",61,0)
 Q:QFLG
"RTN","ECXDIVIV",62,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF
"RTN","ECXDIVIV",63,0)
 W !,"IV Room Worksheet",?72,"Page: ",PG,!,"Printed ",PDT
"RTN","ECXDIVIV",64,0)
 W !!,"IV ROOM",?34,"DIVISION",?60,"INACTIVE DATE",!,LN1
"RTN","ECXDIVIV",65,0)
 Q
"RTN","ECXDIVIV",66,0)
 ;
"RTN","ECXDIVIV",67,0)
CHK ;check for existence of necessary files for division functionality
"RTN","ECXDIVIV",68,0)
 S CHKFLG=0
"RTN","ECXDIVIV",69,0)
 D ALL^PSJ59P5(,"??","ECXIV")
"RTN","ECXDIVIV",70,0)
 I '$O(^TMP($J,"ECXIV",0)) D  I CHKFLG D EXIT Q
"RTN","ECXDIVIV",71,0)
 .W !,"The IV Room file (#59.5) does not exist!"
"RTN","ECXDIVIV",72,0)
 .S CHKFLG=1 D PAUSE
"RTN","ECXDIVIV",73,0)
 I '$D(^ECX(728.113,0)) D  I CHKFLG D EXIT Q
"RTN","ECXDIVIV",74,0)
 .W $C(7),!!,"Your facility appears to be running a version of Inpatient Medications prior to"
"RTN","ECXDIVIV",75,0)
 .W !,"version 4.5 which is necessary to use this option."
"RTN","ECXDIVIV",76,0)
 .S CHKFLG=1 D PAUSE
"RTN","ECXDIVIV",77,0)
 I '$D(^TMP($J,"ECXIV",$O(^TMP($J,"ECXIV",0)),.02)) D
"RTN","ECXDIVIV",78,0)
 .W $C(7),!!,"The Inpatient Medications Patch PSJ*4.5*27 has not yet been installed!"
"RTN","ECXDIVIV",79,0)
 .W !,"It must be loaded before you can proceed with this option."
"RTN","ECXDIVIV",80,0)
 .S CHKFLG=1 D PAUSE
"RTN","ECXDIVIV",81,0)
EXIT K ^TMP($J,"ECXIV")
"RTN","ECXDIVIV",82,0)
 Q
"RTN","ECXDIVIV",83,0)
 ;
"RTN","ECXDIVIV",84,0)
PAUSE ;pause screen
"RTN","ECXDIVIV",85,0)
 I $E(IOST)="C" D
"RTN","ECXDIVIV",86,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXDIVIV",87,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXDIVIV",88,0)
 Q
"RTN","ECXDRUG2")
0^3^B16714262^B15718997
"RTN","ECXDRUG2",1,0)
ECXDRUG2 ;ALB/TMD-Pharmacy Extracts Incomplete Feeder Key Report ; 3/2/07 1:56pm
"RTN","ECXDRUG2",2,0)
 ;;3.0;DSS EXTRACTS;**40,68,84,105**;Dec 22, 1997;Build 70
"RTN","ECXDRUG2",3,0)
 ;
"RTN","ECXDRUG2",4,0)
EN ; entry point
"RTN","ECXDRUG2",5,0)
 N ECD,LINE,ECDRG,ECQTY,ECPRC
"RTN","ECXDRUG2",6,0)
 K ^TMP($J)
"RTN","ECXDRUG2",7,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXDRUG2",8,0)
 S LINE=$S(ECXOPT=1:"PRE",ECXOPT=2:"IVP",ECXOPT=3:"UDP",1:"EXIT")
"RTN","ECXDRUG2",9,0)
 D @LINE
"RTN","ECXDRUG2",10,0)
 Q
"RTN","ECXDRUG2",11,0)
 ;
"RTN","ECXDRUG2",12,0)
PRE ; entry point for PRE data
"RTN","ECXDRUG2",13,0)
 ; order through fills, refills and partial refills
"RTN","ECXDRUG2",14,0)
 N ECRFL,ECRX,ECREF,ECDATA,ECDATA1
"RTN","ECXDRUG2",15,0)
 K ^TMP($J,"ECXDSS")
"RTN","ECXDRUG2",16,0)
 ;call pharmacy api pso52ex
"RTN","ECXDRUG2",17,0)
 D EXTRACT^PSO52EX(ECD,ECED,"ECXDSS")
"RTN","ECXDRUG2",18,0)
 S ECREF="RF"
"RTN","ECXDRUG2",19,0)
 ;order thru fills and refills; refill values 0 thru 11
"RTN","ECXDRUG2",20,0)
 ;     Note:  refill 0 = original fill
"RTN","ECXDRUG2",21,0)
 F  S ECD=$O(^TMP($J,"ECXDSS","AL",ECD)),IEN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S IEN=$O(^(ECD,IEN)),ECRFL=""  Q:'IEN  Q:ECXERR  F  S ECRFL=$O(^(IEN,ECRFL)) Q:'ECRFL  Q:ECXERR  D PRE2
"RTN","ECXDRUG2",22,0)
 ;
"RTN","ECXDRUG2",23,0)
 ;order thru partial fills
"RTN","ECXDRUG2",24,0)
 S ECD=ECSD1,ECREF="P"
"RTN","ECXDRUG2",25,0)
 F  S ECD=$O(^TMP($J,"ECXDSS","AM",ECD)),IEN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S IEN=$O(^(ECD,IEN)),ECRFL=""  Q:'IEN  Q:ECXERR  F  S ECRFL=$O(^(IEN,ECRFL)) Q:'ECRFL  Q:ECXERR  D PRE2
"RTN","ECXDRUG2",26,0)
 K ^TMP($J,"ECXDSS")
"RTN","ECXDRUG2",27,0)
 Q
"RTN","ECXDRUG2",28,0)
 ;
"RTN","ECXDRUG2",29,0)
PRE2 ; get Prescription data
"RTN","ECXDRUG2",30,0)
 S ECDRG=+$P(^TMP($J,"ECXDSS",IEN,6),U)
"RTN","ECXDRUG2",31,0)
 I ECRFL D
"RTN","ECXDRUG2",32,0)
 .S ECQTY=^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,1),ECPRC=^(1,2)
"RTN","ECXDRUG2",33,0)
 I 'ECRFL S ECQTY=^TMP($J,"ECXDSS",IEN,7),ECPRC=^(17)
"RTN","ECXDRUG2",34,0)
 D TEST
"RTN","ECXDRUG2",35,0)
 Q
"RTN","ECXDRUG2",36,0)
 ;
"RTN","ECXDRUG2",37,0)
IVP ; entry point for IVP data
"RTN","ECXDRUG2",38,0)
 N ON,DFN,DA,SA
"RTN","ECXDRUG2",39,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECXERR  Q:ECD>ECED  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  Q:ECXERR  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^("S") D
"RTN","ECXDRUG2",40,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  I $D(^ECX(728.113,DA,0)) S EC=^(0) D
"RTN","ECXDRUG2",41,0)
 ..S ECDRG=$P(EC,U,4)
"RTN","ECXDRUG2",42,0)
 ..S SA=$S($P(EC,U,8)]"":"A",$P(EC,U,9):"S",1:"")
"RTN","ECXDRUG2",43,0)
 ..I SA'="" D
"RTN","ECXDRUG2",44,0)
 ...I '$D(^TMP($J,SA,ECDRG)) S ^(ECDRG)=0,$P(^(ECDRG),U,2)=$P(EC,U,12)
"RTN","ECXDRUG2",45,0)
 ...S $P(^TMP($J,SA,ECDRG),U)=$P(^TMP($J,SA,ECDRG),U)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXDRUG2",46,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXDRUG2",47,0)
 .F SA="S","A" S ECDRG="" F  S ECDRG=$O(^TMP($J,SA,ECDRG)) Q:ECDRG=""  D
"RTN","ECXDRUG2",48,0)
 ..S ECQTY=$P(^TMP($J,SA,ECDRG),U),ECPRC=$P(^(ECDRG),U,2)
"RTN","ECXDRUG2",49,0)
 ..D TEST
"RTN","ECXDRUG2",50,0)
 K ^TMP($J,"A"),^TMP($J,"S")
"RTN","ECXDRUG2",51,0)
 Q
"RTN","ECXDRUG2",52,0)
 ;
"RTN","ECXDRUG2",53,0)
UDP ; entry point for UDP data
"RTN","ECXDRUG2",54,0)
 N ECXJ,ECDATA
"RTN","ECXDRUG2",55,0)
 F  S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:ECXERR  D
"RTN","ECXDRUG2",56,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:ECXERR  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXDRUG2",57,0)
 ..S DATA=^ECX(728.904,ECXJ,0)
"RTN","ECXDRUG2",58,0)
 ..S ECDRG=$P(DATA,U,4),ECQTY=$P(DATA,U,5),ECCOST=$P(DATA,U,8)
"RTN","ECXDRUG2",59,0)
 ..S ECPRC=ECCOST/ECQTY
"RTN","ECXDRUG2",60,0)
 ..D TEST
"RTN","ECXDRUG2",61,0)
 Q
"RTN","ECXDRUG2",62,0)
 ;
"RTN","ECXDRUG2",63,0)
TEST ; retrieve NDC and PSNDF VA Product Code Entry and test for missing NDC or VA Prod Code
"RTN","ECXDRUG2",64,0)
 N ECTYPE,ECNDC,ECZERO,K,ECPROD,ECFCHAR,ECSTOCK,ECXPHA
"RTN","ECXDRUG2",65,0)
 S ECTYPE=0,ECXPHA=""
"RTN","ECXDRUG2",66,0)
 ; call pharmacy drug file (#50) api via ecxutl5
"RTN","ECXDRUG2",67,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXDRUG2",68,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXDRUG2",69,0)
 S ECNDC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNDC=$TR(ECNDC,"*",0)
"RTN","ECXDRUG2",70,0)
 S ECZERO=1,ECSTOCK=0 F K=1:1:$L(ECNDC) D  Q:'ECZERO!ECSTOCK
"RTN","ECXDRUG2",71,0)
 .S ECFCHAR=$E(ECNDC,K)
"RTN","ECXDRUG2",72,0)
 .I ECFCHAR="S" S ECSTOCK=1 Q
"RTN","ECXDRUG2",73,0)
 .I ECFCHAR'=0 S ECZERO=0 Q
"RTN","ECXDRUG2",74,0)
 I ECZERO!ECSTOCK!(ECNDC["N/A") S ECTYPE=2
"RTN","ECXDRUG2",75,0)
 S ECPROD=$P(ECXPHA,U,6),ECPROD=$$RJ^XLFSTR(ECPROD,5,0)
"RTN","ECXDRUG2",76,0)
 I ECTYPE,'ECPROD S ECTYPE=3
"RTN","ECXDRUG2",77,0)
 I 'ECTYPE,'ECPROD S ECTYPE=1
"RTN","ECXDRUG2",78,0)
 I ECTYPE D FILE
"RTN","ECXDRUG2",79,0)
 Q
"RTN","ECXDRUG2",80,0)
 ;
"RTN","ECXDRUG2",81,0)
FILE ; file record
"RTN","ECXDRUG2",82,0)
 N ECFKEY,ECGNAME,STATS,ECCOUNT,QTY,COST,ECCOST
"RTN","ECXDRUG2",83,0)
 ; create new record if none exists for this drug
"RTN","ECXDRUG2",84,0)
 I '$D(^TMP($J,ECDRG)) D
"RTN","ECXDRUG2",85,0)
 .S ECFKEY=ECPROD_ECNDC
"RTN","ECXDRUG2",86,0)
 .S ECGNAME=$P($G(^PSDRUG(ECDRG,0)),U)
"RTN","ECXDRUG2",87,0)
 .S ^TMP($J,ECDRG)=ECGNAME_U_ECFKEY_U_ECPRC_U_ECTYPE
"RTN","ECXDRUG2",88,0)
 .S ^TMP($J,ECDRG,0)="0^0^0"
"RTN","ECXDRUG2",89,0)
 ; add stats to record
"RTN","ECXDRUG2",90,0)
 S STATS=^TMP($J,ECDRG,0)
"RTN","ECXDRUG2",91,0)
 S ECCOUNT=$P(STATS,U),QTY=$P(STATS,U,2),COST=$P(STATS,U,3)
"RTN","ECXDRUG2",92,0)
 S ECCOUNT=ECCOUNT+1
"RTN","ECXDRUG2",93,0)
 S ECCOST=ECQTY*ECPRC
"RTN","ECXDRUG2",94,0)
 S ECQTY=ECQTY+QTY,ECCOST=ECCOST+COST
"RTN","ECXDRUG2",95,0)
 S ^TMP($J,ECDRG,0)=ECCOUNT_U_ECQTY_U_ECCOST
"RTN","ECXDRUG2",96,0)
 Q
"RTN","ECXDRUG2",97,0)
 ;
"RTN","ECXDRUG2",98,0)
EXIT S ECXERR=1 Q
"RTN","ECXDVSN")
0^47^B42115293^B41885150
"RTN","ECXDVSN",1,0)
ECXDVSN ;ALB/JAP - Division selection utility ; 8/13/07 1:11pm
"RTN","ECXDVSN",2,0)
 ;;3.0;DSS EXTRACTS;**8,105**;Dec 22, 1997;Build 70
"RTN","ECXDVSN",3,0)
ADM(ECXDIV,ECXALL,ECXSTART,ECXEND,ECXERR) ;division information for ADM extract audit report
"RTN","ECXDVSN",4,0)
 ;selected inpatient divisions from medical center division file (#40.8)
"RTN","ECXDVSN",5,0)
 ;   input
"RTN","ECXDVSN",6,0)
 ;   ECXDIV = array of inpatient divisions selected (required)
"RTN","ECXDVSN",7,0)
 ;            passed by reference array containing
"RTN","ECXDVSN",8,0)
 ;            selected divisions;
"RTN","ECXDVSN",9,0)
 ;   ECXALL = 1/0 (optional)
"RTN","ECXDVSN",10,0)
 ;            1==> user wants all inpatient divisions OR
"RTN","ECXDVSN",11,0)
 ;                 facility is non-divisional
"RTN","ECXDVSN",12,0)
 ;            0==> user wants to select some divisions
"RTN","ECXDVSN",13,0)
 ;            if ECXALL not defined, then assume 1
"RTN","ECXDVSN",14,0)
 ;   ECXSTART = start date of date range (optional)
"RTN","ECXDVSN",15,0)
 ;   ECXEND   = end date of date range (optional)
"RTN","ECXDVSN",16,0)
 ;   ECXERR   = passed by reference for error return (required)
"RTN","ECXDVSN",17,0)
 ;   output
"RTN","ECXDVSN",18,0)
 ;   ECXDIV = array of divisions selected from file #40.8;
"RTN","ECXDVSN",19,0)
 ;            if ECXALL=1, then array contains all divisions 
"RTN","ECXDVSN",20,0)
 ;            if ECXALL=0, then array contains user-selected divisions
"RTN","ECXDVSN",21,0)
 ;    ECXDIV(ien in file #40.8) = ien in file #4^name^station number^primary indicator^active indicator^dss id
"RTN","ECXDVSN",22,0)
 ;   error CODE
"RTN","ECXDVSN",23,0)
 ;   ECXERR   = 1, if input problem occurs
"RTN","ECXDVSN",24,0)
 ;              0, otherwise
"RTN","ECXDVSN",25,0)
 N OUT,DIC,X,Y,NM,ECXD,ECXIEN,ECXDIEN,ECXACT,ECXNAME,ECXNUM
"RTN","ECXDVSN",26,0)
 S (OUT,ECXERR)=0
"RTN","ECXDVSN",27,0)
 ;if start date or end date missing, then both default to today
"RTN","ECXDVSN",28,0)
 I '$G(ECXSTART)!('$G(ECXEND)) S (ECXSTART,ECXEND)=DT
"RTN","ECXDVSN",29,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN",30,0)
 I ECXALL=1 D
"RTN","ECXDVSN",31,0)
 .S NM="" F  S NM=$O(^DG(40.8,"B",NM)) Q:NM=""  S ECXIEN=$O(^(NM,"")) D
"RTN","ECXDVSN",32,0)
 ..Q:+$P(^DG(40.8,ECXIEN,0),U,3)=1
"RTN","ECXDVSN",33,0)
 ..K Y S DIC="^DG(40.8,",DIC(0)="NZ",X=ECXIEN D ^DIC
"RTN","ECXDVSN",34,0)
 ..Q:Y=-1
"RTN","ECXDVSN",35,0)
 ..S ECXNAME=$P(Y(0),U,1),ECXNUM=$P(Y(0),U,2),ECXDIEN=$P(Y(0),U,7)
"RTN","ECXDVSN",36,0)
 ..S ECXDIV(ECXIEN)=ECXDIEN_U_ECXNAME_U_ECXNUM
"RTN","ECXDVSN",37,0)
 ..D ACTDIV(ECXIEN,ECXSTART,ECXEND,.ECXD,.ECXACT)
"RTN","ECXDVSN",38,0)
 ..S ECXDIV(ECXIEN)=ECXDIV(ECXIEN)_U_ECXD_U_ECXACT
"RTN","ECXDVSN",39,0)
 ..I $D(^ECX(727.3,ECXIEN)) D
"RTN","ECXDVSN",40,0)
 ...S ECXDIV(ECXIEN)=ECXDIV(ECXIEN)_U_$P($G(^ECX(727.3,ECXIEN,0)),U,2)
"RTN","ECXDVSN",41,0)
 I ECXALL=0 F  Q:OUT!ECXERR  D
"RTN","ECXDVSN",42,0)
 .K Y S DIC="^DG(40.8,",DIC(0)="AEMQZ",DIC("S")="I $P(^(0),U,3)'=1"
"RTN","ECXDVSN",43,0)
 .D ^DIC I $G(DUOUT)!($G(DTOUT)) S OUT=1,ECXERR=1 Q
"RTN","ECXDVSN",44,0)
 .I Y=-1,X="" S OUT=1 Q
"RTN","ECXDVSN",45,0)
 .S ECXIEN=+Y,ECXNAME=$P(Y(0),U,1),ECXNUM=$P(Y(0),U,2),ECXDIEN=$P(Y(0),U,7)
"RTN","ECXDVSN",46,0)
 .S ECXDIV(ECXIEN)=ECXDIEN_U_ECXNAME_U_ECXNUM
"RTN","ECXDVSN",47,0)
 .D ACTDIV(ECXIEN,ECXSTART,ECXEND,.ECXD,.ECXACT)
"RTN","ECXDVSN",48,0)
 .S ECXDIV(ECXIEN)=ECXDIV(ECXIEN)_U_ECXD_U_ECXACT
"RTN","ECXDVSN",49,0)
 .I $D(^ECX(727.3,ECXIEN)) D
"RTN","ECXDVSN",50,0)
 ..S ECXDIV(ECXIEN)=ECXDIV(ECXIEN)_U_$P($G(^ECX(727.3,ECXIEN,0)),U,2)
"RTN","ECXDVSN",51,0)
 .I 'ECXACT W !!,?5,"Please note: Division "_ECXNUM_" was not active during",!,?5,"             selected date range.",!
"RTN","ECXDVSN",52,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN",53,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN",54,0)
 Q
"RTN","ECXDVSN",55,0)
ACTDIV(ECXIEN,ECXSTART,ECXEND,ECXD,ECXACT) ;determine if division active at anytime during date range
"RTN","ECXDVSN",56,0)
 ;to be called by ADM^ECXDVSN
"RTN","ECXDVSN",57,0)
 ;   input
"RTN","ECXDVSN",58,0)
 ;   ECXIEN   = ien in file #40.8; required
"RTN","ECXDVSN",59,0)
 ;   ECXSTART = start of date range; FM format; required
"RTN","ECXDVSN",60,0)
 ;   ECXEND   = end of date range; FM format; required
"RTN","ECXDVSN",61,0)
 ;   output
"RTN","ECXDVSN",62,0)
 ;   ECXD   = 1/0; passed by reference
"RTN","ECXDVSN",63,0)
 ;            1 indicates primary division
"RTN","ECXDVSN",64,0)
 ;   ECXACT = 1/0; passed by reference
"RTN","ECXDVSN",65,0)
 ;            returns 0, if division not active during date range;
"RTN","ECXDVSN",66,0)
 ;            note: only start date and end date are checked; if division
"RTN","ECXDVSN",67,0)
 ;                  inactive on both dates, then division assumed inactive
"RTN","ECXDVSN",68,0)
 ;                  for entire date range
"RTN","ECXDVSN",69,0)
 ;assume division active; set ecxact=1
"RTN","ECXDVSN",70,0)
 S ECXACT=1
"RTN","ECXDVSN",71,0)
 ;check if division active on start date or end date;
"RTN","ECXDVSN",72,0)
 ;these dates are normally within the same month
"RTN","ECXDVSN",73,0)
 F ECXDATE=ECXSTART,ECXEND D
"RTN","ECXDVSN",74,0)
 .S DATE(ECXDATE)=$$SITE^VASITE(ECXDATE,ECXIEN)
"RTN","ECXDVSN",75,0)
 .S ECXD=0
"RTN","ECXDVSN",76,0)
 .I ECXIEN=$$PRIM^VASITE(ECXDATE) S ECXD=1
"RTN","ECXDVSN",77,0)
 ;if not active on start date and not active on end date, reset ecxact=0
"RTN","ECXDVSN",78,0)
 I DATE(ECXSTART)=-1,DATE(ECXEND)=-1 S ECXACT=0
"RTN","ECXDVSN",79,0)
 Q
"RTN","ECXDVSN",80,0)
MOV(ECXDIV,ECXALL,ECXSTART,ECXEND,ECXERR) ;division information for MOV extract audit report 
"RTN","ECXDVSN",81,0)
 ;selected divisions from medical center division file (#40.8)
"RTN","ECXDVSN",82,0)
 ;   input
"RTN","ECXDVSN",83,0)
 ;   (see ADM)
"RTN","ECXDVSN",84,0)
 ;   output
"RTN","ECXDVSN",85,0)
 ;   (see ADM)
"RTN","ECXDVSN",86,0)
 D ADM^ECXDVSN(.ECXDIV,ECXALL,ECXSTART,ECXEND,.ECXERR)
"RTN","ECXDVSN",87,0)
 Q
"RTN","ECXDVSN",88,0)
PAS(ECXDIV,ECXALL,ECXERR) ;setup division/site information for PAS extract audit report
"RTN","ECXDVSN",89,0)
 ;   input
"RTN","ECXDVSN",90,0)
 ;   ECXDIV = passed by reference array variable
"RTN","ECXDVSN",91,0)
 ;   ECXALL = 1
"RTN","ECXDVSN",92,0)
 ;   output
"RTN","ECXDVSN",93,0)
 ;   ECXDIV = data for default division/site;
"RTN","ECXDVSN",94,0)
 ;            ECXDIV(1)=ien in file #4^name^station number
"RTN","ECXDVSN",95,0)
 ;            where the INSTITUTION file pointer is obtained from file #728
"RTN","ECXDVSN",96,0)
 S ECXALL=1 D DEFAULT^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXDVSN",97,0)
 Q
"RTN","ECXDVSN",98,0)
TRT(ECXDIV,ECXALL,ECXERR) ;setup division/site information for TRT extract audit report
"RTN","ECXDVSN",99,0)
 ;   input
"RTN","ECXDVSN",100,0)
 ;   ECXDIV = passed by reference array variable
"RTN","ECXDVSN",101,0)
 ;   ECXALL = 1
"RTN","ECXDVSN",102,0)
 ;   output
"RTN","ECXDVSN",103,0)
 ;   ECXDIV = data for default division/site;
"RTN","ECXDVSN",104,0)
 ;            ECXDIV(1)=ien in file #4^name^station number
"RTN","ECXDVSN",105,0)
 ;            where the INSTITUTION file pointer is obtained from file #728
"RTN","ECXDVSN",106,0)
 S ECXALL=1 D DEFAULT^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXDVSN",107,0)
 Q
"RTN","ECXDVSN",108,0)
DEFAULT(ECXDIV,ECXALL,ECXERR) ;default division/site information for audit report
"RTN","ECXDVSN",109,0)
 ;   input
"RTN","ECXDVSN",110,0)
 ;   ECXDIV = passed by reference array variable
"RTN","ECXDVSN",111,0)
 ;   ECXALL = 1
"RTN","ECXDVSN",112,0)
 ;   output
"RTN","ECXDVSN",113,0)
 ;   ECXDIV = data for default division/site;
"RTN","ECXDVSN",114,0)
 ;            ECXDIV(1)=ien in file #4^name^station number
"RTN","ECXDVSN",115,0)
 ;            where the INSTITUTION file pointer is obtained from file #728
"RTN","ECXDVSN",116,0)
 N DIV,ECX
"RTN","ECXDVSN",117,0)
 S ECXERR=0
"RTN","ECXDVSN",118,0)
 S DIV=$P($G(^ECX(728,1,0)),U,1)
"RTN","ECXDVSN",119,0)
 I DIV="" S ECXERR=1 Q
"RTN","ECXDVSN",120,0)
 K ECX S DIC="^DIC(4,",DIQ(0)="I",DIQ="ECX",DA=DIV,DR=".01;99" D EN^DIQ1
"RTN","ECXDVSN",121,0)
 I $D(ECX) S ECXDIV(1)=DIV_U_ECX(4,DIV,.01,"I")_U_ECX(4,DIV,99,"I")
"RTN","ECXDVSN",122,0)
 I '$D(ECX) S ECXERR=1
"RTN","ECXDVSN",123,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN",124,0)
 Q
"RTN","ECXDVSN",125,0)
DEN(ECXDIV,ECXALL,ECXERR) ;setup division/site information for DEN extract audit report
"RTN","ECXDVSN",126,0)
 ;   input
"RTN","ECXDVSN",127,0)
 ;   ECXDIV = passed by reference array variable (required)
"RTN","ECXDVSN",128,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN",129,0)
 ;            '0' indicates user to select dental division;
"RTN","ECXDVSN",130,0)
 ;            '1' indicates 'all' dental divisions or only one division
"RTN","ECXDVSN",131,0)
 ;                exists in file #225; default is '1'
"RTN","ECXDVSN",132,0)
 ;   output
"RTN","ECXDVSN",133,0)
 ;   ECXDIV = data for dental division/site;
"RTN","ECXDVSN",134,0)
 ;            ECXDIV(ien in file #225)=ien in file #4^name^station number
"RTN","ECXDVSN",135,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN",136,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN",137,0)
 N X,Y,DIC,DTOUT,DUOUT,DIRUT,OUT,ECXD,ECXIEN
"RTN","ECXDVSN",138,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN",139,0)
 S ECXERR=0,ECXD=""
"RTN","ECXDVSN",140,0)
 ;if ecxall=1, then all dental divisions/sites
"RTN","ECXDVSN",141,0)
 I ECXALL=1 D
"RTN","ECXDVSN",142,0)
 .F  S ECXD=$O(^DENT(225,"B",ECXD)) Q:ECXD=""  S ECXIEN=$O(^(ECXD,"")) D
"RTN","ECXDVSN",143,0)
 ..S $P(ECXDIV(ECXIEN),U,3)=ECXD S DIC="^DIC(4,",DIC(0)="MX",X=ECXD D ^DIC
"RTN","ECXDVSN",144,0)
 ..S:+Y>0 ECXDIV(ECXIEN)=Y S:+Y=-1 ECXDIV(ECXIEN)=U
"RTN","ECXDVSN",145,0)
 ..S ECXDIV(ECXIEN)=ECXDIV(ECXIEN)_U_ECXD
"RTN","ECXDVSN",146,0)
 ;if ecxall=0, user selects some/all dental divisions/sites
"RTN","ECXDVSN",147,0)
 I ECXALL=0 S OUT=0 D
"RTN","ECXDVSN",148,0)
 .F  Q:OUT!ECXERR  D
"RTN","ECXDVSN",149,0)
 ..S DIC="^DENT(225,",DIC(0)="AEMQ" K X,Y D ^DIC
"RTN","ECXDVSN",150,0)
 ..I $G(DUOUT)!($G(DTOUT)) S OUT=1,ECXERR=1 Q
"RTN","ECXDVSN",151,0)
 ..I Y=-1,X="" S OUT=1 Q
"RTN","ECXDVSN",152,0)
 ..S ECXIEN=+Y,ECXD=$P(Y,U,2) K X,Y
"RTN","ECXDVSN",153,0)
 ..S DIC="^DIC(4,",DIC(0)="MX",X=ECXD D ^DIC
"RTN","ECXDVSN",154,0)
 ..S:+Y>0 ECXDIV(ECXIEN)=Y S:+Y=-1 ECXDIV(ECXIEN)=U
"RTN","ECXDVSN",155,0)
 ..S ECXDIV(ECXIEN)=ECXDIV(ECXIEN)_U_ECXD
"RTN","ECXDVSN",156,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN",157,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN",158,0)
 Q
"RTN","ECXDVSN",159,0)
ECS(ECXDIV,ECXALL,ECXERR) ;setup division/location information for ECS extract audit report
"RTN","ECXDVSN",160,0)
 ;   input
"RTN","ECXDVSN",161,0)
 ;   ECXDIV = passed by reference array variable (required)
"RTN","ECXDVSN",162,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN",163,0)
 ;            '0' indicates user to select EC location(s);
"RTN","ECXDVSN",164,0)
 ;            '1' indicates 'all' locations or only one location
"RTN","ECXDVSN",165,0)
 ;                exists in file #4 "LOC" index;
"RTN","ECXDVSN",166,0)
 ;            default is '1'
"RTN","ECXDVSN",167,0)
 ;   output
"RTN","ECXDVSN",168,0)
 ;   ECXDIV = data for EC location;
"RTN","ECXDVSN",169,0)
 ;            ECXDIV(ien in file #4)=ien in file #4^name^station number
"RTN","ECXDVSN",170,0)
 ;            where the INSTITUTION file pointer is obtained from 
"RTN","ECXDVSN",171,0)
 ;            "LOC" index in file #4
"RTN","ECXDVSN",172,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN",173,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN",174,0)
 ;
"RTN","ECXDVSN",175,0)
 N X,Y,I,DIC,DIR,DIRUT,DTOUT,DUOUT,NM,OUT,ECXD,ECXIEN,ECXLOC
"RTN","ECXDVSN",176,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN",177,0)
 S ECXERR=0,ECXD="",I=0
"RTN","ECXDVSN",178,0)
 ;get all available ec locations in ecxloc array
"RTN","ECXDVSN",179,0)
 F  S ECXD=$O(^DIC(4,"LOC",ECXD)) Q:ECXD=""  S I=I+1,ECXIEN=$O(^(ECXD,"")),ECXLOC(I)=ECXD_U_ECXIEN_U_$P($G(^DIC(4,ECXIEN,99)),U,1)
"RTN","ECXDVSN",180,0)
 ;if ecxall=1, then all ec locations
"RTN","ECXDVSN",181,0)
 I ECXALL=1 S I="" D  Q
"RTN","ECXDVSN",182,0)
 .F  S I=$O(ECXLOC(I)) Q:I=""  D
"RTN","ECXDVSN",183,0)
 ..S ECXIEN=$P(ECXLOC(I),U,2)
"RTN","ECXDVSN",184,0)
 ..S ECXDIV(ECXIEN)=ECXIEN_U_$P(ECXLOC(I),U,1)_U_$P(ECXLOC(I),U,3)
"RTN","ECXDVSN",185,0)
 I ECXALL=0 S OUT=0,I=0 D
"RTN","ECXDVSN",186,0)
 .W !!,"Event Capture Locations:",! S I=0,DIR(0)="SXO^"
"RTN","ECXDVSN",187,0)
 .;spaces are embedded in dir(0) to prevent user from selecting by alpha characters in name
"RTN","ECXDVSN",188,0)
 .F  S I=$O(ECXLOC(I)) Q:I=""  S NM=$P(ECXLOC(I),U,1) W !,?10,I_"  ",NM S DIR(0)=DIR(0)_I_":"_"-   "_NM_";"
"RTN","ECXDVSN",189,0)
 .W !
"RTN","ECXDVSN",190,0)
 .F  Q:OUT!ECXERR  D
"RTN","ECXDVSN",191,0)
 ..S DIR("A")="Select Event Capture Location",DIR("S")="I +Y=Y"
"RTN","ECXDVSN",192,0)
 ..D ^DIR
"RTN","ECXDVSN",193,0)
 ..I $G(DTOUT)!($G(DUOUT)) S ECXERR=1 Q
"RTN","ECXDVSN",194,0)
 ..I X="" D  Q
"RTN","ECXDVSN",195,0)
 ...I '$D(ECXDIV) W !!,"No Location selected...exiting.",! S OUT=1 Q
"RTN","ECXDVSN",196,0)
 ...W !!,"You have selected the following Location(s):",!
"RTN","ECXDVSN",197,0)
 ...S I=0 F  S I=$O(ECXDIV(I)) Q:I=""  W !,?10,$P(ECXDIV(I),U,2)_" ("_$P(ECXDIV(I),U,3)_")"
"RTN","ECXDVSN",198,0)
 ...W ! K X,Y,DIR S DIR(0)="Y",DIR("A")="Is that ok",DIR("B")="YES" D ^DIR
"RTN","ECXDVSN",199,0)
 ...I $D(DIRUT) S ECXERR=1
"RTN","ECXDVSN",200,0)
 ...I Y=0 S ECXERR=1
"RTN","ECXDVSN",201,0)
 ...S OUT=1
"RTN","ECXDVSN",202,0)
 ..S ECXIEN=$P(ECXLOC(X),U,2)
"RTN","ECXDVSN",203,0)
 ..S ECXDIV(ECXIEN)=ECXIEN_U_$P(ECXLOC(X),U,1)_U_$P(ECXLOC(X),U,3)
"RTN","ECXDVSN",204,0)
 ;exit
"RTN","ECXDVSN",205,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN",206,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN",207,0)
 Q
"RTN","ECXDVSN",208,0)
NUT() ; Set Divisions into screen array (prompt is one/many/all)
"RTN","ECXDVSN",209,0)
 ;Input  : SCRNARR - Screen array full global reference
"RTN","ECXDVSN",210,0)
 ;Output : 1 = OK     0 = User abort/timeout
"RTN","ECXDVSN",211,0)
 ;         @SCRNARR@("DIVISION") = User pick all divisions ?
"RTN","ECXDVSN",212,0)
 ;           1 = Yes (all)     0 = No
"RTN","ECXDVSN",213,0)
 ;         @SCRNARR@("DIVISION",PtrDiv) = Division name
"RTN","ECXDVSN",214,0)
 ;Note   : @SCRNARR@("DIVISION") is initialized (KILLed) on input
"RTN","ECXDVSN",215,0)
 ;       : @SCRNARR@("DIVISION",PtrDiv) is only set when the user
"RTN","ECXDVSN",216,0)
 ;         picked individual divisions (i.e. didn't pick all)
"RTN","ECXDVSN",217,0)
 ;
"RTN","ECXDVSN",218,0)
 ;Declare variables
"RTN","ECXDVSN",219,0)
 N VAUTD,Y,SCANARR
"RTN","ECXDVSN",220,0)
 ;Get division selection
"RTN","ECXDVSN",221,0)
 S DIC="^DIC(4,"
"RTN","ECXDVSN",222,0)
 S VAUTSTR="PATIENT DIVISION"
"RTN","ECXDVSN",223,0)
 S VAUTVB="SCANARR"
"RTN","ECXDVSN",224,0)
 S VAUTNI=2
"RTN","ECXDVSN",225,0)
 D FIRST^VAUTOMA
"RTN","ECXDVSN",226,0)
 I Y<0 Q 1
"RTN","ECXDVSN",227,0)
 M @SCRNARR@("DIVISION")=SCANARR
"RTN","ECXDVSN",228,0)
 Q 0
"RTN","ECXDVSN1")
0^4^B26922111^B27999936
"RTN","ECXDVSN1",1,0)
ECXDVSN1 ;ALB/JAP - Division selection utility (cont.) ; 3/30/07 7:56am
"RTN","ECXDVSN1",2,0)
 ;;3.0;DSS EXTRACTS;**8,105**;Dec 22, 1997;Build 70
"RTN","ECXDVSN1",3,0)
 ;
"RTN","ECXDVSN1",4,0)
ECQ(ECXDIV,ECXALL,ECXERR) ;setup division/site information for QSR extract audit report
"RTN","ECXDVSN1",5,0)
 ;   input
"RTN","ECXDVSN1",6,0)
 ;   ECXDIV = passed by reference array variable (required)
"RTN","ECXDVSN1",7,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN1",8,0)
 ;            '0' indicates user to select QUASAR site/division;
"RTN","ECXDVSN1",9,0)
 ;            '1' indicates 'all' sites/divisions or only one site/division
"RTN","ECXDVSN1",10,0)
 ;                exists in file #509850.8; currently only one site is allowed
"RTN","ECXDVSN1",11,0)
 ;                to be defined;
"RTN","ECXDVSN1",12,0)
 ;            default is '1'
"RTN","ECXDVSN1",13,0)
 ;   output
"RTN","ECXDVSN1",14,0)
 ;   ECXDIV = data for QUASAR site/division;
"RTN","ECXDVSN1",15,0)
 ;            ECXDIV(ien in file #4)=ien in file #509850.8^name^station number
"RTN","ECXDVSN1",16,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN1",17,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN1",18,0)
 ;
"RTN","ECXDVSN1",19,0)
 N X,Y,DIC,OUT,ECX,ECXD,ECXIEN
"RTN","ECXDVSN1",20,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN1",21,0)
 ;currently, only ONE site may be defined in file #509850.8
"RTN","ECXDVSN1",22,0)
 S:ECXALL=0 ECXALL=1
"RTN","ECXDVSN1",23,0)
 S ECXERR=0,ECXD=""
"RTN","ECXDVSN1",24,0)
 ;if ecxall=1, then all QUASAR sites/divisions; but there's only one
"RTN","ECXDVSN1",25,0)
 I ECXALL=1 D
"RTN","ECXDVSN1",26,0)
 .F  S ECXD=$O(^ACK(509850.8,"B",ECXD)) Q:ECXD=""  S ECXIEN=$O(^(ECXD,"")) D
"RTN","ECXDVSN1",27,0)
 ..K ECX S DIC="^DIC(4,",DIQ(0)="I",DIQ="ECX",DA=ECXD,DR=".01;99" D EN^DIQ1
"RTN","ECXDVSN1",28,0)
 ..I $D(ECX) S ECXDIV(ECXD)=ECXIEN_U_ECX(4,ECXD,.01,"I")_U_ECX(4,ECXD,99,"I")
"RTN","ECXDVSN1",29,0)
 ..I '$D(ECX) S ECXERR=1
"RTN","ECXDVSN1",30,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN1",31,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN1",32,0)
 Q
"RTN","ECXDVSN1",33,0)
 ;
"RTN","ECXDVSN1",34,0)
LAB(ECXACC,ECXALL,ECXERR) ;setup accession area information for LAB extract audit report
"RTN","ECXDVSN1",35,0)
 ;   input
"RTN","ECXDVSN1",36,0)
 ;   ECXACC = passed by reference array variable (required)
"RTN","ECXDVSN1",37,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN1",38,0)
 ;            '0' indicates user to select Accession Area(s);
"RTN","ECXDVSN1",39,0)
 ;            '1' indicates 'all' Accession Areas are selected
"RTN","ECXDVSN1",40,0)
 ;            default is '1'
"RTN","ECXDVSN1",41,0)
 ;   output
"RTN","ECXDVSN1",42,0)
 ;   ECXACC = data for Accession Area(s);
"RTN","ECXDVSN1",43,0)
 ;            ECXACC(ien in file #68)=name^abbreviation
"RTN","ECXDVSN1",44,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN1",45,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN1",46,0)
 ;
"RTN","ECXDVSN1",47,0)
 N X,Y,DIC,DIQ,DA,DR,DTOUT,DUOUT,DIRUT,OUT,ECX,ECXA,ECXIEN
"RTN","ECXDVSN1",48,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN1",49,0)
 S ECXERR=0,ECXA=""
"RTN","ECXDVSN1",50,0)
 ;if ecxall=1, then all accession areas are selected
"RTN","ECXDVSN1",51,0)
 I ECXALL=1 D
"RTN","ECXDVSN1",52,0)
 .;^LRO(68,"B",xxx,ien)=1 indicates a synonym; skip synonyms
"RTN","ECXDVSN1",53,0)
 .F  S ECXA=$O(^LRO(68,"B",ECXA)) Q:ECXA=""  S ECXIEN=$O(^(ECXA,"")) D
"RTN","ECXDVSN1",54,0)
 ..Q:^LRO(68,"B",ECXA,ECXIEN)=1
"RTN","ECXDVSN1",55,0)
 ..K ECX S DIC="^LRO(68,",DR=".01;.09",DIQ="ECX",DA=ECXIEN D EN^DIQ1
"RTN","ECXDVSN1",56,0)
 ..Q:'$D(ECX)
"RTN","ECXDVSN1",57,0)
 ..;acc. areas with ZZ in name indicates no longer used
"RTN","ECXDVSN1",58,0)
 ..Q:$E(ECX(68,ECXIEN,.01),1,2)="ZZ"
"RTN","ECXDVSN1",59,0)
 ..S ECXACC(ECXIEN)=ECX(68,ECXIEN,.01)_U_ECX(68,ECXIEN,.09)
"RTN","ECXDVSN1",60,0)
 ;if ecxall=0, user selects some/all acc. areas
"RTN","ECXDVSN1",61,0)
 ;allow user to choose "ZZ"'d acc. area even though it may currently be inactive
"RTN","ECXDVSN1",62,0)
 I ECXALL=0 S OUT=0 D
"RTN","ECXDVSN1",63,0)
 .F  Q:OUT!ECXERR  D
"RTN","ECXDVSN1",64,0)
 ..S DIC="^LRO(68,",DIC(0)="AEMQZ" K X,Y D ^DIC
"RTN","ECXDVSN1",65,0)
 ..I $G(DUOUT)!($G(DTOUT)) S OUT=1,ECXERR=1 Q
"RTN","ECXDVSN1",66,0)
 ..I Y=-1,X="" S OUT=1 Q
"RTN","ECXDVSN1",67,0)
 ..S ECXACC(+Y)=$P(Y(0),U,1)_U_$P(Y(0),U,11)
"RTN","ECXDVSN1",68,0)
 I ECXERR=1 K ECXACC
"RTN","ECXDVSN1",69,0)
 I '$D(ECXACC) S ECXERR=1
"RTN","ECXDVSN1",70,0)
 Q
"RTN","ECXDVSN1",71,0)
 ;
"RTN","ECXDVSN1",72,0)
NUR(ECXDIV,ECXALL,ECXERR) ;setup accession area information for LAB extract audit report
"RTN","ECXDVSN1",73,0)
 ;   input
"RTN","ECXDVSN1",74,0)
 ;   ECXDIV = passed by reference array variable (required)
"RTN","ECXDVSN1",75,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN1",76,0)
 ;            '0' indicates user to select nursing location(s)/division(s);
"RTN","ECXDVSN1",77,0)
 ;            '1' indicates 'all' nursing locations and medical center divisions 
"RTN","ECXDVSN1",78,0)
 ;                are selected or facility is non-divisional;
"RTN","ECXDVSN1",79,0)
 ;            default is '1'
"RTN","ECXDVSN1",80,0)
 ;   output
"RTN","ECXDVSN1",81,0)
 ;   ECXDIV = data for nursing location(s) and medical center division(s);
"RTN","ECXDVSN1",82,0)
 ;            ECXDIV("D",ien in file #40.8)=ien in file #4^name^station number
"RTN","ECXDVSN1",83,0)
 ;            ECXDIV(ien in file #211.4,ien in file #40.8)=ien in file #44
"RTN","ECXDVSN1",84,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN1",85,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN1",86,0)
 ;
"RTN","ECXDVSN1",87,0)
 ;N X,Y,DIC,DIQ,DA,OUT,ECX,ECXLOC,ECXSC,ECXDIEN,ECXNLIEN,ECXNLNM,ECXPRIME
"RTN","ECXDVSN1",88,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN1",89,0)
 S (ECXERR,OUT)=0,ECXSC=""
"RTN","ECXDVSN1",90,0)
 ;get ien in file #40.8 of primary division
"RTN","ECXDVSN1",91,0)
 S ECXPRIME=$$PRIM^VASITE(DT)
"RTN","ECXDVSN1",92,0)
 ;associate nursing locations with medical center divisions
"RTN","ECXDVSN1",93,0)
 F  S ECXSC=$O(^NURSF(211.4,"B",ECXSC)) Q:ECXSC=""  S ECXNLIEN="" F  S ECXNLIEN=$O(^NURSF(211.4,"B",ECXSC,ECXNLIEN)) Q:ECXNLIEN=""  D
"RTN","ECXDVSN1",94,0)
 .K ECX
"RTN","ECXDVSN1",95,0)
 .S ECXDIEN=0,ECXNLNM="",DIC="^SC(",DIQ(0)="I",DIQ="ECX",DA=ECXSC,DR=".01;3.5" D EN^DIQ1
"RTN","ECXDVSN1",96,0)
 .;if the 15th piece is null or y=-1 then ecxdien=primary division as default
"RTN","ECXDVSN1",97,0)
 .I $D(ECX) S ECXDIEN=+ECX(44,ECXSC,3.5,"I"),ECXNLNM=ECX(44,ECXSC,.01,"I")
"RTN","ECXDVSN1",98,0)
 .S:ECXDIEN=0 ECXDIEN=ECXPRIME
"RTN","ECXDVSN1",99,0)
 .S ECXLOC(ECXDIEN)="",ECXLOC(ECXDIEN,ECXNLIEN)=ECXSC_U_ECXNLNM
"RTN","ECXDVSN1",100,0)
 ;
"RTN","ECXDVSN1",101,0)
 ;if ecxall=1 don't prompt; setup all nursing locations and divisions incl. those w/o division
"RTN","ECXDVSN1",102,0)
 I ECXALL=1 S ECXDIEN="" D
"RTN","ECXDVSN1",103,0)
 .F  S ECXDIEN=$O(ECXLOC(ECXDIEN)) Q:ECXDIEN=""  D
"RTN","ECXDVSN1",104,0)
 ..S DIC="^DG(40.8,",DIC(0)="NXZ",X=ECXDIEN D ^DIC I +Y>0 D
"RTN","ECXDVSN1",105,0)
 ...S ECXDIV("D",ECXDIEN)=$P(Y(0),U,7)_U_$P(Y(0),U,1)_U_$P(Y(0),U,2),ECXNLIEN=""
"RTN","ECXDVSN1",106,0)
 ...F  S ECXNLIEN=$O(ECXLOC(ECXDIEN,ECXNLIEN)) Q:ECXNLIEN=""  S ECXDIV(ECXNLIEN,ECXDIEN)=ECXLOC(ECXDIEN,ECXNLIEN)
"RTN","ECXDVSN1",107,0)
 ;
"RTN","ECXDVSN1",108,0)
 ;if ecxall=0 let user select division(s)
"RTN","ECXDVSN1",109,0)
 I ECXALL=0 F  Q:OUT!ECXERR  D
"RTN","ECXDVSN1",110,0)
 .S DIC="^DG(40.8,",DIC(0)="AEMQZ",DIC("S")="I $P(^(0),U,3)'=1"
"RTN","ECXDVSN1",111,0)
 .D ^DIC I $G(DUOUT)!($G(DTOUT)) S OUT=1,ECXERR=1 Q
"RTN","ECXDVSN1",112,0)
 .I Y=-1,X="" S OUT=1 Q
"RTN","ECXDVSN1",113,0)
 .S ECXDIEN=+Y,NM=$P(Y,U,2)
"RTN","ECXDVSN1",114,0)
 .I '$D(ECXLOC(ECXDIEN)) D  Q
"RTN","ECXDVSN1",115,0)
 ..W !!,?5,"Division "_NM_" not associated with Nursing Locations.",!,?5,"Try again...",!
"RTN","ECXDVSN1",116,0)
 .S ECXDIV("D",ECXDIEN)=$P(Y(0),U,7)_U_$P(Y(0),U,1)_U_$P(Y(0),U,2),ECXNLIEN=""
"RTN","ECXDVSN1",117,0)
 .F  S ECXNLIEN=$O(ECXLOC(ECXDIEN,ECXNLIEN)) Q:ECXNLIEN=""  S ECXDIV(ECXNLIEN,ECXDIEN)=ECXLOC(ECXDIEN,ECXNLIEN)
"RTN","ECXDVSN1",118,0)
 ;in case of user up-arrow out or timeout, make sure nothing returned in ecxdiv
"RTN","ECXDVSN1",119,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN1",120,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN1",121,0)
 Q
"RTN","ECXDVSN1",122,0)
 ;
"RTN","ECXDVSN1",123,0)
PRE(ECXDIV,ECXALL,ECXERR) ;setup site information for PRE extract audit report
"RTN","ECXDVSN1",124,0)
 ;   input
"RTN","ECXDVSN1",125,0)
 ;   ECXDIV = passed by reference array variable (required)
"RTN","ECXDVSN1",126,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN1",127,0)
 ;            '0' indicates user to select Pharmacy site(s);
"RTN","ECXDVSN1",128,0)
 ;            '1' indicates 'all' sites are selected
"RTN","ECXDVSN1",129,0)
 ;            default is '1'
"RTN","ECXDVSN1",130,0)
 ;   output
"RTN","ECXDVSN1",131,0)
 ;   ECXDIV = data for Pharmacy site(s);
"RTN","ECXDVSN1",132,0)
 ;            ECXDIV(ien in file #59)=IEN in file #59^name^site number^IEN in file #4
"RTN","ECXDVSN1",133,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN1",134,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN1",135,0)
 ;
"RTN","ECXDVSN1",136,0)
 N X,Y,DIC,DIQ,DA,OUT,ECXARR,ECXP,ECXIEN,ARRAY
"RTN","ECXDVSN1",137,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN1",138,0)
 S ECXERR=0,ECXP="",ARRAY="^TMP($J,""ECXDSS"")"
"RTN","ECXDVSN1",139,0)
 K @ARRAY
"RTN","ECXDVSN1",140,0)
 ;if ecxall=1, then all pharmacy sites are selected or there's only one
"RTN","ECXDVSN1",141,0)
 I ECXALL=1 S ECXP="" D
"RTN","ECXDVSN1",142,0)
 .D PSS^PSO59(,"??","ECXDSS")
"RTN","ECXDVSN1",143,0)
 .F  S ECXP=$O(@ARRAY@("B",ECXP)) Q:ECXP=""  S ECXIEN=$O(^(ECXP,0)) Q:'ECXIEN  Q:'$D(^(ECXIEN))  D
"RTN","ECXDVSN1",144,0)
 ..S ECXDIV(ECXIEN)=ECXIEN_U_@ARRAY@(ECXIEN,.01)_U_^(.06)_U_^(100)
"RTN","ECXDVSN1",145,0)
 ;if ecxall=0, then user selects pharmacy site(s)
"RTN","ECXDVSN1",146,0)
 I ECXALL=0 S OUT=0 D
"RTN","ECXDVSN1",147,0)
 .F  Q:OUT!ECXERR  D
"RTN","ECXDVSN1",148,0)
 ..N DIC,X,Y,DUOUT,DTOUT
"RTN","ECXDVSN1",149,0)
 ..S DIC="^PS(59,",DIC(0)="AEMQZ"
"RTN","ECXDVSN1",150,0)
 ..D DIC^PSODI(59,.DIC,.X)
"RTN","ECXDVSN1",151,0)
 ..I $G(DUOUT)!($G(DTOUT)) S OUT=1,ECXERR=1 Q
"RTN","ECXDVSN1",152,0)
 ..I Y=-1,X="" S OUT=1 Q
"RTN","ECXDVSN1",153,0)
 ..D PSS^PSO59(+Y,,"ECXDSS")
"RTN","ECXDVSN1",154,0)
 ..Q:'$D(@ARRAY)
"RTN","ECXDVSN1",155,0)
 ..S ECXDIV(ECXIEN)=ECXIEN_U_@ARRAY@(ECXIEN,.01)_U_^(.06)_U_^(100)
"RTN","ECXDVSN1",156,0)
 ;
"RTN","ECXDVSN1",157,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN1",158,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN1",159,0)
 Q
"RTN","ECXEC")
0^40^B42363608^B37877116
"RTN","ECXEC",1,0)
ECXEC ;ALB/JAP,BIR/JLP,PTD-DSS Event Capture Extract  ; 10/2/07 2:33pm
"RTN","ECXEC",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,24,27,33,39,46,49,71,89,92,105**;Dec 22, 1997;Build 70
"RTN","ECXEC",3,0)
BEG ;entry point from option
"RTN","ECXEC",4,0)
 I '$D(^ECH) W !,"Event Capture is not initialized",!! Q
"RTN","ECXEC",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXEC",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXEC",7,0)
 Q
"RTN","ECXEC",8,0)
START ;begin EC extract
"RTN","ECXEC",9,0)
 N X,Y,ECDCM,ECXNPRFI
"RTN","ECXEC",10,0)
 S ECED=ECED+.3,ECLL=0
"RTN","ECXEC",11,0)
 K ^TMP("EC",$J)
"RTN","ECXEC",12,0)
 F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  D
"RTN","ECXEC",13,0)
 .F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXEC",14,0)
 ..F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D UPDATE
"RTN","ECXEC",15,0)
 Q
"RTN","ECXEC",16,0)
 ;
"RTN","ECXEC",17,0)
UPDATE ;sets record and updates counters
"RTN","ECXEC",18,0)
 S ECCH=^ECH(ECDA,0),ECL=$P(ECCH,U,4),ECXDFN=$P(ECCH,U,2)
"RTN","ECXEC",19,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECL)  ;Get production division from file 4
"RTN","ECXEC",20,0)
 S ECDT=$P(ECCH,U,3),ECM=$P(ECCH,U,6),ECC=$P(ECCH,U,8)
"RTN","ECXEC",21,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECDT,"1;3;5;")
"RTN","ECXEC",22,0)
 S ECTM=$$ECXTIME^ECXUTL(ECDT),ECP=$P(ECCH,U,9)
"RTN","ECXEC",23,0)
 Q:ECP']""
"RTN","ECXEC",24,0)
 S ECO=$P(ECCH,U,12),ECV=$P(ECCH,U,10),ECDU=$P(ECCH,U,7)
"RTN","ECXEC",25,0)
 S ECXUNIT=$G(^ECD(ECDU,0)),ECCS=+$P(ECXUNIT,U,4),ECDCM=$P(ECXUNIT,U,5)
"RTN","ECXEC",26,0)
 S ECXDSSP="",ECXDSSD=$E(ECDCM,1,10),ECUSTOP=$P(ECXUNIT,U,10),ECUPCE=$P(ECXUNIT,U,14)
"RTN","ECXEC",27,0)
 S ICD9=$P($G(^ECH(ECDA,"P")),U,2) S:ICD9="" ICD9=" "
"RTN","ECXEC",28,0)
 S ECXICD9=$P($G(^ICD9(ICD9,0)),U)
"RTN","ECXEC",29,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXEC",30,0)
 S (CNT,I)=0
"RTN","ECXEC",31,0)
 F  S CNT=$O(^ECH(ECDA,"DX",CNT)) Q:'CNT  D  Q:I>3
"RTN","ECXEC",32,0)
 .S ICD9=$P($G(^ECH(ECDA,"DX",CNT,0)),U) D:ICD9'=""
"RTN","ECXEC",33,0)
 ..S I=I+1,@("ECXICD9"_I)=$P($G(^ICD9(ICD9,0)),U)
"RTN","ECXEC",34,0)
 ;derivation of dss identifier depends on whether dss unit is 
"RTN","ECXEC",35,0)
 ;set to send data to pce
"RTN","ECXEC",36,0)
 S ECAC=$P($G(ECCH),U,19)
"RTN","ECXEC",37,0)
 ;if this is a record that 'goes to pce', then get the dss identifier
"RTN","ECXEC",38,0)
 ;from the clinic stop codes
"RTN","ECXEC",39,0)
 S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",40,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECXA="O")) D
"RTN","ECXEC",41,0)
 .D:+ECAC
"RTN","ECXEC",42,0)
 ..S ECAC1=$P($G(^SC(+ECAC,0)),U,7),ECAC2=$P($G(^(0)),U,18)
"RTN","ECXEC",43,0)
 ..I 'ECAC2 S ECAC2S="000"
"RTN","ECXEC",44,0)
 ..I 'ECAC1 S (ECAC1S,ECAC2S)="000" Q
"RTN","ECXEC",45,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECAC1,0)),U,2)
"RTN","ECXEC",46,0)
 ..S ECAC2S=$P($G(^DIC(40.7,+ECAC2,0)),U,2)
"RTN","ECXEC",47,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S=$$RJ^XLFSTR(ECAC2S,3,0)
"RTN","ECXEC",48,0)
 .S:'ECAC (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",49,0)
 ;if this record doesn't go to pce, then get the dss identifier
"RTN","ECXEC",50,0)
 ;from the dss unit
"RTN","ECXEC",51,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECXA="I")) D
"RTN","ECXEC",52,0)
 .I +ECUSTOP D
"RTN","ECXEC",53,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECUSTOP,0)),U,2)
"RTN","ECXEC",54,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S="000"
"RTN","ECXEC",55,0)
 .I 'ECUSTOP D
"RTN","ECXEC",56,0)
 ..S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",57,0)
 S ECDSS=ECAC1S_ECAC2S
"RTN","ECXEC",58,0)
 I ECXLOGIC>2003 I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXEC",59,0)
 S ECXDIV=""
"RTN","ECXEC",60,0)
 ;
"RTN","ECXEC",61,0)
 ;- Ord Div, Contrct St/End Dates, Contrct Type placeholders for FY2002
"RTN","ECXEC",62,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXEC",63,0)
 ;setup provider(s) as'2'_ien
"RTN","ECXEC",64,0)
 S (ECU1A,ECU2A,ECU3A,ECU1NPI,ECU2NPI,ECU3NPI,ECXPPC1,ECXPPC2,ECXPPC3)=""
"RTN","ECXEC",65,0)
 S (ECU1,ECU2,ECU3)=""
"RTN","ECXEC",66,0)
 K ECXPRV S ECXPROV=$$GETPRV^ECPRVMUT(ECDA,.ECXPRV) I ECXPROV Q
"RTN","ECXEC",67,0)
 F I=1:1:3 S Y=$O(ECXPRV("")) I Y'="" S @("ECU"_I)=+ECXPRV(Y) K ECXPRV(Y)
"RTN","ECXEC",68,0)
 S:$L(ECU1) ECXPPC1=$$PRVCLASS^ECXUTL(ECU1,ECDT),ECU1A="2"_$P(ECU1,";")
"RTN","ECXEC",69,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU1,ECDT)
"RTN","ECXEC",70,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU1NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",71,0)
 S:$L(ECU2) ECXPPC2=$$PRVCLASS^ECXUTL(ECU2,ECDT),ECU2A="2"_$P(ECU2,";")
"RTN","ECXEC",72,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU2,ECDT)
"RTN","ECXEC",73,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU2NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",74,0)
 S:$L(ECU3) ECXPPC3=$$PRVCLASS^ECXUTL(ECU3,ECDT),ECU3A="2"_$P(ECU3,";")
"RTN","ECXEC",75,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU3,ECDT)
"RTN","ECXEC",76,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU3NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",77,0)
 ;change for version 2 where ECP is a variable pointer and we want to
"RTN","ECXEC",78,0)
 ;expand it category = category or null if stored as 0
"RTN","ECXEC",79,0)
 D:ECP[";"
"RTN","ECXEC",80,0)
 .S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U)_"01",ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L"),ECC=$S(ECC:ECC,1:"")
"RTN","ECXEC",81,0)
 ;pick up EC to PCE data from "P" in File 721
"RTN","ECXEC",82,0)
 S ECPCE=$G(^ECH(ECDA,"P")),ECPCE1=$P(ECPCE,U),ECPCE2=$P(ECPCE,U,2)
"RTN","ECXEC",83,0)
 S ECPCE7=$S($P(ECPCE,U,7)=1:"Y",1:"N")
"RTN","ECXEC",84,0)
 S ECXCMOD=""
"RTN","ECXEC",85,0)
 I $D(^ECH(ECDA,"MOD")) D
"RTN","ECXEC",86,0)
 .S MOD=0,M=""
"RTN","ECXEC",87,0)
 .F  S MOD=$O(^ECH(ECDA,"MOD",MOD)) Q:'MOD  S M=$P(^(MOD,0),U) D
"RTN","ECXEC",88,0)
 ..I M S ECXCMOD=ECXCMOD_M_";"
"RTN","ECXEC",89,0)
 .K MOD,M
"RTN","ECXEC",90,0)
 S:ECP?1.N ECP=$$CPT^ECXUTL3($E(ECP,1,5),"",ECV)
"RTN","ECXEC",91,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPCE1,ECXCMOD,ECV)
"RTN","ECXEC",92,0)
 ;
"RTN","ECXEC",93,0)
 ;- Observation Patient Indicator (YES/NO)
"RTN","ECXEC",94,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXEC",95,0)
 ;
"RTN","ECXEC",96,0)
 ;- CNH status (YES/NO)
"RTN","ECXEC",97,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXEC",98,0)
 ;
"RTN","ECXEC",99,0)
 ;- encounter classification
"RTN","ECXEC",100,0)
 S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR)="",ECXVISIT=$P(ECCH,U,21)
"RTN","ECXEC",101,0)
 I ECXVISIT'="" D
"RTN","ECXEC",102,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXEC",103,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE"))
"RTN","ECXEC",104,0)
 .S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXEC",105,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXEC",106,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXEC",107,0)
 ;
"RTN","ECXEC",108,0)
 ; - Get national patient record flag Indicator if exist
"RTN","ECXEC",109,0)
 D NPRF^ECXUTL5
"RTN","ECXEC",110,0)
 ;
"RTN","ECXEC",111,0)
 ; - If no encounter number don't file record
"RTN","ECXEC",112,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSS,ECCS)
"RTN","ECXEC",113,0)
 D:ECXENC'="" FILE
"RTN","ECXEC",114,0)
 Q
"RTN","ECXEC",115,0)
 ;
"RTN","ECXEC",116,0)
FILE ;file record in #727.815
"RTN","ECXEC",117,0)
 ;node0
"RTN","ECXEC",118,0)
 ;ecode=inst ECL^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day^
"RTN","ECXEC",119,0)
 ;DSS unit ECDU^category ECC^procedure ECP^volume ECV^
"RTN","ECXEC",120,0)
 ;cost center ECCS^ordering sec ECO^section ECM^
"RTN","ECXEC",121,0)
 ;provider ECU1A^prov per cls ECXPPC1^prov 2 ECU2A^prov#2 per cls ECXPPC2
"RTN","ECXEC",122,0)
 ;^prov 3 ECU3A^prov#3 per cls ECXPPC3^^mov # ECXMN^treat spec ECXTS
"RTN","ECXEC",123,0)
 ;^time ECTM^primary care team ECPTTM^primary care provider ECPTPR
"RTN","ECXEC",124,0)
 ;^pce cpt code (ECXCPT)^primary icd-9 code ECXICD9^secondary icd-9
"RTN","ECXEC",125,0)
 ;ECXICD91^secondary icd-9 ECXICD92^secondary icd-9 ECXICD93^secondary 
"RTN","ECXEC",126,0)
 ;icd-9 ECXICD94^agent orange ECXAST^radiation exposure ECXRST^
"RTN","ECXEC",127,0)
 ;environmental contaminants ECXEST^service connected ECPTPR^sent to pce
"RTN","ECXEC",128,0)
 ;ECPCE7^^dss identifier ECDSS^dss dept
"RTN","ECXEC",129,0)
 ;node1
"RTN","ECXEC",130,0)
 ;mpi ECXMPI^dss dept ECXDSSD^PLACEHOLDER
"RTN","ECXEC",131,0)
 ;placeholder^placeholder^placeholder^
"RTN","ECXEC",132,0)
 ;placeholder^pc prov person class ECCLAS^
"RTN","ECXEC",133,0)
 ;assoc pc prov ECASPR^assoc pc prov person class ECCLAS2^
"RTN","ECXEC",134,0)
 ;placeholder^
"RTN","ECXEC",135,0)
 ;divison ECXDIV^mst status ECXMST^dom ECXDOM^date of birth ECXDOB^
"RTN","ECXEC",136,0)
 ;enrollment category ECXCAT^ enrollment status ECXSTAT^enrollment
"RTN","ECXEC",137,0)
 ;priority ECXPRIOR^period of service ECXPOS^purple heart indicator
"RTN","ECXEC",138,0)
 ;ECXPHI^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXEC",139,0)
 ;ao loc ECXAOL^ord div ECXODIV^contr st dt ECXCSDT^
"RTN","ECXEC",140,0)
 ;contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXEC",141,0)
 ;production division ECXPDIV^eligibility ECXELIG^
"RTN","ECXEC",142,0)
 ;head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race1 ECXRAC1
"RTN","ECXEC",143,0)
 ;enrollment location ECXENRL^^enrollment priority
"RTN","ECXEC",144,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient
"RTN","ECXEC",145,0)
 ;type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date
"RTN","ECXEC",146,0)
 ;ECXCVEDT^enc cv eligible ECXCVENC^national patient record flag
"RTN","ECXEC",147,0)
 ;ECXNPRFI^emerg response indic(FEMA) ECXERI^agent orange indic ECXAO^
"RTN","ECXEC",148,0)
 ;environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL
"RTN","ECXEC",149,0)
 ;^radiation ECXIR^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT
"RTN","ECXEC",150,0)
 ;^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^
"RTN","ECXEC",151,0)
 ;provider npi ECU1NPI^provider #2 ECU2NPI^provider #3 ECU3NPI
"RTN","ECXEC",152,0)
 N DA,DIK
"RTN","ECXEC",153,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXEC",154,0)
 S ECODE=EC7_U_EC23_U_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXEC",155,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECDT,ECXYM)_U_ECDU_U_ECC_U
"RTN","ECXEC",156,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECU1A_U_ECXPPC1_U
"RTN","ECXEC",157,0)
 S ECODE=ECODE_ECU2A_U_ECXPPC2_U_ECU3A_U_ECXPPC3_U_U_ECXMN_U
"RTN","ECXEC",158,0)
 S ECODE=ECODE_ECXTS_U_ECTM_U
"RTN","ECXEC",159,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_ECXCPT_U_ECXICD9_U
"RTN","ECXEC",160,0)
 S ECODE=ECODE_ECXICD91_U_ECXICD92_U_ECXICD93_U
"RTN","ECXEC",161,0)
 S ECODE=ECODE_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXEC",162,0)
 S ECODE=ECODE_ECSC_U_ECPCE7_U_U_ECDSS_U_U
"RTN","ECXEC",163,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U
"RTN","ECXEC",164,0)
 S ECODE1=ECODE1_U_ECASPR_U_ECCLAS2_U_U_ECXDIV_U
"RTN","ECXEC",165,0)
 S ECODE1=ECODE1_ECXMST_U_ECXDOM_U_ECXDOB_U_ECXCAT_U_ECXSTAT_U
"RTN","ECXEC",166,0)
 S ECODE1=ECODE1_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXEC",167,0)
 S ECODE1=ECODE1_ECXODIV_U_ECXCSDT_U_ECXCEDT_U_ECXCTYP_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXEC",168,0)
 S ECODE1=ECODE1_ECXELIG_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXEC",169,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL_U
"RTN","ECXEC",170,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXEC",171,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXEC",172,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXEC",173,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECU1NPI_U_ECU2NPI_U_ECU3NPI
"RTN","ECXEC",174,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXEC",175,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXEC",176,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXEC",177,0)
 Q
"RTN","ECXEC",178,0)
 ;
"RTN","ECXEC",179,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXEC",180,0)
 S ECHEAD="ECS"
"RTN","ECXEC",181,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXEC",182,0)
 Q
"RTN","ECXEC",183,0)
 ;
"RTN","ECXEC",184,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXEC",185,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXFELOC")
0^5^B17796989^B17110525
"RTN","ECXFELOC",1,0)
ECXFELOC ;BIR/DMA,CML-Print Feeder Locations; [ 05/07/96  8:41 AM ] ; 6/12/07 6:29am
"RTN","ECXFELOC",2,0)
 ;;3.0;DSS EXTRACTS;**1,8,105**;Dec 22, 1997;Build 70
"RTN","ECXFELOC",3,0)
EN ;entry point from option
"RTN","ECXFELOC",4,0)
 W !!,"Print list of feeder locations.",! S QFLG=1
"RTN","ECXFELOC",5,0)
 K %ZIS S %ZIS="Q" D ^%ZIS Q:POP 
"RTN","ECXFELOC",6,0)
 I $D(IO("Q")) S ZTDESC="Feeder Location List (DSS)",ZTRTN="START^ECXFELOC" D ^%ZTLOAD D ^%ZISC G OUT
"RTN","ECXFELOC",7,0)
 U IO
"RTN","ECXFELOC",8,0)
START ;queued entry point
"RTN","ECXFELOC",9,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXFELOC",10,0)
 K ^TMP($J) S (QFLG,PG)=0,$P(LN,"-",81)=""
"RTN","ECXFELOC",11,0)
LAB S EC=0 F  S EC=$O(^LRO(68,EC)) Q:'EC  I $D(^(EC,0)) S EC1=^(0),^TMP($J,"LAB",$P(EC1,U,11),EC)=$P(EC1,U)
"RTN","ECXFELOC",12,0)
ECS S EC=0 I $P($G(^EC(720.1,1,0)),U,2) D  G IV
"RTN","ECXFELOC",13,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),"-",1,2),EC2=$P($G(^ECD(+$P(EC1,"-",2),0)),U),^TMP($J,"ECS",EC1,EC1)=EC2
"RTN","ECXFELOC",14,0)
 F  S EC=$O(^ECK(EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),"-",1,2),EC2=$P($G(^ECD(+$P(EC1,"-",2),0)),U),^TMP($J,"ECS",EC1,EC1)=EC2
"RTN","ECXFELOC",15,0)
IV S EC=0 F  S EC=$O(^DG(40.8,EC)) Q:'EC  I $D(^DG(40.8,EC,0)) S EC1=$E($P(^(0),U),1,30),^TMP($J,"IVP","IVP"_EC,EC)="IV Pharmacy-"_EC1
"RTN","ECXFELOC",16,0)
CLI S EC=0 F  S EC=$O(^SC(EC)) Q:'EC  I $D(^(EC,0)) S EC1=^(0),ECS=$P(EC1,U,15),ECSC=$P($G(^DIC(40.7,+$P(EC1,U,7),0)),U,2),ECD=$P(EC1,U) S:'ECS ECS=1 D
"RTN","ECXFELOC",17,0)
 .I $P(EC1,U,17)'="Y",$P(EC1,U,3)="C" S DAT=$G(^SC(EC,"I")),ID=+DAT,RD=$P(DAT,U,2) I 'ID!(ID>DT)!(RD&(RD<DT)) S ^TMP($J,"CLI",ECS_ECSC,EC)=ECD
"RTN","ECXFELOC",18,0)
PRE N ARRAY S ARRAY="^TMP($J,""ECXDSS"")" K @ARRAY D PSS^PSO59(,"??","ECXDSS") I @ARRAY@(0)>0 G V6
"RTN","ECXFELOC",19,0)
 ;dbia (#4689)
"RTN","ECXFELOC",20,0)
 S EC=0 F  S EC=$O(^DIC(59,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$E($P(^(0),U),1,30),^TMP($J,"PRE","PRE"_EC,EC)="Prescriptions-"_EC1
"RTN","ECXFELOC",21,0)
 G RAD
"RTN","ECXFELOC",22,0)
V6 S EC=0 F  S EC=$O(@ARRAY@(EC)) Q:'EC  I $D(^(EC)) S EC1=$E(@ARRAY@(EC,.01),1,30),^TMP($J,"PRE","PRE"_EC,EC)="Prescriptions-"_EC1
"RTN","ECXFELOC",23,0)
 K @ARRAY
"RTN","ECXFELOC",24,0)
RAD S EC=0 F  S EC=$O(^RA(79,EC)),EC1=0 Q:'EC  I $D(^(EC,0)) S ECD=$P(^(0),U) F  S EC1=$O(^RA(79.2,EC1)) Q:'EC1  I $D(^(EC1,0)) S ECD1=$P(^(0),U),^TMP($J,"RAD",EC_"-"_EC1,EC_"-"_EC1)=ECD_"-"_ECD1
"RTN","ECXFELOC",25,0)
NUR S EC=0 F  S EC=$O(^NURSF(211.4,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),U),EC1=$P($G(^SC(+EC1,0)),U),^TMP($J,"NUR",EC,EC)=EC1
"RTN","ECXFELOC",26,0)
SUR F EC=1:1:14 S EC2=$P($T(@EC),";",3) F EC1="I","A","D","M","P","C","S" S EC3=$P($T(@EC1),";",3),^TMP($J,"SUR",$P(EC2,U)_EC1,EC)=$P(EC2,U,2)_"-"_EC3
"RTN","ECXFELOC",27,0)
1 ;;ORGE^GENERAL PURPOSE OPERATING ROOM
"RTN","ECXFELOC",28,0)
2 ;;OROR^ORTHOPEDIC OPERATING ROOM
"RTN","ECXFELOC",29,0)
3 ;;ORCA^CARDIAC OPERATING ROOM
"RTN","ECXFELOC",30,0)
4 ;;ORNE^NEUROSURGERY OPERATING ROOM
"RTN","ECXFELOC",31,0)
5 ;;ORCN^CARDIAC/NEURO OPERATING ROOM
"RTN","ECXFELOC",32,0)
6 ;;ORAM^AMBULATORY OPERATING ROOM
"RTN","ECXFELOC",33,0)
7 ;;ORIN^INTENSIVE CARE UNIT
"RTN","ECXFELOC",34,0)
8 ;;OREN^ENDOSCOPY ROOM
"RTN","ECXFELOC",35,0)
9 ;;ORCY^CYSTOSCOPY ROOM
"RTN","ECXFELOC",36,0)
10 ;;ORWA^WARD
"RTN","ECXFELOC",37,0)
11 ;;ORCL^CLINIC
"RTN","ECXFELOC",38,0)
12 ;;ORDE^DEDICATED ROOM
"RTN","ECXFELOC",39,0)
13 ;;OROT^OTHER LOCATION
"RTN","ECXFELOC",40,0)
14 ;;ORNO^UNKNOWN
"RTN","ECXFELOC",41,0)
I ;;IMPLANTS
"RTN","ECXFELOC",42,0)
A ;;ANESTHESIA TIME
"RTN","ECXFELOC",43,0)
D ;;SURGERY TIME (DENTAL)
"RTN","ECXFELOC",44,0)
M ;;SURGERY TIME (MEDICINE)
"RTN","ECXFELOC",45,0)
P ;;SURGERY TIME (PSYCH)
"RTN","ECXFELOC",46,0)
C ;;SURGERY TIME (SPINAL CORD)
"RTN","ECXFELOC",47,0)
S ;;SURGERY TIME (SURGERY)
"RTN","ECXFELOC",48,0)
UDP S EC=0 F  S EC=$O(^DG(40.8,EC)) Q:'EC  I $D(^DG(40.8,EC,0)) S EC1=$E($P(^(0),U),1,30),^TMP($J,"UDP","UDP"_EC,EC)="Unit Dose Medications-"_EC1
"RTN","ECXFELOC",49,0)
DEN S EC=0 F  S EC=$O(^DENT(225,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),U),^TMP($J,"DEN",EC1,EC)="Dental "_EC1
"RTN","ECXFELOC",50,0)
 ;
"RTN","ECXFELOC",51,0)
PRINT ;
"RTN","ECXFELOC",52,0)
 S EC="" F  S EC=$O(^TMP($J,EC)),EC1="" Q:EC=""  Q:QFLG  D HEAD Q:QFLG  F  S EC1=$O(^TMP($J,EC,EC1)),EC2=""  Q:EC1=""  Q:QFLG  F  S EC2=$O(^TMP($J,EC,EC1,EC2)) Q:EC2=""  Q:QFLG  D
"RTN","ECXFELOC",53,0)
 .W !,?5,EC1,?23,^(EC2) I $Y+3>IOSL D HEAD Q:QFLG
"RTN","ECXFELOC",54,0)
OUT I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECXFELOC",55,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXFELOC",56,0)
 K ^TMP($J),DAT,EC,EC1,EC2,EC3,ECD,ECD1,ECS,ECSC,ID,JJ,LN,PG,POP,QFLG,RD,SS,X,Y
"RTN","ECXFELOC",57,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","ECXFELOC",58,0)
HEAD ;
"RTN","ECXFELOC",59,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXFELOC",60,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXFELOC",61,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,?15,"Feeder Location List For Feeder System ",EC,?72,"Page: ",PG,!!,?5,"FEEDER LOCATION",?23,"DESCRIPTION",!,LN
"RTN","ECXFELOC",62,0)
 Q
"RTN","ECXKILL")
0^23^B6793618^B6122463
"RTN","ECXKILL",1,0)
ECXKILL ;BIR/DMA,PTD-Kill Local Variables ; 5/30/2007
"RTN","ECXKILL",2,0)
 ;;3.0;DSS EXTRACTS;**9,8,21,24,31,39,49,84,89,92,105**;Dec 22, 1997;Build 70
"RTN","ECXKILL",3,0)
 ;
"RTN","ECXKILL",4,0)
 K %,%DT,%Y,%ZIS,A,A1,A2,ABR,B,BY,D,D0,D1,DA,DAT,DATA,DATA1,DATA2,DATA6
"RTN","ECXKILL",5,0)
 K DATAOP,DD,DFN,DHDH,DIC,DIE,DIK,DINUM,DIQ
"RTN","ECXKILL",6,0)
 K ECDAPRNP,ECDPRNPI,ECISNPI,ECDOCNPI
"RTN","ECXKILL",7,0)
 K ECU1NPI,ECU2NPI,ECU3NPI
"RTN","ECXKILL",8,0)
 K DIR,DIRUT,DO,DR,DTOUT,DUOUT,EC,EC0,EC1,EC10,EC11,EC16,EC2,EC23,EC2NODE
"RTN","ECXKILL",9,0)
 K EC3,EC42,EC50,EC6,EC7,ECA,ECAC,ECACA,ECAD,ECADM,ECALL
"RTN","ECXKILL",10,0)
 K ECANE,ECAO,ECARG,ECAS,ECAT,ECATSV,ECB,ECC,ECCA,ECCAN,ECCAT,ECCH,ECCN
"RTN","ECXKILL",11,0)
 K ECCNT,ECCS,ECCSC,ECD,ECD0,ECD1,ECDA,ECDAL,ECDAT
"RTN","ECXKILL",12,0)
 K ECDATA,ECDATA1,ECDATE,ECDEN,ECDEX,ECDF,ECDFN,ECDFN0,ECDI,ECDIA,ECDIF
"RTN","ECXKILL",13,0)
 K ECDIV,ECDL,ECDN,ECDNEW,ECDO,ECDOC,ECDR,ECDRG,ECDS,ECDSSU,ECDT,ECDTTM
"RTN","ECXKILL",14,0)
 K ECDU,ECEC0,ECED,ECED1,ECEDN,ECEDNEW,ECF,ECF1,ECFD,ECFDT,ECFILE,ECFK
"RTN","ECXKILL",15,0)
 K ECFL,ECFR,ECGRP,ECH,ECHD,ECHEAD,ECI,ECID,ECIEN,ECIFN,ECIN
"RTN","ECXKILL",16,0)
 K ECINST,ECINV,ECIV,ECJ,ECK,ECL,ECL1,ECLAN,ECLAST,ECLDT,ECLINK,ECLIST
"RTN","ECXKILL",17,0)
 K ECLL,ECLN,ECLOC,ECLRN,ECLX,ECLY,ECM,ECMAX,ECMIN
"RTN","ECXKILL",18,0)
 K ECXMISS,ECMN,ECMOD,ECMODS,ECMORE,ECMS,ECMSG,ECMSN,ECMT,ECMW,ECMY,ECN
"RTN","ECXKILL",19,0)
 K ECNA,ECNDC,ECNDF,ECNFC,ECNL,ECNO,ECNODE,ECNOGO
"RTN","ECXKILL",20,0)
 K ECNT,ECO,ECO0,ECO1,ECO2,ECOB,ECODE,ECODE0,ECODE1,ECODE2,ECOLD,ECONE,ECOPAY
"RTN","ECXKILL",21,0)
 K ECATTNPI,ECPWNPI,ECXUSNPI,ECPWNPI,ECXOEF,ECXOEFDT,ECPLACE
"RTN","ECXKILL",22,0)
 K ECOPAYT,ECORTY,ECOS,ECP,ECPACK,ECPCE,ECPCE1,ECPCE2,ECPCE3,ECPCE4
"RTN","ECXKILL",23,0)
 K ECPCE5,ECPCE6,ECPCE7,ECPIECE,ECPN,ECPRC,ECPRO,ECODE2
"RTN","ECXKILL",24,0)
 K ECPROF,ECPT,ECPTF,ECPTPR,ECPTTM,ECQ,ECQT,ECQTY,ECRD,ECRE,ECRED,ECREF
"RTN","ECXKILL",25,0)
 K ECRFL,ECRN,ECROU,ECRR,ECRS,ECRSD,ECRTN,ECRX,ECS,ECSA,ECSC
"RTN","ECXKILL",26,0)
 K ECSD,ECSD1,ECSDN,ECSN,ECSR,ECSS,ECST,ECSTOP,ECSU,ECT,ECT1,ECTD,ECTD1
"RTN","ECXKILL",27,0)
 K ECTEMP,ECTM,ECTNTL,ECTOTAL,ECTREAT,ECTRT,ECTS,ECTY,ECXLOGIC,ECXDATES,ECXEST,ECXECE
"RTN","ECXKILL",28,0)
 D ^ECXKILL1
"RTN","ECXKILL",29,0)
 ;
"RTN","ECXKILL",30,0)
AUDIT ;kill audit report variables, close slave printer
"RTN","ECXKILL",31,0)
 K %DT,ECX,ECXARRAY,ECXACC,ECXALL,ECXAUD,ECXCODE,ECXD,ECXDEF,ECXDESC,ECXDIV
"RTN","ECXKILL",32,0)
 K ECXRCST,ECXRQST,ECXEND,ECXERR,ECXEXT,ECXHEAD,ECXLOC,ECXPGM,ECXPHCPC
"RTN","ECXKILL",33,0)
 K ECXPRIME,ECXPRO,ECXREPT,ECXRUN,ECXSAVE,ECXSTART,ECXSRCE
"RTN","ECXKILL",34,0)
 K ECXCTAMT,ECXFEKEY,ECXFELOC,ECXFORM,ECXGRPR,ECXHCPC,ECXPHCPC,ECXHCPCS
"RTN","ECXKILL",35,0)
 K ECXLAB,ECXLLC,ECXLMC,ECXQTY,ECXREQ,ECXSTAT,ECXTYPE
"RTN","ECXKILL",36,0)
 K IO("Q"),POP,DIR,DIC,DIE,DA,DR,DO,DIRUT,DUOUT,DTOUT
"RTN","ECXKILL",37,0)
 K ^TMP($J)
"RTN","ECXKILL",38,0)
 I IO=IO(0),IOST'="C" D ^%ZISC
"RTN","ECXKILL",39,0)
 Q
"RTN","ECXLABN")
0^42^B29839550^B28026471
"RTN","ECXLABN",1,0)
ECXLABN ;ALB/JAP,BIR/CML-Lab Extract for DSS (New Format - With LMIP Codes) ; 10/23/07 3:01pm
"RTN","ECXLABN",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,28,24,30,31,32,33,39,42,46,70,71,80,92,107,105**;Dec 22, 1997;Build 70
"RTN","ECXLABN",3,0)
BEG ;entry point
"RTN","ECXLABN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABN",6,0)
 Q
"RTN","ECXLABN",7,0)
 ;
"RTN","ECXLABN",8,0)
START ; entry when queued
"RTN","ECXLABN",9,0)
 K ^LRO(64.03),^TMP($J,"ECXP")
"RTN","ECXLABN",10,0)
 N ECDOCPC
"RTN","ECXLABN",11,0)
 S LRSDT=ECSD,LREDT=ECED,QFLG=0
"RTN","ECXLABN",12,0)
 D ^LRCAPDSS
"RTN","ECXLABN",13,0)
 ;quit if no completion date for API compile
"RTN","ECXLABN",14,0)
 I '$P($G(^LRO(64.03,1,1,1,0)),U,4) Q
"RTN","ECXLABN",15,0)
 ;quit if tasked and user sends stop request
"RTN","ECXLABN",16,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","ECXLABN",17,0)
 .S QFLG=1
"RTN","ECXLABN",18,0)
 .K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",19,0)
 ;otherwise, continue
"RTN","ECXLABN",20,0)
 K ECXDD D FIELD^DID(64.03,1,,"SPECIFIER","ECXDD")
"RTN","ECXLABN",21,0)
 S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)),ECLRN=1 K ECXDD
"RTN","ECXLABN",22,0)
 F  S ECLRN=$O(^LRO(64.03,ECLRN)) Q:'ECLRN  D  Q:QFLG
"RTN","ECXLABN",23,0)
 .Q:'$D(^LRO(64.03,ECLRN,0))
"RTN","ECXLABN",24,0)
 .S EC1=^LRO(64.03,ECLRN,0),ECDOC=ECPROF_$P(EC1,U,2)
"RTN","ECXLABN",25,0)
 .S ECDOCNPI=$$NPI^XUSNPI("Individual_ID",$P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",26,0)
 .S:+ECDOCNPI'>0 ECDOCNPI="" S ECDOCNPI=$P(ECDOCNPI,U)
"RTN","ECXLABN",27,0)
 .S ECLOC=$P(EC1,U,15),EC=$P(EC1,U,3),ECDOCPC=$$PRVCLASS^ECXUTL($P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",28,0)
 .I EC]"" D GET
"RTN","ECXLABN",29,0)
 K ^LRO(64.03),^TMP($J,"ECXP") S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",30,0)
 K ECDOCNPI,ECXAGC,ECXL1,ECXL2
"RTN","ECXLABN",31,0)
 Q
"RTN","ECXLABN",32,0)
 ;
"RTN","ECXLABN",33,0)
GET ;get data
"RTN","ECXLABN",34,0)
 N X,ECXSTN,QFLAG
"RTN","ECXLABN",35,0)
 S ECF=$S($P(EC,";",2)="DPT(":2,$P(EC,";",2)="LRT(67,":67,1:0) Q:'ECF
"RTN","ECXLABN",36,0)
 S ECIFN=$P(EC,";"),QFLAG=0
"RTN","ECXLABN",37,0)
 ;resolve ecloc
"RTN","ECXLABN",38,0)
 S ECXL1=+$P(ECLOC,";",1),ECXL2=$P(ECLOC,";",2)
"RTN","ECXLABN",39,0)
 I ECF=2 S ECLOC=$S(ECXL1>0:ECXL1,1:"") I ECXL2]"",ECXL2'="SC(" S ECLOC=""
"RTN","ECXLABN",40,0)
 I ECF=67 D  S ECLOC=ECXSTN
"RTN","ECXLABN",41,0)
 .S (ECXSTN,ECXAGC)=""
"RTN","ECXLABN",42,0)
 .I (ECXL2'="DIC(4,")!('$D(^DIC(4,ECXL1))) S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",43,0)
 .S ECXSTN=$P(^DIC(4,ECXL1,"99"),U,1),ECXAGC=$E($P(^(99),U,5),1,2)
"RTN","ECXLABN",44,0)
 .S:ECXSTN="" ECXSTN="ZZZZZ" S:ECXAGC="" ECXAGC="ZZ"
"RTN","ECXLABN",45,0)
 S ECDT=$P(EC1,U,13),ECD=$P(ECDT,"."),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXLABN",46,0)
 S ECWKLD=$P(EC1,U,11),ECWK="" I $D(^LAM(ECWKLD,0)) S ECWK=$P(^(0),U,2)
"RTN","ECXLABN",47,0)
 S (ECXADMDT,ECTREAT,ECNA,ECSN,ECMN,ECPTTM,ECPTPR,ECCLAS)="",ECA="O",ECXERR=0
"RTN","ECXLABN",48,0)
 S (ECPTNPI,ECASPR,ECCLAS2,ECASNPI)=""
"RTN","ECXLABN",49,0)
 ;get the patient data if record is in file #2
"RTN","ECXLABN",50,0)
 I ECF=2 D PAT(ECIFN,ECDT,.ECXERR)
"RTN","ECXLABN",51,0)
 Q:ECXERR
"RTN","ECXLABN",52,0)
 ;get patient data if record is in file #67
"RTN","ECXLABN",53,0)
 I ECF=67 S ECSN="000123456",ECNA="RFRL" I $D(^LRT(67,ECIFN,0)) D  Q:QFLAG
"RTN","ECXLABN",54,0)
 .S ECXMPI="",EC0=^LRT(67,ECIFN,0),ECNA=$E($P($P(EC0,U),",")_"    ",1,4)
"RTN","ECXLABN",55,0)
 .S ECSN=$P(EC0,U,9),ECXERI="" D
"RTN","ECXLABN",56,0)
 ..S ECNA=$TR(ECNA,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABN",57,0)
 ..I ECSN="" S ECSN="000123456" Q
"RTN","ECXLABN",58,0)
 ..S ECSN=$TR(ECSN," "),ECSN=$TR(ECSN,"-")
"RTN","ECXLABN",59,0)
 ..I ($L(ECSN)<9)!($L(ECSN)>10) S ECSN="000123456" Q
"RTN","ECXLABN",60,0)
 ..I $L(ECSN)=9,ECSN'?9N S ECSN="000123456" Q
"RTN","ECXLABN",61,0)
 ..I $L(ECSN)=10,ECSN'?9N1"P" S ECSN="000123456"
"RTN","ECXLABN",62,0)
 ..I '$$SSN^ECXUTL5(ECSN,ECF) S QFLAG=1
"RTN","ECXLABN",63,0)
 ;
"RTN","ECXLABN",64,0)
 ;- Only set treating spec (TS) to TS in file #64.03 if it does not exist
"RTN","ECXLABN",65,0)
 I ECA="I",ECTREAT="" S ECTREAT=$P($G(^DIC(45.7,+$P(EC1,U,10),0)),U,2)
"RTN","ECXLABN",66,0)
 S (ECXDOM,ECXDSSD)=""
"RTN","ECXLABN",67,0)
 S X=$G(^ECX(727.831,+ECTREAT,0)) S:X'="" ECXDOM=$P(X,U,2)
"RTN","ECXLABN",68,0)
 ;
"RTN","ECXLABN",69,0)
 ;- Get ordering stop code and ordering date
"RTN","ECXLABN",70,0)
 S ECXORDST=+$P(EC1,U,15),ECXORDST=$S(ECXORDST:$P($G(^ECX(728.44,ECXORDST,0)),U,2),1:"")
"RTN","ECXLABN",71,0)
 S ECXORDDT=$S($P(EC1,U,14):$$ECXDATE^ECXUTL($P(EC1,U,14),ECXYM),1:"")
"RTN","ECXLABN",72,0)
 ;
"RTN","ECXLABN",73,0)
 ;- Get Production Division - ECXDIEN added p-80
"RTN","ECXLABN",74,0)
 N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN)  ;P-46
"RTN","ECXLABN",75,0)
 K ECXDIEN
"RTN","ECXLABN",76,0)
 ;
"RTN","ECXLABN",77,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLABN",78,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECA,ECTREAT)
"RTN","ECXLABN",79,0)
 ;
"RTN","ECXLABN",80,0)
 ;- If no encounter number don't file record
"RTN","ECXLABN",81,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECA,ECSN,ECXADMDT,ECD,ECTREAT,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABN",82,0)
 ;create extract record only if patient name and accession area exist
"RTN","ECXLABN",83,0)
 I ECNA]"" S ECT=$P(EC1,U,8),ECURG=$P(EC1,U,9),EC=+$P(EC1,U,7) I EC D
"RTN","ECXLABN",84,0)
 .S:ECF=2 ECACA=EC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",85,0)
 .S:ECF=67 ECACA=ECXAGC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",86,0)
 .D FILE
"RTN","ECXLABN",87,0)
 Q
"RTN","ECXLABN",88,0)
 ;
"RTN","ECXLABN",89,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get/set patient data
"RTN","ECXLABN",90,0)
 N X,OK,PT
"RTN","ECXLABN",91,0)
 ;get data
"RTN","ECXLABN",92,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXLABN",93,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECNA=$P(PT,U)
"RTN","ECXLABN",94,0)
 .S ECSN=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXERI=$P(PT,U,4)
"RTN","ECXLABN",95,0)
 ;set data and save for later
"RTN","ECXLABN",96,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXLABN",97,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD,"."),"1;3",.ECXPAT)
"RTN","ECXLABN",98,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXLABN",99,0)
 .S ECNA=ECXPAT("NAME"),ECSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABN",100,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXLABN",101,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECNA_U_ECSN_U_ECXMPI_U_ECXERI
"RTN","ECXLABN",102,0)
 ;get date specific data
"RTN","ECXLABN",103,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECA=$P(X,U),ECMN=$P(X,U,2),ECTREAT=$P(X,U,3),ECXADMDT=$P(X,U,4)
"RTN","ECXLABN",104,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."),ECPROF)
"RTN","ECXLABN",105,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXLABN",106,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXLABN",107,0)
 Q
"RTN","ECXLABN",108,0)
 ;
"RTN","ECXLABN",109,0)
FILE ;file record
"RTN","ECXLABN",110,0)
 ;node0
"RTN","ECXLABN",111,0)
 ;facility^patient number^SSN (or equivalent)^name^in/out ECA^
"RTN","ECXLABN",112,0)
 ;day^accession area^abbreviation^test^urgency^treating spec^
"RTN","ECXLABN",113,0)
 ;location^provider and file^
"RTN","ECXLABN",114,0)
 ;movement number^file^time^workload code^primary care team^
"RTN","ECXLABN",115,0)
 ;primary care provider
"RTN","ECXLABN",116,0)
 ;node1
"RTN","ECXLABN",117,0)
 ;mpi^dss dept^provider npi^pc provider npi^pc prov person class^
"RTN","ECXLABN",118,0)
 ;assoc pc prov^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXLABN",119,0)
 ;dom ECXDOM^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXLABN",120,0)
 ;ord stop code ECXORDST^ord date ECXORDDT^production division
"RTN","ECXLABN",121,0)
 ;ECXPDIV^^ordering provider person class^emergency response indicator
"RTN","ECXLABN",122,0)
 ;(FEMA) ECXERI^associate pc provider npi ECASNPI^primary care provider
"RTN","ECXLABN",123,0)
 ;npi ECPTNPI^provider npi ECDOCNPI
"RTN","ECXLABN",124,0)
 ;ECDOCPC
"RTN","ECXLABN",125,0)
 N DA,DIK
"RTN","ECXLABN",126,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABN",127,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECIFN_U_ECSN_U_ECNA_U_ECA_U
"RTN","ECXLABN",128,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECACA_U_ECT_U_ECURG_U
"RTN","ECXLABN",129,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXLABN",130,0)
 N ECXDATA
"RTN","ECXLABN",131,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECTREAT,.ECXDATA)
"RTN","ECXLABN",132,0)
 S ECTREAT=$G(ECXDATA(7))
"RTN","ECXLABN",133,0)
 ;done
"RTN","ECXLABN",134,0)
 S ECODE=ECODE_ECTREAT_U_ECLOC_U_ECDOC_U_ECMN_U_ECF_U_ECTM_U_ECWK_U
"RTN","ECXLABN",135,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U
"RTN","ECXLABN",136,0)
 ;(ECACA=acc area^abbreviation)
"RTN","ECXLABN",137,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_ECCLAS_U_ECASPR_U
"RTN","ECXLABN",138,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXLABN",139,0)
 S ECODE1=ECODE1_ECXORDST_U_ECXORDDT_U_ECXPDIV_U
"RTN","ECXLABN",140,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECDOCPC
"RTN","ECXLABN",141,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXLABN",142,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECASNPI_U_ECPTNPI_U_ECDOCNPI
"RTN","ECXLABN",143,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABN",144,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABN",145,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABN",146,0)
 Q
"RTN","ECXLABN",147,0)
 ;
"RTN","ECXLABN",148,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABN",149,0)
 S ECHEAD="LAB"
"RTN","ECXLABN",150,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABN",151,0)
 Q
"RTN","ECXLABN",152,0)
 ;
"RTN","ECXLABN",153,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABN",154,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLABR")
0^45^B22461494^B21149464
"RTN","ECXLABR",1,0)
ECXLABR ;ALB/JAP,BIR/CML-LAR Extract for DSS (New Format - With LMIP Codes) ; 6/5/07 2:33pm
"RTN","ECXLABR",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,33,37,39,46,71,80,107,105**;Dec 22, 1997;Build 70
"RTN","ECXLABR",3,0)
BEG ;entry point from option
"RTN","ECXLABR",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABR",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABR",6,0)
 Q
"RTN","ECXLABR",7,0)
 ;
"RTN","ECXLABR",8,0)
START ; entry when queued
"RTN","ECXLABR",9,0)
 N X,OK,ECTRS,ECTRANS,ECTRIEN,ECDOC,ECDOCPC
"RTN","ECXLABR",10,0)
 K ^LAR(64.036) S LRSDT=ECSD,LREDT=ECED
"RTN","ECXLABR",11,0)
 D ^LRCAPDAR
"RTN","ECXLABR",12,0)
 ;quit if no completion date for API compile
"RTN","ECXLABR",13,0)
 I '$P($G(^LAR(64.036,1,2,1,0)),U,4) Q
"RTN","ECXLABR",14,0)
 ;build local array of workload codes for local lab tests linked to
"RTN","ECXLABR",15,0)
 ;DSS tests
"RTN","ECXLABR",16,0)
 K ECLOC S ECDTST=0
"RTN","ECXLABR",17,0)
 F  S ECDTST=$O(^ECX(727.2,1,1,ECDTST)) Q:('ECDTST)  S ECLTST=0 D
"RTN","ECXLABR",18,0)
 .F  S ECLTST=$O(^ECX(727.2,1,1,ECDTST,"LOC",ECLTST)) Q:'ECLTST  D
"RTN","ECXLABR",19,0)
 ..S ECLTIEN=+^ECX(727.2,1,1,ECDTST,"LOC",ECLTST,0)
"RTN","ECXLABR",20,0)
 ..S ECWCDA=+$G(^LAB(60,ECLTIEN,64))
"RTN","ECXLABR",21,0)
 ..I ECWCDA S ECWC=$P(^LAM(ECWCDA,0),U,2),ECLOC(ECWCDA)=ECWC
"RTN","ECXLABR",22,0)
 K ECLTIEN
"RTN","ECXLABR",23,0)
 ;process temporary lab file #64.036
"RTN","ECXLABR",24,0)
 S QFLG=0,ECLRN=1
"RTN","ECXLABR",25,0)
 F  S ECLRN=$O(^LAR(64.036,ECLRN)) Q:('ECLRN)!(QFLG)  D
"RTN","ECXLABR",26,0)
 .I $D(^LAR(64.036,ECLRN,0))  D
"RTN","ECXLABR",27,0)
 ..S EC1=^LAR(64.036,ECLRN,0),ECF=$P(EC1,U,2)
"RTN","ECXLABR",28,0)
 ..Q:ECF=""
"RTN","ECXLABR",29,0)
 ..S ECXDFN=$P(EC1,U,3),ECPTPR=$P($G(EC1),U,11),ECCLASS=""
"RTN","ECXLABR",30,0)
 ..S ECXTIME=$S($P(EC1,U,10)="":"000300",1:$P(EC1,U,10))
"RTN","ECXLABR",31,0)
 ..S ECXDATE=$P(EC1,U,9)_"."_$P(EC1,U,10)
"RTN","ECXLABR",32,0)
 ..I ECPTPR S ECCLASS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXLABR",33,0)
 ..I ECPTPR S ECPTNPI=$$NPI^XUSNPI("Individual_ID",ECPTPR,+ECXDATE) D
"RTN","ECXLABR",34,0)
 ...S:+ECPTNPI'>0 ECPTNPI="" S ECPTNPI=$P(ECPTNPI,U)
"RTN","ECXLABR",35,0)
 ..S ECORDT=$$ECXDATE^ECXUTL($P(EC1,U,4),ECXYM)
"RTN","ECXLABR",36,0)
 ..S ECORTM=$$ECXTIME^ECXUTL($P(EC1,U,4)_"."_$P(EC1,U,5))
"RTN","ECXLABR",37,0)
 ..S ECREDT=$$ECXDATE^ECXUTL($P(EC1,U,6),ECXYM)
"RTN","ECXLABR",38,0)
 ..S ECRETM=$$ECXTIME^ECXUTL($P(EC1,U,6)_"."_$P(EC1,U,7))
"RTN","ECXLABR",39,0)
 ..S ECSCDT=$$ECXDATE^ECXUTL($P(EC1,U,9),ECXYM)
"RTN","ECXLABR",40,0)
 ..S ECSCTM=$$ECXTIME^ECXUTL($P(EC1,U,9)_"."_$P(EC1,U,10))
"RTN","ECXLABR",41,0)
 ..S (ECXADMDT,ECXDOM,ECXDSSD,ECXPNM,ECXSSN,ECXA,ECXMN,ECXTS)=""
"RTN","ECXLABR",42,0)
 ..I ECF=2 D  Q:'OK
"RTN","ECXLABR",43,0)
 ...K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;",.ECXPAT)
"RTN","ECXLABR",44,0)
 ...Q:'OK
"RTN","ECXLABR",45,0)
 ...S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABR",46,0)
 ...S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXADMDT=$P(X,U,4)
"RTN","ECXLABR",47,0)
 ...S ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10)
"RTN","ECXLABR",48,0)
 ..;allow for referral patients in future??
"RTN","ECXLABR",49,0)
 ..;I ECF=67 S ECSN="000123456",ECNA="RFRL"
"RTN","ECXLABR",50,0)
 ..;loop on results multiple
"RTN","ECXLABR",51,0)
 ..;
"RTN","ECXLABR",52,0)
 ..;Get production division ECXDIEN added p-80
"RTN","ECXLABR",53,0)
 ..N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN) ;p-46
"RTN","ECXLABR",54,0)
 ..K ECXDIEN
"RTN","ECXLABR",55,0)
 ..;- Observation patient indicator (y/n)
"RTN","ECXLABR",56,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXLABR",57,0)
 ..;
"RTN","ECXLABR",58,0)
 ..;- If no encounter number don't file record
"RTN","ECXLABR",59,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,$P(EC1,U,9),ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABR",60,0)
 ..S ECRES=0
"RTN","ECXLABR",61,0)
 ..F  S ECRES=$O(^LAR(64.036,ECLRN,1,ECRES)) Q:('ECRES)!(QFLG)  D
"RTN","ECXLABR",62,0)
 ...I $D(^LAR(64.036,ECLRN,1,ECRES,0)) D  Q:QFLG
"RTN","ECXLABR",63,0)
 ....S EC2=^LAR(64.036,ECLRN,1,ECRES,0),ECN=$P(EC2,U),ECRS=$P(EC2,U,2)
"RTN","ECXLABR",64,0)
 ....S ECHL=$E($P(EC2,U,3)),ECWC=+$P(EC2,U,4)
"RTN","ECXLABR",65,0)
 ....S ECWC=$S($D(ECLOC(ECWC)):ECLOC(ECWC),1:"")
"RTN","ECXLABR",66,0)
 ....;
"RTN","ECXLABR",67,0)
 ....; - Free text results translation
"RTN","ECXLABR",68,0)
 ....S ECTRANS="",ECTRS=ECRS
"RTN","ECXLABR",69,0)
 ....I +ECTRS S ECTRS=$TR(ECTRS,",","") D
"RTN","ECXLABR",70,0)
 .....I (ECTRS?.N)!(ECTRS?.N1".".N) S ECRS=ECTRS
"RTN","ECXLABR",71,0)
 ....F  Q:$E(ECTRS,1)'=" "  S ECTRS=$E(ECTRS,2,$L(ECTRS))
"RTN","ECXLABR",72,0)
 ....F  Q:$E(ECTRS,$L(ECTRS))'=" "  S ECTRS=$E(ECTRS,1,($L(ECTRS)-1))
"RTN","ECXLABR",73,0)
 ....I ECTRS]"" I ECTRS'?.N I ECTRS'?.N1".".N D  ;translate
"RTN","ECXLABR",74,0)
 .....S ECTRS=$TR(ECRS,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABR",75,0)
 .....S ECTRIEN="",ECTRIEN=$O(^ECX(727.7,"B",ECTRS,ECTRIEN))
"RTN","ECXLABR",76,0)
 .....S ECTRANS=$S(ECTRIEN:$P(^ECX(727.7,ECTRIEN,0),U,2),1:5)
"RTN","ECXLABR",77,0)
 ....;
"RTN","ECXLABR",78,0)
 ....I ECWC]"" D FILE
"RTN","ECXLABR",79,0)
 K ^LAR(64.036) S ^LAR(64.036,0)="LAB DSS LAR EXTRACT^64.036^"
"RTN","ECXLABR",80,0)
 Q
"RTN","ECXLABR",81,0)
 ;
"RTN","ECXLABR",82,0)
FILE ;file record
"RTN","ECXLABR",83,0)
 ;node0
"RTN","ECXLABR",84,0)
 ;facility (ECINST)^dfn (ECXDFN)^ssn (ECXSSN)^name(ECXPNM)^in/out (ECXA)^
"RTN","ECXLABR",85,0)
 ;day(ECSCDT)^
"RTN","ECXLABR",86,0)
 ;lab test code (ECN)^results (ECRS)^hi/lo indicator (ECHL)^
"RTN","ECXLABR",87,0)
 ;date ordered (ECORDT)^time ordered (ECORTM)^date ready (ECREDT)^
"RTN","ECXLABR",88,0)
 ;time ready (ECRETM)^
"RTN","ECXLABR",89,0)
 ;movement file # (ECXMN)^treating specialty (ECXTS)^
"RTN","ECXLABR",90,0)
 ;workload code(ECWC)^
"RTN","ECXLABR",91,0)
 ;node1
"RTN","ECXLABR",92,0)
 ;mpi (ECXMPI)^dss dept (ECXDSSD)^dom (ECXDOM)^time (ECSCTM)^
"RTN","ECXLABR",93,0)
 ;observ pat ind (ECXOBS)^encounter num (ECXENC)^prod div ECXPDIV^
"RTN","ECXLABR",94,0)
 ;lab results translation ECXTRANS^ordering provider (ECPTPR)^
"RTN","ECXLABR",95,0)
 ;ordering provider person class (ECCLASS)^ordering provider npi ECPTNPI
"RTN","ECXLABR",96,0)
 N DA,DIK
"RTN","ECXLABR",97,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABR",98,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXLABR",99,0)
 S ECODE=ECODE_ECSCDT_U_$$RJ^XLFSTR(ECN,4,0)_U_ECRS_U_ECHL_U_ECORDT_U
"RTN","ECXLABR",100,0)
 S ECODE=ECODE_$$LJ^XLFSTR(ECORTM,6,0)_U
"RTN","ECXLABR",101,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXLABR",102,0)
 N ECXDATA
"RTN","ECXLABR",103,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXLABR",104,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXLABR",105,0)
 ;done
"RTN","ECXLABR",106,0)
 S ECODE=ECODE_ECREDT_U_$$LJ^XLFSTR(ECRETM,6,0)_U_ECXMN_U_ECXTS_U_ECWC_U
"RTN","ECXLABR",107,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECSCTM_U_ECXOBS_U_ECXENC_U_ECXPDIV_U_ECTRANS
"RTN","ECXLABR",108,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_2_ECPTPR_U_ECCLASS
"RTN","ECXLABR",109,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECPTNPI
"RTN","ECXLABR",110,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABR",111,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABR",112,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABR",113,0)
 Q
"RTN","ECXLABR",114,0)
 ;
"RTN","ECXLABR",115,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABR",116,0)
 S ECHEAD="LAR"
"RTN","ECXLABR",117,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABR",118,0)
 Q
"RTN","ECXLABR",119,0)
 ;
"RTN","ECXLABR",120,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABR",121,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLARA")
0^21^B27828116^n/a
"RTN","ECXLARA",1,0)
ECXLARA ;ALB/JRC - LAR Extract Audit Report ; 6/7/07 6:58am
"RTN","ECXLARA",2,0)
 ;;3.0;DSS EXTRACTS;**105**;Dec 22, 1997;Build 70
"RTN","ECXLARA",3,0)
 Q
"RTN","ECXLARA",4,0)
EN ;entry point for NUT extract audit report
"RTN","ECXLARA",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,SCRNARR,REPORT
"RTN","ECXLARA",6,0)
 N SCRNARR,ECXERR,ECXHEAD,ECXAUD,ECXARRAY,STATUS,FLAG,ECXALL,TMP
"RTN","ECXLARA",7,0)
 N ZTQUEUED,ZTSTOP
"RTN","ECXLARA",8,0)
 S SCRNARR="^TMP(""ECX"",$J,""SCRNARR"")"
"RTN","ECXLARA",9,0)
 K @SCRNARR@("DIVISION")
"RTN","ECXLARA",10,0)
 S (ECXERR,FLAG)=0
"RTN","ECXLARA",11,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXLARA",12,0)
 S ECXHEAD="LAR",ECXAUD=0
"RTN","ECXLARA",13,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXLARA",14,0)
 ;select extract
"RTN","ECXLARA",15,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXLARA",16,0)
 Q:ECXERR
"RTN","ECXLARA",17,0)
 W !!
"RTN","ECXLARA",18,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXLARA",19,0)
 S ECXERR=$$NUT^ECXDVSN()
"RTN","ECXLARA",20,0)
 I ECXERR=1 D  Q
"RTN","ECXLARA",21,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXLARA",22,0)
 .K @SCRNARR@("DIVISION")
"RTN","ECXLARA",23,0)
 .D AUDIT^ECXKILL
"RTN","ECXLARA",24,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXLARA",25,0)
 W !
"RTN","ECXLARA",26,0)
 ;determine output device and queue if requested
"RTN","ECXLARA",27,0)
 S ECXPGM="PROCESS^ECXLARA",ECXDESC="LAR Extract Audit Report"
"RTN","ECXLARA",28,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("STATUS")="",ECXSAVE("REPORT")="",ECXSAVE("FLAG")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("SCRNARR")="",TMP=$$OREF^DILF(SCRNARR),ECXSAVE(TMP)=""
"RTN","ECXLARA",29,0)
 W !
"RTN","ECXLARA",30,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXLARA",31,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXLARA",32,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXLARA",33,0)
 .K @SCRNARR@("DIVISION")
"RTN","ECXLARA",34,0)
 .D AUDIT^ECXKILL
"RTN","ECXLARA",35,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXLARA",36,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXLARA",37,0)
 .D PROCESS^ECXLARA
"RTN","ECXLARA",38,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXLARA",39,0)
 D HOME^%ZIS
"RTN","ECXLARA",40,0)
 D AUDIT^ECXKILL
"RTN","ECXLARA",41,0)
 Q
"RTN","ECXLARA",42,0)
 ;
"RTN","ECXLARA",43,0)
PROCESS ;process data in file #727.824 and store in ^tmp global
"RTN","ECXLARA",44,0)
 N %,ARRAY,ECXEXT,ECXDEF,X,ECXSTART,ECXEND,ECXRUN,IEN,FLAG,NODE0,NODE1,DATE,DIV,TEST,I,MIN,MAX,RESULT
"RTN","ECXLARA",45,0)
 S ARRAY="^TMP($J,""ECXORDER"")",FLAG=0
"RTN","ECXLARA",46,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXLARA",47,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXLARA",48,0)
 ;get run date in external format
"RTN","ECXLARA",49,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXLARA",50,0)
 ;get records in date range and set values
"RTN","ECXLARA",51,0)
 S IEN=0 F  S IEN=$O(^ECX(727.824,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:FLAG
"RTN","ECXLARA",52,0)
 .S NODE0=$G(^ECX(727.824,IEN,0)),NODE1=$D(^(1))
"RTN","ECXLARA",53,0)
 .S DIV=$P(NODE0,U,4),DATE=$P(NODE0,U,9),TEST=$P(NODE0,U,10),RESULT=$P(NODE0,U,11)
"RTN","ECXLARA",54,0)
 .;filter out divisions if not all selected
"RTN","ECXLARA",55,0)
 .Q:$G(@SCRNARR@("DIVISION"))'=1&'$D(@SCRNARR@("DIVISION",+$G(DIV)))
"RTN","ECXLARA",56,0)
 .;convert free text date to fm internal format date
"RTN","ECXLARA",57,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXLARA",58,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXLARA",59,0)
 .;check for unknowns so that they won't be lost
"RTN","ECXLARA",60,0)
 .F I="DIV","TEST","DATE" I @I="" S @I="UNKNOWN"
"RTN","ECXLARA",61,0)
 .;increment div/test count, check min/max save in ^tmp global
"RTN","ECXLARA",62,0)
 .S $P(^TMP($J,"ECXDSS",DIV,TEST),U)=$P($G(^TMP($J,"ECXDSS",DIV,TEST)),U)+1
"RTN","ECXLARA",63,0)
 .S MIN=$P(^TMP($J,"ECXDSS",DIV,TEST),U,2)
"RTN","ECXLARA",64,0)
 .S MAX=$P(^TMP($J,"ECXDSS",DIV,TEST),U,3)
"RTN","ECXLARA",65,0)
 .;S $P(^TMP($J,"ECXDSS",DIV,TEST),U,2)=$S(MIN']"":RESULT,RESULT<MIN:RESULT,1:MIN),$P(^(TEST),U,3)=$S(RESULT>MAX:RESULT,1:MAX)
"RTN","ECXLARA",66,0)
 .;S $P(^TMP($J,"ECXDSS",DIV,TEST),U,2)=$S(RESULT["NEG":"NEG",+RESULT<+MIN:RESULT,1:""),$P(^(TEST),U,3)=$S(RESULT["POS":"POS",RESULT>MAX:RESULT,1:"")
"RTN","ECXLARA",67,0)
 .S $P(^TMP($J,"ECXDSS",DIV,TEST),U,2)=$S(RESULT["NEG":"NEG",MIN']"":RESULT,+RESULT'=0&RESULT<MIN:RESULT,1:MIN),$P(^(TEST),U,3)=$S(RESULT["POS":"POS",MAX']""&RESULT'=0:RESULT,RESULT>MAX:RESULT,1:MAX)
"RTN","ECXLARA",68,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXLARA",69,0)
 D PRINT
"RTN","ECXLARA",70,0)
 D AUDIT^ECXKILL
"RTN","ECXLARA",71,0)
 Q
"RTN","ECXLARA",72,0)
 ;
"RTN","ECXLARA",73,0)
PRINT ;print report
"RTN","ECXLARA",74,0)
 N PG,NODE
"RTN","ECXLARA",75,0)
 U IO
"RTN","ECXLARA",76,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXLARA",77,0)
 S PG=0
"RTN","ECXLARA",78,0)
 I '$D(^TMP($J,"ECXDSS")) D  Q
"RTN","ECXLARA",79,0)
 .S DIV=0 F  S DIV=$O(@SCRNARR@("DIVISION",DIV)) Q:'DIV  D  Q:FLAG
"RTN","ECXLARA",80,0)
 ..D HEADER Q:FLAG
"RTN","ECXLARA",81,0)
 ..W !
"RTN","ECXLARA",82,0)
 ..W !,"**************************************************"
"RTN","ECXLARA",83,0)
 ..W !,"*  No data available for this division.          *"
"RTN","ECXLARA",84,0)
 ..W !,"**************************************************"
"RTN","ECXLARA",85,0)
 S DIV=0 F  S DIV=$O(^TMP($J,"ECXDSS",DIV)) Q:'DIV  D
"RTN","ECXLARA",86,0)
 .D HEADER Q:FLAG
"RTN","ECXLARA",87,0)
 .S TEST="" F  S TEST=$O(^TMP($J,"ECXDSS",DIV,TEST)) Q:TEST']""  D  Q:FLAG
"RTN","ECXLARA",88,0)
 ..S NODE=^TMP($J,"ECXDSS",DIV,TEST)
"RTN","ECXLARA",89,0)
 ..S MIN=$P(^TMP($J,"ECXDSS",DIV,TEST),U,2)
"RTN","ECXLARA",90,0)
 ..S MAX=$P(^TMP($J,"ECXDSS",DIV,TEST),U,3)
"RTN","ECXLARA",91,0)
 ..D:($Y+3>IOSL) HEADER Q:FLAG
"RTN","ECXLARA",92,0)
 ..W !,?4,TEST,?14,$$ECXYMX^ECXUTL($$ECXYM^ECXUTL(DATE)),?27,$S(MIN["NEG":$J("NEG",15),1:$J(MIN,15,4)),?44,$S(MAX["POS":$J("POS",15),MAX>0:$J(MAX,15,4),1:""),?60,$J($P(NODE,U,1),15)
"RTN","ECXLARA",93,0)
 Q
"RTN","ECXLARA",94,0)
 ;
"RTN","ECXLARA",95,0)
HEADER ;header and page control
"RTN","ECXLARA",96,0)
 N JJ,SS,DIR,DIRUT,DTOUT,DUOUT,DSSID
"RTN","ECXLARA",97,0)
 I $E(IOST)="C" D
"RTN","ECXLARA",98,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLARA",99,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y FLAG=1
"RTN","ECXLARA",100,0)
 Q:FLAG
"RTN","ECXLARA",101,0)
 S DSSID=$S($G(DIV):$$NNT^XUAF4(DIV),1:"UNKNOWN^^")
"RTN","ECXLARA",102,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXLARA",103,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXLARA",104,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXLARA",105,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXLARA",106,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXLARA",107,0)
 W !,"Division: "_$P(DSSID,U)_$S($P(DSSID,U,2)'="":" ("_$P(DSSID,U,2)_")",1:""),?68,"Page: "_PG
"RTN","ECXLARA",108,0)
 ;Detailed report sub-header
"RTN","ECXLARA",109,0)
 Q:'$D(^TMP($J))
"RTN","ECXLARA",110,0)
 W !!,?2,"Test Code",?14,"Month Year",?32,"Min Result",?49,"Max Result",?64,"Total Count"
"RTN","ECXLARA",111,0)
 Q
"RTN","ECXLBB")
0^27^B46626691^B38630374
"RTN","ECXLBB",1,0)
ECXLBB ;DALOI/KML - DSS BLOOD BANK EXTRACT ; 10/17/07 10:33am
"RTN","ECXLBB",2,0)
 ;;3.0;DSS EXTRACTS;**78,84,90,92,104,105**;Dec 22, 1997;Build 70
"RTN","ECXLBB",3,0)
 ;Per VHA Directive 97-033 this routine should not be modified.  Medical Device # BK970021
"RTN","ECXLBB",4,0)
 ; access to the LAB DATA file (#63) is supported by 
"RTN","ECXLBB",5,0)
 ; controlled subscription to IA 525  (global root ^LR)  
"RTN","ECXLBB",6,0)
 ; access to the BLOOD PRODUCT (#66) is supported by IA 4510
"RTN","ECXLBB",7,0)
BEG ;entry point from option
"RTN","ECXLBB",8,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLBB",9,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLBB",10,0)
 Q
"RTN","ECXLBB",11,0)
 ;
"RTN","ECXLBB",12,0)
START ; Entry point from tasked job
"RTN","ECXLBB",13,0)
 ; begin package specific extract
"RTN","ECXLBB",14,0)
 N ECTRSP,ECADMT,ECTODT,ECENCTR,ECPAT,ECLRDFN,ECXPHY,ECXPHYPC,ECPHYNPI
"RTN","ECXLBB",15,0)
 N ECD,ECXDFN,ECARRY,EC66,ECERR,ECTRFDT,ECTRFTM,ECX,ECINOUT,ECXINST
"RTN","ECXLBB",16,0)
 ;variables ECFILE,EC23,ECXYM,ECINST,ECSD,ECSD1,ECED passed in 
"RTN","ECXLBB",17,0)
 ; by taskmanager 
"RTN","ECXLBB",18,0)
 ; ECED defined in ^ECXTRAC - it represents the end date of the extract
"RTN","ECXLBB",19,0)
 ; sort process.  TRANSFUSION DATE should be within start and end dates
"RTN","ECXLBB",20,0)
 ; ECED and ECSD were assigned with input provided by the user interface
"RTN","ECXLBB",21,0)
 ; and ECSD1 = ECSD-.1
"RTN","ECXLBB",22,0)
 ; Read through the TRANSFUSION RECORD sub-file (63.017) of 
"RTN","ECXLBB",23,0)
 ; the LAB DATA file (#63)
"RTN","ECXLBB",24,0)
 ;the global nodes containing transfusion record entries are constructed
"RTN","ECXLBB",25,0)
 ; by calculating the TRANSFUSION DATE/TIME (.01)
"RTN","ECXLBB",26,0)
 ; into its reverse date/time representation and then DINUM'd when 
"RTN","ECXLBB",27,0)
 ;filing the record entry 
"RTN","ECXLBB",28,0)
 ; ECD equals the reverse date/time of ECED+.3 and will need to be
"RTN","ECXLBB",29,0)
 ; reset for each DFN.
"RTN","ECXLBB",30,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1 Q  ;quit if tasked and user sends stop request  (QFLG assigned in ECXTRAC)
"RTN","ECXLBB",31,0)
AUDRPT ; entry point for pre-extract audit report
"RTN","ECXLBB",32,0)
 S ECTODT=9999999-ECSD1,ECLRDFN=0
"RTN","ECXLBB",33,0)
 F  S ECLRDFN=$O(^LR(ECLRDFN)) Q:'ECLRDFN  S ECXDFN=$$GETDFN(ECLRDFN),ECERR=$$PAT(ECXDFN) S ECD=9999999-(ECED+.3) F  S ECD=$O(^LR(ECLRDFN,1.6,ECD)) Q:ECERR  Q:'ECD!(ECD>ECTODT)  S EC0=^LR(ECLRDFN,1.6,ECD,0) D
"RTN","ECXLBB",34,0)
 .; ECARRY(1)=TRANSFUSION DATE AND TIME, 
"RTN","ECXLBB",35,0)
 .; ECARRY(3)=COMPONENT, ECARRY(4)=COMPONENT ABBREVIATION
"RTN","ECXLBB",36,0)
 .; ECARRY(5)=UNITS POOLED, ECARRY(6)=TRANSFUSION REACTION, 
"RTN","ECXLBB",37,0)
 .; ECARRY(7)=VOLUME TRANSFUSED, ECARRY(8)=TRANSFUSION REACTION TYPE
"RTN","ECXLBB",38,0)
 .; ECARRY(9)=REQUESTING PROVIDER, ECARRY(10)=REQUEST. PROV. PERSON CLASS
"RTN","ECXLBB",39,0)
 .; ECARRY(11)=UNIT MODIFIED,ECARRY(12)=UNIT MODIFICATION
"RTN","ECXLBB",40,0)
 .; ECARRY(13)=PRODUCTION DIVISION CODE
"RTN","ECXLBB",41,0)
 . S ECARRY(1)=$P(EC0,"^"),EC66=$G(^LAB(66,$P(EC0,"^",2),0))
"RTN","ECXLBB",42,0)
 . S ECARRY(3)=$E($P(EC66,"^"),1,15),ECARRY(4)=$P(EC66,"^",2)
"RTN","ECXLBB",43,0)
 . S ECARRY(5)=$S(+$P(EC0,"^",7)=0:1,1:+$P(EC0,"^",7))
"RTN","ECXLBB",44,0)
 . S ECARRY(6)=$S($P(EC0,"^",8)=1:"Y",1:"N"),ECARRY(7)=$P(EC0,"^",10)
"RTN","ECXLBB",45,0)
 . S ECARRY(8)=$E($P($G(^LAB(65.4,+$P(EC0,"^",11),0)),"^"),1,10)
"RTN","ECXLBB",46,0)
 . S (ECARRY(9),ECARRY(10),ECARRY(13))="" D GETRPRV
"RTN","ECXLBB",47,0)
 . S ECARRY(11)=$$MODIFIED(),(ECXPHY,ECXPHYPC,ECPHYNPI)=""
"RTN","ECXLBB",48,0)
 . S ECARRY(12)=$S(ECARRY(11)="Y":$$UNITMODS(),1:"")
"RTN","ECXLBB",49,0)
 . D GETDATA
"RTN","ECXLBB",50,0)
 . K ECARRY
"RTN","ECXLBB",51,0)
 Q
"RTN","ECXLBB",52,0)
 ;
"RTN","ECXLBB",53,0)
UNITMODS() ; Get modification criteria from fields #.06 and #3 from file #66
"RTN","ECXLBB",54,0)
 N MODARY,MO,EC66A,MODSTR,STR3
"RTN","ECXLBB",55,0)
 S MODARY("DIVIDED")="D",MODARY("POOLED")="P",MODARY("WASHED")="W"
"RTN","ECXLBB",56,0)
 S MODARY("FROZEN")="F",MODARY("LEUKOCYTE POOR")="L"
"RTN","ECXLBB",57,0)
 S MODARY("REJUVENATED")="R",MODARY("DEGLYCEROLIZED")="G"
"RTN","ECXLBB",58,0)
 S MODARY("IRRADIATED")="I",MODARY("SEPARATED")="S"
"RTN","ECXLBB",59,0)
 ;if modification criteria is null determine value from description
"RTN","ECXLBB",60,0)
 S MODSTR=$S($P(EC66,U,6)'="":$P(EC66,U,6),1:$$CHKMOD^ECXLBB1($P(EC66,"^")))
"RTN","ECXLBB",61,0)
 ;get modification criteria for entries at field #3 in file #66
"RTN","ECXLBB",62,0)
 S MOD=0 F  S MOD=$O(^LAB(66,$P(EC0,"^",2),3,MOD)) Q:'MOD  D
"RTN","ECXLBB",63,0)
 .S EC66A=$G(^LAB(66,MOD,0)) I EC66A="" Q
"RTN","ECXLBB",64,0)
 .S STR3=$S($P(EC66A,U,6)'="":$P(EC66A,U,6),1:$$CHKMOD^ECXLBB1($P(EC66A,"^")))
"RTN","ECXLBB",65,0)
 .I STR3'="",MODSTR'[STR3 S MODSTR=MODSTR_STR3
"RTN","ECXLBB",66,0)
 Q MODSTR
"RTN","ECXLBB",67,0)
 ;
"RTN","ECXLBB",68,0)
MODIFIED() ; Was unit modified
"RTN","ECXLBB",69,0)
 ; Init variables
"RTN","ECXLBB",70,0)
 N XMATCH,UNIT,MOD,COMPID,MODNODE,MODTO
"RTN","ECXLBB",71,0)
 S (XMATCH,UNIT)=0,MOD=""
"RTN","ECXLBB",72,0)
 ; Check input
"RTN","ECXLBB",73,0)
 Q:'$G(ECLRDFN)!'$P(EC0,U,2) "N"
"RTN","ECXLBB",74,0)
 ;Find xmatch for blood component request
"RTN","ECXLBB",75,0)
 S XMATCH=$O(^LR(ECLRDFN,1.8,$P(EC0,U,2),1,XMATCH)) Q:'XMATCH "N"
"RTN","ECXLBB",76,0)
 ;Get blood inventory file (#65) pointer
"RTN","ECXLBB",77,0)
 S UNIT=$P($G(^LR(ECLRDFN,1.8,$P(EC0,"^",2),1,XMATCH,0)),U)
"RTN","ECXLBB",78,0)
 ;Look at disposition field (#4.1) in blood inventory file (#65)
"RTN","ECXLBB",79,0)
 S MOD=$P($G(^LRD(65,+XMATCH,4)),U),COMPID=$P(EC66,U,3)
"RTN","ECXLBB",80,0)
 ; Get 'the modified to' entry pointer to blood inventory file (#66)
"RTN","ECXLBB",81,0)
 I MOD="MO" S MODTO=0 F  S MODTO=$O(^LRD(65,+XMATCH,9,MODTO)) Q:'MODTO  D
"RTN","ECXLBB",82,0)
 .S MODNODE=$G(^LRD(65,+XMATCH,9,MODTO,0)) Q:$P(^(0),U,3)'>1
"RTN","ECXLBB",83,0)
 .Q:$P(MODNODE,U,2)'=COMPID
"RTN","ECXLBB",84,0)
 .; Set the modify to unit ien for file (#66)
"RTN","ECXLBB",85,0)
 Q $S(MOD="MO":"Y",1:"N")
"RTN","ECXLBB",86,0)
 ;
"RTN","ECXLBB",87,0)
GETRPRV ; get requesting provider, requesting provider person class and 
"RTN","ECXLBB",88,0)
 ; production division code
"RTN","ECXLBB",89,0)
 ; input: ECD      =INVERTED DATE SUBSCRIPT
"RTN","ECXLBB",90,0)
 ;        ECARRY(1)=TRANSFUSION DATE AND TIME
"RTN","ECXLBB",91,0)
 ; note: Accessioned data in file #68 is stored up to 90 days.
"RTN","ECXLBB",92,0)
 N ECXBNOD,ACC,ACCDT,ACCNODE,PERCLS
"RTN","ECXLBB",93,0)
 I ECARRY(1)="" Q  ;there is no transfusion date
"RTN","ECXLBB",94,0)
 ;get BLOOD BANK record, field #1, in file #63 located on "BB" node
"RTN","ECXLBB",95,0)
 ;since there is a slight time lapse, $O will find the BB record
"RTN","ECXLBB",96,0)
 S ECXBNOD=$O(^LR(ECLRDFN,"BB",ECD)) I ECXBNOD="" Q
"RTN","ECXLBB",97,0)
 S ECXBNOD=^LR(ECLRDFN,"BB",ECXBNOD,0) I ECXBNOD="" Q
"RTN","ECXLBB",98,0)
 ;Compose accession number,originating from field #.06 subfile #63.01
"RTN","ECXLBB",99,0)
 ; ex. ACC=BB 0528 27
"RTN","ECXLBB",100,0)
 S ACC=$P(ECXBNOD,U,6),ACC=$TR($P(ACC," ",2,99)," ")
"RTN","ECXLBB",101,0)
 S ACCDT=$E(ECARRY(1),1,3)_$E(ACC,1,4),NUM=$E(ACC,5,99)
"RTN","ECXLBB",102,0)
 ;Get field #2 from file #68, field #1 from subfile #68.01 which is
"RTN","ECXLBB",103,0)
 ;subfile #68.02. Look at 29=blood bank ien, from 0th node, get fields
"RTN","ECXLBB",104,0)
 ;#6.5 PROVIDER and #26 DIV
"RTN","ECXLBB",105,0)
 I (ACCDT)=""!(NUM="") Q
"RTN","ECXLBB",106,0)
 ; identify bb accession area the patient was in to get the right DIV
"RTN","ECXLBB",107,0)
 S AREA=$$AREA
"RTN","ECXLBB",108,0)
 S ACCNODE=$G(^LRO(68,+AREA,1,ACCDT,1,NUM,0))
"RTN","ECXLBB",109,0)
 S ECARRY(9)=$P(ACCNODE,U,8) I ECARRY(9)'="" D
"RTN","ECXLBB",110,0)
 . S PERCLS=$$GET^XUA4A72(ECARRY(9),ACCDT)
"RTN","ECXLBB",111,0)
 . I +PERCLS>0 S ECARRY(10)=$P(PERCLS,U,7)
"RTN","ECXLBB",112,0)
 . S ECREQNPI=$$NPI^XUSNPI("Individual_ID",ECARRY(9),ACCDT)
"RTN","ECXLBB",113,0)
 . S:+ECREQNPI'>0 ECREQNPI="" S ECREQNPI=$P(ECREQNPI,U)
"RTN","ECXLBB",114,0)
 . S ECARRY(9)=2_ECARRY(9)
"RTN","ECXLBB",115,0)
 S DIV=$P($G(^LRO(68,+AREA,1,ACCDT,1,NUM,.4)),U)
"RTN","ECXLBB",116,0)
 I DIV'="" S ECARRY(13)=$$RADDIV^ECXDEPT(DIV)
"RTN","ECXLBB",117,0)
 Q
"RTN","ECXLBB",118,0)
 ;
"RTN","ECXLBB",119,0)
AREA() ; resolve accession area's ien to use and validate
"RTN","ECXLBB",120,0)
 ;          Accession number
"RTN","ECXLBB",121,0)
 ;          Patient LRDFN
"RTN","ECXLBB",122,0)
 ; note: if there is only one accession area use '29'
"RTN","ECXLBB",123,0)
 N A,CNT,BBLIST,DFN,ACC,AREA,DATE,TDATE,ACCNODE
"RTN","ECXLBB",124,0)
 S (CNT,FLAG,A)=0,DFN=""
"RTN","ECXLBB",125,0)
 ; set the date from the "bb" node in file (#63)
"RTN","ECXLBB",126,0)
 S DATE=$P(ECXBNOD,U)
"RTN","ECXLBB",127,0)
 ; setup array for bb accession areas if more than one
"RTN","ECXLBB",128,0)
 F  S A=$O(^LRO(68,A)) Q:'A  I $P($G(^LRO(68,A,0)),"^",2)="BB" D
"RTN","ECXLBB",129,0)
 . S BBLIST(A)=""
"RTN","ECXLBB",130,0)
 . S CNT=CNT+1
"RTN","ECXLBB",131,0)
 I CNT'>1 Q 29
"RTN","ECXLBB",132,0)
 S AREA=0 F  S AREA=$O(BBLIST(AREA)) Q:'AREA  D  Q:FLAG
"RTN","ECXLBB",133,0)
 . ; get additional accession information for validation
"RTN","ECXLBB",134,0)
 . S ACCNODE=$G(^LRO(68,AREA,1,$P(DATE,"."),1,NUM,0))
"RTN","ECXLBB",135,0)
 . S ACC=$G(^LRO(68,AREA,1,$P(DATE,"."),1,NUM,.2))
"RTN","ECXLBB",136,0)
 . S DFN=$P($G(ACCNODE),U)
"RTN","ECXLBB",137,0)
 . S TDATE=$P($G(^LRO(68,AREA,1,$P(DATE,"."),1,NUM,3)),U)
"RTN","ECXLBB",138,0)
 . I (DFN=ECLRDFN)&(ACC=$P(ECXBNOD,U,6))&(DATE=TDATE) S FLAG=1
"RTN","ECXLBB",139,0)
 Q AREA
"RTN","ECXLBB",140,0)
 ;
"RTN","ECXLBB",141,0)
GETDATA ; gather rest of extract data that will be recorded in an 
"RTN","ECXLBB",142,0)
 ; entry in file 727.829
"RTN","ECXLBB",143,0)
 S ECTRFDT=$$ECXDOB^ECXUTL(ECARRY(1)),ECTRFTM=$$ECXTIME^ECXUTL(ECARRY(1))
"RTN","ECXLBB",144,0)
 S ECX=$$INP^ECXUTL2(ECXDFN,ECARRY(1)),ECINOUT=$P(ECX,U),ECTRSP=$P(ECX,U,3),ECADMT=$P(ECX,U,4) ; [FLD #5]
"RTN","ECXLBB",145,0)
 ;
"RTN","ECXLBB",146,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLBB",147,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECINOUT,ECTRSP)
"RTN","ECXLBB",148,0)
 ;- If no encounter number don't file record
"RTN","ECXLBB",149,0)
 S ECENCTR=$$ENCNUM^ECXUTL4(ECINOUT,ECPAT("SSN"),ECADMT,ECARRY(1),ECTRSP,ECXOBS,ECHEAD,,) ; [FLD #6]
"RTN","ECXLBB",150,0)
 Q:ECENCTR=""
"RTN","ECXLBB",151,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXLBB",152,0)
 S ECXERI=ECPAT("ERI")
"RTN","ECXLBB",153,0)
 ;
"RTN","ECXLBB",154,0)
 S ECXSTR=$G(EC23)_"^"_ECINST_"^"_ECXDFN_"^"_ECPAT("SSN")_"^"_ECPAT("NAME")_"^"_ECINOUT_"^"_ECENCTR_"^"_ECTRFDT_"^"_ECTRFTM_"^"_ECARRY(3)_"^"_ECARRY(4)_"^"_ECARRY(5)_"^"_ECARRY(7)_"^"_ECARRY(6)_"^"_ECARRY(8)_"^BB"_ECARRY(13)_"^^"
"RTN","ECXLBB",155,0)
 I $G(ECXLOGIC)>2005 S ECXSTR=ECXSTR_U_ECXPHY_U_ECXPHYPC
"RTN","ECXLBB",156,0)
 I $G(ECXLOGIC)>2006 D
"RTN","ECXLBB",157,0)
 .S ECXSTR=ECXSTR_U_ECXERI_U_ECARRY(11)_U_ECARRY(12)_U_ECARRY(9)_U_ECARRY(10)_U_ECARRY(13)_U
"RTN","ECXLBB",158,0)
 I '$D(ECXRPT) D FILE(ECXSTR) Q
"RTN","ECXLBB",159,0)
 S ^TMP("ECXLBB",$J,ECXDFN,ECD)=ECXSTR  ;temporary global array
"RTN","ECXLBB",160,0)
 ;   used in ECXPLBB (pre-extract audit report)
"RTN","ECXLBB",161,0)
 Q
"RTN","ECXLBB",162,0)
 ;
"RTN","ECXLBB",163,0)
GETDFN(ECXLRDFN) ;
"RTN","ECXLBB",164,0)
 ; INPUT - LRDFN
"RTN","ECXLBB",165,0)
 ; OUTPUT - DFN
"RTN","ECXLBB",166,0)
 ; Obtains DFN (Patient ID) from LRDFN (Lab Patient ID).
"RTN","ECXLBB",167,0)
 ; If no valid DFN exists, 0 is returned.
"RTN","ECXLBB",168,0)
 S ECXLRDFN=+$G(ECXLRDFN)
"RTN","ECXLBB",169,0)
 I $P($G(^LR(ECXLRDFN,0)),"^",2)'=2 Q 0
"RTN","ECXLBB",170,0)
 Q +$P(^LR(ECXLRDFN,0),"^",3)
"RTN","ECXLBB",171,0)
 ; 
"RTN","ECXLBB",172,0)
PAT(ECXDFN) ;get/set patient data
"RTN","ECXLBB",173,0)
 ; INPUT - ECXDFN = patient ien (DFN)
"RTN","ECXLBB",174,0)
 ; OUTPUT - ECPAT array:
"RTN","ECXLBB",175,0)
 ;          ECPAT("SSN")
"RTN","ECXLBB",176,0)
 ;          ECPAT("NAME")
"RTN","ECXLBB",177,0)
 ; returns 0 or 1 in ECXERR - 0=successful
"RTN","ECXLBB",178,0)
 ;                            1=error condition
"RTN","ECXLBB",179,0)
 N X,OK,ECXERR
"RTN","ECXLBB",180,0)
 ;get data
"RTN","ECXLBB",181,0)
 S ECXERR=0
"RTN","ECXLBB",182,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,"","1;3",.ECPAT)
"RTN","ECXLBB",183,0)
 I 'OK S ECXERR=1
"RTN","ECXLBB",184,0)
 Q ECXERR
"RTN","ECXLBB",185,0)
 ;
"RTN","ECXLBB",186,0)
FILE(ECODE) ;
"RTN","ECXLBB",187,0)
 ; Input - ECODE = extract record
"RTN","ECXLBB",188,0)
 ;
"RTN","ECXLBB",189,0)
 ; record the extract record at a global node in file 727.829
"RTN","ECXLBB",190,0)
 ; sequence #^year/month of extract^extract #^facility^patient dfn^SSN^
"RTN","ECXLBB",191,0)
 ; name^i/o pt indicator^encounter #^date of transfusion^time of 
"RTN","ECXLBB",192,0)
 ; transfusion^component^component abbrev^# of units^volume in mm^
"RTN","ECXLBB",193,0)
 ; reaction^reaction type^feeder location^DSS product dept^DSS IP #
"RTN","ECXLBB",194,0)
 ; ordering physician^ordering physician pc^emergency response indicator
"RTN","ECXLBB",195,0)
 ; (FEMA)^unit modified^unit modification^requesting provider^request. 
"RTN","ECXLBB",196,0)
 ; provider person class^ordering provider npi ECPHYNPI
"RTN","ECXLBB",197,0)
 ;ECODE1- requesting provider npi ECREQNPI
"RTN","ECXLBB",198,0)
 ;note:  DSS product dept and DSS IP # are dependent on the release of
"RTN","ECXLBB",199,0)
 ; ECX*3*61
"RTN","ECXLBB",200,0)
 N DA,DIK,EC7
"RTN","ECXLBB",201,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLBB",202,0)
 S ECODE=EC7_"^"_ECODE
"RTN","ECXLBB",203,0)
 I ECXLOGIC>2007 D
"RTN","ECXLBB",204,0)
 .S ECODE=ECODE_ECPHYNPI_U
"RTN","ECXLBB",205,0)
 .S ECODE1=$G(ECREQNPI)
"RTN","ECXLBB",206,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=$G(ECODE1),ECRN=ECRN+1
"RTN","ECXLBB",207,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLBB",208,0)
 Q
"RTN","ECXLBB",209,0)
 ;
"RTN","ECXLBB",210,0)
 ;
"RTN","ECXLBB",211,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXLBB",212,0)
 S ECHEAD="LBB"
"RTN","ECXLBB",213,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLBB",214,0)
 Q
"RTN","ECXLBB",215,0)
 ;
"RTN","ECXLBB",216,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXLBB",217,0)
 ; should be queued with a 1D frequency
"RTN","ECXLBB",218,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXLBB",219,0)
 ;
"RTN","ECXLBB",220,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLBB",221,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXLBB",222,0)
 Q
"RTN","ECXLBB",223,0)
 ;
"RTN","ECXLBB",224,0)
 ;ECXLBB
"RTN","ECXLBB1")
0^49^B22409654^n/a
"RTN","ECXLBB1",1,0)
ECXLBB1 ;ALB/JRC - DSS VBECS EXTRACT ; 8/8/07 3:30pm
"RTN","ECXLBB1",2,0)
 ;;3.0;DSS EXTRACTS;**105**;Dec 22, 1997;Build 70
"RTN","ECXLBB1",3,0)
 ;Per VHA Directive 97-033 this routine should not be modified.  Medical Device # BK970021
"RTN","ECXLBB1",4,0)
 ; access to the VBECS EXTRACT file (#6002.03) is supported by
"RTN","ECXLBB1",5,0)
 ; controlled subscription to IA #4953  (global root ^VBECS(6002.03)
"RTN","ECXLBB1",6,0)
BEG ;entry point from option
"RTN","ECXLBB1",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLBB1",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLBB1",9,0)
 Q
"RTN","ECXLBB1",10,0)
 ;
"RTN","ECXLBB1",11,0)
START ; Entry point from tasked job
"RTN","ECXLBB1",12,0)
 ; begin package specific extract
"RTN","ECXLBB1",13,0)
 N ECTRSP,ECADMT,ECTODT,ECENCTR,ECPAT,ECLRDFN,ECXPHY,ECXPHYPC
"RTN","ECXLBB1",14,0)
 N ECD,ECXDFN,ECARRY,EC66,ECERR,ECTRFDT,ECTRFTM,ECX,ECINOUT,ECXINST
"RTN","ECXLBB1",15,0)
 N ECPHYNPI,ECREQNPI
"RTN","ECXLBB1",16,0)
 ;variables ECFILE,EC23,ECXYM,ECINST,ECSD,ECSD1,ECED passed in 
"RTN","ECXLBB1",17,0)
 ; by taskmanager 
"RTN","ECXLBB1",18,0)
 ; ECED defined in ^ECXTRAC - end date of the extract
"RTN","ECXLBB1",19,0)
 ; TRANSFUSION DATE should be within start and end dates
"RTN","ECXLBB1",20,0)
 ; ECED and ECSD input provided by the user interface
"RTN","ECXLBB1",21,0)
 ; and ECSD1 = ECSD-.1
"RTN","ECXLBB1",22,0)
 ; Read through the VBECS DSS EXTRACT file (6002.03)
"RTN","ECXLBB1",23,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1 Q  ;quit if tasked and user sends stop request  (QFLG assigned in ECXTRAC)
"RTN","ECXLBB1",24,0)
 ;
"RTN","ECXLBB1",25,0)
AUDRPT ; entry point for pre-extract audit report
"RTN","ECXLBB1",26,0)
 S RECORD=0,ECD=ECSD-.1,ECTODT=ECED+.9
"RTN","ECXLBB1",27,0)
 F  S ECD=$O(^VBEC(6002.03,"C",ECD)) Q:'ECD!(ECD>ECTODT)  S RECORD=0 F  S RECORD=$O(^VBEC(6002.03,"C",ECD,RECORD)) Q:RECORD'>0  S EC0=^VBEC(6002.03,RECORD,0) D
"RTN","ECXLBB1",28,0)
 .; ECARRY(1)=TRANSFUSION DATE AND TIME, ECARRY(3)=COMPONENT 
"RTN","ECXLBB1",29,0)
 .; ECARRY(4)=COMPONENT ABBREVIATION, ECARRY(5)=UNITS POOLED
"RTN","ECXLBB1",30,0)
 .; ECARRY(6)=TRANSFUSION REACTION,ECARRY(7)=VOLUME TRANSFUSED
"RTN","ECXLBB1",31,0)
 .; ECARRY(8)=TRANSFUSION REACTION TYPE, ECARRY(9)=REQUESTING PROVIDER
"RTN","ECXLBB1",32,0)
 .; ECARRY(10)=REQUEST. PROV. PERSON CLASS, ECARRY(11)=UNIT MODIFIED
"RTN","ECXLBB1",33,0)
 .; ECARRY(12)=UNIT MODIFICATION, ECARRY(13)=PRODUCTION DIVISION CODE
"RTN","ECXLBB1",34,0)
 .;
"RTN","ECXLBB1",35,0)
 . S ECXDFN=$P(EC0,U,2),ECERR=$$PAT(ECXDFN) Q:ECERR
"RTN","ECXLBB1",36,0)
 . S ECARRY(1)=$P(EC0,U,10),ECARRY(3)=$P(EC0,U,7),ECARRY(4)=$P(EC0,U,8),ECARRY(5)=$S(+$P(EC0,U,9)=0:1,1:+$P(EC0,U,9)),ECARRY(6)=$S($P(EC0,U,15):"Y",1:"N"),ECARRY(7)=$P(EC0,"^",12),ECARRY(8)=$P(EC0,U,6)
"RTN","ECXLBB1",37,0)
 . S ECARRY(9)=$P(EC0,U,6),ECINST=$P(EC0,U,4),ECARRY(12)=$P(EC0,U,14),ECARRY(11)=$S(ECARRY(12)'="":"Y",1:"N")
"RTN","ECXLBB1",38,0)
 . ;get requesting and ordering providers and their person class
"RTN","ECXLBB1",39,0)
 . S ECXPHY=$P(EC0,U,5),(ECXPHYPC,ECARRY(10),ECPHYNPI,ECREQNPI)=""
"RTN","ECXLBB1",40,0)
 . I ECXPHY]"" S ECXPHY=$O(^VA(200,"B",ECXPHY,0))
"RTN","ECXLBB1",41,0)
 . I ECXPHY>0 D
"RTN","ECXLBB1",42,0)
 .. N PERCLS S PERCLS=$$GET^XUA4A72(ECXPHY,ECD)
"RTN","ECXLBB1",43,0)
 .. I +PERCLS>0 S ECXPHYPC=$P(PERCLS,U,7)
"RTN","ECXLBB1",44,0)
 .. S ECPHYNPI=$$NPI^XUSNPI("Individual_ID",ECXPHY,ECD)
"RTN","ECXLBB1",45,0)
 .. S:+ECPHYNPI'>0 ECPHYNPI="" S ECPHYNPI=$P(ECPHYNPI,U)
"RTN","ECXLBB1",46,0)
 .. S ECXPHY=2_ECXPHY
"RTN","ECXLBB1",47,0)
 . I ECARRY(9)>0 D
"RTN","ECXLBB1",48,0)
 .. N PERCLS S PERCLS=$$GET^XUA4A72(ECARRY(9),ECD)
"RTN","ECXLBB1",49,0)
 .. I +PERCLS>0 S ECARRY(10)=$P(PERCLS,U,7)
"RTN","ECXLBB1",50,0)
 .. S ECREQNPI=$$NPI^XUSNPI("Individual_ID",ECARRY(9),ECD)
"RTN","ECXLBB1",51,0)
 .. S:+ECREQNPI'>0 ECREQNPI="" S ECREQNPI=$P(ECREQNPI,U)
"RTN","ECXLBB1",52,0)
 .. S ECARRY(9)=2_ECARRY(9)
"RTN","ECXLBB1",53,0)
 . D GETDATA
"RTN","ECXLBB1",54,0)
 . K ECARRY
"RTN","ECXLBB1",55,0)
 Q
"RTN","ECXLBB1",56,0)
 ;
"RTN","ECXLBB1",57,0)
GETDATA ; gather rest of extract data that will be recorded in an 
"RTN","ECXLBB1",58,0)
 ; entry in file 727.829
"RTN","ECXLBB1",59,0)
 S ECTRFDT=$$ECXDOB^ECXUTL(ECARRY(1)),ECTRFTM=$$ECXTIME^ECXUTL(ECARRY(1))
"RTN","ECXLBB1",60,0)
 S ECX=$$INP^ECXUTL2(ECXDFN,ECARRY(1)),ECINOUT=$P(ECX,U),ECTRSP=$P(ECX,U,3),ECADMT=$P(ECX,U,4),ECARRY(13)=$$GETDIV^ECXDEPT($P($P(ECX,U,9),";",2))
"RTN","ECXLBB1",61,0)
 ;
"RTN","ECXLBB1",62,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLBB1",63,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECINOUT,ECTRSP)
"RTN","ECXLBB1",64,0)
 ;- If no encounter number don't file record
"RTN","ECXLBB1",65,0)
 S ECENCTR=$$ENCNUM^ECXUTL4(ECINOUT,ECPAT("SSN"),ECADMT,ECARRY(1),ECTRSP,ECXOBS,ECHEAD,,) ; [FLD #6]
"RTN","ECXLBB1",66,0)
 Q:ECENCTR=""
"RTN","ECXLBB1",67,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXLBB1",68,0)
 S ECXERI=$G(ECPAT("ERI"))
"RTN","ECXLBB1",69,0)
 ;
"RTN","ECXLBB1",70,0)
 S ECXSTR=$G(EC23)_"^"_ECINST_"^"_ECXDFN_"^"_ECPAT("SSN")_"^"_ECPAT("NAME")_"^"_ECINOUT_"^"_ECENCTR_"^"_ECTRFDT_"^"_ECTRFTM_"^"_ECARRY(3)_"^"_ECARRY(4)_"^"_ECARRY(5)_"^"_ECARRY(7)_"^"_ECARRY(6)_"^"_ECARRY(8)_"^BB"_ECINST_"^^"
"RTN","ECXLBB1",71,0)
 I $G(ECXLOGIC)>2005 S ECXSTR=ECXSTR_U_ECXPHY_U_ECXPHYPC
"RTN","ECXLBB1",72,0)
 I $G(ECXLOGIC)>2006 D
"RTN","ECXLBB1",73,0)
 .S ECXSTR=ECXSTR_U_ECXERI_U_ECARRY(11)_U_ECARRY(12)_U_ECARRY(9)_U_ECARRY(10)_U_ECARRY(13)
"RTN","ECXLBB1",74,0)
 I '$D(ECXRPT) D FILE(ECXSTR) Q
"RTN","ECXLBB1",75,0)
 S ^TMP("ECXLBB",$J,ECXDFN,ECD)=ECXSTR  ;temporary global array
"RTN","ECXLBB1",76,0)
 ;   used in ECXPLBB (pre-extract audit report)
"RTN","ECXLBB1",77,0)
 Q
"RTN","ECXLBB1",78,0)
 ;
"RTN","ECXLBB1",79,0)
PAT(ECXDFN) ;get/set patient data
"RTN","ECXLBB1",80,0)
 ; INPUT - ECXDFN = patient ien (DFN)
"RTN","ECXLBB1",81,0)
 ; OUTPUT - ECPAT array:
"RTN","ECXLBB1",82,0)
 ;          ECPAT("SSN")
"RTN","ECXLBB1",83,0)
 ;          ECPAT("NAME")
"RTN","ECXLBB1",84,0)
 ; returns 0 or 1 in ECXERR - 0=successful
"RTN","ECXLBB1",85,0)
 ;                            1=error condition
"RTN","ECXLBB1",86,0)
 N X,OK,ECXERR
"RTN","ECXLBB1",87,0)
 ;get data
"RTN","ECXLBB1",88,0)
 S ECXERR=0
"RTN","ECXLBB1",89,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,"","1;3",.ECPAT)
"RTN","ECXLBB1",90,0)
 I 'OK S ECXERR=1
"RTN","ECXLBB1",91,0)
 Q ECXERR
"RTN","ECXLBB1",92,0)
 ;
"RTN","ECXLBB1",93,0)
FILE(ECODE) ;
"RTN","ECXLBB1",94,0)
 ; Input - ECODE = extract record
"RTN","ECXLBB1",95,0)
 ;
"RTN","ECXLBB1",96,0)
 ; record the extract record at a global node in file 727.829
"RTN","ECXLBB1",97,0)
 ; sequence #^year/month of extract^extract #^facility^patient dfn^SSN^
"RTN","ECXLBB1",98,0)
 ; name^i/o pt indicator^encounter #^date of transfusion^time of 
"RTN","ECXLBB1",99,0)
 ; transfusion^component^component abbrev^# of units^volume in mm^
"RTN","ECXLBB1",100,0)
 ; reaction^reaction type^feeder location^DSS product dept^DSS IP #
"RTN","ECXLBB1",101,0)
 ; ordering physician^ordering physician pc^emergency response indicator
"RTN","ECXLBB1",102,0)
 ; (FEMA)^unit modified^unit modification^requesting provider^request. 
"RTN","ECXLBB1",103,0)
 ; provider person class
"RTN","ECXLBB1",104,0)
 ;note:  DSS product dept and DSS IP # are dependent on the release of
"RTN","ECXLBB1",105,0)
 ; ECX*3*61
"RTN","ECXLBB1",106,0)
 N DA,DIK,EC7
"RTN","ECXLBB1",107,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLBB1",108,0)
 S ECODE=EC7_"^"_ECODE
"RTN","ECXLBB1",109,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,ECRN=ECRN+1
"RTN","ECXLBB1",110,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLBB1",111,0)
 Q
"RTN","ECXLBB1",112,0)
 ;
"RTN","ECXLBB1",113,0)
 ;
"RTN","ECXLBB1",114,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXLBB1",115,0)
 S ECHEAD="LBB"
"RTN","ECXLBB1",116,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLBB1",117,0)
 Q
"RTN","ECXLBB1",118,0)
 ;
"RTN","ECXLBB1",119,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXLBB1",120,0)
 ; should be queued with a 1D frequency
"RTN","ECXLBB1",121,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXLBB1",122,0)
 ;
"RTN","ECXLBB1",123,0)
CHKMOD(MD) ;check if modifier is contained in string
"RTN","ECXLBB1",124,0)
 N RES,MODX
"RTN","ECXLBB1",125,0)
 I MD="" Q ""
"RTN","ECXLBB1",126,0)
 S (RES,MODX)="" F  S MODX=$O(MODARY(MODX)) Q:MODX=""  D  I RES'="" Q
"RTN","ECXLBB1",127,0)
 .I MD[MODX S RES=MODARY(MODX)
"RTN","ECXLBB1",128,0)
 Q RES
"RTN","ECXLBB1",129,0)
 ;
"RTN","ECXLBB1",130,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLBB1",131,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXLBB1",132,0)
 Q
"RTN","ECXLBB1",133,0)
 ;
"RTN","ECXLBB1",134,0)
 ;ECXLBB
"RTN","ECXMOV")
0^39^B19849006^B18912208
"RTN","ECXMOV",1,0)
ECXMOV ;ALB/JAP,BIR/DMA,PTD-Transfer and Discharge Extract ; 6/6/07 6:46am
"RTN","ECXMOV",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,33,39,41,42,46,65,84,107,105**;Dec 22, 1997;Build 70
"RTN","ECXMOV",3,0)
BEG ;entry point from option
"RTN","ECXMOV",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXMOV",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXMOV",6,0)
 Q
"RTN","ECXMOV",7,0)
 ;
"RTN","ECXMOV",8,0)
START ; start package specific extract
"RTN","ECXMOV",9,0)
 N ECXDSC,W,WTO,X1,X2,X,ECXDPRPC,ECXDAPPC
"RTN","ECXMOV",10,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXMOV",11,0)
 S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXMOV",12,0)
 S ECED=ECED+.3,QFLG=0
"RTN","ECXMOV",13,0)
 F ECM=2,3 S ECARG="ATT"_ECM,ECD=ECSD1 D  Q:QFLG
"RTN","ECXMOV",14,0)
 .F  S ECD=$O(^DGPM(ECARG,ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D  Q:QFLG
"RTN","ECXMOV",15,0)
 ..F  S ECDA=$O(^DGPM(ECARG,ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXMOV",16,0)
 ...Q:'$D(^DGPM(ECDA,0))  S EC=^(0)
"RTN","ECXMOV",17,0)
 ...S ECXDFN=+$P(EC,U,3),ECMT=$P(EC,U,18),ECXDATE=ECD
"RTN","ECXMOV",18,0)
 ...K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;",.ECXPAT)
"RTN","ECXMOV",19,0)
 ...I 'OK K ECXPAT Q
"RTN","ECXMOV",20,0)
 ...S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXMOV",21,0)
 ...S ECTM=$$ECXTIME^ECXUTL(ECD)
"RTN","ECXMOV",22,0)
 ...S WTO=$P(EC,U,6),ECXWTO=$P($G(^DIC(42,+WTO,44)),U)
"RTN","ECXMOV",23,0)
 ...;
"RTN","ECXMOV",24,0)
 ...;reset EC to admission movement
"RTN","ECXMOV",25,0)
 ...S ECCA=$P(EC,U,14),EC=^DGPM(ECCA,0),ECA=$P(EC,U)
"RTN","ECXMOV",26,0)
 ...;
"RTN","ECXMOV",27,0)
 ...;if date of previous xfer movement is greater than admit date,
"RTN","ECXMOV",28,0)
 ...;then reset EC to that previous xfer movement
"RTN","ECXMOV",29,0)
 ...S ECDL=9999999.9999999-ECD,ECDL=+$O(^DGPM("ATID2",ECXDFN,ECDL))
"RTN","ECXMOV",30,0)
 ...S ECDAL=+$O(^DGPM("ATID2",ECXDFN,ECDL,0))
"RTN","ECXMOV",31,0)
 ...I $D(^DGPM(ECDAL,0)),$P(^(0),U)>$P(EC,U) S EC=^(0)
"RTN","ECXMOV",32,0)
 ...;
"RTN","ECXMOV",33,0)
 ...I ECM=2 D
"RTN","ECXMOV",34,0)
 ....;if transact=Transfer,ECD (time)=ASIH (7chars) and >0,set ECXDATE
"RTN","ECXMOV",35,0)
 ....;to Admit DT/time before calling funct to get in/out stat & TS
"RTN","ECXMOV",36,0)
 ....I $L($P(ECD,".",2))=7,+$E($P(ECD,".",2),7)>0 S ECXDATE=ECA
"RTN","ECXMOV",37,0)
 ....S W=$P(EC,U,6)
"RTN","ECXMOV",38,0)
 ...;
"RTN","ECXMOV",39,0)
 ...I ECM=3 D
"RTN","ECXMOV",40,0)
 ....;subtract 1 second from dischg DT so IN5^VADPT call (in ECXUTL2
"RTN","ECXMOV",41,0)
 ....;API) will pick up discharge movmement record
"RTN","ECXMOV",42,0)
 ....S ECXDATE=$$FMADD^XLFDT(ECXDATE,,,,-1)
"RTN","ECXMOV",43,0)
 ....;set losing ward to ward at discharge
"RTN","ECXMOV",44,0)
 ....N WARD S WARD=$$GET1^DIQ(405,ECDA,200)
"RTN","ECXMOV",45,0)
 ....I WARD'="" S W=+$O(^DIC(42,"B",WARD,0))
"RTN","ECXMOV",46,0)
 ...;
"RTN","ECXMOV",47,0)
 ...;-Gets inpat/outpat status, DOM, Treating Spec (TS)
"RTN","ECXMOV",48,0)
 ...S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXDOM=$P(X,U,10),ECXTS=$P(X,U,3)
"RTN","ECXMOV",49,0)
 ...;
"RTN","ECXMOV",50,0)
 ...S (ECXWRD,ECXFAC,ECXDSSD)=""
"RTN","ECXMOV",51,0)
 ...I W'="" D
"RTN","ECXMOV",52,0)
 ....S ECXWRD=$P($G(^DIC(42,W,44)),U),ECXFAC=$P($G(^DIC(42,W,0)),U,11)
"RTN","ECXMOV",53,0)
 ....S ECXDSSD=$P($G(^ECX(727.4,W,0)),U,2)
"RTN","ECXMOV",54,0)
 ...S ECDI=$S(ECM=2:"",1:$$ECXDATE^ECXUTL(ECD,ECXYM))
"RTN","ECXMOV",55,0)
 ...S X1=ECD,X2=$P(EC,U) D ^%DTC S ECXLOS=X
"RTN","ECXMOV",56,0)
 ...;
"RTN","ECXMOV",57,0)
 ...;- Get discharge PC Team, Primary and Assoc Primary Provider
"RTN","ECXMOV",58,0)
 ...S (ECXDPCT,ECXDPR,ECXDAPR,ECXDPRPC,ECXDAPPC)=""
"RTN","ECXMOV",59,0)
 ...I ECM=3 D
"RTN","ECXMOV",60,0)
 ....S ECXDSC=$$PRIMARY^ECXUTL2(ECXDFN,ECD)
"RTN","ECXMOV",61,0)
 ....S ECXDPCT=$P(ECXDSC,U),ECXDPR=$P(ECXDSC,U,2),ECXDAPR=$P(ECXDSC,U,5),ECXDPRPC=$P(ECXDSC,U,3),ECXDAPPC=$P(ECXDSC,U,6)
"RTN","ECXMOV",62,0)
 ....S ECDAPRNP=$P(ECXDSC,U,7),ECDPRNPI=$P(ECXDSC,U,4)
"RTN","ECXMOV",63,0)
 ...;
"RTN","ECXMOV",64,0)
 ...;Get production division ;p-46
"RTN","ECXMOV",65,0)
 ...N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC) ;p-46 
"RTN","ECXMOV",66,0)
 ...;- Observation patient indicator (YES/NO)
"RTN","ECXMOV",67,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXMOV",68,0)
 ...;
"RTN","ECXMOV",69,0)
 ...;- If no encounter number, don't file record
"RTN","ECXMOV",70,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECA,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXMOV",71,0)
 ...D:ECXENC'="" FILE
"RTN","ECXMOV",72,0)
 Q
"RTN","ECXMOV",73,0)
 ;
"RTN","ECXMOV",74,0)
FILE ;file the extract record
"RTN","ECXMOV",75,0)
 ;node0
"RTN","ECXMOV",76,0)
 ;fac ECXFAC^dfn ECXDFN^ssn ECXSSN^name ECXPNM^in/out ECXA^
"RTN","ECXMOV",77,0)
 ;day (ECD)^^adm date (ECA)^disc date ECDI^mov # ECDA^
"RTN","ECXMOV",78,0)
 ;type ECM^losing ward ECXWARD^treat spec ^los ECXLOS^^
"RTN","ECXMOV",79,0)
 ;movement type ECMT^mov time ECTM^gaining ward ECXWTO^
"RTN","ECXMOV",80,0)
 ;adm time (ECA)^^^
"RTN","ECXMOV",81,0)
 ;node1
"RTN","ECXMOV",82,0)
 ;mpi ECXMPI^dss dept ECXDSSD^dom ECXDOM^observ pat ind ECXOBS^
"RTN","ECXMOV",83,0)
 ;encounter num ECXENC^disch prim prov ECXDPR^disch PC team ECXDPCT^
"RTN","ECXMOV",84,0)
 ;disch assoc prim prov ECXDAPR^production division ECXPDIV
"RTN","ECXMOV",85,0)
 ;^disch prov person class ECXDPRPC^disch assoc prov pe-
"RTN","ECXMOV",86,0)
 ;rson person class^disch assoc pc prov npi ECDAPRNP^discharge pc provider npi ECDPRNPI
"RTN","ECXMOV",87,0)
 N DA,DIK
"RTN","ECXMOV",88,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXMOV",89,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXMOV",90,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_U
"RTN","ECXMOV",91,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECA,ECXYM)_U_ECDI_U_ECDA_U_ECM_U_ECXWRD_U
"RTN","ECXMOV",92,0)
 S ECODE=ECODE_U_ECXLOS_U_U_ECMT_U_ECTM_U_ECXWTO_U
"RTN","ECXMOV",93,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECA)_U_U_U
"RTN","ECXMOV",94,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXDPR_U
"RTN","ECXMOV",95,0)
 S ECODE1=ECODE1_ECXDPCT_U_ECXDAPR_U_ECXPDIV ;p-46 added ECXPDIV
"RTN","ECXMOV",96,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXDPRPC_U_ECXDAPPC
"RTN","ECXMOV",97,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_$G(ECDAPRNP)_U_$G(ECDPRNPI)
"RTN","ECXMOV",98,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXMOV",99,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXMOV",100,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXMOV",101,0)
 Q
"RTN","ECXMOV",102,0)
 ;
"RTN","ECXMOV",103,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXMOV",104,0)
 S ECHEAD="MOV"
"RTN","ECXMOV",105,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXMOV",106,0)
 Q
"RTN","ECXMOV",107,0)
 ;
"RTN","ECXMOV",108,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXMOV",109,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXMTL")
0^41^B38000130^B33423758
"RTN","ECXMTL",1,0)
ECXMTL ;ALB/JAP - DSS Mental Health Extract ; 8/17/07 9:52am
"RTN","ECXMTL",2,0)
 ;;3.0;DSS EXTRACTS;**24,30,33,39,46,49,71,82,84,92,105**;Dec 22, 1997;Build 70
"RTN","ECXMTL",3,0)
 ;
"RTN","ECXMTL",4,0)
BEG ;entry point from option
"RTN","ECXMTL",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXMTL",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXMTL",7,0)
 Q
"RTN","ECXMTL",8,0)
 ;
"RTN","ECXMTL",9,0)
START ;entry point from tasked job
"RTN","ECXMTL",10,0)
 S QFLG=0
"RTN","ECXMTL",11,0)
 ;get first record #
"RTN","ECXMTL",12,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1)
"RTN","ECXMTL",13,0)
 ;call mh/dss api for extract record creation
"RTN","ECXMTL",14,0)
 ;variables ecfile,ecxym,ecinst,ecsd,eced passed in by taskmanager
"RTN","ECXMTL",15,0)
 S ECXSEQ=EC7,ECXECX=$P(EC23,U,2),ECXERR=0
"RTN","ECXMTL",16,0)
 ;call mh api to create extract records
"RTN","ECXMTL",17,0)
 S X="YSDSS" X ^%ZOSF("TEST") I '$T S QFLG=1 Q
"RTN","ECXMTL",18,0)
 D UPD^YSDSS(ECFILE,.ECXSEQ,ECXYM,ECXECX,ECINST,ECSD,ECED,.ECXERR)
"RTN","ECXMTL",19,0)
 Q:ECXERR
"RTN","ECXMTL",20,0)
 Q:QFLG
"RTN","ECXMTL",21,0)
 ;if no error, continue
"RTN","ECXMTL",22,0)
 D UPDATE
"RTN","ECXMTL",23,0)
 Q
"RTN","ECXMTL",24,0)
 ;
"RTN","ECXMTL",25,0)
UPDATE ;add non-mh data to each record created by mh api
"RTN","ECXMTL",26,0)
 N ECXADT,JJ,ECXNPRFI
"RTN","ECXMTL",27,0)
 S EC7=EC7+1
"RTN","ECXMTL",28,0)
 F JJ=EC7:1:ECXSEQ Q:QFLG  D
"RTN","ECXMTL",29,0)
 .Q:'$D(^ECX(ECFILE,JJ,0))
"RTN","ECXMTL",30,0)
 .S ECXDFN=$P(^ECX(ECFILE,JJ,0),U,5),ECXDATE=$P(^ECX(ECFILE,JJ,0),U,9),ECXPRV=$P(^ECX(ECFILE,JJ,0),U,18)
"RTN","ECXMTL",31,0)
 .S ECXSCNUM=$P(^ECX(ECFILE,JJ,0),U,23),ECXSCNAM=$P(^ECX(ECFILE,JJ,0),U,24)
"RTN","ECXMTL",32,0)
 .D PAT(ECXDFN,ECXDATE)
"RTN","ECXMTL",33,0)
 .S (ECXPRCLS,ECPRNPI,ECXDIV,ECXPDIV)="" I ECXPRV D PROV(.ECXPRV,ECXDATE)
"RTN","ECXMTL",34,0)
 .S ECXDSSI=""
"RTN","ECXMTL",35,0)
 .I ECXLOGIC>2003 D
"RTN","ECXMTL",36,0)
 ..I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXMTL",37,0)
 .;
"RTN","ECXMTL",38,0)
 .;- Observation patient indicator (YES/NO)
"RTN","ECXMTL",39,0)
 .S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXMTL",40,0)
 .;
"RTN","ECXMTL",41,0)
 .;- set national patient record flag if exist
"RTN","ECXMTL",42,0)
 .D NPRF^ECXUTL5
"RTN","ECXMTL",43,0)
 .;
"RTN","ECXMTL",44,0)
 .;- If no encounter number don't file record
"RTN","ECXMTL",45,0)
 .S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXMTL",46,0)
 .S ECD=ECXDATE,ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXMTL",47,0)
 .;adjust scale name & scale number
"RTN","ECXMTL",48,0)
 .S ECXSCNAM=$E(ECXSCNAM,1,10)
"RTN","ECXMTL",49,0)
 .I ECXSCNUM]"",ECXSCNUM'=+ECXSCNUM S ECXSCNUM=+$E(ECXSCNUM,2,99)
"RTN","ECXMTL",50,0)
 .N ECXDEPT S ECXDEPT="" ;dss department use postponed S ECXDEPT=$$MTL^ECXDEPT(ECXDIV,ECXSCNAM,ECINST) ;p-46 line added
"RTN","ECXMTL",51,0)
 .;Set division to external value if extract is for FY05 or higher
"RTN","ECXMTL",52,0)
 .D FILE
"RTN","ECXMTL",53,0)
 Q
"RTN","ECXMTL",54,0)
 ;
"RTN","ECXMTL",55,0)
PAT(ECXDFN,ECXDATE) ;determine in/outpatient status, demographics, primary care
"RTN","ECXMTL",56,0)
 N OK
"RTN","ECXMTL",57,0)
 S (ECXADT,ECXPNM,ECXSSN,ECXMPI)=""
"RTN","ECXMTL",58,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;3;5;",.ECXPAT)
"RTN","ECXMTL",59,0)
 S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXMTL",60,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXMTL",61,0)
 ;agent orange status
"RTN","ECXMTL",62,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXMTL",63,0)
 ;- Purple Heart Indicator, Period of Service, Agent Orange Location
"RTN","ECXMTL",64,0)
 S ECXPHI=$G(ECXPAT("PHI")),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL")
"RTN","ECXMTL",65,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXMTL",66,0)
 ;Combat Veteran Status
"RTN","ECXMTL",67,0)
 S X3=$$CVEDT^ECXUTL5(ECXDFN,$S($G(ECD):ECD,$G(ECXDATE):ECXDATE,1:DT))
"RTN","ECXMTL",68,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXMTL",69,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXMTL",70,0)
 ; - Race and Ethnicity
"RTN","ECXMTL",71,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXMTL",72,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXMTL",73,0)
 ;get primary care data
"RTN","ECXMTL",74,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE),ECPTTM=$P(X,U)
"RTN","ECXMTL",75,0)
 S ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXMTL",76,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXMTL",77,0)
 ;get inpatient data
"RTN","ECXMTL",78,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXDOM=$P(X,U,10),ECXTS=$P(X,U,3)
"RTN","ECXMTL",79,0)
 S ECXA=$P(X,U),(ECXADT,ECXADMDT)=$P($P(X,U,4),"."),ECXDCDT=$P($P(X,U,6),".")
"RTN","ECXMTL",80,0)
 S ECXWPRV=$P(X,U,7),ECXATT=$P(X,U,8)
"RTN","ECXMTL",81,0)
 S ECWPRNPI=$$NPI^XUSNPI("Individual_ID",ECXWPRV,ECXDATE)
"RTN","ECXMTL",82,0)
 S:+ECWPRNPI'>0 ECWPRNPI="" S ECWPRNPI=$P(ECWPRNPI,U)
"RTN","ECXMTL",83,0)
 S ECATTNPI=$$NPI^XUSNPI("Individual_ID",ECXATT,ECXDATE)
"RTN","ECXMTL",84,0)
 S:+ECATTNPI'>0 ECATTNPI="" S ECATTNPI=$P(ECATTNPI,U)
"RTN","ECXMTL",85,0)
 ;Get ward provider and attending phy person classes
"RTN","ECXMTL",86,0)
 S ECXWPRPC=$P(X,U,11),ECXATTPC=$P(X,U,12)
"RTN","ECXMTL",87,0)
 I ECXADMDT S ECXADMDT=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXMTL",88,0)
 I ECXDCDT S ECXDCDT=$$ECXDATE^ECXUTL(ECXDCDT,ECXYM)
"RTN","ECXMTL",89,0)
 Q
"RTN","ECXMTL",90,0)
 ;
"RTN","ECXMTL",91,0)
PROV(ECXPRV,ECXDATE) ;get provider data
"RTN","ECXMTL",92,0)
 N INST,DGIEN,ARR,DIC,DR,DA,DIQ
"RTN","ECXMTL",93,0)
 S ECXPRCLS=$$PRVCLASS^ECXUTL(ECXPRV,ECXDATE)
"RTN","ECXMTL",94,0)
 S ECPRNPI=$$NPI^XUSNPI("Individual_ID",ECXPRV,ECXDATE)
"RTN","ECXMTL",95,0)
 S:+ECPRNPI'>0 ECPRNPI="" S ECPRNPI=$P(ECPRNPI,U)
"RTN","ECXMTL",96,0)
 ;get division identifier using provider
"RTN","ECXMTL",97,0)
 S (ECXDIV,ECXPDIV)=""
"RTN","ECXMTL",98,0)
 S IEN=0 F  D  Q:'IEN  Q:'INST  Q:ECXDIV
"RTN","ECXMTL",99,0)
 .;get pointer to file #4 from provider record
"RTN","ECXMTL",100,0)
 .I '$D(^VA(200,ECXPRV,0)) Q
"RTN","ECXMTL",101,0)
 .S IEN=$O(^VA(200,ECXPRV,2,IEN))
"RTN","ECXMTL",102,0)
 .Q:'IEN
"RTN","ECXMTL",103,0)
 .S DIC="^VA(200,",DR="16",DA=ECXPRV
"RTN","ECXMTL",104,0)
 .S DR(200.02)=".01",DA(200.02)=IEN,DIQ="ARR",DIQ(0)="I"
"RTN","ECXMTL",105,0)
 .D EN^DIQ1
"RTN","ECXMTL",106,0)
 .S INST=$G(ARR(200.02,IEN,.01,"I"))
"RTN","ECXMTL",107,0)
 .Q:'INST
"RTN","ECXMTL",108,0)
 .;get production division
"RTN","ECXMTL",109,0)
 .S ECXPDIV=$$RADDIV^ECXDEPT(INST) ;p-46 line added
"RTN","ECXMTL",110,0)
 .;get medical center division
"RTN","ECXMTL",111,0)
 .S DGIEN=$O(^DG(40.8,"AD",INST,0)) I DGIEN D
"RTN","ECXMTL",112,0)
 ..S ECXDIV=$P($G(^ECX(727.3,DGIEN,0)),U,2)
"RTN","ECXMTL",113,0)
 S ECXPRV="2"_ECXPRV
"RTN","ECXMTL",114,0)
 Q
"RTN","ECXMTL",115,0)
 ;
"RTN","ECXMTL",116,0)
FILE ;file record in #727.812
"RTN","ECXMTL",117,0)
 ;node0
"RTN","ECXMTL",118,0)
 ;facility^dfn^ssn ECXSSN^name ECXPNM^i/o status ECXA^
"RTN","ECXMTL",119,0)
 ;day ECXDATE^division ECXDIV^admit date ECXADMDT^
"RTN","ECXMTL",120,0)
 ;d/c date ECXDCDT^dss id ECXDSSI^pc team ECPTTM^pc provider ECPTPR^
"RTN","ECXMTL",121,0)
 ;placeholder^pc prov person class ECCLAS^
"RTN","ECXMTL",122,0)
 ;provider ECXPRV^placeholder^prov person class ECXPRCLS^
"RTN","ECXMTL",123,0)
 ;test name ECXSCNAM(?)^test ien ECXSCNUM(?)^scale number^scale name^
"RTN","ECXMTL",124,0)
 ;test score^scale score^attend phys^ward provider
"RTN","ECXMTL",125,0)
 ;node1
"RTN","ECXMTL",126,0)
 ;mpi^assoc pc provider^placeholder^
"RTN","ECXMTL",127,0)
 ;assoc pc prov person class^asi class^asi special^asi encounter date^
"RTN","ECXMTL",128,0)
 ;purple heart ind.^dom prrtp & saartp ind.^enrollment cat^
"RTN","ECXMTL",129,0)
 ;enrollment stat^enrollment prior^period of serv.^obs. pat ind.^
"RTN","ECXMTL",130,0)
 ;encounter num^agent orange loc^dob^production division^dss
"RTN","ECXMTL",131,0)
 ;department ECXDEPT^head & neck canc. indi.^ethnicity^race1^^
"RTN","ECXMTL",132,0)
 ;enrollment prior ECXPRIOR_enrollment subgroup
"RTN","ECXMTL",133,0)
 ;ECXSBGRP^enrollee user ECXUESTA^division ECXDIV^patient type
"RTN","ECXMTL",134,0)
 ;ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXMTL",135,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI
"RTN","ECXMTL",136,0)
 ;attending phy person class ECXATTPC^ward provider person class 
"RTN","ECXMTL",137,0)
 ;ECXWPRPC^^agent orange status ECXAST^asso prov npi ECASNPI^att phy
"RTN","ECXMTL",138,0)
 ;npi ECATTNPI^primary care prov npi ECPTNPI^provider npi ECPRNPI^ward
"RTN","ECXMTL",139,0)
 ;provider npi ECWPRNPI
"RTN","ECXMTL",140,0)
 N DA,DIK,STR
"RTN","ECXMTL",141,0)
 I $P(^ECX(ECFILE,JJ,0),U,21)="ASI" S $P(^ECX(ECFILE,JJ,1),U,7)=ECXDATE
"RTN","ECXMTL",142,0)
 S $P(^ECX(ECFILE,JJ,0),U,6,9)=ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE
"RTN","ECXMTL",143,0)
 S STR=$S(ECXLOGIC<2005:ECXDIV,1:"")_U_ECXADMDT_U_ECXDCDT_U_ECXDSSI_U_ECPTTM_U_ECPTPR_U
"RTN","ECXMTL",144,0)
 S STR=STR_U_ECCLAS,$P(^ECX(ECFILE,JJ,0),U,10,17)=STR,STR=""
"RTN","ECXMTL",145,0)
 S $P(^ECX(ECFILE,JJ,0),U,18,20)=ECXPRV_U_U_ECXPRCLS
"RTN","ECXMTL",146,0)
 S $P(^ECX(ECFILE,JJ,0),U,23,24)=ECXSCNUM_U_ECXSCNAM
"RTN","ECXMTL",147,0)
 S $P(^ECX(ECFILE,JJ,0),U,27,29)=ECXATT_U_ECXWPRV_U
"RTN","ECXMTL",148,0)
 I '$D(^ECX(ECFILE,JJ,1)) S ^ECX(727.812,JJ,1)="^^^^^"
"RTN","ECXMTL",149,0)
 S $P(^ECX(ECFILE,JJ,1),U,1,4)=ECXMPI_U_ECASPR_U_U_ECCLAS2
"RTN","ECXMTL",150,0)
 S STR=ECXPHI_U_ECXDOM_U_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U
"RTN","ECXMTL",151,0)
 S STR=STR_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXDOB_U_ECXPDIV_U_ECXDEPT_U
"RTN","ECXMTL",152,0)
 S STR=STR_ECXHNCI_U_ECXETH_U_ECXRC1_U
"RTN","ECXMTL",153,0)
 I ECXLOGIC>2004 S STR=STR_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXDIV_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXMTL",154,0)
 I ECXLOGIC>2005 S STR=STR_U_ECXATTPC_U_ECXWPRPC
"RTN","ECXMTL",155,0)
 S $P(^ECX(ECFILE,JJ,1),U,8,22)=STR
"RTN","ECXMTL",156,0)
 I ECXLOGIC>2006 S $P(^ECX(ECFILE,JJ,1),U,34)=ECXAST_U
"RTN","ECXMTL",157,0)
 I ECXLOGIC>2007 S $P(^ECX(ECFILE,JJ,1),U,35)=ECASNPI_U_ECATTNPI_U_ECPTNPI_U D
"RTN","ECXMTL",158,0)
 . S ^ECX(ECFILE,JJ,2)=ECPRNPI_U_ECWPRNPI
"RTN","ECXMTL",159,0)
 S DA=JJ,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXMTL",160,0)
 S ECRN=ECRN+1
"RTN","ECXMTL",161,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXMTL",162,0)
 Q
"RTN","ECXMTL",163,0)
 ;
"RTN","ECXMTL",164,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXMTL",165,0)
 S ECHEAD="MTL"
"RTN","ECXMTL",166,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXMTL",167,0)
 Q
"RTN","ECXMTL",168,0)
 ;
"RTN","ECXMTL",169,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXMTL",170,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXMTL",171,0)
 Q
"RTN","ECXNUT")
0^15^B31304371^B28055134
"RTN","ECXNUT",1,0)
ECXNUT ;ALB/JRC Nutrition DSS Extract ; 9/24/07 9:33am
"RTN","ECXNUT",2,0)
 ;;3.0;DSS EXTRACTS;**92,107,105**;Dec 22, 1997;Build 70
"RTN","ECXNUT",3,0)
BEG ;entry point from option
"RTN","ECXNUT",4,0)
 N EC23,EC7,ECED,ECFILE,ECGRP,ECHEAD,ECINST,ECPACK,ECPIECE,ECRN,ECRTN,ECSD1,ECVER,ECXYM
"RTN","ECXNUT",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXNUT",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXNUT",7,0)
 Q
"RTN","ECXNUT",8,0)
 ;
"RTN","ECXNUT",9,0)
START ; start package specific extract
"RTN","ECXNUT",10,0)
 ;Init variables
"RTN","ECXNUT",11,0)
 N ECSD,ARRAY
"RTN","ECXNUT",12,0)
 S ECED=ECED+.3,ECSD=ECSD1,ARRAY="^TMP($J,""FH"")"
"RTN","ECXNUT",13,0)
 K @ARRAY
"RTN","ECXNUT",14,0)
 ;
"RTN","ECXNUT",15,0)
 ;Call n&fs api and store in ^TMP($J,"FH" global
"RTN","ECXNUT",16,0)
 D DATA^FHDSSAPI(ECSD,ECED)
"RTN","ECXNUT",17,0)
 ;
"RTN","ECXNUT",18,0)
 ;Get n&fs records from ^TMP($J,"FH" global and file
"RTN","ECXNUT",19,0)
 D GETMEALS^ECXNUT1
"RTN","ECXNUT",20,0)
 ;
"RTN","ECXNUT",21,0)
 ;kill ^tmp global
"RTN","ECXNUT",22,0)
 K @ARRAY
"RTN","ECXNUT",23,0)
 ;
"RTN","ECXNUT",24,0)
 Q
"RTN","ECXNUT",25,0)
 ;
"RTN","ECXNUT",26,0)
GET ;gather extract data
"RTN","ECXNUT",27,0)
 ;Init variables
"RTN","ECXNUT",28,0)
 N ECXORDPC,ECXSSN,ECXPNM,ECXSEX,ECXDOB,ECXMPI,ECXRC1,ECXETH,ECXVET,ECXENRL,ECXELIG,ECXMST,ECXPST,ECXPLOC,ECXPHI,ECXMNS,ECXSTATE,ECXCNTY,ECXZIP,ECXPOS,ECXAST,ECXAOL,ECXRST,ECXEST,ECXTM,ECXDATE,ECXMN,ECXSPC
"RTN","ECXNUT",29,0)
 N ECXADMDT,ECXWRD,ECXFAC,ECXPRV,ECXPRNPI,ECXATT,ECXATNPI,ECXDOM,ECXATTPC,ECXPRVPC,ECXPDIV,ECXCBOC,ECPTPR,ECCLASS,ECPTTM,ECXOBS,ECXHNCI,ECXNPRFI,ECXERI,ECXENC,ECPAT,ECXERR,ADM,W,X,ECXCAT,ECXCVE,ECXPRIOR,ECXPTYPE,ECXSTAT,ECXUESTA,ECXA,ECORNPI
"RTN","ECXNUT",30,0)
 N ECXOEF,ECXOEFDT
"RTN","ECXNUT",31,0)
 ;
"RTN","ECXNUT",32,0)
 ;- Prefix ordering pro with a 2 and get person class
"RTN","ECXNUT",33,0)
 S ECXORDPC=$$PRVCLASS^ECXUTL(+ECXORDPH,DATE)
"RTN","ECXNUT",34,0)
 S ECORNPI=$$NPI^XUSNPI("Individual_ID",+ECXORDPH,DATE)
"RTN","ECXNUT",35,0)
 S:+ECORNPI'>0 ECORNPI="" S ECORNPI=$P(ECORNPI,U)
"RTN","ECXNUT",36,0)
 S ECXORDPH=$S(ECXORDPH:2_ECXORDPH,1:"")
"RTN","ECXNUT",37,0)
 ;
"RTN","ECXNUT",38,0)
 ;set patient file (#2) dfn and get patient demographics
"RTN","ECXNUT",39,0)
 S ECXDFN=$P($G(^TMP($J,"FH","ZN",FHDFN)),U,3)
"RTN","ECXNUT",40,0)
 S ECXERR=0 D PAT(ECXDFN)
"RTN","ECXNUT",41,0)
 Q:ECXERR
"RTN","ECXNUT",42,0)
 ;Set demographic variables
"RTN","ECXNUT",43,0)
 S ECXSSN=ECPAT("SSN"),ECXPNM=ECPAT("NAME"),ECXSEX=ECPAT("SEX"),ECXDOB=ECPAT("DOB"),ECXMPI=ECPAT("MPI"),ECXRC1=ECPAT("RACE1"),ECXETH=ECPAT("ETHNIC"),ECXVET=ECPAT("VET"),ECXENRL=ECPAT("ENROLL LOC"),ECXELIG=ECPAT("ELIG")
"RTN","ECXNUT",44,0)
 S ECXMST=ECPAT("MST STAT"),ECXPST=ECPAT("POW STAT"),ECXPLOC=ECPAT("POW LOC"),ECXPHI=ECPAT("PHI"),ECXMNS=ECPAT("MEANS"),ECXSTATE=ECPAT("STATE"),ECXCNTY=ECPAT("COUNTY"),ECXZIP=ECPAT("ZIP")
"RTN","ECXNUT",45,0)
 S ECXPOS=ECPAT("POS"),ECXAST=ECPAT("AO STAT"),ECXAOL=ECPAT("AOL"),ECXRST=ECPAT("IR STAT"),ECXEST=ECPAT("EC STAT")
"RTN","ECXNUT",46,0)
 ;
"RTN","ECXNUT",47,0)
 ;Get oef/oif data
"RTN","ECXNUT",48,0)
 S ECXOEF=ECPAT("ECXOEF")
"RTN","ECXNUT",49,0)
 S ECXOEFDT=ECPAT("ECXOEFDT")
"RTN","ECXNUT",50,0)
 ;
"RTN","ECXNUT",51,0)
 ;Get enrollment status
"RTN","ECXNUT",52,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXNUT",53,0)
 ;
"RTN","ECXNUT",54,0)
 S ECXTM=$$ECXTIME^ECXUTL(DATE)
"RTN","ECXNUT",55,0)
 S ECXDATE=$$ECXDATE^ECXUTL(+DATE,ECXYM)
"RTN","ECXNUT",56,0)
 ;
"RTN","ECXNUT",57,0)
 ;- Use movement record date & time
"RTN","ECXNUT",58,0)
 S ADM=$$INP^ECXUTL2(ECXDFN,DATE),ECXA=$P(ADM,U)
"RTN","ECXNUT",59,0)
 S ECXMN=$P(ADM,U,2),ECXSPC=$P(ADM,U,3),ECXADMDT=$P(ADM,U,4)
"RTN","ECXNUT",60,0)
 S W=$P(ADM,U,9),ECXWRD=$P(W,";",1),ECXFAC=$P(W,";",2)
"RTN","ECXNUT",61,0)
 S ECXPRV=$P(ADM,U,7),ECXPRNPI="",ECXATT=$P(ADM,U,8),ECXATNPI=""
"RTN","ECXNUT",62,0)
 S ECXDOM=$P(ADM,U,10),ECXATTPC=$P(ADM,U,12),ECXPRVPC=$P(ADM,U,11)
"RTN","ECXNUT",63,0)
 ;
"RTN","ECXNUT",64,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)  ;Get production division
"RTN","ECXNUT",65,0)
 S ECXCBOC=$$CBOC^ECXSCX2(+ECXFAC) ;Get cboc facility
"RTN","ECXNUT",66,0)
 ;
"RTN","ECXNUT",67,0)
 ;- Get primary care data
"RTN","ECXNUT",68,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,DATE)
"RTN","ECXNUT",69,0)
 S ECPTPR=$P(X,U,2),ECCLASS=$P(X,U,3),ECPTTM=$P(X,U),ECPTNPI=$P(X,U,4)
"RTN","ECXNUT",70,0)
 ;
"RTN","ECXNUT",71,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXNUT",72,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXSPC)
"RTN","ECXNUT",73,0)
 ;
"RTN","ECXNUT",74,0)
 ;- Get head and neck cancer indicator
"RTN","ECXNUT",75,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXNUT",76,0)
 ;
"RTN","ECXNUT",77,0)
 ;- Get national patient record flag indicator
"RTN","ECXNUT",78,0)
 N ECXNPRFI D NPRF^ECXUTL5
"RTN","ECXNUT",79,0)
 ;
"RTN","ECXNUT",80,0)
 ;- National response indicator
"RTN","ECXNUT",81,0)
 S ECXERI=$$EMGRES^DGUTL(ECXDFN)
"RTN","ECXNUT",82,0)
 ;
"RTN","ECXNUT",83,0)
 ;- If null encounter number, don't file record
"RTN","ECXNUT",84,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,DATE,ECXSPC,ECXOBS,ECHEAD,,)
"RTN","ECXNUT",85,0)
 D:ECXENC'="" FILE
"RTN","ECXNUT",86,0)
 Q
"RTN","ECXNUT",87,0)
 ;
"RTN","ECXNUT",88,0)
PAT(ECXDFN) ;get/set patient data
"RTN","ECXNUT",89,0)
 ; INPUT - ECXDFN = patient ien (DFN)
"RTN","ECXNUT",90,0)
 ; OUTPUT - ECPAT array:
"RTN","ECXNUT",91,0)
 ;          ECPAT("SSN")
"RTN","ECXNUT",92,0)
 ;          ECPAT("NAME")
"RTN","ECXNUT",93,0)
 ; returns 0 or 1 in ECXERR - 0=successful
"RTN","ECXNUT",94,0)
 ;                            1=error condition
"RTN","ECXNUT",95,0)
 N X,OK
"RTN","ECXNUT",96,0)
 ;get data
"RTN","ECXNUT",97,0)
 S ECXERR=0
"RTN","ECXNUT",98,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,"","1;2;3;5",.ECPAT)
"RTN","ECXNUT",99,0)
 I 'OK S ECXERR=1
"RTN","ECXNUT",100,0)
 Q ECXERR
"RTN","ECXNUT",101,0)
 ;
"RTN","ECXNUT",102,0)
FILE ;file the n&fs extract record
"RTN","ECXNUT",103,0)
 ;node
"RTN","ECXNUT",104,0)
 ;facility^dfn^ssn^name^in/out^day^time^treating specialty^
"RTN","ECXNUT",105,0)
 ;ordering provider^ordering provider person class^primary 
"RTN","ECXNUT",106,0)
 ;care provider^primary person class^primary care team^mpi^dob^sex^
"RTN","ECXNUT",107,0)
 ;race 1^ethnicity^veteran^enrollment status^enrollment location^
"RTN","ECXNUT",108,0)
 ;enrollment category^enrollment priority^eligibility^period of
"RTN","ECXNUT",109,0)
 ;service^agent orange status^agent orange location^radiation status
"RTN","ECXNUT",110,0)
 ;^environmental contaminants^mst status^head & neck cancer indicator
"RTN","ECXNUT",111,0)
 ;pow status^pow location^purple heart indicator^means test^state code
"RTN","ECXNUT",112,0)
 ;^county code^zip+4^observation patient indicator^rrtp,prrtp and
"RTN","ECXNUT",113,0)
 ;saartp indicator^encounter number^patient division^food production
"RTN","ECXNUT",114,0)
 ;division^delivery division^product feeder key^food production
"RTN","ECXNUT",115,0)
 ;facility^delivery location type^delivery feeder location^quantity^
"RTN","ECXNUT",116,0)
 ;cboc^status^user enrollee^patient type^cv status eligibility^
"RTN","ECXNUT",117,0)
 ;national patient record flag^emergency response indicator^admission
"RTN","ECXNUT",118,0)
 ;date^oef/oif ECXOEF^oef/oif return date ECXOEFDT^ordering provider
"RTN","ECXNUT",119,0)
 ;npi ECORNPI^primary care provider npi ECPTNPI
"RTN","ECXNUT",120,0)
 ;
"RTN","ECXNUT",121,0)
 N DA,DIK,ECODE,ECODE1
"RTN","ECXNUT",122,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXNUT",123,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXNUT",124,0)
 ;
"RTN","ECXNUT",125,0)
 ;convert specialty to PTF Code
"RTN","ECXNUT",126,0)
 ;
"RTN","ECXNUT",127,0)
 N ECXDATA
"RTN","ECXNUT",128,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPC,.ECXDATA)
"RTN","ECXNUT",129,0)
 S ECXSPC=$G(ECXDATA(7))
"RTN","ECXNUT",130,0)
 ;
"RTN","ECXNUT",131,0)
 S ECODE=ECODE_ECXDATE_U_ECXTM_U_ECXSPC_U_ECXORDPH_U_ECXORDPC_U
"RTN","ECXNUT",132,0)
 S ECODE=ECODE_ECPTPR_U_ECCLASS_U_ECPTTM_U_ECXMPI_U_ECXDOB_U_ECXSEX_U
"RTN","ECXNUT",133,0)
 S ECODE=ECODE_ECXRC1_U_ECXETH_U_ECXVET_U_ECXSTAT_U_ECXENRL_U_ECXCAT_U
"RTN","ECXNUT",134,0)
 S ECODE=ECODE_ECXPRIOR_U_ECXELIG_U_ECXPOS_U_ECXAST_U_ECXAOL_U_ECXRST
"RTN","ECXNUT",135,0)
 S ECODE=ECODE_U_ECXEST_U_ECXMST_U_ECXHNCI_U_ECXPST_U_ECXPLOC_U_ECXPHI
"RTN","ECXNUT",136,0)
 S ECODE=ECODE_U_ECXMNS_U_ECXSTATE_U_ECXCNTY_U
"RTN","ECXNUT",137,0)
 S ECODE1=ECXZIP_U_ECXOBS_U_ECXDOM_U_ECXENC_U_ECXPDIV_U_ECXFPD_U
"RTN","ECXNUT",138,0)
 S ECODE1=ECODE1_ECXFDD_U_ECXKEY_U_ECXFPF_U_ECXDLT_U_ECXDFL_U_ECXQTY_U
"RTN","ECXNUT",139,0)
 S ECODE1=ECODE1_ECXCBOC_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXNPRFI_U
"RTN","ECXNUT",140,0)
 S ECODE1=ECODE1_ECXERI_U_$S(ECXADMDT:$$ECXDATE^ECXUTL(ECXADMDT,ECXYM),1:"")
"RTN","ECXNUT",141,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECXOEF_U_ECXOEFDT_U_$G(ECXTFU)_U_ECORNPI_U_ECPTNPI
"RTN","ECXNUT",142,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXNUT",143,0)
 S ECRN=ECRN+1
"RTN","ECXNUT",144,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXNUT",145,0)
 Q
"RTN","ECXNUT",146,0)
 ;
"RTN","ECXNUT",147,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXNUT",148,0)
 S ECHEAD="NUT"
"RTN","ECXNUT",149,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXNUT",150,0)
 Q
"RTN","ECXNUT1")
0^16^B65556381^B17707422
"RTN","ECXNUT1",1,0)
ECXNUT1 ;ALB/JRC Nutrition DSS Extract ; 11/23/07 12:27pm
"RTN","ECXNUT1",2,0)
 ;;3.0;DSS EXTRACTS;**92,107,105**;Dec 22, 1997;Build 70
"RTN","ECXNUT1",3,0)
 Q
"RTN","ECXNUT1",4,0)
GETMEALS ;get patient meals 
"RTN","ECXNUT1",5,0)
 ; variable names:   ordate - regular diet order date
"RTN","ECXNUT1",6,0)
 ;                   sdate  - diet order npo/withhold date
"RTN","ECXNUT1",7,0)
 ;                   norder - "sf" or "so" order date
"RTN","ECXNUT1",8,0)
 ;                             note: there is a relationship
"RTN","ECXNUT1",9,0)
 ;                             between "sf", "so" and regular diets
"RTN","ECXNUT1",10,0)
 ;                   adate - admission date
"RTN","ECXNUT1",11,0)
 ;                   ddate - discharge date
"RTN","ECXNUT1",12,0)
 N I,J,P,D,ECXADM,FHDFN,ORDATE,DATES,NODE,SF,PRODUCT,ECXQTY,ORDER,ECXORDPH,ECXKEY,ECXFPD,ECXFDD,ECXFPF,ECXDLT,ECXDFL,MEAL,MEALS,SORDATE,NUMBER,TF,TFNODE,ECXTFU,SDATE
"RTN","ECXNUT1",13,0)
 ;set ecsd to first day of the month before setting meals array
"RTN","ECXNUT1",14,0)
 S ECSD=ECSD+.1,ECXTFU=""
"RTN","ECXNUT1",15,0)
 ;setup individual meals array for inpatients
"RTN","ECXNUT1",16,0)
 F I=ECSD:1:ECED F J=I+.0800,I+.1300,I+.1800 S MEALS(J)=J
"RTN","ECXNUT1",17,0)
 ;get "inp", "sf", and "so" inpatient meals
"RTN","ECXNUT1",18,0)
 S ECXADM=0 F  S ECXADM=$O(@ARRAY@(ECXADM)) Q:'ECXADM  D
"RTN","ECXNUT1",19,0)
 .S FHDFN=0 F  S FHDFN=$O(@ARRAY@(ECXADM,FHDFN)) Q:'FHDFN  D
"RTN","ECXNUT1",20,0)
 ..S ORDATE=0,(ADATE,DDATE,SDATE)=""
"RTN","ECXNUT1",21,0)
 ..F  S ORDATE=$O(@ARRAY@(ECXADM,FHDFN,ORDATE)) Q:'ORDATE  D
"RTN","ECXNUT1",22,0)
 ...Q:$P($G(^TMP($J,"FH",ECXADM,FHDFN,+ORDATE,"INP")),U,7)'=""
"RTN","ECXNUT1",23,0)
 ...S DATES=$$GETDATES(),SDATE=ORDATE
"RTN","ECXNUT1",24,0)
 ...;create regular diet individual meals
"RTN","ECXNUT1",25,0)
 ...S P="INP",D="PD"
"RTN","ECXNUT1",26,0)
 ...;get new order date and time if exist
"RTN","ECXNUT1",27,0)
 ...S NORDER=$$NEWORDER(D,ORDATE)
"RTN","ECXNUT1",28,0)
 ...S NODE=$G(^TMP($J,"FH",ECXADM,FHDFN,ORDATE,"INP")) Q:'NODE
"RTN","ECXNUT1",29,0)
 ...S PRODUCT=$P(NODE,U,13),ECXQTY=1,ORDER=""_$P(NODE,U,14)_","_""
"RTN","ECXNUT1",30,0)
 ...;Resolve feeder key for nutrition product
"RTN","ECXNUT1",31,0)
 ...S ECXKEY=$$NUTKEY^ECXUTL6(D,PRODUCT)
"RTN","ECXNUT1",32,0)
 ...I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",33,0)
 ...S MEAL=ORDATE F  S MEAL=$O(MEALS(MEAL)) Q:'MEAL  D
"RTN","ECXNUT1",34,0)
 ....I $P(DATES,U) Q:MEAL>$P(DATES,U)
"RTN","ECXNUT1",35,0)
 ....I NORDER]"" Q:MEAL>NORDER
"RTN","ECXNUT1",36,0)
 ....I $P(DATES,U,3) Q:MEAL>$P(DATES,U,3)
"RTN","ECXNUT1",37,0)
 ....S ECXORDPH=$$GET1^DIQ(100,+ORDER,1,"I")
"RTN","ECXNUT1",38,0)
 ....;Get additional data and file record.
"RTN","ECXNUT1",39,0)
 ....S DATE=MEAL D GET^ECXNUT
"RTN","ECXNUT1",40,0)
 ;create supplemental feeding meals if they exist
"RTN","ECXNUT1",41,0)
 S ECXADM=0 F  S ECXADM=$O(@ARRAY@(ECXADM)) Q:'ECXADM  D
"RTN","ECXNUT1",42,0)
 .S FHDFN=0 F  S FHDFN=$O(@ARRAY@(ECXADM,FHDFN)) Q:'FHDFN  D
"RTN","ECXNUT1",43,0)
 ..S ORDATE=0,(ADATE,DDATE,SDATE)=""
"RTN","ECXNUT1",44,0)
 ..F  S ORDATE=$O(@ARRAY@(ECXADM,FHDFN,ORDATE)) Q:'ORDATE  D
"RTN","ECXNUT1",45,0)
 ...S DATES=$$GETDATES()
"RTN","ECXNUT1",46,0)
 ...;get "sf" orders if they exist
"RTN","ECXNUT1",47,0)
 ...N SFNODE S (SFNODE,ECXORDPH,CDATE)=""
"RTN","ECXNUT1",48,0)
 ...S SFNODE=$G(@ARRAY@(ECXADM,FHDFN,ORDATE,"SF"))
"RTN","ECXNUT1",49,0)
 ...I +SFNODE D
"RTN","ECXNUT1",50,0)
 ....S P="INP",D="SF"
"RTN","ECXNUT1",51,0)
 ....;get new order date and time if exist
"RTN","ECXNUT1",52,0)
 ....S NORDER=$$NEWORDER(D,ORDATE),CDATE=$P(SFNODE,U,32)
"RTN","ECXNUT1",53,0)
 ....;order thru all "sf" product fields and generate records
"RTN","ECXNUT1",54,0)
 ....F SF=5:2:27 S PRODUCT=$P(SFNODE,U,SF) S ECXQTY=$P(SFNODE,U,(SF+1)) D
"RTN","ECXNUT1",55,0)
 .....Q:PRODUCT']""
"RTN","ECXNUT1",56,0)
 .....;Resolve external value for product key
"RTN","ECXNUT1",57,0)
 .....S ECXKEY=$$NUTKEY^ECXUTL6("SF",PRODUCT)
"RTN","ECXNUT1",58,0)
 .....I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",59,0)
 .....;create individual meals
"RTN","ECXNUT1",60,0)
 .....F MEAL=ECSD:1:ECED D
"RTN","ECXNUT1",61,0)
 ......I CDATE]"" Q:MEAL>CDATE
"RTN","ECXNUT1",62,0)
 ......I NORDER]"" Q:MEAL>NORDER
"RTN","ECXNUT1",63,0)
 ......I $P(DATES,U,3)]"" Q:MEAL>$P(DATES,U,3)
"RTN","ECXNUT1",64,0)
 ......;Get additional data and file record.
"RTN","ECXNUT1",65,0)
 ......S DATE=$P(MEAL,".")_"."_$S("57911"[SF:10,"13151719"[SF:14,1:18)
"RTN","ECXNUT1",66,0)
 ......D GET^ECXNUT
"RTN","ECXNUT1",67,0)
 ;create standing order meals if they exist
"RTN","ECXNUT1",68,0)
 S ECXADM=0 F  S ECXADM=$O(@ARRAY@(ECXADM)) Q:'ECXADM  D
"RTN","ECXNUT1",69,0)
 .S FHDFN=0 F  S FHDFN=$O(@ARRAY@(ECXADM,FHDFN)) Q:'FHDFN  D
"RTN","ECXNUT1",70,0)
 ..S ORDATE=0,(ADATE,DDATE,SDATE)=""
"RTN","ECXNUT1",71,0)
 ..F  S ORDATE=$O(@ARRAY@(ECXADM,FHDFN,ORDATE)) Q:'ORDATE  D
"RTN","ECXNUT1",72,0)
 ...S DATES=$$GETDATES()
"RTN","ECXNUT1",73,0)
 ...N SONODE,NUM S (SONODE,ECXORDPH)="",NUM=0
"RTN","ECXNUT1",74,0)
 ...S NUM=$O(@ARRAY@(ECXADM,FHDFN,ORDATE,"SO",NUM)) Q:'NUM  D
"RTN","ECXNUT1",75,0)
 ....S SONODE=$G(@ARRAY@(ECXADM,FHDFN,ORDATE,"SO",NUM))
"RTN","ECXNUT1",76,0)
 ....I +SONODE D
"RTN","ECXNUT1",77,0)
 .....;create standing order meals
"RTN","ECXNUT1",78,0)
 .....N SMEAL S P="INP",D="SO"
"RTN","ECXNUT1",79,0)
 .....;get new order date and time if exist
"RTN","ECXNUT1",80,0)
 .....S NORDER=$$NEWORDER(D,ORDATE),SMEAL=$P(SONODE,U,3)
"RTN","ECXNUT1",81,0)
 .....S PRODUCT=$P(SONODE,U,2),ECXQTY=$P(SONODE,U,8)
"RTN","ECXNUT1",82,0)
 .....;Resolve feeder key for nutrition product
"RTN","ECXNUT1",83,0)
 .....S ECXKEY=$$NUTKEY^ECXUTL6(D,PRODUCT)
"RTN","ECXNUT1",84,0)
 .....I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",85,0)
 .....;create individual meals
"RTN","ECXNUT1",86,0)
 .....S MEAL=ORDATE F  S MEAL=$O(MEALS(MEAL)) Q:'MEAL  D
"RTN","ECXNUT1",87,0)
 ......N TIME S TIME=$P(MEALS(MEAL),".",2)
"RTN","ECXNUT1",88,0)
 ......Q:SMEAL'["B"&(TIME=08)
"RTN","ECXNUT1",89,0)
 ......Q:SMEAL'["N"&(TIME=13)
"RTN","ECXNUT1",90,0)
 ......Q:SMEAL'["E"&(TIME=18)
"RTN","ECXNUT1",91,0)
 ......I $P(DATES,U) Q:MEAL>$P(DATES,U)
"RTN","ECXNUT1",92,0)
 ......I NORDER]"" Q:MEAL>NORDER
"RTN","ECXNUT1",93,0)
 ......I $P(DATES,U,3) Q:MEAL>$P(DATES,U,3)
"RTN","ECXNUT1",94,0)
 ......;Get additional data and file record.
"RTN","ECXNUT1",95,0)
 ......S DATE=MEAL D GET^ECXNUT
"RTN","ECXNUT1",96,0)
 ;remove individual meals array
"RTN","ECXNUT1",97,0)
 K MEALS
"RTN","ECXNUT1",98,0)
 ;Get inpatient tube feedings
"RTN","ECXNUT1",99,0)
 N P1,PNODE,CDATE,ECXTFU,MEALS
"RTN","ECXNUT1",100,0)
 ;set daily meals array for inpatient tube feedings
"RTN","ECXNUT1",101,0)
 F I=ECSD:1:ECED S MEALS(I)=""
"RTN","ECXNUT1",102,0)
 S (FHDFN,DATE,P1,CDATE)=0,(ECXADM,NODE,ECXORDPH,PNODE)=""
"RTN","ECXNUT1",103,0)
 S P="INP",D="TF" F  S ECXADM=$O(^TMP($J,"FH",ECXADM)) Q:'ECXADM  D
"RTN","ECXNUT1",104,0)
 .F  S FHDFN=$O(^TMP($J,"FH",ECXADM,FHDFN))  Q:'FHDFN  D
"RTN","ECXNUT1",105,0)
 ..F  S DATE=$O(^TMP($J,"FH",ECXADM,FHDFN,DATE)) Q:'DATE  D
"RTN","ECXNUT1",106,0)
 ...S NODE=$G(^TMP($J,"FH",ECXADM,FHDFN,DATE,"TF")) Q:'NODE  D
"RTN","ECXNUT1",107,0)
 ....F  S P1=$O(^TMP($J,"FH",ECXADM,FHDFN,DATE,"TF",P1)) Q:'P1  D
"RTN","ECXNUT1",108,0)
 .....S PNODE=^TMP($J,"FH",ECXADM,FHDFN,DATE,"TF",P1,"P")
"RTN","ECXNUT1",109,0)
 .....S ORDATE=DATE,DATES=$$GETDATES(),CDATE=$P(NODE,U,11)
"RTN","ECXNUT1",110,0)
 .....S PRODUCT=$P(PNODE,U,1),ORDER=""_$P(NODE,U,14)_","_""
"RTN","ECXNUT1",111,0)
 .....S ECXQTY=$S($P(PNODE,U,3)["GM":$P(PNODE,U,3),1:$P(PNODE,U,4))
"RTN","ECXNUT1",112,0)
 .....S ECXTFU=$S($P(PNODE,U,3)["GM":"GM",1:"ML")
"RTN","ECXNUT1",113,0)
 .....;Resolve external value for product key
"RTN","ECXNUT1",114,0)
 .....S ECXKEY=$$NUTKEY^ECXUTL6(D,PRODUCT)
"RTN","ECXNUT1",115,0)
 .....I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",116,0)
 .....;create daily meals
"RTN","ECXNUT1",117,0)
 .....S MEAL=DATE F  S MEAL=$O(MEALS(MEAL)) Q:'MEAL  D
"RTN","ECXNUT1",118,0)
 ......I $P(DATES,U) Q:MEAL>$P(DATES,U)
"RTN","ECXNUT1",119,0)
 ......I CDATE]"" Q:MEAL>CDATE
"RTN","ECXNUT1",120,0)
 ......I $P(DATES,U,3) Q:MEAL>$P(DATES,U,3)
"RTN","ECXNUT1",121,0)
 ......S ECXORDPH=$$GET1^DIQ(100,ORDER,1,"I")
"RTN","ECXNUT1",122,0)
 ......;Get additional data and file record.
"RTN","ECXNUT1",123,0)
 ......S DATE=MEAL D GET^ECXNUT S DATE=ORDATE
"RTN","ECXNUT1",124,0)
 ;Get outpatient recurring meals
"RTN","ECXNUT1",125,0)
 S DATE=0,(ECXADM,NODE,ECXORDPH,ECXTFU)=""
"RTN","ECXNUT1",126,0)
 S P="OP",D="RM" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",127,0)
 . S FHDFN=0 F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN))  Q:'FHDFN  D
"RTN","ECXNUT1",128,0)
 .. S NUMBER=0 F  S NUMBER=$O(^TMP($J,"FH",DATE,FHDFN,NUMBER)) Q:'NUMBER  D
"RTN","ECXNUT1",129,0)
 ... S NODE=$G(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM")) Q:'NODE
"RTN","ECXNUT1",130,0)
 ... S PRODUCT=$P(NODE,U,2),ECXQTY=1,ORDER=""_$P(NODE,U,12)_","_""
"RTN","ECXNUT1",131,0)
 ... S PRODUCT=$$GET1^DIQ(111,PRODUCT,4,"I")
"RTN","ECXNUT1",132,0)
 ... S ECXORDPH=$$GET1^DIQ(100,ORDER,1,"I")
"RTN","ECXNUT1",133,0)
 ... ;Resolve external value for product key
"RTN","ECXNUT1",134,0)
 ... S ECXKEY=$$NUTKEY^ECXUTL6("PD",PRODUCT)
"RTN","ECXNUT1",135,0)
 ... I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",136,0)
 ... ;Get additional data and file record.
"RTN","ECXNUT1",137,0)
 ... D GET^ECXNUT
"RTN","ECXNUT1",138,0)
 ;Get outpatient tube feedings
"RTN","ECXNUT1",139,0)
 S DATE=0,(ECXADM,NODE,ECXORDPH)=""
"RTN","ECXNUT1",140,0)
 S P="OP",D="TF" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",141,0)
 . S FHDFN=0 F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN))  Q:'FHDFN  D
"RTN","ECXNUT1",142,0)
 .. S NUMBER=0 F  S NUMBER=$O(^TMP($J,"FH",DATE,FHDFN,NUMBER)) Q:'NUMBER  D
"RTN","ECXNUT1",143,0)
 ... S NODE=$G(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMTF")) Q:NODE=""
"RTN","ECXNUT1",144,0)
 ... S TF=0 F  S TF=$O(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMTF",TF)) Q:'TF  D
"RTN","ECXNUT1",145,0)
 .... S TFNODE=^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMTF",TF)
"RTN","ECXNUT1",146,0)
 .... S PRODUCT=$P(TFNODE,U,1),ECXQTY=$P(TFNODE,U,4)
"RTN","ECXNUT1",147,0)
 .... ;Resolve external value for product key
"RTN","ECXNUT1",148,0)
 .... S ECXKEY=$$NUTKEY^ECXUTL6("TF",PRODUCT)
"RTN","ECXNUT1",149,0)
 .... I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",150,0)
 .... ;Get additional data and file record.
"RTN","ECXNUT1",151,0)
 .... D GET^ECXNUT
"RTN","ECXNUT1",152,0)
 ;Get outpatient special meals
"RTN","ECXNUT1",153,0)
 S (FHDFN,DATE)=0,(ECXADM,NODE,ECXORDPH)=""
"RTN","ECXNUT1",154,0)
 S P="OP",D="SM" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",155,0)
 . F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN)) Q:'FHDFN  D
"RTN","ECXNUT1",156,0)
 .. S NODE=$G(^TMP($J,"FH",DATE,FHDFN,"SM")) Q:'NODE
"RTN","ECXNUT1",157,0)
 .. S PRODUCT=$P(NODE,U,4),ECXQTY=1,ECXORDPH=$P(NODE,U,5)
"RTN","ECXNUT1",158,0)
 .. S PRODUCT=$$GET1^DIQ(111,PRODUCT,4,"I")
"RTN","ECXNUT1",159,0)
 .. ;Resolve external value for product key
"RTN","ECXNUT1",160,0)
 .. S ECXKEY=$$NUTKEY^ECXUTL6("SM",PRODUCT)
"RTN","ECXNUT1",161,0)
 .. I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",162,0)
 .. ;Get additional data and file record.
"RTN","ECXNUT1",163,0)
 .. D GET^ECXNUT
"RTN","ECXNUT1",164,0)
 ;Get outpatient guest meals
"RTN","ECXNUT1",165,0)
 S (FHDFN,DATE)=0,(ECXADM,NODE,ECXORDPH)=""
"RTN","ECXNUT1",166,0)
 S P="OP",D="GM" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",167,0)
 . F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN)) Q:'FHDFN  D
"RTN","ECXNUT1",168,0)
 .. S NODE=$G(^TMP($J,"FH",DATE,FHDFN,"GM")) Q:'NODE
"RTN","ECXNUT1",169,0)
 .. S PRODUCT=$P(NODE,U,13),ECXQTY=1
"RTN","ECXNUT1",170,0)
 .. ;Resolve external value for product key
"RTN","ECXNUT1",171,0)
 .. S ECXKEY=$$NUTKEY^ECXUTL6("GM",PRODUCT)
"RTN","ECXNUT1",172,0)
 .. I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",173,0)
 .. ;Get additional data and file record.
"RTN","ECXNUT1",174,0)
 .. D GET^ECXNUT
"RTN","ECXNUT1",175,0)
 Q
"RTN","ECXNUT1",176,0)
GETDATES() ;Get admit, discharge, npo/withhold dates,for "inp", "sf" and "so"
"RTN","ECXNUT1",177,0)
 ;  return in string i.e.  stop date^admission date^discharge date
"RTN","ECXNUT1",178,0)
 ;     input:    ecxadm  -  movement file ien
"RTN","ECXNUT1",179,0)
 ;               fhdfn   - nutrition patient file (#115)
"RTN","ECXNUT1",180,0)
 ;
"RTN","ECXNUT1",181,0)
 ;     output:   stop date  - npo/withhold date
"RTN","ECXNUT1",182,0)
 ;               admit date - admission date and time
"RTN","ECXNUT1",183,0)
 ;               discharge date - discharge date and time
"RTN","ECXNUT1",184,0)
 ;init variables
"RTN","ECXNUT1",185,0)
 N ADATE,DDATE,DATE,STDATE,NORDATE,IENS
"RTN","ECXNUT1",186,0)
 ;check input
"RTN","ECXNUT1",187,0)
 Q:'$G(ECXADM)!'$G(FHDFN) "0^0^0"
"RTN","ECXNUT1",188,0)
 ;get admission and discharge dates
"RTN","ECXNUT1",189,0)
 S (ADATE,DDATE,DATE,SDATE,NORDATE,STDATE)="",IENS=""_ECXADM_","_FHDFN_","_"",ADATE=$$GET1^DIQ(115.01,IENS,.01,"I"),DDATE=$$GET1^DIQ(115.01,IENS,18,"I")
"RTN","ECXNUT1",190,0)
 ;get "inp" order's npo/withhold date return it as 'stdate' if exist
"RTN","ECXNUT1",191,0)
 S DATE=ORDATE F  S DATE=$O(@ARRAY@(ECXADM,FHDFN,DATE)) Q:'DATE  D
"RTN","ECXNUT1",192,0)
 .I $P($G(@ARRAY@(ECXADM,FHDFN,+DATE,"INP")),U,7)'="" S STDATE=DATE
"RTN","ECXNUT1",193,0)
 Q STDATE_U_ADATE_U_DDATE
"RTN","ECXNUT1",194,0)
NEWORDER(TYPE,DATE) ;Look for new order for inpatient meal type if exist
"RTN","ECXNUT1",195,0)
 ;    Input     ecxadm -  movement #
"RTN","ECXNUT1",196,0)
 ;              fhdfn  -  nutrition file (#115) fhdfn
"RTN","ECXNUT1",197,0)
 ;              date   -  starting order date to begin lookup
"RTN","ECXNUT1",198,0)
 ;              type   -  meal type "sf", "so", or "pd"
"RTN","ECXNUT1",199,0)
 ;    Output:   new order date and time for specific meal type
"RTN","ECXNUT1",200,0)
 ;init variables
"RTN","ECXNUT1",201,0)
 N NORDER
"RTN","ECXNUT1",202,0)
 S NORDER=""
"RTN","ECXNUT1",203,0)
 ;check input
"RTN","ECXNUT1",204,0)
 Q:$G(TYPE)']""!'$G(DATE) NORDER
"RTN","ECXNUT1",205,0)
 F  S DATE=$O(@ARRAY@(ECXADM,FHDFN,DATE)) Q:'DATE  Q:NORDER  D
"RTN","ECXNUT1",206,0)
 .S NODE=$G(^TMP($J,"FH",ECXADM,FHDFN,DATE,TYPE)) Q:'NODE
"RTN","ECXNUT1",207,0)
 .S NORDER=DATE
"RTN","ECXNUT1",208,0)
 Q NORDER
"RTN","ECXOPRX")
0^6^B50701153^B47824586
"RTN","ECXOPRX",1,0)
ECXOPRX ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ; 11/5/07 8:17am
"RTN","ECXOPRX",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,30,33,38,39,46,49,71,81,84,92,105**;Dec 22, 1997;Build 70
"RTN","ECXOPRX",3,0)
 ;
"RTN","ECXOPRX",4,0)
BEG ;entry point from option
"RTN","ECXOPRX",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXOPRX",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXOPRX",7,0)
 Q
"RTN","ECXOPRX",8,0)
 ;
"RTN","ECXOPRX",9,0)
START ;entry when queued
"RTN","ECXOPRX",10,0)
 N X,DA,DIC,DIQ,DR,ECXNPRFI,ECRXPTST,ECNONVAP,ECRXNUM,ECXSCRX
"RTN","ECXOPRX",11,0)
 S QFLG=0
"RTN","ECXOPRX",12,0)
 I '$D(ECINST) D
"RTN","ECXOPRX",13,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXOPRX",14,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXOPRX",15,0)
 ;before V6
"RTN","ECXOPRX",16,0)
 S ECPROF=6,ECD=$O(^PSRX("AL",0)) I ECD,ECD<ECSD1 G V6
"RTN","ECXOPRX",17,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",18,0)
 F  S ECD=$O(^PSRX("AD",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AD",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AD",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",19,0)
 Q
"RTN","ECXOPRX",20,0)
 ;
"RTN","ECXOPRX",21,0)
V6 ;version 6 or better
"RTN","ECXOPRX",22,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",23,0)
 S ECPROF=2,ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",24,0)
 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",25,0)
 Q:QFLG
"RTN","ECXOPRX",26,0)
 S ECREF="P",ECD=ECSD1
"RTN","ECXOPRX",27,0)
 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",28,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",29,0)
 Q
"RTN","ECXOPRX",30,0)
 ;
"RTN","ECXOPRX",31,0)
STUFF ;get data
"RTN","ECXOPRX",32,0)
 N ECXPHA
"RTN","ECXOPRX",33,0)
 S ECDATA=$G(^PSRX(ECRX,0)),ECXPHA=""
"RTN","ECXOPRX",34,0)
 I ECRFL S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0)) I ECDATA1="" Q
"RTN","ECXOPRX",35,0)
 ;ecref set to 1 in extract+5 and v6+1 and to "P" in v6+2
"RTN","ECXOPRX",36,0)
 ;refill nodes and partial nodes are identical in layout.  Fills
"RTN","ECXOPRX",37,0)
 ;(ie ecrfl=0)& refills (ie ecrfl>0) from "AL" xref, partials from "AM"
"RTN","ECXOPRX",38,0)
 S (ECXDSSD,ECXPROVN,ECXCVE,ECXCVEDT,ECXCVENC,ECRXPTST,ECRXNUM)="",ECXERR=0,ECXDATE=ECD,ECXDFN=$P(ECDATA,U,2),ECDRG=+$P(ECDATA,U,6)
"RTN","ECXOPRX",39,0)
 ;- Get rx patient status & rx number
"RTN","ECXOPRX",40,0)
 S ECRXPTST=$$RXPTST^ECXUTL5($P(ECDATA,U,3)),ECRXNUM=$P(ECDATA,U,1)
"RTN","ECXOPRX",41,0)
 ;- Get provider (either 2_provider or 6_provider depending on version)
"RTN","ECXOPRX",42,0)
 S ECXPROV=$S($P(ECDATA,U,4)'="":ECPROF_$P(ECDATA,U,4),1:""),ECXPROVP=$$PRVCLASS^ECXUTL($P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",43,0)
 S ECPRVNPI=$$NPI^XUSNPI("Individual_ID",$P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",44,0)
 S:+ECPRVNPI'>0 ECPRVNPI="" S ECPRVNPI=$P(ECPRVNPI,U)
"RTN","ECXOPRX",45,0)
 ;get classification data
"RTN","ECXOPRX",46,0)
 S ECXCLS=$G(^PSRX(ECRX,"IBQ")),ECXMIL=$P(ECXCLS,U,2),ECXAO=$P(ECXCLS,U,3),ECXIR=$P(ECXCLS,U,4),ECXECE=$P(ECXCLS,U,5),ECXHNC=$P(ECXCLS,U,6)
"RTN","ECXOPRX",47,0)
 F X="ECXMIL","ECXAO","ECXIR","ECXECE","ECXHNC" S @X=$S(@X:"Y",@X=0:"N",1:"")
"RTN","ECXOPRX",48,0)
 ;- Check non-va provider flag and set to 'Y' if exist
"RTN","ECXOPRX",49,0)
 S ECNONVAP=$$NONVAP^ECXUTL5($E(ECXPROV,2,99))
"RTN","ECXOPRX",50,0)
 ;get patient specific data
"RTN","ECXOPRX",51,0)
 D PAT(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXOPRX",52,0)
 I 'ECRFL D
"RTN","ECXOPRX",53,0)
 .S ECMW=$P(ECDATA,U,11),ECQTY=+$P(ECDATA,U,7),ECXDIV=$S($D(^PSRX(ECRX,2)):$P(^(2),U,9),1:1)
"RTN","ECXOPRX",54,0)
 .S ECPRC=+$P(ECDATA,U,17),ECOPAY=$P($G(^PSRX(ECRX,"IB")),U,2)]""
"RTN","ECXOPRX",55,0)
 I ECRFL D
"RTN","ECXOPRX",56,0)
 .S ECMW=$P(ECDATA1,U,2),ECQTY=+$P(ECDATA1,U,4),ECXDIV=$S(+$P(ECDATA1,U,9):$P(ECDATA1,U,9),1:1)
"RTN","ECXOPRX",57,0)
 .S ECPRC=+$P(ECDATA1,U,11),ECOPAY=$P($G(^PSRX(ECRX,1,ECRFL,"IB")),U)]""
"RTN","ECXOPRX",58,0)
 S ECXCOST=$J((ECQTY*ECPRC),1,2),ECDS=$S(ECRFL:$P(ECDATA1,U,10),1:$P(ECDATA,U,8))
"RTN","ECXOPRX",59,0)
 ;call pharmacy drug file (#50) api
"RTN","ECXOPRX",60,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG),ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)["I",ECINV=$S(ECINV:"I",1:""),ECUI=$P(ECXPHA,U,8),ECNDC=$P(ECXPHA,U,3)
"RTN","ECXOPRX",61,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0),P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXOPRX",62,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXOPRX",63,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXOPRX",64,0)
 I ECMW="M" S ECMW=1 I $D(^PSRX("AR",ECD,ECRX)) S ECMW=2
"RTN","ECXOPRX",65,0)
 I ECMW="W" S ECMW=""
"RTN","ECXOPRX",66,0)
 S ECXNEW="" I ECRFL=0 S ECXNEW=1
"RTN","ECXOPRX",67,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS) ;Observation pat indic (YES/NO)
"RTN","ECXOPRX",68,0)
 S ECXORDPH="" ;Ordering physician (null for FY2002)
"RTN","ECXOPRX",69,0)
 ;- Ordering stop code & Ordering date
"RTN","ECXOPRX",70,0)
 S ECXORDST=$P($G(^ECX(728.44,+$P(ECDATA,U,5),0)),U,2),ECXORDDT=$$ECXDATE^ECXUTL(+$P(ECDATA,U,13),ECXYM)
"RTN","ECXOPRX",71,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN) ;CNH status (YES/NO)
"RTN","ECXOPRX",72,0)
 ;- DSS Dept and National Prod Division
"RTN","ECXOPRX",73,0)
 ;S ECXDSSD=$$PRE^ECXDEPT(ECXDIV,ECMW,ECINST) dss department postponed
"RTN","ECXOPRX",74,0)
 N ECXPDIV S ECXPDIV=$$PREDIV^ECXDEPT(ECXDIV)
"RTN","ECXOPRX",75,0)
 ;- Set national patient record flag if exist
"RTN","ECXOPRX",76,0)
 D NPRF^ECXUTL5
"RTN","ECXOPRX",77,0)
 S ECXSCRX=$$SCRX^ECXUTL5(ECRX) ;Service connected rx
"RTN","ECXOPRX",78,0)
 ;- If no encounter number don't file record
"RTN","ECXOPRX",79,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXOPRX",80,0)
 I ECXLOGIC>2003 D
"RTN","ECXOPRX",81,0)
 .I (ECMW=2)!((ECMW=1)&(ECXLOGIC>2006)),ECXSSN'="" D
"RTN","ECXOPRX",82,0)
 ..N TMP S TMP=$$JULDT^ECXUTL4(ECD),ECXENC=$E(ECXSSN,1,9)_TMP_"160",ECXA="O"
"RTN","ECXOPRX",83,0)
 I ECXENC'="" D FILE^ECXOPRX1
"RTN","ECXOPRX",84,0)
 Q
"RTN","ECXOPRX",85,0)
 ;
"RTN","ECXOPRX",86,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;Determine in/outpatient status, movement number, primary care team and provider
"RTN","ECXOPRX",87,0)
 N OK,X,PT
"RTN","ECXOPRX",88,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXOPRX",89,0)
 ;get patient data if saved
"RTN","ECXOPRX",90,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXOPRX",91,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXSSN=$P(PT,U),ECXPNM=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXSEX=$P(PT,U,4),ECXDOB=$P(PT,U,5)
"RTN","ECXOPRX",92,0)
 .S ECXELIG=$P(PT,U,6),ECXVET=$P(PT,U,7),ECXRACE=$P(PT,U,8),ECXPST=$P(PT,U,9),ECXPLOC=$P(PT,U,10),ECXRST=$P(PT,U,11)
"RTN","ECXOPRX",93,0)
 .S ECXAST=$P(PT,U,12),ECXMST=$P(PT,U,13),ECXSTATE=$P(PT,U,14),ECXCNTY=$P(PT,U,15),ECXZIP=$P(PT,U,16),ECXENRL=$P(PT,U,17)
"RTN","ECXOPRX",94,0)
 .S ECXPHI=$P(PT,U,20),ECXCAT=$P(PT,U,21),ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23)
"RTN","ECXOPRX",95,0)
 .S ECXCNHU=$P(PT,U,24),ECXPOS=$P(PT,U,25),ECXAOL=$P(PT,U,26),ECXHNCI=$P(PT,U,27),ECXETH=$P(PT,U,28),ECXRC1=$P(PT,U,29),ECXMTST=$P(PT,U,30)
"RTN","ECXOPRX",96,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4)
"RTN","ECXOPRX",97,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",98,0)
 ;set patient data
"RTN","ECXOPRX",99,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXOPRX",100,0)
 .K ECXPAT
"RTN","ECXOPRX",101,0)
 .S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD1,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXOPRX",102,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXOPRX",103,0)
 .S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI"),ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXOPRX",104,0)
 .S ECXVET=ECXPAT("VET"),ECXRACE=ECXPAT("RACE"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXOPRX",105,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXOPRX",106,0)
 .S ECXERI=ECXPAT("ERI"),ECXEST=ECXPAT("EC STAT")
"RTN","ECXOPRX",107,0)
 .;- CNH Stat (placeholder),Purp Heart Ind,Per of Svce,AO Loc,MT Stat
"RTN","ECXOPRX",108,0)
 .S ECXCNHU="",ECXPHI=ECXPAT("PHI"),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXOPRX",109,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",110,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXOPRX",111,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1") ;Race and Ethnicity
"RTN","ECXOPRX",112,0)
 .; OEF/OIF data
"RTN","ECXOPRX",113,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXOPRX",114,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXOPRX",115,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXSSN_U_ECXPNM_U_ECXMPI_U_ECXSEX_U_ECXDOB_U_ECXELIG_U_ECXVET_U_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U_ECXMST_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXENRL_U_U
"RTN","ECXOPRX",116,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXPHI_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXCNHU_U_ECXPOS_U_ECXAOL_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXOPRX",117,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT
"RTN","ECXOPRX",118,0)
 ;get inpatient data
"RTN","ECXOPRX",119,0)
 S (ECXA,ECXADMDT,ECXDOM,ECXMN,ECXTS)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE) D
"RTN","ECXOPRX",120,0)
 .S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXOPRX",121,0)
 ;get primary care data
"RTN","ECXOPRX",122,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,".")),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXOPRX",123,0)
 Q
"RTN","ECXOPRX",124,0)
 ;
"RTN","ECXOPRX",125,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXOPRX",126,0)
 S ECHEAD="PRE"
"RTN","ECXOPRX",127,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXOPRX",128,0)
 Q
"RTN","ECXOPRX",129,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXOPRX",130,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXOPRX1")
0^28^B8259189^B7720497
"RTN","ECXOPRX1",1,0)
ECXOPRX1 ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ; 6/6/07 7:23am
"RTN","ECXOPRX1",2,0)
 ;;3.0;DSS EXTRACTS;**92,107,105**;Dec 22, 1997;Build 70
"RTN","ECXOPRX1",3,0)
 ;
"RTN","ECXOPRX1",4,0)
FILE ;file record
"RTN","ECXOPRX1",5,0)
 ;node0
"RTN","ECXOPRX1",6,0)
 ;inst^dfn^ssn^name^in/out ECXA^day^division^provider^drug category^mail^
"RTN","ECXOPRX1",7,0)
 ;placeholder1^new^placeholder2^qty^cost^placeholder3^mov #^treat spec^placeholder4^unit of issue^dob^elig^vet^copay^
"RTN","ECXOPRX1",8,0)
 ;feeder key^investigational^days supply^primary care team^primary care provider^time^race
"RTN","ECXOPRX1",9,0)
 ;node1
"RTN","ECXOPRX1",10,0)
 ;mpi^dss dept ECXDSSD^sex^zip+4^placeholder^placeholder^state^county^pc prov person class^pow status^pow location^
"RTN","ECXOPRX1",11,0)
 ;ir status^ao status^sharing agree. payor^sharing agree. ins.^mst status^enroll loc^assoc pc provider^assoc pc prov person class^
"RTN","ECXOPRX1",12,0)
 ;placeholder^dom ECXDOM^purple heart ECXPHI^enrollment category ECXCAT^enrollment status ECXSTST^
"RTN","ECXOPRX1",13,0)
 ;enrollment priority ECXPRIOR^cnhu status ECXCNHU^period of service ECXPOS^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXOPRX1",14,0)
 ;ao loc ECXAOL^ord physician ECXORDPH^ord stop code ECXORDST^ord date ECXORDDT^CNH status ECXCNH^national division ECXPDIV^
"RTN","ECXOPRX1",15,0)
 ;MT Stat ECXMTST^head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race ECXRC1^^enrollment priority ECXPRIOR_
"RTN","ECXOPRX1",16,0)
 ;enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXOPRX1",17,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^rx patient status ECRXPTST^non-va prescriber ECNONVAP^rx # ECRXNUM
"RTN","ECXOPRX1",18,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange enc ECXAO^environ cont PGE ECXECE^head/neck ECXHNC^enc mst ECXMIL^environ contamin ECXEST^ion radiat ECXIR
"RTN","ECXOPRX1",19,0)
 ;OEF/OIF data ECXOEF^OEFOIF return date ECXOEFDT^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^provider npi ECPRVNPI
"RTN","ECXOPRX1",20,0)
 N DA,DIK
"RTN","ECXOPRX1",21,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXOPRX1",22,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXOPRX1",23,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXDIV_U
"RTN","ECXOPRX1",24,0)
 S ECODE=ECODE_ECXPROV_U_ECCAT_U_ECMW_U_ECXPROVP_U_ECXNEW_U_U_ECQTY_U
"RTN","ECXOPRX1",25,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXOPRX1",26,0)
 N ECXDATA
"RTN","ECXOPRX1",27,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXOPRX1",28,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXOPRX1",29,0)
 ;done
"RTN","ECXOPRX1",30,0)
 S ECODE=ECODE_ECXCOST_U_U_ECXMN_U_ECXTS_U_U_ECUI_U_ECXDOB_U
"RTN","ECXOPRX1",31,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECOPAY_U_ECNFC_U_ECINV_U_ECDS_U
"RTN","ECXOPRX1",32,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_$$ECXTIME^ECXUTL(ECXDATE)_U_ECXRACE_U
"RTN","ECXOPRX1",33,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U_ECXPROVN_U_U
"RTN","ECXOPRX1",34,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECCLAS_U_ECXPST_U_ECXPLOC_U
"RTN","ECXOPRX1",35,0)
 S ECODE1=ECODE1_ECXRST_U_ECXAST_U_U_U_ECXMST_U_ECXENRL_U
"RTN","ECXOPRX1",36,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXPHI_U_ECXCAT_U
"RTN","ECXOPRX1",37,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXCNHU_U_ECXPOS_U_ECXOBS_U
"RTN","ECXOPRX1",38,0)
 S ECODE1=ECODE1_ECXENC_U_ECXAOL_U_ECXORDPH_U_ECXORDST_U_ECXORDDT_U
"RTN","ECXOPRX1",39,0)
 S ECODE1=ECODE1_ECXCNH_U_ECXPDIV_U_ECXMTST_U_ECXHNCI_U_ECXETH_U
"RTN","ECXOPRX1",40,0)
 S ECODE1=ECODE1_ECXRC1_U
"RTN","ECXOPRX1",41,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U
"RTN","ECXOPRX1",42,0)
 I ECXLOGIC>2004 S ECODE2=ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECRXPTST_U_ECNONVAP
"RTN","ECXOPRX1",43,0)
 I ECXLOGIC>2005 S ECODE2=ECODE2_U_ECRXNUM
"RTN","ECXOPRX1",44,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXEST_U_ECXIR_U_ECXSCRX
"RTN","ECXOPRX1",45,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECPRVNPI
"RTN","ECXOPRX1",46,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXOPRX1",47,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXOPRX1",48,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXOPRX1",49,0)
 Q
"RTN","ECXPIVD2")
0^25^B8379900^n/a
"RTN","ECXPIVD2",1,0)
ECXPIVD2 ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ; 6/5/07 12:39pm
"RTN","ECXPIVD2",2,0)
 ;;3.0;DSS EXTRACTS;**105**;Dec 22, 1997;Build 70
"RTN","ECXPIVD2",3,0)
FILE ;file record
"RTN","ECXPIVD2",4,0)
 ;node0
"RTN","ECXPIVD2",5,0)
 ;fac^dfn^ssn^name^i/o^day^va class^qty^ward^cost^movement #^treat spec^ndc^investigational^iv dispensing fee^new feeder key^total doses^
"RTN","ECXPIVD2",6,0)
 ;primary care team^primary care provider^ivp time^adm date^adm time^dss identifier
"RTN","ECXPIVD2",7,0)
 ;node1
"RTN","ECXPIVD2",8,0)
 ;mpi^dss dept^pc provider npi^pc prov person class^assoc pc provider^assoc pc prov person class^assoc pc prov npi^dom^obs pat ind^enc num^
"RTN","ECXPIVD2",9,0)
 ;ord pr^ordering stop code^ord dt^req phys^nat prod division^means tst^elig^dob^sex^state^county^zip+4^vet^period of svc^pow stat^pow loc^ir stat^ao stat^
"RTN","ECXPIVD2",10,0)
 ;ao loc^purple heart ind.^mst stat^enrollment loc^enrollment cat^enrollment stat^enrollment prior^cnh/sh stat^ord pr npi
"RTN","ECXPIVD2",11,0)
 ;node2
"RTN","ECXPIVD2",12,0)
 ;head & neck cancer ind.^ethnicity^race1^bcma drug dispensed^bcma dose given^bcma unit of administration^bcma ICU flag^
"RTN","ECXPIVD2",13,0)
 ;ordering provider person class^^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig ECXCVE^
"RTN","ECXPIVD2",14,0)
 ;combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^emerg resp indic(FEMA) ECXERI^
"RTN","ECXPIVD2",15,0)
 ;environ contamin ECXEST
"RTN","ECXPIVD2",16,0)
 ;^oef/oif ECXOEF^ oef/oif return date ECXOEFDT^assoc pc prov npi ECASNPI
"RTN","ECXPIVD2",17,0)
 ;^ordering provider npi ECXOPNPI^primary care provider npi ECPTNPI
"RTN","ECXPIVD2",18,0)
 N DA,DIK
"RTN","ECXPIVD2",19,0)
 S ECPLACE=""
"RTN","ECXPIVD2",20,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPIVD2",21,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_DFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPIVD2",22,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECVACL_U_ECXCNT_U_ECXW_U
"RTN","ECXPIVD2",23,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXPIVD2",24,0)
 N ECXDATA
"RTN","ECXPIVD2",25,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXPIVD2",26,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXPIVD2",27,0)
 ;done
"RTN","ECXPIVD2",28,0)
 S ECODE=ECODE_ECXCOST_U_ECXMN_U_ECXTS_U_ECNDC_U_ECINV_U_ECTYP_U_ECNFC_U
"RTN","ECXPIVD2",29,0)
 S ECODE=ECODE_ECST_U_ECPTTM_U_ECPTPR_U_ECDTTM_U_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U_$$ECXTIME^ECXUTL(ECXADM)_U_ECXDSSI_U
"RTN","ECXPIVD2",30,0)
 ;if outpat and not observ patient, admit date="" and admit time="000000"
"RTN","ECXPIVD2",31,0)
 I ECXA="O",(ECXOBS="NO") S $P(ECODE,U,24)="",$P(ECODE,U,25)="000000"
"RTN","ECXPIVD2",32,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECPLACE_U_ECCLAS_U_ECASPR_U_ECCLAS2_U_ECPLACE_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDPR_U
"RTN","ECXPIVD2",33,0)
 S ECODE1=ECODE1_ECXORDST_U_$$ECXDATE^ECXUTL(ECXORDDT,ECXYM)_U_ECXRPHY_U_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U
"RTN","ECXPIVD2",34,0)
 S ECODE1=ECODE1_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXPIVD2",35,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCAT_U
"RTN","ECXPIVD2",36,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXCNHU_U_U
"RTN","ECXPIVD2",37,0)
 S ECODE2=ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXPIVD2",38,0)
 I ECXLOGIC>2003 D
"RTN","ECXPIVD2",39,0)
 .S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXPIVD2",40,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPIVD2",41,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXEST
"RTN","ECXPIVD2",42,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECXOPNPI_U_ECPTNPI
"RTN","ECXPIVD2",43,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXPIVD2",44,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXPIVD2",45,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPIVD2",46,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPIVD2",47,0)
 Q
"RTN","ECXPIVDN")
0^8^B49192647^B64275296
"RTN","ECXPIVDN",1,0)
ECXPIVDN ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ; 10/31/07 1:38pm
"RTN","ECXPIVDN",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,33,39,46,49,71,84,96,92,107,105**;Dec 22, 1997;Build 70
"RTN","ECXPIVDN",3,0)
BEG ;entry point from option
"RTN","ECXPIVDN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPIVDN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXPIVDN",6,0)
 Q
"RTN","ECXPIVDN",7,0)
 ;
"RTN","ECXPIVDN",8,0)
START ; start package specific extract
"RTN","ECXPIVDN",9,0)
 N DIC,DA,DR,DIQ,DFN,ECXNPRFI,ECXPHA
"RTN","ECXPIVDN",10,0)
 S QFLG=0
"RTN","ECXPIVDN",11,0)
 I '$D(ECINST) D
"RTN","ECXPIVDN",12,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPIVDN",13,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPIVDN",14,0)
 S ECED=ECED+.3
"RTN","ECXPIVDN",15,0)
 K ^TMP($J,"A"),^TMP($J,"S")
"RTN","ECXPIVDN",16,0)
 S ECD=ECSD1
"RTN","ECXPIVDN",17,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^TMP($J,"S") S ECVOL=0 D  Q:QFLG
"RTN","ECXPIVDN",18,0)
 .S ECXERR=0 D PAT(DFN,ECD,.ECXERR)
"RTN","ECXPIVDN",19,0)
 .Q:ECXERR
"RTN","ECXPIVDN",20,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:QFLG  I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXPIVDN",21,0)
 ..S DRG=$P(EC,U,4) I $P(EC,U,8)]"" D
"RTN","ECXPIVDN",22,0)
 ...I '$D(^TMP($J,"A",DRG)) S ^(DRG)=$P(EC,U,7,8),^(DRG,1)=0,^(2)=$P(EC,U,12)
"RTN","ECXPIVDN",23,0)
 ...S ^(1)=^TMP($J,"A",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",24,0)
 ..I $P(EC,U,9) D
"RTN","ECXPIVDN",25,0)
 ...I '$D(^TMP($J,"S",DRG)) S ^(DRG)=$P(EC,U,9)_"^ML",^(DRG,1)=0,^(2)=$P(EC,U,12),ECVOL=$P(EC,U,9)+ECVOL
"RTN","ECXPIVDN",26,0)
 ...S ^(1)=^TMP($J,"S",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",27,0)
 ..S ECTYP=$P(EC,U,11),ECTOTC=0,ECDTTM=$$ECXTIME^ECXUTL($P(EC,U,5))
"RTN","ECXPIVDN",28,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXPIVDN",29,0)
 .;leave the next line in case the decision is made to send volume designations
"RTN","ECXPIVDN",30,0)
 .;I ECTYP="H" S ECTYP=ECTYP_$S(ECVOL'>1000:1,ECVOL'>2000:2,1:3)
"RTN","ECXPIVDN",31,0)
 .S ECXDSSI=""
"RTN","ECXPIVDN",32,0)
 .;loop thru tmp global and call pharmacy drug file (#50) api
"RTN","ECXPIVDN",33,0)
 .F SA="S","A" S DRG="" F  S DRG=$O(^TMP($J,SA,DRG)) Q:DRG=""  S ECXPHA="",ECXPHA=$$PHAAPI^ECXUTL5(DRG) I $P(ECXPHA,U)'="" D STUFF Q:QFLG
"RTN","ECXPIVDN",34,0)
 K ^TMP($J),CLIN,DA,DFN,DIC,DIK,DRG,ON,SA,X,Y,P1,P3
"RTN","ECXPIVDN",35,0)
 Q
"RTN","ECXPIVDN",36,0)
STUFF ;get data
"RTN","ECXPIVDN",37,0)
 N ECORDST
"RTN","ECXPIVDN",38,0)
 S ECST=^TMP($J,SA,DRG),ECXCNT=^(DRG,1),ECXCOST=^(2),ECXCOST=ECXCOST*ECXCNT,ECVACL=$P(ECXPHA,U,2),ECORDST=""
"RTN","ECXPIVDN",39,0)
 ;if outpatient get division from iv rm; get dss identifier for clinic
"RTN","ECXPIVDN",40,0)
 I ECXA="O" D
"RTN","ECXPIVDN",41,0)
 .;- Only set ward to .5 if outpatient (but NOT observation patient)
"RTN","ECXPIVDN",42,0)
 .I $G(ECXW)="" S ECXW=.5
"RTN","ECXPIVDN",43,0)
 .I $P(EC,U,15) S ECIVRM=$P(EC,U,15),ECXDIV=$$PSJ59P5^ECXUTL5(ECIVRM)
"RTN","ECXPIVDN",44,0)
 .S CLIN=+$P(EC,U,13),(ECXP1,ECXP2)="000",ECXCL=$G(^ECX(728.44,CLIN,0)) Q:ECXCL=""
"RTN","ECXPIVDN",45,0)
 .S ECSC=$P(ECXCL,U,4),ECCSC=$P(ECXCL,U,5)
"RTN","ECXPIVDN",46,0)
 .I ECSC="" S ECSC=$P(ECXCL,U,2),ECCSC=$P(ECXCL,U,3)
"RTN","ECXPIVDN",47,0)
 .I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXPIVDN",48,0)
 .I ECSC="" S ECSC=$P($G(^SC(ECXCL,0)),U,7),ECCSC=$P($G(^SC(ECXCL,0)),U,18) I ECSC D
"RTN","ECXPIVDN",49,0)
 ..S ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2) S:ECCSC]"" ECXP2=$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXPIVDN",50,0)
 ..S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXPIVDN",51,0)
 .S ECXDSSI=ECXP1_ECXP2
"RTN","ECXPIVDN",52,0)
 .I ECXLOGIC>2003 D
"RTN","ECXPIVDN",53,0)
 ..I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXPIVDN",54,0)
 S ECINV=$P(ECXPHA,U,4),ECINV=$S(ECINV["I":"I",1:""),ECST=ECXCNT*ECST_" "_$P(ECST,U,2)
"RTN","ECXPIVDN",55,0)
 S ECNDC=$P(ECXPHA,U,3),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXPIVDN",56,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXPIVDN",57,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXPIVDN",58,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXPIVDN",59,0)
 ;- Ordering provider ("2"_provider)
"RTN","ECXPIVDN",60,0)
 S ECXORDPR=$S(+$P(EC,U,10):"2"_$P(EC,U,10),1:"")
"RTN","ECXPIVDN",61,0)
 N ECXUSRTN
"RTN","ECXPIVDN",62,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$P(EC,U,10),$P(EC,U,16))
"RTN","ECXPIVDN",63,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECXOPNPI=$P(ECXUSRTN,U)
"RTN","ECXPIVDN",64,0)
 S ECXORDDT=$P(EC,U,16) ;- Ordering date
"RTN","ECXPIVDN",65,0)
 ;- Requesting physician (null for FY2002)
"RTN","ECXPIVDN",66,0)
 S ECXRPHY=""
"RTN","ECXPIVDN",67,0)
 ;- Department and National Prod Division
"RTN","ECXPIVDN",68,0)
 S ECXDSSD="" ;dss department use postponed $$IVP^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",69,0)
 N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",70,0)
 ;- Observation patient indicator (yes/no)
"RTN","ECXPIVDN",71,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXPIVDN",72,0)
 ; - Ordering Date, Ordering Stop Code
"RTN","ECXPIVDN",73,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXPIVDN",74,0)
 .S ECXORDST=$$DOIVPO^ECXUTL5(DFN,ON)
"RTN","ECXPIVDN",75,0)
 .I ECXOBS="NO" S ECORDST="160"
"RTN","ECXPIVDN",76,0)
 .I ECXOBS="YES" S ECORDST=$P($G(^ECX(727.831,+ECXTS,0)),U,6)
"RTN","ECXPIVDN",77,0)
 ;- If no encounter number don't file record
"RTN","ECXPIVDN",78,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ECD,ECXTS,ECXOBS,ECHEAD,ECORDST,)
"RTN","ECXPIVDN",79,0)
 ;get BCMA data
"RTN","ECXPIVDN",80,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)=""
"RTN","ECXPIVDN",81,0)
 ;get ordering provider person class
"RTN","ECXPIVDN",82,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXORDPR,2,999),ECXORDDT)
"RTN","ECXPIVDN",83,0)
 ;set national patient record flag if exist
"RTN","ECXPIVDN",84,0)
 S ECXDFN=DFN D NPRF^ECXUTL5 K ECXDFN
"RTN","ECXPIVDN",85,0)
 D:ECXENC'="" FILE^ECXPIVD2 K P1,P3
"RTN","ECXPIVDN",86,0)
 Q
"RTN","ECXPIVDN",87,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographics, primary care, and inpatient data
"RTN","ECXPIVDN",88,0)
 N X
"RTN","ECXPIVDN",89,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXPIVDN",90,0)
 ;get patient data if saved
"RTN","ECXPIVDN",91,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXPIVDN",92,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2),ECXMPI=$P(PT,U,3)
"RTN","ECXPIVDN",93,0)
 .S ECXDOB=$P(PT,U,4),ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6),ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXPIVDN",94,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12),ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXPIVDN",95,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18),ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXPIVDN",96,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24),ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXPIVDN",97,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4)
"RTN","ECXPIVDN",98,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",99,0)
 ;set patient data
"RTN","ECXPIVDN",100,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXPIVDN",101,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXPIVDN",102,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXPIVDN",103,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXPIVDN",104,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET")
"RTN","ECXPIVDN",105,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXPIVDN",106,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL"),ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXPIVDN",107,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS"),ECXEST=ECXPAT("EC STAT")
"RTN","ECXPIVDN",108,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) ;get CNHU status
"RTN","ECXPIVDN",109,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXPIVDN",110,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",111,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXPIVDN",112,0)
 .; - Race and Ethnicity
"RTN","ECXPIVDN",113,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")
"RTN","ECXPIVDN",114,0)
 .S ECXERI=ECXPAT("ERI") ;emergency response indicator (FEMA)
"RTN","ECXPIVDN",115,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXPIVDN",116,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXPIVDN",117,0)
 .;save for later
"RTN","ECXPIVDN",118,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXPIVDN",119,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXPIVDN",120,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT
"RTN","ECXPIVDN",121,0)
 ;get primary care data
"RTN","ECXPIVDN",122,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXPIVDN",123,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXPIVDN",124,0)
 ;get inpatient data
"RTN","ECXPIVDN",125,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW,ECXDIV)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXPIVDN",126,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";"),ECXDIV=$P(W,";",2)
"RTN","ECXPIVDN",127,0)
 Q
"RTN","ECXPIVDN",128,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPIVDN",129,0)
 S ECHEAD="IVP"
"RTN","ECXPIVDN",130,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPIVDN",131,0)
 ;variables ecver and ecrtn will be reset in routine ecxtrac if appropriate
"RTN","ECXPIVDN",132,0)
 S ECVER=7
"RTN","ECXPIVDN",133,0)
 Q
"RTN","ECXPIVDN",134,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPIVDN",135,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPLBB")
0^48^B17966665^B18084926
"RTN","ECXPLBB",1,0)
ECXPLBB ;DALOI/KML - DSS BLOOD BANK PRE-EXTRACT AUDIT REPORT ; 8/13/07 7:08am
"RTN","ECXPLBB",2,0)
 ;;3.0;DSS EXTRACTS;**78,92,105**;Dec 22, 1997;Build 70
"RTN","ECXPLBB",3,0)
 ;Per VHA Directive 97-033 this routine should not be modified.  Medical Device # BK970021
"RTN","ECXPLBB",4,0)
 ;entry point from option
"RTN","ECXPLBB",5,0)
 D SETUP^ECXLBB I ECFILE="" Q
"RTN","ECXPLBB",6,0)
 N ECXINST
"RTN","ECXPLBB",7,0)
 D DATES
"RTN","ECXPLBB",8,0)
 Q:ECED']""&(ECSD']"")
"RTN","ECXPLBB",9,0)
 N ECXPOP S ECXPOP=0 D QUE Q:ECXPOP
"RTN","ECXPLBB",10,0)
 ;
"RTN","ECXPLBB",11,0)
START ;  entry point from tasked job
"RTN","ECXPLBB",12,0)
 ; get LAB DATA and build temporary global ^TMP("ECXLBB",$J)
"RTN","ECXPLBB",13,0)
 N ECTRSP,ECADMT,ECTODT,ECXRPT,ECOUT,ECXSTR,ECRDT,ECLINE,ECPG,ECQUIT
"RTN","ECXPLBB",14,0)
 N ECD,ECXDFN,ECARRY,EC66,ECERR,ECTRFDT,ECTRFTM,ECX,ECINOUT,ECXJOB
"RTN","ECXPLBB",15,0)
 N ECXLOGIC
"RTN","ECXPLBB",16,0)
 S ECXJOB=$J
"RTN","ECXPLBB",17,0)
 K ^TMP("ECXLBB",ECXJOB)
"RTN","ECXPLBB",18,0)
 U IO
"RTN","ECXPLBB",19,0)
 I $E(IOST,1,2)="C-" W !,"Retrieving records... "
"RTN","ECXPLBB",20,0)
 S ECXRPT=1 D AUDRPT^ECXLBB
"RTN","ECXPLBB",21,0)
OUTPUT ; entry point called by EN tag
"RTN","ECXPLBB",22,0)
 I '$D(^TMP("ECXLBB",ECXJOB)) W !,"There were no records that met the date range criteria" Q
"RTN","ECXPLBB",23,0)
 S (ECPG,ECDATE,ECQUIT,ECXDFN)=0,ECLINE="",$P(ECLINE,"=",80)="="
"RTN","ECXPLBB",24,0)
 S ECSDN=$$FMTE^XLFDT(ECSD,9),ECEDN=$$FMTE^XLFDT(ECED,9),ECRDT=$$FMTE^XLFDT(DT,9)
"RTN","ECXPLBB",25,0)
 W:$E(IOST,1,2)="C-" @IOF D HED
"RTN","ECXPLBB",26,0)
 F  S ECXDFN=$O(^TMP("ECXLBB",ECXJOB,ECXDFN)) Q:'ECXDFN  F  S ECDATE=$O(^TMP("ECXLBB",ECXJOB,ECXDFN,ECDATE))  Q:'ECDATE  Q:ECQUIT  S ECXSTR=^(ECDATE) D PRINT
"RTN","ECXPLBB",27,0)
 D ^ECXKILL
"RTN","ECXPLBB",28,0)
 Q
"RTN","ECXPLBB",29,0)
 ;
"RTN","ECXPLBB",30,0)
PRINT ;
"RTN","ECXPLBB",31,0)
 I $Y+5>IOSL D  Q:ECQUIT
"RTN","ECXPLBB",32,0)
 . I $E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECQUIT=1 Q
"RTN","ECXPLBB",33,0)
 . W @IOF D HED
"RTN","ECXPLBB",34,0)
 W !,$P(ECXSTR,"^",5),?11,$P(ECXSTR,"^",4),?26,$P(ECXSTR,"^",16)
"RTN","ECXPLBB",35,0)
 W ?37,$$FMTE^XLFDT($$HL7TFM^XLFDT($P(ECXSTR,"^",8)),2)
"RTN","ECXPLBB",36,0)
 W ?49,$P(ECXSTR,"^",11),?60,$J(+$P(ECXSTR,"^",12),2)
"RTN","ECXPLBB",37,0)
 Q
"RTN","ECXPLBB",38,0)
 ;
"RTN","ECXPLBB",39,0)
HED ;
"RTN","ECXPLBB",40,0)
 S ECPG=ECPG+1
"RTN","ECXPLBB",41,0)
 W !,"LBB Extract Audit Report",?72,"Page",$J(ECPG,3)
"RTN","ECXPLBB",42,0)
 W !,ECSDN," - ",ECEDN,?58,"Run Date:",$J(ECRDT,12)
"RTN","ECXPLBB",43,0)
 W !,?37,"Transf",?57,"Number"
"RTN","ECXPLBB",44,0)
 W !,"Name",?14,"SSN",?25,"FDR LOC",?37,"Date",?49,"COMP"
"RTN","ECXPLBB",45,0)
 W ?57,"of Units"
"RTN","ECXPLBB",46,0)
 W !,ECLINE
"RTN","ECXPLBB",47,0)
 Q
"RTN","ECXPLBB",48,0)
DATES ;
"RTN","ECXPLBB",49,0)
 N OUT,CHKFLG
"RTN","ECXPLBB",50,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXPLBB",51,0)
 I '$D(ECHEAD) S ECHEAD=" "
"RTN","ECXPLBB",52,0)
 W @IOF,!,"LBB Extract Audit Report Information for DSS",!!
"RTN","ECXPLBB",53,0)
 S:'$D(ECINST) ECINST=+$P(^ECX(728,1,0),U)
"RTN","ECXPLBB",54,0)
 S ECXINST=ECINST
"RTN","ECXPLBB",55,0)
 K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPLBB",56,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPLBB",57,0)
 S ECLDT=$S($D(^ECX(728,1,ECNODE)):$P(^(ECNODE),U,ECPIECE),1:2610624)
"RTN","ECXPLBB",58,0)
 S:ECLDT="" ECLDT=2610624
"RTN","ECXPLBB",59,0)
 S ECOUT=0 F  S (ECED,ECSD)="" D  Q:ECOUT
"RTN","ECXPLBB",60,0)
 . K %DT S %DT="AEX",%DT("A")="Starting with Date: " D ^%DT
"RTN","ECXPLBB",61,0)
 . I Y<0 S ECOUT=1 Q
"RTN","ECXPLBB",62,0)
 . S ECSD=Y
"RTN","ECXPLBB",63,0)
 . K %DT S %DT="AEX",%DT("A")="Ending with Date: " D ^%DT
"RTN","ECXPLBB",64,0)
 . I Y<0 S ECOUT=1 Q
"RTN","ECXPLBB",65,0)
 . I Y<ECSD W !!,"The ending date cannot be earlier than the starting date.",!,"Please try again.",!! Q
"RTN","ECXPLBB",66,0)
 . I $E(Y,1,5)'=$E(ECSD,1,5) W !!,"Beginning and ending dates must be in the same month and year.",!,"Please try again.",!! Q
"RTN","ECXPLBB",67,0)
 . S ECED=Y
"RTN","ECXPLBB",68,0)
 . I ECLDT'<ECSD W !!,"The Blood Bank information has already been extracted through ",$$FMTE^XLFDT(ECLDT),".",!,"Please enter a new date range.",!! Q
"RTN","ECXPLBB",69,0)
 . S ECOUT=1
"RTN","ECXPLBB",70,0)
 Q
"RTN","ECXPLBB",71,0)
 ;
"RTN","ECXPLBB",72,0)
QUE ;
"RTN","ECXPLBB",73,0)
 K ZTSAVE
"RTN","ECXPLBB",74,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXPLBB",75,0)
 K ZTSAVE
"RTN","ECXPLBB",76,0)
 F X="ECINST","ECED","ECSD","ECSD1","ECEDN","ECSDN" S ZTSAVE(X)=""
"RTN","ECXPLBB",77,0)
 F X="ECPACK","ECPIECE","ECRTN","ECGRP","ECNODE" S ZTSAVE(X)=""
"RTN","ECXPLBB",78,0)
 F X="ECFILE","ECHEAD","ECVER","ECINST","ECXINST" S ZTSAVE(X)=""
"RTN","ECXPLBB",79,0)
 F X="ECXLOGIC","ECXDATES" S ZTSAVE(X)=""
"RTN","ECXPLBB",80,0)
 S ZTDESC=ECPACK_" EXTRACT AUDIT REPORT: "_ECSDN_" TO "_ECEDN,ZTRTN="START^ECXPLBB",ZTIO=""
"RTN","ECXPLBB",81,0)
 S IOP="Q" W ! S %ZIS="QMP" D ^%ZIS S:POP ECXPOP=1 Q:POP  I $D(IO("Q")) K IO("Q"),ZTIO D ^%ZTLOAD W:$D(ZTSK) !,$C(7),"REQUEST QUEUED",!,"Task #: ",$G(ZTSK) K I,ZTSK,ZTIO,ZTSAVE,ZTRTN D HOME^%ZIS S ECXPOP=1
"RTN","ECXPLBB",82,0)
 Q
"RTN","ECXPLBB",83,0)
 ;
"RTN","ECXPLBB",84,0)
EN(ECXJOB,ECSD,ECED) ; entry point used primarily for testing
"RTN","ECXPLBB",85,0)
 ; input:
"RTN","ECXPLBB",86,0)
 ;        ECXJOB = $J that is assigned to the 2nd subscript of 
"RTN","ECXPLBB",87,0)
 ;                 the temporary global array containing the 
"RTN","ECXPLBB",88,0)
 ;                 extracted data that feeds the pre-extract
"RTN","ECXPLBB",89,0)
 ;                 audit report
"RTN","ECXPLBB",90,0)
 ;        ECSD   = starting date range representing the FM
"RTN","ECXPLBB",91,0)
 ;                 date used to retrieve data from file #63
"RTN","ECXPLBB",92,0)
 ;        ECED   = ending date range representing the FM date
"RTN","ECXPLBB",93,0)
 ;                 used to retrieve data from file #63
"RTN","ECXPLBB",94,0)
 ; syntax  of the call: D EN^ECXPLBB(541571372,3000101,3000131)
"RTN","ECXPLBB",95,0)
 D OUTPUT
"RTN","ECXPLBB",96,0)
 Q
"RTN","ECXPLBB",97,0)
 ;
"RTN","ECXPLBB",98,0)
 ;ECXPLBB
"RTN","ECXPRO")
0^17^B34644187^B30601078
"RTN","ECXPRO",1,0)
ECXPRO ;ALB/GTS - Prosthetics Extract for DSS ; 10/17/07 3:47pm
"RTN","ECXPRO",2,0)
 ;;3.0;DSS EXTRACTS;**9,13,15,21,24,33,39,46,71,92,105**;Dec 22, 1997;Build 70
"RTN","ECXPRO",3,0)
BEG ;entry point from option
"RTN","ECXPRO",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPRO",5,0)
 D:+ECINST>0 ^ECXTRAC D ^ECXKILL
"RTN","ECXPRO",6,0)
 Q
"RTN","ECXPRO",7,0)
 ;
"RTN","ECXPRO",8,0)
START ;start package specific extract
"RTN","ECXPRO",9,0)
 ;
"RTN","ECXPRO",10,0)
 ; Input
"RTN","ECXPRO",11,0)
 ;  ECSD1   - FM formatted Beginning Date (Set by ECXTRAC)
"RTN","ECXPRO",12,0)
 ;  ECED    - FM formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",13,0)
 ;  ECSDN   - Externally formatted Start Date (Set by ECXTRAC)
"RTN","ECXPRO",14,0)
 ;  ECEDN   - Externally formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",15,0)
 ;  EC      - IEN from file #727 (Set by ECXTRAC)
"RTN","ECXPRO",16,0)
 ;  ECXYM   - Year and Month of extract (YYYYMM)
"RTN","ECXPRO",17,0)
 ;  ECXINST - IEN for division in file #4
"RTN","ECXPRO",18,0)
 ;  ECINST  - Station number of selected division
"RTN","ECXPRO",19,0)
 ;
"RTN","ECXPRO",20,0)
 N ECXLNE,ECXCT,ECXDACT,ECX0,ECXLB,ECXED1,ECINSTSV,ECXLNSTR,ECXP
"RTN","ECXPRO",21,0)
 N DIC,DR,DA,DIQ,CPTCODE,ECXNPRFI
"RTN","ECXPRO",22,0)
 D ECXBUL^ECXPRO2(.ECXLNE,ECSDN,ECEDN,EC)
"RTN","ECXPRO",23,0)
 S QFLG=0,ECXLNSTR=ECXLNE,ECXED1=ECED+.9999,ECXCT=ECSD1
"RTN","ECXPRO",24,0)
 F  S ECXCT=$O(^RMPR(660,"CT",ECXCT)) Q:(ECXCT>ECXED1)!('ECXCT)!(QFLG=1)  D
"RTN","ECXPRO",25,0)
 .S ECXDACT=0
"RTN","ECXPRO",26,0)
 .F  S ECXDACT=$O(^RMPR(660,"CT",ECXCT,ECXDACT)) Q:('ECXDACT)!(QFLG=1)  D
"RTN","ECXPRO",27,0)
 ..;* initialize variables
"RTN","ECXPRO",28,0)
 ..S (ECXDFN,ECXPNM,ECXSSN,ECXSEX,ECXSTAT,ECXDATE,ECXTYPE,ECXSRCE)=""
"RTN","ECXPRO",29,0)
 ..S (ECXHCPCS,ECXPHCPC,ECXRQST,ECXRCST,ECXFORM,ECXCTAMT,ECXLLC)=""
"RTN","ECXPRO",30,0)
 ..S (ECXLMC,ECXGRPR,ECXBILST,ECXQTY,ECXFELOC,ECXFEKEY,ECXA)=""
"RTN","ECXPRO",31,0)
 ..S (ECPTTM,ECPTPR,ECXAST,ECXRST,ECXEST,ECXELIG,ECXVET,ECXZIP)=""
"RTN","ECXPRO",32,0)
 ..S (ECXDOB,ECXDSSD,ECXICD9,ECXAOL,ECXHNCI,ECXETH,ECXRC1,ECXMST)=""
"RTN","ECXPRO",33,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXPRO",34,0)
 ..Q:'$D(^RMPR(660,ECXDACT,0))
"RTN","ECXPRO",35,0)
 ..S ECX0=^RMPR(660,ECXDACT,0),ECXLB=$G(^RMPR(660,ECXDACT,"LB"))
"RTN","ECXPRO",36,0)
 ..K ECXP S DIC="^RMPR(660,",DR=".02;11",DA=ECXDACT,DIQ(0)="EI"
"RTN","ECXPRO",37,0)
 ..S DIQ="ECXP" D EN^DIQ1
"RTN","ECXPRO",38,0)
 ..S ECXDIV=$$GET1^DIQ(660,ECXDACT,8,"I")
"RTN","ECXPRO",39,0)
 ..S ECXDFN=$G(ECXP(660,ECXDACT,.02,"I"))
"RTN","ECXPRO",40,0)
 ..S ECXFORM=$G(ECXP(660,ECXDACT,11,"E"))_U_$G(ECXP(660,ECXDACT,11,"I"))
"RTN","ECXPRO",41,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXCT)
"RTN","ECXPRO",42,0)
 ..S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXPRO",43,0)
 ..I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXPRO",44,0)
 ..;OEF/OIF data
"RTN","ECXPRO",45,0)
 ..S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXPRO",46,0)
 ..S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXPRO",47,0)
 ..Q:'$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,ECXDACT,ECX0,ECXLB,ECINST,ECXFORM)
"RTN","ECXPRO",48,0)
 ..D PROSINFO^ECXPRO1(ECXDACT,ECXLB,ECX0,ECXFORM)
"RTN","ECXPRO",49,0)
 ..S CPTCODE=$E(ECXHCPCS,1,5)
"RTN","ECXPRO",50,0)
 ..;nppd entry date
"RTN","ECXPRO",51,0)
 ..S ECXNPPDT=$$ECXDATE^ECXUTL($P(ECX0,U,1),ECXYM)
"RTN","ECXPRO",52,0)
 ..;
"RTN","ECXPRO",53,0)
 ..;Get production division ;p-46
"RTN","ECXPRO",54,0)
 ..N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXPRO",55,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXPRO",56,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXPRO",57,0)
 ..;
"RTN","ECXPRO",58,0)
 ..;- CNH status (YES/NO)
"RTN","ECXPRO",59,0)
 ..S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXPRO",60,0)
 ..;
"RTN","ECXPRO",61,0)
 ..;get encounter classifications
"RTN","ECXPRO",62,0)
 ..S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR)=""
"RTN","ECXPRO",63,0)
 ..S ECXVISIT=$$GET1^DIQ(660,ECXDACT,8.12,"I") I ECXVISIT'="" D
"RTN","ECXPRO",64,0)
 ...D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXPRO",65,0)
 ...S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE"))
"RTN","ECXPRO",66,0)
 ...S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXPRO",67,0)
 ..; - Head and Neck Cancer Indicator
"RTN","ECXPRO",68,0)
 ..S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXPRO",69,0)
 ..;
"RTN","ECXPRO",70,0)
 ..; - set national patient record flag if exist
"RTN","ECXPRO",71,0)
 ..D NPRF^ECXUTL5
"RTN","ECXPRO",72,0)
 ..;
"RTN","ECXPRO",73,0)
 ..;- If no encounter number don't file record
"RTN","ECXPRO",74,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXPRO",75,0)
 ..I ECXFORM["-3" F ECXLAB="LAB","ORD" D
"RTN","ECXPRO",76,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB)
"RTN","ECXPRO",77,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",78,0)
 ..I ECXFORM'["-3" S ECXLAB="NONL" D
"RTN","ECXPRO",79,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB)
"RTN","ECXPRO",80,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",81,0)
 ;* Send the Exception message
"RTN","ECXPRO",82,0)
 I ECXLNSTR<ECXLNE DO
"RTN","ECXPRO",83,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXPRO",84,0)
 .S XMDUZ=.5
"RTN","ECXPRO",85,0)
 .S XMSUB=ECINST_" - Prosthetics DSS Exception Message",XMN=0
"RTN","ECXPRO",86,0)
 .S XMTEXT="^TMP(""ECX-PRO EXC"",$J,"
"RTN","ECXPRO",87,0)
 .D ^XMD
"RTN","ECXPRO",88,0)
 K ^TMP("ECX-PRO EXC",$J),XMDUZ,XMSUB,XMTEXT,XMY
"RTN","ECXPRO",89,0)
 Q
"RTN","ECXPRO",90,0)
 ;
"RTN","ECXPRO",91,0)
FILE ;file extract record
"RTN","ECXPRO",92,0)
 ;node0
"RTN","ECXPRO",93,0)
 ;facility^dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^in/out (ECXA)^
"RTN","ECXPRO",94,0)
 ;day^feeder location^
"RTN","ECXPRO",95,0)
 ;feeder key^qty^pc team^pc provider^hcpcs^icd9 (ECXICD9)^
"RTN","ECXPRO",96,0)
 ;icd9-1 (ECXICD91)^icd9-2 (ECXICD92)^icd9-3 (ECXICD93)^
"RTN","ECXPRO",97,0)
 ;icd9-4 (ECXICD94)^agent orange^radiation^env contam^eligibility^
"RTN","ECXPRO",98,0)
 ;cost^lab labor cost^lab matl cost^billing status^
"RTN","ECXPRO",99,0)
 ;vet^transaction type^req station^rec station^file#661.1 ien
"RTN","ECXPRO",100,0)
 ;node1
"RTN","ECXPRO",101,0)
 ;zip^dob^sex^amis grouper^placeholder^mpi^dss dept ECXDSSD^
"RTN","ECXPRO",102,0)
 ;pc prov person class^race^pow status^pow loc^
"RTN","ECXPRO",103,0)
 ;sharing agree payor^sharing agree ins^mst status^
"RTN","ECXPRO",104,0)
 ;enroll loc^state^county^assoc pc provider^
"RTN","ECXPRO",105,0)
 ;assoc pc prov person class^placeholder
"RTN","ECXPRO",106,0)
 ;dom (ECXDOM)^purple heart indicator (ECXPHI)^
"RTN","ECXPRO",107,0)
 ;enrollment Category (ECXCAT)^enrollment status (ECXSTAT)^
"RTN","ECXPRO",108,0)
 ;enrollment priority (ECXPRIOR)^purple heart ind (ECXPHI)^
"RTN","ECXPRO",109,0)
 ;period of serv (ECXPOS)^observ pat ind (ECXOBS)^encounter num (ECXENC)^
"RTN","ECXPRO",110,0)
 ;ao loc (ECXAOL)^CNH status (ECXCNH)^production division ECXPDIV^
"RTN","ECXPRO",111,0)
 ;head & neck canc. ind. (ECXHNCI)^ethnicity (ECXETH)^race1 (ECXRC1)^
"RTN","ECXPRO",112,0)
 ;^enrollment priority (ECXPRIOR)_enrollment sub-
"RTN","ECXPRO",113,0)
 ;group (ECXSBGRP)^user enrollee (ECXUESTA)^patient type ECXPTYPE
"RTN","ECXPRO",114,0)
 ;^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv
"RTN","ECXPRO",115,0)
 ;eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXPRO",116,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator ECXAO
"RTN","ECXPRO",117,0)
 ;^environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL^
"RTN","ECXPRO",118,0)
 ;radiation ECXIR^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^
"RTN","ECXPRO",119,0)
 ;nppd code ECXNPPDC^nppd entry date ECXNPPDT
"RTN","ECXPRO",120,0)
 ;assoc pc provider npi ECASNPI^primary care provider npi ECPTNPI
"RTN","ECXPRO",121,0)
 N DA,DIK
"RTN","ECXPRO",122,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPRO",123,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPRO",124,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXFELOC_U
"RTN","ECXPRO",125,0)
 S ECODE=ECODE_ECXFEKEY_U_ECXQTY_U_ECPTTM_U_ECPTPR_U_ECXHCPCS_U
"RTN","ECXPRO",126,0)
 S ECODE=ECODE_ECXICD9_U_ECXICD91_U_ECXICD92_U_ECXICD93_U_ECXICD94_U
"RTN","ECXPRO",127,0)
 S ECODE=ECODE_ECXAST_U_ECXRST_U_ECXEST_U_ECXELIG_U_ECXCTAMT_U_ECXLLC_U
"RTN","ECXPRO",128,0)
 S ECODE=ECODE_ECXLMC_U_ECXBILST_U_ECXVET_U_ECXTYPE_U_ECXRQST_U_ECXRCST_U
"RTN","ECXPRO",129,0)
 S ECODE=ECODE_ECXPHCPC_U
"RTN","ECXPRO",130,0)
 S ECODE1=ECXZIP_U_ECXDOB_U_ECXSEX_U_ECXGRPR_U_U_ECXMPI_U
"RTN","ECXPRO",131,0)
 S ECODE1=ECODE1_ECXDSSD_U_ECCLAS_U_ECXRACE_U_ECXPST_U_ECXPLOC_U
"RTN","ECXPRO",132,0)
 S ECODE1=ECODE1_U_U_ECXMST_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXPRO",133,0)
 S ECODE1=ECODE1_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U
"RTN","ECXPRO",134,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXPOS_U
"RTN","ECXPRO",135,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXPRO",136,0)
 S ECODE1=ECODE1_ECXHNCI_U_ECXETH_U_ECXRC1_U
"RTN","ECXPRO",137,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPRO",138,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXPRO",139,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECXNPPDC_U_ECXNPPDT_U_ECASNPI_U_ECPTNPI
"RTN","ECXPRO",140,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXPRO",141,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXPRO",142,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPRO",143,0)
 Q
"RTN","ECXPRO",144,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPRO",145,0)
 S ECHEAD="PRO"
"RTN","ECXPRO",146,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPRO",147,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXPRO",148,0)
 Q
"RTN","ECXPRO",149,0)
 ;
"RTN","ECXPRO",150,0)
 ;**Note: LOCAL and QUE are carry over from protocols set by other
"RTN","ECXPRO",151,0)
 ;        routines.
"RTN","ECXPRO",152,0)
LOCAL ;to extract nightly for local use not to be transmitted to TSI
"RTN","ECXPRO",153,0)
 ;QUEUE with 1D frequency
"RTN","ECXPRO",154,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXPRO",155,0)
 ;
"RTN","ECXPRO",156,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPRO",157,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPRO1")
0^18^B20355381^B18902819
"RTN","ECXPRO1",1,0)
ECXPRO1 ;ALB/GTS - Prosthetics Extract for DSS (Continued) ; 11/8/07 8:02am
"RTN","ECXPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**9,11,13,15,21,24,33,37,39,100,105**;Dec 22, 1997;Build 70
"RTN","ECXPRO1",3,0)
 ;
"RTN","ECXPRO1",4,0)
NTEG(ECXDFN,ECXLNE,ECXPIEN,ECXN0,ECXNLB,ECINST,ECXFORM) ;** Check for required fields
"RTN","ECXPRO1",5,0)
 ;   Input
"RTN","ECXPRO1",6,0)
 ;    ECXDFN   - ien in file #2
"RTN","ECXPRO1",7,0)
 ;    ECXLNE   - line number variable (passed by reference)
"RTN","ECXPRO1",8,0)
 ;    ECXPIEN  - IEN for the Prosthetics record
"RTN","ECXPRO1",9,0)
 ;    ECXN0    - zero node of the Prosthetics record
"RTN","ECXPRO1",10,0)
 ;    ECXNLB   - LB node of the Prosthetics record
"RTN","ECXPRO1",11,0)
 ;    ECINST   - station number being extracted
"RTN","ECXPRO1",12,0)
 ;    ECXFORM  - Form Requested On
"RTN","ECXPRO1",13,0)
 ;   Output (to be KILLed by calling routine)
"RTN","ECXPRO1",14,0)
 ;    ^TMP("ECX-PRO EXC",$J) - Array for the exception message       
"RTN","ECXPRO1",15,0)
 ;    ECXLNE                 - The number of the next line in the msg
"RTN","ECXPRO1",16,0)
 ;    ECXSTAT2               - Patient Station Number
"RTN","ECXPRO1",17,0)
 ;    ECXDATE                - Delivery Date of Prosthesis
"RTN","ECXPRO1",18,0)
 ;    ECXTYPE                - Type of Transaction work performed
"RTN","ECXPRO1",19,0)
 ;    ECXSRCE                - Source of prosthesis
"RTN","ECXPRO1",20,0)
 ;    ECXHCPCS               - CPT/HCPCS code for prosthesis
"RTN","ECXPRO1",21,0)
 ;    ECXRQST                - Requesting Station
"RTN","ECXPRO1",22,0)
 ;    ECXRCST                - Receiving Station
"RTN","ECXPRO1",23,0)
 ;    ECXPHCPC               - PSAS HCPCS code; if 'unknown', then use CPT/HCPCS code 
"RTN","ECXPRO1",24,0)
 ;    ECXNPPDC               - NPPD code for repairs or new issues
"RTN","ECXPRO1",25,0)
 ;   Output (KILLed by NTEG)
"RTN","ECXPRO1",26,0)
 ;    ECXMISS                - 1 indicates missing information
"RTN","ECXPRO1",27,0)
 ;    ECXGOOD                - 0 indicates record should not be extracted
"RTN","ECXPRO1",28,0)
 ;
"RTN","ECXPRO1",29,0)
 N ECXGOOD,ECXMISS
"RTN","ECXPRO1",30,0)
 S (ECXRCST,ECXRQST,ECXNPPDC)="",ECXGOOD=1,ECXSTAT2=$P(ECXN0,U,10)
"RTN","ECXPRO1",31,0)
 I ECXSTAT2]"" D
"RTN","ECXPRO1",32,0)
 .K ECXDIC
"RTN","ECXPRO1",33,0)
 .S DA=ECXSTAT2,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",34,0)
 .D EN^DIQ1 S ECXSTAT2=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",35,0)
 .S:(ECINST'=$E(ECXSTAT2,1,3)) ECXGOOD=0 ;*Screen for incorrect Station
"RTN","ECXPRO1",36,0)
 ;
"RTN","ECXPRO1",37,0)
 ;** Screen out records
"RTN","ECXPRO1",38,0)
 S:($P(ECXN0,U,17)'="") ECXGOOD=0 ;*SHIP/DEL is not NULL
"RTN","ECXPRO1",39,0)
 S:($P(ECXN0,U,26)'="") ECXGOOD=0 ;*PICKUP/DEL is not NULL
"RTN","ECXPRO1",40,0)
 S:(+($P($G(^RMPR(660,ECXPIEN,"AM")),U,2))=1) ECXGOOD=0 ;*NO ADMIN CT=1
"RTN","ECXPRO1",41,0)
 S:(($P(ECXN0,U,15))'="") ECXGOOD=0 ;*HISTORICAL DATA is not NULL
"RTN","ECXPRO1",42,0)
 ;
"RTN","ECXPRO1",43,0)
 S ECXDATE=$P(ECXN0,U,12),ECXTYPE=$P(ECXN0,U,4),ECXSRCE=$P(ECXN0,U,14)
"RTN","ECXPRO1",44,0)
 S ECXHCPCS=$P($G(^ICPT(+$P(ECXN0,U,22),0)),U,1),ECXCMOD=""
"RTN","ECXPRO1",45,0)
 S ECXHCPCS=$$CPT^ECXUTL3(ECXHCPCS,ECXCMOD)
"RTN","ECXPRO1",46,0)
 ;get psas hcpcs code from file #661.1
"RTN","ECXPRO1",47,0)
 S ECXPHCPC=$P($G(^RMPR(660,ECXPIEN,1)),U,4) D
"RTN","ECXPRO1",48,0)
 .;get nppd code for repairs and new issues 10 characters in length.
"RTN","ECXPRO1",49,0)
 .I "X5"[ECXTYPE S ECXNPPDC=$TR($$GET1^DIQ(661.1,ECXPHCPC_",",5)," ","_")
"RTN","ECXPRO1",50,0)
 .I "IR"[ECXTYPE S ECXNPPDC=$TR($$GET1^DIQ(661.1,ECXPHCPC_",",6)," ","_")
"RTN","ECXPRO1",51,0)
 .I +ECXPHCPC S ECXPHCPC=$E($P($G(^RMPR(661.1,ECXPHCPC,0)),U,1),1,5)
"RTN","ECXPRO1",52,0)
 .I ECXPHCPC="UNKNOWN" S ECXPHCPC=$E(ECXHCPCS,1,5)
"RTN","ECXPRO1",53,0)
 ;
"RTN","ECXPRO1",54,0)
 ;* Get Requesting Station Number
"RTN","ECXPRO1",55,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",56,0)
 .S ECXRQST=$P(ECXNLB,U,1)
"RTN","ECXPRO1",57,0)
 .I ECXRQST]"" D
"RTN","ECXPRO1",58,0)
 ..S DA=ECXRQST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",59,0)
 ..D EN^DIQ1 S ECXRQST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",60,0)
 S:(ECXFORM'["-3") ECXRQST=""
"RTN","ECXPRO1",61,0)
 ;
"RTN","ECXPRO1",62,0)
 ;* Screen out records
"RTN","ECXPRO1",63,0)
 S:(+$P(ECXFORM,U,2)=13) ECXGOOD=0 ;*FORM REQUESTED ON = 13
"RTN","ECXPRO1",64,0)
 ;
"RTN","ECXPRO1",65,0)
 ;* Get Receiving Station Number
"RTN","ECXPRO1",66,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",67,0)
 .S ECXRCST=$P(ECXNLB,U,4)
"RTN","ECXPRO1",68,0)
 .I ECXRCST]"" D
"RTN","ECXPRO1",69,0)
 ..S DA=ECXRCST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",70,0)
 ..D EN^DIQ1 S ECXRCST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",71,0)
 S:(ECXFORM'["-3") ECXRCST=""
"RTN","ECXPRO1",72,0)
 ;
"RTN","ECXPRO1",73,0)
 ;** Check for integrity and set up the problem variable if right DIV
"RTN","ECXPRO1",74,0)
 I ECXGOOD D CHK
"RTN","ECXPRO1",75,0)
 Q ECXGOOD
"RTN","ECXPRO1",76,0)
 ;
"RTN","ECXPRO1",77,0)
CHK ;*Check variables
"RTN","ECXPRO1",78,0)
 ; Input
"RTN","ECXPRO1",79,0)
 ;  Variables set in and Output from NTEG^ECXPRO1
"RTN","ECXPRO1",80,0)
 ; Output
"RTN","ECXPRO1",81,0)
 ;  ^TMP("ECX-PRO EXC",$J,   - Global of records with integrity problems
"RTN","ECXPRO1",82,0)
 ;
"RTN","ECXPRO1",83,0)
 S ECXMISS=""
"RTN","ECXPRO1",84,0)
 I ECXSTAT2']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",85,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",86,0)
 I ECXDFN=0 S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",87,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",88,0)
 ;I ECXSSN']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",89,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",90,0)
 ;I ECXNA="    " S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",91,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",92,0)
 I ECXDATE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",93,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",94,0)
 I ECXTYPE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",95,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",96,0)
 I ECXSRCE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",97,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",98,0)
 I ECXHCPCS']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",99,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",100,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",101,0)
 .I ECXRQST']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",102,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",103,0)
 I ECXFORM']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",104,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",105,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",106,0)
 .I ECXRCST']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",107,0)
 I ECXMISS'="^^^^^^^^^^" D
"RTN","ECXPRO1",108,0)
 .S ECXGOOD=0
"RTN","ECXPRO1",109,0)
 .D ECXMISLN^ECXPRO2(ECXMISS,.ECXLNE,ECXPIEN)
"RTN","ECXPRO1",110,0)
 Q
"RTN","ECXPRO1",111,0)
 ;
"RTN","ECXPRO1",112,0)
PROSINFO(ECXDA,ECXLB,ECX0,ECXFORM) ;*Get Prosthetics Information
"RTN","ECXPRO1",113,0)
 ;
"RTN","ECXPRO1",114,0)
 ;  Input
"RTN","ECXPRO1",115,0)
 ;    ECDA    - The IEN for the Prosthetics record
"RTN","ECXPRO1",116,0)
 ;    ECX0    - The zero node of the Prosthetics record
"RTN","ECXPRO1",117,0)
 ;    ECXLB   - The LB node of the Prosthetics record
"RTN","ECXPRO1",118,0)
 ;    ECXFORM - The Form Requested On (to determine Lab transactions)
"RTN","ECXPRO1",119,0)
 ;
"RTN","ECXPRO1",120,0)
 ;  Output (to be KILLed by calling routine)
"RTN","ECXPRO1",121,0)
 ;    ECXCTAMT   - The Cost of Transaction
"RTN","ECXPRO1",122,0)
 ;    ECXLLC     - The Lab Labor Cost
"RTN","ECXPRO1",123,0)
 ;    ECXLMC     - The Lab Material Cost
"RTN","ECXPRO1",124,0)
 ;    ECXGRPR    - The AMIS Grouper number
"RTN","ECXPRO1",125,0)
 ;    ECXBILST   - The Billing Status
"RTN","ECXPRO1",126,0)
 ;    ECXQTY     - The Quantity
"RTN","ECXPRO1",127,0)
 ;
"RTN","ECXPRO1",128,0)
 S (ECXLLC,ECXLMC,ECXCTAMT)="",ECXBILST=$P($G(^RMPR(660,ECXDA,"AM")),U,3)
"RTN","ECXPRO1",129,0)
 S ECXQTY=$P(ECX0,U,7)
"RTN","ECXPRO1",130,0)
 S:(+ECXQTY=0) ECXQTY=1
"RTN","ECXPRO1",131,0)
 ;
"RTN","ECXPRO1",132,0)
 ;- Set Quantity field to 8 chars (right-justified & padded w/zeros)
"RTN","ECXPRO1",133,0)
 S ECXQTY=$$RJ^XLFSTR(ECXQTY,8,0)
"RTN","ECXPRO1",134,0)
 S ECXGRPR=$P($G(^RMPR(660,ECXDA,"AMS")),U,1),ECXCTAMT=$P(ECX0,U,16)
"RTN","ECXPRO1",135,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",136,0)
 .S ECXCTAMT=$P(ECXLB,U,9),ECXLLC=$P(ECXLB,U,7),ECXLMC=$P(ECXLB,U,8)
"RTN","ECXPRO1",137,0)
 ;
"RTN","ECXPRO1",138,0)
 ;- If Stock Issue or Inventory Issue, Cost of Transaction=0
"RTN","ECXPRO1",139,0)
 I $P(ECXFORM,U,2)=11!($P(ECXFORM,U,2)=12) S ECXCTAMT=0
"RTN","ECXPRO1",140,0)
 S:ECXCTAMT="" ECXCTAMT=0 S:ECXCTAMT>999999 ECXCTAMT=999999
"RTN","ECXPRO1",141,0)
 S:ECXLLC="" ECXLLC=0 S:ECXLLC>999999 ECXLLC=999999
"RTN","ECXPRO1",142,0)
 S:ECXLMC="" ECXLMC=0 S:ECXLMC>999999 ECXLMC=999999
"RTN","ECXPRO1",143,0)
 ;
"RTN","ECXPRO1",144,0)
 ;- Round to next dollar amount
"RTN","ECXPRO1",145,0)
 I (ECXCTAMT#1)>.50 S ECXCTAMT=(ECXCTAMT+1)\1
"RTN","ECXPRO1",146,0)
 I (ECXLLC#1)>.50 S ECXLLC=(ECXLLC+1)\1
"RTN","ECXPRO1",147,0)
 I (ECXLMC#1)>.50 S ECXLMC=(ECXLMC+1)\1
"RTN","ECXPRO1",148,0)
 Q
"RTN","ECXQSR")
0^31^B40606655^B55566980
"RTN","ECXQSR",1,0)
ECXQSR ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ; 7/31/07 11:19pm
"RTN","ECXQSR",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,26,24,34,33,35,39,43,46,49,64,71,84,92,106,105**;Dec 22, 1997;Build 70
"RTN","ECXQSR",3,0)
BEG ;entry point from option
"RTN","ECXQSR",4,0)
 I '$O(^ACK(509850.8,0)) W !,"You must be using the Quality Audiology & Speech Pathology",!,"Audit & Review (QUASAR) software to run this extract.",!! Q
"RTN","ECXQSR",5,0)
 I '$D(^ACK(509850.8,1,"DSS")) W !,"Linkage has not been established between QUASAR and the DSS UNIT file (#724).",!! Q
"RTN","ECXQSR",6,0)
 I '$O(^ACK(509850.6,0)) W !,"There is no data in the A&SP CLINIC VISIT file (#509850.6).",!! Q
"RTN","ECXQSR",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXQSR",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXQSR",9,0)
 Q
"RTN","ECXQSR",10,0)
START ;entry point from tasked job
"RTN","ECXQSR",11,0)
 N ERR,ECXQDT,ECXNPRFI
"RTN","ECXQSR",12,0)
 S QFLG=0,ECED=ECED+.9,ECD=ECSD1,ECXQV=""
"RTN","ECXQSR",13,0)
 D QINST I $D(ERR) Q
"RTN","ECXQSR",14,0)
 S ECL=+^ACK(509850.8,1,0),ECLINK=^ACK(509850.8,1,"DSS")
"RTN","ECXQSR",15,0)
 F  S ECD=$O(^ACK(509850.6,"B",ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)!(QFLG)  D
"RTN","ECXQSR",16,0)
 .I +ECXQV=3,ECD<ECXQDT S ECXQV=2.0
"RTN","ECXQSR",17,0)
 .F  S ECDA=$O(^ACK(509850.6,"B",ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXQSR",18,0)
 Q
"RTN","ECXQSR",19,0)
QINST ;Get installed information for QUASAR
"RTN","ECXQSR",20,0)
 N ARR,IENS,QVIEN,INTIEN
"RTN","ECXQSR",21,0)
 S ECXQDT=""
"RTN","ECXQSR",22,0)
 D FILE^DID(509850.6,,"VERSION","ARR","ERR")
"RTN","ECXQSR",23,0)
 S ECXQV=$G(ARR("VERSION")) I +ECXQV=0 S ERR=1 Q
"RTN","ECXQSR",24,0)
 S QVIEN=$$FIND1^DIC(9.4,"","X","QUASAR") I +QVIEN<1 S ERR=1 Q
"RTN","ECXQSR",25,0)
 S IENS=","_QVIEN_","
"RTN","ECXQSR",26,0)
 S INTIEN=$$FIND1^DIC(9.49,IENS,"X",ECXQV) I +INTIEN<1 S ERR=1 Q
"RTN","ECXQSR",27,0)
 S IENS=INTIEN_","_QVIEN,ECXQDT=$$GET1^DIQ(9.49,IENS,2,"I")
"RTN","ECXQSR",28,0)
 Q
"RTN","ECXQSR",29,0)
UPDATE ;create record for each unique CPT code for clinic visit 
"RTN","ECXQSR",30,0)
 N ARY,ECZNODE,CPT,LOC,MOD,STR,VOL,XX,ECTP,ECV
"RTN","ECXQSR",31,0)
 Q:'$D(^ACK(509850.6,ECDA,0))
"RTN","ECXQSR",32,0)
 S ECZNODE=^ACK(509850.6,ECDA,0),EC2NODE=$G(^ACK(509850.6,ECDA,2))
"RTN","ECXQSR",33,0)
 S ECDT=$P(ECZNODE,U),ECDAY=$$ECXDATE^ECXUTL(ECDT,ECXYM)
"RTN","ECXQSR",34,0)
 S ECTIME=$$ECXTIME^ECXUTL(ECDT) S:$P(ECDT,".",2)="" ECTIME="000000"
"RTN","ECXQSR",35,0)
 S ECXDFN=$P(ECZNODE,U,2)
"RTN","ECXQSR",36,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECD,"1;3;5")
"RTN","ECXQSR",37,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECDT,"1;5",.ECXPAT)
"RTN","ECXQSR",38,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXQSR",39,0)
 ;OEF/OIF data
"RTN","ECXQSR",40,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXQSR",41,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXQSR",42,0)
 ;
"RTN","ECXQSR",43,0)
 S ECHL="",ECXDIV=$P($G(^ACK(509850.6,ECDA,5)),U),ECSTOP=$P(EC2NODE,U)
"RTN","ECXQSR",44,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get Production Division
"RTN","ECXQSR",45,0)
 Q:ECSTOP=""
"RTN","ECXQSR",46,0)
 S (ECHLS,ECHL2S)="000",ECAC=$P($G(ECZNODE),U,6)
"RTN","ECXQSR",47,0)
 I ECAC D
"RTN","ECXQSR",48,0)
 .S ECHL=+$P($G(^SC(ECAC,0)),U,7),ECHL2=+$P($G(^(0)),U,18) I ECHL D
"RTN","ECXQSR",49,0)
 ..S ECHLS=$P($G(^DIC(40.7,+ECHL,0)),U,2),ECHL2S=$P($G(^DIC(40.7,+ECHL2,0)),U,2)
"RTN","ECXQSR",50,0)
 ..S ECHLS=$$RJ^XLFSTR(ECHLS,3,0),ECHL2S=$$RJ^XLFSTR(ECHL2S,3,0)
"RTN","ECXQSR",51,0)
 S ECDSS=ECHLS_ECHL2S
"RTN","ECXQSR",52,0)
 I ECXLOGIC>2003 D
"RTN","ECXQSR",53,0)
 .I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXQSR",54,0)
 S ECDU=$S(ECSTOP["A":$P(ECLINK,U),ECSTOP["S":$P(ECLINK,U,2),1:"")
"RTN","ECXQSR",55,0)
 Q:'ECDU
"RTN","ECXQSR",56,0)
 S ECDSSU=$G(^ECD(ECDU,0)),ECCS=+$P(ECDSSU,U,4),(ECO,ECM)=+$P(ECDSSU,U,3),ECXDSSD=$E($P(ECDSSU,U,5),1,10)
"RTN","ECXQSR",57,0)
 Q:'$O(^ACK(509850.6,ECDA,3,0))
"RTN","ECXQSR",58,0)
 ;Create local array of procedure codes and # of times each procedure
"RTN","ECXQSR",59,0)
 ; was performed.
"RTN","ECXQSR",60,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXQSR",61,0)
 S (ECDIA,ECXPPC,ECXPRV1,ECXPRV2,ECXPRV3,ECUN1NPI)=""
"RTN","ECXQSR",62,0)
 ;if QUASAR v2
"RTN","ECXQSR",63,0)
 I +ECXQV=2 D
"RTN","ECXQSR",64,0)
 .S ECXPRV1=$P(EC2NODE,U,7),ECXPRV2=$P(EC2NODE,U,3),ECXPRV3=$P(EC2NODE,U,5),ECPN=0
"RTN","ECXQSR",65,0)
 .S ECPR1NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV1,ECD)
"RTN","ECXQSR",66,0)
 .S:+ECPR1NPI'>0 ECPR1NPI="" S ECPR1NPI=$P(ECPR1NPI,U)
"RTN","ECXQSR",67,0)
 .S ECPR2NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV2,ECD)
"RTN","ECXQSR",68,0)
 .S:+ECPR2NPI'>0 ECPR2NPI="" S ECPR2NPI=$P(ECPR2NPI,U)
"RTN","ECXQSR",69,0)
 .S ECPR3NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV3,ECD)
"RTN","ECXQSR",70,0)
 .S:+ECPR3NPI'>0 ECPR3NPI="" S ECPR3NPI=$P(ECPR3NPI,U)
"RTN","ECXQSR",71,0)
 .F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",72,0)
 ..S XX=^ACK(509850.6,ECDA,3,ECPN,0),XX=$P(XX,U),XX=$P($G(^ACK(509850.4,XX,0)),U),ECXCPT=$E($$CPT^ECXUTL3(XX),1,5)
"RTN","ECXQSR",73,0)
 ..I ECXCPT]"" D
"RTN","ECXQSR",74,0)
 ...I '$D(LOC(ECXCPT)) S LOC(ECXCPT)=0_U_ECXPRV1
"RTN","ECXQSR",75,0)
 ...S $P(LOC(ECXCPT),U)=$P(LOC(ECXCPT),U)+1
"RTN","ECXQSR",76,0)
 .S ECIEN=$O(^ACK(509850.6,ECDA,1,0)),ECDIA=$P($G(^ICD9(+$G(^ACK(509850.6,ECDA,1,ECIEN,0)),0)),U)
"RTN","ECXQSR",77,0)
 .F I=1:1:4 S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'+ECIEN  D
"RTN","ECXQSR",78,0)
 ..S @("ECXICD9"_I)=$P($G(^ICD9(+$P(^ACK(509850.6,ECDA,1,ECIEN,0),U),0)),U)
"RTN","ECXQSR",79,0)
 ;if QUASAR v3
"RTN","ECXQSR",80,0)
 I +ECXQV=3 D
"RTN","ECXQSR",81,0)
 .N CPT,DIA,I,J,MOD,MOD1,P,STR,VOL,ECTP,ARY,ECP,ECPN
"RTN","ECXQSR",82,0)
 .S ECXPRV2=$G(^ACK(509850.6,ECDA,2.7,1,0)),ECXPRV3=$G(^ACK(509850.6,ECDA,2.7,2,0))
"RTN","ECXQSR",83,0)
 .S ECPN=0 F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",84,0)
 ..S CPT=^ACK(509850.6,ECDA,3,ECPN,0),ECXCPT=$P(CPT,U),ECTP=+$P(CPT,U,5),ECV=1,ECP=""
"RTN","ECXQSR",85,0)
 ..Q:ECXCPT=""
"RTN","ECXQSR",86,0)
 ..I ECTP D
"RTN","ECXQSR",87,0)
 ...S CPT=$G(^ACK(509850.6,ECDA,7,ECTP,0)),ECP=$P(CPT,U)
"RTN","ECXQSR",88,0)
 ...S ECP=$S(ECP<90000:$P($G(^EC(725,+ECP,0)),U,2)_"N",1:$P($G(^EC(725,+ECP,0)),U,2)_"L")
"RTN","ECXQSR",89,0)
 ...S VOL=+$P(CPT,U,2),ECXPRV1=$P(CPT,U,3)
"RTN","ECXQSR",90,0)
 ..I 'ECTP S VOL=+$P(CPT,U,3),ECXPRV1=$P(CPT,U,4)
"RTN","ECXQSR",91,0)
 ..S ECXCPT=$E($$CPT^ECXUTL3(ECXCPT),1,5),ECXMOD="",MOD=0
"RTN","ECXQSR",92,0)
 ..F  S MOD=$O(^ACK(509850.6,ECDA,3,ECPN,1,MOD)) Q:'MOD  D
"RTN","ECXQSR",93,0)
 ...S MOD1=+^ACK(509850.6,ECDA,3,ECPN,1,MOD,0) D:MOD1
"RTN","ECXQSR",94,0)
 ....S ECXMOD=ECXMOD_MOD1_";"
"RTN","ECXQSR",95,0)
 ..F I=1:1:$L(ECXMOD,";") I $G(ARY(ECXCPT))'[$P(ECXMOD,";",I) D
"RTN","ECXQSR",96,0)
 ...S ARY(ECXCPT)=$G(ARY(ECXCPT))_$P(ECXMOD,";",I)_";"
"RTN","ECXQSR",97,0)
 ..S:VOL ECV=VOL
"RTN","ECXQSR",98,0)
 ..S ECV=ECV+$G(LOC(ECXCPT)),LOC(ECXCPT)=ECV_U_ECXPRV1_U_ECP
"RTN","ECXQSR",99,0)
 .S ECIEN=0 F  S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'ECIEN  D
"RTN","ECXQSR",100,0)
 ..S DIA=^ACK(509850.6,ECDA,1,ECIEN,0),P=$P(DIA,U,2),P=$S(P=1:"P",1:"S")
"RTN","ECXQSR",101,0)
 ..S CNT=$G(STR(P))+1,STR(P,CNT)=$P($G(^ICD9(+DIA,0)),U),STR(P)=CNT
"RTN","ECXQSR",102,0)
 .S ECDIA=$G(STR("P",1))
"RTN","ECXQSR",103,0)
 .F I=1:1:4 Q:'$D(STR("P",I+1))  S @("ECXICD9"_I)=STR("P",I)
"RTN","ECXQSR",104,0)
 .S:ECDIA="" ECDIA=$G(STR("S",1)),I=2
"RTN","ECXQSR",105,0)
 .F J=I:1:4 Q:'$D(STR("S",J))  S @("ECXICD9"_J)=STR("S",J)
"RTN","ECXQSR",106,0)
 Q:('$D(LOC))!('$O(^ACK(509850.6,ECDA,1,0)))
"RTN","ECXQSR",107,0)
 ;- Ord Div, Contract St/End Dates, Contract Type placeholders for FY2002
"RTN","ECXQSR",108,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXQSR",109,0)
 ;set up Provider Person class
"RTN","ECXQSR",110,0)
 S (ECXCPT,ECXPPC1,ECXPPC2,ECXPPC3)=""
"RTN","ECXQSR",111,0)
 S:ECXPRV2'="" ECXPPC2=$$PRVCLASS^ECXUTL(ECXPRV2,ECD)
"RTN","ECXQSR",112,0)
 S:ECXPRV3'="" ECXPPC3=$$PRVCLASS^ECXUTL(ECXPRV3,ECD)
"RTN","ECXQSR",113,0)
 N DA,DIC,DIK,DR,FILEN,DIQ,XVAR,II,DI
"RTN","ECXQSR",114,0)
 F II=2,3 S XVAR="ECXPRV"_II I @XVAR'="" D
"RTN","ECXQSR",115,0)
 .S DA=@XVAR,(DIC,FILEN)=509850.3,DR=".01",DIQ="ECXQSR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXQSR",116,0)
 .S DA=ECXQSR(FILEN,DA,DR,"I"),(DIC,FILEN)=8930.3 D EN^DIQ1 S @XVAR=2_ECXQSR(FILEN,DA,DR,"I") K DA,DIC,DR,DIQ,ECXQSR
"RTN","ECXQSR",117,0)
 ; -Observation Patient Indicator (yes/no)
"RTN","ECXQSR",118,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXQSR",119,0)
 ; -CNH status (YES/NO)
"RTN","ECXQSR",120,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXQSR",121,0)
 ;get encounter classification
"RTN","ECXQSR",122,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC)="",ECXVISIT=$P($G(^ACK(509850.6,ECDA,6)),U,3)
"RTN","ECXQSR",123,0)
 I ECXVISIT'="" D
"RTN","ECXQSR",124,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXQSR",125,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE"))
"RTN","ECXQSR",126,0)
 .S ECXIR=$G(ECXVIST("IR")),ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXQSR",127,0)
 ; -Head and Neck Cancer Indicator
"RTN","ECXQSR",128,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXQSR",129,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXQSR",130,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXQSR",131,0)
 ; -Get national patient record flag Indicator if exist
"RTN","ECXQSR",132,0)
 D NPRF^ECXUTL5
"RTN","ECXQSR",133,0)
 ; -If no encounter number don't file record
"RTN","ECXQSR",134,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSS,)
"RTN","ECXQSR",135,0)
 Q:ECXENC=""
"RTN","ECXQSR",136,0)
 ;Loop through array of unique procedures. Create record in ECODE.
"RTN","ECXQSR",137,0)
 S CPT="" F  S CPT=$O(LOC(CPT)) Q:CPT=""  D
"RTN","ECXQSR",138,0)
 .S ECV=+$P(LOC(CPT),U),ECXCPT=$$CPT^ECXUTL3(CPT,$G(ARY(CPT)),ECV)
"RTN","ECXQSR",139,0)
 .S ECXPRV1=$P(LOC(CPT),U,2)
"RTN","ECXQSR",140,0)
 .S:ECXPRV1'="" ECXPPC1=$$PRVCLASS^ECXUTL(ECXPRV1,ECD),ECXPRV1=2_ECXPRV1
"RTN","ECXQSR",141,0)
 .S ECP=$P(LOC(CPT),U,3) I ECP="" S ECP=$$CPT^ECXUTL3(CPT,"",ECV)
"RTN","ECXQSR",142,0)
 .D FILE^ECXQSR1
"RTN","ECXQSR",143,0)
 K CPT,LOC
"RTN","ECXQSR",144,0)
 Q
"RTN","ECXQSR",145,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR",146,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR",147,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR",148,0)
 Q
"RTN","ECXQSR",149,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR",150,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXQSR1")
0^32^B9419721^n/a
"RTN","ECXQSR1",1,0)
ECXQSR1 ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ; 6/5/07 12:09pm
"RTN","ECXQSR1",2,0)
 ;;3.0;DSS EXTRACTS;**105**;Dec 22, 1997;Build 70
"RTN","ECXQSR1",3,0)
FILE ;file record in #727.825
"RTN","ECXQSR1",4,0)
 ;node0
"RTN","ECXQSR1",5,0)
 ;inst^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day ECDAY^
"RTN","ECXQSR1",6,0)
 ;DSS unit ECDU^^category ECPTTM^procedure ECP^volume ECV^cost center^
"RTN","ECXQSR1",7,0)
 ;ordering sec ^section^provider ECXPRV1^ECXPPC1^ECXPRV2^ECXPPC2^ECXPRV3^
"RTN","ECXQSR1",8,0)
 ;ECXPPC3^mov # ECXMN^treat spec ECXTS^time ECTIME^primary care team 
"RTN","ECXQSR1",9,0)
 ;ECPTTM^primary care provider ECPTPR^pce cpt code & modifers ECXCPT^
"RTN","ECXQSR1",10,0)
 ;primary icd-9 code ECDIA^secondary icd-9 #1 ECXICD91^secondary icd-9 
"RTN","ECXQSR1",11,0)
 ;#2 ECXICD92^secondary icd-9 #3 ECXICD93^secondary icd-9 #4 ECXICD94^
"RTN","ECXQSR1",12,0)
 ;agent orange ECXAST^radiation exposure ECRST^environmental
"RTN","ECXQSR1",13,0)
 ;contaminants ECEST^service connected ECSC^sent to pce^^dss identifier
"RTN","ECXQSR1",14,0)
 ;ECDSS^placeholder
"RTN","ECXQSR1",15,0)
 ;node1
"RTN","ECXQSR1",16,0)
 ;mpi ECXNPI^dss dept ECXDSSD^^^^placeholder 
"RTN","ECXQSR1",17,0)
 ;^assoc pc provider ECASPR^assoc pc prov person class 
"RTN","ECXQSR1",18,0)
 ;ECCLAS2^placeholder^divison ECXDIV^dom ECXDOM^
"RTN","ECXQSR1",19,0)
 ;enrollment category ECXCAT^enrollment status ECXSTAT^enrollment prior 
"RTN","ECXQSR1",20,0)
 ;ECXPRIOR^period of service ECXPOS^purple heart ECXPHI^observ pat ind 
"RTN","ECXQSR1",21,0)
 ;ECXOBS^encounter num ECXENC^ao loc ECXAOL^ord div ECXODIV^contr st dt 
"RTN","ECXQSR1",22,0)
 ;ECXCSDT^contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXQSR1",23,0)
 ;production division ECXPDIV^eligibility ECXELIG^ethnicity ECXETH^
"RTN","ECXQSR1",24,0)
 ;race1 ECXRC1^enrollment location ECXENRL^^enrollment priority 
"RTN","ECXQSR1",25,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient 
"RTN","ECXQSR1",26,0)
 ;type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXQSR1",27,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXQSR1",28,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator 
"RTN","ECXQSR1",29,0)
 ;ECXAO^environ contam ECXECE^head/neck ECXHNC^military sexual trauma 
"RTN","ECXQSR1",30,0)
 ;ECXMIL^radiation encoun ECXIR^nutrition dx(currently null)^OEF/OIF ECXOEF^
"RTN","ECXQSR1",31,0)
 ;OEF/OIF return date ECXOEFDT^assoc pc provider npi ECASNPI^
"RTN","ECXQSR1",32,0)
 ;primary care provider npi ECPTNPI^provider npi ECPR1NPI^
"RTN","ECXQSR1",33,0)
 ;provider #2 npi ECPR2NPI^provider #3 npi ECPR3NPI
"RTN","ECXQSR1",34,0)
 N DA,DIK
"RTN","ECXQSR1",35,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXQSR1",36,0)
 S ECODE=EC7_U_EC23_U
"RTN","ECXQSR1",37,0)
 S ECODE=ECODE_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECDAY_U_ECDU_U_U
"RTN","ECXQSR1",38,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECXPRV1_U_ECXPPC1_U
"RTN","ECXQSR1",39,0)
 S ECODE=ECODE_ECXPRV2_U_ECXPPC2_U_ECXPRV3_U_ECXPPC3_U_U
"RTN","ECXQSR1",40,0)
 S ECODE=ECODE_ECXMN_U_ECXTS_U_ECTIME_U_ECPTTM_U
"RTN","ECXQSR1",41,0)
 S ECODE=ECODE_ECPTPR_U_ECXCPT_U_ECDIA_U_ECXICD91_U_ECXICD92_U
"RTN","ECXQSR1",42,0)
 S ECODE=ECODE_ECXICD93_U_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXQSR1",43,0)
 S ECODE=ECODE_ECSC_U_"N"_U_U_ECDSS_U_U
"RTN","ECXQSR1",44,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U_U_ECASPR_U
"RTN","ECXQSR1",45,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDIV_U_ECXMST_U_ECXDOM_U
"RTN","ECXQSR1",46,0)
 S ECODE1=ECODE1_ECXDOB_U_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXQSR1",47,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXODIV_U_ECXCSDT_U_ECXCEDT_U
"RTN","ECXQSR1",48,0)
 S ECODE1=ECODE1_ECXCTYP_U_ECXCNH_U_ECXPDIV_U_ECXELIG_U_ECXHNCI_U_ECXETH_U
"RTN","ECXQSR1",49,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXQSR1",50,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL
"RTN","ECXQSR1",51,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXQSR1",52,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXQSR1",53,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXQSR1",54,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_$G(ECXOEF)_U_$G(ECXOEFDT)_U_$G(ECASNPI)_U_$G(ECPTNPI)_U_$G(ECPR1NPI)_U_$G(ECPR2NPI)_U_$G(ECPR3NPI)
"RTN","ECXQSR1",55,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXQSR1",56,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXQSR1",57,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXQSR1",58,0)
 Q
"RTN","ECXQSR1",59,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR1",60,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR1",61,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR1",62,0)
 Q
"RTN","ECXQSR1",63,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR1",64,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXRAD")
0^38^B33912770^B31411970
"RTN","ECXRAD",1,0)
ECXRAD ;ALB/JAP,BIR/PDW,PTD-Extract for Radiology ; 5/30/2007
"RTN","ECXRAD",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,16,24,33,39,46,71,84,92,105**;Dec 22, 1997;Build 70
"RTN","ECXRAD",3,0)
BEG ;entry point from option
"RTN","ECXRAD",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXRAD",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXRAD",6,0)
 Q
"RTN","ECXRAD",7,0)
 ;
"RTN","ECXRAD",8,0)
START ;start rad extract
"RTN","ECXRAD",9,0)
 S QFLG=0
"RTN","ECXRAD",10,0)
 K ECXDD D FIELD^DID(70.03,14,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXRAD",11,0)
 S ECXDFN="",ECDT=ECSD-.1,ECED1=ECED+.3
"RTN","ECXRAD",12,0)
 F  S ECDT=$O(^RADPT("AR",ECDT)) Q:ECDT>ECED1!(ECDT'>0)  D  Q:QFLG
"RTN","ECXRAD",13,0)
 .S ECXDFN=""
"RTN","ECXRAD",14,0)
 .F  S ECXDFN=$O(^RADPT("AR",ECDT,ECXDFN)) Q:ECXDFN=""  I '$D(^TMP("ECL",$J,ECXDFN)) D GET Q:QFLG
"RTN","ECXRAD",15,0)
 K ^TMP("ECL",$J)
"RTN","ECXRAD",16,0)
 Q
"RTN","ECXRAD",17,0)
 ;
"RTN","ECXRAD",18,0)
GET ;get data
"RTN","ECXRAD",19,0)
 N ECXIEN,X,SUB,TYPE,ECDOCPC,ECXIS,ECXISPC,ECXPRCL,ECXCSC,ECXUSRTN
"RTN","ECXRAD",20,0)
 S ^TMP("ECL",$J,ECXDFN)=""
"RTN","ECXRAD",21,0)
 ;with dfn get all exams within date range
"RTN","ECXRAD",22,0)
 S ECXMDT=ECSD-.1
"RTN","ECXRAD",23,0)
 F  S ECXMDT=$O(^RADPT(ECXDFN,"DT","B",ECXMDT)) Q:((ECXMDT>ECED1)!(ECXMDT=""))  D  Q:QFLG
"RTN","ECXRAD",24,0)
 .S ECXMDA=$O(^RADPT(ECXDFN,"DT","B",ECXMDT,"")) Q:ECXMDA=""
"RTN","ECXRAD",25,0)
 .S ECXIEN=+$P($G(^RADPT(ECXDFN,"DT",ECXMDA,"P",1,0)),U,11)
"RTN","ECXRAD",26,0)
 .S ECTM=$$ECXTIME^ECXUTL(ECXMDT) S:ECTM>235959 ECTM=235959
"RTN","ECXRAD",27,0)
 .S ECXDAY=$$ECXDATE^ECXUTL(ECXMDT,ECXYM)
"RTN","ECXRAD",28,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXMDT,"."),"1;3",.ECXPAT)
"RTN","ECXRAD",29,0)
 .Q:'OK
"RTN","ECXRAD",30,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXRAD",31,0)
 .;get emergency response indicator (FEMA)
"RTN","ECXRAD",32,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXRAD",33,0)
 .S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXMDT,"."),ECPROF)
"RTN","ECXRAD",34,0)
 .S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXRAD",35,0)
 .S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXRAD",36,0)
 .S X=$$INP^ECXUTL2(ECXDFN,ECXMDT),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXRAD",37,0)
 .S ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXRAD",38,0)
 .;
"RTN","ECXRAD",39,0)
 .;- Observation patient indicator (YES/NO)
"RTN","ECXRAD",40,0)
 .S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXRAD",41,0)
 .;for dfn & date get exam(s) ien
"RTN","ECXRAD",42,0)
 .S ECXMDA=""
"RTN","ECXRAD",43,0)
 .F  S ECXMDA=$O(^RADPT(ECXDFN,"DT","B",ECXMDT,ECXMDA)) Q:+ECXMDA=0  D
"RTN","ECXRAD",44,0)
 ..S ECXDIV=$P(^RADPT(ECXDFN,"DT",ECXMDA,0),U,3),ECLOC=$P(^(0),U,4),ECTY=$P(^(0),U,2)
"RTN","ECXRAD",45,0)
 ..;
"RTN","ECXRAD",46,0)
 ..;- Ordering stop code (based on imaging location)
"RTN","ECXRAD",47,0)
 ..S ECXORDST=$$GET1^DIQ(40.7,$$GET1^DIQ(79.1,$G(ECLOC),22,"I"),1)
"RTN","ECXRAD",48,0)
 ..;
"RTN","ECXRAD",49,0)
 ..;- Get ordering date using Imaging Order ptr to #75.1 in subfile 70.03
"RTN","ECXRAD",50,0)
 ..S ECXIEN=+$P($G(^RADPT(ECXDFN,"DT",ECXMDA,"P",1,0)),U,11)
"RTN","ECXRAD",51,0)
 ..S ECXORDDT=$$ECXDATE^ECXUTL($P($G(^RAO(75.1,ECXIEN,0)),U,16),ECXYM)
"RTN","ECXRAD",52,0)
 ..;
"RTN","ECXRAD",53,0)
 ..;- If no encounter number don't file record
"RTN","ECXRAD",54,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXMDT,ECXTS,ECXOBS,ECHEAD,ECTY,) Q:ECXENC=""
"RTN","ECXRAD",55,0)
 ..;procedures and modifiers for specific exam (case numbers)
"RTN","ECXRAD",56,0)
 ..;ward/clinic,service,provider,diagnostic code
"RTN","ECXRAD",57,0)
 ..S ECCN=0
"RTN","ECXRAD",58,0)
 ..F  S ECCN=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN)) Q:ECCN'>0  D
"RTN","ECXRAD",59,0)
 ...S ECCA=^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,0)
"RTN","ECXRAD",60,0)
 ...S ECXW=$P(ECCA,U,6),ECXW=$P($G(^DIC(42,+ECXW,44)),U)
"RTN","ECXRAD",61,0)
 ...S:ECXW="" ECXW=$P(ECCA,U,8)
"RTN","ECXRAD",62,0)
 ...S ECDOCNPI=$$NPI^XUSNPI("Individual_ID",$P(ECCA,U,14),ECDT)
"RTN","ECXRAD",63,0)
 ...S:+ECDOCNPI'>0 ECDOCNPI="" S ECDOCNPI=$P(ECDOCNPI,U)
"RTN","ECXRAD",64,0)
 ...S (ECXDSSD,ECXDSSP)=""
"RTN","ECXRAD",65,0)
 ...S ECS=$P(ECCA,U,7),ECDOC=ECPROF_$P(ECCA,U,14),ECDI=$P(ECCA,U,13),ECDOCPC=$$PRVCLASS^ECXUTL($P(ECCA,U,14),ECDT)
"RTN","ECXRAD",66,0)
 ...S ECPRO=$P(ECCA,U,2),ECSTAT=$P($G(^RA(72,+$P(ECCA,U,3),0)),U,3)
"RTN","ECXRAD",67,0)
 ...;get the primary interpreting staff and the person class DBIA #65
"RTN","ECXRAD",68,0)
 ...S ECXIS=$P(ECCA,U,15),ECXISPC=$$PRVCLASS^ECXUTL(ECXIS,ECDT)
"RTN","ECXRAD",69,0)
 ...S ECISNPI=$$NPI^XUSNPI("Individual_ID",ECXIS,ECDT)
"RTN","ECXRAD",70,0)
 ...S:+ECISNPI'>0 ECISNPI="" S ECISNPI=$P(ECISNPI,U)
"RTN","ECXRAD",71,0)
 ...;prefix interpreting radiologist with a "2" if not null
"RTN","ECXRAD",72,0)
 ...S ECXIS=$S(ECXIS:"2"_ECXIS,1:"")
"RTN","ECXRAD",73,0)
 ...;get the principal clinic ien DBIA #65
"RTN","ECXRAD",74,0)
 ...S ECXPRCL=$P(ECCA,U,8)
"RTN","ECXRAD",75,0)
 ...;get the clinic stop code from file #44
"RTN","ECXRAD",76,0)
 ...S ECXCSC=$$GET1^DIQ(40.7,$$GET1^DIQ(44,ECXPRCL,8,"I"),1)
"RTN","ECXRAD",77,0)
 ...Q:'ECPRO 
"RTN","ECXRAD",78,0)
 ...Q:+ECSTAT=0
"RTN","ECXRAD",79,0)
 ...;get CPT code & modifiers
"RTN","ECXRAD",80,0)
 ...S ECPT=+$P($G(^RAMIS(71,+ECPRO,0)),U,9),ECXCMOD=""
"RTN","ECXRAD",81,0)
 ...;quit if this is a 'parent' procedure
"RTN","ECXRAD",82,0)
 ...S TYPE=$P($G(^RAMIS(71,+ECPRO,0)),U,6)
"RTN","ECXRAD",83,0)
 ...Q:((ECPT=0)&(TYPE="P"))
"RTN","ECXRAD",84,0)
 ...;if site is using radiology with cpt modifiers then get them
"RTN","ECXRAD",85,0)
 ...K ARR,ERR D FIELD^DID(70.03,135,,"LABEL","ARR","ERR")
"RTN","ECXRAD",86,0)
 ...I $D(ARR("LABEL")) D
"RTN","ECXRAD",87,0)
 ....K ARR,ERR D FIELD^DID(70.03,135,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXRAD",88,0)
 ....Q:$D(ERR("DIERR"))
"RTN","ECXRAD",89,0)
 ....S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";") S ECMOD=0
"RTN","ECXRAD",90,0)
 ....Q:'$D(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB))
"RTN","ECXRAD",91,0)
 ....F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB,ECMOD)) Q:ECMOD'>0  S ECXCMOD=ECXCMOD_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",92,0)
 ...S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXRAD",93,0)
 ...;get procedure radiology modifiers
"RTN","ECXRAD",94,0)
 ...S ECMOD=0,ECMODS=""
"RTN","ECXRAD",95,0)
 ...F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,"M",ECMOD)) Q:ECMOD'>0  S ECMODS=ECMODS_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",96,0)
 ...S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXRAD",97,0)
 ...D FILE
"RTN","ECXRAD",98,0)
 Q
"RTN","ECXRAD",99,0)
 ;
"RTN","ECXRAD",100,0)
FILE ;file record
"RTN","ECXRAD",101,0)
 ;node0
"RTN","ECXRAD",102,0)
 ;rad div^dfn^ssn^name^in/out (ECXA)^day^cpt code^procedure^img loc^ward^
"RTN","ECXRAD",103,0)
 ;ser^diag code^req physician^modifiers^mov #^treat spec^time^
"RTN","ECXRAD",104,0)
 ;imaging type^primary care team^primary care provider
"RTN","ECXRAD",105,0)
 ;node1
"RTN","ECXRAD",106,0)
 ;mpi^dss dept^placeholder^placeholder^pc prov person class^
"RTN","ECXRAD",107,0)
 ;assoc pc provider^assoc pc prov person class^placeholder^dom^
"RTN","ECXRAD",108,0)
 ;observ pat ind^encounter num^ord stop code^ord date^division^
"RTN","ECXRAD",109,0)
 ;dss product ECXDSSP^requesting provider person class ECDOCPC^interp-
"RTN","ECXRAD",110,0)
 ;reting radiologist ECXIS^interpreting radiologist pc ECXISPC^princi-
"RTN","ECXRAD",111,0)
 ;pal clinic ECXPRCL^clinc stop code ECXCSC^emergency response indicator
"RTN","ECXRAD",112,0)
 ;(FEMA) ECXERI^assoc pc provider npi^interpreting rad npi^pc provider npi^req physician npi
"RTN","ECXRAD",113,0)
 N DA,DIK
"RTN","ECXRAD",114,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXRAD",115,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXRAD",116,0)
 S ECODE=ECODE_ECXDAY_U_ECXCPT_U_ECPRO_U_ECLOC_U_ECXW_U_ECS_U_ECDI_U
"RTN","ECXRAD",117,0)
 S ECODE=ECODE_ECDOC_U_ECMODS_U_ECXMN_U_ECXTS_U_ECTM_U_ECTY_U_ECPTTM_U
"RTN","ECXRAD",118,0)
 S ECODE=ECODE_ECPTPR_U
"RTN","ECXRAD",119,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_ECCLAS_U_ECASPR_U
"RTN","ECXRAD",120,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDST_U
"RTN","ECXRAD",121,0)
 S ECODE1=ECODE1_ECXORDDT_U_ECXPDIV_U
"RTN","ECXRAD",122,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_ECXDSSP_U_ECDOCPC
"RTN","ECXRAD",123,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXIS_U_ECXISPC_U_ECXPRCL_U_ECXCSC
"RTN","ECXRAD",124,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXRAD",125,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECASNPI_U_ECISNPI_U_ECPTNPI_U_ECDOCNPI
"RTN","ECXRAD",126,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXRAD",127,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXRAD",128,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXRAD",129,0)
 Q
"RTN","ECXRAD",130,0)
 ;
"RTN","ECXRAD",131,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXRAD",132,0)
 S ECHEAD="RAD"
"RTN","ECXRAD",133,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXRAD",134,0)
 Q
"RTN","ECXSCLD")
0^19^B37438531^B38077592
"RTN","ECXSCLD",1,0)
ECXSCLD ;BIR/DMA,CML-Enter, Print and Edit Entries in 728.44 ; 5/24/07 3:49pm
"RTN","ECXSCLD",2,0)
 ;;3.0;DSS EXTRACTS;**2,8,24,30,71,80,105**;Dec 22, 1997;Build 70
"RTN","ECXSCLD",3,0)
EN ;entry point from option
"RTN","ECXSCLD",4,0)
 ;load entries
"RTN","ECXSCLD",5,0)
 W !!,"This option creates local entries in the DSS CLINIC AND STOP CODES file.",!
"RTN","ECXSCLD",6,0)
 I '$D(^ECX(728.44)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",7,0)
 K ZTSAVE S ZTDESC="Gather Clinic stop codes for DSS",ZTRTN="START^ECXSCLD",ZTIO="" D ^%ZTLOAD
"RTN","ECXSCLD",8,0)
 Q
"RTN","ECXSCLD",9,0)
START ; entry point
"RTN","ECXSCLD",10,0)
 S EC=0,ECNT=0 F  S EC=$O(^SC(EC)) Q:'EC  I $D(^(EC,0)) S ECD=^(0),DAT=$G(^("I")) I $P(ECD,U,3)="C" D FIX
"RTN","ECXSCLD",11,0)
 K DIK S DIK="^ECX(728.44,",DIK(1)=".01^B" D ENALL^DIK
"RTN","ECXSCLD",12,0)
 ;S $P(^ECX(728.44,0),U,3,4)=ECL_U_ECNT
"RTN","ECXSCLD",13,0)
 K ZTDESC,EC,J,ECD,ECD2,ECL,ECS,ECS2,ECP
"RTN","ECXSCLD",14,0)
 S ZTREQ="@" Q
"RTN","ECXSCLD",15,0)
 ;
"RTN","ECXSCLD",16,0)
FIX ; get stop codes and default style for feeder key
"RTN","ECXSCLD",17,0)
 ; 1 if no credit stop code - 5 if credit stop code exists
"RTN","ECXSCLD",18,0)
 K ECD2,ECS2 I $D(^ECX(728.44,EC,0)) S ECD2=^(0) F ECS=2,3 S ECS2(ECS)=$P(ECD2,U,ECS)
"RTN","ECXSCLD",19,0)
 S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCLD",20,0)
 I $D(ECD2) D
"RTN","ECXSCLD",21,0)
 .I ID,ID'>DT I 'RD!(RD>DT) S:$P(ECD2,U,10)'=ID $P(ECD2,U,7)="" S $P(ECD2,U,10)=ID
"RTN","ECXSCLD",22,0)
 .I ID,RD,RD'>DT S:$P(ECD2,U,10) $P(ECD2,U,7)="" S $P(ECD2,U,10)=""
"RTN","ECXSCLD",23,0)
 .I ID,ID>DT S:$P(ECD2,U,10) $P(ECD2,U,7)="" S $P(ECD2,U,10)=""
"RTN","ECXSCLD",24,0)
 .I 'ID,$P(ECD2,U,10) S $P(ECD2,U,7)="",$P(ECD2,U,10)=""
"RTN","ECXSCLD",25,0)
 F ECS=7,18 S ECP=+$P(ECD,U,ECS),ECS(ECS)=$P($G(^DIC(40.7,ECP,0)),U,2)
"RTN","ECXSCLD",26,0)
 S ECDF=$S(ECS(18)]"":5,1:1) S:$P(ECD,U,17)="Y" ECDF=6 S:$G(^SC(EC,"OOS")) ECDF=6
"RTN","ECXSCLD",27,0)
 S ECL=EC,ECD=EC_U_ECS(7)_U_ECS(18)
"RTN","ECXSCLD",28,0)
 I '$D(ECD2) D
"RTN","ECXSCLD",29,0)
 .S $P(^ECX(728.44,EC,0),U,1,5)=ECD_U_ECS(7)_U_ECS(18),ECNT=ECNT+1,$P(^(0),U,6)=ECDF
"RTN","ECXSCLD",30,0)
 I $D(ECD2) D
"RTN","ECXSCLD",31,0)
 .S $P(ECD2,U,1,3)=ECD
"RTN","ECXSCLD",32,0)
 .I +ECS(7)'=+ECS2(2)!(+ECS(18)'=+ECS2(3)) S $P(ECD2,U,7)=""
"RTN","ECXSCLD",33,0)
 .S ^ECX(728.44,EC,0)=ECD2
"RTN","ECXSCLD",34,0)
 Q
"RTN","ECXSCLD",35,0)
 ;
"RTN","ECXSCLD",36,0)
PRINT ; print worksheet for updates
"RTN","ECXSCLD",37,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",38,0)
 W !!,"This option produces a worksheet of (A)ll DSS Clinic Stops or only the",!,"(U)nreviewed Clinic Stops that are awaiting approval.  Clinics that were"
"RTN","ECXSCLD",39,0)
 W !,"defined as ""inactive"" by MAS the last time the option ""Create DSS Clinic",!,"Stop Code File"" was run will be indicated with an ""*"".",!
"RTN","ECXSCLD",40,0)
 S DIR(0)="S^A:ALL;U:UNREVIEWED",DIR("A")="Enter ""A"" or ""U""",DIR("?",1)="Enter: ""A"" to print a worksheet of all DSS Clinic Stops,",DIR("?")="       ""U"" to print only the Clinic Stops that have not been approved."
"RTN","ECXSCLD",41,0)
 D ^DIR K DIR G END:$D(DIRUT) S ECALL=$E(Y)
"RTN","ECXSCLD",42,0)
 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","ECXSCLD",43,0)
 I $D(IO("Q")) K ZTSAVE S ZTDESC="DSS clinic stop code work sheet",ZTRTN="SPRINT^ECXSCLD",ZTSAVE("ECALL")="" D ^%ZTLOAD,HOME^%ZIS Q
"RTN","ECXSCLD",44,0)
 U IO
"RTN","ECXSCLD",45,0)
SPRINT ; queued entry to print work sheet
"RTN","ECXSCLD",46,0)
 S QFLG=0,$P(LN,"-",81)="",PG=0
"RTN","ECXSCLD",47,0)
 S ECDATE=$O(^ECX(728.44,"A1","")) I ECDATE S ECDATE=-ECDATE,ECDATE=$$FMTE^XLFDT(ECDATE,"5DF"),ECDATE=$TR(ECDATE," ","0")
"RTN","ECXSCLD",48,0)
 K ^TMP("EC",$J) F J=0:0 S J=$O(^ECX(728.44,J)) Q:'J  I $D(^ECX(728.44,J,0)),$S(ECALL="A":1,1:$P(^(0),U,7)="") S ECSD=^(0) I $D(^SC(J,0)) S ECSC=$P(^(0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",49,0)
 D HEAD S ECSC="" I $O(^TMP("EC",$J,ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! G END
"RTN","ECXSCLD",50,0)
 F J=1:1 S ECSC=$O(^TMP("EC",$J,ECSC)) Q:ECSC=""  S ECD=^(ECSC) D SHOWEM Q:QFLG
"RTN","ECXSCLD",51,0)
 I $E(IOST)="C",'QFLG D SS
"RTN","ECXSCLD",52,0)
 K ^TMP("EC",$J),J,ECSC,ECSD,ECDATE,QFLG,PG,LN,SS
"RTN","ECXSCLD",53,0)
 W:$Y @IOF D ^%ZISC S ZTREQ="@"
"RTN","ECXSCLD",54,0)
 Q
"RTN","ECXSCLD",55,0)
 ;
"RTN","ECXSCLD",56,0)
HEAD ; header for worksheet
"RTN","ECXSCLD",57,0)
 D SS Q:QFLG
"RTN","ECXSCLD",58,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"WORKSHEET FOR DSS CLINIC STOPS",?71,"Page: ",PG
"RTN","ECXSCLD",59,0)
 I ECDATE]"" W !,"(last reviewed on ",ECDATE,")"
"RTN","ECXSCLD",60,0)
 E  W !,"(NEVER REVIEWED)"
"RTN","ECXSCLD",61,0)
 W !
"RTN","ECXSCLD",62,0)
 W !!,?1,"CLINIC",?31,"STOP",?38,"CREDIT",?47,"DSS",?54,"DSS",?63,"ACTION",?71,"NAT'L"
"RTN","ECXSCLD",63,0)
 W !,?31,"CODE",?38,"STOP",?47,"STOP",?54,"CREDIT",?71,"CODE",!,?1,"(* - currently inactive)",?38,"CODE",?47,"CODE",?54,"CODE",!,LN Q
"RTN","ECXSCLD",64,0)
 ;
"RTN","ECXSCLD",65,0)
SHOWEM ; list clinics for worksheet
"RTN","ECXSCLD",66,0)
 I $Y+4>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD",67,0)
 W !!,$E(ECSC,1,31) W:$P(ECD,U,9)]"" "*" F J=1:1:5 W ?$P("31,38,47,54,66",",",J),$S($P(ECD,U,J):$P(ECD,U,J),J<3:"",1:"_____")
"RTN","ECXSCLD",68,0)
 S ECN=$P($G(^ECX(728.441,+$P(ECD,U,7),0)),U) W ?71,$S(ECN]"":ECN,1:"____")
"RTN","ECXSCLD",69,0)
 Q
"RTN","ECXSCLD",70,0)
SS ;SCROLL STOPS
"RTN","ECXSCLD",71,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXSCLD",72,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXSCLD",73,0)
 Q
"RTN","ECXSCLD",74,0)
 ;
"RTN","ECXSCLD",75,0)
EDIT ; put in DSS stopcodes and which one to send
"RTN","ECXSCLD",76,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",77,0)
 W ! S DIC=728.44,DIC(0)="QEAMZ" D ^DIC G END:Y<0 W !,"STOP CODE : ",$P(Y(0),U,2),!,"CREDIT STOP CODE : ",$P(Y(0),U,3)
"RTN","ECXSCLD",78,0)
 S DIE=DIC,DA=+Y,DR="3;4;5//1;S:X'=4 Y=6;7;6///"_DT_";8" D ^DIE S:$P(^ECX(728.44,DA,0),U,6)'=4 $P(^(0),U,8)="" S $P(^(0),U,7)="" K DIC,DIE,DA G EDIT
"RTN","ECXSCLD",79,0)
 ;
"RTN","ECXSCLD",80,0)
APPROVE ; approve current DSS Stop and Credit Stop codes
"RTN","ECXSCLD",81,0)
 W !!,"This option allows you to mark the current clinic entries in the CLINICS AND",!,"STOP CODES file (#728.44) as ""reviewed"".  Those entries will then be omitted"
"RTN","ECXSCLD",82,0)
 W !,"from the list printed from the ""Clinic and DSS Stop Codes Print"" when you",!,"choose to print only ""unreviewed"" clinics.",!
"RTN","ECXSCLD",83,0)
 K DIR S DIR(0)="Y",DIR("A",1)="Are you ready to approve the reviewed information provided by the",DIR("A")="""Clinic and DSS Stop Codes Print""",DIR("B")="NO"
"RTN","ECXSCLD",84,0)
 S DIR("?",1)="   Enter:"
"RTN","ECXSCLD",85,0)
 S DIR("?",2)="     ""YES"" if you concur with the ""Clinic and DSS Stop Codes Print"","
"RTN","ECXSCLD",86,0)
 S DIR("?",3)="     ""NO"" or <RET> if you do not want to approve the current information,"
"RTN","ECXSCLD",87,0)
 S DIR("?")="     ""^"" to exit option."
"RTN","ECXSCLD",88,0)
 D ^DIR K DIR I 'Y!($D(DIRUT)) G END
"RTN","ECXSCLD",89,0)
 W ! S ZTRTN="APPLOOP^ECXSCLD",ZTIO="",ZTDESC="Approve DSS stop codes for clinic extract" D ^%ZTLOAD W !!,"...approval queued" G END
"RTN","ECXSCLD",90,0)
 ;
"RTN","ECXSCLD",91,0)
APPLOOP ; queued entry to approve action codes
"RTN","ECXSCLD",92,0)
 F EC=0:0 S EC=$O(^ECX(728.44,EC)) Q:'EC  I $D(^(EC,0)) S DA=EC,DIE="^ECX(728.44,",DR="6///"_DT D ^DIE
"RTN","ECXSCLD",93,0)
 S ZTREQ="@" G END
"RTN","ECXSCLD",94,0)
END K X,Y,DA,DR,DIC,DIE,QFLG,PG,LN
"RTN","ECXSCLD",95,0)
 Q
"RTN","ECXSCLD",96,0)
 ;
"RTN","ECXSCLD",97,0)
LOOK ;queued entry to check for new clinics
"RTN","ECXSCLD",98,0)
 S ECD=$E(DT,1,5)-1-($E(DT,4,5)="01"*8800),ECD0=ECD_"00",ECXMISS=10,ECGRP="SCX" K ^TMP("ECXS",$J)
"RTN","ECXSCLD",99,0)
 F EC=0:0 S EC=$O(^SC(EC)) Q:'EC  I $D(^(EC,0)),$P(^(0),U,3)="C",'$D(^ECX(728.44,EC)) S DAT=$G(^SC(EC,"I")) D
"RTN","ECXSCLD",100,0)
 .S ID=+DAT,RD=$P(DAT,U,2) I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCLD",101,0)
 .S ^TMP("ECXS",$J,ECXMISS,0)=$J(EC,6)_"    "_$$LJ^XLFSTR($P(^SC(EC,0),U),40),ECXMISS=ECXMISS+1
"RTN","ECXSCLD",102,0)
 D ^ECXSCX1
"RTN","ECXSCLD",103,0)
 Q
"RTN","ECXSCX1")
0^14^B66163252^B67082358
"RTN","ECXSCX1",1,0)
ECXSCX1 ;ALB/JAP,BIR/DMA-Clinic Extract Message ; 4/11/07 3:26pm
"RTN","ECXSCX1",2,0)
 ;;3.0;DSS EXTRACTS;**8,28,24,27,29,30,31,33,84,92,105**;Dec 22, 1997;Build 70
"RTN","ECXSCX1",3,0)
EN ;entry point from ecxscx
"RTN","ECXSCX1",4,0)
 N ECX
"RTN","ECXSCX1",5,0)
 ;send missing clinic message
"RTN","ECXSCX1",6,0)
 S ECX=$O(^TMP($J,"ECXS","MISS",0)) D
"RTN","ECXSCX1",7,0)
 .Q:ECX=""
"RTN","ECXSCX1",8,0)
 .S XMSUB="MISSING CLINICS in File #728.44",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",9,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",10,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","MISS",ECX,0)=$P($T(MSG+ECX),";;",2)
"RTN","ECXSCX1",11,0)
 .S XMTEXT="^TMP($J,""ECXS"",""MISS""," D ^XMD
"RTN","ECXSCX1",12,0)
 ;send no division message
"RTN","ECXSCX1",13,0)
 S ECX=$O(^TMP($J,"ECXS","DIV",0)) D
"RTN","ECXSCX1",14,0)
 .Q:ECX=""
"RTN","ECXSCX1",15,0)
 .S XMSUB="CLINICS w/o DIVISION Data",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",16,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",17,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","DIV",ECX,0)=$P($T(MSG2+ECX),";;",2)
"RTN","ECXSCX1",18,0)
 .S XMTEXT="^TMP($J,""ECXS"",""DIV""," D ^XMD
"RTN","ECXSCX1",19,0)
 ;cleanup
"RTN","ECXSCX1",20,0)
 K ^TMP($J,"ECXS")
"RTN","ECXSCX1",21,0)
 Q
"RTN","ECXSCX1",22,0)
MSG ;text for missing clinic
"RTN","ECXSCX1",23,0)
 ;;The following clinics have not been entered into the CLINIC AND
"RTN","ECXSCX1",24,0)
 ;;STOP CODES file (#728.44).  If any listed clinic is currently
"RTN","ECXSCX1",25,0)
 ;;active, please use the options 'Create DSS Clinic Stop Code File'
"RTN","ECXSCX1",26,0)
 ;;and 'Enter/Edit DSS Stop Codes for Clinics' to update this file.
"RTN","ECXSCX1",27,0)
 ;;  
"RTN","ECXSCX1",28,0)
 ;
"RTN","ECXSCX1",29,0)
MSG2 ;text for missing division
"RTN","ECXSCX1",30,0)
 ;;The following clinics in the HOSPITAL LOCATION file (#44) have not
"RTN","ECXSCX1",31,0)
 ;;been assigned to a division from the MEDICAL CENTER DIVISION file 
"RTN","ECXSCX1",32,0)
 ;;(#40.8).  CLI extract records associated with these clinics have
"RTN","ECXSCX1",33,0)
 ;;been given a default Division identifier of "1".
"RTN","ECXSCX1",34,0)
 ;;
"RTN","ECXSCX1",35,0)
 ;
"RTN","ECXSCX1",36,0)
MISS ;load ^tmp if clinic missing from #728.44
"RTN","ECXSCX1",37,0)
 N DAT,ID,RD
"RTN","ECXSCX1",38,0)
 S (ID,RD)=""
"RTN","ECXSCX1",39,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",40,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",41,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",42,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",43,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",44,0)
 S ^TMP($J,"ECXS","MISS",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)_ECSC_"/"_ECCSC
"RTN","ECXSCX1",45,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",46,0)
 Q
"RTN","ECXSCX1",47,0)
 ;
"RTN","ECXSCX1",48,0)
NODIV ;load ^tmp if clinic w/o division
"RTN","ECXSCX1",49,0)
 N DAT,ID,RD
"RTN","ECXSCX1",50,0)
 S (ID,RD)=""
"RTN","ECXSCX1",51,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",52,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",53,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",54,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",55,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",56,0)
 S ^TMP($J,"ECXS","DIV",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)
"RTN","ECXSCX1",57,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",58,0)
 Q
"RTN","ECXSCX1",59,0)
 ;
"RTN","ECXSCX1",60,0)
FEEDER(ECXSC,ECXSD,ECXP1,ECXP2,ECXP3,ECXSEND,ECXDIV) ;get transmission style and feeder key variables
"RTN","ECXSCX1",61,0)
 ;feeder key = primary stop code_secondary stop code_length of appointment_national clinic code_noshow indicator
"RTN","ECXSCX1",62,0)
 ;   input
"RTN","ECXSCX1",63,0)
 ;   ECXSC = ien of clinic in file #44 (required)
"RTN","ECXSCX1",64,0)
 ;   ECXSD  = start date of extract date range (required)
"RTN","ECXSCX1",65,0)
 ;   ECXP1,ECXP2,ECXP3,ECXSEND passed by reference (required)
"RTN","ECXSCX1",66,0)
 ;   output (passed-by-reference variables)
"RTN","ECXSCX1",67,0)
 ;   ECXP1  = primary stop code
"RTN","ECXSCX1",68,0)
 ;   ECXP2  = secondary stop code
"RTN","ECXSCX1",69,0)
 ;   ECXP3  = field #7 of file #728.44
"RTN","ECXSCX1",70,0)
 ;   ECXSEND = field #5 of file #728.44
"RTN","ECXSCX1",71,0)
 ;   ECXDIV  = field #3.5 of file #44
"RTN","ECXSCX1",72,0)
 N ECSC,ECCSC,ECSD1,ECXNC,ECXMISS,CLIN,SC
"RTN","ECXSCX1",73,0)
 S (ECXP1,ECXP2)="000",ECXP3="0000"
"RTN","ECXSCX1",74,0)
 S ECXSEND=1,ECXDIV=0
"RTN","ECXSCX1",75,0)
 Q:+ECXSC=0
"RTN","ECXSCX1",76,0)
 ;get needed data from ^tmp
"RTN","ECXSCX1",77,0)
 I $D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",78,0)
 .S CLIN=^TMP($J,"ECXS","SC",ECXSC)
"RTN","ECXSCX1",79,0)
 .S ECXP1=$P(CLIN,U),ECXP2=$P(CLIN,U,2),ECXP3=$P(CLIN,U,3),ECXSEND=$P(CLIN,U,4),ECXDIV=$P(CLIN,U,5)
"RTN","ECXSCX1",80,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4) S:ECXDIV=0 ECXDIV=1
"RTN","ECXSCX1",81,0)
 ;otherwise, set needed data in ^tmp
"RTN","ECXSCX1",82,0)
 I '$D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",83,0)
 .;get division or send no division msg
"RTN","ECXSCX1",84,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4)
"RTN","ECXSCX1",85,0)
 .I ECXDIV=0 S SC=ECXSC D NODIV S ECXDIV=1
"RTN","ECXSCX1",86,0)
 .;get other data from file #44 if no #727.44 record; send missing clinic msg
"RTN","ECXSCX1",87,0)
 .I '$D(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",88,0)
 ..S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P(^(0),U,18)
"RTN","ECXSCX1",89,0)
 ..S SC=ECXSC,ECSD1=ECXSD D MISS
"RTN","ECXSCX1",90,0)
 ..S:ECSC ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2),ECXP1=$$RJ^XLFSTR(+ECXP1,3,0)
"RTN","ECXSCX1",91,0)
 .;otherwise get other data from file #728.44
"RTN","ECXSCX1",92,0)
 .S EC=$G(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",93,0)
 ..Q:EC=""
"RTN","ECXSCX1",94,0)
 ..S ECXSEND=$P(EC,U,6)
"RTN","ECXSCX1",95,0)
 ..Q:ECXSEND=6
"RTN","ECXSCX1",96,0)
 ..S ECSC=+$P(EC,U,4),ECCSC=+$P(EC,U,5)
"RTN","ECXSCX1",97,0)
 ..I 'ECSC S ECSC=+$P(EC,U,2),ECCSC=+$P(EC,U,3)
"RTN","ECXSCX1",98,0)
 ..I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXSCX1",99,0)
 ..;if primary stop not valid, use file #44 record
"RTN","ECXSCX1",100,0)
 ..I 'ECSC S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P($G(^(0)),U,18) I ECSC D
"RTN","ECXSCX1",101,0)
 ...S ECXP1=+$P($G(^DIC(40.7,ECSC,0)),U,2)
"RTN","ECXSCX1",102,0)
 ...S:ECCSC ECXP2=+$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXSCX1",103,0)
 ...S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXSCX1",104,0)
 .;for action code=1, secondary stop code is always "000"
"RTN","ECXSCX1",105,0)
 .I ECXSEND=1 S ECXP2="000"
"RTN","ECXSCX1",106,0)
 .;action code of 2 or 3 should not be used, but continue to follow v2t11 logic
"RTN","ECXSCX1",107,0)
 .I ECXSEND=2 S ECXP1=ECXP2,ECXP2="000"
"RTN","ECXSCX1",108,0)
 .;for action code=4, need to get national clinic code
"RTN","ECXSCX1",109,0)
 .I ECXSEND=4 D
"RTN","ECXSCX1",110,0)
 ..S ECXNC=+$P($G(^ECX(728.44,ECXSC,0)),U,8)
"RTN","ECXSCX1",111,0)
 ..I ECXNC S ECXNC=$P($G(^ECX(728.441,ECXNC,0)),U),ECXP3=$$RJ^XLFSTR(ECXNC,4,0)
"RTN","ECXSCX1",112,0)
 .;set data in ^tmp
"RTN","ECXSCX1",113,0)
 .S ^TMP($J,"ECXS","SC",ECXSC)=ECXP1_U_ECXP2_U_ECXP3_U_ECXSEND
"RTN","ECXSCX1",114,0)
 Q
"RTN","ECXSCX1",115,0)
 ;
"RTN","ECXSCX1",116,0)
VISIT(ECXDFN,ECXVISIT,ECXVIST,ECXERR) ;get visit specific data
"RTN","ECXSCX1",117,0)
 ;input  ECXVISIT  = pointer to file #9000010
"RTN","ECXSCX1",118,0)
 ;       ECXSVC  = sc percentage
"RTN","ECXSCX1",119,0)
 ;output ECXVSIT = data array
"RTN","ECXSCX1",120,0)
 ;       ECXERR  = 1 indicates error; otherwise, 0
"RTN","ECXSCX1",121,0)
 N AO,ARRAY,CM,CNT,CPT,DA,DATE,DA,DIQ,ICD,ICD9,IR,LEN,M,MOD,MST,NUM
"RTN","ECXSCX1",122,0)
 N PROV,PROVPC,REC,VAL,VISIT,X,Y,PGE
"RTN","ECXSCX1",123,0)
 S ECXERR=0,VISIT=ECXVISIT
"RTN","ECXSCX1",124,0)
 S (ECXVIST("AO"),ECXVIST("IR"),ECXVIST("PGE"),ECXVIST("HNC"))=""
"RTN","ECXSCX1",125,0)
 S (ECXVIST("MST"),ECXVIST("PROV"),ECXVIST("PROV CLASS"))=""
"RTN","ECXSCX1",126,0)
 S (ECXVIST("PROV NPI"),ECXVIST("SOURCE"))=""
"RTN","ECXSCX1",127,0)
 F I="P",1,2,3,4 S ECXVIST("ICD9"_I)=""
"RTN","ECXSCX1",128,0)
 F I=1:1:8 S ECXVIST("CPT"_I)=""
"RTN","ECXSCX1",129,0)
 D ENCEVENT^PXAPI(VISIT)
"RTN","ECXSCX1",130,0)
 I $O(^TMP("PXKENC",$J,VISIT,""))']"" K ECXVIST S ECXERR=1
"RTN","ECXSCX1",131,0)
 Q:ECXERR
"RTN","ECXSCX1",132,0)
 S DATE=$P($P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,0),U,1),".",1)
"RTN","ECXSCX1",133,0)
 S ECXVIST("SOURCE")=$P($G(^TMP("PXKENC",$J,VISIT,"VST",VISIT,812)),U,3)
"RTN","ECXSCX1",134,0)
 ;get icd9 codes upto 5; else use 799.9
"RTN","ECXSCX1",135,0)
 K ARY S ICD("P")=0,ICD("S")=0,(ARY,REC)=""
"RTN","ECXSCX1",136,0)
 F  S REC=$O(^TMP("PXKENC",$J,VISIT,"POV",REC)) Q:REC=""  D
"RTN","ECXSCX1",137,0)
 .S VAL=^TMP("PXKENC",$J,VISIT,"POV",REC,0) Q:'VAL
"RTN","ECXSCX1",138,0)
 .I $P(VAL,U,12)="P" D
"RTN","ECXSCX1",139,0)
 ..S:'$D(ARY("P",+VAL)) CNT=ICD("P")+1,ICD("P",CNT)=+VAL,ICD("P")=CNT
"RTN","ECXSCX1",140,0)
 ..S ARY("P",+VAL)=""
"RTN","ECXSCX1",141,0)
 .I $P(VAL,U,12)'="P" D
"RTN","ECXSCX1",142,0)
 ..S:'$D(ARY("S",+VAL)) CNT=ICD("S")+1,ICD("S",CNT)=+VAL,ICD("S")=CNT
"RTN","ECXSCX1",143,0)
 ..S ARY("S",+VAL)=""
"RTN","ECXSCX1",144,0)
 S CNT=0,ECXVIST("ICD9P")=$P($G(^ICD9(+$G(ICD("P",1),0),0)),U)
"RTN","ECXSCX1",145,0)
 F I=2:1 Q:'$D(ICD("P",I))  D  Q:CNT>4
"RTN","ECXSCX1",146,0)
 .S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$P($G(^ICD9(ICD("P",I),0)),U)
"RTN","ECXSCX1",147,0)
 I CNT<4 F I=1:1:8 Q:'$D(ICD("S",I))  D  Q:CNT>4
"RTN","ECXSCX1",148,0)
 .I '$D(ARY("P",ICD("S",I))) D
"RTN","ECXSCX1",149,0)
 ..S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$P($G(^ICD9(ICD("S",I),0)),U)
"RTN","ECXSCX1",150,0)
 ;get first provider designated as primary
"RTN","ECXSCX1",151,0)
 ;if no primary, then get first physician provider
"RTN","ECXSCX1",152,0)
 ;if no physician, then get first provider
"RTN","ECXSCX1",153,0)
 S (PROV,PROVPC)=""
"RTN","ECXSCX1",154,0)
 I $O(^TMP("PXKENC",$J,VISIT,"PRV",0)) D
"RTN","ECXSCX1",155,0)
 .S (REC,VAL)=0 D
"RTN","ECXSCX1",156,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",157,0)
 ...S:($P(^(REC,0),U,4)="P") VAL=+^(0)
"RTN","ECXSCX1",158,0)
 ...S PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",159,0)
 .I 'VAL S (REC,VAL)=0 D
"RTN","ECXSCX1",160,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",161,0)
 ...S (PROV,VAL)=+^(REC,0)
"RTN","ECXSCX1",162,0)
 ...S PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE) Q:PROVPC=""
"RTN","ECXSCX1",163,0)
 ...S NUM=$E(PROVPC,2,7) S:(NUM<110000)!(NUM>119999) VAL=0,PROVPC=""
"RTN","ECXSCX1",164,0)
 .I 'VAL D
"RTN","ECXSCX1",165,0)
 ..S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",0)) Q:('REC)!(VAL)
"RTN","ECXSCX1",166,0)
 ..S VAL=+^(REC,0),PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",167,0)
 .S:PROV]"" PROV="2"_PROV
"RTN","ECXSCX1",168,0)
 S ECXVIST("PROV")=PROV,ECXVIST("PROV CLASS")=PROVPC
"RTN","ECXSCX1",169,0)
 S ECXVIST("PROV NPI")=""
"RTN","ECXSCX1",170,0)
 ;get cpt codes upto 8 & modifiers upto 5
"RTN","ECXSCX1",171,0)
 S CNT=1,PROV=$E(PROV,2,99)
"RTN","ECXSCX1",172,0)
 D:$O(^TMP("PXKENC",$J,VISIT,"CPT",0))
"RTN","ECXSCX1",173,0)
 .S REC=0 D:PROV]""
"RTN","ECXSCX1",174,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>8
"RTN","ECXSCX1",175,0)
 ...S CPT="",NODE=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,12))
"RTN","ECXSCX1",176,0)
 ...Q:NODE=""
"RTN","ECXSCX1",177,0)
 ...S NOD1=$S($P(NODE,U,4)=PROV:^TMP("PXKENC",$J,VISIT,"CPT",REC,0),1:"")
"RTN","ECXSCX1",178,0)
 ...Q:$P(NOD1,U)=""
"RTN","ECXSCX1",179,0)
 ...S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",180,0)
 ...S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",181,0)
 ...F I=1:1:5 S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",182,0)
 ....S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",183,0)
 ....S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",184,0)
 ...S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q),CNT=CNT+1
"RTN","ECXSCX1",185,0)
 ...K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",186,0)
 ..Q:CNT>8
"RTN","ECXSCX1",187,0)
 .Q:CNT>8  S REC=0
"RTN","ECXSCX1",188,0)
 .F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>8
"RTN","ECXSCX1",189,0)
 ..S CPT="",NOD1=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,0))
"RTN","ECXSCX1",190,0)
 ..Q:$P(NOD1,U)=""
"RTN","ECXSCX1",191,0)
 ..S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",192,0)
 ..S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",193,0)
 ..F I=1:1:5 S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",194,0)
 ...S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",195,0)
 ...S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",196,0)
 ..S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q),CNT=CNT+1
"RTN","ECXSCX1",197,0)
 ..K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",198,0)
 ..Q:CNT>8
"RTN","ECXSCX1",199,0)
 S:ECXVIST("CPT1")="" ECXVIST("CPT1")=9919901
"RTN","ECXSCX1",200,0)
 ;ao, ir, mst, pge, hnc
"RTN","ECXSCX1",201,0)
 S (AO,IR,MST,PGE,HNC)=""
"RTN","ECXSCX1",202,0)
 I $D(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800)) D
"RTN","ECXSCX1",203,0)
 .S AO=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,2)
"RTN","ECXSCX1",204,0)
 .S IR=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,3),MST=$P(^(800),U,5)
"RTN","ECXSCX1",205,0)
 .S PGE=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,4),HNC=$P(^(800),U,6)
"RTN","ECXSCX1",206,0)
 .S ECXVIST("AO")=$S(AO=0:"N",AO=1:"Y",1:"")
"RTN","ECXSCX1",207,0)
 .S ECXVIST("IR")=$S(IR=0:"N",IR=1:"Y",1:"")
"RTN","ECXSCX1",208,0)
 .S ECXVIST("MST")=$S(MST=0:"N",MST=1:"Y",1:"")
"RTN","ECXSCX1",209,0)
 .S ECXVIST("PGE")=$S(PGE=0:"N",PGE=1:"Y",1:"")
"RTN","ECXSCX1",210,0)
 .S ECXVIST("HNC")=$S(HNC=0:"N",HNC=1:"Y",1:"")
"RTN","ECXSCX1",211,0)
 Q
"RTN","ECXSCX2")
0^30^B8581538^B8207597
"RTN","ECXSCX2",1,0)
ECXSCX2 ;ALB/ESD  DSS Clinic Extract Utilities (continued) ; 6/5/2007
"RTN","ECXSCX2",2,0)
 ;;3.0;DSS EXTRACTS;**39,46,49,71,84,92,105**;Dec 22, 1997;Build 70
"RTN","ECXSCX2",3,0)
 ;
"RTN","ECXSCX2",4,0)
 ;
"RTN","ECXSCX2",5,0)
INTPAT ;initialize patient variables
"RTN","ECXSCX2",6,0)
 S (ECXSSN,ECXPNM,ECPTPR,ECCLAS,ECPTNPI,ECASPR,ECCLAS2,ECASNPI,ECXZIP)=""
"RTN","ECXSCX2",7,0)
 S (ECPTTM,ECXVET,ECXRACE,ECXENRL,ECXMPI,ECXSEX)=""
"RTN","ECXSCX2",8,0)
 S (ECXDOB,ECXELIG,ECXPST,ECXPLOC,ECXRST,ECXAST,ECXMST,ECXSTATE)=""
"RTN","ECXSCX2",9,0)
 S (ECXCNTY,ECXATYP,ECXPVST,ECXMTST,ECXEST,ECXECE,ECXHNC)=""
"RTN","ECXSCX2",10,0)
 Q
"RTN","ECXSCX2",11,0)
 ;
"RTN","ECXSCX2",12,0)
PAT1(ECXDFN,ECXDATE,ECXERR)     ;get patient demographic data
"RTN","ECXSCX2",13,0)
 N ECXPAT,K,OK,X
"RTN","ECXSCX2",14,0)
 S ECXERR=0
"RTN","ECXSCX2",15,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;4;5",.ECXPAT)
"RTN","ECXSCX2",16,0)
 I 'OK S ECXERR=1 Q
"RTN","ECXSCX2",17,0)
 S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI")
"RTN","ECXSCX2",18,0)
 S ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXSCX2",19,0)
 S ECXVET=ECXPAT("VET"),ECXSVC=ECXPAT("SC%"),ECXRACE=ECXPAT("RACE")
"RTN","ECXSCX2",20,0)
 S ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXSCX2",21,0)
 S ECXRST=ECXPAT("IR STAT"),ECXAST=ECXPAT("AO STAT")
"RTN","ECXSCX2",22,0)
 S ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE")
"RTN","ECXSCX2",23,0)
 S ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP")
"RTN","ECXSCX2",24,0)
 S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXSCX2",25,0)
 ; changes for 2001
"RTN","ECXSCX2",26,0)
 S ECXPOS=ECXPAT("POS"),ECXPHI=ECXPAT("PHI")
"RTN","ECXSCX2",27,0)
 ;- Agent Orange location
"RTN","ECXSCX2",28,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXSCX2",29,0)
 ;OEF/OIF data
"RTN","ECXSCX2",30,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXSCX2",31,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXSCX2",32,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXSCX2",33,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSCX2",34,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSCX2",35,0)
 ; - Race and Ethnicity
"RTN","ECXSCX2",36,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXSCX2",37,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXSCX2",38,0)
 ; - Environmental Contaminants
"RTN","ECXSCX2",39,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXSCX2",40,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXSCX2",41,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXSCX2",42,0)
 Q
"RTN","ECXSCX2",43,0)
 ;
"RTN","ECXSCX2",44,0)
PAT2(ECXDFN,ECXDATE)    ;get date specific patient data
"RTN","ECXSCX2",45,0)
 N K,X
"RTN","ECXSCX2",46,0)
 ;get primary care data
"RTN","ECXSCX2",47,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXSCX2",48,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXSCX2",49,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXSCX2",50,0)
 ;get inpatient data
"RTN","ECXSCX2",51,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXTS=$P(X,U,3)
"RTN","ECXSCX2",52,0)
 S ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXSCX2",53,0)
 ;- set national patient record flag if exist
"RTN","ECXSCX2",54,0)
 D NPRF^ECXUTL5
"RTN","ECXSCX2",55,0)
 Q
"RTN","ECXSCX2",56,0)
 ;
"RTN","ECXSCX2",57,0)
FILE2(ECXFILE,EC7,ECODE) ;file record
"RTN","ECXSCX2",58,0)
 N DA,DIK,X S X=""
"RTN","ECXSCX2",59,0)
 F  S X=$O(ECODE(X)) Q:X=""  S ^ECX(ECXFILE,EC7,X)=ECODE(X)
"RTN","ECXSCX2",60,0)
 S DA=EC7,DIK="^ECX("_ECXFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSCX2",61,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSCX2",62,0)
 Q
"RTN","ECXSCX2",63,0)
 ;
"RTN","ECXSCX2",64,0)
CBOC(MDIV) ;Determine whether patient's facility was CBOC
"RTN","ECXSCX2",65,0)
 N LOCARR,DIC,DR,DIQ,DA,INST,FTYP
"RTN","ECXSCX2",66,0)
 S DIC=40.8,DA=MDIV,DR=".07",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",67,0)
 S INST=$G(LOCARR(40.8,MDIV,.07,"I")) I INST="" Q ""
"RTN","ECXSCX2",68,0)
 K LOCARR S DIC=4,DA=INST,DR="13",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",69,0)
 S FTYP=$G(LOCARR(4,INST,13,"I")) I FTYP="" Q ""
"RTN","ECXSCX2",70,0)
 K LOCARR S DIC=4.1,DA=FTYP,DR=".01",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",71,0)
 Q $S($G(LOCARR(4.1,FTYP,.01,"I"))="CBOC":"Y",1:"")
"RTN","ECXSCXN")
0^29^B57423281^B55157995
"RTN","ECXSCXN",1,0)
ECXSCXN ;ALB/JAP  Clinic Extract ; 6/5/07 11:55am
"RTN","ECXSCXN",2,0)
 ;;3.0;DSS EXTRACTS;**24,27,29,30,31,32,33,39,46,49,52,71,84,92,107,105**;Dec 22, 1997;Build 70
"RTN","ECXSCXN",3,0)
 ;
"RTN","ECXSCXN",4,0)
BEG ;entry point from option
"RTN","ECXSCXN",5,0)
 D SETUP Q:ECFILE=""  D ^ECXTRAC,^ECXKILL
"RTN","ECXSCXN",6,0)
 Q
"RTN","ECXSCXN",7,0)
 ;
"RTN","ECXSCXN",8,0)
START ;entry point from taskmgr
"RTN","ECXSCXN",9,0)
 N DIC,EXNUM,I,LOCARR,OUT,P1,P2,P3,PROCESS,SOURCE,STOP,STAT,TOSEND
"RTN","ECXSCXN",10,0)
 N TIU,X,Y,ECXNPRFI
"RTN","ECXSCXN",11,0)
 F I=1:1:8 S @("ECXCPT"_I)=""
"RTN","ECXSCXN",12,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXSCXN",13,0)
 S (OUT,QFLG,ECRN)=0,(ECXICD9P,ECXOBI)=""
"RTN","ECXSCXN",14,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",15,0)
 ;get ien for tiu in file #839.7
"RTN","ECXSCXN",16,0)
 S DIC="^PX(839.7,",DIC(0)="X",X="TEXT INTEGRATION UTILITIES"
"RTN","ECXSCXN",17,0)
 D ^DIC S TIU=+Y,ECED=ECED+.3,ECXCLIN=0 K DIC,Y
"RTN","ECXSCXN",18,0)
 ;get clinic default appt length, type, division
"RTN","ECXSCXN",19,0)
 F  S ECXCLIN=$O(^SC(ECXCLIN)) Q:'ECXCLIN  D
"RTN","ECXSCXN",20,0)
 .K LOCARR S DIC=44,DA=ECXCLIN,DR="2;3.5;1912",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",21,0)
 .D EN^DIQ1
"RTN","ECXSCXN",22,0)
 .Q:$G(LOCARR(44,ECXCLIN,2,"I"))'="C"
"RTN","ECXSCXN",23,0)
 .S ALEN=+$G(LOCARR(44,ECXCLIN,1912,"I"))
"RTN","ECXSCXN",24,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=ALEN,ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",25,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=^TMP($J,"ECXCL",ECXCLIN)_"^"_ALEN_"^"_$G(LOCARR(44,ECXCLIN,2,"I"))_"^"_+$G(LOCARR(44,ECXCLIN,3.5,"I"))
"RTN","ECXSCXN",26,0)
 .D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",27,0)
 .K P1,P2,P3,TOSEND,ECXDIV
"RTN","ECXSCXN",28,0)
 ;get from file #44 any no-shows & get encounters from #409.68
"RTN","ECXSCXN",29,0)
 D NOSHOW^ECXSCXN1(ECSD1,ECED),ENCNTR(ECSD1,ECED)
"RTN","ECXSCXN",30,0)
 ;send missing clinic msg
"RTN","ECXSCXN",31,0)
 D:$D(^TMP($J,"ECXS")) EN^ECXSCX1
"RTN","ECXSCXN",32,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",33,0)
 Q
"RTN","ECXSCXN",34,0)
 ;
"RTN","ECXSCXN",35,0)
ENCNTR(ECSD1,ECED) ;search file #409.68 for encounter data
"RTN","ECXSCXN",36,0)
 N CHKOUT,ECD,JJ,K,OUT,PNODE,PP,STAT,STOP,MDIV
"RTN","ECXSCXN",37,0)
 S ECD=ECSD1
"RTN","ECXSCXN",38,0)
 F  S ECD=$O(^SCE("B",ECD)) Q:('ECD!(ECD>ECED))!(QFLG)  S ECXIEN=0 D
"RTN","ECXSCXN",39,0)
 .F  S ECXIEN=$O(^SCE("B",ECD,ECXIEN)) Q:'ECXIEN  D  Q:QFLG
"RTN","ECXSCXN",40,0)
 ..Q:'$D(^SCE(ECXIEN,0))
"RTN","ECXSCXN",41,0)
 ..D INTPAT^ECXSCX2 K LOCARR S DIC=409.68,DA=ECXIEN
"RTN","ECXSCXN",42,0)
 ..S DR=".01;.02;.03;.04;.05;.06;.07;.08;.11;.12;.13",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",43,0)
 ..D EN^DIQ1
"RTN","ECXSCXN",44,0)
 ..S ECXTI=$P($$FMTE^XLFDT(+$G(LOCARR(409.68,ECXIEN,.01,"I")),1),"@",2)
"RTN","ECXSCXN",45,0)
 ..S ECXTI=$E(($TR(ECXTI,":","")_"000000"),1,6)
"RTN","ECXSCXN",46,0)
 ..S:ECXTI="000000" ECXTI="000300" S MDIV=+$G(LOCARR(409.68,ECXIEN,.11,"I"))
"RTN","ECXSCXN",47,0)
 ..S STOP=+$G(LOCARR(409.68,ECXIEN,.03,"I"))
"RTN","ECXSCXN",48,0)
 ..S CHKOUT=+$G(LOCARR(409.68,ECXIEN,.07,"I"))
"RTN","ECXSCXN",49,0)
 ..S PROCESS=+$G(LOCARR(409.68,ECXIEN,.08,"I"))
"RTN","ECXSCXN",50,0)
 ..S STAT=$G(LOCARR(409.68,ECXIEN,.12,"I"))
"RTN","ECXSCXN",51,0)
 ..S ECXDFN=+$G(LOCARR(409.68,ECXIEN,.02,"I"))
"RTN","ECXSCXN",52,0)
 ..Q:(ECXDFN=0)!('CHKOUT)
"RTN","ECXSCXN",53,0)
 ..S:STAT="" STAT="ZZ" S STAT=";"_STAT_";"
"RTN","ECXSCXN",54,0)
 ..Q:";3;4;5;6;7;9;10;13;"[STAT
"RTN","ECXSCXN",55,0)
 ..Q:('STOP)!(PROCESS=4)!(+$G(LOCARR(409.68,ECXIEN,.06,"I")))
"RTN","ECXSCXN",56,0)
 ..S ECXDATE=+$G(LOCARR(409.68,ECXIEN,.01,"I"))
"RTN","ECXSCXN",57,0)
 ..S ECXCLIN=+$G(LOCARR(409.68,ECXIEN,.04,"I"))
"RTN","ECXSCXN",58,0)
 ..Q:$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,3)'="C"
"RTN","ECXSCXN",59,0)
 ..S ECXVISIT=+$G(LOCARR(409.68,ECXIEN,.05,"I"))
"RTN","ECXSCXN",60,0)
 ..S ECXENEL=+$G(LOCARR(409.68,ECXIEN,.13,"I"))
"RTN","ECXSCXN",61,0)
 ..Q:'ECXVISIT
"RTN","ECXSCXN",62,0)
 ..S ECXERR=0
"RTN","ECXSCXN",63,0)
 ..D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",64,0)
 ..D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",65,0)
 ..Q:TOSEND=6
"RTN","ECXSCXN",66,0)
 ..K LOCARR S DIC=40.7,DA=STOP,DR="1",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",67,0)
 ..S ECXSTOP=$$RJ^XLFSTR($G(LOCARR(40.7,STOP,1,"I")),3,0)
"RTN","ECXSCXN",68,0)
 ..;get date specific patient data
"RTN","ECXSCXN",69,0)
 ..D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",70,0)
 ..;get national patient record flag if exist
"RTN","ECXSCXN",71,0)
 ..D NPRF^ECXUTL5
"RTN","ECXSCXN",72,0)
 ..;get visit specific data
"RTN","ECXSCXN",73,0)
 ..S ECXERR=0 D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",74,0)
 ..F I=1:1:8 S @("ECXCPT"_I)=$G(ECXVIST("CPT"_I))
"RTN","ECXSCXN",75,0)
 ..S ECXICD9P=$G(ECXVIST("ICD9P"))
"RTN","ECXSCXN",76,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=$G(ECXVIST("ICD9"_I))
"RTN","ECXSCXN",77,0)
 ..S SOURCE=ECXVIST("SOURCE"),ECXAO=ECXVIST("AO"),ECXIR=ECXVIST("IR")
"RTN","ECXSCXN",78,0)
 ..S ECXMIL=ECXVIST("MST"),ECXPROV=ECXVIST("PROV")
"RTN","ECXSCXN",79,0)
 ..S ECPRNPI=$$NPI^XUSNPI("Individual_ID",ECXPROV,ECXDATE)
"RTN","ECXSCXN",80,0)
 ..S:+ECPRNPI'>0 ECPRNPI="" S ECPRNPI=$P(ECPRNPI,U)
"RTN","ECXSCXN",81,0)
 ..S ECXPROVP=ECXVIST("PROV CLASS"),ECXPROVN=ECXVIST("PROV NPI")
"RTN","ECXSCXN",82,0)
 ..S ECXECE=ECXVIST("PGE"),ECXHNC=ECXVIST("HNC")
"RTN","ECXSCXN",83,0)
 ..K LOCARR S DIC=8,DA=ECXENEL,DR="8",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",84,0)
 ..S ECXENEL=+$G(LOCARR(8,ECXENEL,8,"I"))
"RTN","ECXSCXN",85,0)
 ..S:ECXENEL ECXENEL=$$ELIG^ECXUTL3(ECXENEL,ECXSVC)
"RTN","ECXSCXN",86,0)
 ..S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")  ;is cboc facility?
"RTN","ECXSCXN",87,0)
 ..;setup feeder key and file in extract records
"RTN","ECXSCXN",88,0)
 ..S (ECXKEY,ECXDSSD)=""
"RTN","ECXSCXN",89,0)
 ..;xray (105) or lab (108)
"RTN","ECXSCXN",90,0)
 ..I (ECXSTOP=105)!(ECXSTOP=108) D  Q
"RTN","ECXSCXN",91,0)
 ...S ECXKEY=ECXSTOP_"00003000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",92,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE       ;- Don't file rec if no encounter num
"RTN","ECXSCXN",93,0)
 ..;appointments
"RTN","ECXSCXN",94,0)
 ..I PROCESS=1 D  Q     ;get appt length
"RTN","ECXSCXN",95,0)
 ...S (ALEN,JJ,OUT)=0
"RTN","ECXSCXN",96,0)
 ...F  S JJ=$O(^SC(ECXCLIN,"S",ECXDATE,JJ)) Q:('JJ)!(OUT)  S K=0 D
"RTN","ECXSCXN",97,0)
 ....F  S K=$O(^SC(ECXCLIN,"S",ECXDATE,JJ,K)) Q:('K)!(OUT)  D
"RTN","ECXSCXN",98,0)
 .....S ECXOBI=$G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,"OB")),PP=$P($G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,0)),U)
"RTN","ECXSCXN",99,0)
 .....S:PP=ECXDFN OUT=1,ALEN=$P(^(0),U,2),ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",100,0)
 .....S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",101,0)
 ....S ECXSTOP=P1
"RTN","ECXSCXN",102,0)
 ....S PNODE=$G(^DPT(ECXDFN,"S",ECXDATE,0)),ECXPVST=$P(PNODE,U,7),ECXATYP=$P(PNODE,U,16)  ;Get purpose of visit & appt type
"RTN","ECXSCXN",103,0)
 ....I TOSEND'=3 D
"RTN","ECXSCXN",104,0)
 .....S ECXKEY=P1_P2_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",105,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",106,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",107,0)
 .....S ECXKEY=P1_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",108,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",109,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",110,0)
 .....S ECXKEY=P2_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",111,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",112,0)
 ..I PROCESS=2 D  Q
"RTN","ECXSCXN",113,0)
 ...S ALEN=0
"RTN","ECXSCXN",114,0)
 ...I SOURCE=TIU S ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",115,0)
 ...S:+ALEN=0 ALEN="030" S ECXKEY=P1_P2_ALEN_P3_"0",ECXSTOP=P1
"RTN","ECXSCXN",116,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",117,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",118,0)
 ..;dispositions
"RTN","ECXSCXN",119,0)
 ..I PROCESS=3 D  Q
"RTN","ECXSCXN",120,0)
 ...S ECXKEY=ECXSTOP_"47906000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",121,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",122,0)
 Q
"RTN","ECXSCXN",123,0)
 ;
"RTN","ECXSCXN",124,0)
FILE ;record setup for file #727.827
"RTN","ECXSCXN",125,0)
 N STR
"RTN","ECXSCXN",126,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get production division
"RTN","ECXSCXN",127,0)
 S EC7=$O(^ECX(727.827,999999999),-1),EC7=EC7+1
"RTN","ECXSCXN",128,0)
 S STR(0)=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSCXN",129,0)
 S STR(0)=STR(0)_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXKEY_U_ECXOBI_U
"RTN","ECXSCXN",130,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXSCXN",131,0)
 N ECXDATA
"RTN","ECXSCXN",132,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXSCXN",133,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXSCXN",134,0)
 ;done
"RTN","ECXSCXN",135,0)
 S STR(0)=STR(0)_ECXCLIN_U_ECXTS_U_ECXTI_U_ECPTTM_U_ECPTPR_U_ECCLAS_U
"RTN","ECXSCXN",136,0)
 S STR(0)=STR(0)_ECXPROV_U_ECXPROVP_U_ECXCPT1_U_ECXCPT2_U_ECXCPT3_U
"RTN","ECXSCXN",137,0)
 S STR(0)=STR(0)_ECXCPT4_U_ECXCPT5_U
"RTN","ECXSCXN",138,0)
 S STR(1)=ECXCPT6_U_ECXCPT7_U_ECXCPT8_U_ECXICD9P_U_ECXICD91_U_ECXICD92_U
"RTN","ECXSCXN",139,0)
 S STR(1)=STR(1)_ECXICD93_U_ECXICD94_U_ECXDOB_U_ECXELIG_U_ECXVET_U
"RTN","ECXSCXN",140,0)
 S STR(1)=STR(1)_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXIR_U_ECXAST_U
"RTN","ECXSCXN",141,0)
 S STR(1)=STR(1)_ECXAO_U_ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U
"RTN","ECXSCXN",142,0)
 S STR(1)=STR(1)_$G(ECXPCPNP)_U_U_ECXENEL_U_ECXMST_U
"RTN","ECXSCXN",143,0)
 S STR(1)=STR(1)_ECXMIL_U_U_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXSCXN",144,0)
 S STR(1)=STR(1)_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXSCXN",145,0)
 S STR(2)=ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXPOS_U_ECXOBS_U_ECXENC_U
"RTN","ECXSCXN",146,0)
 S STR(2)=STR(2)_ECXAOL_U_ECXPDIV_U_ECXATYP_U_ECXPVST_U_ECXMTST_U
"RTN","ECXSCXN",147,0)
 S STR(2)=STR(2)_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXSCXN",148,0)
 I ECXLOGIC>2003 S STR(2)=STR(2)_U_ECXCBOC
"RTN","ECXSCXN",149,0)
 I ECXLOGIC>2004 S STR(2)=STR(2)_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXSCXN",150,0)
 I ECXLOGIC>2005 S STR(2)=STR(2)_U_ECXEST_U_ECXECE
"RTN","ECXSCXN",151,0)
 I ECXLOGIC>2006 S STR(2)=STR(2)_U_ECXERI_U_ECXHNC
"RTN","ECXSCXN",152,0)
 I ECXLOGIC>2007 S STR(2)=STR(2)_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_$G(ECPRNPI)
"RTN","ECXSCXN",153,0)
 D FILE2^ECXSCX2(727.827,EC7,.STR)
"RTN","ECXSCXN",154,0)
 S ECRN=ECRN+1,$P(^ECX(727.827,0),U,3)=EC7
"RTN","ECXSCXN",155,0)
 Q
"RTN","ECXSCXN",156,0)
 ;
"RTN","ECXSCXN",157,0)
SETUP ;set required input for ECXTRAC
"RTN","ECXSCXN",158,0)
 S ECHEAD="CLI"
"RTN","ECXSCXN",159,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCXN",160,0)
 Q
"RTN","ECXSCXN1")
0^50^B9414223^B9561025
"RTN","ECXSCXN1",1,0)
ECXSCXN1 ;ALB/JAP  Clinic Extract No Shows; 8/28/02 1:11pm ; 9/6/07 3:17pm
"RTN","ECXSCXN1",2,0)
 ;;3.0;DSS EXTRACTS;**71,105**;Dec 22, 1997;Build 70
"RTN","ECXSCXN1",3,0)
NOSHOW(ECXSD,ECXED) ;get noshows from file #44
"RTN","ECXSCXN1",4,0)
 ;      ECXSD  = start date, ECXED  = end date
"RTN","ECXSCXN1",5,0)
 N ALEN,CLIN,JDATE,JJ,NODE,NOSHOW,PP,STAT,MDIV
"RTN","ECXSCXN1",6,0)
 S CLIN=0
"RTN","ECXSCXN1",7,0)
 F  S CLIN=$O(^TMP($J,"ECXCL",CLIN)) Q:'CLIN  D
"RTN","ECXSCXN1",8,0)
 .Q:$P($G(^TMP($J,"ECXCL",CLIN)),U,3)'="C"
"RTN","ECXSCXN1",9,0)
 .S (P1,P2,P3)=""
"RTN","ECXSCXN1",10,0)
 .D FEEDER^ECXSCX1(CLIN,ECXSD,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN1",11,0)
 .Q:TOSEND=6
"RTN","ECXSCXN1",12,0)
 .;find appts in date range
"RTN","ECXSCXN1",13,0)
 .S JDATE=ECXSD,(ALEN,NOSHOW)=""
"RTN","ECXSCXN1",14,0)
 .F  S JDATE=$O(^SC(CLIN,"S",JDATE)) Q:'JDATE  Q:JDATE>ECXED  D
"RTN","ECXSCXN1",15,0)
 ..S ECXDATE=JDATE,JJ=0,ECXTI=$P($$FMTE^XLFDT(JDATE,1),"@",2)
"RTN","ECXSCXN1",16,0)
 ..S ECXTI=$E(($TR(ECXTI,":","")_"000000"),1,6)
"RTN","ECXSCXN1",17,0)
 ..S:ECXTI="000000" ECXTI="000300"
"RTN","ECXSCXN1",18,0)
 ..;get noshows only - no data in check-in/check-out node
"RTN","ECXSCXN1",19,0)
 ..F  S JJ=$O(^SC(CLIN,"S",JDATE,JJ)) Q:'JJ  D
"RTN","ECXSCXN1",20,0)
 ...S K=0
"RTN","ECXSCXN1",21,0)
 ...F  S K=$O(^SC(CLIN,"S",JDATE,JJ,K)) Q:'K  D
"RTN","ECXSCXN1",22,0)
 ....S PP=$G(^SC(CLIN,"S",JDATE,JJ,K,0)),ECXDFN=$P(PP,U) Q:ECXDFN=""
"RTN","ECXSCXN1",23,0)
 ....S NODE=$G(^DPT(ECXDFN,"S",JDATE,0)),MDIV=$P($G(^SC(CLIN,0)),U,15)
"RTN","ECXSCXN1",24,0)
 ....Q:(NODE="")!($P(NODE,U)'=CLIN)
"RTN","ECXSCXN1",25,0)
 ....S ECXOBI=$G(^SC(CLIN,"S",JDATE,JJ,K,"OB")),STAT=$P(NODE,U,2)
"RTN","ECXSCXN1",26,0)
 ....S NOSHOW=$S(STAT="N":"N",STAT="NA":"N",1:"")
"RTN","ECXSCXN1",27,0)
 ....Q:NOSHOW=""  D INTPAT^ECXSCX2 S ECXERR=0
"RTN","ECXSCXN1",28,0)
 ....D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN1",29,0)
 ....S ALEN=$P(PP,U,2),ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN1",30,0)
 ....D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN1",31,0)
 ....S ECXPVST=$P(NODE,U,7),ECXATYP=$P(NODE,U,16)  ;Get POV & appt type
"RTN","ECXSCXN1",32,0)
 ....S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",CLIN)),U,2)
"RTN","ECXSCXN1",33,0)
 ....S ECXCLIN=CLIN,ECXSTOP=P1
"RTN","ECXSCXN1",34,0)
 ....S:ECXCPT1="" ECXCPT1="9919901"
"RTN","ECXSCXN1",35,0)
 ....S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")
"RTN","ECXSCXN1",36,0)
 ....S (ECXDSSD,ECXENEL,ECXIR,ECXAO,ECXMIL,ECXPROV,ECXPROVP,ECXPROVN)=""
"RTN","ECXSCXN1",37,0)
 ....I TOSEND'=3 D
"RTN","ECXSCXN1",38,0)
 .....S ECXKEY=P1_P2_ALEN_P3_NOSHOW,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN1",39,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",40,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN1",41,0)
 .....S ECXKEY=P1_"000"_ALEN_P3_NOSHOW,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN1",42,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",43,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN1",44,0)
 .....S ECXKEY=P2_"000"_ALEN_P3_NOSHOW,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN1",45,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",46,0)
 ....;create a record for noshow appended ekg. The code was removed for CTX-0604-70970 CLI Extract Problem EXPANDED to NoShows
"RTN","ECXSCXN1",47,0)
 Q
"RTN","ECXSURG")
0^35^B47425322^B59263741
"RTN","ECXSURG",1,0)
ECXSURG ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ; 11/20/07 8:13am
"RTN","ECXSURG",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,25,24,33,39,41,42,46,50,71,84,92,99,105**;Dec 22, 1997;Build 70
"RTN","ECXSURG",3,0)
BEG ;entry point from option
"RTN","ECXSURG",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSURG",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSURG",6,0)
 Q
"RTN","ECXSURG",7,0)
 ;
"RTN","ECXSURG",8,0)
START ;
"RTN","ECXSURG",9,0)
 S QFLG=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXSURG",10,0)
 F  S ECD=$O(^SRF("AC",ECD)),ECD0=0 Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXSURG",11,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXSURG",12,0)
 ..I $D(^SRF(ECD0,0)) S EC=^SRF(ECD0,0),ECXDFN=+$P(EC,U),ECXVISIT=$P(EC,U,15) D STUFF Q:QFLG
"RTN","ECXSURG",13,0)
 Q
"RTN","ECXSURG",14,0)
 ;
"RTN","ECXSURG",15,0)
STUFF ;gather data
"RTN","ECXSURG",16,0)
 N J,X,Y,PP,DATA1,DATA2,DATAOP,ARR,ERR,SUB,MOD,ECXNONL,ECXSTOP,TIMEDIF
"RTN","ECXSURG",17,0)
 N ECPRO,ECXORCT,ECXPTHA,ECXNPRFI,ECXPA,ECXPAPC,ECSRPC,ECATPC,ECSAPC
"RTN","ECXSURG",18,0)
 N ECXCRST,ECXSTCD,ECXCLIN
"RTN","ECXSURG",19,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ=""
"RTN","ECXSURG",20,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXSURG",21,0)
 I ECXADMDT="" S ECXADD=ECXADMDT
"RTN","ECXSURG",22,0)
 I ECXADMDT'="" S ECXADD=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXSURG",23,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXSURG",24,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXSURG",25,0)
 ;OEF/OIF DATA
"RTN","ECXSURG",26,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXSURG",27,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXSURG",28,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXSURG",29,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXSURG",30,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXSURG",31,0)
 S DATAOP=$S($D(^SRO(136,ECD0,0)):^(0),1:"")
"RTN","ECXSURG",32,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXSURG",33,0)
 ;get data
"RTN","ECXSURG",34,0)
 S ECSR=$P(DATA1,U,4),(ECATNPI,ECSANPI,ECSRNPI)="",ECAT=$P(DATA1,U,13)
"RTN","ECXSURG",35,0)
 S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",36,0)
 S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",37,0)
 ;-Time patient in OR room (Nurse Time)
"RTN","ECXSURG",38,0)
 S ECXTM=$$ECXTIME^ECXUTL($P(DATA2,U,10))
"RTN","ECXSURG",39,0)
 S ECXDIV=$S($D(^SRF(ECD0,8)):^(8),1:ECINST)
"RTN","ECXSURG",40,0)
 N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV)  ;Production Division
"RTN","ECXSURG",41,0)
 S ECSA=$P($G(^SRF(ECD0,.3)),U,4),ECO=$P(EC0,U,2)
"RTN","ECXSURG",42,0)
 S ECSANPI=$$NPI^XUSNPI("Individual_ID",ECSA,ECXDATE)
"RTN","ECXSURG",43,0)
 S:+ECSANPI'>0 ECSANPI="" S ECSANPI=$P(ECSANPI,U)
"RTN","ECXSURG",44,0)
 ;get principle anesthetist and person class DBIA #103
"RTN","ECXSURG",45,0)
 S ECXPA=$P($G(^SRF(ECD0,.3)),U,1)
"RTN","ECXSURG",46,0)
 S ECPANPI=$$NPI^XUSNPI("Individual_ID",ECXPA,ECXDATE)
"RTN","ECXSURG",47,0)
 S:+ECPANPI'>0 ECPANPI="" S ECPANPI=$P(ECPANPI,U)
"RTN","ECXSURG",48,0)
 S ECXPAPC=$$PRVCLASS^ECXUTL(ECXPA,ECXDATE)
"RTN","ECXSURG",49,0)
 S ECORTY=$P($G(^SRS(+ECO,2)),U),ECO=$P($G(^SRS(+ECO,0)),U)
"RTN","ECXSURG",50,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXSURG",51,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXSURG",52,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXSURG",53,0)
 ;get classification information
"RTN","ECXSURG",54,0)
 S (ECXAO,ECXHNC)="" I ECXVISIT'="" D
"RTN","ECXSURG",55,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR
"RTN","ECXSURG",56,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXSURG",57,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSURG",58,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSURG",59,0)
 ;look for non-OR
"RTN","ECXSURG",60,0)
 S (ECNT,ECNL,ECXDSSD,ECXNONL,ECXSTOP)=""
"RTN","ECXSURG",61,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXSURG",62,0)
 .S ECSR=$P(ECNO,U,6),ECAT=$P(ECNO,U,7)
"RTN","ECXSURG",63,0)
 .S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",64,0)
 .S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",65,0)
 .S ECATNPI=$$NPI^XUSNPI("Individual_ID",ECAT,ECXDATE)
"RTN","ECXSURG",66,0)
 .S:+ECATNPI'>0 ECATNPI="" S ECATNPI=$P(ECATNPI,U)
"RTN","ECXSURG",67,0)
 .S ECXTM=$$ECXTIME^ECXUTL($P(ECNO,U,4))
"RTN","ECXSURG",68,0)
 .S A1=$P(ECNO,U,5),A2=$P(ECNO,U,4),TIME="##" D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXSURG",69,0)
 .S (ECXNONL,ECNL)=+$P(ECNO,U,2),ECNL=$P($G(^ECX(728.44,ECNL,0)),U,9)
"RTN","ECXSURG",70,0)
 .S:ECNL="" ECNL="UNKNOWN"
"RTN","ECXSURG",71,0)
 .;
"RTN","ECXSURG",72,0)
 .;- Get DSS Stop Code to use in encounter number
"RTN","ECXSURG",73,0)
 .S ECXSTOP=$P($G(^ECX(728.44,ECXNONL,0)),U,4)
"RTN","ECXSURG",74,0)
 ;
"RTN","ECXSURG",75,0)
 ;- Get credit stop, stop code and clinic
"RTN","ECXSURG",76,0)
 I $$SUR^ECXUTL6(.ECXCRST,.ECXSTCD,.ECXCLIN)
"RTN","ECXSURG",77,0)
 ;
"RTN","ECXSURG",78,0)
 ;- If surgery cancelled/aborted quit and go to next record
"RTN","ECXSURG",79,0)
 S ECCAN=$P($G(^SRF(ECD0,30)),U)
"RTN","ECXSURG",80,0)
 I +ECCAN S ECCAN=$$CANC^ECXUTL4(ECNL,$P(DATA2,U,10))
"RTN","ECXSURG",81,0)
 ;on hold for ECXDSSD and ECXDSSP I $P($G(^SRF(ECD0,30)),U) Q
"RTN","ECXSURG",82,0)
 ;get service of attending surgeon
"RTN","ECXSURG",83,0)
 S ECATSV=$P($G(^DIC(49,+$G(^VA(200,+ECAT,5)),730)),U)
"RTN","ECXSURG",84,0)
 ;
"RTN","ECXSURG",85,0)
 ;get surgeon, attending and anesthesia super person classes
"RTN","ECXSURG",86,0)
 S ECSRPC=$$PRVCLASS^ECXUTL(ECSR,ECXDATE)
"RTN","ECXSURG",87,0)
 S ECATPC=$$PRVCLASS^ECXUTL(ECAT,ECXDATE)
"RTN","ECXSURG",88,0)
 S ECSAPC=$$PRVCLASS^ECXUTL(ECSA,ECXDATE)
"RTN","ECXSURG",89,0)
 ;
"RTN","ECXSURG",90,0)
 ;add leading 2s for pointer to 200
"RTN","ECXSURG",91,0)
 S:ECAT ECAT="2"_ECAT S:ECSR ECSR="2"_ECSR S:ECSA ECSA="2"_ECSA
"RTN","ECXSURG",92,0)
 ;add leading 2 to principle anesthetist IEN
"RTN","ECXSURG",93,0)
 S:ECXPA ECXPA="2"_ECXPA
"RTN","ECXSURG",94,0)
 ;anesthesia technique
"RTN","ECXSURG",95,0)
 S ECANE="",PP=""
"RTN","ECXSURG",96,0)
 I $D(^SRF(ECD0,6,0)) S ECXJ=0 D
"RTN","ECXSURG",97,0)
 .F  S ECXJ=$O(^SRF(ECD0,6,ECXJ)) Q:('ECXJ)!(ECANE]"")  D
"RTN","ECXSURG",98,0)
 ..S PP=$P($G(^(ECXJ,0)),U,3) S:PP="Y" ECANE=$P(^(0),U,1)
"RTN","ECXSURG",99,0)
 .I ECANE="" S ECXJ=$O(^SRF(ECD0,6,0)) I ECXJ S ECANE=$P(^SRF(ECD0,6,ECXJ,0),U,1)
"RTN","ECXSURG",100,0)
 ;get primary procedure
"RTN","ECXSURG",101,0)
 ;ecode0=p^cpt code^^patient time^operation time^anesthesia time
"RTN","ECXSURG",102,0)
 S ECPT=+$P(DATAOP,U,2),ECXCMOD=""
"RTN","ECXSURG",103,0)
 K ARR,ERR D FIELD^DID(130,28,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",104,0)
 .K ARR,ERR D FIELD^DID(130,28,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",105,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXSURG",106,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",107,0)
 .F  S MOD=$O(^SRF(ECD0,SUB,MOD)) Q:MOD'>0  D
"RTN","ECXSURG",108,0)
 ..S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",109,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",110,0)
 S ECODE0="P"_U_U  ;ECPT_U
"RTN","ECXSURG",111,0)
 F J="10,12","2,3","1,4" D
"RTN","ECXSURG",112,0)
 .N ECNTIME,ECSTIME,ECATIME
"RTN","ECXSURG",113,0)
 .S A2=$P(DATA2,U,$P(J,",")),A1=$P(DATA2,U,$P(J,",",2)),TIME="##"
"RTN","ECXSURG",114,0)
 .I (A1&A2)&(+J=10) D TIME  S ECNTIME=TIME
"RTN","ECXSURG",115,0)
 .I (A1&A2)&(+J=1) D TIME  S ECATIME=TIME
"RTN","ECXSURG",116,0)
 .I (A1&A2)&(+J=2) D
"RTN","ECXSURG",117,0)
 ..;
"RTN","ECXSURG",118,0)
 ..;-Operation Time (Surgeon Time)
"RTN","ECXSURG",119,0)
 ..;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",120,0)
 ..S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",121,0)
 ..S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",122,0)
 ..S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXSURG",123,0)
 ..S:TIME<0 TIME="###"
"RTN","ECXSURG",124,0)
 ..S:TIME ECSTIME=TIME
"RTN","ECXSURG",125,0)
 .S ECODE0=ECODE0_U_TIME K TIME
"RTN","ECXSURG",126,0)
 ; -Recovery Room Time
"RTN","ECXSURG",127,0)
 S ECRR=""
"RTN","ECXSURG",128,0)
 I $D(^SRF(ECD0,1.1)) D
"RTN","ECXSURG",129,0)
 .S A1=$P(^(1.1),U,8),A2=$P(^(1.1),U,7),TIME="##" D:(A1&A2) TIME
"RTN","ECXSURG",130,0)
 .S ECRR=TIME K TIME
"RTN","ECXSURG",131,0)
 I ECNL]"" S $P(ECODE0,U,5)=ECNT
"RTN","ECXSURG",132,0)
 ;
"RTN","ECXSURG",133,0)
 ; -OR Clean Time in 15 min increments DBIA #103
"RTN","ECXSURG",134,0)
 S ECXORCT=($$FMDIFF^XLFDT($P($G(DATA2),U,14),$P($G(DATA2),U,13),2)/60)/15
"RTN","ECXSURG",135,0)
 ; -If no OR clean time recorded set it to 2
"RTN","ECXSURG",136,0)
 I ECXORCT'>0 S ECXORCT=2
"RTN","ECXSURG",137,0)
 ;
"RTN","ECXSURG",138,0)
 ; -PT in hold area time in 15 min increments DBIA #103
"RTN","ECXSURG",139,0)
 I $P($G(DATA2),U,10),$P($G(DATA2),U,15) D
"RTN","ECXSURG",140,0)
 .S ECXPTHA=($$FMDIFF^XLFDT($P($G(DATA2),U,10),$P($G(DATA2),U,15),2)/60)/15
"RTN","ECXSURG",141,0)
 .S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",142,0)
 .I CON S ECXPTHA=ECXPTHA/2
"RTN","ECXSURG",143,0)
 .S ECXPTHA=$TR($J(ECXPTHA,3,0)," ")
"RTN","ECXSURG",144,0)
 ; -If hold time is =<0 set it to ""
"RTN","ECXSURG",145,0)
 S:$G(ECXPTHA)'>0 ECXPTHA=""
"RTN","ECXSURG",146,0)
 ;
"RTN","ECXSURG",147,0)
 ;- Observation Patient Indicator (yes/no)
"RTN","ECXSURG",148,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXSURG",149,0)
 ;
"RTN","ECXSURG",150,0)
 ;- set national patient record flag if exist
"RTN","ECXSURG",151,0)
 D NPRF^ECXUTL5
"RTN","ECXSURG",152,0)
 ;
"RTN","ECXSURG",153,0)
 ;- If no encounter number don't file record
"RTN","ECXSURG",154,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXSURG",155,0)
 ;
"RTN","ECXSURG",156,0)
 ;- Get postop diagnosis codes
"RTN","ECXSURG",157,0)
 I $$SURPODX^ECXUTL6(.ECXPODX,.ECXPODX1,.ECXPODX2,.ECXPODX3,.ECXPODX4,.ECXPODX5)
"RTN","ECXSURG",158,0)
 ;
"RTN","ECXSURG",159,0)
 D FILE^ECXSURG1
"RTN","ECXSURG",160,0)
 ;get secondary procedures
"RTN","ECXSURG",161,0)
 ;ecode0=s^cpt code
"RTN","ECXSURG",162,0)
 S ECXJ=0
"RTN","ECXSURG",163,0)
 F  S ECXJ=$O(^SRO(136,ECD0,3,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)),$D(^(0)),$P(^(0),"^")]"" D
"RTN","ECXSURG",164,0)
 .;S ECPT=$P(^SRF(ECD0,13,ECXJ,2),U),ECXCMOD=""
"RTN","ECXSURG",165,0)
 .S ECPT=$P(^SRO(136,ECD0,3,ECXJ,0),U),ECXMOD=""
"RTN","ECXSURG",166,0)
 .S ECPT=$P(^(0),"^"),ECXCMOD=""
"RTN","ECXSURG",167,0)
 .K ARR,ERR
"RTN","ECXSURG",168,0)
 .D FIELD^DID(130.16,4,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",169,0)
 ..K ARR,ERR
"RTN","ECXSURG",170,0)
 ..D FIELD^DID(130.16,4,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",171,0)
 ..Q:$D(ERR("DIERR"))
"RTN","ECXSURG",172,0)
 ..S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",173,0)
 ..F  S MOD=$O(^SRF(ECD0,13,ECXJ,SUB,MOD)) Q:MOD'>0  S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",174,0)
 .S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",175,0)
 .S ECODE0="S"_U   ;_ECPT
"RTN","ECXSURG",176,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",177,0)
 ;get prostheses
"RTN","ECXSURG",178,0)
 ;ecode0=i^^^^^^prosthesis^old qty field (null)
"RTN","ECXSURG",179,0)
 S ECXJ=0
"RTN","ECXSURG",180,0)
 F  S ECXJ=$O(^SRF(ECD0,1,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)) D
"RTN","ECXSURG",181,0)
 .S ECXP=+^SRF(ECD0,1,ECXJ,0),ECXQ=$P($G(^(1)),U,2) S:'ECXQ ECXQ=1
"RTN","ECXSURG",182,0)
 .S ECODE0="I"_U_U_U_U_U_U_ECXP_U_U
"RTN","ECXSURG",183,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",184,0)
 Q
"RTN","ECXSURG",185,0)
 ;
"RTN","ECXSURG",186,0)
 ;
"RTN","ECXSURG",187,0)
TIME ; given date/time get increment
"RTN","ECXSURG",188,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG",189,0)
 N CON,TIMEDIF
"RTN","ECXSURG",190,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",191,0)
 ;
"RTN","ECXSURG",192,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",193,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",194,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",195,0)
 I 'CON D
"RTN","ECXSURG",196,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG",197,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG",198,0)
 I CON D
"RTN","ECXSURG",199,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG",200,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG",201,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG",202,0)
 Q
"RTN","ECXSURG",203,0)
 ;
"RTN","ECXSURG",204,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG",205,0)
 S ECHEAD="SUR"
"RTN","ECXSURG",206,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG",207,0)
 Q
"RTN","ECXSURG",208,0)
 ;
"RTN","ECXSURG",209,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG",210,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXSURG1")
0^36^B12420655^n/a
"RTN","ECXSURG1",1,0)
ECXSURG1 ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ; 10/24/07 2:22pm
"RTN","ECXSURG1",2,0)
 ;;3.0;DSS EXTRACTS;**105**;Dec 22, 1997;Build 70
"RTN","ECXSURG1",3,0)
 ;
"RTN","ECXSURG1",4,0)
FILE ;file record
"RTN","ECXSURG1",5,0)
 ;node0
"RTN","ECXSURG1",6,0)
 ;division^dfn^ssn^name^in/out (ECXA)^day^case #^
"RTN","ECXSURG1",7,0)
 ;surg specialty^or room #^
"RTN","ECXSURG1",8,0)
 ;surgeon^attending^anesthesia supervisor^anesthesia technique^
"RTN","ECXSURG1",9,0)
 ;primary/secondary/prostheses^cpt^^pt time^op time^anes time^
"RTN","ECXSURG1",10,0)
 ;prostheses^qty^^
"RTN","ECXSURG1",11,0)
 ;movement number^treating specialty^cancel/abort (ECCAN)^time^or type^
"RTN","ECXSURG1",12,0)
 ;attending's service^non-or dss id^recovery room time^^
"RTN","ECXSURG1",13,0)
 ;primary care team^primary care provider^admission date
"RTN","ECXSURG1",14,0)
 ;node1
"RTN","ECXSURG1",15,0)
 ;mpi^dss dept ECXDSSD^surgeon npi^attending npi^anes supervisor npi^
"RTN","ECXSURG1",16,0)
 ;pc provider npi^pc prov person class^
"RTN","ECXSURG1",17,0)
 ;assoc pc provider^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXSURG1",18,0)
 ;cpt&modifiers ECXCPT^dom ECXDOM^enrollment category ECXCAT^
"RTN","ECXSURG1",19,0)
 ;enrollment status ECXSTAT^enrollment priority ECXPRIOR^
"RTN","ECXSURG1",20,0)
 ;period of service ECXPOS^purple heart indicator ECXPHI^
"RTN","ECXSURG1",21,0)
 ;observ pat ind ECXOBS^encounter num ECXENC^ao loc ECXAOL^
"RTN","ECXSURG1",22,0)
 ;production division ECXPDIV^head & neck canc ind ECXHNCI^
"RTN","ECXSURG1",23,0)
 ;ethnicity ECXETH^race1 ECXRC1^new quantity ECXQ^
"RTN","ECXSURG1",24,0)
 ;^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig
"RTN","ECXSURG1",25,0)
 ;ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC
"RTN","ECXSURG1",26,0)
 ;or clean time ECXORCT^time pt in hold area ECXPTHA^national patient
"RTN","ECXSURG1",27,0)
 ;record flag ECXNPRFI^princ anesthetist ECXPA^surgeon per class ECSRPC
"RTN","ECXSURG1",28,0)
 ;node2
"RTN","ECXSURG1",29,0)
 ;atten surgeon per class ECATPC^anesthesia super person class ECSAPC^
"RTN","ECXSURG1",30,0)
 ;princ anesthetist PC ECXPAPC^emergency response indicator(FEMA) ECXERI^
"RTN","ECXSURG1",31,0)
 ;agent orange indic ECXAO^head/neck cancer ECXHNC
"RTN","ECXSURG1",32,0)
 ;OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^clinic pointer ECXCLIN
"RTN","ECXSURG1",33,0)
 ;credit stop ECXCRST^stop code ECXSTCD^princ postop diagnosis code
"RTN","ECXSURG1",34,0)
 ;ECXPODX^other postop diagnosis code #1 ECXPODX1^other postop
"RTN","ECXSURG1",35,0)
 ;diagnosis code #2 ECXPODX2^ other postop diag code #3 ECXPODX3^
"RTN","ECXSURG1",36,0)
 ;other postop diag code #4 ECXPODX4^other postop diag code #5
"RTN","ECXSURG1",37,0)
 ;ECXPODX5^anesthesia sup npi ECSANPI^assoc pc prov npi ECASNPI^
"RTN","ECXSURG1",38,0)
 ;attending surgeon npi ECATNPI^primary care provider npi ECPTNPI^
"RTN","ECXSURG1",39,0)
 ;principle anesthetist npi ECPANPI^surgeon npi ECSRNPI
"RTN","ECXSURG1",40,0)
 ;
"RTN","ECXSURG1",41,0)
 N DA,DIK,STR
"RTN","ECXSURG1",42,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSURG1",43,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSURG1",44,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECD0_U_ECSS_U_ECO_U
"RTN","ECXSURG1",45,0)
 S ECODE=ECODE_ECSR_U_ECAT_U_ECSA_U_ECANE_U_ECODE0_U
"RTN","ECXSURG1",46,0)
 S STR=ECXMN_U_ECXTS_U_$S(ECCAN'="":ECCAN,1:"")_U_ECXTM_U_ECORTY_U
"RTN","ECXSURG1",47,0)
 S STR=STR_ECATSV_U_ECNL_U_ECRR_U_U_ECPTTM_U_ECPTPR_U_ECXADD_U
"RTN","ECXSURG1",48,0)
 S $P(ECODE,U,26,38)=STR
"RTN","ECXSURG1",49,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_U
"RTN","ECXSURG1",50,0)
 S ECODE1=ECODE1_ECCLAS_U_ECASPR_U_ECCLAS2_U_U_ECXCPT_U_ECXDOM_U
"RTN","ECXSURG1",51,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXSURG1",52,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXPDIV_U_ECXHNCI_U
"RTN","ECXSURG1",53,0)
 S ECODE1=ECODE1_ECXETH_U_ECXRC1_U_ECXQ_U
"RTN","ECXSURG1",54,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXORCT_U_ECXPTHA_U_ECXNPRFI
"RTN","ECXSURG1",55,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXPA_U_ECSRPC_U,ECODE2=ECATPC_U_ECSAPC_U_ECXPAPC
"RTN","ECXSURG1",56,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXHNC
"RTN","ECXSURG1",57,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECXCLIN_U_ECXCRST_U_ECXSTCD_U_ECXPODX_U_ECXPODX1_U_ECXPODX2_U_ECXPODX3_U_ECXPODX4_U_ECXPODX5_U_ECSANPI_U_ECASNPI_U_ECATNPI_U_ECPTNPI_U_ECPANPI_U_ECSRNPI
"RTN","ECXSURG1",58,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXSURG1",59,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSURG1",60,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSURG1",61,0)
 ;
"RTN","ECXSURG1",62,0)
TIME ; given date/time get increment
"RTN","ECXSURG1",63,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG1",64,0)
 N CON,TIMEDIF
"RTN","ECXSURG1",65,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG1",66,0)
 ;
"RTN","ECXSURG1",67,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG1",68,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG1",69,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG1",70,0)
 I 'CON D
"RTN","ECXSURG1",71,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG1",72,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG1",73,0)
 I CON D
"RTN","ECXSURG1",74,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG1",75,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG1",76,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG1",77,0)
 Q
"RTN","ECXSURG1",78,0)
 ;
"RTN","ECXSURG1",79,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG1",80,0)
 S ECHEAD="SUR"
"RTN","ECXSURG1",81,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG1",82,0)
 Q
"RTN","ECXSURG1",83,0)
 ;
"RTN","ECXSURG1",84,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG1",85,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXTRAC")
0^10^B56593271^B55910461
"RTN","ECXTRAC",1,0)
ECXTRAC ;ALB/GTS,JAP,BIR/DMA,CML-Package Extracts for DSS ; 7/29/07 12:51pm
"RTN","ECXTRAC",2,0)
 ;;3.0;DSS EXTRACTS;**9,8,14,24,30,33,49,84,105**;Dec 22, 1997;Build 70
"RTN","ECXTRAC",3,0)
 ;Date range, queuing and message sending for package extracts
"RTN","ECXTRAC",4,0)
 ;Input
"RTN","ECXTRAC",5,0)
 ;  ECPACK   printed name of package (e.g. Lab, Prescriptions)
"RTN","ECXTRAC",6,0)
 ;  ECNODE   in file 728 where last date is stored
"RTN","ECXTRAC",7,0)
 ;  ECPIECE  piece of node where last date is stored
"RTN","ECXTRAC",8,0)
 ;  ECRTN    in the form of START^ROUTINE
"RTN","ECXTRAC",9,0)
 ;  ECGRP    name of local mail group to receive summary message
"RTN","ECXTRAC",10,0)
 ;           (MUST BE 1 TO 5 UPPER CASE ALPHA - NO SPACES)
"RTN","ECXTRAC",11,0)
 ;  ECFILE   file number of the local editing file
"RTN","ECXTRAC",12,0)
 ;  ECXLOGIC Fiscal year extract logic to use (optional)
"RTN","ECXTRAC",13,0)
 ;  ECXDATES StartDate^EndDate^DoNotUpdate728 (optional)
"RTN","ECXTRAC",14,0)
 ;Generates
"RTN","ECXTRAC",15,0)
 ;  EC23=2nd and 3rd piece of zero node in local editing file
"RTN","ECXTRAC",16,0)
 ;      =YYMM of end date^pointer to 727
"RTN","ECXTRAC",17,0)
 ;  ECXLOGIC=Fiscal year extract logic to use
"RTN","ECXTRAC",18,0)
 ;
"RTN","ECXTRAC",19,0)
EN ;entry point
"RTN","ECXTRAC",20,0)
 N OUT,CHKFLG
"RTN","ECXTRAC",21,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXTRAC",22,0)
 I '$D(ECHEAD) S ECHEAD=" "
"RTN","ECXTRAC",23,0)
 I $P($G(^ECX(728,1,ECNODE+.1)),U,ECPIECE)]"" D  Q
"RTN","ECXTRAC",24,0)
 .W !!,$C(7),ECPACK," extract is already scheduled to run",!!
"RTN","ECXTRAC",25,0)
 .D PAUSE
"RTN","ECXTRAC",26,0)
 W @IOF,!,"Extract ",ECPACK," Information for DSS",!!
"RTN","ECXTRAC",27,0)
 S:'$D(ECINST) ECINST=+$P(^ECX(728,1,0),U)
"RTN","ECXTRAC",28,0)
 S ECXINST=ECINST
"RTN","ECXTRAC",29,0)
 K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTRAC",30,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTRAC",31,0)
 ;* get last date for all extracts except prosthetics
"RTN","ECXTRAC",32,0)
 I ECGRP'="PRO" D
"RTN","ECXTRAC",33,0)
 .S ECLDT=$S($D(^ECX(728,1,ECNODE)):$P(^(ECNODE),U,ECPIECE),1:2610624)
"RTN","ECXTRAC",34,0)
 .S:ECLDT="" ECLDT=2610624
"RTN","ECXTRAC",35,0)
 ;* get last date for prosthetics
"RTN","ECXTRAC",36,0)
 I ECGRP="PRO" D
"RTN","ECXTRAC",37,0)
 .N ECXDA1
"RTN","ECXTRAC",38,0)
 .S ECXDA1=$O(^ECX(728,0))
"RTN","ECXTRAC",39,0)
 .I $D(^ECX(728,ECXDA1,1,ECXINST,0)) D
"RTN","ECXTRAC",40,0)
 ..S ECLDT=$P(^ECX(728,ECXDA1,1,ECXINST,0),U,2)
"RTN","ECXTRAC",41,0)
 .I '$D(^ECX(728,ECXDA1,1,ECXINST,0)) D
"RTN","ECXTRAC",42,0)
 ..S DA(1)=ECXDA1
"RTN","ECXTRAC",43,0)
 ..S DIC(0)="L" K ECXDD
"RTN","ECXTRAC",44,0)
 ..D FIELD^DID(728,59,,"SPECIFIER","ECXDD")
"RTN","ECXTRAC",45,0)
 ..S DIC("P")=ECXDD("SPECIFIER") K ECXDD
"RTN","ECXTRAC",46,0)
 ..S DIC="^ECX(728,"_DA(1)_",1,",X=ECXINST,DINUM=X
"RTN","ECXTRAC",47,0)
 ..K DD,DO D FILE^DICN
"RTN","ECXTRAC",48,0)
 ..K DIC,X,DINUM,Y,DA
"RTN","ECXTRAC",49,0)
 ..S ECLDT=2610624
"RTN","ECXTRAC",50,0)
 S X=$G(ECXDATES) S ECSD=$P(X,"^",1),ECED=$P(X,"^",2)
"RTN","ECXTRAC",51,0)
 S OUT=0
"RTN","ECXTRAC",52,0)
 I (ECSD="")!(ECED="") F  S (ECED,ECSD)="" D  Q:OUT
"RTN","ECXTRAC",53,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: " D ^%DT
"RTN","ECXTRAC",54,0)
 .I Y<0 S OUT=1 Q
"RTN","ECXTRAC",55,0)
 .S ECSD=Y
"RTN","ECXTRAC",56,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: " D ^%DT
"RTN","ECXTRAC",57,0)
 .I Y<0 S OUT=1 Q
"RTN","ECXTRAC",58,0)
 .I Y<ECSD D  Q
"RTN","ECXTRAC",59,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXTRAC",60,0)
 ..W !,"Please try again.",!!
"RTN","ECXTRAC",61,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXTRAC",62,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXTRAC",63,0)
 ..W !,"Please try again.",!!
"RTN","ECXTRAC",64,0)
 .S ECED=Y
"RTN","ECXTRAC",65,0)
 .I ECLDT'<ECSD D  Q
"RTN","ECXTRAC",66,0)
 ..W !!,"The ",ECPACK," information has already been extracted through ",$$FMTE^XLFDT(ECLDT),"."
"RTN","ECXTRAC",67,0)
 ..W !,"Please enter a new date range.",!!
"RTN","ECXTRAC",68,0)
 .S OUT=1
"RTN","ECXTRAC",69,0)
 I ECED]"",ECSD]"" D QUE
"RTN","ECXTRAC",70,0)
 Q
"RTN","ECXTRAC",71,0)
 ;
"RTN","ECXTRAC",72,0)
QUE ;queue extract
"RTN","ECXTRAC",73,0)
 N CHKFLG
"RTN","ECXTRAC",74,0)
 ;if extract is ivp (i.e., file=727.819) and data in the intermediate file use new format
"RTN","ECXTRAC",75,0)
 I ECFILE=727.819 D  Q:CHKFLG
"RTN","ECXTRAC",76,0)
 .S CHKFLG=0
"RTN","ECXTRAC",77,0)
 .S X="PSIVSTAT" X ^%ZOSF("TEST") I '$T Q
"RTN","ECXTRAC",78,0)
 .I '$D(^ECX(728.113,"A")) S CHKFLG=1 D NOIVP Q
"RTN","ECXTRAC",79,0)
 .S DATE=$O(^ECX(728.113,"A",ECED+1),-1) I DATE<ECSD S CHKFLG=1 D NOIVP Q
"RTN","ECXTRAC",80,0)
 .D CHK^ECXDIVIV Q:CHKFLG
"RTN","ECXTRAC",81,0)
 .D CHK2
"RTN","ECXTRAC",82,0)
 .S ECRTN="START^ECXPIVDN",ECVER=7
"RTN","ECXTRAC",83,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXTRAC",84,0)
 I '$D(ECHEAD) S ECHEAD=""
"RTN","ECXTRAC",85,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXTRAC",86,0)
 K ZTSAVE
"RTN","ECXTRAC",87,0)
 F X="ECINST","ECED","ECSD","ECSD1","ECEDN","ECSDN" S ZTSAVE(X)=""
"RTN","ECXTRAC",88,0)
 F X="ECPACK","ECPIECE","ECRTN","ECGRP","ECNODE" S ZTSAVE(X)=""
"RTN","ECXTRAC",89,0)
 F X="ECFILE","ECHEAD","ECVER","ECINST","ECXINST" S ZTSAVE(X)=""
"RTN","ECXTRAC",90,0)
 F X="ECXLOGIC","ECXDATES" S ZTSAVE(X)=""
"RTN","ECXTRAC",91,0)
 S ZTDESC=ECPACK_" EXTRACT: "_ECSDN_" TO "_ECEDN,ZTRTN="START^ECXTRAC",ZTIO=""
"RTN","ECXTRAC",92,0)
 D ^%ZTLOAD
"RTN","ECXTRAC",93,0)
 I $D(ZTSK) D
"RTN","ECXTRAC",94,0)
 .S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="R"
"RTN","ECXTRAC",95,0)
 .W !,"Request queued as Task #",ZTSK,".",!
"RTN","ECXTRAC",96,0)
 .D PAUSE
"RTN","ECXTRAC",97,0)
 Q
"RTN","ECXTRAC",98,0)
 ;
"RTN","ECXTRAC",99,0)
NOIVP ;cannot generate ivp message
"RTN","ECXTRAC",100,0)
 W !!,?5,"There does not appear to be any data in the IV EXTRACT DATA"
"RTN","ECXTRAC",101,0)
 W !,?5,"file (#728.113) for the selected date range."
"RTN","ECXTRAC",102,0)
 W !!,?5,"The IVP extract cannot be generated."
"RTN","ECXTRAC",103,0)
 D PAUSE
"RTN","ECXTRAC",104,0)
 Q
"RTN","ECXTRAC",105,0)
 ;
"RTN","ECXTRAC",106,0)
START ; entry when queued
"RTN","ECXTRAC",107,0)
 S QFLG=0
"RTN","ECXTRAC",108,0)
 L +^ECX(727,0) S EC=$P(^ECX(727,0),U,3)+1,$P(^(0),U,3,4)=EC_U_EC L -^ECX(727,0)
"RTN","ECXTRAC",109,0)
 S ^ECX(727,EC,0)=EC_U_DT_U_ECPACK_U_ECSD_U_$E(ECED,1,7)_U_U_DUZ
"RTN","ECXTRAC",110,0)
 S ^ECX(727,EC,"HEAD")=ECHEAD
"RTN","ECXTRAC",111,0)
 S:ECFILE=727.816 ECFILE=727.827 S ^ECX(727,EC,"FILE")=ECFILE
"RTN","ECXTRAC",112,0)
 S ^ECX(727,EC,"GRP")=ECGRP
"RTN","ECXTRAC",113,0)
 I $G(ECXLOGIC)="" S ECXLOGIC=$$FISCAL^ECXUTL1(ECSD)
"RTN","ECXTRAC",114,0)
 S ^ECX(727,EC,"VER")=$G(ECVER)_"^"_ECXLOGIC
"RTN","ECXTRAC",115,0)
 S ^ECX(727,EC,"DIV")=ECXINST
"RTN","ECXTRAC",116,0)
 S DA=EC,DIK="^ECX(727," D IX^DIK K DIK,DA
"RTN","ECXTRAC",117,0)
 S ECRN=0,ECXYM=$$ECXYM^ECXUTL(ECED),EC23=ECXYM_U_EC
"RTN","ECXTRAC",118,0)
 S ECXSTART=$P($$HTE^XLFDT($H),":",1,2),ECXNOW=$H
"RTN","ECXTRAC",119,0)
 ;do specific extract
"RTN","ECXTRAC",120,0)
 D @ECRTN
"RTN","ECXTRAC",121,0)
 ;if task gets stop request, set ztstop and quit
"RTN","ECXTRAC",122,0)
 I QFLG D  Q
"RTN","ECXTRAC",123,0)
 .S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="",ZTSTOP=1
"RTN","ECXTRAC",124,0)
 .D QKILL
"RTN","ECXTRAC",125,0)
 .D QMSG
"RTN","ECXTRAC",126,0)
 .D ^ECXKILL
"RTN","ECXTRAC",127,0)
 ;Set last date for extract
"RTN","ECXTRAC",128,0)
 I '$P($G(ECXDATES),"^",3) D
"RTN","ECXTRAC",129,0)
 .;* set last date for all extracts except prosthetics
"RTN","ECXTRAC",130,0)
 .I ECGRP'="PRO" S $P(^ECX(728,1,ECNODE),U,ECPIECE)=$P(ECED,".") Q
"RTN","ECXTRAC",131,0)
 .;* set last date for prosthetics
"RTN","ECXTRAC",132,0)
 .N ECXDA1
"RTN","ECXTRAC",133,0)
 .S ECXDA1=$O(^ECX(728,0))
"RTN","ECXTRAC",134,0)
 .S $P(^ECX(728,ECXDA1,1,ECXINST,0),U,2)=$P(ECED,".")
"RTN","ECXTRAC",135,0)
 S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTRAC",136,0)
 S $P(^ECX(727,$P(EC23,U,2),0),U,6)=ECRN
"RTN","ECXTRAC",137,0)
 ;set piece 3 and 4 of the zero node
"RTN","ECXTRAC",138,0)
 S ECLAST=$O(^ECX(ECFILE,99999999),-1),ECTOTAL=$P(^ECX(ECFILE,0),U,4)+ECRN,$P(^(0),U,3,4)=ECLAST_U_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXTRAC",139,0)
 D MSG
"RTN","ECXTRAC",140,0)
 S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)=""
"RTN","ECXTRAC",141,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECXTRAC",142,0)
 Q
"RTN","ECXTRAC",143,0)
 ;
"RTN","ECXTRAC",144,0)
MSG ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTRAC",145,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTRAC",146,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTRAC",147,0)
 S ECMSG(1,0)="The DSS-"_ECPACK_" extract (#"_$P(EC23,U,2)_") for "_ECSDN
"RTN","ECXTRAC",148,0)
 S ECMSG(2,0)="through "_ECEDN_" was begun on "_$P(ECXSTART,"@")_" at "_$P(ECXSTART,"@",2)
"RTN","ECXTRAC",149,0)
 S ECMSG(3,0)="and completed on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_"."
"RTN","ECXTRAC",150,0)
 S ECMSG(4,0)=" "
"RTN","ECXTRAC",151,0)
 S ECMSG(5,0)="A total of "_ECRN_" records were written."
"RTN","ECXTRAC",152,0)
 S ECMSG(6,0)=" "
"RTN","ECXTRAC",153,0)
 S ECMSG(7,0)="Extract time was [HH:MM:SS] "_$$HDIFF^XLFDT($H,ECXNOW,3)
"RTN","ECXTRAC",154,0)
 S ECMSG(8,0)=" "
"RTN","ECXTRAC",155,0)
 S X=$E(ECXLOGIC,5) S X=$S((X="")!(X=" "):"",1:"revision "_X_" of ")
"RTN","ECXTRAC",156,0)
 S ECMSG(9,0)="The data was extracted using "_X_"fiscal year "_$E(ECXLOGIC,1,4)_" logic."
"RTN","ECXTRAC",157,0)
 S ECMSG(10,0)=" "
"RTN","ECXTRAC",158,0)
 S XMTEXT="ECMSG("
"RTN","ECXTRAC",159,0)
 D ^XMD
"RTN","ECXTRAC",160,0)
 Q
"RTN","ECXTRAC",161,0)
 ;
"RTN","ECXTRAC",162,0)
QMSG ; send abort message to mail group 'DSS-ECGRP'
"RTN","ECXTRAC",163,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTRAC",164,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTRAC",165,0)
 S ECMSG(1,0)="The DSS-"_ECPACK_" extract (#"_$P(EC23,U,2)_") for "_ECSDN
"RTN","ECXTRAC",166,0)
 S ECMSG(2,0)="through "_ECEDN_" was begun on "_$P(ECXSTART,"@")_" at "_$P(ECXSTART,"@",2)_"."
"RTN","ECXTRAC",167,0)
 S ECMSG(3,0)=" "
"RTN","ECXTRAC",168,0)
 S ECMSG(4,0)="A user stop request was received by Taskmanager which caused processing"
"RTN","ECXTRAC",169,0)
 S ECMSG(5,0)="to terminate before completion.  Any records which may have been created"
"RTN","ECXTRAC",170,0)
 S ECMSG(6,0)="in file #"_ECFILE_" for this extract have been deleted."
"RTN","ECXTRAC",171,0)
 S ECMSG(7,0)=" "
"RTN","ECXTRAC",172,0)
 S XMTEXT="ECMSG("
"RTN","ECXTRAC",173,0)
 D ^XMD
"RTN","ECXTRAC",174,0)
 Q
"RTN","ECXTRAC",175,0)
 ;
"RTN","ECXTRAC",176,0)
QKILL ;delete records created for any extract stopped at user request
"RTN","ECXTRAC",177,0)
 N ECX,FILE,IEN,DA,DIK
"RTN","ECXTRAC",178,0)
 S FILE="^ECX("_ECFILE_","
"RTN","ECXTRAC",179,0)
 S ECX=$P(EC23,U,2)
"RTN","ECXTRAC",180,0)
 F  S IEN=$O(^ECX(ECFILE,999999999),-1) Q:($P(^ECX(ECFILE,IEN,0),U,3)'=ECX)  D
"RTN","ECXTRAC",181,0)
 .S DIK=FILE,DA=IEN D ^DIK
"RTN","ECXTRAC",182,0)
 Q
"RTN","ECXTRAC",183,0)
 ;
"RTN","ECXTRAC",184,0)
CHK2 ;iv extract check - all active iv rooms to have a division
"RTN","ECXTRAC",185,0)
 S EC=0
"RTN","ECXTRAC",186,0)
 D ALL^PSJ59P5(,"??","ECXIV")
"RTN","ECXTRAC",187,0)
 F  S EC=$O(^TMP($J,"ECXIV",EC)) Q:'EC  I '^(EC,19) D  I CHKFLG D EXIT Q
"RTN","ECXTRAC",188,0)
 .S CHKFLG=$S($G(^TMP($J,"ECXIV",EC,19)):1,$G(^(19))>DT:1,1:0)
"RTN","ECXTRAC",189,0)
 .I CHKFLG D
"RTN","ECXTRAC",190,0)
 ..W !!,"All active IV Rooms in the IV Room file (#59.5) must have a ""DIVISION""",!,"assigned to run this extract!"
"RTN","ECXTRAC",191,0)
 ..W !!,"This information can be entered using the DSS Extract Manager's Maintenance ",!,"option ""Enter/Edit IV Room Division""."
"RTN","ECXTRAC",192,0)
 ..D PAUSE
"RTN","ECXTRAC",193,0)
EXIT K ^TMP($J,"ECXIV")
"RTN","ECXTRAC",194,0)
 Q
"RTN","ECXTRAC",195,0)
 ;
"RTN","ECXTRAC",196,0)
PAUSE ;pause screen
"RTN","ECXTRAC",197,0)
 N DIR,X,Y
"RTN","ECXTRAC",198,0)
 S OUT=0
"RTN","ECXTRAC",199,0)
 I $E(IOST)="C" D
"RTN","ECXTRAC",200,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXTRAC",201,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXTRAC",202,0)
 I 'Y S OUT=1
"RTN","ECXTRAC",203,0)
 W !!
"RTN","ECXTRAC",204,0)
 Q
"RTN","ECXTREX")
0^43^B11391344^B11364992
"RTN","ECXTREX",1,0)
ECXTREX ;BPFO/JRP - Queue DSS Fiscal Year Specific Extract;8-AUG-2003 ; 6/11/07 12:46pm
"RTN","ECXTREX",2,0)
 ;;3.0;DSS EXTRACTS;**49,71,84,92,105**;Dec 22, 1997;Build 70
"RTN","ECXTREX",3,0)
 ;
"RTN","ECXTREX",4,0)
EN ;Main entry point
"RTN","ECXTREX",5,0)
 W @IOF
"RTN","ECXTREX",6,0)
 N DIC,X,Y,DTOUT,DUOUT
"RTN","ECXTREX",7,0)
 W !,"****************************************************************"
"RTN","ECXTREX",8,0)
 W !,"*                                                              *"
"RTN","ECXTREX",9,0)
 W !,"* This option should be used with caution as it allows for the *"
"RTN","ECXTREX",10,0)
 W !,"* extraction of data using specified fiscal year logic.  This  *"
"RTN","ECXTREX",11,0)
 W !,"* gives the ability to extract fiscal year 200x data using     *"
"RTN","ECXTREX",12,0)
 W !,"* fiscal year 200(x+1) logic and vice versa.  Note that data   *"
"RTN","ECXTREX",13,0)
 W !,"* extracted via this method may or may not be transmittable to *"
"RTN","ECXTREX",14,0)
 W !,"* the DSS production queue at the Austin Automation Center.    *"
"RTN","ECXTREX",15,0)
 W !,"*                                                              *"
"RTN","ECXTREX",16,0)
 W !,"*--------------------------------------------------------------*"
"RTN","ECXTREX",17,0)
 W !,"*                                                              *"
"RTN","ECXTREX",18,0)
 W !,"* Note that this option does not update the last date used for *"
"RTN","ECXTREX",19,0)
 W !,"* the given extraction.  It also does not verify that the time *"
"RTN","ECXTREX",20,0)
 W !,"* frame selected is after the last date used for the extract.  *"
"RTN","ECXTREX",21,0)
 W !,"*                                                              *"
"RTN","ECXTREX",22,0)
 W !,"****************************************************************"
"RTN","ECXTREX",23,0)
 W !!
"RTN","ECXTREX",24,0)
 ;Pick extract to queue
"RTN","ECXTREX",25,0)
 S DIC="^ECX(727.1,"
"RTN","ECXTREX",26,0)
 S DIC(0)="AEQMZ"
"RTN","ECXTREX",27,0)
 S DIC("A")="Select DSS Extract to queue: "
"RTN","ECXTREX",28,0)
 S DIC("S")="I ('$P(^(0),U,12))&($P(^(0),U,8)'="""")&($G(^(7))'[""Inactive"")"
"RTN","ECXTREX",29,0)
 S DIC("W")="W ""("",$P(^(0),U,8),"")"""
"RTN","ECXTREX",30,0)
 D ^DIC
"RTN","ECXTREX",31,0)
 I ($D(DUOUT))!($D(DTOUT))!(Y<1) Q
"RTN","ECXTREX",32,0)
 N ECXRTN,ECXDA
"RTN","ECXTREX",33,0)
 S ECXDA=+Y
"RTN","ECXTREX",34,0)
 ;Get extract specific routine name
"RTN","ECXTREX",35,0)
 S ECXRTN=$G(^ECX(727.1,ECXDA,"ROU"))
"RTN","ECXTREX",36,0)
 I ECXRTN="" D  Q
"RTN","ECXTREX",37,0)
 .W !!,"Selected extract is not correctly defined in the EXTRACT"
"RTN","ECXTREX",38,0)
 .W !,"DEFINITIONS file (#727.1).  The ROUTINE field (#4) does not"
"RTN","ECXTREX",39,0)
 .W !,"have a value in it."
"RTN","ECXTREX",40,0)
 .W !
"RTN","ECXTREX",41,0)
 .D PAUSE
"RTN","ECXTREX",42,0)
 ;Get time frame for extract
"RTN","ECXTREX",43,0)
 N STRTDT,ENDDT,DIR,DIRUT,DIROUT,OUT,ECXDATES
"RTN","ECXTREX",44,0)
 S OUT=0 F  S (STRTDT,ENDDT)="" D  Q:OUT
"RTN","ECXTREX",45,0)
 .;Get start date (must be in past)
"RTN","ECXTREX",46,0)
 .S DIR(0)="DOA"
"RTN","ECXTREX",47,0)
 .S $P(DIR(0),"^",2)=":"_DT_":AEXP"
"RTN","ECXTREX",48,0)
 .S DIR("A")="Starting with Date: "
"RTN","ECXTREX",49,0)
 .D ^DIR
"RTN","ECXTREX",50,0)
 .I $D(DIROUT)!$D(DIRUT)!(Y="") S (STRTDT,ENDDT)="" S OUT=1 Q
"RTN","ECXTREX",51,0)
 .S STRTDT=Y
"RTN","ECXTREX",52,0)
 .K DIR
"RTN","ECXTREX",53,0)
 .;Get end date (must be in same month; must be in past)
"RTN","ECXTREX",54,0)
 .S DIR(0)="DOA"
"RTN","ECXTREX",55,0)
 .S X=$E(STRTDT,1,5)_"01"
"RTN","ECXTREX",56,0)
 .S X=$$FMADD^XLFDT(X,32)
"RTN","ECXTREX",57,0)
 .S X=$$FMADD^XLFDT(X,-($E(X,6,7)))
"RTN","ECXTREX",58,0)
 .I X>DT S X=DT
"RTN","ECXTREX",59,0)
 .S $P(DIR(0),"^",2)=STRTDT_":"_X_":AEXP"
"RTN","ECXTREX",60,0)
 .S DIR("A")="Ending with Date: "
"RTN","ECXTREX",61,0)
 .S DIR("B")=$$FMTE^XLFDT(X,"5D")
"RTN","ECXTREX",62,0)
 .D ^DIR
"RTN","ECXTREX",63,0)
 .I $D(DIROUT)!$D(DIRUT)!(Y="") S (STRTDT,ENDDT)=""  S OUT=1 Q
"RTN","ECXTREX",64,0)
 .S ENDDT=Y
"RTN","ECXTREX",65,0)
 .S OUT=1
"RTN","ECXTREX",66,0)
 Q:(STRTDT="")!(ENDDT="")
"RTN","ECXTREX",67,0)
 S ECXDATES=STRTDT_"^"_ENDDT_"^1"
"RTN","ECXTREX",68,0)
 ;Get extract logic to use
"RTN","ECXTREX",69,0)
 N ECXLOGIC
"RTN","ECXTREX",70,0)
 K DIR
"RTN","ECXTREX",71,0)
 S DIR("A")="Select fiscal year logic to use for extract"
"RTN","ECXTREX",72,0)
 S DIR(0)="SO^"
"RTN","ECXTREX",73,0)
 F X=2003,2004,2005,2006,2007,2008 D
"RTN","ECXTREX",74,0)
 .S Y=$E(X,5)
"RTN","ECXTREX",75,0)
 .S Y=$S((Y="")!(Y=" "):"",1:"Revision "_Y_" of ")
"RTN","ECXTREX",76,0)
 .S DIR(0)=DIR(0)_X_":"_Y_"Fiscal Year "_$E(X,1,4)_";"
"RTN","ECXTREX",77,0)
 D ^DIR
"RTN","ECXTREX",78,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","ECXTREX",79,0)
 S ECXLOGIC=Y
"RTN","ECXTREX",80,0)
 ;Queue extract
"RTN","ECXTREX",81,0)
 D @("BEG^"_ECXRTN)
"RTN","ECXTREX",82,0)
 Q
"RTN","ECXTREX",83,0)
PAUSE ;pause screen
"RTN","ECXTREX",84,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","ECXTREX",85,0)
 S DIR(0)="E"
"RTN","ECXTREX",86,0)
 W !!
"RTN","ECXTREX",87,0)
 D ^DIR
"RTN","ECXTREX",88,0)
 W !!
"RTN","ECXTREX",89,0)
 Q
"RTN","ECXTRT")
0^33^B56335762^B58970453
"RTN","ECXTRT",1,0)
ECXTRT ;ALB/JAP,BIR/DMA,CML,PTD-Treating Specialty Change Extract ; 10/17/07 3:48pm
"RTN","ECXTRT",2,0)
 ;;3.0;DSS EXTRACTS;**1,8,17,24,33,35,39,46,49,84,107,105**;Dec 22, 1997;Build 70
"RTN","ECXTRT",3,0)
BEG ;entry point from option
"RTN","ECXTRT",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXTRT",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXTRT",6,0)
 Q
"RTN","ECXTRT",7,0)
 ;
"RTN","ECXTRT",8,0)
START ; start package specific extract
"RTN","ECXTRT",9,0)
 N LOC,SPC,TRT,WRD
"RTN","ECXTRT",10,0)
 S QFLG=0
"RTN","ECXTRT",11,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXTRT",12,0)
 S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXTRT",13,0)
 K ^TMP($J,"ECXTMP") S TRT=0
"RTN","ECXTRT",14,0)
 F  S TRT=$O(^DIC(45.7,TRT)) Q:+TRT=0  S SPC=$P(^DIC(45.7,TRT,0),U,2),^TMP($J,"ECXTMP",TRT)=SPC
"RTN","ECXTRT",15,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXTRT",16,0)
 ;loop through type 6 movements to get treating specialty and provider changes
"RTN","ECXTRT",17,0)
 F  S ECD=$O(^DGPM("ATT6",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)!(QFLG)  F  S ECDA=$O(^DGPM("ATT6",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXTRT",18,0)
 .I $D(^DGPM(ECDA,0)) S EC=^(0),ECXDFN=+$P(EC,U,3) D  Q:QFLG
"RTN","ECXTRT",19,0)
 ..S ECXMVD1=$P(EC,U),WRD=$P(EC,U,6)
"RTN","ECXTRT",20,0)
 ..;
"RTN","ECXTRT",21,0)
 ..;- Call sets ECXA (In/Out indicator)
"RTN","ECXTRT",22,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXMVD1,"1;",13)
"RTN","ECXTRT",23,0)
 ..S ECMT=$P(EC,U,18),ECXADM=$P(EC,U,14),ECXADT=$P($G(^DGPM(ECXADM,0)),U)
"RTN","ECXTRT",24,0)
 ..;skip the record if its the admission treat. spec. change for this episode of care
"RTN","ECXTRT",25,0)
 ..Q:ECXADM=$P(EC,U,24)
"RTN","ECXTRT",26,0)
 ..S (ECXLOS,ECXLOSA,ECXLOSP)="" S ECXDSSD=""
"RTN","ECXTRT",27,0)
 ..K LOC D SETLOC(ECXDFN,ECXADM,ECPRO,.LOC)
"RTN","ECXTRT",28,0)
 ..;get data for current (new) ts movement
"RTN","ECXTRT",29,0)
 ..S ECD1=9999999.9999999-ECXMVD1
"RTN","ECXTRT",30,0)
 ..D FINDLOC(ECD1,.LOC,.ECXSPCN,.ECXPRVN,.ECXATTN,.ECXMOVN,.ECXTRTN)
"RTN","ECXTRT",31,0)
 ..Q:ECXSPCN=""
"RTN","ECXTRT",32,0)
 ..S ECD2=$O(LOC(ECD1)) Q:ECD2=""
"RTN","ECXTRT",33,0)
 ..S ECXMVD2=9999999.9999999-ECD2
"RTN","ECXTRT",34,0)
 ..;get data for previous (losing) ts movement
"RTN","ECXTRT",35,0)
 ..D FINDLOC(ECD2,.LOC,.ECXSPCL,.ECXPRVL,.ECXATTL,.ECXMOVL,.ECXTRTL)
"RTN","ECXTRT",36,0)
 ..;if ts has changed, find los on losing ts
"RTN","ECXTRT",37,0)
 ..D:ECXTRTL'=ECXTRTN PREVTRT^ECXTRT1(.LOC,ECD1,ECD2,ECXTRTL,.ECXLOS)
"RTN","ECXTRT",38,0)
 ..;whether ts has changed or not, see if primary provider has changed
"RTN","ECXTRT",39,0)
 ..;don't bother if there's no data on current primary provider or no change in provider
"RTN","ECXTRT",40,0)
 ..D:(ECXPRVN'="")&(ECXPRVN'=ECXPRVL) PREVPRV^ECXTRT1(.LOC,ECD1,ECXPRVN,ECD2,.ECXPRVL,.ECXLOSP)
"RTN","ECXTRT",41,0)
 ..;whether ts has changed or not, see if attending physician has changed
"RTN","ECXTRT",42,0)
 ..;don't bother if there's no data on current attending physician or no change in attending
"RTN","ECXTRT",43,0)
 ..D:(ECXATTN'="")&(ECXATTN'=ECXATTL) PREVATT^ECXTRT1(.LOC,ECD1,ECXATTN,ECD2,.ECXATTL,.ECXLOSA)
"RTN","ECXTRT",44,0)
 ..S ECXDATE=$$ECXDATE^ECXUTL(ECXMVD1,ECXYM),ECXTIME=$$ECXTIME^ECXUTL(ECXMVD1)
"RTN","ECXTRT",45,0)
 ..S ECXADMDT=$$ECXDATE^ECXUTL(ECXADT,ECXYM),ECXADMTM=$$ECXTIME^ECXUTL(ECXADT),ECXDCDT=""
"RTN","ECXTRT",46,0)
 ..;- Production Division
"RTN","ECXTRT",47,0)
 ..S ECXPDIV=""
"RTN","ECXTRT",48,0)
 ..I ECXLOGIC>2003 S ECXPDIV=$S(WRD="":"",1:$$NPDIV(WRD))
"RTN","ECXTRT",49,0)
 ..;
"RTN","ECXTRT",50,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXTRT",51,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXTRT",52,0)
 ..;
"RTN","ECXTRT",53,0)
 ..;- Chg outpat with movemnt/discharge to inpat (to comply w/existing business rule)
"RTN","ECXTRT",54,0)
 ..I ECXA="O"&(ECXOBS="NO")&(ECXMVD1) S ECXA="I"
"RTN","ECXTRT",55,0)
 ..;
"RTN","ECXTRT",56,0)
 ..;- Get providers person classes
"RTN","ECXTRT",57,0)
 .. S ECXATLPC=$$PRVCLASS^ECXUTL($E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",58,0)
 .. S ECATLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",59,0)
 .. S:+ECATLNPI'>0 ECATLNPI="" S ECATLNPI=$P(ECATLNPI,U)
"RTN","ECXTRT",60,0)
 .. S ECXPRNPC=$$PRVCLASS^ECXUTL($E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",61,0)
 .. S ECPRVNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",62,0)
 .. S:+ECPRVNPI'>0 ECPRVNPI="" S ECPRVNPI=$P(ECPRVNPI,U)
"RTN","ECXTRT",63,0)
 .. S ECXATNPC=$$PRVCLASS^ECXUTL($E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",64,0)
 .. S ECATTNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",65,0)
 .. S:+ECATTNPI'>0 ECATTNPI="" S ECATTNPI=$P(ECATTNPI,U)
"RTN","ECXTRT",66,0)
 .. S ECXPRLPC=$$PRVCLASS^ECXUTL($E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",67,0)
 .. S ECPRLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",68,0)
 .. S:+ECPRLNPI'>0 ECPRLNPI="" S ECPRLNPI=$P(ECPRLNPI,U)
"RTN","ECXTRT",69,0)
 ..;
"RTN","ECXTRT",70,0)
 ..;- If no encounter number, don't file record
"RTN","ECXTRT",71,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXTRT",72,0)
 ..D:ECXENC'="" FILE^ECXTRT2
"RTN","ECXTRT",73,0)
 ;for nhcu episodes with intervening asih stays, the los calculated here is not accurate,
"RTN","ECXTRT",74,0)
 ;but it never has been; this is best solution within current extract framework;
"RTN","ECXTRT",75,0)
 ;at discharge the los calculated for nhcu episodes will be the los since admission w/o asih los subtracted;
"RTN","ECXTRT",76,0)
 ;
"RTN","ECXTRT",77,0)
 ;loop through discharges to get last treating specialty
"RTN","ECXTRT",78,0)
 S ECD=ECSD1
"RTN","ECXTRT",79,0)
 F  S ECD=$O(^DGPM("ATT3",ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  F  S ECDA=$O(^DGPM("ATT3",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXTRT",80,0)
 .I $D(^DGPM(ECDA,0)) S EC=^(0),ECXDFN=+$P(EC,U,3) D  Q:QFLG
"RTN","ECXTRT",81,0)
 ..S ECXMVD1=$P(EC,U),WRD=$P(EC,U,6)
"RTN","ECXTRT",82,0)
 ..S (ECXDATE,ECXDCDT)=$$ECXDATE^ECXUTL(ECXMVD1,ECXYM),ECXTIME=$$ECXTIME^ECXUTL(ECXMVD1)
"RTN","ECXTRT",83,0)
 ..I ECXDCDT'>0 S ECXDCDT=""
"RTN","ECXTRT",84,0)
 ..S ECMT=$P(EC,U,18),ECXADM=$P(EC,U,14),ECXADT=$P($G(^DGPM(ECXADM,0)),U,1)
"RTN","ECXTRT",85,0)
 ..S (ECXTRTN,ECXSPCN,ECXPRVN,ECXATTN)="" S (ECXLOS,ECXLOSA,ECXLOSP)="" S ECXDSSD=""
"RTN","ECXTRT",86,0)
 ..K LOC D SETLOC(ECXDFN,ECXADM,ECPRO,.LOC)
"RTN","ECXTRT",87,0)
 ..S ECD1=9999999.9999999-ECXMVD1
"RTN","ECXTRT",88,0)
 ..;get ts change just before d/c
"RTN","ECXTRT",89,0)
 ..S ECD2=$O(LOC(ECD1)),ECXMVD2=9999999.9999999-ECD2
"RTN","ECXTRT",90,0)
 ..D FINDLOC(ECD2,.LOC,.ECXSPCL,.ECXPRVL,.ECXATTL,.ECXMOVL,.ECXTRTL)
"RTN","ECXTRT",91,0)
 ..;
"RTN","ECXTRT",92,0)
 ..;- Call sets ECXA (In/Out indicator) using date before discharge
"RTN","ECXTRT",93,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXMVD2,"1;",13)
"RTN","ECXTRT",94,0)
 ..S ECXADMDT=$$ECXDATE^ECXUTL(ECXADT,ECXYM),ECXADMTM=$$ECXTIME^ECXUTL(ECXADT)
"RTN","ECXTRT",95,0)
 ..;if closest ts change is admission ts, cant go back any further
"RTN","ECXTRT",96,0)
 ..S TRT=$O(LOC(ECD2,0)),REC=$O(LOC(ECD2,TRT,0))
"RTN","ECXTRT",97,0)
 ..I REC=ECXADM D
"RTN","ECXTRT",98,0)
 ...S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOS=X
"RTN","ECXTRT",99,0)
 ...I ECXPRVL'="" S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOSP=X
"RTN","ECXTRT",100,0)
 ...I ECXATTL'="" S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOSA=X
"RTN","ECXTRT",101,0)
 ..;otherwise, need to find when change to last ts occurred
"RTN","ECXTRT",102,0)
 ..I REC'=ECXADM D
"RTN","ECXTRT",103,0)
 ...D PREVTRT^ECXTRT1(.LOC,ECD1,ECD2,ECXTRTL,.ECXLOS)
"RTN","ECXTRT",104,0)
 ...D PREVPRV^ECXTRT1(.LOC,ECD1,ECXPRVN,ECD2,.ECXPRVL,.ECXLOSP)
"RTN","ECXTRT",105,0)
 ...D PREVATT^ECXTRT1(.LOC,ECD1,ECXATTN,ECD2,.ECXATTL,.ECXLOSA)
"RTN","ECXTRT",106,0)
 ..S:ECXLOS>9999 ECXLOS=9999 S:ECXLOSA>9999 ECXLOSA=9999
"RTN","ECXTRT",107,0)
 ..S:ECXLOSP>9999 ECXLOSP=9999
"RTN","ECXTRT",108,0)
 ..;- Production Division
"RTN","ECXTRT",109,0)
 ..S ECXPDIV=""
"RTN","ECXTRT",110,0)
 ..I ECXLOGIC>2003 S ECXPDIV=$S(WRD="":"",1:$$NPDIV(WRD))
"RTN","ECXTRT",111,0)
 ..;
"RTN","ECXTRT",112,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXTRT",113,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXTRT",114,0)
 ..;
"RTN","ECXTRT",115,0)
 ..;- Chg outpat with movemnt/discharge to inpat (to comply w/existing business rule)
"RTN","ECXTRT",116,0)
 ..I ECXA="O"&(ECXOBS="NO")&(ECXMVD1) S ECXA="I"
"RTN","ECXTRT",117,0)
 ..;
"RTN","ECXTRT",118,0)
 ..;- Get providers person classes
"RTN","ECXTRT",119,0)
 .. S ECXATLPC=$$PRVCLASS^ECXUTL($E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",120,0)
 .. S ECATLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",121,0)
 .. S:+ECATLNPI'>0 ECATLNPI="" S ECATLNPI=$P(ECATLNPI,U)
"RTN","ECXTRT",122,0)
 .. S ECXPRNPC=$$PRVCLASS^ECXUTL($E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",123,0)
 .. S ECPRVNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",124,0)
 .. S:+ECPRVNPI'>0 ECPRVNPI="" S ECPRVNPI=$P(ECPRVNPI,U)
"RTN","ECXTRT",125,0)
 .. S ECXATNPC=$$PRVCLASS^ECXUTL($E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",126,0)
 .. S ECATTNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",127,0)
 .. S:+ECATTNPI'>0 ECATTNPI="" S ECATTNPI=$P(ECATTNPI,U)
"RTN","ECXTRT",128,0)
 .. S ECXPRLPC=$$PRVCLASS^ECXUTL($E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",129,0)
 .. S ECPRLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",130,0)
 .. S:+ECPRLNPI'>0 ECPRLNPI="" S ECPRLNPI=$P(ECPRLNPI,U)
"RTN","ECXTRT",131,0)
 ..;
"RTN","ECXTRT",132,0)
 ..;- If no encounter number don't file record
"RTN","ECXTRT",133,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXTRT",134,0)
 ..D:ECXENC'="" FILE^ECXTRT2
"RTN","ECXTRT",135,0)
 D KPATDEM^ECXUTL2
"RTN","ECXTRT",136,0)
 Q
"RTN","ECXTRT",137,0)
 ;
"RTN","ECXTRT",138,0)
NPDIV(WRD) ;National Production Division
"RTN","ECXTRT",139,0)
 N DIV
"RTN","ECXTRT",140,0)
 S DIV=$$GET1^DIQ(42,WRD,.015,"I")
"RTN","ECXTRT",141,0)
 Q $S(DIV="":"",1:$$GETDIV^ECXDEPT(DIV))
"RTN","ECXTRT",142,0)
 ;
"RTN","ECXTRT",143,0)
SETLOC(ECXDFN,ECXADM,ECXPRO,ECXLOC) ;setup the local array from the ATS index
"RTN","ECXTRT",144,0)
 ; output
"RTN","ECXTRT",145,0)
 ; ECXLOC = local array (passed by reference)
"RTN","ECXTRT",146,0)
 ;
"RTN","ECXTRT",147,0)
 N SUB3,SUB4,SUB5,SPC,PRV,ATT,MOV
"RTN","ECXTRT",148,0)
 S SUB3=0
"RTN","ECXTRT",149,0)
 F  S SUB3=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3)) Q:SUB3=""  D
"RTN","ECXTRT",150,0)
 .S (SUB4,SUB5)=0
"RTN","ECXTRT",151,0)
 .S SUB4=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3,SUB4))
"RTN","ECXTRT",152,0)
 .S SUB5=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3,SUB4,SUB5))
"RTN","ECXTRT",153,0)
 .S ECXLOC(SUB3,SUB4,SUB5)="",SPC=$G(^TMP($J,"ECXTMP",SUB4))
"RTN","ECXTRT",154,0)
 .S DATA=$G(^DGPM(SUB5,0)),PRV=$P(DATA,U,8),ATT=$P(DATA,U,19)
"RTN","ECXTRT",155,0)
 .S MOV=$P(DATA,U,14)
"RTN","ECXTRT",156,0)
 .S:PRV]"" PRV=ECXPRO_PRV S:ATT]"" ATT=ECXPRO_ATT
"RTN","ECXTRT",157,0)
 .S ECXLOC(SUB3,SUB4,SUB5)=SPC_U_PRV_U_ATT_U_MOV
"RTN","ECXTRT",158,0)
 Q
"RTN","ECXTRT",159,0)
 ;
"RTN","ECXTRT",160,0)
FINDLOC(ECXTSD,ECXLOC,ECXSPC,ECXPRV,ECXATT,ECXMOV,ECXTRT) ;find local array node for current ts movement
"RTN","ECXTRT",161,0)
 ;   input
"RTN","ECXTRT",162,0)
 ;   ECXTSD = inverse date/time for current ts movement; required
"RTN","ECXTRT",163,0)
 ;   ECXLOC = local array; passed by reference; required
"RTN","ECXTRT",164,0)
 ;   output; data from record contained in MOVE
"RTN","ECXTRT",165,0)
 ;   ECXSPC = piece 1 of LOC (passed by reference)
"RTN","ECXTRT",166,0)
 ;   ECXPRV = piece 2 of LOC concatenated to PRO (passed by reference)
"RTN","ECXTRT",167,0)
 ;   ECXATT = piece 3 of LOC concatenated to PRO (passed by reference)
"RTN","ECXTRT",168,0)
 ;   ECXMOV = piece 4 of LOC (passed by reference)
"RTN","ECXTRT",169,0)
 ;   ECXTRT = pointer to file #45.7
"RTN","ECXTRT",170,0)
 ;
"RTN","ECXTRT",171,0)
 N SUB3,SUB4,SUB5,LOC
"RTN","ECXTRT",172,0)
 S (ECXSPC,ECXPRV,ECXATT,ECXMOV)=""
"RTN","ECXTRT",173,0)
 S SUB3=ECXTSD
"RTN","ECXTRT",174,0)
 I $D(ECXLOC(SUB3)) D
"RTN","ECXTRT",175,0)
 .S SUB4=$O(ECXLOC(SUB3,0)),SUB5=$O(ECXLOC(SUB3,SUB4,0))
"RTN","ECXTRT",176,0)
 .S LOC=ECXLOC(SUB3,SUB4,SUB5),ECXTRT=SUB4,ECXSPC=$P(LOC,U)
"RTN","ECXTRT",177,0)
 .S ECXPRV=$P(LOC,U,2),ECXATT=$P(LOC,U,3),ECXMOV=$P(LOC,U,4)
"RTN","ECXTRT",178,0)
 Q
"RTN","ECXTRT",179,0)
 ;
"RTN","ECXTRT",180,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXTRT",181,0)
 S ECHEAD="TRT"
"RTN","ECXTRT",182,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXTRT",183,0)
 Q
"RTN","ECXTRT",184,0)
 ;
"RTN","ECXTRT",185,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXTRT",186,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXTRT",187,0)
 Q
"RTN","ECXTRT2")
0^34^B4380192^n/a
"RTN","ECXTRT2",1,0)
ECXTRT2 ;ALB/JAP,BIR/DMA,CML,PTD-Treating Specialty Change Extract ; 04/12/2007
"RTN","ECXTRT2",2,0)
 ;;3.0;DSS EXTRACTS;**105**;Dec 22, 1997;Build 70
"RTN","ECXTRT2",3,0)
 ;
"RTN","ECXTRT2",4,0)
FILE ;file the extract record
"RTN","ECXTRT2",5,0)
 ;node0
"RTN","ECXTRT2",6,0)
 ;^dfn^ssn^name^i/o (ECXA)^date^product^adm date^d/c date^
"RTN","ECXTRT2",7,0)
 ;mov#^type^new ts^losing ts^losing ts los^
"RTN","ECXTRT2",8,0)
 ;losing attending^movement type^time^adm time^new provider^
"RTN","ECXTRT2",9,0)
 ;new attending^losing provider
"RTN","ECXTRT2",10,0)
 ;node1
"RTN","ECXTRT2",11,0)
 ;mpi^dss dept^placeholder^placeholder^placeholder^
"RTN","ECXTRT2",12,0)
 ;placeholder^losing attending los^losing provider los^dom^
"RTN","ECXTRT2",13,0)
 ;observ pat ind^encounter num
"RTN","ECXTRT2",14,0)
 ;^losing attending physician npi^losing prim ward provider npi^
"RTN","ECXTRT2",15,0)
 ;new attending physician npi^new primary ward provider npi
"RTN","ECXTRT2",16,0)
 ;^product division code^losing attending physician PC^new primary ward
"RTN","ECXTRT2",17,0)
 ;provider pc^new attending physician pc^losing primary ward prov pc^
"RTN","ECXTRT2",18,0)
 ;new attending physician npi^new primary ward provider npi^
"RTN","ECXTRT2",19,0)
 ;
"RTN","ECXTRT2",20,0)
 ;convert specialties to PTF Codes for transmission
"RTN","ECXTRT2",21,0)
 ;
"RTN","ECXTRT2",22,0)
 N ECXDATA
"RTN","ECXTRT2",23,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPCN,.ECXDATA)
"RTN","ECXTRT2",24,0)
 S ECXSPCN=$G(ECXDATA(7))
"RTN","ECXTRT2",25,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPCL,.ECXDATA)
"RTN","ECXTRT2",26,0)
 S ECXSPCL=$G(ECXDATA(7))
"RTN","ECXTRT2",27,0)
 ;done
"RTN","ECXTRT2",28,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXTRT2",29,0)
 S ECODE=EC7_U_EC23_U_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE_U_U
"RTN","ECXTRT2",30,0)
 S ECODE=ECODE_ECXADMDT_U_ECXDCDT_U_ECDA_U_6_U_ECXSPCN_U_ECXSPCL_U
"RTN","ECXTRT2",31,0)
 S ECODE=ECODE_ECXLOS_U_ECXATTL_U_ECMT_U_ECXTIME_U_ECXADMTM_U_ECXPRVN_U
"RTN","ECXTRT2",32,0)
 S ECODE=ECODE_ECXATTN_U_ECXPRVL_U
"RTN","ECXTRT2",33,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_U
"RTN","ECXTRT2",34,0)
 S ECODE1=ECODE1_ECXLOSA_U_ECXLOSP_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXPDIV
"RTN","ECXTRT2",35,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXATLPC_U_ECXPRNPC_U_ECXATNPC_U_ECXPRLPC
"RTN","ECXTRT2",36,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECATLNPI_U_ECPRLNPI_U_ECATTNPI_U_ECPRVNPI
"RTN","ECXTRT2",37,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXTRT2",38,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXTRT2",39,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXTRT2",40,0)
 Q
"RTN","ECXTRT2",41,0)
 ;
"RTN","ECXTRT2",42,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXTRT2",43,0)
 S ECHEAD="TRT"
"RTN","ECXTRT2",44,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXTRT2",45,0)
 Q
"RTN","ECXTRT2",46,0)
 ;
"RTN","ECXTRT2",47,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXTRT2",48,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXTRT2",49,0)
 Q
"RTN","ECXUD")
0^9^B52727032^B48739438
"RTN","ECXUD",1,0)
ECXUD ;ALB/JAP,BIR/DMA,PTD-Extract from UNIT DOSE EXTRACT DATA File (#728.904) ; 10/31/07 1:58pm
"RTN","ECXUD",2,0)
 ;;3.0;DSS EXTRACTS;**10,8,24,33,39,46,49,71,84,92,107,105**;Dec 22, 1997;Build 70
"RTN","ECXUD",3,0)
BEG ;entry point from option
"RTN","ECXUD",4,0)
 I '$O(^ECX(728.904,"A",0)) W !,"There are no unit dose orders to extract",!! R X:5 K X Q
"RTN","ECXUD",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXUD",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXUD",7,0)
 Q
"RTN","ECXUD",8,0)
 ;
"RTN","ECXUD",9,0)
START ;start package specific extract
"RTN","ECXUD",10,0)
 S QFLG=0
"RTN","ECXUD",11,0)
 S ECED=ECED+.3
"RTN","ECXUD",12,0)
 F ECD=ECSD1:0 S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:QFLG  D
"RTN","ECXUD",13,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:QFLG  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXUD",14,0)
 ..S DATA=^ECX(728.904,ECXJ,0),^(1)=$P(EC23,U,2),^ECX(728.904,"AC",$P(EC23,U,2),ECXJ)="" D STUFF
"RTN","ECXUD",15,0)
 K ^TMP($J,"ECXP")
"RTN","ECXUD",16,0)
 Q
"RTN","ECXUD",17,0)
 ;
"RTN","ECXUD",18,0)
STUFF ;get data
"RTN","ECXUD",19,0)
 N X,W,OK,P1,P3,PSTAT,PT,ECXPHA,ON,ECDRG
"RTN","ECXUD",20,0)
 S ECXDFN=$P(DATA,U,2),ECDRG=$P(DATA,U,4)
"RTN","ECXUD",21,0)
 ;
"RTN","ECXUD",22,0)
 ;get patient specific data
"RTN","ECXUD",23,0)
 S ECXERR="" D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXUD",24,0)
 Q:ECXERR
"RTN","ECXUD",25,0)
 ;
"RTN","ECXUD",26,0)
 S ECXPRO=$P(DATA,U,7),ECPROIEN=+ECXPRO,ECXPRO=$E($P(ECXPRO,";",2))_$P(ECXPRO,";")
"RTN","ECXUD",27,0)
 S ECXPRNPI=$$NPI^XUSNPI("Individual_ID",ECPROIEN,ECD)
"RTN","ECXUD",28,0)
 S:+ECXPRNPI'>0 ECXPRNPI="" S ECXPRNPI=$P(ECXPRNPI,U)
"RTN","ECXUD",29,0)
 S W=$P(DATA,U,6)
"RTN","ECXUD",30,0)
 S ECXDIV=$P($G(^DIC(42,+W,0)),U,11),ECXW=$P($G(^DIC(42,+W,44)),U)
"RTN","ECXUD",31,0)
 S ECXUDDT=$$ECXDATE^ECXUTL($P(DATA,U,3),ECXYM)
"RTN","ECXUD",32,0)
 S ECXUDTM=$E($P($P(DATA,U,3),".",2)_"000000",1,6)
"RTN","ECXUD",33,0)
 S ECXQTY=$P(DATA,U,5),ECXCOST=$P(DATA,U,8),ON=$P(DATA,U,10)
"RTN","ECXUD",34,0)
 ;call pharmacy drug file (#50) api via ecxutl5
"RTN","ECXUD",35,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXUD",36,0)
 S ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)
"RTN","ECXUD",37,0)
 S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXUD",38,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXUD",39,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXUD",40,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6),X="PSNAPIS"
"RTN","ECXUD",41,0)
 X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXUD",42,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXUD",43,0)
 ; - Department and National Production Division
"RTN","ECXUD",44,0)
 ;- Use of DSS Department postponed [S ECXDSSD=$$UDP^ECXDEPT(ECXDIV)]
"RTN","ECXUD",45,0)
 S ECXDSSD=""
"RTN","ECXUD",46,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXUD",47,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXUD",48,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXUD",49,0)
 ;- Ordering Date, Ordering Stop Code
"RTN","ECXUD",50,0)
 S ECXORDDT=$TR($$FMTE^XLFDT($P(DATA,U,9),"7DF")," /","0")
"RTN","ECXUD",51,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXUD",52,0)
 .;Get ordering stop code based on FY 2006 logic for outpatient
"RTN","ECXUD",53,0)
 .S ECXORDST=$$DOUDO^ECXUTL5(ECXDFN,ON)
"RTN","ECXUD",54,0)
 ;Ordering Provider Person Class
"RTN","ECXUD",55,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXPRO,2,999),$P(DATA,U,9))
"RTN","ECXUD",56,0)
 ;BCMA data (place holder)
"RTN","ECXUD",57,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)=""
"RTN","ECXUD",58,0)
 ;- Set national patient record flag if exist
"RTN","ECXUD",59,0)
 D NPRF^ECXUTL5
"RTN","ECXUD",60,0)
 ;- If no encounter number don't file record
"RTN","ECXUD",61,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,$P(DATA,U,3),ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXUD",62,0)
 D:ECXENC'="" FILE
"RTN","ECXUD",63,0)
 Q
"RTN","ECXUD",64,0)
 ;
"RTN","ECXUD",65,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get demographics from patient file
"RTN","ECXUD",66,0)
 ;init variables
"RTN","ECXUD",67,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXUD",68,0)
 ;get patient data if saved
"RTN","ECXUD",69,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXUD",70,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2)
"RTN","ECXUD",71,0)
 .S ECXMPI=$P(PT,U,3),ECXDOB=$P(PT,U,4)
"RTN","ECXUD",72,0)
 .S ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6)
"RTN","ECXUD",73,0)
 .S ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXUD",74,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12)
"RTN","ECXUD",75,0)
 .S ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXUD",76,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18)
"RTN","ECXUD",77,0)
 .S ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXUD",78,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24)
"RTN","ECXUD",79,0)
 .S ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXUD",80,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4)
"RTN","ECXUD",81,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",82,0)
 ;set patient data
"RTN","ECXUD",83,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXUD",84,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXUD",85,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXUD",86,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXUD",87,0)
 .S ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXUD",88,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXUD",89,0)
 .S ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET")
"RTN","ECXUD",90,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT")
"RTN","ECXUD",91,0)
 .S ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXUD",92,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL")
"RTN","ECXUD",93,0)
 .S ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXUD",94,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXUD",95,0)
 .;OEF/OIF data
"RTN","ECXUD",96,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXUD",97,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXUD",98,0)
 .;get CNHU status
"RTN","ECXUD",99,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXUD",100,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXUD",101,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",102,0)
 .; - Head and Neck Cancer Indicator
"RTN","ECXUD",103,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXUD",104,0)
 .; - Race and Ethnicity
"RTN","ECXUD",105,0)
 .S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXUD",106,0)
 .S ECXRC1=ECXPAT("RACE1")
"RTN","ECXUD",107,0)
 .;get emergency response indicator (FEMA)
"RTN","ECXUD",108,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXUD",109,0)
 .S ECXEST=ECXPAT("EC STAT")
"RTN","ECXUD",110,0)
 .;save for later
"RTN","ECXUD",111,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXUD",112,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXUD",113,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT
"RTN","ECXUD",114,0)
 ;
"RTN","ECXUD",115,0)
 ;get inpatient data
"RTN","ECXUD",116,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXUD",117,0)
 S ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),ECXDOM=$P(X,U,10)
"RTN","ECXUD",118,0)
 ;
"RTN","ECXUD",119,0)
 ;get primary care data
"RTN","ECXUD",120,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXUD",121,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXUD",122,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXUD",123,0)
 Q
"RTN","ECXUD",124,0)
 ;
"RTN","ECXUD",125,0)
FILE ;file record
"RTN","ECXUD",126,0)
 ;node0
"RTN","ECXUD",127,0)
 ;facility^dfn^ssn^name^in/out^day^drug category^quantity^ward^
"RTN","ECXUD",128,0)
 ;provider^cost^mov #^treat spec^ndc^new feeder key^investigational^
"RTN","ECXUD",129,0)
 ;udp time^adm date^adm time
"RTN","ECXUD",130,0)
 ;node1
"RTN","ECXUD",131,0)
 ;mpi^dss dept^provider npi^dom^observ pat ind^encounter num^
"RTN","ECXUD",132,0)
 ;prod div code^means tst^elig^dob^sex^state^county^zip+4^vet^
"RTN","ECXUD",133,0)
 ;period of svc^pow stat^pow loc^ir status^ao status^ao loc^
"RTN","ECXUD",134,0)
 ;purple heart ind.^mst status^cnh/sh status^enrollment loc^
"RTN","ECXUD",135,0)
 ;enrollment cat^enrollment status^enrollment priority^pc team^
"RTN","ECXUD",136,0)
 ;pc provider^pc provider npi^pc provider p.class^assoc. pc provider^
"RTN","ECXUD",137,0)
 ;assoc. pc provider npi^assoc. pc provider p.class
"RTN","ECXUD",138,0)
 ;node2
"RTN","ECXUD",139,0)
 ;ordering date^ordering stop code^head & neck cancer ind.^ethnicity^
"RTN","ECXUD",140,0)
 ;race1^bcma drug dispensed^bcma dose given^bcma unit of
"RTN","ECXUD",141,0)
 ;administration^bcma icu flag^ordering provider person class^
"RTN","ECXUD",142,0)
 ;^enrollment priority ECXPRIOR_enrollment subgroup
"RTN","ECXUD",143,0)
 ;ECXSBGRP^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet
"RTN","ECXUD",144,0)
 ;elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible
"RTN","ECXUD",145,0)
 ;ECXCVENC^national patient record flag ECXNPRFI^emerg resp indic(FEMA) 
"RTN","ECXUD",146,0)
 ;ECXERI^environ contamin ECXEST^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^provider npi ECXPRNPI
"RTN","ECXUD",147,0)
 N DA,DIK
"RTN","ECXUD",148,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXUD",149,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXUD",150,0)
 S ECODE=ECODE_ECXUDDT_U_ECCAT_U_ECXQTY_U_ECXW_U_ECXPRO_U_ECXCOST_U
"RTN","ECXUD",151,0)
 S ECODE=ECODE_ECXMN_U_ECXTS_U_ECNDC_U_ECNFC_U_ECINV_U_ECXUDTM_U
"RTN","ECXUD",152,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXUD",153,0)
 N ECXDATA
"RTN","ECXUD",154,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXUD",155,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXUD",156,0)
 ;done
"RTN","ECXUD",157,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U
"RTN","ECXUD",158,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECXADM)_U
"RTN","ECXUD",159,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXUD",160,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U_ECXSEX_U
"RTN","ECXUD",161,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U
"RTN","ECXUD",162,0)
 S ECODE1=ECODE1_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXUD",163,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXENRL_U
"RTN","ECXUD",164,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECPTTM_U_ECPTPR_U
"RTN","ECXUD",165,0)
 S ECODE1=ECODE1_U_ECCLAS_U_ECASPR_U_U_ECCLAS2_U
"RTN","ECXUD",166,0)
 S ECODE2=ECXORDDT_U_ECXORDST_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXUD",167,0)
 I ECXLOGIC>2003 S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXUD",168,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXUD",169,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXEST
"RTN","ECXUD",170,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECXPRNPI
"RTN","ECXUD",171,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXUD",172,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXUD",173,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXUD",174,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXUD",175,0)
 Q
"RTN","ECXUD",176,0)
 ;
"RTN","ECXUD",177,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXUD",178,0)
 S ECHEAD="UDP"
"RTN","ECXUD",179,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXUD",180,0)
 Q
"RTN","ECXUD",181,0)
 ;
"RTN","ECXUD",182,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXUD",183,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXUD",184,0)
 Q
"RTN","ECXUSUR")
0^12^B28806381^B28206456
"RTN","ECXUSUR",1,0)
ECXUSUR ;ALB/TJL-Surgery Extract Unusual Volume Report ; 9/4/07 8:19am
"RTN","ECXUSUR",2,0)
 ;;3.0;DSS EXTRACTS;**49,71,84,93,105**;July 1, 2003;Build 70
"RTN","ECXUSUR",3,0)
 ;
"RTN","ECXUSUR",4,0)
EN ; entry point
"RTN","ECXUSUR",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD
"RTN","ECXUSUR",6,0)
 N ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,ECXFLAG
"RTN","ECXUSUR",7,0)
 S QFLG=0,ECTHLD="",ECXFLAG=$G(FLAG)
"RTN","ECXUSUR",8,0)
 ; get today's date
"RTN","ECXUSUR",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUSUR",10,0)
 I 'ECXFLAG D BEGIN Q:QFLG
"RTN","ECXUSUR",11,0)
 D SELECT Q:QFLG
"RTN","ECXUSUR",12,0)
 S ECXDESC=$S(ECXFLAG:"SUR Volume Report",1:"Surgery Extract Unusual Volume Report")
"RTN","ECXUSUR",13,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUSUR",14,0)
 W !!,"This report requires 132-column format."
"RTN","ECXUSUR",15,0)
 D EN^XUTMDEVQ("PROCESS^ECXUSUR",ECXDESC,.ECXSAVE)
"RTN","ECXUSUR",16,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXUSUR",17,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUSUR",18,0)
 D HOME^%ZIS
"RTN","ECXUSUR",19,0)
 D AUDIT^ECXKILL
"RTN","ECXUSUR",20,0)
 Q
"RTN","ECXUSUR",21,0)
 ;
"RTN","ECXUSUR",22,0)
BEGIN ; display report description
"RTN","ECXUSUR",23,0)
 W @IOF
"RTN","ECXUSUR",24,0)
 W !,"This report prints a listing of unusual volumes that would be"
"RTN","ECXUSUR",25,0)
 W !,"generated by the Surgery extract (SUR) as determined by a"
"RTN","ECXUSUR",26,0)
 W !,"user-defined threshold value.  It should be run prior to the"
"RTN","ECXUSUR",27,0)
 W !,"generation of the actual extract(s) to identify and fix, as"
"RTN","ECXUSUR",28,0)
 W !,"necessary, any volumes determined to be erroneous."
"RTN","ECXUSUR",29,0)
 W !!,"Unusual volumes are those where either the Operation Time,"
"RTN","ECXUSUR",30,0)
 W !,"Patient Time, Anesthesia Time, Recovery Room Time, OR Clean Time"
"RTN","ECXUSUR",31,0)
 W !,"or Pt Holding Time field is greater than the threshold value."
"RTN","ECXUSUR",32,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXUSUR",33,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXUSUR",34,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXUSUR",35,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXUSUR",36,0)
 W !,"can be run as needed."
"RTN","ECXUSUR",37,0)
 W !!,"The report is sorted by descending Volume and Case Number."
"RTN","ECXUSUR",38,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUSUR",39,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUSUR",40,0)
 Q
"RTN","ECXUSUR",41,0)
 ;
"RTN","ECXUSUR",42,0)
SELECT ; user inputs for threshold volume and date range
"RTN","ECXUSUR",43,0)
 N DONE,OUT
"RTN","ECXUSUR",44,0)
 ; allow user to set threshold volume
"RTN","ECXUSUR",45,0)
 I 'ECXFLAG D
"RTN","ECXUSUR",46,0)
 .S ECTHLD=25
"RTN","ECXUSUR",47,0)
 .W !!,"The default threshold volume for the Surgery extract is "_ECTHLD_"."
"RTN","ECXUSUR",48,0)
 .W !,"The default threshold volume ("_ECTHLD_") equates to 6 hours."
"RTN","ECXUSUR",49,0)
 .S DIR(0)="Y",DIR("A")="Would you like to change the threshold?",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUSUR",50,0)
 .I Y D
"RTN","ECXUSUR",51,0)
 ..W !!,"Volume > threshold"
"RTN","ECXUSUR",52,0)
 ..S DIR(0)="N^0:99",DIR("A")="Enter the new threshold volume" D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q
"RTN","ECXUSUR",53,0)
 ; get date range from user
"RTN","ECXUSUR",54,0)
 Q:QFLG
"RTN","ECXUSUR",55,0)
 W !!,"Enter the date range for which you would like to scan the"
"RTN","ECXUSUR",56,0)
 W !,"Surgery Extract records.",!
"RTN","ECXUSUR",57,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXUSUR",58,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUSUR",59,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUSUR",60,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXUSUR",61,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXUSUR",62,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUSUR",63,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUSUR",64,0)
 .I Y<ECSD D  Q
"RTN","ECXUSUR",65,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXUSUR",66,0)
 ..W !,"Please try again.",!!
"RTN","ECXUSUR",67,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXUSUR",68,0)
 ..W !!,"Beginning and ending dates must be in the same month and year"
"RTN","ECXUSUR",69,0)
 ..W !,"Please try again.",!!
"RTN","ECXUSUR",70,0)
 .S ECED=Y
"RTN","ECXUSUR",71,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXUSUR",72,0)
 .S DONE=1
"RTN","ECXUSUR",73,0)
 Q
"RTN","ECXUSUR",74,0)
 ;
"RTN","ECXUSUR",75,0)
PROCESS ; entry point for queued report
"RTN","ECXUSUR",76,0)
 S ZTREQ="@"
"RTN","ECXUSUR",77,0)
 S ECXERR=0 D EN^ECXUSUR1 Q:ECXERR
"RTN","ECXUSUR",78,0)
 S QFLG=0 D PRINT
"RTN","ECXUSUR",79,0)
 Q
"RTN","ECXUSUR",80,0)
 ;
"RTN","ECXUSUR",81,0)
PRINT ; process temp file and print report
"RTN","ECXUSUR",82,0)
 N PG,QFLG,GTOT,LN,COUNT,VOL,SUB,REC
"RTN","ECXUSUR",83,0)
 U IO
"RTN","ECXUSUR",84,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUSUR",85,0)
 S (PG,QFLG,GTOT,COUNT)=0,$P(LN,"-",132)=""
"RTN","ECXUSUR",86,0)
 D HEADER Q:QFLG
"RTN","ECXUSUR",87,0)
 S VOL=-999999 F  S VOL=$O(^TMP($J,VOL)) Q:VOL=""!QFLG  D
"RTN","ECXUSUR",88,0)
 .S SUB="" F  S SUB=$O(^TMP($J,VOL,SUB)) Q:SUB=""!QFLG  S REC=^(SUB)  D
"RTN","ECXUSUR",89,0)
 ..S COUNT=COUNT+1
"RTN","ECXUSUR",90,0)
 ..I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUSUR",91,0)
 ..W !,?1,$P(REC,U),?7,$P(REC,U,2),?18,$P(REC,U,3),?27,$P(REC,U,4)
"RTN","ECXUSUR",92,0)
 ..W ?34,$P(REC,U,5),?55,$$RJ^XLFSTR($P(REC,U,7),4)
"RTN","ECXUSUR",93,0)
 ..W ?66,$$RJ^XLFSTR($P(REC,U,11),4),?77,$$RJ^XLFSTR($P(REC,U,9),4)
"RTN","ECXUSUR",94,0)
 ..W ?86,$$RJ^XLFSTR($P(REC,U,10),4),?93,$$RJ^XLFSTR($P(REC,U,6),4)
"RTN","ECXUSUR",95,0)
 ..W ?103,$$RJ^XLFSTR($P(REC,U,8),4),?113,$P(REC,U,14)
"RTN","ECXUSUR",96,0)
 ..W ?117,$P(REC,U,13)
"RTN","ECXUSUR",97,0)
 Q:QFLG
"RTN","ECXUSUR",98,0)
 I COUNT=0 W !!,?8,$S(ECXFLAG=1:"No surgery volumes to report for this extract",1:"No unusual volumes to report for this extract")
"RTN","ECXUSUR",99,0)
CLOSE ;
"RTN","ECXUSUR",100,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXUSUR",101,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUSUR",102,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUSUR",103,0)
 Q
"RTN","ECXUSUR",104,0)
 ;
"RTN","ECXUSUR",105,0)
HEADER ;header and page control
"RTN","ECXUSUR",106,0)
 N SS,JJ
"RTN","ECXUSUR",107,0)
 I $E(IOST)="C" D
"RTN","ECXUSUR",108,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUSUR",109,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUSUR",110,0)
 Q:QFLG
"RTN","ECXUSUR",111,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUSUR",112,0)
 W !,$S(ECXFLAG:"SUR Volume Report",1:"Surgery Extract Unusual Volume Report"),?124,"Page: "_PG
"RTN","ECXUSUR",113,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time: "_ECRUN
"RTN","ECXUSUR",114,0)
 W !,"  End Date: ",ECEND I 'ECXFLAG W ?97,"     Threshold Value: ",ECTHLD
"RTN","ECXUSUR",115,0)
 W !!,?28,"Case",?38,"Encounter",?52,"Pt Holding",?63,"Anesthesia",?75,"Patient",?83,"Operation",?93,"PACU",?101,"OR Clean",?111,"Canc/",?121,"Principal"
"RTN","ECXUSUR",116,0)
 W !,?1,"Name",?10,"SSN",?20,"Day",?27,"Number",?40,"Number"
"RTN","ECXUSUR",117,0)
 W ?54,"Time",?66,"Time",?77,"Time",?86,"Time",?93,"Time",?103,"Time"
"RTN","ECXUSUR",118,0)
 W ?111,"Abort",?121,"Procedure"
"RTN","ECXUSUR",119,0)
 W !,LN,!
"RTN","ECXUSUR",120,0)
 Q
"RTN","ECXUSUR",121,0)
 ;
"RTN","ECXUSUR1")
0^13^B13707019^B12781030
"RTN","ECXUSUR1",1,0)
ECXUSUR1 ;ALB/TJL-Surgery Extract Unusual Volume Report ; 10/3/07 4:08pm
"RTN","ECXUSUR1",2,0)
 ;;3.0;DSS EXTRACTS;**49,71,105**;July 1, 2003;Build 70
"RTN","ECXUSUR1",3,0)
EN ;
"RTN","ECXUSUR1",4,0)
 N ECHEAD,COUNT,TIMEDIF,ECXPROC
"RTN","ECXUSUR1",5,0)
 S ECHEAD="SUR"
"RTN","ECXUSUR1",6,0)
 S (COUNT,QFLG)=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXUSUR1",7,0)
 F  S ECD=$O(^SRF("AC",ECD)) Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXUSUR1",8,0)
 .S ECD0=0
"RTN","ECXUSUR1",9,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXUSUR1",10,0)
 ..I $D(^SRF(ECD0,0)) S ECXDFN=+$P(^(0),U,1) D STUFF Q:QFLG
"RTN","ECXUSUR1",11,0)
 Q
"RTN","ECXUSUR1",12,0)
 ;
"RTN","ECXUSUR1",13,0)
STUFF ;gather data
"RTN","ECXUSUR1",14,0)
 N J,DATA1,DATA2,DATAOP,ECXNONL,ECXSTOP
"RTN","ECXUSUR1",15,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ=""
"RTN","ECXUSUR1",16,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXUSUR1",17,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXUSUR1",18,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXUSUR1",19,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXUSUR1",20,0)
 S DATAOP=$S($D(^SRF(ECD0,"OP")):^("OP"),1:"")
"RTN","ECXUSUR1",21,0)
 S DATAPA=$S($D(^SRF(ECD0,1.1)):^(1.1),1:"")
"RTN","ECXUSUR1",22,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXUSUR1",23,0)
 ;get data
"RTN","ECXUSUR1",24,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXUSUR1",25,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXUSUR1",26,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXUSUR1",27,0)
 ;look for non-OR
"RTN","ECXUSUR1",28,0)
 S (ECNT,ECNL,ECXNONL,ECXSTOP)=""
"RTN","ECXUSUR1",29,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXUSUR1",30,0)
 .S A1=$P(ECNO,U,5)
"RTN","ECXUSUR1",31,0)
 .S A2=$P(ECNO,U,4)
"RTN","ECXUSUR1",32,0)
 .S TIME="##"
"RTN","ECXUSUR1",33,0)
 .D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXUSUR1",34,0)
 .S ECXNONL=+$P(ECNO,U,2)
"RTN","ECXUSUR1",35,0)
 .S ECNL=$P($G(^ECX(728.44,ECXNONL,0)),U,9)
"RTN","ECXUSUR1",36,0)
 .I ECNL="" S ECNL="UNKNOWN"
"RTN","ECXUSUR1",37,0)
 .;
"RTN","ECXUSUR1",38,0)
 .; Get DSS Stop Code to use in encounter number
"RTN","ECXUSUR1",39,0)
 .S ECXSTOP=$P($G(^ECX(728.44,ECXNONL,0)),U,4)
"RTN","ECXUSUR1",40,0)
 ;
"RTN","ECXUSUR1",41,0)
 ;retrieving anesthesia times first, then operation and patient
"RTN","ECXUSUR1",42,0)
 ;times, then storing in following order:
"RTN","ECXUSUR1",43,0)
 ;ecode0="recovery room time^pt hold area time^or clean time^patient
"RTN","ECXUSUR1",44,0)
 ;time^operation time^anesthesia time
"RTN","ECXUSUR1",45,0)
 S ECODE0=""
"RTN","ECXUSUR1",46,0)
 F J="1,4","2,3","10,12","13,14","10,15" D
"RTN","ECXUSUR1",47,0)
 .S A2=$P(DATA2,U,$P(J,","))
"RTN","ECXUSUR1",48,0)
 .S A1=$P(DATA2,U,$P(J,",",2))
"RTN","ECXUSUR1",49,0)
 .S TIME="##"
"RTN","ECXUSUR1",50,0)
 .I (A1&A2) D TIMEDIF(A1,A2) D
"RTN","ECXUSUR1",51,0)
 ..I +J'=2 D TIME
"RTN","ECXUSUR1",52,0)
 ..I +J=2 D  ;-Operation Time
"RTN","ECXUSUR1",53,0)
 ...S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXUSUR1",54,0)
 ...;I TIME<0 S TIME="###"
"RTN","ECXUSUR1",55,0)
 .S ECODE0=TIME_U_ECODE0 K TIME
"RTN","ECXUSUR1",56,0)
 ;
"RTN","ECXUSUR1",57,0)
 ;retrieve recovery room (PACU) time
"RTN","ECXUSUR1",58,0)
 S A2=$P($G(DATAPA),U,7)
"RTN","ECXUSUR1",59,0)
 S A1=$P($G(DATAPA),U,8)
"RTN","ECXUSUR1",60,0)
 S TIME="##"
"RTN","ECXUSUR1",61,0)
 I (A1&A2) D TIME
"RTN","ECXUSUR1",62,0)
 S ECODE0=TIME_U_ECODE0 K TIME
"RTN","ECXUSUR1",63,0)
 ;
"RTN","ECXUSUR1",64,0)
 I ECNL]"" S $P(ECODE0,U,2)=ECNT
"RTN","ECXUSUR1",65,0)
 ;
"RTN","ECXUSUR1",66,0)
 ;- Was surgery cancelled/aborted
"RTN","ECXUSUR1",67,0)
 S ECCAN=$P($G(^SRF(ECD0,30)),U)
"RTN","ECXUSUR1",68,0)
 I +ECCAN S ECCAN=$$CANC^ECXUTL4(ECNL,$P(DATA2,U,10))
"RTN","ECXUSUR1",69,0)
 ;
"RTN","ECXUSUR1",70,0)
 I ECXFLAG D FILE  Q
"RTN","ECXUSUR1",71,0)
 N PIECE,FILE
"RTN","ECXUSUR1",72,0)
 S FILE="NO"
"RTN","ECXUSUR1",73,0)
 F PIECE=1,2,3,4,5,6 D
"RTN","ECXUSUR1",74,0)
 . I $P(ECODE0,U,PIECE)>ECTHLD S FILE="YES"
"RTN","ECXUSUR1",75,0)
 . I $P(ECODE0,U,PIECE)<0 S FILE="YES"
"RTN","ECXUSUR1",76,0)
 ;
"RTN","ECXUSUR1",77,0)
 I FILE="YES" D FILE Q:ECXERR
"RTN","ECXUSUR1",78,0)
 Q
"RTN","ECXUSUR1",79,0)
 ;
"RTN","ECXUSUR1",80,0)
FILE ; Store unusual records for display later
"RTN","ECXUSUR1",81,0)
 N OK,SURPAT,SURNAME,SURSSN,SURDT,VOL
"RTN","ECXUSUR1",82,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECD,"."),"1;",.SURPAT)
"RTN","ECXUSUR1",83,0)
 I 'OK Q
"RTN","ECXUSUR1",84,0)
 S SURNAME=SURPAT("NAME")
"RTN","ECXUSUR1",85,0)
 S SURSSN=SURPAT("SSN")
"RTN","ECXUSUR1",86,0)
 S SURDT=$E(ECXDATE,4,5)_"/"_$E(ECXDATE,6,7)_"/"_$E(ECXDATE,2,3)
"RTN","ECXUSUR1",87,0)
 ;
"RTN","ECXUSUR1",88,0)
 ; Observation Patient Indicator (yes/no)
"RTN","ECXUSUR1",89,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXUSUR1",90,0)
 ;
"RTN","ECXUSUR1",91,0)
 ; Principal Procedure
"RTN","ECXUSUR1",92,0)
 S ECXPROC=$E($P(DATAOP,U),1,15)
"RTN","ECXUSUR1",93,0)
 ;
"RTN","ECXUSUR1",94,0)
 ; If no encounter number don't file record
"RTN","ECXUSUR1",95,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXUSUR1",96,0)
 ;
"RTN","ECXUSUR1",97,0)
 S VOL=$P(ECODE0,U)
"RTN","ECXUSUR1",98,0)
 I $P(ECODE0,U,2)>VOL S VOL=$P(ECODE0,U,2)
"RTN","ECXUSUR1",99,0)
 I $P(ECODE0,U,3)>VOL S VOL=$P(ECODE0,U,3)
"RTN","ECXUSUR1",100,0)
 S ^TMP($J,-VOL,-ECD0)=SURNAME_U_SURSSN_U_SURDT_U_ECD0_U_ECXENC_U_ECODE0_U_ECXPROC_U_ECCAN
"RTN","ECXUSUR1",101,0)
 S COUNT=COUNT+1
"RTN","ECXUSUR1",102,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZSTOP,ECXERR)=1
"RTN","ECXUSUR1",103,0)
 Q
"RTN","ECXUSUR1",104,0)
 ;
"RTN","ECXUSUR1",105,0)
TIME ; given date/time get increment
"RTN","ECXUSUR1",106,0)
 N CON
"RTN","ECXUSUR1",107,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXUSUR1",108,0)
 D TIMEDIF(A1,A2)
"RTN","ECXUSUR1",109,0)
 I 'CON D
"RTN","ECXUSUR1",110,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXUSUR1",111,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXUSUR1",112,0)
 I CON D
"RTN","ECXUSUR1",113,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXUSUR1",114,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXUSUR1",115,0)
 ;S:TIME<0 TIME="###"
"RTN","ECXUSUR1",116,0)
 Q
"RTN","ECXUSUR1",117,0)
 ;
"RTN","ECXUSUR1",118,0)
TIMEDIF(START,FINISH) ; Set values to be compared, in seconds
"RTN","ECXUSUR1",119,0)
 ;
"RTN","ECXUSUR1",120,0)
 S TIMEDIF=$$FMDIFF^XLFDT(START,FINISH,2)/900
"RTN","ECXUSUR1",121,0)
 I (TIMEDIF>0)&(TIMEDIF<.5) S TIMEDIF=.5
"RTN","ECXUSUR1",122,0)
 Q
"RTN","ECXUSUR1",123,0)
 ;
"RTN","ECXUSUR1",124,0)
EXIT S ECXERR=1 Q
"RTN","ECXUTL2")
0^22^B70446907^B68980292
"RTN","ECXUTL2",1,0)
ECXUTL2 ;ALB/JAP - Utilities for DSS Extracts (cont.) ; 6/12/07 6:38am
"RTN","ECXUTL2",2,0)
 ;;3.0;DSS EXTRACTS;**8,13,23,24,33,35,39,46,71,84,92,105**;Dec 22, 1997;Build 70
"RTN","ECXUTL2",3,0)
 ;
"RTN","ECXUTL2",4,0)
ECXDEF(ECXHEAD,ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER) ;variables specific to extract from file #727.1
"RTN","ECXUTL2",5,0)
 ;   input 
"RTN","ECXUTL2",6,0)
 ;   ECXHEAD = extract header code
"RTN","ECXUTL2",7,0)
 ;   all other formal list parameters passed by reference
"RTN","ECXUTL2",8,0)
 ;   output
"RTN","ECXUTL2",9,0)
 ;   ECXPACK = type field (#7)
"RTN","ECXUTL2",10,0)
 ;   ECXGRP  = group field (#9)
"RTN","ECXUTL2",11,0)
 ;   ECXFILE = file number field (#1)
"RTN","ECXUTL2",12,0)
 ;   ECXRTN  = routine field (#4)
"RTN","ECXUTL2",13,0)
 ;   ECXPIECE= running piece field (#11)
"RTN","ECXUTL2",14,0)
 ;   ECXVER  = dss version
"RTN","ECXUTL2",15,0)
 N ECXIEN,ECXARR,DIC,DA,DR,DIQ
"RTN","ECXUTL2",16,0)
 S (ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER)="",ECXIEN=0
"RTN","ECXUTL2",17,0)
 S ECXIEN=+$O(^ECX(727.1,"C",ECXHEAD,ECXIEN))
"RTN","ECXUTL2",18,0)
 I ECXIEN=0 D  Q
"RTN","ECXUTL2",19,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",20,0)
 .D MES^XPDUTL(" It appears that you may have a problem with File #727.1 --")
"RTN","ECXUTL2",21,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",22,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is not properly defined.")
"RTN","ECXUTL2",23,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",24,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",25,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",26,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",27,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",28,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",29,0)
 .W !!
"RTN","ECXUTL2",30,0)
 S DIC="^ECX(727.1,",DA=ECXIEN,DR=".01;1;4;7;9;11",DIQ="ECXARR"
"RTN","ECXUTL2",31,0)
 D EN^DIQ1
"RTN","ECXUTL2",32,0)
 S ECXPACK=ECXARR(727.1,ECXIEN,7)
"RTN","ECXUTL2",33,0)
 ;if this is an inactive extract type, skip it
"RTN","ECXUTL2",34,0)
 I ECXPACK["Inactive" D  Q
"RTN","ECXUTL2",35,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",36,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is no longer active/valid.")
"RTN","ECXUTL2",37,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",38,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",39,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",40,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",41,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",42,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",43,0)
 .W !!
"RTN","ECXUTL2",44,0)
 S ECXGRP=ECXARR(727.1,ECXIEN,9)
"RTN","ECXUTL2",45,0)
 S ECXFILE=ECXARR(727.1,ECXIEN,1)
"RTN","ECXUTL2",46,0)
 S ECXRTN="START^"_ECXARR(727.1,ECXIEN,4)
"RTN","ECXUTL2",47,0)
 S ECXPIECE=ECXARR(727.1,ECXIEN,11)
"RTN","ECXUTL2",48,0)
 ;version of dss/tsi in Austin as specified by btso
"RTN","ECXUTL2",49,0)
 S ECXVER=7
"RTN","ECXUTL2",50,0)
 Q
"RTN","ECXUTL2",51,0)
PATDEM(DFN,DT1,PAR,FLG) ; determine patient information
"RTN","ECXUTL2",52,0)
 ;  DFN   =
"RTN","ECXUTL2",53,0)
 ;  DT    =
"RTN","ECXUTL2",54,0)
 ;  PAR   =
"RTN","ECXUTL2",55,0)
 ;  FLG   =
"RTN","ECXUTL2",56,0)
 N DT2,PAT,OK,X
"RTN","ECXUTL2",57,0)
 D KPATDEM
"RTN","ECXUTL2",58,0)
 S FLG=$G(FLG),PAR=$S($D(PAR):PAR,1:"1;2;3;4;5;"),DT2=$P(DT1,".")
"RTN","ECXUTL2",59,0)
 Q:'$$PAT^ECXUTL3(DFN,DT2,PAR,.PAT) 0
"RTN","ECXUTL2",60,0)
 S ECXMPI=PAT("MPI")
"RTN","ECXUTL2",61,0)
 I PAR["1" D
"RTN","ECXUTL2",62,0)
 .S ECXSSN=PAT("SSN"),ECXPNM=PAT("NAME"),ECXDOB=PAT("DOB")
"RTN","ECXUTL2",63,0)
 .S ECXSEX=PAT("SEX"),ECXREL=PAT("RELIGION"),ECXRACE=PAT("RACE")
"RTN","ECXUTL2",64,0)
 .S ECXMAR=PAT("MARITAL")
"RTN","ECXUTL2",65,0)
 .S ECXETH=PAT("ETHNIC"),ECXRC1=PAT("RACE1")
"RTN","ECXUTL2",66,0)
 I PAR["2" D
"RTN","ECXUTL2",67,0)
 .S ECXCNTY=PAT("COUNTY"),ECXSTATE=PAT("STATE"),ECXZIP=PAT("ZIP")
"RTN","ECXUTL2",68,0)
 I PAR["3" D
"RTN","ECXUTL2",69,0)
 .S ECXPOS=PAT("POS"),ECSC=PAT("SC STAT"),ECXSVC=PAT("SC%")
"RTN","ECXUTL2",70,0)
 .S ECXVET=PAT("VET"),ECXMEAN=PAT("MEANS"),ECXELIG=PAT("ELIG")
"RTN","ECXUTL2",71,0)
 .S ECXENRL=PAT("ENROLL LOC")
"RTN","ECXUTL2",72,0)
 .S ECXERI=PAT("ERI")
"RTN","ECXUTL2",73,0)
 I PAR["4" S ECXEMP=PAT("EMPLOY")
"RTN","ECXUTL2",74,0)
 I PAR["5" D
"RTN","ECXUTL2",75,0)
 .S ECXVIET=PAT("VIETNAM"),ECXAST=PAT("AO STAT"),ECXRST=PAT("IR STAT")
"RTN","ECXUTL2",76,0)
 .S ECXEST=PAT("EC STAT"),ECXPST=PAT("POW STAT"),ECXPLOC=PAT("POW LOC")
"RTN","ECXUTL2",77,0)
 .S ECXPHI=PAT("PHI"),ECXMST=PAT("MST STAT"),ECXAOL=PAT("AOL")
"RTN","ECXUTL2",78,0)
 .S ECXOEF=PAT("ECXOEF"),ECXOEFDT=PAT("ECXOEFDT")
"RTN","ECXUTL2",79,0)
 I PAR["6" D
"RTN","ECXUTL2",80,0)
 .S (ECXPAYOR,ECXSAI)="" D VISN19(DFN,.ECXPAYOR,.ECXSAI)
"RTN","ECXUTL2",81,0)
 I FLG'[3 D
"RTN","ECXUTL2",82,0)
 .S X=$$PRIMARY(DFN,DT2),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXUTL2",83,0)
 .S ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6)
"RTN","ECXUTL2",84,0)
 .S ECASNPI=$P(X,U,7)
"RTN","ECXUTL2",85,0)
 I FLG'[2 D
"RTN","ECXUTL2",86,0)
 .S ECXINP=$$INP^ECXUTL2(DFN,DT1),ECXA=$P(ECXINP,U),ECXMN=$P(ECXINP,U,2)
"RTN","ECXUTL2",87,0)
 .S ECXTS=$P(ECXINP,U,3),ECXDOM=$P(ECXINP,U,10),ECXADMDT=$P(ECXINP,U,4)
"RTN","ECXUTL2",88,0)
 I FLG'[1 S X=$$ENROLLM(DFN)
"RTN","ECXUTL2",89,0)
 Q 1
"RTN","ECXUTL2",90,0)
 ;
"RTN","ECXUTL2",91,0)
KPATDEM ;
"RTN","ECXUTL2",92,0)
 K ECXADMDT,ECAO,ECASNPI,ECASPR,ECCLAS,ECCLAS2,ECENV,ECPTNPI,ECPTPR,ECPTTM
"RTN","ECXUTL2",93,0)
 K ECRE,ECSC,ECXA,ECXAST,ECXCAT,ECXCNTY,ECXEST,ECXENRL,ECXDOB
"RTN","ECXUTL2",94,0)
 K ECXDOM,ECXELIG,ECXINP,ECXMPI,ECXMN,ECXNM,ECXPHI,ECXPLOC,ECXMEAN,ECXMST
"RTN","ECXUTL2",95,0)
 K ECXPAYOR,ECXPNM,ECXPOS,ECXPRIOR,ECXPST,ECXRACE,ECXREL,ECXRST,ECXSAI
"RTN","ECXUTL2",96,0)
 K ECXSEX,ECXSSN,ECXSTAT,ECXSTATE,ECXSVC,ECXTS,ECXVIET,ECXZIP,VA,VAERR
"RTN","ECXUTL2",97,0)
 K ECXSBGRP
"RTN","ECXUTL2",98,0)
 Q
"RTN","ECXUTL2",99,0)
ENROLLM(DFN,RNDT) ;determines enrollment status, category, priority
"RTN","ECXUTL2",100,0)
 ;and user enrollee status
"RTN","ECXUTL2",101,0)
 ; input
"RTN","ECXUTL2",102,0)
 ;    DFN      = IEN from Patient file (Required)
"RTN","ECXUTL2",103,0)
 ;    RNDT     = Extract Run Date
"RTN","ECXUTL2",104,0)
 ; output
"RTN","ECXUTL2",105,0)
 ;    ECXSTAT  = Enrollment status
"RTN","ECXUTL2",106,0)
 ;    ECXPRIOR = Enrollment priority
"RTN","ECXUTL2",107,0)
 ;    ECXCAT   = Enrollment priority
"RTN","ECXUTL2",108,0)
 ;    ECXSBGRP = Enrollment subgroup
"RTN","ECXUTL2",109,0)
 ;    ECXUESTA = User enrollee
"RTN","ECXUTL2",110,0)
 ;    return value 0 if no data found, 1 if data found
"RTN","ECXUTL2",111,0)
 N CAT,PRIOR,STAT,X,X1,X2,X3,ENRIEN,ENR,FL,SBGRP
"RTN","ECXUTL2",112,0)
 S (ECXCAT,ECXPRIOR,ECXSTAT,ECXSBGRP,ECXEUSTA)=""
"RTN","ECXUTL2",113,0)
 I $G(DFN)="" Q 0
"RTN","ECXUTL2",114,0)
 ;User enrollee status, if current or future date set to 'U'
"RTN","ECXUTL2",115,0)
 ;DBIA #3989
"RTN","ECXUTL2",116,0)
 S ECXUESTA=$S($$UESTAT^EASUER(DFN):"U",1:"")
"RTN","ECXUTL2",117,0)
 ;Patient type
"RTN","ECXUTL2",118,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(DFN)
"RTN","ECXUTL2",119,0)
 ;Combat Veteran Status DBIA #4156
"RTN","ECXUTL2",120,0)
 S X3=$$CVEDT^ECXUTL5(DFN,$S($G(ECD):ECD,$G(ECXDATE):ECXDATE,1:DT))
"RTN","ECXUTL2",121,0)
 ;enrollment priority DBIA
"RTN","ECXUTL2",122,0)
 S STAT=$$STATUS^DGENA(DFN),PRIOR=$$PRIORITY^DGENA(DFN)
"RTN","ECXUTL2",123,0)
 S CAT=$$CATEGORY^DGENA4(DFN,STAT),SBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",124,0)
 ;find current enrollment when status=2 or 19
"RTN","ECXUTL2",125,0)
 I "^2^19^"[("^"_STAT_"^") S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"") Q 1
"RTN","ECXUTL2",126,0)
 ;find previous enrollment
"RTN","ECXUTL2",127,0)
 S ENRIEN=$$FINDCUR^DGENA(DFN) I ENRIEN="" Q 0
"RTN","ECXUTL2",128,0)
 I $G(RNDT)="" D NOW^%DTC S RNDT=X
"RTN","ECXUTL2",129,0)
 S RNDT=($E(RNDT,1,3)-1)_$E(RNDT,4,7),FL=0
"RTN","ECXUTL2",130,0)
 F  S ENRIEN=$$FINDPRI^DGENA(ENRIEN) Q:'ENRIEN  D  Q:FL
"RTN","ECXUTL2",131,0)
 . S ENR=$$GET^DGENA(ENRIEN,.ENR)
"RTN","ECXUTL2",132,0)
 . I "^2^19^"[("^"_ENR("STATUS")_"^"),ENR("EFFDATE")>RNDT D
"RTN","ECXUTL2",133,0)
 . . S ECXSTAT=ENR("STATUS"),ECXPRIOR=PRIOR,FL=1
"RTN","ECXUTL2",134,0)
 . . S ECXCAT=$$CATEGORY^DGENA4(DFN,ECXSTAT)
"RTN","ECXUTL2",135,0)
 . . S ECXSBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",136,0)
 . . S ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",137,0)
 I FL Q 1
"RTN","ECXUTL2",138,0)
 ;no enrollment status found =2 or 19
"RTN","ECXUTL2",139,0)
 S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",140,0)
 Q 1
"RTN","ECXUTL2",141,0)
PRIMARY(ECXDFN,ECXDATE,ECXPREFX) ;determine patient's pc team and pc provider
"RTN","ECXUTL2",142,0)
 ; input
"RTN","ECXUTL2",143,0)
 ; ECXDFN    = file #2 ien (required)
"RTN","ECXUTL2",144,0)
 ; ECXDATE   = date of interest (required)
"RTN","ECXUTL2",145,0)
 ; ECXPREFX  = prefix for provider data (optional)
"RTN","ECXUTL2",146,0)
 ;             defaults to "2" if not specified otherwise
"RTN","ECXUTL2",147,0)
 ; output
"RTN","ECXUTL2",148,0)
 ; ECXPRIME  = pc team ien^prefix_pc provider ien^pc provider person
"RTN","ECXUTL2",149,0)
 ;class^pc provider npi^prefix_assoc pc provider ien^assoc pc provider
"RTN","ECXUTL2",150,0)
 ;person class^assoc pc provider npi
"RTN","ECXUTL2",151,0)
 N ECPTTM,ECPTPR,ECCLAS,ECPRIME,ECASPR,ECCLAS2
"RTN","ECXUTL2",152,0)
 S:'$D(ECXPREFX) ECXPREFX=2 S:(+ECXPREFX=0) ECXPREFX=2
"RTN","ECXUTL2",153,0)
 ;get pc team data
"RTN","ECXUTL2",154,0)
 S ECPTTM=+$$OUTPTTM^SDUTL3(ECXDFN,ECXDATE) S:ECPTTM=0 ECPTTM=""
"RTN","ECXUTL2",155,0)
 ;get primary pc provider data
"RTN","ECXUTL2",156,0)
 S ECPTPR=+$$OUTPTPR^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",157,0)
 S ECCLAS="" I ECPTPR>0 S ECCLAS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXUTL2",158,0)
 N ECXUSRTN S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECPTPR,ECXDATE)
"RTN","ECXUTL2",159,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECPTNPI=$P(ECXUSRTN,U)
"RTN","ECXUTL2",160,0)
 S:ECPTPR=0 ECPTPR="" S:ECPTPR]"" ECPTPR=ECXPREFX_ECPTPR
"RTN","ECXUTL2",161,0)
 ;assoc pc provider call ok if routine scapmca from patch177 is present
"RTN","ECXUTL2",162,0)
 S ECASPR=""
"RTN","ECXUTL2",163,0)
 S X="SCAPMCA" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL2",164,0)
 .S ECASPR=+$$OUTPTAP^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",165,0)
 S ECCLAS2="" I ECASPR>0 S ECCLAS2=$$PRVCLASS^ECXUTL(ECASPR,ECXDATE)
"RTN","ECXUTL2",166,0)
 N ECXUSRTN S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECASPR,ECXDATE)
"RTN","ECXUTL2",167,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECASNPI=$P(ECXUSRTN,U)
"RTN","ECXUTL2",168,0)
 S:ECASPR=0 ECASPR="" S:ECASPR]"" ECASPR=ECXPREFX_ECASPR
"RTN","ECXUTL2",169,0)
 ;assemble
"RTN","ECXUTL2",170,0)
 S ECXPRIME=ECPTTM_U_ECPTPR_U_ECCLAS_U_ECPTNPI_U_ECASPR_U_ECCLAS2_U_ECASNPI
"RTN","ECXUTL2",171,0)
 Q ECXPRIME
"RTN","ECXUTL2",172,0)
INP(ECXDFN,ECXDATE) ; check for inpatient status
"RTN","ECXUTL2",173,0)
 ; input
"RTN","ECXUTL2",174,0)
 ; ECXDFN  = file #2 ien (required)
"RTN","ECXUTL2",175,0)
 ; ECXDATE = date of interest (required)
"RTN","ECXUTL2",176,0)
 ; output
"RTN","ECXUTL2",177,0)
 ; ECXINP  = patient status^movment # (file #405 ien)
"RTN","ECXUTL2",178,0)
 ;       current treat. spec. (file #42.4 ien)^admission date/time^
"RTN","ECXUTL2",179,0)
 ;       current ward (file #42 ien)^discharge date/time^
"RTN","ECXUTL2",180,0)
 ;       ward provider^attending phys.^ward (file #44 ien);facility
"RTN","ECXUTL2",181,0)
 ;       (file #40.8 ien);dss dept^dom
"RTN","ECXUTL2",182,0)
 ;           where patient status = I for inpatient
"RTN","ECXUTL2",183,0)
 ;                                = O for outpatient
"RTN","ECXUTL2",184,0)
 N DFN,DSSDEPT,ECA,ECADM,ECMN,ECTS,ECWARD,ECDC,ECXINP,ECXPRO
"RTN","ECXUTL2",185,0)
 N ECXATP,ECXDD,ECXDOM,ECXPROF,ECXPWP,ECXWW,FAC,VAIP,WRD,ECXPWPPC
"RTN","ECXUTL2",186,0)
 N ECXATPPC
"RTN","ECXUTL2",187,0)
 D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXUTL2",188,0)
 S ECXPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXUTL2",189,0)
 ;- Inpat/outpat indicator (ECA) initially set to "O" (outpatient)
"RTN","ECXUTL2",190,0)
 S DFN=ECXDFN,ECA="O"
"RTN","ECXUTL2",191,0)
 S (DSSDEPT,ECMN,ECTS,ECADM,ECWARD,ECDC,ECXATP,ECXPWP,ECXWW,WRD,FAC,ECXPWPPC,ECXATPPC)=""
"RTN","ECXUTL2",192,0)
 S VAIP("D")=ECXDATE D IN5^VADPT
"RTN","ECXUTL2",193,0)
 S ECMN=$G(VAIP(1))
"RTN","ECXUTL2",194,0)
 I ECMN D
"RTN","ECXUTL2",195,0)
 .S ECTS=+$P($G(^DIC(45.7,+VAIP(8),0)),U,2) S:ECTS=0 ECTS=""
"RTN","ECXUTL2",196,0)
 .;- Get inpat/outpat indicator
"RTN","ECXUTL2",197,0)
 .S ECA=$$INOUTP^ECXUTL4(ECTS)
"RTN","ECXUTL2",198,0)
 .S ECADM=+$G(VAIP(13,1)) S:ECADM=0 ECADM=""
"RTN","ECXUTL2",199,0)
 .S ECWARD=+$G(VAIP(5)) S:ECWARD=0 ECWARD=""
"RTN","ECXUTL2",200,0)
 .I ECWARD D
"RTN","ECXUTL2",201,0)
 ..S WRD=+$P($G(^DIC(42,+ECWARD,44)),U)
"RTN","ECXUTL2",202,0)
 ..S FAC=$P($G(^DIC(42,+ECWARD,0)),U,11)
"RTN","ECXUTL2",203,0)
 ..S DSSDEPT=$P($G(^ECX(727.4,ECWARD,0)),U,2)
"RTN","ECXUTL2",204,0)
 .S ECXWW=WRD_";"_FAC_";"_DSSDEPT,ECDC=+$G(VAIP(17,1)) S:ECDC=0 ECDC=""
"RTN","ECXUTL2",205,0)
 .S ECXPWP=+VAIP(7) S:ECXPWP=0 ECXPWP=""
"RTN","ECXUTL2",206,0)
 .S ECXATP=+VAIP(18) S:ECXATP=0 ECXATP=""
"RTN","ECXUTL2",207,0)
 .S ECXPWPPC=$$PRVCLASS^ECXUTL(ECXPWP,ECADM)
"RTN","ECXUTL2",208,0)
 .S ECXATPPC=$$PRVCLASS^ECXUTL(ECXATP,ECADM)
"RTN","ECXUTL2",209,0)
 .;prefix file #200 iens
"RTN","ECXUTL2",210,0)
 .S:ECXPWP ECXPWP=ECXPROF_ECXPWP S:ECXATP ECXATP=ECXPROF_ECXATP
"RTN","ECXUTL2",211,0)
 S ECXDOM=$P($G(^ECX(727.831,+ECTS,0)),U,2)
"RTN","ECXUTL2",212,0)
 S ECXINP=ECA_U_ECMN_U_ECTS_U_ECADM_U_ECWARD_U_ECDC_U_ECXPWP_U_ECXATP_U_ECXWW_U_ECXDOM_U_ECXPWPPC_U_ECXATPPC
"RTN","ECXUTL2",213,0)
 Q ECXINP
"RTN","ECXUTL2",214,0)
VISN19(ECXDFN,ECXPAYOR,ECXSAI) ;visn 19 sharing agreement data
"RTN","ECXUTL2",215,0)
 ; input  ECXDFN = patient file ien
"RTN","ECXUTL2",216,0)
 ; output ECXPAYOR, ECXSAI (passed by reference)
"RTN","ECXUTL2",217,0)
 N JJ,ALIAS,INSUR,DIC,DIQ,DA,DR,ECXARY,ECXERR,ECXDA
"RTN","ECXUTL2",218,0)
 S (ECXPAYOR,ECXSAI)=""
"RTN","ECXUTL2",219,0)
 D GETS^DIQ(2,ECXDFN,"1*,","I","ECXARY","ECXERR")
"RTN","ECXUTL2",220,0)
 I $D(ECXERR) Q
"RTN","ECXUTL2",221,0)
 S JJ=0 F  S JJ=$O(ECXARY(2.01,JJ)) Q:JJ=""  D  I ECXPAYOR]"" Q
"RTN","ECXUTL2",222,0)
 . S ALIAS=$G(ECXARY(2.01,JJ,.01,"I"))
"RTN","ECXUTL2",223,0)
 . S ECXPAYOR=$S(ALIAS="SHARING AGREEMENT":"A",ALIAS="TRICARE":"B",ALIAS="CAT C":"C",ALIAS="CATEGORY C":"C",ALIAS="CHAMPVA":"D",ALIAS="CHAMPUS":"E",1:"")
"RTN","ECXUTL2",224,0)
 . W !,$G(CNT)+1
"RTN","ECXUTL2",225,0)
 . W !,"The value of ECXPAYOR is: ",ECXPAYOR
"RTN","ECXUTL2",226,0)
 ;K ECXARY,ECXERR
"RTN","ECXUTL2",227,0)
 I ECXPAYOR]"" D GETS^DIQ(2,ECXDFN,".3121*,","I","ECXARY","ECXERR") D
"RTN","ECXUTL2",228,0)
 . I $D(ECXERR) Q
"RTN","ECXUTL2",229,0)
 . S JJ=0,ECXDA=$O(ECXARY(2.312,JJ)) I ECXDA="" Q
"RTN","ECXUTL2",230,0)
 . S DA=$G(ECXARY(2.312,ECXDA,.01,"I")) I DA="" Q
"RTN","ECXUTL2",231,0)
 . S INSUR=$$GET1^DIQ(36,DA,".01","I","","ECXERR")
"RTN","ECXUTL2",232,0)
 . I '$D(ECXERR) S ECXSAI=$E(ECXARY(2.312,ECXDA,.01,"I"),1,11)
"RTN","ECXUTL2",233,0)
 Q
"RTN","ECXUTL3")
0^44^B62713398^B60329558
"RTN","ECXUTL3",1,0)
ECXUTL3 ;ALB/GTS - Utilities for DSS Extracts ; 9/28/07 1:38pm
"RTN","ECXUTL3",2,0)
 ;;3.0;DSS EXTRACTS;**11,24,32,33,35,37,39,42,46,92,105**;Dec 22,1997;Build 70
"RTN","ECXUTL3",3,0)
 ;
"RTN","ECXUTL3",4,0)
OUTPTTM(ECXDFN,ECXDT) ;* Return PC Team from PCMM files or DPT
"RTN","ECXUTL3",5,0)
 ; Variables -
"RTN","ECXUTL3",6,0)
 ;            ECXDFN - IEN from Patient file (Required)
"RTN","ECXUTL3",7,0)
 ;            ECXDT  - Relevant Date for Primary Care Team
"RTN","ECXUTL3",8,0)
 ;                      (Defaults to DT)
"RTN","ECXUTL3",9,0)
 ;
"RTN","ECXUTL3",10,0)
 ; Returned: ECXTM -
"RTN","ECXUTL3",11,0)
 ;            Pointer to team file (#404.51)
"RTN","ECXUTL3",12,0)
 ;            or, if error or none defined, returns 0
"RTN","ECXUTL3",13,0)
 ;
"RTN","ECXUTL3",14,0)
 Q:'$G(ECXDFN) 0 ;** Quit if ECXDFN not defined
"RTN","ECXUTL3",15,0)
 N ECXTM
"RTN","ECXUTL3",16,0)
 S:'$D(ECXDT) ECXDT=DT
"RTN","ECXUTL3",17,0)
 I $T(OUTPTTM^SDUTL3)[",SCDATE" D
"RTN","ECXUTL3",18,0)
 .S ECXTM=+$$OUTPTTM^SDUTL3(ECXDFN,ECXDT)
"RTN","ECXUTL3",19,0)
 I $T(OUTPTTM^SDUTL3)'[",SCDATE" D
"RTN","ECXUTL3",20,0)
 .S ECXTM=+$$OUTPTTM^SDUTL3(ECXDFN)
"RTN","ECXUTL3",21,0)
 I ECXTM=0 D
"RTN","ECXUTL3",22,0)
 .S ECXTM=+$P($G(^DPT(+ECXDFN,"PC")),U,2)
"RTN","ECXUTL3",23,0)
 Q ECXTM
"RTN","ECXUTL3",24,0)
 ;
"RTN","ECXUTL3",25,0)
OUTPTPR(ECXDFN,ECXDT) ;* Return PC Provider from PCMM files or DPT
"RTN","ECXUTL3",26,0)
 ; Variables -
"RTN","ECXUTL3",27,0)
 ;            ECXDFN - IEN from Patient file (Required)
"RTN","ECXUTL3",28,0)
 ;            ECXDT  - Relevant Date for Primary Care Provider
"RTN","ECXUTL3",29,0)
 ;                      (Defaults to DT)
"RTN","ECXUTL3",30,0)
 ;
"RTN","ECXUTL3",31,0)
 ; Returned: ECXPR -
"RTN","ECXUTL3",32,0)
 ;            Pointer to file #200 
"RTN","ECXUTL3",33,0)
 ;            or, if error or none defined, returns a 0
"RTN","ECXUTL3",34,0)
 ;
"RTN","ECXUTL3",35,0)
 Q:'$G(ECXDFN) 0 ;** Quit if ECXDFN not defined
"RTN","ECXUTL3",36,0)
 N ECXPR
"RTN","ECXUTL3",37,0)
 S:'$D(ECXDT) ECXDT=DT
"RTN","ECXUTL3",38,0)
 I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXUTL3",39,0)
 .S ECXPR=+$$OUTPTPR^SDUTL3(ECXDFN,ECXDT)
"RTN","ECXUTL3",40,0)
 I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXUTL3",41,0)
 .S ECXPR=+$$OUTPTPR^SDUTL3(ECXDFN)
"RTN","ECXUTL3",42,0)
 I ECXPR=0 D
"RTN","ECXUTL3",43,0)
 .S ECXPR=+$G(^DPT(+ECXDFN,"PC"))
"RTN","ECXUTL3",44,0)
 Q ECXPR
"RTN","ECXUTL3",45,0)
 ;
"RTN","ECXUTL3",46,0)
PAT(ECXDFN,ECXDATE,ECXDATA,ECXPAT) ;Return basic patient data for extract
"RTN","ECXUTL3",47,0)
 ; Will not return data associated with test patients (SSN begin w 00000)
"RTN","ECXUTL3",48,0)
 ; Variables -
"RTN","ECXUTL3",49,0)
 ;  Input  ECXDFN - Patient internal entry number, DFN file#2; required
"RTN","ECXUTL3",50,0)
 ;         ECXDATE- Date used to get specific data from GETSTAT^DGMSTAPI
"RTN","ECXUTL3",51,0)
 ;                  for MST. If no date, defaults to today's date,
"RTN","ECXUTL3",52,0)
 ;                  standard FM format, optional
"RTN","ECXUTL3",53,0)
 ;         ECXDATA- Code indicating which data to return, optional.
"RTN","ECXUTL3",54,0)
 ;                  If code not specified then returns all. Codes are:
"RTN","ECXUTL3",55,0)
 ;                  1 - DEM^VADPT (demographic data)
"RTN","ECXUTL3",56,0)
 ;                  2 - ADD^VADPT (current address)
"RTN","ECXUTL3",57,0)
 ;                  3 - ELIG^VADPT (eligibility & enrollment location)
"RTN","ECXUTL3",58,0)
 ;                  4 - OPD^VADPT (other patient data)
"RTN","ECXUTL3",59,0)
 ;                  5 - SVC^VADPT & GETSTAT^DGMSTAPI (service & MST inf)
"RTN","ECXUTL3",60,0)
 ;         ECXPAT(- Passed by reference; required
"RTN","ECXUTL3",61,0)
 ;
"RTN","ECXUTL3",62,0)
 ;  Output:
"RTN","ECXUTL3",63,0)
 ;         ECXPAT   0 error or test patient no data in ECXPAT array
"RTN","ECXUTL3",64,0)
 ;                  1 data returned in ECXPAT array
"RTN","ECXUTL3",65,0)
 ;         ECXPAT(  Local array with patient data.
"RTN","ECXUTL3",66,0)
 ;
"RTN","ECXUTL3",67,0)
 N SSN,I,ECXCOD,ECXDAT,DFN,VAPA,VADM,VAEL,VAPD,VASV,STR,ECXAR,DIC,DIQ,RCNUM,RCVAL,COLMETH
"RTN","ECXUTL3",68,0)
 N DA,DR,PELG,MELIG,ZIP,MPI
"RTN","ECXUTL3",69,0)
 I ECXDFN="" Q 0
"RTN","ECXUTL3",70,0)
 S SSN=$$GET1^DIQ(2,ECXDFN,.09,"I"),DFN=ECXDFN,ECXPAT=0
"RTN","ECXUTL3",71,0)
 I $E(SSN,1,3)="000"!(SSN="") K ECXPAT Q 0  ;test patient
"RTN","ECXUTL3",72,0)
 ;test patient extended checks; mtl extract excluded
"RTN","ECXUTL3",73,0)
 I $G(ECHEAD)'="MTL",'$$SSN^ECXUTL5(SSN) K ECXPAT Q 0
"RTN","ECXUTL3",74,0)
 S STR="NAME;SSN;DOB;SEX;RACE;RELIGION;STATE;COUNTY;ZIP;SC%;MEANS;ELIG;"
"RTN","ECXUTL3",75,0)
 S STR=STR_"EMPLOY;AO STAT;IR STAT;EC STAT;POW STAT;POW LOC;MST STAT;"
"RTN","ECXUTL3",76,0)
 S STR=STR_"ENROLL LOC;MPI;VIETNAM;POS;MARITAL"
"RTN","ECXUTL3",77,0)
 ;initialize return array values
"RTN","ECXUTL3",78,0)
 F I=1:1 S ECXDAT=$P(STR,";",I) Q:ECXDAT=""  S ECXPAT(ECXDAT)=""
"RTN","ECXUTL3",79,0)
 F I=1:1:$L(ECXDATA,";") S ECXDAT=$P(ECXDATA,";",I) I ECXDAT'="" D
"RTN","ECXUTL3",80,0)
 . S ECXCOD(ECXDAT)=""
"RTN","ECXUTL3",81,0)
 ;
"RTN","ECXUTL3",82,0)
 ;- Get ICN if MPI installed
"RTN","ECXUTL3",83,0)
 S X="MPIF001" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",84,0)
 .;
"RTN","ECXUTL3",85,0)
 .;- Get 1st piece (either ICN # or -1 if error)
"RTN","ECXUTL3",86,0)
 . S MPI=+$$GETICN^MPIF001(DFN)
"RTN","ECXUTL3",87,0)
 .;
"RTN","ECXUTL3",88,0)
 .;- If error, set to null
"RTN","ECXUTL3",89,0)
 . S ECXPAT("MPI")=$S(MPI>0:MPI,1:"")
"RTN","ECXUTL3",90,0)
 D  ;get demographic data
"RTN","ECXUTL3",91,0)
 . I ECXDATA'="",'$D(ECXCOD(1)) Q
"RTN","ECXUTL3",92,0)
 . D DEM^VADPT
"RTN","ECXUTL3",93,0)
 . S ECXPAT("NAME")=$E($P(VADM(1),",")_"    ",1,4)
"RTN","ECXUTL3",94,0)
 . S ECXPAT("SSN")=$P(VADM(2),U),ECXPAT("MARITAL")=$P(VADM(10),U)
"RTN","ECXUTL3",95,0)
 . S ECXPAT("DOB")=$$ECXDOB^ECXUTL($P(VADM(3),U))
"RTN","ECXUTL3",96,0)
 . S ECXPAT("SEX")=$P(VADM(5),U),ECXPAT("RELIGION")=$P(VADM(9),U)
"RTN","ECXUTL3",97,0)
 . S DIC=10,DR=2,DA=+VADM(8),DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",98,0)
 . S ECXPAT("RACE")=$G(ECXAR(10,DA,DR,"I")),ECXPAT=1
"RTN","ECXUTL3",99,0)
 . ;add new race and ethnicity fields for FY2003
"RTN","ECXUTL3",100,0)
 . S (ECXPAT("ETHNIC"),ECXPAT("RACE1"))=""
"RTN","ECXUTL3",101,0)
 . S X="DGUTL4" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",102,0)
 .. S COLMETH=$$PTR2CODE^DGUTL4($G(VADM(11,1,1)),3,4) I COLMETH="S" D
"RTN","ECXUTL3",103,0)
 ... S ECXPAT("ETHNIC")=$$PTR2CODE^DGUTL4(+$G(VADM(11,1)),2,4)
"RTN","ECXUTL3",104,0)
 .. S (RCVAL,RCNUM)=""
"RTN","ECXUTL3",105,0)
 .. F  S RCNUM=$O(VADM(12,RCNUM)) Q:RCNUM=""  Q:RCVAL="C"  S COLMETH=$$PTR2CODE^DGUTL4(+$G(VADM(12,RCNUM,1)),3,4) I COLMETH="S" D
"RTN","ECXUTL3",106,0)
 ... S RCVAL=$$PTR2CODE^DGUTL4(+$G(VADM(12,RCNUM)),1,4)
"RTN","ECXUTL3",107,0)
 ... I RCVAL="C" S ECXPAT("RACE1")=RCVAL Q
"RTN","ECXUTL3",108,0)
 ... S ECXPAT("RACE1")=ECXPAT("RACE1")_RCVAL
"RTN","ECXUTL3",109,0)
 D  ;get address information
"RTN","ECXUTL3",110,0)
 . I ECXDATA'="",'$D(ECXCOD(2)) Q
"RTN","ECXUTL3",111,0)
 . D ADD^VADPT
"RTN","ECXUTL3",112,0)
 . S DIC=5,DR=2,DA=+VAPA(5),DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",113,0)
 . S ECXPAT("STATE")=$G(ECXAR(5,DA,DR,"I"))
"RTN","ECXUTL3",114,0)
 . S DIC=5,DA=+VAPA(5),DR=3,DR(5.01)=2,DA(5.01)=+VAPA(7),DIQ="ECXAR"
"RTN","ECXUTL3",115,0)
 . S DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",116,0)
 . S ECXPAT("COUNTY")=$G(ECXAR(5.01,DA(5.01),2,"I"))
"RTN","ECXUTL3",117,0)
 . S ECXPAT("ZIP")=$P(VAPA(11),U,2),ECXPAT=1
"RTN","ECXUTL3",118,0)
 D  ;get eligibility information
"RTN","ECXUTL3",119,0)
 . I ECXDATA'="",'$D(ECXCOD(3)) Q
"RTN","ECXUTL3",120,0)
 . D ELIG^VADPT
"RTN","ECXUTL3",121,0)
 . S PELG=$P(VAEL(1),U),MELIG=$S(PELG="":"",1:$$GET1^DIQ(8,PELG,8,"I"))
"RTN","ECXUTL3",122,0)
 . S ECXPAT("POS")=$P($G(^DIC(21,+VAEL(2),0)),U,3)
"RTN","ECXUTL3",123,0)
 . S ECXPAT("SC STAT")=$S(+VAEL(3):"Y",+VAEL(3)=0:"N",1:"")
"RTN","ECXUTL3",124,0)
 . S ECXPAT("SC%")=$P(VAEL(3),U,2)
"RTN","ECXUTL3",125,0)
 . S ECXPAT("VET")=$S(VAEL(4):"Y",VAEL(4)=0:"N",1:"")
"RTN","ECXUTL3",126,0)
 . S ECXPAT("MEANS")=$P(VAEL(9),U),ECXPAT=1
"RTN","ECXUTL3",127,0)
 . S ECXPAT("ELIG")=$$ELIG(MELIG,ECXPAT("SC%"))
"RTN","ECXUTL3",128,0)
 . ;get enrollment location
"RTN","ECXUTL3",129,0)
 . S DIC=2,DR=27.02,DA=ECXDFN,DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",130,0)
 . S ECXDAT=$G(ECXAR(2,ECXDFN,DR,"I")) I ECXDAT K ECXAR D
"RTN","ECXUTL3",131,0)
 . . S DIC=4,DA=ECXDAT,DR=99,DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",132,0)
 . . S ECXPAT("ENROLL LOC")=ECXAR(4,ECXDAT,DR,"I")
"RTN","ECXUTL3",133,0)
 . ;get Emergency Response Indicator (FEMA)
"RTN","ECXUTL3",134,0)
 . S ECXPAT("ERI")=$$GET1^DIQ(2,ECXDFN,.181,"I")
"RTN","ECXUTL3",135,0)
 D  ;get other patient information
"RTN","ECXUTL3",136,0)
 . I ECXDATA'="",'$D(ECXCOD(4)) Q
"RTN","ECXUTL3",137,0)
 . D OPD^VADPT
"RTN","ECXUTL3",138,0)
 . S ECXPAT("EMPLOY")=$P(VAPD(7),U),ECXPAT=1
"RTN","ECXUTL3",139,0)
 D  ;get service information
"RTN","ECXUTL3",140,0)
 . I ECXDATA'="",'$D(ECXCOD(5)) Q
"RTN","ECXUTL3",141,0)
 . D SVC^VADPT
"RTN","ECXUTL3",142,0)
 . S ECXPAT("VIETNAM")=$S(VASV(1):"Y",VASV(2)=0:"N",1:"U")
"RTN","ECXUTL3",143,0)
 . S ECXPAT("AO STAT")=$S(VASV(2):"Y",VASV(2)=0:"N",1:"U")
"RTN","ECXUTL3",144,0)
 . S ECXPAT("IR STAT")=$S(VASV(3):"Y",VASV(3)=0:"N",1:"U")
"RTN","ECXUTL3",145,0)
 . S ECXPAT("EC STAT")=$$GET1^DIQ(2,ECXDFN,.322013,"I")
"RTN","ECXUTL3",146,0)
 . S ECXPAT("POW STAT")=$S(VASV(4):"Y",VASV(4)=0:"N",1:"U")
"RTN","ECXUTL3",147,0)
 . S ECXPAT("POW LOC")=$P(VASV(4,3),U),ECXPAT=1
"RTN","ECXUTL3",148,0)
 . S ECXPAT("PHI")=$S(VASV(9)=1:"Y",VASV(9)=0:"N",1:"")
"RTN","ECXUTL3",149,0)
 . ;- Agent Orange Location (K=Korean DMZ,V=Vietnam)
"RTN","ECXUTL3",150,0)
 . S ECXPAT("AOL")=$P($G(VASV(2,5)),U)
"RTN","ECXUTL3",151,0)
 . ;get patient OEF/OIF status and date of return
"RTN","ECXUTL3",152,0)
 . D OEFDATA^ECXUTL4
"RTN","ECXUTL3",153,0)
 . ;
"RTN","ECXUTL3",154,0)
 . ;get patient current MST status
"RTN","ECXUTL3",155,0)
 . I ECXDATE'="",ECXDATE'["." S ECXDATE=ECXDATE+.9
"RTN","ECXUTL3",156,0)
 . S X="DGMSTAPI" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",157,0)
 . . S ECXDAT=$$GETSTAT^DGMSTAPI(DFN,ECXDATE)
"RTN","ECXUTL3",158,0)
 . . S ECXPAT("MST STAT")=$S(+ECXDAT>0:$P(ECXDAT,U,2),1:"")
"RTN","ECXUTL3",159,0)
 I 'ECXPAT K ECXPAT Q 0
"RTN","ECXUTL3",160,0)
 Q 1
"RTN","ECXUTL3",161,0)
 ;
"RTN","ECXUTL3",162,0)
ELIG(ECXELIG,ECXSVCP) ;Converts veteran eligibility code to NPCD code
"RTN","ECXUTL3",163,0)
 ; Variables -
"RTN","ECXUTL3",164,0)
 ;  Input  ECXELIG - Pointer to MAS ELIGIBILITY CODE file #8.1
"RTN","ECXUTL3",165,0)
 ;         ECXSVCP - Number value rep. service connected percentage.
"RTN","ECXUTL3",166,0)
 ;
"RTN","ECXUTL3",167,0)
 ;  Output:
"RTN","ECXUTL3",168,0)
 ;         ECXNCPD  NPCD Eligibility Code
"RTN","ECXUTL3",169,0)
 ;
"RTN","ECXUTL3",170,0)
 N TEXT,IEN,SCPER,FND,NPCD,I,ECXBG,ECXEN,ECXNPCD
"RTN","ECXUTL3",171,0)
 I ECXELIG="" Q ""
"RTN","ECXUTL3",172,0)
 F I=1:1 S TEXT=$P($T(ELGTXT+I),";",3,999) Q:TEXT="END"  D  I $D(NPCD) Q
"RTN","ECXUTL3",173,0)
 . S IEN=$P(TEXT,";"),SCPER=$P(TEXT,";",2)
"RTN","ECXUTL3",174,0)
 . I ECXELIG=IEN D
"RTN","ECXUTL3",175,0)
 . . I SCPER="" S NPCD=$P(TEXT,";",3) Q
"RTN","ECXUTL3",176,0)
 . . S ECXBG=$S($E(SCPER)="<":0,$E(SCPER)=">":$P(SCPER,">",2)+1,SCPER["-":+SCPER,1:"")
"RTN","ECXUTL3",177,0)
 . . S ECXEN=$S($E(SCPER)="<":$P(SCPER,"<",2),$E(SCPER)=">":100,SCPER["-":$P(SCPER,"-",2),1:"")
"RTN","ECXUTL3",178,0)
 . . I ECXSVCP'<ECXBG,ECXSVCP'>ECXEN S NPCD=$P(TEXT,";",3)
"RTN","ECXUTL3",179,0)
 S ECXNPCD=$G(NPCD)
"RTN","ECXUTL3",180,0)
 Q ECXNPCD
"RTN","ECXUTL3",181,0)
ELGTXT ;Eligibility codes
"RTN","ECXUTL3",182,0)
 ;;1;>49;10;SC 50-100%
"RTN","ECXUTL3",183,0)
 ;;2;;20;Aid & Attendance
"RTN","ECXUTL3",184,0)
 ;;15;;21;Housebound
"RTN","ECXUTL3",185,0)
 ;;16;;22;Mexican Border War
"RTN","ECXUTL3",186,0)
 ;;17;;23;WWI
"RTN","ECXUTL3",187,0)
 ;;18;;24;POW
"RTN","ECXUTL3",188,0)
 ;;3;40-49;30;SC 40-49%
"RTN","ECXUTL3",189,0)
 ;;3;30-39;31;SC 30-39%
"RTN","ECXUTL3",190,0)
 ;;3;20-29;32;SC 20-29%
"RTN","ECXUTL3",191,0)
 ;;3;10-19;33;SC 10-19%
"RTN","ECXUTL3",192,0)
 ;;3;<10;34;SC less than 10%
"RTN","ECXUTL3",193,0)
 ;;4;;40;NSC - VA Pension
"RTN","ECXUTL3",194,0)
 ;;5;;50;NSC
"RTN","ECXUTL3",195,0)
 ;;21;;60;Catastrophic Disability
"RTN","ECXUTL3",196,0)
 ;;12;;101;CHAMPVA
"RTN","ECXUTL3",197,0)
 ;;13;;102;Collateral of Veteran
"RTN","ECXUTL3",198,0)
 ;;14;;103;Employee
"RTN","ECXUTL3",199,0)
 ;;6;;104;Other Federal Agency
"RTN","ECXUTL3",200,0)
 ;;7;;105;Allied Veteran
"RTN","ECXUTL3",201,0)
 ;;8;;106;Humanitarian Emergency
"RTN","ECXUTL3",202,0)
 ;;9;;107;Sharing Agreement
"RTN","ECXUTL3",203,0)
 ;;10;;108;Reimbursable Insurance
"RTN","ECXUTL3",204,0)
 ;;19;;109;TRICARE/CHAMPUS
"RTN","ECXUTL3",205,0)
 ;;22;;25;Purple Heart Recipient
"RTN","ECXUTL3",206,0)
 ;;END
"RTN","ECXUTL3",207,0)
 ;
"RTN","ECXUTL3",208,0)
CPT(ECXCPT,ECXMOD,ECXQUA) ;Returns a str with CPT code and modifier codes
"RTN","ECXUTL3",209,0)
 ;Return string is composed of a 5 character CPT code 2 character quantity
"RTN","ECXUTL3",210,0)
 ;plus up to 5 modifier codes, 2 characters each.
"RTN","ECXUTL3",211,0)
 ; Variables -
"RTN","ECXUTL3",212,0)
 ;  Input  ECXCPT  - Pointer value to the CPT file (#81)
"RTN","ECXUTL3",213,0)
 ;         ECXMOD - A string with pointer values to the CPT
"RTN","ECXUTL3",214,0)
 ;                   MODIFIER file (#81.3) separated by ";"
"RTN","ECXUTL3",215,0)
 ;         ECXQUA  - Number of time this procedure performed
"RTN","ECXUTL3",216,0)
 ;
"RTN","ECXUTL3",217,0)
 ;  Output:
"RTN","ECXUTL3",218,0)
 ;         CPTMOD  - String of up to 17 characters, 5 character CPT
"RTN","ECXUTL3",219,0)
 ;                   code 2 character qty plus up to 5 2-character
"RTN","ECXUTL3",220,0)
 ;                   code modifiers.
"RTN","ECXUTL3",221,0)
 ;
"RTN","ECXUTL3",222,0)
 N CPT,MOD,I,CPTMOD
"RTN","ECXUTL3",223,0)
 S ECXQUA=$G(ECXQUA,"01"),ECXMOD=$G(ECXMOD)
"RTN","ECXUTL3",224,0)
 S:$L(ECXQUA)'=2 ECXQUA="0"_ECXQUA
"RTN","ECXUTL3",225,0)
 S CPT=$$CPT^ICPTCOD(ECXCPT,"") I +CPT=-1 Q ""
"RTN","ECXUTL3",226,0)
 S CPT=$P(CPT,U,2)_ECXQUA
"RTN","ECXUTL3",227,0)
 F I=1:1:99 I $P(ECXMOD,";",I)'="" D
"RTN","ECXUTL3",228,0)
 . S MOD=$$MOD^ICPTMOD($P(ECXMOD,";",I),"I","")
"RTN","ECXUTL3",229,0)
 . I +MOD>0,$P(MOD,U,2)'="99" S CPT=CPT_$P(MOD,U,2)
"RTN","ECXUTL3",230,0)
 S CPTMOD=$TR($E(CPT,1,17)," ")
"RTN","ECXUTL3",231,0)
 Q CPTMOD
"RTN","ECXUTL3",232,0)
 ;
"RTN","ECXUTL3",233,0)
CPTOUT(ECXCPT) ;output transform for CPT code plus modifiers
"RTN","ECXUTL3",234,0)
 ;input  ECXCPT  - character string of CPT code plus modifiers (required)
"RTN","ECXUTL3",235,0)
 ;
"RTN","ECXUTL3",236,0)
 N J,CPTX,MOD,MODS,MODX,CPTMOD
"RTN","ECXUTL3",237,0)
 Q:$G(ECXCPT)="" ""
"RTN","ECXUTL3",238,0)
 S (CPTMOD,MODX)=""
"RTN","ECXUTL3",239,0)
 S CPTX="("_+$E(ECXCPT,6,7)_") "_$E(ECXCPT,1,5),MODS=$E(ECXCPT,8,17)
"RTN","ECXUTL3",240,0)
 F J=1:2:9 S MOD=$E(MODS,J,J+1) Q:MOD=""  D
"RTN","ECXUTL3",241,0)
 .I J>1 S MODX=MODX_", "_MOD Q
"RTN","ECXUTL3",242,0)
 .S MODX=MODX_"-"_MOD
"RTN","ECXUTL3",243,0)
 S:$L(CPTX)>3 CPTMOD=CPTMOD_CPTX_MODX
"RTN","ECXUTL3",244,0)
 Q CPTMOD
"RTN","ECXUTL4")
0^37^B51789740^B41093966
"RTN","ECXUTL4",1,0)
ECXUTL4 ;ALB/ESD - Utilities for DSS Extracts ; 11/26/07 10:58am
"RTN","ECXUTL4",2,0)
 ;;3.0;DSS EXTRACTS;**39,41,46,49,78,92,105**;Dec 22,1997;Build 70
"RTN","ECXUTL4",3,0)
 ;
"RTN","ECXUTL4",4,0)
OBSPAT(ECXIO,ECXTS,DSSID) ;
"RTN","ECXUTL4",5,0)
 ; Get observation patient indicator from DSS TREATING SPECIALTY
"RTN","ECXUTL4",6,0)
 ; TRANSLATION file (#727.831) or DSS Identifier
"RTN","ECXUTL4",7,0)
 ;
"RTN","ECXUTL4",8,0)
 ; Input:
"RTN","ECXUTL4",9,0)
 ;   ECXIO  - Inpatient/Outpatient indicator
"RTN","ECXUTL4",10,0)
 ;   ECXTS  - Treating specialty (from file #42.4)
"RTN","ECXUTL4",11,0)
 ;   DSSID  - DSS Identifier
"RTN","ECXUTL4",12,0)
 ;
"RTN","ECXUTL4",13,0)
 ;Output:
"RTN","ECXUTL4",14,0)
 ;   ECXOBS - Observation patient indicator (YES/NO)
"RTN","ECXUTL4",15,0)
 ;
"RTN","ECXUTL4",16,0)
 ;- Check input vars
"RTN","ECXUTL4",17,0)
 S ECXIO=$G(ECXIO),ECXTS=+$G(ECXTS),DSSID=+$G(DSSID)
"RTN","ECXUTL4",18,0)
 S ECXOBS=""
"RTN","ECXUTL4",19,0)
 D
"RTN","ECXUTL4",20,0)
 .;- Look up obs patient indicator if treating spec is in file #727.831
"RTN","ECXUTL4",21,0)
 . I $G(^ECX(727.831,ECXTS,0)) S ECXOBS=$P($G(^ECX(727.831,ECXTS,0)),"^",4)
"RTN","ECXUTL4",22,0)
 . I ECXOBS'="" S ECXOBS=$S(ECXOBS="Y":"YES",1:"NO") Q
"RTN","ECXUTL4",23,0)
 .;
"RTN","ECXUTL4",24,0)
 .;- If outpatient and TS not in file, AND Feeder Key (CLI) or DSS ID
"RTN","ECXUTL4",25,0)
 .;- (MTL,IVP,ECQ,QSR,NOS,SUR) is 290-296, Observation Patient Ind=YES
"RTN","ECXUTL4",26,0)
 . I ECXIO="O",ECXOBS="",DSSID D
"RTN","ECXUTL4",27,0)
 .. I $E(DSSID,1,3)>289&($E(DSSID,1,3)<297) S ECXOBS="YES"
"RTN","ECXUTL4",28,0)
 .. E  S ECXOBS="NO"
"RTN","ECXUTL4",29,0)
 Q $S(ECXOBS'="":ECXOBS,1:"NO")
"RTN","ECXUTL4",30,0)
 ;
"RTN","ECXUTL4",31,0)
INOUTP(ECXTS) ;
"RTN","ECXUTL4",32,0)
 ; Get inpatient/outpatient indicator from DSS TREATING SPECIALTY
"RTN","ECXUTL4",33,0)
 ; TRANSLATION file (#727.831)
"RTN","ECXUTL4",34,0)
 ;
"RTN","ECXUTL4",35,0)
 ; Input:
"RTN","ECXUTL4",36,0)
 ;   ECXTS   - Treating specialty
"RTN","ECXUTL4",37,0)
 ;
"RTN","ECXUTL4",38,0)
 ; Output:
"RTN","ECXUTL4",39,0)
 ;             Inpatient/Outpatient indicator (I/O)
"RTN","ECXUTL4",40,0)
 ;
"RTN","ECXUTL4",41,0)
 S ECXTS=+$G(ECXTS)
"RTN","ECXUTL4",42,0)
 S ECXIO=""
"RTN","ECXUTL4",43,0)
 ;
"RTN","ECXUTL4",44,0)
 ;- Look up inpat/outpat indicator if treating spec is in file
"RTN","ECXUTL4",45,0)
 I $G(^ECX(727.831,ECXTS,0)) S ECXIO=$P($G(^ECX(727.831,ECXTS,0)),"^",5)
"RTN","ECXUTL4",46,0)
 Q $S(ECXIO'="":ECXIO,1:"I")
"RTN","ECXUTL4",47,0)
 ;
"RTN","ECXUTL4",48,0)
ENCNUM(ECXIO,ECXSSN,ECXADT,ECXVDT,ECXTRT,ECXOBS,ECXEXT,ECXSTP,ECXSTP2) ;
"RTN","ECXUTL4",49,0)
 ; Get encounter number
"RTN","ECXUTL4",50,0)
 ;
"RTN","ECXUTL4",51,0)
 ; Input:
"RTN","ECXUTL4",52,0)
 ;   ECXIO   - Inpat/Outpat indicator = I or O
"RTN","ECXUTL4",53,0)
 ;   ECXSSN  - Patient SSN
"RTN","ECXUTL4",54,0)
 ;   ECXADT  - Admit Date
"RTN","ECXUTL4",55,0)
 ;   ECXVDT  - Visit Date
"RTN","ECXUTL4",56,0)
 ;   ECXTRT  - Treating Spec
"RTN","ECXUTL4",57,0)
 ;   ECXOBS  - Observation Pat Indicator
"RTN","ECXUTL4",58,0)
 ;   ECXEXT  - Extract
"RTN","ECXUTL4",59,0)
 ;   ECXSTP  - Stop Code (or stop code related) variable
"RTN","ECXUTL4",60,0)
 ;   ECXSTP2 - Stop Code (or stop code related) addtl variable
"RTN","ECXUTL4",61,0)
 ;             (used for SUR and ECS)
"RTN","ECXUTL4",62,0)
 ;
"RTN","ECXUTL4",63,0)
 ;Output:
"RTN","ECXUTL4",64,0)
 ;             Encounter Number
"RTN","ECXUTL4",65,0)
 ;
"RTN","ECXUTL4",66,0)
 N ENCNUM,ECXDATE,ECXSTCD
"RTN","ECXUTL4",67,0)
 S (ENCNUM,ECXSTCD)=""
"RTN","ECXUTL4",68,0)
 ;
"RTN","ECXUTL4",69,0)
 ;- Check input vars
"RTN","ECXUTL4",70,0)
 S ECXEXT=$G(ECXEXT),ECXIO=$G(ECXIO),ECXOBS=$G(ECXOBS),ECXTRT=+$G(ECXTRT)
"RTN","ECXUTL4",71,0)
 S ECXSTP=+$G(ECXSTP),ECXSTP2=+$G(ECXSTP2)
"RTN","ECXUTL4",72,0)
 S ECXADT=+$G(ECXADT),ECXVDT=+$G(ECXVDT)
"RTN","ECXUTL4",73,0)
 ;
"RTN","ECXUTL4",74,0)
 ;- Don't use pseudo-SSN in encounter number
"RTN","ECXUTL4",75,0)
 S ECXSSN=$E($G(ECXSSN),1,9)
"RTN","ECXUTL4",76,0)
 ;
"RTN","ECXUTL4",77,0)
 D
"RTN","ECXUTL4",78,0)
 . ;- Inpatient
"RTN","ECXUTL4",79,0)
 . I ECXIO="I",ECXADT,ECXSSN'="" D  Q
"RTN","ECXUTL4",80,0)
 .. S ECXDATE=$$ADMITDT(ECXADT)
"RTN","ECXUTL4",81,0)
 .. I ECXDATE'="" S ENCNUM=ECXSSN_ECXDATE_"I"
"RTN","ECXUTL4",82,0)
 . ;
"RTN","ECXUTL4",83,0)
 . ;- Outpatient branch
"RTN","ECXUTL4",84,0)
 . I ECXIO="O" D
"RTN","ECXUTL4",85,0)
 .. ;- Observation patient (outpatient)
"RTN","ECXUTL4",86,0)
 .. I ECXOBS="YES",ECXSSN'="" D  Q
"RTN","ECXUTL4",87,0)
 ... ;
"RTN","ECXUTL4",88,0)
 ... S ECXDATE=$S(ECXADT:$$JULDT(ECXADT),1:$$JULDT(ECXVDT))
"RTN","ECXUTL4",89,0)
 ... S ECXSTCD=$S(+$P($G(^ECX(727.831,ECXTRT,0)),"^",6):+$P($G(^ECX(727.831,ECXTRT,0)),"^",6),1:+$E(ECXSTP,1,3))
"RTN","ECXUTL4",90,0)
 ... Q:ECXDATE=""!(ECXSTCD="")
"RTN","ECXUTL4",91,0)
 ... S ENCNUM=ECXSSN_ECXDATE_ECXSTCD
"RTN","ECXUTL4",92,0)
 .. ;
"RTN","ECXUTL4",93,0)
 .. ;- Outpatient (no observation pat)
"RTN","ECXUTL4",94,0)
 .. I ECXOBS="NO",ECXVDT,ECXSSN'="" D  Q
"RTN","ECXUTL4",95,0)
 ... ;
"RTN","ECXUTL4",96,0)
 ... ;- ADM, MOV, TRT have no outpat encounter number
"RTN","ECXUTL4",97,0)
 ... I ECXEXT="ADM"!(ECXEXT="MOV")!(ECXEXT="TRT") Q
"RTN","ECXUTL4",98,0)
 ... ;
"RTN","ECXUTL4",99,0)
 ... ;- Use 1st 3 chars of DSS ID for NOS and ECQ (feeder key for CLI)
"RTN","ECXUTL4",100,0)
 ... ;- Use observation stop code for IVP
"RTN","ECXUTL4",101,0)
 ... I ECXEXT="CLI"!(ECXEXT="NOS")!(ECXEXT="ECQ")!(ECXEXT="IVP") S ECXSTCD=+$E(ECXSTP,1,3) Q:'ECXSTCD
"RTN","ECXUTL4",102,0)
 ... ;
"RTN","ECXUTL4",103,0)
 ... ;- Use cost center to obtain stop code for ECS
"RTN","ECXUTL4",104,0)
 ... I ECXEXT="ECS" D  Q:'ECXSTCD
"RTN","ECXUTL4",105,0)
 .... S ECXSTCD=$$ECSCOST(ECXSTP2)
"RTN","ECXUTL4",106,0)
 ....;
"RTN","ECXUTL4",107,0)
 ....;- If no cost center, use 1st 3 chars of DSS ID
"RTN","ECXUTL4",108,0)
 .... I ECXSTCD="" S ECXSTCD=+$E(ECXSTP,1,3)
"RTN","ECXUTL4",109,0)
 ... ;
"RTN","ECXUTL4",110,0)
 ... ;- These extracts have predetermined stop code values
"RTN","ECXUTL4",111,0)
 ... I ECXEXT="DEN" S ECXSTCD=180
"RTN","ECXUTL4",112,0)
 ... I ECXEXT="PRE"!(ECXEXT="UDP") S ECXSTCD=160
"RTN","ECXUTL4",113,0)
 ... I ECXEXT="LAB"!(ECXEXT="LAR")!(ECXEXT="LBB") S ECXSTCD=108
"RTN","ECXUTL4",114,0)
 ... I ECXEXT="MTL" S ECXSTCD=538
"RTN","ECXUTL4",115,0)
 ... I ECXEXT="NUR" S ECXSTCD=950
"RTN","ECXUTL4",116,0)
 ... I ECXEXT="PRO" S ECXSTCD=423
"RTN","ECXUTL4",117,0)
 ... I ECXEXT="NUT" S ECXSTCD="NUT"
"RTN","ECXUTL4",118,0)
 ... ;
"RTN","ECXUTL4",119,0)
 ... ;- If Imaging Type fld=2, use 109 otherwise use 105
"RTN","ECXUTL4",120,0)
 ... I ECXEXT="RAD" S ECXSTCD=$S(ECXSTP=2:109,1:105)
"RTN","ECXUTL4",121,0)
 ... ;
"RTN","ECXUTL4",122,0)
 ... ;- Use DSS STOP CODE fld if populated or if SURG SPEC fld=59 use 430
"RTN","ECXUTL4",123,0)
 ... ;- otherwise if null use 429
"RTN","ECXUTL4",124,0)
 ... I ECXEXT="SUR" S ECXSTCD=$S(ECXSTP:ECXSTP,ECXSTP2=59:430,1:429)
"RTN","ECXUTL4",125,0)
 ... ;
"RTN","ECXUTL4",126,0)
 ... ;- Get Julian Date
"RTN","ECXUTL4",127,0)
 ... S ECXDATE=$$JULDT(ECXVDT)
"RTN","ECXUTL4",128,0)
 ... I ECXDATE'="" S ENCNUM=ECXSSN_ECXDATE_ECXSTCD
"RTN","ECXUTL4",129,0)
 Q ENCNUM
"RTN","ECXUTL4",130,0)
 ;
"RTN","ECXUTL4",131,0)
ADMITDT(ECXINDT) ; Returns date in YYMMDD format
"RTN","ECXUTL4",132,0)
 ;
"RTN","ECXUTL4",133,0)
 ; Input:
"RTN","ECXUTL4",134,0)
 ;   ECXINDT - Date (can also include time) in internal FM format
"RTN","ECXUTL4",135,0)
 ;
"RTN","ECXUTL4",136,0)
 ;Output:
"RTN","ECXUTL4",137,0)
 ;             Date in YYMMDD form
"RTN","ECXUTL4",138,0)
 ;
"RTN","ECXUTL4",139,0)
 N ECXDT
"RTN","ECXUTL4",140,0)
 S ECXDT=""
"RTN","ECXUTL4",141,0)
 S ECXINDT=+$G(ECXINDT)
"RTN","ECXUTL4",142,0)
 ;
"RTN","ECXUTL4",143,0)
 ;- If no input or full FM date not passed in, quit
"RTN","ECXUTL4",144,0)
 I 'ECXINDT!($L(ECXINDT)<7) G ADMTDTQ
"RTN","ECXUTL4",145,0)
 ;
"RTN","ECXUTL4",146,0)
 ;- Date in YYMMDD form
"RTN","ECXUTL4",147,0)
 S ECXDT=$TR($$FMTE^XLFDT(ECXINDT,"4DF")," /","0")
"RTN","ECXUTL4",148,0)
ADMTDTQ Q ECXDT
"RTN","ECXUTL4",149,0)
 ;
"RTN","ECXUTL4",150,0)
 ;
"RTN","ECXUTL4",151,0)
JULDT(ECXINDT) ;  Returns Julian Date in MMDDD format
"RTN","ECXUTL4",152,0)
 ;
"RTN","ECXUTL4",153,0)
 ; Input:
"RTN","ECXUTL4",154,0)
 ;   ECINDT  - Date (can also include time) in internal FM format
"RTN","ECXUTL4",155,0)
 ;
"RTN","ECXUTL4",156,0)
 ;Output:
"RTN","ECXUTL4",157,0)
 ;             Julian date in MM_DDD form
"RTN","ECXUTL4",158,0)
 ;
"RTN","ECXUTL4",159,0)
 N ECXDDD,ECXDT,ECXJUL,ECXMM
"RTN","ECXUTL4",160,0)
 S (ECXDDD,ECXMM)=""
"RTN","ECXUTL4",161,0)
 ;
"RTN","ECXUTL4",162,0)
 ;- If no input or full FM date not passed in, quit
"RTN","ECXUTL4",163,0)
 S ECXINDT=+$G(ECXINDT)
"RTN","ECXUTL4",164,0)
 I 'ECXINDT!($L(ECXINDT)<7) G JULDTQ
"RTN","ECXUTL4",165,0)
 ;
"RTN","ECXUTL4",166,0)
 ;- Extract date portion
"RTN","ECXUTL4",167,0)
 S ECXDT=$E(ECXINDT,1,7)
"RTN","ECXUTL4",168,0)
 ;
"RTN","ECXUTL4",169,0)
 ;- Get month (MM)
"RTN","ECXUTL4",170,0)
 S ECXMM=$E(ECXINDT,2,3)
"RTN","ECXUTL4",171,0)
 ;
"RTN","ECXUTL4",172,0)
 ;- Number of day within year (DDD)
"RTN","ECXUTL4",173,0)
 S ECXDDD=$$RJ^XLFSTR($$FMDIFF^XLFDT(ECXDT,$E(ECXDT,1,3)_"0101",1)+1,3,"0")
"RTN","ECXUTL4",174,0)
JULDTQ Q ECXMM_ECXDDD
"RTN","ECXUTL4",175,0)
 ;
"RTN","ECXUTL4",176,0)
CNHSTAT(ECXDFN) ;  Get CNH (Contract Nursing Home) status
"RTN","ECXUTL4",177,0)
 ;
"RTN","ECXUTL4",178,0)
 ; Input:
"RTN","ECXUTL4",179,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",180,0)
 ;
"RTN","ECXUTL4",181,0)
 ;Output:
"RTN","ECXUTL4",182,0)
 ;             CNH status (YES/NO)
"RTN","ECXUTL4",183,0)
 ;
"RTN","ECXUTL4",184,0)
 N ECXCNH
"RTN","ECXUTL4",185,0)
 S ECXDFN=+$G(ECXDFN)
"RTN","ECXUTL4",186,0)
 S ECXCNH=$P($G(^DPT(ECXDFN,"NHC")),U)
"RTN","ECXUTL4",187,0)
 Q $S(ECXCNH="Y":"YES",ECXCNH="N":"NO",1:"")
"RTN","ECXUTL4",188,0)
 ;
"RTN","ECXUTL4",189,0)
CANC(ECXNOR,ECXTMOR) ; Get Surgery Cancelled/Aborted Status
"RTN","ECXUTL4",190,0)
 ;
"RTN","ECXUTL4",191,0)
 ; Function called after determining CANCEL DATE in SURGERY record exists
"RTN","ECXUTL4",192,0)
 ;
"RTN","ECXUTL4",193,0)
 ; Input:
"RTN","ECXUTL4",194,0)
 ;   ECXNOR   - Non-OR DSS ID
"RTN","ECXUTL4",195,0)
 ;   ECXTMOR  - Time Pat in OR
"RTN","ECXUTL4",196,0)
 ;
"RTN","ECXUTL4",197,0)
 ;Output:
"RTN","ECXUTL4",198,0)
 ;              Cancelled/aborted status (C/A)
"RTN","ECXUTL4",199,0)
 ;
"RTN","ECXUTL4",200,0)
 N ECXCANC
"RTN","ECXUTL4",201,0)
 S ECXCANC=""
"RTN","ECXUTL4",202,0)
 S ECXNOR=$G(ECXNOR)
"RTN","ECXUTL4",203,0)
 ;
"RTN","ECXUTL4",204,0)
 ;- If Non-OR DSS ID or Time Pat in OR, ECXCANC = "A" else = "C"
"RTN","ECXUTL4",205,0)
 D
"RTN","ECXUTL4",206,0)
 . I ECXNOR'=""&(ECXNOR'="UNKNOWN") S ECXCANC="A" Q
"RTN","ECXUTL4",207,0)
 . I +$G(ECXTMOR) S ECXCANC="A" Q
"RTN","ECXUTL4",208,0)
 . S ECXCANC="C"
"RTN","ECXUTL4",209,0)
 Q ECXCANC
"RTN","ECXUTL4",210,0)
 ;
"RTN","ECXUTL4",211,0)
ECSCOST(ECXCOST) ;Get ECS extract stop code based on cost center
"RTN","ECXUTL4",212,0)
 ;
"RTN","ECXUTL4",213,0)
 ;
"RTN","ECXUTL4",214,0)
 ; Input:
"RTN","ECXUTL4",215,0)
 ;   ECXCOST  - ECS extract cost center
"RTN","ECXUTL4",216,0)
 ;
"RTN","ECXUTL4",217,0)
 ;Output:
"RTN","ECXUTL4",218,0)
 ;              ECS extract stop code
"RTN","ECXUTL4",219,0)
 ;
"RTN","ECXUTL4",220,0)
 N ECXFND,ECXSTOP,I
"RTN","ECXUTL4",221,0)
 S ECXFND=0
"RTN","ECXUTL4",222,0)
 S ECXSTOP=""
"RTN","ECXUTL4",223,0)
 S ECXCOST=+$G(ECXCOST)
"RTN","ECXUTL4",224,0)
 D
"RTN","ECXUTL4",225,0)
 . I 'ECXCOST Q
"RTN","ECXUTL4",226,0)
 . F I=1:1 Q:ECXFND!($P($T(COST+I),";;",2)="END")  D
"RTN","ECXUTL4",227,0)
 .. I ECXCOST=$P($T(COST+I),";;",2) S ECXSTOP=$P($T(COST+I),";;",3),ECXFND=1
"RTN","ECXUTL4",228,0)
 Q ECXSTOP
"RTN","ECXUTL4",229,0)
 ;
"RTN","ECXUTL4",230,0)
COST ;- ECS Cost Center and stop code
"RTN","ECXUTL4",231,0)
 ;;833100;;652
"RTN","ECXUTL4",232,0)
 ;;833200;;653
"RTN","ECXUTL4",233,0)
 ;;833300;;681
"RTN","ECXUTL4",234,0)
 ;;834100;;651
"RTN","ECXUTL4",235,0)
 ;;834200;;650
"RTN","ECXUTL4",236,0)
 ;;834300;;681
"RTN","ECXUTL4",237,0)
 ;;834400;;654
"RTN","ECXUTL4",238,0)
 ;;834500;;681
"RTN","ECXUTL4",239,0)
 ;;834600;;681
"RTN","ECXUTL4",240,0)
 ;;834700;;681
"RTN","ECXUTL4",241,0)
 ;;834800;;681
"RTN","ECXUTL4",242,0)
 ;;834900;;681
"RTN","ECXUTL4",243,0)
 ;;836100;;654
"RTN","ECXUTL4",244,0)
 ;;836200;;654
"RTN","ECXUTL4",245,0)
 ;;END
"RTN","ECXUTL4",246,0)
 ;
"RTN","ECXUTL4",247,0)
HNCI(ECXDFN) ; Get head & neck cancer indicator
"RTN","ECXUTL4",248,0)
 ;
"RTN","ECXUTL4",249,0)
 ; Input:
"RTN","ECXUTL4",250,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",251,0)
 ;
"RTN","ECXUTL4",252,0)
 ;Output:
"RTN","ECXUTL4",253,0)
 ;             Head/Neck CA DX (Y/N)
"RTN","ECXUTL4",254,0)
 ;
"RTN","ECXUTL4",255,0)
 N ECXHNCI,DGNT
"RTN","ECXUTL4",256,0)
 S ECXHNCI=""
"RTN","ECXUTL4",257,0)
 S ECXDFN=+$G(ECXDFN) I ECXDFN D
"RTN","ECXUTL4",258,0)
 .I $$GETCUR^DGNTAPI(ECXDFN,"DGNT") S ECXHNCI=$P(DGNT("HNC"),U)
"RTN","ECXUTL4",259,0)
 Q ECXHNCI
"RTN","ECXUTL4",260,0)
 ;
"RTN","ECXUTL4",261,0)
TSMAP(ECXTS) ;Determines DSS Identifier for the following observation
"RTN","ECXUTL4",262,0)
 ; treating specialty
"RTN","ECXUTL4",263,0)
 ; Input:
"RTN","ECXUTL4",264,0)
 ;   ECXTS - Observation Treating Specialty
"RTN","ECXUTL4",265,0)
 ;
"RTN","ECXUTL4",266,0)
 ; Output:
"RTN","ECXUTL4",267,0)
 ;   DSS Identifier (Stop Code)
"RTN","ECXUTL4",268,0)
 ;
"RTN","ECXUTL4",269,0)
 N TS,SC,I
"RTN","ECXUTL4",270,0)
 S TS="^18^23^24^36^41^65^94^",SC="^293^295^290^294^296^291^292^"
"RTN","ECXUTL4",271,0)
 F I=1:1:$L(TS) Q:$P(TS,"^",I)=ECXTS
"RTN","ECXUTL4",272,0)
 Q $P(SC,"^",I)_"000"
"RTN","ECXUTL4",273,0)
OEFDATA ;
"RTN","ECXUTL4",274,0)
 ;get patient OEF/OIF status and date of return
"RTN","ECXUTL4",275,0)
 S (ECXOEF,ECXOEFDT)=""
"RTN","ECXUTL4",276,0)
 I $G(VASV(11))>0 S ECXOEF=ECXOEF_"OIF"
"RTN","ECXUTL4",277,0)
 I $G(VASV(12))>0 S ECXOEF=ECXOEF_"OEF"
"RTN","ECXUTL4",278,0)
 I $G(VASV(13))>0 S ECXOEF=ECXOEF_"UNK"
"RTN","ECXUTL4",279,0)
 I ECXOEF'="" D
"RTN","ECXUTL4",280,0)
 . S ECXOEFDT=""
"RTN","ECXUTL4",281,0)
 . I $G(VASV(11))>0 S ECXOEFDT=$P($G(VASV(11,$G(VASV(11)),3)),"^")
"RTN","ECXUTL4",282,0)
 . I $G(VASV(12))>0,$P($G(VASV(12,$G(VASV(12)),3)),"^")>ECXOEFDT S ECXOEFDT=$P($G(VASV(12,$G(VASV(12)),3)),"^")
"RTN","ECXUTL4",283,0)
 . I $G(VASV(13))>0,$P($G(VASV(13,$G(VASV(13)),3)),"^")>ECXOEFDT S ECXOEFDT=$P($G(VASV(13,$G(VASV(13)),3)),"^")
"RTN","ECXUTL4",284,0)
 . I ECXOEFDT>0 S ECXOEFDT=17000000+ECXOEFDT
"RTN","ECXUTL4",285,0)
 ;
"RTN","ECXUTL4",286,0)
 S ECXPAT("ECXOEF")=ECXOEF
"RTN","ECXUTL4",287,0)
 S ECXPAT("ECXOEFDT")=ECXOEFDT
"RTN","ECXUTL4",288,0)
 Q
"RTN","ECXUTL5")
0^11^B34282148^B30156456
"RTN","ECXUTL5",1,0)
ECXUTL5 ;ALB/JRC - Utilities for DSS Extracts ; 10/17/07 3:49pm
"RTN","ECXUTL5",2,0)
 ;;3.0;DSS EXTRACTS;**71,84,92,103,105**;Dec 22, 1997;Build 70
"RTN","ECXUTL5",3,0)
 ;
"RTN","ECXUTL5",4,0)
REPEAT(CHAR,TIMES) ;REPEAT A STRING
"RTN","ECXUTL5",5,0)
 ;INPUT  : CHAR - Character to repeat
"RTN","ECXUTL5",6,0)
 ;         TIMES - Number of times to repeat CHAR
"RTN","ECXUTL5",7,0)
 ;OUTPUT : s - String of CHAR that is TIMES long
"RTN","ECXUTL5",8,0)
 ;         "" - Error (bad input)
"RTN","ECXUTL5",9,0)
 ;
"RTN","ECXUTL5",10,0)
 ;CHECK INPUT
"RTN","ECXUTL5",11,0)
 Q:($G(CHAR)="") ""
"RTN","ECXUTL5",12,0)
 Q:((+$G(TIMES))=0) ""
"RTN","ECXUTL5",13,0)
 ;RETURN STRING
"RTN","ECXUTL5",14,0)
 Q $TR($J("",TIMES)," ",CHAR)
"RTN","ECXUTL5",15,0)
INSERT(INSTR,OUTSTR,COLUMN,LENGTH) ;INSERT A STRING INTO ANOTHER
"RTN","ECXUTL5",16,0)
 ;INPUT  : INSTR - String to insert
"RTN","ECXUTL5",17,0)
 ;         OUTSTR - String to insert into
"RTN","ECXUTL5",18,0)
 ;         COLUMN - Where to begin insertion (defaults to end of OUTSTR)
"RTN","ECXUTL5",19,0)
 ;         LENGTH - Number of characters to clear from OUTSTR
"RTN","ECXUTL5",20,0)
 ;                  (defaults to length of INSTR)
"RTN","ECXUTL5",21,0)
 ;OUTPUT : s - INSTR will be placed into OUTSTR starting at COLUMN
"RTN","ECXUTL5",22,0)
 ;             using LENGTH characters
"RTN","ECXUTL5",23,0)
 ;         "" - Error (bad input)
"RTN","ECXUTL5",24,0)
 ;
"RTN","ECXUTL5",25,0)
 ;NOTE : This module is based on $$SETSTR^VALM1
"RTN","ECXUTL5",26,0)
 ;
"RTN","ECXUTL5",27,0)
 ;CHECK INPUT
"RTN","ECXUTL5",28,0)
 Q:('$D(INSTR)) ""
"RTN","ECXUTL5",29,0)
 Q:('$D(OUTSTR)) ""
"RTN","ECXUTL5",30,0)
 S:('$D(COLUMN)) COLUMN=$L(OUTSTR)+1
"RTN","ECXUTL5",31,0)
 S:('$D(LENGTH)) LENGTH=$L(INSTR)
"RTN","ECXUTL5",32,0)
 ;DECLARE VARIABLES
"RTN","ECXUTL5",33,0)
 N FRONT,END
"RTN","ECXUTL5",34,0)
 S FRONT=$E((OUTSTR_$J("",COLUMN-1)),1,(COLUMN-1))
"RTN","ECXUTL5",35,0)
 S END=$E(OUTSTR,(COLUMN+LENGTH),$L(OUTSTR))
"RTN","ECXUTL5",36,0)
 ;INSERT STRING
"RTN","ECXUTL5",37,0)
 Q FRONT_$E((INSTR_$J("",LENGTH)),1,LENGTH)_END
"RTN","ECXUTL5",38,0)
TYPE(DFN) ;Determine patient type DBIA #2511
"RTN","ECXUTL5",39,0)
 ;   input 
"RTN","ECXUTL5",40,0)
 ;   DFN = patient ien
"RTN","ECXUTL5",41,0)
 ;
"RTN","ECXUTL5",42,0)
 ;   output
"RTN","ECXUTL5",43,0)
 ;   ECXPTYPE = patient type external value from fle 391
"RTN","ECXUTL5",44,0)
 ;
"RTN","ECXUTL5",45,0)
 ;          AC = ACTIVE DUTY        MI = MILITARY RETIREE
"RTN","ECXUTL5",46,0)
 ;          AL = ALLIED VETERAN     NO = NON-VETERAN (OTHER)
"RTN","ECXUTL5",47,0)
 ;          CO = COLLATERAL         NS = NSC VETERAN
"RTN","ECXUTL5",48,0)
 ;          EM = EMPLOYEE           SC = SC VETERAN
"RTN","ECXUTL5",49,0)
 ;          IN = INELIGIBLE         TR = TRICARE
"RTN","ECXUTL5",50,0)
 ;          return value 0 if no data found, 1 if data found
"RTN","ECXUTL5",51,0)
 ;
"RTN","ECXUTL5",52,0)
 N TYPE,ECXPTYPE
"RTN","ECXUTL5",53,0)
 ;Check input
"RTN","ECXUTL5",54,0)
 Q:'$D(DFN) ""
"RTN","ECXUTL5",55,0)
 S (TYPE,ECXPTYPE)=""
"RTN","ECXUTL5",56,0)
 S TYPE=$G(^DPT(DFN,"TYPE"))
"RTN","ECXUTL5",57,0)
 I 'TYPE Q ECXPTYPE
"RTN","ECXUTL5",58,0)
 S ECXPTYPE=$P($G(^DG(391,TYPE,0)),U,1)
"RTN","ECXUTL5",59,0)
 S ECXPTYPE=$E(ECXPTYPE,1,2)
"RTN","ECXUTL5",60,0)
 Q ECXPTYPE
"RTN","ECXUTL5",61,0)
CVEDT(DFN,DATE) ;Determine patient CV status DBIA #4156
"RTN","ECXUTL5",62,0)
 ;   input
"RTN","ECXUTL5",63,0)
 ;   DFN = patient ien
"RTN","ECXUTL5",64,0)
 ;
"RTN","ECXUTL5",65,0)
 ;   output
"RTN","ECXUTL5",66,0)
 ;   ECXCVE = combat veteran status eligibility
"RTN","ECXUTL5",67,0)
 ;   ECXCVEDT = combat veteran eligibility end date
"RTN","ECXUTL5",68,0)
 ;   ECXCVENC = combat veteran encounter
"RTN","ECXUTL5",69,0)
 ;Initialize variables
"RTN","ECXUTL5",70,0)
 N CVSTAT
"RTN","ECXUTL5",71,0)
 S (CVSTAT,ECXCVE,ECXCVEDT,ECXCVENC)=""
"RTN","ECXUTL5",72,0)
 ;Check input
"RTN","ECXUTL5",73,0)
 Q:'$D(DFN) 0
"RTN","ECXUTL5",74,0)
 ;Call CV API
"RTN","ECXUTL5",75,0)
 S CVSTAT=$$CVEDT^DGCV(DFN,DATE)
"RTN","ECXUTL5",76,0)
 I CVSTAT<1 Q 0
"RTN","ECXUTL5",77,0)
 ;Veteran been given CV eligibility
"RTN","ECXUTL5",78,0)
 S ECXCVE=$S($P(CVSTAT,U,3)=1:"Y",$P(CVSTAT,U,3)=0:"E",1:"")
"RTN","ECXUTL5",79,0)
 ;Save CV eligibility end date and convert from FM to HL7 format
"RTN","ECXUTL5",80,0)
 S ECXCVEDT=$P(CVSTAT,U,2)
"RTN","ECXUTL5",81,0)
 S ECXCVEDT=$$FMTHL7^XLFDT(ECXCVEDT)
"RTN","ECXUTL5",82,0)
 ;Is the veteran eligible for CV in the date of encounter
"RTN","ECXUTL5",83,0)
 S ECXCVENC=$S($P(CVSTAT,U,3)=1:"Y",1:"")
"RTN","ECXUTL5",84,0)
 Q 1
"RTN","ECXUTL5",85,0)
NPRF ;National patient record flags DBIA #3860
"RTN","ECXUTL5",86,0)
 N ECXARR,FLG
"RTN","ECXUTL5",87,0)
 S ECXNPRFI="",CNT=$$GETACT^DGPFAPI(ECXDFN,"ECXARR"),FLG=""
"RTN","ECXUTL5",88,0)
 I 'CNT Q
"RTN","ECXUTL5",89,0)
 F I=1:1:CNT D  Q:FLG
"RTN","ECXUTL5",90,0)
 .I ECXARR(I,"CATEGORY")["NATIONAL" S ECXNPRFI="Y",FLG=1
"RTN","ECXUTL5",91,0)
 Q
"RTN","ECXUTL5",92,0)
RXPTST(K) ;Rx patient status DBIA #2511
"RTN","ECXUTL5",93,0)
 N ECXDIC,STAT
"RTN","ECXUTL5",94,0)
 S (ECXDIC,STAT)=""
"RTN","ECXUTL5",95,0)
 ;Check input
"RTN","ECXUTL5",96,0)
 Q:'$D(K) STAT
"RTN","ECXUTL5",97,0)
 S DA=K,DIC="^PS(53,",DIQ(0)="I",DIQ="ECXDIC",DR="6"
"RTN","ECXUTL5",98,0)
 D EN^DIQ1
"RTN","ECXUTL5",99,0)
 S STAT=$G(ECXDIC(53,K,6,"I"))
"RTN","ECXUTL5",100,0)
 S STAT=$S(STAT=1:"SC",STAT=2:"AA",STAT=3:"OTH",STAT=4:"INP",STAT=5:"NON",1:"")
"RTN","ECXUTL5",101,0)
 Q STAT
"RTN","ECXUTL5",102,0)
NONVAP(K) ;Non-va prescriber DBIA #10060
"RTN","ECXUTL5",103,0)
 N ECXDIC,NONVAP
"RTN","ECXUTL5",104,0)
 S (ECXDIC,NONVAP)=""
"RTN","ECXUTL5",105,0)
 Q:'$D(K) NONVAP
"RTN","ECXUTL5",106,0)
 S DA=K,DIC="^VA(200,",DIQ(0)="I",DIQ="ECXDIC",DR="53.91"
"RTN","ECXUTL5",107,0)
 D EN^DIQ1
"RTN","ECXUTL5",108,0)
 S NONVAP=$G(ECXDIC(200,K,53.91,"I"))
"RTN","ECXUTL5",109,0)
 I NONVAP S NONVAP="Y"
"RTN","ECXUTL5",110,0)
 Q NONVAP
"RTN","ECXUTL5",111,0)
DOIVPO(K,L) ;Add destination for outpatient ivp orders
"RTN","ECXUTL5",112,0)
 ;     Input     K - DFN
"RTN","ECXUTL5",113,0)
 ;               L - Order # from Pharmacy Patient File (#55)
"RTN","ECXUTL5",114,0)
 ;
"RTN","ECXUTL5",115,0)
 ;     Output     ordering stop code
"RTN","ECXUTL5",116,0)
 ;
"RTN","ECXUTL5",117,0)
 N ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE,DIC,DIQ,DR,DA
"RTN","ECXUTL5",118,0)
 S (ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE)=""
"RTN","ECXUTL5",119,0)
 ;Check input
"RTN","ECXUTL5",120,0)
 Q:'K!'(L) SCODE
"RTN","ECXUTL5",121,0)
 ;Check treating specialty
"RTN","ECXUTL5",122,0)
 S SCODE=$$TSSC($G(ECXTS)) I SCODE>0 Q SCODE
"RTN","ECXUTL5",123,0)
 ;Go to pharmacy patient file (#55) and return value of field (#136)
"RTN","ECXUTL5",124,0)
 S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="100",DR(55.01)="136",DA=K,DA(55.01)=L
"RTN","ECXUTL5",125,0)
 D EN^DIQ1
"RTN","ECXUTL5",126,0)
 S CLINIC=$G(ECXDIC(55.01,L,136,"I"))
"RTN","ECXUTL5",127,0)
 I 'CLINIC Q SCODE
"RTN","ECXUTL5",128,0)
 ;Get stop code pointer to file 40.7 from file 44
"RTN","ECXUTL5",129,0)
 S DIC="^SC(",DIQ(0)="I",DIQ="ECXDICA",DR="8",DA=CLINIC D EN^DIQ1
"RTN","ECXUTL5",130,0)
 S SCODE=ECXDICA(44,CLINIC,8,"I")
"RTN","ECXUTL5",131,0)
 ;Get stop code external value
"RTN","ECXUTL5",132,0)
 S DIC="^DIC(40.7,",DIQ(0)="E",DIQ="ECXDICB",DR="1",DA=SCODE D EN^DIQ1
"RTN","ECXUTL5",133,0)
 S SCODE=$G(ECXDICB(40.7,SCODE,1,"E"))
"RTN","ECXUTL5",134,0)
 Q SCODE
"RTN","ECXUTL5",135,0)
 ;
"RTN","ECXUTL5",136,0)
DOUDO(K,L) ;Add destination for outpatient udp orders
"RTN","ECXUTL5",137,0)
 ;     Input     K - DFN
"RTN","ECXUTL5",138,0)
 ;               L - Order # from Pharmacy Patient File (#55)
"RTN","ECXUTL5",139,0)
 ;
"RTN","ECXUTL5",140,0)
 ;     Output     ordering stop code
"RTN","ECXUTL5",141,0)
 ;
"RTN","ECXUTL5",142,0)
 N ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE,DIC,DIQ,DR,DA
"RTN","ECXUTL5",143,0)
 S (ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE)=""
"RTN","ECXUTL5",144,0)
 ;Check treating specialty
"RTN","ECXUTL5",145,0)
 S SCODE=$$TSSC($G(ECXTS)) I SCODE>0 Q SCODE
"RTN","ECXUTL5",146,0)
 ;Check input
"RTN","ECXUTL5",147,0)
 Q:'K!'(L) SCODE
"RTN","ECXUTL5",148,0)
 S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="62",DR(55.06)="130",DA=K,DA(55.06)=L
"RTN","ECXUTL5",149,0)
 D EN^DIQ1
"RTN","ECXUTL5",150,0)
 S CLINIC=$G(ECXDIC(55.06,L,130,"I"))
"RTN","ECXUTL5",151,0)
 I 'CLINIC Q SCODE
"RTN","ECXUTL5",152,0)
 ;Get stop code pointer to file 40.7 from file 44
"RTN","ECXUTL5",153,0)
 S DIC="^SC(",DIQ(0)="I",DIQ="ECXDICA",DR="8",DA=CLINIC D EN^DIQ1
"RTN","ECXUTL5",154,0)
 S SCODE=ECXDICA(44,CLINIC,8,"I")
"RTN","ECXUTL5",155,0)
 ;Get stop code external value
"RTN","ECXUTL5",156,0)
 S DIC="^DIC(40.7,",DIQ(0)="E",DIQ="ECXDICB",DR="1",DA=SCODE D EN^DIQ1
"RTN","ECXUTL5",157,0)
 S SCODE=$G(ECXDICB(40.7,SCODE,1,"E"))
"RTN","ECXUTL5",158,0)
 Q SCODE
"RTN","ECXUTL5",159,0)
 ;
"RTN","ECXUTL5",160,0)
PHAAPI(DRUG) ;Call Pharmacy drug file API dbia 4483
"RTN","ECXUTL5",161,0)
 ;   Input: drug file (#50) ien
"RTN","ECXUTL5",162,0)
 ;
"RTN","ECXUTL5",163,0)
 ;   Output: generic name ^ classification ^ ndc ^ dea hand
"RTN","ECXUTL5",164,0)
 ;            ^ ndf file entry # ^ psndf va product entry ^
"RTN","ECXUTL5",165,0)
 ;            price per disp unit ^ dispense unit
"RTN","ECXUTL5",166,0)
 ;
"RTN","ECXUTL5",167,0)
 ;Initialize variables and scratch global
"RTN","ECXUTL5",168,0)
 N NAME,CLASS,NDC,INV,NDF,P1,P3,PPDU,UNIT,ARRAY,DATA
"RTN","ECXUTL5",169,0)
 S (NAME,CLASS,NDC,INV,NDF,P1,P3,PPDU,ARRAY,DATA)=""
"RTN","ECXUTL5",170,0)
 S ARRAY="^TMP($J,""ECXLIST"")"
"RTN","ECXUTL5",171,0)
 K @ARRAY
"RTN","ECXUTL5",172,0)
 D DATA^PSS50(DRUG,,,,,"ECXLIST")
"RTN","ECXUTL5",173,0)
 I @ARRAY@(0)'>0 Q "^^^^^^"
"RTN","ECXUTL5",174,0)
 S NAME=@ARRAY@(DRUG,.01),CLASS=@ARRAY@(DRUG,2),NDC=@ARRAY@(DRUG,31)
"RTN","ECXUTL5",175,0)
 S INV=@ARRAY@(DRUG,3),P1=$P(@ARRAY@(DRUG,20),U),P3=$P(@ARRAY@(DRUG,22),U),PPDU=@ARRAY@(DRUG,16),UNIT=@ARRAY@(DRUG,14.5)
"RTN","ECXUTL5",176,0)
 K @ARRAY
"RTN","ECXUTL5",177,0)
 Q NAME_U_CLASS_U_NDC_U_INV_U_P1_U_P3_U_PPDU_U_UNIT
"RTN","ECXUTL5",178,0)
 ;
"RTN","ECXUTL5",179,0)
TSSC(X) ;Check treating specialty (ts) and if ts equals any of the following
"RTN","ECXUTL5",180,0)
 ;18,23,24,36,41,65,94 then assign predefined code and return value
"RTN","ECXUTL5",181,0)
 ;
"RTN","ECXUTL5",182,0)
 ;    Input: treating specialty
"RTN","ECXUTL5",183,0)
 ;    Output: Ordering stop code
"RTN","ECXUTL5",184,0)
 ;
"RTN","ECXUTL5",185,0)
 S CODE=$S(X=18:293,X=23:295,X=24:290,X=36:294,X=41:296,X=65:291,X=94:292,1:"")
"RTN","ECXUTL5",186,0)
 Q CODE
"RTN","ECXUTL5",187,0)
 ;
"RTN","ECXUTL5",188,0)
PSJ59P5(X) ;Get iv room division
"RTN","ECXUTL5",189,0)
 ;   Input  X - iv room ien
"RTN","ECXUTL5",190,0)
 ;
"RTN","ECXUTL5",191,0)
 ;   Output - field .02 division
"RTN","ECXUTL5",192,0)
 ;Init variables
"RTN","ECXUTL5",193,0)
 N DIV S DIV=""
"RTN","ECXUTL5",194,0)
 ;Check input
"RTN","ECXUTL5",195,0)
 I 'X  Q DIV
"RTN","ECXUTL5",196,0)
 D ALL^PSJ59P5(X,,"ECXDIV")
"RTN","ECXUTL5",197,0)
 S DIV=$P($G(^TMP($J,"ECXDIV",X,.02)),U)
"RTN","ECXUTL5",198,0)
 K ^TMP($J,"ECXDIV")
"RTN","ECXUTL5",199,0)
 Q DIV
"RTN","ECXUTL5",200,0)
 ;
"RTN","ECXUTL5",201,0)
SCRX(IEN) ;Service connected prescription
"RTN","ECXUTL5",202,0)
 ;Init variables
"RTN","ECXUTL5",203,0)
 N DIC,DR,DA,ECXDIQ
"RTN","ECXUTL5",204,0)
 ;Check input
"RTN","ECXUTL5",205,0)
 I '$G(IEN) Q ""
"RTN","ECXUTL5",206,0)
 S DIC=52,DR="116",DA=IEN,DIQ="ECXDIQ"
"RTN","ECXUTL5",207,0)
 D DIQ^PSODI(DIC,DIC,DR,DA,DIQ)
"RTN","ECXUTL5",208,0)
 Q $S($G(ECXDIQ(52,DA,116))="YES":"Y",$G(ECXDIQ(52,DA,116))="NO":"N",1:"")
"RTN","ECXUTL5",209,0)
 ;
"RTN","ECXUTL5",210,0)
SSN(SSN,FILE) ; extended validation of ssn
"RTN","ECXUTL5",211,0)
 ;       input:     ssn - social security number to validate
"RTN","ECXUTL5",212,0)
 ;                  file - optional "", 2 or 67, the only check is for
"RTN","ECXUTL5",213,0)
 ;                         reference lab file (#67) in which case ssn
"RTN","ECXUTL5",214,0)
 ;                         "000123456" is considered a valid ssn.
"RTN","ECXUTL5",215,0)
 ;        output:   0 - test patient or invalid ssn
"RTN","ECXUTL5",216,0)
 ;                  1 - valid ssn
"RTN","ECXUTL5",217,0)
 ;
"RTN","ECXUTL5",218,0)
 ;check input
"RTN","ECXUTL5",219,0)
 I $G(SSN)']"" Q 0
"RTN","ECXUTL5",220,0)
 S FILE=$G(FILE)
"RTN","ECXUTL5",221,0)
 I (FILE=67)&(SSN="000123456") Q 1
"RTN","ECXUTL5",222,0)
 I "89"[$E(SSN) Q 0
"RTN","ECXUTL5",223,0)
 I (SSN="123456789")!(SSN="111111111")!(SSN="222222222")!(SSN="333333333")!(SSN="444444444")!(SSN="555555555")!($E(SSN,1,3)="666")!($E(SSN,4,5)="00")!($E(SSN,1,3)="000") Q 0
"RTN","ECXUTL5",224,0)
 Q 1
"RTN","ECXUTL6")
0^46^B26325386^B12024330
"RTN","ECXUTL6",1,0)
ECXUTL6 ;ALB/JRC - Utilities for DSS Extracts ; 11/28/07 11:34am
"RTN","ECXUTL6",2,0)
 ;;3.0;DSS EXTRACTS;**92,105**;Dec 22, 1997;Build 70
"RTN","ECXUTL6",3,0)
 ;
"RTN","ECXUTL6",4,0)
NUTKEY(P,D) ;Generate n&fs feeder key
"RTN","ECXUTL6",5,0)
 ;Required variables
"RTN","ECXUTL6",6,0)
 ;      p  - diet type production diet, standing orders, supplemental
"RTN","ECXUTL6",7,0)
 ;           feedings, or tube feedings.
"RTN","ECXUTL6",8,0)
 ;      d  - diet ien from files 116.2, 118.3, 118, or 118.2
"RTN","ECXUTL6",9,0)
 ;Check input
"RTN","ECXUTL6",10,0)
 I $G(P)=""!'$G(D) Q ""
"RTN","ECXUTL6",11,0)
 ;Init variables
"RTN","ECXUTL6",12,0)
 N PRO,IENS,CODE,DIET
"RTN","ECXUTL6",13,0)
 S (PRO,IENS,CODE,DIET)=0
"RTN","ECXUTL6",14,0)
 S PRO=$O(^ECX(728.45,"B",P,PRO))
"RTN","ECXUTL6",15,0)
 S CODE=D_$S(P="PD":";FH(116.2,",P="SO":";FH(118.3,",P="SF":";FH(118,",P="TF":";FH(118.2,",1:"")
"RTN","ECXUTL6",16,0)
 S DIET=0,DIET=$O(^ECX(728.45,+PRO,1,"B",CODE,DIET))
"RTN","ECXUTL6",17,0)
 S IENS=""_DIET_","_PRO_","_""
"RTN","ECXUTL6",18,0)
 Q $$GET1^DIQ(728.451,IENS,1)
"RTN","ECXUTL6",19,0)
 ;
"RTN","ECXUTL6",20,0)
NUTLOC(P,D,FPD,FDD,FPF,DLT,DFL) ;Define nutrition fields
"RTN","ECXUTL6",21,0)
 ;Required variables
"RTN","ECXUTL6",22,0)
 ;      p  - patient status, inpatient or outpatient
"RTN","ECXUTL6",23,0)
 ;
"RTN","ECXUTL6",24,0)
 ;      d  - diet type production diet, standing orders, supplemental
"RTN","ECXUTL6",25,0)
 ;            feedings, or tube feedings.
"RTN","ECXUTL6",26,0)
 ;    Output: food production division, food delivery division, food
"RTN","ECXUTL6",27,0)
 ;            production facility, food delivery type, delivery feeder
"RTN","ECXUTL6",28,0)
 ;            location
"RTN","ECXUTL6",29,0)
 ;Init variables
"RTN","ECXUTL6",30,0)
 N WARD,TRSVP,CRSVP,OPLOC,MASWARD
"RTN","ECXUTL6",31,0)
 S (CRSVP,TRSVP)=0,(WARD,DLT,DFL,MASWARD)=""
"RTN","ECXUTL6",32,0)
 S OPLOC=""
"RTN","ECXUTL6",33,0)
 ;Check input
"RTN","ECXUTL6",34,0)
 I $G(P)=""!($G(D)="")!'($G(FHDFN)) Q ""
"RTN","ECXUTL6",35,0)
 ;Get food production facility for inpatient, use 115.1.13 (dietetic
"RTN","ECXUTL6",36,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",37,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",38,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",39,0)
 I P="INP" D
"RTN","ECXUTL6",40,0)
 .S WARD=$P($G(^FHPT(FHDFN,"A",+ECXADM,0)),U,8)
"RTN","ECXUTL6",41,0)
 .S TRSVP=$$GET1^DIQ(119.6,WARD,3,"I")
"RTN","ECXUTL6",42,0)
 .S CRSVP=$$GET1^DIQ(119.6,WARD,4,"I")
"RTN","ECXUTL6",43,0)
 .;Get divisions
"RTN","ECXUTL6",44,0)
 .D GETDIV
"RTN","ECXUTL6",45,0)
 .Q
"RTN","ECXUTL6",46,0)
 ;
"RTN","ECXUTL6",47,0)
 ;Get food production facility for outpatient recurring meal, use
"RTN","ECXUTL6",48,0)
 ;115.16.2 (outpatient location) which points to file 119.6 (nutrition
"RTN","ECXUTL6",49,0)
 ;location) field 3 (tray service point) or field 4 (cafeteria service
"RTN","ECXUTL6",50,0)
 ;point), which points to 119.72 (production facility) field 2.
"RTN","ECXUTL6",51,0)
 I P["OP",D["RM" D
"RTN","ECXUTL6",52,0)
 .S OPLOC=""_$P(NODE,U,3)_","_"",TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",53,0)
 .D GETDIV
"RTN","ECXUTL6",54,0)
 .Q
"RTN","ECXUTL6",55,0)
 ;
"RTN","ECXUTL6",56,0)
 ;Get food production facility for outpatient tube feeding, use
"RTN","ECXUTL6",57,0)
 ;115.16.2 (outpatient location) then use 119.6 nutrition location
"RTN","ECXUTL6",58,0)
 ;which points to 119.72 field 2.
"RTN","ECXUTL6",59,0)
 I P["OP",D["TF" D
"RTN","ECXUTL6",60,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",61,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",62,0)
 .;Get delivery division
"RTN","ECXUTL6",63,0)
 .D GETDIV
"RTN","ECXUTL6",64,0)
 .Q
"RTN","ECXUTL6",65,0)
 ;
"RTN","ECXUTL6",66,0)
 ;Get food production facility for special meals, use 115.17.2
"RTN","ECXUTL6",67,0)
 ;location field 2 which is a pointer to 119.6 (nutrition location)
"RTN","ECXUTL6",68,0)
 ;which points to 119.72 via field 2 (tray service point) which points
"RTN","ECXUTL6",69,0)
 ;to file 119.71 (production facility) field 2.
"RTN","ECXUTL6",70,0)
 I P["OP",D["SM" D
"RTN","ECXUTL6",71,0)
 .S OPLOC=""_$P(NODE,U,3)_","_""
"RTN","ECXUTL6",72,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",73,0)
 .;Get delivery division
"RTN","ECXUTL6",74,0)
 .D GETDIV
"RTN","ECXUTL6",75,0)
 .Q
"RTN","ECXUTL6",76,0)
 ;
"RTN","ECXUTL6",77,0)
 ;Get food production facility for outpatient guest meals, use
"RTN","ECXUTL6",78,0)
 ;115.18.4 (outpatient location) then use 119.6 nutrition location
"RTN","ECXUTL6",79,0)
 ;which points to 119.72 (production facility) field 2.
"RTN","ECXUTL6",80,0)
 I P["OP",D["GM" D
"RTN","ECXUTL6",81,0)
 .S OPLOC=""_$P(NODE,U,5)_","_"",TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",82,0)
 .S FPF=$$GET1^DIQ(119.72,""_TRSVP_","_"",2,"I")
"RTN","ECXUTL6",83,0)
 .;Get delivery division
"RTN","ECXUTL6",84,0)
 .D GETDIV
"RTN","ECXUTL6",85,0)
 .Q
"RTN","ECXUTL6",86,0)
 ;
"RTN","ECXUTL6",87,0)
 ;Get delivery location type for patients; with inpatients the type of
"RTN","ECXUTL6",88,0)
 ;service needs to be pulled from the admission node, with outpatients
"RTN","ECXUTL6",89,0)
 ;the type of service needs to be pulled from different nodes and use
"RTN","ECXUTL6",90,0)
 ;field 101 of Nutrition Location file (#119.6). Delivery location
"RTN","ECXUTL6",91,0)
 ;types only set for the following meals:
"RTN","ECXUTL6",92,0)
 ;   Inpatient with a production diet
"RTN","ECXUTL6",93,0)
 ;   Outpatient with a recurring meal
"RTN","ECXUTL6",94,0)
 ;   Outpatient with a special meal
"RTN","ECXUTL6",95,0)
 ;   Outpatient with a guest meal
"RTN","ECXUTL6",96,0)
 ;   all other meals are null
"RTN","ECXUTL6",97,0)
 I P="INP",D="PD" D
"RTN","ECXUTL6",98,0)
 .S DLT=$P($G(NODE),U,8)
"RTN","ECXUTL6",99,0)
 I P="OP",((D="RM")!(D="SM")) D
"RTN","ECXUTL6",100,0)
 .S DLT=$E($$GET1^DIQ(119.6,""_$P(NODE,U,3)_","_"",101,"E"),1)
"RTN","ECXUTL6",101,0)
 I P="OP",D="GM" D
"RTN","ECXUTL6",102,0)
 .S DLT=$E($$GET1^DIQ(119.6,""_$P(NODE,U,5)_","_"",101,"E"),1)
"RTN","ECXUTL6",103,0)
 ;
"RTN","ECXUTL6",104,0)
 ;Delivery feeder location
"RTN","ECXUTL6",105,0)
 I DLT="C" D
"RTN","ECXUTL6",106,0)
 .S DFL=$E($$GET1^DIQ(119.6,WARD,4,"E"),1,10)
"RTN","ECXUTL6",107,0)
 .S IEN=$$GET1^DIQ(119.72,+CRSVP,2,"I")
"RTN","ECXUTL6",108,0)
 .S IEN=""_IEN_";FH(119.71,"
"RTN","ECXUTL6",109,0)
 .S FPF=$O(^ECX(728.46,"B",IEN,FPF))
"RTN","ECXUTL6",110,0)
 .S FPF=$E($$GET1^DIQ(728.46,FPF,.01,"E"),1,10)
"RTN","ECXUTL6",111,0)
 I (DLT["T")!(DLT["D") D
"RTN","ECXUTL6",112,0)
 .I P="INP" D
"RTN","ECXUTL6",113,0)
 ..S MASWARD=$O(^FH(119.6,+WARD,"W","B",0))
"RTN","ECXUTL6",114,0)
 ..S DFL=$$GET1^DIQ(42,+MASWARD,44,"I")
"RTN","ECXUTL6",115,0)
 .I P="OP" D
"RTN","ECXUTL6",116,0)
 ..S DFL=$O(^FH(119.6,+OPLOC,"L","B",0))
"RTN","ECXUTL6",117,0)
 I (DLT=""),"SFTFSO"[D D
"RTN","ECXUTL6",118,0)
 .S DFL=$S(TRSVP:$$GET1^DIQ(119.6,WARD,3,"E"),1:$$GET1^DIQ(119.6,WARD,4,"E"))
"RTN","ECXUTL6",119,0)
 Q 1
"RTN","ECXUTL6",120,0)
 ;
"RTN","ECXUTL6",121,0)
GETDIV ;Get divisions and food production facility
"RTN","ECXUTL6",122,0)
 ;Init variables
"RTN","ECXUTL6",123,0)
 N IEN,SIEN
"RTN","ECXUTL6",124,0)
 S (FDD,FPF,FPD)=""
"RTN","ECXUTL6",125,0)
 S IEN=$$GET1^DIQ(119.72,+TRSVP,2,"I")
"RTN","ECXUTL6",126,0)
 Q:'IEN
"RTN","ECXUTL6",127,0)
 ;Get delivery division
"RTN","ECXUTL6",128,0)
 S SIEN=""_+TRSVP_";FH(119.72,"
"RTN","ECXUTL6",129,0)
 S FDD=$O(^ECX(728.46,"B",SIEN,FDD))
"RTN","ECXUTL6",130,0)
 S FDD=""_$$GET1^DIQ(728.46,FDD,1,"I")_","_""
"RTN","ECXUTL6",131,0)
 S FDD=$$GET1^DIQ(4,FDD,99,"E")
"RTN","ECXUTL6",132,0)
 ;Get production division and food production facility
"RTN","ECXUTL6",133,0)
 S IEN=""_IEN_";FH(119.71,"
"RTN","ECXUTL6",134,0)
 S FPF=$O(^ECX(728.46,"B",IEN,FPF))
"RTN","ECXUTL6",135,0)
 S FPD=""_$$GET1^DIQ(728.46,FPF,1,"I")_","_""
"RTN","ECXUTL6",136,0)
 S FPD=$$GET1^DIQ(4,FPD,99,"E")
"RTN","ECXUTL6",137,0)
 S FPF=$E($$GET1^DIQ(728.46,FPF,.01,"E"),1,10)
"RTN","ECXUTL6",138,0)
 Q
"RTN","ECXUTL6",139,0)
 ;
"RTN","ECXUTL6",140,0)
SUR(CRST,STCD,CLINIC) ;Surgery stop codes and clinic (outpatients only)
"RTN","ECXUTL6",141,0)
 ;Init variables
"RTN","ECXUTL6",142,0)
 S (CRST,STCD,CLINIC)=""
"RTN","ECXUTL6",143,0)
 ;Quit if not outpatient
"RTN","ECXUTL6",144,0)
 Q:$P(EC0,U,12)'="O" ""
"RTN","ECXUTL6",145,0)
 ;Get stop codes (outpatient only)
"RTN","ECXUTL6",146,0)
 I $P(EC0,U,12)="O" D
"RTN","ECXUTL6",147,0)
 .;Get credit stop code (outpatient only)
"RTN","ECXUTL6",148,0)
 .S CRST=""_$$GET1^DIQ(40.7,""_$$GET1^DIQ(44,$$GET1^DIQ(137.45,$P(EC0,U,4),2,"I")_","_""_","_"",2503,"I")_","_"",1,"E")
"RTN","ECXUTL6",149,0)
 .;Get stop code (outpatient only)
"RTN","ECXUTL6",150,0)
 .S STCD=""_$$GET1^DIQ(40.7,""_$$GET1^DIQ(44,$$GET1^DIQ(137.45,$P(EC0,U,4),2,"I")_","_""_","_"",8,"I")_","_"",1,"E")
"RTN","ECXUTL6",151,0)
 ;Clinic for non-or case use associated clinic else non-or location
"RTN","ECXUTL6",152,0)
 ;If non-or case
"RTN","ECXUTL6",153,0)
 I $P($G(ECNO),U)="Y" S CLINIC=$S($P(EC0,U,21):$P(EC0,U,21),1:$P(ECNO,U,2))
"RTN","ECXUTL6",154,0)
 ;Get stop codes non-or cases
"RTN","ECXUTL6",155,0)
 I $P($G(ECNO),U)="Y" D
"RTN","ECXUTL6",156,0)
 .;Get credit stop code for non-or case
"RTN","ECXUTL6",157,0)
 .S CRST=$$GET1^DIQ(40.7,$$GET1^DIQ(44,CLINIC,2503,"I"),1,"E")
"RTN","ECXUTL6",158,0)
 .;Get stop code for non-or case
"RTN","ECXUTL6",159,0)
 .S STCD=$$GET1^DIQ(40.7,$$GET1^DIQ(44,CLINIC,8,"I"),1,"E")
"RTN","ECXUTL6",160,0)
 ;Clinic, not a non-or case use surgical specialty associated clinic
"RTN","ECXUTL6",161,0)
 I $P($G(ECNO),U)'="Y" S CLINIC=$$GET1^DIQ(137.45,+$P(EC0,U,4),2,"I")
"RTN","ECXUTL6",162,0)
 Q 1
"RTN","ECXUTL6",163,0)
 ;
"RTN","ECXUTL6",164,0)
SURPODX(PRODX,PODX1,PODX2,PODX3,PODX4,PODX5) ;Get postop diagnosis codes
"RTN","ECXUTL6",165,0)
 ;Init variables
"RTN","ECXUTL6",166,0)
 N CODE,I,PODX
"RTN","ECXUTL6",167,0)
 S (PRODX,PODX1,PODX2,PODX3,PODX4,PODX5)="",CODE=0
"RTN","ECXUTL6",168,0)
 ;Check input
"RTN","ECXUTL6",169,0)
 Q:'$D(DATAOP) 0
"RTN","ECXUTL6",170,0)
 ;Get principal postop dx code
"RTN","ECXUTL6",171,0)
 S PRODX=$$GET1^DIQ(80,$P(DATAOP,U,3),.01)
"RTN","ECXUTL6",172,0)
 ;Get other postop dx codes
"RTN","ECXUTL6",173,0)
 S (CODE,I)=0 F  S CODE=$O(^SRO(136,ECD0,4,CODE)) Q:'CODE  Q:I>5  D
"RTN","ECXUTL6",174,0)
 .S I=I+1,PODX="PODX"_I,@PODX=$$GET1^DIQ(80,$P(^SRO(136,ECD0,4,CODE,0),U),.01)
"RTN","ECXUTL6",175,0)
 Q 1
"SEC","^DIC",727.1,727.1,0,"AUDIT")
@
"SEC","^DIC",727.1,727.1,0,"DD")
^
"SEC","^DIC",727.1,727.1,0,"DEL")
^
"SEC","^DIC",727.1,727.1,0,"LAYGO")
^
"SEC","^DIC",727.1,727.1,0,"WR")
^
"VER")
8.0^22.0
"^DD",727.1,727.1,0)
FIELD^^13^14
"^DD",727.1,727.1,0,"DDA")
N
"^DD",727.1,727.1,0,"DT")
3030710
"^DD",727.1,727.1,0,"IX","AC",727.1,7)

"^DD",727.1,727.1,0,"IX","AF",727.1,1)

"^DD",727.1,727.1,0,"IX","B",727.1,.01)

"^DD",727.1,727.1,0,"IX","C",727.1,8)

"^DD",727.1,727.1,0,"NM","EXTRACT DEFINITIONS")

"^DD",727.1,727.1,0,"VRPK")
ECX
"^DD",727.1,727.1,.01,0)
EXTRACT NAME^RFI^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",727.1,727.1,.01,1,0)
^.1
"^DD",727.1,727.1,.01,1,1,0)
727.1^B
"^DD",727.1,727.1,.01,1,1,1)
S ^ECX(727.1,"B",$E(X,1,30),DA)=""
"^DD",727.1,727.1,.01,1,1,2)
K ^ECX(727.1,"B",$E(X,1,30),DA)
"^DD",727.1,727.1,.01,3)
Answer must be 1-30 characters in length.
"^DD",727.1,727.1,.01,21,0)
^^1^1^2930415^^^^
"^DD",727.1,727.1,.01,21,1,0)
The name of the extract.
"^DD",727.1,727.1,.01,"DT")
2950421
"^DD",727.1,727.1,1,0)
FILE NUMBER^RNJ7,3I^^0;2^K:+X'=X!(X>728)!(X<727)!(X?.E1"."4N.N) X
"^DD",727.1,727.1,1,1,0)
^.1
"^DD",727.1,727.1,1,1,1,0)
727.1^AF
"^DD",727.1,727.1,1,1,1,1)
S ^ECX(727.1,"AF",$E(X,1,30),DA)=""
"^DD",727.1,727.1,1,1,1,2)
K ^ECX(727.1,"AF",$E(X,1,30),DA)
"^DD",727.1,727.1,1,1,1,3)
DO NOT DELETE
"^DD",727.1,727.1,1,1,1,"%D",0)
^^2^2^2930415^^
"^DD",727.1,727.1,1,1,1,"%D",1,0)
This cross reference is essential for determing the frequency and date
"^DD",727.1,727.1,1,1,1,"%D",2,0)
range for package extracts.  Do not delete.
"^DD",727.1,727.1,1,1,1,"DT")
2930129
"^DD",727.1,727.1,1,3)
Type a Number between 727 and 728, 3 Decimal Digits
"^DD",727.1,727.1,1,21,0)
^^1^1^2930129^
"^DD",727.1,727.1,1,21,1,0)
The number of the file into which this extract places data.
"^DD",727.1,727.1,1,23,0)
^^4^4^2930129^
"^DD",727.1,727.1,1,23,1,0)
The AF cross reference on this file is used by the extract routines,
"^DD",727.1,727.1,1,23,2,0)
using the variable ECFILE, to determine the frequency with which the
"^DD",727.1,727.1,1,23,3,0)
extract is run and, from the frequency, the starting and ending days
"^DD",727.1,727.1,1,23,4,0)
for the extract.
"^DD",727.1,727.1,1,"DT")
2940428
"^DD",727.1,727.1,2,0)
FREQUENCY^S^D:DAILY;W:WEEKLY;M:MONTHLY;^0;3^Q
"^DD",727.1,727.1,2,21,0)
^^5^5^2940225^^^^
"^DD",727.1,727.1,2,21,1,0)
This field determines the frequency with which this extract will be
"^DD",727.1,727.1,2,21,2,0)
run.  Daily extracts are run for a single day, T-X, where X is the
"^DD",727.1,727.1,2,21,3,0)
number entered in the DAYS AGO field in this file.  Weekly extracts
"^DD",727.1,727.1,2,21,4,0)
are run for the week ending on T-X.  Monthly extracts are run for
"^DD",727.1,727.1,2,21,5,0)
the previous month.
"^DD",727.1,727.1,2,23,0)
^^2^2^2940225^^^^
"^DD",727.1,727.1,2,23,1,0)
This field is used by the extract routines to determine the starting
"^DD",727.1,727.1,2,23,2,0)
and ending dates for the extract.
"^DD",727.1,727.1,2,"DT")
2940225
"^DD",727.1,727.1,3,0)
DAYS AGO^RNJ2,0^^0;4^K:+X'=X!(X>30)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.1,727.1,3,3)
Type a Number between 1 and 30, 0 Decimal Digits
"^DD",727.1,727.1,3,21,0)
^^4^4^2930811^^
"^DD",727.1,727.1,3,21,1,0)
This field is used for daily and weekly extracts to determine how
"^DD",727.1,727.1,3,21,2,0)
many days ago the extract should look for data.  For daily extracts,
"^DD",727.1,727.1,3,21,3,0)
the date would be T-X, for weekly extracts, the date range would
"^DD",727.1,727.1,3,21,4,0)
be from T-X-7 to T-X.
"^DD",727.1,727.1,3,23,0)
^^2^2^2930811^^
"^DD",727.1,727.1,3,23,1,0)
Used by the extract routines to determine the date for a daily extract
"^DD",727.1,727.1,3,23,2,0)
or the date range for a weekly extract.
"^DD",727.1,727.1,3,"DT")
2930129
"^DD",727.1,727.1,4,0)
ROUTINE^FI^^ROU;1^K:$L(X)>8!($L(X)<1)!'(X?1"ECX".UN) X
"^DD",727.1,727.1,4,3)
Answer must be 1-8 characters in length.
"^DD",727.1,727.1,4,21,0)
^^2^2^2930811^^
"^DD",727.1,727.1,4,21,1,0)
The name of the routine which performs this extract.  Data is loaded
"^DD",727.1,727.1,4,21,2,0)
into this field at creation time as should not be edited in the field
"^DD",727.1,727.1,4,23,0)
^^4^4^2930811^^
"^DD",727.1,727.1,4,23,1,0)
Data in this field is used to queue the initial extract.  Once the
"^DD",727.1,727.1,4,23,2,0)
extract manager specifies the frequency, days offset, start date
"^DD",727.1,727.1,4,23,3,0)
(which is not a data element in this file), the extract setup
"^DD",727.1,727.1,4,23,4,0)
calls %ZTLOAD to queue QUE^routine at the proper time.
"^DD",727.1,727.1,4,"DT")
2940324
"^DD",727.1,727.1,5,0)
OFFSET^NJ2,0^^0;5^K:+X'=X!(X>60)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.1,727.1,5,3)
The offset, in days, for the daily local extract
"^DD",727.1,727.1,5,21,0)
^^2^2^2980706^^
"^DD",727.1,727.1,5,21,1,0)
This field is used by the local daily extract to determine how many days
"^DD",727.1,727.1,5,21,2,0)
back to look for data
"^DD",727.1,727.1,5,"DT")
2930827
"^DD",727.1,727.1,6,0)
QUEUED^SI^1:YES;^0;6^Q
"^DD",727.1,727.1,6,21,0)
^^6^6^2990601^^^
"^DD",727.1,727.1,6,21,1,0)
This field is set by the software when the extract is queued to
"^DD",727.1,727.1,6,21,2,0)
run.  Once this field is set, other data elements should be
"^DD",727.1,727.1,6,21,3,0)
changed only with extreme care.  Changing either the frequency or
"^DD",727.1,727.1,6,21,4,0)
the days ago field could result in a date range being missed and
"^DD",727.1,727.1,6,21,5,0)
not extracted for trasmission to TSI.
"^DD",727.1,727.1,6,21,6,0)
 
"^DD",727.1,727.1,6,"DT")
2940324
"^DD",727.1,727.1,7,0)
TYPE^RF^^0;7^K:$L(X)>30!($L(X)<3) X
"^DD",727.1,727.1,7,1,0)
^.1
"^DD",727.1,727.1,7,1,1,0)
727.1^AC
"^DD",727.1,727.1,7,1,1,1)
S ^ECX(727.1,"AC",$E(X,1,30),DA)=""
"^DD",727.1,727.1,7,1,1,2)
K ^ECX(727.1,"AC",$E(X,1,30),DA)
"^DD",727.1,727.1,7,1,1,"DT")
2980706
"^DD",727.1,727.1,7,3)
Answer must be 3-30 characters in length.
"^DD",727.1,727.1,7,21,0)
^^3^3^2970925^
"^DD",727.1,727.1,7,21,1,0)
This is the print name for the extract.  It has an important use in
"^DD",727.1,727.1,7,21,2,0)
supplying a data element to the TYPE field (#2) of the DSS EXTRACT
"^DD",727.1,727.1,7,21,3,0)
LOG file (#727).
"^DD",727.1,727.1,7,23,0)
^^5^5^2970925^
"^DD",727.1,727.1,7,23,1,0)
A free text field; only 1st character is capitalized.  Used as
"^DD",727.1,727.1,7,23,2,0)
print name for the extract.
"^DD",727.1,727.1,7,23,3,0)
 
"^DD",727.1,727.1,7,23,4,0)
This data element is also hard-coded into the SETUP code unit of
"^DD",727.1,727.1,7,23,5,0)
each extract routine using variable ECPACK.
"^DD",727.1,727.1,7,"DT")
2980706
"^DD",727.1,727.1,8,0)
HEADER CODE^RF^^0;8^K:$L(X)>3!($L(X)<3) X
"^DD",727.1,727.1,8,1,0)
^.1
"^DD",727.1,727.1,8,1,1,0)
727.1^C
"^DD",727.1,727.1,8,1,1,1)
S ^ECX(727.1,"C",$E(X,1,30),DA)=""
"^DD",727.1,727.1,8,1,1,2)
K ^ECX(727.1,"C",$E(X,1,30),DA)
"^DD",727.1,727.1,8,1,1,3)
Do not delete this cross-reference.
"^DD",727.1,727.1,8,1,1,"%D",0)
^^2^2^2970925^
"^DD",727.1,727.1,8,1,1,"%D",1,0)
This cross-reference will be used by all the extract audit report
"^DD",727.1,727.1,8,1,1,"%D",2,0)
routines to obtain defining information on the extract.
"^DD",727.1,727.1,8,1,1,"DT")
2970925
"^DD",727.1,727.1,8,3)
Answer must be 3 characters in length.
"^DD",727.1,727.1,8,21,0)
^^2^2^2970925^^
"^DD",727.1,727.1,8,21,1,0)
The unique 3-letter identifier code for the extract type.  Needed for
"^DD",727.1,727.1,8,21,2,0)
the header record in each extract transmission.
"^DD",727.1,727.1,8,23,0)
^^4^4^2970925^^
"^DD",727.1,727.1,8,23,1,0)
A 3-character identifying code; each character is an uppercase alpha.
"^DD",727.1,727.1,8,23,2,0)
 
"^DD",727.1,727.1,8,23,3,0)
This data element is also hard-coded into the SETUP code unit of
"^DD",727.1,727.1,8,23,4,0)
each extract routine using variable ECHEAD.
"^DD",727.1,727.1,8,"DT")
2970925
"^DD",727.1,727.1,9,0)
GROUP^RF^^0;9^K:$L(X)>5!($L(X)<2) X
"^DD",727.1,727.1,9,3)
Answer must be 2-5 characters in length.
"^DD",727.1,727.1,9,21,0)
^^1^1^2970925^
"^DD",727.1,727.1,9,21,1,0)
This code identifies the data group to which the extract belongs.
"^DD",727.1,727.1,9,23,0)
^^4^4^2970925^
"^DD",727.1,727.1,9,23,1,0)
A 2-5 character identifying code; each character is an uppercase alpha.
"^DD",727.1,727.1,9,23,2,0)
 
"^DD",727.1,727.1,9,23,3,0)
This data element is also hard-coded into the SETUP code unit of
"^DD",727.1,727.1,9,23,4,0)
each extract routine using variable ECGRP.
"^DD",727.1,727.1,9,"DT")
2970925
"^DD",727.1,727.1,10,0)
AUDIT DESCRIPTION^727.11^^1;0
"^DD",727.1,727.1,11,0)
RUNNING PIECE^RNJ2,0^^0;10^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.1,727.1,11,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",727.1,727.1,11,21,0)
^^3^3^2980706^^
"^DD",727.1,727.1,11,21,1,0)
This numeric provides the position of the data element which indicates
"^DD",727.1,727.1,11,21,2,0)
whether an extract of this type is currently running or is queued to
"^DD",727.1,727.1,11,21,3,0)
run.
"^DD",727.1,727.1,11,23,0)
^^2^2^2980706^
"^DD",727.1,727.1,11,23,1,0)
The piece of the ^ECX(728,1,7.1) node indicated in this field will
"^DD",727.1,727.1,11,23,2,0)
contain an "R", if the extract is currently running or queued to run.
"^DD",727.1,727.1,11,"DT")
2980706
"^DD",727.1,727.1,12,0)
MAX. LINES PER MESSAGE^RNJ3,0^^0;11^K:+X'=X!(X>500)!(X<2)!(X?.E1"."1N.N) X
"^DD",727.1,727.1,12,3)
Type a Number between 2 and 500, 0 Decimal Digits
"^DD",727.1,727.1,12,21,0)
^^10^10^2990326^^
"^DD",727.1,727.1,12,21,1,0)
This number is the maximum number of lines per transmission message
"^DD",727.1,727.1,12,21,2,0)
allowed for this extract type.
"^DD",727.1,727.1,12,21,3,0)
  
"^DD",727.1,727.1,12,21,4,0)
A default value of 200 is usually acceptable for most extracts.
"^DD",727.1,727.1,12,21,5,0)
However, for some (e.g., CLI, ADM) lower values are recommended.
"^DD",727.1,727.1,12,21,6,0)
 
"^DD",727.1,727.1,12,21,7,0)
It may be possible in some cases to set a value greater than 200,
"^DD",727.1,727.1,12,21,8,0)
thus reducing the total number of transmission messages needed for
"^DD",727.1,727.1,12,21,9,0)
the extract.  However, if the transmission message becomes larger
"^DD",727.1,727.1,12,21,10,0)
than 32 Kbytes, it will be rejected by AAC.
"^DD",727.1,727.1,12,"DT")
2990327
"^DD",727.1,727.1,13,0)
INACTIVE^S^1:YES;0:NO;^0;12^Q
"^DD",727.1,727.1,13,3)
Enter YES if this extract is inactive
"^DD",727.1,727.1,13,21,0)
^^1^1^3030710^
"^DD",727.1,727.1,13,21,1,0)
Denotes whether or not this extract is considered inactive.
"^DD",727.1,727.1,13,"DT")
3030710
"^DD",727.1,727.11,0)
AUDIT DESCRIPTION SUB-FIELD^^.01^1
"^DD",727.1,727.11,0,"DT")
2971030
"^DD",727.1,727.11,0,"NM","AUDIT DESCRIPTION")

"^DD",727.1,727.11,0,"UP")
727.1
"^DD",727.1,727.11,.01,0)
AUDIT DESCRIPTION^WL^^0;1^Q
"^DD",727.1,727.11,.01,21,0)
^^2^2^2971030^^
"^DD",727.1,727.11,.01,21,1,0)
The information contained here provides user instructions on the 
"^DD",727.1,727.11,.01,21,2,0)
recommended method for verifying the extract audit report.
"^DD",727.1,727.11,.01,"DT")
2971030
"^DD",727.802,727.802,39,0)
PLACEHOLDER^F^^1;3^K:$L(X)>8!($L(X)<1) X
"^DD",727.802,727.802,39,3)
Answer must be 1-8 characters in length.
"^DD",727.802,727.802,39,21,0)
^^1^1^3070827^
"^DD",727.802,727.802,39,21,1,0)
Currently NULL.
"^DD",727.802,727.802,39,23,0)
^^1^1^3070827^
"^DD",727.802,727.802,39,23,1,0)
Currently NULL.
"^DD",727.802,727.802,39,"DT")
3070426
"^DD",727.802,727.802,40,0)
PLACEHOLDER^F^^1;4^K:$L(X)>8!($L(X)<1) X
"^DD",727.802,727.802,40,3)
Answer must be 1-8 characters in length.
"^DD",727.802,727.802,40,21,0)
^^1^1^3070827^
"^DD",727.802,727.802,40,21,1,0)
Currently NULL.
"^DD",727.802,727.802,40,23,0)
^^1^1^3070827^
"^DD",727.802,727.802,40,23,1,0)
Currently NULL.
"^DD",727.802,727.802,40,"DT")
3070426
"^DD",727.802,727.802,41,0)
PLACEHOLDER^F^^1;5^K:$L(X)>8!($L(X)<1) X
"^DD",727.802,727.802,41,3)
Answer must be 1-8 characters in length.
"^DD",727.802,727.802,41,21,0)
^^1^1^3070827^
"^DD",727.802,727.802,41,21,1,0)
Currently NULL.
"^DD",727.802,727.802,41,23,0)
^^1^1^3070827^
"^DD",727.802,727.802,41,23,1,0)
Currently NULL.
"^DD",727.802,727.802,41,"DT")
3070426
"^DD",727.802,727.802,51,0)
PLACEHOLDER^F^^1;15^K:$L(X)>8!($L(X)<1) X
"^DD",727.802,727.802,51,3)
Answer must be 1-8 characters in length.
"^DD",727.802,727.802,51,21,0)
^^1^1^3070827^
"^DD",727.802,727.802,51,21,1,0)
Currently NULL.
"^DD",727.802,727.802,51,23,0)
^^1^1^3070827^
"^DD",727.802,727.802,51,23,1,0)
Currently NULL.
"^DD",727.802,727.802,51,"DT")
3070426
"^DD",727.802,727.802,82,0)
OEF/OIF^F^^2;1^K:$L(X)>9!($L(X)<1) X
"^DD",727.802,727.802,82,3)
Answer must be 1-9 characters in length.
"^DD",727.802,727.802,82,21,0)
^.001^3^3^3070816^^
"^DD",727.802,727.802,82,21,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.802,727.802,82,21,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.802,727.802,82,21,3,0)
reflects the OEF or OIF where this patient was in combat.
"^DD",727.802,727.802,82,23,0)
^.001^12^12^3070816^^
"^DD",727.802,727.802,82,23,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.802,727.802,82,23,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.802,727.802,82,23,3,0)
reflects the OEF or OIF where this patient was in combat. The value of 
"^DD",727.802,727.802,82,23,4,0)
this field is derived from the LOCATION OF SERVICE field (#.01) from 
"^DD",727.802,727.802,82,23,5,0)
SERVICE [OEF OR OIF] sub-file (#2.3215) of field (#.3215) located in the 
"^DD",727.802,727.802,82,23,6,0)
PATIENT File (#2).  DSS will capture once, each location where the 
"^DD",727.802,727.802,82,23,7,0)
veteran served. In order to accommodate multiple locations, the values 
"^DD",727.802,727.802,82,23,8,0)
for this field are concatenated into this 9-character field. Possible 
"^DD",727.802,727.802,82,23,9,0)
field values are one or more combinations of the following: 
"^DD",727.802,727.802,82,23,10,0)
OEF = Operation Enduring Freedom
"^DD",727.802,727.802,82,23,11,0)
OIF = Operation Iraqi Freedom
"^DD",727.802,727.802,82,23,12,0)
UNK = Unknown OEF/OIF
"^DD",727.802,727.802,82,"DT")
3070816
"^DD",727.802,727.802,83,0)
OEF/OIF RETURN DATE^F^^2;2^K:$L(X)>8!($L(X)<1) X
"^DD",727.802,727.802,83,3)
Answer must be 1-8 characters in length.
"^DD",727.802,727.802,83,21,0)
^.001^2^2^3070502^^
"^DD",727.802,727.802,83,21,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.802,727.802,83,21,2,0)
the end date of military pay for this OEF/OIF deployment.
"^DD",727.802,727.802,83,23,0)
^^6^6^3070502^
"^DD",727.802,727.802,83,23,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.802,727.802,83,23,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.802,727.802,83,23,3,0)
has a format equal to YYYYMMDD.  The value of this field is derived from 
"^DD",727.802,727.802,83,23,4,0)
the OEF/OIF TO DATE field (#.03) from sub-file (#2.3215) of field 
"^DD",727.802,727.802,83,23,5,0)
(#.3215) located in the PATIENT file (#2).  In cases of multiple OEF/OIF 
"^DD",727.802,727.802,83,23,6,0)
tours, this field contains only most recent return date.
"^DD",727.802,727.802,83,"DT")
3070502
"^DD",727.802,727.802,84,0)
ASSOCIATE PC PROVIDER NPI^F^^2;3^K:$L(X)>15!($L(X)<1) X
"^DD",727.802,727.802,84,3)
Answer must be 1-15 characters in length.
"^DD",727.802,727.802,84,21,0)
^^2^2^3070502^
"^DD",727.802,727.802,84,21,1,0)
Standard unique life-long identifier of the associate primary care 
"^DD",727.802,727.802,84,21,2,0)
provider. This field has a length of fifteen characters.
"^DD",727.802,727.802,84,23,0)
^^3^3^3070502^
"^DD",727.802,727.802,84,23,1,0)
Standard unique life-long identifier of the associate primary care 
"^DD",727.802,727.802,84,23,2,0)
provider. This field has a length of fifteen characters. The qualified 
"^DD",727.802,727.802,84,23,3,0)
identifier is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.802,727.802,84,"DT")
3070502
"^DD",727.802,727.802,85,0)
ATTENDING PHYSICIAN NPI^F^^2;4^K:$L(X)>15!($L(X)<1) X
"^DD",727.802,727.802,85,3)
Answer must be 1-15 characters in length.
"^DD",727.802,727.802,85,21,0)
^.001^2^2^3070502^^
"^DD",727.802,727.802,85,21,1,0)
Standard unique life-long identifier of the attending physician. This 
"^DD",727.802,727.802,85,21,2,0)
field has a length of fifteen characters. 
"^DD",727.802,727.802,85,23,0)
^^3^3^3070502^
"^DD",727.802,727.802,85,23,1,0)
Standard unique life-long identifier of the attending physician. This 
"^DD",727.802,727.802,85,23,2,0)
field has a length of fifteen characters.  The qualified identifier is 
"^DD",727.802,727.802,85,23,3,0)
retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.802,727.802,85,"DT")
3070502
"^DD",727.802,727.802,86,0)
PRIMARY CARE PROVIDER NPI^F^^2;5^K:$L(X)>15!($L(X)<1) X
"^DD",727.802,727.802,86,3)
Answer must be 1-15 characters in length.
"^DD",727.802,727.802,86,21,0)
^^2^2^3070502^
"^DD",727.802,727.802,86,21,1,0)
A standard unique life-long identifier of the primary care provider. This 
"^DD",727.802,727.802,86,21,2,0)
field has a length of fifteen characters.
"^DD",727.802,727.802,86,23,0)
^^3^3^3070502^
"^DD",727.802,727.802,86,23,1,0)
A standard unique life-long identifier of the primary care provider. This 
"^DD",727.802,727.802,86,23,2,0)
field has a length of fifteen characters. The qualified identifier is 
"^DD",727.802,727.802,86,23,3,0)
retrieved via the supporting Kernel API: $$NPI^XUSNPI. 
"^DD",727.802,727.802,86,"DT")
3070502
"^DD",727.802,727.802,87,0)
PRIMARY WARD PROVIDER NPI^F^^2;6^K:$L(X)>15!($L(X)<1) X
"^DD",727.802,727.802,87,3)
Answer must be 1-15 characters in length.
"^DD",727.802,727.802,87,21,0)
^^2^2^3070502^
"^DD",727.802,727.802,87,21,1,0)
A standard unique life-long identifier of the primary ward provider. This 
"^DD",727.802,727.802,87,21,2,0)
field has a length of fifteen characters.
"^DD",727.802,727.802,87,23,0)
^^3^3^3070502^
"^DD",727.802,727.802,87,23,1,0)
A standard unique life-long identifier of the primary ward provider. This 
"^DD",727.802,727.802,87,23,2,0)
field has a length of fifteen characters.  The qualified identifier is 
"^DD",727.802,727.802,87,23,3,0)
retrieved via the supporting Kernel API: $$NPI^XUSNPI. 
"^DD",727.802,727.802,87,"DT")
3070502
"^DD",727.808,727.808,35,0)
DISCH ASSOC PC PROV NPI^F^^1;12^K:$L(X)>15!($L(X)<1) X
"^DD",727.808,727.808,35,3)
Answer must be 1-15 characters in length.
"^DD",727.808,727.808,35,21,0)
^^3^3^3070504^
"^DD",727.808,727.808,35,21,1,0)
A standard unique life-long identifier of the patient's associate primary 
"^DD",727.808,727.808,35,21,2,0)
care provider from the losing ward.  This field has a length of fifteen 
"^DD",727.808,727.808,35,21,3,0)
characters.
"^DD",727.808,727.808,35,23,0)
^.001^4^4^3070504^^
"^DD",727.808,727.808,35,23,1,0)
DISCHARGE ASSOC PC PROV. NPI is a standard unique life-long identifier of 
"^DD",727.808,727.808,35,23,2,0)
the patient's associate primary care provider from the losing ward.  The 
"^DD",727.808,727.808,35,23,3,0)
qualified identifier shall be retrieved via the supporting Kernel
"^DD",727.808,727.808,35,23,4,0)
API:$$NPI^XUSNPI.
"^DD",727.808,727.808,35,"DT")
3070504
"^DD",727.808,727.808,36,0)
DISCHARGE PC PROVIDER NPI^F^^1;13^K:$L(X)>15!($L(X)<1) X
"^DD",727.808,727.808,36,3)
Answer must be 1-15 characters in length.
"^DD",727.808,727.808,36,21,0)
^^3^3^3070504^
"^DD",727.808,727.808,36,21,1,0)
A standard unique life-long identifier of the patient's primary care 
"^DD",727.808,727.808,36,21,2,0)
provider from the losing ward. This field has a length of fifteen 
"^DD",727.808,727.808,36,21,3,0)
characters.
"^DD",727.808,727.808,36,23,0)
^.001^3^3^3070504^^
"^DD",727.808,727.808,36,23,1,0)
DISCHARGE PC PROVIDER NPI is a standard unique life-long identifier of the
"^DD",727.808,727.808,36,23,2,0)
patient's primary care provider from the losing ward.  The qualified 
"^DD",727.808,727.808,36,23,3,0)
identifier shall be retrieved via the supporting Kernel API:$$NPI^XUSNPI.
"^DD",727.808,727.808,36,"DT")
3070504
"^DD",727.809,727.809,24,0)
PLACEHOLDER^F^^1;3^K:$L(X)>8!($L(X)<1) X
"^DD",727.809,727.809,24,3)
Answer must be 1-8 characters in length.
"^DD",727.809,727.809,24,21,0)
^^1^1^3070827^
"^DD",727.809,727.809,24,21,1,0)
Currently NULL.
"^DD",727.809,727.809,24,23,0)
^^1^1^3070827^
"^DD",727.809,727.809,24,23,1,0)
Currently NULL.
"^DD",727.809,727.809,24,"DT")
3070426
"^DD",727.809,727.809,52,0)
PLACEHOLDER^F^^1;31^K:$L(X)>8!($L(X)<1) X
"^DD",727.809,727.809,52,.1)

"^DD",727.809,727.809,52,3)
Answer must be 1-8 characters in length
"^DD",727.809,727.809,52,21,0)
^^1^1^3070827^
"^DD",727.809,727.809,52,21,1,0)
Currently NULL.
"^DD",727.809,727.809,52,23,0)
^^1^1^3070827^
"^DD",727.809,727.809,52,23,1,0)
Currently NULL.
"^DD",727.809,727.809,52,"DT")
3070426
"^DD",727.809,727.809,55,0)
PLACEHOLDER^F^^1;34^K:$L(X)>8!($L(X)<1) X
"^DD",727.809,727.809,55,.1)

"^DD",727.809,727.809,55,3)
Answer must be 1-8 characters in length
"^DD",727.809,727.809,55,21,0)
^.001^1^1^3070827^^
"^DD",727.809,727.809,55,21,1,0)
Currently NULL.
"^DD",727.809,727.809,55,23,0)
^.001^1^1^3070827^^
"^DD",727.809,727.809,55,23,1,0)
Currently NULL.
"^DD",727.809,727.809,55,"DT")
3070426
"^DD",727.809,727.809,77,0)
OEF/OIF^F^^2;21^K:$L(X)>9!($L(X)<1) X
"^DD",727.809,727.809,77,3)
Answer must be 1-9 characters in length.
"^DD",727.809,727.809,77,21,0)
^^3^3^3070502^
"^DD",727.809,727.809,77,21,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.809,727.809,77,21,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.809,727.809,77,21,3,0)
reflects the OEF or OIF where this patient was in combat.
"^DD",727.809,727.809,77,23,0)
^^12^12^3070502^
"^DD",727.809,727.809,77,23,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.809,727.809,77,23,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.809,727.809,77,23,3,0)
reflects the OEF or OIF where this patient was in combat. The value of 
"^DD",727.809,727.809,77,23,4,0)
this field is derived from the LOCATION OF SERVICE field (#.01) from 
"^DD",727.809,727.809,77,23,5,0)
SERVICE [OEF OR OIF] sub-file (#2.3215) of field (#.3215) located in the 
"^DD",727.809,727.809,77,23,6,0)
PATIENT File (#2).  DSS will capture once, each location where the 
"^DD",727.809,727.809,77,23,7,0)
veteran served. In order to accommodate multiple locations, the values 
"^DD",727.809,727.809,77,23,8,0)
for this field are concatenated into this 9-character field. Possible 
"^DD",727.809,727.809,77,23,9,0)
field values are one or more combinations of the following: 
"^DD",727.809,727.809,77,23,10,0)
OEF =  Operation Enduring Freedom
"^DD",727.809,727.809,77,23,11,0)
OIF  =  Operation Iraqi Freedom
"^DD",727.809,727.809,77,23,12,0)
UNK =  Unknown OEF/OIF
"^DD",727.809,727.809,77,"DT")
3070502
"^DD",727.809,727.809,78,0)
OEF/OIF RETURN DATE^F^^2;22^K:$L(X)>8!($L(X)<1) X
"^DD",727.809,727.809,78,3)
Answer must be 1-8 characters in length.
"^DD",727.809,727.809,78,21,0)
^^3^3^3070502^
"^DD",727.809,727.809,78,21,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.809,727.809,78,21,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.809,727.809,78,21,3,0)
has a format equal to YYYYMMDD.
"^DD",727.809,727.809,78,23,0)
^^3^3^3070502^
"^DD",727.809,727.809,78,23,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.809,727.809,78,23,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.809,727.809,78,23,3,0)
has a format equal to YYYYMMDD.
"^DD",727.809,727.809,78,"DT")
3070502
"^DD",727.809,727.809,79,0)
ASSOCIATE PC PROVIDER NPI^F^^2;23^K:$L(X)>15!($L(X)<1) X
"^DD",727.809,727.809,79,3)
Answer must be 1-15 characters in length.
"^DD",727.809,727.809,79,21,0)
^^2^2^3070502^
"^DD",727.809,727.809,79,21,1,0)
A standard unique life-long identifier of the associate primary care 
"^DD",727.809,727.809,79,21,2,0)
provider. This field has a length of fifteen characters.
"^DD",727.809,727.809,79,23,0)
^^3^3^3070502^
"^DD",727.809,727.809,79,23,1,0)
A standard unique life-long identifier of the associate primary care 
"^DD",727.809,727.809,79,23,2,0)
provider. This field has a length of fifteen characters. The qualified 
"^DD",727.809,727.809,79,23,3,0)
identifier is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.809,727.809,79,"DT")
3070502
"^DD",727.809,727.809,80,0)
PRIMARY CARE PROVIDER NPI^F^^2;24^K:$L(X)>15!($L(X)<1) X
"^DD",727.809,727.809,80,3)
Answer must be 1-15 characters in length.
"^DD",727.809,727.809,80,21,0)
^^2^2^3070502^
"^DD",727.809,727.809,80,21,1,0)
A standard unique life-long identifier of the primary care provider. This 
"^DD",727.809,727.809,80,21,2,0)
field has a length of fifteen characters.
"^DD",727.809,727.809,80,23,0)
^^3^3^3070502^
"^DD",727.809,727.809,80,23,1,0)
A standard unique life-long identifier of the primary care provider. This 
"^DD",727.809,727.809,80,23,2,0)
field has a length of fifteen characters. The qualified identifier is 
"^DD",727.809,727.809,80,23,3,0)
retrieved via the supporting Kernel API: $$NPI^XUSNPI. 
"^DD",727.809,727.809,80,"DT")
3070502
"^DD",727.809,727.809,81,0)
PROVIDER NPI^F^^2;25^K:$L(X)>15!($L(X)<1) X
"^DD",727.809,727.809,81,3)
Answer must be 1-15 characters in length.
"^DD",727.809,727.809,81,21,0)
^^2^2^3070502^
"^DD",727.809,727.809,81,21,1,0)
A standard unique life-long identifier of the individuals providing 
"^DD",727.809,727.809,81,21,2,0)
health care services. This field has a length of fifteen characters. 
"^DD",727.809,727.809,81,23,0)
^^4^4^3070502^
"^DD",727.809,727.809,81,23,1,0)
A standard unique life-long identifier of the individuals providing 
"^DD",727.809,727.809,81,23,2,0)
health care services. This field has a length of fifteen characters. The 
"^DD",727.809,727.809,81,23,3,0)
qualified identifier is retrieved via the supporting Kernel API: 
"^DD",727.809,727.809,81,23,4,0)
$$NPI^XUSNPI.  
"^DD",727.809,727.809,81,"DT")
3070502
"^DD",727.81,727.81,38,0)
PLACEHOLDER^F^^1;5^K:$L(X)>8!($L(X)<1) X
"^DD",727.81,727.81,38,3)
Answer must be 1-8 characters in length.
"^DD",727.81,727.81,38,21,0)
^^1^1^3070827^
"^DD",727.81,727.81,38,21,1,0)
Currently NULL.
"^DD",727.81,727.81,38,23,0)
^^1^1^3070827^
"^DD",727.81,727.81,38,23,1,0)
Currently NULL.
"^DD",727.81,727.81,38,"DT")
3070426
"^DD",727.81,727.81,39,0)
PLACEHOLDER^F^^1;6^K:$L(X)>8!($L(X)<1) X
"^DD",727.81,727.81,39,3)
Answer must be 1-8 characters in length.
"^DD",727.81,727.81,39,21,0)
^.001^1^1^3070827^^
"^DD",727.81,727.81,39,21,1,0)
Currently NULL.
"^DD",727.81,727.81,39,23,0)
^.001^1^1^3070827^^
"^DD",727.81,727.81,39,23,1,0)
Currently NULL.
"^DD",727.81,727.81,39,"DT")
3070426
"^DD",727.81,727.81,53,0)
PLACEHOLDER^F^^1;20^K:$L(X)>8!($L(X)<1) X
"^DD",727.81,727.81,53,3)
Answer must be 1-8 characters in length.
"^DD",727.81,727.81,53,21,0)
^^1^1^3070827^
"^DD",727.81,727.81,53,21,1,0)
Currently NULL.
"^DD",727.81,727.81,53,23,0)
^^1^1^3070827^
"^DD",727.81,727.81,53,23,1,0)
Currently NULL.
"^DD",727.81,727.81,53,"DT")
3070426
"^DD",727.81,727.81,92,0)
OEF/OIF^F^^2;17^K:$L(X)>9!($L(X)<1) X
"^DD",727.81,727.81,92,3)
Answer must be 1-9 characters in length.
"^DD",727.81,727.81,92,21,0)
^.001^3^3^3070502^^
"^DD",727.81,727.81,92,21,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.81,727.81,92,21,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.81,727.81,92,21,3,0)
reflects the OEF or OIF where this patient was in combat.
"^DD",727.81,727.81,92,23,0)
^.001^12^12^3070502^^
"^DD",727.81,727.81,92,23,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.81,727.81,92,23,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.81,727.81,92,23,3,0)
reflects the OEF or OIF where this patient was in combat. The value of 
"^DD",727.81,727.81,92,23,4,0)
this field is derived from the LOCATION OF SERVICE field (#.01) from 
"^DD",727.81,727.81,92,23,5,0)
SERVICE [OEF OR OIF] sub-file (#2.3215) of field (#.3215) located in the 
"^DD",727.81,727.81,92,23,6,0)
PATIENT File (#2).  DSS will capture once, each location where the 
"^DD",727.81,727.81,92,23,7,0)
veteran served. In order to accommodate multiple locations, the values 
"^DD",727.81,727.81,92,23,8,0)
for this field are  concatenated into this 9-character field. Possible 
"^DD",727.81,727.81,92,23,9,0)
field values are one or more combinations of the following: 
"^DD",727.81,727.81,92,23,10,0)
OEF =  Operation Enduring Freedom
"^DD",727.81,727.81,92,23,11,0)
OIF  =  Operation Iraqi Freedom
"^DD",727.81,727.81,92,23,12,0)
UNK =  Unknown OEF/OIF
"^DD",727.81,727.81,92,"DT")
3070502
"^DD",727.81,727.81,93,0)
OEF/OIF RETURN DATE^F^^2;18^K:$L(X)>8!($L(X)<1) X
"^DD",727.81,727.81,93,3)
Answer must be 1-8 characters in length.
"^DD",727.81,727.81,93,21,0)
^^3^3^3070502^
"^DD",727.81,727.81,93,21,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.81,727.81,93,21,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.81,727.81,93,21,3,0)
has a format equal to YYYYMMDD.
"^DD",727.81,727.81,93,23,0)
^^6^6^3070502^
"^DD",727.81,727.81,93,23,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.81,727.81,93,23,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.81,727.81,93,23,3,0)
has a format equal to YYYYMMDD.  The value of this field is derived from 
"^DD",727.81,727.81,93,23,4,0)
the OEF/OIF TO DATE field (#.03) from sub-file (#2.3215) of field 
"^DD",727.81,727.81,93,23,5,0)
(#.3215) located in the PATIENT file (#2).  In cases of multiple OEF/OIF 
"^DD",727.81,727.81,93,23,6,0)
tours, this field contains only most recent return date. 
"^DD",727.81,727.81,93,"DT")
3070502
"^DD",727.81,727.81,94,0)
ASSOCIATE PC PROVIDER NPI^F^^2;19^K:$L(X)>15!($L(X)<1) X
"^DD",727.81,727.81,94,3)
Answer must be 1-15 characters in length.
"^DD",727.81,727.81,94,21,0)
^^2^2^3070502^
"^DD",727.81,727.81,94,21,1,0)
A standard unique life-long identifier of the associate primary care 
"^DD",727.81,727.81,94,21,2,0)
provider. This field has a length of fifteen characters.
"^DD",727.81,727.81,94,23,0)
^^3^3^3070502^
"^DD",727.81,727.81,94,23,1,0)
A standard unique life-long identifier of the associate primary care 
"^DD",727.81,727.81,94,23,2,0)
provider. This field has a length of fifteen characters. The qualified 
"^DD",727.81,727.81,94,23,3,0)
identifier is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.81,727.81,94,"DT")
3070502
"^DD",727.81,727.81,95,0)
PRIMARY CARE PROVIDER NPI^F^^2;20^K:$L(X)>15!($L(X)<1) X
"^DD",727.81,727.81,95,3)
Answer must be 1-15 characters in length.
"^DD",727.81,727.81,95,21,0)
^^2^2^3070502^
"^DD",727.81,727.81,95,21,1,0)
A standard unique life-long identifier of the primary care provider.   
"^DD",727.81,727.81,95,21,2,0)
This field has a length of fifteen characters.
"^DD",727.81,727.81,95,23,0)
^^3^3^3070502^
"^DD",727.81,727.81,95,23,1,0)
A standard unique life-long identifier of the primary care provider.   
"^DD",727.81,727.81,95,23,2,0)
This field has a length of fifteen characters. The qualified identifier 
"^DD",727.81,727.81,95,23,3,0)
is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.81,727.81,95,"DT")
3070502
"^DD",727.81,727.81,96,0)
PROVIDER NPI^F^^2;21^K:$L(X)>15!($L(X)<1) X
"^DD",727.81,727.81,96,3)
Answer must be 1-15 characters in length.
"^DD",727.81,727.81,96,21,0)
^^2^2^3070502^
"^DD",727.81,727.81,96,21,1,0)
A standard unique life-long identifier of the individuals providing 
"^DD",727.81,727.81,96,21,2,0)
health care services.  This field has a length of fifteen characters. 
"^DD",727.81,727.81,96,23,0)
^^4^4^3070502^
"^DD",727.81,727.81,96,23,1,0)
A standard unique life-long identifier of the individuals providing 
"^DD",727.81,727.81,96,23,2,0)
health care services.  This field has a length of fifteen characters. The 
"^DD",727.81,727.81,96,23,3,0)
qualified identifier is retrieved via the supporting Kernel API: 
"^DD",727.81,727.81,96,23,4,0)
$$NPI^XUSNPI.
"^DD",727.81,727.81,96,"DT")
3070502
"^DD",727.811,727.811,39,0)
PLACEHOLDER^F^^1;3^K:$L(X)>8!($L(X)<1) X
"^DD",727.811,727.811,39,3)
Answer must be 1-8 characters in length.
"^DD",727.811,727.811,39,21,0)
^^1^1^3070827^
"^DD",727.811,727.811,39,21,1,0)
Currently NULL.
"^DD",727.811,727.811,39,23,0)
^^1^1^3070827^
"^DD",727.811,727.811,39,23,1,0)
Currently NULL.
"^DD",727.811,727.811,39,"DT")
3070426
"^DD",727.811,727.811,40,0)
PLACEHOLDER^F^^1;4^K:$L(X)>8!($L(X)<1) X
"^DD",727.811,727.811,40,3)
Answer must be 1-8 characters in length.
"^DD",727.811,727.811,40,21,0)
^.001^1^1^3070827^^
"^DD",727.811,727.811,40,21,1,0)
Currently NULL.
"^DD",727.811,727.811,40,23,0)
^.001^1^1^3070827^^
"^DD",727.811,727.811,40,23,1,0)
Currently NULL.
"^DD",727.811,727.811,40,"DT")
3070426
"^DD",727.811,727.811,41,0)
PLACEHOLDER^F^^1;5^K:$L(X)>8!($L(X)<1) X
"^DD",727.811,727.811,41,3)
Answer must be 1-8 characters in length.
"^DD",727.811,727.811,41,21,0)
^^1^1^3070827^
"^DD",727.811,727.811,41,21,1,0)
Currently NULL.
"^DD",727.811,727.811,41,23,0)
^^1^1^3070827^
"^DD",727.811,727.811,41,23,1,0)
Currently NULL.
"^DD",727.811,727.811,41,"DT")
3070426
"^DD",727.811,727.811,42,0)
PLACEHOLDER^F^^1;6^K:$L(X)>8!($L(X)<1) X
"^DD",727.811,727.811,42,3)
Answer must be 1-8 characters in length.
"^DD",727.811,727.811,42,21,0)
^.001^1^1^3070827^^
"^DD",727.811,727.811,42,21,1,0)
Currently NULL.
"^DD",727.811,727.811,42,23,0)
^.001^1^1^3070827^^
"^DD",727.811,727.811,42,23,1,0)
Currently NULL.
"^DD",727.811,727.811,42,"DT")
3070426
"^DD",727.811,727.811,46,0)
PLACEHOLDER^F^^1;10^K:$L(X)>8!($L(X)<1) X
"^DD",727.811,727.811,46,3)
Answer must be 1-8 characters in length.
"^DD",727.811,727.811,46,21,0)
^^1^1^3070827^
"^DD",727.811,727.811,46,21,1,0)
Currently NULL.
"^DD",727.811,727.811,46,23,0)
^^1^1^3070827^
"^DD",727.811,727.811,46,23,1,0)
Currently NULL.
"^DD",727.811,727.811,46,"DT")
3070426
"^DD",727.811,727.811,80,0)
OEF/OIF^F^^2;7^K:$L(X)>9!($L(X)<1) X
"^DD",727.811,727.811,80,3)
Answer must be 1-9 characters in length.
"^DD",727.811,727.811,80,21,0)
^^3^3^3070502^
"^DD",727.811,727.811,80,21,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.811,727.811,80,21,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.811,727.811,80,21,3,0)
reflects the OEF or OIF where this patient was in combat.
"^DD",727.811,727.811,80,23,0)
^^12^12^3070502^
"^DD",727.811,727.811,80,23,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.811,727.811,80,23,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.811,727.811,80,23,3,0)
reflects the OEF or OIF where this patient was in combat. The value of 
"^DD",727.811,727.811,80,23,4,0)
this field is derived from the LOCATION OF SERVICE field (#.01) from 
"^DD",727.811,727.811,80,23,5,0)
SERVICE [OEF OR OIF] sub-file (#2.3215) of field (#.3215) located in the 
"^DD",727.811,727.811,80,23,6,0)
PATIENT File (#2).  DSS will capture once, each location where the 
"^DD",727.811,727.811,80,23,7,0)
veteran served. In order to accommodate multiple locations, the values 
"^DD",727.811,727.811,80,23,8,0)
for this field are concatenated into this 9-character field. Possible 
"^DD",727.811,727.811,80,23,9,0)
field values are one or more combinations of the following: 
"^DD",727.811,727.811,80,23,10,0)
OEF =  Operation Enduring Freedom
"^DD",727.811,727.811,80,23,11,0)
OIF  =  Operation Iraqi Freedom
"^DD",727.811,727.811,80,23,12,0)
UNK =  Unknown OEF/OIF
"^DD",727.811,727.811,80,"DT")
3070502
"^DD",727.811,727.811,81,0)
OEF/OIF RETURN DATE^F^^2;8^K:$L(X)>8!($L(X)<1) X
"^DD",727.811,727.811,81,3)
Answer must be 1-8 characters in length.
"^DD",727.811,727.811,81,21,0)
^^3^3^3070502^
"^DD",727.811,727.811,81,21,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.811,727.811,81,21,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.811,727.811,81,21,3,0)
has a format equal to YYYYMMDD.
"^DD",727.811,727.811,81,23,0)
^^6^6^3070502^
"^DD",727.811,727.811,81,23,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.811,727.811,81,23,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.811,727.811,81,23,3,0)
has a format equal to YYYYMMDD.  The value of this field is derived from 
"^DD",727.811,727.811,81,23,4,0)
the OEF/OIF TO DATE field (#.03) from sub-file (#2.3215) of field 
"^DD",727.811,727.811,81,23,5,0)
(#.3215) located in the PATIENT file (#2).  In cases of multiple OEF/OIF 
"^DD",727.811,727.811,81,23,6,0)
tours, this field contains only most recent return date. 
"^DD",727.811,727.811,81,"DT")
3070502
"^DD",727.811,727.811,82,0)
CLINIC POINTER^F^^2;9^K:$L(X)>6!($L(X)<1) X
"^DD",727.811,727.811,82,3)
Answer must be 1-6 characters in length.
"^DD",727.811,727.811,82,21,0)
^^2^2^3070502^
"^DD",727.811,727.811,82,21,1,0)
This applies to outpatients only.  (Value is Null for inpatients) This 
"^DD",727.811,727.811,82,21,2,0)
field is six characters in length.   
"^DD",727.811,727.811,82,23,0)
^^11^11^3070502^
"^DD",727.811,727.811,82,23,1,0)
This applies to outpatients only.  (Value is Null for inpatients) This 
"^DD",727.811,727.811,82,23,2,0)
field is six characters in length. * If a case is for Non-OR portion of
"^DD",727.811,727.811,82,23,3,0)
the Surgery package, the value for the CLINIC POINTER is retrieved from
"^DD",727.811,727.811,82,23,4,0)
the ASSOCIATED CLINIC field (#.021) located in the SURGERY file (#130).  
"^DD",727.811,727.811,82,23,5,0)
If that value in the ASSOCIATED CLINIC is NULL, then the value is obtained
"^DD",727.811,727.811,82,23,6,0)
from the NON-OR LOCATION field (#119), which is a pointer to the HOSPITAL
"^DD",727.811,727.811,82,23,7,0)
LOCATION file (#44), located in the SURGERY file (#130). * If a case is
"^DD",727.811,727.811,82,23,8,0)
not for Non-OR portion of the Surgery package, the value for the CLINIC
"^DD",727.811,727.811,82,23,9,0)
POINTER is retrieved from the SURGICAL SPECIALTY field (#.04) located in
"^DD",727.811,727.811,82,23,10,0)
the SURGERY file (#130), which is a pointer to the  LOCAL SURGICAL
"^DD",727.811,727.811,82,23,11,0)
SPECIALTY file (#137.45), for the ASSOCIATED CLINIC field (#2).
"^DD",727.811,727.811,82,"DT")
3070502
"^DD",727.811,727.811,83,0)
CREDIT STOP^F^^2;10^K:$L(X)>3!($L(X)<1) X
"^DD",727.811,727.811,83,3)
Answer must be 1-3 characters in length.
"^DD",727.811,727.811,83,21,0)
^^2^2^3070502^
"^DD",727.811,727.811,83,21,1,0)
This applies only to outpatients.This field has a length of three 
"^DD",727.811,727.811,83,21,2,0)
characters.
"^DD",727.811,727.811,83,23,0)
^^6^6^3070502^
"^DD",727.811,727.811,83,23,1,0)
This applies only to outpatients.This field has a length of three 
"^DD",727.811,727.811,83,23,2,0)
characters. The clinic associated with the Surgery Specialty is a pointer 
"^DD",727.811,727.811,83,23,3,0)
to the HOSPITAL LOCATION File (#44).  CREDIT STOP is field (#2503) in the 
"^DD",727.811,727.811,83,23,4,0)
HOSPITAL LOCATION File (#44).  Follow pointer to clinic entry in Clinic 
"^DD",727.811,727.811,83,23,5,0)
Stop File (#40.7) to obtain three-character code. (Value is Null for 
"^DD",727.811,727.811,83,23,6,0)
inpatients.) 
"^DD",727.811,727.811,83,"DT")
3070502
"^DD",727.811,727.811,84,0)
STOP CODE^F^^2;11^K:$L(X)>3!($L(X)<1) X
"^DD",727.811,727.811,84,3)
Answer must be 1-3 characters in length.
"^DD",727.811,727.811,84,21,0)
^^2^2^3070502^
"^DD",727.811,727.811,84,21,1,0)
This applies only to outpatients. This field has a length of three 
"^DD",727.811,727.811,84,21,2,0)
characters. 
"^DD",727.811,727.811,84,23,0)
^^4^4^3070502^
"^DD",727.811,727.811,84,23,1,0)
This applies only to outpatients. This field has a length of three 
"^DD",727.811,727.811,84,23,2,0)
characters.  The clinic associated with the Surgery Specialty is a 
"^DD",727.811,727.811,84,23,3,0)
pointer to the HOSPITAL LOCATION file (#44).  STOP CODE is field (#8) in 
"^DD",727.811,727.811,84,23,4,0)
the HOSPITAL LOCATION file (#44). (Value is Null for inpatients.) 
"^DD",727.811,727.811,84,"DT")
3070502
"^DD",727.811,727.811,85,0)
PRINC POSTOP DIAGNOSIS CODE^F^^2;12^K:$L(X)>7!($L(X)<1) X
"^DD",727.811,727.811,85,3)
Answer must be 1-7 characters in length.
"^DD",727.811,727.811,85,21,0)
^^1^1^3070502^
"^DD",727.811,727.811,85,21,1,0)
This field has a length of seven characters. 
"^DD",727.811,727.811,85,23,0)
^^4^4^3070502^
"^DD",727.811,727.811,85,23,1,0)
This field has a length of seven characters. The value for this field is 
"^DD",727.811,727.811,85,23,2,0)
retrieved from the PRIN POSTOP DIAGNOSIS CODE field (#.03), which is a 
"^DD",727.811,727.811,85,23,3,0)
pointer to the ICD DIAGNOSIS file (#80),  located in the  SURGERY 
"^DD",727.811,727.811,85,23,4,0)
PROCEDURE/DIAGNOSIS CODES file (#136).  
"^DD",727.811,727.811,85,"DT")
3070502
"^DD",727.811,727.811,86,0)
OTHER POSTOP DIAGNOSIS CODE #1^F^^2;13^K:$L(X)>7!($L(X)<1) X
"^DD",727.811,727.811,86,3)
Answer must be 1-7 characters in length.
"^DD",727.811,727.811,86,21,0)
^^1^1^3070502^
"^DD",727.811,727.811,86,21,1,0)
This field has a length of seven characters.
"^DD",727.811,727.811,86,23,0)
^^5^5^3070502^
"^DD",727.811,727.811,86,23,1,0)
This field has a length of seven characters.  The value for this field is 
"^DD",727.811,727.811,86,23,2,0)
retrieved from the OTHER POSTOP DIAGNOSIS CODES field (#4), which is a 
"^DD",727.811,727.811,86,23,3,0)
pointer to Multiple (#136.04).  The OTHER POSTOP DIAGNOSIS CODE field 
"^DD",727.811,727.811,86,23,4,0)
(#.01) located on MULTIPLE (#136.04) points to the ICD Diagnosis File 
"^DD",727.811,727.811,86,23,5,0)
(#80).
"^DD",727.811,727.811,86,"DT")
3070502
"^DD",727.811,727.811,87,0)
OTHER POSTOP DIAGNOSIS CODE #2^F^^2;14^K:$L(X)>7!($L(X)<1) X
"^DD",727.811,727.811,87,3)
Answer must be 1-7 characters in length.
"^DD",727.811,727.811,87,21,0)
^^1^1^3070502^
"^DD",727.811,727.811,87,21,1,0)
This field has a length of seven characters.  
"^DD",727.811,727.811,87,23,0)
^^5^5^3070502^
"^DD",727.811,727.811,87,23,1,0)
This field has a length of seven characters.  The value for this field is 
"^DD",727.811,727.811,87,23,2,0)
retrieved from the OTHER POSTOP DIAGNOSIS CODES field (#4), which is a 
"^DD",727.811,727.811,87,23,3,0)
pointer to Multiple (#136.04).  The OTHER POSTOP DIAGNOSIS CODE field 
"^DD",727.811,727.811,87,23,4,0)
(#.01) located on MULTIPLE (#136.04) points to the ICD Diagnosis File 
"^DD",727.811,727.811,87,23,5,0)
(#80).
"^DD",727.811,727.811,87,"DT")
3070502
"^DD",727.811,727.811,88,0)
OTHER POSTOP DIAGNOSIS CODE #3^F^^2;15^K:$L(X)>7!($L(X)<1) X
"^DD",727.811,727.811,88,3)
Answer must be 1-7 characters in length.
"^DD",727.811,727.811,88,21,0)
^^1^1^3070502^
"^DD",727.811,727.811,88,21,1,0)
This field is seven characters in length.
"^DD",727.811,727.811,88,23,0)
^^5^5^3070502^
"^DD",727.811,727.811,88,23,1,0)
This field is seven characters in length. The value for this field is 
"^DD",727.811,727.811,88,23,2,0)
retrieved from the OTHER POSTOP DIAGNOSIS CODES field (#4), which is a 
"^DD",727.811,727.811,88,23,3,0)
pointer to Multiple (#136.04).  The OTHER POSTOP DIAGNOSIS CODE field 
"^DD",727.811,727.811,88,23,4,0)
(#.01) located on MULTIPLE (#136.04) points to the ICD Diagnosis File 
"^DD",727.811,727.811,88,23,5,0)
(#80).
"^DD",727.811,727.811,88,"DT")
3070502
"^DD",727.811,727.811,89,0)
OTHER POSTOP DIAGNOSIS CODE #4^F^^2;16^K:$L(X)>7!($L(X)<1) X
"^DD",727.811,727.811,89,3)
Answer must be 1-7 characters in length.
"^DD",727.811,727.811,89,21,0)
^^1^1^3070502^
"^DD",727.811,727.811,89,21,1,0)
This field has a length of seven characters. 
"^DD",727.811,727.811,89,23,0)
^^5^5^3070502^
"^DD",727.811,727.811,89,23,1,0)
This field has a length of seven characters. The value for this field is 
"^DD",727.811,727.811,89,23,2,0)
retrieved from the OTHER POSTOP DIAGNOSIS CODES field (#4), which is a 
"^DD",727.811,727.811,89,23,3,0)
pointer to Multiple (#136.04).  The OTHER POSTOP DIAGNOSIS CODE field 
"^DD",727.811,727.811,89,23,4,0)
(#.01) located on MULTIPLE (#136.04) points to the ICD Diagnosis File 
"^DD",727.811,727.811,89,23,5,0)
(#80).
"^DD",727.811,727.811,89,"DT")
3070502
"^DD",727.811,727.811,90,0)
OTHER POSTOP DIAGNOSIS CODE #5^F^^2;17^K:$L(X)>7!($L(X)<1) X
"^DD",727.811,727.811,90,3)
Answer must be 1-7 characters in length.
"^DD",727.811,727.811,90,21,0)
^^1^1^3070502^
"^DD",727.811,727.811,90,21,1,0)
This field has a length of seven characters.
"^DD",727.811,727.811,90,23,0)
^^5^5^3070502^
"^DD",727.811,727.811,90,23,1,0)
This field has a length of seven characters.  The value for this field is 
"^DD",727.811,727.811,90,23,2,0)
retrieved from the OTHER POSTOP DIAGNOSIS CODES field (#4), which is a 
"^DD",727.811,727.811,90,23,3,0)
pointer to Multiple (#136.04).  The OTHER POSTOP DIAGNOSIS CODE field 
"^DD",727.811,727.811,90,23,4,0)
(#.01) located on MULTIPLE (#136.04) points to the ICD Diagnosis File 
"^DD",727.811,727.811,90,23,5,0)
(#80).
"^DD",727.811,727.811,90,"DT")
3070502
"^DD",727.811,727.811,91,0)
ANESTHESIA SUPERVISOR NPI^F^^2;18^K:$L(X)>15!($L(X)<1) X
"^DD",727.811,727.811,91,3)
Answer must be 1-15 characters in length.
"^DD",727.811,727.811,91,21,0)
^^3^3^3070502^
"^DD",727.811,727.811,91,21,1,0)
A standard unique life-long identifier of the person who oversaw and/or 
"^DD",727.811,727.811,91,21,2,0)
signed off on the anesthesia for the surgical procedure. This field has a 
"^DD",727.811,727.811,91,21,3,0)
length of fifteen characters.
"^DD",727.811,727.811,91,23,0)
^^4^4^3070502^
"^DD",727.811,727.811,91,23,1,0)
A standard unique life-long identifier of the person who oversaw and/or 
"^DD",727.811,727.811,91,23,2,0)
signed off on the anesthesia for the surgical procedure. This field has a 
"^DD",727.811,727.811,91,23,3,0)
length of fifteen characters.  The qualified identifier is retrieved via 
"^DD",727.811,727.811,91,23,4,0)
the supporting Kernel API: $$NPI^XUSNPI. 
"^DD",727.811,727.811,91,"DT")
3070502
"^DD",727.811,727.811,92,0)
ASSOCIATE PC PROVIDER NPI^F^^2;19^K:$L(X)>15!($L(X)<1) X
"^DD",727.811,727.811,92,3)
Answer must be 1-15 characters in length.
"^DD",727.811,727.811,92,21,0)
^^2^2^3070502^
"^DD",727.811,727.811,92,21,1,0)
A standard unique life-long identifier of the associate primary care 
"^DD",727.811,727.811,92,21,2,0)
provider.  This field has a length of fifteen characters. 
"^DD",727.811,727.811,92,23,0)
^^3^3^3070502^
"^DD",727.811,727.811,92,23,1,0)
A standard unique life-long identifier of the associate primary care 
"^DD",727.811,727.811,92,23,2,0)
provider.  This field has a length of fifteen characters. The qualified 
"^DD",727.811,727.811,92,23,3,0)
identifier is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.811,727.811,92,"DT")
3070502
"^DD",727.811,727.811,93,0)
ATTENDING SURGEON NPI^F^^2;20^K:$L(X)>15!($L(X)<1) X
"^DD",727.811,727.811,93,3)
Answer must be 1-15 characters in length.
"^DD",727.811,727.811,93,21,0)
^^3^3^3070502^
"^DD",727.811,727.811,93,21,1,0)
A standard unique life-long identifier of the person who oversaw and/or 
"^DD",727.811,727.811,93,21,2,0)
signed off on the surgical procedure.  This field has a length of fifteen 
"^DD",727.811,727.811,93,21,3,0)
characters.
"^DD",727.811,727.811,93,23,0)
^^4^4^3070502^
"^DD",727.811,727.811,93,23,1,0)
A standard unique life-long identifier of the person who oversaw and/or 
"^DD",727.811,727.811,93,23,2,0)
signed off on the surgical procedure.  This field has a length of fifteen 
"^DD",727.811,727.811,93,23,3,0)
characters. The qualified identifier is retrieved via the supporting 
"^DD",727.811,727.811,93,23,4,0)
Kernel API: $$NPI^XUSNPI.
"^DD",727.811,727.811,93,"DT")
3070502
"^DD",727.811,727.811,94,0)
PRIMARY CARE PROVIDER NPI^F^^2;21^K:$L(X)>15!($L(X)<1) X
"^DD",727.811,727.811,94,3)
Answer must be 1-15 characters in length.
"^DD",727.811,727.811,94,21,0)
^^2^2^3070502^
"^DD",727.811,727.811,94,21,1,0)
A standard unique life-long identifier of the primary care provider.  
"^DD",727.811,727.811,94,21,2,0)
This field has a length of fifteen characters.
"^DD",727.811,727.811,94,23,0)
^^3^3^3070502^
"^DD",727.811,727.811,94,23,1,0)
A standard unique life-long identifier of the primary care provider.  
"^DD",727.811,727.811,94,23,2,0)
This field has a length of fifteen characters. The qualified identifier 
"^DD",727.811,727.811,94,23,3,0)
is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.811,727.811,94,"DT")
3070502
"^DD",727.811,727.811,95,0)
PRINCIPLE ANESTHETIST NPI^F^^2;22^K:$L(X)>15!($L(X)<1) X
"^DD",727.811,727.811,95,3)
Answer must be 1-15 characters in length.
"^DD",727.811,727.811,95,21,0)
^^3^3^3070502^
"^DD",727.811,727.811,95,21,1,0)
A standard unique life-long identifier of the principal anesthesiologist 
"^DD",727.811,727.811,95,21,2,0)
or Certified Registered Nurse Anesthetist (CRNA) who provided anesthesia 
"^DD",727.811,727.811,95,21,3,0)
for the surgical procedure. This field has a length of fifteen characters.
"^DD",727.811,727.811,95,23,0)
^^5^5^3070502^
"^DD",727.811,727.811,95,23,1,0)
A standard unique life-long identifier of the principal anesthesiologist 
"^DD",727.811,727.811,95,23,2,0)
or Certified Registered Nurse Anesthetist (CRNA) who provided anesthesia 
"^DD",727.811,727.811,95,23,3,0)
for the surgical procedure. This field has a length of fifteen 
"^DD",727.811,727.811,95,23,4,0)
characters. The qualified identifier is retrieved via the supporting 
"^DD",727.811,727.811,95,23,5,0)
Kernel API: $$NPI^XUSNPI.
"^DD",727.811,727.811,95,"DT")
3070502
"^DD",727.811,727.811,96,0)
SURGEON NPI^F^^2;23^K:$L(X)>15!($L(X)<1) X
"^DD",727.811,727.811,96,3)
Answer must be 1-15 characters in length.
"^DD",727.811,727.811,96,21,0)
^^2^2^3070502^
"^DD",727.811,727.811,96,21,1,0)
A standard unique life-long identifier of the person who performed the 
"^DD",727.811,727.811,96,21,2,0)
surgical procedure.  This field has a length of fifteen characters. 
"^DD",727.811,727.811,96,23,0)
^^4^4^3070502^
"^DD",727.811,727.811,96,23,1,0)
A standard unique life-long identifier of the person who performed the 
"^DD",727.811,727.811,96,23,2,0)
surgical procedure.  This field has a length of fifteen characters. The 
"^DD",727.811,727.811,96,23,3,0)
qualified identifier is retrieved via the supporting Kernel API: 
"^DD",727.811,727.811,96,23,4,0)
$$NPI^XUSNPI.
"^DD",727.811,727.811,96,"DT")
3070502
"^DD",727.812,727.812,15,0)
PLACEHOLDER^F^^0;16^K:$L(X)>8!($L(X)<1) X
"^DD",727.812,727.812,15,3)
Answer must be 1-8 characters in length.
"^DD",727.812,727.812,15,21,0)
^^1^1^3070827^
"^DD",727.812,727.812,15,21,1,0)
Currently NULL.
"^DD",727.812,727.812,15,23,0)
^^1^1^3070827^
"^DD",727.812,727.812,15,23,1,0)
Currently NULL.
"^DD",727.812,727.812,15,"DT")
3070426
"^DD",727.812,727.812,18,0)
PLACEHOLDER^F^^0;19^K:$L(X)>8!($L(X)<1) X
"^DD",727.812,727.812,18,3)
Answer must be 1-8 characters in length.
"^DD",727.812,727.812,18,21,0)
^^1^1^3070827^
"^DD",727.812,727.812,18,21,1,0)
Currently NULL.
"^DD",727.812,727.812,18,23,0)
^^1^1^3070827^
"^DD",727.812,727.812,18,23,1,0)
Currently NULL.
"^DD",727.812,727.812,18,"DT")
3070426
"^DD",727.812,727.812,30,0)
PLACEHOLDER^F^^1;3^K:$L(X)>8!($L(X)<1) X
"^DD",727.812,727.812,30,3)
Answer must be 1-8 characters in length.
"^DD",727.812,727.812,30,21,0)
^.001^1^1^3070827^^
"^DD",727.812,727.812,30,21,1,0)
Currently NULL.
"^DD",727.812,727.812,30,23,0)
^.001^1^1^3070827^^
"^DD",727.812,727.812,30,23,1,0)
Currently NULL.
"^DD",727.812,727.812,30,"DT")
3070426
"^DD",727.812,727.812,62,0)
ASSOCIATE PC PROVIDER NPI^F^^1;35^K:$L(X)>15!($L(X)<1) X
"^DD",727.812,727.812,62,3)
Answer must be 1-15 characters in length.
"^DD",727.812,727.812,62,21,0)
^^2^2^3070504^
"^DD",727.812,727.812,62,21,1,0)
A standard unique life-long identifier of the associate primary care 
"^DD",727.812,727.812,62,21,2,0)
provider. This field has a length of fifteen characters.
"^DD",727.812,727.812,62,23,0)
^.001^3^3^3070504^^
"^DD",727.812,727.812,62,23,1,0)
ASSOCIATE PC PROVIDER NPI is a standard unique life-long identifier of 
"^DD",727.812,727.812,62,23,2,0)
the associate primary care provider.  The qualified identifier shall be 
"^DD",727.812,727.812,62,23,3,0)
retrieved via the supporting Kernel API:$$NPI^XUSNPI.
"^DD",727.812,727.812,62,"DT")
3070504
"^DD",727.812,727.812,63,0)
ATTENDING PHYSICIAN NPI^F^^1;36^K:$L(X)>15!($L(X)<1) X
"^DD",727.812,727.812,63,3)
Answer must be 1-15 characters in length.
"^DD",727.812,727.812,63,21,0)
^^2^2^3070504^
"^DD",727.812,727.812,63,21,1,0)
A standard unique life-long identifier of the attending physician.  This 
"^DD",727.812,727.812,63,21,2,0)
field has a length of fifteen characters. 
"^DD",727.812,727.812,63,23,0)
^.001^3^3^3070504^^
"^DD",727.812,727.812,63,23,1,0)
ATTENDING PHYSICIAN NPI is a standard unique life-long identifier of the 
"^DD",727.812,727.812,63,23,2,0)
attending physician.  The qualified identifier shall be retrieved via the
"^DD",727.812,727.812,63,23,3,0)
supporting Kernel API:$$NPI^XUSNPI.
"^DD",727.812,727.812,63,"DT")
3070504
"^DD",727.812,727.812,64,0)
PRIMARY CARE PROVIDER NPI^F^^1;37^K:$L(X)>15!($L(X)<1) X
"^DD",727.812,727.812,64,3)
Answer must be 1-15 characters in length.
"^DD",727.812,727.812,64,21,0)
^^2^2^3070504^
"^DD",727.812,727.812,64,21,1,0)
A standard unique life-long identifier of the primary care provider.  
"^DD",727.812,727.812,64,21,2,0)
This field has a length of fifteen characters. 
"^DD",727.812,727.812,64,23,0)
^.001^3^3^3070504^^
"^DD",727.812,727.812,64,23,1,0)
PRIMARY CARE PROVIDER NPI is a standard unique life-long identifier of 
"^DD",727.812,727.812,64,23,2,0)
the primary care provider.  The qualified identifier shall be 
"^DD",727.812,727.812,64,23,3,0)
retrieved via the supporting Kernel API:$$NPI^XUSNPI.
"^DD",727.812,727.812,64,"DT")
3070504
"^DD",727.812,727.812,65,0)
PROVIDER NPI^F^^2;1^K:$L(X)>15!($L(X)<1) X
"^DD",727.812,727.812,65,3)
Answer must be 1-15 characters in length.
"^DD",727.812,727.812,65,21,0)
^^2^2^3070504^
"^DD",727.812,727.812,65,21,1,0)
A standard unique life-long identifier of the individuals providing 
"^DD",727.812,727.812,65,21,2,0)
health care services. This field has a length of fifteen characters. 
"^DD",727.812,727.812,65,23,0)
^.001^3^3^3070504^^
"^DD",727.812,727.812,65,23,1,0)
PROVIDER NPI is a standard unique life-long identifier of the individuals 
"^DD",727.812,727.812,65,23,2,0)
providing health care services.  The qualified identifier shall be 
"^DD",727.812,727.812,65,23,3,0)
retrieved via the supporting Kernel API:$$NPI^XUSNPI.
"^DD",727.812,727.812,65,"DT")
3070504
"^DD",727.812,727.812,66,0)
WARD PROVIDER NPI^F^^2;2^K:$L(X)>15!($L(X)<1) X
"^DD",727.812,727.812,66,3)
Answer must be 1-15 characters in length.
"^DD",727.812,727.812,66,21,0)
^^2^2^3070504^
"^DD",727.812,727.812,66,21,1,0)
A standard unique life-long identifier of the ward provider.  This field 
"^DD",727.812,727.812,66,21,2,0)
has a length of fifteen characters.
"^DD",727.812,727.812,66,23,0)
^.001^3^3^3070504^^
"^DD",727.812,727.812,66,23,1,0)
WARD PROVIDER NPI is a standard unique life-long identifier of the ward 
"^DD",727.812,727.812,66,23,2,0)
provider.  The qualified identifier shall be retrieved via the supporting
"^DD",727.812,727.812,66,23,3,0)
Kernel API:$$NPI^XUSNPI.
"^DD",727.812,727.812,66,"DT")
3070504
"^DD",727.813,727.813,24,0)
PLACEHOLDER^F^^1;3^K:$L(X)>8!($L(X)<1) X
"^DD",727.813,727.813,24,3)
Answer must be 1-8 characters in length.
"^DD",727.813,727.813,24,21,0)
^^1^1^3070827^
"^DD",727.813,727.813,24,21,1,0)
Currently NULL.
"^DD",727.813,727.813,24,23,0)
^^1^1^3070827^
"^DD",727.813,727.813,24,23,1,0)
Currently NULL.
"^DD",727.813,727.813,24,"DT")
3070426
"^DD",727.813,727.813,25,0)
PLACEHOLDER^F^^1;4^K:$L(X)>8!($L(X)<1) X
"^DD",727.813,727.813,25,3)
Answer must be 1-8 characters in length.
"^DD",727.813,727.813,25,21,0)
^^1^1^3070827^
"^DD",727.813,727.813,25,21,1,0)
Currently NULL.
"^DD",727.813,727.813,25,23,0)
^^1^1^3070827^
"^DD",727.813,727.813,25,23,1,0)
Currently NULL.
"^DD",727.813,727.813,25,"DT")
3070426
"^DD",727.813,727.813,29,0)
PLACEHOLDER^F^^1;8^K:$L(X)>8!($L(X)<1) X
"^DD",727.813,727.813,29,3)
Answer must be 1-8 characters in length.
"^DD",727.813,727.813,29,21,0)
^^1^1^3070827^
"^DD",727.813,727.813,29,21,1,0)
Currently NULL.
"^DD",727.813,727.813,29,23,0)
^^1^1^3070827^
"^DD",727.813,727.813,29,23,1,0)
Currently NULL.
"^DD",727.813,727.813,29,"DT")
3070426
"^DD",727.813,727.813,39,0)
ASSOCIATE PC PROVIDER NPI^F^^1;18^K:$L(X)>15!($L(X)<1) X
"^DD",727.813,727.813,39,3)
Answer must be 1-15 characters in length.
"^DD",727.813,727.813,39,21,0)
^^2^2^3070502^
"^DD",727.813,727.813,39,21,1,0)
A standard unique life-long identifier of the associate primary care 
"^DD",727.813,727.813,39,21,2,0)
provider.  This field has a length of fifteen characters. 
"^DD",727.813,727.813,39,23,0)
^.001^3^3^3070502^^
"^DD",727.813,727.813,39,23,1,0)
ASSOCIATE PC PROVIDER NPI is a standard unique life-long identifer of the 
"^DD",727.813,727.813,39,23,2,0)
associate primary care provider.  The qualified identifier shall be 
"^DD",727.813,727.813,39,23,3,0)
retrieved via the supporting Kernel API:$$NPI^XUSNPI.
"^DD",727.813,727.813,39,"DT")
3070504
"^DD",727.813,727.813,40,0)
PRIMARY CARE PROVIDER NPI^F^^1;19^K:$L(X)>15!($L(X)<1) X
"^DD",727.813,727.813,40,3)
Answer must be 1-15 characters in length.
"^DD",727.813,727.813,40,21,0)
^^2^2^3070502^
"^DD",727.813,727.813,40,21,1,0)
A standard unique life-long identifier of the primary care provider.  
"^DD",727.813,727.813,40,21,2,0)
This field has a length of fifteen characters.
"^DD",727.813,727.813,40,23,0)
^.001^3^3^3070502^^
"^DD",727.813,727.813,40,23,1,0)
PRIMARY CARE PROVIDER NPI is a standard unique life-long identifier of 
"^DD",727.813,727.813,40,23,2,0)
the primary care provider.  The qualified identifier shall be 
"^DD",727.813,727.813,40,23,3,0)
retrieved via the supporting Kernel API:$$NPI^XUSNPI.
"^DD",727.813,727.813,40,"DT")
3070504
"^DD",727.813,727.813,41,0)
PROVIDER NPI^F^^1;20^K:$L(X)>15!($L(X)<1) X
"^DD",727.813,727.813,41,3)
Answer must be 1-15 characters in length.
"^DD",727.813,727.813,41,21,0)
^^2^2^3070502^
"^DD",727.813,727.813,41,21,1,0)
A standard unique life-long identifier of the individuals providing 
"^DD",727.813,727.813,41,21,2,0)
health care services.  This field has a length of fifteen characters.
"^DD",727.813,727.813,41,23,0)
^.001^3^3^3070502^^
"^DD",727.813,727.813,41,23,1,0)
PROVIDER NPI is a standard unique life-long identifier of the individuals 
"^DD",727.813,727.813,41,23,2,0)
providing health care services.  The qualified identifier shall be 
"^DD",727.813,727.813,41,23,3,0)
retrieved via the supporting Kernel API:$$NPI^XUSNPI.
"^DD",727.813,727.813,41,"DT")
3070504
"^DD",727.814,727.814,25,0)
PLACEHOLDER^F^^1;3^K:$L(X)>8!($L(X)<1) X
"^DD",727.814,727.814,25,3)
Answer must be 1-8 characters in length.
"^DD",727.814,727.814,25,21,0)
^^1^1^3070827^
"^DD",727.814,727.814,25,21,1,0)
Currently NULL.
"^DD",727.814,727.814,25,23,0)
^^1^1^3070827^
"^DD",727.814,727.814,25,23,1,0)
Currently NULL.
"^DD",727.814,727.814,25,"DT")
3070426
"^DD",727.814,727.814,26,0)
PLACEHOLDER^F^^1;4^K:$L(X)>8!($L(X)<1) X
"^DD",727.814,727.814,26,3)
Answer must be 1-8 characters in length.
"^DD",727.814,727.814,26,21,0)
^^1^1^3070827^
"^DD",727.814,727.814,26,21,1,0)
Currently NULL.
"^DD",727.814,727.814,26,23,0)
^^1^1^3070827^
"^DD",727.814,727.814,26,23,1,0)
Currently NULL.
"^DD",727.814,727.814,26,"DT")
3070426
"^DD",727.814,727.814,30,0)
PLACEHOLDER^F^^1;8^K:$L(X)>8!($L(X)<1) X
"^DD",727.814,727.814,30,3)
Answer must be 1-8 characters in length.
"^DD",727.814,727.814,30,21,0)
^.001^1^1^3070827^^
"^DD",727.814,727.814,30,21,1,0)
Currently NULL.
"^DD",727.814,727.814,30,23,0)
^.001^1^1^3070827^^
"^DD",727.814,727.814,30,23,1,0)
Currently NULL.
"^DD",727.814,727.814,30,"DT")
3070426
"^DD",727.814,727.814,44,0)
ASSOCIATE PC PROVIDER NPI^F^^1;22^K:$L(X)>15!($L(X)<1) X
"^DD",727.814,727.814,44,3)
Answer must be 1-15 characters in length.
"^DD",727.814,727.814,44,21,0)
^^2^2^3070504^
"^DD",727.814,727.814,44,21,1,0)
A standard unique life-long identifier of the associate primary care 
"^DD",727.814,727.814,44,21,2,0)
provider. This field has a length of fifteen characters. 
"^DD",727.814,727.814,44,23,0)
^.001^3^3^3070504^^
"^DD",727.814,727.814,44,23,1,0)
ASSOCIATE PC PROVIDER NPI is a standard unique life-long identifier of 
"^DD",727.814,727.814,44,23,2,0)
the associate primary care provider.  The qualified identifier shall be 
"^DD",727.814,727.814,44,23,3,0)
retrieved via the supporting Kernel API:$$NPI^XUSNPI.
"^DD",727.814,727.814,44,"DT")
3070504
"^DD",727.814,727.814,45,0)
INTERPRETING RADIOLOGIST NPI^F^^1;23^K:$L(X)>15!($L(X)<1) X
"^DD",727.814,727.814,45,3)
Answer must be 1-15 characters in length.
"^DD",727.814,727.814,45,21,0)
^^2^2^3070504^
"^DD",727.814,727.814,45,21,1,0)
A standard unique life-long identifier of the radiologist who interpreted 
"^DD",727.814,727.814,45,21,2,0)
the radiology exam. This field has a length of fifteen characters.
"^DD",727.814,727.814,45,23,0)
^.001^3^3^3070504^^
"^DD",727.814,727.814,45,23,1,0)
INTERPRETING RADIOLOGIST NPI is a standard unique life-long identifier of 
"^DD",727.814,727.814,45,23,2,0)
the radiologist who interpreted the radiology exam.  The qualified 
"^DD",727.814,727.814,45,23,3,0)
identifier shall be retrieved via the supporting Kernel API:$$NPI^XUSNPI.
"^DD",727.814,727.814,45,"DT")
3070504
"^DD",727.814,727.814,46,0)
PRIMARY CARE PROVIDER NPI^F^^1;24^K:$L(X)>15!($L(X)<1) X
"^DD",727.814,727.814,46,3)
Answer must be 1-15 characters in length.
"^DD",727.814,727.814,46,21,0)
^^2^2^3070504^
"^DD",727.814,727.814,46,21,1,0)
A standard unique life-long identifier of the primary care provider.  
"^DD",727.814,727.814,46,21,2,0)
This field has a length of fifteen characters.
"^DD",727.814,727.814,46,23,0)
^.001^3^3^3070504^^
"^DD",727.814,727.814,46,23,1,0)
PRIMARY CARE PROVIDER NPI is a standard unique life-long identifier of the
"^DD",727.814,727.814,46,23,2,0)
priamry care provider.  The qualified identifier shall be retrieved via
"^DD",727.814,727.814,46,23,3,0)
the supporting Kernel API:$$NPI^XUSNPI.
"^DD",727.814,727.814,46,"DT")
3070504
"^DD",727.814,727.814,47,0)
REQUESTING PHYSICIAN NPI^F^^1;25^K:$L(X)>15!($L(X)<1) X
"^DD",727.814,727.814,47,3)
Answer must be 1-15 characters in length.
"^DD",727.814,727.814,47,21,0)
^^2^2^3070504^
"^DD",727.814,727.814,47,21,1,0)
A standard unique life-long identifier of the physician who requested the 
"^DD",727.814,727.814,47,21,2,0)
radiology exam.  This field has a length of fifteen characters.
"^DD",727.814,727.814,47,23,0)
^.001^3^3^3070504^^
"^DD",727.814,727.814,47,23,1,0)
REQUESTING PHYSICIAN NPI is a standard unique life-long identifier of the 
"^DD",727.814,727.814,47,23,2,0)
physician who requested the radiology exam.  The qualified identifier 
"^DD",727.814,727.814,47,23,3,0)
shall be retrieved via the supporting Kernel API:$$NPI^XUSNPI.
"^DD",727.814,727.814,47,"DT")
3070504
"^DD",727.815,727.815,44,0)
PLACEHOLDER^F^^1;3^K:$L(X)>8!($L(X)<1) X
"^DD",727.815,727.815,44,3)
Answer must be 1-8 characters in length.
"^DD",727.815,727.815,44,21,0)
^^1^1^3070827^
"^DD",727.815,727.815,44,21,1,0)
Currently NULL.
"^DD",727.815,727.815,44,23,0)
^^1^1^3070827^
"^DD",727.815,727.815,44,23,1,0)
Currently NULL.
"^DD",727.815,727.815,44,"DT")
3070426
"^DD",727.815,727.815,45,0)
PLACEHOLDER^F^^1;4^K:$L(X)>8!($L(X)<1) X
"^DD",727.815,727.815,45,3)
Answer must be 1-8 characters in length.
"^DD",727.815,727.815,45,21,0)
^^1^1^3070827^
"^DD",727.815,727.815,45,21,1,0)
Currently NULL.
"^DD",727.815,727.815,45,23,0)
^^1^1^3070827^
"^DD",727.815,727.815,45,23,1,0)
Currently NULL.
"^DD",727.815,727.815,45,"DT")
3070426
"^DD",727.815,727.815,46,0)
PLACEHOLDER^F^^1;5^K:$L(X)>8!($L(X)<1) X
"^DD",727.815,727.815,46,3)
Answer must be 1-8 characters in length.
"^DD",727.815,727.815,46,21,0)
^.001^1^1^3070827^^
"^DD",727.815,727.815,46,21,1,0)
Currently NULL.
"^DD",727.815,727.815,46,23,0)
^.001^1^1^3070827^^
"^DD",727.815,727.815,46,23,1,0)
Currently NULL.
"^DD",727.815,727.815,46,"DT")
3070426
"^DD",727.815,727.815,48,0)
PLACEHOLDER^F^^1;7^K:$L(X)>8!($L(X)<1) X
"^DD",727.815,727.815,48,3)
Answer must be 1-8 characters in length.
"^DD",727.815,727.815,48,21,0)
^.001^1^1^3070827^^
"^DD",727.815,727.815,48,21,1,0)
Currently NULL.
"^DD",727.815,727.815,48,23,0)
^.001^1^1^3070827^^
"^DD",727.815,727.815,48,23,1,0)
Currently NULL.
"^DD",727.815,727.815,48,"DT")
3070426
"^DD",727.815,727.815,51,0)
PLACEHOLDER^F^^1;10^K:$L(X)>8!($L(X)<1) X
"^DD",727.815,727.815,51,3)
Answer must be 1-8 characters in length.
"^DD",727.815,727.815,51,21,0)
^^1^1^3070827^
"^DD",727.815,727.815,51,21,1,0)
Currently NULL.
"^DD",727.815,727.815,51,23,0)
^^1^1^3070827^
"^DD",727.815,727.815,51,23,1,0)
Currently NULL.
"^DD",727.815,727.815,51,"DT")
3070426
"^DD",727.815,727.815,90,0)
OEF/OIF^F^^2;11^K:$L(X)>9!($L(X)<1) X
"^DD",727.815,727.815,90,3)
Answer must be 1-9 characters in length.
"^DD",727.815,727.815,90,21,0)
^^3^3^3070502^
"^DD",727.815,727.815,90,21,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.815,727.815,90,21,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.815,727.815,90,21,3,0)
reflects the OEF or OIF where this patient was in combat. 
"^DD",727.815,727.815,90,23,0)
^^12^12^3070502^
"^DD",727.815,727.815,90,23,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.815,727.815,90,23,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.815,727.815,90,23,3,0)
reflects the OEF or OIF where this patient was in combat.  The value of 
"^DD",727.815,727.815,90,23,4,0)
this field is derived from the LOCATION OF SERVICE field (#.01) from 
"^DD",727.815,727.815,90,23,5,0)
SERVICE [OEF OR OIF] sub-file (#2.3215) of field (#.3215) located in the 
"^DD",727.815,727.815,90,23,6,0)
PATIENT File (#2).  DSS will capture once, each location where the 
"^DD",727.815,727.815,90,23,7,0)
veteran served. In order to accommodate multiple locations, the values 
"^DD",727.815,727.815,90,23,8,0)
for this field are concatenated into this 9-character field. Possible 
"^DD",727.815,727.815,90,23,9,0)
field values are one or more combinations of the following: 
"^DD",727.815,727.815,90,23,10,0)
OEF =  Operation Enduring Freedom
"^DD",727.815,727.815,90,23,11,0)
OIF  =  Operation Iraqi Freedom
"^DD",727.815,727.815,90,23,12,0)
UNK =  Unknown OEF/OIF
"^DD",727.815,727.815,90,"DT")
3070502
"^DD",727.815,727.815,91,0)
OEF/OIF RETURN DATE^F^^2;12^K:$L(X)>8!($L(X)<1) X
"^DD",727.815,727.815,91,3)
Answer must be 1-8 characters in length.
"^DD",727.815,727.815,91,21,0)
^^3^3^3070502^
"^DD",727.815,727.815,91,21,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.815,727.815,91,21,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.815,727.815,91,21,3,0)
has a format equal to YYYYMMDD.
"^DD",727.815,727.815,91,23,0)
^^6^6^3070502^
"^DD",727.815,727.815,91,23,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.815,727.815,91,23,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.815,727.815,91,23,3,0)
has a format equal to YYYYMMDD.  The value of this field is derived from 
"^DD",727.815,727.815,91,23,4,0)
the OEF/OIF TO DATE field (#.03) from sub-file (#2.3215) of field 
"^DD",727.815,727.815,91,23,5,0)
(#.3215) located in the PATIENT file (#2).  In cases of multiple OEF/OIF 
"^DD",727.815,727.815,91,23,6,0)
tours, this field contains only most recent return date. 
"^DD",727.815,727.815,91,"DT")
3070502
"^DD",727.815,727.815,92,0)
ASSOCIATE PC PROVIDER NPI^F^^2;13^K:$L(X)>15!($L(X)<1) X
"^DD",727.815,727.815,92,3)
Answer must be 1-15 characters in length.
"^DD",727.815,727.815,92,21,0)
^^2^2^3070502^
"^DD",727.815,727.815,92,21,1,0)
A standard unique life-long identifier of the associate primary care 
"^DD",727.815,727.815,92,21,2,0)
provider. This field has a length of fifteen characters.
"^DD",727.815,727.815,92,23,0)
^^3^3^3070502^
"^DD",727.815,727.815,92,23,1,0)
A standard unique life-long identifier of the associate primary care 
"^DD",727.815,727.815,92,23,2,0)
provider. This field has a length of fifteen characters The qualified 
"^DD",727.815,727.815,92,23,3,0)
identifier is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.815,727.815,92,"DT")
3070502
"^DD",727.815,727.815,93,0)
PRIMARY CARE PROVIDER NPI^F^^2;14^K:$L(X)>15!($L(X)<1) X
"^DD",727.815,727.815,93,3)
Answer must be 1-15 characters in length.
"^DD",727.815,727.815,93,21,0)
^^2^2^3070502^
"^DD",727.815,727.815,93,21,1,0)
A standard unique life-long identifier of the primary care provider. This 
"^DD",727.815,727.815,93,21,2,0)
field has a length of fifteen characters.
"^DD",727.815,727.815,93,23,0)
^^3^3^3070502^
"^DD",727.815,727.815,93,23,1,0)
A standard unique life-long identifier of the primary care provider. This 
"^DD",727.815,727.815,93,23,2,0)
field has a length of fifteen characters.  The qualified identifier is 
"^DD",727.815,727.815,93,23,3,0)
retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.815,727.815,93,"DT")
3070502
"^DD",727.815,727.815,94,0)
PROVIDER NPI^F^^2;15^K:$L(X)>15!($L(X)<1) X
"^DD",727.815,727.815,94,3)
Answer must be 1-15 characters in length.
"^DD",727.815,727.815,94,21,0)
^^2^2^3070502^
"^DD",727.815,727.815,94,21,1,0)
A standard unique life-long identifier of the individuals providing 
"^DD",727.815,727.815,94,21,2,0)
health care services. This field has a length of fifteen characters.
"^DD",727.815,727.815,94,23,0)
^^4^4^3070502^
"^DD",727.815,727.815,94,23,1,0)
A standard unique life-long identifier of the individuals providing 
"^DD",727.815,727.815,94,23,2,0)
health care services. This field has a length of fifteen characters. The 
"^DD",727.815,727.815,94,23,3,0)
qualified identifier is retrieved via the supporting Kernel API: 
"^DD",727.815,727.815,94,23,4,0)
$$NPI^XUSNPI.
"^DD",727.815,727.815,94,"DT")
3070502
"^DD",727.815,727.815,95,0)
PROVIDER #2 NPI^F^^2;16^K:$L(X)>15!($L(X)<1) X
"^DD",727.815,727.815,95,3)
Answer must be 1-15 characters in length.
"^DD",727.815,727.815,95,21,0)
^^2^2^3070502^
"^DD",727.815,727.815,95,21,1,0)
A standard unique life-long identifier of the second assisting provider 
"^DD",727.815,727.815,95,21,2,0)
of health care services. This field has a length of fifteen characters. 
"^DD",727.815,727.815,95,23,0)
^^4^4^3070502^
"^DD",727.815,727.815,95,23,1,0)
A standard unique life-long identifier of the second assisting provider 
"^DD",727.815,727.815,95,23,2,0)
of health care services. This field has a length of fifteen characters.  
"^DD",727.815,727.815,95,23,3,0)
The qualified identifier is retrieved via the supporting Kernel API: 
"^DD",727.815,727.815,95,23,4,0)
$$NPI^XUSNPI.
"^DD",727.815,727.815,95,"DT")
3070502
"^DD",727.815,727.815,96,0)
PROVIDER #3 NPI^F^^2;17^K:$L(X)>15!($L(X)<1) X
"^DD",727.815,727.815,96,3)
Answer must be 1-15 characters in length.
"^DD",727.815,727.815,96,21,0)
^^2^2^3070502^
"^DD",727.815,727.815,96,21,1,0)
A standard unique life-long identifier of the third assisting provider of 
"^DD",727.815,727.815,96,21,2,0)
health care services. This field has a length of fifteen characters. 
"^DD",727.815,727.815,96,23,0)
^^4^4^3070502^
"^DD",727.815,727.815,96,23,1,0)
A standard unique life-long identifier of the third assisting provider of 
"^DD",727.815,727.815,96,23,2,0)
health care services. This field has a length of fifteen characters.  The 
"^DD",727.815,727.815,96,23,3,0)
qualified identifier is retrieved via the supporting Kernel API: 
"^DD",727.815,727.815,96,23,4,0)
$$NPI^XUSNPI.
"^DD",727.815,727.815,96,"DT")
3070502
"^DD",727.817,727.817,26,0)
PLACEHOLDER^F^^1;3^K:$L(X)>8!($L(X)<1) X
"^DD",727.817,727.817,26,3)
Answer must be 1-8 characters in length.
"^DD",727.817,727.817,26,21,0)
^^1^1^3070827^
"^DD",727.817,727.817,26,21,1,0)
Currently NULL.
"^DD",727.817,727.817,26,23,0)
^^1^1^3070827^
"^DD",727.817,727.817,26,23,1,0)
Currently NULL.
"^DD",727.817,727.817,26,"DT")
3070426
"^DD",727.817,727.817,27,0)
PLACEHOLDER^F^^1;4^K:$L(X)>8!($L(X)<1) X
"^DD",727.817,727.817,27,3)
Answer must be 1-8 characters in length.
"^DD",727.817,727.817,27,21,0)
^.001^1^1^3070827^^
"^DD",727.817,727.817,27,21,1,0)
Currently NULL.
"^DD",727.817,727.817,27,23,0)
^.001^1^1^3070827^^
"^DD",727.817,727.817,27,23,1,0)
Currently NULL.
"^DD",727.817,727.817,27,"DT")
3070426
"^DD",727.817,727.817,28,0)
PLACEHOLDER^F^^1;5^K:$L(X)>8!($L(X)<1) X
"^DD",727.817,727.817,28,3)
Answer must be 1-8 characters in length.
"^DD",727.817,727.817,28,21,0)
^^1^1^3070827^
"^DD",727.817,727.817,28,21,1,0)
Currently NULL.
"^DD",727.817,727.817,28,23,0)
^^1^1^3070827^
"^DD",727.817,727.817,28,23,1,0)
Currently NULL.
"^DD",727.817,727.817,28,"DT")
3070426
"^DD",727.817,727.817,29,0)
PLACEHOLDER^F^^1;6^K:$L(X)>8!($L(X)<1) X
"^DD",727.817,727.817,29,3)
Answer must be 1-8 characters in length.
"^DD",727.817,727.817,29,21,0)
^^1^1^3070827^
"^DD",727.817,727.817,29,21,1,0)
Currently NULL.
"^DD",727.817,727.817,29,23,0)
^^1^1^3070827^
"^DD",727.817,727.817,29,23,1,0)
Currently NULL.
"^DD",727.817,727.817,29,"DT")
3070426
"^DD",727.817,727.817,40,0)
LOSING ATTENDING PHYSICIAN NPI^F^^1;17^K:$L(X)>15!($L(X)<1) X
"^DD",727.817,727.817,40,3)
Answer must be 1-15 characters in length.
"^DD",727.817,727.817,40,21,0)
^^3^3^3070504^
"^DD",727.817,727.817,40,21,1,0)
A standard unique life-long identifier of the attending physician 
"^DD",727.817,727.817,40,21,2,0)
associated with the previous treating specialty change record. This field 
"^DD",727.817,727.817,40,21,3,0)
has a length of fifteen characters. 
"^DD",727.817,727.817,40,23,0)
^.001^4^4^3070504^^
"^DD",727.817,727.817,40,23,1,0)
LOSING ATTENDING PHYSICIAN NPI is a standard unique life-long identifier 
"^DD",727.817,727.817,40,23,2,0)
of the attending physician associated with the previous treating specialty
"^DD",727.817,727.817,40,23,3,0)
change record in File (#405).  The qualified identifier shall be retrieved
"^DD",727.817,727.817,40,23,4,0)
via the supporting Kernel API:$$NPI^XUSNPI.
"^DD",727.817,727.817,40,"DT")
3070504
"^DD",727.817,727.817,41,0)
LOSING PRIM WARD PROVIDER NPI^F^^1;18^K:$L(X)>15!($L(X)<1) X
"^DD",727.817,727.817,41,3)
Answer must be 1-15 characters in length.
"^DD",727.817,727.817,41,21,0)
^^4^4^3070504^
"^DD",727.817,727.817,41,21,1,0)
A standard unique life-long identifier of the losing primary ward 
"^DD",727.817,727.817,41,21,2,0)
provider for the patient movement (i.e., the Primary Provider of the 
"^DD",727.817,727.817,41,21,3,0)
previous treating specialty change record). This field has a length of 
"^DD",727.817,727.817,41,21,4,0)
fifteen characters.
"^DD",727.817,727.817,41,23,0)
^.001^5^5^3070504^^
"^DD",727.817,727.817,41,23,1,0)
LOSING PRIM WARD PROVIDER NPI is a standard unique life-long identifier 
"^DD",727.817,727.817,41,23,2,0)
of the losing primary ward provider for the patient movement (i.e., the 
"^DD",727.817,727.817,41,23,3,0)
Primary Provider of the previous treating specialty change record).  The 
"^DD",727.817,727.817,41,23,4,0)
qualified identifier shall be retrieved via the supporting Kernel
"^DD",727.817,727.817,41,23,5,0)
API:$$NPI^XUSNPI.
"^DD",727.817,727.817,41,"DT")
3070504
"^DD",727.817,727.817,42,0)
NEW ATTENDING PHYSICIAN NPI^F^^1;19^K:$L(X)>15!($L(X)<1) X
"^DD",727.817,727.817,42,3)
Answer must be 1-15 characters in length.
"^DD",727.817,727.817,42,21,0)
^.001^3^3^3070504^^
"^DD",727.817,727.817,42,21,1,0)
A standard unique life-long identifier of the new attending physician 
"^DD",727.817,727.817,42,21,2,0)
associated with the current patient movement record in the PATIENT 
"^DD",727.817,727.817,42,21,3,0)
MOVEMENT File (#405). This field has a length of fifteen characters.
"^DD",727.817,727.817,42,23,0)
^.001^4^4^3070504^^^
"^DD",727.817,727.817,42,23,1,0)
NEW ATTENDING PHYSICIAN NPI is a standard unique life-long identifier of 
"^DD",727.817,727.817,42,23,2,0)
the new attending physician associated with the current patient movement 
"^DD",727.817,727.817,42,23,3,0)
record in File (#405).  The qualified identifier shall be retrieved via
"^DD",727.817,727.817,42,23,4,0)
the supporting Kernel API:$$NPI^XUSNPI.
"^DD",727.817,727.817,42,"DT")
3070504
"^DD",727.817,727.817,43,0)
NEW PRIMARY WARD PROVIDER NPI^F^^1;20^K:$L(X)>15!($L(X)<1) X
"^DD",727.817,727.817,43,3)
Answer must be 1-15 characters in length.
"^DD",727.817,727.817,43,21,0)
^^3^3^3070504^
"^DD",727.817,727.817,43,21,1,0)
A standard unique life-long identifier of the new primary ward provider 
"^DD",727.817,727.817,43,21,2,0)
associated with the current patient movement record in PATIENT MOVEMENT 
"^DD",727.817,727.817,43,21,3,0)
File (#405).  This field has a length of fifteen characters.
"^DD",727.817,727.817,43,23,0)
^.001^4^4^3070504^^
"^DD",727.817,727.817,43,23,1,0)
NEW PRIMARY WARD PROVIDER NPI is a standard unique life-long identifier 
"^DD",727.817,727.817,43,23,2,0)
of the new primary ward provider associated with the current movement 
"^DD",727.817,727.817,43,23,3,0)
record in File (#405).  The qualified identifier shall be retrieved via
"^DD",727.817,727.817,43,23,4,0)
the supporting Kernel API:$$NPI^XUSNPI.
"^DD",727.817,727.817,43,"DT")
3070504
"^DD",727.819,727.819,29,0)
PLACEHOLDER^F^^1;3^K:$L(X)>8!($L(X)<1) X
"^DD",727.819,727.819,29,3)
Answer must be 1-8 characters in length.
"^DD",727.819,727.819,29,21,0)
^^1^1^3070827^
"^DD",727.819,727.819,29,21,1,0)
Currently NULL.
"^DD",727.819,727.819,29,23,0)
^^1^1^3070827^
"^DD",727.819,727.819,29,23,1,0)
Currently NULL.
"^DD",727.819,727.819,29,"DT")
3070426
"^DD",727.819,727.819,33,0)
PLACEHOLDER^F^^1;7^K:$L(X)>8!($L(X)<1) X
"^DD",727.819,727.819,33,3)
Answer must be 1-8 characters in length.
"^DD",727.819,727.819,33,21,0)
^^1^1^3070827^
"^DD",727.819,727.819,33,21,1,0)
Currently NULL.
"^DD",727.819,727.819,33,23,0)
^^1^1^3070827^
"^DD",727.819,727.819,33,23,1,0)
Currently NULL.
"^DD",727.819,727.819,33,"DT")
3070426
"^DD",727.819,727.819,63,0)
PLACEHOLDER^F^^1;37^K:$L(X)>11!($L(X)<1) X
"^DD",727.819,727.819,63,3)
Answer must be 1-11 characters in length
"^DD",727.819,727.819,63,21,0)
^^1^1^3070827^
"^DD",727.819,727.819,63,21,1,0)
Currently NULL.
"^DD",727.819,727.819,63,23,0)
^^1^1^3070827^
"^DD",727.819,727.819,63,23,1,0)
Currently NULL.
"^DD",727.819,727.819,63,"DT")
3070426
"^DD",727.819,727.819,82,0)
OEF/OIF^F^^2;19^K:$L(X)>9!($L(X)<1) X
"^DD",727.819,727.819,82,3)
Answer must be 1-9 characters in length.
"^DD",727.819,727.819,82,21,0)
^^3^3^3070502^
"^DD",727.819,727.819,82,21,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.819,727.819,82,21,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.819,727.819,82,21,3,0)
reflects the OEF or OIF where this patient was in combat.
"^DD",727.819,727.819,82,23,0)
^.001^12^12^3070504^^
"^DD",727.819,727.819,82,23,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.819,727.819,82,23,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.819,727.819,82,23,3,0)
reflects the OEF or OIF where this patient was in combat.  The value of 
"^DD",727.819,727.819,82,23,4,0)
this field is derived from the LOCATION OF SERVICE field (#.01) from 
"^DD",727.819,727.819,82,23,5,0)
SERVICE [OEF OR OIF] sub-file (#2.3215) of field (#.3215) located in the 
"^DD",727.819,727.819,82,23,6,0)
PATIENT File (#2).  DSS will capture once, each location where the 
"^DD",727.819,727.819,82,23,7,0)
veteran served. In order to accommodate multiple locations, the values 
"^DD",727.819,727.819,82,23,8,0)
for this field are concatenated into this 9-character field. Possible 
"^DD",727.819,727.819,82,23,9,0)
field values are one or more combinations of the following: 
"^DD",727.819,727.819,82,23,10,0)
OEF =  Operation Enduring Freedom
"^DD",727.819,727.819,82,23,11,0)
OIF  =  Operation Iraqi Freedom
"^DD",727.819,727.819,82,23,12,0)
UNK =  Unknown OEF/OIF
"^DD",727.819,727.819,82,"DT")
3070502
"^DD",727.819,727.819,83,0)
OEF/OIF RETURN DATE^F^^2;20^K:$L(X)>8!($L(X)<1) X
"^DD",727.819,727.819,83,3)
Answer must be 1-8 characters in length.
"^DD",727.819,727.819,83,21,0)
^^3^3^3070502^
"^DD",727.819,727.819,83,21,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.819,727.819,83,21,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.819,727.819,83,21,3,0)
has a format equal to YYYYMMDD. 
"^DD",727.819,727.819,83,23,0)
^^6^6^3070502^
"^DD",727.819,727.819,83,23,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.819,727.819,83,23,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.819,727.819,83,23,3,0)
has a format equal to YYYYMMDD.  The value of this field is derived from 
"^DD",727.819,727.819,83,23,4,0)
the OEF/OIF TO DATE field (#.03) from sub-file (#2.3215) of field 
"^DD",727.819,727.819,83,23,5,0)
(#.3215) located in the PATIENT file (#2).  In cases of multiple OEF/OIF 
"^DD",727.819,727.819,83,23,6,0)
tours, this field contains only most recent return date. 
"^DD",727.819,727.819,83,"DT")
3070502
"^DD",727.819,727.819,84,0)
ASSOCIATE PC PROVIDER NPI^F^^2;21^K:$L(X)>15!($L(X)<1) X
"^DD",727.819,727.819,84,3)
Answer must be 1-15 characters in length.
"^DD",727.819,727.819,84,21,0)
^^2^2^3070502^
"^DD",727.819,727.819,84,21,1,0)
A standard unique life-long identifier of the associate primary care 
"^DD",727.819,727.819,84,21,2,0)
provider.  This field has a length of fifteen characters.
"^DD",727.819,727.819,84,23,0)
^^3^3^3070502^
"^DD",727.819,727.819,84,23,1,0)
A standard unique life-long identifier of the associate primary care 
"^DD",727.819,727.819,84,23,2,0)
provider.  This field has a length of fifteen characters. The qualified 
"^DD",727.819,727.819,84,23,3,0)
identifier is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.819,727.819,84,"DT")
3070502
"^DD",727.819,727.819,85,0)
ORDERING PROVIDER NPI^F^^2;22^K:$L(X)>15!($L(X)<1) X
"^DD",727.819,727.819,85,3)
Answer must be 1-15 characters in length.
"^DD",727.819,727.819,85,21,0)
^^2^2^3070502^
"^DD",727.819,727.819,85,21,1,0)
A standard unique life-long identifier of the provider who ordered the 
"^DD",727.819,727.819,85,21,2,0)
intravenous product. This field has a length of fifteen characters.
"^DD",727.819,727.819,85,23,0)
^^4^4^3070502^
"^DD",727.819,727.819,85,23,1,0)
A standard unique life-long identifier of the provider who ordered the 
"^DD",727.819,727.819,85,23,2,0)
intravenous product. This field has a length of fifteen characters.  The 
"^DD",727.819,727.819,85,23,3,0)
qualified identifier is retrieved via the supporting Kernel API: 
"^DD",727.819,727.819,85,23,4,0)
$$NPI^XUSNPI.
"^DD",727.819,727.819,85,"DT")
3070502
"^DD",727.819,727.819,86,0)
PRIMARY CARE PROVIDER NPI^F^^2;23^K:$L(X)>15!($L(X)<1) X
"^DD",727.819,727.819,86,3)
Answer must be 1-15 characters in length.
"^DD",727.819,727.819,86,21,0)
^^2^2^3070502^
"^DD",727.819,727.819,86,21,1,0)
A standard unique life-long identifier of the primary care provider. This 
"^DD",727.819,727.819,86,21,2,0)
field has a length of fifteen characters. 
"^DD",727.819,727.819,86,23,0)
^^3^3^3070502^
"^DD",727.819,727.819,86,23,1,0)
A standard unique life-long identifier of the primary care provider. This 
"^DD",727.819,727.819,86,23,2,0)
field has a length of fifteen characters. The qualified identifier is 
"^DD",727.819,727.819,86,23,3,0)
retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.819,727.819,86,"DT")
3070502
"^DD",727.824,727.824,30,0)
ORDERING PROVIDER NPI^F^^1;11^K:$L(X)>15!($L(X)<1) X
"^DD",727.824,727.824,30,3)
Answer must be 1-15 characters in length.
"^DD",727.824,727.824,30,21,0)
^^2^2^3070502^
"^DD",727.824,727.824,30,21,1,0)
A standard unique life-long identifier of the provider who ordered the 
"^DD",727.824,727.824,30,21,2,0)
lab test.  This field has a length of fifteen characters.
"^DD",727.824,727.824,30,23,0)
^.001^3^3^3070502^^
"^DD",727.824,727.824,30,23,1,0)
ORDERING PROVIDER NPI is a standard unique life-long identifier of the 
"^DD",727.824,727.824,30,23,2,0)
provider who ordered the lab test.  The qualified identifier shall be 
"^DD",727.824,727.824,30,23,3,0)
retrieved via the supporting Kernel API:$$NPI^XUSNPI.
"^DD",727.824,727.824,30,"DT")
3070504
"^DD",727.825,727.825,44,0)
PLACEHOLDER^F^^1;3^K:$L(X)>8!($L(X)<1) X
"^DD",727.825,727.825,44,3)
Answer must be 1-8 characters in length.
"^DD",727.825,727.825,44,21,0)
^^1^1^3070827^
"^DD",727.825,727.825,44,21,1,0)
Currently NULL.
"^DD",727.825,727.825,44,23,0)
^^1^1^3070827^
"^DD",727.825,727.825,44,23,1,0)
Currently NULL.
"^DD",727.825,727.825,44,"DT")
3070426
"^DD",727.825,727.825,45,0)
PLACEHOLDER^F^^1;4^K:$L(X)>8!($L(X)<1) X
"^DD",727.825,727.825,45,3)
Answer must be 1-8 characters in length.
"^DD",727.825,727.825,45,21,0)
^^1^1^3070827^
"^DD",727.825,727.825,45,21,1,0)
Currently NULL.
"^DD",727.825,727.825,45,23,0)
^^1^1^3070827^
"^DD",727.825,727.825,45,23,1,0)
Currently NULL.
"^DD",727.825,727.825,45,"DT")
3070426
"^DD",727.825,727.825,46,0)
PLACEHOLDER^F^^1;5^K:$L(X)>8!($L(X)<1) X
"^DD",727.825,727.825,46,3)
Answer must be 1-8 characters in length.
"^DD",727.825,727.825,46,21,0)
^.001^1^1^3070827^^
"^DD",727.825,727.825,46,21,1,0)
Currently NULL.
"^DD",727.825,727.825,46,23,0)
^.001^1^1^3070827^^
"^DD",727.825,727.825,46,23,1,0)
Currently NULL.
"^DD",727.825,727.825,46,"DT")
3070426
"^DD",727.825,727.825,48,0)
PLACEHOLDER^F^^1;7^K:$L(X)>8!($L(X)<1) X
"^DD",727.825,727.825,48,3)
Answer must be 1-8 characters in length.
"^DD",727.825,727.825,48,21,0)
^^1^1^3070827^
"^DD",727.825,727.825,48,21,1,0)
Currently NULL.
"^DD",727.825,727.825,48,23,0)
^^1^1^3070827^
"^DD",727.825,727.825,48,23,1,0)
Currently NULL.
"^DD",727.825,727.825,48,"DT")
3070426
"^DD",727.825,727.825,51,0)
PLACEHOLDER^F^^1;10^K:$L(X)>8!($L(X)<1) X
"^DD",727.825,727.825,51,3)
Answer must be 1-8 characters in length.
"^DD",727.825,727.825,51,21,0)
^^1^1^3070827^
"^DD",727.825,727.825,51,21,1,0)
Currently NULL.
"^DD",727.825,727.825,51,23,0)
^^1^1^3070827^
"^DD",727.825,727.825,51,23,1,0)
Currently NULL.
"^DD",727.825,727.825,51,"DT")
3070426
"^DD",727.825,727.825,90,0)
OEF/OIF^F^^2;11^K:$L(X)>9!($L(X)<1) X
"^DD",727.825,727.825,90,3)
Answer must be 1-9 characters in length.
"^DD",727.825,727.825,90,21,0)
^^3^3^3070502^
"^DD",727.825,727.825,90,21,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.825,727.825,90,21,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.825,727.825,90,21,3,0)
reflects the OEF or OIF where this patient was in combat.
"^DD",727.825,727.825,90,23,0)
^^12^12^3070502^
"^DD",727.825,727.825,90,23,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.825,727.825,90,23,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.825,727.825,90,23,3,0)
reflects the OEF or OIF where this patient was in combat.  The value of 
"^DD",727.825,727.825,90,23,4,0)
this field is derived from the LOCATION OF SERVICE field (#.01) from 
"^DD",727.825,727.825,90,23,5,0)
SERVICE [OEF OR OIF] sub-file (#2.3215) of field (#.3215) located in the 
"^DD",727.825,727.825,90,23,6,0)
PATIENT File (#2).  DSS will capture once, each location where the 
"^DD",727.825,727.825,90,23,7,0)
veteran served. In order to accommodate multiple locations, the values 
"^DD",727.825,727.825,90,23,8,0)
for this field are concatenated into this 9-character field. Possible 
"^DD",727.825,727.825,90,23,9,0)
field values are one or more combinations of the following: 
"^DD",727.825,727.825,90,23,10,0)
OEF =  Operation Enduring Freedom
"^DD",727.825,727.825,90,23,11,0)
OIF  =  Operation Iraqi Freedom
"^DD",727.825,727.825,90,23,12,0)
UNK =  Unknown OEF/OIF
"^DD",727.825,727.825,90,"DT")
3070502
"^DD",727.825,727.825,91,0)
OEF/OIF RETURN DATE^F^^2;12^K:$L(X)>8!($L(X)<1) X
"^DD",727.825,727.825,91,3)
Answer must be 1-8 characters in length.
"^DD",727.825,727.825,91,21,0)
^^3^3^3070502^
"^DD",727.825,727.825,91,21,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.825,727.825,91,21,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.825,727.825,91,21,3,0)
has a format equal to YYYYMMDD. 
"^DD",727.825,727.825,91,23,0)
^^6^6^3070502^
"^DD",727.825,727.825,91,23,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.825,727.825,91,23,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.825,727.825,91,23,3,0)
has a format equal to YYYYMMDD.  The value of this field is derived from 
"^DD",727.825,727.825,91,23,4,0)
the OEF/OIF TO DATE field (#.03) from sub-file (#2.3215) of field 
"^DD",727.825,727.825,91,23,5,0)
(#.3215) located in the PATIENT file (#2).  In cases of multiple OEF/OIF 
"^DD",727.825,727.825,91,23,6,0)
tours, this field contains only most recent return date. 
"^DD",727.825,727.825,91,"DT")
3070502
"^DD",727.825,727.825,92,0)
ASSOCIATE PC PROVIDER NPI^F^^2;13^K:$L(X)>15!($L(X)<1) X
"^DD",727.825,727.825,92,3)
Answer must be 1-15 characters in length.
"^DD",727.825,727.825,92,21,0)
^^2^2^3070502^
"^DD",727.825,727.825,92,21,1,0)
A standard unique life-long identifier of the associate primary care 
"^DD",727.825,727.825,92,21,2,0)
provider, which has a field length of fifteen characters. 
"^DD",727.825,727.825,92,23,0)
^^3^3^3070502^
"^DD",727.825,727.825,92,23,1,0)
A standard unique life-long identifier of the associate primary care 
"^DD",727.825,727.825,92,23,2,0)
provider, which has a field length of fifteen characters. The qualified 
"^DD",727.825,727.825,92,23,3,0)
identifier is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.825,727.825,92,"DT")
3070502
"^DD",727.825,727.825,93,0)
PRIMARY CARE PROVIDER NPI^F^^2;14^K:$L(X)>15!($L(X)<1) X
"^DD",727.825,727.825,93,3)
Answer must be 1-15 characters in length.
"^DD",727.825,727.825,93,21,0)
^^2^2^3070502^
"^DD",727.825,727.825,93,21,1,0)
A standard unique life-long identifier of the primary care provider. This 
"^DD",727.825,727.825,93,21,2,0)
field has a length of fifteen characters.
"^DD",727.825,727.825,93,23,0)
^^3^3^3070502^
"^DD",727.825,727.825,93,23,1,0)
A standard unique life-long identifier of the primary care provider. This 
"^DD",727.825,727.825,93,23,2,0)
field has a length of fifteen characters.  The qualified identifier is 
"^DD",727.825,727.825,93,23,3,0)
retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.825,727.825,93,"DT")
3070502
"^DD",727.825,727.825,94,0)
PROVIDER NPI^F^^2;15^K:$L(X)>15!($L(X)<1) X
"^DD",727.825,727.825,94,3)
Answer must be 1-15 characters in length.
"^DD",727.825,727.825,94,21,0)
^^2^2^3070502^
"^DD",727.825,727.825,94,21,1,0)
A standard unique life-long identifier of the individuals providing 
"^DD",727.825,727.825,94,21,2,0)
health care services.  This field has a length of fifteen characters. 
"^DD",727.825,727.825,94,23,0)
^^4^4^3070502^
"^DD",727.825,727.825,94,23,1,0)
A standard unique life-long identifier of the individuals providing 
"^DD",727.825,727.825,94,23,2,0)
health care services.  This field has a length of fifteen characters. The 
"^DD",727.825,727.825,94,23,3,0)
qualified identifier is retrieved via the supporting Kernel API: 
"^DD",727.825,727.825,94,23,4,0)
$$NPI^XUSNPI.
"^DD",727.825,727.825,94,"DT")
3070502
"^DD",727.825,727.825,95,0)
PROVIDER #2 NPI^F^^2;16^K:$L(X)>15!($L(X)<1) X
"^DD",727.825,727.825,95,3)
Answer must be 1-15 characters in length.
"^DD",727.825,727.825,95,21,0)
^^2^2^3070502^
"^DD",727.825,727.825,95,21,1,0)
A standard unique life-long identifier of the second assisting provider 
"^DD",727.825,727.825,95,21,2,0)
of health care service. This field has a length of fifteen characters.
"^DD",727.825,727.825,95,23,0)
^^4^4^3070502^
"^DD",727.825,727.825,95,23,1,0)
A standard unique life-long identifier of the second assisting provider 
"^DD",727.825,727.825,95,23,2,0)
of health care service. This field has a length of fifteen characters.  
"^DD",727.825,727.825,95,23,3,0)
The qualified identifier is retrieved via the supporting Kernel API: 
"^DD",727.825,727.825,95,23,4,0)
$$NPI^XUSNPI.
"^DD",727.825,727.825,95,"DT")
3070502
"^DD",727.825,727.825,96,0)
PROVIDER #3 NPI^F^^2;17^K:$L(X)>15!($L(X)<1) X
"^DD",727.825,727.825,96,3)
Answer must be 1-15 characters in length.
"^DD",727.825,727.825,96,21,0)
^^2^2^3070502^
"^DD",727.825,727.825,96,21,1,0)
A standard unique life-long identifier of the third assisting provider of 
"^DD",727.825,727.825,96,21,2,0)
health care services. This field has a length of fifteen characters. 
"^DD",727.825,727.825,96,23,0)
^^4^4^3070502^
"^DD",727.825,727.825,96,23,1,0)
A standard unique life-long identifier of the third assisting provider of 
"^DD",727.825,727.825,96,23,2,0)
health care services. This field has a length of fifteen characters.  The 
"^DD",727.825,727.825,96,23,3,0)
qualified identifier is retrieved via the supporting Kernel API: 
"^DD",727.825,727.825,96,23,4,0)
$$NPI^XUSNPI.
"^DD",727.825,727.825,96,"DT")
3070502
"^DD",727.826,727.826,37,0)
PLACEHOLDER^F^^1;5^K:$L(X)>8!($L(X)<1) X
"^DD",727.826,727.826,37,.1)

"^DD",727.826,727.826,37,3)
Enter the National Provider Index for the Primary Care Provider.
"^DD",727.826,727.826,37,10)

"^DD",727.826,727.826,37,21,0)
^^1^1^3070827^
"^DD",727.826,727.826,37,21,1,0)
Currently NULL.
"^DD",727.826,727.826,37,23,0)
^^1^1^3070827^
"^DD",727.826,727.826,37,23,1,0)
Currently NULL.
"^DD",727.826,727.826,37,"DT")
3070426
"^DD",727.826,727.826,52,0)
PLACEHOLDER^F^^1;20^K:$L(X)>8!($L(X)<1) X
"^DD",727.826,727.826,52,3)
Answer must be 1-8 characters in length.
"^DD",727.826,727.826,52,21,0)
^^1^1^3070827^
"^DD",727.826,727.826,52,21,1,0)
Currently NULL.
"^DD",727.826,727.826,52,23,0)
^^1^1^3070827^
"^DD",727.826,727.826,52,23,1,0)
Currently NULL.
"^DD",727.826,727.826,52,"DT")
3070426
"^DD",727.826,727.826,81,0)
OEF/OIF^F^^2;1^K:$L(X)>9!($L(X)<1) X
"^DD",727.826,727.826,81,3)
Answer must be 1-9 characters in length.
"^DD",727.826,727.826,81,21,0)
^^4^4^3070502^
"^DD",727.826,727.826,81,21,1,0)
A standard unique life-long identifier of the individuals providing 
"^DD",727.826,727.826,81,21,2,0)
health care services.  This field has a length of fifteen characters. The 
"^DD",727.826,727.826,81,21,3,0)
qualified identifier is retrieved via the supporting Kernel API: 
"^DD",727.826,727.826,81,21,4,0)
$$NPI^XUSNPI.
"^DD",727.826,727.826,81,23,0)
^^12^12^3070502^
"^DD",727.826,727.826,81,23,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.826,727.826,81,23,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.826,727.826,81,23,3,0)
reflects the OEF or OIF where this patient was in combat.  The value of 
"^DD",727.826,727.826,81,23,4,0)
this field is derived from the LOCATION OF SERVICE field (#.01) from 
"^DD",727.826,727.826,81,23,5,0)
SERVICE [OEF OR OIF] sub-file (#2.3215) of field (#.3215) located in the 
"^DD",727.826,727.826,81,23,6,0)
PATIENT File (#2).  DSS will capture once, each location where the 
"^DD",727.826,727.826,81,23,7,0)
veteran served. In order to accommodate multiple locations, the values 
"^DD",727.826,727.826,81,23,8,0)
for this field are concatenated into this 9-character field. Possible 
"^DD",727.826,727.826,81,23,9,0)
field values are one or more combinations of the following: 
"^DD",727.826,727.826,81,23,10,0)
OEF =  Operation Enduring Freedom
"^DD",727.826,727.826,81,23,11,0)
OIF  =  Operation Iraqi Freedom
"^DD",727.826,727.826,81,23,12,0)
UNK =  Unknown OEF/OIF
"^DD",727.826,727.826,81,"DT")
3070502
"^DD",727.826,727.826,82,0)
OEF/OIF RETURN DATE^F^^2;2^K:$L(X)>8!($L(X)<1) X
"^DD",727.826,727.826,82,3)
Answer must be 1-8 characters in length.
"^DD",727.826,727.826,82,21,0)
^^3^3^3070502^
"^DD",727.826,727.826,82,21,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.826,727.826,82,21,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.826,727.826,82,21,3,0)
has a format equal to YYYYMMDD.
"^DD",727.826,727.826,82,23,0)
^^6^6^3070502^
"^DD",727.826,727.826,82,23,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.826,727.826,82,23,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.826,727.826,82,23,3,0)
has a format equal to YYYYMMDD.  The value of this field is derived from 
"^DD",727.826,727.826,82,23,4,0)
the OEF/OIF TO DATE field (#.03) from sub-file (#2.3215) of field 
"^DD",727.826,727.826,82,23,5,0)
(#.3215) located in the PATIENT file (#2).  In cases of multiple OEF/OIF 
"^DD",727.826,727.826,82,23,6,0)
tours, this field contains only most recent return date. 
"^DD",727.826,727.826,82,"DT")
3070502
"^DD",727.826,727.826,83,0)
NPPD CODE^F^^2;3^K:$L(X)>10!($L(X)<1) X
"^DD",727.826,727.826,83,3)
Answer must be 1-10 characters in length.
"^DD",727.826,727.826,83,21,0)
^.001^5^5^3071108^^
"^DD",727.826,727.826,83,21,1,0)
This field has a length of ten characters. The value is derived from the 
"^DD",727.826,727.826,83,21,2,0)
PROSTHETIC HCPCS File (#661.1), field (#5) NPPD REPAIR CODE, if the 
"^DD",727.826,727.826,83,21,3,0)
record is a repair record.  The value is derived from the PROSTHETIC 
"^DD",727.826,727.826,83,21,4,0)
HCPCS File (#661.1), field (#6) NPPD NEW CODE, if the record is for a new 
"^DD",727.826,727.826,83,21,5,0)
issue.  
"^DD",727.826,727.826,83,23,0)
^.001^8^8^3071108^^
"^DD",727.826,727.826,83,23,1,0)
This field has a length of ten characters. The value is derived from the 
"^DD",727.826,727.826,83,23,2,0)
PROSTHETIC HCPCS File (#661.1), field (#5) NPPD REPAIR CODE, if the 
"^DD",727.826,727.826,83,23,3,0)
record is a repair record.  The value is derived from the PROSTHETIC 
"^DD",727.826,727.826,83,23,4,0)
HCPCS File (#661.1), field (#6) NPPD NEW CODE, if the record is for a new 
"^DD",727.826,727.826,83,23,5,0)
issue.  
"^DD",727.826,727.826,83,23,6,0)
Note:  The PROSTHETICS (PRO) EXTRACT File (#727.826) already stores 
"^DD",727.826,727.826,83,23,7,0)
whether the record is for repair or a new issue in the TYPE OF 
"^DD",727.826,727.826,83,23,8,0)
TRANSACTION field (#29).
"^DD",727.826,727.826,83,"DT")
3070502
"^DD",727.826,727.826,84,0)
NPPD ENTRY DATE^F^^2;4^K:$L(X)>8!($L(X)<1) X
"^DD",727.826,727.826,84,3)
Answer must be 1-8 characters in length.
"^DD",727.826,727.826,84,21,0)
^^3^3^3070502^
"^DD",727.826,727.826,84,21,1,0)
This field has a length of eight characters. Format equals YYYYMMDD.  The 
"^DD",727.826,727.826,84,21,2,0)
date value is retrieved from the PROSTHETICS HCPCS File (#660), field 
"^DD",727.826,727.826,84,21,3,0)
(#.01) ENTRY DATE.
"^DD",727.826,727.826,84,23,0)
^.001^3^3^3070502^^
"^DD",727.826,727.826,84,23,1,0)
This field has a length of eight characters. Format equals YYYYMMDD.  The 
"^DD",727.826,727.826,84,23,2,0)
date value is retrieved from the PROSTHETICS HCPCS File (#660), field 
"^DD",727.826,727.826,84,23,3,0)
(#.01) ENTRY DATE.
"^DD",727.826,727.826,84,"DT")
3070504
"^DD",727.826,727.826,85,0)
ASSOCIATE PC PROVIDER NPI^F^^2;5^K:$L(X)>15!($L(X)<1) X
"^DD",727.826,727.826,85,3)
Answer must be 1-15 characters in length.
"^DD",727.826,727.826,85,21,0)
^^2^2^3070502^
"^DD",727.826,727.826,85,21,1,0)
A standard unique life-long identifier of the associate primary care 
"^DD",727.826,727.826,85,21,2,0)
provider.  This field has a length of fifteen characters.
"^DD",727.826,727.826,85,23,0)
^^3^3^3070502^
"^DD",727.826,727.826,85,23,1,0)
A standard unique life-long identifier of the associate primary care 
"^DD",727.826,727.826,85,23,2,0)
provider.  This field has a length of fifteen characters. The qualified 
"^DD",727.826,727.826,85,23,3,0)
identifier is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.826,727.826,85,"DT")
3070502
"^DD",727.826,727.826,86,0)
PRIMARY CARE PROVIDER NPI^F^^2;6^K:$L(X)>15!($L(X)<1) X
"^DD",727.826,727.826,86,3)
Answer must be 1-15 characters in length.
"^DD",727.826,727.826,86,21,0)
^^2^2^3070502^
"^DD",727.826,727.826,86,21,1,0)
A standard unique life-long identifier of the primary care provider.  
"^DD",727.826,727.826,86,21,2,0)
This field has a length of fifteen characters. 
"^DD",727.826,727.826,86,23,0)
^^3^3^3070502^
"^DD",727.826,727.826,86,23,1,0)
A standard unique life-long identifier of the primary care provider.  
"^DD",727.826,727.826,86,23,2,0)
This field has a length of fifteen characters. The qualified identifier 
"^DD",727.826,727.826,86,23,3,0)
is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.826,727.826,86,"DT")
3070502
"^DD",727.827,727.827,46,0)
PLACEHOLDER^F^^1;23^K:$L(X)>8!($L(X)<1) X
"^DD",727.827,727.827,46,3)
Answer must be 1-8 characters in length.
"^DD",727.827,727.827,46,21,0)
^^1^1^3070827^
"^DD",727.827,727.827,46,21,1,0)
Currently NULL.
"^DD",727.827,727.827,46,23,0)
^^1^1^3070827^
"^DD",727.827,727.827,46,23,1,0)
Currently NULL.
"^DD",727.827,727.827,46,"DT")
3070426
"^DD",727.827,727.827,47,0)
PLACEHOLDER^F^^1;24^K:$L(X)>8!($L(X)<1) X
"^DD",727.827,727.827,47,3)
Answer must be 1-8 characters in length.
"^DD",727.827,727.827,47,21,0)
^^1^1^3070827^
"^DD",727.827,727.827,47,21,1,0)
Currently NULL.
"^DD",727.827,727.827,47,23,0)
^^1^1^3070827^
"^DD",727.827,727.827,47,23,1,0)
Currently NULL.
"^DD",727.827,727.827,47,"DT")
3070426
"^DD",727.827,727.827,58,0)
PLACEHOLDER^F^^1;35^K:$L(X)>8!($L(X)<1) X
"^DD",727.827,727.827,58,3)
Answer must be 1-8 characters in length.
"^DD",727.827,727.827,58,21,0)
^.001^1^1^3070827^^
"^DD",727.827,727.827,58,21,1,0)
Currently NULL.
"^DD",727.827,727.827,58,23,0)
^.001^1^1^3070827^^
"^DD",727.827,727.827,58,23,1,0)
Currently NULL.
"^DD",727.827,727.827,58,"DT")
3070426
"^DD",727.827,727.827,88,0)
OEF/OIF^F^^2;28^K:$L(X)>9!($L(X)<1) X
"^DD",727.827,727.827,88,3)
Answer must be 1-9 characters in length.
"^DD",727.827,727.827,88,21,0)
^^3^3^3070502^
"^DD",727.827,727.827,88,21,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.827,727.827,88,21,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.827,727.827,88,21,3,0)
reflects the OEF or OIF where this patient was in combat.
"^DD",727.827,727.827,88,23,0)
^^12^12^3070502^
"^DD",727.827,727.827,88,23,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.827,727.827,88,23,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.827,727.827,88,23,3,0)
reflects the OEF or OIF where this patient was in combat. The value of 
"^DD",727.827,727.827,88,23,4,0)
this field is derived from the LOCATION OF SERVICE field (#.01) from 
"^DD",727.827,727.827,88,23,5,0)
SERVICE [OEF OR OIF] sub-file (#2.3215) of field (#.3215) located in the 
"^DD",727.827,727.827,88,23,6,0)
PATIENT File (#2).  DSS will capture once, each location where the 
"^DD",727.827,727.827,88,23,7,0)
veteran served. In order to accommodate multiple locations, the values 
"^DD",727.827,727.827,88,23,8,0)
for this field are concatenated into this 9-character field. Possible 
"^DD",727.827,727.827,88,23,9,0)
field values are one or more combinations of the following: 
"^DD",727.827,727.827,88,23,10,0)
OEF =  Operation Enduring Freedom
"^DD",727.827,727.827,88,23,11,0)
OIF  =  Operation Iraqi Freedom
"^DD",727.827,727.827,88,23,12,0)
UNK =  Unknown OEF/OIF
"^DD",727.827,727.827,88,"DT")
3070502
"^DD",727.827,727.827,89,0)
OEF/OIF RETURN DATE^F^^2;29^K:$L(X)>8!($L(X)<1) X
"^DD",727.827,727.827,89,3)
Answer must be 1-8 characters in length.
"^DD",727.827,727.827,89,21,0)
^^2^2^3070502^
"^DD",727.827,727.827,89,21,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.827,727.827,89,21,2,0)
the end date of military pay for this OEF/OIF deployment. 
"^DD",727.827,727.827,89,23,0)
^^6^6^3070502^
"^DD",727.827,727.827,89,23,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.827,727.827,89,23,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.827,727.827,89,23,3,0)
has a format equal to YYYYMMDD.  The value of this field is derived from 
"^DD",727.827,727.827,89,23,4,0)
the OEF/OIF TO DATE field (#.03) from sub-file (#2.3215) of field 
"^DD",727.827,727.827,89,23,5,0)
(#.3215) located in the PATIENT file (#2).  In cases of multiple OEF/OIF 
"^DD",727.827,727.827,89,23,6,0)
tours, this field contains only most recent return date. 
"^DD",727.827,727.827,89,"DT")
3070502
"^DD",727.827,727.827,90,0)
ASSOCIATE PC PROVIDER NPI^F^^2;30^K:$L(X)>15!($L(X)<1) X
"^DD",727.827,727.827,90,3)
Answer must be 1-15 characters in length.
"^DD",727.827,727.827,90,21,0)
^^2^2^3070502^
"^DD",727.827,727.827,90,21,1,0)
A standard unique life-long identifier of the associate primary care 
"^DD",727.827,727.827,90,21,2,0)
provider. This field has a length of fifteen characters.
"^DD",727.827,727.827,90,23,0)
^^3^3^3070502^
"^DD",727.827,727.827,90,23,1,0)
A standard unique life-long identifier of the associate primary care 
"^DD",727.827,727.827,90,23,2,0)
provider. This field has a length of fifteen characters.   The qualified 
"^DD",727.827,727.827,90,23,3,0)
identifier is retrieved via the supporting Kernel API: $$NPI^XUSNPI. 
"^DD",727.827,727.827,90,"DT")
3070502
"^DD",727.827,727.827,91,0)
PRIMARY CARE PROVIDER NPI^F^^2;31^K:$L(X)>15!($L(X)<1) X
"^DD",727.827,727.827,91,3)
Answer must be 1-15 characters in length.
"^DD",727.827,727.827,91,21,0)
^^2^2^3070502^
"^DD",727.827,727.827,91,21,1,0)
A standard unique life-long identifier of the primary care provider. This 
"^DD",727.827,727.827,91,21,2,0)
field has a length of fifteen characters.
"^DD",727.827,727.827,91,23,0)
^^3^3^3070502^
"^DD",727.827,727.827,91,23,1,0)
A standard unique life-long identifier of the primary care provider. This 
"^DD",727.827,727.827,91,23,2,0)
field has a length of fifteen characters.  The qualified identifier is 
"^DD",727.827,727.827,91,23,3,0)
retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.827,727.827,91,"DT")
3070502
"^DD",727.827,727.827,92,0)
PROVIDER NPI^F^^2;32^K:$L(X)>15!($L(X)<1) X
"^DD",727.827,727.827,92,3)
Answer must be 1-15 characters in length.
"^DD",727.827,727.827,92,21,0)
^^2^2^3070502^
"^DD",727.827,727.827,92,21,1,0)
A standard unique life-long identifier of the individuals providing 
"^DD",727.827,727.827,92,21,2,0)
health care services. This field has a length of fifteen characters.
"^DD",727.827,727.827,92,23,0)
^^4^4^3070502^
"^DD",727.827,727.827,92,23,1,0)
A standard unique life-long identifier of the individuals providing 
"^DD",727.827,727.827,92,23,2,0)
health care services. This field has a length of fifteen characters.  The 
"^DD",727.827,727.827,92,23,3,0)
qualified identifier is retrieved via the supporting Kernel API: 
"^DD",727.827,727.827,92,23,4,0)
$$NPI^XUSNPI.
"^DD",727.827,727.827,92,"DT")
3070502
"^DD",727.829,727.829,23,0)
UNIT MODIFIED^S^Y:YES;N:NO;^0;24^Q
"^DD",727.829,727.829,23,3)
Answer must be "Y" or "N".
"^DD",727.829,727.829,23,21,0)
^.001^2^2^3060914^^
"^DD",727.829,727.829,23,21,1,0)
The value for this field is Y or N depending on whether there is a 
"^DD",727.829,727.829,23,21,2,0)
value in the UNIT MODIFICATION field (#24).
"^DD",727.829,727.829,23,23,0)
^.001^4^4^3060914^^
"^DD",727.829,727.829,23,23,1,0)
The value for this field is determined from the UNIT MODIFICATION field
"^DD",727.829,727.829,23,23,2,0)
(#24).
"^DD",727.829,727.829,23,23,3,0)
    If UNIT MODIFICATION has a value then UNIT MODIFIED="Y"
"^DD",727.829,727.829,23,23,4,0)
    If UNIT MODIFICATION has no value then UNIT MODIFIED="N"
"^DD",727.829,727.829,23,"DT")
3060515
"^DD",727.829,727.829,24,0)
UNIT MODIFICATION^F^^0;25^K:$L(X)>6!($L(X)<1) X
"^DD",727.829,727.829,24,3)
Answer must be 1-6 characters in length.
"^DD",727.829,727.829,24,21,0)
^.001^2^2^3060630^^
"^DD",727.829,727.829,24,21,1,0)
This field is used to indicate whether the product(s) will be divided
"^DD",727.829,727.829,24,21,2,0)
units or a pool.
"^DD",727.829,727.829,24,23,0)
^^13^13^3060719^
"^DD",727.829,727.829,24,23,1,0)
This field is a combination of values retrieved from the MODIFICATION
"^DD",727.829,727.829,24,23,2,0)
CRITERIA field (#.06) and MODIFY TO field (#3), subfile (#66.03), taken
"^DD",727.829,727.829,24,23,3,0)
from the BLOOD PRODUCT file (#66). The value has a maximum length of six
"^DD",727.829,727.829,24,23,4,0)
characters and consist of:
"^DD",727.829,727.829,24,23,5,0)
   D = DIVIDED
"^DD",727.829,727.829,24,23,6,0)
   P = POOLED
"^DD",727.829,727.829,24,23,7,0)
   W = WASHED
"^DD",727.829,727.829,24,23,8,0)
   F = FROZEN
"^DD",727.829,727.829,24,23,9,0)
   L = LEUKOCYTE POOR
"^DD",727.829,727.829,24,23,10,0)
   R = REJUVENATED
"^DD",727.829,727.829,24,23,11,0)
   G = DEGLYCEROLIZED
"^DD",727.829,727.829,24,23,12,0)
   I = IRRADIATED
"^DD",727.829,727.829,24,23,13,0)
   S = SEPARATED
"^DD",727.829,727.829,24,"DT")
3060630
"^DD",727.829,727.829,28,0)
ORDERING PROVIDER NPI^F^^0;29^K:$L(X)>15!($L(X)<1) X
"^DD",727.829,727.829,28,3)
Answer must be 1-15 characters in length.
"^DD",727.829,727.829,28,21,0)
^^2^2^3070504^
"^DD",727.829,727.829,28,21,1,0)
A standard unique life-long identifier of the provider who ordered the 
"^DD",727.829,727.829,28,21,2,0)
type and cross match.  This field has a length of fifteen characters. 
"^DD",727.829,727.829,28,23,0)
^.001^3^3^3070504^^
"^DD",727.829,727.829,28,23,1,0)
ORDERING PROVIDER NPI is a standard unique life-long identifier of the 
"^DD",727.829,727.829,28,23,2,0)
provider who ordered the type and cross match. The qualified identifier
"^DD",727.829,727.829,28,23,3,0)
shall be retrieved via the supporting Kernel API:$$NPI^XUSNPI.
"^DD",727.829,727.829,28,"DT")
3070504
"^DD",727.829,727.829,29,0)
REQUESTING PROVIDER NPI^F^^1;1^K:$L(X)>15!($L(X)<1) X
"^DD",727.829,727.829,29,3)
Answer must be 1-15 characters in length.
"^DD",727.829,727.829,29,21,0)
^^2^2^3070504^
"^DD",727.829,727.829,29,21,1,0)
A standard unique life-long identifier of the provider who requested the 
"^DD",727.829,727.829,29,21,2,0)
transfusion.  This field has a length of fifteen characters. 
"^DD",727.829,727.829,29,23,0)
^.001^3^3^3070504^^
"^DD",727.829,727.829,29,23,1,0)
REQUESTING PROVIDER NPI is a standard unique life-long identifier of the 
"^DD",727.829,727.829,29,23,2,0)
provider who requested the transfusion.  The qualified identifier shall 
"^DD",727.829,727.829,29,23,3,0)
be retrieved via the supporting Kernel API:$$NPI^XUSNPI.
"^DD",727.829,727.829,29,"DT")
3070504
"^DD",727.832,727.832,50,0)
DELIVERY FEEDER LOCATION^F^^1;11^K:$L(X)>10!($L(X)<1) X
"^DD",727.832,727.832,50,3)
Answer must be 1-10 characters in length.
"^DD",727.832,727.832,50,21,0)
^^14^14^3070511^
"^DD",727.832,727.832,50,21,1,0)
Product Quantity - For Tube Feedings, the collection of GM is allowed in 
"^DD",727.832,727.832,50,21,2,0)
addition to ML.  There are two source fields for this QUANTITY 
"^DD",727.832,727.832,50,21,3,0)
information. For Tube Feedings with grams use the QUANTITY field; for 
"^DD",727.832,727.832,50,21,4,0)
Tube Feeding liquid use PRODUCT ML'S/ DAY field.
"^DD",727.832,727.832,50,21,5,0)
 
"^DD",727.832,727.832,50,21,6,0)
Outpatient - If outpatient tube feeding is present (#115.16.19), and 
"^DD",727.832,727.832,50,21,7,0)
QUANTITY in (#115.16.19.2) is populated and contains 'GM' then use this 
"^DD",727.832,727.832,50,21,8,0)
value. Otherwise fill with value from PRODUCT ML'S/DAY (#115.16.19.3) and 
"^DD",727.832,727.832,50,21,9,0)
if null fill with "1" (one). 
"^DD",727.832,727.832,50,21,10,0)
 
"^DD",727.832,727.832,50,21,11,0)
Inpatient - If TUBE FEEDING (#115.1.40) is present, and QUANTITY in 
"^DD",727.832,727.832,50,21,12,0)
(#115.1.40.3.2) is populated and contains 'GM' then use this value. 
"^DD",727.832,727.832,50,21,13,0)
Otherwise fill with value from PRODUCT ML'S/DAY field (#115.1.40.3.3) and 
"^DD",727.832,727.832,50,21,14,0)
if null fill with "1" (one).  
"^DD",727.832,727.832,50,23,0)
^^14^14^3070511^
"^DD",727.832,727.832,50,23,1,0)
Product Quantity - For Tube Feedings, the collection of GM is allowed in 
"^DD",727.832,727.832,50,23,2,0)
addition to ML.  There are two source fields for this QUANTITY 
"^DD",727.832,727.832,50,23,3,0)
information. For Tube Feedings with grams use the QUANTITY field; for 
"^DD",727.832,727.832,50,23,4,0)
Tube Feeding liquid use PRODUCT ML'S/ DAY field.
"^DD",727.832,727.832,50,23,5,0)
 
"^DD",727.832,727.832,50,23,6,0)
Outpatient - If outpatient tube feeding is present (#115.16.19), and 
"^DD",727.832,727.832,50,23,7,0)
QUANTITY in (#115.16.19.2) is populated and contains 'GM' then use this 
"^DD",727.832,727.832,50,23,8,0)
value. Otherwise fill with value from PRODUCT ML'S/DAY (#115.16.19.3) and 
"^DD",727.832,727.832,50,23,9,0)
if null fill with "1" (one). 
"^DD",727.832,727.832,50,23,10,0)
 
"^DD",727.832,727.832,50,23,11,0)
Inpatient - If TUBE FEEDING (#115.1.40) is present, and QUANTITY in 
"^DD",727.832,727.832,50,23,12,0)
(#115.1.40.3.2) is populated and contains 'GM' then use this value. 
"^DD",727.832,727.832,50,23,13,0)
Otherwise fill with value from PRODUCT ML'S/DAY field (#115.1.40.3.3) and 
"^DD",727.832,727.832,50,23,14,0)
if null fill with "1" (one).  
"^DD",727.832,727.832,50,"DT")
3060504
"^DD",727.832,727.832,51,0)
QUANTITY^F^^1;12^K:$L(X)>4!($L(X)<1) X
"^DD",727.832,727.832,51,3)
Answer must be 1-4 characters in length.
"^DD",727.832,727.832,51,21,0)
^^20^20^3070511^
"^DD",727.832,727.832,51,21,1,0)
The logic for the DELIVERY FEEDER LOCATION, VistA field (#50)/DSS field 
"^DD",727.832,727.832,51,21,2,0)
(#48), which is located on the NUTRITION (NUT) EXTRACT file (#727.832), 
"^DD",727.832,727.832,51,21,3,0)
shall be modified for DELIVERY LOCATION TYPEs = 'T' or 'D'.  The patient 
"^DD",727.832,727.832,51,21,4,0)
location where the product was delivered depends upon the value in the 
"^DD",727.832,727.832,51,21,5,0)
DELIVERY LOCATION TYPE field.  The ASSOCIATED MAS WARD and  ASSOCIATED 
"^DD",727.832,727.832,51,21,6,0)
HOSPITAL LOCATION fields shall be used in the logic for determining the 
"^DD",727.832,727.832,51,21,7,0)
value for this field.
"^DD",727.832,727.832,51,21,8,0)
 
"^DD",727.832,727.832,51,21,9,0)
If the DELIVERY LOCATION TYPE = "T" or "D" for inpatients, the DIETETIC 
"^DD",727.832,727.832,51,21,10,0)
WARD (#115.1.13) shall be used to point to the ASSOCIATED MAS WARD (#2.5) 
"^DD",727.832,727.832,51,21,11,0)
multiple (#119.63) in the  NUTRITION LOCATION file (#119.6) which includes
"^DD",727.832,727.832,51,21,12,0)
the ASSOCIATED MAS WARD sub-field (#.01). The .01 field is a pointer to
"^DD",727.832,727.832,51,21,13,0)
the HOSPITAL LOCATION FILE POINTER  field (#44) in the WARD LOCATION file
"^DD",727.832,727.832,51,21,14,0)
(#42),which is a pointer to  HOSPITAL LOCATION file (#44).
"^DD",727.832,727.832,51,21,15,0)
 
"^DD",727.832,727.832,51,21,16,0)
If the DELIVERY LOCATION TYPE = "T" or "D" for outpatients, the DIETETIC 
"^DD",727.832,727.832,51,21,17,0)
WARD (#115.1.13) shall be used to point to the ASSOCIATED HOSPITAL 
"^DD",727.832,727.832,51,21,18,0)
LOCATION (#2.6)  multiple (#119.64) in the NUTRITION LOCATION file 
"^DD",727.832,727.832,51,21,19,0)
(#119.6) which includes the   ASSOCIATED HOSPITAL LOCATION sub-field 
"^DD",727.832,727.832,51,21,20,0)
(#.01). The .01 field is pointer  to the  HOSPITAL LOCATION file (#44).   
"^DD",727.832,727.832,51,23,0)
^.001^19^19^3070511^^
"^DD",727.832,727.832,51,23,1,0)
The logic for the DELIVERY FEEDER LOCATION, VistA field (#50)/DSS field 
"^DD",727.832,727.832,51,23,2,0)
(#48), which is located on the NUTRITION (NUT) EXTRACT file (#727.832), 
"^DD",727.832,727.832,51,23,3,0)
shall be modified for DELIVERY LOCATION TYPEs = 'T' or 'D'.  The patient 
"^DD",727.832,727.832,51,23,4,0)
location where the product was delivered depends upon the value in the 
"^DD",727.832,727.832,51,23,5,0)
DELIVERY LOCATION TYPE field.  The ASSOCIATED MAS WARD and  ASSOCIATED 
"^DD",727.832,727.832,51,23,6,0)
HOSPITAL LOCATION fields shall be used in the logic for determining the 
"^DD",727.832,727.832,51,23,7,0)
value for this field.
"^DD",727.832,727.832,51,23,8,0)
If the DELIVERY LOCATION TYPE = "T" or "D" for inpatients, the DIETETIC 
"^DD",727.832,727.832,51,23,9,0)
WARD (#115.1.13) shall be used to point to the ASSOCIATED MAS WARD (#2.5) 
"^DD",727.832,727.832,51,23,10,0)
multiple (#119.63)                    in the  NUTRITION LOCATION file 
"^DD",727.832,727.832,51,23,11,0)
(#119.6) which includes the ASSOCIATED MAS WARD sub-field (#.01). The .01 
"^DD",727.832,727.832,51,23,12,0)
field is a pointer to the HOSPITAL LOCATION FILE POINTER  field (#44) in 
"^DD",727.832,727.832,51,23,13,0)
the WARD LOCATION file (#42),which is a pointer to  HOSPITAL LOCATION 
"^DD",727.832,727.832,51,23,14,0)
file (#44). 
"^DD",727.832,727.832,51,23,15,0)
If the DELIVERY LOCATION TYPE = "T" or "D" for outpatients, the DIETETIC 
"^DD",727.832,727.832,51,23,16,0)
WARD (#115.1.13) shall be used to point to the ASSOCIATED HOSPITAL 
"^DD",727.832,727.832,51,23,17,0)
LOCATION (#2.6)  multiple (#119.64) in the NUTRITION LOCATION file 
"^DD",727.832,727.832,51,23,18,0)
(#119.6) which includes the   ASSOCIATED HOSPITAL LOCATION sub-field 
"^DD",727.832,727.832,51,23,19,0)
(#.01). The .01 field is pointer  to the  HOSPITAL LOCATION file (#44).   
"^DD",727.832,727.832,51,"DT")
3060504
"^DD",727.832,727.832,59,0)
OEF/OIF^F^^1;20^K:$L(X)>9!($L(X)<1) X
"^DD",727.832,727.832,59,3)
Answer must be 1-9 characters in length.
"^DD",727.832,727.832,59,21,0)
^^3^3^3070502^
"^DD",727.832,727.832,59,21,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.832,727.832,59,21,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.832,727.832,59,21,3,0)
reflects the OEF or OIF where this patient was in combat. 
"^DD",727.832,727.832,59,23,0)
^^12^12^3070502^
"^DD",727.832,727.832,59,23,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.832,727.832,59,23,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.832,727.832,59,23,3,0)
reflects the OEF or OIF where this patient was in combat.  The value of 
"^DD",727.832,727.832,59,23,4,0)
this field is derived from the LOCATION OF SERVICE field (#.01) from 
"^DD",727.832,727.832,59,23,5,0)
SERVICE [OEF OR OIF] sub-file (#2.3215) of field (#.3215) located in the 
"^DD",727.832,727.832,59,23,6,0)
PATIENT File (#2).  DSS will capture once, each location where the 
"^DD",727.832,727.832,59,23,7,0)
veteran served. In order to accommodate multiple locations, the values 
"^DD",727.832,727.832,59,23,8,0)
for this field are concatenated into this 9-character field. Possible 
"^DD",727.832,727.832,59,23,9,0)
field values are one or more combinations of the following: 
"^DD",727.832,727.832,59,23,10,0)
OEF =  Operation Enduring Freedom
"^DD",727.832,727.832,59,23,11,0)
OIF  =  Operation Iraqi Freedom
"^DD",727.832,727.832,59,23,12,0)
UNK =  Unknown OEF/OIF
"^DD",727.832,727.832,59,"DT")
3070502
"^DD",727.832,727.832,60,0)
OEF/OIF RETURN DATE^F^^1;21^K:$L(X)>8!($L(X)<1) X
"^DD",727.832,727.832,60,3)
Answer must be 1-8 characters in length.
"^DD",727.832,727.832,60,21,0)
^^3^3^3070502^
"^DD",727.832,727.832,60,21,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.832,727.832,60,21,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.832,727.832,60,21,3,0)
has a format equal to YYYYMMDD.
"^DD",727.832,727.832,60,23,0)
^^6^6^3070502^
"^DD",727.832,727.832,60,23,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.832,727.832,60,23,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.832,727.832,60,23,3,0)
has a format equal to YYYYMMDD.  The value of this field is derived from 
"^DD",727.832,727.832,60,23,4,0)
the OEF/OIF TO DATE field (#.03) from sub-file (#2.3215) of field 
"^DD",727.832,727.832,60,23,5,0)
(#.3215) located in the PATIENT file (#2).  In cases of multiple OEF/OIF 
"^DD",727.832,727.832,60,23,6,0)
tours, this field contains only most recent return date. 
"^DD",727.832,727.832,60,"DT")
3070502
"^DD",727.832,727.832,61,0)
TF UNITS^F^^1;22^K:$L(X)>2!($L(X)<1) X
"^DD",727.832,727.832,61,3)
Answer must be 1-2 characters in length.
"^DD",727.832,727.832,61,21,0)
^^9^9^3070502^
"^DD",727.832,727.832,61,21,1,0)
This field has a length of  two characters.  If this record is for a tube 
"^DD",727.832,727.832,61,21,2,0)
feeding and if the value in the NUT Extract QUANTITY VistA field 
"^DD",727.832,727.832,61,21,3,0)
(#51)/DSS field (#49) is from the QUANTITY field from (#115.1.40.3), then 
"^DD",727.832,727.832,61,21,4,0)
the value for this field is GM.  Otherwise, a check is made to validate 
"^DD",727.832,727.832,61,21,5,0)
that the record is a tube feeding; and, if it is, the value for this 
"^DD",727.832,727.832,61,21,6,0)
field is ML.  Possible field values are:
"^DD",727.832,727.832,61,21,7,0)
GM
"^DD",727.832,727.832,61,21,8,0)
ML 
"^DD",727.832,727.832,61,21,9,0)
Null
"^DD",727.832,727.832,61,23,0)
^^9^9^3070502^
"^DD",727.832,727.832,61,23,1,0)
This field has a length of  two characters.  If this record is for a tube 
"^DD",727.832,727.832,61,23,2,0)
feeding and if the value in the NUT Extract QUANTITY VistA field 
"^DD",727.832,727.832,61,23,3,0)
(#51)/DSS field (#49) is from the QUANTITY field from (#115.1.40.3), then 
"^DD",727.832,727.832,61,23,4,0)
the value for this field is GM.  Otherwise, a check is made to validate 
"^DD",727.832,727.832,61,23,5,0)
that the record is a tube feeding; and, if it is, the value for this 
"^DD",727.832,727.832,61,23,6,0)
field is ML.  Possible field values are:
"^DD",727.832,727.832,61,23,7,0)
GM
"^DD",727.832,727.832,61,23,8,0)
ML 
"^DD",727.832,727.832,61,23,9,0)
Null
"^DD",727.832,727.832,61,"DT")
3070502
"^DD",727.832,727.832,62,0)
ORDERING PROVIDER NPI^F^^1;23^K:$L(X)>15!($L(X)<1) X
"^DD",727.832,727.832,62,3)
Answer must be 1-15 characters in length.
"^DD",727.832,727.832,62,21,0)
^^3^3^3070502^
"^DD",727.832,727.832,62,21,1,0)
A standard unique life-long identifier of the ordering provider who 
"^DD",727.832,727.832,62,21,2,0)
ordered the patient feeding.  This field has a length of fifteen 
"^DD",727.832,727.832,62,21,3,0)
characters. 
"^DD",727.832,727.832,62,23,0)
^^4^4^3070502^
"^DD",727.832,727.832,62,23,1,0)
A standard unique life-long identifier of the ordering provider who 
"^DD",727.832,727.832,62,23,2,0)
ordered the patient feeding.  This field has a length of fifteen 
"^DD",727.832,727.832,62,23,3,0)
characters.  The qualified identifier is retrieved via the supporting 
"^DD",727.832,727.832,62,23,4,0)
Kernel API: $$NPI^XUSNPI.
"^DD",727.832,727.832,62,"DT")
3070502
"^DD",727.832,727.832,63,0)
PRIMARY CARE PROVIDER NPI^F^^1;24^K:$L(X)>15!($L(X)<1) X
"^DD",727.832,727.832,63,3)
Answer must be 1-15 characters in length.
"^DD",727.832,727.832,63,21,0)
^^2^2^3070827^
"^DD",727.832,727.832,63,21,1,0)
A standard unique life-long identifier of the primary care provider. This 
"^DD",727.832,727.832,63,21,2,0)
field has a length of fifteen characters.
"^DD",727.832,727.832,63,23,0)
^^3^3^3070827^
"^DD",727.832,727.832,63,23,1,0)
A standard unique life-long identifier of the primary care provider. This 
"^DD",727.832,727.832,63,23,2,0)
field has a length of fifteen characters.  The qualified identifier is 
"^DD",727.832,727.832,63,23,3,0)
retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.832,727.832,63,"DT")
3070827
"^DIC",727.1,727.1,0)
EXTRACT DEFINITIONS^1
"^DIC",727.1,727.1,0,"GL")
^ECX(727.1,
"^DIC",727.1,727.1,"%D",0)
^^6^6^2990914^^^^
"^DIC",727.1,727.1,"%D",1,0)
This file provides a mechanism for sites to tailor the running of
"^DIC",727.1,727.1,"%D",2,0)
package extracts by defining the frequency (daily, weekly, or monthly)
"^DIC",727.1,727.1,"%D",3,0)
with which the extracts will run and the number of days in the past
"^DIC",727.1,727.1,"%D",4,0)
for which data will be extracted.  The EXTRACT NAME field (#.01) and
"^DIC",727.1,727.1,"%D",5,0)
the FILE NUMBER field (#1) are national standard entries, exported with
"^DIC",727.1,727.1,"%D",6,0)
the file, and should not be edited locally.
"^DIC",727.1,"B","EXTRACT DEFINITIONS",727.1)

"BLD",7002,6)
^99
**END**
**END**
