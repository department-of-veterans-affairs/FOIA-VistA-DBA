Released XU*8*420 SEQ #343
Extracted from mail message
**KIDS**:XU*8.0*420^

**INSTALL NAME**
XU*8.0*420
"BLD",941,0)
XU*8.0*420^KERNEL^0^3060726^y
"BLD",941,1,0)
^^1^1^3060726^^^^
"BLD",941,1,1,0)
XU*8*420 - Please refer to the patch description in FORUM for details
"BLD",941,4,0)
^9.64PA^200^2
"BLD",941,4,4,0)
4
"BLD",941,4,4,2,0)
^9.641^4.042^2
"BLD",941,4,4,2,4,0)
INSTITUTION  (File-top level)
"BLD",941,4,4,2,4,1,0)
^9.6411^41.99^1
"BLD",941,4,4,2,4,1,41.99,0)
NPI
"BLD",941,4,4,2,4.042,0)
EFFECTIVE DATE/TIME  (sub-file)
"BLD",941,4,4,2,4.042,1,0)
^9.6411^^
"BLD",941,4,4,222)
y^n^p^^^^n^^n
"BLD",941,4,4,224)

"BLD",941,4,200,0)
200
"BLD",941,4,200,2,0)
^9.641^200.042^2
"BLD",941,4,200,2,200,0)
NEW PERSON  (File-top level)
"BLD",941,4,200,2,200,1,0)
^9.6411^41.98^2
"BLD",941,4,200,2,200,1,41.98,0)
NPI ENTRY STATUS
"BLD",941,4,200,2,200,1,41.99,0)
NPI
"BLD",941,4,200,2,200.042,0)
EFFECTIVE DATE/TIME  (sub-file)
"BLD",941,4,200,2,200.042,1,0)
^9.6411^^
"BLD",941,4,200,222)
y^n^p^^^^n^^n
"BLD",941,4,200,224)

"BLD",941,4,"APDD",4,4)

"BLD",941,4,"APDD",4,4,41.99)

"BLD",941,4,"APDD",4,4.042)

"BLD",941,4,"APDD",200,200)

"BLD",941,4,"APDD",200,200,41.98)

"BLD",941,4,"APDD",200,200,41.99)

"BLD",941,4,"APDD",200,200.042)

"BLD",941,4,"B",4,4)

"BLD",941,4,"B",200,200)

"BLD",941,6.3)
20
"BLD",941,"INIT")
POST^XU8P420
"BLD",941,"KRN",0)
^9.67PA^8989.52^19
"BLD",941,"KRN",.4,0)
.4
"BLD",941,"KRN",.401,0)
.401
"BLD",941,"KRN",.402,0)
.402
"BLD",941,"KRN",.403,0)
.403
"BLD",941,"KRN",.5,0)
.5
"BLD",941,"KRN",.84,0)
.84
"BLD",941,"KRN",3.6,0)
3.6
"BLD",941,"KRN",3.8,0)
3.8
"BLD",941,"KRN",9.2,0)
9.2
"BLD",941,"KRN",9.8,0)
9.8
"BLD",941,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",941,"KRN",9.8,"NM",1,0)
XU8P420^^0^B3428730
"BLD",941,"KRN",9.8,"NM",2,0)
XUSNPIE1^^0^B89054280
"BLD",941,"KRN",9.8,"NM",3,0)
XUSNPIED^^0^B59937422
"BLD",941,"KRN",9.8,"NM",4,0)
XUSNPIDA^^0^B45390858
"BLD",941,"KRN",9.8,"NM",5,0)
XUSNPIUT^^0^B18048162
"BLD",941,"KRN",9.8,"NM","B","XU8P420",1)

"BLD",941,"KRN",9.8,"NM","B","XUSNPIDA",4)

"BLD",941,"KRN",9.8,"NM","B","XUSNPIE1",2)

"BLD",941,"KRN",9.8,"NM","B","XUSNPIED",3)

"BLD",941,"KRN",9.8,"NM","B","XUSNPIUT",5)

"BLD",941,"KRN",19,0)
19
"BLD",941,"KRN",19,"NM",0)
^9.68A^7^7
"BLD",941,"KRN",19,"NM",1,0)
XUS NPI CBO LIST^^0
"BLD",941,"KRN",19,"NM",2,0)
XUS NPI PROVIDER SELF ENTRY^^0
"BLD",941,"KRN",19,"NM",3,0)
XUS NPI ENTER NPI FOR PROVIDER^^0
"BLD",941,"KRN",19,"NM",4,0)
XUS NPI EXEMPT PROVIDER^^0
"BLD",941,"KRN",19,"NM",5,0)
XUS NPI LOCAL REPORTS^^0
"BLD",941,"KRN",19,"NM",6,0)
XUS NPI MENU^^0
"BLD",941,"KRN",19,"NM",7,0)
XUS NPI SIGNON CHECK^^0
"BLD",941,"KRN",19,"NM","B","XUS NPI CBO LIST",1)

"BLD",941,"KRN",19,"NM","B","XUS NPI ENTER NPI FOR PROVIDER",3)

"BLD",941,"KRN",19,"NM","B","XUS NPI EXEMPT PROVIDER",4)

"BLD",941,"KRN",19,"NM","B","XUS NPI LOCAL REPORTS",5)

"BLD",941,"KRN",19,"NM","B","XUS NPI MENU",6)

"BLD",941,"KRN",19,"NM","B","XUS NPI PROVIDER SELF ENTRY",2)

"BLD",941,"KRN",19,"NM","B","XUS NPI SIGNON CHECK",7)

"BLD",941,"KRN",19.1,0)
19.1
"BLD",941,"KRN",101,0)
101
"BLD",941,"KRN",409.61,0)
409.61
"BLD",941,"KRN",771,0)
771
"BLD",941,"KRN",870,0)
870
"BLD",941,"KRN",8989.51,0)
8989.51
"BLD",941,"KRN",8989.51,"NM",0)
^9.68A^1^1
"BLD",941,"KRN",8989.51,"NM",1,0)
XUSNPI QUALIFIED IDENTIFIER^^0
"BLD",941,"KRN",8989.51,"NM","B","XUSNPI QUALIFIED IDENTIFIER",1)

"BLD",941,"KRN",8989.52,0)
8989.52
"BLD",941,"KRN",8994,0)
8994
"BLD",941,"KRN","B",.4,.4)

"BLD",941,"KRN","B",.401,.401)

"BLD",941,"KRN","B",.402,.402)

"BLD",941,"KRN","B",.403,.403)

"BLD",941,"KRN","B",.5,.5)

"BLD",941,"KRN","B",.84,.84)

"BLD",941,"KRN","B",3.6,3.6)

"BLD",941,"KRN","B",3.8,3.8)

"BLD",941,"KRN","B",9.2,9.2)

"BLD",941,"KRN","B",9.8,9.8)

"BLD",941,"KRN","B",19,19)

"BLD",941,"KRN","B",19.1,19.1)

"BLD",941,"KRN","B",101,101)

"BLD",941,"KRN","B",409.61,409.61)

"BLD",941,"KRN","B",771,771)

"BLD",941,"KRN","B",870,870)

"BLD",941,"KRN","B",8989.51,8989.51)

"BLD",941,"KRN","B",8989.52,8989.52)

"BLD",941,"KRN","B",8994,8994)

"BLD",941,"QUES",0)
^9.62^^
"BLD",941,"REQB",0)
^9.611^^
"FIA",4)
INSTITUTION
"FIA",4,0)
^DIC(4,
"FIA",4,0,0)
4I
"FIA",4,0,1)
y^n^p^^^^n^^n
"FIA",4,0,10)

"FIA",4,0,11)

"FIA",4,0,"RLRO")

"FIA",4,0,"VR")
8.0^XU
"FIA",4,4)
1
"FIA",4,4,41.99)

"FIA",4,4,42)

"FIA",4,4.042)
0
"FIA",200)
NEW PERSON
"FIA",200,0)
^VA(200,
"FIA",200,0,0)
200I
"FIA",200,0,1)
y^n^p^^^^n^^n
"FIA",200,0,10)

"FIA",200,0,11)

"FIA",200,0,"RLRO")

"FIA",200,0,"VR")
8.0^XU
"FIA",200,200)
1
"FIA",200,200,41.98)

"FIA",200,200,41.99)

"FIA",200,200,42)

"FIA",200,200.042)
0
"INIT")
POST^XU8P420
"KRN",19,1223,-1)
0^7
"KRN",19,1223,0)
XUS NPI SIGNON CHECK^NPI Signon Check^^A^^^^^^^^KERNEL^^1
"KRN",19,1223,1,0)
^19.06^3^3^3060511^^^^
"KRN",19,1223,1,1,0)
This option is used to check at a user's signon whether the user needs to 
"KRN",19,1223,1,2,0)
enter an NPI value.  If so, a message to that effect is displayed to the 
"KRN",19,1223,1,3,0)
user.
"KRN",19,1223,20)
D SIGNON^XUSNPIED
"KRN",19,1223,"U")
NPI SIGNON CHECK
"KRN",19,1224,-1)
0^1
"KRN",19,1224,0)
XUS NPI CBO LIST^List of NPI data for CBO^^R^^^^^^^^KERNEL
"KRN",19,1224,1,0)
^^2^2^3060508^
"KRN",19,1224,1,1,0)
This is a list of providers related to the NPI roll out.  This list is 
"KRN",19,1224,1,2,0)
sent to the CBO on a monthly basis for tracking status of the roll out.
"KRN",19,1224,25)
CBOLIST^XUSNPIED
"KRN",19,1224,"U")
LIST OF NPI DATA FOR CBO
"KRN",19,1225,-1)
0^6
"KRN",19,1225,0)
XUS NPI MENU^NPI (National Provider ID) Menu^^M^^^^^^^^KERNEL
"KRN",19,1225,1,0)
^19.06^2^2^3060505^^
"KRN",19,1225,1,1,0)
This menu provides the ability to enter data for a provider related to 
"KRN",19,1225,1,2,0)
the National Provider ID.
"KRN",19,1225,10,0)
^19.01IP^3^3
"KRN",19,1225,10,1,0)
1227
"KRN",19,1225,10,1,"^")
XUS NPI ENTER NPI FOR PROVIDER
"KRN",19,1225,10,2,0)
1228
"KRN",19,1225,10,2,"^")
XUS NPI EXEMPT PROVIDER
"KRN",19,1225,10,3,0)
1226
"KRN",19,1225,10,3,"^")
XUS NPI LOCAL REPORTS
"KRN",19,1225,99)
60452,40784
"KRN",19,1225,99.1)
60390,56967
"KRN",19,1225,"U")
NPI (NATIONAL PROVIDER ID) MEN
"KRN",19,1226,-1)
0^5
"KRN",19,1226,0)
XUS NPI LOCAL REPORTS^Print Local NPI Reports^^R^^^^^^^^KERNEL
"KRN",19,1226,1,0)
^^2^2^3060505^
"KRN",19,1226,1,1,0)
This option is used to generate reports for the local facility on those 
"KRN",19,1226,1,2,0)
who are expected to have NPI values entered.
"KRN",19,1226,25)
PRINTOPT^XUSNPIED
"KRN",19,1226,"U")
PRINT LOCAL NPI REPORTS
"KRN",19,1227,-1)
0^3
"KRN",19,1227,0)
XUS NPI ENTER NPI FOR PROVIDER^Enter NPI values for Providers^^R^^^^^^^^KERNEL
"KRN",19,1227,1,0)
^19.06^2^2^3060508^^
"KRN",19,1227,1,1,0)
This option is intended for support staff to be able to enter data 
"KRN",19,1227,1,2,0)
related to an NPI value for providers.
"KRN",19,1227,25)
CLEREDIT^XUSNPIED
"KRN",19,1227,"U")
ENTER NPI VALUES FOR PROVIDERS
"KRN",19,1228,-1)
0^4
"KRN",19,1228,0)
XUS NPI EXEMPT PROVIDER^Mark/Unmark Provider Exempt from requiring an NPI^^R^^^^^^^^KERNEL
"KRN",19,1228,1,0)
^^4^4^3060505^
"KRN",19,1228,1,1,0)
This option is used by support staff to indicate that a provider who has 
"KRN",19,1228,1,2,0)
a Person Class entry relating to a taxonomy value that would normally 
"KRN",19,1228,1,3,0)
require and NPI value, as not needing one (e.g., if the provider were 
"KRN",19,1228,1,4,0)
doing administrative work full time).
"KRN",19,1228,25)
CLERXMPT^XUSNPIED
"KRN",19,1228,"U")
MARK/UNMARK PROVIDER EXEMPT FR
"KRN",19,1229,-1)
0^2
"KRN",19,1229,0)
XUS NPI PROVIDER SELF ENTRY^PROVIDER NPI SELF ENTRY^^R^^^^^^^^KERNEL
"KRN",19,1229,1,0)
^^4^4^3060508^
"KRN",19,1229,1,1,0)
This option provides the ability for a Provider to enter his/her own NPI 
"KRN",19,1229,1,2,0)
value and effective date.  It is intended to be attached to the XU COMMON 
"KRN",19,1229,1,3,0)
menu and checks for whether the user selecting it has the need to enter 
"KRN",19,1229,1,4,0)
an NPI value.
"KRN",19,1229,25)
USEREDIT^XUSNPIED
"KRN",19,1229,"U")
PROVIDER NPI SELF ENTRY
"KRN",8989.51,239,-1)
0^1
"KRN",8989.51,239,0)
XUSNPI QUALIFIED IDENTIFIER^NPI QUALIFIED IDENTIFIER^1^ID^^0
"KRN",8989.51,239,1)
F
"KRN",8989.51,239,6)
F
"KRN",8989.51,239,20,0)
^^1^1^3060329^
"KRN",8989.51,239,20,1,0)
This is a mapping of NPI ID name to the files that hold the data.
"KRN",8989.51,239,30,0)
^8989.513I^1^1
"KRN",8989.51,239,30,1,0)
1^9.4
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3051215^2970507^.5
"PKG",3,22,1,"PAH",1,0)
420^3060726
"PKG",3,22,1,"PAH",1,1,0)
^^1^1^3060726
"PKG",3,22,1,"PAH",1,1,1,0)
XU*8*420 - Please refer to the patch description in FORUM for details
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","XU8P420")
0^1^B3428730^n/a
"RTN","XU8P420",1,0)
XU8P420 ;OAK_BP/BDT,JLI - NATIONAL PROVIDER IDENTIFIER 3/7/06 ;7/17/06  15:38
"RTN","XU8P420",2,0)
 ;;8.0;KERNEL;**420**; July 10, 1995;Build 20
"RTN","XU8P420",3,0)
 ;;
"RTN","XU8P420",4,0)
PRE ; run pre-routine
"RTN","XU8P420",5,0)
 Q
"RTN","XU8P420",6,0)
 ;
"RTN","XU8P420",7,0)
POST ; run post-routine
"RTN","XU8P420",8,0)
 D SLAYGO
"RTN","XU8P420",9,0)
 D SETOPT
"RTN","XU8P420",10,0)
 D SPRM
"RTN","XU8P420",11,0)
 D POSTINIT^XUSNPIED ; jli
"RTN","XU8P420",12,0)
 N I
"RTN","XU8P420",13,0)
 F I=0:0 S I=$O(^USC(8932.1,I)) Q:I'>0  I $$GET1^DIQ(8932.1,I_",",90002)="" D
"RTN","XU8P420",14,0)
 . N FDA S FDA(8932.1,I_",",90002)="I" D FILE^DIE("","FDA")
"RTN","XU8P420",15,0)
 . Q
"RTN","XU8P420",16,0)
 Q
"RTN","XU8P420",17,0)
SLAYGO ;
"RTN","XU8P420",18,0)
 ; Set un-editable for STATUS field (#.02) in EFFECTIVE DATE/TIME subfile (#200.042)
"RTN","XU8P420",19,0)
 I $P(^DD(200.042,.02,0),"^",2)'["I" D
"RTN","XU8P420",20,0)
 . S $P(^DD(200.042,.02,0),"^",2)=$P(^DD(200.042,.02,0),"^",2)_"I"
"RTN","XU8P420",21,0)
 ; Set un-editable for STATUS field (#.02) in EFFECTIVE DATE/TIEM subfile (#4.042)
"RTN","XU8P420",22,0)
 I $P(^DD(4.042,.02,0),"^",2)'["I" D
"RTN","XU8P420",23,0)
 . S $P(^DD(4.042,.02,0),"^",2)=$P(^DD(4.042,.02,0),"^",2)_"I"
"RTN","XU8P420",24,0)
 ; Set DEL-LAYGO for NPI field (#41.99) in INSTITUTION file (#4)
"RTN","XU8P420",25,0)
 S ^DD(4,41.99,"DEL",11,0)="D:'$D(XUMF) EN^DDIOL(""Entries must be inactivated via the Master File Server(MFS)."","""",""!?5,$C(7)"") I $D(XUMF)"
"RTN","XU8P420",26,0)
 Q
"RTN","XU8P420",27,0)
 ;
"RTN","XU8P420",28,0)
SETOPT ;put options under XUCOMMAND and XU USER SIGN-ON menu
"RTN","XU8P420",29,0)
 Q
"RTN","XU8P420",30,0)
 ;
"RTN","XU8P420",31,0)
SPRM ; Add new Kernel parameters on file
"RTN","XU8P420",32,0)
 N XUSPR,XUSPCK
"RTN","XU8P420",33,0)
 S XUSPCK=$O(^DIC(9.4,"B","KERNEL",0))
"RTN","XU8P420",34,0)
 I 'XUSPCK Q
"RTN","XU8P420",35,0)
 S XUSPCK=XUSPCK_";DIC(9.4,"
"RTN","XU8P420",36,0)
 F XUSPR="Individual_ID;VA(200,","Organization_ID;DIC(4,","Pharmacy_ID;PS(59," D
"RTN","XU8P420",37,0)
 . D PUT^XPAR(XUSPCK,"XUSNPI QUALIFIED IDENTIFIER",$P(XUSPR,";"),$P(XUSPR,";",2))
"RTN","XU8P420",38,0)
 ; delete Provider_ID if it is present
"RTN","XU8P420",39,0)
 D DEL^XPAR(XUSPCK,"XUSNPI QUALIFIED IDENTIFIER","Provider_ID")
"RTN","XU8P420",40,0)
 Q
"RTN","XUSNPIDA")
0^4^B45390858^n/a
"RTN","XUSNPIDA",1,0)
XUSNPIDA ;JLI/FO-OAKLAND - SPECIFIED TAXONOMY VALUES FOR NPI RECIPIENTS ;5/12/06  08:53
"RTN","XUSNPIDA",2,0)
 ;;8.0;KERNEL;**420**;Jul 10, 1995;Build 20
"RTN","XUSNPIDA",3,0)
 Q
"RTN","XUSNPIDA",4,0)
 ;
"RTN","XUSNPIDA",5,0)
CHKGLOB() ;  returns global location of TAXONOMY values also rebuilds if they are missing
"RTN","XUSNPIDA",6,0)
 N I,STR,XUGLOB
"RTN","XUSNPIDA",7,0)
 S XUGLOB=$NA(^XTMP("NPIVALS"))
"RTN","XUSNPIDA",8,0)
 ; check for ;;; is to permit sites to add a ; to exclude some values not used at site
"RTN","XUSNPIDA",9,0)
 I '$D(@XUGLOB) F I=1:1 S STR=$T(@("VALUES+"_I_"^XUSNPIDA")) I STR'[";;;" S STR=$P(STR,";;",2) Q:STR=""  S @XUGLOB@(STR)=""
"RTN","XUSNPIDA",10,0)
 S @XUGLOB@(0)=$$FMADD^XLFDT(DT,15)
"RTN","XUSNPIDA",11,0)
 Q XUGLOB
"RTN","XUSNPIDA",12,0)
 ;
"RTN","XUSNPIDA",13,0)
VALUES ;
"RTN","XUSNPIDA",14,0)
 ;;101Y00000X
"RTN","XUSNPIDA",15,0)
 ;;101YA0400X
"RTN","XUSNPIDA",16,0)
 ;;101YM0800X
"RTN","XUSNPIDA",17,0)
 ;;101YP1600X
"RTN","XUSNPIDA",18,0)
 ;;101YP2500X
"RTN","XUSNPIDA",19,0)
 ;;101YS0200X
"RTN","XUSNPIDA",20,0)
 ;;103G00000X
"RTN","XUSNPIDA",21,0)
 ;;103GC0700X
"RTN","XUSNPIDA",22,0)
 ;;103T00000X
"RTN","XUSNPIDA",23,0)
 ;;103TA0400X
"RTN","XUSNPIDA",24,0)
 ;;103TA0700X
"RTN","XUSNPIDA",25,0)
 ;;103TB0200X
"RTN","XUSNPIDA",26,0)
 ;;103TC0700X
"RTN","XUSNPIDA",27,0)
 ;;103TC1900X
"RTN","XUSNPIDA",28,0)
 ;;103TC2200X
"RTN","XUSNPIDA",29,0)
 ;;103TE1000X
"RTN","XUSNPIDA",30,0)
 ;;103TE1100X
"RTN","XUSNPIDA",31,0)
 ;;103TF0000X
"RTN","XUSNPIDA",32,0)
 ;;103TF0200X
"RTN","XUSNPIDA",33,0)
 ;;103TH0100X
"RTN","XUSNPIDA",34,0)
 ;;103TM1700X
"RTN","XUSNPIDA",35,0)
 ;;103TM1800X
"RTN","XUSNPIDA",36,0)
 ;;103TP0814X
"RTN","XUSNPIDA",37,0)
 ;;103TP2700X
"RTN","XUSNPIDA",38,0)
 ;;103TP2701X
"RTN","XUSNPIDA",39,0)
 ;;103TR0400X
"RTN","XUSNPIDA",40,0)
 ;;103TS0200X
"RTN","XUSNPIDA",41,0)
 ;;103TW0100X
"RTN","XUSNPIDA",42,0)
 ;;104100000X
"RTN","XUSNPIDA",43,0)
 ;;1041C0700X
"RTN","XUSNPIDA",44,0)
 ;;1041S0200X
"RTN","XUSNPIDA",45,0)
 ;;111N00000X
"RTN","XUSNPIDA",46,0)
 ;;111NI0900X
"RTN","XUSNPIDA",47,0)
 ;;111NN0400X
"RTN","XUSNPIDA",48,0)
 ;;111NN1001X
"RTN","XUSNPIDA",49,0)
 ;;111NR0200X
"RTN","XUSNPIDA",50,0)
 ;;111NS0005X
"RTN","XUSNPIDA",51,0)
 ;;111NT0100X
"RTN","XUSNPIDA",52,0)
 ;;111NX0100X
"RTN","XUSNPIDA",53,0)
 ;;111NX0800X
"RTN","XUSNPIDA",54,0)
 ;;122300000X
"RTN","XUSNPIDA",55,0)
 ;;1223D0001X
"RTN","XUSNPIDA",56,0)
 ;;1223E0200X
"RTN","XUSNPIDA",57,0)
 ;;1223G0001X
"RTN","XUSNPIDA",58,0)
 ;;1223P0106X
"RTN","XUSNPIDA",59,0)
 ;;1223P0221X
"RTN","XUSNPIDA",60,0)
 ;;1223P0300X
"RTN","XUSNPIDA",61,0)
 ;;1223P0700X
"RTN","XUSNPIDA",62,0)
 ;;1223S0112X
"RTN","XUSNPIDA",63,0)
 ;;1223X0008X
"RTN","XUSNPIDA",64,0)
 ;;1223X0400X
"RTN","XUSNPIDA",65,0)
 ;;133V00000X
"RTN","XUSNPIDA",66,0)
 ;;133VN1004X
"RTN","XUSNPIDA",67,0)
 ;;133VN1005X
"RTN","XUSNPIDA",68,0)
 ;;133VN1006X
"RTN","XUSNPIDA",69,0)
 ;;152W00000X
"RTN","XUSNPIDA",70,0)
 ;;152WC0802X
"RTN","XUSNPIDA",71,0)
 ;;152WL0500X
"RTN","XUSNPIDA",72,0)
 ;;152WP0200X
"RTN","XUSNPIDA",73,0)
 ;;152WS0006X
"RTN","XUSNPIDA",74,0)
 ;;152WV0400X
"RTN","XUSNPIDA",75,0)
 ;;152WX0102X
"RTN","XUSNPIDA",76,0)
 ;;170100000X
"RTN","XUSNPIDA",77,0)
 ;;183500000X
"RTN","XUSNPIDA",78,0)
 ;;1835G0000X
"RTN","XUSNPIDA",79,0)
 ;;1835N0905X
"RTN","XUSNPIDA",80,0)
 ;;1835N1003X
"RTN","XUSNPIDA",81,0)
 ;;1835P1200X
"RTN","XUSNPIDA",82,0)
 ;;1835P1300X
"RTN","XUSNPIDA",83,0)
 ;;204C00000X
"RTN","XUSNPIDA",84,0)
 ;;204D00000X
"RTN","XUSNPIDA",85,0)
 ;;204E00000X
"RTN","XUSNPIDA",86,0)
 ;;204F00000X
"RTN","XUSNPIDA",87,0)
 ;;207K00000X
"RTN","XUSNPIDA",88,0)
 ;;207KA0200X
"RTN","XUSNPIDA",89,0)
 ;;207KI0005X
"RTN","XUSNPIDA",90,0)
 ;;207L00000X
"RTN","XUSNPIDA",91,0)
 ;;207LA0401X
"RTN","XUSNPIDA",92,0)
 ;;207LC0200X
"RTN","XUSNPIDA",93,0)
 ;;207LP2900X
"RTN","XUSNPIDA",94,0)
 ;;207N00000X
"RTN","XUSNPIDA",95,0)
 ;;207ND0101X
"RTN","XUSNPIDA",96,0)
 ;;207ND0900X
"RTN","XUSNPIDA",97,0)
 ;;207NI0002X
"RTN","XUSNPIDA",98,0)
 ;;207NP0225X
"RTN","XUSNPIDA",99,0)
 ;;207NS0135X
"RTN","XUSNPIDA",100,0)
 ;;207P00000X
"RTN","XUSNPIDA",101,0)
 ;;207PE0004X
"RTN","XUSNPIDA",102,0)
 ;;207PE0005X
"RTN","XUSNPIDA",103,0)
 ;;207PP0204X
"RTN","XUSNPIDA",104,0)
 ;;207PS0010X
"RTN","XUSNPIDA",105,0)
 ;;207PT0002X
"RTN","XUSNPIDA",106,0)
 ;;207Q00000X
"RTN","XUSNPIDA",107,0)
 ;;207QA0000X
"RTN","XUSNPIDA",108,0)
 ;;207QA0401X
"RTN","XUSNPIDA",109,0)
 ;;207QA0505X
"RTN","XUSNPIDA",110,0)
 ;;207QG0300X
"RTN","XUSNPIDA",111,0)
 ;;207QS0010X
"RTN","XUSNPIDA",112,0)
 ;;207R00000X
"RTN","XUSNPIDA",113,0)
 ;;207RA0000X
"RTN","XUSNPIDA",114,0)
 ;;207RA0201X
"RTN","XUSNPIDA",115,0)
 ;;207RA0401X
"RTN","XUSNPIDA",116,0)
 ;;207RC0000X
"RTN","XUSNPIDA",117,0)
 ;;207RC0001X
"RTN","XUSNPIDA",118,0)
 ;;207RC0200X
"RTN","XUSNPIDA",119,0)
 ;;207RE0101X
"RTN","XUSNPIDA",120,0)
 ;;207RG0100X
"RTN","XUSNPIDA",121,0)
 ;;207RG0300X
"RTN","XUSNPIDA",122,0)
 ;;207RH0000X
"RTN","XUSNPIDA",123,0)
 ;;207RH0003X
"RTN","XUSNPIDA",124,0)
 ;;207RI0001X
"RTN","XUSNPIDA",125,0)
 ;;207RI0008X
"RTN","XUSNPIDA",126,0)
 ;;207RI0011X
"RTN","XUSNPIDA",127,0)
 ;;207RI0200X
"RTN","XUSNPIDA",128,0)
 ;;207RM1200X
"RTN","XUSNPIDA",129,0)
 ;;207RN0300X
"RTN","XUSNPIDA",130,0)
 ;;207RP1001X
"RTN","XUSNPIDA",131,0)
 ;;207RR0500X
"RTN","XUSNPIDA",132,0)
 ;;207RS0010X
"RTN","XUSNPIDA",133,0)
 ;;207RX0202X
"RTN","XUSNPIDA",134,0)
 ;;207SC0300X
"RTN","XUSNPIDA",135,0)
 ;;207SG0201X
"RTN","XUSNPIDA",136,0)
 ;;207SG0202X
"RTN","XUSNPIDA",137,0)
 ;;207SG0203X
"RTN","XUSNPIDA",138,0)
 ;;207SG0205X
"RTN","XUSNPIDA",139,0)
 ;;207SM0001X
"RTN","XUSNPIDA",140,0)
 ;;207T00000X
"RTN","XUSNPIDA",141,0)
 ;;207U00000X
"RTN","XUSNPIDA",142,0)
 ;;207UN0901X
"RTN","XUSNPIDA",143,0)
 ;;207UN0902X
"RTN","XUSNPIDA",144,0)
 ;;207UN0903X
"RTN","XUSNPIDA",145,0)
 ;;207V00000X
"RTN","XUSNPIDA",146,0)
 ;;207VC0200X
"RTN","XUSNPIDA",147,0)
 ;;207VE0102X
"RTN","XUSNPIDA",148,0)
 ;;207VG0400X
"RTN","XUSNPIDA",149,0)
 ;;207VM0101X
"RTN","XUSNPIDA",150,0)
 ;;207VX0000X
"RTN","XUSNPIDA",151,0)
 ;;207VX0201X
"RTN","XUSNPIDA",152,0)
 ;;207W00000X
"RTN","XUSNPIDA",153,0)
 ;;207X00000X
"RTN","XUSNPIDA",154,0)
 ;;207XS0106X
"RTN","XUSNPIDA",155,0)
 ;;207XS0114X
"RTN","XUSNPIDA",156,0)
 ;;207XS0117X
"RTN","XUSNPIDA",157,0)
 ;;207XX0004X
"RTN","XUSNPIDA",158,0)
 ;;207XX0005X
"RTN","XUSNPIDA",159,0)
 ;;207XX0801X
"RTN","XUSNPIDA",160,0)
 ;;207Y00000X
"RTN","XUSNPIDA",161,0)
 ;;207YP0228X
"RTN","XUSNPIDA",162,0)
 ;;207YS0123X
"RTN","XUSNPIDA",163,0)
 ;;207YX0007X
"RTN","XUSNPIDA",164,0)
 ;;207YX0602X
"RTN","XUSNPIDA",165,0)
 ;;207YX0901X
"RTN","XUSNPIDA",166,0)
 ;;207YX0905X
"RTN","XUSNPIDA",167,0)
 ;;207ZB0001X
"RTN","XUSNPIDA",168,0)
 ;;207ZC0500X
"RTN","XUSNPIDA",169,0)
 ;;207ZD0900X
"RTN","XUSNPIDA",170,0)
 ;;207ZF0201X
"RTN","XUSNPIDA",171,0)
 ;;207ZH0000X
"RTN","XUSNPIDA",172,0)
 ;;207ZI0100X
"RTN","XUSNPIDA",173,0)
 ;;207ZM0300X
"RTN","XUSNPIDA",174,0)
 ;;207ZN0500X
"RTN","XUSNPIDA",175,0)
 ;;207ZP0007X
"RTN","XUSNPIDA",176,0)
 ;;207ZP0101X
"RTN","XUSNPIDA",177,0)
 ;;207ZP0102X
"RTN","XUSNPIDA",178,0)
 ;;207ZP0104X
"RTN","XUSNPIDA",179,0)
 ;;207ZP0105X
"RTN","XUSNPIDA",180,0)
 ;;207ZP0213X
"RTN","XUSNPIDA",181,0)
 ;;208000000X
"RTN","XUSNPIDA",182,0)
 ;;2080A0000X
"RTN","XUSNPIDA",183,0)
 ;;2080I0007X
"RTN","XUSNPIDA",184,0)
 ;;2080N0001X
"RTN","XUSNPIDA",185,0)
 ;;2080P0006X
"RTN","XUSNPIDA",186,0)
 ;;2080P0008X
"RTN","XUSNPIDA",187,0)
 ;;2080P0201X
"RTN","XUSNPIDA",188,0)
 ;;2080P0202X
"RTN","XUSNPIDA",189,0)
 ;;2080P0203X
"RTN","XUSNPIDA",190,0)
 ;;2080P0204X
"RTN","XUSNPIDA",191,0)
 ;;2080P0205X
"RTN","XUSNPIDA",192,0)
 ;;2080P0206X
"RTN","XUSNPIDA",193,0)
 ;;2080P0207X
"RTN","XUSNPIDA",194,0)
 ;;2080P0208X
"RTN","XUSNPIDA",195,0)
 ;;2080P0210X
"RTN","XUSNPIDA",196,0)
 ;;2080P0214X
"RTN","XUSNPIDA",197,0)
 ;;2080P0216X
"RTN","XUSNPIDA",198,0)
 ;;2080S0010X
"RTN","XUSNPIDA",199,0)
 ;;2080T0002X
"RTN","XUSNPIDA",200,0)
 ;;208100000X
"RTN","XUSNPIDA",201,0)
 ;;2081P0004X
"RTN","XUSNPIDA",202,0)
 ;;2081P0010X
"RTN","XUSNPIDA",203,0)
 ;;2081P2900X
"RTN","XUSNPIDA",204,0)
 ;;2081S0010X
"RTN","XUSNPIDA",205,0)
 ;;208200000X
"RTN","XUSNPIDA",206,0)
 ;;2082S0099X
"RTN","XUSNPIDA",207,0)
 ;;2082S0105X
"RTN","XUSNPIDA",208,0)
 ;;2083A0100X
"RTN","XUSNPIDA",209,0)
 ;;2083P0011X
"RTN","XUSNPIDA",210,0)
 ;;2083P0500X
"RTN","XUSNPIDA",211,0)
 ;;2083P0901X
"RTN","XUSNPIDA",212,0)
 ;;2083S0010X
"RTN","XUSNPIDA",213,0)
 ;;2083T0002X
"RTN","XUSNPIDA",214,0)
 ;;2083X0100X
"RTN","XUSNPIDA",215,0)
 ;;2084A0401X
"RTN","XUSNPIDA",216,0)
 ;;2084F0202X
"RTN","XUSNPIDA",217,0)
 ;;2084N0400X
"RTN","XUSNPIDA",218,0)
 ;;2084N0402X
"RTN","XUSNPIDA",219,0)
 ;;2084N0600X
"RTN","XUSNPIDA",220,0)
 ;;2084P0005X
"RTN","XUSNPIDA",221,0)
 ;;2084P0800X
"RTN","XUSNPIDA",222,0)
 ;;2084P0802X
"RTN","XUSNPIDA",223,0)
 ;;2084P0804X
"RTN","XUSNPIDA",224,0)
 ;;2084P0805X
"RTN","XUSNPIDA",225,0)
 ;;2084P2900X
"RTN","XUSNPIDA",226,0)
 ;;2084S0010X
"RTN","XUSNPIDA",227,0)
 ;;2084V0102X
"RTN","XUSNPIDA",228,0)
 ;;2085B0100X
"RTN","XUSNPIDA",229,0)
 ;;2085N0700X
"RTN","XUSNPIDA",230,0)
 ;;2085N0904X
"RTN","XUSNPIDA",231,0)
 ;;2085P0229X
"RTN","XUSNPIDA",232,0)
 ;;2085R0001X
"RTN","XUSNPIDA",233,0)
 ;;2085R0202X
"RTN","XUSNPIDA",234,0)
 ;;2085R0203X
"RTN","XUSNPIDA",235,0)
 ;;2085R0204X
"RTN","XUSNPIDA",236,0)
 ;;2085R0205X
"RTN","XUSNPIDA",237,0)
 ;;2085U0001X
"RTN","XUSNPIDA",238,0)
 ;;208600000X
"RTN","XUSNPIDA",239,0)
 ;;2086S0102X
"RTN","XUSNPIDA",240,0)
 ;;2086S0105X
"RTN","XUSNPIDA",241,0)
 ;;2086S0120X
"RTN","XUSNPIDA",242,0)
 ;;2086S0122X
"RTN","XUSNPIDA",243,0)
 ;;2086S0127X
"RTN","XUSNPIDA",244,0)
 ;;2086S0129X
"RTN","XUSNPIDA",245,0)
 ;;2086X0206X
"RTN","XUSNPIDA",246,0)
 ;;208800000X
"RTN","XUSNPIDA",247,0)
 ;;208C00000X
"RTN","XUSNPIDA",248,0)
 ;;208D00000X
"RTN","XUSNPIDA",249,0)
 ;;208G00000X
"RTN","XUSNPIDA",250,0)
 ;;208M00000X
"RTN","XUSNPIDA",251,0)
 ;;208U00000X
"RTN","XUSNPIDA",252,0)
 ;;208VP0000X
"RTN","XUSNPIDA",253,0)
 ;;208VP0014X
"RTN","XUSNPIDA",254,0)
 ;;209800000X
"RTN","XUSNPIDA",255,0)
 ;;213E00000X
"RTN","XUSNPIDA",256,0)
 ;;213EG0000X
"RTN","XUSNPIDA",257,0)
 ;;213EP0504X
"RTN","XUSNPIDA",258,0)
 ;;213EP1101X
"RTN","XUSNPIDA",259,0)
 ;;213ER0200X
"RTN","XUSNPIDA",260,0)
 ;;213ES0000X
"RTN","XUSNPIDA",261,0)
 ;;213ES0103X
"RTN","XUSNPIDA",262,0)
 ;;213ES0131X
"RTN","XUSNPIDA",263,0)
 ;;225100000X
"RTN","XUSNPIDA",264,0)
 ;;2251C2600X
"RTN","XUSNPIDA",265,0)
 ;;2251E1200X
"RTN","XUSNPIDA",266,0)
 ;;2251E1300X
"RTN","XUSNPIDA",267,0)
 ;;2251G0304X
"RTN","XUSNPIDA",268,0)
 ;;2251H1200X
"RTN","XUSNPIDA",269,0)
 ;;2251H1300X
"RTN","XUSNPIDA",270,0)
 ;;2251N0400X
"RTN","XUSNPIDA",271,0)
 ;;2251P0200X
"RTN","XUSNPIDA",272,0)
 ;;2251S0007X
"RTN","XUSNPIDA",273,0)
 ;;2251X0800X
"RTN","XUSNPIDA",274,0)
 ;;225X00000X
"RTN","XUSNPIDA",275,0)
 ;;225XE1200X
"RTN","XUSNPIDA",276,0)
 ;;225XH1200X
"RTN","XUSNPIDA",277,0)
 ;;225XH1300X
"RTN","XUSNPIDA",278,0)
 ;;225XN1300X
"RTN","XUSNPIDA",279,0)
 ;;225XP0200X
"RTN","XUSNPIDA",280,0)
 ;;225XR0403X
"RTN","XUSNPIDA",281,0)
 ;;231H00000X
"RTN","XUSNPIDA",282,0)
 ;;231HA2400X
"RTN","XUSNPIDA",283,0)
 ;;231HA2500X
"RTN","XUSNPIDA",284,0)
 ;;237600000X
"RTN","XUSNPIDA",285,0)
 ;;363A00000X
"RTN","XUSNPIDA",286,0)
 ;;363AM0700X
"RTN","XUSNPIDA",287,0)
 ;;363AS0400X
"RTN","XUSNPIDA",288,0)
 ;;363L00000X
"RTN","XUSNPIDA",289,0)
 ;;363LA2100X
"RTN","XUSNPIDA",290,0)
 ;;363LA2200X
"RTN","XUSNPIDA",291,0)
 ;;363LC0200X
"RTN","XUSNPIDA",292,0)
 ;;363LC1500X
"RTN","XUSNPIDA",293,0)
 ;;363LF0000X
"RTN","XUSNPIDA",294,0)
 ;;363LG0600X
"RTN","XUSNPIDA",295,0)
 ;;363LN0000X
"RTN","XUSNPIDA",296,0)
 ;;363LN0005X
"RTN","XUSNPIDA",297,0)
 ;;363LP0200X
"RTN","XUSNPIDA",298,0)
 ;;363LP0222X
"RTN","XUSNPIDA",299,0)
 ;;363LP0808X
"RTN","XUSNPIDA",300,0)
 ;;363LP1700X
"RTN","XUSNPIDA",301,0)
 ;;363LP2300X
"RTN","XUSNPIDA",302,0)
 ;;363LS0200X
"RTN","XUSNPIDA",303,0)
 ;;363LW0102X
"RTN","XUSNPIDA",304,0)
 ;;363LX0001X
"RTN","XUSNPIDA",305,0)
 ;;363LX0106X
"RTN","XUSNPIDA",306,0)
 ;;364S00000X
"RTN","XUSNPIDA",307,0)
 ;;364SA2100X
"RTN","XUSNPIDA",308,0)
 ;;364SA2200X
"RTN","XUSNPIDA",309,0)
 ;;364SC0200X
"RTN","XUSNPIDA",310,0)
 ;;364SC1501X
"RTN","XUSNPIDA",311,0)
 ;;364SC2300X
"RTN","XUSNPIDA",312,0)
 ;;364SE0003X
"RTN","XUSNPIDA",313,0)
 ;;364SE1400X
"RTN","XUSNPIDA",314,0)
 ;;364SF0001X
"RTN","XUSNPIDA",315,0)
 ;;364SG0600X
"RTN","XUSNPIDA",316,0)
 ;;364SH0200X
"RTN","XUSNPIDA",317,0)
 ;;364SH1100X
"RTN","XUSNPIDA",318,0)
 ;;364SI0800X
"RTN","XUSNPIDA",319,0)
 ;;364SL0600X
"RTN","XUSNPIDA",320,0)
 ;;364SM0705X
"RTN","XUSNPIDA",321,0)
 ;;364SN0000X
"RTN","XUSNPIDA",322,0)
 ;;364SN0800X
"RTN","XUSNPIDA",323,0)
 ;;364SP0200X
"RTN","XUSNPIDA",324,0)
 ;;364SP0807X
"RTN","XUSNPIDA",325,0)
 ;;364SP0808X
"RTN","XUSNPIDA",326,0)
 ;;364SP0809X
"RTN","XUSNPIDA",327,0)
 ;;364SP0810X
"RTN","XUSNPIDA",328,0)
 ;;364SP0811X
"RTN","XUSNPIDA",329,0)
 ;;364SP0812X
"RTN","XUSNPIDA",330,0)
 ;;364SP0813X
"RTN","XUSNPIDA",331,0)
 ;;364SP1700X
"RTN","XUSNPIDA",332,0)
 ;;364SP2800X
"RTN","XUSNPIDA",333,0)
 ;;364SR0400X
"RTN","XUSNPIDA",334,0)
 ;;364SS0200X
"RTN","XUSNPIDA",335,0)
 ;;364ST0500X
"RTN","XUSNPIDA",336,0)
 ;;364SW0102X
"RTN","XUSNPIDA",337,0)
 ;;364SX0106X
"RTN","XUSNPIDA",338,0)
 ;;364SX0200X
"RTN","XUSNPIDA",339,0)
 ;;364SX0204X
"RTN","XUSNPIDA",340,0)
 ;;367500000X
"RTN","XUSNPIDA",341,0)
 ;;367A00000X
"RTN","XUSNPIDA",342,0)
 ;;367H00000X
"RTN","XUSNPIE1")
0^2^B89054280^n/a
"RTN","XUSNPIE1",1,0)
XUSNPIE1 ;fo-oakland/jli - NATIONAL PROVIDER IDENTIFIER DATA CAPTURE ;7/26/06  13:01
"RTN","XUSNPIE1",2,0)
 ;;8.0;KERNEL;**420**; July 10, 1995;Build 20
"RTN","XUSNPIE1",3,0)
 ;
"RTN","XUSNPIE1",4,0)
 Q
"RTN","XUSNPIE1",5,0)
 ;
"RTN","XUSNPIE1",6,0)
CHKDT(XUSIEN,XUSDATE) ; Check Date
"RTN","XUSNPIE1",7,0)
 ;;=======
"RTN","XUSNPIE1",8,0)
 ;;  XUSIEN  : Internal Entry Number. Required.
"RTN","XUSNPIE1",9,0)
 ;;  XUSDATE : The Effective Date value to test. Must be FM date. Required.
"RTN","XUSNPIE1",10,0)
 ;;
"RTN","XUSNPIE1",11,0)
 ;;  If input passes date comparison, return 1.
"RTN","XUSNPIE1",12,0)
 ;;  Else return 0.
"RTN","XUSNPIE1",13,0)
 ;;=======
"RTN","XUSNPIE1",14,0)
 ;
"RTN","XUSNPIE1",15,0)
 I '$D(XUSIEN) Q "-1^Invalid IEN"
"RTN","XUSNPIE1",16,0)
 N X,Y S X=XUSDATE D ^%DT I Y<1 Q "0^Invalid Effective Date"
"RTN","XUSNPIE1",17,0)
 ;-------
"RTN","XUSNPIE1",18,0)
 N XUSROOT,XUSX,XUSDA,XUSRTN S XUSRTN=0
"RTN","XUSNPIE1",19,0)
 N XUSCRDT S XUSCRDT=$$DT^XLFDT
"RTN","XUSNPIE1",20,0)
 ; get global from Parameter file base on Qualified Identifier.
"RTN","XUSNPIE1",21,0)
 S XUSROOT="^VA(200,"_XUSIEN_","_"""NPISTATUS"""
"RTN","XUSNPIE1",22,0)
 I '$D(@(XUSROOT_")")) Q 1
"RTN","XUSNPIE1",23,0)
 S XUSX=XUSROOT_","_"""A"""_")",XUSDA=$O(@XUSX,-1)
"RTN","XUSNPIE1",24,0)
 I $G(XUSDA) S XUSX=XUSROOT_","_XUSDA_","_0_")",XUSRTN=$P($G(@XUSX),"^")
"RTN","XUSNPIE1",25,0)
 I (XUSDATE'<XUSRTN),(XUSDATE'>XUSCRDT) Q 1
"RTN","XUSNPIE1",26,0)
 Q 0
"RTN","XUSNPIE1",27,0)
 ;
"RTN","XUSNPIE1",28,0)
ADDNPI(XUSIEN,XUSNPI,XUSDATE,XUSTATUS) ;
"RTN","XUSNPIE1",29,0)
 ;;==========
"RTN","XUSNPIE1",30,0)
 ;; Update the Effective Date, Status & NPI trio.
"RTN","XUSNPIE1",31,0)
 ;; XUSIEN  : Internal Entry Number. Required.
"RTN","XUSNPIE1",32,0)
 ;; XUSNPI  : National Provider Identifier. Required.
"RTN","XUSNPIE1",33,0)
 ;; XUSDATE : Active Date. Required.
"RTN","XUSNPIE1",34,0)
 ;;
"RTN","XUSNPIE1",35,0)
 ;; If successful, return XUSRTN = IEN of new 42 sub-file entry.
"RTN","XUSNPIE1",36,0)
 ;; Else return XUSRTN = "-1^ErrorMessage".
"RTN","XUSNPIE1",37,0)
 ;; =========
"RTN","XUSNPIE1",38,0)
 ;
"RTN","XUSNPIE1",39,0)
 ; Check valid inputs.
"RTN","XUSNPIE1",40,0)
 N XUSROOT,XUSFNB
"RTN","XUSNPIE1",41,0)
 S XUSROOT="^VA(200,"
"RTN","XUSNPIE1",42,0)
 I '$$CHKDGT(XUSNPI) Q "-1^Invalid NPI"
"RTN","XUSNPIE1",43,0)
 N X,Y S X=XUSDATE D ^%DT I Y<1 Q "-1^Invalid Effective Date"
"RTN","XUSNPIE1",44,0)
 I '$$CHKDT(XUSIEN,XUSDATE) Q "-1^Invalid Effective Date"
"RTN","XUSNPIE1",45,0)
 I $G(XUSTATUS)="" S XUSTATUS=1
"RTN","XUSNPIE1",46,0)
 I (XUSTATUS'=0),(XUSTATUS'=1) Q "-1^Invalid Status"
"RTN","XUSNPIE1",47,0)
 N CHNPI S CHNPI=$O(^VA(200,"ANPI",XUSNPI,0)) ; check if NPI is being used for another entry
"RTN","XUSNPIE1",48,0)
 I CHNPI>0 Q "-1^NPI VALUE ALREADY IN USE"
"RTN","XUSNPIE1",49,0)
 ;
"RTN","XUSNPIE1",50,0)
 ;--------
"RTN","XUSNPIE1",51,0)
 N ZZ,XUSRTN,ERRMSG,XUSX S ERRMSG=""
"RTN","XUSNPIE1",52,0)
 S XUSX=XUSROOT_XUSIEN_","_"""NPISTATUS"""_")"
"RTN","XUSNPIE1",53,0)
 ; Update Effective Date #42 multiple fields
"RTN","XUSNPIE1",54,0)
 S XUSFNB=200.042
"RTN","XUSNPIE1",55,0)
 S ZZ(1,XUSFNB,"+2,"_XUSIEN_",",.01)=XUSDATE
"RTN","XUSNPIE1",56,0)
 S ZZ(1,XUSFNB,"+2,"_XUSIEN_",",.02)=XUSTATUS
"RTN","XUSNPIE1",57,0)
 S ZZ(1,XUSFNB,"+2,"_XUSIEN_",",.03)=XUSNPI
"RTN","XUSNPIE1",58,0)
 D UPDATE^DIE("","ZZ(1)",,ERRMSG)
"RTN","XUSNPIE1",59,0)
 I $L(ERRMSG) Q "-1^"_$G(ERRMSG)
"RTN","XUSNPIE1",60,0)
 S XUSX=XUSROOT_XUSIEN_","_"""NPISTATUS"""_","_"""B"""_","_XUSDATE_","_"""A"""_")"
"RTN","XUSNPIE1",61,0)
 S XUSRTN=$O(@XUSX,-1)
"RTN","XUSNPIE1",62,0)
 I '+XUSRTN Q "-1^No entry add"
"RTN","XUSNPIE1",63,0)
 Q XUSRTN
"RTN","XUSNPIE1",64,0)
 ;
"RTN","XUSNPIE1",65,0)
CHKDGT(XUSNPI) ;
"RTN","XUSNPIE1",66,0)
 ;  Function to validate the format of an NPI number.  It checks the
"RTN","XUSNPIE1",67,0)
 ;  length of the number, whether the NPI is numeric, and whether
"RTN","XUSNPIE1",68,0)
 ;  the check digit is valid.
"RTN","XUSNPIE1",69,0)
 ;
"RTN","XUSNPIE1",70,0)
 ;  Input parameter:
"RTN","XUSNPIE1",71,0)
 ;    NPI - 10-digit NPI number to validate.
"RTN","XUSNPIE1",72,0)
 ;
"RTN","XUSNPIE1",73,0)
 ;  Output parameter:
"RTN","XUSNPIE1",74,0)
 ;    Boolean value indicating whether the NPI has a valid format
"RTN","XUSNPIE1",75,0)
 ;
"RTN","XUSNPIE1",76,0)
 ;  NPI must be 10 digits long.
"RTN","XUSNPIE1",77,0)
 I XUSNPI'?10N Q 0
"RTN","XUSNPIE1",78,0)
 Q $E(XUSNPI,10)=$$CKDIGIT($E(XUSNPI,1,9))
"RTN","XUSNPIE1",79,0)
 ;
"RTN","XUSNPIE1",80,0)
CKDIGIT(XUSNPI) ;
"RTN","XUSNPIE1",81,0)
 ;  Function to calculate and return the check digit of an NPI.
"RTN","XUSNPIE1",82,0)
 ;
"RTN","XUSNPIE1",83,0)
 N XUSCTOT,XUSCN,XUSCDIG,XUSI
"RTN","XUSNPIE1",84,0)
 S XUSCTOT=24
"RTN","XUSNPIE1",85,0)
 F XUSI=9:-2:1 S XUSCN=2*$E(XUSNPI,XUSI),XUSCTOT=XUSCTOT+$E(XUSCN)+$E(XUSCN,2)+$E(XUSNPI,XUSI-1)
"RTN","XUSNPIE1",86,0)
 S XUSCDIG=150-XUSCTOT
"RTN","XUSNPIE1",87,0)
 Q $E(XUSCDIG,$L(XUSCDIG))
"RTN","XUSNPIE1",88,0)
 ;
"RTN","XUSNPIE1",89,0)
CHKDGT1(XUSNPI) ;calulate check digit, Luhn formula for NPI
"RTN","XUSNPIE1",90,0)
 ;x=10 digit number
"RTN","XUSNPIE1",91,0)
 N XBSTRING,XBTOT,XBCD,I
"RTN","XUSNPIE1",92,0)
 I '+XUSNPI S XUSNPI=0 Q XUSNPI
"RTN","XUSNPIE1",93,0)
 I $E(XUSNPI,1,5)=80840 D
"RTN","XUSNPIE1",94,0)
 .S XUSNPI=$E(XUSNPI,6,15)
"RTN","XUSNPIE1",95,0)
 S XBSTRING=""
"RTN","XUSNPIE1",96,0)
 I XUSNPI'?10N S XUSNPI=0 Q XUSNPI
"RTN","XUSNPIE1",97,0)
 S XBCD=$E(XUSNPI,10)
"RTN","XUSNPIE1",98,0)
 F I=1:1:9 D
"RTN","XUSNPIE1",99,0)
 .I (I#2) D
"RTN","XUSNPIE1",100,0)
 ..S XBSTRING=XBSTRING_($E(XUSNPI,I)*2)
"RTN","XUSNPIE1",101,0)
 .I '(I#2) D
"RTN","XUSNPIE1",102,0)
 ..S XBSTRING=XBSTRING_$E(XUSNPI,I)
"RTN","XUSNPIE1",103,0)
 S XBTOT=0
"RTN","XUSNPIE1",104,0)
 F I=1:1:$L(XBSTRING) D
"RTN","XUSNPIE1",105,0)
 .S XBTOT=XBTOT+$E(XBSTRING,I)
"RTN","XUSNPIE1",106,0)
 S XBTOT=XBTOT+24
"RTN","XUSNPIE1",107,0)
 S XBTOT=1000-XBTOT
"RTN","XUSNPIE1",108,0)
 S XUSNPI=$E(XBTOT,$L(XBTOT)) W XUSNPI
"RTN","XUSNPIE1",109,0)
 Q (XUSNPI=XBCD)
"RTN","XUSNPIE1",110,0)
 ;
"RTN","XUSNPIE1",111,0)
SET(XUSIEN,XUSNPI) ;
"RTN","XUSNPIE1",112,0)
 ; set value for NPI field (#41.99) in file #200
"RTN","XUSNPIE1",113,0)
 N OLDNPI S OLDNPI=$P($G(^VA(200,XUSIEN,"NPI")),"^")
"RTN","XUSNPIE1",114,0)
 I OLDNPI K ^VA(200,"ANPI",OLDNPI,XUSIEN)
"RTN","XUSNPIE1",115,0)
 S ^VA(200,XUSIEN,"NPI")=XUSNPI_U_"D",^VA(200,"ANPI",XUSNPI,XUSIEN)=""
"RTN","XUSNPIE1",116,0)
 Q
"RTN","XUSNPIE1",117,0)
 ;
"RTN","XUSNPIE1",118,0)
SET1(XUSIEN,XUSNPI) ;
"RTN","XUSNPIE1",119,0)
 ; set value for NPI field (#41.99) in file #4
"RTN","XUSNPIE1",120,0)
 N OLDNPI S OLDNPI=$P($G(^DIC(4,XUSIEN,"NPI")),"^")
"RTN","XUSNPIE1",121,0)
 I OLDNPI K ^DIC(4,"ANPI",OLDNPI,XUSIEN)
"RTN","XUSNPIE1",122,0)
 S ^DIC(4,XUSIEN,"NPI")=XUSNPI,^DIC(4,"ANPI",XUSNPI,XUSIEN)=""
"RTN","XUSNPIE1",123,0)
 Q
"RTN","XUSNPIE1",124,0)
 ;
"RTN","XUSNPIE1",125,0)
SIGNON ; .ACT - run at user sign-on display message if NEEDS AN NPI
"RTN","XUSNPIE1",126,0)
 N XVAL,DATETIME,OPT,XVALTIME
"RTN","XUSNPIE1",127,0)
 I $$CHEKNPI^XUSNPIED(DUZ) W !!,"To enter your NPI value enter  NPI  at a menu prompt to jump to the",!,"edit option.",! H 1
"RTN","XUSNPIE1",128,0)
 ; following to insure CBO List is scheduled to run on first day of month
"RTN","XUSNPIE1",129,0)
 S XVALTIME=$E(DT,6,7) I '((XVALTIME="01")!(XVALTIME="15")) Q
"RTN","XUSNPIE1",130,0)
 S XVAL=+$E($$NOW^XLFDT(),6,10) I XVAL>(XVALTIME_".19"),XVAL<(XVALTIME_".1958") D  ; 7 PM TO 7:58 PM ON 1ST OF MONTH
"RTN","XUSNPIE1",131,0)
 . S OPT=$$FIND1^DIC(19.2,"","","XUS NPI CBO LIST") I OPT'>0 L +^TMP("XUS NPI CBO LOCK"):0 Q:'$T  D CBOQUEUE L -^TMP("XUS NPI CBO LOCK") Q
"RTN","XUSNPIE1",132,0)
 . S DATETIME=$$GET1^DIQ(19.2,OPT_",",2)
"RTN","XUSNPIE1",133,0)
 . I DATETIME'=$$FMTE^XLFDT(DT_".2") L +^DIC(19.2,OPT):0 Q:'$T  D SETQUEUE(OPT,DT_".2") L -^DIC(19.2,OPT) Q
"RTN","XUSNPIE1",134,0)
 . I '$$GET1^DIQ(19.2,OPT_",",99.1) L +^DIC(19.2,OPT):0 Q:'$T  D  L -^DIC(19.2,OPT)
"RTN","XUSNPIE1",135,0)
 . . D SETQUEUE(OPT,"@")
"RTN","XUSNPIE1",136,0)
 . . D SETQUEUE(OPT,DT_".2")
"RTN","XUSNPIE1",137,0)
 . . Q
"RTN","XUSNPIE1",138,0)
 . Q
"RTN","XUSNPIE1",139,0)
 Q
"RTN","XUSNPIE1",140,0)
 ;
"RTN","XUSNPIE1",141,0)
SETQUEUE(OPT,VALUE) ;
"RTN","XUSNPIE1",142,0)
 N FDA S FDA(19.2,OPT_",",2)=VALUE D FILE^DIE("","FDA")
"RTN","XUSNPIE1",143,0)
 Q
"RTN","XUSNPIE1",144,0)
 ;
"RTN","XUSNPIE1",145,0)
POSTINIT ;
"RTN","XUSNPIE1",146,0)
 N XUGLOB,XUUSER,XIEN,X,ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","XUSNPIE1",147,0)
 ;S XIEN=$$FIND1^DIC(19,"","","XUCOMMAND") I XIEN>0,$$FIND1^DIC(19.01,","_XIEN_",","","XUS NPI PROVIDER SELF ENTRY")'>0 S X=$$ADD^XPDMENU("XUCOMMAND","XUS NPI PROVIDER SELF ENTRY","NPI","")
"RTN","XUSNPIE1",148,0)
 ;S XIEN=$$FIND1^DIC(19,"","","XU USER SIGN-ON") I XIEN>0,$$FIND1^DIC(19.01,","_XIEN_",","","XUS NPI SIGNON CHECK")'>0 S X=$$ADD^XPDMENU("XU USER SIGN-ON","XUS NPI SIGNON CHECK","","")
"RTN","XUSNPIE1",149,0)
 ; get global containing Taxonomy values
"RTN","XUSNPIE1",150,0)
 S XUGLOB=$$CHKGLOB^XUSNPIED()
"RTN","XUSNPIE1",151,0)
 ; go through file 200 and ma
"RTN","XUSNPIE1",152,0)
 S XUUSER=0 F  S XUUSER=$O(^VA(200,XUUSER)) Q:XUUSER'>0  I $$ACTIVE^XUSER(XUUSER) D DOUSER^XUSNPIED(XUUSER,XUGLOB)
"RTN","XUSNPIE1",153,0)
 ; and send CBO a starting point list
"RTN","XUSNPIE1",154,0)
 S ZTIO="",ZTDTH=$$NOW^XLFDT(),ZTRTN="CBOLIST^XUSNPIED",ZTDESC="XUS NPI CBOLIST MESSAGE GENERATION" D ^%ZTLOAD
"RTN","XUSNPIE1",155,0)
 ; set up to generate CBO list monthly
"RTN","XUSNPIE1",156,0)
 D CBOQUEUE
"RTN","XUSNPIE1",157,0)
 Q
"RTN","XUSNPIE1",158,0)
 ;
"RTN","XUSNPIE1",159,0)
CBOQUEUE ;
"RTN","XUSNPIE1",160,0)
 N FDA,XUSVAL
"RTN","XUSNPIE1",161,0)
 ; check for already queued
"RTN","XUSNPIE1",162,0)
 S XUSVAL=$$FIND1^DIC(19.2,"","","XUS NPI CBO LIST") I XUSVAL>0 D  Q
"RTN","XUSNPIE1",163,0)
 . S FDA(19.2,XUSVAL_",",2)=$$SETDATE()
"RTN","XUSNPIE1",164,0)
 . S FDA(19.2,XUSVAL_",",6)="1M(1@2000,15@2000)"
"RTN","XUSNPIE1",165,0)
 . N ZTQUEUED S ZTQUEUED=1 D FILE^DIE("","FDA") K ZTQUEUED
"RTN","XUSNPIE1",166,0)
 . Q
"RTN","XUSNPIE1",167,0)
 ; no set up queued job
"RTN","XUSNPIE1",168,0)
 S XUSVAL=$$FIND1^DIC(19,"","","XUS NPI CBO LIST") Q:XUSVAL'>0  S FDA(19.2,"+1,",.01)=XUSVAL
"RTN","XUSNPIE1",169,0)
 S FDA(19.2,"+1,",2)=$$SETDATE()
"RTN","XUSNPIE1",170,0)
 S FDA(19.2,"+1,",6)="1M(1@2000,15@2000)"
"RTN","XUSNPIE1",171,0)
 N ZTQUEUED S ZTQUEUED=1 D UPDATE^DIE("","FDA") K ZTQUEUED
"RTN","XUSNPIE1",172,0)
 Q
"RTN","XUSNPIE1",173,0)
 ;
"RTN","XUSNPIE1",174,0)
SETDATE() ;
"RTN","XUSNPIE1",175,0)
 Q $S($E($$NOW^XLFDT(),6,10)<1.2:DT,$E($$NOW^XLFDT(),6,10)<15.2:$E(DT,1,5)_"15",$E(DT,4,5)>11:(($E(DT,1,3)+1)_"0101"),1:($E(DT,1,5)+1)_"01")_".2"
"RTN","XUSNPIE1",176,0)
 ;
"RTN","XUSNPIE1",177,0)
EDITNPI(IEN) ; main entry of NPI value
"RTN","XUSNPIE1",178,0)
 ; IEN is the internal entry number in file 200 for the provider
"RTN","XUSNPIE1",179,0)
 ;
"RTN","XUSNPIE1",180,0)
 N DATEVAL,DESCRIP,DONE,NPIVAL1,NPIVAL2,PROVNAME,XX,Y
"RTN","XUSNPIE1",181,0)
 S PROVNAME=$$GET1^DIQ(200,IEN_",",.01)
"RTN","XUSNPIE1",182,0)
 I '$$ACTIVE^XUSER(IEN) W !,"This user isn't currently active" Q
"RTN","XUSNPIE1",183,0)
 I $$GETTAXON^XUSNPIED(IEN,.DESCRIP)=-1 W !,"This user doesn't have a Taxonomy Code indicating a need for an NPI." ; but don't quit on that
"RTN","XUSNPIE1",184,0)
 I $$NPISTATS^XUSNPIED(IEN)="E" W !,"This provider has been indicated as being EXEMPT from needing an NPI value.",!,"   Use Exempt option to remove it first" Q
"RTN","XUSNPIE1",185,0)
 I $$NPISTATS^XUSNPIED(IEN)="D" W !,"This provider already has an NPI value entered." Q
"RTN","XUSNPIE1",186,0)
 I $$NPISTATS^XUSNPIED(IEN)="" W !,"Need for an NPI value isn't indicated - but you can enter an NPI",$C(7)
"RTN","XUSNPIE1",187,0)
 I IEN'=DUZ W !,"Provider: ",PROVNAME,"   ","XXX-XX-"_$E($$GET1^DIQ(200,IEN_",",9),6,9),"   DOB: " S XX=$P($G(^VA(200,IEN,1)),U,3) S:XX'="" XX=$$DATE10^XUSNPIED(XX) W XX
"RTN","XUSNPIE1",188,0)
 I IEN'=DUZ W !,"Status:   Active"
"RTN","XUSNPIE1",189,0)
 S DONE=0 F  R !,"Enter NPI (10 digits): ",NPIVAL1:DTIME Q:'$T  Q:NPIVAL1=""  Q:NPIVAL1=U  D  Q:DONE
"RTN","XUSNPIE1",190,0)
 . ; have to use XUSNPIE1 until XU*8*410 is released
"RTN","XUSNPIE1",191,0)
 . I '$S($T(CHKDGT^XUSNPI)'="":$$CHKDGT^XUSNPI(NPIVAL1),1:$$CHKDGT^XUSNPIE1(NPIVAL1)) W !,"Checksum is not valid for this entry",! Q
"RTN","XUSNPIE1",192,0)
 . N NAMEVAL S NAMEVAL=$O(^VA(200,"ANPI",NPIVAL1,0)) I NAMEVAL>0 W !,"That NPI value is already associated with "_$$GET1^DIQ(200,NAMEVAL_",",.01) Q
"RTN","XUSNPIE1",193,0)
 . R !,"Please re-enter NPI  : ",NPIVAL2:DTIME Q:'$T  I NPIVAL1'=NPIVAL2 W !,"Values do not match!" Q
"RTN","XUSNPIE1",194,0)
 . S DONE=1
"RTN","XUSNPIE1",195,0)
 . Q
"RTN","XUSNPIE1",196,0)
 I 'DONE Q
"RTN","XUSNPIE1",197,0)
 ;N DIR S DIR("A")="Enter the date the provider was issued this number from CMS: ",DIR(0)="D^:"_$$NOW^XLFDT() D ^DIR Q:Y'>0  S DATEVAL=+Y
"RTN","XUSNPIE1",198,0)
 S DATEVAL=DT
"RTN","XUSNPIE1",199,0)
 S DONE=$S($T(ADDNPI^XUSNPI)'="":$$ADDNPI^XUSNPI("Individual_ID",IEN,NPIVAL1,DATEVAL),1:$$ADDNPI^XUSNPIE1(IEN,NPIVAL1,DATEVAL)) I DONE=-1 W !,"Problem writing that value into the database! --  It was **NOT** recorded.",!,$P(DONE,U,2) Q
"RTN","XUSNPIE1",200,0)
 W !!,"For provider ",PROVNAME," (who requires an NPI), the NPI ",NPIVAL1,!,"was saved to VistA successfully."
"RTN","XUSNPIE1",201,0)
 Q
"RTN","XUSNPIE1",202,0)
 ;
"RTN","XUSNPIE1",203,0)
CLERXMPT ; edit entry indicating whether a provider is exempt from needing an NPI
"RTN","XUSNPIE1",204,0)
 N DIC,DIR,FDA,IEN,Y
"RTN","XUSNPIE1",205,0)
 W ! S DIC="^VA(200,",DIC(0)="AEQ" S DIC("A")="select Provider: " D ^DIC Q:Y'>0  S IEN=+Y
"RTN","XUSNPIE1",206,0)
 I $$HASNPI^XUSNPIED(IEN) W !,"This Provider already has an NPI value.  Nothing to do." Q
"RTN","XUSNPIE1",207,0)
 I '$$CHEKNPI^XUSNPIED(IEN),'$$EXMPTNPI^XUSNPIED(IEN) W !,"This Provider does not appear to need an NPI or Exemption." Q
"RTN","XUSNPIE1",208,0)
 I $$EXMPTNPI^XUSNPIED(IEN) D  Q  ; currently marked as Exempt
"RTN","XUSNPIE1",209,0)
 . S DIR(0)="Y",DIR("A")="Provider is currently EXEMPT from needing an NPI, set to NEEDS an NPI (Y/N)" D ^DIR I 'Y Q
"RTN","XUSNPIE1",210,0)
 . S FDA(200,IEN_",",41.98)="N" D FILE^DIE("","FDA")
"RTN","XUSNPIE1",211,0)
 . W !,$S($$NEEDSNPI^XUSNPIED(IEN):"File updated",1:"Ecountered a problem updating file, status NOT set to NEEDS an NPI")
"RTN","XUSNPIE1",212,0)
 . Q
"RTN","XUSNPIE1",213,0)
 ; check to make sure provider should be exempt
"RTN","XUSNPIE1",214,0)
 S DIR(0)="Y",DIR("A")="Confirm that Provider should be Exempt from needing an NPI (Y/N)" D ^DIR I 'Y Q
"RTN","XUSNPIE1",215,0)
 ; and update file to show as exempt
"RTN","XUSNPIE1",216,0)
 S FDA(200,IEN_",",41.98)="E" D FILE^DIE("","FDA")
"RTN","XUSNPIE1",217,0)
 W !,$S($$EXMPTNPI^XUSNPIED(IEN):"File updated",1:"Ecountered a problem updating file, status NOT set to EXEMPT")
"RTN","XUSNPIE1",218,0)
 Q
"RTN","XUSNPIED")
0^3^B59937422^n/a
"RTN","XUSNPIED",1,0)
XUSNPIED ;JLI/FO-OAKLAND - DATA ENTRY FOR INITIAL NPI VALUES ;07/06/06  10:12
"RTN","XUSNPIED",2,0)
 ;;8.0;KERNEL;**420**;Jul 10, 1995;Build 20
"RTN","XUSNPIED",3,0)
 Q
"RTN","XUSNPIED",4,0)
 ;
"RTN","XUSNPIED",5,0)
SIGNON ; run at user sign-on to display message if NPI value is needed.
"RTN","XUSNPIED",6,0)
 D SIGNON^XUSNPIE1
"RTN","XUSNPIED",7,0)
 Q
"RTN","XUSNPIED",8,0)
 ;
"RTN","XUSNPIED",9,0)
CLEREDIT ; Input editing of NPI value for clerical staff - ask provider
"RTN","XUSNPIED",10,0)
 N IEN,DIC,PROVNAME,DATEVAL,DESCRIP,DONE,IENS,NPIVAL1,NPIVAL2,Y,XX
"RTN","XUSNPIED",11,0)
 F  W ! S DIC="^VA(200,",DIC(0)="AEQ" S DIC("A")="select Provider: " D ^DIC Q:Y'>0  S IEN=+Y D EDITNPI(IEN)
"RTN","XUSNPIED",12,0)
 Q
"RTN","XUSNPIED",13,0)
 ;
"RTN","XUSNPIED",14,0)
USEREDIT ; Entry point for provider to enter own data
"RTN","XUSNPIED",15,0)
 I $$NPISTATS(DUZ)="" W !,$C(7),"Please see your local NPI facilitator to add the NPI",! H 3 Q
"RTN","XUSNPIED",16,0)
 D EDITNPI(DUZ)
"RTN","XUSNPIED",17,0)
 Q
"RTN","XUSNPIED",18,0)
 ;
"RTN","XUSNPIED",19,0)
EDITNPI(IEN) ;
"RTN","XUSNPIED",20,0)
 D EDITNPI^XUSNPIE1(IEN)
"RTN","XUSNPIED",21,0)
 Q
"RTN","XUSNPIED",22,0)
 ;
"RTN","XUSNPIED",23,0)
CLERXMPT ;
"RTN","XUSNPIED",24,0)
 D CLERXMPT^XUSNPIE1
"RTN","XUSNPIED",25,0)
 Q
"RTN","XUSNPIED",26,0)
 ;
"RTN","XUSNPIED",27,0)
CHKGLOB() ; returns global location of TAXONOMY values also rebuilds if they are missing
"RTN","XUSNPIED",28,0)
 Q $$CHKGLOB^XUSNPIDA()
"RTN","XUSNPIED",29,0)
 ;
"RTN","XUSNPIED",30,0)
DOUSER(XUUSER,XUGLOB) ; check user for needing an NPI status value
"RTN","XUSNPIED",31,0)
 N PCLASS,XUDONE,PVAL,CODE,NPISTATS,XUVALUE,D0,EXPIRATN,I,NPIFLD,NPISUBFL
"RTN","XUSNPIED",32,0)
 S NPISTATS=41.98,NPISUBFL=200.042,NPIFLD=.03
"RTN","XUSNPIED",33,0)
 I $$GET1^DIQ(200,XUUSER_",",NPISTATS)'="" Q  ; user is already flagged
"RTN","XUSNPIED",34,0)
 S PCLASS=0,XUDONE=0 F  S PCLASS=$O(^VA(200,XUUSER,"USC1",PCLASS)) Q:PCLASS'>0  S D0=^(PCLASS,0) D  Q:XUDONE
"RTN","XUSNPIED",35,0)
 . S EXPIRATN=$P(D0,U,3)>0 I EXPIRATN Q
"RTN","XUSNPIED",36,0)
 . S PVAL=$P(D0,U),CODE=$$GET1^DIQ(8932.1,PVAL_",",6) I CODE'="",$D(@XUGLOB@(CODE)) D  S XUDONE=1 Q
"RTN","XUSNPIED",37,0)
 . . S XUVALUE="N" N NPIVAL F I=1:1 S NPIVAL=$$GET1^DIQ(NPISUBFL,I_","_XUUSER_",",NPIFLD) Q:NPIVAL=""  S XUVALUE="D" Q
"RTN","XUSNPIED",38,0)
 . . N XUFDA S XUFDA(200,XUUSER_",",NPISTATS)=XUVALUE
"RTN","XUSNPIED",39,0)
 . . D FILE^DIE("","XUFDA")
"RTN","XUSNPIED",40,0)
 . . Q
"RTN","XUSNPIED",41,0)
 . Q
"RTN","XUSNPIED",42,0)
 Q
"RTN","XUSNPIED",43,0)
 ;
"RTN","XUSNPIED",44,0)
PRINTOPT ; .OPT - prints local output listing for all providers or those needing NPI values
"RTN","XUSNPIED",45,0)
 N OPTION,DIR,Y,%ZIS,ION,ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK,XUSSORT
"RTN","XUSNPIED",46,0)
 ; have user select type of output desired
"RTN","XUSNPIED",47,0)
 W !,"Select one of the following:",!!,?11,"1",?21,"All providers",!,?11,"2",?21,"All providers without NPI numbers",!
"RTN","XUSNPIED",48,0)
 S DIR(0)="N^1:2",DIR("A")="Select a report option: ",DIR("B")="1" D ^DIR K DIR Q:Y'>0  S OPTION=+Y
"RTN","XUSNPIED",49,0)
 S DIR(0)="Y",DIR("B")="YES",DIR("A")="Sort by SERVICE/SECTION" D ^DIR K DIR S XUSSORT=+Y
"RTN","XUSNPIED",50,0)
 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","XUSNPIED",51,0)
 I $D(IO("Q")) S ZTSAVE("OPTION")="",ZTSAVE("XUSSORT")="",ZTIO=ION,ZTRTN="DQ^XUSNPIED",ZTDESC="NPI PRINT JOB FOR OPTION "_OPTION D ^%ZTLOAD W:$D(ZTSK) !,"Queued as Task "_ZTSK Q
"RTN","XUSNPIED",52,0)
 ;
"RTN","XUSNPIED",53,0)
DQ ; entry point for queued print job
"RTN","XUSNPIED",54,0)
 U IO D PRNTPROV(OPTION,XUSSORT)
"RTN","XUSNPIED",55,0)
 I IO'=IO(0) U IO D ^%ZISC
"RTN","XUSNPIED",56,0)
 D HOME^%ZIS
"RTN","XUSNPIED",57,0)
 Q
"RTN","XUSNPIED",58,0)
 ;
"RTN","XUSNPIED",59,0)
CBOLIST ; list ^ delimited output to CBO exchange mail group.
"RTN","XUSNPIED",60,0)
 N DATE,DOMAIN,ADDRESS,STATNAME,COUNT,DOB,GLOBLOC,GLOBOUT
"RTN","XUSNPIED",61,0)
 N IEN,NPI,PROVNAME,SSN,TAXDESCR,TAXONOMY,STATION,STATUS,OPTION
"RTN","XUSNPIED",62,0)
 I '$$PROD^XUPROD() Q  ; messages from production systems only
"RTN","XUSNPIED",63,0)
 S DATE=(1700+$E(DT,1,3))_"-"_$E(DT,4,5)_"-"_$E(DT,6,7)
"RTN","XUSNPIED",64,0)
 S DOMAIN=$G(^XTV(8989.3,1,0)),DOMAIN=$P(DOMAIN,U)
"RTN","XUSNPIED",65,0)
 S ADDRESS=$$GET1^DIQ(4.2,DOMAIN_",",.01)
"RTN","XUSNPIED",66,0)
 S STATION=$$GET1^DIQ(4.2,DOMAIN_",",5.5)
"RTN","XUSNPIED",67,0)
 S STATNAME="" S:STATION'="" STATNAME=$O(^DIC(4,"D",STATION,0)) S STATNAME=$S(STATNAME>0:$P(^DIC(4,STATNAME,0),U),1:"")
"RTN","XUSNPIED",68,0)
 S OPTION=3
"RTN","XUSNPIED",69,0)
 S GLOBLOC=$$GETDATA(OPTION,0) ; get most of data into location specified by GLOBLOC
"RTN","XUSNPIED",70,0)
 S COUNT=0,GLOBOUT=$NA(^TMP($J,"XUSNPIOUT")) K @GLOBOUT
"RTN","XUSNPIED",71,0)
 S COUNT=1,@GLOBOUT@(COUNT)="--START"
"RTN","XUSNPIED",72,0)
 S PROVNAME="" F  S PROVNAME=$O(@GLOBLOC@(PROVNAME)) Q:PROVNAME=""  S IEN=0 F  S IEN=$O(@GLOBLOC@(PROVNAME,IEN)) Q:IEN'>0  D
"RTN","XUSNPIED",73,0)
 . S TAXDESCR="" F  S TAXDESCR=$O(@GLOBLOC@(PROVNAME,IEN,TAXDESCR)) Q:TAXDESCR=""  S TAXONOMY=$P(^(TAXDESCR),U,4),NPI=$P(^(TAXDESCR),U,3) D
"RTN","XUSNPIED",74,0)
 . . S DOB=$P($G(^VA(200,IEN,1)),U,3),SSN=$E($$GET1^DIQ(200,IEN_",",9),6,9) S:DOB'="" DOB=$$DATE10(DOB) S STATUS=$$NPISTATS(IEN)
"RTN","XUSNPIED",75,0)
 . . S COUNT=COUNT+1,@GLOBOUT@(COUNT)=PROVNAME_U_STATION_U_NPI_U_SSN_U_DOB_U_TAXONOMY_U_TAXDESCR_U_DATE_U_STATUS
"RTN","XUSNPIED",76,0)
 . . Q
"RTN","XUSNPIED",77,0)
 . Q
"RTN","XUSNPIED",78,0)
 S COUNT=COUNT+1,@GLOBOUT@(COUNT)="--END"
"RTN","XUSNPIED",79,0)
 ; and generate mail message
"RTN","XUSNPIED",80,0)
 N XMTEXT,XMDUZ,XMY,XMSUB
"RTN","XUSNPIED",81,0)
 S XMTEXT=$E(GLOBOUT,1,$L(GLOBOUT)-1)_",",XMDUZ=0.5,XMY("VHACONPINPF@VA.GOV")=""
"RTN","XUSNPIED",82,0)
 S XMSUB="NPI LIST "_DATE_" FOR "_$S(STATION'="":STATION,1:ADDRESS)
"RTN","XUSNPIED",83,0)
 D ^XMD
"RTN","XUSNPIED",84,0)
 Q
"RTN","XUSNPIED",85,0)
 ;
"RTN","XUSNPIED",86,0)
PRNTPROV(OPTION,XUSSORT) ;
"RTN","XUSNPIED",87,0)
 ; ZEXCEPT: IOSL   KERNEL IO VARIABLE
"RTN","XUSNPIED",88,0)
 N PAGENUM,LINENUM,PROVNAME,TAXDESCR,TAXONOMY,SERVSECT,DIRUT,DTOUT
"RTN","XUSNPIED",89,0)
 N GLOBLOC,IEN,NPI,DATETIME,GLOBVALU,NCOUNT,GLOBLOC1
"RTN","XUSNPIED",90,0)
 S PAGENUM=0,LINENUM=0
"RTN","XUSNPIED",91,0)
 S DATETIME=$$NOW^XLFDT()
"RTN","XUSNPIED",92,0)
 S GLOBLOC1=$$GETDATA(OPTION,XUSSORT)
"RTN","XUSNPIED",93,0)
 S GLOBLOC=GLOBLOC1,SERVSECT="" D:'XUSSORT  I XUSSORT F  S SERVSECT=$O(@GLOBLOC1@(SERVSECT)) Q:SERVSECT=""  S GLOBLOC=$NA(@GLOBLOC1@(SERVSECT)) D  Q:$D(DIRUT)!$D(DTOUT)
"RTN","XUSNPIED",94,0)
 . D HEADER(OPTION,DATETIME,.PAGENUM,.LINENUM,XUSSORT,SERVSECT) Q:$D(DIRUT)!$D(DTOUT)
"RTN","XUSNPIED",95,0)
 . S PROVNAME="" F  S PROVNAME=$O(@GLOBLOC@(PROVNAME)) Q:PROVNAME=""  Q:$D(DIRUT)!$D(DTOUT)  S IEN=0 F  S IEN=$O(@GLOBLOC@(PROVNAME,IEN)) Q:IEN'>0  D  Q:$D(DIRUT)!$D(DTOUT)
"RTN","XUSNPIED",96,0)
 . . S NCOUNT=0
"RTN","XUSNPIED",97,0)
 . . S TAXDESCR="" F  S TAXDESCR=$O(@GLOBLOC@(PROVNAME,IEN,TAXDESCR)) Q:TAXDESCR=""  S GLOBVALU=^(TAXDESCR) D
"RTN","XUSNPIED",98,0)
 . . . S NCOUNT=NCOUNT+1 I NCOUNT=1 S NPI=$P(GLOBVALU,U,3) W !,PROVNAME,?33,$$ALIGNRGT(IEN,11),?49,NPI
"RTN","XUSNPIED",99,0)
 . . . S TAXONOMY=$P(GLOBVALU,U,4) W !,?6,TAXONOMY,"  ",TAXDESCR
"RTN","XUSNPIED",100,0)
 . . . Q
"RTN","XUSNPIED",101,0)
 . . S LINENUM=LINENUM+2 I LINENUM>(IOSL-4) D HEADER(OPTION,DATETIME,.PAGENUM,.LINENUM,XUSSORT,SERVSECT) Q:$D(DIRUT)!$D(DTOUT)
"RTN","XUSNPIED",102,0)
 . . Q
"RTN","XUSNPIED",103,0)
 . Q
"RTN","XUSNPIED",104,0)
 I '($D(DIRUT)!$D(DTOUT)) D
"RTN","XUSNPIED",105,0)
 . S PROVNAME="" I $O(@GLOBLOC@(PROVNAME))="" W !,?20,"* * * N O  D A T A  F O U N D * * *",!!
"RTN","XUSNPIED",106,0)
 . W !!,?27,"*** End of Report ***"
"RTN","XUSNPIED",107,0)
 . Q
"RTN","XUSNPIED",108,0)
 Q
"RTN","XUSNPIED",109,0)
 ;
"RTN","XUSNPIED",110,0)
HEADER(OPTION,DATETIME,PAGNOREF,LINNOREF,XUSSORT,SERVSECT) ;
"RTN","XUSNPIED",111,0)
 ; ZEXCEPT: IOF,IOST  KERNEL IO VARIABLES
"RTN","XUSNPIED",112,0)
 ; ZEXCEPT: DIRUT,DTOUT  NEWED IN CALLING PRNTPROV - INDICATE QUIT TO PRNTPROV
"RTN","XUSNPIED",113,0)
 N TEMPVAL,DIR,X,Y
"RTN","XUSNPIED",114,0)
 S PAGNOREF=PAGNOREF+1
"RTN","XUSNPIED",115,0)
 ; Don't page feed on the first page
"RTN","XUSNPIED",116,0)
 IF PAGNOREF>1 I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR I 'Y S DIRUT=1 Q
"RTN","XUSNPIED",117,0)
 IF PAGNOREF>1 W @IOF
"RTN","XUSNPIED",118,0)
 W:$E(IOST,1,2)'="C-" ! W "Active Provider Report",?48,$$FMTE^XLFDT(DATETIME),"  Page: ",PAGNOREF
"RTN","XUSNPIED",119,0)
 W !," Report Option: Provider List       Active Providers",$S(OPTION=2:" Without NPI Numbers",1:"")
"RTN","XUSNPIED",120,0)
 W !!,"Provider Name                          IEN",$S(OPTION'=2:"      NPI",1:"")
"RTN","XUSNPIED",121,0)
 W !,"     Taxonomy"
"RTN","XUSNPIED",122,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","XUSNPIED",123,0)
 S LINNOREF=6
"RTN","XUSNPIED",124,0)
 I XUSSORT W !,"SERVICE/SECTION: ",SERVSECT S LINNOREF=LINNOREF+1
"RTN","XUSNPIED",125,0)
 Q
"RTN","XUSNPIED",126,0)
 ;
"RTN","XUSNPIED",127,0)
GETDATA(OPTION,XUSSORT) ; get data for reports for providers
"RTN","XUSNPIED",128,0)
 N GLOBLOC,IEN,NPI,PROVNAME,TAXDESCR,TAXONOMY,SERVSECT
"RTN","XUSNPIED",129,0)
 S GLOBLOC=$NA(^TMP($J,"XUSNPIED")) K @GLOBLOC
"RTN","XUSNPIED",130,0)
 S IEN=0 F  S IEN=$O(^VA(200,IEN)) Q:IEN'>0  I $$ACTIVE^XUSER(IEN),$$NEEDSNPI(IEN)!($$HASNPI(IEN)&(OPTION'=2))!($$EXMPTNPI(IEN)&(OPTION'=2)) D
"RTN","XUSNPIED",131,0)
 . S PROVNAME=$$GET1^DIQ(200,IEN_",",.01),NPI=$$GETNPI(IEN),TAXONOMY=$$GETTAXON(IEN,.TAXDESCR) I TAXONOMY=-1 S TAXONOMY=" ",TAXDESCR=" "
"RTN","XUSNPIED",132,0)
 . I NPI="",$$EXMPTNPI(IEN) S NPI="EXEMPTED  "
"RTN","XUSNPIED",133,0)
 . I 'XUSSORT S @GLOBLOC@(PROVNAME,IEN,TAXDESCR)=PROVNAME_U_IEN_U_NPI_U_TAXONOMY_U_TAXDESCR
"RTN","XUSNPIED",134,0)
 . I XUSSORT S SERVSECT=$$GET1^DIQ(200,IEN_",",29) S:SERVSECT="" SERVSECT=" " S @GLOBLOC@(SERVSECT,PROVNAME,IEN,TAXDESCR)=PROVNAME_U_IEN_U_NPI_U_TAXONOMY_U_TAXDESCR
"RTN","XUSNPIED",135,0)
 . Q
"RTN","XUSNPIED",136,0)
 Q GLOBLOC
"RTN","XUSNPIED",137,0)
 ;
"RTN","XUSNPIED",138,0)
ALIGNRGT(TEXT,WIDTH) ; align text right in a specified width
"RTN","XUSNPIED",139,0)
 N RESULT
"RTN","XUSNPIED",140,0)
 S $P(RESULT," ",WIDTH)=" ",RESULT=RESULT_TEXT,RESULT=$E(RESULT,$L(RESULT)-WIDTH+1,$L(RESULT))
"RTN","XUSNPIED",141,0)
 Q RESULT
"RTN","XUSNPIED",142,0)
 ;
"RTN","XUSNPIED",143,0)
CHEKNPI(IEN) ; returns whether status is Needs, will check and update if not set
"RTN","XUSNPIED",144,0)
 N VALUE,FDA
"RTN","XUSNPIED",145,0)
 S VALUE=$$NPISTATS(IEN)
"RTN","XUSNPIED",146,0)
 I VALUE="",$$CHKTAXON(IEN) S FDA(200,IEN_",",41.98)="N" D FILE^DIE("","FDA") S VALUE="N"
"RTN","XUSNPIED",147,0)
 Q VALUE="N"
"RTN","XUSNPIED",148,0)
 ;
"RTN","XUSNPIED",149,0)
NEEDSNPI(IEN) ; returns whether current status is N
"RTN","XUSNPIED",150,0)
 Q $$NPISTATS(IEN)="N"
"RTN","XUSNPIED",151,0)
 ;
"RTN","XUSNPIED",152,0)
HASNPI(IEN) ; returns whether current status is D (Done)
"RTN","XUSNPIED",153,0)
 Q $$NPISTATS(IEN)="D"
"RTN","XUSNPIED",154,0)
 ;
"RTN","XUSNPIED",155,0)
EXMPTNPI(IEN) ; returns whether current status is E (Exempt)
"RTN","XUSNPIED",156,0)
 Q $$NPISTATS(IEN)="E"
"RTN","XUSNPIED",157,0)
 ;
"RTN","XUSNPIED",158,0)
NPISTATS(IEN) ; returns one letter status indicator
"RTN","XUSNPIED",159,0)
 Q $E($$GET1^DIQ(200,IEN_",",41.98))
"RTN","XUSNPIED",160,0)
 ;
"RTN","XUSNPIED",161,0)
GETNPI(IEN) ; returns current NPI value
"RTN","XUSNPIED",162,0)
 Q $$GET1^DIQ(200,IEN_",",41.99)
"RTN","XUSNPIED",163,0)
 ;
"RTN","XUSNPIED",164,0)
GETTAXON(IEN,DESCRREF) ; returns Taxonomy value (X12) and sets description in DESCRREF, otherwise -1
"RTN","XUSNPIED",165,0)
 N I,POINTER,TAXON
"RTN","XUSNPIED",166,0)
 S TAXON=-1,DESCRREF=" "
"RTN","XUSNPIED",167,0)
 F I=0:0 S I=$O(^VA(200,IEN,"USC1",I)) Q:I'>0  I $P(^(I,0),U,3)'>0 S POINTER=+^(0) S TAXON=$$GET1^DIQ(8932.1,POINTER_",",6),DESCRREF=$$GET1^DIQ(8932.1,POINTER_",",1) Q
"RTN","XUSNPIED",168,0)
 I TAXON="" S TAXON=-1,DESCRREF=" "
"RTN","XUSNPIED",169,0)
 Q TAXON
"RTN","XUSNPIED",170,0)
 ;
"RTN","XUSNPIED",171,0)
CHKTAXON(IEN,TAXONOMY) ; checks whether taxonomy value (X12) is in list of billable otherwise 0-1
"RTN","XUSNPIED",172,0)
 N DESCRIP,XUSGLOB
"RTN","XUSNPIED",173,0)
 I $G(TAXONOMY)="" S TAXONOMY=$$GETTAXON(IEN,.DESCRIP)
"RTN","XUSNPIED",174,0)
 S XUSGLOB=$$CHKGLOB()
"RTN","XUSNPIED",175,0)
 Q $D(@XUSGLOB@(TAXONOMY))
"RTN","XUSNPIED",176,0)
 ;
"RTN","XUSNPIED",177,0)
DATE10(DATE) ; returns date in mm/dd/yyyyy format
"RTN","XUSNPIED",178,0)
 Q $E(DATE,4,5)_"/"_$E(DATE,6,7)_"/"_(1700+$E(DATE,1,3))
"RTN","XUSNPIED",179,0)
 ;
"RTN","XUSNPIED",180,0)
POSTINIT ; runs post init
"RTN","XUSNPIED",181,0)
 D POSTINIT^XUSNPIE1
"RTN","XUSNPIED",182,0)
 Q
"RTN","XUSNPIED",183,0)
 ;
"RTN","XUSNPIED",184,0)
CBOQUEUE ; queues CBO List to run on first day of month
"RTN","XUSNPIED",185,0)
 D CBOQUEUE^XUSNPIE1
"RTN","XUSNPIED",186,0)
 Q
"RTN","XUSNPIUT")
0^5^B18048162^n/a
"RTN","XUSNPIUT",1,0)
XUSNPIUT ;JLI/FO-OAK - UNIT TEST ROUTINE FOR NPI WORK ;5/12/06  08:54
"RTN","XUSNPIUT",2,0)
 ;;8.0;KERNEL;**420**;Jul 10, 1995;Build 20
"RTN","XUSNPIUT",3,0)
 I $T(EN^XTMUNIT)'="" D EN^XTMUNIT("XUSNPIUT")
"RTN","XUSNPIUT",4,0)
 Q
"RTN","XUSNPIUT",5,0)
 ;
"RTN","XUSNPIUT",6,0)
ALIGNRGT ;
"RTN","XUSNPIUT",7,0)
 D CHKEQ^XTMUNIT($$ALIGNRGT^XUSNPIED("TEXT1",10),"     TEXT1","INCORRECT RETURN VALUE")
"RTN","XUSNPIUT",8,0)
 D CHKEQ^XTMUNIT($$ALIGNRGT^XUSNPIED("AA AA",6)," AA AA","INCORRECT RETURN VALUE")
"RTN","XUSNPIUT",9,0)
 Q
"RTN","XUSNPIUT",10,0)
 ;
"RTN","XUSNPIUT",11,0)
NEEDSNPI ;
"RTN","XUSNPIUT",12,0)
 N OLDVALUE,NEWVALUE,XUFDA,IENS
"RTN","XUSNPIUT",13,0)
 S IENS=DUZ_","
"RTN","XUSNPIUT",14,0)
 S OLDVALUE=$$GET1^DIQ(200,IENS,41.98)
"RTN","XUSNPIUT",15,0)
 K XUFDA S XUFDA(200,IENS,41.98)="@" D FILE^DIE("","XUFDA")
"RTN","XUSNPIUT",16,0)
 D CHKEQ^XTMUNIT($$NEEDSNPI^XUSNPIED(DUZ),0,"INCORRECT OR NO DATA")
"RTN","XUSNPIUT",17,0)
 ;
"RTN","XUSNPIUT",18,0)
 K XUFDA S XUFDA(200,IENS,41.98)="N" D FILE^DIE("","XUFDA")
"RTN","XUSNPIUT",19,0)
 D CHKEQ^XTMUNIT($$NEEDSNPI^XUSNPIED(DUZ),1,"INCORRECT ON NEEDS")
"RTN","XUSNPIUT",20,0)
 ;
"RTN","XUSNPIUT",21,0)
 K XUFDA S XUFDA(200,IENS,41.98)="E" D FILE^DIE("","XUFDA")
"RTN","XUSNPIUT",22,0)
 D CHKEQ^XTMUNIT($$NEEDSNPI^XUSNPIED(DUZ),0,"INCORRECT ON EXEMPT")
"RTN","XUSNPIUT",23,0)
 ;
"RTN","XUSNPIUT",24,0)
 K XUFDA S XUFDA(200,IENS,41.98)="D" D FILE^DIE("","XUFDA")
"RTN","XUSNPIUT",25,0)
 D CHKEQ^XTMUNIT($$NEEDSNPI^XUSNPIED(DUZ),0,"INCORRECT ON DONE")
"RTN","XUSNPIUT",26,0)
 ;
"RTN","XUSNPIUT",27,0)
 K XUFDA S XUFDA(200,IENS,41.98)=$S(OLDVALUE'="":OLDVALUE,1:"@")
"RTN","XUSNPIUT",28,0)
 Q
"RTN","XUSNPIUT",29,0)
 ;
"RTN","XUSNPIUT",30,0)
HASNPI ;
"RTN","XUSNPIUT",31,0)
 N OLDVALUE,NEWVALUE,XUFDA,IENS
"RTN","XUSNPIUT",32,0)
 S IENS=DUZ_","
"RTN","XUSNPIUT",33,0)
 S OLDVALUE=$$GET1^DIQ(200,IENS,41.98)
"RTN","XUSNPIUT",34,0)
 K XUFDA S XUFDA(200,IENS,41.98)="@" D FILE^DIE("","XUFDA")
"RTN","XUSNPIUT",35,0)
 D CHKEQ^XTMUNIT($$HASNPI^XUSNPIED(DUZ),0,"INCORRECT ON NO DATA")
"RTN","XUSNPIUT",36,0)
 ;
"RTN","XUSNPIUT",37,0)
 K XUFDA S XUFDA(200,IENS,41.98)="N" D FILE^DIE("","XUFDA")
"RTN","XUSNPIUT",38,0)
 D CHKEQ^XTMUNIT($$HASNPI^XUSNPIED(DUZ),0,"INCORRECT ON NEEDS")
"RTN","XUSNPIUT",39,0)
 ;
"RTN","XUSNPIUT",40,0)
 K XUFDA S XUFDA(200,IENS,41.98)="E" D FILE^DIE("","XUFDA")
"RTN","XUSNPIUT",41,0)
 D CHKEQ^XTMUNIT($$HASNPI^XUSNPIED(DUZ),0,"INCORRECT ON EXEMPT")
"RTN","XUSNPIUT",42,0)
 ;
"RTN","XUSNPIUT",43,0)
 K XUFDA S XUFDA(200,IENS,41.98)="D" D FILE^DIE("","XUFDA")
"RTN","XUSNPIUT",44,0)
 D CHKEQ^XTMUNIT($$HASNPI^XUSNPIED(DUZ),1,"INCORRECT ON DONE")
"RTN","XUSNPIUT",45,0)
 ;
"RTN","XUSNPIUT",46,0)
 K XUFDA S XUFDA(200,IENS,41.98)=$S(OLDVALUE'="":$E(OLDVALUE),1:"@")
"RTN","XUSNPIUT",47,0)
 Q
"RTN","XUSNPIUT",48,0)
 ;
"RTN","XUSNPIUT",49,0)
GETNPI ;
"RTN","XUSNPIUT",50,0)
 N I,VALUE
"RTN","XUSNPIUT",51,0)
 F I=0:0 S I=$O(^VA(200,I)) Q:I'>0  I $G(^VA(200,I,"NPI"))'="" Q
"RTN","XUSNPIUT",52,0)
 I I'>0 D FAIL^XTMUNIT("NO VALID DATA AVAILABLE") Q
"RTN","XUSNPIUT",53,0)
 S VALUE=$$GET1^DIQ(200,I_",",41.99)
"RTN","XUSNPIUT",54,0)
 D CHKEQ^XTMUNIT($$GETNPI^XUSNPIED(I),VALUE,"INCORRECT VALUE RETURNED")
"RTN","XUSNPIUT",55,0)
 Q
"RTN","XUSNPIUT",56,0)
 ;
"RTN","XUSNPIUT",57,0)
NPISTATS ;
"RTN","XUSNPIUT",58,0)
 N OLDVALUE,NEWVALUE,XUFDA,IENS
"RTN","XUSNPIUT",59,0)
 S IENS=DUZ_","
"RTN","XUSNPIUT",60,0)
 S OLDVALUE=$$GET1^DIQ(200,IENS,41.98)
"RTN","XUSNPIUT",61,0)
 K XUFDA S XUFDA(200,IENS,41.98)="@" D FILE^DIE("","XUFDA")
"RTN","XUSNPIUT",62,0)
 D CHKEQ^XTMUNIT($$NPISTATS^XUSNPIED(DUZ),"","INCORRECT ON NO DATA")
"RTN","XUSNPIUT",63,0)
 ;
"RTN","XUSNPIUT",64,0)
 K XUFDA S XUFDA(200,IENS,41.98)="N" D FILE^DIE("","XUFDA")
"RTN","XUSNPIUT",65,0)
 D CHKEQ^XTMUNIT($$NPISTATS^XUSNPIED(DUZ),"N","INCORRECT ON NEEDS")
"RTN","XUSNPIUT",66,0)
 ;
"RTN","XUSNPIUT",67,0)
 K XUFDA S XUFDA(200,IENS,41.98)="E" D FILE^DIE("","XUFDA")
"RTN","XUSNPIUT",68,0)
 D CHKEQ^XTMUNIT($$NPISTATS^XUSNPIED(DUZ),"E","INCORRECT ON EXEMPT")
"RTN","XUSNPIUT",69,0)
 ;
"RTN","XUSNPIUT",70,0)
 K XUFDA S XUFDA(200,IENS,41.98)="D" D FILE^DIE("","XUFDA")
"RTN","XUSNPIUT",71,0)
 D CHKEQ^XTMUNIT($$NPISTATS^XUSNPIED(DUZ),"D","INCORRECT ON DONE")
"RTN","XUSNPIUT",72,0)
 ;
"RTN","XUSNPIUT",73,0)
 K XUFDA S XUFDA(200,IENS,41.98)=$S(OLDVALUE'="":$E(OLDVALUE),1:"@")
"RTN","XUSNPIUT",74,0)
 Q
"RTN","XUSNPIUT",75,0)
 ;
"RTN","XUSNPIUT",76,0)
GETTAXON ;
"RTN","XUSNPIUT",77,0)
 N XUSGLOB,DONE,IEN,TAXON,PVAL,CODE,DESCRIP,TAXDESCR
"RTN","XUSNPIUT",78,0)
 S XUSGLOB=$$CHKGLOB^XUSNPIED()
"RTN","XUSNPIUT",79,0)
 S DONE=0 F IEN=0:0 Q:DONE  S IEN=$O(^VA(200,IEN)) Q:IEN'>0  F TAXON=0:0 S TAXON=$O(^VA(200,IEN,"USC1",TAXON)) Q:TAXON'>0  I $P(^(TAXON,0),U,3)'>0  S PVAL=$P(^(0),U),CODE=$$GET1^DIQ(8932.1,PVAL_",",6) I CODE'="",$D(@XUSGLOB@(CODE)) S DONE=1 Q
"RTN","XUSNPIUT",80,0)
 I 'DONE D FAIL^XTMUNIT("NO VALID TAXONOMY VALUES FOUND") Q
"RTN","XUSNPIUT",81,0)
 S TAXDESCR=$$GET1^DIQ(8932.1,PVAL_",",1)
"RTN","XUSNPIUT",82,0)
 S DESCRIP=""
"RTN","XUSNPIUT",83,0)
 I CODE'="" S TAXON=$$GETTAXON^XUSNPIED(IEN,.DESCRIP)
"RTN","XUSNPIUT",84,0)
 D CHKEQ^XTMUNIT(TAXON,CODE,"INCORRECT CODE RETURNED")
"RTN","XUSNPIUT",85,0)
 D CHKEQ^XTMUNIT(DESCRIP,TAXDESCR,"INCORRECT DESCRIPTION RETURNED")
"RTN","XUSNPIUT",86,0)
 Q
"RTN","XUSNPIUT",87,0)
 ;
"RTN","XUSNPIUT",88,0)
XTROU ;
"RTN","XUSNPIUT",89,0)
 ;
"RTN","XUSNPIUT",90,0)
XTENT ;
"RTN","XUSNPIUT",91,0)
 ;;ALIGNRGT;LEFT ALIGN TEXT IN A SPECIFIED WIDTH
"RTN","XUSNPIUT",92,0)
 ;;NEEDSNPI;CHECK ON NEEDS NPI STATUS
"RTN","XUSNPIUT",93,0)
 ;;HASNPI;CHECK ON WHETHER USER HAS NPI
"RTN","XUSNPIUT",94,0)
 ;;GETNPI;GET NPI VALUE FOR USER
"RTN","XUSNPIUT",95,0)
 ;;NPISTATS;GET NPI STATUS
"RTN","XUSNPIUT",96,0)
 ;;GETTAXON;GET TAXONOMY DATA
"UP",4,4.042,-1)
4^NPISTATUS
"UP",4,4.042,0)
4.042
"UP",200,200.042,-1)
200^NPISTATUS
"UP",200,200.042,0)
200.042
"VER")
8.0^22.0
"^DD",4,4,41.99,0)
NPI^RFX^^NPI;1^K:$L(X)>10!($L(X)<10)!'($$CHKDGT^XUSNPIE1(X)) X
"^DD",4,4,41.99,1,0)
^.1
"^DD",4,4,41.99,1,1,0)
4^ANPI
"^DD",4,4,41.99,1,1,1)
S ^DIC(4,"ANPI",$E(X,1,30),DA)=""
"^DD",4,4,41.99,1,1,2)
K ^DIC(4,"ANPI",$E(X,1,30),DA)
"^DD",4,4,41.99,1,1,"%D",0)
^^1^1^3060301^
"^DD",4,4,41.99,1,1,"%D",1,0)
File entries by NPI.
"^DD",4,4,41.99,1,1,"DT")
3060301
"^DD",4,4,41.99,3)
Answer must be 10 characters in length.
"^DD",4,4,41.99,21,0)
^^2^2^3060509^
"^DD",4,4,41.99,21,1,0)
Current Unique National Provider ID. A unique meaningless integer assigned
"^DD",4,4,41.99,21,2,0)
to providers.
"^DD",4,4,41.99,"DEL",11,0)
D:'$D(XUMF) EN^DDIOL("Entries must be inactivated via the Master File Server(MFS).","","!?5,$C(7)") I $D(XUMF)
"^DD",4,4,41.99,"DT")
3060301
"^DD",4,4,42,0)
EFFECTIVE DATE/TIME^4.042D^^NPISTATUS;0
"^DD",4,4.042,0)
EFFECTIVE DATE/TIME SUB-FIELD^^.03^3
"^DD",4,4.042,0,"DT")
3060301
"^DD",4,4.042,0,"IX","AC",4.042,.03)

"^DD",4,4.042,0,"IX","B",4.042,.01)

"^DD",4,4.042,0,"IX","C",4.042,.03)

"^DD",4,4.042,0,"NM","EFFECTIVE DATE/TIME")

"^DD",4,4.042,0,"UP")
4
"^DD",4,4.042,.01,0)
EFFECTIVE DATE/TIME^DX^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",4,4.042,.01,1,0)
^.1
"^DD",4,4.042,.01,1,1,0)
4.042^B
"^DD",4,4.042,.01,1,1,1)
S ^DIC(4,DA(1),"NPISTATUS","B",$E(X,1,30),DA)=""
"^DD",4,4.042,.01,1,1,2)
K ^DIC(4,DA(1),"NPISTATUS","B",$E(X,1,30),DA)
"^DD",4,4.042,.01,3)
Enter the date/time of the last change to this NPI.
"^DD",4,4.042,.01,21,0)
^.001^1^1^3060508^^
"^DD",4,4.042,.01,21,1,0)
This field contains the date and time of the last change to the NPI field.
"^DD",4,4.042,.01,"DT")
3060301
"^DD",4,4.042,.02,0)
STATUS^RSI^1:ACTIVE;0:INACTIVE;^0;2^Q
"^DD",4,4.042,.02,21,0)
^.001^4^4^3060314^^
"^DD",4,4.042,.02,21,1,0)
The Status of an NPI is either 'ACTIVE' or 'INACTIVE'. I 'ACTIVE' then 
"^DD",4,4.042,.02,21,2,0)
the NPI will be accessible by end-users to document a particular provider.
"^DD",4,4.042,.02,21,3,0)
If 'INACTIVE', then the NPI will only be accessible by the application to
"^DD",4,4.042,.02,21,4,0)
display legacy data.
"^DD",4,4.042,.02,"DT")
3060301
"^DD",4,4.042,.03,0)
NPI^RFX^^0;3^K:$L(X)>10!($L(X)<10)!'($$CHKDGT^XUSNPIE1(X)) X
"^DD",4,4.042,.03,1,0)
^.1
"^DD",4,4.042,.03,1,1,0)
4.042^C
"^DD",4,4.042,.03,1,1,1)
S ^DIC(4,DA(1),"NPISTATUS","C",$E(X,1,30),DA)=""
"^DD",4,4.042,.03,1,1,2)
K ^DIC(4,DA(1),"NPISTATUS","C",$E(X,1,30),DA)
"^DD",4,4.042,.03,1,1,"DT")
3060321
"^DD",4,4.042,.03,1,2,0)
4.042^AC^MUMPS
"^DD",4,4.042,.03,1,2,1)
D SET1^XUSNPIE1(DA(1),X)
"^DD",4,4.042,.03,1,2,2)
Q
"^DD",4,4.042,.03,1,2,3)
Special Trigger
"^DD",4,4.042,.03,1,2,"%D",0)
^.101^1^1^3060512^^^^
"^DD",4,4.042,.03,1,2,"%D",1,0)
his Special x-ref sets the NPI field (#41.99).
"^DD",4,4.042,.03,1,2,"DT")
3060512
"^DD",4,4.042,.03,3)
Answer must be 10 characters in length.
"^DD",4,4.042,.03,21,0)
^^2^2^3060301^
"^DD",4,4.042,.03,21,1,0)
Unique National Provider ID. A unique meaningless integer assigned to
"^DD",4,4.042,.03,21,2,0)
providers. 
"^DD",4,4.042,.03,"DT")
3060512
"^DD",200,200,41.98,0)
NPI ENTRY STATUS^S^N:NEEDS ENTRY;E:EXEMPT;D:DONE;^NPI;2^Q
"^DD",200,200,41.98,3)
This field is filled in automatically if needed.
"^DD",200,200,41.98,21,0)
^^10^10^3060508^
"^DD",200,200,41.98,21,1,0)
This field is used in tracking the entry status of NPI d ata for those
"^DD",200,200,41.98,21,2,0)
providers who require an NPI.  The providers needing this value are
"^DD",200,200,41.98,21,3,0)
identified based on data entered in the PERSON CLASS subfile which
"^DD",200,200,41.98,21,4,0)
indicates providers that may be related to billing activities.
"^DD",200,200,41.98,21,5,0)
 
"^DD",200,200,41.98,21,6,0)
The value is initially set to N or NEEDS ENTRY.  It can be changed to E or
"^DD",200,200,41.98,21,7,0)
EXEMPT for individuals who have been identified, but who due to
"^DD",200,200,41.98,21,8,0)
administrative activities, etc., will not be involved in activities
"^DD",200,200,41.98,21,9,0)
requiring billing.  When the NPI value is entered, the value is changed to
"^DD",200,200,41.98,21,10,0)
D or DONE.
"^DD",200,200,41.98,"DT")
3060508
"^DD",200,200,41.99,0)
NPI^RFX^^NPI;1^K:$L(X)>10!($L(X)<10)!'($$CHKDGT^XUSNPIE1(X)) X
"^DD",200,200,41.99,1,0)
^.1^^-1
"^DD",200,200,41.99,1,1,0)
200^ANPI
"^DD",200,200,41.99,1,1,1)
S ^VA(200,"ANPI",$E(X,1,30),DA)=""
"^DD",200,200,41.99,1,1,2)
K ^VA(200,"ANPI",$E(X,1,30),DA)
"^DD",200,200,41.99,1,1,"%D",0)
^^1^1^3060301^
"^DD",200,200,41.99,1,1,"%D",1,0)
File entries by NPI.
"^DD",200,200,41.99,1,1,"DT")
3060301
"^DD",200,200,41.99,3)
Answer must be 10 characters in length.
"^DD",200,200,41.99,21,0)
^^2^2^3060509^
"^DD",200,200,41.99,21,1,0)
Current Unique National Provider ID. A unique meaningless integer assigned
"^DD",200,200,41.99,21,2,0)
to providers.
"^DD",200,200,41.99,"DT")
3060512
"^DD",200,200,42,0)
EFFECTIVE DATE/TIME^200.042D^^NPISTATUS;0
"^DD",200,200,42,"DT")
3060425
"^DD",200,200.042,0)
EFFECTIVE DATE/TIME SUB-FIELD^^.03^3
"^DD",200,200.042,0,"DT")
3060301
"^DD",200,200.042,0,"IX","AC",200.042,.03)

"^DD",200,200.042,0,"IX","B",200.042,.01)

"^DD",200,200.042,0,"IX","C",200.042,.03)

"^DD",200,200.042,0,"NM","EFFECTIVE DATE/TIME")

"^DD",200,200.042,0,"UP")
200
"^DD",200,200.042,.01,0)
EFFECTIVE DATE/TIME^RDX^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",200,200.042,.01,1,0)
^.1
"^DD",200,200.042,.01,1,1,0)
200.042^B
"^DD",200,200.042,.01,1,1,1)
S ^VA(200,DA(1),"NPISTATUS","B",$E(X,1,30),DA)=""
"^DD",200,200.042,.01,1,1,2)
K ^VA(200,DA(1),"NPISTATUS","B",$E(X,1,30),DA)
"^DD",200,200.042,.01,3)
Enter the date/time of the last change to this NPI.
"^DD",200,200.042,.01,21,0)
^^1^1^3060425^
"^DD",200,200.042,.01,21,1,0)
This field contains the date and time of the last change to the NPI field.
"^DD",200,200.042,.01,"DT")
3060425
"^DD",200,200.042,.02,0)
STATUS^RSI^1:ACTIVE;0:INACTIVE;^0;2^Q
"^DD",200,200.042,.02,21,0)
^.001^4^4^3060405^^^
"^DD",200,200.042,.02,21,1,0)
The Status of an NPI is either 'ACTIVE' or 'INACTIVE'. I 'ACTIVE' then 
"^DD",200,200.042,.02,21,2,0)
the NPI will be accessible by end-users to document a particular 
"^DD",200,200.042,.02,21,3,0)
provider. If 'INACTIVE', then the NPI will only be accessible by the 
"^DD",200,200.042,.02,21,4,0)
application to display legacy data.
"^DD",200,200.042,.02,"DT")
3060301
"^DD",200,200.042,.03,0)
NPI^RFX^^0;3^K:$L(X)>10!($L(X)<10)!'($$CHKDGT^XUSNPIE1(X)) X
"^DD",200,200.042,.03,1,0)
^.1
"^DD",200,200.042,.03,1,1,0)
200.042^C
"^DD",200,200.042,.03,1,1,1)
S ^VA(200,DA(1),"NPISTATUS","C",$E(X,1,30),DA)=""
"^DD",200,200.042,.03,1,1,2)
K ^VA(200,DA(1),"NPISTATUS","C",$E(X,1,30),DA)
"^DD",200,200.042,.03,1,1,"DT")
3060301
"^DD",200,200.042,.03,1,2,0)
200.042^AC^MUMPS
"^DD",200,200.042,.03,1,2,1)
D SET^XUSNPIE1(DA(1),X)
"^DD",200,200.042,.03,1,2,2)
Q
"^DD",200,200.042,.03,1,2,3)
Special Trigger
"^DD",200,200.042,.03,1,2,"%D",0)
^.101^1^1^3060511^^
"^DD",200,200.042,.03,1,2,"%D",1,0)
This Special x-ref sets the NPI field (#41.99).
"^DD",200,200.042,.03,1,2,"DT")
3060511
"^DD",200,200.042,.03,3)
Answer must be 10 characters in length.
"^DD",200,200.042,.03,21,0)
^^2^2^3060301^
"^DD",200,200.042,.03,21,1,0)
Unique National Provider ID. A unique meaningless integer assigned to 
"^DD",200,200.042,.03,21,2,0)
providers.
"^DD",200,200.042,.03,"DT")
3060511
"BLD",941,6)
^343
**END**
**END**
