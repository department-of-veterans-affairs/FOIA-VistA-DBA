Released KMPD*2*4 SEQ #4
Extracted from mail message
**KIDS**:KMPD*2.0*4^

**INSTALL NAME**
KMPD*2.0*4
"BLD",6097,0)
KMPD*2.0*4^CAPACITY MANAGEMENT TOOLS^0^3051117^y
"BLD",6097,1,0)
^^1^1^3050613^
"BLD",6097,1,1,0)
Patch KMPD*2*4
"BLD",6097,4,0)
^9.64PA^^
"BLD",6097,6)
19^
"BLD",6097,"KRN",0)
^9.67PA^8989.52^19
"BLD",6097,"KRN",.4,0)
.4
"BLD",6097,"KRN",.401,0)
.401
"BLD",6097,"KRN",.402,0)
.402
"BLD",6097,"KRN",.403,0)
.403
"BLD",6097,"KRN",.5,0)
.5
"BLD",6097,"KRN",.84,0)
.84
"BLD",6097,"KRN",3.6,0)
3.6
"BLD",6097,"KRN",3.8,0)
3.8
"BLD",6097,"KRN",9.2,0)
9.2
"BLD",6097,"KRN",9.8,0)
9.8
"BLD",6097,"KRN",9.8,"NM",0)
^9.68A^16^14
"BLD",6097,"KRN",9.8,"NM",1,0)
KMPDUTL^^0^B11698586
"BLD",6097,"KRN",9.8,"NM",2,0)
KMPDTP3^^0^B20017179
"BLD",6097,"KRN",9.8,"NM",3,0)
KMPDTP5^^0^B27612696
"BLD",6097,"KRN",9.8,"NM",4,0)
KMPDTP7^^0^B23266885
"BLD",6097,"KRN",9.8,"NM",5,0)
KMPDTP6^^0^B26949846
"BLD",6097,"KRN",9.8,"NM",7,0)
KMPDUT1^^0^B4718329
"BLD",6097,"KRN",9.8,"NM",8,0)
KMPDTM^^0^B22150434
"BLD",6097,"KRN",9.8,"NM",9,0)
KMPDHU01^^0^B37420269
"BLD",6097,"KRN",9.8,"NM",10,0)
KMPDTU01^^0^B21675708
"BLD",6097,"KRN",9.8,"NM",11,0)
KMPDUTL2^^0^B10409339
"BLD",6097,"KRN",9.8,"NM",13,0)
KMPDTU10^^0^B33222642
"BLD",6097,"KRN",9.8,"NM",14,0)
KMPDTP1^^0^B15743524
"BLD",6097,"KRN",9.8,"NM",15,0)
KMPDTP2^^0^B21316448
"BLD",6097,"KRN",9.8,"NM",16,0)
KMPDTP4^^0^B27036478
"BLD",6097,"KRN",9.8,"NM","B","KMPDHU01",9)

"BLD",6097,"KRN",9.8,"NM","B","KMPDTM",8)

"BLD",6097,"KRN",9.8,"NM","B","KMPDTP1",14)

"BLD",6097,"KRN",9.8,"NM","B","KMPDTP2",15)

"BLD",6097,"KRN",9.8,"NM","B","KMPDTP3",2)

"BLD",6097,"KRN",9.8,"NM","B","KMPDTP4",16)

"BLD",6097,"KRN",9.8,"NM","B","KMPDTP5",3)

"BLD",6097,"KRN",9.8,"NM","B","KMPDTP6",5)

"BLD",6097,"KRN",9.8,"NM","B","KMPDTP7",4)

"BLD",6097,"KRN",9.8,"NM","B","KMPDTU01",10)

"BLD",6097,"KRN",9.8,"NM","B","KMPDTU10",13)

"BLD",6097,"KRN",9.8,"NM","B","KMPDUT1",7)

"BLD",6097,"KRN",9.8,"NM","B","KMPDUTL",1)

"BLD",6097,"KRN",9.8,"NM","B","KMPDUTL2",11)

"BLD",6097,"KRN",19,0)
19
"BLD",6097,"KRN",19.1,0)
19.1
"BLD",6097,"KRN",101,0)
101
"BLD",6097,"KRN",409.61,0)
409.61
"BLD",6097,"KRN",771,0)
771
"BLD",6097,"KRN",870,0)
870
"BLD",6097,"KRN",8989.51,0)
8989.51
"BLD",6097,"KRN",8989.52,0)
8989.52
"BLD",6097,"KRN",8994,0)
8994
"BLD",6097,"KRN","B",.4,.4)

"BLD",6097,"KRN","B",.401,.401)

"BLD",6097,"KRN","B",.402,.402)

"BLD",6097,"KRN","B",.403,.403)

"BLD",6097,"KRN","B",.5,.5)

"BLD",6097,"KRN","B",.84,.84)

"BLD",6097,"KRN","B",3.6,3.6)

"BLD",6097,"KRN","B",3.8,3.8)

"BLD",6097,"KRN","B",9.2,9.2)

"BLD",6097,"KRN","B",9.8,9.8)

"BLD",6097,"KRN","B",19,19)

"BLD",6097,"KRN","B",19.1,19.1)

"BLD",6097,"KRN","B",101,101)

"BLD",6097,"KRN","B",409.61,409.61)

"BLD",6097,"KRN","B",771,771)

"BLD",6097,"KRN","B",870,870)

"BLD",6097,"KRN","B",8989.51,8989.51)

"BLD",6097,"KRN","B",8989.52,8989.52)

"BLD",6097,"KRN","B",8994,8994)

"BLD",6097,"QUES",0)
^9.62^^
"BLD",6097,"REQB",0)
^9.611^1^1
"BLD",6097,"REQB",1,0)
KMPD*2.0*3^1
"BLD",6097,"REQB","B","KMPD*2.0*3",1)

"MBREQ")
0
"PKG",556,-1)
1^1
"PKG",556,0)
CAPACITY MANAGEMENT TOOLS^KMPD^Capacity Management Tools
"PKG",556,22,0)
^9.49I^1^1
"PKG",556,22,1,0)
2.0^3040331^3040315^10292
"PKG",556,22,1,"PAH",1,0)
4^3051117^10292
"PKG",556,22,1,"PAH",1,1,0)
^^1^1^3051117
"PKG",556,22,1,"PAH",1,1,1,0)
Patch KMPD*2*4
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
14
"RTN","KMPDHU01")
0^9^B37420269
"RTN","KMPDHU01",1,0)
KMPDHU01 ;OAK/RAK - CM Tools HL7 Utility ;6/21/05  10:12
"RTN","KMPDHU01",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**4**;Mar 22, 2002
"RTN","KMPDHU01",3,0)
 ;
"RTN","KMPDHU01",4,0)
WEEKLY(KMPDT,KMPDPRGE) ;-- compress daily stats to weekly
"RTN","KMPDHU01",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU01",6,0)
 ; KMPDT.... Compression date in internal fileman formt.  This date
"RTN","KMPDHU01",7,0)
 ;           must be a Sunday.  It represents the date from which the
"RTN","KMPDHU01",8,0)
 ;           previous weeks data should be compressed. 
"RTN","KMPDHU01",9,0)
 ;           Example: if KMPDT = 2981011  then compression will begin
"RTN","KMPDHU01",10,0)
 ;                    on 2981010 (KMPDT-1)
"RTN","KMPDHU01",11,0)
 ; KMPDPRGE. 0 - do not purge data from file #8973.1
"RTN","KMPDHU01",12,0)
 ;           1 - purge data from file #8973.1
"RTN","KMPDHU01",13,0)
 ;
"RTN","KMPDHU01",14,0)
 ; Every Sunday compress the daily stats in file #8973.1 into weekly
"RTN","KMPDHU01",15,0)
 ; and upload the data to the CM RUM National Database
"RTN","KMPDHU01",16,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU01",17,0)
 ;
"RTN","KMPDHU01",18,0)
 Q:'$G(KMPDT)
"RTN","KMPDHU01",19,0)
 S KMPDPRGE=+$G(KMPDPRGE)
"RTN","KMPDHU01",20,0)
 ;
"RTN","KMPDHU01",21,0)
 N DATA,DATE,DDLDT,DELDATE,EN,END,HOURS,I,IEN,J,NM,PT,SITE,STR,START,SYNC
"RTN","KMPDHU01",22,0)
 ;
"RTN","KMPDHU01",23,0)
 ; quit if not sunday.
"RTN","KMPDHU01",24,0)
 Q:$$DOW^XLFDT(KMPDT,1)
"RTN","KMPDHU01",25,0)
 ; storage  processed
"RTN","KMPDHU01",26,0)
 K ^TMP($J),^TMP("KMPDHU01",$J)
"RTN","KMPDHU01",27,0)
 ; site info.
"RTN","KMPDHU01",28,0)
 S SITE=$$SITE^VASITE Q:SITE=""
"RTN","KMPDHU01",29,0)
 S DATE=KMPDT
"RTN","KMPDHU01",30,0)
 S (START,END)="",STR=$$NOW^XLFDT
"RTN","KMPDHU01",31,0)
 ; days to keep - this is represented by 'weeks to keep' in file #8973 
"RTN","KMPDHU01",32,0)
 ; so must be converted to days
"RTN","KMPDHU01",33,0)
 S DDLDT=$P($G(^KMPD(8973,1,3)),U,11)*7
"RTN","KMPDHU01",34,0)
 S:'DDLDT DDLDT=14
"RTN","KMPDHU01",35,0)
 ; Date to begin deletion.
"RTN","KMPDHU01",36,0)
 S DELDATE=$$FMADD^XLFDT(KMPDT,-DDLDT)
"RTN","KMPDHU01",37,0)
 ;
"RTN","KMPDHU01",38,0)
 W:'$D(ZTQUEUED) !,"Compressing data into weekly format..."
"RTN","KMPDHU01",39,0)
 ; Reverse $order to get previous dates.
"RTN","KMPDHU01",40,0)
 F  S DATE=$O(^KMPD(8973.1,"B",DATE),-1) Q:'DATE  D 
"RTN","KMPDHU01",41,0)
 .; If DATE is saturday set START and END dates and kill TMPARRY.
"RTN","KMPDHU01",42,0)
 .I $$DOW^XLFDT(DATE,1)=6 D 
"RTN","KMPDHU01",43,0)
 ..S END=DATE,START=$$FMADD^XLFDT(DATE,-6)
"RTN","KMPDHU01",44,0)
 ..K ^TMP($J)
"RTN","KMPDHU01",45,0)
 .Q:'START
"RTN","KMPDHU01",46,0)
 .S SYNC=0
"RTN","KMPDHU01",47,0)
 .F  S SYNC=$O(^KMPD(8973.1,"ASYNC",DATE,SYNC)) Q:'SYNC  S IEN=0 D 
"RTN","KMPDHU01",48,0)
 ..F  S IEN=$O(^KMPD(8973.1,"ASYNC",DATE,SYNC,IEN)) Q:'IEN  D 
"RTN","KMPDHU01",49,0)
 ...Q:'$D(^KMPD(8973.1,IEN,0))
"RTN","KMPDHU01",50,0)
 ...; data nodes into DATA() array.
"RTN","KMPDHU01",51,0)
 ...S DATA(0)=^KMPD(8973.1,IEN,0) F I=1,1.1,1.2,2,2.1,2.2,5.1:.1:5.5,5.7,5.8,5.9,99,99.2,99.3,99.5 S DATA(I)=$G(^(I))
"RTN","KMPDHU01",52,0)
 ...; quit if data has already been sent to national database
"RTN","KMPDHU01",53,0)
 ...Q:$P(DATA(0),U,2)
"RTN","KMPDHU01",54,0)
 ...; quit if no namespace or protocol
"RTN","KMPDHU01",55,0)
 ...S NM=$P(DATA(0),U,3),PT=$P(DATA(0),U,5) Q:NM=""!(PT="")
"RTN","KMPDHU01",56,0)
 ...; change first piece to start date (this is for national database)
"RTN","KMPDHU01",57,0)
 ...S $P(DATA(0),U)=START
"RTN","KMPDHU01",58,0)
 ...; second piece not applicable to national database
"RTN","KMPDHU01",59,0)
 ...S $P(DATA(0),U,2)=""
"RTN","KMPDHU01",60,0)
 ...D @$S(SYNC=2:"ASYNC(IEN,NM,PT,.DATA)",1:"SYNC(IEN,NM,PT,.DATA)")
"RTN","KMPDHU01",61,0)
 ...; add to processed array.
"RTN","KMPDHU01",62,0)
 ...S ^TMP("KMPDHU01",$J,IEN)=""
"RTN","KMPDHU01",63,0)
 .;
"RTN","KMPDHU01",64,0)
 .; Back to DATE level.
"RTN","KMPDHU01",65,0)
 .; If START then transmit data.
"RTN","KMPDHU01",66,0)
 .I DATE=START I $D(^TMP($J)) D TRANSMIT K ^TMP($J)
"RTN","KMPDHU01",67,0)
 ;
"RTN","KMPDHU01",68,0)
 D:$D(^TMP($J)) TRANSMIT
"RTN","KMPDHU01",69,0)
 K ^TMP($J)
"RTN","KMPDHU01",70,0)
 ;
"RTN","KMPDHU01",71,0)
 ; update field .02 (SENT TO CM NATIONAL DATABASE) to 'YES' for all
"RTN","KMPDHU01",72,0)
 ; processed entries.
"RTN","KMPDHU01",73,0)
 W:'$D(ZTQUEUED) !!,"Updating records to reflect transmission..."
"RTN","KMPDHU01",74,0)
 S IEN=0
"RTN","KMPDHU01",75,0)
 F  S IEN=$O(^TMP("KMPDHU01",$J,IEN)) Q:'IEN  D 
"RTN","KMPDHU01",76,0)
 .K FDA,ERROR W:'$D(ZTQUEUED) "."
"RTN","KMPDHU01",77,0)
 .S FDA($J,8973.1,IEN_",",.02)=1
"RTN","KMPDHU01",78,0)
 .D FILE^DIE("","FDA($J)","ERROR")
"RTN","KMPDHU01",79,0)
 ;
"RTN","KMPDHU01",80,0)
 K ^TMP("KMPDHU01",$J)
"RTN","KMPDHU01",81,0)
 ;
"RTN","KMPDHU01",82,0)
 S STR=$$NOW^XLFDT
"RTN","KMPDHU01",83,0)
 ; leave two complete weeks of data in file #8973.1
"RTN","KMPDHU01",84,0)
 D:KMPDPRGE PURGE^KMPDUTL3(DELDATE)
"RTN","KMPDHU01",85,0)
 D STRSTP^KMPDUTL2(3,2,2,STR)
"RTN","KMPDHU01",86,0)
 ;
"RTN","KMPDHU01",87,0)
 W:'$D(ZTQUEUED) !!,"Finished!"
"RTN","KMPDHU01",88,0)
 ;
"RTN","KMPDHU01",89,0)
 Q
"RTN","KMPDHU01",90,0)
 ;
"RTN","KMPDHU01",91,0)
ASYNC(IEN,NM,PR,DATA) ; compile asynchronous stats
"RTN","KMPDHU01",92,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU01",93,0)
 ; IEN..... Ien for file #8973.1 (CM HL7 DATA)
"RTN","KMPDHU01",94,0)
 ; NM...... Namespace (free text)
"RTN","KMPDHU01",95,0)
 ; PR...... Protocol (free text)
"RTN","KMPDHU01",96,0)
 ; DATA().. Array containing node data for file #8973.1 (CM HL7 DATA)
"RTN","KMPDHU01",97,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU01",98,0)
 Q:'$G(IEN)
"RTN","KMPDHU01",99,0)
 Q:$G(NM)=""
"RTN","KMPDHU01",100,0)
 Q:$G(PR)=""
"RTN","KMPDHU01",101,0)
 Q:'$D(DATA)
"RTN","KMPDHU01",102,0)
 N CS,I,J
"RTN","KMPDHU01",103,0)
 ; quit if no contact site
"RTN","KMPDHU01",104,0)
 S CS=$P(DATA(99.2),U,12) Q:CS=""
"RTN","KMPDHU01",105,0)
 S ^TMP($J,START,NM,PR,CS,0)=DATA(0)
"RTN","KMPDHU01",106,0)
 ; node 99.1 is for national database (end date^facility name)
"RTN","KMPDHU01",107,0)
 S DATA(99.1)=END_"^"_$P(SITE,U,2)_"^"_$P(SITE,U,3)
"RTN","KMPDHU01",108,0)
 ; pieces 6 through 13 of node 99.2 contain text
"RTN","KMPDHU01",109,0)
 F I=6:1:13 S $P(^TMP($J,START,NM,PR,CS,99.2),U,I)=$P(DATA(99.2),U,I)
"RTN","KMPDHU01",110,0)
 W:'$D(ZTQUEUED) "."
"RTN","KMPDHU01",111,0)
 F I=0:0 S I=$O(DATA(I)) Q:'I  D 
"RTN","KMPDHU01",112,0)
 .; 99.1 data not to be totalled
"RTN","KMPDHU01",113,0)
 .I I=99.1 F J=1:1:3 S $P(^TMP($J,START,NM,PR,CS,I),U,J)=$P(DATA(I),U,J)
"RTN","KMPDHU01",114,0)
 .; Add data to get weekly totals.
"RTN","KMPDHU01",115,0)
 .E  F J=1:1:$S($E(I)=5:24,I=99:6,I=99.2:3,I=99.3:9,99.5:3,1:9) D 
"RTN","KMPDHU01",116,0)
 ..S $P(^TMP($J,START,NM,PR,CS,I),U,J)=$P($G(^TMP($J,START,NM,PR,CS,I)),U,J)+$P(DATA(I),U,J)
"RTN","KMPDHU01",117,0)
 ;
"RTN","KMPDHU01",118,0)
 Q
"RTN","KMPDHU01",119,0)
 ;
"RTN","KMPDHU01",120,0)
SYNC(IEN,NM,PR,DATA) ; compile asynchronous stats
"RTN","KMPDHU01",121,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU01",122,0)
 ; IEN..... Ien for file #8973.1 (CM HL7 DATA)
"RTN","KMPDHU01",123,0)
 ; NM...... Namespace (free text)
"RTN","KMPDHU01",124,0)
 ; PR...... Protocol (free text)
"RTN","KMPDHU01",125,0)
 ; DATA().. Array containing node data for file #8973.1 (CM HL7 DATA)
"RTN","KMPDHU01",126,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU01",127,0)
 Q:'$G(IEN)
"RTN","KMPDHU01",128,0)
 Q:$G(NM)=""
"RTN","KMPDHU01",129,0)
 Q:$G(PR)=""
"RTN","KMPDHU01",130,0)
 Q:'$D(DATA)
"RTN","KMPDHU01",131,0)
 N I,J
"RTN","KMPDHU01",132,0)
 S ^TMP($J,START,NM,PR,0)=DATA(0)
"RTN","KMPDHU01",133,0)
 ; node 99.1 is for national database (end date^facility name)
"RTN","KMPDHU01",134,0)
 S DATA(99.1)=END_"^"_$P(SITE,U,2)_"^"_$P(SITE,U,3)
"RTN","KMPDHU01",135,0)
 ; pieces 6 through 13 of node 99.2 contain text
"RTN","KMPDHU01",136,0)
 F I=6:1:13 S $P(^TMP($J,START,NM,PR,99.2),U,I)=$P(DATA(99.2),U,I)
"RTN","KMPDHU01",137,0)
 W:'$D(ZTQUEUED) "."
"RTN","KMPDHU01",138,0)
 F I=0:0 S I=$O(DATA(I)) Q:'I  D 
"RTN","KMPDHU01",139,0)
 .; 99.1 data not to be totalled
"RTN","KMPDHU01",140,0)
 .I I=99.1 F J=1:1:3 S $P(^TMP($J,START,NM,PR,I),U,J)=$P(DATA(I),U,J)
"RTN","KMPDHU01",141,0)
 .; Add data to get weekly totals.
"RTN","KMPDHU01",142,0)
 .E  F J=1:1:$S(I=99:6,1:9) D 
"RTN","KMPDHU01",143,0)
 ..S $P(^TMP($J,START,NM,PR,I),U,J)=$P($G(^TMP($J,START,NM,PR,I)),U,J)+$P(DATA(I),U,J)
"RTN","KMPDHU01",144,0)
 Q
"RTN","KMPDHU01",145,0)
 ;
"RTN","KMPDHU01",146,0)
TRANSMIT ;-- format TMPARRY data, put into e-mail and send to cm.
"RTN","KMPDHU01",147,0)
 ;
"RTN","KMPDHU01",148,0)
 Q:'$D(^TMP($J))
"RTN","KMPDHU01",149,0)
 ;
"RTN","KMPDHU01",150,0)
 N C,CPU,HRSDAYS,I,IEN,LN,N,P,S,TL,TRANSTO,XMSUB,X,XMTEXT,XMY,XMZ,Y,Z
"RTN","KMPDHU01",151,0)
 ;
"RTN","KMPDHU01",152,0)
 K ^TMP("KMPDHU01-2",$J)
"RTN","KMPDHU01",153,0)
 ;
"RTN","KMPDHU01",154,0)
 S LN=0
"RTN","KMPDHU01",155,0)
 ; version and patch info
"RTN","KMPDHU01",156,0)
 S LN=LN+1,^TMP("KMPDHU01-2",$J,LN)="VERSION="_$$VERSION^KMPDUTL
"RTN","KMPDHU01",157,0)
 ; system information
"RTN","KMPDHU01",158,0)
 S LN=LN+1,^TMP("KMPDHU01-2",$J,LN)="SYSINFO="_$$SYSINFO^KMPDUTL1()
"RTN","KMPDHU01",159,0)
 ; send cpu data to national database
"RTN","KMPDHU01",160,0)
 D CPU^KMPDUTL5(.CPU) I $D(CPU) S I="" F  S I=$O(CPU(I)) Q:I=""  D 
"RTN","KMPDHU01",161,0)
 .S LN=LN+1,^TMP("KMPDHU01-2",$J,LN)="CPU="_I_U_CPU(I)
"RTN","KMPDHU01",162,0)
 ;
"RTN","KMPDHU01",163,0)
 W:'$D(ZTQUEUED) !!,"Formatting ",$$FMTE^XLFDT($G(START))," data for mail delivery..."
"RTN","KMPDHU01",164,0)
 ; reformat so that data is in ^TMP("KMPR UPLOAD",$J,LN)= format.
"RTN","KMPDHU01",165,0)
 S IEN=0,S=""
"RTN","KMPDHU01",166,0)
 F  S S=$O(^TMP($J,S)) Q:S=""  S N="" W "." D 
"RTN","KMPDHU01",167,0)
 .F  S N=$O(^TMP($J,S,N)) Q:N=""  S P="" D 
"RTN","KMPDHU01",168,0)
 ..F  S P=$O(^TMP($J,S,N,P)) Q:P=""  S I="",IEN=IEN+1 D 
"RTN","KMPDHU01",169,0)
 ...; synchronous data
"RTN","KMPDHU01",170,0)
 ...F  S I=$O(^TMP($J,S,N,P,I)) Q:(+I)'=I  S LN=LN+1 D 
"RTN","KMPDHU01",171,0)
 ....S ^TMP("KMPDHU01-2",$J,LN)=IEN_","_I_")="_^TMP($J,S,N,P,I)
"RTN","KMPDHU01",172,0)
 ...; asynchronous data
"RTN","KMPDHU01",173,0)
 ...S C="-"
"RTN","KMPDHU01",174,0)
 ...F  S C=$O(^TMP($J,S,N,P,C)) Q:C=""  S I="",IEN=IEN+1 D 
"RTN","KMPDHU01",175,0)
 ....F  S I=$O(^TMP($J,S,N,P,C,I)) Q:(+I)'=I  S LN=LN+1 D
"RTN","KMPDHU01",176,0)
 .....S ^TMP("KMPDHU01-2",$J,LN)=IEN_","_I_")="_^TMP($J,S,N,P,C,I)
"RTN","KMPDHU01",177,0)
 ;
"RTN","KMPDHU01",178,0)
 ; quit if no data to transmit.
"RTN","KMPDHU01",179,0)
 Q:'$D(^TMP("KMPDHU01-2",$J))
"RTN","KMPDHU01",180,0)
 S TL=$G(^KMPD(8973,"TEST LAB"))
"RTN","KMPDHU01",181,0)
 S TL=$S(TL:"TESTLAB-",1:"")
"RTN","KMPDHU01",182,0)
 ; send packman message.
"RTN","KMPDHU01",183,0)
 S XMTEXT="^TMP(""KMPDHU01-2"","_$J_","
"RTN","KMPDHU01",184,0)
 S XMSUB="CM HL7 DATA~"_TL_$P(SITE,U,2)_" ("_$P(SITE,U,3)_")~"_$$FMTE^XLFDT(START)
"RTN","KMPDHU01",185,0)
 D TRANSTO^KMPDUTL7(1,3,.TRANSTO)
"RTN","KMPDHU01",186,0)
 Q:'$D(TRANSTO)  S I=""
"RTN","KMPDHU01",187,0)
 F  S I=$O(TRANSTO(I)) Q:I=""  S XMY(I)=""
"RTN","KMPDHU01",188,0)
 D ^XMD
"RTN","KMPDHU01",189,0)
 W:'$D(ZTQUEUED) !,"Message #",$G(XMZ)," sent..."
"RTN","KMPDHU01",190,0)
 K ^TMP("KMPDHU01-2",$J)
"RTN","KMPDHU01",191,0)
 ;
"RTN","KMPDHU01",192,0)
 Q
"RTN","KMPDTM")
0^8^B22150434
"RTN","KMPDTM",1,0)
KMPDTM ;OAK/RAK - CM Tools Timing Monitor ;6/21/05  10:14
"RTN","KMPDTM",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**1,4**;Mar 22, 2002
"RTN","KMPDTM",3,0)
 ;
"RTN","KMPDTM",4,0)
EN ;-- entry point
"RTN","KMPDTM",5,0)
 ;
"RTN","KMPDTM",6,0)
 N DIR,X,Y
"RTN","KMPDTM",7,0)
 ;
"RTN","KMPDTM",8,0)
 D HDR^KMPDUTL4(" Timing Data Monitor ")
"RTN","KMPDTM",9,0)
 ;
"RTN","KMPDTM",10,0)
 ; if no data
"RTN","KMPDTM",11,0)
 I $O(^KMPTMP("KMPDT","ORWCV",""))="" D  Q
"RTN","KMPDTM",12,0)
 .W !!?7,"*** There is currently no data in global ^KMPTMP(""KMPDT"",""ORWCV"") ***"
"RTN","KMPDTM",13,0)
 ;
"RTN","KMPDTM",14,0)
 W !
"RTN","KMPDTM",15,0)
 W !?7,"This option displays CPRS Coversheet time-to-load data, as a"
"RTN","KMPDTM",16,0)
 W !?7,"bar graph, for the current day.  This option can be left"
"RTN","KMPDTM",17,0)
 W !?7,"running on a terminal (if desired).  The monitor is updated"
"RTN","KMPDTM",18,0)
 W !?7,"every 10 minutes (site configurable through the [KMPD PARAM"
"RTN","KMPDTM",19,0)
 W !?7,"EDIT] Edit CP Parameters File option), and displays current"
"RTN","KMPDTM",20,0)
 W !?7,"average time-to-load data starting at midnight.  An alarm"
"RTN","KMPDTM",21,0)
 W !?7,"message is displayed if the average time-to-load exceeds 30"
"RTN","KMPDTM",22,0)
 W !?7,"seconds (site configurable through the [KMPD PARAM EDIT] Edit"
"RTN","KMPDTM",23,0)
 W !?7,"CP Parameters File option)."
"RTN","KMPDTM",24,0)
 W !
"RTN","KMPDTM",25,0)
 S DIR(0)="YO",DIR("A")="Continue",DIR("B")="YES"
"RTN","KMPDTM",26,0)
 W ! D ^DIR Q:Y'=1
"RTN","KMPDTM",27,0)
 ;
"RTN","KMPDTM",28,0)
 ;
"RTN","KMPDTM",29,0)
 W !!,"Compiling timing stats..."
"RTN","KMPDTM",30,0)
 D EN1
"RTN","KMPDTM",31,0)
 ;
"RTN","KMPDTM",32,0)
 Q
"RTN","KMPDTM",33,0)
 ;
"RTN","KMPDTM",34,0)
EN1 ;-- main loop
"RTN","KMPDTM",35,0)
 ;
"RTN","KMPDTM",36,0)
 N KMPUALRT,KMPUTIME,KMPUTMP,OUT
"RTN","KMPDTM",37,0)
 ;
"RTN","KMPDTM",38,0)
 S KMPUALRT=0,KMPUTIME=$$NOW^XLFDT
"RTN","KMPDTM",39,0)
 S OUT=0
"RTN","KMPDTM",40,0)
 F  D  Q:OUT
"RTN","KMPDTM",41,0)
 .D DATA
"RTN","KMPDTM",42,0)
 .D GRAPH
"RTN","KMPDTM",43,0)
 .S OUT=$$FTR Q:OUT
"RTN","KMPDTM",44,0)
 .D EXIT
"RTN","KMPDTM",45,0)
 Q
"RTN","KMPDTM",46,0)
 ;
"RTN","KMPDTM",47,0)
DATA ;-- compile data
"RTN","KMPDTM",48,0)
 ;
"RTN","KMPDTM",49,0)
 N DATA,DATA1,DATE,DELTA,DOT,HOURS,HR,I
"RTN","KMPDTM",50,0)
 ;
"RTN","KMPDTM",51,0)
 K KMPUTMP
"RTN","KMPDTM",52,0)
 S DOT=1,DATE=$$DT^XLFDT
"RTN","KMPDTM",53,0)
 ; array with hours
"RTN","KMPDTM",54,0)
 S HOURS=$$RLTMHR^KMPDTU11(1,0) Q:HOURS=""
"RTN","KMPDTM",55,0)
 F HR=1:1 Q:$P(HOURS,",",HR)=""  S KMPUTMP(HR,0)=""
"RTN","KMPDTM",56,0)
 S I=""
"RTN","KMPDTM",57,0)
 F  S I=$O(^KMPTMP("KMPDT","ORWCV",I)) Q:I=""  S DATA=^(I) I DATA]"" D 
"RTN","KMPDTM",58,0)
 .S DOT=DOT+1 W:('(DOT#1000)) "."
"RTN","KMPDTM",59,0)
 .; start/end date/time in fileman format
"RTN","KMPDTM",60,0)
 .S DATE(1)=$$HTFM^XLFDT($P(DATA,U)),DATE(2)=$$HTFM^XLFDT($P(DATA,U,2))
"RTN","KMPDTM",61,0)
 .Q:'DATE(1)!('DATE(2))
"RTN","KMPDTM",62,0)
 .; quit if not today (DATE)
"RTN","KMPDTM",63,0)
 .Q:$P(DATE(1),".")'=DATE
"RTN","KMPDTM",64,0)
 .S DELTA=$$FMDIFF^XLFDT(DATE(2),DATE(1),2)
"RTN","KMPDTM",65,0)
 .S:DELTA<0 DELTA=""
"RTN","KMPDTM",66,0)
 .; determine hour
"RTN","KMPDTM",67,0)
 .S HR=+$E($P(DATE(1),".",2),1,2) Q:HR=""  ;HR="0"
"RTN","KMPDTM",68,0)
 .;Q:'HR
"RTN","KMPDTM",69,0)
 .; quit if not in HOUR() array
"RTN","KMPDTM",70,0)
 .;Q:'$D(HOUR(HR))
"RTN","KMPDTM",71,0)
 .S DATA1="^^^"_DELTA_"^"_$P(DATA,U,3)_"^"_$P(DATA,U,4)_"^^^"_$P($P(I," ",2),"-")
"RTN","KMPDTM",72,0)
 .;
"RTN","KMPDTM",73,0)
 .; quit if no delta
"RTN","KMPDTM",74,0)
 .Q:$P(DATA1,U,4)=""
"RTN","KMPDTM",75,0)
 .; hour
"RTN","KMPDTM",76,0)
 .S $P(KMPUTMP(HR,0),U)=HR
"RTN","KMPDTM",77,0)
 .; total delta
"RTN","KMPDTM",78,0)
 .S $P(KMPUTMP(HR,0),U,2)=$P(KMPUTMP(HR,0),U,2)+$P(DATA1,U,4)
"RTN","KMPDTM",79,0)
 .; count
"RTN","KMPDTM",80,0)
 .S $P(KMPUTMP(HR,0),U,3)=$P(KMPUTMP(HR,0),U,3)+1
"RTN","KMPDTM",81,0)
 ;
"RTN","KMPDTM",82,0)
 ; average
"RTN","KMPDTM",83,0)
 F HR=1:1 S I=$P(HOURS,",",HR) Q:I=""  I $P($G(KMPUTMP(I,0)),U,2) D 
"RTN","KMPDTM",84,0)
 .S $P(KMPUTMP(I,0),U,2)=$FN($P(KMPUTMP(I,0),U,2)/$P(KMPUTMP(I,0),U,3),"",1)
"RTN","KMPDTM",85,0)
 ;
"RTN","KMPDTM",86,0)
 Q
"RTN","KMPDTM",87,0)
 ;
"RTN","KMPDTM",88,0)
FTR() ;-- extrinsic function - footer
"RTN","KMPDTM",89,0)
 N OUT,PROMPT,UTIME,X
"RTN","KMPDTM",90,0)
 ; update time - how often graph will refress itself
"RTN","KMPDTM",91,0)
 S UTIME=$P($G(^KMPD(8973,1,19)),U)
"RTN","KMPDTM",92,0)
 ; value is in minutes and is converted to seconds for timed read
"RTN","KMPDTM",93,0)
 S UTIME=$S(UTIME:UTIME,1:10)*60
"RTN","KMPDTM",94,0)
 S PROMPT="[Q]uit, [U]pdate: "
"RTN","KMPDTM",95,0)
 S OUT=0
"RTN","KMPDTM",96,0)
 F  D  Q:OUT
"RTN","KMPDTM",97,0)
 .S DX=(IOM-$L(PROMPT)\2),DY=(IOSL-1) X IOXY
"RTN","KMPDTM",98,0)
 .W PROMPT R X:UTIME
"RTN","KMPDTM",99,0)
 .S X=$$UP^XLFSTR(X)
"RTN","KMPDTM",100,0)
 .I X="Q"!(X="^")!(X="U")!('$T) S OUT=1
"RTN","KMPDTM",101,0)
 .E  W $C(7) S DY=(IOSL-1) F DX=1:1:IOM W " " X IOXY
"RTN","KMPDTM",102,0)
 W $S(X="Q":"uit",X="^":"Quit",X="U":"pdate",1:"Update")
"RTN","KMPDTM",103,0)
 Q $S(X="Q"!(X="^"):1,1:0)
"RTN","KMPDTM",104,0)
 ;
"RTN","KMPDTM",105,0)
GRAPH ;-- display graph
"RTN","KMPDTM",106,0)
 Q:'$D(KMPUTMP)
"RTN","KMPDTM",107,0)
 N ALERT,DATA,LOADTM,NOW,TITLE,TXT,UPDATE
"RTN","KMPDTM",108,0)
 ; alert time in seconds - if average time-to-load is not less than this
"RTN","KMPDTM",109,0)
 ;                         value an alert will appear on screen
"RTN","KMPDTM",110,0)
 S NOW=$$NOW^XLFDT
"RTN","KMPDTM",111,0)
 S DATA=$G(^KMPD(8973,1,19))
"RTN","KMPDTM",112,0)
 ; if no ALERT set default to 30 seconds
"RTN","KMPDTM",113,0)
 S ALERT=$S($P(DATA,U,2):$P(DATA,U,2),1:30)
"RTN","KMPDTM",114,0)
 ; if not UPDATE default to 10 minutes
"RTN","KMPDTM",115,0)
 S UPDATE=$S($P(DATA,U):$P(DATA,U),1:10)
"RTN","KMPDTM",116,0)
 ; current hour
"RTN","KMPDTM",117,0)
 S HR=+$E($P(NOW,".",2),1,2)
"RTN","KMPDTM",118,0)
 ; current time-to-load value
"RTN","KMPDTM",119,0)
 S:HR&($D(KMPUTMP(HR))) LOADTM=$P(KMPUTMP(HR,0),U,2)
"RTN","KMPDTM",120,0)
 ; determine if is now an alert condition
"RTN","KMPDTM",121,0)
 S KMPUALRT=$S(LOADTM>ALERT:1,1:0)
"RTN","KMPDTM",122,0)
 ;
"RTN","KMPDTM",123,0)
 ; if load time is greater than alert time
"RTN","KMPDTM",124,0)
 I KMPUALRT S TXT(1,0)=$C(7)_"ALERT!!! - Current Average Time-To-Load exceeds '"_ALERT_" seconds'"
"RTN","KMPDTM",125,0)
 ; else
"RTN","KMPDTM",126,0)
 E  S TXT(1,0)=""
"RTN","KMPDTM",127,0)
 ;
"RTN","KMPDTM",128,0)
 S TXT(2,0)=""
"RTN","KMPDTM",129,0)
 S TXT(3,0)="Last Updated: "_$P($$FMTE^XLFDT(NOW),"@",2)_"  > "
"RTN","KMPDTM",130,0)
 S TXT(3,0)=TXT(3,0)_"Monitor will be updated every "_UPDATE_" min."
"RTN","KMPDTM",131,0)
 I $G(KMPUTIME) D 
"RTN","KMPDTM",132,0)
 .S TXT(4,0)="Running Time: "_$$FMDIFF^XLFDT(NOW,KMPUTIME,3)_"  > "
"RTN","KMPDTM",133,0)
 .S TXT(4,0)=TXT(4,0)_"ALERT will display if Load Time exceeds "_ALERT_" sec."
"RTN","KMPDTM",134,0)
 S TITLE="Timing Data Monitor^CPRS Coversheet^Load Time (Sec)^Hour"
"RTN","KMPDTM",135,0)
 ;
"RTN","KMPDTM",136,0)
 D EN^KMPDUG("KMPUTMP",TITLE,"DV","","TXT",1,40)
"RTN","KMPDTM",137,0)
 ;
"RTN","KMPDTM",138,0)
 Q
"RTN","KMPDTM",139,0)
 ;
"RTN","KMPDTM",140,0)
EXIT ;-- cleanup on exit
"RTN","KMPDTM",141,0)
 D ^%ZISC
"RTN","KMPDTM",142,0)
 Q
"RTN","KMPDTP1")
0^14^B15743524
"RTN","KMPDTP1",1,0)
KMPDTP1 ;OAK/RAK - CP Timing Time to Load Summary ;2/17/04  09:22
"RTN","KMPDTP1",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**4**;Mar 22, 2002
"RTN","KMPDTP1",3,0)
 ;
"RTN","KMPDTP1",4,0)
EN ;-- entry point
"RTN","KMPDTP1",5,0)
 N KMPDATE,KMPDPTNP,KMPDTTL,POP,X,Y,ZTDESC,ZTRTN,ZTRSAVE,%ZIS
"RTN","KMPDTP1",6,0)
 S KMPDTTL=" Average Coversheet Time-to-Load (TTL) Report "
"RTN","KMPDTP1",7,0)
 D HDR^KMPDUTL4(KMPDTTL)
"RTN","KMPDTP1",8,0)
 W !
"RTN","KMPDTP1",9,0)
 W !?7,"This report displays the daily average time-to-load value for"
"RTN","KMPDTP1",10,0)
 W !?7,"the coversheet at this site.  Average time-to-load values are"
"RTN","KMPDTP1",11,0)
 W !?7,"given for either daily prime time or non-prime time periods."
"RTN","KMPDTP1",12,0)
 W !
"RTN","KMPDTP1",13,0)
 ;
"RTN","KMPDTP1",14,0)
 I '$O(^KMPD(8973.2,0)) D  Q
"RTN","KMPDTP1",15,0)
 .W !!?7,"*** There is currently no data in file #8973.2 (CP TIMING) ***"
"RTN","KMPDTP1",16,0)
 ;
"RTN","KMPDTP1",17,0)
 D DATERNG^KMPDTU10("ORWCV",7,.KMPDATE)
"RTN","KMPDTP1",18,0)
 Q:$G(KMPDATE(0))=""
"RTN","KMPDTP1",19,0)
 S KMPDPTNP=$$PTNPSEL^KMPDUTL4
"RTN","KMPDTP1",20,0)
 Q:'KMPDPTNP
"RTN","KMPDTP1",21,0)
 ; select output device.
"RTN","KMPDTP1",22,0)
 S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPDTP1",23,0)
 W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPDTP1",24,0)
 ; if queued.
"RTN","KMPDTP1",25,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPDTP1",26,0)
 .S ZTDESC=KMPDTTL
"RTN","KMPDTP1",27,0)
 .S ZTRTN="EN1^KMPDTP1"
"RTN","KMPDTP1",28,0)
 .S ZTSAVE("KMPDATE(")="",ZTSAVE("KMPDPTNP")="",ZTSAVE("KMPDTTL")=""
"RTN","KMPDTP1",29,0)
 .D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPDTP1",30,0)
 .D EXIT
"RTN","KMPDTP1",31,0)
 ;
"RTN","KMPDTP1",32,0)
 ; if output to terminal display message.
"RTN","KMPDTP1",33,0)
 W:$E(IOST,1,2)="C-" !,"Compiling timing stats..."
"RTN","KMPDTP1",34,0)
 D EN1
"RTN","KMPDTP1",35,0)
 ;
"RTN","KMPDTP1",36,0)
 Q
"RTN","KMPDTP1",37,0)
 ;
"RTN","KMPDTP1",38,0)
EN1 ;-- entry point from taskman
"RTN","KMPDTP1",39,0)
 Q:'$D(KMPDATE)
"RTN","KMPDTP1",40,0)
 Q:'$G(KMPDPTNP)
"RTN","KMPDTP1",41,0)
 K ^TMP($J)
"RTN","KMPDTP1",42,0)
 D DATA,PRINT,EXIT
"RTN","KMPDTP1",43,0)
 K ^TMP($J)
"RTN","KMPDTP1",44,0)
 Q
"RTN","KMPDTP1",45,0)
 ;
"RTN","KMPDTP1",46,0)
DATA ;-- compile data
"RTN","KMPDTP1",47,0)
 Q:'$D(KMPDATE)
"RTN","KMPDTP1",48,0)
 Q:'$G(KMPDPTNP)
"RTN","KMPDTP1",49,0)
 N DATA,DATE,DOT,END,IEN,PTNP,QUEUED
"RTN","KMPDTP1",50,0)
 S DATE=$P(KMPDATE(0),U)-.1,END=$P(KMPDATE(0),U,2),PTNP=(+KMPDPTNP)
"RTN","KMPDTP1",51,0)
 Q:'DATE!('END)!('PTNP)
"RTN","KMPDTP1",52,0)
 S DOT=1,QUEUED=$D(ZTQUEUED)
"RTN","KMPDTP1",53,0)
 F  S DATE=$O(^KMPD(8973.2,"ASSDTPT","ORWCV",DATE)) Q:'DATE!(DATE>END)  D 
"RTN","KMPDTP1",54,0)
 .S IEN=0,^TMP($J,DATE)=""
"RTN","KMPDTP1",55,0)
 .F  S IEN=$O(^KMPD(8973.2,"ASSDTPT","ORWCV",DATE,PTNP,IEN)) Q:'IEN  D 
"RTN","KMPDTP1",56,0)
 ..Q:'$D(^KMPD(8973.2,IEN,0))  S DATA=^(0) Q:DATA=""
"RTN","KMPDTP1",57,0)
 ..I 'QUEUED S DOT=DOT+1 W:'(DOT#1000) "."
"RTN","KMPDTP1",58,0)
 ..; if delta
"RTN","KMPDTP1",59,0)
 ..I $P(DATA,U,4)'="" D 
"RTN","KMPDTP1",60,0)
 ...; minimum delta
"RTN","KMPDTP1",61,0)
 ...I $P(^TMP($J,DATE),U,2)=""!($P(DATA,U,4)<$P(^TMP($J,DATE),U,2)) D 
"RTN","KMPDTP1",62,0)
 ....S $P(^TMP($J,DATE),U,2)=$P(DATA,U,4)
"RTN","KMPDTP1",63,0)
 ...; maximum delta
"RTN","KMPDTP1",64,0)
 ...I $P(DATA,U,4)>$P(^TMP($J,DATE),U,3) S $P(^TMP($J,DATE),U,3)=$P(DATA,U,4)
"RTN","KMPDTP1",65,0)
 ...; total delta
"RTN","KMPDTP1",66,0)
 ...S $P(^TMP($J,DATE),U,4)=$P(^TMP($J,DATE),U,4)+$P(DATA,U,4)
"RTN","KMPDTP1",67,0)
 ...; count
"RTN","KMPDTP1",68,0)
 ...S $P(^TMP($J,DATE),U,5)=$P(^TMP($J,DATE),U,5)+1
"RTN","KMPDTP1",69,0)
 ..; if no delta
"RTN","KMPDTP1",70,0)
 ..E  S $P(^TMP($J,DATE),U,6)=$P(^TMP($J,DATE),U,6)+1
"RTN","KMPDTP1",71,0)
 .;
"RTN","KMPDTP1",72,0)
 .; back to DATE level
"RTN","KMPDTP1",73,0)
 .; average
"RTN","KMPDTP1",74,0)
 .S:$P(^TMP($J,DATE),U,5) $P(^TMP($J,DATE),U)=$P(^TMP($J,DATE),U,4)/$P(^TMP($J,DATE),U,5)
"RTN","KMPDTP1",75,0)
 ;
"RTN","KMPDTP1",76,0)
 Q
"RTN","KMPDTP1",77,0)
 ;
"RTN","KMPDTP1",78,0)
PRINT ;-- print data
"RTN","KMPDTP1",79,0)
 U IO
"RTN","KMPDTP1",80,0)
 D HDR
"RTN","KMPDTP1",81,0)
 Q:'$D(^TMP($J))
"RTN","KMPDTP1",82,0)
 N DATE,TOTAL S (DATE,TOTAL)=""
"RTN","KMPDTP1",83,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  S DATA=^TMP($J,DATE) D 
"RTN","KMPDTP1",84,0)
 .W !,$$FMTE^XLFDT(DATE,2)
"RTN","KMPDTP1",85,0)
 .W ?12,$J($FN($P(DATA,U),",",0),10)
"RTN","KMPDTP1",86,0)
 .W ?26,$J($FN($P(DATA,U,2),",",0),10)
"RTN","KMPDTP1",87,0)
 .W ?40,$J($FN($P(DATA,U,3),",",0),10)
"RTN","KMPDTP1",88,0)
 .W ?54,$J($FN($P(DATA,U,5),",",0),10)
"RTN","KMPDTP1",89,0)
 .; total incompletes
"RTN","KMPDTP1",90,0)
 .S TOTAL=TOTAL+$P(DATA,U,6)
"RTN","KMPDTP1",91,0)
 ;
"RTN","KMPDTP1",92,0)
 W !!?12,"Incomplete: ",$J($FN(TOTAL,",",0),$L(TOTAL)+2)
"RTN","KMPDTP1",93,0)
 ; legend
"RTN","KMPDTP1",94,0)
 W !!?2,"CV  = Coversheet",!?2,"TTL = Time-to-Load"
"RTN","KMPDTP1",95,0)
 ; pause if output to terminal
"RTN","KMPDTP1",96,0)
 D CONTINUE^KMPDUTL4("Press RETURN to continue",4)
"RTN","KMPDTP1",97,0)
 Q
"RTN","KMPDTP1",98,0)
 ;
"RTN","KMPDTP1",99,0)
HDR ;-- print header
"RTN","KMPDTP1",100,0)
 W @IOF
"RTN","KMPDTP1",101,0)
 S X=$G(KMPDTTL)
"RTN","KMPDTP1",102,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP1",103,0)
 S X=$P($G(KMPDPTNP),U,2)
"RTN","KMPDTP1",104,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP1",105,0)
 S X=$G(KMPDATE(0)),X=$P(X,U,3)_" - "_$P(X,U,4)
"RTN","KMPDTP1",106,0)
 W !?(80-$L(X)\2),X,?61,"Printed: ",$$FMTE^XLFDT(DT,2)
"RTN","KMPDTP1",107,0)
 W !
"RTN","KMPDTP1",108,0)
 W !?12,"|---------------Seconds---------------|"
"RTN","KMPDTP1",109,0)
 W !,"Date",?12,"Average TTL",?26,"Minimum TTL",?40,"Maximum TTL",?54,"# of CV Loads"
"RTN","KMPDTP1",110,0)
 W !,$$REPEAT^XLFSTR("-",IOM)
"RTN","KMPDTP1",111,0)
 ;
"RTN","KMPDTP1",112,0)
 Q
"RTN","KMPDTP1",113,0)
 ;
"RTN","KMPDTP1",114,0)
EXIT ;-- cleanup on exit
"RTN","KMPDTP1",115,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPDTP1",116,0)
 D ^%ZISC
"RTN","KMPDTP1",117,0)
 K KMPDATE,KMPDPTNP,KMPDTTL
"RTN","KMPDTP1",118,0)
 Q
"RTN","KMPDTP2")
0^15^B21316448
"RTN","KMPDTP2",1,0)
KMPDTP2 ;OAK/RAK - CP Timing Daily Time-to-Load Detail ;2/17/04  09:23
"RTN","KMPDTP2",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**4**;Mar 22, 2002
"RTN","KMPDTP2",3,0)
 ;
"RTN","KMPDTP2",4,0)
EN ;-- entry point
"RTN","KMPDTP2",5,0)
 N KMPDATE,KMPDPTNP,KMPDTTL,POP,X,Y,ZTDESC,ZTRTN,ZTSAVE,ZTSK,%ZIS
"RTN","KMPDTP2",6,0)
 S KMPDTTL=" Daily Coversheet Time-to-Load (TTL) Detailed Report "
"RTN","KMPDTP2",7,0)
 D HDR^KMPDUTL4(KMPDTTL)
"RTN","KMPDTP2",8,0)
 W !
"RTN","KMPDTP2",9,0)
 W !?7,"This detailed report displays daily time-to-load values for the"
"RTN","KMPDTP2",10,0)
 W !?7,"coversheet at this site.  The report breaks the time-to-load"
"RTN","KMPDTP2",11,0)
 W !?7,"metrics into ten second groupings."
"RTN","KMPDTP2",12,0)
 W !
"RTN","KMPDTP2",13,0)
 ;
"RTN","KMPDTP2",14,0)
 ; if no data
"RTN","KMPDTP2",15,0)
 I '$O(^KMPD(8973.2,0)) D  Q
"RTN","KMPDTP2",16,0)
 .W !!?7,"*** There is currently no data in file #8973.2 (CP TIMING) ***"
"RTN","KMPDTP2",17,0)
 ;
"RTN","KMPDTP2",18,0)
 ; select date range
"RTN","KMPDTP2",19,0)
 D DATERNG^KMPDTU10("ORWCV",1,.KMPDATE)
"RTN","KMPDTP2",20,0)
 Q:$G(KMPDATE(0))=""
"RTN","KMPDTP2",21,0)
 ;
"RTN","KMPDTP2",22,0)
 ; select time frame
"RTN","KMPDTP2",23,0)
 S KMPDPTNP=$$PTNPSEL^KMPDUTL4
"RTN","KMPDTP2",24,0)
 Q:'KMPDPTNP
"RTN","KMPDTP2",25,0)
 ;
"RTN","KMPDTP2",26,0)
 ; select output device.
"RTN","KMPDTP2",27,0)
 S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPDTP2",28,0)
 W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPDTP2",29,0)
 ; if queued.
"RTN","KMPDTP2",30,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPDTP2",31,0)
 .S ZTDESC=KMPDTTL
"RTN","KMPDTP2",32,0)
 .S ZTRTN="EN1^KMPDTP2"
"RTN","KMPDTP2",33,0)
 .S ZTSAVE("KMPDATE(")="",ZTSAVE("KMPDPTNP")="",ZTSAVE("KMPDTTL")=""
"RTN","KMPDTP2",34,0)
 .D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPDTP2",35,0)
 .D EXIT
"RTN","KMPDTP2",36,0)
 ;
"RTN","KMPDTP2",37,0)
 ; if output to terminal display message.
"RTN","KMPDTP2",38,0)
 W:$E(IOST,1,2)="C-" !,"Compiling timing stats..."
"RTN","KMPDTP2",39,0)
 D EN1
"RTN","KMPDTP2",40,0)
 ;
"RTN","KMPDTP2",41,0)
 Q
"RTN","KMPDTP2",42,0)
 ;
"RTN","KMPDTP2",43,0)
EN1 ;-- entry point from taskman
"RTN","KMPDTP2",44,0)
 Q:'$D(KMPDATE)
"RTN","KMPDTP2",45,0)
 Q:'$G(KMPDPTNP)
"RTN","KMPDTP2",46,0)
 ;
"RTN","KMPDTP2",47,0)
 K ^TMP($J)
"RTN","KMPDTP2",48,0)
 D DATA,PRINT,EXIT
"RTN","KMPDTP2",49,0)
 K ^TMP($J)
"RTN","KMPDTP2",50,0)
 ;
"RTN","KMPDTP2",51,0)
 Q
"RTN","KMPDTP2",52,0)
 ;
"RTN","KMPDTP2",53,0)
DATA ;-- compile data
"RTN","KMPDTP2",54,0)
 Q:'$D(KMPDATE)
"RTN","KMPDTP2",55,0)
 Q:'$G(KMPDPTNP)
"RTN","KMPDTP2",56,0)
 ;
"RTN","KMPDTP2",57,0)
 N DATA,DATE,DELTA,DOT,END,I,IEN,PTNP,QUEUED,TOTAL
"RTN","KMPDTP2",58,0)
 ;
"RTN","KMPDTP2",59,0)
 S QUEUED=$D(ZTQUEUED),DOT=1
"RTN","KMPDTP2",60,0)
 S DATE=$P(KMPDATE(0),U)-.1,END=$P(KMPDATE(0),U,2),PTNP=(+KMPDPTNP)
"RTN","KMPDTP2",61,0)
 Q:'DATE!('END)!('PTNP)
"RTN","KMPDTP2",62,0)
 ;
"RTN","KMPDTP2",63,0)
 F  S DATE=$O(^KMPD(8973.2,"ASSDTPT","ORWCV",DATE)) Q:'DATE!(DATE>END)  D
"RTN","KMPDTP2",64,0)
 .S (IEN,TOTAL)=0,^TMP($J,DATE)=""
"RTN","KMPDTP2",65,0)
 .F  S IEN=$O(^KMPD(8973.2,"ASSDTPT","ORWCV",DATE,PTNP,IEN)) Q:'IEN  D
"RTN","KMPDTP2",66,0)
 ..Q:'$D(^KMPD(8973.2,IEN,0))  S DATA=^(0) Q:DATA=""
"RTN","KMPDTP2",67,0)
 ..S DOT=DOT+1 W:'QUEUED&('(DOT#1000)) "."
"RTN","KMPDTP2",68,0)
 ..S DELTA=$P(DATA,U,4)
"RTN","KMPDTP2",69,0)
 ..;
"RTN","KMPDTP2",70,0)
 ..; if delta is null increment by 1 and quit
"RTN","KMPDTP2",71,0)
 ..I DELTA="" S $P(^TMP($J,DATE),U,50)=$P(^TMP($J,DATE),U,50)+1 Q
"RTN","KMPDTP2",72,0)
 ..; total
"RTN","KMPDTP2",73,0)
 ..S TOTAL=TOTAL+1
"RTN","KMPDTP2",74,0)
 ..;
"RTN","KMPDTP2",75,0)
 ..; loop - less than I*10 seconds
"RTN","KMPDTP2",76,0)
 ..F I=1:1:9 I DELTA<(I*10) S $P(^TMP($J,DATE),U,I)=$P(^TMP($J,DATE),U,I)+1 Q
"RTN","KMPDTP2",77,0)
 ..; 90 or greater seconds
"RTN","KMPDTP2",78,0)
 ..I DELTA>89 S $P(^TMP($J,DATE),U,10)=$P(^TMP($J,DATE),U,10)+1
"RTN","KMPDTP2",79,0)
 .;
"RTN","KMPDTP2",80,0)
 .; back to DATE level
"RTN","KMPDTP2",81,0)
 .; determine percentage
"RTN","KMPDTP2",82,0)
 .I TOTAL F I=1:1:10 D 
"RTN","KMPDTP2",83,0)
 ..S $P(^TMP($J,DATE,1),U,I)=$FN($P(^TMP($J,DATE),U,I)/TOTAL*100,"",1)
"RTN","KMPDTP2",84,0)
 ;
"RTN","KMPDTP2",85,0)
 Q
"RTN","KMPDTP2",86,0)
 ;
"RTN","KMPDTP2",87,0)
PRINT ;-- print data
"RTN","KMPDTP2",88,0)
 U IO
"RTN","KMPDTP2",89,0)
 D HDR
"RTN","KMPDTP2",90,0)
 Q:'$D(^TMP($J))
"RTN","KMPDTP2",91,0)
 ;
"RTN","KMPDTP2",92,0)
 N CONT,DATE,I,TOTAL
"RTN","KMPDTP2",93,0)
 ;
"RTN","KMPDTP2",94,0)
 S DATE="",CONT=1
"RTN","KMPDTP2",95,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  D  Q:'CONT
"RTN","KMPDTP2",96,0)
 .S TOTAL=""
"RTN","KMPDTP2",97,0)
 .S DATA=^TMP($J,DATE),DATA(1)=$G(^TMP($J,DATE,1))
"RTN","KMPDTP2",98,0)
 .W !,$$FMTE^XLFDT(DATE,2)
"RTN","KMPDTP2",99,0)
 .; if no data
"RTN","KMPDTP2",100,0)
 .I DATA="" W ?12,"<No Data for ",$P(KMPDPTNP,U,2),">",! Q
"RTN","KMPDTP2",101,0)
 .; display data
"RTN","KMPDTP2",102,0)
 .F I=1:1:10 D
"RTN","KMPDTP2",103,0)
 ..W ?12
"RTN","KMPDTP2",104,0)
 ..I I<10 W $J(I-1*10,2)," to <",I*10
"RTN","KMPDTP2",105,0)
 ..E  W "90 or greater"
"RTN","KMPDTP2",106,0)
 ..W ?28,$J($FN($P(DATA,U,I),",",0),10)
"RTN","KMPDTP2",107,0)
 ..; percentages
"RTN","KMPDTP2",108,0)
 ..W ?44,$J($FN($P(DATA(1),U,I),"",1),10),"%",!
"RTN","KMPDTP2",109,0)
 ..; totals
"RTN","KMPDTP2",110,0)
 ..S $P(TOTAL,U)=$P(TOTAL,U)+$P(DATA,U,I)
"RTN","KMPDTP2",111,0)
 ..S $P(TOTAL,U,2)=$P(TOTAL,U,2)+$P(DATA(1),U,I)
"RTN","KMPDTP2",112,0)
 .;
"RTN","KMPDTP2",113,0)
 .; back to DATE level
"RTN","KMPDTP2",114,0)
 .; totals
"RTN","KMPDTP2",115,0)
 .W ?28,"----------",?44,"----------"
"RTN","KMPDTP2",116,0)
 .W !?28,$J($FN($P(TOTAL,U),",",0),10)
"RTN","KMPDTP2",117,0)
 .W ?44,$J($FN($P(TOTAL,U,2),"",0),10),"%"
"RTN","KMPDTP2",118,0)
 .W !!?12,"Incomplete",?28,$J($FN($P(DATA,U,50),",",0),10)
"RTN","KMPDTP2",119,0)
 .; page feed if another date
"RTN","KMPDTP2",120,0)
 .I $O(^TMP($J,DATE)) D 
"RTN","KMPDTP2",121,0)
 ..D CONTINUE^KMPDUTL4("",1,.CONT) Q:'CONT
"RTN","KMPDTP2",122,0)
 ..D HDR
"RTN","KMPDTP2",123,0)
 ;
"RTN","KMPDTP2",124,0)
 I CONT D 
"RTN","KMPDTP2",125,0)
 .; legend
"RTN","KMPDTP2",126,0)
 .W !!?2,"CV  = Coversheet",!?2,"TTL = Time-to-Load"
"RTN","KMPDTP2",127,0)
 .; pause if output to terminal
"RTN","KMPDTP2",128,0)
 .D CONTINUE^KMPDUTL4("Press RETURN to continue",1)
"RTN","KMPDTP2",129,0)
 ;
"RTN","KMPDTP2",130,0)
 Q
"RTN","KMPDTP2",131,0)
 ;
"RTN","KMPDTP2",132,0)
HDR ;-- print header
"RTN","KMPDTP2",133,0)
 W @IOF
"RTN","KMPDTP2",134,0)
 S X=$G(KMPDTTL)
"RTN","KMPDTP2",135,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP2",136,0)
 S X=$P($G(KMPDPTNP),U,2)
"RTN","KMPDTP2",137,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP2",138,0)
 S X=$G(KMPDATE(0)),X=$P(X,U,3)_" - "_$P(X,U,4)
"RTN","KMPDTP2",139,0)
 W !?(80-$L(X)\2),X,?61,"Printed: ",$$FMTE^XLFDT(DT,2)
"RTN","KMPDTP2",140,0)
 W !
"RTN","KMPDTP2",141,0)
 W !,"Date",?12,"TTL Seconds",?28,"# of CV Loads",?44,"CV Percent"
"RTN","KMPDTP2",142,0)
 W !,$$REPEAT^XLFSTR("-",IOM)
"RTN","KMPDTP2",143,0)
 ;
"RTN","KMPDTP2",144,0)
 Q
"RTN","KMPDTP2",145,0)
 ;
"RTN","KMPDTP2",146,0)
EXIT ;-- cleanup on exit
"RTN","KMPDTP2",147,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPDTP2",148,0)
 D ^%ZISC
"RTN","KMPDTP2",149,0)
 K KMPDATE,KMPDPTNP,KMPDTTL
"RTN","KMPDTP2",150,0)
 Q
"RTN","KMPDTP3")
0^2^B20017179
"RTN","KMPDTP3",1,0)
KMPDTP3 ;OAK/RAK - CP Timing Hourly Time-to-Load ;6/21/05  10:14
"RTN","KMPDTP3",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**4**;Mar 22, 2002
"RTN","KMPDTP3",3,0)
 ;
"RTN","KMPDTP3",4,0)
EN ;-- entry point
"RTN","KMPDTP3",5,0)
 N KMPDATE,KMPDTTL,POP,X,Y,ZTDESC,ZTRTN,ZTRSAVE,%ZIS
"RTN","KMPDTP3",6,0)
 S KMPDTTL=" Hourly Coversheet Time-to-Load (TTL) Report "
"RTN","KMPDTP3",7,0)
 D HDR^KMPDUTL4(KMPDTTL)
"RTN","KMPDTP3",8,0)
 W !
"RTN","KMPDTP3",9,0)
 W !?7,"This report displays the hourly average time-to-load value"
"RTN","KMPDTP3",10,0)
 W !?7,"for the coversheet at this site over 24 hours."
"RTN","KMPDTP3",11,0)
 W !
"RTN","KMPDTP3",12,0)
 ;
"RTN","KMPDTP3",13,0)
 ; if no data
"RTN","KMPDTP3",14,0)
 I '$O(^KMPD(8973.2,0)) D  Q
"RTN","KMPDTP3",15,0)
 .W !!?7,"*** There is currently no data in file #8973.2 (CP TIMING) ***"
"RTN","KMPDTP3",16,0)
 ;
"RTN","KMPDTP3",17,0)
 D DATERNG^KMPDTU10("ORWCV",1,.KMPDATE)
"RTN","KMPDTP3",18,0)
 Q:$G(KMPDATE(0))=""
"RTN","KMPDTP3",19,0)
 ; select output device.
"RTN","KMPDTP3",20,0)
 S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPDTP3",21,0)
 W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPDTP3",22,0)
 ; if queued.
"RTN","KMPDTP3",23,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPDTP3",24,0)
 .S ZTDESC=KMPDTTL
"RTN","KMPDTP3",25,0)
 .S ZTRTN="EN1^KMPDTP3"
"RTN","KMPDTP3",26,0)
 .S ZTSAVE("KMPDATE(")="",ZTSAVE("KMPDTTL")=""
"RTN","KMPDTP3",27,0)
 .D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPDTP3",28,0)
 .D EXIT
"RTN","KMPDTP3",29,0)
 ;
"RTN","KMPDTP3",30,0)
 ; if output to terminal display message.
"RTN","KMPDTP3",31,0)
 W:$E(IOST,1,2)="C-" !,"Compiling timing stats..."
"RTN","KMPDTP3",32,0)
 D EN1
"RTN","KMPDTP3",33,0)
 ;
"RTN","KMPDTP3",34,0)
 Q
"RTN","KMPDTP3",35,0)
 ;
"RTN","KMPDTP3",36,0)
EN1 ;-- entry point from taskman
"RTN","KMPDTP3",37,0)
 Q:'$D(KMPDATE)
"RTN","KMPDTP3",38,0)
 K ^TMP($J)
"RTN","KMPDTP3",39,0)
 D DATA,PRINT,EXIT
"RTN","KMPDTP3",40,0)
 K ^TMP($J)
"RTN","KMPDTP3",41,0)
 Q
"RTN","KMPDTP3",42,0)
 ;
"RTN","KMPDTP3",43,0)
DATA ;-- compile data
"RTN","KMPDTP3",44,0)
 Q:'$D(KMPDATE)
"RTN","KMPDTP3",45,0)
 N DATA,DATE,DELTA,DOT,END,HR,I,IEN,PTNP,QUEUED,TOTAL
"RTN","KMPDTP3",46,0)
 S DATE=$P(KMPDATE(0),U)-.1,END=$P(KMPDATE(0),U,2)
"RTN","KMPDTP3",47,0)
 Q:'DATE!('END)
"RTN","KMPDTP3",48,0)
 S DOT=1,QUEUED=$D(ZTQUEUED)
"RTN","KMPDTP3",49,0)
 F  S DATE=$O(^KMPD(8973.2,"ASVDTSS","ORWCV",DATE)) Q:'DATE!(DATE>END)  D 
"RTN","KMPDTP3",50,0)
 .S (IEN,TOTAL)=0
"RTN","KMPDTP3",51,0)
 .; array with hours
"RTN","KMPDTP3",52,0)
 .F I=0:1:23 S ^TMP($J,DATE,I)=""
"RTN","KMPDTP3",53,0)
 .F  S IEN=$O(^KMPD(8973.2,"ASVDTSS","ORWCV",DATE,IEN)) Q:'IEN  D 
"RTN","KMPDTP3",54,0)
 ..Q:'$D(^KMPD(8973.2,IEN,0))  S DATA=^(0) Q:DATA=""
"RTN","KMPDTP3",55,0)
 ..S DOT=DOT+1 W:'QUEUED&('(DOT#1000)) "."
"RTN","KMPDTP3",56,0)
 ..; get delta and hour
"RTN","KMPDTP3",57,0)
 ..S DELTA=$P(DATA,U,4),HR=+$E($P($P(DATA,U,3),".",2),1,2)
"RTN","KMPDTP3",58,0)
 ..S HR=$S(HR="":0,HR=24:0,1:HR)
"RTN","KMPDTP3",59,0)
 ..; if delta
"RTN","KMPDTP3",60,0)
 ..I $P(DATA,U,4)'="" D 
"RTN","KMPDTP3",61,0)
 ...; minimum delta
"RTN","KMPDTP3",62,0)
 ...I $P(^TMP($J,DATE,HR),U,2)=""!($P(DATA,U,4)<$P(^TMP($J,DATE,HR),U,2)) D 
"RTN","KMPDTP3",63,0)
 ....S $P(^TMP($J,DATE,HR),U,2)=$P(DATA,U,4)
"RTN","KMPDTP3",64,0)
 ...; maximum delta
"RTN","KMPDTP3",65,0)
 ...I $P(DATA,U,4)>$P(^TMP($J,DATE,HR),U,3) S $P(^TMP($J,DATE,HR),U,3)=$P(DATA,U,4)
"RTN","KMPDTP3",66,0)
 ...; total delta
"RTN","KMPDTP3",67,0)
 ...S $P(^TMP($J,DATE,HR),U,4)=$P(^TMP($J,DATE,HR),U,4)+$P(DATA,U,4)
"RTN","KMPDTP3",68,0)
 ...; count
"RTN","KMPDTP3",69,0)
 ...S $P(^TMP($J,DATE,HR),U,5)=$P(^TMP($J,DATE,HR),U,5)+1
"RTN","KMPDTP3",70,0)
 ..; if no delta
"RTN","KMPDTP3",71,0)
 ..E  S $P(^TMP($J,DATE,HR),U,6)=$P(^TMP($J,DATE,HR),U,6)+1
"RTN","KMPDTP3",72,0)
 .;
"RTN","KMPDTP3",73,0)
 .; back to DATE level
"RTN","KMPDTP3",74,0)
 .; average
"RTN","KMPDTP3",75,0)
 .F I=0:1:23 I $P(^TMP($J,DATE,I),U,5) D 
"RTN","KMPDTP3",76,0)
 ..S $P(^TMP($J,DATE,I),U)=$P(^TMP($J,DATE,I),U,4)/$P(^TMP($J,DATE,I),U,5)
"RTN","KMPDTP3",77,0)
 ;
"RTN","KMPDTP3",78,0)
 Q
"RTN","KMPDTP3",79,0)
 ;
"RTN","KMPDTP3",80,0)
PRINT ;-- print data
"RTN","KMPDTP3",81,0)
 D HDR
"RTN","KMPDTP3",82,0)
 Q:'$D(^TMP($J))
"RTN","KMPDTP3",83,0)
 N CONT,DATE,HR,I,TOTAL
"RTN","KMPDTP3",84,0)
 S DATE="",CONT=1
"RTN","KMPDTP3",85,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  S HR="" D  Q:'CONT
"RTN","KMPDTP3",86,0)
 .S TOTAL=""
"RTN","KMPDTP3",87,0)
 .W !,$$FMTE^XLFDT(DATE,2)
"RTN","KMPDTP3",88,0)
 .F  S HR=$O(^TMP($J,DATE,HR)) Q:HR=""  D  Q:'CONT
"RTN","KMPDTP3",89,0)
 ..; page feed
"RTN","KMPDTP3",90,0)
 ..I $Y>(IOSL-3) D CONTINUE^KMPDUTL4("",1,.CONT) Q:'CONT  D HDR W !
"RTN","KMPDTP3",91,0)
 ..W ?12," ",$S($L(HR)=1:"0",1:""),HR
"RTN","KMPDTP3",92,0)
 ..S DATA=^TMP($J,DATE,HR)
"RTN","KMPDTP3",93,0)
 ..W ?20,$J($FN($P(DATA,U),",",0),10)
"RTN","KMPDTP3",94,0)
 ..W ?34,$J($FN($P(DATA,U,2),",",0),10)
"RTN","KMPDTP3",95,0)
 ..W ?48,$J($FN($P(DATA,U,3),",",0),10)
"RTN","KMPDTP3",96,0)
 ..W ?62,$J($FN($P(DATA,U,5),",",0),10)
"RTN","KMPDTP3",97,0)
 ..W !
"RTN","KMPDTP3",98,0)
 ..S $P(TOTAL,U)=$P(TOTAL,U)+$P(DATA,U,5)
"RTN","KMPDTP3",99,0)
 ..S $P(TOTAL,U,2)=$P(TOTAL,U,2)+$P(DATA,U,6)
"RTN","KMPDTP3",100,0)
 .;
"RTN","KMPDTP3",101,0)
 .; back to DATE level
"RTN","KMPDTP3",102,0)
 .; totals
"RTN","KMPDTP3",103,0)
 .W ?62,"----------",!?62,$J($FN(TOTAL,",",0),10),!
"RTN","KMPDTP3",104,0)
 .W !?12,"Incomplete: ",$J($FN($P(TOTAL,U,2),",",0),$L($P(TOTAL,U,2))+2),!
"RTN","KMPDTP3",105,0)
 .; if another date
"RTN","KMPDTP3",106,0)
 .I $O(^TMP($J,DATE)) D CONTINUE^KMPDUTL4("",1,.CONT) Q:'CONT  D HDR W !
"RTN","KMPDTP3",107,0)
 ;
"RTN","KMPDTP3",108,0)
 I CONT D 
"RTN","KMPDTP3",109,0)
 .; legend
"RTN","KMPDTP3",110,0)
 .W !!?2,"CV  = Coversheet",!?2,"TTL = Time-to-Load"
"RTN","KMPDTP3",111,0)
 .; pause if output to terminal
"RTN","KMPDTP3",112,0)
 .D CONTINUE^KMPDUTL4("Press RETURN to continue",1)
"RTN","KMPDTP3",113,0)
 ;
"RTN","KMPDTP3",114,0)
 Q
"RTN","KMPDTP3",115,0)
 ;
"RTN","KMPDTP3",116,0)
HDR ;-- print header
"RTN","KMPDTP3",117,0)
 W @IOF
"RTN","KMPDTP3",118,0)
 S X=$G(KMPDTTL)
"RTN","KMPDTP3",119,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP3",120,0)
 S X=$G(KMPDATE(0)),X=$P(X,U,3)_" - "_$P(X,U,4)
"RTN","KMPDTP3",121,0)
 W !?(80-$L(X)\2),X,?61,"Printed: ",$$FMTE^XLFDT(DT,2)
"RTN","KMPDTP3",122,0)
 W !
"RTN","KMPDTP3",123,0)
 W !?20,"|---------------Seconds---------------|"
"RTN","KMPDTP3",124,0)
 W !,"Date",?12,"Hour",?20,"TTL Average",?34,"TTL Minimum",?48,"TTL Maximum",?62,"# of CV Loads"
"RTN","KMPDTP3",125,0)
 W !,$$REPEAT^XLFSTR("-",IOM)
"RTN","KMPDTP3",126,0)
 ;
"RTN","KMPDTP3",127,0)
 Q
"RTN","KMPDTP3",128,0)
 ;
"RTN","KMPDTP3",129,0)
EXIT ;-- cleanup on exit
"RTN","KMPDTP3",130,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPDTP3",131,0)
 D ^%ZISC
"RTN","KMPDTP3",132,0)
 K KMPDATE,KMPDTTL
"RTN","KMPDTP3",133,0)
 Q
"RTN","KMPDTP4")
0^16^B27036478
"RTN","KMPDTP4",1,0)
KMPDTP4 ;OAK/RAK - CP Timing Hourly Time-to-Load ;2/17/04  09:38
"RTN","KMPDTP4",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**4**;Mar 22, 2002
"RTN","KMPDTP4",3,0)
 ;
"RTN","KMPDTP4",4,0)
EN ;-- entry point
"RTN","KMPDTP4",5,0)
 ;
"RTN","KMPDTP4",6,0)
 N KMPDATE,KMPDTTL,POP,X,Y,ZTDESC,ZTRTN,ZTRSAVE,ZTSK,%ZIS
"RTN","KMPDTP4",7,0)
 ;
"RTN","KMPDTP4",8,0)
 S KMPDTTL=" Hourly Coversheet Time-to-Load (TTL) Detail Report "
"RTN","KMPDTP4",9,0)
 D HDR^KMPDUTL4(KMPDTTL)
"RTN","KMPDTP4",10,0)
 W !
"RTN","KMPDTP4",11,0)
 W !?7,"This detail report displays the hourly time-to-load values"
"RTN","KMPDTP4",12,0)
 W !?7,"for the coversheet at this site.  The report breaks the"
"RTN","KMPDTP4",13,0)
 W !?7,"time-to-load metrics into ten second groupings."
"RTN","KMPDTP4",14,0)
 W !
"RTN","KMPDTP4",15,0)
 ;
"RTN","KMPDTP4",16,0)
 ; if no data
"RTN","KMPDTP4",17,0)
 I '$O(^KMPD(8973.2,0)) D  Q
"RTN","KMPDTP4",18,0)
 .W !!?7,"*** There is currently no data in file #8973.2 (CP TIMING) ***"
"RTN","KMPDTP4",19,0)
 ;
"RTN","KMPDTP4",20,0)
 ; date & hour(s)
"RTN","KMPDTP4",21,0)
 D DTTMRNG^KMPDTU10("ORWCV",1,.KMPDATE,8)
"RTN","KMPDTP4",22,0)
 Q:$G(KMPDATE(0))=""
"RTN","KMPDTP4",23,0)
 Q:$G(KMPDATE(1))=""
"RTN","KMPDTP4",24,0)
 ;
"RTN","KMPDTP4",25,0)
 ; select output device.
"RTN","KMPDTP4",26,0)
 S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPDTP4",27,0)
 W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPDTP4",28,0)
 ; if queued.
"RTN","KMPDTP4",29,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPDTP4",30,0)
 .S ZTDESC=KMPDTTL
"RTN","KMPDTP4",31,0)
 .S ZTRTN="EN1^KMPDTP4"
"RTN","KMPDTP4",32,0)
 .S ZTSAVE("KMPDATE(")="",ZTSAVE("KMPDTTL")=""
"RTN","KMPDTP4",33,0)
 .D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPDTP4",34,0)
 .D EXIT
"RTN","KMPDTP4",35,0)
 ;
"RTN","KMPDTP4",36,0)
 ; if output to terminal display message.
"RTN","KMPDTP4",37,0)
 W:$E(IOST,1,2)="C-" !,"Compiling timing stats..."
"RTN","KMPDTP4",38,0)
 D EN1
"RTN","KMPDTP4",39,0)
 ;
"RTN","KMPDTP4",40,0)
 Q
"RTN","KMPDTP4",41,0)
 ;
"RTN","KMPDTP4",42,0)
EN1 ;-- entry point from taskman
"RTN","KMPDTP4",43,0)
 Q:'$D(KMPDATE)
"RTN","KMPDTP4",44,0)
 K ^TMP($J)
"RTN","KMPDTP4",45,0)
 D DATA,PRINT,EXIT
"RTN","KMPDTP4",46,0)
 K ^TMP($J)
"RTN","KMPDTP4",47,0)
 Q
"RTN","KMPDTP4",48,0)
 ;
"RTN","KMPDTP4",49,0)
DATA ;-- compile data
"RTN","KMPDTP4",50,0)
 ;
"RTN","KMPDTP4",51,0)
 Q:'$D(KMPDATE)
"RTN","KMPDTP4",52,0)
 ;
"RTN","KMPDTP4",53,0)
 N DATA,DATE,DATE1,DELTA,DOT,END,HOUR,HR,I,IEN,PTNP,QUEUED,TOTAL
"RTN","KMPDTP4",54,0)
 ;
"RTN","KMPDTP4",55,0)
 S DOT=1,QUEUED=$D(ZTQUEUED)
"RTN","KMPDTP4",56,0)
 ; set up HOUR() array
"RTN","KMPDTP4",57,0)
 F I=1:1:24 S:$P(KMPDATE(1),",",I)'="" HOUR(+$P(KMPDATE(1),",",I))=""
"RTN","KMPDTP4",58,0)
 Q:'$D(HOUR)
"RTN","KMPDTP4",59,0)
 S DATE=$P(KMPDATE(0),U)-.1,END=$P(KMPDATE(0),U,2)+.9
"RTN","KMPDTP4",60,0)
 Q:'DATE!('END)
"RTN","KMPDTP4",61,0)
 F  S DATE=$O(^KMPD(8973.2,"ASSDTTM","ORWCV",DATE)) Q:'DATE!(DATE>END)  D 
"RTN","KMPDTP4",62,0)
 .; date without time
"RTN","KMPDTP4",63,0)
 .S DATE1=$P(DATE,".")
"RTN","KMPDTP4",64,0)
 .; set up HOUR() array
"RTN","KMPDTP4",65,0)
 .M:'$D(^TMP($J,DATE1)) ^TMP($J,DATE1)=HOUR
"RTN","KMPDTP4",66,0)
 .; set up TOTAL() array
"RTN","KMPDTP4",67,0)
 .M:'$D(TOTAL(DATE1)) TOTAL(DATE1)=HOUR
"RTN","KMPDTP4",68,0)
 .S IEN=0
"RTN","KMPDTP4",69,0)
 .F  S IEN=$O(^KMPD(8973.2,"ASSDTTM","ORWCV",DATE,IEN)) Q:'IEN  D 
"RTN","KMPDTP4",70,0)
 ..S HR=+$E($P(DATE,".",2),1,2) S:HR="" HR="0"
"RTN","KMPDTP4",71,0)
 ..Q:'$D(HOUR(HR))
"RTN","KMPDTP4",72,0)
 ..Q:'$D(^KMPD(8973.2,IEN,0))  S DATA=^(0) Q:DATA=""
"RTN","KMPDTP4",73,0)
 ..S DOT=DOT+1 W:'QUEUED&('(DOT#1000)) "."
"RTN","KMPDTP4",74,0)
 ..S DELTA=$P(DATA,U,4)
"RTN","KMPDTP4",75,0)
 ..; if delta is null increment by 1 and quit
"RTN","KMPDTP4",76,0)
 ..I DELTA="" S $P(^TMP($J,DATE1,HR),U,50)=$P(^TMP($J,DATE1,HR),U,50)+1 Q
"RTN","KMPDTP4",77,0)
 ..; total
"RTN","KMPDTP4",78,0)
 ..S TOTAL(DATE1,HR)=TOTAL(DATE1,HR)+1
"RTN","KMPDTP4",79,0)
 ..;
"RTN","KMPDTP4",80,0)
 ..;
"RTN","KMPDTP4",81,0)
 ..; loop - less than I*10 seconds
"RTN","KMPDTP4",82,0)
 ..F I=1:1:9 I DELTA<(I*10) S $P(^TMP($J,DATE1,HR),U,I)=$P(^TMP($J,DATE1,HR),U,I)+1 Q
"RTN","KMPDTP4",83,0)
 ..; 90 or greater seconds
"RTN","KMPDTP4",84,0)
 ..I DELTA>89 S $P(^TMP($J,DATE1,HR),U,10)=$P(^TMP($J,DATE1,HR),U,10)+1
"RTN","KMPDTP4",85,0)
 ;
"RTN","KMPDTP4",86,0)
 ; determine percentage
"RTN","KMPDTP4",87,0)
 S DATE1=0
"RTN","KMPDTP4",88,0)
 F  S DATE1=$O(TOTAL(DATE1)) Q:'DATE1  S HR="" D 
"RTN","KMPDTP4",89,0)
 .F  S HR=$O(TOTAL(DATE1,HR)) Q:HR=""  I TOTAL(DATE1,HR) F I=1:1:10 D 
"RTN","KMPDTP4",90,0)
 ..S $P(^TMP($J,DATE1,HR,1),U,I)=$FN($P(^TMP($J,DATE1,HR),U,I)/TOTAL(DATE1,HR)*100,"",1)
"RTN","KMPDTP4",91,0)
 ;
"RTN","KMPDTP4",92,0)
 Q
"RTN","KMPDTP4",93,0)
 ;
"RTN","KMPDTP4",94,0)
PRINT ;-- print data
"RTN","KMPDTP4",95,0)
 ;
"RTN","KMPDTP4",96,0)
 U IO
"RTN","KMPDTP4",97,0)
 D HDR
"RTN","KMPDTP4",98,0)
 Q:'$D(^TMP($J))
"RTN","KMPDTP4",99,0)
 N CONT,DATE,I,TOTAL
"RTN","KMPDTP4",100,0)
 S DATE="",CONT=1
"RTN","KMPDTP4",101,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  D  Q:'CONT
"RTN","KMPDTP4",102,0)
 .W !,$$FMTE^XLFDT(DATE,2) S HR=""
"RTN","KMPDTP4",103,0)
 .F  S HR=$O(^TMP($J,DATE,HR)) Q:HR=""  D  Q:'CONT
"RTN","KMPDTP4",104,0)
 ..I $Y>(IOSL-9) D  Q:'CONT
"RTN","KMPDTP4",105,0)
 ...D CONTINUE^KMPDUTL4("",1,.CONT) Q:'CONT
"RTN","KMPDTP4",106,0)
 ...D HDR W !,$$FMTE^XLFDT(DATE,2)
"RTN","KMPDTP4",107,0)
 ..W ?12,HR
"RTN","KMPDTP4",108,0)
 ..S TOTAL="",DATA=^TMP($J,DATE,HR),DATA(1)=$G(^TMP($J,DATE,HR,1))
"RTN","KMPDTP4",109,0)
 ..; if no data
"RTN","KMPDTP4",110,0)
 ..I DATA="" W ?12,"<No Data>",! Q
"RTN","KMPDTP4",111,0)
 ..; display data
"RTN","KMPDTP4",112,0)
 ..F I=1:1:9 D 
"RTN","KMPDTP4",113,0)
 ...W ?16,I-1*10," to <",I*10
"RTN","KMPDTP4",114,0)
 ...W ?32,$J($FN($P(DATA,U,I),",",0),10)
"RTN","KMPDTP4",115,0)
 ...; percentages
"RTN","KMPDTP4",116,0)
 ...W ?48,$J($FN($P(DATA(1),U,I),"",1),10),"%"
"RTN","KMPDTP4",117,0)
 ...W !
"RTN","KMPDTP4",118,0)
 ...; totals
"RTN","KMPDTP4",119,0)
 ...S $P(TOTAL,U)=$P(TOTAL,U)+$P(DATA,U,I)
"RTN","KMPDTP4",120,0)
 ...S $P(TOTAL,U,2)=$P(TOTAL,U,2)+$P(DATA(1),U,I)
"RTN","KMPDTP4",121,0)
 ..;
"RTN","KMPDTP4",122,0)
 ..; back to DATE level
"RTN","KMPDTP4",123,0)
 ..; greater than 90
"RTN","KMPDTP4",124,0)
 ..W ?16,"90 or greater",?32,$J($FN($P(DATA,U,10),",",0),10)
"RTN","KMPDTP4",125,0)
 ..W ?48,$J($FN($P(DATA(1),U,10),"",1),10),"%"
"RTN","KMPDTP4",126,0)
 ..S $P(TOTAL,U)=$P(TOTAL,U)+$P(DATA,U,10)
"RTN","KMPDTP4",127,0)
 ..S $P(TOTAL,U,2)=$P(TOTAL,U,2)+$P(DATA(1),U,10)
"RTN","KMPDTP4",128,0)
 ..; totals
"RTN","KMPDTP4",129,0)
 ..W !?32,"----------",?48,"----------"
"RTN","KMPDTP4",130,0)
 ..W !?32,$J($FN($P(TOTAL,U),",",0),10)
"RTN","KMPDTP4",131,0)
 ..W ?48,$J($FN($P(TOTAL,U,2),"",0),10),"%"
"RTN","KMPDTP4",132,0)
 ..W !?16,"Incomplete",?32,$J($FN($P(DATA,U,50),",",0),10),!
"RTN","KMPDTP4",133,0)
 ..; page feed if another date
"RTN","KMPDTP4",134,0)
 ..I $O(^TMP($J,DATE)) D 
"RTN","KMPDTP4",135,0)
 ...D CONTINUE^KMPDUTL4("",1,.CONT) Q:'CONT
"RTN","KMPDTP4",136,0)
 ...D HDR
"RTN","KMPDTP4",137,0)
 ..W !
"RTN","KMPDTP4",138,0)
 ;
"RTN","KMPDTP4",139,0)
 I CONT D 
"RTN","KMPDTP4",140,0)
 .; legend
"RTN","KMPDTP4",141,0)
 .W !!?2,"CV  = Coversheet",!?2,"TTL = Time-to-Load"
"RTN","KMPDTP4",142,0)
 .; pause if output to terminal
"RTN","KMPDTP4",143,0)
 .D CONTINUE^KMPDUTL4("Press RETURN to continue",1)
"RTN","KMPDTP4",144,0)
 ;
"RTN","KMPDTP4",145,0)
 Q
"RTN","KMPDTP4",146,0)
 ;
"RTN","KMPDTP4",147,0)
HDR ;-- print header
"RTN","KMPDTP4",148,0)
 W @IOF
"RTN","KMPDTP4",149,0)
 S X=$G(KMPDTTL)
"RTN","KMPDTP4",150,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP4",151,0)
 S X=$G(KMPDATE(0)),X=$P(X,U,3)_" - "_$P(X,U,4)
"RTN","KMPDTP4",152,0)
 W !?(80-$L(X)\2),X,?61,"Printed: ",$$FMTE^XLFDT(DT,2)
"RTN","KMPDTP4",153,0)
 W !
"RTN","KMPDTP4",154,0)
 W !,"Date",?12,"Hr",?16,"TTL Seconds",?32,"# CV Loads",?48,"CV Percent"
"RTN","KMPDTP4",155,0)
 W !,$$REPEAT^XLFSTR("-",IOM)
"RTN","KMPDTP4",156,0)
 ;
"RTN","KMPDTP4",157,0)
 Q
"RTN","KMPDTP4",158,0)
 ;
"RTN","KMPDTP4",159,0)
EXIT ;-- cleanup on exit
"RTN","KMPDTP4",160,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPDTP4",161,0)
 D ^%ZISC
"RTN","KMPDTP4",162,0)
 K KMPDATE,KMPDTTL
"RTN","KMPDTP4",163,0)
 Q
"RTN","KMPDTP5")
0^3^B27612696
"RTN","KMPDTP5",1,0)
KMPDTP5 ;OAK/RAK - CP Timing Threshold Alert ;6/21/05  10:15
"RTN","KMPDTP5",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**4**;Mar 22, 2002
"RTN","KMPDTP5",3,0)
 ;
"RTN","KMPDTP5",4,0)
EN ;-- entry point
"RTN","KMPDTP5",5,0)
 ;
"RTN","KMPDTP5",6,0)
 N I,KMPDATE,KMPDSRCH,KMPDTSEC,KMPDTTL,POP,X,Y
"RTN","KMPDTP5",7,0)
 N ZTDESC,ZTRTN,ZTRSAVE,ZTSK,%ZIS
"RTN","KMPDTP5",8,0)
 ;
"RTN","KMPDTP5",9,0)
 S KMPDTTL=" Coversheet Time-to-Load (TTL) Alert Report "
"RTN","KMPDTP5",10,0)
 D HDR^KMPDUTL4(KMPDTTL)
"RTN","KMPDTP5",11,0)
 W !
"RTN","KMPDTP5",12,0)
 W !?7,"This alerting report shows the particular coversheet loads"
"RTN","KMPDTP5",13,0)
 W !?7,"that had excessive time-to-load values. This report will"
"RTN","KMPDTP5",14,0)
 W !?7,"search for a particular person, a particular client name or"
"RTN","KMPDTP5",15,0)
 W !?7,"IP address."
"RTN","KMPDTP5",16,0)
 W !
"RTN","KMPDTP5",17,0)
 ;
"RTN","KMPDTP5",18,0)
 ; if no data
"RTN","KMPDTP5",19,0)
 I '$O(^KMPD(8973.2,0)) D  Q
"RTN","KMPDTP5",20,0)
 .W !!?7,"*** There is currently no data in file #8973.2 (CP TIMING) ***"
"RTN","KMPDTP5",21,0)
 ;
"RTN","KMPDTP5",22,0)
 ; date & hour(s)
"RTN","KMPDTP5",23,0)
 D DTTMRNG^KMPDTU10("ORWCV",1,.KMPDATE,8)
"RTN","KMPDTP5",24,0)
 Q:$G(KMPDATE(0))=""
"RTN","KMPDTP5",25,0)
 Q:$G(KMPDATE(1))=""
"RTN","KMPDTP5",26,0)
 ;
"RTN","KMPDTP5",27,0)
 ; time-to-load threshold seconds
"RTN","KMPDTP5",28,0)
 S KMPDTSEC=$$TTLSEC^KMPDTU10
"RTN","KMPDTP5",29,0)
 Q:'KMPDTSEC
"RTN","KMPDTP5",30,0)
 ;
"RTN","KMPDTP5",31,0)
 ; search by
"RTN","KMPDTP5",32,0)
 D SRCHBY^KMPDTU10(.KMPDSRCH,"ORWCV")
"RTN","KMPDTP5",33,0)
 Q:'KMPDSRCH
"RTN","KMPDTP5",34,0)
 ;
"RTN","KMPDTP5",35,0)
 ; select output device.
"RTN","KMPDTP5",36,0)
 S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPDTP5",37,0)
 W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPDTP5",38,0)
 ; if queued.
"RTN","KMPDTP5",39,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPDTP5",40,0)
 .S ZTDESC=KMPDTTL
"RTN","KMPDTP5",41,0)
 .S ZTRTN="EN1^KMPDTP5"
"RTN","KMPDTP5",42,0)
 .F I="KMPDATE(","KMPDSRCH(","KMPDTSEC","KMPDTTL" S ZTSAVE(I)=""
"RTN","KMPDTP5",43,0)
 .D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPDTP5",44,0)
 .D EXIT
"RTN","KMPDTP5",45,0)
 ;
"RTN","KMPDTP5",46,0)
 ; if output to terminal display message.
"RTN","KMPDTP5",47,0)
 W:$E(IOST,1,2)="C-" !,"Compiling timing stats..."
"RTN","KMPDTP5",48,0)
 D EN1
"RTN","KMPDTP5",49,0)
 ;
"RTN","KMPDTP5",50,0)
 Q
"RTN","KMPDTP5",51,0)
 ;
"RTN","KMPDTP5",52,0)
EN1 ;-- entry point from taskman
"RTN","KMPDTP5",53,0)
 I '$D(KMPDATE) D EXIT Q
"RTN","KMPDTP5",54,0)
 I '$D(KMPDSRCH) D EXIT Q
"RTN","KMPDTP5",55,0)
 I '$G(KMPDTSEC) D EXIT Q
"RTN","KMPDTP5",56,0)
 I $G(KMPDTTL)="" D EXIT Q
"RTN","KMPDTP5",57,0)
 ;
"RTN","KMPDTP5",58,0)
 K ^TMP($J)
"RTN","KMPDTP5",59,0)
 U IO
"RTN","KMPDTP5",60,0)
 D DATA,PRINT,EXIT
"RTN","KMPDTP5",61,0)
 K ^TMP($J)
"RTN","KMPDTP5",62,0)
 Q
"RTN","KMPDTP5",63,0)
 ;
"RTN","KMPDTP5",64,0)
DATA ;-- compile data
"RTN","KMPDTP5",65,0)
 ;
"RTN","KMPDTP5",66,0)
 Q:'$D(KMPDATE)
"RTN","KMPDTP5",67,0)
 Q:'$G(KMPDSRCH)
"RTN","KMPDTP5",68,0)
 Q:'$G(KMPDTSEC)
"RTN","KMPDTP5",69,0)
 ;
"RTN","KMPDTP5",70,0)
 N DATA,DATE,DATE1,DELTA,DOT,END,GBL,HOUR,HR,I,IEN,QUEUED,TIME,XREF
"RTN","KMPDTP5",71,0)
 ;
"RTN","KMPDTP5",72,0)
 S DOT=1,QUEUED=$D(ZTQUEUED)
"RTN","KMPDTP5",73,0)
 ; set up HOUR() array
"RTN","KMPDTP5",74,0)
 F I=1:1:24 S:$P(KMPDATE(1),",",I)'="" HOUR(+$P(KMPDATE(1),",",I))=""
"RTN","KMPDTP5",75,0)
 Q:'$D(HOUR)
"RTN","KMPDTP5",76,0)
 S DATE=$P(KMPDATE(0),U)-.1,END=$P(KMPDATE(0),U,2)+.9
"RTN","KMPDTP5",77,0)
 Q:'DATE!('END)
"RTN","KMPDTP5",78,0)
 S GBL=$$GLOBAL(.KMPDSRCH) Q:GBL=""
"RTN","KMPDTP5",79,0)
 F  S DATE=$O(@GBL@(DATE)) Q:'DATE!(DATE>END)  D 
"RTN","KMPDTP5",80,0)
 .; determine hour
"RTN","KMPDTP5",81,0)
 .S HR=+$E($P(DATE,".",2),1,2)
"RTN","KMPDTP5",82,0)
 .S HR=$S(HR="":0,HR=24:0,1:HR)
"RTN","KMPDTP5",83,0)
 .; quit if not in HOUR() array
"RTN","KMPDTP5",84,0)
 .Q:'$D(HOUR(HR))
"RTN","KMPDTP5",85,0)
 .; hour & second
"RTN","KMPDTP5",86,0)
 .S TIME=$E($P(DATE,".",2),1,4) Q:'TIME
"RTN","KMPDTP5",87,0)
 .; insert colon (:) between hour & second
"RTN","KMPDTP5",88,0)
 .S TIME=$E(TIME,1,2)_":"_$E(TIME,3,4)
"RTN","KMPDTP5",89,0)
 .; date without time
"RTN","KMPDTP5",90,0)
 .S DATE1=$P(DATE,".")
"RTN","KMPDTP5",91,0)
 .S IEN=0
"RTN","KMPDTP5",92,0)
 .F  S IEN=$O(@GBL@(DATE,IEN)) Q:'IEN  D 
"RTN","KMPDTP5",93,0)
 ..Q:'$D(^KMPD(8973.2,IEN,0))  S DATA=^(0) Q:DATA=""
"RTN","KMPDTP5",94,0)
 ..S DOT=DOT+1 W:'QUEUED&('(DOT#1000)) "."
"RTN","KMPDTP5",95,0)
 ..S DELTA=$P(DATA,U,4)
"RTN","KMPDTP5",96,0)
 ..; quit if delta is less than threshold
"RTN","KMPDTP5",97,0)
 ..Q:DELTA<KMPDTSEC
"RTN","KMPDTP5",98,0)
 ..S ^TMP($J,DATE1,TIME)=DATA
"RTN","KMPDTP5",99,0)
 ..; new person - external format
"RTN","KMPDTP5",100,0)
 ..S $P(^TMP($J,DATE1,TIME),U,5)=$P($G(^VA(200,+$P(DATA,U,5),0)),U)
"RTN","KMPDTP5",101,0)
 ;
"RTN","KMPDTP5",102,0)
 Q
"RTN","KMPDTP5",103,0)
 ;
"RTN","KMPDTP5",104,0)
PRINT ;-- print data
"RTN","KMPDTP5",105,0)
 ;
"RTN","KMPDTP5",106,0)
 U IO
"RTN","KMPDTP5",107,0)
 D HDR
"RTN","KMPDTP5",108,0)
 Q:'$D(^TMP($J))
"RTN","KMPDTP5",109,0)
 N CONT,DATE,I,TOTAL
"RTN","KMPDTP5",110,0)
 S DATE="",CONT=1,TOTAL=0
"RTN","KMPDTP5",111,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  D  Q:'CONT
"RTN","KMPDTP5",112,0)
 .W !,$$FMTE^XLFDT(DATE,2) S HR=""
"RTN","KMPDTP5",113,0)
 .F  S HR=$O(^TMP($J,DATE,HR)) Q:HR=""  D  Q:'CONT
"RTN","KMPDTP5",114,0)
 ..I $Y>(IOSL-4) D  Q:'CONT
"RTN","KMPDTP5",115,0)
 ...D CONTINUE^KMPDUTL4("",1,.CONT) Q:'CONT
"RTN","KMPDTP5",116,0)
 ...D HDR W !,$$FMTE^XLFDT(DATE,2)
"RTN","KMPDTP5",117,0)
 ..W ?10,HR
"RTN","KMPDTP5",118,0)
 ..S DATA=^TMP($J,DATE,HR),TOTAL=TOTAL+1
"RTN","KMPDTP5",119,0)
 ..; user name
"RTN","KMPDTP5",120,0)
 ..W ?16,$S($P(DATA,U,5)]"":$E($P(DATA,U,5),1,15),1:"N/A")
"RTN","KMPDTP5",121,0)
 ..; client name
"RTN","KMPDTP5",122,0)
 ..W ?33,$S($P(DATA,U,6)]"":$E($P(DATA,U,6),1,15),1:"N/A")
"RTN","KMPDTP5",123,0)
 ..; ip address
"RTN","KMPDTP5",124,0)
 ..W ?50,$S($P(DATA,U,9)]"":$P(DATA,U,9),1:"N/A")
"RTN","KMPDTP5",125,0)
 ..; server delta
"RTN","KMPDTP5",126,0)
 ..W ?67,$J($P(DATA,U,4),8)
"RTN","KMPDTP5",127,0)
 ..W ! W:$E($O(^TMP($J,DATE,HR)),1,2)'=$E(HR,1,2) !
"RTN","KMPDTP5",128,0)
 ;
"RTN","KMPDTP5",129,0)
 ;I TOTAL W !!?3,"Total Count: ",$J($FN(TOTAL,",",0),$L(TOTAL)+1)
"RTN","KMPDTP5",130,0)
 ;
"RTN","KMPDTP5",131,0)
 ; pause if output to terminal
"RTN","KMPDTP5",132,0)
 I CONT D CONTINUE^KMPDUTL4("Press RETURN to continue",1)
"RTN","KMPDTP5",133,0)
 ;
"RTN","KMPDTP5",134,0)
 Q
"RTN","KMPDTP5",135,0)
 ;
"RTN","KMPDTP5",136,0)
HDR ;-- print header
"RTN","KMPDTP5",137,0)
 W @IOF
"RTN","KMPDTP5",138,0)
 S X=$G(KMPDTTL)
"RTN","KMPDTP5",139,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP5",140,0)
 S X=$G(KMPDATE(0)),X=$P(X,U,3)_" - "_$P(X,U,4)
"RTN","KMPDTP5",141,0)
 W !?(80-$L(X)\2),X,?61,"Printed: ",$$FMTE^XLFDT(DT,2)
"RTN","KMPDTP5",142,0)
 S X=$P($G(KMPDSRCH),U,2)_": "
"RTN","KMPDTP5",143,0)
 S X=X_$P($G(KMPDSRCH(1)),U,$S((+$G(KMPDSRCH))=1:2,1:1))
"RTN","KMPDTP5",144,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP5",145,0)
 S X="Threshold: "_$G(KMPDTSEC)_" seconds"
"RTN","KMPDTP5",146,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP5",147,0)
 W !
"RTN","KMPDTP5",148,0)
 W !,"Date",?10,"Time",?16,"User Name",?33,"Client Name",?50,"IP Address",?67,"Time-to-Load"
"RTN","KMPDTP5",149,0)
 W !,$$REPEAT^XLFSTR("-",IOM)
"RTN","KMPDTP5",150,0)
 ;
"RTN","KMPDTP5",151,0)
 Q
"RTN","KMPDTP5",152,0)
 ;
"RTN","KMPDTP5",153,0)
EXIT ;-- cleanup on exit
"RTN","KMPDTP5",154,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPDTP5",155,0)
 D ^%ZISC
"RTN","KMPDTP5",156,0)
 K KMPDATE,KMPDSRCH,KMPDTSEC,KMPDTTL
"RTN","KMPDTP5",157,0)
 Q
"RTN","KMPDTP5",158,0)
 ;
"RTN","KMPDTP5",159,0)
GLOBAL(KMPDSRCH) ;-- extrinsic function
"RTN","KMPDTP5",160,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTP5",161,0)
 ; KMPDSRCH... see above
"RTN","KMPDTP5",162,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTP5",163,0)
 Q:'$G(KMPDSRCH) ""
"RTN","KMPDTP5",164,0)
 N GLOBAL,TYPE
"RTN","KMPDTP5",165,0)
 S GLOBAL=""
"RTN","KMPDTP5",166,0)
 S TYPE=+$G(KMPDSRCH)
"RTN","KMPDTP5",167,0)
 Q:'TYPE ""
"RTN","KMPDTP5",168,0)
 ; username
"RTN","KMPDTP5",169,0)
 I TYPE=1 S GLOBAL=$NA(^KMPD(8973.2,"ASSNPDTTM","ORWCV",$P(KMPDSRCH(1),U)))
"RTN","KMPDTP5",170,0)
 ; client name
"RTN","KMPDTP5",171,0)
 I TYPE=2 S GLOBAL=$NA(^KMPD(8973.2,"ASSCLDTTM","ORWCV",KMPDSRCH(1)))
"RTN","KMPDTP5",172,0)
 ; ip address
"RTN","KMPDTP5",173,0)
 I TYPE=3 S GLOBAL=$NA(^KMPD(8973.2,"ASSIPDTTM","ORWCV",KMPDSRCH(1)))
"RTN","KMPDTP5",174,0)
 ; any occurrence
"RTN","KMPDTP5",175,0)
 I TYPE=4 S GLOBAL=$NA(^KMPD(8973.2,"ASSDTTM","ORWCV"))
"RTN","KMPDTP5",176,0)
 Q GLOBAL
"RTN","KMPDTP6")
0^5^B26949846
"RTN","KMPDTP6",1,0)
KMPDTP6 ;OAK/RAK - CP Timing Real-Time Threshold Alert ;6/21/05  10:15
"RTN","KMPDTP6",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**4**;Mar 22, 2002
"RTN","KMPDTP6",3,0)
 ;
"RTN","KMPDTP6",4,0)
EN ;-- entry point
"RTN","KMPDTP6",5,0)
 ;
"RTN","KMPDTP6",6,0)
 N I,KMPDHOUR,KMPDSRCH,KMPDTSEC,KMPDTTL,POP,X,Y
"RTN","KMPDTP6",7,0)
 N ZTDESC,ZTRTN,ZTRSAVE,ZTSK,%ZIS
"RTN","KMPDTP6",8,0)
 ;
"RTN","KMPDTP6",9,0)
 S KMPDTTL=" Coversheet Time-to-Load Alert Report > Real-Time "
"RTN","KMPDTP6",10,0)
 D HDR^KMPDUTL4(KMPDTTL)
"RTN","KMPDTP6",11,0)
 W !
"RTN","KMPDTP6",12,0)
 W !?7,"This alerting report shows the particular coversheet loads"
"RTN","KMPDTP6",13,0)
 W !?7,"that have excessive time-to-load values for TODAY (Real-Time)."
"RTN","KMPDTP6",14,0)
 W !?7,"This report will search for a particular person, a particular"
"RTN","KMPDTP6",15,0)
 W !?7,"client name or IP address."
"RTN","KMPDTP6",16,0)
 W !
"RTN","KMPDTP6",17,0)
 ;
"RTN","KMPDTP6",18,0)
 ; if no data
"RTN","KMPDTP6",19,0)
 I $O(^KMPTMP("KMPDT","ORWCV",""))="" D  Q
"RTN","KMPDTP6",20,0)
 .W !!?7,"*** There is currently no data in global ^KMPTMP(""KMPDT"",""ORWCV"") ***"
"RTN","KMPDTP6",21,0)
 ;
"RTN","KMPDTP6",22,0)
 ; hours
"RTN","KMPDTP6",23,0)
 S KMPDHOUR=$$RLTMHR^KMPDTU11(0,1,1)
"RTN","KMPDTP6",24,0)
 Q:KMPDHOUR=""
"RTN","KMPDTP6",25,0)
 ;
"RTN","KMPDTP6",26,0)
 ; time-to-load threshold seconds
"RTN","KMPDTP6",27,0)
 S KMPDTSEC=$$TTLSEC^KMPDTU10
"RTN","KMPDTP6",28,0)
 Q:'KMPDTSEC
"RTN","KMPDTP6",29,0)
 ;
"RTN","KMPDTP6",30,0)
 ; search by
"RTN","KMPDTP6",31,0)
 D SRCHBY^KMPDTU10(.KMPDSRCH,"ORWCV",1)
"RTN","KMPDTP6",32,0)
 Q:'KMPDSRCH
"RTN","KMPDTP6",33,0)
 ;
"RTN","KMPDTP6",34,0)
 ; select output device.
"RTN","KMPDTP6",35,0)
 S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPDTP6",36,0)
 W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPDTP6",37,0)
 ; if queued.
"RTN","KMPDTP6",38,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPDTP6",39,0)
 .S ZTDESC=KMPDTTL
"RTN","KMPDTP6",40,0)
 .S ZTRTN="EN1^KMPDTP6"
"RTN","KMPDTP6",41,0)
 .F I="KMPDHOUR","KMPDSRCH","KMPDTSEC","KMPDTTL" S ZTSAVE(I)=""
"RTN","KMPDTP6",42,0)
 .D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPDTP6",43,0)
 .D EXIT
"RTN","KMPDTP6",44,0)
 ;
"RTN","KMPDTP6",45,0)
 ; if output to terminal display message.
"RTN","KMPDTP6",46,0)
 W:$E(IOST,1,2)="C-" !,"Compiling timing stats..."
"RTN","KMPDTP6",47,0)
 D EN1
"RTN","KMPDTP6",48,0)
 ;
"RTN","KMPDTP6",49,0)
 Q
"RTN","KMPDTP6",50,0)
 ;
"RTN","KMPDTP6",51,0)
EN1 ;-- entry point from taskman
"RTN","KMPDTP6",52,0)
 Q:'$D(KMPDHOUR)
"RTN","KMPDTP6",53,0)
 Q:'$D(KMPDSRCH)
"RTN","KMPDTP6",54,0)
 Q:'$G(KMPDTSEC)
"RTN","KMPDTP6",55,0)
 Q:$G(KMPDTTL)=""
"RTN","KMPDTP6",56,0)
 ;
"RTN","KMPDTP6",57,0)
 K ^TMP($J)
"RTN","KMPDTP6",58,0)
 D DATA,PRINT,EXIT
"RTN","KMPDTP6",59,0)
 K ^TMP($J)
"RTN","KMPDTP6",60,0)
 Q
"RTN","KMPDTP6",61,0)
 ;
"RTN","KMPDTP6",62,0)
DATA ;-- compile data
"RTN","KMPDTP6",63,0)
 ;
"RTN","KMPDTP6",64,0)
 Q:'$D(KMPDHOUR)
"RTN","KMPDTP6",65,0)
 Q:'$G(KMPDSRCH)
"RTN","KMPDTP6",66,0)
 Q:'$G(KMPDTSEC)
"RTN","KMPDTP6",67,0)
 ;
"RTN","KMPDTP6",68,0)
 N DATA,DATA1,DATE,DATE1,DELTA,DOT,HOUR,HR,I,QUEUED,TIME
"RTN","KMPDTP6",69,0)
 ;
"RTN","KMPDTP6",70,0)
 S DOT=1,QUEUED=$D(ZTQUEUED)
"RTN","KMPDTP6",71,0)
 ; set up HOUR() array
"RTN","KMPDTP6",72,0)
 F I=1:1:24 S:$P(KMPDHOUR,",",I)'="" HOUR(+$P(KMPDHOUR,",",I))=""
"RTN","KMPDTP6",73,0)
 Q:'$D(HOUR)
"RTN","KMPDTP6",74,0)
 S I=""
"RTN","KMPDTP6",75,0)
 F  S I=$O(^KMPTMP("KMPDT","ORWCV",I)) Q:I=""  S DATA=^(I) I DATA]"" D 
"RTN","KMPDTP6",76,0)
 .S DOT=DOT+1 W:'QUEUED&('(DOT#1000)) "."
"RTN","KMPDTP6",77,0)
 .; start/end date/time in fileman format
"RTN","KMPDTP6",78,0)
 .S DATE(1)=$$HTFM^XLFDT($P(DATA,U)),DATE(2)=$$HTFM^XLFDT($P(DATA,U,2))
"RTN","KMPDTP6",79,0)
 .S DELTA=$$HDIFF^XLFDT($P(DATA,U,2),$P(DATA,U),2)
"RTN","KMPDTP6",80,0)
 .Q:DELTA<KMPDTSEC
"RTN","KMPDTP6",81,0)
 .Q:'DATE(1)!('DATE(2))
"RTN","KMPDTP6",82,0)
 .; determine hour
"RTN","KMPDTP6",83,0)
 .S HR=+$E($P(DATE(1),".",2),1,2)
"RTN","KMPDTP6",84,0)
 .S HR=$S(HR="":0,HR=24:0,1:HR)
"RTN","KMPDTP6",85,0)
 .; quit if not in HOUR() array
"RTN","KMPDTP6",86,0)
 .Q:'$D(HOUR(HR))
"RTN","KMPDTP6",87,0)
 .; hour & second
"RTN","KMPDTP6",88,0)
 .S TIME=$E($P(DATE(1),".",2),1,4) Q:'TIME
"RTN","KMPDTP6",89,0)
 .; insert colon (:) between hour & second
"RTN","KMPDTP6",90,0)
 .S TIME=$E(TIME,1,2)_":"_$E(TIME,3,4)
"RTN","KMPDTP6",91,0)
 .S:$P(TIME,":",2)="" $P(TIME,":",2)="00"
"RTN","KMPDTP6",92,0)
 .; date without time
"RTN","KMPDTP6",93,0)
 .S DATE1=$P(DATE(1),".") Q:'DATE1
"RTN","KMPDTP6",94,0)
 .S DATA1="^^^"_DELTA_"^"_$P(DATA,U,3)_"^"_$P(DATA,U,4)_"^^^"_$P($P(I," ",2),"-")
"RTN","KMPDTP6",95,0)
 .; quit if no match
"RTN","KMPDTP6",96,0)
 .Q:'$$MATCH
"RTN","KMPDTP6",97,0)
 .S ^TMP($J,DATE1,TIME)=DATA1
"RTN","KMPDTP6",98,0)
 .; new person - external format
"RTN","KMPDTP6",99,0)
 .S $P(^TMP($J,DATE1,TIME),U,5)=$P($G(^VA(200,+$P(DATA,U,3),0)),U)
"RTN","KMPDTP6",100,0)
 ;
"RTN","KMPDTP6",101,0)
 Q
"RTN","KMPDTP6",102,0)
 ;
"RTN","KMPDTP6",103,0)
PRINT ;-- print data
"RTN","KMPDTP6",104,0)
 ;
"RTN","KMPDTP6",105,0)
 U IO
"RTN","KMPDTP6",106,0)
 D HDR
"RTN","KMPDTP6",107,0)
 Q:'$D(^TMP($J))
"RTN","KMPDTP6",108,0)
 N CONT,DATE,I,TOTAL
"RTN","KMPDTP6",109,0)
 S DATE="",CONT=1,TOTAL=0
"RTN","KMPDTP6",110,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  D  Q:'CONT
"RTN","KMPDTP6",111,0)
 .W !,$$FMTE^XLFDT(DATE,2) S HR=""
"RTN","KMPDTP6",112,0)
 .F  S HR=$O(^TMP($J,DATE,HR)) Q:HR=""  D  Q:'CONT
"RTN","KMPDTP6",113,0)
 ..I $Y>(IOSL-4) D  Q:'CONT
"RTN","KMPDTP6",114,0)
 ...D CONTINUE^KMPDUTL4("",1,.CONT) Q:'CONT
"RTN","KMPDTP6",115,0)
 ...D HDR W !,$$FMTE^XLFDT(DATE,2)
"RTN","KMPDTP6",116,0)
 ..W ?10,HR
"RTN","KMPDTP6",117,0)
 ..S DATA=^TMP($J,DATE,HR),TOTAL=TOTAL+1
"RTN","KMPDTP6",118,0)
 ..; user name
"RTN","KMPDTP6",119,0)
 ..W ?16,$S($P(DATA,U,5)]"":$E($P(DATA,U,5),1,15),1:"N/A")
"RTN","KMPDTP6",120,0)
 ..; client name
"RTN","KMPDTP6",121,0)
 ..W ?33,$S($P(DATA,U,6)]"":$E($P(DATA,U,6),1,15),1:"N/A")
"RTN","KMPDTP6",122,0)
 ..; ip address
"RTN","KMPDTP6",123,0)
 ..W ?50,$S($P(DATA,U,9)]"":$P(DATA,U,9),1:"N/A")
"RTN","KMPDTP6",124,0)
 ..; server delta
"RTN","KMPDTP6",125,0)
 ..W ?67,$J($P(DATA,U,4),8)
"RTN","KMPDTP6",126,0)
 ..W ! W:$E($O(^TMP($J,DATE,HR)),1,2)'=$E(HR,1,2) !
"RTN","KMPDTP6",127,0)
 ;
"RTN","KMPDTP6",128,0)
 I CONT&(TOTAL) W !!?3,"Total Count: ",$J($FN(TOTAL,",",0),$L(TOTAL)+1)
"RTN","KMPDTP6",129,0)
 ;
"RTN","KMPDTP6",130,0)
 ; pause if output to terminal
"RTN","KMPDTP6",131,0)
 I CONT D CONTINUE^KMPDUTL4("Press RETURN to continue",1)
"RTN","KMPDTP6",132,0)
 ;
"RTN","KMPDTP6",133,0)
 Q
"RTN","KMPDTP6",134,0)
 ;
"RTN","KMPDTP6",135,0)
HDR ;-- print header
"RTN","KMPDTP6",136,0)
 W @IOF
"RTN","KMPDTP6",137,0)
 S X=$G(KMPDTTL)
"RTN","KMPDTP6",138,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP6",139,0)
 S X="Hour(s): "_$G(KMPDHOUR)
"RTN","KMPDTP6",140,0)
 W !?(80-$L(X)\2),X,?61,"Printed: ",$$FMTE^XLFDT(DT,2)
"RTN","KMPDTP6",141,0)
 S X=$P($G(KMPDSRCH),U,2)_": "
"RTN","KMPDTP6",142,0)
 S X=X_$P($G(KMPDSRCH(1)),U,$S((+$G(KMPDSRCH))=1:2,1:1))
"RTN","KMPDTP6",143,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP6",144,0)
 S X="Threshold: "_$G(KMPDTSEC)_" seconds"
"RTN","KMPDTP6",145,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP6",146,0)
 W !
"RTN","KMPDTP6",147,0)
 W !,"Date",?10,"Time",?16,"User Name",?33,"Client Name",?50,"IP Address",?67,"Time-to-Load"
"RTN","KMPDTP6",148,0)
 W !,$$REPEAT^XLFSTR("-",IOM)
"RTN","KMPDTP6",149,0)
 ;
"RTN","KMPDTP6",150,0)
 Q
"RTN","KMPDTP6",151,0)
 ;
"RTN","KMPDTP6",152,0)
EXIT ;-- cleanup on exit
"RTN","KMPDTP6",153,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPDTP6",154,0)
 D ^%ZISC
"RTN","KMPDTP6",155,0)
 K KMPDHOUR,KMPDSRCH,KMPDTSEC,KMPDTTL
"RTN","KMPDTP6",156,0)
 Q
"RTN","KMPDTP6",157,0)
 ;
"RTN","KMPDTP6",158,0)
MATCH() ;-- extrinsic function - check for matches
"RTN","KMPDTP6",159,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTP6",160,0)
 ; Return: 1 - match found
"RTN","KMPDTP6",161,0)
 ;         0 - no match found
"RTN","KMPDTP6",162,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTP6",163,0)
 Q:'$G(KMPDSRCH) 0
"RTN","KMPDTP6",164,0)
 ; any occurrence
"RTN","KMPDTP6",165,0)
 Q:(+KMPDSRCH)=4 1
"RTN","KMPDTP6",166,0)
 ; if not 'any occurrence' then must have kmpdsrch(1) node
"RTN","KMPDTP6",167,0)
 Q:'$D(KMPDSRCH(1)) 0
"RTN","KMPDTP6",168,0)
 ; if not 'any occurrence' must have DATA1 to determine match
"RTN","KMPDTP6",169,0)
 Q:$G(DATA1)=""
"RTN","KMPDTP6",170,0)
 ; user name
"RTN","KMPDTP6",171,0)
 Q:(+KMPDSRCH)=1&($P(DATA1,U,5)'=$P(KMPDSRCH(1),U)) 0
"RTN","KMPDTP6",172,0)
 ; client name
"RTN","KMPDTP6",173,0)
 Q:(+KMPDSRCH)=2&($P(DATA1,U,6)'=$P(KMPDSRCH(1),U)) 0
"RTN","KMPDTP6",174,0)
 ; ip address
"RTN","KMPDTP6",175,0)
 Q:(+KMPDSRCH)=3&($P(DATA1,U,9)'=$P(KMPDSRCH(1),U)) 0
"RTN","KMPDTP6",176,0)
 Q 1
"RTN","KMPDTP7")
0^4^B23266885
"RTN","KMPDTP7",1,0)
KMPDTP7 ;OAK/RAK - Real-Time CP Timing Hourly Time-to-Load ;6/21/05  10:15
"RTN","KMPDTP7",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**4**;Mar 22, 2002
"RTN","KMPDTP7",3,0)
 ;
"RTN","KMPDTP7",4,0)
EN ;-- entry point
"RTN","KMPDTP7",5,0)
 N KMPDTTL,POP,X,Y,ZTDESC,ZTRTN,ZTRSAVE,ZTSK,%ZIS
"RTN","KMPDTP7",6,0)
 S KMPDTTL=" Real-Time Hourly Coversheet Time-to-Load (TTL) Report "
"RTN","KMPDTP7",7,0)
 D HDR^KMPDUTL4(KMPDTTL)
"RTN","KMPDTP7",8,0)
 W !
"RTN","KMPDTP7",9,0)
 W !?7,"This report displays the hourly average time-to-load value"
"RTN","KMPDTP7",10,0)
 W !?7,"for the coversheet at this site over 24 hours."
"RTN","KMPDTP7",11,0)
 W !
"RTN","KMPDTP7",12,0)
 ;
"RTN","KMPDTP7",13,0)
 ; if no data
"RTN","KMPDTP7",14,0)
 I $O(^KMPTMP("KMPDT","ORWCV",""))="" D  Q
"RTN","KMPDTP7",15,0)
 .W !!?7,"*** There is currently no data in global ^KMPTMP(""KMPDT"",""ORWCV"") ***"
"RTN","KMPDTP7",16,0)
 ;
"RTN","KMPDTP7",17,0)
 ; select output device.
"RTN","KMPDTP7",18,0)
 S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPDTP7",19,0)
 W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPDTP7",20,0)
 ; if queued.
"RTN","KMPDTP7",21,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPDTP7",22,0)
 .S ZTDESC=KMPDTTL
"RTN","KMPDTP7",23,0)
 .S ZTRTN="EN1^KMPDTP7"
"RTN","KMPDTP7",24,0)
 .S ZTSAVE("KMPDTTL")=""
"RTN","KMPDTP7",25,0)
 .D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPDTP7",26,0)
 .D EXIT
"RTN","KMPDTP7",27,0)
 ;
"RTN","KMPDTP7",28,0)
 ; if output to terminal display message.
"RTN","KMPDTP7",29,0)
 W:$E(IOST,1,2)="C-" !,"Compiling timing stats..."
"RTN","KMPDTP7",30,0)
 D EN1
"RTN","KMPDTP7",31,0)
 ;
"RTN","KMPDTP7",32,0)
 Q
"RTN","KMPDTP7",33,0)
 ;
"RTN","KMPDTP7",34,0)
EN1 ;-- entry point from taskman
"RTN","KMPDTP7",35,0)
 K ^TMP($J)
"RTN","KMPDTP7",36,0)
 D DATA,PRINT,EXIT
"RTN","KMPDTP7",37,0)
 K ^TMP($J)
"RTN","KMPDTP7",38,0)
 Q
"RTN","KMPDTP7",39,0)
 ;
"RTN","KMPDTP7",40,0)
DATA ;-- compile data
"RTN","KMPDTP7",41,0)
 ;
"RTN","KMPDTP7",42,0)
 N DATA,DATA1,DATE,DATE1,DELTA,DOT,HOURS,HR,I,QUEUED,TIME
"RTN","KMPDTP7",43,0)
 ;
"RTN","KMPDTP7",44,0)
 S DOT=1,QUEUED=$D(ZTQUEUED),DATE=$$DT^XLFDT
"RTN","KMPDTP7",45,0)
 ; array with hours
"RTN","KMPDTP7",46,0)
 S HOURS=$$RLTMHR^KMPDTU11(1,0) Q:HOURS=""
"RTN","KMPDTP7",47,0)
 F I=1:1 Q:$P(HOURS,",",I)=""  S ^TMP($J,DATE,$P(HOURS,",",I))=""
"RTN","KMPDTP7",48,0)
 S I="",TOTAL=0
"RTN","KMPDTP7",49,0)
 F  S I=$O(^KMPTMP("KMPDT","ORWCV",I)) Q:I=""  S DATA=^(I) I DATA]"" D 
"RTN","KMPDTP7",50,0)
 .S DOT=DOT+1 W:'QUEUED&('(DOT#1000)) "."
"RTN","KMPDTP7",51,0)
 .; start/end date/time in fileman format
"RTN","KMPDTP7",52,0)
 .S DATE(1)=$$HTFM^XLFDT($P(DATA,U)),DATE(2)=$$HTFM^XLFDT($P(DATA,U,2))
"RTN","KMPDTP7",53,0)
 .Q:'DATE(1)!('DATE(2))
"RTN","KMPDTP7",54,0)
 .S DELTA=$$FMDIFF^XLFDT(DATE(2),DATE(1),2)
"RTN","KMPDTP7",55,0)
 .S:DELTA<0 DELTA=""
"RTN","KMPDTP7",56,0)
 .; determine hour
"RTN","KMPDTP7",57,0)
 .S HR=+$E($P(DATE(1),".",2),1,2)
"RTN","KMPDTP7",58,0)
 .S HR=$S(HR="":0,HR=24:0,1:HR)
"RTN","KMPDTP7",59,0)
 .; quit if not in HOUR() array
"RTN","KMPDTP7",60,0)
 .;Q:'$D(HOUR(HR))
"RTN","KMPDTP7",61,0)
 .; hour & second
"RTN","KMPDTP7",62,0)
 .S TIME=$E($P(DATE(1),".",2),1,4) Q:'TIME
"RTN","KMPDTP7",63,0)
 .; insert colon (:) between hour & second
"RTN","KMPDTP7",64,0)
 .S TIME=$E(TIME,1,2)_":"_$E(TIME,3,4)
"RTN","KMPDTP7",65,0)
 .S:$P(TIME,":",2)="" $P(TIME,":",2)="00"
"RTN","KMPDTP7",66,0)
 .; date without time
"RTN","KMPDTP7",67,0)
 .S DATE1=$P(DATE(1),".") Q:'DATE1
"RTN","KMPDTP7",68,0)
 .S DATA1="^^^"_DELTA_"^"_$P(DATA,U,3)_"^"_$P(DATA,U,4)_"^^^"_$P($P(I," ",2),"-")
"RTN","KMPDTP7",69,0)
 .;
"RTN","KMPDTP7",70,0)
 .; if delta
"RTN","KMPDTP7",71,0)
 .I $P(DATA1,U,4)'="" D 
"RTN","KMPDTP7",72,0)
 ..; minimum delta
"RTN","KMPDTP7",73,0)
 ..I $P(^TMP($J,DATE,HR),U,2)=""!($P(DATA1,U,4)<$P(^TMP($J,DATE,HR),U,2)) D 
"RTN","KMPDTP7",74,0)
 ...S $P(^TMP($J,DATE,HR),U,2)=$P(DATA1,U,4)
"RTN","KMPDTP7",75,0)
 ..; maximum delta
"RTN","KMPDTP7",76,0)
 ..I $P(DATA1,U,4)>$P(^TMP($J,DATE,HR),U,3) S $P(^TMP($J,DATE,HR),U,3)=$P(DATA1,U,4)
"RTN","KMPDTP7",77,0)
 ..; total delta
"RTN","KMPDTP7",78,0)
 ..S $P(^TMP($J,DATE,HR),U,4)=$P(^TMP($J,DATE,HR),U,4)+$P(DATA1,U,4)
"RTN","KMPDTP7",79,0)
 ..; count
"RTN","KMPDTP7",80,0)
 ..S $P(^TMP($J,DATE,HR),U,5)=$P(^TMP($J,DATE,HR),U,5)+1
"RTN","KMPDTP7",81,0)
 .; if no delta
"RTN","KMPDTP7",82,0)
 .E  S $P(^TMP($J,DATE,HR),U,6)=$P(^TMP($J,DATE,HR),U,6)+1
"RTN","KMPDTP7",83,0)
 ;
"RTN","KMPDTP7",84,0)
 ; average
"RTN","KMPDTP7",85,0)
 F HR=1:1 S I=$P(HOURS,",",HR) Q:I=""  I $P(^TMP($J,DATE,I),U,5) D 
"RTN","KMPDTP7",86,0)
 .S $P(^TMP($J,DATE,I),U)=$P(^TMP($J,DATE,I),U,4)/$P(^TMP($J,DATE,I),U,5)
"RTN","KMPDTP7",87,0)
 ;
"RTN","KMPDTP7",88,0)
 Q
"RTN","KMPDTP7",89,0)
 ;
"RTN","KMPDTP7",90,0)
PRINT ;-- print data
"RTN","KMPDTP7",91,0)
 U IO
"RTN","KMPDTP7",92,0)
 D HDR
"RTN","KMPDTP7",93,0)
 Q:'$D(^TMP($J))
"RTN","KMPDTP7",94,0)
 N CONT,DATE,HR,I,TOTAL
"RTN","KMPDTP7",95,0)
 S DATE="",CONT=1
"RTN","KMPDTP7",96,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  S HR="" D  Q:'CONT
"RTN","KMPDTP7",97,0)
 .S TOTAL=""
"RTN","KMPDTP7",98,0)
 .W !,$$FMTE^XLFDT(DATE,2)
"RTN","KMPDTP7",99,0)
 .F  S HR=$O(^TMP($J,DATE,HR)) Q:HR=""  D  Q:'CONT
"RTN","KMPDTP7",100,0)
 ..; page feed
"RTN","KMPDTP7",101,0)
 ..I $Y>(IOSL-3) D CONTINUE^KMPDUTL4("",1,.CONT) Q:'CONT  D HDR W !
"RTN","KMPDTP7",102,0)
 ..W ?12," ",$S($L(HR)=1:"0",1:""),HR
"RTN","KMPDTP7",103,0)
 ..S DATA=^TMP($J,DATE,HR)
"RTN","KMPDTP7",104,0)
 ..W ?20,$J($FN($P(DATA,U),",",0),10)
"RTN","KMPDTP7",105,0)
 ..W ?34,$J($FN($P(DATA,U,2),",",0),10)
"RTN","KMPDTP7",106,0)
 ..W ?48,$J($FN($P(DATA,U,3),",",0),10)
"RTN","KMPDTP7",107,0)
 ..W ?62,$J($FN($P(DATA,U,5),",",0),10)
"RTN","KMPDTP7",108,0)
 ..W !
"RTN","KMPDTP7",109,0)
 ..S $P(TOTAL,U)=$P(TOTAL,U)+$P(DATA,U,5)
"RTN","KMPDTP7",110,0)
 ..S $P(TOTAL,U,2)=$P(TOTAL,U,2)+$P(DATA,U,6)
"RTN","KMPDTP7",111,0)
 .;
"RTN","KMPDTP7",112,0)
 .; back to DATE level
"RTN","KMPDTP7",113,0)
 .; totals
"RTN","KMPDTP7",114,0)
 .W ?62,"----------",!?62,$J($FN(TOTAL,",",0),10),!
"RTN","KMPDTP7",115,0)
 .W !?12,"Incomplete: ",$J($FN($P(TOTAL,U,2),",",0),$L($P(TOTAL,U,2))+2),!
"RTN","KMPDTP7",116,0)
 .; if another date
"RTN","KMPDTP7",117,0)
 .I $O(^TMP($J,DATE)) D CONTINUE^KMPDUTL4("",1,.CONT) Q:'CONT  D HDR W !
"RTN","KMPDTP7",118,0)
 ;
"RTN","KMPDTP7",119,0)
 I CONT D 
"RTN","KMPDTP7",120,0)
 .; legend
"RTN","KMPDTP7",121,0)
 .W !!?2,"CV  = Coversheet",!?2,"TTL = Time-to-Load"
"RTN","KMPDTP7",122,0)
 .; pause if output to terminal
"RTN","KMPDTP7",123,0)
 .D CONTINUE^KMPDUTL4("Press RETURN to continue",1)
"RTN","KMPDTP7",124,0)
 ;
"RTN","KMPDTP7",125,0)
 Q
"RTN","KMPDTP7",126,0)
 ;
"RTN","KMPDTP7",127,0)
HDR ;-- print header
"RTN","KMPDTP7",128,0)
 W @IOF
"RTN","KMPDTP7",129,0)
 S X=$G(KMPDTTL)
"RTN","KMPDTP7",130,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP7",131,0)
 S X=$$FMTE^XLFDT($$DT^XLFDT)
"RTN","KMPDTP7",132,0)
 W !?(80-$L(X)\2),X,?61,"Printed: ",$$FMTE^XLFDT(DT,2)
"RTN","KMPDTP7",133,0)
 W !
"RTN","KMPDTP7",134,0)
 W !?20,"|---------------Seconds---------------|"
"RTN","KMPDTP7",135,0)
 W !,"Date",?12,"Hour",?20,"TTL Average",?34,"TTL Minimum",?48,"TTL Maximum",?62,"# of CV Loads"
"RTN","KMPDTP7",136,0)
 W !,$$REPEAT^XLFSTR("-",IOM)
"RTN","KMPDTP7",137,0)
 ;
"RTN","KMPDTP7",138,0)
 Q
"RTN","KMPDTP7",139,0)
 ;
"RTN","KMPDTP7",140,0)
EXIT ;-- cleanup on exit
"RTN","KMPDTP7",141,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPDTP7",142,0)
 D ^%ZISC
"RTN","KMPDTP7",143,0)
 K KMPDTTL
"RTN","KMPDTP7",144,0)
 Q
"RTN","KMPDTU01")
0^10^B21675708
"RTN","KMPDTU01",1,0)
KMPDTU01 ;OAK/RAK - CM Tools Timing Utility ;6/21/05  10:15
"RTN","KMPDTU01",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**4**;Mar 22, 2002
"RTN","KMPDTU01",3,0)
 ;
"RTN","KMPDTU01",4,0)
DAILY(KMPDT) ;-- transmit daily stats to national database
"RTN","KMPDTU01",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU01",6,0)
 ; KMPDT.... Compression date in internal fileman formt. It represents 
"RTN","KMPDTU01",7,0)
 ;           the date from which the previous days data should be
"RTN","KMPDTU01",8,0)
 ;           transmitted. 
"RTN","KMPDTU01",9,0)
 ;           Example: if KMPDT = 2981011  then tranmission will be
"RTN","KMPDTU01",10,0)
 ;                    on 2981010 (KMPDT-1)
"RTN","KMPDTU01",11,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU01",12,0)
 ;
"RTN","KMPDTU01",13,0)
 Q:'$G(KMPDT)
"RTN","KMPDTU01",14,0)
 ;
"RTN","KMPDTU01",15,0)
 N DATE,DATA,DELTA,ERROR,FDA,HOUR,I,IEN,PIECE,PTNP,SDTM,SITE,SS
"RTN","KMPDTU01",16,0)
 N STR
"RTN","KMPDTU01",17,0)
 ;
"RTN","KMPDTU01",18,0)
 ; storage  processed
"RTN","KMPDTU01",19,0)
 K ^TMP($J),^TMP("KMPDTU01",$J)
"RTN","KMPDTU01",20,0)
 ; site info.
"RTN","KMPDTU01",21,0)
 S SITE=$$SITE^VASITE Q:SITE=""
"RTN","KMPDTU01",22,0)
 S IEN=0
"RTN","KMPDTU01",23,0)
 W:'$D(ZTQUEUED) !,"Compressing data into daily format..."
"RTN","KMPDTU01",24,0)
 F  S IEN=$O(^KMPD(8973.2,"ADT",KMPDT,IEN)) Q:'IEN  D 
"RTN","KMPDTU01",25,0)
 .Q:'$D(^KMPD(8973.2,IEN,0))  S DATA(0)=^(0)
"RTN","KMPDTU01",26,0)
 .; quit if daily data has already been sent to national database
"RTN","KMPDTU01",27,0)
 .;Q:$P(DATA(0),U,10)
"RTN","KMPDTU01",28,0)
 .W:'$D(ZTQUEUED)&('(IEN#1000)) "."
"RTN","KMPDTU01",29,0)
 .; start date/time      date w/no time    delta
"RTN","KMPDTU01",30,0)
 .S SDTM=$P(DATA(0),U,3),DATE=$P(SDTM,"."),DELTA=$P(DATA(0),U,4)
"RTN","KMPDTU01",31,0)
 .; hour
"RTN","KMPDTU01",32,0)
 .S HOUR=+$E($P(SDTM,".",2),1,2)
"RTN","KMPDTU01",33,0)
 .; quit if no kmptmp subscript
"RTN","KMPDTU01",34,0)
 .S SS=$P(DATA(0),U,7)  Q:SS=""
"RTN","KMPDTU01",35,0)
 .;
"RTN","KMPDTU01",36,0)
 .S PTNP=$$PTNP^KMPDHU03(SDTM) Q:'PTNP
"RTN","KMPDTU01",37,0)
 .; piece 4 - prime time
"RTN","KMPDTU01",38,0)
 .; piece 5 - non-prime time
"RTN","KMPDTU01",39,0)
 .S PIECE=$S(PTNP=1:4,1:5)
"RTN","KMPDTU01",40,0)
 .;
"RTN","KMPDTU01",41,0)
 .S $P(^TMP($J,KMPDT,SS),U)=KMPDT
"RTN","KMPDTU01",42,0)
 .S $P(^TMP($J,KMPDT,SS),U,3)=SS
"RTN","KMPDTU01",43,0)
 .S $P(^TMP($J,KMPDT,SS),U,PIECE)=$P(^TMP($J,KMPDT,SS),U,PIECE)+DELTA
"RTN","KMPDTU01",44,0)
 .S $P(^TMP($J,KMPDT,SS),U,(PIECE+2))=$P(^TMP($J,KMPDT,SS),U,(PIECE+2))+1
"RTN","KMPDTU01",45,0)
 .; hourly delta
"RTN","KMPDTU01",46,0)
 .S $P(^TMP($J,KMPDT,SS,PTNP),U,(HOUR+1))=$P($G(^TMP($J,KMPDT,SS,PTNP)),U,(HOUR+1))+DELTA
"RTN","KMPDTU01",47,0)
 .; hourly occurrences
"RTN","KMPDTU01",48,0)
 .S $P(^TMP($J,KMPDT,SS,PTNP+.1),U,(HOUR+1))=$P($G(^TMP($J,KMPDT,SS,PTNP+.1)),U,(HOUR+1))+1
"RTN","KMPDTU01",49,0)
 .; node 99.1 is for national database (end date^facility name)
"RTN","KMPDTU01",50,0)
 .S ^TMP($J,KMPDT,SS,99.1)=KMPDT_"^"_$P(SITE,U,2)_"^"_$P(SITE,U,3)_"^"_$$WORKDAY^XUWORKDY(DATE)
"RTN","KMPDTU01",51,0)
 .; add to processed array.
"RTN","KMPDTU01",52,0)
 .S ^TMP("KMPDTU01",$J,IEN)=""
"RTN","KMPDTU01",53,0)
 ;
"RTN","KMPDTU01",54,0)
 D:$D(^TMP($J)) TRANSMIT(2)
"RTN","KMPDTU01",55,0)
 K ^TMP($J)
"RTN","KMPDTU01",56,0)
 ;
"RTN","KMPDTU01",57,0)
 ; update field .1 (DAILY - SENT TO CM NATIONAL DB) to 'YES' for all
"RTN","KMPDTU01",58,0)
 ; processed entries.
"RTN","KMPDTU01",59,0)
 W:'$D(ZTQUEUED) !!,"Updating records to reflect transmission..."
"RTN","KMPDTU01",60,0)
 S IEN=0
"RTN","KMPDTU01",61,0)
 F  S IEN=$O(^TMP("KMPDTU01",$J,IEN)) Q:'IEN  D 
"RTN","KMPDTU01",62,0)
 .K FDA,ERROR W:'$D(ZTQUEUED)&('(IEN#1000)) "."
"RTN","KMPDTU01",63,0)
 .S FDA($J,8973.2,IEN_",",.1)=1
"RTN","KMPDTU01",64,0)
 .D FILE^DIE("","FDA($J)","ERROR")
"RTN","KMPDTU01",65,0)
 ;
"RTN","KMPDTU01",66,0)
 K ^TMP("KMPDTU01",$J)
"RTN","KMPDTU01",67,0)
 ;
"RTN","KMPDTU01",68,0)
 W:'$D(ZTQUEUED) !!,"Finished!"
"RTN","KMPDTU01",69,0)
 ;
"RTN","KMPDTU01",70,0)
 Q
"RTN","KMPDTU01",71,0)
 ;
"RTN","KMPDTU01",72,0)
TRANSMIT(KMPDTWD) ;-- format data into e-mail and send to cm national database
"RTN","KMPDTU01",73,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU01",74,0)
 ; KMPDTWD... Weekly/Daily
"RTN","KMPDTU01",75,0)
 ;             1 - weekly
"RTN","KMPDTU01",76,0)
 ;             2 - daily
"RTN","KMPDTU01",77,0)
 ;
"RTN","KMPDTU01",78,0)
 ; D = date
"RTN","KMPDTU01",79,0)
 ; S = subscript
"RTN","KMPDTU01",80,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU01",81,0)
 ;
"RTN","KMPDTU01",82,0)
 Q:'$G(KMPDTWD)
"RTN","KMPDTU01",83,0)
 Q:'$D(^TMP($J))
"RTN","KMPDTU01",84,0)
 ;
"RTN","KMPDTU01",85,0)
 N CPU,D,DATE,I,IEN,LN,S,TL,TRANSTO,XMSUB,X,XMTEXT,XMY,XMZ,Y,Z
"RTN","KMPDTU01",86,0)
 ;
"RTN","KMPDTU01",87,0)
 K ^TMP("KMPDTU01-2",$J)
"RTN","KMPDTU01",88,0)
 ;
"RTN","KMPDTU01",89,0)
 S DATE=$S(KMPDTWD=1:$G(START),1:$G(KMPDT))
"RTN","KMPDTU01",90,0)
 S LN=0
"RTN","KMPDTU01",91,0)
 ; version and patch info
"RTN","KMPDTU01",92,0)
 S LN=LN+1,^TMP("KMPDTU01-2",$J,LN)="VERSION="_$$VERSION^KMPDUTL
"RTN","KMPDTU01",93,0)
 ; system information
"RTN","KMPDTU01",94,0)
 S LN=LN+1,^TMP("KMPDTU01-2",$J,LN)="SYSINFO="_$$SYSINFO^KMPDUTL1()
"RTN","KMPDTU01",95,0)
 ; send cpu data to national database
"RTN","KMPDTU01",96,0)
 D CPU^KMPDUTL5(.CPU) I $D(CPU) S I="" F  S I=$O(CPU(I)) Q:I=""  D 
"RTN","KMPDTU01",97,0)
 .S LN=LN+1,^TMP("KMPDTU01-2",$J,LN)="CPU="_I_U_CPU(I)
"RTN","KMPDTU01",98,0)
 ;
"RTN","KMPDTU01",99,0)
 W:'$D(ZTQUEUED) !!,"Formatting ",$$FMTE^XLFDT($G(START))," data for mail delivery..."
"RTN","KMPDTU01",100,0)
 ; reformat so that data is in ^TMP("KMPR UPLOAD",$J,LN)= format.
"RTN","KMPDTU01",101,0)
 S IEN=0,D=""
"RTN","KMPDTU01",102,0)
 F  S D=$O(^TMP($J,D)) Q:D=""  S S="" W "." D 
"RTN","KMPDTU01",103,0)
 .W !,D
"RTN","KMPDTU01",104,0)
 .F  S S=$O(^TMP($J,D,S)) Q:S=""  D 
"RTN","KMPDTU01",105,0)
 ..S IEN=IEN+1,LN=LN+1
"RTN","KMPDTU01",106,0)
 ..S ^TMP("KMPDTU01-2",$J,LN)=IEN_",0)="_^TMP($J,D,S)
"RTN","KMPDTU01",107,0)
 ..; if prime time
"RTN","KMPDTU01",108,0)
 ..I $D(^TMP($J,D,S,1)) D 
"RTN","KMPDTU01",109,0)
 ...S LN=LN+1
"RTN","KMPDTU01",110,0)
 ...S ^TMP("KMPDTU01-2",$J,LN)=IEN_",1)="_^TMP($J,D,S,1)
"RTN","KMPDTU01",111,0)
 ...S LN=LN+1
"RTN","KMPDTU01",112,0)
 ...S ^TMP("KMPDTU01-2",$J,LN)=IEN_",1.1)="_^TMP($J,D,S,1.1)
"RTN","KMPDTU01",113,0)
 ..; if non-prime time
"RTN","KMPDTU01",114,0)
 ..I $D(^TMP($J,D,S,2)) D 
"RTN","KMPDTU01",115,0)
 ...S LN=LN+1
"RTN","KMPDTU01",116,0)
 ...S ^TMP("KMPDTU01-2",$J,LN)=IEN_",2)="_^TMP($J,D,S,2)
"RTN","KMPDTU01",117,0)
 ...S LN=LN+1
"RTN","KMPDTU01",118,0)
 ...S ^TMP("KMPDTU01-2",$J,LN)=IEN_",2.1)="_^TMP($J,D,S,2.1)
"RTN","KMPDTU01",119,0)
 ..; node 99.1 for national database
"RTN","KMPDTU01",120,0)
 ..S LN=LN+1,^TMP("KMPDTU01-2",$J,LN)=IEN_",99.1)="_$G(^TMP($J,D,S,99.1))
"RTN","KMPDTU01",121,0)
 ;
"RTN","KMPDTU01",122,0)
 ; quit if no data to transmit.
"RTN","KMPDTU01",123,0)
 Q:'$D(^TMP("KMPDTU01-2",$J))
"RTN","KMPDTU01",124,0)
 S TL=$$TESTLAB^KMPDUT1
"RTN","KMPDTU01",125,0)
 ; send packman message.
"RTN","KMPDTU01",126,0)
 S XMTEXT="^TMP(""KMPDTU01-2"","_$J_","
"RTN","KMPDTU01",127,0)
 S XMSUB=$S(KMPDTWD=1:"CM TIMING DATA~",1:"CM TIMING DATA-DAILY~")_$P(TL,U,2)_$P(SITE,U,2)_" ("_$P(SITE,U,3)_")~"_$$FMTE^XLFDT(DATE)
"RTN","KMPDTU01",128,0)
 D TRANSTO^KMPDUTL7(1,4,.TRANSTO) Q:'$D(TRANSTO)
"RTN","KMPDTU01",129,0)
 S I=""
"RTN","KMPDTU01",130,0)
 F  S I=$O(TRANSTO(I)) Q:I=""  S XMY(I)=""
"RTN","KMPDTU01",131,0)
 D ^XMD
"RTN","KMPDTU01",132,0)
 W:'$D(ZTQUEUED) !,"Message #",$G(XMZ)," sent..."
"RTN","KMPDTU01",133,0)
 K ^TMP("KMPDTU01-2",$J)
"RTN","KMPDTU01",134,0)
 ;
"RTN","KMPDTU01",135,0)
 Q
"RTN","KMPDTU10")
0^13^B33222642
"RTN","KMPDTU10",1,0)
KMPDTU10 ;OAK/RAK - CP Tools Timing Utility ;6/21/05  10:17
"RTN","KMPDTU10",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**4**;Mar 22, 2002
"RTN","KMPDTU10",3,0)
 ;
"RTN","KMPDTU10",4,0)
DATERNG(KMPDSS,KMPDEF,KMPDRES,KMPDDT) ; timing date range for a subscript
"RTN","KMPDTU10",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",6,0)
 ; KMPDSS.... KMPTMP SUBSCRIPT
"RTN","KMPDTU10",7,0)
 ; KMPDEF.... (optional) default number of days to track - if not defined
"RTN","KMPDTU10",8,0)
 ;            will default to seven (7)
"RTN","KMPDTU10",9,0)
 ; KMPDRES(). Results of api in format:
"RTN","KMPDTU10",10,0)
 ;             KMPDRES(0)=piece 1 - Start Date Internal
"RTN","KMPDTU10",11,0)
 ;                        piece 2 - End Date Internal
"RTN","KMPDTU10",12,0)
 ;                        piece 3 - Start Date External
"RTN","KMPDTU10",13,0)
 ;                        piece 4 - End Date External
"RTN","KMPDTU10",14,0)
 ;                 Null ("") is returned if no results are found
"RTN","KMPDTU10",15,0)
 ;             KMPDRES(1)=NumberOfDays
"RTN","KMPDTU10",16,0)
 ; KMPDDT.... Date only (do not ask for days)
"RTN","KMPDTU10",17,0)
 ;             0 - both date & days
"RTN","KMPDTU10",18,0)
 ;             1 - date only - do not ask for days
"RTN","KMPDTU10",19,0)
 ;
"RTN","KMPDTU10",20,0)
 ; This api determines the date range for KMPDSS (ex: ORWCV for CPRS 
"RTN","KMPDTU10",21,0)
 ; cover sheets).  It asks the user the ending date.  After the ending
"RTN","KMPDTU10",22,0)
 ; date is entered, the user is prompted for the number of days to track.
"RTN","KMPDTU10",23,0)
 ; Results are returned in the KMPDRES() array as described above.
"RTN","KMPDTU10",24,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",25,0)
 K KMPDRES S KMPDRES(0)="",KMPDRES(1)=""
"RTN","KMPDTU10",26,0)
 Q:$G(KMPDSS)=""
"RTN","KMPDTU10",27,0)
 S:'$G(KMPDEF) KMPDEF=7
"RTN","KMPDTU10",28,0)
 S KMPDDT=+$G(KMPDDT)
"RTN","KMPDTU10",29,0)
 N COUNT,DATE,DAYS,END,SESS,START
"RTN","KMPDTU10",30,0)
 ; start & end dates
"RTN","KMPDTU10",31,0)
 S DATE=$$DATERNG1(KMPDSS,.SESS)
"RTN","KMPDTU10",32,0)
 Q:'$D(SESS)
"RTN","KMPDTU10",33,0)
 S START=$P(DATE,U),END=$P(DATE,U,2)
"RTN","KMPDTU10",34,0)
 Q:'START!('END)
"RTN","KMPDTU10",35,0)
 ; get end date
"RTN","KMPDTU10",36,0)
 K DIR S DIR(0)="DO^"_START_":"_END_":E"
"RTN","KMPDTU10",37,0)
 S DIR("A")="Select End Date",DIR("B")=$$FMTE^XLFDT(END)
"RTN","KMPDTU10",38,0)
 W ! D ^DIR Q:'Y  S END=Y
"RTN","KMPDTU10",39,0)
 ; if date only
"RTN","KMPDTU10",40,0)
 I KMPDDT D  Q
"RTN","KMPDTU10",41,0)
 .S KMPDRES(0)=END_U_END_U_$$FMTE^XLFDT(END)_U_$$FMTE^XLFDT(END)
"RTN","KMPDTU10",42,0)
 ; determine number of days
"RTN","KMPDTU10",43,0)
 S DATE=END+.1,START=END,DAYS=0
"RTN","KMPDTU10",44,0)
 F  S DATE=$O(SESS(DATE),-1) Q:'DATE   S START=DATE,DAYS=DAYS+1
"RTN","KMPDTU10",45,0)
 Q:'DAYS
"RTN","KMPDTU10",46,0)
 ; days to go back
"RTN","KMPDTU10",47,0)
 K DIR S DIR(0)="NO^1:"_DAYS_":O"
"RTN","KMPDTU10",48,0)
 S DIR("A")="Select # of Days Review"
"RTN","KMPDTU10",49,0)
 S DIR("B")=$S(DAYS'<KMPDEF:KMPDEF,1:DAYS)
"RTN","KMPDTU10",50,0)
 D ^DIR Q:Y=""!(Y="^")
"RTN","KMPDTU10",51,0)
 ; determine start date
"RTN","KMPDTU10",52,0)
 S START=END
"RTN","KMPDTU10",53,0)
 I Y'=1 S COUNT=1 D 
"RTN","KMPDTU10",54,0)
 .F  S START=$O(SESS(START),-1) Q:'START  S COUNT=COUNT+1 Q:COUNT'<Y
"RTN","KMPDTU10",55,0)
 S KMPDRES(0)=START_U_END_U_$$FMTE^XLFDT(START)_U_$$FMTE^XLFDT(END)
"RTN","KMPDTU10",56,0)
 S KMPDRES(1)=Y
"RTN","KMPDTU10",57,0)
 ;
"RTN","KMPDTU10",58,0)
 Q
"RTN","KMPDTU10",59,0)
 ;
"RTN","KMPDTU10",60,0)
DATERNG1(KMPDSS,KMPDSESS) ;-- extrinsic function
"RTN","KMPDTU10",61,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",62,0)
 ; KMPDSS.... KMPTMP SUBSCRIPT
"RTN","KMPDTU10",63,0)
 ; KMPDSESS() Array of dates: 
"RTN","KMPDTU10",64,0)
 ;             KMPDSESS(3030801)=""
"RTN","KMPDTU10",65,0)
 ;             KMPDSESS(3030802)=""
"RTN","KMPDTU10",66,0)
 ;             ...
"RTN","KMPDTU10",67,0)
 ;
"RTN","KMPDTU10",68,0)
 ; Return: StartDate^EndDate - in internal fileman format
"RTN","KMPDTU10",69,0)
 ;         "" - no results
"RTN","KMPDTU10",70,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",71,0)
 Q:$G(KMPDSS)="" ""
"RTN","KMPDTU10",72,0)
 N DATE,END,START
"RTN","KMPDTU10",73,0)
 ; determine most recent date
"RTN","KMPDTU10",74,0)
 F DATE=0:0 S DATE=$O(^KMPD(8973.2,"ASVDTSS",KMPDSS,DATE)) Q:'DATE  D 
"RTN","KMPDTU10",75,0)
 .; set array of session dates
"RTN","KMPDTU10",76,0)
 .S KMPDSESS(DATE)=""
"RTN","KMPDTU10",77,0)
 Q:'$D(KMPDSESS) ""
"RTN","KMPDTU10",78,0)
 ; set start and end dates according to SESS() array
"RTN","KMPDTU10",79,0)
 S END=$O(KMPDSESS("A"),-1),START=$O(KMPDSESS(""))
"RTN","KMPDTU10",80,0)
 Q START_"^"_END
"RTN","KMPDTU10",81,0)
 ;
"RTN","KMPDTU10",82,0)
DTTMRNG(KMPDSS,KMPDEF,KMPDRES,KMPDEFH) ; timing date/time range for a subscript
"RTN","KMPDTU10",83,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",84,0)
 ; KMPDSS.... KMPTMP SUBSCRIPT
"RTN","KMPDTU10",85,0)
 ; KMPDEF.... (optional) default number of days to track - if not defined
"RTN","KMPDTU10",86,0)
 ;            will default to seven (7)
"RTN","KMPDTU10",87,0)
 ; KMPDRES(). Results of api in format:
"RTN","KMPDTU10",88,0)
 ;             KMPDRES(0)=piece 1 - Start Date Internal
"RTN","KMPDTU10",89,0)
 ;                        piece 2 - End Date Internal
"RTN","KMPDTU10",90,0)
 ;                        piece 3 - Start Date External
"RTN","KMPDTU10",91,0)
 ;                        piece 4 - End Date External
"RTN","KMPDTU10",92,0)
 ;                 Null ("") is returned if no results are found
"RTN","KMPDTU10",93,0)
 ;             KMPDRES(1)=NumberOfDays
"RTN","KMPDTU10",94,0)
 ; KMPDEFH.. (optional) Default hour.
"RTN","KMPDTU10",95,0)
 ;
"RTN","KMPDTU10",96,0)
 ; This api determines the date range for KMPDSS (ex: ORWCV for CPRS 
"RTN","KMPDTU10",97,0)
 ; cover sheets).  It asks the user the ending date.  After the ending
"RTN","KMPDTU10",98,0)
 ; date is entered, the user is prompted for the number of hours to
"RTN","KMPDTU10",99,0)
 ; review. Results are returned in the KMPDRES() array as described 
"RTN","KMPDTU10",100,0)
 ; above.
"RTN","KMPDTU10",101,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",102,0)
 K KMPDRES S KMPDRES(0)="",KMPDRES(1)=""
"RTN","KMPDTU10",103,0)
 Q:$G(KMPDSS)=""
"RTN","KMPDTU10",104,0)
 S:'$G(KMPDEF) KMPDEF=7
"RTN","KMPDTU10",105,0)
 S KMPDEFH=$G(KMPDEFH)
"RTN","KMPDTU10",106,0)
 N COUNT,DATE,DAYS,END,SESS,START
"RTN","KMPDTU10",107,0)
 ; get date
"RTN","KMPDTU10",108,0)
 D DATERNG(KMPDSS,1,.KMPDRES,1)
"RTN","KMPDTU10",109,0)
 Q:'$D(KMPDRES)
"RTN","KMPDTU10",110,0)
 Q:$G(KMPDRES(0))=""
"RTN","KMPDTU10",111,0)
 S KMPDRES(1)=""
"RTN","KMPDTU10",112,0)
 ; determine number of hours
"RTN","KMPDTU10",113,0)
 K DIR S DIR(0)="LO^0:23:O"
"RTN","KMPDTU10",114,0)
 S DIR("A")="Select Hour(s) to Review"
"RTN","KMPDTU10",115,0)
 S:KMPDEFH'="" DIR("B")=KMPDEFH
"RTN","KMPDTU10",116,0)
 D ^DIR Q:Y=""!(Y="^")
"RTN","KMPDTU10",117,0)
 S KMPDRES(1)=Y
"RTN","KMPDTU10",118,0)
 Q
"RTN","KMPDTU10",119,0)
 ;
"RTN","KMPDTU10",120,0)
LISTSEL(KMPDLIST,KMPDSS,KMPDRLTM) ;-- extrinsic function - build list and select entry
"RTN","KMPDTU10",121,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",122,0)
 ; KMPDLIST... 2 - Client Name
"RTN","KMPDTU10",123,0)
 ;             3 - IP Address
"RTN","KMPDTU10",124,0)
 ; KMPDSS..... Field #.07 (KMPTMP SUBSCRIPT)
"RTN","KMPDTU10",125,0)
 ; KMPDRLTM... Real-Time data
"RTN","KMPDTU10",126,0)
 ;              0 - not real-time
"RTN","KMPDTU10",127,0)
 ;              1 - real-time
"RTN","KMPDTU10",128,0)
 ;
"RTN","KMPDTU10",129,0)
 ; Return: "" - no selection 
"RTN","KMPDTU10",130,0)
 ;         Name - free text
"RTN","KMPDTU10",131,0)
 ;
"RTN","KMPDTU10",132,0)
 ; This function will build a list of entries from file #8973.2 
"RTN","KMPDTU10",133,0)
 ;(CP TIMING) and ask the user to select an entry.
"RTN","KMPDTU10",134,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",135,0)
 S KMPDLIST=+$G(KMPDLIST)
"RTN","KMPDTU10",136,0)
 Q:KMPDLIST<2!(KMPDLIST>3) ""
"RTN","KMPDTU10",137,0)
 Q:$G(KMPDSS)="" ""
"RTN","KMPDTU10",138,0)
 S KMPDRLTM=+$G(KMPDRLTM)
"RTN","KMPDTU10",139,0)
 ;
"RTN","KMPDTU10",140,0)
 N DIC,I,X,XREF,Y
"RTN","KMPDTU10",141,0)
 ;
"RTN","KMPDTU10",142,0)
 W " ==> building list..."
"RTN","KMPDTU10",143,0)
 K ^TMP("KMPDTU10-LIST",$J)
"RTN","KMPDTU10",144,0)
 D @$S('KMPDRLTM:"LISTSELH",1:"LISTSELR")
"RTN","KMPDTU10",145,0)
 ; quit if no data
"RTN","KMPDTU10",146,0)
 Q:'$D(^TMP("KMPDTU10-LIST",$J))
"RTN","KMPDTU10",147,0)
 S DIC="^TMP(""KMPDTU10-LIST"",$J,"
"RTN","KMPDTU10",148,0)
 S DIC(0)="AEQZ"
"RTN","KMPDTU10",149,0)
 S DIC("A")=$S(KMPDLIST=2:"Select Client",1:"IP Address")_": "
"RTN","KMPDTU10",150,0)
 D ^DIC
"RTN","KMPDTU10",151,0)
 K ^TMP("KMPDTU10-LIST",$J)
"RTN","KMPDTU10",152,0)
 Q $S(Y<1:"",1:$P(Y,"^",2))
"RTN","KMPDTU10",153,0)
 ;
"RTN","KMPDTU10",154,0)
LISTSELH ;-- historical data list
"RTN","KMPDTU10",155,0)
 N I,CNT,DOT,XREF
"RTN","KMPDTU10",156,0)
 ; determine xref to build list
"RTN","KMPDTU10",157,0)
 S XREF=$S(KMPDLIST=2:"ASSCLDTTM",KMPDLIST=3:"ASSIPDTTM",1:"")
"RTN","KMPDTU10",158,0)
 S I="",(CNT,DOT)=0
"RTN","KMPDTU10",159,0)
 F  S I=$O(^KMPD(8973.2,XREF,KMPDSS,I)) Q:I=""  D 
"RTN","KMPDTU10",160,0)
 .S CNT=CNT+1,DOT=DOT+1 W:'(DOT#100) "."
"RTN","KMPDTU10",161,0)
 .S ^TMP("KMPDTU10-LIST",$J,CNT,0)=I
"RTN","KMPDTU10",162,0)
 .S ^TMP("KMPDTU10-LIST",$J,"B",I,CNT)=""
"RTN","KMPDTU10",163,0)
 S ^TMP("KMPDTU10-LIST",$J,0)=$S(KMPDLIST=2:"Client Name",1:"IP Address")_"^1.01^"_CNT_"^"_CNT
"RTN","KMPDTU10",164,0)
 Q
"RTN","KMPDTU10",165,0)
 ;
"RTN","KMPDTU10",166,0)
LISTSELR ;-- real-time data list
"RTN","KMPDTU10",167,0)
 N I,CNT,DATA,DOT,X
"RTN","KMPDTU10",168,0)
 S I="",(CNT,DOT)=0
"RTN","KMPDTU10",169,0)
 F  S I=$O(^KMPTMP("KMPDT",KMPDSS,I)) Q:I=""  S DATA=^(I) I DATA]"" D 
"RTN","KMPDTU10",170,0)
 .S X=$S(KMPDLIST=2:$P(DATA,U,4),1:$P($P(I," ",2),"-"))
"RTN","KMPDTU10",171,0)
 .Q:$O(^TMP("KMPDTU10-LIST",$J,"B",X,0))
"RTN","KMPDTU10",172,0)
 .S CNT=CNT+1,DOT=DOT+1 W:'(DOT#100) "."
"RTN","KMPDTU10",173,0)
 .S ^TMP("KMPDTU10-LIST",$J,CNT,0)=X
"RTN","KMPDTU10",174,0)
 .S ^TMP("KMPDTU10-LIST",$J,"B",X,CNT)=""
"RTN","KMPDTU10",175,0)
 S ^TMP("KMPDTU10-LIST",$J,0)=$S(KMPDLIST=2:"Client Name",1:"IP Address")_"^1.01^"_CNT_"^"_CNT
"RTN","KMPDTU10",176,0)
 Q
"RTN","KMPDTU10",177,0)
 ;
"RTN","KMPDTU10",178,0)
SRCHBY(KMPDRES,KMPDSS,KMPDRLTM) ;-- api - search by criteria
"RTN","KMPDTU10",179,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",180,0)
 ; KMPDRES().. Array (passed by reference) containing results in format:
"RTN","KMPDTU10",181,0)
 ;             KMPDRES    = "" - no valid selection
"RTN","KMPDTU10",182,0)
 ;             KMPDRES    = 1^User Name
"RTN","KMPDTU10",183,0)
 ;             KMPDRES(1) = DUZ^NewPersonName
"RTN","KMPDTU10",184,0)
 ;             KMPDRES    = 2^Client Name
"RTN","KMPDTU10",185,0)
 ;             KMPDRES(1) = ClientName (free text)
"RTN","KMPDTU10",186,0)
 ;             KMPDRES    = 3^IP Address
"RTN","KMPDTU10",187,0)
 ;             KMPDRES(1) = IPAddress
"RTN","KMPDTU10",188,0)
 ;             KMPDRES    = 4^Any Occurrence
"RTN","KMPDTU10",189,0)
 ; KMPDSS..... KMPTMP SUBSCIPT - field #.07 from file #8973.2 (CP TIMING)
"RTN","KMPDTU10",190,0)
 ; KMPDRLTM... Real-Time data
"RTN","KMPDTU10",191,0)
 ;              0 - not real-time
"RTN","KMPDTU10",192,0)
 ;              1 - real-time
"RTN","KMPDTU10",193,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",194,0)
 K KMPDRES S KMPDRES=""
"RTN","KMPDTU10",195,0)
 Q:$G(KMPDSS)=""
"RTN","KMPDTU10",196,0)
 S KMPDRLTM=+$G(KMPDRLTM)
"RTN","KMPDTU10",197,0)
 N DIC,DIR,X,Y
"RTN","KMPDTU10",198,0)
 S DIR(0)="SO^1:User Name;2:Client Name;3:IP Address;4:All of the Above"
"RTN","KMPDTU10",199,0)
 S DIR("A")="Search By"
"RTN","KMPDTU10",200,0)
 S DIR("B")=4
"RTN","KMPDTU10",201,0)
 D ^DIR
"RTN","KMPDTU10",202,0)
 Q:'Y
"RTN","KMPDTU10",203,0)
 S KMPDRES=Y_"^"_Y(0)
"RTN","KMPDTU10",204,0)
 ; quit if 'all of the above'
"RTN","KMPDTU10",205,0)
 Q:(+KMPDRES)=4
"RTN","KMPDTU10",206,0)
 ;
"RTN","KMPDTU10",207,0)
 ; user name
"RTN","KMPDTU10",208,0)
 I (+KMPDRES)=1 D  Q
"RTN","KMPDTU10",209,0)
 .S DIC=200,DIC(0)="AEMQZ",DIC("A")="Select User: "
"RTN","KMPDTU10",210,0)
 .D ^DIC
"RTN","KMPDTU10",211,0)
 .I Y<1 S KMPDRES="" Q
"RTN","KMPDTU10",212,0)
 .S KMPDRES(1)=Y
"RTN","KMPDTU10",213,0)
 ;
"RTN","KMPDTU10",214,0)
 ; client name
"RTN","KMPDTU10",215,0)
 I (+KMPDRES)=2 D  Q
"RTN","KMPDTU10",216,0)
 .S KMPDRES(1)=$$LISTSEL(+KMPDRES,KMPDSS,KMPDRLTM)
"RTN","KMPDTU10",217,0)
 .S:KMPDRES(1)="" KMPDRES=""
"RTN","KMPDTU10",218,0)
 ;
"RTN","KMPDTU10",219,0)
 ; ip address
"RTN","KMPDTU10",220,0)
 I (+KMPDRES)=3 D  Q
"RTN","KMPDTU10",221,0)
 .S KMPDRES(1)=$$LISTSEL(+KMPDRES,KMPDSS,KMPDRLTM)
"RTN","KMPDTU10",222,0)
 .S:KMPDRES(1)="" KMPDRES=""
"RTN","KMPDTU10",223,0)
 ;
"RTN","KMPDTU10",224,0)
 Q
"RTN","KMPDTU10",225,0)
 ;
"RTN","KMPDTU10",226,0)
TTLSEC() ;-- extrinsic function - time-to-load threshold seconds
"RTN","KMPDTU10",227,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",228,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",229,0)
 N DIR,X,Y
"RTN","KMPDTU10",230,0)
 S DIR(0)="NAO^1"
"RTN","KMPDTU10",231,0)
 S DIR("A")="Select Time-To-Load Threshold (Seconds): "
"RTN","KMPDTU10",232,0)
 S DIR("B")=60
"RTN","KMPDTU10",233,0)
 D ^DIR
"RTN","KMPDTU10",234,0)
 Q $S(Y:Y,1:"")
"RTN","KMPDUT1")
0^7^B4718329
"RTN","KMPDUT1",1,0)
KMPDUT1 ;OAK/RAK - Test Lab Utility ;6/21/05  10:17
"RTN","KMPDUT1",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**4**;Mar 22, 2002
"RTN","KMPDUT1",3,0)
 ;
"RTN","KMPDUT1",4,0)
TL ;-entry point for setting up database as a test lab
"RTN","KMPDUT1",5,0)
 ;
"RTN","KMPDUT1",6,0)
 ; patch "KMPR*2.0*2" must be installed
"RTN","KMPDUT1",7,0)
 I '$$PATCH^XPDUTL("KMPR*2.0*2") D  Q
"RTN","KMPDUT1",8,0)
 .W !?3,"Patch 'KMPR*2.0*2' must be installed to run this routine!",!!
"RTN","KMPDUT1",9,0)
 ;
"RTN","KMPDUT1",10,0)
 N DIR,ERROR,IEN,FDA,ROUTINE,X,Y,Z
"RTN","KMPDUT1",11,0)
 S DIR(0)="YO",DIR("B")="N"
"RTN","KMPDUT1",12,0)
 S DIR("A")="Do you want to set this up as a Test Lab database for Capacity Planning"
"RTN","KMPDUT1",13,0)
 W ! D ^DIR
"RTN","KMPDUT1",14,0)
 I 'Y W !!?3,$C(7),"No action taken!" Q
"RTN","KMPDUT1",15,0)
 ;
"RTN","KMPDUT1",16,0)
 W !!?3,"Setting up database..."
"RTN","KMPDUT1",17,0)
 S ^KMPD(8973,"TEST LAB")=1
"RTN","KMPDUT1",18,0)
 W "done"
"RTN","KMPDUT1",19,0)
 S IEN=$O(^KMPD(8973,0)) Q:'IEN
"RTN","KMPDUT1",20,0)
 W !
"RTN","KMPDUT1",21,0)
 W !?3,"Updating RUM Weeks to Keep Data = 99 ..."
"RTN","KMPDUT1",22,0)
 W !?3,"         HL7 Weeks to Keep Data = 99 ..."
"RTN","KMPDUT1",23,0)
 W !?3,"         Timing Weeks to Keep Data = 99 ..."
"RTN","KMPDUT1",24,0)
 S FDA($J,8973,IEN_",",2.11)=99
"RTN","KMPDUT1",25,0)
 S FDA($J,8973,IEN_",",3.11)=99
"RTN","KMPDUT1",26,0)
 S FDA($J,8973,IEN_",",4.11)=99
"RTN","KMPDUT1",27,0)
 D FILE^DIE("","FDA($J)","ERROR")
"RTN","KMPDUT1",28,0)
 I $D(ERROR) D MSG^DIALOG("W","",60,10,"ERROR")
"RTN","KMPDUT1",29,0)
 W "done"
"RTN","KMPDUT1",30,0)
 W !
"RTN","KMPDUT1",31,0)
 W !?3,"Saving ZOSVKRT as %ZOSVKR ..."
"RTN","KMPDUT1",32,0)
 D ROUINQ^KMPDU2(.ROUTINE,"ZOSVKRT")
"RTN","KMPDUT1",33,0)
 D:$D(ROUTINE) ROUSAVE^KMPDU3(.Z,"%ZOSVKR",.ROUTINE)
"RTN","KMPDUT1",34,0)
 W "done"
"RTN","KMPDUT1",35,0)
 W !
"RTN","KMPDUT1",36,0)
 W !?3,"Deleting old ^KMPTMP(""KMPR"" data..."
"RTN","KMPDUT1",37,0)
 K ^KMPTMP("KMPR")
"RTN","KMPDUT1",38,0)
 W "done"
"RTN","KMPDUT1",39,0)
 S IEN=$O(^DIC(4.2,"B","FO-ALBANY.MED.VA.GOV",0))
"RTN","KMPDUT1",40,0)
 I IEN D 
"RTN","KMPDUT1",41,0)
 .K FDA,ERROR
"RTN","KMPDUT1",42,0)
 .W !!?3,"Setting FLAGS to SEND for domain FO-ALBANY.MED.VA.GOV..."
"RTN","KMPDUT1",43,0)
 .S FDA($J,4.2,IEN_",",1)="S"
"RTN","KMPDUT1",44,0)
 .D FILE^DIE("","FDA($J)","ERROR")
"RTN","KMPDUT1",45,0)
 .D:$D(ROUTINE) ROUSAVE^KMPDU3(.Z,"%ZOSVKR",.ROUTINE)
"RTN","KMPDUT1",46,0)
 .W "done"
"RTN","KMPDUT1",47,0)
 ;
"RTN","KMPDUT1",48,0)
 W !!?3,"*** This is now a Capacity Planning Test Lab database ***"
"RTN","KMPDUT1",49,0)
 ;
"RTN","KMPDUT1",50,0)
 Q
"RTN","KMPDUT1",51,0)
 ;
"RTN","KMPDUT1",52,0)
TESTLAB() ;-extrinsic - test for test lab database
"RTN","KMPDUT1",53,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDUT1",54,0)
 ; return: "0" - not a test lab database
"RTN","KMPDUT1",55,0)
 ;         "1^TESTLAB-" - it is a test lab database 
"RTN","KMPDUT1",56,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDUT1",57,0)
 N TL
"RTN","KMPDUT1",58,0)
 S TL=+$G(^KMPD(8973,"TEST LAB"))
"RTN","KMPDUT1",59,0)
 Q $S('TL:0,1:"1^TESTLAB-")
"RTN","KMPDUTL")
0^1^B11698586
"RTN","KMPDUTL",1,0)
KMPDUTL ;OAK/RAK - CM Tools Utility ;6/21/05  10:17
"RTN","KMPDUTL",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**1,2,3,4**;Mar 22, 2002
"RTN","KMPDUTL",3,0)
 ;
"RTN","KMPDUTL",4,0)
QUEBKG(KMPDOPT,KMPDTIME,KMPDFREQ,KMPDDEL) ;-- queue background job
"RTN","KMPDUTL",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",6,0)
 ; KMPDOPT.... Option name to queue (free text name in .01 field of 
"RTN","KMPDUTL",7,0)
 ;                                   OPTION file)
"RTN","KMPDUTL",8,0)
 ; KMPDTIME... Date/time to queue option (T@1400, etc)
"RTN","KMPDUTL",9,0)
 ; KMPDFREQ... Scheduling frequency (1D, etc)
"RTN","KMPDUTL",10,0)
 ; KMPDDEL.... Delete option if it already exists in file 19.2
"RTN","KMPDUTL",11,0)
 ;              0 - do not delete (quit if already scheduled)
"RTN","KMPDUTL",12,0)
 ;              1 - delete if already in file 19.2
"RTN","KMPDUTL",13,0)
 ;
"RTN","KMPDUTL",14,0)
 ; This API will queue an option from file #19 (OPTION) to run in file
"RTN","KMPDUTL",15,0)
 ; 19.2 (OPTION SCHEDULE).
"RTN","KMPDUTL",16,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",17,0)
 Q:$G(KMPDOPT)=""
"RTN","KMPDUTL",18,0)
 Q:$G(KMPDTIME)=""
"RTN","KMPDUTL",19,0)
 Q:$G(KMPDFREQ)=""
"RTN","KMPDUTL",20,0)
 S KMPDDEL=+$G(KMPDDEL)
"RTN","KMPDUTL",21,0)
 N DA,DIFROM,DIK,FDA,ERROR,IEN,IEN1,IENZ,TEXT,X,Y,Z
"RTN","KMPDUTL",22,0)
 ; Newing DIFROM will force reschedule when installing from KIDS
"RTN","KMPDUTL",23,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPDUTL",24,0)
 ; change to internal format
"RTN","KMPDUTL",25,0)
 D FMDTI^KMPDU(.Z,KMPDTIME)
"RTN","KMPDUTL",26,0)
 Q:Z(0)="^"!(Z(0)="")
"RTN","KMPDUTL",27,0)
 S KMPDTIME=Z(0) K Z
"RTN","KMPDUTL",28,0)
 S TEXT=KMPDOPT
"RTN","KMPDUTL",29,0)
 ; quit if not in file 19
"RTN","KMPDUTL",30,0)
 S IEN=$O(^DIC(19,"B",TEXT,0)) Q:'IEN
"RTN","KMPDUTL",31,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPDUTL",32,0)
 ; quit if already in file 19.2 and not KMPDDEL
"RTN","KMPDUTL",33,0)
 Q:IEN1&('KMPDDEL)
"RTN","KMPDUTL",34,0)
 ; delete if in file 19.2
"RTN","KMPDUTL",35,0)
 I IEN1 S DIK="^DIC(19.2,",DA=IEN1 D ^DIK
"RTN","KMPDUTL",36,0)
 ; add entry
"RTN","KMPDUTL",37,0)
 S FDA($J,19.2,"+1,",.01)=IEN
"RTN","KMPDUTL",38,0)
 ; queued to run at what time
"RTN","KMPDUTL",39,0)
 S FDA($J,19.2,"+1,",2)=KMPDTIME
"RTN","KMPDUTL",40,0)
 ; rescheduling frequency.
"RTN","KMPDUTL",41,0)
 S FDA($J,19.2,"+1,",6)=KMPDFREQ
"RTN","KMPDUTL",42,0)
 D UPDATE^DIE("","FDA($J)",.IENZ,"ERROR")
"RTN","KMPDUTL",43,0)
 I $D(ERROR) D MSG^DIALOG("W","",60,10,"ERROR")
"RTN","KMPDUTL",44,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPDUTL",45,0)
 I '$G(^DIC(19.2,+IEN1,1)) D 
"RTN","KMPDUTL",46,0)
 .D MES^XPDUTL("     ERROR - Not able to reschedule "_KMPDOPT)
"RTN","KMPDUTL",47,0)
 .D MES^XPDUTL("     Use 'Schedule/Unschedule Options' [XUTM SCHEDULE] to reschedule.")
"RTN","KMPDUTL",48,0)
 ;
"RTN","KMPDUTL",49,0)
 Q
"RTN","KMPDUTL",50,0)
 ;
"RTN","KMPDUTL",51,0)
VERSION() ;-- extrinsic - return current version.
"RTN","KMPDUTL",52,0)
 Q $P($T(+2^KMPDUTL),";",3)_"^"_$P($T(+2^KMPDUTL),";",5)
"RTN","KMPDUTL",53,0)
 ;
"RTN","KMPDUTL",54,0)
VRSNGET(KMPDAPPL) ;-- extrinsic function - get version^patches
"RTN","KMPDUTL",55,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",56,0)
 ; KMPDAPPL... application:
"RTN","KMPDUTL",57,0)
 ;              0 - CM Tools
"RTN","KMPDUTL",58,0)
 ;              1 - SAGG
"RTN","KMPDUTL",59,0)
 ;              2 - RUM
"RTN","KMPDUTL",60,0)
 ;
"RTN","KMPDUTL",61,0)
 ; Return: Version^Patch^VersionInstallDate^PatchInstallDate
"RTN","KMPDUTL",62,0)
 ;         null = no application
"RTN","KMPDUTL",63,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",64,0)
 ;
"RTN","KMPDUTL",65,0)
 Q:$G(KMPDAPPL)="" ""
"RTN","KMPDUTL",66,0)
 Q:KMPDAPPL<0!(KMPDAPPL>2) ""
"RTN","KMPDUTL",67,0)
 ;
"RTN","KMPDUTL",68,0)
 N DATA,VERSION S VERSION=""
"RTN","KMPDUTL",69,0)
 ;
"RTN","KMPDUTL",70,0)
 ; cm tools
"RTN","KMPDUTL",71,0)
 I KMPDAPPL=0 D 
"RTN","KMPDUTL",72,0)
 .S DATA=$G(^KMPD(8973,1,KMPDAPPL))
"RTN","KMPDUTL",73,0)
 .S VERSION=$P(DATA,U,2)_U_$P(DATA,U,4)_U_$P(DATA,U,3)_U_$P(DATA,U,5)
"RTN","KMPDUTL",74,0)
 ;
"RTN","KMPDUTL",75,0)
 ; all other applications
"RTN","KMPDUTL",76,0)
 E  D 
"RTN","KMPDUTL",77,0)
 .S DATA=$G(^KMPD(8973,1,KMPDAPPL))
"RTN","KMPDUTL",78,0)
 .S VERSION=$P(DATA,U)_U_$P(DATA,U,3)_U_$P(DATA,U,2)_U_$P(DATA,U,4)
"RTN","KMPDUTL",79,0)
 ;
"RTN","KMPDUTL",80,0)
 Q VERSION
"RTN","KMPDUTL",81,0)
 ;
"RTN","KMPDUTL",82,0)
PTCHINFO ; -- patch information: routine name ^ current version ^ current patch(es)
"RTN","KMPDUTL",83,0)
 ;;KMPDBD01^2.0^**2**
"RTN","KMPDUTL",84,0)
 ;;KMPDHU01^2.0^**4**
"RTN","KMPDUTL",85,0)
 ;;KMPDHU02^2.0
"RTN","KMPDUTL",86,0)
 ;;KMPDHU03^2.0
"RTN","KMPDUTL",87,0)
 ;;KMPDHUA^2.0
"RTN","KMPDUTL",88,0)
 ;;KMPDSS^2.0^**3**
"RTN","KMPDUTL",89,0)
 ;;KMPDSS1^2.0^**3**
"RTN","KMPDUTL",90,0)
 ;;KMPDSSD^2.0^**3**
"RTN","KMPDUTL",91,0)
 ;;KMPDSSD1^2.0^**3**
"RTN","KMPDUTL",92,0)
 ;;KMPDSSR^2.0^**3**
"RTN","KMPDUTL",93,0)
 ;;KMPDSSS^2.0^**3**
"RTN","KMPDUTL",94,0)
 ;;KMPDTM^2.0^**1,4**
"RTN","KMPDUTL",95,0)
 ;;KMPDTP1^2.0^**4**
"RTN","KMPDUTL",96,0)
 ;;KMPDTP2^2.0^**4**
"RTN","KMPDUTL",97,0)
 ;;KMPDTP3^2.0^**4**
"RTN","KMPDUTL",98,0)
 ;;KMPDTP4^2.0^**4**
"RTN","KMPDUTL",99,0)
 ;;KMPDTP5^2.0^**4**
"RTN","KMPDUTL",100,0)
 ;;KMPDTP6^2.0^**4**
"RTN","KMPDUTL",101,0)
 ;;KMPDTP7^2.0^**4**
"RTN","KMPDUTL",102,0)
 ;;KMPDTU01^2.0^**4**
"RTN","KMPDUTL",103,0)
 ;;KMPDTU02^2.0
"RTN","KMPDUTL",104,0)
 ;;KMPDTU10^2.0^**4**
"RTN","KMPDUTL",105,0)
 ;;KMPDTU11^2.0
"RTN","KMPDUTL",106,0)
 ;;KMPDU^2.0^**2**
"RTN","KMPDUTL",107,0)
 ;;KMPDU1^2.0
"RTN","KMPDUTL",108,0)
 ;;KMPDU2^2.0^**2**
"RTN","KMPDUTL",109,0)
 ;;KMPDU3^2.0^**2**
"RTN","KMPDUTL",110,0)
 ;;KMPDU4^2.0
"RTN","KMPDUTL",111,0)
 ;;KMPDU5^2.0^**2**
"RTN","KMPDUTL",112,0)
 ;;KMPDU11^2.0
"RTN","KMPDUTL",113,0)
 ;;KMPDUG^2.0
"RTN","KMPDUTL",114,0)
 ;;KMPDUG1^2.0
"RTN","KMPDUTL",115,0)
 ;;KMPDUG2^2.0
"RTN","KMPDUTL",116,0)
 ;;KMPDUGV^2.0
"RTN","KMPDUTL",117,0)
 ;;KMPDUT^2.0
"RTN","KMPDUTL",118,0)
 ;;KMPDUT1^2.0^**4**
"RTN","KMPDUTL",119,0)
 ;;KMPDUT2^2.0
"RTN","KMPDUTL",120,0)
 ;;KMPDUT4^2.0
"RTN","KMPDUTL",121,0)
 ;;KMPDUT4A^2.0
"RTN","KMPDUTL",122,0)
 ;;KMPDUT4B^2.0
"RTN","KMPDUTL",123,0)
 ;;KMPDUT4C^2.0
"RTN","KMPDUTL",124,0)
 ;;KMPDUT5^2.0
"RTN","KMPDUTL",125,0)
 ;;KMPDUTL^2.0^**1,2,3,4**
"RTN","KMPDUTL",126,0)
 ;;KMPDUTL1^2.0^**3**
"RTN","KMPDUTL",127,0)
 ;;KMPDUTL2^2.0^**4**
"RTN","KMPDUTL",128,0)
 ;;KMPDUTL3^2.0
"RTN","KMPDUTL",129,0)
 ;;KMPDUTL4^2.0
"RTN","KMPDUTL",130,0)
 ;;KMPDUTL5^2.0
"RTN","KMPDUTL",131,0)
 ;;KMPDUTL6^2.0
"RTN","KMPDUTL",132,0)
 ;;KMPDUTL7^2.0^**2**
"RTN","KMPDUTL",133,0)
 ;;KMPDUTL8^2.0^**2**
"RTN","KMPDUTL2")
0^11^B10409339
"RTN","KMPDUTL2",1,0)
KMPDUTL2 ;OAK/RAK - CM Tools Utility ;6/21/05  10:18
"RTN","KMPDUTL2",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**4**;Mar 22, 2002
"RTN","KMPDUTL2",3,0)
 ;
"RTN","KMPDUTL2",4,0)
DATERNG(KMPUY,KMPUSTR,KMPUEND) ;-- date range
"RTN","KMPDUTL2",5,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL2",6,0)
 ; KMPUY..... Value returned in four pieces:
"RTN","KMPDUTL2",7,0)
 ;            fmstartdate^fmenddate^ouputstartdate^outputenddate
"RTN","KMPDUTL2",8,0)
 ;
"RTN","KMPDUTL2",9,0)
 ;            Piece one and two are the date ranges in fileman format.
"RTN","KMPDUTL2",10,0)
 ;            Piece three and four are the same dates in output format:
"RTN","KMPDUTL2",11,0)
 ;                             dy-Mon-yr
"RTN","KMPDUTL2",12,0)
 ;
"RTN","KMPDUTL2",13,0)
 ;                               ********
"RTN","KMPDUTL2",14,0)
 ;                               * NOTE *
"RTN","KMPDUTL2",15,0)
 ;                               ********
"RTN","KMPDUTL2",16,0)
 ;          - The first piece will always be the earliest date entered.
"RTN","KMPDUTL2",17,0)
 ;
"RTN","KMPDUTL2",18,0)
 ;  Optional Parameters:
"RTN","KMPDUTL2",19,0)
 ;
"RTN","KMPDUTL2",20,0)
 ; KMPUSTR... If defined, the earliest date that may be selected.
"RTN","KMPDUTL2",21,0)
 ;            (must be in fileman format)
"RTN","KMPDUTL2",22,0)
 ;
"RTN","KMPDUTL2",23,0)
 ; KMPUEND... If defined, the latest date that may be selected.
"RTN","KMPDUTL2",24,0)
 ;            (must be in fileman format)
"RTN","KMPDUTL2",25,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL2",26,0)
 ;
"RTN","KMPDUTL2",27,0)
 N DATE1,DATE2,DIR,DIRUT,LINE,X,Y
"RTN","KMPDUTL2",28,0)
 ;
"RTN","KMPDUTL2",29,0)
 S KMPUY="",KMPUSTR=$G(KMPUSTR),KMPUEND=$G(KMPUEND)
"RTN","KMPDUTL2",30,0)
 ;
"RTN","KMPDUTL2",31,0)
RANGE ;-- Ask date ranges
"RTN","KMPDUTL2",32,0)
 S DIR(0)="DOA^"_$S(KMPUSTR:KMPUSTR,1:"")_":"_$S(KMPUEND:KMPUEND,1:"")_":ET)"
"RTN","KMPDUTL2",33,0)
 S DIR("A")="Start with Date: "
"RTN","KMPDUTL2",34,0)
 S:KMPUSTR DIR("B")=$$FMTE^XLFDT(KMPUSTR,2)
"RTN","KMPDUTL2",35,0)
 S DIR("?")=" "
"RTN","KMPDUTL2",36,0)
 S DIR("?",1)="Enter the starting date.",LINE=2
"RTN","KMPDUTL2",37,0)
 ; if starting date.
"RTN","KMPDUTL2",38,0)
 I KMPUSTR D 
"RTN","KMPDUTL2",39,0)
 .S DIR("?",LINE)="Date must not precede "_$$FMTE^XLFDT(KMPUSTR)
"RTN","KMPDUTL2",40,0)
 .S LINE=LINE+1
"RTN","KMPDUTL2",41,0)
 ; if ending date.
"RTN","KMPDUTL2",42,0)
 I KMPUEND S DIR("?",LINE)="Date must not follow "_$$FMTE^XLFDT(KMPUEND)
"RTN","KMPDUTL2",43,0)
 W ! D ^DIR I $D(DIRUT) S KMPUY="" Q
"RTN","KMPDUTL2",44,0)
 S DATE1=Y
"RTN","KMPDUTL2",45,0)
 S DIR("A")="  End with Date: "
"RTN","KMPDUTL2",46,0)
 S:KMPUEND DIR("B")=$$FMTE^XLFDT(KMPUEND,2)
"RTN","KMPDUTL2",47,0)
 S DIR("?",1)="Enter the ending date."
"RTN","KMPDUTL2",48,0)
 D ^DIR G:Y="" RANGE I Y="^" S KMPUY="" Q
"RTN","KMPDUTL2",49,0)
 S DATE2=Y
"RTN","KMPDUTL2",50,0)
 ; Set earliest date into first piece.
"RTN","KMPDUTL2",51,0)
 S KMPUY=$S(DATE2<DATE1:DATE2,1:DATE1)_U_$S(DATE2>DATE1:DATE2,1:DATE1)
"RTN","KMPDUTL2",52,0)
 S $P(KMPUY,U,3)=$$FMTE^XLFDT($P(KMPUY,U))
"RTN","KMPDUTL2",53,0)
 S $P(KMPUY,U,4)=$$FMTE^XLFDT($P(KMPUY,U,2))
"RTN","KMPDUTL2",54,0)
 Q
"RTN","KMPDUTL2",55,0)
 ;
"RTN","KMPDUTL2",56,0)
EMAIL(KMPDSUBJ,KMPDTEXT,KMPDTO) ; check and process errors.
"RTN","KMPDUTL2",57,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL2",58,0)
 ; KMPDSUBJ... Free text - to be included in subject
"RTN","KMPDUTL2",59,0)
 ; KMPDTEXT(). Array containing message text.  This must be in a format
"RTN","KMPDUTL2",60,0)
 ;             accepted by XMTEXT - TEXT(
"RTN","KMPDUTL2",61,0)
 ;                                  ^TMP($J,"TEXT",
"RTN","KMPDUTL2",62,0)
 ; KMPDTO..... Address for email recipient:
"RTN","KMPDUTL2",63,0)
 ;              G.KMP2-RUM@FO-ALBANY.MED.VA.GOV
"RTN","KMPDUTL2",64,0)
 ;              G.KMP4-CMTOOLS@FO-ALBANY.MED.VA.GOV
"RTN","KMPDUTL2",65,0)
 ;              G.CAPACITY,MANAGEMENT@FO-ALBANY.MED.GOV
"RTN","KMPDUTL2",66,0)
 ;             If no value is passed the default will be 
"RTN","KMPDUTL2",67,0)
 ;              G.KMP4-CMTOOLS@FO-ALBANY.MED.VA.GOV
"RTN","KMPDUTL2",68,0)
 ;              
"RTN","KMPDUTL2",69,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL2",70,0)
 ;
"RTN","KMPDUTL2",71,0)
 Q:$G(KMPDTEXT)=""
"RTN","KMPDUTL2",72,0)
 S KMPDSUBJ=$S($G(KMPDSUBJ)="":"CM Error",1:KMPDSUBJ)
"RTN","KMPDUTL2",73,0)
 S KMPDTO=$S($G(KMPDTO)="":"G.KMP4-CMTOOLS@FO-ALBANY.MED.VA.GOV",1:KMPDTO)
"RTN","KMPDUTL2",74,0)
 ;
"RTN","KMPDUTL2",75,0)
 N H,I,LN,N,O,SITE,TEXT,TL,XMSUB,X,XMTEXT,XMY,XMZ,Y,Z
"RTN","KMPDUTL2",76,0)
 ;
"RTN","KMPDUTL2",77,0)
 S TL=$$TESTLAB^KMPDUT1
"RTN","KMPDUTL2",78,0)
 S SITE=$$SITE^VASITE
"RTN","KMPDUTL2",79,0)
 S XMSUB=KMPDSUBJ_" at site "_$P(TL,U,2)_$P(SITE,U,3)_" on "_$$FMTE^XLFDT($$DT^XLFDT)
"RTN","KMPDUTL2",80,0)
 S XMTEXT=KMPDTEXT
"RTN","KMPDUTL2",81,0)
 S XMY(KMPDTO)=""
"RTN","KMPDUTL2",82,0)
 D ^XMD
"RTN","KMPDUTL2",83,0)
 W:'$D(ZTQUEUED) !,"Message #"_$G(XMZ)_" sent..."
"RTN","KMPDUTL2",84,0)
 ;
"RTN","KMPDUTL2",85,0)
 Q
"RTN","KMPDUTL2",86,0)
 ;
"RTN","KMPDUTL2",87,0)
STRSTP(KMPDAPP,KMPDDW,KMPDBP,KMPDSTM) ;-- record start/stop times
"RTN","KMPDUTL2",88,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL2",89,0)
 ; KMPDAPP.... CP application:
"RTN","KMPDUTL2",90,0)
 ;              1 - sagg
"RTN","KMPDUTL2",91,0)
 ;              2 - rum
"RTN","KMPDUTL2",92,0)
 ;              3 - hl7
"RTN","KMPDUTL2",93,0)
 ;              4 - timing
"RTN","KMPDUTL2",94,0)
 ; KMPDDW..... Daily or Weekly
"RTN","KMPDUTL2",95,0)
 ;              1 - daily
"RTN","KMPDUTL2",96,0)
 ;              2 - weekly
"RTN","KMPDUTL2",97,0)
 ; KMPDBP.... Background or Purge
"RTN","KMPDUTL2",98,0)
 ;              1 - background
"RTN","KMPDUTL2",99,0)
 ;              2 - purge
"RTN","KMPDUTL2",100,0)
 ; KMPDSTM.... Start Time in internal fileman format
"RTN","KMPDUTL2",101,0)
 ;
"RTN","KMPDUTL2",102,0)
 ; This api will calculate END time and DELTA time (END-KMPDSTM) and
"RTN","KMPDUTL2",103,0)
 ; store the results in:
"RTN","KMPDUTL2",104,0)
 ;    ^XTMP("KMPD","BACKGROUND",KMPDAPP,KMPDDW,KMPDBP,...)
"RTN","KMPDUTL2",105,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL2",106,0)
 Q:'$G(KMPDAPP)
"RTN","KMPDUTL2",107,0)
 Q:KMPDAPP<1!(KMPDAPP>4)
"RTN","KMPDUTL2",108,0)
 Q:'$G(KMPDDW)
"RTN","KMPDUTL2",109,0)
 Q:KMPDDW<1!(KMPDDW>2)
"RTN","KMPDUTL2",110,0)
 Q:'$G(KMPDBP)
"RTN","KMPDUTL2",111,0)
 Q:KMPDBP<1!(KMPDBP>2)
"RTN","KMPDUTL2",112,0)
 Q:'$G(KMPDSTM)
"RTN","KMPDUTL2",113,0)
 ;
"RTN","KMPDUTL2",114,0)
 N END,ERROR,FDA,FIELD S END=$$NOW^XLFDT
"RTN","KMPDUTL2",115,0)
 ;
"RTN","KMPDUTL2",116,0)
 ; starting field for daily or background
"RTN","KMPDUTL2",117,0)
 S FIELD=KMPDAPP+($S(KMPDDW=1:5,1:8)*.01)
"RTN","KMPDUTL2",118,0)
 ; if purge
"RTN","KMPDUTL2",119,0)
 S:KMPDBP=2 FIELD=FIELD+.07
"RTN","KMPDUTL2",120,0)
 ;
"RTN","KMPDUTL2",121,0)
 ; store start time, end time, and delta
"RTN","KMPDUTL2",122,0)
 S FDA($J,8973,"1,",FIELD)=KMPDSTM
"RTN","KMPDUTL2",123,0)
 S FDA($J,8973,"1,",FIELD+.01)=END
"RTN","KMPDUTL2",124,0)
 S FDA($J,8973,"1,",FIELD+.02)=$$FMDIFF^XLFDT(END,KMPDSTM,3)
"RTN","KMPDUTL2",125,0)
 ;
"RTN","KMPDUTL2",126,0)
 D FILE^DIE("","FDA($J)","ERROR")
"RTN","KMPDUTL2",127,0)
 ;
"RTN","KMPDUTL2",128,0)
 Q
"VER")
8.0^22.0
"BLD",6097,6)
^4
**END**
**END**
