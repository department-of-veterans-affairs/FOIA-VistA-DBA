Released PX*1*183 SEQ #140
Extracted from mail message
**KIDS**:PX*1.0*183^

**INSTALL NAME**
PX*1.0*183
"BLD",7086,0)
PX*1.0*183^PCE PATIENT CARE ENCOUNTER^0^3070223^y
"BLD",7086,1,0)
^^10^10^3070223^
"BLD",7086,1,1,0)
This patch addresses four issues related to the Patient Care Encounter 
"BLD",7086,1,2,0)
(PCE) module that were reported on the Remedy tickets listed below:
"BLD",7086,1,3,0)
 
"BLD",7086,1,4,0)
  1) HD123432 - IBDF UTIL MAINT UTILITY PROBLEM
"BLD",7086,1,5,0)
  2) HD135534 - IB MT NIGHT COMP erroring out with 
"BLD",7086,1,6,0)
                <SUBSCRIPT>ENCEVENT+10~PXKENC
"BLD",7086,1,7,0)
  3) HD136528 - Warning on Patient Death - warning displayed with not 
"BLD",7086,1,8,0)
                a related patient
"BLD",7086,1,9,0)
  4) HD173398 - Event Capture Issue - update to the User Manual regarding
"BLD",7086,1,10,0)
                 PXCE Data entry functionality
"BLD",7086,4,0)
^9.64PA^^
"BLD",7086,6)
1^
"BLD",7086,6.3)
3
"BLD",7086,"KRN",0)
^9.67PA^8989.52^19
"BLD",7086,"KRN",.4,0)
.4
"BLD",7086,"KRN",.401,0)
.401
"BLD",7086,"KRN",.402,0)
.402
"BLD",7086,"KRN",.403,0)
.403
"BLD",7086,"KRN",.5,0)
.5
"BLD",7086,"KRN",.84,0)
.84
"BLD",7086,"KRN",3.6,0)
3.6
"BLD",7086,"KRN",3.8,0)
3.8
"BLD",7086,"KRN",9.2,0)
9.2
"BLD",7086,"KRN",9.8,0)
9.8
"BLD",7086,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",7086,"KRN",9.8,"NM",1,0)
PXAPIIB^^0^B5736603
"BLD",7086,"KRN",9.8,"NM",2,0)
PXCEPAT^^0^B30450430
"BLD",7086,"KRN",9.8,"NM",3,0)
PXKENC^^0^B23516097
"BLD",7086,"KRN",9.8,"NM","B","PXAPIIB",1)

"BLD",7086,"KRN",9.8,"NM","B","PXCEPAT",2)

"BLD",7086,"KRN",9.8,"NM","B","PXKENC",3)

"BLD",7086,"KRN",19,0)
19
"BLD",7086,"KRN",19.1,0)
19.1
"BLD",7086,"KRN",101,0)
101
"BLD",7086,"KRN",409.61,0)
409.61
"BLD",7086,"KRN",771,0)
771
"BLD",7086,"KRN",870,0)
870
"BLD",7086,"KRN",8989.51,0)
8989.51
"BLD",7086,"KRN",8989.52,0)
8989.52
"BLD",7086,"KRN",8994,0)
8994
"BLD",7086,"KRN","B",.4,.4)

"BLD",7086,"KRN","B",.401,.401)

"BLD",7086,"KRN","B",.402,.402)

"BLD",7086,"KRN","B",.403,.403)

"BLD",7086,"KRN","B",.5,.5)

"BLD",7086,"KRN","B",.84,.84)

"BLD",7086,"KRN","B",3.6,3.6)

"BLD",7086,"KRN","B",3.8,3.8)

"BLD",7086,"KRN","B",9.2,9.2)

"BLD",7086,"KRN","B",9.8,9.8)

"BLD",7086,"KRN","B",19,19)

"BLD",7086,"KRN","B",19.1,19.1)

"BLD",7086,"KRN","B",101,101)

"BLD",7086,"KRN","B",409.61,409.61)

"BLD",7086,"KRN","B",771,771)

"BLD",7086,"KRN","B",870,870)

"BLD",7086,"KRN","B",8989.51,8989.51)

"BLD",7086,"KRN","B",8989.52,8989.52)

"BLD",7086,"KRN","B",8994,8994)

"BLD",7086,"QUES",0)
^9.62^^
"BLD",7086,"REQB",0)
^9.611^2^2
"BLD",7086,"REQB",1,0)
PX*1.0*161^2
"BLD",7086,"REQB",2,0)
PX*1.0*143^2
"BLD",7086,"REQB","B","PX*1.0*143",2)

"BLD",7086,"REQB","B","PX*1.0*161",1)

"MBREQ")
0
"PKG",413,-1)
1^1
"PKG",413,0)
PCE PATIENT CARE ENCOUNTER^PX^Patient Care Encounter (VA Parent package)^
"PKG",413,20,0)
^9.402P^^
"PKG",413,22,0)
^9.49I^1^1
"PKG",413,22,1,0)
1.0^2960812^2960913^12537
"PKG",413,22,1,"PAH",1,0)
183^3070223^123457115
"PKG",413,22,1,"PAH",1,1,0)
^^10^10^3070223
"PKG",413,22,1,"PAH",1,1,1,0)
This patch addresses four issues related to the Patient Care Encounter 
"PKG",413,22,1,"PAH",1,1,2,0)
(PCE) module that were reported on the Remedy tickets listed below:
"PKG",413,22,1,"PAH",1,1,3,0)
 
"PKG",413,22,1,"PAH",1,1,4,0)
  1) HD123432 - IBDF UTIL MAINT UTILITY PROBLEM
"PKG",413,22,1,"PAH",1,1,5,0)
  2) HD135534 - IB MT NIGHT COMP erroring out with 
"PKG",413,22,1,"PAH",1,1,6,0)
                <SUBSCRIPT>ENCEVENT+10~PXKENC
"PKG",413,22,1,"PAH",1,1,7,0)
  3) HD136528 - Warning on Patient Death - warning displayed with not 
"PKG",413,22,1,"PAH",1,1,8,0)
                a related patient
"PKG",413,22,1,"PAH",1,1,9,0)
  4) HD173398 - Event Capture Issue - update to the User Manual regarding
"PKG",413,22,1,"PAH",1,1,10,0)
                 PXCE Data entry functionality
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","PXAPIIB")
0^1^B5736603^B5736008
"RTN","PXAPIIB",1,0)
PXAPIIB ;ISA/AAS - SUPPORTED REFERENCES FOR AICS ; 1/5/07 4:59pm  ; Compiled January 18, 2007 10:03:16
"RTN","PXAPIIB",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**183**;Aug 12, 1996;Build 3
"RTN","PXAPIIB",3,0)
 ;
"RTN","PXAPIIB",4,0)
 ; -- Output transforms, used for outputting entry during formatting
"RTN","PXAPIIB",5,0)
 ;    and after scanning before sending to PCE.
"RTN","PXAPIIB",6,0)
 ; -- called by the package interface file and IBDFBK3
"RTN","PXAPIIB",7,0)
 ;
"RTN","PXAPIIB",8,0)
DSPLYED(IEN) ; -- function, returns .01 field of entry ien
"RTN","PXAPIIB",9,0)
 ; -- output transform for Education Topics (file #9999999.09)
"RTN","PXAPIIB",10,0)
 ; -- example of use: S Y=$$DSPLYED^PXAPIIB(Y)
"RTN","PXAPIIB",11,0)
 Q $P($G(^AUTTEDT(+$G(IEN),0)),"^")
"RTN","PXAPIIB",12,0)
 ;
"RTN","PXAPIIB",13,0)
DSPLYIM(IEN) ; -- function, returns .01 field of entry ien
"RTN","PXAPIIB",14,0)
 ; -- output transform for Immunizations (file #9999999.14)
"RTN","PXAPIIB",15,0)
 Q $P($G(^AUTTIMM(+$G(IEN),0)),"^")
"RTN","PXAPIIB",16,0)
 ;
"RTN","PXAPIIB",17,0)
DSPLYEX(IEN) ; -- function, returns .01 field of entry ien
"RTN","PXAPIIB",18,0)
 ; -- output transform for EXAMS (file #9999999.15)
"RTN","PXAPIIB",19,0)
 Q $P($G(^AUTTEXAM(+$G(IEN),0)),"^")
"RTN","PXAPIIB",20,0)
 ;
"RTN","PXAPIIB",21,0)
DSPLYTR(IEN) ; -- function, returns .01 field of entry ien
"RTN","PXAPIIB",22,0)
 ; -- output transform for TREATMENTS (file #9999999.17)
"RTN","PXAPIIB",23,0)
 Q $P($G(^AUTTTRT(+$G(IEN),0)),"^")
"RTN","PXAPIIB",24,0)
 ;
"RTN","PXAPIIB",25,0)
DSPLYSK(IEN) ; -- function, returns .01 field of entry ien
"RTN","PXAPIIB",26,0)
 ; -- output transform for Education Topics (file #9999999.28)
"RTN","PXAPIIB",27,0)
 Q $P($G(^AUTTSK(+$G(IEN),0)),"^")
"RTN","PXAPIIB",28,0)
 ;
"RTN","PXAPIIB",29,0)
DSPLYHF(IEN) ; -- function, returns .01 field of entry ien
"RTN","PXAPIIB",30,0)
 ; -- output transform for Health Factors (file #9999999.64)
"RTN","PXAPIIB",31,0)
 Q $P($G(^AUTTHF(+$G(IEN),0)),"^")
"RTN","PXAPIIB",32,0)
 ;
"RTN","PXAPIIB",33,0)
 ;
"RTN","PXAPIIB",34,0)
 ; --  Validation routines, used by the utility to validate active
"RTN","PXAPIIB",35,0)
 ;     entries on a form, called from package interface file.
"RTN","PXAPIIB",36,0)
 ;
"RTN","PXAPIIB",37,0)
TESTEDT ; -- does X point to a valid Education Topic?  Kills X if not.
"RTN","PXAPIIB",38,0)
 ;    input  X := pointer to 9999999.09
"RTN","PXAPIIB",39,0)
 ;    output   := if valid x=x,y=""
"RTN","PXAPIIB",40,0)
 ;             := if entry not exist           x is killed, y=""
"RTN","PXAPIIB",41,0)
 ;             := if entry exist but inactive  x is killed, y=.01 field
"RTN","PXAPIIB",42,0)
 ; 
"RTN","PXAPIIB",43,0)
 I '$G(X) K X S Y="" Q
"RTN","PXAPIIB",44,0)
 I '$D(^AUTTEDT(X,0)) K X S Y="" Q
"RTN","PXAPIIB",45,0)
 I $P($G(^AUTTEDT(X,0)),"^",3) S Y=$P(^AUTTEDT(X,0),"^") K X
"RTN","PXAPIIB",46,0)
 Q
"RTN","PXAPIIB",47,0)
 ;
"RTN","PXAPIIB",48,0)
TESTIMM ; -- does X point to a valid Immunization?  Kills X if not.
"RTN","PXAPIIB",49,0)
 ;    input  X := pointer to 9999999.14
"RTN","PXAPIIB",50,0)
 ;    output   := if valid x=x,y=""
"RTN","PXAPIIB",51,0)
 ;             := if entry not exist           x is killed, y=""
"RTN","PXAPIIB",52,0)
 ;             := if entry exist but inactive  x is killed, y=.01 field
"RTN","PXAPIIB",53,0)
 ;
"RTN","PXAPIIB",54,0)
 I '$G(X) K X S Y="" Q
"RTN","PXAPIIB",55,0)
 I '$D(^AUTTIMM(X,0)) K X S Y="" Q
"RTN","PXAPIIB",56,0)
 I $P($G(^AUTTIMM(X,0)),"^",7) S Y=$P(^AUTTIMM(X,0),"^") K X
"RTN","PXAPIIB",57,0)
 Q
"RTN","PXAPIIB",58,0)
 ;
"RTN","PXAPIIB",59,0)
TESTEXM ; -- does X point to a valid EXAM?  Kills X if not.
"RTN","PXAPIIB",60,0)
 ;    input  X := pointer to 9999999.15
"RTN","PXAPIIB",61,0)
 ;    output   := if valid x=x,y=""
"RTN","PXAPIIB",62,0)
 ;             := if entry not exist           x is killed, y=""
"RTN","PXAPIIB",63,0)
 ;             := if entry exist but inactive  x is killed, y=.01 field
"RTN","PXAPIIB",64,0)
 ;
"RTN","PXAPIIB",65,0)
 I '$G(X) K X S Y="" Q
"RTN","PXAPIIB",66,0)
 I '$D(^AUTTEXAM(X,0)) K X S Y="" Q
"RTN","PXAPIIB",67,0)
 I $P($G(^AUTTEXAM(X,0)),"^",4) S Y=$P(^AUTTEXAM(X,0),"^") K X
"RTN","PXAPIIB",68,0)
 Q
"RTN","PXAPIIB",69,0)
 ;
"RTN","PXAPIIB",70,0)
TESTTRT ; -- does X point to a valid Treatment?  Kills X if not.
"RTN","PXAPIIB",71,0)
 ;    input  X := pointer to 9999999.17
"RTN","PXAPIIB",72,0)
 ;    output   := if valid x=x,y=""
"RTN","PXAPIIB",73,0)
 ;             := if entry not exist           x is killed, y=""
"RTN","PXAPIIB",74,0)
 ;             := if entry exist but inactive  x is killed, y=.01 field
"RTN","PXAPIIB",75,0)
 ;
"RTN","PXAPIIB",76,0)
 I '$G(X) K X S Y="" Q
"RTN","PXAPIIB",77,0)
 I '$D(^AUTTTRT(X,0)) K X S Y="" Q
"RTN","PXAPIIB",78,0)
 I $P($G(^AUTTTRT(X,0)),"^",4) S Y=$P(^AUTTTRT(X,0),"^") K X
"RTN","PXAPIIB",79,0)
 Q
"RTN","PXAPIIB",80,0)
 ;
"RTN","PXAPIIB",81,0)
TESTSK ; -- does X point to a valid Skin Test?  Kills X if not.
"RTN","PXAPIIB",82,0)
 ;    input  X := pointer to 9999999.28
"RTN","PXAPIIB",83,0)
 ;    output   := if valid x=x,y=""
"RTN","PXAPIIB",84,0)
 ;             := if entry not exist           x is killed, y=""
"RTN","PXAPIIB",85,0)
 ;             := if entry exist but inactive  x is killed, y=.01 field
"RTN","PXAPIIB",86,0)
 ;
"RTN","PXAPIIB",87,0)
 I '$G(X) K X S Y="" Q
"RTN","PXAPIIB",88,0)
 I '$D(^AUTTSK(X,0)) K X S Y="" Q
"RTN","PXAPIIB",89,0)
 I $P($G(^AUTTSK(X,0)),"^",3) S Y=$P(^AUTTSK(X,0),"^") K X
"RTN","PXAPIIB",90,0)
 Q
"RTN","PXAPIIB",91,0)
 ;
"RTN","PXAPIIB",92,0)
TESTHF ; -- does X point to a valid Health Factor? Kills X if not.
"RTN","PXAPIIB",93,0)
 ;    input  X := pointer to 9999999.64
"RTN","PXAPIIB",94,0)
 ;    output   := if valid x=x,y=""
"RTN","PXAPIIB",95,0)
 ;             := if entry not exist           x is killed, y=""
"RTN","PXAPIIB",96,0)
 ;             := if entry exist but inactive  x is killed, y=.01 field
"RTN","PXAPIIB",97,0)
 ;
"RTN","PXAPIIB",98,0)
 I '$G(X) K X S Y="" Q
"RTN","PXAPIIB",99,0)
 I '$D(^AUTTHF(X,0)) K X S Y="" Q
"RTN","PXAPIIB",100,0)
 I $P($G(^AUTTHF(X,0)),"^",11) S Y=$P(^AUTTHF(X,0),"^") K X
"RTN","PXAPIIB",101,0)
 Q
"RTN","PXAPIIB",102,0)
 ;
"RTN","PXAPIIB",103,0)
POV(VISIT,ARRAY) ;
"RTN","PXAPIIB",104,0)
 ; -- return purpose of visit for a visit pointer
"RTN","PXAPIIB",105,0)
 ;    Input  Visit := visit pointer
"RTN","PXAPIIB",106,0)
 ;           Array := call by reference the array to put the POV into
"RTN","PXAPIIB",107,0)
 ;    Output Array
"RTN","PXAPIIB",108,0)
 ;
"RTN","PXAPIIB",109,0)
 N I K ARRAY
"RTN","PXAPIIB",110,0)
 I $G(VISIT)<0 G POVQ
"RTN","PXAPIIB",111,0)
 S I=0 F  S I=$O(^AUPNVPOV("AD",VISIT,I)) Q:'I  S ARRAY(I)=^AUPNVPOV(I,0)
"RTN","PXAPIIB",112,0)
POVQ Q
"RTN","PXCEPAT")
0^2^B30450430^B30169766
"RTN","PXCEPAT",1,0)
PXCEPAT ;ISL/dee,ISA/KWP - Creates the List Manager display of visit for a patient ; 6/3/03 10:47am  ; Compiled January 5, 2007 14:12:43
"RTN","PXCEPAT",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**1,5,14,30,70,147,160,161,183**;Aug 12, 1996;Build 3
"RTN","PXCEPAT",3,0)
 Q
"RTN","PXCEPAT",4,0)
 ;
"RTN","PXCEPAT",5,0)
NEWPAT2 ;Entry point of changing patient from Update Encounter
"RTN","PXCEPAT",6,0)
 N PXCENEWP
"RTN","PXCEPAT",7,0)
 D PATIENT(.PXCENEWP)
"RTN","PXCEPAT",8,0)
 Q:PXCENEWP'>0
"RTN","PXCEPAT",9,0)
 D PATKILL
"RTN","PXCEPAT",10,0)
 S PXCEPAT=+PXCENEWP
"RTN","PXCEPAT",11,0)
NEWPAT1 ;Entry point for initial selection of patient
"RTN","PXCEPAT",12,0)
 D PATINFO(.PXCEPAT) Q:$D(DIRUT)
"RTN","PXCEPAT",13,0)
 I $P(PXCEVIEW,"^",1)'="P" D
"RTN","PXCEPAT",14,0)
 . S $P(PXCEVIEW,"^",1)="P"
"RTN","PXCEPAT",15,0)
 . D SETDATES^PXCE
"RTN","PXCEPAT",16,0)
 S SDAMTYP="P"
"RTN","PXCEPAT",17,0)
 I PXCEVIEW["A" K PXCEHLOC
"RTN","PXCEPAT",18,0)
 Q
"RTN","PXCEPAT",19,0)
 ;
"RTN","PXCEPAT",20,0)
NEWPAT ; -- init variables and list array
"RTN","PXCEPAT",21,0)
 N PXCENEWP
"RTN","PXCEPAT",22,0)
 D PATIENT(.PXCENEWP)
"RTN","PXCEPAT",23,0)
 I PXCENEWP'>0,("~H~P~"'[("~"_$P(PXCEVIEW,"^")_"~")) S VALMQUIT=1 D PATKILL Q
"RTN","PXCEPAT",24,0)
 I PXCENEWP'>0 D PATKILL Q
"RTN","PXCEPAT",25,0)
 D PATKILL
"RTN","PXCEPAT",26,0)
 S PXCEPAT=+PXCENEWP
"RTN","PXCEPAT",27,0)
 D NEWPAT1 Q:$D(DIRUT)
"RTN","PXCEPAT",28,0)
 D MAKELIST^PXCENEW
"RTN","PXCEPAT",29,0)
 Q
"RTN","PXCEPAT",30,0)
 ;
"RTN","PXCEPAT",31,0)
MAKELIST ;
"RTN","PXCEPAT",32,0)
 N PXCEDATE,PXCELOC,PXCESTAT,PXCEDT,PXCEIEN,PXCEVSIT,PXCEPRIM
"RTN","PXCEPAT",33,0)
 D CHGCAP^VALM("LOCATION","Clinic")
"RTN","PXCEPAT",34,0)
 K VALMHDR S VALMBCK="R"
"RTN","PXCEPAT",35,0)
 S PXCEDT=PXCE9END
"RTN","PXCEPAT",36,0)
 D CLEAN^VALM10
"RTN","PXCEPAT",37,0)
 K ^TMP("PXCEIDX",$J)
"RTN","PXCEPAT",38,0)
 S VALMBG=1
"RTN","PXCEPAT",39,0)
 S VALMCNT=0
"RTN","PXCEPAT",40,0)
 F  S PXCEDT=$O(^AUPNVSIT("AA",PXCEPAT,PXCEDT)) Q:PXCEDT'>0!(PXCEDT>PXCE9BEG)  D
"RTN","PXCEPAT",41,0)
 . S PXCEIEN=""
"RTN","PXCEPAT",42,0)
 . F  S PXCEIEN=$O(^AUPNVSIT("AA",PXCEPAT,PXCEDT,PXCEIEN)) Q:PXCEIEN'>0  D
"RTN","PXCEPAT",43,0)
 .. S PXCEVSIT=^AUPNVSIT(PXCEIEN,0)
"RTN","PXCEPAT",44,0)
 .. I $D(PXCEHLOC),$P(PXCEVSIT,"^",22)'=PXCEHLOC Q
"RTN","PXCEPAT",45,0)
 .. S PXCEPRIM=$P($G(^AUPNVSIT(PXCEIEN,150)),"^",3)
"RTN","PXCEPAT",46,0)
 .. ;+do not show encounter if the encounter type is S,C or null
"RTN","PXCEPAT",47,0)
 .. Q:"SC"[PXCEPRIM
"RTN","PXCEPAT",48,0)
 .. I PXCEKEYS'["S",PXCEKEYS'["V","A"=PXCEPRIM Q  ;+let supervisor and viewer see ancillary encounters
"RTN","PXCEPAT",49,0)
 .. I PXCEKEYS'["V",$$DISPOSIT^PXUTL1(PXCEPAT,+PXCEVSIT,PXCEIEN) Q  ;+let viewer see disposition
"RTN","PXCEPAT",50,0)
 .. S VALMCNT=VALMCNT+1
"RTN","PXCEPAT",51,0)
 .. S Y=$P(PXCEVSIT,"^",1)
"RTN","PXCEPAT",52,0)
 .. S PXCEDATE=$$DATE^PXCEDATE($P(PXCEVSIT,"^",1))
"RTN","PXCEPAT",53,0)
 .. S PXCEDATE=$E(PXCEDATE,1,18)_$J("",(19-$L(PXCEDATE)))
"RTN","PXCEPAT",54,0)
 .. I $P(PXCEVSIT,"^",7)="E" D
"RTN","PXCEPAT",55,0)
 ... S PXCELOC="  Historical Encounter at "
"RTN","PXCEPAT",56,0)
 ... I $P(PXCEVSIT,"^",6)]"" D
"RTN","PXCEPAT",57,0)
 .... N PXCEDELF
"RTN","PXCEPAT",58,0)
 .... S PXCESTAT=$E($$EXTERNAL^DILFD(9000010,.06,"",$P(PXCEVSIT,"^",6),"PXCEDILF"),1,30)
"RTN","PXCEPAT",59,0)
 ... E  S PXCESTAT=$E($P($G(^AUPNVSIT(PXCEIEN,21)),"^"),1,30)
"RTN","PXCEPAT",60,0)
 .. E  D
"RTN","PXCEPAT",61,0)
 ... S PXCELOC=$S($P(PXCEVSIT,"^",22)>0:$P(^SC($P(PXCEVSIT,"^",22),0),"^"),$P(PXCEVSIT,"^",7)="E":"   Historical",1:"")
"RTN","PXCEPAT",62,0)
 ... S PXCELOC=$E(PXCELOC,1,26)_$J("",(28-$L(PXCELOC)))
"RTN","PXCEPAT",63,0)
 ... S PXCESTAT=$P($$STATUS^SDPCE(PXCEIEN),"^",2)
"RTN","PXCEPAT",64,0)
 .. S ^TMP("PXCE",$J,VALMCNT,0)=$J(VALMCNT,4)_" "_PXCEDATE_PXCELOC_PXCESTAT
"RTN","PXCEPAT",65,0)
 .. S ^TMP("PXCEIDX",$J,VALMCNT)=PXCEIEN
"RTN","PXCEPAT",66,0)
 S ^TMP("PXCEIDX",$J,0)=VALMCNT
"RTN","PXCEPAT",67,0)
 I VALMCNT'>0 D
"RTN","PXCEPAT",68,0)
 . S ^TMP("PXCE",$J,1,0)=" "
"RTN","PXCEPAT",69,0)
 . S ^TMP("PXCE",$J,2,0)="    No encounter found that satisfy the above criteria."
"RTN","PXCEPAT",70,0)
 . S VALMCNT=2
"RTN","PXCEPAT",71,0)
 Q
"RTN","PXCEPAT",72,0)
 ;
"RTN","PXCEPAT",73,0)
SDSALONE ;Get the patient for standalone from the appointment/hospital
"RTN","PXCEPAT",74,0)
 ;location screen
"RTN","PXCEPAT",75,0)
 Q:$G(PXCEPAT)>0
"RTN","PXCEPAT",76,0)
 D PATIENT(.PXCEPAT)
"RTN","PXCEPAT",77,0)
 I PXCEPAT>0 D PATINFO(.PXCEPAT) S PXCEJPAT=1
"RTN","PXCEPAT",78,0)
 Q
"RTN","PXCEPAT",79,0)
 ;
"RTN","PXCEPAT",80,0)
SDKALONE ;Kill the patient info if it was created above
"RTN","PXCEPAT",81,0)
 Q:'$D(PXCEJPAT)
"RTN","PXCEPAT",82,0)
 D PATKILL
"RTN","PXCEPAT",83,0)
 K PXCEJPAT
"RTN","PXCEPAT",84,0)
 Q
"RTN","PXCEPAT",85,0)
 ;
"RTN","PXCEPAT",86,0)
JUSTDFN ;Just set DFN for other packages.
"RTN","PXCEPAT",87,0)
 Q
"RTN","PXCEPAT",88,0)
 Q:$G(DFN)>0
"RTN","PXCEPAT",89,0)
 N X,Y,DIC,DA
"RTN","PXCEPAT",90,0)
 S DIC=2,DIC(0)="AEMQ"
"RTN","PXCEPAT",91,0)
 D ^DIC
"RTN","PXCEPAT",92,0)
 I +Y>0 S DFN=+Y,PXCEJDFN=1
"RTN","PXCEPAT",93,0)
 Q
"RTN","PXCEPAT",94,0)
 ;
"RTN","PXCEPAT",95,0)
JUSTDFNK ;Kill DFN if it was set above
"RTN","PXCEPAT",96,0)
 I $G(PXCEJDFN) K DFN,PXCEJDFN
"RTN","PXCEPAT",97,0)
 I $G(PXCEPAT)>0 S DFN=PXCEPAT
"RTN","PXCEPAT",98,0)
 Q
"RTN","PXCEPAT",99,0)
 ;
"RTN","PXCEPAT",100,0)
PATIENT(PXCEDATA) ; Select a patient
"RTN","PXCEPAT",101,0)
 N X,Y,DIC,DA,DFN
"RTN","PXCEPAT",102,0)
 D FULL^VALM1
"RTN","PXCEPAT",103,0)
 S DIC=2,DIC(0)="AEMQ" D ^DIC
"RTN","PXCEPAT",104,0)
 S PXCEDATA=+Y
"RTN","PXCEPAT",105,0)
PAT1 S %=1 W !,"   ...OK" D YN^DICN I %=0 W "   Answer With 'Yes' or 'No'" G PAT1
"RTN","PXCEPAT",106,0)
 I %'=1!$D(DIRUT) S (Y,PXCEDATA)=-1
"RTN","PXCEPAT",107,0)
 I +Y>0 S DFN=+Y D 2^VADPT I +VADM(6) N DIR D  I $D(DIRUT) S PXCEDATA=-1 D PATKILL
"RTN","PXCEPAT",108,0)
 . S DIR(0)="E",DIR("A")="Enter RETURN to continue or '^' to exit"
"RTN","PXCEPAT",109,0)
 . S DIR("A",1)="WARNING "_VADM(7) D ^DIR
"RTN","PXCEPAT",110,0)
 Q
"RTN","PXCEPAT",111,0)
 ;
"RTN","PXCEPAT",112,0)
PATINFO(PXCEDATA) ;
"RTN","PXCEPAT",113,0)
 Q:$G(PXCEDATA)'>0
"RTN","PXCEPAT",114,0)
 S (DFN,SDFN,ORVP)=PXCEDATA
"RTN","PXCEPAT",115,0)
 D:$G(PXCECAT)="SIT"!($G(PXCECAT)="HIST")!($G(PXCECAT)="AEP")!$G(FSEL) DTHINFO
"RTN","PXCEPAT",116,0)
 I $D(DIRUT),$G(FSEL) D PATKILL Q
"RTN","PXCEPAT",117,0)
 ;D 2^VADPT I +VADM(6) D  K DIR I $D(DIRUT) D:$G(PXCECAT)'="SIT"&($G(PXCECAT)'="HIST")&($G(PXCECAT)'="AEP") PATKILL Q
"RTN","PXCEPAT",118,0)
 ;. S DIR(0)="E",DIR("A")="Enter RETURN to continue or '^' to Quit"
"RTN","PXCEPAT",119,0)
 ;. S DIR("A",2)="WARNING "_VADM(7),DIR("A",1)=" ",DIR("A",3)=" " D ^DIR
"RTN","PXCEPAT",120,0)
 N Y
"RTN","PXCEPAT",121,0)
 S Y=PXCEDATA
"RTN","PXCEPAT",122,0)
 ;Set IHS patient variables
"RTN","PXCEPAT",123,0)
 D START^AUPNPAT
"RTN","PXCEPAT",124,0)
 D PATNAME(.PXCEDATA)
"RTN","PXCEPAT",125,0)
 N VAERR,VAROOT,PXCEVA,PXCEINDX
"RTN","PXCEPAT",126,0)
 S VAROOT="PXCEVA"
"RTN","PXCEPAT",127,0)
 D ELIG^VADPT
"RTN","PXCEPAT",128,0)
 S PXCEDATA("ELIG")=$P($G(PXCEVA(1)),"^",1,99)
"RTN","PXCEPAT",129,0)
 S PXCEINDX=""
"RTN","PXCEPAT",130,0)
 F  S PXCEINDX=$O(PXCEVA(1,PXCEINDX)) Q:'PXCEINDX  S PXCEDATA("ELIG",PXCEINDX)=$P(PXCEVA(1,PXCEINDX),"^",1,99)
"RTN","PXCEPAT",131,0)
 Q
"RTN","PXCEPAT",132,0)
 ;
"RTN","PXCEPAT",133,0)
DTHINFO ;DEATH WARNING
"RTN","PXCEPAT",134,0)
 D 2^VADPT N DIR I +VADM(6) D
"RTN","PXCEPAT",135,0)
 . S DIR(0)="E",DIR("A")="Enter RETURN to continue or '^' to Quit"
"RTN","PXCEPAT",136,0)
 . S DIR("A",2)="WARNING "_VADM(7),DIR("A",1)=" ",DIR("A",3)=" " D ^DIR
"RTN","PXCEPAT",137,0)
 Q
"RTN","PXCEPAT",138,0)
PATNAME(PXCEDATA) ;
"RTN","PXCEPAT",139,0)
 S PXCEDATA("NAME")=$P($G(^DPT(+PXCEDATA,0)),"^",1)
"RTN","PXCEPAT",140,0)
 N VAPTYP,VA,VAERR,DFN
"RTN","PXCEPAT",141,0)
 S DFN=+PXCEDATA
"RTN","PXCEPAT",142,0)
 D PID^VADPT6
"RTN","PXCEPAT",143,0)
 I 'VAERR S PXCEDATA("SSN")=VA("PID"),PXCEDATA("SSN_BRIEF")=VA("BID")
"RTN","PXCEPAT",144,0)
 E  S (PXCEDATA("SSN"),PXCEDATA("SSN_BRIEF"))=""
"RTN","PXCEPAT",145,0)
 Q
"RTN","PXCEPAT",146,0)
 ;
"RTN","PXCEPAT",147,0)
PATKILL ;
"RTN","PXCEPAT",148,0)
 K PXCEPAT,DFN,SDFN,ORVP,VADM,VAEL
"RTN","PXCEPAT",149,0)
 ; Kill IHS patient variables
"RTN","PXCEPAT",150,0)
 D KILL^AUPNPAT
"RTN","PXCEPAT",151,0)
 Q
"RTN","PXCEPAT",152,0)
 ;
"RTN","PXCEPAT",153,0)
APPOINT(DFN,DATETIME,HOSLOC) ;See if there is an appointment.
"RTN","PXCEPAT",154,0)
 ;Input:
"RTN","PXCEPAT",155,0)
 ;  DFN       ien of the patient
"RTN","PXCEPAT",156,0)
 ;  DATETIME  the date and time of the appointment
"RTN","PXCEPAT",157,0)
 ;  HOSLOC    optional, is the Hospital Location (#44)
"RTN","PXCEPAT",158,0)
 ;Returns the clinic ien or -1 if no appointement.
"RTN","PXCEPAT",159,0)
 ;
"RTN","PXCEPAT",160,0)
 N VASD,HL,INDEX,VAERR
"RTN","PXCEPAT",161,0)
 K ^UTILITY("VASD",$J)
"RTN","PXCEPAT",162,0)
 S VASD("T")=DATETIME
"RTN","PXCEPAT",163,0)
 S VASD("F")=DATETIME-.00000001
"RTN","PXCEPAT",164,0)
 S VASD("W")=129 ;1)Active/Kept 2)Inpatient appts. only 9)No action taken
"RTN","PXCEPAT",165,0)
 S:$G(HOSLOC) VASD("C",HOSLOC)=""
"RTN","PXCEPAT",166,0)
 D SDA^VADPT
"RTN","PXCEPAT",167,0)
 I VAERR S HL=-1 G QAPPOINT
"RTN","PXCEPAT",168,0)
 S INDEX=$O(^UTILITY("VASD",$J,0))
"RTN","PXCEPAT",169,0)
 I INDEX>0 S HL=$P(^UTILITY("VASD",$J,INDEX,"I"),"^",2)
"RTN","PXCEPAT",170,0)
 E  S HL=-1
"RTN","PXCEPAT",171,0)
QAPPOINT K ^UTILITY("VASD",$J)
"RTN","PXCEPAT",172,0)
 Q HL
"RTN","PXCEPAT",173,0)
 ;
"RTN","PXKENC")
0^3^B23516097^B23222675
"RTN","PXKENC",1,0)
PXKENC ;ISL/dee,ESW - Builds the array of all encounter data for the event point ; 12/5/02 11:53am  ; 1/5/07 4:54pm
"RTN","PXKENC",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**15,22,73,108,143,183**;Aug 12, 1996;Build 3
"RTN","PXKENC",3,0)
 Q
"RTN","PXKENC",4,0)
 ;
"RTN","PXKENC",5,0)
GETENC(DFN,ENCDT,HLOC) ;Get all of the encounter data
"RTN","PXKENC",6,0)
 ;Parameters:
"RTN","PXKENC",7,0)
 ;  DFN    Pointer to the patient (#9000001)
"RTN","PXKENC",8,0)
 ;  ENCDT  Date/Time of the encounter in Fileman format
"RTN","PXKENC",9,0)
 ;  HLOC   Pointer to Hospital Location (#44)
"RTN","PXKENC",10,0)
 ;
"RTN","PXKENC",11,0)
 ;Returns:
"RTN","PXKENC",12,0)
 ;  -2  if called incorrectly
"RTN","PXKENC",13,0)
 ;  -1  if could not find encounter
"RTN","PXKENC",14,0)
 ;  >0  Visit ien(s) separated by ^
"RTN","PXKENC",15,0)
 ;
"RTN","PXKENC",16,0)
 ;  The encounter is returned in the array
"RTN","PXKENC",17,0)
 ;    ^TMP("PXKENC",$J,pointer to visit)
"RTN","PXKENC",18,0)
 ;  may contain more than one visit
"RTN","PXKENC",19,0)
 ;
"RTN","PXKENC",20,0)
 N VISITIEN,REVDT,RETURN
"RTN","PXKENC",21,0)
 K ^TMP("PXKENC",$J)
"RTN","PXKENC",22,0)
 S RETURN=-1
"RTN","PXKENC",23,0)
 Q:DFN'>0!(ENCDT<1800000)!(HLOC'>0) -2
"RTN","PXKENC",24,0)
 S REVDT=(9999999-$P(+ENCDT,".",1))_$S($P(+ENCDT,".",2)'="":"."_$P(+ENCDT,".",2),1:"")
"RTN","PXKENC",25,0)
 S VISITIEN=0
"RTN","PXKENC",26,0)
 F  S VISITIEN=$O(^AUPNVSIT("AA",+DFN,REVDT,VISITIEN)) Q:'VISITIEN  D
"RTN","PXKENC",27,0)
 . I $P($G(^AUPNVSIT(VISITIEN,0)),"^",22)=HLOC,"C~S"'[$P($G(^AUPNVSIT(VISITIEN,150)),"^",3) D
"RTN","PXKENC",28,0)
 .. D ENCEVENT(VISITIEN,1)
"RTN","PXKENC",29,0)
 .. I RETURN<1 S RETURN=VISITIEN
"RTN","PXKENC",30,0)
 .. E  S RETURN=RETURN_"^"_VISITIEN
"RTN","PXKENC",31,0)
 Q RETURN
"RTN","PXKENC",32,0)
 ;
"RTN","PXKENC",33,0)
ENCEVENT(VISITIEN,DONTKILL) ;Create the ^TMP("PXKENC",$J, array of all the
"RTN","PXKENC",34,0)
 ;  information about one encounter.
"RTN","PXKENC",35,0)
 ;Parameters:
"RTN","PXKENC",36,0)
 ;  VISITIEN  Pointer to the Visit (#9000010)
"RTN","PXKENC",37,0)
 ;  DONOTKILL is 1 if the output array is not to be killed before used
"RTN","PXKENC",38,0)
 ;            and 0 or null if the array is to be killed (cleaned out)
"RTN","PXKENC",39,0)
 ;
"RTN","PXKENC",40,0)
 ;  The encounter is returned in the array
"RTN","PXKENC",41,0)
 ;    ^TMP("PXKENC",$J,pointer to visit)
"RTN","PXKENC",42,0)
 ;
"RTN","PXKENC",43,0)
 I $G(VISITIEN)'>0 Q  ;PX/183
"RTN","PXKENC",44,0)
 I '$D(^AUPNVSIT(VISITIEN)) Q
"RTN","PXKENC",45,0)
 K:'$G(DONTKILL) ^TMP("PXKENC",$J)
"RTN","PXKENC",46,0)
 N PXKCNT,PXKROOT
"RTN","PXKENC",47,0)
 S PXKROOT=$NA(@("^TMP(""PXKENC"",$J,"_VISITIEN_")"))
"RTN","PXKENC",48,0)
 ;
"RTN","PXKENC",49,0)
 N IEN,FILE,VFILE,FILESTR,PXKNODE
"RTN","PXKENC",50,0)
 F FILE="SIT","CSTP","PRV","POV","CPT","TRT","IMM","PED","SK","HF","XAM" D
"RTN","PXKENC",51,0)
 . S FILESTR=$S(FILE="SIT":"VST",1:FILE)
"RTN","PXKENC",52,0)
 . S VFILE=$P($T(GLOBAL^@("PXKF"_$S(FILE="SIT":"VST",FILE="CSTP":"VST",1:FILE))),";;",2)
"RTN","PXKENC",53,0)
 . I FILE="SIT" D
"RTN","PXKENC",54,0)
 .. S IEN=VISITIEN
"RTN","PXKENC",55,0)
 .. S PXKNODE=""
"RTN","PXKENC",56,0)
 .. F  S PXKNODE=$O(@VFILE@(IEN,PXKNODE)) Q:PXKNODE=""  D
"RTN","PXKENC",57,0)
 ... S @PXKROOT@(FILESTR,IEN,PXKNODE)=@VFILE@(IEN,PXKNODE)
"RTN","PXKENC",58,0)
 . E  D
"RTN","PXKENC",59,0)
 .. I FILE="PRV" D EVALD(VISITIEN,PXKROOT,VFILE,FILESTR)
"RTN","PXKENC",60,0)
 .. I FILE'="PRV" S IEN="" F  S IEN=$O(@VFILE@("AD",VISITIEN,IEN)) Q:'IEN  D
"RTN","PXKENC",61,0)
 ... I FILE="CSTP","SC"'[$P($G(@VFILE@(IEN,150)),"^",3) Q
"RTN","PXKENC",62,0)
 ... S PXKNODE=""
"RTN","PXKENC",63,0)
 ... F  S PXKNODE=$O(@VFILE@(IEN,PXKNODE)) Q:PXKNODE=""  D:PXKNODE'=801
"RTN","PXKENC",64,0)
 .... ;for cpt modifiers
"RTN","PXKENC",65,0)
 .... I FILE="CPT",PXKNODE=1 D  Q
"RTN","PXKENC",66,0)
 ..... S @PXKROOT@(FILESTR,IEN,PXKNODE,0)=$G(@VFILE@(IEN,PXKNODE,0))
"RTN","PXKENC",67,0)
 ..... N SUBIEN
"RTN","PXKENC",68,0)
 ..... S SUBIEN=0
"RTN","PXKENC",69,0)
 ..... F  S SUBIEN=$O(@VFILE@(IEN,PXKNODE,SUBIEN)) Q:SUBIEN=""  D
"RTN","PXKENC",70,0)
 ...... S @PXKROOT@(FILESTR,IEN,PXKNODE,SUBIEN,0)=$G(@VFILE@(IEN,PXKNODE,SUBIEN,0))
"RTN","PXKENC",71,0)
 .... ;
"RTN","PXKENC",72,0)
 .... S @PXKROOT@(FILESTR,IEN,PXKNODE)=$G(@VFILE@(IEN,PXKNODE))
"RTN","PXKENC",73,0)
 Q
"RTN","PXKENC",74,0)
EVALD(VISITIEN,PXKROOT,VFILE,FILESTR) ;evaluation for duplicate providers
"RTN","PXKENC",75,0)
 N CNT,PR,PRS,PS,PP,PRV,STR
"RTN","PXKENC",76,0)
 S IEN="",CNT=0
"RTN","PXKENC",77,0)
 F  S IEN=$O(@VFILE@("AD",VISITIEN,IEN)) Q:'IEN  D
"RTN","PXKENC",78,0)
 .S STR=@VFILE@(IEN,0),PR=+STR,PS=$P(STR,U,4)
"RTN","PXKENC",79,0)
 .I PS="P",'CNT S PRV=PR,CNT=1 D PXKNODE(VFILE,FILESTR,IEN,PXKROOT)
"RTN","PXKENC",80,0)
 .I PS="S" S PRS(PR,IEN)="" D PXKNODE(VFILE,FILESTR,IEN,PXKROOT)
"RTN","PXKENC",81,0)
 .Q
"RTN","PXKENC",82,0)
 S PR="" F  S PR=$O(PRS(PR)) Q:PR=""  S IEN="" D
"RTN","PXKENC",83,0)
 .F PP=1:1 S IEN=$O(PRS(PR,IEN)) Q:IEN=""  D
"RTN","PXKENC",84,0)
 ..I PR=$G(PRV) K @PXKROOT@(FILESTR,IEN) Q
"RTN","PXKENC",85,0)
 ..I PP>1 K @PXKROOT@(FILESTR,IEN)
"RTN","PXKENC",86,0)
 Q
"RTN","PXKENC",87,0)
PXKNODE(VFILE,FILESTR,IEN,PXKROOT) ;
"RTN","PXKENC",88,0)
 N STRR S PXKNODE=""
"RTN","PXKENC",89,0)
 F  S PXKNODE=$O(@VFILE@(IEN,PXKNODE)) Q:PXKNODE=""  D:PXKNODE'=801
"RTN","PXKENC",90,0)
 . I $E($P($P(PXKROOT,","),"(",2),2,7)="PXKENC" D
"RTN","PXKENC",91,0)
 ..; ENCEVENT called
"RTN","PXKENC",92,0)
 .. S @PXKROOT@(FILESTR,IEN,PXKNODE)=$G(@VFILE@(IEN,PXKNODE))
"RTN","PXKENC",93,0)
 . I $P(PXKROOT,"""",2)="PXKCO",'$D(@PXKROOT@(FILESTR,IEN)) D
"RTN","PXKENC",94,0)
 ..; COEVENT called
"RTN","PXKENC",95,0)
 .. F STRR="BEFORE","AFTER" D
"RTN","PXKENC",96,0)
 ... S @PXKROOT@(FILESTR,IEN,PXKNODE,STRR)=$G(@VFILE@(IEN,PXKNODE))
"RTN","PXKENC",97,0)
 Q
"RTN","PXKENC",98,0)
 ;
"RTN","PXKENC",99,0)
COEVENT(VISITIEN) ;Add to the ^TMP("PXKCO",$J, array all of the
"RTN","PXKENC",100,0)
 ;   information that is not already there.
"RTN","PXKENC",101,0)
 I '$D(^AUPNVSIT(VISITIEN)) Q
"RTN","PXKENC",102,0)
 N PXKCNT,PXKROOT
"RTN","PXKENC",103,0)
 S PXKROOT=$NA(@("^TMP(""PXKCO"",$J,"_VISITIEN_")"))
"RTN","PXKENC",104,0)
 ;
"RTN","PXKENC",105,0)
 N IEN,FILE,VFILE,PXKNODE
"RTN","PXKENC",106,0)
 F FILE="CSTP","PRV","POV","CPT","TRT","IMM","PED","SK","HF","XAM" D
"RTN","PXKENC",107,0)
 . S VFILE=$P($T(GLOBAL^@("PXKF"_$S(FILE="CSTP":"VST",1:FILE))),";;",2)
"RTN","PXKENC",108,0)
 . I FILE="PRV" D EVALD(VISITIEN,PXKROOT,VFILE,FILE)
"RTN","PXKENC",109,0)
 . I FILE'="PRV" S IEN="" F  S IEN=$O(@VFILE@("AD",VISITIEN,IEN)) Q:'IEN  D
"RTN","PXKENC",110,0)
 .. I FILE="CSTP","SC"'[$P($G(@VFILE@(IEN,150)),"^",3) Q
"RTN","PXKENC",111,0)
 .. S PXKNODE=""
"RTN","PXKENC",112,0)
 .. I '$D(@PXKROOT@(FILE,IEN)) D
"RTN","PXKENC",113,0)
 ... F  S PXKNODE=$O(@VFILE@(IEN,PXKNODE)) Q:PXKNODE=""  D:PXKNODE'=801
"RTN","PXKENC",114,0)
 .... I FILE="CPT",PXKNODE=1 D  Q
"RTN","PXKENC",115,0)
 ..... N SUBIEN,MOD
"RTN","PXKENC",116,0)
 ..... S SUBIEN=0
"RTN","PXKENC",117,0)
 ..... F  S SUBIEN=$O(@VFILE@(IEN,PXKNODE,SUBIEN)) Q:'SUBIEN  D
"RTN","PXKENC",118,0)
 ...... S MOD=@VFILE@(IEN,PXKNODE,SUBIEN,0)
"RTN","PXKENC",119,0)
 ...... S @PXKROOT@(FILE,IEN,PXKNODE,"BEFORE",MOD)=""
"RTN","PXKENC",120,0)
 ...... S @PXKROOT@(FILE,IEN,PXKNODE,"AFTER",MOD)=""
"RTN","PXKENC",121,0)
 .... S @PXKROOT@(FILE,IEN,PXKNODE,"BEFORE")=$G(@VFILE@(IEN,PXKNODE))
"RTN","PXKENC",122,0)
 .... S @PXKROOT@(FILE,IEN,PXKNODE,"AFTER")=$G(@VFILE@(IEN,PXKNODE))
"RTN","PXKENC",123,0)
 Q
"RTN","PXKENC",124,0)
 ;
"VER")
8.0^22.0
"BLD",7086,6)
^140
**END**
**END**
