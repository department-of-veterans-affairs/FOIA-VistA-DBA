Released XU*8*395 SEQ #330
Extracted from mail message
**KIDS**:XU*8.0*395^

**INSTALL NAME**
XU*8.0*395
"BLD",893,0)
XU*8.0*395^KERNEL^0^3051219^y
"BLD",893,1,0)
^^2^2^3051103^^
"BLD",893,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"BLD",893,1,2,0)
XU*8*395 HealtheVet CCOW follow-up.
"BLD",893,4,0)
^9.64PA^^
"BLD",893,6.3)
4
"BLD",893,"KRN",0)
^9.67PA^8989.52^19
"BLD",893,"KRN",.4,0)
.4
"BLD",893,"KRN",.401,0)
.401
"BLD",893,"KRN",.402,0)
.402
"BLD",893,"KRN",.403,0)
.403
"BLD",893,"KRN",.5,0)
.5
"BLD",893,"KRN",.84,0)
.84
"BLD",893,"KRN",3.6,0)
3.6
"BLD",893,"KRN",3.8,0)
3.8
"BLD",893,"KRN",9.2,0)
9.2
"BLD",893,"KRN",9.8,0)
9.8
"BLD",893,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",893,"KRN",9.8,"NM",1,0)
XUESSO1^^0^30134233
"BLD",893,"KRN",9.8,"NM",2,0)
XUS1B^^0^4169871
"BLD",893,"KRN",9.8,"NM",3,0)
XUSRB^^0^37739188
"BLD",893,"KRN",9.8,"NM",4,0)
XUSRB4^^0^10928715
"BLD",893,"KRN",9.8,"NM","B","XUESSO1",1)

"BLD",893,"KRN",9.8,"NM","B","XUS1B",2)

"BLD",893,"KRN",9.8,"NM","B","XUSRB",3)

"BLD",893,"KRN",9.8,"NM","B","XUSRB4",4)

"BLD",893,"KRN",19,0)
19
"BLD",893,"KRN",19.1,0)
19.1
"BLD",893,"KRN",101,0)
101
"BLD",893,"KRN",409.61,0)
409.61
"BLD",893,"KRN",771,0)
771
"BLD",893,"KRN",870,0)
870
"BLD",893,"KRN",8989.51,0)
8989.51
"BLD",893,"KRN",8989.52,0)
8989.52
"BLD",893,"KRN",8994,0)
8994
"BLD",893,"KRN","B",.4,.4)

"BLD",893,"KRN","B",.401,.401)

"BLD",893,"KRN","B",.402,.402)

"BLD",893,"KRN","B",.403,.403)

"BLD",893,"KRN","B",.5,.5)

"BLD",893,"KRN","B",.84,.84)

"BLD",893,"KRN","B",3.6,3.6)

"BLD",893,"KRN","B",3.8,3.8)

"BLD",893,"KRN","B",9.2,9.2)

"BLD",893,"KRN","B",9.8,9.8)

"BLD",893,"KRN","B",19,19)

"BLD",893,"KRN","B",19.1,19.1)

"BLD",893,"KRN","B",101,101)

"BLD",893,"KRN","B",409.61,409.61)

"BLD",893,"KRN","B",771,771)

"BLD",893,"KRN","B",870,870)

"BLD",893,"KRN","B",8989.51,8989.51)

"BLD",893,"KRN","B",8989.52,8989.52)

"BLD",893,"KRN","B",8994,8994)

"BLD",893,"QUES",0)
^9.62^^
"BLD",893,"REQB",0)
^9.611^3^2
"BLD",893,"REQB",2,0)
XU*8.0*337^2
"BLD",893,"REQB",3,0)
XU*8.0*361^2
"BLD",893,"REQB","B","XU*8.0*337",2)

"BLD",893,"REQB","B","XU*8.0*361",3)

"MBREQ")
0
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3051215^2970507^.5
"PKG",3,22,1,"PAH",1,0)
395^3051219
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^3051219
"PKG",3,22,1,"PAH",1,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"PKG",3,22,1,"PAH",1,1,2,0)
XU*8*395 HealtheVet CCOW follow-up.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","XUESSO1")
0^1^B30134233^B30184414
"RTN","XUESSO1",1,0)
XUESSO1 ;LUKE/SEA Single Sign-on utilities; ;08/08/2005  09:58
"RTN","XUESSO1",2,0)
 ;;8.0;KERNEL;**165,183,196,245,254,269,337,395**;Jul 10, 1995;Build 4
"RTN","XUESSO1",3,0)
 ;
"RTN","XUESSO1",4,0)
GET(INDUZ) ;Gather identifying data from user's home site.
"RTN","XUESSO1",5,0)
 ;Must have Name, Access&Verify codes, SSN (no pseudo), station name&number
"RTN","XUESSO1",6,0)
 N %,NAME,SITE,SSN,PHONE,X,N,VPID
"RTN","XUESSO1",7,0)
 I '$D(DUZ) G BOMB
"RTN","XUESSO1",8,0)
 I '$D(DUZ(2)) G BOMB
"RTN","XUESSO1",9,0)
 I '$D(INDUZ) S INDUZ=DUZ
"RTN","XUESSO1",10,0)
 S N=$G(^VA(200,DUZ,0))
"RTN","XUESSO1",11,0)
 I '$L(N) G BOMB
"RTN","XUESSO1",12,0)
 S %=$P(N,U,3) I $L(%)<1 G BOMB ;No Access Code
"RTN","XUESSO1",13,0)
 S %=$P($G(^VA(200,INDUZ,.1)),U,2) I $L(%)<1 G BOMB ;No Verify Code
"RTN","XUESSO1",14,0)
 S %=$P(N,U,11) I $L(%)>1,(DT>%) G BOMB ;Terminated
"RTN","XUESSO1",15,0)
 S NAME=$P(N,U)
"RTN","XUESSO1",16,0)
 I '$L(NAME) G BOMB
"RTN","XUESSO1",17,0)
 ;
"RTN","XUESSO1",18,0)
 S SITE=$$NS^XUAF4(DUZ(2)) ;Site is name^station#
"RTN","XUESSO1",19,0)
 I $P(SITE,U,2)="" G BOMB ;Need a station number
"RTN","XUESSO1",20,0)
 ;
"RTN","XUESSO1",21,0)
 S SSN=$P($G(^VA(200,DUZ,1)),U,9)
"RTN","XUESSO1",22,0)
 I $$SPECIAL($P(SITE,"^",2)) S SSN=999999999 G G4 ;Manila RO doesn't need SSN
"RTN","XUESSO1",23,0)
 I 'SSN G BOMB
"RTN","XUESSO1",24,0)
 ;Don't allow if the SSN is pseudo
"RTN","XUESSO1",25,0)
 I $E(SSN,10)="P" G BOMB
"RTN","XUESSO1",26,0)
 ;Don't allow if the SSN is not real, (e.g. 00000NNNN)
"RTN","XUESSO1",27,0)
 I $E(SSN,1,5)="00000" G BOMB
"RTN","XUESSO1",28,0)
 ;
"RTN","XUESSO1",29,0)
G4 S PHONE=$$PH
"RTN","XUESSO1",30,0)
 S VPID=$$VPID^XUPS(DUZ) ;(p337)
"RTN","XUESSO1",31,0)
 S X=SSN_U_NAME_U_SITE_U_DUZ
"RTN","XUESSO1",32,0)
 I $L(PHONE)>2&($L(PHONE<20)) S X=X_U_PHONE
"RTN","XUESSO1",33,0)
 S $P(X,U,7)=VPID ;(p337)
"RTN","XUESSO1",34,0)
 ;ssn^name^station name^station number^DUZ^phone^vpid 
"RTN","XUESSO1",35,0)
 Q X
"RTN","XUESSO1",36,0)
 ;
"RTN","XUESSO1",37,0)
 ;
"RTN","XUESSO1",38,0)
BOMB ;Insufficient information to allow visiting
"RTN","XUESSO1",39,0)
 S X="-1^Insufficient User Information On File.  ssn,name,station name,station number,DUZ"
"RTN","XUESSO1",40,0)
 Q X
"RTN","XUESSO1",41,0)
 ;
"RTN","XUESSO1",42,0)
 ;
"RTN","XUESSO1",43,0)
PH() ; Try for a phone number or pager
"RTN","XUESSO1",44,0)
 N %,X
"RTN","XUESSO1",45,0)
 S %=""
"RTN","XUESSO1",46,0)
 S X=$G(^VA(200,DUZ,.13))
"RTN","XUESSO1",47,0)
 I '$L(X) Q ""
"RTN","XUESSO1",48,0)
 ;
"RTN","XUESSO1",49,0)
 S %=$P(X,U,5) I $L(%)>6 Q %  ;Commercial #
"RTN","XUESSO1",50,0)
 S %=$P(X,U,2) I $L(%)>2 Q %  ;Office
"RTN","XUESSO1",51,0)
 S %=$P(X,U,8) I $L(%)>6 Q %  ;Digital Pager
"RTN","XUESSO1",52,0)
 S %=$P(X,U,7) I $L(%)>6 Q %  ;Pager
"RTN","XUESSO1",53,0)
 S %=$P(X,U,3) I $L(%)>2 Q %  ;Phone #3
"RTN","XUESSO1",54,0)
 S %=$P(X,U,4) I $L(%)>2 Q %  ;Phone #4
"RTN","XUESSO1",55,0)
 S %=$P(X,U,1) I $L(%)>2 Q %  ;Home Phone
"RTN","XUESSO1",56,0)
 Q "" ;Couldn't find one.
"RTN","XUESSO1",57,0)
 ;
"RTN","XUESSO1",58,0)
SPECIAL(SN) ;Special Manila RO site
"RTN","XUESSO1",59,0)
 Q 358=SN
"RTN","XUESSO1",60,0)
 ;
"RTN","XUESSO1",61,0)
 ;
"RTN","XUESSO1",62,0)
PUT(DATIN) ;;Setup data from authenticating site GET() at receiving site
"RTN","XUESSO1",63,0)
 ;Return: 0=fail, 1=OK
"RTN","XUESSO1",64,0)
 N NEWDUZ,FDR,TODAY,IEN,DIC,USER,X,%T
"RTN","XUESSO1",65,0)
 N SSN,NAME,SITE,SITENUM,RMTDUZ,PHONE,VPID
"RTN","XUESSO1",66,0)
 S TODAY=$$HTFM^XLFDT($H),DT=$P(TODAY,"."),U="^"
"RTN","XUESSO1",67,0)
 S NEWDUZ=0
"RTN","XUESSO1",68,0)
 K ^TMP("DIERR",$J)
"RTN","XUESSO1",69,0)
 ;
"RTN","XUESSO1",70,0)
 S SSN=$P(DATIN,U,1)
"RTN","XUESSO1",71,0)
 S NAME=$P(DATIN,U,2)
"RTN","XUESSO1",72,0)
 S SITE=$P(DATIN,U,3)
"RTN","XUESSO1",73,0)
 S SITENUM=$P(DATIN,U,4)
"RTN","XUESSO1",74,0)
 S RMTDUZ=$P(DATIN,U,5)
"RTN","XUESSO1",75,0)
 S PHONE=$P(DATIN,U,6)
"RTN","XUESSO1",76,0)
 S VPID=$P(DATIN,U,7) ;(p337)
"RTN","XUESSO1",77,0)
 ;Format checks
"RTN","XUESSO1",78,0)
 I NAME'?1U.E1","1U.E Q 0
"RTN","XUESSO1",79,0)
 I SSN'?9N Q 0
"RTN","XUESSO1",80,0)
 I '$L(SITE)!('$L(SITENUM)) Q 0
"RTN","XUESSO1",81,0)
 I RMTDUZ'>0 Q 0 ;p337
"RTN","XUESSO1",82,0)
 ;
"RTN","XUESSO1",83,0)
 ;Get a LOCK. Block if can't get.
"RTN","XUESSO1",84,0)
 L +^VA(200,"HL7"):10 Q:'$T 0
"RTN","XUESSO1",85,0)
 S %T=$$TALL() L -^VA(200,"HL7")
"RTN","XUESSO1",86,0)
 I %T Q $$SET(NEWDUZ) ;Return 1 if OK.
"RTN","XUESSO1",87,0)
 Q 0
"RTN","XUESSO1",88,0)
 ;
"RTN","XUESSO1",89,0)
TALL() ;Test for existing user or adds a new one
"RTN","XUESSO1",90,0)
 N DUZ,FLAG S FLAG=0,DUZ=0,DUZ(0)=""
"RTN","XUESSO1",91,0)
 ;See if the SSN is in the NPF cross reference
"RTN","XUESSO1",92,0)
 I '$$SPECIAL(SITENUM),$D(^VA(200,"SSN",SSN)) D
"RTN","XUESSO1",93,0)
 .S NEWDUZ=$O(^VA(200,"SSN",SSN,0))
"RTN","XUESSO1",94,0)
 .I '$D(^VA(200,NEWDUZ,8910,"B",SITENUM)) D VISM
"RTN","XUESSO1",95,0)
 .D ADDV ;Add VPID if don't have one (p337)
"RTN","XUESSO1",96,0)
 .D UPDT
"RTN","XUESSO1",97,0)
 .S FLAG=1
"RTN","XUESSO1",98,0)
 .Q
"RTN","XUESSO1",99,0)
 ;See if in the AVISIT cross reference
"RTN","XUESSO1",100,0)
 I 'FLAG,$$SPECIAL(SITENUM) D
"RTN","XUESSO1",101,0)
 . S NEWDUZ=$O(^VA(200,"AVISIT",SITENUM,RMTDUZ,0))
"RTN","XUESSO1",102,0)
 . Q:NEWDUZ'>0
"RTN","XUESSO1",103,0)
 . D UPDT S FLAG=1
"RTN","XUESSO1",104,0)
 . Q
"RTN","XUESSO1",105,0)
 I FLAG Q 1 ;Quit here if we found a match for SSN or AVISIT
"RTN","XUESSO1",106,0)
 ;
"RTN","XUESSO1",107,0)
 ;
"RTN","XUESSO1",108,0)
 ;There is no matching SSN, try for a NAME match in "B"
"RTN","XUESSO1",109,0)
 S FLAG=0,NAME=$$UP^XLFSTR(NAME)
"RTN","XUESSO1",110,0)
 I $D(^VA(200,"B",NAME)) D
"RTN","XUESSO1",111,0)
 .N %,USER,USER2
"RTN","XUESSO1",112,0)
 .S NEWDUZ=$O(^VA(200,"B",NAME,0))
"RTN","XUESSO1",113,0)
 .S USER2=$O(^VA(200,"B",NAME,NEWDUZ)) ;More then one?
"RTN","XUESSO1",114,0)
 .Q:$L(USER2)>0
"RTN","XUESSO1",115,0)
 .;
"RTN","XUESSO1",116,0)
 .S %=$P($G(^VA(200,NEWDUZ,1)),U,9)
"RTN","XUESSO1",117,0)
 .Q:%'=SSN  ;Don't use this name if it has a different SSN
"RTN","XUESSO1",118,0)
 .;
"RTN","XUESSO1",119,0)
 .I '$L($P(^VA(200,NEWDUZ,1),U,9)) D ADDS
"RTN","XUESSO1",120,0)
 .I '$D(^VA(200,NEWDUZ,8910,"B",SITENUM)) D VISM
"RTN","XUESSO1",121,0)
 .D UPDT S FLAG=1
"RTN","XUESSO1",122,0)
 .Q
"RTN","XUESSO1",123,0)
 I FLAG Q 1 ;Quit here if we found an exact match for NAME (w/o SSN)
"RTN","XUESSO1",124,0)
 ;
"RTN","XUESSO1",125,0)
NEWU ;We didn't find anybody under SSN or NAME so we add a new user
"RTN","XUESSO1",126,0)
 ;
"RTN","XUESSO1",127,0)
 S DIC(0)="" ;Turn off ^XUA4A7 (work around)
"RTN","XUESSO1",128,0)
 ;
"RTN","XUESSO1",129,0)
 ;Put the name in the .01 field first.
"RTN","XUESSO1",130,0)
 D ADDU ;ADDU will set NEWDUZ
"RTN","XUESSO1",131,0)
 ;If NEWDUZ is still 0, the User add didn't work so exit.
"RTN","XUESSO1",132,0)
 I NEWDUZ=0 Q 0
"RTN","XUESSO1",133,0)
 ; Add SSN and Alias and VPID
"RTN","XUESSO1",134,0)
 D ADDS,ADDA,ADDV ;(p337)
"RTN","XUESSO1",135,0)
 ; Fill in the  VISITED FROM multiple
"RTN","XUESSO1",136,0)
 D VISM,UPDT ;Do update for all data in UPDT
"RTN","XUESSO1",137,0)
 ;
"RTN","XUESSO1",138,0)
 I $D(^TMP("DIERR",$J)) Q 0  ;W !!,"=========> FileMan Error",!!
"RTN","XUESSO1",139,0)
 ;
"RTN","XUESSO1",140,0)
 I NEWDUZ D BULL Q 1  ;Every thing OK
"RTN","XUESSO1",141,0)
 Q 0  ;Couldn't add user
"RTN","XUESSO1",142,0)
 ;
"RTN","XUESSO1",143,0)
 ;
"RTN","XUESSO1",144,0)
 ;              *****Subroutines*****
"RTN","XUESSO1",145,0)
 ;
"RTN","XUESSO1",146,0)
 ;
"RTN","XUESSO1",147,0)
SET(NEWDUZ) ;Set the user up to go
"RTN","XUESSO1",148,0)
 Q:NEWDUZ'>0 0
"RTN","XUESSO1",149,0)
 N XUSER,XOPT
"RTN","XUESSO1",150,0)
 S DUZ=NEWDUZ,U="^"
"RTN","XUESSO1",151,0)
 D DUZ^XUS1A
"RTN","XUESSO1",152,0)
 Q 1
"RTN","XUESSO1",153,0)
 ;
"RTN","XUESSO1",154,0)
ADDU ;Add a new name to the New Person File
"RTN","XUESSO1",155,0)
 N DD,DO,DIC,DA,X,Y
"RTN","XUESSO1",156,0)
 S DIC="^VA(200,",DIC(0)="L",X=NAME
"RTN","XUESSO1",157,0)
 D FILE^DICN
"RTN","XUESSO1",158,0)
 S:Y>0 NEWDUZ=+Y
"RTN","XUESSO1",159,0)
 Q
"RTN","XUESSO1",160,0)
 ;
"RTN","XUESSO1",161,0)
ADDS ;Add a SSN to the file
"RTN","XUESSO1",162,0)
 Q:$$SPECIAL(SITENUM)
"RTN","XUESSO1",163,0)
 S IEN=NEWDUZ_","
"RTN","XUESSO1",164,0)
 S FDR(200,IEN,9)=SSN
"RTN","XUESSO1",165,0)
 ;Do update for all data in UPDT
"RTN","XUESSO1",166,0)
 Q
"RTN","XUESSO1",167,0)
 ;
"RTN","XUESSO1",168,0)
ADDA ;Add a new Alias to file 200.04
"RTN","XUESSO1",169,0)
 Q:$D(^VA(200,NEWDUZ,3,"B","VISITOR"))
"RTN","XUESSO1",170,0)
 S IEN="+2,"_NEWDUZ_","
"RTN","XUESSO1",171,0)
 S FDR("200.04",IEN,.01)="VISITOR"
"RTN","XUESSO1",172,0)
 ;Do update for all data in UPDT
"RTN","XUESSO1",173,0)
 Q
"RTN","XUESSO1",174,0)
 ;
"RTN","XUESSO1",175,0)
ADDV ;Add a VPID to the file (p337)
"RTN","XUESSO1",176,0)
 Q:'$L(VPID)
"RTN","XUESSO1",177,0)
 I $$IEN^XUPS(VPID)>0 Q  ;VPID in use.
"RTN","XUESSO1",178,0)
 S FDR(200,NEWDUZ_",",9000)=VPID
"RTN","XUESSO1",179,0)
 Q
"RTN","XUESSO1",180,0)
 ;
"RTN","XUESSO1",181,0)
VISM ;Create a multiple for this site number in the VISTED FROM file
"RTN","XUESSO1",182,0)
 ;K IEN,FDR
"RTN","XUESSO1",183,0)
 S IEN="+3,"_NEWDUZ_","
"RTN","XUESSO1",184,0)
 S FDR("200.06",IEN,.01)=SITENUM
"RTN","XUESSO1",185,0)
 ;
"RTN","XUESSO1",186,0)
 S FDR("200.06",IEN,1)=SITE
"RTN","XUESSO1",187,0)
 S FDR("200.06",IEN,2)=RMTDUZ
"RTN","XUESSO1",188,0)
 S FDR("200.06",IEN,3)=TODAY
"RTN","XUESSO1",189,0)
 I $D(PHONE),($L(PHONE)>2) S FDR("200.06",IEN,5)=PHONE
"RTN","XUESSO1",190,0)
 ;Do update for all data in UPDT
"RTN","XUESSO1",191,0)
 Q
"RTN","XUESSO1",192,0)
 ;
"RTN","XUESSO1",193,0)
UPDT ;Update the LAST VISIT field
"RTN","XUESSO1",194,0)
 I $D(FDR(200.06)) S IEN=$O(FDR(200.06,""))
"RTN","XUESSO1",195,0)
 E  S IEN=$O(^VA(200,NEWDUZ,8910,"B",SITENUM,0))_","_NEWDUZ_","
"RTN","XUESSO1",196,0)
 S FDR(200.06,IEN,4)=TODAY
"RTN","XUESSO1",197,0)
 K IEN D UPDATE^DIE("E","FDR","IEN") ;File all the data
"RTN","XUESSO1",198,0)
 Q
"RTN","XUESSO1",199,0)
 ;
"RTN","XUESSO1",200,0)
BULL ;Set up the bulletin and fire it off, Let MM see if bulletin is there
"RTN","XUESSO1",201,0)
 N XMB
"RTN","XUESSO1",202,0)
 S XMB="XUVISIT"
"RTN","XUESSO1",203,0)
 S XMB(1)=$$FMTE^XLFDT(TODAY)
"RTN","XUESSO1",204,0)
 S XMB(2)=NAME
"RTN","XUESSO1",205,0)
 S XMB(3)=NEWDUZ
"RTN","XUESSO1",206,0)
 S XMB(4)=SITE
"RTN","XUESSO1",207,0)
 S XMB(5)=SITENUM
"RTN","XUESSO1",208,0)
 S XMB(6)=RMTDUZ
"RTN","XUESSO1",209,0)
 S XMB(7)=PHONE
"RTN","XUESSO1",210,0)
 D ^XMB
"RTN","XUESSO1",211,0)
 Q
"RTN","XUS1B")
0^2^B4169871^B4207439
"RTN","XUS1B",1,0)
XUS1B ;ISCSF/RWF - Auto sign-on ;07/19/2005  15:25
"RTN","XUS1B",2,0)
 ;;8.0;;**59,337,395**;Feb 14, 1997;Build 4
"RTN","XUS1B",3,0)
 Q
"RTN","XUS1B",4,0)
 ;
"RTN","XUS1B",5,0)
AUTOXUS() ;Do the check for XUS and Auto Sign-on
"RTN","XUS1B",6,0)
 N %,Y
"RTN","XUS1B",7,0)
 I $G(XQXFLG("ASO")) Q 0 ;Already tried once.
"RTN","XUS1B",8,0)
 G AUTO
"RTN","XUS1B",9,0)
 ;
"RTN","XUS1B",10,0)
AUTOXWB() ;Do the check for XWB and Auto Sign-on
"RTN","XUS1B",11,0)
 N %,Y
"RTN","XUS1B",12,0)
 I $G(XQXFLG("ASO")) Q 0 ;Already tried so skip.
"RTN","XUS1B",13,0)
AUTO ;Common code
"RTN","XUS1B",14,0)
 I ($T(^XWBCAGNT)="")!($P(XOPT,U,18)="d") S XQXFLG("ZEBRA")=-1 Q 0 ;Disabled
"RTN","XUS1B",15,0)
 S Y=$$CHKVIP^XUS1B(),%=0 I Y>0 S XQXFLG("ASO")=1,%=$$PREF($P(XOPT,U,18),$P($G(^VA(200,Y,200)),U,18))
"RTN","XUS1B",16,0)
 I Y>0,'% S Y=0 ;No Auto signon
"RTN","XUS1B",17,0)
 Q Y
"RTN","XUS1B",18,0)
 ;
"RTN","XUS1B",19,0)
CHKVIP() ;Check for a Valid current IP
"RTN","XUS1B",20,0)
 N REF,XREF,IEN,R0,ENV,JOB,HNDL
"RTN","XUS1B",21,0)
 S IEN=0,ENV=$$ENV,REF=$G(IO("IP")) I $L(REF) D GETHNDL(.HNDL)
"RTN","XUS1B",22,0)
 I $L(REF) D LKUP("AS1",$P(REF,":")) Q:IEN>0 IEN
"RTN","XUS1B",23,0)
 ;Only use IP address for lookup
"RTN","XUS1B",24,0)
 ;S REF=$G(IO("CLNM")) Q:REF["@" 0
"RTN","XUS1B",25,0)
 ;S REF=$P(REF,":") I REF]"" D LKUP2 Q:IEN IEN I REF["." D LKUP("AS2",$P(REF,".")) Q:IEN IEN
"RTN","XUS1B",26,0)
 ;S REF=$$LOW^XLFSTR(REF) I REF]"" D LKUP2 Q:IEN IEN I REF["." D LKUP("AS2",$P(REF,".")) Q:IEN IEN
"RTN","XUS1B",27,0)
 Q 0
"RTN","XUS1B",28,0)
 ;
"RTN","XUS1B",29,0)
LKUP2 ;See if we can find a workstation name
"RTN","XUS1B",30,0)
 I $D(^XUSEC(0,"AS2",REF))>0 D LKUP("AS2",REF) Q:IEN
"RTN","XUS1B",31,0)
 S XREF=$O(^XUSEC(0,"AS2",REF)) I XREF]"",$E(XREF,1,$L(REF))=REF D LKUP("AS2",XREF) Q:IEN
"RTN","XUS1B",32,0)
 Q
"RTN","XUS1B",33,0)
LKUP(XREF,LK) ;Check one X-ref
"RTN","XUS1B",34,0)
 S IX=0
"RTN","XUS1B",35,0)
 F  S IX=$O(^XUSEC(0,XREF,LK,IX)) Q:'$L(IX)  D CHK Q:IEN>0
"RTN","XUS1B",36,0)
 Q
"RTN","XUS1B",37,0)
CHK ;Could this be a good one.
"RTN","XUS1B",38,0)
 N R0,R1,JOB
"RTN","XUS1B",39,0)
 S R0=$G(^XUSEC(0,IX,0))
"RTN","XUS1B",40,0)
 ;Check handle.
"RTN","XUS1B",41,0)
 S R1=$P(R0,U,13) I R1]"",$D(HNDL(R1)) D  Q:IEN>0
"RTN","XUS1B",42,0)
 . L +^XWB("SESSION",IX_"~"_R1):0 I $T L -^XWB("SESSION",IX_"~"_R1) Q
"RTN","XUS1B",43,0)
 . S IEN=+R0 Q  ;Found a match
"RTN","XUS1B",44,0)
 ;I $P(R0,U,5)'=$P(ENV,U,2) Q  ;Make sure on the same VOL.
"RTN","XUS1B",45,0)
 ;I $P(R0,U,10)'=$P(ENV,U,3) Q  ;Check that on same NODE.
"RTN","XUS1B",46,0)
 ;S JOB=$P(R0,U,3) I $D(^$JOB(JOB)),IX=+$G(^XUTL("XQ",JOB,0)) S IEN=+R0 Q  ;Found a match
"RTN","XUS1B",47,0)
 Q
"RTN","XUS1B",48,0)
 ;
"RTN","XUS1B",49,0)
ENV() N Y D GETENV^%ZOSV Q Y
"RTN","XUS1B",50,0)
PREF(%1,%2) ;
"RTN","XUS1B",51,0)
 Q $S(%2]"":%2,1:%1)
"RTN","XUS1B",52,0)
GETHNDL(RET) ;Get the Handles from the Client
"RTN","XUS1B",53,0)
 N %,%1,X,XXX
"RTN","XUS1B",54,0)
 ;I '$D(XWBUSRNM) Q  ;JLI
"RTN","XUS1B",55,0)
 S %=$$CMD^XWBCAGNT(.XXX,"XWB GET HANDLES") Q:'%
"RTN","XUS1B",56,0)
 Q:'$O(XXX(0))
"RTN","XUS1B",57,0)
 ;build array
"RTN","XUS1B",58,0)
 S RET=0,%1=1 F %=1:1:$L(XXX(%1),"^") S X=$P(XXX(%1),"^",%) S:X]"" RET(X)="",RET=RET+1
"RTN","XUS1B",59,0)
 Q
"RTN","XUSRB")
0^3^B37739188^B37446325
"RTN","XUSRB",1,0)
XUSRB ;ISCSF/RWF - Request Broker ;06/28/2005  16:45
"RTN","XUSRB",2,0)
 ;;8.0;KERNEL;**11,16,28,32,59,70,82,109,115,165,150,180,213,234,238,265,337,395**;Jul 10, 1995;Build 4
"RTN","XUSRB",3,0)
 Q  ;No entry from top
"RTN","XUSRB",4,0)
 ;
"RTN","XUSRB",5,0)
 ;RPC BROKER calls, First parameter is always call-by-reference
"RTN","XUSRB",6,0)
VALIDAV(RET,AVCODE) ;Check a users access
"RTN","XUSRB",7,0)
 ;Return R(0)=DUZ, R(1)=(0=OK, 1,2...=Can't sign-on for some reason)
"RTN","XUSRB",8,0)
 ; R(2)=verify needs changing, R(3)=Message, R(4)=0, R(5)=msg cnt, R(5+n)
"RTN","XUSRB",9,0)
 ; R(R(5)+6)=# div user must select from, R(R(5)+6+n)=div
"RTN","XUSRB",10,0)
 ;
"RTN","XUSRB",11,0)
 N X,XUSER,XUF,XUNOW,XUDEV,XUM,XUMSG,%1,VCCH K DUZ
"RTN","XUSRB",12,0)
 S U="^",RET(0)=0,RET(5)=0,XUF=$G(XUF,0),XUM=0,XUMSG=0,XUDEV=0
"RTN","XUSRB",13,0)
 S DUZ=0,DUZ(0)="",VCCH=0 D NOW
"RTN","XUSRB",14,0)
 S XOPT=$$STATE^XWBSEC("XUS XOPT")
"RTN","XUSRB",15,0)
 S XUMSG=$$INHIBIT() I XUMSG S XUM=1 G VAX ;Logon inhibited
"RTN","XUSRB",16,0)
 ;3 Strikes
"RTN","XUSRB",17,0)
 I $$LKCHECK^XUSTZIP($G(IO("IP"))) S XUMSG=7 G VAX ;IP locked
"RTN","XUSRB",18,0)
 ;Check type of sign-on code
"RTN","XUSRB",19,0)
 I $L(AVCODE) D
"RTN","XUSRB",20,0)
 . I $E(AVCODE,1,2)="~1" S DUZ=$$CHKASH^XUSRB4(AVCODE) Q
"RTN","XUSRB",21,0)
 . I $E(AVCODE,1,2)="~2" S DUZ=$$CHKCCOW^XUSRB4(AVCODE) Q
"RTN","XUSRB",22,0)
 . S DUZ=$$CHECKAV^XUS($$DECRYP^XUSRB1(AVCODE))
"RTN","XUSRB",23,0)
 . Q
"RTN","XUSRB",24,0)
 I DUZ'>0,$$FAIL^XUS3 D  G VAX
"RTN","XUSRB",25,0)
 . S XUM=1,XUMSG=7,X=$$RA^XUSTZ H 5 ;3 Strikes
"RTN","XUSRB",26,0)
 S XUMSG=$$UVALID^XUS() G:XUMSG VAX ;Check User
"RTN","XUSRB",27,0)
 S VCCH=$$VCVALID() ;Check VC
"RTN","XUSRB",28,0)
 I DUZ>0 S XUMSG=$$POST(1)
"RTN","XUSRB",29,0)
 I XUMSG>0 S DUZ=0,VCCH=0 ;If can't sign-on, don't tell need to change VC
"RTN","XUSRB",30,0)
 I 'XUMSG,VCCH S XUMSG=12 D SET^XWBSEC("XUS DUZ",DUZ) ;Need to change VC
"RTN","XUSRB",31,0)
VAX S:XUMSG>0 DUZ=0 ;Can't sign-on, Clear DUZ.
"RTN","XUSRB",32,0)
 D:DUZ>0 POST2
"RTN","XUSRB",33,0)
 S RET(0)=DUZ,RET(1)=XUM,RET(2)=VCCH,RET(3)=$S(XUMSG:$$TXT^XUS3(XUMSG),1:""),RET(4)=0
"RTN","XUSRB",34,0)
 K DUZ("CCOW")
"RTN","XUSRB",35,0)
 Q
"RTN","XUSRB",36,0)
 ;
"RTN","XUSRB",37,0)
NOW S U="^",XUNOW=$$NOW^XLFDT(),DT=$P(XUNOW,".")
"RTN","XUSRB",38,0)
 Q
"RTN","XUSRB",39,0)
 ;
"RTN","XUSRB",40,0)
INTRO(RET) ;Return INTRO TEXT.
"RTN","XUSRB",41,0)
 D INTRO^XUS1A("RET")
"RTN","XUSRB",42,0)
 Q
"RTN","XUSRB",43,0)
 ;
"RTN","XUSRB",44,0)
VCVALID() ;Return 1 if the Verify code needs changing.
"RTN","XUSRB",45,0)
 Q:'$G(DUZ) 1
"RTN","XUSRB",46,0)
 Q:$P($G(^VA(200,DUZ,.1)),U,2)="" 1 ;VC is empty
"RTN","XUSRB",47,0)
 Q:$P(^VA(200,DUZ,0),U,8)=1 0 ;VC never expires
"RTN","XUSRB",48,0)
 N XUSER D USER^XUS(DUZ)
"RTN","XUSRB",49,0)
 Q $$VCHG^XUS1
"RTN","XUSRB",50,0)
 ;
"RTN","XUSRB",51,0)
CVC(RET,XU1) ;change VC, Return 0 = success
"RTN","XUSRB",52,0)
 N XU2,XU3,XU4 S DUZ=$G(DUZ),RET(0)=99,XU4=$$STATE^XWBSEC("XUS DUZ") S:(DUZ=0)&(XU4>0) DUZ=XU4 Q:DUZ'>0
"RTN","XUSRB",53,0)
 S U="^",XU2=$P(XU1,U,2),XU3=$P(XU1,U,3),XU1=$P(XU1,U)
"RTN","XUSRB",54,0)
 S XU1=$$DECRYP^XUSRB1(XU1),XU2=$$DECRYP^XUSRB1(XU2),XU3=$$DECRYP^XUSRB1(XU3)
"RTN","XUSRB",55,0)
 S XU3=$$BRCVC^XUS2(XU1,XU2),RET(0)=+XU3,RET(1)=$P(XU3,U,2,9)
"RTN","XUSRB",56,0)
 I XU3>0 S DUZ=0 ;Clean-up if not changed.
"RTN","XUSRB",57,0)
 I 'XU3,XU4 D KILL^XWBSEC("XUS DUZ"),POST2
"RTN","XUSRB",58,0)
 Q
"RTN","XUSRB",59,0)
 ;
"RTN","XUSRB",60,0)
SHOWPOST() ;EF. Check if should send the POST SIGN-ON msg.
"RTN","XUSRB",61,0)
 Q +$P($G(^XTV(8989.3,1,"XWB")),"^",2)
"RTN","XUSRB",62,0)
 ;
"RTN","XUSRB",63,0)
POST(CVC) ;Finish setup partition, I CVC don't log yet
"RTN","XUSRB",64,0)
 N X,XUM,XUDIV S:$D(IO)[0 IO=$I S IO(0)=IO
"RTN","XUSRB",65,0)
 K ^UTILITY($J),^TMP($J)
"RTN","XUSRB",66,0)
 I '$D(XUSER(0)),DUZ D USER^XUS(DUZ)
"RTN","XUSRB",67,0)
 S XUM=$$USER^XUS1A Q:XUM>0 XUM ;User can't sign on for some reason.
"RTN","XUSRB",68,0)
 S RET(5)=0 ;The next line sends the post sign-on msg
"RTN","XUSRB",69,0)
 F %=1:1 Q:'$D(XUTEXT(%))  S RET(5+%)=$E(XUTEXT(%),2,256),RET(5)=%
"RTN","XUSRB",70,0)
 I '$$SHOWPOST S RET(5)=0 ;This line stops the sending/display of the msg.
"RTN","XUSRB",71,0)
 D:'$G(CVC) POST2
"RTN","XUSRB",72,0)
 Q 0
"RTN","XUSRB",73,0)
 ;
"RTN","XUSRB",74,0)
POST2 D:'$D(XUNOW) NOW
"RTN","XUSRB",75,0)
 D DUZ^XUS1A,SAVE^XUS1,LOG^XUS1,ABT^XQ12
"RTN","XUSRB",76,0)
 D KILL^XWBSEC("XUS XOPT"),CLRFAC^XUS3($G(IO("IP"))) ;p265
"RTN","XUSRB",77,0)
 I $T(SETTIME^XWBTCPC)]"" D SETTIME^XWBTCPC() ;Clear sign-on time-out
"RTN","XUSRB",78,0)
 K:$G(XWBVER)<1.106 XQY,XQY0 ;Delete the sign-on context.
"RTN","XUSRB",79,0)
 K XUTEXT,XOPT,XUEON,XUEOFF,XUTT,XUDEV,XUSER
"RTN","XUSRB",80,0)
 Q
"RTN","XUSRB",81,0)
 ;
"RTN","XUSRB",82,0)
INHIBIT() ;Is Logon to this system Inhibited?
"RTN","XUSRB",83,0)
 I $$INHIB1() Q 1
"RTN","XUSRB",84,0)
 I $$INHIB2() Q 1
"RTN","XUSRB",85,0)
 Q 0
"RTN","XUSRB",86,0)
 ;
"RTN","XUSRB",87,0)
INHIB1() ;The LOGON check
"RTN","XUSRB",88,0)
 I $G(^%ZIS(14.5,"LOGON",XQVOL)) Q 1
"RTN","XUSRB",89,0)
 Q 0
"RTN","XUSRB",90,0)
 ;
"RTN","XUSRB",91,0)
INHIB2() ;The Max User Check
"RTN","XUSRB",92,0)
 I $D(^%ZOSF("ACTJ")) X ^("ACTJ") I $P(XUVOL,U,3),($P(XUVOL,U,3)'>Y) Q 2
"RTN","XUSRB",93,0)
 Q 0
"RTN","XUSRB",94,0)
 ;
"RTN","XUSRB",95,0)
LOGOUT ;Finish logout of user.
"RTN","XUSRB",96,0)
 N XU1
"RTN","XUSRB",97,0)
 D CLEARALL^XWBDRPC(.XU1)
"RTN","XUSRB",98,0)
 ;Remove CCOW sign-on data
"RTN","XUSRB",99,0)
 S HDL=$G(^XUTL("XQ",$J,"HDL")) I $L(HDL) D
"RTN","XUSRB",100,0)
 . K ^XTMP(HDL,"JOB",$J)
"RTN","XUSRB",101,0)
 . I $O(^XTMP(HDL,"JOB",0))="" K ^XTMP(HDL)
"RTN","XUSRB",102,0)
 ;
"RTN","XUSRB",103,0)
 D BYE^XUSCLEAN,XUTL^XUSCLEAN ;Mark the sign-on log, File cleanup.
"RTN","XUSRB",104,0)
 Q
"RTN","XUSRB",105,0)
 ;D1,D2 are place holders for now
"RTN","XUSRB",106,0)
SETUP(RET,XWBUSRNM,D1,D2) ;sets up environment for GUI signon
"RTN","XUSRB",107,0)
 K DUZ
"RTN","XUSRB",108,0)
 S XWBUSRNM=$G(XWBUSRNM)
"RTN","XUSRB",109,0)
 I $L($G(XWBTIP)) S IO("IP")=XWBTIP
"RTN","XUSRB",110,0)
 S IO("CLNM")=$$LOW^XLFSTR($G(XWBCLMAN)) D ZIO^%ZIS4
"RTN","XUSRB",111,0)
 ;Setup needed variables
"RTN","XUSRB",112,0)
 D SET1^XUS(0),SET^XWBSEC("XUS XOPT",XOPT) ;p265
"RTN","XUSRB",113,0)
 ;I '$D(IO("HOME")) S %ZIS="0H",IOP="NULL" D ^%ZIS ;Setup NULL as the home device
"RTN","XUSRB",114,0)
 D SAVE^XUS1 ;save the home device
"RTN","XUSRB",115,0)
 ;0=server name, 1=volume, 2=uci, 3=device, 4=# attempts, 5=skip signon-screen,6=Domain Name, 7=Production (0=no, 1=Yes)
"RTN","XUSRB",116,0)
 S RET(0)=$P(XUENV,U,3),RET(1)=$P(XUVOL,U),RET(2)=XUCI
"RTN","XUSRB",117,0)
 S RET(3)=$I,RET(4)=$P(XOPT,U,2),RET(5)=0
"RTN","XUSRB",118,0)
 S RET(6)=$G(^XMB("NETNAME")) ;DBIA #1131
"RTN","XUSRB",119,0)
 S RET(7)=$$PROD^XUPROD ;Tell if production.
"RTN","XUSRB",120,0)
 I $$INHIBIT() Q
"RTN","XUSRB",121,0)
 ; Code for DBA Capri Program
"RTN","XUSRB",122,0)
 I +XWBUSRNM=-31,XWBUSRNM["DVBA_" N XVAL D  I XVAL S RET(5)=1 Q
"RTN","XUSRB",123,0)
 . S XVAL=$$PUT^XUESSO1($P(XWBUSRNM,U,3,99)) Q:'XVAL  ; Sign in as Visitor
"RTN","XUSRB",124,0)
 . I $$FIND1^DIC(200.03,","_DUZ_",","X","DVBA CAPRI GUI")'>0 D
"RTN","XUSRB",125,0)
 . . ; Have to give the user a delegated option
"RTN","XUSRB",126,0)
 . . N YARR S YARR(200.19,"+1,"_DUZ_",",.01)="DVBA CAPRI GUI"
"RTN","XUSRB",127,0)
 . . D UPDATE^DIE("E","YARR")
"RTN","XUSRB",128,0)
 . . ; And now he can give himself the context option
"RTN","XUSRB",129,0)
 . . N XARR S XARR(200.03,"+1,"_DUZ_",",.01)="DVBA CAPRI GUI"
"RTN","XUSRB",130,0)
 . . D UPDATE^DIE("E","XARR") ; Give context option as a secondary menu item
"RTN","XUSRB",131,0)
 . . ; But now we have to remove the delegated option
"RTN","XUSRB",132,0)
 . . S OPT=$$FIND1^DIC(200.19,","_DUZ_",","X","DVBA CAPRI GUI")
"RTN","XUSRB",133,0)
 . . K XARR S XARR(200.19,(OPT_","_DUZ_","),.01)="@"
"RTN","XUSRB",134,0)
 . . D FILE^DIE("E","XARR")
"RTN","XUSRB",135,0)
 . . Q
"RTN","XUSRB",136,0)
 . Q
"RTN","XUSRB",137,0)
 ; End of Code for DBA Capri Program
"RTN","XUSRB",138,0)
 ;Auto sign-on check only for Broker v1.1
"RTN","XUSRB",139,0)
 I $G(XWBVER)<1.1 S XQXFLG("ZEBRA")=-1 ;Disable for v1.0
"RTN","XUSRB",140,0)
 I $L(IO("CLNM")) S DUZ=$$AUTOXWB^XUS1B() ;Only check when 1.1 CL.
"RTN","XUSRB",141,0)
 I DUZ>0 D NOW S XUMSG=$$POST(0) I XUMSG>0 S DUZ=0
"RTN","XUSRB",142,0)
 S:DUZ>0 RET(5)=1
"RTN","XUSRB",143,0)
 Q
"RTN","XUSRB",144,0)
 ;
"RTN","XUSRB",145,0)
OWNSKEY(RET,LIST,IEN) ;Does user have Key
"RTN","XUSRB",146,0)
 N I,K S I=""
"RTN","XUSRB",147,0)
 I $G(IEN)'>0 S IEN=$G(DUZ)
"RTN","XUSRB",148,0)
 I $G(IEN)'>0 S RET(0)=0 Q
"RTN","XUSRB",149,0)
 I $O(LIST(""))="" S RET(0)=$$KCHK(LIST,IEN) Q
"RTN","XUSRB",150,0)
 F  S I=$O(LIST(I)) Q:I=""  S RET(I)=$$KCHK(LIST(I),IEN)
"RTN","XUSRB",151,0)
 Q
"RTN","XUSRB",152,0)
 ;
"RTN","XUSRB",153,0)
KCHK(%,IEN) ;Key Check
"RTN","XUSRB",154,0)
 S:$G(IEN)'>0 IEN=$G(DUZ) Q $S($G(IEN)>0:$D(^XUSEC(%,IEN)),1:0)
"RTN","XUSRB",155,0)
 ;
"RTN","XUSRB",156,0)
ALLKEYS(RET,IEN,FLG) ;Return ALL or most KEYS that a user has.
"RTN","XUSRB",157,0)
 N I,J,K,L K ^TMP("XU",$J)
"RTN","XUSRB",158,0)
 S RET=$NA(^TMP("XU",$J))
"RTN","XUSRB",159,0)
 S:'$D(IEN) IEN=DUZ I IEN'>0 S @RET@(0)=-1 Q
"RTN","XUSRB",160,0)
 S I=0,L=0
"RTN","XUSRB",161,0)
 F  S I=$O(^VA(200,IEN,51,I)) Q:I'>0  S K=$G(^DIC(19.1,I,0)) D
"RTN","XUSRB",162,0)
 . Q:'$P(K,U,5)  ;Check 'Send to J2EE' field.
"RTN","XUSRB",163,0)
 . S L=L+1,@RET@(L,0)=$P(K,U,1)
"RTN","XUSRB",164,0)
 . Q
"RTN","XUSRB",165,0)
 Q
"RTN","XUSRB",166,0)
 ;
"RTN","XUSRB",167,0)
AVHELP(RET) ; send access/verify code instructions.
"RTN","XUSRB",168,0)
 S RET(0)=$$AVHLPTXT^XUS2()
"RTN","XUSRB",169,0)
 Q
"RTN","XUSRB",170,0)
 ;
"RTN","XUSRB",171,0)
OPTACCES(RET,USER,OPTIONS,MODE) ;Checks or sets user's access for passed in options
"RTN","XUSRB",172,0)
 S MODE="CHECK" ;only CHECK mode supported for now
"RTN","XUSRB",173,0)
 N I S I=""
"RTN","XUSRB",174,0)
 I $G(USER)'>0 S RET(0)=0 Q
"RTN","XUSRB",175,0)
 F  S I=$O(OPTIONS(I)) Q:I=""  S RET(I)=$$CHK^XQCS(USER,OPTIONS(I))=1
"RTN","XUSRB",176,0)
 Q
"RTN","XUSRB",177,0)
 ;
"RTN","XUSRB",178,0)
CHECKAV(AVC) ;SR. EF. to check an A/V code, Separate w/ ";", return IEN or 0
"RTN","XUSRB",179,0)
 N XUF,XUSER S XUF=0,U="^"
"RTN","XUSRB",180,0)
 Q $$CHECKAV^XUS(AVC)
"RTN","XUSRB4")
0^4^B10928715^B8500621
"RTN","XUSRB4",1,0)
XUSRB4 ;ISF/RWF - Build a temporary sign-on token ;08/08/2005  09:44
"RTN","XUSRB4",2,0)
 ;;8.0;KERNEL;**150,337,395**;Jul 10, 1995;Build 4
"RTN","XUSRB4",3,0)
 Q
"RTN","XUSRB4",4,0)
 ;
"RTN","XUSRB4",5,0)
ASH(RET) ;rpc. Auto Signon Handle
"RTN","XUSRB4",6,0)
 N HDL
"RTN","XUSRB4",7,0)
 S HDL=$$HANDLE("XWBAS",1),RET="~1"_HDL
"RTN","XUSRB4",8,0)
 S ^XTMP(HDL,"STATUS")="0^New",^("CNT")=0
"RTN","XUSRB4",9,0)
 ;Now place user info in it.
"RTN","XUSRB4",10,0)
 S ^XTMP(HDL,"D",0)=$$TOK(HDL)
"RTN","XUSRB4",11,0)
 Q
"RTN","XUSRB4",12,0)
 ;
"RTN","XUSRB4",13,0)
CCOW(RET) ;rpc. CCOW Auto Signon Handle
"RTN","XUSRB4",14,0)
 N HDL,HDL2
"RTN","XUSRB4",15,0)
 S RET(0)="NO PROXY USER",RET(1)="ERROR"
"RTN","XUSRB4",16,0)
 I $$USERTYPE^XUSAP(DUZ,"APPLICATION PROXY") Q  ;No Proxy
"RTN","XUSRB4",17,0)
 I $$USERTYPE^XUSAP(DUZ,"CONNECTOR PROXY") Q  ;No Proxy
"RTN","XUSRB4",18,0)
 S X=$$ACTIVE^XUSER(DUZ) I 'X S RET(0)=X Q  ;User must be active
"RTN","XUSRB4",19,0)
 S HDL=$$HANDLE("XWBCCW",1)
"RTN","XUSRB4",20,0)
 S ^XTMP(HDL,"STATUS")="0^New",^("CNT")=0
"RTN","XUSRB4",21,0)
 S RET(0)="~2"_$$LOW^XLFSTR(HDL),RET(1)=$G(^XMB("NETNAME"))
"RTN","XUSRB4",22,0)
 ;Now place user info in it.
"RTN","XUSRB4",23,0)
 S ^XTMP(HDL,"D",0)=$$TOK(HDL)
"RTN","XUSRB4",24,0)
 S ^XUTL("XQ",$J,"HDL")=HDL ;Save handle with job
"RTN","XUSRB4",25,0)
 Q
"RTN","XUSRB4",26,0)
 ;
"RTN","XUSRB4",27,0)
HANDLE(NS,LT) ;Return a unique handle into ^XTMP (ef. sup)
"RTN","XUSRB4",28,0)
 ;NS is the namespace, LT is the Handle Lifetime in days
"RTN","XUSRB4",29,0)
 N %H,A,J,HL
"RTN","XUSRB4",30,0)
 I $G(NS)="" Q "" ;Return null if no namespace
"RTN","XUSRB4",31,0)
 S LT=$G(LT,1) S:LT>7 LT=7 ;Default to 1
"RTN","XUSRB4",32,0)
 S %H=$H,J=NS_($J#2048)_"-"_(%H#7*86400+$P(%H,",",2))_"_",A=-1
"RTN","XUSRB4",33,0)
HAN2 S A=A+1,HL=J_A L +^XTMP(HL):0 I '$T G HAN2
"RTN","XUSRB4",34,0)
 I $D(^XTMP(HL)) L -^XTMP(HL) G HAN2
"RTN","XUSRB4",35,0)
 S ^XTMP(HL,0)=$$HTFM^XLFDT(%H+LT)_"^"_$$DT^XLFDT()
"RTN","XUSRB4",36,0)
 L -^XTMP(HL)
"RTN","XUSRB4",37,0)
 Q HL
"RTN","XUSRB4",38,0)
 ;
"RTN","XUSRB4",39,0)
TOK(H) ;Return a Token
"RTN","XUSRB4",40,0)
 ;H is handle into XTMP
"RTN","XUSRB4",41,0)
 N J,T,R
"RTN","XUSRB4",42,0)
 S T=$$H3^%ZTM($H)
"RTN","XUSRB4",43,0)
 S R=$J_"|"_T_"|"_$G(DUZ)_"|"_H
"RTN","XUSRB4",44,0)
 S ^XTMP(H,"D2")=$G(DUZ(2))
"RTN","XUSRB4",45,0)
 S ^XTMP(H,"D3")=$G(IO("IP"))
"RTN","XUSRB4",46,0)
 S ^XTMP(H,"JOB",$J)=$G(IO("IP"))
"RTN","XUSRB4",47,0)
 ;need to save token
"RTN","XUSRB4",48,0)
 Q "|"_$$ENCRYP^XUSRB1(R)_"|"
"RTN","XUSRB4",49,0)
 ;
"RTN","XUSRB4",50,0)
CHKASH(HL) ;rpc. Check a Auto Signon Handle
"RTN","XUSRB4",51,0)
 N HDL,RET S HDL=$E(HL,3,999)
"RTN","XUSRB4",52,0)
 S RET=$$CHECK(HDL)
"RTN","XUSRB4",53,0)
 K ^XTMP(HDL) ;Token only good for one try.
"RTN","XUSRB4",54,0)
 Q RET
"RTN","XUSRB4",55,0)
 ;
"RTN","XUSRB4",56,0)
CHKCCOW(HL) ;rpc. Check a CCOW Auto Signon Handle
"RTN","XUSRB4",57,0)
 N HDL,RET,T
"RTN","XUSRB4",58,0)
 S HDL=$$UP^XLFSTR($E(HL,3,999)),T=$P($G(^XTV(8989.3,1,30),5400),U)
"RTN","XUSRB4",59,0)
 S RET=$$CHECK(HDL,T)
"RTN","XUSRB4",60,0)
 I RET>0 D
"RTN","XUSRB4",61,0)
 . ;This CCOW Token good for more that one try.
"RTN","XUSRB4",62,0)
 . S ^XTMP(HDL,"JOB",$J)=$G(IO("IP"))
"RTN","XUSRB4",63,0)
 . S ^XTMP(HDL,"STATUS")=(^XTMP(HDL,"STATUS")+1)_"^Active"
"RTN","XUSRB4",64,0)
 . S ^XUTL("XQ",$J,"HDL")=HDL ;Save handle with job
"RTN","XUSRB4",65,0)
 . S DUZ("CCOW")=1 ;Flag a CCOW sign-on.
"RTN","XUSRB4",66,0)
 Q RET
"RTN","XUSRB4",67,0)
 ;
"RTN","XUSRB4",68,0)
CHECK(HL,TOUT) ;Check a Token
"RTN","XUSRB4",69,0)
 N %,J,D,L,M,S
"RTN","XUSRB4",70,0)
 S S=$G(^XTMP(HL,0)) I '$L(S) Q "0^Bad Handle"
"RTN","XUSRB4",71,0)
 S S=$G(^XTMP(HL,"D",0)) I '$L(S) Q "0^Bad Handle" ;Now have real token
"RTN","XUSRB4",72,0)
 I $E(S)'="|" Q "0^Bad Token"
"RTN","XUSRB4",73,0)
 S S=$$DECRYP^XUSRB1($E(S,2,$L(S)-1)) I S="" Q "0^Bad Token"
"RTN","XUSRB4",74,0)
 S J=$P(S,"|"),T=$P(S,"|",2),D=$P(S,"|",3),M=$P(S,"|",4)
"RTN","XUSRB4",75,0)
 ;Check token time
"RTN","XUSRB4",76,0)
 S %=$$H3^%ZTM($H),TOUT=$G(TOUT,20)
"RTN","XUSRB4",77,0)
 I T+TOUT<% Q "0^Token Expired" ;Token good for TOUT or 20 seconds
"RTN","XUSRB4",78,0)
 ;Check job
"RTN","XUSRB4",79,0)
 ;Check that token has handle
"RTN","XUSRB4",80,0)
 I M'=HL Q "0^Bad Token"
"RTN","XUSRB4",81,0)
 ;Check User
"RTN","XUSRB4",82,0)
 I $G(^VA(200,D,0))="" Q "0^Bad User"
"RTN","XUSRB4",83,0)
 ;Do IP check
"RTN","XUSRB4",84,0)
 I $L($G(^XTMP(HL,"D3"))),^XTMP(HL,"D3")'=$G(IO("IP")) Q "0^Different IP"
"RTN","XUSRB4",85,0)
 I $D(^XTMP(HL,"D2")),D>0 S DUZ(2)=^XTMP(HL,"D2")
"RTN","XUSRB4",86,0)
 D USER^XUS(D)
"RTN","XUSRB4",87,0)
 Q D
"RTN","XUSRB4",88,0)
 ;
"RTN","XUSRB4",89,0)
 ;
"RTN","XUSRB4",90,0)
CCOWPC(RET) ;Return ap
"RTN","XUSRB4",91,0)
 N I,XU4
"RTN","XUSRB4",92,0)
 S RET(0)="" I '$$BROKER^XWBLIB Q
"RTN","XUSRB4",93,0)
 D GETLST^XPAR(.XU4,"SYS","XUS CCOW VAULT PARAM","Q")
"RTN","XUSRB4",94,0)
 F I=0,1 S RET(I)=$P($G(XU4(I+1)),"^",2,99)
"RTN","XUSRB4",95,0)
 Q
"VER")
8.0^22.0
"BLD",893,6)
^330
**END**
**END**
