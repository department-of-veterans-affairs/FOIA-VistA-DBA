KIDS Distribution saved on Aug 24, 1999@11:49:58
MailMan patch XM*7.1*50 - 8/24/99
**KIDS**:XM*7.1*50^

**INSTALL NAME**
XM*7.1*50
"BLD",23,0)
XM*7.1*50^MAILMAN^0^2990824^y
"BLD",23,1,0)
^^1001^1001^2990824^^^^
"BLD",23,1,1,0)
Patch XM*7.1*50.  The BIG patch!  It is important that you read this patch
"BLD",23,1,2,0)
description and follow the install instructions.
"BLD",23,1,3,0)

"BLD",23,1,4,0)
Test Sites:  FORUM.VA.GOV; GATEWAY.FORUM.VA.GOV; Indianapolis, IN;
"BLD",23,1,5,0)
             Montana HCS, MT; San Francisco, CA; SAIC Corp.;
"BLD",23,1,6,0)
             German Heart Institute, Berlin, Germany; San Francisco CIOFO
"BLD",23,1,7,0)

"BLD",23,1,8,0)
The changes included in this patch are so extensive, that several of the
"BLD",23,1,9,0)
MailMan manuals have been rewritten.  The full patch description and the
"BLD",23,1,10,0)
new manuals are in PDF documents on the infrastructure web site at:
"BLD",23,1,11,0)
http://www.vista.med.va.gov/
"BLD",23,1,12,0)
softserv/infrastr.uct/notebook/active/xm_patch_50_notebook.htm
"BLD",23,1,13,0)
- XM*7.1*50 Patch Description
"BLD",23,1,14,0)
- MailMan V.7.1 & XM*7.1*50 Release Notes
"BLD",23,1,15,0)
- MailMan V.7.1 & XM*7.1*50 Getting Started
"BLD",23,1,16,0)
- MailMan V.7.1 & XM*7.1*50 User Manual
"BLD",23,1,17,0)
- MailMan V.7.1 & XM*7.1*50 Programmer Manual
"BLD",23,1,18,0)
- MailMan V.7.1 & XM*7.1*50 Technical Manual
"BLD",23,1,19,0)

"BLD",23,1,20,0)
Highlights of the patch:
"BLD",23,1,21,0)
- Addresses 54 distinct NOIS and 40 distinct E3R.
"BLD",23,1,22,0)
- For those sites requesting it, performs, along with follow-on patch
"BLD",23,1,23,0)
  XM*7.1*51, automatic domain name change from .VA.GOV to .MED.VA.GOV, as
"BLD",23,1,24,0)
  well as domain rename. This patch adds the new domain names as synonyms to
"BLD",23,1,25,0)
  the current domain names.  XM*7.1*51 will actually change the domain names.
"BLD",23,1,26,0)
  (XM*7.1*51 will be released after all sites have installed XM*7.1*50.)
"BLD",23,1,27,0)
- Adds many new APIs.
"BLD",23,1,28,0)
- Replaces the old user help frames with an entire new set of help frames.
"BLD",23,1,29,0)
  (The IRM help frames have not been updated.)
"BLD",23,1,30,0)
- Makes many changes to the MailMan DDs.
"BLD",23,1,31,0)
- Renames file 3.7 from MAIL BOX to MAILBOX.
"BLD",23,1,32,0)
- Renames file 4.3 from KERNEL SITE PARAMETERS to MAILMAN SITE PARAMETERS.
"BLD",23,1,33,0)
- Improves global integrity checker.
"BLD",23,1,34,0)
- Improves message search.
"BLD",23,1,35,0)
- Insists that users must have a mailbox and an access code in order to
"BLD",23,1,36,0)
  receive messages.  This is to ensure that messages do not accumulate in
"BLD",23,1,37,0)
  inactive mailboxes, never to be deleted.  It is very important that any
"BLD",23,1,38,0)
  ficticious user be properly set up so that mail deliveries to these users
"BLD",23,1,39,0)
  are not stopped.
"BLD",23,1,40,0)
- Implements message filtering.
"BLD",23,1,41,0)
- Improves local message delivery system.
"BLD",23,1,42,0)
- Adds 'full screen' user interface for managing and reading messages.
"BLD",23,1,43,0)
- Rewrites 'classic' user interface to improve maintainability.
"BLD",23,1,44,0)
- Most ^XMA* routines have been superseded by other routines.
"BLD",23,1,45,0)
- (new) ^XMJ* routines comprise the user interface.
"BLD",23,1,46,0)
- (new) ^XMK* routines perform message posting.
"BLD",23,1,47,0)
- (new) ^XMT* routines perform message delivery.
"BLD",23,1,48,0)
- (new) ^XMX* routines comprise the APIs.
"BLD",23,1,49,0)
- (new) ^XMV* routines comprise user identity.
"BLD",23,1,50,0)
- ^XMR* has been rewritten.
"BLD",23,1,51,0)
- Improves the remote message xref, ^XMBX(3.9,"AI", by enabling it to handle
"BLD",23,1,52,0)
longer message IDs.  Specifically, the xref has changed
"BLD",23,1,53,0)
from: ^XMBX(3.9,"AI",site@msgid,xmz)=fm date/time
"BLD",23,1,54,0)
to:   ^XMBX(3.9,"AI",site,msgid,xmz)=fm date 
"BLD",23,1,55,0)
The post-init will reconfigure the xref.  (This could take anywhere from 1/2
"BLD",23,1,56,0)
hour to several hours, depending on how large the global is.)  Here's a tip:
"BLD",23,1,57,0)
You can cut down the time that this will take by running option
"BLD",23,1,58,0)
XMMGR-PURGE-AI-XREF (AI x-Ref Purge of Received Network Messages)
"BLD",23,1,59,0)
prior to installing this patch.  This will reduce the number of xrefs in the
"BLD",23,1,60,0)
AI xref global.
"BLD",23,1,61,0)
- Enables message number recycling.  To do this,
"BLD",23,1,62,0)
--A new field (17.1, MAX DIGITS FOR MESSAGE NUMBER) has been added to file
"BLD",23,1,63,0)
4.3, to let each site decide how large the numbers may get before they
"BLD",23,1,64,0)
recycle and start again (from 100000).  The post-init will set it to
"BLD",23,1,65,0)
the maximum length of your site's existing message numbers.  (If it's less
"BLD",23,1,66,0)
than 7, it will be set to 7.  If it's greater than 14, it will be set to 14.)
"BLD",23,1,67,0)
You may change it afterward.
"BLD",23,1,68,0)
--A new field (31, LOCAL CREATE DATE) has been added to file 3.9.  The post-
"BLD",23,1,69,0)
init will go through the file 3.9, populate the new field with the date
"BLD",23,1,70,0)
the message was sent, and create the new "C" xref.  (This will take about
"BLD",23,1,71,0)
1 hour per 200,000 messages.)  Here's a tip:
"BLD",23,1,72,0)
You can cut down the time that this will take by running option
"BLD",23,1,73,0)
XMPURGE-BY-DATE (Purge Messages by Origination Date)
"BLD",23,1,74,0)
and XMAUTOPURGE (Automatic Purge of MailMan Messages)
"BLD",23,1,75,0)
prior to installing this patch.  This will reduce the number of messages
"BLD",23,1,76,0)
in file 3.9.
"BLD",23,1,77,0)
--The message purge processes have been changed to operate off LOCAL
"BLD",23,1,78,0)
CREATE DATE.  The date purge routine is now much faster, since it has an
"BLD",23,1,79,0)
appropriate xref to work with.  The weekday unreferenced messages purge can
"BLD",23,1,80,0)
focus better and thus be more efficient.
"BLD",23,1,81,0)
--Other fields have changed their focus from message number to the LOCAL
"BLD",23,1,82,0)
CREATE DATE:
"BLD",23,1,83,0)
File 3.7, MailBox:
"BLD",23,1,84,0)
3.7,1.2   MESSAGE @ REINSTATEMENT becomes DATE @ REINSTATEMENT (The post-
"BLD",23,1,85,0)
init will change any existing message numbers in this field to their equiv-
"BLD",23,1,86,0)
alent dates.
"BLD",23,1,87,0)
File 4.3, MailMan Site Parameters:
"BLD",23,1,88,0)
4.3,4.301 NO-PURGE MESSAGES BUFFER becomes NO-PURGE DAYS BUFFER (The post-
"BLD",23,1,89,0)
init will set this field to null, which defaults to 2 days.  You may change
"BLD",23,1,90,0)
it afterward.
"BLD",23,1,91,0)
4.302,3   FIRST MESSAGE TO PROCESS  becomes START PURGE DATE
"BLD",23,1,92,0)
4.302,4   LAST MESSAGE TO PROCESS   becomes STOP PURGE DATE
"BLD",23,1,93,0)
4.302,8   LAST MESSAGE PROCESSED    becomes LAST DATE PROCESSED
"BLD",23,1,94,0)
4.3,4.304 WEEKDAY MESSAGES TO PURGE becomes WEEKDAY DAYS TO PURGE (Any value
"BLD",23,1,95,0)
your site has in this field will be changed by the post-init from number of
"BLD",23,1,96,0)
messages to the equivalent number of days.  You may change it afterward.)
"BLD",23,1,97,0)
4.3,142   NO-PURGE DAYS BUFFER      becomes NO-PURGE DAYS BUFFER (LOCAL)
"BLD",23,1,98,0)

"BLD",23,1,99,0)
NOTES:
"BLD",23,1,100,0)
a. This patch should be installed after hours, when user activity is at a
"BLD",23,1,101,0)
minimum.  It should not be queued, because TaskMan should not be running.
"BLD",23,1,102,0)
b. This patch requires Kernel patches XU*8.0*67, XU*8.0*112, and XU*8.0*113.
"BLD",23,1,103,0)
c. For any site running MAS (all VAMCs), this patch requires FileMan patch
"BLD",23,1,104,0)
DI*22.0*1.  Caution: KIDS will not check for this patch because not all
"BLD",23,1,105,0)
sites run MAS.  It is up to each site running MAS to check for DI*22.0*1.
"BLD",23,1,106,0)
d. All MailMan users, including fictitious users, must have an access code,
"BLD",23,1,107,0)
or they will no longer receive mail.
"BLD",23,1,108,0)
e. To shorten installation time, which runs about 1 hour per 200,000 messages
"BLD",23,1,109,0)
in file 3.9, you might consider running the message purges the day before
"BLD",23,1,110,0)
the installation:
"BLD",23,1,111,0)
- XMMGR-PURGE-AI-XREF (AI x-Ref Purge of Received Network Messages)
"BLD",23,1,112,0)
- XMPURGE-BY-DATE (Purge Messages by Origination Date)
"BLD",23,1,113,0)
- XMAUTOPURGE (Automatic Purge of MailMan Messages)
"BLD",23,1,114,0)
f. DSM sites running SlotMaster may see routine mapping problems with ZSLOT
"BLD",23,1,115,0)
users, even after disabling mapping.  Therefore, such sites should consider
"BLD",23,1,116,0)
the following steps:
"BLD",23,1,117,0)
- Shutdown ZSLOT on all nodes.
"BLD",23,1,118,0)
- Disable all mapped XM routines.
"BLD",23,1,119,0)
- Load this patch.
"BLD",23,1,120,0)
- Enter manual edits.
"BLD",23,1,121,0)
- Rebuild mapped routine sets.
"BLD",23,1,122,0)
- Shutdown/restart all DSM configurations.
"BLD",23,1,123,0)
An alternative to the above steps is to disable all mapped XM routines about
"BLD",23,1,124,0)
a week before you load this patch.  That way you wouldn't need to shutdown
"BLD",23,1,125,0)
ZSLOT or shutdown/restart DSM configurations.
"BLD",23,1,126,0)
g. If your site is running POP3, you should immediately load patch XM*7.1*71
"BLD",23,1,127,0)
after installing this patch.
"BLD",23,1,128,0)
============================================================================ 
"BLD",23,1,129,0)
  
"BLD",23,1,130,0)
This patch deletes the following routines:
"BLD",23,1,131,0)
XMZTERM      (replaced by XMUTERM in this patch)
"BLD",23,1,132,0)
XMZTERM1     (replaced by XMUTERM1 in this patch)
"BLD",23,1,133,0)

"BLD",23,1,134,0)
ROUTINES:
"BLD",23,1,135,0)
The second line of the routine now looks like:
"BLD",23,1,136,0)
       ;;7.1;MailMan;**[patch list]**;Jun 02, 1994
"BLD",23,1,137,0)
 
"BLD",23,1,138,0)
              Before          After
"BLD",23,1,139,0)
Name          Checksum        Checksum        Patch List
"BLD",23,1,140,0)
----------------------------------------------------------
"BLD",23,1,141,0)
XM             4976038        11416143        17,35,50
"BLD",23,1,142,0)
XM0            3346676             580        4,42,50
"BLD",23,1,143,0)
XMA           11666053           79959        4,18,50
"BLD",23,1,144,0)
XMA0          10480365          573755        15,36,50
"BLD",23,1,145,0)
XMA01          2847569            1068        36,50
"BLD",23,1,146,0)
XMA02          6053078             879        4,5,50
"BLD",23,1,147,0)
XMA03          7773789           66257        50
"BLD",23,1,148,0)
XMA0A          6404929            1148        7,16,50
"BLD",23,1,149,0)
XMA1           9717771             827        31,36,40,50
"BLD",23,1,150,0)
XMA10          5587620            1067        50
"BLD",23,1,151,0)
XMA11         11668318           19543        50
"BLD",23,1,152,0)
XMA11A         6856608          291270        50
"BLD",23,1,153,0)
XMA11B         3593034            1468        39,50
"BLD",23,1,154,0)
XMA1A          3777724            1152        50
"BLD",23,1,155,0)
XMA1B          7260820          705206        50
"BLD",23,1,156,0)
XMA1C          1474193           99629        50
"BLD",23,1,157,0)
XMA1E          1530615            1172        50
"BLD",23,1,158,0)
XMA2          10059315         1214246        5,6,10,15,39,50
"BLD",23,1,159,0)
XMA20          4266922            1071        50
"BLD",23,1,160,0)
XMA21         11321545         1920696        4,31,50
"BLD",23,1,161,0)
XMA210         1920955            1364        31,50
"BLD",23,1,162,0)
XMA21A         7475211            1466        4,30,36,50
"BLD",23,1,163,0)
XMA21B         3903898            1472        50
"BLD",23,1,164,0)
XMA21FWD        406565            2649        50
"BLD",23,1,165,0)
XMA21G        11358760            1502        31,36,65,50
"BLD",23,1,166,0)
XMA22          7780497             887        50
"BLD",23,1,167,0)
XMA24         10721719            1091        31,50
"BLD",23,1,168,0)
XMA25          5071849            1096        50
"BLD",23,1,169,0)
XMA2B          4986311         4956922        50
"BLD",23,1,170,0)
XMA2C          4163417            1166        46,53,50
"BLD",23,1,171,0)
XMA2C0         9088344            1454        24,27,50
"BLD",23,1,172,0)
XMA2R          4793721         3427633        27,50
"BLD",23,1,173,0)
XMA3          14700672        17147624        37,54,69,50
"BLD",23,1,174,0)
XMA30          7561526         7080895        37,50
"BLD",23,1,175,0)
XMA32         12437801         6537619        37,50
"BLD",23,1,176,0)
XMA32A        10902381         9900106        27,37,44,55,50
"BLD",23,1,177,0)
XMA4           1695677             839        50
"BLD",23,1,178,0)
XMA5          11192062             843        31,45,50
"BLD",23,1,179,0)
XMA50          4115522            1083        50
"BLD",23,1,180,0)
XMA51          3840890            1088        50
"BLD",23,1,181,0)
XMA5A         13683319            1168        31,36,50
"BLD",23,1,182,0)
XMA6            986923             847        50
"BLD",23,1,183,0)
XMA7          10080629           16522        10,47,50
"BLD",23,1,184,0)
XMA7G          5211523            1206        36,50
"BLD",23,1,185,0)
XMA7G1         1193700            1500        24,50
"BLD",23,1,186,0)
XMAD0           481945            1143        50
"BLD",23,1,187,0)
XMAD1          7275936            1148        24,27,36,50
"BLD",23,1,188,0)
XMAD1A         7330837            1538        36,70,50
"BLD",23,1,189,0)
XMAD1X         3265319            1676        50
"BLD",23,1,190,0)
XMAD2          2503657          208202        31,50
"BLD",23,1,191,0)
XMADA             1034            1034        50
"BLD",23,1,192,0)
XMADDOC           1992            1992        50
"BLD",23,1,193,0)
XMADDOC1       4357710            2578        50
"BLD",23,1,194,0)
XMADDOC2          3589            2392        50
"BLD",23,1,195,0)
XMADGO         2112000           10833        5,27,50
"BLD",23,1,196,0)
XMADGO1         788007            2075        50
"BLD",23,1,197,0)
XMADJ999        419074            2470        50
"BLD",23,1,198,0)
XMADJF0        5354543            2029        50
"BLD",23,1,199,0)
XMADJF1        9044468            2036        44,52,67,50
"BLD",23,1,200,0)
XMADJF1A        912544            2556        50
"BLD",23,1,201,0)
XMADJF1B       4754529            2564        10,16,37,50
"BLD",23,1,202,0)
XMAH           5026238         1544316        5,16,50
"BLD",23,1,203,0)
XMAH0          1761641            1159        36,50
"BLD",23,1,204,0)
XMAH1          8757966         2172709        4,50
"BLD",23,1,205,0)
XMAI           4557700             923        50
"BLD",23,1,206,0)
XMAI0          1750753            1163        50
"BLD",23,1,207,0)
XMAI1          8026797            1168        43,50
"BLD",23,1,208,0)
XMAI2          1510945         3037343        36,50
"BLD",23,1,209,0)
XMAK           4457158             737        50
"BLD",23,1,210,0)
XMAL0          7710735            1175        50
"BLD",23,1,211,0)
XMAL0A         7458546            1565        50
"BLD",23,1,212,0)
XMANON          836515            1806        7,50
"BLD",23,1,213,0)
XMAP           8826127             951        24,36,50
"BLD",23,1,214,0)
XMAP0          4991024            1191        27,50
"BLD",23,1,215,0)
XMAP1          3005830            1196        50
"BLD",23,1,216,0)
XMAPHOST       6157206         9890299        7,14,27,36,50
"BLD",23,1,217,0)
XMASEC         4454626           46560        33,50
"BLD",23,1,218,0)
XMB            7258608         4363515        3,7,24,26,27,50
"BLD",23,1,219,0)
XMB1           8930890             830        31,50
"BLD",23,1,220,0)
XMBGRP         8013060         8135589        13,36,56,50
"BLD",23,1,221,0)
XMBPOST        9856673         9626449        4,13,23,24,27,38,50
"BLD",23,1,222,0)
XMC            4113929         3216956        13,50
"BLD",23,1,223,0)
XMC1           6875049         7147079        4,13,20,27,50
"BLD",23,1,224,0)
XMC11         11677623        11806932        50
"BLD",23,1,225,0)
XMC11A         3517372         4391366        27,50
"BLD",23,1,226,0)
XMC2          12142809        12105966        13,23,27,50
"BLD",23,1,227,0)
XMC3           5809172         5862128        20,50
"BLD",23,1,228,0)
XMC4           5412826          991572        50
"BLD",23,1,229,0)
XMCD           5190692         5277071        50
"BLD",23,1,230,0)
XMCTLK         9708749         9742452        10,27,50
"BLD",23,1,231,0)
XMD            4879878         6535767        33,50
"BLD",23,1,232,0)
XMDF           1706479         1431567        50
"BLD",23,1,233,0)
XMDIRQST       7236196         7357280        9,50
"BLD",23,1,234,0)
XMDIRRCV       1909690         1913144        37,50
"BLD",23,1,235,0)
XMDIRSND       1583505         1897078        37,50
"BLD",23,1,236,0)
XME           10528702             643        50
"BLD",23,1,237,0)
XME1           8041932             839        50
"BLD",23,1,238,0)
XMFAX          4957190         4921115        36,50
"BLD",23,1,239,0)
XMGAPI2        3885152         3885630        41,50
"BLD",23,1,240,0)
XMGAPI3        3505605         2171233        29,44,67,50
"BLD",23,1,241,0)
XMGAPI4        3952807         4204061        50
"BLD",23,1,242,0)
XMHIG          4741088         5360885        45,50
"BLD",23,1,243,0)
XMHIU          * New *         5960638        50
"BLD",23,1,244,0)
XMJBL          * New *         4523065        50
"BLD",23,1,245,0)
XMJBM          * New *        12165199        50
"BLD",23,1,246,0)
XMJBM1         * New *         4157424        50
"BLD",23,1,247,0)
XMJBN          * New *        10185228        50
"BLD",23,1,248,0)
XMJBU          * New *         1507122        50
"BLD",23,1,249,0)
XMJDIR         * New *         2003843        50
"BLD",23,1,250,0)
XMJERR         * New *          454500        50
"BLD",23,1,251,0)
XMJMA          * New *         2991838        50
"BLD",23,1,252,0)
XMJMBULL       * New *         1365629        50
"BLD",23,1,253,0)
XMJMC          * New *         8169036        50
"BLD",23,1,254,0)
XMJMCODE       * New *        11042686        50
"BLD",23,1,255,0)
XMJMD          * New *         7370754        50
"BLD",23,1,256,0)
XMJMF          * New *        18005162        50
"BLD",23,1,257,0)
XMJMFA         * New *         6204287        50
"BLD",23,1,258,0)
XMJMFB         * New *        15137131        50
"BLD",23,1,259,0)
XMJML          * New *        11033330        50
"BLD",23,1,260,0)
XMJMLN         * New *        13240819        50
"BLD",23,1,261,0)
XMJMLR         * New *        13545823        50
"BLD",23,1,262,0)
XMJMLR1        * New *         6523962        50
"BLD",23,1,263,0)
XMJMOI         * New *        16872170        50
"BLD",23,1,264,0)
XMJMOIE        * New *         4582157        50
"BLD",23,1,265,0)
XMJMOR         * New *        14242356        50
"BLD",23,1,266,0)
XMJMORX        * New *        14790879        50
"BLD",23,1,267,0)
XMJMORX1       * New *         2472219        50
"BLD",23,1,268,0)
XMJMP          * New *        16472134        50
"BLD",23,1,269,0)
XMJMP1        11388791        14179283        40,50
"BLD",23,1,270,0)
XMJMQ         15192669        16189088        40,57,70,50
"BLD",23,1,271,0)
XMJMQ1         3291603         3608941        40,50
"BLD",23,1,272,0)
XMJMR          * New *        18651915        50
"BLD",23,1,273,0)
XMJMRO         * New *         2449032        50
"BLD",23,1,274,0)
XMJMS          * New *         6092728        50
"BLD",23,1,275,0)
XMJMSA         * New *         1939332        50
"BLD",23,1,276,0)
XMJMSO         * New *        12952439        50
"BLD",23,1,277,0)
XMJMT          * New *        10637487        50
"BLD",23,1,278,0)
XMKP           * New *        15443979        50
"BLD",23,1,279,0)
XMKPL          * New *         2060011        50
"BLD",23,1,280,0)
XMKPLQ         * New *         9249196        50
"BLD",23,1,281,0)
XMKPO          * New *         2606344        50
"BLD",23,1,282,0)
XMP            8440919         8546955        4,24,50
"BLD",23,1,283,0)
XMP2A         10037244        10101095        24,42,50
"BLD",23,1,284,0)
XMP3           7025241         6844934        24,50
"BLD",23,1,285,0)
XMPC           5263348         5352206        50
"BLD",23,1,286,0)
XMPG           4354526         4353568        50
"BLD",23,1,287,0)
XMPH           4842981         3963996        34,50
"BLD",23,1,288,0)
XMPSEC         5817282         7152889        50
"BLD",23,1,289,0)
XMR            6901880        14031423        30,34,65,50
"BLD",23,1,290,0)
XMR0           8606729             874        27,50
"BLD",23,1,291,0)
XMR0A          3476739         2289812        27,50
"BLD",23,1,292,0)
XMR0B          9564128         8875848        4,6,13,34,42,62,50
"BLD",23,1,293,0)
XMR0BLOB       5117794         4867143        50
"BLD",23,1,294,0)
XMR1           7053085        13292215        7,50
"BLD",23,1,295,0)
   (Cache' sites may have a different 'before' checksum and)
"BLD",23,1,296,0)
   (patch list for XMR1.  Please disregard the differences.)
"BLD",23,1,297,0)
XMR1A          6979581         3017305        13,36,50
"BLD",23,1,298,0)
XMR2           7882048         6207716        50
"BLD",23,1,299,0)
XMRENT         2303842         2263450        31,50
"BLD",23,1,300,0)
XMRMSM          326967          339884        61,50
"BLD",23,1,301,0)
XMRONT          598867          621984        61,50
"BLD",23,1,302,0)
XMRPCTS0       5929098         6262116        6,12,31,55,50
"BLD",23,1,303,0)
XMRPCTS1       6929051         5691788        6,50
"BLD",23,1,304,0)
   (Your XMRPCTS1 'before' checksum may be)
"BLD",23,1,305,0)
   (different, because of your TWIX info. )
"BLD",23,1,306,0)
XMRPCTSA       3490824         3495721        6,31,61,50
"BLD",23,1,307,0)
XMRTCP         4812676         4798863        8,25,27,50
"BLD",23,1,308,0)
XMRUCX          357201          841742        27,34,50
"BLD",23,1,309,0)
XMS            5835931         5837542        8,20,34,48,50
"BLD",23,1,310,0)
XMS0           9233148         9308250        13,8,20,23,27,34,55,50
"BLD",23,1,311,0)
XMS0A          8144942         9199959        2,13,55,50
"BLD",23,1,312,0)
XMS0BLOB       6815258         6975716        50
"BLD",23,1,313,0)
XMS1           7375190         1321634        13,8,23,50
"BLD",23,1,314,0)
XMS2           1293876             885        50
"BLD",23,1,315,0)
XMS3          13059868        12996474        22,50
"BLD",23,1,316,0)
XMS4           3616422         2836511        50
"BLD",23,1,317,0)
XMS5          12421886        13329767        13,8,23,27,55,58,50
"BLD",23,1,318,0)
XMS5A          3624422         3571279        55,50
"BLD",23,1,319,0)
XMSERR         3651687         3280474        32,50
"BLD",23,1,320,0)
XMSM          10210546         7239792        4,6,13,20,50
"BLD",23,1,321,0)
XMSM1          1692536            1238        50
"BLD",23,1,322,0)
XMSMAIL        5893340         4937839        59,50
"BLD",23,1,323,0)
XMTDF          * New *         3998255        50
"BLD",23,1,324,0)
XMTDL          * New *        18249122        50
"BLD",23,1,325,0)
XMTDL1         * New *         5047763        50
"BLD",23,1,326,0)
XMTDL2         * New *         8743997        50
"BLD",23,1,327,0)
XMTDO          * New *         1746764        50
"BLD",23,1,328,0)
XMTDT          * New *         5385940        50
"BLD",23,1,329,0)
XMUDNC         * New *         3683283        50
"BLD",23,1,330,0)
XMUPIN         * New *        13825872        50
"BLD",23,1,331,0)
XMUT1          8603321         3818573        50
"BLD",23,1,332,0)
XMUT1A         4040808         3948769        50
"BLD",23,1,333,0)
XMUT2          4770720         4582154        50
"BLD",23,1,334,0)
XMUT4          4510855        17112758        50
"BLD",23,1,335,0)
XMUT4A         4424419         1411742        34,55,50
"BLD",23,1,336,0)
XMUT4B         8543914        18488496        50
"BLD",23,1,337,0)
XMUT4BA        8604816        15364896        50
"BLD",23,1,338,0)
XMUT4C         3745269         7228866        10,22,50
"BLD",23,1,339,0)
XMUT5          4455724         5739686        50
"BLD",23,1,340,0)
XMUT5B         2824190         2644064        50
"BLD",23,1,341,0)
XMUT5Q         8765057         8502082        50
"BLD",23,1,342,0)
XMUT6          2438497         2312993        50
"BLD",23,1,343,0)
XMUTERM        * New *        15007949        50
"BLD",23,1,344,0)
XMUTERM1       * New *        14471083        50
"BLD",23,1,345,0)
XMUTPUR0       1145390         1365512        7,50
"BLD",23,1,346,0)
XMVGROUP       * New *         6214836        50
"BLD",23,1,347,0)
XMVSURR        * New *         2622785        50
"BLD",23,1,348,0)
XMVVITA        * New *         4126813        50
"BLD",23,1,349,0)
XMVVITAE       * New *        12045708        50
"BLD",23,1,350,0)
XMXADDR        * New *        18774539        50
"BLD",23,1,351,0)
XMXADDR1       * New *        12069509        50
"BLD",23,1,352,0)
XMXADDR2       * New *         6515109        50
"BLD",23,1,353,0)
XMXADDRD       * New *         9657048        50
"BLD",23,1,354,0)
XMXADDRG       * New *        15430701        50
"BLD",23,1,355,0)
XMXANSER       * New *         2242310        50
"BLD",23,1,356,0)
XMXAPI         * New *         6705900        50
"BLD",23,1,357,0)
XMXAPIB        * New *         3472533        50
"BLD",23,1,358,0)
XMXAPIU        * New *          596863        50
"BLD",23,1,359,0)
XMXBSKT        * New *        12393935        50
"BLD",23,1,360,0)
XMXBULL        * New *         5479615        50
"BLD",23,1,361,0)
XMXEDIT        * New *         3880586        50
"BLD",23,1,362,0)
XMXLIST        * New *        10429141        50
"BLD",23,1,363,0)
XMXLIST1       * New *        12554823        50
"BLD",23,1,364,0)
XMXMBOX        * New *         1289002        50
"BLD",23,1,365,0)
XMXMSGS        * New *        10966038        50
"BLD",23,1,366,0)
XMXMSGS1       * New *         9891647        50
"BLD",23,1,367,0)
XMXMSGS2       * New *         5670519        50
"BLD",23,1,368,0)
XMXPARM        * New *        19704732        50
"BLD",23,1,369,0)
XMXPARM1       * New *         5916152        50
"BLD",23,1,370,0)
XMXPARMB       * New *         4788158        50
"BLD",23,1,371,0)
XMXPRT         * New *         3036286        50
"BLD",23,1,372,0)
XMXREPLY       * New *         4925239        50
"BLD",23,1,373,0)
XMXSEC         * New *        18599731        50
"BLD",23,1,374,0)
XMXSEC1        * New *        12851118        50
"BLD",23,1,375,0)
XMXSEC2        * New *        20994061        50
"BLD",23,1,376,0)
XMXSEND        * New *        10879355        50
"BLD",23,1,377,0)
XMXTO          * New *         1915321        50
"BLD",23,1,378,0)
XMXUTIL        2338705        10432772        40,50
"BLD",23,1,379,0)
XMXUTIL1       * New *         5489564        50
"BLD",23,1,380,0)
XMXUTIL2       * New *         7762911        50
"BLD",23,1,381,0)
XMXUTIL3       * New *         3652490        50
"BLD",23,1,382,0)
XMXUTIL4       * New *         9117363        50
"BLD",23,1,383,0)
XMYMNEM        5559955         4398404        50
"BLD",23,1,384,0)
XMYPOST2       9070792         7919115        49,50
"BLD",23,1,385,0)
XMYPOST9       * New *         5996100        50
"BLD",23,1,386,0)
XMYPOSTA       * New *         2107256        50
"BLD",23,1,387,0)
XMYPRE         4770905         3732264        50 
"BLD",23,1,388,0)
XMYPRE2        * New *        12021025        50
"BLD",23,1,389,0)
XMYPRE2A       * New *        15738292        50
"BLD",23,1,390,0)
XMYPRE2B       * New *         3451238        50
"BLD",23,1,391,0)

"BLD",23,1,392,0)
* Checksums produced by CHECK^XTSUMBLD
"BLD",23,1,393,0)

"BLD",23,1,394,0)
This patch introduces the following new routines:
"BLD",23,1,395,0)

"BLD",23,1,396,0)
Routine      Callable at     Description
"BLD",23,1,397,0)
---------------------------------------------------------------------------
"BLD",23,1,398,0)
XMHIU        N/A
"BLD",23,1,399,0)
XMJBL        N/A
"BLD",23,1,400,0)
XMJBM        N/A
"BLD",23,1,401,0)
XMJBM1       N/A
"BLD",23,1,402,0)
XMJBN        N/A
"BLD",23,1,403,0)
XMJBU        N/A
"BLD",23,1,404,0)
XMJDIR       N/A
"BLD",23,1,405,0)
XMJERR       N/A
"BLD",23,1,406,0)
XMJMA        N/A
"BLD",23,1,407,0)
XMJMBULL     N/A
"BLD",23,1,408,0)
XMJMC        N/A
"BLD",23,1,409,0)
XMJMCODE     N/A
"BLD",23,1,410,0)
XMJMD        N/A
"BLD",23,1,411,0)
XMJMF        N/A
"BLD",23,1,412,0)
XMJMFA       N/A
"BLD",23,1,413,0)
XMJMFB       N/A
"BLD",23,1,414,0)
XMJML        N/A
"BLD",23,1,415,0)
XMJMLN       N/A
"BLD",23,1,416,0)
XMJMLR       N/A
"BLD",23,1,417,0)
XMJMLR1      N/A
"BLD",23,1,418,0)
XMJMOI       N/A
"BLD",23,1,419,0)
XMJMOIE      N/A
"BLD",23,1,420,0)
XMJMOR       N/A
"BLD",23,1,421,0)
XMJMORX      N/A
"BLD",23,1,422,0)
XMJMORX1     N/A
"BLD",23,1,423,0)
XMJMP        N/A
"BLD",23,1,424,0)
XMJMR        N/A
"BLD",23,1,425,0)
XMJMRO       N/A
"BLD",23,1,426,0)
XMJMS        N/A
"BLD",23,1,427,0)
XMJMSA       N/A
"BLD",23,1,428,0)
XMJMSO       N/A
"BLD",23,1,429,0)
XMJMT        N/A
"BLD",23,1,430,0)
XMKP         N/A
"BLD",23,1,431,0)
XMKPL        N/A
"BLD",23,1,432,0)
XMKPLQ       N/A
"BLD",23,1,433,0)
XMKPO        N/A
"BLD",23,1,434,0)
XMTDF        N/A
"BLD",23,1,435,0)
XMTDL        N/A
"BLD",23,1,436,0)
XMTDL1       N/A
"BLD",23,1,437,0)
XMTDL2       N/A
"BLD",23,1,438,0)
XMTDO        N/A
"BLD",23,1,439,0)
XMTDT        N/A
"BLD",23,1,440,0)
XMUDNC       N/A
"BLD",23,1,441,0)
XMUPIN       N/A
"BLD",23,1,442,0)
XMUTERM      N/A
"BLD",23,1,443,0)
XMUTERM1     N/A
"BLD",23,1,444,0)
XMVGROUP     N/A
"BLD",23,1,445,0)
XMVSURR      N/A
"BLD",23,1,446,0)
XMVVITA      N/A
"BLD",23,1,447,0)
XMVVITAE     INIT        Initialize user setup information
"BLD",23,1,448,0)
             OTHER       Setup as someone else
"BLD",23,1,449,0)
             SELF        Return to oneself
"BLD",23,1,450,0)
XMXADDR      N/A
"BLD",23,1,451,0)
XMXADDR1     N/A
"BLD",23,1,452,0)
XMXADDR2     N/A
"BLD",23,1,453,0)
XMXADDRD     N/A
"BLD",23,1,454,0)
XMXADDRG     N/A
"BLD",23,1,455,0)
XMXANSER     N/A
"BLD",23,1,456,0)
XMXAPI       ADDRNSND    Address and send a message (doesn't handle msg body)
"BLD",23,1,457,0)
             ANSRMSG     Answer a message
"BLD",23,1,458,0)
             CRE8XMZ     Create a new message in message file
"BLD",23,1,459,0)
             DELMSG      Delete messages from a basket
"BLD",23,1,460,0)
             FLTRMSG     Filter messages
"BLD",23,1,461,0)
             FWDMSG      Forward messages
"BLD",23,1,462,0)
             LATERMSG    'Later' messages
"BLD",23,1,463,0)
             MOVEMSG     Move messages from/to a basket
"BLD",23,1,464,0)
             PRTMSG      Print messages
"BLD",23,1,465,0)
             PUTSERV     Put a message in a server basket
"BLD",23,1,466,0)
             REPLYMSG    Reply to message
"BLD",23,1,467,0)
             SENDBULL    Send a bulletin (returns XMZ)
"BLD",23,1,468,0)
             SENDMSG     Send a message
"BLD",23,1,469,0)
             TASKBULL    Send a bulletin (quicker, but does not return XMZ)
"BLD",23,1,470,0)
             TERMMSG     Terminate messages
"BLD",23,1,471,0)
             TOWHOM      Check one message addressee
"BLD",23,1,472,0)
             VSUBJ       Validate a message subject
"BLD",23,1,473,0)
             ZAPSERV     Delete a message from a server basket
"BLD",23,1,474,0)
XMXAPIB      CRE8BSKT    Create a basket
"BLD",23,1,475,0)
             CRE8MBOX    Create a mailbox
"BLD",23,1,476,0)
             DELBSKT     Delete a basket
"BLD",23,1,477,0)
             FLTRBSKT    Filter messages in a basket
"BLD",23,1,478,0)
             FLTRMBOX    Filter all messages in a mailbox
"BLD",23,1,479,0)
             LISTBSKT    Get a list of baskets
"BLD",23,1,480,0)
             LISTMSGS    Get a list of messages in one or all baskets.
"BLD",23,1,481,0)
                         (Search criteria may be used.)
"BLD",23,1,482,0)
             NAMEBSKT    Change the name of a basket
"BLD",23,1,483,0)
             QBSKT       Get info on a basket
"BLD",23,1,484,0)
             QMBOX       Query a mailbox
"BLD",23,1,485,0)
             RSEQBSKT    Resequence messages in a basket
"BLD",23,1,486,0)
             TERMMBOX    Remove all traces of a user from MM globals
"BLD",23,1,487,0)
XMXAPIU      READ        Read/Manage messages in Mailbox (interactive)
"BLD",23,1,488,0)
             READNEW     Read new messages in a Mailbox (interactive)
"BLD",23,1,489,0)
             SEND        Send a message (interactive)
"BLD",23,1,490,0)
             TOWHOM      Address a message (interactive)
"BLD",23,1,491,0)
XMXBSKT      N/A
"BLD",23,1,492,0)
XMXBULL      N/A
"BLD",23,1,493,0)
XMXEDIT      CLOSED      Toggle message 'closed'
"BLD",23,1,494,0)
             CONFID      Toggle message 'confidential'
"BLD",23,1,495,0)
             CONFIRM     Toggle message 'confirm receipt requested'
"BLD",23,1,496,0)
             DELIVER     Set/delete delivery basket
"BLD",23,1,497,0)
             INFO        Toggle message 'information only'
"BLD",23,1,498,0)
             PRIORITY    Toggle message 'priority'
"BLD",23,1,499,0)
             SUBJ        Change message subject
"BLD",23,1,500,0)
             TEXT        Replace message text
"BLD",23,1,501,0)
             VAPOR       Set/delete message vaporize date
"BLD",23,1,502,0)
XMXLIST      N/A
"BLD",23,1,503,0)
XMXLIST1     N/A
"BLD",23,1,504,0)
XMXMBOX      N/A
"BLD",23,1,505,0)
XMXMSGS      N/A
"BLD",23,1,506,0)
XMXMSGS1     N/A
"BLD",23,1,507,0)
XMXMSGS2     N/A
"BLD",23,1,508,0)
XMXPARM      N/A
"BLD",23,1,509,0)
XMXPARM1     N/A
"BLD",23,1,510,0)
XMXPARMB     N/A
"BLD",23,1,511,0)
XMXPRT       N/A
"BLD",23,1,512,0)
XMXREPLY     N/A
"BLD",23,1,513,0)
XMXSEC       $$ACCESS    May user access message?
"BLD",23,1,514,0)
             $$ANSWER    May user answer message?
"BLD",23,1,515,0)
             $$BCAST     Is this a broadcast message?
"BLD",23,1,516,0)
             $$CLOSED    Is this message closed?
"BLD",23,1,517,0)
             $$CONFID    Is this message confidential?
"BLD",23,1,518,0)
             $$CONFIRM   Is this message confirm receipt requested?
"BLD",23,1,519,0)
             $$COPY      May user copy message?
"BLD",23,1,520,0)
             $$DELETE    May user delete message?
"BLD",23,1,521,0)
             $$FORWARD   May user forward message?
"BLD",23,1,522,0)
             $$INFO      Is this message information only?
"BLD",23,1,523,0)
             $$LATER     May user later message?
"BLD",23,1,524,0)
             $$MOVE      May user save/filter message?
"BLD",23,1,525,0)
             $$ORIGIN8R  Did user send this message?
"BLD",23,1,526,0)
             $$POSTPRIV  Does user have postmaster privilege?
"BLD",23,1,527,0)
             $$PRIORITY  Is this message priority?
"BLD",23,1,528,0)
             $$READ      May user read message?
"BLD",23,1,529,0)
             $$REPLY     May user reply to message?
"BLD",23,1,530,0)
             $$RPRIV     Does surrogate have read privilege?
"BLD",23,1,531,0)
             $$RWPRIV    Does surrogate have read/write privilege?
"BLD",23,1,532,0)
             $$SEND      May user send a message?
"BLD",23,1,533,0)
             $$SURRACC   May surrogate access message?
"BLD",23,1,534,0)
             $$SURRCONF  May surrogate *not* access message?
"BLD",23,1,535,0)
             $$WPRIV     Does surrogate have write privilege?
"BLD",23,1,536,0)
             $$ZCLOSED   Is this message closed?
"BLD",23,1,537,0)
             $$ZCONFID   Is this message confidential?
"BLD",23,1,538,0)
             $$ZCONFIRM  Is this message confirm receipt requested?
"BLD",23,1,539,0)
             $$ZINFO     Is this message information only?
"BLD",23,1,540,0)
             $$ZORIGIN8  Did user send this message?
"BLD",23,1,541,0)
             $$ZPOSTPRV  Does user have postmaster privilege?
"BLD",23,1,542,0)
             $$ZPRI      Is this message priority?
"BLD",23,1,543,0)
XMXSEC1      $$COPYAMT   May the copy contain the requested responses?
"BLD",23,1,544,0)
             $$COPYLIMS  Get the site's copy limits.
"BLD",23,1,545,0)
             $$COPYRECP  May the copy be sent to the original's recipients?
"BLD",23,1,546,0)
             $$PAKMAN    Is this a PackMan message?
"BLD",23,1,547,0)
             CHKLINES    May this message be sent to a remote site?
"BLD",23,1,548,0)
             CHKMSG      Is message really there & may user access it?
"BLD",23,1,549,0)
             GETRESTR    Get restrictions on what user may do with message
"BLD",23,1,550,0)
             OPTGRP      What may user do at basket/message group level?
"BLD",23,1,551,0)
XMXSEC2      $$EDIT      May user edit message?
"BLD",23,1,552,0)
             OPTEDIT     If user may edit message, what may/may not be edited?
"BLD",23,1,553,0)
             OPTMSG      What may/may not the user do with this message?
"BLD",23,1,554,0)
XMXSEND      N/A
"BLD",23,1,555,0)
XMXTO        N/A
"BLD",23,1,556,0)
XMXUTIL      $$BMSGCT    Number of messages in user's basket
"BLD",23,1,557,0)
             $$BNMSGCT   Number of new messages in user's basket
"BLD",23,1,558,0)
             $$BSKTNAME  Basket name
"BLD",23,1,559,0)
             $$NAME      User's name
"BLD",23,1,560,0)
             $$NETNAME   User's network name
"BLD",23,1,561,0)
             $$NEWS      Info on new messages in user's mailbox
"BLD",23,1,562,0)
             $$TMSGCT    Number of messages in user's mailbox
"BLD",23,1,563,0)
             $$TNMSGCT   Number of new messages in user's mailbox
"BLD",23,1,564,0)
             KVAPOR      Edit message vaporize date in user's basket
"BLD",23,1,565,0)
             LASTACC     Record info on user's last access of message
"BLD",23,1,566,0)
             MAKENEW     Make message new
"BLD",23,1,567,0)
             NONEW       Make message not new
"BLD",23,1,568,0)
             PAGE        Enter RETURN to continue or '^' to exit:
"BLD",23,1,569,0)
             WAIT        Press RETURN to continue:
"BLD",23,1,570,0)
XMXUTIL1     $$CONVERT   Convert InterNet date/time to FileMan date/time
"BLD",23,1,571,0)
             $$CTRL      Strip control characters
"BLD",23,1,572,0)
             $$DECODEUP  ~U~ to ^
"BLD",23,1,573,0)
             $$ENCODEUP  ^ to ~U~
"BLD",23,1,574,0)
             $$GMTDIFF   +-HHMM difference from GMT
"BLD",23,1,575,0)
             $$INDT      Convert FileMan date/time to InterNet date/time
"BLD",23,1,576,0)
             $$MAXBLANK  Reduce 3 or more consecutive blanks to 2
"BLD",23,1,577,0)
             $$MELD      Combine string and number
"BLD",23,1,578,0)
             $$MMDT      Convert FileMan date/time to MailMan date/time
"BLD",23,1,579,0)
             $$SCRUB     Strip control characters and leading/trailing blanks
"BLD",23,1,580,0)
             $$STRIP     Strip leading/trailing blanks
"BLD",23,1,581,0)
             $$TIMEDIFF  Decimal time difference to +-HHMM
"BLD",23,1,582,0)
             $$TSTAMP    Time stamp
"BLD",23,1,583,0)
             $$ZONEDIFF  +-HHMM from another time zone
"BLD",23,1,584,0)
XMXUTIL2     $$BSKT      Which basket is message in?
"BLD",23,1,585,0)
             $$DATE      Get message date.
"BLD",23,1,586,0)
             $$FROM      Get message from.
"BLD",23,1,587,0)
             $$KSEQN     Get message sequence number in user's basket.
"BLD",23,1,588,0)
             $$LINE      How many lines are in the message?
"BLD",23,1,589,0)
             $$NEW       Is this message new for this user?
"BLD",23,1,590,0)
             $$PRI       Is this message priority?
"BLD",23,1,591,0)
             $$QRESP     Is this a response?
"BLD",23,1,592,0)
             $$RESP      How many responses are in the message?
"BLD",23,1,593,0)
             $$SUBJ      Get message subject.
"BLD",23,1,594,0)
             $$ZDATE     Get message date.
"BLD",23,1,595,0)
             $$ZFROM     Get message from.
"BLD",23,1,596,0)
             $$ZNODE     Get message zero node.
"BLD",23,1,597,0)
             $$ZPRI      Is this message priority?
"BLD",23,1,598,0)
             $$ZREAD     How many responses has the user read?
"BLD",23,1,599,0)
             $$ZSUBJ     Get message subject.
"BLD",23,1,600,0)
             INMSG       Message info
"BLD",23,1,601,0)
             INMSG1      General message info
"BLD",23,1,602,0)
             INMSG2      Specific message info
"BLD",23,1,603,0)
             INRESP      Response info
"BLD",23,1,604,0)
             INRESPS     Message response info
"BLD",23,1,605,0)
XMXUTIL3     Q           List message's addressees
"BLD",23,1,606,0)
             QD          List message's recipients
"BLD",23,1,607,0)
             QL          List message's later'd addressees
"BLD",23,1,608,0)
             QN          List message's network header lines
"BLD",23,1,609,0)
XMXUTIL4     N/A
"BLD",23,1,610,0)
XMYPOST9     N/A
"BLD",23,1,611,0)
XMYPOSTA     N/A
"BLD",23,1,612,0)
XMYPRE2      N/A
"BLD",23,1,613,0)
XMYPRE2A     N/A
"BLD",23,1,614,0)
XMYPRE2B     N/A
"BLD",23,1,615,0)
===========================================================================
"BLD",23,1,616,0)
 
"BLD",23,1,617,0)
INSTALLATION:
"BLD",23,1,618,0)

"BLD",23,1,619,0)
NOTES:
"BLD",23,1,620,0)
a. This patch should be installed after hours, when user activity is at a
"BLD",23,1,621,0)
minimum.  It should not be queued, because TaskMan should not be running.
"BLD",23,1,622,0)
b. This patch requires Kernel patches XU*8.0*67, XU*8.0*112, and XU*8.0*113.
"BLD",23,1,623,0)
c. For any site running MAS (all VAMCs), this patch requires FileMan patch
"BLD",23,1,624,0)
DI*22.0*1.  Caution: KIDS will not check for this patch because not all
"BLD",23,1,625,0)
sites run MAS.  It is up to each site running MAS to check for DI*22.0*1.
"BLD",23,1,626,0)
d. All MailMan users, including fictitious users, must have an access code,
"BLD",23,1,627,0)
or they will no longer receive mail.
"BLD",23,1,628,0)
e. To shorten installation time, which runs about 1 hour per 200,000 messages
"BLD",23,1,629,0)
in file 3.9, you might consider running the message purges the day before
"BLD",23,1,630,0)
the installation:
"BLD",23,1,631,0)
- XMMGR-PURGE-AI-XREF (AI x-Ref Purge of Received Network Messages)
"BLD",23,1,632,0)
- XMPURGE-BY-DATE (Purge Messages by Origination Date)
"BLD",23,1,633,0)
- XMAUTOPURGE (Automatic Purge of MailMan Messages)
"BLD",23,1,634,0)
f. DSM sites running SlotMaster may see routine mapping problems with ZSLOT
"BLD",23,1,635,0)
users, even after disabling mapping.  Therefore, such sites should consider
"BLD",23,1,636,0)
the following steps:
"BLD",23,1,637,0)
- Shutdown ZSLOT on all nodes.
"BLD",23,1,638,0)
- Disable all mapped XM routines.
"BLD",23,1,639,0)
- Load this patch.
"BLD",23,1,640,0)
- Enter manual edits.
"BLD",23,1,641,0)
- Rebuild mapped routine sets.
"BLD",23,1,642,0)
- Shutdown/restart all DSM c nfigurations.
"BLD",23,1,643,0)
An alternative to the above steps is to disable all mapped XM routines about
"BLD",23,1,644,0)
a week before you load this patch.  That way you wouldn't need to shutdown
"BLD",23,1,645,0)
ZSLOT or shutdown/restart DSM configurations.
"BLD",23,1,646,0)
g. If your site is running POP3, you should immediately load patch XM*7.1*71
"BLD",23,1,647,0)
after installing this patch.
"BLD",23,1,648,0)

"BLD",23,1,649,0)
INSTRUCTIONS:
"BLD",23,1,650,0)
1. This patch replaces routine ^XMRPCTS1, which contains your site's TWIX
"BLD",23,1,651,0)
   routing info.  Before you install this patch, copy the current TWIX info
"BLD",23,1,652,0)
   from that routine at your site.  After you install this patch, edit
"BLD",23,1,653,0)
   the new ^XMRPCTS1 to set your site's current TWIX info.  Specifically:
"BLD",23,1,654,0)
XMRPCTS1     ;(KC-VAMC)/XXX-Simple PCTS front end to MailMan ;03/19/98  11:10
"BLD",23,1,655,0)
     ;;7.1;MailMan;**6,50**;Jun 02, 1994
"BLD",23,1,656,0)
     N XMUS,XMFM,XMSTR,XMRI,XMTO,XMABORT
"BLD",23,1,657,0)
     ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
"BLD",23,1,658,0)
     ;All should be sent to XXX@VHA.DMIA the local PCTS Domain
"BLD",23,1,659,0)
     ;Edit these for your site.               <---Copy your site's TWIX info
"BLD",23,1,660,0)
     S XMUS="XXXX" ;Local routing indicator   <---from this line
"BLD",23,1,661,0)
     S XMFM="YYYY" ;from line                 <---and this line
"BLD",23,1,662,0)
     I XMUS="XXXX"!(XMFM="YYYY") S %="FIX Routing codes !!!"_XMPCTS0("ERR")
"BLD",23,1,663,0)
     ;-------------------------------------------------------------
"BLD",23,1,664,0)
2.  The TIME ZONE field in file 4.3 must have your site's time zone in it.
"BLD",23,1,665,0)
    Please check and ensure that it is there.
"BLD",23,1,666,0)
3.  DSM SITES: Disable all mapped XM routines.  In step 13, we'll rebuild
"BLD",23,1,667,0)
    the map set with *different* routines, because many have become obsolete.
"BLD",23,1,668,0)
4.  On the PackMan menu, use the 'INSTALL/CHECK MESSAGE' option to load
"BLD",23,1,669,0)
    the patch into a transport global.
"BLD",23,1,670,0)
5.  On the Manage MailMan:Local Delivery Management menu, use the following
"BLD",23,1,671,0)
    option to stop the background filer:
"BLD",23,1,672,0)
       STOP background filer (XMAD)
"BLD",23,1,673,0)
Are you sure you want the BACKGROUND FILERS to STOP delivering mail NO// YES
"BLD",23,1,674,0)
                                                                         ===
"BLD",23,1,675,0)
<<< Mail Deliveries will stop momentarily. >>>
"BLD",23,1,676,0)
<<   Background filer will stop before delivering the next message !!! >>>
"BLD",23,1,677,0)
6.  Stop TaskMan.  You may also wish to shut down HL7 filers/LLP's and other
"BLD",23,1,678,0)
    background tasks which may attempt to create new messages.
"BLD",23,1,679,0)
7.  Place option XMUSER out of order.  (We do it ourselves, instead of letting
"BLD",23,1,680,0)
KIDS do it, because we're going to place XMUSER back in order during the
"BLD",23,1,681,0)
post-init.)  To place XMUSER out of order, enter FileMan, and:
"BLD",23,1,682,0)
VA FileMan 21.0
"BLD",23,1,683,0)
Select OPTION: ENTER OR EDIT FILE ENTRIES  
"BLD",23,1,684,0)
               ==========================
"BLD",23,1,685,0)
INPUT TO WHAT FILE: OPTION// <press return>
"BLD",23,1,686,0)
                             ==============
"BLD",23,1,687,0)
EDIT WHICH FIELD: ALL// OUT OF ORDER MESSAGE
"BLD",23,1,688,0)
                        ====================    
"BLD",23,1,689,0)
THEN EDIT FIELD: <press return>
"BLD",23,1,690,0)
                 ==============
"BLD",23,1,691,0)
Select OPTION NAME: XMUSER          MailMan Menu
"BLD",23,1,692,0)
                    ======
"BLD",23,1,693,0)
OUT OF ORDER MESSAGE: Loading MailMan patch XM*7.1*50
"BLD",23,1,694,0)
                      ===============================
"BLD",23,1,695,0)
Select OPTION NAME: <press return>
"BLD",23,1,696,0)
                    ==============
"BLD",23,1,697,0)
Select OPTION: <press return>
"BLD",23,1,698,0)
               ==============
"BLD",23,1,699,0)
8.  If you journal the global ^XMBX, your journal space may fill up when the
"BLD",23,1,700,0)
    ^XMBX(3.9,"AI", xref global is reconfigured.  You may wish to disable
"BLD",23,1,701,0)
    journaling.  To disable journaling:
"BLD",23,1,702,0)
8a. DSM SITES: You may disable journaling for a particular global:
"BLD",23,1,703,0)
    >D ^%GLOMAN
"BLD",23,1,704,0)
     ==========
"BLD",23,1,705,0)
    Global Management Utility
"BLD",23,1,706,0)

"BLD",23,1,707,0)
    Global > ^XMBX
"BLD",23,1,708,0)
              ====
"BLD",23,1,709,0)
    ^XMBX is currently defined
"BLD",23,1,710,0)

"BLD",23,1,711,0)
      1. Show GLOBAL Characteristics
"BLD",23,1,712,0)
      2. Change Access Privileges
"BLD",23,1,713,0)
      3. Change Journaling Capability
"BLD",23,1,714,0)
      4. Change DATA GROWTH AREA
"BLD",23,1,715,0)

"BLD",23,1,716,0)
    Enter option > 3
"BLD",23,1,717,0)
                   =
"BLD",23,1,718,0)
    Journaling [E=Enabled/D=Disabled]   <E>   D
"BLD",23,1,719,0)
                                              =
"BLD",23,1,720,0)
     - Characteristics updated
"BLD",23,1,721,0)

"BLD",23,1,722,0)
      1. Show GLOBAL Characteristics
"BLD",23,1,723,0)
      2. Change Access Privileges
"BLD",23,1,724,0)
      3. Change Journaling Capability
"BLD",23,1,725,0)
      4. Change DATA GROWTH AREA
"BLD",23,1,726,0)

"BLD",23,1,727,0)
    Enter option > <press return>
"BLD",23,1,728,0)
                   ==============
"BLD",23,1,729,0)
    Global > ^<press return>
"BLD",23,1,730,0)
              ==============
"BLD",23,1,731,0)
8b. CACHE SITES: You may disable journaling for a specific job:
"BLD",23,1,732,0)
    %SYS>D DISABLE^%NOJRN
"BLD",23,1,733,0)
         ================
"BLD",23,1,734,0)
8c. MSM SITES: Consult MSM documentation for how to disable journaling.
"BLD",23,1,735,0)
9.  On the KIDS:Installation menu, use the following options to install the
"BLD",23,1,736,0)
    Transport Global:
"BLD",23,1,737,0)
       Verify Checksums in Transport Global
"BLD",23,1,738,0)
       Print Transport Global
"BLD",23,1,739,0)
       Compare Transport Global to Current System
"BLD",23,1,740,0)
       Backup a Transport Global
"BLD",23,1,741,0)
       Install Package(s)
"BLD",23,1,742,0)
 Select INSTALL NAME:    XM*7.1*50     Loaded from Distribution  <date/time>
"BLD",23,1,743,0)
                         =========
"BLD",23,1,744,0)
     => <header>  ;Created on <date/time>
"BLD",23,1,745,0)

"BLD",23,1,746,0)
 This Distribution was loaded on <date/time> with header of 
"BLD",23,1,747,0)
 <header>  ;Created on <date/time>
"BLD",23,1,748,0)
 It consisted of the following Install(s):
"BLD",23,1,749,0)
 XM*7.1*50
"BLD",23,1,750,0)

"BLD",23,1,751,0)
    XM*7.1*50
"BLD",23,1,752,0)

"BLD",23,1,753,0)
 Install Questions for XM*7.1*50
"BLD",23,1,754,0)
 Incoming Files:
"BLD",23,1,755,0)

"BLD",23,1,756,0)
    3.6       BULLETIN  (Partial Definition)
"BLD",23,1,757,0)
 Note:  You already have the 'BULLETIN' File.
"BLD",23,1,758,0)

"BLD",23,1,759,0)
    3.7       MAILBOX
"BLD",23,1,760,0)
 *BUT YOU ALREADY HAVE 'MAIL BOX' AS FILE #3.7!
"BLD",23,1,761,0)
 Shall I write over your MAIL BOX File? YES// <press enter>
"BLD",23,1,762,0)
                                              =============
"BLD",23,1,763,0)

"BLD",23,1,764,0)
    3.73      MESSAGES TO BE NEW AT A LATER DATE
"BLD",23,1,765,0)
 Note:  You already have the 'MESSAGES TO BE NEW AT A LATER DATE' File.
"BLD",23,1,766,0)

"BLD",23,1,767,0)
    3.8       MAIL GROUP  (Partial Definition)
"BLD",23,1,768,0)
 Note:  You already have the 'MAIL GROUP' File.
"BLD",23,1,769,0)

"BLD",23,1,770,0)
    3.9       MESSAGE
"BLD",23,1,771,0)
 Note:  You already have the 'MESSAGE' File.
"BLD",23,1,772,0)

"BLD",23,1,773,0)
    4.2       DOMAIN  (Partial Definition)
"BLD",23,1,774,0)
 Note:  You already have the 'DOMAIN' File.
"BLD",23,1,775,0)

"BLD",23,1,776,0)
    4.2997    REMOTE USER DIRECTORY  (Partial Definition)
"BLD",23,1,777,0)
 Note:  You already have the 'REMOTE USER DIRECTORY' File.
"BLD",23,1,778,0)

"BLD",23,1,779,0)
    4.2999    MESSAGE STATISTICS  (Partial Definition)
"BLD",23,1,780,0)
 Note:  You already have the 'MESSAGE STATISTICS' File.
"BLD",23,1,781,0)

"BLD",23,1,782,0)
    4.3       MAILMAN SITE PARAMETERS
"BLD",23,1,783,0)
 *BUT YOU ALREADY HAVE 'KERNEL SITE PARAMETERS' AS FILE #4.3!
"BLD",23,1,784,0)
 Shall I write over your KERNEL SITE PARAMETERS File? YES// <press enter>
"BLD",23,1,785,0)
                                                            =============
"BLD",23,1,786,0)

"BLD",23,1,787,0)
 Want KIDS to Rebuild Menu Trees Upon Completion of Install? YES// YES
"BLD",23,1,788,0)
                                                                   ===
"BLD",23,1,789,0)

"BLD",23,1,790,0)
 ----------------------------------------------------------------------
"BLD",23,1,791,0)
 NOTE:  If you want users to be able to use MailMan during the post-init,
"BLD",23,1,792,0)
 it's important that you answer NO to the following question,
"BLD",23,1,793,0)
 otherwise KIDS will place all options in this patch out of order until
"BLD",23,1,794,0)
 the install is finished:
"BLD",23,1,795,0)
 ----------------------------------------------------------------------
"BLD",23,1,796,0)
 Want to DISABLE Scheduled Options, Menu Options, and Protocols? YES// NO
"BLD",23,1,797,0)
                                                                       ==
"BLD",23,1,798,0)

"BLD",23,1,799,0)
        ... <lots of installation stuff is shown> ...
"BLD",23,1,800,0)

"BLD",23,1,801,0)
 ----------------------------------------------------------------------
"BLD",23,1,802,0)
 NOTE: When the POST-INIT starts, continue with steps 10 through 17.
"BLD",23,1,803,0)
 The following is displayed when the post-init starts:
"BLD",23,1,804,0)

"BLD",23,1,805,0)
 Running Post-Install Routine: ^XMYPOST9
"BLD",23,1,806,0)

"BLD",23,1,807,0)
Fire xrefs on 'timezone' field of the MailMan site parms file.
"BLD",23,1,808,0)
 
"BLD",23,1,809,0)
Check/Redo AI xref...
"BLD",23,1,810,0)
 ----------------------------------------------------------------------
"BLD",23,1,811,0)

"BLD",23,1,812,0)
        ... <lots of installation stuff is shown> ...
"BLD",23,1,813,0)

"BLD",23,1,814,0)
 XM*7.1*50 Installed. 
"BLD",23,1,815,0)
               <shows date and time>
"BLD",23,1,816,0)
 
"BLD",23,1,817,0)
 Install Message sent #<shows message number>
"BLD",23,1,818,0)

"BLD",23,1,819,0)
 Starting Menu Rebuild:  <shows date and time>
"BLD",23,1,820,0)
        ... <shows rebuilding of menus> ...
"BLD",23,1,821,0)
 Install Completed.
"BLD",23,1,822,0)

"BLD",23,1,823,0)
10. Start TaskMan.  If you shut down HL7 filers/LLPs or any other background
"BLD",23,1,824,0)
    tasks, you may restart them.
"BLD",23,1,825,0)
11. Start the background filer.
"BLD",23,1,826,0)
    On the Manage MailMan:Local Delivery Management menu, use the following
"BLD",23,1,827,0)
    option to start the background filer:
"BLD",23,1,828,0)
       START background filer
"BLD",23,1,829,0)
   << Background filer will start soon. >>
"BLD",23,1,830,0)
12. Place option XMUSER back in order by entering FileMan and:
"BLD",23,1,831,0)
VA FileMan 21.0
"BLD",23,1,832,0)
Select OPTION: ENTER OR EDIT FILE ENTRIES  
"BLD",23,1,833,0)
               ==========================
"BLD",23,1,834,0)
INPUT TO WHAT FILE: OPTION// <press return>
"BLD",23,1,835,0)
                             ==============
"BLD",23,1,836,0)
EDIT WHICH FIELD: ALL// OUT OF ORDER MESSAGE
"BLD",23,1,837,0)
                        ====================    
"BLD",23,1,838,0)
THEN EDIT FIELD: <press return>
"BLD",23,1,839,0)
                 ==============
"BLD",23,1,840,0)
Select OPTION NAME: XMUSER          MailMan Menu
"BLD",23,1,841,0)
                    ======
"BLD",23,1,842,0)
OUT OF ORDER MESSAGE: Loading MailMan patch XM*7.1*50
"BLD",23,1,843,0)
           Replace @
"BLD",23,1,844,0)
                  === 
"BLD",23,1,845,0)
   SURE YOU WANT TO DELETE? Y  (Yes)
"BLD",23,1,846,0)
                           ===
"BLD",23,1,847,0)
Select OPTION NAME: <press return>
"BLD",23,1,848,0)
                    ==============
"BLD",23,1,849,0)
Select OPTION: <press return>
"BLD",23,1,850,0)
               ==============
"BLD",23,1,851,0)
13. DSM SITES: After patch has installed, rebuild your map set.
"BLD",23,1,852,0)
    Many routines have become obsolete and should be removed from the map
"BLD",23,1,853,0)
    set.  Here is a new recommended list of routines to map, should your
"BLD",23,1,854,0)
    site choose to map routines:
"BLD",23,1,855,0)
    Minimum                           Additional
"BLD",23,1,856,0)
    -------                           ----------
"BLD",23,1,857,0)
    XM                                XMBPOST
"BLD",23,1,858,0)
    XMC1                              XMC,XMC1*
"BLD",23,1,859,0)
    XMJ*                              XMD
"BLD",23,1,860,0)
    XML1CRC,XML4CRC*,XMLSWP*          XMK*
"BLD",23,1,861,0)
    XMR,XMR0*                         XML
"BLD",23,1,862,0)
    XMS,XMS0*                         XMR1*
"BLD",23,1,863,0)
                                      XMS1,XMSMAIL
"BLD",23,1,864,0)
                                      XMVVITAE
"BLD",23,1,865,0)
                                      XMXSEC
"BLD",23,1,866,0)
                                      XMXUTIL
"BLD",23,1,867,0)
14. This patch replaces routine ^XMRPCTS1, which contains your site's TWIX
"BLD",23,1,868,0)
    routing info.  In step 1, you copied the TWIX info for your site from
"BLD",23,1,869,0)
    that routine.  Now, edit the new ^XMRPCTS1 to set your site's TWIX info.
"BLD",23,1,870,0)
    Specifically:
"BLD",23,1,871,0)
XMRPCTS1     ;(KC-VAMC)/XXX-Simple PCTS front end to MailMan ;03/19/98  11:10
"BLD",23,1,872,0)
     ;;7.1;MailMan;**6,50**;Jun 02, 1994
"BLD",23,1,873,0)
     N XMUS,XMFM,XMSTR,XMRI,XMTO,XMABORT
"BLD",23,1,874,0)
     ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
"BLD",23,1,875,0)
     ;All should be sent to XXX@VHA.DMIA the local PCTS Domain
"BLD",23,1,876,0)
     ;Edit these for your site.               <---Put your site's TWIX info
"BLD",23,1,877,0)
     S XMUS="XXXX" ;Local routing indicator   <---at this line
"BLD",23,1,878,0)
     S XMFM="YYYY" ;from line                 <---and this line
"BLD",23,1,879,0)
     I XMUS="XXXX"!(XMFM="YYYY") S %="FIX Routing codes !!!"_XMPCTS0("ERR")
"BLD",23,1,880,0)
     ;-------------------------------------------------------------
"BLD",23,1,881,0)
15. For those sites using class III ^ASKX820, you should edit routine
"BLD",23,1,882,0)
^ASKX820.  It calls ENT^XMAD1, an illegal entry point which no longer exists.
"BLD",23,1,883,0)
Replace it with a call to ENT1^XMD.
"BLD",23,1,884,0)
16. For those sites running class III WordManager, you will have to find the
"BLD",23,1,885,0)
    WordManager routine containing D OK^XMA22.  For version 5.01, it's in
"BLD",23,1,886,0)
    routine ^WMWTWM.  It may be in other routines in other versions.
"BLD",23,1,887,0)
    OK^XMA22 is an undocumented entry point into MailMan which no longer
"BLD",23,1,888,0)
    exists.  Edit the WordManager routine as follows:
"BLD",23,1,889,0)
Replace:
"BLD",23,1,890,0)
        S ^XMB(3.9,XMZ,2,0)="^^"_(J-1)_"^"_(J-1)
"BLD",23,1,891,0)
EDIT    ;
"BLD",23,1,892,0)
        S DIE="^XMB(3.9,",DA=XMZ,DR=".01;3" D ^DIE
"BLD",23,1,893,0)
REC     ;
"BLD",23,1,894,0)
        S XMMG=$P(^DIC(3,DUZ,0),"^",1) D DES^XMA21 G:X="^" EXIT
"BLD",23,1,895,0)
SEND    ;
"BLD",23,1,896,0)
        S XMR="",XMTEXT="^XMB(3.9,XMZ,2," D OK^XMA22,EN1^XMD
"BLD",23,1,897,0)
EXIT    U TRM S R7=ZR7,TRM=$I K ZR7,ZMM
"BLD",23,1,898,0)
with:
"BLD",23,1,899,0)
        S ^XMB(3.9,XMZ,2,0)="^^"_(J-1)_"^"_(J-1)
"BLD",23,1,900,0)
EDIT    ;
"BLD",23,1,901,0)
        ;S DIE="^XMB(3.9,",DA=XMZ,DR=".01;3" D ^DIE
"BLD",23,1,902,0)
REC     ;
"BLD",23,1,903,0)
        ;S XMMG=$P(^DIC(3,DUZ,0),"^",1) D DES^XMA21 G:X="^" EXIT
"BLD",23,1,904,0)
SEND    ;
"BLD",23,1,905,0)
        ;S XMR="",XMTEXT="^XMB(3.9,XMZ,2," D OK^XMA22,EN1^XMD
"BLD",23,1,906,0)
ERS     ; EDIT, REC, SEND
"BLD",23,1,907,0)
        N XMV,XMRESTR,XMINSTR,XMSUBJ,XMABORT
"BLD",23,1,908,0)
        S XMABORT=0
"BLD",23,1,909,0)
        S XMSUBJ=XMSUB
"BLD",23,1,910,0)
        D INIT^XMVVITAE
"BLD",23,1,911,0)
        D ES^XMJMSO
"BLD",23,1,912,0)
        D BODY^XMJMS(XMDUZ,XMZ,XMSUBJ,.XMRESTR,.XMABORT)
"BLD",23,1,913,0)
        I XMABORT D KILLMSG^XMXUTIL(XMZ) G EXIT
"BLD",23,1,914,0)
        D INIT^XMXADDR
"BLD",23,1,915,0)
        D TOWHOM^XMJMT(XMDUZ,"Send",.XMINSTR,.XMRESTR,.XMABORT)
"BLD",23,1,916,0)
        D:'XMABORT SENDMSG^XMJMSO(XMDUZ,XMZ,XMSUBJ,.XMINSTR,.XMRESTR,.XMABORT)
"BLD",23,1,917,0)
        D:XMABORT KILLMSG^XMXUTIL(XMZ)
"BLD",23,1,918,0)
        D CLEANUP^XMXADDR
"BLD",23,1,919,0)
EXIT    U TRM S R7=ZR7,TRM=$I K ZR7,ZMM
"BLD",23,1,920,0)
17. For those sites using class III ^BJMAIL*, you should edit routine ^BJMAIL
"BLD",23,1,921,0)
to correct its egregious violations of the SAC.  If you don't, MailMan will
"BLD",23,1,922,0)
will not function properly.  Once you have edited ^BJMAIL, you may delete
"BLD",23,1,923,0)
routine ^BJMAIL1, since it will no longer be used.  Edit ^BJMAIL as follows:
"BLD",23,1,924,0)
Replace:
"BLD",23,1,925,0)
MSG    Q:'$D(T)
"BLD",23,1,926,0)
  ... thru ...
"BLD",23,1,927,0)
WRITE  ;Write a message - not part of the main program.
"BLD",23,1,928,0)
With:
"BLD",23,1,929,0)
MSG     ;
"BLD",23,1,930,0)
        N XMINSTR
"BLD",23,1,931,0)
        Q:'$D(T)
"BLD",23,1,932,0)
        Q:'$O(T(0))
"BLD",23,1,933,0)
        D GROUP
"BLD",23,1,934,0)
        Q:$O(TO(""))=""
"BLD",23,1,935,0)
        I $G(CONFIRM) S XMINSTR("FLAGS")=$G(XMINSTR("FLAGS"))_"R"
"BLD",23,1,936,0)
        I $G(PRIO) S XMINSTR("FLAGS")=$G(XMINSTR("FLAGS"))_"P"
"BLD",23,1,937,0)
        I $G(INFO) S XMINSTR("FLAGS")=$G(XMINSTR("FLAGS"))_"I"
"BLD",23,1,938,0)
        I '$D(FROM) S FROM=.5
"BLD",23,1,939,0)
        D SETFROM^XMD(.FROM,.XMINSTR)
"BLD",23,1,940,0)
        I '$D(TITLE) S TITLE="Title not specified by sender"
"BLD",23,1,941,0)
        I $L(TITLE)>65 S TITLE=$E(TITLE,1,65)
"BLD",23,1,942,0)
        I $L(TITLE)<3 S TITLE=TITLE_"..."
"BLD",23,1,943,0)
        D SENDMSG^XMXAPI(FROM,TITLE,"T",.TO,.XMINSTR)
"BLD",23,1,944,0)
        K CONFIRM,FROM,GROUP,INFO,PRIO,T,TITLE,TO
"BLD",23,1,945,0)
        Q
"BLD",23,1,946,0)
GROUP   ;
"BLD",23,1,947,0)
        Q:$G(GROUP)=""
"BLD",23,1,948,0)
        I +GROUP=GROUP S:$D(^XMB(3.8,GROUP,0)) TO($P(^XMB(3.8,GROUP,0),U))="" Q
"BLD",23,1,949,0)
        S TO("G."_GROUP)=""
"BLD",23,1,950,0)
        Q
"BLD",23,1,951,0)
WRITE   ;Write a message - not part of the main program
"BLD",23,1,952,0)

"BLD",23,1,953,0)
 ----------------------------------------------------------------------
"BLD",23,1,954,0)
 NOTE: Once the POST-INIT stops, continue with steps 18 through the end.
"BLD",23,1,955,0)
 ----------------------------------------------------------------------
"BLD",23,1,956,0)

"BLD",23,1,957,0)
18.  If you disabled journaling in step 8, you should enable it again here.
"BLD",23,1,958,0)
18a. DSM SITES:
"BLD",23,1,959,0)
    >D ^%GLOMAN
"BLD",23,1,960,0)
    Global Management Utility
"BLD",23,1,961,0)
    Global > ^XMBX
"BLD",23,1,962,0)
              ====
"BLD",23,1,963,0)
    ^XMBX is currently defined
"BLD",23,1,964,0)

"BLD",23,1,965,0)
      1. Show GLOBAL Characteristics
"BLD",23,1,966,0)
      2. Change Access Privileges
"BLD",23,1,967,0)
      3. Change Journaling Capability
"BLD",23,1,968,0)
      4. Change DATA GROWTH AREA
"BLD",23,1,969,0)

"BLD",23,1,970,0)
    Enter option > 3
"BLD",23,1,971,0)
                   =
"BLD",23,1,972,0)
    Journaling [E=Enabled/D=Disabled]   <D>   E
"BLD",23,1,973,0)
                                              =
"BLD",23,1,974,0)
     - Characteristics updated
"BLD",23,1,975,0)

"BLD",23,1,976,0)
      1. Show GLOBAL Characteristics
"BLD",23,1,977,0)
      2. Change Access Privileges
"BLD",23,1,978,0)
      3. Change Journaling Capability
"BLD",23,1,979,0)
      4. Change DATA GROWTH AREA
"BLD",23,1,980,0)

"BLD",23,1,981,0)
    Enter option > <press return>
"BLD",23,1,982,0)
                   ==============
"BLD",23,1,983,0)
    Global > ^<press return>
"BLD",23,1,984,0)
              ==============
"BLD",23,1,985,0)
18b. CACHE SITES:
"BLD",23,1,986,0)
    %SYS>D ENABLE^%NOJRN
"BLD",23,1,987,0)
         ===============
"BLD",23,1,988,0)
18c. MSM SITES: Consult MSM documentation for how to enable journaling.
"BLD",23,1,989,0)
19. For those sites running POP3, you should load patch XM*7.1*71 immediately
"BLD",23,1,990,0)
    after loading this patch.  Other sites may load patch XM*7.1*71 at their
"BLD",23,1,991,0)
    leisure.
"BLD",23,1,992,0)
20. On the KIDS:Utilites menu, use the following option to review the
"BLD",23,1,993,0)
install:
"BLD",23,1,994,0)
    Install File Print
"BLD",23,1,995,0)
Review the automatic domain name changes which occurred during the post-init.
"BLD",23,1,996,0)
If there were any errors noted for a particular domain, that domain did not
"BLD",23,1,997,0)
have its new name added as a synonym.  (Error messages are preceded by ***,
"BLD",23,1,998,0)
and tell you what was wrong.)  You must correct the error manually and add
"BLD",23,1,999,0)
the synonym manually.  Remember, you are not to change any domain name.
"BLD",23,1,1000,0)
Just add the new name as a synonym. 
"BLD",23,1,1001,0)
===========================================================================
"BLD",23,4,0)
^9.64PA^4.2999^9
"BLD",23,4,3.6,0)
3.6
"BLD",23,4,3.6,2,0)
^9.641^3.6^1
"BLD",23,4,3.6,2,3.6,0)
BULLETIN  (File-top level)
"BLD",23,4,3.6,2,3.6,1,0)
^9.6411^12^2
"BLD",23,4,3.6,2,3.6,1,5,0)
RETENTION DAYS
"BLD",23,4,3.6,2,3.6,1,12,0)
PRIORITY?
"BLD",23,4,3.6,222)
y^y^p^^^^n
"BLD",23,4,3.7,0)
3.7
"BLD",23,4,3.7,222)
y^y^f^^^^n
"BLD",23,4,3.73,0)
3.73
"BLD",23,4,3.73,222)
y^y^f^^^^n
"BLD",23,4,3.8,0)
3.8
"BLD",23,4,3.8,2,0)
^9.641^3.811^5
"BLD",23,4,3.8,2,3.8,0)
MAIL GROUP  (File-top level)
"BLD",23,4,3.8,2,3.8,1,0)
^9.6411^.01^1
"BLD",23,4,3.8,2,3.8,1,.01,0)
NAME
"BLD",23,4,3.8,2,3.802,0)
AUTHORIZED SENDER  (sub-file)
"BLD",23,4,3.8,2,3.802,1,0)
^9.6411^.01^1
"BLD",23,4,3.8,2,3.802,1,.01,0)
AUTHORIZED SENDER
"BLD",23,4,3.8,2,3.81,0)
MEMBER  (sub-file)
"BLD",23,4,3.8,2,3.81,1,0)
^9.6411^1^2
"BLD",23,4,3.8,2,3.81,1,.01,0)
MEMBER
"BLD",23,4,3.8,2,3.81,1,1,0)
TYPE
"BLD",23,4,3.8,2,3.811,0)
MEMBER GROUP  (sub-file)
"BLD",23,4,3.8,2,3.811,1,0)
^9.6411^1^1
"BLD",23,4,3.8,2,3.811,1,1,0)
TYPE
"BLD",23,4,3.8,2,3.812,0)
MEMBERS - REMOTE  (sub-file)
"BLD",23,4,3.8,2,3.812,1,0)
^9.6411^.01^1
"BLD",23,4,3.8,2,3.812,1,.01,0)
REMOTE MEMBER
"BLD",23,4,3.8,222)
y^y^p^^^^n
"BLD",23,4,3.9,0)
3.9
"BLD",23,4,3.9,222)
y^y^f^^^^n
"BLD",23,4,4.2,0)
4.2
"BLD",23,4,4.2,2,0)
^9.641^4.23^2
"BLD",23,4,4.2,2,4.2,0)
DOMAIN  (File-top level)
"BLD",23,4,4.2,2,4.2,1,0)
^9.6411^.01^2
"BLD",23,4,4.2,2,4.2,1,.01,0)
NAME
"BLD",23,4,4.2,2,4.2,1,1,0)
FLAGS
"BLD",23,4,4.2,2,4.23,0)
SYNONYM  (sub-file)
"BLD",23,4,4.2,2,4.23,1,0)
^9.6411^.01^1
"BLD",23,4,4.2,2,4.23,1,.01,0)
SYNONYM
"BLD",23,4,4.2,222)
y^y^p^^^^n
"BLD",23,4,4.2997,0)
4.2997
"BLD",23,4,4.2997,2,0)
^9.641^4.2997^1
"BLD",23,4,4.2997,2,4.2997,0)
REMOTE USER DIRECTORY  (File-top level)
"BLD",23,4,4.2997,2,4.2997,1,0)
^9.6411^99^1
"BLD",23,4,4.2997,2,4.2997,1,99,0)
NETWORK ADDRESS
"BLD",23,4,4.2997,222)
y^y^p^^^^n
"BLD",23,4,4.2999,0)
4.2999
"BLD",23,4,4.2999,2,0)
^9.641^4.29992^1
"BLD",23,4,4.2999,2,4.29992,0)
XMIT AUDIT  (sub-file)
"BLD",23,4,4.2999,2,4.29992,1,0)
^9.6411^2^1
"BLD",23,4,4.2999,2,4.29992,1,2,0)
XMIT AUDIT ERROR
"BLD",23,4,4.2999,222)
y^y^p^^^^n
"BLD",23,4,4.3,0)
4.3
"BLD",23,4,4.3,222)
y^y^f^^^^n
"BLD",23,4,"APDD",3.6,3.6)

"BLD",23,4,"APDD",3.6,3.6,5)

"BLD",23,4,"APDD",3.6,3.6,12)

"BLD",23,4,"APDD",3.8,3.8)

"BLD",23,4,"APDD",3.8,3.8,.01)

"BLD",23,4,"APDD",3.8,3.802)

"BLD",23,4,"APDD",3.8,3.802,.01)

"BLD",23,4,"APDD",3.8,3.81)

"BLD",23,4,"APDD",3.8,3.81,.01)

"BLD",23,4,"APDD",3.8,3.81,1)

"BLD",23,4,"APDD",3.8,3.811)

"BLD",23,4,"APDD",3.8,3.811,1)

"BLD",23,4,"APDD",3.8,3.812)

"BLD",23,4,"APDD",3.8,3.812,.01)

"BLD",23,4,"APDD",4.2,4.2)

"BLD",23,4,"APDD",4.2,4.2,.01)

"BLD",23,4,"APDD",4.2,4.2,1)

"BLD",23,4,"APDD",4.2,4.23)

"BLD",23,4,"APDD",4.2,4.23,.01)

"BLD",23,4,"APDD",4.2997,4.2997)

"BLD",23,4,"APDD",4.2997,4.2997,99)

"BLD",23,4,"APDD",4.2999,4.29992)

"BLD",23,4,"APDD",4.2999,4.29992,2)

"BLD",23,4,"B",3.6,3.6)

"BLD",23,4,"B",3.7,3.7)

"BLD",23,4,"B",3.73,3.73)

"BLD",23,4,"B",3.8,3.8)

"BLD",23,4,"B",3.9,3.9)

"BLD",23,4,"B",4.2,4.2)

"BLD",23,4,"B",4.2997,4.2997)

"BLD",23,4,"B",4.2999,4.2999)

"BLD",23,4,"B",4.3,4.3)

"BLD",23,"INI")
XMYPRE2
"BLD",23,"INIT")
XMYPOST9
"BLD",23,"KRN",0)
^9.67PA^19^12
"BLD",23,"KRN",.4,0)
.4
"BLD",23,"KRN",.401,0)
.401
"BLD",23,"KRN",.402,0)
.402
"BLD",23,"KRN",.403,0)
.403
"BLD",23,"KRN",.5,0)
.5
"BLD",23,"KRN",.5,"NM",0)
^9.68A^1^1
"BLD",23,"KRN",.5,"NM",1,0)
XM NEXT SEQUENCE NUMBER^^0
"BLD",23,"KRN",.5,"NM","B","XM NEXT SEQUENCE NUMBER",1)

"BLD",23,"KRN",.84,0)
.84
"BLD",23,"KRN",.84,"NM",0)
^9.68A^15^15
"BLD",23,"KRN",.84,"NM",1,0)
34001^^0
"BLD",23,"KRN",.84,"NM",2,0)
34002^^0
"BLD",23,"KRN",.84,"NM",3,0)
34003^^0
"BLD",23,"KRN",.84,"NM",4,0)
34004^^0
"BLD",23,"KRN",.84,"NM",5,0)
34003.1^^0
"BLD",23,"KRN",.84,"NM",6,0)
34005^^0
"BLD",23,"KRN",.84,"NM",7,0)
34006^^0
"BLD",23,"KRN",.84,"NM",8,0)
34007^^0
"BLD",23,"KRN",.84,"NM",9,0)
34007.1^^0
"BLD",23,"KRN",.84,"NM",10,0)
34008^^0
"BLD",23,"KRN",.84,"NM",11,0)
34009^^0
"BLD",23,"KRN",.84,"NM",12,0)
34010^^0
"BLD",23,"KRN",.84,"NM",13,0)
34011^^0
"BLD",23,"KRN",.84,"NM",14,0)
34012^^0
"BLD",23,"KRN",.84,"NM",15,0)
34013^^0
"BLD",23,"KRN",.84,"NM","B",34001,1)

"BLD",23,"KRN",.84,"NM","B",34002,2)

"BLD",23,"KRN",.84,"NM","B",34003,3)

"BLD",23,"KRN",.84,"NM","B",34003.1,5)

"BLD",23,"KRN",.84,"NM","B",34004,4)

"BLD",23,"KRN",.84,"NM","B",34005,6)

"BLD",23,"KRN",.84,"NM","B",34006,7)

"BLD",23,"KRN",.84,"NM","B",34007,8)

"BLD",23,"KRN",.84,"NM","B",34007.1,9)

"BLD",23,"KRN",.84,"NM","B",34008,10)

"BLD",23,"KRN",.84,"NM","B",34009,11)

"BLD",23,"KRN",.84,"NM","B",34010,12)

"BLD",23,"KRN",.84,"NM","B",34011,13)

"BLD",23,"KRN",.84,"NM","B",34012,14)

"BLD",23,"KRN",.84,"NM","B",34013,15)

"BLD",23,"KRN",3.6,0)
3.6
"BLD",23,"KRN",3.6,"NM",0)
^9.68A^8^7
"BLD",23,"KRN",3.6,"NM",1,0)
XM SEND ERR RECIPIENT^^0
"BLD",23,"KRN",3.6,"NM",2,0)
XM SEND ERR SERVER MSG^^0
"BLD",23,"KRN",3.6,"NM",3,0)
XM SEND ERR REMOTE MSG ID^^0
"BLD",23,"KRN",3.6,"NM",4,0)
XM SEND ERR MSG^^0
"BLD",23,"KRN",3.6,"NM",6,0)
XM FWD ADDRESS DELETE^^0
"BLD",23,"KRN",3.6,"NM",7,0)
XM GROUP ERROR^^0
"BLD",23,"KRN",3.6,"NM",8,0)
XMRDACK^^0
"BLD",23,"KRN",3.6,"NM","B","XM FWD ADDRESS DELETE",6)

"BLD",23,"KRN",3.6,"NM","B","XM GROUP ERROR",7)

"BLD",23,"KRN",3.6,"NM","B","XM SEND ERR MSG",4)

"BLD",23,"KRN",3.6,"NM","B","XM SEND ERR RECIPIENT",1)

"BLD",23,"KRN",3.6,"NM","B","XM SEND ERR REMOTE MSG ID",3)

"BLD",23,"KRN",3.6,"NM","B","XM SEND ERR SERVER MSG",2)

"BLD",23,"KRN",3.6,"NM","B","XMRDACK",8)

"BLD",23,"KRN",3.8,0)
3.8
"BLD",23,"KRN",9.2,0)
9.2
"BLD",23,"KRN",9.2,"NM",0)
^9.68A^315^308
"BLD",23,"KRN",9.2,"NM",1)
^^^
"BLD",23,"KRN",9.2,"NM",1,0)
XM-API-DISPLAYS-NUMBER^^1
"BLD",23,"KRN",9.2,"NM",2)
^^^
"BLD",23,"KRN",9.2,"NM",2,0)
XM-API-FEATURES^^1
"BLD",23,"KRN",9.2,"NM",3)
^^^
"BLD",23,"KRN",9.2,"NM",3,0)
XM-API-FORWARD-MESSAGE^^1
"BLD",23,"KRN",9.2,"NM",4)
^^^
"BLD",23,"KRN",9.2,"NM",4,0)
XM-API-MAIL-GROUPS^^1
"BLD",23,"KRN",9.2,"NM",5)
^^^
"BLD",23,"KRN",9.2,"NM",5,0)
XM-API-MESSAGE-QUERY^^1
"BLD",23,"KRN",9.2,"NM",6)
^^^
"BLD",23,"KRN",9.2,"NM",6,0)
XM-API-REPLYING^^1
"BLD",23,"KRN",9.2,"NM",7)
^^^
"BLD",23,"KRN",9.2,"NM",7,0)
XM-API-REQUESTING-INFORMATION^^1
"BLD",23,"KRN",9.2,"NM",8)
^^^
"BLD",23,"KRN",9.2,"NM",8,0)
XM-CONTROLLED-PRIORITY-MAIL^^1
"BLD",23,"KRN",9.2,"NM",9)
^^^
"BLD",23,"KRN",9.2,"NM",9,0)
XM-COORDINATORS^^1
"BLD",23,"KRN",9.2,"NM",10)
^^^
"BLD",23,"KRN",9.2,"NM",10,0)
XM-INQUIRY^^1
"BLD",23,"KRN",9.2,"NM",11)
^^^
"BLD",23,"KRN",9.2,"NM",11,0)
XM-INTERNAL-MESSAGE-NUMBER^^1
"BLD",23,"KRN",9.2,"NM",12)
^^^
"BLD",23,"KRN",9.2,"NM",12,0)
XM-LOCAL-RESPONSES^^1
"BLD",23,"KRN",9.2,"NM",13)
^^^
"BLD",23,"KRN",9.2,"NM",13,0)
XM-NEW-FEATURES^^1
"BLD",23,"KRN",9.2,"NM",14)
^^^
"BLD",23,"KRN",9.2,"NM",14,0)
XM-NEW-FEATURES-7.0^^1
"BLD",23,"KRN",9.2,"NM",15)
^^^
"BLD",23,"KRN",9.2,"NM",15,0)
XM-NEW-MAIL-LIST^^1
"BLD",23,"KRN",9.2,"NM",16)
^^^
"BLD",23,"KRN",9.2,"NM",16,0)
XM-NEW-VERSION3.1FEATURES^^1
"BLD",23,"KRN",9.2,"NM",17)
^^^
"BLD",23,"KRN",9.2,"NM",17,0)
XM-OUTPUT^^1
"BLD",23,"KRN",9.2,"NM",18)
^^^
"BLD",23,"KRN",9.2,"NM",18,0)
XM-P-MESSAGE^^1
"BLD",23,"KRN",9.2,"NM",19)
^^^
"BLD",23,"KRN",9.2,"NM",19,0)
XM-Q-DELETE^^1
"BLD",23,"KRN",9.2,"NM",20)
^^^
"BLD",23,"KRN",9.2,"NM",20,0)
XM-Q-DISAPPEARED^^1
"BLD",23,"KRN",9.2,"NM",21)
^^^
"BLD",23,"KRN",9.2,"NM",21,0)
XM-Q-INTERRUPT^^1
"BLD",23,"KRN",9.2,"NM",22)
^^^
"BLD",23,"KRN",9.2,"NM",22,0)
XM-Q-LOOKUP^^1
"BLD",23,"KRN",9.2,"NM",23)
^^^
"BLD",23,"KRN",9.2,"NM",23,0)
XM-Q-RECAL^^1
"BLD",23,"KRN",9.2,"NM",24)
^^^
"BLD",23,"KRN",9.2,"NM",24,0)
XM-Q-REMOVE^^1
"BLD",23,"KRN",9.2,"NM",25)
^^^
"BLD",23,"KRN",9.2,"NM",25,0)
XM-Q-REPLIES^^1
"BLD",23,"KRN",9.2,"NM",26)
^^^
"BLD",23,"KRN",9.2,"NM",26,0)
XM-QUESTIONS^^1
"BLD",23,"KRN",9.2,"NM",27)
^^^
"BLD",23,"KRN",9.2,"NM",27,0)
XM-SENDER-INFORMATION-ONLY^^1
"BLD",23,"KRN",9.2,"NM",28)
^^^
"BLD",23,"KRN",9.2,"NM",28,0)
XM-SUGGESTION^^1
"BLD",23,"KRN",9.2,"NM",29)
^^^
"BLD",23,"KRN",9.2,"NM",29,0)
XMANSWER^^1
"BLD",23,"KRN",9.2,"NM",30)
^^^
"BLD",23,"KRN",9.2,"NM",30,0)
XMEDIT^^1
"BLD",23,"KRN",9.2,"NM",31)
^^^
"BLD",23,"KRN",9.2,"NM",31,0)
XMGROUPMEMBER^^1
"BLD",23,"KRN",9.2,"NM",32)
^^^
"BLD",23,"KRN",9.2,"NM",32,0)
XMHELP2^^1
"BLD",23,"KRN",9.2,"NM",33)
^^^
"BLD",23,"KRN",9.2,"NM",33,0)
XMJOIN^^1
"BLD",23,"KRN",9.2,"NM",34)
^^^
"BLD",23,"KRN",9.2,"NM",34,0)
XMMAILGROUP^^1
"BLD",23,"KRN",9.2,"NM",35)
^^^
"BLD",23,"KRN",9.2,"NM",35,0)
XMMG-TYPE^^1
"BLD",23,"KRN",9.2,"NM",36)
^^^
"BLD",23,"KRN",9.2,"NM",36,0)
XMNEW^^1
"BLD",23,"KRN",9.2,"NM",37)
^^^
"BLD",23,"KRN",9.2,"NM",37,0)
XMPACK-COMP^^1
"BLD",23,"KRN",9.2,"NM",38)
^^^
"BLD",23,"KRN",9.2,"NM",38,0)
XMPACK-ENHANCED^^1
"BLD",23,"KRN",9.2,"NM",39)
^^^
"BLD",23,"KRN",9.2,"NM",39,0)
XMPACK-GLO^^1
"BLD",23,"KRN",9.2,"NM",40)
^^^
"BLD",23,"KRN",9.2,"NM",40,0)
XMPACK-INSTALL^^1
"BLD",23,"KRN",9.2,"NM",41)
^^^
"BLD",23,"KRN",9.2,"NM",41,0)
XMPACK-PACKAGE^^1
"BLD",23,"KRN",9.2,"NM",42)
^^^
"BLD",23,"KRN",9.2,"NM",42,0)
XMPACK-PRNT^^1
"BLD",23,"KRN",9.2,"NM",43)
^^^
"BLD",23,"KRN",9.2,"NM",43,0)
XMPACK-ROU^^1
"BLD",23,"KRN",9.2,"NM",44)
^^^
"BLD",23,"KRN",9.2,"NM",44,0)
XMPACK-SUM^^1
"BLD",23,"KRN",9.2,"NM",45)
^^^
"BLD",23,"KRN",9.2,"NM",45,0)
XMR-ACT-BACK^^1
"BLD",23,"KRN",9.2,"NM",46)
^^^
"BLD",23,"KRN",9.2,"NM",46,0)
XMR-ACT-COPY^^1
"BLD",23,"KRN",9.2,"NM",47)
^^^
"BLD",23,"KRN",9.2,"NM",47,0)
XMR-ACT-COPYA^^1
"BLD",23,"KRN",9.2,"NM",48)
^^^
"BLD",23,"KRN",9.2,"NM",48,0)
XMR-ACT-COPYB^^1
"BLD",23,"KRN",9.2,"NM",49)
^^^
"BLD",23,"KRN",9.2,"NM",49,0)
XMR-ACT-COPYC^^1
"BLD",23,"KRN",9.2,"NM",50)
^^^
"BLD",23,"KRN",9.2,"NM",50,0)
XMR-ACT-COPYD^^1
"BLD",23,"KRN",9.2,"NM",51)
^^^
"BLD",23,"KRN",9.2,"NM",51,0)
XMR-ACT-DELETE^^1
"BLD",23,"KRN",9.2,"NM",52)
^^^
"BLD",23,"KRN",9.2,"NM",52,0)
XMR-ACT-E-SELECT^^1
"BLD",23,"KRN",9.2,"NM",53)
^^^
"BLD",23,"KRN",9.2,"NM",53,0)
XMR-ACT-EDIT^^1
"BLD",23,"KRN",9.2,"NM",54)
^^^
"BLD",23,"KRN",9.2,"NM",54,0)
XMR-ACT-EDIT2^^1
"BLD",23,"KRN",9.2,"NM",55)
^^^
"BLD",23,"KRN",9.2,"NM",55,0)
XMR-ACT-EDIT3^^1
"BLD",23,"KRN",9.2,"NM",56)
^^^
"BLD",23,"KRN",9.2,"NM",56,0)
XMR-ACT-FORWARD^^1
"BLD",23,"KRN",9.2,"NM",57)
^^^
"BLD",23,"KRN",9.2,"NM",57,0)
XMR-ACT-NEW^^1
"BLD",23,"KRN",9.2,"NM",58)
^^^
"BLD",23,"KRN",9.2,"NM",58,0)
XMR-ACT-NEW LATER (TICKLER)^^1
"BLD",23,"KRN",9.2,"NM",59)
^^^
"BLD",23,"KRN",9.2,"NM",59,0)
XMR-ACT-PRINT^^1
"BLD",23,"KRN",9.2,"NM",60)
^^^
"BLD",23,"KRN",9.2,"NM",60,0)
XMR-ACT-QUERY^^1
"BLD",23,"KRN",9.2,"NM",61)
^^^
"BLD",23,"KRN",9.2,"NM",61,0)
XMR-ACT-REPLY^^1
"BLD",23,"KRN",9.2,"NM",62)
^^^
"BLD",23,"KRN",9.2,"NM",62,0)
XMR-ACT-SAVE^^1
"BLD",23,"KRN",9.2,"NM",63)
^^^
"BLD",23,"KRN",9.2,"NM",63,0)
XMR-ACT-TERM^^1
"BLD",23,"KRN",9.2,"NM",64)
^^^
"BLD",23,"KRN",9.2,"NM",64,0)
XMR-ACT-VAPORIZE^^1
"BLD",23,"KRN",9.2,"NM",65)
^^^
"BLD",23,"KRN",9.2,"NM",65,0)
XMR-ACT-WRITE^^1
"BLD",23,"KRN",9.2,"NM",66)
^^^
"BLD",23,"KRN",9.2,"NM",66,0)
XMR-ACTION^^1
"BLD",23,"KRN",9.2,"NM",67)
^^^
"BLD",23,"KRN",9.2,"NM",67,0)
XMR-ACTION-PRINT-W/O-HEADER^^1
"BLD",23,"KRN",9.2,"NM",68)
^^^
"BLD",23,"KRN",9.2,"NM",68,0)
XMR-ACTION-PRIORITY-TOGGLE^^1
"BLD",23,"KRN",9.2,"NM",69)
^^^
"BLD",23,"KRN",9.2,"NM",69,0)
XMR-ACTION-VAPORIZE^^1
"BLD",23,"KRN",9.2,"NM",70)
^^^
"BLD",23,"KRN",9.2,"NM",70,0)
XMR-ACTION2^^1
"BLD",23,"KRN",9.2,"NM",71)
^^^
"BLD",23,"KRN",9.2,"NM",71,0)
XMR-BASKET^^1
"BLD",23,"KRN",9.2,"NM",72)
^^^
"BLD",23,"KRN",9.2,"NM",72,0)
XMR-MESS-HEADER^^1
"BLD",23,"KRN",9.2,"NM",73)
^^^
"BLD",23,"KRN",9.2,"NM",73,0)
XMR-MESS-KEYWORD^^1
"BLD",23,"KRN",9.2,"NM",74)
^^^
"BLD",23,"KRN",9.2,"NM",74,0)
XMR-MESS-RANGE^^1
"BLD",23,"KRN",9.2,"NM",75)
^^^
"BLD",23,"KRN",9.2,"NM",75,0)
XMR-MESSAGE^^1
"BLD",23,"KRN",9.2,"NM",76)
^^^
"BLD",23,"KRN",9.2,"NM",76,0)
XMR-RES^^1
"BLD",23,"KRN",9.2,"NM",77)
^^^
"BLD",23,"KRN",9.2,"NM",77,0)
XMR-SEARCH^^1
"BLD",23,"KRN",9.2,"NM",78)
^^^
"BLD",23,"KRN",9.2,"NM",78,0)
XMREAD^^1
"BLD",23,"KRN",9.2,"NM",79)
^^^
"BLD",23,"KRN",9.2,"NM",79,0)
XMS-ADDRESS-CC^^1
"BLD",23,"KRN",9.2,"NM",80)
^^^
"BLD",23,"KRN",9.2,"NM",80,0)
XMS-ADDRESS-INFO^^1
"BLD",23,"KRN",9.2,"NM",81)
^^^
"BLD",23,"KRN",9.2,"NM",81,0)
XMS-ADDRESS-THRU^^1
"BLD",23,"KRN",9.2,"NM",82)
^^^
"BLD",23,"KRN",9.2,"NM",82,0)
XMS-PRIORITY^^1
"BLD",23,"KRN",9.2,"NM",83)
^^^
"BLD",23,"KRN",9.2,"NM",83,0)
XMS-RECIP-CONFIDENT^^1
"BLD",23,"KRN",9.2,"NM",84)
^^^
"BLD",23,"KRN",9.2,"NM",84,0)
XMS-RECIPIENT^^1
"BLD",23,"KRN",9.2,"NM",85)
^^^
"BLD",23,"KRN",9.2,"NM",85,0)
XMS-TEXT^^1
"BLD",23,"KRN",9.2,"NM",86)
^^^
"BLD",23,"KRN",9.2,"NM",86,0)
XMS-TRANS^^1
"BLD",23,"KRN",9.2,"NM",87)
^^^
"BLD",23,"KRN",9.2,"NM",87,0)
XMS-TRANS-CONFIRM^^1
"BLD",23,"KRN",9.2,"NM",88)
^^^
"BLD",23,"KRN",9.2,"NM",88,0)
XMS-TRANS-EDIT^^1
"BLD",23,"KRN",9.2,"NM",89)
^^^
"BLD",23,"KRN",9.2,"NM",89,0)
XMS-TRANS-SCR-HINT^^1
"BLD",23,"KRN",9.2,"NM",90)
^^^
"BLD",23,"KRN",9.2,"NM",90,0)
XMS-TRANS-SCR-PASS^^1
"BLD",23,"KRN",9.2,"NM",91)
^^^
"BLD",23,"KRN",9.2,"NM",91,0)
XMS-TRANS-SCRAMBLE^^1
"BLD",23,"KRN",9.2,"NM",92)
^^^
"BLD",23,"KRN",9.2,"NM",92,0)
XMSEND^^1
"BLD",23,"KRN",9.2,"NM",93)
^^^
"BLD",23,"KRN",9.2,"NM",93,0)
XMSHARE^^1
"BLD",23,"KRN",9.2,"NM",94)
^^^
"BLD",23,"KRN",9.2,"NM",94,0)
XMUOPT-ASKBASKET^^1
"BLD",23,"KRN",9.2,"NM",95)
^^^
"BLD",23,"KRN",9.2,"NM",95,0)
XMUOPT-BANNER^^1
"BLD",23,"KRN",9.2,"NM",96)
^^^
"BLD",23,"KRN",9.2,"NM",96,0)
XMUOPT-BML^^1
"BLD",23,"KRN",9.2,"NM",97)
^^^
"BLD",23,"KRN",9.2,"NM",97,0)
XMUOPT-INTRO^^1
"BLD",23,"KRN",9.2,"NM",98)
^^^
"BLD",23,"KRN",9.2,"NM",98,0)
XMUOPT-SUR-ASSIGN^^1
"BLD",23,"KRN",9.2,"NM",99)
^^^
"BLD",23,"KRN",9.2,"NM",99,0)
XMUOPT-SUR-ASSUME^^1
"BLD",23,"KRN",9.2,"NM",100)
^^^
"BLD",23,"KRN",9.2,"NM",100,0)
XMUOPT-SURROGATE^^1
"BLD",23,"KRN",9.2,"NM",101)
^^^
"BLD",23,"KRN",9.2,"NM",101,0)
XMUSEROPT^^1
"BLD",23,"KRN",9.2,"NM",102,0)
XM-I-S-MAX DIGITS FOR MSG NUM^^0
"BLD",23,"KRN",9.2,"NM",103,0)
XM-I-S-BIG GROUP SIZE^^0
"BLD",23,"KRN",9.2,"NM",104,0)
XM-I-S-MESSAGE LINE LIMIT^^0
"BLD",23,"KRN",9.2,"NM",105,0)
XM-I-S-SITE PARAMETERS^^0
"BLD",23,"KRN",9.2,"NM",106,0)
XM-U-A-ADDRESS^^0
"BLD",23,"KRN",9.2,"NM",107,0)
XM-U-A-CC^^0
"BLD",23,"KRN",9.2,"NM",108,0)
XM-U-A-GROUP LARGE^^0
"BLD",23,"KRN",9.2,"NM",109,0)
XM-U-A-GROUP LARGE-2^^0
"BLD",23,"KRN",9.2,"NM",110,0)
XMPACKMAN^^0
"BLD",23,"KRN",9.2,"NM",112,0)
XMHELP-MANUAL^^0
"BLD",23,"KRN",9.2,"NM",113,0)
XM-U-A-INFO ONLY^^0
"BLD",23,"KRN",9.2,"NM",114,0)
XM-U-A-LOCAL USER NAME^^0
"BLD",23,"KRN",9.2,"NM",115,0)
XM-U-A-LOCAL USER NAME-2^^0
"BLD",23,"KRN",9.2,"NM",116,0)
XM-U-A-STAGGER DELIVERY^^0
"BLD",23,"KRN",9.2,"NM",117,0)
XM-U-A-STAGGER DELIVERY-2^^0
"BLD",23,"KRN",9.2,"NM",118,0)
XM-U-B-BASKET CONTENTS LIST^^0
"BLD",23,"KRN",9.2,"NM",119,0)
XM-U-B-BASKET NAME^^0
"BLD",23,"KRN",9.2,"NM",120,0)
XM-U-B-BASKET NAME CHANGE^^0
"BLD",23,"KRN",9.2,"NM",121,0)
XM-U-B-BASKET SELECT^^0
"BLD",23,"KRN",9.2,"NM",122,0)
XM-U-B-CHANGE DETAIL^^0
"BLD",23,"KRN",9.2,"NM",123,0)
XM-U-B-FILTER^^0
"BLD",23,"KRN",9.2,"NM",124,0)
XM-U-B-NAVIGATE CLASSIC^^0
"BLD",23,"KRN",9.2,"NM",125,0)
XM-U-B-NAVIGATE FULL SCREEN^^0
"BLD",23,"KRN",9.2,"NM",126,0)
XM-U-B-NEW MAIL LIST^^0
"BLD",23,"KRN",9.2,"NM",127,0)
XM-U-B-OPPOSITE TOGGLE^^0
"BLD",23,"KRN",9.2,"NM",128,0)
XM-U-B-READER^^0
"BLD",23,"KRN",9.2,"NM",130,0)
XM-U-B-READER DETAILED^^0
"BLD",23,"KRN",9.2,"NM",131,0)
XM-U-B-READER DETAILED LIST^^0
"BLD",23,"KRN",9.2,"NM",132,0)
XM-U-B-READER DIFF^^0
"BLD",23,"KRN",9.2,"NM",133,0)
XM-U-B-READER DIFF-2^^0
"BLD",23,"KRN",9.2,"NM",134,0)
XM-U-B-READER DIFF-3^^0
"BLD",23,"KRN",9.2,"NM",135,0)
XM-U-B-READER FULL SCREEN^^0
"BLD",23,"KRN",9.2,"NM",136,0)
XM-U-B-READER SUMMARY^^0
"BLD",23,"KRN",9.2,"NM",137,0)
XM-U-B-RESEQUENCE MESSAGES^^0
"BLD",23,"KRN",9.2,"NM",138,0)
XM-U-B-XMIT PRIORITY TOGGLE^^0
"BLD",23,"KRN",9.2,"NM",139,0)
XM-U-B-XMIT PRIORITY TOGGLE-2^^0
"BLD",23,"KRN",9.2,"NM",140,0)
XM-U-B-ZOOM TOGGLE^^0
"BLD",23,"KRN",9.2,"NM",141,0)
XM-U-BO-CLASSIC^^0
"BLD",23,"KRN",9.2,"NM",142,0)
XM-U-BO-CLASSIC-2^^0
"BLD",23,"KRN",9.2,"NM",143,0)
XM-U-BO-FULL SCREEN^^0
"BLD",23,"KRN",9.2,"NM",144,0)
XM-U-BO-FULL SCREEN LIST^^0
"BLD",23,"KRN",9.2,"NM",145,0)
XM-U-BO-FULL SCREEN-2^^0
"BLD",23,"KRN",9.2,"NM",146,0)
XM-U-H-GROUP^^0
"BLD",23,"KRN",9.2,"NM",147,0)
XM-U-H-GROUP-2^^0
"BLD",23,"KRN",9.2,"NM",148,0)
XM-U-H-GROUP-3^^0
"BLD",23,"KRN",9.2,"NM",149,0)
XM-U-H-GROUP-4^^0
"BLD",23,"KRN",9.2,"NM",150,0)
XM-U-H-Q DELETE^^0
"BLD",23,"KRN",9.2,"NM",151,0)
XM-U-H-Q DISAPPEARED^^0
"BLD",23,"KRN",9.2,"NM",152,0)
XM-U-H-Q INTERRUPT^^0
"BLD",23,"KRN",9.2,"NM",153,0)
XM-U-H-Q LOOKUP^^0
"BLD",23,"KRN",9.2,"NM",154,0)
XM-U-H-Q RECALL^^0
"BLD",23,"KRN",9.2,"NM",155,0)
XM-U-H-Q REMOVE^^0
"BLD",23,"KRN",9.2,"NM",156,0)
XM-U-H-Q REPLIES^^0
"BLD",23,"KRN",9.2,"NM",157,0)
XM-U-H-QUESTIONS^^0
"BLD",23,"KRN",9.2,"NM",158,0)
XM-U-H-USER^^0
"BLD",23,"KRN",9.2,"NM",159,0)
XM-U-I-EDITOR FM LINE^^0
"BLD",23,"KRN",9.2,"NM",160,0)
XM-U-I-EDITOR FM SCREEN^^0
"BLD",23,"KRN",9.2,"NM",161,0)
XM-U-I-GROUP^^0
"BLD",23,"KRN",9.2,"NM",162,0)
XM-U-I-GROUP COORDINATOR^^0
"BLD",23,"KRN",9.2,"NM",163,0)
XM-U-I-GROUP MEMBER^^0
"BLD",23,"KRN",9.2,"NM",164,0)
XM-U-I-GROUP-2^^0
"BLD",23,"KRN",9.2,"NM",165,0)
XM-U-I-SHARED MAIL^^0
"BLD",23,"KRN",9.2,"NM",166,0)
XM-U-I-SURROGATE^^0
"BLD",23,"KRN",9.2,"NM",167,0)
XM-U-I-SURROGATE BECOME^^0
"BLD",23,"KRN",9.2,"NM",168,0)
XM-U-I-SURROGATE-2^^0
"BLD",23,"KRN",9.2,"NM",169,0)
XM-U-I-SURROGATE-3^^0
"BLD",23,"KRN",9.2,"NM",170,0)
XM-U-I-SURROGATE-4^^0
"BLD",23,"KRN",9.2,"NM",171,0)
XM-U-K-PACKMAN COMPARE^^0
"BLD",23,"KRN",9.2,"NM",172,0)
XM-U-K-PACKMAN INSTALL^^0
"BLD",23,"KRN",9.2,"NM",173,0)
XM-U-K-PACKMAN LOAD GLOBALS^^0
"BLD",23,"KRN",9.2,"NM",174,0)
XM-U-K-PACKMAN LOAD PACKAGE^^0
"BLD",23,"KRN",9.2,"NM",175,0)
XM-U-K-PACKMAN LOAD ROUTINES^^0
"BLD",23,"KRN",9.2,"NM",176,0)
XM-U-K-PACKMAN PRINT^^0
"BLD",23,"KRN",9.2,"NM",177,0)
XM-U-K-PACKMAN SUMMARIZE^^0
"BLD",23,"KRN",9.2,"NM",178,0)
XM-U-M-ANSWER^^0
"BLD",23,"KRN",9.2,"NM",179,0)
XM-U-M-BACKUP^^0
"BLD",23,"KRN",9.2,"NM",180,0)
XM-U-M-BACKUP BEFORE SENDING^^0
"BLD",23,"KRN",9.2,"NM",181,0)
XM-U-M-CHOOSE RANGE^^0
"BLD",23,"KRN",9.2,"NM",182,0)
XM-U-M-CHOOSE RESPONSES^^0
"BLD",23,"KRN",9.2,"NM",183,0)
XM-U-M-CHOOSE SELECT^^0
"BLD",23,"KRN",9.2,"NM",184,0)
XM-U-M-CHOOSE SELECT-2^^0
"BLD",23,"KRN",9.2,"NM",185,0)
XM-U-M-CLOSED^^0
"BLD",23,"KRN",9.2,"NM",186,0)
XM-U-M-CONFIDENTIAL^^0
"BLD",23,"KRN",9.2,"NM",187,0)
XM-U-M-CONFIRM RECEIPT^^0
"BLD",23,"KRN",9.2,"NM",188,0)
XM-U-M-COPY^^0
"BLD",23,"KRN",9.2,"NM",189,0)
XM-U-M-COPY-2^^0
"BLD",23,"KRN",9.2,"NM",190,0)
XM-U-M-DELETE^^0
"BLD",23,"KRN",9.2,"NM",191,0)
XM-U-M-DELETE-2^^0
"BLD",23,"KRN",9.2,"NM",192,0)
XM-U-M-DELETE-3^^0
"BLD",23,"KRN",9.2,"NM",193,0)
XM-U-M-DELIVERY BASKET SET^^0
"BLD",23,"KRN",9.2,"NM",194,0)
XM-U-M-EDIT RECIPIENTS^^0
"BLD",23,"KRN",9.2,"NM",195,0)
XM-U-M-EDIT SUBJECT^^0
"BLD",23,"KRN",9.2,"NM",196,0)
XM-U-M-EDIT TEXT^^0
"BLD",23,"KRN",9.2,"NM",197,0)
XM-U-M-FORWARD^^0
"BLD",23,"KRN",9.2,"NM",198,0)
XM-U-M-FORWARD-2^^0
"BLD",23,"KRN",9.2,"NM",199,0)
XM-U-M-INFO ONLY^^0
"BLD",23,"KRN",9.2,"NM",200,0)
XM-U-M-LATER^^0
"BLD",23,"KRN",9.2,"NM",201,0)
XM-U-M-LATER-2^^0
"BLD",23,"KRN",9.2,"NM",202,0)
XM-U-M-LATER-3^^0
"BLD",23,"KRN",9.2,"NM",203,0)
XM-U-M-LATERED MESSAGE CHANGE^^0
"BLD",23,"KRN",9.2,"NM",204,0)
XM-U-M-LATERED MESSAGE REPORT^^0
"BLD",23,"KRN",9.2,"NM",205,0)
XM-U-M-MESSAGE HEADER^^0
"BLD",23,"KRN",9.2,"NM",206,0)
XM-U-M-NEW^^0
"BLD",23,"KRN",9.2,"NM",207,0)
XM-U-M-PRINT^^0
"BLD",23,"KRN",9.2,"NM",209,0)
XM-U-M-PRINT HEADER^^0
"BLD",23,"KRN",9.2,"NM",210,0)
XM-U-M-PRINT NO HEADER^^0
"BLD",23,"KRN",9.2,"NM",211,0)
XM-U-M-PRINT NO HEADER-2^^0
"BLD",23,"KRN",9.2,"NM",212,0)
XM-U-M-PRINT NO HEADER-3^^0
"BLD",23,"KRN",9.2,"NM",213,0)
XM-U-M-PRINT-2^^0
"BLD",23,"KRN",9.2,"NM",214,0)
XM-U-M-PRIORITY SEND^^0
"BLD",23,"KRN",9.2,"NM",215,0)
XM-U-M-PRIORITY TOGGLE^^0
"BLD",23,"KRN",9.2,"NM",216,0)
XM-U-M-QUERY^^0
"BLD",23,"KRN",9.2,"NM",217,0)
XM-U-M-QUERY DETAILED^^0
"BLD",23,"KRN",9.2,"NM",218,0)
XM-U-M-QUERY GENERAL^^0
"BLD",23,"KRN",9.2,"NM",219,0)
XM-U-M-QUERY INFO BASIC^^0
"BLD",23,"KRN",9.2,"NM",220,0)
XM-U-M-QUERY INFO LOCAL^^0
"BLD",23,"KRN",9.2,"NM",221,0)
XM-U-M-QUERY INFO REMOTE^^0
"BLD",23,"KRN",9.2,"NM",222,0)
XM-U-M-QUERY NETWORK^^0
"BLD",23,"KRN",9.2,"NM",223,0)
XM-U-M-QUERY NETWORK-2^^0
"BLD",23,"KRN",9.2,"NM",224,0)
XM-U-M-QUERY SPECIFIC^^0
"BLD",23,"KRN",9.2,"NM",225,0)
XM-U-M-QUERY-2^^0
"BLD",23,"KRN",9.2,"NM",226,0)
XM-U-M-REPLY^^0
"BLD",23,"KRN",9.2,"NM",227,0)
XM-U-M-REPLY-2^^0
"BLD",23,"KRN",9.2,"NM",228,0)
XM-U-M-SAVE^^0
"BLD",23,"KRN",9.2,"NM",229,0)
XM-U-M-SCRAMBLE^^0
"BLD",23,"KRN",9.2,"NM",230,0)
XM-U-M-SCRAMBLE HINT^^0
"BLD",23,"KRN",9.2,"NM",231,0)
XM-U-M-SCRAMBLE PASSWORD^^0
"BLD",23,"KRN",9.2,"NM",232,0)
XM-U-M-SEND^^0
"BLD",23,"KRN",9.2,"NM",233,0)
XM-U-M-TERMINATE^^0
"BLD",23,"KRN",9.2,"NM",234,0)
XM-U-M-TERMINATE-2^^0
"BLD",23,"KRN",9.2,"NM",235,0)
XM-U-M-TRANSMIT LATER^^0
"BLD",23,"KRN",9.2,"NM",236,0)
XM-U-M-TRANSMIT NOW^^0
"BLD",23,"KRN",9.2,"NM",237,0)
XM-U-M-VAPORIZE DATE EDIT^^0
"BLD",23,"KRN",9.2,"NM",238,0)
XM-U-M-VAPORIZE DATE SEND^^0
"BLD",23,"KRN",9.2,"NM",239,0)
XM-U-M-WRITE^^0
"BLD",23,"KRN",9.2,"NM",240,0)
XM-U-M-WRITE-2^^0
"BLD",23,"KRN",9.2,"NM",241,0)
XM-U-MO-EDIT^^0
"BLD",23,"KRN",9.2,"NM",242,0)
XM-U-MO-READ^^0
"BLD",23,"KRN",9.2,"NM",243,0)
XM-U-MO-READ-2^^0
"BLD",23,"KRN",9.2,"NM",244,0)
XM-U-MO-REPLY^^0
"BLD",23,"KRN",9.2,"NM",245,0)
XM-U-MO-SEND^^0
"BLD",23,"KRN",9.2,"NM",246,0)
XM-U-MO-SEND-2^^0
"BLD",23,"KRN",9.2,"NM",247,0)
XM-U-NEW FEATURES^^0
"BLD",23,"KRN",9.2,"NM",248,0)
XM-U-NEW FEATURES-2^^0
"BLD",23,"KRN",9.2,"NM",249,0)
XM-U-NEW FEATURES-3^^0
"BLD",23,"KRN",9.2,"NM",251,0)
XM-U-P-ASK BASKET^^0
"BLD",23,"KRN",9.2,"NM",252,0)
XM-U-P-BANNER^^0
"BLD",23,"KRN",9.2,"NM",253,0)
XM-U-P-DELIVERY BASKET PRIV^^0
"BLD",23,"KRN",9.2,"NM",254,0)
XM-U-P-EDITOR^^0
"BLD",23,"KRN",9.2,"NM",255,0)
XM-U-P-FILTER^^0
"BLD",23,"KRN",9.2,"NM",256,0)
XM-U-P-FILTER CRITERIA-2^^0
"BLD",23,"KRN",9.2,"NM",257,0)
XM-U-P-FORWARDING ADDRESS^^0
"BLD",23,"KRN",9.2,"NM",258,0)
XM-U-P-FILTER CRITERIA^^0
"BLD",23,"KRN",9.2,"NM",259,0)
XM-U-P-FILTER ORDER^^0
"BLD",23,"KRN",9.2,"NM",261,0)
XM-U-P-GROUP ENROLL^^0
"BLD",23,"KRN",9.2,"NM",262,0)
XM-U-P-GROUP ENROLL-2^^0
"BLD",23,"KRN",9.2,"NM",263,0)
XM-U-P-GROUP PERSONAL^^0
"BLD",23,"KRN",9.2,"NM",264,0)
XM-U-P-GROUP PERSONAL-2^^0
"BLD",23,"KRN",9.2,"NM",265,0)
XM-U-P-INSTITUTION^^0
"BLD",23,"KRN",9.2,"NM",266,0)
XM-U-P-INTRODUCTION^^0
"BLD",23,"KRN",9.2,"NM",267,0)
XM-U-P-MESSAGE ACTION DEFAULT^^0
"BLD",23,"KRN",9.2,"NM",268,0)
XM-U-P-MESSAGE ORDER^^0
"BLD",23,"KRN",9.2,"NM",269,0)
XM-U-P-NETWORK SIGNATURE^^0
"BLD",23,"KRN",9.2,"NM",270,0)
XM-U-P-OFFICE INFO^^0
"BLD",23,"KRN",9.2,"NM",271,0)
XM-U-P-OPTIONS^^0
"BLD",23,"KRN",9.2,"NM",272,0)
XM-U-P-OPTIONS-2^^0
"BLD",23,"KRN",9.2,"NM",273,0)
XM-U-P-OPTIONS-3^^0
"BLD",23,"KRN",9.2,"NM",274,0)
XM-U-P-PERSONAL PREFERENCES^^0
"BLD",23,"KRN",9.2,"NM",275,0)
XM-U-P-PRIORITY FLAG^^0
"BLD",23,"KRN",9.2,"NM",276,0)
XM-U-P-PRIORITY PROMPT-2^^0
"BLD",23,"KRN",9.2,"NM",277,0)
XM-U-P-PRIORITY PROMPT^^0
"BLD",23,"KRN",9.2,"NM",278,0)
XM-U-P-READER DEFAULT^^0
"BLD",23,"KRN",9.2,"NM",279,0)
XM-U-P-READER PROMPT^^0
"BLD",23,"KRN",9.2,"NM",280,0)
XM-U-P-SHOW TITLES^^0
"BLD",23,"KRN",9.2,"NM",281,0)
XM-U-P-SURROGATE EDIT^^0
"BLD",23,"KRN",9.2,"NM",282,0)
XM-U-P-SURROGATE READ PRIV^^0
"BLD",23,"KRN",9.2,"NM",283,0)
XM-U-P-SURROGATE WRITE PRIV^^0
"BLD",23,"KRN",9.2,"NM",285,0)
XM-U-Q-REMOTE USER NAME^^0
"BLD",23,"KRN",9.2,"NM",286,0)
XM-U-Q-SEARCH^^0
"BLD",23,"KRN",9.2,"NM",287,0)
XM-U-Q-SEARCH CRITERIA^^0
"BLD",23,"KRN",9.2,"NM",288,0)
XM-U-Q-SEARCH CRITERIA-2^^0
"BLD",23,"KRN",9.2,"NM",289,0)
XM-U-Q-SEARCH CRITERIA-3^^0
"BLD",23,"KRN",9.2,"NM",290,0)
XM-U-Q-SEARCH CRITERIA-4^^0
"BLD",23,"KRN",9.2,"NM",292,0)
XM-U-Q-SEARCH MAILBOX^^0
"BLD",23,"KRN",9.2,"NM",293,0)
XM-U-Q-SEARCH SYSTEM^^0
"BLD",23,"KRN",9.2,"NM",294,0)
XM-U-R-NEW LIST ALL^^0
"BLD",23,"KRN",9.2,"NM",295,0)
XM-U-R-NEW LIST BASKETS^^0
"BLD",23,"KRN",9.2,"NM",296,0)
XM-U-R-NEW LIST PRIORITY^^0
"BLD",23,"KRN",9.2,"NM",297,0)
XM-U-R-NEW PRINT^^0
"BLD",23,"KRN",9.2,"NM",298,0)
XM-U-R-NEW SCAN^^0
"BLD",23,"KRN",9.2,"NM",299,0)
XM-U-R-READ^^0
"BLD",23,"KRN",9.2,"NM",300,0)
XM-U-R-READ NEW^^0
"BLD",23,"KRN",9.2,"NM",301,0)
XM-U-R-READ NEW-2^^0
"BLD",23,"KRN",9.2,"NM",302,0)
XM-U-R-READ-2^^0
"BLD",23,"KRN",9.2,"NM",303,0)
XM-U-R-READ-3^^0
"BLD",23,"KRN",9.2,"NM",304,0)
XM-U-R-NEW READ^^0
"BLD",23,"KRN",9.2,"NM",305,0)
XMHELP^^0
"BLD",23,"KRN",9.2,"NM",306,0)
XM-U-Q-CLASSIC LOOKUP ?^^0
"BLD",23,"KRN",9.2,"NM",307,0)
XM-U-Q-CLASSIC LOOKUP ??^^0
"BLD",23,"KRN",9.2,"NM",308,0)
XM-U-NEW FEATURES-5^^0
"BLD",23,"KRN",9.2,"NM",309,0)
XM-U-P-FILTER-3^^0
"BLD",23,"KRN",9.2,"NM",310,0)
XM-U-P-P-MESSAGE FROM^^0
"BLD",23,"KRN",9.2,"NM",311,0)
XM-U-P-SHOW MESSAGE PREVIEW^^0
"BLD",23,"KRN",9.2,"NM",312,0)
XM-U-B-READER CLASSIC^^0
"BLD",23,"KRN",9.2,"NM",313,0)
XM-U-NEW FEATURES-4^^0
"BLD",23,"KRN",9.2,"NM",314,0)
XM-U-M-PRINT DEVICE P-MESSAGE^^0
"BLD",23,"KRN",9.2,"NM",315,0)
XM-U-P-FILTER-2^^0
"BLD",23,"KRN",9.2,"NM","B","XM-API-DISPLAYS-NUMBER",1)

"BLD",23,"KRN",9.2,"NM","B","XM-API-FEATURES",2)

"BLD",23,"KRN",9.2,"NM","B","XM-API-FORWARD-MESSAGE",3)

"BLD",23,"KRN",9.2,"NM","B","XM-API-MAIL-GROUPS",4)

"BLD",23,"KRN",9.2,"NM","B","XM-API-MESSAGE-QUERY",5)

"BLD",23,"KRN",9.2,"NM","B","XM-API-REPLYING",6)

"BLD",23,"KRN",9.2,"NM","B","XM-API-REQUESTING-INFORMATION",7)

"BLD",23,"KRN",9.2,"NM","B","XM-CONTROLLED-PRIORITY-MAIL",8)

"BLD",23,"KRN",9.2,"NM","B","XM-COORDINATORS",9)

"BLD",23,"KRN",9.2,"NM","B","XM-I-S-BIG GROUP SIZE",103)

"BLD",23,"KRN",9.2,"NM","B","XM-I-S-MAX DIGITS FOR MSG NUM",102)

"BLD",23,"KRN",9.2,"NM","B","XM-I-S-MESSAGE LINE LIMIT",104)

"BLD",23,"KRN",9.2,"NM","B","XM-I-S-SITE PARAMETERS",105)

"BLD",23,"KRN",9.2,"NM","B","XM-INQUIRY",10)

"BLD",23,"KRN",9.2,"NM","B","XM-INTERNAL-MESSAGE-NUMBER",11)

"BLD",23,"KRN",9.2,"NM","B","XM-LOCAL-RESPONSES",12)

"BLD",23,"KRN",9.2,"NM","B","XM-NEW-FEATURES",13)

"BLD",23,"KRN",9.2,"NM","B","XM-NEW-FEATURES-7.0",14)

"BLD",23,"KRN",9.2,"NM","B","XM-NEW-MAIL-LIST",15)

"BLD",23,"KRN",9.2,"NM","B","XM-NEW-VERSION3.1FEATURES",16)

"BLD",23,"KRN",9.2,"NM","B","XM-OUTPUT",17)

"BLD",23,"KRN",9.2,"NM","B","XM-P-MESSAGE",18)

"BLD",23,"KRN",9.2,"NM","B","XM-Q-DELETE",19)

"BLD",23,"KRN",9.2,"NM","B","XM-Q-DISAPPEARED",20)

"BLD",23,"KRN",9.2,"NM","B","XM-Q-INTERRUPT",21)

"BLD",23,"KRN",9.2,"NM","B","XM-Q-LOOKUP",22)

"BLD",23,"KRN",9.2,"NM","B","XM-Q-RECAL",23)

"BLD",23,"KRN",9.2,"NM","B","XM-Q-REMOVE",24)

"BLD",23,"KRN",9.2,"NM","B","XM-Q-REPLIES",25)

"BLD",23,"KRN",9.2,"NM","B","XM-QUESTIONS",26)

"BLD",23,"KRN",9.2,"NM","B","XM-SENDER-INFORMATION-ONLY",27)

"BLD",23,"KRN",9.2,"NM","B","XM-SUGGESTION",28)

"BLD",23,"KRN",9.2,"NM","B","XM-U-A-ADDRESS",106)

"BLD",23,"KRN",9.2,"NM","B","XM-U-A-CC",107)

"BLD",23,"KRN",9.2,"NM","B","XM-U-A-GROUP LARGE",108)

"BLD",23,"KRN",9.2,"NM","B","XM-U-A-GROUP LARGE-2",109)

"BLD",23,"KRN",9.2,"NM","B","XM-U-A-INFO ONLY",113)

"BLD",23,"KRN",9.2,"NM","B","XM-U-A-LOCAL USER NAME",114)

"BLD",23,"KRN",9.2,"NM","B","XM-U-A-LOCAL USER NAME-2",115)

"BLD",23,"KRN",9.2,"NM","B","XM-U-A-STAGGER DELIVERY",116)

"BLD",23,"KRN",9.2,"NM","B","XM-U-A-STAGGER DELIVERY-2",117)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-BASKET CONTENTS LIST",118)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-BASKET NAME",119)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-BASKET NAME CHANGE",120)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-BASKET SELECT",121)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-CHANGE DETAIL",122)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-FILTER",123)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-NAVIGATE CLASSIC",124)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-NAVIGATE FULL SCREEN",125)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-NEW MAIL LIST",126)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-OPPOSITE TOGGLE",127)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-READER",128)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-READER CLASSIC",312)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-READER DETAILED",130)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-READER DETAILED LIST",131)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-READER DIFF",132)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-READER DIFF-2",133)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-READER DIFF-3",134)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-READER FULL SCREEN",135)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-READER SUMMARY",136)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-RESEQUENCE MESSAGES",137)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-XMIT PRIORITY TOGGLE",138)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-XMIT PRIORITY TOGGLE-2",139)

"BLD",23,"KRN",9.2,"NM","B","XM-U-B-ZOOM TOGGLE",140)

"BLD",23,"KRN",9.2,"NM","B","XM-U-BO-CLASSIC",141)

"BLD",23,"KRN",9.2,"NM","B","XM-U-BO-CLASSIC-2",142)

"BLD",23,"KRN",9.2,"NM","B","XM-U-BO-FULL SCREEN",143)

"BLD",23,"KRN",9.2,"NM","B","XM-U-BO-FULL SCREEN LIST",144)

"BLD",23,"KRN",9.2,"NM","B","XM-U-BO-FULL SCREEN-2",145)

"BLD",23,"KRN",9.2,"NM","B","XM-U-H-GROUP",146)

"BLD",23,"KRN",9.2,"NM","B","XM-U-H-GROUP-2",147)

"BLD",23,"KRN",9.2,"NM","B","XM-U-H-GROUP-3",148)

"BLD",23,"KRN",9.2,"NM","B","XM-U-H-GROUP-4",149)

"BLD",23,"KRN",9.2,"NM","B","XM-U-H-Q DELETE",150)

"BLD",23,"KRN",9.2,"NM","B","XM-U-H-Q DISAPPEARED",151)

"BLD",23,"KRN",9.2,"NM","B","XM-U-H-Q INTERRUPT",152)

"BLD",23,"KRN",9.2,"NM","B","XM-U-H-Q LOOKUP",153)

"BLD",23,"KRN",9.2,"NM","B","XM-U-H-Q RECALL",154)

"BLD",23,"KRN",9.2,"NM","B","XM-U-H-Q REMOVE",155)

"BLD",23,"KRN",9.2,"NM","B","XM-U-H-Q REPLIES",156)

"BLD",23,"KRN",9.2,"NM","B","XM-U-H-QUESTIONS",157)

"BLD",23,"KRN",9.2,"NM","B","XM-U-H-USER",158)

"BLD",23,"KRN",9.2,"NM","B","XM-U-I-EDITOR FM LINE",159)

"BLD",23,"KRN",9.2,"NM","B","XM-U-I-EDITOR FM SCREEN",160)

"BLD",23,"KRN",9.2,"NM","B","XM-U-I-GROUP",161)

"BLD",23,"KRN",9.2,"NM","B","XM-U-I-GROUP COORDINATOR",162)

"BLD",23,"KRN",9.2,"NM","B","XM-U-I-GROUP MEMBER",163)

"BLD",23,"KRN",9.2,"NM","B","XM-U-I-GROUP-2",164)

"BLD",23,"KRN",9.2,"NM","B","XM-U-I-SHARED MAIL",165)

"BLD",23,"KRN",9.2,"NM","B","XM-U-I-SURROGATE",166)

"BLD",23,"KRN",9.2,"NM","B","XM-U-I-SURROGATE BECOME",167)

"BLD",23,"KRN",9.2,"NM","B","XM-U-I-SURROGATE-2",168)

"BLD",23,"KRN",9.2,"NM","B","XM-U-I-SURROGATE-3",169)

"BLD",23,"KRN",9.2,"NM","B","XM-U-I-SURROGATE-4",170)

"BLD",23,"KRN",9.2,"NM","B","XM-U-K-PACKMAN COMPARE",171)

"BLD",23,"KRN",9.2,"NM","B","XM-U-K-PACKMAN INSTALL",172)

"BLD",23,"KRN",9.2,"NM","B","XM-U-K-PACKMAN LOAD GLOBALS",173)

"BLD",23,"KRN",9.2,"NM","B","XM-U-K-PACKMAN LOAD PACKAGE",174)

"BLD",23,"KRN",9.2,"NM","B","XM-U-K-PACKMAN LOAD ROUTINES",175)

"BLD",23,"KRN",9.2,"NM","B","XM-U-K-PACKMAN PRINT",176)

"BLD",23,"KRN",9.2,"NM","B","XM-U-K-PACKMAN SUMMARIZE",177)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-ANSWER",178)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-BACKUP",179)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-BACKUP BEFORE SENDING",180)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-CHOOSE RANGE",181)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-CHOOSE RESPONSES",182)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-CHOOSE SELECT",183)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-CHOOSE SELECT-2",184)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-CLOSED",185)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-CONFIDENTIAL",186)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-CONFIRM RECEIPT",187)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-COPY",188)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-COPY-2",189)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-DELETE",190)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-DELETE-2",191)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-DELETE-3",192)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-DELIVERY BASKET SET",193)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-EDIT RECIPIENTS",194)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-EDIT SUBJECT",195)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-EDIT TEXT",196)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-FORWARD",197)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-FORWARD-2",198)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-INFO ONLY",199)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-LATER",200)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-LATER-2",201)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-LATER-3",202)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-LATERED MESSAGE CHANGE",203)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-LATERED MESSAGE REPORT",204)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-MESSAGE HEADER",205)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-NEW",206)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-PRINT",207)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-PRINT DEVICE P-MESSAGE",314)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-PRINT HEADER",209)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-PRINT NO HEADER",210)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-PRINT NO HEADER-2",211)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-PRINT NO HEADER-3",212)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-PRINT-2",213)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-PRIORITY SEND",214)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-PRIORITY TOGGLE",215)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-QUERY",216)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-QUERY DETAILED",217)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-QUERY GENERAL",218)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-QUERY INFO BASIC",219)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-QUERY INFO LOCAL",220)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-QUERY INFO REMOTE",221)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-QUERY NETWORK",222)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-QUERY NETWORK-2",223)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-QUERY SPECIFIC",224)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-QUERY-2",225)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-REPLY",226)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-REPLY-2",227)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-SAVE",228)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-SCRAMBLE",229)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-SCRAMBLE HINT",230)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-SCRAMBLE PASSWORD",231)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-SEND",232)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-TERMINATE",233)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-TERMINATE-2",234)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-TRANSMIT LATER",235)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-TRANSMIT NOW",236)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-VAPORIZE DATE EDIT",237)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-VAPORIZE DATE SEND",238)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-WRITE",239)

"BLD",23,"KRN",9.2,"NM","B","XM-U-M-WRITE-2",240)

"BLD",23,"KRN",9.2,"NM","B","XM-U-MO-EDIT",241)

"BLD",23,"KRN",9.2,"NM","B","XM-U-MO-READ",242)

"BLD",23,"KRN",9.2,"NM","B","XM-U-MO-READ-2",243)

"BLD",23,"KRN",9.2,"NM","B","XM-U-MO-REPLY",244)

"BLD",23,"KRN",9.2,"NM","B","XM-U-MO-SEND",245)

"BLD",23,"KRN",9.2,"NM","B","XM-U-MO-SEND-2",246)

"BLD",23,"KRN",9.2,"NM","B","XM-U-NEW FEATURES",247)

"BLD",23,"KRN",9.2,"NM","B","XM-U-NEW FEATURES-2",248)

"BLD",23,"KRN",9.2,"NM","B","XM-U-NEW FEATURES-3",249)

"BLD",23,"KRN",9.2,"NM","B","XM-U-NEW FEATURES-4",313)

"BLD",23,"KRN",9.2,"NM","B","XM-U-NEW FEATURES-5",308)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-ASK BASKET",251)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-BANNER",252)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-DELIVERY BASKET PRIV",253)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-EDITOR",254)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-FILTER",255)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-FILTER CRITERIA",258)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-FILTER CRITERIA-2",256)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-FILTER ORDER",259)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-FILTER-2",315)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-FILTER-3",309)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-FORWARDING ADDRESS",257)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-GROUP ENROLL",261)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-GROUP ENROLL-2",262)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-GROUP PERSONAL",263)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-GROUP PERSONAL-2",264)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-INSTITUTION",265)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-INTRODUCTION",266)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-MESSAGE ACTION DEFAULT",267)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-MESSAGE ORDER",268)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-NETWORK SIGNATURE",269)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-OFFICE INFO",270)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-OPTIONS",271)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-OPTIONS-2",272)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-OPTIONS-3",273)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-P-MESSAGE FROM",310)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-PERSONAL PREFERENCES",274)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-PRIORITY FLAG",275)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-PRIORITY PROMPT",277)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-PRIORITY PROMPT-2",276)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-READER DEFAULT",278)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-READER PROMPT",279)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-SHOW MESSAGE PREVIEW",311)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-SHOW TITLES",280)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-SURROGATE EDIT",281)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-SURROGATE READ PRIV",282)

"BLD",23,"KRN",9.2,"NM","B","XM-U-P-SURROGATE WRITE PRIV",283)

"BLD",23,"KRN",9.2,"NM","B","XM-U-Q-CLASSIC LOOKUP ?",306)

"BLD",23,"KRN",9.2,"NM","B","XM-U-Q-CLASSIC LOOKUP ??",307)

"BLD",23,"KRN",9.2,"NM","B","XM-U-Q-REMOTE USER NAME",285)

"BLD",23,"KRN",9.2,"NM","B","XM-U-Q-SEARCH",286)

"BLD",23,"KRN",9.2,"NM","B","XM-U-Q-SEARCH CRITERIA",287)

"BLD",23,"KRN",9.2,"NM","B","XM-U-Q-SEARCH CRITERIA-2",288)

"BLD",23,"KRN",9.2,"NM","B","XM-U-Q-SEARCH CRITERIA-3",289)

"BLD",23,"KRN",9.2,"NM","B","XM-U-Q-SEARCH CRITERIA-4",290)

"BLD",23,"KRN",9.2,"NM","B","XM-U-Q-SEARCH MAILBOX",292)

"BLD",23,"KRN",9.2,"NM","B","XM-U-Q-SEARCH SYSTEM",293)

"BLD",23,"KRN",9.2,"NM","B","XM-U-R-NEW LIST ALL",294)

"BLD",23,"KRN",9.2,"NM","B","XM-U-R-NEW LIST BASKETS",295)

"BLD",23,"KRN",9.2,"NM","B","XM-U-R-NEW LIST PRIORITY",296)

"BLD",23,"KRN",9.2,"NM","B","XM-U-R-NEW PRINT",297)

"BLD",23,"KRN",9.2,"NM","B","XM-U-R-NEW READ",304)

"BLD",23,"KRN",9.2,"NM","B","XM-U-R-NEW SCAN",298)

"BLD",23,"KRN",9.2,"NM","B","XM-U-R-READ",299)

"BLD",23,"KRN",9.2,"NM","B","XM-U-R-READ NEW",300)

"BLD",23,"KRN",9.2,"NM","B","XM-U-R-READ NEW-2",301)

"BLD",23,"KRN",9.2,"NM","B","XM-U-R-READ-2",302)

"BLD",23,"KRN",9.2,"NM","B","XM-U-R-READ-3",303)

"BLD",23,"KRN",9.2,"NM","B","XMANSWER",29)

"BLD",23,"KRN",9.2,"NM","B","XMEDIT",30)

"BLD",23,"KRN",9.2,"NM","B","XMGROUPMEMBER",31)

"BLD",23,"KRN",9.2,"NM","B","XMHELP",305)

"BLD",23,"KRN",9.2,"NM","B","XMHELP-MANUAL",112)

"BLD",23,"KRN",9.2,"NM","B","XMHELP2",32)

"BLD",23,"KRN",9.2,"NM","B","XMJOIN",33)

"BLD",23,"KRN",9.2,"NM","B","XMMAILGROUP",34)

"BLD",23,"KRN",9.2,"NM","B","XMMG-TYPE",35)

"BLD",23,"KRN",9.2,"NM","B","XMNEW",36)

"BLD",23,"KRN",9.2,"NM","B","XMPACK-COMP",37)

"BLD",23,"KRN",9.2,"NM","B","XMPACK-ENHANCED",38)

"BLD",23,"KRN",9.2,"NM","B","XMPACK-GLO",39)

"BLD",23,"KRN",9.2,"NM","B","XMPACK-INSTALL",40)

"BLD",23,"KRN",9.2,"NM","B","XMPACK-PACKAGE",41)

"BLD",23,"KRN",9.2,"NM","B","XMPACK-PRNT",42)

"BLD",23,"KRN",9.2,"NM","B","XMPACK-ROU",43)

"BLD",23,"KRN",9.2,"NM","B","XMPACK-SUM",44)

"BLD",23,"KRN",9.2,"NM","B","XMPACKMAN",110)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-BACK",45)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-COPY",46)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-COPYA",47)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-COPYB",48)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-COPYC",49)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-COPYD",50)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-DELETE",51)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-E-SELECT",52)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-EDIT",53)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-EDIT2",54)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-EDIT3",55)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-FORWARD",56)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-NEW",57)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-NEW LATER (TICKLER)",58)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-PRINT",59)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-QUERY",60)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-REPLY",61)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-SAVE",62)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-TERM",63)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-VAPORIZE",64)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACT-WRITE",65)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACTION",66)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACTION-PRINT-W/O-HEADER",67)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACTION-PRIORITY-TOGGLE",68)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACTION-VAPORIZE",69)

"BLD",23,"KRN",9.2,"NM","B","XMR-ACTION2",70)

"BLD",23,"KRN",9.2,"NM","B","XMR-BASKET",71)

"BLD",23,"KRN",9.2,"NM","B","XMR-MESS-HEADER",72)

"BLD",23,"KRN",9.2,"NM","B","XMR-MESS-KEYWORD",73)

"BLD",23,"KRN",9.2,"NM","B","XMR-MESS-RANGE",74)

"BLD",23,"KRN",9.2,"NM","B","XMR-MESSAGE",75)

"BLD",23,"KRN",9.2,"NM","B","XMR-RES",76)

"BLD",23,"KRN",9.2,"NM","B","XMR-SEARCH",77)

"BLD",23,"KRN",9.2,"NM","B","XMREAD",78)

"BLD",23,"KRN",9.2,"NM","B","XMS-ADDRESS-CC",79)

"BLD",23,"KRN",9.2,"NM","B","XMS-ADDRESS-INFO",80)

"BLD",23,"KRN",9.2,"NM","B","XMS-ADDRESS-THRU",81)

"BLD",23,"KRN",9.2,"NM","B","XMS-PRIORITY",82)

"BLD",23,"KRN",9.2,"NM","B","XMS-RECIP-CONFIDENT",83)

"BLD",23,"KRN",9.2,"NM","B","XMS-RECIPIENT",84)

"BLD",23,"KRN",9.2,"NM","B","XMS-TEXT",85)

"BLD",23,"KRN",9.2,"NM","B","XMS-TRANS",86)

"BLD",23,"KRN",9.2,"NM","B","XMS-TRANS-CONFIRM",87)

"BLD",23,"KRN",9.2,"NM","B","XMS-TRANS-EDIT",88)

"BLD",23,"KRN",9.2,"NM","B","XMS-TRANS-SCR-HINT",89)

"BLD",23,"KRN",9.2,"NM","B","XMS-TRANS-SCR-PASS",90)

"BLD",23,"KRN",9.2,"NM","B","XMS-TRANS-SCRAMBLE",91)

"BLD",23,"KRN",9.2,"NM","B","XMSEND",92)

"BLD",23,"KRN",9.2,"NM","B","XMSHARE",93)

"BLD",23,"KRN",9.2,"NM","B","XMUOPT-ASKBASKET",94)

"BLD",23,"KRN",9.2,"NM","B","XMUOPT-BANNER",95)

"BLD",23,"KRN",9.2,"NM","B","XMUOPT-BML",96)

"BLD",23,"KRN",9.2,"NM","B","XMUOPT-INTRO",97)

"BLD",23,"KRN",9.2,"NM","B","XMUOPT-SUR-ASSIGN",98)

"BLD",23,"KRN",9.2,"NM","B","XMUOPT-SUR-ASSUME",99)

"BLD",23,"KRN",9.2,"NM","B","XMUOPT-SURROGATE",100)

"BLD",23,"KRN",9.2,"NM","B","XMUSEROPT",101)

"BLD",23,"KRN",9.8,0)
9.8
"BLD",23,"KRN",9.8,"NM",0)
^9.68A^267^248
"BLD",23,"KRN",9.8,"NM",1,0)
XMHIG^^0^B25551539
"BLD",23,"KRN",9.8,"NM",2,0)
XMHIU^^0^B18326610
"BLD",23,"KRN",9.8,"NM",3,0)
XMJBM^^0^B56111159
"BLD",23,"KRN",9.8,"NM",4,0)
XMJBN^^0^B40909752
"BLD",23,"KRN",9.8,"NM",5,0)
XMJBU^^0^B4138657
"BLD",23,"KRN",9.8,"NM",6,0)
XMJMA^^0^B5823257
"BLD",23,"KRN",9.8,"NM",7,0)
XMJMBULL^^0^B3007779
"BLD",23,"KRN",9.8,"NM",8,0)
XMJMC^^0^B25834658
"BLD",23,"KRN",9.8,"NM",9,0)
XMJMCODE^^0^B31059845
"BLD",23,"KRN",9.8,"NM",10,0)
XMJMD^^0^B24791140
"BLD",23,"KRN",9.8,"NM",11,0)
XMJMF^^0^B85468502
"BLD",23,"KRN",9.8,"NM",12,0)
XMJMFA^^0^B14012473
"BLD",23,"KRN",9.8,"NM",13,0)
XMJMFB^^0^B63912865
"BLD",23,"KRN",9.8,"NM",14,0)
XMJML^^0^B33697968
"BLD",23,"KRN",9.8,"NM",15,0)
XMJMLN^^0^B52385719
"BLD",23,"KRN",9.8,"NM",16,0)
XMJMLR^^0^B71679790
"BLD",23,"KRN",9.8,"NM",17,0)
XMJMOI^^0^B82530770
"BLD",23,"KRN",9.8,"NM",18,0)
XMJMOIE^^0^B9697558
"BLD",23,"KRN",9.8,"NM",19,0)
XMJMOR^^0^B64221589
"BLD",23,"KRN",9.8,"NM",20,0)
XMJMORX^^0^B76760875
"BLD",23,"KRN",9.8,"NM",21,0)
XMJMORX1^^0^B6194757
"BLD",23,"KRN",9.8,"NM",22,0)
XMJMP^^0^B87550446
"BLD",23,"KRN",9.8,"NM",23,0)
XMJMP1^^0^B50242686
"BLD",23,"KRN",9.8,"NM",26,0)
XMJMR^^0^B89707165
"BLD",23,"KRN",9.8,"NM",27,0)
XMJMRO^^0^B6097028
"BLD",23,"KRN",9.8,"NM",28,0)
XMJMS^^0^B24327001
"BLD",23,"KRN",9.8,"NM",29,0)
XMJMSA^^0^B5496203
"BLD",23,"KRN",9.8,"NM",30,0)
XMJMSO^^0^B50389949
"BLD",23,"KRN",9.8,"NM",31,0)
XMJMT^^0^B29049619
"BLD",23,"KRN",9.8,"NM",32,0)
XMKP^^0^B75448513
"BLD",23,"KRN",9.8,"NM",34,0)
XMKPO^^0^B6128348
"BLD",23,"KRN",9.8,"NM",35,0)
XMTDF^^0^B11639920
"BLD",23,"KRN",9.8,"NM",36,0)
XMTDL^^0^B55627768
"BLD",23,"KRN",9.8,"NM",37,0)
XMTDL1^^0^B8005251
"BLD",23,"KRN",9.8,"NM",39,0)
XMVSURR^^0^B6592053
"BLD",23,"KRN",9.8,"NM",40,0)
XMVVITAE^^0^B45152977
"BLD",23,"KRN",9.8,"NM",41,0)
XMXADDR^^0^B89901496
"BLD",23,"KRN",9.8,"NM",42,0)
XMXADDR1^^0^B62959497
"BLD",23,"KRN",9.8,"NM",43,0)
XMXADDRD^^0^B36994683
"BLD",23,"KRN",9.8,"NM",44,0)
XMXADDRG^^0^B66384926
"BLD",23,"KRN",9.8,"NM",45,0)
XMXANSER^^0^B7919752
"BLD",23,"KRN",9.8,"NM",46,0)
XMXAPI^^0^B33828547
"BLD",23,"KRN",9.8,"NM",47,0)
XMXAPIB^^0^B10245722
"BLD",23,"KRN",9.8,"NM",50,0)
XMXBSKT^^0^B37483641
"BLD",23,"KRN",9.8,"NM",51,0)
XMXBULL^^0^B17239014
"BLD",23,"KRN",9.8,"NM",53,0)
XMXMBOX^^0^B3198907
"BLD",23,"KRN",9.8,"NM",54,0)
XMXMSGS^^0^B36576680
"BLD",23,"KRN",9.8,"NM",55,0)
XMXMSGS1^^0^B26680795
"BLD",23,"KRN",9.8,"NM",56,0)
XMXPARM^^0^B73884061
"BLD",23,"KRN",9.8,"NM",57,0)
XMXPARMB^^0^B11516161
"BLD",23,"KRN",9.8,"NM",58,0)
XMXREPLY^^0^B13446429
"BLD",23,"KRN",9.8,"NM",60,0)
XMXSEND^^0^B62755123
"BLD",23,"KRN",9.8,"NM",61,0)
XMXTO^^0^B4839235
"BLD",23,"KRN",9.8,"NM",62,0)
XMXUTIL^^0^B49773861
"BLD",23,"KRN",9.8,"NM",66,0)
XMB^^0^B14953608
"BLD",23,"KRN",9.8,"NM",67,0)
XMD^^0^B53631547
"BLD",23,"KRN",9.8,"NM",68,0)
XMADGO^^0^B19960
"BLD",23,"KRN",9.8,"NM",69,0)
XMADJ999^^0^B3352
"BLD",23,"KRN",9.8,"NM",71,0)
XMGAPI3^^0^B6047536
"BLD",23,"KRN",9.8,"NM",72,0)
XMA1C^^0^B244506
"BLD",23,"KRN",9.8,"NM",73,0)
XMAPHOST^^0^B37352022
"BLD",23,"KRN",9.8,"NM",77,0)
XMJMQ1^^0^B7138623
"BLD",23,"KRN",9.8,"NM",78,0)
XMUPIN^^0^B37656837
"BLD",23,"KRN",9.8,"NM",79,0)
XMUTERM^^0^B59243598
"BLD",23,"KRN",9.8,"NM",80,0)
XMUTERM1^^0^B62925467
"BLD",23,"KRN",9.8,"NM",81,0)
XM^^0^B62255854
"BLD",23,"KRN",9.8,"NM",82,0)
XMA03^^0^B111909
"BLD",23,"KRN",9.8,"NM",83,0)
XMA1B^^0^B1405349
"BLD",23,"KRN",9.8,"NM",84,0)
XMA2B^^0^B9435435
"BLD",23,"KRN",9.8,"NM",85,0)
XMA3^^0^B80543624
"BLD",23,"KRN",9.8,"NM",86,0)
XMA32A^^0^B29768986
"BLD",23,"KRN",9.8,"NM",87,0)
XMAI2^^0^B5996470
"BLD",23,"KRN",9.8,"NM",88,0)
XMCTLK^^0^B20146392
"BLD",23,"KRN",9.8,"NM",89,0)
XMDIRQST^^0^B14408732
"BLD",23,"KRN",9.8,"NM",90,0)
XMDIRRCV^^0^B3106724
"BLD",23,"KRN",9.8,"NM",91,0)
XMDIRSND^^0^B3377794
"BLD",23,"KRN",9.8,"NM",92,0)
XMP3^^0^B19180679
"BLD",23,"KRN",9.8,"NM",93,0)
XMPH^^0^B8447654
"BLD",23,"KRN",9.8,"NM",94,0)
XMR^^0^B68266904
"BLD",23,"KRN",9.8,"NM",95,0)
XMR0A^^0^B5142952
"BLD",23,"KRN",9.8,"NM",96,0)
XMR0B^^0^B29032817
"BLD",23,"KRN",9.8,"NM",97,0)
XMR0BLOB^^0^B9857085
"BLD",23,"KRN",9.8,"NM",98,0)
XMR1^^0^B64446354
"BLD",23,"KRN",9.8,"NM",99,0)
XMR1A^^0^B9054906
"BLD",23,"KRN",9.8,"NM",100,0)
XMRPCTS0^^0^B16005036
"BLD",23,"KRN",9.8,"NM",101,0)
XMRPCTS1^^0^B21094797
"BLD",23,"KRN",9.8,"NM",102,0)
XMS^^0^B12522664
"BLD",23,"KRN",9.8,"NM",103,0)
XMS1^^0^B2482469
"BLD",23,"KRN",9.8,"NM",104,0)
XMSM^^0^B20902395
"BLD",23,"KRN",9.8,"NM",105,0)
XMSM1^^0^B1951
"BLD",23,"KRN",9.8,"NM",106,0)
XMSMAIL^^0^B9314883
"BLD",23,"KRN",9.8,"NM",107,0)
XMUT2^^0^B12131569
"BLD",23,"KRN",9.8,"NM",108,0)
XMUT4^^0^B87361523
"BLD",23,"KRN",9.8,"NM",109,0)
XMUT4A^^0^B2091178
"BLD",23,"KRN",9.8,"NM",110,0)
XMUT4B^^0^B78291009
"BLD",23,"KRN",9.8,"NM",111,0)
XMUT4BA^^0^B59134763
"BLD",23,"KRN",9.8,"NM",112,0)
XMR0^^0^B1508
"BLD",23,"KRN",9.8,"NM",113,0)
XMA2^^0^B3234638
"BLD",23,"KRN",9.8,"NM",114,0)
XMC2^^0^B28816812
"BLD",23,"KRN",9.8,"NM",115,0)
XMP2A^^0^B20051015
"BLD",23,"KRN",9.8,"NM",116,0)
XMPG^^0^B10695060
"BLD",23,"KRN",9.8,"NM",117,0)
XMPSEC^^0^B22927463
"BLD",23,"KRN",9.8,"NM",118,0)
XMRTCP^^0^B14150167
"BLD",23,"KRN",9.8,"NM",119,0)
XMRUCX^^0^B1384031
"BLD",23,"KRN",9.8,"NM",120,0)
XMS0^^0^B23450472
"BLD",23,"KRN",9.8,"NM",121,0)
XMS3^^0^B23102963
"BLD",23,"KRN",9.8,"NM",122,0)
XMUT1^^0^B6391170
"BLD",23,"KRN",9.8,"NM",123,0)
XMUT4C^^0^B26644332
"BLD",23,"KRN",9.8,"NM",124,0)
XMVGROUP^^0^B19313669
"BLD",23,"KRN",9.8,"NM",125,0)
XMA^^0^B122169
"BLD",23,"KRN",9.8,"NM",126,0)
XMA0^^0^B1657853
"BLD",23,"KRN",9.8,"NM",127,0)
XMA11A^^0^B525580
"BLD",23,"KRN",9.8,"NM",128,0)
XMA21^^0^B10087577
"BLD",23,"KRN",9.8,"NM",129,0)
XMAD2^^0^B377420
"BLD",23,"KRN",9.8,"NM",130,0)
XMAH^^0^B2355109
"BLD",23,"KRN",9.8,"NM",131,0)
XMAH1^^0^B3671272
"BLD",23,"KRN",9.8,"NM",132,0)
XMA2R^^0^B12203607
"BLD",23,"KRN",9.8,"NM",133,0)
XMGAPI4^^0^B10998516
"BLD",23,"KRN",9.8,"NM",134,0)
XMDF^^0^B3170253
"BLD",23,"KRN",9.8,"NM",135,0)
XMXMSGS2^^0^B21815566
"BLD",23,"KRN",9.8,"NM",136,0)
XMYPRE2^^0^B57367507
"BLD",23,"KRN",9.8,"NM",137,0)
XMYPOST2^^0^B21446425
"BLD",23,"KRN",9.8,"NM",138,0)
XMS5^^0^B49966268
"BLD",23,"KRN",9.8,"NM",139,0)
XMS4^^0^B4372420
"BLD",23,"KRN",9.8,"NM",140,0)
XMS5A^^0^B5086907
"BLD",23,"KRN",9.8,"NM",141,0)
XMJMQ^^0^B75418150
"BLD",23,"KRN",9.8,"NM",142,0)
XMYPRE^^0^B5884294
"BLD",23,"KRN",9.8,"NM",143,0)
XMJBL^^0^B11154847
"BLD",23,"KRN",9.8,"NM",144,0)
XMJMLR1^^0^B16132242
"BLD",23,"KRN",9.8,"NM",145,0)
XMS0A^^0^B23299628
"BLD",23,"KRN",9.8,"NM",146,0)
XMS0BLOB^^0^B15144408
"BLD",23,"KRN",9.8,"NM",147,0)
XMA32^^0^B18058913
"BLD",23,"KRN",9.8,"NM",148,0)
XM0^^0^B1132
"BLD",23,"KRN",9.8,"NM",149,0)
XMA1^^0^B1445
"BLD",23,"KRN",9.8,"NM",150,0)
XMA1E^^0^B1859
"BLD",23,"KRN",9.8,"NM",151,0)
XMA21FWD^^0^B3542
"BLD",23,"KRN",9.8,"NM",152,0)
XMA2C0^^0^B2188
"BLD",23,"KRN",9.8,"NM",153,0)
XMA4^^0^B1460
"BLD",23,"KRN",9.8,"NM",154,0)
XMA7G1^^0^B2244
"BLD",23,"KRN",9.8,"NM",155,0)
XMADJF1^^0^B2866
"BLD",23,"KRN",9.8,"NM",156,0)
XMAI0^^0^B1853
"BLD",23,"KRN",9.8,"NM",157,0)
XMAP0^^0^B1888
"BLD",23,"KRN",9.8,"NM",158,0)
XMA10^^0^B1733
"BLD",23,"KRN",9.8,"NM",159,0)
XMA21G^^0^B2241
"BLD",23,"KRN",9.8,"NM",160,0)
XMA5^^0^B1465
"BLD",23,"KRN",9.8,"NM",161,0)
XMADJF1A^^0^B3451
"BLD",23,"KRN",9.8,"NM",162,0)
XMAI1^^0^B1859
"BLD",23,"KRN",9.8,"NM",163,0)
XMAP1^^0^B1894
"BLD",23,"KRN",9.8,"NM",164,0)
XMA11^^0^B38656
"BLD",23,"KRN",9.8,"NM",165,0)
XMA20^^0^B1738
"BLD",23,"KRN",9.8,"NM",166,0)
XMA22^^0^B1217
"BLD",23,"KRN",9.8,"NM",167,0)
XMA50^^0^B1753
"BLD",23,"KRN",9.8,"NM",168,0)
XMAD0^^0^B1828
"BLD",23,"KRN",9.8,"NM",169,0)
XMADJF1B^^0^B3460
"BLD",23,"KRN",9.8,"NM",170,0)
XMA51^^0^B1759
"BLD",23,"KRN",9.8,"NM",171,0)
XMAD1^^0^B1834
"BLD",23,"KRN",9.8,"NM",172,0)
XMAK^^0^B1042
"BLD",23,"KRN",9.8,"NM",173,0)
XMA01^^0^B1734
"BLD",23,"KRN",9.8,"NM",174,0)
XMA11B^^0^B2201
"BLD",23,"KRN",9.8,"NM",175,0)
XMA210^^0^B2080
"BLD",23,"KRN",9.8,"NM",176,0)
XMA24^^0^B1762
"BLD",23,"KRN",9.8,"NM",177,0)
XMA5A^^0^B1855
"BLD",23,"KRN",9.8,"NM",178,0)
XMAD1A^^0^B2289
"BLD",23,"KRN",9.8,"NM",179,0)
XMADGO1^^0^B2911
"BLD",23,"KRN",9.8,"NM",180,0)
XMAL0^^0^B1868
"BLD",23,"KRN",9.8,"NM",181,0)
XMA02^^0^B1207
"BLD",23,"KRN",9.8,"NM",182,0)
XMA1A^^0^B1835
"BLD",23,"KRN",9.8,"NM",183,0)
XMA21A^^0^B2199
"BLD",23,"KRN",9.8,"NM",184,0)
XMA25^^0^B1768
"BLD",23,"KRN",9.8,"NM",185,0)
XMA6^^0^B1470
"BLD",23,"KRN",9.8,"NM",186,0)
XMAD1X^^0^B2450
"BLD",23,"KRN",9.8,"NM",187,0)
XMAH0^^0^B1848
"BLD",23,"KRN",9.8,"NM",188,0)
XMAL0A^^0^B2323
"BLD",23,"KRN",9.8,"NM",189,0)
XMA21B^^0^B2206
"BLD",23,"KRN",9.8,"NM",190,0)
XMA7^^0^B25482
"BLD",23,"KRN",9.8,"NM",191,0)
XMANON^^0^B2610
"BLD",23,"KRN",9.8,"NM",192,0)
XMA0A^^0^B1830
"BLD",23,"KRN",9.8,"NM",193,0)
XMA2C^^0^B1852
"BLD",23,"KRN",9.8,"NM",194,0)
XMA7G^^0^B1901
"BLD",23,"KRN",9.8,"NM",195,0)
XMAI^^0^B1565
"BLD",23,"KRN",9.8,"NM",196,0)
XMAP^^0^B1600
"BLD",23,"KRN",9.8,"NM",197,0)
XMB1^^0^B1449
"BLD",23,"KRN",9.8,"NM",198,0)
XMS2^^0^B1522
"BLD",23,"KRN",9.8,"NM",199,0)
XMASEC^^0^B63884
"BLD",23,"KRN",9.8,"NM",201,0)
XME^^0^B1216
"BLD",23,"KRN",9.8,"NM",202,0)
XME1^^0^B1461
"BLD",23,"KRN",9.8,"NM",203,0)
XMCD^^0^B9174153
"BLD",23,"KRN",9.8,"NM",204,0)
XMC^^0^B6579407
"BLD",23,"KRN",9.8,"NM",205,0)
XMC4^^0^B1338448
"BLD",23,"KRN",9.8,"NM",206,0)
XMKPL^^0^B5056676
"BLD",23,"KRN",9.8,"NM",207,0)
XMKPLQ^^0^B28928716
"BLD",23,"KRN",9.8,"NM",208,0)
XMTDT^^0^B13047415
"BLD",23,"KRN",9.8,"NM",209,0)
XMUT5^^0^B10053050
"BLD",23,"KRN",9.8,"NM",210,0)
XMADJF0^^0^B2858
"BLD",23,"KRN",9.8,"NM",211,0)
XMUT5B^^0^B3327983
"BLD",23,"KRN",9.8,"NM",212,0)
XMUT5Q^^0^B18374484
"BLD",23,"KRN",9.8,"NM",213,0)
XMUT6^^0^B4028377
"BLD",23,"KRN",9.8,"NM",214,0)
XMADA^^0^B1397
"BLD",23,"KRN",9.8,"NM",215,0)
XMADDOC^^0^B2504
"BLD",23,"KRN",9.8,"NM",216,0)
XMADDOC1^^0^B3478
"BLD",23,"KRN",9.8,"NM",217,0)
XMADDOC2^^0^B2954
"BLD",23,"KRN",9.8,"NM",221,0)
XMR2^^0^B14969039
"BLD",23,"KRN",9.8,"NM",222,0)
XMRENT^^0^B4126976
"BLD",23,"KRN",9.8,"NM",223,0)
XMRPCTSA^^0^B7279851
"BLD",23,"KRN",9.8,"NM",224,0)
XMGAPI2^^0^B11238816
"BLD",23,"KRN",9.8,"NM",225,0)
XMYPOST9^^0^B23416692
"BLD",23,"KRN",9.8,"NM",226,0)
XMJERR^^0^B712835
"BLD",23,"KRN",9.8,"NM",227,0)
XMUT1A^^0^B9108273
"BLD",23,"KRN",9.8,"NM",228,0)
XMA30^^0^B17143009
"BLD",23,"KRN",9.8,"NM",229,0)
XMYMNEM^^0^B5824471
"BLD",23,"KRN",9.8,"NM",230,0)
XMC11A^^0^B9110591
"BLD",23,"KRN",9.8,"NM",231,0)
XMC11^^0^B20056582
"BLD",23,"KRN",9.8,"NM",232,0)
XMTDO^^0^B4036426
"BLD",23,"KRN",9.8,"NM",233,0)
XMBGRP^^0^B33459848
"BLD",23,"KRN",9.8,"NM",234,0)
XMRONT^^0^B1047307
"BLD",23,"KRN",9.8,"NM",235,0)
XMRMSM^^0^B464029
"BLD",23,"KRN",9.8,"NM",236,0)
XMC1^^0^B13268995
"BLD",23,"KRN",9.8,"NM",237,0)
XMYPRE2A^^0^B46355271
"BLD",23,"KRN",9.8,"NM",238,0)
XMXUTIL1^^0^B20913529
"BLD",23,"KRN",9.8,"NM",239,0)
XMP^^0^B13418139
"BLD",23,"KRN",9.8,"NM",240,0)
XMXSEC^^0^B75144456
"BLD",23,"KRN",9.8,"NM",241,0)
XMXSEC1^^0^B41035184
"BLD",23,"KRN",9.8,"NM",242)
^^^
"BLD",23,"KRN",9.8,"NM",242,0)
XMZTERM^^1
"BLD",23,"KRN",9.8,"NM",243)
^^^
"BLD",23,"KRN",9.8,"NM",243,0)
XMZTERM1^^1
"BLD",23,"KRN",9.8,"NM",244,0)
XMJBM1^^0^B9642488
"BLD",23,"KRN",9.8,"NM",245,0)
XMJDIR^^0^B5222802
"BLD",23,"KRN",9.8,"NM",246,0)
XMXSEC2^^0^B66710999
"BLD",23,"KRN",9.8,"NM",247,0)
XMFAX^^0^B12557841
"BLD",23,"KRN",9.8,"NM",248,0)
XMXPRT^^0^B6580377
"BLD",23,"KRN",9.8,"NM",249,0)
XMXPARM1^^0^B8796402
"BLD",23,"KRN",9.8,"NM",250,0)
XMXLIST^^0^B56785820
"BLD",23,"KRN",9.8,"NM",251,0)
XMXLIST1^^0^B43594198
"BLD",23,"KRN",9.8,"NM",252,0)
XMXUTIL2^^0^B43418106
"BLD",23,"KRN",9.8,"NM",253,0)
XMXEDIT^^0^B10785457
"BLD",23,"KRN",9.8,"NM",254,0)
XMXUTIL3^^0^B12384491
"BLD",23,"KRN",9.8,"NM",255,0)
XMXUTIL4^^0^B31579115
"BLD",23,"KRN",9.8,"NM",256,0)
XMSERR^^0^B4436984
"BLD",23,"KRN",9.8,"NM",257,0)
XMUTPUR0^^0^B2360795
"BLD",23,"KRN",9.8,"NM",258,0)
XMUDNC^^0^B9462227
"BLD",23,"KRN",9.8,"NM",259,0)
XMBPOST^^0^B37801516
"BLD",23,"KRN",9.8,"NM",260,0)
XMTDL2^^0^B29217565
"BLD",23,"KRN",9.8,"NM",261,0)
XMC3^^0^B9631741
"BLD",23,"KRN",9.8,"NM",262,0)
XMVVITA^^0^B17382605
"BLD",23,"KRN",9.8,"NM",263,0)
XMXAPIU^^0^B1235647
"BLD",23,"KRN",9.8,"NM",264,0)
XMXADDR2^^0^B18936440
"BLD",23,"KRN",9.8,"NM",265,0)
XMYPRE2B^^0^B9024689
"BLD",23,"KRN",9.8,"NM",266,0)
XMYPOSTA^^0^B8944384
"BLD",23,"KRN",9.8,"NM",267,0)
XMPC^^0^B8382242
"BLD",23,"KRN",9.8,"NM","B","XM",81)

"BLD",23,"KRN",9.8,"NM","B","XM0",148)

"BLD",23,"KRN",9.8,"NM","B","XMA",125)

"BLD",23,"KRN",9.8,"NM","B","XMA0",126)

"BLD",23,"KRN",9.8,"NM","B","XMA01",173)

"BLD",23,"KRN",9.8,"NM","B","XMA02",181)

"BLD",23,"KRN",9.8,"NM","B","XMA03",82)

"BLD",23,"KRN",9.8,"NM","B","XMA0A",192)

"BLD",23,"KRN",9.8,"NM","B","XMA1",149)

"BLD",23,"KRN",9.8,"NM","B","XMA10",158)

"BLD",23,"KRN",9.8,"NM","B","XMA11",164)

"BLD",23,"KRN",9.8,"NM","B","XMA11A",127)

"BLD",23,"KRN",9.8,"NM","B","XMA11B",174)

"BLD",23,"KRN",9.8,"NM","B","XMA1A",182)

"BLD",23,"KRN",9.8,"NM","B","XMA1B",83)

"BLD",23,"KRN",9.8,"NM","B","XMA1C",72)

"BLD",23,"KRN",9.8,"NM","B","XMA1E",150)

"BLD",23,"KRN",9.8,"NM","B","XMA2",113)

"BLD",23,"KRN",9.8,"NM","B","XMA20",165)

"BLD",23,"KRN",9.8,"NM","B","XMA21",128)

"BLD",23,"KRN",9.8,"NM","B","XMA210",175)

"BLD",23,"KRN",9.8,"NM","B","XMA21A",183)

"BLD",23,"KRN",9.8,"NM","B","XMA21B",189)

"BLD",23,"KRN",9.8,"NM","B","XMA21FWD",151)

"BLD",23,"KRN",9.8,"NM","B","XMA21G",159)

"BLD",23,"KRN",9.8,"NM","B","XMA22",166)

"BLD",23,"KRN",9.8,"NM","B","XMA24",176)

"BLD",23,"KRN",9.8,"NM","B","XMA25",184)

"BLD",23,"KRN",9.8,"NM","B","XMA2B",84)

"BLD",23,"KRN",9.8,"NM","B","XMA2C",193)

"BLD",23,"KRN",9.8,"NM","B","XMA2C0",152)

"BLD",23,"KRN",9.8,"NM","B","XMA2R",132)

"BLD",23,"KRN",9.8,"NM","B","XMA3",85)

"BLD",23,"KRN",9.8,"NM","B","XMA30",228)

"BLD",23,"KRN",9.8,"NM","B","XMA32",147)

"BLD",23,"KRN",9.8,"NM","B","XMA32A",86)

"BLD",23,"KRN",9.8,"NM","B","XMA4",153)

"BLD",23,"KRN",9.8,"NM","B","XMA5",160)

"BLD",23,"KRN",9.8,"NM","B","XMA50",167)

"BLD",23,"KRN",9.8,"NM","B","XMA51",170)

"BLD",23,"KRN",9.8,"NM","B","XMA5A",177)

"BLD",23,"KRN",9.8,"NM","B","XMA6",185)

"BLD",23,"KRN",9.8,"NM","B","XMA7",190)

"BLD",23,"KRN",9.8,"NM","B","XMA7G",194)

"BLD",23,"KRN",9.8,"NM","B","XMA7G1",154)

"BLD",23,"KRN",9.8,"NM","B","XMAD0",168)

"BLD",23,"KRN",9.8,"NM","B","XMAD1",171)

"BLD",23,"KRN",9.8,"NM","B","XMAD1A",178)

"BLD",23,"KRN",9.8,"NM","B","XMAD1X",186)

"BLD",23,"KRN",9.8,"NM","B","XMAD2",129)

"BLD",23,"KRN",9.8,"NM","B","XMADA",214)

"BLD",23,"KRN",9.8,"NM","B","XMADDOC",215)

"BLD",23,"KRN",9.8,"NM","B","XMADDOC1",216)

"BLD",23,"KRN",9.8,"NM","B","XMADDOC2",217)

"BLD",23,"KRN",9.8,"NM","B","XMADGO",68)

"BLD",23,"KRN",9.8,"NM","B","XMADGO1",179)

"BLD",23,"KRN",9.8,"NM","B","XMADJ999",69)

"BLD",23,"KRN",9.8,"NM","B","XMADJF0",210)

"BLD",23,"KRN",9.8,"NM","B","XMADJF1",155)

"BLD",23,"KRN",9.8,"NM","B","XMADJF1A",161)

"BLD",23,"KRN",9.8,"NM","B","XMADJF1B",169)

"BLD",23,"KRN",9.8,"NM","B","XMAH",130)

"BLD",23,"KRN",9.8,"NM","B","XMAH0",187)

"BLD",23,"KRN",9.8,"NM","B","XMAH1",131)

"BLD",23,"KRN",9.8,"NM","B","XMAI",195)

"BLD",23,"KRN",9.8,"NM","B","XMAI0",156)

"BLD",23,"KRN",9.8,"NM","B","XMAI1",162)

"BLD",23,"KRN",9.8,"NM","B","XMAI2",87)

"BLD",23,"KRN",9.8,"NM","B","XMAK",172)

"BLD",23,"KRN",9.8,"NM","B","XMAL0",180)

"BLD",23,"KRN",9.8,"NM","B","XMAL0A",188)

"BLD",23,"KRN",9.8,"NM","B","XMANON",191)

"BLD",23,"KRN",9.8,"NM","B","XMAP",196)

"BLD",23,"KRN",9.8,"NM","B","XMAP0",157)

"BLD",23,"KRN",9.8,"NM","B","XMAP1",163)

"BLD",23,"KRN",9.8,"NM","B","XMAPHOST",73)

"BLD",23,"KRN",9.8,"NM","B","XMASEC",199)

"BLD",23,"KRN",9.8,"NM","B","XMB",66)

"BLD",23,"KRN",9.8,"NM","B","XMB1",197)

"BLD",23,"KRN",9.8,"NM","B","XMBGRP",233)

"BLD",23,"KRN",9.8,"NM","B","XMBPOST",259)

"BLD",23,"KRN",9.8,"NM","B","XMC",204)

"BLD",23,"KRN",9.8,"NM","B","XMC1",236)

"BLD",23,"KRN",9.8,"NM","B","XMC11",231)

"BLD",23,"KRN",9.8,"NM","B","XMC11A",230)

"BLD",23,"KRN",9.8,"NM","B","XMC2",114)

"BLD",23,"KRN",9.8,"NM","B","XMC3",261)

"BLD",23,"KRN",9.8,"NM","B","XMC4",205)

"BLD",23,"KRN",9.8,"NM","B","XMCD",203)

"BLD",23,"KRN",9.8,"NM","B","XMCTLK",88)

"BLD",23,"KRN",9.8,"NM","B","XMD",67)

"BLD",23,"KRN",9.8,"NM","B","XMDF",134)

"BLD",23,"KRN",9.8,"NM","B","XMDIRQST",89)

"BLD",23,"KRN",9.8,"NM","B","XMDIRRCV",90)

"BLD",23,"KRN",9.8,"NM","B","XMDIRSND",91)

"BLD",23,"KRN",9.8,"NM","B","XME",201)

"BLD",23,"KRN",9.8,"NM","B","XME1",202)

"BLD",23,"KRN",9.8,"NM","B","XMFAX",247)

"BLD",23,"KRN",9.8,"NM","B","XMGAPI2",224)

"BLD",23,"KRN",9.8,"NM","B","XMGAPI3",71)

"BLD",23,"KRN",9.8,"NM","B","XMGAPI4",133)

"BLD",23,"KRN",9.8,"NM","B","XMHIG",1)

"BLD",23,"KRN",9.8,"NM","B","XMHIU",2)

"BLD",23,"KRN",9.8,"NM","B","XMJBL",143)

"BLD",23,"KRN",9.8,"NM","B","XMJBM",3)

"BLD",23,"KRN",9.8,"NM","B","XMJBM1",244)

"BLD",23,"KRN",9.8,"NM","B","XMJBN",4)

"BLD",23,"KRN",9.8,"NM","B","XMJBU",5)

"BLD",23,"KRN",9.8,"NM","B","XMJDIR",245)

"BLD",23,"KRN",9.8,"NM","B","XMJERR",226)

"BLD",23,"KRN",9.8,"NM","B","XMJMA",6)

"BLD",23,"KRN",9.8,"NM","B","XMJMBULL",7)

"BLD",23,"KRN",9.8,"NM","B","XMJMC",8)

"BLD",23,"KRN",9.8,"NM","B","XMJMCODE",9)

"BLD",23,"KRN",9.8,"NM","B","XMJMD",10)

"BLD",23,"KRN",9.8,"NM","B","XMJMF",11)

"BLD",23,"KRN",9.8,"NM","B","XMJMFA",12)

"BLD",23,"KRN",9.8,"NM","B","XMJMFB",13)

"BLD",23,"KRN",9.8,"NM","B","XMJML",14)

"BLD",23,"KRN",9.8,"NM","B","XMJMLN",15)

"BLD",23,"KRN",9.8,"NM","B","XMJMLR",16)

"BLD",23,"KRN",9.8,"NM","B","XMJMLR1",144)

"BLD",23,"KRN",9.8,"NM","B","XMJMOI",17)

"BLD",23,"KRN",9.8,"NM","B","XMJMOIE",18)

"BLD",23,"KRN",9.8,"NM","B","XMJMOR",19)

"BLD",23,"KRN",9.8,"NM","B","XMJMORX",20)

"BLD",23,"KRN",9.8,"NM","B","XMJMORX1",21)

"BLD",23,"KRN",9.8,"NM","B","XMJMP",22)

"BLD",23,"KRN",9.8,"NM","B","XMJMP1",23)

"BLD",23,"KRN",9.8,"NM","B","XMJMQ",141)

"BLD",23,"KRN",9.8,"NM","B","XMJMQ1",77)

"BLD",23,"KRN",9.8,"NM","B","XMJMR",26)

"BLD",23,"KRN",9.8,"NM","B","XMJMRO",27)

"BLD",23,"KRN",9.8,"NM","B","XMJMS",28)

"BLD",23,"KRN",9.8,"NM","B","XMJMSA",29)

"BLD",23,"KRN",9.8,"NM","B","XMJMSO",30)

"BLD",23,"KRN",9.8,"NM","B","XMJMT",31)

"BLD",23,"KRN",9.8,"NM","B","XMKP",32)

"BLD",23,"KRN",9.8,"NM","B","XMKPL",206)

"BLD",23,"KRN",9.8,"NM","B","XMKPLQ",207)

"BLD",23,"KRN",9.8,"NM","B","XMKPO",34)

"BLD",23,"KRN",9.8,"NM","B","XMP",239)

"BLD",23,"KRN",9.8,"NM","B","XMP2A",115)

"BLD",23,"KRN",9.8,"NM","B","XMP3",92)

"BLD",23,"KRN",9.8,"NM","B","XMPC",267)

"BLD",23,"KRN",9.8,"NM","B","XMPG",116)

"BLD",23,"KRN",9.8,"NM","B","XMPH",93)

"BLD",23,"KRN",9.8,"NM","B","XMPSEC",117)

"BLD",23,"KRN",9.8,"NM","B","XMR",94)

"BLD",23,"KRN",9.8,"NM","B","XMR0",112)

"BLD",23,"KRN",9.8,"NM","B","XMR0A",95)

"BLD",23,"KRN",9.8,"NM","B","XMR0B",96)

"BLD",23,"KRN",9.8,"NM","B","XMR0BLOB",97)

"BLD",23,"KRN",9.8,"NM","B","XMR1",98)

"BLD",23,"KRN",9.8,"NM","B","XMR1A",99)

"BLD",23,"KRN",9.8,"NM","B","XMR2",221)

"BLD",23,"KRN",9.8,"NM","B","XMRENT",222)

"BLD",23,"KRN",9.8,"NM","B","XMRMSM",235)

"BLD",23,"KRN",9.8,"NM","B","XMRONT",234)

"BLD",23,"KRN",9.8,"NM","B","XMRPCTS0",100)

"BLD",23,"KRN",9.8,"NM","B","XMRPCTS1",101)

"BLD",23,"KRN",9.8,"NM","B","XMRPCTSA",223)

"BLD",23,"KRN",9.8,"NM","B","XMRTCP",118)

"BLD",23,"KRN",9.8,"NM","B","XMRUCX",119)

"BLD",23,"KRN",9.8,"NM","B","XMS",102)

"BLD",23,"KRN",9.8,"NM","B","XMS0",120)

"BLD",23,"KRN",9.8,"NM","B","XMS0A",145)

"BLD",23,"KRN",9.8,"NM","B","XMS0BLOB",146)

"BLD",23,"KRN",9.8,"NM","B","XMS1",103)

"BLD",23,"KRN",9.8,"NM","B","XMS2",198)

"BLD",23,"KRN",9.8,"NM","B","XMS3",121)

"BLD",23,"KRN",9.8,"NM","B","XMS4",139)

"BLD",23,"KRN",9.8,"NM","B","XMS5",138)

"BLD",23,"KRN",9.8,"NM","B","XMS5A",140)

"BLD",23,"KRN",9.8,"NM","B","XMSERR",256)

"BLD",23,"KRN",9.8,"NM","B","XMSM",104)

"BLD",23,"KRN",9.8,"NM","B","XMSM1",105)

"BLD",23,"KRN",9.8,"NM","B","XMSMAIL",106)

"BLD",23,"KRN",9.8,"NM","B","XMTDF",35)

"BLD",23,"KRN",9.8,"NM","B","XMTDL",36)

"BLD",23,"KRN",9.8,"NM","B","XMTDL1",37)

"BLD",23,"KRN",9.8,"NM","B","XMTDL2",260)

"BLD",23,"KRN",9.8,"NM","B","XMTDO",232)

"BLD",23,"KRN",9.8,"NM","B","XMTDT",208)

"BLD",23,"KRN",9.8,"NM","B","XMUDNC",258)

"BLD",23,"KRN",9.8,"NM","B","XMUPIN",78)

"BLD",23,"KRN",9.8,"NM","B","XMUT1",122)

"BLD",23,"KRN",9.8,"NM","B","XMUT1A",227)

"BLD",23,"KRN",9.8,"NM","B","XMUT2",107)

"BLD",23,"KRN",9.8,"NM","B","XMUT4",108)

"BLD",23,"KRN",9.8,"NM","B","XMUT4A",109)

"BLD",23,"KRN",9.8,"NM","B","XMUT4B",110)

"BLD",23,"KRN",9.8,"NM","B","XMUT4BA",111)

"BLD",23,"KRN",9.8,"NM","B","XMUT4C",123)

"BLD",23,"KRN",9.8,"NM","B","XMUT5",209)

"BLD",23,"KRN",9.8,"NM","B","XMUT5B",211)

"BLD",23,"KRN",9.8,"NM","B","XMUT5Q",212)

"BLD",23,"KRN",9.8,"NM","B","XMUT6",213)

"BLD",23,"KRN",9.8,"NM","B","XMUTERM",79)

"BLD",23,"KRN",9.8,"NM","B","XMUTERM1",80)

"BLD",23,"KRN",9.8,"NM","B","XMUTPUR0",257)

"BLD",23,"KRN",9.8,"NM","B","XMVGROUP",124)

"BLD",23,"KRN",9.8,"NM","B","XMVSURR",39)

"BLD",23,"KRN",9.8,"NM","B","XMVVITA",262)

"BLD",23,"KRN",9.8,"NM","B","XMVVITAE",40)

"BLD",23,"KRN",9.8,"NM","B","XMXADDR",41)

"BLD",23,"KRN",9.8,"NM","B","XMXADDR1",42)

"BLD",23,"KRN",9.8,"NM","B","XMXADDR2",264)

"BLD",23,"KRN",9.8,"NM","B","XMXADDRD",43)

"BLD",23,"KRN",9.8,"NM","B","XMXADDRG",44)

"BLD",23,"KRN",9.8,"NM","B","XMXANSER",45)

"BLD",23,"KRN",9.8,"NM","B","XMXAPI",46)

"BLD",23,"KRN",9.8,"NM","B","XMXAPIB",47)

"BLD",23,"KRN",9.8,"NM","B","XMXAPIU",263)

"BLD",23,"KRN",9.8,"NM","B","XMXBSKT",50)

"BLD",23,"KRN",9.8,"NM","B","XMXBULL",51)

"BLD",23,"KRN",9.8,"NM","B","XMXEDIT",253)

"BLD",23,"KRN",9.8,"NM","B","XMXLIST",250)

"BLD",23,"KRN",9.8,"NM","B","XMXLIST1",251)

"BLD",23,"KRN",9.8,"NM","B","XMXMBOX",53)

"BLD",23,"KRN",9.8,"NM","B","XMXMSGS",54)

"BLD",23,"KRN",9.8,"NM","B","XMXMSGS1",55)

"BLD",23,"KRN",9.8,"NM","B","XMXMSGS2",135)

"BLD",23,"KRN",9.8,"NM","B","XMXPARM",56)

"BLD",23,"KRN",9.8,"NM","B","XMXPARM1",249)

"BLD",23,"KRN",9.8,"NM","B","XMXPARMB",57)

"BLD",23,"KRN",9.8,"NM","B","XMXPRT",248)

"BLD",23,"KRN",9.8,"NM","B","XMXREPLY",58)

"BLD",23,"KRN",9.8,"NM","B","XMXSEC",240)

"BLD",23,"KRN",9.8,"NM","B","XMXSEC1",241)

"BLD",23,"KRN",9.8,"NM","B","XMXSEC2",246)

"BLD",23,"KRN",9.8,"NM","B","XMXSEND",60)

"BLD",23,"KRN",9.8,"NM","B","XMXTO",61)

"BLD",23,"KRN",9.8,"NM","B","XMXUTIL",62)

"BLD",23,"KRN",9.8,"NM","B","XMXUTIL1",238)

"BLD",23,"KRN",9.8,"NM","B","XMXUTIL2",252)

"BLD",23,"KRN",9.8,"NM","B","XMXUTIL3",254)

"BLD",23,"KRN",9.8,"NM","B","XMXUTIL4",255)

"BLD",23,"KRN",9.8,"NM","B","XMYMNEM",229)

"BLD",23,"KRN",9.8,"NM","B","XMYPOST2",137)

"BLD",23,"KRN",9.8,"NM","B","XMYPOST9",225)

"BLD",23,"KRN",9.8,"NM","B","XMYPOSTA",266)

"BLD",23,"KRN",9.8,"NM","B","XMYPRE",142)

"BLD",23,"KRN",9.8,"NM","B","XMYPRE2",136)

"BLD",23,"KRN",9.8,"NM","B","XMYPRE2A",237)

"BLD",23,"KRN",9.8,"NM","B","XMYPRE2B",265)

"BLD",23,"KRN",9.8,"NM","B","XMZTERM",242)

"BLD",23,"KRN",9.8,"NM","B","XMZTERM1",243)

"BLD",23,"KRN",19,0)
19
"BLD",23,"KRN",19,"NM",0)
^9.68A^59^58
"BLD",23,"KRN",19,"NM",1,0)
XM FILTER EDIT^^0
"BLD",23,"KRN",19,"NM",2,0)
XM PERSONAL MENU^^0
"BLD",23,"KRN",19,"NM",3,0)
XMASSUME^^0
"BLD",23,"KRN",19,"NM",4,0)
XMBANNER^^0
"BLD",23,"KRN",19,"NM",5,0)
XMBASKLIST^^0
"BLD",23,"KRN",19,"NM",6,0)
XMEDITFWD^^0
"BLD",23,"KRN",19,"NM",7,0)
XMEDITPERSGROUP^^0
"BLD",23,"KRN",19,"NM",8,0)
XMEDITUSER^^0
"BLD",23,"KRN",19,"NM",9,0)
XMENROLL^^0
"BLD",23,"KRN",19,"NM",10,0)
XMHELP^^0
"BLD",23,"KRN",19,"NM",11,0)
XMHELPALL^^0
"BLD",23,"KRN",19,"NM",12,0)
XMHELPGROUP^^0
"BLD",23,"KRN",19,"NM",13,0)
XMHELPLNK^^0
"BLD",23,"KRN",19,"NM",14,0)
XMHELP-ON-LINE-USER_MANUAL^^0
"BLD",23,"KRN",19,"NM",15,0)
XMHELPQUEST^^0
"BLD",23,"KRN",19,"NM",16,0)
XMHELPUSER^^0
"BLD",23,"KRN",19,"NM",17,0)
XMKSP^^0
"BLD",23,"KRN",19,"NM",18,0)
XMLATER-EDIT^^0
"BLD",23,"KRN",19,"NM",19,0)
XMLATER-REPORT^^0
"BLD",23,"KRN",19,"NM",20,0)
XMMGR-IN-BASKET-PURGE^^0
"BLD",23,"KRN",19,"NM",21,0)
XMMGR-NEW-MAIL-BOX^^0
"BLD",23,"KRN",19,"NM",22,0)
XMNEW^^0
"BLD",23,"KRN",19,"NM",23,0)
XM-NEW-FEATURES^^0
"BLD",23,"KRN",19,"NM",24,0)
XMOTHER^^0
"BLD",23,"KRN",19,"NM",25,0)
XMPACK^^0
"BLD",23,"KRN",19,"NM",26,0)
XMPOST^^0
"BLD",23,"KRN",19,"NM",27,0)
XMREAD^^0
"BLD",23,"KRN",19,"NM",28,0)
XMSEARCH^^0
"BLD",23,"KRN",19,"NM",29,0)
XMSEND^^0
"BLD",23,"KRN",19,"NM",30,0)
XMSHARE^^0
"BLD",23,"KRN",19,"NM",31,0)
XMSUGGESTION^^0
"BLD",23,"KRN",19,"NM",32,0)
XMUSER^^0
"BLD",23,"KRN",19,"NM",33,0)
XMMGR-TERMINATE-ONE^^0
"BLD",23,"KRN",19,"NM",34,0)
XMMGR-TERMINATE-MANY^^0
"BLD",23,"KRN",19,"NM",35,0)
XMMGR-TERMINATE-SUGGEST^^0
"BLD",23,"KRN",19,"NM",36,0)
XMMGR-PURGE-MESSAGE^^0
"BLD",23,"KRN",19,"NM",37,0)
XMMGR-DISK-MANY-MESSAGE-MAINT^^0
"BLD",23,"KRN",19,"NM",38,0)
XMMGR-LARGE-MESSAGE-REPORT^^0
"BLD",23,"KRN",19,"NM",39,0)
XMR-BROADCAST-VA-WIDE^^0
"BLD",23,"KRN",19,"NM",40,0)
XMUT-CHKFIL^^0
"BLD",23,"KRN",19,"NM",41,0)
XMUT-REC-DELIVER^^0
"BLD",23,"KRN",19,"NM",42,0)
XMYB-BROADCAST-VA-WIDE^^0
"BLD",23,"KRN",19,"NM",44,0)
XMNET^^3
"BLD",23,"KRN",19,"NM",45,0)
XMMGR^^3
"BLD",23,"KRN",19,"NM",46,0)
XMMGR-START-BACKGROUND-FILER^^0
"BLD",23,"KRN",19,"NM",47)
^^^
"BLD",23,"KRN",19,"NM",47,0)
XMQDELETE^^1
"BLD",23,"KRN",19,"NM",48)
^^^
"BLD",23,"KRN",19,"NM",48,0)
XMDIE SERVER^^1
"BLD",23,"KRN",19,"NM",49)
^^^
"BLD",23,"KRN",19,"NM",49,0)
XMVSET^^1
"BLD",23,"KRN",19,"NM",50)
^^^
"BLD",23,"KRN",19,"NM",50,0)
XMVTEST^^1
"BLD",23,"KRN",19,"NM",51,0)
XMMGR-STOP-BACKGROUND-FILER^^0
"BLD",23,"KRN",19,"NM",52,0)
XMMGR-CHECK-BACKGROUND-FILER^^0
"BLD",23,"KRN",19,"NM",53,0)
XMMGR-MAIL-GRP-COORD-W/REMOTES^^0
"BLD",23,"KRN",19,"NM",54,0)
XMMGR-MAIL-GRP-COORDINATOR^^0
"BLD",23,"KRN",19,"NM",55,0)
XMEDITSURR^^0
"BLD",23,"KRN",19,"NM",56,0)
XMS-SEQ-TRANSMIT^^0
"BLD",23,"KRN",19,"NM",57,0)
XMR-SEQ-RECEIVE^^0
"BLD",23,"KRN",19,"NM",58,0)
XM DELIVERY BASKET EDIT^^0
"BLD",23,"KRN",19,"NM",59)
^^^
"BLD",23,"KRN",19,"NM",59,0)
XM-FEATURES NEW IN VERSION 3.1^^1
"BLD",23,"KRN",19,"NM","B","XM DELIVERY BASKET EDIT",58)

"BLD",23,"KRN",19,"NM","B","XM FILTER EDIT",1)

"BLD",23,"KRN",19,"NM","B","XM PERSONAL MENU",2)

"BLD",23,"KRN",19,"NM","B","XM-FEATURES NEW IN VERSION 3.1",59)

"BLD",23,"KRN",19,"NM","B","XM-NEW-FEATURES",23)

"BLD",23,"KRN",19,"NM","B","XMASSUME",3)

"BLD",23,"KRN",19,"NM","B","XMBANNER",4)

"BLD",23,"KRN",19,"NM","B","XMBASKLIST",5)

"BLD",23,"KRN",19,"NM","B","XMDIE SERVER",48)

"BLD",23,"KRN",19,"NM","B","XMEDITFWD",6)

"BLD",23,"KRN",19,"NM","B","XMEDITPERSGROUP",7)

"BLD",23,"KRN",19,"NM","B","XMEDITSURR",55)

"BLD",23,"KRN",19,"NM","B","XMEDITUSER",8)

"BLD",23,"KRN",19,"NM","B","XMENROLL",9)

"BLD",23,"KRN",19,"NM","B","XMHELP",10)

"BLD",23,"KRN",19,"NM","B","XMHELP-ON-LINE-USER_MANUAL",14)

"BLD",23,"KRN",19,"NM","B","XMHELPALL",11)

"BLD",23,"KRN",19,"NM","B","XMHELPGROUP",12)

"BLD",23,"KRN",19,"NM","B","XMHELPLNK",13)

"BLD",23,"KRN",19,"NM","B","XMHELPQUEST",15)

"BLD",23,"KRN",19,"NM","B","XMHELPUSER",16)

"BLD",23,"KRN",19,"NM","B","XMKSP",17)

"BLD",23,"KRN",19,"NM","B","XMLATER-EDIT",18)

"BLD",23,"KRN",19,"NM","B","XMLATER-REPORT",19)

"BLD",23,"KRN",19,"NM","B","XMMGR",45)

"BLD",23,"KRN",19,"NM","B","XMMGR-CHECK-BACKGROUND-FILER",52)

"BLD",23,"KRN",19,"NM","B","XMMGR-DISK-MANY-MESSAGE-MAINT",37)

"BLD",23,"KRN",19,"NM","B","XMMGR-IN-BASKET-PURGE",20)

"BLD",23,"KRN",19,"NM","B","XMMGR-LARGE-MESSAGE-REPORT",38)

"BLD",23,"KRN",19,"NM","B","XMMGR-MAIL-GRP-COORD-W/REMOTES",53)

"BLD",23,"KRN",19,"NM","B","XMMGR-MAIL-GRP-COORDINATOR",54)

"BLD",23,"KRN",19,"NM","B","XMMGR-NEW-MAIL-BOX",21)

"BLD",23,"KRN",19,"NM","B","XMMGR-PURGE-MESSAGE",36)

"BLD",23,"KRN",19,"NM","B","XMMGR-START-BACKGROUND-FILER",46)

"BLD",23,"KRN",19,"NM","B","XMMGR-STOP-BACKGROUND-FILER",51)

"BLD",23,"KRN",19,"NM","B","XMMGR-TERMINATE-MANY",34)

"BLD",23,"KRN",19,"NM","B","XMMGR-TERMINATE-ONE",33)

"BLD",23,"KRN",19,"NM","B","XMMGR-TERMINATE-SUGGEST",35)

"BLD",23,"KRN",19,"NM","B","XMNET",44)

"BLD",23,"KRN",19,"NM","B","XMNEW",22)

"BLD",23,"KRN",19,"NM","B","XMOTHER",24)

"BLD",23,"KRN",19,"NM","B","XMPACK",25)

"BLD",23,"KRN",19,"NM","B","XMPOST",26)

"BLD",23,"KRN",19,"NM","B","XMQDELETE",47)

"BLD",23,"KRN",19,"NM","B","XMR-BROADCAST-VA-WIDE",39)

"BLD",23,"KRN",19,"NM","B","XMR-SEQ-RECEIVE",57)

"BLD",23,"KRN",19,"NM","B","XMREAD",27)

"BLD",23,"KRN",19,"NM","B","XMS-SEQ-TRANSMIT",56)

"BLD",23,"KRN",19,"NM","B","XMSEARCH",28)

"BLD",23,"KRN",19,"NM","B","XMSEND",29)

"BLD",23,"KRN",19,"NM","B","XMSHARE",30)

"BLD",23,"KRN",19,"NM","B","XMSUGGESTION",31)

"BLD",23,"KRN",19,"NM","B","XMUSER",32)

"BLD",23,"KRN",19,"NM","B","XMUT-CHKFIL",40)

"BLD",23,"KRN",19,"NM","B","XMUT-REC-DELIVER",41)

"BLD",23,"KRN",19,"NM","B","XMVSET",49)

"BLD",23,"KRN",19,"NM","B","XMVTEST",50)

"BLD",23,"KRN",19,"NM","B","XMYB-BROADCAST-VA-WIDE",42)

"BLD",23,"KRN",19.1,0)
19.1
"BLD",23,"KRN",19.1,"NM",0)
^9.68A^^0
"BLD",23,"KRN","B",.4,.4)

"BLD",23,"KRN","B",.401,.401)

"BLD",23,"KRN","B",.402,.402)

"BLD",23,"KRN","B",.403,.403)

"BLD",23,"KRN","B",.5,.5)

"BLD",23,"KRN","B",.84,.84)

"BLD",23,"KRN","B",3.6,3.6)

"BLD",23,"KRN","B",3.8,3.8)

"BLD",23,"KRN","B",9.2,9.2)

"BLD",23,"KRN","B",9.8,9.8)

"BLD",23,"KRN","B",19,19)

"BLD",23,"KRN","B",19.1,19.1)

"BLD",23,"QUES",0)
^9.62^^
"BLD",23,"REQB",0)
^9.611^3^3
"BLD",23,"REQB",1,0)
XU*8.0*67^1
"BLD",23,"REQB",2,0)
XU*8.0*113^1
"BLD",23,"REQB",3,0)
XU*8.0*112^1
"BLD",23,"REQB","B","XU*8.0*112",3)

"BLD",23,"REQB","B","XU*8.0*113",2)

"BLD",23,"REQB","B","XU*8.0*67",1)

"FIA",3.6)
BULLETIN
"FIA",3.6,0)
^XMB(3.6,
"FIA",3.6,0,0)
3.6
"FIA",3.6,0,1)
y^y^p^^^^n
"FIA",3.6,0,10)

"FIA",3.6,0,11)

"FIA",3.6,0,"RLRO")

"FIA",3.6,0,"VR")
7.1^XM
"FIA",3.6,3.6)
1
"FIA",3.6,3.6,5)

"FIA",3.6,3.6,12)

"FIA",3.7)
MAILBOX
"FIA",3.7,0)
^XMB(3.7,
"FIA",3.7,0,0)
3.7P
"FIA",3.7,0,1)
y^y^f^^^^n
"FIA",3.7,0,10)

"FIA",3.7,0,11)

"FIA",3.7,0,"RLRO")

"FIA",3.7,0,"VR")
7.1^XM
"FIA",3.7,3.7)
0
"FIA",3.7,3.701)
0
"FIA",3.7,3.702)
0
"FIA",3.7,3.703)
0
"FIA",3.7,3.704)
0
"FIA",3.7,3.715)
0
"FIA",3.73)
MESSAGES TO BE NEW AT A LATER DATE
"FIA",3.73,0)
^XMB(3.73,
"FIA",3.73,0,0)
3.73DIAO
"FIA",3.73,0,1)
y^y^f^^^^n
"FIA",3.73,0,10)

"FIA",3.73,0,11)

"FIA",3.73,0,"RLRO")

"FIA",3.73,0,"VR")
7.1^XM
"FIA",3.73,3.73)
0
"FIA",3.8)
MAIL GROUP
"FIA",3.8,0)
^XMB(3.8,
"FIA",3.8,0,0)
3.8
"FIA",3.8,0,1)
y^y^p^^^^n
"FIA",3.8,0,10)

"FIA",3.8,0,11)

"FIA",3.8,0,"RLRO")

"FIA",3.8,0,"VR")
7.1^XM
"FIA",3.8,3.8)
1
"FIA",3.8,3.8,.01)

"FIA",3.8,3.8,2)

"FIA",3.8,3.8,6)

"FIA",3.8,3.8,12)

"FIA",3.8,3.802)
1
"FIA",3.8,3.802,.01)

"FIA",3.8,3.81)
1
"FIA",3.8,3.81,.01)

"FIA",3.8,3.81,1)

"FIA",3.8,3.811)
1
"FIA",3.8,3.811,1)

"FIA",3.8,3.812)
1
"FIA",3.8,3.812,.01)

"FIA",3.9)
MESSAGE
"FIA",3.9,0)
^XMB(3.9,
"FIA",3.9,0,0)
3.9s
"FIA",3.9,0,1)
y^y^f^^^^n
"FIA",3.9,0,10)

"FIA",3.9,0,11)

"FIA",3.9,0,"RLRO")

"FIA",3.9,0,"VR")
7.1^XM
"FIA",3.9,3.9)
0
"FIA",3.9,3.9001)
0
"FIA",3.9,3.91)
0
"FIA",3.9,3.911)
0
"FIA",3.9,3.914)
0
"FIA",3.9,3.92)
0
"FIA",3.9,3.92005)
0
"FIA",4.2)
DOMAIN
"FIA",4.2,0)
^DIC(4.2,
"FIA",4.2,0,0)
4.2I
"FIA",4.2,0,1)
y^y^p^^^^n
"FIA",4.2,0,10)

"FIA",4.2,0,11)

"FIA",4.2,0,"RLRO")

"FIA",4.2,0,"VR")
7.1^XM
"FIA",4.2,4.2)
1
"FIA",4.2,4.2,.01)

"FIA",4.2,4.2,1)

"FIA",4.2,4.2,5)

"FIA",4.2,4.23)
1
"FIA",4.2,4.23,.01)

"FIA",4.2997)
REMOTE USER DIRECTORY
"FIA",4.2997,0)
^XMD(4.2997,
"FIA",4.2997,0,0)
4.2997I
"FIA",4.2997,0,1)
y^y^p^^^^n
"FIA",4.2997,0,10)

"FIA",4.2997,0,11)

"FIA",4.2997,0,"RLRO")

"FIA",4.2997,0,"VR")
7.1^XM
"FIA",4.2997,4.2997)
1
"FIA",4.2997,4.2997,99)

"FIA",4.2999)
MESSAGE STATISTICS
"FIA",4.2999,0)
^XMBS(4.2999,
"FIA",4.2999,0,0)
4.2999IP
"FIA",4.2999,0,1)
y^y^p^^^^n
"FIA",4.2999,0,10)

"FIA",4.2999,0,11)

"FIA",4.2999,0,"RLRO")

"FIA",4.2999,0,"VR")
7.1^XM
"FIA",4.2999,4.2999)
1
"FIA",4.2999,4.29992)
1
"FIA",4.2999,4.29992,2)

"FIA",4.3)
MAILMAN SITE PARAMETERS
"FIA",4.3,0)
^XMB(1,
"FIA",4.3,0,0)
4.3P
"FIA",4.3,0,1)
y^y^f^^^^n
"FIA",4.3,0,10)

"FIA",4.3,0,11)

"FIA",4.3,0,"RLRO")

"FIA",4.3,0,"VR")
7.1^XM
"FIA",4.3,4.3)
0
"FIA",4.3,4.302)
0
"FIA",4.3,4.31)
0
"FIA",4.3,4.37)
0
"INI")
XMYPRE2
"INIT")
XMYPOST9
"KRN",.5,116,-1)
0^1
"KRN",.5,116,0)
XM NEXT SEQUENCE NUMBER
"KRN",.5,116,1)
S X=$O(^XMB(3.7,DA(2),2,DA(1),1,"C",""),-1)+1
"KRN",.5,116,3)
0
"KRN",.5,116,9)
Gets the next sequence number in the basket for a new message
"KRN",.84,34001,-1)
0^1
"KRN",.84,34001,0)
34001^2^^MAILMAN^*=New/!=Priority
"KRN",.84,34001,2,0)
^^1^1^2980818^^
"KRN",.84,34001,2,1,0)
*=New/!=Priority
"KRN",.84,34002,-1)
0^2
"KRN",.84,34002,0)
34002^2^^MAILMAN
"KRN",.84,34002,2,0)
^^1^1^2980817^
"KRN",.84,34002,2,1,0)
Subject
"KRN",.84,34003,-1)
0^3
"KRN",.84,34003,0)
34003^2^^MAILMAN
"KRN",.84,34003,2,0)
^^1^1^2980817^
"KRN",.84,34003,2,1,0)
Line
"KRN",.84,34003.1,-1)
0^5
"KRN",.84,34003.1,0)
34003.1^2^^MAILMAN
"KRN",.84,34003.1,2,0)
^^1^1^2980817^^^
"KRN",.84,34003.1,2,1,0)
Lines
"KRN",.84,34004,-1)
0^4
"KRN",.84,34004,0)
34004^2^^MAILMAN^Read/Rcvd
"KRN",.84,34004,2,0)
^^1^1^2980818^
"KRN",.84,34004,2,1,0)
Read/Rcvd
"KRN",.84,34005,-1)
0^6
"KRN",.84,34005,0)
34005^2^^MAILMAN
"KRN",.84,34005,2,0)
^^1^1^2980817^
"KRN",.84,34005,2,1,0)
*=New/!=Priority.......Subject
"KRN",.84,34006,-1)
0^7
"KRN",.84,34006,0)
34006^2^^MAILMAN
"KRN",.84,34006,2,0)
^^1^1^2980817^
"KRN",.84,34006,2,1,0)
From
"KRN",.84,34007,-1)
0^8
"KRN",.84,34007,0)
34007^2^^MAILMAN
"KRN",.84,34007,2,0)
^^1^1^2990622^^^
"KRN",.84,34007,2,1,0)
 message
"KRN",.84,34007.1,-1)
0^9
"KRN",.84,34007.1,0)
34007.1^2^^MAILMAN
"KRN",.84,34007.1,2,0)
^^1^1^2990622^^^
"KRN",.84,34007.1,2,1,0)
 messages
"KRN",.84,34008,-1)
0^10
"KRN",.84,34008,0)
34008^2^^MAILMAN
"KRN",.84,34008,2,0)
^^1^1^2990622^^^^
"KRN",.84,34008,2,1,0)
 new
"KRN",.84,34009,-1)
0^11
"KRN",.84,34009,0)
34009^2^^MAILMAN
"KRN",.84,34009,2,0)
^^1^1^2980817^
"KRN",.84,34009,2,1,0)
* No Name *
"KRN",.84,34010,-1)
0^12
"KRN",.84,34010,0)
34010^2^y^MAILMAN
"KRN",.84,34010,2,0)
^^1^1^2990614^^^
"KRN",.84,34010,2,1,0)
* User #|1| *
"KRN",.84,34010,3,0)
^.845^1^1
"KRN",.84,34010,3,1,0)
1^User DUZ
"KRN",.84,34011,-1)
0^13
"KRN",.84,34011,0)
34011^2^^MAILMAN
"KRN",.84,34011,2,0)
^^1^1^2990622^^^
"KRN",.84,34011,2,1,0)
Basket
"KRN",.84,34012,-1)
0^14
"KRN",.84,34012,0)
34012^2^^MAILMAN
"KRN",.84,34012,2,0)
^^1^1^2980817^
"KRN",.84,34012,2,1,0)
* No Subject *
"KRN",.84,34013,-1)
0^15
"KRN",.84,34013,0)
34013^2^^MAILMAN
"KRN",.84,34013,2,0)
^^1^1^2980817^
"KRN",.84,34013,2,1,0)
No NEW messages
"KRN",3.6,12,-1)
0^8
"KRN",3.6,12,0)
XMRDACK^Confirmation of message
"KRN",3.6,12,1,0)
^3.61A^3^3^2990306^^^^
"KRN",3.6,12,1,1,0)
Your message:
"KRN",3.6,12,1,2,0)
Subj: |1|
"KRN",3.6,12,1,3,0)
has been read by |2|.
"KRN",3.6,12,3,0)
^3.63^4^4^2990306^^^^
"KRN",3.6,12,3,1,0)
This bulletin is used by MailMan to inform the sender of a message
"KRN",3.6,12,3,2,0)
that a recipient has read the message.
"KRN",3.6,12,3,3,0)
The sender of the message must have set the CONFIRMATION REQUESTED
"KRN",3.6,12,3,4,0)
flag to ON when the message was created.
"KRN",3.6,12,4,0)
^3.64A^2^2
"KRN",3.6,12,4,1,0)
1
"KRN",3.6,12,4,1,1,0)
^^1^1^2990306^^
"KRN",3.6,12,4,1,1,1,0)
Message subject
"KRN",3.6,12,4,2,0)
2
"KRN",3.6,12,4,2,1,0)
^^1^1^2990306^^
"KRN",3.6,12,4,2,1,1,0)
Name of the user who just read the message
"KRN",3.6,29,-1)
0^1
"KRN",3.6,29,0)
XM SEND ERR RECIPIENT^Message not delivered to recipient
"KRN",3.6,29,1,0)
^3.61A^7^7^2980729^^^^
"KRN",3.6,29,1,1,0)
Your message [#|5|]
"KRN",3.6,29,1,2,0)
SUBJECT: |1|
"KRN",3.6,29,1,3,0)
was not delivered to |2|.
"KRN",3.6,29,1,4,0)
The error message was:
"KRN",3.6,29,1,5,0)

"KRN",3.6,29,1,6,0)
|3|
"KRN",3.6,29,1,7,0)
<|4|>
"KRN",3.6,29,3,0)
^3.63^3^3^2980529^^^^
"KRN",3.6,29,3,1,0)
This message is issued by the MailMan network processor when a message
"KRN",3.6,29,3,2,0)
recipient has been rejected by the remote node.  The rejection message
"KRN",3.6,29,3,3,0)
of the remote node is included in the bulletin.
"KRN",3.6,29,4,0)
^3.64A^5^5
"KRN",3.6,29,4,1,0)
1
"KRN",3.6,29,4,1,1,0)
^^1^1^2970902^^
"KRN",3.6,29,4,1,1,1,0)
The subject of the message
"KRN",3.6,29,4,2,0)
2
"KRN",3.6,29,4,2,1,0)
^^1^1^2970902^^^
"KRN",3.6,29,4,2,1,1,0)
The recipient, as specified by the user
"KRN",3.6,29,4,3,0)
3
"KRN",3.6,29,4,3,1,0)
^^1^1^2970902^^
"KRN",3.6,29,4,3,1,1,0)
The error message returned by the remote site.
"KRN",3.6,29,4,4,0)
4
"KRN",3.6,29,4,4,1,0)
^^1^1^2980529^^
"KRN",3.6,29,4,4,1,1,0)
The recipient, as attempted by MailMan
"KRN",3.6,29,4,5,0)
5
"KRN",3.6,29,4,5,1,0)
^^1^1^2980729^
"KRN",3.6,29,4,5,1,1,0)
This is the message IEN in the message file 3.9.
"KRN",3.6,30,-1)
0^2
"KRN",3.6,30,0)
XM SEND ERR SERVER MSG^XMIT Err:  Server Message not found
"KRN",3.6,30,1,0)
^^4^4^2970828^
"KRN",3.6,30,1,1,0)
Message not delivered to server |1|
"KRN",3.6,30,1,2,0)
because the message was not in the message file (3.9).
"KRN",3.6,30,1,3,0)

"KRN",3.6,30,1,4,0)
Task #|2| has been left for your action.
"KRN",3.6,30,3,0)
^^2^2^2970828^
"KRN",3.6,30,3,1,0)
This bulletin is fired when a task tries to send a message to a server,
"KRN",3.6,30,3,2,0)
but the message is not in the Message global.
"KRN",3.6,30,4,0)
^3.64A^2^2
"KRN",3.6,30,4,1,0)
1
"KRN",3.6,30,4,1,1,0)
^^1^1^2970828^
"KRN",3.6,30,4,1,1,1,0)
Name of the server to which the message was supposed to go.
"KRN",3.6,30,4,2,0)
2
"KRN",3.6,30,4,2,1,0)
^^1^1^2970828^
"KRN",3.6,30,4,2,1,1,0)
Task number for the task responsible for sending the message to the server.
"KRN",3.6,31,-1)
0^3
"KRN",3.6,31,0)
XM SEND ERR REMOTE MSG ID^Transmit Error: No Remote Msg ID
"KRN",3.6,31,1,0)
^^3^3^2970902^^
"KRN",3.6,31,1,1,0)
Message #|1| originated from a remote site.
"KRN",3.6,31,1,2,0)
It should have a 'remote message id' on node 5, but it doesn't.
"KRN",3.6,31,1,3,0)
To prevent duplicate message deliveries, it was not delivered.
"KRN",3.6,31,3,0)
^^6^6^2970902^^
"KRN",3.6,31,3,1,0)
While trying to send a response to a message which originated from a
"KRN",3.6,31,3,2,0)
remote site, we noticed that the 'remote message id' is missing from
"KRN",3.6,31,3,3,0)
the original message.  Without this id, we can't tell the site which
"KRN",3.6,31,3,4,0)
message we are responding to.
"KRN",3.6,31,3,5,0)

"KRN",3.6,31,3,6,0)
'remote message id' is field 9 in file 3.9.
"KRN",3.6,31,4,0)
^3.64A^1^1
"KRN",3.6,31,4,1,0)
1
"KRN",3.6,31,4,1,1,0)
^^1^1^2970828^
"KRN",3.6,31,4,1,1,1,0)
XMZ, or message number in file 3.9
"KRN",3.6,32,-1)
0^4
"KRN",3.6,32,0)
XM SEND ERR MSG^Message not delivered
"KRN",3.6,32,1,0)
^^7^7^2970902^^
"KRN",3.6,32,1,1,0)
Your message, SUBJECT: |1|
"KRN",3.6,32,1,2,0)
was rejected by |2|
"KRN",3.6,32,1,3,0)

"KRN",3.6,32,1,4,0)
The error message was:
"KRN",3.6,32,1,5,0)
|3|
"KRN",3.6,32,1,6,0)

"KRN",3.6,32,1,7,0)
Intended recipients were:
"KRN",3.6,32,3,0)
^^3^3^2970902^^
"KRN",3.6,32,3,1,0)
When a remote site rejects an entire message for whatever reason
"KRN",3.6,32,3,2,0)
(too many lines, for example), this bulletin is sent to the message
"KRN",3.6,32,3,3,0)
originator.
"KRN",3.6,32,4,0)
^3.64A^3^3
"KRN",3.6,32,4,1,0)
1
"KRN",3.6,32,4,1,1,0)
^^1^1^2970902^
"KRN",3.6,32,4,1,1,1,0)
Subject of the message
"KRN",3.6,32,4,2,0)
2
"KRN",3.6,32,4,2,1,0)
^^1^1^2970902^
"KRN",3.6,32,4,2,1,1,0)
Site which rejected the message
"KRN",3.6,32,4,3,0)
3
"KRN",3.6,32,4,3,1,0)
^^1^1^2970902^
"KRN",3.6,32,4,3,1,1,0)
Error message returned by the site
"KRN",3.6,33,-1)
0^6
"KRN",3.6,33,0)
XM FWD ADDRESS DELETE^Forwarding Address Deleted
"KRN",3.6,33,1,0)
^^4^4^2990206^
"KRN",3.6,33,1,1,0)
Your forwarding address: |1|
"KRN",3.6,33,1,2,0)
has been deleted because it is not valid.
"KRN",3.6,33,1,3,0)
The error message is:
"KRN",3.6,33,1,4,0)
|2|
"KRN",3.6,33,3,0)
^^3^3^2990208^^
"KRN",3.6,33,3,1,0)
This bulletin is sent when MailMan notices that a user has an invalid
"KRN",3.6,33,3,2,0)
forwarding address.  The forwarding address is deleted, and the user
"KRN",3.6,33,3,3,0)
is notified why.
"KRN",3.6,33,4,0)
^3.64A^2^2
"KRN",3.6,33,4,1,0)
1
"KRN",3.6,33,4,1,1,0)
^^1^1^2990206^
"KRN",3.6,33,4,1,1,1,0)
User's invalid forwarding address.
"KRN",3.6,33,4,2,0)
2
"KRN",3.6,33,4,2,1,0)
^^1^1^2990208^^
"KRN",3.6,33,4,2,1,1,0)
Error message as to why the user's address is invalid.
"KRN",3.6,34,-1)
0^7
"KRN",3.6,34,0)
XM GROUP ERROR^Error in Mail Group
"KRN",3.6,34,1,0)
^^2^2^2990213^
"KRN",3.6,34,1,1,0)
While addressing a message to mail group: |1|
"KRN",3.6,34,1,2,0)
the following problems were noted:
"KRN",3.6,34,3,0)
^^6^6^2990213^
"KRN",3.6,34,3,1,0)
Notifies selected users of problems with a mail group.
"KRN",3.6,34,3,2,0)
Such problems may include:
"KRN",3.6,34,3,3,0)
- Group contains a circular reference to a group.
"KRN",3.6,34,3,4,0)
- Local member should not be receiving mail (no access code).
"KRN",3.6,34,3,5,0)
- Remote member has invalid or ambiguous or closed domain.
"KRN",3.6,34,3,6,0)
- Distribution list domain is invalid or ambiguous or closed.
"KRN",3.6,34,4,0)
^3.64A^1^1
"KRN",3.6,34,4,1,0)
1
"KRN",3.6,34,4,1,1,0)
^^1^1^2990213^
"KRN",3.6,34,4,1,1,1,0)
The mail group under which the problems were noted.
"KRN",9.2,162,-1)
0^214
"KRN",9.2,162,0)
XM-U-M-PRIORITY SEND^SENDING MESSAGES WITH A PRIORITY STATUS^2900417.0547^
"KRN",9.2,162,1,0)
^^21^21^2981229^
"KRN",9.2,162,1,1,0)
 
"KRN",9.2,162,1,2,0)
You can use the Priority Delivery action code (i.e., 'P') to send a
"KRN",9.2,162,1,3,0)
message as priority. This is a toggle action code. If you enter 'P' again,
"KRN",9.2,162,1,4,0)
the message will not be sent as priority. Priority messages are not sent
"KRN",9.2,162,1,5,0)
before other messages.
"KRN",9.2,162,1,6,0)
 
"KRN",9.2,162,1,7,0)
MailMan allows users to send a message as priority mail. By sending mail
"KRN",9.2,162,1,8,0)
priority, the sender indicates the message is very important and should
"KRN",9.2,162,1,9,0)
take precedence over any other mail in another recipient's mailbox.
"KRN",9.2,162,1,10,0)
Because of that, MailMan notifies recipients when they have priority mail
"KRN",9.2,162,1,11,0)
and highlights that mail in their list of messages (i.e., places an
"KRN",9.2,162,1,12,0)
exclamation point ('!') to the left of each priority message).
"KRN",9.2,162,1,13,0)
 
"KRN",9.2,162,1,14,0)
No [FORWARDING] is allowed to mail groups except by the sender of the
"KRN",9.2,162,1,15,0)
message. MailMan also provides recipients with the ability to control how
"KRN",9.2,162,1,16,0)
responses to priority mail are handled through the PRIORITY RESPONSES
"KRN",9.2,162,1,17,0)
[FLAG] and the PRIORITY RESPONSES [PROMPT] fields in the User Options Edit
"KRN",9.2,162,1,18,0)
option.
"KRN",9.2,162,1,19,0)
 
"KRN",9.2,162,1,20,0)
To send a priority message, enter a 'P' at the 'Select Message option:
"KRN",9.2,162,1,21,0)
Transmit now//' prompt.
"KRN",9.2,162,2,0)
^9.22A^3^3
"KRN",9.2,162,2,1,0)
FORWARDING^XM-U-M-FORWARD
"KRN",9.2,162,2,2,0)
FLAG^XM-U-P-PRIORITY FLAG
"KRN",9.2,162,2,3,0)
PROMPT^XM-U-P-PRIORITY PROMPT
"KRN",9.2,166,-1)
0^165
"KRN",9.2,166,0)
XM-U-I-SHARED MAIL^SHARED,MAIL - A LIBRARY OF MESSAGES^2931222.141^
"KRN",9.2,166,1,0)
^^20^20^2981228^
"KRN",9.2,166,1,1,0)
 
"KRN",9.2,166,1,2,0)
SHARED,MAIL is a good way to distribute data, request help, and search for
"KRN",9.2,166,1,3,0)
things you need.
"KRN",9.2,166,1,4,0)
 
"KRN",9.2,166,1,5,0)
After you choose the Become a Surrogate (SHARED,MAIL or Other) option and
"KRN",9.2,166,1,6,0)
if another MailMan user has not designated you as a [SURROGATE], you are
"KRN",9.2,166,1,7,0)
automatically made a surrogate of SHARED,MAIL.
"KRN",9.2,166,1,8,0)
 
"KRN",9.2,166,1,9,0)
As a surrogate to SHARED,MAIL, the user is only allowed Read access
"KRN",9.2,166,1,10,0)
privileges. Therefore, the surrogate is able to read any piece of mail in
"KRN",9.2,166,1,11,0)
any SHARED,MAIL basket, and they can respond to any message. However, in
"KRN",9.2,166,1,12,0)
the case the user has been assigned the XMNOPRIV key, they cannot access
"KRN",9.2,166,1,13,0)
SHARED,MAIL.
"KRN",9.2,166,1,14,0)
 
"KRN",9.2,166,1,15,0)
All users can send messages to SHARED,MAIL as they would send them to any
"KRN",9.2,166,1,16,0)
other user. However, messages sent to SHARED,MAIL must be given 'Automatic
"KRN",9.2,166,1,17,0)
Deletion Dates' and be sent to a particular basket so that readers can
"KRN",9.2,166,1,18,0)
more easily find them.
"KRN",9.2,166,1,19,0)
 
"KRN",9.2,166,1,20,0)
SHARED,MAIL never has any new messages.
"KRN",9.2,166,2,0)
^9.22A^1^1
"KRN",9.2,166,2,1,0)
SURROGATE^XM-U-I-SURROGATE
"KRN",9.2,167,-1)
0^237
"KRN",9.2,167,0)
XM-U-M-VAPORIZE DATE EDIT^VAPORIZE MESSAGE WITH AUTOMATIC DELETION DATE^2990428.0716^^
"KRN",9.2,167,1,0)
^^15^15^2990428^^
"KRN",9.2,167,1,1,0)
 
"KRN",9.2,167,1,2,0)
You can use the Vaporize Date Edit action code (i.e., 'V') to set a
"KRN",9.2,167,1,3,0)
message to be deleted from your mailbox at a specific date and time or to
"KRN",9.2,167,1,4,0)
modify a Vaporize Date already set.  Vaporize means automatically delete.
"KRN",9.2,167,1,5,0)
 
"KRN",9.2,167,1,6,0)
You can move any message set to vaporize to any of your mail baskets,
"KRN",9.2,167,1,7,0)
including the 'WASTE' basket, and not affect its vaporization date.
"KRN",9.2,167,1,8,0)
However, you are free to modify or remove the AUTOMATIC DELETION DATE
"KRN",9.2,167,1,9,0)
(i.e., Vaporize Date) at any time prior to the vaporization date.
"KRN",9.2,167,1,10,0)
 
"KRN",9.2,167,1,11,0)
A message that is scheduled for vaporization (either by you or by
"KRN",9.2,167,1,12,0)
MailMan during the IN-BASKET PURGE) will be deleted on the scheduled date.
"KRN",9.2,167,1,13,0)
 
"KRN",9.2,167,1,14,0)
To set a 'vaporize' date for a message after reading it, enter a 'V' at
"KRN",9.2,167,1,15,0)
the 'Enter message action' prompt.
"KRN",9.2,169,-1)
0^163
"KRN",9.2,169,0)
XM-U-I-GROUP MEMBER^MEMBERS OF MAIL GROUPS^2931206.2002^
"KRN",9.2,169,1,0)
^^20^20^2990107^
"KRN",9.2,169,1,1,0)
 
"KRN",9.2,169,1,2,0)
Mail Groups can contain any combination of the following types of members:
"KRN",9.2,169,1,3,0)
 
"KRN",9.2,169,1,4,0)
  LOCAL             - Members that are individuals that use the local
"KRN",9.2,169,1,5,0)
                      system.
"KRN",9.2,169,1,6,0)
 
"KRN",9.2,169,1,7,0)
  MEMBER GROUP      - A mail group may be a member of other mail groups.
"KRN",9.2,169,1,8,0)
                      More than one mail group can concurrently be members
"KRN",9.2,169,1,9,0)
                      of the same mail group.
"KRN",9.2,169,1,10,0)
 
"KRN",9.2,169,1,11,0)
  DISTRIBUTION LIST - Distribution Lists can be set up through VA FileMan.
"KRN",9.2,169,1,12,0)
                      A Distribution List has a name and a list of
"KRN",9.2,169,1,13,0)
                      domains. If a Distribution list is a member of a
"KRN",9.2,169,1,14,0)
                      Mail Group (and more than one can be) then the
"KRN",9.2,169,1,15,0)
                      expansion of it will cause the message to be sent to
"KRN",9.2,169,1,16,0)
                      the Distribution List name at each of the domains in
"KRN",9.2,169,1,17,0)
                      the list. [PRIVATE] Mail Groups, however, cannot
"KRN",9.2,169,1,18,0)
                      contain Distribution Lists.
"KRN",9.2,169,1,19,0)
 
"KRN",9.2,169,1,20,0)
  REMOTE            - Members that are in none of the other categories.
"KRN",9.2,169,2,0)
^9.22A^1^1
"KRN",9.2,169,2,1,0)
PRIVATE^XM-U-P-GROUP PERSONAL
"KRN",9.2,170,-1)
0^239
"KRN",9.2,170,0)
XM-U-M-WRITE^SENDING A NEW MESSAGE INSTEAD OF A REPLY^2990428.0719^
"KRN",9.2,170,1,0)
^^21^21^2990428^^
"KRN",9.2,170,1,1,0)
 
"KRN",9.2,170,1,2,0)
You can use the Write action code (i.e., 'W') to 'write' (compose) a new
"KRN",9.2,170,1,3,0)
message while reading a message. The steps of creating a message using the
"KRN",9.2,170,1,4,0)
Write action code are the same as if you used the [SEND] a Message option.
"KRN",9.2,170,1,5,0)
 
"KRN",9.2,170,1,6,0)
Use the Write action code to immediately send a message while reading another
"KRN",9.2,170,1,7,0)
message. For example, if after reading a message, you suddenly remember that
"KRN",9.2,170,1,8,0)
you need to send a message about an unrelated matter to somebody else or if
"KRN",9.2,170,1,9,0)
you just want to send a message to the sender or one of the recipients of the
"KRN",9.2,170,1,10,0)
message you are reading. Rather than having to go through the Send a Message
"KRN",9.2,170,1,11,0)
option, you could simply enter the Write action code.
"KRN",9.2,170,1,12,0)
 
"KRN",9.2,170,1,13,0)
The 'Write' command allows you to compose a new message, address it to a
"KRN",9.2,170,1,14,0)
separate set of [RECIPIENTS], and deliver it. After composing and sending
"KRN",9.2,170,1,15,0)
your message, MailMan will automatically return you to the original
"KRN",9.2,170,1,16,0)
message where you can continue with your reading.
"KRN",9.2,170,1,17,0)
 
"KRN",9.2,170,1,18,0)
To write and send a new message while reading another message, enter a 'W'
"KRN",9.2,170,1,19,0)
at the 'Enter message action' prompt.
"KRN",9.2,170,1,20,0)
 
"KRN",9.2,170,1,21,0)
[MORE]... 
"KRN",9.2,170,2,0)
^9.22A^3^3
"KRN",9.2,170,2,1,0)
SEND^XM-U-M-SEND
"KRN",9.2,170,2,2,0)
RECIPIENTS^XM-U-A-ADDRESS
"KRN",9.2,170,2,3,0)
MORE^XM-U-M-WRITE-2
"KRN",9.2,171,-1)
0^159
"KRN",9.2,171,0)
XM-U-I-EDITOR FM LINE^VA FILEMAN LINE EDITOR^2990120.1619^^
"KRN",9.2,171,1,0)
^^21^21^2990120^^^
"KRN",9.2,171,1,1,0)
 
"KRN",9.2,171,1,2,0)
When using the Line Editor, one line is entered at a time, with a carriage
"KRN",9.2,171,1,3,0)
return being entered at the end of each line. Line numbers which appear at
"KRN",9.2,171,1,4,0)
the left of the screen are used for reference while editing and are not
"KRN",9.2,171,1,5,0)
part of the message. When the entire message is entered, the user enters a
"KRN",9.2,171,1,6,0)
carriage return at the line number of the next line. The 'Edit Option:'
"KRN",9.2,171,1,7,0)
prompt then appears. Entering '??' will display the editor options, which
"KRN",9.2,171,1,8,0)
include:
"KRN",9.2,171,1,9,0)
 
"KRN",9.2,171,1,10,0)
  * Add Lines              * Join List Line(s)
"KRN",9.2,171,1,11,0)
  * Break a Line           * Move Line 
"KRN",9.2,171,1,12,0)
  * Change Every String    * Print Line(s)
"KRN",9.2,171,1,13,0)
  * Delete Line(s)         * Repeat Line(s)
"KRN",9.2,171,1,14,0)
  * Edit a Line            * Search & Transfer
"KRN",9.2,171,1,15,0)
  * Insert Line(s)
"KRN",9.2,171,1,16,0)
 
"KRN",9.2,171,1,17,0)
The Transfer command allows you to use all VA FileMan text fields (via
"KRN",9.2,171,1,18,0)
extended references) and especially MailMan messages as a scratch pad. To
"KRN",9.2,171,1,19,0)
use the Transfer command enter a 'T' after the 'Edit option:' prompt and
"KRN",9.2,171,1,20,0)
enter a message subject, internal message identification number, or an
"KRN",9.2,171,1,21,0)
extended reference to any other file with a TEXT field.
"KRN",9.2,173,-1)
0^138
"KRN",9.2,173,0)
XM-U-B-XMIT PRIORITY TOGGLE^TOGGLING MESSAGE TRANSMISSION PRIORITY^2990114.1113^^
"KRN",9.2,173,1,0)
^^19^19^2990114^^^
"KRN",9.2,173,1,1,0)
 
"KRN",9.2,173,1,2,0)
Messages waiting to be sent to remote domains are placed in special baskets
"KRN",9.2,173,1,3,0)
owned by the POSTMASTER.  The POSTMASTER is able to manipulate, to a certain
"KRN",9.2,173,1,4,0)
degree, the order in which they are sent.
"KRN",9.2,173,1,5,0)
 
"KRN",9.2,173,1,6,0)
Sometimes, messages stack up in the remote message queues waiting to be
"KRN",9.2,173,1,7,0)
delivered. One or more of these messages could be very important (i.e., it
"KRN",9.2,173,1,8,0)
cannot wait for all the others to be transmitted before it). For example,
"KRN",9.2,173,1,9,0)
one of the messages could be a site's payroll data destined for
"KRN",9.2,173,1,10,0)
FOC-AUSTIN.VA.GOV. A delivery delay can result when a machine has hardware
"KRN",9.2,173,1,11,0)
problems (on either end of the network) or if the network itself has
"KRN",9.2,173,1,12,0)
experienced problems.
"KRN",9.2,173,1,13,0)
 
"KRN",9.2,173,1,14,0)
MailMan usually sends out the messages in the queue according to their date of
"KRN",9.2,173,1,15,0)
creation. However, the POSTMASTER may use the toggle transmit command (i.e.,
"KRN",9.2,173,1,16,0)
'X'), to toggle the transmit priority. Thus, selected messages will be
"KRN",9.2,173,1,17,0)
transmitted before any messages not selected. 
"KRN",9.2,173,1,18,0)
 
"KRN",9.2,173,1,19,0)
[MORE]...
"KRN",9.2,173,2,0)
^9.22A^2^1
"KRN",9.2,173,2,2,0)
MORE^XM-U-B-XMIT PRIORITY TOGGLE-2
"KRN",9.2,174,-1)
0^112
"KRN",9.2,174,0)
XMHELP-MANUAL^THE ONLINE MAILMAN USER MANUAL^2990121.0718^^
"KRN",9.2,174,1,0)
^^19^19^2990121^^^^
"KRN",9.2,174,1,1,0)

"KRN",9.2,174,1,2,0)
                          January 1999
"KRN",9.2,174,1,3,0)

"KRN",9.2,174,1,4,0)
                  Department of Veterans Affairs
"KRN",9.2,174,1,5,0)

"KRN",9.2,174,1,6,0)

"KRN",9.2,174,1,7,0)

"KRN",9.2,174,1,8,0)

"KRN",9.2,174,1,9,0)

"KRN",9.2,174,1,10,0)
                  To start reading, enter [MORE]...
"KRN",9.2,174,1,11,0)

"KRN",9.2,174,1,12,0)

"KRN",9.2,174,1,13,0)

"KRN",9.2,174,1,14,0)

"KRN",9.2,174,1,15,0)

"KRN",9.2,174,1,16,0)

"KRN",9.2,174,1,17,0)

"KRN",9.2,174,1,18,0)

"KRN",9.2,174,1,19,0)

"KRN",9.2,174,2,0)
^9.22^2^1
"KRN",9.2,174,2,2,0)
MORE^XMHELP
"KRN",9.2,178,-1)
0^215
"KRN",9.2,178,0)
XM-U-M-PRIORITY TOGGLE^PRIORITY REPLIES TOGGLE^2920930.1613^
"KRN",9.2,178,1,0)
^^19^19^2990427^
"KRN",9.2,178,1,1,0)
 
"KRN",9.2,178,1,2,0)
When messages are sent with a priority status, recipients can control
"KRN",9.2,178,1,3,0)
whether future responses will be delivered as priority on a message by
"KRN",9.2,178,1,4,0)
message basis.
"KRN",9.2,178,1,5,0)
 
"KRN",9.2,178,1,6,0)
You can use the Priority Replies Toggle action code (i.e., 'K') to switch
"KRN",9.2,178,1,7,0)
from receiving responses to a priority message as priority or not
"KRN",9.2,178,1,8,0)
depending on how you set your PRIORITY RESPONSES [FLAG]. To toggle between
"KRN",9.2,178,1,9,0)
'Responses are ORDINARY' and 'Responses are PRIORITY', enter a 'K' at the
"KRN",9.2,178,1,10,0)
'Enter message action' prompt.
"KRN",9.2,178,1,11,0)
 
"KRN",9.2,178,1,12,0)
The PRIORITY RESPONSES [FLAG] field is available through the User Options
"KRN",9.2,178,1,13,0)
Edit option located on the Personal Preferences menu. It controls the
"KRN",9.2,178,1,14,0)
delivery of responses to messages with a priority status.
"KRN",9.2,178,1,15,0)
 
"KRN",9.2,178,1,16,0)
In addition, you can also control whether or not you are prompted in the
"KRN",9.2,178,1,17,0)
first place by editing the PRIORITY RESPONSES [PROMPT] field also
"KRN",9.2,178,1,18,0)
available through the User Options Edit option located on the Personal
"KRN",9.2,178,1,19,0)
Preferences menu.
"KRN",9.2,178,2,0)
^9.22A^2^2
"KRN",9.2,178,2,1,0)
PROMPT^XM-U-P-PRIORITY PROMPT
"KRN",9.2,178,2,2,0)
FLAG^XM-U-P-PRIORITY FLAG
"KRN",9.2,179,-1)
0^178
"KRN",9.2,179,0)
XM-U-M-ANSWER^ANSWERING A MESSAGE (INTERNET STYLE)^2990428.0657^^
"KRN",9.2,179,1,0)
^^21^21^2990428^^
"KRN",9.2,179,1,1,0)
 
"KRN",9.2,179,1,2,0)
You can use the Answer action code (i.e., 'A') to answer a message. While
"KRN",9.2,179,1,3,0)
[REPLYING] to a message chains the new response to the original message,
"KRN",9.2,179,1,4,0)
the Answer command issues a new message to send to the sender of the original
"KRN",9.2,179,1,5,0)
message, a new message that will not be chained to the original message.
"KRN",9.2,179,1,6,0)
 
"KRN",9.2,179,1,7,0)
The 'Answer' message consists of three components in the following order:
"KRN",9.2,179,1,8,0)
 
"KRN",9.2,179,1,9,0)
  1. A copy of the message being answered.
"KRN",9.2,179,1,10,0)
  2. The text of your answer.
"KRN",9.2,179,1,11,0)
  3. The three lines of your Network Signature.
"KRN",9.2,179,1,12,0)
 
"KRN",9.2,179,1,13,0)
When you answer a message the original message is copied before you are
"KRN",9.2,179,1,14,0)
placed in the editor. Thus, 'Answer' first copies the original message,
"KRN",9.2,179,1,15,0)
adds your network signature, and then puts you into the editor. Once
"KRN",9.2,179,1,16,0)
you're finished with your answer, it is sent as a separate message to the
"KRN",9.2,179,1,17,0)
sender of the original message.
"KRN",9.2,179,1,18,0)
 
"KRN",9.2,179,1,19,0)
In order to use the Answer command, you must have a [NETWORK SIGNATURE].
"KRN",9.2,179,1,20,0)
 
"KRN",9.2,179,1,21,0)
To 'Answer' a message, enter an 'A' at the 'Enter message action' prompt.
"KRN",9.2,179,2,0)
^9.22A^2^2
"KRN",9.2,179,2,1,0)
NETWORK SIGNATURE^XM-U-P-NETWORK SIGNATURE
"KRN",9.2,179,2,2,0)
REPLYING^XM-U-M-REPLY
"KRN",9.2,181,-1)
0^151
"KRN",9.2,181,0)
XM-U-H-Q DISAPPEARED^'DISAPPEARED' MESSAGES WHICH HAVE NOT BEEN DELETED^2931023.1649^
"KRN",9.2,181,1,0)
^^14^14^2990107^
"KRN",9.2,181,1,1,0)
 
"KRN",9.2,181,1,2,0)
Sometimes the [READ] option will show only the message header without
"KRN",9.2,181,1,3,0)
the text. What happened to the original message?
"KRN",9.2,181,1,4,0)
 
"KRN",9.2,181,1,5,0)
Messages will not 'disappear' unless you specifically [DELETE] them.
"KRN",9.2,181,1,6,0)
 
"KRN",9.2,181,1,7,0)
After a message has been read, replied to, and the reply has been read,
"KRN",9.2,181,1,8,0)
the message text will no longer be displayed automatically when you
"KRN",9.2,181,1,9,0)
attempt to read the message. This is to avoid forcing you to read thru
"KRN",9.2,181,1,10,0)
text you've already seen.
"KRN",9.2,181,1,11,0)
 
"KRN",9.2,181,1,12,0)
However, the text is there. At the 'Enter message option' prompt, respond
"KRN",9.2,181,1,13,0)
with a 'B' for [BACKUP]. You can then choose the reply you wish to read.
"KRN",9.2,181,1,14,0)
Enter zero ('0') to see the original message.
"KRN",9.2,181,2,0)
^9.22A^3^3
"KRN",9.2,181,2,1,0)
READ^XM-U-R-READ
"KRN",9.2,181,2,2,0)
BACKUP^XM-U-M-BACKUP
"KRN",9.2,181,2,3,0)
DELETE^XM-U-M-DELETE
"KRN",9.2,227,-1)
0^162
"KRN",9.2,227,0)
XM-U-I-GROUP COORDINATOR^MAILMAN MAIL GROUP COORDINATORS^2931126.1153^
"KRN",9.2,227,1,0)
^^4^4^2990111^
"KRN",9.2,227,1,1,0)
 
"KRN",9.2,227,1,2,0)
MailMan allows for package coordinators to establish and edit mail groups.
"KRN",9.2,227,1,3,0)
However, this option does not allow coordinators to edit mail groups they
"KRN",9.2,227,1,4,0)
did not create.
"KRN",9.2,229,-1)
0^199
"KRN",9.2,229,0)
XM-U-M-INFO ONLY^MESSAGES MARKED AS INFORMATION ONLY^2931126.1313^
"KRN",9.2,229,1,0)
^^17^17^2990427^
"KRN",9.2,229,1,1,0)
 
"KRN",9.2,229,1,2,0)
You can use the Information Only action code (i.e., 'I') to send a message
"KRN",9.2,229,1,3,0)
as Information Only. Sending a message Information Only prevents all
"KRN",9.2,229,1,4,0)
recipients from [REPLYING] to your message. Messages can have an
"KRN",9.2,229,1,5,0)
Information Only status placed on them by the sender at anytime. This is a
"KRN",9.2,229,1,6,0)
toggle action code. If you enter 'I' again, the message will no longer be
"KRN",9.2,229,1,7,0)
Information Only.
"KRN",9.2,229,1,8,0)
 
"KRN",9.2,229,1,9,0)
To send a message Information Only, enter an 'I' at the 'Select Message
"KRN",9.2,229,1,10,0)
option:  Transmit now//' prompt.
"KRN",9.2,229,1,11,0)
 
"KRN",9.2,229,1,12,0)
In addition to making the entire message Information Only, you can also
"KRN",9.2,229,1,13,0)
send a message as Information Only to just one individual recipient.
"KRN",9.2,229,1,14,0)
During the addressing portion of the message for a recipient, by
"KRN",9.2,229,1,15,0)
specifying the [PREFIX] 'I:xxx' (where 'xxx' represents the recipient's
"KRN",9.2,229,1,16,0)
name) after the 'And Send to:' prompt, you are telling MailMan to deliver
"KRN",9.2,229,1,17,0)
the message to this individual recipient as Information Only.
"KRN",9.2,229,2,0)
^9.22A^2^2
"KRN",9.2,229,2,1,0)
PREFIX^XM-U-A-INFO ONLY
"KRN",9.2,229,2,2,0)
REPLYING^XM-U-M-REPLY
"KRN",9.2,230,-1)
0^314
"KRN",9.2,230,0)
XM-U-M-PRINT DEVICE P-MESSAGE^P-MESSAGE DEVICE^2990213.1036^^
"KRN",9.2,230,1,0)
^^16^16^2990427^
"KRN",9.2,230,1,1,0)
 
"KRN",9.2,230,1,2,0)
Rather than printing information (e.g., a report or listing) to the screen
"KRN",9.2,230,1,3,0)
or a printer, the P-MESSAGE device can be used to send a mail message to
"KRN",9.2,230,1,4,0)
yourself and/or others that contains the information.
"KRN",9.2,230,1,5,0)
 
"KRN",9.2,230,1,6,0)
For example, you may want to keep a copy of a report by sending it to
"KRN",9.2,230,1,7,0)
yourself in a mail message by directing the report to the P-MESSAGE device.
"KRN",9.2,230,1,8,0)
 
"KRN",9.2,230,1,9,0)
MailMan gives you the choice of having the message come from yourself
"KRN",9.2,230,1,10,0)
or the 'Postmaster'. If it's from yourself, it will NOT be delivered 'new'
"KRN",9.2,230,1,11,0)
to you, but you will be able to edit it, if you send it ONLY to yourself.
"KRN",9.2,230,1,12,0)
If you choose to have it come from the Postmaster and send it to yourself,
"KRN",9.2,230,1,13,0)
it will be delivered 'new' to you, but you will NOT be able to edit it.
"KRN",9.2,230,1,14,0)
 
"KRN",9.2,230,1,15,0)
You can set the [P-MESSAGE FROM] default using the User Options Edit
"KRN",9.2,230,1,16,0)
option on the Personal Preferences menu.
"KRN",9.2,230,2,0)
^9.22A^1^1
"KRN",9.2,230,2,1,0)
P-MESSAGE FROM^XM-U-P-P-MESSAGE FROM
"KRN",9.2,232,-1)
0^126
"KRN",9.2,232,0)
XM-U-B-NEW MAIL LIST^LIST OF NEW MESSAGES IN A BASKET^2931222.1539^
"KRN",9.2,232,1,0)
^^8^8^2981222^
"KRN",9.2,232,1,1,0)
 
"KRN",9.2,232,1,2,0)
The New Message List action code (i.e., 'N') will just display the new
"KRN",9.2,232,1,3,0)
messages from a list of messages in a mail basket. This can be useful if
"KRN",9.2,232,1,4,0)
you have a mail basket with a large number of messages and you just want
"KRN",9.2,232,1,5,0)
to see/read the new messages.
"KRN",9.2,232,1,6,0)
 
"KRN",9.2,232,1,7,0)
To list just the new messages in a mail basket, enter an 'N' at the 'Enter
"KRN",9.2,232,1,8,0)
message number or command:' prompt.
"KRN",9.2,233,-1)
0^158
"KRN",9.2,233,0)
XM-U-H-USER^USER INFORMATION^2990119.1337^^
"KRN",9.2,233,1,0)
^^32^32^2990119^^
"KRN",9.2,233,1,1,0)
 
"KRN",9.2,233,1,2,0)
MailMan gives you the opportunity to obtain information on a local MailMan
"KRN",9.2,233,1,3,0)
user through the User Information option on the Help (User/Group Info.,
"KRN",9.2,233,1,4,0)
etc.) menu option located on the main MailMan Menu.
"KRN",9.2,233,1,5,0)
 
"KRN",9.2,233,1,6,0)
You can obtain the following local user information:
"KRN",9.2,233,1,7,0)
 
"KRN",9.2,233,1,8,0)
  * Name - The MailMan user's name.
"KRN",9.2,233,1,9,0)
 
"KRN",9.2,233,1,10,0)
  * Banner - The user's current MailMan banner, if any has been entered using
"KRN",9.2,233,1,11,0)
    the User Options Edit option located on the Personal Preferences menu.
"KRN",9.2,233,1,12,0)
 
"KRN",9.2,233,1,13,0)
  * General MailMan Information - The last date and time the user used
"KRN",9.2,233,1,14,0)
    MailMan and the status of messages in their mailbox.
"KRN",9.2,233,1,15,0)
 
"KRN",9.2,233,1,16,0)
  * Introduction - The user's introduction, if any has been entered using
"KRN",9.2,233,1,17,0)
    the User Options Edit option located on the Personal Preferences menu.
"KRN",9.2,233,1,18,0)
 
"KRN",9.2,233,1,19,0)
  * Office Information - The user's office information, if any has been
"KRN",9.2,233,1,20,0)
    entered using the User Options Edit option located on the Personal
"KRN",9.2,233,1,21,0)
    Preferences menu.
"KRN",9.2,233,1,22,0)
 
"KRN",9.2,233,1,23,0)
  * Mail Group Information - A list of the mail groups to which this user
"KRN",9.2,233,1,24,0)
    belongs, if any.
"KRN",9.2,233,1,25,0)
 
"KRN",9.2,233,1,26,0)
  * Surrogate Information - A list of the MailMan users for whom and in
"KRN",9.2,233,1,27,0)
    what capacity (i.e., privileges) this user may act as a surrogate, if
"KRN",9.2,233,1,28,0)
    any. Also, a list of MailMan users who can be surrogates for this user
"KRN",9.2,233,1,29,0)
    and in what capacity (i.e., privileges).
"KRN",9.2,233,1,30,0)
 
"KRN",9.2,233,1,31,0)
To display general information on a local MailMan user, choose the User
"KRN",9.2,233,1,32,0)
Information option on the Help (User/Group Info., etc.) menu.
"KRN",9.2,312,-1)
0^200
"KRN",9.2,312,0)
XM-U-M-LATER^MAKE MESSAGES NEW LATER^2911003.0855^
"KRN",9.2,312,1,0)
^^18^18^2990427^
"KRN",9.2,312,1,1,0)
 
"KRN",9.2,312,1,2,0)
You can use the Later action code (i.e., 'L') to have messages made 'new'
"KRN",9.2,312,1,3,0)
at a specified later date and time. Use this action to remind yourself of
"KRN",9.2,312,1,4,0)
important activities. Users can schedule a reminder now and not worry
"KRN",9.2,312,1,5,0)
about remembering to do it later. MailMan will act as though it were a
"KRN",9.2,312,1,6,0)
personal reminder.
"KRN",9.2,312,1,7,0)
 
"KRN",9.2,312,1,8,0)
If the message already resides in your mailbox, it will simply be made
"KRN",9.2,312,1,9,0)
'new' again. However, if the message no longer resides in your mailbox, it
"KRN",9.2,312,1,10,0)
will be redelivered to your mailbox as a 'new' message.
"KRN",9.2,312,1,11,0)
 
"KRN",9.2,312,1,12,0)
MailMan gives you the option to review ([LIST]) all messages with
"KRN",9.2,312,1,13,0)
'latered' dates and times using the Report on Later'd Messages option and
"KRN",9.2,312,1,14,0)
make any modifications to those dates and times using the [CHANGE]/Delete
"KRN",9.2,312,1,15,0)
Later'd Messages option. Both of these options are available on the Other
"KRN",9.2,312,1,16,0)
MailMan Functions menu.
"KRN",9.2,312,1,17,0)
 
"KRN",9.2,312,1,18,0)
[MORE]... 
"KRN",9.2,312,2,0)
^9.22A^5^3
"KRN",9.2,312,2,1,0)
LIST^XM-U-M-LATERED MESSAGE REPORT
"KRN",9.2,312,2,2,0)
CHANGE^XM-U-M-LATERED MESSAGE CHANGE
"KRN",9.2,312,2,5,0)
MORE^XM-U-M-LATER-2
"KRN",9.2,312,3,0)
^9.23A^^0
"KRN",9.2,319,-1)
0^110
"KRN",9.2,319,0)
XMPACKMAN^PACKMAN - MOVING DATA, ROUTINES, AND PACKAGES IN MESSAGES^2890609^
"KRN",9.2,319,1,0)
^^20^20^2981230^
"KRN",9.2,319,1,1,0)
 
"KRN",9.2,319,1,2,0)
PackMan is a way that messages are used to store and transport data,
"KRN",9.2,319,1,3,0)
packages, and routines via MailMan messages. It cannot be used unless the
"KRN",9.2,319,1,4,0)
proper key is held. In addition, PackMan messages can be secured, in which
"KRN",9.2,319,1,5,0)
case the user needs to know the Scramble [PASSWORD].
"KRN",9.2,319,1,6,0)
 
"KRN",9.2,319,1,7,0)
PACKMAN PROCESSES
"KRN",9.2,319,1,8,0)
 
"KRN",9.2,319,1,9,0)
  [ROUTINE LOAD]       Loads routines into a message.
"KRN",9.2,319,1,10,0)
  [GLOBAL LOAD]        Loads global information into a message.
"KRN",9.2,319,1,11,0)
  [COMPARE] MESSAGE    Compares routines in a PackMan message to those
"KRN",9.2,319,1,12,0)
                     that are currently in use.
"KRN",9.2,319,1,13,0)
  [INSTALL] MESSAGE    Installs the routines and globals. It will create
"KRN",9.2,319,1,14,0)
                     a backup message of any routines that will be
"KRN",9.2,319,1,15,0)
                     over-written, if you request it to.
"KRN",9.2,319,1,16,0)
  [SUMMARIZE] MESSAGE  Summarizes the message content.
"KRN",9.2,319,1,17,0)
  [PACKAGE] LOAD       Loads a package as defined in the PACKAGE file.
"KRN",9.2,319,1,18,0)
  [PRINT] MESSAGE      Prints message, but recognizes content and puts it
"KRN",9.2,319,1,19,0)
                     into a more easily read format than the standard
"KRN",9.2,319,1,20,0)
                     message print.
"KRN",9.2,319,2,0)
^9.22^15^8
"KRN",9.2,319,2,6,0)
ROUTINE LOAD^XM-U-K-PACKMAN LOAD ROUTINES^
"KRN",9.2,319,2,7,0)
COMPARE^XM-U-K-PACKMAN COMPARE^
"KRN",9.2,319,2,8,0)
GLOBAL LOAD^XM-U-K-PACKMAN LOAD GLOBALS^
"KRN",9.2,319,2,10,0)
PACKAGE^XM-U-K-PACKMAN LOAD PACKAGE^
"KRN",9.2,319,2,11,0)
PRINT^XM-U-K-PACKMAN PRINT^
"KRN",9.2,319,2,12,0)
SUMMARIZE^XM-U-K-PACKMAN SUMMARIZE^
"KRN",9.2,319,2,14,0)
INSTALL^XM-U-K-PACKMAN INSTALL^
"KRN",9.2,319,2,15,0)
PASSWORD^XM-U-M-SCRAMBLE PASSWORD
"KRN",9.2,320,-1)
0^177
"KRN",9.2,320,0)
XM-U-K-PACKMAN SUMMARIZE^SUMMARIZE PACKMAN MESSAGE^2890609^
"KRN",9.2,320,1,0)
^^4^4^2981230^
"KRN",9.2,320,1,1,0)
 
"KRN",9.2,320,1,2,0)
The PackMan option for Displaying a summary of a PackMan message does just
"KRN",9.2,320,1,3,0)
that. Packages (and their parts), Routines, Globals (anything that can be
"KRN",9.2,320,1,4,0)
loaded) will be listed as in the message when this option is chosen.
"KRN",9.2,321,-1)
0^171
"KRN",9.2,321,0)
XM-U-K-PACKMAN COMPARE^COMPARE PACKMAN MESSAGE ROUTINES AGAINST THOSE INSTALLED NOW^2910716.0631^^
"KRN",9.2,321,1,0)
^^4^4^2981230^
"KRN",9.2,321,1,1,0)
 
"KRN",9.2,321,1,2,0)
The PackMan Compare option will check the data in the PackMan message
"KRN",9.2,321,1,3,0)
against the routines, globals, data dictionaries on disk, and list out all
"KRN",9.2,321,1,4,0)
differences.
"KRN",9.2,322,-1)
0^173
"KRN",9.2,322,0)
XM-U-K-PACKMAN LOAD GLOBALS^LOADING GLOBAL DATA INTO A PACKMAN MESSAGE^2910716.063^^
"KRN",9.2,322,1,0)
^^8^8^2981230^
"KRN",9.2,322,1,1,0)
 
"KRN",9.2,322,1,2,0)
MailMan allows global data to be loaded into a message and saved there or
"KRN",9.2,322,1,3,0)
transported via Network Mail. The data must conform to VistA standards in
"KRN",9.2,322,1,4,0)
order to ensure that this option will work properly. When the global data
"KRN",9.2,322,1,5,0)
is loaded, the address is put onto one line and the data for that address
"KRN",9.2,322,1,6,0)
onto a second line. Global data can be secured, but not scrambled. It can
"KRN",9.2,322,1,7,0)
be reinstalled. Do not expect MailMan to be able to make a backup message
"KRN",9.2,322,1,8,0)
properly when installing global data.
"KRN",9.2,323,-1)
0^172
"KRN",9.2,323,0)
XM-U-K-PACKMAN INSTALL^INSTALLING A PACKMAN MESSAGE^2890609^
"KRN",9.2,323,1,0)
^^10^10^2981230^
"KRN",9.2,323,1,1,0)
 
"KRN",9.2,323,1,2,0)
PackMan messages can be installed by using the Install option under the
"KRN",9.2,323,1,3,0)
PackMan options by entering an 'X' at the 'Enter message option' prompt.
"KRN",9.2,323,1,4,0)
Installing a message will replace the data on disk, but a BACK-UP message
"KRN",9.2,323,1,5,0)
can be created before the installation takes place. Automatic BACK-UP is
"KRN",9.2,323,1,6,0)
prompted for before installation is allowed.
"KRN",9.2,323,1,7,0)
 
"KRN",9.2,323,1,8,0)
If a message is secured, a security check takes place during the
"KRN",9.2,323,1,9,0)
installation. The message is checked against previously calculated sums,
"KRN",9.2,323,1,10,0)
and if the sums do not match, the message cannot be installed.
"KRN",9.2,324,-1)
0^174
"KRN",9.2,324,0)
XM-U-K-PACKMAN LOAD PACKAGE^LOADING AN ENTIRE PACKAGE INTO A PACKMAN MESSAGE^2910812.1227^
"KRN",9.2,324,1,0)
^^19^19^2981230^
"KRN",9.2,324,1,1,0)
 
"KRN",9.2,324,1,2,0)
You cannot actually load an entire package through MailMan from MailMan.
"KRN",9.2,324,1,3,0)
This is an option given to the creator of a set of INITS for a package
"KRN",9.2,324,1,4,0)
during a DIFROM. This is a somewhat complex option, but the programmer
"KRN",9.2,324,1,5,0)
need only answer that s/he wants the set of information he is compiling
"KRN",9.2,324,1,6,0)
via a DIFROM to be loaded into a message. He or she will then be prompted
"KRN",9.2,324,1,7,0)
for a Subject for the message and asked whether or not to secure the
"KRN",9.2,324,1,8,0)
message. In this way a message can be created, secured, and sent as a part
"KRN",9.2,324,1,9,0)
of a DIFROM and the creator need never invoke a separate MailMan process.
"KRN",9.2,324,1,10,0)
 
"KRN",9.2,324,1,11,0)
Storing a message directly into a message offers the following advantages:
"KRN",9.2,324,1,12,0)
 
"KRN",9.2,324,1,13,0)
  1. The message can be sent over the network faster. It is shorter.
"KRN",9.2,324,1,14,0)
  2. The message can be secured.
"KRN",9.2,324,1,15,0)
  3. The security is checked at installation.
"KRN",9.2,324,1,16,0)
  4. The installation goes directly from the message into the INIT saving
"KRN",9.2,324,1,17,0)
     steps for the installer.
"KRN",9.2,324,1,18,0)
  5. The installer need never be in programming mode since the install
"KRN",9.2,324,1,19,0)
     does not require any direct mode code.
"KRN",9.2,325,-1)
0^176
"KRN",9.2,325,0)
XM-U-K-PACKMAN PRINT^PRINTING PACKMAN MESSAGES^2910716.0639^^
"KRN",9.2,325,1,0)
^^5^5^2981230^^
"KRN",9.2,325,1,1,0)
 
"KRN",9.2,325,1,2,0)
There is a special option for printing PackMan messages. This is available
"KRN",9.2,325,1,3,0)
under the PackMan option (X) at the 'Enter message option' prompt. This
"KRN",9.2,325,1,4,0)
print is particularly useful for routines that are reformatted so that the
"KRN",9.2,325,1,5,0)
tags and lines of code are functionally aligned.
"KRN",9.2,326,-1)
0^175
"KRN",9.2,326,0)
XM-U-K-PACKMAN LOAD ROUTINES^LOADING ROUTINES INTO PACKMAN MESSAGES^2890609^
"KRN",9.2,326,1,0)
^^8^8^2981230^^
"KRN",9.2,326,1,1,0)
 
"KRN",9.2,326,1,2,0)
Routines can be loaded into a PackMan message. If secured, the message
"KRN",9.2,326,1,3,0)
cannot be edited. The installation feature will recognize message
"KRN",9.2,326,1,4,0)
corruption and automatically notify the installer, and perhaps, even abort
"KRN",9.2,326,1,5,0)
the installation process.
"KRN",9.2,326,1,6,0)
 
"KRN",9.2,326,1,7,0)
Once they are in a message, the [PRINT] option in PackMan does a much
"KRN",9.2,326,1,8,0)
better job of formatting the output.
"KRN",9.2,326,2,0)
^9.22A^1^1
"KRN",9.2,326,2,1,0)
PRINT^XM-U-K-PACKMAN PRINT
"KRN",9.2,331,-1)
0^113
"KRN",9.2,331,0)
XM-U-A-INFO ONLY^ADDRESSING A RECIPIENT AS INFORMATION ONLY^2990120.0658^^
"KRN",9.2,331,1,0)
^^8^8^2990120^^
"KRN",9.2,331,1,1,0)
 
"KRN",9.2,331,1,2,0)
Recipients who are addressed as 'Information Only' cannot respond to
"KRN",9.2,331,1,3,0)
the message.
"KRN",9.2,331,1,4,0)

"KRN",9.2,331,1,5,0)
To indicate an 'Information Only' addressee, prefix the
"KRN",9.2,331,1,6,0)
addressee with 'INFO:' or 'I:' (e.g., 'I:SMITH,JOHN', or 'I:G.GROUP').
"KRN",9.2,331,1,7,0)
 
"KRN",9.2,331,1,8,0)
NOTE: The sender of a message can always respond to it.
"KRN",9.2,332,-1)
0^107
"KRN",9.2,332,0)
XM-U-A-CC^ADDRESSING A RECIPIENT AS 'CARBON COPY'^2990120.0701^^
"KRN",9.2,332,1,0)
^^7^7^2990120^^^
"KRN",9.2,332,1,1,0)
 
"KRN",9.2,332,1,2,0)
A recipient who receives a message as a 'CARBON COPY' ('cc:') knows that
"KRN",9.2,332,1,3,0)
a response is not expected. However, there are no limitations on the
"KRN",9.2,332,1,4,0)
recipient.  A [QUERY] of the message shows this recipient as 'cc:USER,NAME'.
"KRN",9.2,332,1,5,0)
 
"KRN",9.2,332,1,6,0)
To address a message to someone in this manner prefix the address with 'CC:'
"KRN",9.2,332,1,7,0)
(e.g., 'CC:SMITH,R').
"KRN",9.2,332,2,0)
^9.22A^1^1
"KRN",9.2,332,2,1,0)
QUERY^XM-U-M-QUERY
"KRN",9.2,333,-1)
0^210
"KRN",9.2,333,0)
XM-U-M-PRINT NO HEADER^HEADERLESS PRINTING^2990120.0948^^
"KRN",9.2,333,1,0)
^^17^17^2990427^
"KRN",9.2,333,1,1,0)
 
"KRN",9.2,333,1,2,0)
The Headerless Print action code (i.e., 'H') allows you to print individual
"KRN",9.2,333,1,3,0)
messages or a group of messages in a mail basket without a header: 
"KRN",9.2,333,1,4,0)
 
"KRN",9.2,333,1,5,0)
  * Printing Individual messages - After reading a message, enter an 'H'
"KRN",9.2,333,1,6,0)
    at the 'Enter message action' prompt.
"KRN",9.2,333,1,7,0)
 
"KRN",9.2,333,1,8,0)
      - MailMan will first ask if you want to print a recipient list. If
"KRN",9.2,333,1,9,0)
        you choose to print recipients, you can print either a summary or
"KRN",9.2,333,1,10,0)
        detailed recipient list.
"KRN",9.2,333,1,11,0)
 
"KRN",9.2,333,1,12,0)
      - MailMan will then ask you what you want to print. The default
"KRN",9.2,333,1,13,0)
        response will always be to print the original message and all
"KRN",9.2,333,1,14,0)
        responses. However, you can choose to print any [COMBINATION] of
"KRN",9.2,333,1,15,0)
        responses (single or range), with or without the original message.
"KRN",9.2,333,1,16,0)
 
"KRN",9.2,333,1,17,0)
[MORE]... 
"KRN",9.2,333,2,0)
^9.22A^5^2
"KRN",9.2,333,2,3,0)
COMBINATION^XM-U-M-CHOOSE RESPONSES
"KRN",9.2,333,2,5,0)
MORE^XM-U-M-PRINT NO HEADER-2
"KRN",9.2,338,-1)
0^189
"KRN",9.2,338,0)
XM-U-M-COPY-2^RESPONSES TO THE COPY OPTION PROMPTS^2990122.1411^^
"KRN",9.2,338,1,0)
^^20^20^2990427^
"KRN",9.2,338,1,1,0)
 
"KRN",9.2,338,1,2,0)
Options for copying a message are as follows:
"KRN",9.2,338,1,3,0)
 
"KRN",9.2,338,1,4,0)
  *  At the 'List original recipients in text?' prompt, entering 'YES'
"KRN",9.2,338,1,5,0)
     inserts the recipient list at the end of the copied text.
"KRN",9.2,338,1,6,0)
     The recipients are those to whom the original message was forwarded
"KRN",9.2,338,1,7,0)
     or sent.
"KRN",9.2,338,1,8,0)
 
"KRN",9.2,338,1,9,0)
  *  At the 'Deliver to the same recipients?' prompt, entering 'YES'
"KRN",9.2,338,1,10,0)
     addresses the message to the same recipients.  Recipients may be
"KRN",9.2,338,1,11,0)
     added or deleted from the message at the 'And Send to' prompt.
"KRN",9.2,338,1,12,0)
 
"KRN",9.2,338,1,13,0)
  *  At the 'Select the responses to copy: 0//' prompt, you can enter the
"KRN",9.2,338,1,14,0)
     original message (default, zero) and/or any [COMBINATION] of
"KRN",9.2,338,1,15,0)
     responses you wish to include. If the message you are copying doesn't
"KRN",9.2,338,1,16,0)
     have any responses, MailMan will automatically copy the original
"KRN",9.2,338,1,17,0)
     message and not prompt you to choose any responses. If you are unsure
"KRN",9.2,338,1,18,0)
     of the responses to include, MailMan lets you enter two question
"KRN",9.2,338,1,19,0)
     marks at the 'Select the responses to copy: 0//' prompt in order to
"KRN",9.2,338,1,20,0)
     display an index of respondents to the message.
"KRN",9.2,338,2,0)
^9.22A^1^1
"KRN",9.2,338,2,1,0)
COMBINATION^XM-U-M-CHOOSE RESPONSES
"KRN",9.2,338,3,0)
^9.23A^^0
"KRN",9.2,347,-1)
0^286
"KRN",9.2,347,0)
XM-U-Q-SEARCH^SEARCHING FOR MESSAGES^2990319.1503^^
"KRN",9.2,347,1,0)
^^15^15^2990319^^^
"KRN",9.2,347,1,1,0)
 
"KRN",9.2,347,1,2,0)
The MailMan interface provides the Query/Search for Messages option for you
"KRN",9.2,347,1,3,0)
to search for messages. This option is located on the main MailMan Menu.
"KRN",9.2,347,1,4,0)
 
"KRN",9.2,347,1,5,0)
You can search for any messages you sent or that were sent to you. MailMan
"KRN",9.2,347,1,6,0)
allows you to choose in what location you want to search for mail:
"KRN",9.2,347,1,7,0)
 
"KRN",9.2,347,1,8,0)
  * Search for messages anywhere on the [SYSTEM].
"KRN",9.2,347,1,9,0)
 
"KRN",9.2,347,1,10,0)
  * Search for messages anywhere in your [MAILBOX].
"KRN",9.2,347,1,11,0)
 
"KRN",9.2,347,1,12,0)
  * Search for messages in a specific mail basket in your [MAILBOX].
"KRN",9.2,347,1,13,0)
 
"KRN",9.2,347,1,14,0)
When searching for messages in your own mailbox, you can specify a variety
"KRN",9.2,347,1,15,0)
of search [CRITERIA].
"KRN",9.2,347,2,0)
^9.22A^3^3
"KRN",9.2,347,2,1,0)
MAILBOX^XM-U-Q-SEARCH MAILBOX
"KRN",9.2,347,2,2,0)
CRITERIA^XM-U-Q-SEARCH CRITERIA
"KRN",9.2,347,2,3,0)
SYSTEM^XM-U-Q-SEARCH SYSTEM
"KRN",9.2,349,-1)
0^118
"KRN",9.2,349,0)
XM-U-B-BASKET CONTENTS LIST^DIRECTORY OF BASKETS^2890609^
"KRN",9.2,349,1,0)
^^25^25^2981229^
"KRN",9.2,349,1,1,0)
 
"KRN",9.2,349,1,2,0)
MailMan allows you to list your messages in one or all of your mail
"KRN",9.2,349,1,3,0)
baskets in your mailbox through the Mailbox Contents List option on the
"KRN",9.2,349,1,4,0)
Other MailMan Functions menu.
"KRN",9.2,349,1,5,0)
 
"KRN",9.2,349,1,6,0)
The report provides the following information:
"KRN",9.2,349,1,7,0)
 
"KRN",9.2,349,1,8,0)
  * Basket - The mail basket name.
"KRN",9.2,349,1,9,0)
 
"KRN",9.2,349,1,10,0)
  * Message Information - A summary list of information is provided for
"KRN",9.2,349,1,11,0)
    each message found in the basket. This information includes:
"KRN",9.2,349,1,12,0)
 
"KRN",9.2,349,1,13,0)
      - Message number in that basket.
"KRN",9.2,349,1,14,0)
      - MailMan internal message identification number (in brackets).
"KRN",9.2,349,1,15,0)
      - Date the message was sent.
"KRN",9.2,349,1,16,0)
      - Subject of the message.
"KRN",9.2,349,1,17,0)
 
"KRN",9.2,349,1,18,0)
To list all of the messages in one mail basket, choose the Mailbox
"KRN",9.2,349,1,19,0)
Contents List option on the Other MailMan Functions menu and enter 'O'
"KRN",9.2,349,1,20,0)
(one) after the 'List contents of: All Baskets//' prompt.
"KRN",9.2,349,1,21,0)
 
"KRN",9.2,349,1,22,0)
To list all of the messages in your mailbox, choose the Mailbox
"KRN",9.2,349,1,23,0)
Contents List option on the Other MailMan Functions menu and enter 'A'
"KRN",9.2,349,1,24,0)
(all) after the 'List contents of: All Baskets//' prompt or accept the
"KRN",9.2,349,1,25,0)
default by pressing the Return/Enter key.
"KRN",9.2,350,-1)
0^137
"KRN",9.2,350,0)
XM-U-B-RESEQUENCE MESSAGES^RESEQUENCING MESSAGE NUMBERS^2911003.0856^
"KRN",9.2,350,1,0)
^^9^9^2990108^
"KRN",9.2,350,1,1,0)
 
"KRN",9.2,350,1,2,0)
The Resequence action code (i.e., 'R') allows you to renumber the message
"KRN",9.2,350,1,3,0)
numbers in a list of messages in a mail basket. All messages will be
"KRN",9.2,350,1,4,0)
resequenced in the order of their MailMan internal message identification
"KRN",9.2,350,1,5,0)
numbers. This helps keep your mail basket messages more orderly by
"KRN",9.2,350,1,6,0)
removing any 'gaps' in message number sequence.
"KRN",9.2,350,1,7,0)
 
"KRN",9.2,350,1,8,0)
To resequence the message numbers for a group of messages in a mail
"KRN",9.2,350,1,9,0)
basket, enter an 'R' at the 'Enter message number or command:' prompt.
"KRN",9.2,351,-1)
0^257
"KRN",9.2,351,0)
XM-U-P-FORWARDING ADDRESS^HOW TO USE THE FORWARDING ADDRESS FEATURE^2890609^
"KRN",9.2,351,1,0)
^^54^54^2990505^
"KRN",9.2,351,1,1,0)
 
"KRN",9.2,351,1,2,0)
MailMan gives you the opportunity to have your mail automatically
"KRN",9.2,351,1,3,0)
forwarded to a remote e-mail address. MailMan also gives you the option to
"KRN",9.2,351,1,4,0)
continue to receive e-mail at your local address as well.
"KRN",9.2,351,1,5,0)
 
"KRN",9.2,351,1,6,0)
The MailMan interface provides the Forwarding Address Edit option located
"KRN",9.2,351,1,7,0)
on the Personal Preferences menu to allow you to have your mail
"KRN",9.2,351,1,8,0)
automatically forwarded.
"KRN",9.2,351,1,9,0)
 
"KRN",9.2,351,1,10,0)
NOTE: This option may or may not be available to you. It depends on
"KRN",9.2,351,1,11,0)
      whether or not your site restricts access to this option to users
"KRN",9.2,351,1,12,0)
      holding the XMNET security key. For example, if your site requires
"KRN",9.2,351,1,13,0)
      users to hold the XMNET security key and you don't hold that key,
"KRN",9.2,351,1,14,0)
      you won't be able to use this option.
"KRN",9.2,351,1,15,0)
 
"KRN",9.2,351,1,16,0)
The Forwarding Address Edit option asks you to enter the following
"KRN",9.2,351,1,17,0)
information:
"KRN",9.2,351,1,18,0)
 
"KRN",9.2,351,1,19,0)
  * Forwarding Address - To what remote address should the mail be routed?
"KRN",9.2,351,1,20,0)
 
"KRN",9.2,351,1,21,0)
  * Local Delivery Flag - Should the mail be sent both remotely and
"KRN",9.2,351,1,22,0)
    locally or just remotely?
"KRN",9.2,351,1,23,0)
 
"KRN",9.2,351,1,24,0)
The FORWARDING ADDRESS field contains the name of the remote address to
"KRN",9.2,351,1,25,0)
which any MailMan messages addressed to you are routed. Only the original
"KRN",9.2,351,1,26,0)
message gets forwarded, replies to messages are not forwarded.
"KRN",9.2,351,1,27,0)
 
"KRN",9.2,351,1,28,0)
NOTE: Broadcast messages will be forwarded like any other messages sent to
"KRN",9.2,351,1,29,0)
      your mailbox. However, since the Secretary's daily broadcast message
"KRN",9.2,351,1,30,0)
      on FORUM is sent to all sites, it will NOT be forwarded from FORUM.
"KRN",9.2,351,1,31,0)
 
"KRN",9.2,351,1,32,0)
The remote address must contain the remote name, an at-sign ('@' Shift-2
"KRN",9.2,351,1,33,0)
key on most keyboards), and the remote domain name (i.e., name@domain).
"KRN",9.2,351,1,34,0)
The entry can be up to 50 characters in length.
"KRN",9.2,351,1,35,0)
 
"KRN",9.2,351,1,36,0)
The value in the LOCAL DELIVERY FLAG field works in conjunction with the
"KRN",9.2,351,1,37,0)
FORWARDING ADDRESS field. If the FORWARDING ADDRESS field contains a
"KRN",9.2,351,1,38,0)
remote e-mail address, you should also set the LOCAL DELIVERY FLAG field.
"KRN",9.2,351,1,39,0)
 
"KRN",9.2,351,1,40,0)
MailMan gives you two possible entries for this field:
"KRN",9.2,351,1,41,0)
 
"KRN",9.2,351,1,42,0)
  * No Local Delivery (default) - If you have a FORWARDING ADDRESS and you
"KRN",9.2,351,1,43,0)
    do not want your messages delivered locally, set the LOCAL DELIVERY
"KRN",9.2,351,1,44,0)
    FLAG field to 'Off' (i.e., '0'). Your messages will only be delivered
"KRN",9.2,351,1,45,0)
    to your remote addresses.
"KRN",9.2,351,1,46,0)
 
"KRN",9.2,351,1,47,0)
  * Local Delivery On - If you have a FORWARDING ADDRESS and you want your
"KRN",9.2,351,1,48,0)
    messages delivered locally as well as remotely, set the LOCAL DELIVERY
"KRN",9.2,351,1,49,0)
    FLAG field to 'On' (i.e., '1'). Your messages will be delivered to
"KRN",9.2,351,1,50,0)
    both your local and remote addresses.
"KRN",9.2,351,1,51,0)
 
"KRN",9.2,351,1,52,0)
Also, if you've set the LOCAL DELIVERY FLAG field to continue to receive
"KRN",9.2,351,1,53,0)
mail locally, you may want to choose another MailMan user to act as your
"KRN",9.2,351,1,54,0)
[SURROGATE] so that they can read your local mail.
"KRN",9.2,351,2,0)
^9.22A^1^1
"KRN",9.2,351,2,1,0)
SURROGATE^XM-U-I-SURROGATE
"KRN",9.2,352,-1)
0^299
"KRN",9.2,352,0)
XM-U-R-READ^READING AND MANAGING YOUR MAIL^2890609^^
"KRN",9.2,352,1,0)
^^20^20^2990107^^
"KRN",9.2,352,1,1,0)
 
"KRN",9.2,352,1,2,0)
The MailMan interface provides two options to read and manage your mail:
"KRN",9.2,352,1,3,0)
 
"KRN",9.2,352,1,4,0)
  * [NEW] Messages and Responses (NML)
"KRN",9.2,352,1,5,0)
 
"KRN",9.2,352,1,6,0)
  * Read/Manage Messages (RML)
"KRN",9.2,352,1,7,0)
 
"KRN",9.2,352,1,8,0)
These options are located on the main MailMan Menu.
"KRN",9.2,352,1,9,0)
 
"KRN",9.2,352,1,10,0)
The Read/Manage Messages option lets you better manage your e-mail. It
"KRN",9.2,352,1,11,0)
allows you to perform numerous actions on both new and existing messages
"KRN",9.2,352,1,12,0)
stored on the system (e.g., in a particular mail basket, mailbox, etc.).
"KRN",9.2,352,1,13,0)
 
"KRN",9.2,352,1,14,0)
The Read/Manage Messages option can be used to read and reply to messages.
"KRN",9.2,352,1,15,0)
It can also be used to delete, print, forward, save, copy, query, filter,
"KRN",9.2,352,1,16,0)
later, or terminate messages. You can also select messages for subsequent
"KRN",9.2,352,1,17,0)
group actions. As long as a message is still on the system and you were a
"KRN",9.2,352,1,18,0)
recipient or sender of the message, it is available to you for processing.
"KRN",9.2,352,1,19,0)
 
"KRN",9.2,352,1,20,0)
[MORE]...
"KRN",9.2,352,2,0)
^9.22A^12^2
"KRN",9.2,352,2,9,0)
NEW^XM-U-R-READ NEW
"KRN",9.2,352,2,12,0)
MORE^XM-U-R-READ-2
"KRN",9.2,353,-1)
0^300
"KRN",9.2,353,0)
XM-U-R-READ NEW^PROCESSING NEW MAIL^2890609^
"KRN",9.2,353,1,0)
^^19^19^2990108^^
"KRN",9.2,353,1,1,0)
 
"KRN",9.2,353,1,2,0)
The New Messages and Responses (NML) option is the option you use when you
"KRN",9.2,353,1,3,0)
specifically wish to process new mail in your mailbox (i.e., messages and
"KRN",9.2,353,1,4,0)
responses not previously read). MailMan notifies you when you have new
"KRN",9.2,353,1,5,0)
mail and precedes each new (unread) message in a list of messages with an
"KRN",9.2,353,1,6,0)
asterisk.
"KRN",9.2,353,1,7,0)
 
"KRN",9.2,353,1,8,0)
This option provides you with the following choices of how you choose to
"KRN",9.2,353,1,9,0)
read your new mail:
"KRN",9.2,353,1,10,0)
 
"KRN",9.2,353,1,11,0)
  * [READ] new mail by basket (default).
"KRN",9.2,353,1,12,0)
  * [LIST BASKETS] with new mail.
"KRN",9.2,353,1,13,0)
  * List [ALL] new messages.
"KRN",9.2,353,1,14,0)
  * List all [PRIORITY] messages.
"KRN",9.2,353,1,15,0)
  * [PRINT] all new messages.
"KRN",9.2,353,1,16,0)
  * [SCAN] all new messages.
"KRN",9.2,353,1,17,0)
  * Quit - Use the Quit option to 'quit' processing your new mail.   
"KRN",9.2,353,1,18,0)
 
"KRN",9.2,353,1,19,0)
[MORE]... 
"KRN",9.2,353,2,0)
^9.22^15^7
"KRN",9.2,353,2,6,0)
READ^XM-U-R-NEW READ
"KRN",9.2,353,2,9,0)
LIST BASKETS^XM-U-R-NEW LIST BASKETS
"KRN",9.2,353,2,10,0)
ALL^XM-U-R-NEW LIST ALL
"KRN",9.2,353,2,11,0)
PRIORITY^XM-U-R-NEW LIST PRIORITY
"KRN",9.2,353,2,12,0)
PRINT^XM-U-R-NEW PRINT
"KRN",9.2,353,2,13,0)
SCAN^XM-U-R-NEW SCAN
"KRN",9.2,353,2,15,0)
MORE^XM-U-R-READ NEW-2
"KRN",9.2,355,-1)
0^190
"KRN",9.2,355,0)
XM-U-M-DELETE^DELETING MESSAGES^2931206.204^
"KRN",9.2,355,1,0)
^^19^19^2990427^
"KRN",9.2,355,1,1,0)
 
"KRN",9.2,355,1,2,0)
The Delete action code (i.e., 'D') allows you to delete individual
"KRN",9.2,355,1,3,0)
messages or a group of messages in a mail basket by moving them to the
"KRN",9.2,355,1,4,0)
'WASTE' basket.
"KRN",9.2,355,1,5,0)
 
"KRN",9.2,355,1,6,0)
Generally, a batch job is run nightly (determined by IRM at your site) to
"KRN",9.2,355,1,7,0)
remove messages from your 'WASTE' basket, and thus, from your mailbox. You
"KRN",9.2,355,1,8,0)
can immediately remove messages from your mailbox by, again, deleting the
"KRN",9.2,355,1,9,0)
messages from your 'WASTE' basket. However, the messages remain on the
"KRN",9.2,355,1,10,0)
system until all recipients of the messages have deleted them from their
"KRN",9.2,355,1,11,0)
mailbox. If mail is deleted from the 'WASTE' basket, it is not permanently
"KRN",9.2,355,1,12,0)
gone. It can still be retrieved by a [SEARCH] on its subject until MailMan
"KRN",9.2,355,1,13,0)
purges the message from the system.
"KRN",9.2,355,1,14,0)
 
"KRN",9.2,355,1,15,0)
If you delete a message, and someone else then replies to it, the message
"KRN",9.2,355,1,16,0)
will be redelivered to you so that it can be read again.  Contrast this to
"KRN",9.2,355,1,17,0)
the [TERMINATE] action code, which prevents the message from being redelivered.
"KRN",9.2,355,1,18,0)
 
"KRN",9.2,355,1,19,0)
[MORE]... 
"KRN",9.2,355,2,0)
^9.22A^6^3
"KRN",9.2,355,2,2,0)
TERMINATE^XM-U-M-TERMINATE
"KRN",9.2,355,2,3,0)
SEARCH^XM-U-Q-SEARCH SYSTEM
"KRN",9.2,355,2,6,0)
MORE^XM-U-M-DELETE-2
"KRN",9.2,356,-1)
0^216
"KRN",9.2,356,0)
XM-U-M-QUERY^QUERYING A MESSAGE FOR ITS STATUS^2990428.0709^^
"KRN",9.2,356,1,0)
^^20^20^2990428^^^
"KRN",9.2,356,1,1,0)
 
"KRN",9.2,356,1,2,0)
At the 'Enter message action' prompt, the user may enter a 'Q' to inquire
"KRN",9.2,356,1,3,0)
about the status of the message. The 'Query' option shows you who has read
"KRN",9.2,356,1,4,0)
the message, when the message was read, how many responses were read, and
"KRN",9.2,356,1,5,0)
other pertinent facts.
"KRN",9.2,356,1,6,0)
 
"KRN",9.2,356,1,7,0)
The query option has four forms:
"KRN",9.2,356,1,8,0)
 
"KRN",9.2,356,1,9,0)
  * 'Q' is the [GENERAL] query that tells you how the message was addressed.
"KRN",9.2,356,1,10,0)
 
"KRN",9.2,356,1,11,0)
  * 'Q xxx' is used to inquire about a [SPECIFIC] individual by entering
"KRN",9.2,356,1,12,0)
    'Q' and the individual's name (i.e., xxx = a person's name). For
"KRN",9.2,356,1,13,0)
    example, 'Q SMITH' will show the status of all 'SMITH' recipients.
"KRN",9.2,356,1,14,0)
 
"KRN",9.2,356,1,15,0)
  * 'QD' will display [DETAILED] information for each individual recipient.
"KRN",9.2,356,1,16,0)
 
"KRN",9.2,356,1,17,0)
  * 'QN' will display a message's [NETWORK] header (if it originated from
"KRN",9.2,356,1,18,0)
    a remote location).
"KRN",9.2,356,1,19,0)
 
"KRN",9.2,356,1,20,0)
[MORE]... 
"KRN",9.2,356,2,0)
^9.22A^6^5
"KRN",9.2,356,2,2,0)
GENERAL^XM-U-M-QUERY GENERAL
"KRN",9.2,356,2,3,0)
DETAILED^XM-U-M-QUERY DETAILED
"KRN",9.2,356,2,4,0)
NETWORK^XM-U-M-QUERY NETWORK
"KRN",9.2,356,2,5,0)
SPECIFIC^XM-U-M-QUERY SPECIFIC
"KRN",9.2,356,2,6,0)
MORE^XM-U-M-QUERY-2
"KRN",9.2,358,-1)
0^197
"KRN",9.2,358,0)
XM-U-M-FORWARD^FORWARDING MESSAGES^2990114.1333^^
"KRN",9.2,358,1,0)
^^14^14^2990427^
"KRN",9.2,358,1,1,0)
 
"KRN",9.2,358,1,2,0)
You can use the Forward action code (i.e., 'F') to forward messages to
"KRN",9.2,358,1,3,0)
different recipients. As forwarding sends the message to other users, you
"KRN",9.2,358,1,4,0)
will be prompted to [ADDRESS] the message to individuals or [MAIL GROUPS].
"KRN",9.2,358,1,5,0)
 
"KRN",9.2,358,1,6,0)
The person who forwarded the message and the time the message was
"KRN",9.2,358,1,7,0)
forwarded are displayed when you do a [QUERY] (QD) on the message.
"KRN",9.2,358,1,8,0)
If a message is defined to be [CLOSED], you cannot forward the message,
"KRN",9.2,358,1,9,0)
unless you sent it.
"KRN",9.2,358,1,10,0)
 
"KRN",9.2,358,1,11,0)
Forwarding cancels any previous [TERMINATION] of a message. This is true
"KRN",9.2,358,1,12,0)
when you forward a message to yourself or to other recipients.
"KRN",9.2,358,1,13,0)
 
"KRN",9.2,358,1,14,0)
[MORE]... 
"KRN",9.2,358,2,0)
^9.22A^8^6
"KRN",9.2,358,2,1,0)
QUERY^XM-U-M-QUERY DETAILED
"KRN",9.2,358,2,2,0)
CLOSED^XM-U-M-CLOSED
"KRN",9.2,358,2,3,0)
TERMINATION^XM-U-M-TERMINATE
"KRN",9.2,358,2,4,0)
MAIL GROUPS^XM-U-I-GROUP
"KRN",9.2,358,2,5,0)
ADDRESS^XM-U-A-ADDRESS
"KRN",9.2,358,2,8,0)
MORE^XM-U-M-FORWARD-2
"KRN",9.2,359,-1)
0^179
"KRN",9.2,359,0)
XM-U-M-BACKUP^BACKING UP THE MESSAGE DISPLAY^2911003.0842^
"KRN",9.2,359,1,0)
^^18^18^2990427^
"KRN",9.2,359,1,1,0)
 
"KRN",9.2,359,1,2,0)
After a message has been read, replied to, and the reply has been read,
"KRN",9.2,359,1,3,0)
MailMan will no longer display the message text automatically when you
"KRN",9.2,359,1,4,0)
attempt to read the message. This is to avoid forcing you to read through
"KRN",9.2,359,1,5,0)
text you've already seen. However, the text is still there. You can use
"KRN",9.2,359,1,6,0)
the Backup action code (i.e., 'B') to back up to any part of a message and
"KRN",9.2,359,1,7,0)
read the message from that point on:
"KRN",9.2,359,1,8,0)
 
"KRN",9.2,359,1,9,0)
  * Original message
"KRN",9.2,359,1,10,0)
 
"KRN",9.2,359,1,11,0)
  * Any specific response (if any)
"KRN",9.2,359,1,12,0)
 
"KRN",9.2,359,1,13,0)
The Backup function is also useful when viewing a new response to an old
"KRN",9.2,359,1,14,0)
message and you can't recall the previous responses. Backing up allows you
"KRN",9.2,359,1,15,0)
to review the previous responses.
"KRN",9.2,359,1,16,0)
 
"KRN",9.2,359,1,17,0)
To back up to the original message or any specific response, enter a 'B'
"KRN",9.2,359,1,18,0)
at the 'Enter message action' prompt.
"KRN",9.2,359,2,0)
^9.22A^0^0
"KRN",9.2,360,-1)
0^228
"KRN",9.2,360,0)
XM-U-M-SAVE^SAVING MESSAGES^2990114.1101^^
"KRN",9.2,360,1,0)
^^21^21^2990427^
"KRN",9.2,360,1,1,0)
 
"KRN",9.2,360,1,2,0)
The Save action code (i.e., 'S') allows you to save (move) individual
"KRN",9.2,360,1,3,0)
messages or a group of messages in a mail basket to a different existing
"KRN",9.2,360,1,4,0)
mail basket in your mailbox or to a new mail basket you create on the fly.
"KRN",9.2,360,1,5,0)
 
"KRN",9.2,360,1,6,0)
To save messages, do the following:
"KRN",9.2,360,1,7,0)
 
"KRN",9.2,360,1,8,0)
  * Individually - After reading a message, enter an 'S' at the 'Enter
"KRN",9.2,360,1,9,0)
    message action' prompt. MailMan will save the message after prompting
"KRN",9.2,360,1,10,0)
    you for a basket to save it to.
"KRN",9.2,360,1,11,0)
 
"KRN",9.2,360,1,12,0)
  * Group of Messages - Enter an 'S' at the basket option or command
"KRN",9.2,360,1,13,0)
    prompt.
"KRN",9.2,360,1,14,0)
 
"KRN",9.2,360,1,15,0)
      - MailMan will first ask you to select which messages you want to
"KRN",9.2,360,1,16,0)
        save, including a [RANGE] of messages. Also, if you are using a
"KRN",9.2,360,1,17,0)
        full-screen reader, you can pre-[SELECT] messages and then save
"KRN",9.2,360,1,18,0)
        them as a group.
"KRN",9.2,360,1,19,0)
 
"KRN",9.2,360,1,20,0)
      - MailMan will then save the messages after prompting you for a
"KRN",9.2,360,1,21,0)
        basket to save them to.
"KRN",9.2,360,2,0)
^9.22^3^2
"KRN",9.2,360,2,1,0)
RANGE^XM-U-M-CHOOSE RANGE
"KRN",9.2,360,2,3,0)
SELECT^XM-U-M-CHOOSE SELECT
"KRN",9.2,361,-1)
0^233
"KRN",9.2,361,0)
XM-U-M-TERMINATE^TERMINATING MESSAGES^2931113.2343^
"KRN",9.2,361,1,0)
^^15^15^2990427^
"KRN",9.2,361,1,1,0)
 
"KRN",9.2,361,1,2,0)
The Terminate action code (i.e., 'T') allows you to permanently delete
"KRN",9.2,361,1,3,0)
individual messages or a group of messages in a mail basket by moving them
"KRN",9.2,361,1,4,0)
to the 'WASTE' basket.
"KRN",9.2,361,1,5,0)
 
"KRN",9.2,361,1,6,0)
Unlike [DELETING] messages, terminating messages also stops any subsequent
"KRN",9.2,361,1,7,0)
replies to those messages from being delivered to you.
"KRN",9.2,361,1,8,0)
 
"KRN",9.2,361,1,9,0)
If you accidentally terminate a message and want to receive responses,
"KRN",9.2,361,1,10,0)
you may recover the message from your 'WASTE' basket, and [FORWARD] the
"KRN",9.2,361,1,11,0)
message to yourself. This will cancel the effect of your previous
"KRN",9.2,361,1,12,0)
termination. If the message is no longer in your 'WASTE' basket, you could
"KRN",9.2,361,1,13,0)
ask another recipient of the message to forward it to you.
"KRN",9.2,361,1,14,0)
 
"KRN",9.2,361,1,15,0)
[MORE]... 
"KRN",9.2,361,2,0)
^9.22A^5^3
"KRN",9.2,361,2,1,0)
FORWARD^XM-U-M-FORWARD
"KRN",9.2,361,2,2,0)
DELETING^XM-U-M-DELETE
"KRN",9.2,361,2,5,0)
MORE^XM-U-M-TERMINATE-2
"KRN",9.2,362,-1)
0^226
"KRN",9.2,362,0)
XM-U-M-REPLY^REPLYING TO A MESSAGE^2990513.1449^^
"KRN",9.2,362,1,0)
^^18^18^2990514^
"KRN",9.2,362,1,1,0)
 
"KRN",9.2,362,1,2,0)
Entering an 'R' or 'RI' at the 'Enter message action' prompt enables
"KRN",9.2,362,1,3,0)
you to reply to the message.
"KRN",9.2,362,1,4,0)
 
"KRN",9.2,362,1,5,0)
  * If you enter 'R', you will simply reply to the message.
"KRN",9.2,362,1,6,0)
 
"KRN",9.2,362,1,7,0)
  * If you enter 'RI', you will be able to include the original message
"KRN",9.2,362,1,8,0)
    and/or any [COMBINATION] of responses in your reply. (With this feature,
"KRN",9.2,362,1,9,0)
    you can more easily respond to what someone wrote, point by point.)
"KRN",9.2,362,1,10,0)
 
"KRN",9.2,362,1,11,0)
You are then prompted to enter the text of the new reply.
"KRN",9.2,362,1,12,0)
 
"KRN",9.2,362,1,13,0)
'Reply' immediately attaches your reply to the response chain so everyone
"KRN",9.2,362,1,14,0)
on the message sees your reply, making it instantly available to anyone
"KRN",9.2,362,1,15,0)
currently reading the message. This helps facilitate 'real-time'
"KRN",9.2,362,1,16,0)
conversations among message recipients.
"KRN",9.2,362,1,17,0)
 
"KRN",9.2,362,1,18,0)
[MORE]...
"KRN",9.2,362,2,0)
^9.22A^3^2
"KRN",9.2,362,2,2,0)
COMBINATION^XM-U-M-CHOOSE RESPONSES
"KRN",9.2,362,2,3,0)
MORE^XM-U-M-REPLY-2
"KRN",9.2,363,-1)
0^305
"KRN",9.2,363,0)
XMHELP^USING MAILMAN^2990201.1346^^
"KRN",9.2,363,1,0)
^^21^21^2990513^
"KRN",9.2,363,1,1,0)
 
"KRN",9.2,363,1,2,0)
MailMan is a general purpose electronic messaging (e-mail) system. Messages
"KRN",9.2,363,1,3,0)
can be exchanged over communication lines, modems, and other networks. A
"KRN",9.2,363,1,4,0)
message is created with the [SEND] option. The message then appears in
"KRN",9.2,363,1,5,0)
each recipient's mailbox, to be [READ] after signon. Messages are tracked
"KRN",9.2,363,1,6,0)
electronically, so that each message's author and readers are identified.
"KRN",9.2,363,1,7,0)
 
"KRN",9.2,363,1,8,0)
After reading a message, a recipient can select from a variety of message
"KRN",9.2,363,1,9,0)
[ACTIONS], such as saving it into other mail baskets, deleting it, forwarding
"KRN",9.2,363,1,10,0)
it to others, or replying to it.  Replies generate new messages seen by all
"KRN",9.2,363,1,11,0)
recipients, creating an ongoing dialog among the recipients. 
"KRN",9.2,363,1,12,0)
 
"KRN",9.2,363,1,13,0)
Users can [FILTER] their mail and [SEARCH] for specific messages. Also, users
"KRN",9.2,363,1,14,0)
can designate [SURROGATES] to manage mail for them. Users can 'introduce'
"KRN",9.2,363,1,15,0)
themselves, provide contact information, and create a banner to be
"KRN",9.2,363,1,16,0)
displayed when a message is sent to them. Users can also choose a message
"KRN",9.2,363,1,17,0)
[READER] and further [CUSTOMIZE] the MailMan interface to suit their
"KRN",9.2,363,1,18,0)
needs. [GROUPS] of users may also be created.
"KRN",9.2,363,1,19,0)
 
"KRN",9.2,363,1,20,0)
There are some [NEW FEATURES] for MailMan users.  Some commonly asked
"KRN",9.2,363,1,21,0)
[QUESTIONS] and answers on MailMan may be useful in solving typical problems. 
"KRN",9.2,363,2,0)
^9.22^22^11
"KRN",9.2,363,2,1,0)
SEND^XM-U-M-SEND^
"KRN",9.2,363,2,2,0)
READ^XM-U-R-READ^
"KRN",9.2,363,2,12,0)
GROUPS^XM-U-I-GROUP^
"KRN",9.2,363,2,13,0)
SEARCH^XM-U-Q-SEARCH
"KRN",9.2,363,2,14,0)
SURROGATES^XM-U-I-SURROGATE
"KRN",9.2,363,2,16,0)
FILTER^XM-U-P-FILTER
"KRN",9.2,363,2,17,0)
ACTIONS^XM-U-MO-READ
"KRN",9.2,363,2,18,0)
CUSTOMIZE^XM-U-P-OPTIONS
"KRN",9.2,363,2,20,0)
READER^XM-U-B-READER
"KRN",9.2,363,2,21,0)
NEW FEATURES^XM-U-NEW FEATURES
"KRN",9.2,363,2,22,0)
QUESTIONS^XM-U-H-QUESTIONS
"KRN",9.2,364,-1)
0^232
"KRN",9.2,364,0)
XM-U-M-SEND^USING THE 'Send a message' OPTION^2990119.1603^^
"KRN",9.2,364,1,0)
^^21^21^2990119^^^^
"KRN",9.2,364,1,1,0)
 
"KRN",9.2,364,1,2,0)
The 'Send a message' option is used to create and distribute messages.
"KRN",9.2,364,1,3,0)
MailMan allows you to send new mail in four easy steps:
"KRN",9.2,364,1,4,0)
 
"KRN",9.2,364,1,5,0)
  1. Enter the subject of the message. It must be no more than 65 characters.
"KRN",9.2,364,1,6,0)
     You can later go back and edit the [SUBJECT] before sending the message.
"KRN",9.2,364,1,7,0)
 
"KRN",9.2,364,1,8,0)
  2. Enter the text of your message. MailMan automatically places you in your
"KRN",9.2,364,1,9,0)
     [PREFERRED EDITOR]. When you have completed your text entry, exit the
"KRN",9.2,364,1,10,0)
     editor. You can later go back and edit the [TEXT] before sending the
"KRN",9.2,364,1,11,0)
     message.
"KRN",9.2,364,1,12,0)
 
"KRN",9.2,364,1,13,0)
  3. Address the message (e.g., send it to individual [RECIPIENTS] or a
"KRN",9.2,364,1,14,0)
     [MAIL GROUP]). You can later go back and edit the [ADDRESSEES] before
"KRN",9.2,364,1,15,0)
     sending the message.
"KRN",9.2,364,1,16,0)
 
"KRN",9.2,364,1,17,0)
  4. Send the message. Before sending the message, you can edit it or add
"KRN",9.2,364,1,18,0)
     [ATTRIBUTES] to it at the 'Select Message option:  Transmit now//' prompt
"KRN",9.2,364,1,19,0)
     (e.g., make the message: priority, closed, confidential, information only,
"KRN",9.2,364,1,20,0)
     etc.).  (If you send it only to yourself, you can [EDIT] it further before
"KRN",9.2,364,1,21,0)
     forwarding it on to others.)
"KRN",9.2,364,2,0)
^9.22^11^8
"KRN",9.2,364,2,3,0)
RECIPIENTS^XM-U-A-ADDRESS^
"KRN",9.2,364,2,4,0)
TEXT^XM-U-M-EDIT TEXT^
"KRN",9.2,364,2,6,0)
ATTRIBUTES^XM-U-MO-SEND-2
"KRN",9.2,364,2,7,0)
ADDRESSEES^XM-U-M-EDIT RECIPIENTS
"KRN",9.2,364,2,8,0)
SUBJECT^XM-U-M-EDIT SUBJECT
"KRN",9.2,364,2,9,0)
MAIL GROUP^XM-U-I-GROUP
"KRN",9.2,364,2,10,0)
PREFERRED EDITOR^XM-U-P-EDITOR
"KRN",9.2,364,2,11,0)
EDIT^XM-U-MO-EDIT
"KRN",9.2,365,-1)
0^106
"KRN",9.2,365,0)
XM-U-A-ADDRESS^SENDING A MESSAGE - ADDRESSING^2990120.1221^^
"KRN",9.2,365,1,0)
^^21^21^2990120^^^^
"KRN",9.2,365,1,1,0)
 
"KRN",9.2,365,1,2,0)
You can address a message at the 'Send mail to:' or 'And send mail to:'
"KRN",9.2,365,1,3,0)
prompts. As a default, MailMan will always let you send a message to yourself
"KRN",9.2,365,1,4,0)
by automatically placing your name as the default response after the first
"KRN",9.2,365,1,5,0)
'Send mail to:' prompt. As an addressee, you can [QUERY] the message to see if
"KRN",9.2,365,1,6,0)
or when the other recipients opened the message you sent. Whether you initially
"KRN",9.2,365,1,7,0)
make yourself an addressee or not, you will receive all replies to the message.
"KRN",9.2,365,1,8,0)
 
"KRN",9.2,365,1,9,0)
Messages can be addressed locally to: [USERS], devices (D.device_name), servers
"KRN",9.2,365,1,10,0)
(S.option_name), or [MAIL GROUPS]. You select a mail group by entering 'G.'
"KRN",9.2,365,1,11,0)
followed by enough characters to ensure identification. For example, 'G.SOUTH'
"KRN",9.2,365,1,12,0)
identifies the SOUTH mail group. If the group is [LARGE], MailMan will suggest
"KRN",9.2,365,1,13,0)
deferring delivery to save you time.  Messages can also be addressed to REMOTE
"KRN",9.2,365,1,14,0)
users. Sending to remote users is facilitated by a directory. 
"KRN",9.2,365,1,15,0)
 
"KRN",9.2,365,1,16,0)
Recipients may be marked as [INFORMATION ONLY] or [CARBON COPY].
"KRN",9.2,365,1,17,0)
Recipients who are 'Information Only' may not respond to the message. You
"KRN",9.2,365,1,18,0)
can also [STAGGER] the delivery of the message to individual recipients.
"KRN",9.2,365,1,19,0)
 
"KRN",9.2,365,1,20,0)
To remove recipients from the recipient list, enter a minus sign (hyphen)
"KRN",9.2,365,1,21,0)
immediately followed by the user's name (e.g., -SMITH,JOE).
"KRN",9.2,365,2,0)
^9.22^9^7
"KRN",9.2,365,2,1,0)
MAIL GROUPS^XM-U-I-GROUP^
"KRN",9.2,365,2,4,0)
INFORMATION ONLY^XM-U-A-INFO ONLY
"KRN",9.2,365,2,5,0)
CARBON COPY^XM-U-A-CC
"KRN",9.2,365,2,6,0)
STAGGER^XM-U-A-STAGGER DELIVERY
"KRN",9.2,365,2,7,0)
QUERY^XM-U-M-QUERY
"KRN",9.2,365,2,8,0)
USERS^XM-U-A-LOCAL USER NAME
"KRN",9.2,365,2,9,0)
LARGE^XM-U-A-GROUP LARGE
"KRN",9.2,365,3,0)
^9.23A^1^1
"KRN",9.2,365,3,1,0)
XMJMT
"KRN",9.2,367,-1)
0^229
"KRN",9.2,367,0)
XM-U-M-SCRAMBLE^SCRAMBLING A MESSAGE BEFORE SENDING^2890609^
"KRN",9.2,367,1,0)
^^16^16^2990427^
"KRN",9.2,367,1,1,0)
 
"KRN",9.2,367,1,2,0)
You can use the Scramble action code (i.e., 'S') to have MailMan scramble
"KRN",9.2,367,1,3,0)
(encode) your message so only those recipients who know the [PASSWORD] can
"KRN",9.2,367,1,4,0)
unscramble (decode) your message. You may decide to send a message as
"KRN",9.2,367,1,5,0)
scrambled for security or privacy reasons. The sender can provide a
"KRN",9.2,367,1,6,0)
'[SCRAMBLE HINT]' to facilitate guessing the password.
"KRN",9.2,367,1,7,0)
 
"KRN",9.2,367,1,8,0)
You scramble a message by entering an 'S' after the 'Select Message
"KRN",9.2,367,1,9,0)
option: Transmit now//' prompt.
"KRN",9.2,367,1,10,0)
 
"KRN",9.2,367,1,11,0)
If this option is chosen, prompts appear for entering the scramble
"KRN",9.2,367,1,12,0)
password and scramble hint. The password can be from 3 to 20 characters in
"KRN",9.2,367,1,13,0)
length, with upper- and lowercase characters treated the same. The hint
"KRN",9.2,367,1,14,0)
will be shown to the recipient before s/he is asked to enter the password.
"KRN",9.2,367,1,15,0)
As the password cannot be recovered after being entered, the hint can be a
"KRN",9.2,367,1,16,0)
helpful reminder to the reader of the message.
"KRN",9.2,367,2,0)
^9.22A^2^2
"KRN",9.2,367,2,1,0)
SCRAMBLE HINT^XM-U-M-SCRAMBLE HINT
"KRN",9.2,367,2,2,0)
PASSWORD^XM-U-M-SCRAMBLE PASSWORD
"KRN",9.2,368,-1)
0^187
"KRN",9.2,368,0)
XM-U-M-CONFIRM RECEIPT^REQUESTING CONFIRMATION BEFORE SENDING A MESSAGE^2990114.1355^^
"KRN",9.2,368,1,0)
^^17^17^2990114^^^^
"KRN",9.2,368,1,1,0)
 
"KRN",9.2,368,1,2,0)
You can use the Confirm Receipt action code (i.e., 'R') to have MailMan
"KRN",9.2,368,1,3,0)
notify you (confirm) when each recipient has opened your message.
"KRN",9.2,368,1,4,0)
Unfortunately, however, we can't guarantee that every recipient will
"KRN",9.2,368,1,5,0)
actually read your message! The confirmation is in the form of a new
"KRN",9.2,368,1,6,0)
message sent to you. This is a toggle action code. If you enter 'R' again,
"KRN",9.2,368,1,7,0)
you will not receive a confirm receipt.
"KRN",9.2,368,1,8,0)
 
"KRN",9.2,368,1,9,0)
To request a confirmation receipt enter an 'R' after the 'Select Message
"KRN",9.2,368,1,10,0)
option:  Transmit now//' prompt.
"KRN",9.2,368,1,11,0)
 
"KRN",9.2,368,1,12,0)
You can request a Confirm Receipt from recipients at remote locations
"KRN",9.2,368,1,13,0)
as well as from local recipients.
"KRN",9.2,368,1,14,0)
 
"KRN",9.2,368,1,15,0)
As an alternative, when reading a message, you can find out if and when
"KRN",9.2,368,1,16,0)
any local user has read it.  At the 'Enter message option' prompt, you can
"KRN",9.2,368,1,17,0)
query ('QD') [ALL] users or query ('Q xxx') [SPECIFIC] ones. 
"KRN",9.2,368,2,0)
^9.22^3^2
"KRN",9.2,368,2,2,0)
ALL^XM-U-M-QUERY DETAILED
"KRN",9.2,368,2,3,0)
SPECIFIC^XM-U-M-QUERY SPECIFIC
"KRN",9.2,369,-1)
0^121
"KRN",9.2,369,0)
XM-U-B-BASKET SELECT^RESPONDING TO THE 'MAIL BASKET' PROMPT^2890609^
"KRN",9.2,369,1,0)
^^27^27^2990108^
"KRN",9.2,369,1,1,0)
 
"KRN",9.2,369,1,2,0)
Each user has at least an 'IN' basket, into which incoming mail is stored,
"KRN",9.2,369,1,3,0)
and a 'WASTE' basket, which holds old mail temporarily before permanent
"KRN",9.2,369,1,4,0)
deletion. You may add new baskets by [SAVING] messages or create [FILTER]
"KRN",9.2,369,1,5,0)
baskets as you wish to sort out your mail for future use.
"KRN",9.2,369,1,6,0)
 
"KRN",9.2,369,1,7,0)
For example, a 'PENDING' basket might be used to store messages that
"KRN",9.2,369,1,8,0)
require some future action. By [PRINTING] out your 'PENDING' basket, you
"KRN",9.2,369,1,9,0)
could have a quick reference for pending actions. Deleting or saving
"KRN",9.2,369,1,10,0)
messages in a 'DONE' basket, would clear out the 'PENDING' basket.
"KRN",9.2,369,1,11,0)
 
"KRN",9.2,369,1,12,0)
When you select either the Read/Manage Messages or New Messages and
"KRN",9.2,369,1,13,0)
Responses option and choose to read your mail by basket, if you have mail
"KRN",9.2,369,1,14,0)
in more than one basket, MailMan will ask you to indicate which basket
"KRN",9.2,369,1,15,0)
from which to start reading. You can do any of the following:
"KRN",9.2,369,1,16,0)
 
"KRN",9.2,369,1,17,0)
  <Enter>       Press the Return/Enter key to read messages from your 'IN'
"KRN",9.2,369,1,18,0)
                basket (default basket).
"KRN",9.2,369,1,19,0)
 
"KRN",9.2,369,1,20,0)
  BASKET NAME   Enter the name of a specific basket from which you
"KRN",9.2,369,1,21,0)
                wish to start reading.
"KRN",9.2,369,1,22,0)
 
"KRN",9.2,369,1,23,0)
  '??'          Enter two question marks to see the list of existing
"KRN",9.2,369,1,24,0)
                baskets in your mailbox.
"KRN",9.2,369,1,25,0)
 
"KRN",9.2,369,1,26,0)
  '^'           Enter the up-arrow ('^' uppercase 6 on most keyboards) to
"KRN",9.2,369,1,27,0)
                exit the option.
"KRN",9.2,369,2,0)
^9.22^4^3
"KRN",9.2,369,2,2,0)
FILTER^XM-U-P-FILTER
"KRN",9.2,369,2,3,0)
SAVING^XM-U-M-SAVE
"KRN",9.2,369,2,4,0)
PRINTING^XM-U-B-BASKET CONTENTS LIST
"KRN",9.2,370,-1)
0^132
"KRN",9.2,370,0)
XM-U-B-READER DIFF^BASKET ACTION CODES^2990120.1531^^
"KRN",9.2,370,1,0)
^^21^21^2990120^^^^
"KRN",9.2,370,1,1,0)
 
"KRN",9.2,370,1,2,0)
The following basket action codes are available with all message readers:
"KRN",9.2,370,1,3,0)

"KRN",9.2,370,1,4,0)
 n        Read message n, where n is a sequence number in this basket or
"KRN",9.2,370,1,5,0)
          an internal message ID of any message on the system.
"KRN",9.2,370,1,6,0)
 [C]        Change the name of this basket.
"KRN",9.2,370,1,7,0)
 [N]        List only the new messages in this basket.
"KRN",9.2,370,1,8,0)
 [Q]        Query (search for) messages in this basket.
"KRN",9.2,370,1,9,0)
 [R]        Resequence messages in this basket.
"KRN",9.2,370,1,10,0)

"KRN",9.2,370,1,11,0)
          These act on one or more messages in this basket:
"KRN",9.2,370,1,12,0)
 [D]        Delete messages.
"KRN",9.2,370,1,13,0)
 [F]        Forward messages.
"KRN",9.2,370,1,14,0)
 [FI]       Filter messages.
"KRN",9.2,370,1,15,0)
 [L]        Later messages.
"KRN",9.2,370,1,16,0)
 [P] or [H]   Print messages with or without a header.
"KRN",9.2,370,1,17,0)
 [S]        Save messages to another basket.
"KRN",9.2,370,1,18,0)
 [T]        Terminate messages.
"KRN",9.2,370,1,19,0)
 [X]        Toggle transmit priority in remote message queues. (POSTMASTER only)
"KRN",9.2,370,1,20,0)
 
"KRN",9.2,370,1,21,0)
 [MORE]...
"KRN",9.2,370,2,0)
^9.22^34^14
"KRN",9.2,370,2,9,0)
D^XM-U-M-DELETE^
"KRN",9.2,370,2,14,0)
P^XM-U-M-PRINT^
"KRN",9.2,370,2,15,0)
Q^XM-U-Q-SEARCH^
"KRN",9.2,370,2,19,0)
R^XM-U-B-RESEQUENCE MESSAGES^
"KRN",9.2,370,2,23,0)
H^XM-U-M-PRINT NO HEADER^
"KRN",9.2,370,2,24,0)
T^XM-U-M-TERMINATE^
"KRN",9.2,370,2,25,0)
C^XM-U-B-BASKET NAME CHANGE
"KRN",9.2,370,2,26,0)
F^XM-U-M-FORWARD
"KRN",9.2,370,2,27,0)
FI^XM-U-B-FILTER
"KRN",9.2,370,2,28,0)
L^XM-U-M-LATER
"KRN",9.2,370,2,29,0)
N^XM-U-B-NEW MAIL LIST
"KRN",9.2,370,2,30,0)
S^XM-U-M-SAVE
"KRN",9.2,370,2,32,0)
MORE^XM-U-B-READER DIFF-2
"KRN",9.2,370,2,34,0)
X^XM-U-B-XMIT PRIORITY TOGGLE
"KRN",9.2,371,-1)
0^181
"KRN",9.2,371,0)
XM-U-M-CHOOSE RANGE^SPECIFYING A LIST OR RANGE OF MESSAGES^2911003.0903^
"KRN",9.2,371,1,0)
^^21^21^2981231^
"KRN",9.2,371,1,1,0)
 
"KRN",9.2,371,1,2,0)
MailMan allows you to specify a range or list of messages for deletion,
"KRN",9.2,371,1,3,0)
filtering, forwarding, latering, printing, saving, or termination from a
"KRN",9.2,371,1,4,0)
basket.
"KRN",9.2,371,1,5,0)
 
"KRN",9.2,371,1,6,0)
To specify a range or list, use the following syntax:
"KRN",9.2,371,1,7,0)
 
"KRN",9.2,371,1,8,0)
  * Enter the message numbers separated by commas (e.g., '1,5,9').
"KRN",9.2,371,1,9,0)
 
"KRN",9.2,371,1,10,0)
  * Specify a range of numbers by separating the beginning and
"KRN",9.2,371,1,11,0)
    ending numbers with a dash/hyphen (e.g., '0-10', where '0' is the
"KRN",9.2,371,1,12,0)
    original message).
"KRN",9.2,371,1,13,0)
 
"KRN",9.2,371,1,14,0)
  * Specify at what message you want MailMan to include through the
"KRN",9.2,371,1,15,0)
    remaining messages by entering a specific number followed by a
"KRN",9.2,371,1,16,0)
    dash/hyphen (e.g., 20-, MailMan would include message 20 through
"KRN",9.2,371,1,17,0)
    the remaining messages).
"KRN",9.2,371,1,18,0)
 
"KRN",9.2,371,1,19,0)
  * Specify combinations of the above by putting ranges where 
"KRN",9.2,371,1,20,0)
    numbers would go, etc. (e.g., '0-3,5,8-10,20-', where '0' is the
"KRN",9.2,371,1,21,0)
    original message).
"KRN",9.2,372,-1)
0^205
"KRN",9.2,372,0)
XM-U-M-MESSAGE HEADER^WHAT APPEARS IN THE MESSAGE HEADER^2990120.0946^^
"KRN",9.2,372,1,0)
^^21^21^2990120^^
"KRN",9.2,372,1,1,0)
 
"KRN",9.2,372,1,2,0)
A message header is displayed or printed at the top of every screen or page
"KRN",9.2,372,1,3,0)
when you read or print a message.
"KRN",9.2,372,1,4,0)
 
"KRN",9.2,372,1,5,0)
The message header contains:
"KRN",9.2,372,1,6,0)
 
"KRN",9.2,372,1,7,0)
  * The subject. 
"KRN",9.2,372,1,8,0)
 
"KRN",9.2,372,1,9,0)
  * The MailMan internal message identification number.
"KRN",9.2,372,1,10,0)
 
"KRN",9.2,372,1,11,0)
  * The date the message was sent. 
"KRN",9.2,372,1,12,0)
 
"KRN",9.2,372,1,13,0)
  * How many lines there are in the original message.
"KRN",9.2,372,1,14,0)
 
"KRN",9.2,372,1,15,0)
  * Who sent the message. 
"KRN",9.2,372,1,16,0)
 
"KRN",9.2,372,1,17,0)
  * How many total responses there are and how many you've read.
"KRN",9.2,372,1,18,0)
 
"KRN",9.2,372,1,19,0)
  * Whether the message is *NEW*.
"KRN",9.2,372,1,20,0)

"KRN",9.2,372,1,21,0)
  * Which basket the message is in.
"KRN",9.2,372,2,0)
^9.22A^0^0
"KRN",9.2,373,-1)
0^207
"KRN",9.2,373,0)
XM-U-M-PRINT^PRINTING MESSAGES^2920824.0936^^
"KRN",9.2,373,1,0)
^^17^17^2990427^
"KRN",9.2,373,1,1,0)
 
"KRN",9.2,373,1,2,0)
The Print action code (i.e., 'P') allows you to print individual messages
"KRN",9.2,373,1,3,0)
or a group of messages in a mail basket:
"KRN",9.2,373,1,4,0)
 
"KRN",9.2,373,1,5,0)
  * Printing Individual messages - After reading a message, enter a 'P' at
"KRN",9.2,373,1,6,0)
    the 'Enter message action' prompt.
"KRN",9.2,373,1,7,0)
 
"KRN",9.2,373,1,8,0)
      - MailMan will first ask if you want to print a recipient list. If
"KRN",9.2,373,1,9,0)
        you choose to print recipients, you can print either a summary or
"KRN",9.2,373,1,10,0)
        detailed recipient list.
"KRN",9.2,373,1,11,0)
 
"KRN",9.2,373,1,12,0)
      - MailMan will then ask you what you want to print. The default
"KRN",9.2,373,1,13,0)
        response will always be to print the original message and all
"KRN",9.2,373,1,14,0)
        responses. However, you can choose to print any [COMBINATION] of
"KRN",9.2,373,1,15,0)
        responses (single or range), with or without the original message.
"KRN",9.2,373,1,16,0)
 
"KRN",9.2,373,1,17,0)
[MORE]... 
"KRN",9.2,373,2,0)
^9.22^5^2
"KRN",9.2,373,2,3,0)
COMBINATION^XM-U-M-CHOOSE RESPONSES
"KRN",9.2,373,2,5,0)
MORE^XM-U-M-PRINT-2
"KRN",9.2,374,-1)
0^230
"KRN",9.2,374,0)
XM-U-M-SCRAMBLE HINT^RESPONDING TO 'Enter Scramble Hint'^2890609^
"KRN",9.2,374,1,0)
^^7^7^2981230^
"KRN",9.2,374,1,1,0)
 
"KRN",9.2,374,1,2,0)
A scramble hint is used to suggest to the reader what the scramble
"KRN",9.2,374,1,3,0)
[PASSWORD] is. Since the password is not recoverable after it is entered, 
"KRN",9.2,374,1,4,0)
the hint can be a helpful reminder to the reader of the message.
"KRN",9.2,374,1,5,0)
 
"KRN",9.2,374,1,6,0)
The hint will be shown to the recipient before being asked to enter the
"KRN",9.2,374,1,7,0)
scramble password.
"KRN",9.2,374,2,0)
^9.22A^1^1
"KRN",9.2,374,2,1,0)
PASSWORD^XM-U-M-SCRAMBLE PASSWORD
"KRN",9.2,374,3,0)
^9.23A^^0
"KRN",9.2,375,-1)
0^231
"KRN",9.2,375,0)
XM-U-M-SCRAMBLE PASSWORD^RESPONDING TO 'Enter Scramble Password'^2890609^
"KRN",9.2,375,1,0)
^^6^6^2981230^
"KRN",9.2,375,1,1,0)
 
"KRN",9.2,375,1,2,0)
The scramble password is a private code which must be exactly correct for
"KRN",9.2,375,1,3,0)
a reader to unscramble a message and make it legible. It can be from 3 to
"KRN",9.2,375,1,4,0)
20 characters long. Upper- and lowercase characters are treated the same.
"KRN",9.2,375,1,5,0)
The scramble [HINT] that accompanies the scrambled message can help
"KRN",9.2,375,1,6,0)
decipher the password.
"KRN",9.2,375,2,0)
^9.22A^1^1
"KRN",9.2,375,2,1,0)
HINT^XM-U-M-SCRAMBLE HINT
"KRN",9.2,375,3,0)
^9.23A^^0
"KRN",9.2,376,-1)
0^161
"KRN",9.2,376,0)
XM-U-I-GROUP^MAIL GROUPS^2990120.1143^^
"KRN",9.2,376,1,0)
^^20^20^2990120^^^
"KRN",9.2,376,1,1,0)
 
"KRN",9.2,376,1,2,0)
Mail groups consist of MailMan users ([MEMBERS]) with similar interests in
"KRN",9.2,376,1,3,0)
a particular topic. Mail groups provide a forum for group discussion where
"KRN",9.2,376,1,4,0)
members can share ideas and concepts related to the group. 
"KRN",9.2,376,1,5,0)
 
"KRN",9.2,376,1,6,0)
As a member of a mail group, you, along with other members, receive
"KRN",9.2,376,1,7,0)
messages directed to that mail group. One can address a message to a
"KRN",9.2,376,1,8,0)
group of recipients without having to specify them individually by name.
"KRN",9.2,376,1,9,0)
Thus, whenever mail is repeatedly sent to the same list of recipients,
"KRN",9.2,376,1,10,0)
users can save time by putting them in mail groups.
"KRN",9.2,376,1,11,0)
 
"KRN",9.2,376,1,12,0)
Members can be added or removed at any time. They can be local and remote
"KRN",9.2,376,1,13,0)
users, other mail groups, or distribution lists (nationwide mail groups). 
"KRN",9.2,376,1,14,0)
 
"KRN",9.2,376,1,15,0)
Mail groups can also be restricted to a limited set of Authorized Senders.
"KRN",9.2,376,1,16,0)
Thus, only certain users are allowed to send mail to the mail group. If
"KRN",9.2,376,1,17,0)
unspecified, then it is assumed that anyone can send mail to a group,
"KRN",9.2,376,1,18,0)
if [PUBLIC], or only members can send to it, if [PRIVATE].
"KRN",9.2,376,1,19,0)
 
"KRN",9.2,376,1,20,0)
[MORE]... 
"KRN",9.2,376,2,0)
^9.22^8^4
"KRN",9.2,376,2,3,0)
MEMBERS^XM-U-I-GROUP MEMBER^
"KRN",9.2,376,2,6,0)
MORE^XM-U-I-GROUP-2
"KRN",9.2,376,2,7,0)
PUBLIC^XM-U-P-GROUP ENROLL
"KRN",9.2,376,2,8,0)
PRIVATE^XM-U-P-GROUP PERSONAL
"KRN",9.2,377,-1)
0^188
"KRN",9.2,377,0)
XM-U-M-COPY^COPYING A MESSAGE INTO A NEW MESSAGE^2990120.1309^^
"KRN",9.2,377,1,0)
^^15^15^2990427^
"KRN",9.2,377,1,1,0)
 
"KRN",9.2,377,1,2,0)
You can use the Copy action code (i.e., 'C') to copy a message.
"KRN",9.2,377,1,3,0)
 
"KRN",9.2,377,1,4,0)
When you copy a message, you are given several [OPTIONS] as to what should be
"KRN",9.2,377,1,5,0)
included in the copy and whether to deliver the copy to the same recipients. 
"KRN",9.2,377,1,6,0)
 
"KRN",9.2,377,1,7,0)
You can edit the copied message's subject and any part of the message text or
"KRN",9.2,377,1,8,0)
responses (e.g., delete unwanted portions or add additional text anywhere in
"KRN",9.2,377,1,9,0)
the copy).
"KRN",9.2,377,1,10,0)
 
"KRN",9.2,377,1,11,0)
As with any other message you are [SENDING], MailMan will also ask
"KRN",9.2,377,1,12,0)
you to enter the [RECIPIENTS] to receive this copied message. 
"KRN",9.2,377,1,13,0)
 
"KRN",9.2,377,1,14,0)
To copy the original message and any responses, enter a 'C' at the 'Enter
"KRN",9.2,377,1,15,0)
message action' prompt.
"KRN",9.2,377,2,0)
^9.22^16^3
"KRN",9.2,377,2,13,0)
RECIPIENTS^XM-U-A-ADDRESS
"KRN",9.2,377,2,14,0)
SENDING^XM-U-M-SEND
"KRN",9.2,377,2,16,0)
OPTIONS^XM-U-M-COPY-2
"KRN",9.2,377,3,0)
^9.23A^^0
"KRN",9.2,379,-1)
0^206
"KRN",9.2,379,0)
XM-U-M-NEW^FORCING A MESSAGE TO APPEAR AS NEW^2911003.0845^
"KRN",9.2,379,1,0)
^^20^20^2990427^
"KRN",9.2,379,1,1,0)
 
"KRN",9.2,379,1,2,0)
You can use the New Toggle action code (i.e., 'N') to:
"KRN",9.2,379,1,3,0)
 
"KRN",9.2,379,1,4,0)
  * Make a message 'new' - MailMan adds the new flag (i.e., '*' asterisk)
"KRN",9.2,379,1,5,0)
    next to the message, as if it hasn't been opened/read yet.
"KRN",9.2,379,1,6,0)
 
"KRN",9.2,379,1,7,0)
  * Make a 'new' message not appear as 'new' (i.e., Un New) - MailMan
"KRN",9.2,379,1,8,0)
    removes the new flag (i.e., '*' asterisk) next to the message, as if
"KRN",9.2,379,1,9,0)
    it was already opened/read.
"KRN",9.2,379,1,10,0)
 
"KRN",9.2,379,1,11,0)
You can toggle between these two actions with this one action code.
"KRN",9.2,379,1,12,0)
 
"KRN",9.2,379,1,13,0)
To toggle a message from New to 'Un New' or vice versa, enter an 'N' at
"KRN",9.2,379,1,14,0)
the 'Enter message action' prompt.
"KRN",9.2,379,1,15,0)
 
"KRN",9.2,379,1,16,0)
Enter an 'L' ([LATER]) at the 'Enter message action' prompt to make the
"KRN",9.2,379,1,17,0)
message appear new at a later date and time (even later today). The
"KRN",9.2,379,1,18,0)
message will be made new at the requested time. These actions can be used
"KRN",9.2,379,1,19,0)
when a message cannot be handled immediately, or as a reminder of
"KRN",9.2,379,1,20,0)
important activities, making MailMan a personal reminder.
"KRN",9.2,379,2,0)
^9.22A^1^1
"KRN",9.2,379,2,1,0)
LATER^XM-U-M-LATER^
"KRN",9.2,381,-1)
0^306
"KRN",9.2,381,0)
XM-U-Q-CLASSIC LOOKUP ?^LOOKING FOR MESSAGES WHOSE SUBJECT CONTAINS A SPECIFIC STRING^2990421.1237^^
"KRN",9.2,381,1,0)
^^13^13^2990421^
"KRN",9.2,381,1,1,0)
 
"KRN",9.2,381,1,2,0)
While in a basket, you can search for messages in the basket whose subject
"KRN",9.2,381,1,3,0)
contains a specific string.
"KRN",9.2,381,1,4,0)
 
"KRN",9.2,381,1,5,0)
At the 'Basket Message' prompt, enter the string preceded by a '?'. You
"KRN",9.2,381,1,6,0)
will then be shown a list of those messages in the basket which CONTAIN
"KRN",9.2,381,1,7,0)
that string in their subject, and can choose which you would like to read.
"KRN",9.2,381,1,8,0)
 
"KRN",9.2,381,1,9,0)
For example, if you want to search for messages in the basket whose
"KRN",9.2,381,1,10,0)
subject contains the word 'SCHEDULE', you would enter '?SCHEDULE'.
"KRN",9.2,381,1,11,0)
This search is with uppercase and lowercase treated identically.
"KRN",9.2,381,1,12,0)
Thus, for example, 'SCHEDULE' and 'Schedule' would both be found
"KRN",9.2,381,1,13,0)
with the search.
"KRN",9.2,381,2,0)
^9.22^^0
"KRN",9.2,382,-1)
0^157
"KRN",9.2,382,0)
XM-U-H-QUESTIONS^FREQUENTLY ASKED QUESTIONS ABOUT MAILMAN^2940201.1601^^
"KRN",9.2,382,1,0)
^^19^19^2990107^
"KRN",9.2,382,1,1,0)
 
"KRN",9.2,382,1,2,0)
  1. [RECALLING] OR EDITING A MESSAGE AFTER TRANSMISSION
"KRN",9.2,382,1,3,0)
     Is there a way to recall or edit a message once it's been sent?
"KRN",9.2,382,1,4,0)
  2. [REMOVING] A RECIPIENT FROM THE LIST
"KRN",9.2,382,1,5,0)
     How can an accidentally chosen recipient be removed from the list?
"KRN",9.2,382,1,6,0)
  3. [LOOKING UP] A MESSAGE TO BE READ
"KRN",9.2,382,1,7,0)
     Is there a way of finding a message if you cannot recall the number?
"KRN",9.2,382,1,8,0)
  4. [DISAPPEARED] MESSAGES WHICH HAVE NOT BEEN DELETED
"KRN",9.2,382,1,9,0)
     Sometimes the read option will show only the message header without
"KRN",9.2,382,1,10,0)
     the text. What happened to the original message?
"KRN",9.2,382,1,11,0)
  5. [REPLIES] TO MESSAGES FROM UNKNOWN RECIPIENTS
"KRN",9.2,382,1,12,0)
     Why replies appear in a mailbox to a message which I didn't
"KRN",9.2,382,1,13,0)
     originate?
"KRN",9.2,382,1,14,0)
  6. [DELETED] MESSAGES
"KRN",9.2,382,1,15,0)
     Once a message is deleted, is it actually gone from the system?
"KRN",9.2,382,1,16,0)
  7. [INTERRUPTED] MESSAGES
"KRN",9.2,382,1,17,0)
     Can a message be saved temporarily after an interruption?
"KRN",9.2,382,1,18,0)
  8. [FILTERING] MAIL
"KRN",9.2,382,1,19,0)
     Can certain messages be automatically directed to specific baskets?
"KRN",9.2,382,2,0)
^9.22^8^8
"KRN",9.2,382,2,1,0)
RECALLING^XM-U-H-Q RECALL^
"KRN",9.2,382,2,2,0)
REMOVING^XM-U-H-Q REMOVE^
"KRN",9.2,382,2,3,0)
LOOKING UP^XM-U-H-Q LOOKUP^
"KRN",9.2,382,2,4,0)
DISAPPEARED^XM-U-H-Q DISAPPEARED^
"KRN",9.2,382,2,5,0)
REPLIES^XM-U-H-Q REPLIES^
"KRN",9.2,382,2,6,0)
DELETED^XM-U-H-Q DELETE^
"KRN",9.2,382,2,7,0)
INTERRUPTED^XM-U-H-Q INTERRUPT^
"KRN",9.2,382,2,8,0)
FILTERING^XM-U-P-FILTER
"KRN",9.2,383,-1)
0^154
"KRN",9.2,383,0)
XM-U-H-Q RECALL^RECALLING OR EDITING A MESSAGE AFTER TRANSMISSION^2911001.0629^^
"KRN",9.2,383,1,0)
^^13^13^2990107^
"KRN",9.2,383,1,1,0)
 
"KRN",9.2,383,1,2,0)
Is there a way to recall or edit a message once it's been sent?
"KRN",9.2,383,1,3,0)
 
"KRN",9.2,383,1,4,0)
You cannot completely recall a message once it's been sent. However, you
"KRN",9.2,383,1,5,0)
can edit the message, provided that:
"KRN",9.2,383,1,6,0)
 
"KRN",9.2,383,1,7,0)
  * You created the message and did not send it to anyone except yourself.
"KRN",9.2,383,1,8,0)
 
"KRN",9.2,383,1,9,0)
  * The message you wish to edit is the original message and not a reply.
"KRN",9.2,383,1,10,0)
 
"KRN",9.2,383,1,11,0)
Using the [READ]/Manage Messages option, after displaying the text of the
"KRN",9.2,383,1,12,0)
message, you will be prompted with the 'Enter message option'. Enter an
"KRN",9.2,383,1,13,0)
'E' ([EDIT]) and choose from any number of edit options.
"KRN",9.2,383,2,0)
^9.22A^2^2
"KRN",9.2,383,2,1,0)
EDIT^XM-U-MO-EDIT
"KRN",9.2,383,2,2,0)
READ^XM-U-R-READ
"KRN",9.2,384,-1)
0^155
"KRN",9.2,384,0)
XM-U-H-Q REMOVE^REMOVING A RECIPIENT FROM THE LIST^2890609^
"KRN",9.2,384,1,0)
^^16^16^2981228^
"KRN",9.2,384,1,1,0)
 
"KRN",9.2,384,1,2,0)
If a user is accidently chosen as a recipient for a message, how can they
"KRN",9.2,384,1,3,0)
be removed from the list?
"KRN",9.2,384,1,4,0)
 
"KRN",9.2,384,1,5,0)
A message is not actually sent to anyone until you respond to the 'Select
"KRN",9.2,384,1,6,0)
Message option:  Transmit now//' prompt with 'T' for transmit. Enter an
"KRN",9.2,384,1,7,0)
'ER' for [EDIT RECIPIENTS] at this prompt if you wish to delete a
"KRN",9.2,384,1,8,0)
recipient.
"KRN",9.2,384,1,9,0)
 
"KRN",9.2,384,1,10,0)
To take someone off the recipient list, enter their name preceded with a
"KRN",9.2,384,1,11,0)
minus or hyphen ('-'). This will delete them from the list.
"KRN",9.2,384,1,12,0)
 
"KRN",9.2,384,1,13,0)
NOTE: You cannot remove a recipient from the list after the message has
"KRN",9.2,384,1,14,0)
      been sent. Think of the [TRANSMIT] option as dropping a message in a
"KRN",9.2,384,1,15,0)
      post office mail box. You cannot recall a message once it has been
"KRN",9.2,384,1,16,0)
      sent.
"KRN",9.2,384,2,0)
^9.22A^2^2
"KRN",9.2,384,2,1,0)
EDIT RECIPIENTS^XM-U-M-EDIT RECIPIENTS
"KRN",9.2,384,2,2,0)
TRANSMIT^XM-U-M-TRANSMIT NOW
"KRN",9.2,385,-1)
0^153
"KRN",9.2,385,0)
XM-U-H-Q LOOKUP^LOOKING UP A MESSAGE TO BE READ^2990319.1447^^
"KRN",9.2,385,1,0)
^^20^20^2990319^^^^
"KRN",9.2,385,1,1,0)
 
"KRN",9.2,385,1,2,0)
Is there a way of finding a message if you cannot recall the number?
"KRN",9.2,385,1,3,0)
 
"KRN",9.2,385,1,4,0)
Yes, there are several ways to look up a message. 
"KRN",9.2,385,1,5,0)
 
"KRN",9.2,385,1,6,0)
When you are using one of the [FULL SCREEN] message readers, MailMan
"KRN",9.2,385,1,7,0)
displays a list of messages in a basket. You can then choose from this
"KRN",9.2,385,1,8,0)
list by entering a message number after the 'Enter message number or
"KRN",9.2,385,1,9,0)
command:' prompt.
"KRN",9.2,385,1,10,0)
 
"KRN",9.2,385,1,11,0)
To see a list of messages using the [CLASSIC] message reader, enter ONE or
"KRN",9.2,385,1,12,0)
TWO question marks after the 'Basket Message' prompt. You can then choose
"KRN",9.2,385,1,13,0)
from this list by message number.
"KRN",9.2,385,1,14,0)

"KRN",9.2,385,1,15,0)
In either of the message readers, you can look up a message based on what
"KRN",9.2,385,1,16,0)
the subject [BEGINS WITH] or [CONTAINS].  You can also use the Query ('Q')
"KRN",9.2,385,1,17,0)
action code to search for messages in a basket based on multiple [CRITERIA].
"KRN",9.2,385,1,18,0)

"KRN",9.2,385,1,19,0)
On the main MailMan Menu, you can use the Query/Search for Messages option
"KRN",9.2,385,1,20,0)
to search for messages [ANYWHERE] in your mailbox or on the system.
"KRN",9.2,385,2,0)
^9.22^11^6
"KRN",9.2,385,2,3,0)
CLASSIC^XM-U-B-READER CLASSIC
"KRN",9.2,385,2,6,0)
FULL SCREEN^XM-U-B-READER FULL SCREEN
"KRN",9.2,385,2,7,0)
ANYWHERE^XM-U-Q-SEARCH
"KRN",9.2,385,2,9,0)
BEGINS WITH^XM-U-Q-CLASSIC LOOKUP ??
"KRN",9.2,385,2,10,0)
CONTAINS^XM-U-Q-CLASSIC LOOKUP ?
"KRN",9.2,385,2,11,0)
CRITERIA^XM-U-Q-SEARCH CRITERIA
"KRN",9.2,386,-1)
0^156
"KRN",9.2,386,0)
XM-U-H-Q REPLIES^REPLIES TO A MESSAGE FROM AN UNKNOWN RECIPIENT^2890609^
"KRN",9.2,386,1,0)
^^12^12^2981228^
"KRN",9.2,386,1,1,0)
 
"KRN",9.2,386,1,2,0)
Why do replies appear in the mailbox to a message I didn't originate?
"KRN",9.2,386,1,3,0)
 
"KRN",9.2,386,1,4,0)
This occurs when you are the recipient of a message that has been sent to
"KRN",9.2,386,1,5,0)
others. If one of the other recipients [REPLIES] to the message, all of
"KRN",9.2,386,1,6,0)
the other recipients receive the reply. This feature is similar to
"KRN",9.2,386,1,7,0)
teleconferencing.
"KRN",9.2,386,1,8,0)
 
"KRN",9.2,386,1,9,0)
If you are sending a message to a group of recipients and you don't want
"KRN",9.2,386,1,10,0)
any of the recipients to reply, make the message [INFORMATION ONLY]. If
"KRN",9.2,386,1,11,0)
you don't want specific recipients to reply, [PREFIX] the recipient names
"KRN",9.2,386,1,12,0)
with 'INFO:'.
"KRN",9.2,386,2,0)
^9.22A^3^3
"KRN",9.2,386,2,1,0)
REPLIES^XM-U-M-REPLY
"KRN",9.2,386,2,2,0)
PREFIX^XM-U-A-INFO ONLY
"KRN",9.2,386,2,3,0)
INFORMATION ONLY^XM-U-M-INFO ONLY
"KRN",9.2,387,-1)
0^150
"KRN",9.2,387,0)
XM-U-H-Q DELETE^DELETED MESSAGES^2890609^
"KRN",9.2,387,1,0)
^^11^11^2990108^
"KRN",9.2,387,1,1,0)
 
"KRN",9.2,387,1,2,0)
Once a message is deleted, is it actually gone from the system?
"KRN",9.2,387,1,3,0)
 
"KRN",9.2,387,1,4,0)
No. When you [DELETE] messages, they are put into your 'WASTE' basket.
"KRN",9.2,387,1,5,0)
To access these deleted messages, read messages in your 'WASTE' basket.
"KRN",9.2,387,1,6,0)
You can then [SAVE] them to a different basket.
"KRN",9.2,387,1,7,0)
 
"KRN",9.2,387,1,8,0)
The message will be deleted from your 'WASTE' basket automatically when
"KRN",9.2,387,1,9,0)
the MailMan purge utility is run. However, the message remains in the
"KRN",9.2,387,1,10,0)
system until all recipients of the message have deleted it from their
"KRN",9.2,387,1,11,0)
mailbox.
"KRN",9.2,387,2,0)
^9.22A^2^2
"KRN",9.2,387,2,1,0)
DELETE^XM-U-M-DELETE
"KRN",9.2,387,2,2,0)
SAVE^XM-U-M-SAVE
"KRN",9.2,389,-1)
0^252
"KRN",9.2,389,0)
XM-U-P-BANNER^THE MAILMAN BANNER^2890609^
"KRN",9.2,389,1,0)
^^32^32^2981229^
"KRN",9.2,389,1,1,0)
 
"KRN",9.2,389,1,2,0)
The MailMan Banner is used to display any information that you want other
"KRN",9.2,389,1,3,0)
MailMan users to see. Banners can be used to list business information,
"KRN",9.2,389,1,4,0)
personal information, favorite quotes, etc., whatever you feel is
"KRN",9.2,389,1,5,0)
appropriate in a business environment. You are not required to have a
"KRN",9.2,389,1,6,0)
MailMan Banner; it is up to you to decide.
"KRN",9.2,389,1,7,0)
 
"KRN",9.2,389,1,8,0)
Banners are displayed in the following three instances:
"KRN",9.2,389,1,9,0)
 
"KRN",9.2,389,1,10,0)
  * Your MailMan banner is displayed to anyone addressing a message to
"KRN",9.2,389,1,11,0)
    you. This is useful, for example, if you will be on vacation and
"KRN",9.2,389,1,12,0)
    wish to let others know that mail will not be regularly checked.
"KRN",9.2,389,1,13,0)
 
"KRN",9.2,389,1,14,0)
  * Your banner is also displayed whenever you enter the MailMan menu,
"KRN",9.2,389,1,15,0)
    so that you will not forget to change or delete it when it is no
"KRN",9.2,389,1,16,0)
    longer appropriate.
"KRN",9.2,389,1,17,0)
 
"KRN",9.2,389,1,18,0)
  * Your MailMan Banner is also displayed to you or others when using the
"KRN",9.2,389,1,19,0)
    User Information option on the Help (User/Group Info., etc.) menu to
"KRN",9.2,389,1,20,0)
    obtain information about you.
"KRN",9.2,389,1,21,0)
 
"KRN",9.2,389,1,22,0)
Banners can range from 2 to 200 characters in length and can contain
"KRN",9.2,389,1,23,0)
any combination of numbers, alphabetic characters, symbols (e.g., #,
"KRN",9.2,389,1,24,0)
$, %, &, *), and punctuation marks.
"KRN",9.2,389,1,25,0)
 
"KRN",9.2,389,1,26,0)
You can enter or change your banner using either of two methods:
"KRN",9.2,389,1,27,0)
 
"KRN",9.2,389,1,28,0)
  * Use the User Options Edit option with the 'BANNER:' prompt.
"KRN",9.2,389,1,29,0)
 
"KRN",9.2,389,1,30,0)
  * Use the Banner Edit option on the Personal Preferences menu.
"KRN",9.2,389,1,31,0)
 
"KRN",9.2,389,1,32,0)
NOTE: The banner is not displayed when a group of users is selected.
"KRN",9.2,390,-1)
0^266
"KRN",9.2,390,0)
XM-U-P-INTRODUCTION^INTRODUCING YOURSELF IN MAILMAN^2890609^
"KRN",9.2,390,1,0)
^^19^19^2990513^
"KRN",9.2,390,1,1,0)
 
"KRN",9.2,390,1,2,0)
In order that other users of the system can get to know new users,
"KRN",9.2,390,1,3,0)
the latter may enter several lines of introductory text, as well as an
"KRN",9.2,390,1,4,0)
address, phone number, and other [CONTACT INFORMATION]. The Introduction
"KRN",9.2,390,1,5,0)
field provides you with the opportunity to 'introduce' yourself to other
"KRN",9.2,390,1,6,0)
MailMan users. Since it is a word processing field, MailMan allows you to
"KRN",9.2,390,1,7,0)
enter as much information as you wish. You may or may not be required to
"KRN",9.2,390,1,8,0)
enter an Introduction depending on your site's policy.
"KRN",9.2,390,1,9,0)
 
"KRN",9.2,390,1,10,0)
Your Introduction is only displayed when users do a lookup on you via the
"KRN",9.2,390,1,11,0)
User Information option on the Help (User/Group Info., etc.) menu.
"KRN",9.2,390,1,12,0)
 
"KRN",9.2,390,1,13,0)
Since the Introduction field is a word processing field there is no upper
"KRN",9.2,390,1,14,0)
limit on the number of characters you can enter. You can also include any
"KRN",9.2,390,1,15,0)
combination of numbers, alphabetic characters, symbols (e.g., #, $, %, &,
"KRN",9.2,390,1,16,0)
*), and punctuation marks.
"KRN",9.2,390,1,17,0)
 
"KRN",9.2,390,1,18,0)
The 'INTRODUCTION:' field can be set through the User Options Edit option
"KRN",9.2,390,1,19,0)
on the Personal Preferences menu.
"KRN",9.2,390,2,0)
^9.22A^1^1
"KRN",9.2,390,2,1,0)
CONTACT INFORMATION^XM-U-P-OFFICE INFO
"KRN",9.2,391,-1)
0^166
"KRN",9.2,391,0)
XM-U-I-SURROGATE^MAILMAN SURROGATES^2931206.2053^
"KRN",9.2,391,1,0)
^^13^13^2990108^
"KRN",9.2,391,1,1,0)
 
"KRN",9.2,391,1,2,0)
A surrogate is someone who substitutes for someone else. MailMan gives all
"KRN",9.2,391,1,3,0)
users the opportunity to [DESIGNATE] someone to act as their surrogate. It
"KRN",9.2,391,1,4,0)
also allows all users to [BECOME] a surrogate.
"KRN",9.2,391,1,5,0)
 
"KRN",9.2,391,1,6,0)
There are several occasions when you may wish to designate someone as your
"KRN",9.2,391,1,7,0)
surrogate. For example, if you are going on vacation, you may ask someone
"KRN",9.2,391,1,8,0)
to be a surrogate for you while you are out of the office. Specifically, a
"KRN",9.2,391,1,9,0)
manager or project team member may ask their administrative assistant or
"KRN",9.2,391,1,10,0)
co-worker to read their mail while they are out of the office so that
"KRN",9.2,391,1,11,0)
critical or important messages can be read and responded to without delay.
"KRN",9.2,391,1,12,0)
 
"KRN",9.2,391,1,13,0)
[MORE]... 
"KRN",9.2,391,2,0)
^9.22A^10^3
"KRN",9.2,391,2,6,0)
BECOME^XM-U-I-SURROGATE BECOME
"KRN",9.2,391,2,9,0)
MORE^XM-U-I-SURROGATE-2
"KRN",9.2,391,2,10,0)
DESIGNATE^XM-U-P-SURROGATE EDIT
"KRN",9.2,392,-1)
0^251
"KRN",9.2,392,0)
XM-U-P-ASK BASKET^THE 'ASK BASKET' PROMPT^2890609^
"KRN",9.2,392,1,0)
^^13^13^2981229^
"KRN",9.2,392,1,1,0)
 
"KRN",9.2,392,1,2,0)
MailMan allows you to decide up front whether you want to be prompted each
"KRN",9.2,392,1,3,0)
time to choose a mail basket whenever you send yourself e-mail. You can
"KRN",9.2,392,1,4,0)
either choose to be prompted at each occurrence or automatically have the
"KRN",9.2,392,1,5,0)
mail default to the 'IN' basket.
"KRN",9.2,392,1,6,0)
 
"KRN",9.2,392,1,7,0)
To set your mail basket prompt, use the User Options Edit option on the
"KRN",9.2,392,1,8,0)
Personal Preferences menu to answer the 'ASK BASKET?:' prompt.
"KRN",9.2,392,1,9,0)
 
"KRN",9.2,392,1,10,0)
  * If 'YES' is entered, you will be asked 'What basket?' when sending a 
"KRN",9.2,392,1,11,0)
    message to yourself.
"KRN",9.2,392,1,12,0)
 
"KRN",9.2,392,1,13,0)
  * If 'NO' is entered, the message will go to your 'IN' basket.
"KRN",9.2,393,-1)
0^186
"KRN",9.2,393,0)
XM-U-M-CONFIDENTIAL^MAKING A MESSAGE CONFIDENTIAL^2890609^
"KRN",9.2,393,1,0)
^^9^9^2990111^
"KRN",9.2,393,1,1,0)
 
"KRN",9.2,393,1,2,0)
You can use the Confidential action code (i.e., 'C') to only allow the
"KRN",9.2,393,1,3,0)
designated recipient(s) and not their [SURROGATE](s) to read the message
"KRN",9.2,393,1,4,0)
you are sending, unless a surrogate trying to read the message is the
"KRN",9.2,393,1,5,0)
same surrogate that sent it. This is a toggle action code. If you enter
"KRN",9.2,393,1,6,0)
'C' again, the message will no longer be confidential.
"KRN",9.2,393,1,7,0)
 
"KRN",9.2,393,1,8,0)
To send a confidential message, enter a 'C' at the 'Select Message option:
"KRN",9.2,393,1,9,0)
Transmit now//' prompt.
"KRN",9.2,393,2,0)
^9.22A^2^1
"KRN",9.2,393,2,2,0)
SURROGATE^XM-U-I-SURROGATE
"KRN",9.2,399,-1)
0^167
"KRN",9.2,399,0)
XM-U-I-SURROGATE BECOME^BECOMING A SURROGATE^2990120.0815^^
"KRN",9.2,399,1,0)
^^18^18^2990120^^
"KRN",9.2,399,1,1,0)
 
"KRN",9.2,399,1,2,0)
All users of MailMan are given the option to act as a Surrogate for
"KRN",9.2,399,1,3,0)
[SHARED,MAIL]. If you have been [DESIGNATED] as a surrogate by other MailMan
"KRN",9.2,399,1,4,0)
users, you may act as a surrogate for those users, too.
"KRN",9.2,399,1,5,0)

"KRN",9.2,399,1,6,0)
To become a surrogate, choose the Become a Surrogate (SHARED,MAIL or Other)
"KRN",9.2,399,1,7,0)
option on the MailMan menu. If you are not anyone's surrogate, you will become
"KRN",9.2,399,1,8,0)
SHARED,MAIL.  If you are someone's surrogate, you will be asked whom you wish
"KRN",9.2,399,1,9,0)
to become.  If you enter a '?', MailMan will show you the users for whom you
"KRN",9.2,399,1,10,0)
may act as a surrogate, as well as your access privileges ([READ] or [WRITE])
"KRN",9.2,399,1,11,0)
and whether the user has any new mail. 
"KRN",9.2,399,1,12,0)
 
"KRN",9.2,399,1,13,0)
When acting as a surrogate, you will be using your own MailMan message center
"KRN",9.2,399,1,14,0)
[PREFERENCES] when reading mail and not the other user's preferences. For
"KRN",9.2,399,1,15,0)
example, if you have set your message reader to use the Detailed Full Screen
"KRN",9.2,399,1,16,0)
message reader and the user who designated you as the surrogate uses the
"KRN",9.2,399,1,17,0)
Classic message reader, you will still view that user's messages in the
"KRN",9.2,399,1,18,0)
Detailed full screen and not in the Classic message reader. 
"KRN",9.2,399,2,0)
^9.22^10^5
"KRN",9.2,399,2,1,0)
DESIGNATED^XM-U-P-SURROGATE EDIT
"KRN",9.2,399,2,4,0)
SHARED,MAIL^XM-U-I-SHARED MAIL
"KRN",9.2,399,2,6,0)
READ^XM-U-P-SURROGATE READ PRIV
"KRN",9.2,399,2,9,0)
WRITE^XM-U-P-SURROGATE WRITE PRIV
"KRN",9.2,399,2,10,0)
PREFERENCES^XM-U-P-OPTIONS
"KRN",9.2,400,-1)
0^281
"KRN",9.2,400,0)
XM-U-P-SURROGATE EDIT^SURROGATES - DESIGNATING SURROGATES^2990114.1402^^
"KRN",9.2,400,1,0)
^^21^21^2990201^
"KRN",9.2,400,1,1,0)
 
"KRN",9.2,400,1,2,0)
MailMan provides you with the Surrogate Edit option for designating
"KRN",9.2,400,1,3,0)
surrogates to read and send your own e-mail. This option is available on
"KRN",9.2,400,1,4,0)
the Personal Preferences menu.
"KRN",9.2,400,1,5,0)
 
"KRN",9.2,400,1,6,0)
You can use the Surrogate Edit option when you know you will not be able to
"KRN",9.2,400,1,7,0)
read your mail for a period of time but still want your mail monitored and
"KRN",9.2,400,1,8,0)
taken care of in a timely fashion. The people you designate as surrogates can
"KRN",9.2,400,1,9,0)
be given [READ] or read and [WRITE] access to your mail. These people have the
"KRN",9.2,400,1,10,0)
ability to [ASSUME] your identity for the purposes of reading and/or sending
"KRN",9.2,400,1,11,0)
your mail. 
"KRN",9.2,400,1,12,0)
 
"KRN",9.2,400,1,13,0)
If a message is sent [CONFIDENTIAL], surrogates cannot view it. If a
"KRN",9.2,400,1,14,0)
message has been [SCRAMBLED], surrogates that don't know the password
"KRN",9.2,400,1,15,0)
cannot read it. Thus, you would be wise to inform people from whom you
"KRN",9.2,400,1,16,0)
receive mail of a private nature (not to be read by your surrogate) to
"KRN",9.2,400,1,17,0)
send it confidential or to scramble it.
"KRN",9.2,400,1,18,0)
 
"KRN",9.2,400,1,19,0)
MailMan will record the fact that a surrogate has sent messages or
"KRN",9.2,400,1,20,0)
[REPLIED] while assuming your identity in the message. You can see this
"KRN",9.2,400,1,21,0)
when you read or [QUERY] ('QD') the message.
"KRN",9.2,400,2,0)
^9.22A^7^7
"KRN",9.2,400,2,1,0)
QUERY^XM-U-M-QUERY DETAILED
"KRN",9.2,400,2,2,0)
CONFIDENTIAL^XM-U-M-CONFIDENTIAL
"KRN",9.2,400,2,3,0)
SCRAMBLED^XM-U-M-SCRAMBLE
"KRN",9.2,400,2,4,0)
ASSUME^XM-U-I-SURROGATE BECOME
"KRN",9.2,400,2,5,0)
REPLIED^XM-U-M-REPLY
"KRN",9.2,400,2,6,0)
READ^XM-U-P-SURROGATE READ PRIV
"KRN",9.2,400,2,7,0)
WRITE^XM-U-P-SURROGATE WRITE PRIV
"KRN",9.2,401,-1)
0^152
"KRN",9.2,401,0)
XM-U-H-Q INTERRUPT^INTERRUPTED MESSAGES^2990120.1135^^
"KRN",9.2,401,1,0)
^^15^15^2990120^^
"KRN",9.2,401,1,1,0)
 
"KRN",9.2,401,1,2,0)
Can a message be saved temporarily after an interruption?
"KRN",9.2,401,1,3,0)
 
"KRN",9.2,401,1,4,0)
Yes. If you are in the middle of entering a message, and you receive a
"KRN",9.2,401,1,5,0)
phone call or some other interruption, it is often useful to transmit the
"KRN",9.2,401,1,6,0)
incomplete message to yourself. You can later return to that same message
"KRN",9.2,401,1,7,0)
through the [READ]/Manage Messages option, and complete the message using
"KRN",9.2,401,1,8,0)
the [EDIT] action. You can then [FORWARD] the message to the original
"KRN",9.2,401,1,9,0)
intended recipients.
"KRN",9.2,401,1,10,0)
 
"KRN",9.2,401,1,11,0)
Also, if you are disconnected in the middle of entering a message or
"KRN",9.2,401,1,12,0)
reply, the system will attempt to save your text in a message buffer. The
"KRN",9.2,401,1,13,0)
next time you signon, Mailman will notify you that you have an unsent
"KRN",9.2,401,1,14,0)
message or response in your buffer. You may return to complete the message
"KRN",9.2,401,1,15,0)
or response.
"KRN",9.2,401,2,0)
^9.22A^3^3
"KRN",9.2,401,2,1,0)
EDIT^XM-U-MO-EDIT
"KRN",9.2,401,2,2,0)
FORWARD^XM-U-M-FORWARD
"KRN",9.2,401,2,3,0)
READ^XM-U-R-READ
"KRN",9.2,417,-1)
0^247
"KRN",9.2,417,0)
XM-U-NEW FEATURES^NEW FEATURES AND FUNCTIONALITY IN MAILMAN V. 7.1 WITH PATCH 50^2990120.1602^^
"KRN",9.2,417,1,0)
^^18^18^2990120^^^
"KRN",9.2,417,1,1,0)
 
"KRN",9.2,417,1,2,0)
   1. MESSAGE [READERS] - Choose from the Classic reader, the Detailed
"KRN",9.2,417,1,3,0)
      Full Screen reader, or the Summary Full Screen message readers.
"KRN",9.2,417,1,4,0)
 
"KRN",9.2,417,1,5,0)
   2. [FILTER] Mail - Create filters to route delivery of your mail to
"KRN",9.2,417,1,6,0)
      specific baskets based on the Subject, Sender, and/or Addressees.
"KRN",9.2,417,1,7,0)
 
"KRN",9.2,417,1,8,0)
   3. [SEARCH] for mail based on Subject Contents, Sender, Addressee,
"KRN",9.2,417,1,9,0)
      Responder, Message Text, and/or Date Sent (e.g., date range).
"KRN",9.2,417,1,10,0)
 
"KRN",9.2,417,1,11,0)
   4. [READING] Mail -
"KRN",9.2,417,1,12,0)
 
"KRN",9.2,417,1,13,0)
        * Capability to make messages [NEW] or not new.
"KRN",9.2,417,1,14,0)
        * Improved message [PRINT] functionality.
"KRN",9.2,417,1,15,0)
        * [SELECT] messages for subsequent group actions.
"KRN",9.2,417,1,16,0)
        * Improved ability when [PAGING] through a long list of messages.
"KRN",9.2,417,1,17,0)
 
"KRN",9.2,417,1,18,0)
[MORE]...
"KRN",9.2,417,2,0)
^9.22^20^9
"KRN",9.2,417,2,1,0)
READERS^XM-U-B-READER
"KRN",9.2,417,2,2,0)
FILTER^XM-U-P-FILTER
"KRN",9.2,417,2,3,0)
SEARCH^XM-U-Q-SEARCH
"KRN",9.2,417,2,13,0)
PAGING^XM-U-B-NAVIGATE FULL SCREEN
"KRN",9.2,417,2,15,0)
PRINT^XM-U-M-PRINT
"KRN",9.2,417,2,16,0)
NEW^XM-U-M-NEW
"KRN",9.2,417,2,18,0)
READING^XM-U-R-READ
"KRN",9.2,417,2,19,0)
MORE^XM-U-NEW FEATURES-2
"KRN",9.2,417,2,20,0)
SELECT^XM-U-M-CHOOSE SELECT
"KRN",9.2,419,-1)
0^255
"KRN",9.2,419,0)
XM-U-P-FILTER^FILTERING MAIL^2981208.142653^
"KRN",9.2,419,1,0)
^^19^19^2990505^
"KRN",9.2,419,1,1,0)
 
"KRN",9.2,419,1,2,0)
You can filter your mail! MailMan can use message filters, created by you,
"KRN",9.2,419,1,3,0)
to assist you with organizing your mail.
"KRN",9.2,419,1,4,0)
 
"KRN",9.2,419,1,5,0)
You can think of MailMan and message filters performing the duties of an
"KRN",9.2,419,1,6,0)
'executive assistant,' such as sorting through all of the incoming mail
"KRN",9.2,419,1,7,0)
before it reaches your 'desk.' These filters screen and categorize your
"KRN",9.2,419,1,8,0)
mail, directing it to mail baskets you specify based on certain
"KRN",9.2,419,1,9,0)
[CRITERIA]. They can also help you prioritize the relevant mail and
"KRN",9.2,419,1,10,0)
discard your unwanted mail ('junk mail') by sending it directly to the
"KRN",9.2,419,1,11,0)
'WASTE' basket or any other mail basket.
"KRN",9.2,419,1,12,0)
 
"KRN",9.2,419,1,13,0)
The MailMan interface provides the Message Filter Edit option located on
"KRN",9.2,419,1,14,0)
the Personal Preferences menu to create mail filters. The Message Filter
"KRN",9.2,419,1,15,0)
Edit option allows you to set up standing instructions to MailMan as to
"KRN",9.2,419,1,16,0)
which baskets you'd like certain messages delivered. This can be based on
"KRN",9.2,419,1,17,0)
any combination of the filtering [CRITERIA].
"KRN",9.2,419,1,18,0)
 
"KRN",9.2,419,1,19,0)
[MORE]...
"KRN",9.2,419,2,0)
^9.22A^6^2
"KRN",9.2,419,2,5,0)
MORE^XM-U-P-FILTER-2
"KRN",9.2,419,2,6,0)
CRITERIA^XM-U-P-FILTER CRITERIA
"KRN",9.2,420,-1)
0^271
"KRN",9.2,420,0)
XM-U-P-OPTIONS^PERSONAL PREFERENCES^2990121.14^^
"KRN",9.2,420,1,0)
^^20^20^2990121^^^
"KRN",9.2,420,1,1,0)
 
"KRN",9.2,420,1,2,0)
The User Options Edit option on the Personal Preferences menu allows you
"KRN",9.2,420,1,3,0)
to customize the MailMan interface to suit your needs. You can choose
"KRN",9.2,420,1,4,0)
from the following options:
"KRN",9.2,420,1,5,0)
 
"KRN",9.2,420,1,6,0)
  * [BANNER] - Create or edit your banner. (You can also use the Banner
"KRN",9.2,420,1,7,0)
    Edit option on the Personal Preferences menu to do the same thing.)
"KRN",9.2,420,1,8,0)
 
"KRN",9.2,420,1,9,0)
  * MESSAGE [ORDER] - Choose the order in which your messages are
"KRN",9.2,420,1,10,0)
    displayed (i.e., newest or oldest messages first).
"KRN",9.2,420,1,11,0)
 
"KRN",9.2,420,1,12,0)
  * MESSAGE [READER] - Choose how you display your messages when using
"KRN",9.2,420,1,13,0)
    the Read/Manage Messages option (i.e., Classic, Summary Full Screen,
"KRN",9.2,420,1,14,0)
    or Detailed Full Screen.
"KRN",9.2,420,1,15,0)
 
"KRN",9.2,420,1,16,0)
  * MESSAGE READER [PROMPT] - Specify whether the reader you've chosen
"KRN",9.2,420,1,17,0)
    should be used all the time or whether you want to be asked each time
"KRN",9.2,420,1,18,0)
    you use the Read/Manage Messages option.
"KRN",9.2,420,1,19,0)
 
"KRN",9.2,420,1,20,0)
[MORE]...
"KRN",9.2,420,2,0)
^9.22^17^5
"KRN",9.2,420,2,1,0)
BANNER^XM-U-P-BANNER
"KRN",9.2,420,2,2,0)
ORDER^XM-U-P-MESSAGE ORDER
"KRN",9.2,420,2,4,0)
PROMPT^XM-U-P-READER DEFAULT
"KRN",9.2,420,2,16,0)
MORE^XM-U-P-OPTIONS-2
"KRN",9.2,420,2,17,0)
READER^XM-U-B-READER
"KRN",9.2,423,-1)
0^123
"KRN",9.2,423,0)
XM-U-B-FILTER^FILTERING MESSAGES - BASKET ACTION^2990114.094^^
"KRN",9.2,423,1,0)
^^20^20^2990201^
"KRN",9.2,423,1,1,0)
 
"KRN",9.2,423,1,2,0)
MailMan allows you to [FILTER] your mail. You can create any number of
"KRN",9.2,423,1,3,0)
filters to automatically send your mail to any specified mail basket in
"KRN",9.2,423,1,4,0)
your mailbox based on various filtering [CRITERIA].
"KRN",9.2,423,1,5,0)
 
"KRN",9.2,423,1,6,0)
Sometimes, when managing mail in your mail baskets, you may find old
"KRN",9.2,423,1,7,0)
messages that came into your mailbox prior to your creation of mail
"KRN",9.2,423,1,8,0)
filters. Thus, you can use the Filter messages action code (i.e., 'FI')
"KRN",9.2,423,1,9,0)
to filter these 'old' messages and move them to the proper mail basket
"KRN",9.2,423,1,10,0)
(determined by your mail filters).
"KRN",9.2,423,1,11,0)
 
"KRN",9.2,423,1,12,0)
To filter messages in a basket, enter an 'FI' at the basket option or
"KRN",9.2,423,1,13,0)
command prompt.
"KRN",9.2,423,1,14,0)
 
"KRN",9.2,423,1,15,0)
  * MailMan will first ask you to select which messages you want to
"KRN",9.2,423,1,16,0)
    filter, including a [RANGE] of messages. Also, if you are using a
"KRN",9.2,423,1,17,0)
    full-screen reader, you can pre-[SELECT] messages and then filter them
"KRN",9.2,423,1,18,0)
    as a group.
"KRN",9.2,423,1,19,0)
 
"KRN",9.2,423,1,20,0)
  * MailMan will then filter the messages.  
"KRN",9.2,423,2,0)
^9.22^7^4
"KRN",9.2,423,2,1,0)
FILTER^XM-U-P-FILTER
"KRN",9.2,423,2,5,0)
CRITERIA^XM-U-P-FILTER CRITERIA
"KRN",9.2,423,2,6,0)
RANGE^XM-U-M-CHOOSE RANGE
"KRN",9.2,423,2,7,0)
SELECT^XM-U-M-CHOOSE SELECT
"KRN",9.2,424,-1)
0^259
"KRN",9.2,424,0)
XM-U-P-FILTER ORDER^FILTERING MAIL - ORDER FIELD^2981210.091047^
"KRN",9.2,424,1,0)
^^8^8^2990427^
"KRN",9.2,424,1,1,0)
 
"KRN",9.2,424,1,2,0)
A message may match several filters, depending on the conditions
"KRN",9.2,424,1,3,0)
(filtering criteria) you have set. The ORDER field is used to determine in
"KRN",9.2,424,1,4,0)
which order filters will be checked. It is here that you specify relative
"KRN",9.2,424,1,5,0)
filter priority. The value entered must be a whole number between 1 and
"KRN",9.2,424,1,6,0)
999 (no decimal digits). All filters are checked in numeric order. If
"KRN",9.2,424,1,7,0)
several filters have the same number, then the first one you entered
"KRN",9.2,424,1,8,0)
receives priority.
"KRN",9.2,424,2,0)
^9.22A^0^0
"KRN",9.2,425,-1)
0^253
"KRN",9.2,425,0)
XM-U-P-DELIVERY BASKET PRIV^DELIVERY BASKET PRIVILEGES^2981210.102542^
"KRN",9.2,425,1,0)
^^48^48^2981230^^
"KRN",9.2,425,1,1,0)
 
"KRN",9.2,425,1,2,0)
Senders of mail messages can specify or target the mail basket into which
"KRN",9.2,425,1,3,0)
a message should be delivered for all recipients. Recipients of such
"KRN",9.2,425,1,4,0)
messages can decide whether to accept or reject delivery to any targeted
"KRN",9.2,425,1,5,0)
basket by setting up their delivery privileges beforehand.
"KRN",9.2,425,1,6,0)
 
"KRN",9.2,425,1,7,0)
To set up your mail delivery privileges, use the Delivery Basket Edit
"KRN",9.2,425,1,8,0)
option on the Personal Preferences menu.
"KRN",9.2,425,1,9,0)
 
"KRN",9.2,425,1,10,0)
The Delivery Basket Edit option allows you to customize the way you
"KRN",9.2,425,1,11,0)
receive messages from other MailMan users who have targeted messages for
"KRN",9.2,425,1,12,0)
delivery to specific baskets. With this option you can, for example,
"KRN",9.2,425,1,13,0)
permit other MailMan users to direct mail to a specific mail basket in
"KRN",9.2,425,1,14,0)
your mailbox and/or create new baskets for you automatically.
"KRN",9.2,425,1,15,0)
 
"KRN",9.2,425,1,16,0)
Specifically, you can choose to do any of the following:
"KRN",9.2,425,1,17,0)
 
"KRN",9.2,425,1,18,0)
  * YES, ACCEPT IT - Choose this response if you will accept the mail in
"KRN",9.2,425,1,19,0)
    whatever mail basket is specified by the sender. If the mail basket
"KRN",9.2,425,1,20,0)
    specified does not already exist, it will automatically be created in
"KRN",9.2,425,1,21,0)
    your mailbox and the message will be delivered to this new mail
"KRN",9.2,425,1,22,0)
    basket. This is the most permissive setting.
"KRN",9.2,425,1,23,0)
 
"KRN",9.2,425,1,24,0)
  * NO, DON'T ACCEPT IT (default) - Choose this response if you will not
"KRN",9.2,425,1,25,0)
    accept the mail in the mail basket specified by the sender. Thus,
"KRN",9.2,425,1,26,0)
    regardless of what the sender specifies, the mail will be delivered as
"KRN",9.2,425,1,27,0)
    usual (i.e., to your 'IN' basket or, via your mail filters, to a
"KRN",9.2,425,1,28,0)
    different mail basket). With this default setting, no new mail baskets
"KRN",9.2,425,1,29,0)
    can be created by others in your mailbox. This is the least permissive
"KRN",9.2,425,1,30,0)
    setting.
"KRN",9.2,425,1,31,0)
 
"KRN",9.2,425,1,32,0)
  * EXISTING BASKETS ONLY - Choose this response if you will accept the
"KRN",9.2,425,1,33,0)
    mail in the specified mail basket, only if that mail basket already
"KRN",9.2,425,1,34,0)
    exists in your mailbox. Otherwise, if the specified mail basket
"KRN",9.2,425,1,35,0)
    doesn't exist, the mail will be delivered as usual (i.e., to your 'IN'
"KRN",9.2,425,1,36,0)
    basket or, via your mail filters, to a different mail basket). With
"KRN",9.2,425,1,37,0)
    this setting, no new mail baskets can be created by others in your
"KRN",9.2,425,1,38,0)
    mailbox.
"KRN",9.2,425,1,39,0)
 
"KRN",9.2,425,1,40,0)
  * SELECTED BASKETS ONLY - Choose this response if you will accept the
"KRN",9.2,425,1,41,0)
    mail in the specified mail basket, only if that mail basket already
"KRN",9.2,425,1,42,0)
    exists in your mailbox and you have specified that the basket will
"KRN",9.2,425,1,43,0)
    accept such messages. These mail baskets are also specified through
"KRN",9.2,425,1,44,0)
    the Delivery Basket Edit option. Otherwise, if the specified mail
"KRN",9.2,425,1,45,0)
    basket doesn't exist or is not set to accept the mail, the mail will
"KRN",9.2,425,1,46,0)
    be delivered as usual (i.e., to your 'IN' basket or, via your mail
"KRN",9.2,425,1,47,0)
    filters, to a different mail basket). With this setting, no new mail
"KRN",9.2,425,1,48,0)
    baskets can be created by others in your mailbox.
"KRN",9.2,426,-1)
0^278
"KRN",9.2,426,0)
XM-U-P-READER DEFAULT^DEFAULT MESSAGE READER^2990113.1538^^
"KRN",9.2,426,1,0)
^^9^9^2990113^^^
"KRN",9.2,426,1,1,0)
 
"KRN",9.2,426,1,2,0)
To choose and set your message [READER] default, use the User Options Edit
"KRN",9.2,426,1,3,0)
option on the Personal Preferences menu. Press the Return key until you
"KRN",9.2,426,1,4,0)
reach the 'MESSAGE READER:' prompt. You can choose from the Classic,
"KRN",9.2,426,1,5,0)
Summary Full Screen, or Detailed Full Screen message readers.
"KRN",9.2,426,1,6,0)
 
"KRN",9.2,426,1,7,0)
Once you have decided on a message reader, you can specify whether the
"KRN",9.2,426,1,8,0)
reader you just chose should be used all the time or whether you want to
"KRN",9.2,426,1,9,0)
be [PROMPTED] each time you use the Read/Manage Messages option.
"KRN",9.2,426,2,0)
^9.22A^2^2
"KRN",9.2,426,2,1,0)
READER^XM-U-B-READER
"KRN",9.2,426,2,2,0)
PROMPTED^XM-U-P-READER PROMPT
"KRN",9.2,427,-1)
0^268
"KRN",9.2,427,0)
XM-U-P-MESSAGE ORDER^MESSAGE LIST ORDER^2981210.102815^
"KRN",9.2,427,1,0)
^^22^22^2981230^^
"KRN",9.2,427,1,1,0)
 
"KRN",9.2,427,1,2,0)
MailMan allows you to choose the order in which your messages are
"KRN",9.2,427,1,3,0)
displayed. You have two choices:
"KRN",9.2,427,1,4,0)
 
"KRN",9.2,427,1,5,0)
  1. Newest First - This means that your messages are displayed in reverse
"KRN",9.2,427,1,6,0)
     order (i.e., highest to lowest basket message sequence number order).
"KRN",9.2,427,1,7,0)
 
"KRN",9.2,427,1,8,0)
  2. Oldest First - This means that your messages are displayed in message
"KRN",9.2,427,1,9,0)
     number order (i.e., lowest to highest basket message sequence number
"KRN",9.2,427,1,10,0)
     order).
"KRN",9.2,427,1,11,0)
 
"KRN",9.2,427,1,12,0)
Generally, the basket message sequence number order will correspond to the
"KRN",9.2,427,1,13,0)
message date sent order with the following exceptions:
"KRN",9.2,427,1,14,0)
 
"KRN",9.2,427,1,15,0)
  * Messages not originally sent to you but forwarded to you at a later
"KRN",9.2,427,1,16,0)
    date.
"KRN",9.2,427,1,17,0)
 
"KRN",9.2,427,1,18,0)
  * Messages sent from another location via the network (e.g., messages
"KRN",9.2,427,1,19,0)
    from a different site, FORUM messages).
"KRN",9.2,427,1,20,0)
 
"KRN",9.2,427,1,21,0)
To set your message order, use the User Options Edit option on the
"KRN",9.2,427,1,22,0)
Personal Preferences menu to answer the 'MESSAGE ORDER?:' prompt.
"KRN",9.2,428,-1)
0^193
"KRN",9.2,428,0)
XM-U-M-DELIVERY BASKET SET^DELIVERY BASKET SET OPTION^2981210.10292^
"KRN",9.2,428,1,0)
^^17^17^2990427^
"KRN",9.2,428,1,1,0)
 
"KRN",9.2,428,1,2,0)
You can use the Delivery Basket Set action code (i.e., 'D') to specify the
"KRN",9.2,428,1,3,0)
intended delivery mail basket for all recipients of the message you are
"KRN",9.2,428,1,4,0)
sending. Depending on how each recipient has set their delivery basket
"KRN",9.2,428,1,5,0)
[PRIVILEGES] using the Delivery Basket Edit option on the Personal
"KRN",9.2,428,1,6,0)
Preferences menu, the message may or may not be delivered to the intended
"KRN",9.2,428,1,7,0)
basket set by you. However, the message will still be delivered to each
"KRN",9.2,428,1,8,0)
recipient's mailbox. The delivery basket specified remains in effect, even
"KRN",9.2,428,1,9,0)
if a recipient forwards the message to another MailMan user.
"KRN",9.2,428,1,10,0)
 
"KRN",9.2,428,1,11,0)
Setting a delivery basket overrides any filters created by a recipient of
"KRN",9.2,428,1,12,0)
the message. Also, if allowed by a recipient and the mail basket specified
"KRN",9.2,428,1,13,0)
does not already exist, MailMan will create the new delivery mail basket
"KRN",9.2,428,1,14,0)
for that recipient.
"KRN",9.2,428,1,15,0)
 
"KRN",9.2,428,1,16,0)
To set the delivery basket for a message, enter a 'D' at the 'Select
"KRN",9.2,428,1,17,0)
Message option:  Transmit now//' prompt.
"KRN",9.2,428,2,0)
^9.22A^1^1
"KRN",9.2,428,2,1,0)
PRIVILEGES^XM-U-P-DELIVERY BASKET PRIV
"KRN",9.2,429,-1)
0^235
"KRN",9.2,429,0)
XM-U-M-TRANSMIT LATER^SEND A MESSAGE LATER (DEFER)^2981210.103003^
"KRN",9.2,429,1,0)
^^9^9^2981230^^
"KRN",9.2,429,1,1,0)
 
"KRN",9.2,429,1,2,0)
You can use the Transmit Later action code (i.e., 'L') to send a message
"KRN",9.2,429,1,3,0)
to all recipients at a later specified date and time (up to one year).
"KRN",9.2,429,1,4,0)
This action code uses TaskMan to schedule the delivery of the 'latered' or
"KRN",9.2,429,1,5,0)
deferred message. You would use this action code after you've taken all
"KRN",9.2,429,1,6,0)
other actions on your message.
"KRN",9.2,429,1,7,0)
 
"KRN",9.2,429,1,8,0)
To send a message at a later date and time, enter an 'L' at the 'Select
"KRN",9.2,429,1,9,0)
Message option:  Transmit now//' prompt.
"KRN",9.2,429,2,0)
^9.22A^^0
"KRN",9.2,430,-1)
0^116
"KRN",9.2,430,0)
XM-U-A-STAGGER DELIVERY^STAGGER DELIVERY OF A MESSAGE^2990114.1321^^
"KRN",9.2,430,1,0)
^^20^20^2990114^^^^
"KRN",9.2,430,1,1,0)
 
"KRN",9.2,430,1,2,0)
When addressing a message at the 'send to:' prompt, the 'L:xxx' prefix code
"KRN",9.2,430,1,3,0)
(where 'xxx' represents the addressee's name), allows you to individually enter
"KRN",9.2,430,1,4,0)
a specific delivery date and time (from at least five minutes into the future
"KRN",9.2,430,1,5,0)
up to one month) for each addressee of a message. You can use this prefix code
"KRN",9.2,430,1,6,0)
in conjunction with either the [TRANSMIT NOW] (send the message now) or the
"KRN",9.2,430,1,7,0)
[DEFERRED SEND] (send the message later) action codes. 
"KRN",9.2,430,1,8,0)

"KRN",9.2,430,1,9,0)
For example, if you want a few recipients from the list of the recipients
"KRN",9.2,430,1,10,0)
of your message to receive the message at a much later date and time, you
"KRN",9.2,430,1,11,0)
could first use the staggered delivery function to specify the later
"KRN",9.2,430,1,12,0)
delivery date and time for those specific recipients and then send the
"KRN",9.2,430,1,13,0)
message using either the TRANSMIT NOW or DEFERRED SEND action codes.
"KRN",9.2,430,1,14,0)
 
"KRN",9.2,430,1,15,0)
After the message with staggered delivery dates and times has been sent, and
"KRN",9.2,430,1,16,0)
before it has been delivered to the staggered recipients, doing a [QUERY] (Q)
"KRN",9.2,430,1,17,0)
on the message will show the intended delivery dates and times for those
"KRN",9.2,430,1,18,0)
recipients. 
"KRN",9.2,430,1,19,0)
 
"KRN",9.2,430,1,20,0)
[MORE]... 
"KRN",9.2,430,2,0)
^9.22A^4^4
"KRN",9.2,430,2,1,0)
QUERY^XM-U-M-QUERY GENERAL
"KRN",9.2,430,2,2,0)
DEFERRED SEND^XM-U-M-TRANSMIT LATER
"KRN",9.2,430,2,3,0)
TRANSMIT NOW^XM-U-M-TRANSMIT NOW
"KRN",9.2,430,2,4,0)
MORE^XM-U-A-STAGGER DELIVERY-2
"KRN",9.2,434,-1)
0^119
"KRN",9.2,434,0)
XM-U-B-BASKET NAME^NAMING BASKETS^2981210.105815^^
"KRN",9.2,434,1,0)
^^10^10^2981231^^^
"KRN",9.2,434,1,1,0)
 
"KRN",9.2,434,1,2,0)
MailMan allows you to give your mail baskets names starting with
"KRN",9.2,434,1,3,0)
alphabetic characters, symbols, or numbers and when you list your baskets,
"KRN",9.2,434,1,4,0)
they will be in alphabetical order (those baskets beginning with numbers
"KRN",9.2,434,1,5,0)
or symbols will be listed first). Mail basket names can be from 2 to 30
"KRN",9.2,434,1,6,0)
characters in length.
"KRN",9.2,434,1,7,0)
 
"KRN",9.2,434,1,8,0)
When you wish to choose a mail basket by its basket number (e.g., '.5' for
"KRN",9.2,434,1,9,0)
the 'WASTE' basket), you must now precede the mail basket number with a
"KRN",9.2,434,1,10,0)
grave accent mark or back tick (`).
"KRN",9.2,445,-1)
0^267
"KRN",9.2,445,0)
XM-U-P-MESSAGE ACTION DEFAULT^MESSAGE ACTION DEFAULT^2981211.103905^
"KRN",9.2,445,1,0)
^^19^19^2981230^^
"KRN",9.2,445,1,1,0)
 
"KRN",9.2,445,1,2,0)
MailMan allows you to decide the default response after reading a message
"KRN",9.2,445,1,3,0)
in your 'IN' mail basket via the 'MESSAGE ACTION DEFAULT:' prompt.
"KRN",9.2,445,1,4,0)
Whatever you enter into this field will control the default for the 'Enter
"KRN",9.2,445,1,5,0)
message option' prompt that you answer after reading each MailMan message
"KRN",9.2,445,1,6,0)
in your 'IN' mail basket.
"KRN",9.2,445,1,7,0)
 
"KRN",9.2,445,1,8,0)
There are two possible responses:
"KRN",9.2,445,1,9,0)
 
"KRN",9.2,445,1,10,0)
  1. Ignore (default) - Leaves the message in the same MailMan basket.
"KRN",9.2,445,1,11,0)
 
"KRN",9.2,445,1,12,0)
  2. Delete - Moves the message to your MailMan 'WASTE' basket.
"KRN",9.2,445,1,13,0)
 
"KRN",9.2,445,1,14,0)
If you do not enter anything in this field, the default will be whatever
"KRN",9.2,445,1,15,0)
IRM has set for your site in the [MAILMAN SITE PARAMETERS] file (#4.3). If
"KRN",9.2,445,1,16,0)
IRM has not set a value, the default will be 'Ignore.'
"KRN",9.2,445,1,17,0)
 
"KRN",9.2,445,1,18,0)
The 'MESSAGE ACTION DEFAULT:' prompt can be set through the User Options
"KRN",9.2,445,1,19,0)
Edit option on the Personal Preferences menu.
"KRN",9.2,445,2,0)
^9.22A^1^1
"KRN",9.2,445,2,1,0)
MAILMAN SITE PARAMETERS^XM-I-S-SITE PARAMETERS
"KRN",9.2,446,-1)
0^280
"KRN",9.2,446,0)
XM-U-P-SHOW TITLES^SHOW TITLES^2981211.104145^
"KRN",9.2,446,1,0)
^^17^17^2990427^
"KRN",9.2,446,1,1,0)
 
"KRN",9.2,446,1,2,0)
MailMan allows you to decide if you want a message sender's title to be
"KRN",9.2,446,1,3,0)
displayed in the message header. If you elect to show titles, they will be
"KRN",9.2,446,1,4,0)
preceded by a hyphen (i.e., generated by MailMan) and appear after the
"KRN",9.2,446,1,5,0)
sender's name in the 'From' portion of the message header.
"KRN",9.2,446,1,6,0)
 
"KRN",9.2,446,1,7,0)
There are two possible responses to this question:
"KRN",9.2,446,1,8,0)
 
"KRN",9.2,446,1,9,0)
  * Yes - Display a sender's title in the message header.
"KRN",9.2,446,1,10,0)
 
"KRN",9.2,446,1,11,0)
  * No (default) - Do not display a sender's title in the message header.
"KRN",9.2,446,1,12,0)
 
"KRN",9.2,446,1,13,0)
If you do not set this field, the sender's title will not appear in the
"KRN",9.2,446,1,14,0)
message header.
"KRN",9.2,446,1,15,0)
 
"KRN",9.2,446,1,16,0)
The 'SHOW TITLES:' prompt can be set through the User Options Edit option
"KRN",9.2,446,1,17,0)
on the Personal Preferences menu.
"KRN",9.2,447,-1)
0^275
"KRN",9.2,447,0)
XM-U-P-PRIORITY FLAG^PRIORITY RESPONSES FLAG^2981211.104425^
"KRN",9.2,447,1,0)
^^20^20^2990107^
"KRN",9.2,447,1,1,0)
 
"KRN",9.2,447,1,2,0)
The PRIORITY RESPONSES FLAG field works in conjunction with the PRIORITY
"KRN",9.2,447,1,3,0)
RESPONSES [PROMPT] field. Both of these fields can be set through the User
"KRN",9.2,447,1,4,0)
Options Edit option available on the Personal Preferences menu.
"KRN",9.2,447,1,5,0)
 
"KRN",9.2,447,1,6,0)
MailMan allows you to decide whether or not you want to have responses to
"KRN",9.2,447,1,7,0)
priority mail delivered to you as priority or ordinary responses. Setting
"KRN",9.2,447,1,8,0)
the PRIORITY RESPONSES FLAG field allows you to choose what your default
"KRN",9.2,447,1,9,0)
should be.
"KRN",9.2,447,1,10,0)
 
"KRN",9.2,447,1,11,0)
There are two possible values from which to choose when answering the
"KRN",9.2,447,1,12,0)
'PRIORITY RESPONSES FLAG:' question:
"KRN",9.2,447,1,13,0)
 
"KRN",9.2,447,1,14,0)
  * 0, Responses are PRIORITY (default) - Responses to priority mail will
"KRN",9.2,447,1,15,0)
    be delivered to you as priority responses.
"KRN",9.2,447,1,16,0)
 
"KRN",9.2,447,1,17,0)
  * 1, Responses are ORDINARY - Responses to priority mail will be
"KRN",9.2,447,1,18,0)
    delivered to you as ordinary responses.
"KRN",9.2,447,1,19,0)
 
"KRN",9.2,447,1,20,0)
If you do not set this field, then responses will be priority. 
"KRN",9.2,447,2,0)
^9.22A^1^1
"KRN",9.2,447,2,1,0)
PROMPT^XM-U-P-PRIORITY PROMPT
"KRN",9.2,448,-1)
0^277
"KRN",9.2,448,0)
XM-U-P-PRIORITY PROMPT^PRIORITY RESPONSES PROMPT^2981211.104506^
"KRN",9.2,448,1,0)
^^17^17^2990107^
"KRN",9.2,448,1,1,0)
 
"KRN",9.2,448,1,2,0)
The PRIORITY RESPONSES PROMPT field works in conjunction with the PRIORITY
"KRN",9.2,448,1,3,0)
RESPONSES [FLAG] field. Both of these fields can be set through the User
"KRN",9.2,448,1,4,0)
Options Edit option available on the Personal Preferences menu.
"KRN",9.2,448,1,5,0)
 
"KRN",9.2,448,1,6,0)
MailMan allows you to decide whether or not you will be prompted to choose
"KRN",9.2,448,1,7,0)
to have future responses to an individual priority message delivered to
"KRN",9.2,448,1,8,0)
you as priority or ordinary mail. The answer you give here determines
"KRN",9.2,448,1,9,0)
whether or not MailMan will ask you to choose each time a priority message
"KRN",9.2,448,1,10,0)
is delivered. Setting the PRIORITY RESPONSES PROMPT field allows you to
"KRN",9.2,448,1,11,0)
choose what your default will be.
"KRN",9.2,448,1,12,0)
 
"KRN",9.2,448,1,13,0)
This prompt allows you to determine on a message-by-message basis whether
"KRN",9.2,448,1,14,0)
or not MailMan will deliver responses to a priority message as priority
"KRN",9.2,448,1,15,0)
mail, regardless of what the default is for the PRIORITY RESPONSES [FLAG].
"KRN",9.2,448,1,16,0)
    
"KRN",9.2,448,1,17,0)
[MORE]... 
"KRN",9.2,448,2,0)
^9.22A^3^2
"KRN",9.2,448,2,2,0)
MORE^XM-U-P-PRIORITY PROMPT-2
"KRN",9.2,448,2,3,0)
FLAG^XM-U-P-PRIORITY FLAG
"KRN",9.2,449,-1)
0^265
"KRN",9.2,449,0)
XM-U-P-INSTITUTION^MAILMAN INSTITUTION^2981211.1047^
"KRN",9.2,449,1,0)
^^21^21^2990513^
"KRN",9.2,449,1,1,0)
 
"KRN",9.2,449,1,2,0)
The MailMan Institution is a piece of information that helps identify you
"KRN",9.2,449,1,3,0)
to other MailMan users. It is usually the office or site where you are
"KRN",9.2,449,1,4,0)
located (i.e., your physical location) and is most useful in systems such
"KRN",9.2,449,1,5,0)
as FORUM where people from many different sites interact.
"KRN",9.2,449,1,6,0)
 
"KRN",9.2,449,1,7,0)
MailMan allows you to enter your own MailMan Institution that will be
"KRN",9.2,449,1,8,0)
displayed to other users. You are not required to enter a MailMan
"KRN",9.2,449,1,9,0)
Institution on local mail. However, on FORUM, it is a policy that every
"KRN",9.2,449,1,10,0)
user must enter a MailMan Institution to better identify themselves.
"KRN",9.2,449,1,11,0)
 
"KRN",9.2,449,1,12,0)
Your MailMan Institution is displayed to others when they receive messages
"KRN",9.2,449,1,13,0)
from you. It is shown in parentheses following your name and title in the
"KRN",9.2,449,1,14,0)
heading of every local message or response that you send.
"KRN",9.2,449,1,15,0)
 
"KRN",9.2,449,1,16,0)
The MailMan Institution can range from 3 to 30 characters in length and
"KRN",9.2,449,1,17,0)
can contain any combination of numbers, alphabetic characters, symbols
"KRN",9.2,449,1,18,0)
(e.g., #, $, %, &, *), and punctuation marks.
"KRN",9.2,449,1,19,0)
 
"KRN",9.2,449,1,20,0)
The 'MAILMAN INSTITUTION:' field can be set through the User Options Edit
"KRN",9.2,449,1,21,0)
option on the Personal Preferences menu.
"KRN",9.2,450,-1)
0^269
"KRN",9.2,450,0)
XM-U-P-NETWORK SIGNATURE^NETWORK SIGNATURE^2981211.104903^
"KRN",9.2,450,1,0)
^^16^16^2981230^^
"KRN",9.2,450,1,1,0)
 
"KRN",9.2,450,1,2,0)
The Network Signature is a piece of information that helps identify you to
"KRN",9.2,450,1,3,0)
other MailMan users. It consists of three separate lines of information.
"KRN",9.2,450,1,4,0)
MailMan allows you to enter your own Network Signature. You must enter a
"KRN",9.2,450,1,5,0)
Network Signature in order to use the '[ANSWER]' command on a message.
"KRN",9.2,450,1,6,0)
 
"KRN",9.2,450,1,7,0)
Each of the three lines comprising the Network Signature can range from 3
"KRN",9.2,450,1,8,0)
to 70 characters in length and can contain any combination of numbers,
"KRN",9.2,450,1,9,0)
alphabetic characters, symbols (e.g., #, $, %, &, *), and punctuation
"KRN",9.2,450,1,10,0)
marks. In order to have a valid Network Signature recognized by MailMan,
"KRN",9.2,450,1,11,0)
you must enter data in at least one of the three Network Signature lines.
"KRN",9.2,450,1,12,0)
Any line of the three is acceptable as long as one line contains data.
"KRN",9.2,450,1,13,0)
 
"KRN",9.2,450,1,14,0)
The 'NETWORK SIGNATURE LINE n OF 3:' field (where n equals one, two, or
"KRN",9.2,450,1,15,0)
three) can be set through the User Options Edit option on the Personal
"KRN",9.2,450,1,16,0)
Preferences menu.
"KRN",9.2,450,2,0)
^9.22A^1^1
"KRN",9.2,450,2,1,0)
ANSWER^XM-U-M-ANSWER
"KRN",9.2,451,-1)
0^254
"KRN",9.2,451,0)
XM-U-P-EDITOR^PREFERRED EDITOR^2990120.1621^^
"KRN",9.2,451,1,0)
^^16^16^2990120^^^^
"KRN",9.2,451,1,1,0)
 
"KRN",9.2,451,1,2,0)
The Preferred Editor field provides you with the opportunity to choose the
"KRN",9.2,451,1,3,0)
editor you wish to use while in MailMan. You use an editor when editing a
"KRN",9.2,451,1,4,0)
VA FileMan word processing field (e.g., when you respond to or type a new
"KRN",9.2,451,1,5,0)
message). If you have chosen a Preferred Editor and you are editing a word
"KRN",9.2,451,1,6,0)
processing field, MailMan will automatically transfer you into your
"KRN",9.2,451,1,7,0)
Preferred Editor. If you don't enter a specific editor in the Preferred
"KRN",9.2,451,1,8,0)
Editor field, MailMan will default to either the VA FileMan [SCREEN] editor
"KRN",9.2,451,1,9,0)
when editing within ScreenMan or the VA FileMan [LINE] Editor in all other
"KRN",9.2,451,1,10,0)
cases.
"KRN",9.2,451,1,11,0)
 
"KRN",9.2,451,1,12,0)
Your choice of editors is based on the editors available at your particular
"KRN",9.2,451,1,13,0)
location. MailMan lets you choose from the list of available editors. 
"KRN",9.2,451,1,14,0)
 
"KRN",9.2,451,1,15,0)
The 'PREFERRED EDITOR:' field can be set through the User Options Edit option
"KRN",9.2,451,1,16,0)
on the Personal Preferences menu. 
"KRN",9.2,451,2,0)
^9.22^2^2
"KRN",9.2,451,2,1,0)
LINE^XM-U-I-EDITOR FM LINE
"KRN",9.2,451,2,2,0)
SCREEN^XM-U-I-EDITOR FM SCREEN
"KRN",9.2,452,-1)
0^270
"KRN",9.2,452,0)
XM-U-P-OFFICE INFO^CONTACT INFORMATION^2990513.0914^^
"KRN",9.2,452,1,0)
^^47^47^2990513^^
"KRN",9.2,452,1,1,0)
 
"KRN",9.2,452,1,2,0)
Your contact information is comprised of the following fields, which
"KRN",9.2,452,1,3,0)
reside in the NEW PERSON file (#200):
"KRN",9.2,452,1,4,0)
 
"KRN",9.2,452,1,5,0)
  * STREET ADDRESS 1 - This is the first line of the street address of the
"KRN",9.2,452,1,6,0)
    permanent address of the user.
"KRN",9.2,452,1,7,0)
 
"KRN",9.2,452,1,8,0)
  * STREET ADDRESS 2 - This is the second line of the street address.
"KRN",9.2,452,1,9,0)
 
"KRN",9.2,452,1,10,0)
  * STREET ADDRESS 3 - This is the third line of the street address.
"KRN",9.2,452,1,11,0)
 
"KRN",9.2,452,1,12,0)
  * CITY - This is the user's city.
"KRN",9.2,452,1,13,0)
 
"KRN",9.2,452,1,14,0)
  * STATE - This is the user's state.
"KRN",9.2,452,1,15,0)
 
"KRN",9.2,452,1,16,0)
  * ZIP CODE - This is the user's postal ZIP code.
"KRN",9.2,452,1,17,0)
 
"KRN",9.2,452,1,18,0)
  * OFFICE PHONE - This is the user's business/office contact telephone.
"KRN",9.2,452,1,19,0)
 
"KRN",9.2,452,1,20,0)
  * FAX NUMBER - This field contains the telephone number for a user's FAX
"KRN",9.2,452,1,21,0)
    machine. It needs to be in a format that can be understood by a
"KRN",9.2,452,1,22,0)
    sending modem.
"KRN",9.2,452,1,23,0)
 
"KRN",9.2,452,1,24,0)
  * VOICE PAGER - This field contains the telephone number for a user's
"KRN",9.2,452,1,25,0)
    analog pager. It needs to be in a format that can be understood by a
"KRN",9.2,452,1,26,0)
    sending modem.
"KRN",9.2,452,1,27,0)
 
"KRN",9.2,452,1,28,0)
  * DIGITAL PAGER - This field contains the telephone number for a user's
"KRN",9.2,452,1,29,0)
    digital page. It needs to be a format that can be understood by a
"KRN",9.2,452,1,30,0)
    sending modem.
"KRN",9.2,452,1,31,0)
 
"KRN",9.2,452,1,32,0)
  * ADD'L PHONE 1 - This is an alternate (additional) telephone number
"KRN",9.2,452,1,33,0)
    where the user might also be reached.
"KRN",9.2,452,1,34,0)
 
"KRN",9.2,452,1,35,0)
  * ADD'L PHONE 2 - This is another alternate (additional) telephone
"KRN",9.2,452,1,36,0)
    number where the user might also be reached.
"KRN",9.2,452,1,37,0)
 
"KRN",9.2,452,1,38,0)
These fields are all self-explanatory. You can use these fields to store
"KRN",9.2,452,1,39,0)
your business (or personal) information. MailMan does not require you to
"KRN",9.2,452,1,40,0)
enter any information into these fields.
"KRN",9.2,452,1,41,0)
 
"KRN",9.2,452,1,42,0)
MailMan displays your contact information when users do a lookup on you
"KRN",9.2,452,1,43,0)
through the User Information option on the Help (User/Group Info., etc.)
"KRN",9.2,452,1,44,0)
menu.
"KRN",9.2,452,1,45,0)
 
"KRN",9.2,452,1,46,0)
The contact information fields can be set through the User Options Edit
"KRN",9.2,452,1,47,0)
option on the Personal Preferences menu.
"KRN",9.2,453,-1)
0^248
"KRN",9.2,453,0)
XM-U-NEW FEATURES-2^NEW FEATURES AND FUNCTIONALITY (CONTINUED)^2981214.103559^^
"KRN",9.2,453,1,0)
^^18^18^2990201^
"KRN",9.2,453,1,1,0)
 
"KRN",9.2,453,1,2,0)
  5. [SENDING] Mail - 
"KRN",9.2,453,1,3,0)
 
"KRN",9.2,453,1,4,0)
       * New capability to [STAGGER] delivery of messages to individual
"KRN",9.2,453,1,5,0)
         recipients for different dates and times.
"KRN",9.2,453,1,6,0)
       * New capability to [DEFER] delivery of a message to all recipients
"KRN",9.2,453,1,7,0)
         for a later date and time.
"KRN",9.2,453,1,8,0)
       * New [DELIVERY BASKET SET] option - You can now specify a mail
"KRN",9.2,453,1,9,0)
         basket when sending a message based on how the recipients have
"KRN",9.2,453,1,10,0)
         set their [PRIVILEGES] for delivery to their baskets.
"KRN",9.2,453,1,11,0)
       * Improved message [EDITING] - You can now make messages closed,
"KRN",9.2,453,1,12,0)
         confidential, priority, etc. at the 'Select Message option:
"KRN",9.2,453,1,13,0)
         Transmit Now//' prompt.
"KRN",9.2,453,1,14,0)
       * New [VAPORIZE] functionality - You can set a message to be
"KRN",9.2,453,1,15,0)
         deleted ('vaporized') from a recipient's mailbox at a specific
"KRN",9.2,453,1,16,0)
         date and time.
"KRN",9.2,453,1,17,0)
 
"KRN",9.2,453,1,18,0)
[MORE]... 
"KRN",9.2,453,2,0)
^9.22A^9^8
"KRN",9.2,453,2,2,0)
DEFER^XM-U-M-TRANSMIT LATER
"KRN",9.2,453,2,3,0)
DELIVERY BASKET SET^XM-U-M-DELIVERY BASKET SET
"KRN",9.2,453,2,4,0)
EDITING^XM-U-MO-SEND
"KRN",9.2,453,2,5,0)
PRIVILEGES^XM-U-P-DELIVERY BASKET PRIV
"KRN",9.2,453,2,6,0)
SENDING^XM-U-M-SEND
"KRN",9.2,453,2,7,0)
STAGGER^XM-U-A-STAGGER DELIVERY
"KRN",9.2,453,2,8,0)
VAPORIZE^XM-U-M-VAPORIZE DATE SEND
"KRN",9.2,453,2,9,0)
MORE^XM-U-NEW FEATURES-3
"KRN",9.2,454,-1)
0^249
"KRN",9.2,454,0)
XM-U-NEW FEATURES-3^NEW FEATURES AND FUNCTIONALITY (CONTINUED)^2981214.10384^
"KRN",9.2,454,1,0)
^^18^18^2990427^
"KRN",9.2,454,1,1,0)
    
"KRN",9.2,454,1,2,0)
  5. [SENDING] Mail (continued) -
"KRN",9.2,454,1,3,0)
 
"KRN",9.2,454,1,4,0)
       * Improved message [REPLY] functionality - When you reply to a
"KRN",9.2,454,1,5,0)
         message it is instantly available to anyone reading a message.
"KRN",9.2,454,1,6,0)
         Thus, you can now have a 'real-time' conversation between message
"KRN",9.2,454,1,7,0)
         recipients. You can also include any combination of previous
"KRN",9.2,454,1,8,0)
         responses in your reply.
"KRN",9.2,454,1,9,0)
       * Improved message [COPY] functionality - When you copy a message
"KRN",9.2,454,1,10,0)
         you can copy any combination of responses.
"KRN",9.2,454,1,11,0)
       * Improved message [ANSWER] functionality - Now the original
"KRN",9.2,454,1,12,0)
         message is copied and your Network Signature is added before
"KRN",9.2,454,1,13,0)
         placing you in the editor.
"KRN",9.2,454,1,14,0)
       * Improved the process when sending mail to a [MAIL GROUP] - When
"KRN",9.2,454,1,15,0)
         sending mail to a '[LARGE]' mail group you can defer delivery for
"KRN",9.2,454,1,16,0)
         a later date and time.
"KRN",9.2,454,1,17,0)
 
"KRN",9.2,454,1,18,0)
[MORE]...
"KRN",9.2,454,2,0)
^9.22A^8^7
"KRN",9.2,454,2,2,0)
ANSWER^XM-U-M-ANSWER
"KRN",9.2,454,2,3,0)
COPY^XM-U-M-COPY
"KRN",9.2,454,2,4,0)
MAIL GROUP^XM-U-I-GROUP
"KRN",9.2,454,2,5,0)
REPLY^XM-U-M-REPLY
"KRN",9.2,454,2,6,0)
SENDING^XM-U-M-SEND
"KRN",9.2,454,2,7,0)
MORE^XM-U-NEW FEATURES-4
"KRN",9.2,454,2,8,0)
LARGE^XM-I-S-BIG GROUP SIZE
"KRN",9.2,455,-1)
0^313
"KRN",9.2,455,0)
XM-U-NEW FEATURES-4^NEW FEATURES AND FUNCTIONALITY (CONTINUED)^2990121.09^^
"KRN",9.2,455,1,0)
^^20^20^2990427^
"KRN",9.2,455,1,1,0)
 
"KRN",9.2,455,1,2,0)
   6. PERSONAL PREFERENCES - 
"KRN",9.2,455,1,3,0)
 
"KRN",9.2,455,1,4,0)
        * New Personal Preferences [MENU] 
"KRN",9.2,455,1,5,0)
        * Choose your [MESSAGE LIST ORDER] - Specify the order in which
"KRN",9.2,455,1,6,0)
          your messages are displayed.
"KRN",9.2,455,1,7,0)
        * Choose your [DEFAULT MESSAGE READER] - Specify the default
"KRN",9.2,455,1,8,0)
          message reader when reading messages (i.e., Classic or
"KRN",9.2,455,1,9,0)
          Summary/Detailed Full Screen)
"KRN",9.2,455,1,10,0)
        * [SHOW MESSAGE PREVIEW] - Choose to preview messages while using
"KRN",9.2,455,1,11,0)
          the Classic message reader.
"KRN",9.2,455,1,12,0)
        * DELIVERY BASKET [PRIVILEGES] - You decide if you will allow a
"KRN",9.2,455,1,13,0)
          sender of a message to direct mail to specific baskets or create
"KRN",9.2,455,1,14,0)
          new baskets in your mailbox.
"KRN",9.2,455,1,15,0)
        * [P-MESSAGE FROM] - Choose the sender for Messages sent to the
"KRN",9.2,455,1,16,0)
          P-MESSAGE device.               
"KRN",9.2,455,1,17,0)
        * Mail [BASKET NAMES] can now begin with numbers and are listed in
"KRN",9.2,455,1,18,0)
          alphabetical order.
"KRN",9.2,455,1,19,0)
 
"KRN",9.2,455,1,20,0)
[MORE]... 
"KRN",9.2,455,2,0)
^9.22A^13^8
"KRN",9.2,455,2,2,0)
BASKET NAMES^XM-U-B-BASKET NAME
"KRN",9.2,455,2,3,0)
DEFAULT MESSAGE READER^XM-U-P-READER DEFAULT
"KRN",9.2,455,2,4,0)
MESSAGE LIST ORDER^XM-U-P-MESSAGE ORDER
"KRN",9.2,455,2,6,0)
PRIVILEGES^XM-U-P-DELIVERY BASKET PRIV
"KRN",9.2,455,2,9,0)
MENU^XM-U-P-PERSONAL PREFERENCES
"KRN",9.2,455,2,11,0)
SHOW MESSAGE PREVIEW^XM-U-P-SHOW MESSAGE PREVIEW
"KRN",9.2,455,2,12,0)
P-MESSAGE FROM^XM-U-P-P-MESSAGE FROM
"KRN",9.2,455,2,13,0)
MORE^XM-U-NEW FEATURES-5
"KRN",9.2,456,-1)
0^236
"KRN",9.2,456,0)
XM-U-M-TRANSMIT NOW^SEND A MESSAGE NOW ('Transmit Now')^2981214.135807^
"KRN",9.2,456,1,0)
^^14^14^2981230^^
"KRN",9.2,456,1,1,0)
 
"KRN",9.2,456,1,2,0)
You can use the Transmit Now action code (i.e., 'T') to have MailMan
"KRN",9.2,456,1,3,0)
send your message to all recipients. You would use this action code after
"KRN",9.2,456,1,4,0)
you've taken all other actions on your message.
"KRN",9.2,456,1,5,0)
 
"KRN",9.2,456,1,6,0)
To send a message now, enter a 'T' or press the Return/Enter key to accept
"KRN",9.2,456,1,7,0)
the 'Transmit now' default at the 'Select Message option:  Transmit now//'
"KRN",9.2,456,1,8,0)
prompt.
"KRN",9.2,456,1,9,0)
 
"KRN",9.2,456,1,10,0)
MailMan automatically gives the message an internal message identification
"KRN",9.2,456,1,11,0)
number and puts the message in the delivery queue to be delivered to the
"KRN",9.2,456,1,12,0)
recipients.
"KRN",9.2,456,1,13,0)
 
"KRN",9.2,456,1,14,0)
MailMan will then notify you that the message has been sent.
"KRN",9.2,457,-1)
0^185
"KRN",9.2,457,0)
XM-U-M-CLOSED^CLOSED MESSAGES^2981214.153^
"KRN",9.2,457,1,0)
^^9^9^2990427^
"KRN",9.2,457,1,1,0)
 
"KRN",9.2,457,1,2,0)
When you are sending a message, you can use the Closed Message action code
"KRN",9.2,457,1,3,0)
(i.e., 'X') to prevent recipients of your message from [FORWARDING] that
"KRN",9.2,457,1,4,0)
message on to other recipients not originally included in the recipient
"KRN",9.2,457,1,5,0)
list. This is a toggle action code. If you enter 'X' again, the message
"KRN",9.2,457,1,6,0)
will no longer be closed.
"KRN",9.2,457,1,7,0)
 
"KRN",9.2,457,1,8,0)
To make a message 'closed,' enter an 'X' at the 'Select Message option:
"KRN",9.2,457,1,9,0)
Transmit now//' prompt.
"KRN",9.2,457,2,0)
^9.22A^1^1
"KRN",9.2,457,2,1,0)
FORWARDING^XM-U-M-FORWARD
"KRN",9.2,458,-1)
0^195
"KRN",9.2,458,0)
XM-U-M-EDIT SUBJECT^EDIT THE SUBJECT OF A MESSAGE^2981214.155657^
"KRN",9.2,458,1,0)
^^13^13^2990427^^^
"KRN",9.2,458,1,1,0)
 
"KRN",9.2,458,1,2,0)
You can use the Edit Subject action code (i.e., 'ES') to change the
"KRN",9.2,458,1,3,0)
subject text of a message you intend on sending.
"KRN",9.2,458,1,4,0)
 
"KRN",9.2,458,1,5,0)
The subject of the message is shown whenever the message is displayed. It
"KRN",9.2,458,1,6,0)
can be from 3 to 65 characters in length. Any leading and trailing blanks
"KRN",9.2,458,1,7,0)
are deleted. Also, any sequence of three or more blanks is reduced to two
"KRN",9.2,458,1,8,0)
blanks.
"KRN",9.2,458,1,9,0)
 
"KRN",9.2,458,1,10,0)
To edit the subject of a message prior to sending it, enter an 'ES' at the
"KRN",9.2,458,1,11,0)
'Select Message option:  Transmit now//' prompt or enter an 'E' at the
"KRN",9.2,458,1,12,0)
'Enter message option' prompt and then enter 'S' at the 'Select Edit
"KRN",9.2,458,1,13,0)
option:' prompt.
"KRN",9.2,459,-1)
0^196
"KRN",9.2,459,0)
XM-U-M-EDIT TEXT^EDIT THE TEXT OF A MESSAGE^2981214.160025^
"KRN",9.2,459,1,0)
^^9^9^2990427^
"KRN",9.2,459,1,1,0)
 
"KRN",9.2,459,1,2,0)
You can use the Edit Text action code (i.e., 'ET') to change the text
"KRN",9.2,459,1,3,0)
(body) of the message you intend on sending. You can add to, modify, or
"KRN",9.2,459,1,4,0)
delete any part of the text within the body of the message.
"KRN",9.2,459,1,5,0)
 
"KRN",9.2,459,1,6,0)
To edit the text of a message prior to sending it, enter an 'ET' at the
"KRN",9.2,459,1,7,0)
'Select Message option:  Transmit now//' prompt or enter an 'E' at the
"KRN",9.2,459,1,8,0)
'Enter message option' prompt and then enter 'T' at the 'Select Edit
"KRN",9.2,459,1,9,0)
option:' prompt.
"KRN",9.2,461,-1)
0^194
"KRN",9.2,461,0)
XM-U-M-EDIT RECIPIENTS^EDIT RECIPIENTS^2981215.1038^
"KRN",9.2,461,1,0)
^^10^10^2990427^
"KRN",9.2,461,1,1,0)
 
"KRN",9.2,461,1,2,0)
You can use the Edit Recipients action code (i.e., 'ER') to add or remove
"KRN",9.2,461,1,3,0)
recipients from a message you intend on sending. 
"KRN",9.2,461,1,4,0)
 
"KRN",9.2,461,1,5,0)
To edit the recipients of a message prior to sending it, enter an 'ER' at
"KRN",9.2,461,1,6,0)
the 'Select Message option:  Transmit now//' prompt.
"KRN",9.2,461,1,7,0)
 
"KRN",9.2,461,1,8,0)
For example, to remove a recipient, type a minus sign or hyphen (i.e.,
"KRN",9.2,461,1,9,0)
'-') followed by the first portion of the recipient's last name after the
"KRN",9.2,461,1,10,0)
'And Send to:' prompt. For example: '-SMITH,JOE'.
"KRN",9.2,462,-1)
0^133
"KRN",9.2,462,0)
XM-U-B-READER DIFF-2^BASKET ACTION CODES (CONTINUED)^2990319.1451^^
"KRN",9.2,462,1,0)
^^21^21^2990319^^^^
"KRN",9.2,462,1,1,0)

"KRN",9.2,462,1,2,0)
 ?string   Search for messages in the basket whose subject
"KRN",9.2,462,1,3,0)
           [CONTAINS] the string entered.
"KRN",9.2,462,1,4,0)
 ??string  Search for messages anywhere on the system, which you ever sent
"KRN",9.2,462,1,5,0)
           or received, whose subject [BEGINS WITH] the string entered.
"KRN",9.2,462,1,6,0)
 
"KRN",9.2,462,1,7,0)
The following are available only with the Full Screen message reader:
"KRN",9.2,462,1,8,0)
 
"KRN",9.2,462,1,9,0)
 [CD]       Change detail. (Toggle between summary and detailed display.)
"KRN",9.2,462,1,10,0)
 
"KRN",9.2,462,1,11,0)
For commands which act on one or more messages, you can [SELECT] the messages
"KRN",9.2,462,1,12,0)
prior to entering the command, or specify a [RANGE] of messages after entering
"KRN",9.2,462,1,13,0)
the command. If you select messages, additional commands become available: 
"KRN",9.2,462,1,14,0)
 
"KRN",9.2,462,1,15,0)
 [O]        Opposite selection toggle.
"KRN",9.2,462,1,16,0)
 [Z]        Zoom toggle.
"KRN",9.2,462,1,17,0)
 
"KRN",9.2,462,1,18,0)
When you have a basket with a long list of messages, you can [NAVIGATE] about
"KRN",9.2,462,1,19,0)
the basket by paging through the messages.
"KRN",9.2,462,1,20,0)
 
"KRN",9.2,462,1,21,0)
 [MORE]...
"KRN",9.2,462,2,0)
^9.22^22^9
"KRN",9.2,462,2,4,0)
Z^XM-U-B-ZOOM TOGGLE
"KRN",9.2,462,2,5,0)
O^XM-U-B-OPPOSITE TOGGLE
"KRN",9.2,462,2,13,0)
MORE^XM-U-B-READER DIFF-3
"KRN",9.2,462,2,15,0)
CD^XM-U-B-CHANGE DETAIL
"KRN",9.2,462,2,16,0)
NAVIGATE^XM-U-B-NAVIGATE FULL SCREEN
"KRN",9.2,462,2,18,0)
RANGE^XM-U-M-CHOOSE RANGE
"KRN",9.2,462,2,19,0)
SELECT^XM-U-M-CHOOSE SELECT
"KRN",9.2,462,2,21,0)
BEGINS WITH^XM-U-Q-CLASSIC LOOKUP ??
"KRN",9.2,462,2,22,0)
CONTAINS^XM-U-Q-CLASSIC LOOKUP ?
"KRN",9.2,463,-1)
0^140
"KRN",9.2,463,0)
XM-U-B-ZOOM TOGGLE^ZOOM SELECTION TOGGLE^2981215.143519^
"KRN",9.2,463,1,0)
^^14^14^2981230^^
"KRN",9.2,463,1,1,0)
 
"KRN",9.2,463,1,2,0)
The Zoom Selection Toggle is used to 'zoom' in on a group of messages that
"KRN",9.2,463,1,3,0)
have been selected for subsequent group action. Using this action code
"KRN",9.2,463,1,4,0)
allows you to just display those selected messages and not the entire list
"KRN",9.2,463,1,5,0)
of messages in the mail basket. This can be useful when you have a long
"KRN",9.2,463,1,6,0)
list of messages and have selected messages throughout the entire list.
"KRN",9.2,463,1,7,0)
 
"KRN",9.2,463,1,8,0)
In order to use the Zoom Selection Toggle, you must have first selected at
"KRN",9.2,463,1,9,0)
least one message in the list of messages. When you have selected a
"KRN",9.2,463,1,10,0)
message, a right-angle bracket ('>') is displayed to the left of the
"KRN",9.2,463,1,11,0)
selected message in the list.
"KRN",9.2,463,1,12,0)
 
"KRN",9.2,463,1,13,0)
To zoom in on just the selected messages (and zoom out again), you enter
"KRN",9.2,463,1,14,0)
'Z' after the 'Enter message number or command:' prompt.
"KRN",9.2,463,2,0)
^9.22A^^0
"KRN",9.2,464,-1)
0^127
"KRN",9.2,464,0)
XM-U-B-OPPOSITE TOGGLE^OPPOSITE SELECTION TOGGLE^2981215.143927^
"KRN",9.2,464,1,0)
^^20^20^2981230^^
"KRN",9.2,464,1,1,0)
 
"KRN",9.2,464,1,2,0)
You can use the Opposite Selection Toggle action code (i.e., 'O') to
"KRN",9.2,464,1,3,0)
reverse or choose the opposite of your selected messages in a list of
"KRN",9.2,464,1,4,0)
messages that have been selected for subsequent group action. 
"KRN",9.2,464,1,5,0)
 
"KRN",9.2,464,1,6,0)
Using this action code allows you to simply select unselected
"KRN",9.2,464,1,7,0)
messages and deselect previously selected messages. This can be useful
"KRN",9.2,464,1,8,0)
when you have a long list of messages and the majority of the messages
"KRN",9.2,464,1,9,0)
will undergo the same action. It's easier to select a smaller group that
"KRN",9.2,464,1,10,0)
won't be changing, and then, using the Opposite Selection Toggle, to
"KRN",9.2,464,1,11,0)
reverse your selection and perform the action on the majority of the
"KRN",9.2,464,1,12,0)
opposite messages in the message list.
"KRN",9.2,464,1,13,0)
 
"KRN",9.2,464,1,14,0)
In order to use the Opposite Selection Toggle, you must have first
"KRN",9.2,464,1,15,0)
selected at least one message in the list of messages. When you have
"KRN",9.2,464,1,16,0)
successfully selected a message, a right-angle bracket ('>') is displayed
"KRN",9.2,464,1,17,0)
to the left of the selected message in the list.
"KRN",9.2,464,1,18,0)
 
"KRN",9.2,464,1,19,0)
To toggle from the selected messages to the unselected messages (and vice
"KRN",9.2,464,1,20,0)
versa), you enter 'O' after the 'Enter message number or command:' prompt.
"KRN",9.2,464,2,0)
^9.22A^^0
"KRN",9.2,465,-1)
0^122
"KRN",9.2,465,0)
XM-U-B-CHANGE DETAIL^CHANGE DETAIL^2990114.1253^^
"KRN",9.2,465,1,0)
^^16^16^2990114^^^
"KRN",9.2,465,1,1,0)
 
"KRN",9.2,465,1,2,0)
When viewing a list of messages using either the Summary or Detailed Full
"KRN",9.2,465,1,3,0)
Screen message reader, you can use the Change Detail action code (i.e.,
"KRN",9.2,465,1,4,0)
'CD') to toggle between the [SUMMARY] and [DETAILED] Full Screen message
"KRN",9.2,465,1,5,0)
readers list of messages. Simply entering the Change Detail ('CD') command
"KRN",9.2,465,1,6,0)
at the 'Enter message number or command:' prompt causes the message reader
"KRN",9.2,465,1,7,0)
to toggle.
"KRN",9.2,465,1,8,0)
 
"KRN",9.2,465,1,9,0)
Depending on which message reader you've selected (i.e., Detailed or
"KRN",9.2,465,1,10,0)
Summary Full Screen), this command either removes several columns from the
"KRN",9.2,465,1,11,0)
display giving the remaining columns space to display more information in
"KRN",9.2,465,1,12,0)
a more streamlined fashion or adds several columns from the display giving
"KRN",9.2,465,1,13,0)
you more information about each message.
"KRN",9.2,465,1,14,0)
 
"KRN",9.2,465,1,15,0)
To change detail, enter a 'CD' after the 'Enter message number or
"KRN",9.2,465,1,16,0)
command:' prompt.
"KRN",9.2,465,2,0)
^9.22^2^2
"KRN",9.2,465,2,1,0)
DETAILED^XM-U-B-READER DETAILED
"KRN",9.2,465,2,2,0)
SUMMARY^XM-U-B-READER SUMMARY
"KRN",9.2,466,-1)
0^120
"KRN",9.2,466,0)
XM-U-B-BASKET NAME CHANGE^CHANGE A MAIL BASKET NAME^2990120.1229^^
"KRN",9.2,466,1,0)
^^8^8^2990120^^^
"KRN",9.2,466,1,1,0)
 
"KRN",9.2,466,1,2,0)
The Change Basket action code (i.e., 'C') allows you to rename the mail
"KRN",9.2,466,1,3,0)
basket you are currently processing to any [VALID] mail basket name.
"KRN",9.2,466,1,4,0)
However, you are not allowed to change the 'WASTE' or 'IN' mail basket
"KRN",9.2,466,1,5,0)
names.
"KRN",9.2,466,1,6,0)
 
"KRN",9.2,466,1,7,0)
To change a mail basket name, enter a 'C' at the 'Enter message number or
"KRN",9.2,466,1,8,0)
command:' prompt.
"KRN",9.2,466,2,0)
^9.22^1^1
"KRN",9.2,466,2,1,0)
VALID^XM-U-B-BASKET NAME
"KRN",9.2,467,-1)
0^134
"KRN",9.2,467,0)
XM-U-B-READER DIFF-3^BASKET ACTION CODES (CONTINUED)^2990319.1351^^
"KRN",9.2,467,1,0)
^^15^15^2990319^^^^
"KRN",9.2,467,1,1,0)
 
"KRN",9.2,467,1,2,0)
Available only with the Classic message reader, are the following basket
"KRN",9.2,467,1,3,0)
action codes:
"KRN",9.2,467,1,4,0)
 
"KRN",9.2,467,1,5,0)
 ?               View a summary listing of messages in a basket.
"KRN",9.2,467,1,6,0)
 
"KRN",9.2,467,1,7,0)
 ??              View a detailed listing of messages in a basket.
"KRN",9.2,467,1,8,0)
 
"KRN",9.2,467,1,9,0)
 ???? or ?HELP   Display detailed help.        
"KRN",9.2,467,1,10,0)
 
"KRN",9.2,467,1,11,0)
 I               Ignore the default message to be read and make the
"KRN",9.2,467,1,12,0)
                 next message in the basket the default.
"KRN",9.2,467,1,13,0)

"KRN",9.2,467,1,14,0)
For the commands which act on one or more messages, you must specify a [RANGE]
"KRN",9.2,467,1,15,0)
of messages after entering the command. 
"KRN",9.2,467,2,0)
^9.22^3^1
"KRN",9.2,467,2,3,0)
RANGE^XM-U-M-CHOOSE RANGE
"KRN",9.2,468,-1)
0^105
"KRN",9.2,468,0)
XM-I-S-SITE PARAMETERS^MAILMAN SITE PARAMETERS FILE^2990120.1014^^
"KRN",9.2,468,1,0)
^^16^16^2990120^^^
"KRN",9.2,468,1,1,0)
 
"KRN",9.2,468,1,2,0)
The MAILMAN SITE PARAMETERS file (#4.3) was once the KERNEL SITE PARAMETERS
"KRN",9.2,468,1,3,0)
file (#4.3).
"KRN",9.2,468,1,4,0)
 
"KRN",9.2,468,1,5,0)
IRM should be aware of the following MailMan Site Parameters:
"KRN",9.2,468,1,6,0)
 
"KRN",9.2,468,1,7,0)
  1. Use [BIG GROUP SIZE] field (#7.2) to indicate when a mail group is
"KRN",9.2,468,1,8,0)
     considered 'large.'
"KRN",9.2,468,1,9,0)
 
"KRN",9.2,468,1,10,0)
  2. Use the [P-MESSAGE LINE LIMIT] field (#16.1) to set the maximum
"KRN",9.2,468,1,11,0)
     number of lines that can be written to the [P-MESSAGE] device.
"KRN",9.2,468,1,12,0)
 
"KRN",9.2,468,1,13,0)
  3. Use the [MAX DIGITS FOR MESSAGE NUMBER] field (#17.1) to set the max
"KRN",9.2,468,1,14,0)
     number of digits that can comprise a MailMan internal message
"KRN",9.2,468,1,15,0)
     identification number before they recycle back and start again from
"KRN",9.2,468,1,16,0)
     100,000.
"KRN",9.2,468,2,0)
^9.22A^3^3
"KRN",9.2,468,2,1,0)
BIG GROUP SIZE^XM-I-S-BIG GROUP SIZE
"KRN",9.2,468,2,2,0)
P-MESSAGE LINE LIMIT^XM-I-S-MESSAGE LINE LIMIT
"KRN",9.2,468,2,3,0)
MAX DIGITS FOR MESSAGE NUMBER^XM-I-S-MAX DIGITS FOR MSG NUM
"KRN",9.2,469,-1)
0^103
"KRN",9.2,469,0)
XM-I-S-BIG GROUP SIZE^BIG GROUP SIZE FIELD^2990629.1307^
"KRN",9.2,469,1,0)
^^36^36^2990629^^^
"KRN",9.2,469,1,1,0)
 
"KRN",9.2,469,1,2,0)
When addressing messages to mail groups, mail groups can be classified as
"KRN",9.2,469,1,3,0)
'large' (site-specified) and processed differently from 'small-' to
"KRN",9.2,469,1,4,0)
'medium-sized' mail groups. A mail group may be considered 'large' when it
"KRN",9.2,469,1,5,0)
has any of the following:
"KRN",9.2,469,1,6,0)
 
"KRN",9.2,469,1,7,0)
  * A large number of local and remote members.
"KRN",9.2,469,1,8,0)
 
"KRN",9.2,469,1,9,0)
  * At least one or more member groups.
"KRN",9.2,469,1,10,0)
 
"KRN",9.2,469,1,11,0)
  * At least one or more distribution lists.
"KRN",9.2,469,1,12,0)
 
"KRN",9.2,469,1,13,0)
The BIG GROUP SIZE (Field #7.2) in the MAILMAN SITE PARAMETERS file (#4.3)
"KRN",9.2,469,1,14,0)
allows IRM to set the number used to indicate when a mail group is
"KRN",9.2,469,1,15,0)
considered 'large.' This helps eliminate the 'dots of death' when
"KRN",9.2,469,1,16,0)
addressing mail to a large group.
"KRN",9.2,469,1,17,0)
 
"KRN",9.2,469,1,18,0)
IRM can populate this field with a number ranging from 50 to 10,000 (no
"KRN",9.2,469,1,19,0)
decimal points). There is no default for this field. If BIG GROUP SIZE
"KRN",9.2,469,1,20,0)
equates to zero, then groups are processed in the foreground, as usual.
"KRN",9.2,469,1,21,0)
 
"KRN",9.2,469,1,22,0)
If IRM populates this field and if the group being addressed contains any
"KRN",9.2,469,1,23,0)
member groups, or distribution lists, or the number of local members plus
"KRN",9.2,469,1,24,0)
remote members exceeds or equals the BIG GROUP SIZE, then the user is
"KRN",9.2,469,1,25,0)
asked whether or not they want to queue the group for [LATER] delivery and
"KRN",9.2,469,1,26,0)
avoid waiting while the group is processed. The user is also warned that
"KRN",9.2,469,1,27,0)
if they choose to queue the delivery, then recipients cannot be 'minused'
"KRN",9.2,469,1,28,0)
from the group.
"KRN",9.2,469,1,29,0)
 
"KRN",9.2,469,1,30,0)
If the user chooses to queue the delivery to the group, they are asked
"KRN",9.2,469,1,31,0)
when the delivery should take place. The group will be queued for
"KRN",9.2,469,1,32,0)
processing and delivery at the specified date and time by the same
"KRN",9.2,469,1,33,0)
background job that 'news' messages.
"KRN",9.2,469,1,34,0)
 
"KRN",9.2,469,1,35,0)
If the user chooses not to queue the delivery to the group, then
"KRN",9.2,469,1,36,0)
processing proceeds in the foreground, as usual.
"KRN",9.2,469,2,0)
^9.22A^1^1
"KRN",9.2,469,2,1,0)
LATER^XM-U-M-TRANSMIT LATER
"KRN",9.2,470,-1)
0^104
"KRN",9.2,470,0)
XM-I-S-MESSAGE LINE LIMIT^P-MESSAGE LINE LIMIT FIELD^2981216.095457^
"KRN",9.2,470,1,0)
^^21^21^2981230^^
"KRN",9.2,470,1,1,0)
 
"KRN",9.2,470,1,2,0)
The P-MESSAGE LINE LIMIT field (#16.1), in the MAILMAN SITE PARAMETERS
"KRN",9.2,470,1,3,0)
file (#4.3), allows IRM to set the maximum number of lines that can be
"KRN",9.2,470,1,4,0)
written to the [P-MESSAGE] device. This helps MailMan to operate more
"KRN",9.2,470,1,5,0)
efficiently when using the P-MESSAGE device.
"KRN",9.2,470,1,6,0)
 
"KRN",9.2,470,1,7,0)
IRM can populate this field with a number ranging from 2000 to 9,999,999
"KRN",9.2,470,1,8,0)
(no decimal points). There is no default for this field.
"KRN",9.2,470,1,9,0)
 
"KRN",9.2,470,1,10,0)
If this field is null, there is no limit set when writing to the P-MESSAGE
"KRN",9.2,470,1,11,0)
device.
"KRN",9.2,470,1,12,0)
 
"KRN",9.2,470,1,13,0)
If a value is entered into this field, the number of lines written to the
"KRN",9.2,470,1,14,0)
P-MESSAGE device is limited to that value. If the number of lines exceeds
"KRN",9.2,470,1,15,0)
this value, MailMan will truncate the report when it reaches the maximum
"KRN",9.2,470,1,16,0)
number of lines and puts the following message (between lines of
"KRN",9.2,470,1,17,0)
asterisks) at the end of the message text:
"KRN",9.2,470,1,18,0)
 
"KRN",9.2,470,1,19,0)
    *******************************************************************
"KRN",9.2,470,1,20,0)
    P-MESSAGE line limit of nnnn reached.  Rest of file ignored.
"KRN",9.2,470,1,21,0)
    *******************************************************************
"KRN",9.2,470,2,0)
^9.22A^1^1
"KRN",9.2,470,2,1,0)
P-MESSAGE^XM-U-M-PRINT DEVICE P-MESSAGE
"KRN",9.2,471,-1)
0^102
"KRN",9.2,471,0)
XM-I-S-MAX DIGITS FOR MSG NUM^MAX DIGITS FOR MESSAGE NUMBER FIELD^2981216.095811^
"KRN",9.2,471,1,0)
^^61^61^2981230^^
"KRN",9.2,471,1,1,0)
 
"KRN",9.2,471,1,2,0)
MailMan can reuse/recycle internal message identification numbers when
"KRN",9.2,471,1,3,0)
creating messages. Thus, MailMan can avoid creating huge message numbers,
"KRN",9.2,471,1,4,0)
making them more manageable in size.
"KRN",9.2,471,1,5,0)
 
"KRN",9.2,471,1,6,0)
The MAX DIGITS FOR MESSAGE NUMBER field (#17.1),in the MAILMAN SITE
"KRN",9.2,471,1,7,0)
PARAMETERS file (#4.3), allows IRM to set the maximum number of digits
"KRN",9.2,471,1,8,0)
that can comprise a MailMan internal message identification number before
"KRN",9.2,471,1,9,0)
they recycle back and start again from 100,000.
"KRN",9.2,471,1,10,0)
 
"KRN",9.2,471,1,11,0)
NOTE: MailMan internal message identification numbers start at 100,000
"KRN",9.2,471,1,12,0)
      to avoid any confusion between message numbers and message
"KRN",9.2,471,1,13,0)
      sequence numbers in baskets.
"KRN",9.2,471,1,14,0)
 
"KRN",9.2,471,1,15,0)
IRM can populate this field with a number ranging from 7 to 14 (no decimal
"KRN",9.2,471,1,16,0)
points). If this field is left null, the default will be eight digits.
"KRN",9.2,471,1,17,0)
 
"KRN",9.2,471,1,18,0)
If the MailMan internal message identification number exceeds the number
"KRN",9.2,471,1,19,0)
of digits stored in this field, the message number will recycle back to
"KRN",9.2,471,1,20,0)
the next vacant message number after 999999.
"KRN",9.2,471,1,21,0)
 
"KRN",9.2,471,1,22,0)
If MailMan is not able to find a vacant message number less than the
"KRN",9.2,471,1,23,0)
allowable number (i.e., value stored in the MAX DIGITS FOR MESSAGE NUMBER
"KRN",9.2,471,1,24,0)
field), then MailMan will take the next available message number, no
"KRN",9.2,471,1,25,0)
matter how many digits it has, and automatically change this field to
"KRN",9.2,471,1,26,0)
reflect the new maximum. Thus, it is very important that the unreferenced
"KRN",9.2,471,1,27,0)
messages purge and/or date purge be run on a regular basis.
"KRN",9.2,471,1,28,0)
 
"KRN",9.2,471,1,29,0)
 
"KRN",9.2,471,1,30,0)
OTHER RELATED FIELDS:
"KRN",9.2,471,1,31,0)
 
"KRN",9.2,471,1,32,0)
Because of the MAX DIGITS FOR MESSAGE NUMBER field, the purge routines
"KRN",9.2,471,1,33,0)
operate off the LOCAL CREATE DATE field (#31), in the MAIL BOX file (#3.9)
"KRN",9.2,471,1,34,0)
and its 'C' cross-reference.
"KRN",9.2,471,1,35,0)
 
"KRN",9.2,471,1,36,0)
This field is set with the current date (no time) when a new message stub
"KRN",9.2,471,1,37,0)
is created. (For locally created messages, this will usually, but not
"KRN",9.2,471,1,38,0)
necessarily, be the same as the date sent. For incoming messages from
"KRN",9.2,471,1,39,0)
remote sites, this acts as a 'date-received' stamp.)
"KRN",9.2,471,1,40,0)
 
"KRN",9.2,471,1,41,0)
The date purge routine runs faster, because it has an appropriate
"KRN",9.2,471,1,42,0)
cross-reference to work with.
"KRN",9.2,471,1,43,0)
 
"KRN",9.2,471,1,44,0)
Other fields in Files #3.7 and #4.3, that refer to date include:
"KRN",9.2,471,1,45,0)
 
"KRN",9.2,471,1,46,0)
  MAIL BOX File (#3.7):
"KRN",9.2,471,1,47,0)
 
"KRN",9.2,471,1,48,0)
  Field Number   Field Before Patch 50       Field After Patch 50
"KRN",9.2,471,1,49,0)
  ------------   -----------------------     --------------------
"KRN",9.2,471,1,50,0)
  3.7,1.2        MESSAGE @ REINSTATEMENT     DATE @ REINSTATEMENT
"KRN",9.2,471,1,51,0)
 
"KRN",9.2,471,1,52,0)
 
"KRN",9.2,471,1,53,0)
  MAILMAN SITE PARAMETERS File (#4.3):
"KRN",9.2,471,1,54,0)
 
"KRN",9.2,471,1,55,0)
  Field Number   Field Before Patch 50       Field After Patch 50
"KRN",9.2,471,1,56,0)
  ------------   ------------------------    --------------------
"KRN",9.2,471,1,57,0)
  4.3,4.301      NO-PURGE MESSAGES BUFFER    NO-PURGE DAYS BUFFER
"KRN",9.2,471,1,58,0)
  4.302,3        FIRST MESSAGE TO PROCESS    START PURGE DATE
"KRN",9.2,471,1,59,0)
  4.302,4        LAST MESSAGE TO PROCESS     STOP PURGE DATE
"KRN",9.2,471,1,60,0)
  4.302,8        LAST MESSAGE PROCESSED      LAST DATE PROCESSED
"KRN",9.2,471,1,61,0)
  4.3,4.304      WEEKDAY MESSAGES TO PURGE   WEEKDAY DAYS TO PURGE
"KRN",9.2,472,-1)
0^272
"KRN",9.2,472,0)
XM-U-P-OPTIONS-2^PERSONAL PREFERENCES (CONTINUED)^2981216.101907^
"KRN",9.2,472,1,0)
^^18^18^2990108^
"KRN",9.2,472,1,1,0)
 
"KRN",9.2,472,1,2,0)
  * MESSAGE [ACTION DEFAULT] - Choose your default message action for the
"KRN",9.2,472,1,3,0)
    'IN' basket (e.g., ignore or delete messages).
"KRN",9.2,472,1,4,0)
 
"KRN",9.2,472,1,5,0)
  * [ASK BASKET] - Decide whether you want to be prompted each time to
"KRN",9.2,472,1,6,0)
    choose a mail basket whenever you send yourself e-mail.
"KRN",9.2,472,1,7,0)
 
"KRN",9.2,472,1,8,0)
  * [SHOW TITLES] - Enter or edit your option to display a sender's title.
"KRN",9.2,472,1,9,0)
 
"KRN",9.2,472,1,10,0)
  * PRIORITY RESPONSES [FLAG] - Choose if you want to have responses to
"KRN",9.2,472,1,11,0)
    priority mail automatically delivered to you as priority or ordinary
"KRN",9.2,472,1,12,0)
    responses.
"KRN",9.2,472,1,13,0)
 
"KRN",9.2,472,1,14,0)
  * PRIORITY RESPONSES [PROMPT] - Choose if you want to be prompted each
"KRN",9.2,472,1,15,0)
    time to decide how future responses to a priority message are
"KRN",9.2,472,1,16,0)
    delivered to you.
"KRN",9.2,472,1,17,0)
 
"KRN",9.2,472,1,18,0)
[MORE]...
"KRN",9.2,472,2,0)
^9.22A^6^6
"KRN",9.2,472,2,1,0)
MORE^XM-U-P-OPTIONS-3
"KRN",9.2,472,2,2,0)
ACTION DEFAULT^XM-U-P-MESSAGE ACTION DEFAULT
"KRN",9.2,472,2,3,0)
ASK BASKET^XM-U-P-ASK BASKET
"KRN",9.2,472,2,4,0)
SHOW TITLES^XM-U-P-SHOW TITLES
"KRN",9.2,472,2,5,0)
FLAG^XM-U-P-PRIORITY FLAG
"KRN",9.2,472,2,6,0)
PROMPT^XM-U-P-PRIORITY PROMPT
"KRN",9.2,473,-1)
0^273
"KRN",9.2,473,0)
XM-U-P-OPTIONS-3^PERSONAL PREFERENCES (CONTINUED)^2981216.10203^
"KRN",9.2,473,1,0)
^^13^13^2981230^^
"KRN",9.2,473,1,1,0)
 
"KRN",9.2,473,1,2,0)
  * MAILMAN [INSTITUTION] - Enter or edit your MailMan institution.
"KRN",9.2,473,1,3,0)
 
"KRN",9.2,473,1,4,0)
  * [NETWORK SIGNATURE] - Enter or edit your Network Signature (three
"KRN",9.2,473,1,5,0)
    lines), required when [ANSWERING] messages.
"KRN",9.2,473,1,6,0)
 
"KRN",9.2,473,1,7,0)
  * [INTRODUCTION] - Enter or edit your MailMan introduction.
"KRN",9.2,473,1,8,0)
 
"KRN",9.2,473,1,9,0)
  * PREFERRED [EDITOR] - Choose your preferred MailMan editor when sending
"KRN",9.2,473,1,10,0)
    new or responding to messages.
"KRN",9.2,473,1,11,0)
 
"KRN",9.2,473,1,12,0)
  * [OFFICE INFORMATION] - Enter or edit your office information (e.g.,
"KRN",9.2,473,1,13,0)
    business address, telephones, etc.).
"KRN",9.2,473,2,0)
^9.22A^6^6
"KRN",9.2,473,2,1,0)
INSTITUTION^XM-U-P-INSTITUTION
"KRN",9.2,473,2,2,0)
NETWORK SIGNATURE^XM-U-P-NETWORK SIGNATURE
"KRN",9.2,473,2,3,0)
INTRODUCTION^XM-U-P-INTRODUCTION
"KRN",9.2,473,2,4,0)
EDITOR^XM-U-P-EDITOR
"KRN",9.2,473,2,5,0)
OFFICE INFORMATION^XM-U-P-OFFICE INFO
"KRN",9.2,473,2,6,0)
ANSWERING^XM-U-M-ANSWER
"KRN",9.2,474,-1)
0^114
"KRN",9.2,474,0)
XM-U-A-LOCAL USER NAME^ENTERING A LOCAL USER'S NAME IN MAILMAN^2990121.083^^
"KRN",9.2,474,1,0)
^^19^19^2990121^^
"KRN",9.2,474,1,1,0)
 
"KRN",9.2,474,1,2,0)
Local users can be selected by last name, initials, or nickname (often the
"KRN",9.2,474,1,3,0)
first name). 
"KRN",9.2,474,1,4,0)
 
"KRN",9.2,474,1,5,0)
When entering a local user name, MailMan only requires that you enter the
"KRN",9.2,474,1,6,0)
first portion of the last name (user names are not case sensitive);
"KRN",9.2,474,1,7,0)
MailMan will find the appropriate person based on your partial entry and
"KRN",9.2,474,1,8,0)
automatically display the rest of the name to you. If more than one person
"KRN",9.2,474,1,9,0)
is found based on your partial entry, MailMan will allow you to choose
"KRN",9.2,474,1,10,0)
from a list. However, you'll narrow your choices by entering more
"KRN",9.2,474,1,11,0)
characters of the name.
"KRN",9.2,474,1,12,0)

"KRN",9.2,474,1,13,0)
You can get detailed [INFORMATION] about a user in two ways:
"KRN",9.2,474,1,14,0)

"KRN",9.2,474,1,15,0)
  * From the mail MailMan menu, select Help!User Information.
"KRN",9.2,474,1,16,0)

"KRN",9.2,474,1,17,0)
  * At the 'And Send to:' prompt, enter ??, then select User Information.
"KRN",9.2,474,1,18,0)
 
"KRN",9.2,474,1,19,0)
[MORE]... 
"KRN",9.2,474,2,0)
^9.22^7^2
"KRN",9.2,474,2,6,0)
MORE^XM-U-A-LOCAL USER NAME-2
"KRN",9.2,474,2,7,0)
INFORMATION^XM-U-H-USER
"KRN",9.2,475,-1)
0^285
"KRN",9.2,475,0)
XM-U-Q-REMOTE USER NAME^ENTERING A REMOTE USER'S NAME WHEN FILTERING OR SEARCHING MAIL^2981217.080449^
"KRN",9.2,475,1,0)
^^21^21^2981230^^^^
"KRN",9.2,475,1,1,0)
 
"KRN",9.2,475,1,2,0)
When entering the name of a user at a remote location (not located at your
"KRN",9.2,475,1,3,0)
site) for filtering or searching for mail, do any of the following:
"KRN",9.2,475,1,4,0)
 
"KRN",9.2,475,1,5,0)
  * Enter any portion of the remote user's name (not case sensitive)
"KRN",9.2,475,1,6,0)
    followed by the at-sign ('@' Shift-2 key on most keyboards, i.e.,
"KRN",9.2,475,1,7,0)
    name@). The name string entered must be from 1 to 45 characters in
"KRN",9.2,475,1,8,0)
    length (not case sensitive).
"KRN",9.2,475,1,9,0)
 
"KRN",9.2,475,1,10,0)
  * Enter any portion of the remote user's name (not case sensitive),
"KRN",9.2,475,1,11,0)
    the at-sign ('@' Shift-2 key on most keyboards), and any portion of
"KRN",9.2,475,1,12,0)
    their domain name (not case sensitive, i.e., name@domain). The name
"KRN",9.2,475,1,13,0)
    and domain name strings entered must be from 1 to 45 characters in
"KRN",9.2,475,1,14,0)
    length (not case sensitive).
"KRN",9.2,475,1,15,0)
 
"KRN",9.2,475,1,16,0)
  * Enter the at-sign ('@' Shift-2 key on most keyboards) and any portion
"KRN",9.2,475,1,17,0)
    of their domain name (not case sensitive, i.e., @domain). The domain
"KRN",9.2,475,1,18,0)
    name string entered must be from 1 to 45 characters in length (not
"KRN",9.2,475,1,19,0)
    case sensitive).
"KRN",9.2,475,1,20,0)
 
"KRN",9.2,475,1,21,0)
NOTE: The more characters you provide, the narrower the search will be.
"KRN",9.2,477,-1)
0^108
"KRN",9.2,477,0)
XM-U-A-GROUP LARGE^ADDRESSING MAIL TO LARGE MAIL GROUPS^2990120.122^^
"KRN",9.2,477,1,0)
^^20^20^2990120^^
"KRN",9.2,477,1,1,0)
 
"KRN",9.2,477,1,2,0)
When addressing messages to mail groups, mail groups can be classified as
"KRN",9.2,477,1,3,0)
'large' (site-specified) and processed differently from 'small-' to
"KRN",9.2,477,1,4,0)
'medium-sized' mail groups. A mail group may be considered 'large' when it has
"KRN",9.2,477,1,5,0)
a large number of local and remote members, member groups, or distribution
"KRN",9.2,477,1,6,0)
lists (nationwide mail groups). IRM sets the number used to indicate when a
"KRN",9.2,477,1,7,0)
mail group is considered 'large' (i.e., [BIG GROUP SIZE] field). 
"KRN",9.2,477,1,8,0)
 
"KRN",9.2,477,1,9,0)
If you address a message to a 'large' mail group, MailMan gives you the
"KRN",9.2,477,1,10,0)
opportunity to queue (i.e., [LATER]) the message for delivery to that group at
"KRN",9.2,477,1,11,0)
a later date and time (background processing). Thus, you don't have to wait
"KRN",9.2,477,1,12,0)
while all members of the mail group are added to the recipient list (i.e., you
"KRN",9.2,477,1,13,0)
avoid the 'dots of death') and you are not prevented from taking other actions.
"KRN",9.2,477,1,14,0)
 
"KRN",9.2,477,1,15,0)
Addressing a message to a 'small-' or 'medium-sized' mail group is processed in
"KRN",9.2,477,1,16,0)
the foreground as usual. Also, if you choose to 'Later' a message to a 'large'
"KRN",9.2,477,1,17,0)
mail group, you will not be able to remove (minus) members from the group
"KRN",9.2,477,1,18,0)
before sending the message. 
"KRN",9.2,477,1,19,0)
 
"KRN",9.2,477,1,20,0)
[MORE]... 
"KRN",9.2,477,2,0)
^9.22A^3^3
"KRN",9.2,477,2,1,0)
BIG GROUP SIZE^XM-I-S-BIG GROUP SIZE
"KRN",9.2,477,2,2,0)
LATER^XM-U-M-TRANSMIT LATER
"KRN",9.2,477,2,3,0)
MORE^XM-U-A-GROUP LARGE-2
"KRN",9.2,481,-1)
0^279
"KRN",9.2,481,0)
XM-U-P-READER PROMPT^MESSAGE READER PROMPT^2981222.111015^
"KRN",9.2,481,1,0)
^^15^15^2990201^
"KRN",9.2,481,1,1,0)
 
"KRN",9.2,481,1,2,0)
Once you have decided on a message reader, you can specify whether the
"KRN",9.2,481,1,3,0)
reader you just chose should be used all the time or whether you want to
"KRN",9.2,481,1,4,0)
be asked each time you use the [READ]/Manage Messages option.
"KRN",9.2,481,1,5,0)
 
"KRN",9.2,481,1,6,0)
Use the User Options Edit option on the Personal Preferences menu and
"KRN",9.2,481,1,7,0)
Press the Return/Enter key until you reach the the 'MESSAGE READER
"KRN",9.2,481,1,8,0)
PROMPT:' question. The default for this prompt is 'Yes, ask me.' By
"KRN",9.2,481,1,9,0)
answering 'No' to this prompt, you avoid being asked each time to choose a
"KRN",9.2,481,1,10,0)
MailMan message reader when reading your messages.
"KRN",9.2,481,1,11,0)
 
"KRN",9.2,481,1,12,0)
For example, if you wish to use the Detailed Full Screen reader
"KRN",9.2,481,1,13,0)
exclusively, set the MESSAGE READER to 'Detailed Full Screen' and the
"KRN",9.2,481,1,14,0)
MESSAGE READER PROMPT to 'No, don't ask me, just use the default' via the
"KRN",9.2,481,1,15,0)
User Options Edit option.
"KRN",9.2,481,2,0)
^9.22A^1^1
"KRN",9.2,481,2,1,0)
READ^XM-U-R-READ
"KRN",9.2,482,-1)
0^304
"KRN",9.2,482,0)
XM-U-R-NEW READ^READ NEW MAIL BY BASKET^2981223.113516^
"KRN",9.2,482,1,0)
^^18^18^2990505^
"KRN",9.2,482,1,1,0)
 
"KRN",9.2,482,1,2,0)
You can read all of your new mail basket by basket when you choose the
"KRN",9.2,482,1,3,0)
Read new mail by basket option. This is the default. When you have new
"KRN",9.2,482,1,4,0)
mail in more than one [BASKET], MailMan will ask you to choose from which
"KRN",9.2,482,1,5,0)
basket you wish to begin reading your mail.
"KRN",9.2,482,1,6,0)
 
"KRN",9.2,482,1,7,0)
When you have read all your mail in one basket and still have new mail in
"KRN",9.2,482,1,8,0)
other mail baskets, MailMan will prompt you to choose another mail basket
"KRN",9.2,482,1,9,0)
to continue reading your new mail. If you only had new mail in one basket,
"KRN",9.2,482,1,10,0)
MailMan would immediately begin displaying your first new message in that
"KRN",9.2,482,1,11,0)
one basket. It would continue to display all subsequent new messages in
"KRN",9.2,482,1,12,0)
that basket until all new messages have been read or you quit that option
"KRN",9.2,482,1,13,0)
by entering an up-arrow ('^' Shift-6 key on most keyboards) at the message
"KRN",9.2,482,1,14,0)
option prompt.
"KRN",9.2,482,1,15,0)
 
"KRN",9.2,482,1,16,0)
As the default, MailMan will start processing new mail in your "IN"
"KRN",9.2,482,1,17,0)
basket. If you choose a basket other than "IN," MailMan "cycles" through
"KRN",9.2,482,1,18,0)
all new mail in all baskets in basket name order (alphabetically).
"KRN",9.2,482,2,0)
^9.22A^1^1
"KRN",9.2,482,2,1,0)
BASKET^XM-U-B-BASKET SELECT
"KRN",9.2,483,-1)
0^295
"KRN",9.2,483,0)
XM-U-R-NEW LIST BASKETS^LIST BASKETS WITH NEW MAIL^2981223.11375^
"KRN",9.2,483,1,0)
^^12^12^2990505^
"KRN",9.2,483,1,1,0)
 
"KRN",9.2,483,1,2,0)
You can list all of your mail baskets with new mail by choosing the List
"KRN",9.2,483,1,3,0)
Baskets with new mail option available with the New Messages and Responses
"KRN",9.2,483,1,4,0)
option.
"KRN",9.2,483,1,5,0)
 
"KRN",9.2,483,1,6,0)
MailMan will display a list of all of your mail baskets with new mail.
"KRN",9.2,483,1,7,0)
MailMan also tells you how many new messages reside in each mail basket.
"KRN",9.2,483,1,8,0)
With this information, you can choose another new mail option to read your
"KRN",9.2,483,1,9,0)
new mail (e.g., Read new mail by basket option).
"KRN",9.2,483,1,10,0)
 
"KRN",9.2,483,1,11,0)
To list baskets with new mail, enter an 'LB' after the 'Select New mail
"KRN",9.2,483,1,12,0)
option: Read new mail by basket//' prompt.
"KRN",9.2,484,-1)
0^294
"KRN",9.2,484,0)
XM-U-R-NEW LIST ALL^LIST ALL NEW MESSAGES^2990114.1012^^
"KRN",9.2,484,1,0)
^^14^14^2990114^^^
"KRN",9.2,484,1,1,0)
 
"KRN",9.2,484,1,2,0)
You can list all of your new mail in your mailbox, regardless of the mail
"KRN",9.2,484,1,3,0)
basket, when you choose the List all new messages option available with
"KRN",9.2,484,1,4,0)
the New Messages and Responses option.
"KRN",9.2,484,1,5,0)
 
"KRN",9.2,484,1,6,0)
MailMan displays [DETAILED] information on each message using the Full Screen
"KRN",9.2,484,1,7,0)
message reader.
"KRN",9.2,484,1,8,0)
 
"KRN",9.2,484,1,9,0)
To list all new messages, enter an 'LN' after the 'Select New mail
"KRN",9.2,484,1,10,0)
option: Read new mail by basket//' prompt.
"KRN",9.2,484,1,11,0)
 
"KRN",9.2,484,1,12,0)
After displaying the list of new messages, MailMan asks you to enter a
"KRN",9.2,484,1,13,0)
message number or specific command at the 'Enter message number or
"KRN",9.2,484,1,14,0)
command:' prompt. You have several [OPTIONS].
"KRN",9.2,484,2,0)
^9.22A^5^2
"KRN",9.2,484,2,1,0)
OPTIONS^XM-U-BO-FULL SCREEN LIST
"KRN",9.2,484,2,5,0)
DETAILED^XM-U-B-READER DETAILED LIST
"KRN",9.2,485,-1)
0^296
"KRN",9.2,485,0)
XM-U-R-NEW LIST PRIORITY^LIST ALL PRIORITY MESSAGES^2990114.1037^^
"KRN",9.2,485,1,0)
^^21^21^2990114^^^
"KRN",9.2,485,1,1,0)
 
"KRN",9.2,485,1,2,0)
When MailMan delivers priority mail to your mailbox, you get a special
"KRN",9.2,485,1,3,0)
notification. For example, when first entering the MailMan Menu, MailMan
"KRN",9.2,485,1,4,0)
displays any new priority message(s) before displaying the MailMan Menu
"KRN",9.2,485,1,5,0)
and displays a message (i.e., 'There is PRIORITY Mail!'). As a further
"KRN",9.2,485,1,6,0)
highlight, all priority messages displayed to you in a list will be
"KRN",9.2,485,1,7,0)
preceded by an exclamation point.
"KRN",9.2,485,1,8,0)
 
"KRN",9.2,485,1,9,0)
You can list all of your priority mail in your mailbox, regardless of the
"KRN",9.2,485,1,10,0)
mail basket, when you choose the List all priority messages option
"KRN",9.2,485,1,11,0)
available with the New Messages and Responses option.
"KRN",9.2,485,1,12,0)
 
"KRN",9.2,485,1,13,0)
MailMan displays [DETAILED] information on each message.
"KRN",9.2,485,1,14,0)
After displaying the list of new messages, MailMan asks you to enter a
"KRN",9.2,485,1,15,0)
message number or specific command at the 'Enter message number or
"KRN",9.2,485,1,16,0)
command:' prompt. You have several [OPTIONS].
"KRN",9.2,485,1,17,0)
 
"KRN",9.2,485,1,18,0)
To list all priority messages, enter an 'LP' after the 'Select New mail
"KRN",9.2,485,1,19,0)
option: Read new mail by basket//' prompt. If you use this option and you
"KRN",9.2,485,1,20,0)
don't have any new priority messages, MailMan will display the following
"KRN",9.2,485,1,21,0)
message: 'You have no new Priority messages.'
"KRN",9.2,485,2,0)
^9.22A^2^2
"KRN",9.2,485,2,1,0)
DETAILED^XM-U-B-READER DETAILED LIST
"KRN",9.2,485,2,2,0)
OPTIONS^XM-U-BO-FULL SCREEN LIST
"KRN",9.2,486,-1)
0^297
"KRN",9.2,486,0)
XM-U-R-NEW PRINT^PRINT ALL NEW MESSAGES^2981223.115245^
"KRN",9.2,486,1,0)
^^19^19^2990107^
"KRN",9.2,486,1,1,0)
 
"KRN",9.2,486,1,2,0)
You can print all of your new mail in your mailbox, regardless of the mail
"KRN",9.2,486,1,3,0)
basket, when you choose the Print all new messages option available with
"KRN",9.2,486,1,4,0)
the New Messages and Responses option. MailMan prints each message with
"KRN",9.2,486,1,5,0)
print header information. This print information helps you differentiate:
"KRN",9.2,486,1,6,0)
 
"KRN",9.2,486,1,7,0)
  * Who - For whom was the message printed.
"KRN",9.2,486,1,8,0)
 
"KRN",9.2,486,1,9,0)
  * Where - At what location was the message printed.
"KRN",9.2,486,1,10,0)
 
"KRN",9.2,486,1,11,0)
  * When - When was the message printed as opposed to when it was sent.
"KRN",9.2,486,1,12,0)
 
"KRN",9.2,486,1,13,0)
To print all of your new mail, enter a 'P' after the 'Select New mail
"KRN",9.2,486,1,14,0)
option: Read new mail by basket//' prompt.
"KRN",9.2,486,1,15,0)
 
"KRN",9.2,486,1,16,0)
Pressing the Return/Enter key after each page tells MailMan to continue
"KRN",9.2,486,1,17,0)
printing your new messages in succession. To exit this option, before
"KRN",9.2,486,1,18,0)
you've finished printing all new messages, you must enter the up-arrow
"KRN",9.2,486,1,19,0)
('^' Shift-6 key on most keyboards).
"KRN",9.2,487,-1)
0^298
"KRN",9.2,487,0)
XM-U-R-NEW SCAN^SCAN ALL NEW MESSAGES^2981223.115329^
"KRN",9.2,487,1,0)
^^18^18^2981223^
"KRN",9.2,487,1,1,0)
 
"KRN",9.2,487,1,2,0)
Scanning your new messages is similar to [READING] your new messages by
"KRN",9.2,487,1,3,0)
basket. However, when scanning messages, you are not prompted between
"KRN",9.2,487,1,4,0)
baskets. You automatically pass from reading new messages in one basket to
"KRN",9.2,487,1,5,0)
reading the new messages in the next basket without any user prompts or
"KRN",9.2,487,1,6,0)
user action required between baskets.
"KRN",9.2,487,1,7,0)
 
"KRN",9.2,487,1,8,0)
You can scan all of your new mail in your mailbox, regardless of the mail
"KRN",9.2,487,1,9,0)
basket, when you choose the Scan all new messages option available with
"KRN",9.2,487,1,10,0)
the New Messages and Responses option.
"KRN",9.2,487,1,11,0)
 
"KRN",9.2,487,1,12,0)
To scan all of your new messages, enter an 'S' after the 'Select New mail
"KRN",9.2,487,1,13,0)
option: Read new mail by basket//' prompt.
"KRN",9.2,487,1,14,0)
 
"KRN",9.2,487,1,15,0)
As you continuously press the Return/Enter key, MailMan automatically
"KRN",9.2,487,1,16,0)
displays your new mail until there is no more new mail. If you want to
"KRN",9.2,487,1,17,0)
quit scanning your new mail before reaching the end, simply enter the
"KRN",9.2,487,1,18,0)
up-arrow ('^' Shift-6 key on most keyboards) to exit the option.
"KRN",9.2,487,2,0)
^9.22A^1^1
"KRN",9.2,487,2,1,0)
READING^XM-U-R-NEW READ
"KRN",9.2,489,-1)
0^131
"KRN",9.2,489,0)
XM-U-B-READER DETAILED LIST^DETAILED INFORMATION DISPLAYED WITH MESSAGE LISTS^2990114.1018^^
"KRN",9.2,489,1,0)
^^25^25^2990114^^^^
"KRN",9.2,489,1,1,0)
 
"KRN",9.2,489,1,2,0)
MailMan provides detailed information on each message when displaying a
"KRN",9.2,489,1,3,0)
message list. This information includes the following:
"KRN",9.2,489,1,4,0)
 
"KRN",9.2,489,1,5,0)
  * Flags - Any special flag associated with the message. For example:
"KRN",9.2,489,1,6,0)
    Priority (!) or New (*) flags.
"KRN",9.2,489,1,7,0)
 
"KRN",9.2,489,1,8,0)
  * Message Number - The number associated with the message (meaningful
"KRN",9.2,489,1,9,0)
    for this list only).
"KRN",9.2,489,1,10,0)
 
"KRN",9.2,489,1,11,0)
  * Basket - Basket containing the message (e.g., 'IN').
"KRN",9.2,489,1,12,0)
 
"KRN",9.2,489,1,13,0)
  * MailMan Internal Message Identification Number - The MailMan message
"KRN",9.2,489,1,14,0)
    number generated internally for the message (displayed in brackets).
"KRN",9.2,489,1,15,0)

"KRN",9.2,489,1,16,0)
  * Message Sent Date - The date the message was sent (i.e., day, month, year).
"KRN",9.2,489,1,17,0)
 
"KRN",9.2,489,1,18,0)
  * Subject - Subject of the message.
"KRN",9.2,489,1,19,0)
 
"KRN",9.2,489,1,20,0)
  * Lines - Number of lines of text in the message.
"KRN",9.2,489,1,21,0)
 
"KRN",9.2,489,1,22,0)
  * From - The name of the person who sent the message.
"KRN",9.2,489,1,23,0)
 
"KRN",9.2,489,1,24,0)
  * Read/Rcvd - Total number of responses read and received for that message.
"KRN",9.2,489,1,25,0)
    If there are no responses to a message, no totals will be indicated.
"KRN",9.2,489,2,0)
^9.22A^^0
"KRN",9.2,490,-1)
0^274
"KRN",9.2,490,0)
XM-U-P-PERSONAL PREFERENCES^PERSONAL PREFERENCES MENU^2981223.155129^
"KRN",9.2,490,1,0)
^^15^15^2990513^
"KRN",9.2,490,1,1,0)
 
"KRN",9.2,490,1,2,0)
The MailMan interface includes a Personal Preferences menu. It consists of
"KRN",9.2,490,1,3,0)
the following options:
"KRN",9.2,490,1,4,0)
 
"KRN",9.2,490,1,5,0)
  * [USER] Options Edit
"KRN",9.2,490,1,6,0)
  * [BANNER] Edit
"KRN",9.2,490,1,7,0)
  * [SURROGATE] Edit
"KRN",9.2,490,1,8,0)
  * Message [FILTER] Edit
"KRN",9.2,490,1,9,0)
  * [DELIVERY] Basket Edit
"KRN",9.2,490,1,10,0)
  * Enroll in (or Disenroll from) a [MAIL GROUP]
"KRN",9.2,490,1,11,0)
  * [PERSONAL] Mail Group Edit
"KRN",9.2,490,1,12,0)
  * [FORWARDING] Address Edit
"KRN",9.2,490,1,13,0)
 
"KRN",9.2,490,1,14,0)
To access this menu from the main MailMan Menu, enter 'Personal
"KRN",9.2,490,1,15,0)
Preferences' at the 'Select MailMan Menu Option:' prompt.
"KRN",9.2,490,2,0)
^9.22A^8^8
"KRN",9.2,490,2,1,0)
USER^XM-U-P-OPTIONS
"KRN",9.2,490,2,2,0)
BANNER^XM-U-P-BANNER
"KRN",9.2,490,2,3,0)
SURROGATE^XM-U-P-SURROGATE EDIT
"KRN",9.2,490,2,4,0)
FILTER^XM-U-P-FILTER
"KRN",9.2,490,2,5,0)
DELIVERY^XM-U-P-DELIVERY BASKET PRIV
"KRN",9.2,490,2,6,0)
MAIL GROUP^XM-U-P-GROUP ENROLL
"KRN",9.2,490,2,7,0)
FORWARDING^XM-U-P-FORWARDING ADDRESS
"KRN",9.2,490,2,8,0)
PERSONAL^XM-U-P-GROUP PERSONAL
"KRN",9.2,491,-1)
0^141
"KRN",9.2,491,0)
XM-U-BO-CLASSIC^CLASSIC READER BASKET MESSAGE ACTIONS^2990120.1517^^
"KRN",9.2,491,1,0)
^^21^21^2990427^
"KRN",9.2,491,1,1,0)
 
"KRN",9.2,491,1,2,0)
Enter ^ to exit, or press <Enter> to read the default message, or enter:
"KRN",9.2,491,1,3,0)
 
"KRN",9.2,491,1,4,0)
 ? or ??  See a [SUMMARY] or [DETAILED] list of messages in this basket,
"KRN",9.2,491,1,5,0)
          beginning with the default message.
"KRN",9.2,491,1,6,0)
 n        Read message n, where n is a sequence [NUMBER] in this basket or
"KRN",9.2,491,1,7,0)
          an internal message ID of any message on the system.
"KRN",9.2,491,1,8,0)
 
"KRN",9.2,491,1,9,0)
The following commands act on one or more messages in this basket. You
"KRN",9.2,491,1,10,0)
will be asked to specify a [RANGE] of messages after entering the command.
"KRN",9.2,491,1,11,0)
 
"KRN",9.2,491,1,12,0)
 [D]        Delete messages.
"KRN",9.2,491,1,13,0)
 [F]        Forward messages.
"KRN",9.2,491,1,14,0)
 [FI]       Filter messages.
"KRN",9.2,491,1,15,0)
 [L]        Later messages.
"KRN",9.2,491,1,16,0)
 [P] or [H]   Print messages with or without a header.
"KRN",9.2,491,1,17,0)
 [S]        Save messages to another basket.
"KRN",9.2,491,1,18,0)
 [T]        Terminate messages.
"KRN",9.2,491,1,19,0)
 [X]        Toggle transmit priority in remote message queues. (POSTMASTER only)
"KRN",9.2,491,1,20,0)
 
"KRN",9.2,491,1,21,0)
 [MORE]...
"KRN",9.2,491,2,0)
^9.22^14^14
"KRN",9.2,491,2,1,0)
D^XM-U-M-DELETE
"KRN",9.2,491,2,2,0)
F^XM-U-M-FORWARD
"KRN",9.2,491,2,3,0)
FI^XM-U-B-FILTER
"KRN",9.2,491,2,4,0)
H^XM-U-M-PRINT NO HEADER
"KRN",9.2,491,2,5,0)
L^XM-U-M-LATER
"KRN",9.2,491,2,6,0)
MORE^XM-U-BO-CLASSIC-2
"KRN",9.2,491,2,7,0)
NUMBER^XM-U-B-NAVIGATE CLASSIC
"KRN",9.2,491,2,8,0)
P^XM-U-M-PRINT
"KRN",9.2,491,2,9,0)
RANGE^XM-U-M-CHOOSE RANGE
"KRN",9.2,491,2,10,0)
S^XM-U-M-SAVE
"KRN",9.2,491,2,11,0)
T^XM-U-M-TERMINATE
"KRN",9.2,491,2,12,0)
X^XM-U-B-XMIT PRIORITY TOGGLE
"KRN",9.2,491,2,13,0)
DETAILED^XM-U-B-READER DETAILED
"KRN",9.2,491,2,14,0)
SUMMARY^XM-U-B-READER SUMMARY
"KRN",9.2,491,3,0)
^9.23A^1^1
"KRN",9.2,491,3,1,0)
XMJBM
"KRN",9.2,492,-1)
0^124
"KRN",9.2,492,0)
XM-U-B-NAVIGATE CLASSIC^READING A MESSAGE AND NAVIGATING IN THE CLASSIC READER^2981228.084^^
"KRN",9.2,492,1,0)
^^20^20^2990108^
"KRN",9.2,492,1,1,0)
 
"KRN",9.2,492,1,2,0)
There are several ways to read messages and navigate in the Classic Reader.
"KRN",9.2,492,1,3,0)
 
"KRN",9.2,492,1,4,0)
One is to just press <Enter> to read the default message presented to you
"KRN",9.2,492,1,5,0)
at the prompt. Once you've read it, the next message in the basket will
"KRN",9.2,492,1,6,0)
become the default.
"KRN",9.2,492,1,7,0)
 
"KRN",9.2,492,1,8,0)
You could also enter its sequence number to go directly to the message
"KRN",9.2,492,1,9,0)
you wish to read. Once you've read it, the next message after that will
"KRN",9.2,492,1,10,0)
become the default.
"KRN",9.2,492,1,11,0)
 
"KRN",9.2,492,1,12,0)
If you enter a sequence number that doesn't exist, the message whose
"KRN",9.2,492,1,13,0)
sequence number is closest to it becomes the default message.
"KRN",9.2,492,1,14,0)
 
"KRN",9.2,492,1,15,0)
You could also enter the internal message ID (the long number appearing in
"KRN",9.2,492,1,16,0)
brackets) of a message. Once you've read it, the next message after that
"KRN",9.2,492,1,17,0)
will become the default. If the message exists in another basket, you will
"KRN",9.2,492,1,18,0)
be moved from reading your current basket to reading the basket where the
"KRN",9.2,492,1,19,0)
message exists. If the message is not in any basket, but is still on the
"KRN",9.2,492,1,20,0)
system, it will be put in your basket, as the last message.
"KRN",9.2,493,-1)
0^142
"KRN",9.2,493,0)
XM-U-BO-CLASSIC-2^CLASSIC READER BASKET MESSAGE ACTIONS (CONTINUED)^2990319.1454^^
"KRN",9.2,493,1,0)
^^15^15^2990427^
"KRN",9.2,493,1,1,0)
 
"KRN",9.2,493,1,2,0)
Enter:
"KRN",9.2,493,1,3,0)
 
"KRN",9.2,493,1,4,0)
 [C]         Change the name of this basket.
"KRN",9.2,493,1,5,0)
   I         Ignore this message and go to the next one in this basket.
"KRN",9.2,493,1,6,0)
 [N]         List only the new messages in this basket.
"KRN",9.2,493,1,7,0)
 [Q]         Query (search for) messages in this basket.
"KRN",9.2,493,1,8,0)
 [R]         Resequence messages in this basket.
"KRN",9.2,493,1,9,0)
 
"KRN",9.2,493,1,10,0)
 ?string   Search for messages in this basket whose subject [CONTAINS]
"KRN",9.2,493,1,11,0)
           a certain keyword or phrase.
"KRN",9.2,493,1,12,0)
 
"KRN",9.2,493,1,13,0)
 ??string  Search for messages anywhere on the system, whether in your
"KRN",9.2,493,1,14,0)
           mailbox or not, which you once sent or received, whose subject
"KRN",9.2,493,1,15,0)
           [BEGINS WITH] the specified string.
"KRN",9.2,493,2,0)
^9.22^8^6
"KRN",9.2,493,2,1,0)
C^XM-U-B-BASKET NAME CHANGE
"KRN",9.2,493,2,3,0)
N^XM-U-B-NEW MAIL LIST
"KRN",9.2,493,2,4,0)
Q^XM-U-Q-SEARCH MAILBOX
"KRN",9.2,493,2,5,0)
R^XM-U-B-RESEQUENCE MESSAGES
"KRN",9.2,493,2,7,0)
BEGINS WITH^XM-U-Q-CLASSIC LOOKUP ??
"KRN",9.2,493,2,8,0)
CONTAINS^XM-U-Q-CLASSIC LOOKUP ?
"KRN",9.2,494,-1)
0^143
"KRN",9.2,494,0)
XM-U-BO-FULL SCREEN^FULL SCREEN READER BASKET MESSAGE ACTIONS^2990722.0913^^
"KRN",9.2,494,1,0)
^^21^21^2990722^^^^
"KRN",9.2,494,1,1,0)
 
"KRN",9.2,494,1,2,0)
Enter ^ to exit, or enter one of the [PAGE] commands to see more messages,
"KRN",9.2,494,1,3,0)
or enter one of the following:
"KRN",9.2,494,1,4,0)
 
"KRN",9.2,494,1,5,0)
 n        Read message n, where n is a sequence number in this basket or
"KRN",9.2,494,1,6,0)
          an internal message ID of any message on the system.
"KRN",9.2,494,1,7,0)
 
"KRN",9.2,494,1,8,0)
The following commands act on one or more messages in this basket.
"KRN",9.2,494,1,9,0)
You can [SELECT] the messages prior to entering the command or 
"KRN",9.2,494,1,10,0)
specify a [RANGE] of messages after entering the command.
"KRN",9.2,494,1,11,0)
 
"KRN",9.2,494,1,12,0)
 [D]        Delete messages.
"KRN",9.2,494,1,13,0)
 [F]        Forward messages.
"KRN",9.2,494,1,14,0)
 [FI]       Filter messages.
"KRN",9.2,494,1,15,0)
 [L]        Later messages.
"KRN",9.2,494,1,16,0)
 [P] or [H]   Print messages with or without a header.
"KRN",9.2,494,1,17,0)
 [S]        Save messages to another basket.
"KRN",9.2,494,1,18,0)
 [T]        Terminate messages.
"KRN",9.2,494,1,19,0)
 [X]        Toggle transmit priority in remote message queues. (POSTMASTER only)
"KRN",9.2,494,1,20,0)
 
"KRN",9.2,494,1,21,0)
 [MORE]...
"KRN",9.2,494,2,0)
^9.22^14^13
"KRN",9.2,494,2,1,0)
D^XM-U-M-DELETE
"KRN",9.2,494,2,2,0)
F^XM-U-M-FORWARD
"KRN",9.2,494,2,3,0)
FI^XM-U-B-FILTER
"KRN",9.2,494,2,4,0)
H^XM-U-M-PRINT NO HEADER
"KRN",9.2,494,2,5,0)
L^XM-U-M-LATER
"KRN",9.2,494,2,6,0)
MORE^XM-U-BO-FULL SCREEN-2
"KRN",9.2,494,2,8,0)
P^XM-U-M-PRINT
"KRN",9.2,494,2,9,0)
PAGE^XM-U-B-NAVIGATE FULL SCREEN
"KRN",9.2,494,2,10,0)
RANGE^XM-U-M-CHOOSE RANGE
"KRN",9.2,494,2,11,0)
S^XM-U-M-SAVE
"KRN",9.2,494,2,12,0)
SELECT^XM-U-M-CHOOSE SELECT
"KRN",9.2,494,2,13,0)
T^XM-U-M-TERMINATE
"KRN",9.2,494,2,14,0)
X^XM-U-B-XMIT PRIORITY TOGGLE
"KRN",9.2,494,3,0)
^9.23A^2^2
"KRN",9.2,494,3,1,0)
XMJMLR
"KRN",9.2,494,3,2,0)
XMJMLR1
"KRN",9.2,495,-1)
0^145
"KRN",9.2,495,0)
XM-U-BO-FULL SCREEN-2^FULL SCREEN READER BASKET MESSAGE ACTIONS (CONTINUED)^2990319.1456^^
"KRN",9.2,495,1,0)
^^15^15^2990427^
"KRN",9.2,495,1,1,0)
 
"KRN",9.2,495,1,2,0)
Enter:
"KRN",9.2,495,1,3,0)
 
"KRN",9.2,495,1,4,0)
 [C]         Change the name of this basket.
"KRN",9.2,495,1,5,0)
 [CD]        Change detail. (Toggle between [SUMMARY] and [DETAILED] display.)
"KRN",9.2,495,1,6,0)
 [N]         List only the new messages in this basket.
"KRN",9.2,495,1,7,0)
 [Q]         Query (search for) messages in this basket.
"KRN",9.2,495,1,8,0)
 [R]         Resequence messages in this basket.
"KRN",9.2,495,1,9,0)
 
"KRN",9.2,495,1,10,0)
 ?string   Search for messages in this basket whose subject [CONTAINS]
"KRN",9.2,495,1,11,0)
           a certain keyword or phrase.
"KRN",9.2,495,1,12,0)
 
"KRN",9.2,495,1,13,0)
 ??string  Search for messages anywhere on the system, whether in your
"KRN",9.2,495,1,14,0)
           mailbox or not, which you once sent or received, whose subject
"KRN",9.2,495,1,15,0)
           [BEGINS WITH] the specified string.
"KRN",9.2,495,2,0)
^9.22^11^9
"KRN",9.2,495,2,2,0)
CD^XM-U-B-CHANGE DETAIL
"KRN",9.2,495,2,3,0)
N^XM-U-B-NEW MAIL LIST
"KRN",9.2,495,2,4,0)
Q^XM-U-Q-SEARCH CRITERIA
"KRN",9.2,495,2,5,0)
R^XM-U-B-RESEQUENCE MESSAGES
"KRN",9.2,495,2,6,0)
C^XM-U-B-BASKET NAME CHANGE
"KRN",9.2,495,2,7,0)
DETAILED^XM-U-B-READER DETAILED
"KRN",9.2,495,2,8,0)
SUMMARY^XM-U-B-READER SUMMARY
"KRN",9.2,495,2,10,0)
BEGINS WITH^XM-U-Q-CLASSIC LOOKUP ??
"KRN",9.2,495,2,11,0)
CONTAINS^XM-U-Q-CLASSIC LOOKUP ?
"KRN",9.2,496,-1)
0^183
"KRN",9.2,496,0)
XM-U-M-CHOOSE SELECT^SELECTING MESSAGES^2990120.1607^^
"KRN",9.2,496,1,0)
^^20^20^2990427^
"KRN",9.2,496,1,1,0)
 
"KRN",9.2,496,1,2,0)
Select messages for subsequent action (e.g., delete, filter, forward, later,
"KRN",9.2,496,1,3,0)
print, save, or terminate) by entering a period and then the message sequence
"KRN",9.2,496,1,4,0)
number(s) in any of the following ways: 
"KRN",9.2,496,1,5,0)
 
"KRN",9.2,496,1,6,0)
 .n          Select one message. For example: .5
"KRN",9.2,496,1,7,0)
 .n-m,a,c-d  Select several messages. For example: .1,5 or .1-9 or
"KRN",9.2,496,1,8,0)
             .1-3,5,8-10
"KRN",9.2,496,1,9,0)
 .n-         Select all messages from this one onward. For example: .6-
"KRN",9.2,496,1,10,0)
 .*          Select all of the messages in the list.
"KRN",9.2,496,1,11,0)
 
"KRN",9.2,496,1,12,0)
Messages that you've selected are marked by a '>'.
"KRN",9.2,496,1,13,0)
 
"KRN",9.2,496,1,14,0)
The selections are cumulative. This means that once you have selected some
"KRN",9.2,496,1,15,0)
messages, you can select some more. (Subsequent selections do not wipe out
"KRN",9.2,496,1,16,0)
previous ones.) This is good, because if the messages you want to select are
"KRN",9.2,496,1,17,0)
on different pages, you can select the ones on one page and then go ahead and
"KRN",9.2,496,1,18,0)
select more on other pages.
"KRN",9.2,496,1,19,0)
 
"KRN",9.2,496,1,20,0)
 [MORE]...
"KRN",9.2,496,2,0)
^9.22^1^1
"KRN",9.2,496,2,1,0)
MORE^XM-U-M-CHOOSE SELECT-2
"KRN",9.2,497,-1)
0^184
"KRN",9.2,497,0)
XM-U-M-CHOOSE SELECT-2^SELECTING MESSAGES (CONTINUED)^2981231.1104^^
"KRN",9.2,497,1,0)
^^19^19^2990427^
"KRN",9.2,497,1,1,0)
 
"KRN",9.2,497,1,2,0)
After you've selected messages, you may decide to deselect some of them.
"KRN",9.2,497,1,3,0)
You can do this by entering a period, followed by the minus sign, and then
"KRN",9.2,497,1,4,0)
the message sequence numbers(s) in any of the following ways:
"KRN",9.2,497,1,5,0)
 
"KRN",9.2,497,1,6,0)
 .-n          DeSelect one message. For example: .-5
"KRN",9.2,497,1,7,0)
 .-n-m,a,c-d  DeSelect several messages. For example: .-1,5 or .-1-3,5,8-10
"KRN",9.2,497,1,8,0)
 .-n-         DeSelect all messages from this one onward. For example: .-6-
"KRN",9.2,497,1,9,0)
 .-*          DeSelect all of the messages in the list.
"KRN",9.2,497,1,10,0)
 
"KRN",9.2,497,1,11,0)
Messages that you've deselected are no longer marked by a '>'.
"KRN",9.2,497,1,12,0)
 
"KRN",9.2,497,1,13,0)
The deselections are also cumulative. You can select and deselect as much as
"KRN",9.2,497,1,14,0)
you want. Knock yourself out.
"KRN",9.2,497,1,15,0)
 
"KRN",9.2,497,1,16,0)
Once you've selected some messages, additional commands become available:
"KRN",9.2,497,1,17,0)
 
"KRN",9.2,497,1,18,0)
 [O]            Opposite selection toggle.
"KRN",9.2,497,1,19,0)
 [Z]            Zoom toggle.
"KRN",9.2,497,2,0)
^9.22^2^2
"KRN",9.2,497,2,1,0)
O^XM-U-B-OPPOSITE TOGGLE
"KRN",9.2,497,2,2,0)
Z^XM-U-B-ZOOM TOGGLE
"KRN",9.2,498,-1)
0^125
"KRN",9.2,498,0)
XM-U-B-NAVIGATE FULL SCREEN^READING A MESSAGE AND NAVIGATING IN THE FULL SCREEN READER^2990722.0912^^
"KRN",9.2,498,1,0)
^^21^21^2990722^^^
"KRN",9.2,498,1,1,0)
 
"KRN",9.2,498,1,2,0)
There are several ways to read messages and navigate in the Full Screen Reader.
"KRN",9.2,498,1,3,0)

"KRN",9.2,498,1,4,0)
Enter the sequence number of a message, and you'll read that message. Then
"KRN",9.2,498,1,5,0)
you'll be on the page with that sequence number in it. If the sequence number
"KRN",9.2,498,1,6,0)
does not exist, you'll be on the page where it would be if it did exist. 
"KRN",9.2,498,1,7,0)
 
"KRN",9.2,498,1,8,0)
Enter the internal message ID (the long number appearing in brackets) of any
"KRN",9.2,498,1,9,0)
message on the system, and you'll read that message. Then you'll be on the
"KRN",9.2,498,1,10,0)
page with that message on it. If the message exists in a different basket, you
"KRN",9.2,498,1,11,0)
won't stay in that basket, as you would with the Classic Reader; you'll return
"KRN",9.2,498,1,12,0)
to the page where you were. 
"KRN",9.2,498,1,13,0)
 
"KRN",9.2,498,1,14,0)
Press <Enter> to go to the next page, or enter:
"KRN",9.2,498,1,15,0)
 +n        Page forward n pages. (+ is the same as +1)
"KRN",9.2,498,1,16,0)
           If +n is very high (like +999), you'll go to the last page.
"KRN",9.2,498,1,17,0)
           If you're on the last page and you page forward, you'll be given
"KRN",9.2,498,1,18,0)
           the option of going to the first page or exiting the list.
"KRN",9.2,498,1,19,0)
 -n        Page backward n pages.  (- is the same as -1)
"KRN",9.2,498,1,20,0)
 0 (zero)  Go to the first page.
"KRN",9.2,498,1,21,0)
 =         Refresh the display of the current page.
"KRN",9.2,499,-1)
0^218
"KRN",9.2,499,0)
XM-U-M-QUERY GENERAL^GENERAL QUERY ON A MESSAGE^2990114.1331^^
"KRN",9.2,499,1,0)
^^14^14^2990427^
"KRN",9.2,499,1,1,0)
 
"KRN",9.2,499,1,2,0)
You can use the Query action code (i.e., 'Q') to inquire about general
"KRN",9.2,499,1,3,0)
addressee information on a message.
"KRN",9.2,499,1,4,0)
 
"KRN",9.2,499,1,5,0)
When doing a query on a message, besides the [BASIC] information, MailMan
"KRN",9.2,499,1,6,0)
will display a list of the addressees to whom the user addressed the message.
"KRN",9.2,499,1,7,0)
Addressees include local and remote users and any mail groups.
"KRN",9.2,499,1,8,0)
 
"KRN",9.2,499,1,9,0)
MailMan also displays a list of addresses to whom the message will be
"KRN",9.2,499,1,10,0)
forwarded at a later date.  These addressees were targeted for [STAGGERED]
"KRN",9.2,499,1,11,0)
delivery.
"KRN",9.2,499,1,12,0)
 
"KRN",9.2,499,1,13,0)
To query a message for general addressee information, enter a 'Q' at the
"KRN",9.2,499,1,14,0)
'Enter message action' prompt.
"KRN",9.2,499,2,0)
^9.22^2^2
"KRN",9.2,499,2,1,0)
BASIC^XM-U-M-QUERY INFO BASIC
"KRN",9.2,499,2,2,0)
STAGGERED^XM-U-A-STAGGER DELIVERY
"KRN",9.2,500,-1)
0^217
"KRN",9.2,500,0)
XM-U-M-QUERY DETAILED^DETAILED QUERY ON A MESSAGE^2990114.1306^^
"KRN",9.2,500,1,0)
^^16^16^2990427^
"KRN",9.2,500,1,1,0)
 
"KRN",9.2,500,1,2,0)
You can use the Query Detailed action code (i.e., 'QD') to retrieve
"KRN",9.2,500,1,3,0)
detailed information for each recipient of a message.
"KRN",9.2,500,1,4,0)
 
"KRN",9.2,500,1,5,0)
When doing a detailed query on a message, besides the [BASIC] information,
"KRN",9.2,500,1,6,0)
MailMan displays detailed recipient information for all [LOCAL] and
"KRN",9.2,500,1,7,0)
[REMOTE] users who are recipients of the message (including all members of
"KRN",9.2,500,1,8,0)
any mail groups).
"KRN",9.2,500,1,9,0)
 
"KRN",9.2,500,1,10,0)
Also, when you do a detailed query on a message that was sent to you and
"KRN",9.2,500,1,11,0)
you have your mail automatically forwarded to a remote address, the query
"KRN",9.2,500,1,12,0)
clearly shows that you are the one who forwarded the message to that
"KRN",9.2,500,1,13,0)
address. 
"KRN",9.2,500,1,14,0)
 
"KRN",9.2,500,1,15,0)
To query a message for detailed recipient information, enter a 'QD' at the
"KRN",9.2,500,1,16,0)
'Enter message action' prompt.
"KRN",9.2,500,2,0)
^9.22A^3^3
"KRN",9.2,500,2,1,0)
REMOTE^XM-U-M-QUERY INFO REMOTE
"KRN",9.2,500,2,2,0)
LOCAL^XM-U-M-QUERY INFO LOCAL
"KRN",9.2,500,2,3,0)
BASIC^XM-U-M-QUERY INFO BASIC
"KRN",9.2,501,-1)
0^224
"KRN",9.2,501,0)
XM-U-M-QUERY SPECIFIC^SPECIFIC QUERY ON A MESSAGE^2990114.1301^^
"KRN",9.2,501,1,0)
^^20^20^2990427^
"KRN",9.2,501,1,1,0)
 
"KRN",9.2,501,1,2,0)
You can use the Query Recipients action code (i.e., 'Q xxx' - where 'xxx'
"KRN",9.2,501,1,3,0)
represents the name of a person) to inquire about specific local and
"KRN",9.2,501,1,4,0)
remote recipients of a message. MailMan will display all recipients that
"KRN",9.2,501,1,5,0)
match your entry. The more characters entered (not case sensitive), the
"KRN",9.2,501,1,6,0)
more closely MailMan can match your entry to the list of recipients.
"KRN",9.2,501,1,7,0)
 
"KRN",9.2,501,1,8,0)
When doing a query on a message for a specific person, regardless of a
"KRN",9.2,501,1,9,0)
match, MailMan will always display the [BASIC] information about the
"KRN",9.2,501,1,10,0)
message.
"KRN",9.2,501,1,11,0)
 
"KRN",9.2,501,1,12,0)
If MailMan finds an addressee on the message that matches the person
"KRN",9.2,501,1,13,0)
entered, MailMan will display the detailed information on that [LOCAL] or
"KRN",9.2,501,1,14,0)
[REMOTE] addressee.
"KRN",9.2,501,1,15,0)
 
"KRN",9.2,501,1,16,0)
If MailMan cannot find a match, no recipient detailed information can be
"KRN",9.2,501,1,17,0)
displayed.
"KRN",9.2,501,1,18,0)
 
"KRN",9.2,501,1,19,0)
To query a message for detailed information on a specific recipient, enter
"KRN",9.2,501,1,20,0)
a 'Q' and the recipient's name at the 'Enter message action' prompt.
"KRN",9.2,501,2,0)
^9.22A^3^3
"KRN",9.2,501,2,1,0)
LOCAL^XM-U-M-QUERY INFO LOCAL
"KRN",9.2,501,2,2,0)
REMOTE^XM-U-M-QUERY INFO REMOTE
"KRN",9.2,501,2,3,0)
BASIC^XM-U-M-QUERY INFO BASIC
"KRN",9.2,502,-1)
0^144
"KRN",9.2,502,0)
XM-U-BO-FULL SCREEN LIST^FULL SCREEN READER MESSAGE LIST ACTIONS^2990722.0914^^
"KRN",9.2,502,1,0)
^^19^19^2990722^^^^
"KRN",9.2,502,1,1,0)
 
"KRN",9.2,502,1,2,0)
Enter ^ to exit, or enter one of the [PAGE] commands to see more messages,
"KRN",9.2,502,1,3,0)
or enter one of the following:
"KRN",9.2,502,1,4,0)
 
"KRN",9.2,502,1,5,0)
 n        Read message n, where n is a sequence number of a message in this
"KRN",9.2,502,1,6,0)
          list, or an internal message ID of any message on the system.
"KRN",9.2,502,1,7,0)
 [CD]       Change detail. (Toggle between summary and detailed readers.)
"KRN",9.2,502,1,8,0)
 
"KRN",9.2,502,1,9,0)
The following commands act on one or more messages in this list.
"KRN",9.2,502,1,10,0)
You can [SELECT] the messages prior to entering the command or
"KRN",9.2,502,1,11,0)
specify a [RANGE] of messages after entering the command.
"KRN",9.2,502,1,12,0)
 
"KRN",9.2,502,1,13,0)
 [D]        Delete messages.
"KRN",9.2,502,1,14,0)
 [F]        Forward messages.
"KRN",9.2,502,1,15,0)
 [FI]       Filter messages.
"KRN",9.2,502,1,16,0)
 [L]        Later messages.
"KRN",9.2,502,1,17,0)
 [P] or [H]   Print messages with or without headers.
"KRN",9.2,502,1,18,0)
 [S]        Save messages to another basket.
"KRN",9.2,502,1,19,0)
 [T]        Terminate messages.
"KRN",9.2,502,2,0)
^9.22^14^12
"KRN",9.2,502,2,3,0)
F^XM-U-M-FORWARD
"KRN",9.2,502,2,4,0)
FI^XM-U-B-FILTER
"KRN",9.2,502,2,5,0)
H^XM-U-M-PRINT NO HEADER
"KRN",9.2,502,2,6,0)
L^XM-U-M-LATER
"KRN",9.2,502,2,7,0)
P^XM-U-M-PRINT
"KRN",9.2,502,2,8,0)
PAGE^XM-U-B-NAVIGATE FULL SCREEN
"KRN",9.2,502,2,9,0)
RANGE^XM-U-M-CHOOSE RANGE
"KRN",9.2,502,2,10,0)
S^XM-U-M-SAVE
"KRN",9.2,502,2,11,0)
SELECT^XM-U-M-CHOOSE SELECT
"KRN",9.2,502,2,12,0)
T^XM-U-M-TERMINATE
"KRN",9.2,502,2,13,0)
CD^XM-U-B-CHANGE DETAIL
"KRN",9.2,502,2,14,0)
D^XM-U-M-DELETE
"KRN",9.2,502,3,0)
^9.23A^2^2
"KRN",9.2,502,3,1,0)
XMJMLN
"KRN",9.2,502,3,2,0)
XMJMLR1
"KRN",9.2,503,-1)
0^222
"KRN",9.2,503,0)
XM-U-M-QUERY NETWORK^NETWORK QUERY ON A MESSAGE^2990428.0712^^
"KRN",9.2,503,1,0)
^^20^20^2990428^^
"KRN",9.2,503,1,1,0)
 
"KRN",9.2,503,1,2,0)
You can use the Query Network action code (i.e., 'QN') to retrieve
"KRN",9.2,503,1,3,0)
network/trace header information and [DETAILED] information about each
"KRN",9.2,503,1,4,0)
addressee ([LOCAL] and [REMOTE] recipients) of a message. However, it is
"KRN",9.2,503,1,5,0)
primarily used as a diagnostic tool.
"KRN",9.2,503,1,6,0)
 
"KRN",9.2,503,1,7,0)
NOTE: The network/trace header information includes all the different mail
"KRN",9.2,503,1,8,0)
      server relay information while the message passed from server to
"KRN",9.2,503,1,9,0)
      server to get to you.
"KRN",9.2,503,1,10,0)
 
"KRN",9.2,503,1,11,0)
Also, when messages are received from a non-MailMan remote sites, MailMan
"KRN",9.2,503,1,12,0)
captures the 'From' address from the message header and not from the
"KRN",9.2,503,1,13,0)
envelope. However, the 'From' address from the envelope is captured in a
"KRN",9.2,503,1,14,0)
field and is displayed by the QN action code when it differs from the
"KRN",9.2,503,1,15,0)
message header 'From' address.
"KRN",9.2,503,1,16,0)
 
"KRN",9.2,503,1,17,0)
NOTE: The envelope contains the 'From' and 'To' address used by the mail
"KRN",9.2,503,1,18,0)
      transport system and is not part of the message itself.
"KRN",9.2,503,1,19,0)
 
"KRN",9.2,503,1,20,0)
[MORE]... 
"KRN",9.2,503,2,0)
^9.22A^4^4
"KRN",9.2,503,2,1,0)
DETAILED^XM-U-M-QUERY DETAILED
"KRN",9.2,503,2,2,0)
MORE^XM-U-M-QUERY NETWORK-2
"KRN",9.2,503,2,3,0)
LOCAL^XM-U-M-QUERY INFO LOCAL
"KRN",9.2,503,2,4,0)
REMOTE^XM-U-M-QUERY INFO REMOTE
"KRN",9.2,504,-1)
0^292
"KRN",9.2,504,0)
XM-U-Q-SEARCH MAILBOX^SEARCHING FOR MESSAGES - SEARCHING YOUR MAILBOX^2990114.1126^^
"KRN",9.2,504,1,0)
^^11^11^2990114^^
"KRN",9.2,504,1,1,0)
 
"KRN",9.2,504,1,2,0)
Using multiple search [CRITERIA], you can search for any messages you sent
"KRN",9.2,504,1,3,0)
or that were sent to you in any of the following locations in your mailbox:
"KRN",9.2,504,1,4,0)
 
"KRN",9.2,504,1,5,0)
  * Any mail basket in your mailbox -
"KRN",9.2,504,1,6,0)
    MailMan will look for the messages in every basket in your mailbox
"KRN",9.2,504,1,7,0)
    using the search criteria that you enter.
"KRN",9.2,504,1,8,0)
 
"KRN",9.2,504,1,9,0)
  * A specific mail basket in your mailbox -
"KRN",9.2,504,1,10,0)
    MailMan will look for the messages in a mail basket using
"KRN",9.2,504,1,11,0)
    the search criteria that you enter. 
"KRN",9.2,504,2,0)
^9.22A^5^1
"KRN",9.2,504,2,5,0)
CRITERIA^XM-U-Q-SEARCH CRITERIA
"KRN",9.2,505,-1)
0^204
"KRN",9.2,505,0)
XM-U-M-LATERED MESSAGE REPORT^REPORT ON LATERED MESSAGES^2990114.1056^^
"KRN",9.2,505,1,0)
^^21^21^2990114^^^
"KRN",9.2,505,1,1,0)
 
"KRN",9.2,505,1,2,0)
You can use the Report on Later'd Messages option available on the Other
"KRN",9.2,505,1,3,0)
MailMan Functions menu to display a list of messages that you've set to be
"KRN",9.2,505,1,4,0)
new at a future date and time ('Latered').
"KRN",9.2,505,1,5,0)
 
"KRN",9.2,505,1,6,0)
The report provides the following information:
"KRN",9.2,505,1,7,0)
 
"KRN",9.2,505,1,8,0)
  * Date - The date and time the message will be made new (i.e., 'latered'
"KRN",9.2,505,1,9,0)
    date and time).
"KRN",9.2,505,1,10,0)
 
"KRN",9.2,505,1,11,0)
  * Basket - The mailbox basket name where the 'latered' message is located.
"KRN",9.2,505,1,12,0)
 
"KRN",9.2,505,1,13,0)
  * Message - The MailMan internal message identification number of the
"KRN",9.2,505,1,14,0)
    'latered' message.
"KRN",9.2,505,1,15,0)
 
"KRN",9.2,505,1,16,0)
  * Subject - The subject of the 'latered' message.
"KRN",9.2,505,1,17,0)
 
"KRN",9.2,505,1,18,0)
To list your 'Latered' messages, choose the Report on Later'd Messages
"KRN",9.2,505,1,19,0)
option on the Other MailMan Functions menu. You can use this report to
"KRN",9.2,505,1,20,0)
decide if you want to modify any of these dates or delete any of the
"KRN",9.2,505,1,21,0)
entries using the [CHANGE]/Delete Later'd Messages option.
"KRN",9.2,505,2,0)
^9.22A^1^1
"KRN",9.2,505,2,1,0)
CHANGE^XM-U-M-LATERED MESSAGE CHANGE
"KRN",9.2,506,-1)
0^203
"KRN",9.2,506,0)
XM-U-M-LATERED MESSAGE CHANGE^CHANGE/DELETE LATERED MESSAGES^2981228.154927^
"KRN",9.2,506,1,0)
^^18^18^2981230^^
"KRN",9.2,506,1,1,0)
 
"KRN",9.2,506,1,2,0)
You can use the Change/Delete Later'd Messages option available on the
"KRN",9.2,506,1,3,0)
Other MailMan Functions menu to do the following to any message with a
"KRN",9.2,506,1,4,0)
'latered' date and time:
"KRN",9.2,506,1,5,0)
 
"KRN",9.2,506,1,6,0)
  * Change this Date - Modify the 'latered' date and time so that the
"KRN",9.2,506,1,7,0)
    message will appear as 'new' in your mailbox on that future date.
"KRN",9.2,506,1,8,0)
 
"KRN",9.2,506,1,9,0)
  * Delete this Date - Delete the 'latered' date and time so that the
"KRN",9.2,506,1,10,0)
    message will not appear as 'new' in your mailbox.
"KRN",9.2,506,1,11,0)
 
"KRN",9.2,506,1,12,0)
To change a 'Latered' date and time for a message, choose the
"KRN",9.2,506,1,13,0)
Change/Delete Later'd Messages option on the Other MailMan Functions menu
"KRN",9.2,506,1,14,0)
and then choose the 'Change this date' option.
"KRN",9.2,506,1,15,0)
 
"KRN",9.2,506,1,16,0)
To delete a 'Latered' date and time for a message, choose the
"KRN",9.2,506,1,17,0)
Change/Delete Later'd Messages option on the Other MailMan Functions menu
"KRN",9.2,506,1,18,0)
and then choose the 'Delete this date' option.
"KRN",9.2,507,-1)
0^244
"KRN",9.2,507,0)
XM-U-MO-REPLY^REPLYING TO A MESSAGE - OPTIONS AT THE 'Transmit' PROMPT^2981229.1237^^
"KRN",9.2,507,1,0)
^^9^9^2990427^
"KRN",9.2,507,1,1,0)
 
"KRN",9.2,507,1,2,0)
Enter ^ to abort the reply or press <Enter> to transmit it, or enter any
"KRN",9.2,507,1,3,0)
of the following options before transmitting your reply:
"KRN",9.2,507,1,4,0)
 
"KRN",9.2,507,1,5,0)
 [B]       Back up and read/review the original message or any responses.
"KRN",9.2,507,1,6,0)
 [E]       Edit your reply.
"KRN",9.2,507,1,7,0)
 [I]       Include the original message or any responses in your reply.
"KRN",9.2,507,1,8,0)
 [Q]       Query recipients or network header info (Q, QD, or QN).
"KRN",9.2,507,1,9,0)
 [T]       Transmit your reply now.
"KRN",9.2,507,2,0)
^9.22^5^5
"KRN",9.2,507,2,1,0)
B^XM-U-M-BACKUP
"KRN",9.2,507,2,2,0)
E^XM-U-M-EDIT TEXT
"KRN",9.2,507,2,4,0)
Q^XM-U-M-QUERY
"KRN",9.2,507,2,5,0)
T^XM-U-M-TRANSMIT NOW
"KRN",9.2,507,3,0)
^9.23A^1^1
"KRN",9.2,507,3,1,0)
XMJMRO
"KRN",9.2,508,-1)
0^238
"KRN",9.2,508,0)
XM-U-M-VAPORIZE DATE SEND^SET A VAPORIZE DATE WHEN SENDING A MESSAGE^2981229.114105^
"KRN",9.2,508,1,0)
^^17^17^2990121^
"KRN",9.2,508,1,1,0)
 
"KRN",9.2,508,1,2,0)
Before sending a message, you can use the Vaporize Date Set action code to
"KRN",9.2,508,1,3,0)
set a specified date and time for a message to be deleted ('vaporized')
"KRN",9.2,508,1,4,0)
from each recipient's mailbox. Thus, all senders of messages have the
"KRN",9.2,508,1,5,0)
ability to set a Vaporize Date for a message.
"KRN",9.2,508,1,6,0)
 
"KRN",9.2,508,1,7,0)
For example, set a Vaporize Date for a message, if you are sure that the
"KRN",9.2,508,1,8,0)
message is only needed until a certain date. MailMan will automatically
"KRN",9.2,508,1,9,0)
remove it from the basket it is in at that date.
"KRN",9.2,508,1,10,0)
 
"KRN",9.2,508,1,11,0)
As MailMan delivers the message with a Vaporize Date into each recipient's
"KRN",9.2,508,1,12,0)
mail basket, MailMan sets the AUTOMATIC DELETION DATE (i.e., vaporize
"KRN",9.2,508,1,13,0)
date) for the message. However, recipients are free to modify or remove
"KRN",9.2,508,1,14,0)
the AUTOMATIC DELETION DATE at any time prior to the vaporization date.
"KRN",9.2,508,1,15,0)
 
"KRN",9.2,508,1,16,0)
To set a 'Vaporize Date' for a message you are sending, enter a 'V' at the
"KRN",9.2,508,1,17,0)
'Select Message option:  Transmit now//' prompt.
"KRN",9.2,509,-1)
0^245
"KRN",9.2,509,0)
XM-U-MO-SEND^SENDING A MESSAGE - OPTIONS AT THE 'Transmit' PROMPT^2981229.1419^^
"KRN",9.2,509,1,0)
^^12^12^2990427^
"KRN",9.2,509,1,1,0)
 
"KRN",9.2,509,1,2,0)
Enter ^ to abort the message or press <Enter> to transmit it, or enter any
"KRN",9.2,509,1,3,0)
of the following commands before sending it:
"KRN",9.2,509,1,4,0)
 
"KRN",9.2,509,1,5,0)
 [B]       Back up and review the message.
"KRN",9.2,509,1,6,0)
 [ER]      Edit the Recipients of the message.
"KRN",9.2,509,1,7,0)
 [ES]      Edit the Subject of the message.
"KRN",9.2,509,1,8,0)
 [ET]      Edit the Text of the message.
"KRN",9.2,509,1,9,0)
 [L]       Transmit your message later.  (You'll be asked when.)
"KRN",9.2,509,1,10,0)
 [T]       Transmit your message now.
"KRN",9.2,509,1,11,0)
 
"KRN",9.2,509,1,12,0)
 [MORE]...
"KRN",9.2,509,2,0)
^9.22^16^7
"KRN",9.2,509,2,1,0)
B^XM-U-M-BACKUP BEFORE SENDING
"KRN",9.2,509,2,4,0)
ER^XM-U-M-EDIT RECIPIENTS
"KRN",9.2,509,2,5,0)
ES^XM-U-M-EDIT SUBJECT
"KRN",9.2,509,2,6,0)
ET^XM-U-M-EDIT TEXT
"KRN",9.2,509,2,8,0)
L^XM-U-M-TRANSMIT LATER
"KRN",9.2,509,2,13,0)
T^XM-U-M-TRANSMIT NOW
"KRN",9.2,509,2,16,0)
MORE^XM-U-MO-SEND-2
"KRN",9.2,509,3,0)
^9.23A^1^1
"KRN",9.2,509,3,1,0)
XMJMSO
"KRN",9.2,510,-1)
0^246
"KRN",9.2,510,0)
XM-U-MO-SEND-2^MORE MESSAGE OPTIONS^2990120.1312^^
"KRN",9.2,510,1,0)
^^19^19^2990427^
"KRN",9.2,510,1,1,0)
 
"KRN",9.2,510,1,2,0)
The following commands are toggles. Enter them once, and you perform the
"KRN",9.2,510,1,3,0)
associated action. Enter them again, and you undo it. If you forget what
"KRN",9.2,510,1,4,0)
state they're in (on or not), enter ? and MailMan will tell you.
"KRN",9.2,510,1,5,0)
 
"KRN",9.2,510,1,6,0)
 [C]       Make the message Confidential. (Surrogates can't read it.)
"KRN",9.2,510,1,7,0)
 [D]       Request a Delivery basket to which the message will be delivered in
"KRN",9.2,510,1,8,0)
         each recipient's Mailbox. (Whether the request is honored
"KRN",9.2,510,1,9,0)
         depends on each recipient's delivery basket privileges setting.)
"KRN",9.2,510,1,10,0)
 [I]       Make the message Information Only. (Recipients can't reply to it,
"KRN",9.2,510,1,11,0)
         but you can.)
"KRN",9.2,510,1,12,0)
 [P]       Make the message Priority. (Recipients are alerted to it.)
"KRN",9.2,510,1,13,0)
 [R]       Return receipt requested as each recipient reads the message.
"KRN",9.2,510,1,14,0)
 [S]       Scramble the text. (You'll be asked for a password and a hint.
"KRN",9.2,510,1,15,0)
         Recipients will be shown the hint and must enter the password to
"KRN",9.2,510,1,16,0)
         unscramble and read the message.)
"KRN",9.2,510,1,17,0)
 [V]       Set a date on which the message will Vaporize (be deleted) from
"KRN",9.2,510,1,18,0)
         each recipient's Mailbox. (Recipients may override.)
"KRN",9.2,510,1,19,0)
 [X]       Make the message Closed. (Recipients can't forward it, but you can.)
"KRN",9.2,510,2,0)
^9.22^8^8
"KRN",9.2,510,2,1,0)
C^XM-U-M-CONFIDENTIAL
"KRN",9.2,510,2,2,0)
D^XM-U-M-DELIVERY BASKET SET
"KRN",9.2,510,2,3,0)
I^XM-U-M-INFO ONLY
"KRN",9.2,510,2,4,0)
P^XM-U-M-PRIORITY SEND
"KRN",9.2,510,2,5,0)
R^XM-U-M-CONFIRM RECEIPT
"KRN",9.2,510,2,6,0)
S^XM-U-M-SCRAMBLE
"KRN",9.2,510,2,7,0)
V^XM-U-M-VAPORIZE DATE SEND
"KRN",9.2,510,2,8,0)
X^XM-U-M-CLOSED
"KRN",9.2,511,-1)
0^242
"KRN",9.2,511,0)
XM-U-MO-READ^READING A MESSAGE - OPTIONS^2990513.1445^^
"KRN",9.2,511,1,0)
^^19^19^2990513^^^^
"KRN",9.2,511,1,1,0)
 
"KRN",9.2,511,1,2,0)
Enter ^ to ignore the message, or enter any of the following commands:
"KRN",9.2,511,1,3,0)
 
"KRN",9.2,511,1,4,0)
 <Enter>  Accept the [DEFAULT]. (Usually Ignore, but can be Delete.)
"KRN",9.2,511,1,5,0)
 [B]        Back up to read/review from the original message or any of the
"KRN",9.2,511,1,6,0)
          responses to the end.
"KRN",9.2,511,1,7,0)
 [D]        Delete the message.
"KRN",9.2,511,1,8,0)
 [F]        Forward the message to recipients.
"KRN",9.2,511,1,9,0)
 I        Ignore the message. (Quit reading it and leave it where it is.)
"KRN",9.2,511,1,10,0)
 [L]        Later the message. (Set a date/time at which the message will
"KRN",9.2,511,1,11,0)
          be made New again.)
"KRN",9.2,511,1,12,0)
 [N]        Toggle the message New or not.
"KRN",9.2,511,1,13,0)
 [P] or [H]   Print the message with or without headers.
"KRN",9.2,511,1,14,0)
 [QUERY]    List the message's recipients and characteristics.
"KRN",9.2,511,1,15,0)
 [R] or [RI]  Reply to the message. (The other recipients will see your reply.)
"KRN",9.2,511,1,16,0)
 [S]        Save the message to another basket.
"KRN",9.2,511,1,17,0)
 [T]        Terminate the message. (Delete it and stop receiving replies.)
"KRN",9.2,511,1,18,0)
 
"KRN",9.2,511,1,19,0)
 [MORE]...
"KRN",9.2,511,2,0)
^9.22^15^14
"KRN",9.2,511,2,1,0)
B^XM-U-M-BACKUP
"KRN",9.2,511,2,2,0)
D^XM-U-M-DELETE
"KRN",9.2,511,2,3,0)
DEFAULT^XM-U-P-MESSAGE ACTION DEFAULT
"KRN",9.2,511,2,4,0)
F^XM-U-M-FORWARD
"KRN",9.2,511,2,5,0)
H^XM-U-M-PRINT NO HEADER
"KRN",9.2,511,2,7,0)
L^XM-U-M-LATER
"KRN",9.2,511,2,8,0)
MORE^XM-U-MO-READ-2
"KRN",9.2,511,2,9,0)
N^XM-U-M-NEW
"KRN",9.2,511,2,10,0)
P^XM-U-M-PRINT
"KRN",9.2,511,2,11,0)
QUERY^XM-U-M-QUERY
"KRN",9.2,511,2,12,0)
R^XM-U-M-REPLY
"KRN",9.2,511,2,13,0)
S^XM-U-M-SAVE
"KRN",9.2,511,2,14,0)
T^XM-U-M-TERMINATE
"KRN",9.2,511,2,15,0)
RI^XM-U-M-REPLY
"KRN",9.2,511,3,0)
^9.23A^1^1
"KRN",9.2,511,3,1,0)
XMJDIR
"KRN",9.2,512,-1)
0^243
"KRN",9.2,512,0)
XM-U-MO-READ-2^READING A MESSAGE - OPTIONS (CONTINUED)^2981229.162^^
"KRN",9.2,512,1,0)
^^17^17^2990427^
"KRN",9.2,512,1,1,0)
 
"KRN",9.2,512,1,2,0)
 [A]        Answer the message Internet-style. (Like Reply, but only to sender.)
"KRN",9.2,512,1,3,0)
 [C]        Copy the message and/or any of its responses to create a new message.
"KRN",9.2,512,1,4,0)
 [E]        Edit the message.
"KRN",9.2,512,1,5,0)
 [IN]       Toggle whether or not the message is Information Only.
"KRN",9.2,512,1,6,0)
          (Recipients can't reply, but you, the sender, can.)
"KRN",9.2,512,1,7,0)
 [K]        Toggle whether or not replies to a priority message are delivered
"KRN",9.2,512,1,8,0)
          to you as priority mail.
"KRN",9.2,512,1,9,0)
 [V]        Set a date on which the message should Vaporize (be deleted)
"KRN",9.2,512,1,10,0)
          from your Mailbox.
"KRN",9.2,512,1,11,0)
 [W]        Write (Send) a new message.
"KRN",9.2,512,1,12,0)
 [X]        Use PackMan options with a PackMan message.
"KRN",9.2,512,1,13,0)
 
"KRN",9.2,512,1,14,0)
Some of the commands may not be available in certain situations.
"KRN",9.2,512,1,15,0)
Enter ? to see which commands are available.
"KRN",9.2,512,1,16,0)
If you enter a command which is not available, you will be told why it
"KRN",9.2,512,1,17,0)
isn't.
"KRN",9.2,512,2,0)
^9.22^8^8
"KRN",9.2,512,2,1,0)
A^XM-U-M-ANSWER
"KRN",9.2,512,2,2,0)
C^XM-U-M-COPY
"KRN",9.2,512,2,3,0)
E^XM-U-MO-EDIT
"KRN",9.2,512,2,4,0)
IN^XM-U-M-INFO ONLY
"KRN",9.2,512,2,5,0)
K^XM-U-M-PRIORITY TOGGLE
"KRN",9.2,512,2,6,0)
V^XM-U-M-VAPORIZE DATE EDIT
"KRN",9.2,512,2,7,0)
W^XM-U-M-WRITE
"KRN",9.2,512,2,8,0)
X^XMPACKMAN
"KRN",9.2,513,-1)
0^180
"KRN",9.2,513,0)
XM-U-M-BACKUP BEFORE SENDING^BACKUP A MESSAGE TO REVIEW BEFORE SENDING^2981229.160011^
"KRN",9.2,513,1,0)
^^7^7^2990427^
"KRN",9.2,513,1,1,0)
 
"KRN",9.2,513,1,2,0)
When sending a message, you can use the Backup action code (i.e., 'B') to
"KRN",9.2,513,1,3,0)
review a message before you send it. Based on your review, you can then
"KRN",9.2,513,1,4,0)
re-edit your message.
"KRN",9.2,513,1,5,0)
 
"KRN",9.2,513,1,6,0)
To review a message (back up) before sending it, enter a 'B' at the
"KRN",9.2,513,1,7,0)
'Select Message Option:  Transmit now//' prompt.
"KRN",9.2,514,-1)
0^241
"KRN",9.2,514,0)
XM-U-MO-EDIT^EDITING A MESSAGE^2981230.0726^^
"KRN",9.2,514,1,0)
^^16^16^2990108^
"KRN",9.2,514,1,1,0)
 
"KRN",9.2,514,1,2,0)
You can use the Edit action code (i.e., 'E') to edit any message created
"KRN",9.2,514,1,3,0)
by you and sent only to yourself, but not yet to other recipients.
"KRN",9.2,514,1,4,0)
Such a message is regarded as a work in progress, and still subject to change.
"KRN",9.2,514,1,5,0)
Once you send it to anyone else, though, you can no longer edit it.
"KRN",9.2,514,1,6,0)
 
"KRN",9.2,514,1,7,0)
To edit a message enter an 'E' at the 'Enter message option' prompt. You
"KRN",9.2,514,1,8,0)
can choose to edit the message as follows:
"KRN",9.2,514,1,9,0)
 
"KRN",9.2,514,1,10,0)
 [S]        Edit the Subject of the message.
"KRN",9.2,514,1,11,0)
 [T]        Edit the Text of the message.
"KRN",9.2,514,1,12,0)
 
"KRN",9.2,514,1,13,0)
 [MORE]...
"KRN",9.2,514,1,14,0)
 
"KRN",9.2,514,1,15,0)
When you complete your edits, press <Enter> to return to this menu and
"KRN",9.2,514,1,16,0)
then [FORWARD] the message to the recipients.
"KRN",9.2,514,2,0)
^9.22^4^4
"KRN",9.2,514,2,1,0)
FORWARD^XM-U-M-FORWARD
"KRN",9.2,514,2,2,0)
MORE^XM-U-MO-SEND-2
"KRN",9.2,514,2,3,0)
S^XM-U-M-EDIT SUBJECT
"KRN",9.2,514,2,4,0)
T^XM-U-M-EDIT TEXT
"KRN",9.2,515,-1)
0^182
"KRN",9.2,515,0)
XM-U-M-CHOOSE RESPONSES^SPECIFYING A LIST OR RANGE OF RESPONSES^2990120.1029^^
"KRN",9.2,515,1,0)
^^19^19^2990120^^^
"KRN",9.2,515,1,1,0)
 
"KRN",9.2,515,1,2,0)
When you are printing or copying a message, or when you are including parts of
"KRN",9.2,515,1,3,0)
a message in a reply, MailMan allows you to specify the original message and/or
"KRN",9.2,515,1,4,0)
any combination of responses. 
"KRN",9.2,515,1,5,0)
 
"KRN",9.2,515,1,6,0)
To specify a range or list, use the following syntax:
"KRN",9.2,515,1,7,0)
 
"KRN",9.2,515,1,8,0)
  * Enter the message response numbers separated by commas (e.g., '1,5,9').
"KRN",9.2,515,1,9,0)
 
"KRN",9.2,515,1,10,0)
  * Specify a range of numbers by separating the beginning and ending numbers
"KRN",9.2,515,1,11,0)
    with a dash/hyphen (e.g., '0-10', where '0' is the original message).
"KRN",9.2,515,1,12,0)
 
"KRN",9.2,515,1,13,0)
  * Specify at what response you want MailMan to include through the remaining
"KRN",9.2,515,1,14,0)
    responses by entering a specific number followed by a dash/hyphen
"KRN",9.2,515,1,15,0)
    (e.g., 20-, MailMan would include response 20 through the remaining
"KRN",9.2,515,1,16,0)
    responses).
"KRN",9.2,515,1,17,0)
 
"KRN",9.2,515,1,18,0)
  * Specify combinations of the above by putting ranges where numbers would go,
"KRN",9.2,515,1,19,0)
    etc. (e.g., '0-3,5,8-10,20-', where '0' is the original message).
"KRN",9.2,516,-1)
0^135
"KRN",9.2,516,0)
XM-U-B-READER FULL SCREEN^FULL SCREEN MESSAGE READER^2990106.0715^^
"KRN",9.2,516,1,0)
^^16^16^2990427^
"KRN",9.2,516,1,1,0)
 
"KRN",9.2,516,1,2,0)
The Full Screen message reader enables you to read and manage messages in a
"KRN",9.2,516,1,3,0)
simulated full-screen environment. It has two levels of detail:
"KRN",9.2,516,1,4,0)
 
"KRN",9.2,516,1,5,0)
 Summary    Provides [SUMMARY] information.
"KRN",9.2,516,1,6,0)
 Detailed   Provides Summary information and additional [DETAILED] information.
"KRN",9.2,516,1,7,0)
 
"KRN",9.2,516,1,8,0)
While you are in the Full Screen message reader, you can [CHANGE DETAIL]
"KRN",9.2,516,1,9,0)
(toggle) between the Summary and Detailed displays.
"KRN",9.2,516,1,10,0)
 
"KRN",9.2,516,1,11,0)
Whereas with the Classic message reader, you must enter ? or ?? to see the
"KRN",9.2,516,1,12,0)
messages, the Full Screen message reader presents you with a screen full
"KRN",9.2,516,1,13,0)
of messages at all times, in the [ORDER] you've specified.
"KRN",9.2,516,1,14,0)
 
"KRN",9.2,516,1,15,0)
You can enter one of the [BASKET] actions, read a message and perform [MESSAGE]
"KRN",9.2,516,1,16,0)
actions on it, or [NAVIGATE] about the basket and beyond.
"KRN",9.2,516,2,0)
^9.22^7^7
"KRN",9.2,516,2,1,0)
BASKET^XM-U-BO-FULL SCREEN
"KRN",9.2,516,2,2,0)
CHANGE DETAIL^XM-U-B-CHANGE DETAIL
"KRN",9.2,516,2,3,0)
DETAILED^XM-U-B-READER DETAILED
"KRN",9.2,516,2,4,0)
MESSAGE^XM-U-MO-READ
"KRN",9.2,516,2,5,0)
NAVIGATE^XM-U-B-NAVIGATE FULL SCREEN
"KRN",9.2,516,2,6,0)
ORDER^XM-U-P-MESSAGE ORDER
"KRN",9.2,516,2,7,0)
SUMMARY^XM-U-B-READER SUMMARY
"KRN",9.2,517,-1)
0^130
"KRN",9.2,517,0)
XM-U-B-READER DETAILED^DETAILED MESSAGE INFORMATION^2981231.0818^^
"KRN",9.2,517,1,0)
^^15^15^2990108^
"KRN",9.2,517,1,1,0)
 
"KRN",9.2,517,1,2,0)
The Detailed Full Screen message reader and the Classic message reader (upon
"KRN",9.2,517,1,3,0)
entering a ??) provide, in addition to [SUMMARY] information, the following
"KRN",9.2,517,1,4,0)
detailed information for each message:
"KRN",9.2,517,1,5,0)
 
"KRN",9.2,517,1,6,0)
  * MailMan Internal Message Identification Number - The MailMan message
"KRN",9.2,517,1,7,0)
    numbers generated internally for each message (displayed in brackets).
"KRN",9.2,517,1,8,0)
 
"KRN",9.2,517,1,9,0)
  * Message Sent Date - The date each message was sent (i.e., day, month,
"KRN",9.2,517,1,10,0)
    year).
"KRN",9.2,517,1,11,0)
 
"KRN",9.2,517,1,12,0)
  * Lines - Number of lines of text for each message in the mail basket.
"KRN",9.2,517,1,13,0)
 
"KRN",9.2,517,1,14,0)
  * Read/Rcvd - Total number of responses read and received for a message.
"KRN",9.2,517,1,15,0)
    If there are no responses to a message, no totals will be indicated.
"KRN",9.2,517,2,0)
^9.22^1^1
"KRN",9.2,517,2,1,0)
SUMMARY^XM-U-B-READER SUMMARY
"KRN",9.2,518,-1)
0^136
"KRN",9.2,518,0)
XM-U-B-READER SUMMARY^SUMMARY MESSAGE INFORMATION^2981231^
"KRN",9.2,518,1,0)
^^21^21^2990108^
"KRN",9.2,518,1,1,0)
 
"KRN",9.2,518,1,2,0)
The Summary Full Screen message reader and the Classic message reader (upon
"KRN",9.2,518,1,3,0)
entering a ?) provide the following summary information:
"KRN",9.2,518,1,4,0)
 
"KRN",9.2,518,1,5,0)
  * Basket - Basket containing the messages (e.g., 'IN').
"KRN",9.2,518,1,6,0)
 
"KRN",9.2,518,1,7,0)
  * Message Totals -
"KRN",9.2,518,1,8,0)
 
"KRN",9.2,518,1,9,0)
      - How many messages in the basket.
"KRN",9.2,518,1,10,0)
      - Range of message numbers in the basket.
"KRN",9.2,518,1,11,0)
      - How many message are new in the basket.
"KRN",9.2,518,1,12,0)
 
"KRN",9.2,518,1,13,0)
  * Flags - Any special flags associated with the messages in the basket.
"KRN",9.2,518,1,14,0)
    For example: Priority (!) or New (*) flags.
"KRN",9.2,518,1,15,0)
 
"KRN",9.2,518,1,16,0)
  * Message Sequence Numbers - The numbers associated with the messages.
"KRN",9.2,518,1,17,0)
    (Meaningful only while the message remains in the basket or list.)
"KRN",9.2,518,1,18,0)
 
"KRN",9.2,518,1,19,0)
  * Subject - Subject of each message in the mail basket.
"KRN",9.2,518,1,20,0)
 
"KRN",9.2,518,1,21,0)
  * From - The name of the person who sent each message in the mail basket.
"KRN",9.2,519,-1)
0^312
"KRN",9.2,519,0)
XM-U-B-READER CLASSIC^CLASSIC MESSAGE READER^2990428.0647^^
"KRN",9.2,519,1,0)
^^15^15^2990428^^
"KRN",9.2,519,1,1,0)
 
"KRN",9.2,519,1,2,0)
The Classic message reader provides two levels of detail when listing
"KRN",9.2,519,1,3,0)
messages in a basket, depending on whether you enter one or two question marks:
"KRN",9.2,519,1,4,0)
 
"KRN",9.2,519,1,5,0)
 ?         Provides [SUMMARY] information.
"KRN",9.2,519,1,6,0)
 ??        Provides Summary information and additional [DETAILED] information.
"KRN",9.2,519,1,7,0)
 
"KRN",9.2,519,1,8,0)
The Classic message reader indicates the next message to be read in a
"KRN",9.2,519,1,9,0)
mail basket (in the [ORDER] you've specified) by displaying the basket name
"KRN",9.2,519,1,10,0)
and the message number in that basket.  Optionally, the message reader
"KRN",9.2,519,1,11,0)
will also display a [PREVIEW] of the message subject and sender.
"KRN",9.2,519,1,12,0)
 
"KRN",9.2,519,1,13,0)
At this point you can enter one or two question marks to see a message list,
"KRN",9.2,519,1,14,0)
enter one of the [BASKET] actions, read a message and perform [MESSAGE] actions
"KRN",9.2,519,1,15,0)
on it, or [NAVIGATE] about the basket and beyond.
"KRN",9.2,519,2,0)
^9.22^7^7
"KRN",9.2,519,2,1,0)
BASKET^XM-U-BO-CLASSIC
"KRN",9.2,519,2,2,0)
DETAILED^XM-U-B-READER DETAILED
"KRN",9.2,519,2,3,0)
MESSAGE^XM-U-MO-READ
"KRN",9.2,519,2,4,0)
NAVIGATE^XM-U-B-NAVIGATE CLASSIC
"KRN",9.2,519,2,5,0)
ORDER^XM-U-P-MESSAGE ORDER
"KRN",9.2,519,2,6,0)
SUMMARY^XM-U-B-READER SUMMARY
"KRN",9.2,519,2,7,0)
PREVIEW^XM-U-P-SHOW MESSAGE PREVIEW
"KRN",9.2,520,-1)
0^128
"KRN",9.2,520,0)
XM-U-B-READER^MAILMAN MESSAGE READERS^2990106.0738^^
"KRN",9.2,520,1,0)
^^15^15^2990108^
"KRN",9.2,520,1,1,0)
 
"KRN",9.2,520,1,2,0)
MailMan provides message readers for you to list, read, and manage your
"KRN",9.2,520,1,3,0)
messages when using the Read/Manage Messages option:
"KRN",9.2,520,1,4,0)
 
"KRN",9.2,520,1,5,0)
  * [CLASSIC]
"KRN",9.2,520,1,6,0)
 
"KRN",9.2,520,1,7,0)
  * [FULL SCREEN], either Detailed or Summary
"KRN",9.2,520,1,8,0)
 
"KRN",9.2,520,1,9,0)
You can set your [DEFAULT MESSAGE READER] and decide whether or not
"KRN",9.2,520,1,10,0)
MailMan should [PROMPT] you to choose a message reader whenever you read
"KRN",9.2,520,1,11,0)
messages.
"KRN",9.2,520,1,12,0)
 
"KRN",9.2,520,1,13,0)
The readers share most [BASKET] actions, which help you manage groups of
"KRN",9.2,520,1,14,0)
messages, but each reader has some actions which are unique to it. The readers
"KRN",9.2,520,1,15,0)
share the same [MESSAGE] actions, which help you manage individual messages. 
"KRN",9.2,520,2,0)
^9.22^7^6
"KRN",9.2,520,2,1,0)
BASKET^XM-U-B-READER DIFF
"KRN",9.2,520,2,2,0)
CLASSIC^XM-U-B-READER CLASSIC
"KRN",9.2,520,2,3,0)
DEFAULT MESSAGE READER^XM-U-P-READER DEFAULT
"KRN",9.2,520,2,4,0)
FULL SCREEN^XM-U-B-READER FULL SCREEN
"KRN",9.2,520,2,5,0)
MESSAGE^XM-U-MO-READ
"KRN",9.2,520,2,7,0)
PROMPT^XM-U-P-READER PROMPT
"KRN",9.2,521,-1)
0^302
"KRN",9.2,521,0)
XM-U-R-READ-2^READING AND MANAGING YOUR MAIL (CONTINUED)^2990113.1543^^
"KRN",9.2,521,1,0)
^^17^17^2990113^^
"KRN",9.2,521,1,1,0)
 
"KRN",9.2,521,1,2,0)
When reading/managing your mail, MailMan will ask you to choose the
"KRN",9.2,521,1,3,0)
following:
"KRN",9.2,521,1,4,0)
 
"KRN",9.2,521,1,5,0)
  [READER] - Optionally, MailMan may ask you to choose your message reader
"KRN",9.2,521,1,6,0)
           (i.e., Classic, Summary Full Screen, or Detailed Full
"KRN",9.2,521,1,7,0)
           Screen message readers. If you set the MESSAGE READER
"KRN",9.2,521,1,8,0)
           [PROMPT] to 'Do not ask,' MailMan will not ask for this
"KRN",9.2,521,1,9,0)
           information.
"KRN",9.2,521,1,10,0)
 
"KRN",9.2,521,1,11,0)
  [BASKET] - Choose from which basket you wish to process your mail. All
"KRN",9.2,521,1,12,0)
           users have an 'IN' basket and a 'WASTE' basket. Additionally,
"KRN",9.2,521,1,13,0)
           users may have created other 'save' baskets. When reading
"KRN",9.2,521,1,14,0)
           messages, the default is to start reading from the 'IN'
"KRN",9.2,521,1,15,0)
           basket.
"KRN",9.2,521,1,16,0)
 
"KRN",9.2,521,1,17,0)
[MORE]...
"KRN",9.2,521,2,0)
^9.22A^8^4
"KRN",9.2,521,2,4,0)
READER^XM-U-B-READER
"KRN",9.2,521,2,5,0)
BASKET^XM-U-B-BASKET SELECT
"KRN",9.2,521,2,7,0)
MORE^XM-U-R-READ-3
"KRN",9.2,521,2,8,0)
PROMPT^XM-U-P-READER PROMPT
"KRN",9.2,522,-1)
0^303
"KRN",9.2,522,0)
XM-U-R-READ-3^READING AND MANAGING YOUR MAIL (CONTINUED)^2981231.132436^^
"KRN",9.2,522,1,0)
^^18^18^2981231^
"KRN",9.2,522,1,1,0)
 
"KRN",9.2,522,1,2,0)
  [LIST]   - Using the full-screen message readers, you are presented with
"KRN",9.2,522,1,3,0)
           a list of messages, here you can choose from several options.
"KRN",9.2,522,1,4,0)
           Using the Classic message reader, MailMan will preview the
"KRN",9.2,522,1,5,0)
           message that will be read or you can enter one or two
"KRN",9.2,522,1,6,0)
           question marks to get a list of messages from which you can
"KRN",9.2,522,1,7,0)
           choose from several options.
"KRN",9.2,522,1,8,0)
 
"KRN",9.2,522,1,9,0)
  [ACTION] - After reading a message, you are prompted for a message
"KRN",9.2,522,1,10,0)
           action. Here, you can reply to the message or choose from
"KRN",9.2,522,1,11,0)
           several other options.
"KRN",9.2,522,1,12,0)
 
"KRN",9.2,522,1,13,0)
NOTE: Messages contain message [HEADERS] that are displayed prior to the
"KRN",9.2,522,1,14,0)
      text of the message.
"KRN",9.2,522,1,15,0)
 
"KRN",9.2,522,1,16,0)
      Also, you can list all messages in an individual basket or list all
"KRN",9.2,522,1,17,0)
      messages in your mailbox through the Mailbox [CONTENTS] List option
"KRN",9.2,522,1,18,0)
      on the Other MailMan Functions menu.
"KRN",9.2,522,2,0)
^9.22A^4^4
"KRN",9.2,522,2,1,0)
LIST^XM-U-B-READER DIFF
"KRN",9.2,522,2,2,0)
ACTION^XM-U-MO-READ
"KRN",9.2,522,2,3,0)
CONTENTS^XM-U-B-BASKET CONTENTS LIST
"KRN",9.2,522,2,4,0)
HEADERS^XM-U-M-MESSAGE HEADER
"KRN",9.2,523,-1)
0^227
"KRN",9.2,523,0)
XM-U-M-REPLY-2^REPLYING TO A MESSAGE (CONTINUED)^2981231.13452^
"KRN",9.2,523,1,0)
^^21^21^2990514^
"KRN",9.2,523,1,1,0)
 
"KRN",9.2,523,1,2,0)
Also, if while composing a reply to a message another reply comes in to
"KRN",9.2,523,1,3,0)
the same message, you will be prompted with the following text when
"KRN",9.2,523,1,4,0)
exiting the editor (prior to sending your reply):
"KRN",9.2,523,1,5,0)
 
"KRN",9.2,523,1,6,0)
    >> Response n has arrived - you may backup to see it. <<
"KRN",9.2,523,1,7,0)
                ^
"KRN",9.2,523,1,8,0)
                |
"KRN",9.2,523,1,9,0)
      (n = the response number)
"KRN",9.2,523,1,10,0)
 
"KRN",9.2,523,1,11,0)
When you are given the opportunity to back up to see new responses, you
"KRN",9.2,523,1,12,0)
can enter a 'B' ([BACKUP]) at the 'Select Message option:  Transmit now//'
"KRN",9.2,523,1,13,0)
prompt. The default will be to back up to this new, unseen response,
"KRN",9.2,523,1,14,0)
instead of the original message (response 0). Thus, you can back up and
"KRN",9.2,523,1,15,0)
read the latest response(s).
"KRN",9.2,523,1,16,0)
 
"KRN",9.2,523,1,17,0)
Since you haven't transmitted your response yet, you may choose to revise
"KRN",9.2,523,1,18,0)
your own reply based on that new response. You simply enter 'E' (Edit your
"KRN",9.2,523,1,19,0)
reply) at the 'Select Message option:  Transmit now//' prompt, and you are
"KRN",9.2,523,1,20,0)
put back into the editor where you can modify your reply based on what you
"KRN",9.2,523,1,21,0)
just read.
"KRN",9.2,523,2,0)
^9.22A^1^1
"KRN",9.2,523,2,1,0)
BACKUP^XM-U-M-BACKUP
"KRN",9.2,524,-1)
0^258
"KRN",9.2,524,0)
XM-U-P-FILTER CRITERIA^FILTERING MAIL CRITERIA^2990114.1325^^
"KRN",9.2,524,1,0)
^^21^21^2990427^
"KRN",9.2,524,1,1,0)
 
"KRN",9.2,524,1,2,0)
The following three criteria can be used in any combination when filtering
"KRN",9.2,524,1,3,0)
mail:
"KRN",9.2,524,1,4,0)
 
"KRN",9.2,524,1,5,0)
  * SUBJECT CONTAINS - Subject of the message. The string entered can
"KRN",9.2,524,1,6,0)
    appear anywhere in the subject.
"KRN",9.2,524,1,7,0)
 
"KRN",9.2,524,1,8,0)
  * FROM - The name of the person who sent the message (partial matching
"KRN",9.2,524,1,9,0)
    possible).
"KRN",9.2,524,1,10,0)
 
"KRN",9.2,524,1,11,0)
  * ADDRESSED TO - Addressee of the message. This includes users and mail
"KRN",9.2,524,1,12,0)
    groups. MailMan will check the addressees that you see when you
"KRN",9.2,524,1,13,0)
    [QUERY] (Q) the message.
"KRN",9.2,524,1,14,0)
 
"KRN",9.2,524,1,15,0)
For the filter to take effect, all criteria entered must be true (i.e.,
"KRN",9.2,524,1,16,0)
match the characteristics of the message). For example, if you specify the
"KRN",9.2,524,1,17,0)
'SUBJECT CONTAINS' and 'FROM,' the filter takes effect only if the subject
"KRN",9.2,524,1,18,0)
of the message contains the string you specified in the 'SUBJECT CONTAINS'
"KRN",9.2,524,1,19,0)
field and the message is from the person you specified in the 'FROM' field.
"KRN",9.2,524,1,20,0)
 
"KRN",9.2,524,1,21,0)
[MORE]...
"KRN",9.2,524,2,0)
^9.22A^2^2
"KRN",9.2,524,2,1,0)
QUERY^XM-U-M-QUERY GENERAL
"KRN",9.2,524,2,2,0)
MORE^XM-U-P-FILTER CRITERIA-2
"KRN",9.2,525,-1)
0^315
"KRN",9.2,525,0)
XM-U-P-FILTER-2^FILTERING MAIL (CONTINUED)^2981231.140839^
"KRN",9.2,525,1,0)
^^16^16^2990505^
"KRN",9.2,525,1,1,0)
 
"KRN",9.2,525,1,2,0)
In addition to setting the filtering criteria, when you want MailMan to
"KRN",9.2,525,1,3,0)
use a specific filter the following conditions must be met:
"KRN",9.2,525,1,4,0)
 
"KRN",9.2,525,1,5,0)
  * Filtering must be turned on for your mailbox.
"KRN",9.2,525,1,6,0)
 
"KRN",9.2,525,1,7,0)
  * The filter's status must be active (i.e., STATUS field).
"KRN",9.2,525,1,8,0)
 
"KRN",9.2,525,1,9,0)
  * The filter must be the first filter (i.e., controlled by the [ORDER]
"KRN",9.2,525,1,10,0)
    field) whose criteria matches the message characteristics (i.e.,
"KRN",9.2,525,1,11,0)
    subject contents, sender of the message, and/or message addressee).
"KRN",9.2,525,1,12,0)
 
"KRN",9.2,525,1,13,0)
Filtering takes place during message delivery. Filtering can also be
"KRN",9.2,525,1,14,0)
selected as a [BASKET ACTION] (i.e., FI).
"KRN",9.2,525,1,15,0)
 
"KRN",9.2,525,1,16,0)
[MORE]... 
"KRN",9.2,525,2,0)
^9.22A^3^3
"KRN",9.2,525,2,1,0)
ORDER^XM-U-P-FILTER ORDER
"KRN",9.2,525,2,2,0)
BASKET ACTION^XM-U-B-FILTER
"KRN",9.2,525,2,3,0)
MORE^XM-U-P-FILTER-3
"KRN",9.2,526,-1)
0^256
"KRN",9.2,526,0)
XM-U-P-FILTER CRITERIA-2^FILTERING MAIL CRITERIA (CONTINUED)^2981231.141918^
"KRN",9.2,526,1,0)
^^4^4^2990427^
"KRN",9.2,526,1,1,0)
 
"KRN",9.2,526,1,2,0)
If you wish the filter to take effect upon either 'SUBJECT CONTAINS' or
"KRN",9.2,526,1,3,0)
'FROM,' you must create two separate filters: one with 'SUBJECT CONTAINS'
"KRN",9.2,526,1,4,0)
and another with 'FROM' as your filter criteria.
"KRN",9.2,527,-1)
0^221
"KRN",9.2,527,0)
XM-U-M-QUERY INFO REMOTE^REMOTE USER QUERY INFORMATION^2981231.14393^
"KRN",9.2,527,1,0)
^^20^20^2981231^
"KRN",9.2,527,1,1,0)
 
"KRN",9.2,527,1,2,0)
For each remote recipient, MailMan provides the following information
"KRN",9.2,527,1,3,0)
when doing a Query:
"KRN",9.2,527,1,4,0)
 
"KRN",9.2,527,1,5,0)
  * Name - MailMan displays the name of the remote recipient.
"KRN",9.2,527,1,6,0)
 
"KRN",9.2,527,1,7,0)
  * Sent - The date and time the message was sent over the network to the
"KRN",9.2,527,1,8,0)
    remote recipient.
"KRN",9.2,527,1,9,0)
 
"KRN",9.2,527,1,10,0)
  * Time - This is the time (in seconds) it took to transmit the message
"KRN",9.2,527,1,11,0)
    over the network to the remote recipient.
"KRN",9.2,527,1,12,0)
 
"KRN",9.2,527,1,13,0)
  * Remote Message ID - If sent to a remote MailMan user, MailMan displays
"KRN",9.2,527,1,14,0)
    the internal message identification number for the message and the
"KRN",9.2,527,1,15,0)
    remote user's MailMan location. This information is not displayed when
"KRN",9.2,527,1,16,0)
    the message is sent to a non-MailMan location.
"KRN",9.2,527,1,17,0)
 
"KRN",9.2,527,1,18,0)
  * Forwarding Information - If the message was forwarded to the remote
"KRN",9.2,527,1,19,0)
    recipient, MailMan indicates the name of the person who forwarded the
"KRN",9.2,527,1,20,0)
    message and the date and time the message was forwarded.
"KRN",9.2,528,-1)
0^220
"KRN",9.2,528,0)
XM-U-M-QUERY INFO LOCAL^LOCAL USER QUERY INFORMATION^2981231.144304^
"KRN",9.2,528,1,0)
^^30^30^2990111^
"KRN",9.2,528,1,1,0)
 
"KRN",9.2,528,1,2,0)
For each local recipient, MailMan provides the following information when
"KRN",9.2,528,1,3,0)
doing a Query:
"KRN",9.2,528,1,4,0)
 
"KRN",9.2,528,1,5,0)
  * Name - MailMan displays the name of the local recipient.
"KRN",9.2,528,1,6,0)
 
"KRN",9.2,528,1,7,0)
  * Status - This indicates the current status of the message in the local
"KRN",9.2,528,1,8,0)
    recipient's mailbox. For example, if and when the recipient read the
"KRN",9.2,528,1,9,0)
    message. This includes the following information:
"KRN",9.2,528,1,10,0)
 
"KRN",9.2,528,1,11,0)
      - Not read - If the local recipient hasn't read the message, MailMan
"KRN",9.2,528,1,12,0)
        displays this message.
"KRN",9.2,528,1,13,0)
 
"KRN",9.2,528,1,14,0)
      - First read date and time - The date and time the local recipient
"KRN",9.2,528,1,15,0)
        first read the message.
"KRN",9.2,528,1,16,0)
 
"KRN",9.2,528,1,17,0)
      - Last read date and time - The date and time the local recipient
"KRN",9.2,528,1,18,0)
        last read the message. Associated with this date is the number of
"KRN",9.2,528,1,19,0)
        responses read. If the message has any responses, MailMan
"KRN",9.2,528,1,20,0)
        indicates the total number of responses read (if any).
"KRN",9.2,528,1,21,0)
 
"KRN",9.2,528,1,22,0)
      - Terminated date and time-If the local recipient has terminated the
"KRN",9.2,528,1,23,0)
        message, MailMan displays the date that they terminated the
"KRN",9.2,528,1,24,0)
        message.
"KRN",9.2,528,1,25,0)
 
"KRN",9.2,528,1,26,0)
     NOTE: MailMan also indicates when a surrogate has read a message.
"KRN",9.2,528,1,27,0)
 
"KRN",9.2,528,1,28,0)
  * Forwarding Information - If the message was forwarded to the local
"KRN",9.2,528,1,29,0)
    recipient, MailMan indicates the name of the person who forwarded the
"KRN",9.2,528,1,30,0)
    message and the date and time the message was forwarded.
"KRN",9.2,529,-1)
0^219
"KRN",9.2,529,0)
XM-U-M-QUERY INFO BASIC^BASIC QUERY INFORMATION^2981231.150607^
"KRN",9.2,529,1,0)
^^12^12^2981231^
"KRN",9.2,529,1,1,0)
 
"KRN",9.2,529,1,2,0)
When doing a query on a message, MailMan will always display the following
"KRN",9.2,529,1,3,0)
basic information about the message:
"KRN",9.2,529,1,4,0)
 
"KRN",9.2,529,1,5,0)
  * Message Header - The message header includes the 'Subject,' and 'From'
"KRN",9.2,529,1,6,0)
    information of the message.
"KRN",9.2,529,1,7,0)
 
"KRN",9.2,529,1,8,0)
  * Local Message ID - This is the MailMan internal message identification
"KRN",9.2,529,1,9,0)
    number and MailMan location.
"KRN",9.2,529,1,10,0)
 
"KRN",9.2,529,1,11,0)
  * Number of Recipients - This is the total number of recipients of the
"KRN",9.2,529,1,12,0)
    message (including the total number of members in any mail groups).
"KRN",9.2,530,-1)
0^223
"KRN",9.2,530,0)
XM-U-M-QUERY NETWORK-2^NETWORK QUERY ON A MESSAGE (CONTINUED)^2981231.151419^
"KRN",9.2,530,1,0)
^^9^9^2990427^
"KRN",9.2,530,1,1,0)
 
"KRN",9.2,530,1,2,0)
You won't notice a difference with messages from other MailMan systems.
"KRN",9.2,530,1,3,0)
However, other non-MailMan systems sometimes include clear-text names in
"KRN",9.2,530,1,4,0)
the 'From' address, in addition to the e-mail address. For example:
"KRN",9.2,530,1,5,0)
 
"KRN",9.2,530,1,6,0)
    "'Fred Smith' <fred@anydomain.com>"
"KRN",9.2,530,1,7,0)
 
"KRN",9.2,530,1,8,0)
To query a message for network and detailed recipient information, enter a
"KRN",9.2,530,1,9,0)
'QN' at the 'Enter message action' prompt.
"KRN",9.2,531,-1)
0^225
"KRN",9.2,531,0)
XM-U-M-QUERY-2^QUERYING A MESSAGE FOR ITS STATUS (CONTINUED)^2981231.152701^
"KRN",9.2,531,1,0)
^^4^4^2981231^^
"KRN",9.2,531,1,1,0)
 
"KRN",9.2,531,1,2,0)
NOTE: Since [MAIL GROUP] membership is dynamic and message recipients are
"KRN",9.2,531,1,3,0)
      resolved at the time the message is addressed, messages addressed to
"KRN",9.2,531,1,4,0)
      the same Mail Group can have different lists of recipients.
"KRN",9.2,531,2,0)
^9.22A^1^1
"KRN",9.2,531,2,1,0)
MAIL GROUP^XM-U-I-GROUP
"KRN",9.2,532,-1)
0^164
"KRN",9.2,532,0)
XM-U-I-GROUP-2^MAIL GROUPS (CONTINUED)^2981231.153216^
"KRN",9.2,532,1,0)
^^20^20^2990111^
"KRN",9.2,532,1,1,0)
 
"KRN",9.2,532,1,2,0)
If a user attempts to send mail to a group that has one or more Authorized
"KRN",9.2,532,1,3,0)
Senders, and they are not one of them, they are shown a list of Authorized
"KRN",9.2,532,1,4,0)
Senders. They can send the message to one of these users who can forward
"KRN",9.2,532,1,5,0)
it to the group, if desired. Remote users cannot send mail to any local
"KRN",9.2,532,1,6,0)
group which has Authorized Senders. Any messages sent by a remote user to
"KRN",9.2,532,1,7,0)
a group with Authorized Senders will be rejected.
"KRN",9.2,532,1,8,0)
 
"KRN",9.2,532,1,9,0)
The MailMan interface provides three options to manage mail groups:
"KRN",9.2,532,1,10,0)
 
"KRN",9.2,532,1,11,0)
  * Help (User/Group Info., etc.) - Use this option to get [INFORMATION]
"KRN",9.2,532,1,12,0)
    on mail groups. This option is located on the main MailMan Menu.
"KRN",9.2,532,1,13,0)
 
"KRN",9.2,532,1,14,0)
  * Enroll in (or Disenroll from) a Mail Group - Use this option to enroll
"KRN",9.2,532,1,15,0)
    in or disenroll from [PUBLIC] mail groups. This option is located on
"KRN",9.2,532,1,16,0)
    the Personal Preferences menu.
"KRN",9.2,532,1,17,0)
 
"KRN",9.2,532,1,18,0)
  * Personal Mail Group Edit - Use this option to create your own
"KRN",9.2,532,1,19,0)
    [PERSONAL] (Private) mail groups. This option is located on the
"KRN",9.2,532,1,20,0)
    Personal Preferences menu.
"KRN",9.2,532,2,0)
^9.22A^3^3
"KRN",9.2,532,2,1,0)
INFORMATION^XM-U-H-GROUP
"KRN",9.2,532,2,2,0)
PERSONAL^XM-U-P-GROUP PERSONAL
"KRN",9.2,532,2,3,0)
PUBLIC^XM-U-P-GROUP ENROLL
"KRN",9.2,533,-1)
0^261
"KRN",9.2,533,0)
XM-U-P-GROUP ENROLL^PUBLIC MAIL GROUPS^2981231.153537^
"KRN",9.2,533,1,0)
^^19^19^2990111^
"KRN",9.2,533,1,1,0)
 
"KRN",9.2,533,1,2,0)
MailMan gives you the opportunity to enroll in Public mail groups using
"KRN",9.2,533,1,3,0)
the Enroll in (or Disenroll from) a Mail Group option. You can also remove
"KRN",9.2,533,1,4,0)
yourself (disenroll) from mail groups using the same option. The operation
"KRN",9.2,533,1,5,0)
of this option depends on your current membership status and the
"KRN",9.2,533,1,6,0)
enrollment capability of the mail group:
"KRN",9.2,533,1,7,0)
 
"KRN",9.2,533,1,8,0)
  * Enrolling - If you are not a member of a particular mail group and the
"KRN",9.2,533,1,9,0)
    mail group allows self-enrollment, MailMan will enroll you as a member
"KRN",9.2,533,1,10,0)
    in that mail group when you use the Enroll in (or Disenroll from) a
"KRN",9.2,533,1,11,0)
    Mail Group option.
"KRN",9.2,533,1,12,0)
 
"KRN",9.2,533,1,13,0)
  * Disenrolling - If you already are a member of a particular mail group
"KRN",9.2,533,1,14,0)
    and the mail group allows self-enrollment, MailMan will confirm your
"KRN",9.2,533,1,15,0)
    membership and ask you if you want to disenroll yourself from the mail
"KRN",9.2,533,1,16,0)
    group when you use the Enroll in (or Disenroll from) a Mail Group
"KRN",9.2,533,1,17,0)
    option.
"KRN",9.2,533,1,18,0)
 
"KRN",9.2,533,1,19,0)
[MORE]...
"KRN",9.2,533,2,0)
^9.22A^1^1
"KRN",9.2,533,2,1,0)
MORE^XM-U-P-GROUP ENROLL-2
"KRN",9.2,534,-1)
0^262
"KRN",9.2,534,0)
XM-U-P-GROUP ENROLL-2^PUBLIC MAIL GROUPS (CONTINUED)^2981231.153728^
"KRN",9.2,534,1,0)
^^7^7^2990111^
"KRN",9.2,534,1,1,0)
 
"KRN",9.2,534,1,2,0)
MailMan lets you enroll in or disenroll from a mail group when the group
"KRN",9.2,534,1,3,0)
allows self-enrollment. However, if a mail group does not allow
"KRN",9.2,534,1,4,0)
self-enrollment (i.e., MailMan indicates that '...Self Enrollment Not
"KRN",9.2,534,1,5,0)
Allowed.' after a mail group name), you must contact the Mail Group
"KRN",9.2,534,1,6,0)
[COORDINATOR] or Organizer for that particular mail group and ask
"KRN",9.2,534,1,7,0)
either to be enrolled in or disenrolled from the mail group.
"KRN",9.2,534,2,0)
^9.22A^1^1
"KRN",9.2,534,2,1,0)
COORDINATOR^XM-U-I-GROUP COORDINATOR
"KRN",9.2,535,-1)
0^263
"KRN",9.2,535,0)
XM-U-P-GROUP PERSONAL^PERSONAL MAIL GROUPS^2990120.1319^^
"KRN",9.2,535,1,0)
^^21^21^2990120^^^
"KRN",9.2,535,1,1,0)
 
"KRN",9.2,535,1,2,0)
Personal, or Private, mail groups are mail groups you create and maintain for
"KRN",9.2,535,1,3,0)
your own use. Only the creator of the mail group (i.e., Organizer) can address
"KRN",9.2,535,1,4,0)
and send mail to this group. Other members cannot use this group. However, both
"KRN",9.2,535,1,5,0)
the creator (i.e., Organizer) and members of the personal mail group can: 
"KRN",9.2,535,1,6,0)
 
"KRN",9.2,535,1,7,0)
  * Display Information - Use the Group [INFORMATION] option on the Help
"KRN",9.2,535,1,8,0)
    (User/Group Info., etc.) menu to display information on that group.
"KRN",9.2,535,1,9,0)
 
"KRN",9.2,535,1,10,0)
  * List the Group - See the group listed in the MAIL GROUP List when you
"KRN",9.2,535,1,11,0)
    enter two question marks (i.e., online help) at the 'Select MAIL GROUP
"KRN",9.2,535,1,12,0)
    NAME:' prompt.
"KRN",9.2,535,1,13,0)
 
"KRN",9.2,535,1,14,0)
To create a new or edit an existing personal mail group, use the Personal Mail
"KRN",9.2,535,1,15,0)
Group Edit option on the Personal Preferences menu. You can add or delete
"KRN",9.2,535,1,16,0)
members at any time. You can also use this option to delete the entire personal
"KRN",9.2,535,1,17,0)
mail group. Even though you are the Organizer of the group, you are not
"KRN",9.2,535,1,18,0)
automatically made a member. Thus, you should also make yourself a member of
"KRN",9.2,535,1,19,0)
the personal mail group. 
"KRN",9.2,535,1,20,0)

"KRN",9.2,535,1,21,0)
[MORE]... 
"KRN",9.2,535,2,0)
^9.22A^2^2
"KRN",9.2,535,2,1,0)
MORE^XM-U-P-GROUP PERSONAL-2
"KRN",9.2,535,2,2,0)
INFORMATION^XM-U-H-GROUP
"KRN",9.2,536,-1)
0^146
"KRN",9.2,536,0)
XM-U-H-GROUP^MAIL GROUP INFORMATION^2990120.1146^^
"KRN",9.2,536,1,0)
^^21^21^2990120^^
"KRN",9.2,536,1,1,0)
 
"KRN",9.2,536,1,2,0)
MailMan gives you the opportunity to obtain information on a mail group
"KRN",9.2,536,1,3,0)
through the Group Information option on the Help (User/Group Info., etc.)
"KRN",9.2,536,1,4,0)
menu option located on the main MailMan Menu.
"KRN",9.2,536,1,5,0)
 
"KRN",9.2,536,1,6,0)
You can obtain the following mail group information:
"KRN",9.2,536,1,7,0)
 
"KRN",9.2,536,1,8,0)
  * Name - The name of the mail group.
"KRN",9.2,536,1,9,0)
 
"KRN",9.2,536,1,10,0)
  * Type - The type of mail group determines who can send mail to it.
"KRN",9.2,536,1,11,0)
    Mail groups can be either of the following two types:
"KRN",9.2,536,1,12,0)
 
"KRN",9.2,536,1,13,0)
      - Public
"KRN",9.2,536,1,14,0)
      - Private ([PERSONAL])
"KRN",9.2,536,1,15,0)
 
"KRN",9.2,536,1,16,0)
    Provided there are no Authorized Senders specified, anyone can send
"KRN",9.2,536,1,17,0)
    mail to a public group and only its members can send mail to a private
"KRN",9.2,536,1,18,0)
    group. If there are Authorized Senders specified, only those users can
"KRN",9.2,536,1,19,0)
    address the group.
"KRN",9.2,536,1,20,0)
 
"KRN",9.2,536,1,21,0)
[MORE]... 
"KRN",9.2,536,2,0)
^9.22A^2^2
"KRN",9.2,536,2,1,0)
MORE^XM-U-H-GROUP-2
"KRN",9.2,536,2,2,0)
PERSONAL^XM-U-P-GROUP PERSONAL
"KRN",9.2,537,-1)
0^147
"KRN",9.2,537,0)
XM-U-H-GROUP-2^MAIL GROUP INFORMATION (CONTINUED)^2981231.15525^
"KRN",9.2,537,1,0)
^^22^22^2990111^
"KRN",9.2,537,1,1,0)
 
"KRN",9.2,537,1,2,0)
  * Allow Self-Enrollment? - Is self-enrollment allowed ('Yes' or 'No')?
"KRN",9.2,537,1,3,0)
    If 'Yes,' you can enroll yourself in or disenroll yourself from a mail
"KRN",9.2,537,1,4,0)
    group. If 'No,' you must contact the Coordinator or Organizer of the
"KRN",9.2,537,1,5,0)
    mail group to either enroll you in or disenroll you from the group.
"KRN",9.2,537,1,6,0)
 
"KRN",9.2,537,1,7,0)
  * Reference Count - How many times the mail group has been referenced
"KRN",9.2,537,1,8,0)
    (used).
"KRN",9.2,537,1,9,0)
 
"KRN",9.2,537,1,10,0)
  * Last Referenced - The last date and time this group was referenced
"KRN",9.2,537,1,11,0)
    (sent a message).
"KRN",9.2,537,1,12,0)
 
"KRN",9.2,537,1,13,0)
  * Restrictions - This field provides the opportunity for the Oganizer of
"KRN",9.2,537,1,14,0)
    the mail group to establish a personal mailing list to use for sending
"KRN",9.2,537,1,15,0)
    mail in the 'G.GROUPNAME' format. Possible values include:
"KRN",9.2,537,1,16,0)
    UNRESTRICTED, ORGANIZER ONLY, LOCAL, ORGANIZER/LOCAL, INDIVIDUALS,
"KRN",9.2,537,1,17,0)
    INDIV/ORGANIZER, INDIV/LOCAL, and INDIV/LOCAL/ORGANIZER. If set to
"KRN",9.2,537,1,18,0)
    'ORGANIZER ONLY,' only the organizer is allowed to address the group.
"KRN",9.2,537,1,19,0)
    The members are simply recipients without any other privileges with
"KRN",9.2,537,1,20,0)
    respect to the group.
"KRN",9.2,537,1,21,0)
 
"KRN",9.2,537,1,22,0)
[MORE]... 
"KRN",9.2,537,2,0)
^9.22A^2^1
"KRN",9.2,537,2,2,0)
MORE^XM-U-H-GROUP-3
"KRN",9.2,538,-1)
0^148
"KRN",9.2,538,0)
XM-U-H-GROUP-3^MAIL GROUP INFORMATION (CONTINUED)^2981231.155511^
"KRN",9.2,538,1,0)
^^18^18^2990111^
"KRN",9.2,538,1,1,0)
 
"KRN",9.2,538,1,2,0)
  * [COORDINATOR] - The person responsible for maintaining the membership
"KRN",9.2,538,1,3,0)
    of the mail group. In order to be a Coordinator, you must hold the
"KRN",9.2,538,1,4,0)
    XMMGR security key.
"KRN",9.2,538,1,5,0)
 
"KRN",9.2,538,1,6,0)
  * Description - Description of the mail group.
"KRN",9.2,538,1,7,0)
 
"KRN",9.2,538,1,8,0)
  * Organizer - The organizer is the person who set up/created the mail
"KRN",9.2,538,1,9,0)
    group. An Organizer can add new members to a [PRIVATE] mail group.
"KRN",9.2,538,1,10,0)
 
"KRN",9.2,538,1,11,0)
  * Authorized Senders - Authorized Senders are the only users that are
"KRN",9.2,538,1,12,0)
    allowed to send mail to the mail group. If unspecified, it is assumed
"KRN",9.2,538,1,13,0)
    that anyone can send mail to the group, if [PUBLIC], or only members
"KRN",9.2,538,1,14,0)
    can send to it, if [PRIVATE]. Remote users cannot send mail to any
"KRN",9.2,538,1,15,0)
    local group which has Authorized Senders. Any messages sent by a
"KRN",9.2,538,1,16,0)
    remote user to a group with Authorized Senders will be rejected.
"KRN",9.2,538,1,17,0)
 
"KRN",9.2,538,1,18,0)
[MORE]... 
"KRN",9.2,538,2,0)
^9.22A^4^4
"KRN",9.2,538,2,1,0)
MORE^XM-U-H-GROUP-4
"KRN",9.2,538,2,2,0)
COORDINATOR^XM-U-I-GROUP COORDINATOR
"KRN",9.2,538,2,3,0)
PRIVATE^XM-U-P-GROUP PERSONAL
"KRN",9.2,538,2,4,0)
PUBLIC^XM-U-P-GROUP ENROLL
"KRN",9.2,539,-1)
0^109
"KRN",9.2,539,0)
XM-U-A-GROUP LARGE-2^ADDRESSING MAIL TO LARGE MAIL GROUPS (CONTINUED)^2981231.160231^
"KRN",9.2,539,1,0)
^^21^21^2981231^
"KRN",9.2,539,1,1,0)
 
"KRN",9.2,539,1,2,0)
If you need to selectively remove (minus) members from the group, you
"KRN",9.2,539,1,3,0)
should not 'later' the delivery of the message to that group.
"KRN",9.2,539,1,4,0)
 
"KRN",9.2,539,1,5,0)
If the total number of members in a mail group is equal to or greater than
"KRN",9.2,539,1,6,0)
the value in the [BIG GROUP SIZE] field, the mail group is considered to
"KRN",9.2,539,1,7,0)
be a 'large' mail group and treated accordingly. Conversely, if the total
"KRN",9.2,539,1,8,0)
number of members in a mail group are less than this number, they will be
"KRN",9.2,539,1,9,0)
treated as 'small-' to 'medium-sized' mail groups and processed in the
"KRN",9.2,539,1,10,0)
foreground as usual.
"KRN",9.2,539,1,11,0)
 
"KRN",9.2,539,1,12,0)
For example, let's assume that IRM set our [BIG GROUP SIZE] field to 100.
"KRN",9.2,539,1,13,0)
If we were to address a message to a mail group with 100 or more members,
"KRN",9.2,539,1,14,0)
it would be considered a 'large' mail group and MailMan would ask us if we
"KRN",9.2,539,1,15,0)
wanted to 'later' delivery to this group. Conversely, any mail addressed
"KRN",9.2,539,1,16,0)
to a mail group whose total number of members was less than 100 would be
"KRN",9.2,539,1,17,0)
considered a 'small-' to 'medium-sized' group and MailMan would not ask us
"KRN",9.2,539,1,18,0)
if we wanted to deliver the message at a later date and time.
"KRN",9.2,539,1,19,0)
 
"KRN",9.2,539,1,20,0)
NOTE: A mail group is also considered large if it contains another mail
"KRN",9.2,539,1,21,0)
      group or a distribution list.
"KRN",9.2,539,2,0)
^9.22A^1^1
"KRN",9.2,539,2,1,0)
BIG GROUP SIZE^XM-I-S-BIG GROUP SIZE
"KRN",9.2,540,-1)
0^240
"KRN",9.2,540,0)
XM-U-M-WRITE-2^SENDING A NEW MESSAGE INSTEAD OF A REPLY (CONTINUED)^2990106.143836^
"KRN",9.2,540,1,0)
^^4^4^2990106^
"KRN",9.2,540,1,1,0)
 
"KRN",9.2,540,1,2,0)
Thus, don't use 'Me too's,' Write a new message. Save the many recipients
"KRN",9.2,540,1,3,0)
the time of having to read responses that are only intended for the sender
"KRN",9.2,540,1,4,0)
or a subset of recipients. 
"KRN",9.2,541,-1)
0^198
"KRN",9.2,541,0)
XM-U-M-FORWARD-2^FORWARDING MESSAGES (CONTINUED)^2990114.1053^^
"KRN",9.2,541,1,0)
^^17^17^2990427^
"KRN",9.2,541,1,1,0)
 
"KRN",9.2,541,1,2,0)
The Forward action code allows you to forward individual messages or a
"KRN",9.2,541,1,3,0)
group of messages in a mail basket:
"KRN",9.2,541,1,4,0)
 
"KRN",9.2,541,1,5,0)
  * Individually - After reading a message, enter an 'F' at the 'Enter
"KRN",9.2,541,1,6,0)
    message action' prompt. MailMan will ask to whom you wish to forward
"KRN",9.2,541,1,7,0)
    the message.
"KRN",9.2,541,1,8,0)
 
"KRN",9.2,541,1,9,0)
  * Group of Messages - Enter an 'F' at the basket option or command
"KRN",9.2,541,1,10,0)
    prompt.
"KRN",9.2,541,1,11,0)
 
"KRN",9.2,541,1,12,0)
      - MailMan will first ask you to select which messages you want to
"KRN",9.2,541,1,13,0)
        forward, including a [RANGE] of messages. Also, if you are using a
"KRN",9.2,541,1,14,0)
        full-screen reader, you can pre-[SELECT] messages and then forward
"KRN",9.2,541,1,15,0)
        them as a group.
"KRN",9.2,541,1,16,0)
 
"KRN",9.2,541,1,17,0)
      - MailMan will then ask to whom you wish to forward the messages.
"KRN",9.2,541,2,0)
^9.22^3^2
"KRN",9.2,541,2,1,0)
RANGE^XM-U-M-CHOOSE RANGE
"KRN",9.2,541,2,3,0)
SELECT^XM-U-M-CHOOSE SELECT
"KRN",9.2,544,-1)
0^213
"KRN",9.2,544,0)
XM-U-M-PRINT-2^PRINTING MESSAGES (CONTINUED)^2990120.0936^^
"KRN",9.2,544,1,0)
^^18^18^2990120^^^
"KRN",9.2,544,1,1,0)
 
"KRN",9.2,544,1,2,0)
  * Printing a Group of Messages - Enter a 'P' at the basket option or
"KRN",9.2,544,1,3,0)
    command prompt.
"KRN",9.2,544,1,4,0)
 
"KRN",9.2,544,1,5,0)
      - MailMan will first ask you to select which messages you want to
"KRN",9.2,544,1,6,0)
        print, including a [RANGE] of messages. Also, if you are using a
"KRN",9.2,544,1,7,0)
        full-screen reader, you can pre-[SELECT] messages and then print
"KRN",9.2,544,1,8,0)
        them as a group.
"KRN",9.2,544,1,9,0)
 
"KRN",9.2,544,1,10,0)
      - MailMan will then ask if you want to print a recipient list. If
"KRN",9.2,544,1,11,0)
        you choose to print recipients, you can print either a summary or
"KRN",9.2,544,1,12,0)
        detailed recipient list.
"KRN",9.2,544,1,13,0)
 
"KRN",9.2,544,1,14,0)
When your entries are complete, MailMan will ask you to select the device
"KRN",9.2,544,1,15,0)
to which you wish to print.
"KRN",9.2,544,1,16,0)
 
"KRN",9.2,544,1,17,0)
Unlike the [HEADERLESS] Print Messages action code, the Print Messages
"KRN",9.2,544,1,18,0)
action code will print the [PRINT] header and the [MESSAGE] header.
"KRN",9.2,544,2,0)
^9.22^6^5
"KRN",9.2,544,2,1,0)
RANGE^XM-U-M-CHOOSE RANGE
"KRN",9.2,544,2,3,0)
HEADERLESS^XM-U-M-PRINT NO HEADER
"KRN",9.2,544,2,4,0)
SELECT^XM-U-M-CHOOSE SELECT
"KRN",9.2,544,2,5,0)
MESSAGE^XM-U-M-MESSAGE HEADER
"KRN",9.2,544,2,6,0)
PRINT^XM-U-M-PRINT HEADER
"KRN",9.2,545,-1)
0^211
"KRN",9.2,545,0)
XM-U-M-PRINT NO HEADER-2^HEADERLESS PRINTING (CONTINUED)^2990120.0952^^
"KRN",9.2,545,1,0)
^^18^18^2990120^^^
"KRN",9.2,545,1,1,0)
 
"KRN",9.2,545,1,2,0)
  * Printing a group of Messages - Enter an 'H' at the basket option or
"KRN",9.2,545,1,3,0)
    command prompt.
"KRN",9.2,545,1,4,0)
 
"KRN",9.2,545,1,5,0)
      - MailMan will first ask you to select which messages you want to
"KRN",9.2,545,1,6,0)
        print, including a [RANGE] of messages. Also, if you are using a
"KRN",9.2,545,1,7,0)
        full-screen reader, you can pre-[SELECT] messages and then print
"KRN",9.2,545,1,8,0)
        them as a group.
"KRN",9.2,545,1,9,0)
 
"KRN",9.2,545,1,10,0)
      - MailMan will then ask if you want to print a recipient list. If
"KRN",9.2,545,1,11,0)
        you choose to print recipients, you can print either a summary or
"KRN",9.2,545,1,12,0)
        detailed recipient list.
"KRN",9.2,545,1,13,0)
 
"KRN",9.2,545,1,14,0)
When your entries are complete, MailMan will ask you to select the device
"KRN",9.2,545,1,15,0)
to which you wish to print. 
"KRN",9.2,545,1,16,0)
 
"KRN",9.2,545,1,17,0)
Unlike the [PRINT] Messages action code, the Headerless Print Messages
"KRN",9.2,545,1,18,0)
action code will NOT print the print [HEADER] and the [MESSAGE] header.
"KRN",9.2,545,2,0)
^9.22^8^5
"KRN",9.2,545,2,1,0)
RANGE^XM-U-M-CHOOSE RANGE
"KRN",9.2,545,2,4,0)
SELECT^XM-U-M-CHOOSE SELECT
"KRN",9.2,545,2,6,0)
MESSAGE^XM-U-M-MESSAGE HEADER
"KRN",9.2,545,2,7,0)
PRINT^XM-U-M-PRINT
"KRN",9.2,545,2,8,0)
HEADER^XM-U-M-PRINT HEADER
"KRN",9.2,546,-1)
0^212
"KRN",9.2,546,0)
XM-U-M-PRINT NO HEADER-3^HEADERLESS PRINTING (CONTINUED)^2990106.154514^
"KRN",9.2,546,1,0)
^^20^20^2990106^
"KRN",9.2,546,1,1,0)
 
"KRN",9.2,546,1,2,0)
Unlike the [PRINT] Messages action code, the Headerless Print Messages
"KRN",9.2,546,1,3,0)
action code will not print any 'Print' information or the 'Subject' and
"KRN",9.2,546,1,4,0)
'From' information (i.e., the header), only the text of the message
"KRN",9.2,546,1,5,0)
(including responses, if any) is printed. Specifically, the following
"KRN",9.2,546,1,6,0)
information is NOT printed:
"KRN",9.2,546,1,7,0)
 
"KRN",9.2,546,1,8,0)
   1. Your name and banner (if any).
"KRN",9.2,546,1,9,0)
   2. Where the message was printed.
"KRN",9.2,546,1,10,0)
   3. When the message was printed.
"KRN",9.2,546,1,11,0)
   4. Message subject.
"KRN",9.2,546,1,12,0)
   5. MailMan internal message identification number.
"KRN",9.2,546,1,13,0)
   6. When the message was created.
"KRN",9.2,546,1,14,0)
   7. The length of the original message without response activity.
"KRN",9.2,546,1,15,0)
   8. Who sent the original message
"KRN",9.2,546,1,16,0)
   9. The Mail Basket containing the message.
"KRN",9.2,546,1,17,0)
  10. Dotted line.
"KRN",9.2,546,1,18,0)
 
"KRN",9.2,546,1,19,0)
If you do not need or want this data to appear on the printed copy, use
"KRN",9.2,546,1,20,0)
this action code.
"KRN",9.2,546,2,0)
^9.22A^1^1
"KRN",9.2,546,2,1,0)
PRINT^XM-U-M-PRINT
"KRN",9.2,547,-1)
0^234
"KRN",9.2,547,0)
XM-U-M-TERMINATE-2^TERMINATING MESSAGES (CONTINUED)^2990114.1102^^
"KRN",9.2,547,1,0)
^^15^15^2990427^
"KRN",9.2,547,1,1,0)
 
"KRN",9.2,547,1,2,0)
To terminate messages, do the following:
"KRN",9.2,547,1,3,0)
 
"KRN",9.2,547,1,4,0)
  * Individually - After reading a message, enter a 'T' at the 'Enter
"KRN",9.2,547,1,5,0)
    message action' prompt. MailMan will terminate the message.
"KRN",9.2,547,1,6,0)
 
"KRN",9.2,547,1,7,0)
  * Group of Messages - Enter a 'T' at the basket option or command
"KRN",9.2,547,1,8,0)
    prompt.
"KRN",9.2,547,1,9,0)
 
"KRN",9.2,547,1,10,0)
      - MailMan will first ask you to select which messages you want to
"KRN",9.2,547,1,11,0)
        terminate, including a [RANGE] of messages. Also, if you are using
"KRN",9.2,547,1,12,0)
        a full-screen reader, you can pre-[SELECT] messages and then
"KRN",9.2,547,1,13,0)
        terminate them as a group.
"KRN",9.2,547,1,14,0)
 
"KRN",9.2,547,1,15,0)
      - MailMan will then ask you to confirm the termination.
"KRN",9.2,547,2,0)
^9.22^3^2
"KRN",9.2,547,2,1,0)
RANGE^XM-U-M-CHOOSE RANGE
"KRN",9.2,547,2,3,0)
SELECT^XM-U-M-CHOOSE SELECT
"KRN",9.2,548,-1)
0^201
"KRN",9.2,548,0)
XM-U-M-LATER-2^MAKE MESSAGES NEW LATER (CONTINUED)^2990106.160357^
"KRN",9.2,548,1,0)
^^18^18^2990427^
"KRN",9.2,548,1,1,0)
 
"KRN",9.2,548,1,2,0)
To 'later' individual messages, do the following:
"KRN",9.2,548,1,3,0)
 
"KRN",9.2,548,1,4,0)
  * After reading a message, enter an 'L' at the 'Enter message action'
"KRN",9.2,548,1,5,0)
    prompt. MailMan will then ask you to enter the date and time at which
"KRN",9.2,548,1,6,0)
    you want the message made 'new' again (i.e., 'latered').
"KRN",9.2,548,1,7,0)
 
"KRN",9.2,548,1,8,0)
  * If you later an individual message and then try to later the same
"KRN",9.2,548,1,9,0)
    message again, MailMan will notify you that the message has already
"KRN",9.2,548,1,10,0)
    been 'latered' and then gives you the chance to:
"KRN",9.2,548,1,11,0)
 
"KRN",9.2,548,1,12,0)
      - Add another 'Later' date on which this message should appear new.
"KRN",9.2,548,1,13,0)
 
"KRN",9.2,548,1,14,0)
      - Change the current 'Later' date.
"KRN",9.2,548,1,15,0)
 
"KRN",9.2,548,1,16,0)
      - Delete the current 'Later' date.
"KRN",9.2,548,1,17,0)
 
"KRN",9.2,548,1,18,0)
[MORE]...
"KRN",9.2,548,2,0)
^9.22A^1^1
"KRN",9.2,548,2,1,0)
MORE^XM-U-M-LATER-3
"KRN",9.2,549,-1)
0^202
"KRN",9.2,549,0)
XM-U-M-LATER-3^MAKE MESSAGES NEW LATER (CONTINUED)^2990114.1058^^
"KRN",9.2,549,1,0)
^^12^12^2990427^
"KRN",9.2,549,1,1,0)
 
"KRN",9.2,549,1,2,0)
To 'later' a group of messages, do the following:
"KRN",9.2,549,1,3,0)
 
"KRN",9.2,549,1,4,0)
  * Enter an 'L' at the basket option or command prompt.
"KRN",9.2,549,1,5,0)
 
"KRN",9.2,549,1,6,0)
      - MailMan will first ask you to select which messages you want to
"KRN",9.2,549,1,7,0)
        'later,' including a [RANGE] of messages. Also, if you are using
"KRN",9.2,549,1,8,0)
        a full-screen reader, you can pre-[SELECT] messages and then
"KRN",9.2,549,1,9,0)
        'later' them as a group.
"KRN",9.2,549,1,10,0)
 
"KRN",9.2,549,1,11,0)
      - MailMan will then ask you to enter the date and time at which you
"KRN",9.2,549,1,12,0)
        want the messages made 'new' again (i.e., 'latered').
"KRN",9.2,549,2,0)
^9.22^3^2
"KRN",9.2,549,2,1,0)
RANGE^XM-U-M-CHOOSE RANGE
"KRN",9.2,549,2,3,0)
SELECT^XM-U-M-CHOOSE SELECT
"KRN",9.2,550,-1)
0^191
"KRN",9.2,550,0)
XM-U-M-DELETE-2^DELETING MESSAGES (CONTINUED)^2990114.105^^
"KRN",9.2,550,1,0)
^^21^21^2990427^
"KRN",9.2,550,1,1,0)
 
"KRN",9.2,550,1,2,0)
The user can also retrieve deleted mail from the 'WASTE' basket by reading
"KRN",9.2,550,1,3,0)
it, just like any other basket. If you want to keep the message, you can
"KRN",9.2,550,1,4,0)
[SAVE] it to another basket.
"KRN",9.2,550,1,5,0)
 
"KRN",9.2,550,1,6,0)
To delete messages, do the following:
"KRN",9.2,550,1,7,0)
 
"KRN",9.2,550,1,8,0)
  * Individually - After reading a message, enter a 'D' at the 'Enter
"KRN",9.2,550,1,9,0)
    message action' prompt. MailMan will delete the message.
"KRN",9.2,550,1,10,0)
 
"KRN",9.2,550,1,11,0)
  * Group of Messages - Enter a 'D' at the basket option or command
"KRN",9.2,550,1,12,0)
    prompt.
"KRN",9.2,550,1,13,0)
 
"KRN",9.2,550,1,14,0)
      - MailMan will first ask you to select which messages you want to
"KRN",9.2,550,1,15,0)
        delete, including a [RANGE] of messages. Also, if you are using a
"KRN",9.2,550,1,16,0)
        full-screen reader, you can pre-[SELECT] messages and then delete
"KRN",9.2,550,1,17,0)
        them as a group.
"KRN",9.2,550,1,18,0)
 
"KRN",9.2,550,1,19,0)
      - MailMan will then ask you to confirm the deletion.
"KRN",9.2,550,1,20,0)
 
"KRN",9.2,550,1,21,0)
[MORE]...
"KRN",9.2,550,2,0)
^9.22^5^4
"KRN",9.2,550,2,1,0)
MORE^XM-U-M-DELETE-3
"KRN",9.2,550,2,3,0)
RANGE^XM-U-M-CHOOSE RANGE
"KRN",9.2,550,2,4,0)
SAVE^XM-U-M-SAVE
"KRN",9.2,550,2,5,0)
SELECT^XM-U-M-CHOOSE SELECT
"KRN",9.2,551,-1)
0^192
"KRN",9.2,551,0)
XM-U-M-DELETE-3^DELETING MESSAGES (CONTINUED)^2990106.162414^
"KRN",9.2,551,1,0)
^^4^4^2990427^
"KRN",9.2,551,1,1,0)
 
"KRN",9.2,551,1,2,0)
When all messages have been deleted from a basket, MailMan will ask you if
"KRN",9.2,551,1,3,0)
the entire basket may be eliminated. If you don't want to retain this
"KRN",9.2,551,1,4,0)
empty basket in your mailbox, answer 'YES' to this prompt.
"KRN",9.2,552,-1)
0^168
"KRN",9.2,552,0)
XM-U-I-SURROGATE-2^MAILMAN SURROGATES (CONTINUED)^2990107.08154^
"KRN",9.2,552,1,0)
^^15^15^2990107^
"KRN",9.2,552,1,1,0)
 
"KRN",9.2,552,1,2,0)
The MailMan interface provides two options with regards to surrogates:
"KRN",9.2,552,1,3,0)
 
"KRN",9.2,552,1,4,0)
  * [BECOME A SURROGATE] (SHARED,MAIL or Other) - Use this option to act
"KRN",9.2,552,1,5,0)
    as a surrogate for SHARED,MAIL or another MailMan user.
"KRN",9.2,552,1,6,0)
 
"KRN",9.2,552,1,7,0)
  * [SURROGATE EDIT] - Use this option to select another user to act as
"KRN",9.2,552,1,8,0)
    your surrogate. Those assigned to as surrogates may have [READ] and
"KRN",9.2,552,1,9,0)
    [WRITE] access assigned to them. Thus, they have the ability to assume
"KRN",9.2,552,1,10,0)
    your identity for the purpose of reading and/or sending mail.
"KRN",9.2,552,1,11,0)
 
"KRN",9.2,552,1,12,0)
The MailMan surrogate options are available on the main MailMan Menu and
"KRN",9.2,552,1,13,0)
the Personal Preferences menu.
"KRN",9.2,552,1,14,0)
 
"KRN",9.2,552,1,15,0)
[MORE]... 
"KRN",9.2,552,2,0)
^9.22A^6^5
"KRN",9.2,552,2,1,0)
MORE^XM-U-I-SURROGATE-3
"KRN",9.2,552,2,3,0)
SURROGATE EDIT^XM-U-P-SURROGATE EDIT
"KRN",9.2,552,2,4,0)
BECOME A SURROGATE^XM-U-I-SURROGATE BECOME
"KRN",9.2,552,2,5,0)
READ^XM-U-P-SURROGATE READ PRIV
"KRN",9.2,552,2,6,0)
WRITE^XM-U-P-SURROGATE WRITE PRIV
"KRN",9.2,553,-1)
0^169
"KRN",9.2,553,0)
XM-U-I-SURROGATE-3^MAILMAN SURROGATES (CONTINUED)^2990107.090335^
"KRN",9.2,553,1,0)
^^18^18^2990107^
"KRN",9.2,553,1,1,0)
 
"KRN",9.2,553,1,2,0)
You can [BECOME] (act as) a surrogate in two different ways:
"KRN",9.2,553,1,3,0)
 
"KRN",9.2,553,1,4,0)
  1. Other Surrogate - Act as a surrogate for another user (i.e., Other)
"KRN",9.2,553,1,5,0)
     who has designated you as their surrogate and given you privileges
"KRN",9.2,553,1,6,0)
     to: read, reply to, and/or send messages.
"KRN",9.2,553,1,7,0)
 
"KRN",9.2,553,1,8,0)
  2. [SHARED,MAIL] Surrogate - Act as a 'special user' surrogate (i.e.,
"KRN",9.2,553,1,9,0)
     SHARED,MAIL) where you can read and reply to messages of general
"KRN",9.2,553,1,10,0)
     interest, however, you cannot send new mail. 
"KRN",9.2,553,1,11,0)
 
"KRN",9.2,553,1,12,0)
For example, you may choose to become a surrogate, if you have been asked
"KRN",9.2,553,1,13,0)
by someone else to act as their surrogate while they are out of the
"KRN",9.2,553,1,14,0)
office. As their surrogate, you can check their mail. Also, you may become
"KRN",9.2,553,1,15,0)
a surrogate of [SHARED,MAIL] in order to read about general information or
"KRN",9.2,553,1,16,0)
special announcements available to all MailMan users.
"KRN",9.2,553,1,17,0)
 
"KRN",9.2,553,1,18,0)
[MORE]... 
"KRN",9.2,553,2,0)
^9.22A^3^3
"KRN",9.2,553,2,1,0)
MORE^XM-U-I-SURROGATE-4
"KRN",9.2,553,2,2,0)
BECOME^XM-U-I-SURROGATE BECOME
"KRN",9.2,553,2,3,0)
SHARED,MAIL^XM-U-I-SHARED MAIL
"KRN",9.2,554,-1)
0^170
"KRN",9.2,554,0)
XM-U-I-SURROGATE-4^MAILMAN SURROGATES (CONTINUED)^2990107.09103^
"KRN",9.2,554,1,0)
^^10^10^2990107^
"KRN",9.2,554,1,1,0)
 
"KRN",9.2,554,1,2,0)
Surrogates may be allowed the following privileges:
"KRN",9.2,554,1,3,0)
 
"KRN",9.2,554,1,4,0)
  * [READ] only privileges.
"KRN",9.2,554,1,5,0)
 
"KRN",9.2,554,1,6,0)
  * Read and [WRITE] privileges.
"KRN",9.2,554,1,7,0)
 
"KRN",9.2,554,1,8,0)
If a message is sent [CONFIDENTIAL], a surrogate cannot view it. If a
"KRN",9.2,554,1,9,0)
message has been [SCRAMBLED], a surrogate that does not know the
"KRN",9.2,554,1,10,0)
password cannot read it.
"KRN",9.2,554,2,0)
^9.22A^4^4
"KRN",9.2,554,2,1,0)
READ^XM-U-P-SURROGATE READ PRIV
"KRN",9.2,554,2,2,0)
WRITE^XM-U-P-SURROGATE WRITE PRIV
"KRN",9.2,554,2,3,0)
CONFIDENTIAL^XM-U-M-CONFIDENTIAL
"KRN",9.2,554,2,4,0)
SCRAMBLED^XM-U-M-SCRAMBLE
"KRN",9.2,555,-1)
0^282
"KRN",9.2,555,0)
XM-U-P-SURROGATE READ PRIV^SURROGATES - READ PRIVILEGES^2990114.1404^^
"KRN",9.2,555,1,0)
^^17^17^2990114^^^^
"KRN",9.2,555,1,1,0)
 
"KRN",9.2,555,1,2,0)
Users who give surrogates 'Read' privileges allow the surrogates to do
"KRN",9.2,555,1,3,0)
any of the following:
"KRN",9.2,555,1,4,0)
 
"KRN",9.2,555,1,5,0)
  * [DELETE] messages in any mail basket.
"KRN",9.2,555,1,6,0)
 
"KRN",9.2,555,1,7,0)
  * [FORWARD] messages in any mail basket to other recipients.
"KRN",9.2,555,1,8,0)
 
"KRN",9.2,555,1,9,0)
  * [LATER] messages in any mail basket.
"KRN",9.2,555,1,10,0)
 
"KRN",9.2,555,1,11,0)
  * [NEW]/Un New messages in any mail basket.
"KRN",9.2,555,1,12,0)
 
"KRN",9.2,555,1,13,0)
  * [READ] messages (except for [CONFIDENTIAL] ones) in any mail basket.
"KRN",9.2,555,1,14,0)
 
"KRN",9.2,555,1,15,0)
  * [REPLY] to messages in any mail basket.
"KRN",9.2,555,1,16,0)
 
"KRN",9.2,555,1,17,0)
  * [SAVE] messages to any mail basket.
"KRN",9.2,555,2,0)
^9.22^8^8
"KRN",9.2,555,2,1,0)
DELETE^XM-U-M-DELETE
"KRN",9.2,555,2,2,0)
FORWARD^XM-U-M-FORWARD
"KRN",9.2,555,2,3,0)
SAVE^XM-U-M-SAVE
"KRN",9.2,555,2,4,0)
REPLY^XM-U-M-REPLY
"KRN",9.2,555,2,5,0)
LATER^XM-U-M-LATER
"KRN",9.2,555,2,6,0)
NEW^XM-U-M-NEW
"KRN",9.2,555,2,7,0)
READ^XM-U-R-READ
"KRN",9.2,555,2,8,0)
CONFIDENTIAL^XM-U-M-CONFIDENTIAL
"KRN",9.2,556,-1)
0^283
"KRN",9.2,556,0)
XM-U-P-SURROGATE WRITE PRIV^SURROGATES - WRITE PRIVILEGES^2990107.09305^^
"KRN",9.2,556,1,0)
^^14^14^2990107^^
"KRN",9.2,556,1,1,0)
 
"KRN",9.2,556,1,2,0)
Users who give surrogates 'Read and Write' privileges, in addition to all
"KRN",9.2,556,1,3,0)
the privileges of [READ] access, allow the surrogates to do any of the
"KRN",9.2,556,1,4,0)
following:
"KRN",9.2,556,1,5,0)
 
"KRN",9.2,556,1,6,0)
  * [ANSWER] messages.
"KRN",9.2,556,1,7,0)
 
"KRN",9.2,556,1,8,0)
  * [COPY] messages.
"KRN",9.2,556,1,9,0)
 
"KRN",9.2,556,1,10,0)
  * [EDIT] messages.
"KRN",9.2,556,1,11,0)
 
"KRN",9.2,556,1,12,0)
  * [SEND] messages.
"KRN",9.2,556,1,13,0)
 
"KRN",9.2,556,1,14,0)
  * [WRITE] messages.
"KRN",9.2,556,2,0)
^9.22A^6^6
"KRN",9.2,556,2,1,0)
ANSWER^XM-U-M-ANSWER
"KRN",9.2,556,2,2,0)
COPY^XM-U-M-COPY
"KRN",9.2,556,2,3,0)
WRITE^XM-U-M-WRITE
"KRN",9.2,556,2,4,0)
SEND^XM-U-M-SEND
"KRN",9.2,556,2,5,0)
EDIT^XM-U-MO-EDIT
"KRN",9.2,556,2,6,0)
READ^XM-U-P-SURROGATE READ PRIV
"KRN",9.2,559,-1)
0^287
"KRN",9.2,559,0)
XM-U-Q-SEARCH CRITERIA^SEARCHING FOR MESSAGES - SEARCH CRITERIA^2990107.110051^^
"KRN",9.2,559,1,0)
^^19^19^2990108^
"KRN",9.2,559,1,1,0)
 
"KRN",9.2,559,1,2,0)
When searching for messages in your own mailbox, you can specify any
"KRN",9.2,559,1,3,0)
combination of the following search criteria:
"KRN",9.2,559,1,4,0)
 
"KRN",9.2,559,1,5,0)
  * Subject Contents - Enter the 'S' ('Subject contains') search action
"KRN",9.2,559,1,6,0)
    code and then enter any portion of the subject string (not case
"KRN",9.2,559,1,7,0)
    sensitive). The string can be from 3 to 30 characters in length
"KRN",9.2,559,1,8,0)
    (including spaces, symbols, and punctuation marks).
"KRN",9.2,559,1,9,0)
 
"KRN",9.2,559,1,10,0)
  * Sender of the Message - Enter the 'F' ('Message from') search action
"KRN",9.2,559,1,11,0)
    code and then enter the [LOCAL] USER NAME or [REMOTE] USER NAME.
"KRN",9.2,559,1,12,0)
 
"KRN",9.2,559,1,13,0)
  * Addressee of a Message - This includes messages addressed to a person
"KRN",9.2,559,1,14,0)
    or a mail group. MailMan will check the addressees that you see when
"KRN",9.2,559,1,15,0)
    you [QUERY] ('Q') the message. MailMan will not check the expanded
"KRN",9.2,559,1,16,0)
    list of addresses that you see when you use the Query Detailed ('QD')
"KRN",9.2,559,1,17,0)
    action code.
"KRN",9.2,559,1,18,0)
 
"KRN",9.2,559,1,19,0)
[MORE]...
"KRN",9.2,559,2,0)
^9.22A^4^4
"KRN",9.2,559,2,1,0)
LOCAL^XM-U-A-LOCAL USER NAME
"KRN",9.2,559,2,2,0)
REMOTE^XM-U-Q-REMOTE USER NAME
"KRN",9.2,559,2,3,0)
QUERY^XM-U-M-QUERY GENERAL
"KRN",9.2,559,2,4,0)
MORE^XM-U-Q-SEARCH CRITERIA-2
"KRN",9.2,561,-1)
0^288
"KRN",9.2,561,0)
XM-U-Q-SEARCH CRITERIA-2^SEARCH CRITERIA (CONTINUED)^2990107.113305^
"KRN",9.2,561,1,0)
^^20^20^2990107^
"KRN",9.2,561,1,1,0)
 
"KRN",9.2,561,1,2,0)
    When searching on the addressee of a message, enter the 'T' ('Message
"KRN",9.2,561,1,3,0)
    to') search action code and then enter the [LOCAL] USER NAME or
"KRN",9.2,561,1,4,0)
    [REMOTE] USER NAME.
"KRN",9.2,561,1,5,0)
 
"KRN",9.2,561,1,6,0)
  * Approximately When the Message was Sent - Enter a date the message was
"KRN",9.2,561,1,7,0)
    sent 'on or after' and/or enter a date the message was sent 'on or
"KRN",9.2,561,1,8,0)
    before':
"KRN",9.2,561,1,9,0)
 
"KRN",9.2,561,1,10,0)
      - Enter the 'DA' ('Message sent on or after') search action code
"KRN",9.2,561,1,11,0)
        and then enter a valid VA FileMan date.
"KRN",9.2,561,1,12,0)
 
"KRN",9.2,561,1,13,0)
      - Enter the 'DB' ('Message sent on or before') search action code
"KRN",9.2,561,1,14,0)
        and then enter a valid VA FileMan date.
"KRN",9.2,561,1,15,0)
 
"KRN",9.2,561,1,16,0)
  * Specific Responder to a Message - Enter the 'R' ('Response from')
"KRN",9.2,561,1,17,0)
    search action code and then enter the [LOCAL] USER NAME or
"KRN",9.2,561,1,18,0)
    [REMOTE] USER NAME.
"KRN",9.2,561,1,19,0)
 
"KRN",9.2,561,1,20,0)
[MORE]... 
"KRN",9.2,561,2,0)
^9.22A^3^3
"KRN",9.2,561,2,1,0)
MORE^XM-U-Q-SEARCH CRITERIA-3
"KRN",9.2,561,2,2,0)
LOCAL^XM-U-A-LOCAL USER NAME
"KRN",9.2,561,2,3,0)
REMOTE^XM-U-Q-REMOTE USER NAME
"KRN",9.2,562,-1)
0^289
"KRN",9.2,562,0)
XM-U-Q-SEARCH CRITERIA-3^SEARCH CRITERIA (CONTINUED)^2990107.113805^
"KRN",9.2,562,1,0)
^^20^20^2990107^
"KRN",9.2,562,1,1,0)
 
"KRN",9.2,562,1,2,0)
  * Specific Text in a Message - Enter the 'X' ('Message contains') search
"KRN",9.2,562,1,3,0)
    action code and then enter any portion of the message text string. The
"KRN",9.2,562,1,4,0)
    string can be from 3 to 30 characters in length (including spaces,
"KRN",9.2,562,1,5,0)
    symbols, and punctuation marks). MailMan prompts you to decide if the
"KRN",9.2,562,1,6,0)
    text search should be case sensitive. MailMan also prompts you to
"KRN",9.2,562,1,7,0)
    decide if the search should include:
"KRN",9.2,562,1,8,0)
 
"KRN",9.2,562,1,9,0)
      - Only the original message text.
"KRN",9.2,562,1,10,0)
 
"KRN",9.2,562,1,11,0)
      - Only the message responses text.
"KRN",9.2,562,1,12,0)
 
"KRN",9.2,562,1,13,0)
      - Both the original message and responses text.
"KRN",9.2,562,1,14,0)
 
"KRN",9.2,562,1,15,0)
    NOTE: If the string you are searching for is not all on one line in
"KRN",9.2,562,1,16,0)
          the message/responses, the search will not be able to find it.
"KRN",9.2,562,1,17,0)
 
"KRN",9.2,562,1,18,0)
Each additional search criterion entered helps limit the search.
"KRN",9.2,562,1,19,0)
 
"KRN",9.2,562,1,20,0)
[MORE]...
"KRN",9.2,562,2,0)
^9.22A^1^1
"KRN",9.2,562,2,1,0)
MORE^XM-U-Q-SEARCH CRITERIA-4
"KRN",9.2,563,-1)
0^290
"KRN",9.2,563,0)
XM-U-Q-SEARCH CRITERIA-4^SEARCH CRITERIA (CONTINUED)^2990319.1459^^
"KRN",9.2,563,1,0)
^^20^20^2990319^^
"KRN",9.2,563,1,1,0)
 
"KRN",9.2,563,1,2,0)
The more search criteria you choose, the more specific the search becomes,
"KRN",9.2,563,1,3,0)
resulting in a smaller list of messages from which to choose. 
"KRN",9.2,563,1,4,0)
 
"KRN",9.2,563,1,5,0)
All criteria entered must be true in order to pass the search test. (This
"KRN",9.2,563,1,6,0)
is similar to using the Boolean 'AND' in Internet search engines or
"KRN",9.2,563,1,7,0)
program code).
"KRN",9.2,563,1,8,0)
 
"KRN",9.2,563,1,9,0)
MailMan displays the entire list of search criteria you've selected. To
"KRN",9.2,563,1,10,0)
cancel a single search criterion without having to start over, use the
"KRN",9.2,563,1,11,0)
at-sign ('@' Shift-2 key on most keyboards) to delete the specific search
"KRN",9.2,563,1,12,0)
criterion you no longer want.
"KRN",9.2,563,1,13,0)
 
"KRN",9.2,563,1,14,0)
When you have completed your search criteria, enter 'G' (Go search) to
"KRN",9.2,563,1,15,0)
start the search. You are automatically placed in the full-screen message
"KRN",9.2,563,1,16,0)
reader to manipulate any messages found from the search.
"KRN",9.2,563,1,17,0)
 
"KRN",9.2,563,1,18,0)
To end the query without searching, you can enter 'Q' (Quit) or enter the
"KRN",9.2,563,1,19,0)
up-arrow ('^' Shift-6 key on most keyboards) to get out of the
"KRN",9.2,563,1,20,0)
Query/Search for Messages option.
"KRN",9.2,563,2,0)
^9.22A^^0
"KRN",9.2,565,-1)
0^115
"KRN",9.2,565,0)
XM-U-A-LOCAL USER NAME-2^ENTERING A LOCAL USER'S NAME (CONTINUED)^2990107.115556^
"KRN",9.2,565,1,0)
^^19^19^2990107^
"KRN",9.2,565,1,1,0)
 
"KRN",9.2,565,1,2,0)
In addition to entering a user's name, MailMan also allows you to enter a
"KRN",9.2,565,1,3,0)
person's local DUZ when performing the following functions:
"KRN",9.2,565,1,4,0)
 
"KRN",9.2,565,1,5,0)
  * Addressing a message (including [FORWARDING] messages).
"KRN",9.2,565,1,6,0)
 
"KRN",9.2,565,1,7,0)
  * [BECOMING] a surrogate.
"KRN",9.2,565,1,8,0)
 
"KRN",9.2,565,1,9,0)
  * [FILTERING] mail by sender and/or recipient.
"KRN",9.2,565,1,10,0)
 
"KRN",9.2,565,1,11,0)
  * [SEARCHING] for messages by sender, recipient, and/or responder
"KRN",9.2,565,1,12,0)
 
"KRN",9.2,565,1,13,0)
The DUZ is a person's unique numeric user ID. Thus, if multiple
"KRN",9.2,565,1,14,0)
addressees, for example, have similar names, you can enter their local DUZ
"KRN",9.2,565,1,15,0)
instead of their name to choose the specific person.
"KRN",9.2,565,1,16,0)
 
"KRN",9.2,565,1,17,0)
NOTE: You cannot substitute the DUZ for a name when creating members of a
"KRN",9.2,565,1,18,0)
      [PERSONAL] mail group or when [DESIGNATING] a surrogate for
"KRN",9.2,565,1,19,0)
      yourself.
"KRN",9.2,565,2,0)
^9.22A^7^6
"KRN",9.2,565,2,1,0)
FORWARDING^XM-U-M-FORWARD
"KRN",9.2,565,2,3,0)
FILTERING^XM-U-P-FILTER
"KRN",9.2,565,2,4,0)
SEARCHING^XM-U-Q-SEARCH CRITERIA
"KRN",9.2,565,2,5,0)
PERSONAL^XM-U-P-GROUP PERSONAL
"KRN",9.2,565,2,6,0)
BECOMING^XM-U-I-SURROGATE BECOME
"KRN",9.2,565,2,7,0)
DESIGNATING^XM-U-P-SURROGATE EDIT
"KRN",9.2,566,-1)
0^117
"KRN",9.2,566,0)
XM-U-A-STAGGER DELIVERY-2^STAGGER DELIVERY OF A MESSAGE (CONTINUED)^2990114.1323^^
"KRN",9.2,566,1,0)
^^4^4^2990114^^
"KRN",9.2,566,1,1,0)
 
"KRN",9.2,566,1,2,0)
After the message with staggered delivery dates and times has actually
"KRN",9.2,566,1,3,0)
been delivered to the recipients, doing a [QUERY] (QD) on the message will
"KRN",9.2,566,1,4,0)
indicate that the message was 'forwarded' to the recipients.
"KRN",9.2,566,2,0)
^9.22A^1^1
"KRN",9.2,566,2,1,0)
QUERY^XM-U-M-QUERY DETAILED
"KRN",9.2,567,-1)
0^301
"KRN",9.2,567,0)
XM-U-R-READ NEW-2^PROCESSING NEW MAIL (CONTINUED)^2990107.14333^
"KRN",9.2,567,1,0)
^^21^21^2990107^^
"KRN",9.2,567,1,1,0)
 
"KRN",9.2,567,1,2,0)
After reading a message, you can make it 'new' again by:
"KRN",9.2,567,1,3,0)
 
"KRN",9.2,567,1,4,0)
  * Entering an 'L' ([LATER]) at the 'Enter message option' prompt. You
"KRN",9.2,567,1,5,0)
    then choose the date and time that the message will appear as new
"KRN",9.2,567,1,6,0)
    again.
"KRN",9.2,567,1,7,0)
 
"KRN",9.2,567,1,8,0)
  * Entering an 'N' ([NEW]) at the 'Enter message option' prompt will
"KRN",9.2,567,1,9,0)
    cause the message to appear as new in your mailbox. If a message is
"KRN",9.2,567,1,10,0)
    already indicated to be 'new' and you enter an 'N' (toggle), the
"KRN",9.2,567,1,11,0)
    message will no longer appears as new.
"KRN",9.2,567,1,12,0)
 
"KRN",9.2,567,1,13,0)
As messages sent by users to themselves are not considered 'new,' users
"KRN",9.2,567,1,14,0)
cannot send messages to their baskets and read them using this option. To
"KRN",9.2,567,1,15,0)
read those messages, you should use the [READ]/Manage Messages option.
"KRN",9.2,567,1,16,0)
 
"KRN",9.2,567,1,17,0)
If someone [REPLIES] to a message that was [DELETED] (but not
"KRN",9.2,567,1,18,0)
[TERMINATED]) by the user, the message is redelivered to the user.
"KRN",9.2,567,1,19,0)
 
"KRN",9.2,567,1,20,0)
NOTE: Messages contain message [HEADERS] that are displayed prior to the
"KRN",9.2,567,1,21,0)
      text of the message.
"KRN",9.2,567,2,0)
^9.22A^7^7
"KRN",9.2,567,2,1,0)
LATER^XM-U-M-LATER
"KRN",9.2,567,2,2,0)
NEW^XM-U-M-NEW
"KRN",9.2,567,2,3,0)
READ^XM-U-R-READ
"KRN",9.2,567,2,4,0)
REPLIES^XM-U-M-REPLY
"KRN",9.2,567,2,5,0)
DELETED^XM-U-M-DELETE
"KRN",9.2,567,2,6,0)
TERMINATED^XM-U-M-TERMINATE
"KRN",9.2,567,2,7,0)
HEADERS^XM-U-M-MESSAGE HEADER
"KRN",9.2,569,-1)
0^276
"KRN",9.2,569,0)
XM-U-P-PRIORITY PROMPT-2^PRIORITY RESPONSES PROMPT (CONTINUED)^2990107.153856^
"KRN",9.2,569,1,0)
^^22^22^2990107^
"KRN",9.2,569,1,1,0)
 
"KRN",9.2,569,1,2,0)
MailMan will either ask or not ask you for a new value for this flag each
"KRN",9.2,569,1,3,0)
time you read a priority message, depending on what you enter in the
"KRN",9.2,569,1,4,0)
PRIORITY RESPONSES PROMPT field.
"KRN",9.2,569,1,5,0)
 
"KRN",9.2,569,1,6,0)
There are two possible choices when answering the 'PRIORITY RESPONSES
"KRN",9.2,569,1,7,0)
PROMPT:' prompt:
"KRN",9.2,569,1,8,0)
 
"KRN",9.2,569,1,9,0)
  * 0, ASK EACH TIME MESSAGE IS READ (default) - MailMan will prompt you
"KRN",9.2,569,1,10,0)
    to decide each time you read a priority mail message whether you want
"KRN",9.2,569,1,11,0)
    the future responses to be delivered as priority mail. This value
"KRN",9.2,569,1,12,0)
    allows you to override the default value you set in the PRIORITY
"KRN",9.2,569,1,13,0)
    RESPONSES [FLAG] field.
"KRN",9.2,569,1,14,0)
 
"KRN",9.2,569,1,15,0)
  * 1, DO NOT ASK EACH TIME MESSAGE IS READ - MailMan will not prompt you
"KRN",9.2,569,1,16,0)
    to decide each time you read a priority mail message whether you want
"KRN",9.2,569,1,17,0)
    the future responses to be delivered as priority mail. The default
"KRN",9.2,569,1,18,0)
    value you set in the PRIORITY RESPONSES [FLAG] field will be in
"KRN",9.2,569,1,19,0)
    effect.
"KRN",9.2,569,1,20,0)
 
"KRN",9.2,569,1,21,0)
If you do not set this field, then you will be prompted to choose whether
"KRN",9.2,569,1,22,0)
future responses will be delivered as priority or not.
"KRN",9.2,569,2,0)
^9.22A^1^1
"KRN",9.2,569,2,1,0)
FLAG^XM-U-P-PRIORITY FLAG
"KRN",9.2,570,-1)
0^264
"KRN",9.2,570,0)
XM-U-P-GROUP PERSONAL-2^PERSONAL MAIL GROUPS (CONTINUED)^2990107.16341^
"KRN",9.2,570,1,0)
^^3^3^2990111^
"KRN",9.2,570,1,1,0)
 
"KRN",9.2,570,1,2,0)
MailMan will not allow you to create a personal mail group if a [PUBLIC]
"KRN",9.2,570,1,3,0)
mail group with that same name already exists.
"KRN",9.2,570,2,0)
^9.22A^1^1
"KRN",9.2,570,2,1,0)
PUBLIC^XM-U-P-GROUP ENROLL
"KRN",9.2,571,-1)
0^139
"KRN",9.2,571,0)
XM-U-B-XMIT PRIORITY TOGGLE-2^TOGGLING MESSAGE TRANSMISSION PRIORITY (CONTINUED)^2990114.1417^^
"KRN",9.2,571,1,0)
^^8^8^2990114^^^^
"KRN",9.2,571,1,1,0)
 
"KRN",9.2,571,1,2,0)
To toggle message transmission priority, enter an 'X' at the basket option or
"KRN",9.2,571,1,3,0)
command prompt. MailMan will ask you to select which messages should have their
"KRN",9.2,571,1,4,0)
transmit priority toggled, including a [RANGE] of messages. Also, if you are
"KRN",9.2,571,1,5,0)
using a full-screen reader, you can pre-[SELECT] messages and then toggle their
"KRN",9.2,571,1,6,0)
transmit priority as a group. 
"KRN",9.2,571,1,7,0)

"KRN",9.2,571,1,8,0)
Remember, the command is a toggle.
"KRN",9.2,571,2,0)
^9.22^3^2
"KRN",9.2,571,2,1,0)
RANGE^XM-U-M-CHOOSE RANGE
"KRN",9.2,571,2,3,0)
SELECT^XM-U-M-CHOOSE SELECT
"KRN",9.2,572,-1)
0^293
"KRN",9.2,572,0)
XM-U-Q-SEARCH SYSTEM^SEARCHING FOR MESSAGES - ANYWHERE ON THE SYSTEM^2990108.103157^
"KRN",9.2,572,1,0)
^^14^14^2990108^
"KRN",9.2,572,1,1,0)
 
"KRN",9.2,572,1,2,0)
You can search for any messages you sent or that were sent to you, if it
"KRN",9.2,572,1,3,0)
still exists anywhere on the system.
"KRN",9.2,572,1,4,0)
 
"KRN",9.2,572,1,5,0)
When searching the entire system, MailMan searches on subject string only
"KRN",9.2,572,1,6,0)
and the search is case sensitive. If the messages still exists anywhere on
"KRN",9.2,572,1,7,0)
the system (i.e., located in the MESSAGE file), MailMan will search for
"KRN",9.2,572,1,8,0)
all messages whose subject begins with the string that you entered. Even
"KRN",9.2,572,1,9,0)
if you've deleted the message from your own mailbox, if it still resides
"KRN",9.2,572,1,10,0)
in the MESSAGE file (#3.9) and you entered a valid subject string in the
"KRN",9.2,572,1,11,0)
correct case, MailMan can find it.
"KRN",9.2,572,1,12,0)
 
"KRN",9.2,572,1,13,0)
NOTE: You must include the first few words of the subject rather than just
"KRN",9.2,572,1,14,0)
      a phrase contained within the subject text.
"KRN",9.2,573,-1)
0^149
"KRN",9.2,573,0)
XM-U-H-GROUP-4^MAIL GROUP INFORMATION (CONTINUED)^2990111.143643^
"KRN",9.2,573,1,0)
^^18^18^2990111^
"KRN",9.2,573,1,1,0)
 
"KRN",9.2,573,1,2,0)
 * Member(s) - list of members for the mail group. Members will receive
"KRN",9.2,573,1,3,0)
    all mail addressed to the group. Members can include any of the
"KRN",9.2,573,1,4,0)
    following:
"KRN",9.2,573,1,5,0)
 
"KRN",9.2,573,1,6,0)
      - Local and remote users
"KRN",9.2,573,1,7,0)
 
"KRN",9.2,573,1,8,0)
      - Other mail groups (local mail groups)
"KRN",9.2,573,1,9,0)
 
"KRN",9.2,573,1,10,0)
      - Distribution lists (nationwide mail groups)
"KRN",9.2,573,1,11,0)
 
"KRN",9.2,573,1,12,0)
The group information can help you decide if you want to join a particular
"KRN",9.2,573,1,13,0)
mail group (e.g., the description). Also, if a mail group doesn't allow
"KRN",9.2,573,1,14,0)
self-enrollment, you can find out who the Coordinator or Organizer of the
"KRN",9.2,573,1,15,0)
group is and ask if you can become a member of or remove yourself from a
"KRN",9.2,573,1,16,0)
mail group.  Also, if a mail group has Authorized Senders, you'll know to
"KRN",9.2,573,1,17,0)
whom you should send mail, if you want to address that particular mail
"KRN",9.2,573,1,18,0)
group.
"KRN",9.2,574,-1)
0^209
"KRN",9.2,574,0)
XM-U-M-PRINT HEADER^IDENTIFYING YOUR MESSAGE PRINTOUT^2990120.093649^
"KRN",9.2,574,1,0)
^^11^11^2990427^
"KRN",9.2,574,1,1,0)
 
"KRN",9.2,574,1,2,0)
When you print a message, the print header appears at the top of the first
"KRN",9.2,574,1,3,0)
page, and identifies it as yours.
"KRN",9.2,574,1,4,0)
 
"KRN",9.2,574,1,5,0)
The header includes:
"KRN",9.2,574,1,6,0)
 
"KRN",9.2,574,1,7,0)
  * Your name
"KRN",9.2,574,1,8,0)
 
"KRN",9.2,574,1,9,0)
  * At which site it was printed
"KRN",9.2,574,1,10,0)
 
"KRN",9.2,574,1,11,0)
  * What time it was printed
"KRN",9.2,575,-1)
0^160
"KRN",9.2,575,0)
XM-U-I-EDITOR FM SCREEN^VA FILEMAN SCREEN EDITOR^2990120.1617^^
"KRN",9.2,575,1,0)
^^10^10^2990120^^
"KRN",9.2,575,1,1,0)

"KRN",9.2,575,1,2,0)
The Full Screen Editor uses the PF set of function keys to perform word
"KRN",9.2,575,1,3,0)
processing functions (e.g., setting margins and tabs, deleting text, and
"KRN",9.2,575,1,4,0)
saving text). Help text is available while using the editor. Users can
"KRN",9.2,575,1,5,0)
also switch from the Screen Editor directly to a different editor. The
"KRN",9.2,575,1,6,0)
original text and formatting will then be transferred to the new editor.
"KRN",9.2,575,1,7,0)
 
"KRN",9.2,575,1,8,0)
For example, from within the VA FileMan Screen Editor, you can transfer
"KRN",9.2,575,1,9,0)
text to a different editor by entering PF1 and then the letter 'A'. Your
"KRN",9.2,575,1,10,0)
text is immediately transferred to the selected editor.
"KRN",9.2,639,-1)
0^307
"KRN",9.2,639,0)
XM-U-Q-CLASSIC LOOKUP ??^LOOKING FOR MESSAGES WHOSE SUBJECT BEGINS WITH A SPECIFIC STRING^2990421.1237^^
"KRN",9.2,639,1,0)
^^14^14^2990421^
"KRN",9.2,639,1,1,0)
 
"KRN",9.2,639,1,2,0)
While in a basket, you can search for messages anywhere on the system
"KRN",9.2,639,1,3,0)
whose subject begins with a certain string.
"KRN",9.2,639,1,4,0)
 
"KRN",9.2,639,1,5,0)
At the 'Basket Message' prompt, enter the string preceded by a '??'. You
"KRN",9.2,639,1,6,0)
will then be shown a list of those messages anywhere on the system, which
"KRN",9.2,639,1,7,0)
you ever sent or received, whose subject BEGINS with that string (case
"KRN",9.2,639,1,8,0)
sensitive), and can choose which you would like to read.
"KRN",9.2,639,1,9,0)
 
"KRN",9.2,639,1,10,0)
For example, if you want to search for messages whose subject begins
"KRN",9.2,639,1,11,0)
with the words 'Schedule Reports', you would enter '??Schedule Reports'.
"KRN",9.2,639,1,12,0)
Since this search is case sensitive, you must enter the string in the
"KRN",9.2,639,1,13,0)
correct case. Thus, for example, 'SCHEDULE REPORTS' and 'Schedule Reports'
"KRN",9.2,639,1,14,0)
are not considered by this search as being the same.
"KRN",9.2,639,2,0)
^9.22^^0
"KRN",9.2,640,-1)
0^310
"KRN",9.2,640,0)
XM-U-P-P-MESSAGE FROM^P-MESSAGE FROM^2990428.0704^
"KRN",9.2,640,1,0)
^^21^21^2990428^^
"KRN",9.2,640,1,1,0)
 
"KRN",9.2,640,1,2,0)
The "P-MESSAGE FROM:" prompt pertains to anything you may print to the
"KRN",9.2,640,1,3,0)
P-MESSAGE device. MailMan allows you to decide from whom should the
"KRN",9.2,640,1,4,0)
message be. The result is a message sent to you.
"KRN",9.2,640,1,5,0)
 
"KRN",9.2,640,1,6,0)
If you queue the print, this is from whom the message will be. If you
"KRN",9.2,640,1,7,0)
don't queue the print, this is the default that will appear in a dialogue
"KRN",9.2,640,1,8,0)
with MailMan to determine from whom the message will be.
"KRN",9.2,640,1,9,0)
 
"KRN",9.2,640,1,10,0)
There are two possible responses:
"KRN",9.2,640,1,11,0)
  * ME (default) - Answer ME if the message should be from you. It will
"KRN",9.2,640,1,12,0)
    not be delivered new to you, but you will be able to edit it.
"KRN",9.2,640,1,13,0)
 
"KRN",9.2,640,1,14,0)
  * POSTMASTER - Answer POSTMASTER if the message should be from the
"KRN",9.2,640,1,15,0)
    POSTMASTER. It will be delivered new to you, but you will not be able
"KRN",9.2,640,1,16,0)
    to edit it.
"KRN",9.2,640,1,17,0)
 
"KRN",9.2,640,1,18,0)
NOTE: If you do not enter anything in this field, the default will be "ME."
"KRN",9.2,640,1,19,0)
 
"KRN",9.2,640,1,20,0)
The "P-MESSAGE FROM:" prompt can be set through the User Options Edit
"KRN",9.2,640,1,21,0)
option on the Personal Preferences menu. 
"KRN",9.2,641,-1)
0^311
"KRN",9.2,641,0)
XM-U-P-SHOW MESSAGE PREVIEW^SHOW MESSAGE PREVIEW^2990428.0655^^
"KRN",9.2,641,1,0)
^^20^20^2990428^^^^
"KRN",9.2,641,1,1,0)
 
"KRN",9.2,641,1,2,0)
The [CLASSIC] message reader can "preview" the next message to be read in
"KRN",9.2,641,1,3,0)
a mail basket by displaying the message subject and sender, in addition to
"KRN",9.2,641,1,4,0)
the mail basket, and message number in that basket.
"KRN",9.2,641,1,5,0)
 
"KRN",9.2,641,1,6,0)
Seeing the message subject and sender may help you decide whether or not
"KRN",9.2,641,1,7,0)
you wish to read the message. If you decide not to read the message, you
"KRN",9.2,641,1,8,0)
can "Ignore" it and move on to the next message.
"KRN",9.2,641,1,9,0)
 
"KRN",9.2,641,1,10,0)
Use the "SHOW MESSAGE PREVIEW:" prompt (under Personal Preferences|
"KRN",9.2,641,1,11,0)
User Options Edit) to choose whether or not MailMan will display a preview
"KRN",9.2,641,1,12,0)
of messages when you are scrolling through the messages in a basket using
"KRN",9.2,641,1,13,0)
the Classic message reader.
"KRN",9.2,641,1,14,0)
 
"KRN",9.2,641,1,15,0)
There are two possible responses:
"KRN",9.2,641,1,16,0)
 
"KRN",9.2,641,1,17,0)
  * YES - Preview messages when using the Classic message reader.
"KRN",9.2,641,1,18,0)
 
"KRN",9.2,641,1,19,0)
  * NO (default) - Don't preview messages when using the Classic message
"KRN",9.2,641,1,20,0)
                   reader.
"KRN",9.2,641,2,0)
^9.22A^1^1
"KRN",9.2,641,2,1,0)
CLASSIC^XM-U-B-READER CLASSIC
"KRN",9.2,642,-1)
0^308
"KRN",9.2,642,0)
XM-U-NEW FEATURES-5^NEW FEATURES AND FUNCTIONALITY (CONTINUED)^2990427.14265^
"KRN",9.2,642,1,0)
^^6^6^2990427^
"KRN",9.2,642,1,1,0)
 
"KRN",9.2,642,1,2,0)
   7. Combined [SURROGATE] options into the [BECOME] a Surrogate
"KRN",9.2,642,1,3,0)
      (SHARED,MAIL or Other) option.
"KRN",9.2,642,1,4,0)
 
"KRN",9.2,642,1,5,0)
NOTE: MailMan's online help also answers some FREQUENTLY ASKED
"KRN",9.2,642,1,6,0)
      [QUESTIONS].
"KRN",9.2,642,2,0)
^9.22A^3^3
"KRN",9.2,642,2,1,0)
SURROGATE^XM-U-I-SURROGATE
"KRN",9.2,642,2,2,0)
BECOME^XM-U-I-SURROGATE BECOME
"KRN",9.2,642,2,3,0)
QUESTIONS^XM-U-H-QUESTIONS
"KRN",9.2,643,-1)
0^309
"KRN",9.2,643,0)
XM-U-P-FILTER-3^FILTERING MAIL (CONTINUED)^2990427.151756^
"KRN",9.2,643,1,0)
^^19^19^2990505^
"KRN",9.2,643,1,1,0)
 
"KRN",9.2,643,1,2,0)
Also, when you create a mail filter and specify a mail basket that does
"KRN",9.2,643,1,3,0)
not currently exist in your mailbox, MailMan will allow you to create it
"KRN",9.2,643,1,4,0)
on the fly. Also, if you later delete a filter mail basket, MailMan will
"KRN",9.2,643,1,5,0)
automatically recreate it for you when the filter is used (activated) and
"KRN",9.2,643,1,6,0)
mail is directed to that basket.
"KRN",9.2,643,1,7,0)
 
"KRN",9.2,643,1,8,0)
 ************************************************************************
"KRN",9.2,643,1,9,0)
 * MailMan's background processing checks active mail filters for each  *
"KRN",9.2,643,1,10,0)
 * recipient, prior to delivery. This can be cumbersome for MailMan when*
"KRN",9.2,643,1,11,0)
 * a message has numerous recipients and each recipient has numerous    *
"KRN",9.2,643,1,12,0)
 * active mail filters. Thus, to make the delivery process more         *
"KRN",9.2,643,1,13,0)
 * efficient for everyone, we suggest you limit the number of active    *
"KRN",9.2,643,1,14,0)
 * filters for your mailbox, use the least amount of filtering criteria *
"KRN",9.2,643,1,15,0)
 * necessary to positively identify the message,  and prioritize each   *
"KRN",9.2,643,1,16,0)
 * filter by using the ORDER field. Those filters that will be used the *
"KRN",9.2,643,1,17,0)
 * most should be given the highest priority (e.g., ORDER equals one,   *
"KRN",9.2,643,1,18,0)
 * two, or three).                                                      *
"KRN",9.2,643,1,19,0)
 ************************************************************************
"KRN",9.2,644,-1)
1^1
"KRN",9.2,644,0)
XM-API-DISPLAYS-NUMBER
"KRN",9.2,645,-1)
1^2
"KRN",9.2,645,0)
XM-API-FEATURES
"KRN",9.2,646,-1)
1^3
"KRN",9.2,646,0)
XM-API-FORWARD-MESSAGE
"KRN",9.2,647,-1)
1^4
"KRN",9.2,647,0)
XM-API-MAIL-GROUPS
"KRN",9.2,648,-1)
1^5
"KRN",9.2,648,0)
XM-API-MESSAGE-QUERY
"KRN",9.2,649,-1)
1^6
"KRN",9.2,649,0)
XM-API-REPLYING
"KRN",9.2,650,-1)
1^7
"KRN",9.2,650,0)
XM-API-REQUESTING-INFORMATION
"KRN",9.2,651,-1)
1^8
"KRN",9.2,651,0)
XM-CONTROLLED-PRIORITY-MAIL
"KRN",9.2,652,-1)
1^9
"KRN",9.2,652,0)
XM-COORDINATORS
"KRN",9.2,653,-1)
1^10
"KRN",9.2,653,0)
XM-INQUIRY
"KRN",9.2,654,-1)
1^11
"KRN",9.2,654,0)
XM-INTERNAL-MESSAGE-NUMBER
"KRN",9.2,655,-1)
1^12
"KRN",9.2,655,0)
XM-LOCAL-RESPONSES
"KRN",9.2,656,-1)
1^13
"KRN",9.2,656,0)
XM-NEW-FEATURES
"KRN",9.2,657,-1)
1^14
"KRN",9.2,657,0)
XM-NEW-FEATURES-7.0
"KRN",9.2,658,-1)
1^15
"KRN",9.2,658,0)
XM-NEW-MAIL-LIST
"KRN",9.2,659,-1)
1^16
"KRN",9.2,659,0)
XM-NEW-VERSION3.1FEATURES
"KRN",9.2,660,-1)
1^17
"KRN",9.2,660,0)
XM-OUTPUT
"KRN",9.2,661,-1)
1^18
"KRN",9.2,661,0)
XM-P-MESSAGE
"KRN",9.2,662,-1)
1^19
"KRN",9.2,662,0)
XM-Q-DELETE
"KRN",9.2,663,-1)
1^20
"KRN",9.2,663,0)
XM-Q-DISAPPEARED
"KRN",9.2,664,-1)
1^21
"KRN",9.2,664,0)
XM-Q-INTERRUPT
"KRN",9.2,665,-1)
1^22
"KRN",9.2,665,0)
XM-Q-LOOKUP
"KRN",9.2,666,-1)
1^23
"KRN",9.2,666,0)
XM-Q-RECAL
"KRN",9.2,667,-1)
1^24
"KRN",9.2,667,0)
XM-Q-REMOVE
"KRN",9.2,668,-1)
1^25
"KRN",9.2,668,0)
XM-Q-REPLIES
"KRN",9.2,669,-1)
1^26
"KRN",9.2,669,0)
XM-QUESTIONS
"KRN",9.2,670,-1)
1^27
"KRN",9.2,670,0)
XM-SENDER-INFORMATION-ONLY
"KRN",9.2,671,-1)
1^28
"KRN",9.2,671,0)
XM-SUGGESTION
"KRN",9.2,672,-1)
1^29
"KRN",9.2,672,0)
XMANSWER
"KRN",9.2,673,-1)
1^30
"KRN",9.2,673,0)
XMEDIT
"KRN",9.2,674,-1)
1^31
"KRN",9.2,674,0)
XMGROUPMEMBER
"KRN",9.2,675,-1)
1^32
"KRN",9.2,675,0)
XMHELP2
"KRN",9.2,676,-1)
1^33
"KRN",9.2,676,0)
XMJOIN
"KRN",9.2,677,-1)
1^34
"KRN",9.2,677,0)
XMMAILGROUP
"KRN",9.2,678,-1)
1^35
"KRN",9.2,678,0)
XMMG-TYPE
"KRN",9.2,679,-1)
1^36
"KRN",9.2,679,0)
XMNEW
"KRN",9.2,680,-1)
1^37
"KRN",9.2,680,0)
XMPACK-COMP
"KRN",9.2,681,-1)
1^38
"KRN",9.2,681,0)
XMPACK-ENHANCED
"KRN",9.2,682,-1)
1^39
"KRN",9.2,682,0)
XMPACK-GLO
"KRN",9.2,683,-1)
1^40
"KRN",9.2,683,0)
XMPACK-INSTALL
"KRN",9.2,684,-1)
1^41
"KRN",9.2,684,0)
XMPACK-PACKAGE
"KRN",9.2,685,-1)
1^42
"KRN",9.2,685,0)
XMPACK-PRNT
"KRN",9.2,686,-1)
1^43
"KRN",9.2,686,0)
XMPACK-ROU
"KRN",9.2,687,-1)
1^44
"KRN",9.2,687,0)
XMPACK-SUM
"KRN",9.2,688,-1)
1^45
"KRN",9.2,688,0)
XMR-ACT-BACK
"KRN",9.2,689,-1)
1^46
"KRN",9.2,689,0)
XMR-ACT-COPY
"KRN",9.2,690,-1)
1^47
"KRN",9.2,690,0)
XMR-ACT-COPYA
"KRN",9.2,691,-1)
1^48
"KRN",9.2,691,0)
XMR-ACT-COPYB
"KRN",9.2,692,-1)
1^49
"KRN",9.2,692,0)
XMR-ACT-COPYC
"KRN",9.2,693,-1)
1^50
"KRN",9.2,693,0)
XMR-ACT-COPYD
"KRN",9.2,694,-1)
1^51
"KRN",9.2,694,0)
XMR-ACT-DELETE
"KRN",9.2,695,-1)
1^52
"KRN",9.2,695,0)
XMR-ACT-E-SELECT
"KRN",9.2,696,-1)
1^53
"KRN",9.2,696,0)
XMR-ACT-EDIT
"KRN",9.2,697,-1)
1^54
"KRN",9.2,697,0)
XMR-ACT-EDIT2
"KRN",9.2,698,-1)
1^55
"KRN",9.2,698,0)
XMR-ACT-EDIT3
"KRN",9.2,699,-1)
1^56
"KRN",9.2,699,0)
XMR-ACT-FORWARD
"KRN",9.2,700,-1)
1^57
"KRN",9.2,700,0)
XMR-ACT-NEW
"KRN",9.2,701,-1)
1^58
"KRN",9.2,701,0)
XMR-ACT-NEW LATER (TICKLER)
"KRN",9.2,702,-1)
1^59
"KRN",9.2,702,0)
XMR-ACT-PRINT
"KRN",9.2,703,-1)
1^60
"KRN",9.2,703,0)
XMR-ACT-QUERY
"KRN",9.2,704,-1)
1^61
"KRN",9.2,704,0)
XMR-ACT-REPLY
"KRN",9.2,705,-1)
1^62
"KRN",9.2,705,0)
XMR-ACT-SAVE
"KRN",9.2,706,-1)
1^63
"KRN",9.2,706,0)
XMR-ACT-TERM
"KRN",9.2,707,-1)
1^64
"KRN",9.2,707,0)
XMR-ACT-VAPORIZE
"KRN",9.2,708,-1)
1^65
"KRN",9.2,708,0)
XMR-ACT-WRITE
"KRN",9.2,709,-1)
1^66
"KRN",9.2,709,0)
XMR-ACTION
"KRN",9.2,710,-1)
1^67
"KRN",9.2,710,0)
XMR-ACTION-PRINT-W/O-HEADER
"KRN",9.2,711,-1)
1^68
"KRN",9.2,711,0)
XMR-ACTION-PRIORITY-TOGGLE
"KRN",9.2,712,-1)
1^69
"KRN",9.2,712,0)
XMR-ACTION-VAPORIZE
"KRN",9.2,713,-1)
1^70
"KRN",9.2,713,0)
XMR-ACTION2
"KRN",9.2,714,-1)
1^71
"KRN",9.2,714,0)
XMR-BASKET
"KRN",9.2,715,-1)
1^72
"KRN",9.2,715,0)
XMR-MESS-HEADER
"KRN",9.2,716,-1)
1^73
"KRN",9.2,716,0)
XMR-MESS-KEYWORD
"KRN",9.2,717,-1)
1^74
"KRN",9.2,717,0)
XMR-MESS-RANGE
"KRN",9.2,718,-1)
1^75
"KRN",9.2,718,0)
XMR-MESSAGE
"KRN",9.2,719,-1)
1^76
"KRN",9.2,719,0)
XMR-RES
"KRN",9.2,720,-1)
1^77
"KRN",9.2,720,0)
XMR-SEARCH
"KRN",9.2,721,-1)
1^78
"KRN",9.2,721,0)
XMREAD
"KRN",9.2,722,-1)
1^79
"KRN",9.2,722,0)
XMS-ADDRESS-CC
"KRN",9.2,723,-1)
1^80
"KRN",9.2,723,0)
XMS-ADDRESS-INFO
"KRN",9.2,724,-1)
1^81
"KRN",9.2,724,0)
XMS-ADDRESS-THRU
"KRN",9.2,725,-1)
1^82
"KRN",9.2,725,0)
XMS-PRIORITY
"KRN",9.2,726,-1)
1^83
"KRN",9.2,726,0)
XMS-RECIP-CONFIDENT
"KRN",9.2,727,-1)
1^84
"KRN",9.2,727,0)
XMS-RECIPIENT
"KRN",9.2,728,-1)
1^85
"KRN",9.2,728,0)
XMS-TEXT
"KRN",9.2,729,-1)
1^86
"KRN",9.2,729,0)
XMS-TRANS
"KRN",9.2,730,-1)
1^87
"KRN",9.2,730,0)
XMS-TRANS-CONFIRM
"KRN",9.2,731,-1)
1^88
"KRN",9.2,731,0)
XMS-TRANS-EDIT
"KRN",9.2,732,-1)
1^89
"KRN",9.2,732,0)
XMS-TRANS-SCR-HINT
"KRN",9.2,733,-1)
1^90
"KRN",9.2,733,0)
XMS-TRANS-SCR-PASS
"KRN",9.2,734,-1)
1^91
"KRN",9.2,734,0)
XMS-TRANS-SCRAMBLE
"KRN",9.2,735,-1)
1^92
"KRN",9.2,735,0)
XMSEND
"KRN",9.2,736,-1)
1^93
"KRN",9.2,736,0)
XMSHARE
"KRN",9.2,737,-1)
1^94
"KRN",9.2,737,0)
XMUOPT-ASKBASKET
"KRN",9.2,738,-1)
1^95
"KRN",9.2,738,0)
XMUOPT-BANNER
"KRN",9.2,739,-1)
1^96
"KRN",9.2,739,0)
XMUOPT-BML
"KRN",9.2,740,-1)
1^97
"KRN",9.2,740,0)
XMUOPT-INTRO
"KRN",9.2,741,-1)
1^98
"KRN",9.2,741,0)
XMUOPT-SUR-ASSIGN
"KRN",9.2,742,-1)
1^99
"KRN",9.2,742,0)
XMUOPT-SUR-ASSUME
"KRN",9.2,743,-1)
1^100
"KRN",9.2,743,0)
XMUOPT-SURROGATE
"KRN",9.2,744,-1)
1^101
"KRN",9.2,744,0)
XMUSEROPT
"KRN",19,455,-1)
0^27
"KRN",19,455,0)
XMREAD^Read/Manage Messages^^R^^^XM-U-R-READ^^^^^MAILMAN^^1^1
"KRN",19,455,1,0)
^19.06^5^5^2970730^^^^
"KRN",19,455,1,1,0)
This option is used to read MailMan messages.  The user will be asked
"KRN",19,455,1,2,0)
for a mail basket, which is normally the IN basket.  Deleted messages
"KRN",19,455,1,3,0)
may be seen by reading the WASTE basket.  Once read, messages may be
"KRN",19,455,1,4,0)
deleted, saved into other mail baskets, forwarded to other users, edited,
"KRN",19,455,1,5,0)
or queried for information regarding other recipients of the message.
"KRN",19,455,15)
D CHECKOUT^XM
"KRN",19,455,20)
D CHECKIN^XM
"KRN",19,455,25)
MANAGE^XMJBM
"KRN",19,455,99)
54766,39275
"KRN",19,455,"U")
READ/MANAGE MESSAGES
"KRN",19,456,-1)
0^29
"KRN",19,456,0)
XMSEND^Send a Message^^R^^^XM-U-M-SEND^^^^^MAILMAN^^1^1^
"KRN",19,456,1,0)
^19.06^4^4^2970730^^^^
"KRN",19,456,1,1,0)
Enables the user to send MailMan messages.  Messages may be sent
"KRN",19,456,1,2,0)
to other users or groups of users.  The sender of the message may
"KRN",19,456,1,3,0)
request a confirmation message, to be sent to him when each recipient
"KRN",19,456,1,4,0)
reads the message.
"KRN",19,456,15)
D CHECKOUT^XM
"KRN",19,456,20)
D CHECKIN^XM
"KRN",19,456,25)
SEND^XMJMS
"KRN",19,456,99)
53272,53151
"KRN",19,456,"U")
SEND A MESSAGE
"KRN",19,457,-1)
0^22
"KRN",19,457,0)
XMNEW^New Messages and Responses^^R^^^XM-U-R-READ NEW^^^^^MAILMAN^^1^1^
"KRN",19,457,1,0)
^19.06^2^2^2970730^^^^
"KRN",19,457,1,1,0)
Enables you to scan your mailbox for messages which are
"KRN",19,457,1,2,0)
either new, or have had some unseen response.
"KRN",19,457,15)
D CHECKOUT^XM
"KRN",19,457,20)
D CHECKIN^XM
"KRN",19,457,25)
NEW^XMJBN
"KRN",19,457,99)
53752,57930
"KRN",19,457,"U")
NEW MESSAGES AND RESPONSES
"KRN",19,458,-1)
0^32
"KRN",19,458,0)
XMUSER^MailMan Menu^^M^^^XMHELP^^^^^MAILMAN^^1^1^^
"KRN",19,458,1,0)
^^3^3^2990510^^^^
"KRN",19,458,1,1,0)
This is the main MailMan option menu for normal user interaction.
"KRN",19,458,1,2,0)
It allows the user to Send and Receive messages, as well as manage
"KRN",19,458,1,3,0)
his baskets.
"KRN",19,458,10,0)
^19.01PI^8^8
"KRN",19,458,10,1,0)
457^NML^1
"KRN",19,458,10,1,"^")
XMNEW
"KRN",19,458,10,2,0)
455^RML^2
"KRN",19,458,10,2,"^")
XMREAD
"KRN",19,458,10,3,0)
456^SML^3
"KRN",19,458,10,3,"^")
XMSEND
"KRN",19,458,10,4,0)
528^^4
"KRN",19,458,10,4,"^")
XMSEARCH
"KRN",19,458,10,5,0)
469^AML^5
"KRN",19,458,10,5,"^")
XMASSUME
"KRN",19,458,10,6,0)
605^^6
"KRN",19,458,10,6,"^")
XM PERSONAL MENU
"KRN",19,458,10,7,0)
529^^7
"KRN",19,458,10,7,"^")
XMOTHER
"KRN",19,458,10,8,0)
471^^8
"KRN",19,458,10,8,"^")
XMHELP
"KRN",19,458,15)
K XMMENU D CHECKOUT^XM
"KRN",19,458,20)
S XMMENU(0)="XMUSER" D EN^XM
"KRN",19,458,99)
57838,37380
"KRN",19,458,99.1)
54262,51324
"KRN",19,458,"U")
MAILMAN MENU
"KRN",19,458,"W")
^
"KRN",19,463,-1)
3^45
"KRN",19,463,0)
XMMGR^Manage Mailman^^M^^^XMHELP^^^^^MAILMAN^^1^1^^^
"KRN",19,463,1,0)
3^^3^3^2970514^^^^
"KRN",19,463,1,1,0)
This option allows the site manager to manage the MailMan system, 
"KRN",19,463,1,2,0)
by manipulating the Message, Mail group, Bulletin, and Mail Box
"KRN",19,463,1,3,0)
files.
"KRN",19,463,3)

"KRN",19,463,10,0)
^19.01PI^9^9
"KRN",19,463,10,1,0)
512
"KRN",19,463,10,1,"^")
XMUT-CHKFIL
"KRN",19,463,10,2,0)
534
"KRN",19,463,10,2,"^")
XMMGR-NEW-MAIL-BOX
"KRN",19,463,10,4,0)
477
"KRN",19,463,10,4,"^")
XMNET
"KRN",19,463,10,8,0)
541
"KRN",19,463,10,8,"^")
XMKSP
"KRN",19,463,15)
K XMMENU D CHECKOUT^XM
"KRN",19,463,20)
D CHECKIN^XM S XMMENU(0)="XMUSER"
"KRN",19,463,99)
57446,33622
"KRN",19,463,99.1)
54262,51324
"KRN",19,463,"U")
MANAGE MAILMAN
"KRN",19,465,-1)
0^26
"KRN",19,465,0)
XMPOST^Post a bulletin^^R^^^^^^^^MAILMAN
"KRN",19,465,1,0)
^19.06^2^2^2970730^^
"KRN",19,465,1,1,0)
This option allows a user to manually post a bulletin, to test its
"KRN",19,465,1,2,0)
operation.
"KRN",19,465,25)
BULLETIN^XMJMBULL
"KRN",19,465,99)
55595,48259
"KRN",19,465,"U")
POST A BULLETIN
"KRN",19,468,-1)
0^8
"KRN",19,468,0)
XMEDITUSER^User Options Edit^^R^^^XM-U-P-OPTIONS^^^^^MAILMAN^^
"KRN",19,468,1,0)
^^21^21^2971229^^^^
"KRN",19,468,1,1,0)
Enables the user to edit various fields which identify the user and
"KRN",19,468,1,2,0)
specify his MailMan preferences.
"KRN",19,468,1,3,0)

"KRN",19,468,1,4,0)
Included are:
"KRN",19,468,1,5,0)
- Banner
"KRN",19,468,1,6,0)
- Message Display Order (Oldest/Newest First)
"KRN",19,468,1,7,0)
- Message Reader (Classic/Full Screen)
"KRN",19,468,1,8,0)
- Message Reader Prompt (ask/use default)
"KRN",19,468,1,9,0)
- Message Action Default (Ignore/Delete)
"KRN",19,468,1,10,0)
- Ask Baskets
"KRN",19,468,1,11,0)
- Show Titles
"KRN",19,468,1,12,0)
- Priority Responses Flag
"KRN",19,468,1,13,0)
- Priority Responses Prompt
"KRN",19,468,1,14,0)
- MailMan Institution
"KRN",19,468,1,15,0)
- Network Signature
"KRN",19,468,1,16,0)
- Introduction
"KRN",19,468,1,17,0)
- Preferred Editor
"KRN",19,468,1,18,0)
- Address
"KRN",19,468,1,19,0)
- Phone
"KRN",19,468,1,20,0)
- Fax
"KRN",19,468,1,21,0)
- Pager
"KRN",19,468,25)
EDIT^XMVVITA
"KRN",19,468,99)
55394,60823
"KRN",19,468,"U")
USER OPTIONS EDIT
"KRN",19,469,-1)
0^3
"KRN",19,469,0)
XMASSUME^Become a Surrogate (SHARED,MAIL or Other)^^R^^^XM-U-I-SURROGATE^^^^^MAILMAN^^1^1
"KRN",19,469,1,0)
^^27^27^2990510^^^^
"KRN",19,469,1,1,0)
This option allows the user to act as a surrogate for another user
"KRN",19,469,1,2,0)
or for SHARED,MAIL.
"KRN",19,469,1,3,0)

"KRN",19,469,1,4,0)
Before you can act as a surrogate for another user, that user must
"KRN",19,469,1,5,0)
indicate permission by granting you surrogate privileges through
"KRN",19,469,1,6,0)
his USER OPTIONS EDIT.  You will then be able to read, answer, and
"KRN",19,469,1,7,0)
send mail for that user, depending on the level of access (read/write)
"KRN",19,469,1,8,0)
that you were granted.
"KRN",19,469,1,9,0)

"KRN",19,469,1,10,0)
You may assume the identity of a special user, 'SHARED,MAIL',
"KRN",19,469,1,11,0)
to read messages of general interest.  You will be able to read and
"KRN",19,469,1,12,0)
respond to messages there, but you will not be able to send any.
"KRN",19,469,1,13,0)
If you have been given the XMNOPRIV key, you will not be able
"KRN",19,469,1,14,0)
to access 'SHARED,MAIL'.
"KRN",19,469,1,15,0)

"KRN",19,469,1,16,0)
SHARED,MAIL is a place to send messages of general interest.
"KRN",19,469,1,17,0)
Almost all users may access this area.  When you send messages to
"KRN",19,469,1,18,0)
SHARED,MAIL, you must indicate a BASKET to deliver the messages to
"KRN",19,469,1,19,0)
so that helps others find yours.
"KRN",19,469,1,20,0)

"KRN",19,469,1,21,0)
Do not create new BASKETS unless it is really necessary.
"KRN",19,469,1,22,0)

"KRN",19,469,1,23,0)
Try to fit your message into a basket that already exists.  SHARED, MAIL
"KRN",19,469,1,24,0)
is a LIBRARY, NOT a repository for trivial or personal communications.
"KRN",19,469,1,25,0)
Please respect your privilege to be SHARED,MAIL surrogate.
"KRN",19,469,1,26,0)

"KRN",19,469,1,27,0)
The PRIVILEGE to be a SURROGATE of SHARED,MAIL may be taken away.
"KRN",19,469,15)
D CHECKOUT^XM
"KRN",19,469,20)
D CHECKIN^XM
"KRN",19,469,25)
ASSUME^XMVSURR
"KRN",19,469,"U")
BECOME A SURROGATE (SHARED,MAI
"KRN",19,470,-1)
0^4
"KRN",19,470,0)
XMBANNER^Banner Edit^^R^^^^^^^^MAILMAN^^^
"KRN",19,470,1,0)
^^3^3^2971229^^^^
"KRN",19,470,1,1,0)
Enables a user to edit his "banner" message for MailMan.
"KRN",19,470,1,2,0)
When messages are addressed to users with banners, their banners
"KRN",19,470,1,3,0)
may be displayed.
"KRN",19,470,15)

"KRN",19,470,20)

"KRN",19,470,25)
BANNER^XMVVITA
"KRN",19,470,"U")
BANNER EDIT
"KRN",19,471,-1)
0^10
"KRN",19,471,0)
XMHELP^Help (User/Group Info., etc.)^^M^^^^^^^^MAILMAN^^
"KRN",19,471,1,0)
^^1^1^2970730^^^^
"KRN",19,471,1,1,0)
Provides help for users.
"KRN",19,471,10,0)
^19.01PI^7^7
"KRN",19,471,10,1,0)
479^^1
"KRN",19,471,10,1,"^")
XMHELPUSER
"KRN",19,471,10,2,0)
472^^2
"KRN",19,471,10,2,"^")
XMHELPGROUP
"KRN",19,471,10,3,0)
565^^3
"KRN",19,471,10,3,"^")
XMHELPLNK
"KRN",19,471,10,4,0)
521^^4
"KRN",19,471,10,4,"^")
XM-NEW-FEATURES
"KRN",19,471,10,5,0)
473^^5
"KRN",19,471,10,5,"^")
XMHELPALL
"KRN",19,471,10,6,0)
499^^6
"KRN",19,471,10,6,"^")
XMHELPQUEST
"KRN",19,471,10,7,0)
548^^7
"KRN",19,471,10,7,"^")
XMHELP-ON-LINE-USER_MANUAL
"KRN",19,471,99)
57729,30740
"KRN",19,471,"U")
HELP (USER/GROUP INFO., ETC.)
"KRN",19,472,-1)
0^12
"KRN",19,472,0)
XMHELPGROUP^Group Information^^R^^^^^^^^MAILMAN^^
"KRN",19,472,1,0)
^^1^1^2970730^^^^
"KRN",19,472,1,1,0)
Enables the user to get detailed information about mail groups.
"KRN",19,472,25)
HELP^XMHIG
"KRN",19,472,"U")
GROUP INFORMATION
"KRN",19,473,-1)
0^11
"KRN",19,473,0)
XMHELPALL^General MailMan Information^^A^^^^^^^^MAILMAN^^1^^
"KRN",19,473,1,0)
^^3^3^2970730^^^^
"KRN",19,473,1,1,0)
This is a general help frame that gives the most simple information
"KRN",19,473,1,2,0)
about what MailMan is and does.  It is a good starting point for the
"KRN",19,473,1,3,0)
beginner MailMan user.
"KRN",19,473,20)
S XQH="XMHELP" D EN^XQH
"KRN",19,473,"U")
GENERAL MAILMAN INFORMATION
"KRN",19,477,-1)
3^44
"KRN",19,477,0)
XMNET^Network Management^^M^^^XMNETWORK*^^^^^MAILMAN^^1^1^^
"KRN",19,477,1,0)
^^3^3^2930319^^^^
"KRN",19,477,1,1,0)
This menu allows the user to control the network; editing, playing, and
"KRN",19,477,1,2,0)
listing scripts, managing domains, christening subordinate domains, 
"KRN",19,477,1,3,0)
controlling pollers, etc.
"KRN",19,477,10,0)
^19.01PI^6^6
"KRN",19,477,15)
D CHECKOUT^XM
"KRN",19,477,20)
D CHECKIN^XM
"KRN",19,477,25)

"KRN",19,477,99)
57446,33619
"KRN",19,477,99.1)
53415,38614
"KRN",19,477,"U")
NETWORK MANAGEMENT
"KRN",19,479,-1)
0^16
"KRN",19,479,0)
XMHELPUSER^User Information^^R^^^^^^^^MAILMAN^^
"KRN",19,479,1,0)
^^1^1^2970730^^
"KRN",19,479,1,1,0)
Enables the user to get detailed information about other MailMan users.
"KRN",19,479,25)
HELP^XMHIU
"KRN",19,479,"U")
USER INFORMATION
"KRN",19,499,-1)
0^15
"KRN",19,499,0)
XMHELPQUEST^Questions and Answers on MailMan^^A^^^^^^^^MAILMAN^^1^^
"KRN",19,499,1,0)
^^1^1^2970730^^^
"KRN",19,499,1,1,0)
This help frame poses and answers frequently asked questions.
"KRN",19,499,20)
S XQH="XM-U-H-QUESTIONS" D EN^XQH
"KRN",19,499,"U")
QUESTIONS AND ANSWERS ON MAILM
"KRN",19,501,-1)
0^25
"KRN",19,501,0)
XMPACK^Load PackMan Message^^R^^XUPROGMODE^XMPACKMAN^^^^^MAILMAN^^1^1^
"KRN",19,501,1,0)
^^1^1^2971002^^^^
"KRN",19,501,1,1,0)
Enables the user to create a PackMan message.
"KRN",19,501,15)
D CHECKOUT^XM
"KRN",19,501,20)
D CHECKIN^XM
"KRN",19,501,25)
PAKMAN^XMJMS
"KRN",19,501,99)
54082,25317
"KRN",19,501,99.1)
54447,33482
"KRN",19,501,"U")
LOAD PACKMAN MESSAGE
"KRN",19,503,-1)
0^9
"KRN",19,503,0)
XMENROLL^Enroll in (or Disenroll from) a Mail Group^^R^^^XM-U-P-GROUP ENROLL^^^^^MAILMAN^^^^
"KRN",19,503,1,0)
^^7^7^2971007^^^^
"KRN",19,503,1,1,0)
This option enables a mailman user to enroll in & disenroll from mail
"KRN",19,503,1,2,0)
groups for which self-enrollment is allowed.
"KRN",19,503,1,3,0)
The user chooses a mail group.
"KRN",19,503,1,4,0)
If the user is already a member of the group, then this option
"KRN",19,503,1,5,0)
enables the user to leave the group.
"KRN",19,503,1,6,0)
If the user is not already a member of the group, then this option
"KRN",19,503,1,7,0)
enables the user to join the group.
"KRN",19,503,20)

"KRN",19,503,25)
ENROLL^XMVGROUP
"KRN",19,503,"U")
ENROLL IN (OR DISENROLL FROM) 
"KRN",19,512,-1)
0^40
"KRN",19,512,0)
XMUT-CHKFIL^Check MailMan Files for Errors^^R^^XUPROG^^^^^^MAILMAN^^
"KRN",19,512,1,0)
^^15^15^2971003^^^^
"KRN",19,512,1,1,0)
This process goes through the mailman system files (Mailboxes, and
"KRN",19,512,1,2,0)
Messages) and checks for errors in cross references and very important
"KRN",19,512,1,3,0)
fields.  It should not be run everyday.
"KRN",19,512,1,4,0)
 
"KRN",19,512,1,5,0)
There are times when it is recommended that it be run:  After any
"KRN",19,512,1,6,0)
database problem, or whenever the system has gone down without the
"KRN",19,512,1,7,0)
mailman background filer being stopped gracefully.  Some of the errors
"KRN",19,512,1,8,0)
need not be corrected -- they are not fatal.  But others must be
"KRN",19,512,1,9,0)
corrected -- It is best to correct them all or call your ISC for help.
"KRN",19,512,1,10,0)
The most crucial errors would be in the 'M' cross reference of the
"KRN",19,512,1,11,0)
Mailbox (3.7) file.
"KRN",19,512,1,12,0)
 
"KRN",19,512,1,13,0)
Although the system will not fail because of errors detected, your users
"KRN",19,512,1,14,0)
may call you about the problems they experience.  This utility will allow
"KRN",19,512,1,15,0)
you to detect them first and correct them before anyone knows.
"KRN",19,512,25)
CHKFILES^XMUT4
"KRN",19,512,200.9)
y
"KRN",19,512,"U")
CHECK MAILMAN FILES FOR ERRORS
"KRN",19,514,-1)
0^5
"KRN",19,514,0)
XMBASKLIST^Mailbox Contents List^^R^^^XM-U-B-BASKET CONTENTS LIST^^^^^MAILMAN^^^^
"KRN",19,514,1,0)
^^4^4^2980520^^^^
"KRN",19,514,1,1,0)
Prints/Displays a list of all messages in all/one of your mail baskets.
"KRN",19,514,1,2,0)

"KRN",19,514,1,3,0)
The list is sorted by basket name, and within basket by message index
"KRN",19,514,1,4,0)
number.
"KRN",19,514,20)

"KRN",19,514,25)
LISTMBOX^XMJBL
"KRN",19,514,99)
55614,50948
"KRN",19,514,"U")
MAILBOX CONTENTS LIST
"KRN",19,519,-1)
0^41
"KRN",19,519,0)
XMUT-REC-DELIVER^Deliver Found Messages into User's IN Basket^^R^^^XMUT-REC-DEL^^^^^^^
"KRN",19,519,1,0)
^^3^3^2870825^
"KRN",19,519,1,1,0)
Use this procedure to deliver the messages found with the 'Find Messages
"KRN",19,519,1,2,0)
for User' option.  The Messages found with that option will be placed into
"KRN",19,519,1,3,0)
the user's IN basket, but only if they are not already in another basket.
"KRN",19,519,25)
G^XMUT1
"KRN",19,519,"U")
DELIVER FOUND MESSAGES INTO US
"KRN",19,521,-1)
0^23
"KRN",19,521,0)
XM-NEW-FEATURES^New Features in MailMan^^A^^^^^^^^MAILMAN^^1^^
"KRN",19,521,1,0)
^^3^3^2981019^^^^
"KRN",19,521,1,1,0)
Displays a help frame which informs the user about new MailMan features.
"KRN",19,521,1,2,0)
Many users do not get manuals.  
"KRN",19,521,1,3,0)
Therefore it is very important that this sort of documentation be on-line.
"KRN",19,521,20)
S XQH="XM-U-NEW FEATURES" D EN^XQH
"KRN",19,521,99)
54870,25976
"KRN",19,521,"U")
NEW FEATURES IN MAILMAN
"KRN",19,522,-1)
0^7
"KRN",19,522,0)
XMEDITPERSGROUP^Personal Mail Group Edit^^R^^^XM-U-P-GROUP PERSONAL^^^^^MAILMAN^^
"KRN",19,522,1,0)
^^5^5^2971007^^^^
"KRN",19,522,1,1,0)
This option allows the user to create or edit a personal group.
"KRN",19,522,1,2,0)
A personal group is one that only the user can access, to use
"KRN",19,522,1,3,0)
in addressing mail.  Members can not remove themselves.
"KRN",19,522,1,4,0)
The difference between a personal group and a private one is
"KRN",19,522,1,5,0)
that the personal group is restricted in its use and joining. 
"KRN",19,522,25)
PERSONAL^XMVGROUP
"KRN",19,522,99)
55469,51715
"KRN",19,522,"U")
PERSONAL MAIL GROUP EDIT
"KRN",19,524,-1)
0^20
"KRN",19,524,0)
XMMGR-IN-BASKET-PURGE^IN Basket Purge^^R^^^XM-IN-BASKET-PURGE^^^^^MAILMAN^^
"KRN",19,524,1,0)
^^19^19^2980324^^^^
"KRN",19,524,1,1,0)
THIS OPTION MAY RUN VIA THE TASKMANAGER.
"KRN",19,524,1,2,0)
 
"KRN",19,524,1,3,0)
This option purges 'IN' Baskets in two steps:
"KRN",19,524,1,4,0)
 
"KRN",19,524,1,5,0)
1.  In the first step messages are sent to users
"KRN",19,524,1,6,0)
    a.  Message will contain a list of messages to be purged in step two.
"KRN",19,524,1,7,0)
    b.  Message will contain list of actions that will prevent the purging
"KRN",19,524,1,8,0)
        of the listed messages.
"KRN",19,524,1,9,0)
    c.  Message will state how many days later listed messages will be 
"KRN",19,524,1,10,0)
        purged unless the action is taken on a message by message basis.
"KRN",19,524,1,11,0)
    d.  The messages listed will not have been referenced for 30 days
"KRN",19,524,1,12,0)
        or the number of days in the MAILMAN SITE PARAMETERS file, field
"KRN",19,524,1,13,0)
        'IN-BASKET-PURGE DAYS', if it is not null.
"KRN",19,524,1,14,0)
 
"KRN",19,524,1,15,0)
2.  In the second step the messages listed in the message from step 1
"KRN",19,524,1,16,0)
    will be purged not less than 30 days later unless they:
"KRN",19,524,1,17,0)
    a.  Have been saved into a basket other than the 'IN' basket.
"KRN",19,524,1,18,0)
    b.  Have been referenced (read or printed) otherwise.
"KRN",19,524,1,19,0)
    c.  Are marked as NEW.
"KRN",19,524,25)
ENTER^XMUPIN
"KRN",19,524,"U")
IN BASKET PURGE
"KRN",19,528,-1)
0^28
"KRN",19,528,0)
XMSEARCH^Query/Search for Messages^^R^^^XM-U-Q-SEARCH^^^^^MAILMAN^^1^1
"KRN",19,528,1,0)
^^16^16^2970730^^^^
"KRN",19,528,1,1,0)
Enables you to find messages sent by you or sent to you,
"KRN",19,528,1,2,0)
based on various criteria.
"KRN",19,528,1,3,0)

"KRN",19,528,1,4,0)
You may search the entire database of existing messages, regardless
"KRN",19,528,1,5,0)
of whether they are in one of your baskets or not, or whether you have
"KRN",19,528,1,6,0)
terminated them or not.  Such a search may only be made based upon
"KRN",19,528,1,7,0)
'Subject start with' a string.
"KRN",19,528,1,8,0)

"KRN",19,528,1,9,0)
Your search options vastly increase if you confine your search to
"KRN",19,528,1,10,0)
messages existing in one (or all) of your baskets.  Such a search
"KRN",19,528,1,11,0)
may be based upon any combination of the following:
"KRN",19,528,1,12,0)
'Subject contains'
"KRN",19,528,1,13,0)
'Sender is'
"KRN",19,528,1,14,0)
'Message sent on or after' a certain date
"KRN",19,528,1,15,0)
'Message sent on or before' a certain date
"KRN",19,528,1,16,0)
'Message sent to' a certain user
"KRN",19,528,15)
D CHECKOUT^XM
"KRN",19,528,20)
D CHECKIN^XM
"KRN",19,528,25)
FIND^XMJMF
"KRN",19,528,"U")
QUERY/SEARCH FOR MESSAGES
"KRN",19,529,-1)
0^24
"KRN",19,529,0)
XMOTHER^Other MailMan Functions^^M^^^XMHELP^^^^^MAILMAN^^
"KRN",19,529,1,0)
^19.06^1^1^2970730^^^^
"KRN",19,529,1,0,0,99999999)
^1^99999999
"KRN",19,529,1,0,"W")
75
"KRN",19,529,1,1,0)
This is the mailman option menu for special user activities.
"KRN",19,529,10,0)
^19.01PI^4^4
"KRN",19,529,10,1,0)
539^^1
"KRN",19,529,10,1,"^")
XMLATER-REPORT
"KRN",19,529,10,2,0)
540^^2
"KRN",19,529,10,2,"^")
XMLATER-EDIT
"KRN",19,529,10,3,0)
514^^3
"KRN",19,529,10,3,"^")
XMBASKLIST
"KRN",19,529,10,4,0)
501^LML^4
"KRN",19,529,10,4,"^")
XMPACK
"KRN",19,529,15)

"KRN",19,529,20)

"KRN",19,529,99)
57616,57382
"KRN",19,529,99.1)
54262,51324
"KRN",19,529,"U")
OTHER MAILMAN FUNCTIONS
"KRN",19,534,-1)
0^21
"KRN",19,534,0)
XMMGR-NEW-MAIL-BOX^Create a Mailbox for a user^^R^^^^^^^^MAILMAN^^^^
"KRN",19,534,1,0)
^^8^8^2970730^^^^
"KRN",19,534,1,1,0)
This option is meant to be used only on systems where Kernel 6 or later
"KRN",19,534,1,2,0)
is not running (or when a repair must be made to the 3.7 file).  A mailbox
"KRN",19,534,1,3,0)
is created for each new or reinstated user in Kernel 6 and there should be
"KRN",19,534,1,4,0)
no need to use this routine unless there was an error setting up the user
"KRN",19,534,1,5,0)
or there was a file degradation problem.  Using this option for a user whose
"KRN",19,534,1,6,0)
mailbox is partially or wholly set up will not cause data to be lost.
"KRN",19,534,1,7,0)
 
"KRN",19,534,1,8,0)
A MAILBOX may be CREATED or REPAIRED using this option.
"KRN",19,534,20)

"KRN",19,534,25)
NEWMBOX^XM
"KRN",19,534,"U")
CREATE A MAILBOX FOR A USER
"KRN",19,535,-1)
0^46
"KRN",19,535,0)
XMMGR-START-BACKGROUND-FILER^START background filer^^R^^^^^^^^MAILMAN^^^^
"KRN",19,535,1,0)
^^5^5^2980107^^^^
"KRN",19,535,1,1,0)
XMMGR-START-BACKGROUND-FILER reverses the action that was taken when the
"KRN",19,535,1,2,0)
option that is its mirror image (XMMGR-STOP-BACKGROUND-FILER) has been
"KRN",19,535,1,3,0)
run.  It also will restart the background filer if it disappears from the
"KRN",19,535,1,4,0)
system status report.  In order for this option to be effective, the Task
"KRN",19,535,1,5,0)
Manager (ZTM) must be running.
"KRN",19,535,15)

"KRN",19,535,20)

"KRN",19,535,25)
START^XMKPL
"KRN",19,535,99)
55010,54425
"KRN",19,535,"U")
START BACKGROUND FILER
"KRN",19,536,-1)
0^51
"KRN",19,536,0)
XMMGR-STOP-BACKGROUND-FILER^STOP background filer^^R^^^^^^^^MAILMAN^^^^
"KRN",19,536,1,0)
^^6^6^2980107^^
"KRN",19,536,1,1,0)
Use this option to STOP the background filer gently at the end of a delivery
"KRN",19,536,1,2,0)
before it starts to deliver any further messages.  This only stops local 
"KRN",19,536,1,3,0)
delivery operations.  ALL LOCAL MAIL DELIVERY WILL STOP until the
"KRN",19,536,1,4,0)
XMMGR-START-BACKGROUND-FILER option is run.
"KRN",19,536,1,5,0)
 
"KRN",19,536,1,6,0)
STOPS DELIVERY OF LOCAL MAIL GRACEFULLY !!
"KRN",19,536,15)

"KRN",19,536,20)

"KRN",19,536,25)
STOP^XMKPL
"KRN",19,536,99)
55010,54409
"KRN",19,536,"U")
STOP BACKGROUND FILER
"KRN",19,537,-1)
0^52
"KRN",19,537,0)
XMMGR-CHECK-BACKGROUND-FILER^CHECK background filer^^R^^^^^^^^^^
"KRN",19,537,1,0)
^^2^2^2891130^
"KRN",19,537,1,1,0)
This option tells you if the background filer is running and tells how many
"KRN",19,537,1,2,0)
recipients need delivery for each of the messages/responses in the queue.
"KRN",19,537,25)
CHECK^XMUT5
"KRN",19,537,99)
55381,48148
"KRN",19,537,"U")
CHECK BACKGROUND FILER
"KRN",19,539,-1)
0^19
"KRN",19,539,0)
XMLATER-REPORT^Report on Later'd Messages^^R^^^^^^^^MAILMAN^^
"KRN",19,539,1,0)
^^1^1^2970730^^^^
"KRN",19,539,1,1,0)
Prints/displays an overview of all of the user's later'd messages.
"KRN",19,539,25)
REPORT^XMJMD
"KRN",19,539,"U")
REPORT ON LATER'D MESSAGES
"KRN",19,540,-1)
0^18
"KRN",19,540,0)
XMLATER-EDIT^Change/Delete Later'd Messages^^R^^^^^^^^MAILMAN^^
"KRN",19,540,1,0)
^^2^2^2980519^^^^
"KRN",19,540,1,1,0)
Enables the user to delete or change the date/time that a message
"KRN",19,540,1,2,0)
is scheduled to become new.
"KRN",19,540,25)
EDIT^XMJMD
"KRN",19,540,"U")
CHANGE/DELETE LATER'D MESSAGES
"KRN",19,541,-1)
0^17
"KRN",19,541,0)
XMKSP^MailMan Site Parameters^^E^^^^^^^^MAILMAN^^^
"KRN",19,541,1,0)
0^^55^55^2990728^^^^
"KRN",19,541,1,1,0)
This option allows a site manager to edit the fields in the MailMan Site
"KRN",19,541,1,2,0)
Parameter file that do not have to do with christening.  To christen a
"KRN",19,541,1,3,0)
domain use the XMCHRIS option.  XMCHRIS also will allow you to change
"KRN",19,541,1,4,0)
fields set during the original christening if you set them wrong.  You may
"KRN",19,541,1,5,0)
also use FileMan to edit the TRANSMISSION SCRIPT file if the scripts for
"KRN",19,541,1,6,0)
AUSTIN or the MINIengine need to be changed.
"KRN",19,541,1,7,0)
 
"KRN",19,541,1,8,0)
Following are the fields which are edited, in the order in which they
"KRN",19,541,1,9,0)
are edited: 
"KRN",19,541,1,10,0)
 
"KRN",19,541,1,11,0)
 1         TIME ZONE (RP4.4'), [0;2]
"KRN",19,541,1,12,0)
 3         PARENT (P4.2'), [0;3]
"KRN",19,541,1,13,0)
 7         REQUIRE INTRODUCTIONS? (S), [0;6]
"KRN",19,541,1,14,0)
 5         SHOW INSTITUTION IN MAILMAN? (S), [0;5]
"KRN",19,541,1,15,0)
 7.3       SHOW DUZ WHEN ADDRESS MESSAGE (S), [0;8]
"KRN",19,541,1,16,0)
 7.4       SHOW ADDRESS ON USER LOOKUP (S), [0;10]
"KRN",19,541,1,17,0)
 5.1       MESSAGE ACTION DEFAULT (S), [0;15]
"KRN",19,541,1,18,0)
 5.11      COPY LIMIT - RECIPIENTS (NJ5,0), [.11;1]
"KRN",19,541,1,19,0)
 5.12      COPY LIMIT - RESPONSES (NJ4,0), [.11;2]
"KRN",19,541,1,20,0)
 5.13      COPY LIMIT - LINES (NJ7,0), [.11;3]
"KRN",19,541,1,21,0)
 16.1      P-MESSAGE LINE LIMIT (NJ7,0), [.16;1]
"KRN",19,541,1,22,0)
 7.2       BIG GROUP SIZE (NJ5,0), [0;7]
"KRN",19,541,1,23,0)
 7.01      FWD TEST MESSAGE TO POSTMASTER (S), [FORWARD;1]
"KRN",19,541,1,24,0)
 143       FAX ENABLED (S), [0;19]
"KRN",19,541,1,25,0)
 8.14      LARGE MESSAGE REPORT LINES (NJ6,0), [XMUT2-LINES;1]
"KRN",19,541,1,26,0)
 17.1      MAX DIGITS FOR MESSAGE NUMBER (NJ2,0), [.17;1]
"KRN",19,541,1,27,0)
 241       BACKGROUND MESSAGE DELIVERERS (FX), [6;1]
"KRN",19,541,1,28,0)
 242       BACKGROUND RESPONSE DELIVERERS (FX), [6;2]
"KRN",19,541,1,29,0)
 10.1      BACKGROUND FILER HANG TIME (NJ2,0), [0;13]
"KRN",19,541,1,30,0)
 10.2      BACKGROUND FILER RUN FLAG (S), [0;16]
"KRN",19,541,1,31,0)
 10.3      BACKGROUND FILER RUN PRIORITY (NJ2,0), [.13;1]
"KRN",19,541,1,32,0)
 7.5       CPU (UCI,VOL) FOR FILER TO RUN (F), [0;12]
"KRN",19,541,1,33,0)
 4.301     NO-PURGE DAYS BUFFER (NJ1,0), [.14;1]
"KRN",19,541,1,34,0)
 142       NO-PURGE DAYS BUFFER (LOCAL) (NJ2,0), [.14;2]
"KRN",19,541,1,35,0)
 4.303     AUTOMATIC INTEGRITY CHECK (S), [.12;1]
"KRN",19,541,1,36,0)
 4.304     WEEKDAY DAYS TO PURGE (NJ3,0), [NOTOPURGE;1]
"KRN",19,541,1,37,0)
 10        IN-BASKET-PURGE DAYS (NJ3,0), [0;9]
"KRN",19,541,1,38,0)
 10.01     IN-BASKET-PURGE TYPE (S), [.15;1]
"KRN",19,541,1,39,0)
 8.3       NETWORK - MAX LINES SEND (NJ5,0), [NETWORK-LIMIT;1]
"KRN",19,541,1,40,0)
 8.31      NETWORK - MAX LINES RECEIVE (NJ8,0), [NETWORK-LIMIT;2]
"KRN",19,541,1,41,0)
 8.12      TCP CHANNEL - MAXIMUM TO USE (NJ3,0), [0;17]
"KRN",19,541,1,42,0)
 8.15      TCP/IP POLLER RUN FLAG (S), [0;18]
"KRN",19,541,1,43,0)
 8.2       RECORD NETMAIL TRANSCRIPT? (S), [0;14]
"KRN",19,541,1,44,0)
 8.21      XMITS TILL ERROR MESSAGE (NJ3,0), [NETWORK;1]
"KRN",19,541,1,45,0)
 8.13      STATS NORMALIZATION (F), [7;1]
"KRN",19,541,1,46,0)
 8.4       DIRECTORY REQUEST FLAG (S), [8.4;1]
"KRN",19,541,1,47,0)
 7.6       FTP ADDRESS FOR BLOB <GET> (F), [FTP-GET;1]
"KRN",19,541,1,48,0)
 7.7       FTP RECEIVE DIRECTORY (F), [DISK/VOL;1]
"KRN",19,541,1,49,0)
 7.71      FTP RECEIVE NETWORK LOCATION (F), [FTPNETLOC;1]
"KRN",19,541,1,50,0)
 7.711     FTP RECEIVE DISK (F), [FTPRCVDISK;1]
"KRN",19,541,1,51,0)
 7.72      FTP ADDRESS FOR BLOB RECEIVE (F), [FTP-RCV;1]
"KRN",19,541,1,52,0)
 7.73      FTP USERNAME (F), [FTPUSER;1]
"KRN",19,541,1,53,0)
 7.731     FTP PASSWORD (F), [FTPPWD;1]
"KRN",19,541,1,54,0)
 7.7999    FTP NOTES (Multiple-4.37), [FTP-NOTES;0]
"KRN",19,541,1,55,0)
           .01  FTP NOTES (WL), [0;1]
"KRN",19,541,15)

"KRN",19,541,20)

"KRN",19,541,30)
XMB(1,
"KRN",19,541,31)
AEMNL
"KRN",19,541,34)
I Y=1
"KRN",19,541,50)
XMB(1,
"KRN",19,541,51)
1;3;7;5;7.3;7.4;5.1:5.13;16.1;7.2;7.01;143;8.14;17.1;241;242;10.1:10.3;7.5;4.301;142;4.303;4.304;10;10.01;8.3;8.31;8.12;8.15;8.2;8.21;8.13;8.4;7.6:7.8
"KRN",19,541,"U")
MAILMAN SITE PARAMETERS
"KRN",19,543,-1)
0^30
"KRN",19,543,0)
XMSHARE^Assume the Identity of SHARED,MAIL^^R^^^XM-U-I-SHARED MAIL^^^^^MAILMAN^^1^1^1^^
"KRN",19,543,1,0)
^^14^14^2970731^^^^
"KRN",19,543,1,1,0)
Use this option to assume the identity of a special user, 'SHARED,MAIL',
"KRN",19,543,1,2,0)
so that you may read mail send to the general public.  Users who own the
"KRN",19,543,1,3,0)
XMNOPRIV key may not do this.  SHARED,MAIL is a place to send messages of
"KRN",19,543,1,4,0)
general interest.  Almost all users may access this area.  You must
"KRN",19,543,1,5,0)
indicate a BASKET to deliver the messages to so that helps others find 
"KRN",19,543,1,6,0)
yours.
"KRN",19,543,1,7,0)

"KRN",19,543,1,8,0)
  Do not create new BASKETS unless it is really necessary.
"KRN",19,543,1,9,0)

"KRN",19,543,1,10,0)
Try to fit your message into a basket that already exists.  SHARED, MAIL
"KRN",19,543,1,11,0)
is a LIBRARY, NOT a repository for trivial or personal communications.
"KRN",19,543,1,12,0)
Please respect your privilege to be SHARED,MAIL surrogate.
"KRN",19,543,1,13,0)

"KRN",19,543,1,14,0)
The PRIVILEGE to be a SURROGATE of SHARED,MAIL may be taken away.
"KRN",19,543,3)
XMNOPRIV
"KRN",19,543,15)
D CHECKOUT^XM
"KRN",19,543,20)
D CHECKIN^XM
"KRN",19,543,25)
SHARE^XMVSURR
"KRN",19,543,99)
55054,48822
"KRN",19,543,"U")
ASSUME THE IDENTITY OF SHARED,
"KRN",19,545,-1)
0^56
"KRN",19,545,0)
XMS-SEQ-TRANSMIT^Sequential Media Queue Transmission^^R^^^^^^^^^^1^1
"KRN",19,545,1,0)
^^20^20^2940210^^^^
"KRN",19,545,1,1,0)
This option allows the recording of a queue of messages onto sequential
"KRN",19,545,1,2,0)
media.  The messages so recorded may be 'read' into another MailMan system.
"KRN",19,545,1,3,0)
The option 'Sequential Media Message Reception' is the converse process.
"KRN",19,545,1,4,0)
 
"KRN",19,545,1,5,0)
This option has been developed specifically for emergency transmission of
"KRN",19,545,1,6,0)
messages when the wide area network is not available.  It can also be used
"KRN",19,545,1,7,0)
for archiving.
"KRN",19,545,1,8,0)
 
"KRN",19,545,1,9,0)
Say a bulldozer knocked out your T1 line to the WAN in front of your
"KRN",19,545,1,10,0)
computer room.  It will be three weeks until the system is reconnected to
"KRN",19,545,1,11,0)
the network.  You know that a sister installation 10 miles down the road is
"KRN",19,545,1,12,0)
still on line.  You must get your payroll information to Austin.  The
"KRN",19,545,1,13,0)
messages are ready to be sent (in the queue to FOC-AUSTIN.VA.GOV).  Quick !
"KRN",19,545,1,14,0)
Mount a tape.  Use this procedure to 'transmit' the queue onto the tape.
"KRN",19,545,1,15,0)
Have the tape delivered to your sister site (keeping it away from all
"KRN",19,545,1,16,0)
magnetic fields -- those messages are no longer in the queue).  At your
"KRN",19,545,1,17,0)
sister site the tape is delivered.  They mount it and read in the messages.
"KRN",19,545,1,18,0)
The messages are queued up for FOC-AUSTIN.VA.GOV and delivered as though
"KRN",19,545,1,19,0)
they were 'relayed' through this site.  You could also have sent the tape
"KRN",19,545,1,20,0)
directly to FOC-AUSTIN.VA.GOV where they could have been received.
"KRN",19,545,15)
D CHECKOUT^XM
"KRN",19,545,20)
D EN^XM
"KRN",19,545,25)
BAT^XMS
"KRN",19,545,"U")
SEQUENTIAL MEDIA QUEUE TRANSMI
"KRN",19,546,-1)
0^57
"KRN",19,546,0)
XMR-SEQ-RECEIVE^Sequential Media Message Reception^^R^^^^^^^^^^1^1
"KRN",19,546,1,0)
^^2^2^2980409^^^
"KRN",19,546,1,1,0)
This is the converse procedure to XMS-SEQ-TRANSMIT.  Please refer to the
"KRN",19,546,1,2,0)
description of XMS-SEQ-TRANSMIT for more information.
"KRN",19,546,15)
D CHECKOUT^XM
"KRN",19,546,20)
D EN^XM
"KRN",19,546,25)
BAT^XMR
"KRN",19,546,"U")
SEQUENTIAL MEDIA MESSAGE RECEP
"KRN",19,547,-1)
0^6
"KRN",19,547,0)
XMEDITFWD^Forwarding Address Edit^^R^^^^^^^^MAILMAN
"KRN",19,547,1,0)
^^1^1^2970730^^^
"KRN",19,547,1,1,0)
Enables the user to edit his forwarding address.
"KRN",19,547,25)
FORWARD^XMVVITA
"KRN",19,547,99)
54871,25646
"KRN",19,547,"U")
FORWARDING ADDRESS EDIT
"KRN",19,548,-1)
0^14
"KRN",19,548,0)
XMHELP-ON-LINE-USER_MANUAL^Manual for MailMan Users^^A^^^^^^^^MAILMAN^^1
"KRN",19,548,1,0)
^^1^1^2970730^^^^
"KRN",19,548,1,1,0)
Displays the MailMan on-line user manual.
"KRN",19,548,3.91,0)
^19.391^^0
"KRN",19,548,20)
S XQHFY="XMHELP-MANUAL" D ACTION^XQH4
"KRN",19,548,"U")
MANUAL FOR MAILMAN USERS
"KRN",19,565,-1)
0^13
"KRN",19,565,0)
XMHELPLNK^Remote User Information^^R^^^^^^^^MAILMAN
"KRN",19,565,1,0)
^^1^1^2970730^^^^
"KRN",19,565,1,1,0)
Enables the user to inquire into the REMOTE USER file.
"KRN",19,565,25)
R^XMJMT
"KRN",19,565,99)
55595,47727
"KRN",19,565,"U")
REMOTE USER INFORMATION
"KRN",19,574,-1)
0^54
"KRN",19,574,0)
XMMGR-MAIL-GRP-COORDINATOR^Mail Group Coordinator's Edit^^R^^^^^^^^MAILMAN
"KRN",19,574,1,0)
^^6^6^2980519^^^^
"KRN",19,574,1,1,0)
This option allows a mail group coordinator to edit the mail groups that
"KRN",19,574,1,2,0)
he or she is the coordinator of (and no others).  It does not allow edit of
"KRN",19,574,1,3,0)
remote recipients.
"KRN",19,574,1,4,0)
 
"KRN",19,574,1,5,0)
Some mail group coordinators might be given the corresponding option,
"KRN",19,574,1,6,0)
XMMGR-MAIL-GRP-COORD-W/REMOTE.
"KRN",19,574,25)
LCOORD^XMVGROUP
"KRN",19,574,"U")
MAIL GROUP COORDINATOR'S EDIT
"KRN",19,575,-1)
0^53
"KRN",19,575,0)
XMMGR-MAIL-GRP-COORD-W/REMOTES^Mail Group Coordinator's Edit W/Remotes^^R^^^^^^^^MAILMAN
"KRN",19,575,1,0)
^^8^8^2971007^^^^
"KRN",19,575,1,1,0)
This option allows a mail group coordinator to edit the mail groups that
"KRN",19,575,1,2,0)
he or she is the coordinator of (and no others).  It allows edit of
"KRN",19,575,1,3,0)
remote recipients.
"KRN",19,575,1,4,0)
 
"KRN",19,575,1,5,0)
Most mail group coordinators should be given the corresponding option,
"KRN",19,575,1,6,0)
XMMGR-MAIL-GRP-COORDINATOR that does not allow them to edit remote
"KRN",19,575,1,7,0)
recipients in the mail group to limit the responsibility for problems
"KRN",19,575,1,8,0)
delivering to incorrect addresses.
"KRN",19,575,25)
RCOORD^XMVGROUP
"KRN",19,575,"U")
MAIL GROUP COORDINATOR'S EDIT 
"KRN",19,577,-1)
0^38
"KRN",19,577,0)
XMMGR-LARGE-MESSAGE-REPORT^Large Message Report^^R^^^^^^^^MAILMAN^^
"KRN",19,577,1,0)
^^4^4^2971003^^^^
"KRN",19,577,1,1,0)
This report lists messages that either are longer than a specified
"KRN",19,577,1,2,0)
number of lines (see field 8.14 in the Kernel Site Parameters - file 4.3),
"KRN",19,577,1,3,0)
or which have either no or only one owner or no text
"KRN",19,577,1,4,0)
or no subject, as such messages are of interest to site management.
"KRN",19,577,20)

"KRN",19,577,25)
ENTER^XMUT2
"KRN",19,577,200.9)
y
"KRN",19,577,"U")
LARGE MESSAGE REPORT
"KRN",19,581,-1)
0^37
"KRN",19,581,0)
XMMGR-DISK-MANY-MESSAGE-MAINT^Ask users with many messages to do maintenance^^R^^^^^^^^MAILMAN
"KRN",19,581,1,0)
^^2^2^2971003^^^
"KRN",19,581,1,1,0)
This option sends messages asking users to clean out mail boxes if
"KRN",19,581,1,2,0)
they have too many messages.
"KRN",19,581,25)
ENTER^XMAI2
"KRN",19,581,200.9)
y
"KRN",19,581,"U")
ASK USERS WITH MANY MESSAGES T
"KRN",19,588,-1)
0^39
"KRN",19,588,0)
XMR-BROADCAST-VA-WIDE^Server / not for a menu^^S^^^^^^^^MAILMAN
"KRN",19,588,1,0)
^^12^12^2971003^^^^
"KRN",19,588,1,1,0)
This option is set up as a server.  When a message is addressed to
"KRN",19,588,1,2,0)
this server (S.XMR-BROADCAST-VA-WIDE), It runs routine ENT^XMGAPI3
"KRN",19,588,1,3,0)
to send the message to SHARED,MAIL.
"KRN",19,588,1,4,0)

"KRN",19,588,1,5,0)
The message is marked 'closed' (may not forward) and
"KRN",19,588,1,6,0)
'information only' (may not reply).
"KRN",19,588,1,7,0)

"KRN",19,588,1,8,0)
The message is marked with a vaporization date of 30 days from
"KRN",19,588,1,9,0)
date of receipt.
"KRN",19,588,1,10,0)

"KRN",19,588,1,11,0)
Note that server XMYB-BROADCAST-VA-WIDE is similar to this one, except
"KRN",19,588,1,12,0)
that it sends the message to all users.
"KRN",19,588,25)
ENT^XMGAPI3(.6)
"KRN",19,588,220)
XQSERVER^R^^N^Y^N
"KRN",19,588,"U")
SERVER / NOT FOR A MENU
"KRN",19,589,-1)
0^31
"KRN",19,589,0)
XMSUGGESTION^Suggestion Box^^R^^^^^^^^MAILMAN
"KRN",19,589,1,0)
^^11^11^2970730^^
"KRN",19,589,1,1,0)
Enables a user to send an anonymous message to the SUGGESTION BOX basket
"KRN",19,589,1,2,0)
of SHARED,MAIL.  If the basket does not exist, it will be created.
"KRN",19,589,1,3,0)

"KRN",19,589,1,4,0)
MailMan carefully fails to record the actual identity of the sender.
"KRN",19,589,1,5,0)

"KRN",19,589,1,6,0)
The option allows users to voice complaints and concerns anonymously.  
"KRN",19,589,1,7,0)
 
"KRN",19,589,1,8,0)
To use it, put the XMSUGGESTION option onto the appropriate menu.
"KRN",19,589,1,9,0)

"KRN",19,589,1,10,0)
To stop a particular user from using it, put a 'Reverse/negative Lock'
"KRN",19,589,1,11,0)
onto the XMSUGGESTION option and assign that key to the user.
"KRN",19,589,25)
SEND^XMJMSA
"KRN",19,589,"U")
SUGGESTION BOX
"KRN",19,590,-1)
0^42
"KRN",19,590,0)
XMYB-BROADCAST-VA-WIDE^Server / not for a menu^^S^^XMMGR^^^^^^MAILMAN
"KRN",19,590,1,0)
^^12^12^2971003^^^^
"KRN",19,590,1,1,0)
This option is set up as a server.  When a message is addressed to this
"KRN",19,590,1,2,0)
server (S.XMYB-BROADCAST-VA-WIDE), it runs routine ENT^XMGAPI3 to send
"KRN",19,590,1,3,0)
the message to all users.
"KRN",19,590,1,4,0)

"KRN",19,590,1,5,0)
The message is marked 'closed' (may not forward) and
"KRN",19,590,1,6,0)
'information only' (may not reply).
"KRN",19,590,1,7,0)

"KRN",19,590,1,8,0)
The message is marked with a vaporization date of 7 days from the date
"KRN",19,590,1,9,0)
of receipt.
"KRN",19,590,1,10,0)

"KRN",19,590,1,11,0)
Note that server XMR-BROADCAST-VA-WIDE is similar to this one, except
"KRN",19,590,1,12,0)
that it sends the message to SHARED,MAIL.
"KRN",19,590,25)
ENT^XMGAPI3("*")
"KRN",19,590,220)
^R^^N^Y^N
"KRN",19,590,"U")
SERVER / NOT FOR A MENU
"KRN",19,600,-1)
0^33
"KRN",19,600,0)
XMMGR-TERMINATE-ONE^Terminate one mail user^^R^^^^^^^^MAILMAN
"KRN",19,600,1,0)
^^18^18^2970516^^^^
"KRN",19,600,1,1,0)
This option lets you remove the mailbox of any user who meets the criteria of
"KRN",19,600,1,2,0)
either the XMMGR-TERMINATE-MANY option or the XMMGR-TERMINATE-SUGGEST option. 
"KRN",19,600,1,3,0)

"KRN",19,600,1,4,0)
Remove means:
"KRN",19,600,1,5,0)
- Delete user's private mail groups
"KRN",19,600,1,6,0)
- Remove user from membership in all groups
"KRN",19,600,1,7,0)
- Remove user as an authorized sender from all groups
"KRN",19,600,1,8,0)
- Remove user from anyone's list of surrogates
"KRN",19,600,1,9,0)
- Delete user's latered-messages list
"KRN",19,600,1,10,0)
- Delete user's mail box
"KRN",19,600,1,11,0)

"KRN",19,600,1,12,0)
As a result, the user will not receive any mail.
"KRN",19,600,1,13,0)

"KRN",19,600,1,14,0)
Remember,
"KRN",19,600,1,15,0)
- Whenever you give a user a new access code, the system gives the user a
"KRN",19,600,1,16,0)
mailbox if he doesn't already have one. 
"KRN",19,600,1,17,0)
- Whenever a user logs on, the system gives the user a mailbox if he doesn't
"KRN",19,600,1,18,0)
already have one. 
"KRN",19,600,25)
CHOOSE^XMUTERM
"KRN",19,600,"U")
TERMINATE ONE MAIL USER
"KRN",19,601,-1)
0^34
"KRN",19,601,0)
XMMGR-TERMINATE-MANY^Terminate many mail users^^R^^^^^^^^MAILMAN
"KRN",19,601,1,0)
^^30^30^2970516^^^^
"KRN",19,601,1,1,0)
This option goes through the MAIL BOX global and removes any mailbox if
"KRN",19,601,1,2,0)
- the user is not in the NEW PERSON file.
"KRN",19,601,1,3,0)
- the user has no access code and was not terminated.
"KRN",19,601,1,4,0)
- the user has no access code and was terminated w/o mailbox retention.
"KRN",19,601,1,5,0)
- the user has an access code and primary menu, but no verify code, AND
"KRN",19,601,1,6,0)
  - has never signed on, since being added before a cutoff date.
"KRN",19,601,1,7,0)
  OR
"KRN",19,601,1,8,0)
  - last signed on before a cutoff date.
"KRN",19,601,1,9,0)

"KRN",19,601,1,10,0)
Remove means:
"KRN",19,601,1,11,0)
- Delete user's private mail groups
"KRN",19,601,1,12,0)
- Remove user from membership in all groups
"KRN",19,601,1,13,0)
- Remove user as an authorized sender from all groups
"KRN",19,601,1,14,0)
- Remove user from anyone's list of surrogates
"KRN",19,601,1,15,0)
- Delete user's latered-messages list
"KRN",19,601,1,16,0)
- Delete user's mail box
"KRN",19,601,1,17,0)

"KRN",19,601,1,18,0)
As a result, the user will not receive any mail.
"KRN",19,601,1,19,0)

"KRN",19,601,1,20,0)
This option can be run in 'test' or 'real' mode.
"KRN",19,601,1,21,0)

"KRN",19,601,1,22,0)
The report lists, in DUZ order:
"KRN",19,601,1,23,0)
-The user's DUZ and name
"KRN",19,601,1,24,0)
-Whether the user has an access code, verify code, and primary menu
"KRN",19,601,1,25,0)
-When the user was added to the NEW PERSON file
"KRN",19,601,1,26,0)
-When the user last signed on
"KRN",19,601,1,27,0)
-When the user was terminated (if applicable)
"KRN",19,601,1,28,0)
-If the user was terminated, then whether the site manager chose to delete the
"KRN",19,601,1,29,0)
 user's mailbox.  (It's generally a good idea to go ahead and delete the
"KRN",19,601,1,30,0)
 mailbox upon termination.)
"KRN",19,601,25)
ALL1^XMUTERM
"KRN",19,601,"U")
TERMINATE MANY MAIL USERS
"KRN",19,602,-1)
0^35
"KRN",19,602,0)
XMMGR-TERMINATE-SUGGEST^Terminate mail user suggestions^^R^^^^^^^^MAILMAN
"KRN",19,602,1,0)
^^30^30^2970502^^^
"KRN",19,602,1,1,0)
This option goes through the MailBox global and reports on users who perhaps
"KRN",19,602,1,2,0)
should have their mail access terminated.
"KRN",19,602,1,3,0)

"KRN",19,602,1,4,0)
Users are included in the report if
"KRN",19,602,1,5,0)
- the user was terminated before a manager-supplied cutoff date
"KRN",19,602,1,6,0)
  and allowed to keep a mailbox.
"KRN",19,602,1,7,0)
- the user has an access code, verify code, and primary menu,
"KRN",19,602,1,8,0)
  but last signed on before a manager-supplied cutoff date.
"KRN",19,602,1,9,0)

"KRN",19,602,1,10,0)
This option does not terminate mail access.
"KRN",19,602,1,11,0)

"KRN",19,602,1,12,0)
The report page breaks on Service/Section and includes the following
"KRN",19,602,1,13,0)
information:
"KRN",19,602,1,14,0)

"KRN",19,602,1,15,0)
-User's DUZ and name
"KRN",19,602,1,16,0)
-Whether the user has an access code, a verify code, and a primary menu
"KRN",19,602,1,17,0)
-When the user last signed on
"KRN",19,602,1,18,0)
-When the user was terminated (if applicable)
"KRN",19,602,1,19,0)
-If the user was terminated, then whether the site manager chose to delete
"KRN",19,602,1,20,0)
 the user's mailbox.  (Remember, you should usually answer 'yes' to this
"KRN",19,602,1,21,0)
 question, unless the user is coming back and needs to have his mail retained.)
"KRN",19,602,1,22,0)
-How many new messages the user has.  (New messages are never purged, except
"KRN",19,602,1,23,0)
 during purge-by-date purges.)
"KRN",19,602,1,24,0)

"KRN",19,602,1,25,0)
Finally there are two blank columns.  One is headed "Term User Mbox" (Terminate
"KRN",19,602,1,26,0)
user mailbox), and the other is headed "Deact VISTA Access" (Deactivate VISTA
"KRN",19,602,1,27,0)
Access).  Besides being of interest to the Site Manager, this report is also
"KRN",19,602,1,28,0)
designed to be submitted to other services. The intent is that the other
"KRN",19,602,1,29,0)
services would check one of the columns for each user in the report and return
"KRN",19,602,1,30,0)
the report to the Site Manager to act on. 
"KRN",19,602,25)
ALL2^XMUTERM
"KRN",19,602,"U")
TERMINATE MAIL USER SUGGESTION
"KRN",19,603,-1)
0^36
"KRN",19,603,0)
XMMGR-PURGE-MESSAGE^Purge a message^^R^^^^^^^^MAILMAN
"KRN",19,603,1,0)
^^9^9^2970516^^
"KRN",19,603,1,1,0)
This option enables you to purge any message.
"KRN",19,603,1,2,0)

"KRN",19,603,1,3,0)
Purge means:
"KRN",19,603,1,4,0)
-delete the message from all user mailboxes
"KRN",19,603,1,5,0)
-delete the message from the MESSAGE global ^XMB(3.9
"KRN",19,603,1,6,0)
-delete all responses from the MESSAGE global ^XMB(3.9
"KRN",19,603,1,7,0)
-delete the message from the MESSAGES TO BE NEW AT A LATER DATE file ^XMB(3.73
"KRN",19,603,1,8,0)

"KRN",19,603,1,9,0)
Purge is not reversible.  The message is gone forever.
"KRN",19,603,25)
MESSAGE^XMUTERM
"KRN",19,603,"U")
PURGE A MESSAGE
"KRN",19,604,-1)
0^1
"KRN",19,604,0)
XM FILTER EDIT^Message Filter Edit^^R^^^^^^^^MAILMAN
"KRN",19,604,1,0)
^^24^24^2970730^^^
"KRN",19,604,1,1,0)
The filter is used by MailMan to determine into which basket to place a
"KRN",19,604,1,2,0)
message.
"KRN",19,604,1,3,0)

"KRN",19,604,1,4,0)
Messages can be filtered based on up to three criteria which are 'and'ed
"KRN",19,604,1,5,0)
together:
"KRN",19,604,1,6,0)
- Subject contains
"KRN",19,604,1,7,0)
- Message is from
"KRN",19,604,1,8,0)
- Message is to
"KRN",19,604,1,9,0)

"KRN",19,604,1,10,0)
For example, if you specify 'subject contains' and 'message is from', the
"KRN",19,604,1,11,0)
filter takes effect only if the subject contains the string you specify AND
"KRN",19,604,1,12,0)
the message is from the person you specify. 
"KRN",19,604,1,13,0)

"KRN",19,604,1,14,0)
If you wish the filter to take effect upon 'subject contains' OR 'message
"KRN",19,604,1,15,0)
is from' you must create two filters, one with 'subject contains', and the
"KRN",19,604,1,16,0)
other with 'message is from'.
"KRN",19,604,1,17,0)

"KRN",19,604,1,18,0)
Filtering takes place during message delivery and can also be selected as a
"KRN",19,604,1,19,0)
basket action. 
"KRN",19,604,1,20,0)

"KRN",19,604,1,21,0)
The filter is ignored during delivery under the following conditions:
"KRN",19,604,1,22,0)
- The message already exists in one of your baskets.
"KRN",19,604,1,23,0)
- The message is from you, and you specified a basket (other than the IN
"KRN",19,604,1,24,0)
basket) at the transmit prompt.
"KRN",19,604,25)
FILTER^XMVVITA
"KRN",19,604,"U")
MESSAGE FILTER EDIT
"KRN",19,605,-1)
0^2
"KRN",19,605,0)
XM PERSONAL MENU^Personal Preferences^^M^^^^^^^^MAILMAN
"KRN",19,605,1,0)
^^1^1^2990510^^^^
"KRN",19,605,1,1,0)
This menu accesses various options to let you configure MailMan to your liking.
"KRN",19,605,10,0)
^19.01IP^8^8
"KRN",19,605,10,1,0)
468^^1
"KRN",19,605,10,1,"^")
XMEDITUSER
"KRN",19,605,10,2,0)
470^^2
"KRN",19,605,10,2,"^")
XMBANNER
"KRN",19,605,10,3,0)
604^^4
"KRN",19,605,10,3,"^")
XM FILTER EDIT
"KRN",19,605,10,4,0)
522^^7
"KRN",19,605,10,4,"^")
XMEDITPERSGROUP
"KRN",19,605,10,5,0)
503^GML^6
"KRN",19,605,10,5,"^")
XMENROLL
"KRN",19,605,10,6,0)
547^^8
"KRN",19,605,10,6,"^")
XMEDITFWD
"KRN",19,605,10,7,0)
606^^3
"KRN",19,605,10,7,"^")
XMEDITSURR
"KRN",19,605,10,8,0)
647^^5
"KRN",19,605,10,8,"^")
XM DELIVERY BASKET EDIT
"KRN",19,605,99)
57838,34665
"KRN",19,605,"U")
PERSONAL PREFERENCES
"KRN",19,606,-1)
0^55
"KRN",19,606,0)
XMEDITSURR^Surrogate Edit^^R^^^^^^^^MAILMAN
"KRN",19,606,1,0)
^^3^3^2971126^
"KRN",19,606,1,1,0)
This option enables you to edit your surrogate list, that is,
"KRN",19,606,1,2,0)
to choose who may act as a surrogate for you in MailMan,
"KRN",19,606,1,3,0)
and which privileges (read and/or send) you wish to grant them.
"KRN",19,606,25)
SURR^XMVVITA
"KRN",19,606,"U")
SURROGATE EDIT
"KRN",19,647,-1)
0^58
"KRN",19,647,0)
XM DELIVERY BASKET EDIT^Delivery Basket Edit^^R^^^^^^^^MAILMAN
"KRN",19,647,1,0)
^^5^5^2980518^^
"KRN",19,647,1,1,0)
The sender of a message may specify the basket to which the message should
"KRN",19,647,1,2,0)
be delivered for all recipients.
"KRN",19,647,1,3,0)

"KRN",19,647,1,4,0)
Using this option, you indicate whether or not you accept such target
"KRN",19,647,1,5,0)
basket delivery, and if you do, to what degree you accept it.
"KRN",19,647,25)
BASKET^XMVVITA
"KRN",19,647,"U")
DELIVERY BASKET EDIT
"KRN",19,653,-1)
1^47
"KRN",19,653,0)
XMQDELETE
"KRN",19,654,-1)
1^48
"KRN",19,654,0)
XMDIE SERVER
"KRN",19,655,-1)
1^49
"KRN",19,655,0)
XMVSET
"KRN",19,656,-1)
1^50
"KRN",19,656,0)
XMVTEST
"KRN",19,657,-1)
1^59
"KRN",19,657,0)
XM-FEATURES NEW IN VERSION 3.1
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",1,9.2)
9.2;1;;;HELP^XPDTA1;HLPF1^XPDIA1;HLPE1^XPDIA1;HLPF2^XPDIA1;;HLPDEL^XPDIA1
"ORD",1,9.2,0)
HELP FRAME
"ORD",2,3.6)
3.6;2;1;;BUL^XPDTA1;;BULE1^XPDIA1;;;BULDEL^XPDIA1
"ORD",2,3.6,0)
BULLETIN
"ORD",4,.5)
.5;4;;;EDEOUT^DIFROMSO(.5,DA,"",XPDA);FPRE^DIFROMSI(.5,"",XPDA);EPRE^DIFROMSI(.5,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.5,DA,"",XPDA)
"ORD",4,.5,0)
FUNCTION
"ORD",9,.84)
.84;9;;;EDEOUT^DIFROMSO(.84,DA,"",XPDA);FPRE^DIFROMSI(.84,"",XPDA);EPRE^DIFROMSI(.84,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.84,DA,"",XPDA);DEL^DIFROMSK(.84,"",%)
"ORD",9,.84,0)
DIALOG
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",8,-1)
1^1
"PKG",8,0)
MAILMAN^XM^Electronic Mail, both local and networked
"PKG",8,20,0)
^9.402P^^
"PKG",8,22,0)
^9.49I^1^1
"PKG",8,22,1,0)
7.1^2940602^2951128
"PKG",8,22,1,"PAH",1,0)
50^2990824^3
"PKG",8,22,1,"PAH",1,1,0)
^^1001^1001^2990824
"PKG",8,22,1,"PAH",1,1,1,0)
Patch XM*7.1*50.  The BIG patch!  It is important that you read this patch
"PKG",8,22,1,"PAH",1,1,2,0)
description and follow the install instructions.
"PKG",8,22,1,"PAH",1,1,3,0)

"PKG",8,22,1,"PAH",1,1,4,0)
Test Sites:  FORUM.VA.GOV; GATEWAY.FORUM.VA.GOV; Indianapolis, IN;
"PKG",8,22,1,"PAH",1,1,5,0)
             Montana HCS, MT; San Francisco, CA; SAIC Corp.;
"PKG",8,22,1,"PAH",1,1,6,0)
             German Heart Institute, Berlin, Germany; San Francisco CIOFO
"PKG",8,22,1,"PAH",1,1,7,0)

"PKG",8,22,1,"PAH",1,1,8,0)
The changes included in this patch are so extensive, that several of the
"PKG",8,22,1,"PAH",1,1,9,0)
MailMan manuals have been rewritten.  The full patch description and the
"PKG",8,22,1,"PAH",1,1,10,0)
new manuals are in PDF documents on the infrastructure web site at:
"PKG",8,22,1,"PAH",1,1,11,0)
http://www.vista.med.va.gov/
"PKG",8,22,1,"PAH",1,1,12,0)
softserv/infrastr.uct/notebook/active/xm_patch_50_notebook.htm
"PKG",8,22,1,"PAH",1,1,13,0)
- XM*7.1*50 Patch Description
"PKG",8,22,1,"PAH",1,1,14,0)
- MailMan V.7.1 & XM*7.1*50 Release Notes
"PKG",8,22,1,"PAH",1,1,15,0)
- MailMan V.7.1 & XM*7.1*50 Getting Started
"PKG",8,22,1,"PAH",1,1,16,0)
- MailMan V.7.1 & XM*7.1*50 User Manual
"PKG",8,22,1,"PAH",1,1,17,0)
- MailMan V.7.1 & XM*7.1*50 Programmer Manual
"PKG",8,22,1,"PAH",1,1,18,0)
- MailMan V.7.1 & XM*7.1*50 Technical Manual
"PKG",8,22,1,"PAH",1,1,19,0)

"PKG",8,22,1,"PAH",1,1,20,0)
Highlights of the patch:
"PKG",8,22,1,"PAH",1,1,21,0)
- Addresses 54 distinct NOIS and 40 distinct E3R.
"PKG",8,22,1,"PAH",1,1,22,0)
- For those sites requesting it, performs, along with follow-on patch
"PKG",8,22,1,"PAH",1,1,23,0)
  XM*7.1*51, automatic domain name change from .VA.GOV to .MED.VA.GOV, as
"PKG",8,22,1,"PAH",1,1,24,0)
  well as domain rename. This patch adds the new domain names as synonyms to
"PKG",8,22,1,"PAH",1,1,25,0)
  the current domain names.  XM*7.1*51 will actually change the domain names.
"PKG",8,22,1,"PAH",1,1,26,0)
  (XM*7.1*51 will be released after all sites have installed XM*7.1*50.)
"PKG",8,22,1,"PAH",1,1,27,0)
- Adds many new APIs.
"PKG",8,22,1,"PAH",1,1,28,0)
- Replaces the old user help frames with an entire new set of help frames.
"PKG",8,22,1,"PAH",1,1,29,0)
  (The IRM help frames have not been updated.)
"PKG",8,22,1,"PAH",1,1,30,0)
- Makes many changes to the MailMan DDs.
"PKG",8,22,1,"PAH",1,1,31,0)
- Renames file 3.7 from MAIL BOX to MAILBOX.
"PKG",8,22,1,"PAH",1,1,32,0)
- Renames file 4.3 from KERNEL SITE PARAMETERS to MAILMAN SITE PARAMETERS.
"PKG",8,22,1,"PAH",1,1,33,0)
- Improves global integrity checker.
"PKG",8,22,1,"PAH",1,1,34,0)
- Improves message search.
"PKG",8,22,1,"PAH",1,1,35,0)
- Insists that users must have a mailbox and an access code in order to
"PKG",8,22,1,"PAH",1,1,36,0)
  receive messages.  This is to ensure that messages do not accumulate in
"PKG",8,22,1,"PAH",1,1,37,0)
  inactive mailboxes, never to be deleted.  It is very important that any
"PKG",8,22,1,"PAH",1,1,38,0)
  ficticious user be properly set up so that mail deliveries to these users
"PKG",8,22,1,"PAH",1,1,39,0)
  are not stopped.
"PKG",8,22,1,"PAH",1,1,40,0)
- Implements message filtering.
"PKG",8,22,1,"PAH",1,1,41,0)
- Improves local message delivery system.
"PKG",8,22,1,"PAH",1,1,42,0)
- Adds 'full screen' user interface for managing and reading messages.
"PKG",8,22,1,"PAH",1,1,43,0)
- Rewrites 'classic' user interface to improve maintainability.
"PKG",8,22,1,"PAH",1,1,44,0)
- Most ^XMA* routines have been superseded by other routines.
"PKG",8,22,1,"PAH",1,1,45,0)
- (new) ^XMJ* routines comprise the user interface.
"PKG",8,22,1,"PAH",1,1,46,0)
- (new) ^XMK* routines perform message posting.
"PKG",8,22,1,"PAH",1,1,47,0)
- (new) ^XMT* routines perform message delivery.
"PKG",8,22,1,"PAH",1,1,48,0)
- (new) ^XMX* routines comprise the APIs.
"PKG",8,22,1,"PAH",1,1,49,0)
- (new) ^XMV* routines comprise user identity.
"PKG",8,22,1,"PAH",1,1,50,0)
- ^XMR* has been rewritten.
"PKG",8,22,1,"PAH",1,1,51,0)
- Improves the remote message xref, ^XMBX(3.9,"AI", by enabling it to handle
"PKG",8,22,1,"PAH",1,1,52,0)
longer message IDs.  Specifically, the xref has changed
"PKG",8,22,1,"PAH",1,1,53,0)
from: ^XMBX(3.9,"AI",site@msgid,xmz)=fm date/time
"PKG",8,22,1,"PAH",1,1,54,0)
to:   ^XMBX(3.9,"AI",site,msgid,xmz)=fm date 
"PKG",8,22,1,"PAH",1,1,55,0)
The post-init will reconfigure the xref.  (This could take anywhere from 1/2
"PKG",8,22,1,"PAH",1,1,56,0)
hour to several hours, depending on how large the global is.)  Here's a tip:
"PKG",8,22,1,"PAH",1,1,57,0)
You can cut down the time that this will take by running option
"PKG",8,22,1,"PAH",1,1,58,0)
XMMGR-PURGE-AI-XREF (AI x-Ref Purge of Received Network Messages)
"PKG",8,22,1,"PAH",1,1,59,0)
prior to installing this patch.  This will reduce the number of xrefs in the
"PKG",8,22,1,"PAH",1,1,60,0)
AI xref global.
"PKG",8,22,1,"PAH",1,1,61,0)
- Enables message number recycling.  To do this,
"PKG",8,22,1,"PAH",1,1,62,0)
--A new field (17.1, MAX DIGITS FOR MESSAGE NUMBER) has been added to file
"PKG",8,22,1,"PAH",1,1,63,0)
4.3, to let each site decide how large the numbers may get before they
"PKG",8,22,1,"PAH",1,1,64,0)
recycle and start again (from 100000).  The post-init will set it to
"PKG",8,22,1,"PAH",1,1,65,0)
the maximum length of your site's existing message numbers.  (If it's less
"PKG",8,22,1,"PAH",1,1,66,0)
than 7, it will be set to 7.  If it's greater than 14, it will be set to 14.)
"PKG",8,22,1,"PAH",1,1,67,0)
You may change it afterward.
"PKG",8,22,1,"PAH",1,1,68,0)
--A new field (31, LOCAL CREATE DATE) has been added to file 3.9.  The post-
"PKG",8,22,1,"PAH",1,1,69,0)
init will go through the file 3.9, populate the new field with the date
"PKG",8,22,1,"PAH",1,1,70,0)
the message was sent, and create the new "C" xref.  (This will take about
"PKG",8,22,1,"PAH",1,1,71,0)
1 hour per 200,000 messages.)  Here's a tip:
"PKG",8,22,1,"PAH",1,1,72,0)
You can cut down the time that this will take by running option
"PKG",8,22,1,"PAH",1,1,73,0)
XMPURGE-BY-DATE (Purge Messages by Origination Date)
"PKG",8,22,1,"PAH",1,1,74,0)
and XMAUTOPURGE (Automatic Purge of MailMan Messages)
"PKG",8,22,1,"PAH",1,1,75,0)
prior to installing this patch.  This will reduce the number of messages
"PKG",8,22,1,"PAH",1,1,76,0)
in file 3.9.
"PKG",8,22,1,"PAH",1,1,77,0)
--The message purge processes have been changed to operate off LOCAL
"PKG",8,22,1,"PAH",1,1,78,0)
CREATE DATE.  The date purge routine is now much faster, since it has an
"PKG",8,22,1,"PAH",1,1,79,0)
appropriate xref to work with.  The weekday unreferenced messages purge can
"PKG",8,22,1,"PAH",1,1,80,0)
focus better and thus be more efficient.
"PKG",8,22,1,"PAH",1,1,81,0)
--Other fields have changed their focus from message number to the LOCAL
"PKG",8,22,1,"PAH",1,1,82,0)
CREATE DATE:
"PKG",8,22,1,"PAH",1,1,83,0)
File 3.7, MailBox:
"PKG",8,22,1,"PAH",1,1,84,0)
3.7,1.2   MESSAGE @ REINSTATEMENT becomes DATE @ REINSTATEMENT (The post-
"PKG",8,22,1,"PAH",1,1,85,0)
init will change any existing message numbers in this field to their equiv-
"PKG",8,22,1,"PAH",1,1,86,0)
alent dates.
"PKG",8,22,1,"PAH",1,1,87,0)
File 4.3, MailMan Site Parameters:
"PKG",8,22,1,"PAH",1,1,88,0)
4.3,4.301 NO-PURGE MESSAGES BUFFER becomes NO-PURGE DAYS BUFFER (The post-
"PKG",8,22,1,"PAH",1,1,89,0)
init will set this field to null, which defaults to 2 days.  You may change
"PKG",8,22,1,"PAH",1,1,90,0)
it afterward.
"PKG",8,22,1,"PAH",1,1,91,0)
4.302,3   FIRST MESSAGE TO PROCESS  becomes START PURGE DATE
"PKG",8,22,1,"PAH",1,1,92,0)
4.302,4   LAST MESSAGE TO PROCESS   becomes STOP PURGE DATE
"PKG",8,22,1,"PAH",1,1,93,0)
4.302,8   LAST MESSAGE PROCESSED    becomes LAST DATE PROCESSED
"PKG",8,22,1,"PAH",1,1,94,0)
4.3,4.304 WEEKDAY MESSAGES TO PURGE becomes WEEKDAY DAYS TO PURGE (Any value
"PKG",8,22,1,"PAH",1,1,95,0)
your site has in this field will be changed by the post-init from number of
"PKG",8,22,1,"PAH",1,1,96,0)
messages to the equivalent number of days.  You may change it afterward.)
"PKG",8,22,1,"PAH",1,1,97,0)
4.3,142   NO-PURGE DAYS BUFFER      becomes NO-PURGE DAYS BUFFER (LOCAL)
"PKG",8,22,1,"PAH",1,1,98,0)

"PKG",8,22,1,"PAH",1,1,99,0)
NOTES:
"PKG",8,22,1,"PAH",1,1,100,0)
a. This patch should be installed after hours, when user activity is at a
"PKG",8,22,1,"PAH",1,1,101,0)
minimum.  It should not be queued, because TaskMan should not be running.
"PKG",8,22,1,"PAH",1,1,102,0)
b. This patch requires Kernel patches XU*8.0*67, XU*8.0*112, and XU*8.0*113.
"PKG",8,22,1,"PAH",1,1,103,0)
c. For any site running MAS (all VAMCs), this patch requires FileMan patch
"PKG",8,22,1,"PAH",1,1,104,0)
DI*22.0*1.  Caution: KIDS will not check for this patch because not all
"PKG",8,22,1,"PAH",1,1,105,0)
sites run MAS.  It is up to each site running MAS to check for DI*22.0*1.
"PKG",8,22,1,"PAH",1,1,106,0)
d. All MailMan users, including fictitious users, must have an access code,
"PKG",8,22,1,"PAH",1,1,107,0)
or they will no longer receive mail.
"PKG",8,22,1,"PAH",1,1,108,0)
e. To shorten installation time, which runs about 1 hour per 200,000 messages
"PKG",8,22,1,"PAH",1,1,109,0)
in file 3.9, you might consider running the message purges the day before
"PKG",8,22,1,"PAH",1,1,110,0)
the installation:
"PKG",8,22,1,"PAH",1,1,111,0)
- XMMGR-PURGE-AI-XREF (AI x-Ref Purge of Received Network Messages)
"PKG",8,22,1,"PAH",1,1,112,0)
- XMPURGE-BY-DATE (Purge Messages by Origination Date)
"PKG",8,22,1,"PAH",1,1,113,0)
- XMAUTOPURGE (Automatic Purge of MailMan Messages)
"PKG",8,22,1,"PAH",1,1,114,0)
f. DSM sites running SlotMaster may see routine mapping problems with ZSLOT
"PKG",8,22,1,"PAH",1,1,115,0)
users, even after disabling mapping.  Therefore, such sites should consider
"PKG",8,22,1,"PAH",1,1,116,0)
the following steps:
"PKG",8,22,1,"PAH",1,1,117,0)
- Shutdown ZSLOT on all nodes.
"PKG",8,22,1,"PAH",1,1,118,0)
- Disable all mapped XM routines.
"PKG",8,22,1,"PAH",1,1,119,0)
- Load this patch.
"PKG",8,22,1,"PAH",1,1,120,0)
- Enter manual edits.
"PKG",8,22,1,"PAH",1,1,121,0)
- Rebuild mapped routine sets.
"PKG",8,22,1,"PAH",1,1,122,0)
- Shutdown/restart all DSM configurations.
"PKG",8,22,1,"PAH",1,1,123,0)
An alternative to the above steps is to disable all mapped XM routines about
"PKG",8,22,1,"PAH",1,1,124,0)
a week before you load this patch.  That way you wouldn't need to shutdown
"PKG",8,22,1,"PAH",1,1,125,0)
ZSLOT or shutdown/restart DSM configurations.
"PKG",8,22,1,"PAH",1,1,126,0)
g. If your site is running POP3, you should immediately load patch XM*7.1*71
"PKG",8,22,1,"PAH",1,1,127,0)
after installing this patch.
"PKG",8,22,1,"PAH",1,1,128,0)
============================================================================ 
"PKG",8,22,1,"PAH",1,1,129,0)
  
"PKG",8,22,1,"PAH",1,1,130,0)
This patch deletes the following routines:
"PKG",8,22,1,"PAH",1,1,131,0)
XMZTERM      (replaced by XMUTERM in this patch)
"PKG",8,22,1,"PAH",1,1,132,0)
XMZTERM1     (replaced by XMUTERM1 in this patch)
"PKG",8,22,1,"PAH",1,1,133,0)

"PKG",8,22,1,"PAH",1,1,134,0)
ROUTINES:
"PKG",8,22,1,"PAH",1,1,135,0)
The second line of the routine now looks like:
"PKG",8,22,1,"PAH",1,1,136,0)
       ;;7.1;MailMan;**[patch list]**;Jun 02, 1994
"PKG",8,22,1,"PAH",1,1,137,0)
 
"PKG",8,22,1,"PAH",1,1,138,0)
              Before          After
"PKG",8,22,1,"PAH",1,1,139,0)
Name          Checksum        Checksum        Patch List
"PKG",8,22,1,"PAH",1,1,140,0)
----------------------------------------------------------
"PKG",8,22,1,"PAH",1,1,141,0)
XM             4976038        11416143        17,35,50
"PKG",8,22,1,"PAH",1,1,142,0)
XM0            3346676             580        4,42,50
"PKG",8,22,1,"PAH",1,1,143,0)
XMA           11666053           79959        4,18,50
"PKG",8,22,1,"PAH",1,1,144,0)
XMA0          10480365          573755        15,36,50
"PKG",8,22,1,"PAH",1,1,145,0)
XMA01          2847569            1068        36,50
"PKG",8,22,1,"PAH",1,1,146,0)
XMA02          6053078             879        4,5,50
"PKG",8,22,1,"PAH",1,1,147,0)
XMA03          7773789           66257        50
"PKG",8,22,1,"PAH",1,1,148,0)
XMA0A          6404929            1148        7,16,50
"PKG",8,22,1,"PAH",1,1,149,0)
XMA1           9717771             827        31,36,40,50
"PKG",8,22,1,"PAH",1,1,150,0)
XMA10          5587620            1067        50
"PKG",8,22,1,"PAH",1,1,151,0)
XMA11         11668318           19543        50
"PKG",8,22,1,"PAH",1,1,152,0)
XMA11A         6856608          291270        50
"PKG",8,22,1,"PAH",1,1,153,0)
XMA11B         3593034            1468        39,50
"PKG",8,22,1,"PAH",1,1,154,0)
XMA1A          3777724            1152        50
"PKG",8,22,1,"PAH",1,1,155,0)
XMA1B          7260820          705206        50
"PKG",8,22,1,"PAH",1,1,156,0)
XMA1C          1474193           99629        50
"PKG",8,22,1,"PAH",1,1,157,0)
XMA1E          1530615            1172        50
"PKG",8,22,1,"PAH",1,1,158,0)
XMA2          10059315         1214246        5,6,10,15,39,50
"PKG",8,22,1,"PAH",1,1,159,0)
XMA20          4266922            1071        50
"PKG",8,22,1,"PAH",1,1,160,0)
XMA21         11321545         1920696        4,31,50
"PKG",8,22,1,"PAH",1,1,161,0)
XMA210         1920955            1364        31,50
"PKG",8,22,1,"PAH",1,1,162,0)
XMA21A         7475211            1466        4,30,36,50
"PKG",8,22,1,"PAH",1,1,163,0)
XMA21B         3903898            1472        50
"PKG",8,22,1,"PAH",1,1,164,0)
XMA21FWD        406565            2649        50
"PKG",8,22,1,"PAH",1,1,165,0)
XMA21G        11358760            1502        31,36,65,50
"PKG",8,22,1,"PAH",1,1,166,0)
XMA22          7780497             887        50
"PKG",8,22,1,"PAH",1,1,167,0)
XMA24         10721719            1091        31,50
"PKG",8,22,1,"PAH",1,1,168,0)
XMA25          5071849            1096        50
"PKG",8,22,1,"PAH",1,1,169,0)
XMA2B          4986311         4956922        50
"PKG",8,22,1,"PAH",1,1,170,0)
XMA2C          4163417            1166        46,53,50
"PKG",8,22,1,"PAH",1,1,171,0)
XMA2C0         9088344            1454        24,27,50
"PKG",8,22,1,"PAH",1,1,172,0)
XMA2R          4793721         3427633        27,50
"PKG",8,22,1,"PAH",1,1,173,0)
XMA3          14700672        17147624        37,54,69,50
"PKG",8,22,1,"PAH",1,1,174,0)
XMA30          7561526         7080895        37,50
"PKG",8,22,1,"PAH",1,1,175,0)
XMA32         12437801         6537619        37,50
"PKG",8,22,1,"PAH",1,1,176,0)
XMA32A        10902381         9900106        27,37,44,55,50
"PKG",8,22,1,"PAH",1,1,177,0)
XMA4           1695677             839        50
"PKG",8,22,1,"PAH",1,1,178,0)
XMA5          11192062             843        31,45,50
"PKG",8,22,1,"PAH",1,1,179,0)
XMA50          4115522            1083        50
"PKG",8,22,1,"PAH",1,1,180,0)
XMA51          3840890            1088        50
"PKG",8,22,1,"PAH",1,1,181,0)
XMA5A         13683319            1168        31,36,50
"PKG",8,22,1,"PAH",1,1,182,0)
XMA6            986923             847        50
"PKG",8,22,1,"PAH",1,1,183,0)
XMA7          10080629           16522        10,47,50
"PKG",8,22,1,"PAH",1,1,184,0)
XMA7G          5211523            1206        36,50
"PKG",8,22,1,"PAH",1,1,185,0)
XMA7G1         1193700            1500        24,50
"PKG",8,22,1,"PAH",1,1,186,0)
XMAD0           481945            1143        50
"PKG",8,22,1,"PAH",1,1,187,0)
XMAD1          7275936            1148        24,27,36,50
"PKG",8,22,1,"PAH",1,1,188,0)
XMAD1A         7330837            1538        36,70,50
"PKG",8,22,1,"PAH",1,1,189,0)
XMAD1X         3265319            1676        50
"PKG",8,22,1,"PAH",1,1,190,0)
XMAD2          2503657          208202        31,50
"PKG",8,22,1,"PAH",1,1,191,0)
XMADA             1034            1034        50
"PKG",8,22,1,"PAH",1,1,192,0)
XMADDOC           1992            1992        50
"PKG",8,22,1,"PAH",1,1,193,0)
XMADDOC1       4357710            2578        50
"PKG",8,22,1,"PAH",1,1,194,0)
XMADDOC2          3589            2392        50
"PKG",8,22,1,"PAH",1,1,195,0)
XMADGO         2112000           10833        5,27,50
"PKG",8,22,1,"PAH",1,1,196,0)
XMADGO1         788007            2075        50
"PKG",8,22,1,"PAH",1,1,197,0)
XMADJ999        419074            2470        50
"PKG",8,22,1,"PAH",1,1,198,0)
XMADJF0        5354543            2029        50
"PKG",8,22,1,"PAH",1,1,199,0)
XMADJF1        9044468            2036        44,52,67,50
"PKG",8,22,1,"PAH",1,1,200,0)
XMADJF1A        912544            2556        50
"PKG",8,22,1,"PAH",1,1,201,0)
XMADJF1B       4754529            2564        10,16,37,50
"PKG",8,22,1,"PAH",1,1,202,0)
XMAH           5026238         1544316        5,16,50
"PKG",8,22,1,"PAH",1,1,203,0)
XMAH0          1761641            1159        36,50
"PKG",8,22,1,"PAH",1,1,204,0)
XMAH1          8757966         2172709        4,50
"PKG",8,22,1,"PAH",1,1,205,0)
XMAI           4557700             923        50
"PKG",8,22,1,"PAH",1,1,206,0)
XMAI0          1750753            1163        50
"PKG",8,22,1,"PAH",1,1,207,0)
XMAI1          8026797            1168        43,50
"PKG",8,22,1,"PAH",1,1,208,0)
XMAI2          1510945         3037343        36,50
"PKG",8,22,1,"PAH",1,1,209,0)
XMAK           4457158             737        50
"PKG",8,22,1,"PAH",1,1,210,0)
XMAL0          7710735            1175        50
"PKG",8,22,1,"PAH",1,1,211,0)
XMAL0A         7458546            1565        50
"PKG",8,22,1,"PAH",1,1,212,0)
XMANON          836515            1806        7,50
"PKG",8,22,1,"PAH",1,1,213,0)
XMAP           8826127             951        24,36,50
"PKG",8,22,1,"PAH",1,1,214,0)
XMAP0          4991024            1191        27,50
"PKG",8,22,1,"PAH",1,1,215,0)
XMAP1          3005830            1196        50
"PKG",8,22,1,"PAH",1,1,216,0)
XMAPHOST       6157206         9890299        7,14,27,36,50
"PKG",8,22,1,"PAH",1,1,217,0)
XMASEC         4454626           46560        33,50
"PKG",8,22,1,"PAH",1,1,218,0)
XMB            7258608         4363515        3,7,24,26,27,50
"PKG",8,22,1,"PAH",1,1,219,0)
XMB1           8930890             830        31,50
"PKG",8,22,1,"PAH",1,1,220,0)
XMBGRP         8013060         8135589        13,36,56,50
"PKG",8,22,1,"PAH",1,1,221,0)
XMBPOST        9856673         9626449        4,13,23,24,27,38,50
"PKG",8,22,1,"PAH",1,1,222,0)
XMC            4113929         3216956        13,50
"PKG",8,22,1,"PAH",1,1,223,0)
XMC1           6875049         7147079        4,13,20,27,50
"PKG",8,22,1,"PAH",1,1,224,0)
XMC11         11677623        11806932        50
"PKG",8,22,1,"PAH",1,1,225,0)
XMC11A         3517372         4391366        27,50
"PKG",8,22,1,"PAH",1,1,226,0)
XMC2          12142809        12105966        13,23,27,50
"PKG",8,22,1,"PAH",1,1,227,0)
XMC3           5809172         5862128        20,50
"PKG",8,22,1,"PAH",1,1,228,0)
XMC4           5412826          991572        50
"PKG",8,22,1,"PAH",1,1,229,0)
XMCD           5190692         5277071        50
"PKG",8,22,1,"PAH",1,1,230,0)
XMCTLK         9708749         9742452        10,27,50
"PKG",8,22,1,"PAH",1,1,231,0)
XMD            4879878         6535767        33,50
"PKG",8,22,1,"PAH",1,1,232,0)
XMDF           1706479         1431567        50
"PKG",8,22,1,"PAH",1,1,233,0)
XMDIRQST       7236196         7357280        9,50
"PKG",8,22,1,"PAH",1,1,234,0)
XMDIRRCV       1909690         1913144        37,50
"PKG",8,22,1,"PAH",1,1,235,0)
XMDIRSND       1583505         1897078        37,50
"PKG",8,22,1,"PAH",1,1,236,0)
XME           10528702             643        50
"PKG",8,22,1,"PAH",1,1,237,0)
XME1           8041932             839        50
"PKG",8,22,1,"PAH",1,1,238,0)
XMFAX          4957190         4921115        36,50
"PKG",8,22,1,"PAH",1,1,239,0)
XMGAPI2        3885152         3885630        41,50
"PKG",8,22,1,"PAH",1,1,240,0)
XMGAPI3        3505605         2171233        29,44,67,50
"PKG",8,22,1,"PAH",1,1,241,0)
XMGAPI4        3952807         4204061        50
"PKG",8,22,1,"PAH",1,1,242,0)
XMHIG          4741088         5360885        45,50
"PKG",8,22,1,"PAH",1,1,243,0)
XMHIU          * New *         5960638        50
"PKG",8,22,1,"PAH",1,1,244,0)
XMJBL          * New *         4523065        50
"PKG",8,22,1,"PAH",1,1,245,0)
XMJBM          * New *        12165199        50
"PKG",8,22,1,"PAH",1,1,246,0)
XMJBM1         * New *         4157424        50
"PKG",8,22,1,"PAH",1,1,247,0)
XMJBN          * New *        10185228        50
"PKG",8,22,1,"PAH",1,1,248,0)
XMJBU          * New *         1507122        50
"PKG",8,22,1,"PAH",1,1,249,0)
XMJDIR         * New *         2003843        50
"PKG",8,22,1,"PAH",1,1,250,0)
XMJERR         * New *          454500        50
"PKG",8,22,1,"PAH",1,1,251,0)
XMJMA          * New *         2991838        50
"PKG",8,22,1,"PAH",1,1,252,0)
XMJMBULL       * New *         1365629        50
"PKG",8,22,1,"PAH",1,1,253,0)
XMJMC          * New *         8169036        50
"PKG",8,22,1,"PAH",1,1,254,0)
XMJMCODE       * New *        11042686        50
"PKG",8,22,1,"PAH",1,1,255,0)
XMJMD          * New *         7370754        50
"PKG",8,22,1,"PAH",1,1,256,0)
XMJMF          * New *        18005162        50
"PKG",8,22,1,"PAH",1,1,257,0)
XMJMFA         * New *         6204287        50
"PKG",8,22,1,"PAH",1,1,258,0)
XMJMFB         * New *        15137131        50
"PKG",8,22,1,"PAH",1,1,259,0)
XMJML          * New *        11033330        50
"PKG",8,22,1,"PAH",1,1,260,0)
XMJMLN         * New *        13240819        50
"PKG",8,22,1,"PAH",1,1,261,0)
XMJMLR         * New *        13545823        50
"PKG",8,22,1,"PAH",1,1,262,0)
XMJMLR1        * New *         6523962        50
"PKG",8,22,1,"PAH",1,1,263,0)
XMJMOI         * New *        16872170        50
"PKG",8,22,1,"PAH",1,1,264,0)
XMJMOIE        * New *         4582157        50
"PKG",8,22,1,"PAH",1,1,265,0)
XMJMOR         * New *        14242356        50
"PKG",8,22,1,"PAH",1,1,266,0)
XMJMORX        * New *        14790879        50
"PKG",8,22,1,"PAH",1,1,267,0)
XMJMORX1       * New *         2472219        50
"PKG",8,22,1,"PAH",1,1,268,0)
XMJMP          * New *        16472134        50
"PKG",8,22,1,"PAH",1,1,269,0)
XMJMP1        11388791        14179283        40,50
"PKG",8,22,1,"PAH",1,1,270,0)
XMJMQ         15192669        16189088        40,57,70,50
"PKG",8,22,1,"PAH",1,1,271,0)
XMJMQ1         3291603         3608941        40,50
"PKG",8,22,1,"PAH",1,1,272,0)
XMJMR          * New *        18651915        50
"PKG",8,22,1,"PAH",1,1,273,0)
XMJMRO         * New *         2449032        50
"PKG",8,22,1,"PAH",1,1,274,0)
XMJMS          * New *         6092728        50
"PKG",8,22,1,"PAH",1,1,275,0)
XMJMSA         * New *         1939332        50
"PKG",8,22,1,"PAH",1,1,276,0)
XMJMSO         * New *        12952439        50
"PKG",8,22,1,"PAH",1,1,277,0)
XMJMT          * New *        10637487        50
"PKG",8,22,1,"PAH",1,1,278,0)
XMKP           * New *        15443979        50
"PKG",8,22,1,"PAH",1,1,279,0)
XMKPL          * New *         2060011        50
"PKG",8,22,1,"PAH",1,1,280,0)
XMKPLQ         * New *         9249196        50
"PKG",8,22,1,"PAH",1,1,281,0)
XMKPO          * New *         2606344        50
"PKG",8,22,1,"PAH",1,1,282,0)
XMP            8440919         8546955        4,24,50
"PKG",8,22,1,"PAH",1,1,283,0)
XMP2A         10037244        10101095        24,42,50
"PKG",8,22,1,"PAH",1,1,284,0)
XMP3           7025241         6844934        24,50
"PKG",8,22,1,"PAH",1,1,285,0)
XMPC           5263348         5352206        50
"PKG",8,22,1,"PAH",1,1,286,0)
XMPG           4354526         4353568        50
"PKG",8,22,1,"PAH",1,1,287,0)
XMPH           4842981         3963996        34,50
"PKG",8,22,1,"PAH",1,1,288,0)
XMPSEC         5817282         7152889        50
"PKG",8,22,1,"PAH",1,1,289,0)
XMR            6901880        14031423        30,34,65,50
"PKG",8,22,1,"PAH",1,1,290,0)
XMR0           8606729             874        27,50
"PKG",8,22,1,"PAH",1,1,291,0)
XMR0A          3476739         2289812        27,50
"PKG",8,22,1,"PAH",1,1,292,0)
XMR0B          9564128         8875848        4,6,13,34,42,62,50
"PKG",8,22,1,"PAH",1,1,293,0)
XMR0BLOB       5117794         4867143        50
"PKG",8,22,1,"PAH",1,1,294,0)
XMR1           7053085        13292215        7,50
"PKG",8,22,1,"PAH",1,1,295,0)
   (Cache' sites may have a different 'before' checksum and)
"PKG",8,22,1,"PAH",1,1,296,0)
   (patch list for XMR1.  Please disregard the differences.)
"PKG",8,22,1,"PAH",1,1,297,0)
XMR1A          6979581         3017305        13,36,50
"PKG",8,22,1,"PAH",1,1,298,0)
XMR2           7882048         6207716        50
"PKG",8,22,1,"PAH",1,1,299,0)
XMRENT         2303842         2263450        31,50
"PKG",8,22,1,"PAH",1,1,300,0)
XMRMSM          326967          339884        61,50
"PKG",8,22,1,"PAH",1,1,301,0)
XMRONT          598867          621984        61,50
"PKG",8,22,1,"PAH",1,1,302,0)
XMRPCTS0       5929098         6262116        6,12,31,55,50
"PKG",8,22,1,"PAH",1,1,303,0)
XMRPCTS1       6929051         5691788        6,50
"PKG",8,22,1,"PAH",1,1,304,0)
   (Your XMRPCTS1 'before' checksum may be)
"PKG",8,22,1,"PAH",1,1,305,0)
   (different, because of your TWIX info. )
"PKG",8,22,1,"PAH",1,1,306,0)
XMRPCTSA       3490824         3495721        6,31,61,50
"PKG",8,22,1,"PAH",1,1,307,0)
XMRTCP         4812676         4798863        8,25,27,50
"PKG",8,22,1,"PAH",1,1,308,0)
XMRUCX          357201          841742        27,34,50
"PKG",8,22,1,"PAH",1,1,309,0)
XMS            5835931         5837542        8,20,34,48,50
"PKG",8,22,1,"PAH",1,1,310,0)
XMS0           9233148         9308250        13,8,20,23,27,34,55,50
"PKG",8,22,1,"PAH",1,1,311,0)
XMS0A          8144942         9199959        2,13,55,50
"PKG",8,22,1,"PAH",1,1,312,0)
XMS0BLOB       6815258         6975716        50
"PKG",8,22,1,"PAH",1,1,313,0)
XMS1           7375190         1321634        13,8,23,50
"PKG",8,22,1,"PAH",1,1,314,0)
XMS2           1293876             885        50
"PKG",8,22,1,"PAH",1,1,315,0)
XMS3          13059868        12996474        22,50
"PKG",8,22,1,"PAH",1,1,316,0)
XMS4           3616422         2836511        50
"PKG",8,22,1,"PAH",1,1,317,0)
XMS5          12421886        13329767        13,8,23,27,55,58,50
"PKG",8,22,1,"PAH",1,1,318,0)
XMS5A          3624422         3571279        55,50
"PKG",8,22,1,"PAH",1,1,319,0)
XMSERR         3651687         3280474        32,50
"PKG",8,22,1,"PAH",1,1,320,0)
XMSM          10210546         7239792        4,6,13,20,50
"PKG",8,22,1,"PAH",1,1,321,0)
XMSM1          1692536            1238        50
"PKG",8,22,1,"PAH",1,1,322,0)
XMSMAIL        5893340         4937839        59,50
"PKG",8,22,1,"PAH",1,1,323,0)
XMTDF          * New *         3998255        50
"PKG",8,22,1,"PAH",1,1,324,0)
XMTDL          * New *        18249122        50
"PKG",8,22,1,"PAH",1,1,325,0)
XMTDL1         * New *         5047763        50
"PKG",8,22,1,"PAH",1,1,326,0)
XMTDL2         * New *         8743997        50
"PKG",8,22,1,"PAH",1,1,327,0)
XMTDO          * New *         1746764        50
"PKG",8,22,1,"PAH",1,1,328,0)
XMTDT          * New *         5385940        50
"PKG",8,22,1,"PAH",1,1,329,0)
XMUDNC         * New *         3683283        50
"PKG",8,22,1,"PAH",1,1,330,0)
XMUPIN         * New *        13825872        50
"PKG",8,22,1,"PAH",1,1,331,0)
XMUT1          8603321         3818573        50
"PKG",8,22,1,"PAH",1,1,332,0)
XMUT1A         4040808         3948769        50
"PKG",8,22,1,"PAH",1,1,333,0)
XMUT2          4770720         4582154        50
"PKG",8,22,1,"PAH",1,1,334,0)
XMUT4          4510855        17112758        50
"PKG",8,22,1,"PAH",1,1,335,0)
XMUT4A         4424419         1411742        34,55,50
"PKG",8,22,1,"PAH",1,1,336,0)
XMUT4B         8543914        18488496        50
"PKG",8,22,1,"PAH",1,1,337,0)
XMUT4BA        8604816        15364896        50
"PKG",8,22,1,"PAH",1,1,338,0)
XMUT4C         3745269         7228866        10,22,50
"PKG",8,22,1,"PAH",1,1,339,0)
XMUT5          4455724         5739686        50
"PKG",8,22,1,"PAH",1,1,340,0)
XMUT5B         2824190         2644064        50
"PKG",8,22,1,"PAH",1,1,341,0)
XMUT5Q         8765057         8502082        50
"PKG",8,22,1,"PAH",1,1,342,0)
XMUT6          2438497         2312993        50
"PKG",8,22,1,"PAH",1,1,343,0)
XMUTERM        * New *        15007949        50
"PKG",8,22,1,"PAH",1,1,344,0)
XMUTERM1       * New *        14471083        50
"PKG",8,22,1,"PAH",1,1,345,0)
XMUTPUR0       1145390         1365512        7,50
"PKG",8,22,1,"PAH",1,1,346,0)
XMVGROUP       * New *         6214836        50
"PKG",8,22,1,"PAH",1,1,347,0)
XMVSURR        * New *         2622785        50
"PKG",8,22,1,"PAH",1,1,348,0)
XMVVITA        * New *         4126813        50
"PKG",8,22,1,"PAH",1,1,349,0)
XMVVITAE       * New *        12045708        50
"PKG",8,22,1,"PAH",1,1,350,0)
XMXADDR        * New *        18774539        50
"PKG",8,22,1,"PAH",1,1,351,0)
XMXADDR1       * New *        12069509        50
"PKG",8,22,1,"PAH",1,1,352,0)
XMXADDR2       * New *         6515109        50
"PKG",8,22,1,"PAH",1,1,353,0)
XMXADDRD       * New *         9657048        50
"PKG",8,22,1,"PAH",1,1,354,0)
XMXADDRG       * New *        15430701        50
"PKG",8,22,1,"PAH",1,1,355,0)
XMXANSER       * New *         2242310        50
"PKG",8,22,1,"PAH",1,1,356,0)
XMXAPI         * New *         6705900        50
"PKG",8,22,1,"PAH",1,1,357,0)
XMXAPIB        * New *         3472533        50
"PKG",8,22,1,"PAH",1,1,358,0)
XMXAPIU        * New *          596863        50
"PKG",8,22,1,"PAH",1,1,359,0)
XMXBSKT        * New *        12393935        50
"PKG",8,22,1,"PAH",1,1,360,0)
XMXBULL        * New *         5479615        50
"PKG",8,22,1,"PAH",1,1,361,0)
XMXEDIT        * New *         3880586        50
"PKG",8,22,1,"PAH",1,1,362,0)
XMXLIST        * New *        10429141        50
"PKG",8,22,1,"PAH",1,1,363,0)
XMXLIST1       * New *        12554823        50
"PKG",8,22,1,"PAH",1,1,364,0)
XMXMBOX        * New *         1289002        50
"PKG",8,22,1,"PAH",1,1,365,0)
XMXMSGS        * New *        10966038        50
"PKG",8,22,1,"PAH",1,1,366,0)
XMXMSGS1       * New *         9891647        50
"PKG",8,22,1,"PAH",1,1,367,0)
XMXMSGS2       * New *         5670519        50
"PKG",8,22,1,"PAH",1,1,368,0)
XMXPARM        * New *        19704732        50
"PKG",8,22,1,"PAH",1,1,369,0)
XMXPARM1       * New *         5916152        50
"PKG",8,22,1,"PAH",1,1,370,0)
XMXPARMB       * New *         4788158        50
"PKG",8,22,1,"PAH",1,1,371,0)
XMXPRT         * New *         3036286        50
"PKG",8,22,1,"PAH",1,1,372,0)
XMXREPLY       * New *         4925239        50
"PKG",8,22,1,"PAH",1,1,373,0)
XMXSEC         * New *        18599731        50
"PKG",8,22,1,"PAH",1,1,374,0)
XMXSEC1        * New *        12851118        50
"PKG",8,22,1,"PAH",1,1,375,0)
XMXSEC2        * New *        20994061        50
"PKG",8,22,1,"PAH",1,1,376,0)
XMXSEND        * New *        10879355        50
"PKG",8,22,1,"PAH",1,1,377,0)
XMXTO          * New *         1915321        50
"PKG",8,22,1,"PAH",1,1,378,0)
XMXUTIL        2338705        10432772        40,50
"PKG",8,22,1,"PAH",1,1,379,0)
XMXUTIL1       * New *         5489564        50
"PKG",8,22,1,"PAH",1,1,380,0)
XMXUTIL2       * New *         7762911        50
"PKG",8,22,1,"PAH",1,1,381,0)
XMXUTIL3       * New *         3652490        50
"PKG",8,22,1,"PAH",1,1,382,0)
XMXUTIL4       * New *         9117363        50
"PKG",8,22,1,"PAH",1,1,383,0)
XMYMNEM        5559955         4398404        50
"PKG",8,22,1,"PAH",1,1,384,0)
XMYPOST2       9070792         7919115        49,50
"PKG",8,22,1,"PAH",1,1,385,0)
XMYPOST9       * New *         5996100        50
"PKG",8,22,1,"PAH",1,1,386,0)
XMYPOSTA       * New *         2107256        50
"PKG",8,22,1,"PAH",1,1,387,0)
XMYPRE         4770905         3732264        50 
"PKG",8,22,1,"PAH",1,1,388,0)
XMYPRE2        * New *        12021025        50
"PKG",8,22,1,"PAH",1,1,389,0)
XMYPRE2A       * New *        15738292        50
"PKG",8,22,1,"PAH",1,1,390,0)
XMYPRE2B       * New *         3451238        50
"PKG",8,22,1,"PAH",1,1,391,0)

"PKG",8,22,1,"PAH",1,1,392,0)
* Checksums produced by CHECK^XTSUMBLD
"PKG",8,22,1,"PAH",1,1,393,0)

"PKG",8,22,1,"PAH",1,1,394,0)
This patch introduces the following new routines:
"PKG",8,22,1,"PAH",1,1,395,0)

"PKG",8,22,1,"PAH",1,1,396,0)
Routine      Callable at     Description
"PKG",8,22,1,"PAH",1,1,397,0)
---------------------------------------------------------------------------
"PKG",8,22,1,"PAH",1,1,398,0)
XMHIU        N/A
"PKG",8,22,1,"PAH",1,1,399,0)
XMJBL        N/A
"PKG",8,22,1,"PAH",1,1,400,0)
XMJBM        N/A
"PKG",8,22,1,"PAH",1,1,401,0)
XMJBM1       N/A
"PKG",8,22,1,"PAH",1,1,402,0)
XMJBN        N/A
"PKG",8,22,1,"PAH",1,1,403,0)
XMJBU        N/A
"PKG",8,22,1,"PAH",1,1,404,0)
XMJDIR       N/A
"PKG",8,22,1,"PAH",1,1,405,0)
XMJERR       N/A
"PKG",8,22,1,"PAH",1,1,406,0)
XMJMA        N/A
"PKG",8,22,1,"PAH",1,1,407,0)
XMJMBULL     N/A
"PKG",8,22,1,"PAH",1,1,408,0)
XMJMC        N/A
"PKG",8,22,1,"PAH",1,1,409,0)
XMJMCODE     N/A
"PKG",8,22,1,"PAH",1,1,410,0)
XMJMD        N/A
"PKG",8,22,1,"PAH",1,1,411,0)
XMJMF        N/A
"PKG",8,22,1,"PAH",1,1,412,0)
XMJMFA       N/A
"PKG",8,22,1,"PAH",1,1,413,0)
XMJMFB       N/A
"PKG",8,22,1,"PAH",1,1,414,0)
XMJML        N/A
"PKG",8,22,1,"PAH",1,1,415,0)
XMJMLN       N/A
"PKG",8,22,1,"PAH",1,1,416,0)
XMJMLR       N/A
"PKG",8,22,1,"PAH",1,1,417,0)
XMJMLR1      N/A
"PKG",8,22,1,"PAH",1,1,418,0)
XMJMOI       N/A
"PKG",8,22,1,"PAH",1,1,419,0)
XMJMOIE      N/A
"PKG",8,22,1,"PAH",1,1,420,0)
XMJMOR       N/A
"PKG",8,22,1,"PAH",1,1,421,0)
XMJMORX      N/A
"PKG",8,22,1,"PAH",1,1,422,0)
XMJMORX1     N/A
"PKG",8,22,1,"PAH",1,1,423,0)
XMJMP        N/A
"PKG",8,22,1,"PAH",1,1,424,0)
XMJMR        N/A
"PKG",8,22,1,"PAH",1,1,425,0)
XMJMRO       N/A
"PKG",8,22,1,"PAH",1,1,426,0)
XMJMS        N/A
"PKG",8,22,1,"PAH",1,1,427,0)
XMJMSA       N/A
"PKG",8,22,1,"PAH",1,1,428,0)
XMJMSO       N/A
"PKG",8,22,1,"PAH",1,1,429,0)
XMJMT        N/A
"PKG",8,22,1,"PAH",1,1,430,0)
XMKP         N/A
"PKG",8,22,1,"PAH",1,1,431,0)
XMKPL        N/A
"PKG",8,22,1,"PAH",1,1,432,0)
XMKPLQ       N/A
"PKG",8,22,1,"PAH",1,1,433,0)
XMKPO        N/A
"PKG",8,22,1,"PAH",1,1,434,0)
XMTDF        N/A
"PKG",8,22,1,"PAH",1,1,435,0)
XMTDL        N/A
"PKG",8,22,1,"PAH",1,1,436,0)
XMTDL1       N/A
"PKG",8,22,1,"PAH",1,1,437,0)
XMTDL2       N/A
"PKG",8,22,1,"PAH",1,1,438,0)
XMTDO        N/A
"PKG",8,22,1,"PAH",1,1,439,0)
XMTDT        N/A
"PKG",8,22,1,"PAH",1,1,440,0)
XMUDNC       N/A
"PKG",8,22,1,"PAH",1,1,441,0)
XMUPIN       N/A
"PKG",8,22,1,"PAH",1,1,442,0)
XMUTERM      N/A
"PKG",8,22,1,"PAH",1,1,443,0)
XMUTERM1     N/A
"PKG",8,22,1,"PAH",1,1,444,0)
XMVGROUP     N/A
"PKG",8,22,1,"PAH",1,1,445,0)
XMVSURR      N/A
"PKG",8,22,1,"PAH",1,1,446,0)
XMVVITA      N/A
"PKG",8,22,1,"PAH",1,1,447,0)
XMVVITAE     INIT        Initialize user setup information
"PKG",8,22,1,"PAH",1,1,448,0)
             OTHER       Setup as someone else
"PKG",8,22,1,"PAH",1,1,449,0)
             SELF        Return to oneself
"PKG",8,22,1,"PAH",1,1,450,0)
XMXADDR      N/A
"PKG",8,22,1,"PAH",1,1,451,0)
XMXADDR1     N/A
"PKG",8,22,1,"PAH",1,1,452,0)
XMXADDR2     N/A
"PKG",8,22,1,"PAH",1,1,453,0)
XMXADDRD     N/A
"PKG",8,22,1,"PAH",1,1,454,0)
XMXADDRG     N/A
"PKG",8,22,1,"PAH",1,1,455,0)
XMXANSER     N/A
"PKG",8,22,1,"PAH",1,1,456,0)
XMXAPI       ADDRNSND    Address and send a message (doesn't handle msg body)
"PKG",8,22,1,"PAH",1,1,457,0)
             ANSRMSG     Answer a message
"PKG",8,22,1,"PAH",1,1,458,0)
             CRE8XMZ     Create a new message in message file
"PKG",8,22,1,"PAH",1,1,459,0)
             DELMSG      Delete messages from a basket
"PKG",8,22,1,"PAH",1,1,460,0)
             FLTRMSG     Filter messages
"PKG",8,22,1,"PAH",1,1,461,0)
             FWDMSG      Forward messages
"PKG",8,22,1,"PAH",1,1,462,0)
             LATERMSG    'Later' messages
"PKG",8,22,1,"PAH",1,1,463,0)
             MOVEMSG     Move messages from/to a basket
"PKG",8,22,1,"PAH",1,1,464,0)
             PRTMSG      Print messages
"PKG",8,22,1,"PAH",1,1,465,0)
             PUTSERV     Put a message in a server basket
"PKG",8,22,1,"PAH",1,1,466,0)
             REPLYMSG    Reply to message
"PKG",8,22,1,"PAH",1,1,467,0)
             SENDBULL    Send a bulletin (returns XMZ)
"PKG",8,22,1,"PAH",1,1,468,0)
             SENDMSG     Send a message
"PKG",8,22,1,"PAH",1,1,469,0)
             TASKBULL    Send a bulletin (quicker, but does not return XMZ)
"PKG",8,22,1,"PAH",1,1,470,0)
             TERMMSG     Terminate messages
"PKG",8,22,1,"PAH",1,1,471,0)
             TOWHOM      Check one message addressee
"PKG",8,22,1,"PAH",1,1,472,0)
             VSUBJ       Validate a message subject
"PKG",8,22,1,"PAH",1,1,473,0)
             ZAPSERV     Delete a message from a server basket
"PKG",8,22,1,"PAH",1,1,474,0)
XMXAPIB      CRE8BSKT    Create a basket
"PKG",8,22,1,"PAH",1,1,475,0)
             CRE8MBOX    Create a mailbox
"PKG",8,22,1,"PAH",1,1,476,0)
             DELBSKT     Delete a basket
"PKG",8,22,1,"PAH",1,1,477,0)
             FLTRBSKT    Filter messages in a basket
"PKG",8,22,1,"PAH",1,1,478,0)
             FLTRMBOX    Filter all messages in a mailbox
"PKG",8,22,1,"PAH",1,1,479,0)
             LISTBSKT    Get a list of baskets
"PKG",8,22,1,"PAH",1,1,480,0)
             LISTMSGS    Get a list of messages in one or all baskets.
"PKG",8,22,1,"PAH",1,1,481,0)
                         (Search criteria may be used.)
"PKG",8,22,1,"PAH",1,1,482,0)
             NAMEBSKT    Change the name of a basket
"PKG",8,22,1,"PAH",1,1,483,0)
             QBSKT       Get info on a basket
"PKG",8,22,1,"PAH",1,1,484,0)
             QMBOX       Query a mailbox
"PKG",8,22,1,"PAH",1,1,485,0)
             RSEQBSKT    Resequence messages in a basket
"PKG",8,22,1,"PAH",1,1,486,0)
             TERMMBOX    Remove all traces of a user from MM globals
"PKG",8,22,1,"PAH",1,1,487,0)
XMXAPIU      READ        Read/Manage messages in Mailbox (interactive)
"PKG",8,22,1,"PAH",1,1,488,0)
             READNEW     Read new messages in a Mailbox (interactive)
"PKG",8,22,1,"PAH",1,1,489,0)
             SEND        Send a message (interactive)
"PKG",8,22,1,"PAH",1,1,490,0)
             TOWHOM      Address a message (interactive)
"PKG",8,22,1,"PAH",1,1,491,0)
XMXBSKT      N/A
"PKG",8,22,1,"PAH",1,1,492,0)
XMXBULL      N/A
"PKG",8,22,1,"PAH",1,1,493,0)
XMXEDIT      CLOSED      Toggle message 'closed'
"PKG",8,22,1,"PAH",1,1,494,0)
             CONFID      Toggle message 'confidential'
"PKG",8,22,1,"PAH",1,1,495,0)
             CONFIRM     Toggle message 'confirm receipt requested'
"PKG",8,22,1,"PAH",1,1,496,0)
             DELIVER     Set/delete delivery basket
"PKG",8,22,1,"PAH",1,1,497,0)
             INFO        Toggle message 'information only'
"PKG",8,22,1,"PAH",1,1,498,0)
             PRIORITY    Toggle message 'priority'
"PKG",8,22,1,"PAH",1,1,499,0)
             SUBJ        Change message subject
"PKG",8,22,1,"PAH",1,1,500,0)
             TEXT        Replace message text
"PKG",8,22,1,"PAH",1,1,501,0)
             VAPOR       Set/delete message vaporize date
"PKG",8,22,1,"PAH",1,1,502,0)
XMXLIST      N/A
"PKG",8,22,1,"PAH",1,1,503,0)
XMXLIST1     N/A
"PKG",8,22,1,"PAH",1,1,504,0)
XMXMBOX      N/A
"PKG",8,22,1,"PAH",1,1,505,0)
XMXMSGS      N/A
"PKG",8,22,1,"PAH",1,1,506,0)
XMXMSGS1     N/A
"PKG",8,22,1,"PAH",1,1,507,0)
XMXMSGS2     N/A
"PKG",8,22,1,"PAH",1,1,508,0)
XMXPARM      N/A
"PKG",8,22,1,"PAH",1,1,509,0)
XMXPARM1     N/A
"PKG",8,22,1,"PAH",1,1,510,0)
XMXPARMB     N/A
"PKG",8,22,1,"PAH",1,1,511,0)
XMXPRT       N/A
"PKG",8,22,1,"PAH",1,1,512,0)
XMXREPLY     N/A
"PKG",8,22,1,"PAH",1,1,513,0)
XMXSEC       $$ACCESS    May user access message?
"PKG",8,22,1,"PAH",1,1,514,0)
             $$ANSWER    May user answer message?
"PKG",8,22,1,"PAH",1,1,515,0)
             $$BCAST     Is this a broadcast message?
"PKG",8,22,1,"PAH",1,1,516,0)
             $$CLOSED    Is this message closed?
"PKG",8,22,1,"PAH",1,1,517,0)
             $$CONFID    Is this message confidential?
"PKG",8,22,1,"PAH",1,1,518,0)
             $$CONFIRM   Is this message confirm receipt requested?
"PKG",8,22,1,"PAH",1,1,519,0)
             $$COPY      May user copy message?
"PKG",8,22,1,"PAH",1,1,520,0)
             $$DELETE    May user delete message?
"PKG",8,22,1,"PAH",1,1,521,0)
             $$FORWARD   May user forward message?
"PKG",8,22,1,"PAH",1,1,522,0)
             $$INFO      Is this message information only?
"PKG",8,22,1,"PAH",1,1,523,0)
             $$LATER     May user later message?
"PKG",8,22,1,"PAH",1,1,524,0)
             $$MOVE      May user save/filter message?
"PKG",8,22,1,"PAH",1,1,525,0)
             $$ORIGIN8R  Did user send this message?
"PKG",8,22,1,"PAH",1,1,526,0)
             $$POSTPRIV  Does user have postmaster privilege?
"PKG",8,22,1,"PAH",1,1,527,0)
             $$PRIORITY  Is this message priority?
"PKG",8,22,1,"PAH",1,1,528,0)
             $$READ      May user read message?
"PKG",8,22,1,"PAH",1,1,529,0)
             $$REPLY     May user reply to message?
"PKG",8,22,1,"PAH",1,1,530,0)
             $$RPRIV     Does surrogate have read privilege?
"PKG",8,22,1,"PAH",1,1,531,0)
             $$RWPRIV    Does surrogate have read/write privilege?
"PKG",8,22,1,"PAH",1,1,532,0)
             $$SEND      May user send a message?
"PKG",8,22,1,"PAH",1,1,533,0)
             $$SURRACC   May surrogate access message?
"PKG",8,22,1,"PAH",1,1,534,0)
             $$SURRCONF  May surrogate *not* access message?
"PKG",8,22,1,"PAH",1,1,535,0)
             $$WPRIV     Does surrogate have write privilege?
"PKG",8,22,1,"PAH",1,1,536,0)
             $$ZCLOSED   Is this message closed?
"PKG",8,22,1,"PAH",1,1,537,0)
             $$ZCONFID   Is this message confidential?
"PKG",8,22,1,"PAH",1,1,538,0)
             $$ZCONFIRM  Is this message confirm receipt requested?
"PKG",8,22,1,"PAH",1,1,539,0)
             $$ZINFO     Is this message information only?
"PKG",8,22,1,"PAH",1,1,540,0)
             $$ZORIGIN8  Did user send this message?
"PKG",8,22,1,"PAH",1,1,541,0)
             $$ZPOSTPRV  Does user have postmaster privilege?
"PKG",8,22,1,"PAH",1,1,542,0)
             $$ZPRI      Is this message priority?
"PKG",8,22,1,"PAH",1,1,543,0)
XMXSEC1      $$COPYAMT   May the copy contain the requested responses?
"PKG",8,22,1,"PAH",1,1,544,0)
             $$COPYLIMS  Get the site's copy limits.
"PKG",8,22,1,"PAH",1,1,545,0)
             $$COPYRECP  May the copy be sent to the original's recipients?
"PKG",8,22,1,"PAH",1,1,546,0)
             $$PAKMAN    Is this a PackMan message?
"PKG",8,22,1,"PAH",1,1,547,0)
             CHKLINES    May this message be sent to a remote site?
"PKG",8,22,1,"PAH",1,1,548,0)
             CHKMSG      Is message really there & may user access it?
"PKG",8,22,1,"PAH",1,1,549,0)
             GETRESTR    Get restrictions on what user may do with message
"PKG",8,22,1,"PAH",1,1,550,0)
             OPTGRP      What may user do at basket/message group level?
"PKG",8,22,1,"PAH",1,1,551,0)
XMXSEC2      $$EDIT      May user edit message?
"PKG",8,22,1,"PAH",1,1,552,0)
             OPTEDIT     If user may edit message, what may/may not be edited?
"PKG",8,22,1,"PAH",1,1,553,0)
             OPTMSG      What may/may not the user do with this message?
"PKG",8,22,1,"PAH",1,1,554,0)
XMXSEND      N/A
"PKG",8,22,1,"PAH",1,1,555,0)
XMXTO        N/A
"PKG",8,22,1,"PAH",1,1,556,0)
XMXUTIL      $$BMSGCT    Number of messages in user's basket
"PKG",8,22,1,"PAH",1,1,557,0)
             $$BNMSGCT   Number of new messages in user's basket
"PKG",8,22,1,"PAH",1,1,558,0)
             $$BSKTNAME  Basket name
"PKG",8,22,1,"PAH",1,1,559,0)
             $$NAME      User's name
"PKG",8,22,1,"PAH",1,1,560,0)
             $$NETNAME   User's network name
"PKG",8,22,1,"PAH",1,1,561,0)
             $$NEWS      Info on new messages in user's mailbox
"PKG",8,22,1,"PAH",1,1,562,0)
             $$TMSGCT    Number of messages in user's mailbox
"PKG",8,22,1,"PAH",1,1,563,0)
             $$TNMSGCT   Number of new messages in user's mailbox
"PKG",8,22,1,"PAH",1,1,564,0)
             KVAPOR      Edit message vaporize date in user's basket
"PKG",8,22,1,"PAH",1,1,565,0)
             LASTACC     Record info on user's last access of message
"PKG",8,22,1,"PAH",1,1,566,0)
             MAKENEW     Make message new
"PKG",8,22,1,"PAH",1,1,567,0)
             NONEW       Make message not new
"PKG",8,22,1,"PAH",1,1,568,0)
             PAGE        Enter RETURN to continue or '^' to exit:
"PKG",8,22,1,"PAH",1,1,569,0)
             WAIT        Press RETURN to continue:
"PKG",8,22,1,"PAH",1,1,570,0)
XMXUTIL1     $$CONVERT   Convert InterNet date/time to FileMan date/time
"PKG",8,22,1,"PAH",1,1,571,0)
             $$CTRL      Strip control characters
"PKG",8,22,1,"PAH",1,1,572,0)
             $$DECODEUP  ~U~ to ^
"PKG",8,22,1,"PAH",1,1,573,0)
             $$ENCODEUP  ^ to ~U~
"PKG",8,22,1,"PAH",1,1,574,0)
             $$GMTDIFF   +-HHMM difference from GMT
"PKG",8,22,1,"PAH",1,1,575,0)
             $$INDT      Convert FileMan date/time to InterNet date/time
"PKG",8,22,1,"PAH",1,1,576,0)
             $$MAXBLANK  Reduce 3 or more consecutive blanks to 2
"PKG",8,22,1,"PAH",1,1,577,0)
             $$MELD      Combine string and number
"PKG",8,22,1,"PAH",1,1,578,0)
             $$MMDT      Convert FileMan date/time to MailMan date/time
"PKG",8,22,1,"PAH",1,1,579,0)
             $$SCRUB     Strip control characters and leading/trailing blanks
"PKG",8,22,1,"PAH",1,1,580,0)
             $$STRIP     Strip leading/trailing blanks
"PKG",8,22,1,"PAH",1,1,581,0)
             $$TIMEDIFF  Decimal time difference to +-HHMM
"PKG",8,22,1,"PAH",1,1,582,0)
             $$TSTAMP    Time stamp
"PKG",8,22,1,"PAH",1,1,583,0)
             $$ZONEDIFF  +-HHMM from another time zone
"PKG",8,22,1,"PAH",1,1,584,0)
XMXUTIL2     $$BSKT      Which basket is message in?
"PKG",8,22,1,"PAH",1,1,585,0)
             $$DATE      Get message date.
"PKG",8,22,1,"PAH",1,1,586,0)
             $$FROM      Get message from.
"PKG",8,22,1,"PAH",1,1,587,0)
             $$KSEQN     Get message sequence number in user's basket.
"PKG",8,22,1,"PAH",1,1,588,0)
             $$LINE      How many lines are in the message?
"PKG",8,22,1,"PAH",1,1,589,0)
             $$NEW       Is this message new for this user?
"PKG",8,22,1,"PAH",1,1,590,0)
             $$PRI       Is this message priority?
"PKG",8,22,1,"PAH",1,1,591,0)
             $$QRESP     Is this a response?
"PKG",8,22,1,"PAH",1,1,592,0)
             $$RESP      How many responses are in the message?
"PKG",8,22,1,"PAH",1,1,593,0)
             $$SUBJ      Get message subject.
"PKG",8,22,1,"PAH",1,1,594,0)
             $$ZDATE     Get message date.
"PKG",8,22,1,"PAH",1,1,595,0)
             $$ZFROM     Get message from.
"PKG",8,22,1,"PAH",1,1,596,0)
             $$ZNODE     Get message zero node.
"PKG",8,22,1,"PAH",1,1,597,0)
             $$ZPRI      Is this message priority?
"PKG",8,22,1,"PAH",1,1,598,0)
             $$ZREAD     How many responses has the user read?
"PKG",8,22,1,"PAH",1,1,599,0)
             $$ZSUBJ     Get message subject.
"PKG",8,22,1,"PAH",1,1,600,0)
             INMSG       Message info
"PKG",8,22,1,"PAH",1,1,601,0)
             INMSG1      General message info
"PKG",8,22,1,"PAH",1,1,602,0)
             INMSG2      Specific message info
"PKG",8,22,1,"PAH",1,1,603,0)
             INRESP      Response info
"PKG",8,22,1,"PAH",1,1,604,0)
             INRESPS     Message response info
"PKG",8,22,1,"PAH",1,1,605,0)
XMXUTIL3     Q           List message's addressees
"PKG",8,22,1,"PAH",1,1,606,0)
             QD          List message's recipients
"PKG",8,22,1,"PAH",1,1,607,0)
             QL          List message's later'd addressees
"PKG",8,22,1,"PAH",1,1,608,0)
             QN          List message's network header lines
"PKG",8,22,1,"PAH",1,1,609,0)
XMXUTIL4     N/A
"PKG",8,22,1,"PAH",1,1,610,0)
XMYPOST9     N/A
"PKG",8,22,1,"PAH",1,1,611,0)
XMYPOSTA     N/A
"PKG",8,22,1,"PAH",1,1,612,0)
XMYPRE2      N/A
"PKG",8,22,1,"PAH",1,1,613,0)
XMYPRE2A     N/A
"PKG",8,22,1,"PAH",1,1,614,0)
XMYPRE2B     N/A
"PKG",8,22,1,"PAH",1,1,615,0)
===========================================================================
"PKG",8,22,1,"PAH",1,1,616,0)
 
"PKG",8,22,1,"PAH",1,1,617,0)
INSTALLATION:
"PKG",8,22,1,"PAH",1,1,618,0)

"PKG",8,22,1,"PAH",1,1,619,0)
NOTES:
"PKG",8,22,1,"PAH",1,1,620,0)
a. This patch should be installed after hours, when user activity is at a
"PKG",8,22,1,"PAH",1,1,621,0)
minimum.  It should not be queued, because TaskMan should not be running.
"PKG",8,22,1,"PAH",1,1,622,0)
b. This patch requires Kernel patches XU*8.0*67, XU*8.0*112, and XU*8.0*113.
"PKG",8,22,1,"PAH",1,1,623,0)
c. For any site running MAS (all VAMCs), this patch requires FileMan patch
"PKG",8,22,1,"PAH",1,1,624,0)
DI*22.0*1.  Caution: KIDS will not check for this patch because not all
"PKG",8,22,1,"PAH",1,1,625,0)
sites run MAS.  It is up to each site running MAS to check for DI*22.0*1.
"PKG",8,22,1,"PAH",1,1,626,0)
d. All MailMan users, including fictitious users, must have an access code,
"PKG",8,22,1,"PAH",1,1,627,0)
or they will no longer receive mail.
"PKG",8,22,1,"PAH",1,1,628,0)
e. To shorten installation time, which runs about 1 hour per 200,000 messages
"PKG",8,22,1,"PAH",1,1,629,0)
in file 3.9, you might consider running the message purges the day before
"PKG",8,22,1,"PAH",1,1,630,0)
the installation:
"PKG",8,22,1,"PAH",1,1,631,0)
- XMMGR-PURGE-AI-XREF (AI x-Ref Purge of Received Network Messages)
"PKG",8,22,1,"PAH",1,1,632,0)
- XMPURGE-BY-DATE (Purge Messages by Origination Date)
"PKG",8,22,1,"PAH",1,1,633,0)
- XMAUTOPURGE (Automatic Purge of MailMan Messages)
"PKG",8,22,1,"PAH",1,1,634,0)
f. DSM sites running SlotMaster may see routine mapping problems with ZSLOT
"PKG",8,22,1,"PAH",1,1,635,0)
users, even after disabling mapping.  Therefore, such sites should consider
"PKG",8,22,1,"PAH",1,1,636,0)
the following steps:
"PKG",8,22,1,"PAH",1,1,637,0)
- Shutdown ZSLOT on all nodes.
"PKG",8,22,1,"PAH",1,1,638,0)
- Disable all mapped XM routines.
"PKG",8,22,1,"PAH",1,1,639,0)
- Load this patch.
"PKG",8,22,1,"PAH",1,1,640,0)
- Enter manual edits.
"PKG",8,22,1,"PAH",1,1,641,0)
- Rebuild mapped routine sets.
"PKG",8,22,1,"PAH",1,1,642,0)
- Shutdown/restart all DSM c nfigurations.
"PKG",8,22,1,"PAH",1,1,643,0)
An alternative to the above steps is to disable all mapped XM routines about
"PKG",8,22,1,"PAH",1,1,644,0)
a week before you load this patch.  That way you wouldn't need to shutdown
"PKG",8,22,1,"PAH",1,1,645,0)
ZSLOT or shutdown/restart DSM configurations.
"PKG",8,22,1,"PAH",1,1,646,0)
g. If your site is running POP3, you should immediately load patch XM*7.1*71
"PKG",8,22,1,"PAH",1,1,647,0)
after installing this patch.
"PKG",8,22,1,"PAH",1,1,648,0)

"PKG",8,22,1,"PAH",1,1,649,0)
INSTRUCTIONS:
"PKG",8,22,1,"PAH",1,1,650,0)
1. This patch replaces routine ^XMRPCTS1, which contains your site's TWIX
"PKG",8,22,1,"PAH",1,1,651,0)
   routing info.  Before you install this patch, copy the current TWIX info
"PKG",8,22,1,"PAH",1,1,652,0)
   from that routine at your site.  After you install this patch, edit
"PKG",8,22,1,"PAH",1,1,653,0)
   the new ^XMRPCTS1 to set your site's current TWIX info.  Specifically:
"PKG",8,22,1,"PAH",1,1,654,0)
XMRPCTS1     ;(KC-VAMC)/XXX-Simple PCTS front end to MailMan ;03/19/98  11:10
"PKG",8,22,1,"PAH",1,1,655,0)
     ;;7.1;MailMan;**6,50**;Jun 02, 1994
"PKG",8,22,1,"PAH",1,1,656,0)
     N XMUS,XMFM,XMSTR,XMRI,XMTO,XMABORT
"PKG",8,22,1,"PAH",1,1,657,0)
     ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
"PKG",8,22,1,"PAH",1,1,658,0)
     ;All should be sent to XXX@VHA.DMIA the local PCTS Domain
"PKG",8,22,1,"PAH",1,1,659,0)
     ;Edit these for your site.               <---Copy your site's TWIX info
"PKG",8,22,1,"PAH",1,1,660,0)
     S XMUS="XXXX" ;Local routing indicator   <---from this line
"PKG",8,22,1,"PAH",1,1,661,0)
     S XMFM="YYYY" ;from line                 <---and this line
"PKG",8,22,1,"PAH",1,1,662,0)
     I XMUS="XXXX"!(XMFM="YYYY") S %="FIX Routing codes !!!"_XMPCTS0("ERR")
"PKG",8,22,1,"PAH",1,1,663,0)
     ;-------------------------------------------------------------
"PKG",8,22,1,"PAH",1,1,664,0)
2.  The TIME ZONE field in file 4.3 must have your site's time zone in it.
"PKG",8,22,1,"PAH",1,1,665,0)
    Please check and ensure that it is there.
"PKG",8,22,1,"PAH",1,1,666,0)
3.  DSM SITES: Disable all mapped XM routines.  In step 13, we'll rebuild
"PKG",8,22,1,"PAH",1,1,667,0)
    the map set with *different* routines, because many have become obsolete.
"PKG",8,22,1,"PAH",1,1,668,0)
4.  On the PackMan menu, use the 'INSTALL/CHECK MESSAGE' option to load
"PKG",8,22,1,"PAH",1,1,669,0)
    the patch into a transport global.
"PKG",8,22,1,"PAH",1,1,670,0)
5.  On the Manage MailMan:Local Delivery Management menu, use the following
"PKG",8,22,1,"PAH",1,1,671,0)
    option to stop the background filer:
"PKG",8,22,1,"PAH",1,1,672,0)
       STOP background filer (XMAD)
"PKG",8,22,1,"PAH",1,1,673,0)
Are you sure you want the BACKGROUND FILERS to STOP delivering mail NO// YES
"PKG",8,22,1,"PAH",1,1,674,0)
                                                                         ===
"PKG",8,22,1,"PAH",1,1,675,0)
<<< Mail Deliveries will stop momentarily. >>>
"PKG",8,22,1,"PAH",1,1,676,0)
<<   Background filer will stop before delivering the next message !!! >>>
"PKG",8,22,1,"PAH",1,1,677,0)
6.  Stop TaskMan.  You may also wish to shut down HL7 filers/LLP's and other
"PKG",8,22,1,"PAH",1,1,678,0)
    background tasks which may attempt to create new messages.
"PKG",8,22,1,"PAH",1,1,679,0)
7.  Place option XMUSER out of order.  (We do it ourselves, instead of letting
"PKG",8,22,1,"PAH",1,1,680,0)
KIDS do it, because we're going to place XMUSER back in order during the
"PKG",8,22,1,"PAH",1,1,681,0)
post-init.)  To place XMUSER out of order, enter FileMan, and:
"PKG",8,22,1,"PAH",1,1,682,0)
VA FileMan 21.0
"PKG",8,22,1,"PAH",1,1,683,0)
Select OPTION: ENTER OR EDIT FILE ENTRIES  
"PKG",8,22,1,"PAH",1,1,684,0)
               ==========================
"PKG",8,22,1,"PAH",1,1,685,0)
INPUT TO WHAT FILE: OPTION// <press return>
"PKG",8,22,1,"PAH",1,1,686,0)
                             ==============
"PKG",8,22,1,"PAH",1,1,687,0)
EDIT WHICH FIELD: ALL// OUT OF ORDER MESSAGE
"PKG",8,22,1,"PAH",1,1,688,0)
                        ====================    
"PKG",8,22,1,"PAH",1,1,689,0)
THEN EDIT FIELD: <press return>
"PKG",8,22,1,"PAH",1,1,690,0)
                 ==============
"PKG",8,22,1,"PAH",1,1,691,0)
Select OPTION NAME: XMUSER          MailMan Menu
"PKG",8,22,1,"PAH",1,1,692,0)
                    ======
"PKG",8,22,1,"PAH",1,1,693,0)
OUT OF ORDER MESSAGE: Loading MailMan patch XM*7.1*50
"PKG",8,22,1,"PAH",1,1,694,0)
                      ===============================
"PKG",8,22,1,"PAH",1,1,695,0)
Select OPTION NAME: <press return>
"PKG",8,22,1,"PAH",1,1,696,0)
                    ==============
"PKG",8,22,1,"PAH",1,1,697,0)
Select OPTION: <press return>
"PKG",8,22,1,"PAH",1,1,698,0)
               ==============
"PKG",8,22,1,"PAH",1,1,699,0)
8.  If you journal the global ^XMBX, your journal space may fill up when the
"PKG",8,22,1,"PAH",1,1,700,0)
    ^XMBX(3.9,"AI", xref global is reconfigured.  You may wish to disable
"PKG",8,22,1,"PAH",1,1,701,0)
    journaling.  To disable journaling:
"PKG",8,22,1,"PAH",1,1,702,0)
8a. DSM SITES: You may disable journaling for a particular global:
"PKG",8,22,1,"PAH",1,1,703,0)
    >D ^%GLOMAN
"PKG",8,22,1,"PAH",1,1,704,0)
     ==========
"PKG",8,22,1,"PAH",1,1,705,0)
    Global Management Utility
"PKG",8,22,1,"PAH",1,1,706,0)

"PKG",8,22,1,"PAH",1,1,707,0)
    Global > ^XMBX
"PKG",8,22,1,"PAH",1,1,708,0)
              ====
"PKG",8,22,1,"PAH",1,1,709,0)
    ^XMBX is currently defined
"PKG",8,22,1,"PAH",1,1,710,0)

"PKG",8,22,1,"PAH",1,1,711,0)
      1. Show GLOBAL Characteristics
"PKG",8,22,1,"PAH",1,1,712,0)
      2. Change Access Privileges
"PKG",8,22,1,"PAH",1,1,713,0)
      3. Change Journaling Capability
"PKG",8,22,1,"PAH",1,1,714,0)
      4. Change DATA GROWTH AREA
"PKG",8,22,1,"PAH",1,1,715,0)

"PKG",8,22,1,"PAH",1,1,716,0)
    Enter option > 3
"PKG",8,22,1,"PAH",1,1,717,0)
                   =
"PKG",8,22,1,"PAH",1,1,718,0)
    Journaling [E=Enabled/D=Disabled]   <E>   D
"PKG",8,22,1,"PAH",1,1,719,0)
                                              =
"PKG",8,22,1,"PAH",1,1,720,0)
     - Characteristics updated
"PKG",8,22,1,"PAH",1,1,721,0)

"PKG",8,22,1,"PAH",1,1,722,0)
      1. Show GLOBAL Characteristics
"PKG",8,22,1,"PAH",1,1,723,0)
      2. Change Access Privileges
"PKG",8,22,1,"PAH",1,1,724,0)
      3. Change Journaling Capability
"PKG",8,22,1,"PAH",1,1,725,0)
      4. Change DATA GROWTH AREA
"PKG",8,22,1,"PAH",1,1,726,0)

"PKG",8,22,1,"PAH",1,1,727,0)
    Enter option > <press return>
"PKG",8,22,1,"PAH",1,1,728,0)
                   ==============
"PKG",8,22,1,"PAH",1,1,729,0)
    Global > ^<press return>
"PKG",8,22,1,"PAH",1,1,730,0)
              ==============
"PKG",8,22,1,"PAH",1,1,731,0)
8b. CACHE SITES: You may disable journaling for a specific job:
"PKG",8,22,1,"PAH",1,1,732,0)
    %SYS>D DISABLE^%NOJRN
"PKG",8,22,1,"PAH",1,1,733,0)
         ================
"PKG",8,22,1,"PAH",1,1,734,0)
8c. MSM SITES: Consult MSM documentation for how to disable journaling.
"PKG",8,22,1,"PAH",1,1,735,0)
9.  On the KIDS:Installation menu, use the following options to install the
"PKG",8,22,1,"PAH",1,1,736,0)
    Transport Global:
"PKG",8,22,1,"PAH",1,1,737,0)
       Verify Checksums in Transport Global
"PKG",8,22,1,"PAH",1,1,738,0)
       Print Transport Global
"PKG",8,22,1,"PAH",1,1,739,0)
       Compare Transport Global to Current System
"PKG",8,22,1,"PAH",1,1,740,0)
       Backup a Transport Global
"PKG",8,22,1,"PAH",1,1,741,0)
       Install Package(s)
"PKG",8,22,1,"PAH",1,1,742,0)
 Select INSTALL NAME:    XM*7.1*50     Loaded from Distribution  <date/time>
"PKG",8,22,1,"PAH",1,1,743,0)
                         =========
"PKG",8,22,1,"PAH",1,1,744,0)
     => <header>  ;Created on <date/time>
"PKG",8,22,1,"PAH",1,1,745,0)

"PKG",8,22,1,"PAH",1,1,746,0)
 This Distribution was loaded on <date/time> with header of 
"PKG",8,22,1,"PAH",1,1,747,0)
 <header>  ;Created on <date/time>
"PKG",8,22,1,"PAH",1,1,748,0)
 It consisted of the following Install(s):
"PKG",8,22,1,"PAH",1,1,749,0)
 XM*7.1*50
"PKG",8,22,1,"PAH",1,1,750,0)

"PKG",8,22,1,"PAH",1,1,751,0)
    XM*7.1*50
"PKG",8,22,1,"PAH",1,1,752,0)

"PKG",8,22,1,"PAH",1,1,753,0)
 Install Questions for XM*7.1*50
"PKG",8,22,1,"PAH",1,1,754,0)
 Incoming Files:
"PKG",8,22,1,"PAH",1,1,755,0)

"PKG",8,22,1,"PAH",1,1,756,0)
    3.6       BULLETIN  (Partial Definition)
"PKG",8,22,1,"PAH",1,1,757,0)
 Note:  You already have the 'BULLETIN' File.
"PKG",8,22,1,"PAH",1,1,758,0)

"PKG",8,22,1,"PAH",1,1,759,0)
    3.7       MAILBOX
"PKG",8,22,1,"PAH",1,1,760,0)
 *BUT YOU ALREADY HAVE 'MAIL BOX' AS FILE #3.7!
"PKG",8,22,1,"PAH",1,1,761,0)
 Shall I write over your MAIL BOX File? YES// <press enter>
"PKG",8,22,1,"PAH",1,1,762,0)
                                              =============
"PKG",8,22,1,"PAH",1,1,763,0)

"PKG",8,22,1,"PAH",1,1,764,0)
    3.73      MESSAGES TO BE NEW AT A LATER DATE
"PKG",8,22,1,"PAH",1,1,765,0)
 Note:  You already have the 'MESSAGES TO BE NEW AT A LATER DATE' File.
"PKG",8,22,1,"PAH",1,1,766,0)

"PKG",8,22,1,"PAH",1,1,767,0)
    3.8       MAIL GROUP  (Partial Definition)
"PKG",8,22,1,"PAH",1,1,768,0)
 Note:  You already have the 'MAIL GROUP' File.
"PKG",8,22,1,"PAH",1,1,769,0)

"PKG",8,22,1,"PAH",1,1,770,0)
    3.9       MESSAGE
"PKG",8,22,1,"PAH",1,1,771,0)
 Note:  You already have the 'MESSAGE' File.
"PKG",8,22,1,"PAH",1,1,772,0)

"PKG",8,22,1,"PAH",1,1,773,0)
    4.2       DOMAIN  (Partial Definition)
"PKG",8,22,1,"PAH",1,1,774,0)
 Note:  You already have the 'DOMAIN' File.
"PKG",8,22,1,"PAH",1,1,775,0)

"PKG",8,22,1,"PAH",1,1,776,0)
    4.2997    REMOTE USER DIRECTORY  (Partial Definition)
"PKG",8,22,1,"PAH",1,1,777,0)
 Note:  You already have the 'REMOTE USER DIRECTORY' File.
"PKG",8,22,1,"PAH",1,1,778,0)

"PKG",8,22,1,"PAH",1,1,779,0)
    4.2999    MESSAGE STATISTICS  (Partial Definition)
"PKG",8,22,1,"PAH",1,1,780,0)
 Note:  You already have the 'MESSAGE STATISTICS' File.
"PKG",8,22,1,"PAH",1,1,781,0)

"PKG",8,22,1,"PAH",1,1,782,0)
    4.3       MAILMAN SITE PARAMETERS
"PKG",8,22,1,"PAH",1,1,783,0)
 *BUT YOU ALREADY HAVE 'KERNEL SITE PARAMETERS' AS FILE #4.3!
"PKG",8,22,1,"PAH",1,1,784,0)
 Shall I write over your KERNEL SITE PARAMETERS File? YES// <press enter>
"PKG",8,22,1,"PAH",1,1,785,0)
                                                            =============
"PKG",8,22,1,"PAH",1,1,786,0)

"PKG",8,22,1,"PAH",1,1,787,0)
 Want KIDS to Rebuild Menu Trees Upon Completion of Install? YES// YES
"PKG",8,22,1,"PAH",1,1,788,0)
                                                                   ===
"PKG",8,22,1,"PAH",1,1,789,0)

"PKG",8,22,1,"PAH",1,1,790,0)
 ----------------------------------------------------------------------
"PKG",8,22,1,"PAH",1,1,791,0)
 NOTE:  If you want users to be able to use MailMan during the post-init,
"PKG",8,22,1,"PAH",1,1,792,0)
 it's important that you answer NO to the following question,
"PKG",8,22,1,"PAH",1,1,793,0)
 otherwise KIDS will place all options in this patch out of order until
"PKG",8,22,1,"PAH",1,1,794,0)
 the install is finished:
"PKG",8,22,1,"PAH",1,1,795,0)
 ----------------------------------------------------------------------
"PKG",8,22,1,"PAH",1,1,796,0)
 Want to DISABLE Scheduled Options, Menu Options, and Protocols? YES// NO
"PKG",8,22,1,"PAH",1,1,797,0)
                                                                       ==
"PKG",8,22,1,"PAH",1,1,798,0)

"PKG",8,22,1,"PAH",1,1,799,0)
        ... <lots of installation stuff is shown> ...
"PKG",8,22,1,"PAH",1,1,800,0)

"PKG",8,22,1,"PAH",1,1,801,0)
 ----------------------------------------------------------------------
"PKG",8,22,1,"PAH",1,1,802,0)
 NOTE: When the POST-INIT starts, continue with steps 10 through 17.
"PKG",8,22,1,"PAH",1,1,803,0)
 The following is displayed when the post-init starts:
"PKG",8,22,1,"PAH",1,1,804,0)

"PKG",8,22,1,"PAH",1,1,805,0)
 Running Post-Install Routine: ^XMYPOST9
"PKG",8,22,1,"PAH",1,1,806,0)

"PKG",8,22,1,"PAH",1,1,807,0)
Fire xrefs on 'timezone' field of the MailMan site parms file.
"PKG",8,22,1,"PAH",1,1,808,0)
 
"PKG",8,22,1,"PAH",1,1,809,0)
Check/Redo AI xref...
"PKG",8,22,1,"PAH",1,1,810,0)
 ----------------------------------------------------------------------
"PKG",8,22,1,"PAH",1,1,811,0)

"PKG",8,22,1,"PAH",1,1,812,0)
        ... <lots of installation stuff is shown> ...
"PKG",8,22,1,"PAH",1,1,813,0)

"PKG",8,22,1,"PAH",1,1,814,0)
 XM*7.1*50 Installed. 
"PKG",8,22,1,"PAH",1,1,815,0)
               <shows date and time>
"PKG",8,22,1,"PAH",1,1,816,0)
 
"PKG",8,22,1,"PAH",1,1,817,0)
 Install Message sent #<shows message number>
"PKG",8,22,1,"PAH",1,1,818,0)

"PKG",8,22,1,"PAH",1,1,819,0)
 Starting Menu Rebuild:  <shows date and time>
"PKG",8,22,1,"PAH",1,1,820,0)
        ... <shows rebuilding of menus> ...
"PKG",8,22,1,"PAH",1,1,821,0)
 Install Completed.
"PKG",8,22,1,"PAH",1,1,822,0)

"PKG",8,22,1,"PAH",1,1,823,0)
10. Start TaskMan.  If you shut down HL7 filers/LLPs or any other background
"PKG",8,22,1,"PAH",1,1,824,0)
    tasks, you may restart them.
"PKG",8,22,1,"PAH",1,1,825,0)
11. Start the background filer.
"PKG",8,22,1,"PAH",1,1,826,0)
    On the Manage MailMan:Local Delivery Management menu, use the following
"PKG",8,22,1,"PAH",1,1,827,0)
    option to start the background filer:
"PKG",8,22,1,"PAH",1,1,828,0)
       START background filer
"PKG",8,22,1,"PAH",1,1,829,0)
   << Background filer will start soon. >>
"PKG",8,22,1,"PAH",1,1,830,0)
12. Place option XMUSER back in order by entering FileMan and:
"PKG",8,22,1,"PAH",1,1,831,0)
VA FileMan 21.0
"PKG",8,22,1,"PAH",1,1,832,0)
Select OPTION: ENTER OR EDIT FILE ENTRIES  
"PKG",8,22,1,"PAH",1,1,833,0)
               ==========================
"PKG",8,22,1,"PAH",1,1,834,0)
INPUT TO WHAT FILE: OPTION// <press return>
"PKG",8,22,1,"PAH",1,1,835,0)
                             ==============
"PKG",8,22,1,"PAH",1,1,836,0)
EDIT WHICH FIELD: ALL// OUT OF ORDER MESSAGE
"PKG",8,22,1,"PAH",1,1,837,0)
                        ====================    
"PKG",8,22,1,"PAH",1,1,838,0)
THEN EDIT FIELD: <press return>
"PKG",8,22,1,"PAH",1,1,839,0)
                 ==============
"PKG",8,22,1,"PAH",1,1,840,0)
Select OPTION NAME: XMUSER          MailMan Menu
"PKG",8,22,1,"PAH",1,1,841,0)
                    ======
"PKG",8,22,1,"PAH",1,1,842,0)
OUT OF ORDER MESSAGE: Loading MailMan patch XM*7.1*50
"PKG",8,22,1,"PAH",1,1,843,0)
           Replace @
"PKG",8,22,1,"PAH",1,1,844,0)
                  === 
"PKG",8,22,1,"PAH",1,1,845,0)
   SURE YOU WANT TO DELETE? Y  (Yes)
"PKG",8,22,1,"PAH",1,1,846,0)
                           ===
"PKG",8,22,1,"PAH",1,1,847,0)
Select OPTION NAME: <press return>
"PKG",8,22,1,"PAH",1,1,848,0)
                    ==============
"PKG",8,22,1,"PAH",1,1,849,0)
Select OPTION: <press return>
"PKG",8,22,1,"PAH",1,1,850,0)
               ==============
"PKG",8,22,1,"PAH",1,1,851,0)
13. DSM SITES: After patch has installed, rebuild your map set.
"PKG",8,22,1,"PAH",1,1,852,0)
    Many routines have become obsolete and should be removed from the map
"PKG",8,22,1,"PAH",1,1,853,0)
    set.  Here is a new recommended list of routines to map, should your
"PKG",8,22,1,"PAH",1,1,854,0)
    site choose to map routines:
"PKG",8,22,1,"PAH",1,1,855,0)
    Minimum                           Additional
"PKG",8,22,1,"PAH",1,1,856,0)
    -------                           ----------
"PKG",8,22,1,"PAH",1,1,857,0)
    XM                                XMBPOST
"PKG",8,22,1,"PAH",1,1,858,0)
    XMC1                              XMC,XMC1*
"PKG",8,22,1,"PAH",1,1,859,0)
    XMJ*                              XMD
"PKG",8,22,1,"PAH",1,1,860,0)
    XML1CRC,XML4CRC*,XMLSWP*          XMK*
"PKG",8,22,1,"PAH",1,1,861,0)
    XMR,XMR0*                         XML
"PKG",8,22,1,"PAH",1,1,862,0)
    XMS,XMS0*                         XMR1*
"PKG",8,22,1,"PAH",1,1,863,0)
                                      XMS1,XMSMAIL
"PKG",8,22,1,"PAH",1,1,864,0)
                                      XMVVITAE
"PKG",8,22,1,"PAH",1,1,865,0)
                                      XMXSEC
"PKG",8,22,1,"PAH",1,1,866,0)
                                      XMXUTIL
"PKG",8,22,1,"PAH",1,1,867,0)
14. This patch replaces routine ^XMRPCTS1, which contains your site's TWIX
"PKG",8,22,1,"PAH",1,1,868,0)
    routing info.  In step 1, you copied the TWIX info for your site from
"PKG",8,22,1,"PAH",1,1,869,0)
    that routine.  Now, edit the new ^XMRPCTS1 to set your site's TWIX info.
"PKG",8,22,1,"PAH",1,1,870,0)
    Specifically:
"PKG",8,22,1,"PAH",1,1,871,0)
XMRPCTS1     ;(KC-VAMC)/XXX-Simple PCTS front end to MailMan ;03/19/98  11:10
"PKG",8,22,1,"PAH",1,1,872,0)
     ;;7.1;MailMan;**6,50**;Jun 02, 1994
"PKG",8,22,1,"PAH",1,1,873,0)
     N XMUS,XMFM,XMSTR,XMRI,XMTO,XMABORT
"PKG",8,22,1,"PAH",1,1,874,0)
     ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
"PKG",8,22,1,"PAH",1,1,875,0)
     ;All should be sent to XXX@VHA.DMIA the local PCTS Domain
"PKG",8,22,1,"PAH",1,1,876,0)
     ;Edit these for your site.               <---Put your site's TWIX info
"PKG",8,22,1,"PAH",1,1,877,0)
     S XMUS="XXXX" ;Local routing indicator   <---at this line
"PKG",8,22,1,"PAH",1,1,878,0)
     S XMFM="YYYY" ;from line                 <---and this line
"PKG",8,22,1,"PAH",1,1,879,0)
     I XMUS="XXXX"!(XMFM="YYYY") S %="FIX Routing codes !!!"_XMPCTS0("ERR")
"PKG",8,22,1,"PAH",1,1,880,0)
     ;-------------------------------------------------------------
"PKG",8,22,1,"PAH",1,1,881,0)
15. For those sites using class III ^ASKX820, you should edit routine
"PKG",8,22,1,"PAH",1,1,882,0)
^ASKX820.  It calls ENT^XMAD1, an illegal entry point which no longer exists.
"PKG",8,22,1,"PAH",1,1,883,0)
Replace it with a call to ENT1^XMD.
"PKG",8,22,1,"PAH",1,1,884,0)
16. For those sites running class III WordManager, you will have to find the
"PKG",8,22,1,"PAH",1,1,885,0)
    WordManager routine containing D OK^XMA22.  For version 5.01, it's in
"PKG",8,22,1,"PAH",1,1,886,0)
    routine ^WMWTWM.  It may be in other routines in other versions.
"PKG",8,22,1,"PAH",1,1,887,0)
    OK^XMA22 is an undocumented entry point into MailMan which no longer
"PKG",8,22,1,"PAH",1,1,888,0)
    exists.  Edit the WordManager routine as follows:
"PKG",8,22,1,"PAH",1,1,889,0)
Replace:
"PKG",8,22,1,"PAH",1,1,890,0)
        S ^XMB(3.9,XMZ,2,0)="^^"_(J-1)_"^"_(J-1)
"PKG",8,22,1,"PAH",1,1,891,0)
EDIT    ;
"PKG",8,22,1,"PAH",1,1,892,0)
        S DIE="^XMB(3.9,",DA=XMZ,DR=".01;3" D ^DIE
"PKG",8,22,1,"PAH",1,1,893,0)
REC     ;
"PKG",8,22,1,"PAH",1,1,894,0)
        S XMMG=$P(^DIC(3,DUZ,0),"^",1) D DES^XMA21 G:X="^" EXIT
"PKG",8,22,1,"PAH",1,1,895,0)
SEND    ;
"PKG",8,22,1,"PAH",1,1,896,0)
        S XMR="",XMTEXT="^XMB(3.9,XMZ,2," D OK^XMA22,EN1^XMD
"PKG",8,22,1,"PAH",1,1,897,0)
EXIT    U TRM S R7=ZR7,TRM=$I K ZR7,ZMM
"PKG",8,22,1,"PAH",1,1,898,0)
with:
"PKG",8,22,1,"PAH",1,1,899,0)
        S ^XMB(3.9,XMZ,2,0)="^^"_(J-1)_"^"_(J-1)
"PKG",8,22,1,"PAH",1,1,900,0)
EDIT    ;
"PKG",8,22,1,"PAH",1,1,901,0)
        ;S DIE="^XMB(3.9,",DA=XMZ,DR=".01;3" D ^DIE
"PKG",8,22,1,"PAH",1,1,902,0)
REC     ;
"PKG",8,22,1,"PAH",1,1,903,0)
        ;S XMMG=$P(^DIC(3,DUZ,0),"^",1) D DES^XMA21 G:X="^" EXIT
"PKG",8,22,1,"PAH",1,1,904,0)
SEND    ;
"PKG",8,22,1,"PAH",1,1,905,0)
        ;S XMR="",XMTEXT="^XMB(3.9,XMZ,2," D OK^XMA22,EN1^XMD
"PKG",8,22,1,"PAH",1,1,906,0)
ERS     ; EDIT, REC, SEND
"PKG",8,22,1,"PAH",1,1,907,0)
        N XMV,XMRESTR,XMINSTR,XMSUBJ,XMABORT
"PKG",8,22,1,"PAH",1,1,908,0)
        S XMABORT=0
"PKG",8,22,1,"PAH",1,1,909,0)
        S XMSUBJ=XMSUB
"PKG",8,22,1,"PAH",1,1,910,0)
        D INIT^XMVVITAE
"PKG",8,22,1,"PAH",1,1,911,0)
        D ES^XMJMSO
"PKG",8,22,1,"PAH",1,1,912,0)
        D BODY^XMJMS(XMDUZ,XMZ,XMSUBJ,.XMRESTR,.XMABORT)
"PKG",8,22,1,"PAH",1,1,913,0)
        I XMABORT D KILLMSG^XMXUTIL(XMZ) G EXIT
"PKG",8,22,1,"PAH",1,1,914,0)
        D INIT^XMXADDR
"PKG",8,22,1,"PAH",1,1,915,0)
        D TOWHOM^XMJMT(XMDUZ,"Send",.XMINSTR,.XMRESTR,.XMABORT)
"PKG",8,22,1,"PAH",1,1,916,0)
        D:'XMABORT SENDMSG^XMJMSO(XMDUZ,XMZ,XMSUBJ,.XMINSTR,.XMRESTR,.XMABORT)
"PKG",8,22,1,"PAH",1,1,917,0)
        D:XMABORT KILLMSG^XMXUTIL(XMZ)
"PKG",8,22,1,"PAH",1,1,918,0)
        D CLEANUP^XMXADDR
"PKG",8,22,1,"PAH",1,1,919,0)
EXIT    U TRM S R7=ZR7,TRM=$I K ZR7,ZMM
"PKG",8,22,1,"PAH",1,1,920,0)
17. For those sites using class III ^BJMAIL*, you should edit routine ^BJMAIL
"PKG",8,22,1,"PAH",1,1,921,0)
to correct its egregious violations of the SAC.  If you don't, MailMan will
"PKG",8,22,1,"PAH",1,1,922,0)
will not function properly.  Once you have edited ^BJMAIL, you may delete
"PKG",8,22,1,"PAH",1,1,923,0)
routine ^BJMAIL1, since it will no longer be used.  Edit ^BJMAIL as follows:
"PKG",8,22,1,"PAH",1,1,924,0)
Replace:
"PKG",8,22,1,"PAH",1,1,925,0)
MSG    Q:'$D(T)
"PKG",8,22,1,"PAH",1,1,926,0)
  ... thru ...
"PKG",8,22,1,"PAH",1,1,927,0)
WRITE  ;Write a message - not part of the main program.
"PKG",8,22,1,"PAH",1,1,928,0)
With:
"PKG",8,22,1,"PAH",1,1,929,0)
MSG     ;
"PKG",8,22,1,"PAH",1,1,930,0)
        N XMINSTR
"PKG",8,22,1,"PAH",1,1,931,0)
        Q:'$D(T)
"PKG",8,22,1,"PAH",1,1,932,0)
        Q:'$O(T(0))
"PKG",8,22,1,"PAH",1,1,933,0)
        D GROUP
"PKG",8,22,1,"PAH",1,1,934,0)
        Q:$O(TO(""))=""
"PKG",8,22,1,"PAH",1,1,935,0)
        I $G(CONFIRM) S XMINSTR("FLAGS")=$G(XMINSTR("FLAGS"))_"R"
"PKG",8,22,1,"PAH",1,1,936,0)
        I $G(PRIO) S XMINSTR("FLAGS")=$G(XMINSTR("FLAGS"))_"P"
"PKG",8,22,1,"PAH",1,1,937,0)
        I $G(INFO) S XMINSTR("FLAGS")=$G(XMINSTR("FLAGS"))_"I"
"PKG",8,22,1,"PAH",1,1,938,0)
        I '$D(FROM) S FROM=.5
"PKG",8,22,1,"PAH",1,1,939,0)
        D SETFROM^XMD(.FROM,.XMINSTR)
"PKG",8,22,1,"PAH",1,1,940,0)
        I '$D(TITLE) S TITLE="Title not specified by sender"
"PKG",8,22,1,"PAH",1,1,941,0)
        I $L(TITLE)>65 S TITLE=$E(TITLE,1,65)
"PKG",8,22,1,"PAH",1,1,942,0)
        I $L(TITLE)<3 S TITLE=TITLE_"..."
"PKG",8,22,1,"PAH",1,1,943,0)
        D SENDMSG^XMXAPI(FROM,TITLE,"T",.TO,.XMINSTR)
"PKG",8,22,1,"PAH",1,1,944,0)
        K CONFIRM,FROM,GROUP,INFO,PRIO,T,TITLE,TO
"PKG",8,22,1,"PAH",1,1,945,0)
        Q
"PKG",8,22,1,"PAH",1,1,946,0)
GROUP   ;
"PKG",8,22,1,"PAH",1,1,947,0)
        Q:$G(GROUP)=""
"PKG",8,22,1,"PAH",1,1,948,0)
        I +GROUP=GROUP S:$D(^XMB(3.8,GROUP,0)) TO($P(^XMB(3.8,GROUP,0),U))="" Q
"PKG",8,22,1,"PAH",1,1,949,0)
        S TO("G."_GROUP)=""
"PKG",8,22,1,"PAH",1,1,950,0)
        Q
"PKG",8,22,1,"PAH",1,1,951,0)
WRITE   ;Write a message - not part of the main program
"PKG",8,22,1,"PAH",1,1,952,0)

"PKG",8,22,1,"PAH",1,1,953,0)
 ----------------------------------------------------------------------
"PKG",8,22,1,"PAH",1,1,954,0)
 NOTE: Once the POST-INIT stops, continue with steps 18 through the end.
"PKG",8,22,1,"PAH",1,1,955,0)
 ----------------------------------------------------------------------
"PKG",8,22,1,"PAH",1,1,956,0)

"PKG",8,22,1,"PAH",1,1,957,0)
18.  If you disabled journaling in step 8, you should enable it again here.
"PKG",8,22,1,"PAH",1,1,958,0)
18a. DSM SITES:
"PKG",8,22,1,"PAH",1,1,959,0)
    >D ^%GLOMAN
"PKG",8,22,1,"PAH",1,1,960,0)
    Global Management Utility
"PKG",8,22,1,"PAH",1,1,961,0)
    Global > ^XMBX
"PKG",8,22,1,"PAH",1,1,962,0)
              ====
"PKG",8,22,1,"PAH",1,1,963,0)
    ^XMBX is currently defined
"PKG",8,22,1,"PAH",1,1,964,0)

"PKG",8,22,1,"PAH",1,1,965,0)
      1. Show GLOBAL Characteristics
"PKG",8,22,1,"PAH",1,1,966,0)
      2. Change Access Privileges
"PKG",8,22,1,"PAH",1,1,967,0)
      3. Change Journaling Capability
"PKG",8,22,1,"PAH",1,1,968,0)
      4. Change DATA GROWTH AREA
"PKG",8,22,1,"PAH",1,1,969,0)

"PKG",8,22,1,"PAH",1,1,970,0)
    Enter option > 3
"PKG",8,22,1,"PAH",1,1,971,0)
                   =
"PKG",8,22,1,"PAH",1,1,972,0)
    Journaling [E=Enabled/D=Disabled]   <D>   E
"PKG",8,22,1,"PAH",1,1,973,0)
                                              =
"PKG",8,22,1,"PAH",1,1,974,0)
     - Characteristics updated
"PKG",8,22,1,"PAH",1,1,975,0)

"PKG",8,22,1,"PAH",1,1,976,0)
      1. Show GLOBAL Characteristics
"PKG",8,22,1,"PAH",1,1,977,0)
      2. Change Access Privileges
"PKG",8,22,1,"PAH",1,1,978,0)
      3. Change Journaling Capability
"PKG",8,22,1,"PAH",1,1,979,0)
      4. Change DATA GROWTH AREA
"PKG",8,22,1,"PAH",1,1,980,0)

"PKG",8,22,1,"PAH",1,1,981,0)
    Enter option > <press return>
"PKG",8,22,1,"PAH",1,1,982,0)
                   ==============
"PKG",8,22,1,"PAH",1,1,983,0)
    Global > ^<press return>
"PKG",8,22,1,"PAH",1,1,984,0)
              ==============
"PKG",8,22,1,"PAH",1,1,985,0)
18b. CACHE SITES:
"PKG",8,22,1,"PAH",1,1,986,0)
    %SYS>D ENABLE^%NOJRN
"PKG",8,22,1,"PAH",1,1,987,0)
         ===============
"PKG",8,22,1,"PAH",1,1,988,0)
18c. MSM SITES: Consult MSM documentation for how to enable journaling.
"PKG",8,22,1,"PAH",1,1,989,0)
19. For those sites running POP3, you should load patch XM*7.1*71 immediately
"PKG",8,22,1,"PAH",1,1,990,0)
    after loading this patch.  Other sites may load patch XM*7.1*71 at their
"PKG",8,22,1,"PAH",1,1,991,0)
    leisure.
"PKG",8,22,1,"PAH",1,1,992,0)
20. On the KIDS:Utilites menu, use the following option to review the
"PKG",8,22,1,"PAH",1,1,993,0)
install:
"PKG",8,22,1,"PAH",1,1,994,0)
    Install File Print
"PKG",8,22,1,"PAH",1,1,995,0)
Review the automatic domain name changes which occurred during the post-init.
"PKG",8,22,1,"PAH",1,1,996,0)
If there were any errors noted for a particular domain, that domain did not
"PKG",8,22,1,"PAH",1,1,997,0)
have its new name added as a synonym.  (Error messages are preceded by ***,
"PKG",8,22,1,"PAH",1,1,998,0)
and tell you what was wrong.)  You must correct the error manually and add
"PKG",8,22,1,"PAH",1,1,999,0)
the synonym manually.  Remember, you are not to change any domain name.
"PKG",8,22,1,"PAH",1,1,1000,0)
Just add the new name as a synonym. 
"PKG",8,22,1,"PAH",1,1,1001,0)
===========================================================================
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
248
"RTN","XM")
0^81^B62255854
"RTN","XM",1,0)
XM ;ISC-SF/GMB-MailMan Main Driver ;06/25/99  08:00
"RTN","XM",2,0)
 ;;7.1;MailMan;**17,35,50**;Jun 02, 1994
"RTN","XM",3,0)
 ; Replaces ^XM,EN^XMA01,INTRO^XMA6,REC^XMA22,MULTI^XM0,^XMAK (ISC-WASH/CAP/THM)
"RTN","XM",4,0)
 ; Entry points (DBIA 10064):
"RTN","XM",5,0)
 ; ^XM       Programmer entry into MailMan
"RTN","XM",6,0)
 ; CHECKIN   Meant to be included in option ENTRY ACTION
"RTN","XM",7,0)
 ; CHECKOUT  Meant to be included in option EXIT ACTION
"RTN","XM",8,0)
 ; EN        Option entry point into MailMan
"RTN","XM",9,0)
 ; HEADER    Displays user intro when entering MailMan
"RTN","XM",10,0)
 ; KILL      Kill MailMan variables
"RTN","XM",11,0)
 ; N1        Create a mailbox
"RTN","XM",12,0)
 ; NEW       Create a mailbox
"RTN","XM",13,0)
 ; $$NU      Tell user how many new messages he has
"RTN","XM",14,0)
 ; 
"RTN","XM",15,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XM",16,0)
 ; NEWMBOX   XMMGR-NEW-MAIL-BOX - Create a mailbox
"RTN","XM",17,0)
 ; KILL      XMQDISP exit action
"RTN","XM",18,0)
 N XMXUSEC,XMABORT
"RTN","XM",19,0)
 D KILL^XUSCLEAN
"RTN","XM",20,0)
 I '$D(IOF) S IOP="HOME" D HOME^%ZIS
"RTN","XM",21,0)
 D EN
"RTN","XM",22,0)
 Q:'$D(XMDUZ)
"RTN","XM",23,0)
 D:'$D(^DOPT("XM")) OPTIONS
"RTN","XM",24,0)
 S XMABORT=0
"RTN","XM",25,0)
 F  D  Q:XMABORT  ; Programmer option choices
"RTN","XM",26,0)
 . N DIC,X,Y
"RTN","XM",27,0)
 . S XMXUSEC=$S($G(DUZ(0))="@":1,$D(^XUSEC("XUPROG",XMDUZ)):1,$D(^XUSEC("XUPROGMODE",XMDUZ)):1,1:0)
"RTN","XM",28,0)
 . S DIC="^DOPT(""XM"","
"RTN","XM",29,0)
 . S DIC(0)="AEQMZ"
"RTN","XM",30,0)
 . S DIC("S")="Q:XMXUSEC  I ^(0)'[""LOAD"""
"RTN","XM",31,0)
 . W !!
"RTN","XM",32,0)
 . D ^DIC I Y<0 S XMABORT=1 Q
"RTN","XM",33,0)
 . K DIC,X
"RTN","XM",34,0)
 . X $P(Y(0),U,2,999)
"RTN","XM",35,0)
 D CLEANUP
"RTN","XM",36,0)
 Q
"RTN","XM",37,0)
EN ;Initialize
"RTN","XM",38,0)
 ;N XMDUZ,XMDISPI,XMDUN,XMNOSEND,XMV
"RTN","XM",39,0)
 Q:$D(DUZ("SAV"))  ; Set by option XUTESTUSER
"RTN","XM",40,0)
 D SETUP
"RTN","XM",41,0)
 D HEADER
"RTN","XM",42,0)
 Q
"RTN","XM",43,0)
SETUP ;
"RTN","XM",44,0)
 I $G(IO)'=$G(IO(0))!'$D(IO(0)) D HOME^%ZIS U IO
"RTN","XM",45,0)
 D CHECK^XMKPL ; Make sure background filers are running.
"RTN","XM",46,0)
 I '$D(IOF)!'$D(IOM)!'$D(IOSL) S IOP="" D ^%ZIS K IOP
"RTN","XM",47,0)
 S XMDUZ=DUZ
"RTN","XM",48,0)
 D INIT^XMVVITAE
"RTN","XM",49,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XM",50,0)
 Q
"RTN","XM",51,0)
HEADER ;
"RTN","XM",52,0)
 N XMPERSON
"RTN","XM",53,0)
 I $D(XMV("SYSERR")) D SYSERR(.XMV) S:$D(XMMENU) XQUIT="" Q  ; Fatal Errors
"RTN","XM",54,0)
 I $D(XMV("ERROR")) D ERROR(.XMV) S:$D(XMMENU) XQUIT="" Q  ; Fatal Errors
"RTN","XM",55,0)
 I $D(XMV("WARNING")) D WARNING(XMDUZ,.XMV)
"RTN","XM",56,0)
 W !!,XMV("VERSION")," service for ",XMV("NETNAME")
"RTN","XM",57,0)
 I XMDUZ'=DUZ W !," (Surrogate: ",XMV("DUZ NAME"),")"
"RTN","XM",58,0)
 I XMDUZ'=.6 D
"RTN","XM",59,0)
 . W !,$S(XMDUZ=DUZ:"You",1:XMV("NAME"))," last used MailMan: ",XMV("LAST USE")
"RTN","XM",60,0)
 . I $D(XMV("BANNER")) W !,$S(XMDUZ=DUZ:"Your",1:XMV("NAME")_"'s")," current banner: ",XMV("BANNER")
"RTN","XM",61,0)
 . ;E  W !,$S(XMDUZ=DUZ:"You have",1:XMV("NAME")_" has")," no banner."
"RTN","XM",62,0)
 W !,$S(XMDUZ=DUZ:"You have ",1:XMV("NAME")_" has "),$S(XMV("NEW MSGS")=0:"no",1:XMV("NEW MSGS"))," new message",$S(XMV("NEW MSGS")=1:".",1:"s.")
"RTN","XM",63,0)
 I XMV("NEW MSGS")<0!(XMV("NEW MSGS")&'$D(^XMB(3.7,XMDUZ,"N0")))!('XMV("NEW MSGS")&$D(^XMB(3.7,XMDUZ,"N0"))) D
"RTN","XM",64,0)
 . W !,"There's a discrepancy in the 'new message' count.  Checking the mailbox..."
"RTN","XM",65,0)
 . D USER^XMUT4(XMDUZ)
"RTN","XM",66,0)
 Q
"RTN","XM",67,0)
SYSERR(XMV) ;
"RTN","XM",68,0)
 N I
"RTN","XM",69,0)
 S I=0
"RTN","XM",70,0)
 F  S I=$O(XMV("SYSERR",I)) Q:I=""  W !,*7,XMV("SYSERR",I)
"RTN","XM",71,0)
 K XMDUZ
"RTN","XM",72,0)
 Q
"RTN","XM",73,0)
ERROR(XMV) ;
"RTN","XM",74,0)
 N I
"RTN","XM",75,0)
 S I=0
"RTN","XM",76,0)
 F  S I=$O(XMV("ERROR",I)) Q:I=""  W !,*7,XMV("ERROR",I)
"RTN","XM",77,0)
 K XMDUZ
"RTN","XM",78,0)
 Q
"RTN","XM",79,0)
WARNING(XMDUZ,XMV) ;
"RTN","XM",80,0)
 D:$D(XMV("WARNING",5)) POST(XMV("WARNING",5))
"RTN","XM",81,0)
 D:$D(XMV("WARNING",4)) MULTI
"RTN","XM",82,0)
 D:$D(XMV("WARNING",3)) INTRO(XMDUZ)
"RTN","XM",83,0)
 D:$D(XMV("WARNING",2)) UNSENT(XMDUZ)
"RTN","XM",84,0)
 D:$D(XMV("WARNING",1)) LISTPRI^XMJML(XMDUZ)
"RTN","XM",85,0)
 ;D:$D(XMV("WARNING",1)) PRIO^XMJML(XMDUZ)
"RTN","XM",86,0)
 K XMV("WARNING")
"RTN","XM",87,0)
 Q
"RTN","XM",88,0)
POST(XMMSG) ;
"RTN","XM",89,0)
 W !!,XMMSG   ; "POSTMASTER has X baskets."
"RTN","XM",90,0)
 W !,"The POSTMASTER may not have a basket with an internal number >999"
"RTN","XM",91,0)
 W !,"without having problems.  Problems with network mail delivery will"
"RTN","XM",92,0)
 W !,"soon occur if you do not take corrective action!"
"RTN","XM",93,0)
 W !!,"Contact your ISC for help.",!!,*7
"RTN","XM",94,0)
 Q
"RTN","XM",95,0)
MULTI ;
"RTN","XM",96,0)
 W *7,!!,"It appears someone is signed on as you already."
"RTN","XM",97,0)
 W !!,"YOU MAY NOT SEND MAIL OR RESPOND TO MAIL IN THIS SESSION !!!"
"RTN","XM",98,0)
 W !,"(Only the 1st of multiple MailMan sessions may send or respond to mail.)"
"RTN","XM",99,0)
 Q
"RTN","XM",100,0)
INTRO(XMDUZ) ;
"RTN","XM",101,0)
 W !!,"You have not yet introduced yourself to the group."
"RTN","XM",102,0)
 W !,"Please enter a short introduction, so that others may use"
"RTN","XM",103,0)
 W !,"the HELP option to find out more about you.",!!
"RTN","XM",104,0)
 W !,"You may change your INTRODUCTION later"
"RTN","XM",105,0)
 W !,"under 'Personal Preferences|User Options Edit.",!!
"RTN","XM",106,0)
 N DIR S DIR(0)="E" D ^DIR Q:$D(DIRUT)
"RTN","XM",107,0)
 N DWPK,DIC
"RTN","XM",108,0)
 S DWPK=1,DIC="^XMB(3.7,XMDUZ,1,"
"RTN","XM",109,0)
 D EN^DIWE
"RTN","XM",110,0)
 Q
"RTN","XM",111,0)
UNSENT(XMDUZ) ;
"RTN","XM",112,0)
 N XMREC,XMZ
"RTN","XM",113,0)
 S XMREC=^XMB(3.7,XMDUZ,"T")
"RTN","XM",114,0)
 S XMZ=$P(XMREC,U) Q:'XMZ
"RTN","XM",115,0)
 I $P(XMREC,U,3) D RECOVER^XMJMR(XMDUZ,XMZ,$P(XMREC,U,3)) Q  ; Reply
"RTN","XM",116,0)
 D RECOVER^XMJMS(XMDUZ,XMZ,$P(XMREC,U,4))  ; Original Message (w/BLOB)
"RTN","XM",117,0)
 Q
"RTN","XM",118,0)
CHECKIN ;
"RTN","XM",119,0)
 Q:$D(XMMENU(0))   ; Set by option XMUSER or other options using MailMan
"RTN","XM",120,0)
 Q:$D(DUZ("SAV"))  ; Set by option XUTESTUSER
"RTN","XM",121,0)
 D SETUP
"RTN","XM",122,0)
 I $D(XMV("WARNING")) D WARNING(XMDUZ,.XMV)
"RTN","XM",123,0)
 Q
"RTN","XM",124,0)
CHECKOUT ;
"RTN","XM",125,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XM",126,0)
 Q:$D(XMMENU(0))
"RTN","XM",127,0)
 K XMDISPI,XMDUN,XMDUZ,XMNOSEND,XMPRIV,XMV
"RTN","XM",128,0)
 L -^XMB(3.7,"AD",DUZ)
"RTN","XM",129,0)
 Q
"RTN","XM",130,0)
LOCK ;
"RTN","XM",131,0)
 S Y=1
"RTN","XM",132,0)
 Q:'$D(XMMENU(0))
"RTN","XM",133,0)
 L +^XMB(3.7,"AD",DUZ):0 E  D MULTI S Y=-1
"RTN","XM",134,0)
 Q
"RTN","XM",135,0)
UNLOCK ;
"RTN","XM",136,0)
 Q:'$D(XMMENU(0))
"RTN","XM",137,0)
 L -^XMB(3.7,"AD",DUZ)
"RTN","XM",138,0)
 Q
"RTN","XM",139,0)
CHK ;
"RTN","XM",140,0)
 K ^TMP("XMY",$J),^TMP("XMY0",$J)
"RTN","XM",141,0)
 S XMDUZ=$G(XMDUZ,DUZ)
"RTN","XM",142,0)
 Q:XMDUZ=.6
"RTN","XM",143,0)
 D NUS(0)
"RTN","XM",144,0)
 Q
"RTN","XM",145,0)
NU(XMFORCE) ;API for new message display
"RTN","XM",146,0)
 ; XMFORCE  (in) 1=force new display; 0=display only if recent receipt
"RTN","XM",147,0)
 N XMNEW
"RTN","XM",148,0)
 D NUS(XMFORCE,.XMNEW)
"RTN","XM",149,0)
 Q XMNEW
"RTN","XM",150,0)
NUS(XMFORCE,XMNEW) ; new message display
"RTN","XM",151,0)
 ; XMFORCE  (in) 1=force new display; 0=display only if recent receipt
"RTN","XM",152,0)
 ; XMNEW    (out) number of new messages
"RTN","XM",153,0)
 ; XMLAST   last message arrival date (FM format)
"RTN","XM",154,0)
 N XMREC,XMNEW2U,XMLAST
"RTN","XM",155,0)
 S XMDUZ=$G(XMDUZ,DUZ)
"RTN","XM",156,0)
 S XMREC=$$NEWS^XMXUTIL(XMDUZ,$D(DUZ("SAV")))
"RTN","XM",157,0)
 Q:XMREC=-1
"RTN","XM",158,0)
 S XMNEW=$P(XMREC,U,1)
"RTN","XM",159,0)
 I 'XMFORCE,'XMNEW Q
"RTN","XM",160,0)
 S XMLAST=$P(XMREC,U,4)
"RTN","XM",161,0)
 S XMNEW2U=$P(XMREC,U,5)
"RTN","XM",162,0)
 I XMNEW2U!XMFORCE D
"RTN","XM",163,0)
 . W $S(XMDUZ=DUZ:"You have ",1:$$NAME^XMXUTIL(XMDUZ)_" has "),$S('XMNEW:"no",1:XMNEW)," new message",$S(XMNEW=1:"",1:"s"),"."
"RTN","XM",164,0)
 . Q:'XMNEW
"RTN","XM",165,0)
 . W "  (Last arrival: ",$$MMDT^XMXUTIL1(XMLAST),")"
"RTN","XM",166,0)
 D:$P(XMREC,U,2) NOTEPRIO
"RTN","XM",167,0)
 Q
"RTN","XM",168,0)
NOTEPRIO ;
"RTN","XM",169,0)
 D ZIS
"RTN","XM",170,0)
 W *7,!!,$G(IORVON),"There is PRIORITY Mail!",!!,$G(IORVOFF)
"RTN","XM",171,0)
 Q
"RTN","XM",172,0)
ZIS ;
"RTN","XM",173,0)
 Q:$D(IORVON)
"RTN","XM",174,0)
 N X
"RTN","XM",175,0)
 S X="IORVON;IORVOFF;IOBON;IOBOFF"
"RTN","XM",176,0)
 D ENDR^%ZISS
"RTN","XM",177,0)
 Q
"RTN","XM",178,0)
NEWMBOX ; Create a mailbox for a user
"RTN","XM",179,0)
 N DIC,XMZ
"RTN","XM",180,0)
 W !,"Ready to create a mailbox for a user."
"RTN","XM",181,0)
 W !,"You will only be able to select a user who does not already have a mailbox."
"RTN","XM",182,0)
 S DIC="^VA(200,"
"RTN","XM",183,0)
 S DIC(0)="AEQM"
"RTN","XM",184,0)
 S DIC("S")="I '$D(^XMB(3.7,Y,0))"
"RTN","XM",185,0)
 D ^DIC Q:Y=-1
"RTN","XM",186,0)
 S Y=+Y
"RTN","XM",187,0)
 D NEW
"RTN","XM",188,0)
 W !,"Mailbox created."
"RTN","XM",189,0)
 Q
"RTN","XM",190,0)
N1 S Y=XMDUZ
"RTN","XM",191,0)
NEW ; CREATE MAILBOX 4 NEW USER
"RTN","XM",192,0)
N L +^XMB(3.7,0):0 E  H 1 G N
"RTN","XM",193,0)
 I $D(XMZ) D
"RTN","XM",194,0)
 . D CRE8MBOX^XMXMBOX(Y,DT)
"RTN","XM",195,0)
 E  D
"RTN","XM",196,0)
 . D CRE8MBOX^XMXMBOX(Y)
"RTN","XM",197,0)
 L -^XMB(3.7,0)
"RTN","XM",198,0)
 D:$D(XMERR) SHOW^XMJERR
"RTN","XM",199,0)
 Q
"RTN","XM",200,0)
KILL ; EXIT execute for MailMan options
"RTN","XM",201,0)
CLEANUP ;
"RTN","XM",202,0)
 K XMV,XMDISPI,XMDUNO,XMDUN,XMDUZ,XMPRIV,XMERR
"RTN","XM",203,0)
 K:$D(^TMP("XMERR",$J)) ^TMP("XMERR",$J)
"RTN","XM",204,0)
 D KILLALL
"RTN","XM",205,0)
 D UNLOCK
"RTN","XM",206,0)
 Q
"RTN","XM",207,0)
KILLALL ;All variables except XMDISPI,XMDUZ,XMDUN and XMPRIV are killed here on
"RTN","XM",208,0)
 ;exit from the MailMan package or by calls to this code.
"RTN","XM",209,0)
 K A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,V,W,X,Z,%,%0,%1,%2,%3,%4
"RTN","XM",210,0)
 K XM,XMA0,XMA21A,XMAPBLOB,XMB0,XMC0,XMD0,XMDUNO,XME0,XMF0,XMG0,XMP,XMQF,XMQUE
"RTN","XM",211,0)
 K XMKEY,XMA,XMB,XMBEG,XMC,XMCL,XMCNT,XMD,XMDI,XMDX,XME,XMF,XMG,XMI,XMJ
"RTN","XM",212,0)
 K XMK,XMKO,XMKS,XML,XMR,XMRC,XMRES,XMS,XMSUB,XMT,XMU,XMY,XMY0,XMZ,XMZ1,XMZ2,XMKM
"RTN","XM",213,0)
 K XMCH,XMCI,XMDN,XMMA,XMZO,XMCT,XMRW,XMLOAD,XMCOPY,XMMG,XMOUT
"RTN","XM",214,0)
 K XMDT,XMKK,XMKN,XMLOC,XMLOCK,XMM,XMN,XMRL,XMAN,XMANSP,XMXD,XMDATE,XMPG,XMSEC,XMSEN,XMTYPE,XMKEYTRY
"RTN","XM",215,0)
 Q
"RTN","XM",216,0)
DSP ;
"RTN","XM",217,0)
 D INIT^XMVVITAE
"RTN","XM",218,0)
 Q
"RTN","XM",219,0)
OPTIONS ; Set up options
"RTN","XM",220,0)
 N DIK,I,X
"RTN","XM",221,0)
 K ^DOPT("XM")
"RTN","XM",222,0)
 S DIK="^DOPT(""XM"","
"RTN","XM",223,0)
 S ^DOPT("XM",0)="MailMan Option^1N^"
"RTN","XM",224,0)
 F I=1:1 S X=$T(T+I) Q:X=" ;;"  S ^DOPT("XM",I,0)=$E(X,4,255)
"RTN","XM",225,0)
 D IXALL^DIK
"RTN","XM",226,0)
 Q
"RTN","XM",227,0)
T ;;TABLE
"RTN","XM",228,0)
 ;;SEND A MESSAGE^D SEND^XMJMS
"RTN","XM",229,0)
 ;;READ/MANAGE MESSAGES^D MANAGE^XMJBM
"RTN","XM",230,0)
 ;;NEW MESSAGES AND RESPONSES^D NEW^XMJBN
"RTN","XM",231,0)
 ;;LOAD PACKMAN MESSAGE^D PAKMAN^XMJMS
"RTN","XM",232,0)
 ;;EDIT USER OPTIONS^D EDIT^XMVVITA
"RTN","XM",233,0)
 ;;PERSONAL MAIL GROUP EDIT^D PERSONAL^XMVGROUP
"RTN","XM",234,0)
 ;;JOIN MAIL GROUP^D ENROLL^XMVGROUP
"RTN","XM",235,0)
 ;;MAILBOX CONTENTS LIST^D LISTMBOX^XMJBL
"RTN","XM",236,0)
 ;;LOG-IN TO ANOTHER SYSTEM (TalkMan)^D TALK^XMC
"RTN","XM",237,0)
 ;;QUERY/SEARCH FOR MESSAGES^D FIND^XMJMF
"RTN","XM",238,0)
 ;;BLOB SEND^D BLOB^XMA2B
"RTN","XM",239,0)
 ;;
"RTN","XM",240,0)
 ;;**OBSOLETE**
"RTN","XM",241,0)
 ;;
"RTN","XM0")
0^148^B1132
"RTN","XM0",1,0)
XM0 ;(WASH ISC)/CAP/THM- * OBSOLETE * ;02/02/99  13:13
"RTN","XM0",2,0)
 ;;7.1;MailMan;**4,42,50**;Jun 02, 1994
"RTN","XM0",3,0)
 Q
"RTN","XMA")
0^125^B122169
"RTN","XMA",1,0)
XMA ;(WASH ISC)/THM/CAP-MailMan READ/NEW OPTIONS ;05/28/99  09:04
"RTN","XMA",2,0)
 ;;7.1;MailMan;**4,18,50**;Jun 02, 1994
"RTN","XMA",3,0)
 ; Entry points (DBIA 1284):
"RTN","XMA",4,0)
 ; REC    Read Mail
"RTN","XMA",5,0)
 ;
"RTN","XMA",6,0)
REC ; Read (Manage) Mail
"RTN","XMA",7,0)
 ; All input variables ignored
"RTN","XMA",8,0)
 I '$G(DUZ) W "  User ID needed (DUZ) !!" Q
"RTN","XMA",9,0)
 D EN^XM,MANAGE^XMJBM
"RTN","XMA",10,0)
 Q
"RTN","XMA",11,0)
NNEW Q
"RTN","XMA0")
0^126^B1657853
"RTN","XMA0",1,0)
XMA0 ;(WASH ISC)/CAP/THM-Print Message ;06/24/99  10:53
"RTN","XMA0",2,0)
 ;;7.1;MailMan;**15,36,50**;Jun 02, 1994
"RTN","XMA0",3,0)
 ; Entry points (DBIA 1230):
"RTN","XMA0",4,0)
 ; ENTPRT  Print a message (interactive)
"RTN","XMA0",5,0)
 ; HDR     Print a message (headerless)
"RTN","XMA0",6,0)
 ; PR2     Print a message
"RTN","XMA0",7,0)
 ;
"RTN","XMA0",8,0)
ENTPRT ; Print a message (interactive)
"RTN","XMA0",9,0)
 ; Needs:
"RTN","XMA0",10,0)
 ; DUZ
"RTN","XMA0",11,0)
 ; XMZ  Message number
"RTN","XMA0",12,0)
 ; XMK  Basket number
"RTN","XMA0",13,0)
 N XMV
"RTN","XMA0",14,0)
 D INIT^XMVVITAE
"RTN","XMA0",15,0)
 D PRINT^XMJMP(XMDUZ,XMK,$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1),XMZ)
"RTN","XMA0",16,0)
 Q
"RTN","XMA0",17,0)
HDR ; Print a message (headerless)
"RTN","XMA0",18,0)
 ; Needs:
"RTN","XMA0",19,0)
 ; DUZ
"RTN","XMA0",20,0)
 ; XMK    basket number
"RTN","XMA0",21,0)
 ; XMZ    message number
"RTN","XMA0",22,0)
 ; IO     output device
"RTN","XMA0",23,0)
 ; Optional:
"RTN","XMA0",24,0)
 ; XMDUZ
"RTN","XMA0",25,0)
 ; $P(XMTYPE,";",6) response from which to start printing
"RTN","XMA0",26,0)
 D PRINTIT(0,$G(XMTYPE))
"RTN","XMA0",27,0)
 Q
"RTN","XMA0",28,0)
PR2 ; Print a message
"RTN","XMA0",29,0)
 ; Needs:
"RTN","XMA0",30,0)
 ; DUZ
"RTN","XMA0",31,0)
 ; XMK    basket number
"RTN","XMA0",32,0)
 ; XMZ    message number
"RTN","XMA0",33,0)
 ; IO     output device
"RTN","XMA0",34,0)
 ; Optional:
"RTN","XMA0",35,0)
 ; XMDUZ
"RTN","XMA0",36,0)
 ; $P(XMTYPE,";",6) response from which to start printing
"RTN","XMA0",37,0)
 D PRINTIT(1,$G(XMTYPE))
"RTN","XMA0",38,0)
 Q
"RTN","XMA0",39,0)
PRINTIT(XMPRTHDR,XMWHICH) ;
"RTN","XMA0",40,0)
 N XMV,XMKN,XMRESPS,XMPTR,XMRECIPS
"RTN","XMA0",41,0)
 Q:XMWHICH=U
"RTN","XMA0",42,0)
 D INIT^XMVVITAE
"RTN","XMA0",43,0)
 S XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1)
"RTN","XMA0",44,0)
 D RESPONSE^XMJMP(XMDUZ,XMZ,.XMRESPS,.XMPTR)
"RTN","XMA0",45,0)
 S XMRECIPS=0  ; don't print recipients
"RTN","XMA0",46,0)
 S XMWHICH=+P(XMWHICH,";",6)_"-"_XMRESPS  ; print from
"RTN","XMA0",47,0)
 D PRINTMSG^XMJMP
"RTN","XMA0",48,0)
 Q
"RTN","XMA01")
0^173^B1734
"RTN","XMA01",1,0)
XMA01 ;(WASH ISC)/CAP- * OBSOLETE * ;12/15/97  09:58
"RTN","XMA01",2,0)
 ;;7.1;MailMan;**36,50**;Jun 02, 1994
"RTN","XMA01",3,0)
 Q
"RTN","XMA02")
0^181^B1207
"RTN","XMA02",1,0)
XMA02 ;(WASH ISC)/CAP/THM- * OBSOLETE * ;03/10/98  09:58
"RTN","XMA02",2,0)
 ;;7.1;MailMan;**4,5,50**;Jun 02, 1994
"RTN","XMA03")
0^82^B111909
"RTN","XMA03",1,0)
XMA03 ;(WASH ISC)/CAP/THM-Resequence messages ;05/06/99  15:23
"RTN","XMA03",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMA03",3,0)
 ; Entry points (DBIA 1150):
"RTN","XMA03",4,0)
 ; $$REN  Resequence messages in a user's basket
"RTN","XMA03",5,0)
 ;
"RTN","XMA03",6,0)
REN(XMDUZ,XMK) ;API entry for Renumbering Mail Basket
"RTN","XMA03",7,0)
 ; XMDUZ  User's DUZ
"RTN","XMA03",8,0)
 ; XMK    Basket number
"RTN","XMA03",9,0)
 N XMMSG
"RTN","XMA03",10,0)
 D RSEQBSKT^XMXAPIB(XMDUZ,XMK,.XMMSG)
"RTN","XMA03",11,0)
 Q $G(XMMSG)
"RTN","XMA0A")
0^192^B1830
"RTN","XMA0A",1,0)
XMA0A ;(WASH ISC)/CAP- * OBSOLETE * ;12/15/97  10:01
"RTN","XMA0A",2,0)
 ;;7.1;MailMan;**7,16,50**;Jun 02, 1994
"RTN","XMA0A",3,0)
 Q
"RTN","XMA1")
0^149^B1445
"RTN","XMA1",1,0)
XMA1 ;(WASH ISC)/CAP/THM- * OBSOLETE * ;12/15/97  09:52
"RTN","XMA1",2,0)
 ;;7.1;MailMan;**31,36,40,50**;Jun 02, 1994
"RTN","XMA1",3,0)
 Q
"RTN","XMA10")
0^158^B1733
"RTN","XMA10",1,0)
XMA10 ;(WASH ISC)/CAP/THM- * OBSOLETE * ;12/15/97  09:56
"RTN","XMA10",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMA10",3,0)
 Q
"RTN","XMA11")
0^164^B38656
"RTN","XMA11",1,0)
XMA11 ;(WASH ISC)/CAP/THM-Edit message info only ;05/12/99  08:38
"RTN","XMA11",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMA11",3,0)
 ; Entry point (DBIA ?):
"RTN","XMA11",4,0)
 ; INFO   Interactive change a message's 'information only' field.
"RTN","XMA11",5,0)
INFO(DA) ; Change Information Only Status
"RTN","XMA11",6,0)
 N DIE,DR
"RTN","XMA11",7,0)
 S DIE=3.9,DR="1.97"
"RTN","XMA11",8,0)
 D ^DIE
"RTN","XMA11",9,0)
 Q 0
"RTN","XMA11A")
0^127^B525580
"RTN","XMA11A",1,0)
XMA11A ;(WASH ISC)/CAP/THM-Send a Message/Answer ;05/26/99  10:01
"RTN","XMA11A",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMA11A",3,0)
 ; Entry points (DBIA 1233):
"RTN","XMA11A",4,0)
 ; WRITE  Send a message or Answer a message
"RTN","XMA11A",5,0)
 ;
"RTN","XMA11A",6,0)
WRITE ; Send a message or Answer a message
"RTN","XMA11A",7,0)
 ; Needs:
"RTN","XMA11A",8,0)
 ; XMDUZ  user number
"RTN","XMA11A",9,0)
 ; X      if $E(X)="A", then send an answer, else send a message
"RTN","XMA11A",10,0)
 ; XMZ    original message number, if we are sending an answer
"RTN","XMA11A",11,0)
 N XMV
"RTN","XMA11A",12,0)
 D INIT^XMVVITAE
"RTN","XMA11A",13,0)
 I $E(X)'="A" D SEND^XMJMS Q
"RTN","XMA11A",14,0)
 N XMZREC
"RTN","XMA11A",15,0)
 S XMZREC=^XMB(3.9,XMZ,0)
"RTN","XMA11A",16,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMA11A",17,0)
 I '$$ANSWER^XMXSEC(XMDUZ,XMZ,XMZREC) D SHOW^XMJERR Q
"RTN","XMA11A",18,0)
 D ANSWER^XMJMA(XMDUZ,XMZ,$P(XMZREC,U,1),$P(XMZREC,U,2))
"RTN","XMA11A",19,0)
 Q
"RTN","XMA11B")
0^174^B2201
"RTN","XMA11B",1,0)
XMA11B ;(WASH ISC)/CAP/XXX - * OBSOLETE * ;12/15/97  10:02
"RTN","XMA11B",2,0)
 ;;7.1;MailMan;**39,50**;Jun 02, 1994
"RTN","XMA11B",3,0)
 Q
"RTN","XMA1A")
0^182^B1835
"RTN","XMA1A",1,0)
XMA1A ;(WASH ISC)/CAP/THM- * OBSOLETE * ;12/15/97  10:03
"RTN","XMA1A",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMA1A",3,0)
 Q
"RTN","XMA1B")
0^83^B1405349
"RTN","XMA1B",1,0)
XMA1B ;(WASH ISC)/CAP/THM-Save/Delete Message ;06/24/99  14:15
"RTN","XMA1B",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMA1B",3,0)
 ; Entry points (DBIA 10065):
"RTN","XMA1B",4,0)
 ; KL    Delete a message from a basket
"RTN","XMA1B",5,0)
 ; KLQ   Delete a message from a basket and put it in the WASTE basket.
"RTN","XMA1B",6,0)
 ; S2    Put a message in a basket
"RTN","XMA1B",7,0)
 ;
"RTN","XMA1B",8,0)
KL ; Delete a message from a basket
"RTN","XMA1B",9,0)
 ; In:
"RTN","XMA1B",10,0)
 ; XMDUZ  User's DUZ
"RTN","XMA1B",11,0)
 ; XMK    Basket number (optional)
"RTN","XMA1B",12,0)
 ; XMZ    Message number
"RTN","XMA1B",13,0)
 I '$D(XMK) S XMK=$O(^XMB(3.7,"M",XMZ,XMDUZ,0)) Q:'XMK
"RTN","XMA1B",14,0)
 I XMK,'$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) S XMK=$O(^XMB(3.7,"M",XMZ,XMDUZ,0)) Q:'XMK
"RTN","XMA1B",15,0)
 D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ)
"RTN","XMA1B",16,0)
 Q
"RTN","XMA1B",17,0)
KLQ ; Delete a message from a basket AND put it in waste basket
"RTN","XMA1B",18,0)
 ; In:
"RTN","XMA1B",19,0)
 ; XMDUZ  User's DUZ
"RTN","XMA1B",20,0)
 ; XMK    Basket number (optional)
"RTN","XMA1B",21,0)
 ; XMZ    Message number
"RTN","XMA1B",22,0)
 D KL Q:XMK=.5
"RTN","XMA1B",23,0)
 S XMKM=.5
"RTN","XMA1B",24,0)
 ; Fall through to S2
"RTN","XMA1B",25,0)
S2 ; Put a message in a basket.
"RTN","XMA1B",26,0)
 ; In:
"RTN","XMA1B",27,0)
 ; XMDUZ   User's DUZ
"RTN","XMA1B",28,0)
 ; XMKM    Basket number
"RTN","XMA1B",29,0)
 ; XMZ     Message number
"RTN","XMA1B",30,0)
 N XMK,XMKN
"RTN","XMA1B",31,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMA1B",32,0)
 S XMK=$$XMK^XMXPARM(XMDUZ,"XMKM",.XMKM)
"RTN","XMA1B",33,0)
 I $D(XMERR) K XMERR,^TMP("XMERR",$J) Q
"RTN","XMA1B",34,0)
 S XMKN=$S(XMK>1:$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1),XMK=.5:"WASTE",1:"IN")
"RTN","XMA1B",35,0)
 D PUTMSG^XMXMSGS2(XMDUZ,XMK,XMKN,XMZ)
"RTN","XMA1B",36,0)
 K XMKM
"RTN","XMA1B",37,0)
 Q
"RTN","XMA1C")
0^72^B244506
"RTN","XMA1C",1,0)
XMA1C ;(WASH ISC)/ACC/IHS-Server Basket Control ;05/06/99  15:29
"RTN","XMA1C",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMA1C",3,0)
 ; Entry points (DBIA 10072):
"RTN","XMA1C",4,0)
 ; REMSBMSG  Remove a message from a server basket
"RTN","XMA1C",5,0)
 ; SETSB     Put a message in a server basket
"RTN","XMA1C",6,0)
 ;
"RTN","XMA1C",7,0)
SETSB ; Put a message in a server basket
"RTN","XMA1C",8,0)
 ; (Create mail basket for server under postmaster as needed)
"RTN","XMA1C",9,0)
 ; In:
"RTN","XMA1C",10,0)
 ; XMXX  Server Name (full name, starting with 'S.')
"RTN","XMA1C",11,0)
 ; XMZ   Message Number
"RTN","XMA1C",12,0)
 ;Messages to server are saved in a mail basket of the
"RTN","XMA1C",13,0)
 ;Postmaster much like transmission queues.  But while
"RTN","XMA1C",14,0)
 ;Domain queues point at the domain file (domain#+1000),
"RTN","XMA1C",15,0)
 ;Server baskets point at the option file (option#+10000).
"RTN","XMA1C",16,0)
 D PUTSERV^XMXMSGS1(XMXX,XMZ)
"RTN","XMA1C",17,0)
 Q
"RTN","XMA1C",18,0)
REMSBMSG ; Remove a message from a server basket
"RTN","XMA1C",19,0)
 ; In:
"RTN","XMA1C",20,0)
 ; XMSER  Server Name (full name, starting with 'S.')
"RTN","XMA1C",21,0)
 ; XMZ    Message number
"RTN","XMA1C",22,0)
 D ZAPSERV^XMXMSGS1(XMSER,XMZ)
"RTN","XMA1C",23,0)
 K XMKD,XMZ,XMDUZ,XMK,XMSER
"RTN","XMA1C",24,0)
 Q
"RTN","XMA1E")
0^150^B1859
"RTN","XMA1E",1,0)
XMA1E ;(WASH ISC)/CAP/THM- * OBSOLETE * ;12/15/97  09:53
"RTN","XMA1E",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMA1E",3,0)
 Q
"RTN","XMA2")
0^113^B3234638
"RTN","XMA2",1,0)
XMA2 ;(WASH ISC)/CAP/THM-Create Message Stub ;05/13/99  06:24
"RTN","XMA2",2,0)
 ;;7.1;MailMan;**5,6,10,15,39,50**;Jun 02, 1994
"RTN","XMA2",3,0)
 ; Entry points (DBIA 10066):
"RTN","XMA2",4,0)
 ; GET  get a message number
"RTN","XMA2",5,0)
 ; XMZ  get a message number
"RTN","XMA2",6,0)
 ;
"RTN","XMA2",7,0)
XMZ ; Create stub/return error
"RTN","XMA2",8,0)
 ; In:
"RTN","XMA2",9,0)
 ; XMDUZ  User's DUZ or free text
"RTN","XMA2",10,0)
 ; XMSUB  Message subject
"RTN","XMA2",11,0)
 ; Out:
"RTN","XMA2",12,0)
 ; XMZ    Message number (-1 if error)
"RTN","XMA2",13,0)
 D MAKESTUB($G(XMDUZ),XMSUB,.XMZ,1)
"RTN","XMA2",14,0)
 Q
"RTN","XMA2",15,0)
GET ; Create stub
"RTN","XMA2",16,0)
 ; In:
"RTN","XMA2",17,0)
 ; XMDUZ  User's DUZ or free text
"RTN","XMA2",18,0)
 ; XMSUB  Message subject
"RTN","XMA2",19,0)
 ; Out:
"RTN","XMA2",20,0)
 ; XMZ    Message number (HALT if error)
"RTN","XMA2",21,0)
 D MAKESTUB($G(XMDUZ),XMSUB,.XMZ)
"RTN","XMA2",22,0)
 Q
"RTN","XMA2",23,0)
MAKESTUB(XMDUZ,XMSUBJ,XMZ,XMRETURN) ;
"RTN","XMA2",24,0)
 N XMZREC,XMSENDR
"RTN","XMA2",25,0)
 I '$G(DUZ) N DUZ D DUZ^XUP(.5)
"RTN","XMA2",26,0)
 I XMDUZ=0!(XMDUZ="") S XMDUZ=DUZ
"RTN","XMA2",27,0)
 I $L(XMSUBJ)>65 S XMSUBJ=$E(XMSUBJ,1,65)
"RTN","XMA2",28,0)
 I $L(XMSUBJ)<3 S XMSUBJ=XMSUBJ_"..."
"RTN","XMA2",29,0)
 D VSUBJ^XMXPARM(.XMSUBJ)
"RTN","XMA2",30,0)
 I $D(XMERR) D  Q
"RTN","XMA2",31,0)
 . S XMZ=-1
"RTN","XMA2",32,0)
 . D:'$D(ZTQUEUED) SHOW^XMJERR
"RTN","XMA2",33,0)
 . I '$G(XMRETURN) G ABORT
"RTN","XMA2",34,0)
 . H 1
"RTN","XMA2",35,0)
 D CRE8XMZ^XMXSEND(XMSUBJ,.XMZ)
"RTN","XMA2",36,0)
 I XMZ<1 D  Q
"RTN","XMA2",37,0)
 . W:'$D(ZTQUEUED) !,"  Please try again later.",!
"RTN","XMA2",38,0)
 . I '$G(XMRETURN) G ABORT
"RTN","XMA2",39,0)
 . K XMERR,^TMP("XMERR",$J)
"RTN","XMA2",40,0)
 . H 1
"RTN","XMA2",41,0)
 S XMZREC=^XMB(3.9,XMZ,0)
"RTN","XMA2",42,0)
 I XMDUZ=.6 S XMDUZ=DUZ,XMSENDR=.6
"RTN","XMA2",43,0)
 E  S XMSENDR=DUZ
"RTN","XMA2",44,0)
 I XMDUZ=.5,XMSENDR'=.5 S $P(XMZREC,U,12)="y" ;Info Only / sent by Postmaster
"RTN","XMA2",45,0)
 S $P(XMZREC,U,2,4)=XMDUZ_U_$$NOW^XLFDT()_U_$S(XMDUZ'=XMSENDR&+XMDUZ:XMSENDR,1:"")
"RTN","XMA2",46,0)
 S ^XMB(3.9,XMZ,0)=XMZREC
"RTN","XMA2",47,0)
 Q
"RTN","XMA2",48,0)
ABORT ;
"RTN","XMA2",49,0)
 S X=^TMP("XMERR",$J,1,"TEXT",1)
"RTN","XMA2",50,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMA2",51,0)
 X X
"RTN","XMA2",52,0)
 Q
"RTN","XMA20")
0^165^B1738
"RTN","XMA20",1,0)
XMA20 ;(WASH ISC)/CAP- * OBSOLETE * ;12/15/97  09:57
"RTN","XMA20",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMA20",3,0)
 Q
"RTN","XMA21")
0^128^B10087577
"RTN","XMA21",1,0)
XMA21 ;(WASH ISC)/CAP-Address lookup ;05/26/99  09:00
"RTN","XMA21",2,0)
 ;;7.1;MailMan;**4,31,50**;Jun 02, 1994
"RTN","XMA21",3,0)
 ; Entry points (DBIA 10067):
"RTN","XMA21",4,0)
 ; CHK   Check to see if a user is a member of a mail group.
"RTN","XMA21",5,0)
 ; DES   Interactive addressing.  Set next default recipient.
"RTN","XMA21",6,0)
 ; DEST  Interactive addressing.  Set first default recipient.
"RTN","XMA21",7,0)
 ; INST  Non-interactive addressing. (Same as WHO)
"RTN","XMA21",8,0)
 ; WHO   Non-interactive addressing.
"RTN","XMA21",9,0)
 ;
"RTN","XMA21",10,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMA21",11,0)
 ; DX    XMDXNAME - Test name resolution (interactive)
"RTN","XMA21",12,0)
 ;
"RTN","XMA21",13,0)
CHK ; Check to see if a user is a member of a mail group.
"RTN","XMA21",14,0)
 ; Sets $T if member.
"RTN","XMA21",15,0)
 ; Needs:
"RTN","XMA21",16,0)
 ; XMDUZ  DUZ of the user
"RTN","XMA21",17,0)
 ; Y      IEN of the mail group
"RTN","XMA21",18,0)
 I $D(^XMB(3.8,Y,1,"B",XMDUZ)) Q
"RTN","XMA21",19,0)
 Q
"RTN","XMA21",20,0)
DX ;
"RTN","XMA21",21,0)
 N XMINSTR,XMV,XMABORT
"RTN","XMA21",22,0)
 D INIT^XMVVITAE
"RTN","XMA21",23,0)
 S XMABORT=0
"RTN","XMA21",24,0)
 D INIT^XMXADDR
"RTN","XMA21",25,0)
 D TOWHOM^XMJMT(XMDUZ,"Send",.XMINSTR,"",XMABORT)
"RTN","XMA21",26,0)
 D CLEANUP^XMXADDR
"RTN","XMA21",27,0)
 Q
"RTN","XMA21",28,0)
DES ; Interactive addressing.  Set next default recipient.
"RTN","XMA21",29,0)
 ; XMY is not killed upon entry.
"RTN","XMA21",30,0)
 ; Needs:
"RTN","XMA21",31,0)
 ; XMMG    Next default recipient
"RTN","XMA21",32,0)
 ; See entry point TO for other needs and outputs associated with
"RTN","XMA21",33,0)
 ; this entry point.
"RTN","XMA21",34,0)
 D TO(.XMMG)
"RTN","XMA21",35,0)
 Q
"RTN","XMA21",36,0)
DEST ; Interactive addressing.  Set first default recipient.
"RTN","XMA21",37,0)
 ; XMY is killed upon entry.
"RTN","XMA21",38,0)
 ; Needs:
"RTN","XMA21",39,0)
 ; XMDUN   First default recipient
"RTN","XMA21",40,0)
 ; See entry point TO for other needs and outputs associated with
"RTN","XMA21",41,0)
 ; this entry point.
"RTN","XMA21",42,0)
 K XMY
"RTN","XMA21",43,0)
 D TO(XMDUN)
"RTN","XMA21",44,0)
 Q
"RTN","XMA21",45,0)
TO(XMTO) ;
"RTN","XMA21",46,0)
 ; Entry points DES and DEST also Need:
"RTN","XMA21",47,0)
 ; XMDUZ   DUZ of user
"RTN","XMA21",48,0)
 ; XMDF    if $D(XMDF) then do not restrict addressees
"RTN","XMA21",49,0)
 ; Output:
"RTN","XMA21",50,0)
 ; XMY(    Array of addressees:  XMY(addressee)=""
"RTN","XMA21",51,0)
 ; XMOUT   if $D(XMOUT) user aborted addressing
"RTN","XMA21",52,0)
 ; X       if X="^" user aborted addressing, else X=""
"RTN","XMA21",53,0)
 N XMV,XMINSTR,XMABORT,XMDUN
"RTN","XMA21",54,0)
 S XMABORT=0
"RTN","XMA21",55,0)
 I XMDUZ'>0 N XMDUZ S XMDUZ=DUZ
"RTN","XMA21",56,0)
 D INIT^XMVVITAE
"RTN","XMA21",57,0)
 I $D(XMDF) S XMINSTR("ADDR FLAGS")="R" ; No addressee restrictions
"RTN","XMA21",58,0)
 I $D(XMTO) S XMINSTR("TO PROMPT")=XMTO
"RTN","XMA21",59,0)
 D INIT^XMXADDR
"RTN","XMA21",60,0)
 D TOWHOM^XMJMT(XMDUZ,"Send",.XMINSTR,"",.XMABORT)
"RTN","XMA21",61,0)
 I XMABORT D  Q
"RTN","XMA21",62,0)
 . S XMOUT=1,X=U
"RTN","XMA21",63,0)
 . D CLEANUP^XMXADDR
"RTN","XMA21",64,0)
 K XMOUT
"RTN","XMA21",65,0)
 S X=""
"RTN","XMA21",66,0)
 D SW
"RTN","XMA21",67,0)
 I $D(XMINSTR("SELF BSKT")) S XMY(XMDUZ,0)=XMINSTR("SELF BSKT")
"RTN","XMA21",68,0)
 I $D(XMINSTR("SHARE BSKT")) S XMY(.6,0)=XMINSTR("SHARE BSKT")
"RTN","XMA21",69,0)
 I $D(XMINSTR("SHARE DATE")) S XMY(.6,"D")=XMINSTR("SHARE DATE")
"RTN","XMA21",70,0)
 D CLEANUP^XMXADDR
"RTN","XMA21",71,0)
 Q
"RTN","XMA21",72,0)
SW ;
"RTN","XMA21",73,0)
 N %X,%Y
"RTN","XMA21",74,0)
 S %X="^TMP(""XMY"","_$J_",",%Y="XMY(" D %XY^%RCR
"RTN","XMA21",75,0)
 Q
"RTN","XMA21",76,0)
INST ; Non-interactive addressing (Just fall thru to WHO)
"RTN","XMA21",77,0)
WHO ; Non-interactive addressing
"RTN","XMA21",78,0)
 ; Needs:
"RTN","XMA21",79,0)
 ; XMDUZ user's DUZ
"RTN","XMA21",80,0)
 ; X     local or remote address
"RTN","XMA21",81,0)
 ;       (-X will remove address)
"RTN","XMA21",82,0)
 ; XMDF  if $D(XMDF) then do not restrict addressees
"RTN","XMA21",83,0)
 ; XMLOC if $D(XMLOC), forces output of XMMG error message if error
"RTN","XMA21",84,0)
 ; Output:
"RTN","XMA21",85,0)
 ; XMY   address: XMY(address)=""
"RTN","XMA21",86,0)
 ; Y     if Y=-1, then lookup has failed
"RTN","XMA21",87,0)
 ;       = <DUZ^full name> if local addressee
"RTN","XMA21",88,0)
 ;       = <domain ien^domain name> if remote addressee
"RTN","XMA21",89,0)
 ; XMMG  contains error message if Y=-1
"RTN","XMA21",90,0)
 ;       = "" if local addressee
"RTN","XMA21",91,0)
 ;       = via domain message if remote addressee
"RTN","XMA21",92,0)
 N XMV,XMINSTR,XMSTRIKE
"RTN","XMA21",93,0)
 I XMDUZ'>0 N XMDUZ S XMDUZ=DUZ
"RTN","XMA21",94,0)
 D INIT^XMVVITAE
"RTN","XMA21",95,0)
 I $D(XMDF) S XMINSTR("ADDR FLAGS")="R" ; No addressee restrictions
"RTN","XMA21",96,0)
 D INIT^XMXADDR
"RTN","XMA21",97,0)
 I $E(X)="-" S XMSTRIKE=1,X=$E(X,2,99)
"RTN","XMA21",98,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMA21",99,0)
 D CHKADDR^XMXADDR(XMDUZ,X,.XMINSTR,"",.Y)
"RTN","XMA21",100,0)
 I $D(XMERR) D  Q
"RTN","XMA21",101,0)
 . S XMMG=^TMP("XMERR",$J,1,"TEXT",1)
"RTN","XMA21",102,0)
 . K XMERR,^TMP("XMERR",$J)
"RTN","XMA21",103,0)
 . S Y=-1
"RTN","XMA21",104,0)
 . I $D(XMLOC) W "  ",XMMG
"RTN","XMA21",105,0)
 . D CLEANUP^XMXADDR
"RTN","XMA21",106,0)
 I $G(XMSTRIKE) D  Q
"RTN","XMA21",107,0)
 . S X=Y
"RTN","XMA21",108,0)
 . I Y["@" K XMY(Y)
"RTN","XMA21",109,0)
 . E  K XMY($O(^TMP("XMY",$J,0)))
"RTN","XMA21",110,0)
 . S XMMG=""
"RTN","XMA21",111,0)
 . D CLEANUP^XMXADDR
"RTN","XMA21",112,0)
 I Y["@" D  Q
"RTN","XMA21",113,0)
 . S X=Y
"RTN","XMA21",114,0)
 . S Y=^TMP("XMY",$J,X)  ; IEN
"RTN","XMA21",115,0)
 . S XMY(X)=Y
"RTN","XMA21",116,0)
 . S Y=Y_U_$P(^DIC(4.2,Y,0),U,1)
"RTN","XMA21",117,0)
 . S XMMG="via "_$P(Y,U,2)
"RTN","XMA21",118,0)
 . D CLEANUP^XMXADDR
"RTN","XMA21",119,0)
 S X=Y  ; full name
"RTN","XMA21",120,0)
 S Y=$O(^TMP("XMY",$J,0))  ; DUZ
"RTN","XMA21",121,0)
 S XMY(Y)=""
"RTN","XMA21",122,0)
 S Y=Y_U_X  ; DUZ^full name
"RTN","XMA21",123,0)
 S XMMG=""
"RTN","XMA21",124,0)
 D CLEANUP^XMXADDR
"RTN","XMA21",125,0)
 Q
"RTN","XMA210")
0^175^B2080
"RTN","XMA210",1,0)
XMA210 ;(WASH ISC)/CAP- * OBSOLETE * ;12/15/97  10:03
"RTN","XMA210",2,0)
 ;;7.1;MailMan;**31,50**;Jun 02, 1994
"RTN","XMA210",3,0)
 Q
"RTN","XMA21A")
0^183^B2199
"RTN","XMA21A",1,0)
XMA21A ;(WASH ISC)/CAP- * OBSOLETE * ;12/15/97  10:06
"RTN","XMA21A",2,0)
 ;;7.1;MailMan;**4,30,36,50**;Jun 02, 1994
"RTN","XMA21A",3,0)
 Q
"RTN","XMA21B")
0^189^B2206
"RTN","XMA21B",1,0)
XMA21B ;(WASH ISC)/CAP- * OBSOLETE * ;12/15/97  10:07
"RTN","XMA21B",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMA21B",3,0)
 Q
"RTN","XMA21FWD")
0^151^B3542
"RTN","XMA21FWD",1,0)
XMA21FWD ;(WASH ISC)/CAP/CMW - * OBSOLETE * ;12/15/97  09:54
"RTN","XMA21FWD",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMA21FWD",3,0)
 Q
"RTN","XMA21G")
0^159^B2241
"RTN","XMA21G",1,0)
XMA21G ;(WASH ISC)/CAP- * OBSOLETE * ;05/28/98  13:49
"RTN","XMA21G",2,0)
 ;;7.1;MailMan;**31,36,65,50**;Jun 02, 1994
"RTN","XMA21G",3,0)
 Q
"RTN","XMA22")
0^166^B1217
"RTN","XMA22",1,0)
XMA22 ;(WASH ISC)/CAP/THM- * OBSOLETE * ;03/10/98  06:55
"RTN","XMA22",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMA24")
0^176^B1762
"RTN","XMA24",1,0)
XMA24 ;(WASH ISC)/AML/LL- * OBSOLETE * ;05/06/99  15:41
"RTN","XMA24",2,0)
 ;;7.1;MailMan;**31,50**;Jun 02, 1994
"RTN","XMA24",3,0)
 Q
"RTN","XMA25")
0^184^B1768
"RTN","XMA25",1,0)
XMA25 ;(WASH ISC)/CAP/AML/LL- * OBSOLETE * ;05/06/99  15:41
"RTN","XMA25",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMA25",3,0)
 Q
"RTN","XMA2B")
0^84^B9435435
"RTN","XMA2B",1,0)
XMA2B ;(WASH ISC)/CAP/THM-Send BLOB ;06/22/99  14:44
"RTN","XMA2B",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMA2B",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMA2B",4,0)
 ; BLOB     XMBLOBSEND - Send Imaging Package message
"RTN","XMA2B",5,0)
BLOB ;Send BLOBs [Other Body Parts] in a message.
"RTN","XMA2B",6,0)
 ;Do not allow option to be used if Imaging is not set up.
"RTN","XMA2B",7,0)
 I '$O(^MAG(2005,0)) W !!,"Imaging is not installed here.  You can not send multimedia messages.",*7 Q
"RTN","XMA2B",8,0)
 ;
"RTN","XMA2B",9,0)
 ;First message is created with text.
"RTN","XMA2B",10,0)
 K XMA2BT
"RTN","XMA2B",11,0)
 D BLOB^XMJMS
"RTN","XMA2B",12,0)
 Q
"RTN","XMA2B",13,0)
ADD ;Then this entry point is called
"RTN","XMA2B",14,0)
 ;Called from ^XMJMS for adding BLOBS to message as other body parts
"RTN","XMA2B",15,0)
 ;
"RTN","XMA2B",16,0)
 W !,"Do you want to attach "_$S('$D(XMA2BT):"a",1:"another")_" patient's image to this message?  N// " R X:DTIME
"RTN","XMA2B",17,0)
 I X="Y"!(X="y") S MAGBLOB=1 G SEL
"RTN","XMA2B",18,0)
 I $D(MAGBLOB) I X="N"!(X="n")!(X="^")!(X="") S X="" G ADDCHK
"RTN","XMA2B",19,0)
SEL D SELIM^MAGAPI G ADDBLOB
"RTN","XMA2B",20,0)
ADDCHK G CHK:X=""
"RTN","XMA2B",21,0)
 I X["?" D HLP G ADD
"RTN","XMA2B",22,0)
 ;
"RTN","XMA2B",23,0)
 ;Remove a BLOB
"RTN","XMA2B",24,0)
 S XMN=$E(X)="-"
"RTN","XMA2B",25,0)
 I XMN S X=$E(X,2,99) D LK G ER:+Y<1 S %=$O(^XMB(3.9,XMZ,2005,"B",+Y,0)) I % K ^(%) S I=^XMB(3.9,XMZ,2005,0),%0=$P(I,U,4)-1,$P(I,U,3,4)=%0_U_%0,^(0)=I K ^(%) G ADD
"RTN","XMA2B",26,0)
 ;
"RTN","XMA2B",27,0)
 ;Add a BLOB
"RTN","XMA2B",28,0)
K S Y=-1 D LK
"RTN","XMA2B",29,0)
ADDBLOB G:$S(X["^":1,X="":1,+Y<1:1,1:0) CHK
"RTN","XMA2B",30,0)
 S %=$S($D(^XMB(3.9,XMZ,2005,0)):^(0),1:"^3.92005P"),I=$P(%,U,3)+1,$P(%,U,3)=I,$P(%,U,4)=$P(%,U,4)+1,^(0)=%,^(I,0)=+Y
"RTN","XMA2B",31,0)
 S ^XMB(3.9,XMZ,2005,"B",+Y,I)="",XMA2BT=1
"RTN","XMA2B",32,0)
 G ADD
"RTN","XMA2B",33,0)
CHK K XMA2BT Q:$S($O(^XMB(3.9,XMZ,2005,0)):1,'$O(^XMB(3.9,XMZ,2,0)):1,1:0)
"RTN","XMA2B",34,0)
 W !!,"You did not add any 'Other Body Parts' (files) to this message."
"RTN","XMA2B",35,0)
 R !!,"Do you wish to deliver just the text ? N// ",Y:DTIME
"RTN","XMA2B",36,0)
 K XMOUT
"RTN","XMA2B",37,0)
 S Y=$TR(Y,"yesno","YESNO")
"RTN","XMA2B",38,0)
 I $L(Y) Q:$E("YES",1,$L(Y))=Y
"RTN","XMA2B",39,0)
 I $E("NO",1,$L(Y))=Y G ADD
"RTN","XMA2B",40,0)
 W *7,"  <<< Please answer 'YES' or 'NO'"
"RTN","XMA2B",41,0)
 G CHK
"RTN","XMA2B",42,0)
 ;
"RTN","XMA2B",43,0)
LK S DIC=2005,DIC(0)="NOQFEM",DIC("S")="N % S %=^(0) I $P(%,U,6)'=9,$P(%,U,3)" D ^DIC K DIC Q
"RTN","XMA2B",44,0)
ER W " ??",*7 G ADD
"RTN","XMA2B",45,0)
 ;
"RTN","XMA2B",46,0)
HLP ;Help for adding/removing BLOBS
"RTN","XMA2B",47,0)
 W !!,"You may add or remove a BLOB from the message.  To add a BLOB"
"RTN","XMA2B",48,0)
 W !,"enter the name of the BLOB you wish to add to the message.  This"
"RTN","XMA2B",49,0)
 W !,"BLOB must already be in the * file.  To remove on, preceed the"
"RTN","XMA2B",50,0)
 W !,"name of the BLOB with a '-'.  Example:  To add the BLOB named"
"RTN","XMA2B",51,0)
 W !,"ZZTEMP, enter 'ZZTEMP'.  To remove it enter '-ZZTEMP'."
"RTN","XMA2B",52,0)
 Q:'$O(^XMB(3.9,XMZ,2005,0))
"RTN","XMA2B",53,0)
 W !!,"The following BLOBs have already been added to this message:",!!
"RTN","XMA2B",54,0)
 ;
"RTN","XMA2B",55,0)
 ;List BLOBS in a message
"RTN","XMA2B",56,0)
L S I=0 F  S I=$O(^XMB(3.9,XMZ,2005,I)) Q:+I'=I  S %=+^(I,0),X=$P(^MAG(2005,%,0),U) W:$L(X)+$X>79 ! W X,?$X\10*10+10
"RTN","XMA2B",57,0)
 Q
"RTN","XMA2B",58,0)
 ;
"RTN","XMA2B",59,0)
 ;Entry point to list non-textual body parts for Query.
"RTN","XMA2B",60,0)
LIST N I,X W !,"This message has non-textual body-parts: "
"RTN","XMA2B",61,0)
 G L
"RTN","XMA2C")
0^193^B1852
"RTN","XMA2C",1,0)
XMA2C ;(WASH ISC)/CAP- * OBSOLETE * ;05/28/98  13:49
"RTN","XMA2C",2,0)
 ;;7.1;MailMan;**46,53,50**;Jun 02, 1994
"RTN","XMA2C",3,0)
 Q
"RTN","XMA2C0")
0^152^B2188
"RTN","XMA2C0",1,0)
XMA2C0 ;(WASH ISC)/CAP- * OBSOLETE * ;05/06/99  15:40
"RTN","XMA2C0",2,0)
 ;;7.1;MailMan;**24,27,50**;Jun 02, 1994
"RTN","XMA2C0",3,0)
 Q
"RTN","XMA2R")
0^132^B12203607
"RTN","XMA2R",1,0)
XMA2R ;(WASH ISC)/CAP- Reply/Answer API ;05/26/99  10:04
"RTN","XMA2R",2,0)
 ;;7.1;MailMan;**27,50**;Jun 02, 1994
"RTN","XMA2R",3,0)
 ; Entry points (DBIA 1145):
"RTN","XMA2R",4,0)
 ; ENT  function for non-interactive reply to a message.
"RTN","XMA2R",5,0)
 ;      Reply is sent to all local recipients of the message.
"RTN","XMA2R",6,0)
 ;      If message if from a remote sender, the reply is sent to
"RTN","XMA2R",7,0)
 ;      the remote sender, too.
"RTN","XMA2R",8,0)
 ; ENTA function for non-interactive answer to a message
"RTN","XMA2R",9,0)
 ;
"RTN","XMA2R",10,0)
ENT(XMZ,XMSUBJ,XMTEXT,XMSTRIP,XMDUZ,XMNET) ; Send response to a message
"RTN","XMA2R",11,0)
 ;Call as follows:
"RTN","XMA2R",12,0)
 ; S var=$$ENT^XMA2R(XMZ,XMSUBJ,.XMTEXT,XMSTRIP,XMDUZ,XMNET)
"RTN","XMA2R",13,0)
 ;Where:  XMZ     = Message being responded to
"RTN","XMA2R",14,0)
 ;        XMSUBJ  = Subject of the response
"RTN","XMA2R",15,0)
 ;                  (ignored, unless message is from a remote sender)
"RTN","XMA2R",16,0)
 ;        .XMTEXT = Array containing text
"RTN","XMA2R",17,0)
 ;        XMSTRIP = Characters to be stripped from text
"RTN","XMA2R",18,0)
 ;        XMDUZ   = Sender of response (DUZ or free text)
"RTN","XMA2R",19,0)
 ;        XMNET   = Send reply over the net? (0=no (DEFAULT); 1=yes)
"RTN","XMA2R",20,0)
 ;                  (ignored, unless message is from a remote sender)
"RTN","XMA2R",21,0)
 ;
"RTN","XMA2R",22,0)
 ;OUTPUT: If results okay = internal pointer to response in file 3.9
"RTN","XMA2R",23,0)
 ;        If bad result, the letter "E" followed by a number,
"RTN","XMA2R",24,0)
 ;        followed by a space, then a human readable explanation.
"RTN","XMA2R",25,0)
 N XMV,XMZR,XMINSTR,XMMG,XMSECURE,XMZREC
"RTN","XMA2R",26,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMA2R",27,0)
 I $D(XMTEXT)<9 Q "E2 No message text !"
"RTN","XMA2R",28,0)
 I '$O(XMTEXT(0)) Q "E4 No message text !"
"RTN","XMA2R",29,0)
 S XMDUZ=$G(XMDUZ,DUZ)
"RTN","XMA2R",30,0)
 I XMDUZ'?.N D  Q:$D(XMMG) "E10 "_$P(XMMG,"= ",2)
"RTN","XMA2R",31,0)
 . D SETFROM^XMD(.XMDUZ,.XMINSTR)
"RTN","XMA2R",32,0)
 D INIT^XMVVITAE
"RTN","XMA2R",33,0)
 D CRE8XMZ^XMXSEND("R"_XMZ,.XMZR) Q:XMZR<1 $$ERR("E9")
"RTN","XMA2R",34,0)
 D MOVETEXT(XMZR,.XMTEXT)
"RTN","XMA2R",35,0)
 D CHEKBODY^XMXSEND(XMZR,$G(XMSTRIP))
"RTN","XMA2R",36,0)
 D DOREPLY^XMXREPLY(XMDUZ,XMZ,XMZR,.XMINSTR)
"RTN","XMA2R",37,0)
 S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMA2R",38,0)
 I $P(XMZREC,U,2)'["@"!'$G(XMNET) Q XMZR
"RTN","XMA2R",39,0)
 I '$D(XMSUBJ) Q "E1 No subject !"
"RTN","XMA2R",40,0)
 I $L(XMSUBJ)<3!($L(XMSUBJ)>65) Q "E3 Subject too long or short !"
"RTN","XMA2R",41,0)
 S XMSUBJ=$$SCRUB^XMXUTIL1(XMSUBJ)
"RTN","XMA2R",42,0)
 S:XMSUBJ[U XMSUBJ=$$ENCODEUP^XMXUTIL1(XMSUBJ)
"RTN","XMA2R",43,0)
 N XMFROM,XMREPLTO
"RTN","XMA2R",44,0)
 D REPLYTO^XMXREPLY(XMZ,.XMFROM,.XMREPLTO)
"RTN","XMA2R",45,0)
 D INIT^XMXADDR
"RTN","XMA2R",46,0)
 D CHKADDR^XMXADDR(XMDUZ,$$REMADDR^XMXADDR1($G(XMREPLTO,XMFROM)),.XMINSTR) Q:$D(XMERR) $$ERR("E12")
"RTN","XMA2R",47,0)
 D NETREPLY^XMXREPLY(XMDUZ,XMZ,XMZR,XMSUBJ,.XMINSTR)
"RTN","XMA2R",48,0)
 D CLEANUP^XMXADDR
"RTN","XMA2R",49,0)
 Q XMZR
"RTN","XMA2R",50,0)
MOVETEXT(XMZ,XMTEXT,XMAPPEND) ;
"RTN","XMA2R",51,0)
 N I,XMLINE
"RTN","XMA2R",52,0)
 S XMLINE=$S($G(XMAPPEND):$O(^XMB(3.9,XMZ,2,":"),-1),1:0)
"RTN","XMA2R",53,0)
 S I=0
"RTN","XMA2R",54,0)
 F  S I=$O(XMTEXT(I)) Q:'I  D
"RTN","XMA2R",55,0)
 . S XMLINE=XMLINE+1
"RTN","XMA2R",56,0)
 . S ^XMB(3.9,XMZ,2,XMLINE,0)=$S($D(XMTEXT(I,0)):XMTEXT(I,0),1:XMTEXT(I))
"RTN","XMA2R",57,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92A^"_XMLINE_U_XMLINE
"RTN","XMA2R",58,0)
 Q
"RTN","XMA2R",59,0)
ENTA(XMZ,XMSUBJ,XMTEXT,XMSTRIP,XMDUZ) ; Send Response Only to Sender of Original Message
"RTN","XMA2R",60,0)
 ;Call as follows:
"RTN","XMA2R",61,0)
 ; S var=$$ENT^XMA2R(XMZ,XMSUBJ,.XMTEXT,XMSTRIP,XMDUZ)
"RTN","XMA2R",62,0)
 ;Where:  XMZ     = Message being responded to
"RTN","XMA2R",63,0)
 ;        XMSUBJ  = Subject of the response
"RTN","XMA2R",64,0)
 ;        .XMTEXT = Array containing text
"RTN","XMA2R",65,0)
 ;        XMSTRIP = Characters to be stripped from text
"RTN","XMA2R",66,0)
 ;        XMDUZ   = Sender of response (DUZ or free text)
"RTN","XMA2R",67,0)
 ;
"RTN","XMA2R",68,0)
 ;OUTPUT: If results okay = internal pointer to response in file 3.9
"RTN","XMA2R",69,0)
 ;        If bad result, the letter "E" followed by a number,
"RTN","XMA2R",70,0)
 ;        followed by a space, then a human readable explanation.
"RTN","XMA2R",71,0)
 N XMV,XMZR,XMINSTR,XMMG,XMSECURE,XMZSENDR,XMZREC,XMTO
"RTN","XMA2R",72,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMA2R",73,0)
 I '$D(XMSUBJ) Q "E1 No subject !"
"RTN","XMA2R",74,0)
 I $D(XMTEXT)<9 Q "E2 No message text !"
"RTN","XMA2R",75,0)
 I $L(XMSUBJ)<3!($L(XMSUBJ)>65) Q "E3 Subject too long or short !"
"RTN","XMA2R",76,0)
 I '$O(XMTEXT(0)) Q "E4 No message text !"
"RTN","XMA2R",77,0)
 S XMDUZ=$G(XMDUZ,DUZ)
"RTN","XMA2R",78,0)
 I XMDUZ'?.N D  Q:$D(XMMG) "E10 "_$P(XMMG,"= ",2)
"RTN","XMA2R",79,0)
 . D SETFROM^XMD(.XMDUZ,.XMINSTR)
"RTN","XMA2R",80,0)
 D INIT^XMVVITAE
"RTN","XMA2R",81,0)
 S XMZREC=^XMB(3.9,XMZ,0)
"RTN","XMA2R",82,0)
 S XMZSENDR=$P(XMZREC,U,2)
"RTN","XMA2R",83,0)
 S:XMZSENDR["@" XMZSENDR=$$REPLYTO1^XMXREPLY(XMZ)
"RTN","XMA2R",84,0)
 D CRE8XMZ^XMXSEND(XMSUBJ,.XMZR) Q:XMZR<1 $$ERR("E9")
"RTN","XMA2R",85,0)
 D COPY^XMXANSER(XMZ,$P(XMZREC,U,1),XMZSENDR,XMZR)
"RTN","XMA2R",86,0)
 D MOVETEXT(XMZR,.XMTEXT,1)
"RTN","XMA2R",87,0)
 D NETSIG^XMXANSER(XMZR)
"RTN","XMA2R",88,0)
 D CHEKBODY^XMXSEND(XMZR,$G(XMSTRIP))
"RTN","XMA2R",89,0)
 S XMTO(XMZSENDR)=""
"RTN","XMA2R",90,0)
 S XMTO(XMDUZ)=""
"RTN","XMA2R",91,0)
 S XMINSTR("ADDR FLAGS")="R"  ; No addressing restrictions
"RTN","XMA2R",92,0)
 D ADDRNSND^XMXSEND(XMDUZ,XMZR,.XMTO,.XMINSTR)
"RTN","XMA2R",93,0)
 Q:$D(XMERR) $$ERR("E11")
"RTN","XMA2R",94,0)
 Q XMZR
"RTN","XMA2R",95,0)
ERR(XMER) ;
"RTN","XMA2R",96,0)
 S XMER=XMER_" "_^TMP("XMERR",$J,1,"TEXT",1)
"RTN","XMA2R",97,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMA2R",98,0)
 Q XMER
"RTN","XMA3")
0^85^B80543624
"RTN","XMA3",1,0)
XMA3 ;(WASH ISC)/CAP-XMCLEAN, XMAUTOPURGE ;02/16/99  12:44
"RTN","XMA3",2,0)
 ;;7.1;MailMan;**37,54,69,50**;Jun 02, 1994
"RTN","XMA3",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMA3",4,0)
 ; CLEAN      Option: XMCLEAN - Clean out waste baskets and
"RTN","XMA3",5,0)
 ;                              Postmaster's ARRIVING basket
"RTN","XMA3",6,0)
 ; EN         Option: XMAUTOPURGE - Purge Unreferenced Messages
"RTN","XMA3",7,0)
 ; SCAN       Option: XMPURGE - Purge Unreferenced Messages, then STAT
"RTN","XMA3",8,0)
 ; STAT       Option: XMSTAT  - Message Statistics
"RTN","XMA3",9,0)
 Q
"RTN","XMA3",10,0)
EN ;
"RTN","XMA3",11,0)
 N XMPARM
"RTN","XMA3",12,0)
 D PURGEIT(.XMPARM)
"RTN","XMA3",13,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","XMA3",14,0)
 Q
"RTN","XMA3",15,0)
STAT ;
"RTN","XMA3",16,0)
 D AUDIT^XMA30 ; Show purge audit records
"RTN","XMA3",17,0)
 D USERSTAT^XMA30 ; Show user mailbox info
"RTN","XMA3",18,0)
 Q
"RTN","XMA3",19,0)
SCAN ; PURGE MESSAGES
"RTN","XMA3",20,0)
 N DIR,XMPARM
"RTN","XMA3",21,0)
 I $D(ZTQUEUED) D  Q
"RTN","XMA3",22,0)
 . D PURGEIT(.XMPARM)
"RTN","XMA3",23,0)
 . S ZTREQ="@"
"RTN","XMA3",24,0)
 D AUDIT^XMA30 ; Show purge audit records
"RTN","XMA3",25,0)
 S DIR(0)="E" D ^DIR Q:$D(DIRUT)  K DIR
"RTN","XMA3",26,0)
 W !!,"I will purge messages which are not in anybody's Mailbox."
"RTN","XMA3",27,0)
 W !,"This will be done by comparing the message numbers in the MESSAGE file (3.9)"
"RTN","XMA3",28,0)
 W !,"against the 'M' cross reference of the MAILBOX file (3.7)."
"RTN","XMA3",29,0)
 W !!,"Because this is a real-time dynamic cross reference, it is"
"RTN","XMA3",30,0)
 W !,"RECOMMENDED that you run the INTEGRITY CHECKER with some"
"RTN","XMA3",31,0)
 W !,"frequency, to CORRECT problems, if any."
"RTN","XMA3",32,0)
 I '$P($G(^XMB(1,1,.12)),U) D
"RTN","XMA3",33,0)
 . W !,"A Mailbox INTEGRITY CHECK will run before the PURGE."
"RTN","XMA3",34,0)
 E  D
"RTN","XMA3",35,0)
 . W !,"A Mailbox INTEGRITY CHECK will NOT run before the PURGE,"
"RTN","XMA3",36,0)
 . W !,"because your site parameters indicate you do not want it to."
"RTN","XMA3",37,0)
 . W !,"You may want to do a BACK-UP just before this runs, and revert"
"RTN","XMA3",38,0)
 . W !,"to it if many problems are discovered."
"RTN","XMA3",39,0)
 W !
"RTN","XMA3",40,0)
 D GETPARMS(.XMPARM)
"RTN","XMA3",41,0)
 S DIR("A")="Do you really want to purge all unreferenced messages"
"RTN","XMA3",42,0)
 S DIR("B")="NO"
"RTN","XMA3",43,0)
 S DIR(0)="Y"
"RTN","XMA3",44,0)
 D ^DIR I Y=0!$D(DIRUT) Q
"RTN","XMA3",45,0)
 D WAIT^DICD
"RTN","XMA3",46,0)
 D PURGEIT(.XMPARM)
"RTN","XMA3",47,0)
 K DIR S DIR(0)="E" D ^DIR Q:$D(DIRUT)  K DIR
"RTN","XMA3",48,0)
 D STAT
"RTN","XMA3",49,0)
 Q
"RTN","XMA3",50,0)
PURGEIT(XMPARM) ;
"RTN","XMA3",51,0)
 N XMKILL,XMIEN,XMCNT,XMCRE8
"RTN","XMA3",52,0)
 D INIT(.XMIEN,.XMPARM,.XMKILL)
"RTN","XMA3",53,0)
 D MPURGE(.XMCRE8,.XMPARM,.XMKILL,.XMCNT)
"RTN","XMA3",54,0)
 D FINISH(XMIEN,XMCRE8,.XMKILL,.XMCNT)
"RTN","XMA3",55,0)
 Q
"RTN","XMA3",56,0)
INIT(XMIEN,XMPARM,XMKILL) ;
"RTN","XMA3",57,0)
 D:'$D(XMPARM) GETPARMS(.XMPARM)
"RTN","XMA3",58,0)
 D:'$P($G(^XMB(1,1,.12)),U) MAILBOX^XMUT4 ; Integrity check
"RTN","XMA3",59,0)
 S (XMKILL("MSG"),XMKILL("RESP"))=0
"RTN","XMA3",60,0)
 S XMKILL("START")=$P(^XMB(3.9,0),U,4)
"RTN","XMA3",61,0)
 D AUDTPURG^XMA32 ; purge audit records
"RTN","XMA3",62,0)
 D DONTPURG ; Note all messages which shouldn't be purged
"RTN","XMA3",63,0)
 D INITAUDT^XMA32A(.XMIEN,.XMPARM)
"RTN","XMA3",64,0)
 Q
"RTN","XMA3",65,0)
GETPARMS(XMPARM) ;
"RTN","XMA3",66,0)
 N XMSBUF,XMBUFREC
"RTN","XMA3",67,0)
 S (XMPARM("TYPE"),XMPARM("START"))=0
"RTN","XMA3",68,0)
 ; Set up a date buffer, beyond which we won't purge
"RTN","XMA3",69,0)
 S XMBUFREC=$G(^XMB(1,1,.14))
"RTN","XMA3",70,0)
 S XMPARM("END")=$$PDATE(+$P(XMBUFREC,U,1),2) ; purge thru this date
"RTN","XMA3",71,0)
 S XMPARM("PDATE")=$$PDATE(+$P(XMBUFREC,U,2),7) ; don't purge local messages sent on or after this date to remote sites.
"RTN","XMA3",72,0)
 ; If today is Saturday, start purge at beginning.
"RTN","XMA3",73,0)
 ; If not Saturday, check MailMan Site Parameter file for field 4.304 ...
"RTN","XMA3",74,0)
 I $$DOW^XLFDT(DT,1)'=6 D
"RTN","XMA3",75,0)
 . S XMSBUF=+$P($G(^XMB(1,1,"NOTOPURGE")),U)
"RTN","XMA3",76,0)
 . I XMSBUF=0,($G(^XMB("NETNAME"))="FORUM.VA.GOV"!$G(^XMB("NETNAME"))="FORUM.MED.VA.GOV") S XMSBUF=45
"RTN","XMA3",77,0)
 . Q:XMSBUF=0
"RTN","XMA3",78,0)
 . S XMPARM("START")=$$PDATE(XMSBUF,45)
"RTN","XMA3",79,0)
 Q:$D(ZTQUEUED)
"RTN","XMA3",80,0)
 W !,"Any unreferenced message will be purged if its local create date "
"RTN","XMA3",81,0)
 W !,"is from ",$S(XMPARM("START")=0:"the beginning of time",1:$$MMDT^XMXUTIL1(XMPARM("START")))," to ",$$MMDT^XMXUTIL1(XMPARM("END"))," inclusive."
"RTN","XMA3",82,0)
 W !,"However, locally generated messages sent to remote sites will not be purged"
"RTN","XMA3",83,0)
 W !,"if they were sent on or after ",$$MMDT^XMXUTIL1(XMPARM("PDATE")),"."
"RTN","XMA3",84,0)
 W !!,"The following messages are considered 'referenced' and will not be purged:"
"RTN","XMA3",85,0)
 W !,"- Messages in users' baskets"
"RTN","XMA3",86,0)
 W !,"- Messages in transit (arriving or being sent)"
"RTN","XMA3",87,0)
 W !,"- Server messages"
"RTN","XMA3",88,0)
 W !,"- Messages being edited (includes aborted edits)"
"RTN","XMA3",89,0)
 W !,"- Later'd messages"
"RTN","XMA3",90,0)
 Q
"RTN","XMA3",91,0)
PDATE(XMDAYS,XMDEFALT) ; Subtract so many days from today and return that date.
"RTN","XMA3",92,0)
 S:+XMDAYS=0 XMDAYS=XMDEFALT ; use default if days is null
"RTN","XMA3",93,0)
 Q $$FMADD^XLFDT(DT,-XMDAYS)
"RTN","XMA3",94,0)
FINISH(XMIEN,XMCRE8,XMKILL,XMCNT) ;
"RTN","XMA3",95,0)
 K ^TMP("XM",$J)
"RTN","XMA3",96,0)
 S XMKILL("TOTAL")=XMKILL("MSG")+XMKILL("RESP")
"RTN","XMA3",97,0)
 W:'$D(ZTQUEUED) !!,XMCNT," messages processed, ",XMKILL("TOTAL")," messages purged, ",XMKILL("START")-XMKILL("TOTAL")," messages in ^XMB(3.9"
"RTN","XMA3",98,0)
 D CHKAUDT^XMA32A(XMIEN,XMCRE8,.XMKILL)
"RTN","XMA3",99,0)
 Q
"RTN","XMA3",100,0)
DONTPURG ; Find all messages which might not be in someone's mailbox,
"RTN","XMA3",101,0)
 ; but which shouldn't be purged anyway.
"RTN","XMA3",102,0)
 N XMDUZ,XMZ,XMZR,XMQ,XMT,XMD,XMINST,XMG
"RTN","XMA3",103,0)
 K ^TMP("XM",$J)
"RTN","XMA3",104,0)
 ;
"RTN","XMA3",105,0)
 ; DON'T PURGE LOCAL MESSAGES AND REPLIES WHICH ARE ABOUT TO BE DELIVERED
"RTN","XMA3",106,0)
 ;
"RTN","XMA3",107,0)
 S (XMT,XMG,XMZ)="" ; new messages, forwarded messages, and replies
"RTN","XMA3",108,0)
 F  S XMT=$O(^XMBPOST("BOX",XMT)) Q:XMT=""  D
"RTN","XMA3",109,0)
 . F  S XMG=$O(^XMBPOST("BOX",XMT,XMG)) Q:XMG=""  D
"RTN","XMA3",110,0)
 . . F  S XMZ=$O(^XMBPOST("BOX",XMT,XMG,XMZ)) Q:XMZ=""  S ^TMP("XM",$J,"NOP",+XMZ)="" I XMG="R" S ^TMP("XM",$J,"NOP",$P(XMZ,U,2))=""
"RTN","XMA3",111,0)
 ;
"RTN","XMA3",112,0)
 ; new messages, forwarded messages
"RTN","XMA3",113,0)
 S (XMQ,XMT,XMZ)="" ; Queue number, Timestamp, Message IEN
"RTN","XMA3",114,0)
 F  S XMQ=$O(^XMBPOST("M",XMQ)) Q:XMQ=""  D
"RTN","XMA3",115,0)
 . F  S XMT=$O(^XMBPOST("M",XMQ,XMT)) Q:XMT=""  D
"RTN","XMA3",116,0)
 . . F  S XMZ=$O(^XMBPOST("M",XMQ,XMT,XMZ)) Q:XMZ=""  S ^TMP("XM",$J,"NOP",+XMZ)=""
"RTN","XMA3",117,0)
 ;
"RTN","XMA3",118,0)
 ; replies
"RTN","XMA3",119,0)
 S (XMQ,XMZ,XMZR)="" ; Queue number, Message IEN, Reply IEN
"RTN","XMA3",120,0)
 F  S XMQ=$O(^XMBPOST("R",XMQ)) Q:XMQ=""  D
"RTN","XMA3",121,0)
 . S XMT="" ; Timestamp
"RTN","XMA3",122,0)
 . F  S XMT=$O(^XMBPOST("R",XMQ,XMT)) Q:XMT'>0  D
"RTN","XMA3",123,0)
 . . F  S XMZ=$O(^XMBPOST("R",XMQ,XMT,XMZ)) Q:XMZ=""  D
"RTN","XMA3",124,0)
 . . . S ^TMP("XM",$J,"NOP",XMZ)="" ; Original msg to new replies
"RTN","XMA3",125,0)
 . . . F  S XMZR=$O(^XMBPOST("R",XMQ,XMT,XMZ,XMZR)) Q:XMZR=""  S ^TMP("XM",$J,"NOP",XMZR)="" ; Reply
"RTN","XMA3",126,0)
 ;
"RTN","XMA3",127,0)
 ; DON'T PURGE MESSAGES QUEUED TO BE DELIVERED REMOTELY
"RTN","XMA3",128,0)
 S XMINST=999 ; Institution
"RTN","XMA3",129,0)
 F  S XMINST=$O(^XMB(3.7,.5,2,XMINST)) Q:XMINST'>0  D
"RTN","XMA3",130,0)
 . S XMZ=0
"RTN","XMA3",131,0)
 . F  S XMZ=$O(^XMB(3.7,.5,2,XMINST,1,XMZ)) Q:XMZ'>0  S ^TMP("XM",$J,"NOP",XMZ)=""
"RTN","XMA3",132,0)
 ;
"RTN","XMA3",133,0)
 ; DON'T PURGE LATER'D MESSAGES
"RTN","XMA3",134,0)
 S XMD=0 ; Date to be later'd
"RTN","XMA3",135,0)
 F  S XMD=$O(^XMB(3.73,XMD)) Q:XMD'>0  D
"RTN","XMA3",136,0)
 . S XMZ=$P(^XMB(3.73,XMD,0),U,3)
"RTN","XMA3",137,0)
 . S:XMZ ^TMP("XM",$J,"NOP",XMZ)="" ; Msg to be later'd
"RTN","XMA3",138,0)
 ;
"RTN","XMA3",139,0)
 ; DON'T PURGE MESSAGES WHICH ARE BEING EDITED
"RTN","XMA3",140,0)
 S (XMDUZ,XMZ)=""
"RTN","XMA3",141,0)
 F  S XMDUZ=$O(^XMB(3.7,"AD",XMDUZ)) Q:XMDUZ=""  D
"RTN","XMA3",142,0)
 . F  S XMZ=$O(^XMB(3.7,"AD",XMDUZ,XMZ)) Q:XMZ=""  S ^TMP("XM",$J,"NOP",XMZ)=""
"RTN","XMA3",143,0)
 ;
"RTN","XMA3",144,0)
 ; DON'T PURGE MESSAGES WHICH ARE TO BE DELIVERED LATER TO CERTAIN RECIPIENTS
"RTN","XMA3",145,0)
 S (XMD,XMZ)=""
"RTN","XMA3",146,0)
 F  S XMD=$O(^XMB(3.9,"AL",XMD)) Q:XMD=""  D
"RTN","XMA3",147,0)
 . F  S XMZ=$O(^XMB(3.9,"AL",XMD,XMZ)) Q:XMZ=""  S ^TMP("XM",$J,"NOP",XMZ)=""
"RTN","XMA3",148,0)
 Q
"RTN","XMA3",149,0)
MPURGE(XMCRE8,XMPARM,XMKILL,XMCNT) ;
"RTN","XMA3",150,0)
 N XMZREC,XMZ
"RTN","XMA3",151,0)
 S XMZ="",XMCNT=0
"RTN","XMA3",152,0)
 S XMCRE8=$S(XMPARM("START")=0:0,1:$O(^XMB(3.9,"C",XMPARM("START")),-1))
"RTN","XMA3",153,0)
 F  S XMCRE8=$O(^XMB(3.9,"C",XMCRE8)) Q:'XMCRE8  Q:XMCRE8>XMPARM("END")  D
"RTN","XMA3",154,0)
 . F  S XMZ=$O(^XMB(3.9,"C",XMCRE8,XMZ)) Q:'XMZ  D
"RTN","XMA3",155,0)
 . . I '$D(ZTQUEUED) S XMCNT=XMCNT+1 I XMCNT#5000=0 W:$X>40 ! W XMCNT,"."
"RTN","XMA3",156,0)
 . . I '$D(^XMB(3.9,XMZ)) K ^XMB(3.9,"C",XMCRE8,XMZ) Q
"RTN","XMA3",157,0)
 . . Q:$D(^XMB(3.7,"M",XMZ))        ; Msg is in someone's basket
"RTN","XMA3",158,0)
 . . Q:$D(^TMP("XM",$J,"NOP",XMZ))  ; Msg is one of "do not purge"
"RTN","XMA3",159,0)
 . . S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMA3",160,0)
 . . Q:$P(XMZREC,U,8)                  ; Msg is a response
"RTN","XMA3",161,0)
 . . I $P($P(XMZREC,U,3),".")?7N,XMCRE8'<XMPARM("PDATE"),$O(^XMB(3.9,XMZ,1,"C",":"))'="" Q  ; local msg recently sent to remote site
"RTN","XMA3",162,0)
 . . D PURGE(XMZ,.XMKILL)
"RTN","XMA3",163,0)
 Q
"RTN","XMA3",164,0)
PURGE(XMZ,XMKILL) ; Purge message and responses
"RTN","XMA3",165,0)
 N XMZR,XMIEN
"RTN","XMA3",166,0)
 S XMIEN=0
"RTN","XMA3",167,0)
 F  S XMIEN=$O(^XMB(3.9,XMZ,3,XMIEN)) Q:XMIEN'>0  D
"RTN","XMA3",168,0)
 . S XMZR=$P($G(^XMB(3.9,XMZ,3,XMIEN,0)),U) Q:'XMZR
"RTN","XMA3",169,0)
 . D KILLRESP(XMZR,.XMKILL)
"RTN","XMA3",170,0)
 D KILLMSG(XMZ,.XMKILL)
"RTN","XMA3",171,0)
 Q
"RTN","XMA3",172,0)
KILLRESP(XMZ,XMKILL) ; Kill response
"RTN","XMA3",173,0)
 Q:'$D(^XMB(3.9,XMZ))      ; Response does not exist
"RTN","XMA3",174,0)
 Q:$D(^XMB(3.7,"M",XMZ))   ; Someone has response in mailbox
"RTN","XMA3",175,0)
 D KILLMSG^XMXUTIL(XMZ)
"RTN","XMA3",176,0)
 S XMKILL("RESP")=XMKILL("RESP")+1
"RTN","XMA3",177,0)
 Q
"RTN","XMA3",178,0)
KILLMSG(XMZ,XMKILL) ; Kill message
"RTN","XMA3",179,0)
 D KILLMSG^XMXUTIL(XMZ)
"RTN","XMA3",180,0)
 S XMKILL("MSG")=XMKILL("MSG")+1
"RTN","XMA3",181,0)
 Q
"RTN","XMA3",182,0)
CLEAN ; Clean various files
"RTN","XMA3",183,0)
 D CSTAT ; Clean Message Statistics file
"RTN","XMA3",184,0)
 D CMBOX ; Clean out WASTE baskets and Postmaster's ARRIVING basket
"RTN","XMA3",185,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","XMA3",186,0)
 Q
"RTN","XMA3",187,0)
CSTAT ; Clean Statistics file audits - delete records more than 2 years old
"RTN","XMA3",188,0)
 N XMINST,XMAUDT,XMCUTOFF,DA,DIK
"RTN","XMA3",189,0)
 S XMCUTOFF=DT\100-200   ; 2 years ago, in yyymm format
"RTN","XMA3",190,0)
 S XMINST=0
"RTN","XMA3",191,0)
 F  S XMINST=$O(^XMBS(4.2999,XMINST)) Q:XMINST'>0  D
"RTN","XMA3",192,0)
 . S DA(1)=XMINST,DIK="^XMBS(4.2999,"_DA(1)_",100,"
"RTN","XMA3",193,0)
 . S XMAUDT=0
"RTN","XMA3",194,0)
 . F  S XMAUDT=$O(^XMBS(4.2999,XMINST,100,XMAUDT)) Q:XMAUDT'>0!(XMAUDT>XMCUTOFF)  D
"RTN","XMA3",195,0)
 . . S DA=XMAUDT D ^DIK
"RTN","XMA3",196,0)
 Q
"RTN","XMA3",197,0)
CMBOX ; Clean the mailbox file
"RTN","XMA3",198,0)
 N XMDUZ,XMCNT
"RTN","XMA3",199,0)
 D CARRIVE
"RTN","XMA3",200,0)
 S (XMDUZ,XMCNT)=0
"RTN","XMA3",201,0)
 F  S XMDUZ=$O(^XMB(3.7,XMDUZ)) Q:XMDUZ'>0  D CWASTE(XMDUZ,.XMCNT)
"RTN","XMA3",202,0)
 W:'$D(ZTQUEUED) !,"Waste & Arriving Baskets Cleaned!"
"RTN","XMA3",203,0)
 Q
"RTN","XMA3",204,0)
CWASTE(XMDUZ,XMCNT) ; Clean a user's WASTE basket
"RTN","XMA3",205,0)
 N XMZ
"RTN","XMA3",206,0)
 L +^XMB(3.7,XMDUZ):5  E  Q
"RTN","XMA3",207,0)
 I '$D(ZTQUEUED) S XMCNT=XMCNT+1 I XMCNT#100=0 W:$X>60 ! W XMCNT,"."
"RTN","XMA3",208,0)
 S XMZ=0
"RTN","XMA3",209,0)
 F  S XMZ=$O(^XMB(3.7,XMDUZ,2,.5,1,XMZ)) Q:XMZ'>0  K ^XMB(3.7,"M",XMZ,XMDUZ,.5)
"RTN","XMA3",210,0)
 K ^XMB(3.7,XMDUZ,2,.5)
"RTN","XMA3",211,0)
 S ^XMB(3.7,XMDUZ,2,.5,0)="WASTE",^(1,0)="^3.702P^0^0"
"RTN","XMA3",212,0)
 L -^XMB(3.7,XMDUZ)
"RTN","XMA3",213,0)
 Q
"RTN","XMA3",214,0)
CARRIVE ; Clean the postmaster's ARRIVING basket
"RTN","XMA3",215,0)
 N XMZ,XMCNT,XMZLAST,XMDATE,XMPARM
"RTN","XMA3",216,0)
 S XMPARM("END")=$$PDATE(+$P($G(^XMB(1,1,.14)),U,1),2)
"RTN","XMA3",217,0)
 L +^XMB(3.7,.5):5 E  Q
"RTN","XMA3",218,0)
 S (XMZ,XMCNT,XMZLAST)=0
"RTN","XMA3",219,0)
 F  S XMZ=$O(^XMB(3.7,.5,2,.95,1,XMZ)) Q:XMZ'>0  D
"RTN","XMA3",220,0)
 . I '$D(^XMB(3.9,XMZ,0)) D  Q
"RTN","XMA3",221,0)
 . . S DA=XMZ,DA(1)=.95,DA(2)=.5,DIK="^XMB(3.7,.5,2,.95,1," D ^DIK
"RTN","XMA3",222,0)
 . ; If it's still arriving, its date will be a FileMan date.
"RTN","XMA3",223,0)
 . ; After it's finished arriving, its date will be an internet (text) date.
"RTN","XMA3",224,0)
 . S XMDATE=$P($G(^XMB(3.9,XMZ,3)),U,3)
"RTN","XMA3",225,0)
 . I XMDATE?7N1".".N,XMDATE'>XMPARM("END") D  Q  ; been arriving for over 24 hours
"RTN","XMA3",226,0)
 . . S DA=XMZ,DA(1)=.95,DA(2)=.5,DIK="^XMB(3.7,.5,2,.95,1," D ^DIK
"RTN","XMA3",227,0)
 . S XMCNT=XMCNT+1,XMZLAST=XMZ
"RTN","XMA3",228,0)
 S ^XMB(3.7,.5,2,.95,0)="ARRIVING",^(1,0)="^3.702P^"_XMZLAST_U_XMCNT
"RTN","XMA3",229,0)
 L -^XMB(3.7,.5)
"RTN","XMA3",230,0)
 Q
"RTN","XMA30")
0^228^B17143009
"RTN","XMA30",1,0)
XMA30 ;(WASH ISC)/CAP-XMCLEAN, XMAUTOPURGE ;09/30/98  15:51
"RTN","XMA30",2,0)
 ;;7.1;MailMan;**37,50**;Jun 02, 1994
"RTN","XMA30",3,0)
AUDIT ; Lists data from previous purges
"RTN","XMA30",4,0)
 N XMLIEN,XMREC,XMSTART,XMEND,XMLEFT,XMPURGE,XMTYPE,XMABORT
"RTN","XMA30",5,0)
 S XMABORT=0
"RTN","XMA30",6,0)
 W @IOF,"It's really a good idea to look these over."
"RTN","XMA30",7,0)
 W !!,"Look for multiple purges running concurrently, missing purge dates,"
"RTN","XMA30",8,0)
 W !,"and check the times the purge ended (Do they conflict with user activity?).",!!
"RTN","XMA30",9,0)
 D AHDR
"RTN","XMA30",10,0)
 S XMLIEN=0
"RTN","XMA30",11,0)
 F  S XMLIEN=$O(^XMB(1,1,.1,XMLIEN)) Q:XMLIEN'>0  D  Q:XMABORT
"RTN","XMA30",12,0)
 . I $Y+3>IOSL D  Q:XMABORT
"RTN","XMA30",13,0)
 . . I IOST["C-" D PAGE^XMXUTIL(.XMABORT) Q:XMABORT
"RTN","XMA30",14,0)
 . . W @IOF D AHDR
"RTN","XMA30",15,0)
 . S XMREC=^XMB(1,1,.1,XMLIEN,0)
"RTN","XMA30",16,0)
 . S XMSTART=$P(XMREC,U)
"RTN","XMA30",17,0)
 . S XMLEFT=$P(XMREC,U,2)
"RTN","XMA30",18,0)
 . S XMPURGE=$P(XMREC,U,3)
"RTN","XMA30",19,0)
 . S XMTYPE=$P(XMREC,U,6)
"RTN","XMA30",20,0)
 . S XMEND=$P(XMREC,U,8)
"RTN","XMA30",21,0)
 . I XMTYPE="",'XMEND D  ; To handle old data before XM*7.1*37
"RTN","XMA30",22,0)
 . . S XMEND=XMSTART
"RTN","XMA30",23,0)
 . . K XMSTART
"RTN","XMA30",24,0)
 . W !,$S(+XMTYPE=0:"Unref Msg",XMTYPE=1:"Date",1:"Test Date")
"RTN","XMA30",25,0)
 . W ?12,$S($D(XMSTART):$$MMDT^XMXUTIL1(XMSTART),1:""),?30,$$MMDT^XMXUTIL1(XMEND)
"RTN","XMA30",26,0)
 . I $D(XMSTART),XMEND>XMSTART W $J($$FMDIFF^XLFDT(XMEND,XMSTART,3),10)
"RTN","XMA30",27,0)
 . W ?60,$J(XMLEFT,10),$J(XMPURGE,10)
"RTN","XMA30",28,0)
 Q
"RTN","XMA30",29,0)
AHDR ;
"RTN","XMA30",30,0)
 W "MailMan Purge"
"RTN","XMA30",31,0)
 W !,"Type             Start             End         Duration           Kept    Purged",!
"RTN","XMA30",32,0)
 Q
"RTN","XMA30",33,0)
USERSTAT ; Display statistics
"RTN","XMA30",34,0)
 N XMREC,DIR,Y,XMTYPE,ZTSAVE,ZTDESC,ZTRTN
"RTN","XMA30",35,0)
 S XMREC=^XMB(3.9,0) W !!,"Highest numbered message: ",$O(^XMB(3.9,":"),-1),!,"Number of active messages: ",$P(XMREC,U,4)
"RTN","XMA30",36,0)
 S DIR("A")="Scan Option"
"RTN","XMA30",37,0)
 S DIR(0)="S^A:ACTIVE mailboxes;I:INACTIVE mailboxes;B:BOTH"
"RTN","XMA30",38,0)
 S DIR("B")="A"
"RTN","XMA30",39,0)
 D ^DIR Q:$D(DIRUT)
"RTN","XMA30",40,0)
 S XMTYPE=Y
"RTN","XMA30",41,0)
 S ZTSAVE("XMTYPE")=""
"RTN","XMA30",42,0)
 S ZTDESC="MailMan User Mailbox Statistics"
"RTN","XMA30",43,0)
 S ZTRTN="DOSTATS^XMA30"
"RTN","XMA30",44,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE)
"RTN","XMA30",45,0)
 Q
"RTN","XMA30",46,0)
DOSTATS ;
"RTN","XMA30",47,0)
 N XMTODAY,XMPAGE,XMABORT,XMDUZ,XMK,XMINCNT,XMZCNT,XMKCNT,XMBOXCNT,XMLMAIL,XMNAME,XMREC,XMSTAT,XMLSIGN
"RTN","XMA30",48,0)
 S XMTODAY=$$MMDT^XMXUTIL1(DT),(XMPAGE,XMABORT,XMBOXCNT)=0
"RTN","XMA30",49,0)
 W:IOST["C-" @IOF D SHDR(XMTODAY,.XMPAGE)
"RTN","XMA30",50,0)
 S XMNAME=""
"RTN","XMA30",51,0)
 F  S XMNAME=$O(^VA(200,"B",XMNAME)) Q:XMNAME=""  D  Q:XMABORT
"RTN","XMA30",52,0)
 . S XMDUZ=0
"RTN","XMA30",53,0)
 . F  S XMDUZ=$O(^VA(200,"B",XMNAME,XMDUZ)) Q:XMDUZ=""  D  Q:XMABORT
"RTN","XMA30",54,0)
 . . Q:'$D(^XMB(3.7,XMDUZ))
"RTN","XMA30",55,0)
 . . S XMREC=$G(^VA(200,XMDUZ,0))
"RTN","XMA30",56,0)
 . . I $P(XMREC,U,3)="" Q:XMTYPE="A"  S XMSTAT="Inactive"
"RTN","XMA30",57,0)
 . . E  I XMTYPE="I" Q
"RTN","XMA30",58,0)
 . . E  S XMSTAT=""
"RTN","XMA30",59,0)
 . . I $Y+3>IOSL D  Q:XMABORT
"RTN","XMA30",60,0)
 . . . I IOST["C-" D PAGE^XMXUTIL(.XMABORT) Q:XMABORT
"RTN","XMA30",61,0)
 . . . W @IOF D SHDR(XMTODAY,.XMPAGE)
"RTN","XMA30",62,0)
 . . S XMBOXCNT=XMBOXCNT+1
"RTN","XMA30",63,0)
 . . W !,$S(XMNAME="":"User #"_XMDUZ,1:XMNAME)
"RTN","XMA30",64,0)
 . . S XMK=.9,(XMINCNT,XMZCNT)=0
"RTN","XMA30",65,0)
 . . F XMKCNT=1:1 S XMK=$O(^XMB(3.7,XMDUZ,2,XMK)) Q:XMK'>0  D
"RTN","XMA30",66,0)
 . . . D:'$D(^XMB(3.7,XMDUZ,2,XMK,1,0)) MAKENODE
"RTN","XMA30",67,0)
 . . . I XMK=1 S XMINCNT=+$P($G(^XMB(3.7,XMDUZ,2,XMK,1,0)),U,4),XMZCNT=XMINCNT Q
"RTN","XMA30",68,0)
 . . . S XMZCNT=XMZCNT+$P($G(^XMB(3.7,XMDUZ,2,XMK,1,0)),U,4)
"RTN","XMA30",69,0)
 . . S XMLMAIL=$P($P($G(^XMB(3.7,XMDUZ,"L")),U)," ",1,3)
"RTN","XMA30",70,0)
 . . S XMLSIGN=$P($G(^VA(200,XMDUZ,1.1)),U)
"RTN","XMA30",71,0)
 . . S XMLSIGN=$S(XMSTAT'="":XMSTAT,'XMLSIGN:"No Sign on",1:$$MMDT^XMXUTIL1($P(XMLSIGN,".")))
"RTN","XMA30",72,0)
 . . W ?30,$J(XMKCNT,4),$J(XMZCNT,7),$J(XMINCNT,8),?53,XMLSIGN,?67,$S($L(XMLMAIL):XMLMAIL,1:"None")
"RTN","XMA30",73,0)
 W !!,"Total",$S(XMTYPE="I":" Inactive",XMTYPE="A":" Active",1:"")," Mailboxes",$S(XMABORT:" Displayed",1:""),": ",XMBOXCNT
"RTN","XMA30",74,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","XMA30",75,0)
 Q
"RTN","XMA30",76,0)
MAKENODE ; Create the zero node for the message multiple
"RTN","XMA30",77,0)
 N XMCNT,XMZ
"RTN","XMA30",78,0)
 Q:'$O(^XMB(3.7,XMDUZ,2,XMK,1,0))
"RTN","XMA30",79,0)
 S (XMZ,XMCNT)=0
"RTN","XMA30",80,0)
 F  S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,XMZ)) Q:XMZ'>0  S XMCNT=XMCNT+1
"RTN","XMA30",81,0)
 S ^XMB(3.7,XMDUZ,2,XMK,1,0)="^3.702P^"_+$O(^XMB(3.7,XMDUZ,2,XMK,1,"C"),-1)_U_XMCNT
"RTN","XMA30",82,0)
 Q
"RTN","XMA30",83,0)
SHDR(XMTODAY,XMPAGE) ; Header for Mailbox Statistics Report
"RTN","XMA30",84,0)
 S XMPAGE=XMPAGE+1
"RTN","XMA30",85,0)
 W "Printed: ",XMTODAY,?65,$J("Page "_XMPAGE,15)
"RTN","XMA30",86,0)
 W !,"User",?30,"Bskts  Msgs  IN Bskt  Last Sign on  Last Mail Use",!
"RTN","XMA30",87,0)
 Q
"RTN","XMA32")
0^147^B18058913
"RTN","XMA32",1,0)
XMA32 ;(WASH ISC)/CAP-Purge Messages by Date ;06/09/99  13:59
"RTN","XMA32",2,0)
 ;;7.1;MailMan;**37,50**;Jun 02, 1994
"RTN","XMA32",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMA32",4,0)
 ; ENTRY   Option: XMPURGE-BY-DATE - Purge messages by local create date.
"RTN","XMA32",5,0)
ENTRY ;
"RTN","XMA32",6,0)
 N XMABORT,XMPARM
"RTN","XMA32",7,0)
 S XMABORT=0
"RTN","XMA32",8,0)
 D INIT(.XMPARM,.XMABORT) Q:XMABORT
"RTN","XMA32",9,0)
 D SETUP(.XMPARM,.XMABORT) Q:XMABORT
"RTN","XMA32",10,0)
 D PROCESS(.XMPARM)
"RTN","XMA32",11,0)
 Q
"RTN","XMA32",12,0)
INIT(XMPARM,XMABORT) ;
"RTN","XMA32",13,0)
 I '$D(^XUSEC("XMMGR",DUZ)) D  Q
"RTN","XMA32",14,0)
 . W !!,*7,"You may not run this option.  You do not hold the 'XMMGR' security key !"
"RTN","XMA32",15,0)
 . S XMABORT=1
"RTN","XMA32",16,0)
 I $G(^DD(3.7,0,"VR"))<7.1 D  Q
"RTN","XMA32",17,0)
 . W !!,*7,"This routine only works with Kernel versions 7.1 or later.",!
"RTN","XMA32",18,0)
 . S XMABORT=1
"RTN","XMA32",19,0)
 S X="ERR^ZU" X ^%ZOSF("ETRP")
"RTN","XMA32",20,0)
 W !!,"This process REMOVES MESSAGES PERMANENTLY from the system."
"RTN","XMA32",21,0)
 W !,"             ***** BE VERY CAREFUL *****"
"RTN","XMA32",22,0)
 I $D(^XMB(1,1,.1,0)) D LAST(.XMPARM)
"RTN","XMA32",23,0)
 D AUDTPURG
"RTN","XMA32",24,0)
 Q
"RTN","XMA32",25,0)
LAST(XMPARM) ; Find the audit record for the last date purge
"RTN","XMA32",26,0)
 N XMLIEN,XMREC,Y,XMDIFF
"RTN","XMA32",27,0)
 S XMLIEN=$P(^XMB(1,1,.1,0),U,3)+1
"RTN","XMA32",28,0)
 F  S XMLIEN=$O(^XMB(1,1,.1,XMLIEN),-1) Q:+XMLIEN=0  Q:$P(^(XMLIEN,0),U,6)
"RTN","XMA32",29,0)
 Q:'XMLIEN
"RTN","XMA32",30,0)
 S XMREC=^XMB(1,1,.1,XMLIEN,0)
"RTN","XMA32",31,0)
 W !!,"This process was last run on ",$$MMDT^XMXUTIL1($P(XMREC,U)),$S($P(XMREC,U,6)["TEST":" in TEST MODE!",1:".")
"RTN","XMA32",32,0)
 W !,"The PURGE DATE used was ",$$MMDT^XMXUTIL1($P(XMREC,U,7)),".",!
"RTN","XMA32",33,0)
 S XMDIFF=$$FMDIFF^XLFDT($P(XMREC,U,7),$P(XMREC,U,1),1) ; difference in days
"RTN","XMA32",34,0)
 S XMPARM("PDATE")=$$FMADD^XLFDT(DT,XMDIFF)
"RTN","XMA32",35,0)
 Q
"RTN","XMA32",36,0)
AUDTPURG ; Kill off the earliest purge entries, so that only a certain # remain.
"RTN","XMA32",37,0)
 N XMREC,XMCNT,DA,DIK,XMMAX
"RTN","XMA32",38,0)
 S XMMAX=20
"RTN","XMA32",39,0)
 S XMREC=$G(^XMB(1,1,.1,0))
"RTN","XMA32",40,0)
 S XMCNT=$P(XMREC,U,4)
"RTN","XMA32",41,0)
 Q:XMCNT'>XMMAX
"RTN","XMA32",42,0)
 S DA=0
"RTN","XMA32",43,0)
 F  S DA=$O(^XMB(1,1,.1,0)) Q:DA'>0  D  Q:XMCNT'>XMMAX
"RTN","XMA32",44,0)
 . S XMCNT=XMCNT-1
"RTN","XMA32",45,0)
 . S DA(1)=1,DIK="^XMB(1,1,.1,"
"RTN","XMA32",46,0)
 . D ^DIK
"RTN","XMA32",47,0)
 Q
"RTN","XMA32",48,0)
SETUP(XMPARM,XMABORT) ;
"RTN","XMA32",49,0)
 D PDATE(.XMPARM,.XMABORT)    Q:XMABORT  ; Purge date
"RTN","XMA32",50,0)
 D TESTMODE(.XMPARM,.XMABORT)            ; Test mode?
"RTN","XMA32",51,0)
 Q
"RTN","XMA32",52,0)
PDATE(XMPARM,XMABORT) ;
"RTN","XMA32",53,0)
 N DIR,XMOK,XMOLDEST,XMDEF,XMOLDP1
"RTN","XMA32",54,0)
 S XMOLDEST=$O(^XMB(3.9,"C",""))
"RTN","XMA32",55,0)
 S XMOLDP1=$$FMADD^XLFDT(XMOLDEST,1)
"RTN","XMA32",56,0)
 S XMDEF=$G(XMPARM("PDATE"),$$FMADD^XLFDT(DT,-730))
"RTN","XMA32",57,0)
 I XMOLDP1>XMDEF S XMDEF=XMOLDP1
"RTN","XMA32",58,0)
 S XMOK=0
"RTN","XMA32",59,0)
 F  D  Q:XMOK!XMABORT
"RTN","XMA32",60,0)
 . S DIR(0)="D^"_XMOLDP1_":DT:E"
"RTN","XMA32",61,0)
 . S DIR("A",1)="The oldest message on the system is from "_$$FMTE^XLFDT(XMOLDEST,"2D")_"."
"RTN","XMA32",62,0)
 . S DIR("A")="Purge all messages originating before"
"RTN","XMA32",63,0)
 . S DIR("B")=$$FMTE^XLFDT(XMDEF,"2D")
"RTN","XMA32",64,0)
 . S DIR("?",1)="All messages whose 'local create date' is prior to the"
"RTN","XMA32",65,0)
 . S DIR("?",2)="'purge date' you enter will be deleted from the system,"
"RTN","XMA32",66,0)
 . S DIR("?")="except those which are in one of SHARED,MAIL's baskets."
"RTN","XMA32",67,0)
 . S DIR("??")="^N %DT S %DT=0 D HELP^%DTC"
"RTN","XMA32",68,0)
 . D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMA32",69,0)
 . S XMPARM("PDATE")=Y
"RTN","XMA32",70,0)
 . I DT-Y>10000 S XMOK=1 Q
"RTN","XMA32",71,0)
 . D ZIS^XM
"RTN","XMA32",72,0)
 . W !!,$S($D(IORVON):IORVON,1:"")_$S($D(IOBON):IOBON,1:"")_"The date you entered is less than 1 year old !!",$S($D(IOBOFF):IOBOFF,1:""),$C(7),$S($D(IORVOFF):IORVOFF,1:"")
"RTN","XMA32",73,0)
 . K DIR
"RTN","XMA32",74,0)
 . S DIR(0)="Y"
"RTN","XMA32",75,0)
 . S DIR("A")="Are you sure about this date"
"RTN","XMA32",76,0)
 . S DIR("B")="No"
"RTN","XMA32",77,0)
 . D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMA32",78,0)
 . S XMOK=Y
"RTN","XMA32",79,0)
 . K DIR
"RTN","XMA32",80,0)
 Q
"RTN","XMA32",81,0)
TESTMODE(XMPARM,XMABORT) ;
"RTN","XMA32",82,0)
 N DIR
"RTN","XMA32",83,0)
 S DIR(0)="Y",DIR("A")="TEST mode",DIR("B")="YES"
"RTN","XMA32",84,0)
 S DIR("?",1)="Test mode will not kill off messages."
"RTN","XMA32",85,0)
 S DIR("?",2)="Test mode gives you a list of what would happen in 'real' mode."
"RTN","XMA32",86,0)
 S DIR("?",3)="If you do not run in test mode, messages will be KILLED!"
"RTN","XMA32",87,0)
 S DIR("?",4)=""
"RTN","XMA32",88,0)
 S DIR("?")="Enter 'yes' to run in 'test' mode; 'no', 'real' mode."
"RTN","XMA32",89,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMA32",90,0)
 S XMPARM("TEST")=Y
"RTN","XMA32",91,0)
 S XMPARM("TYPE")=$S(XMPARM("TEST"):2,1:1)
"RTN","XMA32",92,0)
 Q
"RTN","XMA32",93,0)
PROCESS(XMPARM) ;
"RTN","XMA32",94,0)
 N ZTSAVE,ZTRTN,ZTDESC
"RTN","XMA32",95,0)
 S ZTSAVE("XMPARM*")=""
"RTN","XMA32",96,0)
 S ZTDESC="MailMan MESSAGE PURGE by DATE",ZTRTN="ENT^XMA32A"
"RTN","XMA32",97,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE)
"RTN","XMA32",98,0)
 Q
"RTN","XMA32A")
0^86^B29768986
"RTN","XMA32A",1,0)
XMA32A ;(WASH ISC)/CAP -Purge Messages by Date (cont.) ;05/06/99  15:36
"RTN","XMA32A",2,0)
 ;;7.1;MailMan;**27,37,44,55,50**;Jun 02, 1994
"RTN","XMA32A",3,0)
 ; XMPARM("PDATE") Purge all messages older than this date
"RTN","XMA32A",4,0)
 ; XMCNT           Total messages processed
"RTN","XMA32A",5,0)
 ; XMKILL("START") Messages in ^XMB(3.9 before purge started
"RTN","XMA32A",6,0)
 ; XMKILL("MSG")   Messages purged
"RTN","XMA32A",7,0)
 ; XMKILL("RESP")  Responses killed
"RTN","XMA32A",8,0)
 ; XMDUZ           Pointer to mailbox
"RTN","XMA32A",9,0)
 ; XMZ             Current message being processed
"RTN","XMA32A",10,0)
ENT ;
"RTN","XMA32A",11,0)
 N XMCRE8,XMIEN,XMCNT,XMKILL,XMHDR,XMABORT
"RTN","XMA32A",12,0)
 D INIT(.XMIEN,.XMPARM,.XMKILL,.XMHDR,.XMABORT)
"RTN","XMA32A",13,0)
 D PROCESS(XMIEN,.XMCRE8,.XMPARM,.XMKILL,.XMCNT,.XMHDR,.XMABORT)
"RTN","XMA32A",14,0)
 D FINISH(XMIEN,XMCRE8,.XMPARM,.XMKILL,XMCNT,.XMHDR,.XMABORT)
"RTN","XMA32A",15,0)
 Q
"RTN","XMA32A",16,0)
INIT(XMIEN,XMPARM,XMKILL,XMHDR,XMABORT) ;
"RTN","XMA32A",17,0)
 S (XMHDR("PAGE"),XMKILL("MSG"),XMKILL("RESP"),XMABORT)=0
"RTN","XMA32A",18,0)
 S XMKILL("START")=$P(^XMB(3.9,0),U,4)
"RTN","XMA32A",19,0)
 D INITAUDT(.XMIEN,.XMPARM,.XMHDR)
"RTN","XMA32A",20,0)
 S XMHDR("PDATE")=$E(XMPARM("PDATE"),4,5)_"/"_$E(XMPARM("PDATE"),6,7)_"/"_$E(XMPARM("PDATE"),2,3)
"RTN","XMA32A",21,0)
 S XMHDR("NOW")=$$DOW^XLFDT(XMHDR("NOW"))_", "_$$FMTE^XLFDT(XMHDR("NOW"),1)
"RTN","XMA32A",22,0)
 W:IOST["C-" @IOF D PRTHDR(.XMPARM,.XMHDR)
"RTN","XMA32A",23,0)
 Q
"RTN","XMA32A",24,0)
INITAUDT(XMIEN,XMPARM,XMHDR) ;
"RTN","XMA32A",25,0)
 N XMFDA
"RTN","XMA32A",26,0)
 S XMHDR("NOW")=$$NOW^XLFDT
"RTN","XMA32A",27,0)
 S XMFDA(4.302,"+1,1,",.01)=XMHDR("NOW")
"RTN","XMA32A",28,0)
 S:$D(XMPARM("START")) XMFDA(4.302,"+1,1,",3)=XMPARM("START")
"RTN","XMA32A",29,0)
 S:$D(XMPARM("END")) XMFDA(4.302,"+1,1,",4)=XMPARM("END")
"RTN","XMA32A",30,0)
 S XMFDA(4.302,"+1,1,",5)=$S(XMPARM("TYPE")=2:"1TEST",1:XMPARM("TYPE"))
"RTN","XMA32A",31,0)
 S XMFDA(4.302,"+1,1,",6)=XMPARM("PDATE")
"RTN","XMA32A",32,0)
 D UPDATE^DIE("","XMFDA","XMIEN")
"RTN","XMA32A",33,0)
 S XMIEN=XMIEN(1)
"RTN","XMA32A",34,0)
 Q
"RTN","XMA32A",35,0)
PROCESS(XMIEN,XMCRE8,XMPARM,XMKILL,XMCNT,XMHDR,XMABORT) ;
"RTN","XMA32A",36,0)
 N XMZ,XMZREC
"RTN","XMA32A",37,0)
 S (XMCRE8,XMZ)="",XMCNT=0
"RTN","XMA32A",38,0)
 F  S XMCRE8=$O(^XMB(3.9,"C",XMCRE8)) Q:'XMCRE8  Q:XMCRE8'<XMPARM("PDATE")  D  Q:XMABORT
"RTN","XMA32A",39,0)
 . F  S XMZ=$O(^XMB(3.9,"C",XMCRE8,XMZ)) Q:'XMZ  D  Q:XMABORT
"RTN","XMA32A",40,0)
 . . S XMCNT=XMCNT+1 I XMCNT#5000=0 D CHK(XMIEN,XMCRE8,.XMPARM,.XMKILL,XMCNT,.XMHDR,.XMABORT)
"RTN","XMA32A",41,0)
 . . I '$D(^XMB(3.9,XMZ)) K ^XMB(3.9,"C",XMCRE8,XMZ) Q
"RTN","XMA32A",42,0)
 . . S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMA32A",43,0)
 . . Q:$P(XMZREC,U,8)  ; Don't kill responses (they'll be purged when their original msg is)
"RTN","XMA32A",44,0)
 . . I "^^^^^^^^"[XMZREC D KILL(XMZ,.XMKILL,.XMABORT,.XMPARM,.XMHDR) Q
"RTN","XMA32A",45,0)
 . . Q:$D(^XMB(3.7,"M",XMZ,.6))  ; Do nothing if owned by SHARED,MAIL
"RTN","XMA32A",46,0)
 . . D KILL(XMZ,.XMKILL,.XMABORT,.XMPARM,.XMHDR)  ; Old msg; old response without original msg; old msg which thinks it's also a response; old response which thinks it's also the original msg.
"RTN","XMA32A",47,0)
 Q
"RTN","XMA32A",48,0)
KILL(XMZ,XMKILL,XMABORT,XMPARM,XMHDR) ;
"RTN","XMA32A",49,0)
 I $G(XMPARM("TEST")) D  Q:XMABORT
"RTN","XMA32A",50,0)
 . D HDR(2,.XMPARM,.XMHDR,.XMABORT) Q:XMABORT
"RTN","XMA32A",51,0)
 . W !,XMZ,?20," <<< Purge!  Date = ",$E(XMCRE8,4,5)_"/"_$E(XMCRE8,6,7)_"/"_$E(XMCRE8,2,3)
"RTN","XMA32A",52,0)
 D KBASKETS(XMZ,.XMKILL,.XMPARM,.XMHDR,.XMABORT) Q:XMABORT
"RTN","XMA32A",53,0)
 D KMSG(XMZ,.XMKILL,.XMPARM,.XMHDR,.XMABORT) Q:XMABORT
"RTN","XMA32A",54,0)
 D KLATER(XMZ,.XMPARM)
"RTN","XMA32A",55,0)
 Q
"RTN","XMA32A",56,0)
KBASKETS(XMZ,XMKILL,XMPARM,XMHDR,XMABORT) ;
"RTN","XMA32A",57,0)
 N XMDUZ,XMK
"RTN","XMA32A",58,0)
 S XMDUZ="",XMKILL("MSG")=XMKILL("MSG")+1
"RTN","XMA32A",59,0)
 F  S XMDUZ=$O(^XMB(3.7,"M",XMZ,XMDUZ)) Q:XMDUZ=""!XMABORT  D
"RTN","XMA32A",60,0)
 . S XMK=$O(^XMB(3.7,"M",XMZ,XMDUZ,0))
"RTN","XMA32A",61,0)
 . Q:'XMK
"RTN","XMA32A",62,0)
 . Q:'$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ))
"RTN","XMA32A",63,0)
 . I $G(XMPARM("TEST")) D  Q
"RTN","XMA32A",64,0)
 . . D HDR(2,.XMPARM,.XMHDR,.XMABORT) Q:XMABORT
"RTN","XMA32A",65,0)
 . . W !?25,"Message deleted for DUZ:",?50,$J(XMDUZ,12),?79
"RTN","XMA32A",66,0)
 . D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) ; Delete from user's basket
"RTN","XMA32A",67,0)
 Q
"RTN","XMA32A",68,0)
KMSG(XMZ,XMKILL,XMPARM,XMHDR,XMABORT) ;
"RTN","XMA32A",69,0)
 N XMZR,XMIEN,X
"RTN","XMA32A",70,0)
 S XMIEN=0
"RTN","XMA32A",71,0)
 F  S XMIEN=$O(^XMB(3.9,XMZ,3,XMIEN)) Q:XMIEN'>0!XMABORT  D
"RTN","XMA32A",72,0)
 . S XMZR=$P($G(^XMB(3.9,XMZ,3,XMIEN,0)),U)
"RTN","XMA32A",73,0)
 . S XMKILL("RESP")=XMKILL("RESP")+1
"RTN","XMA32A",74,0)
 . I $G(XMPARM("TEST")) D  Q
"RTN","XMA32A",75,0)
 . . D HDR(2,.XMPARM,.XMHDR,.XMABORT) Q:XMABORT
"RTN","XMA32A",76,0)
 . . W !?25,"Response deleted:",?50,$J(XMZR,12),?79
"RTN","XMA32A",77,0)
 . D KILLMSG^XMXUTIL(XMZR)  ; Kill response
"RTN","XMA32A",78,0)
 D:'$G(XMPARM("TEST")) KILLMSG^XMXUTIL(XMZ)  ; Kill original message
"RTN","XMA32A",79,0)
 Q
"RTN","XMA32A",80,0)
KLATER(XMZ,XMPARM) ;
"RTN","XMA32A",81,0)
 Q:$G(XMPARM("TEST"))
"RTN","XMA32A",82,0)
 N DIK,DA,XMDUZ
"RTN","XMA32A",83,0)
 S DIK="^XMB(3.73,"
"RTN","XMA32A",84,0)
 S (XMDUZ,DA)=""
"RTN","XMA32A",85,0)
 F  S XMDUZ=$O(^XMB(3.73,"AC",XMZ,XMDUZ)) Q:'XMDUZ  D
"RTN","XMA32A",86,0)
 . F  S DA=$O(^XMB(3.73,"AC",XMZ,XMDUZ,DA)) Q:'DA  D ^DIK
"RTN","XMA32A",87,0)
 Q
"RTN","XMA32A",88,0)
HDR(XMLINES,XMPARM,XMHDR,XMABORT) ;
"RTN","XMA32A",89,0)
 Q:$Y+XMLINES<IOSL
"RTN","XMA32A",90,0)
 I IOST["C-" D PAGE^XMXUTIL(.XMABORT) Q:XMABORT
"RTN","XMA32A",91,0)
 W @IOF D PRTHDR(.XMPARM,.XMHDR)
"RTN","XMA32A",92,0)
 Q
"RTN","XMA32A",93,0)
PRTHDR(XMPARM,XMHDR) ;
"RTN","XMA32A",94,0)
 S XMHDR("PAGE")=XMHDR("PAGE")+1
"RTN","XMA32A",95,0)
 W "Message purge, local create date < ",XMHDR("PDATE"),?70,"Page: ",XMHDR("PAGE")
"RTN","XMA32A",96,0)
 W !,"Started: ",XMHDR("NOW")
"RTN","XMA32A",97,0)
 W:XMPARM("TEST") ?60,"*TEST RUN*"
"RTN","XMA32A",98,0)
 W !
"RTN","XMA32A",99,0)
 Q
"RTN","XMA32A",100,0)
FINISH(XMIEN,XMCRE8,XMPARM,XMKILL,XMCNT,XMHDR,XMABORT) ;
"RTN","XMA32A",101,0)
 I XMABORT W @IOF D PRTHDR(.XMPARM,.XMHDR)
"RTN","XMA32A",102,0)
 D CHK(XMIEN,XMCRE8,.XMPARM,.XMKILL,XMCNT,.XMHDR,.XMABORT)
"RTN","XMA32A",103,0)
 D HDR(5+(2*$G(ZTSTOP)),.XMPARM,.XMHDR,.XMABORT)
"RTN","XMA32A",104,0)
 Q:'XMCNT
"RTN","XMA32A",105,0)
 I $G(ZTSTOP) W !!,"*** Stopping prematurely per user request ***"
"RTN","XMA32A",106,0)
 W !!,"Message purge finished on ",$$FMTE^XLFDT($$NOW^XLFDT,1)
"RTN","XMA32A",107,0)
 W !,XMCNT," messages processed."
"RTN","XMA32A",108,0)
 W !,XMKILL("MSG")," original messages and ",XMKILL("RESP")," responses purged."
"RTN","XMA32A",109,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","XMA32A",110,0)
 Q
"RTN","XMA32A",111,0)
CHK(XMIEN,XMCRE8,XMPARM,XMKILL,XMCNT,XMHDR,XMABORT) ;
"RTN","XMA32A",112,0)
 D CHKAUDT(XMIEN,XMCRE8,.XMKILL)
"RTN","XMA32A",113,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S (XMABORT,ZTSTOP)=1  Q  ; User has asked the task to stop
"RTN","XMA32A",114,0)
 Q:IOST'["C-"
"RTN","XMA32A",115,0)
 I $X+$L(XMCNT)+1>IOM D
"RTN","XMA32A",116,0)
 . D HDR(2,.XMPARM,.XMHDR,.XMABORT)
"RTN","XMA32A",117,0)
 . W !
"RTN","XMA32A",118,0)
 E  W " "
"RTN","XMA32A",119,0)
 W XMCNT
"RTN","XMA32A",120,0)
 Q
"RTN","XMA32A",121,0)
CHKAUDT(XMIEN,XMCRE8,XMKILL) ;
"RTN","XMA32A",122,0)
 N XMFDA
"RTN","XMA32A",123,0)
 S XMFDA(4.302,XMIEN_",1,",1)=XMKILL("START")-XMKILL("MSG")-XMKILL("RESP")
"RTN","XMA32A",124,0)
 S XMFDA(4.302,XMIEN_",1,",2)=XMKILL("MSG")+XMKILL("RESP")
"RTN","XMA32A",125,0)
 S XMFDA(4.302,XMIEN_",1,",7)=$$NOW^XLFDT
"RTN","XMA32A",126,0)
 S XMFDA(4.302,XMIEN_",1,",8)=XMCRE8
"RTN","XMA32A",127,0)
 D FILE^DIE("","XMFDA")
"RTN","XMA32A",128,0)
 Q
"RTN","XMA4")
0^153^B1460
"RTN","XMA4",1,0)
XMA4 ;(WASH ISC)/CAP- * OBSOLETE * ;05/06/99  15:40
"RTN","XMA4",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMA4",3,0)
 Q
"RTN","XMA5")
0^160^B1465
"RTN","XMA5",1,0)
XMA5 ;(WASH ISC)/THM/CAP- * OBSOLETE * ;12/12/97  14:41
"RTN","XMA5",2,0)
 ;;7.1;MailMan;**31,45,50**;Jun 02, 1994
"RTN","XMA5",3,0)
 Q
"RTN","XMA50")
0^167^B1753
"RTN","XMA50",1,0)
XMA50 ;(WASH ISC)/THM/CAP- * OBSOLETE * ;12/12/97  14:42
"RTN","XMA50",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMA50",3,0)
 Q
"RTN","XMA51")
0^170^B1759
"RTN","XMA51",1,0)
XMA51 ;(WASH ISC)/AML,LL,CAP- * OBSOLETE * ;12/12/97  14:43
"RTN","XMA51",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMA51",3,0)
 Q
"RTN","XMA5A")
0^177^B1855
"RTN","XMA5A",1,0)
XMA5A ;(WASH ISC)/THM/CAP- * OBSOLETE * ;12/12/97  14:44
"RTN","XMA5A",2,0)
 ;;7.1;MailMan;**31,36,50**;Jun 02, 1994
"RTN","XMA5A",3,0)
 Q
"RTN","XMA6")
0^185^B1470
"RTN","XMA6",1,0)
XMA6 ;(WASH ISC)/CAP/THM- * OBSOLETE * ;12/12/97  14:46
"RTN","XMA6",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMA6",3,0)
 Q
"RTN","XMA7")
0^190^B25482
"RTN","XMA7",1,0)
XMA7 ;(WASH ISC)/RJ/THM/CAP-User Info ;05/06/99  15:38
"RTN","XMA7",2,0)
 ;;7.1;MailMan;**10,47,50**;Jun 02, 1994
"RTN","XMA7",3,0)
 Q
"RTN","XMA7",4,0)
EN ;
"RTN","XMA7",5,0)
 D DISPUSER^XMHIU(Y)
"RTN","XMA7",6,0)
 Q
"RTN","XMA7G")
0^194^B1901
"RTN","XMA7G",1,0)
XMA7G ;(WASH ISC)/RJ/THM/CAP- * OBSOLETE * ;12/12/97  14:49
"RTN","XMA7G",2,0)
 ;;7.1;MailMan;**36,50**;Jun 02, 1994
"RTN","XMA7G",3,0)
 Q
"RTN","XMA7G1")
0^154^B2244
"RTN","XMA7G1",1,0)
XMA7G1 ;(WASH ISC)/JA- * OBSOLETE * ;12/12/97  14:52
"RTN","XMA7G1",2,0)
 ;;7.1;MailMan;**24,50**;Jun 02, 1994
"RTN","XMA7G1",3,0)
 Q
"RTN","XMAD0")
0^168^B1828
"RTN","XMAD0",1,0)
XMAD0 ;(WASH ISC)/CAP- * OBSOLETE * ;12/12/97  14:54
"RTN","XMAD0",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMAD0",3,0)
 Q
"RTN","XMAD1")
0^171^B1834
"RTN","XMAD1",1,0)
XMAD1 ;(WASH ISC)/CAP- * OBSOLETE * ;12/12/97  14:55
"RTN","XMAD1",2,0)
 ;;7.1;MailMan;**24,27,36,50**;Jun 02, 1994
"RTN","XMAD1",3,0)
 Q
"RTN","XMAD1A")
0^178^B2289
"RTN","XMAD1A",1,0)
XMAD1A ;(WASH ISC)/CAP- * OBSOLETE * ;01/21/99  14:43
"RTN","XMAD1A",2,0)
 ;;7.1;MailMan;**36,70,50**;Jun 02, 1994
"RTN","XMAD1A",3,0)
 Q
"RTN","XMAD1X")
0^186^B2450
"RTN","XMAD1X",1,0)
XMAD1X ;(WASH ISC)/CAP- * OBSOLETE * ;12/12/97  14:56
"RTN","XMAD1X",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMAD1X",3,0)
 Q
"RTN","XMAD2")
0^129^B377420
"RTN","XMAD2",1,0)
XMAD2 ;(WASH ISC)/CAP-Basket lookup/create ;05/06/99  15:40
"RTN","XMAD2",2,0)
 ;;7.1;MailMan;**31,50**;Jun 02, 1994
"RTN","XMAD2",3,0)
 ; Entry points (DBIA 1147):
"RTN","XMAD2",4,0)
 ; BSKT   Lookup/create a basket, return its number
"RTN","XMAD2",5,0)
 ;
"RTN","XMAD2",6,0)
BSKT(XMKN,XMDUZ) ; Find or Create a basket / return its internal number
"RTN","XMAD2",7,0)
 ; Needs:
"RTN","XMAD2",8,0)
 ; XMKN    Basket-name
"RTN","XMAD2",9,0)
 ; XMDUZ   User's DUZ
"RTN","XMAD2",10,0)
 N XMK,XMER
"RTN","XMAD2",11,0)
 S XMK=$$FIND1^DIC(3.701,","_XMDUZ_",","X",XMKN)
"RTN","XMAD2",12,0)
 Q:XMK XMK
"RTN","XMAD2",13,0)
 D CRE8BSKT^XMXAPIB(XMDUZ,XMKN,.XMK)
"RTN","XMAD2",14,0)
 Q:'$D(XMERR) XMK
"RTN","XMAD2",15,0)
 S XMER=^TMP("XMERR",$J,1,"TEXT",1)
"RTN","XMAD2",16,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMAD2",17,0)
 Q XMER
"RTN","XMADA")
0^214^B1397
"RTN","XMADA",1,0)
XMADA ;(WASH ISC)/CAP- * OBSOLETE * ;01/26/98  10:36
"RTN","XMADA",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMADDOC")
0^215^B2504
"RTN","XMADDOC",1,0)
XMADDOC ;(WASH ISC)/CAP- * OBSOLETE * ;01/26/98  10:37
"RTN","XMADDOC",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMADDOC1")
0^216^B3478
"RTN","XMADDOC1",1,0)
XMADDOC1 ;(WASH ISC)/CAP- * OBSOLETE * ;01/26/98  10:38
"RTN","XMADDOC1",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMADDOC1",3,0)
 Q
"RTN","XMADDOC2")
0^217^B2954
"RTN","XMADDOC2",1,0)
XMADDOC2 ;(WASH ISC)/CAP - * OBSOLETE * ;01/26/98  10:39
"RTN","XMADDOC2",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMADGO")
0^68^B19960
"RTN","XMADGO",1,0)
XMADGO ;(WASH ISC)/CAP-Start Background Message Delivery ;05/06/99  15:43
"RTN","XMADGO",2,0)
 ;;7.1;MailMan;**5,27,50**;Jun 02, 1994
"RTN","XMADGO",3,0)
 ; Entry points (DBIA 10068):
"RTN","XMADGO",4,0)
 ; ZTSK     Start tasks to deliver messages in local delivery queues
"RTN","XMADGO",5,0)
ZTSK ; Start Background Delivery Processes
"RTN","XMADGO",6,0)
 G ZTSK^XMKPLQ
"RTN","XMADGO",7,0)
 Q
"RTN","XMADGO1")
0^179^B2911
"RTN","XMADGO1",1,0)
XMADGO1 ;(WASH ISC)/CAP- * OBSOLETE * ;01/07/98  14:56
"RTN","XMADGO1",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMADGO1",3,0)
 Q
"RTN","XMADJ999")
0^69^B3352
"RTN","XMADJ999",1,0)
XMADJ999 ;ISC-SF/GMB- * OBSOLETE * ;01/07/98  14:54
"RTN","XMADJ999",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMADJ999",3,0)
 Q
"RTN","XMADJF0")
0^210^B2858
"RTN","XMADJF0",1,0)
XMADJF0 ;(WASH ISC)/CAP- * OBSOLETE * ;01/08/98  13:25
"RTN","XMADJF0",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMADJF0",3,0)
 Q
"RTN","XMADJF1")
0^155^B2866
"RTN","XMADJF1",1,0)
XMADJF1 ;(WASH ISC)/CAP- * OBSOLETE * ;10/14/98  09:13
"RTN","XMADJF1",2,0)
 ;;7.1;MailMan;**44,52,67,50**;Jun 02, 1994
"RTN","XMADJF1",3,0)
 Q
"RTN","XMADJF1A")
0^161^B3451
"RTN","XMADJF1A",1,0)
XMADJF1A ;(WASH ISC)/CAP- * OBSOLETE * ;12/12/97  15:23
"RTN","XMADJF1A",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMADJF1A",3,0)
 Q
"RTN","XMADJF1B")
0^169^B3460
"RTN","XMADJF1B",1,0)
XMADJF1B ;(WASH ISC)/CAP- * OBSOLETE * ;12/12/97  15:23
"RTN","XMADJF1B",2,0)
 ;;7.1;MailMan;**10,16,37,50**;Jun 02, 1994
"RTN","XMADJF1B",3,0)
 Q
"RTN","XMAH")
0^130^B2355109
"RTN","XMAH",1,0)
XMAH ;(WASH ISC)/CAP-List message responses ;05/26/99  10:06
"RTN","XMAH",2,0)
 ;;7.1;MailMan;**5,16,50**;Jun 02, 1994
"RTN","XMAH",3,0)
 ; Entry points (DBIA 1040):
"RTN","XMAH",4,0)
 ; ENT8   List responses of a message
"RTN","XMAH",5,0)
 ;
"RTN","XMAH",6,0)
ENT8 ; List message responses
"RTN","XMAH",7,0)
 ; Needs:
"RTN","XMAH",8,0)
 ; XMZ   Message number
"RTN","XMAH",9,0)
 N XMV
"RTN","XMAH",10,0)
 D INIT^XMVVITAE
"RTN","XMAH",11,0)
 D HELPRESP^XMJMP1(XMZ,+$P($G(^XMB(3.9,XMZ,3,0)),U,4))
"RTN","XMAH",12,0)
 Q
"RTN","XMAH",13,0)
 ; **************************************************************
"RTN","XMAH",14,0)
 ; **************************************************************
"RTN","XMAH",15,0)
ENTB W !,"The message (SUBJECT: ",$P(Y,U),")"
"RTN","XMAH",16,0)
 W !,"is a   SPOOLED DOCUMENT.  It can only be deleted.  Deletion can occur"
"RTN","XMAH",17,0)
 W !,"only one at a time from the 'Message Action' prompt.",*7
"RTN","XMAH",18,0)
 ;G D3^XMA0
"RTN","XMAH",19,0)
 Q
"RTN","XMAH",20,0)
SPOOL ;FROM XMA1 - HANDLE SPOOLED DOCUMENT INTERFACE
"RTN","XMAH",21,0)
 I '$F(":D:d:L:l:N:n",":"_$E(X)_":") S X="^" W !!,"SPOOLER messages may be DELETEd, NEWed or LATERed at this time.",*7,!! Q
"RTN","XMAH",22,0)
 Q:"Dd"'[$E(X_" ")
"RTN","XMAH",23,0)
 S DIR("A")="This a SPOOLER message.  Do you really want to delete it "
"RTN","XMAH",24,0)
 S DIR(0)="Y",DIR("B")="YES" D ^DIR K DIR,DIRUT
"RTN","XMAH",25,0)
 I X["^"!("Nn"[$E(X_" ")) S X="^" W !!,"NOT Deleted !!",*7 Q
"RTN","XMAH",26,0)
 D DEL^ZISPL S X="D"
"RTN","XMAH",27,0)
 Q
"RTN","XMAH",28,0)
 ; **************************************************************
"RTN","XMAH",29,0)
 ; **************************************************************
"RTN","XMAH0")
0^187^B1848
"RTN","XMAH0",1,0)
XMAH0 ;(WASH ISC)/CAP/THM- * OBSOLETE * ;12/12/97  15:25
"RTN","XMAH0",2,0)
 ;;7.1;MailMan;**36,50**;Jun 02, 1994
"RTN","XMAH0",3,0)
 Q
"RTN","XMAH1")
0^131^B3671272
"RTN","XMAH1",1,0)
XMAH1 ;(WASH ISC)/CAP-Reply to a message ;06/23/99  14:37
"RTN","XMAH1",2,0)
 ;;7.1;MailMan;**4,50**;Jun 02, 1994
"RTN","XMAH1",3,0)
 ; Entry points (DBIA 1232):
"RTN","XMAH1",4,0)
 ; ^XMAH1      Interactive respond to a message
"RTN","XMAH1",5,0)
 ; ENTA^XMAH1  Interactive respond to a message
"RTN","XMAH1",6,0)
 ;
"RTN","XMAH1",7,0)
ENTA ; Interactive respond to a message
"RTN","XMAH1",8,0)
 ; Needs:
"RTN","XMAH1",9,0)
 ; XMDUZ  user ID
"RTN","XMAH1",10,0)
 ; XMK    basket number
"RTN","XMAH1",11,0)
 ; XMZ    message number
"RTN","XMAH1",12,0)
 ; Optional:
"RTN","XMAH1",13,0)
 ; XMDF   If $D(XMDF), then addressing restrictions are ignored.
"RTN","XMAH1",14,0)
 N XMV,XMSUBJ,XMFROM,XMINSTR,XMKN,XMIEN,XMRESP,XMRESPSO,XMPAKMAN,XMSECURE,XMABORT
"RTN","XMAH1",15,0)
 S XMABORT=0
"RTN","XMAH1",16,0)
 D INIT(XMDUZ,XMK,.XMKN,XMZ,.XMSUBJ,.XMFROM,.XMINSTR,.XMIEN,.XMRESPSO,.XMRESP,.XMABORT) Q:XMABORT
"RTN","XMAH1",17,0)
 D REPLY^XMJMR(XMDUZ,.XMK,.XMKN,XMZ,XMSUBJ,XMFROM,.XMINSTR,XMIEN,XMRESPSO,0,XMRESP)
"RTN","XMAH1",18,0)
 Q
"RTN","XMAH1",19,0)
INIT(XMDUZ,XMK,XMKN,XMZ,XMSUBJ,XMFROM,XMINSTR,XMIEN,XMRESPSO,XMRESP,XMABORT) ;
"RTN","XMAH1",20,0)
 N XMIM,XMIU,XMZREC
"RTN","XMAH1",21,0)
 D INIT^XMVVITAE
"RTN","XMAH1",22,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMAH1",23,0)
 S XMZREC=^XMB(3.9,XMZ,0)
"RTN","XMAH1",24,0)
 I '$$REPLY^XMXSEC(XMDUZ,XMZ,XMZREC) D SHOW^XMJERR S XMABORT=1 Q
"RTN","XMAH1",25,0)
 I $D(XMDF) S XMINSTR("ADDR FLAGS")="R" ; no addressing restrictions
"RTN","XMAH1",26,0)
 D INMSG^XMXUTIL2(XMDUZ,0,XMZ,XMZREC,"I",.XMIM,.XMINSTR,.XMIU)
"RTN","XMAH1",27,0)
 I $D(XMINSTR("SCR HINT")),'$D(XMSECURE),'$$KEYOK^XMJMCODE(XMZ,XMINSTR("SCR HINT")) S XMABORT=1 Q
"RTN","XMAH1",28,0)
 S XMSUBJ=XMIM("SUBJ")
"RTN","XMAH1",29,0)
 S XMFROM=XMIM("FROM")
"RTN","XMAH1",30,0)
 S XMRESPSO=XMIM("RESPS")
"RTN","XMAH1",31,0)
 S XMIEN=XMIU("IEN")
"RTN","XMAH1",32,0)
 S XMRESP=XMIU("RESP")
"RTN","XMAH1",33,0)
 S XMPAKMAN=$S(XMINSTR("TYPE")["X":1,XMINSTR("TYPE")["K":1,1:0)
"RTN","XMAH1",34,0)
 S XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1)
"RTN","XMAH1",35,0)
 Q
"RTN","XMAI")
0^195^B1565
"RTN","XMAI",1,0)
XMAI ;(WASH ISC)/CAP- * OBSOLETE * ;12/12/97  15:27
"RTN","XMAI",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMAI",3,0)
 Q
"RTN","XMAI0")
0^156^B1853
"RTN","XMAI0",1,0)
XMAI0 ;(WASH ISC)/CAP/RJ- * OBSOLETE * ;12/12/97  15:29
"RTN","XMAI0",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMAI0",3,0)
 Q
"RTN","XMAI1")
0^162^B1859
"RTN","XMAI1",1,0)
XMAI1 ;(WASH ISC)/CAP- * OBSOLETE * ;12/12/97  15:29
"RTN","XMAI1",2,0)
 ;;7.1;MailMan;**43,50**;Jun 02, 1994
"RTN","XMAI1",3,0)
 Q
"RTN","XMAI2")
0^87^B5996470
"RTN","XMAI2",1,0)
XMAI2 ;(WASH ISC)/CAP/L.RHODE -Send a message if too many messages ;05/27/99  12:47
"RTN","XMAI2",2,0)
 ;;7.1;MailMan;**36,50**;Jun 02, 1994
"RTN","XMAI2",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMAI2",4,0)
 ; ENTER   XMMGR-DISK-MANY-MESSAGE-MAINT
"RTN","XMAI2",5,0)
ENTER ;
"RTN","XMAI2",6,0)
 N XMMAX,XMSAVE,XMABORT,I
"RTN","XMAI2",7,0)
 S XMABORT=0
"RTN","XMAI2",8,0)
 D INIT(.XMMAX,.XMABORT) Q:XMABORT
"RTN","XMAI2",9,0)
 I $D(ZTQUEUED) D PROCESS Q
"RTN","XMAI2",10,0)
 F I="XMMAX" S XMSAVE(I)=""
"RTN","XMAI2",11,0)
 D EN^XUTMDEVQ("PROCESS^XMAI2","MailMan Many Msg Maint Request",.XMSAVE)
"RTN","XMAI2",12,0)
 Q
"RTN","XMAI2",13,0)
INIT(XMMAX,XMABORT) ;
"RTN","XMAI2",14,0)
 S XMMAX=500 ; Threshold number of messages a user can own
"RTN","XMAI2",15,0)
 Q:$D(ZTQUEUED)
"RTN","XMAI2",16,0)
 N DIR,Y,DIRUT
"RTN","XMAI2",17,0)
 W !!,"This option sends a message to every user who has more than"
"RTN","XMAI2",18,0)
 W !,XMMAX," messages in his or her mailbox, asking the user to"
"RTN","XMAI2",19,0)
 W !,"terminate unnecessary messages."
"RTN","XMAI2",20,0)
 W !!,"You may change the threshold if you wish."
"RTN","XMAI2",21,0)
 S DIR(0)="N^10::"
"RTN","XMAI2",22,0)
 S DIR("A")="Enter the 'many message' threshold"
"RTN","XMAI2",23,0)
 S DIR("B")=XMMAX
"RTN","XMAI2",24,0)
 S DIR("?")="How many messages may a user have before MailMan sends a nastygram?"
"RTN","XMAI2",25,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMAI2",26,0)
 S XMMAX=Y
"RTN","XMAI2",27,0)
 W !!,"Messages will be sent to owners of more than ",XMMAX," messages."
"RTN","XMAI2",28,0)
 W !!,"This option may take awhile - you may wish to queue it."
"RTN","XMAI2",29,0)
 Q
"RTN","XMAI2",30,0)
PROCESS ; (Requires XMMAX)
"RTN","XMAI2",31,0)
 N XMUSER,XMCNT
"RTN","XMAI2",32,0)
 S XMUSER=.9999
"RTN","XMAI2",33,0)
 F  S XMUSER=$O(^XMB(3.7,XMUSER)) Q:XMUSER'>0  D
"RTN","XMAI2",34,0)
 . S XMCNT=$$TMSGCT^XMXUTIL(XMUSER)
"RTN","XMAI2",35,0)
 . D:XMCNT>XMMAX MESSAGE(XMUSER,XMCNT)
"RTN","XMAI2",36,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","XMAI2",37,0)
 Q
"RTN","XMAI2",38,0)
MESSAGE(XMTO,XMCNT) ; Send message
"RTN","XMAI2",39,0)
 N XMTEXT,XMINSTR
"RTN","XMAI2",40,0)
 S XMINSTR("FROM")=.5
"RTN","XMAI2",41,0)
 S XMTEXT(1)="You have at least "_XMCNT_" messages in your mail baskets."
"RTN","XMAI2",42,0)
 S XMTEXT(2)="("_$$BMSGCT^XMXUTIL(XMTO,1)_" in your IN basket)"
"RTN","XMAI2",43,0)
 S XMTEXT(3)=""
"RTN","XMAI2",44,0)
 S XMTEXT(4)="Please terminate all of your unnecessary messages."
"RTN","XMAI2",45,0)
 S XMTEXT(5)=""
"RTN","XMAI2",46,0)
 S XMTEXT(6)="Thanks"
"RTN","XMAI2",47,0)
 D SENDMSG^XMXSEND(.5,"Please Terminate Messages","XMTEXT",XMTO,.XMINSTR)
"RTN","XMAI2",48,0)
 Q
"RTN","XMAK")
0^172^B1042
"RTN","XMAK",1,0)
XMAK ;(WASH ISC)/CAP/THM- * OBSOLETE * ;03/10/98  06:56
"RTN","XMAK",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMAL0")
0^180^B1868
"RTN","XMAL0",1,0)
XMAL0 ;(WASH ISC)/THM/CAP- * OBSOLETE * ;12/15/97  15:49
"RTN","XMAL0",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMAL0",3,0)
 Q
"RTN","XMAL0A")
0^188^B2323
"RTN","XMAL0A",1,0)
XMAL0A ;(WASH ISC)/JSH/CAP- * OBSOLETE * ;12/12/97  15:35
"RTN","XMAL0A",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMAL0A",3,0)
 Q
"RTN","XMANON")
0^191^B2610
"RTN","XMANON",1,0)
XMANON ;(WASH ISC)/CAP - * OBSOLETE * ;12/12/97  15:36
"RTN","XMANON",2,0)
 ;;7.1;MailMan;**7,50**;Jun 02, 1994
"RTN","XMANON",3,0)
 Q
"RTN","XMAP")
0^196^B1600
"RTN","XMAP",1,0)
XMAP ;(WASH ISC)/CAP- * OBSOLETE * ;12/12/97  15:37
"RTN","XMAP",2,0)
 ;;7.1;MailMan;**24,36,50**;Jun 02, 1994
"RTN","XMAP",3,0)
 Q
"RTN","XMAP0")
0^157^B1888
"RTN","XMAP0",1,0)
XMAP0 ;(WASH ISC)/CAP- * OBSOLETE * ;12/12/97  15:38
"RTN","XMAP0",2,0)
 ;;7.1;MailMan;**27,50**;Jun 02, 1994
"RTN","XMAP0",3,0)
 Q
"RTN","XMAP1")
0^163^B1894
"RTN","XMAP1",1,0)
XMAP1 ;(WASH ISC)/CAP- * OBSOLETE * ;12/12/97  15:39
"RTN","XMAP1",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMAP1",3,0)
 Q
"RTN","XMAPHOST")
0^73^B37352022
"RTN","XMAPHOST",1,0)
XMAPHOST ;(WASH ISC)/KMB/CAP-Print to Message (P-MESSAGE) ;06/01/99  14:24
"RTN","XMAPHOST",2,0)
 ;;7.1;MailMan;**7,14,27,36,50**;Sep 12, 1994
"RTN","XMAPHOST",3,0)
 ;
"RTN","XMAPHOST",4,0)
 ;This routine is called as a close execute for the P-Message device
"RTN","XMAPHOST",5,0)
 ;to put reports written to host files (DOS,VMS...) into mail messages.
"RTN","XMAPHOST",6,0)
 ;
"RTN","XMAPHOST",7,0)
 ;It has one idiosyncracy.  If the report contains one single line
"RTN","XMAPHOST",8,0)
 ;or two lines separated with only a $C(13) instead of a CR/LF that is
"RTN","XMAPHOST",9,0)
 ;more than 254 characters long, there will be unexpected results.
"RTN","XMAPHOST",10,0)
 ;
"RTN","XMAPHOST",11,0)
 D INIT(.XMDUZ,.XMAPHOST)
"RTN","XMAPHOST",12,0)
 I $D(XMAPSUBJ) S %=XMAPSUBJ
"RTN","XMAPHOST",13,0)
 D CRE8MSG(XMDUZ,.%,.XMAPHOST)
"RTN","XMAPHOST",14,0)
 Q
"RTN","XMAPHOST",15,0)
INIT(XMDUZ,XMAPHOST) ;
"RTN","XMAPHOST",16,0)
 I '$G(DUZ) D
"RTN","XMAPHOST",17,0)
 . I '$D(ZTQUEUED) U IO(0) W !,*7,"No user identity.  Using Postmaster as sender and receiver." U IO
"RTN","XMAPHOST",18,0)
 . S (XMAPHOST("SET XMDUZ"),XMAPHOST("SET DUZ"))=1
"RTN","XMAPHOST",19,0)
 . S (XMDUZ,DUZ)=.5
"RTN","XMAPHOST",20,0)
 I '$D(^XMB(3.7,DUZ,0)) D
"RTN","XMAPHOST",21,0)
 . I '$D(ZTQUEUED) U IO(0) W !,*7,"You do not have a mailbox.  Using Postmaster as sender and receiver." U IO
"RTN","XMAPHOST",22,0)
 . S (XMAPHOST("SET XMDUZ"),XMAPHOST("SET DUZ"))=1
"RTN","XMAPHOST",23,0)
 . S (XMDUZ,DUZ)=.5
"RTN","XMAPHOST",24,0)
 I '$D(XMDUZ) S XMDUZ=DUZ,XMAPHOST("SET XMDUZ")=1
"RTN","XMAPHOST",25,0)
 I '$D(^XMB(3.7,XMDUZ,0)) D
"RTN","XMAPHOST",26,0)
 . I '$D(ZTQUEUED) U IO(0) W !,*7,"You do not have a mailbox.  Using Postmaster as sender and receiver." U IO
"RTN","XMAPHOST",27,0)
 . S (XMAPHOST("SET XMDUZ"),XMAPHOST("SET DUZ"))=1
"RTN","XMAPHOST",28,0)
 . S (XMDUZ,DUZ)=.5
"RTN","XMAPHOST",29,0)
 I '$D(XMV) D INIT^XMVVITAE S XMAPHOST("SET XMV")=1
"RTN","XMAPHOST",30,0)
 I '$D(ZTQUEUED) K XMY,XMY0
"RTN","XMAPHOST",31,0)
 Q
"RTN","XMAPHOST",32,0)
CRE8MSG(XMDUZ,XMSUBJ,XMAPHOST) ;
"RTN","XMAPHOST",33,0)
 N XMZ
"RTN","XMAPHOST",34,0)
 D INIT^XMXADDR
"RTN","XMAPHOST",35,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMAPHOST",36,0)
 I $D(ZTQUEUED) D
"RTN","XMAPHOST",37,0)
 . S XMSUBJ=$S($L($G(XMSUBJ))>3:XMSUBJ,1:"Queued Mail Report from "_XMV("NAME"))
"RTN","XMAPHOST",38,0)
 E  D
"RTN","XMAPHOST",39,0)
 . U IO(0) W !!,"Moving text to MailMan message... (Creating now) " U IO
"RTN","XMAPHOST",40,0)
 . I $L($G(XMSUBJ))<4 K XMSUBJ
"RTN","XMAPHOST",41,0)
 . D GETSUBJ(.XMSUBJ)
"RTN","XMAPHOST",42,0)
 D CRE8XMZ^XMXSEND(XMSUBJ,.XMZ)
"RTN","XMAPHOST",43,0)
 S XMAPHOST("XMZ")=XMZ,XMAPHOST("XMSUB")=XMSUBJ
"RTN","XMAPHOST",44,0)
 Q
"RTN","XMAPHOST",45,0)
READ ; Read the host file into a message, send it, erase it.
"RTN","XMAPHOST",46,0)
 ; Read record from file.
"RTN","XMAPHOST",47,0)
 ; Each time <CR> is found in record it ends a message line.
"RTN","XMAPHOST",48,0)
 N XMNULCNT,XMLEN,XMOS,XMZ,XMREC,XMI,XMLIMIT
"RTN","XMAPHOST",49,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMAPHOST",50,0)
 S X="EOF^XMAPHOST",@^%ZOSF("TRAP")
"RTN","XMAPHOST",51,0)
 S XMLIMIT=$P($G(^XMB(1,1,.16)),U) ; P-MESSAGE LINE LIMIT
"RTN","XMAPHOST",52,0)
 S:'XMLIMIT XMLIMIT=999999999999999
"RTN","XMAPHOST",53,0)
 S (XMNULCNT,XMI,XMCUTOFF)=0,XMREC="",XMZ=XMAPHOST("XMZ"),XMOS=^%ZOSF("OS")
"RTN","XMAPHOST",54,0)
 I '$D(ZTQUEUED) U IO(0) W !,"." U IO
"RTN","XMAPHOST",55,0)
 E  U IO
"RTN","XMAPHOST",56,0)
 F  S XMREC=$$GET() Q:$G(XMAPHOST("EOF"))  D  Q:$G(XMAPHOST("EOF"))!(XMI>XMLIMIT)
"RTN","XMAPHOST",57,0)
 . I XMREC="" S XMNULCNT=XMNULCNT+1 Q:XMNULCNT>999  ; consecutive null lines
"RTN","XMAPHOST",58,0)
 . E  S XMNULCNT=0
"RTN","XMAPHOST",59,0)
 . S XMLEN=$L(XMREC)
"RTN","XMAPHOST",60,0)
 . F  D  Q:XMREC=""!$G(XMAPHOST("EOF"))
"RTN","XMAPHOST",61,0)
 . . D PUT(XMZ,$P(XMREC,$C(13)),.XMI)
"RTN","XMAPHOST",62,0)
 . . S XMREC=$P(XMREC,$C(13),2,999)
"RTN","XMAPHOST",63,0)
 . . Q:XMREC=""
"RTN","XMAPHOST",64,0)
 . . S:XMLEN>254 XMREC=XMREC_$$GET(),XMLEN=0
"RTN","XMAPHOST",65,0)
 D EOF
"RTN","XMAPHOST",66,0)
 Q
"RTN","XMAPHOST",67,0)
PUT(XMZ,XMREC,XMI) ; Put data into message.
"RTN","XMAPHOST",68,0)
 S XMI=XMI+1,^XMB(3.9,XMZ,2,XMI,0)=$S(XMREC'?.E1C.E:XMREC,1:$$CTRL^XMXUTIL1(XMREC))
"RTN","XMAPHOST",69,0)
 I '$D(ZTQUEUED),XMI#10=0 U IO(0) W "." U IO
"RTN","XMAPHOST",70,0)
 Q
"RTN","XMAPHOST",71,0)
GET() ; Read a record from the file
"RTN","XMAPHOST",72,0)
 N Y,X
"RTN","XMAPHOST",73,0)
 G:$D(XMAPHOST("EOF")) GETR
"RTN","XMAPHOST",74,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMAPHOST",75,0)
 S X="GETQ^XMAPHOST",@^%ZOSF("TRAP")
"RTN","XMAPHOST",76,0)
GETR R Y#255:1
"RTN","XMAPHOST",77,0)
 I XMOS["MSM" G GETQ:$ZC'=0 Q Y
"RTN","XMAPHOST",78,0)
 Q Y
"RTN","XMAPHOST",79,0)
GETQ S XMAPHOST("EOF")=1
"RTN","XMAPHOST",80,0)
 Q ""
"RTN","XMAPHOST",81,0)
EOF ;
"RTN","XMAPHOST",82,0)
 I '$$NEWERR^%ZTER S X="ERR^ZU",@^%ZOSF("TRAP")
"RTN","XMAPHOST",83,0)
 I XMI>XMLIMIT D
"RTN","XMAPHOST",84,0)
 . S XMI=XMI+1,^XMB(3.9,XMZ,2,XMI,0)=""
"RTN","XMAPHOST",85,0)
 . S XMI=XMI+1,^XMB(3.9,XMZ,2,XMI,0)="*******************************************************************"
"RTN","XMAPHOST",86,0)
 . S XMI=XMI+1,^XMB(3.9,XMZ,2,XMI,0)="P-MESSAGE line limit of "_XMLIMIT_" reached.  Rest of file ignored."
"RTN","XMAPHOST",87,0)
 . S XMI=XMI+1,^XMB(3.9,XMZ,2,XMI,0)="*******************************************************************"
"RTN","XMAPHOST",88,0)
 . Q:$D(ZTQUEUED)
"RTN","XMAPHOST",89,0)
 . U IO(0) W !,"P-MESSAGE line limit of ",XMLIMIT," reached.  Rest of file ignored.",!
"RTN","XMAPHOST",90,0)
 E  I '$D(ZTQUEUED) U IO(0) W !,"End of file reached",!
"RTN","XMAPHOST",91,0)
 S ^XMB(3.9,XMAPHOST("XMZ"),2,0)="^3.92A^"_XMI_"^"_XMI
"RTN","XMAPHOST",92,0)
 D SENDMSG
"RTN","XMAPHOST",93,0)
 D CLEANUP
"RTN","XMAPHOST",94,0)
 Q
"RTN","XMAPHOST",95,0)
SENDMSG ; Here, send the message to recipient.
"RTN","XMAPHOST",96,0)
 N XMZ,XMFROM,XMINSTR,XMABORT
"RTN","XMAPHOST",97,0)
 S XMZ=XMAPHOST("XMZ")
"RTN","XMAPHOST",98,0)
 S XMFROM=$P($G(^XMB(3.7,XMDUZ,16)),U,3)
"RTN","XMAPHOST",99,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMAPHOST",100,0)
 I $D(ZTQUEUED) D
"RTN","XMAPHOST",101,0)
 . I XMFROM="P" S XMINSTR("FROM")=.5
"RTN","XMAPHOST",102,0)
 . S XMY(XMDUZ)=""
"RTN","XMAPHOST",103,0)
 . D CHKADDR^XMXADDR(XMDUZ,.XMY,.XMINSTR)
"RTN","XMAPHOST",104,0)
 . K XMY
"RTN","XMAPHOST",105,0)
 E  D  ; ask the user for recipients.
"RTN","XMAPHOST",106,0)
 . U IO(0)
"RTN","XMAPHOST",107,0)
 . S XMABORT=0
"RTN","XMAPHOST",108,0)
 . D FROMWHOM(XMDUZ,XMFROM,.XMINSTR,.XMABORT) Q:XMABORT
"RTN","XMAPHOST",109,0)
 . D TOWHOM^XMJMT(XMDUZ,"Send",.XMINSTR,"",.XMABORT)
"RTN","XMAPHOST",110,0)
 . U IO
"RTN","XMAPHOST",111,0)
 I '$D(^TMP("XMY",$J)) D  Q
"RTN","XMAPHOST",112,0)
 . D KILLMSG^XMXUTIL(XMZ)
"RTN","XMAPHOST",113,0)
 . K XMERR,^TMP("XMERR",$J)
"RTN","XMAPHOST",114,0)
 D MOVEPART^XMXSEND(XMDUZ,XMZ,.XMINSTR)
"RTN","XMAPHOST",115,0)
 I $D(XMINSTR("FROM")),$D(XMINSTR("SELF BSKT")) D
"RTN","XMAPHOST",116,0)
 . D FWD^XMKP(XMDUZ,XMZ,.XMINSTR)
"RTN","XMAPHOST",117,0)
 E  D
"RTN","XMAPHOST",118,0)
 . D SEND^XMKP(XMDUZ,XMZ,.XMINSTR)
"RTN","XMAPHOST",119,0)
 D CHECK^XMKPL
"RTN","XMAPHOST",120,0)
 I '$D(ZTQUEUED) U IO(0) W !,"Message subject: ",XMAPHOST("XMSUB"),", Message number: ",XMZ,! H 3
"RTN","XMAPHOST",121,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMAPHOST",122,0)
 Q
"RTN","XMAPHOST",123,0)
FROMWHOM(XMDUZ,XMFROM,XMINSTR,XMABORT) ;
"RTN","XMAPHOST",124,0)
 N DIR,X,Y
"RTN","XMAPHOST",125,0)
 S DIR("A")="From whom"
"RTN","XMAPHOST",126,0)
 S DIR(0)="S^M:Me;P:Postmaster"
"RTN","XMAPHOST",127,0)
 S DIR("B")=$S(XMFROM="P":"Postmaster",1:"Me")
"RTN","XMAPHOST",128,0)
 S DIR("?",1)="Answer 'Me' if the message should be from you."
"RTN","XMAPHOST",129,0)
 S DIR("?",2)="If you send this to yourself, it will not be delivered new to you,"
"RTN","XMAPHOST",130,0)
 S DIR("?",3)="but you will be able to edit it, if you don't send it to anyone else."
"RTN","XMAPHOST",131,0)
 S DIR("?",4)=""
"RTN","XMAPHOST",132,0)
 S DIR("?",5)="Answer 'Postmaster' if the message should be from the Postmaster."
"RTN","XMAPHOST",133,0)
 S DIR("?",6)="If you send this to yourself, it will be delivered new to you,"
"RTN","XMAPHOST",134,0)
 S DIR("?")="but you will not be able to edit it."
"RTN","XMAPHOST",135,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMAPHOST",136,0)
 I Y="P" S XMINSTR("FROM")=.5
"RTN","XMAPHOST",137,0)
 Q
"RTN","XMAPHOST",138,0)
CLEANUP ;
"RTN","XMAPHOST",139,0)
 S IONOFF=1 ;Prevent form feed during device close
"RTN","XMAPHOST",140,0)
 D CLEANUP^XMXADDR
"RTN","XMAPHOST",141,0)
 K:$G(XMAPHOST("SET DUZ")) DUZ
"RTN","XMAPHOST",142,0)
 K:$G(XMAPHOST("SET XMDUZ")) XMDUZ
"RTN","XMAPHOST",143,0)
 K:$G(XMAPHOST("SET XMV")) XMV
"RTN","XMAPHOST",144,0)
 K %,XMAPHOST
"RTN","XMAPHOST",145,0)
 Q
"RTN","XMAPHOST",146,0)
GETSUBJ(XMSUBJ) ;
"RTN","XMAPHOST",147,0)
 N XMABORT,XMHOLD
"RTN","XMAPHOST",148,0)
 S:$D(XMSUBJ) XMHOLD=XMSUBJ
"RTN","XMAPHOST",149,0)
 U IO(0)
"RTN","XMAPHOST",150,0)
 F  D  Q:'XMABORT
"RTN","XMAPHOST",151,0)
 . S XMABORT=0
"RTN","XMAPHOST",152,0)
 . D SUBJ^XMJMS(.XMSUBJ,.XMABORT)
"RTN","XMAPHOST",153,0)
 . Q:'XMABORT
"RTN","XMAPHOST",154,0)
 . S:$D(XMHOLD) XMSUBJ=XMHOLD
"RTN","XMAPHOST",155,0)
 . W !!,"Sorry, I cannot stop the creation of this message at this point.",!,"You must enter a valid SUBJECT.",!
"RTN","XMAPHOST",156,0)
 U IO
"RTN","XMAPHOST",157,0)
 Q
"RTN","XMASEC")
0^199^B63884
"RTN","XMASEC",1,0)
XMASEC ;(WASH ISC)/GM-Secure Packman Message ;05/06/99  15:50
"RTN","XMASEC",2,0)
 ;;7.1;MailMan;**33,50**;Jun 02, 1994
"RTN","XMASEC",3,0)
 N XMABORT
"RTN","XMASEC",4,0)
 S XMABORT=0
"RTN","XMASEC",5,0)
 D PSECURE^XMPSEC(XMZ,.XMABORT)
"RTN","XMASEC",6,0)
 Q
"RTN","XMB")
0^66^B14953608
"RTN","XMB",1,0)
XMB ;(WASH ISC)/THM/RWF/CAP-Bulletins & TaskMan ;06/02/99  15:47
"RTN","XMB",2,0)
 ;;7.1;MailMan;**3,7,24,26,27,50**;Jun 02, 1994
"RTN","XMB",3,0)
 ; Entry points are (DBIA 10069):
"RTN","XMB",4,0)
 ; ^XMB     Create and deliver a bulletin in the background (task).
"RTN","XMB",5,0)
 ; EN^XMB   Create a bulletin in the foreground (now) and send it in
"RTN","XMB",6,0)
 ;          the background (task)
"RTN","XMB",7,0)
 ; BULL^XMB Interactive create and send a bulletin
"RTN","XMB",8,0)
 ;
"RTN","XMB",9,0)
 ; The recipients of the bulletin include any entries in the XMY
"RTN","XMB",10,0)
 ; array that the caller has defined and the members of mail group
"RTN","XMB",11,0)
 ; that are included in the definition of the entry in the Bulletin
"RTN","XMB",12,0)
 ; file (#3.6) at the time of delivery.  There must be valid
"RTN","XMB",13,0)
 ; recipients or the message will not be delivered.
"RTN","XMB",14,0)
 ;
"RTN","XMB",15,0)
 ; I/O Variables:
"RTN","XMB",16,0)
 ; XMB             (in) Bulletin name (an entry in File #3.6)
"RTN","XMB",17,0)
 ; XMB(parameter#) (in, optional) Value to be stuffed into the bulletin
"RTN","XMB",18,0)
 ;                 for each required parameter
"RTN","XMB",19,0)
 ;                 eg. XMB(1)=data for parameter#1
"RTN","XMB",20,0)
 ; XMTEXT          (in, optional) Name of array containing
"RTN","XMB",21,0)
 ;                 additional bulletin text
"RTN","XMB",22,0)
 ; XMY             (in, optional) Array of additional recipients of a
"RTN","XMB",23,0)
 ;                 bulletin
"RTN","XMB",24,0)
 ; XMDUZ           (in, optional) Sender # or string saying who or what
"RTN","XMB",25,0)
 ;                 sent the bulletin (default=DUZ)
"RTN","XMB",26,0)
 ; XMDT            (in, optional) Date/time to send bulletin (default=now)
"RTN","XMB",27,0)
 ; XMYBLOB         (in, optional) MIME array
"RTN","XMB",28,0)
 ; XMZ             (out) Message number (if successful)
"RTN","XMB",29,0)
 ;
"RTN","XMB",30,0)
 ; Entry ^XMB:
"RTN","XMB",31,0)
 ; Needs:    XMB
"RTN","XMB",32,0)
 ; Accepts:  XMDUZ,XMTEXT,XMY,XMDT,XMYBLOB
"RTN","XMB",33,0)
 ; Returns:  (XMB=-1 if bulletin does not exist in file 3.6)
"RTN","XMB",34,0)
 ; Kills:    XMTEXT,XMY
"RTN","XMB",35,0)
 N XMINSTR,XMATTACH,XMTASK
"RTN","XMB",36,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMB",37,0)
 I '$O(^XMB(3.6,"B",XMB,"")) S XMB=-1 Q
"RTN","XMB",38,0)
 I '$G(DUZ) N DUZ D DUZ^XUP(.5)
"RTN","XMB",39,0)
 I $G(XMDUZ)=""!($G(XMDUZ)=0) S XMDUZ=DUZ
"RTN","XMB",40,0)
 I XMDUZ'?.N S %=XMDUZ N XMDUZ S XMDUZ=% K %
"RTN","XMB",41,0)
 D:$D(XMYBLOB) SETBLOB(.XMYBLOB,.XMATTACH)
"RTN","XMB",42,0)
 D:$D(XMDT) SETLATER(XMDT,.XMINSTR)
"RTN","XMB",43,0)
 I XMDUZ'?.N D SETFROM^XMD(.XMDUZ,.XMINSTR) Q:$G(XMMG)["Error ="
"RTN","XMB",44,0)
 S:$D(XMTEXT) XMTEXT=$$CREF^DILF(XMTEXT)
"RTN","XMB",45,0)
 S:$D(XMDF) XMINSTR("ADDR FLAGS")="R" ; Ignore addressee restrictions
"RTN","XMB",46,0)
 S:$D(XMBTMP) XMINSTR("ADDR FLAGS")=$G(XMINSTR("ADDR FLAGS"))_"I" ; Don't initialize (kill) the ^TMP addressee global
"RTN","XMB",47,0)
 D TASKBULL^XMXBULL(XMDUZ,XMB,.XMB,.XMTEXT,.XMY,.XMINSTR,.XMTASK,.XMATTACH)
"RTN","XMB",48,0)
 K:$D(XMERR) XMERR,^TMP("XMERR",$J)
"RTN","XMB",49,0)
 K XMTEXT,XMY
"RTN","XMB",50,0)
 Q
"RTN","XMB",51,0)
EN ;Interactive Bulletin Entry Point
"RTN","XMB",52,0)
 ; Needs:    XMB
"RTN","XMB",53,0)
 ; Accepts:  XMDUZ,XMTEXT,XMY,XMDT,XMYBLOB
"RTN","XMB",54,0)
 ; Returns:  XMZ,(XMB=-1 if bulletin does not exist in file 3.6)
"RTN","XMB",55,0)
 ; Kills:    XMB,XMTEXT,XMY
"RTN","XMB",56,0)
 N XMBIEN,XMINSTR
"RTN","XMB",57,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMB",58,0)
 S XMBIEN=$O(^XMB(3.6,"B",XMB,"")) I XMBIEN="" S XMB=-1 Q
"RTN","XMB",59,0)
 I '$G(DUZ) N DUZ D DUZ^XUP(.5)
"RTN","XMB",60,0)
 I $G(XMDUZ)=""!($G(XMDUZ)=0) S XMDUZ=DUZ
"RTN","XMB",61,0)
 I XMDUZ'?.N S %=XMDUZ N XMDUZ S XMDUZ=% K %
"RTN","XMB",62,0)
 D:$D(XMYBLOB) SETBLOB(.XMYBLOB,.XMATTACH)
"RTN","XMB",63,0)
 I XMDUZ'?.N D SETFROM^XMD(.XMDUZ,.XMINSTR) Q:$G(XMMG)["Error ="
"RTN","XMB",64,0)
 S:$D(XMTEXT) XMTEXT=$$CREF^DILF(XMTEXT)
"RTN","XMB",65,0)
 S:$D(XMDF) XMINSTR("ADDR FLAGS")="R" ; Ignore addressee restrictions
"RTN","XMB",66,0)
 S:$D(XMBTMP) XMINSTR("ADDR FLAGS")=$G(XMINSTR("ADDR FLAGS"))_"I" ; Don't initialize (kill) the ^TMP addressee global
"RTN","XMB",67,0)
 D SEND^XMXBULL(XMDUZ,XMBIEN,.XMB,.XMTEXT,.XMY,.XMINSTR,.XMZ,.XMATTACH)
"RTN","XMB",68,0)
 K:$D(XMERR) XMERR,^TMP("XMERR",$J)
"RTN","XMB",69,0)
 K XMB,XMTEXT,XMY
"RTN","XMB",70,0)
 Q
"RTN","XMB",71,0)
SETBLOB(XMYBLOB,XMATTACH) ;
"RTN","XMB",72,0)
 N %X,%Y
"RTN","XMB",73,0)
 S %X="XMYBLOB(",%Y="XMATTACH(""IMAGE""," D %XY^%RCR
"RTN","XMB",74,0)
 Q
"RTN","XMB",75,0)
SETLATER(XMDT,XMINSTR) ;
"RTN","XMB",76,0)
 S XMINSTR("LATER")=$$XMDATE^XMXPARM("XMDT",XMDT)
"RTN","XMB",77,0)
 I $D(XMERR) K XMINSTR("LATER"),XMERR,^TMP("XMERR",$J)
"RTN","XMB",78,0)
 Q
"RTN","XMB",79,0)
BULL ; Manually post a bulletin
"RTN","XMB",80,0)
 D BULLETIN^XMJMBULL
"RTN","XMB",81,0)
 Q
"RTN","XMB",82,0)
ZTSK ;ENTRY POINT FROM THE TASK MANAGER
"RTN","XMB",83,0)
 S XMTSK=ZTSK S:'$D(XMDT) XMDT="N"
"RTN","XMB",84,0)
 S:'$D(XMIO) XMIO="" D KILL:"236"'[XMB("TYPE")
"RTN","XMB",85,0)
 S:'$D(XMDUZ) XMDUZ=.5 G @(XMB("TYPE"))
"RTN","XMB",86,0)
2 K:'$G(XMBTMP) ^TMP("XMY",$J),^TMP("XMY0",$J) K XMDT S XMB=XMB("A") G EN ; BULLETIN
"RTN","XMB",87,0)
3 D XMTAUDIT^XMBPOST(.XMB)
"RTN","XMB",88,0)
 G ZTSK^XMS0 ; REMOTE TRANSMISSION
"RTN","XMB",89,0)
4 ; PRINT MESSAGE ON DEVICE
"RTN","XMB",90,0)
 S XMDUZ=XMB("XMDUZ")
"RTN","XMB",91,0)
 S XMZ=XMB("XMZ")
"RTN","XMB",92,0)
 S XMDVIENS=$$IENS(XMZ,XMB("XMXX"))
"RTN","XMB",93,0)
 G DEVICE^XMTDO
"RTN","XMB",94,0)
5 ; PUMP INTO SERVER
"RTN","XMB",95,0)
 S XMZ=XMB("XMZ")
"RTN","XMB",96,0)
 S XMSERVER=XMB("XMXX")
"RTN","XMB",97,0)
 S XMSVIENS=$$IENS(XMZ,XMB("XMXX"))
"RTN","XMB",98,0)
 G SERVER^XMTDO
"RTN","XMB",99,0)
6 G ZTSK^XMS1 ; POLLER
"RTN","XMB",100,0)
7 G RECV^XMS3 ; INTER-UCI TRANSFER
"RTN","XMB",101,0)
 Q
"RTN","XMB",102,0)
IENS(XMZ,XMRECIP) ;
"RTN","XMB",103,0)
 Q $$FIND1^DIC(3.91,","_XMZ_",","QX",XMRECIP,"C")_","_XMZ_","
"RTN","XMB",104,0)
KILL ; Kill task ZTSK
"RTN","XMB",105,0)
 N %
"RTN","XMB",106,0)
 S %=$S($D(XMINST):XMINST,$D(XMSCR):XMSCR,1:0)
"RTN","XMB",107,0)
 I % D
"RTN","XMB",108,0)
 . K ^XMBS(4.2999,%,3)
"RTN","XMB",109,0)
 . S $P(^XMBS(4.2999,%,4),U,2)=$$NOW^XLFDT
"RTN","XMB",110,0)
 S ZTREQ="@" Q
"RTN","XMB",111,0)
NEW ;this tag is no longer called, XM*7.1*24
"RTN","XMB",112,0)
 Q
"RTN","XMB1")
0^197^B1449
"RTN","XMB1",1,0)
XMB1 ;(WASH ISC)/THM/CAP- * OBSOLETE * ;12/12/97  16:09
"RTN","XMB1",2,0)
 ;;7.1;MailMan;**31,50**;Jun 02, 1994
"RTN","XMB1",3,0)
 Q
"RTN","XMBGRP")
0^233^B33459848
"RTN","XMBGRP",1,0)
XMBGRP ;(WASH ISC)/JL,CAP-MAIL GROUP API ;05/22/99  10:47
"RTN","XMBGRP",2,0)
 ;;7.1;MailMan;**13,36,56,50**;Jun 02, 1994
"RTN","XMBGRP",3,0)
 ; Entry points (DBIA 1146):
"RTN","XMBGRP",4,0)
 ; $$DM  Delete local members from a mail group.
"RTN","XMBGRP",5,0)
 ; $$MG  Create a mail group or add members to an existing mail group.
"RTN","XMBGRP",6,0)
MG(XMGROUP,XMTYPE,XMORG,XMSELF,XMY,XMDESC,XMQUIET) ; Create group or add members to existing group
"RTN","XMBGRP",7,0)
 ;Example:
"RTN","XMBGRP",8,0)
 ;S X=$$MG^XMBGRP(XMGROUP,XMTYPE,XMORG,XMSELF,.XMY,.XMDESC,XMQUIET)
"RTN","XMBGRP",9,0)
 ;
"RTN","XMBGRP",10,0)
 ;XMGROUP  =group name if creating a new group;
"RTN","XMBGRP",11,0)
 ;         =group name or pointer to ^XMB(3.8,
"RTN","XMBGRP",12,0)
 ;         if adding members to an existing group.
"RTN","XMBGRP",13,0)
 ;XMTYPE   type of group - used only for creation
"RTN","XMBGRP",14,0)
 ;         0=public (default)
"RTN","XMBGRP",15,0)
 ;         1=private
"RTN","XMBGRP",16,0)
 ;XMORG    group organizer - used only for creation
"RTN","XMBGRP",17,0)
 ;         pointer to ^VA(200, (default=DUZ)
"RTN","XMBGRP",18,0)
 ;XMSELF   allow self enrollment - used only for creation
"RTN","XMBGRP",19,0)
 ;         0=no
"RTN","XMBGRP",20,0)
 ;         1=yes (default)
"RTN","XMBGRP",21,0)
 ;XMY      local group members (Array - Pass by reference)
"RTN","XMBGRP",22,0)
 ;         XMY(member DUZ)=""
"RTN","XMBGRP",23,0)
 ;XMDESC   description (Array - Pass by reference)
"RTN","XMBGRP",24,0)
 ;         - used only for creation
"RTN","XMBGRP",25,0)
 ;         Must be appropriate for FM word processing field.
"RTN","XMBGRP",26,0)
 ;XMQUIET  silent flag
"RTN","XMBGRP",27,0)
 ;         0=interactive
"RTN","XMBGRP",28,0)
 ;         1=silent (default)
"RTN","XMBGRP",29,0)
 N XMABORT,XMGIEN,XMGNAME
"RTN","XMBGRP",30,0)
 S XMABORT=0
"RTN","XMBGRP",31,0)
 D MGINIT(XMGROUP,.XMGIEN,.XMGNAME,.XMTYPE,.XMORG,.XMSELF,.XMY,.XMDESC,.XMQUIET,.XMABORT)
"RTN","XMBGRP",32,0)
 I XMABORT K XMY Q 0
"RTN","XMBGRP",33,0)
 I '$D(XMGIEN) D
"RTN","XMBGRP",34,0)
 . D CREATE(XMGNAME,.XMGIEN,XMTYPE,XMORG,XMSELF,.XMDESC,XMQUIET,.XMABORT)  Q:XMABORT
"RTN","XMBGRP",35,0)
 . Q:'$O(XMY(""))
"RTN","XMBGRP",36,0)
 . D ADD(XMGIEN,.XMY,.XMABORT) Q:XMABORT
"RTN","XMBGRP",37,0)
 . D NOTIFY("Members have been added to the "_XMGNAME_" Mail Group.",XMQUIET)
"RTN","XMBGRP",38,0)
 E  D
"RTN","XMBGRP",39,0)
 . D ADD(XMGIEN,.XMY,.XMABORT)
"RTN","XMBGRP",40,0)
 K XMY
"RTN","XMBGRP",41,0)
 Q $S(XMABORT:0,1:XMGIEN)
"RTN","XMBGRP",42,0)
MGINIT(XMGROUP,XMGIEN,XMGNAME,XMTYPE,XMORG,XMSELF,XMY,XMDESC,XMQUIET,XMABORT) ;
"RTN","XMBGRP",43,0)
 D CHKGROUP(XMGROUP,.XMGIEN,.XMGNAME,.XMABORT) Q:XMABORT
"RTN","XMBGRP",44,0)
 I $D(XMGIEN),'$O(XMY("")) D  Q
"RTN","XMBGRP",45,0)
 . D NOTIFY("E907 No members specified to add to Mail Group "_XMGNAME,XMQUIET)
"RTN","XMBGRP",46,0)
 . S XMABORT=1
"RTN","XMBGRP",47,0)
 D CHKVAL(.XMTYPE,"XMTYPE",2,0,.XMABORT) Q:XMABORT
"RTN","XMBGRP",48,0)
 S:$G(XMORG)="" XMORG=DUZ
"RTN","XMBGRP",49,0)
 S:XMORG<1 XMORG=.5
"RTN","XMBGRP",50,0)
 I '$D(^VA(200,XMORG,0)) D  Q
"RTN","XMBGRP",51,0)
 . D NOTIFY("E904 "_XMORG_" is not a user to use as an organizer of a mail group.",XMQUIET)
"RTN","XMBGRP",52,0)
 . S XMABORT=1
"RTN","XMBGRP",53,0)
 D CHKVAL(.XMSELF,"XMSELF",4,1,.XMABORT) Q:XMABORT
"RTN","XMBGRP",54,0)
 D CHKVAL(.XMQUIET,"XMQUIET",7,1,.XMABORT) Q:XMABORT
"RTN","XMBGRP",55,0)
 S:$D(ZTQUEUED) XMQUIET=1
"RTN","XMBGRP",56,0)
 Q
"RTN","XMBGRP",57,0)
CHKGROUP(XMGROUP,XMGIEN,XMGNAME,XMABORT) ;
"RTN","XMBGRP",58,0)
 I +XMGROUP=XMGROUP D  Q
"RTN","XMBGRP",59,0)
 . S XMGIEN=XMGROUP
"RTN","XMBGRP",60,0)
 . S XMGNAME=$P($G(^XMB(3.8,XMGIEN,0)),U,1)
"RTN","XMBGRP",61,0)
 . I XMGNAME="" D
"RTN","XMBGRP",62,0)
 . . D NOTIFY("E910 Mail Group "_XMGROUP_" could not be found !",XMQUIET)
"RTN","XMBGRP",63,0)
 . . S XMABORT=1
"RTN","XMBGRP",64,0)
 S XMGNAME=XMGROUP
"RTN","XMBGRP",65,0)
 I $L(XMGNAME)<3 D  Q
"RTN","XMBGRP",66,0)
 . D NOTIFY("E901 "_XMGNAME_" is not valid -- it is shorter than 3 characters",XMQUIET)
"RTN","XMBGRP",67,0)
 . S XMABORT=1
"RTN","XMBGRP",68,0)
 I $L(XMGNAME)>30 D  Q
"RTN","XMBGRP",69,0)
 . D NOTIFY("E902 "_XMGNAME_" is not valid -- it is longer than 30 characters",XMQUIET)
"RTN","XMBGRP",70,0)
 . S XMABORT=1
"RTN","XMBGRP",71,0)
 I $D(^XMB(3.8,"B",XMGNAME)) S XMGIEN=$O(^(XMGNAME,0))
"RTN","XMBGRP",72,0)
 Q
"RTN","XMBGRP",73,0)
CHKVAL(XMVAL,XMVNAME,XMPOSN,XMDEFALT,XMABORT) ;
"RTN","XMBGRP",74,0)
 S:$G(XMVAL)="" XMVAL=XMDEFALT
"RTN","XMBGRP",75,0)
 I XMVAL=0!(XMVAL=1) Q
"RTN","XMBGRP",76,0)
 D NOTIFY("E903 Parameter "_XMPOSN_"="_XMVAL_" (not valid, must be 0 or 1).",XMQUIET)
"RTN","XMBGRP",77,0)
 S XMABORT=1
"RTN","XMBGRP",78,0)
 Q
"RTN","XMBGRP",79,0)
CREATE(XMGNAME,XMGIEN,XMTYPE,XMORG,XMSELF,XMDESC,XMQUIET,XMABORT) ;
"RTN","XMBGRP",80,0)
 N DIC,Y,DA,DO,DD,X
"RTN","XMBGRP",81,0)
 S X=XMGNAME
"RTN","XMBGRP",82,0)
 S DIC="^XMB(3.8,",DIC(0)="FZMN"_$S(XMQUIET:"",1:"E")
"RTN","XMBGRP",83,0)
 S DIC("DR")="4///"_$S(XMTYPE=0:"PU",1:"PR")_";5///"_XMORG_";10///0;7///"_$S(XMSELF:"y",1:"n")
"RTN","XMBGRP",84,0)
 D FILE^DICN
"RTN","XMBGRP",85,0)
 I Y<0 D  Q
"RTN","XMBGRP",86,0)
 . D NOTIFY("Mail Group ("_XMGNAME_") creation failed!",XMQUIET)
"RTN","XMBGRP",87,0)
 . S XMABORT=1
"RTN","XMBGRP",88,0)
 S XMGIEN=+Y
"RTN","XMBGRP",89,0)
 ;Add descriptive text
"RTN","XMBGRP",90,0)
 I $O(XMDESC(""))'="" D
"RTN","XMBGRP",91,0)
 . D WP^DIE(3.8,XMGIEN_",",3,"","XMDESC")
"RTN","XMBGRP",92,0)
 . K XMDESC
"RTN","XMBGRP",93,0)
 D NOTIFY("Mail Group "_XMGROUP_" created.",XMQUIET)
"RTN","XMBGRP",94,0)
 Q
"RTN","XMBGRP",95,0)
ADD(XMGIEN,XMY,XMABORT) ; Add local members
"RTN","XMBGRP",96,0)
 L +^XMB(3.8,XMGIEN):9 E  D  Q
"RTN","XMBGRP",97,0)
 . D NOTIFY("E906 "_XMGROUP_" File could not be locked - Did not add members.",XMQUIET)
"RTN","XMBGRP",98,0)
 . S XMABORT=1
"RTN","XMBGRP",99,0)
 N XMUSER,XMFDA,XMADDCNT
"RTN","XMBGRP",100,0)
 S XMUSER="",XMADDCNT=0
"RTN","XMBGRP",101,0)
 F  S XMUSER=$O(XMY(XMUSER)) Q:XMUSER=""  D
"RTN","XMBGRP",102,0)
 . I '$D(^VA(200,XMUSER,0))!'$D(^XMB(3.7,XMUSER,0)) D  Q
"RTN","XMBGRP",103,0)
 . . D NOTIFY("E908 Invalid member ("_XMUSER_") - NOT pointer to ^VA(200",XMQUIET)
"RTN","XMBGRP",104,0)
 . Q:$D(^XMB(3.8,XMGIEN,1,"B",XMUSER))  ; already a member
"RTN","XMBGRP",105,0)
 . S XMFDA(3.81,"+1,"_XMGIEN_",",.01)=XMUSER
"RTN","XMBGRP",106,0)
 . D UPDATE^DIE("","XMFDA")
"RTN","XMBGRP",107,0)
 . S XMADDCNT=XMADDCNT+1
"RTN","XMBGRP",108,0)
 L -^XMB(3.8,XMGIEN)
"RTN","XMBGRP",109,0)
 K XMY
"RTN","XMBGRP",110,0)
 S:'XMADDCNT XMABORT=1  ; No members added
"RTN","XMBGRP",111,0)
 Q
"RTN","XMBGRP",112,0)
DM(XMGROUP,XMY,XMQUIET) ; Delete members
"RTN","XMBGRP",113,0)
 ;XMGROUP  Mail Group Name or entry number
"RTN","XMBGRP",114,0)
 ;XMY      Array of members to remove
"RTN","XMBGRP",115,0)
 ;         XMY(local member DUZ)=""
"RTN","XMBGRP",116,0)
 ;XMQUIET  Silent Flag
"RTN","XMBGRP",117,0)
 N XMGIEN,XMUSER,DIK,DA,XMABORT
"RTN","XMBGRP",118,0)
 S XMABORT=0
"RTN","XMBGRP",119,0)
 D DMINIT(XMGROUP,.XMGIEN,.XMY,.XMQUIET,.XMABORT)
"RTN","XMBGRP",120,0)
 I XMABORT K XMY Q 0
"RTN","XMBGRP",121,0)
 L +^XMB(3.8,XMGIEN):9 E  D  Q 0
"RTN","XMBGRP",122,0)
 . D NOTIFY("E906 "_XMGROUP_" File could not be locked - Did not delete members.",XMQUIET)
"RTN","XMBGRP",123,0)
 . S XMABORT=1
"RTN","XMBGRP",124,0)
 S DA(1)=XMGIEN,DIK="^XMB(3.8,"_XMGIEN_",1,"
"RTN","XMBGRP",125,0)
 S XMUSER=""
"RTN","XMBGRP",126,0)
 F  S XMUSER=$O(XMY(XMUSER)) Q:XMUSER=""  D
"RTN","XMBGRP",127,0)
 . S DA=$O(^XMB(3.8,XMGIEN,1,"B",XMUSER,0)) Q:'DA
"RTN","XMBGRP",128,0)
 . D ^DIK
"RTN","XMBGRP",129,0)
 K XMY
"RTN","XMBGRP",130,0)
 L -^XMB(3.8,XMGIEN)
"RTN","XMBGRP",131,0)
 Q 1
"RTN","XMBGRP",132,0)
DMINIT(XMGROUP,XMGIEN,XMY,XMQUIET,XMABORT) ;
"RTN","XMBGRP",133,0)
 N XMGNAME
"RTN","XMBGRP",134,0)
 D CHKGROUP(XMGROUP,.XMGIEN,.XMGNAME,.XMABORT) Q:XMABORT
"RTN","XMBGRP",135,0)
 I '$D(XMGIEN) D  Q
"RTN","XMBGRP",136,0)
 . D NOTIFY("E910 Mail Group "_XMGROUP_" could not be found !",XMQUIET)
"RTN","XMBGRP",137,0)
 . S XMABORT=1
"RTN","XMBGRP",138,0)
 D CHKVAL(.XMQUIET,"XMQUIET",3,1,.XMABORT) Q:XMABORT
"RTN","XMBGRP",139,0)
 S:$D(ZTQUEUED) XMQUIET=1
"RTN","XMBGRP",140,0)
 I '$O(XMY("")) D  Q
"RTN","XMBGRP",141,0)
 . D NOTIFY("E909 Member delete attempted with no members specified.",XMQUIET)
"RTN","XMBGRP",142,0)
 . S XMABORT=1
"RTN","XMBGRP",143,0)
 Q
"RTN","XMBGRP",144,0)
NOTIFY(XMMSG,XMQUIET) ; Notification
"RTN","XMBGRP",145,0)
 N I,XMTEXT
"RTN","XMBGRP",146,0)
 S XMTEXT(1)="There was a call to the Mail Group Applications Programmer"
"RTN","XMBGRP",147,0)
 S XMTEXT(2)="Interface (API) that required notification to the user:"
"RTN","XMBGRP",148,0)
 S XMTEXT(3)=""
"RTN","XMBGRP",149,0)
 S XMTEXT(4)=XMMSG
"RTN","XMBGRP",150,0)
 I XMQUIET D SENDMSG(.XMTEXT) Q
"RTN","XMBGRP",151,0)
 F I=1:1:4 W !,XMTEXT(I)
"RTN","XMBGRP",152,0)
 W !,*7
"RTN","XMBGRP",153,0)
 Q
"RTN","XMBGRP",154,0)
SENDMSG(XMTEXT) ;
"RTN","XMBGRP",155,0)
 N XMY,XMDUZ,XMSUB
"RTN","XMBGRP",156,0)
 S XMY(.5)="",XMY(DUZ)="",XMTEXT="XMTEXT("
"RTN","XMBGRP",157,0)
 S XMDUZ=.5,XMSUB="MAIL GROUP API"
"RTN","XMBGRP",158,0)
 D ^XMD
"RTN","XMBGRP",159,0)
 Q
"RTN","XMBPOST")
0^259^B37801516
"RTN","XMBPOST",1,0)
XMBPOST ;(WASH ISC)/THM/RWF/CAP-Create Task ;03/24/99  15:07
"RTN","XMBPOST",2,0)
 ;;7.1;MailMan;**4,13,23,24,27,38,50**;Jun 02, 1994
"RTN","XMBPOST",3,0)
 ;
"RTN","XMBPOST",4,0)
 ;*******XXX/KCMO - MODIFIED AT TIM
"RTN","XMBPOST",5,0)
 ;
"RTN","XMBPOST",6,0)
 ;XMB("SCRIPT")=Zero node of Script last run
"RTN","XMBPOST",7,0)
 ;XMB("SCRIPT",0)=Pointer to last script used
"RTN","XMBPOST",8,0)
 ;
"RTN","XMBPOST",9,0)
 ;Schedule a Task: 1=BASKET DROP,2=BULLETIN,3=MESSAGE TRANSMISSION
"RTN","XMBPOST",10,0)
 ;
"RTN","XMBPOST",11,0)
 ;Skip next logic if not network mail task
"RTN","XMBPOST",12,0)
 G 0:'$D(XMINST),0:XMB("TYPE")'=3
"RTN","XMBPOST",13,0)
 ;
"RTN","XMBPOST",14,0)
 ;No new task for Network Transmission if one already scheduled
"RTN","XMBPOST",15,0)
 S %=$P($G(^XMBS(4.2999,XMINST,0)),U,2) I % Q:$$CHK^XMS5(%,XMINST)
"RTN","XMBPOST",16,0)
 D XMTCHECK(XMINST,.XMB)
"RTN","XMBPOST",17,0)
 ;
"RTN","XMBPOST",18,0)
ZTSK ;Entry if Requeue from Task
"RTN","XMBPOST",19,0)
 ;No task if TCP Poll Flag set
"RTN","XMBPOST",20,0)
 ; Q:$D(^DIC(4.2,"ATCP",1,XMINST))
"RTN","XMBPOST",21,0)
 ;
"RTN","XMBPOST",22,0)
 ;Transmission Script zero node
"RTN","XMBPOST",23,0)
 S XMOKSCR("SMTP")="",XMOKSCR("NONE")=""
"RTN","XMBPOST",24,0)
 S %=$G(XMB("SCRIPT",0))
"RTN","XMBPOST",25,0)
 I %="" D
"RTN","XMBPOST",26,0)
 . S %=$$SCR(XMINST,.XMOKSCR,"") Q:%=""
"RTN","XMBPOST",27,0)
 . D XMB
"RTN","XMBPOST",28,0)
 . S XMB("ITERATIONS")=0
"RTN","XMBPOST",29,0)
 . S XMB("FIRST SCRIPT")=XMB("SCRIPT",0)
"RTN","XMBPOST",30,0)
 E  I XMB("TRIES")'<$P($G(XMB("SCRIPT")),U,3) D
"RTN","XMBPOST",31,0)
 . ; Use TRANSMISSION SCRIPT according to priority & number of attempts
"RTN","XMBPOST",32,0)
 . S %=$$SCR(XMINST,.XMOKSCR,%) Q:%=""
"RTN","XMBPOST",33,0)
 . D XMB
"RTN","XMBPOST",34,0)
 . S XMB("TRIES",0,"$H")=$H
"RTN","XMBPOST",35,0)
 . S:XMB("SCRIPT",0)=XMB("FIRST SCRIPT") XMB("ITERATIONS")=XMB("ITERATIONS")+1
"RTN","XMBPOST",36,0)
 Q:%=""
"RTN","XMBPOST",37,0)
 S %=$P(XMB("SCRIPT"),U,5),XMIO=$S($D(XMIO("DSERV")):XMIO("DSERV"),$L(%):%,1:$P(^DIC(4.2,XMINST,0),U,17)),XMB("TRIES")=XMB("TRIES")+1,$P(XMB("SCRIPT"),U,7)=$P(XMB("SCRIPT"),U,7)+1
"RTN","XMBPOST",38,0)
 S $P(XMB("SCRIPT"),U,8)=$P(XMB("SCRIPT"),U,8)+1
"RTN","XMBPOST",39,0)
 ;
"RTN","XMBPOST",40,0)
 ;Set-up
"RTN","XMBPOST",41,0)
0 I '$D(XMS5("RETURN_TASK#")) N ZTSK
"RTN","XMBPOST",42,0)
 N I,X,Y,XMJ,XMP,ZTDTH,ZTPAR,ZTUCI,ZTSAVE,ZTIO,ZTDESC,ZTRTN
"RTN","XMBPOST",43,0)
 ;
"RTN","XMBPOST",44,0)
 ;Preserve X and Y coming in
"RTN","XMBPOST",45,0)
 ;S:$D(X)#10 XMP=X S:$D(Y)#10 $P(XMP,U,2,3)=Y_U_"*"
"RTN","XMBPOST",46,0)
 ;
"RTN","XMBPOST",47,0)
 ;Device
"RTN","XMBPOST",48,0)
 I '$D(XMIO),XMB("TYPE")=3 S Y=$P($G(^DIC(4.2,XMINST,0)),U,17),XMIO=$S($L(Y):Y,1:"")
"RTN","XMBPOST",49,0)
 ;
"RTN","XMBPOST",50,0)
TIM ;Time
"RTN","XMBPOST",51,0)
 ;Pause if remote transmission
"RTN","XMBPOST",52,0)
 I $G(XMB("TYPE"))=3 D
"RTN","XMBPOST",53,0)
 . ; If we are about to start the cycle of scripts again, schedule the
"RTN","XMBPOST",54,0)
 . ; task for 1 hour from now.
"RTN","XMBPOST",55,0)
 . I XMB("ITERATIONS")>0,XMB("TRIES")=1,XMB("SCRIPT",0)=XMB("FIRST SCRIPT") S ZTDTH=$$HADD^XLFDT($H,"",1) Q
"RTN","XMBPOST",56,0)
 . ; If we are about to retry, schedule the task for "tries" number of
"RTN","XMBPOST",57,0)
 . ; minutes from now.
"RTN","XMBPOST",58,0)
 . I $G(XMB("TRIES"))>1 S ZTDTH=$$HADD^XLFDT($H,"","",XMB("TRIES"))
"RTN","XMBPOST",59,0)
 S:'$D(ZTDTH) ZTDTH=$H
"RTN","XMBPOST",60,0)
 ;
"RTN","XMBPOST",61,0)
 ;Which UCI
"RTN","XMBPOST",62,0)
 X ^%ZOSF("UCI") S ZTUCI=Y
"RTN","XMBPOST",63,0)
 ;
"RTN","XMBPOST",64,0)
 ;Bulletin name
"RTN","XMBPOST",65,0)
 I $D(XMB)#2 S XMB("A")=XMB
"RTN","XMBPOST",66,0)
 ;
"RTN","XMBPOST",67,0)
 ;Defaults
"RTN","XMBPOST",68,0)
 D SW S X="MailMan",ZTRTN="ZTSK^XMB",ZTIO=$S($D(XMIO):XMIO,1:"")
"RTN","XMBPOST",69,0)
 F I="XMB*","XMIO","ION","XMY*","XMYBLOB","XMDUZ" S ZTSAVE(I)=""
"RTN","XMBPOST",70,0)
 I $D(^TMP("XMBTEXT",$J)) S ZTSAVE("^TMP(""XMBTEXT"",$J,")=""
"RTN","XMBPOST",71,0)
 I XMB("TYPE")=2 S X="Bulletin: "_XMB
"RTN","XMBPOST",72,0)
 I XMB("TYPE")=3 S X="Network Mail to "_XMB("XMSCRN"),ZTSAVE("DUZ")=.5
"RTN","XMBPOST",73,0)
 E  F I="^TMP(""XMY"",$J,","^TMP(""XMY0"",$J," S ZTSAVE(I)=""
"RTN","XMBPOST",74,0)
 S ZTDESC=X,ZTPAR=3
"RTN","XMBPOST",75,0)
 ;
"RTN","XMBPOST",76,0)
 ;Schedule Task
"RTN","XMBPOST",77,0)
 D ^%ZTLOAD
"RTN","XMBPOST",78,0)
 I $D(XMB("XMSCR")) S $P(^XMBS(4.2999,XMB("XMSCR"),3),U,7)=ZTSK,$P(^(0),U,2)=ZTSK
"RTN","XMBPOST",79,0)
 ;
"RTN","XMBPOST",80,0)
 ;Handle return for Device server (d.device_name addresses)
"RTN","XMBPOST",81,0)
 ;I $D(XMP) S X=$P(XMP,U) I $P(XMP,U,3)="*" S Y=$P(XMP,U,2)
"RTN","XMBPOST",82,0)
 ;
"RTN","XMBPOST",83,0)
 ;Clean up and Quit
"RTN","XMBPOST",84,0)
PK K XMIO,XMKK,XMTEXT,XMTSK,%DT,XMOKSCR Q
"RTN","XMBPOST",85,0)
 ;
"RTN","XMBPOST",86,0)
 ;Move Text array input to alternative array
"RTN","XMBPOST",87,0)
SW Q:$G(XMTEXT)=""  K ^TMP("XMBTEXT",$J)
"RTN","XMBPOST",88,0)
 S %X=XMTEXT,%Y="^TMP(""XMBTEXT"",$J," D %XY^%RCR
"RTN","XMBPOST",89,0)
 Q
"RTN","XMBPOST",90,0)
 ;Get Transmission Script Data
"RTN","XMBPOST",91,0)
SCR(D,XMOKSCR,%) ;Parameter1=pointer to domain
"RTN","XMBPOST",92,0)
 ;Parameter2=list of acceptable script types
"RTN","XMBPOST",93,0)
 ;Parameter3=pointer to last script used
"RTN","XMBPOST",94,0)
 ;RETURNS  ptr to script ^ 0 node of script
"RTN","XMBPOST",95,0)
 ;If no transmission scripts are prioritized use old data/defaults
"RTN","XMBPOST",96,0)
 N I,J,K,X,Y,XER,XMREC
"RTN","XMBPOST",97,0)
 I $G(XM1Q) G PP
"RTN","XMBPOST",98,0)
 S XER=$P($G(XMB("SCRIPT")),U,8)
"RTN","XMBPOST",99,0)
 S J=0
"RTN","XMBPOST",100,0)
 F  S J=$O(^DIC(4.2,D,1,J)) Q:J'=+J  D
"RTN","XMBPOST",101,0)
 . S XMREC=$G(^DIC(4.2,D,1,J,0))
"RTN","XMBPOST",102,0)
 . Q:$P(XMREC,U,7)  ; Out of service
"RTN","XMBPOST",103,0)
 . S I=$P(XMREC,U,4)
"RTN","XMBPOST",104,0)
 . S:I="" I="NONE"
"RTN","XMBPOST",105,0)
 . Q:'$D(XMOKSCR(I))
"RTN","XMBPOST",106,0)
 . S Y($S(+$P(^DIC(4.2,D,1,J,0),"^",2):+$P(^DIC(4.2,D,1,J,0),"^",2),1:9999),J)=J
"RTN","XMBPOST",107,0)
 Q:'$D(Y) ""
"RTN","XMBPOST",108,0)
PL I '$D(^DIC(4.2,D,1,+%,0)) S (%,XMB("SCRIPT",0))=0
"RTN","XMBPOST",109,0)
 S REF="Y",REF=$Q(@REF) I +%<1 S XMB("SCRIPT",0)=@REF G PP
"RTN","XMBPOST",110,0)
 S K=$S(+$P(^DIC(4.2,D,1,%,0),"^",2):+$P(^DIC(4.2,D,1,%,0),"^",2),1:9999)
"RTN","XMBPOST",111,0)
 S REF2="Y(K,%)" F I=1:1:1 S REF2=$Q(@REF2) S XMB("SCRIPT",0)=$S(REF2'="":@REF2,1:@REF)
"RTN","XMBPOST",112,0)
PP S %=+$G(^XMB(1,1,"NETWORK")),X=^DIC(4.2,D,0),I=XMB("SCRIPT",0)
"RTN","XMBPOST",113,0)
 S X=I_U_$P(X,U)_"^0^"_$S(%:%,1:10)_"^SMTP^"_$P(X,U,17)_U_$P(X,U,12)_"^0^"_+$G(XER)
"RTN","XMBPOST",114,0)
 ;Pickup data from selected script
"RTN","XMBPOST",115,0)
GO S %=I_U_^DIC(4.2,D,1,I,0)
"RTN","XMBPOST",116,0)
 ;
"RTN","XMBPOST",117,0)
 ;Use defaults if no data in transmission script fields
"RTN","XMBPOST",118,0)
 F I=2:1 Q:$P(X,U,I,999)=""  I $P(%,U,I)="" S $P(%,U,I)=$P(X,U,I)
"RTN","XMBPOST",119,0)
 Q %
"RTN","XMBPOST",120,0)
XMB ;Set up XMB array
"RTN","XMBPOST",121,0)
 K XMB("TRIES")
"RTN","XMBPOST",122,0)
 S XMB("TRIES")=0,XMB("SCRIPT",0)=+%,%=$P(%,U,2,$L(%,U)),XMB("SCRIPT")=%
"RTN","XMBPOST",123,0)
 Q
"RTN","XMBPOST",124,0)
 ;Set up for Requeing netmail delivery task
"RTN","XMBPOST",125,0)
ZTSK0 S %=XMINST,XMB("TYPE")=3,(XMSCR,XMB("XMSCR"))=%,XMB("XMSCRN")=$S($D(XMB("XMSCRN")):XMB("XMSCRN"),$D(XMSITE):XMSITE,1:$P(^DIC(4.2,%,0),U)),XMQ(%)=""
"RTN","XMBPOST",126,0)
 G ZTSK
"RTN","XMBPOST",127,0)
DSERV ;Device Server comes in here
"RTN","XMBPOST",128,0)
 S XMIO("DSERV")=XMIO G XMBPOST
"RTN","XMBPOST",129,0)
XMTCHECK(XMINST,XMB) ;
"RTN","XMBPOST",130,0)
 N XMTREC
"RTN","XMBPOST",131,0)
 S XMTREC=$G(^XMBS(4.2999,XMINST,4))
"RTN","XMBPOST",132,0)
 I $P(XMTREC,U,1),$P(XMTREC,U,2)="" D  ; Start time, but no finish time
"RTN","XMBPOST",133,0)
 . ; Previous transmission attempt was aborted.
"RTN","XMBPOST",134,0)
 . ; Pick up where we left off.
"RTN","XMBPOST",135,0)
 . S XMB("SCRIPT",0)=$P(XMTREC,U,3)
"RTN","XMBPOST",136,0)
 . S XMB("TRIES")=$P(XMTREC,U,4)
"RTN","XMBPOST",137,0)
 . S XMB("LASTTRY")=$P(XMTREC,U,5)
"RTN","XMBPOST",138,0)
 . S XMB("ITERATIONS")=$P(XMTREC,U,6)
"RTN","XMBPOST",139,0)
 . S XMB("FIRST SCRIPT")=$P(XMTREC,U,7)
"RTN","XMBPOST",140,0)
 . S XMB("SCRIPT")=$G(^XMBS(4.2999,XMINST,5))
"RTN","XMBPOST",141,0)
 Q
"RTN","XMBPOST",142,0)
XMTAUDIT(XMB) ;
"RTN","XMBPOST",143,0)
 N XMTREC,XMFDA
"RTN","XMBPOST",144,0)
 S XMTREC=$G(^XMBS(4.2999,XMB("XMSCR"),4),"XXX^XXX")
"RTN","XMBPOST",145,0)
 S $P(XMTREC,U,5)=$$NOW^XLFDT    ; latest try date/time
"RTN","XMBPOST",146,0)
 I $P($G(XMTREC),U,2)'="" D
"RTN","XMBPOST",147,0)
 . S $P(XMTREC,U,1)=$P(XMTREC,U,5)    ; start time
"RTN","XMBPOST",148,0)
 . S $P(XMTREC,U,2)=""                ; finish time
"RTN","XMBPOST",149,0)
 . K ^XMBS(4.2999,XMB("XMSCR"),6)     ; Kill off the audit multiple
"RTN","XMBPOST",150,0)
 S $P(XMTREC,U,3)=XMB("SCRIPT",0)     ; script ien
"RTN","XMBPOST",151,0)
 S $P(XMTREC,U,4)=XMB("TRIES")        ; how many tries with this script
"RTN","XMBPOST",152,0)
 S:'$D(XMB("ITERATIONS")) XMB("ITERATIONS")=0
"RTN","XMBPOST",153,0)
 S $P(XMTREC,U,6)=XMB("ITERATIONS")   ; how many complete script cycles
"RTN","XMBPOST",154,0)
 S:'$D(XMB("FIRST SCRIPT")) XMB("FIRST SCRIPT")=XMB("SCRIPT",0)
"RTN","XMBPOST",155,0)
 S $P(XMTREC,U,7)=XMB("FIRST SCRIPT") ; ien of the first script used
"RTN","XMBPOST",156,0)
 S $P(^XMBS(4.2999,XMB("XMSCR"),4),U,1,7)=XMTREC
"RTN","XMBPOST",157,0)
 S ^XMBS(4.2999,XMB("XMSCR"),5)=XMB("SCRIPT")
"RTN","XMBPOST",158,0)
 S XMFDA(4.29992,"+1,"_XMB("XMSCR")_",",.01)=$P(XMTREC,U,5) ; try time
"RTN","XMBPOST",159,0)
 S XMFDA(4.29992,"+1,"_XMB("XMSCR")_",",1)=$P(XMB("SCRIPT"),U)  ; script name
"RTN","XMBPOST",160,0)
 D UPDATE^DIE("","XMFDA")
"RTN","XMBPOST",161,0)
 Q
"RTN","XMC")
0^204^B6579407
"RTN","XMC",1,0)
XMC ;(WASH ISC)/THM-NETWORK OPTIONS/TALKMAN CONTROLLER ;06/22/99  14:44
"RTN","XMC",2,0)
 ;;7.1;MailMan;**13,50**;Jun 02, 1994
"RTN","XMC",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMC",4,0)
 ; TALK     XMTALK
"RTN","XMC",5,0)
DT I '$D(DUZ) W *7,!!,"Option can not be run without the user's identification being known",!! Q
"RTN","XMC",6,0)
 N XMDUZ,XMV
"RTN","XMC",7,0)
 D INIT^XMVVITAE
"RTN","XMC",8,0)
 I '$D(DT) D DT^DICRW
"RTN","XMC",9,0)
 I $D(IO)[0 S IOP="HOME" D ^%ZIS
"RTN","XMC",10,0)
 S XM="D" U IO(0) W !,"Network TalkMan version 1.0 @ "_^XMB("NETNAME"),!
"RTN","XMC",11,0)
 D:$O(^DOPT("XMC","B",""))'?1"ACT".E INIT^XMC2
"RTN","XMC",12,0)
CMD U IO(0) S DIC="^DOPT(""XMC"",",DIC(0)="EQZA" D ^DIC
"RTN","XMC",13,0)
 K DIC I Y<0 K XMDUZ,XMDUZO G KL
"RTN","XMC",14,0)
 S X=$P(Y(0),U,2,99),XM="D" K Y D @X
"RTN","XMC",15,0)
 I $L(IO) U IO X ^%ZOSF("EON")
"RTN","XMC",16,0)
 D ^%ZISC X ^%ZOSF("EON") U IO(0) W ! G CMD
"RTN","XMC",17,0)
KL X ^%ZOSF("EON")
"RTN","XMC",18,0)
KL1 K %DT,%H,ER,I,X,XM,Y,Y1,Y3,Z
"RTN","XMC",19,0)
 K XMB,XMBF,XMBT,XMBUF
"RTN","XMC",20,0)
 K XMC,XMC1,XMC2,XMCC,XMCHAN,XMCHAR,XMCI,XMCJ,XMCLOSE,XMCMD
"RTN","XMC",21,0)
 K XMCNT,XMCONT,XMCT,XMCTIM
"RTN","XMC",22,0)
 K XMD,XMDER,XMDES,XMDEV,XMDIAL,XMDIC
"RTN","XMC",23,0)
 K XME,XMEC,XMER,XMERC,XMERMSG,XMESC
"RTN","XMC",24,0)
 K XMFROM,XMFS
"RTN","XMC",25,0)
 K XMHANG,XMHELO,XMHOST
"RTN","XMC",26,0)
 K XMINST,XMINSTR
"RTN","XMC",27,0)
 K XMJ,XMK
"RTN","XMC",28,0)
 K XMLAN,XMLCHAR,XMLER,XMLIN,XMLINE,XMLL,XMLST,XMLT,XMLX
"RTN","XMC",29,0)
 K XMMOD,XMNVFROM,XMODZ,XMOPEN,XMOS
"RTN","XMC",30,0)
 K XMP,XMPOLL,XMPOST,XMPROT
"RTN","XMC",31,0)
 K XMQ
"RTN","XMC",32,0)
 K XMR,XMREC,XMREMID,XMRG,XMR0,XMRSQ,XMRVAL,XMRXMZ,XMRZ
"RTN","XMC",33,0)
 K XMS0AJ,XMS0C,XMSBT,XMSCR,XMSCRN,XMSEC
"RTN","XMC",34,0)
 K XMSEN,XMSG,XMSITE,XMSLOCAL,XMSSQ,XMSTATE,XMSTK,XMSUB,XMSUM
"RTN","XMC",35,0)
 K XMTASK,XMTIME,XMTLER,XMTRAN,XMTURN
"RTN","XMC",36,0)
 K XMVA
"RTN","XMC",37,0)
 K XMZ,XMZFDA,XMZIENS
"RTN","XMC",38,0)
 Q
"RTN","XMC",39,0)
TALK ;TALK MODE ENTRY
"RTN","XMC",40,0)
 N XMTALKER,XMABORT
"RTN","XMC",41,0)
 S XMTALKER=1,XMABORT=0
"RTN","XMC",42,0)
 I '$D(XMDUZ)!'$D(XMDUN) D INIT^XMCTLK0 I '$D(XMDUN)!$S('$D(XMDUZ):1,XMDUZ=0:1,1:0) W !!,*7,"No user defined !",! Q
"RTN","XMC",43,0)
 D ^XMCTLK0 I $D(DTOUT)!$D(DUOUT) K DUOUT,DTOUT Q
"RTN","XMC",44,0)
 ;
"RTN","XMC",45,0)
 ;Ask Domain / get defaults
"RTN","XMC",46,0)
 D INST^XMC11A(.XMSCR,.XMSCRN,.XMB,.XMDIC,.XMIO,.XMABORT) Q:XMABORT
"RTN","XMC",47,0)
 D K S XMBF=1,ER=0,XMCI=0,XMBUF="RT",XMERC=0,XM=""
"RTN","XMC",48,0)
 ;S XM="D"
"RTN","XMC",49,0)
 W !,"Attempting to connect...."
"RTN","XMC",50,0)
 S XMDUZO=XMDUZ D ENT1^XMR,^XMC1 S XMDUZ=XMDUZO K XMDUZO
"RTN","XMC",51,0)
 I ER D ^%ZISC W !,*7,"Could not connect to ",XMSCRN,".  You are back at ",^XMB("NAME"),"." G K
"RTN","XMC",52,0)
 U IO(0) D ENT^XMCTLK K XMB
"RTN","XMC",53,0)
K K XMTURN,XMLER,XMLINE,XMCNT,DIC
"RTN","XMC",54,0)
Q Q
"RTN","XMC1")
0^236^B13268995
"RTN","XMC1",1,0)
XMC1 ;(WASH ISC)/THM-SCRIPT INTERPRETER ;02/11/99  09:57
"RTN","XMC1",2,0)
 ;;7.1;MailMan;**4,13,20,27,50**;Jun 02, 1994
"RTN","XMC1",3,0)
 S XMINST=XMSCR
"RTN","XMC1",4,0)
ENT I '$D(XMSDOM) S (XMSDOM,XMRDOM)=XMINST
"RTN","XMC1",5,0)
 I '$D(XMR0) D ENT1^XMR
"RTN","XMC1",6,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D C^XMCTRAP"
"RTN","XMC1",7,0)
 E  S X="C^XMCTRAP",@^%ZOSF("TRAP")
"RTN","XMC1",8,0)
 K ^TMP("XMY",$J),^TMP("XMY0",$J)
"RTN","XMC1",9,0)
 N XMHELO,XMTURN,XMLER,XMLIN,XMLINE,XMCNT
"RTN","XMC1",10,0)
 S XMBF=1,(ER,XMCI,XMSTK)=0,XMBUF="RT",XMERC=0,XMERMSG=""
"RTN","XMC1",11,0)
 I '$D(XMTALKER) L +^DIC(4.2,XMINST,"XMNETSEND"):0 E  S ER=1,XMTRAN="Netmail transmission in progress on another channel. (XMC1)" D TRAN Q
"RTN","XMC1",12,0)
 D IN
"RTN","XMC1",13,0)
 I '$D(XMINST) S XMINST=$S($D(XMSDOM):XMSDOM,$D(XMSCR):XMSCR,$D(XMB("XMSCR")):XMB("XMSCR"),1:0)
"RTN","XMC1",14,0)
 I XMINST L -^DIC(4.2,XMINST,"XMNETSEND") Q
"RTN","XMC1",15,0)
 E  L  Q
"RTN","XMC1",16,0)
IN S %=$G(XMDUZ) N XMDUZ S XMDUZ=$S($G(%):%,1:.5)
"RTN","XMC1",17,0)
 S XMTRAN="Script: "_XMSCRN_" from "_^XMB("NAME")_" beginning "_$E(DT,4,5)_"-"_$E(DT,6,7)_"-"_$E(DT,2,3) D TRAN
"RTN","XMC1",18,0)
 D STAT(XMSCR):'$D(^XMBS(4.2999,XMSCR,0)) S %=$S($D(^XMBS(4.2999,XMSCR,3))#10:^(3),1:""),$P(%,U)=$H,^(3)=$P(%,U,1,20)
"RTN","XMC1",19,0)
 D EN Q:$D(XMTALKER)
"RTN","XMC1",20,0)
 I ER S XMB(4)=XMTRAN,XMTRAN=$G(XMERMSG) I XMTRAN'="" D TRAN
"RTN","XMC1",21,0)
 S XMTRAN="Script Complete !!" D TRAN S XMER=ER
"RTN","XMC1",22,0)
 G CLOSE^XMC3
"RTN","XMC1",23,0)
EN I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D C^XMCTRAP"
"RTN","XMC1",24,0)
 E  S X="C^XMCTRAP",@^%ZOSF("TRAP")
"RTN","XMC1",25,0)
 D NXT Q:+XMCI<1  D INT Q:ER  G EN
"RTN","XMC1",26,0)
INT S ER=0 S:$E(X)?1L X=$C($A(X)-32)_$E(X,2,999) I "EFCXOHMDLTSW"'[$E(X)!(X="") S ER=1,XMTRAN="Error-Invalid script command '"_X_"' at line "_XMCI_"." D TRAN Q
"RTN","XMC1",27,0)
 S XMC1=$P(X," ",2,999),ER=0 D @$E(X) S:'$D(ER) ER=0 Q
"RTN","XMC1",28,0)
L ;LOOK FOR STRING
"RTN","XMC1",29,0)
 G LOOK^XMC1A
"RTN","XMC1",30,0)
W ;WAIT FOR XMC1 SECONDS
"RTN","XMC1",31,0)
 S XMTRAN="Waiting "_XMC1_" seconds" D TRAN H +XMC1
"RTN","XMC1",32,0)
 Q
"RTN","XMC1",33,0)
M ;SEND MAIL
"RTN","XMC1",34,0)
 I '$G(XMRDOM) S (XMSDOM,XMRDOM)=XMINST
"RTN","XMC1",35,0)
 S XMSITE=$P(^DIC(4.2,XMINST,0),U),XMTRAN="Beginning sender-SMTP service"
"RTN","XMC1",36,0)
 D TRAN D ^XMS
"RTN","XMC1",37,0)
 I $G(ER) S XMTRAN="ER="_$G(ER)_" - Y="_$G(Y)
"RTN","XMC1",38,0)
 Q
"RTN","XMC1",39,0)
D G D^XMC11
"RTN","XMC1",40,0)
T I $D(XMTALKER) S XMCI=999999 S XMTRAN="Entering Talk mode" D TRAN Q
"RTN","XMC1",41,0)
 Q
"RTN","XMC1",42,0)
F S XMTRAN="Flushing buffer" D TRAN G BUFLUSH^XML ;FLUSH BUFFER
"RTN","XMC1",43,0)
E S XMERMSG=XMC1,XMTRAN="Error message set to '"_XMERMSG_"'" D TRAN Q  ; SET ERROR MESSAGE TO BE DISPLAYED.
"RTN","XMC1",44,0)
H G H^XMC11
"RTN","XMC1",45,0)
S ;SEND LINE
"RTN","XMC1",46,0)
 G SEND^XMC1A
"RTN","XMC1",47,0)
O ;OPEN DEVICE, PROTOCOL, AND HOST
"RTN","XMC1",48,0)
 G OPEN^XMC1A
"RTN","XMC1",49,0)
X S XMTRAN="Xecuting "_XMC1 D TRAN X XMC1 Q
"RTN","XMC1",50,0)
NXT S XMCI=$O(@(XMDIC_XMCI_")")) Q:+XMCI<1  S X=@(XMDIC_XMCI_",0)") Q
"RTN","XMC1",51,0)
TRAN D TIME S:'$D(XMBF) XMBF=0
"RTN","XMC1",52,0)
 S %=$E(XMC_" ",1,$L(XMTRAN)<245*99),%=%_$E(XMTRAN,1,245-$L(%)),XMBF=XMBF+1
"RTN","XMC1",53,0)
 ;TRACE / DEBUG TRANSMISSION PROBLEMS
"RTN","XMC1",54,0)
 I $D(XMS0C) S ^TMP("XMC",XMR0,XMBF,0)=%
"RTN","XMC1",55,0)
 I $G(XM)["D" U IO(0) W !,% W:$D(XMLER) $S('XMLER:"",1:"("_XMLER_")") I IO'="",IOT'="RES" U IO
"RTN","XMC1",56,0)
 K % Q
"RTN","XMC1",57,0)
TIME N %,I S %=$P($H,",",2),XMC=%\3600_":"_$J(%#3600\60,2)_":"_$J(%#60,2) F I=1:1 Q:XMC'[" "  S XMC=$P(XMC," ")_0_$P(XMC," ",2,4)
"RTN","XMC1",58,0)
 Q
"RTN","XMC1",59,0)
INDIR ;GET INDIRECT REFERENCE
"RTN","XMC1",60,0)
 S XMC2=$P(XMC1,"@",2,99) I '$D(@XMC2) S XMTRAN="Undefined reference to "_XMC2,ER=1 D TRAN Q
"RTN","XMC1",61,0)
 S XMC1=@XMC2 Q
"RTN","XMC1",62,0)
C ;CALL A SUBROUTINE
"RTN","XMC1",63,0)
 G CALL^XMC1A
"RTN","XMC1",64,0)
STAT(X) ;Set up zero node for 4.2999 file
"RTN","XMC1",65,0)
 I '$D(^XMBS(4.2999,X,0)) N % S ^(0)=X,^XMBS(4.2999,"B",X,X)="",%=^XMBS(4.2999,0),$P(^(0),U,3,4)=X_U_($P(%,U,4)+1) Q
"RTN","XMC1",66,0)
 Q
"RTN","XMC1",67,0)
SCRIPT ;API for script processing
"RTN","XMC1",68,0)
 I '$D(XMDUZ) S XMDUZ=$S($G(DUZ):DUZ,1:.5)
"RTN","XMC1",69,0)
 S Y=XMSCR,XMINST=XMSCR,XMSITE=XMSCRN D ENT,KL1^XMC
"RTN","XMC1",70,0)
 K DIC,X,Y,XMSCRN,XMSITE,XMINST,XMB,XMQ,XMUT,XMDIC,ZTPAR
"RTN","XMC1",71,0)
 Q
"RTN","XMC11")
0^231^B20056582
"RTN","XMC11",1,0)
XMC11 ;(WASH ISC)/THM-SCRIPT INTERPRETER SETUP ;06/22/99  14:48
"RTN","XMC11",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMC11",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMC11",4,0)
 ; EDIT     XMSCRIPTEDIT
"RTN","XMC11",5,0)
 ; EDITSC   XMSUBEDIT
"RTN","XMC11",6,0)
 ; GO       XMSCRIPTPLAY
"RTN","XMC11",7,0)
 ; RES      XMSCRIPTRES
"RTN","XMC11",8,0)
GO ;Entry for Script Processing
"RTN","XMC11",9,0)
 N XMABORT
"RTN","XMC11",10,0)
 S XM="D",XMABORT=0
"RTN","XMC11",11,0)
 D ENT1^XMR
"RTN","XMC11",12,0)
 K ^TMP("XMC",XMR0),XMRDOM,XMSDOM,XMTLER
"RTN","XMC11",13,0)
 D INST^XMC11A(.XMSCR,.XMSCRN,.XMB,.XMDIC,.XMIO,.XMABORT)
"RTN","XMC11",14,0)
GQ I '$G(XMB("SCRIPT",0)) K DIC,XMDIC,XMR0,XMSCR,XMSCRN,X,Y Q
"RTN","XMC11",15,0)
 S %=$S($D(^XMBS(4.2999,XMSCR,3))#10:$P(^(3),U,7),1:0) I % S XMC11=%,Y=$$CHK(XMIO),%=XMC11 K XMC11 S:Y<0 %=0
"RTN","XMC11",16,0)
 I $S('%:1,$D(^XUSEC("XUPROGMODE",DUZ)):1,1:0) D ^XMC1 G KL^XMC
"RTN","XMC11",17,0)
 W !!,*7,"Task "_%_" is scheduled to transmit this domain's messages.",!,"You must delete task "_%_" & the TRANSMISSION TASK# field",!,"from the MESSAGE STATISTICS (4.2999) file before playing the script !" S Y=-1 K %
"RTN","XMC11",18,0)
 W !!,"CAUTION !!!  You must also make sure that the task is not running !",!,"CHECK THE SYSTEM STATUS !!",!
"RTN","XMC11",19,0)
 G GQ
"RTN","XMC11",20,0)
CHK(X) ;Is DEVICE in a HUNT GROUP ?
"RTN","XMC11",21,0)
 S DIC="^%ZIS(1,",DIC(0)="MZX" K Y D ^DIC
"RTN","XMC11",22,0)
 I $S(Y<0:1,'$L($P(Y(0),U,10)):1,1:0) G Q
"RTN","XMC11",23,0)
 S X=$O(^%ZIS(1,"AH",$P(Y(0),U,10),0)) I $S(X="":1,'$O(^(X)):1,1:0) Q -1
"RTN","XMC11",24,0)
Q Q 1
"RTN","XMC11",25,0)
EDITSC N DIC,DLAYGO S (DLAYGO,DIC)=4.6,DIC(0)="AEQMZL" D ^DIC Q:Y<0
"RTN","XMC11",26,0)
 S XMSCR=+Y,XMSCRN=$P(Y(0),U),DA=XMSCR,DIE=4.6,DR=".01;1" D ^DIE
"RTN","XMC11",27,0)
 K XMSCR,XMSCRN,DA,DIE,DR
"RTN","XMC11",28,0)
 Q
"RTN","XMC11",29,0)
EDIT S DIC=4.2,DIC(0)="AEQMZ" D ^DIC Q:Y<0
"RTN","XMC11",30,0)
 S DA=+Y,DIE=DIC,DR="17;1:4.2;6.2:6.9",DR(2,4.21)=".01;1:99",ZTSK=$S($D(^XMBS(4.2999,DA,3)):$P(^(3),U,7),1:0) D ^DIE S (DIE,DIC)=4.2999,DR=25 D ^DIE
"RTN","XMC11",31,0)
 I ZTSK,$S('$D(^XMBS(4.2999,DA,3)):1,'$P(^(3),U,7):1,1:0) D KILL^%ZTLOAD W !!,*7,"<<< Task "_ZTSK_" has been deleted with a call to TaskMan. >>",!!
"RTN","XMC11",32,0)
 K ZTSK Q
"RTN","XMC11",33,0)
LIST W !!,"TRANSCRIPT IS: " F XMCI=0:0 S XMCI=$O(^TMP("XMC",XMR0,XMCI)) Q:XMCI=""  W !,^(XMCI)
"RTN","XMC11",34,0)
 Q
"RTN","XMC11",35,0)
DI R !,"NUMBER(S) TO DIAL ",XMC1:DTIME Q:XMC1=""
"RTN","XMC11",36,0)
D ;DIAL NUMBERS SUCESSIVELY (Strip all punctuation not in XMSTRIP string)
"RTN","XMC11",37,0)
 N XMC11D S XMC11D=$S($L($G(XMFIELD)):XMFIELD,1:$S($G(XMSTRIP)[",":";",1:","))
"RTN","XMC11",38,0)
 F XMJ=1:1 S X=$P(XMC1,XMC11D,XMJ) Q:X=""  D D2 Q:'ER
"RTN","XMC11",39,0)
 K XMSTRIP,XMFIELD Q
"RTN","XMC11",40,0)
D2 S XMPHONE="",%=$G(XMSTRIP) F XMK=1:1:$L(X) S %0=$E(X,XMK) I $S(%0'?1P:1,%[%0:1,1:0) S XMPHONE=XMPHONE_%0
"RTN","XMC11",41,0)
 S ER=0,XMTRAN="Dialing "_XMPHONE D TRAN^XMC1 X $S($D(XMDIAL):XMDIAL,1:"S ER=1") I ER,$S('$D(Y):0,$L(Y):1,1:0) S XMTRAN="Call failed: "_Y D TRAN^XMC1
"RTN","XMC11",42,0)
 Q
"RTN","XMC11",43,0)
H ;HANG UP PHONE
"RTN","XMC11",44,0)
 S XMTRAN="Hanging up phone" D TRAN^XMC1 Q:'$D(XMHANG)  X XMHANG Q
"RTN","XMC11",45,0)
IMM ;IMMEDIATE MODE INTERPRETER
"RTN","XMC11",46,0)
 S XMBF=1,XMBUF="RT",XMCI=0 I $D(XMR0),$L(XMR0) K ^TMP("XMC",XMR0)
"RTN","XMC11",47,0)
I1 R !!,"Script command: ",X:DTIME Q:X=""  D INT^XMC1 U IO(0) W "  ",$S(ER:"Failed",1:"Ok") G I1
"RTN","XMC11",48,0)
 Q
"RTN","XMC11",49,0)
RES S:'$D(XMCI) XMCI=0 D ^%ZIS Q:POP  F I=0:0 S I=$O(^DIC(4.2,XMINST,1,1,1,I)) Q:I=""  W !,$J(I,2),$S(I=XMCI:"->",1:"  "),^(I,0)
"RTN","XMC11",50,0)
 W !!,"Resume script processing from: ",XMCI,"// " R I:DTIME S:'$T I=U Q:I[U  S:I'="" XMCI=+I S XMTRAN="Resuming script from line "_XMCI D TRAN^XMC1 S XMCI=XMCI-.1 U IO G IN^XMC1
"RTN","XMC11",51,0)
 Q
"RTN","XMC11",52,0)
CHRS ;Christening operation
"RTN","XMC11",53,0)
 I '$D(^XMB("NAME")) W !!,*7,"This domain is not yet christened. It cannot christen others",!,"until initialized and christened by a parent domain.",!! Q
"RTN","XMC11",54,0)
 W !!,"This process will create a new subordinate domain to this domain"
"RTN","XMC11",55,0)
 W !,"and update network relationships both there and here, as well as"
"RTN","XMC11",56,0)
 W !,"inform this domain's parent.",!!,"Do you really want to do this? NO// "
"RTN","XMC11",57,0)
 R X:DTIME Q:"Yy"'[$S($L(X):$E(X),1:1)
"RTN","XMC11",58,0)
C W !!!,"Enter the name of the subordinate domain which you wish to christen" S DIC=4.2,DIC(0)="AEQMZ" D ^DIC Q:Y<0
"RTN","XMC11",59,0)
 S XMCHRS=^XMB("NAME")_","_$P(Y,U,2),XMSCR=+Y,XMSCRN=$P(Y,U,2),XM="D" K ^TMP("XMC",XMR0) D ^XMC1 K XMCHRS
"RTN","XMC11",60,0)
 Q
"RTN","XMC11",61,0)
 ;
"RTN","XMC11",62,0)
 ;ENS and ENR are used by DECNET protocol as documented MailMan 7.0...
"RTN","XMC11",63,0)
 ;Send
"RTN","XMC11",64,0)
ENS Q:'$G(XMINST)  N X S X=$$STAT^XMLSTAT(XMINST,1,XMSG,"DECNET",1)
"RTN","XMC11",65,0)
 Q
"RTN","XMC11",66,0)
 ;Receive
"RTN","XMC11",67,0)
ENR Q:'$G(XMINST)  N X S X=$$STAT^XMLSTAT(XMINST,2,XMRG,"DECNET",1)
"RTN","XMC11",68,0)
 Q
"RTN","XMC11A")
0^230^B9110591
"RTN","XMC11A",1,0)
XMC11A ;(WASH ISC)/THM- Ask Domain / Script  ;01/28/99  15:07
"RTN","XMC11A",2,0)
 ;;7.1;MailMan;**27,50**;Jun 02, 1994
"RTN","XMC11A",3,0)
INST(XMINST,XMINSTN,XMB,XMDIC,XMIO,XMABORT) ; Decide which Institution and Script to use
"RTN","XMC11A",4,0)
 N XMSCRDAT
"RTN","XMC11A",5,0)
 K XMB
"RTN","XMC11A",6,0)
 D ASKINST(.XMINST,.XMINSTN,.XMB,.XMABORT) I XMABORT S XMINST=-1 K XMB Q
"RTN","XMC11A",7,0)
 D GETSCR(XMINST,.XMB,.XMSCRDAT,.XMABORT) I XMABORT S XMINST=-1 K XMB Q
"RTN","XMC11A",8,0)
 D S(XMSCRDAT,.XMB,.XMIO)
"RTN","XMC11A",9,0)
 S XMDIC="^DIC(4.2,"_XMINST_",1,"_XMB("SCRIPT",0)_",1,"
"RTN","XMC11A",10,0)
 Q
"RTN","XMC11A",11,0)
ASKINST(XMINST,XMINSTN,XMB,XMABORT) ; Lookup domain with script
"RTN","XMC11A",12,0)
 N DIC,X,Y
"RTN","XMC11A",13,0)
 S DIC=4.2,DIC(0)="AEQMZ"
"RTN","XMC11A",14,0)
 I $D(XMTALKER) S DIC("S")="I $P(^(0),U,2)[""T"""
"RTN","XMC11A",15,0)
 D ^DIC I Y=-1 S XMABORT=1 Q
"RTN","XMC11A",16,0)
 S XMINST=+Y
"RTN","XMC11A",17,0)
 I '$O(^DIC(4.2,XMINST,1,0)) D  Q
"RTN","XMC11A",18,0)
 . W !!,"No Transmission Script !!!",*7,!!
"RTN","XMC11A",19,0)
 . S XMABORT=1
"RTN","XMC11A",20,0)
 S XMINSTN=Y(0,0)
"RTN","XMC11A",21,0)
 S XMB("ZERO")=Y(0)
"RTN","XMC11A",22,0)
 Q
"RTN","XMC11A",23,0)
GETSCR(XMINST,XMB,XMSCRDAT,XMABORT) ; Get Script info
"RTN","XMC11A",24,0)
 S (XMOKSCR("SMTP"),XMOKSCR("NONE"))=""
"RTN","XMC11A",25,0)
 S XMSCRDAT=$$SCR^XMBPOST(XMINST,.XMOKSCR,"") K XMOKSCR
"RTN","XMC11A",26,0)
 I XMSCRDAT="" W !,"No valid script for this domain!" S XMABORT=1 Q
"RTN","XMC11A",27,0)
 ;Default and do not ask if only one script on file
"RTN","XMC11A",28,0)
 I $O(^DIC(4.2,XMINST,1,0))=XMB("SCRIPT",0),+$O(^(XMB("SCRIPT",0)))=0 Q
"RTN","XMC11A",29,0)
 ;If TalkMan default to highest priority (or 1st) script
"RTN","XMC11A",30,0)
 I $D(XMTALKER) D TALKMAN(XMINST,.XMB,.XMSCRDAT,.XMABORT) Q
"RTN","XMC11A",31,0)
 D ASKSCR(XMINST,.XMB,.XMSCRDAT,.XMABORT)
"RTN","XMC11A",32,0)
 Q
"RTN","XMC11A",33,0)
TALKMAN(XMINST,XMB,XMSCRDAT,XMABORT) ;
"RTN","XMC11A",34,0)
 N XMPRI,XMIEN,XMREC
"RTN","XMC11A",35,0)
 S XMPRI=0
"RTN","XMC11A",36,0)
 F  S XMPRI=$O(^DIC(4.2,XMSCR,1,"AC",XMPRI)) Q:'XMPRI  D  Q:"^SMTP^TELNET^"[(U_$P(XMREC,U,4)_U)
"RTN","XMC11A",37,0)
 . ;Check for proper protocol type
"RTN","XMC11A",38,0)
 . S XMIEN=$O(^DIC(4.2,XMSCR,1,"AC",XMPRI,0))
"RTN","XMC11A",39,0)
 . S XMREC=^DIC(4.2,XMSCR,1,XMIEN,0)
"RTN","XMC11A",40,0)
 I 'XMPRI D  Q
"RTN","XMC11A",41,0)
 . S XMABORT=1
"RTN","XMC11A",42,0)
 . S XMMG="Domain doesn't have an appropriate connection method -- see your manager."
"RTN","XMC11A",43,0)
 S XMSCRDAT=XMIEN_U_XMREC
"RTN","XMC11A",44,0)
 Q
"RTN","XMC11A",45,0)
ASKSCR(XMINST,XMB,XMSCRDAT,XMABORT) ; Ask user to select the script.
"RTN","XMC11A",46,0)
 ; List valid entries.
"RTN","XMC11A",47,0)
 N I,XMREC
"RTN","XMC11A",48,0)
 W !!,"  #  Script Name",?30,"Type",?40,"Priority"
"RTN","XMC11A",49,0)
 S I=0
"RTN","XMC11A",50,0)
 F  S I=$O(^DIC(4.2,XMINST,1,I)) Q:'I  S XMREC=^(I,0) W !,$J(I,3),?5,$P(XMREC,U),?30,$P(XMREC,U,4),?40,$J($P(XMREC,U,2),2),?50,$S($P(XMREC,U,7):"Warning: Out of Service",1:"")
"RTN","XMC11A",51,0)
 W !
"RTN","XMC11A",52,0)
 N DIC,X,Y
"RTN","XMC11A",53,0)
 S DIC="^DIC(4.2,XMINST,1,"
"RTN","XMC11A",54,0)
 S DIC(0)="AEQMNZ"
"RTN","XMC11A",55,0)
 S DIC("A")="Select Script: "
"RTN","XMC11A",56,0)
 S DIC("B")=XMB("SCRIPT",0)
"RTN","XMC11A",57,0)
 S DIC("W")="W ?30,""Type="",$P(^(0),U,4),?45,""Priority="",$J($P(^(0),U,2),2),?60,$S($P(^(0),U,7):""* Out of Service *"",1:"""")"
"RTN","XMC11A",58,0)
 D ^DIC I Y=-1 S XMABORT=1 Q
"RTN","XMC11A",59,0)
 S XMSCRDAT=+Y_U_Y(0)
"RTN","XMC11A",60,0)
 Q
"RTN","XMC11A",61,0)
S(%,XMB,XMIO) ;
"RTN","XMC11A",62,0)
 D XMB^XMBPOST
"RTN","XMC11A",63,0)
 S XMIO=$P(XMB("SCRIPT"),U,5)
"RTN","XMC11A",64,0)
 S:XMIO="" XMIO=$P(XMB("ZERO"),U,17)
"RTN","XMC11A",65,0)
 S XMB("ITERATIONS")=0,XMB("FIRST SCRIPT")=XMB("SCRIPT",0)
"RTN","XMC11A",66,0)
 Q
"RTN","XMC2")
0^114^B28816812
"RTN","XMC2",1,0)
XMC2 ;(WASH ISC)/THM-COMM FUNCTIONS ;03/21/99  10:38
"RTN","XMC2",2,0)
 ;;7.1;MailMan;**13,23,27,50**;Jun 02, 1994
"RTN","XMC2",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMC2",4,0)
 ; VAL    XMEDIT-DOMAIN-VALIDATION#
"RTN","XMC2",5,0)
 ; LST    XMLIST
"RTN","XMC2",6,0)
 ; OUT    XMSCRIPTOUT
"RTN","XMC2",7,0)
 ; Q      XMSTARTQUE
"RTN","XMC2",8,0)
 Q
"RTN","XMC2",9,0)
INIT ;INITIALIZE COMMAND TABLE
"RTN","XMC2",10,0)
 K ^DOPT("XMC") S DIK="^DOPT(""XMC""," S ^DOPT("XMC",0)="Network TalkMan Option^1N^" F I=1:1 S X=$E($T(Z+I),4,99) Q:X=""  S ^DOPT("XMC",I,0)=X
"RTN","XMC2",11,0)
 D IXALL^DIK Q
"RTN","XMC2",12,0)
Z ;;
"RTN","XMC2",13,0)
 ;;ACTIVELY TRANSMITTING QUEUES REPORT^GO^XMS5
"RTN","XMC2",14,0)
 ;;DIAL PHONE^DI^XMC11
"RTN","XMC2",15,0)
 ;;EDIT A SCRIPT^EDIT^XMC11
"RTN","XMC2",16,0)
 ;;HANG UP PHONE^H^XMC11
"RTN","XMC2",17,0)
 ;;HISTORICAL QUEUE STATISTICS REPORT^^XMS4
"RTN","XMC2",18,0)
 ;;LIST TRANSCRIPT^LST^XMC2
"RTN","XMC2",19,0)
 ;;PLAY A SCRIPT^GO^XMC11
"RTN","XMC2",20,0)
 ;;QUEUES WITH MESSAGES TO GO OUT REPORT^ENT^XMS5
"RTN","XMC2",21,0)
 ;;RECEIVE MESSAGES FROM ANOTHER UCI VIA %ZISL GLOBAL^RECV^XMS3
"RTN","XMC2",22,0)
 ;;RESUME SCRIPT PROCESSING^RES^XMC11
"RTN","XMC2",23,0)
 ;;SCHEDULE TASKS FOR ALL QUEUED MESSAGES^REQUE^XMS5
"RTN","XMC2",24,0)
 ;;SEND MESSAGE TO OTHER XMB GLOBAL VIA %ZISL GLOBAL^TASKER^XMS
"RTN","XMC2",25,0)
 ;;SEQUENTIAL MEDIA QUEUE TRANSMISSION^BAT^XMS
"RTN","XMC2",26,0)
 ;;SEQUENTIAL MEDIA MESSAGE RECEPTION^BAT^XMR
"RTN","XMC2",27,0)
 ;;SHOW A QUEUE^QUEUE^XMC4
"RTN","XMC2",28,0)
 ;;STATUSES REPORT^^XMS5A
"RTN","XMC2",29,0)
 ;;SUBROUTINE EDITOR^EDITSC^XMC11
"RTN","XMC2",30,0)
 ;;TOGGLE A SCRIPT OUT OF SERVICE^OUT^XMC2
"RTN","XMC2",31,0)
 ;;TRANSMIT QUEUED MESSAGES FOR ONE DOMAIN^Q^XMC2
"RTN","XMC2",32,0)
 ;;VALIDATION NUMBER EDIT^VAL^XMC2
"RTN","XMC2",33,0)
 ;;
"RTN","XMC2",34,0)
 ;;**OBSOLETE**
"RTN","XMC2",35,0)
 ;;BLOB SEND^BLOB^XMA2B
"RTN","XMC2",36,0)
 ;;IMMEDIATE SCRIPT MODE^IMM^XMC11
"RTN","XMC2",37,0)
 ;;MAILMAN^^XM
"RTN","XMC2",38,0)
 ;;
"RTN","XMC2",39,0)
LST S XMB=0,I=0
"RTN","XMC2",40,0)
C S XMB=$O(^TMP("XMC",XMB))
"RTN","XMC2",41,0)
D I XMB="" W !!,*7,"<< No ",$S(I:"more ",1:""),"Transcripts on File. >>",!
"RTN","XMC2",42,0)
 I  W "(This is controlled by whether or not line TRAN+3^XMC1 is commented out !",!,"Remember to put the ';' back in when done viewing transcripts.",!,"It is more efficient that way.)",!! G E
"RTN","XMC2",43,0)
 W !,"7 lines of the transcript will be displayed at a time." H 2
"RTN","XMC2",44,0)
 S K=0,I=XMB F J=0:0 S J=$O(^TMP("XMC",I,J)) Q:J=""  W !,^(J,0) S K=K+1 Q:K>7
"RTN","XMC2",45,0)
 S DIR(0)="E",XMB0=J_U_I W !! D ^DIR S J=+XMB0,I=$P(XMB0,U,2) K XMB0,DIRUT
"RTN","XMC2",46,0)
 I $D(DUOUT)!$D(DTOUT) K XMB0 G B
"RTN","XMC2",47,0)
 G K:J=0 S K=0
"RTN","XMC2",48,0)
L S J=$O(^TMP("XMC",I,J)) I J'="",$D(^(J,0)) S X=$G(^(J,0)) S:X?.E1C.E X=$$STRAN^XMCU1(X) W !,X S K=K+1 G L:K<8 S XMB0=I_U_J W ! D ^DIR S K=0,I=+XMB0,J=$P(XMB0,U,2) K XMB0,DIRUT W ! I '$D(DUOUT),'$D(DTOUT) G L
"RTN","XMC2",49,0)
K W *7,!!,"DELETE this Transcript ? N// " R J:DTIME Q:'$T
"RTN","XMC2",50,0)
 I J["?" D  G K
"RTN","XMC2",51,0)
 . W !!,"Enter 'Yes' to delete this transcript."
"RTN","XMC2",52,0)
 . W !,"Enter 'No' or <RETURN> to keep this transcript on file."
"RTN","XMC2",53,0)
 . W !,"Or enter '^' to abort."
"RTN","XMC2",54,0)
 . Q
"RTN","XMC2",55,0)
 S J=$TR("noyes","NOYES") W !,"Transcript "
"RTN","XMC2",56,0)
 I $E("YES",1,$L(J))=J K ^TMP("XMC",I) S BF=1 W *7,"DELETED !" G B
"RTN","XMC2",57,0)
 W "RETAINED",! I J["^" W !!,"Aborted by user request",! G E
"RTN","XMC2",58,0)
B I '$O(^TMP("XMC",XMB)) S XMB="" G D
"RTN","XMC2",59,0)
 W !!,"Do you wish to see the next transcript ? Y//",*7 R J:DTIME G E:'$T,E:"yY"'[$E(J) S I=1 G C
"RTN","XMC2",60,0)
E K DUOUT,DTOUT,DIR,XMB Q
"RTN","XMC2",61,0)
Q ;TRIGGER A QUEUE FOR TRANSMISSION
"RTN","XMC2",62,0)
 N XMQ1,XMB,ZTSK,XMABORT
"RTN","XMC2",63,0)
 S XMQ1=1,XMABORT=0
"RTN","XMC2",64,0)
 D INST^XMC11A(.XMSCR,.XMSCRN,.XMB,.XMDIC,.XMIO,.XMABORT) G QQ:XMABORT
"RTN","XMC2",65,0)
 S %=$P($G(^DIC(4.2,XMSCR,1,XMB("SCRIPT",0),0)),U,4) I $S(%="SMTP":0,%="":0,1:1) W !!,"MailMan does not allow tasking with TCP/IP transmission script." G QQ
"RTN","XMC2",66,0)
 S %=$S($P(^XMBS(4.2999,XMSCR,0),U,2):$P(^(0),U,2),1:0) I % S %1=$$CHK^XMS5(%,XMSCR)
"RTN","XMC2",67,0)
 I '$G(%1) D QTASK G QQ
"RTN","XMC2",68,0)
 I %1=1 W !!,*7,"Task #"_%_" is already running to transmit this domain's messages,",!,"so we won't queue up another one." G QQ
"RTN","XMC2",69,0)
 ; (%1=.5 means: Task is pending)
"RTN","XMC2",70,0)
 W !!,*7,"Task #"_%_" is already scheduled to transmit this domain's messages"
"RTN","XMC2",71,0)
 W !,"on ",$$HTE^XLFDT($P(^%ZTSK(%,0),U,6)),"."
"RTN","XMC2",72,0)
 N DIR
"RTN","XMC2",73,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","XMC2",74,0)
 S DIR("A")="Do you want to kill task "_%_" and queue up a new one"
"RTN","XMC2",75,0)
 D ^DIR
"RTN","XMC2",76,0)
 I Y=1 D KILL^XMS5(XMSCR,%),QTASK
"RTN","XMC2",77,0)
QQ K %H,XMDT,XMINST,XMIO,XMSITE,XMSCR,XMSCRN,ZTSK
"RTN","XMC2",78,0)
 Q
"RTN","XMC2",79,0)
QTASK ;
"RTN","XMC2",80,0)
 S XMSITE=XMSCRN,XMINST=XMSCR,XMS5("RETURN_TASK#")=1
"RTN","XMC2",81,0)
 D ENQ^XMS1
"RTN","XMC2",82,0)
 W:$G(ZTSK) !,"Task #"_ZTSK_" Queued for transmission"
"RTN","XMC2",83,0)
 Q
"RTN","XMC2",84,0)
OUT ;toggle script out of service
"RTN","XMC2",85,0)
 N %,D,D0,D1,DA,DI,DIC,DIE,DIR,DIRUT,DIOUT,DR,X,XMB,XMINST,XMOKSCR
"RTN","XMC2",86,0)
 N XMS5,XMSCR,XMSCRN,XMSITE,XMTMP,Y,ZTSK,XMSCRDAT,XMABORT
"RTN","XMC2",87,0)
 S XMABORT=0
"RTN","XMC2",88,0)
 D ASKINST^XMC11A(.XMSCR,.XMSCRN,.XMB,.XMABORT) Q:XMABORT
"RTN","XMC2",89,0)
 S DA=XMSCR,DR="1;4",DR(2,4.21)=1.5,DIE="^DIC(4.2,"
"RTN","XMC2",90,0)
 D ^DIE
"RTN","XMC2",91,0)
 S DIR(0)="Y",DIR("A")="Do you want to requeue this domain",DIR("B")="YES",DIR("?")="Yes, will create a task to start transmitting this domain."
"RTN","XMC2",92,0)
 D ^DIR Q:'Y!$D(DIRUT)
"RTN","XMC2",93,0)
 S ZTSK=$P($G(^XMBS(4.2999,XMSCR,3)),U,7)
"RTN","XMC2",94,0)
 I ZTSK D KILL^%ZTLOAD S XMTMP(4.2999,XMSCR_",",25)="" D UPDATE^DIE("","XMTMP")
"RTN","XMC2",95,0)
 S (XMOKSCR("SMTP"),XMOKSCR("NONE"))=""
"RTN","XMC2",96,0)
 S XMSCRDAT=$$SCR^XMBPOST(XMSCR,.XMOKSCR,"")
"RTN","XMC2",97,0)
 I XMSCRDAT="" W !!,"No Transmission Script !!!",*7,!! Q
"RTN","XMC2",98,0)
 D S^XMC11A(XMSCRDAT,.XMB,.XMIO)
"RTN","XMC2",99,0)
 S XMSITE=XMSCRN,XMINST=XMSCR,XMS5("RETURN_TASK#")=1
"RTN","XMC2",100,0)
 D ENQ^XMS1 I '$G(ZTSK) W !!,"Couldn't create task",! Q
"RTN","XMC2",101,0)
 W !,"Task #",ZTSK," Queued for transmission.",!
"RTN","XMC2",102,0)
 Q
"RTN","XMC2",103,0)
VAL S DR="1.6",DIC=4.2,DIC(0)="AEQMZ" D ^DIC Q:Y<0  S DIE=DIC,DA=+Y D ^DIE Q
"RTN","XMC3")
0^261^B9631741
"RTN","XMC3",1,0)
XMC3 ;(WASH ISC)/THM-SCRIPT PROCESSOR OPEN/CLOSE COMMANDS ;02/19/99  15:06
"RTN","XMC3",2,0)
 ;;7.1;MailMan;**20,50**;Jun 02, 1994
"RTN","XMC3",3,0)
OPEN ;OPEN COMMAND
"RTN","XMC3",4,0)
 S (XMSITE,XMREC,XMSEN,XMPROT,XMSEC,XMDEV,XMMOD)="",XMC1=XMC1_","
"RTN","XMC3",5,0)
 I '$G(XMINST) S XMINST=$S($G(XMSCR):XMSCR,1:0)
"RTN","XMC3",6,0)
 S XMCC=1,(XMSSQ,XMRSQ,ER)=1,XMER=0,(XMDIAL,XMHANG)="S ER=1"
"RTN","XMC3",7,0)
1 S Z="=" D NXT
"RTN","XMC3",8,0)
 G A1:Y'="",2:'$D(XMINST),2:'XMINST,2:'$D(^DIC(4.2,+XMINST,0))
"RTN","XMC3",9,0)
 S X=$S($D(ZTQUEUED)&$L($G(ZTIO)):ZTIO,$D(ZTQUEUED)&$L($G(ION)):ION,$L($G(XMIO)):XMIO,1:$P(^DIC(4.2,+XMINST,0),U,17))
"RTN","XMC3",10,0)
 I $L(X) D D G 2:'ER,ER:'$D(ZTIO)!'$D(XMIO),ER:ZTIO'=XMIO S X=XMIO D D G ER:ER G 2
"RTN","XMC3",11,0)
 G 2:Y=""
"RTN","XMC3",12,0)
A1 S A=$E(Y) I "HPD"'[A S ER=1,Y="Invalid parameter "_Y D ER Q
"RTN","XMC3",13,0)
 I A="D" S Y="'D' COMMAND no longer valid.  Use physical link fields.",ER=1 D ER Q
"RTN","XMC3",14,0)
 S Z="),",ER=0,DIC(0)="Z" D NXT S X=Y D @A I ER D ER Q
"RTN","XMC3",15,0)
 G 1
"RTN","XMC3",16,0)
2 I XMPROT="" S X="SCP" D P ;Default to SCP communications protocol
"RTN","XMC3",17,0)
 Q
"RTN","XMC3",18,0)
H ;HOST PARAMETER PARSING
"RTN","XMC3",19,0)
 S DIC=4.2 D ^DIC I Y<0 S ER=1,Y="Invalid Host name '"_X_"'" Q
"RTN","XMC3",20,0)
 S XMHOST=$P(Y(0),U,12),XMSITE=$P(Y(0),U),XMINST=+Y
"RTN","XMC3",21,0)
 N % S %=$P($G(XMB("SCRIPT")),U,6) I $L(%) S XMHOST=%
"RTN","XMC3",22,0)
 Q
"RTN","XMC3",23,0)
P ;PROTOCOL PARAMETER PARSING
"RTN","XMC3",24,0)
 S DIC=3.4 D ^DIC I Y<0 S ER=1,Y="Invalid protocol name '"_X_"'" Q
"RTN","XMC3",25,0)
 S XMPROT=$P(Y(0),U),XMSEN=^DIC(3.4,+Y,1),XMREC=^(2) S XMOPEN=$S($D(^(3)):^(3),1:""),XMCLOSE=$S($D(^(4)):^(4),1:"") Q
"RTN","XMC3",26,0)
 Q
"RTN","XMC3",27,0)
D ;DEVICE SPECIFICATION PARSING
"RTN","XMC3",28,0)
 S ER=0 I $D(ZTQUEUED),IO'="" U IO G D1
"RTN","XMC3",29,0)
 I X="" S ER=1 Q
"RTN","XMC3",30,0)
 S %ZIS="R",IOP=X D ^%ZIS K IOP
"RTN","XMC3",31,0)
 I POP S ER=1,Y="Device '"_X_"' could not be opened by %ZIS." Q
"RTN","XMC3",32,0)
 S XMHANG("OPEN")=9
"RTN","XMC3",33,0)
D1 S Y=^%ZIS(1,IOS,0),XMMOD=$P(Y,U,6),XMDEV=$P(Y,U) I $L(XMMOD),$D(^%ZIS(2,XMMOD,50)) S XMDIAL=^(50),XMHANG=^(51),XMSTAT="" S:$D(^(52)) XMSTAT=^(52)
"RTN","XMC3",34,0)
 I IOT'="RES" U IO X ^%ZOSF("EOFF") S X=255 X ^%ZOSF("RM") X ^%ZOSF("TYPE-AHEAD")
"RTN","XMC3",35,0)
 ;I $D(ZTQUEUED) S ZTIO(1)="D",ZTIO=ION D REQ^%ZTLOAD
"RTN","XMC3",36,0)
 Q
"RTN","XMC3",37,0)
ER S XMTRAN="Open error: "_Y,XMER=1 D TRAN^XMC1 Q
"RTN","XMC3",38,0)
 Q
"RTN","XMC3",39,0)
NXT S XMC2=XMCC F XMCC=XMCC:1:$L(XMC1) Q:Z[$E(XMC1,XMCC)
"RTN","XMC3",40,0)
 S Y=$E(XMC1,XMC2,XMCC-1),XMCC=XMCC+1 Q
"RTN","XMC3",41,0)
DSP F I=1:1 S J=$P("XMSITE^XMINST^XMPROT^XMSEC^XMDEV^XMREC^XMSEN^XMMOD^ER",U,I) Q:J=""  W !,J,?10,"=",@J
"RTN","XMC3",42,0)
 W:ER !,"Error: ",Y Q
"RTN","XMC3",43,0)
CLOSE ;CLOSE CHANNEL
"RTN","XMC3",44,0)
 I $D(XMHANG),$L(XMHANG) X XMHANG D:$L(IO) FLUSH^XMC1A
"RTN","XMC3",45,0)
 S XMTRAN=$S($D(XMCNT("S")):XMCNT("S"),1:0)_" sent, "_$S($D(XMCNT("R")):XMCNT("R"),1:0)_" received"_$S('$D(XMTLER):"",1:"  "_XMTLER_" retransmissions.") D TRAN^XMC1
"RTN","XMC3",46,0)
 I '$D(ZTQUEUED),$G(XMHANG("OPEN"))=9 D ^%ZISC
"RTN","XMC3",47,0)
 I '$D(ZTQUEUED) D HOME^%ZIS
"RTN","XMC3",48,0)
 I $D(ZTQUEUED) S IO("C")=1 D ^%ZISC
"RTN","XMC3",49,0)
 S %=$S($D(XMINST):XMINST,$D(XMSCR):XMSCR,1:0) I %,$D(^XMBS(4.2999,%,3)) S $P(^(3),U,1,6)="^^^^^"
"RTN","XMC3",50,0)
 Q
"RTN","XMC4")
0^205^B1338448
"RTN","XMC4",1,0)
XMC4 ;(WASH ISC)/THM-MISCELLANEOUS NETWORK MGT FUNCTIONS ;06/30/99  06:33
"RTN","XMC4",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMC4",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMC4",4,0)
 ; QUEUE    XMQSHOW
"RTN","XMC4",5,0)
QUEUE ; Display messages in queue
"RTN","XMC4",6,0)
 N DIC,Y,DIRUT
"RTN","XMC4",7,0)
 I '$D(XMV("ORDER")) N XMV S XMV("ORDER")=1
"RTN","XMC4",8,0)
 W !!,"This option lets you select only those queues which have messages."
"RTN","XMC4",9,0)
 W !,"If you can't select a queue, it either doesn't exist or it has no messages.",!
"RTN","XMC4",10,0)
 S DIC(0)="AEQM"
"RTN","XMC4",11,0)
 S DIC="^DIC(4.2,"
"RTN","XMC4",12,0)
 S DIC("A")="Enter domain name: "
"RTN","XMC4",13,0)
 S DIC("?")="Select queue.  Only queues with messages are shown."
"RTN","XMC4",14,0)
 S DIC("S")="I $O(^XMB(3.7,.5,2,Y+1000,1,0))"
"RTN","XMC4",15,0)
 D ^DIC Q:Y'>0
"RTN","XMC4",16,0)
 D LIST^XMJML(.5,Y+1000,$P(Y,U,2),"",1)
"RTN","XMC4",17,0)
 Q
"RTN","XMCD")
0^203^B9174153
"RTN","XMCD",1,0)
XMCD ;(WASH ISC)/THM-COMMUNICATIONS DIAGNOSTICS ;06/22/99  15:02
"RTN","XMCD",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMCD",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMCD",4,0)
 ; DIALER   XMDXMODEM
"RTN","XMCD",5,0)
 ; SMTP     XMDXSMTP
"RTN","XMCD",6,0)
 ; TRAN     XMDXSCRIPT
"RTN","XMCD",7,0)
 ; VADATS   XMDXVADATS
"RTN","XMCD",8,0)
 Q
"RTN","XMCD",9,0)
VADATS ;VADATS DIAGNOSTIC
"RTN","XMCD",10,0)
 ;W !,"This will test the VADATS link to see if it responds"
"RTN","XMCD",11,0)
 ;I '$D(^XMB(1,1,0)) W !,*7,"No MailMan site parameters defined" Q
"RTN","XMCD",12,0)
 ;S IO=$P(^(0),U,7) I IO="" W !,*7,"No VADATS device defined.  Use the SITE PARAMETERS option to define one." Q
"RTN","XMCD",13,0)
 ;S IO=$P(^%ZIS(1,IO,0),U,1) W !,"Device ",IO," defined as the VADATS device."
"RTN","XMCD",14,0)
 ;O IO:0 I $T W !,*7,"VADATS device is currently in use." Q  ;HARD CODED OPEN REQUIRED FOR COMMUNICATIONS
"RTN","XMCD",15,0)
 ;W !,"Trying to open link to VADATS....."
"RTN","XMCD",16,0)
 ;S IOP=IO D ^%ZIS Q:POP  S XMNCR=$C(13),XMNIME=30,XMNABT=0 U IO D NETSHAK^XMNET2 U IO(0)
"RTN","XMCD",17,0)
 ;I XMNABT W !,*7,"Unable to open device." Q
"RTN","XMCD",18,0)
 ;W !,"VADATS line OK" Q
"RTN","XMCD",19,0)
DIALER ;TEST THE MODEM AUTODIALER
"RTN","XMCD",20,0)
 W !!,"This will test the modem autodialer, allowing you to enter a phone number",!,"which this program will then dial on the selected modem.",!!
"RTN","XMCD",21,0)
DIAL1 D ^%ZIS Q:POP  D D1^XMC3
"RTN","XMCD",22,0)
 U IO(0) I XMMOD="" W !,*7,"This device has no modem defined for it." G DIAL1
"RTN","XMCD",23,0)
 U IO(0) W !,^%ZIS(2,XMMOD,0)," is the defined modem for device ",IO
"RTN","XMCD",24,0)
 I $L(XMSTAT) W !,"Checking status..." U IO X XMSTAT U IO(0) W " Status: ",Y
"RTN","XMCD",25,0)
 I '$L(XMDIAL) W !,"No dialer logic specified for this modem type" G DIAL1
"RTN","XMCD",26,0)
 I '$L(XMHANG) W !,"No hangup logic specified for this modem type",*7
"RTN","XMCD",27,0)
PH R !,"Enter the phone number to dial ",XMPHONE:DTIME Q:XMPHONE=""!(XMPHONE[U)
"RTN","XMCD",28,0)
 U IO X XMDIAL U IO(0) I ER W !,*7,"Call failed: ",Y G PH
"RTN","XMCD",29,0)
 W !,"Successful.  Now hanging up...." U IO X XMHANG U IO(0)
"RTN","XMCD",30,0)
 I ER W !,*7,"Hang up unsuccessful" G DIAL1
"RTN","XMCD",31,0)
 W !,"Successfully hung up. " G DIAL1
"RTN","XMCD",32,0)
SMTP ;SMTP TESTER
"RTN","XMCD",33,0)
 W !!,"This procedure will test the Simple Mail Transfer Protocol,"
"RTN","XMCD",34,0)
 W !,"allowing you to interactively enter each of the SMTP commands."
"RTN","XMCD",35,0)
 W !,"The messages will not actually be delivered to the named recipients."
"RTN","XMCD",36,0)
 W !,"That which you type will be preceded with an 'S: '.",!,"The SMTP responses will be preceded with an 'R: '",!!,"Terminate the session with a QUIT command",!!
"RTN","XMCD",37,0)
 S XMRDX=1 D TST^XMR K XMRDX Q
"RTN","XMCD",38,0)
TRAN ;TEST TRANSMISSION ERROR RATES, SPEEDS
"RTN","XMCD",39,0)
 N XMSECURE,%X,%Y
"RTN","XMCD",40,0)
 W !!,"This will test a link by executing the script, then sending 20 lines"
"RTN","XMCD",41,0)
 W !,"in echo test mode.  It will report the number of recoverable and "
"RTN","XMCD",42,0)
 W !,"unrecoverable errors, as well as the transmission efficiency."
"RTN","XMCD",43,0)
 D LOADCODE^XMJMCODE
"RTN","XMCD",44,0)
 S %X="XMSECURE(",%Y="^TMP(""XMS"",$J,""S""," D %XY^%RCR
"RTN","XMCD",45,0)
 K XMSECURE
"RTN","XMCD",46,0)
 S XMST=1
"RTN","XMCD",47,0)
 D GO^XMC11
"RTN","XMCD",48,0)
 K XMST
"RTN","XMCD",49,0)
 Q
"RTN","XMCTLK")
0^88^B20146392
"RTN","XMCTLK",1,0)
XMCTLK ;(WASH ISC)/CAP-TALKMAN TALK-MODE ;05/12/99  08:59
"RTN","XMCTLK",2,0)
 ;;7.1;MailMan;**10,27,50**;Jun 02, 1994
"RTN","XMCTLK",3,0)
 ; Entry points (DBIA 1148):
"RTN","XMCTLK",4,0)
 ; GO   Interactive use device.
"RTN","XMCTLK",5,0)
 D ^XMCTLK0 I $S($D(DTOUT):1,$D(DUOUT):1,1:0) K DUOUT,DTOUT Q
"RTN","XMCTLK",6,0)
GO K XMG0
"RTN","XMCTLK",7,0)
GO1 K %ZIS S %ZIS="" D ^%ZIS Q:POP  I '$D(XMDUZ) Q:'$D(DUZ)  D INIT^XMCTLK0
"RTN","XMCTLK",8,0)
 I IO=IO(0) D ^%ZISC W !,"YOU MUST CHOOSE ANOTHER DEVICE" Q
"RTN","XMCTLK",9,0)
ENT N XMZ,XMSUB,TN,TL,TP,TK
"RTN","XMCTLK",10,0)
 W @IOF,"<<<< You are now talking through device ",IO," >>>>"
"RTN","XMCTLK",11,0)
 X ^%ZOSF("NBRK"),^("PRIINQ") S XMP=Y,X=Y+3,XME0(0)="S R=0,XME0=$H*86400+$P($H,$C(44),2)" S:X>10 X=10
"RTN","XMCTLK",12,0)
 X ^%ZOSF("PRIORITY")
"RTN","XMCTLK",13,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMCTLK",14,0)
 S X="ABEND^XMCTLK",@^%ZOSF("TRAP")
"RTN","XMCTLK",15,0)
 W !,"===== Enter <control>A to stop. =====",*7,!
"RTN","XMCTLK",16,0)
 S XM="",D="",XMB0=^%ZOSF("EOFF"),XMB0("RM")="S X=0 "_^("RM"),XMC0=^("EON"),XMD0=0,A="",XMF0=^("TYPE-AHEAD"),XMA=^("TRMRD") F I="TRMON","TRMOFF","NBRK" S XMG0(I)=^(I)
"RTN","XMCTLK",17,0)
 S TN=$P($H,",",2),TL=TN,(TP,TK)=0 ; Times & Timed reads Port/Keyboard
"RTN","XMCTLK",18,0)
 D T S D="" U IO G G
"RTN","XMCTLK",19,0)
 ;
"RTN","XMCTLK",20,0)
 ;MAIN LOOP / DIALOG OCCURS HERE
"RTN","XMCTLK",21,0)
 ;
"RTN","XMCTLK",22,0)
R W:$D(XMTALKER) *17 U IO R A#150:$S($G(R)>20:1,1:0) W:$D(XMTALKER) *19 S D=D_A X XMA
"RTN","XMCTLK",23,0)
 S TN=$P($H,",",2) S:(TN-TL>5) TP=1 ;ihs Time Now TP adjustment
"RTN","XMCTLK",24,0)
 S R=$G(R)+1 I Y>0 D T0 U IO(0) W A,*Y S TP=0,TL=TN X XME0(0) G R
"RTN","XMCTLK",25,0)
 D T0 U IO(0) W A I $L(A) S TP=0,TL=TN X XME0(0) D T0 G R
"RTN","XMCTLK",26,0)
S S Y=0 U IO(0) R A:TK S TK=0 E  U IO W A S:$L(A) TP=0,TL=TN G R:$L(A),Q:$H*86400+$P($H,",",2)-XME0>$S($D(DTIME):DTIME,1:300),R ;ihs timer adjustment
"RTN","XMCTLK",27,0)
 X XMA G Q:Y=1 S:Y=27 TK=1 S TP=0 I Y=13,$D(XMG0("EON")) S TP=0 U IO(0) W ! ;ihs timer adjustment
"RTN","XMCTLK",28,0)
 U IO W A,*Y W:$D(XMG0("EON"))&(Y=13) ! S:$L(A) TP=0 X XME0(0) G R
"RTN","XMCTLK",29,0)
 ;
"RTN","XMCTLK",30,0)
Q U IO(0) W *7 H 1 W *7 X XMC0,XMF0,XMG0("TRMOFF"),XMG0("NBRK")
"RTN","XMCTLK",31,0)
 K DIR S DIR("T")=9,DIR(0)="S^E:END TalkMan session;C:begin CAPTURE TalkMan dialog in message;N:do NOT end TalkMan session.;K:KERMIT Transfer Files",DIR("B")="N",DIR("??")="XMTALK"
"RTN","XMCTLK",32,0)
 I '$D(XMDUZ) S $P(DIR(0),";",2,3)=$P(DIR(0),";",3) G D
"RTN","XMCTLK",33,0)
 I $D(XMSUB) S $P(DIR(0),";",2)="S:STOP capture"
"RTN","XMCTLK",34,0)
D S XMA0=D D ^DIR S:$D(DTOUT) X="^" I '$D(X) W " ???? " G D
"RTN","XMCTLK",35,0)
 S D=XMA0 I "N"[X D T S A=" <Continue in TalkMan Mode >" D T0 W !,A,! G G
"RTN","XMCTLK",36,0)
 ;
"RTN","XMCTLK",37,0)
 ;Using Kermit !
"RTN","XMCTLK",38,0)
 I "K"=X D  G G
"RTN","XMCTLK",39,0)
 . N X I $G(^DIC(15,0,"VR"))'>7.1 W !," <No Kermit use yet. The correct Kernel tools version is not installed !>",! Q
"RTN","XMCTLK",40,0)
 . D KERM^XTKERMIT,T W !," <Continue in TalkMan Mode >",!
"RTN","XMCTLK",41,0)
 . D U S D="",Y=1
"RTN","XMCTLK",42,0)
 . Q
"RTN","XMCTLK",43,0)
 I "S"=X K XMSUB W ! G G
"RTN","XMCTLK",44,0)
 G DQ:"^E"[$E(X) I $D(XMZ) W ! S XMSUB=1 G G
"RTN","XMCTLK",45,0)
 D NOW^%DTC S X=%,XMD0=0 K %I,%H
"RTN","XMCTLK",46,0)
 S Y=$E(X,6,7)_" "_$P("Jan^Feb^Mar^Apr^May^Jun^Jul^Aug^Sep^Oct^Nov^Dec",U,$E(X,4,5))_" "_$E(X,2,3)
"RTN","XMCTLK",47,0)
 I X\1'=X S %=$P(X,".",2)_"0000",Y=Y_" "_$E(%,1,2)_":"_$E(%,3,4)
"RTN","XMCTLK",48,0)
 S XMSUB=XMDUN_" DIALOG CAPTURE "_Y
"RTN","XMCTLK",49,0)
 D GET^XMA2 W ! G G
"RTN","XMCTLK",50,0)
 ;
"RTN","XMCTLK",51,0)
 ;RETURN TO TALKMAN MODE
"RTN","XMCTLK",52,0)
G U IO
"RTN","XMCTLK",53,0)
 X XMB0("RM"),XMB0,XMF0,XMG0("NBRK"),XMG0("TRMON")
"RTN","XMCTLK",54,0)
 X:$D(XMG0("EON")) XMC0 D T X XME0(0) G R
"RTN","XMCTLK",55,0)
 ;
"RTN","XMCTLK",56,0)
ABEND ;Handle abnormal end
"RTN","XMCTLK",57,0)
 D ^%ZISC U IO(0) W *7 H 1 W *7 X XMC0,XMF0,XMG0("TRMOFF"),XMG0("NBRK") G DQ
"RTN","XMCTLK",58,0)
 ;
"RTN","XMCTLK",59,0)
 ;END TALKMAN SESSION
"RTN","XMCTLK",60,0)
 ;
"RTN","XMCTLK",61,0)
DQ W *7,!!,"End of Talkman session."
"RTN","XMCTLK",62,0)
 W !,"You are back at your starting place.",! H 1 W *7
"RTN","XMCTLK",63,0)
 W !! U IO W *17 X XMG0("TRMOFF") D ^%ZISC,HOME^%ZIS D N
"RTN","XMCTLK",64,0)
 G QQ:'$D(XMZ),QQ:'XMZ I 'XMD0 D KILLMSG^XMXUTIL(XMZ) G QQ
"RTN","XMCTLK",65,0)
 I $P(XMD0,U,2,999)'="" S XMSUB=1,Y=999,D=$P(XMD0,U,2,999) D T0
"RTN","XMCTLK",66,0)
 S XMD0=+XMD0
"RTN","XMCTLK",67,0)
 I XMD0 D NOW^%DTC D  K %I,%H G QQ
"RTN","XMCTLK",68,0)
 . S ^XMB(3.9,XMZ,2,0)="^3.92A^"_XMD0_U_XMD0_U_%
"RTN","XMCTLK",69,0)
 . K XMY,^TMP("XMY",$J),^TMP("XMY0",$J)
"RTN","XMCTLK",70,0)
 . S XMY($G(XMDUZ,DUZ))=""
"RTN","XMCTLK",71,0)
 . D ENT1^XMD W !,"TalkMan dialog capture being delivered now."
"RTN","XMCTLK",72,0)
 D KILLMSG^XMXUTIL(XMZ)
"RTN","XMCTLK",73,0)
QQ W ! D CHK^XM W ! S X=XMP X ^%ZOSF("PRIORITY")
"RTN","XMCTLK",74,0)
 K %,X1,X2,XMA0,XMB0,XMC0,XMD0,XME0,XMF0,XMG0,XMA,XMP,XMSUB,DIR
"RTN","XMCTLK",75,0)
 S XMZ=0 Q
"RTN","XMCTLK",76,0)
N U IO(0) X XMC0
"RTN","XMCTLK",77,0)
 I $D(DUZ) S X=$G(^VA(200,DUZ,200)) Q:X#10'=1  Q:$P(^(200),U,9)="Y"
"RTN","XMCTLK",78,0)
 S A="NO-TYPE-AHEAD" Q:'$D(^%ZOSF(A))  X ^(A)
"RTN","XMCTLK",79,0)
 Q
"RTN","XMCTLK",80,0)
T U IO(0) S X=0 X ^%ZOSF("RM"),XMF0,XMB0,XMG0("TRMON"),XMG0("NBRK")
"RTN","XMCTLK",81,0)
 I $D(XMG0("EON")) X XMC0
"RTN","XMCTLK",82,0)
 Q
"RTN","XMCTLK",83,0)
T0 I '$D(XMSUB)!(D=""&(Y'=9)) S D="" Q
"RTN","XMCTLK",84,0)
 I D'?.ANP F I=1:1 I $E(D,I)?1C S D=$E(D,1,I-1)_$S($A(D,I)=9:"",1:" ")_$E(D,I+1,999) Q:$E(D,I,999)?.ANP  S I=I-1
"RTN","XMCTLK",85,0)
T1 I Y'=13&($L(D)<81)!(Y>0&(D="")) S XMD0=+XMD0_U_D Q:Y'=9  S D=$E(D_"         ",1,$L(D)\9+1*9),$P(XMD0,U,2)=D Q
"RTN","XMCTLK",86,0)
 I D="" S D=" "
"RTN","XMCTLK",87,0)
 S XMD0=XMD0+1,^XMB(3.9,XMZ,2,XMD0,0)=$E(D,1,80),D=$E(D,81,999)
"RTN","XMCTLK",88,0)
 G T1
"RTN","XMCTLK",89,0)
U S XME0=$H*86400+$P($H,",",2) Q
"RTN","XMCTLK",90,0)
 ;
"RTN","XMCTLK",91,0)
 ;GET INITIAL VALUES
"RTN","XMCTLK",92,0)
ECHO ;ENTRY TO ECHO
"RTN","XMCTLK",93,0)
 K XMG0 S XMG0("EON")=1 G GO1
"RTN","XMD")
0^67^B53631547
"RTN","XMD",1,0)
XMD ;(WASH ISC)/THM/CAP-ENTRY POINTS FOR MESSAGE SENDING ;06/22/99  15:10
"RTN","XMD",2,0)
 ;;7.1;MailMan;**33,50**;Jun 02, 1994
"RTN","XMD",3,0)
 ; Entry points (DBIA 10070) are:
"RTN","XMD",4,0)
 ; ^XMD         Send a message.
"RTN","XMD",5,0)
 ;              If no recipients defined, prompt for them.
"RTN","XMD",6,0)
 ; EN1^XMD      Put text in a message.
"RTN","XMD",7,0)
 ;              If no recipients defined, prompt for them.
"RTN","XMD",8,0)
 ;              Send the message.
"RTN","XMD",9,0)
 ; ENL^XMD      Add text to an existing message.
"RTN","XMD",10,0)
 ; ENT^XMD      Interactive 'send a message'.  (Same as menu)
"RTN","XMD",11,0)
 ; ENT1^XMD     Forward a message.
"RTN","XMD",12,0)
 ; ENT2^XMD     Forward a message.
"RTN","XMD",13,0)
 ;              Prompt for recipients, whether or not any are already
"RTN","XMD",14,0)
 ;              defined.
"RTN","XMD",15,0)
 ;
"RTN","XMD",16,0)
 ; I/O Variables to the various APIs:
"RTN","XMD",17,0)
 ; XMDUZ   (in, optional) Sender DUZ or string (default=DUZ)
"RTN","XMD",18,0)
 ;              For new messages, XMDUZ may be a string, which will be
"RTN","XMD",19,0)
 ;              put in the 'message from' field.
"RTN","XMD",20,0)
 ;              For forwarded messages, XMDUZ may be a string, which
"RTN","XMD",21,0)
 ;              will be put in the 'forwarded by' field.
"RTN","XMD",22,0)
 ; XMSUB   (in) Message subject
"RTN","XMD",23,0)
 ; XMTEXT  (in) @location of message.  For example, the following are
"RTN","XMD",24,0)
 ;              among the acceptable:
"RTN","XMD",25,0)
 ;              XMTEXT="array("
"RTN","XMD",26,0)
 ;              XMTEXT="array(""node"","
"RTN","XMD",27,0)
 ;              XMTEXT="^TMP(""namespace"",$J,""array"","
"RTN","XMD",28,0)
 ;              The array must be in the acceptable FM word processing
"RTN","XMD",29,0)
 ;              format.
"RTN","XMD",30,0)
 ; XMSTRIP (in, optional) Characters that user wants stripped from text
"RTN","XMD",31,0)
 ;              of message (default=none)
"RTN","XMD",32,0)
 ; XMY     (in, optional) Array of recipients, XMY(x)="", where
"RTN","XMD",33,0)
 ;               x is a valid local or internet address.
"RTN","XMD",34,0)
 ;               XMY(x,0)=basket to deliver to, if x=sender's DUZ or .6
"RTN","XMD",35,0)
 ;               (Basket may be its number or name.  If name, and it
"RTN","XMD",36,0)
 ;               doesn't exist, it will be created.)
"RTN","XMD",37,0)
 ;               XMY(x,"D")=delete date, if x=.6 ("SHARED,MAIL")
"RTN","XMD",38,0)
 ;               A local address may be a user's name or DUZ, a G.group
"RTN","XMD",39,0)
 ;               name or S.server name.
"RTN","XMD",40,0)
 ;               If not supplied and the process is not queued,
"RTN","XMD",41,0)
 ;               you will be prompted.
"RTN","XMD",42,0)
 ; XMMG    (in, optional) If XMY is not supplied and the process is not
"RTN","XMD",43,0)
 ;               queued, XMMG is used as the default for the first
"RTN","XMD",44,0)
 ;               'send to:' prompt.  It is ignored otherwise.
"RTN","XMD",45,0)
 ;         (out) Contains error message if error occurs.
"RTN","XMD",46,0)
 ;               Undefined if no error.
"RTN","XMD",47,0)
 ; DIFROM  (in, optional) ?
"RTN","XMD",48,0)
 ; XMROU   (in, optional) Array of routines to be loaded in a PackMan
"RTN","XMD",49,0)
 ;               message.   XMROU(x)="", where x=routine name.
"RTN","XMD",50,0)
 ; XMYBLOB (in, optional) Array of images from the imaging system to be
"RTN","XMD",51,0)
 ;               loaded.  XMYBLOB(y)=x, where y and x are ?
"RTN","XMD",52,0)
 ;
"RTN","XMD",53,0)
 ; Local Variables:
"RTN","XMD",54,0)
 ; XMDF    Flag that programmer interface is in use.
"RTN","XMD",55,0)
 ;         Therefore do not check for Security Keys on domains.
"RTN","XMD",56,0)
 ;
"RTN","XMD",57,0)
 ; Entry point ^XMD
"RTN","XMD",58,0)
 ; Needs:   DUZ,XMSUB,XMTEXT
"RTN","XMD",59,0)
 ; Accepts: XMDUZ,XMY,XMMG,XMSTRIP,XMROU,DIFROM,XMYBLOB,
"RTN","XMD",60,0)
 ;          and, if $D(DIFROM), XMDF
"RTN","XMD",61,0)
 ; Ignores: N/A
"RTN","XMD",62,0)
 ; Returns: XMZ(if no error),XMMG(if error)
"RTN","XMD",63,0)
 ; Kills:   XMSUB,XMTEXT,XMY,XMSTRIP,XMMG(if no error),XMYBLOB
"RTN","XMD",64,0)
 N XMV,XMINSTR,XMBLOBER,XMABORT
"RTN","XMD",65,0)
 I '$D(DIFROM) N XMDF S XMDF=1
"RTN","XMD",66,0)
 I '$G(DUZ) N DUZ D DUZ^XUP(.5)
"RTN","XMD",67,0)
 I $G(XMDUZ)=""!($G(XMDUZ)=0) S XMDUZ=DUZ
"RTN","XMD",68,0)
 I XMDUZ'?.N S %=XMDUZ N XMDUZ S XMDUZ=% K %
"RTN","XMD",69,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMD",70,0)
 S XMABORT=0
"RTN","XMD",71,0)
 I '$D(XMTEXT) S XMMG="Error = No message text" Q
"RTN","XMD",72,0)
 I '$O(@(XMTEXT_"0)")) S XMMG="Error = No message text" Q
"RTN","XMD",73,0)
 I '$D(XMSUB)  S XMMG="Error = No message subject" Q
"RTN","XMD",74,0)
 ;I $L(XMSUB)<3!($L(XMSUB)>65) S XMMG="Error = Message subject too long or too short" Q
"RTN","XMD",75,0)
 I $L(XMSUB)<3 S XMSUB=XMSUB_"..."
"RTN","XMD",76,0)
 I $L(XMSUB)>65 S XMSUB=$E(XMSUB,1,65)
"RTN","XMD",77,0)
 I $D(XMY)'<10 K XMMG
"RTN","XMD",78,0)
 I XMDUZ'?.N D SETFROM(.XMDUZ,.XMINSTR) Q:$G(XMMG)["Error ="  ; If XMDUZ=.5, becomes POSTMASTER
"RTN","XMD",79,0)
 D INIT^XMVVITAE
"RTN","XMD",80,0)
 I '$D(XMROU),'$D(DIFROM),'$D(XMYBLOB),$D(XMY) D  Q
"RTN","XMD",81,0)
 . D SEND(XMDUZ,XMSUB,XMTEXT,.XMSTRIP,.XMY,.XMINSTR,.XMMG,.XMZ)
"RTN","XMD",82,0)
 . D QUIT
"RTN","XMD",83,0)
 D KTMP
"RTN","XMD",84,0)
 S XMSUB=$$ENCODEUP^XMXUTIL1(XMSUB)
"RTN","XMD",85,0)
 F  D CRE8XMZ^XMXSEND(XMSUB,.XMZ) Q:XMZ>0  D
"RTN","XMD",86,0)
 . K XMERR,^TMP("XMERR",$J)
"RTN","XMD",87,0)
 . I $D(ZTQUEUED) H 1 Q
"RTN","XMD",88,0)
 . W !!,*7,"Waiting for access to the Message File",!
"RTN","XMD",89,0)
 . N I F I=1:1:10 H 1 W "."
"RTN","XMD",90,0)
 I $D(XMYBLOB)>9 D  Q:XMBLOBER
"RTN","XMD",91,0)
 . ; Add BLOBS to message
"RTN","XMD",92,0)
 . S XMBLOBER=$$MULTI^XMBBLOB(XMZ)
"RTN","XMD",93,0)
 . K XMYBLOB
"RTN","XMD",94,0)
 . Q:'XMBLOBER
"RTN","XMD",95,0)
 . D KILLMSG^XMXUTIL(XMZ)
"RTN","XMD",96,0)
 . K XMZ
"RTN","XMD",97,0)
 D EN1A
"RTN","XMD",98,0)
 Q
"RTN","XMD",99,0)
SEND(XMDUZ,XMSUBJ,XMBODY,XMSTRIP,XMTO,XMINSTR,XMMG,XMZ) ;
"RTN","XMD",100,0)
 S XMBODY=$$CREF^DILF(XMBODY)
"RTN","XMD",101,0)
 S:$D(XMSTRIP) XMINSTR("STRIP")=XMSTRIP
"RTN","XMD",102,0)
 D CHKBSKT(.XMTO,.XMINSTR)
"RTN","XMD",103,0)
 D SENDMSG^XMXPARM(.XMDUZ,.XMSUBJ,.XMBODY,.XMTO,.XMINSTR)
"RTN","XMD",104,0)
 I $D(XMERR) D ERR1 Q
"RTN","XMD",105,0)
 S:$D(XMDF) XMINSTR("ADDR FLAGS")="R" ; Ignore addressee restrictions
"RTN","XMD",106,0)
 D SENDMSG^XMXSEND(XMDUZ,XMSUBJ,XMBODY,.XMTO,.XMINSTR,.XMZ)
"RTN","XMD",107,0)
 D:$D(XMERR) ERR1
"RTN","XMD",108,0)
 Q
"RTN","XMD",109,0)
ERR1 ;
"RTN","XMD",110,0)
 S XMMG="Error = "_^TMP("XMERR",$J,1,"TEXT",1)
"RTN","XMD",111,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMD",112,0)
 Q
"RTN","XMD",113,0)
EN1 ; Enter text in the msg, ask for recipients if there aren't any,
"RTN","XMD",114,0)
 ; and send the msg.
"RTN","XMD",115,0)
 ; Needs:   DUZ,XMZ,XMTEXT
"RTN","XMD",116,0)
 ; Accepts: XMDF,XMY,XMMG,XMSTRIP,XMROU,DIFROM
"RTN","XMD",117,0)
 ; Ignores: XMDUZ,XMSUB
"RTN","XMD",118,0)
 ; Returns: N/A
"RTN","XMD",119,0)
 ; Kills:   XMTEXT,XMY,XMSTRIP,XMMG
"RTN","XMD",120,0)
 N XMV,XMABORT,XMDUZ,XMINSTR
"RTN","XMD",121,0)
 S XMABORT=0
"RTN","XMD",122,0)
 S XMDUZ=DUZ
"RTN","XMD",123,0)
 D INIT^XMVVITAE
"RTN","XMD",124,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMD",125,0)
 I $D(XMY)'<10 K XMMG
"RTN","XMD",126,0)
 D EN1A
"RTN","XMD",127,0)
 Q
"RTN","XMD",128,0)
EN1A ;
"RTN","XMD",129,0)
 D EN2A
"RTN","XMD",130,0)
 Q:$D(DIFROM)
"RTN","XMD",131,0)
 D EN3A
"RTN","XMD",132,0)
 D QUIT
"RTN","XMD",133,0)
 Q
"RTN","XMD",134,0)
EN2A ;
"RTN","XMD",135,0)
 N XMI,XMBODY
"RTN","XMD",136,0)
 S XMI=0
"RTN","XMD",137,0)
 I $D(XMROU)>9,'$O(^XMB(3.9,XMZ,2,0)) D NEW^XMP S XMI=1,^XMB(3.9,XMZ,2,0)="^^1^1"
"RTN","XMD",138,0)
 S XMBODY=$$CREF^DILF(XMTEXT)
"RTN","XMD",139,0)
 D MOVEBODY^XMXSEND(XMZ,XMBODY,"A")
"RTN","XMD",140,0)
 D CHEKBODY^XMXSEND(XMZ,.XMSTRIP,XMI)
"RTN","XMD",141,0)
 S XCNP=+$P($G(^XMB(3.9,XMZ,2,0)),U,3)
"RTN","XMD",142,0)
 Q:$D(DIFROM)
"RTN","XMD",143,0)
 Q:$D(XMROU)'>9
"RTN","XMD",144,0)
 D XMROU^XMPH
"RTN","XMD",145,0)
 K XMROU
"RTN","XMD",146,0)
 D PSECURE^XMPSEC(XMZ,.XMABORT)
"RTN","XMD",147,0)
 Q
"RTN","XMD",148,0)
EN3 ; called from XPDTP (KIDS)
"RTN","XMD",149,0)
 ; XMDUZ must be valid DUZ, if provided.  It may not be a string.
"RTN","XMD",150,0)
 N XMV,XMINSTR
"RTN","XMD",151,0)
 I '$G(DUZ) N DUZ D DUZ^XUP(.5)
"RTN","XMD",152,0)
 I '$D(XMDUZ) S XMDUZ=DUZ
"RTN","XMD",153,0)
 D INIT^XMVVITAE
"RTN","XMD",154,0)
 D EN3A
"RTN","XMD",155,0)
 D QUIT
"RTN","XMD",156,0)
 Q
"RTN","XMD",157,0)
EN3A ;
"RTN","XMD",158,0)
 N XMABORT
"RTN","XMD",159,0)
 S XMABORT=0
"RTN","XMD",160,0)
 S:$D(XMDF) XMINSTR("ADDR FLAGS")="R" ; Ignore addressee restrictions
"RTN","XMD",161,0)
 I $D(XMY)<10,$D(^TMP("XMY",$J))<10,'$D(ZTQUEUED) D
"RTN","XMD",162,0)
 . I $D(XMMG) S XMINSTR("TO PROMPT")=XMMG K XMMG
"RTN","XMD",163,0)
 . D TOWHOM^XMJMT($G(XMDUZ,DUZ),"Send",.XMINSTR,"",.XMABORT)
"RTN","XMD",164,0)
 E  D
"RTN","XMD",165,0)
 . D CHKBSKT(.XMY,.XMINSTR)
"RTN","XMD",166,0)
 . D CHKADDR^XMXADDR(XMDUZ,.XMY,.XMINSTR) K:$D(XMERR) XMERR,^TMP("XMERR",$J)
"RTN","XMD",167,0)
 I XMABORT!($D(^TMP("XMY",$J))<10) D QUIT Q
"RTN","XMD",168,0)
 D BLDNSND^XMXSEND(XMDUZ,XMZ,.XMINSTR)
"RTN","XMD",169,0)
 Q
"RTN","XMD",170,0)
QUIT ;
"RTN","XMD",171,0)
 K XMSUB,XMTEXT,XMY,XMSTRIP
"RTN","XMD",172,0)
 D KTMP
"RTN","XMD",173,0)
 Q
"RTN","XMD",174,0)
ENT ; Entry for outside users
"RTN","XMD",175,0)
 ; All input variables ignored
"RTN","XMD",176,0)
 I '$G(DUZ) W "  User ID needed (DUZ) !!" Q
"RTN","XMD",177,0)
 D EN^XM,SEND^XMJMS
"RTN","XMD",178,0)
 Q
"RTN","XMD",179,0)
INIT ; From DIFROM
"RTN","XMD",180,0)
 D XMZ^XMA2 Q:XMZ<1  S $P(^XMB(3.9,XMZ,0),U,7)="X" D NEW^XMP
"RTN","XMD",181,0)
 Q
"RTN","XMD",182,0)
ENT1 ; Forward a msg, do not ask for recipients
"RTN","XMD",183,0)
 ; Needs:   DUZ,XMZ,XMY
"RTN","XMD",184,0)
 ; Accepts: XMDUZ
"RTN","XMD",185,0)
 ; Ignores: XMSUB,XMTEXT,XMMG,XMSTRIP,XMROU,DIFROM,XMYBLOB
"RTN","XMD",186,0)
 ; Returns: N/A
"RTN","XMD",187,0)
 ; Kills:   XMDUZ,XMY
"RTN","XMD",188,0)
 N XMDF
"RTN","XMD",189,0)
 S XMDF=1
"RTN","XMD",190,0)
 D ENT1A(0)
"RTN","XMD",191,0)
 Q
"RTN","XMD",192,0)
ENT1A(XMASK) ;
"RTN","XMD",193,0)
 N XMV,XMINSTR,XMABORT
"RTN","XMD",194,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMD",195,0)
 I '$G(DUZ) N DUZ D DUZ^XUP(.5)
"RTN","XMD",196,0)
 I $G(XMDUZ)=""!($G(XMDUZ)=0) S XMDUZ=DUZ
"RTN","XMD",197,0)
 S XMABORT=0
"RTN","XMD",198,0)
 D KTMP
"RTN","XMD",199,0)
 D:XMDUZ'?.N SETFWD(.XMDUZ,.XMINSTR)
"RTN","XMD",200,0)
 D INIT^XMVVITAE
"RTN","XMD",201,0)
 S:$D(XMDF) XMINSTR("ADDR FLAGS")="R" ; Ignore addressee restrictions
"RTN","XMD",202,0)
 I XMASK D TOWHOM^XMJMT(XMDUZ,"Forward",.XMINSTR,"",.XMABORT) Q:XMABORT
"RTN","XMD",203,0)
 D CHKBSKT(.XMY,.XMINSTR)
"RTN","XMD",204,0)
 D CHKADDR^XMXADDR(XMDUZ,.XMY,.XMINSTR) K:$D(XMERR) XMERR,^TMP("XMERR",$J)
"RTN","XMD",205,0)
 I $D(^TMP("XMY",$J))>9 D
"RTN","XMD",206,0)
 . D FWD^XMKP(XMDUZ,XMZ,.XMINSTR)
"RTN","XMD",207,0)
 . D CHECK^XMKPL
"RTN","XMD",208,0)
 K XMDUZ
"RTN","XMD",209,0)
 D QUIT
"RTN","XMD",210,0)
 Q
"RTN","XMD",211,0)
ENT2 ; Forward a msg, ask for (more) recipients
"RTN","XMD",212,0)
 ; Needs:   DUZ,XMZ
"RTN","XMD",213,0)
 ; Accepts: XMDUZ,XMY,XMDF
"RTN","XMD",214,0)
 ; Ignores: XMSUB,XMTEXT,XMMG,XMSTRIP,XMROU,DIFROM,XMYBLOB
"RTN","XMD",215,0)
 ; Returns: N/A
"RTN","XMD",216,0)
 ; Kills:   XMDUZ,XMY
"RTN","XMD",217,0)
 D ENT1A($S($D(ZTQUEUED):0,1:1))
"RTN","XMD",218,0)
 Q
"RTN","XMD",219,0)
KTMP K ^TMP("XMY",$J),^TMP("XMY0",$J)
"RTN","XMD",220,0)
 Q
"RTN","XMD",221,0)
ENX ;FROM MAILMAN
"RTN","XMD",222,0)
 S %=XMDUZ N XMDUZ,XMK S XMDUZ=% D XMD K %
"RTN","XMD",223,0)
 Q
"RTN","XMD",224,0)
ENL ; Add text to an existing message
"RTN","XMD",225,0)
 ; Needs:   XMZ,XMTEXT
"RTN","XMD",226,0)
 ; Accepts: XMSTRIP
"RTN","XMD",227,0)
 ; Ignores: DUZ,XMDUZ,XMSUB,XMMG,XMY,XMROU,DIFROM,XMYBLOB
"RTN","XMD",228,0)
 ; Returns: N/A
"RTN","XMD",229,0)
 ; Kills:   XMSTRIP
"RTN","XMD",230,0)
 N XMI,XMBODY
"RTN","XMD",231,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMD",232,0)
 S XMBODY=$$CREF^DILF(XMTEXT)
"RTN","XMD",233,0)
 S XMI=+$P($G(^XMB(3.9,XMZ,2,0)),U,3)
"RTN","XMD",234,0)
 D MOVEBODY^XMXSEND(XMZ,XMBODY,"A")
"RTN","XMD",235,0)
 D CHEKBODY^XMXSEND(XMZ,.XMSTRIP,XMI)
"RTN","XMD",236,0)
 K XMSTRIP
"RTN","XMD",237,0)
 Q
"RTN","XMD",238,0)
CHKBSKT(XMTO,XMINSTR) ;
"RTN","XMD",239,0)
 I $D(XMTO(XMDUZ,0)) S XMINSTR("SELF BSKT")=XMTO(XMDUZ,0)
"RTN","XMD",240,0)
 I $D(XMTO(.6,0)) S XMINSTR("SHARE BSKT")=XMTO(.6,0)
"RTN","XMD",241,0)
 I $D(XMTO(.6,"D")) S XMINSTR("SHARE DATE")=XMTO(.6,"D")
"RTN","XMD",242,0)
 Q
"RTN","XMD",243,0)
SETFROM(XMDUZ,XMINSTR) ;
"RTN","XMD",244,0)
 Q:XMDUZ=DUZ
"RTN","XMD",245,0)
 N XMPOSTPR
"RTN","XMD",246,0)
 I XMDUZ=.5 D  Q:XMPOSTPR
"RTN","XMD",247,0)
 . S XMPOSTPR=+$O(^XMB(3.7,"AB",DUZ,.5,0))
"RTN","XMD",248,0)
 . Q:'XMPOSTPR
"RTN","XMD",249,0)
 . I $P($G(^XMB(3.7,.5,9,XMPOSTPR,0)),U,3)'="y" S XMPOSTPR=0
"RTN","XMD",250,0)
 I XMDUZ'="POSTMASTER",XMDUZ'=.5 D CHKUSER(.XMDUZ) Q:+XMDUZ=XMDUZ
"RTN","XMD",251,0)
 S XMINSTR("FROM")=$$XMFROM^XMXPARM("XMDUZ",XMDUZ)
"RTN","XMD",252,0)
 I $D(XMERR) D ERR1 Q
"RTN","XMD",253,0)
 S XMDUZ=DUZ
"RTN","XMD",254,0)
 Q
"RTN","XMD",255,0)
SETFWD(XMDUZ,XMINSTR) ;
"RTN","XMD",256,0)
 Q:XMDUZ=DUZ
"RTN","XMD",257,0)
 I XMDUZ=.5,$D(^XMB(3.7,"AB",DUZ,.5)) Q
"RTN","XMD",258,0)
 I XMDUZ=.5,'$D(^XMB(3.7,"AB",DUZ,.5)) S XMDUZ="POSTMASTER"
"RTN","XMD",259,0)
 E  D CHKUSER(.XMDUZ) Q:+XMDUZ=XMDUZ
"RTN","XMD",260,0)
 S XMINSTR("FWD BY")=$$XMFROM^XMXPARM("XMDUZ",XMDUZ)
"RTN","XMD",261,0)
 I $D(XMERR) D ERR1 Q
"RTN","XMD",262,0)
 S XMDUZ=DUZ
"RTN","XMD",263,0)
 Q
"RTN","XMD",264,0)
CHKUSER(XMDUZ) ;
"RTN","XMD",265,0)
 N XMERR
"RTN","XMD",266,0)
 D CHKUSER^XMXPARM1(.XMDUZ)
"RTN","XMD",267,0)
 Q
"RTN","XMDF")
0^134^B3170253
"RTN","XMDF",1,0)
XMDF ;(WASH ISC)/THM/CAP- Message Sending API Continued ;05/12/99  09:04
"RTN","XMDF",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMDF",3,0)
 ; Entry points (DBIA 10071):
"RTN","XMDF",4,0)
 ; $$ENT  Forward a message.  This entry point is no longer supported.
"RTN","XMDF",5,0)
 ;        Use ENT1^XMD or FWDMSG^XMXAPI, instead.
"RTN","XMDF",6,0)
ENT(XMTO,XMK,XMZ,XMDUZ) ;Forward Message / Deliver imediately - Local rcpts only
"RTN","XMDF",7,0)
 ; XMTO   Rcpt DUZ
"RTN","XMDF",8,0)
 ; XMK    Basket # (1=default)
"RTN","XMDF",9,0)
 ; XMZ    Message #
"RTN","XMDF",10,0)
 ; XMDUZ  DUZ of Forwarder
"RTN","XMDF",11,0)
 N XMY
"RTN","XMDF",12,0)
 Q:$D(^XMB(3.9,XMZ,1,"C",XMTO)) 1  ; Quit if already a recipient
"RTN","XMDF",13,0)
 Q:+XMTO'=XMTO 0  ; Quit if not a local recipient
"RTN","XMDF",14,0)
 S XMY(XMTO)=""
"RTN","XMDF",15,0)
 S:$G(XMK) XMY(XMTO,0)=XMK
"RTN","XMDF",16,0)
 D ENT1A^XMD(0)
"RTN","XMDF",17,0)
 Q 1
"RTN","XMDF",18,0)
 ; This actually delivers in foreground, but should not be used,
"RTN","XMDF",19,0)
 ; because it has total disregard for 'first come, first served'.
"RTN","XMDF",20,0)
 N XMZREC,XMSUBJ,XMFROM,XMINSTR,XMRESTR,XMER
"RTN","XMDF",21,0)
 Q:$D(^XMB(3.9,XMZ,1,"C",XMTO)) 1  ; Quit if already a recipient
"RTN","XMDF",22,0)
 Q:+XMTO'=XMTO 0  ; Quit if not a local recipient
"RTN","XMDF",23,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMDF",24,0)
 S XMZREC=^XMB(3.9,0)
"RTN","XMDF",25,0)
 S XMSUBJ=$P(XMZREC,U,1)
"RTN","XMDF",26,0)
 S XMFROM=$P(XMZREC,U,2)
"RTN","XMDF",27,0)
 D INMSG2^XMXUTIL2(XMDUZ,XMZ,XMZREC,"",.XMINSTR)
"RTN","XMDF",28,0)
 D GETRESTR^XMXSEC1(XMDUZ,XMZ,XMZREC,.XMINSTR,.XMRESTR)
"RTN","XMDF",29,0)
 S XMK=$G(XMK,1)
"RTN","XMDF",30,0)
 I XMDUZ'?1N.N D SETFWD^XMD(XMDUZ,.XMINSTR)
"RTN","XMDF",31,0)
 D INIT^XMVVITAE
"RTN","XMDF",32,0)
 D INIT^XMXADDR
"RTN","XMDF",33,0)
 D CHKADDR^XMXADDR(XMDUZ,XMTO,.XMINSTR,.XMRESTR)
"RTN","XMDF",34,0)
 I $D(XMERR) D  Q XMER
"RTN","XMDF",35,0)
 . S XMER="-1 "_^TMP("XMERR",$J,1,"TEXT",1)
"RTN","XMDF",36,0)
 . K XMERR,^TMP("XMERR",$J)
"RTN","XMDF",37,0)
 D FWD^XMKP(XMDUZ,XMZ,.XMINSTR)
"RTN","XMDF",38,0)
 D CLEANUP^XMXADDR
"RTN","XMDF",39,0)
 L +^XMB("POSTDONE",XMZ)
"RTN","XMDF",40,0)
 D DELIVER^XMTDL2(XMTO,XMZ,XMSUBJ,XMFROM,XMDUZ)
"RTN","XMDF",41,0)
 L -^XMB("POSTDONE",XMZ)
"RTN","XMDF",42,0)
 Q $D(^XMB(3.7,"M",XMZ,XMTO))
"RTN","XMDIRQST")
0^89^B14408732
"RTN","XMDIRQST",1,0)
XMDIRQST ;(WASH ISC)/CWU - REQUEST EMAIL ADDRESS DIRECTORY;3/18/93 ;02/23/98  11:58
"RTN","XMDIRQST",2,0)
 ;;7.1;MailMan;**9,50**;Sep 12, 1994
"RTN","XMDIRQST",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMDIRQST",4,0)
 ; ALL      XMMGR-DIRECTORY-ALL
"RTN","XMDIRQST",5,0)
 ; EDIT     XMMGR-DIRECTORY-EDITGRP
"RTN","XMDIRQST",6,0)
 ; GROUP    XMMGR-DIRECTORY-GROUP
"RTN","XMDIRQST",7,0)
 ; LISTGRP  XMMGR-DIRECTORY-LISTGRP
"RTN","XMDIRQST",8,0)
 ; SINGLE   XMMGR-DIRECTORY-SINGLE
"RTN","XMDIRQST",9,0)
 Q
"RTN","XMDIRQST",10,0)
ALL N DIR,Y,A,DTOUT,DUOUT,NETADDR,XMSUB,XMY,ZTDTH,ZTSAVE
"RTN","XMDIRQST",11,0)
 S DIR(0)="Y"
"RTN","XMDIRQST",12,0)
 S DIR("A")="Request directories from all domains"
"RTN","XMDIRQST",13,0)
 S DIR("B")="NO"
"RTN","XMDIRQST",14,0)
 S DIR("?")="Enter YES to request directories from all domains."
"RTN","XMDIRQST",15,0)
 D ^DIR I $D(DIRUT)!'Y Q
"RTN","XMDIRQST",16,0)
 S I=0 F  S I=$O(^DIC(4.2,I)) Q:I'=+I  D S(I)
"RTN","XMDIRQST",17,0)
 Q
"RTN","XMDIRQST",18,0)
SINGLE ;Send a request to one Domain
"RTN","XMDIRQST",19,0)
 W !,"Choose Domains to request Email Directories for.",!
"RTN","XMDIRQST",20,0)
 K DIC
"RTN","XMDIRQST",21,0)
 S DIC("A")="Select DOMAIN Name: ",DIC="^DIC(4.2,",DIC(0)="AEQZ"
"RTN","XMDIRQST",22,0)
 D ^DIC
"RTN","XMDIRQST",23,0)
 Q:$S(Y<1:1,$D(DTOUT):1,$D(DUOUT):1,1:0)
"RTN","XMDIRQST",24,0)
 D S(+Y)
"RTN","XMDIRQST",25,0)
 Q
"RTN","XMDIRQST",26,0)
S(I) ;Schedule Task to Send Request to Domain
"RTN","XMDIRQST",27,0)
 N %,X,R ; I=IEN
"RTN","XMDIRQST",28,0)
 ;Do not send if No Domain Information, etc.
"RTN","XMDIRQST",29,0)
 S %=$G(^DIC(4.2,+I,0)) I %="" W *7,"  ???  No entry in Domain File (4.2) for domain '",I,"'.  [S(I)+2^XMDIRQST]" Q
"RTN","XMDIRQST",30,0)
 S X=$P(%,U),R=$P(%,U,3) I R W *7,"  ??? The directory request for ",X," (`",I,") is NOT permitted since it is accessed via relay domain '",$P($G(^DIC(4.2,+R,0)),U)," (`",R,").  [S(I)+3^XMDIRQST]  " Q
"RTN","XMDIRQST",31,0)
 I X["FOC-AUSTIN.VA.GOV" W *7,"  ???  The request for a directory from ",X," (`",I,") is NOT permitted as it is through FOC-AUSTIN.  [S(I)+4^XMDIRQST]" Q
"RTN","XMDIRQST",32,0)
 I $E(X,1,2)="Q-" W *7,"  ???  The request for a directory from ",X," (`",I,") is NOT permitted since it is a relay domain (Q-...).  [S(I)+5^XMDIRQST]" Q
"RTN","XMDIRQST",33,0)
TASK ; Set up Task
"RTN","XMDIRQST",34,0)
 N XMTASK,NETADDR
"RTN","XMDIRQST",35,0)
 S XMTASK=$G(ZTSK) N ZTSK
"RTN","XMDIRQST",36,0)
 S NETADDR=X,ZTSAVE("NETADDR")=""
"RTN","XMDIRQST",37,0)
 S ZTRTN="ONE^XMDIRQST",ZTDTH=+$H_",64800"
"RTN","XMDIRQST",38,0)
 S ZTIO="",ZTDESC="Email Directory Request to - "_X
"RTN","XMDIRQST",39,0)
 D ^%ZTLOAD
"RTN","XMDIRQST",40,0)
 I 'XMTASK W !!,*7,"TASK #"_ZTSK_" scheduled for "_NETADDR
"RTN","XMDIRQST",41,0)
 Q
"RTN","XMDIRQST",42,0)
ONE ;
"RTN","XMDIRQST",43,0)
 N XMTEXT,XMINSTR
"RTN","XMDIRQST",44,0)
 S XMINSTR("FROM")=.5
"RTN","XMDIRQST",45,0)
 S XMTEXT(1)="Directory request"
"RTN","XMDIRQST",46,0)
 D SENDMSG^XMXSEND(.5,"Request for Email Address Directory","XMTEXT","S.XMMGR-DIRECTORY-SEND@"_NETADDR,.XMINSTR)
"RTN","XMDIRQST",47,0)
 Q
"RTN","XMDIRQST",48,0)
LISTGRP ;
"RTN","XMDIRQST",49,0)
 N LSTBYGRP S LSTBYGRP=1
"RTN","XMDIRQST",50,0)
GROUP ;
"RTN","XMDIRQST",51,0)
 N DIR,Y,DTOUT,DUOUT,NETADDR,XMGROUP,XMSUB,XMY,ZTDTH,ZTSAVE,ZTSK
"RTN","XMDIRQST",52,0)
 S DIC="^DIC(4.2,",DIC(0)="AQZXC"
"RTN","XMDIRQST",53,0)
 K DO S D="AE",DIC("A")="Enter Directory Group Number: "
"RTN","XMDIRQST",54,0)
 S DIC("S")="I $O(^DIC(4.2,""AE"",X,""""))=+Y"
"RTN","XMDIRQST",55,0)
 D IX^DIC
"RTN","XMDIRQST",56,0)
 Q:Y<1  S (X,XMGROUP)=+^DIC(4.2,+Y,50)
"RTN","XMDIRQST",57,0)
 W !!,"Group Number ",X," contains following Domain names : "
"RTN","XMDIRQST",58,0)
 S I=0 F  S I=$O(^DIC(4.2,"AE",X,I)) Q:I=""  W !,$P(^DIC(4.2,I,0),U)
"RTN","XMDIRQST",59,0)
 W !!
"RTN","XMDIRQST",60,0)
 Q:$G(LSTBYGRP)
"RTN","XMDIRQST",61,0)
 S DIR(0)="Y"
"RTN","XMDIRQST",62,0)
 S DIR("A")="Do you wish to schedule Directory Request(s) for group number "_XMGROUP
"RTN","XMDIRQST",63,0)
 S DIR("B")="NO"
"RTN","XMDIRQST",64,0)
 S DIR("?")="Enter YES if you wish to request directories from all domains in the group."
"RTN","XMDIRQST",65,0)
 D ^DIR Q:$D(DIRUT)!'Y
"RTN","XMDIRQST",66,0)
 S I=0 F  S I=$O(^DIC(4.2,"AE",XMGROUP,I)) Q:I=""  D S(I)
"RTN","XMDIRQST",67,0)
 Q
"RTN","XMDIRQST",68,0)
EDIT ;
"RTN","XMDIRQST",69,0)
 W !,"Enter the Domain name that you wish to edit its Directory Request Flags? ",!
"RTN","XMDIRQST",70,0)
 K DIC S DIC="^DIC(4.2,",DIC(0)="AEQZ" D ^DIC
"RTN","XMDIRQST",71,0)
 Q:$D(DTOUT)!$D(DUOUT)!(Y<1)
"RTN","XMDIRQST",72,0)
 S DIE="^DIC(4.2,",DA=+Y,DR=50 D ^DIE
"RTN","XMDIRQST",73,0)
 G EDIT
"RTN","XMDIRRCV")
0^90^B3106724
"RTN","XMDIRRCV",1,0)
XMDIRRCV ;(WASH ISC)/CWU - EMAIL DIRECTORY RECEIVER; 3/22/93 ;06/07/99  09:48
"RTN","XMDIRRCV",2,0)
 ;;7.1;MailMan;**37,50**;Jun 02, 1994
"RTN","XMDIRRCV",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMDIRRCV",4,0)
 ; ^XMDIRRCV  XMMGR-DIRECTORY-RECV
"RTN","XMDIRRCV",5,0)
 S XMA=0
"RTN","XMDIRRCV",6,0)
 ;
"RTN","XMDIRRCV",7,0)
 ;Get pointer to domain data is coming from
"RTN","XMDIRRCV",8,0)
 S %=$P($P($P(^XMB(3.9,XMZ,0),U,2),"@",2),">")
"RTN","XMDIRRCV",9,0)
 S XMDIR1A("CODE")=$S(%="":^XMB("NAME"),1:%)
"RTN","XMDIRRCV",10,0)
 N DIK S DA=0,DIK="^XMD(4.2997,"
"RTN","XMDIRRCV",11,0)
 F  S DA=$O(^XMD(4.2997,"E",XMDIR1A("CODE"),DA)) Q:+DA'=DA  D ^DIK
"RTN","XMDIRRCV",12,0)
 ;
"RTN","XMDIRRCV",13,0)
 ;Begin main loop
"RTN","XMDIRRCV",14,0)
 ;
"RTN","XMDIRRCV",15,0)
A ;X XMREC
"RTN","XMDIRRCV",16,0)
 ;I $D(XMER) G Q:XMER<0
"RTN","XMDIRRCV",17,0)
 ;S XMA=XMA+1
"RTN","XMDIRRCV",18,0)
 ;S XMTXT(XMA)=XMRG
"RTN","XMDIRRCV",19,0)
 ;G A
"RTN","XMDIRRCV",20,0)
Q ; SET UP FOR RECEIVING EMAIL DIRECTORY
"RTN","XMDIRRCV",21,0)
 N %,%1,%5,%6
"RTN","XMDIRRCV",22,0)
 S XMDIR1=$E(DT,1,5)-200
"RTN","XMDIRRCV",23,0)
 S %=.999999
"RTN","XMDIRRCV",24,0)
 F  S %=$O(^XMB(3.9,XMZ,2,%)) Q:%=""  S %1=$G(^XMB(3.9,XMZ,2,%,0)) D
"RTN","XMDIRRCV",25,0)
 . Q:%1=""
"RTN","XMDIRRCV",26,0)
 . S X("LN")=$P(%1,U),X("FN")=$P(%1,U,2),X("RN")=$P(%1,U,3),X("MC")=$P(%1,U,4),X("EMC")=$P(%1,U,5),X("L")=$P(%1,U,6),X("NET")=$P(%1,U,7)
"RTN","XMDIRRCV",27,0)
 . Q:X("LN")=""
"RTN","XMDIRRCV",28,0)
 . I $D(^XMD(4.2997,"B",X("LN"))) S %5="" F  S %5=$O(^XMD(4.2997,"B",X("LN"),%5)) Q:%5=""  I $D(^XMD(4.2997,%5,0)) S %6=^XMD(4.2997,%5,0) Q:X("NET")=$P(%6,U,7)
"RTN","XMDIRRCV",29,0)
 . D FILE^XMDIR1A(.X)
"RTN","XMDIRRCV",30,0)
 ;
"RTN","XMDIRRCV",31,0)
 ;FINISH UP
"RTN","XMDIRRCV",32,0)
 ;
"RTN","XMDIRRCV",33,0)
 ;Set up for call to MailMan programmer interface
"RTN","XMDIRRCV",34,0)
 S XMTEXT="XMTXT(",^TMP("XMY",$J,.5)=""
"RTN","XMDIRRCV",35,0)
 S XMTXT(XMA+1)=" "
"RTN","XMDIRRCV",36,0)
 S XMTXT(XMA+2)="This message arrived through a server routine."
"RTN","XMDIRRCV",37,0)
 ;
"RTN","XMDIRRCV",38,0)
 ;Call MailMan programmer interface
"RTN","XMDIRRCV",39,0)
 D ^XMD
"RTN","XMDIRRCV",40,0)
 D ZAPSERV^XMXMSGS1("S."_XQSOP,XQMSG)
"RTN","XMDIRRCV",41,0)
 Q
"RTN","XMDIRSND")
0^91^B3377794
"RTN","XMDIRSND",1,0)
XMDIRSND ;(WASH ISC)/CMW - SEND USER DIRECTORY TO REQUESTING SITE; 3/18/93  ;02/20/98  14:30
"RTN","XMDIRSND",2,0)
 ;;7.1;MailMan;**37,50**;Jun 02, 1994
"RTN","XMDIRSND",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMDIRSND",4,0)
 ; ^XMDIRSND  XMMGR-DIRECTORY-SEND
"RTN","XMDIRSND",5,0)
SENDIT ;
"RTN","XMDIRSND",6,0)
 I $P($G(^XMB(1,1,8.4)),U) D
"RTN","XMDIRSND",7,0)
 . D OK(XQSND)
"RTN","XMDIRSND",8,0)
 E  D NOTOK(XQSND)
"RTN","XMDIRSND",9,0)
 D ZAPSERV^XMXMSGS1("S."_XQSOP,XQMSG)
"RTN","XMDIRSND",10,0)
 Q
"RTN","XMDIRSND",11,0)
NOTOK(XMTO) ;
"RTN","XMDIRSND",12,0)
 N XMTEXT,XMINSTR
"RTN","XMDIRSND",13,0)
 S XMINSTR("FROM")=.5
"RTN","XMDIRSND",14,0)
 S XMTO=$$REMADDR^XMXADDR1(XMTO)
"RTN","XMDIRSND",15,0)
 S XMTEXT(1)="User directory request at Domain "_^XMB("NETNAME")
"RTN","XMDIRSND",16,0)
 S XMTEXT(2)="is not granted."
"RTN","XMDIRSND",17,0)
 D SENDMSG^XMXSEND(.5,"Directory Request","XMTEXT",XMTO,.XMINSTR)
"RTN","XMDIRSND",18,0)
 Q
"RTN","XMDIRSND",19,0)
OK(XMFROM) ;
"RTN","XMDIRSND",20,0)
 N XMZ,XMUSER,XMREC,XMNAME,XMINSTR,XMTO
"RTN","XMDIRSND",21,0)
 S XMINSTR("FROM")=.5
"RTN","XMDIRSND",22,0)
 S XMTO=$P($$REMADDR^XMXADDR1(XMFROM),"@",2)
"RTN","XMDIRSND",23,0)
 S XMTO="S.XMMGR-DIRECTORY-RECV"_$S(XMTO="":"",1:"@"_XMTO)
"RTN","XMDIRSND",24,0)
 D STARTMSG^XMXSEND("Collect network user address",.XMZ)
"RTN","XMDIRSND",25,0)
 S XMUSER=0
"RTN","XMDIRSND",26,0)
 F  S XMUSER=$O(^XMB(3.7,XMUSER)) Q:XMUSER'>0  D
"RTN","XMDIRSND",27,0)
 . S XMREC=$G(^VA(200,XMUSER,0)) Q:'$L($P(XMREC,U,3))
"RTN","XMDIRSND",28,0)
 . S XMNAME=$P(XMREC,U) Q:XMNAME=""  S:XMNAME["," XMNAME=$TR(XMNAME,", .","._+")
"RTN","XMDIRSND",29,0)
 . ;Lname^Fname^Room#^MailCode^MailCode+^Location^Netname^Phone#^Phone_Ext
"RTN","XMDIRSND",30,0)
 . D BODYLINE^XMXSEND(XMZ,$P(XMNAME,".")_U_$P(XMNAME,".",2)_"^^^^^"_XMNAME_"@"_^XMB("NETNAME"))
"RTN","XMDIRSND",31,0)
 D ENDMSG^XMXSEND(.5,XMZ,XMTO,.XMINSTR)
"RTN","XMDIRSND",32,0)
 Q
"RTN","XME")
0^201^B1216
"RTN","XME",1,0)
XME ;(WASH ISC)/CAP/THM- * OBSOLETE * ;12/18/97  16:01
"RTN","XME",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XME",3,0)
 Q
"RTN","XME1")
0^202^B1461
"RTN","XME1",1,0)
XME1 ;(WASH ISC)/THM/CAP- * OBSOLETE * ;12/18/97  16:02
"RTN","XME1",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XME1",3,0)
 Q
"RTN","XMFAX")
0^247^B12557841
"RTN","XMFAX",1,0)
XMFAX ;ISC-SF/GMB-Fax ;07/08/98  10:51
"RTN","XMFAX",2,0)
 ;;7.1;MailMan;**36,50**;Jun 02, 1994
"RTN","XMFAX",3,0)
FAX(XMZ) ; Fax a message
"RTN","XMFAX",4,0)
 N XMABORT,XMCNT,XMFIEN,XMQUIET
"RTN","XMFAX",5,0)
 S XMQUIET=1 ; "quiet flag"
"RTN","XMFAX",6,0)
 S XMABORT=0
"RTN","XMFAX",7,0)
 D CRE8FAX(XMZ,XMQUIET,.XMCNT,.XMABORT) Q:XMABORT
"RTN","XMFAX",8,0)
 D SENDFAX(XMQUIET,XMFIEN,XMCNT)
"RTN","XMFAX",9,0)
 Q
"RTN","XMFAX",10,0)
CRE8FAX(XMZ,XMQUIET,XMCNT,XMABORT) ;
"RTN","XMFAX",11,0)
 N XMFID
"RTN","XMFAX",12,0)
 D RECORD(XMQUIET,.XMFID,.XMFIEN,.XMABORT) Q:XMABORT
"RTN","XMFAX",13,0)
 L +^AKF("FAX",XMFIEN)
"RTN","XMFAX",14,0)
 D RECIPS(XMZ,XMFID,XMFIEN,.XMCNT)
"RTN","XMFAX",15,0)
 D BODY(XMZ,XMFIEN)
"RTN","XMFAX",16,0)
 L -^AKF("FAX",XMFIEN)
"RTN","XMFAX",17,0)
 Q
"RTN","XMFAX",18,0)
RECORD(AKQ,AKFAX,AKIEN,XMABORT) ; Add record to fax file
"RTN","XMFAX",19,0)
 ; AKFAX    Fax ID
"RTN","XMFAX",20,0)
 ; AKIEN    Record number in ^AKF("FAX",
"RTN","XMFAX",21,0)
 D NE^AKFAX0 I '$D(AKFAX) S XMABORT=1 Q  ; Add record to fax file
"RTN","XMFAX",22,0)
 S $P(^AKF("FAX",AKIEN,0),U,4)=1  ; This is a MailMan-generated fax
"RTN","XMFAX",23,0)
 Q
"RTN","XMFAX",24,0)
RECIPS(XMZ,XMFID,XMFIEN,XMCNT) ; Add recipients to fax record and update recipient record in mail msg.
"RTN","XMFAX",25,0)
 N I,XMREC,XMIENS,XMFDA
"RTN","XMFAX",26,0)
 S I="",XMCNT=0
"RTN","XMFAX",27,0)
 F  S I=$O(^XMB(3.9,XMZ,1,"AFAX",I)) Q:I=""  D
"RTN","XMFAX",28,0)
 . S XMREC=$G(^AKF("FAXR",I,0)) Q:XMREC=""
"RTN","XMFAX",29,0)
 . S XMCNT=XMCNT+1
"RTN","XMFAX",30,0)
 . S XMIENS="+1,"_XMFIEN_","
"RTN","XMFAX",31,0)
 . S XMFDA(589500.01,XMIENS,.01)=I ; Pointer to recipient
"RTN","XMFAX",32,0)
 . S XMFDA(589500.01,XMIENS,1)="Awaiting Transmission Path"
"RTN","XMFAX",33,0)
 . S XMFDA(589500.01,XMIENS,2)=$P(XMREC,U,2) ; Recipient fax phone
"RTN","XMFAX",34,0)
 . S XMFDA(589500.01,XMIENS,3)=$P(XMREC,U,3) ; Recipient physical location
"RTN","XMFAX",35,0)
 . S XMFDA(589500.01,XMIENS,4)=$P(XMREC,U,4) ; Recipient voice phone
"RTN","XMFAX",36,0)
 . D UPDATE^DIE("","XMFDA") ; Add recipient to fax record
"RTN","XMFAX",37,0)
 . S XMIENS=$O(^XMB(3.9,XMZ,1,"AFAX",I,""))_","_XMZ_","
"RTN","XMFAX",38,0)
 . S XMFDA(3.91,XMIENS,4)=$$NOW^XLFDT()    ; Current date/time
"RTN","XMFAX",39,0)
 . S XMFDA(3.91,XMIENS,5)="@"  ; get rid of status
"RTN","XMFAX",40,0)
 . S XMFDA(3.91,XMIENS,13)="@" ; get rid of xref
"RTN","XMFAX",41,0)
 . S XMFDA(3.91,XMIENS,14)=XMFID ; fax id
"RTN","XMFAX",42,0)
 . D FILE^DIE("","XMFDA") ; Update mail msg recipient
"RTN","XMFAX",43,0)
 Q
"RTN","XMFAX",44,0)
BODY(XMZ,XMFIEN) ; Copy the msg text to the fax text
"RTN","XMFAX",45,0)
 N XMTEXT,XMREC,I,XMDATE,XMFROM
"RTN","XMFAX",46,0)
 S XMREC=^XMB(3.9,XMZ,0)
"RTN","XMFAX",47,0)
 S I=1,XMTEXT(I)="Subj: "_$P(XMREC,U,1)_"  ["_XMZ_"]"
"RTN","XMFAX",48,0)
 S XMDATE=$P(XMREC,U,3) S:+XMDATE=XMDATE XMDATE=$$FMTE^XLFDT(XMDATE,1)
"RTN","XMFAX",49,0)
 I $L(XMTEXT(I))+$L(XMDATE)+1>79 S I=I+1,XMTEXT(I)=XMDATE
"RTN","XMFAX",50,0)
 E  S XMTEXT(I)=XMTEXT(I)_" "_XMDATE
"RTN","XMFAX",51,0)
 S I=I+1,XMTEXT(I)="From: "_$$FROM($P(XMREC,U,2))
"RTN","XMFAX",52,0)
 I DUZ'=$P(XMREC,U,2) S I=I+1,XMTEXT(I)="Sender: "_$$FROM(DUZ)
"RTN","XMFAX",53,0)
 S I=I+1,XMTEXT(I)="-------------------------------------------------------------------------------"
"RTN","XMFAX",54,0)
 S I=I+1,XMTEXT(I)=""
"RTN","XMFAX",55,0)
 D WP^DIE(589500,XMFIEN_",",7,"","XMTEXT")
"RTN","XMFAX",56,0)
 D WP^DIE(589500,XMFIEN_",",7,"A","^XMB(3.9,"_XMZ_",2)")
"RTN","XMFAX",57,0)
 Q 
"RTN","XMFAX",58,0)
SENDFAX(AKQ,AKIEN,AKML) ;
"RTN","XMFAX",59,0)
 W !,"Sending to fax"
"RTN","XMFAX",60,0)
 D QUE^AKFAX0
"RTN","XMFAX",61,0)
 Q
"RTN","XMFAX",62,0)
FAXHDR(XMFID,XMFTO) ; Print the fax header
"RTN","XMFAX",63,0)
 W !,"MailMan FAX for ",XMFTO
"RTN","XMFAX",64,0)
 W !,"FAXmail ID: ",XMFID,", Faxed: ",$$FMTE^XLFDT($$NOW^XLFDT,1),!
"RTN","XMFAX",65,0)
 Q
"RTN","XMFAX",66,0)
FROM(XMFROM) ;
"RTN","XMFAX",67,0)
 N XMFREC,XMTITLE,XMNAME
"RTN","XMFAX",68,0)
 Q:XMFROM'=+XMFROM XMFROM
"RTN","XMFAX",69,0)
 S XMFREC=$G(^VA(200,XMFROM,0)) Q:XMFREC="" $S(XMFROM=.5:"POSTMASTER",1:"USER #"_XMFROM)_"@"_^XMB("NETNAME")
"RTN","XMFAX",70,0)
 S XMNAME=$P(XMFREC,U)_"@"_^XMB("NETNAME")
"RTN","XMFAX",71,0)
 I $P($G(XMDISPI),U)["T",$P(XMFREC,U,9) D
"RTN","XMFAX",72,0)
 . S XMTITLE=$P($G(^DIC(3.1,$P(XMFREC,U,9),0)),U)
"RTN","XMFAX",73,0)
 . S:XMTITLE'="" XMNAME=XMNAME_"@"_^XMB("NETNAME")_" - "_XMTITLE
"RTN","XMFAX",74,0)
 E  I $P($G(XMDISPI),U)["I",$D(^XMB(3.7,XMFROM,6000)) D
"RTN","XMFAX",75,0)
 . N XMINST
"RTN","XMFAX",76,0)
 . S XMINST=$P(^XMB(3.7,XMFROM,6000),U)
"RTN","XMFAX",77,0)
 . S:XMINST'="" XMNAME=XMNAME_" ("_XMINST_")"
"RTN","XMFAX",78,0)
 Q XMNAME
"RTN","XMGAPI2")
0^224^B11238816
"RTN","XMGAPI2",1,0)
XMGAPI2 ;(WASH ISC)/JKL-HEADER INFO FOR A MESSAGE ;05/28/99  10:47
"RTN","XMGAPI2",2,0)
 ;;7.1;MailMan;**41,50**;Jun 02, 1994
"RTN","XMGAPI2",3,0)
 ; Entry points (DBIA 1144):
"RTN","XMGAPI2",4,0)
 ; $$HDR  Get message header information
"RTN","XMGAPI2",5,0)
 ;
"RTN","XMGAPI2",6,0)
 ;USAGE:  S X=$$HDR^XMGAPI2(A,.B,C)
"RTN","XMGAPI2",7,0)
 ;WHERE: A=message or response #
"RTN","XMGAPI2",8,0)
 ;      .B=array into which data is placed
"RTN","XMGAPI2",9,0)
 ;       C=flag that determines what data is returned as follows:
"RTN","XMGAPI2",10,0)
 ;Not defined or 0 = returns a function value of 0 if successful, an
"RTN","XMGAPI2",11,0)
 ;   error message if unsuccessful, and a value array:
"RTN","XMGAPI2",12,0)
 ;   L("BROADCAST")= 1 if the message was broadcast; 0 otherwise
"RTN","XMGAPI2",13,0)
 ;   L("BSKT") = basket (of local user)
"RTN","XMGAPI2",14,0)
 ;   L("BSKT IEN") = basket IEN (of local user)
"RTN","XMGAPI2",15,0)
 ;   L("DATE") = origination date
"RTN","XMGAPI2",16,0)
 ;   L("DATE FM") = origination date in FileMan format
"RTN","XMGAPI2",17,0)
 ;   L("LINES") = number of lines in the original message
"RTN","XMGAPI2",18,0)
 ;   L("NEW") = 1 if the message is new; 0 otherwise
"RTN","XMGAPI2",19,0)
 ;   L("PXMZ") = pointer to the original message
"RTN","XMGAPI2",20,0)
 ;   L("SENDER") = sender name
"RTN","XMGAPI2",21,0)
 ;   L("SENDER DUZ") = sender DUZ
"RTN","XMGAPI2",22,0)
 ;   L("SUBJ") = subject
"RTN","XMGAPI2",23,0)
 ;   L("SURROG") = surrogate (DUZ if local user or string if not)
"RTN","XMGAPI2",24,0)
 ;   L("TYPE") = message type(s)
"RTN","XMGAPI2",25,0)
 ;   L("XMZ") = message or response number
"RTN","XMGAPI2",26,0)
 ;1 = returns function value and value array above, also
"RTN","XMGAPI2",27,0)
 ;    additional value array as follows:
"RTN","XMGAPI2",28,0)
 ;   L("RRED") = responses read
"RTN","XMGAPI2",29,0)
 ;   L("RRCV") = responses received
"RTN","XMGAPI2",30,0)
 ;   L("BLOBCNT") = number of non-textual body parts attached
"RTN","XMGAPI2",31,0)
 ;91= returns function value, value array as with flag 1,
"RTN","XMGAPI2",32,0)
 ;    and an array of response nodes and values as follows:
"RTN","XMGAPI2",33,0)
 ;   L("RSP",counter)= (pointer to 3.9 file) / array of responses
"RTN","XMGAPI2",34,0)
 ;92= returns function value, value array as with flag 1,
"RTN","XMGAPI2",35,0)
 ;    and an array of non-textual body parts as follows:
"RTN","XMGAPI2",36,0)
 ;   L("BLOB",counter) = (pointer to 2005 file) array of BLOBS
"RTN","XMGAPI2",37,0)
 ;93= returns function value, value array as with flag 1,
"RTN","XMGAPI2",38,0)
 ;    response node array, and an array of non-textual body parts.
"RTN","XMGAPI2",39,0)
HDR(XMZ,L,F) ;Entry for non-MailMan (documented)
"RTN","XMGAPI2",40,0)
GO N %,%0,D,XMBCAST
"RTN","XMGAPI2",41,0)
 S %=$G(XMZ) I +%'=%!(%<1) S %="1-Undefined message number" G ERR
"RTN","XMGAPI2",42,0)
 I XMZ="" S %="1-No message number" G ERR
"RTN","XMGAPI2",43,0)
 S %0=$G(^XMB(3.9,XMZ,0)) I %0="" S %="1-No such message" G ERR
"RTN","XMGAPI2",44,0)
 S D=$S($G(XMDUZ):XMDUZ,1:DUZ)
"RTN","XMGAPI2",45,0)
 I $S(+D'=D:1,D'>0:1,'$D(^XMB(3.7,D,0)):1,1:0) S %="4-Invalid user" G ERR
"RTN","XMGAPI2",46,0)
 S %=$P(%0,U,8),%=$S(%:%,1:XMZ)
"RTN","XMGAPI2",47,0)
 S XMBCAST=$S($D(^XMB(3.9,%,1,"C","* (Broadcast to all local users)")):1,$D(^XMB(3.9,%,1,"C","* (Broadcast to all local user")):1,1:0)
"RTN","XMGAPI2",48,0)
 I $S($P(%0,U,2)=D:0,$D(^XMB(3.9,%,1,"C",D)):0,XMBCAST:0,1:1) S %="2-User is not a sender or recipient." G ERR
"RTN","XMGAPI2",49,0)
 I $G(F)=""!'$G(F) S F=0   ;Default FLAG
"RTN","XMGAPI2",50,0)
 N %1,%2,XMK
"RTN","XMGAPI2",51,0)
 S %1=$$NET^XMRENT(XMZ)    ;get message information
"RTN","XMGAPI2",52,0)
 I %1="" S %="4-Message not defined" G ERR
"RTN","XMGAPI2",53,0)
 S L("BROADCAST")=XMBCAST
"RTN","XMGAPI2",54,0)
 S L("XMZ")=XMZ            ;set message number into array
"RTN","XMGAPI2",55,0)
 S L("DATE")=$P(%1,U)      ;get origination date
"RTN","XMGAPI2",56,0)
 S %2=$P(%0,U,3)
"RTN","XMGAPI2",57,0)
 S L("DATE FM")=$S(%2?7N1".".N:%2,%2?7N:%2,1:$$CONVERT^XMXUTIL1(%2))
"RTN","XMGAPI2",58,0)
 S:L("DATE FM")<2000000 L("DATE FM")=""
"RTN","XMGAPI2",59,0)
 S L("SENDER")=$P(%1,U,3)  ;get sender
"RTN","XMGAPI2",60,0)
 S L("SENDER DUZ")=$S($P(%0,U,2):$P(%0,U,2),1:"")
"RTN","XMGAPI2",61,0)
 S L("PXMZ")=$P(%1,U,7)    ;get pointer to original message
"RTN","XMGAPI2",62,0)
 S L("TYPE")=$P(%1,U,8)    ;Message Type(s)
"RTN","XMGAPI2",63,0)
 ;get number of message lines
"RTN","XMGAPI2",64,0)
 S L("LINES")=$S($D(^XMB(3.9,XMZ,2,0)):$P(^(0),U,4),1:"")
"RTN","XMGAPI2",65,0)
 S L("SUBJ")=$P(%1,U,6)    ;get subject
"RTN","XMGAPI2",66,0)
 S L("SURROG")=$P(%1,U,5)  ;get surrogate
"RTN","XMGAPI2",67,0)
 S XMK=$O(^XMB(3.7,"M",XMZ,D,0))  ;get basket
"RTN","XMGAPI2",68,0)
 I XMK,$D(^XMB(3.7,D,2,XMK,0)) D
"RTN","XMGAPI2",69,0)
 . S L("BSKT")=$P(^(0),U)
"RTN","XMGAPI2",70,0)
 . S L("BSKT IEN")=XMK
"RTN","XMGAPI2",71,0)
 E  D
"RTN","XMGAPI2",72,0)
 . S L("BSKT")=""
"RTN","XMGAPI2",73,0)
 . S L("BSKT IEN")=""
"RTN","XMGAPI2",74,0)
 I $G(XMK) S L("NEW")=$S($D(^XMB(3.7,D,"N0",XMK,XMZ)):1,1:0)
"RTN","XMGAPI2",75,0)
 G Q:F=0
"RTN","XMGAPI2",76,0)
 ;get responses read/received
"RTN","XMGAPI2",77,0)
 S L("RRED")="",L("RRCV")="",%1=$O(^XMB(3.9,XMZ,1,"C",D,0))
"RTN","XMGAPI2",78,0)
 I %1 S L("RRED")=$P(^XMB(3.9,XMZ,1,%1,0),U,2)
"RTN","XMGAPI2",79,0)
 I $D(^XMB(3.9,XMZ,3,0)) S L("RRCV")=$P(^(0),U,4)
"RTN","XMGAPI2",80,0)
 S L("BLOBCNT")=0          ;get blob count
"RTN","XMGAPI2",81,0)
 I $D(^XMB(3.9,XMZ,2005,0)) S L("BLOBCNT")=$P(^(0),U,3)
"RTN","XMGAPI2",82,0)
 G Q:F=1,BLOB:F=92
"RTN","XMGAPI2",83,0)
 ;flag=91 - get response numbers and values
"RTN","XMGAPI2",84,0)
 S %1=0 F  S %1=$O(^XMB(3.9,XMZ,3,%1)) Q:'%1  S L("RSP",%1)=^(%1,0)
"RTN","XMGAPI2",85,0)
 I F=91 G Q
"RTN","XMGAPI2",86,0)
 ;flag=92 - get nodes and values of non-textual body parts
"RTN","XMGAPI2",87,0)
BLOB S %1=0 F  S %1=$O(^XMB(3.9,XMZ,2005,%1)) Q:'%1  S L("BLOB",%1)=^(%1,0)
"RTN","XMGAPI2",88,0)
Q Q 0
"RTN","XMGAPI2",89,0)
ERR Q %
"RTN","XMGAPI3")
0^71^B6047536
"RTN","XMGAPI3",1,0)
XMGAPI3 ;WASH ISC/REW/LH - Deliver Broadcast Msg & Mark for Vaporization ;10/14/98  09:12
"RTN","XMGAPI3",2,0)
 ;;7.1;MailMan;**29,44,67,50**;Jun 02, 1994
"RTN","XMGAPI3",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMGAPI3",4,0)
 ; ENT    XMR-BROADCAST-VA-WIDE
"RTN","XMGAPI3",5,0)
 ; ENT    XMYB-BROADCAST-VA-WIDE
"RTN","XMGAPI3",6,0)
ENT(XMTO) ; Meant to be invoked by a server.  Delivers a message
"RTN","XMGAPI3",7,0)
 ; either to all users or to a specific user.
"RTN","XMGAPI3",8,0)
 ; The message must have been sent by the POSTMASTER@FORUM.VA.GOV.
"RTN","XMGAPI3",9,0)
 ; The AUTOMATIC DELETE DATE for this message is set for each user
"RTN","XMGAPI3",10,0)
 ; to be in 7 days; 30 days if sent to a specific user.
"RTN","XMGAPI3",11,0)
 ; The message is made 'information only' and 'closed'.
"RTN","XMGAPI3",12,0)
 ; XMTO   *=to all employees
"RTN","XMGAPI3",13,0)
 ;        DUZ=to only one person -- typically .6 to route to SHARED,MAIL
"RTN","XMGAPI3",14,0)
 ; Variables set in the server invoker:
"RTN","XMGAPI3",15,0)
 ; XQSOP  Server basket name
"RTN","XMGAPI3",16,0)
 ; XQMSG  Message number
"RTN","XMGAPI3",17,0)
 ; XMFROM Who sent the message
"RTN","XMGAPI3",18,0)
 N XMDUZ,XMKN
"RTN","XMGAPI3",19,0)
 S (XMDUZ,DUZ)=.5
"RTN","XMGAPI3",20,0)
 S XMKN="S."_XQSOP
"RTN","XMGAPI3",21,0)
 I $P(XMFROM,"@")'["POSTMASTER"!($P(XMFROM,"@",2)'["FORUM.VA.GOV") D
"RTN","XMGAPI3",22,0)
 . D ERR1(XMDUZ,XMKN,XMFROM)
"RTN","XMGAPI3",23,0)
 E  D
"RTN","XMGAPI3",24,0)
 . D SEND(XMDUZ,XMKN,XQMSG,XMTO,XMFROM)
"RTN","XMGAPI3",25,0)
 D CLEANUP(XMKN,XQMSG)
"RTN","XMGAPI3",26,0)
 Q
"RTN","XMGAPI3",27,0)
SEND(XMDUZ,XMKN,XMZ,XMTO,XMFROM) ;
"RTN","XMGAPI3",28,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMGAPI3",29,0)
 D INIT^XMXADDR
"RTN","XMGAPI3",30,0)
 D CHKADDR^XMXADDR(XMDUZ,XMTO)
"RTN","XMGAPI3",31,0)
 I $D(XMERR) D  Q
"RTN","XMGAPI3",32,0)
 . D ERR2(XMDUZ,XMKN,XMTO,XMFROM)
"RTN","XMGAPI3",33,0)
 . K XMERR,^TMP("XMERR",$J)
"RTN","XMGAPI3",34,0)
 D FORCE(XMZ,$S(XMTO="*":7,1:30))
"RTN","XMGAPI3",35,0)
 D SEND^XMKP(XMDUZ,XMZ)
"RTN","XMGAPI3",36,0)
 Q
"RTN","XMGAPI3",37,0)
FORCE(DA,XMDAYS) ; Set Info Only, Closed statuses, and Purge date
"RTN","XMGAPI3",38,0)
 N DIE,DR
"RTN","XMGAPI3",39,0)
 S DIE=3.9,DR="1.95///y;1.97///y;1.6///"_$$FMADD^XLFDT(DT,XMDAYS)
"RTN","XMGAPI3",40,0)
 D ^DIE
"RTN","XMGAPI3",41,0)
 Q
"RTN","XMGAPI3",42,0)
CLEANUP(XMKN,XMZ) ; Successfully delivered message, so remove from Postmaster Server Basket
"RTN","XMGAPI3",43,0)
 D CLEANUP^XMXADDR
"RTN","XMGAPI3",44,0)
 D ZAPSERV^XMXMSGS1(XMKN,XMZ)
"RTN","XMGAPI3",45,0)
 Q
"RTN","XMGAPI3",46,0)
ERR1(XMDUZ,XMKN,XMFROM) ; Send message back to sender if not POSTMASTER@FORUM
"RTN","XMGAPI3",47,0)
 N A
"RTN","XMGAPI3",48,0)
 S A(1)="You may not send a message to the "_XMKN_" server."
"RTN","XMGAPI3",49,0)
 S A(2)="Only the Postmaster at FORUM.VA.GOV has this permission."
"RTN","XMGAPI3",50,0)
 D SENDMSG^XMXSEND(XMDUZ,"Sender of Message to Server Unacceptable","A",XMFROM)
"RTN","XMGAPI3",51,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMGAPI3",52,0)
 Q
"RTN","XMGAPI3",53,0)
 ;
"RTN","XMGAPI3",54,0)
ERR2(XMDUZ,XMKN,XMTO,XMFROM) ; Send a message back to sender if single recipient is invalid
"RTN","XMGAPI3",55,0)
 N A,I,J
"RTN","XMGAPI3",56,0)
 S A(1)="Your message to the "_XMKN_" server was not accepted"
"RTN","XMGAPI3",57,0)
 S A(2)="because the lookup for the recipient specified ("_XMTO_")"
"RTN","XMGAPI3",58,0)
 S A(3)="failed, with the following message:"
"RTN","XMGAPI3",59,0)
 S J=3,I=0
"RTN","XMGAPI3",60,0)
 F  S I=$O(^TMP("XMERR",$J,XMERR,"TEXT",I)) Q:'I  S J=J+1,A(J)=^(I)
"RTN","XMGAPI3",61,0)
 D SENDMSG^XMXSEND(XMDUZ,"Server Recipient Unknown","A",XMFROM)
"RTN","XMGAPI3",62,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMGAPI3",63,0)
 Q
"RTN","XMGAPI4")
0^133^B10998516
"RTN","XMGAPI4",1,0)
XMGAPI4 ;(WASH ISC)/CAP - Info Functions (Alerts...) ;09/30/98  14:26
"RTN","XMGAPI4",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMGAPI4",3,0)
 ; Entry points (DBIA 1201):
"RTN","XMGAPI4",4,0)
 ; $$NU   Get new message info
"RTN","XMGAPI4",5,0)
NU(XM,Z,XMT) ;API for new message display
"RTN","XMGAPI4",6,0)
 ;
"RTN","XMGAPI4",7,0)
 ;Usage:  S X=$$NU^XMGAPI4(1) = Display on screen
"RTN","XMGAPI4",8,0)
 ;        S X=$$NU^XMGAPI4(0) = Do not display
"RTN","XMGAPI4",9,0)
 ;        S X=$$NU^XMGAPI4(1,1,"ABC") Return displayable array "ABC"
"RTN","XMGAPI4",10,0)
 ;
"RTN","XMGAPI4",11,0)
 ;Inputs:  DUZ must exist
"RTN","XMGAPI4",12,0)
 ;         XMDUZ will exist if the context is in MailMan
"RTN","XMGAPI4",13,0)
 ;
"RTN","XMGAPI4",14,0)
 ;XM=1 to force new display
"RTN","XMGAPI4",15,0)
 ;XM=0 for no display
"RTN","XMGAPI4",16,0)
 ;Z=1 will cause an array to be passed back in array XMT
"RTN","XMGAPI4",17,0)
 ;
"RTN","XMGAPI4",18,0)
 S XM("XMT")=$G(Z) N XM0 S XM0=0 D XN
"RTN","XMGAPI4",19,0)
 I XM("XMT"),XMT?1.AN M @XMT=XM0 Q Y
"RTN","XMGAPI4",20,0)
 ;
"RTN","XMGAPI4",21,0)
 ;Return values or write
"RTN","XMGAPI4",22,0)
 I XM W !,*7 N I S I=0 F  S I=$O(XM0(I)) Q:'I  W XM0(I),!
"RTN","XMGAPI4",23,0)
 Q Y
"RTN","XMGAPI4",24,0)
CHK K ^TMP("XMY",$J),^TMP("XMY0",$J) Q:$G(XMDUZ)=.6  N XM S XM=0
"RTN","XMGAPI4",25,0)
XN ;
"RTN","XMGAPI4",26,0)
 N XMREC
"RTN","XMGAPI4",27,0)
 S XM(0)=$S($D(XMDUZ):XMDUZ,1:DUZ) I '$D(XM0) N XM0 S XM0=0
"RTN","XMGAPI4",28,0)
 I $D(^XMB(3.7,XM(0),0)) S XMREC=$$NEWS^XMXUTIL(XM(0),$D(DUZ("SAV"))) D  G XM1
"RTN","XMGAPI4",29,0)
 . S Y=$P(XMREC,U,1)
"RTN","XMGAPI4",30,0)
 . Q:'XM!'Y
"RTN","XMGAPI4",31,0)
 . S XM0=XM0+1,XM0(XM0)=$S(XM(0)=.5:"The Postmaster has",1:"You have")_" "_$S(Y:Y,1:"NO")_" new message"_$S(Y=1:"",1:"s")
"RTN","XMGAPI4",32,0)
 . S %=$P(XMREC,U,3)
"RTN","XMGAPI4",33,0)
 . I % S XM0(XM0)=XM0(XM0)_" ["_%_" in the 'IN' basket]"
"RTN","XMGAPI4",34,0)
 . S %=$P(XMREC,U,4)  ; last arrival
"RTN","XMGAPI4",35,0)
 . I $P(XMREC,U,5) D  ; if last arrival > latest notification...
"RTN","XMGAPI4",36,0)
 . . D D S XM0=XM0+1,XM0(XM0)="(Last arrival: "_A_")"
"RTN","XMGAPI4",37,0)
 . S XM0=XM0+1,XM0(XM0)=""
"RTN","XMGAPI4",38,0)
 . S XM0=XM0+1
"RTN","XMGAPI4",39,0)
 . I XM(0)'=.5 S XM0(XM0)="Enter '^NML' to read your new messages !"
"RTN","XMGAPI4",40,0)
XM1 I $D(^XMB(3.7,XM(0),"N")),'$P($G(^(0)),U,12) D C
"RTN","XMGAPI4",41,0)
 ;
"RTN","XMGAPI4",42,0)
 ;If Postmaster surrogate notify of new Postmaster mail
"RTN","XMGAPI4",43,0)
 Q:$S(DUZ=.5:1,$G(XMDUZ)=.5:1,1:0)
"RTN","XMGAPI4",44,0)
 I XM,$D(^XMB(3.7,"AB",XM(0),.5)) D PM K XM0(XM0)
"RTN","XMGAPI4",45,0)
 Q
"RTN","XMGAPI4",46,0)
PM N XMDUZ S XMDUZ=.5
"RTN","XMGAPI4",47,0)
 S XM0(XM0+1)="",XM0(XM0+2)="Checking the Postmaster's Mailbox !",XM0=XM0+2
"RTN","XMGAPI4",48,0)
 D XN
"RTN","XMGAPI4",49,0)
 Q
"RTN","XMGAPI4",50,0)
C N Y I '$D(IORVON) N IORVON,IORVOFF,IOBON,IOBOFF D ZIS^XM
"RTN","XMGAPI4",51,0)
 S XM0=XM0+1,XM0(XM0)=$S($D(IORVON):IORVON,1:"")_"There is PRIORITY Mail for you !!!"_$S($D(IORVOFF):IORVOFF,1:"")
"RTN","XMGAPI4",52,0)
 Q
"RTN","XMGAPI4",53,0)
D N Y S Y=%,A=$E(Y,6,7)_" "_$P("Jan^Feb^Mar^Apr^May^Jun^Jul^Aug^Sep^Oct^Nov^Dec",U,$E(Y,4,5))_" "_$E(Y,2,3)
"RTN","XMGAPI4",54,0)
 I Y\1'=Y S Y=$P(Y,".",2)_"0000",A=A_" "_$E(Y,1,2)_":"_$E(Y,3,4)
"RTN","XMGAPI4",55,0)
 Q
"RTN","XMGAPI4",56,0)
LST(A,X,Y) ;List NEW message (or any other) array
"RTN","XMGAPI4",57,0)
 ; A=Array to list
"RTN","XMGAPI4",58,0)
 ; X=X address of box
"RTN","XMGAPI4",59,0)
 ; Y=Y address of box
"RTN","XMGAPI4",60,0)
 ;
"RTN","XMGAPI4",61,0)
 N I,S S I="",$P(S," ",IOM+1)=""
"RTN","XMGAPI4",62,0)
 F  S I=$O(A(I)) Q:I=""  D
"RTN","XMGAPI4",63,0)
 . I $G(X) S DX=X,DY=Y X IOXY
"RTN","XMGAPI4",64,0)
 . E  W !
"RTN","XMGAPI4",65,0)
 . W $E(A(I)_S,1,IOM-$G(X))
"RTN","XMGAPI4",66,0)
 . I $D(Y) S Y=Y+1
"RTN","XMGAPI4",67,0)
 . Q
"RTN","XMGAPI4",68,0)
 Q
"RTN","XMGAPI4",69,0)
PRIALRT ;Priority Mail Alert
"RTN","XMGAPI4",70,0)
 N XQAID S XQAID="XM-PRIOMESS" D ALERT
"RTN","XMGAPI4",71,0)
 I '$D(XMDUZ) N XMDUZ S XMDUZ=DUZ
"RTN","XMGAPI4",72,0)
 W !,"Select PRIORITY (NEW) messages (one at a time) from the list given."
"RTN","XMGAPI4",73,0)
 H 1
"RTN","XMGAPI4",74,0)
 D INIT^XMVVITAE
"RTN","XMGAPI4",75,0)
 D LISTALL^XMJMLN(XMDUZ,"N")
"RTN","XMGAPI4",76,0)
 Q
"RTN","XMGAPI4",77,0)
NEWALRT ;Alert for NEW Mail
"RTN","XMGAPI4",78,0)
 N XQAID S XQAID="XM-NEWMESS" D ALERT
"RTN","XMGAPI4",79,0)
 I '$D(XMDUZ) N XMDUZ S XMDUZ=DUZ
"RTN","XMGAPI4",80,0)
 W !,"Select NEW messages (one at a time) from the list given."
"RTN","XMGAPI4",81,0)
 H 1
"RTN","XMGAPI4",82,0)
 D INIT^XMVVITAE
"RTN","XMGAPI4",83,0)
 D LISTALL^XMJMLN(XMDUZ,"N0")
"RTN","XMGAPI4",84,0)
 Q
"RTN","XMGAPI4",85,0)
ALERT N X,XQAKILL
"RTN","XMGAPI4",86,0)
 S X=$$NU(1,1,"X") D LST(.X)
"RTN","XMGAPI4",87,0)
 S XQA($S($G(XMDUZ):XMDUZ,1:DUZ))="",XQAKILL=1
"RTN","XMGAPI4",88,0)
 D DELETEA^XQALERT
"RTN","XMGAPI4",89,0)
 Q
"RTN","XMHIG")
0^1^B25551539
"RTN","XMHIG",1,0)
XMHIG ;ISC-SF/GMB Mail Group Info ;03/04/99  12:36
"RTN","XMHIG",2,0)
 ;;7.1;MailMan;**45,50**;Jun 02, 1994
"RTN","XMHIG",3,0)
 ; Replaces ENTQ^XMA5,GHELP^XMA7G (ISC-WASH/THM/CAP/RJ)
"RTN","XMHIG",4,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMHIG",5,0)
 ; HELP      XMHELPGROUP - Get info on a group
"RTN","XMHIG",6,0)
HELP ; Group Info
"RTN","XMHIG",7,0)
 N DIC,Y
"RTN","XMHIG",8,0)
 D CHECK^XMVVITAE
"RTN","XMHIG",9,0)
 S DIC="^XMB(3.8,",DIC(0)="AEQMZ"
"RTN","XMHIG",10,0)
 ; Screen:  Group is public OR user is organizer OR user is member
"RTN","XMHIG",11,0)
 S DIC("S")="I $P(^(0),U,2)=""PU""!($G(^(3))=XMDUZ)!($D(^(1,""B"",XMDUZ)))"
"RTN","XMHIG",12,0)
 F  W ! D ^DIC Q:Y<0  D
"RTN","XMHIG",13,0)
 . D DISPLAY(+Y)
"RTN","XMHIG",14,0)
 Q
"RTN","XMHIG",15,0)
DISPLAY(XMGIEN) ;
"RTN","XMHIG",16,0)
 N XMABORT
"RTN","XMHIG",17,0)
 S XMABORT=0
"RTN","XMHIG",18,0)
 W @IOF
"RTN","XMHIG",19,0)
 D FIELDS(XMGIEN)
"RTN","XMHIG",20,0)
 D AUTHSEND(XMGIEN,.XMABORT) Q:XMABORT
"RTN","XMHIG",21,0)
 D MEMBERS(XMGIEN,.XMABORT) Q:XMABORT
"RTN","XMHIG",22,0)
 D GROUP(XMGIEN,.XMABORT) Q:XMABORT
"RTN","XMHIG",23,0)
 D REMOTE(XMGIEN,.XMABORT) Q:XMABORT
"RTN","XMHIG",24,0)
 D DISTR(XMGIEN,.XMABORT) Q:XMABORT
"RTN","XMHIG",25,0)
 D FAXMEMBR(XMGIEN,.XMABORT) Q:XMABORT
"RTN","XMHIG",26,0)
 D FAXGROUP(XMGIEN,.XMABORT) Q:XMABORT
"RTN","XMHIG",27,0)
 Q
"RTN","XMHIG",28,0)
FIELDS(DA) ;
"RTN","XMHIG",29,0)
 N DIC,DR
"RTN","XMHIG",30,0)
 S DIC="^XMB(3.8,"
"RTN","XMHIG",31,0)
 F DR=0,2,3 D EN^DIQ
"RTN","XMHIG",32,0)
 Q
"RTN","XMHIG",33,0)
AUTHSEND(XMGIEN,XMABORT) ;
"RTN","XMHIG",34,0)
 Q:'$O(^XMB(3.8,XMGIEN,4,0))
"RTN","XMHIG",35,0)
 N I,XMMIEN,XMNAME,XMREC
"RTN","XMHIG",36,0)
 S I=0
"RTN","XMHIG",37,0)
 F  S I=$O(^XMB(3.8,XMGIEN,4,I)) Q:I'>0  D  Q:XMABORT
"RTN","XMHIG",38,0)
 . I $Y+3>IOSL D PAGE(.XMABORT) Q:XMABORT
"RTN","XMHIG",39,0)
 . S XMMIEN=$P(^XMB(3.8,XMGIEN,4,I,0),U)
"RTN","XMHIG",40,0)
 . S XMREC=$G(^VA(200,XMMIEN,0))
"RTN","XMHIG",41,0)
 . I XMREC="" D DELETE(XMGIEN,4,I) Q
"RTN","XMHIG",42,0)
 . S XMNAME=$P(XMREC,U,1)
"RTN","XMHIG",43,0)
 . W !,"Authorized Sender: ",XMNAME
"RTN","XMHIG",44,0)
 Q
"RTN","XMHIG",45,0)
MEMBERS(XMGIEN,XMABORT) ;
"RTN","XMHIG",46,0)
 Q:'$O(^XMB(3.8,XMGIEN,1,0))
"RTN","XMHIG",47,0)
 N I,XMMIEN,XMNAME,XMTITLE,XMREC,XMINST,XMTYPE
"RTN","XMHIG",48,0)
 I $Y+5>IOSL D  Q:XMABORT
"RTN","XMHIG",49,0)
 . D PAGE(.XMABORT)
"RTN","XMHIG",50,0)
 E  W !!
"RTN","XMHIG",51,0)
 D HEADER
"RTN","XMHIG",52,0)
 S I=0
"RTN","XMHIG",53,0)
 F  S I=$O(^XMB(3.8,XMGIEN,1,I)) Q:I'>0  D  Q:XMABORT
"RTN","XMHIG",54,0)
 . I $Y+3>IOSL D PAGE(.XMABORT,1) Q:XMABORT
"RTN","XMHIG",55,0)
 . S XMREC=^XMB(3.8,XMGIEN,1,I,0)
"RTN","XMHIG",56,0)
 . S XMMIEN=$P(XMREC,U)
"RTN","XMHIG",57,0)
 . S XMTYPE=$P(XMREC,U,2)
"RTN","XMHIG",58,0)
 . S XMREC=$G(^VA(200,XMMIEN,0))
"RTN","XMHIG",59,0)
 . I XMREC="" D DELETE(XMGIEN,1,I) Q
"RTN","XMHIG",60,0)
 . S XMNAME=$P(XMREC,U,1)
"RTN","XMHIG",61,0)
 . I XMTYPE'="" S XMNAME=XMTYPE_":"_XMNAME
"RTN","XMHIG",62,0)
 . I XMV("SHOW TITL"),$P(XMREC,U,9) D  ; Show title
"RTN","XMHIG",63,0)
 . . S XMTITLE=$P($G(^DIC(3.1,$P(XMREC,U,9),0)),U,1)
"RTN","XMHIG",64,0)
 . . S:XMTITLE'="" XMNAME=XMNAME_" - "_XMTITLE
"RTN","XMHIG",65,0)
 . I XMV("SHOW INST"),$D(^XMB(3.7,XMMIEN,6000)) D
"RTN","XMHIG",66,0)
 . . S XMINST=$P(^XMB(3.7,XMMIEN,6000),U)  ; Show institution
"RTN","XMHIG",67,0)
 . . S:XMINST'="" XMNAME=XMNAME_" ("_XMINST_")"
"RTN","XMHIG",68,0)
 . W !,$E(XMNAME,1,44),?45,$S($D(^XMB(3.7,XMMIEN,"L")):$E($P(^("L"),U),1,35),1:"Never Used MailMan")
"RTN","XMHIG",69,0)
 Q
"RTN","XMHIG",70,0)
DELETE(XMGIEN,XMNODE,DA) ;
"RTN","XMHIG",71,0)
 N DIK
"RTN","XMHIG",72,0)
 L +^XMB(3.8,XMGIEN,XMNODE)
"RTN","XMHIG",73,0)
 S DA(1)=XMGIEN
"RTN","XMHIG",74,0)
 S DIK="^XMB(3.8,"_DA(1)_","_XMNODE_","
"RTN","XMHIG",75,0)
 D ^DIK
"RTN","XMHIG",76,0)
 L -^XMB(3.8,XMGIEN,XMNODE)
"RTN","XMHIG",77,0)
 Q
"RTN","XMHIG",78,0)
GROUP(XMGIEN,XMABORT) ; Member Groups
"RTN","XMHIG",79,0)
 Q:'$O(^XMB(3.8,XMGIEN,5,0))
"RTN","XMHIG",80,0)
 N I,XMMIEN,XMNAME,XMREC
"RTN","XMHIG",81,0)
 W !
"RTN","XMHIG",82,0)
 S I=0
"RTN","XMHIG",83,0)
 F  S I=$O(^XMB(3.8,XMGIEN,5,I)) Q:I'>0  D  Q:XMABORT
"RTN","XMHIG",84,0)
 . I $Y+3>IOSL D PAGE(.XMABORT) Q:XMABORT
"RTN","XMHIG",85,0)
 . S XMREC=^XMB(3.8,XMGIEN,5,I,0)
"RTN","XMHIG",86,0)
 . S XMMIEN=$P(XMREC,U)
"RTN","XMHIG",87,0)
 . S XMTYPE=$P(XMREC,U,2)
"RTN","XMHIG",88,0)
 . S XMNAME=$P($G(^XMB(3.8,XMMIEN,0)),U)
"RTN","XMHIG",89,0)
 . I XMNAME="" D DELETE(XMGIEN,5,I) Q
"RTN","XMHIG",90,0)
 . I XMTYPE'="" S XMNAME=XMTYPE_":"_XMNAME
"RTN","XMHIG",91,0)
 . W !,"Member Group: ",XMNAME
"RTN","XMHIG",92,0)
 Q
"RTN","XMHIG",93,0)
REMOTE(XMGIEN,XMABORT) ; Remote Members
"RTN","XMHIG",94,0)
 Q:'$O(^XMB(3.8,XMGIEN,6,0))
"RTN","XMHIG",95,0)
 N I,XMNAME
"RTN","XMHIG",96,0)
 W !
"RTN","XMHIG",97,0)
 S I=0
"RTN","XMHIG",98,0)
 F  S I=$O(^XMB(3.8,XMGIEN,6,I)) Q:I'>0  D  Q:XMABORT
"RTN","XMHIG",99,0)
 . I $Y+3>IOSL D PAGE(.XMABORT) Q:XMABORT
"RTN","XMHIG",100,0)
 . S XMNAME=$P(^XMB(3.8,XMGIEN,6,I,0),U)
"RTN","XMHIG",101,0)
 . W !,"Remote Member: ",XMNAME
"RTN","XMHIG",102,0)
 Q
"RTN","XMHIG",103,0)
DISTR(XMGIEN,XMABORT) ; Distribution list
"RTN","XMHIG",104,0)
 Q:'$O(^XMB(3.8,XMGIEN,7,0))
"RTN","XMHIG",105,0)
 N I,XMMIEN,XMNAME
"RTN","XMHIG",106,0)
 W !
"RTN","XMHIG",107,0)
 S I=0
"RTN","XMHIG",108,0)
 F  S I=$O(^XMB(3.8,XMGIEN,7,I)) Q:I'>0  D  Q:XMABORT
"RTN","XMHIG",109,0)
 . I $Y+3>IOSL D PAGE(.XMABORT) Q:XMABORT
"RTN","XMHIG",110,0)
 . S XMMIEN=$P(^XMB(3.8,XMGIEN,7,I,0),U)
"RTN","XMHIG",111,0)
 . S XMNAME=$P($G(^XMB(3.816,XMMIEN,0)),U)
"RTN","XMHIG",112,0)
 . I XMNAME="" D DELETE(XMGIEN,7,I) Q
"RTN","XMHIG",113,0)
 . W !,"Distribution List: ",XMNAME W:$D(^XMB(3.816,XMMIEN,1,0)) " (To "_$P(^(0),U,4)_" Domains)"
"RTN","XMHIG",114,0)
 Q
"RTN","XMHIG",115,0)
FAXGROUP(XMGIEN,XMABORT) ; Fax Groups
"RTN","XMHIG",116,0)
 Q:'$O(^XMB(3.8,XMGIEN,9,0))
"RTN","XMHIG",117,0)
 N I,XMMIEN,XMNAME
"RTN","XMHIG",118,0)
 W !
"RTN","XMHIG",119,0)
 S I=0
"RTN","XMHIG",120,0)
 F  S I=$O(^XMB(3.8,XMGIEN,9,I)) Q:I'>0  D  Q:XMABORT
"RTN","XMHIG",121,0)
 . I $Y+3>IOSL D PAGE(.XMABORT) Q:XMABORT
"RTN","XMHIG",122,0)
 . S XMMIEN=$P(^XMB(3.8,XMGIEN,9,I,0),U)
"RTN","XMHIG",123,0)
 . S XMNAME=$P($G(^AKF("FAXG",XMMIEN,0)),U)
"RTN","XMHIG",124,0)
 . I XMNAME="" D DELETE(XMGIEN,9,I) Q
"RTN","XMHIG",125,0)
 . W !,"Fax Group: ",XMNAME
"RTN","XMHIG",126,0)
 Q
"RTN","XMHIG",127,0)
FAXMEMBR(XMGIEN,XMABORT) ; Fax Members
"RTN","XMHIG",128,0)
 Q:'$O(^XMB(3.8,XMGIEN,8,0))
"RTN","XMHIG",129,0)
 N I,XMMIEN,XMNAME
"RTN","XMHIG",130,0)
 W !
"RTN","XMHIG",131,0)
 S I=0
"RTN","XMHIG",132,0)
 F  S I=$O(^XMB(3.8,XMGIEN,8,I)) Q:I'>0  D  Q:XMABORT
"RTN","XMHIG",133,0)
 . I $Y+3>IOSL D PAGE(.XMABORT) Q:XMABORT
"RTN","XMHIG",134,0)
 . S XMMIEN=$P(^XMB(3.8,XMGIEN,8,I,0),U)
"RTN","XMHIG",135,0)
 . S XMNAME=$P($G(^AKF("FAXR",XMMIEN,0)),U)
"RTN","XMHIG",136,0)
 . I XMNAME="" D DELETE(XMGIEN,8,I) Q
"RTN","XMHIG",137,0)
 . W !,"Fax Recipient: ",XMNAME
"RTN","XMHIG",138,0)
 Q
"RTN","XMHIG",139,0)
GSCREEN ; This routine is a screen [DIC("S")] for a fileman lookup
"RTN","XMHIG",140,0)
 ; The naked reference is set to ^XMB(3.8,Y,0)
"RTN","XMHIG",141,0)
 I $P(^(0),U,2)="PU" Q        ; Group is public
"RTN","XMHIG",142,0)
 I $G(^(3))=XMDUZ Q           ; User is organizer of the group
"RTN","XMHIG",143,0)
 I $D(^(1,"B",XMDUZ)) Q       ; User is a member of the group
"RTN","XMHIG",144,0)
 ; *** But this doesn't handle the case in which a user might not be
"RTN","XMHIG",145,0)
 ; *** a member of this group, but is a member of a member group.
"RTN","XMHIG",146,0)
 Q
"RTN","XMHIG",147,0)
PAGE(XMABORT,XMHDR) ;
"RTN","XMHIG",148,0)
 D PAGE^XMXUTIL(.XMABORT) Q:XMABORT
"RTN","XMHIG",149,0)
 W @IOF
"RTN","XMHIG",150,0)
 D:$G(XMHDR) HEADER
"RTN","XMHIG",151,0)
 Q
"RTN","XMHIG",152,0)
HEADER ;
"RTN","XMHIG",153,0)
 W "Member                                      Last Used MailMan"
"RTN","XMHIG",154,0)
 Q
"RTN","XMHIU")
0^2^B18326610
"RTN","XMHIU",1,0)
XMHIU ;ISC-SF/GMB User Info ;05/11/99  14:16
"RTN","XMHIU",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMHIU",3,0)
 ; Replaces UHELP^XMA7 (ISC-WASH/RJ/THM/CAP)
"RTN","XMHIU",4,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMHIU",5,0)
 ; HELP      XMHELPUSER - Get user info
"RTN","XMHIU",6,0)
HELP ; User Info
"RTN","XMHIU",7,0)
 N DIC,Y
"RTN","XMHIU",8,0)
 D CHECK^XMVVITAE
"RTN","XMHIU",9,0)
 S DIC=200,DIC(0)="AEQMZ",DIC("A")="User name: "
"RTN","XMHIU",10,0)
 S DIC("S")="I $S('$D(^VA(200,Y,0)):0,Y<1:1,$L($P(^(0),U,3)):1,1:0)"
"RTN","XMHIU",11,0)
 S DIC("W")="D USERINFO^XMXADDR(Y)"
"RTN","XMHIU",12,0)
 F  W ! D ^DIC Q:Y<0  D
"RTN","XMHIU",13,0)
 . W @IOF,$P(Y,U,2)
"RTN","XMHIU",14,0)
 . D DISPUSER(+Y)
"RTN","XMHIU",15,0)
 . S DIC("W")="D USERINFO^XMXADDR(Y)"
"RTN","XMHIU",16,0)
 Q
"RTN","XMHIU",17,0)
DISPUSER(XMUSER) ;
"RTN","XMHIU",18,0)
 N XMABORT
"RTN","XMHIU",19,0)
 S XMABORT=0
"RTN","XMHIU",20,0)
 D GENERAL(XMUSER)                     ; General info
"RTN","XMHIU",21,0)
 D GROUPS(XMUSER,.XMABORT) Q:XMABORT   ; Groups in which this user is a member
"RTN","XMHIU",22,0)
 D SURRBEU(XMUSER,.XMABORT) Q:XMABORT  ; Surrogates who may be this user
"RTN","XMHIU",23,0)
 D UBESURR(XMUSER,.XMABORT)            ; Users for whom this user may be surrogate
"RTN","XMHIU",24,0)
 Q
"RTN","XMHIU",25,0)
GENERAL(XMUSER) ;
"RTN","XMHIU",26,0)
 N X,XMREC
"RTN","XMHIU",27,0)
 I '$D(^XMB(3.7,XMUSER)) W !,"No Mailbox for this user !" Q
"RTN","XMHIU",28,0)
 S XMREC=$G(^XMB(3.7,XMUSER,0))
"RTN","XMHIU",29,0)
 Q:XMREC=""&'$D(^XMB(3.8,"AB",XMUSER))
"RTN","XMHIU",30,0)
 S X=$G(^XMB(3.7,XMUSER,"B")) W:$L(X) !,"Current Banner: ",X
"RTN","XMHIU",31,0)
 S X=$P($G(^XMB(3.7,XMUSER,"L")),U) W:$L(X) !,"Last used MailMan: ",X
"RTN","XMHIU",32,0)
 S X=$P(XMREC,U,6) I X D
"RTN","XMHIU",33,0)
 . W !,"This user has "_X_" NEW message"_$S(X>1:"s",1:"")
"RTN","XMHIU",34,0)
 . S X=$P(^XMB(3.7,XMUSER,2,1,0),U,2)
"RTN","XMHIU",35,0)
 . W:X " ("_X_" in the IN basket)"
"RTN","XMHIU",36,0)
 I $D(^XMB(3.7,XMUSER,1,0)) D
"RTN","XMHIU",37,0)
 . W !!,"Introduction:"
"RTN","XMHIU",38,0)
 . S X=0
"RTN","XMHIU",39,0)
 . F  S X=$O(^XMB(3.7,XMUSER,1,X)) Q:X'>0  W !,"  ",^(X,0)
"RTN","XMHIU",40,0)
 S X=$P(XMREC,U,2) I $L(X) W !,"Forwarding Address: ",X,", Local Delivery is "_$S($P(XMREC,U,8):"on",1:"off")
"RTN","XMHIU",41,0)
 S XMREC=$G(^VA(200,XMUSER,.13))
"RTN","XMHIU",42,0)
 S X=$P(XMREC,U,2) I X'="" W !!,"Office phone:  ",X
"RTN","XMHIU",43,0)
 S X=$P(XMREC,U,6) I X'="" W !,"Fax:           ",X
"RTN","XMHIU",44,0)
 S X=$P(XMREC,U,7) I X'="" W !,"Voice pager:   ",X
"RTN","XMHIU",45,0)
 S X=$P(XMREC,U,8) I X'="" W !,"Digital pager: ",X
"RTN","XMHIU",46,0)
 S X=$P(XMREC,U,3) I X'="" W !,"Add'l phone:   ",X
"RTN","XMHIU",47,0)
 S X=$P(XMREC,U,4) I X'="" W !,"Add'l phone:   ",X
"RTN","XMHIU",48,0)
 Q:'$P(^XMB(1,1,0),U,10)  ; Don't show address unless site OKs it.
"RTN","XMHIU",49,0)
 S XMREC=$G(^VA(200,XMUSER,.11),"^^")
"RTN","XMHIU",50,0)
 I $P(XMREC,U,1,3)'="^^" D
"RTN","XMHIU",51,0)
 . W !!,"Address: "
"RTN","XMHIU",52,0)
 . F X=1:1:3 I $P(XMREC,U,X)'="" W !,"  ",$P(XMREC,U,X)
"RTN","XMHIU",53,0)
 . S X=$P(XMREC,U,4) I X'="" W !,"  ",X
"RTN","XMHIU",54,0)
 . S X=$P(XMREC,U,5) I X W ", ",$P($G(^DIC(5,X,0)),U,2)
"RTN","XMHIU",55,0)
 . S X=$P(XMREC,U,6) I X'="" W "  ",X
"RTN","XMHIU",56,0)
 Q
"RTN","XMHIU",57,0)
GROUPS(XMUSER,XMABORT) ;
"RTN","XMHIU",58,0)
 N XMGIEN,XMREC,XMTYPE
"RTN","XMHIU",59,0)
 Q:'$D(^XMB(3.8,"AB",XMUSER))
"RTN","XMHIU",60,0)
 W !!,"Mail Groups:"
"RTN","XMHIU",61,0)
 S XMGIEN=""
"RTN","XMHIU",62,0)
 F  S XMGIEN=$O(^XMB(3.8,"AB",XMUSER,XMGIEN)) Q:XMGIEN=""  D  Q:XMABORT
"RTN","XMHIU",63,0)
 . S XMREC=$G(^XMB(3.8,XMGIEN,0)) Q:XMREC=""
"RTN","XMHIU",64,0)
 . S XMTYPE=$P(XMREC,U,2)
"RTN","XMHIU",65,0)
 . ; Don't show private group membership, unless user is a member, too.
"RTN","XMHIU",66,0)
 . I XMTYPE="PR",'$D(^XMB(3.8,"AB",DUZ,XMGIEN)) Q
"RTN","XMHIU",67,0)
 . I $Y+4>IOSL D PAGE(.XMABORT) Q:XMABORT
"RTN","XMHIU",68,0)
 . W !?2,$P(XMREC,U)
"RTN","XMHIU",69,0)
 . W:$G(^XMB(3.8,XMGIEN,3))=XMUSER " (Organizer) "
"RTN","XMHIU",70,0)
 . W ?45,$S(XMTYPE="PR":"(Private)",1:"(Public)")
"RTN","XMHIU",71,0)
 Q
"RTN","XMHIU",72,0)
SURRBEU(XMUSER,XMABORT) ; List surrogates for this user
"RTN","XMHIU",73,0)
 N XMSIEN
"RTN","XMHIU",74,0)
 Q:'$O(^XMB(3.7,XMUSER,9,0))
"RTN","XMHIU",75,0)
 W !!,"This user's surrogates are:"
"RTN","XMHIU",76,0)
 S XMSIEN=0
"RTN","XMHIU",77,0)
 F  S XMSIEN=$O(^XMB(3.7,XMUSER,9,XMSIEN)) Q:XMSIEN=""  D  Q:XMABORT
"RTN","XMHIU",78,0)
 . D DISPSURR(2,XMUSER,XMSIEN,.XMABORT)
"RTN","XMHIU",79,0)
 Q
"RTN","XMHIU",80,0)
UBESURR(XMSURR,XMABORT) ; List users for whom this user may act as surrogate
"RTN","XMHIU",81,0)
 N XMUSER,XMSIEN
"RTN","XMHIU",82,0)
 Q:'$O(^XMB(3.7,"AB",XMSURR,0))
"RTN","XMHIU",83,0)
 W !!,"This user may act as surrogate for:"
"RTN","XMHIU",84,0)
 S XMUSER=""
"RTN","XMHIU",85,0)
 F  S XMUSER=$O(^XMB(3.7,"AB",XMSURR,XMUSER)) Q:XMUSER=""  D  Q:XMABORT
"RTN","XMHIU",86,0)
 . S XMSIEN=$O(^XMB(3.7,"AB",XMSURR,XMUSER,""))
"RTN","XMHIU",87,0)
 . D DISPSURR(1,XMUSER,XMSIEN,.XMABORT)
"RTN","XMHIU",88,0)
 Q
"RTN","XMHIU",89,0)
DISPSURR(XMFLAG,XMUSER,XMSIEN,XMABORT) ;
"RTN","XMHIU",90,0)
 N XMPRIV,XMREC,XMNIEN
"RTN","XMHIU",91,0)
 I $Y+4>IOSL D PAGE(.XMABORT) Q:XMABORT
"RTN","XMHIU",92,0)
 S XMREC=$S(XMUSER=.6:".6^y^y",1:$G(^XMB(3.7,XMUSER,9,XMSIEN,0)))
"RTN","XMHIU",93,0)
 S XMNIEN=$S(XMFLAG=1:XMUSER,1:$P(XMREC,U,1))
"RTN","XMHIU",94,0)
 Q:'XMNIEN  Q:'$D(^VA(200,XMNIEN,0))
"RTN","XMHIU",95,0)
 W !,?2,$P(^VA(200,XMNIEN,0),U)
"RTN","XMHIU",96,0)
 S XMPRIV=$P(XMREC,U,2,3)
"RTN","XMHIU",97,0)
 I XMPRIV'["y" W ?45,"No Privileges" Q
"RTN","XMHIU",98,0)
 I $L(XMPRIV,"y")>2 W ?45,"Read and Write Privileges" Q
"RTN","XMHIU",99,0)
 W ?45,$S($P(XMPRIV,U)["y":"Read",1:"Write")," Privilege"
"RTN","XMHIU",100,0)
 Q
"RTN","XMHIU",101,0)
PAGE(XMABORT) ;
"RTN","XMHIU",102,0)
 D PAGE^XMXUTIL(.XMABORT) Q:XMABORT
"RTN","XMHIU",103,0)
 W @IOF
"RTN","XMHIU",104,0)
 Q
"RTN","XMJBL")
0^143^B11154847
"RTN","XMJBL",1,0)
XMJBL ;ISC-SF/GMB-List contents of user's Mailbox ;06/15/99  10:15
"RTN","XMJBL",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJBL",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMJBL",4,0)
 ; LISTMBOX  XMBASKLIST - List all messages in user's mailbox
"RTN","XMJBL",5,0)
MBOX ; List messages in mailbox of DUZ
"RTN","XMJBL",6,0)
 N DIC,Y
"RTN","XMJBL",7,0)
 S DIC(0)="AEQZ",DIC=3.7
"RTN","XMJBL",8,0)
 D ^DIC Q:Y=-1
"RTN","XMJBL",9,0)
 D LISTM(+Y,$P(Y(0,0),U))
"RTN","XMJBL",10,0)
 Q
"RTN","XMJBL",11,0)
LISTMBOX ; Option to list mailbox contents comes in here
"RTN","XMJBL",12,0)
 N ZTSAVE,XMNAME,DIR,X,Y
"RTN","XMJBL",13,0)
 D CHECK^XMVVITAE
"RTN","XMJBL",14,0)
 S DIR(0)="S^A:All Baskets;O:One Basket"
"RTN","XMJBL",15,0)
 S DIR("A")="List contents of"
"RTN","XMJBL",16,0)
 S DIR("B")="All Baskets"
"RTN","XMJBL",17,0)
 D ^DIR Q:$D(DIRUT)
"RTN","XMJBL",18,0)
 S XMNAME=XMV("NAME")
"RTN","XMJBL",19,0)
 S (ZTSAVE("XMDUZ"),ZTSAVE("XMNAME"),ZTSAVE("XMV(""ORDER"")"))=""
"RTN","XMJBL",20,0)
 I Y="A" D EN^XUTMDEVQ("ZLISTM^XMJBL","MailMan: Mailbox Contents List",.ZTSAVE) Q
"RTN","XMJBL",21,0)
 N XMK,XMKN
"RTN","XMJBL",22,0)
 D SELBSKT^XMJBU(XMDUZ,"List contents of MAIL BASKET: ","","",.XMK,.XMKN) Q:XMK=U
"RTN","XMJBL",23,0)
 S (ZTSAVE("XMK"),ZTSAVE("XMKN"))=""
"RTN","XMJBL",24,0)
 D EN^XUTMDEVQ("ZLISTB^XMJBL","MailMan: Basket Contents List",.ZTSAVE)
"RTN","XMJBL",25,0)
 Q
"RTN","XMJBL",26,0)
LISTM(XMDUZ,XMNAME) ; List Mailbox
"RTN","XMJBL",27,0)
ZLISTM ;
"RTN","XMJBL",28,0)
 N XMPAGE,XMLEN,XMK,XMKN,XMABORT
"RTN","XMJBL",29,0)
 S XMKN=""
"RTN","XMJBL",30,0)
 S XMLEN("XMKZ")=6
"RTN","XMJBL",31,0)
 D INIT(.XMNAME,.XMLEN,.XMPAGE,.XMABORT)
"RTN","XMJBL",32,0)
 F  S XMKN=$O(^XMB(3.7,XMDUZ,2,"B",XMKN)) Q:XMKN=""  D  Q:XMABORT
"RTN","XMJBL",33,0)
 . S XMK=$O(^(XMKN,""))  ; Naked reference to above line
"RTN","XMJBL",34,0)
 . D LB(XMDUZ,XMNAME,XMK,XMKN,.XMLEN,.XMPAGE,.XMABORT)
"RTN","XMJBL",35,0)
 Q:$G(IOST)'["C-"!XMABORT
"RTN","XMJBL",36,0)
 D WAIT^XMXUTIL
"RTN","XMJBL",37,0)
 Q
"RTN","XMJBL",38,0)
LISTB(XMDUZ,XMNAME,XMK,XMKN) ; List Basket
"RTN","XMJBL",39,0)
ZLISTB ;
"RTN","XMJBL",40,0)
 N XMPAGE,XMLEN,XMABORT
"RTN","XMJBL",41,0)
 S XMLEN("XMKZ")=$L($O(^XMB(3.7,XMDUZ,2,XMK,1,"C",""),-1))
"RTN","XMJBL",42,0)
 D INIT(.XMNAME,.XMLEN,.XMPAGE,.XMABORT)
"RTN","XMJBL",43,0)
 D LB(XMDUZ,XMNAME,XMK,XMKN,.XMLEN,.XMPAGE,.XMABORT)
"RTN","XMJBL",44,0)
 Q:$G(IOST)'["C-"!XMABORT
"RTN","XMJBL",45,0)
 D WAIT^XMXUTIL
"RTN","XMJBL",46,0)
 Q
"RTN","XMJBL",47,0)
LB(XMDUZ,XMNAME,XMK,XMKN,XMLEN,XMPAGE,XMABORT) ;
"RTN","XMJBL",48,0)
 N XMKZ,XMZ,XMZREC
"RTN","XMJBL",49,0)
 I $Y+5>IOSL D PAGE Q:XMABORT
"RTN","XMJBL",50,0)
 W !!,"Basket: ",XMKN
"RTN","XMJBL",51,0)
 S XMKZ=""
"RTN","XMJBL",52,0)
 F  S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ),XMV("ORDER")) Q:XMKZ'>0  D  Q:XMABORT
"RTN","XMJBL",53,0)
 . S XMZ=$O(^(XMKZ,""))  ; Naked reference to line above
"RTN","XMJBL",54,0)
 . S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMJBL",55,0)
 . I XMZREC="" D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMJBL",56,0)
 . I $Y+3>IOSL D  Q:XMABORT
"RTN","XMJBL",57,0)
 . . D PAGE Q:XMABORT
"RTN","XMJBL",58,0)
 . . W !!,"Basket: ",XMKN," (continued)"
"RTN","XMJBL",59,0)
 . W !,$J(XMKZ,XMLEN("XMKZ")),". ",$J("["_XMZ_"]",XMLEN("XMZ"))," ",$$LJ^XLFSTR($E($$DATE^XMXUTIL2(XMZREC,1),1,XMLEN("DATE")),XMLEN("DATE")),"  ",$E($$SUBJ^XMXUTIL2(XMZREC),1,XMLEN("SUBJ"))
"RTN","XMJBL",60,0)
 Q
"RTN","XMJBL",61,0)
INIT(XMNAME,XMLEN,XMPAGE,XMABORT) ;
"RTN","XMJBL",62,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","XMJBL",63,0)
 S (XMPAGE,XMABORT)=0
"RTN","XMJBL",64,0)
 S XMLEN("XMZ")=$L($O(^XMB(3.9,":"),-1))+2
"RTN","XMJBL",65,0)
 S XMLEN("DATE")=16
"RTN","XMJBL",66,0)
 S XMLEN("SUBJ")=79-XMLEN("DATE")-XMLEN("XMKZ")-XMLEN("XMZ")-5
"RTN","XMJBL",67,0)
 S XMNAME=XMNAME_" - "_$$MMDT^XMXUTIL1($$NOW^XLFDT)
"RTN","XMJBL",68,0)
 W:$G(IOST)["C-" @IOF
"RTN","XMJBL",69,0)
 D HEADER
"RTN","XMJBL",70,0)
 Q
"RTN","XMJBL",71,0)
PAGE ;
"RTN","XMJBL",72,0)
 I $G(IOST)["C-" D PAGE^XMXUTIL(.XMABORT) Q:XMABORT
"RTN","XMJBL",73,0)
 W @IOF
"RTN","XMJBL",74,0)
 D HEADER
"RTN","XMJBL",75,0)
 Q
"RTN","XMJBL",76,0)
HEADER ;
"RTN","XMJBL",77,0)
 S XMPAGE=XMPAGE+1
"RTN","XMJBL",78,0)
 W "Mailbox Content for ",XMNAME,"   Page: ",XMPAGE
"RTN","XMJBL",79,0)
 W !,"-------------------------------------------------------------------------------"
"RTN","XMJBL",80,0)
 Q
"RTN","XMJBM")
0^3^B56111159
"RTN","XMJBM",1,0)
XMJBM ;ISC-SF/GMB-Manage Mail in Mailbox ;06/29/99  15:14
"RTN","XMJBM",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJBM",3,0)
 ; Replaces ^XMA0,^XMA01 (ISC-WASH/CAP/THM)
"RTN","XMJBM",4,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMJBM",5,0)
 ; MANAGE   XMREAD
"RTN","XMJBM",6,0)
MANAGE ; Manage existing mail in your Mailbox
"RTN","XMJBM",7,0)
 N XMABORT,XMK,XMKN,XMRDR
"RTN","XMJBM",8,0)
 S XMABORT=0
"RTN","XMJBM",9,0)
 D INIT^XMJBM1(.XMDUZ,.XMRDR,.XMABORT) Q:XMABORT
"RTN","XMJBM",10,0)
 F  D ASKBSKT^XMJBM1(XMDUZ,XMRDR,.XMK,.XMKN,.XMABORT) Q:XMABORT  D  Q:XMABORT
"RTN","XMJBM",11,0)
 . D:XMRDR="C" CLASSIC(XMDUZ,XMK,XMKN,.XMABORT) ; Classic Reader
"RTN","XMJBM",12,0)
 . D:XMRDR="D" LIST^XMJMLR(XMDUZ,XMK,.XMKN,1,.XMABORT) ; Full Screen Detail
"RTN","XMJBM",13,0)
 . D:XMRDR="S" LIST^XMJMLR(XMDUZ,XMK,.XMKN,0,.XMABORT) ; Full Screen Summary
"RTN","XMJBM",14,0)
 . I XMABORT,XMDUZ=.6 S XMABORT=0
"RTN","XMJBM",15,0)
 . I '$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",0)) D NOMSGS^XMJBM1(XMDUZ,XMK,XMKN)
"RTN","XMJBM",16,0)
 Q
"RTN","XMJBM",17,0)
CLASSIC(XMDUZ,XMK,XMKN,XMABORT) ; Read Message
"RTN","XMJBM",18,0)
 N XMFIRST,XMLAST,XMZ,XMNEXT,XMKZ,XMORDER
"RTN","XMJBM",19,0)
 I XMDUZ=.5,XMK>999 S XMORDER=XMV("ORDER"),XMV("ORDER")=1
"RTN","XMJBM",20,0)
 S XMKZ=""
"RTN","XMJBM",21,0)
 F  D  Q:XMABORT
"RTN","XMJBM",22,0)
 . F  S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ),XMV("ORDER")) Q:'XMKZ  Q:XMDUZ=DUZ  Q:'$$SURRCONF^XMXSEC(XMDUZ,$O(^(XMKZ,"")))
"RTN","XMJBM",23,0)
 . I XMKZ="" D  Q:XMABORT
"RTN","XMJBM",24,0)
 . . F  S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ),XMV("ORDER")) Q:'XMKZ  Q:XMDUZ=DUZ  Q:'$$SURRCONF^XMXSEC(XMDUZ,$O(^(XMKZ,"")))
"RTN","XMJBM",25,0)
 . . I XMKZ="" S XMABORT=1 Q
"RTN","XMJBM",26,0)
 . . D AGAIN^XMJMLR(.XMABORT)
"RTN","XMJBM",27,0)
 . S XMFIRST=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",""))
"RTN","XMJBM",28,0)
 . S XMLAST=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",""),-1)
"RTN","XMJBM",29,0)
 . ; have the user pick from first to last, or any xmz
"RTN","XMJBM",30,0)
 . N XMY,XMOPTION,XMPREVU
"RTN","XMJBM",31,0)
 . D SETCMD(XMDUZ,XMK,.XMOPTION)
"RTN","XMJBM",32,0)
 . S:XMV("PREVU") XMPREVU=$$PREVU(XMDUZ,XMK,XMKN,XMKZ)
"RTN","XMJBM",33,0)
 . S XMNEXT=0
"RTN","XMJBM",34,0)
 . F  D  Q:XMNEXT!XMABORT
"RTN","XMJBM",35,0)
 . . W ! W:XMV("PREVU") !,XMPREVU
"RTN","XMJBM",36,0)
 . . W !,XMKN," Basket Message: ",XMKZ,"// "
"RTN","XMJBM",37,0)
 . . R XMY:DTIME I '$T S XMABORT=1 Q
"RTN","XMJBM",38,0)
 . . I XMY[U S XMABORT=1 Q
"RTN","XMJBM",39,0)
 . . I XMY="" S XMY=XMKZ D NUMBER Q
"RTN","XMJBM",40,0)
 . . I XMY?.N D NUMBER Q
"RTN","XMJBM",41,0)
 . . I $E(XMY)="?" D QUESTION Q
"RTN","XMJBM",42,0)
 . . S XMY=$$COMMAND^XMJDIR(.XMOPTION,XMY)
"RTN","XMJBM",43,0)
 . . I XMY=-1 D HELPSCR Q
"RTN","XMJBM",44,0)
 . . I $D(XMOPTION(XMY,"?")) D SHOWERR^XMJDIR(.XMOPTION,.XMY) Q
"RTN","XMJBM",45,0)
 . . D @XMY
"RTN","XMJBM",46,0)
 . . S:'$D(^XMB(3.7,XMDUZ,2,XMK,1,"C",+XMKZ)) XMNEXT=1
"RTN","XMJBM",47,0)
 I $D(XMORDER) S XMV("ORDER")=XMORDER
"RTN","XMJBM",48,0)
 Q
"RTN","XMJBM",49,0)
PREVU(XMDUZ,XMK,XMKN,XMKZ) ;
"RTN","XMJBM",50,0)
 Q:XMKZ="" ""
"RTN","XMJBM",51,0)
 N XMZ,XMZREC,XMSUBJ,XMFROM,XMLEN,XMSL,XMFL
"RTN","XMJBM",52,0)
 S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,""))
"RTN","XMJBM",53,0)
 I '$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITC^XMUT4A(XMDUZ,XMK,XMZ,XMKZ)
"RTN","XMJBM",54,0)
 S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMJBM",55,0)
 S XMSUBJ=$$SUBJ^XMXUTIL2(XMZREC)
"RTN","XMJBM",56,0)
 S XMFROM=$$NAME^XMXUTIL($P(XMZREC,U,2))
"RTN","XMJBM",57,0)
 S XMSL=$L(XMSUBJ)
"RTN","XMJBM",58,0)
 S XMFL=$L(XMFROM)
"RTN","XMJBM",59,0)
 S XMLEN=64
"RTN","XMJBM",60,0)
 I XMSL+XMFL>XMLEN D
"RTN","XMJBM",61,0)
 . I XMSL<36 S XMFROM=$E(XMFROM,1,XMLEN-XMSL) Q
"RTN","XMJBM",62,0)
 . I XMFL<26 S XMSUBJ=$E(XMSUBJ,1,XMLEN-XMFL) Q
"RTN","XMJBM",63,0)
 . S XMSL=XMSL-(XMSL+XMFL-XMLEN\2)
"RTN","XMJBM",64,0)
 . S XMSUBJ=$E(XMSUBJ,1,XMSL)
"RTN","XMJBM",65,0)
 . S XMFROM=$E(XMFROM,1,XMLEN-XMSL)
"RTN","XMJBM",66,0)
 Q "Subj: "_XMSUBJ_"   From: "_XMFROM
"RTN","XMJBM",67,0)
SETCMD(XMDUZ,XMK,XMOPTION) ;
"RTN","XMJBM",68,0)
 D OPTGRP^XMXSEC1(XMDUZ,XMK,.XMOPTION)
"RTN","XMJBM",69,0)
 I XMDUZ=.5,XMK>999 Q
"RTN","XMJBM",70,0)
 S XMOPTION("I")="Ignore this message"
"RTN","XMJBM",71,0)
 Q
"RTN","XMJBM",72,0)
NUMBER ;
"RTN","XMJBM",73,0)
 ; See ENTM^XMA03 to see how MM7.1 handles this
"RTN","XMJBM",74,0)
 I $L(XMY)>25 W *7,"?" Q
"RTN","XMJBM",75,0)
 I XMY<XMFIRST D  Q
"RTN","XMJBM",76,0)
 . S (XMKZ,DIR("B"))=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",""))
"RTN","XMJBM",77,0)
 . S:XMV("PREVU") XMPREVU=$$PREVU(XMDUZ,XMK,XMKN,XMKZ)
"RTN","XMJBM",78,0)
 . W *7,"?"
"RTN","XMJBM",79,0)
 I $D(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMY)) D  Q
"RTN","XMJBM",80,0)
 . S XMKZ=XMY
"RTN","XMJBM",81,0)
 . S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,""))
"RTN","XMJBM",82,0)
 . I '$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITC^XMUT4A(XMDUZ,XMK,XMZ,XMKZ)
"RTN","XMJBM",83,0)
 . D READMSG(XMDUZ,XMK,XMKN,XMZ)
"RTN","XMJBM",84,0)
 . S XMNEXT=1
"RTN","XMJBM",85,0)
 I XMFIRST'>XMY,XMY'>XMLAST D  Q
"RTN","XMJBM",86,0)
 . S (XMKZ,DIR("B"))=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMY),XMV("ORDER"))
"RTN","XMJBM",87,0)
 . S:XMV("PREVU") XMPREVU=$$PREVU(XMDUZ,XMK,XMKN,XMKZ)
"RTN","XMJBM",88,0)
 . W *7,"?"
"RTN","XMJBM",89,0)
 I $D(^XMB(3.9,XMY,0)) D NUMBERZ Q
"RTN","XMJBM",90,0)
 I XMY>XMLAST D  Q
"RTN","XMJBM",91,0)
 . S (XMKZ,DIR("B"))=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",""),-1)
"RTN","XMJBM",92,0)
 . S:XMV("PREVU") XMPREVU=$$PREVU(XMDUZ,XMK,XMKN,XMKZ)
"RTN","XMJBM",93,0)
 . W *7,"?"
"RTN","XMJBM",94,0)
 W *7,"?"
"RTN","XMJBM",95,0)
 Q
"RTN","XMJBM",96,0)
NUMBERZ ;
"RTN","XMJBM",97,0)
 I $D(^XMB(3.7,"M",XMY,XMDUZ)) D  Q
"RTN","XMJBM",98,0)
 . S XMZ=XMY
"RTN","XMJBM",99,0)
 . I '$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ)) D
"RTN","XMJBM",100,0)
 . . ; It's in another basket
"RTN","XMJBM",101,0)
 . . S XMK=$O(^XMB(3.7,"M",XMZ,XMDUZ,""))
"RTN","XMJBM",102,0)
 . . S XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1)
"RTN","XMJBM",103,0)
 . S XMKZ=$P($G(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)),U,2)
"RTN","XMJBM",104,0)
 . I 'XMKZ D ADDITM^XMUT4A(XMDUZ,XMK,XMZ,.XMKZ)
"RTN","XMJBM",105,0)
 . D READMSG(XMDUZ,XMK,XMKN,XMZ)
"RTN","XMJBM",106,0)
 . S XMNEXT=1
"RTN","XMJBM",107,0)
 . ; *** MM7.1 checks to see if XMK=.5 (WASTE).  If so, it moves it to the IN basket.  I disagree.
"RTN","XMJBM",108,0)
 I $D(^XMB(3.9,XMY,0)) D  Q
"RTN","XMJBM",109,0)
 . S XMZ=XMY
"RTN","XMJBM",110,0)
 . I $D(XMERR) K XMERR,^TMP("XMERR",$J)
"RTN","XMJBM",111,0)
 . I '$$ACCESS^XMXSEC(XMDUZ,XMZ,^XMB(3.9,XMZ,0)) D  Q
"RTN","XMJBM",112,0)
 . . W "?"
"RTN","XMJBM",113,0)
 . . D SHOW^XMJERR
"RTN","XMJBM",114,0)
 . D PUTMSG^XMXMSGS2(XMDUZ,XMK,XMKN,XMZ) ; User is a recipient, so save to user's basket
"RTN","XMJBM",115,0)
 . D READMSG(XMDUZ,XMK,XMKN,XMZ)
"RTN","XMJBM",116,0)
 . S XMNEXT=1
"RTN","XMJBM",117,0)
 Q
"RTN","XMJBM",118,0)
QUESTION ;
"RTN","XMJBM",119,0)
 I XMY="?" D LIST^XMJML(XMDUZ,XMK,XMKN,XMKZ,0) Q
"RTN","XMJBM",120,0)
 I XMY="??" D LIST^XMJML(XMDUZ,XMK,XMKN,XMKZ,1) Q
"RTN","XMJBM",121,0)
 I XMY="???" D HELPSCR Q
"RTN","XMJBM",122,0)
 I XMY?4."?"!("?HELP"[$$UP^XLFSTR(XMY)) D  Q
"RTN","XMJBM",123,0)
 . N XQH
"RTN","XMJBM",124,0)
 . S XQH="XM-U-BO-CLASSIC"
"RTN","XMJBM",125,0)
 . D EN^XQH
"RTN","XMJBM",126,0)
 I XMY?1"??".E D  Q
"RTN","XMJBM",127,0)
 . ; Search for messages whose subject starts with string
"RTN","XMJBM",128,0)
 . I $E(XMY,3,99)?.N,$D(^XMB(3.9,$E(XMY,3,999),0)) D  Q
"RTN","XMJBM",129,0)
 . . S XMY=$E(XMY,3,99)
"RTN","XMJBM",130,0)
 . . D NUMBERZ
"RTN","XMJBM",131,0)
 . D FIND^XMJMFA(XMDUZ,$E(XMY,3,99))
"RTN","XMJBM",132,0)
 I XMY?1"?".E D  Q
"RTN","XMJBM",133,0)
 . ; Search for messages whose subject contains string
"RTN","XMJBM",134,0)
 . N XMF
"RTN","XMJBM",135,0)
 . S XMF("BSKT")=XMK
"RTN","XMJBM",136,0)
 . S XMF("SUBJ")=$E(XMY,2,99)
"RTN","XMJBM",137,0)
 . D FIND1^XMJMFB(XMDUZ,.XMF)
"RTN","XMJBM",138,0)
 Q
"RTN","XMJBM",139,0)
HELPSCR ;
"RTN","XMJBM",140,0)
 N DIR
"RTN","XMJBM",141,0)
 I XMDUZ=.5,XMK>999
"RTN","XMJBM",142,0)
 E  D
"RTN","XMJBM",143,0)
 . W !!,"Press RETURN to read message "_XMKZ_".  Enter message number ("_XMFIRST_"-"_XMLAST_") to read"
"RTN","XMJBM",144,0)
 . W !,"a message in this basket.  Enter internal message number to read any"
"RTN","XMJBM",145,0)
 . W !,"message still on the system, which you ever sent or received.  Enter:"
"RTN","XMJBM",146,0)
 W !,"  ? or ??         Display a summary or detailed list of messages in this basket"
"RTN","XMJBM",147,0)
 W !,"  ???? or ?HELP   Display detailed help"
"RTN","XMJBM",148,0)
 W !,"  ?string         Search for messages in this basket whose subject"
"RTN","XMJBM",149,0)
 W !,"                  contains the specified string"
"RTN","XMJBM",150,0)
 W !,"  ??string        Search for messages you once sent or received"
"RTN","XMJBM",151,0)
 W !,"                  whose subject begins with the specified string"
"RTN","XMJBM",152,0)
 S XMCMD=""
"RTN","XMJBM",153,0)
 F  S XMCMD=$O(XMOPTION(XMCMD)) Q:XMCMD=""  D
"RTN","XMJBM",154,0)
 . Q:$D(XMOPTION(XMCMD,"?"))
"RTN","XMJBM",155,0)
 . W !,"  "_XMCMD_"              "_$S($L(XMCMD)=1:" ",1:"")_XMOPTION(XMCMD)
"RTN","XMJBM",156,0)
 Q
"RTN","XMJBM",157,0)
READMSG(XMDUZ,XMK,XMKN,XMZ) ;
"RTN","XMJBM",158,0)
 I '$D(^XMB(3.9,XMZ,0)) D ZAPIT(XMDUZ,XMK,XMZ) Q
"RTN","XMJBM",159,0)
 I XMDUZ'=DUZ,'$$SURRACC^XMXSEC(XMDUZ,"read",XMZ,$G(^XMB(3.9,XMZ,0))) D  Q
"RTN","XMJBM",160,0)
 . D SHOW^XMJERR
"RTN","XMJBM",161,0)
 . I $G(XMRDR)'="C" D WAIT^XMXUTIL
"RTN","XMJBM",162,0)
 N XMSECURE,XMPAKMAN,XMSECBAD ; Important 'new' - part of scramble and packman handling
"RTN","XMJBM",163,0)
 D DISPMSG^XMJMP(XMDUZ,XMK,XMKN,XMZ,.XMSECBAD) Q:$G(XMSECBAD)
"RTN","XMJBM",164,0)
 D READMSG^XMJMOI(0,XMDUZ,XMK,XMKN,XMZ)
"RTN","XMJBM",165,0)
 Q
"RTN","XMJBM",166,0)
ZAPIT(XMDUZ,XMK,XMZ) ;
"RTN","XMJBM",167,0)
 W !,*7,"This references a message which doesn't exist - deleting it."
"RTN","XMJBM",168,0)
 D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ)
"RTN","XMJBM",169,0)
 Q
"RTN","XMJBM",170,0)
C ; Change the name of the basket
"RTN","XMJBM",171,0)
 D NAMEBSKT^XMJBU(XMDUZ,XMK,.XMKN)
"RTN","XMJBM",172,0)
 Q
"RTN","XMJBM",173,0)
D ; Delete
"RTN","XMJBM",174,0)
 D DELETE^XMJMOR(XMDUZ,XMK)
"RTN","XMJBM",175,0)
 Q
"RTN","XMJBM",176,0)
F ; Forward
"RTN","XMJBM",177,0)
 D FORWARD^XMJMOR(XMDUZ,XMK)
"RTN","XMJBM",178,0)
 Q
"RTN","XMJBM",179,0)
FI ; Filter
"RTN","XMJBM",180,0)
 D FILTER^XMJMOR(XMDUZ,XMK)
"RTN","XMJBM",181,0)
 Q
"RTN","XMJBM",182,0)
H ; Headerless Print
"RTN","XMJBM",183,0)
 D PRINT^XMJMOR(XMDUZ,XMK,XMKN,0)
"RTN","XMJBM",184,0)
 Q
"RTN","XMJBM",185,0)
I ; Ignore this message
"RTN","XMJBM",186,0)
 S XMNEXT=1
"RTN","XMJBM",187,0)
 Q
"RTN","XMJBM",188,0)
L ; Later
"RTN","XMJBM",189,0)
LA ; Later
"RTN","XMJBM",190,0)
 D LATER^XMJMOR(XMDUZ,XMK)
"RTN","XMJBM",191,0)
 Q
"RTN","XMJBM",192,0)
LM ; List Messages (can't read)
"RTN","XMJBM",193,0)
 D LIST^XMJML(XMDUZ,XMK,XMKN,"",1)
"RTN","XMJBM",194,0)
 Q
"RTN","XMJBM",195,0)
LN ; List New Messages
"RTN","XMJBM",196,0)
 D LISTONE^XMJMLN(XMDUZ,XMK,XMKN,"N0")
"RTN","XMJBM",197,0)
 Q
"RTN","XMJBM",198,0)
LP ; List Priority Messages
"RTN","XMJBM",199,0)
 D LISTONE^XMJMLN(XMDUZ,XMK,XMKN,"N")
"RTN","XMJBM",200,0)
 Q
"RTN","XMJBM",201,0)
N ; List New Messages (can't read)
"RTN","XMJBM",202,0)
 D LISTNEW^XMJML(XMDUZ,XMK,XMKN)
"RTN","XMJBM",203,0)
 Q
"RTN","XMJBM",204,0)
P ; Print
"RTN","XMJBM",205,0)
 D PRINT^XMJMOR(XMDUZ,XMK,XMKN)
"RTN","XMJBM",206,0)
 Q
"RTN","XMJBM",207,0)
Q ; Query by subject, sender, and/or date
"RTN","XMJBM",208,0)
 D FINDBSKT^XMJMF(XMDUZ,XMK,XMKN)
"RTN","XMJBM",209,0)
 Q
"RTN","XMJBM",210,0)
R ; Resequence
"RTN","XMJBM",211,0)
 N XMMSG
"RTN","XMJBM",212,0)
 W !,"Resequencing ..."
"RTN","XMJBM",213,0)
 D RSEQBSKT^XMXBSKT(XMDUZ,XMK,.XMMSG)
"RTN","XMJBM",214,0)
 W !,XMMSG
"RTN","XMJBM",215,0)
 S XMKZ=""
"RTN","XMJBM",216,0)
 Q
"RTN","XMJBM",217,0)
S ; Save
"RTN","XMJBM",218,0)
 D SAVE^XMJMOR(XMDUZ,XMK)
"RTN","XMJBM",219,0)
 Q
"RTN","XMJBM",220,0)
T ; Terminate
"RTN","XMJBM",221,0)
 D TERM^XMJMOR(XMDUZ,XMK)
"RTN","XMJBM",222,0)
 Q
"RTN","XMJBM",223,0)
X ; Xmit Priority toggle (for Postmaster only)
"RTN","XMJBM",224,0)
 D XMTPRI^XMJMOR(XMDUZ,XMK)
"RTN","XMJBM",225,0)
 Q
"RTN","XMJBM1")
0^244^B9642488
"RTN","XMJBM1",1,0)
XMJBM1 ;ISC-SF/GMB-Manage Mail in Mailbox (cont'd) ;05/10/99  09:10
"RTN","XMJBM1",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJBM1",3,0)
INIT(XMDUZ,XMRDR,XMABORT) ;
"RTN","XMJBM1",4,0)
 D CHECK^XMVVITAE
"RTN","XMJBM1",5,0)
 I XMDUZ'=DUZ,'$$RPRIV^XMXSEC D  Q
"RTN","XMJBM1",6,0)
 . S XMABORT=1
"RTN","XMJBM1",7,0)
 . D SHOW^XMJERR
"RTN","XMJBM1",8,0)
 D RDR(.XMRDR,.XMABORT)
"RTN","XMJBM1",9,0)
 Q
"RTN","XMJBM1",10,0)
RDR(XMRDR,XMABORT) ;
"RTN","XMJBM1",11,0)
 S XMRDR=XMV("RDR DEF")
"RTN","XMJBM1",12,0)
 Q:XMV("RDR ASK")="N"
"RTN","XMJBM1",13,0)
 N DIR,DIRUT,X,Y,XMRDRTXT
"RTN","XMJBM1",14,0)
 S XMRDRTXT=$S(XMRDR="D":"Detailed Full Screen",XMRDR="S":"Summary Full Screen",1:"Classic")
"RTN","XMJBM1",15,0)
 S DIR("A")="Select message reader:  "
"RTN","XMJBM1",16,0)
 S DIR("B")=XMRDRTXT
"RTN","XMJBM1",17,0)
 S DIR(0)="SAMB^C:Classic;D:Detailed Full Screen;S:Summary Full Screen"
"RTN","XMJBM1",18,0)
 S DIR("??")="^D QRDR^XMJBM1"
"RTN","XMJBM1",19,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMJBM1",20,0)
 S XMRDR=Y
"RTN","XMJBM1",21,0)
 Q
"RTN","XMJBM1",22,0)
QRDR ;
"RTN","XMJBM1",23,0)
 W !,"The Classic reader is the one that has been around forever."
"RTN","XMJBM1",24,0)
 W !
"RTN","XMJBM1",25,0)
 W !,"The Full Screen reader has two flavors:"
"RTN","XMJBM1",26,0)
 W !,"Detailed Full Screen contains a detailed message list."
"RTN","XMJBM1",27,0)
 W !,"Summary Full Screen contains a summary message list."
"RTN","XMJBM1",28,0)
 W !
"RTN","XMJBM1",29,0)
 I $P($G(^XMB(3.7,DUZ,0)),U,16)="" D
"RTN","XMJBM1",30,0)
 . W !,"You may choose a default MESSAGE READER under"
"RTN","XMJBM1",31,0)
 . W !,"'Personal Preferences|User Options Edit'."
"RTN","XMJBM1",32,0)
 . W !,"Until you do, the Classic reader will be your default."
"RTN","XMJBM1",33,0)
 E  D
"RTN","XMJBM1",34,0)
 . W !,"Your default MESSAGE READER is the ",XMRDRTXT," reader."
"RTN","XMJBM1",35,0)
 . W !,"You may change your default MESSAGE READER under"
"RTN","XMJBM1",36,0)
 . W !,"'Personal Preferences|User Options Edit'."
"RTN","XMJBM1",37,0)
 W !
"RTN","XMJBM1",38,0)
 W !,"If you don't want to be asked this question again, and wish to use the "
"RTN","XMJBM1",39,0)
 W !,XMRDRTXT," reader exclusively, set the MESSAGE READER PROMPT to"
"RTN","XMJBM1",40,0)
 W !,"""No, don't ask"" under 'Personal Preferences|User Options Edit'."
"RTN","XMJBM1",41,0)
 Q
"RTN","XMJBM1",42,0)
ASKBSKT(XMDUZ,XMRDR,XMK,XMKN,XMABORT) ;
"RTN","XMJBM1",43,0)
 N XMKNEW,XMKNUM
"RTN","XMJBM1",44,0)
 F  D ASKBSKT^XMJBN(XMDUZ,0,.XMK,.XMKN,.XMABORT) Q:XMABORT  D  Q:XMKNUM
"RTN","XMJBM1",45,0)
 . S XMKNUM=+$P($G(^XMB(3.7,XMDUZ,2,XMK,1,0)),U,4)
"RTN","XMJBM1",46,0)
 . D:'XMKNUM NOMSGS(XMDUZ,XMK,XMKN)
"RTN","XMJBM1",47,0)
 Q:XMABORT
"RTN","XMJBM1",48,0)
 Q:'XMKNUM
"RTN","XMJBM1",49,0)
 Q:XMRDR'="C"
"RTN","XMJBM1",50,0)
 W !,"Last message number: ",$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",""),-1)
"RTN","XMJBM1",51,0)
 W "   Messages in basket: ",XMKNUM
"RTN","XMJBM1",52,0)
 S XMKNEW=$P(^XMB(3.7,XMDUZ,2,XMK,0),U,2)
"RTN","XMJBM1",53,0)
 W:XMKNEW " (",XMKNEW," new)"
"RTN","XMJBM1",54,0)
 W !,"Enter ??? for help."
"RTN","XMJBM1",55,0)
 Q
"RTN","XMJBM1",56,0)
NOMSGS(XMDUZ,XMK,XMKN) ;
"RTN","XMJBM1",57,0)
 W !,"No messages in basket."
"RTN","XMJBM1",58,0)
 Q:XMK<2
"RTN","XMJBM1",59,0)
 I XMDUZ'=DUZ,$G(XMV("PRIV"))'["R",$G(XMV("PRIV"))'["W" Q
"RTN","XMJBM1",60,0)
 W !
"RTN","XMJBM1",61,0)
 N DIR,DIRUT,X,Y
"RTN","XMJBM1",62,0)
 S DIR(0)="Y"
"RTN","XMJBM1",63,0)
 S DIR("A",1)="Since the '"_XMKN_"' basket is empty,"
"RTN","XMJBM1",64,0)
 S DIR("A")="do you want to delete it"
"RTN","XMJBM1",65,0)
 S DIR("B")="YES"
"RTN","XMJBM1",66,0)
 D ^DIR Q:'Y
"RTN","XMJBM1",67,0)
 D DELBSKT^XMXBSKT(XMDUZ,XMK)
"RTN","XMJBM1",68,0)
 W !,"Basket deleted."
"RTN","XMJBM1",69,0)
 Q
"RTN","XMJBN")
0^4^B40909752
"RTN","XMJBN",1,0)
XMJBN ;ISC-SF/GMB-Access new mail in mailbox ;06/29/99  15:26
"RTN","XMJBN",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJBN",3,0)
 ; Replaces ^XMA (ISC-WASH/THM/CAP)
"RTN","XMJBN",4,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMJBN",5,0)
 ; NEW   XMNEW - Read new messages
"RTN","XMJBN",6,0)
NEW ;
"RTN","XMJBN",7,0)
 ; XMNEW    Number of new messages
"RTN","XMJBN",8,0)
 ; XMKMULT  1=New msgs in multiple baskets; 0=new msgs in one basket
"RTN","XMJBN",9,0)
 ;
"RTN","XMJBN",10,0)
 N XMABORT,XMK,XMKN,XMNEW,XMKMULT,XMNEWS
"RTN","XMJBN",11,0)
 S XMABORT=0
"RTN","XMJBN",12,0)
 D INIT(XMDUZ,.XMK,.XMKN,.XMNEW,.XMKMULT,.XMABORT) Q:XMABORT
"RTN","XMJBN",13,0)
 S XMNEWS=1 ; Makes 'new'd msgs drop off list 'til next time
"RTN","XMJBN",14,0)
 I XMNEW=1 D  Q
"RTN","XMJBN",15,0)
 . N XMZ
"RTN","XMJBN",16,0)
 . S XMZ=$O(^XMB(3.7,XMDUZ,"N0",XMK,""))
"RTN","XMJBN",17,0)
 . I XMDUZ'=DUZ,'$$SURRACC^XMXSEC(XMDUZ,"read",XMZ,$G(XMB(3.9,XMZ,0))) D  Q
"RTN","XMJBN",18,0)
 . . D ZSHOW^XMJERR
"RTN","XMJBN",19,0)
 . . D WAIT^XMXUTIL
"RTN","XMJBN",20,0)
 . I '$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITN^XMUT4A(XMDUZ,"N0",XMK,XMZ)
"RTN","XMJBN",21,0)
 . D READNEW(XMDUZ,XMK,XMKN,XMZ)
"RTN","XMJBN",22,0)
 . D:$D(^TMP("XM",$J,"MAKENEW")) NEWAGAIN(XMDUZ)
"RTN","XMJBN",23,0)
 F  D  Q:'$D(^XMB(3.7,XMDUZ,"N0"))!XMABORT
"RTN","XMJBN",24,0)
 . N DIR,Y
"RTN","XMJBN",25,0)
 . S DIR("A")="Select New mail option: "
"RTN","XMJBN",26,0)
 . S DIR("B")="Read new mail by basket"
"RTN","XMJBN",27,0)
 . S DIR(0)="SAO^R:Read new mail by basket"
"RTN","XMJBN",28,0)
 . S DIR(0)=DIR(0)_";LB:List Baskets with new mail"
"RTN","XMJBN",29,0)
 . S DIR(0)=DIR(0)_";LN:List all new messages"
"RTN","XMJBN",30,0)
 . S DIR(0)=DIR(0)_";LP:List all priority messages"
"RTN","XMJBN",31,0)
 . S DIR(0)=DIR(0)_";P:Print all new messages"
"RTN","XMJBN",32,0)
 . S DIR(0)=DIR(0)_";S:Scan all new messages"
"RTN","XMJBN",33,0)
 . S DIR(0)=DIR(0)_";Q:Quit"
"RTN","XMJBN",34,0)
 . D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMJBN",35,0)
 . D @Y
"RTN","XMJBN",36,0)
 D:$D(^TMP("XM",$J,"MAKENEW")) NEWAGAIN(XMDUZ)
"RTN","XMJBN",37,0)
 Q
"RTN","XMJBN",38,0)
INIT(XMDUZ,XMK,XMKN,XMNEW,XMKMULT,XMABORT) ;
"RTN","XMJBN",39,0)
 D CHECK^XMVVITAE
"RTN","XMJBN",40,0)
 I XMDUZ'=DUZ,'$$RPRIV^XMXSEC D  Q
"RTN","XMJBN",41,0)
 . S XMABORT=1
"RTN","XMJBN",42,0)
 . D SHOW^XMJERR
"RTN","XMJBN",43,0)
 S XMK=$O(^XMB(3.7,XMDUZ,"N0",0))
"RTN","XMJBN",44,0)
 I XMK>0,XMK<1 D
"RTN","XMJBN",45,0)
 . D FIXIT(XMDUZ)
"RTN","XMJBN",46,0)
 . S XMK=$O(^XMB(3.7,XMDUZ,"N0",0))
"RTN","XMJBN",47,0)
 I XMK="" D  Q
"RTN","XMJBN",48,0)
 . S XMABORT=1
"RTN","XMJBN",49,0)
 . S $P(^XMB(3.7,XMDUZ,0),U,6)=""  ; Just to make sure we're in synch.
"RTN","XMJBN",50,0)
 . W !,"No new messages or responses."
"RTN","XMJBN",51,0)
 S XMNEW=$P(^XMB(3.7,XMDUZ,0),U,6)
"RTN","XMJBN",52,0)
 I $O(^XMB(3.7,XMDUZ,"N0",XMK)) D
"RTN","XMJBN",53,0)
 . S XMKMULT=1
"RTN","XMJBN",54,0)
 . W !!,"You have new mail in more than one basket.",!
"RTN","XMJBN",55,0)
 E  S XMKMULT=0
"RTN","XMJBN",56,0)
 S XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U)
"RTN","XMJBN",57,0)
 Q
"RTN","XMJBN",58,0)
FIXIT(XMDUZ) ; In case mail in the waste basket is new.
"RTN","XMJBN",59,0)
 N XMK,XMZ
"RTN","XMJBN",60,0)
 L +^XMB(3.7,XMDUZ)
"RTN","XMJBN",61,0)
 S (XMK,XMZ)=""
"RTN","XMJBN",62,0)
 F  S XMK=$O(^XMB(3.7,XMDUZ,"N0",XMK)) Q:XMK'<1!'XMK  D
"RTN","XMJBN",63,0)
 . F  S XMZ=$O(^XMB(3.7,XMDUZ,"N0",XMK,XMZ)) Q:'XMZ  D
"RTN","XMJBN",64,0)
 . . D:$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) NONEW^XMXUTIL(XMDUZ,XMK,XMZ)
"RTN","XMJBN",65,0)
 . . K:$D(^XMB(3.7,XMDUZ,"N0",XMK,XMZ)) ^XMB(3.7,XMDUZ,"N0",XMK,XMZ)
"RTN","XMJBN",66,0)
 . . K:$D(^XMB(3.7,XMDUZ,"N",XMK,XMZ)) ^XMB(3.7,XMDUZ,"N",XMK,XMZ)
"RTN","XMJBN",67,0)
 L -^XMB(3.7,XMDUZ)
"RTN","XMJBN",68,0)
 Q
"RTN","XMJBN",69,0)
READNEW(XMDUZ,XMK,XMKN,XMZ,XMABORT) ;
"RTN","XMJBN",70,0)
 N XMSECURE,XMPAKMAN,XMSECBAD ; Important 'new' - part of scramble and packman handling
"RTN","XMJBN",71,0)
 I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMJBN",72,0)
 D DISPMSG^XMJMP(XMDUZ,XMK,XMKN,XMZ,.XMSECBAD) Q:$G(XMSECBAD)
"RTN","XMJBN",73,0)
 D READMSG^XMJMOI($G(XMNEWS),XMDUZ,XMK,XMKN,XMZ,.XMABORT)
"RTN","XMJBN",74,0)
 Q
"RTN","XMJBN",75,0)
Q ; Quit
"RTN","XMJBN",76,0)
 S XMABORT=1
"RTN","XMJBN",77,0)
 Q
"RTN","XMJBN",78,0)
R ; Read new mail by basket, priority first
"RTN","XMJBN",79,0)
 N XMTYPE,XMFIRST,XMK,XMKN,XMZ,XMIA
"RTN","XMJBN",80,0)
 S XMABORT=0 ; (required when printing new messages)
"RTN","XMJBN",81,0)
 S XMIA='$D(ZTQUEUED)
"RTN","XMJBN",82,0)
 S XMFIRST=1 ; used only when printing new mail (XMNEWPRT=1)
"RTN","XMJBN",83,0)
 S XMTYPE("N")="PRIORITY",XMTYPE("N0")="NEW"
"RTN","XMJBN",84,0)
 S XMKN=""
"RTN","XMJBN",85,0)
 F  D  Q:'$D(^XMB(3.7,XMDUZ,"N0"))!XMABORT
"RTN","XMJBN",86,0)
 . S XMTYPE=$S($D(^XMB(3.7,XMDUZ,"N")):"N",1:"N0")
"RTN","XMJBN",87,0)
 . I 'XMKMULT D
"RTN","XMJBN",88,0)
 . . S XMK=$O(^XMB(3.7,XMDUZ,XMTYPE,0))
"RTN","XMJBN",89,0)
 . . S XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U)
"RTN","XMJBN",90,0)
 . E  D  Q:XMABORT
"RTN","XMJBN",91,0)
 . . D NXTBSKT(XMDUZ,XMTYPE,.XMKN,.XMK)
"RTN","XMJBN",92,0)
 . . Q:$G(XMSCAN)
"RTN","XMJBN",93,0)
 . . D ASKBSKT(XMDUZ,1,.XMK,.XMKN,.XMABORT) Q:XMABORT
"RTN","XMJBN",94,0)
 . . I XMTYPE="N",'$D(^XMB(3.7,XMDUZ,XMTYPE,XMK)) S XMTYPE="N0"
"RTN","XMJBN",95,0)
 . S XMZ=""
"RTN","XMJBN",96,0)
 . F  S XMZ=$O(^XMB(3.7,XMDUZ,XMTYPE,XMK,XMZ)) Q:XMZ=""  D  Q:XMABORT
"RTN","XMJBN",97,0)
 . . I '$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITN^XMUT4A(XMDUZ,XMTYPE,XMK,XMZ)
"RTN","XMJBN",98,0)
 . . I $G(XMNEWPRT) D PRTMULT^XMJMP(XMDUZ,XMK,XMKN,XMZ,0,1,.XMFIRST,"",.XMABORT) Q
"RTN","XMJBN",99,0)
 . . I XMDUZ'=DUZ,'$$SURRACC^XMXSEC(XMDUZ,"read",XMZ,$G(XMB(3.9,XMZ,0))) D  Q
"RTN","XMJBN",100,0)
 . . . D ZSHOW^XMJERR
"RTN","XMJBN",101,0)
 . . . D WAIT^XMXUTIL
"RTN","XMJBN",102,0)
 . . . D NONEW^XMXUTIL(XMDUZ,XMK,XMZ,1)
"RTN","XMJBN",103,0)
 . . . S ^TMP("XM",$J,"MAKENEW",XMZ)=""
"RTN","XMJBN",104,0)
 . . D READNEW(XMDUZ,XMK,XMKN,XMZ,.XMABORT)
"RTN","XMJBN",105,0)
 . Q:XMABORT
"RTN","XMJBN",106,0)
 . S:$D(^XMB(3.7,XMDUZ,"N0")) XMKMULT=1
"RTN","XMJBN",107,0)
 . I XMKMULT,'$G(XMSCAN) W !!,"Done with ",XMTYPE(XMTYPE)," mail in your '",XMKN,"' Basket.",!!
"RTN","XMJBN",108,0)
 Q
"RTN","XMJBN",109,0)
NXTBSKT(XMDUZ,XMTYPE,XMKN,XMK) ;
"RTN","XMJBN",110,0)
 ;I '$D(^TMP("XM",$J,XMTYPE)) D NXTINIT(XMDUZ)
"RTN","XMJBN",111,0)
 D NXTINIT(XMDUZ,XMTYPE)
"RTN","XMJBN",112,0)
 F  D  Q:XMKN'=""
"RTN","XMJBN",113,0)
 . I XMKN="",$D(^TMP("XM",$J,XMTYPE,"IN")) S XMKN="IN" Q
"RTN","XMJBN",114,0)
 . I XMKN="IN" S XMKN=""
"RTN","XMJBN",115,0)
 . S XMKN=$O(^TMP("XM",$J,XMTYPE,XMKN))
"RTN","XMJBN",116,0)
 . I XMKN="IN" S XMKN=$O(^TMP("XM",$J,XMTYPE,XMKN))
"RTN","XMJBN",117,0)
 S XMK=^TMP("XM",$J,XMTYPE,XMKN)
"RTN","XMJBN",118,0)
 K ^TMP("XM",$J,XMTYPE)
"RTN","XMJBN",119,0)
 Q
"RTN","XMJBN",120,0)
NXTINIT(XMDUZ,XMTYPE) ;
"RTN","XMJBN",121,0)
 N XMK,XMKN
"RTN","XMJBN",122,0)
 K ^TMP("XM",$J,XMTYPE)
"RTN","XMJBN",123,0)
 I $D(^XMB(3.7,XMDUZ,XMTYPE,0)) K ^XMB(3.7,XMDUZ,XMTYPE,0) ; should not be needed, but some package is setting this bogus node, and we've got to kill it.
"RTN","XMJBN",124,0)
 S XMK=0
"RTN","XMJBN",125,0)
 F  S XMK=$O(^XMB(3.7,XMDUZ,XMTYPE,XMK)) Q:'XMK  D
"RTN","XMJBN",126,0)
 . S XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U)
"RTN","XMJBN",127,0)
 . S ^TMP("XM",$J,XMTYPE,XMKN)=XMK
"RTN","XMJBN",128,0)
 Q
"RTN","XMJBN",129,0)
ASKBSKT(XMDUZ,XMNEWMSG,XMK,XMKN,XMABORT) ;
"RTN","XMJBN",130,0)
 ; XMNEWMSG 1=Read new mail; 0=Read any mail
"RTN","XMJBN",131,0)
 N XMDIC,XMPROMPT
"RTN","XMJBN",132,0)
 S XMDIC("W")="N XMKNEW,XMKMSGS S XMKNEW=$P(^(0),U,2),XMKMSGS=+$P($G(^(1,0)),U,4) W ""  (""_XMKMSGS_"" message""_$S(XMKMSGS=1:"""",1:""s""),$S('XMKNEW:"")"",1:"", ""_XMKNEW_"" new)"")"
"RTN","XMJBN",133,0)
 I XMNEWMSG D
"RTN","XMJBN",134,0)
 . S XMPROMPT="Read NEW mail in MAIL BASKET: "
"RTN","XMJBN",135,0)
 . S XMDIC("S")="I $P(^(0),U,2)"
"RTN","XMJBN",136,0)
 . S XMDIC("B")=$P(^XMB(3.7,XMDUZ,2,XMK,0),U)
"RTN","XMJBN",137,0)
 E  S XMPROMPT="Read mail in MAIL BASKET: "
"RTN","XMJBN",138,0)
 D SELBSKT^XMJBU(XMDUZ,XMPROMPT,"",.XMDIC,.XMK,.XMKN)
"RTN","XMJBN",139,0)
 I XMK=U S XMABORT=1
"RTN","XMJBN",140,0)
 Q
"RTN","XMJBN",141,0)
S ; Scan all new messages
"RTN","XMJBN",142,0)
 N XMSCAN
"RTN","XMJBN",143,0)
 S XMSCAN=1
"RTN","XMJBN",144,0)
 D R
"RTN","XMJBN",145,0)
 Q
"RTN","XMJBN",146,0)
LB ; List Baskets with new mail (Replaces NEW^XMA0A)
"RTN","XMJBN",147,0)
 N DIC,D,DZ
"RTN","XMJBN",148,0)
 S DIC="^XMB(3.7,"_XMDUZ_",2,"
"RTN","XMJBN",149,0)
 S DIC(0)="AEQ",D="B",DZ="??"
"RTN","XMJBN",150,0)
 S DIC("S")="I $P(^(0),U,2)"
"RTN","XMJBN",151,0)
 S DIC("W")="W ""  (""_$P(^(0),U,2),"" New)"""
"RTN","XMJBN",152,0)
 D DQ^DICQ
"RTN","XMJBN",153,0)
 Q
"RTN","XMJBN",154,0)
LN ; List all new messages (Replaces LIST^XMA0A)
"RTN","XMJBN",155,0)
 D LISTALL^XMJMLN(XMDUZ,"N0")
"RTN","XMJBN",156,0)
 Q
"RTN","XMJBN",157,0)
LP ; List all priority messages (Replaces PRIO^XMA0A)
"RTN","XMJBN",158,0)
 D LISTALL^XMJMLN(XMDUZ,"N")
"RTN","XMJBN",159,0)
 Q
"RTN","XMJBN",160,0)
P ; Print all new messages
"RTN","XMJBN",161,0)
 ; Replaces PRINT^XMA0A
"RTN","XMJBN",162,0)
 N XMSCAN,XMNEWPRT,XMSAVE,I
"RTN","XMJBN",163,0)
 S XMSCAN=1,XMNEWPRT=1
"RTN","XMJBN",164,0)
 F I="XMV(","DUZ","XMDUZ","XMSCAN","XMNEWPRT","XMKMULT" S XMSAVE(I)=""
"RTN","XMJBN",165,0)
 D EN^XUTMDEVQ("R^XMJBN","MailMan Print",.XMSAVE)
"RTN","XMJBN",166,0)
 Q
"RTN","XMJBN",167,0)
NEWAGAIN(XMDUZ) ; "new" messages which the user wanted to "new".
"RTN","XMJBN",168,0)
 N XMZ,XMK
"RTN","XMJBN",169,0)
 L +^XMB(3.7,XMDUZ)
"RTN","XMJBN",170,0)
 S XMZ=""
"RTN","XMJBN",171,0)
 F  S XMZ=$O(^TMP("XM",$J,"MAKENEW",XMZ)) Q:XMZ=""  D
"RTN","XMJBN",172,0)
 . S XMK=$O(^XMB(3.7,"M",XMZ,XMDUZ,0)) Q:'XMK
"RTN","XMJBN",173,0)
 . Q:$D(^XMB(3.7,XMDUZ,"N0",XMK,XMZ))
"RTN","XMJBN",174,0)
 . D MAKENEW^XMXUTIL(XMDUZ,XMK,XMZ)
"RTN","XMJBN",175,0)
 L -^XMB(3.7,XMDUZ)
"RTN","XMJBN",176,0)
 K ^TMP("XM",$J,"MAKENEW")
"RTN","XMJBN",177,0)
 Q
"RTN","XMJBU")
0^5^B4138657
"RTN","XMJBU",1,0)
XMJBU ;ISC-SF/GMB-Basket utilities ;04/14/99  09:25
"RTN","XMJBU",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJBU",3,0)
 ; (ISC-WASH/CAP/THM)
"RTN","XMJBU",4,0)
SELBSKT(XMDUZ,XMPROMPT,XMLAYGO,XMDIC,XMK,XMKN) ; Select a basket (Replaces S^XMA1B)
"RTN","XMJBU",5,0)
 ; XMPROMPT (in) Verbage for prompt
"RTN","XMJBU",6,0)
 ; XMLAYGO  (in) "L" - the user may create a new basket
"RTN","XMJBU",7,0)
 ;               ""  - the user may not create a new basket
"RTN","XMJBU",8,0)
 ; XMK      (out) basket number (=^ if user up-arrows out)
"RTN","XMJBU",9,0)
 ; XMKN     (out) basket name
"RTN","XMJBU",10,0)
 N DIC,DINUM,DA,Y,X
"RTN","XMJBU",11,0)
 ; If Postmaster may create a new basket, make sure there's room.
"RTN","XMJBU",12,0)
 ; Baskets numbered above 999 are reserved for message queues.
"RTN","XMJBU",13,0)
 I XMDUZ=.5 D
"RTN","XMJBU",14,0)
 . I XMLAYGO["L" D
"RTN","XMJBU",15,0)
 . . F DINUM=2:1:1000 Q:'$D(^XMB(3.7,XMDUZ,2,DINUM))
"RTN","XMJBU",16,0)
 . . I DINUM=1000 S XMLAYGO=$TR(XMLAYGO,"L")
"RTN","XMJBU",17,0)
 E  D
"RTN","XMJBU",18,0)
 . I XMLAYGO["L" F DINUM=2:1 Q:'$D(^XMB(3.7,XMDUZ,2,DINUM))
"RTN","XMJBU",19,0)
 ; Postmaster may not save a queued msg to his own basket. ***
"RTN","XMJBU",20,0)
 S DIC="^XMB(3.7,"_XMDUZ_",2,"
"RTN","XMJBU",21,0)
 S DA(1)=XMDUZ
"RTN","XMJBU",22,0)
 S DIC(0)="AEQ"_XMLAYGO
"RTN","XMJBU",23,0)
 S DIC("A")=XMPROMPT
"RTN","XMJBU",24,0)
 ; XMDIC("B")="@" means don't give a default
"RTN","XMJBU",25,0)
 I $G(XMDIC("B"))'="@" D
"RTN","XMJBU",26,0)
 . I $D(XMDIC("B")) S DIC("B")=XMDIC("B") Q
"RTN","XMJBU",27,0)
 . I $$BMSGCT^XMXUTIL(XMDUZ,1) S DIC("B")="IN"
"RTN","XMJBU",28,0)
 S:$D(XMDIC("S")) DIC("S")=XMDIC("S")
"RTN","XMJBU",29,0)
 S:$D(XMDIC("W")) DIC("W")=XMDIC("W")
"RTN","XMJBU",30,0)
 D ^DIC I Y=-1 S XMK=U Q
"RTN","XMJBU",31,0)
 S XMK=$P(Y,U,1)
"RTN","XMJBU",32,0)
 S XMKN=$P(Y,U,2)
"RTN","XMJBU",33,0)
 Q
"RTN","XMJBU",34,0)
CHKXMKN(X) ; Input transform for file 3.7 (3.701,.01 BASKET)
"RTN","XMJBU",35,0)
 I X=+X,$D(^XMB(3.7,$G(XMDUZ,DUZ),2,X)) S X="`"_X Q
"RTN","XMJBU",36,0)
 K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<3) X
"RTN","XMJBU",37,0)
 Q
"RTN","XMJBU",38,0)
NAMEBSKT(XMDUZ,XMK,XMKN) ; Rename an existing basket (Replaces REN^XMA11)
"RTN","XMJBU",39,0)
 ; XMK      (in) basket number
"RTN","XMJBU",40,0)
 ; XMKN     (in/out) basket name
"RTN","XMJBU",41,0)
 N DIR,X,XMFDA,XMKX
"RTN","XMJBU",42,0)
 I XMK'>1!(XMDUZ=.5&(XMK>999)) D  Q
"RTN","XMJBU",43,0)
 . W !,"The name of this basket may not be changed."
"RTN","XMJBU",44,0)
 ; *** I would rather use a ^DIE call, if I were sure that the user
"RTN","XMJBU",45,0)
 ; *** could not delete the basket or create a duplicate basket name.
"RTN","XMJBU",46,0)
 S DIR("A")="Enter a new basket name"
"RTN","XMJBU",47,0)
 S DIR("B")=XMKN
"RTN","XMJBU",48,0)
 S DIR(0)="3.701,.01"
"RTN","XMJBU",49,0)
 F  D ^DIR Q:$D(DIRUT)  D  Q:$D(X)
"RTN","XMJBU",50,0)
 . I X=XMKN D  Q
"RTN","XMJBU",51,0)
 . . W !,*7,"That's the same name."
"RTN","XMJBU",52,0)
 . . K X
"RTN","XMJBU",53,0)
 . S XMKX=$$FIND1^DIC(3.701,","_XMDUZ_",","X",X)
"RTN","XMJBU",54,0)
 . I XMKX,XMKX'=XMK D  Q
"RTN","XMJBU",55,0)
 . . W !,*7,"You already have a basket by this name."
"RTN","XMJBU",56,0)
 . . K X
"RTN","XMJBU",57,0)
 . S XMKN=X
"RTN","XMJBU",58,0)
 . S XMFDA(3.701,XMK_","_XMDUZ_",",.01)=XMKN
"RTN","XMJBU",59,0)
 . D FILE^DIE("","XMFDA")
"RTN","XMJBU",60,0)
 Q
"RTN","XMJDIR")
0^245^B5222802
"RTN","XMJDIR",1,0)
XMJDIR ;ISC-SF/GMB- MailMan's DIR ;06/23/99  07:05
"RTN","XMJDIR",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJDIR",3,0)
XMDIR(XMDIR,XMOPT,XMY,XMABORT) ;
"RTN","XMJDIR",4,0)
 N XMX
"RTN","XMJDIR",5,0)
 K XMY
"RTN","XMJDIR",6,0)
 F  D  Q:$D(XMY)!XMABORT
"RTN","XMJDIR",7,0)
 . W !!,XMDIR("A"),XMDIR("B"),"// "
"RTN","XMJDIR",8,0)
 . R XMX:DTIME I '$T S XMABORT=1 Q
"RTN","XMJDIR",9,0)
 . I XMX[U S XMABORT=1 Q
"RTN","XMJDIR",10,0)
 . I XMX="" S XMY=$E(XMDIR("B")) Q
"RTN","XMJDIR",11,0)
 . I XMX="?" D HELPSCR(.XMOPT) Q
"RTN","XMJDIR",12,0)
 . I $E(XMX)="?" D  Q
"RTN","XMJDIR",13,0)
 . . N XQH
"RTN","XMJDIR",14,0)
 . . S XQH="XM-U-MO-READ"
"RTN","XMJDIR",15,0)
 . . D EN^XQH
"RTN","XMJDIR",16,0)
 . I $D(XMDIR("PRE")) X XMDIR("PRE")
"RTN","XMJDIR",17,0)
 . S XMY=$$COMMAND(.XMOPT,XMX)
"RTN","XMJDIR",18,0)
 . I $D(XMOPT(XMY)),'$D(XMOPT(XMY,"?")) Q
"RTN","XMJDIR",19,0)
 . I XMY=-1 D
"RTN","XMJDIR",20,0)
 . . W *7 D HELPSCR(.XMOPT)
"RTN","XMJDIR",21,0)
 . E  D SHOWERR(.XMOPT,XMY)
"RTN","XMJDIR",22,0)
 . K XMY
"RTN","XMJDIR",23,0)
 Q
"RTN","XMJDIR",24,0)
SHOWERR(XMOPT,XMY) ; Show error message
"RTN","XMJDIR",25,0)
 W *7,!
"RTN","XMJDIR",26,0)
 I $D(XMOPT(XMY,"?",1)) D
"RTN","XMJDIR",27,0)
 . N I
"RTN","XMJDIR",28,0)
 . S I=0
"RTN","XMJDIR",29,0)
 . F  S I=$O(XMOPT(XMY,"?",I)) Q:'I  W !,XMOPT(XMY,"?",I)
"RTN","XMJDIR",30,0)
 W !,XMOPT(XMY,"?")
"RTN","XMJDIR",31,0)
 Q
"RTN","XMJDIR",32,0)
COMMAND(XMOPT,XMY) ;
"RTN","XMJDIR",33,0)
 S XMY=$$UP^XLFSTR(XMY)
"RTN","XMJDIR",34,0)
 I XMY?.E1C.E Q -1
"RTN","XMJDIR",35,0)
 I $L(XMY)>64 Q -1
"RTN","XMJDIR",36,0)
 I $D(XMOPT(XMY)) Q XMY
"RTN","XMJDIR",37,0)
 I '$D(XMOPT($E(XMY))) Q -1
"RTN","XMJDIR",38,0)
 N XMCMD,XMLEN
"RTN","XMJDIR",39,0)
 S XMLEN=$L(XMY)
"RTN","XMJDIR",40,0)
 S XMCMD=$CHAR($A($E(XMY))-1)_"~"
"RTN","XMJDIR",41,0)
 F  S XMCMD=$O(XMOPT(XMCMD)) Q:XMCMD=""  Q:$$UP^XLFSTR($E(XMOPT(XMCMD),1,XMLEN))=XMY!($E(XMCMD)'=$E(XMY))
"RTN","XMJDIR",42,0)
 I $E(XMCMD)=$E(XMY) Q $P(XMCMD," ")  ; for Q xxx
"RTN","XMJDIR",43,0)
 Q -1
"RTN","XMJDIR",44,0)
HELPSCR(XMOPT) ;
"RTN","XMJDIR",45,0)
 N XMCNT,XMCMD,XMROWS,I,XMHELP
"RTN","XMJDIR",46,0)
 W !!,"Enter a code from the list.",!
"RTN","XMJDIR",47,0)
 S XMCNT=0,XMCMD=""
"RTN","XMJDIR",48,0)
 F  S XMCMD=$O(XMOPT(XMCMD)) Q:XMCMD=""  S:'$D(XMOPT(XMCMD,"?")) XMCNT=XMCNT+1
"RTN","XMJDIR",49,0)
 S XMROWS=XMCNT+1\2
"RTN","XMJDIR",50,0)
 S I=0
"RTN","XMJDIR",51,0)
 F  D  Q:I=XMROWS
"RTN","XMJDIR",52,0)
 . S XMCMD=$O(XMOPT(XMCMD))
"RTN","XMJDIR",53,0)
 . Q:$D(XMOPT(XMCMD,"?"))
"RTN","XMJDIR",54,0)
 . S I=I+1
"RTN","XMJDIR",55,0)
 . S XMHELP(I)=$E(XMCMD_"      ",1,7)_XMOPT(XMCMD)
"RTN","XMJDIR",56,0)
 S I=0
"RTN","XMJDIR",57,0)
 F  S XMCMD=$O(XMOPT(XMCMD)) Q:XMCMD=""  D
"RTN","XMJDIR",58,0)
 . Q:$D(XMOPT(XMCMD,"?"))
"RTN","XMJDIR",59,0)
 . S I=I+1
"RTN","XMJDIR",60,0)
 . W !,$E(XMHELP(I)_"                                   ",1,35)_"   "_$E(XMCMD_"      ",1,7)_XMOPT(XMCMD)
"RTN","XMJDIR",61,0)
 S I=I+1
"RTN","XMJDIR",62,0)
 W:$D(XMHELP(I)) !,XMHELP(I)
"RTN","XMJDIR",63,0)
 Q
"RTN","XMJERR")
0^226^B712835
"RTN","XMJERR",1,0)
XMJERR ;ISC-SF/GMB- Error handling ;07/09/98  13:30
"RTN","XMJERR",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJERR",3,0)
ZSHOW ;
"RTN","XMJERR",4,0)
 N I,J,XMZ
"RTN","XMJERR",5,0)
 F I=1:1:XMERR D
"RTN","XMJERR",6,0)
 . W !
"RTN","XMJERR",7,0)
 . S XMZ=$G(^TMP("XMERR",$J,I,"XMZ"))
"RTN","XMJERR",8,0)
 . W:XMZ !,*7,"Message [",XMZ,"] Subject: ",$P($G(^XMB(3.9,XMZ,0)),U)
"RTN","XMJERR",9,0)
 . S J=0
"RTN","XMJERR",10,0)
 . F  S J=$O(^TMP("XMERR",$J,I,"TEXT",J)) Q:'J  W !,^(J)
"RTN","XMJERR",11,0)
 W !
"RTN","XMJERR",12,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMJERR",13,0)
 Q
"RTN","XMJERR",14,0)
SHOW ;
"RTN","XMJERR",15,0)
 N I,J,XMZ
"RTN","XMJERR",16,0)
 W *7
"RTN","XMJERR",17,0)
 F I=1:1:XMERR D
"RTN","XMJERR",18,0)
 . S J=0
"RTN","XMJERR",19,0)
 . F  S J=$O(^TMP("XMERR",$J,I,"TEXT",J)) Q:'J  W !,^(J)
"RTN","XMJERR",20,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMJERR",21,0)
 Q
"RTN","XMJMA")
0^6^B5823257
"RTN","XMJMA",1,0)
XMJMA ;ISC-SF/GMB-Interactive Answer ;04/09/99  08:49
"RTN","XMJMA",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMA",3,0)
 ; Replaces ^XMA11A,^XMA11B,SH^XMA1B,^XMA2,^XMA20 (ISC-WASH/CAP/THM)
"RTN","XMJMA",4,0)
ANSWER(XMDUZ,XMZO,XMZOSUBJ,XMZOFROM) ;
"RTN","XMJMA",5,0)
 N XMABORT,XMZ,XMINSTR,XMSUBJ
"RTN","XMJMA",6,0)
 S XMABORT=0
"RTN","XMJMA",7,0)
 D INIT(XMDUZ,XMZO,.XMINSTR,.XMABORT) Q:XMABORT
"RTN","XMJMA",8,0)
 S XMSUBJ="Re: "_XMZOSUBJ
"RTN","XMJMA",9,0)
 D SUBJ^XMJMS(.XMSUBJ,.XMABORT) Q:XMABORT
"RTN","XMJMA",10,0)
 D CRE8XMZ^XMXSEND(XMSUBJ,.XMZ,1) I XMZ<1 S XMABORT=1 Q
"RTN","XMJMA",11,0)
 D EDITON^XMJMS(XMDUZ,XMZ)
"RTN","XMJMA",12,0)
 D PROCESS(XMDUZ,XMZO,XMZOSUBJ,XMZOFROM,XMZ,XMSUBJ,.XMINSTR,.XMABORT)
"RTN","XMJMA",13,0)
 D CLEANUP^XMXADDR
"RTN","XMJMA",14,0)
 D:XMABORT=DTIME HALT^XMJMS("answering")
"RTN","XMJMA",15,0)
 D EDITOFF^XMJMS(XMDUZ)
"RTN","XMJMA",16,0)
 D:XMABORT KILLMSG^XMXUTIL(XMZ)
"RTN","XMJMA",17,0)
 Q
"RTN","XMJMA",18,0)
INIT(XMDUZ,XMZO,XMINSTR,XMABORT) ;
"RTN","XMJMA",19,0)
 D INIT^XMJMS(XMDUZ,.XMABORT) Q:XMABORT
"RTN","XMJMA",20,0)
 Q:$$COPYAMT^XMXSEC1(XMZO,0)
"RTN","XMJMA",21,0)
 S XMABORT=1
"RTN","XMJMA",22,0)
 D SHOW^XMJERR
"RTN","XMJMA",23,0)
 W !,"This message has too many lines to 'Answer'."
"RTN","XMJMA",24,0)
 W !,"Use 'Write' or 'Reply', instead."
"RTN","XMJMA",25,0)
 Q
"RTN","XMJMA",26,0)
PROCESS(XMDUZ,XMZO,XMZOSUBJ,XMZOFROM,XMZ,XMSUBJ,XMINSTR,XMABORT) ;
"RTN","XMJMA",27,0)
 N XMRESTR
"RTN","XMJMA",28,0)
 W !,"Copying original message and network signature..."
"RTN","XMJMA",29,0)
 D COPY^XMXANSER(XMZO,XMZOSUBJ,XMZOFROM,XMZ)
"RTN","XMJMA",30,0)
 D NETSIG^XMXANSER(XMZ)
"RTN","XMJMA",31,0)
 D BODY^XMJMS(XMDUZ,XMZ,XMSUBJ,.XMRESTR,.XMABORT) Q:XMABORT
"RTN","XMJMA",32,0)
 I XMZOFROM["@" D  Q:XMABORT
"RTN","XMJMA",33,0)
 . D REPLYTO^XMJMR(XMZO,.XMZOFROM,.XMABORT) Q:XMABORT
"RTN","XMJMA",34,0)
 . S XMRESTR("FLAGS")="O" ; Match on exact domain name, if possible
"RTN","XMJMA",35,0)
 . W !,"Addressing answer to: ",XMZOFROM
"RTN","XMJMA",36,0)
 E  D
"RTN","XMJMA",37,0)
 . W !,"Addressing answer to sender:"
"RTN","XMJMA",38,0)
 D INIT^XMXADDR
"RTN","XMJMA",39,0)
 D ADDR^XMXADDR(XMDUZ,XMZOFROM,.XMINSTR,.XMRESTR)
"RTN","XMJMA",40,0)
 I '$D(^TMP("XMY",$J)) W !,"Failed in addressing answer to: ",$S(+XMZOFROM=XMZOFROM:$$NAME^XMXUTIL(XMZOFROM),1:XMZOFROM)
"RTN","XMJMA",41,0)
 K XMRESTR("FLAGS")
"RTN","XMJMA",42,0)
 D TOWHOM^XMJMT(XMDUZ,"Send",.XMINSTR,.XMRESTR,.XMABORT) Q:XMABORT
"RTN","XMJMA",43,0)
 D SENDMSG^XMJMSO(XMDUZ,XMZ,XMSUBJ,.XMINSTR,.XMRESTR,.XMABORT) Q:XMABORT
"RTN","XMJMA",44,0)
 Q
"RTN","XMJMBULL")
0^7^B3007779
"RTN","XMJMBULL",1,0)
XMJMBULL ;ISC-SF/GMB-Manual Bulletin ;06/30/98  06:31
"RTN","XMJMBULL",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMBULL",3,0)
 ; Replaces BULL^XMB (ISC-WASH/THM/RWF/CAP)
"RTN","XMJMBULL",4,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMJMBULL",5,0)
 ; BULLETIN  XMPOST
"RTN","XMJMBULL",6,0)
BULLETIN ; Manually post a bulletin
"RTN","XMJMBULL",7,0)
 N XMBIEN,XMBNAME,XMPARM,XMINSTR,XMABORT
"RTN","XMJMBULL",8,0)
 S XMABORT=0
"RTN","XMJMBULL",9,0)
 D WHICH(.XMBIEN,.XMBNAME,.XMABORT) Q:XMABORT
"RTN","XMJMBULL",10,0)
 D GETPARMS(XMBIEN,.XMPARM,.XMINSTR,.XMABORT) Q:XMABORT
"RTN","XMJMBULL",11,0)
 D BULLETIN^XMKPO(XMDUZ,XMBNAME,XMBIEN,.XMPARM,"","",.XMINSTR)
"RTN","XMJMBULL",12,0)
 Q
"RTN","XMJMBULL",13,0)
WHICH(XMBIEN,XMBNAME,XMABORT) ;
"RTN","XMJMBULL",14,0)
 N DIC
"RTN","XMJMBULL",15,0)
 S DIC(0)="AEQM",DIC="^XMB(3.6,"
"RTN","XMJMBULL",16,0)
 D ^DIC I Y=-1 S XMABORT=1 Q
"RTN","XMJMBULL",17,0)
 S XMBIEN=+Y
"RTN","XMJMBULL",18,0)
 S XMBNAME=$P(Y,U,2)
"RTN","XMJMBULL",19,0)
 Q
"RTN","XMJMBULL",20,0)
GETPARMS(XMBIEN,XMPARM,XMINSTR,XMABORT) ;
"RTN","XMJMBULL",21,0)
 N I,XMREC,XMI,DIR,Y,X,DIRUT
"RTN","XMJMBULL",22,0)
 S I=0
"RTN","XMJMBULL",23,0)
 F  S I=$O(^XMB(3.6,XMBIEN,1,I)) Q:'I  D  Q:XMABORT
"RTN","XMJMBULL",24,0)
 . S XMREC=^XMB(3.6,XMBIEN,1,I,0)
"RTN","XMJMBULL",25,0)
 . W !,XMREC
"RTN","XMJMBULL",26,0)
 . F  Q:XMREC'?.E1"|".N1"|".E  D  Q:XMABORT
"RTN","XMJMBULL",27,0)
 . . S XMI=+$P(XMREC,"|",2)
"RTN","XMJMBULL",28,0)
 . . S XMREC=$P(XMREC,"|",1)_$P(XMREC,"|",3,999)
"RTN","XMJMBULL",29,0)
 . . I XMI<0!(XMI>100) D  Q
"RTN","XMJMBULL",30,0)
 . . . S XMABORT=1
"RTN","XMJMBULL",31,0)
 . . . W !,"Aborting!  '",XMI,"' is not a valid parameter."
"RTN","XMJMBULL",32,0)
 . . Q:$D(XMPARM(XMI))
"RTN","XMJMBULL",33,0)
 . . S DIR("A")="Enter parameter "_XMI
"RTN","XMJMBULL",34,0)
 . . S DIR(0)="F^1:30"
"RTN","XMJMBULL",35,0)
 . . D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMJMBULL",36,0)
 . . S XMPARM(XMI)=Y
"RTN","XMJMBULL",37,0)
 Q:XMABORT
"RTN","XMJMBULL",38,0)
 S DIR("A")="Enter posting date/time"
"RTN","XMJMBULL",39,0)
 S DIR("B")="NOW"
"RTN","XMJMBULL",40,0)
 S DIR(0)="D^NOW::EFTX"
"RTN","XMJMBULL",41,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMJMBULL",42,0)
 S:X'="NOW" XMINSTR("LATER")=$$FMTH^XLFDT(Y)
"RTN","XMJMBULL",43,0)
 Q
"RTN","XMJMC")
0^8^B25834658
"RTN","XMJMC",1,0)
XMJMC ;ISC-SF/GMB-Copy message ;06/14/99  13:35
"RTN","XMJMC",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMC",3,0)
 ; Replaces ^XMA2C,^XMA2C0 (ISC-WASH/CAP)
"RTN","XMJMC",4,0)
COPY(XMDUZ,XMK,XMZ,XMFROM) ;
"RTN","XMJMC",5,0)
 N XMABORT,XMWHICH,XMLR,XMSAME,XMZREC
"RTN","XMJMC",6,0)
 D INIT(XMDUZ,XMK,XMZ,XMFROM,.XMZREC,.XMWHICH,.XMLR,.XMSAME,.XMABORT) Q:XMABORT
"RTN","XMJMC",7,0)
 D COPYIT(XMDUZ,XMZ,$P(XMZREC,U,1),XMFROM,$P(XMZREC,U,3),XMWHICH,XMLR,XMSAME)
"RTN","XMJMC",8,0)
 W *7,!,"You are now BACK at the message you were reading",!,"before invoking the copy function."
"RTN","XMJMC",9,0)
 Q
"RTN","XMJMC",10,0)
INIT(XMDUZ,XMK,XMZ,XMFROM,XMZREC,XMWHICH,XMLR,XMSAME,XMABORT) ;
"RTN","XMJMC",11,0)
 S XMZREC=^XMB(3.9,XMZ,0)
"RTN","XMJMC",12,0)
 S XMABORT=0
"RTN","XMJMC",13,0)
 D INIT^XMJMS(XMDUZ,.XMABORT) Q:XMABORT
"RTN","XMJMC",14,0)
 S XMWHICH=0
"RTN","XMJMC",15,0)
 D WHICH(XMZ,"copy",.XMWHICH,.XMABORT) Q:XMABORT
"RTN","XMJMC",16,0)
 I '$$COPYRECP^XMXSEC1(XMZ) D  Q
"RTN","XMJMC",17,0)
 . S (XMLR,XMSAME)=0
"RTN","XMJMC",18,0)
 . D SHOW^XMJERR
"RTN","XMJMC",19,0)
 D LISTR(.XMLR,.XMABORT) Q:XMABORT
"RTN","XMJMC",20,0)
 D TOSAME(.XMSAME,.XMABORT)
"RTN","XMJMC",21,0)
 Q
"RTN","XMJMC",22,0)
WHICH(XMZ,XMVERB,XMWHICH,XMABORT) ;
"RTN","XMJMC",23,0)
 N XMRESPS
"RTN","XMJMC",24,0)
 S XMRESPS=+$P($G(^XMB(3.9,XMZ,3,0)),U,4)
"RTN","XMJMC",25,0)
 I XMRESPS=0 S XMWHICH=0
"RTN","XMJMC",26,0)
 E  D WHICH^XMJMP(XMZ,XMRESPS,XMVERB,.XMWHICH,.XMABORT) Q:XMABORT!'$D(XMWHICH)
"RTN","XMJMC",27,0)
 Q:$$COPYAMT^XMXSEC1(XMZ,XMWHICH)
"RTN","XMJMC",28,0)
 S XMABORT=1
"RTN","XMJMC",29,0)
 D SHOW^XMJERR
"RTN","XMJMC",30,0)
 W !,"You may use the 'Transfer' option of the FileMan Editor"
"RTN","XMJMC",31,0)
 W !,"to move text from this message or its responses into a new message."
"RTN","XMJMC",32,0)
 Q
"RTN","XMJMC",33,0)
LISTR(XMLR,XMABORT) ;
"RTN","XMJMC",34,0)
 N DIR,Y
"RTN","XMJMC",35,0)
 S DIR("A")="List original recipients in text"
"RTN","XMJMC",36,0)
 S DIR("B")="NO",DIR(0)="Y",DIR("??")="XM-U-M-COPY-2"
"RTN","XMJMC",37,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMJMC",38,0)
 S XMLR=Y
"RTN","XMJMC",39,0)
 Q
"RTN","XMJMC",40,0)
TOSAME(XMSAME,XMABORT) ;
"RTN","XMJMC",41,0)
 N DIR,Y
"RTN","XMJMC",42,0)
 S DIR("A")="Deliver to the same recipients"
"RTN","XMJMC",43,0)
 S DIR("B")="NO",DIR(0)="Y",DIR("??")="XM-U-M-COPY-2"
"RTN","XMJMC",44,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMJMC",45,0)
 S XMSAME=Y
"RTN","XMJMC",46,0)
 I XMSAME W !!,"LOCAL recipients (NOT Recipients on remote network nodes) will be copied."
"RTN","XMJMC",47,0)
 Q
"RTN","XMJMC",48,0)
COPYIT(XMDUZ,XMZO,XMSUBJO,XMFROM,XMDATEO,XMWHICH,XMLR,XMSAME) ;
"RTN","XMJMC",49,0)
 ; XMWHICH   List of responses to copy
"RTN","XMJMC",50,0)
 ; XMLR     1=list original recipients in msg; 0=don't
"RTN","XMJMC",51,0)
 ; XMSAME   1=deliver to the original recipients; 0=don't
"RTN","XMJMC",52,0)
 N XMZ,XMSUBJ,XMC,XMINSTR,XMABORT
"RTN","XMJMC",53,0)
 S XMABORT=0
"RTN","XMJMC",54,0)
 D INIT^XMXADDR
"RTN","XMJMC",55,0)
 S XMSUBJ="Copy of: "_$E(XMSUBJO,1,56)
"RTN","XMJMC",56,0)
 D SUBJ^XMJMS(.XMSUBJ,.XMABORT) Q:XMABORT
"RTN","XMJMC",57,0)
 D CRE8XMZ^XMXSEND(XMSUBJ,.XMZ,1) I XMZ<1 S XMABORT=1 Q
"RTN","XMJMC",58,0)
 D:'$G(XMPAKMAN) EDITON^XMJMS(XMDUZ,XMZ)
"RTN","XMJMC",59,0)
 D CPROCESS(XMDUZ,XMZO,XMSUBJO,XMFROM,XMDATEO,XMWHICH,XMLR,XMSAME,XMZ,XMSUBJ,.XMINSTR,.XMABORT)
"RTN","XMJMC",60,0)
 D:XMABORT=DTIME HALT^XMJMS("copying")
"RTN","XMJMC",61,0)
 D:'$G(XMPAKMAN) EDITOFF^XMJMS(XMDUZ)
"RTN","XMJMC",62,0)
 D:XMABORT KILLMSG^XMXUTIL(XMZ)
"RTN","XMJMC",63,0)
 Q
"RTN","XMJMC",64,0)
CPROCESS(XMDUZ,XMZO,XMSUBJO,XMFROM,XMDATEO,XMWHICH,XMLR,XMSAME,XMZ,XMSUBJ,XMINSTR,XMABORT) ;
"RTN","XMJMC",65,0)
 N XMRESTR,XMC
"RTN","XMJMC",66,0)
 D COPYTEXT(XMZO,XMSUBJO,XMFROM,XMDATEO,XMZ,XMWHICH,.XMC)
"RTN","XMJMC",67,0)
 D:XMLR!XMSAME COPYRECP(XMLR,XMSAME,XMZO,XMZ,.XMINSTR,.XMC)
"RTN","XMJMC",68,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92A^"_XMC_U_XMC_U_DT
"RTN","XMJMC",69,0)
 D BODY^XMJMS(XMDUZ,XMZ,XMSUBJ,.XMRESTR,.XMABORT) Q:XMABORT
"RTN","XMJMC",70,0)
 D TOWHOM^XMJMT(XMDUZ,"Send",.XMINSTR,.XMRESTR,.XMABORT) Q:XMABORT  ; add'l recipients
"RTN","XMJMC",71,0)
 D SENDMSG^XMJMSO(XMDUZ,XMZ,XMSUBJ,.XMINSTR,.XMRESTR,.XMABORT) Q:XMABORT  ; transmit prompt
"RTN","XMJMC",72,0)
 Q
"RTN","XMJMC",73,0)
COPYTEXT(XMZO,XMSUBJO,XMFROM,XMDATEO,XMZ,XMWHICH,XMC) ;
"RTN","XMJMC",74,0)
 N I,XMRESP,XMRANGE
"RTN","XMJMC",75,0)
 W !,"Copying text"
"RTN","XMJMC",76,0)
 S ^XMB(3.9,XMZ,2,1,0)="Original message: """_XMSUBJO_""" [#"_XMZO_"]"
"RTN","XMJMC",77,0)
 S ^XMB(3.9,XMZ,2,2,0)="From: "_$$NAME^XMXUTIL(XMFROM)
"RTN","XMJMC",78,0)
 S ^XMB(3.9,XMZ,2,3,0)="Sent: "_$$MMDT^XMXUTIL1(XMDATEO)
"RTN","XMJMC",79,0)
 S XMC=3
"RTN","XMJMC",80,0)
 F I=1:1:$L(XMWHICH,",") D
"RTN","XMJMC",81,0)
 . S XMRANGE=$P(XMWHICH,",",I)
"RTN","XMJMC",82,0)
 . Q:XMRANGE=""  ; (XMWHICH can end with a ",", giving us a null piece.)
"RTN","XMJMC",83,0)
 . F XMRESP=$P(XMRANGE,"-",1):1:$S(XMRANGE["-":$P(XMRANGE,"-",2),1:XMRANGE) D
"RTN","XMJMC",84,0)
 . . I XMRESP=0 D COPYRESP(XMRESP,XMZO,XMZ,.XMC) Q
"RTN","XMJMC",85,0)
 . . D COPYRESP(XMRESP,+$G(^XMB(3.9,XMZO,3,XMRESP,0)),XMZ,.XMC)
"RTN","XMJMC",86,0)
 Q
"RTN","XMJMC",87,0)
COPYRESP(XMRESP,XMZR,XMZ,XMC) ;
"RTN","XMJMC",88,0)
 N XMF,XMFROM,XMDT,XMZREC
"RTN","XMJMC",89,0)
 S XMC=XMC+1
"RTN","XMJMC",90,0)
 S ^XMB(3.9,XMZ,2,XMC,0)=""
"RTN","XMJMC",91,0)
 I XMRESP D
"RTN","XMJMC",92,0)
 . S XMZREC=$G(^XMB(3.9,XMZR,0))
"RTN","XMJMC",93,0)
 . S XMFROM=$$NAME^XMXUTIL($P(XMZREC,U,2))
"RTN","XMJMC",94,0)
 . S XMDT=$P(XMZREC,U,3)
"RTN","XMJMC",95,0)
 . S XMC=XMC+1
"RTN","XMJMC",96,0)
 . S ^XMB(3.9,XMZ,2,XMC,0)="Response #"_XMRESP_": "_XMFROM_"    "_$$MMDT^XMXUTIL1(XMDT)
"RTN","XMJMC",97,0)
 S XMF=.999999
"RTN","XMJMC",98,0)
 F  S XMF=$O(^XMB(3.9,XMZR,2,XMF)) Q:XMF=""  D
"RTN","XMJMC",99,0)
 . S XMC=XMC+1
"RTN","XMJMC",100,0)
 . W:XMC#50=0 "."
"RTN","XMJMC",101,0)
 . S ^XMB(3.9,XMZ,2,XMC,0)=^XMB(3.9,XMZR,2,XMF,0)
"RTN","XMJMC",102,0)
 Q
"RTN","XMJMC",103,0)
COPYRECP(XMLR,XMSAME,XMZO,XMZ,XMINSTR,XMC) ;
"RTN","XMJMC",104,0)
 N XMTO,XMNAME
"RTN","XMJMC",105,0)
 W !,"Copying recipients"
"RTN","XMJMC",106,0)
 I XMLR D
"RTN","XMJMC",107,0)
 . W " into text"
"RTN","XMJMC",108,0)
 . S XMC=XMC+1,^XMB(3.9,XMZ,2,XMC,0)=""
"RTN","XMJMC",109,0)
 . S XMC=XMC+1,^XMB(3.9,XMZ,2,XMC,0)="Original Recipients"
"RTN","XMJMC",110,0)
 . S XMC=XMC+1,^XMB(3.9,XMZ,2,XMC,0)="-------------------"
"RTN","XMJMC",111,0)
 I XMLR,XMSAME W " and"
"RTN","XMJMC",112,0)
 I XMSAME W " onto message"
"RTN","XMJMC",113,0)
 S XMTO=""
"RTN","XMJMC",114,0)
 F  S XMTO=$O(^XMB(3.9,XMZO,1,"C",XMTO)) Q:XMTO=""  D
"RTN","XMJMC",115,0)
 . I XMSAME,XMTO=+XMTO W ! D ADDR^XMXADDR(XMDUZ,"`"_XMTO,.XMINSTR)
"RTN","XMJMC",116,0)
 . Q:'XMLR
"RTN","XMJMC",117,0)
 . I +XMTO=XMTO S XMNAME=$$NAME^XMXUTIL(XMTO)
"RTN","XMJMC",118,0)
 . E  I $L(XMTO)<30 S XMNAME=XMTO
"RTN","XMJMC",119,0)
 . E  S XMNAME=$P($G(^XMB(3.9,XMZO,1,$O(^XMB(3.9,XMZO,1,"C",XMTO,0)),0)),U,1)
"RTN","XMJMC",120,0)
 . S XMC=XMC+1,^XMB(3.9,XMZ,2,XMC,0)=XMNAME
"RTN","XMJMC",121,0)
 Q
"RTN","XMJMCODE")
0^9^B31059845
"RTN","XMJMCODE",1,0)
XMJMCODE ;ISC-SF/GMB-Message En/Decryption ;06/07/99  09:48
"RTN","XMJMCODE",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMCODE",3,0)
 ; Replaces ^XME,^XME1 (ISC-WASH/CAP/THM)
"RTN","XMJMCODE",4,0)
ENCMSG(XMZ) ; Encode a message
"RTN","XMJMCODE",5,0)
 N I
"RTN","XMJMCODE",6,0)
 W:$G(XMIA) !,"Scrambling..."
"RTN","XMJMCODE",7,0)
 S I=.999999
"RTN","XMJMCODE",8,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:I'>0  S ^(0)=$$ENCSTR(^XMB(3.9,XMZ,2,I,0))
"RTN","XMJMCODE",9,0)
 Q
"RTN","XMJMCODE",10,0)
ENCSTR(XMCLEAR) ; Encode a string
"RTN","XMJMCODE",11,0)
 N I,XMCODED
"RTN","XMJMCODE",12,0)
 S XMCODED=""
"RTN","XMJMCODE",13,0)
 F I=1:1:$L(XMCLEAR) S XMCODED=XMCODED_$C($F(XMSECURE(I#XMSECURE+1),$E(XMCLEAR,I))+30)
"RTN","XMJMCODE",14,0)
 Q XMCODED
"RTN","XMJMCODE",15,0)
DECSTR(XMCODED) ; Decode a string
"RTN","XMJMCODE",16,0)
 N I,XMCLEAR
"RTN","XMJMCODE",17,0)
 S XMCLEAR=""
"RTN","XMJMCODE",18,0)
 F I=1:1:$L(XMCODED) S XMCLEAR=XMCLEAR_$E(XMSECURE(I#XMSECURE+1),$A(XMCODED,I)-31)
"RTN","XMJMCODE",19,0)
 Q XMCLEAR
"RTN","XMJMCODE",20,0)
CRE8KEY(XMKEY,XMHINT,XMABORT) ;
"RTN","XMJMCODE",21,0)
 D ASKKEY(.XMKEY,.XMABORT) Q:XMABORT
"RTN","XMJMCODE",22,0)
 N DIR,X,Y
"RTN","XMJMCODE",23,0)
 S DIR(0)="3.9,1.8"
"RTN","XMJMCODE",24,0)
 S DIR("A")="Enter Scramble Hint"
"RTN","XMJMCODE",25,0)
 D ^DIR I $D(DUOUT)!$D(DTOUT) S XMABORT=1 Q
"RTN","XMJMCODE",26,0)
 S XMHINT=Y
"RTN","XMJMCODE",27,0)
 Q
"RTN","XMJMCODE",28,0)
KEYOK(XMZ,XMHINT) ; Ask user for key and make sure it's right
"RTN","XMJMCODE",29,0)
 N XMKEY,XMTRY,XMOK,XMABORT
"RTN","XMJMCODE",30,0)
 I " "'[XMHINT D
"RTN","XMJMCODE",31,0)
 . U IO(0)
"RTN","XMJMCODE",32,0)
 . W !,"This message was scrambled with the scramble hint: '",XMHINT,"'"
"RTN","XMJMCODE",33,0)
 S (XMOK,XMABORT)=0
"RTN","XMJMCODE",34,0)
 F XMTRY=1:1:3 D  Q:XMOK!XMABORT
"RTN","XMJMCODE",35,0)
 . D ASKKEY(.XMKEY,.XMABORT) Q:XMABORT
"RTN","XMJMCODE",36,0)
 . I $$GOODKEY(XMZ,XMKEY) S XMOK=1 Q
"RTN","XMJMCODE",37,0)
 . W "   Not the proper password.  Strike ",XMTRY,".",*7
"RTN","XMJMCODE",38,0)
 I 'XMOK,'XMABORT W "  Yer out!"
"RTN","XMJMCODE",39,0)
 I 'XMOK!XMABORT K XMSECURE
"RTN","XMJMCODE",40,0)
 Q 'XMABORT&XMOK
"RTN","XMJMCODE",41,0)
ASKKEY(XMKEY,XMABORT) ;
"RTN","XMJMCODE",42,0)
 F  D  Q:XMKEY'="?"!XMABORT
"RTN","XMJMCODE",43,0)
 . X ^%ZOSF("EOFF")
"RTN","XMJMCODE",44,0)
 . R !,"Enter Scramble Password: ",XMKEY:15 S:'$T XMKEY=U
"RTN","XMJMCODE",45,0)
 . X ^%ZOSF("EON")
"RTN","XMJMCODE",46,0)
 . U IO
"RTN","XMJMCODE",47,0)
 . I XMKEY[U S XMABORT=1 Q
"RTN","XMJMCODE",48,0)
 . I $L(XMKEY)>2,$L(XMKEY)<21 Q
"RTN","XMJMCODE",49,0)
 . S XMKEY="?"
"RTN","XMJMCODE",50,0)
 . W !!,"The scramble password is a secret code which must be entered by the reader in"
"RTN","XMJMCODE",51,0)
 . W !,"order to see the message.  Upper and lower case characters are treated the"
"RTN","XMJMCODE",52,0)
 . W !,"same.  (The password is not case sensitive.)"
"RTN","XMJMCODE",53,0)
 . W !,"It must be from 3 to 20 characters long.",!
"RTN","XMJMCODE",54,0)
 Q
"RTN","XMJMCODE",55,0)
GOODKEY(XMZ,XMKEY) ; Function checks key and make sure it's right.
"RTN","XMJMCODE",56,0)
 ; If it is, XMSECURE is defined, and function returns 1;
"RTN","XMJMCODE",57,0)
 ; Else XMSECURE is not defined, and function returns 0
"RTN","XMJMCODE",58,0)
 D LOADCODE
"RTN","XMJMCODE",59,0)
 D ADJUST(.XMKEY)
"RTN","XMJMCODE",60,0)
 I $$ENCSTR(XMKEY)=$E($G(^XMB(3.9,XMZ,"K")),2,99) Q 1
"RTN","XMJMCODE",61,0)
 K XMSECURE
"RTN","XMJMCODE",62,0)
 Q 0
"RTN","XMJMCODE",63,0)
ADJUST(XMKEY) ; Capitalize the key, pad the key, & adjust cylinder with key
"RTN","XMJMCODE",64,0)
 N I,J,XMRW
"RTN","XMJMCODE",65,0)
 S:XMKEY?.E1L.E XMKEY=$$UP^XLFSTR(XMKEY)
"RTN","XMJMCODE",66,0)
 F  Q:$L(XMKEY)>XMSECURE  S XMKEY=XMKEY_XMKEY
"RTN","XMJMCODE",67,0)
 S XMKEY=$E(XMKEY,1,XMSECURE)
"RTN","XMJMCODE",68,0)
 S XMRW=0
"RTN","XMJMCODE",69,0)
 F I=1:1:XMSECURE S XMRW=XMRW+$A(XMKEY,I)
"RTN","XMJMCODE",70,0)
 S XMRW=XMRW#96
"RTN","XMJMCODE",71,0)
 S:$G(XMPAKMAN) XMPAKMAN("XMRW")=XMRW
"RTN","XMJMCODE",72,0)
 F I=1:1:XMSECURE D
"RTN","XMJMCODE",73,0)
 . S J=$F(XMSECURE(I),$E(XMKEY,I))-1+XMRW#40
"RTN","XMJMCODE",74,0)
 . S XMSECURE(I)=$E(XMSECURE(I),J,999)_$E(XMSECURE(I),1,J-1)
"RTN","XMJMCODE",75,0)
 Q
"RTN","XMJMCODE",76,0)
LOADCODE ; Load Bazeries Cylinder
"RTN","XMJMCODE",77,0)
 N XMLINE,I
"RTN","XMJMCODE",78,0)
 F I=1:1 S XMLINE=$P($T(Z+I),";",3,9) Q:XMLINE=""  S XMSECURE(I)=XMLINE
"RTN","XMJMCODE",79,0)
 S XMSECURE=I-1
"RTN","XMJMCODE",80,0)
 Q
"RTN","XMJMCODE",81,0)
Z ;;
"RTN","XMJMCODE",82,0)
 ;;j+?F}hmi<Q#uZ|]Jdgwb'52NBr,fP6&:{s./*E(4an)A-Y 7cKMt[Ce;OGD=op"~UL0Xy89x%1lv!VH@\>_R3zkTS$`WI^q
"RTN","XMJMCODE",83,0)
 ;;~7C|(lbZo5f&mz3*}E{ `eVtGSMN"I>WBy48K/THiu^[1Fcaqp,_L=h.j]X<AP?O$@YQ\d!rU9;:D)2gk+n%J-wR6vs'0x#
"RTN","XMJMCODE",84,0)
 ;;j+?F}hmi<Q#uZ|]Jdgwb'52NBr,fP6&:{s./*E(4an)A-Y 7cKMt[Ce;OGD=op"~UL0Xy89x%1lv!VH@\>_R3zkTS$`WI^q
"RTN","XMJMCODE",85,0)
 ;;:eR^K{=o1$+VM3qd@h8ks<W;Hzpu-wbrmTNix?7GYQSlv'*~(4a".c}g[E|%>9O#/0JIF\yj2!Ptn)_D B]C6A&`ZfX,U5L
"RTN","XMJMCODE",86,0)
 ;;CNl<v_F8sDZfGmUy&ui'%T:+z]$>OVxMw)^n.6d *ge;oY(kjHq,[QE-|WRh2~SP1/}aBLK"3J45t{cbpr09A`!7XI#?=@\
"RTN","XMJMCODE",87,0)
 ;;~7C|(lbZo5f&mz3*}E{ `eVtGSMN"I>WBy48K/THiu^[1Fcaqp,_L=h.j]X<AP?O$@YQ\d!rU9;:D)2gk+n%J-wR6vs'0x#
"RTN","XMJMCODE",88,0)
 ;;q^,M?Q$+E%:ICN"PxdHc3w_~k[-m.s/}u|5 zOh4'8#;v!`FeSV7t(2U]fJlpTa&D=96@\n>ZGiRKAX)1jr0bLBgYy*<o{W
"RTN","XMJMCODE",89,0)
 ;;`kC4xY$)*8-1o3NXJ.2 ;n0bK|=?d}g{HQUmsShGc[Ai<l>#F5Iqf9BMRpu~V&Z/a:!7TLtz6Ery,wePjD+v(_%^"O'@W\]
"RTN","XMJMCODE",90,0)
 ;; 6[2F5ETNc/mjglK0bZ<CHvp-)~IV%,=}79Y:i+r(yeGD;zJ"4'qd.sh?*on#&kM3XfA\!_S]BWLQO@U8RtP$`^|u>wx{1a
"RTN","XMJMCODE",91,0)
 ;;$7q_@*0u<\E~t(zW/QbT,3yR>v?}U1D^4:J|h{"nerGxsPH[ C'K8I2g)Ya&oZ#9dSi.kNjfB6A!`XF]l+-wpm=cMO;5L%V
"RTN","XMJMCODE",92,0)
 ;;fk&A^NROib:7sa>JIyo'Z;]H-)qx/dDX9FgwL8|01@r.pSQ6~432_5"}?<EC+UzntWG=,Vm*jK\#h!`M TcB{YvPeu(%l$[
"RTN","XMJMCODE",93,0)
 ;;(wFr,+[Lylm=RPJ:9DI)|_UNMT~;K/{8k6-% vzBj7q3'x\"ZgE*dHus#V4Ytpc!GCb1O0@WQah}25o&`$eS>fn<.Xi^?]A
"RTN","XMJMCODE",94,0)
 ;;`B8Fr{$hy]L,NeKXtc'asxbp*@nA~PiVQ -OoJ)R;/v_9}(?|UD<lMIz%\Y6Sw2C4=g&7u":+d!E#T.5k[j^1GHmZ0f>3qW
"RTN","XMJMCODE",95,0)
 ;;ex3:uFt*+L-hR$Mp4(<Y[ryl\~TK>1"'Pi7Nd}G5#/2WXInQ9|j{. 6!SJ0Oz8V%wA_D@Uvac=g,o;Hk?mb]EBq&f^`C)sZ
"RTN","XMJMCODE",96,0)
 ;;kO;/"1r?[x#EloIz.<Vpb|8WL{K&a%:tny}`Quv5h-m2U0>9M]j)fNX7S@PYD$='T_Cg!JAq+H^FGs(i,6ce Bwd*~RZ\43
"RTN","XMJMCODE",97,0)
 ;;(r{dz)P5F1H'a=sm^g"Eu-%7&\.UJxy<h q?vw*o+#2TV}W|L0QI9iXtOB:Y]e3>4$`p6fnj8cSM;Kb_Z[GC/A!@NlDkR~,
"RTN","XMJMCODE",98,0)
 ;;Z#;Fr|WdD\5=U{kf`XR0w~[A&L>}p"!mIMY4t2q8)1gx^hi K.Vco<7TJ3/*@QO(-SvB:y6N$a_bGj'Heu]l+%zsn9?P,EC
"RTN","XMJMCODE",99,0)
 ;;M|.y]37'\p6{UAz^fm4Ik"9c&gn;D#le+=VB*J8bG%Z2hQtu_>,~vW/}ji:X`NY0[w5rHq)O- LSo?a!T1KE@P<FxsR$C(d
"RTN","XMJMCODE",100,0)
 ;;|Qv<[=NC#}!zO$GtF/,KjU;W6S9rV+%@'-:R3e&D7TBq8(o.?k"g>L_Z)2*Pyx{X05diHaphb41fM]Im`\lYAncs~EwJ^ u
"RTN","XMJMCODE",101,0)
 ;;B*6IQt9jf|YH7%gdi<cO3\mN5{&'Uv1/^Gl0V)w>`z@#A4_To b]DnJx$Zyk+Ku8pCrPRSq!?:MaEs[,-=L2WFeX~;h(}."
"RTN","XMJMCODE",102,0)
 ;;
"RTN","XMJMD")
0^10^B24791140
"RTN","XMJMD",1,0)
XMJMD ;ISC-SF/GMB-Later Messages ;06/15/99  06:47
"RTN","XMJMD",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMD",3,0)
 ; Replaces ^XMB1 (ISC-WASH/THM/CAP)
"RTN","XMJMD",4,0)
 ; Entry points are:
"RTN","XMJMD",5,0)
 ; EDIT     Change/Delete Later'd messages for a particular user
"RTN","XMJMD",6,0)
 ; REPORT   Report on Later'd messages for a particular user
"RTN","XMJMD",7,0)
 ; LATER    Add/Edit Later'd Dates for a particular user/message
"RTN","XMJMD",8,0)
 ; LTRADD   Add Later'd delivery date for a particular user/message
"RTN","XMJMD",9,0)
 ; DELUSER  Delete all Later'd messages for a particular user
"RTN","XMJMD",10,0)
 ; DELMSG   Delete all Later'd dates for a particular message
"RTN","XMJMD",11,0)
 ;
"RTN","XMJMD",12,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMJMD",13,0)
 ; EDIT     XMLATER-EDIT
"RTN","XMJMD",14,0)
 ; REPORT   XMLATER-REPORT
"RTN","XMJMD",15,0)
REPORT ; Report on later'd messages
"RTN","XMJMD",16,0)
 N ZTSAVE,ZTDESC,ZTRTN,I
"RTN","XMJMD",17,0)
 D CHECK^XMVVITAE
"RTN","XMJMD",18,0)
 S ZTDESC="Report on Later'd Messages"
"RTN","XMJMD",19,0)
 S ZTRTN="RPTLATER^XMJMD"
"RTN","XMJMD",20,0)
 F I="XMDUZ","XMV(""NAME"")" S ZTSAVE(I)=""
"RTN","XMJMD",21,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE)
"RTN","XMJMD",22,0)
 Q
"RTN","XMJMD",23,0)
RPTLATER ;
"RTN","XMJMD",24,0)
 ; XMDUZ,XMV("NAME") are provided
"RTN","XMJMD",25,0)
 N XMZ,XMABORT,XMWHEN,XMIEN,XMREC,XMZREC,XMPAGE,XMLEN,XMK,XMKN
"RTN","XMJMD",26,0)
 S XMLEN("DATE")=18
"RTN","XMJMD",27,0)
 S XMLEN("XMZ")=$L($P(^XMB(3.9,0),U,3))
"RTN","XMJMD",28,0)
 S:XMLEN("XMZ")<7 XMLEN("XMZ")=7
"RTN","XMJMD",29,0)
 S XMLEN("BSKT")=10
"RTN","XMJMD",30,0)
 S XMLEN("SUBJ")=79-XMLEN("DATE")-XMLEN("XMZ")-XMLEN("BSKT")-6
"RTN","XMJMD",31,0)
 S (XMPAGE,XMABORT)=0
"RTN","XMJMD",32,0)
 W:IOST["C-" @IOF
"RTN","XMJMD",33,0)
 D RPTHDR(.XMLEN,.XMPAGE)
"RTN","XMJMD",34,0)
 S XMIEN=""
"RTN","XMJMD",35,0)
 F  S XMIEN=$O(^XMB(3.73,"C",XMDUZ,XMIEN)) Q:XMIEN=""  D  Q:XMABORT
"RTN","XMJMD",36,0)
 . S XMREC=$G(^XMB(3.73,XMIEN,0)) I XMREC="" K ^XMB(3.73,"C",XMDUZ,XMIEN) Q
"RTN","XMJMD",37,0)
 . S XMZ=$P(XMREC,U,3)
"RTN","XMJMD",38,0)
 . S XMZREC=$G(^XMB(3.9,XMZ,0)) I XMZREC="" D DELDATE(XMIEN) Q
"RTN","XMJMD",39,0)
 . S XMWHEN=$P(XMREC,U,1)
"RTN","XMJMD",40,0)
 . S XMK=$O(^XMB(3.7,"M",XMZ,XMDUZ,""))
"RTN","XMJMD",41,0)
 . S XMKN=$S('XMK:"* None *",1:$P($G(^XMB(3.7,XMDUZ,2,XMK,0)),U))
"RTN","XMJMD",42,0)
 . I $Y+3>IOSL D  Q:XMABORT
"RTN","XMJMD",43,0)
 . . I IOST["C-" D PAGE^XMXUTIL(.XMABORT) Q:XMABORT
"RTN","XMJMD",44,0)
 . . W @IOF D RPTHDR(.XMLEN,.XMPAGE)
"RTN","XMJMD",45,0)
 . W !,$$LJ^XLFSTR($$FMTE^XLFDT($E(XMWHEN,1,12),1),XMLEN("DATE")),"  ",$$LJ^XLFSTR($E(XMKN,1,XMLEN("BSKT")),XMLEN("BSKT")),"  ",$J(XMZ,XMLEN("XMZ")),"  ",$E($$SUBJ^XMXUTIL2(XMZREC),1,XMLEN("SUBJ"))
"RTN","XMJMD",46,0)
 W:$O(^XMB(3.73,"C",XMDUZ,""))="" !,"No Later'd Messages"
"RTN","XMJMD",47,0)
 I IOST["C-",'XMABORT D WAIT^XMXUTIL
"RTN","XMJMD",48,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","XMJMD",49,0)
 Q
"RTN","XMJMD",50,0)
RPTHDR(XMLEN,XMPAGE) ;
"RTN","XMJMD",51,0)
 S XMPAGE=XMPAGE+1
"RTN","XMJMD",52,0)
 W "Later'd Messages Report for: ",XMV("NAME"),?70,"Page: ",XMPAGE
"RTN","XMJMD",53,0)
 W !,$$LJ^XLFSTR("Date",XMLEN("DATE")),"  ",$$LJ^XLFSTR($$EZBLD^DIALOG(34011),XMLEN("BSKT")),"  ",$$RJ^XLFSTR("Msg ID",XMLEN("XMZ")),"  ",$$EZBLD^DIALOG(34002)
"RTN","XMJMD",54,0)
 W !,$$REPEAT^XLFSTR("-",79)
"RTN","XMJMD",55,0)
 Q
"RTN","XMJMD",56,0)
DELUSER(XMDUZ) ; Delete all Later'd messages for a particular user
"RTN","XMJMD",57,0)
 N XMIEN
"RTN","XMJMD",58,0)
 S XMIEN=""
"RTN","XMJMD",59,0)
 F  S XMIEN=$O(^XMB(3.73,"C",XMDUZ,XMIEN)) Q:XMIEN=""  D DELDATE(XMIEN)
"RTN","XMJMD",60,0)
 Q
"RTN","XMJMD",61,0)
DELDATE(XMIEN) ; Delete a particular Later'd message date
"RTN","XMJMD",62,0)
 N DIK
"RTN","XMJMD",63,0)
 S DIK="^XMB(3.73,",DA=XMIEN
"RTN","XMJMD",64,0)
 D ^DIK
"RTN","XMJMD",65,0)
 Q
"RTN","XMJMD",66,0)
DELMSG(XMZ) ; Delete all Later'd dates for a particular message
"RTN","XMJMD",67,0)
 N XMDUZ,XMIEN
"RTN","XMJMD",68,0)
 S (XMDUZ,XMIEN)=""
"RTN","XMJMD",69,0)
 F  S XMDUZ=$O(^XMB(3.73,"AC",XMZ,XMDUZ)) Q:XMDUZ=""  D
"RTN","XMJMD",70,0)
 . F  S XMIEN=$O(^XMB(3.73,"AC",XMZ,XMDUZ,XMIEN)) Q:XMIEN=""  D DELDATE(XMIEN)
"RTN","XMJMD",71,0)
 Q
"RTN","XMJMD",72,0)
LATER(XMDUZ,XMZ) ; For a particular message,
"RTN","XMJMD",73,0)
 ; let user edit any existing latered times or add a new one.
"RTN","XMJMD",74,0)
 N XMABORT,XMWHEN
"RTN","XMJMD",75,0)
 S XMABORT=0
"RTN","XMJMD",76,0)
 I $D(^XMB(3.73,"AC",XMZ,XMDUZ)) D
"RTN","XMJMD",77,0)
 . W @IOF
"RTN","XMJMD",78,0)
 . D LATER^XMJMQ(XMDUZ,XMZ,"","","","",.XMABORT)
"RTN","XMJMD",79,0)
 . S XMABORT=0
"RTN","XMJMD",80,0)
 . N DIR,XMIEN
"RTN","XMJMD",81,0)
 . S XMIEN=$O(^XMB(3.73,"AC",XMZ,XMDUZ,0))
"RTN","XMJMD",82,0)
 . I $O(^XMB(3.73,"AC",XMZ,XMDUZ,XMIEN)) S XMIEN=0
"RTN","XMJMD",83,0)
 . S DIR(0)="SO^A:Add another date on which this message should appear new;C:Change "_$S(XMIEN:"this",1:"a")_" date;D:Delete "_$S(XMIEN:"this",1:"a")_" date"
"RTN","XMJMD",84,0)
 . D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMJMD",85,0)
 . I Y="A" D  Q
"RTN","XMJMD",86,0)
 . . D LTRDATE(.XMWHEN,.XMABORT) Q:XMABORT
"RTN","XMJMD",87,0)
 . . D LTRADD(XMDUZ,XMZ,XMWHEN)
"RTN","XMJMD",88,0)
 . I 'XMIEN D WHICH(XMDUZ,XMZ,.XMIEN,.XMABORT) Q:XMABORT
"RTN","XMJMD",89,0)
 . I Y="C" D CHGDATE(XMIEN) Q
"RTN","XMJMD",90,0)
 . D DELDATE(XMIEN) ; Delete this date
"RTN","XMJMD",91,0)
 . W " ... deleted."
"RTN","XMJMD",92,0)
 E  D
"RTN","XMJMD",93,0)
 . D LTRDATE(.XMWHEN,.XMABORT) Q:XMABORT
"RTN","XMJMD",94,0)
 . D LTRADD(XMDUZ,XMZ,XMWHEN)
"RTN","XMJMD",95,0)
 Q
"RTN","XMJMD",96,0)
EDIT ; Change/delete later'd messages
"RTN","XMJMD",97,0)
 I '$D(^XMB(3.73,"C",XMDUZ)) W !!,*7,"You have no Later'd messages." Q
"RTN","XMJMD",98,0)
 D LTREDIT($G(XMDUZ,DUZ))
"RTN","XMJMD",99,0)
 Q
"RTN","XMJMD",100,0)
LTREDIT(XMDUZ,XMZ) ;
"RTN","XMJMD",101,0)
 N X,Y,XMIEN,DIR,DIE,DR,DA,DIRUT,XMABORT
"RTN","XMJMD",102,0)
 S XMABORT=0
"RTN","XMJMD",103,0)
 D WHICH(XMDUZ,.XMZ,.XMIEN,.XMABORT) Q:XMABORT
"RTN","XMJMD",104,0)
 ; The user has chosen a record to edit (and change the later'd date)
"RTN","XMJMD",105,0)
 S DIR(0)="S^D:Delete this date;C:Change this date"
"RTN","XMJMD",106,0)
 D ^DIR Q:$D(DIRUT)
"RTN","XMJMD",107,0)
 I Y="D" D  Q
"RTN","XMJMD",108,0)
 . D DELDATE(XMIEN) ; Delete this date
"RTN","XMJMD",109,0)
 . W " ... deleted."
"RTN","XMJMD",110,0)
 K DIR,X,Y,DIRUT
"RTN","XMJMD",111,0)
 D CHGDATE(XMIEN) ; Change this date
"RTN","XMJMD",112,0)
 Q
"RTN","XMJMD",113,0)
WHICH(XMDUZ,XMZ,XMIEN,XMABORT) ;
"RTN","XMJMD",114,0)
 N DIC,D,X,Y
"RTN","XMJMD",115,0)
 W !
"RTN","XMJMD",116,0)
 S DIC="^XMB(3.73,"
"RTN","XMJMD",117,0)
 S DIC(0)="NE"
"RTN","XMJMD",118,0)
 S D="C"
"RTN","XMJMD",119,0)
 I $D(XMZ) S DIC("S")="I $D(^XMB(3.73,""AC"","_XMZ_","_$G(XMDUZ,DUZ)_",Y))"
"RTN","XMJMD",120,0)
 E  S DIC("S")="I $D(^XMB(3.73,""C"","_$G(XMDUZ,DUZ)_",Y))"
"RTN","XMJMD",121,0)
 S X=$G(XMDUZ,DUZ)
"RTN","XMJMD",122,0)
 D IX^DIC I Y=-1 S XMABORT=1 Q
"RTN","XMJMD",123,0)
 S XMIEN=+Y
"RTN","XMJMD",124,0)
 Q
"RTN","XMJMD",125,0)
CHGDATE(DA) ; Change a date
"RTN","XMJMD",126,0)
 N DIE,DR,DIDEL
"RTN","XMJMD",127,0)
 S DIDEL=3.73
"RTN","XMJMD",128,0)
 S DIE=3.73
"RTN","XMJMD",129,0)
 S DR=.01
"RTN","XMJMD",130,0)
 D ^DIE
"RTN","XMJMD",131,0)
 Q
"RTN","XMJMD",132,0)
LTRDATE(Y,XMABORT) ;
"RTN","XMJMD",133,0)
 N DIR
"RTN","XMJMD",134,0)
 S DIR(0)="3.73,.01"
"RTN","XMJMD",135,0)
 S DIR("B")="T+1"
"RTN","XMJMD",136,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMJMD",137,0)
 Q
"RTN","XMJMD",138,0)
LTRADD(XMDUZ,XMZ,XMWHEN) ;
"RTN","XMJMD",139,0)
 N XMFDA
"RTN","XMJMD",140,0)
 Q:$D(^XMB(3.73,"AB",XMWHEN,XMDUZ,XMZ))  ; Already scheduled?
"RTN","XMJMD",141,0)
 S XMFDA(3.73,"+1,",.01)=XMWHEN
"RTN","XMJMD",142,0)
 ;S XMFDA(3.73,"+1,",1)=XMDUZ  Not needed, because done by trigger
"RTN","XMJMD",143,0)
 S XMFDA(3.73,"+1,",2)=XMZ
"RTN","XMJMD",144,0)
 D UPDATE^DIE("","XMFDA")
"RTN","XMJMD",145,0)
 Q
"RTN","XMJMD",146,0)
 ;
"RTN","XMJMD",147,0)
 ;#34002 = Subject
"RTN","XMJMD",148,0)
 ;#34011 = Basket
"RTN","XMJMF")
0^11^B85468502
"RTN","XMJMF",1,0)
XMJMF ;ISC-SF/GMB-Find messages based on criteria ;06/03/99  14:12
"RTN","XMJMF",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMF",3,0)
 ; Replaces ^XMA03,^XMAL0,^XMAL0A (ISC-WASH/CAP/THM)
"RTN","XMJMF",4,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMJMF",5,0)
 ; FIND     XMSEARCH
"RTN","XMJMF",6,0)
FINDBSKT(XMDUZ,XMK,XMKN) ; Find messages in a particular basket
"RTN","XMJMF",7,0)
 ; XMKCHOOS  1=user may choose which basket; 0=user is locked into current basket
"RTN","XMJMF",8,0)
 N XMKCHOOS
"RTN","XMJMF",9,0)
 S XMKCHOOS=0
"RTN","XMJMF",10,0)
 D M
"RTN","XMJMF",11,0)
 Q
"RTN","XMJMF",12,0)
FIND ; Find messages in any basket or find any message
"RTN","XMJMF",13,0)
 N XMK,XMKN,XMKCHOOS,DIR,Y,DIRUT
"RTN","XMJMF",14,0)
 D CHECK^XMVVITAE
"RTN","XMJMF",15,0)
 S XMKCHOOS=1  ; ,XMK=1,XMKN="IN"
"RTN","XMJMF",16,0)
 S DIR(0)="SO^A:Search all messages;M:Search my Mailbox only"
"RTN","XMJMF",17,0)
 S DIR("A")="Select message search method"
"RTN","XMJMF",18,0)
 S DIR("?",1)="Enter 'A' to search all messages on the system which you have ever sent"
"RTN","XMJMF",19,0)
 S DIR("?",2)="or which have ever been sent to you."
"RTN","XMJMF",20,0)
 S DIR("?",3)="The search is based only on the criterion, 'Subject starts with'."
"RTN","XMJMF",21,0)
 S DIR("?",4)=""
"RTN","XMJMF",22,0)
 S DIR("?",5)="Enter 'M' to search all messages which currently exist in your mailbox."
"RTN","XMJMF",23,0)
 S DIR("?",6)="The search is based on any combination of criteria:"
"RTN","XMJMF",24,0)
 S DIR("?",7)="'Subject contains', 'sender is', 'addressee is', 'date sent',"
"RTN","XMJMF",25,0)
 S DIR("?")="'response sender is', and 'message contains'."
"RTN","XMJMF",26,0)
 S DIR("??")="XM-U-Q-SEARCH"
"RTN","XMJMF",27,0)
 D ^DIR Q:$D(DIRUT)
"RTN","XMJMF",28,0)
 D @Y
"RTN","XMJMF",29,0)
 Q
"RTN","XMJMF",30,0)
A ; Search all existing messages
"RTN","XMJMF",31,0)
 N DIR,Y,DIRUT
"RTN","XMJMF",32,0)
 S DIR(0)="FO^3:30"
"RTN","XMJMF",33,0)
 S DIR("A")="Enter the string that the subject starts with"
"RTN","XMJMF",34,0)
 S DIR("?",1)="The string may be from 3 to 30 characters."
"RTN","XMJMF",35,0)
 S DIR("?",2)="We will find all messages whose subject starts with the string you enter."
"RTN","XMJMF",36,0)
 S DIR("?",3)="We will search all existing messages which you have ever had access to,"
"RTN","XMJMF",37,0)
 S DIR("?",4)="whether they are in your mailbox or not."
"RTN","XMJMF",38,0)
 S DIR("?")="The search is case-sensitive."
"RTN","XMJMF",39,0)
 S DIR("??")="XM-U-Q-SEARCH SYSTEM"
"RTN","XMJMF",40,0)
 D ^DIR Q:$D(DIRUT)
"RTN","XMJMF",41,0)
 W !,"Searching..."
"RTN","XMJMF",42,0)
 D FIND^XMJMFA(XMDUZ,Y)
"RTN","XMJMF",43,0)
 Q
"RTN","XMJMF",44,0)
M ; Search my mailbox only
"RTN","XMJMF",45,0)
 N DIR,Y,DIRUT,XMF,XMABORT,XMFFRN,XMFBSKTN,XMFTDTX,XMFFDTX,XMFRFRN,XMSRCHED
"RTN","XMJMF",46,0)
 S (XMABORT,XMSRCHED)=0
"RTN","XMJMF",47,0)
 I $D(XMK) S XMF("BSKT")=XMK,XMFBSKTN=XMKN
"RTN","XMJMF",48,0)
 E  S XMF("BSKT")="*"
"RTN","XMJMF",49,0)
 S DIR(0)=""
"RTN","XMJMF",50,0)
 F  D  Q:XMABORT
"RTN","XMJMF",51,0)
 . S DIR(0)=""
"RTN","XMJMF",52,0)
 . W @IOF,"Current search criteria:"
"RTN","XMJMF",53,0)
 . I +XMF("BSKT")=XMF("BSKT") D
"RTN","XMJMF",54,0)
 . . W !,"Search basket:",?30,XMFBSKTN
"RTN","XMJMF",55,0)
 . . Q:'XMKCHOOS
"RTN","XMJMF",56,0)
 . . S DIR(0)=DIR(0)_";B:Change Search basket"
"RTN","XMJMF",57,0)
 . . S DIR(0)=DIR(0)_";BA:Search all baskets"
"RTN","XMJMF",58,0)
 . E  D
"RTN","XMJMF",59,0)
 . . W !,"Search basket:",?30,"All baskets"
"RTN","XMJMF",60,0)
 . . S DIR(0)=DIR(0)_";B:Search one basket"
"RTN","XMJMF",61,0)
 . I $D(XMF("SUBJ")) D
"RTN","XMJMF",62,0)
 . . W !,"Subject contains:",?30,XMF("SUBJ")
"RTN","XMJMF",63,0)
 . . S DIR(0)=DIR(0)_";S:Change 'Subject contains' string"
"RTN","XMJMF",64,0)
 . E  S DIR(0)=DIR(0)_";S:Enter 'Subject contains' string"
"RTN","XMJMF",65,0)
 . I $D(XMF("FROM")) D
"RTN","XMJMF",66,0)
 . . W !,"Message from:",?30,$S(XMF("FROM")=+XMF("FROM"):XMFFRN,1:XMF("FROM"))
"RTN","XMJMF",67,0)
 . . S DIR(0)=DIR(0)_";F:Change 'Message from' person"
"RTN","XMJMF",68,0)
 . E  S DIR(0)=DIR(0)_";F:Enter 'Message from' person"
"RTN","XMJMF",69,0)
 . I $D(XMF("TO")) D
"RTN","XMJMF",70,0)
 . . W !,"Message to:",?30,XMF("TO")
"RTN","XMJMF",71,0)
 . . S DIR(0)=DIR(0)_";T:Change 'Message to' addressee"
"RTN","XMJMF",72,0)
 . E  S DIR(0)=DIR(0)_";T:Enter 'Message to' addressee"
"RTN","XMJMF",73,0)
 . I $D(XMF("FDATE")) D
"RTN","XMJMF",74,0)
 . . W !,"Message sent on or after:",?30,XMFFDTX
"RTN","XMJMF",75,0)
 . . S DIR(0)=DIR(0)_";DA:Change 'Message sent on or after' date"
"RTN","XMJMF",76,0)
 . E  S DIR(0)=DIR(0)_";DA:Enter 'Message sent on or after' date"
"RTN","XMJMF",77,0)
 . I $D(XMF("TDATE")) D
"RTN","XMJMF",78,0)
 . . W !,"Message sent on or before:",?30,XMFTDTX
"RTN","XMJMF",79,0)
 . . S DIR(0)=DIR(0)_";DB:Change 'Message sent on or before' date"
"RTN","XMJMF",80,0)
 . E  S DIR(0)=DIR(0)_";DB:Enter 'Message sent on or before' date"
"RTN","XMJMF",81,0)
 . I $D(XMF("RFROM")) D
"RTN","XMJMF",82,0)
 . . W !,"Response from:",?30,$S(XMF("RFROM")=+XMF("RFROM"):XMFRFRN,1:XMF("RFROM"))
"RTN","XMJMF",83,0)
 . . S DIR(0)=DIR(0)_";R:Change 'Response from' person"
"RTN","XMJMF",84,0)
 . E  S DIR(0)=DIR(0)_";R:Enter 'Response from' person"
"RTN","XMJMF",85,0)
 . I $D(XMF("TEXT")) D
"RTN","XMJMF",86,0)
 . . W !,$S(XMF("TEXT","L")=1:"Message",XMF("TEXT","L")=2:"Message or Response",1:"Response")," contains:",?30,XMF("TEXT")
"RTN","XMJMF",87,0)
 . . S DIR(0)=DIR(0)_";X:Change 'Message contains' string"
"RTN","XMJMF",88,0)
 . E  S DIR(0)=DIR(0)_";X:Enter 'Message contains' string"
"RTN","XMJMF",89,0)
 . S DIR(0)=DIR(0)_";Q:Quit"
"RTN","XMJMF",90,0)
 . I $D(XMF("SUBJ"))!$D(XMF("FROM"))!$D(XMF("FDATE"))!$D(XMF("TDATE"))!$D(XMF("TO"))!$D(XMF("RFROM"))!$D(XMF("TEXT")) D
"RTN","XMJMF",91,0)
 . . S DIR(0)=DIR(0)_";G:Go search"
"RTN","XMJMF",92,0)
 . . S DIR("A")="Select search action"
"RTN","XMJMF",93,0)
 . . S DIR("B")=$S(XMSRCHED:"Q",1:"G")
"RTN","XMJMF",94,0)
 . E  D
"RTN","XMJMF",95,0)
 . . S DIR("A")="Select search action"
"RTN","XMJMF",96,0)
 . . S DIR("B")="S"
"RTN","XMJMF",97,0)
 . S DIR(0)="S^"_$E(DIR(0),2,999)
"RTN","XMJMF",98,0)
 . S DIR("??")="XM-U-Q-SEARCH CRITERIA"
"RTN","XMJMF",99,0)
 . D ^DIR I $D(DUOUT)!$D(DTOUT)!(Y="Q") S XMABORT=1 Q
"RTN","XMJMF",100,0)
 . S XMSRCHED=$S(Y="G":1,1:0)
"RTN","XMJMF",101,0)
 . D @Y
"RTN","XMJMF",102,0)
 Q
"RTN","XMJMF",103,0)
B ; Search one basket
"RTN","XMJMF",104,0)
 N XMDIC,XMFBSKT
"RTN","XMJMF",105,0)
 S XMDIC("B")=$G(XMFBSKTN,"IN")
"RTN","XMJMF",106,0)
 D SELBSKT^XMJBU(XMDUZ,"Select basket to search: ","",.XMDIC,.XMFBSKT,.XMFBSKTN) I XMFBSKT=U S XMABORT=1 Q
"RTN","XMJMF",107,0)
 S XMF("BSKT")=XMFBSKT
"RTN","XMJMF",108,0)
 Q
"RTN","XMJMF",109,0)
BA ; Search all baskets
"RTN","XMJMF",110,0)
 S XMF("BSKT")="*"
"RTN","XMJMF",111,0)
 Q
"RTN","XMJMF",112,0)
S ; Subject contains
"RTN","XMJMF",113,0)
 N DIR,Y,X
"RTN","XMJMF",114,0)
 S DIR(0)="FO^3:30"
"RTN","XMJMF",115,0)
 S DIR("A")="Subject contains"
"RTN","XMJMF",116,0)
 S:$D(XMF("SUBJ")) DIR("B")=XMF("SUBJ")
"RTN","XMJMF",117,0)
 S DIR("?",1)="Enter the string that the subject contains."
"RTN","XMJMF",118,0)
 S DIR("?",2)="It may be from 3 to 30 characters."
"RTN","XMJMF",119,0)
 S DIR("?")="The search is NOT case-sensitive."
"RTN","XMJMF",120,0)
 D ^DIR I $D(DUOUT)!$D(DTOUT) S XMABORT=1 Q
"RTN","XMJMF",121,0)
 I X="@" K XMF("SUBJ") Q
"RTN","XMJMF",122,0)
 Q:Y=""
"RTN","XMJMF",123,0)
 S XMF("SUBJ")=Y
"RTN","XMJMF",124,0)
 Q
"RTN","XMJMF",125,0)
F ; Message from
"RTN","XMJMF",126,0)
 D GETPERS(XMDUZ,.XMF,"FROM",.XMFFRN,.XMABORT)
"RTN","XMJMF",127,0)
 Q
"RTN","XMJMF",128,0)
G ; Go search
"RTN","XMJMF",129,0)
 W !,"Searching..."
"RTN","XMJMF",130,0)
 I XMF("BSKT")="*" D FINDALL^XMJMFB(XMDUZ,.XMF) Q
"RTN","XMJMF",131,0)
 D FIND1^XMJMFB(XMDUZ,.XMF,1)
"RTN","XMJMF",132,0)
 Q
"RTN","XMJMF",133,0)
R ; Response from
"RTN","XMJMF",134,0)
 D GETPERS(XMDUZ,.XMF,"RFROM",.XMFRFRN,.XMABORT)
"RTN","XMJMF",135,0)
 Q
"RTN","XMJMF",136,0)
T ; Message to
"RTN","XMJMF",137,0)
 N XMFTON
"RTN","XMJMF",138,0)
 D GETPERS(XMDUZ,.XMF,"TO",.XMFTON,.XMABORT)
"RTN","XMJMF",139,0)
 S:$D(XMFTON) XMF("TO")=XMFTON
"RTN","XMJMF",140,0)
 Q
"RTN","XMJMF",141,0)
DA ; Message sent on or after date
"RTN","XMJMF",142,0)
 N DIR,Y,X
"RTN","XMJMF",143,0)
 S DIR(0)="DO^:"_$G(XMF("TDATE"),DT)_":EX"
"RTN","XMJMF",144,0)
 S DIR("A")="Message sent on or after"
"RTN","XMJMF",145,0)
 S DIR("?")="Enter a date.  It must include day, month, and year"
"RTN","XMJMF",146,0)
 S:$D(XMF("FDATE")) DIR("B")=XMFFDTX
"RTN","XMJMF",147,0)
 D ^DIR I $D(DUOUT)!$D(DTOUT) S XMABORT=1 Q
"RTN","XMJMF",148,0)
 I X="@" K XMF("FDATE") Q
"RTN","XMJMF",149,0)
 Q:Y=""
"RTN","XMJMF",150,0)
 S XMF("FDATE")=Y
"RTN","XMJMF",151,0)
 S XMFFDTX=$$MMDT^XMXUTIL1(XMF("FDATE"))
"RTN","XMJMF",152,0)
 Q
"RTN","XMJMF",153,0)
DB ; Message sent on or before date
"RTN","XMJMF",154,0)
 N DIR,Y,X
"RTN","XMJMF",155,0)
 S DIR(0)="DO^"_$G(XMF("FDATE"))_":DT:EX"
"RTN","XMJMF",156,0)
 S DIR("A")="Message sent on or before"
"RTN","XMJMF",157,0)
 S DIR("?")="Enter a date.  It must include day, month, and year"
"RTN","XMJMF",158,0)
 S:$D(XMF("TDATE")) DIR("B")=XMFTDTX
"RTN","XMJMF",159,0)
 D ^DIR I $D(DUOUT)!$D(DTOUT) S XMABORT=1 Q
"RTN","XMJMF",160,0)
 I X="@" K XMF("TDATE") Q
"RTN","XMJMF",161,0)
 Q:Y=""
"RTN","XMJMF",162,0)
 S XMF("TDATE")=Y
"RTN","XMJMF",163,0)
 S XMFTDTX=$$MMDT^XMXUTIL1(XMF("TDATE"))
"RTN","XMJMF",164,0)
 Q
"RTN","XMJMF",165,0)
X ; Message contains
"RTN","XMJMF",166,0)
 N DIR,Y,X
"RTN","XMJMF",167,0)
 S DIR(0)="FO^3:30"
"RTN","XMJMF",168,0)
 S DIR("A")="Message contains"
"RTN","XMJMF",169,0)
 S:$D(XMF("TEXT")) DIR("B")=XMF("TEXT")
"RTN","XMJMF",170,0)
 S DIR("?",1)="Enter the string to search for.  It may be from 3 to 30 characters."
"RTN","XMJMF",171,0)
 S DIR("?",2)="Note that if the string you are searching for is not all on one line"
"RTN","XMJMF",172,0)
 S DIR("?")="in the message, the search will not be able to find it."
"RTN","XMJMF",173,0)
 D ^DIR I $D(DUOUT)!$D(DTOUT) S XMABORT=1 Q
"RTN","XMJMF",174,0)
 I X="@" K XMF("TEXT") Q
"RTN","XMJMF",175,0)
 Q:Y=""
"RTN","XMJMF",176,0)
 S XMF("TEXT")=Y
"RTN","XMJMF",177,0)
 K DIR,X,Y
"RTN","XMJMF",178,0)
 S DIR(0)="Y"
"RTN","XMJMF",179,0)
 S DIR("A")="Should the search be case-sensitive"
"RTN","XMJMF",180,0)
 S DIR("B")=$S($G(XMF("TEXT","C"),1):"YES",1:"NO")
"RTN","XMJMF",181,0)
 S DIR("?",1)="Your answer determines whether case (upper/lower) matters in the search."
"RTN","XMJMF",182,0)
 S DIR("?",2)="It also affects the speed of the search."
"RTN","XMJMF",183,0)
 S DIR("?",3)="A case-sensitive search (one in which case matters) is faster."
"RTN","XMJMF",184,0)
 S DIR("?",4)="A case-insensitive search (one in which case does not matter) may find"
"RTN","XMJMF",185,0)
 S DIR("?",5)="more matches, but will be slower."
"RTN","XMJMF",186,0)
 S DIR("?",6)="Answer YES for a faster search, when case matters."
"RTN","XMJMF",187,0)
 S DIR("?")="Answer NO for a slower search, when case does not matter."
"RTN","XMJMF",188,0)
 D ^DIR I $D(DUOUT)!$D(DTOUT) S XMABORT=1 Q
"RTN","XMJMF",189,0)
 S XMF("TEXT","C")=Y
"RTN","XMJMF",190,0)
 K DIR,X,Y
"RTN","XMJMF",191,0)
 S DIR(0)="S^1:Message only;2:Message and Responses;3:Responses only"
"RTN","XMJMF",192,0)
 S DIR("A")="Where should we search"
"RTN","XMJMF",193,0)
 S DIR("B")=$S($G(XMF("TEXT","L"),1)=1:"Message only",$G(XMF("TEXT","L"))=2:"Message and Responses",1:"Responses only")
"RTN","XMJMF",194,0)
 D ^DIR I $D(DUOUT)!$D(DTOUT) S XMABORT=1 Q
"RTN","XMJMF",195,0)
 S XMF("TEXT","L")=Y
"RTN","XMJMF",196,0)
 Q
"RTN","XMJMF",197,0)
GETPERS(XMDUZ,XMF,XMWHICH,XMNAME,XMABORT) ;
"RTN","XMJMF",198,0)
 N DIR,Y,X,XMOK,XMWHO
"RTN","XMJMF",199,0)
 S DIR(0)="FO^1:30"
"RTN","XMJMF",200,0)
 S DIR("A")=$S(XMWHICH="RFROM":"Response",1:"Message")_" is "_$S(XMWHICH="TO":"to",1:"from")
"RTN","XMJMF",201,0)
 I XMWHICH="TO" S DIR("?",1)="Enter the message addressee.  It may be a person, group, device, or server."
"RTN","XMJMF",202,0)
 E  S DIR("?",1)="Enter the name of the person who sent the "_$S(XMWHICH="FROM":"message",1:"response")_"."
"RTN","XMJMF",203,0)
 S XMWHO=$S(XMWHICH="TO":"addressee",1:"user")
"RTN","XMJMF",204,0)
 S DIR("?",2)=""
"RTN","XMJMF",205,0)
 S DIR("?",3)="For remote "_XMWHO_"s, enter name@, name@domain, or @domain."
"RTN","XMJMF",206,0)
 S DIR("?",4)="'Name' must be found somewhere in the "_XMWHO_"'s name."
"RTN","XMJMF",207,0)
 S DIR("?",5)="'Domain' must be found somewhere in the "_XMWHO_"'s domain."
"RTN","XMJMF",208,0)
 S DIR("?")="The more characters you provide, the narrower the search will be."
"RTN","XMJMF",209,0)
 S:$D(XMF(XMWHICH)) DIR("B")=$S(+XMF(XMWHICH)=XMF(XMWHICH):XMNAME,1:XMF(XMWHICH))
"RTN","XMJMF",210,0)
 F  D  Q:XMABORT!XMOK
"RTN","XMJMF",211,0)
 . S XMOK=1
"RTN","XMJMF",212,0)
 . D ^DIR I $D(DUOUT)!$D(DTOUT) S XMABORT=1 Q
"RTN","XMJMF",213,0)
 . I X="@" K XMF(XMWHICH),XMNAME Q
"RTN","XMJMF",214,0)
 . I Y="" Q
"RTN","XMJMF",215,0)
 . I X["@" D  Q
"RTN","XMJMF",216,0)
 . . S XMF(XMWHICH)=$$UP^XLFSTR(Y)
"RTN","XMJMF",217,0)
 . I XMWHICH="TO" D
"RTN","XMJMF",218,0)
 . . N XMINSTR
"RTN","XMJMF",219,0)
 . . S XMINSTR("ADDR FLAGS")="X"  ; don't create ^TMP("XMY" globals
"RTN","XMJMF",220,0)
 . . D ADDR^XMXADDR(XMDUZ,X,.XMINSTR,"",.XMNAME)
"RTN","XMJMF",221,0)
 . . I '$D(XMNAME) S XMOK=0
"RTN","XMJMF",222,0)
 . E  D
"RTN","XMJMF",223,0)
 . . N DIC,X
"RTN","XMJMF",224,0)
 . . S X=Y
"RTN","XMJMF",225,0)
 . . S DIC="^VA(200,",DIC(0)="MNEQ"
"RTN","XMJMF",226,0)
 . . D ^DIC I $D(DUOUT)!$D(DTOUT) S XMABORT=1 Q
"RTN","XMJMF",227,0)
 . . I Y=-1 S XMOK=0 Q
"RTN","XMJMF",228,0)
 . . S XMF(XMWHICH)=+Y
"RTN","XMJMF",229,0)
 . . S XMNAME=$P(Y,U,2)
"RTN","XMJMF",230,0)
 Q
"RTN","XMJMFA")
0^12^B14012473
"RTN","XMJMFA",1,0)
XMJMFA ;ISC-SF/GMB-Search: Subject starts with ;06/03/99  13:58
"RTN","XMJMFA",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMFA",3,0)
 ; Search for message subjects that partial match input.
"RTN","XMJMFA",4,0)
 ; Replaces ^XMA03 (ISC-WASH/CAP/THM)
"RTN","XMJMFA",5,0)
FIND(XMDUZ,XMSTRING,XMWAIT) ;
"RTN","XMJMFA",6,0)
 N XMKZ,XMCNT,XMABORT,XMLEN,XMFIRST,XMPAGE,XMDETAIL,XMPMAX,XMMORE,XMFLAGS,XMSCREEN,XMFROM,XMZOOM,XMCD,XMOPTION
"RTN","XMJMFA",7,0)
 K ^TMP("XM",$J,"MSG"),^TMP("XM",$J,".")
"RTN","XMJMFA",8,0)
 S (XMKZ,XMZ,XMPAGE,XMCNT,XMZOOM,XMCD,XMABORT)=0,(XMDETAIL,XMMORE)=1,XMPMAX=IOSL-3
"RTN","XMJMFA",9,0)
 D INIT(XMDUZ,XMDETAIL,.XMLEN,.XMFLAGS,.XMSCREEN)
"RTN","XMJMFA",10,0)
 D SETOPT^XMJMLR1(XMDUZ,0,.XMOPTION)
"RTN","XMJMFA",11,0)
 F  D  Q:XMABORT
"RTN","XMJMFA",12,0)
 . I XMCD S XMCD=0,XMDETAIL='XMDETAIL D INIT(XMDUZ,XMDETAIL,.XMLEN,.XMSCREEN)
"RTN","XMJMFA",13,0)
 . D DISPLAY(XMDUZ,XMSTRING,XMFLAGS,XMSCREEN,.XMFROM,XMDETAIL,.XMKZ,.XMCNT,.XMFIRST,.XMPAGE,.XMMORE,.XMLEN,XMZOOM,XMPMAX)
"RTN","XMJMFA",14,0)
 . I XMCNT=0 S XMABORT=1 Q
"RTN","XMJMFA",15,0)
 . D CHOOSE^XMJMLN(XMDUZ,1,0,.XMKZ,.XMFIRST,.XMPAGE,XMMORE,.XMLEN,.XMZOOM,.XMOPTION,"READMSG^XMJMFA",.XMABORT)
"RTN","XMJMFA",16,0)
 . S:'$D(^TMP("XM",$J,"MSG")) XMABORT=1
"RTN","XMJMFA",17,0)
 I XMCNT=0 D
"RTN","XMJMFA",18,0)
 . W "  No matches found."
"RTN","XMJMFA",19,0)
 . Q:'$G(XMWAIT)
"RTN","XMJMFA",20,0)
 . W ! D WAIT^XMXUTIL
"RTN","XMJMFA",21,0)
 K ^TMP("XM",$J,"MSG"),^TMP("XM",$J,".")
"RTN","XMJMFA",22,0)
 Q
"RTN","XMJMFA",23,0)
INIT(XMDUZ,XMDETAIL,XMLEN,XMFLAGS,XMSCREEN) ;
"RTN","XMJMFA",24,0)
 S XMLEN("BSKT")=10
"RTN","XMJMFA",25,0)
 S XMLEN("XMKZ")=3
"RTN","XMJMFA",26,0)
 D INIT^XMJML(XMDUZ,"","",XMDETAIL,.XMLEN)
"RTN","XMJMFA",27,0)
 S XMSCREEN="",XMFLAGS=$S(XMV("ORDER")=-1:"B",1:"")
"RTN","XMJMFA",28,0)
 I XMDUZ=.5 S XMFLAGS=XMFLAGS_"U" Q  ; Ignore file screen
"RTN","XMJMFA",29,0)
 S XMSCREEN=XMSCREEN_"N X S X=^(0)"
"RTN","XMJMFA",30,0)
 N XMMIN
"RTN","XMJMFA",31,0)
 S XMMIN=$P(^XMB(3.7,XMDUZ,0),U,7)
"RTN","XMJMFA",32,0)
 ; If minimum date, don't choose lower date unless already in user's bskt
"RTN","XMJMFA",33,0)
 I XMMIN>0 S XMSCREEN=" I ^(.6)'<"_XMMIN_"!$D(^XMB(3.7,""M"",Y,XMDUZ))"
"RTN","XMJMFA",34,0)
 ; Msg must not be SPOOL, msg must not be a reply.
"RTN","XMJMFA",35,0)
 S XMSCREEN=XMSCREEN_" I $P(X,U,7)'=""S"",$S($P(X,U,8):0,$P(X,U)?1""R"".N:0,1:1)"
"RTN","XMJMFA",36,0)
 Q
"RTN","XMJMFA",37,0)
DISPLAY(XMDUZ,XMSTRING,XMFLAGS,XMSCREEN,XMFROM,XMDETAIL,XMKZ,XMCNT,XMFIRST,XMPAGE,XMMORE,XMLEN,XMZOOM,XMPMAX) ;
"RTN","XMJMFA",38,0)
 N XMREC
"RTN","XMJMFA",39,0)
 S XMFIRST(XMPAGE)=XMKZ
"RTN","XMJMFA",40,0)
 D HEADER^XMJML(XMDETAIL,.XMLEN)
"RTN","XMJMFA",41,0)
 I XMZOOM D  Q
"RTN","XMJMFA",42,0)
 . F  S XMKZ=$O(^TMP("XM",$J,".",XMKZ)) Q:XMKZ=""  D  Q:$Y>XMPMAX
"RTN","XMJMFA",43,0)
 . . S XMREC=^TMP("XM",$J,"MSG",XMKZ)
"RTN","XMJMFA",44,0)
 . . D LISTMSG^XMJML($P(XMREC,U,1),$P(XMREC,U,2),XMKZ,$P(XMREC,U,3),XMDETAIL,.XMLEN)
"RTN","XMJMFA",45,0)
 F  S XMKZ=$O(^TMP("XM",$J,"MSG",XMKZ)) Q:XMKZ=""  D  Q:$Y>XMPMAX
"RTN","XMJMFA",46,0)
 . S XMREC=^TMP("XM",$J,"MSG",XMKZ)
"RTN","XMJMFA",47,0)
 . D LISTMSG^XMJML($P(XMREC,U,1),$P(XMREC,U,2),XMKZ,$P(XMREC,U,3),XMDETAIL,.XMLEN)
"RTN","XMJMFA",48,0)
 Q:$Y>XMPMAX!'XMMORE
"RTN","XMJMFA",49,0)
 ; File screen ^DD(3.9,0,"SCR") insists that user be author or recipient.
"RTN","XMJMFA",50,0)
 ; If FLAGS["U", then file screen is ignored.
"RTN","XMJMFA",51,0)
 D LIST^DIC(3.9,"","",XMFLAGS,XMPMAX-$Y+1,.XMFROM,XMSTRING,"",XMSCREEN)
"RTN","XMJMFA",52,0)
 S:$P(^TMP("DILIST",$J,0),U,3)=0 XMMORE=0
"RTN","XMJMFA",53,0)
 D LISTMSG(XMDUZ,XMDETAIL,.XMCNT,.XMLEN)
"RTN","XMJMFA",54,0)
 S XMKZ=XMCNT
"RTN","XMJMFA",55,0)
 K ^TMP("DILIST",$J)
"RTN","XMJMFA",56,0)
 W:'XMMORE !,"Search finished."
"RTN","XMJMFA",57,0)
 Q
"RTN","XMJMFA",58,0)
LISTMSG(XMDUZ,XMDETAIL,XMCNT,XMLEN) ; Check and List
"RTN","XMJMFA",59,0)
 N XMK,XMKN,XMZ,I
"RTN","XMJMFA",60,0)
 S I=""
"RTN","XMJMFA",61,0)
 F  S I=$O(^TMP("DILIST",$J,2,I),XMV("ORDER")) Q:I'>0  D
"RTN","XMJMFA",62,0)
 . S XMCNT=XMCNT+1
"RTN","XMJMFA",63,0)
 . S XMZ=^TMP("DILIST",$J,2,I)
"RTN","XMJMFA",64,0)
 . S XMK=+$O(^XMB(3.7,"M",XMZ,XMDUZ,0))
"RTN","XMJMFA",65,0)
 . S XMKN=$S(XMK:$P(^XMB(3.7,XMDUZ,2,XMK,0),U),1:"* N/A *")
"RTN","XMJMFA",66,0)
 . I XMK,'$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITM^XMUT4A(XMDUZ,XMK,XMZ)
"RTN","XMJMFA",67,0)
 . D LISTMSG^XMJML(XMK,XMKN,XMCNT,XMZ,XMDETAIL,.XMLEN)
"RTN","XMJMFA",68,0)
 . S ^TMP("XM",$J,"MSG",XMCNT)=XMK_U_XMKN_U_XMZ
"RTN","XMJMFA",69,0)
 Q
"RTN","XMJMFA",70,0)
READMSG ; (XMDUZ,XMKZ,XMREC) <- needed!
"RTN","XMJMFA",71,0)
 N XMK,XMKN,XMZ,XMRDR  ; $G(XMRDR) is checked in READMSG^XMJBM
"RTN","XMJMFA",72,0)
 S XMK=$P(XMREC,U,1),XMKN=$P(XMREC,U,2),XMZ=$P(XMREC,U,3)
"RTN","XMJMFA",73,0)
 I XMDUZ=.5,'XMK,'$$ACCESS^XMXSEC(XMDUZ,XMZ,$G(^XMB(3.9,XMZ,0))) D  Q
"RTN","XMJMFA",74,0)
 . D SHOW^XMJERR
"RTN","XMJMFA",75,0)
 . D WAIT^XMXUTIL
"RTN","XMJMFA",76,0)
 D READMSG^XMJBM(XMDUZ,XMK,XMKN,XMZ)
"RTN","XMJMFA",77,0)
 Q:$D(^XMB(3.7,"M",XMZ,XMDUZ,XMK))
"RTN","XMJMFA",78,0)
 S XMK=+$O(^XMB(3.7,"M",XMZ,XMDUZ,0))
"RTN","XMJMFA",79,0)
 S ^TMP("XM",$J,"MSG",XMKZ)=XMK_U_$S(XMK=0:"* N/A *",1:$P(^XMB(3.7,XMDUZ,2,XMK,0),U))_U_XMZ
"RTN","XMJMFA",80,0)
 Q
"RTN","XMJMFB")
0^13^B63912865
"RTN","XMJMFB",1,0)
XMJMFB ;ISC-SF/GMB-Find message: multiple conditions ;06/07/99  09:49
"RTN","XMJMFB",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMFB",3,0)
 ; Replaces ^XMAL0,^XMAL0A (ISC-WASH/JSH/CAP)
"RTN","XMJMFB",4,0)
 ; XMF("BSKT")  =number - Look in this basket ONLY
"RTN","XMJMFB",5,0)
 ;              =*      - Look in all baskets
"RTN","XMJMFB",6,0)
 ; XMF("SUBJ")  Subject contains this string
"RTN","XMJMFB",7,0)
 ; XMF("SUBJ","S") Look for this string in the subject
"RTN","XMJMFB",8,0)
 ; XMF("FROM")  Message is from this person
"RTN","XMJMFB",9,0)
 ; XMF("TO")    Message is to this person
"RTN","XMJMFB",10,0)
 ; XMF("FDATE") Message was sent on or after this date
"RTN","XMJMFB",11,0)
 ; XMF("TDATE") Message was sent on or before this date
"RTN","XMJMFB",12,0)
 ; XMF("RFROM") Message has a response from this person
"RTN","XMJMFB",13,0)
 ; XMF("TEXT")  Message contains this string
"RTN","XMJMFB",14,0)
 ; XMF("TEXT","S") Look for this string in the message
"RTN","XMJMFB",15,0)
 ; XMF("TEXT","L") =1 - Look in message only
"RTN","XMJMFB",16,0)
 ;                 =2 - Look in both message and responses
"RTN","XMJMFB",17,0)
 ;                 =3 - Look in responses only
"RTN","XMJMFB",18,0)
 ; XMF("TEXT","C") =0 - Search is not case-sensitive
"RTN","XMJMFB",19,0)
 ;                 =1 - Search is case-sensitive
"RTN","XMJMFB",20,0)
FIND1(XMDUZ,XMF,XMWAIT) ;
"RTN","XMJMFB",21,0)
 N XMK,XMKN,XMKZ,XMCNT,XMABORT,XMLEN,XMFIRST,XMPAGE,XMDETAIL,XMPMAX,XMMORE,XMZOOM,XMCD,XMOPTION
"RTN","XMJMFB",22,0)
 K ^TMP("XM",$J,"MSG"),^TMP("XM",$J,".")
"RTN","XMJMFB",23,0)
 S XMKZ="",(XMPAGE,XMCNT,XMZOOM,XMCD,XMABORT)=0,(XMDETAIL,XMMORE)=1,XMPMAX=IOSL-3
"RTN","XMJMFB",24,0)
 D INIT1(XMDUZ,.XMF,XMDETAIL,XMPMAX,.XMK,.XMKN,.XMLEN)
"RTN","XMJMFB",25,0)
 D SETOPT^XMJMLR1(XMDUZ,0,.XMOPTION)
"RTN","XMJMFB",26,0)
 F  D  Q:XMABORT
"RTN","XMJMFB",27,0)
 . I XMCD S XMCD=0,XMDETAIL='XMDETAIL D INIT1(XMDUZ,.XMF,XMDETAIL,XMPMAX,.XMK,.XMKN,.XMLEN)
"RTN","XMJMFB",28,0)
 . D DISPLAY1(XMDUZ,.XMF,XMDETAIL,.XMK,XMKN,.XMKZ,.XMCNT,.XMFIRST,.XMPAGE,.XMMORE,.XMLEN,XMZOOM,XMPMAX)
"RTN","XMJMFB",29,0)
 . I XMCNT=0 S XMABORT=1 Q
"RTN","XMJMFB",30,0)
 . D CHOOSE^XMJMLN(XMDUZ,0,XMK,.XMKZ,.XMFIRST,.XMPAGE,XMMORE,.XMLEN,.XMZOOM,.XMOPTION,"READMSG^XMJMFB",.XMABORT)
"RTN","XMJMFB",31,0)
 . S:'$D(^TMP("XM",$J,"MSG")) XMABORT=1
"RTN","XMJMFB",32,0)
 I XMCNT=0 D
"RTN","XMJMFB",33,0)
 . W *7,"  No matches found."
"RTN","XMJMFB",34,0)
 . Q:'$G(XMWAIT)
"RTN","XMJMFB",35,0)
 . W ! D WAIT^XMXUTIL
"RTN","XMJMFB",36,0)
 K ^TMP("XM",$J,"MSG"),^TMP("XM",$J,".")
"RTN","XMJMFB",37,0)
 Q
"RTN","XMJMFB",38,0)
INIT1(XMDUZ,XMF,XMDETAIL,XMPMAX,XMK,XMKN,XMLEN) ;
"RTN","XMJMFB",39,0)
 S:$D(XMF("SUBJ")) XMF("SUBJ","S")=$$UP^XLFSTR(XMF("SUBJ"))
"RTN","XMJMFB",40,0)
 S:$D(XMF("TEXT")) XMF("TEXT","S")=$S('XMF("TEXT","C"):$$UP^XLFSTR(XMF("TEXT")),1:XMF("TEXT"))
"RTN","XMJMFB",41,0)
 S XMK=XMF("BSKT")
"RTN","XMJMFB",42,0)
 S XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U)
"RTN","XMJMFB",43,0)
 D INIT^XMJML(XMDUZ,XMK,XMKN,XMDETAIL,.XMLEN,1)
"RTN","XMJMFB",44,0)
 Q
"RTN","XMJMFB",45,0)
DISPLAY1(XMDUZ,XMF,XMDETAIL,XMK,XMKN,XMKZ,XMCNT,XMFIRST,XMPAGE,XMMORE,XMLEN,XMZOOM,XMPMAX) ;
"RTN","XMJMFB",46,0)
 N XMREC,XMZ
"RTN","XMJMFB",47,0)
 S XMFIRST(XMPAGE)=XMKZ
"RTN","XMJMFB",48,0)
 D HEADER^XMJML(XMDETAIL,.XMLEN,XMDUZ,XMK,XMKN)
"RTN","XMJMFB",49,0)
 I XMZOOM D  Q
"RTN","XMJMFB",50,0)
 . F  S XMKZ=$O(^TMP("XM",$J,".",XMKZ),XMV("ORDER")) Q:XMKZ=""  D  Q:$Y>XMPMAX
"RTN","XMJMFB",51,0)
 . . S XMREC=^TMP("XM",$J,"MSG",XMKZ)
"RTN","XMJMFB",52,0)
 . . D LISTMSG^XMJML($P(XMREC,U,1),$P(XMREC,U,2),XMKZ,$P(XMREC,U,3),XMDETAIL,.XMLEN)
"RTN","XMJMFB",53,0)
 F  S XMKZ=$O(^TMP("XM",$J,"MSG",XMKZ),XMV("ORDER")) Q:XMKZ=""  D  Q:$Y>XMPMAX
"RTN","XMJMFB",54,0)
 . S XMREC=^TMP("XM",$J,"MSG",XMKZ)
"RTN","XMJMFB",55,0)
 . D LISTMSG^XMJML($P(XMREC,U,1),$P(XMREC,U,2),XMKZ,$P(XMREC,U,3),XMDETAIL,.XMLEN)
"RTN","XMJMFB",56,0)
 Q:$Y>XMPMAX!'XMMORE
"RTN","XMJMFB",57,0)
 D CHKNLST1(XMDUZ,.XMF,XMDETAIL,XMK,XMKN,.XMKZ,.XMCNT,XMPMAX,.XMLEN)
"RTN","XMJMFB",58,0)
 S:XMKZ'>0 XMMORE=0
"RTN","XMJMFB",59,0)
 W:'XMMORE !,"Search finished."
"RTN","XMJMFB",60,0)
 Q
"RTN","XMJMFB",61,0)
CHKNLST1(XMDUZ,XMF,XMDETAIL,XMK,XMKN,XMKZ,XMCNT,XMPMAX,XMLEN) ; Check and List
"RTN","XMJMFB",62,0)
 N XMZ
"RTN","XMJMFB",63,0)
 S:XMKZ="" XMKZ=$O(^TMP("XM",$J,"MSG",""),-XMV("ORDER"))
"RTN","XMJMFB",64,0)
 F  S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ),XMV("ORDER")) Q:XMKZ'>0  D  Q:$Y>XMPMAX
"RTN","XMJMFB",65,0)
 . S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,0))
"RTN","XMJMFB",66,0)
 . I '$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITC^XMUT4A(XMDUZ,XMK,XMZ,XMKZ)
"RTN","XMJMFB",67,0)
 . Q:'$$GOODMSG(XMDUZ,XMK,XMZ,.XMF)
"RTN","XMJMFB",68,0)
 . S XMCNT=XMCNT+1
"RTN","XMJMFB",69,0)
 . D LISTMSG^XMJML(XMK,XMKN,XMKZ,XMZ,XMDETAIL,.XMLEN)
"RTN","XMJMFB",70,0)
 . S ^TMP("XM",$J,"MSG",XMKZ)=XMK_U_XMKN_U_XMZ
"RTN","XMJMFB",71,0)
 Q
"RTN","XMJMFB",72,0)
FINDALL(XMDUZ,XMF) ;
"RTN","XMJMFB",73,0)
 N XMK,XMKN,XMKZZ,XMKZ,XMCNT,XMABORT,XMLEN,XMFIRST,XMPAGE,XMDETAIL,XMPMAX,XMMORE,XMZOOM,XMCD,XMOPTION
"RTN","XMJMFB",74,0)
 S (XMKZ,XMKZZ)="",(XMK,XMPAGE,XMCNT,XMZOOM,XMCD,XMABORT)=0,(XMDETAIL,XMMORE)=1,XMPMAX=IOSL-3
"RTN","XMJMFB",75,0)
 D INITA(XMDUZ,.XMF,.XMK,.XMKN,.XMKZZ,.XMLEN,.XMABORT) Q:XMABORT
"RTN","XMJMFB",76,0)
 D SETOPT^XMJMLR1(XMDUZ,0,.XMOPTION)
"RTN","XMJMFB",77,0)
 K ^TMP("XM",$J,"MSG"),^TMP("XM",$J,".")
"RTN","XMJMFB",78,0)
 F  D  Q:XMABORT
"RTN","XMJMFB",79,0)
 . D DISPLAYA(XMDUZ,.XMF,.XMDETAIL,.XMK,XMKN,.XMKZZ,.XMKZ,.XMCNT,.XMFIRST,.XMPAGE,.XMMORE,.XMLEN,XMZOOM,XMPMAX)
"RTN","XMJMFB",80,0)
 . D CHOOSE^XMJMLN(XMDUZ,1,0,.XMKZ,.XMFIRST,.XMPAGE,XMMORE,.XMLEN,.XMZOOM,.XMOPTION,"READMSG^XMJMFB",.XMABORT)
"RTN","XMJMFB",81,0)
 . S:'$D(^TMP("XM",$J,"MSG")) XMABORT=1
"RTN","XMJMFB",82,0)
 K ^TMP("XM",$J,"MSG"),^TMP("XM",$J,".")
"RTN","XMJMFB",83,0)
 Q
"RTN","XMJMFB",84,0)
INITA(XMDUZ,XMF,XMK,XMKN,XMKZZ,XMLEN,XMABORT) ;
"RTN","XMJMFB",85,0)
 S:$D(XMF("SUBJ")) XMF("SUBJ","S")=$$UP^XLFSTR(XMF("SUBJ"))
"RTN","XMJMFB",86,0)
 S:$D(XMF("TEXT")) XMF("TEXT","S")=$S('XMF("TEXT","C"):$$UP^XLFSTR(XMF("TEXT")),1:XMF("TEXT"))
"RTN","XMJMFB",87,0)
 S XMLEN("XMKZ")=0
"RTN","XMJMFB",88,0)
 F  S XMK=$O(^XMB(3.7,XMDUZ,2,XMK)) Q:XMK'>0  D  Q:$D(XMKN)
"RTN","XMJMFB",89,0)
 . F  S XMKZZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZZ),XMV("ORDER")) Q:XMKZZ'>0  D  Q:$D(XMKN)
"RTN","XMJMFB",90,0)
 . . S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZZ,0))
"RTN","XMJMFB",91,0)
 . . Q:'$$GOODMSG(XMDUZ,XMK,XMZ,.XMF)
"RTN","XMJMFB",92,0)
 . . S XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U)
"RTN","XMJMFB",93,0)
 I $D(XMKN) S XMKZZ=XMKZZ-XMV("ORDER") Q
"RTN","XMJMFB",94,0)
 S XMABORT=1
"RTN","XMJMFB",95,0)
 W *7,"  No matches found.",! D WAIT^XMXUTIL
"RTN","XMJMFB",96,0)
 Q
"RTN","XMJMFB",97,0)
DISPLAYA(XMDUZ,XMF,XMDETAIL,XMK,XMKN,XMKZZ,XMKZ,XMCNT,XMFIRST,XMPAGE,XMMORE,XMLEN,XMZOOM,XMPMAX) ;
"RTN","XMJMFB",98,0)
 N XMREC,XMZ
"RTN","XMJMFB",99,0)
 S XMFIRST(XMPAGE)=XMKZ
"RTN","XMJMFB",100,0)
 I XMCD D
"RTN","XMJMFB",101,0)
 . S XMCD=0,XMDETAIL='XMDETAIL
"RTN","XMJMFB",102,0)
 . D INIT^XMJML(XMDUZ,XMK,XMKN,XMDETAIL,.XMLEN)
"RTN","XMJMFB",103,0)
 E  I $L(XMCNT+XMPMAX)>XMLEN("XMKZ") D
"RTN","XMJMFB",104,0)
 . S XMLEN("XMKZ")=$L(XMCNT+XMPMAX)
"RTN","XMJMFB",105,0)
 . D INIT^XMJML(XMDUZ,XMK,XMKN,XMDETAIL,.XMLEN)
"RTN","XMJMFB",106,0)
 D HEADER^XMJML(XMDETAIL,.XMLEN)
"RTN","XMJMFB",107,0)
 I XMZOOM D  Q
"RTN","XMJMFB",108,0)
 . F  S XMKZ=$O(^TMP("XM",$J,".",XMKZ)) Q:XMKZ=""  D  Q:$Y>XMPMAX
"RTN","XMJMFB",109,0)
 . . S XMREC=^TMP("XM",$J,"MSG",XMKZ)
"RTN","XMJMFB",110,0)
 . . D LISTMSG^XMJML($P(XMREC,U,1),$P(XMREC,U,2),XMKZ,$P(XMREC,U,3),XMDETAIL,.XMLEN)
"RTN","XMJMFB",111,0)
 F  S XMKZ=$O(^TMP("XM",$J,"MSG",XMKZ)) Q:XMKZ=""  D  Q:$Y>XMPMAX
"RTN","XMJMFB",112,0)
 . S XMREC=^TMP("XM",$J,"MSG",XMKZ)
"RTN","XMJMFB",113,0)
 . D LISTMSG^XMJML($P(XMREC,U,1),$P(XMREC,U,2),XMKZ,$P(XMREC,U,3),XMDETAIL,.XMLEN)
"RTN","XMJMFB",114,0)
 Q:$Y>XMPMAX!'XMMORE
"RTN","XMJMFB",115,0)
 S XMK=XMK-.01
"RTN","XMJMFB",116,0)
 F  S XMK=$O(^XMB(3.7,XMDUZ,2,XMK)) Q:XMK'>0  D  Q:$Y>XMPMAX
"RTN","XMJMFB",117,0)
 . S XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U)
"RTN","XMJMFB",118,0)
 . D CHKNLSTA(XMDUZ,.XMF,XMDETAIL,XMK,XMKN,.XMKZZ,.XMCNT,XMPMAX,.XMLEN)
"RTN","XMJMFB",119,0)
 I XMK'>0,XMKZZ'>0 S XMMORE=0
"RTN","XMJMFB",120,0)
 S XMKZ=XMCNT
"RTN","XMJMFB",121,0)
 W:'XMMORE !,"Search finished."
"RTN","XMJMFB",122,0)
 Q
"RTN","XMJMFB",123,0)
CHKNLSTA(XMDUZ,XMF,XMDETAIL,XMK,XMKN,XMKZZ,XMCNT,XMPMAX,XMLEN) ; Check and List
"RTN","XMJMFB",124,0)
 N XMZ
"RTN","XMJMFB",125,0)
 F  S XMKZZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZZ),XMV("ORDER")) Q:XMKZZ'>0  D  Q:$Y>XMPMAX
"RTN","XMJMFB",126,0)
 . S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZZ,0))
"RTN","XMJMFB",127,0)
 . I '$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITC^XMUT4A(XMDUZ,XMK,XMZ,XMKZZ)
"RTN","XMJMFB",128,0)
 . Q:'$$GOODMSG(XMDUZ,XMK,XMZ,.XMF)
"RTN","XMJMFB",129,0)
 . I $L(XMKN)>$G(XMLEN("BSKT")) D
"RTN","XMJMFB",130,0)
 . . S XMLEN("BSKT")=$$MIN^XLFMTH($L(XMKN),10)
"RTN","XMJMFB",131,0)
 . . D INIT^XMJML(XMDUZ,XMK,XMKN,XMDETAIL,.XMLEN)
"RTN","XMJMFB",132,0)
 . S XMCNT=XMCNT+1
"RTN","XMJMFB",133,0)
 . D LISTMSG^XMJML(XMK,XMKN,XMCNT,XMZ,XMDETAIL,.XMLEN)
"RTN","XMJMFB",134,0)
 . S ^TMP("XM",$J,"MSG",XMCNT)=XMK_U_XMKN_U_XMZ
"RTN","XMJMFB",135,0)
 Q
"RTN","XMJMFB",136,0)
GOODMSG(XMDUZ,XMK,XMZ,XMF) ;
"RTN","XMJMFB",137,0)
 N XMZREC,XMNOGOOD,XMZFROM,XMZDATE
"RTN","XMJMFB",138,0)
 S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMJMFB",139,0)
 I XMZREC="" D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q 0
"RTN","XMJMFB",140,0)
 I $D(XMF("SUBJ")),$$UP^XLFSTR($P(XMZREC,U,1))'[XMF("SUBJ","S") Q 0
"RTN","XMJMFB",141,0)
 I $D(XMF("FROM")) Q:'$$GOODFROM(XMZREC,XMF("FROM")) 0
"RTN","XMJMFB",142,0)
 I $D(XMF("FDATE"))!$D(XMF("TDATE")) D  Q:XMNOGOOD 0
"RTN","XMJMFB",143,0)
 . S XMNOGOOD=1
"RTN","XMJMFB",144,0)
 . S XMZDATE=$P(XMZREC,U,3)
"RTN","XMJMFB",145,0)
 . S:XMZDATE'=+XMZDATE XMZDATE=$$CONVERT^XMXUTIL1(XMZDATE)
"RTN","XMJMFB",146,0)
 . S XMZDATE=$P(XMZDATE,".")
"RTN","XMJMFB",147,0)
 . I $D(XMF("FDATE")),XMZDATE<XMF("FDATE") Q
"RTN","XMJMFB",148,0)
 . I $D(XMF("TDATE")),XMF("TDATE")<XMZDATE Q
"RTN","XMJMFB",149,0)
 . S XMNOGOOD=0
"RTN","XMJMFB",150,0)
 I $D(XMF("TO")) D  Q:XMNOGOOD 0
"RTN","XMJMFB",151,0)
 . I $D(^XMB(3.9,XMZ,6,"B",XMF("TO"))) S XMNOGOOD=0 Q
"RTN","XMJMFB",152,0)
 . S XMNOGOOD=1
"RTN","XMJMFB",153,0)
 . Q:XMF("TO")'["@"
"RTN","XMJMFB",154,0)
 . N XMTOX,XMTO
"RTN","XMJMFB",155,0)
 . S XMTO=""
"RTN","XMJMFB",156,0)
 . F  S XMTO=$O(^XMB(3.9,XMZ,6,"B",XMTO)) Q:XMTO=""  D  Q:'XMNOGOOD
"RTN","XMJMFB",157,0)
 . . Q:XMTO'["@"
"RTN","XMJMFB",158,0)
 . . S XMTOX=$$UP^XLFSTR(XMTO)
"RTN","XMJMFB",159,0)
 . . Q:$P(XMTOX,"@")'[$P(XMF("TO"),"@")
"RTN","XMJMFB",160,0)
 . . Q:$P(XMTOX,"@",2)'[$P(XMF("TO"),"@",2)
"RTN","XMJMFB",161,0)
 . . S XMNOGOOD=0
"RTN","XMJMFB",162,0)
 I $D(XMF("RFROM")) D  Q:XMNOGOOD 0
"RTN","XMJMFB",163,0)
 . N XMIEN,XMZR
"RTN","XMJMFB",164,0)
 . S XMNOGOOD=1
"RTN","XMJMFB",165,0)
 . S XMIEN=0
"RTN","XMJMFB",166,0)
 . F  S XMIEN=$O(^XMB(3.9,XMZ,3,XMIEN)) Q:'XMIEN  S XMZR=^(XMIEN,0) I $$GOODFROM($G(^XMB(3.9,XMZR,0)),XMF("RFROM")) S XMNOGOOD=0 Q
"RTN","XMJMFB",167,0)
 I $D(XMF("TEXT")) D  Q:XMNOGOOD 0
"RTN","XMJMFB",168,0)
 . S XMNOGOOD=1
"RTN","XMJMFB",169,0)
 . I XMF("TEXT","L")<3 D  Q:XMF("TEXT","L")=1!(XMNOGOOD=0)
"RTN","XMJMFB",170,0)
 . . S:$$GOODTEXT(XMZ,XMF("TEXT","S"),XMF("TEXT","C")) XMNOGOOD=0
"RTN","XMJMFB",171,0)
 . N XMIEN,XMZR
"RTN","XMJMFB",172,0)
 . S XMIEN=0
"RTN","XMJMFB",173,0)
 . F  S XMIEN=$O(^XMB(3.9,XMZ,3,XMIEN)) Q:'XMIEN  S XMZR=^(XMIEN,0) I $$GOODTEXT(XMZR,XMF("TEXT","S"),XMF("TEXT","C")) S XMNOGOOD=0 Q
"RTN","XMJMFB",174,0)
 Q 1
"RTN","XMJMFB",175,0)
GOODFROM(XMZREC,XMF) ; Returns 1 if msg is from XMF; 0 if not
"RTN","XMJMFB",176,0)
 N XMZFROM
"RTN","XMJMFB",177,0)
 S XMZFROM=$P(XMZREC,U,2)
"RTN","XMJMFB",178,0)
 I XMF=+XMF,XMF=XMZFROM Q 1
"RTN","XMJMFB",179,0)
 Q:XMF'["@" 0
"RTN","XMJMFB",180,0)
 S XMZFROM=$$UP^XLFSTR(XMZFROM)
"RTN","XMJMFB",181,0)
 Q:$P(XMZFROM,"@")'[$P(XMF,"@") 0
"RTN","XMJMFB",182,0)
 Q:$P(XMZFROM,"@",2)'[$P(XMF,"@",2) 0
"RTN","XMJMFB",183,0)
 Q 1
"RTN","XMJMFB",184,0)
GOODTEXT(XMZ,XMF,XMFMATTR) ; Returns positive number if msg contains XMF; 0 if not
"RTN","XMJMFB",185,0)
 N I
"RTN","XMJMFB",186,0)
 S I=.999999
"RTN","XMJMFB",187,0)
 I XMFMATTR D
"RTN","XMJMFB",188,0)
 . F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  Q:^(I,0)[XMF
"RTN","XMJMFB",189,0)
 E  D
"RTN","XMJMFB",190,0)
 . F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  Q:$$UP^XLFSTR(^(I,0))[XMF
"RTN","XMJMFB",191,0)
 Q +I
"RTN","XMJMFB",192,0)
READMSG ; (XMDUZ,XMKZ,XMREC) <- needed!
"RTN","XMJMFB",193,0)
 N XMK,XMKN,XMZ,XMRDR  ; $G(XMRDR) is checked in READMSG^XMJBM
"RTN","XMJMFB",194,0)
 S XMK=$P(XMREC,U,1),XMKN=$P(XMREC,U,2),XMZ=$P(XMREC,U,3)
"RTN","XMJMFB",195,0)
 D READMSG^XMJBM(XMDUZ,XMK,XMKN,XMZ)
"RTN","XMJMFB",196,0)
 Q:$D(^XMB(3.7,"M",XMZ,XMDUZ,XMK))
"RTN","XMJMFB",197,0)
 I XMF("BSKT")=XMK K ^TMP("XM",$J,"MSG",XMKZ) Q
"RTN","XMJMFB",198,0)
 S XMK=+$O(^XMB(3.7,"M",XMZ,XMDUZ,0))
"RTN","XMJMFB",199,0)
 S ^TMP("XM",$J,"MSG",XMKZ)=XMK_U_$S(XMK=0:"* N/A *",1:$P(^XMB(3.7,XMDUZ,2,XMK,0),U))_U_XMZ
"RTN","XMJMFB",200,0)
 Q
"RTN","XMJML")
0^14^B33697968
"RTN","XMJML",1,0)
XMJML ;ISC-SF/GMB-List messages in basket (can't read) ;06/29/99  14:28
"RTN","XMJML",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJML",3,0)
 ; Replaces 1^XMAL0 (ISC-WASH/THM/CAP)
"RTN","XMJML",4,0)
LIST(XMDUZ,XMK,XMKN,XMKZ,XMDETAIL) ; List messages in one basket
"RTN","XMJML",5,0)
 ; (This routine does NOT let the user read the messages.)
"RTN","XMJML",6,0)
 ; XMDETAIL 0=Summary; 1=Detailed
"RTN","XMJML",7,0)
 N XMLEN,XMORDER,XMABORT
"RTN","XMJML",8,0)
 I XMDUZ=.5,XMK>999 S XMORDER=XMV("ORDER"),XMV("ORDER")=1
"RTN","XMJML",9,0)
 S XMABORT=0
"RTN","XMJML",10,0)
 D INIT(XMDUZ,XMK,XMKN,XMDETAIL,.XMLEN,1)
"RTN","XMJML",11,0)
 D HEADER(XMDETAIL,.XMLEN,XMDUZ,XMK,XMKN,1)
"RTN","XMJML",12,0)
 S:XMKZ'="" XMKZ=XMKZ-XMV("ORDER")
"RTN","XMJML",13,0)
 F  S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ),XMV("ORDER")) Q:XMKZ=""  D  Q:XMABORT
"RTN","XMJML",14,0)
 . S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,""))
"RTN","XMJML",15,0)
 . I '$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITC^XMUT4A(XMDUZ,XMK,XMZ,XMKZ)
"RTN","XMJML",16,0)
 . I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMJML",17,0)
 . I $Y+4>IOSL D PAGE^XMXUTIL(.XMABORT) Q:XMABORT  D
"RTN","XMJML",18,0)
 . . D HEADER(XMDETAIL,.XMLEN,XMDUZ,XMK,XMKN,1)
"RTN","XMJML",19,0)
 . D LISTMSG(XMK,XMKN,XMKZ,XMZ,XMDETAIL,.XMLEN)
"RTN","XMJML",20,0)
 I $D(XMORDER) S XMV("ORDER")=XMORDER
"RTN","XMJML",21,0)
 Q
"RTN","XMJML",22,0)
LISTNEW(XMDUZ,XMK,XMKN) ; List new messages in one basket
"RTN","XMJML",23,0)
 ; (This routine does NOT let the user read the messages.)
"RTN","XMJML",24,0)
 ; XMDETAIL 0=Summary; 1=Detailed
"RTN","XMJML",25,0)
 I '$O(^XMB(3.7,XMDUZ,"N0",XMK,0)) D  Q
"RTN","XMJML",26,0)
 . I $P(^XMB(3.7,XMDUZ,2,XMK,0),U,2) S $P(^(0),U,2)=0
"RTN","XMJML",27,0)
 . W !!,$$EZBLD^DIALOG(34013),*7,!
"RTN","XMJML",28,0)
 N XMKZ,XMZ,XMLEN,XMDETAIL,XMTYPE,XMABORT
"RTN","XMJML",29,0)
 S XMDETAIL=1,XMTYPE="N0",XMABORT=0
"RTN","XMJML",30,0)
 D INIT(XMDUZ,XMK,XMKN,XMDETAIL,.XMLEN,1)
"RTN","XMJML",31,0)
 D HEADER(XMDETAIL,.XMLEN,XMDUZ,XMK,XMKN)
"RTN","XMJML",32,0)
 S XMZ=""
"RTN","XMJML",33,0)
 F  S XMZ=$O(^XMB(3.7,XMDUZ,XMTYPE,XMK,XMZ),XMV("ORDER")) Q:XMZ=""  D  Q:XMABORT
"RTN","XMJML",34,0)
 . S XMKZ=$P($G(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)),U,2)
"RTN","XMJML",35,0)
 . I 'XMKZ D
"RTN","XMJML",36,0)
 . . D ADDITN^XMUT4A(XMDUZ,XMTYPE,XMK,XMZ)
"RTN","XMJML",37,0)
 . . S XMKZ=$P($G(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)),U,2)
"RTN","XMJML",38,0)
 . I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMJML",39,0)
 . I $Y+4>IOSL D PAGE^XMXUTIL(.XMABORT) Q:XMABORT  D
"RTN","XMJML",40,0)
 . . D HEADER(XMDETAIL,.XMLEN,XMDUZ,XMK,XMKN)
"RTN","XMJML",41,0)
 . D LISTMSG(XMK,XMKN,XMKZ,XMZ,XMDETAIL,.XMLEN)
"RTN","XMJML",42,0)
 Q
"RTN","XMJML",43,0)
LISTPRI(XMDUZ) ; List priority messages in all baskets (Replaces PRIO^XMAL0)
"RTN","XMJML",44,0)
 ; (This routine does NOT let the user read the messages.)
"RTN","XMJML",45,0)
 ; XMDETAIL 0=Summary; 1=Detailed
"RTN","XMJML",46,0)
 N XMK,XMKN,XMKZ,XMZ,XMLEN,XMDETAIL,XMTYPE,XMABORT
"RTN","XMJML",47,0)
 S XMDETAIL=1,XMTYPE="N",XMABORT=0
"RTN","XMJML",48,0)
 D INIT^XMJMLN(XMDUZ,XMTYPE,XMDETAIL,1,.XMLEN)
"RTN","XMJML",49,0)
 D HEADER(XMDETAIL,.XMLEN)
"RTN","XMJML",50,0)
 S XMK=""
"RTN","XMJML",51,0)
 F  S XMK=$O(^XMB(3.7,XMDUZ,XMTYPE,XMK)) Q:XMK=""  D  Q:XMABORT
"RTN","XMJML",52,0)
 . S XMZ="",XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1)
"RTN","XMJML",53,0)
 . F  S XMZ=$O(^XMB(3.7,XMDUZ,XMTYPE,XMK,XMZ),XMV("ORDER")) Q:XMZ=""  D  Q:XMABORT
"RTN","XMJML",54,0)
 . . S XMKZ=$P($G(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)),U,2)
"RTN","XMJML",55,0)
 . . I 'XMKZ D
"RTN","XMJML",56,0)
 . . . D ADDITN^XMUT4A(XMDUZ,XMTYPE,XMK,XMZ)
"RTN","XMJML",57,0)
 . . . S XMKZ=$P($G(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)),U,2)
"RTN","XMJML",58,0)
 . . I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMJML",59,0)
 . . I $Y+4>IOSL D PAGE^XMXUTIL(.XMABORT) Q:XMABORT  D
"RTN","XMJML",60,0)
 . . . D HEADER(XMDETAIL,.XMLEN)
"RTN","XMJML",61,0)
 . . D LISTMSG(XMK,XMKN,XMKZ,XMZ,XMDETAIL,.XMLEN)
"RTN","XMJML",62,0)
 Q
"RTN","XMJML",63,0)
INIT(XMDUZ,XMK,XMKN,XMDETAIL,XMLEN,XMONE) ;
"RTN","XMJML",64,0)
 N XMLEFT
"RTN","XMJML",65,0)
 S XMLEFT=79
"RTN","XMJML",66,0)
 I XMDETAIL D
"RTN","XMJML",67,0)
 . S XMLEN("XMZ")=$L($O(^XMB(3.9,":"),-1))+2
"RTN","XMJML",68,0)
 . ;S XMLEN("XMZ")=$L($O(^XMB(3.7,XMDUZ,2,XMK,1,":"),-1))+2
"RTN","XMJML",69,0)
 . S XMLEN("LINE")=5
"RTN","XMJML",70,0)
 . I '$G(XMONE),'$D(XMLEN("BSKT")) S XMLEN("BSKT")=$$MIN^XLFMTH($L(XMKN),10)
"RTN","XMJML",71,0)
 . S XMLEN("RESP")=9
"RTN","XMJML",72,0)
 . S XMLEN("DATE")=9
"RTN","XMJML",73,0)
 . S XMLEFT=XMLEFT-XMLEN("XMZ")-XMLEN("LINE")-$G(XMLEN("BSKT"))-XMLEN("RESP")-XMLEN("DATE")-3+$S($G(XMLEN("BSKT")):0,1:1)
"RTN","XMJML",74,0)
 S:'$D(XMLEN("XMKZ")) XMLEN("XMKZ")=$L($O(^XMB(3.7,XMDUZ,2,XMK,1,"C",""),-1))
"RTN","XMJML",75,0)
 S XMLEFT=XMLEFT-XMLEN("XMKZ")-5
"RTN","XMJML",76,0)
 S XMLEN("SUBJ")=$S(XMDETAIL:XMLEFT*2\3,1:XMLEFT\2+1)
"RTN","XMJML",77,0)
 S XMLEN("FROM")=XMLEFT-XMLEN("SUBJ")
"RTN","XMJML",78,0)
 Q
"RTN","XMJML",79,0)
LISTMSG(XMK,XMKN,XMKZ,XMZ,XMDETAIL,XMLEN) ;
"RTN","XMJML",80,0)
 N XMZREC
"RTN","XMJML",81,0)
 S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMJML",82,0)
 ; *** Should the indicator of priority come from the basket xref?
"RTN","XMJML",83,0)
 I XMDUZ=.5,XMK>999 W !,$S($D(^TMP("XM",$J,".",XMKZ)):">",1:" "),$S($D(^XMB(3.7,.5,2,"AC",1,XMK,XMZ)):"$",1:" "),$J(XMKZ,XMLEN("XMKZ")),". "
"RTN","XMJML",84,0)
 E  W !,$S($D(^TMP("XM",$J,".",XMKZ)):">",1:" "),$S('$D(^XMB(3.7,XMDUZ,"N0",XMK,XMZ)):" ",$P(XMZREC,U,7)["P":"!",1:"*"),$J(XMKZ,XMLEN("XMKZ")),". "
"RTN","XMJML",85,0)
 I XMDETAIL D
"RTN","XMJML",86,0)
 . W:$D(XMLEN("BSKT")) $$LJ^XLFSTR($E(XMKN,1,XMLEN("BSKT")),XMLEN("BSKT"))," "
"RTN","XMJML",87,0)
 . W $J("["_XMZ_"]",XMLEN("XMZ"))," ",$E($$DATE^XMXUTIL2(XMZREC,0),1,XMLEN("DATE"))
"RTN","XMJML",88,0)
 . W " ",$$MELD^XMXUTIL1($$SUBJ^XMXUTIL2(XMZREC),$$LINES(XMZ),XMLEN("SUBJ")+XMLEN("LINE"))
"RTN","XMJML",89,0)
 . W " ",$$MELD^XMXUTIL1($$NAME^XMXUTIL($P(XMZREC,U,2)),$$RESPONSE(XMDUZ,XMK,XMZ),XMLEN("FROM")+9)
"RTN","XMJML",90,0)
 E  D
"RTN","XMJML",91,0)
 . W $$LJ^XLFSTR($E($$SUBJ^XMXUTIL2(XMZREC),1,XMLEN("SUBJ")),XMLEN("SUBJ"))," ",$E($$NAME^XMXUTIL($P(XMZREC,U,2)),1,XMLEN("FROM"))
"RTN","XMJML",92,0)
 Q
"RTN","XMJML",93,0)
HEADER(XMDETAIL,XMLEN,XMDUZ,XMK,XMKN,XMCNTS) ;
"RTN","XMJML",94,0)
 I $D(XMLEN("BSKT")) W @IOF
"RTN","XMJML",95,0)
 E  D
"RTN","XMJML",96,0)
 . W @IOF,XMKN," ",$$EZBLD^DIALOG(34011)
"RTN","XMJML",97,0)
 . I $G(XMCNTS) D
"RTN","XMJML",98,0)
 . . N XMNEWCNT,XMCNT
"RTN","XMJML",99,0)
 . . S XMNEWCNT=$P(^XMB(3.7,XMDUZ,2,XMK,0),U,2)
"RTN","XMJML",100,0)
 . . S XMCNT=$P(^XMB(3.7,XMDUZ,2,XMK,1,0),U,4)
"RTN","XMJML",101,0)
 . . W ", ",XMCNT,$S(XMCNT>1:$$EZBLD^DIALOG(34007.1)_" ("_$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",0))_"-"_$O(^(""),-1)_")",1:$$EZBLD^DIALOG(34007)),$S(XMNEWCNT:", "_XMNEWCNT_$$EZBLD^DIALOG(34008),1:"")
"RTN","XMJML",102,0)
 . W !
"RTN","XMJML",103,0)
 I XMDETAIL D
"RTN","XMJML",104,0)
 . W $$LJ^XLFSTR($$EZBLD^DIALOG(34001),XMLEN("XMZ")+$G(XMLEN("BSKT"),-1)+XMLEN("XMKZ")+XMLEN("DATE")+7,".")
"RTN","XMJML",105,0)
 . W $$LJ^XLFSTR($$EZBLD^DIALOG(34002),XMLEN("SUBJ"),".")
"RTN","XMJML",106,0)
 . W $$EZBLD^DIALOG(34003.1),"."
"RTN","XMJML",107,0)
 . W $$LJ^XLFSTR($$EZBLD^DIALOG(34006),XMLEN("FROM"),"."),$$EZBLD^DIALOG(34004)
"RTN","XMJML",108,0)
 E  D
"RTN","XMJML",109,0)
 . W $$LJ^XLFSTR($$EZBLD^DIALOG(34005),79-XMLEN("FROM"),"."),$$LJ^XLFSTR($$EZBLD^DIALOG(34006),XMLEN("FROM"),".")
"RTN","XMJML",110,0)
 Q
"RTN","XMJML",111,0)
LINES(XMZ) ;
"RTN","XMJML",112,0)
 Q +$P($G(^XMB(3.9,XMZ,2,0)),U,4)
"RTN","XMJML",113,0)
RESPONSE(XMDUZ,XMK,XMZ) ;
"RTN","XMJML",114,0)
 I XMDUZ=.5,XMK>999 Q ""
"RTN","XMJML",115,0)
 N XMPTR,XMRESP,XMRESPS
"RTN","XMJML",116,0)
 S XMRESPS=+$P($G(^XMB(3.9,XMZ,3,0)),U,4)
"RTN","XMJML",117,0)
 I XMRESPS=0 Q ""
"RTN","XMJML",118,0)
 ;S XMPTR=$O(^XMB(3.9,XMZ,1,"C",$S(XMDUZ=.6:DUZ,1:XMDUZ),0))
"RTN","XMJML",119,0)
 S XMPTR=+$O(^XMB(3.9,XMZ,1,"C",XMDUZ,0))
"RTN","XMJML",120,0)
 S XMRESP=+$P($G(^XMB(3.9,XMZ,1,XMPTR,0)),U,2)
"RTN","XMJML",121,0)
 Q XMRESP_"/"_XMRESPS
"RTN","XMJML",122,0)
LISTTMP ; List messages in ^TMP global
"RTN","XMJML",123,0)
 ; (This routine does NOT let the user read the messages.)
"RTN","XMJML",124,0)
 ; The following variables are expected to exist:
"RTN","XMJML",125,0)
 ; XMDETAIL 0=Summary; 1=Detailed
"RTN","XMJML",126,0)
 ; XMLEN
"RTN","XMJML",127,0)
 N XMK,XMKN,XMKZ,XMZ,XMABORT,XMREC
"RTN","XMJML",128,0)
 S XMABORT=0
"RTN","XMJML",129,0)
 D HEADER(XMDETAIL,.XMLEN)
"RTN","XMJML",130,0)
 S XMKZ=0
"RTN","XMJML",131,0)
 F  S XMKZ=$O(^TMP("XM",$J,"MSG",XMKZ)) Q:XMKZ=""  D  Q:XMABORT
"RTN","XMJML",132,0)
 . I $Y+4>IOSL D PAGE^XMXUTIL(.XMABORT) Q:XMABORT  D
"RTN","XMJML",133,0)
 . . D HEADER(XMDETAIL,.XMLEN)
"RTN","XMJML",134,0)
 . S XMREC=^TMP("XM",$J,"MSG",XMKZ)
"RTN","XMJML",135,0)
 . S XMK=$P(XMREC,U,1),XMKN=$P(XMREC,U,2),XMZ=$P(XMREC,U,3)
"RTN","XMJML",136,0)
 . D LISTMSG(XMK,XMKN,XMKZ,XMZ,XMDETAIL,.XMLEN)
"RTN","XMJML",137,0)
 Q
"RTN","XMJML",138,0)
 ;
"RTN","XMJML",139,0)
 ;#34001 = *=New/!=Priority
"RTN","XMJML",140,0)
 ;#34002 = Subject
"RTN","XMJML",141,0)
 ;#34003/#34003.1 = Line / Lines
"RTN","XMJML",142,0)
 ;#34004 = Read/Rcvd
"RTN","XMJML",143,0)
 ;#34005 = *=New/!=Priority.......Subject
"RTN","XMJML",144,0)
 ;#34006 = From
"RTN","XMJML",145,0)
 ;#34007/34007.1 = message / messages
"RTN","XMJML",146,0)
 ;#34008 = new
"RTN","XMJML",147,0)
 ;#34011 = Basket
"RTN","XMJML",148,0)
 ;#34013 = No NEW messages
"RTN","XMJMLN")
0^15^B52385719
"RTN","XMJMLN",1,0)
XMJMLN ;ISC-SF/GB-List/Read new messages ;03/16/99  14:55
"RTN","XMJMLN",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMLN",3,0)
 ; Replaces LIST,PRIO^XMA0A (ISC-WASH/CAP)
"RTN","XMJMLN",4,0)
LISTONE(XMDUZ,XMK,XMKN,XMTYPE) ; List new/priority messages in one basket
"RTN","XMJMLN",5,0)
 ; XMTYPE   N0=New; N=Priority
"RTN","XMJMLN",6,0)
 N XMKZ,XMZ,XMCNT,XMABORT,XMLEN,XMFIRST,XMPAGE,XMDETAIL,XMPMAX,XMKALL,XMIA,XMZOOM,XMMORE,XMCD,XMOPTION
"RTN","XMJMLN",7,0)
 S XMIA=1 ; Interactive
"RTN","XMJMLN",8,0)
 I '$D(^XMB(3.7,XMDUZ,XMTYPE,XMK)) D  Q
"RTN","XMJMLN",9,0)
 . W !!,"You have no new",$S(XMTYPE="N":" priority",1:"")," messages in this basket."
"RTN","XMJMLN",10,0)
 K ^TMP("XM",$J,"MSG"),^TMP("XM",$J,".")
"RTN","XMJMLN",11,0)
 S (XMKZ,XMZ)="",(XMPAGE,XMCNT,XMKALL,XMZOOM,XMCD,XMABORT)=0,(XMDETAIL,XMMORE)=1
"RTN","XMJMLN",12,0)
 S XMPMAX=IOSL-3
"RTN","XMJMLN",13,0)
 D SETOPT^XMJMLR1(XMDUZ,0,.XMOPTION)
"RTN","XMJMLN",14,0)
 S XMLEN("XMKZ")=$L($P(^XMB(3.7,XMDUZ,2,XMK,0),U,2))
"RTN","XMJMLN",15,0)
 D INIT^XMJML(XMDUZ,XMK,XMKN,XMDETAIL,.XMLEN,1)
"RTN","XMJMLN",16,0)
 F  D  Q:XMABORT
"RTN","XMJMLN",17,0)
 . I XMCD S XMCD=0,XMDETAIL='XMDETAIL D INIT^XMJML(XMDUZ,XMK,XMKN,XMDETAIL,.XMLEN,1)
"RTN","XMJMLN",18,0)
 . D DISPLAY(XMDUZ,XMKALL,XMTYPE,XMDETAIL,XMK,XMKN,.XMKZ,.XMZ,.XMCNT,.XMFIRST,.XMPAGE,.XMMORE,.XMLEN,XMZOOM,XMPMAX)
"RTN","XMJMLN",19,0)
 . D CHOOSE(XMDUZ,XMKALL,XMK,.XMKZ,.XMFIRST,.XMPAGE,XMMORE,.XMLEN,.XMZOOM,.XMOPTION,"READMSG",.XMABORT)
"RTN","XMJMLN",20,0)
 . S:'$D(^XMB(3.7,XMDUZ,XMTYPE,XMK)) XMABORT=1
"RTN","XMJMLN",21,0)
 K ^TMP("XM",$J,"MSG"),^TMP("XM",$J,".")
"RTN","XMJMLN",22,0)
 Q
"RTN","XMJMLN",23,0)
LISTALL(XMDUZ,XMTYPE) ; List new/priority messages in all baskets
"RTN","XMJMLN",24,0)
 ; XMTYPE   N0=New; N=Priority
"RTN","XMJMLN",25,0)
 N XMK,XMKZ,XMZ,XMCNT,XMABORT,XMLEN,XMFIRST,XMPAGE,XMDETAIL,XMPMAX,XMKALL,XMIA,XMZOOM,XMMORE,XMCD,XMOPTION
"RTN","XMJMLN",26,0)
 S XMIA=1 ; Interactive
"RTN","XMJMLN",27,0)
 I '$D(^XMB(3.7,XMDUZ,XMTYPE)) D  Q
"RTN","XMJMLN",28,0)
 . W !!,"You have no new",$S(XMTYPE="N":" priority",1:"")," messages."
"RTN","XMJMLN",29,0)
 K ^TMP("XM",$J,"MSG"),^TMP("XM",$J,".")
"RTN","XMJMLN",30,0)
 S (XMKZ,XMZ)="",(XMPAGE,XMCNT,XMZOOM,XMCD,XMABORT)=0,(XMK,XMDETAIL,XMMORE,XMKALL)=1
"RTN","XMJMLN",31,0)
 S XMPMAX=IOSL-3
"RTN","XMJMLN",32,0)
 D SETOPT^XMJMLR1(XMDUZ,0,.XMOPTION)
"RTN","XMJMLN",33,0)
 D INIT(XMDUZ,XMTYPE,XMDETAIL,0,.XMLEN)
"RTN","XMJMLN",34,0)
 F  D  Q:XMABORT
"RTN","XMJMLN",35,0)
 . I XMCD S XMCD=0,XMDETAIL='XMDETAIL D INIT(XMDUZ,XMTYPE,XMDETAIL,0,.XMLEN)
"RTN","XMJMLN",36,0)
 . D DISPLAY(XMDUZ,XMKALL,XMTYPE,XMDETAIL,.XMK,"",.XMKZ,.XMZ,.XMCNT,.XMFIRST,.XMPAGE,.XMMORE,.XMLEN,XMZOOM,XMPMAX)
"RTN","XMJMLN",37,0)
 . D CHOOSE(XMDUZ,XMKALL,0,.XMKZ,.XMFIRST,.XMPAGE,XMMORE,.XMLEN,.XMZOOM,.XMOPTION,"READMSG",.XMABORT)
"RTN","XMJMLN",38,0)
 . S:'$D(^XMB(3.7,XMDUZ,XMTYPE)) XMABORT=1
"RTN","XMJMLN",39,0)
 K ^TMP("XM",$J,"MSG"),^TMP("XM",$J,".")
"RTN","XMJMLN",40,0)
 Q
"RTN","XMJMLN",41,0)
INIT(XMDUZ,XMTYPE,XMDETAIL,XMACTUAL,XMLEN) ;
"RTN","XMJMLN",42,0)
 ; XMACTUAL 1/0=do/do not use actual XMKZ
"RTN","XMJMLN",43,0)
 N XMK,XMKN,XMKNMAX,XMKZL
"RTN","XMJMLN",44,0)
 S XMLEN("XMKZ")=$S(XMACTUAL:0,1:$L($P(^XMB(3.7,XMDUZ,0),U,6)))
"RTN","XMJMLN",45,0)
 S XMK=0,XMKNMAX=""
"RTN","XMJMLN",46,0)
 F  S XMK=$O(^XMB(3.7,XMDUZ,XMTYPE,XMK)) Q:XMK=""  D
"RTN","XMJMLN",47,0)
 . S XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1)
"RTN","XMJMLN",48,0)
 . S:$L(XMKN)>$L(XMKNMAX) XMKNMAX=XMKN
"RTN","XMJMLN",49,0)
 . Q:'XMACTUAL
"RTN","XMJMLN",50,0)
 . S XMKZL=$L($O(^XMB(3.7,XMDUZ,2,XMK,1,"C",""),-1))
"RTN","XMJMLN",51,0)
 . S:XMKZL>XMLEN("XMKZ") XMLEN("XMKZ")=XMKZL
"RTN","XMJMLN",52,0)
 D INIT^XMJML(XMDUZ,"",XMKNMAX,XMDETAIL,.XMLEN)
"RTN","XMJMLN",53,0)
 Q
"RTN","XMJMLN",54,0)
DISPLAY(XMDUZ,XMKALL,XMTYPE,XMDETAIL,XMK,XMKN,XMKZ,XMZ,XMCNT,XMFIRST,XMPAGE,XMMORE,XMLEN,XMZOOM,XMPMAX) ;
"RTN","XMJMLN",55,0)
 N XMREC
"RTN","XMJMLN",56,0)
 S XMFIRST(XMPAGE)=XMKZ
"RTN","XMJMLN",57,0)
 D HEADER^XMJML(XMDETAIL,.XMLEN,XMDUZ,XMK,XMKN)
"RTN","XMJMLN",58,0)
 I XMZOOM D  Q
"RTN","XMJMLN",59,0)
 . F  S XMKZ=$O(^TMP("XM",$J,".",XMKZ)) Q:XMKZ=""  D  Q:$Y>XMPMAX
"RTN","XMJMLN",60,0)
 . . S XMREC=^TMP("XM",$J,"MSG",XMKZ)
"RTN","XMJMLN",61,0)
 . . D LISTMSG^XMJML($P(XMREC,U,1),$P(XMREC,U,2),XMKZ,$P(XMREC,U,3),XMDETAIL,.XMLEN)
"RTN","XMJMLN",62,0)
 F  S XMKZ=$O(^TMP("XM",$J,"MSG",XMKZ)) Q:XMKZ=""  D  Q:$Y>XMPMAX
"RTN","XMJMLN",63,0)
 . S XMREC=^TMP("XM",$J,"MSG",XMKZ)
"RTN","XMJMLN",64,0)
 . D LISTMSG^XMJML($P(XMREC,U,1),$P(XMREC,U,2),XMKZ,$P(XMREC,U,3),XMDETAIL,.XMLEN)
"RTN","XMJMLN",65,0)
 Q:$Y>XMPMAX!'XMMORE
"RTN","XMJMLN",66,0)
 I XMKALL D
"RTN","XMJMLN",67,0)
 . S XMK=XMK-.01
"RTN","XMJMLN",68,0)
 . F  S XMK=$O(^XMB(3.7,XMDUZ,XMTYPE,XMK)) Q:XMK=""  D  Q:$Y>XMPMAX
"RTN","XMJMLN",69,0)
 . . S XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U)
"RTN","XMJMLN",70,0)
 . . D LISTBSKT(XMDUZ,XMTYPE,XMDETAIL,XMK,XMKN,.XMZ,.XMCNT,.XMLEN,XMPMAX)
"RTN","XMJMLN",71,0)
 . S XMMORE=$S('XMK:0,$O(^XMB(3.7,XMDUZ,XMTYPE,XMK)):1,XMZ="":0,$O(^XMB(3.7,XMDUZ,XMTYPE,XMK,XMZ),XMV("ORDER")):1,1:0)
"RTN","XMJMLN",72,0)
 E  D
"RTN","XMJMLN",73,0)
 . D LISTBSKT(XMDUZ,XMTYPE,XMDETAIL,XMK,XMKN,.XMZ,.XMCNT,.XMLEN,XMPMAX)
"RTN","XMJMLN",74,0)
 . S XMMORE=$S(XMZ="":0,$O(^XMB(3.7,XMDUZ,XMTYPE,XMK,XMZ),XMV("ORDER")):1,1:0)
"RTN","XMJMLN",75,0)
 S XMKZ=XMCNT
"RTN","XMJMLN",76,0)
 Q
"RTN","XMJMLN",77,0)
LISTBSKT(XMDUZ,XMTYPE,XMDETAIL,XMK,XMKN,XMZ,XMCNT,XMLEN,XMPMAX) ;
"RTN","XMJMLN",78,0)
 F  S XMZ=$O(^XMB(3.7,XMDUZ,XMTYPE,XMK,XMZ),XMV("ORDER")) Q:XMZ=""  D  Q:$Y>XMPMAX
"RTN","XMJMLN",79,0)
 . I '$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITN^XMUT4A(XMDUZ,XMTYPE,XMK,XMZ)
"RTN","XMJMLN",80,0)
 . I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMJMLN",81,0)
 . S XMCNT=XMCNT+1
"RTN","XMJMLN",82,0)
 . S ^TMP("XM",$J,"MSG",XMCNT)=XMK_U_XMKN_U_XMZ
"RTN","XMJMLN",83,0)
 . D LISTMSG^XMJML(XMK,XMKN,XMCNT,XMZ,XMDETAIL,.XMLEN)
"RTN","XMJMLN",84,0)
 Q
"RTN","XMJMLN",85,0)
CHOOSE(XMDUZ,XMKALL,XMK,XMKZ,XMFIRST,XMPAGE,XMMORE,XMLEN,XMZOOM,XMOPTION,XMREAD,XMABORT) ;
"RTN","XMJMLN",86,0)
 N XMY,XMHI
"RTN","XMJMLN",87,0)
 I XMZOOM D
"RTN","XMJMLN",88,0)
 . S XMMORE=$S(XMKZ="":0,1:1)
"RTN","XMJMLN",89,0)
 E  I $O(XMFIRST(XMPAGE)),XMKZ,$O(^TMP("XM",$J,"MSG",XMKZ)) D
"RTN","XMJMLN",90,0)
 . S XMMORE=1
"RTN","XMJMLN",91,0)
 . S XMFIRST(XMPAGE+1)=XMKZ
"RTN","XMJMLN",92,0)
 S XMHI=$O(^TMP("XM",$J,"MSG",""),-1)
"RTN","XMJMLN",93,0)
 D XMDIR^XMJMLR1(XMDUZ,XMHI,XMPAGE,XMMORE,"XM-U-BO-FULL SCREEN LIST","",.XMOPTION,.XMY,.XMABORT) Q:XMABORT
"RTN","XMJMLN",94,0)
 I '$D(XMY) S XMKZ=XMFIRST(XMPAGE) Q
"RTN","XMJMLN",95,0)
 I XMY=""!($E(XMY)="+") D  Q  ; Next page
"RTN","XMJMLN",96,0)
 . I XMMORE S XMPAGE=XMPAGE+1 Q
"RTN","XMJMLN",97,0)
 . I XMPAGE=0 S XMABORT=1 Q
"RTN","XMJMLN",98,0)
 . D AGAIN^XMJMLR(.XMABORT) Q:XMABORT
"RTN","XMJMLN",99,0)
 . S XMPAGE=0
"RTN","XMJMLN",100,0)
 . S XMKZ=XMFIRST(XMPAGE)
"RTN","XMJMLN",101,0)
 I $E(XMY)="." D  Q  ; (De)Select messages
"RTN","XMJMLN",102,0)
 . D DODOT
"RTN","XMJMLN",103,0)
 . I XMZOOM,'$D(^TMP("XM",$J,".")) D Z
"RTN","XMJMLN",104,0)
 . S XMKZ=XMFIRST(XMPAGE)
"RTN","XMJMLN",105,0)
 I XMY>0 D  Q
"RTN","XMJMLN",106,0)
 . N XMREC
"RTN","XMJMLN",107,0)
 . S XMREC=$G(^TMP("XM",$J,"MSG",XMY))
"RTN","XMJMLN",108,0)
 . I XMREC="" D
"RTN","XMJMLN",109,0)
 . . W *7
"RTN","XMJMLN",110,0)
 . E  D
"RTN","XMJMLN",111,0)
 . . N XMKZ
"RTN","XMJMLN",112,0)
 . . S XMKZ=XMY
"RTN","XMJMLN",113,0)
 . . D @XMREAD
"RTN","XMJMLN",114,0)
 . . I XMZOOM,'$D(^TMP("XM",$J,".")) D Z
"RTN","XMJMLN",115,0)
 . S XMKZ=XMFIRST(XMPAGE)
"RTN","XMJMLN",116,0)
 I XMY=0 D  Q  ; First page
"RTN","XMJMLN",117,0)
 . S XMPAGE=0
"RTN","XMJMLN",118,0)
 . S XMKZ=XMFIRST(XMPAGE)
"RTN","XMJMLN",119,0)
 I $E(XMY)="-" D  Q  ; Previous page
"RTN","XMJMLN",120,0)
 . S:XMPAGE>0 XMPAGE=XMPAGE-1
"RTN","XMJMLN",121,0)
 . S XMKZ=XMFIRST(XMPAGE)
"RTN","XMJMLN",122,0)
 D @XMY
"RTN","XMJMLN",123,0)
 S XMKZ=XMFIRST(XMPAGE)
"RTN","XMJMLN",124,0)
 Q
"RTN","XMJMLN",125,0)
READMSG ; (XMDUZ,XMKZ,XMREC,XMTYPE) <- needed!
"RTN","XMJMLN",126,0)
 N XMK,XMKN,XMZ
"RTN","XMJMLN",127,0)
 S XMK=$P(XMREC,U,1),XMKN=$P(XMREC,U,2),XMZ=$P(XMREC,U,3)
"RTN","XMJMLN",128,0)
 I XMDUZ'=DUZ,'$$SURRACC^XMXSEC(XMDUZ,"read",XMZ,$G(^XMB(3.9,XMZ,0))) D  Q
"RTN","XMJMLN",129,0)
 . D SHOW^XMJERR
"RTN","XMJMLN",130,0)
 . D WAIT^XMXUTIL
"RTN","XMJMLN",131,0)
 D READNEW^XMJBN(XMDUZ,XMK,XMKN,XMZ)
"RTN","XMJMLN",132,0)
 Q:$D(^XMB(3.7,XMDUZ,XMTYPE,XMK,XMZ))
"RTN","XMJMLN",133,0)
 K ^TMP("XM",$J,"MSG",XMKZ)
"RTN","XMJMLN",134,0)
 K:$D(^TMP("XM",$J,".",XMKZ)) ^TMP("XM",$J,".",XMKZ)
"RTN","XMJMLN",135,0)
 Q
"RTN","XMJMLN",136,0)
DODOT ;
"RTN","XMJMLN",137,0)
 N I,XMSTRIKE,XM1,XMN,XMKZ
"RTN","XMJMLN",138,0)
 I $E(XMY,2)="-" S XMSTRIKE=1,XMY=$E(XMY,3,999)
"RTN","XMJMLN",139,0)
 E  S XMSTRIKE=0,XMY=$E(XMY,2,999)
"RTN","XMJMLN",140,0)
 I XMY="*" D  Q
"RTN","XMJMLN",141,0)
 . I XMSTRIKE K ^TMP("XM",$J,".") Q
"RTN","XMJMLN",142,0)
 . S XMKZ=""
"RTN","XMJMLN",143,0)
 . F  S XMKZ=$O(^TMP("XM",$J,"MSG",XMKZ)) Q:'XMKZ  S ^TMP("XM",$J,".",XMKZ)=""
"RTN","XMJMLN",144,0)
 F I=1:1:$L(XMY,",") D
"RTN","XMJMLN",145,0)
 . S XMKZ=$P(XMY,",",I)
"RTN","XMJMLN",146,0)
 . I XMKZ["-" D  Q
"RTN","XMJMLN",147,0)
 . . S XM1=$P(XMKZ,"-")
"RTN","XMJMLN",148,0)
 . . S XMN=$P(XMKZ,"-",2) S:XMN="" XMN=XMHI
"RTN","XMJMLN",149,0)
 . . S XMKZ=XM1-.1
"RTN","XMJMLN",150,0)
 . . I 'XMSTRIKE D  Q
"RTN","XMJMLN",151,0)
 . . . F  S XMKZ=$O(^TMP("XM",$J,"MSG",XMKZ)) Q:XMKZ>XMN!'XMKZ  D
"RTN","XMJMLN",152,0)
 . . . . S:'$D(^TMP("XM",$J,".",XMKZ)) ^TMP("XM",$J,".",XMKZ)=""
"RTN","XMJMLN",153,0)
 . . F  S XMKZ=$O(^TMP("XM",$J,".",XMKZ)) Q:XMKZ>XMN!'XMKZ  K ^TMP("XM",$J,".",XMKZ)
"RTN","XMJMLN",154,0)
 . I 'XMSTRIKE D  Q
"RTN","XMJMLN",155,0)
 . . I $D(^TMP("XM",$J,"MSG",XMKZ)),'$D(^TMP("XM",$J,".",XMKZ)) S ^TMP("XM",$J,".",XMKZ)=""
"RTN","XMJMLN",156,0)
 . I $D(^TMP("XM",$J,".",XMKZ)) K ^TMP("XM",$J,".",XMKZ)
"RTN","XMJMLN",157,0)
 Q
"RTN","XMJMLN",158,0)
CD ; Change Detail
"RTN","XMJMLN",159,0)
 S XMCD=1
"RTN","XMJMLN",160,0)
 Q
"RTN","XMJMLN",161,0)
D ; Delete messages
"RTN","XMJMLN",162,0)
 D DELETE^XMJMORX(XMDUZ,XMKALL,XMK)
"RTN","XMJMLN",163,0)
 D WAIT^XMXUTIL
"RTN","XMJMLN",164,0)
 I XMZOOM,'$D(^TMP("XM",$J,".")) D Z
"RTN","XMJMLN",165,0)
 Q
"RTN","XMJMLN",166,0)
F ; Forward messages
"RTN","XMJMLN",167,0)
 D FORWARD^XMJMORX(XMDUZ,XMKALL,XMK)
"RTN","XMJMLN",168,0)
 D WAIT^XMXUTIL
"RTN","XMJMLN",169,0)
 Q
"RTN","XMJMLN",170,0)
FI ; Filter messages
"RTN","XMJMLN",171,0)
 D FILTER^XMJMORX(XMDUZ,XMKALL,XMK)
"RTN","XMJMLN",172,0)
 D WAIT^XMXUTIL
"RTN","XMJMLN",173,0)
 Q
"RTN","XMJMLN",174,0)
H ; Headerless Print messages
"RTN","XMJMLN",175,0)
 D PRINT^XMJMORX(XMDUZ,0)
"RTN","XMJMLN",176,0)
 D WAIT^XMXUTIL
"RTN","XMJMLN",177,0)
 Q
"RTN","XMJMLN",178,0)
L ; Later messages
"RTN","XMJMLN",179,0)
 D LATER^XMJMORX(XMDUZ,XMKALL,XMK)
"RTN","XMJMLN",180,0)
 D WAIT^XMXUTIL
"RTN","XMJMLN",181,0)
 Q
"RTN","XMJMLN",182,0)
O ; Opposite toggle
"RTN","XMJMLN",183,0)
 N XMKZ
"RTN","XMJMLN",184,0)
 S XMKZ=0
"RTN","XMJMLN",185,0)
 F  S XMKZ=$O(^TMP("XM",$J,"MSG",XMKZ)) Q:'XMKZ  D
"RTN","XMJMLN",186,0)
 . I $D(^TMP("XM",$J,".",XMKZ)) K ^TMP("XM",$J,".",XMKZ) Q
"RTN","XMJMLN",187,0)
 . S ^TMP("XM",$J,".",XMKZ)=""
"RTN","XMJMLN",188,0)
 S XMPAGE=0
"RTN","XMJMLN",189,0)
 Q
"RTN","XMJMLN",190,0)
P ; Print messages
"RTN","XMJMLN",191,0)
 D PRINT^XMJMORX(XMDUZ,1)
"RTN","XMJMLN",192,0)
 D WAIT^XMXUTIL
"RTN","XMJMLN",193,0)
 Q
"RTN","XMJMLN",194,0)
S ; Save messages
"RTN","XMJMLN",195,0)
 D SAVE^XMJMORX(XMDUZ,XMKALL,XMK)
"RTN","XMJMLN",196,0)
 D WAIT^XMXUTIL
"RTN","XMJMLN",197,0)
 I XMZOOM,'$D(^TMP("XM",$J,".")) D Z
"RTN","XMJMLN",198,0)
 Q
"RTN","XMJMLN",199,0)
T ; Terminate messages
"RTN","XMJMLN",200,0)
 D TERM^XMJMORX(XMDUZ,XMKALL,XMK)
"RTN","XMJMLN",201,0)
 D WAIT^XMXUTIL
"RTN","XMJMLN",202,0)
 I XMZOOM,'$D(^TMP("XM",$J,".")) D Z
"RTN","XMJMLN",203,0)
 Q
"RTN","XMJMLN",204,0)
Z ; Zoom toggle
"RTN","XMJMLN",205,0)
 N I
"RTN","XMJMLN",206,0)
 I XMZOOM D
"RTN","XMJMLN",207,0)
 . S XMZOOM=0
"RTN","XMJMLN",208,0)
 . S I=""
"RTN","XMJMLN",209,0)
 . F  S I=$O(XMFIRST(0,I)) Q:I=""  S XMFIRST(I)=XMFIRST(0,I)
"RTN","XMJMLN",210,0)
 . S XMPAGE=XMPAGE(0)
"RTN","XMJMLN",211,0)
 E  D
"RTN","XMJMLN",212,0)
 . S XMZOOM=1
"RTN","XMJMLN",213,0)
 . S I=""
"RTN","XMJMLN",214,0)
 . F  S I=$O(XMFIRST(I)) Q:I=""  S XMFIRST(0,I)=XMFIRST(I)
"RTN","XMJMLN",215,0)
 . S XMPAGE(0)=XMPAGE
"RTN","XMJMLN",216,0)
 . S XMPAGE=0
"RTN","XMJMLN",217,0)
 Q
"RTN","XMJMLR")
0^16^B71679790
"RTN","XMJMLR",1,0)
XMJMLR ;ISC-SF/GMB-List/Read messages in basket ;06/29/99  15:43
"RTN","XMJMLR",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMLR",3,0)
 ; Replaces 1^XMAL0 (ISC-WASH/THM/CAP)
"RTN","XMJMLR",4,0)
LIST(XMDUZ,XMK,XMKN,XMDETAIL,XMABORT) ; List messages in basket 
"RTN","XMJMLR",5,0)
 ; XMDETAIL 0=Summary; 1=Detailed
"RTN","XMJMLR",6,0)
 N XMKZ,XMLEN,XMFIRST,XMPAGE,XMPMAX,XMZOOM,XMINSTR,XMOPTION,XMORDER
"RTN","XMJMLR",7,0)
 I XMDUZ=.5,XMK>999 S XMORDER=XMV("ORDER"),XMV("ORDER")=1
"RTN","XMJMLR",8,0)
 S XMINSTR("GOTO")=1  ; may go to another page
"RTN","XMJMLR",9,0)
 D SETOPT^XMJMLR1(XMDUZ,XMK,.XMOPTION)
"RTN","XMJMLR",10,0)
 K ^TMP("XM",$J,".")
"RTN","XMJMLR",11,0)
 S XMKZ="",(XMPAGE,XMZOOM)=0,XMPMAX=IOSL-3
"RTN","XMJMLR",12,0)
 D INIT^XMJML(XMDUZ,XMK,XMKN,XMDETAIL,.XMLEN,1)
"RTN","XMJMLR",13,0)
 F  D  Q:XMABORT!'$D(^XMB(3.7,XMDUZ,2,XMK,1,"C"))
"RTN","XMJMLR",14,0)
 . D DISPLAY(XMDUZ,XMDETAIL,XMK,XMKN,.XMKZ,.XMFIRST,.XMPAGE,.XMLEN,XMZOOM,XMPMAX)
"RTN","XMJMLR",15,0)
 . D CHOOSE(XMDUZ,.XMK,.XMKZ,.XMFIRST,.XMPAGE,.XMLEN,.XMZOOM,.XMINSTR,.XMOPTION,.XMABORT)
"RTN","XMJMLR",16,0)
 K ^TMP("XM",$J,".")
"RTN","XMJMLR",17,0)
 I $D(XMORDER) S XMV("ORDER")=XMORDER
"RTN","XMJMLR",18,0)
 Q
"RTN","XMJMLR",19,0)
DISPLAY(XMDUZ,XMDETAIL,XMK,XMKN,XMKZ,XMFIRST,XMPAGE,XMLEN,XMZOOM,XMPMAX) ;
"RTN","XMJMLR",20,0)
 N XMZ
"RTN","XMJMLR",21,0)
 S XMFIRST(XMPAGE)=XMKZ
"RTN","XMJMLR",22,0)
 D HEADER^XMJML(XMDETAIL,.XMLEN,XMDUZ,XMK,XMKN,1)
"RTN","XMJMLR",23,0)
 I XMZOOM D  Q
"RTN","XMJMLR",24,0)
 . F  S XMKZ=$O(^TMP("XM",$J,".",XMKZ),XMV("ORDER")) Q:XMKZ=""  D  Q:$Y>XMPMAX
"RTN","XMJMLR",25,0)
 . . D LISTMSG^XMJML(XMK,XMKN,XMKZ,$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,"")),XMDETAIL,.XMLEN)
"RTN","XMJMLR",26,0)
 F  S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ),XMV("ORDER")) Q:XMKZ=""  D  Q:$Y>XMPMAX
"RTN","XMJMLR",27,0)
 . S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,""))
"RTN","XMJMLR",28,0)
 . I '$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITC^XMUT4A(XMDUZ,XMK,XMZ,XMKZ)
"RTN","XMJMLR",29,0)
 . I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMJMLR",30,0)
 . D LISTMSG^XMJML(XMK,XMKN,XMKZ,XMZ,XMDETAIL,.XMLEN)
"RTN","XMJMLR",31,0)
 Q
"RTN","XMJMLR",32,0)
CHOOSE(XMDUZ,XMK,XMKZ,XMFIRST,XMPAGE,XMLEN,XMZOOM,XMINSTR,XMOPTION,XMABORT) ;
"RTN","XMJMLR",33,0)
 N XMY,XMZ,XMMORE,XMHI
"RTN","XMJMLR",34,0)
 S XMMORE=$S(XMKZ="":0,'$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ),XMV("ORDER")):0,1:1)
"RTN","XMJMLR",35,0)
 S XMHI=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",""),-1)
"RTN","XMJMLR",36,0)
 D XMDIR^XMJMLR1(XMDUZ,XMHI,XMPAGE,XMMORE,"XM-U-BO-FULL SCREEN",.XMINSTR,.XMOPTION,.XMY,.XMABORT) Q:XMABORT
"RTN","XMJMLR",37,0)
 I '$D(XMY) S XMKZ=XMFIRST(XMPAGE) Q
"RTN","XMJMLR",38,0)
 I XMY=""!($E(XMY)="+") D  Q  ; Page forward
"RTN","XMJMLR",39,0)
 . I XMMORE D PFWD Q
"RTN","XMJMLR",40,0)
 . I XMPAGE=0 S XMABORT=1 Q
"RTN","XMJMLR",41,0)
 . D AGAIN(.XMABORT) Q:XMABORT
"RTN","XMJMLR",42,0)
 . S XMPAGE=0
"RTN","XMJMLR",43,0)
 . S XMKZ=XMFIRST(XMPAGE)
"RTN","XMJMLR",44,0)
 I $E(XMY)="." D  Q  ; (De)Select messages
"RTN","XMJMLR",45,0)
 . D DODOT
"RTN","XMJMLR",46,0)
 . I XMZOOM,'$D(^TMP("XM",$J,".")) D Z
"RTN","XMJMLR",47,0)
 . S XMKZ=XMFIRST(XMPAGE)
"RTN","XMJMLR",48,0)
 I XMY>0 D  Q  ;
"RTN","XMJMLR",49,0)
 . N XMKZLAST
"RTN","XMJMLR",50,0)
 . S XMKZLAST=XMKZ
"RTN","XMJMLR",51,0)
 . S XMKZ=XMY
"RTN","XMJMLR",52,0)
 . S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,""))
"RTN","XMJMLR",53,0)
 . I XMZ D
"RTN","XMJMLR",54,0)
 . . I '$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITC^XMUT4A(XMDUZ,XMK,XMZ,XMKZ)
"RTN","XMJMLR",55,0)
 . . D READMSG(XMDUZ,XMK,XMKN,XMKZ,XMZ,XMZOOM)
"RTN","XMJMLR",56,0)
 . . D FINDXMKZ(XMDUZ,XMK,.XMFIRST,.XMPAGE,XMKZLAST,XMKZ)
"RTN","XMJMLR",57,0)
 . E  D
"RTN","XMJMLR",58,0)
 . . S XMZ=XMY
"RTN","XMJMLR",59,0)
 . . I $D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D  Q
"RTN","XMJMLR",60,0)
 . . . S XMKZ=$P(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0),U,2)
"RTN","XMJMLR",61,0)
 . . . I 'XMKZ D ADDITM^XMUT4A(XMDUZ,XMK,XMZ,.XMKZ)
"RTN","XMJMLR",62,0)
 . . . D READMSG(XMDUZ,XMK,XMKN,XMKZ,XMZ,XMZOOM)
"RTN","XMJMLR",63,0)
 . . . D FINDXMKZ(XMDUZ,XMK,.XMFIRST,.XMPAGE,XMKZLAST,XMKZ)
"RTN","XMJMLR",64,0)
 . . I '$D(^XMB(3.9,XMZ,0)) D  Q
"RTN","XMJMLR",65,0)
 . . . W *7
"RTN","XMJMLR",66,0)
 . . . Q:XMZ>$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",""),-1)
"RTN","XMJMLR",67,0)
 . . . S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMZ),XMV("ORDER"))
"RTN","XMJMLR",68,0)
 . . . I 'XMKZ S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMZ),-XMV("ORDER"))
"RTN","XMJMLR",69,0)
 . . . D FINDXMKZ(XMDUZ,XMK,.XMFIRST,.XMPAGE,XMKZLAST,XMKZ)
"RTN","XMJMLR",70,0)
 . . N XMK,XMKN,XMOK
"RTN","XMJMLR",71,0)
 . . S XMK=+$O(^XMB(3.7,"M",XMZ,XMDUZ,0))
"RTN","XMJMLR",72,0)
 . . I 'XMK D  Q:'XMOK
"RTN","XMJMLR",73,0)
 . . . I $D(XMERR) K XMERR,^TMP("XMERR",$J)
"RTN","XMJMLR",74,0)
 . . . S XMOK=$$ACCESS^XMXSEC(XMDUZ,XMZ,^XMB(3.9,XMZ,0))
"RTN","XMJMLR",75,0)
 . . . Q:'$D(XMERR)
"RTN","XMJMLR",76,0)
 . . . D SHOW^XMJERR
"RTN","XMJMLR",77,0)
 . . . D WAIT^XMXUTIL
"RTN","XMJMLR",78,0)
 . . S XMKN=$S(XMK:$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1),1:"* N/A *")
"RTN","XMJMLR",79,0)
 . . I XMK,'$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITM^XMUT4A(XMDUZ,XMK,XMZ)
"RTN","XMJMLR",80,0)
 . . D READMSG^XMJBM(XMDUZ,XMK,XMKN,XMZ)
"RTN","XMJMLR",81,0)
 . S XMKZ=XMFIRST(XMPAGE)
"RTN","XMJMLR",82,0)
 I XMY=0 D  Q  ; First page
"RTN","XMJMLR",83,0)
 . S XMPAGE=0
"RTN","XMJMLR",84,0)
 . S XMKZ=XMFIRST(XMPAGE)
"RTN","XMJMLR",85,0)
 I $E(XMY)="-" D  Q  ; Page back
"RTN","XMJMLR",86,0)
 . N XMCNT
"RTN","XMJMLR",87,0)
 . S XMCNT=$E(XMY,2,99)
"RTN","XMJMLR",88,0)
 . S:XMCNT="" XMCNT=1
"RTN","XMJMLR",89,0)
 . S XMPAGE=XMPAGE-XMCNT
"RTN","XMJMLR",90,0)
 . S:XMPAGE<0 XMPAGE=0
"RTN","XMJMLR",91,0)
 . S XMKZ=XMFIRST(XMPAGE)
"RTN","XMJMLR",92,0)
 D @XMY
"RTN","XMJMLR",93,0)
 S XMKZ=XMFIRST(XMPAGE)
"RTN","XMJMLR",94,0)
 Q
"RTN","XMJMLR",95,0)
PFWD ;
"RTN","XMJMLR",96,0)
 N XMCNT,XMPDEST
"RTN","XMJMLR",97,0)
 S XMCNT=$E(XMY,2,99)
"RTN","XMJMLR",98,0)
 S:XMCNT="" XMCNT=1
"RTN","XMJMLR",99,0)
 I XMCNT=1 S XMPAGE=XMPAGE+1 Q
"RTN","XMJMLR",100,0)
 S XMPDEST=XMPAGE+XMCNT
"RTN","XMJMLR",101,0)
 D FINDPAGE(.XMFIRST,.XMPAGE,XMKZ,XMPDEST)
"RTN","XMJMLR",102,0)
 S XMKZ=XMFIRST(XMPAGE)
"RTN","XMJMLR",103,0)
 Q
"RTN","XMJMLR",104,0)
FINDPAGE(XMFIRST,XMPAGE,XMKZ,XMPDEST) ;
"RTN","XMJMLR",105,0)
 N XMO,I
"RTN","XMJMLR",106,0)
 S XMO=$S(XMPDEST>XMPAGE:1,1:-1)
"RTN","XMJMLR",107,0)
 F XMPAGE=XMPAGE+XMO:XMO S XMFIRST(XMPAGE)=XMKZ Q:XMPAGE=XMPDEST  D  Q:XMKZ=""
"RTN","XMJMLR",108,0)
 . F I=1:1:XMPMAX S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ),XMO*XMV("ORDER")) Q:XMKZ=""
"RTN","XMJMLR",109,0)
 I '$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMFIRST(XMPAGE)),XMO*XMV("ORDER")) S XMPAGE=XMPAGE-XMO Q
"RTN","XMJMLR",110,0)
 Q
"RTN","XMJMLR",111,0)
FINDXMKZ(XMDUZ,XMK,XMFIRST,XMPAGE,XMKZLAST,XMKZF) ; Find the page with XMKZF on it
"RTN","XMJMLR",112,0)
 Q:'$D(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZF))
"RTN","XMJMLR",113,0)
 I XMV("ORDER")=-1 D  Q
"RTN","XMJMLR",114,0)
 . I $S(XMFIRST(XMPAGE):XMFIRST(XMPAGE)>XMKZF,1:1),XMKZF'<XMKZLAST Q
"RTN","XMJMLR",115,0)
 . N XMKZ,I
"RTN","XMJMLR",116,0)
 . I XMKZF<XMKZLAST D  Q  ; Go forward
"RTN","XMJMLR",117,0)
 . . S XMKZ=XMKZLAST
"RTN","XMJMLR",118,0)
 . . F XMPAGE=XMPAGE+1:1 D  Q:XMKZ=XMKZF
"RTN","XMJMLR",119,0)
 . . . S XMFIRST(XMPAGE)=XMKZ
"RTN","XMJMLR",120,0)
 . . . F I=1:1:XMPMAX S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ),-1) Q:XMKZ=XMKZF
"RTN","XMJMLR",121,0)
 . E  D  ; Go back
"RTN","XMJMLR",122,0)
 . . F XMPAGE=XMPAGE-1:-1 Q:XMFIRST(XMPAGE)>XMKZF!'XMPAGE
"RTN","XMJMLR",123,0)
 . . ;S XMKZ=XMFIRST(XMPAGE)-1
"RTN","XMJMLR",124,0)
 . . ;F XMPAGE=XMPAGE-1:-1 D  Q:XMFIRST(XMPAGE)>XMKZF
"RTN","XMJMLR",125,0)
 . . ;. F I=1:1:XMPMAX S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ)) Q:XMKZ=""
"RTN","XMJMLR",126,0)
 . . ;. S XMFIRST(XMPAGE)=$S(XMKZ:XMKZ+1,1:XMKZ)
"RTN","XMJMLR",127,0)
 I XMFIRST(XMPAGE)<XMKZF,$S(XMKZLAST:XMKZF'>XMKZLAST,1:1) Q
"RTN","XMJMLR",128,0)
 N XMKZ,I
"RTN","XMJMLR",129,0)
 I XMKZF>XMKZLAST D  Q  ; Go forward
"RTN","XMJMLR",130,0)
 . S XMKZ=XMKZLAST
"RTN","XMJMLR",131,0)
 . F XMPAGE=XMPAGE+1:1 D  Q:XMKZ=XMKZF
"RTN","XMJMLR",132,0)
 . . S XMFIRST(XMPAGE)=XMKZ
"RTN","XMJMLR",133,0)
 . . F I=1:1:XMPMAX S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ)) Q:XMKZ=XMKZF
"RTN","XMJMLR",134,0)
 E  D  ; Go back
"RTN","XMJMLR",135,0)
 . F XMPAGE=XMPAGE-1:-1 Q:XMFIRST(XMPAGE)<XMKZF!'XMPAGE
"RTN","XMJMLR",136,0)
 . ;S XMKZ=XMFIRST(XMPAGE)-1
"RTN","XMJMLR",137,0)
 . ;F XMPAGE=XMPAGE-1:-1 D  Q:XMFIRST(XMPAGE)<XMKZF
"RTN","XMJMLR",138,0)
 . ;. F I=1:1:XMPMAX S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ),-1) Q:XMKZ=""
"RTN","XMJMLR",139,0)
 . ;. S XMFIRST(XMPAGE)=$S(XMKZ:XMKZ+1,1:XMKZ)
"RTN","XMJMLR",140,0)
 Q
"RTN","XMJMLR",141,0)
READMSG(XMDUZ,XMK,XMKN,XMKZ,XMZ,XMZOOM) ;
"RTN","XMJMLR",142,0)
 D READMSG^XMJBM(XMDUZ,XMK,XMKN,XMZ)
"RTN","XMJMLR",143,0)
 I $D(^TMP("XM",$J,".",XMKZ)),'$D(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,XMZ)) K ^TMP("XM",$J,".",XMKZ)
"RTN","XMJMLR",144,0)
 I XMZOOM,'$D(^TMP("XM",$J,".")) D Z
"RTN","XMJMLR",145,0)
 Q
"RTN","XMJMLR",146,0)
AGAIN(XMABORT) ;
"RTN","XMJMLR",147,0)
 N DIR,Y
"RTN","XMJMLR",148,0)
 W !
"RTN","XMJMLR",149,0)
 S DIR("A")="End reached.  Begin again"
"RTN","XMJMLR",150,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","XMJMLR",151,0)
 S DIR("?")="Enter 'Yes' if you wish to continue reading messages; 'No' if you don't."
"RTN","XMJMLR",152,0)
 D ^DIR
"RTN","XMJMLR",153,0)
 Q:Y=1        ; Yes, begin again
"RTN","XMJMLR",154,0)
 S XMABORT=1  ; No, exit.
"RTN","XMJMLR",155,0)
 Q
"RTN","XMJMLR",156,0)
DODOT ;
"RTN","XMJMLR",157,0)
 N I,XMSTRIKE,XM1,XMN,XMKZ
"RTN","XMJMLR",158,0)
 I $E(XMY,2)="-" S XMSTRIKE=1,XMY=$E(XMY,3,999)
"RTN","XMJMLR",159,0)
 E  S XMSTRIKE=0,XMY=$E(XMY,2,999)
"RTN","XMJMLR",160,0)
 I XMY="*" D  Q
"RTN","XMJMLR",161,0)
 . I XMSTRIKE K ^TMP("XM",$J,".") Q
"RTN","XMJMLR",162,0)
 . S XMKZ=""
"RTN","XMJMLR",163,0)
 . F  S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ)) Q:'XMKZ  S ^TMP("XM",$J,".",XMKZ)=""
"RTN","XMJMLR",164,0)
 F I=1:1:$L(XMY,",") D
"RTN","XMJMLR",165,0)
 . S XMKZ=$P(XMY,",",I)
"RTN","XMJMLR",166,0)
 . I XMKZ["-" D  Q
"RTN","XMJMLR",167,0)
 . . S XM1=$P(XMKZ,"-")
"RTN","XMJMLR",168,0)
 . . S XMN=$P(XMKZ,"-",2) S:XMN="" XMN=XMHI
"RTN","XMJMLR",169,0)
 . . S XMKZ=XM1-.1
"RTN","XMJMLR",170,0)
 . . I 'XMSTRIKE D  Q
"RTN","XMJMLR",171,0)
 . . . F  S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ)) Q:XMKZ>XMN!'XMKZ  S:'$D(^TMP("XM",$J,".",XMKZ)) ^(XMKZ)=""
"RTN","XMJMLR",172,0)
 . . F  S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ)) Q:XMKZ>XMN!'XMKZ  K:$D(^TMP("XM",$J,".",XMKZ)) ^(XMKZ)
"RTN","XMJMLR",173,0)
 . I 'XMSTRIKE D  Q
"RTN","XMJMLR",174,0)
 . . I $D(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ)),'$D(^TMP("XM",$J,".",XMKZ)) S ^(XMKZ)=""
"RTN","XMJMLR",175,0)
 . K:$D(^TMP("XM",$J,".",XMKZ)) ^(XMKZ)
"RTN","XMJMLR",176,0)
 Q
"RTN","XMJMLR",177,0)
C ; Change the name of this basket
"RTN","XMJMLR",178,0)
 D NAMEBSKT^XMJBU(XMDUZ,XMK,.XMKN)
"RTN","XMJMLR",179,0)
 K XMLEN
"RTN","XMJMLR",180,0)
 D INIT^XMJML(XMDUZ,XMK,XMKN,XMDETAIL,.XMLEN,1)
"RTN","XMJMLR",181,0)
 Q
"RTN","XMJMLR",182,0)
CD ; Change Detail
"RTN","XMJMLR",183,0)
 S XMDETAIL='XMDETAIL
"RTN","XMJMLR",184,0)
 D INIT^XMJML(XMDUZ,XMK,XMKN,XMDETAIL,.XMLEN,1)
"RTN","XMJMLR",185,0)
 Q
"RTN","XMJMLR",186,0)
D ; Delete messages
"RTN","XMJMLR",187,0)
 D DELETE^XMJMOR(XMDUZ,XMK)
"RTN","XMJMLR",188,0)
 D WAIT^XMXUTIL
"RTN","XMJMLR",189,0)
 I XMZOOM,'$D(^TMP("XM",$J,".")) D Z
"RTN","XMJMLR",190,0)
 Q
"RTN","XMJMLR",191,0)
F ; Forward messages
"RTN","XMJMLR",192,0)
 D FORWARD^XMJMOR(XMDUZ,XMK)
"RTN","XMJMLR",193,0)
 D WAIT^XMXUTIL
"RTN","XMJMLR",194,0)
 Q
"RTN","XMJMLR",195,0)
FI ; Filter messages
"RTN","XMJMLR",196,0)
 D FILTER^XMJMOR(XMDUZ,XMK)
"RTN","XMJMLR",197,0)
 D WAIT^XMXUTIL
"RTN","XMJMLR",198,0)
 Q
"RTN","XMJMLR",199,0)
H ; Headerless Print messages
"RTN","XMJMLR",200,0)
 D PRINT^XMJMOR(XMDUZ,XMK,XMKN,0)
"RTN","XMJMLR",201,0)
 D WAIT^XMXUTIL
"RTN","XMJMLR",202,0)
 Q
"RTN","XMJMLR",203,0)
L ; Later messages
"RTN","XMJMLR",204,0)
 D LATER^XMJMOR(XMDUZ,XMK)
"RTN","XMJMLR",205,0)
 D WAIT^XMXUTIL
"RTN","XMJMLR",206,0)
 I XMZOOM,'$D(^TMP("XM",$J,".")) D Z
"RTN","XMJMLR",207,0)
 Q
"RTN","XMJMLR",208,0)
N ; New message list
"RTN","XMJMLR",209,0)
 D LISTONE^XMJMLN(XMDUZ,XMK,XMKN,"N0")
"RTN","XMJMLR",210,0)
 D WAIT^XMXUTIL
"RTN","XMJMLR",211,0)
 Q
"RTN","XMJMLR",212,0)
O ; Opposite toggle
"RTN","XMJMLR",213,0)
 N XMKZ
"RTN","XMJMLR",214,0)
 S XMKZ=0
"RTN","XMJMLR",215,0)
 F  S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ)) Q:'XMKZ  D
"RTN","XMJMLR",216,0)
 . I $D(^TMP("XM",$J,".",XMKZ)) K ^TMP("XM",$J,".",XMKZ) Q
"RTN","XMJMLR",217,0)
 . S ^TMP("XM",$J,".",XMKZ)=""
"RTN","XMJMLR",218,0)
 S XMPAGE=0
"RTN","XMJMLR",219,0)
 Q
"RTN","XMJMLR",220,0)
P ; Print messages
"RTN","XMJMLR",221,0)
 D PRINT^XMJMOR(XMDUZ,XMK,XMKN)
"RTN","XMJMLR",222,0)
 D WAIT^XMXUTIL
"RTN","XMJMLR",223,0)
 Q
"RTN","XMJMLR",224,0)
Q ; Query messages
"RTN","XMJMLR",225,0)
 D FINDBSKT^XMJMF(XMDUZ,XMK,XMKN)
"RTN","XMJMLR",226,0)
 Q
"RTN","XMJMLR",227,0)
Q1 ; ?string - search for messages in this basket whose subject contains string.
"RTN","XMJMLR",228,0)
 N XMF
"RTN","XMJMLR",229,0)
 S XMF("BSKT")=XMK
"RTN","XMJMLR",230,0)
 S XMF("SUBJ")=XMY(0)
"RTN","XMJMLR",231,0)
 D FIND1^XMJMFB(XMDUZ,.XMF,1)
"RTN","XMJMLR",232,0)
 Q
"RTN","XMJMLR",233,0)
Q2 ; ??string - search for messages whose subject starts with string.
"RTN","XMJMLR",234,0)
 D FIND^XMJMFA(XMDUZ,XMY(0),1)
"RTN","XMJMLR",235,0)
 Q
"RTN","XMJMLR",236,0)
R ; Resequence messages
"RTN","XMJMLR",237,0)
 N XMMSG
"RTN","XMJMLR",238,0)
 W !,"Resequencing ..."
"RTN","XMJMLR",239,0)
 D RSEQBSKT^XMXBSKT(XMDUZ,XMK,.XMMSG)
"RTN","XMJMLR",240,0)
 S XMKZ="",XMPAGE=0
"RTN","XMJMLR",241,0)
 K XMLEN,XMFIRST
"RTN","XMJMLR",242,0)
 S XMFIRST(0)=""
"RTN","XMJMLR",243,0)
 D INIT^XMJML(XMDUZ,XMK,XMKN,XMDETAIL,.XMLEN,1)
"RTN","XMJMLR",244,0)
 W !,XMMSG
"RTN","XMJMLR",245,0)
 D WAIT^XMXUTIL
"RTN","XMJMLR",246,0)
 Q
"RTN","XMJMLR",247,0)
S ; Save messages
"RTN","XMJMLR",248,0)
 D SAVE^XMJMOR(XMDUZ,XMK)
"RTN","XMJMLR",249,0)
 D WAIT^XMXUTIL
"RTN","XMJMLR",250,0)
 Q
"RTN","XMJMLR",251,0)
T ; Terminate messages
"RTN","XMJMLR",252,0)
 D TERM^XMJMOR(XMDUZ,XMK)
"RTN","XMJMLR",253,0)
 D WAIT^XMXUTIL
"RTN","XMJMLR",254,0)
 I XMZOOM,'$D(^TMP("XM",$J,".")) D Z
"RTN","XMJMLR",255,0)
 Q
"RTN","XMJMLR",256,0)
X ; Xmit priority toggle messages
"RTN","XMJMLR",257,0)
 D XMTPRI^XMJMOR(XMDUZ,XMK)
"RTN","XMJMLR",258,0)
 D WAIT^XMXUTIL
"RTN","XMJMLR",259,0)
 Q
"RTN","XMJMLR",260,0)
Z ; Zoom toggle
"RTN","XMJMLR",261,0)
 N I
"RTN","XMJMLR",262,0)
 I XMZOOM D
"RTN","XMJMLR",263,0)
 . S XMZOOM=0
"RTN","XMJMLR",264,0)
 . S I=""
"RTN","XMJMLR",265,0)
 . F  S I=$O(XMFIRST(0,I)) Q:I=""  S XMFIRST(I)=XMFIRST(0,I)
"RTN","XMJMLR",266,0)
 . S XMPAGE=XMPAGE(0)
"RTN","XMJMLR",267,0)
 E  D
"RTN","XMJMLR",268,0)
 . S XMZOOM=1
"RTN","XMJMLR",269,0)
 . S I=""
"RTN","XMJMLR",270,0)
 . F  S I=$O(XMFIRST(I)) Q:I=""  S XMFIRST(0,I)=XMFIRST(I)
"RTN","XMJMLR",271,0)
 . S XMPAGE(0)=XMPAGE
"RTN","XMJMLR",272,0)
 . S XMPAGE=0
"RTN","XMJMLR",273,0)
 Q
"RTN","XMJMLR1")
0^144^B16132242
"RTN","XMJMLR1",1,0)
XMJMLR1 ;ISC-SF/GMB-List/Read messages in basket (continued) ;04/27/99  08:10
"RTN","XMJMLR1",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMLR1",3,0)
 ; Replaces 1^XMAL0 (ISC-WASH/THM/CAP)
"RTN","XMJMLR1",4,0)
XMDIR(XMDUZ,XMHI,XMPAGE,XMMORE,XMHELP,XMINSTR,XMOPTION,Y,XMABORT) ;
"RTN","XMJMLR1",5,0)
 N DIR,I,XMCMD,X
"RTN","XMJMLR1",6,0)
 D ZOOMOPT(.XMOPTION)
"RTN","XMJMLR1",7,0)
 S DIR(0)="FOA^1:100^K:'$$XMDIROK^XMJMLR1() X"
"RTN","XMJMLR1",8,0)
 S DIR("A")="Enter message number or command: "
"RTN","XMJMLR1",9,0)
 S DIR("??")=XMHELP
"RTN","XMJMLR1",10,0)
 S I=1,DIR("?",I)="Enter a message number to read a message."
"RTN","XMJMLR1",11,0)
 I $D(XMOPTION("Q")),'$D(XMOPTION("Q","?")) D
"RTN","XMJMLR1",12,0)
 . S I=I+1,DIR("?",I)="      ?string             Search for messages in this basket whose subject"
"RTN","XMJMLR1",13,0)
 . S I=I+1,DIR("?",I)="                          contains the specified string"
"RTN","XMJMLR1",14,0)
 . S I=I+1,DIR("?",I)="      ??string            Search for messages you once sent or received"
"RTN","XMJMLR1",15,0)
 . S I=I+1,DIR("?",I)="                          whose subject begins with the specified string"
"RTN","XMJMLR1",16,0)
 S I=I+1,DIR("?",I)="      .(-)n or n-m,a,c-d  (de)select message n or a list of messages"
"RTN","XMJMLR1",17,0)
 S I=I+1,DIR("?",I)="      .(-)*               (de)select all messages"
"RTN","XMJMLR1",18,0)
 S XMCMD=""
"RTN","XMJMLR1",19,0)
 F  S XMCMD=$O(XMOPTION(XMCMD)) Q:XMCMD=""  D
"RTN","XMJMLR1",20,0)
 . Q:$D(XMOPTION(XMCMD,"?"))
"RTN","XMJMLR1",21,0)
 . S I=I+1,DIR("?",I)="      "_XMCMD_"                  "_$S($L(XMCMD)=1:" ",1:"")_XMOPTION(XMCMD)
"RTN","XMJMLR1",22,0)
 I XMPAGE>0 D
"RTN","XMJMLR1",23,0)
 . S I=I+1,DIR("?",I)="Enter -  to go to the previous page; 0 to go to the first page."
"RTN","XMJMLR1",24,0)
 . S:$G(XMINSTR("GOTO")) I=I+1,DIR("?",I)="Enter -n to page back n pages."
"RTN","XMJMLR1",25,0)
 I XMMORE D
"RTN","XMJMLR1",26,0)
 . I $G(XMINSTR("GOTO")) D
"RTN","XMJMLR1",27,0)
 . . I XMPAGE>0 S DIR("?",I)=DIR("?",I)_"  "
"RTN","XMJMLR1",28,0)
 . . E  S I=I+1
"RTN","XMJMLR1",29,0)
 . . S DIR("?",I)=$G(DIR("?",I))_"Enter +n to page forward n pages."
"RTN","XMJMLR1",30,0)
 . S DIR("?")="Press ENTER or + to go to the next page.  Press ^ to exit this list."
"RTN","XMJMLR1",31,0)
 E  D
"RTN","XMJMLR1",32,0)
 . S DIR("?")="Press ENTER or ^ to exit this list."
"RTN","XMJMLR1",33,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) S XMABORT=1 Q
"RTN","XMJMLR1",34,0)
 Q:Y'?.A!(Y="")
"RTN","XMJMLR1",35,0)
 I $D(XMOPTION(Y)),'$D(XMOPTION(Y,"?")) Q
"RTN","XMJMLR1",36,0)
 D SHOWERR^XMJDIR(.XMOPTION,Y)
"RTN","XMJMLR1",37,0)
 D WAIT^XMXUTIL
"RTN","XMJMLR1",38,0)
 K Y
"RTN","XMJMLR1",39,0)
 Q
"RTN","XMJMLR1",40,0)
XMDIROK() ;
"RTN","XMJMLR1",41,0)
 N XMLO
"RTN","XMJMLR1",42,0)
 S XMLO=0
"RTN","XMJMLR1",43,0)
 I X?1N.N Q:$L(X)>25 0  S X=+X,Y=+Y Q $S(X'<XMLO&(X'>XMHI):1,$D(^XMB(3.9,X,0)):1,1:0)
"RTN","XMJMLR1",44,0)
 I $E(X)="." Q $$DOT()
"RTN","XMJMLR1",45,0)
 I X?1"-".N Q:$L(X)>25 0  Q 1
"RTN","XMJMLR1",46,0)
 I X?1"+".N Q:$L(X)>25 0  Q 1
"RTN","XMJMLR1",47,0)
 S Y=$$COMMAND^XMJDIR(.XMOPTION,X)
"RTN","XMJMLR1",48,0)
 Q:Y'=-1 1
"RTN","XMJMLR1",49,0)
 I X'?1"?".E!'$D(XMOPTION("Q")) Q 0
"RTN","XMJMLR1",50,0)
 I $D(XMOPTION("Q","?")) S Y="Q" Q 1
"RTN","XMJMLR1",51,0)
 I X?1"??".E D  Q 1
"RTN","XMJMLR1",52,0)
 . I $E(X,3,99)?1N.N,$D(^XMB(3.9,$E(X,3,99),0)) S Y=$E(X,3,99) Q
"RTN","XMJMLR1",53,0)
 . S Y="Q2",Y(0)=$E(X,3,99)
"RTN","XMJMLR1",54,0)
 S Y="Q1",Y(0)=$E(X,2,99)
"RTN","XMJMLR1",55,0)
 Q 1
"RTN","XMJMLR1",56,0)
DOT() ;
"RTN","XMJMLR1",57,0)
 N XMXR,I,XMOK,XMX,XMSTRIKE
"RTN","XMJMLR1",58,0)
 S XMOK=1
"RTN","XMJMLR1",59,0)
 S XMX=$TR(X," ")
"RTN","XMJMLR1",60,0)
 I $E(XMX,2)="-" S XMSTRIKE=1,XMX=$E(XMX,3,999)
"RTN","XMJMLR1",61,0)
 E  S XMSTRIKE=0,XMX=$E(XMX,2,999)
"RTN","XMJMLR1",62,0)
 I XMX="*" S Y="."_$S(XMSTRIKE:"-",1:"")_XMX Q 1
"RTN","XMJMLR1",63,0)
 F I=1:1:$L(XMX,",") D  Q:'XMOK
"RTN","XMJMLR1",64,0)
 . S XMXR=$P(XMX,",",I)
"RTN","XMJMLR1",65,0)
 . I XMXR?1.25N1"-"1.25N D  Q
"RTN","XMJMLR1",66,0)
 . . I $P(XMXR,"-",1)<XMLO S XMOK=0 Q
"RTN","XMJMLR1",67,0)
 . . I $P(XMXR,"-",2)>XMHI S XMOK=0 Q
"RTN","XMJMLR1",68,0)
 . . I $P(XMXR,"-",1)>$P(XMXR,"-",2) S XMOK=0
"RTN","XMJMLR1",69,0)
 . I XMXR?1.25N D  Q
"RTN","XMJMLR1",70,0)
 . . I XMXR<XMLO S XMOK=0 Q
"RTN","XMJMLR1",71,0)
 . . I XMXR>XMHI S XMOK=0
"RTN","XMJMLR1",72,0)
 . I XMXR?1.25N1"-" D  Q
"RTN","XMJMLR1",73,0)
 . . I $P(XMXR,"-",1)<XMLO S XMOK=0 Q
"RTN","XMJMLR1",74,0)
 . . I $P(XMXR,"-",1)>XMHI S XMOK=0
"RTN","XMJMLR1",75,0)
 . S XMOK=0
"RTN","XMJMLR1",76,0)
 I XMOK S Y="."_$S(XMSTRIKE:"-",1:"")_XMX Q 1
"RTN","XMJMLR1",77,0)
 Q 0
"RTN","XMJMLR1",78,0)
SETOPT(XMDUZ,XMK,XMOPTION) ;
"RTN","XMJMLR1",79,0)
 D OPTGRP^XMXSEC1(XMDUZ,XMK,.XMOPTION)
"RTN","XMJMLR1",80,0)
 S XMOPTION("CD")="Change Detail"
"RTN","XMJMLR1",81,0)
 S XMOPTION("O")="Opposite selection toggle"
"RTN","XMJMLR1",82,0)
 S XMOPTION("Z")="Zoom selection toggle"
"RTN","XMJMLR1",83,0)
 Q
"RTN","XMJMLR1",84,0)
ZOOMOPT(XMOPTION) ;
"RTN","XMJMLR1",85,0)
 I $D(^TMP("XM",$J,".")) D  Q
"RTN","XMJMLR1",86,0)
 . I $D(XMOPTION("Z","?")) K XMOPTION("O","?"),XMOPTION("Z","?")
"RTN","XMJMLR1",87,0)
 . Q:'$D(XMOPTION("Q"))
"RTN","XMJMLR1",88,0)
 . S XMOPTION("Q","?")="You can't do this with messages selected."
"RTN","XMJMLR1",89,0)
 . S XMOPTION("N","?")=XMOPTION("Q","?")
"RTN","XMJMLR1",90,0)
 . S XMOPTION("R","?")=XMOPTION("Q","?")
"RTN","XMJMLR1",91,0)
 S XMOPTION("O","?")="You can't do this unless messages are selected."
"RTN","XMJMLR1",92,0)
 S XMOPTION("Z","?")=XMOPTION("O","?")
"RTN","XMJMLR1",93,0)
 Q:'$D(XMOPTION("Q"))
"RTN","XMJMLR1",94,0)
 K XMOPTION("Q","?"),XMOPTION("N","?"),XMOPTION("R","?")
"RTN","XMJMLR1",95,0)
 Q
"RTN","XMJMOI")
0^17^B82530770
"RTN","XMJMOI",1,0)
XMJMOI ;ISC-SF/GMB-Options at Ignore prompt ;06/12/99  10:07
"RTN","XMJMOI",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMOI",3,0)
 ; Replaces ^XMA1,^XMA10 (ISC-WASH/CAP/THM)
"RTN","XMJMOI",4,0)
READMSG(XMNEWS,XMDUZ,XMK,XMKN,XMZ,XMABORT) ;
"RTN","XMJMOI",5,0)
 N XMFINISH,XMLINE,XMSTART,XMFROM,XMINSTR,XMRESTR,XMIEN,XMSUBJ,XMSETPRI,XMRESPS,XMRESPSO,XMRESP,XMORIGN8,XMDIR,XMY,XMOPT,XMINCL
"RTN","XMJMOI",6,0)
 D INIT(XMDUZ,XMZ,.XMSUBJ,.XMFROM,.XMORIGN8,.XMINSTR,.XMRESTR,.XMIEN,.XMRESPSO,.XMRESP)
"RTN","XMJMOI",7,0)
 S (XMFINISH,XMABORT)=0
"RTN","XMJMOI",8,0)
 F  D  Q:XMFINISH!XMABORT
"RTN","XMJMOI",9,0)
 . N XMNAME
"RTN","XMJMOI",10,0)
 . D READSET(XMDUZ,XMK,XMKN,XMZ,XMFROM,XMORIGN8,.XMINSTR,XMIEN,.XMDIR,.XMOPT,.XMINCL)
"RTN","XMJMOI",11,0)
 . I '$D(XMOPT("B","?")) D CHKRESP^XMJMP(XMDUZ,XMZ,XMRESPSO,XMRESP)
"RTN","XMJMOI",12,0)
 . D XMDIR^XMJDIR(.XMDIR,.XMOPT,.XMY,.XMABORT)
"RTN","XMJMOI",13,0)
 . K XMOPT,XMDIR
"RTN","XMJMOI",14,0)
 . Q:XMABORT
"RTN","XMJMOI",15,0)
 . D @XMY
"RTN","XMJMOI",16,0)
 D:XMINSTR("FLAGS")["P" PRIORITY
"RTN","XMJMOI",17,0)
 I XMINSTR("FLAGS")["N" D  Q
"RTN","XMJMOI",18,0)
 . I XMNEWS D  Q
"RTN","XMJMOI",19,0)
 . . I $D(^TMP("XM",$J,"MAKENEW",XMZ)),$D(^XMB(3.7,XMDUZ,"N0",XMK,XMZ)) D NONEW^XMXUTIL(XMDUZ,XMK,XMZ,1)
"RTN","XMJMOI",20,0)
 . D MAKENEW^XMXUTIL(XMDUZ,XMK,XMZ,1)
"RTN","XMJMOI",21,0)
 ;I 'XMABORT,$D(^XMB(3.7,XMDUZ,"N0",XMK,XMZ)),+XMRESP=+$P($G(^XMB(3.9,XMZ,3,0)),U,4) D NONEW^XMXUTIL(XMDUZ,XMK,XMZ,1)
"RTN","XMJMOI",22,0)
 I 'XMABORT,$D(^XMB(3.7,XMDUZ,"N0",XMK,XMZ)) D NONEW^XMXUTIL(XMDUZ,XMK,XMZ,1)
"RTN","XMJMOI",23,0)
 I XMABORT,XMNEWS,'$D(^XMB(3.7,XMDUZ,"N0",XMK,XMZ)) S ^TMP("XM",$J,"MAKENEW",XMZ)=""
"RTN","XMJMOI",24,0)
 Q
"RTN","XMJMOI",25,0)
INIT(XMDUZ,XMZ,XMSUBJ,XMFROM,XMORIGN8,XMINSTR,XMRESTR,XMIEN,XMRESPSO,XMRESP) ;
"RTN","XMJMOI",26,0)
 N XMZREC,XMIM,XMIU
"RTN","XMJMOI",27,0)
 S XMZREC=^XMB(3.9,XMZ,0)
"RTN","XMJMOI",28,0)
 D INMSG^XMXUTIL2(XMDUZ,0,XMZ,XMZREC,"I",.XMIM,.XMINSTR,.XMIU)
"RTN","XMJMOI",29,0)
 S XMSUBJ=XMIM("SUBJ")
"RTN","XMJMOI",30,0)
 S XMFROM=XMIM("FROM")
"RTN","XMJMOI",31,0)
 S XMRESPSO=XMIM("RESPS")
"RTN","XMJMOI",32,0)
 S XMIEN=XMIU("IEN")
"RTN","XMJMOI",33,0)
 S XMORIGN8=XMIU("ORIGN8")
"RTN","XMJMOI",34,0)
 S XMRESP=XMIU("RESP")
"RTN","XMJMOI",35,0)
 D GETRESTR^XMXSEC1(XMDUZ,XMZ,XMZREC,.XMINSTR,.XMRESTR) ; Get restrictions
"RTN","XMJMOI",36,0)
 I $D(XMRESTR("FLAGS")) K XMRESTR("FLAGS") ; We'll have these in XMINSTR("FLAGS"), and they may be changed during user edit.
"RTN","XMJMOI",37,0)
 Q
"RTN","XMJMOI",38,0)
READSET(XMDUZ,XMK,XMKN,XMZ,XMFROM,XMORIGN8,XMINSTR,XMIEN,XMDIR,XMOPT,XMINCL) ;
"RTN","XMJMOI",39,0)
 N XMDEFALT,XMIM,XMIU
"RTN","XMJMOI",40,0)
 S XMIM("FROM")=XMFROM
"RTN","XMJMOI",41,0)
 S XMIU("ORIGN8")=XMORIGN8
"RTN","XMJMOI",42,0)
 S XMIU("IEN")=XMIEN
"RTN","XMJMOI",43,0)
 D OPTMSG^XMXSEC2(XMDUZ,XMK,XMZ,.XMIM,.XMINSTR,.XMIU,.XMOPT)
"RTN","XMJMOI",44,0)
 S XMDIR("PRE")="I XMX?1(1""Q "",1""q "",1""QD "",1""qd "").E S XMNAME=$P(XMX,"" "",2,99),XMX=""QD"""
"RTN","XMJMOI",45,0)
 K XMOPT("QR")
"RTN","XMJMOI",46,0)
 S XMOPT("Q xxx")="Query recipient(s) xxx"
"RTN","XMJMOI",47,0)
 I XMV("NOSEND") D
"RTN","XMJMOI",48,0)
 . S:'$D(XMOPT("A","?")) XMOPT("A","?")="This session is concurrent with another.  You may not Answer messages."
"RTN","XMJMOI",49,0)
 . S:'$D(XMOPT("C","?")) XMOPT("C","?")="This session is concurrent with another.  You may not Copy messages."
"RTN","XMJMOI",50,0)
 . S:'$D(XMOPT("R","?")) XMOPT("R","?")="This session is concurrent with another.  You may not Reply to messages."
"RTN","XMJMOI",51,0)
 . S:'$D(XMOPT("W","?")) XMOPT("W","?")="This session is concurrent with another.  You may not Write messages."
"RTN","XMJMOI",52,0)
 ; Activate this line:
"RTN","XMJMOI",53,0)
 ;S XMINCL="?"  ; When "R", ask user if responses should be included
"RTN","XMJMOI",54,0)
 ; Or the next three lines:
"RTN","XMJMOI",55,0)
 S XMINCL=0    ; When "R", do not include responses
"RTN","XMJMOI",56,0)
 M XMOPT("RI")=XMOPT("R")
"RTN","XMJMOI",57,0)
 S XMOPT("RI")="Reply and Include responses"
"RTN","XMJMOI",58,0)
 S XMDIR("A")="Enter message action (in "_XMKN_" basket): "
"RTN","XMJMOI",59,0)
 S XMDEFALT=$S(XMDUZ=.6:"I",XMINSTR("FLAGS")["N":"I",1:XMV("MSG DEF"))
"RTN","XMJMOI",60,0)
 S XMDIR("B")=$S(XMK=1:$S(XMDEFALT="D":"DELETE","T":"TERMINATE",1:"IGNORE"),1:"IGNORE")
"RTN","XMJMOI",61,0)
 Q
"RTN","XMJMOI",62,0)
A ; Answer to sender only
"RTN","XMJMOI",63,0)
 D ANSWER^XMJMA(XMDUZ,XMZ,XMSUBJ,XMFROM)
"RTN","XMJMOI",64,0)
 Q
"RTN","XMJMOI",65,0)
AA ; Access Attachments
"RTN","XMJMOI",66,0)
 N XMAPBLOB
"RTN","XMJMOI",67,0)
 I $G(IOT)="IMPC" D BLOB^XMAPBLOB Q
"RTN","XMJMOI",68,0)
 D NODISP^XMAPBLOB
"RTN","XMJMOI",69,0)
 Q
"RTN","XMJMOI",70,0)
B ; Backup
"RTN","XMJMOI",71,0)
 D BACKUP^XMJMP(XMDUZ,XMK,XMKN,XMZ)
"RTN","XMJMOI",72,0)
 S XMRESP=$P($G(^XMB(3.9,XMZ,1,XMIEN,0)),U,2)
"RTN","XMJMOI",73,0)
 Q
"RTN","XMJMOI",74,0)
C ; Copy
"RTN","XMJMOI",75,0)
 D COPY^XMJMC(XMDUZ,XMK,XMZ,XMFROM)
"RTN","XMJMOI",76,0)
 Q
"RTN","XMJMOI",77,0)
D ; Delete
"RTN","XMJMOI",78,0)
 D DEL^XMXMSGS2(XMDUZ,XMK,XMZ)
"RTN","XMJMOI",79,0)
 W !,"Message deleted."
"RTN","XMJMOI",80,0)
 S XMFINISH=1
"RTN","XMJMOI",81,0)
 Q:XMINSTR("FLAGS")'["N"
"RTN","XMJMOI",82,0)
 S XMINSTR("FLAGS")=$TR(XMINSTR("FLAGS"),"N")
"RTN","XMJMOI",83,0)
 K:XMNEWS ^TMP("XM",$J,"MAKENEW",XMZ)
"RTN","XMJMOI",84,0)
 Q
"RTN","XMJMOI",85,0)
E ; Edit
"RTN","XMJMOI",86,0)
 D EDIT^XMJMOIE(XMDUZ,XMK,XMZ,.XMSUBJ,.XMINSTR,.XMRESTR)
"RTN","XMJMOI",87,0)
 Q
"RTN","XMJMOI",88,0)
F ; Forward
"RTN","XMJMOI",89,0)
 N XMABORT
"RTN","XMJMOI",90,0)
 S XMABORT=0
"RTN","XMJMOI",91,0)
 D INIT^XMXADDR
"RTN","XMJMOI",92,0)
 D TOWHOM^XMJMT(XMDUZ,"Forward",.XMINSTR,.XMRESTR,.XMABORT)  ; Find out to whom
"RTN","XMJMOI",93,0)
 I 'XMABORT D
"RTN","XMJMOI",94,0)
 . D FWD^XMKP(XMDUZ,XMZ,.XMINSTR)
"RTN","XMJMOI",95,0)
 . W !,"Message forwarded."
"RTN","XMJMOI",96,0)
 D CLEANUP^XMXADDR
"RTN","XMJMOI",97,0)
 Q
"RTN","XMJMOI",98,0)
H ; Headerless Print
"RTN","XMJMOI",99,0)
 D PRINT^XMJMP(XMDUZ,XMK,XMKN,XMZ,0)
"RTN","XMJMOI",100,0)
 S XMRESP=$P($G(^XMB(3.9,XMZ,1,XMIEN,0)),U,2)
"RTN","XMJMOI",101,0)
 Q
"RTN","XMJMOI",102,0)
I ; Ignore
"RTN","XMJMOI",103,0)
 S XMFINISH=1
"RTN","XMJMOI",104,0)
 Q
"RTN","XMJMOI",105,0)
IN ; Information Only toggle
"RTN","XMJMOI",106,0)
 I $G(XMINSTR("FLAGS"))["I" D
"RTN","XMJMOI",107,0)
 . S XMINSTR("FLAGS")=$TR(XMINSTR("FLAGS"),"I")
"RTN","XMJMOI",108,0)
 . S $P(^XMB(3.9,XMZ,0),U,12)=""
"RTN","XMJMOI",109,0)
 . W !,"Message is no longer 'Information only'."
"RTN","XMJMOI",110,0)
 E  D
"RTN","XMJMOI",111,0)
 . S XMINSTR("FLAGS")=$G(XMINSTR("FLAGS"))_"I"
"RTN","XMJMOI",112,0)
 . S $P(^XMB(3.9,XMZ,0),U,12)="y"
"RTN","XMJMOI",113,0)
 . W !,"Message is now 'Information only'.  No one may reply."
"RTN","XMJMOI",114,0)
 Q
"RTN","XMJMOI",115,0)
K ; Toggle Priority of future replies
"RTN","XMJMOI",116,0)
 I $G(XMINSTR("FLAGS"))["K" D
"RTN","XMJMOI",117,0)
 . S XMINSTR("FLAGS")=$TR(XMINSTR("FLAGS"),"K")
"RTN","XMJMOI",118,0)
 . S $P(^XMB(3.9,XMZ,1,XMIEN,0),U,9)=1
"RTN","XMJMOI",119,0)
 . W !,"Responses will not be delivered as Priority Mail."
"RTN","XMJMOI",120,0)
 E  D
"RTN","XMJMOI",121,0)
 . S XMINSTR("FLAGS")=$G(XMINSTR("FLAGS"))_"K"
"RTN","XMJMOI",122,0)
 . S $P(^XMB(3.9,XMZ,1,XMIEN,0),U,9)=""
"RTN","XMJMOI",123,0)
 . W !,"Responses will be delivered as Priority Mail."
"RTN","XMJMOI",124,0)
 S XMSETPRI=1
"RTN","XMJMOI",125,0)
 Q
"RTN","XMJMOI",126,0)
L ; Later
"RTN","XMJMOI",127,0)
 D LATER^XMJMD(XMDUZ,XMZ)
"RTN","XMJMOI",128,0)
 Q
"RTN","XMJMOI",129,0)
N ; Toggle New
"RTN","XMJMOI",130,0)
 I XMINSTR("FLAGS")["N" D
"RTN","XMJMOI",131,0)
 . S XMINSTR("FLAGS")=$TR(XMINSTR("FLAGS"),"N")
"RTN","XMJMOI",132,0)
 . K:XMNEWS ^TMP("XM",$J,"MAKENEW",XMZ)
"RTN","XMJMOI",133,0)
 . W !,"Message will NOT be new next time."
"RTN","XMJMOI",134,0)
 E  D
"RTN","XMJMOI",135,0)
 . S XMINSTR("FLAGS")=XMINSTR("FLAGS")_"N"
"RTN","XMJMOI",136,0)
 . S:XMNEWS ^TMP("XM",$J,"MAKENEW",XMZ)=""
"RTN","XMJMOI",137,0)
 . W !,"Message will be new next time."
"RTN","XMJMOI",138,0)
 . I XMK>.5!XMNEWS Q
"RTN","XMJMOI",139,0)
 . D SAVEMSG(XMDUZ,.XMK,.XMKN,XMZ,XMSUBJ,XMFROM,$G(XMINSTR("RCPT BSKT")))
"RTN","XMJMOI",140,0)
 Q
"RTN","XMJMOI",141,0)
P ; Print
"RTN","XMJMOI",142,0)
 N XMABORT
"RTN","XMJMOI",143,0)
 S XMABORT=0
"RTN","XMJMOI",144,0)
 I XMINSTR("TYPE")["K"!(XMINSTR("TYPE")["X") D  Q:XMABORT
"RTN","XMJMOI",145,0)
 . N DIR,XMMSG
"RTN","XMJMOI",146,0)
 . S XMMSG=$S(XMINSTR("TYPE")["K":"KIDS build",1:"PackMan message")
"RTN","XMJMOI",147,0)
 . S DIR("A")="Print just the descriptive text of this "_XMMSG
"RTN","XMJMOI",148,0)
 . S DIR("?",1)="This is a "_XMMSG_"."
"RTN","XMJMOI",149,0)
 . S DIR("?",2)="Answer YES to print just the descriptive text."
"RTN","XMJMOI",150,0)
 . S DIR("?")="Answer NO to print the whole thing ("_$$LINE^XMXUTIL2(XMZ)_" lines)"_$S($$RESP^XMXUTIL2(XMZ):" and/or any responses.",1:".")
"RTN","XMJMOI",151,0)
 . S DIR(0)="Y",DIR("B")="YES"
"RTN","XMJMOI",152,0)
 . D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMJMOI",153,0)
 . Q:'Y
"RTN","XMJMOI",154,0)
 . N A,DIE,DIF,X,XCF,XCN,XMR
"RTN","XMJMOI",155,0)
 . S XMR=^XMB(3.9,XMZ,0)
"RTN","XMJMOI",156,0)
 . D XT^XMP2
"RTN","XMJMOI",157,0)
 . S XMABORT=1
"RTN","XMJMOI",158,0)
 D PRINT^XMJMP(XMDUZ,XMK,XMKN,XMZ)
"RTN","XMJMOI",159,0)
 S XMRESP=$P($G(^XMB(3.9,XMZ,1,XMIEN,0)),U,2)
"RTN","XMJMOI",160,0)
 Q
"RTN","XMJMOI",161,0)
Q ; Query
"RTN","XMJMOI",162,0)
 D Q^XMJMQ(XMDUZ,XMK,XMKN,XMZ)
"RTN","XMJMOI",163,0)
 Q
"RTN","XMJMOI",164,0)
QD ; Query Detailed
"RTN","XMJMOI",165,0)
 I $D(XMNAME) D QNAMEX^XMJMQ(XMDUZ,XMK,XMKN,XMZ,XMNAME) Q
"RTN","XMJMOI",166,0)
 D QD^XMJMQ(XMDUZ,XMK,XMKN,XMZ)
"RTN","XMJMOI",167,0)
 Q
"RTN","XMJMOI",168,0)
QN ; Query Network
"RTN","XMJMOI",169,0)
 D QN^XMJMQ(XMDUZ,XMK,XMKN,XMZ)
"RTN","XMJMOI",170,0)
 Q
"RTN","XMJMOI",171,0)
RI ; Reply, Include previous response(s)
"RTN","XMJMOI",172,0)
 S XMINCL=1
"RTN","XMJMOI",173,0)
R ; Reply
"RTN","XMJMOI",174,0)
 I $D(^XMB(3.7,XMDUZ,"N0",XMK,XMZ)),+XMRESP=+$P($G(^XMB(3.9,XMZ,3,0)),U,4) D NONEW^XMXUTIL(XMDUZ,XMK,XMZ,1)
"RTN","XMJMOI",175,0)
 D REPLY^XMJMR(XMDUZ,.XMK,.XMKN,XMZ,XMSUBJ,XMFROM,.XMINSTR,XMIEN,XMRESPSO,XMINCL,.XMRESP)
"RTN","XMJMOI",176,0)
 Q
"RTN","XMJMOI",177,0)
S ; Save (replaces S^XMA1B)
"RTN","XMJMOI",178,0)
 N XMKTO,XMDIC
"RTN","XMJMOI",179,0)
 I XMK S XMDIC("B")="@"            ; no default basket
"RTN","XMJMOI",180,0)
 E  D
"RTN","XMJMOI",181,0)
 . N XMKTO
"RTN","XMJMOI",182,0)
 . S XMKTO=0
"RTN","XMJMOI",183,0)
 . D CHEKBSKT^XMTDL2(XMDUZ,.XMKTO,XMSUBJ,XMFROM,$G(XMINSTR("RCPT BSKT")))
"RTN","XMJMOI",184,0)
 . S XMDIC("B")=$P(^XMB(3.7,XMDUZ,2,XMKTO,0),U)
"RTN","XMJMOI",185,0)
 D SELBSKT^XMJBU(XMDUZ,"Save message into basket:  ","L",.XMDIC,.XMKTO) Q:XMKTO=U
"RTN","XMJMOI",186,0)
 I XMKTO=XMK D
"RTN","XMJMOI",187,0)
 . W !,"That's the same basket the message is already in."
"RTN","XMJMOI",188,0)
 E  D
"RTN","XMJMOI",189,0)
 . D MOVE^XMXMSGS2(XMDUZ,XMK,XMZ,XMKTO)
"RTN","XMJMOI",190,0)
 . W !,"Message saved."
"RTN","XMJMOI",191,0)
 . S XMK=XMKTO
"RTN","XMJMOI",192,0)
 S XMFINISH=1
"RTN","XMJMOI",193,0)
 Q
"RTN","XMJMOI",194,0)
T ; Terminate (replaces T^XMA1)
"RTN","XMJMOI",195,0)
 D TERM^XMXMSGS2(XMDUZ,XMK,XMZ)
"RTN","XMJMOI",196,0)
 W !,"You won't see future replies.  (In WASTE basket)"
"RTN","XMJMOI",197,0)
 S XMFINISH=1
"RTN","XMJMOI",198,0)
 S:XMINSTR("FLAGS")["P" XMINSTR("FLAGS")=$TR(XMINSTR("FLAGS"),"P")
"RTN","XMJMOI",199,0)
 Q:XMINSTR("FLAGS")'["N"
"RTN","XMJMOI",200,0)
 S XMINSTR("FLAGS")=$TR(XMINSTR("FLAGS"),"N")
"RTN","XMJMOI",201,0)
 K:XMNEWS ^TMP("XM",$J,"MAKENEW",XMZ)
"RTN","XMJMOI",202,0)
 Q
"RTN","XMJMOI",203,0)
V ; Set Vaporize date for msg in basket (replaces DATE^XMA11A)
"RTN","XMJMOI",204,0)
 N DIE,DA,DR
"RTN","XMJMOI",205,0)
 L +^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)
"RTN","XMJMOI",206,0)
 S DIE="^XMB(3.7,"_XMDUZ_",2,"_XMK_",1,"
"RTN","XMJMOI",207,0)
 S DA(2)=XMDUZ,DA(1)=XMK,DA=XMZ
"RTN","XMJMOI",208,0)
 S DR=5
"RTN","XMJMOI",209,0)
 D ^DIE
"RTN","XMJMOI",210,0)
 L -^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)
"RTN","XMJMOI",211,0)
 Q
"RTN","XMJMOI",212,0)
W ; Write a new msg
"RTN","XMJMOI",213,0)
 D SEND^XMJMS
"RTN","XMJMOI",214,0)
 Q
"RTN","XMJMOI",215,0)
X ; Xtract PackMan msg
"RTN","XMJMOI",216,0)
 N X,DIC,C,I,ER,J,K,T,X2,XCF,XCM,XCN,XMKEY,XMKEYTRY,XMLOC,XMN,XMP0,XMR,XMRW,XMS
"RTN","XMJMOI",217,0)
 S X=XMZ,DIC(0)="N"
"RTN","XMJMOI",218,0)
 D MM^XMP
"RTN","XMJMOI",219,0)
 Q
"RTN","XMJMOI",220,0)
PRIORITY ; For priority msgs, ask user if replies should be priority.
"RTN","XMJMOI",221,0)
 ; Don't ask if the user has already issued a priority toggle,
"RTN","XMJMOI",222,0)
 ; or if the user has chosen never to be asked.
"RTN","XMJMOI",223,0)
 Q:XMDUZ=.5&(XMK>999)
"RTN","XMJMOI",224,0)
 Q:$G(XMSETPRI)!$P(^XMB(3.7,DUZ,0),U,12)
"RTN","XMJMOI",225,0)
 N DIR,Y,DIRUT
"RTN","XMJMOI",226,0)
 W !!,"This message is a priority message."
"RTN","XMJMOI",227,0)
 S DIR(0)="Y"
"RTN","XMJMOI",228,0)
 S DIR("A")="Deliver future responses to this message as Priority Mail"
"RTN","XMJMOI",229,0)
 S DIR("B")=$S(XMINSTR("FLAGS")["K":"Yes",1:"No")
"RTN","XMJMOI",230,0)
 S DIR("??")="^D QQPRI^XMJMOI"
"RTN","XMJMOI",231,0)
 D ^DIR Q:$D(DIRUT)
"RTN","XMJMOI",232,0)
 I (XMINSTR("FLAGS")["K"&(Y=0))!(XMINSTR("FLAGS")'["K"&(Y=1)) D K
"RTN","XMJMOI",233,0)
 Q
"RTN","XMJMOI",234,0)
QQPRI ;
"RTN","XMJMOI",235,0)
 W !!,"Your answer determines, for this message,"
"RTN","XMJMOI",236,0)
 W !,"how MailMan delivers responses to you."
"RTN","XMJMOI",237,0)
 W !!,"(Recipients can determine for themselves, on a message by message basis,"
"RTN","XMJMOI",238,0)
 W !,"how responses to priority messages are delivered to them."
"RTN","XMJMOI",239,0)
 W !,"It follows that responses to priority messages are not necessarily delivered"
"RTN","XMJMOI",240,0)
 W !,"as Priority Mail to all recipients.)"
"RTN","XMJMOI",241,0)
 Q
"RTN","XMJMOI",242,0)
SAVEMSG(XMDUZ,XMK,XMKN,XMZ,XMSUBJ,XMFROM,XMZBSKT) ;
"RTN","XMJMOI",243,0)
 ; The message is currently in the waste basket or no basket.
"RTN","XMJMOI",244,0)
 ; Save it to an appropriate (not waste) basket.
"RTN","XMJMOI",245,0)
 N XMKTO
"RTN","XMJMOI",246,0)
 S XMKTO=0
"RTN","XMJMOI",247,0)
 D CHEKBSKT^XMTDL2(XMDUZ,.XMKTO,XMSUBJ,XMFROM,$G(XMINSTR("RCPT BSKT")))
"RTN","XMJMOI",248,0)
 S:XMKTO=.5 XMKTO=1
"RTN","XMJMOI",249,0)
 S XMKN=$P(^XMB(3.7,XMDUZ,2,XMKTO,0),U,1)
"RTN","XMJMOI",250,0)
 I 'XMK D
"RTN","XMJMOI",251,0)
 . D PUTMSG^XMXMSGS2(XMDUZ,XMKTO,XMKN,XMZ)
"RTN","XMJMOI",252,0)
 E  D
"RTN","XMJMOI",253,0)
 . ; Message is in waste basket
"RTN","XMJMOI",254,0)
 . D COPYIT^XMXMSGS2(XMDUZ,.5,XMZ,XMKTO)
"RTN","XMJMOI",255,0)
 . D ZAPIT^XMXMSGS2(XMDUZ,.5,XMZ)
"RTN","XMJMOI",256,0)
 S XMK=XMKTO
"RTN","XMJMOI",257,0)
 W !,"Message saved to ",XMKN," basket."
"RTN","XMJMOI",258,0)
 Q
"RTN","XMJMOIE")
0^18^B9697558
"RTN","XMJMOIE",1,0)
XMJMOIE ;ISC-SF/GMB-Edit msg that user has sent to self ;04/29/99  12:43
"RTN","XMJMOIE",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMOIE",3,0)
EDIT(XMDUZ,XMK,XMZ,XMSUBJ,XMINSTR,XMRESTR) ;
"RTN","XMJMOIE",4,0)
 N XMABORT
"RTN","XMJMOIE",5,0)
 S XMABORT=0
"RTN","XMJMOIE",6,0)
 F  D  Q:XMABORT
"RTN","XMJMOIE",7,0)
 . N DIR,Y,X
"RTN","XMJMOIE",8,0)
 . D SENDSET(.XMINSTR,.DIR)
"RTN","XMJMOIE",9,0)
 . D ^DIR I $D(DIRUT) S XMABORT=$S($D(DTOUT):DTIME,1:1) Q
"RTN","XMJMOIE",10,0)
 . D @Y
"RTN","XMJMOIE",11,0)
 Q
"RTN","XMJMOIE",12,0)
SENDSET(XMINSTR,DIR) ;
"RTN","XMJMOIE",13,0)
 S DIR(0)=""
"RTN","XMJMOIE",14,0)
 I $G(XMINSTR("FLAGS"))["C" S DIR(0)=DIR(0)_";C:UnConfidential (surrogate may read)"
"RTN","XMJMOIE",15,0)
 E                          S DIR(0)=DIR(0)_";C:Confidential (surrogate can't read)"
"RTN","XMJMOIE",16,0)
 I $D(XMINSTR("RCPT BSKT")) S DIR(0)=DIR(0)_";D:Delivery basket remove"
"RTN","XMJMOIE",17,0)
 E                          S DIR(0)=DIR(0)_";D:Delivery basket set"
"RTN","XMJMOIE",18,0)
 I $G(XMINSTR("FLAGS"))["I" S DIR(0)=DIR(0)_";I:UnInformation only (recipients may respond)"
"RTN","XMJMOIE",19,0)
 E                          S DIR(0)=DIR(0)_";I:Information only (recipients may not respond)"
"RTN","XMJMOIE",20,0)
 I $G(XMINSTR("FLAGS"))["P" S DIR(0)=DIR(0)_";P:Normal delivery"
"RTN","XMJMOIE",21,0)
 E                          S DIR(0)=DIR(0)_";P:Priority delivery"
"RTN","XMJMOIE",22,0)
 I $G(XMINSTR("FLAGS"))["R" S DIR(0)=DIR(0)_";R:No Confirm receipt"
"RTN","XMJMOIE",23,0)
 E                          S DIR(0)=DIR(0)_";R:Confirm receipt"
"RTN","XMJMOIE",24,0)
 S DIR(0)=DIR(0)_";S:Edit Subject"
"RTN","XMJMOIE",25,0)
 S DIR(0)=DIR(0)_";T:Edit Text"
"RTN","XMJMOIE",26,0)
 I $D(XMINSTR("VAPOR"))     S DIR(0)=DIR(0)_";V:Vaporize date remove"
"RTN","XMJMOIE",27,0)
 E                          S DIR(0)=DIR(0)_";V:Vaporize date set"
"RTN","XMJMOIE",28,0)
 I $G(XMINSTR("FLAGS"))["X" S DIR(0)=DIR(0)_";X:UnClose message (forward allowed)"
"RTN","XMJMOIE",29,0)
 E                          S DIR(0)=DIR(0)_";X:Closed message (no forward allowed)"
"RTN","XMJMOIE",30,0)
 S DIR("A")="Select Edit option:  "
"RTN","XMJMOIE",31,0)
 S DIR(0)="SAMO^"_$E(DIR(0),2,999)
"RTN","XMJMOIE",32,0)
 Q
"RTN","XMJMOIE",33,0)
C ; Confidential msg
"RTN","XMJMOIE",34,0)
 N XMMSG
"RTN","XMJMOIE",35,0)
 D CONFID^XMXEDIT(XMZ,.XMINSTR,.XMMSG)
"RTN","XMJMOIE",36,0)
 I $D(XMERR) D SHOW^XMJERR Q
"RTN","XMJMOIE",37,0)
 W !,XMMSG
"RTN","XMJMOIE",38,0)
 Q
"RTN","XMJMOIE",39,0)
D ; Delivery basket
"RTN","XMJMOIE",40,0)
 N XMMSG
"RTN","XMJMOIE",41,0)
 I $D(XMINSTR("RCPT BSKT")) D  Q
"RTN","XMJMOIE",42,0)
 . D DELIVER^XMXEDIT(XMZ,"@",.XMINSTR,.XMMSG)
"RTN","XMJMOIE",43,0)
 . W !,XMMSG
"RTN","XMJMOIE",44,0)
 D D^XMJMSO
"RTN","XMJMOIE",45,0)
 Q:'$D(XMINSTR("RCPT BSKT"))
"RTN","XMJMOIE",46,0)
 D DELIVER^XMXEDIT(XMZ,XMINSTR("RCPT BSKT"),.XMINSTR,.XMMSG)
"RTN","XMJMOIE",47,0)
 Q
"RTN","XMJMOIE",48,0)
I ; Information only msg
"RTN","XMJMOIE",49,0)
 N XMMSG
"RTN","XMJMOIE",50,0)
 D INFO^XMXEDIT(XMZ,.XMINSTR,.XMMSG)
"RTN","XMJMOIE",51,0)
 W !,XMMSG
"RTN","XMJMOIE",52,0)
 Q
"RTN","XMJMOIE",53,0)
P ; Priority msg
"RTN","XMJMOIE",54,0)
 N XMMSG
"RTN","XMJMOIE",55,0)
 D PRIORITY^XMXEDIT(XMZ,.XMINSTR,.XMMSG)
"RTN","XMJMOIE",56,0)
 W !,XMMSG
"RTN","XMJMOIE",57,0)
 Q
"RTN","XMJMOIE",58,0)
R ; Confirm receipt of msg
"RTN","XMJMOIE",59,0)
 N XMMSG
"RTN","XMJMOIE",60,0)
 D CONFIRM^XMXEDIT(XMZ,.XMINSTR,.XMMSG)
"RTN","XMJMOIE",61,0)
 W !,XMMSG
"RTN","XMJMOIE",62,0)
 Q
"RTN","XMJMOIE",63,0)
S ; Edit Subject
"RTN","XMJMOIE",64,0)
 D ES^XMJMSO
"RTN","XMJMOIE",65,0)
 Q
"RTN","XMJMOIE",66,0)
T ; Edit Text
"RTN","XMJMOIE",67,0)
 I $G(XMPAKMAN) Q:$$NOPAKEDT^XMJMSO
"RTN","XMJMOIE",68,0)
 D BODY^XMJMS(XMDUZ,XMZ,XMSUBJ,.XMRESTR)
"RTN","XMJMOIE",69,0)
 Q
"RTN","XMJMOIE",70,0)
V ; Vaporize date
"RTN","XMJMOIE",71,0)
 N XMMSG
"RTN","XMJMOIE",72,0)
 I $G(XMINSTR("VAPOR")) D  Q
"RTN","XMJMOIE",73,0)
 . D VAPOR^XMXEDIT(XMZ,"@",.XMINSTR,.XMMSG)
"RTN","XMJMOIE",74,0)
 . W !,XMMSG
"RTN","XMJMOIE",75,0)
 D V^XMJMSO
"RTN","XMJMOIE",76,0)
 Q:'$D(XMINSTR("VAPOR"))
"RTN","XMJMOIE",77,0)
 D VAPOR^XMXEDIT(XMZ,XMINSTR("VAPOR"),.XMINSTR,.XMMSG)
"RTN","XMJMOIE",78,0)
 Q
"RTN","XMJMOIE",79,0)
X ; Closed msg
"RTN","XMJMOIE",80,0)
 N XMMSG
"RTN","XMJMOIE",81,0)
 D CLOSED^XMXEDIT(XMZ,.XMINSTR,.XMMSG)
"RTN","XMJMOIE",82,0)
 I $D(XMERR) D SHOW^XMJERR Q
"RTN","XMJMOIE",83,0)
 W !,XMMSG
"RTN","XMJMOIE",84,0)
 Q
"RTN","XMJMOR")
0^19^B64221589
"RTN","XMJMOR",1,0)
XMJMOR ;ISC-SF/GMB-Range actions ;03/31/99  16:48
"RTN","XMJMOR",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMOR",3,0)
 ; Replaces ^XMA0,^XMA01 (ISC-WASH/CAP)
"RTN","XMJMOR",4,0)
DELETE(XMDUZ,XMK) ; Delete a range of messages
"RTN","XMJMOR",5,0)
 N XMWHICH,XMMSG,XMABORT
"RTN","XMJMOR",6,0)
 S XMABORT=0
"RTN","XMJMOR",7,0)
 I $D(^TMP("XM",$J,".")) D
"RTN","XMJMOR",8,0)
 . N DIR,Y
"RTN","XMJMOR",9,0)
 . S DIR(0)="Y",DIR("A")="Are you sure you want to delete the selected messages",DIR("B")="NO" D ^DIR I $D(DIRUT)!'Y S XMABORT=1 Q
"RTN","XMJMOR",10,0)
 . D SELMSG^XMJMORX(XMDUZ,0,0,XMK,"XDEL^XMJMORX1",.XMMSG)
"RTN","XMJMOR",11,0)
 . S XMMSG=XMMSG_" deleted."
"RTN","XMJMOR",12,0)
 . ;K ^TMP("XM",$J,".")
"RTN","XMJMOR",13,0)
 E  D
"RTN","XMJMOR",14,0)
 . D WHICH(XMDUZ,XMK,"","","Delete which messages",1,.XMWHICH,.XMABORT) Q:XMABORT
"RTN","XMJMOR",15,0)
 . D DELMSG^XMXMSGS(XMDUZ,XMK,XMWHICH,.XMMSG)
"RTN","XMJMOR",16,0)
 . D:$D(XMERR) ZSHOW^XMJERR
"RTN","XMJMOR",17,0)
 Q:XMABORT
"RTN","XMJMOR",18,0)
 W:$D(XMMSG) !,XMMSG
"RTN","XMJMOR",19,0)
 Q
"RTN","XMJMOR",20,0)
FILTER(XMDUZ,XMK) ; Filter a range of messages
"RTN","XMJMOR",21,0)
 N XMWHICH,XMMSG,XMABORT
"RTN","XMJMOR",22,0)
 S XMABORT=0
"RTN","XMJMOR",23,0)
 I $D(^TMP("XM",$J,".")) D
"RTN","XMJMOR",24,0)
 . N XMKZ
"RTN","XMJMOR",25,0)
 . D SELMSG(XMDUZ,XMK,"XFLTR^XMXMSGS2","filtered",.XMMSG)
"RTN","XMJMOR",26,0)
 . S XMKZ=""
"RTN","XMJMOR",27,0)
 . F  S XMKZ=$O(^TMP("XM",$J,".",XMKZ)) Q:'XMKZ  K:'$D(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ)) ^TMP("XM",$J,".",XMKZ)
"RTN","XMJMOR",28,0)
 E  D
"RTN","XMJMOR",29,0)
 . D WHICH(XMDUZ,XMK,"","","Filter which messages",0,.XMWHICH,.XMABORT) Q:XMABORT
"RTN","XMJMOR",30,0)
 . D FLTRMSG^XMXMSGS(XMDUZ,XMK,XMWHICH,.XMMSG)
"RTN","XMJMOR",31,0)
 . D:$D(XMERR) ZSHOW^XMJERR
"RTN","XMJMOR",32,0)
 Q:XMABORT
"RTN","XMJMOR",33,0)
 W:$D(XMMSG) !,XMMSG
"RTN","XMJMOR",34,0)
 Q
"RTN","XMJMOR",35,0)
FORWARD(XMDUZ,XMK) ; Forward a range of messages
"RTN","XMJMOR",36,0)
 N XMWHICH,XMMSG,XMABORT,XMINSTR
"RTN","XMJMOR",37,0)
 S XMABORT=0
"RTN","XMJMOR",38,0)
 I $D(^TMP("XM",$J,".")) D  Q
"RTN","XMJMOR",39,0)
 . N XMKZ
"RTN","XMJMOR",40,0)
 . D INIT^XMXADDR
"RTN","XMJMOR",41,0)
 . S XMKZ=$O(^TMP("XM",$J,".",""))
"RTN","XMJMOR",42,0)
 . I '$O(^TMP("XM",$J,".",XMKZ)) D  Q
"RTN","XMJMOR",43,0)
 . . D FWDONE(XMDUZ,$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,"")),.XMINSTR,.XMABORT)
"RTN","XMJMOR",44,0)
 . D TOWHOM^XMJMT(XMDUZ,"Forward",.XMINSTR,"",.XMABORT) Q:XMABORT
"RTN","XMJMOR",45,0)
 . D SELMSG(XMDUZ,XMK,"XFWD^XMXMSGS1","forwarded",.XMMSG)
"RTN","XMJMOR",46,0)
 . D CLEANUP^XMXADDR
"RTN","XMJMOR",47,0)
 . D:$D(XMERR) ZSHOW^XMJERR
"RTN","XMJMOR",48,0)
 . W:$D(XMMSG) !,XMMSG," forwarded"
"RTN","XMJMOR",49,0)
 D WHICH(XMDUZ,XMK,"","","Forward which messages",0,.XMWHICH,.XMABORT) Q:XMABORT
"RTN","XMJMOR",50,0)
 D INIT^XMXADDR
"RTN","XMJMOR",51,0)
 I $P(XMWHICH,",",2,99)="",$P(XMWHICH,",",1)=+XMWHICH D  Q
"RTN","XMJMOR",52,0)
 . N XMZ
"RTN","XMJMOR",53,0)
 . S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",+XMWHICH,""))
"RTN","XMJMOR",54,0)
 . I 'XMZ W !,"No messages forwarded." Q
"RTN","XMJMOR",55,0)
 . D FWDONE(XMDUZ,XMZ,.XMINSTR,.XMABORT)
"RTN","XMJMOR",56,0)
 D TOWHOM^XMJMT(XMDUZ,"Forward",.XMINSTR,"",.XMABORT) Q:XMABORT
"RTN","XMJMOR",57,0)
 S XMINSTR("ADDR FLAGS")="I"
"RTN","XMJMOR",58,0)
 D FWDMSG^XMXMSGS(XMDUZ,XMK,XMWHICH,"",.XMINSTR,.XMMSG)
"RTN","XMJMOR",59,0)
 D:$D(XMERR) ZSHOW^XMJERR
"RTN","XMJMOR",60,0)
 W:$D(XMMSG) !,XMMSG
"RTN","XMJMOR",61,0)
 Q
"RTN","XMJMOR",62,0)
FWDONE(XMDUZ,XMZ,XMINSTR,XMABORT) ; Forward just one message
"RTN","XMJMOR",63,0)
 N XMZREC,XMRESTR
"RTN","XMJMOR",64,0)
 S XMZREC=^XMB(3.9,XMZ,0)
"RTN","XMJMOR",65,0)
 I '$$FORWARD^XMXSEC(XMDUZ,XMZ,XMZREC) D SHOW^XMJERR Q
"RTN","XMJMOR",66,0)
 D GETRESTR^XMXSEC1(XMDUZ,XMZ,XMZREC,"",.XMRESTR) ; Get restrictions on the msg
"RTN","XMJMOR",67,0)
 D TOWHOM^XMJMT(XMDUZ,"Forward",.XMINSTR,.XMRESTR,.XMABORT) Q:XMABORT
"RTN","XMJMOR",68,0)
 D FWD^XMKP(XMDUZ,XMZ,.XMINSTR)
"RTN","XMJMOR",69,0)
 D CLEANUP^XMXADDR
"RTN","XMJMOR",70,0)
 W !,"Message forwarded."
"RTN","XMJMOR",71,0)
 Q
"RTN","XMJMOR",72,0)
LATER(XMDUZ,XMK) ; Later a range of messages
"RTN","XMJMOR",73,0)
 N XMWHICH,XMMSG,XMABORT,XMWHEN
"RTN","XMJMOR",74,0)
 S XMABORT=0
"RTN","XMJMOR",75,0)
 I $D(^TMP("XM",$J,".")) D
"RTN","XMJMOR",76,0)
 . D LTRDATE^XMJMD(.XMWHEN,.XMABORT) Q:XMABORT
"RTN","XMJMOR",77,0)
 . D SELMSG(XMDUZ,XMK,"XLATER^XMXMSGS2","latered",.XMMSG)
"RTN","XMJMOR",78,0)
 E  D
"RTN","XMJMOR",79,0)
 . N XMINSTR
"RTN","XMJMOR",80,0)
 . D WHICH(XMDUZ,XMK,"","","Later which messages",0,.XMWHICH,.XMABORT) Q:XMABORT
"RTN","XMJMOR",81,0)
 . D LTRDATE^XMJMD(.XMWHEN,.XMABORT) Q:XMABORT
"RTN","XMJMOR",82,0)
 . S XMINSTR("LATER")=XMWHEN
"RTN","XMJMOR",83,0)
 . D LATERMSG^XMXMSGS(XMDUZ,XMK,XMWHICH,.XMINSTR,.XMMSG)
"RTN","XMJMOR",84,0)
 . D:$D(XMERR) ZSHOW^XMJERR
"RTN","XMJMOR",85,0)
 Q:XMABORT
"RTN","XMJMOR",86,0)
 W:$D(XMMSG) !,XMMSG
"RTN","XMJMOR",87,0)
 Q
"RTN","XMJMOR",88,0)
PRINT(XMDUZ,XMK,XMKN,XMPRTHDR) ; Print a range of messages
"RTN","XMJMOR",89,0)
 N XMWHICH,XMMSG,XMRESP,XMRESPS,XMRECIPS,XMABORT
"RTN","XMJMOR",90,0)
 ; XMPRTHDR 1=Print header
"RTN","XMJMOR",91,0)
 ;          0=don't (headerless print)
"RTN","XMJMOR",92,0)
 ; XMRECIPS 0=Don't print recipients
"RTN","XMJMOR",93,0)
 ;          1=Print summary recipients
"RTN","XMJMOR",94,0)
 ;          2=Print detail recipients
"RTN","XMJMOR",95,0)
 N XMSAVE,XMMSG
"RTN","XMJMOR",96,0)
 S XMABORT=0
"RTN","XMJMOR",97,0)
 S:$G(XMPRTHDR)="" XMPRTHDR=1  ; default is to print with headers
"RTN","XMJMOR",98,0)
 I $D(^TMP("XM",$J,".")) D  Q
"RTN","XMJMOR",99,0)
 . N XMKZ,J,XMZLIST,I,XMZ
"RTN","XMJMOR",100,0)
 . S XMKZ=$O(^TMP("XM",$J,".",""))
"RTN","XMJMOR",101,0)
 . I '$O(^TMP("XM",$J,".",XMKZ)) D  Q
"RTN","XMJMOR",102,0)
 . . D PRTONE(XMDUZ,XMK,XMKN,$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,"")),XMPRTHDR,.XMABORT)
"RTN","XMJMOR",103,0)
 . D QRECIP^XMJMP(.XMRECIPS,.XMABORT) Q:XMABORT
"RTN","XMJMOR",104,0)
 . S (XMKZ,J)=0
"RTN","XMJMOR",105,0)
 . F  S XMKZ=$O(^TMP("XM",$J,".",XMKZ)) Q:'XMKZ  D
"RTN","XMJMOR",106,0)
 . . S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,""))
"RTN","XMJMOR",107,0)
 . . I J=0 S J=1,XMZLIST(1)=XMZ Q
"RTN","XMJMOR",108,0)
 . . I $L(XMZLIST(J))+$L(XMZ)>240 S J=J+1,XMZLIST(J)=XMZ Q
"RTN","XMJMOR",109,0)
 . . S XMZLIST(J)=XMZLIST(J)_","_XMZ
"RTN","XMJMOR",110,0)
 . Q:XMABORT
"RTN","XMJMOR",111,0)
 . F I="XMV(","XMZLIST(","DUZ","XMDUZ","XMRECIPS","XMPRTHDR" S XMSAVE(I)=""
"RTN","XMJMOR",112,0)
 . D EN^XUTMDEVQ("PRANGEX^XMJMORX1","MailMan Print",.XMSAVE)
"RTN","XMJMOR",113,0)
 . W:$D(XMMSG) !!,XMMSG
"RTN","XMJMOR",114,0)
 D WHICH(XMDUZ,XMK,"","","Print which messages"_$S(XMPRTHDR:"",1:" without headers"),0,.XMWHICH,.XMABORT) Q:XMABORT
"RTN","XMJMOR",115,0)
 I $P(XMWHICH,",",2,99)="",$P(XMWHICH,",",1)=+XMWHICH D  Q
"RTN","XMJMOR",116,0)
 . N XMZ
"RTN","XMJMOR",117,0)
 . S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",+XMWHICH,""))
"RTN","XMJMOR",118,0)
 . I 'XMZ W !,"No messages forwarded." Q
"RTN","XMJMOR",119,0)
 . D PRTONE(XMDUZ,XMK,XMKN,XMZ,XMPRTHDR,.XMABORT)
"RTN","XMJMOR",120,0)
 D QRECIP^XMJMP(.XMRECIPS,.XMABORT) Q:XMABORT
"RTN","XMJMOR",121,0)
 F I="XMV(","XMWHICH","DUZ","XMDUZ","XMK","XMKN","XMRECIPS","XMPRTHDR" S XMSAVE(I)=""
"RTN","XMJMOR",122,0)
 D EN^XUTMDEVQ("PRANGEX^XMJMP","MailMan Print",.XMSAVE)
"RTN","XMJMOR",123,0)
 Q:XMABORT
"RTN","XMJMOR",124,0)
 W:$D(XMMSG) !!,XMMSG
"RTN","XMJMOR",125,0)
 Q
"RTN","XMJMOR",126,0)
PRTONE(XMDUZ,XMK,XMKN,XMZ,XMPRTHDR,XMABORT) ;
"RTN","XMJMOR",127,0)
 D PONE^XMJMP(XMDUZ,XMK,XMKN,XMZ,XMPRTHDR,.XMABORT)
"RTN","XMJMOR",128,0)
 I XMABORT W !!,"Message not printed." Q
"RTN","XMJMOR",129,0)
 W !!,"Message printed."
"RTN","XMJMOR",130,0)
 Q
"RTN","XMJMOR",131,0)
SAVE(XMDUZ,XMK) ; Save a range of messages to another basket
"RTN","XMJMOR",132,0)
 N XMWHICH,XMMSG,XMABORT,XMKTO,XMDIC
"RTN","XMJMOR",133,0)
 S XMABORT=0
"RTN","XMJMOR",134,0)
 S XMDIC("B")="@"  ; no default basket
"RTN","XMJMOR",135,0)
 I $D(^TMP("XM",$J,".")) D
"RTN","XMJMOR",136,0)
 . D SELBSKT^XMJBU(XMDUZ,"Save messages to which basket? ","L",.XMDIC,.XMKTO) I XMKTO=U S XMMSG="Message(s) not saved." Q
"RTN","XMJMOR",137,0)
 . I XMKTO=XMK S XMMSG="Same basket." Q
"RTN","XMJMOR",138,0)
 . D SELMSG(XMDUZ,XMK,"XMOVE^XMXMSGS2","saved",.XMMSG)
"RTN","XMJMOR",139,0)
 . K ^TMP("XM",$J,".")
"RTN","XMJMOR",140,0)
 E  D
"RTN","XMJMOR",141,0)
 . D WHICH(XMDUZ,XMK,"","","Save which messages",0,.XMWHICH,.XMABORT) Q:XMABORT
"RTN","XMJMOR",142,0)
 . D SELBSKT^XMJBU(XMDUZ,"Save messages to which basket? ","L",.XMDIC,.XMKTO) I XMKTO=U S XMMSG="Message(s) not saved." Q
"RTN","XMJMOR",143,0)
 . I XMKTO=XMK S XMMSG="Same basket." Q
"RTN","XMJMOR",144,0)
 . D MOVEMSG^XMXMSGS(XMDUZ,XMK,XMWHICH,XMKTO,.XMMSG)
"RTN","XMJMOR",145,0)
 . D:$D(XMERR) ZSHOW^XMJERR
"RTN","XMJMOR",146,0)
 Q:XMABORT
"RTN","XMJMOR",147,0)
 W:$D(XMMSG) !,XMMSG
"RTN","XMJMOR",148,0)
 Q
"RTN","XMJMOR",149,0)
TERM(XMDUZ,XMK) ; Terminate a range of messages
"RTN","XMJMOR",150,0)
 N XMWHICH,XMMSG,XMABORT
"RTN","XMJMOR",151,0)
 S XMABORT=0
"RTN","XMJMOR",152,0)
 I $D(^TMP("XM",$J,".")) D
"RTN","XMJMOR",153,0)
 . N DIR,Y
"RTN","XMJMOR",154,0)
 . S DIR(0)="Y",DIR("A")="Are you sure you want to terminate the selected messages",DIR("B")="NO" D ^DIR I $D(DIRUT)!'Y S XMABORT=1 Q
"RTN","XMJMOR",155,0)
 . D SELMSG^XMJMORX(XMDUZ,0,0,XMK,"XTERM^XMJMORX1",.XMMSG)
"RTN","XMJMOR",156,0)
 . S XMMSG=XMMSG_" terminated."
"RTN","XMJMOR",157,0)
 . ;K ^TMP("XM",$J,".")
"RTN","XMJMOR",158,0)
 E  D
"RTN","XMJMOR",159,0)
 . D WHICH(XMDUZ,XMK,"","","Terminate which messages",1,.XMWHICH,.XMABORT) Q:XMABORT
"RTN","XMJMOR",160,0)
 . D TERMMSG^XMXMSGS(XMDUZ,XMK,XMWHICH,.XMMSG)
"RTN","XMJMOR",161,0)
 . D:$D(XMERR) ZSHOW^XMJERR
"RTN","XMJMOR",162,0)
 Q:XMABORT
"RTN","XMJMOR",163,0)
 Q:'$D(XMMSG)
"RTN","XMJMOR",164,0)
 W !,XMMSG
"RTN","XMJMOR",165,0)
 W:+XMMSG !,"You won't see future responses.  (In WASTE basket)"
"RTN","XMJMOR",166,0)
 Q
"RTN","XMJMOR",167,0)
XMTPRI(XMDUZ,XMK) ; Toggle transmission priority for a range of msgs
"RTN","XMJMOR",168,0)
 ; XMDUZ better be .5 and XMK better be > 999!
"RTN","XMJMOR",169,0)
 N XMWHICH,XMMSG,XMABORT
"RTN","XMJMOR",170,0)
 S XMABORT=0
"RTN","XMJMOR",171,0)
 I $D(^TMP("XM",$J,".")) D
"RTN","XMJMOR",172,0)
 . N DIR,Y
"RTN","XMJMOR",173,0)
 . S DIR(0)="Y",DIR("A")="Are you sure you want to toggle the xmit priority for the selected messages",DIR("B")="NO" D ^DIR I $D(DIRUT)!'Y S XMABORT=1 Q
"RTN","XMJMOR",174,0)
 . D SELMSG(XMDUZ,XMK,"XXP^XMXMSGS1","xmit priority toggled",.XMMSG)
"RTN","XMJMOR",175,0)
 E  D
"RTN","XMJMOR",176,0)
 . D WHICH(XMDUZ,XMK,"","","Toggle xmit priority for which messages",1,.XMWHICH,.XMABORT) Q:XMABORT
"RTN","XMJMOR",177,0)
 . D XPMSG^XMXMSGS(XMDUZ,XMK,XMWHICH,.XMMSG)
"RTN","XMJMOR",178,0)
 . D:$D(XMERR) ZSHOW^XMJERR
"RTN","XMJMOR",179,0)
 Q:XMABORT
"RTN","XMJMOR",180,0)
 W:$D(XMMSG) !,XMMSG
"RTN","XMJMOR",181,0)
 Q
"RTN","XMJMOR",182,0)
WHICH(XMDUZ,XMK,XMKN,XMKZ,XMPROMPT,XMCONFRM,XMWHICH,XMABORT) ;
"RTN","XMJMOR",183,0)
 N DIR,Y,XMHI,XMLO
"RTN","XMJMOR",184,0)
 S XMLO=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",""))
"RTN","XMJMOR",185,0)
 S XMHI=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",""),-1)
"RTN","XMJMOR",186,0)
 S DIR("A")=XMPROMPT
"RTN","XMJMOR",187,0)
 ;S DIR("??")="^D LIST^XMJML(XMDUZ,XMK,XMKN,XMKZ,0)"
"RTN","XMJMOR",188,0)
 S DIR("??")="XM-U-M-CHOOSE RANGE"
"RTN","XMJMOR",189,0)
 S DIR(0)="LC^"_XMLO_":"_XMHI
"RTN","XMJMOR",190,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMJMOR",191,0)
 S XMWHICH=Y
"RTN","XMJMOR",192,0)
 Q:'XMCONFRM
"RTN","XMJMOR",193,0)
 K DIR
"RTN","XMJMOR",194,0)
 S DIR("A")="Do you really want to "_$$LOW^XLFSTR($P(XMPROMPT," "))_" these messages"
"RTN","XMJMOR",195,0)
 S DIR("B")="No"
"RTN","XMJMOR",196,0)
 S DIR(0)="Y"
"RTN","XMJMOR",197,0)
 D ^DIR I $D(DIRUT)!'Y S XMABORT=1 Q
"RTN","XMJMOR",198,0)
 Q
"RTN","XMJMOR",199,0)
POSTPRIV() ;
"RTN","XMJMOR",200,0)
 Q:$$POSTPRIV^XMXSEC 1
"RTN","XMJMOR",201,0)
 D SHOW^XMJERR
"RTN","XMJMOR",202,0)
 Q 0
"RTN","XMJMOR",203,0)
SELMSG(XMDUZ,XMK,XMRTN,XMVERB,XMMSG) ;
"RTN","XMJMOR",204,0)
 N XMCNT,XMKZ,XMZ,XMKALL
"RTN","XMJMOR",205,0)
 S (XMCNT,XMKZ)=0
"RTN","XMJMOR",206,0)
 F  S XMKZ=$O(^TMP("XM",$J,".",XMKZ)) Q:'XMKZ  D
"RTN","XMJMOR",207,0)
 . S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,""))
"RTN","XMJMOR",208,0)
 . D @XMRTN
"RTN","XMJMOR",209,0)
 S XMMSG=XMCNT_" message"_$S(XMCNT=1:" ",1:"s ")_XMVERB_"."
"RTN","XMJMOR",210,0)
 Q
"RTN","XMJMORX")
0^20^B76760875
"RTN","XMJMORX",1,0)
XMJMORX ;ISC-SF/GMB-Range actions for ^TMP message lists ;04/05/99  15:23
"RTN","XMJMORX",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMORX",3,0)
 ; Similar to ^XMJMOR
"RTN","XMJMORX",4,0)
DELETE(XMDUZ,XMKALL,XMK) ; Delete a range of messages
"RTN","XMJMORX",5,0)
 N XMWHICH,XMMSG,XMABORT
"RTN","XMJMORX",6,0)
 S XMABORT=0
"RTN","XMJMORX",7,0)
 I $D(^TMP("XM",$J,".")) D
"RTN","XMJMORX",8,0)
 . N DIR,Y
"RTN","XMJMORX",9,0)
 . S DIR(0)="Y",DIR("A")="Are you sure you want to delete the selected messages",DIR("B")="NO" D ^DIR I $D(DIRUT)!'Y S XMABORT=1 Q
"RTN","XMJMORX",10,0)
 . D SELMSG(XMDUZ,1,XMKALL,XMK,"XDEL^XMJMORX1",.XMMSG)
"RTN","XMJMORX",11,0)
 . ;K:'XMKALL ^TMP("XM",$J,".")
"RTN","XMJMORX",12,0)
 E  D
"RTN","XMJMORX",13,0)
 . D WHICH("Delete which messages",1,.XMWHICH,.XMABORT) Q:XMABORT
"RTN","XMJMORX",14,0)
 . D ACTMSG(XMDUZ,1,XMKALL,XMK,XMWHICH,"XDEL^XMJMORX1",.XMMSG)
"RTN","XMJMORX",15,0)
 Q:XMABORT
"RTN","XMJMORX",16,0)
 W:$D(XMMSG) !,XMMSG," deleted."
"RTN","XMJMORX",17,0)
 Q
"RTN","XMJMORX",18,0)
FILTER(XMDUZ,XMKALL,XMK) ; Filter a range of messages
"RTN","XMJMORX",19,0)
 N XMWHICH,XMMSG,XMABORT
"RTN","XMJMORX",20,0)
 S XMABORT=0
"RTN","XMJMORX",21,0)
 I $D(^TMP("XM",$J,".")) D
"RTN","XMJMORX",22,0)
 . D SELMSG(XMDUZ,1,XMKALL,XMK,"XFLTR^XMJMORX1",.XMMSG)
"RTN","XMJMORX",23,0)
 E  D
"RTN","XMJMORX",24,0)
 . D WHICH("Filter which messages",0,.XMWHICH,.XMABORT) Q:XMABORT
"RTN","XMJMORX",25,0)
 . D ACTMSG(XMDUZ,1,XMKALL,XMK,XMWHICH,"XFLTR^XMJMORX1",.XMMSG)
"RTN","XMJMORX",26,0)
 Q:XMABORT
"RTN","XMJMORX",27,0)
 W:$D(XMMSG) !,XMMSG," filtered."
"RTN","XMJMORX",28,0)
 Q
"RTN","XMJMORX",29,0)
FORWARD(XMDUZ,XMKALL,XMK) ; Forward a range of messages
"RTN","XMJMORX",30,0)
 N XMWHICH,XMMSG,XMABORT,XMINSTR
"RTN","XMJMORX",31,0)
 S XMABORT=0
"RTN","XMJMORX",32,0)
 I $D(^TMP("XM",$J,".")) D  Q
"RTN","XMJMORX",33,0)
 . N XMKZ
"RTN","XMJMORX",34,0)
 . D INIT^XMXADDR
"RTN","XMJMORX",35,0)
 . S XMKZ=$O(^TMP("XM",$J,".",""))
"RTN","XMJMORX",36,0)
 . I '$O(^TMP("XM",$J,".",XMKZ)) D  Q
"RTN","XMJMORX",37,0)
 . . D FWDONE^XMJMOR(XMDUZ,$P(^TMP("XM",$J,"MSG",XMKZ),U,3),.XMINSTR,.XMABORT)
"RTN","XMJMORX",38,0)
 . D TOWHOM^XMJMT(XMDUZ,"Forward",.XMINSTR,"",.XMABORT) Q:XMABORT
"RTN","XMJMORX",39,0)
 . D SELMSG(XMDUZ,1,XMKALL,XMK,"XFWD^XMXMSGS1",.XMMSG)
"RTN","XMJMORX",40,0)
 . D CLEANUP^XMXADDR
"RTN","XMJMORX",41,0)
 . I $D(XMERR) D ZSHOW^XMJERR
"RTN","XMJMORX",42,0)
 . W:$D(XMMSG) !,XMMSG," forwarded."
"RTN","XMJMORX",43,0)
 D WHICH("Forward which messages",0,.XMWHICH,.XMABORT) Q:XMABORT
"RTN","XMJMORX",44,0)
 D INIT^XMXADDR
"RTN","XMJMORX",45,0)
 I $P(XMWHICH,",",2,99)="",$P(XMWHICH,",",1)=+XMWHICH D  Q
"RTN","XMJMORX",46,0)
 . N XMZ
"RTN","XMJMORX",47,0)
 . S XMZ=$P($G(^TMP("XM",$J,"MSG",+XMWHICH)),U,3)
"RTN","XMJMORX",48,0)
 . I 'XMZ W !,"No messages forwarded." Q
"RTN","XMJMORX",49,0)
 . D FWDONE^XMJMOR(XMDUZ,XMZ,.XMINSTR,.XMABORT)
"RTN","XMJMORX",50,0)
 D TOWHOM^XMJMT(XMDUZ,"Forward",.XMINSTR,"",.XMABORT) Q:XMABORT
"RTN","XMJMORX",51,0)
 D ACTMSG(XMDUZ,1,XMKALL,XMK,XMWHICH,"XFWD^XMXMSGS1",.XMMSG)
"RTN","XMJMORX",52,0)
 D CLEANUP^XMXADDR
"RTN","XMJMORX",53,0)
 I $D(XMERR) D ZSHOW^XMJERR
"RTN","XMJMORX",54,0)
 W:$D(XMMSG) !,XMMSG," forwarded."
"RTN","XMJMORX",55,0)
 Q
"RTN","XMJMORX",56,0)
LATER(XMDUZ,XMKALL,XMK) ; Later a range of messages
"RTN","XMJMORX",57,0)
 N XMWHICH,XMMSG,XMABORT,XMWHEN
"RTN","XMJMORX",58,0)
 S XMABORT=0
"RTN","XMJMORX",59,0)
 I $D(^TMP("XM",$J,".")) D
"RTN","XMJMORX",60,0)
 . D LTRDATE^XMJMD(.XMWHEN,.XMABORT) Q:XMABORT
"RTN","XMJMORX",61,0)
 . D SELMSG(XMDUZ,1,XMKALL,XMK,"XLATER^XMXMSGS2",.XMMSG)
"RTN","XMJMORX",62,0)
 E  D
"RTN","XMJMORX",63,0)
 . D WHICH("Later which messages",0,.XMWHICH,.XMABORT) Q:XMABORT
"RTN","XMJMORX",64,0)
 . D LTRDATE^XMJMD(.XMWHEN,.XMABORT) Q:XMABORT
"RTN","XMJMORX",65,0)
 . D ACTMSG(XMDUZ,1,XMKALL,XMK,XMWHICH,"XLATER^XMXMSGS2",.XMMSG)
"RTN","XMJMORX",66,0)
 Q:XMABORT
"RTN","XMJMORX",67,0)
 W:$D(XMMSG) !,XMMSG," latered."
"RTN","XMJMORX",68,0)
 Q
"RTN","XMJMORX",69,0)
PRINT(XMDUZ,XMPRTHDR) ; Print a range of messages (Needs XMTYPE)
"RTN","XMJMORX",70,0)
 N XMWHICH,XMMSG,XMRESP,XMRESPS,XMRECIPS,XMABORT,XMSAVE,XMMSG,XMRANGE,XMZLIST,XMKZ,I,J,XMZ
"RTN","XMJMORX",71,0)
 ; XMPRTHDR 1=Print header
"RTN","XMJMORX",72,0)
 ;          0=don't (headerless print)
"RTN","XMJMORX",73,0)
 ; XMRECIPS 0=Don't print recipients
"RTN","XMJMORX",74,0)
 ;          1=Print summary recipients
"RTN","XMJMORX",75,0)
 ;          2=Print detail recipients
"RTN","XMJMORX",76,0)
 S XMABORT=0
"RTN","XMJMORX",77,0)
 S:$G(XMPRTHDR)="" XMPRTHDR=1  ; default is to print with headers
"RTN","XMJMORX",78,0)
 I $D(^TMP("XM",$J,".")) D
"RTN","XMJMORX",79,0)
 . S (XMKZ,J)=0
"RTN","XMJMORX",80,0)
 . F  S XMKZ=$O(^TMP("XM",$J,".",XMKZ)) Q:'XMKZ  D
"RTN","XMJMORX",81,0)
 . . S XMZ=$P(^TMP("XM",$J,"MSG",XMKZ),U,3)
"RTN","XMJMORX",82,0)
 . . I J=0 S J=1,XMZLIST(1)=XMZ Q
"RTN","XMJMORX",83,0)
 . . I $L(XMZLIST(J))+$L(XMZ)>240 S J=J+1,XMZLIST(J)=XMZ Q
"RTN","XMJMORX",84,0)
 . . S XMZLIST(J)=XMZLIST(J)_","_XMZ
"RTN","XMJMORX",85,0)
 E  D  Q:XMABORT
"RTN","XMJMORX",86,0)
 . D WHICH("Print which messages"_$S(XMPRTHDR:"",1:" without headers"),0,.XMWHICH,.XMABORT) Q:XMABORT
"RTN","XMJMORX",87,0)
 . S J=0
"RTN","XMJMORX",88,0)
 . F I=1:1:$L(XMWHICH,",") D
"RTN","XMJMORX",89,0)
 . . S XMRANGE=$P(XMWHICH,",",I)
"RTN","XMJMORX",90,0)
 . . Q:'XMRANGE
"RTN","XMJMORX",91,0)
 . . F XMKZ=$P(XMRANGE,"-",1):1:$S(XMRANGE["-":$P(XMRANGE,"-",2),1:XMRANGE) D
"RTN","XMJMORX",92,0)
 . . . S XMZ=$P($G(^TMP("XM",$J,"MSG",XMKZ)),U,3) Q:'XMZ
"RTN","XMJMORX",93,0)
 . . . I J=0 S J=1,XMZLIST(1)=XMZ Q
"RTN","XMJMORX",94,0)
 . . . I $L(XMZLIST(J))+$L(XMZ)>240 S J=J+1,XMZLIST(J)=XMZ Q
"RTN","XMJMORX",95,0)
 . . . S XMZLIST(J)=XMZLIST(J)_","_XMZ
"RTN","XMJMORX",96,0)
 I '$D(XMZLIST) W !!,"No valid messages selected." Q
"RTN","XMJMORX",97,0)
 I +XMZLIST(1)=XMZLIST(1) D
"RTN","XMJMORX",98,0)
 . N XMZ,XMKSTR
"RTN","XMJMORX",99,0)
 . S XMZ=XMZLIST(1)
"RTN","XMJMORX",100,0)
 . S XMKSTR=$$BSKT^XMXUTIL2(XMDUZ,XMZ,1)
"RTN","XMJMORX",101,0)
 . D PRTONE^XMJMOR(XMDUZ,$P(XMKSTR,U,1),$P(XMKSTR,U,2),XMZ,XMPRTHDR,.XMABORT)
"RTN","XMJMORX",102,0)
 E  D  Q:XMABORT
"RTN","XMJMORX",103,0)
 . D QRECIP^XMJMP(.XMRECIPS,.XMABORT) Q:XMABORT
"RTN","XMJMORX",104,0)
 . F I="XMV(","XMZLIST(","DUZ","XMDUZ","XMRECIPS","XMPRTHDR" S XMSAVE(I)=""
"RTN","XMJMORX",105,0)
 . D EN^XUTMDEVQ("PRANGEX^XMJMORX1","MailMan Print",.XMSAVE)
"RTN","XMJMORX",106,0)
 . W:$D(XMMSG) !!,XMMSG
"RTN","XMJMORX",107,0)
 Q:$G(XMTYPE)'["N"
"RTN","XMJMORX",108,0)
 I $D(^TMP("XM",$J,".")) D  Q
"RTN","XMJMORX",109,0)
 . S XMKZ=""
"RTN","XMJMORX",110,0)
 . F  S XMKZ=$O(^TMP("XM",$J,".",XMKZ)) Q:'XMKZ  D
"RTN","XMJMORX",111,0)
 . . S XMZ=$P(^TMP("XM",$J,"MSG",XMKZ),U,3)
"RTN","XMJMORX",112,0)
 . . Q:$D(^XMB(3.7,XMDUZ,XMTYPE,XMK,XMZ))
"RTN","XMJMORX",113,0)
 . . K ^TMP("XM",$J,"MSG",XMKZ)
"RTN","XMJMORX",114,0)
 . . K ^TMP("XM",$J,".",XMKZ)
"RTN","XMJMORX",115,0)
 F I=1:1:$L(XMWHICH,",") D
"RTN","XMJMORX",116,0)
 . S XMRANGE=$P(XMWHICH,",",I)
"RTN","XMJMORX",117,0)
 . Q:'XMRANGE
"RTN","XMJMORX",118,0)
 . F XMKZ=$P(XMRANGE,"-",1):1:$S(XMRANGE["-":$P(XMRANGE,"-",2),1:XMRANGE) D
"RTN","XMJMORX",119,0)
 . . Q:'$D(^TMP("XM",$J,"MSG",XMKZ))
"RTN","XMJMORX",120,0)
 . . S XMZ=$P(^TMP("XM",$J,"MSG",XMKZ),U,3)
"RTN","XMJMORX",121,0)
 . . K:'$D(^XMB(3.7,XMDUZ,XMTYPE,XMK,XMZ)) ^TMP("XM",$J,"MSG",XMKZ)
"RTN","XMJMORX",122,0)
 Q
"RTN","XMJMORX",123,0)
SAVE(XMDUZ,XMKALL,XMK) ; Save a range of messages to another basket
"RTN","XMJMORX",124,0)
 N XMWHICH,XMMSG,XMABORT,XMKTO,XMDIC,XMKNTO
"RTN","XMJMORX",125,0)
 S XMABORT=0
"RTN","XMJMORX",126,0)
 S XMDIC("B")="@" ; no default bskt
"RTN","XMJMORX",127,0)
 I $D(^TMP("XM",$J,".")) D
"RTN","XMJMORX",128,0)
 . D SELBSKT^XMJBU(XMDUZ,"Save messages to which basket? ","L",.XMDIC,.XMKTO,.XMKNTO) I XMKTO=U S XMABORT=1 Q
"RTN","XMJMORX",129,0)
 . I 'XMKALL,XMKTO=XMK S XMMSG="Same basket.  Messages not" Q
"RTN","XMJMORX",130,0)
 . D SELMSG(XMDUZ,1,XMKALL,XMK,"XSAVE^XMJMORX1",.XMMSG)
"RTN","XMJMORX",131,0)
 . K:'XMKALL ^TMP("XM",$J,".")
"RTN","XMJMORX",132,0)
 E  D
"RTN","XMJMORX",133,0)
 . D WHICH("Save which messages",0,.XMWHICH,.XMABORT) Q:XMABORT
"RTN","XMJMORX",134,0)
 . D SELBSKT^XMJBU(XMDUZ,"Save messages to which basket? ","L",.XMDIC,.XMKTO,.XMKNTO) I XMKTO=U S XMABORT=1 Q
"RTN","XMJMORX",135,0)
 . I 'XMKALL,XMKTO=XMK S XMMSG="Same basket.  No messages" Q
"RTN","XMJMORX",136,0)
 . D ACTMSG(XMDUZ,1,XMKALL,XMK,XMWHICH,"XSAVE^XMJMORX1",.XMMSG)
"RTN","XMJMORX",137,0)
 Q:XMABORT
"RTN","XMJMORX",138,0)
 W:$D(XMMSG) !,XMMSG," saved."
"RTN","XMJMORX",139,0)
 Q
"RTN","XMJMORX",140,0)
TERM(XMDUZ,XMKALL,XMK) ; Terminate a range of messages
"RTN","XMJMORX",141,0)
 N XMWHICH,XMMSG,XMABORT
"RTN","XMJMORX",142,0)
 S XMABORT=0
"RTN","XMJMORX",143,0)
 I $D(^TMP("XM",$J,".")) D
"RTN","XMJMORX",144,0)
 . N DIR,Y
"RTN","XMJMORX",145,0)
 . S DIR(0)="Y",DIR("A")="Are you sure you want to terminate the selected messages",DIR("B")="NO" D ^DIR I $D(DIRUT)!'Y S XMABORT=1 Q
"RTN","XMJMORX",146,0)
 . D SELMSG(XMDUZ,1,XMKALL,XMK,"XTERM^XMJMORX1",.XMMSG)
"RTN","XMJMORX",147,0)
 . ;K:'XMKALL ^TMP("XM",$J,".")
"RTN","XMJMORX",148,0)
 E  D
"RTN","XMJMORX",149,0)
 . D WHICH("Terminate which messages",1,.XMWHICH,.XMABORT) Q:XMABORT
"RTN","XMJMORX",150,0)
 . D ACTMSG(XMDUZ,1,XMKALL,XMK,XMWHICH,"XTERM^XMJMORX1",.XMMSG)
"RTN","XMJMORX",151,0)
 Q:XMABORT
"RTN","XMJMORX",152,0)
 Q:'$D(XMMSG)
"RTN","XMJMORX",153,0)
 W !,XMMSG," terminated."
"RTN","XMJMORX",154,0)
 I XMMSG W !,"You won't see future responses." W:XMK'=.5 "  (In WASTE basket)"
"RTN","XMJMORX",155,0)
 Q
"RTN","XMJMORX",156,0)
XMTPRI(XMDUZ,XMKALL,XMK) ; Toggle transmit priority for a range of messages
"RTN","XMJMORX",157,0)
 ; XMDUZ better be .5 and XMK better be > 1000!
"RTN","XMJMORX",158,0)
 N XMWHICH,XMMSG,XMABORT
"RTN","XMJMORX",159,0)
 S XMABORT=0
"RTN","XMJMORX",160,0)
 I $D(^TMP("XM",$J,".")) D
"RTN","XMJMORX",161,0)
 . N DIR,Y
"RTN","XMJMORX",162,0)
 . S DIR(0)="Y",DIR("A")="Are you sure you want to toggle xmit priority for the selected messages",DIR("B")="NO" D ^DIR I $D(DIRUT)!'Y S XMABORT=1 Q
"RTN","XMJMORX",163,0)
 . D SELMSG(XMDUZ,1,XMKALL,XMK,"XXP^XMXMSGS1",.XMMSG)
"RTN","XMJMORX",164,0)
 E  D
"RTN","XMJMORX",165,0)
 . D WHICH("Toggle xmit priority for which messages",1,.XMWHICH,.XMABORT) Q:XMABORT
"RTN","XMJMORX",166,0)
 . D ACTMSG(XMDUZ,1,XMKALL,XMK,XMWHICH,"XXP^XMXMSGS1",.XMMSG)
"RTN","XMJMORX",167,0)
 Q:XMABORT
"RTN","XMJMORX",168,0)
 W:$D(XMMSG) !,XMMSG," xmit priority toggled."
"RTN","XMJMORX",169,0)
 Q
"RTN","XMJMORX",170,0)
WHICH(XMPROMPT,XMCONFRM,XMWHICH,XMABORT) ;
"RTN","XMJMORX",171,0)
 N DIR,Y,XMHI,XMLO
"RTN","XMJMORX",172,0)
 S XMLO=$O(^TMP("XM",$J,"MSG",""))
"RTN","XMJMORX",173,0)
 S XMHI=$O(^TMP("XM",$J,"MSG",""),-1)
"RTN","XMJMORX",174,0)
 S DIR("A")=XMPROMPT
"RTN","XMJMORX",175,0)
 ;S DIR("??")="^D LISTTMP^XMJML"
"RTN","XMJMORX",176,0)
 S DIR("??")="XM-U-M-CHOOSE RANGE"
"RTN","XMJMORX",177,0)
 S DIR(0)="LC^"_XMLO_":"_XMHI
"RTN","XMJMORX",178,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMJMORX",179,0)
 S XMWHICH=Y
"RTN","XMJMORX",180,0)
 Q:'XMCONFRM
"RTN","XMJMORX",181,0)
 K DIR
"RTN","XMJMORX",182,0)
 S DIR("A")="Do you really want to "_$$LOW^XLFSTR($P(XMPROMPT," "))_" these messages"
"RTN","XMJMORX",183,0)
 S DIR("B")="No"
"RTN","XMJMORX",184,0)
 S DIR(0)="Y"
"RTN","XMJMORX",185,0)
 D ^DIR I $D(DIRUT)!'Y S XMABORT=1 Q
"RTN","XMJMORX",186,0)
 Q
"RTN","XMJMORX",187,0)
ACTMSG(XMDUZ,XMTMP,XMKALL,XMK,XMKZA,XMRTN,XMMSG) ;,XMKTO)
"RTN","XMJMORX",188,0)
 ; XMKZA    Array of msg numbers  DEL("1-3,7,11-15")
"RTN","XMJMORX",189,0)
 ; XMKZL    List of msg numbers   1-3,7,11-15
"RTN","XMJMORX",190,0)
 ;          (It is OK if the list ends with a comma)
"RTN","XMJMORX",191,0)
 ; XMKZR    Range of msg numbers  1-3
"RTN","XMJMORX",192,0)
 ; XMKZ1    First number in range 1
"RTN","XMJMORX",193,0)
 ; XMKZN    Last number in range  3
"RTN","XMJMORX",194,0)
 N XMKZ,XMREC,XMKZL,XMKZR,I,XMKZ1,XMKZN,XMZ,XMCNT,XMPIECES
"RTN","XMJMORX",195,0)
 S XMCNT=0
"RTN","XMJMORX",196,0)
 ; is this an array or a variable?
"RTN","XMJMORX",197,0)
 I $G(XMKZA)]"",$O(XMKZA(""))="" S XMKZA(XMKZA)=""
"RTN","XMJMORX",198,0)
 S XMKZL=""
"RTN","XMJMORX",199,0)
 F  S XMKZL=$O(XMKZA(XMKZL)) Q:XMKZL=""  D
"RTN","XMJMORX",200,0)
 . S XMPIECES=$L(XMKZL,",")
"RTN","XMJMORX",201,0)
 . S:'$P(XMKZL,",",XMPIECES) XMPIECES=XMPIECES-1
"RTN","XMJMORX",202,0)
 . F I=1:1:XMPIECES D
"RTN","XMJMORX",203,0)
 . . S XMKZR=$P(XMKZL,",",I)
"RTN","XMJMORX",204,0)
 . . I XMKZR["-" D
"RTN","XMJMORX",205,0)
 . . . ; deal with a range of msg #s
"RTN","XMJMORX",206,0)
 . . . S XMKZ1=$P(XMKZR,"-",1)
"RTN","XMJMORX",207,0)
 . . . S XMKZN=$P(XMKZR,"-",2)
"RTN","XMJMORX",208,0)
 . . . S XMKZ=XMKZ1-.1
"RTN","XMJMORX",209,0)
 . . . I XMTMP D
"RTN","XMJMORX",210,0)
 . . . . F  S XMKZ=$O(^TMP("XM",$J,"MSG",XMKZ)) Q:XMKZ>XMKZN!'XMKZ  D
"RTN","XMJMORX",211,0)
 . . . . . S XMREC=^TMP("XM",$J,"MSG",XMKZ)
"RTN","XMJMORX",212,0)
 . . . . . S:XMKALL XMK=$P(XMREC,U,1)
"RTN","XMJMORX",213,0)
 . . . . . S XMZ=$P(XMREC,U,3)
"RTN","XMJMORX",214,0)
 . . . . . D @XMRTN ;(XMDUZ,XMK,XMZ)
"RTN","XMJMORX",215,0)
 . . . E  D
"RTN","XMJMORX",216,0)
 . . . . F  S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ)) Q:XMKZ>XMKZN!'XMKZ  D
"RTN","XMJMORX",217,0)
 . . . . . S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,0))
"RTN","XMJMORX",218,0)
 . . . . . D @XMRTN ;(XMDUZ,XMK,XMZ)
"RTN","XMJMORX",219,0)
 . . E  D
"RTN","XMJMORX",220,0)
 . . . S XMKZ=XMKZR
"RTN","XMJMORX",221,0)
 . . . I XMTMP D
"RTN","XMJMORX",222,0)
 . . . . S XMREC=$G(^TMP("XM",$J,"MSG",XMKZ))
"RTN","XMJMORX",223,0)
 . . . . I XMREC="" S XMZ=0 Q
"RTN","XMJMORX",224,0)
 . . . . S:XMKALL XMK=$P(XMREC,U,1)
"RTN","XMJMORX",225,0)
 . . . . S XMZ=$P(XMREC,U,3)
"RTN","XMJMORX",226,0)
 . . . E  S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,0))
"RTN","XMJMORX",227,0)
 . . . Q:'XMZ
"RTN","XMJMORX",228,0)
 . . . D @XMRTN ;(XMDUZ,XMK,XMZ)
"RTN","XMJMORX",229,0)
 S XMMSG=XMCNT_" message"_$S(XMCNT=1:"",1:"s")
"RTN","XMJMORX",230,0)
 Q
"RTN","XMJMORX",231,0)
SELMSG(XMDUZ,XMTMP,XMKALL,XMK,XMRTN,XMMSG) ;,XMKTO,XMWHEN)
"RTN","XMJMORX",232,0)
 N XMCNT,XMKZ,XMREC,XMZ
"RTN","XMJMORX",233,0)
 S (XMCNT,XMKZ)=0
"RTN","XMJMORX",234,0)
 F  S XMKZ=$O(^TMP("XM",$J,".",XMKZ)) Q:'XMKZ  D
"RTN","XMJMORX",235,0)
 . I XMTMP D
"RTN","XMJMORX",236,0)
 . . S XMREC=^TMP("XM",$J,"MSG",XMKZ)
"RTN","XMJMORX",237,0)
 . . S:XMKALL XMK=$P(XMREC,U,1)
"RTN","XMJMORX",238,0)
 . . S XMZ=$P(XMREC,U,3)
"RTN","XMJMORX",239,0)
 . E  S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,""))
"RTN","XMJMORX",240,0)
 . D @XMRTN ;(XMDUZ,XMK,XMZ)
"RTN","XMJMORX",241,0)
 S XMMSG=XMCNT_" message"_$S(XMCNT=1:"",1:"s")
"RTN","XMJMORX",242,0)
 Q
"RTN","XMJMORX1")
0^21^B6194757
"RTN","XMJMORX1",1,0)
XMJMORX1 ;ISC-SF/GMB-^XMJMORX (cont.) ;05/15/98  07:01
"RTN","XMJMORX1",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMORX1",3,0)
 ;DELMSG(XMDUZ,XMK,XMKZ,XMZ,XMCNT)
"RTN","XMJMORX1",4,0)
XDEL ;
"RTN","XMJMORX1",5,0)
 Q:'XMK
"RTN","XMJMORX1",6,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMJMORX1",7,0)
 D DEL^XMXMSGS2(XMDUZ,XMK,XMZ,.XMCNT)
"RTN","XMJMORX1",8,0)
 I $D(XMERR) D ZSHOW^XMJERR Q
"RTN","XMJMORX1",9,0)
 I XMKALL,$G(XMTYPE)'["N" D
"RTN","XMJMORX1",10,0)
 . S ^TMP("XM",$J,"MSG",XMKZ)=$S(XMK'=.5:".5^WASTE",1:"0^* N/A *")_U_XMZ
"RTN","XMJMORX1",11,0)
 E  D
"RTN","XMJMORX1",12,0)
 . K:XMTMP ^TMP("XM",$J,"MSG",XMKZ)
"RTN","XMJMORX1",13,0)
 . K:$D(^TMP("XM",$J,".",XMKZ)) ^TMP("XM",$J,".",XMKZ)
"RTN","XMJMORX1",14,0)
 Q
"RTN","XMJMORX1",15,0)
 ;FLTRMSG(XMDUZ,XMK,XMKZ,XMZ,XMCNT)
"RTN","XMJMORX1",16,0)
XFLTR ;
"RTN","XMJMORX1",17,0)
 N XMKN,XMKTO,XMKNTO
"RTN","XMJMORX1",18,0)
 S XMKN=$P(^TMP("XM",$J,"MSG",XMKZ),U,2)
"RTN","XMJMORX1",19,0)
 D FLTR^XMXMSGS2(XMDUZ,XMK,XMKN,XMZ,.XMCNT,.XMKTO,.XMKNTO)
"RTN","XMJMORX1",20,0)
 I XMKALL D
"RTN","XMJMORX1",21,0)
 . S:XMKN'=XMKNTO ^TMP("XM",$J,"MSG",XMKZ)=XMKTO_U_XMKNTO_U_XMZ
"RTN","XMJMORX1",22,0)
 E  D
"RTN","XMJMORX1",23,0)
 . Q:XMKN=XMKNTO
"RTN","XMJMORX1",24,0)
 . K ^TMP("XM",$J,"MSG",XMKZ)
"RTN","XMJMORX1",25,0)
 . K:$D(^TMP("XM",$J,".",XMKZ)) ^TMP("XM",$J,".",XMKZ)
"RTN","XMJMORX1",26,0)
 Q
"RTN","XMJMORX1",27,0)
 ;SAVEMSG(XMDUZ,XMK,XMKTO,XMKNTO,XMKZ,XMZ,XMCNT)
"RTN","XMJMORX1",28,0)
XSAVE ;
"RTN","XMJMORX1",29,0)
 Q:XMK=XMKTO
"RTN","XMJMORX1",30,0)
 D MOVE^XMXMSGS2(XMDUZ,XMK,XMZ,XMKTO,.XMCNT)
"RTN","XMJMORX1",31,0)
 I XMKALL D
"RTN","XMJMORX1",32,0)
 . S ^TMP("XM",$J,"MSG",XMKZ)=XMKTO_U_XMKNTO_U_XMZ
"RTN","XMJMORX1",33,0)
 E  D
"RTN","XMJMORX1",34,0)
 . K ^TMP("XM",$J,"MSG",XMKZ)
"RTN","XMJMORX1",35,0)
 . ;K:$D(^TMP("XM",$J,".",XMKZ)) ^TMP("XM",$J,".",XMKZ)
"RTN","XMJMORX1",36,0)
 Q
"RTN","XMJMORX1",37,0)
 ;TERMMSG(XMDUZ,XMK,XMKZ,XMZ,XMCNT)
"RTN","XMJMORX1",38,0)
XTERM ;
"RTN","XMJMORX1",39,0)
 Q:'XMK
"RTN","XMJMORX1",40,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMJMORX1",41,0)
 D TERM^XMXMSGS2(XMDUZ,XMK,XMZ,.XMCNT)
"RTN","XMJMORX1",42,0)
 I $D(XMERR) D ZSHOW^XMJERR Q
"RTN","XMJMORX1",43,0)
 I XMKALL,$G(XMTYPE)'["N" D
"RTN","XMJMORX1",44,0)
 . S ^TMP("XM",$J,"MSG",XMKZ)=$S(XMK'=.5:".5^WASTE",1:"0^* N/A *")_U_XMZ
"RTN","XMJMORX1",45,0)
 E  D
"RTN","XMJMORX1",46,0)
 . K:XMTMP ^TMP("XM",$J,"MSG",XMKZ)
"RTN","XMJMORX1",47,0)
 . K:$D(^TMP("XM",$J,".",XMKZ)) ^TMP("XM",$J,".",XMKZ)
"RTN","XMJMORX1",48,0)
 Q
"RTN","XMJMORX1",49,0)
 ;PRANGE(XMDUZ,XMZLIST,XMRECIPS,XMPRTHDR,XMMSG)
"RTN","XMJMORX1",50,0)
PRANGEX ;
"RTN","XMJMORX1",51,0)
 ; Print a range of messages.
"RTN","XMJMORX1",52,0)
 ; Check each message as we come to it to see if
"RTN","XMJMORX1",53,0)
 ; the user is allowed to see it.  (confidential, scrambled)
"RTN","XMJMORX1",54,0)
 ; If not, print an error message.
"RTN","XMJMORX1",55,0)
 N I,J,XMK,XMKN,XMZ,XMFIRST,XMCNT,XMABORT
"RTN","XMJMORX1",56,0)
 S XMFIRST=1,(XMCNT,XMABORT,I)=0
"RTN","XMJMORX1",57,0)
 F  S I=$O(XMZLIST(I)) Q:'I  D  Q:XMABORT
"RTN","XMJMORX1",58,0)
 . F J=1:1:$L(XMZLIST(I),",") D  Q:XMABORT
"RTN","XMJMORX1",59,0)
 . . S XMZ=$P(XMZLIST(I),",",J)
"RTN","XMJMORX1",60,0)
 . . Q:'$D(^XMB(3.9,XMZ,0))
"RTN","XMJMORX1",61,0)
 . . S XMK=+$O(^XMB(3.7,"M",XMZ,XMDUZ,""))
"RTN","XMJMORX1",62,0)
 . . S XMKN=$S(XMK:$P(^XMB(3.7,XMDUZ,2,XMK,0),U),1:"* N/A *")
"RTN","XMJMORX1",63,0)
 . . D PRTMULT^XMJMP(XMDUZ,XMK,XMKN,XMZ,XMRECIPS,XMPRTHDR,.XMFIRST,.XMCNT,.XMABORT)
"RTN","XMJMORX1",64,0)
 S:'$D(ZTQUEUED) XMMSG=XMCNT_" message"_$S(XMCNT=1:"",1:"s")_" printed."
"RTN","XMJMORX1",65,0)
 Q
"RTN","XMJMP")
0^22^B87550446
"RTN","XMJMP",1,0)
XMJMP ;ISC-SF/GMB-Print,Backup messages ;06/25/99  06:50
"RTN","XMJMP",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMP",3,0)
 ; PRINT  Replaces ENTPRT^XMA0,^XMA02,ENTPRT^XMAP,QE2^XMA5
"RTN","XMJMP",4,0)
 ; BACKUP Replaces E^XMA1,ENT8^XMAH,ENTR^XMAP,ENTBCK^XMAP
"RTN","XMJMP",5,0)
 ; (ISC-WASH/CAP/THM)
"RTN","XMJMP",6,0)
PRINT(XMDUZ,XMK,XMKN,XMZ,XMPRTHDR) ; Print
"RTN","XMJMP",7,0)
 ; XMPRTHDR 1=Print header
"RTN","XMJMP",8,0)
 ;          0=don't (headerless print)
"RTN","XMJMP",9,0)
 ; XMRECIPS 0=Don't print recipients
"RTN","XMJMP",10,0)
 ;          1=Print summary recipients
"RTN","XMJMP",11,0)
 ;          2=Print detail recipients
"RTN","XMJMP",12,0)
 N XMWHICH,XMRESPS,XMABORT,XMRECIPS,XMPTR,XMSAVE
"RTN","XMJMP",13,0)
 S XMABORT=0
"RTN","XMJMP",14,0)
 S:$G(XMPRTHDR)="" XMPRTHDR=1  ; default is to print with headers
"RTN","XMJMP",15,0)
 D QRECIP(.XMRECIPS,.XMABORT) Q:XMABORT
"RTN","XMJMP",16,0)
 D RESPONSE(XMDUZ,XMZ,.XMRESPS,.XMPTR,.XMWHICH)
"RTN","XMJMP",17,0)
 I XMRESPS D  Q:XMABORT
"RTN","XMJMP",18,0)
 . S XMWHICH="0-"_XMRESPS
"RTN","XMJMP",19,0)
 . D WHICH(XMZ,XMRESPS,"Print",.XMWHICH,.XMABORT)
"RTN","XMJMP",20,0)
 E  S XMWHICH=0
"RTN","XMJMP",21,0)
 F I="XMV(","DUZ","XMDUZ","XMK","XMKN","XMZ","XMRESPS","XMPTR","XMWHICH","XMRECIPS","XMPRTHDR" S XMSAVE(I)=""
"RTN","XMJMP",22,0)
 I $D(XMSECURE) F I="XMPAKMAN","XMSECURE","XMSECURE(" S XMSAVE(I)=""
"RTN","XMJMP",23,0)
 D EN^XUTMDEVQ("PRINTMSG^XMJMP","MailMan Print",.XMSAVE)
"RTN","XMJMP",24,0)
 Q
"RTN","XMJMP",25,0)
 ;PRINTMSG(XMDUZ,XMK,XMKN,XMZ,XMRESPS,XMPTR,XMWHICH,XMRECIPS,XMPRTHDR)
"RTN","XMJMP",26,0)
PRINTMSG ;
"RTN","XMJMP",27,0)
 N XMZREC
"RTN","XMJMP",28,0)
 S XMZREC=$G(^XMB(3.9,XMZ,0)) Q:XMZREC=""
"RTN","XMJMP",29,0)
 W:$G(IOST)["C-" @IOF
"RTN","XMJMP",30,0)
 D:XMPRTHDR IDHDR(XMDUZ)
"RTN","XMJMP",31,0)
 D PRINTIT^XMJMP1(XMDUZ,XMK,XMKN,XMZ,XMZREC,XMRESPS,XMPTR,XMWHICH,XMRECIPS,XMPRTHDR)
"RTN","XMJMP",32,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","XMJMP",33,0)
 Q
"RTN","XMJMP",34,0)
IDHDR(XMDUZ) ; Header: "MailMan msg for..."
"RTN","XMJMP",35,0)
 N XMREC
"RTN","XMJMP",36,0)
 S XMREC=$G(^VA(200,XMDUZ,0))
"RTN","XMJMP",37,0)
 W *13,"MailMan message for ",XMV("NAME")
"RTN","XMJMP",38,0)
 I $P(XMREC,U,9)'="",$D(^DIC(3.1,+$P(XMREC,U,9),0)) W "  ",$P(^(0),U,1) ; VA TITLE
"RTN","XMJMP",39,0)
 W !,"Printed at ",^XMB("NETNAME"),"  ",$$MMDT^XMXUTIL1($$NOW^XLFDT)
"RTN","XMJMP",40,0)
 W:$D(XMDN) "  (#",XMDN,")"  ; *** What's this?
"RTN","XMJMP",41,0)
 W !
"RTN","XMJMP",42,0)
 Q
"RTN","XMJMP",43,0)
QRECIP(XMRECIPS,XMABORT) ;
"RTN","XMJMP",44,0)
 N DIR,DIRUT,Y
"RTN","XMJMP",45,0)
 S DIR(0)="Y"
"RTN","XMJMP",46,0)
 S DIR("A")="Print recipient list"
"RTN","XMJMP",47,0)
 S DIR("B")="No"
"RTN","XMJMP",48,0)
 S DIR("?")="Answer 'Yes' if you want the recipients printed at the end."
"RTN","XMJMP",49,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMJMP",50,0)
 I Y=0 S XMRECIPS=0 Q
"RTN","XMJMP",51,0)
 S DIR(0)="SM^D:Detail;S:Summary"
"RTN","XMJMP",52,0)
 S DIR("A")="Print Detail or Summary recipient chain"
"RTN","XMJMP",53,0)
 S DIR("B")="Summary"
"RTN","XMJMP",54,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMJMP",55,0)
 S XMRECIPS=$S(Y="D":2,1:1)
"RTN","XMJMP",56,0)
 Q
"RTN","XMJMP",57,0)
DISPMSG(XMDUZ,XMK,XMKN,XMZ,XMSECBAD) ; Display message
"RTN","XMJMP",58,0)
 N XMRESPS,XMRESP,XMPTR,XMZREC
"RTN","XMJMP",59,0)
 S XMZREC=^XMB(3.9,XMZ,0)
"RTN","XMJMP",60,0)
 S XMPAKMAN=$$PAKMAN^XMXSEC1(XMZ,XMZREC)
"RTN","XMJMP",61,0)
 D RESPONSE(XMDUZ,XMZ,.XMRESPS,.XMPTR,.XMRESP)
"RTN","XMJMP",62,0)
 I XMRESP'="",XMRESPS S XMRESP=XMRESP+1
"RTN","XMJMP",63,0)
 I XMDUZ=.5,XMK>999 S XMRESP=XMRESPS+1
"RTN","XMJMP",64,0)
 E  I $P(XMZREC,U,10)'="",'$D(XMSECURE),'$$KEYOK^XMJMCODE(XMZ,$P(XMZREC,U,10)) S XMSECBAD=1 Q
"RTN","XMJMP",65,0)
 W @IOF
"RTN","XMJMP",66,0)
 D PRINTIT^XMJMP1(XMDUZ,XMK,XMKN,XMZ,XMZREC,XMRESPS,XMPTR,+XMRESP_"-",0,1)
"RTN","XMJMP",67,0)
 Q
"RTN","XMJMP",68,0)
RESPONSE(XMDUZ,XMZ,XMRESPS,XMPTR,XMRESP) ;
"RTN","XMJMP",69,0)
 ; XMRESP="" if the user hasn't read the message at all
"RTN","XMJMP",70,0)
 ;        0  if the user has read the original message only
"RTN","XMJMP",71,0)
 ;        n  if the user has read thru response n
"RTN","XMJMP",72,0)
 S XMRESPS=+$P($G(^XMB(3.9,XMZ,3,0)),U,4)
"RTN","XMJMP",73,0)
 ;S XMPTR=+$O(^XMB(3.9,XMZ,1,"C",$S(XMDUZ=.6:DUZ,1:XMDUZ),0))
"RTN","XMJMP",74,0)
 S XMPTR=+$O(^XMB(3.9,XMZ,1,"C",XMDUZ,0))
"RTN","XMJMP",75,0)
 S XMRESP=$P($G(^XMB(3.9,XMZ,1,XMPTR,0)),U,2)
"RTN","XMJMP",76,0)
 Q
"RTN","XMJMP",77,0)
CHKRESP(XMDUZ,XMZO,XMRESPSO,XMRESP) ;
"RTN","XMJMP",78,0)
 N XMZ,XMFROM,XMRESPS,XMNEW,XMSEEN
"RTN","XMJMP",79,0)
 S XMRESPS=+$P($G(^XMB(3.9,XMZO,3,0)),U,4)
"RTN","XMJMP",80,0)
 Q:XMRESPS=+XMRESP  ; No new responses
"RTN","XMJMP",81,0)
 I XMRESPSO>XMRESP D  Q:XMRESPSO=XMRESPS
"RTN","XMJMP",82,0)
 . I XMRESPSO-1>XMRESP W !,">> You haven't read responses ",XMRESP+1,"-",XMRESPSO,".  You may backup to see them. <<"
"RTN","XMJMP",83,0)
 . E  W !,">> You haven't read response ",XMRESP+1,".  You may backup to see it. <<"
"RTN","XMJMP",84,0)
 . S XMRESP=XMRESPSO
"RTN","XMJMP",85,0)
 S XMNEW=0,XMSEEN=""
"RTN","XMJMP",86,0)
 F XMRESP=XMRESP+1:1:XMRESPS D  Q:XMNEW
"RTN","XMJMP",87,0)
 . S XMZ=$P(^XMB(3.9,XMZO,3,XMRESP,0),U,1)
"RTN","XMJMP",88,0)
 . S XMFROM=$P($G(^XMB(3.9,XMZ,0)),U,2)
"RTN","XMJMP",89,0)
 . I XMFROM'=XMDUZ S XMNEW=1 Q
"RTN","XMJMP",90,0)
 . S XMSEEN=XMSEEN_","_XMRESP
"RTN","XMJMP",91,0)
 Q:'XMNEW
"RTN","XMJMP",92,0)
 W !,">> Response ",XMRESP," has arrived - you may backup to see it. <<"
"RTN","XMJMP",93,0)
 Q
"RTN","XMJMP",94,0)
BACKUP(XMDUZ,XMK,XMKN,XMZ) ; Backup
"RTN","XMJMP",95,0)
 N XMWHICH,XMRESPS,XMABORT,XMZREC,XMPTR
"RTN","XMJMP",96,0)
 S XMZREC=^XMB(3.9,XMZ,0)
"RTN","XMJMP",97,0)
 I $P(XMZREC,U,10)'="",'$D(XMSECURE) Q:'$$KEYOK^XMJMCODE(XMZ,$P(XMZREC,U,10))
"RTN","XMJMP",98,0)
 S XMABORT=0
"RTN","XMJMP",99,0)
 D RESPONSE(XMDUZ,XMZ,.XMRESPS,.XMPTR,.XMWHICH)
"RTN","XMJMP",100,0)
 I XMRESPS D HOWMUCH(XMZ,XMRESPS,"Backup to",.XMWHICH,.XMABORT) Q:XMABORT
"RTN","XMJMP",101,0)
 W @IOF
"RTN","XMJMP",102,0)
 D PRINTIT^XMJMP1(XMDUZ,XMK,XMKN,XMZ,XMZREC,XMRESPS,XMPTR,XMWHICH,0,1)
"RTN","XMJMP",103,0)
 Q
"RTN","XMJMP",104,0)
WHICH(XMZ,XMRESPS,XMVERB,XMWHICH,XMABORT) ;
"RTN","XMJMP",105,0)
 N DIR,DIRUT,Y
"RTN","XMJMP",106,0)
 S DIR("A",1)=$S(XMRESPS=1:"There is 1 response.",1:"There are "_XMRESPS_" responses.")_"  Response 0 is the original message.  (?? shows index)"
"RTN","XMJMP",107,0)
 S DIR("A")="Select the responses to "_XMVERB_": "
"RTN","XMJMP",108,0)
 S:$D(XMWHICH) DIR("B")=XMWHICH
"RTN","XMJMP",109,0)
 S DIR("PRE")="I X?.E1N1""-"" S X=X_XMRESPS W XMRESPS"
"RTN","XMJMP",110,0)
 S DIR(0)="LACO^0:"_XMRESPS
"RTN","XMJMP",111,0)
 S DIR("??")="^D HELPRESP^XMJMP1(XMZ,XMRESPS)"
"RTN","XMJMP",112,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) S XMABORT=1 Q
"RTN","XMJMP",113,0)
 S:X'="" XMWHICH=$E(Y,1,$L(Y)-1)
"RTN","XMJMP",114,0)
 Q
"RTN","XMJMP",115,0)
HOWMUCH(XMZ,XMRESPS,XMPROMPT,XMWHICH,XMABORT) ;
"RTN","XMJMP",116,0)
 N DIR,DIRUT,Y,XMRESP
"RTN","XMJMP",117,0)
 S DIR("A",1)=$S(XMRESPS=1:"There is 1 response.",1:"There are "_XMRESPS_" responses.")_"  Response 0 is the original message.  (?? shows index)"
"RTN","XMJMP",118,0)
 I XMWHICH<XMRESPS D
"RTN","XMJMP",119,0)
 . S DIR("A")=XMPROMPT_":  "
"RTN","XMJMP",120,0)
 . S DIR("B")=XMWHICH+1
"RTN","XMJMP",121,0)
 E  D
"RTN","XMJMP",122,0)
 . S DIR("A")=XMPROMPT_":  Original message  "
"RTN","XMJMP",123,0)
 . S DIR("B")=0
"RTN","XMJMP",124,0)
 S DIR(0)="NA^-"_XMRESPS_":"_XMRESPS
"RTN","XMJMP",125,0)
 S DIR("?",1)="If you select 0, you will "_XMPROMPT_" the original message."
"RTN","XMJMP",126,0)
 S DIR("?")="If you select one of the responses, you will "_XMPROMPT_" it."
"RTN","XMJMP",127,0)
 S DIR("??")="^D HELPRESP^XMJMP1(XMZ,XMRESPS)"
"RTN","XMJMP",128,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMJMP",129,0)
 S XMRESP=$S(Y<0:XMRESPS+Y+1,1:Y)
"RTN","XMJMP",130,0)
 S XMWHICH=$S(XMRESP=XMRESPS:XMRESP,1:XMRESP_"-"_XMRESPS)
"RTN","XMJMP",131,0)
 Q
"RTN","XMJMP",132,0)
PONE(XMDUZ,XMK,XMKN,XMZ,XMPRTHDR,XMABORT) ;
"RTN","XMJMP",133,0)
PONEX ; Print one message.  Check it to see if
"RTN","XMJMP",134,0)
 ; the user is allowed to see it.  (confidential, scrambled)
"RTN","XMJMP",135,0)
 ; If not, print an error message.
"RTN","XMJMP",136,0)
 I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMJBM(XMDUZ,XMK,XMZ) S XMABORT=1 Q
"RTN","XMJMP",137,0)
 N XMZREC
"RTN","XMJMP",138,0)
 S XMZREC=^XMB(3.9,XMZ,0)
"RTN","XMJMP",139,0)
 I XMDUZ'=DUZ,'$$SURRACC^XMXSEC(XMDUZ,"access",XMZ,XMZREC) D  Q
"RTN","XMJMP",140,0)
 . D SHOW^XMJERR
"RTN","XMJMP",141,0)
 . S XMABORT=1
"RTN","XMJMP",142,0)
 N XMSECURE,XMPAKMAN ; Important 'new' - part of scramble and packman handling
"RTN","XMJMP",143,0)
 S XMPAKMAN=$$PAKMAN^XMXSEC1(XMZ,XMZREC)
"RTN","XMJMP",144,0)
 I $P(XMZREC,U,10)'="",'$$KEYOK^XMJMCODE(XMZ,$P(XMZREC,U,10)) S XMABORT=1 Q
"RTN","XMJMP",145,0)
 N XMRECIPS,XMRESPS,XMPTR,XMWHICH
"RTN","XMJMP",146,0)
 D QRECIP(.XMRECIPS,.XMABORT) Q:XMABORT
"RTN","XMJMP",147,0)
 D RESPONSE(XMDUZ,XMZ,.XMRESPS,.XMPTR,.XMWHICH)
"RTN","XMJMP",148,0)
 I XMRESPS D  Q:XMABORT
"RTN","XMJMP",149,0)
 . N XMRESP
"RTN","XMJMP",150,0)
 . S XMRESP=XMWHICH
"RTN","XMJMP",151,0)
 . I $D(^XMB(3.7,XMDUZ,"N0",XMK,XMZ)),XMRESP S:XMRESP'=XMRESPS XMRESP=XMRESP+1
"RTN","XMJMP",152,0)
 . E  S XMRESP=0
"RTN","XMJMP",153,0)
 . I XMRESP=XMRESPS S XMWHICH=XMRESP
"RTN","XMJMP",154,0)
 . E  S XMWHICH=XMRESP_"-"_XMRESPS
"RTN","XMJMP",155,0)
 . D WHICH(XMZ,XMRESPS,"Print",.XMWHICH,.XMABORT)
"RTN","XMJMP",156,0)
 E  S XMWHICH=0
"RTN","XMJMP",157,0)
 F I="XMV(","DUZ","XMDUZ","XMK","XMKN","XMZ","XMRESPS","XMPTR","XMWHICH","XMRECIPS","XMPRTHDR" S XMSAVE(I)=""
"RTN","XMJMP",158,0)
 S:$D(XMSECURE) (XMSAVE("XMSECURE"),XMSAVE("XMSECURE("))=""
"RTN","XMJMP",159,0)
 D EN^XUTMDEVQ("PRINTMSG^XMJMP","MailMan Print",.XMSAVE)
"RTN","XMJMP",160,0)
 Q
"RTN","XMJMP",161,0)
PRANGE(XMDUZ,XMK,XMKN,XMWHICH,XMRECIPS,XMPRTHDR,XMMSG) ;
"RTN","XMJMP",162,0)
PRANGEX ; Print a range of messages.
"RTN","XMJMP",163,0)
 ; Check each message as we come to it to see if
"RTN","XMJMP",164,0)
 ; the user is allowed to see it.  (confidential, scrambled)
"RTN","XMJMP",165,0)
 ; If not, print an error message.
"RTN","XMJMP",166,0)
 N I,XMKZ,XMZ,XMFIRST,XMCNT,XMRANGE,XMABORT
"RTN","XMJMP",167,0)
 S XMFIRST=1,(XMCNT,XMABORT)=0
"RTN","XMJMP",168,0)
 F I=1:1:$L(XMWHICH,",") D  Q:XMABORT
"RTN","XMJMP",169,0)
 . S XMRANGE=$P(XMWHICH,",",I)
"RTN","XMJMP",170,0)
 . F XMKZ=$P(XMRANGE,"-",1):1:$S(XMRANGE["-":$P(XMRANGE,"-",2),1:XMRANGE) D  Q:XMABORT
"RTN","XMJMP",171,0)
 . . S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,""))
"RTN","XMJMP",172,0)
 . . Q:'XMZ
"RTN","XMJMP",173,0)
 . . D PRTMULT(XMDUZ,XMK,XMKN,XMZ,XMRECIPS,XMPRTHDR,.XMFIRST,.XMCNT,.XMABORT)
"RTN","XMJMP",174,0)
 S:'$D(ZTQUEUED) XMMSG=XMCNT_" message"_$S(XMCNT=1:"",1:"s")_" printed."
"RTN","XMJMP",175,0)
 Q
"RTN","XMJMP",176,0)
PRTMULT(XMDUZ,XMK,XMKN,XMZ,XMRECIPS,XMPRTHDR,XMFIRST,XMCNT,XMABORT) ; Multiple message print
"RTN","XMJMP",177,0)
 N XMNOGO,XMSECURE,XMZREC,XMRESPS,XMRESP,XMPTR
"RTN","XMJMP",178,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","XMJMP",179,0)
 S XMNOGO=0
"RTN","XMJMP",180,0)
 S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMJMP",181,0)
 I XMZREC="" D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMJMP",182,0)
 D CHECK(XMDUZ,XMZ,XMZREC,.XMNOGO)  Q:XMNOGO&'$D(ZTQUEUED)
"RTN","XMJMP",183,0)
 I IOST["C-"!'XMFIRST W @IOF
"RTN","XMJMP",184,0)
 S XMFIRST=0
"RTN","XMJMP",185,0)
 D:XMPRTHDR IDHDR(XMDUZ)
"RTN","XMJMP",186,0)
 I XMNOGO D NOGOMSG(XMDUZ,XMZ,XMZREC,.XMNOGO) Q
"RTN","XMJMP",187,0)
 D RESPONSE(XMDUZ,XMZ,.XMRESPS,.XMPTR,.XMRESP)
"RTN","XMJMP",188,0)
 I $D(^XMB(3.7,XMDUZ,"N0",XMK,XMZ)),XMRESP S:XMRESP'=XMRESPS XMRESP=XMRESP+1
"RTN","XMJMP",189,0)
 E  S XMRESP=0
"RTN","XMJMP",190,0)
 D PRINTIT^XMJMP1(XMDUZ,XMK,XMKN,XMZ,XMZREC,XMRESPS,XMPTR,XMRESP_"-",XMRECIPS,XMPRTHDR,1,.XMABORT)
"RTN","XMJMP",191,0)
 S XMCNT=XMCNT+1
"RTN","XMJMP",192,0)
 ;Q:XMABORT
"RTN","XMJMP",193,0)
 ;I IOST["C-" D PAGE^XMXUTIL(.XMABORT)
"RTN","XMJMP",194,0)
 Q
"RTN","XMJMP",195,0)
CHECK(XMDUZ,XMZ,XMZREC,XMNOGO) ;
"RTN","XMJMP",196,0)
 D CONFID(XMDUZ,XMZ,XMZREC,.XMNOGO) Q:XMNOGO
"RTN","XMJMP",197,0)
 D SCRAMBLE(XMZ,XMZREC,.XMNOGO)
"RTN","XMJMP",198,0)
 Q
"RTN","XMJMP",199,0)
CONFID(XMDUZ,XMZ,XMZREC,XMNOGO) ; Check to see if msg is confidential
"RTN","XMJMP",200,0)
 Q:XMDUZ=DUZ
"RTN","XMJMP",201,0)
 Q:$$SURRACC^XMXSEC(XMDUZ,"access",XMZ,XMZREC)
"RTN","XMJMP",202,0)
 S XMNOGO=1
"RTN","XMJMP",203,0)
 I $D(ZTQUEUED) D  Q
"RTN","XMJMP",204,0)
 . S XMNOGO(1)=^TMP("XMERR",$J,XMERR,"TEXT",1)
"RTN","XMJMP",205,0)
 . K XMERR,^TMP("XMERR",$J)
"RTN","XMJMP",206,0)
 U IO(0)  ; In case we are not printing to terminal
"RTN","XMJMP",207,0)
 D NOGOID(XMZ,XMZREC)
"RTN","XMJMP",208,0)
 W !,^TMP("XMERR",$J,XMERR,"TEXT",1)
"RTN","XMJMP",209,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMJMP",210,0)
 U IO
"RTN","XMJMP",211,0)
 Q
"RTN","XMJMP",212,0)
SCRAMBLE(XMZ,XMZREC,XMNOGO) ;
"RTN","XMJMP",213,0)
 ; If '$D(ZTQUEUED), and scrambled, ask the user for the password.
"RTN","XMJMP",214,0)
 Q:$P(XMZREC,U,10)=""!$D(XMSECURE)
"RTN","XMJMP",215,0)
 I $$PAKMAN^XMXSEC1(XMZ,XMZREC) D  Q
"RTN","XMJMP",216,0)
 . S XMNOGO=1
"RTN","XMJMP",217,0)
 . I $D(ZTQUEUED) D  Q
"RTN","XMJMP",218,0)
 . . S XMNOGO(1)="PackMan messages secured with a password may not be printed."
"RTN","XMJMP",219,0)
 . U IO(0)  ; In case we are not printing to terminal
"RTN","XMJMP",220,0)
 . D NOGOID(XMZ,XMZREC)
"RTN","XMJMP",221,0)
 . W !,"Secured PackMan messages may not be printed."
"RTN","XMJMP",222,0)
 . U IO
"RTN","XMJMP",223,0)
 I $D(ZTQUEUED) D  Q
"RTN","XMJMP",224,0)
 . S XMNOGO=1
"RTN","XMJMP",225,0)
 . S XMNOGO(1)="This message has been secured with a password."
"RTN","XMJMP",226,0)
 . S XMNOGO(2)="When a range of messages is queued to print,"
"RTN","XMJMP",227,0)
 . S XMNOGO(3)="those messages with passwords cannot be printed because"
"RTN","XMJMP",228,0)
 . S XMNOGO(4)="there is no opportunity to ask for the password."
"RTN","XMJMP",229,0)
 U IO(0)  ; In case we are not printing to terminal
"RTN","XMJMP",230,0)
 D NOGOID(XMZ,XMZREC)
"RTN","XMJMP",231,0)
 S:'$$KEYOK^XMJMCODE(XMZ,$P(XMZREC,U,10)) XMNOGO=1
"RTN","XMJMP",232,0)
 U IO
"RTN","XMJMP",233,0)
 Q
"RTN","XMJMP",234,0)
NOGOID(XMZ,XMZREC) ;
"RTN","XMJMP",235,0)
 N XMSUBJ
"RTN","XMJMP",236,0)
 S XMSUBJ=$P(XMZREC,U,1)
"RTN","XMJMP",237,0)
 S:XMSUBJ["~U~" XMSUBJ=$$DECODEUP^XMXUTIL1(XMSUBJ)
"RTN","XMJMP",238,0)
 W !,"Subj: ",XMSUBJ,"  [#",XMZ,"]"
"RTN","XMJMP",239,0)
 W !,"From: ",$$NAME^XMXUTIL($P(XMZREC,U,2),1),!
"RTN","XMJMP",240,0)
 Q
"RTN","XMJMP",241,0)
NOGOMSG(XMDUZ,XMZ,XMZREC,XMNOGO) ;
"RTN","XMJMP",242,0)
 N I
"RTN","XMJMP",243,0)
 D NOGOID(XMZ,XMZREC)
"RTN","XMJMP",244,0)
 S I=""
"RTN","XMJMP",245,0)
 F  S I=$O(XMNOGO(I)) Q:I=""  D
"RTN","XMJMP",246,0)
 . W !,XMNOGO(I)
"RTN","XMJMP",247,0)
 Q
"RTN","XMJMP1")
0^23^B50242686
"RTN","XMJMP1",1,0)
XMJMP1 ;ISC-SF/GMB-Print,Backup continued ;06/15/99  06:28
"RTN","XMJMP1",2,0)
 ;;7.1;MailMan;**40,50**;Jun 02, 1994
"RTN","XMJMP1",3,0)
HELPRESP(XMZ,XMRESPS) ;
"RTN","XMJMP1",4,0)
 N XMRESP,XMLEN,XMABORT
"RTN","XMJMP1",5,0)
 S XMABORT=0
"RTN","XMJMP1",6,0)
 W @IOF,"There "_$S(XMRESPS=1:"is ",1:"are "),XMRESPS," response"_$S(XMRESPS=1:"",1:"s")_".  Response 0 is the original message."
"RTN","XMJMP1",7,0)
 S XMRESP=$S(XMV("ORDER")=1:0,1:XMRESPS+1)
"RTN","XMJMP1",8,0)
 W ! D HRHDR(XMRESPS,XMRESP,.XMLEN)
"RTN","XMJMP1",9,0)
 D:XMV("ORDER")=1 HRLINE(XMZ,0)
"RTN","XMJMP1",10,0)
 F  S XMRESP=$O(^XMB(3.9,XMZ,3,XMRESP),XMV("ORDER")) Q:XMRESP'>0  D  Q:XMABORT
"RTN","XMJMP1",11,0)
 . I $Y+3>IOSL D PAGE^XMXUTIL(.XMABORT) Q:XMABORT  D 
"RTN","XMJMP1",12,0)
 . . W @IOF D HRHDR(XMRESPS,XMRESP,.XMLEN)
"RTN","XMJMP1",13,0)
 . D HRLINE($P(^XMB(3.9,XMZ,3,XMRESP,0),U),XMRESP)
"RTN","XMJMP1",14,0)
 Q:XMABORT
"RTN","XMJMP1",15,0)
 Q:XMV("ORDER")=1
"RTN","XMJMP1",16,0)
 I $Y+3>IOSL D PAGE^XMXUTIL(.XMABORT) Q:XMABORT  D
"RTN","XMJMP1",17,0)
 . W @IOF D HRHDR(XMRESPS,XMRESP,.XMLEN)
"RTN","XMJMP1",18,0)
 D HRLINE(XMZ,0)
"RTN","XMJMP1",19,0)
 Q
"RTN","XMJMP1",20,0)
HRHDR(XMRESPS,XMRESP,XMLEN) ;
"RTN","XMJMP1",21,0)
 S XMLEN("RESP")=$S(XMV("ORDER")=1:$L($$MIN^XLFMTH(XMRESPS,XMRESP+IOSL)),1:$L(XMRESP))
"RTN","XMJMP1",22,0)
 S XMLEN("DATE")=9
"RTN","XMJMP1",23,0)
 S XMLEN("LINE")=5
"RTN","XMJMP1",24,0)
 S XMLEN("FROM")=79-XMLEN("RESP")-XMLEN("DATE")-XMLEN("LINE")-3
"RTN","XMJMP1",25,0)
 W $$LJ^XLFSTR("Response",XMLEN("RESP")+XMLEN("DATE")+3,"."),$$LJ^XLFSTR($$EZBLD^DIALOG(34006),XMLEN("FROM"),"."),"Lines"
"RTN","XMJMP1",26,0)
 Q
"RTN","XMJMP1",27,0)
HRLINE(XMZ,XMRESP) ;
"RTN","XMJMP1",28,0)
 N XMZREC
"RTN","XMJMP1",29,0)
 S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMJMP1",30,0)
 W !,$J(XMRESP,XMLEN("RESP")),") ",$E($$DATE($P(XMZREC,U,3)),1,XMLEN("DATE"))," ",$$MELD^XMXUTIL1($$NAME^XMXUTIL($P(XMZREC,U,2),1),+$P($G(^XMB(3.9,XMZ,2,0)),U,4),XMLEN("FROM")+XMLEN("LINE"))
"RTN","XMJMP1",31,0)
 Q
"RTN","XMJMP1",32,0)
RESPHDR(XMZ,XMRESP) ;
"RTN","XMJMP1",33,0)
 N XMZREC
"RTN","XMJMP1",34,0)
 S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMJMP1",35,0)
 D WL(XMRESP_") "_$$NAME^XMXUTIL($P(XMZREC,U,2),1))
"RTN","XMJMP1",36,0)
 D:$P(XMZREC,U,4)'="" W(" ","(Sender: "_$$NAME^XMXUTIL($P(XMZREC,U,4),1)_")")
"RTN","XMJMP1",37,0)
 D W("  ",$$DATE($P(XMZREC,U,3)))
"RTN","XMJMP1",38,0)
 D W("  ",$$LINES(XMZ))
"RTN","XMJMP1",39,0)
 Q
"RTN","XMJMP1",40,0)
DATE(XMDT) ;
"RTN","XMJMP1",41,0)
 Q:XMDT'=+XMDT XMDT
"RTN","XMJMP1",42,0)
 Q $$MMDT^XMXUTIL1(XMDT)
"RTN","XMJMP1",43,0)
LINES(XMZ) ;
"RTN","XMJMP1",44,0)
 N XMLINES
"RTN","XMJMP1",45,0)
 S XMLINES=+$P($G(^XMB(3.9,XMZ,2,0)),U,4)
"RTN","XMJMP1",46,0)
 S XMLINES=XMLINES_$S(XMLINES=1:" line",1:" lines")
"RTN","XMJMP1",47,0)
 Q XMLINES
"RTN","XMJMP1",48,0)
PRINTIT(XMDUZ,XMK,XMKN,XMZ,XMZREC,XMRESPS,XMPTR,XMWHICH,XMRECIPS,XMPRTHDR,XMMULT,XMABORT) ;
"RTN","XMJMP1",49,0)
 N XMSUBJ,XMPAGE,XMZSTR,I,XMRESP,XMRANGE
"RTN","XMJMP1",50,0)
 S:'$D(XMABORT) XMABORT=0
"RTN","XMJMP1",51,0)
 S XMSUBJ=$P(XMZREC,U,1) S:XMSUBJ["~U~" XMSUBJ=$$DECODEUP^XMXUTIL1(XMSUBJ)
"RTN","XMJMP1",52,0)
 S XMSUBJ="Subj: "_XMSUBJ,XMZSTR="[#"_XMZ_"]"
"RTN","XMJMP1",53,0)
 S XMPAGE=1
"RTN","XMJMP1",54,0)
 D:XMPRTHDR HEADER(XMDUZ,XMK,XMKN,XMZ,XMRESPS,XMZREC,XMSUBJ,XMZSTR)
"RTN","XMJMP1",55,0)
 I XMWHICH>XMRESPS D:$D(^XMB(3.7,XMDUZ,"N0",XMK,XMZ)) NONEW^XMXUTIL(XMDUZ,XMK,XMZ,1) Q
"RTN","XMJMP1",56,0)
 F I=1:1:$L(XMWHICH,",") D  Q:XMABORT
"RTN","XMJMP1",57,0)
 . S XMRANGE=$P(XMWHICH,",",I)
"RTN","XMJMP1",58,0)
 . S:$E(XMRANGE,$L(XMRANGE))="-" XMRANGE=XMRANGE_XMRESPS
"RTN","XMJMP1",59,0)
 . F XMRESP=$P(XMRANGE,"-",1):1:$S(XMRANGE["-":$P(XMRANGE,"-",2),1:XMRANGE) D  Q:XMABORT
"RTN","XMJMP1",60,0)
 . . I XMRESP>0 D RESPONSE(XMZ,.XMRESP,XMSUBJ,XMZSTR,XMPRTHDR,.XMPAGE,.XMABORT) Q
"RTN","XMJMP1",61,0)
 . . D BODY(XMZ,XMSUBJ,XMZSTR,XMPRTHDR,.XMPAGE,.XMABORT)
"RTN","XMJMP1",62,0)
 D:XMPTR LASTACC(XMDUZ,XMK,XMZ,XMZREC,XMSUBJ,XMPTR,XMRESP,+$G(XMMULT))
"RTN","XMJMP1",63,0)
 Q:XMABORT
"RTN","XMJMP1",64,0)
 D:XMRECIPS PRECIPS(XMDUZ,XMK,XMZ,XMRECIPS,XMSUBJ,XMZSTR,XMPRTHDR,.XMPAGE,.XMABORT)
"RTN","XMJMP1",65,0)
 I XMK,$D(^XMB(3.7,XMDUZ,"N0",XMK,XMZ)),+XMRESP=+$P($G(^XMB(3.9,XMZ,3,0)),U,4) D NONEW^XMXUTIL(XMDUZ,XMK,XMZ,1)
"RTN","XMJMP1",66,0)
 Q
"RTN","XMJMP1",67,0)
LASTACC(XMDUZ,XMK,XMZ,XMZREC,XMSUBJ,XMPTR,XMRESP,XMMULT) ; Note first, last accesses, number of responses read
"RTN","XMJMP1",68,0)
 N XMIM,XMIU,XMINSTR,XMCONFRM
"RTN","XMJMP1",69,0)
 S XMIM("SUBJ")=$P(XMSUBJ," ",2,99)
"RTN","XMJMP1",70,0)
 S XMIM("FROM")=$P(XMZREC,U,2)
"RTN","XMJMP1",71,0)
 S XMINSTR("FLAGS")=$S("^Y^y^"[(U_$P(XMZREC,U,5)_U):"R",1:"")
"RTN","XMJMP1",72,0)
 S XMIU("IEN")=XMPTR
"RTN","XMJMP1",73,0)
 S XMIU("RESP")=XMRESP
"RTN","XMJMP1",74,0)
 D LASTACC^XMXUTIL(XMDUZ,XMK,XMZ,XMRESP,.XMIM,.XMINSTR,.XMIU,.XMCONFRM)
"RTN","XMJMP1",75,0)
 Q:'XMCONFRM!$D(ZTQUEUED)
"RTN","XMJMP1",76,0)
 U IO(0)
"RTN","XMJMP1",77,0)
 D:XMMULT NOGOID^XMJMP(XMZ,XMZREC)
"RTN","XMJMP1",78,0)
 W !,">> Confirmation message sent to sender. <<"
"RTN","XMJMP1",79,0)
 U IO
"RTN","XMJMP1",80,0)
 Q
"RTN","XMJMP1",81,0)
PRECIPS(XMDUZ,XMK,XMZ,XMRECIPS,XMSUBJ,XMZSTR,XMPRTHDR,XMPAGE,XMABORT) ; Print recipients (replaces QE2^XMA5)
"RTN","XMJMP1",82,0)
 D INFO^XMJMQ(XMDUZ,XMK,XMZ,XMPRTHDR,XMSUBJ,XMZSTR,.XMPAGE,.XMABORT) Q:XMABORT
"RTN","XMJMP1",83,0)
 D LATER^XMJMQ(XMDUZ,XMZ,XMPRTHDR,XMSUBJ,XMZSTR,.XMPAGE,.XMABORT) Q:XMABORT
"RTN","XMJMP1",84,0)
 I XMRECIPS=1 D
"RTN","XMJMP1",85,0)
 . D SUMMARY^XMJMQ1(XMZ,XMPRTHDR,XMSUBJ,XMZSTR,.XMPAGE,.XMABORT)
"RTN","XMJMP1",86,0)
 E  D DETAIL^XMJMQ(XMZ,XMPRTHDR,XMSUBJ,XMZSTR,.XMPAGE,.XMABORT)
"RTN","XMJMP1",87,0)
 Q
"RTN","XMJMP1",88,0)
HEADER(XMDUZ,XMK,XMKN,XMZ,XMRESPS,XMZREC,XMSUBJ,XMZSTR) ;
"RTN","XMJMP1",89,0)
 D PAGE1HDR(XMDUZ,XMK,XMKN,XMZ,XMRESPS,XMZREC,XMSUBJ,XMZSTR)
"RTN","XMJMP1",90,0)
 D W("   ","Page 1")
"RTN","XMJMP1",91,0)
 I XMK,$D(^XMB(3.7,XMDUZ,"N0",XMK,XMZ)) D W("  ",$S($D(^XMB(3.7,XMDUZ,"N",XMK,XMZ)):"!Priority!",1:"*New*"))
"RTN","XMJMP1",92,0)
 D LINE
"RTN","XMJMP1",93,0)
 Q
"RTN","XMJMP1",94,0)
LINE ;
"RTN","XMJMP1",95,0)
 W !,"-------------------------------------------------------------------------------"
"RTN","XMJMP1",96,0)
 Q
"RTN","XMJMP1",97,0)
PAGE1HDR(XMDUZ,XMK,XMKN,XMZ,XMRESPS,XMZREC,XMSUBJ,XMZSTR) ;
"RTN","XMJMP1",98,0)
 W XMSUBJ
"RTN","XMJMP1",99,0)
 D W("  ",XMZSTR)
"RTN","XMJMP1",100,0)
 D W(" ",$$DATE($P(XMZREC,U,3)))
"RTN","XMJMP1",101,0)
 D W("  ",$$LINES(XMZ))
"RTN","XMJMP1",102,0)
 ;D:$O(^XMB(3.9,XMZ,2005,0)) W(" ","Attachment(s).")
"RTN","XMJMP1",103,0)
 D WL("From: "_$$NAME^XMXUTIL($P(XMZREC,U,2),1))
"RTN","XMJMP1",104,0)
 D:$P(XMZREC,U,4)'="" W(" ","(Sender: "_$$NAME^XMXUTIL($P(XMZREC,U,4),1)_")")
"RTN","XMJMP1",105,0)
 I XMRESPS>0 D
"RTN","XMJMP1",106,0)
 . N XMPTR,XMRESP
"RTN","XMJMP1",107,0)
 . ;S XMPTR=+$O(^XMB(3.9,XMZ,1,"C",$S(XMDUZ=.6:DUZ,1:XMDUZ),0))
"RTN","XMJMP1",108,0)
 . S XMPTR=+$O(^XMB(3.9,XMZ,1,"C",XMDUZ,0))
"RTN","XMJMP1",109,0)
 . S XMRESP=+$P($G(^XMB(3.9,XMZ,1,XMPTR,0)),U,2)
"RTN","XMJMP1",110,0)
 . S XMRESP=XMRESP_" of "_XMRESPS_" response"_$S(XMRESPS=1:"",1:"s")_" read."
"RTN","XMJMP1",111,0)
 . D W("  ",XMRESP)
"RTN","XMJMP1",112,0)
 D W("  ","In '"_XMKN_"' basket.")
"RTN","XMJMP1",113,0)
 I XMK D
"RTN","XMJMP1",114,0)
 . N XMVAPOR
"RTN","XMJMP1",115,0)
 . S XMVAPOR=$P($G(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)),U,5)
"RTN","XMJMP1",116,0)
 . I XMVAPOR W !,"Automatic Deletion Date: "_$$MMDT^XMXUTIL1(XMVAPOR)
"RTN","XMJMP1",117,0)
 Q
"RTN","XMJMP1",118,0)
WL(XMSTRING) ;
"RTN","XMJMP1",119,0)
 I $L(XMSTRING)'<IOM,IOM>1 F  D  Q:$L(XMSTRING)<IOM
"RTN","XMJMP1",120,0)
 . W !,$E(XMSTRING,1,IOM-1)
"RTN","XMJMP1",121,0)
 . S XMSTRING=$E(XMSTRING,IOM,999)
"RTN","XMJMP1",122,0)
 W !,XMSTRING
"RTN","XMJMP1",123,0)
 Q
"RTN","XMJMP1",124,0)
W(XMSPACE,XMSTRING) ;
"RTN","XMJMP1",125,0)
 I $X+$L(XMSPACE)+$L(XMSTRING)>IOM D WL(XMSTRING) Q
"RTN","XMJMP1",126,0)
 W XMSPACE,XMSTRING
"RTN","XMJMP1",127,0)
 Q
"RTN","XMJMP1",128,0)
BODY(XMZ,XMSUBJ,XMZSTR,XMPRTHDR,XMPAGE,XMABORT) ;
"RTN","XMJMP1",129,0)
 N XMTEXT,I,J
"RTN","XMJMP1",130,0)
 S I=.999999
"RTN","XMJMP1",131,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:I'>0  D  Q:XMABORT
"RTN","XMJMP1",132,0)
 . S XMTEXT=^XMB(3.9,XMZ,2,I,0)
"RTN","XMJMP1",133,0)
 . I $D(XMSECURE),'XMPAKMAN S XMTEXT=$$DECSTR^XMJMCODE(XMTEXT) ; PackMan messages are never scrambled, just "secured".
"RTN","XMJMP1",134,0)
 . I $E(XMTEXT,1)="$",$F("$TXT$END",$E(XMTEXT,1,4))#4=1 S XMTEXT=$P(XMTEXT,U) ; hide code for secured packman msg.
"RTN","XMJMP1",135,0)
 . I XMTEXT["|TAB|" F  S J=$F(XMTEXT,"|TAB|")-6 Q:J<0  S XMTEXT=$E(XMTEXT,1,J)_$E("         ",1,9-(J-(J\9*9)))_$E(XMTEXT,J+6,999)
"RTN","XMJMP1",136,0)
 . ; A site was sending a print to a device whose IOM was 0.
"RTN","XMJMP1",137,0)
 . ; In such a case, we should ignore IOM.
"RTN","XMJMP1",138,0)
 . F  D  Q:$L(XMTEXT)<IOM!XMABORT!(IOM<2)  S XMTEXT=$E(XMTEXT,IOM,999)
"RTN","XMJMP1",139,0)
 . . I $Y+3+($G(IOST)["C-")>IOSL D  Q:XMABORT
"RTN","XMJMP1",140,0)
 . . . D PAGE(XMZ,XMSUBJ,XMZSTR,XMPRTHDR,.XMPAGE,.XMABORT)
"RTN","XMJMP1",141,0)
 . . E  W !
"RTN","XMJMP1",142,0)
 . . W $S(IOM>1:$E(XMTEXT,1,IOM-1),1:XMTEXT)
"RTN","XMJMP1",143,0)
 Q
"RTN","XMJMP1",144,0)
PAGE(XMZ,XMSUBJ,XMZSTR,XMPRTHDR,XMPAGE,XMABORT) ;
"RTN","XMJMP1",145,0)
 I $G(IOST)["C-" W ! D PAGE^XMXUTIL(.XMABORT) Q:XMABORT
"RTN","XMJMP1",146,0)
 W @IOF
"RTN","XMJMP1",147,0)
 D:XMPRTHDR PAGE2HDR(XMSUBJ,XMZSTR,.XMPAGE)
"RTN","XMJMP1",148,0)
 Q
"RTN","XMJMP1",149,0)
PAGE2HDR(XMSUBJ,XMZSTR,XMPAGE) ;
"RTN","XMJMP1",150,0)
 S XMPAGE=XMPAGE+1
"RTN","XMJMP1",151,0)
 W XMSUBJ
"RTN","XMJMP1",152,0)
 D W("  ",XMZSTR)
"RTN","XMJMP1",153,0)
 D W("   ","Page "_XMPAGE)
"RTN","XMJMP1",154,0)
 D LINE
"RTN","XMJMP1",155,0)
 W !
"RTN","XMJMP1",156,0)
 Q
"RTN","XMJMP1",157,0)
RESPONSE(XMZ,XMRESP,XMSUBJ,XMZSTR,XMPRTHDR,XMPAGE,XMABORT) ;
"RTN","XMJMP1",158,0)
 N XMRSUBJ,XMREMOTE,XMZR
"RTN","XMJMP1",159,0)
 S XMZR=$P(^XMB(3.9,XMZ,3,XMRESP,0),U)
"RTN","XMJMP1",160,0)
 I '$D(^XMB(3.9,XMZR,0)) D  Q
"RTN","XMJMP1",161,0)
 . ;N DA,DIK
"RTN","XMJMP1",162,0)
 . ;S DA(1)=XMZ,DA=XMRESP
"RTN","XMJMP1",163,0)
 . ;S DIK="^XMB(3.9,XMZ,3,"
"RTN","XMJMP1",164,0)
 . ;D ^DIK
"RTN","XMJMP1",165,0)
 S XMRSUBJ=$P(^XMB(3.9,XMZR,0),U)
"RTN","XMJMP1",166,0)
 S XMREMOTE=$S(XMRSUBJ?1"R".N:0,1:1)
"RTN","XMJMP1",167,0)
 I $Y+XMREMOTE+7+($G(IOST)["C-")>IOSL D  Q:XMABORT
"RTN","XMJMP1",168,0)
 . D PAGE(XMZR,XMSUBJ,XMZSTR,XMPRTHDR,.XMPAGE,.XMABORT)
"RTN","XMJMP1",169,0)
 . S:XMABORT XMRESP=XMRESP-1
"RTN","XMJMP1",170,0)
 E  W !
"RTN","XMJMP1",171,0)
 D RESPHDR(XMZR,XMRESP)
"RTN","XMJMP1",172,0)
 W:XMREMOTE !,"   Subj: ",XMRSUBJ
"RTN","XMJMP1",173,0)
 W !
"RTN","XMJMP1",174,0)
 D BODY(XMZR,XMSUBJ,XMZSTR,XMPRTHDR,.XMPAGE,.XMABORT)
"RTN","XMJMP1",175,0)
 Q
"RTN","XMJMP1",176,0)
 ;
"RTN","XMJMP1",177,0)
 ;#34006 = From
"RTN","XMJMQ")
0^141^B75418150
"RTN","XMJMQ",1,0)
XMJMQ ;ISC-SF/GMB- Q,QD,QN Query recipients ;06/14/99  13:57
"RTN","XMJMQ",2,0)
 ;;7.1;MailMan;**40,57,70,50**;Jun 02, 1994
"RTN","XMJMQ",3,0)
 ; Replaces ^XMA5,^XMA5A (ISC-WASH/THM/CAP)
"RTN","XMJMQ",4,0)
Q(XMDUZ,XMK,XMKN,XMZ) ; Query
"RTN","XMJMQ",5,0)
 N XMRESPM,XMABORT
"RTN","XMJMQ",6,0)
 D QINIT(XMDUZ,XMK,XMKN,XMZ,.XMRESPM,.XMABORT)
"RTN","XMJMQ",7,0)
 D SUMMARY^XMJMQ1(XMZ,0,"","","",.XMABORT)
"RTN","XMJMQ",8,0)
 Q
"RTN","XMJMQ",9,0)
QD(XMDUZ,XMK,XMKN,XMZ) ; Query Detail
"RTN","XMJMQ",10,0)
 N XMRESPM,XMABORT
"RTN","XMJMQ",11,0)
 D QINIT(XMDUZ,XMK,XMKN,XMZ,.XMRESPM,.XMABORT)
"RTN","XMJMQ",12,0)
 D DETAIL(XMZ,0,"","","",.XMABORT)
"RTN","XMJMQ",13,0)
 Q
"RTN","XMJMQ",14,0)
QN(XMDUZ,XMK,XMKN,XMZ) ; Query Network
"RTN","XMJMQ",15,0)
 N XMRESPM,XMABORT
"RTN","XMJMQ",16,0)
 D QINIT(XMDUZ,XMK,XMKN,XMZ,.XMRESPM,.XMABORT)
"RTN","XMJMQ",17,0)
 D NETWORK^XMJMQ1(XMZ,.XMABORT) Q:XMABORT
"RTN","XMJMQ",18,0)
 D DETAIL(XMZ,0,"","","",.XMABORT)
"RTN","XMJMQ",19,0)
 Q
"RTN","XMJMQ",20,0)
QNAME(XMDUZ,XMK,XMKN,XMZ) ; Query someone's name
"RTN","XMJMQ",21,0)
 N XMRESPM,XMABORT,DIR,Y,DIRUT,XMNAME
"RTN","XMJMQ",22,0)
 F  D  Q:$D(DIRUT)
"RTN","XMJMQ",23,0)
 . S DIR(0)="FO^1:30^K:"", ""[$E(X) X"
"RTN","XMJMQ",24,0)
 . S DIR("A")="Enter the person's name or partial name"
"RTN","XMJMQ",25,0)
 . S DIR("?",1)="Name must be from 1 to 30 characters,"
"RTN","XMJMQ",26,0)
 . S DIR("?")="and must not contain ^, or begin with comma or space."
"RTN","XMJMQ",27,0)
 . D ^DIR Q:$D(DIRUT)
"RTN","XMJMQ",28,0)
 . S XMNAME=Y
"RTN","XMJMQ",29,0)
 . D QINIT(XMDUZ,XMK,XMKN,XMZ,.XMRESPM,.XMABORT)
"RTN","XMJMQ",30,0)
 . D SEARCH(XMZ,XMNAME,XMRESPM)
"RTN","XMJMQ",31,0)
 Q
"RTN","XMJMQ",32,0)
QNAMEX(XMDUZ,XMK,XMKN,XMZ,XMNAME) ; Query someone's name (name is supplied)
"RTN","XMJMQ",33,0)
 N XMRESPM,XMABORT
"RTN","XMJMQ",34,0)
 I ($L(XMNAME)<1)!($L(XMNAME)>30)!(XMNAME[U)!(", "[$E(XMNAME,1)) D  Q
"RTN","XMJMQ",35,0)
 . W *7,!,"Name must be from 1 to 30 characters,"
"RTN","XMJMQ",36,0)
 . W !,"and must not contain ^, or begin with comma or space."
"RTN","XMJMQ",37,0)
 D QINIT(XMDUZ,XMK,XMKN,XMZ,.XMRESPM,.XMABORT)
"RTN","XMJMQ",38,0)
 D SEARCH(XMZ,XMNAME,XMRESPM)
"RTN","XMJMQ",39,0)
 Q
"RTN","XMJMQ",40,0)
QINIT(XMDUZ,XMK,XMKN,XMZ,XMRESPM,XMABORT) ;
"RTN","XMJMQ",41,0)
 N XMZSTR,XMSUBJ,XMRESPS
"RTN","XMJMQ",42,0)
 S XMABORT=0
"RTN","XMJMQ",43,0)
 S XMZSTR="[#"_XMZ_"]"
"RTN","XMJMQ",44,0)
 S XMSUBJ=$P(^XMB(3.9,XMZ,0),U)
"RTN","XMJMQ",45,0)
 S:XMSUBJ["~U~" XMSUBJ=$$DECODEUP^XMXUTIL1(XMSUBJ)
"RTN","XMJMQ",46,0)
 S XMSUBJ="Subj: "_XMSUBJ
"RTN","XMJMQ",47,0)
 S XMRESPS=+$P($G(^XMB(3.9,XMZ,3,0)),U,4)
"RTN","XMJMQ",48,0)
 S XMRESPM=" of "_XMRESPS_" response"_$S(XMRESPS=1:")",1:"s)")
"RTN","XMJMQ",49,0)
 W @IOF
"RTN","XMJMQ",50,0)
 D PAGE1HDR^XMJMP1(XMDUZ,XMK,XMKN,XMZ,XMRESPS,^XMB(3.9,XMZ,0),XMSUBJ,XMZSTR)
"RTN","XMJMQ",51,0)
 D INFO(XMDUZ,XMK,XMZ,0,"","","",.XMABORT)
"RTN","XMJMQ",52,0)
 Q
"RTN","XMJMQ",53,0)
INFO(XMDUZ,XMK,XMZ,XMPHDR,XMSUBJ,XMZSTR,XMPAGE,XMABORT) ;
"RTN","XMJMQ",54,0)
 N XMREC,XMRECIPS
"RTN","XMJMQ",55,0)
 S XMREC=^XMB(3.9,XMZ,0)
"RTN","XMJMQ",56,0)
 I $Y+4>IOSL D  Q:XMABORT
"RTN","XMJMQ",57,0)
 . D PAGE(.XMABORT)
"RTN","XMJMQ",58,0)
 E  W !
"RTN","XMJMQ",59,0)
 W !
"RTN","XMJMQ",60,0)
 D W("Local Message-ID: "_XMZ_"@"_^XMB("NETNAME"))
"RTN","XMJMQ",61,0)
 D W(" "_$S($P(XMREC,U,7)["P":"Priority!",$P(XMREC,U,7)["S":"[SPOOL]",$P(XMREC,U,8):"<RESPONSE>",1:""))
"RTN","XMJMQ",62,0)
 S XMRECIPS=+$P($G(^XMB(3.9,XMZ,1,0)),U,4)
"RTN","XMJMQ",63,0)
 I XMRECIPS D W(" ("_XMRECIPS_" Recipient"_$S(XMRECIPS>1:"s)",1:")"))
"RTN","XMJMQ",64,0)
 I "^Y^y^"[(U_$P(XMREC,U,5)_U) D W(" Confirmation requested.")
"RTN","XMJMQ",65,0)
 I $P(XMREC,U,10)'="" D W(" Scramble Hint: "_$P(XMREC,U,10)_".")
"RTN","XMJMQ",66,0)
 D:$O(^XMB(3.9,XMZ,2005,0)) LIST^XMA2B ; MIME body parts
"RTN","XMJMQ",67,0)
 I "^Y^y^"[(U_$P(XMREC,U,9)_U) D W(" Closed.")
"RTN","XMJMQ",68,0)
 I "^Y^y^"[(U_$P(XMREC,U,11)_U) D W(" Confidential.")
"RTN","XMJMQ",69,0)
 I "^Y^y^"[(U_$P(XMREC,U,12)_U) D W(" 'Information only' for all recipients.")
"RTN","XMJMQ",70,0)
 I $D(^XMB(3.9,XMZ,.5)) D
"RTN","XMJMQ",71,0)
 . S XMREC=^XMB(3.9,XMZ,.5)
"RTN","XMJMQ",72,0)
 . I $P(XMREC,U,1)'="" D W(" Delivery basket: "_$P(XMREC,U,1))
"RTN","XMJMQ",73,0)
 I $D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D
"RTN","XMJMQ",74,0)
 . N XMVAPOR
"RTN","XMJMQ",75,0)
 . S XMVAPOR=$P($G(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)),U,5)
"RTN","XMJMQ",76,0)
 . I XMVAPOR D W(" Automatic Deletion Date: "_$$MMDT^XMXUTIL1(XMVAPOR))
"RTN","XMJMQ",77,0)
 D LATER(XMDUZ,XMZ,XMPHDR,XMSUBJ,XMZSTR,.XMPAGE,.XMABORT)
"RTN","XMJMQ",78,0)
 Q
"RTN","XMJMQ",79,0)
W(XMPIECE) ;
"RTN","XMJMQ",80,0)
 I $L(XMPIECE)+$X>IOM D  Q:XMABORT
"RTN","XMJMQ",81,0)
 . I $Y+3>IOSL D PAGE(.XMABORT) Q:XMABORT
"RTN","XMJMQ",82,0)
 . W !
"RTN","XMJMQ",83,0)
 W XMPIECE
"RTN","XMJMQ",84,0)
 Q
"RTN","XMJMQ",85,0)
DETAIL(XMZ,XMPHDR,XMSUBJ,XMZSTR,XMPAGE,XMABORT) ;
"RTN","XMJMQ",86,0)
 ; XMRESPM  Last part msg: of Number of responses in msg
"RTN","XMJMQ",87,0)
 N XMTO,XMRESPM,XMNAME,XMIEN
"RTN","XMJMQ",88,0)
 I $Y+3>IOSL D PAGE(.XMABORT) Q:XMABORT
"RTN","XMJMQ",89,0)
 W !
"RTN","XMJMQ",90,0)
 S XMRESPM=+$P($G(^XMB(3.9,XMZ,3,0)),U,4)
"RTN","XMJMQ",91,0)
 S XMRESPM=" of "_XMRESPM_" response"_$S(XMRESPM=1:")",1:"s)")
"RTN","XMJMQ",92,0)
 S XMTO=""
"RTN","XMJMQ",93,0)
 F  S XMTO=$O(^XMB(3.9,XMZ,1,"C",XMTO)) Q:XMTO=""  D  Q:XMABORT
"RTN","XMJMQ",94,0)
 . S XMIEN=$O(^XMB(3.9,XMZ,1,"C",XMTO,""))
"RTN","XMJMQ",95,0)
 . I XMTO=+XMTO D
"RTN","XMJMQ",96,0)
 . . S XMNAME=$$NAME^XMXUTIL(XMTO)
"RTN","XMJMQ",97,0)
 . E  D
"RTN","XMJMQ",98,0)
 . . I $L(XMTO)>29 S XMNAME=$P(^XMB(3.9,XMZ,1,XMIEN,0),U,1) Q
"RTN","XMJMQ",99,0)
 . . S XMNAME=XMTO
"RTN","XMJMQ",100,0)
 . D WNAME(XMZ,XMNAME,XMIEN,XMRESPM,.XMABORT)
"RTN","XMJMQ",101,0)
 Q
"RTN","XMJMQ",102,0)
WNAME(XMZ,XMNAME,XMIEN,XMRESPM,XMABORT) ;
"RTN","XMJMQ",103,0)
 N XMREC,XMTYPE
"RTN","XMJMQ",104,0)
 S XMREC=^XMB(3.9,XMZ,1,XMIEN,0)
"RTN","XMJMQ",105,0)
 I $Y+3>IOSL D PAGE(.XMABORT) Q:XMABORT
"RTN","XMJMQ",106,0)
 W !
"RTN","XMJMQ",107,0)
 I $D(^XMB(3.9,XMZ,1,XMIEN,"T")) D  ; CC: Info: Thru:
"RTN","XMJMQ",108,0)
 . S XMTYPE=$P(^XMB(3.9,XMZ,1,XMIEN,"T"),U,1)
"RTN","XMJMQ",109,0)
 . Q:XMTYPE=""
"RTN","XMJMQ",110,0)
 . S:'$D(XMTYPE(XMTYPE)) XMTYPE(XMTYPE)=$$EXTERNAL^DILFD(3.91,6.5,"",XMTYPE)
"RTN","XMJMQ",111,0)
 . W XMTYPE(XMTYPE),": "
"RTN","XMJMQ",112,0)
 W XMNAME
"RTN","XMJMQ",113,0)
 W:$X<20 ?20
"RTN","XMJMQ",114,0)
 I +$P(XMREC,U,1)=$P(XMREC,U,1) D  Q  ; local user
"RTN","XMJMQ",115,0)
 . I $P(XMREC,U,3)="" D
"RTN","XMJMQ",116,0)
 . . W " Not read."
"RTN","XMJMQ",117,0)
 . E  D  Q:XMABORT
"RTN","XMJMQ",118,0)
 . . D PRTPIECE(" Last read: "_$$MMDT^XMXUTIL1($P(XMREC,U,3)),.XMABORT) Q:XMABORT
"RTN","XMJMQ",119,0)
 . . D:$P(XMREC,U,2) PRTPIECE(" ("_$P(XMREC,U,2)_XMRESPM,.XMABORT) Q:XMABORT
"RTN","XMJMQ",120,0)
 . . D:$P(XMREC,U,10)'="" PRTPIECE(" [First read: "_$$MMDT^XMXUTIL1($P(XMREC,U,10))_"]",.XMABORT) Q:XMABORT
"RTN","XMJMQ",121,0)
 . . D:$D(^XMB(3.9,XMZ,1,XMIEN,"C")) PRTPIECE(" Copied: "_^("C"),.XMABORT)
"RTN","XMJMQ",122,0)
 . . D:$D(^XMB(3.9,XMZ,1,XMIEN,"S")) PRTPIECE(" Surrogate: "_^("S"),.XMABORT)
"RTN","XMJMQ",123,0)
 . . I $D(^XMB(3.9,XMZ,1,XMIEN,"D")),^("D") D PRTPIECE(" Terminated: "_$$MMDT^XMXUTIL1(^("D")),.XMABORT)
"RTN","XMJMQ",124,0)
 . I $D(^XMB(3.9,XMZ,1,XMIEN,"F")) D FWD(XMZ,XMIEN,.XMABORT)
"RTN","XMJMQ",125,0)
 I $E(XMNAME,1,2)="F.",$P(XMREC,U,12)'=""!$P(XMREC,U,11) D  Q
"RTN","XMJMQ",126,0)
 . D:$P(XMREC,U,5)'="" PRTPIECE(" Sent to fax: "_$$MMDT^XMXUTIL1($P(XMREC,U,5)),.XMABORT)  Q:XMABORT
"RTN","XMJMQ",127,0)
 . D:$P(XMREC,U,6)'="" PRTPIECE(" Status: "_$P(XMREC,U,6),.XMABORT) Q:XMABORT
"RTN","XMJMQ",128,0)
 . D:$P(XMREC,U,12)'="" PRTPIECE(" Fax ID: "_$P(XMREC,U,12),.XMABORT)
"RTN","XMJMQ",129,0)
 . I $D(^XMB(3.9,XMZ,1,XMIEN,"F")) D FWD(XMZ,XMIEN,.XMABORT)
"RTN","XMJMQ",130,0)
 I XMNAME["@" D  Q
"RTN","XMJMQ",131,0)
 . D:$P(XMREC,U,5)'="" PRTPIECE(" Sent: "_$$MMDT^XMXUTIL1($P(XMREC,U,5)),.XMABORT)  Q:XMABORT
"RTN","XMJMQ",132,0)
 . D:$P(XMREC,U,8)'="" PRTPIECE(" Time: "_$P(XMREC,U,8)_" second"_$S($P(XMREC,U,8)=1:"",1:"s"),.XMABORT) Q:XMABORT
"RTN","XMJMQ",133,0)
 . I $P(XMREC,U,7)'="",$D(^DIC(4.2,$P(XMREC,U,7),0)) D PRTPIECE(" Path: "_$P(^(0),U),.XMABORT) Q:XMABORT
"RTN","XMJMQ",134,0)
 . D:$P(XMREC,U,4)'="" PRTPIECE(" Message ID: "_$P(XMREC,U,4),.XMABORT) Q:XMABORT
"RTN","XMJMQ",135,0)
 . D:$P(XMREC,U,6)'="" PRTPIECE(" Status: "_$P(XMREC,U,6),.XMABORT)
"RTN","XMJMQ",136,0)
 . I $D(^XMB(3.9,XMZ,1,XMIEN,"F")) D FWD(XMZ,XMIEN,.XMABORT)
"RTN","XMJMQ",137,0)
 I $E(XMNAME,1,3)="* (" D  Q  ; Broadcast
"RTN","XMJMQ",138,0)
 . I $D(^XMB(3.9,XMZ,1,XMIEN,"F")) D FWD(XMZ,XMIEN,.XMABORT)
"RTN","XMJMQ",139,0)
 I $E(XMNAME,1,2)="D."!($E(XMNAME,1,2)="S.") D  Q
"RTN","XMJMQ",140,0)
 . D:$P(XMREC,U,3)'="" PRTPIECE(" Date: "_$$MMDT^XMXUTIL1($P(XMREC,U,3)),.XMABORT)  Q:XMABORT
"RTN","XMJMQ",141,0)
 . D:$P(XMREC,U,6)'="" PRTPIECE(" Status: "_$P(XMREC,U,6),.XMABORT) Q:XMABORT
"RTN","XMJMQ",142,0)
 . I $D(^XMB(3.9,XMZ,1,XMIEN,"F")) D FWD(XMZ,XMIEN,.XMABORT)
"RTN","XMJMQ",143,0)
 Q
"RTN","XMJMQ",144,0)
FWD(XMZ,XMIEN,XMABORT) ;
"RTN","XMJMQ",145,0)
 N XMFWDBY
"RTN","XMJMQ",146,0)
 S XMFWDBY=$P(^XMB(3.9,XMZ,1,XMIEN,"F"),U)
"RTN","XMJMQ",147,0)
 I $E(XMFWDBY,1)=" " D PRTPIECE(" Forwarded on: "_XMFWDBY,.XMABORT) Q
"RTN","XMJMQ",148,0)
 I $E(XMFWDBY,1)?1N!($E(XMFWDBY,1)=".") D PRTPIECE(" Forwarded by: "_$$NAME^XMXUTIL(+XMFWDBY)_" "_$P(XMFWDBY," ",2,99),.XMABORT) Q
"RTN","XMJMQ",149,0)
 D PRTPIECE(" Forwarded by: "_XMFWDBY,.XMABORT)
"RTN","XMJMQ",150,0)
 Q
"RTN","XMJMQ",151,0)
PRTPIECE(XMPIECE,XMABORT) ;
"RTN","XMJMQ",152,0)
 I $L(XMPIECE)+$X>IOM D  Q:XMABORT
"RTN","XMJMQ",153,0)
 . I $Y+3>IOSL D PAGE(.XMABORT) Q:XMABORT
"RTN","XMJMQ",154,0)
 . W !,?20
"RTN","XMJMQ",155,0)
 W XMPIECE
"RTN","XMJMQ",156,0)
 Q
"RTN","XMJMQ",157,0)
 ;PAGE(XMPHDR,XMSUBJ,XMZSTR,XMPAGE,XMABORT);
"RTN","XMJMQ",158,0)
PAGE(XMABORT) ;
"RTN","XMJMQ",159,0)
 I $G(IOST)["C-" D PAGE^XMXUTIL(.XMABORT) Q:XMABORT
"RTN","XMJMQ",160,0)
 W @IOF
"RTN","XMJMQ",161,0)
 Q:'XMPHDR
"RTN","XMJMQ",162,0)
 D PAGE2HDR^XMJMP1(XMSUBJ,XMZSTR,.XMPAGE)
"RTN","XMJMQ",163,0)
 Q
"RTN","XMJMQ",164,0)
LATER(XMDUZ,XMZ,XMPHDR,XMSUBJ,XMZSTR,XMPAGE,XMABORT) ; List dates message will be new on 'later'
"RTN","XMJMQ",165,0)
 Q:'$O(^XMB(3.73,"AC",XMZ,XMDUZ,0))
"RTN","XMJMQ",166,0)
 N XMIEN,XMSEP
"RTN","XMJMQ",167,0)
 I $Y+3>IOSL D PAGE(.XMABORT) Q:XMABORT
"RTN","XMJMQ",168,0)
 W !
"RTN","XMJMQ",169,0)
 D W("Message will be NEW on: ")
"RTN","XMJMQ",170,0)
 S XMIEN="",XMSEP=" "
"RTN","XMJMQ",171,0)
 F  S XMIEN=$O(^XMB(3.73,"AC",XMZ,XMDUZ,XMIEN)) Q:XMIEN=""  D
"RTN","XMJMQ",172,0)
 . D W2(XMSEP,$$MMDT^XMXUTIL1($P(^XMB(3.73,XMIEN,0),U)),.XMABORT)
"RTN","XMJMQ",173,0)
 . S XMSEP=", "
"RTN","XMJMQ",174,0)
 Q
"RTN","XMJMQ",175,0)
W2(XMSEP,XMPIECE,XMABORT) ;
"RTN","XMJMQ",176,0)
 I $X+$L(XMSEP)+$L(XMPIECE)>IOM D  Q:XMABORT
"RTN","XMJMQ",177,0)
 . I $Y+3>IOSL D PAGE(.XMABORT) Q:XMABORT
"RTN","XMJMQ",178,0)
 . W !,XMPIECE
"RTN","XMJMQ",179,0)
 E  W XMSEP,XMPIECE
"RTN","XMJMQ",180,0)
 Q
"RTN","XMJMQ",181,0)
SEARCH(XMZ,XMNAME,XMRESPM) ;
"RTN","XMJMQ",182,0)
 N XMXREF,XMPHDR
"RTN","XMJMQ",183,0)
 S XMPHDR=0
"RTN","XMJMQ",184,0)
 I $Y+5>IOSL D  Q:XMABORT
"RTN","XMJMQ",185,0)
 . D PAGE(.XMABORT)
"RTN","XMJMQ",186,0)
 E  W !
"RTN","XMJMQ",187,0)
 W !,"Searching for recipients that match '",XMNAME,"'.",!
"RTN","XMJMQ",188,0)
 S XMXREF="B"
"RTN","XMJMQ",189,0)
 S:$D(^VA(200,"BB")) XMXREF=XMXREF_"^BB"
"RTN","XMJMQ",190,0)
 S:$D(^VA(200,"C")) XMXREF=XMXREF_"^C"
"RTN","XMJMQ",191,0)
 S:$D(^VA(200,"D")) XMXREF=XMXREF_"^D"
"RTN","XMJMQ",192,0)
 D FIND^DIC(200,"","","A",XMNAME,"",XMXREF,"I $D(^XMB(3.9,XMZ,1,""C"",+Y))")
"RTN","XMJMQ",193,0)
 I '$D(DIERR) D PSEARCH(200,XMZ,XMRESPM,.XMABORT) Q:XMABORT
"RTN","XMJMQ",194,0)
 Q:$O(^XMB(3.9,XMZ,1,"C",":"))=""  ; Quit if there aren't any non-local addressees
"RTN","XMJMQ",195,0)
 N XMSCREEN
"RTN","XMJMQ",196,0)
 S XMSCREEN=$S(+XMNAME=XMNAME:"I '$D(^XMB(3.9,XMZ,1,""C"",XMNAME))",1:"")
"RTN","XMJMQ",197,0)
 D FIND^DIC(3.91,","_XMZ_",","","C",XMNAME,"","C",XMSCREEN)
"RTN","XMJMQ",198,0)
 I '$D(DIERR) D PSEARCH(3.91,XMZ,XMRESPM,.XMABORT)
"RTN","XMJMQ",199,0)
 Q:"ABCDEFGHIJKLMNOPQRSTUVWXYZ"'[$E(XMNAME)  ; Quit if the search string does not begin with an upper case letter
"RTN","XMJMQ",200,0)
 Q:$O(^XMB(3.9,XMZ,1,"C","`"))=""  ; Quit if there aren't any lower case addressees
"RTN","XMJMQ",201,0)
 ; FM will translate lower case to upper case in its search, but won't
"RTN","XMJMQ",202,0)
 ; translate upper to lower, so we do it here.
"RTN","XMJMQ",203,0)
 S XMSCREEN="I ^(0)]""`""" ; Limit search to lower case addresses
"RTN","XMJMQ",204,0)
 D FIND^DIC(3.91,","_XMZ_",","","C",$$LOW^XLFSTR(XMNAME),"","C",XMSCREEN)
"RTN","XMJMQ",205,0)
 I '$D(DIERR) D PSEARCH(3.91,XMZ,XMRESPM,.XMABORT)
"RTN","XMJMQ",206,0)
 Q
"RTN","XMJMQ",207,0)
PSEARCH(XMFILE,XMZ,XMRESPM,XMABORT) ; Print search results
"RTN","XMJMQ",208,0)
 N I,XMIEN
"RTN","XMJMQ",209,0)
 S I=0
"RTN","XMJMQ",210,0)
 F  S I=$O(^TMP("DILIST",$J,1,I)) Q:I=""  D  Q:XMABORT
"RTN","XMJMQ",211,0)
 . S XMIEN=^TMP("DILIST",$J,2,I)
"RTN","XMJMQ",212,0)
 . S:XMFILE=200 XMIEN=$O(^XMB(3.9,XMZ,1,"C",XMIEN,0))
"RTN","XMJMQ",213,0)
 . D WNAME(XMZ,^TMP("DILIST",$J,1,I),XMIEN,XMRESPM,.XMABORT)
"RTN","XMJMQ",214,0)
 Q
"RTN","XMJMQ1")
0^77^B7138623
"RTN","XMJMQ1",1,0)
XMJMQ1 ;ISC-SF/GMB- Q,QD,QN Query recipients (continued) ;06/24/99  07:14
"RTN","XMJMQ1",2,0)
 ;;7.1;MailMan;**40,50**;Jun 02, 1994
"RTN","XMJMQ1",3,0)
 ; Replaces ^XMA5,^XMA5A (ISC-WASH/THM/CAP)
"RTN","XMJMQ1",4,0)
NETWORK(XMZ,XMABORT) ;
"RTN","XMJMQ1",5,0)
 N I,J,XMLINE,XMPOS,XMPHDR
"RTN","XMJMQ1",6,0)
 I $O(^XMB(3.9,XMZ,2,0))'<1 D  Q
"RTN","XMJMQ1",7,0)
 . W !!,"This message originated locally.  There is no network header."
"RTN","XMJMQ1",8,0)
 I $D(^XMB(3.9,XMZ,.7)) W !!,"Envelope From:",$P(^XMB(3.9,XMZ,.7),U,1)
"RTN","XMJMQ1",9,0)
 W !!,"Network header:",!
"RTN","XMJMQ1",10,0)
 S (I,XMPHDR)=0
"RTN","XMJMQ1",11,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:I=""!(I'<1)  D  Q:XMABORT
"RTN","XMJMQ1",12,0)
 . S XMLINE=^XMB(3.9,XMZ,2,I,0)
"RTN","XMJMQ1",13,0)
 . I $Y+3>IOSL D PAGE^XMJMQ(.XMABORT) Q:XMABORT
"RTN","XMJMQ1",14,0)
 . I $L(XMLINE)<IOM W !,XMLINE Q
"RTN","XMJMQ1",15,0)
 . S XMPOS=0
"RTN","XMJMQ1",16,0)
 . F  D  Q:XMLINE=""!XMABORT
"RTN","XMJMQ1",17,0)
 . . I $L(XMLINE)+XMPOS+1>IOM F J=IOM-XMPOS-1:-1:IOM-XMPOS-20 Q:", -;)"[$E(XMLINE,J)
"RTN","XMJMQ1",18,0)
 . . I $Y+3>IOSL D PAGE^XMJMQ(.XMABORT) Q:XMABORT
"RTN","XMJMQ1",19,0)
 . . W !,?XMPOS,$E(XMLINE,1,J)
"RTN","XMJMQ1",20,0)
 . . S XMPOS=10
"RTN","XMJMQ1",21,0)
 . . S XMLINE=$E(XMLINE,J+1,999)
"RTN","XMJMQ1",22,0)
 Q
"RTN","XMJMQ1",23,0)
SUMMARY(XMZ,XMPHDR,XMSUBJ,XMZSTR,XMPAGE,XMABORT) ;
"RTN","XMJMQ1",24,0)
 I $Y+3>IOSL D PAGE^XMJMQ(.XMABORT) Q:XMABORT
"RTN","XMJMQ1",25,0)
 W !
"RTN","XMJMQ1",26,0)
 I '$O(^XMB(3.9,XMZ,6,0)),'$O(^XMB(3.9,XMZ,7,0)) D  Q
"RTN","XMJMQ1",27,0)
 . W !,"This is an old message which has no summary recipient list."
"RTN","XMJMQ1",28,0)
 . W !,"Only the Detail Query (QD) is available."
"RTN","XMJMQ1",29,0)
 W !,"This message was addressed as follows:",!
"RTN","XMJMQ1",30,0)
 D PRTADDR(XMZ,6,.XMABORT) Q:XMABORT  ; addressed to
"RTN","XMJMQ1",31,0)
 D PRTADDR(XMZ,7,.XMABORT)            ; deliver later to
"RTN","XMJMQ1",32,0)
 Q
"RTN","XMJMQ1",33,0)
PRTADDR(XMZ,XMNODE,XMABORT) ;
"RTN","XMJMQ1",34,0)
 N XMTO
"RTN","XMJMQ1",35,0)
 ;List Groups first
"RTN","XMJMQ1",36,0)
 S XMTO="G."
"RTN","XMJMQ1",37,0)
 F  S XMTO=$O(^XMB(3.9,XMZ,XMNODE,"B",XMTO)) Q:$E(XMTO,1,2)'="G."  D PRTSUMRY(XMZ,XMNODE,XMTO,.XMABORT)  Q:XMABORT
"RTN","XMJMQ1",38,0)
 Q:XMABORT
"RTN","XMJMQ1",39,0)
 S XMTO=""  ; Now list the rest
"RTN","XMJMQ1",40,0)
 F  S XMTO=$O(^XMB(3.9,XMZ,XMNODE,"B",XMTO)) Q:XMTO=""  D  Q:XMABORT
"RTN","XMJMQ1",41,0)
 . Q:$E(XMTO,1,2)="G."
"RTN","XMJMQ1",42,0)
 . D PRTSUMRY(XMZ,XMNODE,XMTO,.XMABORT)
"RTN","XMJMQ1",43,0)
 Q
"RTN","XMJMQ1",44,0)
PRTSUMRY(XMZ,XMNODE,XMTO,XMABORT) ;
"RTN","XMJMQ1",45,0)
 N XMIEN,XMREC
"RTN","XMJMQ1",46,0)
 S XMIEN=$O(^XMB(3.9,XMZ,XMNODE,"B",XMTO,0)) Q:'XMIEN
"RTN","XMJMQ1",47,0)
 S XMREC=$G(^XMB(3.9,XMZ,XMNODE,XMIEN,0)) Q:XMREC=""
"RTN","XMJMQ1",48,0)
 I $Y+3>IOSL D PAGE^XMJMQ(.XMABORT) Q:XMABORT
"RTN","XMJMQ1",49,0)
 W ! W $S($P(XMREC,U,2)="":"",$P(XMREC,U,2)="I":"Info:",$P(XMREC,U,2)="C":"cc:",1:$P(XMREC,U,2)_":") W $P(XMREC,U,1)
"RTN","XMJMQ1",50,0)
 Q:XMNODE=6
"RTN","XMJMQ1",51,0)
 D W^XMJMQ(" for delivery "_$$MMDT^XMXUTIL1($P(XMREC,U,5)))
"RTN","XMJMQ1",52,0)
 D W^XMJMQ(" by "_$P(XMREC,U,4))
"RTN","XMJMQ1",53,0)
 Q
"RTN","XMJMR")
0^26^B89707165
"RTN","XMJMR",1,0)
XMJMR ;ISC-SF/GMB-Interactive Reply ;06/14/99  14:14
"RTN","XMJMR",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMR",3,0)
 ; Replaces REPLY^XMA11,^XMA2,^XMA20,^XMAH1 (ISC-WASH/CAP/THM)
"RTN","XMJMR",4,0)
REPLY(XMDUZ,XMK,XMKN,XMZO,XMZOSUBJ,XMZOFROM,XMINSTR,XMPTR,XMRESPSO,XMINCL,XMRESP) ;
"RTN","XMJMR",5,0)
 N XMABORT,XMZ,XMID,XMWHICH
"RTN","XMJMR",6,0)
 S XMABORT=0
"RTN","XMJMR",7,0)
 D INIT(XMDUZ,.XMK,.XMKN,XMZO,XMZOSUBJ,XMZOFROM,.XMINSTR,XMINCL,.XMWHICH,.XMABORT) Q:XMABORT
"RTN","XMJMR",8,0)
 D CRE8XMZ^XMXSEND("R"_XMZO,.XMZ,1) I XMZ<1 S XMABORT=1 Q
"RTN","XMJMR",9,0)
 S XMID=$S(XMDUZ=.6:DUZ,1:XMDUZ)
"RTN","XMJMR",10,0)
 D EDITON^XMJMS(XMID,XMZ,XMZO)
"RTN","XMJMR",11,0)
 D PROCESS(XMID,XMK,XMKN,XMZO,XMZOSUBJ,XMZOFROM,XMZ,.XMINSTR,XMPTR,XMRESPSO,.XMRESP,.XMWHICH,.XMABORT)
"RTN","XMJMR",12,0)
 I XMABORT=DTIME D HALT^XMJMS("replying to")
"RTN","XMJMR",13,0)
 D EDITOFF^XMJMS(XMID)
"RTN","XMJMR",14,0)
 D:XMABORT KILLMSG^XMXUTIL(XMZ)
"RTN","XMJMR",15,0)
 Q
"RTN","XMJMR",16,0)
INIT(XMDUZ,XMK,XMKN,XMZO,XMZOSUBJ,XMZOFROM,XMINSTR,XMINCL,XMWHICH,XMABORT) ;
"RTN","XMJMR",17,0)
 N DIR,Y,DIRUT,XMFINISH,XMRESPS
"RTN","XMJMR",18,0)
 I XMDUZ=.6,DUZ=.6 D  Q
"RTN","XMJMR",19,0)
 . S XMABORT=1
"RTN","XMJMR",20,0)
 . W !,"You may not reply to a message as SHARED,MAIL."
"RTN","XMJMR",21,0)
 . G H^XUS
"RTN","XMJMR",22,0)
 D CHKLOCK^XMJMS(XMDUZ,.XMABORT) Q:XMABORT
"RTN","XMJMR",23,0)
 I XMINSTR("FLAGS")["P" D  Q:XMABORT
"RTN","XMJMR",24,0)
 . W *7,!!,"Responses to priority messages are not always delivered as priority mail."
"RTN","XMJMR",25,0)
 . W !,"If your response needs priority delivery, use the 'write' command to send"
"RTN","XMJMR",26,0)
 . W !,"a new priority message.",!
"RTN","XMJMR",27,0)
 . D PAGE^XMXUTIL(.XMABORT)
"RTN","XMJMR",28,0)
 I XMZOFROM["POSTMASTER@" D  Q:XMABORT
"RTN","XMJMR",29,0)
 . W *7,!!,"Because this message is from a remote POSTMASTER,"
"RTN","XMJMR",30,0)
 . W !,"your reply will remain local; it will not be sent over the network.",!
"RTN","XMJMR",31,0)
 . D PAGE^XMXUTIL(.XMABORT)
"RTN","XMJMR",32,0)
 I +XMK<1 D
"RTN","XMJMR",33,0)
 . W !
"RTN","XMJMR",34,0)
 . D SAVEMSG^XMJMOI(XMDUZ,.XMK,.XMKN,XMZO,XMZOSUBJ,XMZOFROM,$G(XMINSTR("RCPT BSKT")))
"RTN","XMJMR",35,0)
 S XMRESPS=+$P($G(^XMB(3.9,XMZO,3,0)),U,4)
"RTN","XMJMR",36,0)
 ; XMINCL =0 Do not include previous responses.  Just reply.
"RTN","XMJMR",37,0)
 ;        =1 Include previous response(s) in reply.
"RTN","XMJMR",38,0)
 ;        =? Ask user if previous responses should be included in reply.
"RTN","XMJMR",39,0)
 Q:XMINCL=0
"RTN","XMJMR",40,0)
 I XMINCL=1 D WHICH^XMJMC(XMZO,"include",.XMWHICH,.XMABORT) Q
"RTN","XMJMR",41,0)
 S XMFINISH=0
"RTN","XMJMR",42,0)
 F  D  Q:XMABORT!XMFINISH
"RTN","XMJMR",43,0)
 . S DIR(0)="S^R:Reply;S:Show recipients;I:Include "_$S(XMRESPS:"selected responses",1:"the original message")_" in my reply"
"RTN","XMJMR",44,0)
 . S DIR("?")="^D HELPINIT^XMJMR"
"RTN","XMJMR",45,0)
 . S DIR("A")="Select response action"
"RTN","XMJMR",46,0)
 . S DIR("B")="Reply"
"RTN","XMJMR",47,0)
 . D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMJMR",48,0)
 . I Y="R" S XMFINISH=1 Q
"RTN","XMJMR",49,0)
 . I Y="I" D  Q
"RTN","XMJMR",50,0)
 . . D WHICH^XMJMC(XMZO,"include",.XMWHICH,.XMABORT)
"RTN","XMJMR",51,0)
 . . S XMFINISH=1
"RTN","XMJMR",52,0)
 . D SHOWRECP(XMZO,.XMABORT)
"RTN","XMJMR",53,0)
 Q
"RTN","XMJMR",54,0)
HELPINIT ;
"RTN","XMJMR",55,0)
 W !,"Enter 'R' to reply to the message."
"RTN","XMJMR",56,0)
 W !!,"Enter 'S' if you want to see who else is on the message."
"RTN","XMJMR",57,0)
 W !!,"Enter 'I' if you want to include previous responses in your reply."
"RTN","XMJMR",58,0)
 D HELPCOPY
"RTN","XMJMR",59,0)
 Q
"RTN","XMJMR",60,0)
SHOWRECP(XMZO,XMABORT) ;
"RTN","XMJMR",61,0)
 N I,XMNAME,XMCNT,XMPOS,XMMULT,XMMSTR,DIR,Y,XMNOMORE
"RTN","XMJMR",62,0)
 S XMNOMORE=0
"RTN","XMJMR",63,0)
 I $O(^XMB(3.9,XMZO,6,0))="" D
"RTN","XMJMR",64,0)
 . S XMMULT=1
"RTN","XMJMR",65,0)
 . S XMMSTR="^XMB(3.9,"_XMZO_",1,""C"","
"RTN","XMJMR",66,0)
 E  D
"RTN","XMJMR",67,0)
 . S XMMULT=6
"RTN","XMJMR",68,0)
 . S XMMSTR="^XMB(3.9,"_XMZO_",6,""B"","
"RTN","XMJMR",69,0)
 W !
"RTN","XMJMR",70,0)
 S XMPOS=-20,XMCNT=0,I=""
"RTN","XMJMR",71,0)
 F  S I=$O(@(XMMSTR_"I)")) Q:I=""  D  Q:XMNOMORE
"RTN","XMJMR",72,0)
 . S XMCNT=XMCNT+1,XMPOS=XMPOS+20
"RTN","XMJMR",73,0)
 . I +I=I S XMNAME=$$NAME^XMXUTIL(I)
"RTN","XMJMR",74,0)
 . E  I $L(I)<30 S XMNAME=I
"RTN","XMJMR",75,0)
 . E  S XMNAME=$P($G(^XMB(3.9,XMZO,XMMULT,$O(@(XMMSTR_"I,0)")),0)),U,1)
"RTN","XMJMR",76,0)
 . F  Q:($X+2<XMPOS&(XMPOS+$L(XMNAME)<IOM))!(XMPOS=0)  D  Q:XMNOMORE
"RTN","XMJMR",77,0)
 . . S XMPOS=XMPOS+20
"RTN","XMJMR",78,0)
 . . Q:XMPOS<IOM
"RTN","XMJMR",79,0)
 . . I XMCNT#24=0 D
"RTN","XMJMR",80,0)
 . . . N DIR S DIR(0)="Y",DIR("A")="More",DIR("B")="No"
"RTN","XMJMR",81,0)
 . . . D ^DIR
"RTN","XMJMR",82,0)
 . . . S XMNOMORE='Y
"RTN","XMJMR",83,0)
 . . . I $D(DIRUT) S XMABORT=1 Q
"RTN","XMJMR",84,0)
 . . S XMPOS=0
"RTN","XMJMR",85,0)
 . Q:XMNOMORE
"RTN","XMJMR",86,0)
 . I XMPOS=0 W !,XMNAME
"RTN","XMJMR",87,0)
 . E  W ?XMPOS,XMNAME
"RTN","XMJMR",88,0)
 Q:XMABORT
"RTN","XMJMR",89,0)
 W !,"That's all the recipients."
"RTN","XMJMR",90,0)
 D PAGE^XMXUTIL(.XMABORT)
"RTN","XMJMR",91,0)
 Q
"RTN","XMJMR",92,0)
HELPCOPY ;
"RTN","XMJMR",93,0)
 W !,"You might choose to include previous responses if, for example,"
"RTN","XMJMR",94,0)
 W !,"- those responses contained questions which you intend to answer."
"RTN","XMJMR",95,0)
 W !,"- those responses contained assertions with which you agree or disagree."
"RTN","XMJMR",96,0)
 W !,"You could copy those responses, then edit out everything except"
"RTN","XMJMR",97,0)
 W !,"the questions or assertions, and then insert your answers or comments."
"RTN","XMJMR",98,0)
 Q
"RTN","XMJMR",99,0)
COPYTEXT(XMZO,XMZ,XMWHICH) ;
"RTN","XMJMR",100,0)
 N I,XMRESP,XMRANGE,XMC
"RTN","XMJMR",101,0)
 W !,"Copying..."
"RTN","XMJMR",102,0)
 S XMC=+$O(^XMB(3.9,XMZ,2,""),-1)
"RTN","XMJMR",103,0)
 F I=1:1:$L(XMWHICH,",") D
"RTN","XMJMR",104,0)
 . S XMRANGE=$P(XMWHICH,",",I)
"RTN","XMJMR",105,0)
 . Q:XMRANGE=""  ; (XMWHICH can end with a ",", giving us a null piece.)
"RTN","XMJMR",106,0)
 . F XMRESP=$P(XMRANGE,"-",1):1:$S(XMRANGE["-":$P(XMRANGE,"-",2),1:XMRANGE) D
"RTN","XMJMR",107,0)
 . . I XMRESP=0 D COPYRESP(XMRESP,XMZO,XMZ,.XMC) Q
"RTN","XMJMR",108,0)
 . . D COPYRESP(XMRESP,+$G(^XMB(3.9,XMZO,3,XMRESP,0)),XMZ,.XMC)
"RTN","XMJMR",109,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92A^"_XMC_U_XMC_U_DT
"RTN","XMJMR",110,0)
 Q
"RTN","XMJMR",111,0)
COPYRESP(XMRESP,XMZR,XMZ,XMC) ;
"RTN","XMJMR",112,0)
 N XMF,XMFROM,XMDT,XMZREC
"RTN","XMJMR",113,0)
 S XMC=XMC+1
"RTN","XMJMR",114,0)
 S ^XMB(3.9,XMZ,2,XMC,0)=""
"RTN","XMJMR",115,0)
 S XMZREC=$G(^XMB(3.9,XMZR,0))
"RTN","XMJMR",116,0)
 S XMFROM=$$NAME^XMXUTIL($P(XMZREC,U,2))
"RTN","XMJMR",117,0)
 S XMDT=$P(XMZREC,U,3)
"RTN","XMJMR",118,0)
 S XMC=XMC+1
"RTN","XMJMR",119,0)
 S ^XMB(3.9,XMZ,2,XMC,0)="On "_$$MMDT^XMXUTIL1(XMDT)_$S(XMRESP:" (Response #"_XMRESP_") ",1:" (Original message) ")_XMFROM_" wrote:"
"RTN","XMJMR",120,0)
 S XMF=.999999
"RTN","XMJMR",121,0)
 F  S XMF=$O(^XMB(3.9,XMZR,2,XMF)) Q:XMF=""  D
"RTN","XMJMR",122,0)
 . S XMC=XMC+1
"RTN","XMJMR",123,0)
 . W:XMC#50=0 "."
"RTN","XMJMR",124,0)
 . S ^XMB(3.9,XMZ,2,XMC,0)=$E(">"_^XMB(3.9,XMZR,2,XMF,0),1,254)
"RTN","XMJMR",125,0)
 Q
"RTN","XMJMR",126,0)
PROCESS(XMDUZ,XMK,XMKN,XMZO,XMZOSUBJ,XMZOFROM,XMZ,XMINSTR,XMPTR,XMRESPSO,XMRESP,XMWHICH,XMABORT) ;
"RTN","XMJMR",127,0)
 N XMRESTR
"RTN","XMJMR",128,0)
 D:$D(XMWHICH) COPYTEXT(XMZO,XMZ,XMWHICH)
"RTN","XMJMR",129,0)
 D BODY^XMJMS(XMDUZ,XMZ,XMZOSUBJ,.XMRESTR,.XMABORT) Q:XMABORT
"RTN","XMJMR",130,0)
 D REPLYMSG^XMJMRO(XMDUZ,XMK,XMKN,XMZO,XMZ,XMZOSUBJ,.XMRESTR,XMPTR,XMRESPSO,.XMRESP,.XMABORT) Q:XMABORT
"RTN","XMJMR",131,0)
 I XMZOFROM["@",$$UP^XLFSTR(XMZOFROM)'["POSTMASTER" D REMOTE(XMDUZ,XMZO,XMZOSUBJ,XMZ,.XMINSTR)
"RTN","XMJMR",132,0)
 Q
"RTN","XMJMR",133,0)
REMOTE(XMDUZ,XMZO,XMZOSUBJ,XMZ,XMINSTR) ;
"RTN","XMJMR",134,0)
 N DIR,Y,XMSUBJ,XMTO,XMABORT,XMRESTR
"RTN","XMJMR",135,0)
 S XMABORT=0
"RTN","XMJMR",136,0)
 S DIR("A")="Do you wish to send this reply across the network"
"RTN","XMJMR",137,0)
 S DIR(0)="Y",DIR("B")="No"
"RTN","XMJMR",138,0)
 S DIR("?",1)="Enter 'yes' if you wish to send this message across the network;"
"RTN","XMJMR",139,0)
 S DIR("?")="Enter 'no' if you wish your response to remain local."
"RTN","XMJMR",140,0)
 S DIR("??")="^D RHELP^XMJMR"
"RTN","XMJMR",141,0)
 D ^DIR Q:$D(DIRUT)
"RTN","XMJMR",142,0)
 Q:Y=0
"RTN","XMJMR",143,0)
 S XMSUBJ=$S($$UP^XLFSTR($E(XMZOSUBJ,1,4))="RE: ":XMZOSUBJ,1:$E("Re: "_XMZOSUBJ,1,65))
"RTN","XMJMR",144,0)
 D SUBJ^XMJMS(.XMSUBJ,.XMABORT) Q:XMABORT
"RTN","XMJMR",145,0)
 D REPLYTO(XMZO,.XMTO,.XMABORT) Q:XMABORT
"RTN","XMJMR",146,0)
 W !,"Addressing the reply to: ",XMTO
"RTN","XMJMR",147,0)
 D INIT^XMXADDR
"RTN","XMJMR",148,0)
 S XMRESTR("FLAGS")="O" ; match on exact domain name, if possible
"RTN","XMJMR",149,0)
 D ADDR^XMXADDR(XMDUZ,XMTO,.XMINSTR,.XMRESTR)
"RTN","XMJMR",150,0)
 ;S:XMTO[".VA.GOV" XMTO=$TR($P(XMTO,"@"),"._+",", .")_"@"_$P(XMTO,"@",2)
"RTN","XMJMR",151,0)
 I $D(^TMP("XMY",$J)) D
"RTN","XMJMR",152,0)
 . W !,"  Sending network reply..."
"RTN","XMJMR",153,0)
 . D NETREPLY^XMXREPLY(XMDUZ,XMZO,XMZ,XMSUBJ,.XMINSTR)
"RTN","XMJMR",154,0)
 . W "  Sent"
"RTN","XMJMR",155,0)
 D CLEANUP^XMXADDR
"RTN","XMJMR",156,0)
 Q
"RTN","XMJMR",157,0)
RHELP ;
"RTN","XMJMR",158,0)
 W !,"A network response will go to all message recipients on the mail system"
"RTN","XMJMR",159,0)
 W !,"of the sender."
"RTN","XMJMR",160,0)
 W !!,"For example, if the sender's address ends '@FORUM.VA.GOV', and the message"
"RTN","XMJMR",161,0)
 W !,"had 500 recipients on FORUM, then a response sent across the network would be"
"RTN","XMJMR",162,0)
 W !,"delivered to 500 recipients."
"RTN","XMJMR",163,0)
 W !!,"If you prefer to send a response only to the sender, you may create"
"RTN","XMJMR",164,0)
 W !,"a new message by choosing to 'answer' or 'write', instead of 'reply'."
"RTN","XMJMR",165,0)
 Q
"RTN","XMJMR",166,0)
REPLYTO(XMZ,XMFROM,XMABORT) ;
"RTN","XMJMR",167,0)
 N XMREPLTO,XMF,XMR
"RTN","XMJMR",168,0)
 D REPLYTO^XMXREPLY(XMZ,.XMFROM,.XMREPLTO)
"RTN","XMJMR",169,0)
 S XMF=XMFROM
"RTN","XMJMR",170,0)
 S XMFROM=$$REMADDR^XMXADDR1(XMFROM)
"RTN","XMJMR",171,0)
 Q:$G(XMREPLTO)=""
"RTN","XMJMR",172,0)
 S XMR=XMREPLTO
"RTN","XMJMR",173,0)
 S XMREPLTO=$$REMADDR^XMXADDR1(XMREPLTO)
"RTN","XMJMR",174,0)
 Q:$$UP^XLFSTR(XMREPLTO)=$$UP^XLFSTR(XMFROM)
"RTN","XMJMR",175,0)
 N DIR,Y
"RTN","XMJMR",176,0)
 S DIR(0)="S^"
"RTN","XMJMR",177,0)
 S DIR(0)=DIR(0)_"F:'FROM'     "_XMF
"RTN","XMJMR",178,0)
 S DIR(0)=DIR(0)_";R:'REPLY-TO' "_XMR
"RTN","XMJMR",179,0)
 S DIR("B")="R"
"RTN","XMJMR",180,0)
 S DIR("A",1)="This message has a 'reply-to' address which differs from the 'from' address."
"RTN","XMJMR",181,0)
 S DIR("A")="Select the address to use"
"RTN","XMJMR",182,0)
 S DIR("?",1)="Generally, we recommend that you use the 'reply-to' address."
"RTN","XMJMR",183,0)
 S DIR("?",2)="The choice, however, is up to you."
"RTN","XMJMR",184,0)
 S DIR("?")="Select F to use the 'from' address; R the 'reply-to'."
"RTN","XMJMR",185,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMJMR",186,0)
 S:Y="R" XMFROM=XMREPLTO
"RTN","XMJMR",187,0)
 Q
"RTN","XMJMR",188,0)
RECOVER(XMDUZ,XMZ,XMZO) ;
"RTN","XMJMR",189,0)
 N DIR,Y
"RTN","XMJMR",190,0)
 W *7,!!,"You have an unsent response remaining in your buffer."
"RTN","XMJMR",191,0)
 W !,"You may continue to reply or delete the remaining text."
"RTN","XMJMR",192,0)
 S DIR(0)="Y"
"RTN","XMJMR",193,0)
 S DIR("A")="Do you want to delete the unsent response"
"RTN","XMJMR",194,0)
 S DIR("B")="No"
"RTN","XMJMR",195,0)
 S DIR("?",1)="Enter 'Yes' to delete the unsent response."
"RTN","XMJMR",196,0)
 S DIR("?",2)="Enter 'No' to continue with the response."
"RTN","XMJMR",197,0)
 S DIR("?",3)=""
"RTN","XMJMR",198,0)
 S DIR("?",4)="If in doubt, just press return.  You will be able to edit"
"RTN","XMJMR",199,0)
 S DIR("?")="the response and delete it if you wish."
"RTN","XMJMR",200,0)
 D ^DIR
"RTN","XMJMR",201,0)
 I $D(DTOUT) D HALT^XMJMS("recovering")
"RTN","XMJMR",202,0)
 I Y=1!$D(DUOUT) D  Q
"RTN","XMJMR",203,0)
 . D EDITOFF^XMJMS(XMDUZ)
"RTN","XMJMR",204,0)
 . D KILLMSG^XMXUTIL(XMZ)
"RTN","XMJMR",205,0)
 N XMK,XMKN,XMZOSUBJ,XMZOFROM,XMINSTR,XMABORT,XMSECURE,XMPAKMAN,XMWHICH,XMPTR,XMRESPSO,XMRESP
"RTN","XMJMR",206,0)
 S XMABORT=0
"RTN","XMJMR",207,0)
 D RECINIT(XMDUZ,XMZO,.XMK,.XMKN,.XMZOSUBJ,.XMZOFROM,.XMINSTR,.XMPTR,.XMRESPSO,.XMRESP)
"RTN","XMJMR",208,0)
 D INIT(XMDUZ,.XMK,.XMKN,XMZO,XMZOSUBJ,XMZOFROM,.XMINSTR,0,.XMWHICH,.XMABORT)
"RTN","XMJMR",209,0)
 I XMABORT D HALT^XMJMS("recovering")
"RTN","XMJMR",210,0)
 D PROCESS(XMDUZ,XMK,XMKN,XMZO,XMZOSUBJ,XMZOFROM,XMZ,.XMINSTR,XMPTR,XMRESPSO,.XMRESP,.XMWHICH,.XMABORT)
"RTN","XMJMR",211,0)
 I XMABORT=DTIME D HALT^XMJMS("replying to")
"RTN","XMJMR",212,0)
 D EDITOFF^XMJMS(XMDUZ)
"RTN","XMJMR",213,0)
 D:XMABORT KILLMSG^XMXUTIL(XMZ)
"RTN","XMJMR",214,0)
 Q
"RTN","XMJMR",215,0)
RECINIT(XMDUZ,XMZO,XMK,XMKN,XMZOSUBJ,XMZOFROM,XMINSTR,XMPTR,XMRESPSO,XMRESP) ;
"RTN","XMJMR",216,0)
 N XMSECBAD,XMIM,XMIU
"RTN","XMJMR",217,0)
 S XMK=+$O(^XMB(3.7,"M",XMZO,XMDUZ,""))
"RTN","XMJMR",218,0)
 S XMKN=$P($G(^XMB(3.7,XMDUZ,2,XMK,0)),U,1)
"RTN","XMJMR",219,0)
 D DISPMSG^XMJMP(XMDUZ,XMK,XMKN,XMZO,.XMSECBAD)
"RTN","XMJMR",220,0)
 I $G(XMSECBAD) D HALT^XMJMS("recovering")
"RTN","XMJMR",221,0)
 D INMSG^XMXUTIL2(XMDUZ,0,XMZO,"","I",.XMIM,.XMINSTR,.XMIU)
"RTN","XMJMR",222,0)
 S XMZOSUBJ=XMIM("SUBJ")
"RTN","XMJMR",223,0)
 S XMZOFROM=XMIM("FROM")
"RTN","XMJMR",224,0)
 S XMRESPSO=XMIM("RESPS")
"RTN","XMJMR",225,0)
 S XMPTR=XMIU("IEN")
"RTN","XMJMR",226,0)
 S XMRESP=XMIU("RESP")
"RTN","XMJMR",227,0)
 Q
"RTN","XMJMRO")
0^27^B6097028
"RTN","XMJMRO",1,0)
XMJMRO ;ISC-SF/GMB-Options at 'reply' transmit prompt ;04/29/99  12:28
"RTN","XMJMRO",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMRO",3,0)
 ; Replaces ^XMA22 (ISC-WASH/CAP/THM)
"RTN","XMJMRO",4,0)
REPLYMSG(XMDUZ,XMK,XMKN,XMZO,XMZ,XMSUBJ,XMRESTR,XMPTR,XMRESPSO,XMRESP,XMABORT) ;
"RTN","XMJMRO",5,0)
 N XMFINISH,XMLINE
"RTN","XMJMRO",6,0)
 S XMFINISH=0
"RTN","XMJMRO",7,0)
 F  D  Q:XMFINISH!XMABORT
"RTN","XMJMRO",8,0)
 . N DIR,Y,X,XMNAME
"RTN","XMJMRO",9,0)
 . D CHKRESP^XMJMP(XMDUZ,XMZO,XMRESPSO,XMRESP)
"RTN","XMJMRO",10,0)
 . D REPLYSET(XMDUZ,.DIR)
"RTN","XMJMRO",11,0)
 . D ^DIR I $D(DIRUT) S XMABORT=$S($D(DTOUT):DTIME,1:1) Q
"RTN","XMJMRO",12,0)
 . D @Y
"RTN","XMJMRO",13,0)
 Q
"RTN","XMJMRO",14,0)
REPLYSET(XMDUZ,DIR) ;
"RTN","XMJMRO",15,0)
 S DIR(0)="",XMLINE=0
"RTN","XMJMRO",16,0)
 K DIR("L")
"RTN","XMJMRO",17,0)
 D SET("B","Backup to review message")
"RTN","XMJMRO",18,0)
 D SET("E","Edit reply")
"RTN","XMJMRO",19,0)
 D SET("I","Include previous responses in reply")
"RTN","XMJMRO",20,0)
 D SET("Q","Query")
"RTN","XMJMRO",21,0)
 D SETHELP("Q xxx","Query recipient(s) xxx")
"RTN","XMJMRO",22,0)
 D SET("QD","Query Detailed")
"RTN","XMJMRO",23,0)
 D SET("QN","Query Network")
"RTN","XMJMRO",24,0)
 D SET("T","Transmit now")
"RTN","XMJMRO",25,0)
 S DIR("L")=DIR("L",XMLINE) K DIR("L",XMLINE)
"RTN","XMJMRO",26,0)
 S DIR("A")="Select Message option:  "
"RTN","XMJMRO",27,0)
 S DIR("B")="Transmit now"
"RTN","XMJMRO",28,0)
 S DIR("PRE")="I X?1(1""Q "",1""q "",1""QD "",1""qd "").E S XMNAME=$P(X,"" "",2,99),X=""Query Detailed"""
"RTN","XMJMRO",29,0)
 S DIR("??")="XM-U-MO-REPLY"
"RTN","XMJMRO",30,0)
 S DIR(0)="SAM^"_$E(DIR(0),2,999)
"RTN","XMJMRO",31,0)
 Q
"RTN","XMJMRO",32,0)
SET(XMABBR,XMEXT) ;
"RTN","XMJMRO",33,0)
 S DIR(0)=DIR(0)_";"_XMABBR_":"_XMEXT
"RTN","XMJMRO",34,0)
 D SETHELP(XMABBR,XMEXT)
"RTN","XMJMRO",35,0)
 Q
"RTN","XMJMRO",36,0)
SETHELP(XMABBR,XMEXT) ;
"RTN","XMJMRO",37,0)
 S XMLINE=XMLINE+1
"RTN","XMJMRO",38,0)
 S DIR("L",XMLINE)=$E(XMABBR_"          ",1,10)_XMEXT
"RTN","XMJMRO",39,0)
 Q
"RTN","XMJMRO",40,0)
B ; Backup to review message
"RTN","XMJMRO",41,0)
 D BACKUP^XMJMP(XMDUZ,XMK,XMKN,XMZO)
"RTN","XMJMRO",42,0)
 S XMRESP=$P($G(^XMB(3.9,XMZO,1,XMPTR,0)),U,2)
"RTN","XMJMRO",43,0)
 Q
"RTN","XMJMRO",44,0)
E ; Edit msg
"RTN","XMJMRO",45,0)
 D BODY^XMJMS(XMDUZ,XMZ,XMSUBJ,.XMRESTR,.XMABORT)
"RTN","XMJMRO",46,0)
 Q
"RTN","XMJMRO",47,0)
I ; Include previous response in reply
"RTN","XMJMRO",48,0)
 N XMWHICH,XMNO
"RTN","XMJMRO",49,0)
 S XMNO=0
"RTN","XMJMRO",50,0)
 D WHICH^XMJMC(XMZO,"include",.XMWHICH,.XMNO) Q:XMNO
"RTN","XMJMRO",51,0)
 Q:'$D(XMWHICH)
"RTN","XMJMRO",52,0)
 D COPYTEXT^XMJMR(XMZO,XMZ,XMWHICH)
"RTN","XMJMRO",53,0)
 D BODY^XMJMS(XMDUZ,XMZ,XMSUBJ,.XMRESTR,.XMABORT)
"RTN","XMJMRO",54,0)
 Q
"RTN","XMJMRO",55,0)
Q ; Query
"RTN","XMJMRO",56,0)
 D Q^XMJMQ(XMDUZ,XMK,XMKN,XMZO)
"RTN","XMJMRO",57,0)
 Q
"RTN","XMJMRO",58,0)
QD ; Query Detailed
"RTN","XMJMRO",59,0)
 I $D(XMNAME) D QNAMEX^XMJMQ(XMDUZ,XMK,XMKN,XMZO,XMNAME) Q
"RTN","XMJMRO",60,0)
 D QD^XMJMQ(XMDUZ,XMK,XMKN,XMZO)
"RTN","XMJMRO",61,0)
 Q
"RTN","XMJMRO",62,0)
QN ; Query Network
"RTN","XMJMRO",63,0)
 D QN^XMJMQ(XMDUZ,XMK,XMKN,XMZO)
"RTN","XMJMRO",64,0)
 Q
"RTN","XMJMRO",65,0)
T ; Transmit now
"RTN","XMJMRO",66,0)
 S XMFINISH=1
"RTN","XMJMRO",67,0)
 W "  Sending local reply... "
"RTN","XMJMRO",68,0)
 D DOREPLY^XMXREPLY(XMDUZ,XMZO,XMZ)
"RTN","XMJMRO",69,0)
 W !,"  Sent"
"RTN","XMJMRO",70,0)
 Q
"RTN","XMJMS")
0^28^B24327001
"RTN","XMJMS",1,0)
XMJMS ;ISC-SF/GMB-Interactive Send ;06/15/99  06:41
"RTN","XMJMS",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMS",3,0)
 ; Replaces ^XMA2,^XMA20 (ISC-WASH/CAP/THM)
"RTN","XMJMS",4,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMJMS",5,0)
 ; PAKMAN  XMPACK - Load PackMan message
"RTN","XMJMS",6,0)
 ; SEND    XMSEND - Send a message
"RTN","XMJMS",7,0)
 ; *** BLOB^XMA2B (Imaging package) calls entry BLOB
"RTN","XMJMS",8,0)
SEND ;
"RTN","XMJMS",9,0)
 N XMSUBJ,XMZ,XMABORT
"RTN","XMJMS",10,0)
 S XMABORT=0
"RTN","XMJMS",11,0)
 D INIT(XMDUZ,.XMABORT) Q:XMABORT
"RTN","XMJMS",12,0)
 D SUBJ(.XMSUBJ,.XMABORT) Q:XMABORT
"RTN","XMJMS",13,0)
 D CRE8XMZ^XMXSEND(XMSUBJ,.XMZ,1) I XMZ<1 S XMABORT=1 Q
"RTN","XMJMS",14,0)
 D:'$G(XMPAKMAN) EDITON(XMDUZ,XMZ,"",.XMBLOB)
"RTN","XMJMS",15,0)
 D PROCESS(XMDUZ,XMZ,XMSUBJ,.XMABORT)
"RTN","XMJMS",16,0)
 D:XMABORT=DTIME HALT("sending")
"RTN","XMJMS",17,0)
 D:'$G(XMPAKMAN) EDITOFF(XMDUZ)
"RTN","XMJMS",18,0)
 D:XMABORT KILLMSG^XMXUTIL(XMZ)
"RTN","XMJMS",19,0)
 Q
"RTN","XMJMS",20,0)
PAKMAN ;
"RTN","XMJMS",21,0)
 N XMPAKMAN,XMLOAD,X,XMR
"RTN","XMJMS",22,0)
 S (XMPAKMAN,XMLOAD)=1
"RTN","XMJMS",23,0)
 D SEND
"RTN","XMJMS",24,0)
 Q
"RTN","XMJMS",25,0)
BLOB ;
"RTN","XMJMS",26,0)
 N XMBLOB,XMOUT
"RTN","XMJMS",27,0)
 S XMBLOB=1
"RTN","XMJMS",28,0)
 D SEND
"RTN","XMJMS",29,0)
 Q
"RTN","XMJMS",30,0)
INIT(XMDUZ,XMABORT) ; Clean up and initialize for Sending a message
"RTN","XMJMS",31,0)
 D CHECK^XMVVITAE
"RTN","XMJMS",32,0)
 I XMDUZ'=DUZ,'$$WPRIV^XMXSEC D  Q  ; Replaces SUR^XMA22
"RTN","XMJMS",33,0)
 . S XMABORT=1
"RTN","XMJMS",34,0)
 . D SHOW^XMJERR
"RTN","XMJMS",35,0)
 D CHKLOCK(XMDUZ,.XMABORT)
"RTN","XMJMS",36,0)
 Q
"RTN","XMJMS",37,0)
CHKLOCK(XMDUZ,XMABORT) ;
"RTN","XMJMS",38,0)
 I 'XMV("NOSEND") D
"RTN","XMJMS",39,0)
 . ; We need to do this because the menu system releases all locks upon
"RTN","XMJMS",40,0)
 . ; exit from an option.
"RTN","XMJMS",41,0)
 . L +^XMB(3.7,"AD",XMDUZ):0 E  S XMV("NOSEND")=1
"RTN","XMJMS",42,0)
 I XMV("NOSEND") D  Q  ; Replaces TWO^XMA1E
"RTN","XMJMS",43,0)
 . W !,"This session is concurrent with another.  You may not do this."
"RTN","XMJMS",44,0)
 . S XMABORT=1
"RTN","XMJMS",45,0)
 Q
"RTN","XMJMS",46,0)
PROCESS(XMDUZ,XMZ,XMSUBJ,XMABORT) ;
"RTN","XMJMS",47,0)
 N XMINSTR,XMRESTR
"RTN","XMJMS",48,0)
 I '$G(XMPAKMAN) D BODY(XMDUZ,XMZ,XMSUBJ,.XMRESTR,.XMABORT) Q:XMABORT
"RTN","XMJMS",49,0)
 I $G(XMBLOB) D ADD^XMA2B K XMBLOB I $D(XMOUT) S XMABORT=1 Q
"RTN","XMJMS",50,0)
 I $G(XMPAKMAN) D ^XMP
"RTN","XMJMS",51,0)
 D INIT^XMXADDR
"RTN","XMJMS",52,0)
 D TOWHOM^XMJMT(XMDUZ,"Send",.XMINSTR,.XMRESTR,.XMABORT)
"RTN","XMJMS",53,0)
 I $G(XMPAKMAN) D PSECURE^XMPSEC(XMZ,.XMABORT)
"RTN","XMJMS",54,0)
 D:'XMABORT SENDMSG^XMJMSO(XMDUZ,XMZ,XMSUBJ,.XMINSTR,.XMRESTR,.XMABORT)
"RTN","XMJMS",55,0)
 D CLEANUP^XMXADDR
"RTN","XMJMS",56,0)
 Q
"RTN","XMJMS",57,0)
SUBJ(XMSUBJ,XMABORT) ; ask subject
"RTN","XMJMS",58,0)
 N DIR,X,Y
"RTN","XMJMS",59,0)
 S DIR("A")=$$EZBLD^DIALOG(34002)
"RTN","XMJMS",60,0)
 S DIR(0)="FOU^3:65"
"RTN","XMJMS",61,0)
 S:$D(XMSUBJ) DIR("B")=XMSUBJ
"RTN","XMJMS",62,0)
 S DIR("?")="Answer must be 3-65 characters in length."
"RTN","XMJMS",63,0)
 S DIR("??")="^D QSUBJ^XMJMS"
"RTN","XMJMS",64,0)
 F  D  Q:Y'=""!XMABORT
"RTN","XMJMS",65,0)
 . D ^DIR
"RTN","XMJMS",66,0)
 . I $D(DTOUT)!$D(DUOUT) S XMABORT=1 Q
"RTN","XMJMS",67,0)
 . S Y=$$STRIP^XMXUTIL1(Y)
"RTN","XMJMS",68,0)
 . S Y=$$MAXBLANK^XMXUTIL1(Y)
"RTN","XMJMS",69,0)
 . I Y="" S Y=$$EZBLD^DIALOG(34012)
"RTN","XMJMS",70,0)
 . I $L(Y)'<3,$L(Y)'>65 Q
"RTN","XMJMS",71,0)
 . W !,"Answer must be 3-65 characters in length."
"RTN","XMJMS",72,0)
 . S Y=""
"RTN","XMJMS",73,0)
 Q:XMABORT
"RTN","XMJMS",74,0)
 S XMSUBJ=Y
"RTN","XMJMS",75,0)
 S:XMSUBJ[U XMSUBJ=$$ENCODEUP^XMXUTIL1(XMSUBJ)
"RTN","XMJMS",76,0)
 Q
"RTN","XMJMS",77,0)
QSUBJ ;
"RTN","XMJMS",78,0)
 W !,"This is the subject of the message, shown whenever the message is displayed."
"RTN","XMJMS",79,0)
 W !,"Leading and trailing blanks are deleted."
"RTN","XMJMS",80,0)
 W !,"Any sequence of 3 or more blanks is reduced to 2 blanks."
"RTN","XMJMS",81,0)
 Q:$D(XMSUBJ)
"RTN","XMJMS",82,0)
 W !!,"If you want to send a message with no subject, just press RETURN."
"RTN","XMJMS",83,0)
 Q
"RTN","XMJMS",84,0)
BODY(XMDUZ,XMZ,DIWESUB,XMRESTR,XMABORT) ; Replaces ENT1^XMA2
"RTN","XMJMS",85,0)
 N DIC
"RTN","XMJMS",86,0)
 ;W !,"You may ",$S($D(^XMB(3.9,XMZ,2,0)):"edit",1:"enter")," the ",$S($G(XMPAKMAN):"description of the PackMan",1:"text of the")," message..."
"RTN","XMJMS",87,0)
 W !,"You may ",$S($D(^XMB(3.9,XMZ,2,0)):"edit",1:"enter")," the text of the message..."
"RTN","XMJMS",88,0)
 S DWPK=1,DWLW=75,DIC="^XMB(3.9,"_XMZ_",2,"
"RTN","XMJMS",89,0)
 D EN^DIWE
"RTN","XMJMS",90,0)
 I '$O(^XMB(3.9,XMZ,2,0)) S XMABORT=1 Q
"RTN","XMJMS",91,0)
 D CHKLINES^XMXSEC1(XMDUZ,XMZ,.XMRESTR)
"RTN","XMJMS",92,0)
 Q
"RTN","XMJMS",93,0)
EDITON(XMDUZ,XMZ,XMZR,XMBLOB) ; Note that msg is being edited.  Replaces D^XMA0A
"RTN","XMJMS",94,0)
 N XMFDA,XMIENS
"RTN","XMJMS",95,0)
 S XMIENS=XMDUZ_","
"RTN","XMJMS",96,0)
 S XMFDA(3.7,XMIENS,5)=XMZ          ; current message/response
"RTN","XMJMS",97,0)
 S XMFDA(3.7,XMIENS,7)=$G(XMZR)     ; original message for response
"RTN","XMJMS",98,0)
 S XMFDA(3.7,XMIENS,7.5)=$G(XMBLOB) ; 0/1=BLOB yes/no
"RTN","XMJMS",99,0)
 D FILE^DIE("","XMFDA")
"RTN","XMJMS",100,0)
 Q
"RTN","XMJMS",101,0)
EDITOFF(XMDUZ) ; Note that msg is no longer being edited.
"RTN","XMJMS",102,0)
 N XMFDA,XMIENS
"RTN","XMJMS",103,0)
 S XMIENS=XMDUZ_","
"RTN","XMJMS",104,0)
 S XMFDA(3.7,XMIENS,5)="@"
"RTN","XMJMS",105,0)
 S XMFDA(3.7,XMIENS,7)="@"
"RTN","XMJMS",106,0)
 S XMFDA(3.7,XMIENS,7.5)="@"
"RTN","XMJMS",107,0)
 D FILE^DIE("","XMFDA")
"RTN","XMJMS",108,0)
 Q
"RTN","XMJMS",109,0)
HALT(XMACTION) ;
"RTN","XMJMS",110,0)
 W *7,!!,"You have timed out while ",XMACTION," a message."
"RTN","XMJMS",111,0)
 W !,"You can resume when you log back on and re-enter MailMan."
"RTN","XMJMS",112,0)
 W !,"Do it today, or your text may be purged this evening."
"RTN","XMJMS",113,0)
 G H^XUS
"RTN","XMJMS",114,0)
RECOVER(XMDUZ,XMZ,XMBLOB) ;
"RTN","XMJMS",115,0)
 N XMSUBJ,XMABORT
"RTN","XMJMS",116,0)
 S XMSUBJ=$P(^XMB(3.9,XMZ,0),U,1)
"RTN","XMJMS",117,0)
 S:XMSUBJ["~U~" XMSUBJ=$$DECODEUP^XMXUTIL1(XMSUBJ)
"RTN","XMJMS",118,0)
 W *7,!!,"You have an unsent message in your buffer."
"RTN","XMJMS",119,0)
 W !,"Subj: ",XMSUBJ
"RTN","XMJMS",120,0)
 W !,"You may have lost some of the text."
"RTN","XMJMS",121,0)
 W !,"You must re-enter recipients and any special handling instructions."
"RTN","XMJMS",122,0)
 S XMABORT=0
"RTN","XMJMS",123,0)
 D INIT(XMDUZ,.XMABORT)
"RTN","XMJMS",124,0)
 I XMABORT D HALT("recovering")
"RTN","XMJMS",125,0)
 D PROCESS(XMDUZ,XMZ,XMSUBJ,.XMABORT)
"RTN","XMJMS",126,0)
 I XMABORT=DTIME D HALT("sending")
"RTN","XMJMS",127,0)
 D EDITOFF(XMDUZ)
"RTN","XMJMS",128,0)
 D:XMABORT KILLMSG^XMXUTIL(XMZ)
"RTN","XMJMS",129,0)
 Q
"RTN","XMJMS",130,0)
 ;
"RTN","XMJMS",131,0)
 ;#34002 = Subject
"RTN","XMJMS",132,0)
 ;#34012 = * No Subject *
"RTN","XMJMSA")
0^29^B5496203
"RTN","XMJMSA",1,0)
XMJMSA ;ISC-SF/GMB-Anonymous User Suggestion Message ;02/22/99  10:24
"RTN","XMJMSA",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMSA",3,0)
 ; Replaces ^XMANON (ISC-WASH/CAP)
"RTN","XMJMSA",4,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMJMSA",5,0)
 ; SEND    XMSUGGESTION
"RTN","XMJMSA",6,0)
 ; This routine allows a user to send an anonymous message to the
"RTN","XMJMSA",7,0)
 ; SUGGESTION BOX basket of SHARED,MAIL.  If this basket doesn't exist,
"RTN","XMJMSA",8,0)
 ; it will be created.
"RTN","XMJMSA",9,0)
 ;
"RTN","XMJMSA",10,0)
 ; MailMan carefully fails to record the actual identity of the sender.
"RTN","XMJMSA",11,0)
 ;
"RTN","XMJMSA",12,0)
 ; To use it, put the XMSUGGESTION option onto the appropriate menu.
"RTN","XMJMSA",13,0)
 ; To stop a particular person from using it, put a 'Reverse/negative
"RTN","XMJMSA",14,0)
 ; Lock' onto the XMSUGGESTION option and assign that key to the
"RTN","XMJMSA",15,0)
 ; person you do not want to be able to use it.
"RTN","XMJMSA",16,0)
SEND ;
"RTN","XMJMSA",17,0)
 N XMSUBJ,XMABORT,DIR,Y,X,XMFINISH
"RTN","XMJMSA",18,0)
 S XMABORT=0
"RTN","XMJMSA",19,0)
 ;D WARNING(.XMABORT) Q:XMABORT
"RTN","XMJMSA",20,0)
 S XMSUBJ="Suggestion"
"RTN","XMJMSA",21,0)
 D ES Q:XMABORT  ; Edit the subject
"RTN","XMJMSA",22,0)
 K ^TMP("XM",$J)
"RTN","XMJMSA",23,0)
 D ET Q:XMABORT  ; Edit the text
"RTN","XMJMSA",24,0)
 S XMFINISH=0
"RTN","XMJMSA",25,0)
 F  D  Q:XMFINISH!XMABORT
"RTN","XMJMSA",26,0)
 . S DIR(0)="SAM^ES:Edit Subject;ET:Edit Text;T:Transmit now"
"RTN","XMJMSA",27,0)
 . S DIR("A")="Select Message option:  "
"RTN","XMJMSA",28,0)
 . S DIR("B")="Transmit now"
"RTN","XMJMSA",29,0)
 . D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMJMSA",30,0)
 . D @Y
"RTN","XMJMSA",31,0)
 K ^TMP("XM",$J)
"RTN","XMJMSA",32,0)
 Q
"RTN","XMJMSA",33,0)
ES ;
"RTN","XMJMSA",34,0)
 D SUBJ^XMJMS(.XMSUBJ,.XMABORT)
"RTN","XMJMSA",35,0)
 Q
"RTN","XMJMSA",36,0)
ET ; Edit text
"RTN","XMJMSA",37,0)
 N DIC
"RTN","XMJMSA",38,0)
 S DWPK=1,DWLW=75,DIC="^TMP(""XM"",$J,"
"RTN","XMJMSA",39,0)
 S DIWESUB=XMSUBJ
"RTN","XMJMSA",40,0)
 D EN^DIWE
"RTN","XMJMSA",41,0)
 I '$O(^TMP("XM",$J,0)) S XMABORT=1 Q
"RTN","XMJMSA",42,0)
 Q
"RTN","XMJMSA",43,0)
T ; Transmit the message
"RTN","XMJMSA",44,0)
 N XMDUZ,DUZ,XMINSTR,XMZ
"RTN","XMJMSA",45,0)
 S XMFINISH=1,(XMDUZ,DUZ)=.6
"RTN","XMJMSA",46,0)
 S XMINSTR("FROM")="Anonymous"
"RTN","XMJMSA",47,0)
 S XMINSTR("SHARE DATE")="3991231"
"RTN","XMJMSA",48,0)
 S XMINSTR("SHARE BSKT")="SUGGESTION BOX"
"RTN","XMJMSA",49,0)
 D CRE8XMZ^XMXSEND(XMSUBJ,.XMZ,1) Q:XMZ<1
"RTN","XMJMSA",50,0)
 W "  Sending [",XMZ,"]... "
"RTN","XMJMSA",51,0)
 D MOVEBODY^XMXSEND(XMZ,"^TMP(""XM"",$J)")
"RTN","XMJMSA",52,0)
 D ADDRNSND^XMXSEND(XMDUZ,XMZ,XMDUZ,.XMINSTR)
"RTN","XMJMSA",53,0)
 W !,"  Sent"
"RTN","XMJMSA",54,0)
 Q
"RTN","XMJMSA",55,0)
WARNING(XMABORT) ;
"RTN","XMJMSA",56,0)
 W @IOF
"RTN","XMJMSA",57,0)
 W !,$$CJ^XLFSTR("* * * * *  ATTENTION  * * * * *",79)
"RTN","XMJMSA",58,0)
 W !!,$$CJ^XLFSTR("Anonymous messages may or may not be totally anonymous.",79)
"RTN","XMJMSA",59,0)
 W !!,$$CJ^XLFSTR("Please check with your local IRM",79)
"RTN","XMJMSA",60,0)
 W !,$$CJ^XLFSTR("to find out if your facility has methods in place to identify you.",79),!!
"RTN","XMJMSA",61,0)
 D PAGE^XMXUTIL(.XMABORT)
"RTN","XMJMSA",62,0)
 Q
"RTN","XMJMSO")
0^30^B50389949
"RTN","XMJMSO",1,0)
XMJMSO ;ISC-SF/GMB-Options at 'send' transmit prompt ;04/29/99  12:29
"RTN","XMJMSO",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMSO",3,0)
 ; Replaces ^XMA22 (ISC-WASH/CAP/THM)
"RTN","XMJMSO",4,0)
SENDMSG(XMDUZ,XMZ,XMSUBJ,XMINSTR,XMRESTR,XMABORT) ;
"RTN","XMJMSO",5,0)
 N XMFINISH
"RTN","XMJMSO",6,0)
 S XMFINISH=0
"RTN","XMJMSO",7,0)
 F  D  Q:XMFINISH!XMABORT
"RTN","XMJMSO",8,0)
 . N DIR,Y,X
"RTN","XMJMSO",9,0)
 . D SENDSET(.XMINSTR,.DIR)
"RTN","XMJMSO",10,0)
 . W !
"RTN","XMJMSO",11,0)
 . D ^DIR I $D(DIRUT) S XMABORT=$S($D(DTOUT):DTIME,1:1) Q
"RTN","XMJMSO",12,0)
 . D @Y
"RTN","XMJMSO",13,0)
 Q
"RTN","XMJMSO",14,0)
SENDSET(XMINSTR,DIR) ;
"RTN","XMJMSO",15,0)
 S DIR(0)=""
"RTN","XMJMSO",16,0)
 S DIR(0)=DIR(0)_";B:Backup to review message"
"RTN","XMJMSO",17,0)
 I $G(XMINSTR("FLAGS"))["C" S DIR(0)=DIR(0)_";C:UnConfidential (surrogate may read)"
"RTN","XMJMSO",18,0)
 E                          S DIR(0)=DIR(0)_";C:Confidential (surrogate can't read)"
"RTN","XMJMSO",19,0)
 I $D(XMINSTR("RCPT BSKT")) S DIR(0)=DIR(0)_";D:Delivery basket remove"
"RTN","XMJMSO",20,0)
 E                          S DIR(0)=DIR(0)_";D:Delivery basket set"
"RTN","XMJMSO",21,0)
 S DIR(0)=DIR(0)_";ER:Edit Recipients"
"RTN","XMJMSO",22,0)
 S DIR(0)=DIR(0)_";ES:Edit Subject"
"RTN","XMJMSO",23,0)
 S DIR(0)=DIR(0)_";ET:Edit Text"
"RTN","XMJMSO",24,0)
 I $G(XMINSTR("FLAGS"))["I" S DIR(0)=DIR(0)_";I:Un Information only (recipients may respond)"
"RTN","XMJMSO",25,0)
 E                          S DIR(0)=DIR(0)_";I:Information only (recipients may not respond)"
"RTN","XMJMSO",26,0)
 S DIR(0)=DIR(0)_";L:Transmit later"
"RTN","XMJMSO",27,0)
 I $G(XMINSTR("FLAGS"))["P" S DIR(0)=DIR(0)_";P:Normal delivery"
"RTN","XMJMSO",28,0)
 E                          S DIR(0)=DIR(0)_";P:Priority delivery"
"RTN","XMJMSO",29,0)
 I $G(XMINSTR("FLAGS"))["R" S DIR(0)=DIR(0)_";R:No Confirm receipt"
"RTN","XMJMSO",30,0)
 E                          S DIR(0)=DIR(0)_";R:Confirm receipt"
"RTN","XMJMSO",31,0)
 I '$G(XMPAKMAN) D
"RTN","XMJMSO",32,0)
 . I $D(XMINSTR("SCR KEY")) S DIR(0)=DIR(0)_";S:Unscramble text"
"RTN","XMJMSO",33,0)
 . E                        S DIR(0)=DIR(0)_";S:Scramble text with password"
"RTN","XMJMSO",34,0)
 S DIR(0)=DIR(0)_";T:Transmit now"
"RTN","XMJMSO",35,0)
 I $D(XMINSTR("VAPOR"))     S DIR(0)=DIR(0)_";V:Vaporize date remove"
"RTN","XMJMSO",36,0)
 E                          S DIR(0)=DIR(0)_";V:Vaporize date set"
"RTN","XMJMSO",37,0)
 I $G(XMINSTR("FLAGS"))["X" S DIR(0)=DIR(0)_";X:UnClose message (forward allowed)"
"RTN","XMJMSO",38,0)
 E                          S DIR(0)=DIR(0)_";X:Closed message (no forward allowed)"
"RTN","XMJMSO",39,0)
 S DIR("A")="Select Message option:  "
"RTN","XMJMSO",40,0)
 S DIR("B")="Transmit now"
"RTN","XMJMSO",41,0)
 S DIR("??")="XM-U-MO-SEND"
"RTN","XMJMSO",42,0)
 S DIR(0)="SAM^"_$E(DIR(0),2,999)
"RTN","XMJMSO",43,0)
 Q
"RTN","XMJMSO",44,0)
ER ; Additional Recipients
"RTN","XMJMSO",45,0)
 D TOWHOM^XMJMT(XMDUZ,"Send",.XMINSTR,.XMRESTR,.XMABORT)
"RTN","XMJMSO",46,0)
 Q
"RTN","XMJMSO",47,0)
B ; Backup to review message
"RTN","XMJMSO",48,0)
 D BACKUP^XMJMP(XMDUZ,0,"",XMZ)
"RTN","XMJMSO",49,0)
 ; OR D PRINTIT^XMJMP1(....)
"RTN","XMJMSO",50,0)
 Q
"RTN","XMJMSO",51,0)
FLAGTOGL(XMINSTR,XMFLAG,XMTYPE) ; Flag Toggle
"RTN","XMJMSO",52,0)
 I $G(XMINSTR("FLAGS"))[XMFLAG D
"RTN","XMJMSO",53,0)
 . S XMINSTR("FLAGS")=$TR(XMINSTR("FLAGS"),XMFLAG)
"RTN","XMJMSO",54,0)
 . W !,"'",XMTYPE,"' flag removed"
"RTN","XMJMSO",55,0)
 E  D
"RTN","XMJMSO",56,0)
 . S XMINSTR("FLAGS")=$G(XMINSTR("FLAGS"))_XMFLAG
"RTN","XMJMSO",57,0)
 . W !,"Message flagged '",XMTYPE,"'"
"RTN","XMJMSO",58,0)
 Q
"RTN","XMJMSO",59,0)
C ; Confidential msg
"RTN","XMJMSO",60,0)
 I $D(^TMP("XMY",$J,.6)) D  Q
"RTN","XMJMSO",61,0)
 . W !,*7,"Messages addressed to SHARED,MAIL may not be confidential."
"RTN","XMJMSO",62,0)
 D FLAGTOGL(.XMINSTR,"C","Confidential")
"RTN","XMJMSO",63,0)
 Q
"RTN","XMJMSO",64,0)
D ; Deliver to recipient basket
"RTN","XMJMSO",65,0)
 I $D(XMINSTR("RCPT BSKT")) D  Q
"RTN","XMJMSO",66,0)
 . K XMINSTR("RCPT BSKT")
"RTN","XMJMSO",67,0)
 . W !,"Delivery basket removed."
"RTN","XMJMSO",68,0)
 W !!,"The delivery basket is the basket to which this message should be delivered"
"RTN","XMJMSO",69,0)
 W !,"for all recipients (even future ones, should the message be forwarded)."
"RTN","XMJMSO",70,0)
 W !,"Any message filters, which the recipient might have, are ignored."
"RTN","XMJMSO",71,0)
 W !,"If the basket does not exist, it will be created."
"RTN","XMJMSO",72,0)
 W !!,"Note: The recipients must have chosen to allow delivery baskets by setting"
"RTN","XMJMSO",73,0)
 W !,"ACCEPT DELIVERY BASKET? under 'Personal Preferences|Delivery Basket Edit'"
"RTN","XMJMSO",74,0)
 W !,"to one of the following:"
"RTN","XMJMSO",75,0)
 W !," YES    - If basket doesn't exist, create it, and deliver the message to it."
"RTN","XMJMSO",76,0)
 W !," EXIST  - If the basket already exists, then deliver the message to it."
"RTN","XMJMSO",77,0)
 W !,"          Else, just deliver the message as usual."
"RTN","XMJMSO",78,0)
 W !," SELECT - If the basket already exists AND accepts such messages,"
"RTN","XMJMSO",79,0)
 W !,"          then deliver the message to it."
"RTN","XMJMSO",80,0)
 W !,"          Else, just deliver the message as usual."
"RTN","XMJMSO",81,0)
 W !,"If the recipient has not set this field or has set it to NO, then"
"RTN","XMJMSO",82,0)
 W !,"the message would be delivered as usual."
"RTN","XMJMSO",83,0)
 W !
"RTN","XMJMSO",84,0)
 N XMDIC,XMK,XMKN
"RTN","XMJMSO",85,0)
 S XMDIC("B")="@"
"RTN","XMJMSO",86,0)
 S XMDIC("S")="I Y>1"
"RTN","XMJMSO",87,0)
 D SELBSKT^XMJBU(XMDUZ,"Select delivery basket: ","L",.XMDIC,.XMK,.XMKN)
"RTN","XMJMSO",88,0)
 Q:XMK=U
"RTN","XMJMSO",89,0)
 S XMINSTR("RCPT BSKT")=XMKN
"RTN","XMJMSO",90,0)
 Q
"RTN","XMJMSO",91,0)
ET ; Edit msg
"RTN","XMJMSO",92,0)
 I $G(XMPAKMAN) Q:$$NOPAKEDT
"RTN","XMJMSO",93,0)
 D BODY^XMJMS(XMDUZ,XMZ,XMSUBJ,.XMRESTR,.XMABORT)
"RTN","XMJMSO",94,0)
 Q
"RTN","XMJMSO",95,0)
NOPAKEDT() ; Function returns 0 if OK to edit; 1, if not OK.
"RTN","XMJMSO",96,0)
 I $D(XMSECURE) W !,"You may not edit a secure PackMan message." Q 1
"RTN","XMJMSO",97,0)
 N DIR,X,Y,DIRUT
"RTN","XMJMSO",98,0)
 W @IOF
"RTN","XMJMSO",99,0)
 W !,"                    W A R N I N G"
"RTN","XMJMSO",100,0)
 W !!,"  You are about to edit what appears to be a PackMan message."
"RTN","XMJMSO",101,0)
 W !,"  Please note the following:"
"RTN","XMJMSO",102,0)
 W !!,"  1. If you edit this message you may compromise its integrity."
"RTN","XMJMSO",103,0)
 W !,"  2. If you must edit it,"
"RTN","XMJMSO",104,0)
 W !,"     - Do not edit the code."
"RTN","XMJMSO",105,0)
 W !,"     - Confine your editing to the text (the lines between $TXT and $ENDTXT)."
"RTN","XMJMSO",106,0)
 W !,"     - You may insert lines in the text."
"RTN","XMJMSO",107,0)
 W !,"     - Do not begin any line with a '$' (dollar sign)."
"RTN","XMJMSO",108,0)
 W !,"     - Be careful!",!
"RTN","XMJMSO",109,0)
 S DIR(0)="Y"
"RTN","XMJMSO",110,0)
 S DIR("A")="Are you sure you want to edit this message"
"RTN","XMJMSO",111,0)
 S DIR("B")="NO"
"RTN","XMJMSO",112,0)
 D ^DIR
"RTN","XMJMSO",113,0)
 Q 'Y
"RTN","XMJMSO",114,0)
I ; Information only msg
"RTN","XMJMSO",115,0)
 D FLAGTOGL(.XMINSTR,"I","Information only")
"RTN","XMJMSO",116,0)
 Q
"RTN","XMJMSO",117,0)
ES ; Edit Subject
"RTN","XMJMSO",118,0)
 N XMOLDSUB,XMABORT
"RTN","XMJMSO",119,0)
 S XMOLDSUB=XMSUBJ,XMABORT=0
"RTN","XMJMSO",120,0)
 D SUBJ^XMJMS(.XMSUBJ,.XMABORT) Q:XMABORT
"RTN","XMJMSO",121,0)
 Q:XMSUBJ=XMOLDSUB
"RTN","XMJMSO",122,0)
 N XMFDA
"RTN","XMJMSO",123,0)
 S XMFDA(3.9,XMZ_",",.01)=XMSUBJ
"RTN","XMJMSO",124,0)
 D FILE^DIE("","XMFDA")
"RTN","XMJMSO",125,0)
 Q
"RTN","XMJMSO",126,0)
L ; Transmit Later
"RTN","XMJMSO",127,0)
 N DIR,X,Y,XMWHEN,ZTRTN,ZTDTH,ZTDESC,ZTIO,ZTSAVE,ZTSK,XMROOT,I
"RTN","XMJMSO",128,0)
 S DIR(0)="D^NOW:"_$$SCH^XLFDT("12M",DT)_":ETX"
"RTN","XMJMSO",129,0)
 S DIR("A")="Enter Date@time at which to send this message"
"RTN","XMJMSO",130,0)
 D ^DIR Q:$D(DIRUT)
"RTN","XMJMSO",131,0)
 S XMWHEN=Y
"RTN","XMJMSO",132,0)
 W !,"  Latering ..."  ;[",XMZ,"]... "
"RTN","XMJMSO",133,0)
 S ZTIO=""
"RTN","XMJMSO",134,0)
 S ZTRTN="LATER^XMXSEND"
"RTN","XMJMSO",135,0)
 S ZTDTH=$$FMTH^XLFDT(XMWHEN)
"RTN","XMJMSO",136,0)
 S ZTDESC="MailMan: Send Message Later"
"RTN","XMJMSO",137,0)
 S XMROOT=$$GET1^DIQ(3.9,XMZ_",",3,"","^TMP(""XM"",$J,""BODY"")")
"RTN","XMJMSO",138,0)
 F I="DUZ","XMDUZ","XMSUBJ","^TMP(""XMY0"",$J,","^TMP(""XM"",$J,""BODY"",","XMINSTR(" S ZTSAVE(I)=""
"RTN","XMJMSO",139,0)
 D ^%ZTLOAD
"RTN","XMJMSO",140,0)
 D HOME^%ZIS
"RTN","XMJMSO",141,0)
 I $D(ZTSK) D
"RTN","XMJMSO",142,0)
 . S XMFINISH=1
"RTN","XMJMSO",143,0)
 . W " Latered (Task #",ZTSK,")"
"RTN","XMJMSO",144,0)
 . D KILLMSG^XMXUTIL(XMZ)
"RTN","XMJMSO",145,0)
 . D CLEANUP^XMXADDR
"RTN","XMJMSO",146,0)
 E  D
"RTN","XMJMSO",147,0)
 . W !,*7,"Latering was not successful."
"RTN","XMJMSO",148,0)
 . W !,"Try again or transmit now."
"RTN","XMJMSO",149,0)
 K ^TMP("XM",$J,"BODY")
"RTN","XMJMSO",150,0)
 Q
"RTN","XMJMSO",151,0)
P ; Priority msg
"RTN","XMJMSO",152,0)
 D FLAGTOGL(.XMINSTR,"P","Priority")
"RTN","XMJMSO",153,0)
 Q
"RTN","XMJMSO",154,0)
R ; Confirm receipt of msg
"RTN","XMJMSO",155,0)
 D FLAGTOGL(.XMINSTR,"R","Confirm Receipt Requested")
"RTN","XMJMSO",156,0)
 Q
"RTN","XMJMSO",157,0)
S ; Scramble text
"RTN","XMJMSO",158,0)
 I $D(XMINSTR("SCR KEY")) D  Q
"RTN","XMJMSO",159,0)
 . K XMINSTR("SCR KEY"),XMINSTR("SCR HINT")
"RTN","XMJMSO",160,0)
 . W !,"Scramble removed"
"RTN","XMJMSO",161,0)
 N XMKEY,XMHINT,XMABORT
"RTN","XMJMSO",162,0)
 S XMABORT=0
"RTN","XMJMSO",163,0)
 D CRE8KEY^XMJMCODE(.XMKEY,.XMHINT,.XMABORT)
"RTN","XMJMSO",164,0)
 I XMABORT W !,"Scramble aborted." Q
"RTN","XMJMSO",165,0)
 S XMINSTR("SCR KEY")=XMKEY
"RTN","XMJMSO",166,0)
 S XMINSTR("SCR HINT")=XMHINT
"RTN","XMJMSO",167,0)
 Q
"RTN","XMJMSO",168,0)
T ; Transmit now
"RTN","XMJMSO",169,0)
 S XMFINISH=1
"RTN","XMJMSO",170,0)
 W "  Sending [",XMZ,"]... "
"RTN","XMJMSO",171,0)
 D MOVEPART^XMXSEND(XMDUZ,XMZ,.XMINSTR)
"RTN","XMJMSO",172,0)
 D SEND^XMKP(XMDUZ,XMZ,.XMINSTR)
"RTN","XMJMSO",173,0)
 D CHECK^XMKPL
"RTN","XMJMSO",174,0)
 W !,"  Sent"
"RTN","XMJMSO",175,0)
 Q
"RTN","XMJMSO",176,0)
V ; Vaporize date
"RTN","XMJMSO",177,0)
 I $G(XMINSTR("VAPOR")) D  Q
"RTN","XMJMSO",178,0)
 . K XMINSTR("VAPOR")
"RTN","XMJMSO",179,0)
 . W !,"Vaporize Date removed"
"RTN","XMJMSO",180,0)
 N DIR,X,Y,DIRUT
"RTN","XMJMSO",181,0)
 S DIR(0)="3.9,1.6"
"RTN","XMJMSO",182,0)
 S DIR("A")="Enter Vaporize Date"
"RTN","XMJMSO",183,0)
 S DIR("B")=$$MMDT^XMXUTIL1($$FMADD^XLFDT(DT,30))
"RTN","XMJMSO",184,0)
 D ^DIR Q:$D(DIRUT)
"RTN","XMJMSO",185,0)
 S XMINSTR("VAPOR")=Y
"RTN","XMJMSO",186,0)
 Q
"RTN","XMJMSO",187,0)
X ; Closed msg
"RTN","XMJMSO",188,0)
 I $D(^TMP("XMY",$J,.6)) D  Q
"RTN","XMJMSO",189,0)
 . W !,*7,"Messages addressed to SHARED,MAIL may not be closed."
"RTN","XMJMSO",190,0)
 D FLAGTOGL(.XMINSTR,"X","Closed")
"RTN","XMJMSO",191,0)
 Q
"RTN","XMJMT")
0^31^B29049619
"RTN","XMJMT",1,0)
XMJMT ;ISC-SF/GMB-Interactive Send to whom ;06/14/99  12:54
"RTN","XMJMT",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMJMT",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMJMT",4,0)
 ; R     XMHELPLNK - Get help on remote addresses (mail link)
"RTN","XMJMT",5,0)
TOWHOM(XMDUZ,XMTYPE,XMINSTR,XMRESTR,XMABORT) ;
"RTN","XMJMT",6,0)
 N DIR,Y,XMTO,I
"RTN","XMJMT",7,0)
 S XMTO="?"
"RTN","XMJMT",8,0)
 F  D  Q:XMTO=""!XMABORT
"RTN","XMJMT",9,0)
 . I $D(^TMP("XMY0",$J)) D
"RTN","XMJMT",10,0)
 . . S DIR("A")="And "_XMTYPE_" to"
"RTN","XMJMT",11,0)
 . . K DIR("B")
"RTN","XMJMT",12,0)
 . . S DIR(0)="FO^1:100"
"RTN","XMJMT",13,0)
 . E  D
"RTN","XMJMT",14,0)
 . . S DIR("A")=XMTYPE_" mail to"
"RTN","XMJMT",15,0)
 . . I XMTYPE="Send" S DIR("B")=$G(XMINSTR("TO PROMPT"),XMV("NAME"))
"RTN","XMJMT",16,0)
 . . E  D
"RTN","XMJMT",17,0)
 . . . I $G(XMINSTR("TO PROMPT")) S DIR("B")=XMINSTR("TO PROMPT")
"RTN","XMJMT",18,0)
 . . . E  K DIR("B")
"RTN","XMJMT",19,0)
 . . S DIR(0)="F^1:100"
"RTN","XMJMT",20,0)
 . S I=1,DIR("?",I)="Enter the name(s) of the recipient(s) of this message"
"RTN","XMJMT",21,0)
 . S I=I+1,DIR("?",I)="in any of the following formats:"
"RTN","XMJMT",22,0)
 . S I=I+1,DIR("?",I)=""
"RTN","XMJMT",23,0)
 . S I=I+1,DIR("?",I)="Lastname,first              for a user at this site"
"RTN","XMJMT",24,0)
 . S:'$D(XMRESTR("NONET")) I=I+1,DIR("?",I)="Lastname,first@REMOTE-SITE  for a user at another site"
"RTN","XMJMT",25,0)
 . S I=I+1,DIR("?",I)="   (note: DUZ may be used instead of Lastname,first)"
"RTN","XMJMT",26,0)
 . S I=I+1,DIR("?",I)="G.<group-name>              for a group of users"
"RTN","XMJMT",27,0)
 . S I=I+1,DIR("?",I)="D.<device-name>             for a device"
"RTN","XMJMT",28,0)
 . S:$D(^XUSEC("XMSTAR",DUZ)) I=I+1,DIR("?",9)="*                           to broadcast to all users"
"RTN","XMJMT",29,0)
 . S I=I+1,DIR("?",I)=""
"RTN","XMJMT",30,0)
 . S I=I+1,DIR("?",I)="Prefix any user address with 'I:' to send Information only."
"RTN","XMJMT",31,0)
 . S I=I+1,DIR("?",I)="                             'C:' to send Carbon copy."
"RTN","XMJMT",32,0)
 . S I=I+1,DIR("?",I)="                             'L:' to send Later."
"RTN","XMJMT",33,0)
 . S I=I+1,DIR("?",I)="                             '-'  to delete it."
"RTN","XMJMT",34,0)
 . S I=I+1,DIR("?",I)="Enter:"
"RTN","XMJMT",35,0)
 . S I=I+1,DIR("?",I)="G.?                         for a list of groups"
"RTN","XMJMT",36,0)
 . S I=I+1,DIR("?",I)="D.?                         for a list of devices"
"RTN","XMJMT",37,0)
 . S I=I+1,DIR("?",I)=""
"RTN","XMJMT",38,0)
 . S DIR("?")="Enter '??' for detailed help."
"RTN","XMJMT",39,0)
 . S DIR("??")="^D QQ^XMJMT"
"RTN","XMJMT",40,0)
 . D ^DIR I $D(DTOUT) S XMABORT=DTIME Q
"RTN","XMJMT",41,0)
 . I $D(DUOUT) D  Q
"RTN","XMJMT",42,0)
 . . I XMTYPE="Forward" S XMABORT=1 Q
"RTN","XMJMT",43,0)
 . . N DIR,DIRUT,Y
"RTN","XMJMT",44,0)
 . . S DIR("A")="Shall we forget the whole thing"
"RTN","XMJMT",45,0)
 . . S DIR("B")="No"
"RTN","XMJMT",46,0)
 . . S DIR(0)="Y"
"RTN","XMJMT",47,0)
 . . S DIR("?",1)="Enter YES to abort this message."
"RTN","XMJMT",48,0)
 . . S DIR("?")="Enter NO to continue sending it."
"RTN","XMJMT",49,0)
 . . D ^DIR
"RTN","XMJMT",50,0)
 . . I Y=1!$D(DIRUT) S XMABORT=1
"RTN","XMJMT",51,0)
 . S XMTO=Y Q:XMTO=""
"RTN","XMJMT",52,0)
 . I $G(XMRESTR("NOFPG")),$E(XMTO,1,2)="G." D  Q
"RTN","XMJMT",53,0)
 . . ; NOFPG =1 This is priority mail and the user may not forward
"RTN","XMJMT",54,0)
 . . ; it to groups because s/he is not the originator and does not
"RTN","XMJMT",55,0)
 . . ; hold the proper security key.
"RTN","XMJMT",56,0)
 . . W !,*7,"Only sender or holder of XM GROUP PRIORITY key",!,"may forward priority messages to Mail Groups!"
"RTN","XMJMT",57,0)
 . I $G(XMRESTR("NONET")),XMTO["@" D  Q
"RTN","XMJMT",58,0)
 . . W !,*7,"Messages longer than ",XMRESTR("NONET")," may not be sent across the network."
"RTN","XMJMT",59,0)
 . I XMTO=XMV("NAME"),$G(DIR("B"))=XMV("NAME") S XMTO="`"_XMDUZ ; to avoid ambiguity in case 2 users have the same name.
"RTN","XMJMT",60,0)
 . D ADDR^XMXADDR(XMDUZ,XMTO,.XMINSTR,.XMRESTR)
"RTN","XMJMT",61,0)
 Q
"RTN","XMJMT",62,0)
QQ ; "??" help
"RTN","XMJMT",63,0)
 N DIR,Y
"RTN","XMJMT",64,0)
 S DIR("A")="Enter the kind of help you'd like"
"RTN","XMJMT",65,0)
 S DIR(0)="SO^U:User information"
"RTN","XMJMT",66,0)
 S DIR(0)=DIR(0)_";G:Mail Group information"
"RTN","XMJMT",67,0)
 S DIR(0)=DIR(0)_";D:Domain information"
"RTN","XMJMT",68,0)
 S:$O(^XMD(4.2997,0)) DIR(0)=DIR(0)_";R:Remote user information"
"RTN","XMJMT",69,0)
 S:$D(^TMP("XMY0",$J)) DIR(0)=DIR(0)_";S:Show current recipients of this message"
"RTN","XMJMT",70,0)
 S DIR(0)=DIR(0)_";M:More help"
"RTN","XMJMT",71,0)
 F  D ^DIR Q:$D(DIRUT)  D @Y
"RTN","XMJMT",72,0)
 Q
"RTN","XMJMT",73,0)
S ; Show Current Recipients
"RTN","XMJMT",74,0)
 N XMTO,XMABORT,DIR,Y
"RTN","XMJMT",75,0)
 I '$D(^TMP("XMY0",$J)) W !,"There aren't any recipients so far." Q
"RTN","XMJMT",76,0)
 W @IOF,"Current recipients are: "
"RTN","XMJMT",77,0)
 S XMTO="",XMABORT=0
"RTN","XMJMT",78,0)
 F  S XMTO=$O(^TMP("XMY0",$J,XMTO)) Q:XMTO=""  D  Q:XMABORT
"RTN","XMJMT",79,0)
 . D:$Y+3>IOSL PAGE(.XMABORT)
"RTN","XMJMT",80,0)
 . W !,?3,$S($D(^TMP("XMY0",$J,XMTO,1)):^(1)_":",1:""),XMTO
"RTN","XMJMT",81,0)
 . W:$D(^TMP("XMY0",$J,XMTO,"L")) ?40,"  Deliver: ",$$MMDT^XMXUTIL1(^("L"))
"RTN","XMJMT",82,0)
 Q:XMABORT
"RTN","XMJMT",83,0)
 Q:'$D(^TMP("XMY",$J))
"RTN","XMJMT",84,0)
 S DIR(0)="Y",DIR("A")="Like more detail",DIR("B")="YES" D ^DIR
"RTN","XMJMT",85,0)
 Q:Y'=1
"RTN","XMJMT",86,0)
 ;Expanded Recipient List
"RTN","XMJMT",87,0)
 S XMTO=""
"RTN","XMJMT",88,0)
 F  S XMTO=$O(^TMP("XMY",$J,XMTO)) Q:XMTO=""  D  Q:XMABORT
"RTN","XMJMT",89,0)
 . D:$Y+3>IOSL PAGE(.XMABORT)
"RTN","XMJMT",90,0)
 . W !,?3,$S($D(^TMP("XMY",$J,XMTO,1)):^(1)_":",1:""),$$NAME^XMXUTIL(XMTO)
"RTN","XMJMT",91,0)
 D PAGE(.XMABORT)
"RTN","XMJMT",92,0)
 Q
"RTN","XMJMT",93,0)
PAGE(XMABORT) ;
"RTN","XMJMT",94,0)
 D PAGE^XMXUTIL(.XMABORT) Q:XMABORT
"RTN","XMJMT",95,0)
 W @IOF
"RTN","XMJMT",96,0)
 Q
"RTN","XMJMT",97,0)
U ; User Info
"RTN","XMJMT",98,0)
 D HELP^XMHIU
"RTN","XMJMT",99,0)
 Q
"RTN","XMJMT",100,0)
G ; Group Info
"RTN","XMJMT",101,0)
 N DIR
"RTN","XMJMT",102,0)
 D HELP^XMHIG
"RTN","XMJMT",103,0)
 Q
"RTN","XMJMT",104,0)
D ; Domain Info (Replaces QQ2^XMA50)
"RTN","XMJMT",105,0)
 N DIC,Y,XMSTATE,XMREC
"RTN","XMJMT",106,0)
 S DIC="^DIC(4.2,",DIC(0)="AEQMZ"
"RTN","XMJMT",107,0)
 F  W ! D ^DIC Q:Y<0  D
"RTN","XMJMT",108,0)
 . S XMREC=Y(0)
"RTN","XMJMT",109,0)
 . W:$L($P(XMREC,U,14)) !,"  ROUTING INDICATOR: ",$P(XMREC,U,14)
"RTN","XMJMT",110,0)
 . I $D(^XUSEC("XMMGR",DUZ)) D
"RTN","XMJMT",111,0)
 . . W:$L($P(XMREC,U,12)) !,"  MailMan HOST number: ",$P(XMREC,U,12)
"RTN","XMJMT",112,0)
 . . W:$L($P(XMREC,U,11)) !,"  Security Key: "_$P(XMREC,U,11)
"RTN","XMJMT",113,0)
 . W:$P(XMREC,U,3) !,"  Relay Domain: ",$P(^DIC(4.2,$P(Y,U,3),0),U,1)
"RTN","XMJMT",114,0)
 . S XMSTATE=$P(XMREC,U,2)
"RTN","XMJMT",115,0)
 . W !,"  MESSAGES ",$S(XMSTATE["C":"Cannot be sent as this domain is *** C L O S E D ***",XMSTATE'["S":"are QUEUED for later transmission",1:"are SENT immediately")
"RTN","XMJMT",116,0)
 Q
"RTN","XMJMT",117,0)
R ; Remote User Info (Replaces QQ3A,QQ3B^XMA5)
"RTN","XMJMT",118,0)
 N DIC,Y,DR,DA
"RTN","XMJMT",119,0)
 S DIC="^XMD(4.2997,",DIC(0)="AEFMQ"
"RTN","XMJMT",120,0)
 S DIC("A")="Enter LASTNAME, Mail Code, or part of LOCATION (one word only): "
"RTN","XMJMT",121,0)
 F  W ! D ^DIC Q:Y<0  D
"RTN","XMJMT",122,0)
 . S DA=+Y,DR=0 D EN^DIQ
"RTN","XMJMT",123,0)
 Q
"RTN","XMJMT",124,0)
M ;
"RTN","XMJMT",125,0)
 N XQH,DIR,X,Y
"RTN","XMJMT",126,0)
 S XQH="XM-U-A-ADDRESS"
"RTN","XMJMT",127,0)
 D EN^XQH
"RTN","XMJMT",128,0)
 Q
"RTN","XMKP")
0^32^B75448513
"RTN","XMKP",1,0)
XMKP ;SF/GMB- Address and Post msg ;06/14/99  16:38
"RTN","XMKP",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMKP",3,0)
 ; Replaces ENT1^XMAD1,ENT^XMAD1,FINAL^XMAD1X (ISC-WASH/CAP)
"RTN","XMKP",4,0)
SEND(XMDUZ,XMZ,XMINSTR) ;
"RTN","XMKP",5,0)
 ; XMINSTR("SHARE DATE")  Delete date for mail addressed to SHARED,MAIL
"RTN","XMKP",6,0)
 ; XMINSTR("SHARE BSKT")  Basket for mail addressed to SHARED,MAIL
"RTN","XMKP",7,0)
 ; XMINSTR("SELF BSKT")   Basket to deliver to if recipient is the sender
"RTN","XMKP",8,0)
 ;                        (="" otherwise)
"RTN","XMKP",9,0)
 N XMTOCNT,XMPRI,XMINST
"RTN","XMKP",10,0)
 S XMPRI=($G(XMINSTR("FLAGS"))["P")
"RTN","XMKP",11,0)
 D SADDRTO(XMDUZ,XMZ)          ; Populate ADDRESSED TO multiple
"RTN","XMKP",12,0)
 D SRECIP(XMDUZ,XMZ,XMPRI,.XMTOCNT)  ; Populate RECIPIENT multiple
"RTN","XMKP",13,0)
 I XMTOCNT!$$BRODCAST D SPOST(XMDUZ,XMZ,XMTOCNT,.XMINSTR)
"RTN","XMKP",14,0)
 S XMINST=""
"RTN","XMKP",15,0)
 F  S XMINST=$O(^XMB(3.9,XMZ,1,"AQUEUE",XMINST)) Q:'XMINST  D
"RTN","XMKP",16,0)
 . D REMOTE^XMKPO(XMZ,XMINST)
"RTN","XMKP",17,0)
 D:$D(^XMB(3.9,XMZ,1,"AFAX")) FAX^XMFAX(XMZ)
"RTN","XMKP",18,0)
 Q
"RTN","XMKP",19,0)
SPOST(XMDUZ,XMZ,XMTOCNT,XMINSTR) ;
"RTN","XMKP",20,0)
 N XMTSTAMP,XMPREC
"RTN","XMKP",21,0)
 S XMTSTAMP=$$TSTAMP^XMXUTIL1
"RTN","XMKP",22,0)
 S XMPREC=XMTOCNT
"RTN","XMKP",23,0)
 S XMINSTR("SELF BSKT")=$G(XMINSTR("SELF BSKT"))
"RTN","XMKP",24,0)
 I $D(^TMP("XMY",$J,XMDUZ)) D
"RTN","XMKP",25,0)
 . S:XMINSTR("SELF BSKT")="" XMINSTR("SELF BSKT")=1
"RTN","XMKP",26,0)
 . S $P(XMPREC,U,2)=XMINSTR("SELF BSKT")
"RTN","XMKP",27,0)
 I $D(^TMP("XMY",$J,.6)) D
"RTN","XMKP",28,0)
 . S XMINSTR("SHARE BSKT")=$G(XMINSTR("SHARE BSKT"),1)
"RTN","XMKP",29,0)
 . S XMINSTR("SHARE DATE")=$G(XMINSTR("SHARE DATE"),$$FMADD^XLFDT(DT,30))
"RTN","XMKP",30,0)
 . S $P(XMPREC,U,3,4)=XMINSTR("SHARE BSKT")_U_XMINSTR("SHARE DATE")
"RTN","XMKP",31,0)
 I $$BRODCAST D
"RTN","XMKP",32,0)
 . S $P(XMPREC,U,1)=$P(^XMB(3.7,0),U,4)
"RTN","XMKP",33,0)
 . S $P(XMPREC,U,5)="*"
"RTN","XMKP",34,0)
 S ^XMBPOST("BOX",XMTSTAMP,"M",XMZ)=XMPREC
"RTN","XMKP",35,0)
 Q
"RTN","XMKP",36,0)
BRODCAST() ;
"RTN","XMKP",37,0)
 Q $D(^TMP("XMY",$J,"* (Broadcast to all local users)"))
"RTN","XMKP",38,0)
SRECIP(XMDUZ,XMZ,XMPRI,XMTOCNT) ; "Send" to recipients
"RTN","XMKP",39,0)
 N XMTO,XMFDA,XMIEN,XMIENS,XMPREFIX,XMNOW
"RTN","XMKP",40,0)
 ; Put addressees into RECIPIENT multiple
"RTN","XMKP",41,0)
 S XMTO="",XMTOCNT=0
"RTN","XMKP",42,0)
 F  S XMTO=$O(^TMP("XMY",$J,XMTO)) Q:XMTO=""  D
"RTN","XMKP",43,0)
 . K XMPREFIX,XMIEN
"RTN","XMKP",44,0)
 . D NEW(XMZ,XMPRI,XMTO,$G(^TMP("XMY",$J,XMTO,1)),.XMFDA,.XMIENS)            ; New recipient
"RTN","XMKP",45,0)
 . I $D(^TMP("XMY",$J,XMTO,"F")) D
"RTN","XMKP",46,0)
 . . S:'$D(XMNOW) XMNOW=$$MMDT^XMXUTIL1($P(^XMB(3.9,XMZ,0),U,3))
"RTN","XMKP",47,0)
 . . D RCPTFWD(XMTO,.XMFDA,XMIENS,XMNOW)
"RTN","XMKP",48,0)
 . I +XMTO=XMTO S XMTOCNT=XMTOCNT+1
"RTN","XMKP",49,0)
 . E  D STATUS(XMTO,.XMFDA,XMIENS,.XMPREFIX)  ; Transmission Status
"RTN","XMKP",50,0)
 . D UPDATE^DIE("","XMFDA","XMIEN")
"RTN","XMKP",51,0)
 . S XMIENS=XMIEN(1)_","_XMZ_","
"RTN","XMKP",52,0)
 . D:"^D^S^"[(U_$G(XMPREFIX)_U) OPOST(XMDUZ,XMZ,XMTO,XMIENS,XMPREFIX)
"RTN","XMKP",53,0)
 Q
"RTN","XMKP",54,0)
SADDRTO(XMDUZ,XMZ) ; Put addressees into ADDRESSED TO multiple
"RTN","XMKP",55,0)
 N XMTO
"RTN","XMKP",56,0)
 S XMTO=""
"RTN","XMKP",57,0)
 F  S XMTO=$O(^TMP("XMY0",$J,XMTO)) Q:XMTO=""  D ADDRTO(XMDUZ,XMZ,XMTO)
"RTN","XMKP",58,0)
 Q
"RTN","XMKP",59,0)
ADDRTO(XMDUZ,XMZ,XMTO) ;
"RTN","XMKP",60,0)
 N XMFDA,XMPREFIX,XMMULT
"RTN","XMKP",61,0)
 S XMPREFIX=$G(^TMP("XMY0",$J,XMTO,1))
"RTN","XMKP",62,0)
 I $D(^TMP("XMY0",$J,XMTO,"L")) D
"RTN","XMKP",63,0)
 . I XMTO=XMV("NAME") D  Q
"RTN","XMKP",64,0)
 . . D LTRADD^XMJMD(XMDUZ,XMZ,$G(^TMP("XMY0",$J,XMTO,"L")))
"RTN","XMKP",65,0)
 . . S XMMULT=3.911
"RTN","XMKP",66,0)
 . S XMMULT=3.914
"RTN","XMKP",67,0)
 . S XMFDA(3.914,"?+1,"_XMZ_",",2)=XMDUZ
"RTN","XMKP",68,0)
 . S XMFDA(3.914,"?+1,"_XMZ_",",3)=XMV("NAME")_$S(XMDUZ=DUZ:"",1:" (Surrogate: "_XMV("DUZ NAME")_")")
"RTN","XMKP",69,0)
 . S XMFDA(3.914,"?+1,"_XMZ_",",4)=^TMP("XMY0",$J,XMTO,"L")
"RTN","XMKP",70,0)
 E  S XMMULT=3.911
"RTN","XMKP",71,0)
 S XMFDA(XMMULT,"?+1,"_XMZ_",",.01)=XMTO
"RTN","XMKP",72,0)
 S:XMPREFIX'="" XMFDA(XMMULT,"?+1,"_XMZ_",",1)=XMPREFIX
"RTN","XMKP",73,0)
 D UPDATE^DIE("","XMFDA")
"RTN","XMKP",74,0)
 Q
"RTN","XMKP",75,0)
NEW(XMZ,XMPRI,XMTO,XMTYPE,XMFDA,XMIENS) ;
"RTN","XMKP",76,0)
 S XMIENS="+1,"_XMZ_","
"RTN","XMKP",77,0)
 S XMFDA(3.91,XMIENS,.01)=XMTO
"RTN","XMKP",78,0)
 ; If addressee is also the creator of the msg, then I: or C: does not
"RTN","XMKP",79,0)
 ; apply.
"RTN","XMKP",80,0)
 I $G(XMTYPE)'="" S XMFDA(3.91,XMIENS,6.5)=XMTYPE
"RTN","XMKP",81,0)
 I XMPRI,XMTO=+XMTO,$P($G(^XMB(3.7,XMTO,0)),U,11) S XMFDA(3.91,XMIENS,10)=$P(^(0),U,11)   ; Priority response flag
"RTN","XMKP",82,0)
 Q
"RTN","XMKP",83,0)
STATUS(XMTO,XMFDA,XMIENS,XMPREFIX) ;
"RTN","XMKP",84,0)
 I $E(XMTO,1,2)="F.",$P(^XMB(1,1,0),U,19),$D(^AKF("FAXR")),$E(XMTO,3,99)=$P($G(^AKF("FAXR",^TMP("XMY",$J,XMTO),0)),U) D  Q
"RTN","XMKP",85,0)
 . S XMFDA(3.91,XMIENS,5)="Awaiting Fax"
"RTN","XMKP",86,0)
 . S XMFDA(3.91,XMIENS,13)=^TMP("XMY",$J,XMTO)
"RTN","XMKP",87,0)
 I XMTO["@" D  Q
"RTN","XMKP",88,0)
 . S XMFDA(3.91,XMIENS,5)="Awaiting transmission."
"RTN","XMKP",89,0)
 . S XMFDA(3.91,XMIENS,6)=^TMP("XMY",$J,XMTO)  ; sets x-ref "AQUEUE"
"RTN","XMKP",90,0)
 I $E(XMTO,2,2)="." D
"RTN","XMKP",91,0)
 . S XMPREFIX=$E(XMTO,1,1)   ; We know it is upper case
"RTN","XMKP",92,0)
 . Q:"SDH"'[XMPREFIX
"RTN","XMKP",93,0)
 . S XMFDA(3.91,XMIENS,5)=$S(XMPREFIX="S":"Awaiting Server.",XMPREFIX="D":"Awaiting Device.",1:"Awaiting H.Device.")
"RTN","XMKP",94,0)
 Q
"RTN","XMKP",95,0)
OPOST(XMDUZ,XMZ,XMTO,XMIENS,XMPREFIX) ;
"RTN","XMKP",96,0)
 I XMPREFIX="S" D SERVER^XMKPO(XMZ,XMTO,XMIENS) Q
"RTN","XMKP",97,0)
 I XMPREFIX="D" D DEVICE^XMKPO(XMDUZ,XMZ,XMTO,XMIENS) Q
"RTN","XMKP",98,0)
 Q
"RTN","XMKP",99,0)
FWD(XMDUZ,XMZ,XMINSTR) ;
"RTN","XMKP",100,0)
 ; XMFWDTYP      fwding person recipient type:  I:, CC:
"RTN","XMKP",101,0)
 ; XMPRI         1=msg is priority msg; 0=not
"RTN","XMKP",102,0)
 ; XMINSTR("SHARE DATE")  Delete date for mail addressed to SHARED,MAIL
"RTN","XMKP",103,0)
 ; XMINSTR("SHARE BSKT")  Basket for mail addressed to SHARED,MAIL
"RTN","XMKP",104,0)
 ; XMINSTR("FWD BY")  String to replace standard 'Forwarded by'
"RTN","XMKP",105,0)
 ; XMTOLIST      Array of local recipients
"RTN","XMKP",106,0)
 ; XMTOCNT       Number of valid recipients
"RTN","XMKP",107,0)
 N XMTOLIST,XMPRI,XMFWDTYP,XMIEN,XMREMOTE,XMINST
"RTN","XMKP",108,0)
 S XMIEN=$O(^XMB(3.9,XMZ,1,"C",XMDUZ,0)) ; May have been fwd'd by a remote person
"RTN","XMKP",109,0)
 S XMFWDTYP=$S('XMIEN:"",1:$P($G(^XMB(3.9,XMZ,1,XMIEN,"T")),U))
"RTN","XMKP",110,0)
 S XMPRI=($P(^XMB(3.9,XMZ,0),U,7)["P")
"RTN","XMKP",111,0)
 D FADDRTO(XMDUZ,XMZ)         ; Populate ADDRESSED TO multiple
"RTN","XMKP",112,0)
 D FRECIP(XMDUZ,XMZ,.XMINSTR,XMFWDTYP,XMPRI,.XMTOLIST,.XMREMOTE)
"RTN","XMKP",113,0)
 D:XMTOLIST(1)'=""!$$BRODCAST FPOST(XMDUZ,XMZ,.XMTOLIST,.XMINSTR)
"RTN","XMKP",114,0)
 S XMINST=""
"RTN","XMKP",115,0)
 F  S XMINST=$O(XMREMOTE(XMINST)) Q:'XMINST  D
"RTN","XMKP",116,0)
 . D REMOTE^XMKPO(XMZ,XMINST)
"RTN","XMKP",117,0)
 D:$D(^XMB(3.9,XMZ,1,"AFAX")) FAX^XMFAX(XMZ)
"RTN","XMKP",118,0)
 Q
"RTN","XMKP",119,0)
FADDRTO(XMDUZ,XMZ) ; Put addressees into ADDRESSED TO multiple
"RTN","XMKP",120,0)
 N XMTO
"RTN","XMKP",121,0)
 S XMTO=""
"RTN","XMKP",122,0)
 F  S XMTO=$O(^TMP("XMY0",$J,XMTO)) Q:XMTO=""  D
"RTN","XMKP",123,0)
 . I '$$FIND1^DIC(3.911,","_XMZ_",","O",XMTO,"B") D  Q
"RTN","XMKP",124,0)
 . . D ADDRTO(XMDUZ,XMZ,XMTO)
"RTN","XMKP",125,0)
 . Q:'$D(^TMP("XMY0",$J,XMTO,"L"))
"RTN","XMKP",126,0)
 . I XMTO=XMV("NAME") D  Q
"RTN","XMKP",127,0)
 . . D LTRADD^XMJMD(XMDUZ,XMZ,$G(^TMP("XMY0",$J,XMTO,"L")))
"RTN","XMKP",128,0)
 . N XMFDA,XMIENS
"RTN","XMKP",129,0)
 . S XMIENS="?+1,"_XMZ_","
"RTN","XMKP",130,0)
 . S XMFDA(3.914,XMIENS,.01)=XMTO
"RTN","XMKP",131,0)
 . ; we ignore any 'prefix' because these addressees are already on the msg
"RTN","XMKP",132,0)
 . S XMFDA(3.914,XMIENS,2)=XMDUZ
"RTN","XMKP",133,0)
 . S XMFDA(3.914,XMIENS,3)=XMV("NAME")_$S(XMDUZ=DUZ:"",1:" (Surrogate: "_XMV("DUZ NAME")_")")
"RTN","XMKP",134,0)
 . S XMFDA(3.914,XMIENS,4)=^TMP("XMY0",$J,XMTO,"L")
"RTN","XMKP",135,0)
 . D UPDATE^DIE("","XMFDA")
"RTN","XMKP",136,0)
 Q
"RTN","XMKP",137,0)
FPOST(XMDUZ,XMZ,XMTOLIST,XMINSTR) ; For local delivery
"RTN","XMKP",138,0)
 N XMTSTAMP,XMTOCNT,I,XMUID,XMPREC
"RTN","XMKP",139,0)
 S XMTSTAMP=$$TSTAMP^XMXUTIL1
"RTN","XMKP",140,0)
 I $D(^TMP("XMY",$J,XMDUZ)) S XMINSTR("SELF BSKT")=$G(XMINSTR("SELF BSKT"),1)
"RTN","XMKP",141,0)
 E  K XMINSTR("SELF BSKT")
"RTN","XMKP",142,0)
 I $D(^TMP("XMY",$J,.6)) D
"RTN","XMKP",143,0)
 . S XMINSTR("SHARE BSKT")=$G(XMINSTR("SHARE BSKT"),1)
"RTN","XMKP",144,0)
 . S XMINSTR("SHARE DATE")=$G(XMINSTR("SHARE DATE"),$$FMADD^XLFDT(DT,30))
"RTN","XMKP",145,0)
 E  K XMINSTR("SHARE BSKT"),XMINSTR("SHARE DATE")
"RTN","XMKP",146,0)
 S XMUID=XMZ_U_$S(XMDUZ=.6:DUZ,1:XMDUZ)
"RTN","XMKP",147,0)
 S XMPREC=U_$G(XMINSTR("SELF BSKT"))_U_$G(XMINSTR("SHARE BSKT"))_U_$G(XMINSTR("SHARE DATE"))
"RTN","XMKP",148,0)
 I $$BRODCAST D
"RTN","XMKP",149,0)
 . S $P(XMPREC,U,1)=$P(^XMB(3.7,0),U,4)
"RTN","XMKP",150,0)
 . S $P(XMPREC,U,5)="*"
"RTN","XMKP",151,0)
 E  D
"RTN","XMKP",152,0)
 . S (I,XMTOCNT)=0
"RTN","XMKP",153,0)
 . F  S I=$O(XMTOLIST(I)) Q:I=""  D
"RTN","XMKP",154,0)
 . . S XMTOCNT=XMTOCNT+$L(XMTOLIST(I),U)-1
"RTN","XMKP",155,0)
 . . S ^XMBPOST("FWD",XMUID_U_XMTSTAMP,I)=$P(XMTOLIST(I),U,2,999)
"RTN","XMKP",156,0)
 . S $P(XMPREC,U,1)=XMTOCNT
"RTN","XMKP",157,0)
 S ^XMBPOST("BOX",XMTSTAMP,"M",XMUID)=XMPREC
"RTN","XMKP",158,0)
 Q
"RTN","XMKP",159,0)
FRECIP(XMDUZ,XMZ,XMINSTR,XMFWDTYP,XMPRI,XMTOLIST,XMREMOTE) ; "Forward" to recipients
"RTN","XMKP",160,0)
 ; XMFWDBY  Forwarded by:  name date time
"RTN","XMKP",161,0)
 N XMTO,XMX,XMIEN,XMFDA,XMIENS,XMPREFIX,XMFWDBY,XMNOW
"RTN","XMKP",162,0)
 S XMNOW=$$MMDT^XMXUTIL1($$NOW^XLFDT)
"RTN","XMKP",163,0)
 S XMFWDBY=$S($D(XMINSTR("FWD BY")):XMINSTR("FWD BY"),1:XMV("NAME")_$S(XMDUZ=DUZ:"",1:" (Surrogate: "_XMV("DUZ NAME")_")"))_" "_XMNOW
"RTN","XMKP",164,0)
 ; Put addressees into RECIPIENT multiple
"RTN","XMKP",165,0)
 S XMTO="",XMX=1,XMTOLIST(XMX)=""
"RTN","XMKP",166,0)
 F  S XMTO=$O(^TMP("XMY",$J,XMTO)) Q:XMTO=""  D
"RTN","XMKP",167,0)
 . K XMPREFIX
"RTN","XMKP",168,0)
 . I +XMTO=XMTO D
"RTN","XMKP",169,0)
 . . S XMIEN=$O(^XMB(3.9,XMZ,1,"C",XMTO,0))
"RTN","XMKP",170,0)
 . E  S XMIEN=$$FIND1^DIC(3.91,","_XMZ_",","O",XMTO,"C")
"RTN","XMKP",171,0)
 . I +XMIEN=0 D  ; New recipient
"RTN","XMKP",172,0)
 . . N XMTYPE
"RTN","XMKP",173,0)
 . . ; If you are an info only recipient, then so is anyone you fwd to.
"RTN","XMKP",174,0)
 . . S XMTYPE=$S(XMFWDTYP'="":XMFWDTYP,1:$G(^TMP("XMY",$J,XMTO,1)))
"RTN","XMKP",175,0)
 . . D NEW(XMZ,XMPRI,XMTO,XMTYPE,.XMFDA,.XMIENS)        ; New recipient
"RTN","XMKP",176,0)
 . E  D
"RTN","XMKP",177,0)
 . . S XMIENS=XMIEN_","_XMZ_","
"RTN","XMKP",178,0)
 . . S:$G(^XMB(3.9,XMZ,1,XMIEN,"D")) XMFDA(3.91,XMIENS,7)="@" ; Unterminate
"RTN","XMKP",179,0)
 . I +XMTO'=XMTO D
"RTN","XMKP",180,0)
 . . D STATUS(XMTO,.XMFDA,XMIENS,.XMPREFIX)  ; Transmission Status
"RTN","XMKP",181,0)
 . . S:$D(XMFDA(3.91,XMIENS,6)) XMREMOTE(XMFDA(3.91,XMIENS,6))=""
"RTN","XMKP",182,0)
 . I $D(^TMP("XMY",$J,XMTO,"F")) D
"RTN","XMKP",183,0)
 . . D RCPTFWD(XMTO,.XMFDA,XMIENS,XMNOW)
"RTN","XMKP",184,0)
 . E  D
"RTN","XMKP",185,0)
 . . S XMFDA(3.91,XMIENS,8)=XMFWDBY   ; fwd by name date time
"RTN","XMKP",186,0)
 . . I '$D(XMINSTR("FWD BY"))!$D(XMINSTR("FWD BY XMDUZ")) S XMFDA(3.91,XMIENS,8.01)=XMDUZ  ; fwd by duz
"RTN","XMKP",187,0)
 . I XMIEN D
"RTN","XMKP",188,0)
 . . D FILE^DIE("","XMFDA")
"RTN","XMKP",189,0)
 . E  D
"RTN","XMKP",190,0)
 . . K XMIEN
"RTN","XMKP",191,0)
 . . D UPDATE^DIE("","XMFDA","XMIEN")
"RTN","XMKP",192,0)
 . . S XMIENS=XMIEN(1)_","_XMZ_","
"RTN","XMKP",193,0)
 . D:"^D^S^"[(U_$G(XMPREFIX)_U) OPOST(XMDUZ,XMZ,XMTO,XMIENS,XMPREFIX)
"RTN","XMKP",194,0)
 . Q:+XMTO'=XMTO  ; Quit if addressee not local
"RTN","XMKP",195,0)
 . I $L(XMTOLIST(XMX))+$L(XMTO)>244 S XMX=XMX+1,XMTOLIST(XMX)=""
"RTN","XMKP",196,0)
 . S XMTOLIST(XMX)=XMTOLIST(XMX)_U_XMTO
"RTN","XMKP",197,0)
 Q
"RTN","XMKP",198,0)
RCPTFWD(XMTO,XMFDA,XMIENS,XMNOW) ; Someone special fwded to this particular recipient
"RTN","XMKP",199,0)
 N XMBY
"RTN","XMKP",200,0)
 S XMBY=^TMP("XMY",$J,XMTO,"F")
"RTN","XMKP",201,0)
 I +XMBY=XMBY D
"RTN","XMKP",202,0)
 . ; Recipient has fwding address; note that recipient fwded.
"RTN","XMKP",203,0)
 . S XMFDA(3.91,XMIENS,8)=$$NAME^XMXUTIL(XMBY)_" "_XMNOW   ; fwd by name date time
"RTN","XMKP",204,0)
 . S XMFDA(3.91,XMIENS,8.01)=XMBY  ; fwd by duz
"RTN","XMKP",205,0)
 E  D
"RTN","XMKP",206,0)
 . ; Forwarded from remote site.
"RTN","XMKP",207,0)
 . S XMFDA(3.91,XMIENS,8)=XMBY_" "_XMNOW   ; fwd by name date time
"RTN","XMKP",208,0)
 Q
"RTN","XMKP",209,0)
RPOST(XMDUZ,XMZ,XMZR) ;
"RTN","XMKP",210,0)
 ; If this is not a locally generated reply, then XMDUZ is "NR".
"RTN","XMKP",211,0)
 S ^XMBPOST("BOX",$$TSTAMP^XMXUTIL1,"R",XMZ_U_XMZR)=$P(^XMB(3.9,XMZ,1,0),U,4)_U_$S(XMDUZ=.6:DUZ,1:XMDUZ)
"RTN","XMKP",212,0)
 N XMFDA
"RTN","XMKP",213,0)
RPOST2 ;
"RTN","XMKP",214,0)
 S XMFDA(3.9001,"+1,"_XMZ_",",.01)=XMZR
"RTN","XMKP",215,0)
 D UPDATE^DIE("","XMFDA")  ; Add to response multiple in original msg
"RTN","XMKP",216,0)
 Q:'$D(DIERR)
"RTN","XMKP",217,0)
 Q:$P(^XMB(3.9,XMZ,0),U,1)'=""
"RTN","XMKP",218,0)
 S $P(^XMB(3.9,XMZ,0),U,1)=$$EZBLD^DIALOG(34012)
"RTN","XMKP",219,0)
 S ^XMB(3.9,"B",$$EZBLD^DIALOG(34012),XMZ)=""
"RTN","XMKP",220,0)
 G RPOST2
"RTN","XMKP",221,0)
 ;
"RTN","XMKP",222,0)
 ;#34012 = * No Subject *
"RTN","XMKPL")
0^206^B5056676
"RTN","XMKPL",1,0)
XMKPL ;ISC-SF/GMB-Manage the local mail posting process ;02/09/98  08:21
"RTN","XMKPL",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMKPL",3,0)
 ; Replaces ^XMADGO1,^XMADGO (ISC-WASH/CAP)
"RTN","XMKPL",4,0)
 ; Entry points (not covered by DBIA):
"RTN","XMKPL",5,0)
 ; CHECK   Check the local processes.
"RTN","XMKPL",6,0)
 ;         If they haven't been deliberately STOP'd,
"RTN","XMKPL",7,0)
 ;         and if they are not running,
"RTN","XMKPL",8,0)
 ;         then task them.
"RTN","XMKPL",9,0)
 ; STATUS  Get status of local processes.
"RTN","XMKPL",10,0)
 ;
"RTN","XMKPL",11,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMKPL",12,0)
 ; STOP    Stop the local processes.   XMMGR-STOP-BACKGROUND-FILER
"RTN","XMKPL",13,0)
 ; START   Start the local processes.  XMMGR-START-BACKGROUND-FILER
"RTN","XMKPL",14,0)
 ;
"RTN","XMKPL",15,0)
CHECK ; Task Background Filer processes if any missing
"RTN","XMKPL",16,0)
 Q:$P(^XMB(1,1,0),U,16)  ; Quit if 'background filer stop flag' set.
"RTN","XMKPL",17,0)
 N XMPROC,XMSTATUS
"RTN","XMKPL",18,0)
 D STATUS(.XMSTATUS)
"RTN","XMKPL",19,0)
 Q:'$D(XMSTATUS)
"RTN","XMKPL",20,0)
 S XMPROC=""
"RTN","XMKPL",21,0)
 F  S XMPROC=$O(XMSTATUS(XMPROC)) Q:XMPROC=""  D QUEUE(XMPROC)
"RTN","XMKPL",22,0)
 Q
"RTN","XMKPL",23,0)
STATUS(XMSTATUS) ;Check status of background filer
"RTN","XMKPL",24,0)
 N XMPROC,XMLOCK
"RTN","XMKPL",25,0)
 F XMPROC="Mover","Tickler" D
"RTN","XMKPL",26,0)
 . S XMLOCK="POST_"_XMPROC
"RTN","XMKPL",27,0)
 . L +^XMBPOST(XMLOCK):0 E  Q
"RTN","XMKPL",28,0)
 . S XMSTATUS(XMPROC)=XMLOCK_" is NOT running!"
"RTN","XMKPL",29,0)
 . L -^XMBPOST(XMLOCK)
"RTN","XMKPL",30,0)
 Q
"RTN","XMKPL",31,0)
QUEUE(XMPROC) ;Start Queue processors
"RTN","XMKPL",32,0)
 N XMHANG,ZTRTN,ZTDESC,ZTSAVE,X,ZTSK,ZTQUEUED,ZTCPU,ZTDTH,ZTIO
"RTN","XMKPL",33,0)
 S XMHANG=$$HANG
"RTN","XMKPL",34,0)
 S ZTDESC="MailMan Delivery "_XMPROC
"RTN","XMKPL",35,0)
 S ZTSAVE("XMHANG")=""
"RTN","XMKPL",36,0)
 S ZTRTN=$S(XMPROC="Tickler":"GO^XMTDT",1:"GO^XMKPLQ")
"RTN","XMKPL",37,0)
 I $D(^XMB(1,1,0)) S X=$P(^(0),U,12) I X'="" S ZTCPU=$P(X,",",2)
"RTN","XMKPL",38,0)
 S ZTIO="",ZTDTH=$H
"RTN","XMKPL",39,0)
 D ^%ZTLOAD
"RTN","XMKPL",40,0)
 Q
"RTN","XMKPL",41,0)
HANG() ; Get Hangtime for delivery modules
"RTN","XMKPL",42,0)
 N X
"RTN","XMKPL",43,0)
 S X=$P($G(^XMB(1,1,0)),U,13)
"RTN","XMKPL",44,0)
 Q $S(X:X,1:5)
"RTN","XMKPL",45,0)
STOP ; Stop Background mail delivery processes
"RTN","XMKPL",46,0)
 N DIR,Y,DIRUT
"RTN","XMKPL",47,0)
 S DIR(0)="Y"
"RTN","XMKPL",48,0)
 S DIR("A")="Are you sure you want the BACKGROUND FILERS to STOP delivering mail"
"RTN","XMKPL",49,0)
 S DIR("B")="NO"
"RTN","XMKPL",50,0)
 D ^DIR Q:'Y
"RTN","XMKPL",51,0)
 S $P(^XMB(1,1,0),U,16)=1  ; Set 'background filer stop flag'
"RTN","XMKPL",52,0)
 W:'$D(ZTQUEUED) !!,*7,"<< Background filer will stop soon. >>"
"RTN","XMKPL",53,0)
 Q
"RTN","XMKPL",54,0)
START ; Start the local processes (usually after they had been STOP'd).
"RTN","XMKPL",55,0)
 S $P(^XMB(1,1,0),U,16)=""  ; Reset 'background filer stop flag'
"RTN","XMKPL",56,0)
 D CHECK
"RTN","XMKPL",57,0)
 W:'$D(ZTQUEUED) !!,*7,"<< Background filer will start soon. >>",!!
"RTN","XMKPL",58,0)
 Q
"RTN","XMKPLQ")
0^207^B28928716
"RTN","XMKPLQ",1,0)
XMKPLQ ;ISC-SF/GMB-Post local msgs to correct queues ;02/10/99  07:47
"RTN","XMKPLQ",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMKPLQ",3,0)
 ; Replaces ^XMADJF0, ZTSK^XMADGO (ISC-WASH/CAP)
"RTN","XMKPLQ",4,0)
GO ;
"RTN","XMKPLQ",5,0)
 ; Variables provided through TASKMAN:  XMHANG
"RTN","XMKPLQ",6,0)
 N XMACTIVE,XMUID,XMQLIST,XMTSTAMP,XMGROUP,XMCNT,XMQUEUE,XMREC
"RTN","XMKPLQ",7,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","XMKPLQ",8,0)
 L +^XMBPOST("POST_Mover"):1 E  Q
"RTN","XMKPLQ",9,0)
 S %=$$PSET^%ZTLOAD(ZTSK)
"RTN","XMKPLQ",10,0)
 S XMACTIVE=$$TSTAMP^XMXUTIL1
"RTN","XMKPLQ",11,0)
 F  D  Q:$P($G(^XMB(1,1,0)),U,16)
"RTN","XMKPLQ",12,0)
 . D GETQ(.XMQLIST) ; Get new parameters for grouping
"RTN","XMKPLQ",13,0)
 . S XMTSTAMP=""
"RTN","XMKPLQ",14,0)
 . F  S XMTSTAMP=$O(^XMBPOST("BOX",XMTSTAMP)) Q:XMTSTAMP=""  D  Q:$$TSTAMP^XMXUTIL1-XMACTIVE>30
"RTN","XMKPLQ",15,0)
 . . S XMGROUP=""
"RTN","XMKPLQ",16,0)
 . . F  S XMGROUP=$O(^XMBPOST("BOX",XMTSTAMP,XMGROUP)) Q:XMGROUP=""  D
"RTN","XMKPLQ",17,0)
 . . . S XMUID=0
"RTN","XMKPLQ",18,0)
 . . . F  S XMUID=$O(^XMBPOST("BOX",XMTSTAMP,XMGROUP,XMUID)) Q:XMUID=""  S XMREC=^(XMUID)  D
"RTN","XMKPLQ",19,0)
 . . . . S XMCNT=+XMREC
"RTN","XMKPLQ",20,0)
 . . . . S XMQUEUE=$$WHICHQ(XMQLIST(XMGROUP),XMCNT)
"RTN","XMKPLQ",21,0)
 . . . . I XMGROUP="M" D
"RTN","XMKPLQ",22,0)
 . . . . . D MQUEUE(XMTSTAMP,XMUID,XMQUEUE,XMREC)
"RTN","XMKPLQ",23,0)
 . . . . E  D
"RTN","XMKPLQ",24,0)
 . . . . . D RQUEUE(XMTSTAMP,XMUID,XMQUEUE,XMREC)
"RTN","XMKPLQ",25,0)
 . . . . D STATS(XMGROUP,XMQUEUE,XMCNT)
"RTN","XMKPLQ",26,0)
 . . . . K ^XMBPOST("BOX",XMTSTAMP,XMGROUP,XMUID)
"RTN","XMKPLQ",27,0)
 . I $$TSTAMP^XMXUTIL1-XMACTIVE>30 D  Q
"RTN","XMKPLQ",28,0)
 . . D ZTSK
"RTN","XMKPLQ",29,0)
 . . S XMACTIVE=$$TSTAMP^XMXUTIL1
"RTN","XMKPLQ",30,0)
 . H XMHANG
"RTN","XMKPLQ",31,0)
 L -^XMBPOST("POST_Mover")
"RTN","XMKPLQ",32,0)
 D PCLEAR^%ZTLOAD(ZTSK)
"RTN","XMKPLQ",33,0)
 Q
"RTN","XMKPLQ",34,0)
GETQ(XMQLIST) ;
"RTN","XMKPLQ",35,0)
 N X
"RTN","XMKPLQ",36,0)
 S X=$G(^XMB(1,1,6))
"RTN","XMKPLQ",37,0)
 S XMQLIST("M")=$P(X,U),XMQLIST("R")=$P(X,U,2)
"RTN","XMKPLQ",38,0)
 Q
"RTN","XMKPLQ",39,0)
WHICHQ(XMQLIST,XMCNT) ;
"RTN","XMKPLQ",40,0)
 N XMQUEUE,XMQLEN
"RTN","XMKPLQ",41,0)
 I XMQLIST'["," Q 1
"RTN","XMKPLQ",42,0)
 S XMQLEN=$L(XMQLIST,",")
"RTN","XMKPLQ",43,0)
 F XMQUEUE=1:1:$L(XMQLIST,",") Q:XMCNT<$P(XMQLIST,",",XMQUEUE)
"RTN","XMKPLQ",44,0)
 Q $S(XMCNT<$P(XMQLIST,",",XMQUEUE):XMQUEUE,1:XMQUEUE+1)
"RTN","XMKPLQ",45,0)
RQUEUE(XMTSTAMP,XMUID,XMQUEUE,XMREC) ; Put replies into queue
"RTN","XMKPLQ",46,0)
 N XMZ,XMTSQ
"RTN","XMKPLQ",47,0)
 ;If the response is already in the queue, find out its Timestamp
"RTN","XMKPLQ",48,0)
 ;and file the new response right next to it.
"RTN","XMKPLQ",49,0)
 S XMZ=$P(XMUID,U,1)
"RTN","XMKPLQ",50,0)
 S XMTSQ=$O(^XMBPOST("R",XMQUEUE,"B",XMZ,0))
"RTN","XMKPLQ",51,0)
 I XMTSQ S XMTSTAMP=XMTSQ
"RTN","XMKPLQ",52,0)
 E  S ^XMBPOST("R",XMQUEUE,"B",XMZ,XMTSTAMP)=""
"RTN","XMKPLQ",53,0)
 S ^XMBPOST("R",XMQUEUE,XMTSTAMP,XMZ,$P(XMUID,U,2))=XMREC
"RTN","XMKPLQ",54,0)
 Q
"RTN","XMKPLQ",55,0)
MQUEUE(XMTSTAMP,XMUID,XMQUEUE,XMREC) ; Put new & forwarded messages into queue
"RTN","XMKPLQ",56,0)
 S ^XMBPOST("M",XMQUEUE,XMTSTAMP,XMUID)=XMREC
"RTN","XMKPLQ",57,0)
 Q
"RTN","XMKPLQ",58,0)
STATS(XMGROUP,XMQUEUE,XMCNT) ;
"RTN","XMKPLQ",59,0)
 N XMSTATS
"RTN","XMKPLQ",60,0)
 L +^XMBPOST("QSTATS",XMGROUP,XMQUEUE)
"RTN","XMKPLQ",61,0)
 S XMSTATS=$G(^XMBPOST(XMGROUP,XMQUEUE)),^(XMQUEUE)=($P(XMSTATS,U,1)+1)_U_($P(XMSTATS,U,2)+XMCNT)
"RTN","XMKPLQ",62,0)
 L -^XMBPOST("QSTATS",XMGROUP,XMQUEUE)
"RTN","XMKPLQ",63,0)
 Q
"RTN","XMKPLQ",64,0)
ZTSK ; START Delivery Background Processes
"RTN","XMKPLQ",65,0)
 Q:$P(^XMB(1,1,0),U,16)  ;Quit if Background Filer Stop Flag
"RTN","XMKPLQ",66,0)
 N XMGROUP,XMQUEUE,ZTRTN,ZTSAVE,ZTDESC
"RTN","XMKPLQ",67,0)
 F XMGROUP="M","R" D  ; Check each queue for messages
"RTN","XMKPLQ",68,0)
 . S XMQUEUE=""
"RTN","XMKPLQ",69,0)
 . F  S XMQUEUE=$O(^XMBPOST(XMGROUP,XMQUEUE)) Q:XMQUEUE'>0  D
"RTN","XMKPLQ",70,0)
 . . Q:$D(^XMBPOST(XMGROUP,XMQUEUE))<10  ; Quit if nothing in queue
"RTN","XMKPLQ",71,0)
 . . L +^XMBPOST(XMGROUP,XMQUEUE):1 E  Q  ; If node locked, there is already one running
"RTN","XMKPLQ",72,0)
 . . S (ZTSAVE("XMGROUP"),ZTSAVE("XMQUEUE"),ZTSAVE("XMHANG"))=""
"RTN","XMKPLQ",73,0)
 . . S ZTDESC="MailMan "_$S(XMGROUP="M":"Message",1:"Response")_" Queue "_XMQUEUE
"RTN","XMKPLQ",74,0)
 . . S ZTRTN="GO^XMTDL"
"RTN","XMKPLQ",75,0)
 . . D TASKIT(ZTRTN,ZTDESC,.ZTSAVE) H 0 ; Start a job, Give TaskMan a chance to start it (hang)
"RTN","XMKPLQ",76,0)
 . . L -^XMBPOST(XMGROUP,XMQUEUE)
"RTN","XMKPLQ",77,0)
 Q
"RTN","XMKPLQ",78,0)
TASKIT(ZTRTN,ZTDESC,ZTSAVE) ;
"RTN","XMKPLQ",79,0)
 N X,ZTSK,ZTQUEUED,ZTCPU,ZTDTH,ZTIO
"RTN","XMKPLQ",80,0)
 I '$D(ZTCPU),$D(^XMB(1,1,0)) S X=$P(^(0),U,12) I X'="" S ZTCPU=$P(X,",",2)
"RTN","XMKPLQ",81,0)
 S ZTIO="",ZTDTH=$H
"RTN","XMKPLQ",82,0)
 D ^%ZTLOAD
"RTN","XMKPLQ",83,0)
 Q
"RTN","XMKPLQ",84,0)
JOB ;Start background filer when TaskMan can't
"RTN","XMKPLQ",85,0)
JOBGO S IO="",IO(0)="" D DT^DICRW G GO^XMTDL
"RTN","XMKPLQ",86,0)
 Q
"RTN","XMKPLQ",87,0)
CHKQ ; Input transform for file 4.3, fields 241 and 242
"RTN","XMKPLQ",88,0)
 K:$L(X)>120!($L(X)<1) X Q:'$D(X)
"RTN","XMKPLQ",89,0)
 K:X'?1.N.9(1","1.N) X Q:'$D(X)
"RTN","XMKPLQ",90,0)
 N I
"RTN","XMKPLQ",91,0)
 F I=1:1:$L(X,",")-1 I $P(X,",",I)'<$P(X,",",I+1) K X Q
"RTN","XMKPLQ",92,0)
 Q
"RTN","XMKPLQ",93,0)
HELPQ ; Executable help for file 4.3, fields 241 and 242
"RTN","XMKPLQ",94,0)
 W !,"You determine the number of delivery queues (10 max.) by what you enter in"
"RTN","XMKPLQ",95,0)
 W !,"this field.  Each number designates a queue boundary and a boundary of the"
"RTN","XMKPLQ",96,0)
 W !,"number of recipients per message which a queue may handle."
"RTN","XMKPLQ",97,0)
 W !!,"By creating more than one delivery queue, messages with approximately the"
"RTN","XMKPLQ",98,0)
 W !,"same number of recipients will queue up together.  Each delivery queue is"
"RTN","XMKPLQ",99,0)
 W !,"handled by a separate task.  In this way, a message with many recipients"
"RTN","XMKPLQ",100,0)
 W !,"won't hold up the delivery of a message with few recipients."
"RTN","XMKPLQ",101,0)
 W !!,"For example:"
"RTN","XMKPLQ",102,0)
 W !,"A null entry means there will be one queue into which all messages are placed."
"RTN","XMKPLQ",103,0)
 W !!,"If you enter '10' it means that there will be two queues."
"RTN","XMKPLQ",104,0)
 W !,"The first will deliver messages with fewer than 10 recipients."
"RTN","XMKPLQ",105,0)
 W !,"The second will deliver messages with 10 or more recipients."
"RTN","XMKPLQ",106,0)
 W !!,"If you enter '50,100,200' there will be four (4) queues."
"RTN","XMKPLQ",107,0)
 W !,"The first will deliver messages with fewer than 50 recipients."
"RTN","XMKPLQ",108,0)
 W !,"The second will deliver messages with from 50 to 99 recipients."
"RTN","XMKPLQ",109,0)
 W !,"The third will deliver messages with from 100 to 199 recipients."
"RTN","XMKPLQ",110,0)
 W !,"The fourth will deliver messages with 200 or more recipients."
"RTN","XMKPLQ",111,0)
 Q
"RTN","XMKPO")
0^34^B6128348
"RTN","XMKPO",1,0)
XMKPO ;ISC-SF/GMB-Post, other ;03/24/99  15:08
"RTN","XMKPO",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMKPO",3,0)
 ; Replaces ^XMBPOST and the first part of ^XMS1 (ISC-WASH/THM/RWF/CAP)
"RTN","XMKPO",4,0)
 ; Schedule a task to deliver remote, bulletin, server, device
"RTN","XMKPO",5,0)
 ;XMB("SCRIPT")=Zero node of Script last run
"RTN","XMKPO",6,0)
 ;XMB("SCRIPT",0)=Pointer to last script used
"RTN","XMKPO",7,0)
DEVICE(XMDUZ,XMZ,XMDEVICE,XMDVIENS) ; For D.Device
"RTN","XMKPO",8,0)
 N I,ZTRTN,ZTDESC,ZTSAVE,ZTDTH,ZTSK,ZTIO
"RTN","XMKPO",9,0)
 F I="XMDUZ","XMZ","XMDVIENS" S ZTSAVE(I)=""
"RTN","XMKPO",10,0)
 S ZTIO=$P(XMDEVICE,".",2,99)
"RTN","XMKPO",11,0)
 S ZTDTH=$H
"RTN","XMKPO",12,0)
 S ZTRTN="DEVICE^XMTDO"
"RTN","XMKPO",13,0)
 S ZTDESC="MailMan Device Handoff"
"RTN","XMKPO",14,0)
 D ^%ZTLOAD  ; Schedule Task
"RTN","XMKPO",15,0)
 Q
"RTN","XMKPO",16,0)
SERVER(XMZ,XMSERVER,XMSVIENS) ; For S.Server
"RTN","XMKPO",17,0)
 N I,ZTRTN,ZTDESC,ZTSAVE,ZTDTH,ZTSK,ZTIO
"RTN","XMKPO",18,0)
 D SETSTAT^XMTDO(XMSVIENS,"Setting up MM Server Task")
"RTN","XMKPO",19,0)
 F I="XMZ","XMSERVER","XMSVIENS" S ZTSAVE(I)=""
"RTN","XMKPO",20,0)
 S ZTDTH=$H
"RTN","XMKPO",21,0)
 S ZTRTN="SERVER^XMTDO"
"RTN","XMKPO",22,0)
 S ZTDESC="MailMan Server Handoff"
"RTN","XMKPO",23,0)
 S ZTIO=""
"RTN","XMKPO",24,0)
 D ^%ZTLOAD  ; Schedule Task
"RTN","XMKPO",25,0)
 D SETSTAT^XMTDO(XMSVIENS,"MM Server Task #"_$G(ZTSK,"N/A"))
"RTN","XMKPO",26,0)
 Q
"RTN","XMKPO",27,0)
BULLETIN(XMDUZ,XMBNAME,XMBIEN,XMPARM,XMBODY,XMTO,XMINSTR,ZTSK,XMATTACH) ;
"RTN","XMKPO",28,0)
 N I,XMB,ZTRTN,ZTDESC,ZTSAVE,ZTDTH,ZTIO
"RTN","XMKPO",29,0)
 I $G(XMBODY)'="",$D(@XMBODY)>9 D
"RTN","XMKPO",30,0)
 . S ZTSAVE("XMBODY")=""
"RTN","XMKPO",31,0)
 . S ZTSAVE($$OREF^DILF(XMBODY))=""
"RTN","XMKPO",32,0)
 F I="XMDUZ","XMBIEN","XMPARM(","XMTO","XMTO(","XMINSTR(","XMATTACH(" S ZTSAVE(I)=""
"RTN","XMKPO",33,0)
 I $G(XMINSTR("ADDR FLAGS"))["I" F I="^TMP(""XMY"",$J,","^TMP(""XMY0"",$J," S ZTSAVE(I)=""
"RTN","XMKPO",34,0)
 I $D(XMINSTR("LATER")) S ZTDTH=$$FMTH^XLFDT(XMINSTR("LATER"))
"RTN","XMKPO",35,0)
 E  S ZTDTH=$H
"RTN","XMKPO",36,0)
 S ZTRTN="TASK^XMXBULL"
"RTN","XMKPO",37,0)
 S ZTDESC="MailMan Bulletin: "_XMBNAME
"RTN","XMKPO",38,0)
 S ZTIO=""
"RTN","XMKPO",39,0)
 D ^%ZTLOAD  ; Schedule Task
"RTN","XMKPO",40,0)
 Q
"RTN","XMKPO",41,0)
REMOTE(XMZ,XMINST) ; For addresses containing "@"
"RTN","XMKPO",42,0)
 N XMSITE,XMTASK,XMREC
"RTN","XMKPO",43,0)
 S XMREC=^DIC(4.2,XMINST,0)
"RTN","XMKPO",44,0)
 S XMSITE=$P(XMREC,U)
"RTN","XMKPO",45,0)
 D PUTMSG^XMXMSGS2(.5,XMINST+1000,XMSITE,XMZ)
"RTN","XMKPO",46,0)
 Q:$P(XMREC,U,2)'["S"  ; S means to start task immediately
"RTN","XMKPO",47,0)
 ; The following node is not in the DD ! ***
"RTN","XMKPO",48,0)
 S XMTASK=$P($G(^XMBS(4.2999,XMINST,0)),U,2)  ; Task number
"RTN","XMKPO",49,0)
 I XMTASK,$$CHK^XMS5(XMTASK,XMINST) Q  ; Quit if task scheduled
"RTN","XMKPO",50,0)
 D OKTRAN(XMINST,XMSITE)
"RTN","XMKPO",51,0)
 Q
"RTN","XMKPO",52,0)
OKTRAN(XMINST,XMSITE) ;
"RTN","XMKPO",53,0)
 N XMB
"RTN","XMKPO",54,0)
 S XMB("TYPE")=3
"RTN","XMKPO",55,0)
 S (XMSCR,XMB("XMSCR"))=XMINST
"RTN","XMKPO",56,0)
 S XMB("XMSCRN")=XMSITE
"RTN","XMKPO",57,0)
 D XMTCHECK^XMBPOST(XMINST,.XMB)
"RTN","XMKPO",58,0)
 D ZTSK^XMBPOST
"RTN","XMKPO",59,0)
 Q
"RTN","XMP")
0^239^B13418139
"RTN","XMP",1,0)
XMP ;(WASH ISC)/THM/CAP-PackMan Version 1.01 ;05/21/99  07:55
"RTN","XMP",2,0)
 ;;7.1;MailMan;**4,24,50**;Jun 02, 1994
"RTN","XMP",3,0)
NOKL G F:$D(^DOPT("XMP"))
"RTN","XMP",4,0)
GO K ^DOPT("XMP") S DIK="^DOPT(""XMP"","
"RTN","XMP",5,0)
 S ^DOPT("XMP",0)="PackMan function^1N^"
"RTN","XMP",6,0)
 F I=1:1 S X=$E($T(TABLE+I),4,99) Q:X=""  S ^DOPT("XMP",I,0)=X
"RTN","XMP",7,0)
 D IXALL^DIK Q:$D(DIFROM)!'$D(XMZ)
"RTN","XMP",8,0)
F D NEW Q:Y<0
"RTN","XMP",9,0)
FX S DIC="^DOPT(""XMP"",",DIC(0)="AEQZ" D ^DIC W ! K DIC
"RTN","XMP",10,0)
 S XMR=^XMB(3.9,XMZ,0) G Q:Y<0 S X=$P(Y(0),U,2,99) K DD,DO,Y
"RTN","XMP",11,0)
 I $D(^XMB(3.9,XMZ,2,0)) S XCNP=$P(^(0),U,3)
"RTN","XMP",12,0)
 I $D(XCNP),XCNP>1,X["LOAD"!(X["PACK") S Y=$O(^XMB(3.9,XMZ,1,"C",0)) I $L(Y),$S(Y'=XMDUZ&Y:1,Y'=$P(XMR,U,2):1,$O(^(Y))'="":1,1:0) W !,"This message has already been SENT.  You may not CHANGE it.",*7 G FX
"RTN","XMP",13,0)
 I X["LOAD"!(X["PACK"),$S('$D(DUZ(0)):1,DUZ(0)="@":0,$D(^XUSEC("XUPROG",DUZ)):0,1:1) W !,"You do not have the privilege to LOAD packages nor routines nor globals.",*7 G FX
"RTN","XMP",14,0)
 I X="XI^XMP2",$S('$D(DUZ(0)):1,DUZ(0)="@":0,$D(^XUSEC("XUPROGMODE",DUZ)):0,1:1)
"RTN","XMP",15,0)
 I  W !!,*7,"You may only check the security of this message.",!,$S($P(^XMB(3.9,XMZ,0),U,10)'="":"You will not be allowed to install it.",1:"This message was not secured -- nothing done"),!!
"RTN","XMP",16,0)
 D @X D ^%ZISC D Q G FX
"RTN","XMP",17,0)
Q W ! K DIE,DIF,XMSUB,XCNP
"RTN","XMP",18,0)
 Q
"RTN","XMP",19,0)
TABLE ;;;DESCRIPTION^PROGRAM OR TAG^PROGRAM
"RTN","XMP",20,0)
 ;;ROUTINE LOAD^LOAD^XMPH
"RTN","XMP",21,0)
 ;;GLOBAL LOAD^LOAD^XMPG
"RTN","XMP",22,0)
 ;;PACKAGE LOAD^PACK^XMPH
"RTN","XMP",23,0)
 ;;SUMMARIZE MESSAGE^XS^XMP2
"RTN","XMP",24,0)
 ;;PRINT MESSAGE^XP^XMP2
"RTN","XMP",25,0)
 ;;INSTALL/CHECK MESSAGE^XI^XMP2
"RTN","XMP",26,0)
 ;;INSTALL SELECTED ROUTINE(S)^XR^XMP2
"RTN","XMP",27,0)
 ;;TEXT PRINT/DISPLAY^XT^XMP2
"RTN","XMP",28,0)
 ;;COMPARE MESSAGE^XC^XMP2
"RTN","XMP",29,0)
 ;;
"RTN","XMP",30,0)
 ;;DATA LOAD^LOAD^XMPDAT  ***** FILEMANAGER DATA MOVE ***** NOT READY
"RTN","XMP",31,0)
 ;;
"RTN","XMP",32,0)
 ;;
"RTN","XMP",33,0)
KIDS ;from XPDTP
"RTN","XMP",34,0)
 D XMZ^XMA2 Q:XMZ<1  S $P(^XMB(3.9,XMZ,0),U,7)="K" G DIFROM
"RTN","XMP",35,0)
NEW I $S($D(DIFROM):1,$D(ZTQUEUED):1,$D(XMDF):1,1:0) G DIFROM
"RTN","XMP",36,0)
 W !,"Please enter description of PACKMAN Message",!,*7
"RTN","XMP",37,0)
 S DWPK=1,DWLW=75,DIC="^TMP(""XMP"",$J,",DIA("P")=3.9
"RTN","XMP",38,0)
 S DIWESUB=$G(XMSUB,XMSUBJ)
"RTN","XMP",39,0)
 D EN^DIWE
"RTN","XMP",40,0)
DIFROM S %="Created ",(DIF,DIE)="^XMB(3.9,XMZ,2,"
"RTN","XMP",41,0)
 I $D(DUZ),$D(^VA(200,DUZ,0)) S %=%_"by "_$P(^(0),U)_" "
"RTN","XMP",42,0)
 I $D(^XMB("NAME")) S %=%_"at "_$P(^("NAME"),U)_" "
"RTN","XMP",43,0)
 I $D(DIFROM) S %=%_" (KIDS) "
"RTN","XMP",44,0)
 S %DT="T",X="NOW",XMA0=% D ^%DT
"RTN","XMP",45,0)
 S (XMA,X)=Y D DW^%DTC
"RTN","XMP",46,0)
 S XMA=$E(XMA_"0000",1,12),@(DIF_"0)")="^3.92A^2^2^"_$P(XMA,"."),^(1,0)="$TXT "_XMA0_"on "_X_", "_$E(XMA,4,5)_"/"_$E(XMA,6,7)_"/"_$E(XMA,2,3)_" at "_$E(XMA,9,10)_":"_$E(XMA,11,12)
"RTN","XMP",47,0)
 I '$O(^TMP("XMP",$J,0)) S ^XMB(3.9,XMZ,2,2,0)="$END TXT",XCNP=2 G OLD
"RTN","XMP",48,0)
 S I=2,J=0,^XMB(3.9,XMZ,2,2,0)=" "
"RTN","XMP",49,0)
 F  S J=$O(^TMP("XMP",$J,J)) Q:J=""  S %=^(J,0) S:$E(%)="$" %=" "_% S I=I+1,^XMB(3.9,XMZ,2,I,0)=%
"RTN","XMP",50,0)
 S ^XMB(3.9,XMZ,2,I+1,0)=" ",^XMB(3.9,XMZ,2,I+2,0)="$END TXT",XCNP=I+2,^XMB(3.9,XMZ,2,0)="^3.92A^"_XCNP_U_XCNP_U_$P(XMA,".") K ^TMP("XMP",$J),XMA0,%
"RTN","XMP",51,0)
OLD S XCN=0 K ^TMP("XMP",$J),XMA0 I '$D(ZTQUEUED) W !
"RTN","XMP",52,0)
O1 D NT Q:+XCN'=XCN  Q:X'["$TXT"  W:'$D(ZTQUEUED) !,$P(X,"TXT",2,999) G O1
"RTN","XMP",53,0)
NT S XCN=$O(@(DIE_XCN_")")) Q:+XCN'=XCN  S X=^(XCN,0) Q
"RTN","XMP",54,0)
MM S (DIE,DIF)="^XMB(3.9,XMZ,2," G FX
"RTN","XMP2A")
0^115^B20051015
"RTN","XMP2A",1,0)
XMP2A ;(WASH ISC)/GM/CAP- PACKMAN INSTALL ;06/21/99  16:02
"RTN","XMP2A",2,0)
 ;;7.1;MailMan;**24,42,50**;Jun 02, 1994
"RTN","XMP2A",3,0)
ENH I $P(XMR,U,7)]"" D  G:$D(XMPKIDS) 2
"RTN","XMP2A",4,0)
 .;check if KIDS format
"RTN","XMP2A",5,0)
 .I $P(XMR,U,7)["K",$$CHECK1("I $E(XMB0,1,5)=""$KID """) S XMPKIDS=1 Q
"RTN","XMP2A",6,0)
 .I $P(XMR,U,7)["X",$$CHECK1("I $E(XMB0,1,11)=""$TXT $KIDS """) S XMPKIDS=1 Q
"RTN","XMP2A",7,0)
 ;check if KIDS but Message Type field got lost
"RTN","XMP2A",8,0)
 I $P(XMR,U,7)="",$$CHECK1("I $E(XMB0,1,5)=""$KID """) S XMPKIDS=1 G 2
"RTN","XMP2A",9,0)
 G 1:$S('$D(DUZ(0)):1,DUZ(0)="@":0,$D(^XUSEC("XUPROGMODE",DUZ)):0,1:1)
"RTN","XMP2A",10,0)
 W !!,*7,"Warning:  Installing this message will cause a permanent update of globals"
"RTN","XMP2A",11,0)
 W !,"and routines"_$S($P(XMR,U,7)["X":" and run the INIT",1:"")_"." D  Q:'Y
"RTN","XMP2A",12,0)
 .N DIR,DIRUT
"RTN","XMP2A",13,0)
 .S DIR(0)="Y",DIR("B")="NO",DIR("A")="Do you really want to do this"
"RTN","XMP2A",14,0)
 .D ^DIR
"RTN","XMP2A",15,0)
1 D CHECK D:Y<0  G:'Y Q
"RTN","XMP2A",16,0)
 .N DIR,DIRUT
"RTN","XMP2A",17,0)
 .S DIR(0)="Y",DIR("B")="NO",DIR("A")="This doesn't appear to be an installable message, do you wish to continue"
"RTN","XMP2A",18,0)
 .D ^DIR
"RTN","XMP2A",19,0)
2 S XMPASS=1,XMA0=^XMB(3.9,XMZ,0) I $L(XMB0),$L($P(XMA0,U,10)),$D(^("K")) D ^XMPSEC G 3:$S('$D(DUZ(0)):0,DUZ(0)="@":1,$D(^XUSEC("XUPROGMODE",DUZ)):1,1:0)
"RTN","XMP2A",20,0)
 I $P(XMB0," at ",3)["on" S XMPASS=0 D FAIL^XMPSEC
"RTN","XMP2A",21,0)
 I $S('$D(DUZ(0)):1,DUZ(0)="@":0,$D(^XUSEC("XUPROGMODE",DUZ)):0,1:1) G Q
"RTN","XMP2A",22,0)
3 G X:XMP2="R",ENI^XMP2:XMPASS'=0
"RTN","XMP2A",23,0)
 W !,"This message may not be installed !!" G Q
"RTN","XMP2A",24,0)
X G Z:'$D(XMP2),Z:XMP2'="R" K DIR
"RTN","XMP2A",25,0)
 S DIR("A")="ROUTINE(S)",DIR(0)="FO^2:30",DIR("?")="^D HLP^XMP2A"
"RTN","XMP2A",26,0)
Y D ^DIR K DIRUT G Z:$D(DTOUT)!$D(DUOUT) G:X="" Q:$O(XMP2(""))="",ENI^XMP2
"RTN","XMP2A",27,0)
 I X'?1.A.AN.1"*" W " ???",*7 G Y
"RTN","XMP2A",28,0)
 S XMP2(X)="" G Y
"RTN","XMP2A",29,0)
Z G Q^XMP2
"RTN","XMP2A",30,0)
Q K DIR G Q^XMP2
"RTN","XMP2A",31,0)
ENTT ;LIST/PRINT TEXT ONLY
"RTN","XMP2A",32,0)
 N XMI,XMTEXT,XMABORT
"RTN","XMP2A",33,0)
 S XMI=.999999,XMABORT=0
"RTN","XMP2A",34,0)
 F  S XMI=$O(^XMB(3.9,XMZ,2,XMI)) Q:'XMI  S XMTEXT=^(XMI,0) D  Q:XMABORT
"RTN","XMP2A",35,0)
 . I $E(XMTEXT,1,8)="$END TXT" S XMABORT=1 Q
"RTN","XMP2A",36,0)
 . F  D  Q:$L(XMTEXT)<IOM!XMABORT!(IOM<2)  S XMTEXT=$E(XMTEXT,IOM,999)
"RTN","XMP2A",37,0)
 . . I $Y+3+($G(IOST)["C-")>IOSL D  Q:XMABORT
"RTN","XMP2A",38,0)
 . . . I $G(IOST)["C-" W ! D PAGE^XMXUTIL(.XMABORT) Q:XMABORT
"RTN","XMP2A",39,0)
 . . . W @IOF
"RTN","XMP2A",40,0)
 . . E  W !
"RTN","XMP2A",41,0)
 . . W $S(IOM>1:$E(XMTEXT,1,IOM-1),1:XMTEXT)
"RTN","XMP2A",42,0)
 Q
"RTN","XMP2A",43,0)
ENTR ;INSTALL SELECTED ROUTINE(S) [IN XMP2 ARRAY]
"RTN","XMP2A",44,0)
 F I=0:0 S XCN=$O(^XMB(3.9,XMZ,2,XCN)) Q:XCN=""  S X=^(XCN,0) I $E(X)="$" S Y=$P(X," ",2),J="" F I=0:0 S J=$O(XMP2(J)),K=$L(J)-1 Q:J=""  I $S(J=Y:1,J'?.AN1"*":0,$E(J,1,K)=$E(Y,1,K):1,1:0) D S1^XMP2
"RTN","XMP2A",45,0)
 Q
"RTN","XMP2A",46,0)
HLP ;Routine selection
"RTN","XMP2A",47,0)
 W !!,"Choose routines that you wish to install from this message by entering",!,"single names or a series (XMP2*=all routines that begin with 'XMP2')."
"RTN","XMP2A",48,0)
 W !,"The message is not checked to see if there are any matches to your input.",!,"It may be helpful to request a SUMMARY of the message first."
"RTN","XMP2A",49,0)
 W !,"Only routines selected for installation are backed up.",!!
"RTN","XMP2A",50,0)
 Q
"RTN","XMP2A",51,0)
CHECK ;check text header
"RTN","XMP2A",52,0)
 S %="I $E(XMB0,1,5)=""$TXT "",$P(XMB0,""Created ""_$S(XMB0[""BACKUP"":""on "",1:""by ""),2)?1E.E1"" at "".E1"" at "".E",%=$$CHECK1(%)
"RTN","XMP2A",53,0)
 S Y=$S(%:%,1:-1)
"RTN","XMP2A",54,0)
 Q
"RTN","XMP2A",55,0)
CHECK1(XMCHK) ;Check text header meets condition XMCHK
"RTN","XMP2A",56,0)
 ;returns line number of text header or 0, XMB0=text header
"RTN","XMP2A",57,0)
 N XMCNT,XMFLAG
"RTN","XMP2A",58,0)
 S XMFLAG=0,XMCNT=.999,XMB0=""
"RTN","XMP2A",59,0)
 F  S XMCNT=$O(^XMB(3.9,XMZ,2,XMCNT)) Q:'XMCNT  S XMB0=$G(^(XMCNT,0)) D  Q:'XMCNT
"RTN","XMP2A",60,0)
 .X XMCHK I  S XMFLAG=XMCNT,XMCNT=""
"RTN","XMP2A",61,0)
 Q XMFLAG
"RTN","XMP2A",62,0)
 ;
"RTN","XMP2A",63,0)
PHELP ;Help for Editing PackMan fields
"RTN","XMP2A",64,0)
 D ZIS^XM
"RTN","XMP2A",65,0)
 S X=99 X ^%ZOSF("RM") W *7,IORVON,IOBON,!!,"IMPORTANT",IORVOFF,IOBOFF,!!
"RTN","XMP2A",66,0)
 N % S %="You are about to edit what appears to be a PackMan message." D W
"RTN","XMP2A",67,0)
 S %="Please note the following:" D W
"RTN","XMP2A",68,0)
 S %="" D W
"RTN","XMP2A",69,0)
 S %="1. Editing this message may compromise its integrity." D W
"RTN","XMP2A",70,0)
 S %="2. It is recommended that editing not be done to code." D W
"RTN","XMP2A",71,0)
 S %="3. Insertion on lines should be done directly after the 1st" D W
"RTN","XMP2A",72,0)
 S %="   line of this message (begins '$TXT'), never after any" D W
"RTN","XMP2A",73,0)
 S %="   other line that begins with a '$' (dollar sign)." D W
"RTN","XMP2A",74,0)
 S %="4. Do not begin any line with a $ sign. It causes problems." D W
"RTN","XMP2A",75,0)
 S %="" D W
"RTN","XMP2A",76,0)
 S %="So, note the above and be very careful!" D W
"RTN","XMP2A",77,0)
 R !!,"Hit any key to continue.",X:DTIME S X=IOM X ^%ZOSF("RM")
"RTN","XMP2A",78,0)
 K IORVON,IOBON,IORVOFF,IOBOFF
"RTN","XMP2A",79,0)
 Q
"RTN","XMP2A",80,0)
W W !?1,IORVON,"|",IORVOFF," " W %," ",?75,IORVON,"|",IORVOFF
"RTN","XMP2A",81,0)
 Q
"RTN","XMP3")
0^92^B19180679
"RTN","XMP3",1,0)
XMP3 ;(WASH ISC)/AML/CAP-BUILD UN-INSTALL MESSAGE ;03/04/98  07:46
"RTN","XMP3",2,0)
 ;;7.1;MailMan;**24,50**;Jun 02, 1994
"RTN","XMP3",3,0)
ENTER ; This routine backs up what's on disk into a packman message.
"RTN","XMP3",4,0)
 S X=""
"RTN","XMP3",5,0)
 Q:$D(XMPKIDS)
"RTN","XMP3",6,0)
 N XMABORT,XMANSER
"RTN","XMP3",7,0)
 S XMABORT=0
"RTN","XMP3",8,0)
 D QBACKUP(.XMANSER,.XMABORT) I XMABORT S X=U Q
"RTN","XMP3",9,0)
 I 'XMANSER W !,"No backup message built.",! Q
"RTN","XMP3",10,0)
 D BACKUP(XMDUZ,XMZ,.XMP2,.XMABORT) I XMABORT S X=U
"RTN","XMP3",11,0)
 Q
"RTN","XMP3",12,0)
QBACKUP(Y,XMABORT) ;
"RTN","XMP3",13,0)
 N DIR,DIRUT,X
"RTN","XMP3",14,0)
 W !!,"Routines are the only parts that are backed up.  NO other parts"
"RTN","XMP3",15,0)
 W !,"are backed up, not even globals.  You may use the 'Summarize Message'"
"RTN","XMP3",16,0)
 W !,"option of PackMan to see what parts the message contains."
"RTN","XMP3",17,0)
 W !,"Those parts that are not routines should be backed up separately"
"RTN","XMP3",18,0)
 W !,"if they need to be preserved.",!!
"RTN","XMP3",19,0)
 S DIR(0)="Y"
"RTN","XMP3",20,0)
 S DIR("A")="Shall I preserve the routines on disk in a separate back-up message"
"RTN","XMP3",21,0)
 S DIR("B")="YES"
"RTN","XMP3",22,0)
 S DIR("?",1)="If YES I will build a MailMan message containing the routines that will"
"RTN","XMP3",23,0)
 S DIR("?",2)="be replaced by the Install."
"RTN","XMP3",24,0)
 S DIR("?")="If NO then you will have no automatic backup of routines."
"RTN","XMP3",25,0)
 D ^DIR I $D(DIRUT) S XMABORT=1
"RTN","XMP3",26,0)
 Q
"RTN","XMP3",27,0)
BACKUP(XMDUZ,XMZ,XMSELECT,XMABORT) ;
"RTN","XMP3",28,0)
 ;Initialize message, reset & quit if abort
"RTN","XMP3",29,0)
 N XMINSTR,XMPXMZ
"RTN","XMP3",30,0)
 D BINIT(XMDUZ,.XMPXMZ,.XMINSTR,.XMABORT) Q:XMABORT
"RTN","XMP3",31,0)
 D BTEXT(XMZ,.XMSELECT,XMPXMZ)
"RTN","XMP3",32,0)
 D MOVEPART^XMXSEND(XMDUZ,XMPXMZ,.XMINSTR)
"RTN","XMP3",33,0)
 D SEND^XMKP(XMDUZ,XMPXMZ,.XMINSTR)
"RTN","XMP3",34,0)
 D CHECK^XMKPL
"RTN","XMP3",35,0)
 D CLEANUP^XMXADDR
"RTN","XMP3",36,0)
 W !,"PackMan backup message [",XMPXMZ,"] sent."
"RTN","XMP3",37,0)
 Q
"RTN","XMP3",38,0)
BTEXT(XMZ,XMSELECT,XMPXMZ) ;
"RTN","XMP3",39,0)
 N XCNP,XMCN,XMREC,XMTYPE
"RTN","XMP3",40,0)
 S XCNP=1,XMCN=0
"RTN","XMP3",41,0)
 F  S XMCN=$O(^XMB(3.9,XMZ,2,XMCN)) Q:XMCN'>0  S XMREC=^(XMCN,0)  D
"RTN","XMP3",42,0)
 . Q:$E(XMREC)'="$"
"RTN","XMP3",43,0)
 . Q:"^$TXT^$END^"[(U_$E(XMREC,1,4)_U)
"RTN","XMP3",44,0)
 . S XMTYPE=$E(XMREC,2,4)
"RTN","XMP3",45,0)
 . D @($S(":ROU:GLB:GLO:DDD:DAT:OPT:HEL:BUL:KEY:FUN:PKG:RTN:DIE:DIB:DIP:"[(":"_XMTYPE_":"):XMTYPE,1:"NO"))
"RTN","XMP3",46,0)
 Q
"RTN","XMP3",47,0)
ROU ;save routine
"RTN","XMP3",48,0)
 N X,XMROU
"RTN","XMP3",49,0)
 S X=$P(XMREC," ",2) S:X[U X=$P(X,U,2)
"RTN","XMP3",50,0)
 X ^%ZOSF("TEST") E  W !,"Routine ",X," is not on the disk." Q
"RTN","XMP3",51,0)
 I $O(XMSELECT(""))="" D BROU Q
"RTN","XMP3",52,0)
 S XMROU=""
"RTN","XMP3",53,0)
 F  S XMROU=$O(XMSELECT(XMROU)) Q:XMROU=""!(X=XMROU)  I $E(XMROU,$L(XMROU))="*" Q:$E(X,1,$L(XMROU)-1)=$E(XMROU,1,$L(XMROU)-1)
"RTN","XMP3",54,0)
 D:XMROU'="" BROU
"RTN","XMP3",55,0)
 Q
"RTN","XMP3",56,0)
BROU ;
"RTN","XMP3",57,0)
 N DIF
"RTN","XMP3",58,0)
 S DIF="^XMB(3.9,XMPXMZ,2,"
"RTN","XMP3",59,0)
 S XCNP=XCNP+1
"RTN","XMP3",60,0)
 S ^XMB(3.9,XMPXMZ,2,XCNP,0)="$ROU "_X_" (PACKMAN-BACKUP)"
"RTN","XMP3",61,0)
 X ^%ZOSF("LOAD")
"RTN","XMP3",62,0)
 S ^XMB(3.9,XMPXMZ,2,XCNP,0)="$END ROU "_X_" (PACKMAN-BACKUP)"
"RTN","XMP3",63,0)
 S ^XMB(3.9,XMPXMZ,2,0)="^3.92A^"_XCNP_U_XCNP_U_DT
"RTN","XMP3",64,0)
 Q
"RTN","XMP3",65,0)
GLO ;New global section
"RTN","XMP3",66,0)
GLB ;global...save the part to be updated
"RTN","XMP3",67,0)
 W !,"GLOBAL..................NO BACKUP" Q
"RTN","XMP3",68,0)
DDD ;data dictionary...
"RTN","XMP3",69,0)
 W !,"DATA DICTIONARY.........NO BACKUP" Q
"RTN","XMP3",70,0)
DAT ;fileman data...what to do
"RTN","XMP3",71,0)
 W !,"FILEMAN DATA............NO BACKUP" Q
"RTN","XMP3",72,0)
OPT ;Options
"RTN","XMP3",73,0)
 W !,"OPTIONS.................NO BACKUP" Q
"RTN","XMP3",74,0)
HEL ;Help Frames
"RTN","XMP3",75,0)
 W !,"HELP FRAMES.............NO BACKUP" Q
"RTN","XMP3",76,0)
BUL ;Bulletins
"RTN","XMP3",77,0)
 W !,"BULLETINS...............NO BACKUP" Q
"RTN","XMP3",78,0)
KEY ;Security Keys
"RTN","XMP3",79,0)
 W !,"SECURITY KEYS...........NO BACKUP" Q
"RTN","XMP3",80,0)
FUN ;Functions
"RTN","XMP3",81,0)
 W !,"FUNCTIONS...............NO BACKUP" Q
"RTN","XMP3",82,0)
PKG ;Package File
"RTN","XMP3",83,0)
 W !,"PACKAGE FILE............NO BACKUP" Q
"RTN","XMP3",84,0)
RTN ;Routine Documentation
"RTN","XMP3",85,0)
 W !,"ROUTINE DOCUMENTATION...NO BACKUP" Q
"RTN","XMP3",86,0)
DIE ;Input Templates
"RTN","XMP3",87,0)
 W !,"INPUT TEMPLATES.........NO BACKUP" Q
"RTN","XMP3",88,0)
DIP ;Print Templates
"RTN","XMP3",89,0)
 W !,"PRINT TEMPLATES.........NO BACKUP" Q
"RTN","XMP3",90,0)
DIB ;Sort Templates
"RTN","XMP3",91,0)
 W !,"SORT TEMPLATES..........NO BACKUP" Q
"RTN","XMP3",92,0)
NO ;no way
"RTN","XMP3",93,0)
 W !,"UNDEFINED FUNCTION" Q
"RTN","XMP3",94,0)
BINIT(XMDUZ,XMPXMZ,XMINSTR,XMABORT) ; setup for first routine
"RTN","XMP3",95,0)
 N XMSUBJ,XMREC,XMDT
"RTN","XMP3",96,0)
 D SUBJ^XMJMS(.XMSUBJ,.XMABORT) Q:XMABORT
"RTN","XMP3",97,0)
 D CRE8XMZ^XMXSEND(XMSUBJ,.XMPXMZ,1) I XMPXMZ<1 S XMABORT=1 Q
"RTN","XMP3",98,0)
 D INIT^XMXADDR
"RTN","XMP3",99,0)
 D TOWHOM^XMJMT(XMDUZ,"Send",.XMINSTR,"",.XMABORT)
"RTN","XMP3",100,0)
 I XMABORT D KILLMSG^XMXUTIL(XMPXMZ) Q
"RTN","XMP3",101,0)
 W !,"Building PackMan backup message with subject ",XMSUBJ,!!
"RTN","XMP3",102,0)
 S XMDT=$$NOW^XLFDT
"RTN","XMP3",103,0)
 S XMREC="PACKMAN BACKUP Created on "_$$DOW^XLFDT(XMDT)_", "_$E(XMDT,4,5)_"/"_$E(XMDT,6,7)_"/"_$E(XMDT,2,3)_" at "_$E(XMDT_"0000",9,10)_":"_$E(XMDT_"0000",11,12)_" "
"RTN","XMP3",104,0)
 I $D(DUZ),$D(^VA(200,DUZ,0)) S XMREC=XMREC_"by "_$P(^(0),U)_" "
"RTN","XMP3",105,0)
 S:$D(^XMB("NAME")) XMREC=XMREC_"at "_$P(^("NAME"),U)_" "
"RTN","XMP3",106,0)
 S ^XMB(3.9,XMPXMZ,2,0)=""
"RTN","XMP3",107,0)
 S ^XMB(3.9,XMPXMZ,2,1,0)="$TXT "_XMREC
"RTN","XMP3",108,0)
 Q
"RTN","XMPC")
0^267^B8382242
"RTN","XMPC",1,0)
XMPC ;(WASH ISC)/THM/CAP-RTGE COMPARATOR ;05/21/99  08:41
"RTN","XMPC",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMPC",3,0)
 S S="",%2="",C=IOM-2/2\1,(M,B)=0,H=3
"RTN","XMPC",4,0)
D S M=M+1,B=B+1 G:M>O!(B>F) WRI G:^TMP($J,1,M,0)=^TMP($J,2,B,0) D S W=^TMP($J,1,M,0),(%4,%3)=""
"RTN","XMPC",5,0)
 F I=B:1:$S(B+5<F:B+5,1:F) S V=^TMP($J,2,I,0) D DDD G D:%4="EQUAL"
"RTN","XMPC",6,0)
 S Z=1,G=M D HEAD:'$D(%2) D WP S B=B-1 G D
"RTN","XMPC",7,0)
DDD F K=1:5:26 Q:$L($E(V,K,K+10))<7  I $F(W,$E(V,K,K+10)) S %3="MPART" G E1
"RTN","XMPC",8,0)
 Q
"RTN","XMPC",9,0)
E1 D HEAD G MAT:%3="MPART"!(%4="EQUAL") S Z=1,G=M D WP S B=B-1,%4="EQUAL" Q
"RTN","XMPC",10,0)
MAT S Q=1 F J=B:1:I-1 S X=^TMP($J,2,J,0),Z=1,G=J D WF1
"RTN","XMPC",11,0)
 S B=B+(I-B) S:W=V %4="EQUAL" Q:%4="EQUAL"
"RTN","XMPC",12,0)
 S %4=W,%3=^TMP($J,2,B,0),Q=0,Z=1,L=0
"RTN","XMPC",13,0)
 F K=1:1 S X=$E(%4,1,C-5) S:K=1 G=M D WP1 S Y=X,X=$E(%3,1,C-5) S:K=1 G=B,Z=1 D WF1 S %4=$E(%4,C-4,255),%3=$E(%3,C-4,255) D:X'=Y&$D(S)&(L=0) S I '$L(%3)&('$L(%4)) S %4="EQUAL" Q
"RTN","XMPC",14,0)
 Q
"RTN","XMPC",15,0)
WRI I M>O&(B<(F+1)) F I=B:1:F S X=^TMP($J,2,I,0),Q=1,Z=1,G=I D WF1
"RTN","XMPC",16,0)
 I B>F&(M<(O+1)) F I=M:1:O S X=^TMP($J,1,I,0),Z=1,G=I D WP1
"RTN","XMPC",17,0)
 K %,%0,%1,%2,%3,%4,B,C,D,F,G,H,J,K,L,M,N,O,P,Q,R,S,T,V,W,X,Z
"RTN","XMPC",18,0)
W W !,"-----------------------------------------------------------------------------"
"RTN","XMPC",19,0)
 Q
"RTN","XMPC",20,0)
WP S X=W
"RTN","XMPC",21,0)
WP1 W ! Q:'$L(X)  W " ",$S(Z:$J(G,2),1:"  "),"{",$E(X,1,C-5),$C(125) S Z=0 Q:$L(X)<(C-4)  S X=$E(X,C-4,255) G WP1
"RTN","XMPC",22,0)
WF1 W:Q=1 ! Q:'$L(X)  W ?C+2 W $S(Z:$J(G,2),1:"  "),"{",$E(X,1,C-5),$C(125) S Z=0 Q:$L(X)<(C-4)  S X=$E(X,C-4,255) G WF1
"RTN","XMPC",23,0)
HEAD S:H=2 H=0 Q:H'=0  W !,P," (",IOD,")",?C+1,P," (",E,")" S H=1 Q
"RTN","XMPC",24,0)
S F L=1:1:$L(X) G:$E(X,L)'=$E(Y,L) S1
"RTN","XMPC",25,0)
S1 W !?L+3,"^",?L+C+4,"^" Q
"RTN","XMPC",26,0)
LOAD K ^TMP($J,1),^TMP($J,2) S (X,R)=$P(X," ",2) S:X[U (X,R)=$P(R,U,2) I '$D(^%ZOSF("TEST")) W !,"Routine compare not available. " Q
"RTN","XMPC",27,0)
 X ^%ZOSF("TEST") I '$T W !,"Routine ",R," missing from disk." G W
"RTN","XMPC",28,0)
 S DIF="^TMP($J,1,",XCNP=0,X=R X ^%ZOSF("LOAD") S O=XCNP
"RTN","XMPC",29,0)
L3 F F=0:0 D NT Q:+XCN'=XCN!($E(X,1,4)["$END")  I $E(X)'="$" S F=F+1,^TMP($J,2,F,0)=X
"RTN","XMPC",30,0)
 S O=O-1 G XMPC
"RTN","XMPC",31,0)
NT S XCN=$O(@(DIE_XCN_")")) Q:+XCN'=XCN  S X=^(XCN,0) Q
"RTN","XMPC",32,0)
COMP ;COMPARE MESSAGE X TO MESSAGE Y
"RTN","XMPC",33,0)
 S J=.999
"RTN","XMPC",34,0)
C1 S J=$O(^XMB(3.9,X,2,J)) Q:J=""  G C1:^(J,0)=^XMB(3.9,Y,2,J,0)
"RTN","XMPC",35,0)
 W !,"NOT THE SAME" Q
"RTN","XMPC",36,0)
TOP ;W @IOF,!,"MailMan PackMan Compare - For "_XMDUN
"RTN","XMPC",37,0)
 I '$D(XMR) S XMR=^XMB(3.9,XMZ,0)
"RTN","XMPC",38,0)
 I $G(IOST)'["C-" D
"RTN","XMPC",39,0)
 . W "MailMan PackMan Compare - For ",XMV("NAME")
"RTN","XMPC",40,0)
 . W !,"Message #"_XMZ,!,"Subject: "_$P(XMR,U),!,"From: "_$$NAME^XMXUTIL($P(XMR,U,2))
"RTN","XMPC",41,0)
 . D NOW^%DTC S XMA=%,X=% D DW^%DTC W !,X,"  " S Y=XMA D DD^%DT
"RTN","XMPC",42,0)
 . W Y X ^%ZOSF("UCI") W " ("_Y_")",!
"RTN","XMPC",43,0)
 S I="",$P(I,"*",81)=""
"RTN","XMPC",44,0)
 W !,I,!,"Message #"_XMZ_"     Routine from DISK on LEFT - from Message on RIGHT",!,I,!
"RTN","XMPC",45,0)
 K %H,%T,%Y,%,XMA
"RTN","XMPC",46,0)
 Q
"RTN","XMPG")
0^116^B10695060
"RTN","XMPG",1,0)
XMPG ;(WASH ISC)/THM/CAP-GLOBAL LIST/LOAD ;06/14/99  08:22
"RTN","XMPG",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMPG",3,0)
 ; Entry point (DBIA 10071):
"RTN","XMPG",4,0)
 ; ENT  Load and send a packman message with globals
"RTN","XMPG",5,0)
 ;
"RTN","XMPG",6,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMPG",7,0)
 ; LOAD  XMPGLO
"RTN","XMPG",8,0)
 ;
"RTN","XMPG",9,0)
 ; If you D ^XMPG, you are asked for a global, and it is printed
"RTN","XMPG",10,0)
 ; to whichever device you choose.
"RTN","XMPG",11,0)
 S %1="W !,D,""="",@D",%2="W !,%G_I_"")="",%T"
"RTN","XMPG",12,0)
 D ^%ZIS G K:POP
"RTN","XMPG",13,0)
 D R
"RTN","XMPG",14,0)
 I IO(0)'=IO U IO D ^%ZISC
"RTN","XMPG",15,0)
 D HOME^%ZIS
"RTN","XMPG",16,0)
 Q
"RTN","XMPG",17,0)
R D N G R:K G K:%G="" U IO D EN G R
"RTN","XMPG",18,0)
EN K I,R G K:%G="" S %0=0,Q=$C(34),R=1 D GP
"RTN","XMPG",19,0)
 S D=$P(%G,"(",1) I @("$D("_D_")#2"),$L(@D) X %1
"RTN","XMPG",20,0)
 D S Q
"RTN","XMPG",21,0)
S S I=Q_Q
"RTN","XMPG",22,0)
DISK S @("I=$O("_%G_I_"))") Q:I=""  S D=$D(^(I)),%0=%0+1 S:D#2 %T=^(I)
"RTN","XMPG",23,0)
 F J=1:1:$L(I) S J=$F(I,Q,J) Q:J=0  S I=$E(I,1,J-1)_Q_$E(I,J,999)
"RTN","XMPG",24,0)
 I I'?1.N&(I'?.N1"."1.N)!(I?1"0".1"."1.N)!(I?.N1".".N1."0") S I=""""_I_""""
"RTN","XMPG",25,0)
 X:D#2 %2 I D>9 D PUSH S %G=%G_I_"," D S,POP
"RTN","XMPG",26,0)
 G DISK
"RTN","XMPG",27,0)
PUSH S R=R+1,I(R)=I,R(R)=%G Q
"RTN","XMPG",28,0)
POP S I=I(R),%G=R(R),R=R-1 Q
"RTN","XMPG",29,0)
K K %,%0,%1,%2,%D,%G,%GQ,%T,D,I,K,POP,Q,R
"RTN","XMPG",30,0)
 Q
"RTN","XMPG",31,0)
 ;
"RTN","XMPG",32,0)
LOAD ;LOAD GLOBAL INTO MESSAGE DEFINED IN <DIE>
"RTN","XMPG",33,0)
 S (DIE,DIF)="^XMB(3.9,XMZ,2," S:'$D(XCNP) XCNP=0 D %
"RTN","XMPG",34,0)
L1 D N G L1:K I %G="" S @(DIE_"0)")="^^"_XCNP_U_XCNP G K
"RTN","XMPG",35,0)
 W "   Loading..." D MOVE G L1
"RTN","XMPG",36,0)
SET S XCNP=XCNP+1,@(DIE_XCNP_",0)")=%D Q
"RTN","XMPG",37,0)
GP S R=1,%G=$E("^",$E(%G)'="^")_%G
"RTN","XMPG",38,0)
 I ",("'[$E(%G,$L(%G)) S %G=%G_$E("(,",%G["("+1)
"RTN","XMPG",39,0)
 Q
"RTN","XMPG",40,0)
N ;GET NAME OF GLOBAL
"RTN","XMPG",41,0)
 U IO(0) S K=0 R !,"Global: ",%G:DTIME S I=$E(%G) Q:I=""
"RTN","XMPG",42,0)
 I I="^",I=%G S %G="" Q
"RTN","XMPG",43,0)
 I I'?1A,I'="%" G N1
"RTN","XMPG",44,0)
 I I'?1A,I'="%" S %G="",K=1 W !,"MUST BEGIN WITH % OR LETTER" Q
"RTN","XMPG",45,0)
 I I="^" S %G=$E(%G,2,99)
"RTN","XMPG",46,0)
 I $P(%G,"(")'?0.1"%".AN D N1 Q
"RTN","XMPG",47,0)
 I $E(%G,$L(%G))=")" S %G="",K=1 W !,"DO NOT END GLOBAL REFERENCE WITH ')'" Q
"RTN","XMPG",48,0)
 S I=$P(%G,"(",2,99) F J=1:1 Q:$P(I,",",J,99)=""  I $P(I,",",J)="" S K=1 W *7,!,"EACH SUBSCRIPT MUST HAVE A VALUE" Q
"RTN","XMPG",49,0)
 F J=1:1 S I=$P($P(%G,"(",2),",",J) Q:I=""  I +I'=I S I=$S($E(I)'=$C(34):1,$E(I,$L(I))'=$C(34):2,$L(I,$C(34))-1#2:3,1:0) I I S K=1 W *7,!,"Invalid entry !  Please enter the EXACT values of the subscripts." Q
"RTN","XMPG",50,0)
 Q
"RTN","XMPG",51,0)
N1 S %G="",K=1 W !,"GLOBAL NAME MUST BEGIN WITH '%' OR LETTER" Q
"RTN","XMPG",52,0)
 ;
"RTN","XMPG",53,0)
ENT ;LOAD UP GLOBAL ENTRY POINT FROM OUTSIDE ROUTINES
"RTN","XMPG",54,0)
 ; Input:
"RTN","XMPG",55,0)
 ; DUZ    Sender's DUZ
"RTN","XMPG",56,0)
 ; XMSUB  Message subject
"RTN","XMPG",57,0)
 ; XMY    Recipient array
"RTN","XMPG",58,0)
 ; XMTEXT String of open global roots separated by semicolon
"RTN","XMPG",59,0)
 ; Output:
"RTN","XMPG",60,0)
 ; XMZ    Message number
"RTN","XMPG",61,0)
 ; Kills:
"RTN","XMPG",62,0)
 ; XMY
"RTN","XMPG",63,0)
 N XMV,XMDF,XMINSTR,XMPIECE
"RTN","XMPG",64,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMPG",65,0)
 S XMDF=1
"RTN","XMPG",66,0)
 S XMINSTR("ADDR FLAGS")="R"
"RTN","XMPG",67,0)
 D INIT^XMVVITAE
"RTN","XMPG",68,0)
 D CRE8XMZ^XMXSEND(XMSUB,.XMZ)
"RTN","XMPG",69,0)
 I $D(XMERR) D  Q
"RTN","XMPG",70,0)
 . S XMMG=^TMP("XMERR",$J,1,"TEXT",1)
"RTN","XMPG",71,0)
 . K XMERR,^TMP("XMERR",$J)
"RTN","XMPG",72,0)
 D NEW^XMP
"RTN","XMPG",73,0)
 D %
"RTN","XMPG",74,0)
 S (DIE,DIF)="^XMB(3.9,XMZ,2,"
"RTN","XMPG",75,0)
 F XMPIECE=1:1:$L(XMTEXT,";") D
"RTN","XMPG",76,0)
 . S %G=$P(XMTEXT,";",XMPIECE)
"RTN","XMPG",77,0)
 . Q:%G=""
"RTN","XMPG",78,0)
 . D MOVE
"RTN","XMPG",79,0)
 K XCNP
"RTN","XMPG",80,0)
 D K
"RTN","XMPG",81,0)
 Q:'$O(^XMB(3.9,XMZ,2,1))
"RTN","XMPG",82,0)
 D ADDRNSND^XMXSEND(XMDUZ,XMZ,.XMY,.XMINSTR)
"RTN","XMPG",83,0)
 K:$D(XMERR) XMERR,^TMP("XMERR",$J)
"RTN","XMPG",84,0)
 K XMY
"RTN","XMPG",85,0)
 Q
"RTN","XMPG",86,0)
MOVE ;MOVE GLOBAL INTO MESSAGE
"RTN","XMPG",87,0)
 S %D="$GLO "_%G D SET
"RTN","XMPG",88,0)
 D EN S %D="$END GLO "_%G D SET
"RTN","XMPG",89,0)
 S $P(@(DIE_"0)"),U,3,4)=XCNP_U_XCNP
"RTN","XMPG",90,0)
 Q
"RTN","XMPG",91,0)
% ;SET UP EXECUTABLE STRINGS
"RTN","XMPG",92,0)
 S %1="S %D=D D SET S %D=@D D SET"
"RTN","XMPG",93,0)
 S %2="S %D=%G_I_"")"" D SET S %D=%T D SET W:'(%0#25)&'$D(ZTQUEUED) ""."""
"RTN","XMPG",94,0)
 Q
"RTN","XMPH")
0^93^B8447654
"RTN","XMPH",1,0)
XMPH ;(WASH ISC)/THM/CAP-SELECT ROU/PRT PACKMAN MESSAGE ;05/21/99  08:53
"RTN","XMPH",2,0)
 ;;7.1;MailMan;**34,50**;Jun 02, 1994
"RTN","XMPH",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMPH",4,0)
 ; LOAD   XMPROU
"RTN","XMPH",5,0)
 ;USER ENTRY LIST OF ROUTINES
"RTN","XMPH",6,0)
 Q
"RTN","XMPH",7,0)
DEV ;GET OUTPUT DEVICE / QUEUE PACKMAN PRINT
"RTN","XMPH",8,0)
 N I,ZTSAVE
"RTN","XMPH",9,0)
 F I="DIE","XMZ","XMDUZ","XMV(","XMP2","XMR","XCF" S ZTSAVE(I)=""
"RTN","XMPH",10,0)
 D EN^XUTMDEVQ("ZTSK^XMPH","MailMan: PackMan Print",.ZTSAVE)
"RTN","XMPH",11,0)
 Q
"RTN","XMPH",12,0)
ZTSK ;QUEUED PRINT COMES HERE
"RTN","XMPH",13,0)
 D NOW^%DTC S X=$E(%,4,5)_"/"_$E(%,6,7)_"/"_$E(%,2,3)_" @ "_$E(%,9,10)_":"_$E("00",1,2-$L($E(%,11,12)))_$E(%,11,12)
"RTN","XMPH",14,0)
 I XCF=3 D
"RTN","XMPH",15,0)
 . D TOP^XMPC
"RTN","XMPH",16,0)
 E  I $G(IOST)'["C-" D
"RTN","XMPH",17,0)
 . W !,"PackMan Title Page",!!,"PRINTED FOR: ",XMV("NAME")
"RTN","XMPH",18,0)
 . W !,"Date/Time: ",X,!
"RTN","XMPH",19,0)
 D S^XMP2
"RTN","XMPH",20,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","XMPH",21,0)
 Q
"RTN","XMPH",22,0)
LOAD ;LOAD ROUTINE FROM <X> INTO GLOBAL <DIF>_I_",0)"
"RTN","XMPH",23,0)
 ;
"RTN","XMPH",24,0)
 ;DIFROM NEEDS A MESSAGE NUMBER
"RTN","XMPH",25,0)
 ;
"RTN","XMPH",26,0)
 S (DIE,DIF)="^XMB(3.9,XMZ,2,"
"RTN","XMPH",27,0)
 I $D(DIFROM) W !!,"Please enter the names of the routines you wish to load into this message.",!!,"Only routines will be loaded."
"RTN","XMPH",28,0)
 I  W !!,"INITs, will be sent automatically.",!!
"RTN","XMPH",29,0)
 K ^UTILITY($J#256) X ^%ZOSF("RSEL") Q:$O(^UTILITY($J,0))=""
"RTN","XMPH",30,0)
 S X=0 S:'$D(XCNP) XCNP=0
"RTN","XMPH",31,0)
L S X=$O(^UTILITY($J,X)) Q:X=""  D LL
"RTN","XMPH",32,0)
 G L
"RTN","XMPH",33,0)
LL N XMHOLD S XMHOLD=XCNP
"RTN","XMPH",34,0)
 W !,"Loading ",X S DIF=DIE,XCNP=XCNP+1,@(DIF_XCNP_",0)")="$ROU "_X
"RTN","XMPH",35,0)
 X ^%ZOSF("LOAD") S $P(@(DIF_"0)"),U,3,4)=XCNP_U_XCNP
"RTN","XMPH",36,0)
 S @(DIF_XCNP_",0)")="$END ROU "_X
"RTN","XMPH",37,0)
 ;
"RTN","XMPH",38,0)
 ;Check for control characters in text
"RTN","XMPH",39,0)
 F XMHOLD=XMHOLD:1:XCNP I $G(@(DIF_XMHOLD_",0)"))?.E1C.E D
"RTN","XMPH",40,0)
 . W !!,*7,"Errored out loading routine ",X," - control character in text."
"RTN","XMPH",41,0)
 . W !,"Use ^XINDEX to identify it, then remove from routine and try again.",!!
"RTN","XMPH",42,0)
 . D KILLMSG^XMXUTIL(XMZ)
"RTN","XMPH",43,0)
 . S XQCH="HALT" G H^XUS
"RTN","XMPH",44,0)
 Q
"RTN","XMPH",45,0)
 ;
"RTN","XMPH",46,0)
PACK ;LOAD ENTIRE PACKAGE (ROUTINES ONLY)
"RTN","XMPH",47,0)
 ;
"RTN","XMPH",48,0)
 S:'$D(XCNP) XCNP=0
"RTN","XMPH",49,0)
 I '$D(DIFROM) S DIC="^DIC(9.4,",DIC(0)="AEQM" D ^DIC Q:Y<0  S DA=+Y
"RTN","XMPH",50,0)
 S XMROU="^DIC(9.4,"_DA_",2,""B"","
"RTN","XMPH",51,0)
P S (XMA0,XMB0)="",(DIE,DIF)="^XMB(3.9,"_XMZ_",2,"
"RTN","XMPH",52,0)
 G P9:'$D(^%ZOSF("TEST")) S XMB=^("TEST")
"RTN","XMPH",53,0)
P1 S XMA0=$O(@(XMROU_"XMA0)")) I $L(XMA0) D TST G P1
"RTN","XMPH",54,0)
 G ER:XMB0
"RTN","XMPH",55,0)
P9 S XMA0=$O(@(XMROU_"XMA0)")) G Q:XMA0="" S X=XMA0 D LL G P9
"RTN","XMPH",56,0)
 ;
"RTN","XMPH",57,0)
XMROU ;LOAD ROUTINES (FROM XMD)
"RTN","XMPH",58,0)
 ;
"RTN","XMPH",59,0)
 S XCNP=XCNP+1,$P(^XMB(3.9,XMZ,2,0),U,3,4)=XCNP_U_XCNP,^(XCNP,0)="$END TXT"
"RTN","XMPH",60,0)
 S XMROU="XMROU(" G P
"RTN","XMPH",61,0)
 ;
"RTN","XMPH",62,0)
TST S X=XMA0 X XMB Q:$T  S XMB0=1 W !,"Program ",X," does not exist." Q
"RTN","XMPH",63,0)
ER W !!,"<< Correct the errors listed above.",!,"Then you may try again.",!
"RTN","XMPH",64,0)
Q K XMA0,XMB0,XMB,XMROU,DIE,DIF Q
"RTN","XMPSEC")
0^117^B22927463
"RTN","XMPSEC",1,0)
XMPSEC ;ISC-SF/GMB-PACKMAN SECURITY ;01/22/99  12:50
"RTN","XMPSEC",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMPSEC",3,0)
 ; Code rewritten.  Originally (ISC-WASH/GM/CAP)
"RTN","XMPSEC",4,0)
 ; Includes the former ^XMASEC (ISC-WASH/GM)
"RTN","XMPSEC",5,0)
 N I,XMTVAL,XMSTR
"RTN","XMPSEC",6,0)
 W !,"This message has been secured!"
"RTN","XMPSEC",7,0)
 S XMPASS=1
"RTN","XMPSEC",8,0)
 I '$D(XMSECURE),'$$KEYOK^XMJMCODE(XMZ,$P(XMA0,U,10)) S XMPASS=0 Q
"RTN","XMPSEC",9,0)
 W !,"Checking the package's integrity... (This may take some time.)",!
"RTN","XMPSEC",10,0)
 S I=$O(^XMB(3.9,XMZ,2,.999))
"RTN","XMPSEC",11,0)
 I $P(^(I,0),U,3,9999)'=$$ENCSTR^XMJMCODE("$SEC^3") S XMPASS=0 D FAIL Q
"RTN","XMPSEC",12,0)
 S I=1,XMTVAL=0
"RTN","XMPSEC",13,0)
P0 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  D
"RTN","XMPSEC",14,0)
 . Q:'$D(^(I,0))  ; naked reference to line above
"RTN","XMPSEC",15,0)
 . S XMSTR=^(0)   ; naked reference to line above
"RTN","XMPSEC",16,0)
 . I $E(XMSTR)="$" D CSCRAM(XMSTR) Q
"RTN","XMPSEC",17,0)
 . I 'XMB0 W:$X>75 ! W "." Q
"RTN","XMPSEC",18,0)
 . D VAL(XMSTR,.XMTVAL)
"RTN","XMPSEC",19,0)
 W !,"<<< DONE >>>",!
"RTN","XMPSEC",20,0)
 D:'XMPASS FAIL
"RTN","XMPSEC",21,0)
 Q
"RTN","XMPSEC",22,0)
VAL(XMSTR,XMTVAL) ;
"RTN","XMPSEC",23,0)
 N XMLVAL,I
"RTN","XMPSEC",24,0)
 S XMLVAL=0
"RTN","XMPSEC",25,0)
 F I=1:1:$L(XMSTR) S XMLVAL=$A(XMSTR,I)*I+XMLVAL
"RTN","XMPSEC",26,0)
 S XMTVAL=XMTVAL+XMLVAL+$L(XMSTR)
"RTN","XMPSEC",27,0)
 Q
"RTN","XMPSEC",28,0)
CSCRAM(XMSTR) ;
"RTN","XMPSEC",29,0)
 S XMB0=$S(XMSTR'["TXT":1,1:0)
"RTN","XMPSEC",30,0)
 I XMSTR["ROU",$P(XMSTR," ",2)?1"^".AN1"NTEG" D CNTEG Q
"RTN","XMPSEC",31,0)
 I XMSTR'["$END"!($E(XMSTR,1,8)="$END TXT"&'XMB0) S XMTVAL=0,XMA0=$P(XMSTR," ",2) Q
"RTN","XMPSEC",32,0)
 W "." I $P(XMSTR," ",2)="MESSAGE" Q
"RTN","XMPSEC",33,0)
 S XMA0=$S(XMSTR["$GLB":$P(XMSTR,U,2),XMSTR["$GLO":$P(XMSTR,U,2),1:$P($P(XMSTR,U)," ",3))
"RTN","XMPSEC",34,0)
 I XMSTR["ROU" W:$X>70 ! W $J($E(XMA0,1,9),10)
"RTN","XMPSEC",35,0)
 E  W !,$P($E(XMSTR,5,99),U)
"RTN","XMPSEC",36,0)
 ;CHECK SUM EVALUTAION
"RTN","XMPSEC",37,0)
 Q:$P(XMSTR,U,2,999)=$$ENCSTR^XMJMCODE("$SEC"_U_(XMTVAL+XMPAKMAN("XMRW")))
"RTN","XMPSEC",38,0)
 W !!,"******** ",$J(XMA0,10)," has failed !!!!!!!!!!!",!!
"RTN","XMPSEC",39,0)
 S (XMTVAL,XMPASS)=0
"RTN","XMPSEC",40,0)
 Q
"RTN","XMPSEC",41,0)
FAIL ;
"RTN","XMPSEC",42,0)
 N XMTEXT,XMTO,XMFROM
"RTN","XMPSEC",43,0)
 S:'$D(XMPASS) XMPASS=0
"RTN","XMPSEC",44,0)
 S XMTEXT(1,0)="A package with the subject: "_$P(^XMB(3.9,XMZ,0),U)
"RTN","XMPSEC",45,0)
 S XMTEXT(2,0)="failed the security check during installation"_$S($D(XMPASS):".",1:", but was installed anyway.")
"RTN","XMPSEC",46,0)
 S XMFROM=$P(^XMB(3.9,XMZ,0),U,2)
"RTN","XMPSEC",47,0)
 I $G(XMFROM)["<" S XMTO(P($P(XMFROM,"<",2),">"))=""
"RTN","XMPSEC",48,0)
 S XMTO(XMDUZ)=""
"RTN","XMPSEC",49,0)
 D SENDMSG^XMXSEND(XMDUZ,"Failed Security","XMTEXT",.XMTO)
"RTN","XMPSEC",50,0)
 Q
"RTN","XMPSEC",51,0)
CHECK ;FROM XMP2
"RTN","XMPSEC",52,0)
 Q:XCF'=2
"RTN","XMPSEC",53,0)
 I "$DDD$RTN$DIE$DIB$DIP$ROU$GLB$GLO$OPT$HEL$BUL$KEY$PKG$FUN"[$E(X,1,4),X[U D  Q
"RTN","XMPSEC",54,0)
 . D:'$D(XMPASS) FAIL
"RTN","XMPSEC",55,0)
 . S X=$P(X,U)_$P(X,U,2)
"RTN","XMPSEC",56,0)
 . S:$P(X," ",2)?.EU1"INIT"&($E(X,1,4)="$ROU") XMINIT=U_$P(X," ",2)
"RTN","XMPSEC",57,0)
 I $E(X,1,12)="$END MESSAGE",'$D(XMPASS) D FAIL
"RTN","XMPSEC",58,0)
 Q
"RTN","XMPSEC",59,0)
CNTEG ; Skip processing XXXINTEG program
"RTN","XMPSEC",60,0)
 S XMINTEG=$P(X," ",2)
"RTN","XMPSEC",61,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  Q:"$END"[$E(^(I,0),1,4)
"RTN","XMPSEC",62,0)
 Q
"RTN","XMPSEC",63,0)
PSECURE(XMZ,XMABORT) ; Secure the PackMan message
"RTN","XMPSEC",64,0)
 N XMKEY,XMHINT,XMNO,XMSECURE
"RTN","XMPSEC",65,0)
 S XMABORT=0
"RTN","XMPSEC",66,0)
 D PQSEC(.XMNO,.XMABORT) Q:XMNO!XMABORT
"RTN","XMPSEC",67,0)
 D CRE8KEY^XMJMCODE(.XMKEY,.XMHINT,.XMABORT) Q:XMABORT
"RTN","XMPSEC",68,0)
 W !!,"Securing the message now.  This may take a while.",!
"RTN","XMPSEC",69,0)
 D LOADCODE^XMJMCODE
"RTN","XMPSEC",70,0)
 D ADJUST^XMJMCODE(.XMKEY)
"RTN","XMPSEC",71,0)
 D PSTORE(XMZ,XMKEY,XMHINT)
"RTN","XMPSEC",72,0)
 D PSECIT(XMZ)
"RTN","XMPSEC",73,0)
 Q
"RTN","XMPSEC",74,0)
PQSEC(XMOK,XMABORT) ;
"RTN","XMPSEC",75,0)
 N DIR,Y,X
"RTN","XMPSEC",76,0)
 S DIR(0)="Y"
"RTN","XMPSEC",77,0)
 S DIR("A")="Do you wish to secure this message"
"RTN","XMPSEC",78,0)
 S DIR("B")="NO"
"RTN","XMPSEC",79,0)
 S DIR("?",1)="If you answer yes, this message will be secured"
"RTN","XMPSEC",80,0)
 S DIR("?")="to ensure that what you send is what is actually received."
"RTN","XMPSEC",81,0)
 D ^DIR
"RTN","XMPSEC",82,0)
 I $D(DIRUT) S XMABORT=1
"RTN","XMPSEC",83,0)
 S XMNO='Y
"RTN","XMPSEC",84,0)
 Q
"RTN","XMPSEC",85,0)
PSTORE(XMZ,XMKEY,XMHINT) ;
"RTN","XMPSEC",86,0)
 N XMFDA,XMIENS
"RTN","XMPSEC",87,0)
 S XMIENS=XMZ_","
"RTN","XMPSEC",88,0)
 S XMFDA(3.9,XMIENS,1.8)=$S($G(XMHINT)="":" ",1:XMHINT)
"RTN","XMPSEC",89,0)
 S XMFDA(3.9,XMIENS,1.85)="1"_$$ENCSTR^XMJMCODE(XMKEY)
"RTN","XMPSEC",90,0)
 D FILE^DIE("","XMFDA")
"RTN","XMPSEC",91,0)
 Q
"RTN","XMPSEC",92,0)
PSECIT(XMZ) ;
"RTN","XMPSEC",93,0)
 N XMSTR,I,XMTVAL
"RTN","XMPSEC",94,0)
 S I=$O(^XMB(3.9,XMZ,2,.999))
"RTN","XMPSEC",95,0)
 S XMSTR=^XMB(3.9,XMZ,2,I,0)
"RTN","XMPSEC",96,0)
 S XMSTR=$P(XMSTR,"on")_"at "_$P(XMSTR," at ",3)_" on"_$P($P(XMSTR,"on",2)," at",1)
"RTN","XMPSEC",97,0)
 S ^XMB(3.9,XMZ,2,I,0)=XMSTR_U_$$ENCSTR^XMJMCODE("$SEC^3")
"RTN","XMPSEC",98,0)
 S I=0
"RTN","XMPSEC",99,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  D
"RTN","XMPSEC",100,0)
 . Q:'$D(^(I,0))   ; naked reference to line above
"RTN","XMPSEC",101,0)
 . S XMSTR=^(0)    ; naked reference to line above
"RTN","XMPSEC",102,0)
 . I $E(XMSTR)="$" D PSCRAM(XMZ,.I,XMSTR,.XMTVAL) Q
"RTN","XMPSEC",103,0)
 . D VAL(XMSTR,.XMTVAL)
"RTN","XMPSEC",104,0)
 S XMSTR(1)="$END MESSAGE"
"RTN","XMPSEC",105,0)
 D MOVEBODY^XMXSEND(XMZ,"XMSTR","A")
"RTN","XMPSEC",106,0)
 Q
"RTN","XMPSEC",107,0)
PSCRAM(XMZ,I,XMSTR,XMTVAL) ;
"RTN","XMPSEC",108,0)
 I $E(XMSTR,1,4)="$END" S $P(^XMB(3.9,XMZ,2,I,0),U,2)=$$ENCSTR^XMJMCODE("$SEC"_U_(XMTVAL+XMPAKMAN("XMRW"))) Q
"RTN","XMPSEC",109,0)
 I $E(XMSTR,1,4)="$ROU" D  I $P(XMSTR," ",2)?.AN1"NTEG" D PNTEG(XMZ,.I,XMSTR) Q
"RTN","XMPSEC",110,0)
 . W:$X>70 !
"RTN","XMPSEC",111,0)
 . W $J($P(XMSTR," ",2),10)
"RTN","XMPSEC",112,0)
 S XMTVAL=0
"RTN","XMPSEC",113,0)
 S $P(^XMB(3.9,XMZ,2,I,0)," ",2)=$S($E(XMSTR,1,4)'="$KID":U,1:"")_$P(XMSTR," ",2)
"RTN","XMPSEC",114,0)
 Q
"RTN","XMPSEC",115,0)
PNTEG(XMZ,I,XMSTR) ;
"RTN","XMPSEC",116,0)
 S $P(^XMB(3.9,XMZ,2,I,0)," ",2)=U_$P(XMSTR," ",2)
"RTN","XMPSEC",117,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  S XMSTR=^(I,0) Q:"$END"[$E(XMSTR_" ",1,4)  D
"RTN","XMPSEC",118,0)
 . S:XMSTR?.UN1" ;;".N $P(^XMB(3.9,XMZ,2,I,0),";",3)=$$ENCSTR^XMJMCODE($P(XMSTR,";",3)+XMPAKMAN("XMRW"))
"RTN","XMPSEC",119,0)
 Q
"RTN","XMR")
0^94^B68266904
"RTN","XMR",1,0)
XMR ;(WASH ISC)/THM/CAP-SMTP RECEIVER [ARPANET RFC 821] ;05/17/99  13:21
"RTN","XMR",2,0)
 ;;7.1;MailMan;**30,34,65,50**;Jun 02, 1994
"RTN","XMR",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMR",4,0)
 ; BAT      XMR-SEQ-RECEIVE
"RTN","XMR",5,0)
 ; TASKER   XMR-UCI-RCV
"RTN","XMR",6,0)
 K XMSDOM,XMRDOM
"RTN","XMR",7,0)
ENT ; INITIALIZE
"RTN","XMR",8,0)
 D ENT1
"RTN","XMR",9,0)
 I '$D(XMDUZ) S XMDUZ=.5
"RTN","XMR",10,0)
 I '$D(XMBT) S XMBT=0
"RTN","XMR",11,0)
 I $G(XMCHAN)="" S XMCHAN="SCP"
"RTN","XMR",12,0)
 D OPEN^XML I $G(ER)=1 D ^%ZISC:IO'=$G(IO(0)) W !,"Open of device unsuccessful !",*7 Q
"RTN","XMR",13,0)
 S:'$D(XM) XM=""
"RTN","XMR",14,0)
 I 'XMBT D  Q
"RTN","XMR",15,0)
 . X ^%ZOSF("EOFF")
"RTN","XMR",16,0)
 . S X=255
"RTN","XMR",17,0)
 . X ^%ZOSF("RM"),^%ZOSF("TYPE-AHEAD")
"RTN","XMR",18,0)
 . D INT
"RTN","XMR",19,0)
 ;FOR BATCH PROCESSING (To Tape or Host File)
"RTN","XMR",20,0)
 U IO D INT U IO(0)
"RTN","XMR",21,0)
 D ^%ZISC
"RTN","XMR",22,0)
 Q
"RTN","XMR",23,0)
ENT1 ; SEND & RECEIVE: Get # to store script in ^UTILITY/^%ZOSF(NODES)
"RTN","XMR",24,0)
 I '$D(XMR0) D
"RTN","XMR",25,0)
 . N X
"RTN","XMR",26,0)
 . L +^TMP("XMC",0)
"RTN","XMR",27,0)
 . S X=+$G(^TMP("XMC",0))+1#100
"RTN","XMR",28,0)
 . S:X=0 X=1
"RTN","XMR",29,0)
 . S (XMR0,^TMP("XMC",0))=X
"RTN","XMR",30,0)
 . L -^TMP("XMC",0)
"RTN","XMR",31,0)
 . K ^TMP("XMC",XMR0)
"RTN","XMR",32,0)
 I '$D(XMS0C),$P($G(^XMB(1,1,0)),U,14) S XMS0C=1
"RTN","XMR",33,0)
 K XMDECNET
"RTN","XMR",34,0)
 Q
"RTN","XMR",35,0)
INT ; BEGINNING OF INTERPRETER
"RTN","XMR",36,0)
 ; The following variables are used in here only.  They are not
"RTN","XMR",37,0)
 ; 'new'd because this routine may be called recursively via the
"RTN","XMR",38,0)
 ; TURN command, which alternates sending and receiving.
"RTN","XMR",39,0)
 K I,XMINSTR,XMNVFROM,X,XMRXMZ,XMSG,XMEC,XMCONT,XMSTATE,XMRVAL
"RTN","XMR",40,0)
 K XMREMID,XMZIENS,XMZFDA,XMZ,XMINST,XMP,XMCMD,XMHELO
"RTN","XMR",41,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMR",42,0)
 S XMEC=0,XMCONT="^HELP^NOOP^RSET^QUIT^VRFY^EXPN^STAT^CHRS^ECHO^"
"RTN","XMR",43,0)
 I '$D(XMS0C),$P($G(^XMB(1,1,0)),U,14) S XMS0C=1
"RTN","XMR",44,0)
 S XMTRAN="Transcript Date: "_$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E(DT,2,3) D TRAN^XMC1
"RTN","XMR",45,0)
 S XMSTATE="^HELO^QUIT^"
"RTN","XMR",46,0)
 I 'XMBT D
"RTN","XMR",47,0)
 . D BUFLUSH^XML
"RTN","XMR",48,0)
 . W:'$D(XMNO220) 220
"RTN","XMR",49,0)
 . H 2
"RTN","XMR",50,0)
 . S XMSG="220 "_$G(^XMB("NETNAME"))_" MailMan "_$P($T(XMR+1),";",3)_" ready" X XMSEN
"RTN","XMR",51,0)
 F  D  Q:ER!($G(XMCMD)="QUIT")
"RTN","XMR",52,0)
 . S XMTRAN="Waiting for input" D TRAN^XMC1
"RTN","XMR",53,0)
 . S XMSTIME=300 X XMREC K XMSTIME Q:ER
"RTN","XMR",54,0)
 . S XMP=XMRG
"RTN","XMR",55,0)
 . F I=$C(9),"  " F  Q:XMP'[I  S XMP=$P(XMP,I,1)_" "_$P(XMP,I,2,999) ; strip tabs / extra blanks
"RTN","XMR",56,0)
 . S XMCMD=$$UP^XLFSTR($P(XMP," ")),XMP=$P(XMP," ",2,999)
"RTN","XMR",57,0)
 . Q:XMCMD=""
"RTN","XMR",58,0)
 . I XMSTATE_XMCONT'[(U_XMCMD_U) D ERRCMD Q
"RTN","XMR",59,0)
 . I $T(@XMCMD)="" S XMSG="502 Command not implemented" X XMSEN Q
"RTN","XMR",60,0)
 . D @XMCMD
"RTN","XMR",61,0)
 I $G(XMCMD)="QUIT"!ER,$G(XMZ) D ZAPIT^XMXMSGS2(.5,.95,XMZ)
"RTN","XMR",62,0)
 S:$G(XMINST) $P(^XMBS(4.2999,XMINST,3),U,1,6)="^^^^^"
"RTN","XMR",63,0)
 Q
"RTN","XMR",64,0)
CHRS ;;Christen this domain syntax: CHRS <parent>,<child>
"RTN","XMR",65,0)
 N XMPARENT,XMCHILD,X,Y,DIC
"RTN","XMR",66,0)
 S XMPARENT=$P(XMP,",",1),XMCHILD=$P(XMP,",",2)
"RTN","XMR",67,0)
 S X=XMPARENT
"RTN","XMR",68,0)
 S DIC=4.2,DIC(0)="MF"
"RTN","XMR",69,0)
 D ^DIC
"RTN","XMR",70,0)
 I +Y'=$P(^XMB(1,1,0),U,3) S XMSG="550 Parent name does not match locally initialized parent name" X XMSEN Q
"RTN","XMR",71,0)
 S X=XMCHILD
"RTN","XMR",72,0)
 S DIC=4.2
"RTN","XMR",73,0)
 D ^DIC
"RTN","XMR",74,0)
 I +Y'=$P(^XMB(1,1,0),U,1) S XMSG="550 Child name does not match locally initialized domain name" X XMSEN Q
"RTN","XMR",75,0)
 S ^XMB("NETNAME")=$P(Y,U,2)
"RTN","XMR",76,0)
 S $P(^XMB(1,1,0),U,4)=DT
"RTN","XMR",77,0)
 S XMSG="250 Local domain "_$P(Y,U,2)_" successfully christened by parent "_XMPARENT X XMSEN
"RTN","XMR",78,0)
 Q
"RTN","XMR",79,0)
DATA ;;TEXT / ASSUMES VALID RECIPIENT
"RTN","XMR",80,0)
 D DATA^XMR1
"RTN","XMR",81,0)
 Q
"RTN","XMR",82,0)
ECHO ;;ECHO TEST
"RTN","XMR",83,0)
 S XMSG="314 Echo mode. Received messages will be echoed until a single period is received" X XMSEN Q:ER
"RTN","XMR",84,0)
 F  X XMREC Q:ER  Q:XMRG="."  S XMSG=XMRG X XMSEN Q:ER
"RTN","XMR",85,0)
 Q:ER
"RTN","XMR",86,0)
 S XMSG="250 End of echo mode" X XMSEN
"RTN","XMR",87,0)
 Q
"RTN","XMR",88,0)
EXPN ;;EXPAND MAILING LIST
"RTN","XMR",89,0)
 N XMIEN,XMPTR,XMCNT,XMMEMBER,XMNETNAM,Y,X,DIC
"RTN","XMR",90,0)
 S X=XMP
"RTN","XMR",91,0)
 I X["<" S X=$P($P(X,"<",2),">")
"RTN","XMR",92,0)
 I "^G.^g.^"[(U_$E(X,1,2)_U) S X=$E(X,3,999)
"RTN","XMR",93,0)
 S DIC="^XMB(3.8,",DIC(0)="MF"
"RTN","XMR",94,0)
 D ^DIC I Y<0 S XMSG="550 mail group not found" X XMSEN Q
"RTN","XMR",95,0)
 S XMIEN=+Y,XMCNT=0,XMNETNAM=^XMB("NETNAME"),XMPTR=""
"RTN","XMR",96,0)
 F  S XMPTR=$O(^XMB(3.8,XMIEN,1,"B",XMPTR)) Q:'XMPTR  D  Q:ER
"RTN","XMR",97,0)
 . S XMMEMBER=$P($G(^VA(200,XMPTR,0)),U) Q:XMMEMBER=""
"RTN","XMR",98,0)
 . S XMCNT=XMCNT+1
"RTN","XMR",99,0)
 . S XMSG="250 <"_$TR(XMMEMBER,". ,","+_.")_"@"_XMNETNAM_">" X XMSEN
"RTN","XMR",100,0)
 I 'XMCNT S XMSG="250 No LOCAL members in group" X XMSEN Q:ER
"RTN","XMR",101,0)
 S XMSG="250 List SHOWS local members only, not member groups, remote members or distribution lists." X XMSEN
"RTN","XMR",102,0)
 Q
"RTN","XMR",103,0)
HELO ;;HELO COMMAND
"RTN","XMR",104,0)
 D HELO^XMR0B
"RTN","XMR",105,0)
 Q
"RTN","XMR",106,0)
HELP ;;DISPLAY HELP MESSAGE
"RTN","XMR",107,0)
 D HELP^XMR2
"RTN","XMR",108,0)
 Q
"RTN","XMR",109,0)
MAIL ;;START
"RTN","XMR",110,0)
 D:$D(XMRVAL) VALSET^XMR0B(XMINST,.XMRVAL)
"RTN","XMR",111,0)
 D MAIL^XMR0B
"RTN","XMR",112,0)
 Q
"RTN","XMR",113,0)
MESS ;;
"RTN","XMR",114,0)
 D MESS^XMR0A
"RTN","XMR",115,0)
 Q
"RTN","XMR",116,0)
NOOP ;;NO OPERATION FOR TESTING
"RTN","XMR",117,0)
 S XMSG="250 OK" X XMSEN
"RTN","XMR",118,0)
 Q
"RTN","XMR",119,0)
QUIT ;;
"RTN","XMR",120,0)
 D:$D(XMRVAL) VALSET^XMR0B(XMINST,.XMRVAL)
"RTN","XMR",121,0)
 S XMSG="221 "_$G(^XMB("NETNAME"))_" Service closing transmission channel" X XMSEN
"RTN","XMR",122,0)
 Q
"RTN","XMR",123,0)
RCPT ;;
"RTN","XMR",124,0)
 S XMP=$P(XMP,":",2,999) I XMP="" S XMSG="501 Invalid forward path specification" X XMSEN Q
"RTN","XMR",125,0)
 I XMP["> FWD BY:" S XMINSTR("NET FWD BY")=$P(XMP,"> FWD BY:",2)
"RTN","XMR",126,0)
 E  K XMINSTR("NET FWD BY")
"RTN","XMR",127,0)
 Q:$$LOOKUP(XMP,.XMINSTR)=0
"RTN","XMR",128,0)
 S XMSG="250 'RCPT' accepted" X XMSEN
"RTN","XMR",129,0)
 S XMSTATE="^DATA^RCPT"
"RTN","XMR",130,0)
 Q
"RTN","XMR",131,0)
LOOKUP(XMTO,XMINSTR) ;
"RTN","XMR",132,0)
 N XMFULL,XMRESTR
"RTN","XMR",133,0)
 S XMRESTR("NET RECEIVE")=$G(XMNVFROM)
"RTN","XMR",134,0)
 S XMTO=$TR($P($P(XMTO,">",1),"<",2,99),"<")  ; I've seen <<user@site> and <<user@site>>
"RTN","XMR",135,0)
 I $E(XMTO,1)'="""",XMTO?1"@"1.E1":"1.E1"@"1.E S XMTO=$P(XMTO,":",2)
"RTN","XMR",136,0)
 D CHKADDR^XMXADDR(.5,XMTO,.XMINSTR,.XMRESTR,.XMFULL)
"RTN","XMR",137,0)
 I '$D(XMERR),$G(XMFULL)'="SHARED,MAIL" Q XMFULL
"RTN","XMR",138,0)
 I $G(XMFULL)="SHARED,MAIL" D
"RTN","XMR",139,0)
 . S XMSG="550 'Shared,Mail' user may not receive network mail."
"RTN","XMR",140,0)
 . K ^TMP("XMY",$J,.6),^TMP("XMY0",$J,"SHARED,MAIL")
"RTN","XMR",141,0)
 E  D
"RTN","XMR",142,0)
 . S XMSG="550 "_^TMP("XMERR",$J,XMERR,"TEXT",1)
"RTN","XMR",143,0)
 . K XMERR,^TMP("XMERR",$J)
"RTN","XMR",144,0)
 X XMSEN
"RTN","XMR",145,0)
 Q 0
"RTN","XMR",146,0)
RSET ;;RESET STATE TABLES
"RTN","XMR",147,0)
 N X,XMI,Y,DIC
"RTN","XMR",148,0)
 I $G(XMZ) D
"RTN","XMR",149,0)
 . I $D(^XMB(3.9,XMZ,0)),'$D(^XMB(3.9,XMZ,1,0)) D KILLMSG^XMXUTIL(XMZ)
"RTN","XMR",150,0)
 . I $D(^XMB(3.7,.5,2,.95,1,XMZ)) D ZAPIT^XMXMSGS2(.5,.95,XMZ)
"RTN","XMR",151,0)
 S XMSTATE="HELO^MAIL^"
"RTN","XMR",152,0)
 K XMZ,XMZFDA,XMZIENS,^TMP("XMY",$J),^TMP("XMY0",$J)
"RTN","XMR",153,0)
 I XMP="" S XMSG="250 " X XMSEN Q
"RTN","XMR",154,0)
 S DIC="^DIC(3.4,",DIC(0)="Z"
"RTN","XMR",155,0)
 F XMI=1:1:$L(XMP,",") S X=$P(XMP,",",XMI) D ^DIC Q:Y>0
"RTN","XMR",156,0)
 I '$G(Y) S XMSG="250 " X XMSEN Q
"RTN","XMR",157,0)
 S XMSG="250 "_$P(Y,U,2) X XMSEN
"RTN","XMR",158,0)
 S XMCHAN=+Y
"RTN","XMR",159,0)
 D G2^XML
"RTN","XMR",160,0)
 Q
"RTN","XMR",161,0)
STAT ;;
"RTN","XMR",162,0)
 N K,I,J
"RTN","XMR",163,0)
 I $G(XMNVFROM)'="" S XMSG="211-Current reverse path is: "_XMNVFROM X XMSEN Q:ER
"RTN","XMR",164,0)
 I $G(XMINST)'="" S XMSG="211-Current sender is: "_$P(^DIC(4.2,XMINST,0),U) X XMSEN Q:ER
"RTN","XMR",165,0)
 S XMSG="211-Acceptable commands at the moment are: " X XMSEN Q:ER
"RTN","XMR",166,0)
 S XMSG="211-"
"RTN","XMR",167,0)
 S K=XMSTATE_XMCONT F I=1:1:$L(K,U) S J=$P(K,U,I) I J'="" S XMSG=XMSG_J_" "
"RTN","XMR",168,0)
 X XMSEN Q:ER
"RTN","XMR",169,0)
 I $D(XMZ),$O(^XMB(3.9,XMZ,2,0))>0 D  Q:ER
"RTN","XMR",170,0)
 . S J=0
"RTN","XMR",171,0)
 . S XMSG="211-Current text buffer is:" X XMSEN Q:ER
"RTN","XMR",172,0)
 . F  S J=$O(^XMB(3.9,XMZ,2,J)) Q:J'>0  S XMSG="211-"_J_"  "_^(J,0) X XMSEN Q:ER
"RTN","XMR",173,0)
 Q:ER
"RTN","XMR",174,0)
 I $O(^TMP("XMY",$J,""))'="" D  Q:ER
"RTN","XMR",175,0)
 . S J=""
"RTN","XMR",176,0)
 . S XMSG="211-Current recipients are: " X XMSEN Q:ER
"RTN","XMR",177,0)
 . F  S J=$O(^TMP("XMY",$J,J)) Q:J=""  S XMSG="211-"_$S('J:J,1:$P(^VA(200,J,0),U)) X XMSEN Q:ER
"RTN","XMR",178,0)
 Q:ER
"RTN","XMR",179,0)
 S XMSG="211 OK" X XMSEN
"RTN","XMR",180,0)
 Q
"RTN","XMR",181,0)
TURN ;;
"RTN","XMR",182,0)
 D:$D(XMRVAL) VALSET^XMR0B(XMINST,.XMRVAL)
"RTN","XMR",183,0)
 ;TURN AROUND PROTOCOL
"RTN","XMR",184,0)
 S XMINST=$G(XMRDOM)
"RTN","XMR",185,0)
 I $F("Yy",$P(^DIC(4.2,XMINST,0),U,16))>1 S XMSG="502 "_^XMB("NETNAME")_" has TURN disabled." X XMSEN Q
"RTN","XMR",186,0)
 I '$O(^XMB(3.7,.5,2,XMINST+1000,1,0)) S XMSG="502 "_^XMB("NETNAME")_" has no messages to export" X XMSEN Q
"RTN","XMR",187,0)
 I $P(^DIC(4.2,XMINST,0),U)'=$G(XMHELO("XMP")) S XMSG="502 TURN command rejected." X XMSEN Q
"RTN","XMR",188,0)
 S XMSG="250 "_^XMB("NETNAME")_" has messages to export" X XMSEN Q:ER
"RTN","XMR",189,0)
 G ^XMS
"RTN","XMR",190,0)
VRFY ;;VERIFY USER EXISTS
"RTN","XMR",191,0)
 N XMNAME
"RTN","XMR",192,0)
 S XMINSTR("ADDR FLAGS")="X" ; Do not expand
"RTN","XMR",193,0)
 S XMNAME=$$LOOKUP(XMP,.XMINSTR)
"RTN","XMR",194,0)
 K XMINSTR("ADDR FLAGS")
"RTN","XMR",195,0)
 Q:XMNAME=0
"RTN","XMR",196,0)
 S XMSG="250 "_XMNAME_" <"_$TR(Y,". ,","+_.")_"@"_^XMB("NETNAME")_">" X XMSEN
"RTN","XMR",197,0)
 Q
"RTN","XMR",198,0)
ERRCMD ;
"RTN","XMR",199,0)
 S XMEC=XMEC+1
"RTN","XMR",200,0)
 I XMEC>9 S ER=1,XMSG="500 too many errors or fatal error, closing channel"
"RTN","XMR",201,0)
 E  S XMSG="500 Syntax error, command ("_XMCMD_") out of sequence, or unrecognized command"
"RTN","XMR",202,0)
 X XMSEN
"RTN","XMR",203,0)
 Q
"RTN","XMR",204,0)
TST ;
"RTN","XMR",205,0)
 S XM="",XMBT=0,XMCHAN="TEST"
"RTN","XMR",206,0)
 S:'$D(XMDUZ) XMDUZ=.5
"RTN","XMR",207,0)
 D OPEN^XML
"RTN","XMR",208,0)
 G INT
"RTN","XMR",209,0)
DECNET ; Task-Task Communications
"RTN","XMR",210,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D R^XMCTRAP"
"RTN","XMR",211,0)
 E  S X="R^XMCTRAP",@^%ZOSF("TRAP")
"RTN","XMR",212,0)
 S (IO,I0(0))="SYS$NET",XMCHAN="DECNET" D DT^DICRW O IO U IO
"RTN","XMR",213,0)
 K XMSDOM,XMRDOM
"RTN","XMR",214,0)
 G ENT
"RTN","XMR",215,0)
BAT ;
"RTN","XMR",216,0)
 S ER=0,XMBT=1,XMTURN=1,XMCHAN=$S($G(XMCHAN)="":"T-IN",1:XMCHAN)
"RTN","XMR",217,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D R^XMCTRAP"
"RTN","XMR",218,0)
 E  S X="R^XMCTRAP",@^%ZOSF("TRAP")
"RTN","XMR",219,0)
 K XMSDOM,XMRDOM
"RTN","XMR",220,0)
 D ENT
"RTN","XMR",221,0)
 G KL1^XMC
"RTN","XMR",222,0)
TASKER ;
"RTN","XMR",223,0)
 G RECV^XMS3
"RTN","XMR0")
0^112^B1508
"RTN","XMR0",1,0)
XMR0 ;(WASH ISC)/CAP- *OBSOLETE* ;04/09/98  13:36
"RTN","XMR0",2,0)
 ;;7.1;MailMan;**27,50**;Jun 02, 1994
"RTN","XMR0",3,0)
 Q
"RTN","XMR0A")
0^95^B5142952
"RTN","XMR0A",1,0)
XMR0A ;(WASH ISC)/CAP-SMTP RECEIVER (SPECIAL) ;06/08/99  06:54
"RTN","XMR0A",2,0)
 ;;7.1;MailMan;**27,50**;Jun 02, 1994
"RTN","XMR0A",3,0)
 ; *** Note that this command (MESS <what:parm>) is not standard.
"RTN","XMR0A",4,0)
 ; *** MESS ID, in particular, may return 'RSET', which is supposed
"RTN","XMR0A",5,0)
 ;     to be sent only by the sender, not by the receiver.
"RTN","XMR0A",6,0)
MESS ; CHECK IF DUPLICATE MESSAGE / USERS...
"RTN","XMR0A",7,0)
 N XMWHAT,XMPARM
"RTN","XMR0A",8,0)
 I XMP="" D ERRCMD^XMR Q
"RTN","XMR0A",9,0)
 S XMWHAT=$E($P(XMP,":"),1,6),XMPARM=$P(XMP,":",2,99)
"RTN","XMR0A",10,0)
 I $T(@XMWHAT)="" D ERRCMD^XMR Q
"RTN","XMR0A",11,0)
 D @XMWHAT
"RTN","XMR0A",12,0)
 Q
"RTN","XMR0A",13,0)
BLOB ;; MESS BLOB
"RTN","XMR0A",14,0)
 D BLOB^XMR0BLOB(XMPARM)
"RTN","XMR0A",15,0)
 Q
"RTN","XMR0A",16,0)
CLOSED ;; MESS CLOSED
"RTN","XMR0A",17,0)
 S XMZFDA(3.9,XMZIENS,1.95)="y"
"RTN","XMR0A",18,0)
 S XMSG="250 OK" X XMSEN
"RTN","XMR0A",19,0)
 Q
"RTN","XMR0A",20,0)
CONFID ;; MESS CONFIDENTIAL
"RTN","XMR0A",21,0)
 S XMZFDA(3.9,XMZIENS,1.96)="y"
"RTN","XMR0A",22,0)
 S XMSG="250 OK" X XMSEN
"RTN","XMR0A",23,0)
 Q
"RTN","XMR0A",24,0)
CONFIR ;; MESS CONFIRMATION
"RTN","XMR0A",25,0)
 S XMZFDA(3.9,XMZIENS,1.3)="y"
"RTN","XMR0A",26,0)
 S XMSG="250 OK" X XMSEN
"RTN","XMR0A",27,0)
 Q
"RTN","XMR0A",28,0)
ID ;;
"RTN","XMR0A",29,0)
 N XMZCHK
"RTN","XMR0A",30,0)
 S XMREMID=XMPARM
"RTN","XMR0A",31,0)
 S XMZCHK=$$LOCALXMZ^XMR1A(XMREMID)
"RTN","XMR0A",32,0)
 I 'XMZCHK S XMSG="250 OK" X XMSEN Q
"RTN","XMR0A",33,0)
 I $P(XMZCHK,U,2,3)="1^P" S XMSG="250 OK" X XMSEN Q
"RTN","XMR0A",34,0)
 I $P(XMZCHK,U,2) S XMTRAN="Message originated here." D TRAN^XMC1
"RTN","XMR0A",35,0)
 I '$P(XMZCHK,U,2) S XMTRAN="Previously received message." D TRAN^XMC1
"RTN","XMR0A",36,0)
 S XMRXMZ=+XMZCHK
"RTN","XMR0A",37,0)
 I $P(XMZCHK,U,3)'="E"!(XMRXMZ=XMZ) D  Q
"RTN","XMR0A",38,0)
 . I $P(XMZCHK,U,3)="P" S XMTRAN="Already purged." D TRAN^XMC1
"RTN","XMR0A",39,0)
 . I $P(XMZCHK,U,3)="R" S XMTRAN="Already purged & replaced with a different message." D TRAN^XMC1
"RTN","XMR0A",40,0)
 . S XMSG="RSET :"_XMRXMZ_"@"_^XMB("NETNAME")_":Duplicate purged" X XMSEN
"RTN","XMR0A",41,0)
 S XMTRAN="Delivering to additional recipients." D TRAN^XMC1
"RTN","XMR0A",42,0)
 S XMSG="RSET :"_XMRXMZ_"@"_^XMB("NETNAME")_":Previously received" X XMSEN
"RTN","XMR0A",43,0)
 Q
"RTN","XMR0A",44,0)
INFO ;; MESS INFORMATION 
"RTN","XMR0A",45,0)
 S XMZFDA(3.9,XMZIENS,1.97)="y"
"RTN","XMR0A",46,0)
 S XMSG="250 OK" X XMSEN
"RTN","XMR0A",47,0)
 Q
"RTN","XMR0A",48,0)
TYPE ;; MESS TYPE
"RTN","XMR0A",49,0)
 S XMZFDA(3.9,XMZIENS,1.7)=XMPARM
"RTN","XMR0A",50,0)
 S XMSG="250 OK" X XMSEN
"RTN","XMR0A",51,0)
 Q
"RTN","XMR0B")
0^96^B29032817
"RTN","XMR0B",1,0)
XMR0B ;(WASH ISC)/THM/CAP-SMTP (HELO/MAIL) [ARPANET RFC 821] ;06/14/99  16:39
"RTN","XMR0B",2,0)
 ;;7.1;MailMan;**4,6,13,34,42,62,50**;Jun 02, 1994
"RTN","XMR0B",3,0)
HELO ;HELLO COMMAND
"RTN","XMR0B",4,0)
 N X,Y,XMDOMREC
"RTN","XMR0B",5,0)
 I XMP="" S XMSG="501 Missing domain specification" X XMSEN Q
"RTN","XMR0B",6,0)
 I '$D(^XMB("NETNAME")) S XMSG="550 Unchristened local domain" X XMSEN Q
"RTN","XMR0B",7,0)
 S XMSTATE="^HELO^QUIT^"
"RTN","XMR0B",8,0)
 S X=$P(XMP,"<")
"RTN","XMR0B",9,0)
 I $E(X,$L(X))="." S XMSG="Invalid Domain Name" X XMSEN Q
"RTN","XMR0B",10,0)
 S Y=$$FACILITY^XMR1A(X)
"RTN","XMR0B",11,0)
 I Y>0 D
"RTN","XMR0B",12,0)
 . S XMINST=+Y
"RTN","XMR0B",13,0)
 . S (XMSITE,XMHELO("XMP"))=$P(Y,U,2)
"RTN","XMR0B",14,0)
 E  D
"RTN","XMR0B",15,0)
 . S XMHELO("XMP")=X
"RTN","XMR0B",16,0)
 . S Y=$$DOMAIN(X)
"RTN","XMR0B",17,0)
 . S XMINST=+Y
"RTN","XMR0B",18,0)
 . S XMSITE=$P(Y,U,2)
"RTN","XMR0B",19,0)
 S:'$G(XMRDOM) XMRDOM=XMINST
"RTN","XMR0B",20,0)
 D:'$D(^XMBS(4.2999,XMINST,0)) STAT^XMC1(XMINST)
"RTN","XMR0B",21,0)
 I XMBT D  Q
"RTN","XMR0B",22,0)
 . ; batch processing
"RTN","XMR0B",23,0)
 . S XMSTATE="^MAIL^",XMCONT=XMCONT_"TURN^MESS^"
"RTN","XMR0B",24,0)
 S XMDOMREC=^DIC(4.2,XMINST,0)
"RTN","XMR0B",25,0)
 I $P(XMDOMREC,U,15) D VALPROC(XMINST,XMDOMREC,XMP,.XMRVAL) Q:'$D(XMRVAL)
"RTN","XMR0B",26,0)
 S XMSG="250 OK "_^XMB("NETNAME")_$S($D(XMRVAL):" <"_XMRVAL_">",1:"")_" ["_$P($T(XMR0B+1),";",3)_",DUP,SER,FTP]" X XMSEN
"RTN","XMR0B",27,0)
 S XMSTATE="^MAIL^",XMCONT=XMCONT_"TURN^MESS^"
"RTN","XMR0B",28,0)
 Q
"RTN","XMR0B",29,0)
VALPROC(XMINST,XMDOMREC,XMP,XMRVAL) ; Check validation number
"RTN","XMR0B",30,0)
 L +^DIC(4.2,XMINST,0):0 E  S XMSG="550 Domain file locked, try later" X XMSEN Q
"RTN","XMR0B",31,0)
 S XMRVAL=$P($P(XMP,"<",2),">")
"RTN","XMR0B",32,0)
 D VALCHK(.XMDOMREC,XMRVAL)
"RTN","XMR0B",33,0)
 I '$D(XMRVAL) L -^DIC(4.2,XMINST,0) Q
"RTN","XMR0B",34,0)
 S XMRVAL=$R(8000000)+1000000 ; generate new validation number
"RTN","XMR0B",35,0)
 ;set val. num in return message, set new Val. num field
"RTN","XMR0B",36,0)
 S $P(XMDOMREC,U,18)=XMRVAL
"RTN","XMR0B",37,0)
 S ^DIC(4.2,XMINST,0)=XMDOMREC
"RTN","XMR0B",38,0)
 Q
"RTN","XMR0B",39,0)
VALCHK(XMDOMREC,XMRVAL) ; Check the validation number
"RTN","XMR0B",40,0)
 Q:XMRVAL=$P(XMDOMREC,U,15)  ; 15=current number; 18=new number
"RTN","XMR0B",41,0)
 I XMRVAL=$P(XMDOMREC,U,18) S $P(XMDOMREC,U,15)=$P(XMDOMREC,U,18) Q
"RTN","XMR0B",42,0)
 K XMRVAL
"RTN","XMR0B",43,0)
 N XMPARM,XMINSTR
"RTN","XMR0B",44,0)
 S XMINSTR("FROM")=.5
"RTN","XMR0B",45,0)
 S XMPARM(1)=XMHELO("XMP")
"RTN","XMR0B",46,0)
 D TASKBULL^XMXBULL(.5,"XMVALBAD",.XMPARM,"","",.XMINSTR)
"RTN","XMR0B",47,0)
 S XMSG="550 Bad validation number" X XMSEN
"RTN","XMR0B",48,0)
 Q
"RTN","XMR0B",49,0)
DOMAIN(XMDOMAIN) ;Domain name of sender acceptable ?
"RTN","XMR0B",50,0)
 N DIC,X,Y
"RTN","XMR0B",51,0)
 S X=XMDOMAIN,DIC="^DIC(4.2,",DIC(0)="FMOZ"
"RTN","XMR0B",52,0)
 F  D ^DIC Q:Y>0!(X'[".")  S X=$P(X,".",2,99)
"RTN","XMR0B",53,0)
 Q:Y>0 Y
"RTN","XMR0B",54,0)
 ;Add new Domain
"RTN","XMR0B",55,0)
 N A,XMINSTR
"RTN","XMR0B",56,0)
 S X=$$UP^XLFSTR(X)  ; X is the last '.' piece of XMDOMAIN
"RTN","XMR0B",57,0)
 I '$O(^DIC(4.2996,"B",X,0)) D
"RTN","XMR0B",58,0)
 . K DA,DD,DO
"RTN","XMR0B",59,0)
 . S DIC="^DIC(4.2996,"
"RTN","XMR0B",60,0)
 . S DIC("DR")="1///AUTOMATIC-XMR0B"
"RTN","XMR0B",61,0)
 . D FILE^DICN
"RTN","XMR0B",62,0)
 K DA,DD,DO
"RTN","XMR0B",63,0)
 S DIC="^DIC(4.2,"
"RTN","XMR0B",64,0)
 S DIC("DR")="1///C"_$S(^XMB("NETNAME")="FORUM.VA.GOV":"",1:";2///FORUM.VA.GOV")
"RTN","XMR0B",65,0)
 D FILE^DICN
"RTN","XMR0B",66,0)
 S ^DIC(4.2,+Y,1,0)="^4.21^1^1"
"RTN","XMR0B",67,0)
 S ^DIC(4.2,+Y,1,1,0)="AUTO^^^OTHER",^(1,0)="^^1^1^"_DT,^(1,0)="X Q"
"RTN","XMR0B",68,0)
 S ^DIC(4.2,+Y,1,"NOTES",0)="^^1^1^"_DT,^(1,0)="Auto-Created-XMR0B"
"RTN","XMR0B",69,0)
 S XMINSTR("FROM")=.5
"RTN","XMR0B",70,0)
 S A(1)="An incoming transmission from this previously undefined"
"RTN","XMR0B",71,0)
 S A(2)="domain ("_XMDOMAIN_") caused this new domain"
"RTN","XMR0B",72,0)
 S A(3)="("_$P(Y,U,2)_") to be created"
"RTN","XMR0B",73,0)
 S A(4)="",A(5)="to limit the number of entries that are created."
"RTN","XMR0B",74,0)
 S A(5)="The Internet Suffix is used for this purpose."
"RTN","XMR0B",75,0)
 S A(6)="Statistics are then collected for that level of activity."
"RTN","XMR0B",76,0)
 D SENDMSG^XMXSEND(.5,"New Domain created: "_$P(Y,U,2),"A","G.POSTMASTER",.XMINSTR)
"RTN","XMR0B",77,0)
 Q $P(Y,U,1,2)
"RTN","XMR0B",78,0)
VALSET(XMINST,XMRVAL) ;check validation number
"RTN","XMR0B",79,0)
 ;if new val. num. exist, then set val. num. to it and set to null
"RTN","XMR0B",80,0)
 Q:'$G(XMRVAL)
"RTN","XMR0B",81,0)
 N XMDOMREC
"RTN","XMR0B",82,0)
 S XMDOMREC=$G(^DIC(4.2,XMINST,0))
"RTN","XMR0B",83,0)
 S $P(XMDOMREC,U,15)=XMRVAL
"RTN","XMR0B",84,0)
 S $P(XMDOMREC,U,18)=""
"RTN","XMR0B",85,0)
 S ^DIC(4.2,XMINST,0)=XMDOMREC
"RTN","XMR0B",86,0)
 L -^DIC(4.2,XMINST,0)
"RTN","XMR0B",87,0)
 K XMRVAL
"RTN","XMR0B",88,0)
 Q
"RTN","XMR0B",89,0)
MAIL ;START
"RTN","XMR0B",90,0)
 N XMD
"RTN","XMR0B",91,0)
 S XMP=$P(XMP,":",2,999)
"RTN","XMR0B",92,0)
 S XMP=$$SCRUB^XMR1(XMP)
"RTN","XMR0B",93,0)
 I $E(XMP,1)'="<"!($E(XMP,$L(XMP))'=">") S XMSG="501 Invalid reverse-path specification" X XMSEN Q
"RTN","XMR0B",94,0)
 I $$REJ(XMP) S XMSG="502 No message receipt authorization." X XMSEN Q
"RTN","XMR0B",95,0)
 K XMNVFROM,XMINSTR,XMREMID,XMRXMZ,XMZ,XMZFDA,XMZIENS,^TMP("XMY",$J),^TMP("XMY0",$J)
"RTN","XMR0B",96,0)
 S XMINSTR("FWD BY")=""   ; We're not sure who sent/forwarded it
"RTN","XMR0B",97,0)
 S XMINSTR("ADDR FLAGS")="R"
"RTN","XMR0B",98,0)
 K:$D(XMERR) XMERR K:$D(^TMP("XMERR",$J)) ^TMP("XMERR",$J)
"RTN","XMR0B",99,0)
 D CRE8XMZ^XMXSEND($$EZBLD^DIALOG(34012),.XMZ)
"RTN","XMR0B",100,0)
 I $D(XMERR) D  Q
"RTN","XMR0B",101,0)
 . S XMSG="555 "_^TMP("XMERR",$J,1,"TEXT",1)
"RTN","XMR0B",102,0)
 . K XMERR,^TMP("XMERR",$J)
"RTN","XMR0B",103,0)
 . X XMSEN
"RTN","XMR0B",104,0)
 S XMZIENS=XMZ_","
"RTN","XMR0B",105,0)
 S (XMNVFROM,XMZFDA(3.9,XMZIENS,1),XMZFDA(3.9,XMZIENS,41))=XMP  ; mail from
"RTN","XMR0B",106,0)
 S XMSTATE="^RCPT^DATA"
"RTN","XMR0B",107,0)
 S (XMD,XMZFDA(3.9,XMZIENS,1.4))=$$NOW^XLFDT() ; Message date default
"RTN","XMR0B",108,0)
 S $P(^XMB(3.9,XMZ,0),U,3)=XMD
"RTN","XMR0B",109,0)
 D PUTMSG^XMXMSGS2(.5,.95,"ARRIVING",XMZ)
"RTN","XMR0B",110,0)
 S XMSG="250 OK Message-ID:"_XMZ_"@"_^XMB("NETNAME") X XMSEN Q:ER
"RTN","XMR0B",111,0)
 S XMD=$$INDT^XMXUTIL1(XMD)
"RTN","XMR0B",112,0)
 I $G(XMCHAN)="" S XMCHAN="Turn Around"
"RTN","XMR0B",113,0)
 S X=XMCHAN,X=$S(X'?.N:X,$D(^DIC(3.4,X,0)):$P(^(0),U),1:"")
"RTN","XMR0B",114,0)
 ;DON'T CHANGE ORDER OF .001 & .002 LINES !
"RTN","XMR0B",115,0)
 S ^XMB(3.9,XMZ,2,.001,0)="Received: "_$S($L($G(XMHELO("XMP"))):"from "_XMHELO("XMP")_" by "_^XMB("NETNAME")_" (MailMan/"_$P($T(XMR0B+1),";",3)_" "_X_")",1:"(BATCH)")_" id "_XMZ_" ; "_XMD
"RTN","XMR0B",116,0)
 Q
"RTN","XMR0B",117,0)
REJ(XMNVFROM) ; Check Senders rejected list
"RTN","XMR0B",118,0)
 Q:'$O(^XMBX(4.501,0)) 0
"RTN","XMR0B",119,0)
 N XMNO,XMREJECT,XMIEN,XMREC
"RTN","XMR0B",120,0)
 S XMNVFROM=$$UP^XLFSTR(XMNVFROM)
"RTN","XMR0B",121,0)
 S XMNO="",XMREJECT=0
"RTN","XMR0B",122,0)
 F  S XMNO=$O(^XMBX(4.501,"B",XMNO)) Q:XMNO=""  D  Q:XMREJECT
"RTN","XMR0B",123,0)
 . Q:XMNVFROM'[$$UP^XLFSTR(XMNO)
"RTN","XMR0B",124,0)
 . S XMIEN=$O(^XMBX(4.501,"B",XMNO,0)) Q:'XMIEN
"RTN","XMR0B",125,0)
 . S XMREC=$G(^XMBX(4.501,XMIEN,0)) Q:XMREC=""
"RTN","XMR0B",126,0)
 . I XMNVFROM[$$UP^XLFSTR($P(XMREC,U,1)),'$P(XMREC,U,2) S XMREJECT=1
"RTN","XMR0B",127,0)
 Q XMREJECT
"RTN","XMR0B",128,0)
 ;
"RTN","XMR0B",129,0)
 ;#34012 = * No Subject *
"RTN","XMR0BLOB")
0^97^B9857085
"RTN","XMR0BLOB",1,0)
XMR0BLOB ;(WASH ISC)/CAP-BLOB Receive ;09/15/97  09:28
"RTN","XMR0BLOB",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMR0BLOB",3,0)
 ;
"RTN","XMR0BLOB",4,0)
 ;This routine receives BLOBS (Basic Large OBjects), also known in the
"RTN","XMR0BLOB",5,0)
 ;messaging world as 'Other Body Parts' of messages.
"RTN","XMR0BLOB",6,0)
 ;It can do this only with Mailman systems after (not including)
"RTN","XMR0BLOB",7,0)
 ;version 7.0.
"RTN","XMR0BLOB",8,0)
 ;
"RTN","XMR0BLOB",9,0)
 ;A later capability is planned to receive TCP/IP-SMTP messaes that
"RTN","XMR0BLOB",10,0)
 ;conform to MIME (MEE-MEE), an extension to RFC-822 that MailMan will
"RTN","XMR0BLOB",11,0)
 ;conform to.
"RTN","XMR0BLOB",12,0)
 ;
"RTN","XMR0BLOB",13,0)
 ;Message Protocol Data Unit (MPDU) received in X (from XMR0A) contains:
"RTN","XMR0BLOB",14,0)
 ;
"RTN","XMR0BLOB",15,0)
 ;file_name^BLOB_name^BLOB_type^Origin Date
"RTN","XMR0BLOB",16,0)
 ;(Eg.  X="XIMAGE.756^XRAY2-ulna^STLL IMAGE^2930430
"RTN","XMR0BLOB",17,0)
 ;API entry requires Path, Netmail entry automatically defaults it
"RTN","XMR0BLOB",18,0)
 ;
"RTN","XMR0BLOB",19,0)
 ;Returns: 250 Okay file_path
"RTN","XMR0BLOB",20,0)
 ;
"RTN","XMR0BLOB",21,0)
BLOB(X) ;Receive BLOB
"RTN","XMR0BLOB",22,0)
 ;
"RTN","XMR0BLOB",23,0)
 ;Reject BLOBs
"RTN","XMR0BLOB",24,0)
 I '$D(^DD(2005)) S XMSG="555 Reject - Imaging not installed at "_^XMB("NETNAME"),ER=1 X XMSEN G Q
"RTN","XMR0BLOB",25,0)
 ;Cannot recieve BLOB without REGISTERED SUBDIRECTORY in DOMAIN file
"RTN","XMR0BLOB",26,0)
 F  Q:$E(X)'=" "  S X=$E(X,2,999)
"RTN","XMR0BLOB",27,0)
 ;
"RTN","XMR0BLOB",28,0)
 S %=$G(^DIC(4.2,XMINST,"FTP/DIR"))
"RTN","XMR0BLOB",29,0)
 ;FTP DIRECTORY (File 4.2, Field 6.7) -- Sub-directory for a domain
"RTN","XMR0BLOB",30,0)
 ;
"RTN","XMR0BLOB",31,0)
 ;Receive message into Kernel Site Parameter DISK/VOL (7.7) entry
"RTN","XMR0BLOB",32,0)
 S Y=$G(^XMB(1,1,"DISK/VOL"))
"RTN","XMR0BLOB",33,0)
 I %_Y="",'$L($P($G(^XMB(1,1,"FTPRCVDISK")),U)) S XMSG="550 Reject - No DISK/VOL or DOMAIN Directory defined in Kernel Site Parameters at "_^XMB("NETNAME") X XMSEN G Q
"RTN","XMR0BLOB",34,0)
 S XMR0BLOB("DISK")=Y_$S(%="":"",1:$S($L(Y,"\")>1:"",1:"\"))_%
"RTN","XMR0BLOB",35,0)
 ;
"RTN","XMR0BLOB",36,0)
 S XMR0BLOB("FILE")=$P(X,U),XMR0BLOB("NAME")=$P(X,U,2),XMR0BLOB("TYPE")=$P(X,U,3),XMR0BLOB("FTP")=Y,XMR0BLOB("DATE")=$P(X,U,4)
"RTN","XMR0BLOB",37,0)
 ;
"RTN","XMR0BLOB",38,0)
 ;
"RTN","XMR0BLOB",39,0)
FILE K DIC
"RTN","XMR0BLOB",40,0)
 ;First make sure pointer fields exist in pointed at files
"RTN","XMR0BLOB",41,0)
 ;Network Location
"RTN","XMR0BLOB",42,0)
 ;Is it there ?
"RTN","XMR0BLOB",43,0)
 S X=$P($G(^XMB(1,1,"FTPNETLOC")),U),X=$S($L(X):X,1:"MAG1"),DIC=2005.2,DIC(0)="XF" D ^DIC
"RTN","XMR0BLOB",44,0)
 ;If not there set it up
"RTN","XMR0BLOB",45,0)
 I Y<0 D FILE^DICN
"RTN","XMR0BLOB",46,0)
 S XMR0BLOB("DISK")=Y
"RTN","XMR0BLOB",47,0)
 ;
"RTN","XMR0BLOB",48,0)
 ;(TYPE)
"RTN","XMR0BLOB",49,0)
 ;Is it there ?
"RTN","XMR0BLOB",50,0)
 K DIC S DIC=2005.02,DIC(0)="FX",X=XMR0BLOB("TYPE") D ^DIC
"RTN","XMR0BLOB",51,0)
 ;If not there set it up
"RTN","XMR0BLOB",52,0)
 I Y<0 D FILE^DICN
"RTN","XMR0BLOB",53,0)
 S XMRBLOB("TYPE")=+Y
"RTN","XMR0BLOB",54,0)
 ;
"RTN","XMR0BLOB",55,0)
 ;Is it already in the file ?
"RTN","XMR0BLOB",56,0)
 S X=XMR0BLOB("NAME"),DIC="^MAG(2005,",DIC(0)="FO" D ^DIC I +Y>0 S XMSG="442 File previously exists",X=$$2005(Y) X XMSEN G Q
"RTN","XMR0BLOB",57,0)
 ;
"RTN","XMR0BLOB",58,0)
 ;Finally it's time to stuff the entry in the master file
"RTN","XMR0BLOB",59,0)
 ;Sends: FTP Address^ ^ ^ ^ Path ^ Username ^ Password ^ Physical Disk
"RTN","XMR0BLOB",60,0)
 ;EG. 250 Okay^1.2.0.1^^^image\subdir^USERNAME^PASSWORD^_nfa0:
"RTN","XMR0BLOB",61,0)
 S XMSG="250 Okay ^"_$G(^XMB(1,1,"FTP-RCV"))_"^^^"_$G(^("DISK/VOL"))_U_$G(^("FTPUSER"))_U_$G(^("FTPPWD"))_U_$P($G(^("FTPRCVDISK")),U)
"RTN","XMR0BLOB",62,0)
 X XMSEN G Q:ER
"RTN","XMR0BLOB",63,0)
 S DIC="^MAG(2005,",DIC(0)="FI",X=XMR0BLOB("NAME") D FILE^DICN
"RTN","XMR0BLOB",64,0)
 S DIE="^MAG(2005,",DR="2///"_+XMR0BLOB("DISK")_";1///"_XMR0BLOB("FILE")_";3///"_XMR0BLOB("TYPE")_$S($L(XMR0BLOB("DATE")):";14///"_XMR0BLOB("DATE"),1:""),DA=+Y
"RTN","XMR0BLOB",65,0)
 D ^DIE S X=$$2005(DA)
"RTN","XMR0BLOB",66,0)
Q K DO,DD,DIC,DO,DD,DA,XMR0BLOB
"RTN","XMR0BLOB",67,0)
 Q
"RTN","XMR0BLOB",68,0)
2005(X) ;Add to Message BLOB list
"RTN","XMR0BLOB",69,0)
 N XMFDA
"RTN","XMR0BLOB",70,0)
 S XMFDA(3.92005,"?+1,"_$G(XMZIENS,XMZ_","),.01)=X
"RTN","XMR0BLOB",71,0)
 D UPDATE^DIE("","XMFDA")
"RTN","XMR0BLOB",72,0)
 Q 1
"RTN","XMR0BLOB",73,0)
API(X) ;BLOB (XMD,XMB)
"RTN","XMR0BLOB",74,0)
 N %,I,XMMG,XMR0BLOB,XMSEN,XMSG,XMREC
"RTN","XMR0BLOB",75,0)
 F %=1:1:5 S XMR0BLOB($P("FILE^TYPE^NAME^DATE^DISK",U,I))=$P(X,U,I)
"RTN","XMR0BLOB",76,0)
 D FILE
"RTN","XMR0BLOB",77,0)
 Q $S(+XMSG=250:1,+XMSG=440:1,1:0)
"RTN","XMR1")
0^98^B64446354
"RTN","XMR1",1,0)
XMR1 ;(WASH ISC)/THM/CAP-SMTP AUX FUNCTIONS ;06/08/99  15:54
"RTN","XMR1",2,0)
 ;;7.1;MailMan;**7,50**;Jun 02, 1994
"RTN","XMR1",3,0)
DATA ;;TEXT / ASSUMES VALID RECIPIENT
"RTN","XMR1",4,0)
 ; Incoming Variables:
"RTN","XMR1",5,0)
 ; XMINSTR("FWD BY")=""
"RTN","XMR1",6,0)
 ; XMZ        message number of new message
"RTN","XMR1",7,0)
 ; XMZFDA     FM FDA for new message
"RTN","XMR1",8,0)
 ; XMZIENS    IENS for new message
"RTN","XMR1",9,0)
 ; $D(XMRDX)  means Test mode: Messages will not be delivered
"RTN","XMR1",10,0)
 ; If the msg is from a VA site, the following may be set:
"RTN","XMR1",11,0)
 ; XMREMID    always set if the msg is from a VA site
"RTN","XMR1",12,0)
 ; $G(XMRXMZ) message number of message we already have.
"RTN","XMR1",13,0)
 ;            Set if new message is a duplicate of one we already have.
"RTN","XMR1",14,0)
 N XMLIN,XMINCR,XMLIMIT,XMHDR,XMREJECT,XMSUBJ,XMFROM,XMDATE,XMENCR,XMZO,XMSENDER,XMREPLTO
"RTN","XMR1",15,0)
 D GETDATA Q:ER
"RTN","XMR1",16,0)
 I '$G(XMRXMZ),'$D(XMRDX) D HDRPROC Q:ER
"RTN","XMR1",17,0)
 I '$G(XMREJECT),'$D(XMRDX) D SET
"RTN","XMR1",18,0)
 S XMCNT("R")=$G(XMCNT("R"))+1  ; for 'messages received' statistics
"RTN","XMR1",19,0)
 S XMSTATE="^HELO^MAIL^"
"RTN","XMR1",20,0)
 K ^TMP("XMY",$J),^TMP("XMY0",$J)
"RTN","XMR1",21,0)
 D ZAPIT^XMXMSGS2(.5,.95,XMZ)
"RTN","XMR1",22,0)
 I '$G(XMREJECT) D
"RTN","XMR1",23,0)
 . S XMSG="250 'data' accepted" X XMSEN
"RTN","XMR1",24,0)
 . D STATS^XMR1A
"RTN","XMR1",25,0)
 K XMNVFROM,XMINSTR,XMREMID,XMRXMZ,XMZ,XMZIENS,XMZFDA
"RTN","XMR1",26,0)
 Q
"RTN","XMR1",27,0)
GETDATA ;
"RTN","XMR1",28,0)
 N XMH
"RTN","XMR1",29,0)
 S XMSG="354 Enter data" X XMSEN Q:ER
"RTN","XMR1",30,0)
 S XMLIN=.001,XMINCR=.001,XMH=""
"RTN","XMR1",31,0)
 F  X XMREC Q:ER  Q:XMRG="."  D
"RTN","XMR1",32,0)
 . I $E(XMRG)="." S XMRG=$E(XMRG,2,999)
"RTN","XMR1",33,0)
 . S XMLIN=XMLIN+XMINCR
"RTN","XMR1",34,0)
 . S ^XMB(3.9,XMZ,2,XMLIN,0)=XMRG
"RTN","XMR1",35,0)
 . I XMRG="",XMINCR'=1 S XMINCR=1,XMLIN=0
"RTN","XMR1",36,0)
 . Q:XMINCR=1
"RTN","XMR1",37,0)
 . I XMLIN=.99 S XMINCR=.000001
"RTN","XMR1",38,0)
 . I $E(XMRG,1)=" " Q:XMH=""  D NEXT(XMH,.XMHDR,XMRG)
"RTN","XMR1",39,0)
 . S XMH=$$UP^XLFSTR($P(XMRG,":"))
"RTN","XMR1",40,0)
 . I "^DATE^FROM^IMPORTANCE^IN-REPLY-TO^MESSAGE-ID^SUBJECT^"[(U_XMH_U) S XMH=$E($TR(XMH,"-"),1,4),XMHDR(XMH)=$$SCRUB($P(XMRG,":",2,99)) Q
"RTN","XMR1",41,0)
 . I "^ENCRYPTED^EXPIRY-DATE^REFERENCES^REPLY-TO^RETURN-RECEIPT-TO^SENDER^SENSITIVITY^"[(U_XMH_U) S XMH=$E($TR(XMH,"-"),1,4),XMHDR(XMH)=$$SCRUB($P(XMRG,":",2,99)) Q
"RTN","XMR1",42,0)
 . I "^X-PRIORITY^"[(U_XMH_U) S XMH=$E($P(XMH,"-",2),1,4),XMHDR(XMH)=$$SCRUB($P(XMRG,":",2,99)) Q
"RTN","XMR1",43,0)
 . I "^X-MM-BASKET^X-MM-CLOSED^X-MM-INFO-ONLY^X-MM-TYPE^"[(U_XMH_U) S XMH=$E($P(XMH,"-",3),1,4),XMHDR(XMH)=$$SCRUB($P(XMRG,":",2,99)) Q
"RTN","XMR1",44,0)
 . S XMH=""
"RTN","XMR1",45,0)
 Q:ER
"RTN","XMR1",46,0)
 Q
"RTN","XMR1",47,0)
NEXT(XMH,XMHDR,XMDATA) ;
"RTN","XMR1",48,0)
 N I
"RTN","XMR1",49,0)
 S XMDATA=$$SCRUB(XMDATA) Q:XMDATA=""
"RTN","XMR1",50,0)
 I XMHDR(XMH)="" S XMHDR(XMH)=XMDATA Q
"RTN","XMR1",51,0)
 I $L(XMHDR(XMH))+$L(XMDATA)<255 S XMHDR(XMH)=XMHDR(XMH)_" "_XMDATA Q
"RTN","XMR1",52,0)
 S I=$O(^XMHDR(XMH,":"),-1)+1
"RTN","XMR1",53,0)
 I $G(XMHDR(XMH,I))'="",$L(XMHDR(XMH,I))+$L(XMDATA)<255 S XMHDR(XMH,I)=$G(XMHDR(XMH,I))_" "_XMDATA Q
"RTN","XMR1",54,0)
 S XMHDR(XMH,I+1)=XMDATA
"RTN","XMR1",55,0)
 Q
"RTN","XMR1",56,0)
HDRPROC ; Process header commands
"RTN","XMR1",57,0)
 N XMH,XMP,XMRINFO
"RTN","XMR1",58,0)
 I $O(^XMB(3.9,XMZ,2,XMLIN)) D  Q
"RTN","XMR1",59,0)
 . S ER=1
"RTN","XMR1",60,0)
 . S XMTRAN="500 Synchronization Lost" D TRAN^XMC1
"RTN","XMR1",61,0)
 S XMLIMIT=$P($G(^XMB(1,1,"NETWORK-LIMIT")),U,2)
"RTN","XMR1",62,0)
 ;I '$D(XMHDR("FROM")) D  Q
"RTN","XMR1",63,0)
 ;. S ER=1  ; *** is this necessary?
"RTN","XMR1",64,0)
 ;. S XMSG="501 Missing FROM Header.  Msg rejected." X XMSEN
"RTN","XMR1",65,0)
 ;. D KILLIT^XMR1A
"RTN","XMR1",66,0)
 I XMLIMIT,XMLIN>XMLIMIT D  Q
"RTN","XMR1",67,0)
 . S ER=1  ; *** is this necessary?
"RTN","XMR1",68,0)
 . S XMSG="551 Too many lines.  Msg rejected." X XMSEN
"RTN","XMR1",69,0)
 . D KILLIT^XMR1A
"RTN","XMR1",70,0)
 I '$D(XMREMID) S XMREMID=""
"RTN","XMR1",71,0)
 S (XMH,XMZO,XMFROM,XMENCR,XMSENDER,XMDATE,XMSUBJ)=""
"RTN","XMR1",72,0)
 F  S XMH=$O(XMHDR(XMH)) Q:XMH=""  D
"RTN","XMR1",73,0)
 . S XMP=XMHDR(XMH)
"RTN","XMR1",74,0)
 . D @XMH
"RTN","XMR1",75,0)
 I '$O(^XMB(3.9,XMZ,2,.999999)),'$D(XMZFDA(3.9,XMZIENS,.01)) D  Q
"RTN","XMR1",76,0)
 . S XMSG="552 No subject or text.  Msg rejected." X XMSEN
"RTN","XMR1",77,0)
 . D KILLIT^XMR1A
"RTN","XMR1",78,0)
 . S XMREJECT=1
"RTN","XMR1",79,0)
 I $G(XMRINFO) D  Q
"RTN","XMR1",80,0)
 . S XMSG="555 Reply to 'Info Only'.  Msg rejected." X XMSEN
"RTN","XMR1",81,0)
 . D KILLIT^XMR1A
"RTN","XMR1",82,0)
 . S XMREJECT=1
"RTN","XMR1",83,0)
 ;I $G(XMZFDA(3.9,XMZIENS,9))="" D  Q
"RTN","XMR1",84,0)
 ;. S XMSG="501 No MESSAGE-ID.  Msg rejected." X XMSEN
"RTN","XMR1",85,0)
 ;. D KILLIT^XMR1A
"RTN","XMR1",86,0)
 ;. S XMREJECT=1
"RTN","XMR1",87,0)
 I '$O(^XMB(3.9,XMZ,2,.999999)) S ^XMB(3.9,XMZ,2,1,0)=" "
"RTN","XMR1",88,0)
 S ^XMB(3.9,XMZ,2,0)="^^"_XMLIN_U_XMLIN
"RTN","XMR1",89,0)
 Q
"RTN","XMR1",90,0)
SCRUB(X) ; Strip ctrl chars and leading/trailing blanks
"RTN","XMR1",91,0)
 S:$E(X,1)=" "!($E(X,$L(X))=" ") X=$$STRIP^XMXUTIL1(X)
"RTN","XMR1",92,0)
 S:X?.E1C.E X=$$CTRL^XMXUTIL1(X)
"RTN","XMR1",93,0)
 Q X
"RTN","XMR1",94,0)
BASK ; "X-MM-BASKET:" (Delivery Basket)
"RTN","XMR1",95,0)
 S:$D(XMZIENS) XMZFDA(3.9,XMZIENS,21)=XMP
"RTN","XMR1",96,0)
 Q
"RTN","XMR1",97,0)
CLOS ; "X-MM-CLOSED:YES"
"RTN","XMR1",98,0)
 S:$D(XMZIENS) XMZFDA(3.9,XMZIENS,1.95)="y"
"RTN","XMR1",99,0)
 Q
"RTN","XMR1",100,0)
DATE ; "DATE:"
"RTN","XMR1",101,0)
 S XMDATE=XMP
"RTN","XMR1",102,0)
 S:$D(XMZIENS) XMZFDA(3.9,XMZIENS,1.4)=XMDATE
"RTN","XMR1",103,0)
 Q
"RTN","XMR1",104,0)
ENCR ; "ENCRYPT:"
"RTN","XMR1",105,0)
 S XMENCR=XMP
"RTN","XMR1",106,0)
 Q:'$D(XMZIENS)
"RTN","XMR1",107,0)
 S XMZFDA(3.9,XMZIENS,1.8)=$P(XMENCR,U,1)        ; scramble hint
"RTN","XMR1",108,0)
 S XMZFDA(3.9,XMZIENS,1.85)=$P(XMENCR,U,2,999)   ; scramble key
"RTN","XMR1",109,0)
 Q
"RTN","XMR1",110,0)
EXPI ; "EXPIRY-DATE:" (vaporize date)
"RTN","XMR1",111,0)
 N XMVAPOR
"RTN","XMR1",112,0)
 S XMVAPOR=$$CONVERT^XMXUTIL1(XMP,1) Q:XMVAPOR=-1
"RTN","XMR1",113,0)
 S:$D(XMZIENS) XMZFDA(3.9,XMZIENS,1.6)=XMVAPOR
"RTN","XMR1",114,0)
 Q
"RTN","XMR1",115,0)
FROM ; "FROM:"
"RTN","XMR1",116,0)
 S XMFROM=XMP
"RTN","XMR1",117,0)
 Q:'$D(XMZIENS)
"RTN","XMR1",118,0)
 ;I $D(XMHDR("FROM",1)) D CONTINU(.XMFROM,"FROM",.XMHDR)
"RTN","XMR1",119,0)
 S XMZFDA(3.9,XMZIENS,1)=XMFROM
"RTN","XMR1",120,0)
 Q
"RTN","XMR1",121,0)
CONTINU(XMVBL,XMH,XMHDR) ;
"RTN","XMR1",122,0)
 N I
"RTN","XMR1",123,0)
 S I=0
"RTN","XMR1",124,0)
 F  S I=$O(XMHDR(XMH,I)) Q:'I  S XMVBL=XMVBL_" "_XMHDR(XMH,I)
"RTN","XMR1",125,0)
 Q
"RTN","XMR1",126,0)
IMPO ; "IMPORTANCE:HIGH" (Priority)
"RTN","XMR1",127,0)
 I $$UP^XLFSTR(XMP)'="HIGH"!'$D(XMZIENS) Q
"RTN","XMR1",128,0)
 S:$G(XMZFDA(3.9,XMZIENS,1.7))'["P" XMZFDA(3.9,XMZIENS,1.7)=$G(XMZFDA(3.9,XMZIENS,1.7))_"P"
"RTN","XMR1",129,0)
 Q
"RTN","XMR1",130,0)
INFO ; "X-MM-INFO-ONLY:YES"
"RTN","XMR1",131,0)
 S:$D(XMZIENS) XMZFDA(3.9,XMZIENS,1.97)="y"
"RTN","XMR1",132,0)
 Q
"RTN","XMR1",133,0)
REFE ; "REFERENCES:" (used by some systems, instead of 'in-reply-to')
"RTN","XMR1",134,0)
 Q
"RTN","XMR1",135,0)
INRE ; "IN-REPLY-TO:" message at this site
"RTN","XMR1",136,0)
 N I,XMLOCID,XMREC
"RTN","XMR1",137,0)
 S XMLOCID=$$REMID(XMP)
"RTN","XMR1",138,0)
 S XMZO=$$LOCALXMZ^XMR1A(XMLOCID)
"RTN","XMR1",139,0)
 Q:'XMZO
"RTN","XMR1",140,0)
 I $P(XMZO,U,3)'="E" S XMZO="" Q
"RTN","XMR1",141,0)
 S XMZO=+XMZO
"RTN","XMR1",142,0)
 S XMREC=$G(^XMB(3.9,XMZO,0))
"RTN","XMR1",143,0)
 I $P(XMREC,U,8) D  ; If reply to a reply, get original msg #
"RTN","XMR1",144,0)
 . S XMZO=$P(XMREC,U,8)
"RTN","XMR1",145,0)
 . S XMREC=$G(^XMB(3.9,XMZO,0))
"RTN","XMR1",146,0)
 I XMREC="" S XMZO="" Q  ; Original message not found, so make this reply a message.
"RTN","XMR1",147,0)
 I "^y^Y^"[(U_$P(XMREC,U,12)_U) S XMRINFO=1 Q  ; Reply to 'info only' msg
"RTN","XMR1",148,0)
 S:$D(XMZIENS) XMZFDA(3.9,XMZIENS,1.35)=XMZO  ; Point from response to original msg
"RTN","XMR1",149,0)
 Q
"RTN","XMR1",150,0)
REMID(X) ;
"RTN","XMR1",151,0)
 Q:X["<" $TR($P(X,">",1),"<")
"RTN","XMR1",152,0)
 ; I've seen some like this: "<<...>>"
"RTN","XMR1",153,0)
 ; I've seen some like this: "<...>; comment here"
"RTN","XMR1",154,0)
 Q X
"RTN","XMR1",155,0)
MESS ; "MESSAGE-ID:" at site where message originated
"RTN","XMR1",156,0)
 S XMREMID=$$REMID(XMP)
"RTN","XMR1",157,0)
 S:$D(XMZIENS) XMZFDA(3.9,XMZIENS,9)=XMREMID
"RTN","XMR1",158,0)
 Q
"RTN","XMR1",159,0)
PRIO ; "X-PRIORITY:1" (Priority)
"RTN","XMR1",160,0)
 I $$UP^XLFSTR(XMP)'=1!'$D(XMZIENS) Q
"RTN","XMR1",161,0)
 S:$G(XMZFDA(3.9,XMZIENS,1.7))'["P" XMZFDA(3.9,XMZIENS,1.7)=$G(XMZFDA(3.9,XMZIENS,1.7))_"P"
"RTN","XMR1",162,0)
 Q
"RTN","XMR1",163,0)
REPL ; "REPLY-TO:"
"RTN","XMR1",164,0)
 S XMREPLTO=XMP
"RTN","XMR1",165,0)
 ;I $D(XMHDR("REPL",1)) D CONTINU(.XMREPLTO,"REPL",.XMHDR)
"RTN","XMR1",166,0)
 Q
"RTN","XMR1",167,0)
RETU ; "RETURN-RECEIPT-TO:"
"RTN","XMR1",168,0)
 S:$D(XMZIENS) XMZFDA(3.9,XMZIENS,1.3)="y"
"RTN","XMR1",169,0)
 Q
"RTN","XMR1",170,0)
SEND ; "SENDER:" (Surrogate)
"RTN","XMR1",171,0)
 S XMSENDER=XMP
"RTN","XMR1",172,0)
 ;I $D(XMHDR("SEND",1)) D CONTINU(.XMSENDER,"SEND",.XMHDR)
"RTN","XMR1",173,0)
 Q:XMSENDER=$G(XMFROM)
"RTN","XMR1",174,0)
 S:$D(XMZIENS) XMZFDA(3.9,XMZIENS,1.1)=$E(XMSENDER,1,64)
"RTN","XMR1",175,0)
 Q
"RTN","XMR1",176,0)
SENS ; "SENSITIVITY:PERSONAL" (Confidential)
"RTN","XMR1",177,0)
 Q:"^PERSONAL^PRIVATE^COMPANY-CONFIDENTIAL^"'[(U_$$UP^XLFSTR(XMP)_U)
"RTN","XMR1",178,0)
 S:$D(XMZIENS) XMZFDA(3.9,XMZIENS,1.96)="y"
"RTN","XMR1",179,0)
 Q
"RTN","XMR1",180,0)
SUBJ ; "SUBJECT:"
"RTN","XMR1",181,0)
 S XMSUBJ=XMP
"RTN","XMR1",182,0)
 I XMSUBJ["   " S XMSUBJ=$$MAXBLANK^XMXUTIL1(XMSUBJ)
"RTN","XMR1",183,0)
 I XMSUBJ["^" S XMSUBJ=$$ENCODEUP^XMXUTIL1(XMSUBJ)
"RTN","XMR1",184,0)
 S XMSUBJ=$E(XMSUBJ,1,65)
"RTN","XMR1",185,0)
 Q:XMSUBJ=""!'$D(XMZIENS)
"RTN","XMR1",186,0)
 I $L(XMSUBJ)<3 S XMSUBJ="..."
"RTN","XMR1",187,0)
 S XMZFDA(3.9,XMZIENS,.01)=XMSUBJ
"RTN","XMR1",188,0)
 Q
"RTN","XMR1",189,0)
TYPE ; "X-MM-TYPE:"
"RTN","XMR1",190,0)
 S:$D(XMZIENS) XMZFDA(3.9,XMZIENS,1.7)=XMP
"RTN","XMR1",191,0)
 Q
"RTN","XMR1",192,0)
SET ; Set data into message file
"RTN","XMR1",193,0)
 I $G(XMREMID)'="" D CHEKDUP^XMR1A Q:$G(XMREJECT)
"RTN","XMR1",194,0)
 D:$D(XMZFDA) FILE^DIE("","XMZFDA")
"RTN","XMR1",195,0)
 ;SENDER only RCPT / REMOTE sender drops thru (local>0=pointer)
"RTN","XMR1",196,0)
 I $G(XMZO) D  Q:$O(^TMP("XMY",$J,""))  ; I don't understand this.
"RTN","XMR1",197,0)
 . S XMTRAN=">  Putting response "_XMZ_" into message "_XMZO D TRAN^XMC1
"RTN","XMR1",198,0)
 . S XMTRAN=">  Delivering message "_XMZO D TRAN^XMC1
"RTN","XMR1",199,0)
 . D RPOST^XMKP("NR",XMZO,XMZ)
"RTN","XMR1",200,0)
 D FWD^XMKP(.5,XMZ,.XMINSTR)
"RTN","XMR1",201,0)
 D CHECK^XMKPL
"RTN","XMR1",202,0)
 Q
"RTN","XMR1",203,0)
PARSE(XMZ,XMREMID,XMSUBJ,XMFROM,XMDATE,XMSENDER,XMENCR,XMZO) ; Get data for remotely originated message
"RTN","XMR1",204,0)
 ; This subroutine is called only by ^XMRENT.
"RTN","XMR1",205,0)
 ; XMSUBJ   subject
"RTN","XMR1",206,0)
 ; XMFROM   from
"RTN","XMR1",207,0)
 ; XMDATE   date
"RTN","XMR1",208,0)
 ; XMENCR   scramble hint "^" scramble key
"RTN","XMR1",209,0)
 ; XMREMID  message id at site where msg originated (not necessarily at the sending site)
"RTN","XMR1",210,0)
 ; XMZO     original message xmz (to which this msg is a response)
"RTN","XMR1",211,0)
 N XMP,XMH,XMHDR,XMRINFO,XMZFDA,XMZIENS,XMFIND
"RTN","XMR1",212,0)
 ; Don't add anything to this list:
"RTN","XMR1",213,0)
 S XMFIND="^DATE^ENCRYPTED^FROM^IN-REPLY-TO^MESSAGE-ID^SENDER^SUBJECT^"
"RTN","XMR1",214,0)
 D HDRFIND(XMZ,XMFIND,.XMHDR)
"RTN","XMR1",215,0)
 S XMH=""
"RTN","XMR1",216,0)
 F  S XMH=$O(XMHDR(XMH)) Q:XMH=""  D
"RTN","XMR1",217,0)
 . S XMP=XMHDR(XMH)
"RTN","XMR1",218,0)
 . D @XMH
"RTN","XMR1",219,0)
 Q
"RTN","XMR1",220,0)
HDRFIND(XMZ,XMFIND,XMHDR) ;
"RTN","XMR1",221,0)
 N XMH,XMI,XMREC
"RTN","XMR1",222,0)
 I XMFIND'?1"^".E1"^" D
"RTN","XMR1",223,0)
 . I $E(XMFIND,1)'=U S XMFIND=U_XMFIND
"RTN","XMR1",224,0)
 . I $E(XMFIND,$L(XMFIND))'=U S XMFIND=XMFIND_U
"RTN","XMR1",225,0)
 S XMI=0
"RTN","XMR1",226,0)
 F  S XMI=$O(^XMB(3.9,XMZ,2,XMI)) Q:XMI'<1!'XMI  S XMREC=^(XMI,0) Q:XMREC=""  D
"RTN","XMR1",227,0)
 . I $E(XMREC,1)=" " Q:XMH=""  D NEXT(XMH,.XMHDR,XMREC) Q
"RTN","XMR1",228,0)
 . S XMH=$$UP^XLFSTR($P(XMREC,":"))
"RTN","XMR1",229,0)
 . I XMFIND'[(U_XMH_U) S XMH="" Q
"RTN","XMR1",230,0)
 . I "^DATE^FROM^IMPORTANCE^IN-REPLY-TO^MESSAGE-ID^SUBJECT^"[(U_XMH_U) S XMH=$E($TR(XMH,"-"),1,4),XMHDR(XMH)=$$SCRUB($P(XMREC,":",2,99)) Q
"RTN","XMR1",231,0)
 . I "^ENCRYPTED^EXPIRY-DATE^REFERENCES^REPLY-TO^RETURN-RECEIPT-TO^SENDER^SENSITIVITY^"[(U_XMH_U) S XMH=$E($TR(XMH,"-"),1,4),XMHDR(XMH)=$$SCRUB($P(XMREC,":",2,99)) Q
"RTN","XMR1",232,0)
 . I "^X-PRIORITY^"[(U_XMH_U) S XMH=$E($P(XMH,"-",2),1,4),XMHDR(XMH)=$$SCRUB($P(XMREC,":",2,99)) Q
"RTN","XMR1",233,0)
 . I "^X-MM-BASKET^X-MM-CLOSED^X-MM-INFO-ONLY^X-MM-TYPE^"[(U_XMH_U) S XMH=$E($P(XMH,"-",3),1,4),XMHDR(XMH)=$$SCRUB($P(XMREC,":",2,99)) Q
"RTN","XMR1",234,0)
 . S XMH=""
"RTN","XMR1",235,0)
 Q
"RTN","XMR1A")
0^99^B9054906
"RTN","XMR1A",1,0)
XMR1A ;(WASH ISC)/THM/CAP-SMTP AUX FUNCTIONS ;06/08/99  06:37
"RTN","XMR1A",2,0)
 ;;7.1;MailMan;**13,36,50**;Jun 02, 1994
"RTN","XMR1A",3,0)
STATS ;
"RTN","XMR1A",4,0)
 N X,Y
"RTN","XMR1A",5,0)
 I '$D(XMINST) S XMINST=$G(XMB("XMSCR"))
"RTN","XMR1A",6,0)
 Q:'XMINST
"RTN","XMR1A",7,0)
 D:'$D(^XMBS(4.2999,XMINST,0)) STAT^XMC1(XMINST)
"RTN","XMR1A",8,0)
 S Y=^XMBS(4.2999,XMINST,0)
"RTN","XMR1A",9,0)
 S $P(Y,U,7)=$P(Y,U,7)+1
"RTN","XMR1A",10,0)
 S Y(0)=$P($G(^XMB(3.9,XMZ,2,0)),U,3)
"RTN","XMR1A",11,0)
 S $P(Y,U,8)=$P(Y,U,8)+Y(0)
"RTN","XMR1A",12,0)
 S ^XMBS(4.2999,XMINST,0)=Y
"RTN","XMR1A",13,0)
 S Y=$P($G(^XMBS(4.2999,XMINST,3)),U,8) I Y S $P(^(3),U,8)=0
"RTN","XMR1A",14,0)
 S:Y<1 Y=200
"RTN","XMR1A",15,0)
 D STATR^XMS0A  ; expects Y, Y(0)
"RTN","XMR1A",16,0)
 Q
"RTN","XMR1A",17,0)
CHEKDUP ;
"RTN","XMR1A",18,0)
 N XMZCHK,XMTO
"RTN","XMR1A",19,0)
 ;REJECT ON PURGED MESSAGE PROTECT FOC-AUSTIN
"RTN","XMR1A",20,0)
 ;DO NOT CHANGE WITHOUT COORDINATING
"RTN","XMR1A",21,0)
 S XMZCHK=$$LOCALXMZ(XMREMID)
"RTN","XMR1A",22,0)
 ;Set up "AI" cross reference -- since XMBX is replicated at FOC-Austin
"RTN","XMR1A",23,0)
 ;set pseudo node first so that if DDP is down, failure will occur before
"RTN","XMR1A",24,0)
 ;message is considered received.
"RTN","XMR1A",25,0)
 ;
"RTN","XMR1A",26,0)
 ;Accept as new message if NOT HERE
"RTN","XMR1A",27,0)
 Q:'XMZCHK
"RTN","XMR1A",28,0)
 ; We already have the message
"RTN","XMR1A",29,0)
 I $P(XMZCHK,U,3)'="E"!(XMZ=+XMZCHK) D  Q
"RTN","XMR1A",30,0)
 . S XMSG="554 Duplicate (purged).  Msg rejected." X XMSEN
"RTN","XMR1A",31,0)
 . D KILLIT
"RTN","XMR1A",32,0)
 . S XMREJECT=1
"RTN","XMR1A",33,0)
 S XMTO=""
"RTN","XMR1A",34,0)
 F  S XMTO=$O(^TMP("XMY",$J,XMTO)) Q:XMTO=""  I $D(^XMB(3.7,"M",+XMZCHK,XMTO)) K ^TMP("XMY",$J,XMTO)
"RTN","XMR1A",35,0)
 I $O(^TMP("XMY",$J,""))="" D  Q
"RTN","XMR1A",36,0)
 . S XMSG="254 Duplicate (no add'l recipients).  Msg rejected." X XMSEN
"RTN","XMR1A",37,0)
 . D KILLIT
"RTN","XMR1A",38,0)
 . S XMREJECT=1
"RTN","XMR1A",39,0)
 ; We are forwarding a msg which already exists on our system
"RTN","XMR1A",40,0)
 ; to recipients who don't currently have it in their mailbox.
"RTN","XMR1A",41,0)
 K XMZFDA  ; When we implement true 'forwarded by', we'll have to retain that.
"RTN","XMR1A",42,0)
 D KILLIT
"RTN","XMR1A",43,0)
 S XMZ=+XMZCHK
"RTN","XMR1A",44,0)
 Q
"RTN","XMR1A",45,0)
KILLIT ;
"RTN","XMR1A",46,0)
 K XMREMID
"RTN","XMR1A",47,0)
 D ZAPIT^XMXMSGS2(.5,.95,XMZ)
"RTN","XMR1A",48,0)
 D KILLMSG^XMXUTIL(XMZ)
"RTN","XMR1A",49,0)
 Q
"RTN","XMR1A",50,0)
LOCALXMZ(XMREMID) ; Given a remote id, function returns XMZ if the message
"RTN","XMR1A",51,0)
 ; can be or was ever found locally.
"RTN","XMR1A",52,0)
 ; If no record of it, returns null.
"RTN","XMR1A",53,0)
 ; Otherwise, returns:
"RTN","XMR1A",54,0)
 ; Piece 1: local XMZ
"RTN","XMR1A",55,0)
 ; Piece 2: originated here? (0=no; 1=yes)
"RTN","XMR1A",56,0)
 ; Piece 3: still exists? (P=no, purged;
"RTN","XMR1A",57,0)
 ;                         R=no, purged, & replaced with something else;
"RTN","XMR1A",58,0)
 ;                         E=yes, it still exists here)
"RTN","XMR1A",59,0)
 N XMZCHK,XMP1,XMP2
"RTN","XMR1A",60,0)
 S XMP1=$P(XMREMID,"@",1),XMP2=$P(XMREMID,"@",2)
"RTN","XMR1A",61,0)
 I XMP1=""!(XMP2="") Q ""
"RTN","XMR1A",62,0)
 S XMZCHK=$$FINDXMZ(XMP1,XMP2)
"RTN","XMR1A",63,0)
 I XMZCHK Q XMZCHK
"RTN","XMR1A",64,0)
 S XMZCHK=$$FINDXMZ(XMP2,XMP1)
"RTN","XMR1A",65,0)
 I XMZCHK Q XMZCHK
"RTN","XMR1A",66,0)
 Q ""
"RTN","XMR1A",67,0)
FINDXMZ(XMP1,XMP2) ;
"RTN","XMR1A",68,0)
 I XMP1?.N!(XMP1?.N1"."7N) Q:XMP2=^XMB("NETNAME") $$LOCXMZ(XMP1)  Q:$P($$FACILITY(XMP2),U,2)=^XMB("NETNAME") $$LOCXMZ(XMP1)
"RTN","XMR1A",69,0)
 N XMZ
"RTN","XMR1A",70,0)
 S XMZ=$O(^XMBX(3.9,"AI",$E(XMP2,1,64),$E(XMP1,1,64),0))
"RTN","XMR1A",71,0)
 I XMZ Q $$REMXMZ(XMZ,XMP2,XMP1)
"RTN","XMR1A",72,0)
 Q ""
"RTN","XMR1A",73,0)
LOCXMZ(XMZ) ; Message originated here.
"RTN","XMR1A",74,0)
 I XMZ'["." Q XMZ_"^1^"_$S($D(^XMB(3.9,XMZ,0)):"E",1:"P")
"RTN","XMR1A",75,0)
 ; The following code won't activate until MailMan message IDs contain
"RTN","XMR1A",76,0)
 ; dates.  Message IDs are created in $$NETID^XMS0A.
"RTN","XMR1A",77,0)
 N XMCRE8
"RTN","XMR1A",78,0)
 S XMCRE8=$P(XMZ,".",2),XMZ=$P(XMZ,".",1)
"RTN","XMR1A",79,0)
 Q XMZ_"^1^"_$S('$D(^XMB(3.9,XMZ,0)):"P",$P($G(^XMB(3.9,XMZ,.6)),U,1)=XMCRE8:"E",1:"R")
"RTN","XMR1A",80,0)
REMXMZ(XMZ,XMP2,XMP1) ; Message originated somewhere else.
"RTN","XMR1A",81,0)
 I '$D(^XMB(3.9,XMZ,0)) Q XMZ_"^0^P"
"RTN","XMR1A",82,0)
 N XMREMID
"RTN","XMR1A",83,0)
 S XMREMID=$G(^XMB(3.9,XMZ,5))
"RTN","XMR1A",84,0)
 I XMREMID="" Q XMZ_"^0^R"
"RTN","XMR1A",85,0)
 I XMP1_"@"_XMP2=XMREMID Q XMZ_"^0^E"
"RTN","XMR1A",86,0)
 I XMP2_"@"_XMP1=XMREMID Q XMZ_"^0^E"
"RTN","XMR1A",87,0)
 Q XMZ_"^0^R"
"RTN","XMR1A",88,0)
FACILITY(X) ; If full domain name is found in domain file, either as main entry
"RTN","XMR1A",89,0)
 ; or as synonym, return main entry.  "Domain IEN^Domain name"
"RTN","XMR1A",90,0)
 N DIC,Y,D
"RTN","XMR1A",91,0)
 S DIC="^DIC(4.2,",DIC(0)="FMOZ",D="B^C"
"RTN","XMR1A",92,0)
 D MIX^DIC1
"RTN","XMR1A",93,0)
 Q Y
"RTN","XMR2")
0^221^B14969039
"RTN","XMR2",1,0)
XMR2 ;(WASH ISC)/THM-SMTP HELP PROCESSOR ;02/11/98  10:04
"RTN","XMR2",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMR2",3,0)
HELP ;
"RTN","XMR2",4,0)
 S:XMP="" XMP="HHHH" G:$L(XMP)=4&("HHHH HELO MAIL RCPT"'[XMP) H2^XMR3
"RTN","XMR2",5,0)
 I $L(XMP)=4 D H3 G H4
"RTN","XMR2",6,0)
 G:XMP'="ALL" HE F XMP="HHHH","HELO","MAIL","RCPT" D H3
"RTN","XMR2",7,0)
 G ALL^XMR3
"RTN","XMR2",8,0)
H3 Q:$T(@XMP)=""  F J=0:1 S XMSG="214-"_$P($T(@XMP+J),";",3,99) Q:$L(XMSG)=4  X XMSEN Q:ER
"RTN","XMR2",9,0)
 Q
"RTN","XMR2",10,0)
H4 S XMSG="214 " X XMSEN Q
"RTN","XMR2",11,0)
 Q
"RTN","XMR2",12,0)
HE S XMP="HHHH" G HELP
"RTN","XMR2",13,0)
HHHH ;; 
"RTN","XMR2",14,0)
 ;;This is the simple mail transfer protocol receiver
"RTN","XMR2",15,0)
 ;;Commands currently understood are: 
"RTN","XMR2",16,0)
 ;;HELO <domain> (which initiates a transaction)
"RTN","XMR2",17,0)
 ;;MAIL FROM: <reverse-path>
"RTN","XMR2",18,0)
 ;;RCPT TO: <forward-path>  (which names a recipient)
"RTN","XMR2",19,0)
 ;;DATA (terminated with a single line of '.')
"RTN","XMR2",20,0)
 ;;HELP (which displays this text)
"RTN","XMR2",21,0)
 ;;NOOP (which does nothing)
"RTN","XMR2",22,0)
 ;;RSET <reason for> which stops transmission of message
"RTN","XMR2",23,0)
 ;;STAT (which displays the current status of the receiver)
"RTN","XMR2",24,0)
 ;;VRFY <user> (which verifies the existence of a user)
"RTN","XMR2",25,0)
 ;;TURN (Which turns around the line; Sender becomes receiver)
"RTN","XMR2",26,0)
 ;;EXPN <mail group> (which lists the members of a group)
"RTN","XMR2",27,0)
 ;;QUIT (which terminates the connection)
"RTN","XMR2",28,0)
 ;; 
"RTN","XMR2",29,0)
 ;;CHRS <domain> initialize a remote domain
"RTN","XMR2",30,0)
 ;;Extensions:
"RTN","XMR2",31,0)
 ;;MESS ID:XMREMID Sending message remote ID to allow processing to stop
"RTN","XMR2",32,0)
 ;; 
"RTN","XMR2",33,0)
 ;;Enter HELP ALL to see further discussion on all commands, or
"RTN","XMR2",34,0)
 ;;HELP <command> to see further discussion of <command>.
"RTN","XMR2",35,0)
 ;;
"RTN","XMR2",36,0)
HELO ;; 
"RTN","XMR2",37,0)
 ;;The HELO command is used to identify the sending host to the receiver:
"RTN","XMR2",38,0)
 ;; 
"RTN","XMR2",39,0)
 ;;   HELO <domain>
"RTN","XMR2",40,0)
 ;; 
"RTN","XMR2",41,0)
 ;; Where <domain> is the name of the sending host.
"RTN","XMR2",42,0)
 ;; 
"RTN","XMR2",43,0)
 ;;If the receiver will accept mail, it responds with its name.
"RTN","XMR2",44,0)
 ;; 
"RTN","XMR2",45,0)
 ;;The HELO command must be the first command of a mail sequence.
"RTN","XMR2",46,0)
 ;;
"RTN","XMR2",47,0)
MAIL ;; 
"RTN","XMR2",48,0)
 ;;The MAIL command is used after a HELO command to ask a receiver to
"RTN","XMR2",49,0)
 ;;accept a mail message.  The format is:
"RTN","XMR2",50,0)
 ;; 
"RTN","XMR2",51,0)
 ;;  MAIL FROM: <user>@<site>
"RTN","XMR2",52,0)
 ;; 
"RTN","XMR2",53,0)
 ;;where <user> is the name of the user sending the message, and <site>
"RTN","XMR2",54,0)
 ;;is the name of the site sending the mail, in Internet domain
"RTN","XMR2",55,0)
 ;;format.
"RTN","XMR2",56,0)
 ;;
"RTN","XMR2",57,0)
 ;;The receiver will respond with "250 OK" if accepted, and "501 Invalid
"RTN","XMR2",58,0)
 ;;Reverse path specification" if not.
"RTN","XMR2",59,0)
 ;; 
"RTN","XMR2",60,0)
 ;;This command is followed with RCPT and DATA commands to name
"RTN","XMR2",61,0)
 ;;and transfer the data, respectively.
"RTN","XMR2",62,0)
 ;;
"RTN","XMR2",63,0)
RCPT ;; 
"RTN","XMR2",64,0)
 ;;This command is used to identify the recipients of the mail.
"RTN","XMR2",65,0)
 ;;Its format is:
"RTN","XMR2",66,0)
 ;; 
"RTN","XMR2",67,0)
 ;;   RCPT TO: <user>
"RTN","XMR2",68,0)
 ;; 
"RTN","XMR2",69,0)
 ;;If the user is found, the receiver will respond with "250 OK";
"RTN","XMR2",70,0)
 ;;Otherwise, it will say "501 Invalid forward path specification".
"RTN","XMR2",71,0)
 ;; 
"RTN","XMR2",72,0)
 ;;Each recipient of the message is named individually.  The VRFY
"RTN","XMR2",73,0)
 ;;command can be used to confirm the existence of a user without
"RTN","XMR2",74,0)
 ;;actually putting him on the recipient list. 
"RTN","XMR2",75,0)
 ;;After recipients are specified, the DATA command is used to transfer
"RTN","XMR2",76,0)
 ;;the body of the message.
"RTN","XMR2",77,0)
 ;;
"RTN","XMRENT")
0^222^B4126976
"RTN","XMRENT",1,0)
XMRENT ;(WASH ISC)/CMW - NETWORK MAIL API ENTRY POINTS ;06/15/99  07:35
"RTN","XMRENT",2,0)
 ;;7.1;MailMan;**31,50**;Jun 02, 1994
"RTN","XMRENT",3,0)
 ; Entry points (DBIA 1143):
"RTN","XMRENT",4,0)
 ; $$NET  Get message information.
"RTN","XMRENT",5,0)
 ;
"RTN","XMRENT",6,0)
 ;Extrinsic Function for API call to parse network header
"RTN","XMRENT",7,0)
 ;Parameter #1=Message #
"RTN","XMRENT",8,0)
 ;
"RTN","XMRENT",9,0)
 ;Output=STRING
"RTN","XMRENT",10,0)
 ;  Message-date ^ Encryption-code ^ Returned addr of sender ^ Message ID
"RTN","XMRENT",11,0)
 ;   ^ Sender ^ Message subject ^ Message ID of In-reply-to ^ Message Type
"RTN","XMRENT",12,0)
 ;
"RTN","XMRENT",13,0)
NET(XMZ) ;New all variables that are used in PARSE^XMR1
"RTN","XMRENT",14,0)
 Q:'$D(^XMB(3.9,XMZ,0)) ""
"RTN","XMRENT",15,0)
 N XMDATE,XMENCR,XMFROM,XMREMID,XMSEND,XMSUBJ,XMZO,XMFIRST
"RTN","XMRENT",16,0)
 S XMFIRST=$O(^XMB(3.9,XMZ,2,0))
"RTN","XMRENT",17,0)
 I XMFIRST,XMFIRST<1 D
"RTN","XMRENT",18,0)
 . D NETMAIL(XMZ,.XMREMID,.XMSUBJ,.XMFROM,.XMDATE,.XMSEND,.XMENCR,.XMZO)
"RTN","XMRENT",19,0)
 E  D
"RTN","XMRENT",20,0)
 . D LOCMAIL(XMZ,.XMREMID,.XMSUBJ,.XMFROM,.XMDATE,.XMSEND,.XMENCR,.XMZO)
"RTN","XMRENT",21,0)
 Q $G(XMDATE)_U_$G(XMENCR)_U_$G(XMFROM)_U_$G(XMREMID)_U_$G(XMSEND)_U_$G(XMSUBJ)_U_$G(XMZO)_U_$P($G(^XMB(3.9,XMZ,0)),U,7)
"RTN","XMRENT",22,0)
LOCMAIL(XMZ,XMREMID,XMSUBJ,XMFROM,XMDATE,XMSEND,XMENCR,XMZO) ; Get data for Locally originated message
"RTN","XMRENT",23,0)
 N XMZREC,Y
"RTN","XMRENT",24,0)
 S XMZREC=^XMB(3.9,XMZ,0)
"RTN","XMRENT",25,0)
 S Y=$P(XMZREC,U,3),%DT="S" D DD^%DT S XMDATE=Y
"RTN","XMRENT",26,0)
 S:$P(XMZREC,U,8) XMZO=^XMB("NETNAME")_"@"_$P(XMZREC,U,8)
"RTN","XMRENT",27,0)
 S XMSEND=$S($P(XMZREC,U,4)="":"",1:$$NAME^XMXUTIL($P(XMZREC,U,4)))
"RTN","XMRENT",28,0)
 S XMENCR=$P(XMZREC,U,10)
"RTN","XMRENT",29,0)
 S XMFROM=$$NAME^XMXUTIL($P(XMZREC,U,2))
"RTN","XMRENT",30,0)
 S XMSUBJ=$$SUBJ^XMXUTIL2(XMZREC)
"RTN","XMRENT",31,0)
 S XMREMID=$$NETID^XMS0A(XMZ)
"RTN","XMRENT",32,0)
 Q
"RTN","XMRENT",33,0)
NETMAIL(XMZ,XMREMID,XMSUBJ,XMFROM,XMDATE,XMSEND,XMENCR,XMZO) ; Get data for Message that originated from another domain
"RTN","XMRENT",34,0)
 D PARSE^XMR1(XMZ,.XMREMID,.XMSUBJ,.XMFROM,.XMDATE,.XMSEND,.XMENCR,.XMZO)
"RTN","XMRENT",35,0)
 S:$G(XMSUBJ)="" XMSUBJ=" "
"RTN","XMRENT",36,0)
 S XMFROM="<"_$$REMADDR^XMXADDR1(XMFROM)_">"
"RTN","XMRENT",37,0)
 S:XMREMID[".VA.GOV" XMFROM=$TR($P(XMFROM,"@"),"._+",", .")_"@"_$P(XMFROM,"@",2)
"RTN","XMRENT",38,0)
 Q
"RTN","XMRMSM")
0^235^B464029
"RTN","XMRMSM",1,0)
XMRMSM ;(WASH ISC)/CAP-MSM TCP/IP FRONT END ;09/04/98  13:18
"RTN","XMRMSM",2,0)
 ;;7.1;MailMan;**61,50**;Jun 02, 1994
"RTN","XMRMSM",3,0)
 Q
"RTN","XMRMSM",4,0)
 ;%=socket number
"RTN","XMRMSM",5,0)
SOC25 S XMRPORT=$G(%),IOT="TCP",(IO,IO(0))=56,DIQUIET=1
"RTN","XMRMSM",6,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D TRP^XMCTRAP"
"RTN","XMRMSM",7,0)
 E  S X="TRP^XMCTRAP",@^%ZOSF("TRAP")
"RTN","XMRMSM",8,0)
 D DT^DICRW,DUZ^XUP(.5)
"RTN","XMRMSM",9,0)
 S ER=0
"RTN","XMRMSM",10,0)
 U IO
"RTN","XMRMSM",11,0)
 S XMCHAN="TCP/IP-MAILMAN",XMNO220=""
"RTN","XMRMSM",12,0)
 D ENT^XMR G HALT
"RTN","XMRMSM",13,0)
HALT ;Unlock all locks, disconnect the connection and quit
"RTN","XMRMSM",14,0)
 L  H
"RTN","XMRONT")
0^234^B1047307
"RTN","XMRONT",1,0)
XMRONT ;(SF-ISC)/RWF - OpenM-NT TCP/IP INETD AND FRONT END ;06/22/99  15:17
"RTN","XMRONT",2,0)
 ;;7.1;MailMan;**61,50**;Jun 02, 1994
"RTN","XMRONT",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMRONT",4,0)
 ; ^XMRONT   XMRONT
"RTN","XMRONT",5,0)
 ;This routine starts a listener for TCP mail Connects.
"RTN","XMRONT",6,0)
 ; It takes the place of the INETD Unix process
"RTN","XMRONT",7,0)
 ;
"RTN","XMRONT",8,0)
GO ;Open port 25 in Accept mode.
"RTN","XMRONT",9,0)
 S XMRSOCK=25
"RTN","XMRONT",10,0)
 D LISTEN^%ZISTCPS(XMRSOCK,"SOC25^XMRONT")
"RTN","XMRONT",11,0)
 HALT
"RTN","XMRONT",12,0)
 ;
"RTN","XMRONT",13,0)
SOC25 ;This entry point is started as a new process by %ZISTCPS.
"RTN","XMRONT",14,0)
 S (XMRPORT,IO,IO(0))=$IO,IOT="TCP"
"RTN","XMRONT",15,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D TRP^XMCTRAP"
"RTN","XMRONT",16,0)
 E  S X="TRP^XMCTRAP",@^%ZOSF("TRAP")
"RTN","XMRONT",17,0)
 S DIQUIET=1 D DT^DICRW,DUZ^XUP(.5)
"RTN","XMRONT",18,0)
 S ER=0,XMCHAN="TCP/IP-MAILMAN",XMNO220=""
"RTN","XMRONT",19,0)
 U IO
"RTN","XMRONT",20,0)
 D ENT^XMR
"RTN","XMRONT",21,0)
HALT ;Unlock all locks, close the connection and quit
"RTN","XMRONT",22,0)
 L   ;C IO  The close caused a problem under OpenM 52e, so it was removed
"RTN","XMRONT",23,0)
 Q
"RTN","XMRONT",24,0)
  
"RTN","XMRPCTS0")
0^100^B16005036
"RTN","XMRPCTS0",1,0)
XMRPCTS0 ;(KC-VAMC)/XXX-Send TWIX's to PCTS Host [XMTR] ;03/23/98  14:09
"RTN","XMRPCTS0",2,0)
 ;;7.1;MailMan;**6,12,31,55,50**;Jun 02, 1994
"RTN","XMRPCTS0",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMRPCTS0",4,0)
 ; RQ       XMNET-TWIX-TRANSMIT
"RTN","XMRPCTS0",5,0)
 ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
"RTN","XMRPCTS0",6,0)
 ; Walk through this Domains Transmit Basket and send them.
"RTN","XMRPCTS0",7,0)
 ; If there is an error, record the error message, copy of
"RTN","XMRPCTS0",8,0)
 ; the message, and drop to PCTS Mailgroup.
"RTN","XMRPCTS0",9,0)
 ;-------------------------------------------------------------
"RTN","XMRPCTS0",10,0)
 S %=$$DSP^XMRPCTS("==>Checking for PCTS Messages to Transmit<==")
"RTN","XMRPCTS0",11,0)
 ;Get domain # for the PCTS domain
"RTN","XMRPCTS0",12,0)
 S XMINST=$O(^DIC(4.2,"B","VHA.DMIA",0))
"RTN","XMRPCTS0",13,0)
 S XMK=XMINST+1000,XMDUZ=.5,XMZ=0,U="^" D INIT^XMRPCTSA S XMRPCTS("S")=0
"RTN","XMRPCTS0",14,0)
WALK S %=$$DSP("==>Checking for messages in basket # "_XMK_"<==")
"RTN","XMRPCTS0",15,0)
 S XMZ=$O(^XMB(3.7,.5,2,XMK,1,XMZ)) G EXIT:XMZ<1
"RTN","XMRPCTS0",16,0)
 I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMXMSGS2(.5,XMK,XMZ) G WALK ;Message is Gone?
"RTN","XMRPCTS0",17,0)
 S %=$$DSP("<==MREQ for local "_XMZ) W "MREQ",!,XMZ,!,"PCTS",!,"AMS",!,"TAB",!,XMET,XMCR S %=0
"RTN","XMRPCTS0",18,0)
 ;
"RTN","XMRPCTS0",19,0)
MREQ F I=1:1:3 R X:5 Q:$T
"RTN","XMRPCTS0",20,0)
 I X["MAK1" R X:3 S XMMN=$P(X,XMLF,2) G:X[XMET!(XMMN'=XMZ) EXIT G REM
"RTN","XMRPCTS0",21,0)
 I X["MEND"!(X[XMET) S %=$$DSP("==>MENDing<==") G EXIT
"RTN","XMRPCTS0",22,0)
 S %=%+1 G MREQ:%<3,EXIT
"RTN","XMRPCTS0",23,0)
REM R X:3 S XMMN=$P(X,XMLF,2) G:X[XMET!(XMMN'?1N.N) EXIT
"RTN","XMRPCTS0",24,0)
 S %=$$DSP("==>MAK1 for REMOTE "_XMMN)
"RTN","XMRPCTS0",25,0)
MDTA ;
"RTN","XMRPCTS0",26,0)
 S %=$$DSP("<==MDTA, Now Sending Message #"_XMZ)
"RTN","XMRPCTS0",27,0)
 S ^XMBS(4.2999,XMINST,3)=$H_"^"_XMZ_"^^^^DMI/MM-SSP" ; mailman status
"RTN","XMRPCTS0",28,0)
 W "MDTA",!,XMZ,!,XMMN,!,XMSH S XMLPC=0 ;Here we go!
"RTN","XMRPCTS0",29,0)
 F X=0:0 S X=$O(^XMB(3.9,XMZ,2,X)) Q:X<1  I $D(^(X,0)) S Z=^(0) D  Q:$E(Z,1,6)["NNNN"
"RTN","XMRPCTS0",30,0)
 . N X,Y S X=$C(XMLPC)_Z_XMCR_XMLF X ^%ZOSF("LPC") S XMLPC=Y W Z,!
"RTN","XMRPCTS0",31,0)
 ;S X=$C(XMLPC)_XMLF) X ^%ZOSF("LPC") S XMLPC=Y ;We like that extra lf calculated
"RTN","XMRPCTS0",32,0)
 S XMLPC=$E(XMDH,XMLPC\16+1)_$E(XMDH,XMLPC#16+1) ;The Magic Code
"RTN","XMRPCTS0",33,0)
 W $C(25),XMLPC,XMET,XMCR S %=1 ;Write the checksum
"RTN","XMRPCTS0",34,0)
MAK2 F I=1:1:3 R X:5 Q:$T  ;Look for the status of the one we just sent
"RTN","XMRPCTS0",35,0)
 I X["MAK2" S XMSTAT="Sent-> AMS Msg# "_XMMN R X:3 R X:3 D STAT S XMRPCTS("S")=XMRPCTS("S")+1 G WALK
"RTN","XMRPCTS0",36,0)
 I $E(X["MN") R X:3 R X:3 S XMSTAT="Error: "_$P(X,XMLF,2) D STAT,ERR G WALK
"RTN","XMRPCTS0",37,0)
 S %=%+1 G MAK2:%<3
"RTN","XMRPCTS0",38,0)
 ;
"RTN","XMRPCTS0",39,0)
 S %=$$DSP("==>INVALID RESPONSE from RCVR, Expecting MAK2, Closing up")
"RTN","XMRPCTS0",40,0)
 G EXIT
"RTN","XMRPCTS0",41,0)
 ;
"RTN","XMRPCTS0",42,0)
 Q
"RTN","XMRPCTS0",43,0)
JD() ; Returns today's Julian date
"RTN","XMRPCTS0",44,0)
 N XMDDD,XMHHMM,XMNOW,XMDT
"RTN","XMRPCTS0",45,0)
 S XMNOW=$$NOW^XLFDT
"RTN","XMRPCTS0",46,0)
 S XMDT=$E(XMNOW,1,7)
"RTN","XMRPCTS0",47,0)
 S XMDDD=$$RJ^XLFSTR($$FMDIFF^XLFDT(XMDT,$E(XMDT,1,3)_"0101",1)+1,3,"0")
"RTN","XMRPCTS0",48,0)
 S XMHHMM=$$LJ^XLFSTR($E(XMNOW,9,12),4,"0")
"RTN","XMRPCTS0",49,0)
 Q XMDDD_XMHHMM
"RTN","XMRPCTS0",50,0)
 ;
"RTN","XMRPCTS0",51,0)
DSP(XMTRAN) D TRAN^XMC1
"RTN","XMRPCTS0",52,0)
 Q "" ;Show us what is going on
"RTN","XMRPCTS0",53,0)
 ;
"RTN","XMRPCTS0",54,0)
STAT ;Update the Mailman Status
"RTN","XMRPCTS0",55,0)
 S X=$O(^XMB(3.9,XMZ,1,"C","XXX@"_$P(^DIC(4.2,+XMINST,0),U),0))
"RTN","XMRPCTS0",56,0)
 I X>0 S $P(^XMB(3.9,XMZ,1,X,0),U,5,6)=$$DT_U_XMSTAT
"RTN","XMRPCTS0",57,0)
 S ^XMBS(4.2999,XMINST,3)="" ;Mailman Status
"RTN","XMRPCTS0",58,0)
 D ZAPIT^XMXMSGS2(.5,XMK,XMZ) ;Remove it from the Domains Basket
"RTN","XMRPCTS0",59,0)
 Q
"RTN","XMRPCTS0",60,0)
ERR N %,X,XMSUB,XMTEXT,XMY,Y
"RTN","XMRPCTS0",61,0)
 S %=$$DSP("==>Recording Rejected Message #"_XMZ_"  "_XMSTAT),XMTEXT="^XMB(3.9,"_XMZ_",2,"
"RTN","XMRPCTS0",62,0)
 N XMZ,DIC,XMDF
"RTN","XMRPCTS0",63,0)
 S XMSUB="PCTS Message Returned "_XMSTAT,XMDF=1
"RTN","XMRPCTS0",64,0)
 S XMY("G.PCTS")="" ; Mail group PCTS must be created on the system
"RTN","XMRPCTS0",65,0)
 S XMY(.5)="" D ^XMD Q  ;Send it to the PostMaster anyway
"RTN","XMRPCTS0",66,0)
 ;
"RTN","XMRPCTS0",67,0)
DT() N X,Y,%DT S %DT="T",X="N" D ^%DT Q (Y)
"RTN","XMRPCTS0",68,0)
EXIT S %=$$DSP("==>Quitting<==")
"RTN","XMRPCTS0",69,0)
 W "MEND",! Q
"RTN","XMRPCTS0",70,0)
RQ ;Force this domain to play its script, it plays regardless...
"RTN","XMRPCTS0",71,0)
 ;Queue this puppy to run at regular intervals.
"RTN","XMRPCTS0",72,0)
 N XMDUZ,Y,XMSCR,XMSITE,XMINST,XMSCRN,XMTSK,XMB,XM,%,XMDIC
"RTN","XMRPCTS0",73,0)
 S XMDUZ=.5
"RTN","XMRPCTS0",74,0)
 S (XMSCRN,XMSITE)="VHA.DMIA"
"RTN","XMRPCTS0",75,0)
 S (Y,XMSCR,XMINST)=$O(^DIC(4.2,"B",XMSITE,0))
"RTN","XMRPCTS0",76,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","XMRPCTS0",77,0)
 S XMTSK=+$P($G(^XMBS(4.2999,XMINST,3)),U,7)
"RTN","XMRPCTS0",78,0)
 I XMTSK I $$CHK^XMS5(XMTSK,XMINST) G QQ
"RTN","XMRPCTS0",79,0)
 S (XMOKSCR("SMTP"),XMOKSCR("NONE"))=""
"RTN","XMRPCTS0",80,0)
 S %=$$SCR^XMBPOST(XMINST,.XMOKSCR,"") K XMOKSCR
"RTN","XMRPCTS0",81,0)
 I '% K % S %="No script found!"_% G QQ ;FORCE ERROR FOR DEBUGGING
"RTN","XMRPCTS0",82,0)
 D XMB^XMBPOST
"RTN","XMRPCTS0",83,0)
 S XMIO=$P(XMB("SCRIPT"),U,5)
"RTN","XMRPCTS0",84,0)
 S:'$D(ZTQUEUED) XM="D" ;For Debugging
"RTN","XMRPCTS0",85,0)
 I '$D(DT) D NOW^%DTC S DT=X,U="^"
"RTN","XMRPCTS0",86,0)
 S XMDIC="^DIC(4.2,XMINST,1,"_XMB("SCRIPT",0)_",1,"
"RTN","XMRPCTS0",87,0)
 D ^XMC1
"RTN","XMRPCTS0",88,0)
QQ S %=$$DSP("Quitting from sending TWIX's") ;D KL1^XMC
"RTN","XMRPCTS0",89,0)
 L  K DIC,X,Y,XMDT,ZTPAR Q:'$G(XMRPCTS0)  S XMCI=XMRPCTS0 Q
"RTN","XMRPCTS1")
0^101^B21094797
"RTN","XMRPCTS1",1,0)
XMRPCTS1 ;(KC-VAMC)/XXX-Simple PCTS front end to MailMan ;02/06/99  10:32
"RTN","XMRPCTS1",2,0)
 ;;7.1;MailMan;**6,50**;Jun 02, 1994
"RTN","XMRPCTS1",3,0)
 N XMUS,XMFM,XMSTR,XMRI,XMTO,XMABORT
"RTN","XMRPCTS1",4,0)
 ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
"RTN","XMRPCTS1",5,0)
 ;All should be sent to XXX@VHA.DMIA the local PCTS Domain
"RTN","XMRPCTS1",6,0)
 ;Edit these for your site.
"RTN","XMRPCTS1",7,0)
 S XMUS="XXXX" ;Local routing indicator
"RTN","XMRPCTS1",8,0)
 S XMFM="YYYY" ;from line
"RTN","XMRPCTS1",9,0)
 I XMUS="XXXX"!(XMFM="YYYY") S %="FIX Routing codes !!!"_XMPCTS0("ERR")
"RTN","XMRPCTS1",10,0)
 ;-------------------------------------------------------------
"RTN","XMRPCTS1",11,0)
 S XMABORT=0
"RTN","XMRPCTS1",12,0)
 D INIT(.XMDUZ,XMUS,.XMSTR,.XMRI,.XMTO,.XMABORT) Q:XMABORT
"RTN","XMRPCTS1",13,0)
 D CRE8XMZ^XMXSEND("Local PCTS Transmission.",.XMZ,1) I XMZ<1 S XMABORT=1 Q
"RTN","XMRPCTS1",14,0)
 D EDITON^XMJMS(XMDUZ,XMZ)
"RTN","XMRPCTS1",15,0)
 D PROCESS(XMDUZ,XMSTR,XMFM,XMRI,XMTO,.XMZ,.XMABORT)
"RTN","XMRPCTS1",16,0)
 D EDITOFF^XMJMS(XMDUZ)
"RTN","XMRPCTS1",17,0)
 Q:'XMABORT
"RTN","XMRPCTS1",18,0)
 W !!,"TWIX Send aborted !",*7
"RTN","XMRPCTS1",19,0)
 H 2
"RTN","XMRPCTS1",20,0)
 D KILLMSG^XMXUTIL(XMZ)
"RTN","XMRPCTS1",21,0)
 Q
"RTN","XMRPCTS1",22,0)
INIT(XMDUZ,XMUS,XMSTR,XMRI,XMTO,XMABORT) ;
"RTN","XMRPCTS1",23,0)
 N XMSEQ
"RTN","XMRPCTS1",24,0)
 I '$D(DUZ)#2 D  Q
"RTN","XMRPCTS1",25,0)
 . W !!,"DUZ not defined..."
"RTN","XMRPCTS1",26,0)
 . S XMABORT=1
"RTN","XMRPCTS1",27,0)
 D EN^XM
"RTN","XMRPCTS1",28,0)
 W !!,"Create PCTS/AMS message.",!
"RTN","XMRPCTS1",29,0)
 ;Making this the pseudo-sequence number - meaningless.
"RTN","XMRPCTS1",30,0)
 S XMSEQ=$P(^XMB(3.9,0),U,3),XMSEQ=$$RJ^XLFSTR($E(XMSEQ,$L(XMSEQ)-3,99),4,"0")
"RTN","XMRPCTS1",31,0)
 ;Build the Header
"RTN","XMRPCTS1",32,0)
 S XMSTR="PAAUIJAZ "_XMUS_XMSEQ_" "_$$JD^XMRPCTS0_"-UUUU--"
"RTN","XMRPCTS1",33,0)
 D RI(.XMRI,.XMABORT) Q:XMABORT
"RTN","XMRPCTS1",34,0)
 D TO(.XMTO,.XMABORT)
"RTN","XMRPCTS1",35,0)
 Q
"RTN","XMRPCTS1",36,0)
RI(XMRI,XMABORT) ;
"RTN","XMRPCTS1",37,0)
 N DIR,DIRUT,Y,X,DTOUT,DUOUT
"RTN","XMRPCTS1",38,0)
 S DIR(0)="FO^3:30^K X'?1UP.UP X"
"RTN","XMRPCTS1",39,0)
 S DIR("A")="Destination RI"
"RTN","XMRPCTS1",40,0)
 S DIR("?")="Enter the Destination Routing Indicator, like RUCHJBO."
"RTN","XMRPCTS1",41,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) S XMABORT=1 Q
"RTN","XMRPCTS1",42,0)
 I Y="" S Y="<RI>" W "<blank>"
"RTN","XMRPCTS1",43,0)
 S XMRI=Y
"RTN","XMRPCTS1",44,0)
 S:$E(XMRI,$L(XMRI))'="." XMRI=XMRI_"."
"RTN","XMRPCTS1",45,0)
 Q
"RTN","XMRPCTS1",46,0)
TO(XMTO,XMABORT) ;
"RTN","XMRPCTS1",47,0)
 N DIR,DIRUT,Y,X,DTOUT,DUOUT
"RTN","XMRPCTS1",48,0)
 S DIR(0)="F^3:60"
"RTN","XMRPCTS1",49,0)
 S DIR("A")="Destination TO line"
"RTN","XMRPCTS1",50,0)
 S DIR("?")="Enter the content of the TO line of the message."
"RTN","XMRPCTS1",51,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) S XMABORT=1 Q
"RTN","XMRPCTS1",52,0)
 S XMTO=Y
"RTN","XMRPCTS1",53,0)
 Q
"RTN","XMRPCTS1",54,0)
PROCESS(XMDUZ,XMSTR,XMFM,XMRI,XMTO,XMZ,XMABORT) ;
"RTN","XMRPCTS1",55,0)
 N I,%,XMTEXT,XMINSTR,XMRESTR
"RTN","XMRPCTS1",56,0)
 S %="ZNR UUUUU"
"RTN","XMRPCTS1",57,0)
 F I="RUCH","RUEV","RUWL","RUGS" I XMRI[I S %="VADM"
"RTN","XMRPCTS1",58,0)
 S I=0
"RTN","XMRPCTS1",59,0)
 S I=I+1,XMTEXT(I)=XMSTR_XMRI ;header line
"RTN","XMRPCTS1",60,0)
 S I=I+1,XMTEXT(I)=%
"RTN","XMRPCTS1",61,0)
 S I=I+1,XMTEXT(I)="FM "_XMFM ;from line
"RTN","XMRPCTS1",62,0)
 S I=I+1,XMTEXT(I)="TO "_XMTO ;to line
"RTN","XMRPCTS1",63,0)
 S I=I+1,XMTEXT(I)="BT"
"RTN","XMRPCTS1",64,0)
 S I=I+1,XMTEXT(I)=""
"RTN","XMRPCTS1",65,0)
 S I=I+1,XMTEXT(I)="<text>"
"RTN","XMRPCTS1",66,0)
 S I=I+1,XMTEXT(I)=""
"RTN","XMRPCTS1",67,0)
 S I=I+1,XMTEXT(I)="BT"
"RTN","XMRPCTS1",68,0)
 S I=I+1,XMTEXT(I)=""
"RTN","XMRPCTS1",69,0)
 S I=I+1,XMTEXT(I)="NNNN"
"RTN","XMRPCTS1",70,0)
 D MOVEBODY^XMXSEND(XMZ,"XMTEXT")
"RTN","XMRPCTS1",71,0)
 D E Q:XMABORT
"RTN","XMRPCTS1",72,0)
 D INIT^XMXADDR
"RTN","XMRPCTS1",73,0)
 D READY(XMDUZ,.XMINSTR,.XMRESTR,.XMABORT) Q:XMABORT
"RTN","XMRPCTS1",74,0)
 W !,"You may add recipients to this message."
"RTN","XMRPCTS1",75,0)
 D TOWHOM^XMJMT(XMDUZ,"Send",.XMINSTR,.XMRESTR,.XMABORT)
"RTN","XMRPCTS1",76,0)
 D:'XMABORT XMIT(XMDUZ,XMZ,.XMINSTR,.XMABORT)
"RTN","XMRPCTS1",77,0)
 D CLEANUP^XMXADDR
"RTN","XMRPCTS1",78,0)
 Q
"RTN","XMRPCTS1",79,0)
XMIT(XMDUZ,XMZ,XMINSTR,XMABORT) ;
"RTN","XMRPCTS1",80,0)
 N DIR,Y,X,DIRUT,XMFINISH
"RTN","XMRPCTS1",81,0)
 S XMFINISH=0
"RTN","XMRPCTS1",82,0)
 F  D  Q:XMFINISH!XMABORT
"RTN","XMRPCTS1",83,0)
 . S DIR(0)="SAM^E:Edit Text;T:Transmit now"
"RTN","XMRPCTS1",84,0)
 . S DIR("A")="Select Message option:  "
"RTN","XMRPCTS1",85,0)
 . S DIR("B")="Transmit now"
"RTN","XMRPCTS1",86,0)
 . S DIR("??")="^D Q^XMRPCTS1"
"RTN","XMRPCTS1",87,0)
 . D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMRPCTS1",88,0)
 . D @Y
"RTN","XMRPCTS1",89,0)
 Q
"RTN","XMRPCTS1",90,0)
E ; Edit Text
"RTN","XMRPCTS1",91,0)
 F  D BODY^XMJMS(XMDUZ,XMZ,.XMRESTR,.XMABORT) Q:XMABORT!$$NCHECK(XMZ)
"RTN","XMRPCTS1",92,0)
 Q
"RTN","XMRPCTS1",93,0)
NCHECK(XMZ) ; If "NNNN" found in text, issue error
"RTN","XMRPCTS1",94,0)
 N NCNT,I
"RTN","XMRPCTS1",95,0)
 S (NCNT,I)=0
"RTN","XMRPCTS1",96,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  I ^XMB(3.9,XMZ,2,I,0)["NNNN" S NCNT=NCNT+1
"RTN","XMRPCTS1",97,0)
 Q:NCNT'>1 1
"RTN","XMRPCTS1",98,0)
 W !!,"<< 4 CONSECUTIVE N's ARE NOT ALLOWED IN THE MSG TEXT !!! >>",!!,*7
"RTN","XMRPCTS1",99,0)
 H 5
"RTN","XMRPCTS1",100,0)
 Q 0
"RTN","XMRPCTS1",101,0)
T ; Transmit
"RTN","XMRPCTS1",102,0)
 S XMFINISH=1
"RTN","XMRPCTS1",103,0)
 D BLDNSND^XMXSEND(XMDUZ,XMZ,.XMINSTR)
"RTN","XMRPCTS1",104,0)
 Q
"RTN","XMRPCTS1",105,0)
Q W !,"Answer: ",!
"RTN","XMRPCTS1",106,0)
 W !,"T  (or just return) to PERMANENTLY transmit the message."
"RTN","XMRPCTS1",107,0)
 W !,"E                   to Edit the text of the message."
"RTN","XMRPCTS1",108,0)
 W !,"'^'  to cancel the message."
"RTN","XMRPCTS1",109,0)
 Q
"RTN","XMRPCTS1",110,0)
READY(XMDUZ,XMINSTR,XMRESTR,XMABORT) ;
"RTN","XMRPCTS1",111,0)
 N DIR,DIRUT,Y
"RTN","XMRPCTS1",112,0)
 S DIR(0)="Y"
"RTN","XMRPCTS1",113,0)
 S DIR("A")="Ready to send to the Austin AMS System"
"RTN","XMRPCTS1",114,0)
 S DIR("?",1)="'YES' will place the message in the queue for transmission through the AMS System."
"RTN","XMRPCTS1",115,0)
 S DIR("?")="'NO' will place the message only in your IN basket."
"RTN","XMRPCTS1",116,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMRPCTS1",117,0)
 Q:'Y
"RTN","XMRPCTS1",118,0)
 W !,"Send to:  XXX@VHA.DMIA"
"RTN","XMRPCTS1",119,0)
 D ADDR^XMXADDR(XMDUZ,"XXX@VHA.DMIA",.XMINSTR,.XMRESTR)
"RTN","XMRPCTS1",120,0)
 Q
"RTN","XMRPCTS1",121,0)
EXIT ;
"RTN","XMRPCTS1",122,0)
 K I,XMTO,XMFM,XMSTR,XMUS,XMTM,XMRI,DIC,XCNP,XMXUSEC,ZTPAR,XMSEQ,XMOUT,DTOUT
"RTN","XMRPCTS1",123,0)
 K ^TMP("XMY",$J),^TMP("XMY0",$J)
"RTN","XMRPCTS1",124,0)
 Q
"RTN","XMRPCTSA")
0^223^B7279851
"RTN","XMRPCTSA",1,0)
XMRPCTSA ;(KC-VAMC)/XXX-Steal TWIX's from PCTS Host [RCVR] ;04/08/98  10:39
"RTN","XMRPCTSA",2,0)
 ;;7.1;MailMan;**6,31,61,50**;Jun 02, 1994
"RTN","XMRPCTSA",3,0)
 ; Create a Mailgroup called PCTS, all messages will be sent to its
"RTN","XMRPCTSA",4,0)
 ; membership.  This can be called from a mailman script, it should
"RTN","XMRPCTSA",5,0)
 ; look something like this:
"RTN","XMRPCTSA",6,0)
 ; 
"RTN","XMRPCTSA",7,0)
 ; O H=VHA.DMIA,P=SCP     <---- Domain name and protocol are meaningless
"RTN","XMRPCTSA",8,0)
 ; C MINI
"RTN","XMRPCTSA",9,0)
 ; L ogin:
"RTN","XMRPCTSA",10,0)
 ; S pcts
"RTN","XMRPCTSA",11,0)
 ; L CODE:
"RTN","XMRPCTSA",12,0)
 ; X W "PCTS RUCHxxx",!    <---- This is your local routing indicator
"RTN","XMRPCTSA",13,0)
 ; X S XMRPCTS0=XMCI+1
"RTN","XMRPCTSA",14,0)
 ; X D ^XMRPCTS              <---- Call this routine
"RTN","XMRPCTSA",15,0)
 ; X K XMRPCTS0
"RTN","XMRPCTSA",16,0)
 ;-----------------
"RTN","XMRPCTSA",17,0)
 ; Mailman Host: VHA.DMIA, Physical Link: MINIOUT
"RTN","XMRPCTSA",18,0)
 ;-------------------------------------------------------------
"RTN","XMRPCTSA",19,0)
XM N %,DIC,X,XMDF,XMTEXT,XXX,XMY,XMZ,Y
"RTN","XMRPCTSA",20,0)
 S %=$$DSP("<==Locally Mailing AMS Message"),XMRPCTS("R")=XMRPCTS("R")+1
"RTN","XMRPCTSA",21,0)
 N XM,XMCHAN,ZTSK,ZTQUEUED S ZTSK=1,ZTQUEUED=1,XMCHAN=1
"RTN","XMRPCTSA",22,0)
 S XMDF=1,U="^",XMTEXT="^TMP($J,",XMDUZ=.5
"RTN","XMRPCTSA",23,0)
 S XMY("G.PCTS")="",XMY(XMDUZ)="",XXX=XMSUB D ^XMD S XMLMN=XMZ
"RTN","XMRPCTSA",24,0)
 ;--Make it look like a network message so we can track some info
"RTN","XMRPCTSA",25,0)
 S ^XMB(3.9,XMZ,2,.001,0)="Received: from PCTS/AMS by "_^XMB("NETNAME")_" via DMI/MM translation with SSP."
"RTN","XMRPCTSA",26,0)
 S ^XMB(3.9,XMZ,2,.002,0)="Subject: "_XXX
"RTN","XMRPCTSA",27,0)
 S ^XMB(3.9,XMZ,2,.003,0)="Date: "_$$INDT^XMXUTIL1($$NOW^XLFDT())
"RTN","XMRPCTSA",28,0)
 S ^XMB(3.9,XMZ,2,.004,0)="Message-ID:<"_$P(XMMN," ")_"@AMS>"
"RTN","XMRPCTSA",29,0)
 S ^XMB(3.9,XMZ,2,.005,0)="From: The Austin AMS System"
"RTN","XMRPCTSA",30,0)
 S ^XMB(3.9,XMZ,2,.006,0)="To: G.PCTS"
"RTN","XMRPCTSA",31,0)
 S ^XMB(3.9,XMZ,2,.007,0)="X-Another service provided by DHCP"
"RTN","XMRPCTSA",32,0)
 S ^XMB(3.9,XMZ,2,.008,0)=""
"RTN","XMRPCTSA",33,0)
 Q
"RTN","XMRPCTSA",34,0)
REPLY ;Let AMS know we have the message OK and what our local msg number is
"RTN","XMRPCTSA",35,0)
 S %=$$DSP("<==MAK2, Message #"_XMLMN_" Removed from AMS Queue")
"RTN","XMRPCTSA",36,0)
 U IO W "MAK2",!,XMMN,!,"#"_XMLMN,!,XMET,XMCR Q
"RTN","XMRPCTSA",37,0)
 ;
"RTN","XMRPCTSA",38,0)
INIT ;called from XMRPCTS & XMRPCTS0
"RTN","XMRPCTSA",39,0)
 S %=$$DSP("==>Initializing<==")
"RTN","XMRPCTSA",40,0)
 I '$G(XMCI) S XMCI=$S($G(XMRPCTS0):XMRPCTS0,1:999999) I XMCI>999 S ER=1,Y="Lost the counter to the script processor (XMCI)."
"RTN","XMRPCTSA",41,0)
 S %=0,XMCR=$C(13),XMLF=$C(10),XMET=$C(4),XMSH=$C(1)
"RTN","XMRPCTSA",42,0)
 D TERMON
"RTN","XMRPCTSA",43,0)
 K ^TMP($J) ;Scratch Space
"RTN","XMRPCTSA",44,0)
 S XMLPC=0 ;Longitudinal Parity Check for SSP
"RTN","XMRPCTSA",45,0)
 S XMDH="0123456789ABCDEF" ; for LPC calculations
"RTN","XMRPCTSA",46,0)
 Q
"RTN","XMRPCTSA",47,0)
 ;
"RTN","XMRPCTSA",48,0)
TERMON ;Need to change read terminators
"RTN","XMRPCTSA",49,0)
 I ^%ZOSF("OS")["DSM" U IO:TERM=$C(3,4,13,27) Q
"RTN","XMRPCTSA",50,0)
 I ^%ZOSF("OS")["MSM" U IO:(::::::::$C(3,4,13,27)) Q
"RTN","XMRPCTSA",51,0)
 I ^%ZOSF("OS")["OpenM-NT" U $I:("":"+I-T":$C(3,4,13,27)) Q
"RTN","XMRPCTSA",52,0)
 W XMRPCTS("ERROR"),"Terminators not defined for this operating system",!
"RTN","XMRPCTSA",53,0)
 Q
"RTN","XMRPCTSA",54,0)
 ;
"RTN","XMRPCTSA",55,0)
DSP(XMTRAN) D TRAN^XMC1
"RTN","XMRPCTSA",56,0)
 Q ""
"RTN","XMRPCTSA",57,0)
 ;
"RTN","XMRPCTSA",58,0)
ERR D ^%ZTER S %=$$DSP("ERROR captured in error trap !!!")
"RTN","XMRPCTSA",59,0)
 G UNWIND^%ZTER
"RTN","XMRTCP")
0^118^B14150167
"RTN","XMRTCP",1,0)
XMRTCP ;(WASH ISC)/THM/CAP-SMTP RECEIVER ;09/04/98  13:41
"RTN","XMRTCP",2,0)
 ;;7.1;MailMan;**8,25,27,50**;Jun 02, 1994
"RTN","XMRTCP",3,0)
 ;Modified for TCP/IP under INET_SERVERS of Wollongong
"RTN","XMRTCP",4,0)
 ;
"RTN","XMRTCP",5,0)
POLL ;Poll all domains with flags set
"RTN","XMRTCP",6,0)
 ;Fake TaskMan Env.
"RTN","XMRTCP",7,0)
 S U="^",X="ERR^XMRTCP",@^%ZOSF("TRAP"),XMDUZ=.5
"RTN","XMRTCP",8,0)
 K XM S IOP="NULL",%IS=0 D ^%ZIS I '$D(IOT) S IOT=""
"RTN","XMRTCP",9,0)
HANG S IO(0)=IO,ZTQUEUED=$S($D(ZTQUEUED):ZTQUEUED,1:1),ZTSK=$S($D(ZTSK):ZTSK,1:"N/A"),XM="",XMLTCPT=""
"RTN","XMRTCP",10,0)
 I $G(^TMP("XMRTCP",0)) S XMLTCPT=^(0) K ^(0)
"RTN","XMRTCP",11,0)
L Q:$P(^XMB(1,1,0),U,18)=1
"RTN","XMRTCP",12,0)
 ;
"RTN","XMRTCP",13,0)
 ;Any queues flagged (x-ref is set by TCP/IP POLL FLAG in domain file)
"RTN","XMRTCP",14,0)
 S XMLTCPT=$O(^DIC(4.2,"ATCP",1,XMLTCPT)) G QQ:XMLTCPT=""
"RTN","XMRTCP",15,0)
 S (XMSCR,XMINST)=XMLTCPT
"RTN","XMRTCP",16,0)
 ;
"RTN","XMRTCP",17,0)
RQ ;Transmit messages / execute TURN command
"RTN","XMRTCP",18,0)
 ;Are there messages to send ?
"RTN","XMRTCP",19,0)
 I '$O(^XMB(3.7,.5,2,XMINST+1000,1,0)) G L
"RTN","XMRTCP",20,0)
 ;Job out, if all slots full wait and try again.
"RTN","XMRTCP",21,0)
 S %=$$CK(1) I '% S XMLTCPT=$O(^DIC(4.2,"ATCP",1,XMLTCPT),-1) H 60 G L
"RTN","XMRTCP",22,0)
 D SETUP L +^XMBX("TCPCHAN",XMINST):3 E  L -^XMBX("TCPCHAN-COUNT",%) G L
"RTN","XMRTCP",23,0)
 ;
"RTN","XMRTCP",24,0)
 S XMRTCP("CNT")=%
"RTN","XMRTCP",25,0)
 ;
"RTN","XMRTCP",26,0)
 ;Change name (prevent dupe error), then JOB myself
"RTN","XMRTCP",27,0)
 Q:$E($G(XMRTCP("NAME")),1,6)="MM-FTP"
"RTN","XMRTCP",28,0)
 S XMRTCP("NAME")="MM-TCP-"_XMINST D REN^XMRFTP
"RTN","XMRTCP",29,0)
 S X=^%ZOSF("ERRTN"),@^%ZOSF("TRAP")
"RTN","XMRTCP",30,0)
 ;
"RTN","XMRTCP",31,0)
 ;Deliver messages
"RTN","XMRTCP",32,0)
 ;
"RTN","XMRTCP",33,0)
 ;INIT
"RTN","XMRTCP",34,0)
 S (XMSITE,XMSCRN)=$P(^DIC(4.2,XMINST,0),"^")
"RTN","XMRTCP",35,0)
 D XMTCHECK^XMBPOST(XMINST,.XMB)
"RTN","XMRTCP",36,0)
 ;
"RTN","XMRTCP",37,0)
 ;Find and use TCP/IP channel script
"RTN","XMRTCP",38,0)
 S XMOKSCR("TCPCHAN")=""
"RTN","XMRTCP",39,0)
 S %=$G(XMB("SCRIPT",0))
"RTN","XMRTCP",40,0)
 I %="" D
"RTN","XMRTCP",41,0)
 . S %=$$SCR^XMBPOST(XMINST,.XMOKSCR,"") Q:%=""
"RTN","XMRTCP",42,0)
 . D XMB^XMBPOST
"RTN","XMRTCP",43,0)
 . S XMB("ITERATIONS")=0
"RTN","XMRTCP",44,0)
 . S XMB("FIRST SCRIPT")=XMB("SCRIPT",0)
"RTN","XMRTCP",45,0)
 E  I XMB("TRIES")'<$P($G(XMB("SCRIPT")),U,3) D
"RTN","XMRTCP",46,0)
 . S %=$$SCR^XMBPOST(XMINST,.XMOKSCR,%) Q:%=""
"RTN","XMRTCP",47,0)
 . D XMB^XMBPOST
"RTN","XMRTCP",48,0)
 . S XMB("TRIES",0,"$H")=$H
"RTN","XMRTCP",49,0)
 . S:XMB("SCRIPT",0)=XMB("FIRST SCRIPT") XMB("ITERATIONS")=XMB("ITERATIONS")+1
"RTN","XMRTCP",50,0)
 Q:%=""
"RTN","XMRTCP",51,0)
 ; If we've completed a cycle of scripts, wait until the "iterations"
"RTN","XMRTCP",52,0)
 ; number of hours has passed before we start the next cycle.
"RTN","XMRTCP",53,0)
 ; e.g. If we've completed 2 cycles, wait 2 hours before starting the
"RTN","XMRTCP",54,0)
 ; next cycle.
"RTN","XMRTCP",55,0)
 I XMB("ITERATIONS")>0,XMB("TRIES")=0,XMB("SCRIPT",0)=XMB("FIRST SCRIPT"),$$FMDIFF^XLFDT($$NOW^XLFDT,XMB("LASTTRY"),2)\60\60<XMB("ITERATIONS") G HALT
"RTN","XMRTCP",56,0)
 ; Check that last try is longer ago than number of tries in minutes.
"RTN","XMRTCP",57,0)
 ; e.g. If we've had 5 tries, wait 5 minutes before the next try.
"RTN","XMRTCP",58,0)
 E  I $G(XMB("LASTTRY")),$G(XMB("TRIES")),$$FMDIFF^XLFDT($$NOW^XLFDT,XMB("LASTTRY"),2)\60<XMB("TRIES") G HALT
"RTN","XMRTCP",59,0)
 S ZTIO=$P(XMB("SCRIPT"),U,5) ; $$SCR^XMBPOST makes sure piece 5 has data
"RTN","XMRTCP",60,0)
 S (%,Y)=XMB("SCRIPT",0)
"RTN","XMRTCP",61,0)
 S XMB("XMSCR")=XMSCR
"RTN","XMRTCP",62,0)
 S XMB("TRIES")=$G(XMB("TRIES"))+1
"RTN","XMRTCP",63,0)
 S $P(XMB("SCRIPT"),U,7)=$P(XMB("SCRIPT"),U,7)+1  ; Tries (again?)
"RTN","XMRTCP",64,0)
 S $P(XMB("SCRIPT"),U,8)=$P(XMB("SCRIPT"),U,8)+1  ; Errors
"RTN","XMRTCP",65,0)
 D XMTAUDIT^XMBPOST(.XMB)
"RTN","XMRTCP",66,0)
 S XMDIC="^DIC(4.2,"_XMSCR_",1,"_Y_",1,"
"RTN","XMRTCP",67,0)
 D ^XMC1
"RTN","XMRTCP",68,0)
 H 30
"RTN","XMRTCP",69,0)
 D KILL
"RTN","XMRTCP",70,0)
 G HALT
"RTN","XMRTCP",71,0)
 ;
"RTN","XMRTCP",72,0)
 ;Pause between POLLINGS
"RTN","XMRTCP",73,0)
QQ D KILL S X=$H*86400+$P($H,",",2) G:$O(^XMBX(4.2995,0)) FTP^XMRFTP
"RTN","XMRTCP",74,0)
 S X=22-($H*86400+$P($H,",",2)-X) I X>0 H X
"RTN","XMRTCP",75,0)
 G POLL
"RTN","XMRTCP",76,0)
 ;
"RTN","XMRTCP",77,0)
 ;Entry on dupe name
"RTN","XMRTCP",78,0)
DUPNAME S X="ERR^XMRTCP",@^%ZOSF("TRAP") H 15 G L
"RTN","XMRTCP",79,0)
 ;
"RTN","XMRTCP",80,0)
 ;Clean up before next transmission
"RTN","XMRTCP",81,0)
KILL D KL1^XMC K DIC,XMB,XMDT,ZTPAR
"RTN","XMRTCP",82,0)
 L  Q
"RTN","XMRTCP",83,0)
 ;
"RTN","XMRTCP",84,0)
SETUP ;Set up environment
"RTN","XMRTCP",85,0)
 N IO S IO="",IO(0)="" D DT^DICRW
"RTN","XMRTCP",86,0)
 Q
"RTN","XMRTCP",87,0)
ERR D @^%ZOSF("ERRTN") H 60
"RTN","XMRTCP",88,0)
 I '$F(":MM-TCP:MM-FTP:",":"_$E($G(XMRTCP("NAME")),1,6)_":") D KILL G POLL
"RTN","XMRTCP",89,0)
HALT ;
"RTN","XMRTCP",90,0)
 ;I ^%ZOSF("OS")["VAX" U IO:DISCONNECT
"RTN","XMRTCP",91,0)
 G ^XUSCLEAN
"RTN","XMRTCP",92,0)
 ;
"RTN","XMRTCP",93,0)
 ;Entry for Inet_servers interface RECEIVER
"RTN","XMRTCP",94,0)
 ;SMTP service request invokes MailMan
"RTN","XMRTCP",95,0)
 ;
"RTN","XMRTCP",96,0)
SOC25 S (XMRPORT,IO,IO(0))=%,X=$E(%_"-INETMM",1,15) D SETENV^%ZOSV
"RTN","XMRTCP",97,0)
 D DT^DICRW,DUZ^XUP(.5)
"RTN","XMRTCP",98,0)
 S X="ERR^ZU",@^%ZOSF("TRAP"),ER=0
"RTN","XMRTCP",99,0)
 O IO:(SHARE,MAILBOX) U IO
"RTN","XMRTCP",100,0)
 S XMCHAN="TCP/IP-MAILMAN",XMNO220=""
"RTN","XMRTCP",101,0)
 D ENT^XMR
"RTN","XMRTCP",102,0)
 G HALT
"RTN","XMRTCP",103,0)
 ;
"RTN","XMRTCP",104,0)
 ;Check if slot on TCP/IP to use
"RTN","XMRTCP",105,0)
CK(X) S I=$P(^XMB(1,1,0),"^",17)
"RTN","XMRTCP",106,0)
 F %=1:1 L +^XMBX("TCPCHAN-COUNT",%):1 Q:$T  Q:%=I
"RTN","XMRTCP",107,0)
 Q $S($T:%,1:0)
"RTN","XMRTCP",108,0)
JOB ;
"RTN","XMRTCP",109,0)
 H 90 ;wait for RVG mounts
"RTN","XMRTCP",110,0)
 S $P(^XMB(1,1,0),"^",18)="" ;Clear the TCP/IP poller run flag
"RTN","XMRTCP",111,0)
START G START^XMRTCPGO
"RTN","XMRTCP",112,0)
ERRSCRPT ;TRAP transmission errors
"RTN","XMRTCP",113,0)
 S ER=1
"RTN","XMRTCP",114,0)
 I ^%ZOSF("OS")["VAX DSM" S $ECODE=""
"RTN","XMRTCP",115,0)
 Q
"RTN","XMRUCX")
0^119^B1384031
"RTN","XMRUCX",1,0)
XMRUCX ;(WASH ISC)/THM/CAP-SMTP REC'R [ARPANET RFC 821] for UCX ;06/10/99  09:03
"RTN","XMRUCX",2,0)
 ;;7.1;MailMan;**27,34,50**;Jun 02, 1994
"RTN","XMRUCX",3,0)
 ;
"RTN","XMRUCX",4,0)
 ;Entry for Inet_servers interface RECEIVER
"RTN","XMRUCX",5,0)
 ;SMTP service request invokes MailMan
"RTN","XMRUCX",6,0)
SOC25 ;
"RTN","XMRUCX",7,0)
 S (XMRPORT,IO,IO(0))=%,X=$E(%_"-INETMM",1,15) D SETENV^%ZOSV
"RTN","XMRUCX",8,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D R^XMCTRAP Q"
"RTN","XMRUCX",9,0)
 E  S X="R^XMCTRAP",@^%ZOSF("TRAP")
"RTN","XMRUCX",10,0)
 D DT^DICRW,DUZ^XUP(.5)
"RTN","XMRUCX",11,0)
 S ER=0
"RTN","XMRUCX",12,0)
 O IO:(SHARE) U IO
"RTN","XMRUCX",13,0)
 S XMCHAN="TCP/IP-MAILMAN",XMNO220=""
"RTN","XMRUCX",14,0)
 D ENT^XMR
"RTN","XMRUCX",15,0)
 G HALT^XMRTCP
"RTN","XMRUCX",16,0)
SOC ;
"RTN","XMRUCX",17,0)
 S (XMRPORT,IO,IO(0))="SYS$NET",X=$E(%_"INETMM",1,15) D SETENV^%ZOSV
"RTN","XMRUCX",18,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="S ZZIO=$ZIO H 33 D R^XMCTRAP Q"
"RTN","XMRUCX",19,0)
 E  S X="R^XMCTRAP",@^%ZOSF("TRAP")
"RTN","XMRUCX",20,0)
 D DT^DICRW,DUZ^XUP(.5)
"RTN","XMRUCX",21,0)
 S ER=0
"RTN","XMRUCX",22,0)
 O IO:(TCPDEV):33 U IO
"RTN","XMRUCX",23,0)
 S XMCHAN="TCP/IP-MAILMAN",XMNO220=""
"RTN","XMRUCX",24,0)
 D ENT^XMR
"RTN","XMRUCX",25,0)
 G HALT^XMRTCP
"RTN","XMS")
0^102^B12522664
"RTN","XMS",1,0)
XMS ;(WASH ISC)/THM/CAP-SMTP TRANSMITTER ;06/22/99  15:23
"RTN","XMS",2,0)
V ;;7.1;MailMan;**8,20,34,48,50**;Jun 02, 1994
"RTN","XMS",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMS",4,0)
 ; BAT      XMS-SEQ-TRANSMIT
"RTN","XMS",5,0)
 ; TASKER   XMR-UCI-RCV
"RTN","XMS",6,0)
 ; XMVA=1 communicating to MailMan
"RTN","XMS",7,0)
 ; $D(XMSLOCAL)=version# for MailMan AFTER 3.09
"RTN","XMS",8,0)
 S:'$D(XMTURN) XMTURN=0 S XMDUZ=.5,ER=0 S:'$D(XMBT) XMBT=0 S $P(^XMBS(4.2999,XMINST,3),U,6)=IO_" "_XMPROT
"RTN","XMS",9,0)
 S XMLST=$H*86400+$P($H,",",2)-.001 I '$D(DT) D DT^DICRW
"RTN","XMS",10,0)
EN D XX G:'XMTURN QUIT Q
"RTN","XMS",11,0)
XX S A=0 K XMBLOCK,XMTSUM,XMY D:'XMBT SYNCH Q:ER
"RTN","XMS",12,0)
 S XMTLER=0 I $D(XMCHRS) G CHRS
"RTN","XMS",13,0)
 I $D(XMST) G TST
"RTN","XMS",14,0)
 D HELO L -^DIC(4.2,XMINST,0) Q:ER
"RTN","XMS",15,0)
 S XMZ=0 D SEND Q:ER
"RTN","XMS",16,0)
 Q:XMTURN  S XMTURN=1,$P(^XMBS(4.2999,XMINST,3),U,7)=$S($D(ZTQUEUED):ZTSK,1:"") Q:XMBT  G TURN^XMS0
"RTN","XMS",17,0)
SYNCH X XMREC I '$D(XMRG) N XMRG S XMRG=""
"RTN","XMS",18,0)
 S:'$D(XMVA) XMVA=0 S %=$P(XMRG," MailMan ",2) I %[" ready"!XMBT S XMVA=1+$S(+%>4:+%,1:0)
"RTN","XMS",19,0)
 I ER!($E(XMRG)=2)!(A>5) Q
"RTN","XMS",20,0)
 S A=A+1 S XMSG="NOOP" X XMSEN Q:ER
"RTN","XMS",21,0)
 G SYNCH
"RTN","XMS",22,0)
SEND D NEXT^XMS0 Q:XMZ'>0
"RTN","XMS",23,0)
 L +^XMNET(XMINST,XMZ):0 E  S ER=1,XMER=1 G LOCKER^XMS0A
"RTN","XMS",24,0)
 K XMER,XMTLER,XMJ,XMBLOCK,XMLIN
"RTN","XMS",25,0)
 S %=$G(^XMBS(4.2999,XMINST,3)),$P(%,U,1,2)=$H_U_XMZ,$P(%,U,6)=IO,^(3)=%
"RTN","XMS",26,0)
 D MAIL L -^XMNET(XMINST,XMZ) I ER S XMER=1 Q
"RTN","XMS",27,0)
 D POST^XMS0 G SEND
"RTN","XMS",28,0)
HELO ;ESTABLISH LINK
"RTN","XMS",29,0)
 L +^DIC(4.2,XMINST,0):0 E  S ER=1 S XMTRAN="Domain file locked (HELO^XMS)." D TRAN^XMC1 Q
"RTN","XMS",30,0)
 S Y3=^DIC(4.2,XMINST,0) K XMSLOCAL
"RTN","XMS",31,0)
H1 S XMSG="HELO "_^XMB("NETNAME")
"RTN","XMS",32,0)
 I $P(Y3,U,15)'="" S XMSG=XMSG_"<"_$P(Y3,U,15)_">"
"RTN","XMS",33,0)
 X XMSEN S:XMBT XMSLOCAL=+$P($T(V),";",3)
"RTN","XMS",34,0)
 I ER S Y="HELO SEND failed ("_XMSG_")"
"RTN","XMS",35,0)
 Q:ER!XMBT
"RTN","XMS",36,0)
 X XMREC I ER S Y="HELO RECEIVE failed." Q
"RTN","XMS",37,0)
 S Y=XMRG
"RTN","XMS",38,0)
 I $E(Y)'=2 G HELONO^XMSERR
"RTN","XMS",39,0)
 S:Y[">" Y=$P(Y,">",2) S Y=$P(Y,"[",2) I Y'="" S XMSLOCAL=Y
"RTN","XMS",40,0)
 S J=$P($P(XMRG,"<",2),">") I $P(Y3,U,15)'="",+J<1000000 G VALBAD^XMSERR
"RTN","XMS",41,0)
 ;Double set below prevents replicated ^DIC from
"RTN","XMS",42,0)
 ;going out of synch when link is down.
"RTN","XMS",43,0)
 S ^DIC(4.2,XMINST,0)=Y3,$P(Y3,U,15)=J,^(0)=Y3
"RTN","XMS",44,0)
 K Y3 Q
"RTN","XMS",45,0)
MAIL ;SEND MAIL
"RTN","XMS",46,0)
 G ^XMSMAIL
"RTN","XMS",47,0)
QUIT I $D(XMBLOCK) D KILL^XML4CRC
"RTN","XMS",48,0)
 S XMSTIME=180,XMSG="QUIT" X XMSEN K XMSTIME H 3 Q:ER  X XMREC Q
"RTN","XMS",49,0)
RESET ;
"RTN","XMS",50,0)
 S XMSG="RSET" X XMSEN Q:ER!XMBT  X XMREC Q:ER  I $E(XMRG)'=2 S ER=1 Q
"RTN","XMS",51,0)
TRASH ;CLEAN UP FOR SENT MESSAGE
"RTN","XMS",52,0)
 Q:$D(^XMB(3.9,XMZ,1,"AQUEUE",XMINST))
"RTN","XMS",53,0)
 S XMK=1000+XMINST K XMDI
"RTN","XMS",54,0)
 D ZAPIT^XMXMSGS2(.5,XMK,XMZ)
"RTN","XMS",55,0)
 H 1
"RTN","XMS",56,0)
 Q
"RTN","XMS",57,0)
CHRS ;Christen command
"RTN","XMS",58,0)
 S XMSG="CHRS "_XMCHRS X XMSEN Q:ER  X XMREC Q:ER
"RTN","XMS",59,0)
TST ;TEST LINK
"RTN","XMS",60,0)
 S XMSG="ECHO" X XMSEN G:ER TP X XMREC G:ER TP D T U IO(0) G SHOW
"RTN","XMS",61,0)
T S A=$H,(I,XMTLER,C,D,J)=0
"RTN","XMS",62,0)
T1 S I=$O(^TMP("XMS",$J,"S",I)) G:+I<1 TE S XMSG=^(I) S J=J+1 X XMSEN G:ER TP
"RTN","XMS",63,0)
 S C=C+(2*$L(XMSG)) X XMREC G:ER TP I XMRG'=XMSG U IO(0) S XMSG="*****Sent:  "_XMSG D TRAN^XMC1 S XMSG="*****Rec'd: "_XMRG S D=D+1 U IO
"RTN","XMS",64,0)
 G T1
"RTN","XMS",65,0)
TE S XMSG="." X XMSEN G:ER TP X XMREC Q
"RTN","XMS",66,0)
TP S XMSG="****Physical link protocol error.  Unable to proceed" D TRAN^XMC1 Q
"RTN","XMS",67,0)
SHOW S B=$H S XMSG=J_" Lines,"_C_" bytes transmitted. " D TRAN^XMC1 S XMSG=D_" unrecoverable, "_XMTLER_" recoverable error"_$S(XMTLER:"",1:"s")_" detected."
"RTN","XMS",68,0)
 S XMSG=$J(C/($P(B,",",2)-$P(A,",",2)),0,1)_" Bytes/sec effective transmission rate." D TRAN^XMC1
"RTN","XMS",69,0)
BAT ;BATCH DUMP
"RTN","XMS",70,0)
 S:'$D(XMCHAN) XMCHAN="TAPE" G BGO^XMS3
"RTN","XMS",71,0)
TASKER ;TASKMANAGER DUMP TO ANOTHER UCI
"RTN","XMS",72,0)
 D SEND^XMS3 L  Q
"RTN","XMS0")
0^120^B23450472
"RTN","XMS0",1,0)
XMS0 ;(WASH ISC)/THM/CAP-SEND DATA ;06/06/99  07:44
"RTN","XMS0",2,0)
 ;;7.1;MailMan;**13,8,20,23,27,34,55,50**;Jun 02, 1994
"RTN","XMS0",3,0)
GO ;
"RTN","XMS0",4,0)
 ;If VERSION 3.12 or later of VA MailMan:
"RTN","XMS0",5,0)
 ;  1. Send LOCAL ID of sender
"RTN","XMS0",6,0)
 ;  2. Process reply accordingly
"RTN","XMS0",7,0)
 ;
"RTN","XMS0",8,0)
 ;Send other Body parts
"RTN","XMS0",9,0)
 I $O(^XMB(3.9,XMZ,2005,0)) S XMBLOBER=0 D ^XMS0BLOB I XMBLOBER D RESET^XMS K XMBLOBER Q
"RTN","XMS0",10,0)
 ;
"RTN","XMS0",11,0)
 G Q:'$G(XMVA) I '$D(XMSLOCAL) G CHECK
"RTN","XMS0",12,0)
CONT ;
"RTN","XMS0",13,0)
 S XMSG="MESS ID:"_$$NETID^XMS0A(XMZ) X XMSEN Q:ER  X XMREC Q:ER  G H:$E(XMRG,1,4)'="RSET"
"RTN","XMS0",14,0)
 S XMRZ=$P(XMRG,":",2),XMBT=0,XMSBT=$H*86400+$P($H,",",2),XMSG="DATA" X XMSEN Q:ER
"RTN","XMS0",15,0)
 I 'XMBT X XMREC Q:ER
"RTN","XMS0",16,0)
 S XMSG="" X XMSEN Q:ER
"RTN","XMS0",17,0)
 G D2^XMS0A
"RTN","XMS0",18,0)
 ;
"RTN","XMS0",19,0)
 ;SPECIAL MESSAGE CHARACTERISTICS
"RTN","XMS0",20,0)
H G Q:$G(XMR)="",Q:XMR=0
"RTN","XMS0",21,0)
 S J=7 D I:$P(XMR,U,J)'="" Q:ER
"RTN","XMS0",22,0)
 Q:ER
"RTN","XMS0",23,0)
 F J=5,9,11,12 D I:"Yy"[$E($P(XMR,U,J)_" ") Q:ER
"RTN","XMS0",24,0)
 Q:ER  G Q
"RTN","XMS0",25,0)
 ;
"RTN","XMS0",26,0)
I S ER=0,XMSG="MESS "_$P("^^^^CONFIRMATION^^TYPE^^CLOSED^^CONFIDENTIAL^INFO",U,J)_":"_$P(XMR,U,J)
"RTN","XMS0",27,0)
 X XMSEN Q:ER  X XMREC
"RTN","XMS0",28,0)
 Q
"RTN","XMS0",29,0)
Q G ^XMS0A
"RTN","XMS0",30,0)
 ;
"RTN","XMS0",31,0)
TURN ;TURN AROUND CHANNEL
"RTN","XMS0",32,0)
 K XMBLOCK,XMFROM,XMR,XMNVFROM
"RTN","XMS0",33,0)
 I $G(XMSDOM) S XMINST=XMSDOM
"RTN","XMS0",34,0)
 G Q:'$D(XMINST),Q:'$L(XMINST)
"RTN","XMS0",35,0)
 G QUIT:'($D(^XMBS(4.2999,XMINST,3))#10) S $P(^(3),U,1,6)="^^^^^"
"RTN","XMS0",36,0)
 S X=$P(^DIC(4.2,XMINST,0),U,16)
"RTN","XMS0",37,0)
 I $F("Yy",X)<2,'XMBT S XMSG="TURN" X XMSEN Q:ER  X XMREC Q:ER  I $E(XMRG)="2" S XMTRAN="Turning around receiver" D TRAN^XMC1 G INT^XMR
"RTN","XMS0",38,0)
 G QUIT
"RTN","XMS0",39,0)
ZTSK0 N XMDT,ZTSK S XMDT=ZTDTH D ZTSK0^XMBPOST
"RTN","XMS0",40,0)
 Q
"RTN","XMS0",41,0)
ZTSK ;TASK MANAGER COMES HERE TO SEND MESSAGE
"RTN","XMS0",42,0)
 K XMRDOM,XMSDOM
"RTN","XMS0",43,0)
 ;I $L(ION) S IOP=ION D ^%ZIS G REQ:POP S ZTIO(1)="D",ZTIO=ION D REQ^%ZTLOAD
"RTN","XMS0",44,0)
 S XM="",(XMINST,XMSCR)=XMB("XMSCR"),XMSCRN=XMB("XMSCRN"),XMZ=0
"RTN","XMS0",45,0)
 ;
"RTN","XMS0",46,0)
 ;Use correct script
"RTN","XMS0",47,0)
 S %=$G(XMB("SCRIPT",0))
"RTN","XMS0",48,0)
 S XMDIC="^DIC(4.2,XMSCR,1,"_$S(%:%,1:1)_",1,"
"RTN","XMS0",49,0)
 ;
"RTN","XMS0",50,0)
 S $P(^XMBS(4.2999,XMSCR,3),U,7)=ZTSK
"RTN","XMS0",51,0)
 I ZTSK'=$P(^XMBS(4.2999,XMSCR,0),U,2) N J S J=$P(^XMBS(4.2999,XMSCR,0),U,2) I J Q:$$CHK^XMS5(J,XMSCR)
"RTN","XMS0",52,0)
 I $D(XMB("XMIO")),XMIO="" S XMIO=XMB("XMIO")
"RTN","XMS0",53,0)
 D NEXT G:'$D(XMPOLL) KILL^XMB:XMZ'>0 ;DON'T PROCESS IF NOTHING IN QUEUE
"RTN","XMS0",54,0)
 I $D(XMB("SCRIPT")),$G(XMB("TRIES"))'<$P(XMB("SCRIPT"),U,3) S XMS0C=1
"RTN","XMS0",55,0)
 D ENT^XMC1 I $G(XMER) G:$G(XMPOLL)'="NOREQUE" REQ
"RTN","XMS0",56,0)
 I '$D(XMINST) S XMINST=XMB("XMSCR")
"RTN","XMS0",57,0)
 G KILL^XMB:'$O(^XMB(3.7,.5,2,XMINST+1000,1,0))
"RTN","XMS0",58,0)
 G:$G(XMPOLL)'="NOREQUE" REQ
"RTN","XMS0",59,0)
 Q
"RTN","XMS0",60,0)
NEXT ;GET NEXT MESSAGE IN QUEUE
"RTN","XMS0",61,0)
 I $G(XMSDOM) S XMINST=XMSDOM
"RTN","XMS0",62,0)
 S I=$O(^XMB(3.7,.5,2,"AC",1,XMINST+1000,0))
"RTN","XMS0",63,0)
 I I,'$D(^XMB(3.7,.5,2,XMINST+1000,1,I)) K ^XMB(3.7,.5,2,"AC",1,XMINST+1000,I) S I="" G NEXT
"RTN","XMS0",64,0)
 S XMZ=$S(I:I,1:$O(^XMB(3.7,.5,2,XMINST+1000,1,XMZ))) G KILL^XMB:+XMZ=0
"RTN","XMS0",65,0)
 Q:$D(^XMB(3.9,XMZ,0))
"RTN","XMS0",66,0)
 S XMK=XMINST+1000 D ZAPIT^XMXMSGS2(.5,XMK,XMZ) G NEXT
"RTN","XMS0",67,0)
POST ;APPLY POSTAGE
"RTN","XMS0",68,0)
 Q:XMPOST=0
"RTN","XMS0",69,0)
 ;Set Postage here
"RTN","XMS0",70,0)
 Q
"RTN","XMS0",71,0)
REQ I '$D(ZTSK) G KILL^XMB
"RTN","XMS0",72,0)
 D KILL^%ZTLOAD
"RTN","XMS0",73,0)
 I '$D(XMB("TRIES")) S XMB("TRIES")=1
"RTN","XMS0",74,0)
 S XMB("TRIES",XMB("TRIES"))=$S($L($G(XMERMSG)):XMERMSG_" : ",1:"")_$S($D(XMB(4)):$E(XMB(4),1,245-$L($G(XMERMSG))),1:"UNKNOWN")
"RTN","XMS0",75,0)
 S ZTDTH=$$HADD^XLFDT($H,"","","",$S(XMB("TRIES")<4:300*XMB("TRIES"),1:600+$R(600)))
"RTN","XMS0",76,0)
 S XMSITE=$G(XMSITE)
"RTN","XMS0",77,0)
 I $P($G(XMB("SCRIPT")),U,8)#$S($G(^XMB(1,1,"NETWORK")):^XMB(1,1,"NETWORK"),1:10)=0 D ENTE^XMSM($S($G(XMHELO("XMP")):XMHELO("XMP"),XMSITE="":XMSCRN,1:XMSITE),.XMB,XMR0)
"RTN","XMS0",78,0)
 I $G(XMSDOM) S XMINST=XMSDOM K XMSDOM D ZTSK0 I $D(XMSITE) S XMTRAN=$S(XMSITE="":XMSCRN,1:XMSITE)_" Requeued" G TRAN^XMC1
"RTN","XMS0",79,0)
 S ZTREQ="" Q
"RTN","XMS0",80,0)
QUIT S XMSG="QUIT" X XMSEN Q:ER  X XMREC Q
"RTN","XMS0",81,0)
DATANO ;
"RTN","XMS0",82,0)
 ;I +XMRG=554 G R ;No Bulletin if 554 reject (duplicate)
"RTN","XMS0",83,0)
 ;I +XMRG=551 S XMRZ="Rejected - TOO LONG !" S XMR=$G(^XMB(3.9,XMZ,0)) D ENT^XMSM(XMSITE,XMINST,XMD,XMRG,XMZ,$P(XMR,U,1),XMNVFROM,.XMJ) G R
"RTN","XMS0",84,0)
 I +XMRG=551!(+XMRG=554) S XMRZ=$P(XMRG," ",2,99) S XMR=$G(^XMB(3.9,XMZ,0)) D ENT^XMSM(XMSITE,XMINST,XMD,XMRG,XMZ,$P(XMR,U,1),XMNVFROM,.XMJ) G R
"RTN","XMS0",85,0)
 ;
"RTN","XMS0",86,0)
 ;BULLETIN - INTERFERES WITH PROPER SETTING OF RECIPIENT CHAIN STATUSES
"RTN","XMS0",87,0)
 ;
"RTN","XMS0",88,0)
ER S XMB="XMDATANO",XMB(1)=$P(^DIC(4.2,XMINST,0),U),XMB(2)=$P(^XMB(3.9,XMZ,0),U)_" ["_XMZ_"]"_$S($G(XMY)'="":"Recipient: "_XMY,1:""),XMB(3)=XMRG
"RTN","XMS0",89,0)
 S XMZHOLD=XMZ D TRASH^XMS,^XMB S XMZ=XMZHOLD K XMZHOLD
"RTN","XMS0",90,0)
R S XMTRAN=XMRG D TRAN^XMC1 G RESET^XMS
"RTN","XMS0",91,0)
 ;
"RTN","XMS0",92,0)
CHECK ;IF REMOTE SYSTEM CANNOT PASS MESSAGE QUALIFIERS
"RTN","XMS0",93,0)
 ;
"RTN","XMS0",94,0)
 I '$D(XMR) S XMR=^XMB(3.9,XMZ,0)
"RTN","XMS0",95,0)
 F I=5,9,11,12 I "Yy"[$E($P(XMR,U,I)_" ") G CQ
"RTN","XMS0",96,0)
 F I=6 I $P(XMR,U,I)'="" G CQ
"RTN","XMS0",97,0)
 G CONT:$D(XMSLOCAL),Q
"RTN","XMS0",98,0)
CQ S XMRG="Unable to accept messages with "_$P("^^^^CONFIRMATION REQUEST^PRIORITY^TYPE^^CLOSED status^^CONFIDENTIAL status^INFO status",U,I)_"."
"RTN","XMS0",99,0)
 S I=0 K XMY,XMY0,^TMP("XMY",$J),^TMP("XMY0",$J) D S G ER
"RTN","XMS0",100,0)
 ;
"RTN","XMS0",101,0)
S F I=0:0 S I=$O(XMJ(I)) Q:'I  D T K XMJ(I)
"RTN","XMS0",102,0)
 Q
"RTN","XMS0",103,0)
T Q:'$D(^XMB(3.9,XMZ,1,I,0))
"RTN","XMS0",104,0)
 N %
"RTN","XMS0",105,0)
 S $P(^(0),U,6,7)=XMRG_U  ; naked ref at line T+0
"RTN","XMS0",106,0)
 S %=$P($G(^("F")),U,2)   ; naked ref at line T+0
"RTN","XMS0",107,0)
 I $L(%),%'["@",$O(XMY(""))="" S XMY(%)=""
"RTN","XMS0",108,0)
 Q:$O(XMY(""))'=""
"RTN","XMS0",109,0)
 S XMY($P(XMR,U,2))=""
"RTN","XMS0",110,0)
 Q
"RTN","XMS0A")
0^145^B23299628
"RTN","XMS0A",1,0)
XMS0A ;(WASH ISC)/THM/CAP-DATA (CONT) ;06/14/99  16:39
"RTN","XMS0A",2,0)
 ;;7.1;MailMan;**2,13,55,50**;Jun 02, 1994
"RTN","XMS0A",3,0)
DATA ;SEND BODY OF TEXT
"RTN","XMS0A",4,0)
 S XMSG="DATA" X XMSEN Q:ER
"RTN","XMS0A",5,0)
 I 'XMBT X XMREC Q:ER
"RTN","XMS0A",6,0)
 S:XMBT XMRG=300 S XMSBT=$H*86400+$P($H,",",2)
"RTN","XMS0A",7,0)
 I $E(XMRG)'=3 G DATANO^XMSERR
"RTN","XMS0A",8,0)
 S XMR=^XMB(3.9,XMZ,0) I $D(^(2,.001)) G D6
"RTN","XMS0A",9,0)
 S XMSUB="Subject:"_$S($P(XMR,U)=$$EZBLD^DIALOG(34012):"",1:$P(XMR,U))
"RTN","XMS0A",10,0)
 S XMSG=XMSUB X XMSEN Q:ER
"RTN","XMS0A",11,0)
 S XMSG="Date:"_$$INDT^XMXUTIL1($P(XMR,U,3))
"RTN","XMS0A",12,0)
 X XMSEN Q:ER
"RTN","XMS0A",13,0)
 S XMSG="Message-ID:<"_$$NETID(XMZ)_">" X XMSEN Q:ER
"RTN","XMS0A",14,0)
 I $D(^XMB(3.9,XMZ,"IN")) S J=^("IN") S:$S($P(J,"@",1)?.E1".VA.GOV":1,$P(J,"@",2)?.N:1,1:0) J=$P(J,"@",2)_"@"_$P(J,"@") S XMSG="In-reply-to:<"_J_">" X XMSEN Q:ER
"RTN","XMS0A",15,0)
 I "^Y^y^"[(U_$P(XMR,U,5)_U) S XMSG="Return-Receipt-To:"_XMFROM X XMSEN Q:ER
"RTN","XMS0A",16,0)
 I $D(^XMB(3.9,XMZ,"K")) S XMSG="Encrypted:"_$P(XMR,U,10)_U_^("K") X XMSEN Q:ER
"RTN","XMS0A",17,0)
 S X1=$P(XMR,U,4) I X1'="" S XMSG="Sender:<"_$$NETNAME^XMXUTIL(X1)_">" X XMSEN Q:ER
"RTN","XMS0A",18,0)
 S XMSG="From:"_XMFROM X XMSEN Q:ER
"RTN","XMS0A",19,0)
 I $P(XMR,U,6)'="" D  Q:ER
"RTN","XMS0A",20,0)
 . S XMSG="Expiry-Date:"_$$INDT^XMXUTIL1($P(XMR,U,6)) X XMSEN
"RTN","XMS0A",21,0)
 I $P(XMR,U,7)["P" D  Q:ER
"RTN","XMS0A",22,0)
 . S XMSG="Importance:high" X XMSEN Q:ER
"RTN","XMS0A",23,0)
 . S XMSG="X-Priority:1" X XMSEN
"RTN","XMS0A",24,0)
 I "^Y^y^"[(U_$P(XMR,U,11)_U) D  Q:ER
"RTN","XMS0A",25,0)
 . S XMSG="Sensitivity:Private" X XMSEN
"RTN","XMS0A",26,0)
 I $D(^XMB(3.9,XMZ,.5)) D  Q:ER
"RTN","XMS0A",27,0)
 . N XMZBSKT
"RTN","XMS0A",28,0)
 . S XMZBSKT=$P($G(^XMB(3.9,XMZ,.5)),U,1)
"RTN","XMS0A",29,0)
 . Q:XMZBSKT=""
"RTN","XMS0A",30,0)
 . S XMSG="X-MM-Basket:"_XMZBSKT X XMSEN
"RTN","XMS0A",31,0)
 I $P(XMR,U,7)'="",$P(XMR,U,7)'="P" D  Q:ER
"RTN","XMS0A",32,0)
 . S XMSG="X-MM-Type:"_$P(XMR,U,7) X XMSEN
"RTN","XMS0A",33,0)
 I "^Y^y^"[(U_$P(XMR,U,9)_U) D  Q:ER
"RTN","XMS0A",34,0)
 . S XMSG="X-MM-Closed:YES" X XMSEN
"RTN","XMS0A",35,0)
 I "^Y^y^"[(U_$P(XMR,U,12)_U) D  Q:ER
"RTN","XMS0A",36,0)
 . S XMSG="X-MM-Info-Only:YES" X XMSEN
"RTN","XMS0A",37,0)
 S J=0,J(0)=0,J("N")=^XMB("NETNAME"),XMSG=""
"RTN","XMS0A",38,0)
 F  S J=$O(^XMB(3.9,XMZ,6,J)) Q:J'>0  D  Q:ER!(J(0)>50)
"RTN","XMS0A",39,0)
 . N XMADREC
"RTN","XMS0A",40,0)
 . S XMADREC=^XMB(3.9,XMZ,6,J,0)
"RTN","XMS0A",41,0)
 . S I=$P(XMADREC,U)
"RTN","XMS0A",42,0)
 . S:$P(XMADREC,U,2)'="" I=$P(XMADREC,U,2)_":"_I
"RTN","XMS0A",43,0)
 . D D4
"RTN","XMS0A",44,0)
 . I $L(XMSG)>80 D SEND Q:ER
"RTN","XMS0A",45,0)
 Q:ER
"RTN","XMS0A",46,0)
 I J(0)>50 S XMSG="(Too many recipients to list...)" X XMSEN Q:ER
"RTN","XMS0A",47,0)
 G D5
"RTN","XMS0A",48,0)
D4 S J(0)=J(0)+1 I XMSG="" S XMSG=$S(J(0)=1:"To: ",1:"    ")
"RTN","XMS0A",49,0)
 I $E(I)'=$C(34),$P(I,"@")["," S I=$TR($P(I,"@"),", .","._+")_"@"_$S($P(I,"@",2)'="":$P(I,"@",2),1:J("N"))
"RTN","XMS0A",50,0)
 I I'["@" S I=I_"@"_J("N")
"RTN","XMS0A",51,0)
D S XMSG=XMSG_$S(J(0)>1&(XMSG'?1." "):", ",1:"")_I
"RTN","XMS0A",52,0)
 Q
"RTN","XMS0A",53,0)
SEND S:+$O(^XMB(3.9,XMZ,1,J))>0 XMSG=XMSG_"," X XMSEN S XMSG=""
"RTN","XMS0A",54,0)
 Q
"RTN","XMS0A",55,0)
D5 ;START TRANSMISSION OF HEADER/BODY OF TEXT
"RTN","XMS0A",56,0)
 ;
"RTN","XMS0A",57,0)
 ;1st send last line in the "To list"
"RTN","XMS0A",58,0)
 I $L(XMSG)>9 X XMSEN
"RTN","XMS0A",59,0)
 K J S XMSG="" X XMSEN Q:ER
"RTN","XMS0A",60,0)
D6 S XMBLOCK=1,(XMS0AJ,J,I)=0 D D1 K XMS0AJ Q:ER  G D2
"RTN","XMS0A",61,0)
D1 S XMS0AJ=$O(^XMB(3.9,XMZ,2,XMS0AJ)) Q:+XMS0AJ'>0  S XMSG=^(XMS0AJ,0),I=I+1,J=J+1
"RTN","XMS0A",62,0)
 I $E(XMSG)="." S XMSG="."_XMSG
"RTN","XMS0A",63,0)
 I $E(XMSG,1,4)="~*~^" S XMSG=" "_XMSG
"RTN","XMS0A",64,0)
 X XMSEN
"RTN","XMS0A",65,0)
 I ER S XMB(4)=$S($D(XMCHAN):XMCHAN_":  ",1:"")_"Message "_XMZ_", Node "_XMS0AJ Q
"RTN","XMS0A",66,0)
 G D1
"RTN","XMS0A",67,0)
D2 ;SET POSTAGE ?? HERE
"RTN","XMS0A",68,0)
 I $D(XMBLOCK) D KILL^XML4CRC
"RTN","XMS0A",69,0)
 S XMSG=".",XMCJ=0 X XMSEN I 'XMBT S XMSTIME=300 X XMREC K XMSTIME Q:ER
"RTN","XMS0A",70,0)
 S:XMBT XMRG="250 OK" I $E(XMRG)'=2 D DATANO^XMS0
"RTN","XMS0A",71,0)
D2X S XMCNT("S")=$S($D(XMCNT("S")):XMCNT("S"),1:0)+1
"RTN","XMS0A",72,0)
 F XMCJ=0:0 S XMCJ=$O(XMJ(XMCJ)) Q:XMCJ=""  D D3
"RTN","XMS0A",73,0)
 S X=$G(^XMBS(4.2999,XMINST,0)) I X="" S X=XMINST,^XMBS(4.2999,"B",X,X)=""
"RTN","XMS0A",74,0)
 S $P(X,U,5)=$P(X,U,5)+1,Y(0)=$P($G(^XMB(3.9,XMZ,2,0)),U,3),^XMBS(4.2999,XMINST,0)=X S Y=$P($G(^(3)),U,9) I Y S $P(^(3),U,9)=0
"RTN","XMS0A",75,0)
 S:Y<1 Y=200 D STATS
"RTN","XMS0A",76,0)
 K XMLCT G TRASH^XMS ; POSTAGE WOULD GO HERE
"RTN","XMS0A",77,0)
D3 Q:XMJ(XMCJ)'=""
"RTN","XMS0A",78,0)
 S X=^XMB(3.9,XMZ,1,XMCJ,0),X=$P(X_"^^^",U,1,3)_U_XMRZ_U_XMD_U_U_$P(X,U,7)_":"_$G(XMSDOM)_U_($H*86400+$P($H,",",2)-XMSBT) S:XMBT $P(X,U,6)="In transit" S ^(0)=X
"RTN","XMS0A",79,0)
 K ^XMB(3.9,XMZ,1,"AQUEUE",XMINST,XMCJ)
"RTN","XMS0A",80,0)
Q Q
"RTN","XMS0A",81,0)
NETID(XMZ) ;
"RTN","XMS0A",82,0)
 I '$P($G(^XMB(3.9,XMZ,.6)),U,1) D
"RTN","XMS0A",83,0)
 . N XMCRE8
"RTN","XMS0A",84,0)
 . S XMCRE8=$P($G(^XMB(3.9,XMZ,0)),U,3)
"RTN","XMS0A",85,0)
 . I $P(XMCRE8,".")?7N S XMCRE8=$P(XMCRE8,".")
"RTN","XMS0A",86,0)
 . E  D
"RTN","XMS0A",87,0)
 . . S XMCRE8=$$CONVERT^XMXUTIL1(XMCRE8)
"RTN","XMS0A",88,0)
 . . I XMCRE8=-1 S XMCRE8=DT
"RTN","XMS0A",89,0)
 . S $P(^XMB(3.9,XMZ,.6),U,1)=XMCRE8
"RTN","XMS0A",90,0)
 . S ^XMB(3.9,"C",XMCRE8,XMZ)=""
"RTN","XMS0A",91,0)
 N XMREMID
"RTN","XMS0A",92,0)
 I $D(^XMB(3.9,XMZ,5)) D  Q:XMREMID'="" XMREMID
"RTN","XMS0A",93,0)
 . S XMREMID=^XMB(3.9,XMZ,5)
"RTN","XMS0A",94,0)
 . I $P(XMREMID,"@",1)?.E1".VA.GOV"!($P(XMREMID,"@",2)?.N) S XMREMID=$P(XMREMID,"@",2)_"@"_$P(XMREMID,"@")
"RTN","XMS0A",95,0)
 . Q:XMREMID'=""
"RTN","XMS0A",96,0)
 . D PARSE^XMR1(XMZ,.XMREMID)
"RTN","XMS0A",97,0)
 ;Q XMZ_"."_$P(^XMB(3.9,XMZ,.6),U,1)_"@"_^XMB("NETNAME")
"RTN","XMS0A",98,0)
 Q XMZ_"@"_^XMB("NETNAME")
"RTN","XMS0A",99,0)
STATS S %=1 G STAT
"RTN","XMS0A",100,0)
STATR S %=2
"RTN","XMS0A",101,0)
STAT ;UPDATE MONTHLY STATS [%=1 (SENT) OR 2 (REC'D), Y=#CHARS, Y(0)=#LINES]
"RTN","XMS0A",102,0)
 S I=$E(DT,1,5),X=$S($D(^XMBS(4.2999,XMINST,100,I,0)):^(0),1:"") I X'="" S $P(X,U,1+%)=$P(X,U,1+%)+1,$P(X,U,3+%)=$P(X,U,3+%)+Y,$P(X,U,5+%)=$P(X,U,5+%)+Y(0),^(0)=X Q
"RTN","XMS0A",103,0)
 S %0=I_"00",^XMBS(4.2999,XMINST,100,0)="^4.25D^"_%0_"^1",$P(%0,U,1+%)=1,$P(%0,U,3+%)=Y,$P(%0,U,5+%)=Y(0),^(I,0)=%0,^XMBS(4.2999,XMINST,100,"B",+%0,I)="" Q
"RTN","XMS0A",104,0)
 K I,X,Y,% Q
"RTN","XMS0A",105,0)
LOCKER S XMTRAN="Queue being delivered by another Job - Aborting transmission !" D TRAN^XMC1 Q
"RTN","XMS0A",106,0)
 ;
"RTN","XMS0A",107,0)
 ;#34012 = * No Subject *
"RTN","XMS0BLOB")
0^146^B15144408
"RTN","XMS0BLOB",1,0)
XMS0BLOB ;(WASH ISC)/CAP-SEND BLOBS (OTHER BODY PARTS) ;12/12/97  07:34
"RTN","XMS0BLOB",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMS0BLOB",3,0)
 ;
"RTN","XMS0BLOB",4,0)
 ;This routine sends BLOBS (Basic Large Objects), also known in the
"RTN","XMS0BLOB",5,0)
 ;messaging world as 'Other Body Parts' of messages.
"RTN","XMS0BLOB",6,0)
 ;It can do this only with MailMan systems after (not including)
"RTN","XMS0BLOB",7,0)
 ;version 7.0.
"RTN","XMS0BLOB",8,0)
 ;
"RTN","XMS0BLOB",9,0)
 ;A second portion of this code will be able to send to TCP/IP-SMTP
"RTN","XMS0BLOB",10,0)
 ;systems that conform to MIME (MEE-MEE), an extension of RFC-822 that
"RTN","XMS0BLOB",11,0)
 ;MailMan will conform to when dealing with MIME compatible structures.
"RTN","XMS0BLOB",12,0)
 ;
"RTN","XMS0BLOB",13,0)
 ;See XMR0BLOB for documentation on MPDUs (Message Protocol Data Units)
"RTN","XMS0BLOB",14,0)
 ;exchanged between sender and receiver.
"RTN","XMS0BLOB",15,0)
 ;
"RTN","XMS0BLOB",16,0)
 ;Can't send BLOB if the system transmitting to is not MailMan/'$D(XMVA)
"RTN","XMS0BLOB",17,0)
 ;or if it is not a version postdating v7.0.
"RTN","XMS0BLOB",18,0)
 ;
"RTN","XMS0BLOB",19,0)
 Q:$S('$D(XMVA):1,XMVA'>7:1,$G(XMSLOCAL)'["FTP":1,1:0)
"RTN","XMS0BLOB",20,0)
 ;
"RTN","XMS0BLOB",21,0)
 ;Get data on BLOB from Imaging files
"RTN","XMS0BLOB",22,0)
 S XMSBLOBX=0
"RTN","XMS0BLOB",23,0)
0 S XMSBLOBX=$O(^XMB(3.9,XMZ,2005,XMSBLOBX)) G Q:XMSBLOBX="" S Y=$G(^(XMSBLOBX,0)) G 0:Y=""
"RTN","XMS0BLOB",24,0)
 S X=+Y,ER=0,Y=$G(^MAG(2005,X,0)) G 0:Y=""
"RTN","XMS0BLOB",25,0)
 S XMSBLOBT=Y,XMSBLOBT("#")=X,XMSBLOBT("NAME")=$P(Y,U),XMSBLOBT("FILE")=$P(Y,U,2),XMSBLOBT("DATE")=$P(Y,U,9)
"RTN","XMS0BLOB",26,0)
 S Y(0)="" F %=3,4,5 S X=$P(Y,U,%) I X S Y(0)=$G(^MAG(2005.2,X,0)) Q:$L(Y(0))
"RTN","XMS0BLOB",27,0)
 G 0:'$L(Y(0)) ;BLOB can not be sent -- no known disk reference
"RTN","XMS0BLOB",28,0)
 S XMSBLOBT("DISK")=$P(Y(0),U,2),DIC=2005.02,DIC(0)="NZ"
"RTN","XMS0BLOB",29,0)
 S X=$P(XMSBLOBT,U,6) D ^DIC G 0:Y<1 S XMSBLOBT("TYPE")=$P(Y,U,2)
"RTN","XMS0BLOB",30,0)
 ;
"RTN","XMS0BLOB",31,0)
 ;Send MPDU (Message Protocol Data Unit), Directory to send to returned
"RTN","XMS0BLOB",32,0)
 ;
"RTN","XMS0BLOB",33,0)
 S XMSG="MESS BLOB: "_XMSBLOBT("FILE")_"^"_XMSBLOBT("NAME")_"^"_XMSBLOBT("TYPE")_"^"_XMSBLOBT("DATE")
"RTN","XMS0BLOB",34,0)
1 X XMSEN Q:ER  X XMREC Q:ER  I +XMRG'=250 G 0:$E(XMRG)=4 K ^XMB(3.9,XMZ,1,"AQUEUE",XMINST) N XMA0 S XMA0=XMCI_U_XMINST_U_XMZ D ERRR S XMINST=$P(XMA0,U,2),XMBLOBER=1,XMCI=$P(XMA0,U),XMZ=$P(XMA0,U,3) Q
"RTN","XMS0BLOB",35,0)
 ;
"RTN","XMS0BLOB",36,0)
 ;Determine IP address to send BLOB to / Use domain file data if it exists
"RTN","XMS0BLOB",37,0)
 S %=$P(XMRG,U,2),X=$P($G(^DIC(4.2,XMINST,"IP")),U),%=$S($L(X):X,$L(%):%,1:"")
"RTN","XMS0BLOB",38,0)
 I %="" S XMSG="MESS BLOB: < BLOB(s) not sent - No FTP channel defined !!! >" X XMSEN G ERR
"RTN","XMS0BLOB",39,0)
 S XMSBLOBT("IP")=%
"RTN","XMS0BLOB",40,0)
 ;
"RTN","XMS0BLOB",41,0)
 ;FTP file to remote site
"RTN","XMS0BLOB",42,0)
 ;
"RTN","XMS0BLOB",43,0)
 K XMSFTP S XMSFTP(1)=$P($G(^XMB(1,1,"FTP-GET")),U),XMSFTP(2)=$P(XMRG,U,5),XMSFTP(2,"F")=XMSBLOBT("FILE"),XMSFTP(3)=XMSBLOBT("IP"),XMSFTP("IMAGE-PTR")=XMSBLOBT("#")
"RTN","XMS0BLOB",44,0)
 F I=6,7,8 S XMSFTP(I)=$P(XMRG,U,I)
"RTN","XMS0BLOB",45,0)
 I '$L($G(XMSFTP(6))) S %=$G(^DIC(4.2,XMINST,3)) I $L(%) S XMSFTP(7)=$P(%,";"),XMSFTP(7.1)=$P(%,";",2)
"RTN","XMS0BLOB",46,0)
 D ^XMSFTP K XMSFTP
"RTN","XMS0BLOB",47,0)
 G 0
"RTN","XMS0BLOB",48,0)
 ;
"RTN","XMS0BLOB",49,0)
 ;Record error, set error flag to RESET message transmission,
"RTN","XMS0BLOB",50,0)
 ;remove message from queue, send message to sender.
"RTN","XMS0BLOB",51,0)
ERRR N ER,XMA0
"RTN","XMS0BLOB",52,0)
ERR ;
"RTN","XMS0BLOB",53,0)
 N I,XMTEXT,XMSEN,XMREC,XMRECIP,XMSITE,XMSUBJ,XMIEN,XMTO,XMINSTR
"RTN","XMS0BLOB",54,0)
 S XMINSTR("FROM")=.5
"RTN","XMS0BLOB",55,0)
 S XMSUBJ="TRANSMISSION ERROR (Non-Textual Body-Part Message [BLOB])"
"RTN","XMS0BLOB",56,0)
 S XMTEXT(1)="Error (sending your Multi-Body-Part Message):"
"RTN","XMS0BLOB",57,0)
 S XMTEXT(2)=" "
"RTN","XMS0BLOB",58,0)
 S XMTEXT(3)="Subject: "_$P(XMR,U)
"RTN","XMS0BLOB",59,0)
 S XMTEXT(4)=" "
"RTN","XMS0BLOB",60,0)
 S XMTEXT(5)=XMSG
"RTN","XMS0BLOB",61,0)
 S XMTEXT(6)=" "
"RTN","XMS0BLOB",62,0)
 S XMTEXT(7)="The message was not sent.  It was removed from the transmission queue."
"RTN","XMS0BLOB",63,0)
 S XMTEXT(8)="You should get this problem fixed and reforward this message"
"RTN","XMS0BLOB",64,0)
 S XMSITE=$P(^DIC(4.2,XMINST,0),U)
"RTN","XMS0BLOB",65,0)
 S XMTEXT(9)="to the recipients at "_XMSITE_":"
"RTN","XMS0BLOB",66,0)
 S XMRECIP=":",I=9
"RTN","XMS0BLOB",67,0)
 F  S XMRECIP=$O(^XMB(3.9,XMZ,1,"C",XMRECIP)) Q:XMRECIP=""  D
"RTN","XMS0BLOB",68,0)
 . S XMIEN=""
"RTN","XMS0BLOB",69,0)
 . F  S XMIEN=$O(^XMB(3.9,XMZ,1,"C",XMRECIP,XMIEN)) Q:XMIEN=""  D
"RTN","XMS0BLOB",70,0)
 . . S XMREC=$G(^XMB(3.9,XMZ,1,XMIEN,0))
"RTN","XMS0BLOB",71,0)
 . . Q:$P($P(XMREC,U,1),"@",2)'=XMSITE
"RTN","XMS0BLOB",72,0)
 . . S I=I+1,XMTEXT(I)=$P(XMREC,U,1)
"RTN","XMS0BLOB",73,0)
 . . S XMFWDBY=$P($G(^XMB(3.9,XMZ,1,XMIEN,"F")),U,2)
"RTN","XMS0BLOB",74,0)
 . . S:XMFWDBY'="" XMTO(XMFWDBY)=""
"RTN","XMS0BLOB",75,0)
 S:'$D(XMTO) XMTO($P(XMR,U,2))=""  ; Sender of the message
"RTN","XMS0BLOB",76,0)
 D SENDMSG^XMXSEND(.5,XMSUBJ,"XMTEXT",XMTO,.XMINSTR)
"RTN","XMS0BLOB",77,0)
 Q
"RTN","XMS0BLOB",78,0)
 ;Clean up and quit
"RTN","XMS0BLOB",79,0)
Q K XMSBLOBT,XMSBLOBX,DIC Q
"RTN","XMS0BLOB",80,0)
 ;
"RTN","XMS0BLOB",81,0)
TEST S XMSEN="Q",XMREC="S XMRG=250",XMZ=18067,XMVA=7.01,XMSLOCAL="DUP,SER,FTP]"
"RTN","XMS0BLOB",82,0)
 G XMS0BLOB
"RTN","XMS1")
0^103^B2482469
"RTN","XMS1",1,0)
XMS1 ;(WASH ISC)/THM/CAP-NAME SERVER CALLS ;09/30/98  15:13
"RTN","XMS1",2,0)
 ;;7.1;MailMan;**13,8,23,50**;Jun 02, 1994
"RTN","XMS1",3,0)
 ; Entry points (DBIA 1151):
"RTN","XMS1",4,0)
 ; $$SRVTIME Set message transmission status information
"RTN","XMS1",5,0)
 ; $$STATUS  Get message transmission status information
"RTN","XMS1",6,0)
 ;
"RTN","XMS1",7,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMS1",8,0)
 ; POLL      XMPOLL
"RTN","XMS1",9,0)
 Q
"RTN","XMS1",10,0)
ENQ ;Entries for Task setup
"RTN","XMS1",11,0)
 S XMB("TYPE")=3,(XMSCR,XMB("XMSCR"))=XMINST,XMB("XMSCRN")=XMSITE
"RTN","XMS1",12,0)
 K XMDT D ^XMBPOST
"RTN","XMS1",13,0)
 Q
"RTN","XMS1",14,0)
ZTSK ;POLLER
"RTN","XMS1",15,0)
 S (XMCNT("S"),XMCNT("R"))=0
"RTN","XMS1",16,0)
 S XM="",XMSCR=XMB("XMSCR"),XMSCRN=XMB("XMSCRN"),ZTDTH=XMB("FREQ")_"S",XMLOGIO=XMB("LOG")
"RTN","XMS1",17,0)
 D REQ^%ZTLOAD ;NOTE - USED TO REQUE TO DEVICE ^DD("MMDEV") - REMOVED FOR K7
"RTN","XMS1",18,0)
 ;I $L(XMLOGIO) O XMLOGIO::1 I $T U XMLOGIO W !,"POLLING " D NDT^XMA01 W Y W " JOB ",$J C XMLOGIO
"RTN","XMS1",19,0)
 S XM="",XMINST=XMSCR,XMZ=0
"RTN","XMS1",20,0)
 D ^XMC1
"RTN","XMS1",21,0)
 ;I $L(XMLOGIO) O XMLOGIO::1 I $T U XMLOGIO W "  ",XMCNT("S")," Messages sent, ",XMCNT("R")," Messages received."
"RTN","XMS1",22,0)
 Q
"RTN","XMS1",23,0)
STATUS(XMZ,XMRECIP) ; Get Recipient Status
"RTN","XMS1",24,0)
 N XMIEN
"RTN","XMS1",25,0)
 S XMIEN=$$FIND1^DIC(3.91,","_XMZ_",","QX",XMRECIP,"C") Q:'XMIEN ""
"RTN","XMS1",26,0)
 Q $P($G(^XMB(3.9,XMZ,1,XMIEN,0)),U,6)
"RTN","XMS1",27,0)
SRVTIME(XMZ,XMRECIP,XMSTRING) ; Mark Recipient Status
"RTN","XMS1",28,0)
 ;Returns 0 for success, 1 for failure
"RTN","XMS1",29,0)
 ;Parameters=(Message#,Recipient,Status)
"RTN","XMS1",30,0)
 I $L(XMSTRING)>30 Q "2 Status too long"
"RTN","XMS1",31,0)
 I XMSTRING[U Q "3 Bad Characters in Status"
"RTN","XMS1",32,0)
 N XMIEN,XMIENS
"RTN","XMS1",33,0)
 S XMIEN=$$FIND1^DIC(3.91,","_XMZ_",","QX",XMRECIP,"C") Q:'XMIEN "1 No Update"
"RTN","XMS1",34,0)
 S XMIENS=XMIEN_","_XMZ_","
"RTN","XMS1",35,0)
 D SETSTAT^XMTDO(XMIENS,XMSTRING)
"RTN","XMS1",36,0)
 Q 0
"RTN","XMS1",37,0)
POLL G ^XMS1P
"RTN","XMS2")
0^198^B1522
"RTN","XMS2",1,0)
XMS2 ;(WASH ISC)/THM/CAP- * OBSOLETE * ;12/15/97  08:55
"RTN","XMS2",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMS2",3,0)
 Q
"RTN","XMS3")
0^121^B23102963
"RTN","XMS3",1,0)
XMS3 ;(WASH ISC)/THM-SERVER LOGIC / TASKER ;06/07/99  10:03
"RTN","XMS3",2,0)
 ;;7.1;MailMan;**22,50**;Jun 02, 1994
"RTN","XMS3",3,0)
 ; Entry points (DBIA 10073):
"RTN","XMS3",4,0)
 ; REC   Get the next line of message text
"RTN","XMS3",5,0)
 ;
"RTN","XMS3",6,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMS3",7,0)
 ; DX     XMDXSERVER
"RTN","XMS3",8,0)
 Q
"RTN","XMS3",9,0)
REC ;READ A LINE FROM THE MESSAGE
"RTN","XMS3",10,0)
 S:'$D(XMPOS) XMPOS=.999999 S:XMPOS<.999999 XMPOS=.999999
"RTN","XMS3",11,0)
 S XMPOS=$O(^XMB(3.9,XMZ,2,XMPOS)) I +XMPOS'=XMPOS!(XMPOS="") S XMER=-1,XMRG="" Q
"RTN","XMS3",12,0)
 S XMRG=^XMB(3.9,XMZ,2,XMPOS,0),XMER=0 Q
"RTN","XMS3",13,0)
 ;
"RTN","XMS3",14,0)
SEN ;SEND A LINE TO THE RETURN MESSAGE
"RTN","XMS3",15,0)
 S XMSLINE=XMSLINE+1,^XMB(3.9,XMZ,2,XMSLINE,0)=XMSG
"RTN","XMS3",16,0)
 Q
"RTN","XMS3",17,0)
OPEN ;OPEN THE REVERSE MESSAGE PATH
"RTN","XMS3",18,0)
 Q
"RTN","XMS3",19,0)
CLOSE ;CLOSE THE REVERSE MESSAGE
"RTN","XMS3",20,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92A^"_XMSLINE_U_XMSLINE_U_DT
"RTN","XMS3",21,0)
 Q
"RTN","XMS3",22,0)
ECHO ;
"RTN","XMS3",23,0)
 D SENDMSG^XMXSEND(XMDUZ,$E("Server echo of '"_XMSUB_"'",1,65),"^XMB(3.9,"_XMZ_",2,",XMFROM)
"RTN","XMS3",24,0)
 Q
"RTN","XMS3",25,0)
DX ;SERVER DIAGNOSTICS
"RTN","XMS3",26,0)
 W !,"NOT YET AVAILABLE" Q
"RTN","XMS3",27,0)
SEND ;DUMP TO ANOTHER UCI
"RTN","XMS3",28,0)
 S XMCHAN="TASKER",XMLINE=0,XMVA=99
"RTN","XMS3",29,0)
 W *7,!!,"******* I M P O R T A N T *******",!!
"RTN","XMS3",30,0)
 W "This option will only work from UCI to UCI."
"RTN","XMS3",31,0)
 W !,"The user must FIRST invoke this SENDER and then invoke the RECEIVER."
"RTN","XMS3",32,0)
 W !,"Each UCI must be christened with a domain name.",!,"These domain names control the transmission."
"RTN","XMS3",33,0)
 W !!,"THE SENDER CANNOT DETERMINE IF YOU HAVE CHOSEN THE CORRECT DOMAIN.",!!
"RTN","XMS3",34,0)
 W "It will send to any domain you chose regardless if you have a UCI christened",!,"with that name or not or even if there is no way for the domain to receive it."
"RTN","XMS3",35,0)
 W !!,"Messages 'DUMPED' are removed from the queue for the domain requested",!,"and are put into ^%ZISL.  The %ZISL global must be translated to be"
"RTN","XMS3",36,0)
 W !,"accessable from both the SEND UCI and the RECEIVE UCI."
"RTN","XMS3",37,0)
 W !!,"There is a CHECK ON THE DOMAIN to be used on the receive side.",!,"The RECEIVER will receive only those transmissions sent to it."
"RTN","XMS3",38,0)
 W !,"It will then cancel the transmission by killing off",!,"the entry in ^%ZISL (NO OTHER RECEIVER WILL BE ABLE TO RECEIVE IT).",!
"RTN","XMS3",39,0)
BGO S XMBT=1,XMTURN=1 D OPEN^XML G QQ:$G(ER)=1!$G(POP) U IO(0) S:'$D(XM) XM="" D ENT1^XMR:'$D(XMR0)
"RTN","XMS3",40,0)
B1 S DIC(0)="AEQMZ",DIC=4.2,DIC("A")="Dump messages to domain: "
"RTN","XMS3",41,0)
 D ^DIC K DIC I Y<1 X XMCLOSE G QQ
"RTN","XMS3",42,0)
 S XMINST=+Y,XMZ=0 I '$D(XMDUZ) S XMDUZ=.5
"RTN","XMS3",43,0)
 S X=$P(Y,U,2),XMTASK(0)=^XMB("NETNAME")_U_X
"RTN","XMS3",44,0)
 I '$D(^%ZISL(4.281,0)) W !!,"File 4.281 is not set up properly.",*7 S I=0 G Q
"RTN","XMS3",45,0)
 D NEXT^XMS0 I XMZ'>0 W !,"No messages in queue for this domain",!! G B1
"RTN","XMS3",46,0)
 S %=^%ZISL(4.281,0),Y=$P(%,U,4),XMZ=0 L +^%ZISL(4.281)
"RTN","XMS3",47,0)
B2 S Y=Y+1 G B2:$D(^%ZISL(4.281,Y)) S ^(0)=$P(%,U,1,2)_U_($P(%,U,3)+1)_U_Y,^(Y,0)=$P(XMTASK(0),U),^%ZISL(4.281,"B",$P(XMTASK(0),U),Y)="",XMTASK=Y
"RTN","XMS3",48,0)
 L -^%ZISL(4.281) W !,"Dumping messages now" U IO D ^XMS U IO(0) I $P(^DIC(3.4,XMCHAN,0),U)="TASKER" S $P(^%ZISL(4.281,XMTASK,0),U,2)=$P(XMTASK(0),U,2),^%ZISL(4.281,"C",$P(XMTASK(0),U,2),XMTASK)=""
"RTN","XMS3",49,0)
 I $D(XMCNT("S")) W *7,"...   ",XMCNT("S")," Message",$S(XMCNT("S")'=1:"s",1:"")," dumped."
"RTN","XMS3",50,0)
 S XMSG="QUIT" U IO X XMSEN,XMCLOSE K XMDUZ S:$D(XMS3) XMDUZ=XMS3
"RTN","XMS3",51,0)
 D QQ G KL^XMC
"RTN","XMS3",52,0)
RECV ;RECEIVE IN UCI
"RTN","XMS3",53,0)
 S:'$D(XM) XM=$S($D(ZTQUEUED):"",1:"D") K XMTASK N XMDUZ S XMDUZ=.5,XMA=^XMB("NETNAME")
"RTN","XMS3",54,0)
 I XM["D" D ENT1^XMR S XMTRAN="Trying to receive messages for "_XMA D TRAN^XMC1 S DIR(0)="E" D ^DIR K DIR,DIRUT I $D(DUOUT)!$D(DTOUT) S I=0 G Q
"RTN","XMS3",55,0)
 S (XMS3LOAD,I)=0
"RTN","XMS3",56,0)
I S I=$O(^%ZISL(4.281,"C",XMA,I)) I 'I G Q:'$D(XMTASK),QQ
"RTN","XMS3",57,0)
 G I:'$D(^%ZISL(4.281,I,0)) S %=$G(^(0)) I $P(%,U,2)'=XMA G I:XM'["D" S XMTRAN="Entry # "_I_" for "_XMA_" is not completed yet." D TRAN^XMC1 G I
"RTN","XMS3",58,0)
 G I:$S('$D(^%ZISL(4.281,I,"T",1,0)):1,^(0)'?1"HELO ".E:1,1:0)
"RTN","XMS3",59,0)
 S XMSITE=$P(%,U),XMS3LOAD=XMS3LOAD+1 I XM["D" S XMTRAN="LOADING Entry # "_I_" from "_XMSITE_"." D TRAN^XMC1
"RTN","XMS3",60,0)
 S XMTASK=I,ER=0,XMLINE=.999,(XMBT,XMTURN,XMQUIET)=1,XMCHAN="TASK-IN" D GO
"RTN","XMS3",61,0)
 S DA=XMTASK,DIK="^%ZISL(4.281," D ^DIK S I=1
"RTN","XMS3",62,0)
Q I XM["D" S XMTRAN="<< DONE !!  "_$S($G(XMS3LOAD):"<<< DONE !!! >>>",I=1:"SUCCESSFULLY RECEIVED",I="":"No entries found in ^%ZISL for "_XMA,1:"No messages sent")_". >>" D TRAN^XMC1
"RTN","XMS3",63,0)
 G I:I
"RTN","XMS3",64,0)
QQ K DTOUT,DUOUT,XMA,XMCHAN,XMD,XMS3,XMSITE,XMTASK,XMTASK Q
"RTN","XMS3",65,0)
GO N XMDUZ S XMDUZ=.5 D OPEN^XML,INT^XMR Q
"RTN","XMS4")
0^139^B4372420
"RTN","XMS4",1,0)
XMS4 ;(WASH ISC)/CAP/AML/RJ-Query into message queues ;03/10/98  07:32
"RTN","XMS4",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMS4",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMS4",4,0)
 ; ^XMS4   XMQHIST
"RTN","XMS4",5,0)
 D EN^XUTMDEVQ("ENT^XMS4","MailMan Queue History Report")
"RTN","XMS4",6,0)
 Q
"RTN","XMS4",7,0)
ENT K DIR S (XMF0,XMF0("PG"),XMC0,XME0)=0,DIR(0)="E" D NOW^%DTC
"RTN","XMS4",8,0)
 S XMD0=$$MMDT^XMXUTIL1($$NOW^XLFDT)
"RTN","XMS4",9,0)
Q S XMF0=$O(^DIC(4.2,"B",XMF0)) I XMF0="" G END
"RTN","XMS4",10,0)
 S XMG0=$O(^DIC(4.2,"B",XMF0,0)),XMB0=$G(^XMBS(4.2999,XMG0,0))
"RTN","XMS4",11,0)
 S XMB=$E(XMF0,1,16),XMA=0 D M I XMB0="",XMA=0 G Q
"RTN","XMS4",12,0)
W ;write results
"RTN","XMS4",13,0)
 S XMC0=XMC0+1_U_($P(XMC0,U,2)+$P(XMB0,U,5))_U_($P(XMC0,U,3)+$P(XMB0,U,7))_U_($P(XMC0,U,4)+XMA)
"RTN","XMS4",14,0)
 I $Y+5>IOSL!'XMF0("PG") S X="" D:'$D(ZTQUEUED)&XMF0("PG") ^DIR:IOST?1"C-".E K DIRUT D HD G END:X=U
"RTN","XMS4",15,0)
 W:$X>60 !
"RTN","XMS4",16,0)
 W $E(XMB_"                  ",1,18),$J(XMA,6),$J($P(XMB0,U,5),6),$J($P(XMB0,U,7),7) W:$X<40 ?41
"RTN","XMS4",17,0)
 G Q
"RTN","XMS4",18,0)
M ;number in queue
"RTN","XMS4",19,0)
 S XMA=$$BMSGCT^XMXUTIL(.5,XMG0+1000)
"RTN","XMS4",20,0)
 Q
"RTN","XMS4",21,0)
HD S XMF0("PG")=XMF0("PG")+1 W @IOF,!,"TRANSMISSION QUEUE HISTORY",?79-$L(XMD0),XMD0,!,"At "_^XMB("NETNAME"),?70,"Page: "_XMF0("PG")
"RTN","XMS4",22,0)
 W !! F I=1,2 W ?I-1*40+1,"  Domain           Q'd   Sent    Rec'd  "
"RTN","XMS4",23,0)
 W ! Q
"RTN","XMS4",24,0)
END I 'XMF0("PG") D HD:IOST'?1"C".E W !!,"<<<<   NOTHING TO REPORT  >>>>" G E
"RTN","XMS4",25,0)
 I $Y+8'<IOSL,IOST?1"C-".E D ^DIR K DIRUT I $D(X) G E:X[U
"RTN","XMS4",26,0)
 W !!!,"TOTAL Domains:  ",$J(+XMC0,9)
"RTN","XMS4",27,0)
 W !,"TOTAL Queued:   ",$J(+$P(XMC0,U,4),9)
"RTN","XMS4",28,0)
 W !,"TOTAL Sent:     ",$J(+$P(XMC0,U,2),9)
"RTN","XMS4",29,0)
 W !,"TOTAL Received: ",$J(+$P(XMC0,U,3),9),!!
"RTN","XMS4",30,0)
E K %,%H,%I,DIR,I,X,XMA,XMA0,XMB,XMB0,XMC0,XMD0,XME0,XMF0,XMG0,Y
"RTN","XMS4",31,0)
 I $D(ZTSK),ZTSK W @IOF S ZTREQ="@" Q
"RTN","XMS4",32,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","XMS4",33,0)
 Q
"RTN","XMS4",34,0)
CONT ;CONTINUOUS DISPLAY
"RTN","XMS4",35,0)
 D XMS4 R !,X:10 Q:$T  G CONT
"RTN","XMS4",36,0)
GO W !! G XMS4
"RTN","XMS5")
0^138^B49966268
"RTN","XMS5",1,0)
XMS5 ;(WASH ISC)/CAP/RM/AML-DISPLAY/TRANSMIT QUEUES ;05/27/99  07:22
"RTN","XMS5",2,0)
 ;;7.1;MailMan;**13,8,23,27,55,58,50**;Jun 02, 1994
"RTN","XMS5",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMS5",4,0)
 ; GO      XMQACTIVE
"RTN","XMS5",5,0)
 ; ENT     XMQUEUED
"RTN","XMS5",6,0)
 ; REQUE   XMSTARTQUE-ALL
"RTN","XMS5",7,0)
ENT ;
"RTN","XMS5",8,0)
 N XMDUZ,XMK
"RTN","XMS5",9,0)
 S XMK=999
"RTN","XMS5",10,0)
 F  S XMK=$O(^XMB(3.7,.5,2,XMK)) Q:XMK'>0  Q:XMK>9999  I $O(^(XMK,1,0))  W:'$D(ZTQUEUED) "." D RSEQ^XMXBSKT(.5,XMK)
"RTN","XMS5",11,0)
 D EN^XUTMDEVQ("QZTSK^XMS5","MailMan Queues with Messages to Transmit Report")
"RTN","XMS5",12,0)
 Q
"RTN","XMS5",13,0)
QZTSK ;
"RTN","XMS5",14,0)
 N XMIEN,XMK,XMKN,XMABORT,XMPAGE,XMDT,XMCNT,XMDREC
"RTN","XMS5",15,0)
 S (XMPAGE,XMABORT,XMCNT("D"),XMCNT("M"))=0
"RTN","XMS5",16,0)
 S XMDT=$$MMDT^XMXUTIL1($$NOW^XLFDT)
"RTN","XMS5",17,0)
 W:$G(IOST)["C-" @IOF
"RTN","XMS5",18,0)
 D QHDR(XMDT,.XMPAGE)
"RTN","XMS5",19,0)
 S XMKN=""
"RTN","XMS5",20,0)
 F  S XMKN=$O(^DIC(4.2,"B",XMKN)) Q:XMKN=""  D  Q:XMABORT
"RTN","XMS5",21,0)
 . S XMIEN=0
"RTN","XMS5",22,0)
 . F  S XMIEN=$O(^DIC(4.2,"B",XMKN,XMIEN)) Q:'XMIEN  D  Q:XMABORT
"RTN","XMS5",23,0)
 . . S XMK=XMIEN+1000
"RTN","XMS5",24,0)
 . . S XMCNT=$$BMSGCT^XMXUTIL(.5,XMK)
"RTN","XMS5",25,0)
 . . Q:'XMCNT
"RTN","XMS5",26,0)
 . . S XMDREC=^DIC(4.2,XMIEN,0)
"RTN","XMS5",27,0)
 . . I $Y+3>IOSL D  Q:XMABORT
"RTN","XMS5",28,0)
 . . . D PAGE(.XMABORT) Q:XMABORT
"RTN","XMS5",29,0)
 . . . D QHDR(XMDT,.XMPAGE)
"RTN","XMS5",30,0)
 . . W !,$E($P(XMDREC,U),1,40)
"RTN","XMS5",31,0)
 . . W ?42,$J(XMCNT,5),"    ",$P(XMDREC,U,17)
"RTN","XMS5",32,0)
 . . S XMCNT("D")=XMCNT("D")+1
"RTN","XMS5",33,0)
 . . S XMCNT("M")=XMCNT("M")+XMCNT
"RTN","XMS5",34,0)
 Q:XMABORT
"RTN","XMS5",35,0)
 I 'XMCNT("D") W !,"No messages queued" Q
"RTN","XMS5",36,0)
 I $Y+3>IOSL D  Q:XMABORT
"RTN","XMS5",37,0)
 . D PAGE(.XMABORT) Q:XMABORT
"RTN","XMS5",38,0)
 . D QHDR(XMDT,.XMPAGE)
"RTN","XMS5",39,0)
 W !!,"Total Domains: ",XMCNT("D"),", Total Messages Queued: ",XMCNT("M")
"RTN","XMS5",40,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","XMS5",41,0)
 Q:$G(IOST)'["C-"
"RTN","XMS5",42,0)
 W !
"RTN","XMS5",43,0)
 D WAIT^XMXUTIL
"RTN","XMS5",44,0)
 Q
"RTN","XMS5",45,0)
PAGE(XMABORT) ;
"RTN","XMS5",46,0)
 I $G(IOST)["C-" D PAGE^XMXUTIL(.XMABORT) Q:XMABORT
"RTN","XMS5",47,0)
 W @IOF
"RTN","XMS5",48,0)
 Q
"RTN","XMS5",49,0)
QHDR(XMDT,XMPAGE) ;
"RTN","XMS5",50,0)
 S XMPAGE=XMPAGE+1
"RTN","XMS5",51,0)
 W !,"Queues with messages to go out"
"RTN","XMS5",52,0)
 W ?79-$L(XMDT),XMDT
"RTN","XMS5",53,0)
 W !,"At "_^XMB("NETNAME"),?71,"Page: ",$J(XMPAGE,2)
"RTN","XMS5",54,0)
 W !!,"Domain",?40,"# Que'd    Physical Link",!
"RTN","XMS5",55,0)
 Q
"RTN","XMS5",56,0)
GO ;DSP ALL
"RTN","XMS5",57,0)
 D EN^XUTMDEVQ("AZTLOOP^XMS5","MailMan Active Queues Report")
"RTN","XMS5",58,0)
 Q
"RTN","XMS5",59,0)
AZTLOOP ;
"RTN","XMS5",60,0)
 F  D AZTSK Q:$G(IOST)'["C-"  D  Q:'(Y!$D(DTOUT))
"RTN","XMS5",61,0)
 . W !
"RTN","XMS5",62,0)
 . N DIR,X,DTIME
"RTN","XMS5",63,0)
 . S DTIME=5
"RTN","XMS5",64,0)
 . S DIR(0)="Y",DIR("A")="Refresh",DIR("B")="YES"
"RTN","XMS5",65,0)
 . S DIR("?",1)="Answer YES if you want the display refreshed."
"RTN","XMS5",66,0)
 . S DIR("?",2)="Answer NO if you don't."
"RTN","XMS5",67,0)
 . S DIR("?")="If you don't answer, the display will be refreshed every five seconds."
"RTN","XMS5",68,0)
 . D ^DIR
"RTN","XMS5",69,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","XMS5",70,0)
 Q
"RTN","XMS5",71,0)
AZTSK ;
"RTN","XMS5",72,0)
 N XMIEN,XMK,XMKN,XMABORT,XMPAGE,XMDT,XMCNT,XMDREC,XMSREC,XMSECS
"RTN","XMS5",73,0)
 S (XMPAGE,XMABORT,XMCNT("D"),XMCNT("M"))=0
"RTN","XMS5",74,0)
 S XMDT=$$MMDT^XMXUTIL1($$NOW^XLFDT)
"RTN","XMS5",75,0)
 W:$G(IOST)["C-" @IOF
"RTN","XMS5",76,0)
 D AHDR(XMDT,.XMPAGE)
"RTN","XMS5",77,0)
 S XMKN=""
"RTN","XMS5",78,0)
 F  S XMKN=$O(^DIC(4.2,"B",XMKN)) Q:XMKN=""  D  Q:XMABORT
"RTN","XMS5",79,0)
 . S XMIEN=0
"RTN","XMS5",80,0)
 . F  S XMIEN=$O(^DIC(4.2,"B",XMKN,XMIEN)) Q:'XMIEN  D  Q:XMABORT
"RTN","XMS5",81,0)
 . . S XMSREC=$G(^XMBS(4.2999,XMIEN,3))
"RTN","XMS5",82,0)
 . . Q:XMSREC=""
"RTN","XMS5",83,0)
 . . S XMSECS=$$HDIFF^XLFDT($H,$P(XMSREC,U),2)
"RTN","XMS5",84,0)
 . . Q:XMSECS>599
"RTN","XMS5",85,0)
 . . Q:$P(XMSREC,U,1,6)?.P
"RTN","XMS5",86,0)
 . . S XMK=XMIEN+1000
"RTN","XMS5",87,0)
 . . S XMCNT=$$BMSGCT^XMXUTIL(.5,XMK)
"RTN","XMS5",88,0)
 . . S XMDREC=^DIC(4.2,XMIEN,0)
"RTN","XMS5",89,0)
 . . I $Y+3>IOSL D  Q:XMABORT
"RTN","XMS5",90,0)
 . . . D PAGE(.XMABORT) Q:XMABORT
"RTN","XMS5",91,0)
 . . . D AHDR(XMDT,.XMPAGE)
"RTN","XMS5",92,0)
 . . W !,$$MELD^XMXUTIL1($P(XMDREC,U),XMCNT,23)," "  ; domain, q'd msgs
"RTN","XMS5",93,0)
 . . I XMSECS>180 D
"RTN","XMS5",94,0)
 . . . W $E($P(XMSREC,U,6),1,16)
"RTN","XMS5",95,0)
 . . . W ?40," == Appears Inactive - ",XMSECS\60," Minutes",!,?40," == Analysis of device indicated."
"RTN","XMS5",96,0)
 . . E  D
"RTN","XMS5",97,0)
 . . . I '$P(XMSREC,U,2) D  Q
"RTN","XMS5",98,0)
 . . . . W $E($P(XMSREC,U,6),1,16)
"RTN","XMS5",99,0)
 . . . . W ?44,"Connecting/Disconnecting"
"RTN","XMS5",100,0)
 . . . S:$P(XMSREC,U,4)<0 $P(XMSREC,U,4)=""
"RTN","XMS5",101,0)
 . . . ; Device, Msg #, xmit line, ztsk, errors, xmit rate
"RTN","XMS5",102,0)
 . . . W $$MELD^XMXUTIL1($P(XMSREC,U,6),$P(XMSREC,U,2),28),$J($P(XMSREC,U,3),6),$J($P(XMSREC,U,7),10),$J($P(XMSREC,U,4),4),$J($P(XMSREC,U,5),8)
"RTN","XMS5",103,0)
 . . S XMCNT("D")=XMCNT("D")+1
"RTN","XMS5",104,0)
 . . S XMCNT("M")=XMCNT("M")+XMCNT
"RTN","XMS5",105,0)
 Q:XMABORT
"RTN","XMS5",106,0)
 I $Y+$S($G(IOST)["C-":2,1:0)+$S(XMCNT("D"):4,1:3)>IOSL D  Q:XMABORT
"RTN","XMS5",107,0)
 . D PAGE(.XMABORT) Q:XMABORT
"RTN","XMS5",108,0)
 . D AHDR(XMDT,.XMPAGE)
"RTN","XMS5",109,0)
 I 'XMCNT("D") W !,"No messages actively transmitting"
"RTN","XMS5",110,0)
 E  W !!,"Total Domains: ",XMCNT("D"),", Total Messages Queued: ",XMCNT("M")
"RTN","XMS5",111,0)
 Q
"RTN","XMS5",112,0)
AHDR(XMDT,XMPAGE) ;
"RTN","XMS5",113,0)
 S XMPAGE=XMPAGE+1
"RTN","XMS5",114,0)
 W !,"Queues actively transmitting messages"
"RTN","XMS5",115,0)
 W ?79-$L(XMDT),XMDT
"RTN","XMS5",116,0)
 W !,"At "_^XMB("NETNAME"),?71,"Page: ",$J(XMPAGE,2)
"RTN","XMS5",117,0)
 W !,?75,"Rate"
"RTN","XMS5",118,0)
 W !,"Domain",?16,"# Que'd  Device/Protocol",?47,"Msg #",?54,"Line",?63,"ZTSK  Err  C/Sec",!
"RTN","XMS5",119,0)
 Q
"RTN","XMS5",120,0)
TASK ;
"RTN","XMS5",121,0)
REQUE ;
"RTN","XMS5",122,0)
 K ^TMP($J,"ZTMKZ") S %=$G(XMDUZ)
"RTN","XMS5",123,0)
 N DIR,DIRUT,DTOUT,DUOUT,I,J,K,X,XMDUZ,Y,ZTD,ZTI,ZTQ,ZTS
"RTN","XMS5",124,0)
 S XMDUZ=$S($G(%):%,1:DUZ)
"RTN","XMS5",125,0)
 S I=999 F  D  Q:I=""
"RTN","XMS5",126,0)
 . S I=$O(^XMB(3.7,.5,2,I)) I $S(I'=+I:1,I>9999:1,I<1001:1,1:0) S I="" Q
"RTN","XMS5",127,0)
 . W:'$D(ZTQUEUED) "." I $O(^XMB(3.7,.5,2,I,1,0)) S K=I-1000 D
"RTN","XMS5",128,0)
 . . S J=$P($G(^XMBS(4.2999,K,0)),U,2) S:J J=$$CHK(J,K) I 'J S ^TMP($J,"ZTMKZ",$P(^DIC(4.2,K,0),U))=K
"RTN","XMS5",129,0)
 . Q
"RTN","XMS5",130,0)
 ;
"RTN","XMS5",131,0)
 ;W/Tasks
"RTN","XMS5",132,0)
 ;W:'$D(ZTQUEUED) !,"Wait for %ZTLOAD",!
"RTN","XMS5",133,0)
 ;D H F ZTS=0:0 S ZTS=$O(^%ZTSK(ZTS)) Q:'ZTS  S %=$S($D(^%ZTSK(ZTS,.1)):^(.1),1:"") I $S($L(%)'=1:1,"12345AG"[%:1,1:0),$D(^(.3,"XMB","XMSCRN"))#2 S ZTD=^("XMSCRN") K ^TMP($J,"ZTMKZ",ZTD)
"RTN","XMS5",134,0)
 ;
"RTN","XMS5",135,0)
 I '$D(ZTQUEUED) W !,"Some queues have no messages.",!
"RTN","XMS5",136,0)
 D H S ZTD="" F ZTI=2:1 S ZTD=$O(^TMP($J,"ZTMKZ",ZTD)) Q:ZTD=""  I '$O(^XMB(3.7,.5,2,^(ZTD)+1000,1,0)) K ^TMP($J,"ZTMKZ",ZTD)
"RTN","XMS5",137,0)
 I $O(^TMP($J,"ZTMKZ",""))="" W:'$D(ZTQUEUED) !!!,"<<<<  NO domains lack tasks !!! >>>",!!! Q
"RTN","XMS5",138,0)
 I '$D(ZTQUEUED) W !!,"These domains lack tasks."
"RTN","XMS5",139,0)
 I  S ZTD="" F ZTI=2:1 S ZTD=$O(^TMP($J,"ZTMKZ",ZTD)) Q:ZTD=""  S X=^(ZTD) W !?5,ZTD W:$P(^DIC(4.2,X,0),U,2)'["S" " << No Send Flag" I ZTI#20=0 S DIR(0)="E" D ^DIR K DIR,DIRUT
"RTN","XMS5",140,0)
 ;
"RTN","XMS5",141,0)
 ;
"RTN","XMS5",142,0)
 I '$D(ZTQUEUED) S DIR(0)="YO",DIR("A")="Requeue the missing tasks",DIR("B")="NO",DIR("?")="Answer YES to transmit these domains." D ^DIR K DIR,DIRUT I 'Y W !!,"Tasks not requeued." K ^TMP($J,"ZTMKZ") Q
"RTN","XMS5",143,0)
 ;
"RTN","XMS5",144,0)
 ;
"RTN","XMS5",145,0)
 S XMDUZ=$S($D(XMDUZ)[0:.5,'XMDUZ:.5,1:XMDUZ)
"RTN","XMS5",146,0)
 S XMS5="",XMS5("RETURN_TASK#")=1 F XMS5Z=0:0 S XMS5=$O(^TMP($J,"ZTMKZ",XMS5)) Q:XMS5=""  S XMSITE=XMS5,(XMINST,XMSCR)=^TMP($J,"ZTMKZ",XMS5) D Z
"RTN","XMS5",147,0)
 W:'$D(ZTQUEUED) !,"Done !" K XMS5,XMS5Z,^TMP($J,"ZTMKZ"),ZTD,ZTS Q
"RTN","XMS5",148,0)
H F I=1:1:9 H 1 W:'$D(ZTQUEUED) "."
"RTN","XMS5",149,0)
 Q
"RTN","XMS5",150,0)
CHK(ZTSK,XMINST) ;Is Task scheduled ? (0=no,.5=pending,1=running)
"RTN","XMS5",151,0)
 Q:'ZTSK 0
"RTN","XMS5",152,0)
 N % D STAT^%ZTLOAD
"RTN","XMS5",153,0)
 Q:ZTSK(1)=0 0  ; "Undefined"
"RTN","XMS5",154,0)
 Q:ZTSK(1)=1 .5  ; "Active: Pending"
"RTN","XMS5",155,0)
 I ZTSK(1)=2 N %1 D  L -^DIC(4.2,+$G(XMINST),"XMNETSEND") Q %1
"RTN","XMS5",156,0)
 . ; "Active: Running"
"RTN","XMS5",157,0)
 . L +^DIC(4.2,+$G(XMINST),"XMNETSEND"):2 ; Is it really running?
"RTN","XMS5",158,0)
 . I $T D KILL(XMINST,ZTSK) S %1=0 Q  ; Nope
"RTN","XMS5",159,0)
 . S %1=1  ; Yep
"RTN","XMS5",160,0)
 Q:ZTSK(1)=3 0  ; "Inactive: Finished"
"RTN","XMS5",161,0)
 I ZTSK(1)=4 D KILL(XMINST,ZTSK) Q 0  ; "Inactive: Available"
"RTN","XMS5",162,0)
 I ZTSK(1)=5 D KILL(XMINST,ZTSK) Q 0  ; "Interrupted"
"RTN","XMS5",163,0)
 Q
"RTN","XMS5",164,0)
KILL(XMINST,ZTSK) ;
"RTN","XMS5",165,0)
 D KILL^%ZTLOAD
"RTN","XMS5",166,0)
 ;S $P(^XMBS(4.2999,XMINST,0),U,2)=""  ; Task number
"RTN","XMS5",167,0)
 ;K ^XMBS(4.2999,XMINST,3)  ; Progress report
"RTN","XMS5",168,0)
 ;K ^XMBS(4.2999,XMINST,4)  ; Transmission data
"RTN","XMS5",169,0)
 ;K ^XMBS(4.2999,XMINST,5)  ; Transmission script
"RTN","XMS5",170,0)
 ;K ^XMBS(4.2999,XMINST,6)  ; Transmission audit
"RTN","XMS5",171,0)
 Q
"RTN","XMS5",172,0)
Z N % S %=$P(^DIC(4.2,XMINST,0),U,2)
"RTN","XMS5",173,0)
 I %["C"!(%["c")!(%["P")!(%["p") W:'$D(ZTQUEUED) !!,"Domain ",XMS5," has no send flag." Q
"RTN","XMS5",174,0)
 N XMB,ZTSK D ENQ^XMS1
"RTN","XMS5",175,0)
 I $G(ZTSK) W:'$D(ZTQUEUED) !!,"Task "_ZTSK_" queued for domain "_XMS5,! Q
"RTN","XMS5",176,0)
 I '$D(ZTQUEUED) W !!,"NO task queued for domain "_XMS5_"."
"RTN","XMS5",177,0)
 Q
"RTN","XMS5A")
0^140^B5086907
"RTN","XMS5A",1,0)
XMS5A ;(WASH ISC)/CAP/AML/RJ-Query into message queues ;01/28/98  11:17
"RTN","XMS5A",2,0)
 ;;7.1;MailMan;**55,50**;Jun 02, 1994
"RTN","XMS5A",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMS5A",4,0)
 ; ^XMS5A    XMQDISP
"RTN","XMS5A",5,0)
 D ^%ZIS Q:POP  U IO
"RTN","XMS5A",6,0)
 D NOW^%DTC K %I S A=$E(%,6,7)_" "_$P("Jan^Feb^Mar^Apr^May^Jun^Jul^Aug^Sep^Oct^Nov^Dec",U,$E(%,4,5))_" "_$E(%,2,3)
"RTN","XMS5A",7,0)
 I %\1'=% S %=$P(%,".",2)_"0000",A=A_" "_$E(%,1,2)_":"_$E(%,3,4)
"RTN","XMS5A",8,0)
 S XMD0=A K DIR S (XMF0,XMF0("PG"),XMC0,XME0)=0,DIR(0)="E"
"RTN","XMS5A",9,0)
Q S XMF0=$O(^DIC(4.2,"B",XMF0)) I XMF0="" G END
"RTN","XMS5A",10,0)
 S XMG0=$O(^DIC(4.2,"B",XMF0,0)) I '$D(^XMBS(4.2999,XMG0)) G Q
"RTN","XMS5A",11,0)
 S XMB0=$S($D(^XMBS(4.2999,XMG0,3))#2:^(3),1:""),XMB=$E(XMF0,1,16)
"RTN","XMS5A",12,0)
 S XMA=0 D M G:XMA<1 Q:XMB0=""
"RTN","XMS5A",13,0)
 I +XMB0=0 S XMA0="" G W
"RTN","XMS5A",14,0)
 S Y=$$HTE^XLFDT($P(XMB0,U,1),1)
"RTN","XMS5A",15,0)
 S Y=$P(Y,",",1)_" "_$E($P(Y,"@",2),1,5)
"RTN","XMS5A",16,0)
 S XMA0=Y_"^"_$P(XMB0,"^",2,6)
"RTN","XMS5A",17,0)
W ;write results
"RTN","XMS5A",18,0)
 I $Y+5>IOSL!'XMF0("PG") S X="" D:'$D(ZTQUEUED)&XMF0("PG") ^DIR:IOST?1"C-".E K DIRUT D HD G END:X=U
"RTN","XMS5A",19,0)
 S XMC0=XMC0+1 I $P(XMA0,U,4)<0 S $P(XMA0,U,4)=0
"RTN","XMS5A",20,0)
 W !,XMB,?18,$J(XMA,6),?25,$P(XMA0,"^",1),?40,$P(XMA0,"^",2),?48,$P(XMA0,"^",3),?54,$J($P(XMA0,"^",4),4),?59,$J($P(XMA0,"^",5)\1,4),?64,$P(XMA0,"^",6)
"RTN","XMS5A",21,0)
 G Q
"RTN","XMS5A",22,0)
M ;number in queue
"RTN","XMS5A",23,0)
 S XMA=$$BMSGCT^XMXUTIL(.5,XMG0+1000)
"RTN","XMS5A",24,0)
 Q
"RTN","XMS5A",25,0)
HD S XMF0("PG")=XMF0("PG")+1 W @IOF,!,"TRANSMISSION QUEUE STATUS REPORT",?79-$L(XMD0),XMD0,!,"At "_^XMB("NETNAME"),?70,"Page: "_XMF0("PG"),!
"RTN","XMS5A",26,0)
 W !,"Domain",?18,"Queued",?25,"Updated",?40,"Msg #   Line  Errors  Rate   IO",!
"RTN","XMS5A",27,0)
 Q
"RTN","XMS5A",28,0)
END I $D(XMC0),XMC0<1 D HD:IOST'?1"C".E&'XMF0("PG") W !,"No messages queued or in active transmission.",!
"RTN","XMS5A",29,0)
 K %,%I,DIR,I,X,XMC0,XMB,XME0,XMB0,XMA0,XMA,XMG0,XMF0,Y
"RTN","XMS5A",30,0)
 D ^%ZISC
"RTN","XMS5A",31,0)
 Q
"RTN","XMS5A",32,0)
CONT ;CONTINUOUS DISPLAY
"RTN","XMS5A",33,0)
 D XMS5A R !,X:10 Q:$T  G CONT
"RTN","XMS5A",34,0)
GO W !! G XMS5A
"RTN","XMSERR")
0^256^B4436984
"RTN","XMSERR",1,0)
XMSERR ;(WASH ISC)/THM/CAP- ERRORS... ;03/18/99  15:52
"RTN","XMSERR",2,0)
 ;;7.1;MailMan;**32,50**;Jun 02, 1994
"RTN","XMSERR",3,0)
HELONO S ERR=^XMB("NETNAME")_" not Recognized by "_$P(Y3,U),ER=1
"RTN","XMSERR",4,0)
 G ERR
"RTN","XMSERR",5,0)
MAILNO S ERR="Receiver will not accept Mail."
"RTN","XMSERR",6,0)
 Q:+$G(XMRG)'=502
"RTN","XMSERR",7,0)
 S XMB="XM_TRANSMISSION_ERROR",XMB(1)="message from you",XMB(2)=XMRG,XMB(3)="The message (Subj: "_$E($P(XMR,U),1,20)_$S($L($P(XMR,U))>20:"...",1:"")_" ["_XMZ_"]) was not transmitted" ;,XMY($P(XMR,U,2))=""
"RTN","XMSERR",8,0)
 N XMSRIEN,XMSRTO,XMSRTXT,XMSRI
"RTN","XMSERR",9,0)
 ; For every addressee for that site, send reject message to
"RTN","XMSERR",10,0)
 ; - user who forwarded to that addressee.
"RTN","XMSERR",11,0)
 ; - if no one forwarded, then to message originator.
"RTN","XMSERR",12,0)
 S (XMSRIEN,XMSRI)=0
"RTN","XMSERR",13,0)
 F  S XMSRIEN=$O(^XMB(3.9,XMZ,1,"AQUEUE",XMINST,XMSRIEN)) Q:XMSRIEN=""  D
"RTN","XMSERR",14,0)
 . S XMSRTO=$$SENDER^XMSM(XMZ,XMNVFROM,XMSRIEN) Q:"<>"[XMSRTO
"RTN","XMSERR",15,0)
 . S XMY(XMSRTO)=""
"RTN","XMSERR",16,0)
 . S XMSRI=XMSRI+1
"RTN","XMSERR",17,0)
 . S XMSRTXT(XMSRI)=" to:  "_$P($G(^XMB(3.9,XMZ,1,XMSRIEN,0)),U,1)
"RTN","XMSERR",18,0)
 . K ^XMB(3.9,XMZ,1,"AQUEUE",XMINST,XMSRIEN)
"RTN","XMSERR",19,0)
 . S $P(^XMB(3.9,XMZ,1,XMSRIEN,0),U,5,7)=XMD_U_"Receive site reject originator"  ; XMD should be FM date/time
"RTN","XMSERR",20,0)
 S:$D(XMSRTXT) XMTEXT="XMSRTXT("
"RTN","XMSERR",21,0)
 D:$D(XMY) ^XMB
"RTN","XMSERR",22,0)
 S ER=1
"RTN","XMSERR",23,0)
 G ERR
"RTN","XMSERR",24,0)
DATANO S ERR="Receiver will not accept DATA."
"RTN","XMSERR",25,0)
 G ERR
"RTN","XMSERR",26,0)
VALBAD S XMSG="500 Invalid domain validation response"
"RTN","XMSERR",27,0)
 X XMSEN S XMB="XMVALBAD",XMB(1)=$P(Y3,U)
"RTN","XMSERR",28,0)
 D ^XMB S ER=1
"RTN","XMSERR",29,0)
 Q
"RTN","XMSERR",30,0)
ERR S XMTRAN="Error: "_ERR S:'$D(XMB(4)) XMB(4)=XMTRAN D TRAN^XMC1 S ER=1 Q
"RTN","XMSM")
0^104^B20902395
"RTN","XMSM",1,0)
XMSM ;(WASH ISC)/CAP-SMTP ERROR MESSAGE(S) ;06/01/99  14:23
"RTN","XMSM",2,0)
 ;;7.1;MailMan;**4,6,13,20,50**;Jun 02, 1994
"RTN","XMSM",3,0)
ENTR(XMNOW,XMERRMSG,XMZ,XMSUBJ,XMNVFROM,XMRCPTO,XMRCPT,XMIEN) ; NON-DELIVERY TO RECIPIENT (XMS)
"RTN","XMSM",4,0)
 N XMTO,XMPARM,XMINSTR,XMFDA,XMIENS
"RTN","XMSM",5,0)
 Q:XMERRMSG["554"  ; 554 reject
"RTN","XMSM",6,0)
 S XMIENS=XMIEN_","_XMZ_","
"RTN","XMSM",7,0)
 S XMFDA(3.91,XMIENS,3)="@"                     ; remote msg id
"RTN","XMSM",8,0)
 S XMFDA(3.91,XMIENS,4)=XMNOW                   ; xmit date/time
"RTN","XMSM",9,0)
 S XMFDA(3.91,XMIENS,5)=$E($P(XMERRMSG," ",2,999),1,30)  ; status
"RTN","XMSM",10,0)
 S XMFDA(3.91,XMIENS,6)="@"                     ; path
"RTN","XMSM",11,0)
 D FILE^DIE("","XMFDA")
"RTN","XMSM",12,0)
 S XMTO=$$SENDER(XMZ,XMNVFROM,XMIEN,1,XMERRMSG) Q:"<>"[XMTO
"RTN","XMSM",13,0)
 S XMINSTR("FROM")=.5
"RTN","XMSM",14,0)
 S XMPARM(1)=XMSUBJ
"RTN","XMSM",15,0)
 S XMPARM(2)=XMRCPTO
"RTN","XMSM",16,0)
 S XMPARM(3)=$P(XMERRMSG," ",2,999)
"RTN","XMSM",17,0)
 S XMPARM(4)=XMRCPT
"RTN","XMSM",18,0)
 S XMPARM(5)=XMZ
"RTN","XMSM",19,0)
 D TASKBULL^XMXBULL(.5,"XM SEND ERR RECIPIENT",.XMPARM,"",XMTO,.XMINSTR)
"RTN","XMSM",20,0)
 Q
"RTN","XMSM",21,0)
ENTE(XMSITE,XMB,XMR0) ; POSTMASTER MESSAGE ON QUEUE FAILURE (XMS0)
"RTN","XMSM",22,0)
 N XMTEXT,XMZ,XMINSTR,XMI
"RTN","XMSM",23,0)
 S XMINSTR("FROM")=.5,XMINSTR("ADDR FLAGS")="R"
"RTN","XMSM",24,0)
 D STARTMSG^XMXSEND("Transmission Failure to "_XMSITE,.XMZ)
"RTN","XMSM",25,0)
 D BODYLINE^XMXSEND(XMZ,"Transmission has failed to "_XMSITE_" a number of times.")
"RTN","XMSM",26,0)
 D BODYLINE^XMXSEND(XMZ,"The following errors occurred:")
"RTN","XMSM",27,0)
 D BODYLINE^XMXSEND(XMZ," ")
"RTN","XMSM",28,0)
 S XMI=0
"RTN","XMSM",29,0)
 F  S XMI=$O(XMB("TRIES",XMI)) Q:'XMI  D BODYLINE^XMXSEND(XMZ,XMB("TRIES",XMI))
"RTN","XMSM",30,0)
 D BODYLINE^XMXSEND(XMZ," ")
"RTN","XMSM",31,0)
 D BODYLINE^XMXSEND(XMZ,"A transcript of the last delivery attempt follows:")
"RTN","XMSM",32,0)
 D BODYLINE^XMXSEND(XMZ," ")
"RTN","XMSM",33,0)
 S XMI=0
"RTN","XMSM",34,0)
 F  S XMI=$O(^TMP("XMC",XMR0,XMI)) Q:'XMI  D BODYLINE^XMXSEND(XMZ,^(XMI,0))
"RTN","XMSM",35,0)
 D ENDMSG^XMXSEND(.5,XMZ,.5,.XMINSTR)
"RTN","XMSM",36,0)
 Q
"RTN","XMSM",37,0)
ENTS(XMTASK,XMSERVER) ; NO SERVER MESSAGE
"RTN","XMSM",38,0)
 N XMPARM,XMINSTR
"RTN","XMSM",39,0)
 S XMINSTR("FROM")=.5
"RTN","XMSM",40,0)
 S XMPARM(1)=XMSERVER
"RTN","XMSM",41,0)
 S XMPARM(2)=XMTASK
"RTN","XMSM",42,0)
 D TASKBULL^XMXBULL(.5,"XM SEND ERR SERVER MSG",.XMPARM,"",.5,.XMINSTR)
"RTN","XMSM",43,0)
 Q
"RTN","XMSM",44,0)
ENTM(XMZ) ; NILL NODE FOR MESSID
"RTN","XMSM",45,0)
 N XMPARM,XMINSTR
"RTN","XMSM",46,0)
 S XMINSTR("FROM")=.5
"RTN","XMSM",47,0)
 S XMTRAN="Message transmission aborted - remote message with no remote-message ID" D TRAN^XMC1
"RTN","XMSM",48,0)
 S XMPARM(1)=XMZ
"RTN","XMSM",49,0)
 D TASKBULL^XMXBULL(.5,"XM SEND ERR REMOTE MSG ID",.XMPARM,"",.5,.XMINSTR)
"RTN","XMSM",50,0)
 Q
"RTN","XMSM",51,0)
ENT(XMSITE,XMINST,XMNOW,XMERRMSG,XMZ,XMSUBJ,XMNVFROM,XMRCPT) ;
"RTN","XMSM",52,0)
 ;If a message is rejected at a site for any reason (the whole message,
"RTN","XMSM",53,0)
 ;not just one recipient), then this message may be sent.
"RTN","XMSM",54,0)
 ;Currently used for 551 reject...
"RTN","XMSM",55,0)
 ;Create new message
"RTN","XMSM",56,0)
 N XMTO,XMPARM,XMIEN,XMNAME,XMCNT,XMINSTR
"RTN","XMSM",57,0)
 S XMERRMSG=$P(XMERRMSG," ",2,999)
"RTN","XMSM",58,0)
 K ^TMP("XM",$J,"REJECT")
"RTN","XMSM",59,0)
 S XMIEN=""
"RTN","XMSM",60,0)
 ;F  S XMIEN=$O(^XMB(3.9,XMZ,1,"AQUEUE",XMINST,XMIEN)) Q:XMIEN=""  D
"RTN","XMSM",61,0)
 F  S XMIEN=$O(XMRCPT(XMIEN)) Q:XMIEN=""  D
"RTN","XMSM",62,0)
 . N XMFDA,XMIENS
"RTN","XMSM",63,0)
 . S XMIENS=XMIEN_","_XMZ_","
"RTN","XMSM",64,0)
 . S XMFDA(3.91,XMIENS,3)="@"                ; remote msg id
"RTN","XMSM",65,0)
 . S XMFDA(3.91,XMIENS,4)=XMNOW              ; xmit date/time
"RTN","XMSM",66,0)
 . S XMFDA(3.91,XMIENS,5)=$E(XMERRMSG,1,30)  ; status
"RTN","XMSM",67,0)
 . S XMFDA(3.91,XMIENS,6)="@"                ; path
"RTN","XMSM",68,0)
 . S XMFDA(3.91,XMIENS,9)="@"                ; xmit time
"RTN","XMSM",69,0)
 . D FILE^DIE("","XMFDA")
"RTN","XMSM",70,0)
 . S XMNAME=$P($G(^XMB(3.9,XMZ,1,XMIEN,0)),U,1) Q:XMNAME=""
"RTN","XMSM",71,0)
 . S XMTO=$$SENDER(XMZ,XMNVFROM,XMIEN) Q:"<>"[XMTO
"RTN","XMSM",72,0)
 . S (XMCNT,^(XMTO))=$G(^TMP("XM",$J,"REJECT",XMTO))+1
"RTN","XMSM",73,0)
 . S ^TMP("XM",$J,"REJECT",XMTO,XMCNT)=XMNAME
"RTN","XMSM",74,0)
 S XMINSTR("FROM")=.5
"RTN","XMSM",75,0)
 S XMPARM(1)=XMSUBJ
"RTN","XMSM",76,0)
 S XMPARM(2)=XMSITE
"RTN","XMSM",77,0)
 S XMPARM(3)=XMERRMSG
"RTN","XMSM",78,0)
 S XMTO=""
"RTN","XMSM",79,0)
 F  S XMTO=$O(^TMP("XM",$J,"REJECT",XMTO)) Q:XMTO=""  D TASKBULL^XMXBULL(.5,"XM SEND ERR MSG",.XMPARM,"^TMP(""XM"",$J,""REJECT"",XMTO)",XMTO,.XMINSTR)
"RTN","XMSM",80,0)
 K ^TMP("XM",$J,"REJECT")
"RTN","XMSM",81,0)
 Q
"RTN","XMSM",82,0)
SENDER(XMZ,XMNVFROM,XMIEN,XMDELETE,XMERRMSG) ; Function returns 'to whom to send error message'
"RTN","XMSM",83,0)
 N XMFWDREC,XMFWDR
"RTN","XMSM",84,0)
 S XMFWDREC=$G(^XMB(3.9,XMZ,1,XMIEN,"F")) ; Try to find forwarder
"RTN","XMSM",85,0)
 S XMFWDR=$P(XMFWDREC,U,2)
"RTN","XMSM",86,0)
 I XMFWDR'="" D  Q XMFWDR  ; Forwarder is local
"RTN","XMSM",87,0)
 . I $G(XMDELETE) D DELFWD(XMZ,XMIEN,XMFWDR,XMERRMSG)
"RTN","XMSM",88,0)
 I $E($P(XMFWDREC,U,1))="<" Q $E($P($P(XMFWDREC,U,1),">",1),2,999)  ; Forwarder is remote
"RTN","XMSM",89,0)
 Q:$D(^XMB(3.9,XMZ,.7)) XMNVFROM  ; Sender is remote
"RTN","XMSM",90,0)
 N XMZREC,XMFROM
"RTN","XMSM",91,0)
 S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMSM",92,0)
 S XMFROM=$P(XMZREC,U,2)
"RTN","XMSM",93,0)
 I +XMFROM=XMFROM Q XMFROM  ; Sender is local
"RTN","XMSM",94,0)
 Q ""  ; Sender is ficticious local, no notification
"RTN","XMSM",95,0)
DELFWD(XMZ,XMIEN,XMFWDR,XMERRMSG) ; Delete user's forwarding address
"RTN","XMSM",96,0)
 Q:+XMFWDR'=XMFWDR
"RTN","XMSM",97,0)
 N XMFWD
"RTN","XMSM",98,0)
 S XMFWD=$P(^XMB(3.7,XMFWDR,0),U,2) Q:XMFWD=""
"RTN","XMSM",99,0)
 N XMINSTR,XMADDR,XMFULL,XMERROR,XMFDA,XMTXT
"RTN","XMSM",100,0)
 S XMINSTR("ADDR FLAGS")="X" ; do not create ^TMP(, just check.
"RTN","XMSM",101,0)
 S XMADDR=$P(^XMB(3.9,XMZ,1,XMIEN,0),U,1)
"RTN","XMSM",102,0)
 D ADDRESS^XMXADDR(DUZ,XMFWD,.XMFULL,.XMERROR)
"RTN","XMSM",103,0)
 I '$D(XMERROR),XMADDR'=$G(XMFULL) Q
"RTN","XMSM",104,0)
 D DELFWD^XMVVITA(XMFWDR,XMFWD,XMERRMSG)
"RTN","XMSM",105,0)
 Q
"RTN","XMSM1")
0^105^B1951
"RTN","XMSM1",1,0)
XMSM1 ;(WASH ISC)/CAP-OBSOLETE ;10/06/97  07:17
"RTN","XMSM1",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMSM1",3,0)
 Q
"RTN","XMSMAIL")
0^106^B9314883
"RTN","XMSMAIL",1,0)
XMSMAIL ;(WASH ISC)/THM/CAP-SMTP TRANSMITTER ;04/07/99  16:08
"RTN","XMSMAIL",2,0)
V ;;7.1;MailMan;**59,50**;Jun 02, 1994
"RTN","XMSMAIL",3,0)
MAIL ;SEND MAIL
"RTN","XMSMAIL",4,0)
 S %DT="T",X="N" D ^%DT S XMD=Y
"RTN","XMSMAIL",5,0)
 S XMR=^XMB(3.9,XMZ,0),XMPOST=20
"RTN","XMSMAIL",6,0)
 S XMNVFROM=$P($G(^XMB(3.9,XMZ,.7)),U,1) ; envelope from
"RTN","XMSMAIL",7,0)
 S XMFROM=$$FROM($P(XMR,U,2))
"RTN","XMSMAIL",8,0)
 I XMNVFROM="" S XMNVFROM=XMFROM
"RTN","XMSMAIL",9,0)
 S XMSG="MAIL FROM:"_XMNVFROM X XMSEN Q:ER
"RTN","XMSMAIL",10,0)
 I 'XMBT S XMSTIME=300 X XMREC K XMSTIME Q:ER
"RTN","XMSMAIL",11,0)
 I XMBT S XMRG="200 ID:Batch"
"RTN","XMSMAIL",12,0)
 I 'XMBT,$E(XMRG)'=2 D MAILNO^XMSERR,TRASH^XMS S ER=0 Q
"RTN","XMSMAIL",13,0)
 S XMRZ=$P(XMRG,"ID:",2)
"RTN","XMSMAIL",14,0)
RCPT ;IDENTIFY RECIPIENTS
"RTN","XMSMAIL",15,0)
 S J=0 I $G(XMSDOM) S XMINST=XMSDOM
"RTN","XMSMAIL",16,0)
 D R1 Q:ER  G RESET^XMS:$O(XMJ(0))="",GO^XMS0
"RTN","XMSMAIL",17,0)
R1 ; Loop from bottom of routine
"RTN","XMSMAIL",18,0)
 S J=$O(^XMB(3.9,XMZ,1,"AQUEUE",XMINST,J)) Q:'J
"RTN","XMSMAIL",19,0)
 S XMDES=$G(^XMB(3.9,XMZ,1,J,0)) G R1:$P(XMDES,U,7)'=XMINST
"RTN","XMSMAIL",20,0)
 I $G(XMR)="" S XMR=^XMB(3.9,XMZ,0)
"RTN","XMSMAIL",21,0)
 S (Y,XMDER)=$P(XMDES,U)
"RTN","XMSMAIL",22,0)
 S:$D(^XMB(3.9,XMZ,1,J,"T")) (Y,XMDER)=$P(^XMB(3.9,XMZ,1,J,"T"),U)_":"_XMDER
"RTN","XMSMAIL",23,0)
 I $P(Y,"@",2)=^XMB("NETNAME") S $P(XMDES,U,6,7)="^",^XMB(3.9,XMZ,1,J,0)=XMDES G R1
"RTN","XMSMAIL",24,0)
 ;S Y=$P(Y,"@") I $S($G(XMVA)>4:1,'$G(XMVA):1,1:0) S:Y["," Y=$TR(Y,", .","._+")
"RTN","XMSMAIL",25,0)
 S Y=$P(Y,"@")
"RTN","XMSMAIL",26,0)
 G R2:Y?.A
"RTN","XMSMAIL",27,0)
 I $E(Y)=$C(34),$E(Y,$L(Y))=$C(34) G R2
"RTN","XMSMAIL",28,0)
 S:Y?.E1C.E Y=$$CTRL^XMXUTIL1(Y)
"RTN","XMSMAIL",29,0)
 ; If we translate blanks to underscores, we run into problems with
"RTN","XMSMAIL",30,0)
 ; G. and S. names which contain blanks.  ^XMXADDR1 does not translate
"RTN","XMSMAIL",31,0)
 ; them back.
"RTN","XMSMAIL",32,0)
 I Y["," S Y=$TR(Y,", .","._+")
"RTN","XMSMAIL",33,0)
 ;Allowed punctuation (without quoting rcpt name is .%_-@+!
"RTN","XMSMAIL",34,0)
 I $TR(Y,"()<>@,;:\[]"_$C(34),"")=Y G R
"RTN","XMSMAIL",35,0)
 ;Reformat name for \ and " characters
"RTN","XMSMAIL",36,0)
 S %=-1
"RTN","XMSMAIL",37,0)
S S %=$F(Y,"\",%+2) I % S Y=$E(Y,1,%-2)_"\"_$E(Y,%,$L(Y)) G S
"RTN","XMSMAIL",38,0)
 S %=-1
"RTN","XMSMAIL",39,0)
D S %=$F(Y,"""",%+2) I % S Y=$E(Y,1,%-2)_"\"_$E(Y,%-1,$L(Y)) G D
"RTN","XMSMAIL",40,0)
 ;
"RTN","XMSMAIL",41,0)
R S X=Y_"@"_$P(XMDER,"@",2,99)
"RTN","XMSMAIL",42,0)
 S XMDER=X
"RTN","XMSMAIL",43,0)
R2 S XMSG="RCPT TO:<"_XMDER_">"_$S('$G(XMVA):"",$D(^XMB(3.9,XMZ,1,J,"F")):$$FWDBY(^("F")),1:"") X XMSEN Q:ER
"RTN","XMSMAIL",44,0)
 I 'XMBT S XMSTIME=300 X XMREC K XMSTIME Q:ER
"RTN","XMSMAIL",45,0)
 I XMBT S XMRG="200 In transit"
"RTN","XMSMAIL",46,0)
 I $E(XMRG)=2 S XMJ(J)="" G R1
"RTN","XMSMAIL",47,0)
R3 S XMSUP=$G(XMSUP)+1 I XMSUP<3 S X=XMDER,XMDER=$S(XMSUP=1:$TR(XMDER,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz"),XMSUP=2:$TR(XMDER,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")) G R2:X'=XMDER,R3
"RTN","XMSMAIL",48,0)
 K XMSUP
"RTN","XMSMAIL",49,0)
 D ENTR^XMSM(XMD,XMRG,XMZ,$P(XMR,U,1),XMNVFROM,$P(XMDES,U),XMDER,J)
"RTN","XMSMAIL",50,0)
 G R1
"RTN","XMSMAIL",51,0)
FWDBY(XMFREC) ;
"RTN","XMSMAIL",52,0)
 I $E(XMFREC,U,1)=" " Q ""
"RTN","XMSMAIL",53,0)
 I $E(XMFREC,U,1)="<" Q " FWD BY:"_$P(XMFREC,">",1)_">"
"RTN","XMSMAIL",54,0)
 N XMFDUZ
"RTN","XMSMAIL",55,0)
 S XMFDUZ=$P(XMFREC,U,2)
"RTN","XMSMAIL",56,0)
 I +XMFDUZ=XMFDUZ Q " FWD BY:<"_$$NETNAME^XMXUTIL(XMFDUZ)_">"
"RTN","XMSMAIL",57,0)
 Q ""
"RTN","XMSMAIL",58,0)
FROM(XMFROM) ;
"RTN","XMSMAIL",59,0)
 I $F(XMFROM,"@"_^XMB("NETNAME"))>$L(XMFROM) S XMFROM=$P(XMFROM,"@"_^XMB("NETNAME"))
"RTN","XMSMAIL",60,0)
 I XMFROM'["@" Q "<"_$$NETNAME^XMXUTIL(XMFROM)_">"
"RTN","XMSMAIL",61,0)
 Q "<"_$$REMADDR^XMXADDR1(XMFROM)_">"
"RTN","XMTDF")
0^35^B11639920
"RTN","XMTDF",1,0)
XMTDF ;ISC-SF/GMB-Filter message: multiple conditions ;09/08/98  11:07
"RTN","XMTDF",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMTDF",3,0)
 ; XMF("SUBJ")  Subject contains this string
"RTN","XMTDF",4,0)
 ; XMF("FROM")  Message is from this person
"RTN","XMTDF",5,0)
 ; XMF("TO")    Message is to this person
"RTN","XMTDF",6,0)
FILTER(XMDUZ,XMZ,XMZSUBJ,XMZFROM,XMK,XMKN) ; figures out which basket to save to
"RTN","XMTDF",7,0)
 ; the message should be put in.
"RTN","XMTDF",8,0)
 ; Defaults: the "IN" basket.
"RTN","XMTDF",9,0)
 ; If basket doesn't exist, it creates the basket.
"RTN","XMTDF",10,0)
 ; Returns basket number.
"RTN","XMTDF",11,0)
 N XMORDER,XMIEN,XMFREC
"RTN","XMTDF",12,0)
 K XMK,XMKN
"RTN","XMTDF",13,0)
 S (XMORDER,XMIEN)=0
"RTN","XMTDF",14,0)
 F  S XMORDER=$O(^XMB(3.7,XMDUZ,15,"AF",XMORDER)) Q:'XMORDER  D  Q:$D(XMKN)
"RTN","XMTDF",15,0)
 . F  S XMIEN=$O(^XMB(3.7,XMDUZ,15,"AF",XMORDER,XMIEN)) Q:'XMIEN  D  Q:$D(XMKN)
"RTN","XMTDF",16,0)
 . . N XMF
"RTN","XMTDF",17,0)
 . . S XMFREC=$G(^XMB(3.7,XMDUZ,15,XMIEN,0))
"RTN","XMTDF",18,0)
 . . S:$P(XMFREC,U,5)]"" XMF("SUBJ")=$P(XMFREC,U,5)
"RTN","XMTDF",19,0)
 . . S:$P(XMFREC,U,6)]"" XMF("FROM")=$P(XMFREC,U,6)
"RTN","XMTDF",20,0)
 . . S:$P(XMFREC,U,7)]"" XMF("TO")=$P(XMFREC,U,7)
"RTN","XMTDF",21,0)
 . . S:$$GOODMSG(XMZ,XMZSUBJ,XMZFROM,.XMF) XMKN=$P(XMFREC,U,3)
"RTN","XMTDF",22,0)
 I '$D(XMKN) D  Q
"RTN","XMTDF",23,0)
 . S XMK=1,XMKN="IN"   ; Default to IN basket
"RTN","XMTDF",24,0)
 . D:'$D(^XMB(3.7,XMDUZ,2,XMK,0)) MAKEBSKT^XMXBSKT(XMDUZ,XMK,XMKN)
"RTN","XMTDF",25,0)
 S XMK=$O(^XMB(3.7,XMDUZ,2,"B",XMKN,0))
"RTN","XMTDF",26,0)
 Q:XMK
"RTN","XMTDF",27,0)
 I XMKN="WASTE" S XMK=.5 D MAKEBSKT^XMXBSKT(XMDUZ,XMK,XMKN) Q
"RTN","XMTDF",28,0)
 D MAKEBSKT^XMXBSKT(XMDUZ,.XMK,XMKN)
"RTN","XMTDF",29,0)
 Q
"RTN","XMTDF",30,0)
GOODMSG(XMZ,XMZSUBJ,XMZFROM,XMF) ;
"RTN","XMTDF",31,0)
 N XMNOGOOD
"RTN","XMTDF",32,0)
 I $D(XMF("SUBJ")),$$UP^XLFSTR(XMZSUBJ)'[XMF("SUBJ") Q 0
"RTN","XMTDF",33,0)
 I $D(XMF("FROM")) D  Q:XMNOGOOD 0
"RTN","XMTDF",34,0)
 . I XMF("FROM")=+XMF("FROM"),XMF("FROM")=XMZFROM S XMNOGOOD=0 Q
"RTN","XMTDF",35,0)
 . S XMNOGOOD=1
"RTN","XMTDF",36,0)
 . Q:XMF("FROM")'["@"
"RTN","XMTDF",37,0)
 . S XMZFROM=$$UP^XLFSTR(XMZFROM)
"RTN","XMTDF",38,0)
 . Q:$P(XMZFROM,"@")'[$P(XMF("FROM"),"@")
"RTN","XMTDF",39,0)
 . Q:$P(XMZFROM,"@",2)'[$P(XMF("FROM"),"@",2)
"RTN","XMTDF",40,0)
 . S XMNOGOOD=0
"RTN","XMTDF",41,0)
 I $D(XMF("TO")) D  Q:XMNOGOOD 0
"RTN","XMTDF",42,0)
 . I $D(^XMB(3.9,XMZ,6,"B",XMF("TO"))) S XMNOGOOD=0 Q
"RTN","XMTDF",43,0)
 . S XMNOGOOD=1
"RTN","XMTDF",44,0)
 . Q:XMF("TO")'["@"
"RTN","XMTDF",45,0)
 . N XMTOX,XMTO
"RTN","XMTDF",46,0)
 . S XMTO=""
"RTN","XMTDF",47,0)
 . F  S XMTO=$O(^XMB(3.9,XMZ,6,"B",XMTO)) Q:XMTO=""  D  Q:'XMNOGOOD
"RTN","XMTDF",48,0)
 . . Q:XMTO'["@"
"RTN","XMTDF",49,0)
 . . S XMTOX=$$UP^XLFSTR(XMTO)
"RTN","XMTDF",50,0)
 . . Q:$P(XMTOX,"@")'[$P(XMF("TO"),"@")
"RTN","XMTDF",51,0)
 . . Q:$P(XMTOX,"@",2)'[$P(XMF("TO"),"@",2)
"RTN","XMTDF",52,0)
 . . S XMNOGOOD=0
"RTN","XMTDF",53,0)
 Q 1
"RTN","XMTDF",54,0)
BASKET(X) ;
"RTN","XMTDF",55,0)
 N DIC,Y,DA
"RTN","XMTDF",56,0)
 S DA(1)=$G(XMDUZ,DUZ)
"RTN","XMTDF",57,0)
 S DIC="^XMB(3.7,"_DA(1)_",2,"
"RTN","XMTDF",58,0)
 S DIC("P")=3.701
"RTN","XMTDF",59,0)
 S DIC(0)="EQL"
"RTN","XMTDF",60,0)
 D ^DIC
"RTN","XMTDF",61,0)
 I $P(Y,U)=1 K X Q  ; May not filter to the IN basket
"RTN","XMTDF",62,0)
 I Y>0 S X=$P(Y,U,2) Q
"RTN","XMTDF",63,0)
 K X
"RTN","XMTDF",64,0)
 Q
"RTN","XMTDF",65,0)
BSKTHELP ;
"RTN","XMTDF",66,0)
 N DIC,Y
"RTN","XMTDF",67,0)
 Q:"??"'[X
"RTN","XMTDF",68,0)
 S DIC("S")="I X'=""IN"""
"RTN","XMTDF",69,0)
 S DIC="^XMB(3.7,"_$G(XMDUZ,DUZ)_",2,"
"RTN","XMTDF",70,0)
 S DIC(0)="EQL"
"RTN","XMTDF",71,0)
 D ^DIC
"RTN","XMTDF",72,0)
 Q
"RTN","XMTDF",73,0)
FROM(X) ;
"RTN","XMTDF",74,0)
 S X=$$UP^XLFSTR(X)
"RTN","XMTDF",75,0)
 I X["@" K:$L(X)<2!($L(X)>45) X Q
"RTN","XMTDF",76,0)
 N DIC,Y
"RTN","XMTDF",77,0)
 S DIC="^VA(200,",DIC(0)="MNE"
"RTN","XMTDF",78,0)
 D ^DIC
"RTN","XMTDF",79,0)
 I Y=-1 K X Q
"RTN","XMTDF",80,0)
 S X=+Y
"RTN","XMTDF",81,0)
 Q
"RTN","XMTDF",82,0)
TO(X) ;
"RTN","XMTDF",83,0)
 I X["@" D  Q
"RTN","XMTDF",84,0)
 . S X=$$UP^XLFSTR(X)
"RTN","XMTDF",85,0)
 . K:$L(X)<2!($L(X)>45) X
"RTN","XMTDF",86,0)
 I $E(X,1,2)="G."!($E(X,1,2)="g.") D  Q
"RTN","XMTDF",87,0)
 . S X=$E(X,3,99)
"RTN","XMTDF",88,0)
 . N DIC,Y
"RTN","XMTDF",89,0)
 . ; Group is public OR user is owner OR group is unrestricted and user is member
"RTN","XMTDF",90,0)
 . S DIC("S")="N J,XMA S J=^(0),XMA=$S($D(^XMB(3.8,+Y,3)):$P(^(3),U),1:.5) I $P(J,U,2)=""PU""!(XMA=$G(XMDUZ,DUZ))!(+$P(J,U,6)=0&$D(^XMB(3.8,+Y,1,""B"",$G(XMDUZ,DUZ))))"
"RTN","XMTDF",91,0)
 . S DIC="^XMB(3.8,"
"RTN","XMTDF",92,0)
 . S DIC(0)="ME"
"RTN","XMTDF",93,0)
 . D ^DIC
"RTN","XMTDF",94,0)
 . I Y=-1 K X Q
"RTN","XMTDF",95,0)
 . S X="G."_$$UP^XLFSTR($P(Y,U,2))
"RTN","XMTDF",96,0)
 S X=$$UP^XLFSTR(X)
"RTN","XMTDF",97,0)
 N DIC,Y
"RTN","XMTDF",98,0)
 S DIC="^VA(200,",DIC(0)="MNE"
"RTN","XMTDF",99,0)
 D ^DIC
"RTN","XMTDF",100,0)
 I Y=-1 K X Q
"RTN","XMTDF",101,0)
 S X=$P(Y,U,2)
"RTN","XMTDF",102,0)
 Q
"RTN","XMTDL")
0^36^B55627768
"RTN","XMTDL",1,0)
XMTDL ;ISC-SF/GMB-Deliver local mail to mailbox ;03/29/99  15:47
"RTN","XMTDL",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMTDL",3,0)
 ; Replaces ^XMAD0,GO^XMADGO,STATS^XMADJF0,^XMADJF1,^XMADJF1A (ISC-WASH/CAP)
"RTN","XMTDL",4,0)
GO ;
"RTN","XMTDL",5,0)
 ; Variables provided through TASKMAN: XMHANG,XMGROUP,XMQUEUE
"RTN","XMTDL",6,0)
 N XMTSTAMP,XMUID,XMIDLE,X,XMMCNT,XMRCNT,XMACNT
"RTN","XMTDL",7,0)
 ; XMMCNT  # of messages/responses processed
"RTN","XMTDL",8,0)
 ; XMRCNT  # of potential local recipients to process
"RTN","XMTDL",9,0)
 ; XMACNT  # of actual local recipients processed
"RTN","XMTDL",10,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","XMTDL",11,0)
 Q:$P($G(^XMB(1,1,0)),U,16)
"RTN","XMTDL",12,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D R^XMCTRAP"
"RTN","XMTDL",13,0)
 E  S X="R^XMCTRAP",@^%ZOSF("TRAP")
"RTN","XMTDL",14,0)
 ; Why would the following line ever execute?
"RTN","XMTDL",15,0)
 I $D(XMDUZ) D KILL^XM I $D(XMCHAN) D KL^XMC I $D(XMBLOCK) D KILL^XML4CRC
"RTN","XMTDL",16,0)
 I $D(^%ZOSF("TRAP")) S X="^%ET",@^("TRAP")
"RTN","XMTDL",17,0)
 I $D(^%ZOSF("PRIORITY")) S X=$S(+$G(^XMB(1,1,.13)):+^(.13),1:5) X ^%ZOSF("PRIORITY")
"RTN","XMTDL",18,0)
 L +^XMBPOST(XMGROUP,XMQUEUE):0 E  H 0 Q
"RTN","XMTDL",19,0)
 S XMIDLE=0
"RTN","XMTDL",20,0)
 F  D  Q:$P($G(^XMB(1,1,0)),U,16)!($$TSTAMP^XMXUTIL1-XMIDLE>900)
"RTN","XMTDL",21,0)
 . F  S XMTSTAMP=$O(^XMBPOST(XMGROUP,XMQUEUE,"")) Q:XMTSTAMP'>0  D
"RTN","XMTDL",22,0)
 . . S XMIDLE=0
"RTN","XMTDL",23,0)
 . . F  S XMUID=$O(^XMBPOST(XMGROUP,XMQUEUE,XMTSTAMP,"")) Q:XMUID=""  D
"RTN","XMTDL",24,0)
 . . . I XMGROUP="M" D
"RTN","XMTDL",25,0)
 . . . . D MDELIVER(XMGROUP,XMQUEUE,XMTSTAMP,XMUID,.XMMCNT,.XMRCNT,.XMACNT)
"RTN","XMTDL",26,0)
 . . . E  D
"RTN","XMTDL",27,0)
 . . . . D RDELIVER(XMGROUP,XMQUEUE,XMTSTAMP,XMUID,.XMMCNT,.XMRCNT,.XMACNT)
"RTN","XMTDL",28,0)
 . . . K ^XMBPOST(XMGROUP,XMQUEUE,XMTSTAMP,XMUID)
"RTN","XMTDL",29,0)
 . . . D:'$D(^XMBPOST("STATS","OFF")) STATS^XMTDL1(XMGROUP,XMQUEUE,XMMCNT,XMRCNT,XMACNT)  ; Delivered to # users
"RTN","XMTDL",30,0)
 . L +^XMBPOST("QSTATS",XMGROUP,XMQUEUE)
"RTN","XMTDL",31,0)
 . S ^XMBPOST(XMGROUP,XMQUEUE)=""
"RTN","XMTDL",32,0)
 . L -^XMBPOST("QSTATS",XMGROUP,XMQUEUE)
"RTN","XMTDL",33,0)
 . S:XMIDLE=0 XMIDLE=$$TSTAMP^XMXUTIL1
"RTN","XMTDL",34,0)
 . H XMHANG
"RTN","XMTDL",35,0)
 L -^XMBPOST(XMGROUP,XMQUEUE)
"RTN","XMTDL",36,0)
 Q
"RTN","XMTDL",37,0)
RDELIVER(XMGROUP,XMQUEUE,XMTSTAMP,XMZ,XMMCNT,XMRCNT,XMACNT) ; was ^XMADJF1
"RTN","XMTDL",38,0)
 ; Note: We know that XMGROUP="R" here
"RTN","XMTDL",39,0)
 N XMZR,XMREC,XMFROM,XMFLIST,XMFIRST,XMFDA,I,XMZREC,XMZSUBJ,XMZFROM,XMZDATE,XMRESPS
"RTN","XMTDL",40,0)
 ; XMFIRST sender of the first response processed
"RTN","XMTDL",41,0)
 K ^XMBPOST(XMGROUP,XMQUEUE,"B",XMZ,XMTSTAMP) ; Accept no more additions to this batch of replies
"RTN","XMTDL",42,0)
 ;Post responses to message response multiple, keeping track of number of deliveries
"RTN","XMTDL",43,0)
 S (XMMCNT,XMRCNT,XMACNT)=0
"RTN","XMTDL",44,0)
 I '$D(^XMB(3.9,XMZ,0)) D  Q
"RTN","XMTDL",45,0)
 . D BADERR^XMTDL1("Message "_XMZ_" does not exist.  Can't post responses to it.")
"RTN","XMTDL",46,0)
 . S XMZR=""
"RTN","XMTDL",47,0)
 . F  S XMZR=$O(^XMBPOST(XMGROUP,XMQUEUE,XMTSTAMP,XMZ,XMZR)) Q:XMZR=""  S XMRCNT=XMRCNT+^(XMZR),XMMCNT=XMMCNT+1
"RTN","XMTDL",48,0)
 S XMZREC=^XMB(3.9,XMZ,0)
"RTN","XMTDL",49,0)
 S XMZSUBJ=$P(XMZREC,U),XMZFROM=$P(XMZREC,U,2),XMZDATE=$P(XMZREC,U,3)
"RTN","XMTDL",50,0)
 S:XMZFROM="" XMZFROM=.5
"RTN","XMTDL",51,0)
 ; If the sender of the original msg is not a recipient, make him one.
"RTN","XMTDL",52,0)
 I XMZFROM=+XMZFROM,'$D(^XMB(3.9,XMZ,1,"C",XMZFROM)) D
"RTN","XMTDL",53,0)
 . D ADDRECP(XMZ,$P(XMZREC,U,7)["P",XMZFROM)
"RTN","XMTDL",54,0)
 . ;D LASTREAD(XMZ,XMZFROM,XMZDATE)
"RTN","XMTDL",55,0)
 S XMZR=""
"RTN","XMTDL",56,0)
 F  S XMZR=$O(^XMBPOST(XMGROUP,XMQUEUE,XMTSTAMP,XMZ,XMZR)) Q:XMZR=""  S XMREC=^(XMZR) D
"RTN","XMTDL",57,0)
 . S XMMCNT=XMMCNT+1
"RTN","XMTDL",58,0)
 . S XMRCNT=XMRCNT+$P(XMREC,U,1)
"RTN","XMTDL",59,0)
 . I '$D(^XMB(3.9,XMZR)) D BADERR^XMTDL1("Response "_XMZR_" to message "_XMZ_" does not exist.  Can't deliver it.") Q
"RTN","XMTDL",60,0)
 . ;S XMFDA(3.9001,"+1,"_XMZ_",",.01)=XMZR ; *** Moved to ^XMKP ***
"RTN","XMTDL",61,0)
 . ;D UPDATE^DIE("","XMFDA")  ; Add to response multiple in original msg
"RTN","XMTDL",62,0)
 . S XMFROM=$P(XMREC,U,2)
"RTN","XMTDL",63,0)
 . S:'$D(XMFIRST) XMFIRST=XMFROM
"RTN","XMTDL",64,0)
 . S XMFLIST(XMFROM)=$G(XMFLIST(XMFROM))+1  ; Number of replies by this user
"RTN","XMTDL",65,0)
 . Q:XMFROM="NR"  ; Network reply *** If we implement fully networked mail, we must get the real sender, and make sure s/he's in the 'addressed to' and 'recipient' multiples.
"RTN","XMTDL",66,0)
 . ; If the sender of the reply is not a recipient, make him one.
"RTN","XMTDL",67,0)
 . I XMFROM,'$D(^XMB(3.9,XMZ,1,"C",XMFROM)) D ADDRECP(XMZ,$P(XMZREC,U,7)["P",XMFROM)
"RTN","XMTDL",68,0)
 Q:'$D(XMFLIST)
"RTN","XMTDL",69,0)
 I $O(XMFLIST(""))=XMFIRST,$O(XMFLIST(XMFIRST))="" S XMFROM=XMFIRST  ; There's one sender
"RTN","XMTDL",70,0)
 E  S XMFROM=""  ; There's multiple senders
"RTN","XMTDL",71,0)
 ; At this point, XMFROM has the sender's DUZ (or 'NR' if remote)
"RTN","XMTDL",72,0)
 ; if there was only 1 sender.
"RTN","XMTDL",73,0)
 ; If there was more than 1 sender, then XMFROM="", so that ^XMTDL1 will
"RTN","XMTDL",74,0)
 ; make the msg new for all recipients.
"RTN","XMTDL",75,0)
 ; Now, deliver replies...
"RTN","XMTDL",76,0)
 S XMRESPS=$P(^XMB(3.9,XMZ,3,0),U,4)  ; Number of replies to msg
"RTN","XMTDL",77,0)
 S XMTO=""
"RTN","XMTDL",78,0)
 F  S XMTO=$O(^XMB(3.9,XMZ,1,"C",XMTO)) Q:XMTO'>0  D
"RTN","XMTDL",79,0)
 . S I=$O(^XMB(3.9,XMZ,1,"C",XMTO,0))
"RTN","XMTDL",80,0)
 . Q:$G(^XMB(3.9,XMZ,1,I,"D"))  ; User terminated
"RTN","XMTDL",81,0)
 . I $D(XMFLIST(XMTO)) D:XMTO=XMFIRST GOTREPLY(XMZ,XMRESPS,I,XMFLIST(XMTO)) Q:XMTO=XMFROM  ; If recipient is the only sender, don't bother delivering to him, because he's already seen it.
"RTN","XMTDL",82,0)
 . Q:$P(^XMB(3.9,XMZ,1,I,0),U,2)=XMRESPS  ; Don't deliver if recipient has already seen all responses
"RTN","XMTDL",83,0)
 . S XMACNT=XMACNT+1
"RTN","XMTDL",84,0)
 . D DELIVER^XMTDL2(XMTO,XMZ,XMZSUBJ,XMZFROM,XMFROM,1)
"RTN","XMTDL",85,0)
 Q
"RTN","XMTDL",86,0)
ADDRECP(XMZ,XMPRI,XMRECP) ; Add a recipient to the message
"RTN","XMTDL",87,0)
 N XMFDA
"RTN","XMTDL",88,0)
 S XMFDA(3.91,"+1,"_XMZ_",",.01)=XMRECP
"RTN","XMTDL",89,0)
 I XMPRI,+XMRECP=XMRECP,$P($G(^XMB(3.7,XMRECP,0)),U,11) S XMFDA(3.91,"+1,"_XMZ_",",10)=$P(^(0),U,11) ; priority response flag
"RTN","XMTDL",90,0)
 D UPDATE^DIE("","XMFDA")
"RTN","XMTDL",91,0)
 Q
"RTN","XMTDL",92,0)
LASTREAD(XMZ,XMZFROM,XMZDATE) ; Note that the sender has read the original message
"RTN","XMTDL",93,0)
 N XMFDA,XMIEN
"RTN","XMTDL",94,0)
 S XMIEN=$O(^XMB(3.9,XMZ,1,"C",XMZFROM,0)) Q:'XMIEN
"RTN","XMTDL",95,0)
 S XMFDA(3.91,XMIEN_","_XMZ_",",1)=0        ; Read the original msg
"RTN","XMTDL",96,0)
 S XMFDA(3.91,XMIEN_","_XMZ_",",2)=XMZDATE  ; Last Read
"RTN","XMTDL",97,0)
 S XMFDA(3.91,XMIEN_","_XMZ_",",11)=XMZDATE ; First Read
"RTN","XMTDL",98,0)
 D FILE^DIE("","XMFDA")
"RTN","XMTDL",99,0)
 Q
"RTN","XMTDL",100,0)
GOTREPLY(XMZ,XMRESPS,XMIEN,XMRNEW) ; Note that recipient has seen his own reply.
"RTN","XMTDL",101,0)
 N XMFDA
"RTN","XMTDL",102,0)
 ; If last reply seen + # responses made = total responses...
"RTN","XMTDL",103,0)
 I $P(^XMB(3.9,XMZ,1,XMIEN,0),U,2)+XMRNEW=XMRESPS D
"RTN","XMTDL",104,0)
 . S XMFDA(3.91,XMIEN_","_XMZ_",",1)=XMRESPS
"RTN","XMTDL",105,0)
 . D FILE^DIE("","XMFDA")
"RTN","XMTDL",106,0)
 Q
"RTN","XMTDL",107,0)
MDELIVER(XMGROUP,XMQUEUE,XMTSTAMP,XMUID,XMMCNT,XMRCNT,XMACNT) ; was ^XMADJF1
"RTN","XMTDL",108,0)
 N XMZSUBJ,XMZFROM,XMZDATE,XMZPDATE,XMZBSKT,XMREC,XMZ,XMK,XMDEL,XMBCAST
"RTN","XMTDL",109,0)
 ; Note: We know that XMGROUP="M" here
"RTN","XMTDL",110,0)
 S XMMCNT=1
"RTN","XMTDL",111,0)
 S XMREC=^XMBPOST(XMGROUP,XMQUEUE,XMTSTAMP,XMUID)
"RTN","XMTDL",112,0)
 S XMRCNT=+$P(XMREC,U,1)
"RTN","XMTDL",113,0)
 S XMACNT=0
"RTN","XMTDL",114,0)
 S XMZ=+XMUID
"RTN","XMTDL",115,0)
 I '$D(^XMB(3.9,XMZ,0)) D BADERR^XMTDL1("Message "_XMZ_" does not exist.  Can't deliver it.") Q
"RTN","XMTDL",116,0)
 S XMZSUBJ=$P(^XMB(3.9,XMZ,0),U),XMZFROM=$P(^(0),U,2),XMZDATE=$P(^(0),U,3),XMZPDATE=$P(^(0),U,6)
"RTN","XMTDL",117,0)
 S:XMZFROM="" XMZFROM=.5
"RTN","XMTDL",118,0)
 I XMZPDATE,XMZPDATE'>DT  Q  ; If purge date has passed, don't deliver
"RTN","XMTDL",119,0)
 I $P(XMREC,U,2)'="" D  ; basket selection
"RTN","XMTDL",120,0)
 . I $L(XMUID,U)=1 S XMK(XMZFROM)=$P(XMREC,U,2) Q  ; sending person
"RTN","XMTDL",121,0)
 . I $P(XMUID,U,2) S XMK($P(XMUID,U,2))=$P(XMREC,U,2) ; forwarding person
"RTN","XMTDL",122,0)
 I $P(XMREC,U,3)'="" S XMK(.6)=$P(XMREC,U,3)
"RTN","XMTDL",123,0)
 I $P(XMREC,U,4) S XMDEL(.6)=$P(XMREC,U,4)
"RTN","XMTDL",124,0)
 S XMBCAST=($P(XMREC,U,5)'="")
"RTN","XMTDL",125,0)
 S XMZBSKT=$P($G(^XMB(3.9,XMZ,.5)),U,1)
"RTN","XMTDL",126,0)
 I $L(XMUID,U)=1 D NEW(XMGROUP,XMQUEUE,XMTSTAMP,XMZ,XMBCAST,.XMK,.XMDEL,XMZSUBJ,XMZFROM,XMZDATE,XMZPDATE,XMZBSKT,.XMACNT) Q
"RTN","XMTDL",127,0)
 D FORWARD(XMGROUP,XMQUEUE,XMTSTAMP,XMUID,XMZ,XMBCAST,.XMK,.XMDEL,XMZSUBJ,XMZFROM,XMZPDATE,XMZBSKT,.XMACNT)
"RTN","XMTDL",128,0)
 Q
"RTN","XMTDL",129,0)
NEW(XMGROUP,XMQUEUE,XMTSTAMP,XMZ,XMBCAST,XMK,XMDEL,XMZSUBJ,XMZFROM,XMZDATE,XMZPDATE,XMZBSKT,XMACNT) ;
"RTN","XMTDL",130,0)
 D:XMZFROM=+XMZFROM LASTREAD(XMZ,XMZFROM,XMZDATE)
"RTN","XMTDL",131,0)
 I XMBCAST D BRODCAST^XMTDL1(XMZ,XMZSUBJ,XMZFROM,XMZFROM,.XMK,.XMDEL,XMZPDATE,XMZBSKT,.XMACNT) Q
"RTN","XMTDL",132,0)
 N XMTO
"RTN","XMTDL",133,0)
 S XMTO=0  ; Q: on next line ensures only local user delivery
"RTN","XMTDL",134,0)
 F  S XMTO=$O(^XMB(3.9,XMZ,1,"C",XMTO)) Q:XMTO'>0  D
"RTN","XMTDL",135,0)
 . S XMACNT=XMACNT+1
"RTN","XMTDL",136,0)
 . D DELIVER^XMTDL2(XMTO,XMZ,XMZSUBJ,XMZFROM,XMZFROM,0,$G(XMK(XMTO)),$G(XMDEL(XMTO),XMZPDATE),XMZBSKT)
"RTN","XMTDL",137,0)
 Q
"RTN","XMTDL",138,0)
FORWARD(XMGROUP,XMQUEUE,XMTSTAMP,XMUID,XMZ,XMBCAST,XMK,XMDEL,XMZSUBJ,XMZFROM,XMZPDATE,XMZBSKT,XMACNT) ;
"RTN","XMTDL",139,0)
 N I,J,XMFROM,XMTO,XMTOLIST
"RTN","XMTDL",140,0)
 S XMFROM=$P(XMUID,U,2)
"RTN","XMTDL",141,0)
 I XMBCAST D  Q  ; Broadcast message
"RTN","XMTDL",142,0)
 . D BRODCAST^XMTDL1(XMZ,XMZSUBJ,XMZFROM,XMFROM,.XMK,.XMDEL,XMZPDATE,XMZBSKT,.XMACNT)
"RTN","XMTDL",143,0)
 S I=0
"RTN","XMTDL",144,0)
 S XMUID=XMUID_U_XMTSTAMP
"RTN","XMTDL",145,0)
 F  S I=$O(^XMBPOST("FWD",XMUID,I)) Q:'I  S XMTOLIST=^(I) D
"RTN","XMTDL",146,0)
 . F J=1:1:$L(XMTOLIST,U) D
"RTN","XMTDL",147,0)
 . . S XMTO=$P(XMTOLIST,U,J)
"RTN","XMTDL",148,0)
 . . Q:$O(^XMB(3.7,"M",XMZ,XMTO,""))  ; User already has msg
"RTN","XMTDL",149,0)
 . . Q:'$D(^XMB(3.9,XMZ,1,"C",XMTO))  ; User is not on recipient list (Should never happen
"RTN","XMTDL",150,0)
 . . S XMACNT=XMACNT+1
"RTN","XMTDL",151,0)
 . . D DELIVER^XMTDL2(XMTO,XMZ,XMZSUBJ,XMZFROM,XMFROM,0,$G(XMK(XMTO)),$G(XMDEL(XMTO),XMZPDATE),XMZBSKT)
"RTN","XMTDL",152,0)
 K ^XMBPOST("FWD",XMUID)
"RTN","XMTDL",153,0)
 Q
"RTN","XMTDL1")
0^37^B8005251
"RTN","XMTDL1",1,0)
XMTDL1 ;ISC-SF/GMB-Deliver local mail to mailbox ;06/01/99  14:22
"RTN","XMTDL1",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMTDL1",3,0)
BRODCAST(XMZ,XMZSUBJ,XMZFROM,XMFROM,XMK,XMDEL,XMZPDATE,XMZBSKT,XMACNT) ;
"RTN","XMTDL1",4,0)
 N XMTO,XMREC,XMIA,XMNOFWD
"RTN","XMTDL1",5,0)
 ; Don't forward message if this is FORUM and it was sent to G.EVERYBODY.
"RTN","XMTDL1",6,0)
 S XMNOFWD=$S('$$FORUM^XMXADDRD:0,'$D(^XMB(3.9,XMZ,6,"B","G.EVERYBODY")):0,1:1)
"RTN","XMTDL1",7,0)
 D INIT^XMXADDR
"RTN","XMTDL1",8,0)
 S (XMTO,XMIA)=0
"RTN","XMTDL1",9,0)
 F  S XMTO=$O(^XMB(3.7,XMTO)) Q:'XMTO  D
"RTN","XMTDL1",10,0)
 . Q:$P($G(^VA(200,XMTO,0)),U,3)=""!($P($G(^(.1)),U,2)="")!($P($G(^(201)),U)="")  ; Quit if no access code, or verify code, or primary menu
"RTN","XMTDL1",11,0)
 . Q:$D(^XUSEC("XM NO BROADCASTS",XMTO))  ; Quit if user doesn't want broadcast messages
"RTN","XMTDL1",12,0)
 . S XMACNT=XMACNT+1
"RTN","XMTDL1",13,0)
 . S XMREC=$G(^XMB(3.7,XMTO,0)) Q:XMREC=""
"RTN","XMTDL1",14,0)
 . I $P(XMREC,U,2)=""!XMNOFWD D DELIVER^XMTDL2(XMTO,XMZ,XMZSUBJ,XMZFROM,XMFROM,0,$G(XMK(XMTO)),$G(XMDEL(XMTO),XMZPDATE),XMZBSKT) Q
"RTN","XMTDL1",15,0)
 . N XMERROR,XMFULL
"RTN","XMTDL1",16,0)
 . D REMOTE^XMXADDR1(.5,$P(XMREC,U,2),0,"","",.XMFULL)
"RTN","XMTDL1",17,0)
 . I $D(XMERROR) D DELFWD^XMVVITA(XMTO,$P(XMREC,U,2),XMERROR)
"RTN","XMTDL1",18,0)
 . I '$D(XMERROR),$D(^TMP("XMY",$J,XMFULL)) S ^TMP("XMY",$J,XMFULL,"F")=XMTO
"RTN","XMTDL1",19,0)
 . I $P(XMREC,U,8)!$D(XMERROR)!'$D(^TMP("XMY",$J,$G(XMFULL,"?"))) D DELIVER^XMTDL2(XMTO,XMZ,XMZSUBJ,XMZFROM,XMFROM,0,$G(XMK(XMTO)),$G(XMDEL(XMTO),XMZPDATE),XMZBSKT)
"RTN","XMTDL1",20,0)
 S XMTO=0
"RTN","XMTDL1",21,0)
 F  S XMTO=$O(^TMP("XMY",$J,XMTO)) Q:+XMTO'=XMTO  K ^(XMTO) ; Don't forward to locals
"RTN","XMTDL1",22,0)
 I $D(^TMP("XMY",$J)) D
"RTN","XMTDL1",23,0)
 . N XMINSTR
"RTN","XMTDL1",24,0)
 . S XMINSTR("FWD BY")=""
"RTN","XMTDL1",25,0)
 . D FWD^XMKP(.5,XMZ,.XMINSTR)
"RTN","XMTDL1",26,0)
 D CLEANUP^XMXADDR
"RTN","XMTDL1",27,0)
 Q
"RTN","XMTDL1",28,0)
STATS(XMGROUP,XMQUEUE,XMMCNT,XMRCNT,XMACNT) ;
"RTN","XMTDL1",29,0)
 ; The following global is incremented in STATS^XMKPLQ
"RTN","XMTDL1",30,0)
 ; # messages in queue^# recipients anticipated
"RTN","XMTDL1",31,0)
 N XMSTATS
"RTN","XMTDL1",32,0)
 L +^XMBPOST("QSTATS",XMGROUP,XMQUEUE)
"RTN","XMTDL1",33,0)
 S XMSTATS=^XMBPOST(XMGROUP,XMQUEUE),^(XMQUEUE)=($P(XMSTATS,U)-XMMCNT)_U_($P(XMSTATS,U,2)-XMRCNT)
"RTN","XMTDL1",34,0)
 L -^XMBPOST("QSTATS",XMGROUP,XMQUEUE)
"RTN","XMTDL1",35,0)
 ; The following global is incremented here only.
"RTN","XMTDL1",36,0)
 ; # recipients delivered
"RTN","XMTDL1",37,0)
 L +^XMBPOST("GSTATS",XMGROUP)
"RTN","XMTDL1",38,0)
 S ^(XMGROUP)=$G(^XMBPOST("STATS",XMGROUP))+$G(XMACNT)
"RTN","XMTDL1",39,0)
 L -^XMBPOST("GSTATS",XMGROUP)
"RTN","XMTDL1",40,0)
 Q
"RTN","XMTDL1",41,0)
BADERR(XMERRMSG) ;
"RTN","XMTDL1",42,0)
 D BULL(XMERRMSG)
"RTN","XMTDL1",43,0)
 ;D CHECK^XMKPL  ; Start background filer
"RTN","XMTDL1",44,0)
 ;G H^XUS         ; halt
"RTN","XMTDL1",45,0)
 Q
"RTN","XMTDL1",46,0)
BULL(XMERRMSG) ;
"RTN","XMTDL1",47,0)
 N XMPARM,XMINSTR
"RTN","XMTDL1",48,0)
 S XMINSTR("FROM")=.5
"RTN","XMTDL1",49,0)
 S XMPARM(1)=$P(XMERRMSG," ",1)
"RTN","XMTDL1",50,0)
 S XMPARM(2)=XMERRMSG
"RTN","XMTDL1",51,0)
 S XMPARM(3)="Transmission aborted & will not be attempted again."
"RTN","XMTDL1",52,0)
 D TASKBULL^XMXBULL(.5,"XM_TRANSMISSION_ERROR",.XMPARM,"",.5,.XMINSTR)
"RTN","XMTDL1",53,0)
 Q
"RTN","XMTDL2")
0^260^B29217565
"RTN","XMTDL2",1,0)
XMTDL2 ;ISC-SF/GMB-Deliver local mail to mailbox ;05/27/99  10:16
"RTN","XMTDL2",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMTDL2",3,0)
 ; Replaces ^XMADJF1B (ISC-WASH/CAP)
"RTN","XMTDL2",4,0)
 ; XMTO     Recipient DUZ
"RTN","XMTDL2",5,0)
 ; XMZ      Original XMZ
"RTN","XMTDL2",6,0)
 ; XMZSUBJ  Msg subject
"RTN","XMTDL2",7,0)
 ; XMZFROM  Who sent the original message
"RTN","XMTDL2",8,0)
 ; XMFROM   Who sent the msg or reply, or who forwarded the msg
"RTN","XMTDL2",9,0)
 ; XMREPLY  0=msg is not a reply; 1=msg is a reply
"RTN","XMTDL2",10,0)
 ; XMK      Basket number (or name) to deliver to (as specified by sender XMFROM)
"RTN","XMTDL2",11,0)
 ; XMDEL    Delete Date (as specified by sender XMZFROM)
"RTN","XMTDL2",12,0)
 ; XMKCURR  Basket the msg is currently in
"RTN","XMTDL2",13,0)
DELIVER(XMTO,XMZ,XMZSUBJ,XMZFROM,XMFROM,XMREPLY,XMK,XMDEL,XMZBSKT) ;
"RTN","XMTDL2",14,0)
 N XMKCURR
"RTN","XMTDL2",15,0)
 I +XMTO'>0!'$D(^XMB(3.7,XMTO,2)) Q  ; Do not deliver if invalid mailbox
"RTN","XMTDL2",16,0)
 S XMFROM=+$G(XMFROM),XMREPLY=+$G(XMREPLY),XMK=$G(XMK),XMDEL=+$G(XMDEL),XMZBSKT=$G(XMZBSKT)
"RTN","XMTDL2",17,0)
 I XMTO=.6,XMREPLY Q  ; Do not deliver response to Shared,Mail
"RTN","XMTDL2",18,0)
 S XMKCURR=$O(^XMB(3.7,"M",XMZ,XMTO,0)) ; Get basket it is in
"RTN","XMTDL2",19,0)
 I XMKCURR D  Q  ; Already in a basket (ignore any basket sender may have specified)
"RTN","XMTDL2",20,0)
 . Q:'XMREPLY  ; If this is a reply, continue, else it must be a forwarded msg, so quit.
"RTN","XMTDL2",21,0)
 . I XMKCURR=.5 D  Q  ; Msg is in waste basket
"RTN","XMTDL2",22,0)
 . . D CHEKBSKT(XMTO,.XMK,XMZSUBJ,XMZFROM,XMZBSKT) ; Where should it go?
"RTN","XMTDL2",23,0)
 . . ;D FILTER^XMTDF(XMTO,XMZ,XMZSUBJ,XMZFROM,.XMK) ; Where should it go?
"RTN","XMTDL2",24,0)
 . . Q:XMK=.5
"RTN","XMTDL2",25,0)
 . . D MOVENEW(XMFROM,XMTO,XMK,XMZ) ; Move msg and make it new.
"RTN","XMTDL2",26,0)
 . ; Msg is not in waste basket.  Make the msg new.
"RTN","XMTDL2",27,0)
 . Q:$D(^XMB(3.7,XMTO,"N0",XMKCURR,XMZ))  ; Already new.
"RTN","XMTDL2",28,0)
 . D:XMFROM'=XMTO MAKENEW(XMTO,XMKCURR,XMZ)
"RTN","XMTDL2",29,0)
 ; Not yet in a basket.
"RTN","XMTDL2",30,0)
 ; Reinstated user may not see replies to old msgs which he doesn't already have.
"RTN","XMTDL2",31,0)
 I XMREPLY,$P(^XMB(3.7,XMTO,0),U,7) Q:$$SECRET($P(^(0),U,7),XMZ)
"RTN","XMTDL2",32,0)
 S:$G(XMK)="" XMK=0
"RTN","XMTDL2",33,0)
 I +XMK=XMK D
"RTN","XMTDL2",34,0)
 . D CHEKBSKT(XMTO,.XMK,XMZSUBJ,XMZFROM,XMZBSKT)
"RTN","XMTDL2",35,0)
 E  D
"RTN","XMTDL2",36,0)
 . S XMK=$$NAMEBSKT(XMTO,XMK,"Y")
"RTN","XMTDL2",37,0)
 D ADDNEW($S(XMREPLY:XMFROM,1:XMZFROM),XMTO,XMK,XMZ,XMDEL)
"RTN","XMTDL2",38,0)
 Q
"RTN","XMTDL2",39,0)
CHEKBSKT(XMTO,XMK,XMZSUBJ,XMZFROM,XMZBSKT) ; Basket number (or no basket at all)
"RTN","XMTDL2",40,0)
 N XMREC
"RTN","XMTDL2",41,0)
 S XMREC=$G(^XMB(3.7,XMTO,16))
"RTN","XMTDL2",42,0)
 ; If the message hasn't been sent to a specific basket for this user
"RTN","XMTDL2",43,0)
 ; and the sender specified a delivery basket, and the recipient is
"RTN","XMTDL2",44,0)
 ; OK with that, then use the delivery basket.
"RTN","XMTDL2",45,0)
 ; Note: The IN basket is not considered a 'specific basket'.
"RTN","XMTDL2",46,0)
 I XMK<2,XMZBSKT'="","^^N^"'[(U_$P(XMREC,U,2)_U) S XMK=$$NAMEBSKT(XMTO,XMZBSKT,$P(XMREC,U,2)) Q:XMK
"RTN","XMTDL2",47,0)
 ; If the message hasn't been sent to a specific basket for this user
"RTN","XMTDL2",48,0)
 ; and active filters exist, and filtering is turned on,
"RTN","XMTDL2",49,0)
 ; then filter the message.
"RTN","XMTDL2",50,0)
 I XMK<2,$D(^XMB(3.7,XMTO,15,"AF")),$P(XMREC,U,1)="Y" D FILTER^XMTDF(XMTO,XMZ,XMZSUBJ,XMZFROM,.XMK) Q
"RTN","XMTDL2",51,0)
 ; The message was sent to a specific basket for this user.
"RTN","XMTDL2",52,0)
 I XMK Q:$D(^XMB(3.7,XMTO,2,XMK,0))  ; Quit if the basket XMK exists.
"RTN","XMTDL2",53,0)
 S XMK=1 ; Since the basket doesn't exist, force to the IN basket
"RTN","XMTDL2",54,0)
 Q:$D(^XMB(3.7,XMTO,2,XMK,0))  ; Quit if the IN basket exists.
"RTN","XMTDL2",55,0)
 D MAKEBSKT^XMXBSKT(XMTO,XMK,"IN") ; Create the IN basket
"RTN","XMTDL2",56,0)
 Q
"RTN","XMTDL2",57,0)
NAMEBSKT(XMTO,XMKN,XMZBOK) ; Basket name (not number)
"RTN","XMTDL2",58,0)
 N XMK
"RTN","XMTDL2",59,0)
 S XMK=$O(^XMB(3.7,XMTO,2,"B",XMKN,0))
"RTN","XMTDL2",60,0)
 S:'XMK XMK=$$FIND1^DIC(3.701,","_XMTO_",","X",$$LOW^XLFSTR(XMKN))
"RTN","XMTDL2",61,0)
 I XMK D  Q XMK
"RTN","XMTDL2",62,0)
 . Q:XMZBOK'="S"  ; 'YES' or 'EXISTING ONLY'
"RTN","XMTDL2",63,0)
 . S:$P(^XMB(3.7,XMTO,2,XMK,0),U,3)'="Y" XMK=0  ; 'SELECTED ONLY'
"RTN","XMTDL2",64,0)
 ; Basket not found
"RTN","XMTDL2",65,0)
 Q:XMZBOK'="Y" 0  ; quit if not 'YES'
"RTN","XMTDL2",66,0)
 I XMKN="WASTE" S XMK=.5 D MAKEBSKT^XMXBSKT(XMTO,XMK,XMKN) Q XMK
"RTN","XMTDL2",67,0)
 I XMKN="IN" S XMK=1 D MAKEBSKT^XMXBSKT(XMTO,XMK,XMKN) Q XMK
"RTN","XMTDL2",68,0)
 D MAKEBSKT^XMXBSKT(XMTO,.XMK,XMKN)
"RTN","XMTDL2",69,0)
 Q XMK
"RTN","XMTDL2",70,0)
ADDNEW(XMFROM,XMTO,XMK,XMZ,XMDEL) ;
"RTN","XMTDL2",71,0)
 N XMFDA,XMIENS,XMIEN
"RTN","XMTDL2",72,0)
 S XMIENS="+1,"_XMK_","_XMTO_","
"RTN","XMTDL2",73,0)
 S XMIEN(1)=XMZ
"RTN","XMTDL2",74,0)
 S XMFDA(3.702,XMIENS,.01)=XMZ
"RTN","XMTDL2",75,0)
 L +^XMB(3.7,XMTO) ; Lock Mailbox, put msg in basket, and make new
"RTN","XMTDL2",76,0)
 I XMK'=.5 D
"RTN","XMTDL2",77,0)
 . I XMFROM'=XMTO D
"RTN","XMTDL2",78,0)
 . . S XMFDA(3.702,XMIENS,3)=1  ; new flag
"RTN","XMTDL2",79,0)
 . . D INCRNEW^XMXUTIL(XMTO,XMK)  ; New counts
"RTN","XMTDL2",80,0)
 . I XMDEL S XMFDA(3.702,XMIENS,5)=XMDEL  ; vapor date
"RTN","XMTDL2",81,0)
 ; Basket sequence number (XMKZ), and priority & new xrefs are handled by FM triggers.
"RTN","XMTDL2",82,0)
 D UPDATE^DIE("","XMFDA","XMIEN")
"RTN","XMTDL2",83,0)
 L -^XMB(3.7,XMTO)
"RTN","XMTDL2",84,0)
 Q
"RTN","XMTDL2",85,0)
MAKENEW(XMTO,XMK,XMZ) ;
"RTN","XMTDL2",86,0)
 ; We ignore any "vapor" date here because this is an existing msg
"RTN","XMTDL2",87,0)
 N XMFDA,XMREC
"RTN","XMTDL2",88,0)
 S XMREC=$G(^XMB(3.7,XMTO,2,XMK,1,XMZ,0))
"RTN","XMTDL2",89,0)
 I XMREC="" D  Q:XMREC=""
"RTN","XMTDL2",90,0)
 . ; Message entry should have been there, but it wasn't.  Add it.
"RTN","XMTDL2",91,0)
 . D FIXBSKT(XMTO,XMK,XMZ)
"RTN","XMTDL2",92,0)
 . S XMREC=$G(^XMB(3.7,XMTO,2,XMK,1,XMZ,0)) Q:XMREC'=""
"RTN","XMTDL2",93,0)
 . D ADDNEW(0,XMTO,XMK,XMZ,0)
"RTN","XMTDL2",94,0)
 S XMFDA(3.702,XMZ_","_XMK_","_XMTO_",",3)=1  ; new flag
"RTN","XMTDL2",95,0)
 ; Delete 'automatic delete date' if it was set by the system
"RTN","XMTDL2",96,0)
 ; (during IN BASKET PURGE).
"RTN","XMTDL2",97,0)
 S:$P(XMREC,U,7) XMFDA(3.702,XMZ_","_XMK_","_XMTO_",",5)="@"
"RTN","XMTDL2",98,0)
 L +^XMB(3.7,XMTO) ; Lock Mailbox
"RTN","XMTDL2",99,0)
 ; Priority & new xrefs are handled by FM triggers.
"RTN","XMTDL2",100,0)
 D FILE^DIE("","XMFDA")
"RTN","XMTDL2",101,0)
 D INCRNEW^XMXUTIL(XMTO,XMK)  ; New counts
"RTN","XMTDL2",102,0)
 L -^XMB(3.7,XMTO)
"RTN","XMTDL2",103,0)
 Q
"RTN","XMTDL2",104,0)
SECRET(XMDATE,XMZ) ;
"RTN","XMTDL2",105,0)
 ; Don't need to check to see if the user already has the msg, because
"RTN","XMTDL2",106,0)
 ; at this point, we already know that he doesn't.
"RTN","XMTDL2",107,0)
 N XMCRE8
"RTN","XMTDL2",108,0)
 S XMCRE8=$P($G(^XMB(3.9,XMZ,.6)),U)
"RTN","XMTDL2",109,0)
 Q $S('XMCRE8:0,XMDATE>XMCRE8:1,1:0)  ; 1 means user may NOT see the msg.
"RTN","XMTDL2",110,0)
MOVENEW(XMFROM,XMTO,XMK,XMZ) ; Move msg from WASTE bskt and make new
"RTN","XMTDL2",111,0)
 N XMFDA,XMREC,XMIENS,XMIEN
"RTN","XMTDL2",112,0)
 S XMREC=$G(^XMB(3.7,XMTO,2,.5,1,XMZ,0))
"RTN","XMTDL2",113,0)
 I XMREC="" D  Q:XMREC=""
"RTN","XMTDL2",114,0)
 . ; Message entry should have been there, but it wasn't.
"RTN","XMTDL2",115,0)
 . D FIXBSKT(XMTO,.5,XMZ)
"RTN","XMTDL2",116,0)
 . S XMREC=$G(^XMB(3.7,XMTO,2,.5,1,XMZ,0)) Q:XMREC'=""
"RTN","XMTDL2",117,0)
 . D ADDNEW(XMFROM,XMTO,XMK,XMZ,0)
"RTN","XMTDL2",118,0)
 S XMIENS="+1,"_XMK_","_XMTO_","
"RTN","XMTDL2",119,0)
 S XMIEN(1)=XMZ
"RTN","XMTDL2",120,0)
 S XMFDA(3.702,XMIENS,.01)=XMZ
"RTN","XMTDL2",121,0)
 S:XMFROM'=XMTO XMFDA(3.702,XMIENS,3)=1 ; new flag
"RTN","XMTDL2",122,0)
 S:$P(XMREC,U,4) XMFDA(3.702,XMIENS,4)=$P(XMREC,U,4) ; date last accessed
"RTN","XMTDL2",123,0)
 I '$P(XMREC,U,7),$P(XMREC,U,5) S XMFDA(3.702,XMIENS,5)=$P(XMREC,U,5) ; vapor date set by user, not system
"RTN","XMTDL2",124,0)
 L +^XMB(3.7,XMTO)
"RTN","XMTDL2",125,0)
 D UPDATE^DIE("","XMFDA","XMIEN")
"RTN","XMTDL2",126,0)
 D:XMFROM'=XMTO INCRNEW^XMXUTIL(XMTO,XMK) ; Increment new counts
"RTN","XMTDL2",127,0)
 K XMFDA
"RTN","XMTDL2",128,0)
 S XMFDA(3.702,XMZ_",.5,"_XMTO_",",.01)="@" ; delete msg
"RTN","XMTDL2",129,0)
 D FILE^DIE("","XMFDA")
"RTN","XMTDL2",130,0)
 L -^XMB(3.7,XMTO)
"RTN","XMTDL2",131,0)
 Q
"RTN","XMTDL2",132,0)
FIXBSKT(XMTO,XMK,XMZ) ; Basket integrity check
"RTN","XMTDL2",133,0)
 N XMERROR ; (set in ^XMUT4)
"RTN","XMTDL2",134,0)
 L +^XMB(3.7,XMTO,2,XMK)
"RTN","XMTDL2",135,0)
 K ^XMB(3.7,"M",XMZ,XMTO,XMK) ; This xref is wrong.
"RTN","XMTDL2",136,0)
 D BSKT^XMUT4(XMTO,XMK)
"RTN","XMTDL2",137,0)
 L -^XMB(3.7,XMTO,2,XMK)
"RTN","XMTDL2",138,0)
 Q
"RTN","XMTDO")
0^232^B4036426
"RTN","XMTDO",1,0)
XMTDO ;ISC-SF/GMB-Deliver other (server,device) ;06/01/99  14:20
"RTN","XMTDO",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMTDO",3,0)
 ; Replaces ZSER^, ZDEV^XMS1 (ISC-WASH/THM/CAP)
"RTN","XMTDO",4,0)
SERVER ; S.server TASKMAN ENTRY
"RTN","XMTDO",5,0)
 ; Variables supplied by TaskMan:  XMZ,XMSERVER,XMSVIENS
"RTN","XMTDO",6,0)
 ; XMSERVER  Name of the server option (includes leading S.)
"RTN","XMTDO",7,0)
 N XMZREC,XMFROM,XMSERR,XMSUBJ
"RTN","XMTDO",8,0)
 D DUZ^XUP(.5)
"RTN","XMTDO",9,0)
 S XMZREC=$G(^XMB(3.9,XMZ,0)) I XMZREC="" D  Q
"RTN","XMTDO",10,0)
 . N XMPARM,XMINSTR
"RTN","XMTDO",11,0)
 . S XMINSTR("FROM")=.5
"RTN","XMTDO",12,0)
 . S XMPARM(1)=XMSERVER
"RTN","XMTDO",13,0)
 . S XMPARM(2)=ZTSK
"RTN","XMTDO",14,0)
 . D TASKBULL^XMXBULL(.5,"XM SEND ERR SERVER MSG",.XMPARM,"",.5,.XMINSTR)
"RTN","XMTDO",15,0)
 S XMSUBJ=$P(XMZREC,U,1)
"RTN","XMTDO",16,0)
 S:XMSUBJ["~U~" XMSUB=$$DECODEUP^XMXUTIL1(XMSUBJ)
"RTN","XMTDO",17,0)
 S XMFROM=$P(XMZREC,U,2)
"RTN","XMTDO",18,0)
 S:XMFROM["@" XMFROM=$$REPLYTO1^XMXREPLY(XMZ)
"RTN","XMTDO",19,0)
 D SETSTAT(XMSVIENS,"Server hand off ready")
"RTN","XMTDO",20,0)
 D DOSERV($E(XMSERVER,3,99),XMZ,XMFROM,XMSUBJ,.XMSERR)
"RTN","XMTDO",21,0)
 D SETSTAT(XMSVIENS,$S($D(XMSERR):XMSERR,1:"Served (hand off done)"))
"RTN","XMTDO",22,0)
 S ZTREQ="@"
"RTN","XMTDO",23,0)
 Q
"RTN","XMTDO",24,0)
DOSERV(XMXX,XMZ,XMFROM,XMSUBJ,XQSRVOK) ;
"RTN","XMTDO",25,0)
 N XMCHAN,X,XMSEN,XMREC,XMOPEN,XMCLOSE,XMSVIENS
"RTN","XMTDO",26,0)
 S XMCHAN="SERVER"
"RTN","XMTDO",27,0)
 D GET^XML
"RTN","XMTDO",28,0)
 S X=XMXX_U_XMZ_U_XMFROM_U_XMSUBJ
"RTN","XMTDO",29,0)
 D ^XQSRV
"RTN","XMTDO",30,0)
 ; ^XQSRV1 calls SETSB^XMA1C to put the msg in the postmaster's bskt.
"RTN","XMTDO",31,0)
 ; Instead, that line could read:
"RTN","XMTDO",32,0)
 ; D:XQSRV PUTSERV^XMXMSGS1(XQSOP,XQMSG)
"RTN","XMTDO",33,0)
 Q
"RTN","XMTDO",34,0)
DEVICE ; D.device TASKMAN ENTRY
"RTN","XMTDO",35,0)
 ; Variables supplied by TaskMan:  XMDUZ,XMZ,XMDVIENS
"RTN","XMTDO",36,0)
 ; TaskMan opens and closes the device.
"RTN","XMTDO",37,0)
 N XMK,XMKN,XMRESPS,XMPTR,XMWHICH,XMRECIPS,XMPRTHDR,XMV
"RTN","XMTDO",38,0)
 I '$G(DUZ) D DUZ^XUP(XMDUZ)
"RTN","XMTDO",39,0)
 D INIT^XMVVITAE
"RTN","XMTDO",40,0)
 S XMK=$O(^XMB(3.7,"M",XMZ,XMDUZ,0))
"RTN","XMTDO",41,0)
 S XMKN=$S('XMK:"* N/A *",1:$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1))
"RTN","XMTDO",42,0)
 D RESPONSE^XMJMP(XMDUZ,XMZ,.XMRESPS,.XMPTR)
"RTN","XMTDO",43,0)
 S XMRECIPS=0,XMPRTHDR=1,XMWHICH="0-"_XMRESPS
"RTN","XMTDO",44,0)
 D PRINTMSG^XMJMP
"RTN","XMTDO",45,0)
 D SETSTAT(XMDVIENS,"Printed")
"RTN","XMTDO",46,0)
 S ZTREQ="@"
"RTN","XMTDO",47,0)
 Q
"RTN","XMTDO",48,0)
SETSTAT(XMIENS,XMSTATUS) ; Record Time/Status in msg file
"RTN","XMTDO",49,0)
 N XMFDA
"RTN","XMTDO",50,0)
 S XMFDA(3.91,XMIENS,2)=$$NOW^XLFDT
"RTN","XMTDO",51,0)
 S XMFDA(3.91,XMIENS,5)=XMSTATUS
"RTN","XMTDO",52,0)
 D FILE^DIE("","XMFDA")
"RTN","XMTDO",53,0)
 Q
"RTN","XMTDT")
0^208^B13047415
"RTN","XMTDT",1,0)
XMTDT ;ISC-SF/GMB-Deliver later'd msgs & delete inactive msgs ;04/10/99  10:44
"RTN","XMTDT",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMTDT",3,0)
 ; Replaces ^XMADJ999,LATER^XMAD2 (ISC-WASH/CAP)
"RTN","XMTDT",4,0)
GO ;
"RTN","XMTDT",5,0)
 N XMWAIT
"RTN","XMTDT",6,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","XMTDT",7,0)
 L +^XMBPOST("POST_Tickler"):1 E  Q
"RTN","XMTDT",8,0)
 S %=$$PSET^%ZTLOAD(ZTSK)
"RTN","XMTDT",9,0)
 F  Q:$P($G(^XMB(1,1,0)),U,16)  D
"RTN","XMTDT",10,0)
 . D LATERNEW
"RTN","XMTDT",11,0)
 . D LATERFWD
"RTN","XMTDT",12,0)
 . D PURGEOLD
"RTN","XMTDT",13,0)
 . S XMWAIT=$$TSTAMP^XMXUTIL1      ; Why can't we just H 60?
"RTN","XMTDT",14,0)
 . F  D  Q:$$TSTAMP^XMXUTIL1-XMWAIT>60
"RTN","XMTDT",15,0)
 . . H XMHANG
"RTN","XMTDT",16,0)
 L -^XMBPOST("POST_Tickler")
"RTN","XMTDT",17,0)
 D PCLEAR^%ZTLOAD(ZTSK)
"RTN","XMTDT",18,0)
 Q
"RTN","XMTDT",19,0)
LATERNEW ; This routine takes care of 'new'ing messages which the user
"RTN","XMTDT",20,0)
 ; had previously 'later'ed for himself.
"RTN","XMTDT",21,0)
 N XMNOW,XMLATER,DIK,XMDUZ,XMZ,DA,XMZREC,XMINACT
"RTN","XMTDT",22,0)
 S XMNOW=$$NOW^XLFDT
"RTN","XMTDT",23,0)
 S XMLATER=0
"RTN","XMTDT",24,0)
 F  S XMLATER=$O(^XMB(3.73,"AB",XMLATER)) Q:XMLATER'>0!(XMLATER>XMNOW)  D
"RTN","XMTDT",25,0)
 . S DIK="^XMB(3.73,"
"RTN","XMTDT",26,0)
 . S XMDUZ=0
"RTN","XMTDT",27,0)
 . F  S XMDUZ=$O(^XMB(3.73,"AB",XMLATER,XMDUZ)) Q:'XMDUZ  D
"RTN","XMTDT",28,0)
 . . S XMINACT=$S($P($G(^VA(200,XMDUZ,0)),U,3)="":1,$P($G(^(.1)),U,2)="":1,$P($G(^(201)),U)="":1,1:0)  ; user is inactive if no access code, or verify code, or primary menu
"RTN","XMTDT",29,0)
 . . S XMZ=0
"RTN","XMTDT",30,0)
 . . F  S XMZ=$O(^XMB(3.73,"AB",XMLATER,XMDUZ,XMZ)) Q:'XMZ  D
"RTN","XMTDT",31,0)
 . . . S DA=$O(^XMB(3.73,"AB",XMLATER,XMDUZ,XMZ,0)) Q:'DA
"RTN","XMTDT",32,0)
 . . . I '$D(^XMB(3.73,DA,0)) D  Q  ; *** This should not be necessary
"RTN","XMTDT",33,0)
 . . . . K ^XMB(3.73,"AB",XMLATER,XMDUZ,XMZ,DA)
"RTN","XMTDT",34,0)
 . . . . K ^XMB(3.73,"AC",XMZ,XMDUZ,DA)
"RTN","XMTDT",35,0)
 . . . . K ^XMB(3.73,"C",XMDUZ,DA)
"RTN","XMTDT",36,0)
 . . . D ^DIK
"RTN","XMTDT",37,0)
 . . . Q:XMINACT
"RTN","XMTDT",38,0)
 . . . S XMZREC=$G(^XMB(3.9,XMZ,0)) Q:XMZREC=""
"RTN","XMTDT",39,0)
 . . . D DELIVER^XMTDL2(XMDUZ,XMZ,$P(XMZREC,U,1),$P(XMZREC,U,2),0,1)
"RTN","XMTDT",40,0)
 Q
"RTN","XMTDT",41,0)
LATERFWD ; This routine takes care of forwarding messages which a user
"RTN","XMTDT",42,0)
 ; had previously scheduled for 'later' delivery to other users.
"RTN","XMTDT",43,0)
 N XMDUZ,XMNOW,XMLATER,DIK,XMIEN,XMZ,DA,XMREC,XMV,XMINSTR,XMTO
"RTN","XMTDT",44,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMTDT",45,0)
 S XMINSTR("FWD BY XMDUZ")=""
"RTN","XMTDT",46,0)
 S XMNOW=$$NOW^XLFDT
"RTN","XMTDT",47,0)
 S XMLATER=0
"RTN","XMTDT",48,0)
 F  S XMLATER=$O(^XMB(3.9,"AL",XMLATER)) Q:XMLATER'>0!(XMLATER>XMNOW)  D
"RTN","XMTDT",49,0)
 . S XMZ=0
"RTN","XMTDT",50,0)
 . F  S XMZ=$O(^XMB(3.9,"AL",XMLATER,XMZ)) Q:'XMZ  D
"RTN","XMTDT",51,0)
 . . S DA(1)=XMZ
"RTN","XMTDT",52,0)
 . . S DIK="^XMB(3.9,"_DA(1)_",7,"
"RTN","XMTDT",53,0)
 . . S XMIEN=0
"RTN","XMTDT",54,0)
 . . F  S XMIEN=$O(^XMB(3.9,"AL",XMLATER,XMZ,XMIEN)) Q:'XMIEN  D
"RTN","XMTDT",55,0)
 . . . S XMREC=$G(^XMB(3.9,XMZ,7,XMIEN,0))
"RTN","XMTDT",56,0)
 . . . I XMREC="" K ^XMB(3.9,"AL",XMLATER,XMZ,XMIEN) Q
"RTN","XMTDT",57,0)
 . . . S XMDUZ=$P(XMREC,U,3)
"RTN","XMTDT",58,0)
 . . . S XMTO=$P(XMREC,U,1)
"RTN","XMTDT",59,0)
 . . . I XMTO[" [Private Mail Group]" S XMTO=$P(XMTO," [Private Mail Group]",1) ; (set in ^XMXADDRG)
"RTN","XMTDT",60,0)
 . . . I $P(XMREC,U,2)'="" S XMTO=$P(XMREC,U,2)_":"_XMTO
"RTN","XMTDT",61,0)
 . . . D INIT^XMXADDR
"RTN","XMTDT",62,0)
 . . . D CHKADDR^XMXADDR(XMDUZ,XMTO) K:$D(XMERR) XMERR,^TMP("XMERR",$J)
"RTN","XMTDT",63,0)
 . . . S XMINSTR("FWD BY")=$P(XMREC,U,4)
"RTN","XMTDT",64,0)
 . . . D:$D(^TMP("XMY",$J)) FWD^XMKP(XMDUZ,XMZ,.XMINSTR)
"RTN","XMTDT",65,0)
 . . . D CLEANUP^XMXADDR
"RTN","XMTDT",66,0)
 . . . S DA=XMIEN
"RTN","XMTDT",67,0)
 . . . D ^DIK
"RTN","XMTDT",68,0)
 Q
"RTN","XMTDT",69,0)
PURGEOLD ; This routine deletes msgs marked for automatic deletion,
"RTN","XMTDT",70,0)
 ; whether marked by the user, or marked by the 'in basket purge'
"RTN","XMTDT",71,0)
 ; because they hadn't been accessed for a certain number of days.
"RTN","XMTDT",72,0)
 ; Replaces ^XMAI0 (ISC-WASH/CAP/RJ)
"RTN","XMTDT",73,0)
 ; XMDDATE  Message delete date
"RTN","XMTDT",74,0)
 N XMDDATE,XMDUZ,XMK,XMZ,XMNOW
"RTN","XMTDT",75,0)
 S XMNOW=$$NOW^XLFDT
"RTN","XMTDT",76,0)
 S (XMDDATE,XMDUZ,XMK,XMZ)=""
"RTN","XMTDT",77,0)
 F  S XMDDATE=$O(^XMB(3.7,"AC",XMDDATE)) Q:XMDDATE=""!(XMDDATE>XMNOW)  D
"RTN","XMTDT",78,0)
 . F  S XMDUZ=$O(^XMB(3.7,"AC",XMDDATE,XMDUZ)) Q:XMDUZ=""  D
"RTN","XMTDT",79,0)
 . . F  S XMK=$O(^XMB(3.7,"AC",XMDDATE,XMDUZ,XMK)) Q:XMK=""  D
"RTN","XMTDT",80,0)
 . . . F  S XMZ=$O(^XMB(3.7,"AC",XMDDATE,XMDUZ,XMK,XMZ)) Q:XMZ=""  D
"RTN","XMTDT",81,0)
 . . . . I $D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMTDT",82,0)
 . . . . K ^XMB(3.7,"AC",XMDDATE,XMDUZ,XMK,XMZ)
"RTN","XMTDT",83,0)
 Q
"RTN","XMUDNC")
0^258^B9462227
"RTN","XMUDNC",1,0)
XMUDNC ;SFISC/GMB - Domain Name Change ;02/03/99  08:33
"RTN","XMUDNC",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMUDNC",3,0)
 ; A domain name change happens in two steps, in two patches:
"RTN","XMUDNC",4,0)
 ; 1. The first patch adds the new name as a synonym to the site's
"RTN","XMUDNC",5,0)
 ;    DOMAIN file entry at all sites.  (Entry SYNONYM)
"RTN","XMUDNC",6,0)
 ; 2. When all sites have added the synonym, the second patch switches
"RTN","XMUDNC",7,0)
 ;    the names in the DOMAIN file at all sites.  The synonym becomes
"RTN","XMUDNC",8,0)
 ;    the domain name, and old domain name becomes the synonym.
"RTN","XMUDNC",9,0)
 ;    The domain name is changed in each TCP/IP script, too.
"RTN","XMUDNC",10,0)
 ;    The site's name is changed in file 4.3 MAILMAN SITE PARAMETERS.
"RTN","XMUDNC",11,0)
 ;    (Entry CHANGE)
"RTN","XMUDNC",12,0)
SYNONYM ;
"RTN","XMUDNC",13,0)
 D BMES^XPDUTL("Add <new site name> as synonym for <current site name> in DOMAIN file.")
"RTN","XMUDNC",14,0)
 N XMB,XMI,XMDOM,XMSUBDOM,XMSYN
"RTN","XMUDNC",15,0)
 ;D INIT(XMLINE)
"RTN","XMUDNC",16,0)
 S (XMB,XMI)=""
"RTN","XMUDNC",17,0)
 F  S XMB=$O(^DIC(4.2,"B",XMB)) Q:XMB=""  D
"RTN","XMUDNC",18,0)
 . F  S XMI=$O(^DIC(4.2,"B",XMB,XMI)) Q:XMI=""  D
"RTN","XMUDNC",19,0)
 . . N DIC,X,Y
"RTN","XMUDNC",20,0)
 . . S (X,XMDOM)=$P(^DIC(4.2,XMI,0),U,1)
"RTN","XMUDNC",21,0)
 . . S XMSUBDOM=""
"RTN","XMUDNC",22,0)
 . . S DIC="^DOPT(""XMSYN"",$J,"
"RTN","XMUDNC",23,0)
 . . S DIC(0)="XZ"
"RTN","XMUDNC",24,0)
 . . F  D ^DIC Q:Y>0!($L(X,".")<4)  D
"RTN","XMUDNC",25,0)
 . . . S XMSUBDOM=XMSUBDOM_$P(X,".")_"."
"RTN","XMUDNC",26,0)
 . . . S X=$P(X,".",2,99)
"RTN","XMUDNC",27,0)
 . . Q:Y<0  ; Quit if (sub) domain is not in the table
"RTN","XMUDNC",28,0)
 . . D BMES^XPDUTL("Domain: "_XMDOM)
"RTN","XMUDNC",29,0)
 . . S XMSYN=$P(Y(0),U,2)
"RTN","XMUDNC",30,0)
 . . I XMSYN="" S XMSYN=$P(XMDOM,".",1,$L(XMDOM,".")-2)_".MED.VA.GOV"
"RTN","XMUDNC",31,0)
 . . E  S XMSYN=XMSUBDOM_XMSYN
"RTN","XMUDNC",32,0)
 . . D CHKSYN(XMI,XMSYN)
"RTN","XMUDNC",33,0)
 K ^DOPT("XMSYN",$J)
"RTN","XMUDNC",34,0)
 Q
"RTN","XMUDNC",35,0)
INIT(XMENTRY) ; Load table into global
"RTN","XMUDNC",36,0)
 ; XMENTRY="T+I^XMYPOSTA"
"RTN","XMUDNC",37,0)
 N DIK,I,X
"RTN","XMUDNC",38,0)
 K ^DOPT("XMSYN",$J)
"RTN","XMUDNC",39,0)
 S DIK="^DOPT(""XMSYN"",$J,"
"RTN","XMUDNC",40,0)
 S ^DOPT("XMSYN",$J,0)="Domain Synonyms^1N^"
"RTN","XMUDNC",41,0)
 F I=1:1 S X=$T(@XMENTRY) Q:X=" ;;"  S ^DOPT("XMSYN",$J,I,0)=$E(X,4,255)
"RTN","XMUDNC",42,0)
 D IXALL^DIK
"RTN","XMUDNC",43,0)
 Q
"RTN","XMUDNC",44,0)
CHKSYN(XMDIEN,XMSYN) ;
"RTN","XMUDNC",45,0)
 N XMSIEN
"RTN","XMUDNC",46,0)
 D MES^XPDUTL("Lookup Synonym: "_XMSYN)
"RTN","XMUDNC",47,0)
 S XMSIEN=$$FIND1^DIC(4.2,"","MQX",XMSYN,"B^C")
"RTN","XMUDNC",48,0)
 I $D(DIERR) D  Q
"RTN","XMUDNC",49,0)
 . N XMI
"RTN","XMUDNC",50,0)
 . D MES^XPDUTL("*** Error on look up!")
"RTN","XMUDNC",51,0)
 . D MES^XPDUTL("*** Usually means more than one occurence.")
"RTN","XMUDNC",52,0)
 . I $D(^DIC(4.2,"B",XMSYN)) D MES^XPDUTL("*** Synonym is also a domain!")
"RTN","XMUDNC",53,0)
 . S XMI=0
"RTN","XMUDNC",54,0)
 . F  S XMI=$O(^DIC(4.2,"C",XMSYN,XMI)) Q:'XMI  D
"RTN","XMUDNC",55,0)
 . . D MES^XPDUTL("*** Synonym is for domain IEN "_XMI_", name "_$P(^DIC(4.2,XMI,0),U,1))
"RTN","XMUDNC",56,0)
 . D MES^XPDUTL("*** No action taken.  Please investigate and fix.")
"RTN","XMUDNC",57,0)
 I XMSIEN=XMDIEN D MES^XPDUTL("Already there.") Q
"RTN","XMUDNC",58,0)
 I XMSIEN D  Q
"RTN","XMUDNC",59,0)
 . I $D(^DIC(4.2,"B",XMSYN)) D MES^XPDUTL("*** Synonym is also a domain!")
"RTN","XMUDNC",60,0)
 . E  D MES^XPDUTL("*** Synonym is for domain IEN "_XMSIEN_", name "_$P(^DIC(4.2,XMSIEN,0),U,1))
"RTN","XMUDNC",61,0)
 . D MES^XPDUTL("*** No action taken.  Please investigate and fix.")
"RTN","XMUDNC",62,0)
 D MES^XPDUTL("Not found.  Adding it.")
"RTN","XMUDNC",63,0)
 S XMFDA(4.23,"+1,"_XMDIEN_",",.01)=XMSYN
"RTN","XMUDNC",64,0)
 D UPDATE^DIE("","XMFDA")
"RTN","XMUDNC",65,0)
 I $D(DIERR) D MES^XPDUTL("*** Error adding it!")
"RTN","XMUDNC",66,0)
 Q
"RTN","XMUDNC",67,0)
T ;;site.va.gov^site.med.va.gov
"RTN","XMUDNC",68,0)
 ;;ISC-SF.VA.GOV^ISC-SF.MED.VA.GOV
"RTN","XMUDNC",69,0)
 ;;
"RTN","XMUPIN")
0^78^B37656837
"RTN","XMUPIN",1,0)
XMUPIN ;ISC-SF/GMB-IN Basket Purge ;06/15/99  10:35
"RTN","XMUPIN",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMUPIN",3,0)
 ; Replaces ^XMAI,^XMAI0,^XMAI1 (ISC-WASH/CAP)
"RTN","XMUPIN",4,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMUPIN",5,0)
 ; ENTER  XMMGR-IN-BASKET-PURGE
"RTN","XMUPIN",6,0)
ENTER ;
"RTN","XMUPIN",7,0)
 ; XMIDAYS  If msg hasn't been read for this many days, flag for deletion
"RTN","XMUPIN",8,0)
 ; XMDDAYS  If flagged msg hasn't been read after this many days, delete it
"RTN","XMUPIN",9,0)
 N XMIDAYS,XMDDAYS,XMKALL,XMEXEMPT,XMABORT,XMTEST
"RTN","XMUPIN",10,0)
 D INIT(.XMDUZ,.XMTEST,.XMDDAYS,.XMIDAYS,.XMKALL,.XMABORT) Q:XMABORT
"RTN","XMUPIN",11,0)
 D PROCESS(XMTEST,XMDDAYS,XMIDAYS,XMKALL,.XMEXEMPT)
"RTN","XMUPIN",12,0)
 Q
"RTN","XMUPIN",13,0)
TEST ;
"RTN","XMUPIN",14,0)
 N XMIDAYS,XMDDAYS,XMKALL,XMEXEMPT,XMABORT,XMTEST
"RTN","XMUPIN",15,0)
 S XMTEST=1
"RTN","XMUPIN",16,0)
 D INIT(.XMDUZ,.XMTEST,.XMDDAYS,.XMIDAYS,.XMKALL,.XMABORT) Q:XMABORT
"RTN","XMUPIN",17,0)
 D PROCESS(XMTEST,XMDDAYS,XMIDAYS,XMKALL,.XMEXEMPT)
"RTN","XMUPIN",18,0)
 Q
"RTN","XMUPIN",19,0)
INIT(XMDUZ,XMTEST,XMDDAYS,XMIDAYS,XMKALL,XMABORT) ;
"RTN","XMUPIN",20,0)
 I '$D(DUZ) W *7,!!!,"<<<< Who are you ? (NO DUZ) >>>>",!! G H^XUS
"RTN","XMUPIN",21,0)
 I '$D(XMDUZ) S XMDUZ=.5
"RTN","XMUPIN",22,0)
 D DT^DICRW ; Set up required FM variables
"RTN","XMUPIN",23,0)
 S:'$D(XMTEST) XMTEST=0
"RTN","XMUPIN",24,0)
 S XMDDAYS=30,XMABORT=0
"RTN","XMUPIN",25,0)
 S XMIDAYS=+$P($G(^XMB(1,1,0)),U,9)
"RTN","XMUPIN",26,0)
 S:'XMIDAYS XMIDAYS=30
"RTN","XMUPIN",27,0)
 S XMKALL=+$P($G(^XMB(1,1,.15)),U)
"RTN","XMUPIN",28,0)
 Q:$D(ZTQUEUED)
"RTN","XMUPIN",29,0)
 N DIR,Y,DIRUT
"RTN","XMUPIN",30,0)
 W !!,"This process cleans out old messages from 'IN' baskets."
"RTN","XMUPIN",31,0)
 W !,"You may set the number of days messages will be retained"
"RTN","XMUPIN",32,0)
 W !,"by this routine in the MAILMAN SITE PARAMETERS file (field 10)",!
"RTN","XMUPIN",33,0)
 W !,"'IN' Basket messages that are not 'NEW' and have NOT been READ for "
"RTN","XMUPIN",34,0)
 W !,XMIDAYS," days are marked for automatic deletion.  Messages so marked"
"RTN","XMUPIN",35,0)
 W !,"that have not been read nor saved into another Basket within ",XMDDAYS
"RTN","XMUPIN",36,0)
 W !,"days will be deleted automatically and completely from user's Baskets."
"RTN","XMUPIN",37,0)
 W !!,"The deletion is NOT to the WASTE basket.  It is complete!"
"RTN","XMUPIN",38,0)
 W !,"Each user will receive a message listing messages that are marked"
"RTN","XMUPIN",39,0)
 W !,"for deletion.  The ",XMDDAYS," day grace period allows users to receive"
"RTN","XMUPIN",40,0)
 W !,"this message and have time to prevent messages they want to keep from"
"RTN","XMUPIN",41,0)
 W !,"being deleted from their Mail Baskets."
"RTN","XMUPIN",42,0)
 W !!,"Even then many of the messages may still be recalled via the"
"RTN","XMUPIN",43,0)
 W !,"search process that can be invoked to search for messages that"
"RTN","XMUPIN",44,0)
 W !,"the user is a recipient of.  As long as the 'AUTOPURGE' has not been run"
"RTN","XMUPIN",45,0)
 W !,"or another user has kept a copy, messages can be recovered.",!
"RTN","XMUPIN",46,0)
 S DIR("A")="This may take some time.  Do you wish to continue"
"RTN","XMUPIN",47,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("??")="XM-IN-BASKET-PURGE"
"RTN","XMUPIN",48,0)
 D ^DIR I $D(DIRUT)!'Y S XMABORT=1 Q
"RTN","XMUPIN",49,0)
 W !!,"Compiling lists of messages to PURGE in ",XMDDAYS," days from "_$S(XMKALL:"*all* baskets",1:"user's IN Baskets")
"RTN","XMUPIN",50,0)
 Q
"RTN","XMUPIN",51,0)
PROCESS(XMTEST,XMDDAYS,XMIDAYS,XMKALL,XMEXEMPT) ;
"RTN","XMUPIN",52,0)
 ; XMDDATE  Deletion date for inactive messages (FM format)
"RTN","XMUPIN",53,0)
 ; XMDDATEX Deletion date for inactive messages (external format)
"RTN","XMUPIN",54,0)
 ; XMIDATE  Date beyond which message has had no activity (and thus
"RTN","XMUPIN",55,0)
 ;          becomes candidate for deletion).
"RTN","XMUPIN",56,0)
 ; XMKALL   1=all baskets; 0=IN basket only
"RTN","XMUPIN",57,0)
 ; XMEXEMPT Users exempt from purge (":duz1:duz2:...:duzn:")
"RTN","XMUPIN",58,0)
 N XMDDATE,XMDDATEX,XMIDATE,XMUSER,XMK,XMI,XMLEN,XMLEFT,XMHDR
"RTN","XMUPIN",59,0)
 S XMLEFT=79
"RTN","XMUPIN",60,0)
 S XMLEN("XMZ")=$L($O(^XMB(3.9,":"),-1))+2
"RTN","XMUPIN",61,0)
 S XMLEFT=XMLEFT-XMLEN("XMZ")-24
"RTN","XMUPIN",62,0)
 S XMLEN("SUBJ")=XMLEFT\2
"RTN","XMUPIN",63,0)
 S XMLEN("FROM")=XMLEFT-XMLEN("SUBJ")
"RTN","XMUPIN",64,0)
 S XMHDR(1)=$$LJ^XLFSTR("Msg ID",XMLEN("XMZ")+1)_$$LJ^XLFSTR("Date      Subject",XMLEN("SUBJ")+12)_$$LJ^XLFSTR($$EZBLD^DIALOG(34006),XMLEN("FROM")+2)_"Last Read"
"RTN","XMUPIN",65,0)
 S XMHDR(2)=$$REPEAT^XLFSTR("-",XMLEN("XMZ"))_" "_$$REPEAT^XLFSTR("-",9)_" "_$$REPEAT^XLFSTR("-",XMLEN("SUBJ"))_"  "_$$REPEAT^XLFSTR("-",XMLEN("FROM"))_"  "_$$REPEAT^XLFSTR("-",9)
"RTN","XMUPIN",66,0)
 S XMDDATE=$$FMADD^XLFDT(DT,30)
"RTN","XMUPIN",67,0)
 S XMDDATEX=$$MMDT^XMXUTIL1(XMDDATE)
"RTN","XMUPIN",68,0)
 S XMIDATE=$$FMADD^XLFDT(DT,-XMIDAYS)
"RTN","XMUPIN",69,0)
 S XMUSER=.999
"RTN","XMUPIN",70,0)
 K ^TMP("XM",$J)
"RTN","XMUPIN",71,0)
 F  S XMUSER=$O(^XMB(3.7,XMUSER)) Q:XMUSER'>0  D
"RTN","XMUPIN",72,0)
 . Q:$G(XMEXEMPT)[(":"_XMUSER_":")
"RTN","XMUPIN",73,0)
 . S XMI=10
"RTN","XMUPIN",74,0)
 . I XMKALL D
"RTN","XMUPIN",75,0)
 . . S XMK=.99
"RTN","XMUPIN",76,0)
 . . F  S XMK=$O(^XMB(3.7,XMUSER,2,XMK)) Q:XMK'>0  D BASKET(XMTEST,XMK,$P($G(^(XMK,0),"NO NAME"),U),XMIDATE,XMDDATE,.XMLEN,.XMI)
"RTN","XMUPIN",77,0)
 . E  D BASKET(XMTEST,1,"IN",XMIDATE,XMDDATE,.XMLEN,.XMHDR,.XMI)
"RTN","XMUPIN",78,0)
 . Q:'$D(^TMP("XM",$J))
"RTN","XMUPIN",79,0)
 . D SENDMSG(XMTEST,XMKALL,XMIDAYS,XMDDATEX,XMUSER)
"RTN","XMUPIN",80,0)
 . K ^TMP("XM",$J)
"RTN","XMUPIN",81,0)
 Q
"RTN","XMUPIN",82,0)
BASKET(XMTEST,XMK,XMKN,XMIDATE,XMDDATE,XMLEN,XMHDR,XMI) ; Process Basket
"RTN","XMUPIN",83,0)
 N XMZ,XMZDATE,XMREC,XMZREC,XMFDA,XMIENS,XMFIRST,XMIREC
"RTN","XMUPIN",84,0)
 S XMZ=0,XMFIRST=1
"RTN","XMUPIN",85,0)
 F  S XMZ=$O(^XMB(3.7,XMUSER,2,XMK,1,XMZ)) Q:XMZ'>0  S XMREC=$G(^(XMZ,0)) D
"RTN","XMUPIN",86,0)
 . ; Quit if no data OR new msg OR already scheduled for deletion
"RTN","XMUPIN",87,0)
 . ; OR activity after the cutoff date
"RTN","XMUPIN",88,0)
 . Q:XMREC=""!$P(XMREC,U,3)!$P(XMREC,U,5)!($P(XMREC,U,4)>XMIDATE)
"RTN","XMUPIN",89,0)
 . S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMUPIN",90,0)
 . S XMZDATE=$P(XMZREC,U,3)
"RTN","XMUPIN",91,0)
 . S:XMZDATE'?7N1".".N XMZDATE=$$CONVERT^XMXUTIL1(XMZDATE)
"RTN","XMUPIN",92,0)
 . I $P(XMREC,U,4)="" Q:XMZDATE>XMIDATE
"RTN","XMUPIN",93,0)
 . I 'XMTEST D  ; Mark message w/delete date ("AC" x-ref created by trigger)
"RTN","XMUPIN",94,0)
 . . S XMIENS=XMZ_","_XMK_","_XMUSER_","
"RTN","XMUPIN",95,0)
 . . S XMFDA(3.702,XMIENS,5)=XMDDATE
"RTN","XMUPIN",96,0)
 . . S XMFDA(3.702,XMIENS,7)=1
"RTN","XMUPIN",97,0)
 . . D FILE^DIE("","XMFDA")
"RTN","XMUPIN",98,0)
 . I XMFIRST D
"RTN","XMUPIN",99,0)
 . . S XMFIRST=0
"RTN","XMUPIN",100,0)
 . . S XMI=XMI+1,^TMP("XM",$J,XMI)=""
"RTN","XMUPIN",101,0)
 . . S XMI=XMI+1,^TMP("XM",$J,XMI)="Basket: "_XMKN
"RTN","XMUPIN",102,0)
 . . S XMI=XMI+1,^TMP("XM",$J,XMI)=""
"RTN","XMUPIN",103,0)
 . . S XMI=XMI+1,^TMP("XM",$J,XMI)=XMHDR(1)
"RTN","XMUPIN",104,0)
 . . S XMI=XMI+1,^TMP("XM",$J,XMI)=XMHDR(2)
"RTN","XMUPIN",105,0)
 . S XMIREC=$J("["_XMZ_"]",XMLEN("XMZ"))_" "_$E($$MMDT^XMXUTIL1(XMZDATE),1,9)_" "_$$LJ^XLFSTR($E($$SUBJ^XMXUTIL2(XMZREC),1,XMLEN("SUBJ")),XMLEN("SUBJ"))
"RTN","XMUPIN",106,0)
 . S XMIREC=XMIREC_"  "_$$LJ^XLFSTR($E($$NAME^XMXUTIL($P(XMZREC,U,2)),1,XMLEN("FROM")),XMLEN("FROM"))_"  "_$$MMDT^XMXUTIL1($P($P(XMREC,U,4),".",1))
"RTN","XMUPIN",107,0)
 . S XMI=XMI+1,^TMP("XM",$J,XMI)=XMIREC
"RTN","XMUPIN",108,0)
 Q
"RTN","XMUPIN",109,0)
SENDMSG(XMTEST,XMKALL,XMIDAYS,XMDDATEX,XMTO) ; Send a message to the user
"RTN","XMUPIN",110,0)
 N XMINSTR
"RTN","XMUPIN",111,0)
 S ^TMP("XM",$J,1)="You have not read the following messages in over "_XMIDAYS_" days."
"RTN","XMUPIN",112,0)
 I XMTEST D
"RTN","XMUPIN",113,0)
 . S ^TMP("XM",$J,2)="If you don't need them, consider deleting them."
"RTN","XMUPIN",114,0)
 . S ^TMP("XM",$J,3)="MailMan will not delete them."
"RTN","XMUPIN",115,0)
 E  D
"RTN","XMUPIN",116,0)
 . S ^TMP("XM",$J,2)="MailMan will delete them on "_XMDDATEX_" unless they become new"
"RTN","XMUPIN",117,0)
 . S ^TMP("XM",$J,3)="or you read them or save them to another basket."
"RTN","XMUPIN",118,0)
 S XMINSTR("FLAGS")="I"  ; Info only
"RTN","XMUPIN",119,0)
 S XMINSTR("FROM")=.5
"RTN","XMUPIN",120,0)
 D SENDMSG^XMXSEND(.5,$S(XMKALL:"Mailbox",1:"IN Basket")_" Maintenance","^TMP(""XM"",$J)",XMTO,.XMINSTR)
"RTN","XMUPIN",121,0)
 Q
"RTN","XMUPIN",122,0)
 ;
"RTN","XMUPIN",123,0)
 ;#34006 = From
"RTN","XMUT1")
0^122^B6391170
"RTN","XMUT1",1,0)
XMUT1 ;(WASH ISC)/CAP-FIND MESSAGES FOR USER ;09/30/98  15:52
"RTN","XMUT1",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMUT1",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMUT1",4,0)
 ; A   XMUT-REC-FIND
"RTN","XMUT1",5,0)
 ; G   XMUT-REC-DELIVER
"RTN","XMUT1",6,0)
 Q
"RTN","XMUT1",7,0)
A D ENTA^XMUT1B S DIR(0)="Y",DIR("B")="N",DIR("A")="THIS MAY TAKE A LONG TIME.... DO YOU WISH TO CONTINUE" D ^DIR K DIR,DIRUT G EXIT:"yY"'[$E(X)!(X="")
"RTN","XMUT1",8,0)
 S XMA0=^DD("DD")
"RTN","XMUT1",9,0)
B S DIC("A")="Enter the USER for whom you wish to recover messages: "
"RTN","XMUT1",10,0)
 S DIC="^VA(200,",DIC(0)="AEQZM" D ^DIC
"RTN","XMUT1",11,0)
 K DIC I "^"[$E(X) G EXIT
"RTN","XMUT1",12,0)
 I Y<1 W !,"Enter '^' to abort or a Valid User who has a Mailbox." G B
"RTN","XMUT1",13,0)
 I '$D(^XMB(3.7,+Y,2,1,0)) W *7,"You cannot recover messages for this user (no Mailbox)." G B
"RTN","XMUT1",14,0)
 S XMC0=+Y,XMB0=Y(0) K Y
"RTN","XMUT1",15,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="DO YOU MEAN '"_$P(XMB0,"^")_"' "
"RTN","XMUT1",16,0)
 D ^DIR K DIR,DIRUT I "Yy"'[$E(X)!(X="") G B
"RTN","XMUT1",17,0)
 S (F,A,G)=0,D=XMC0 K XMC0
"RTN","XMUT1",18,0)
 W !!,"*=100 MESSAGES PROCESSED",!!
"RTN","XMUT1",19,0)
L S A=$O(^XMB(3.7,"M",A)) G Q:'A,L:$D(^(A,D)) S G=G+1 W:G#100=0 "*" S E=$O(^XMB(3.9,A,1,"C",D,0)) G L:'E,L:$D(^XMB(3.9,A,1,E,"D"))
"RTN","XMUT1",20,0)
 S F=F+1,X=^XMB(3.9,A,0),^TMP("XMUT1",D,A)=X W !,$P(X,"^"),!
"RTN","XMUT1",21,0)
 G L
"RTN","XMUT1",22,0)
Q W !!,G," MESSAGES PROCESSED, ",F," MESSAGES FOUND"
"RTN","XMUT1",23,0)
 K %1,A,D,E,F,G,X,XMA0,XMB0,Y,Z,%,%H,%DT
"RTN","XMUT1",24,0)
 Q
"RTN","XMUT1",25,0)
QQ S (A,G,F)=0,C=1,XMA0=^DD("DD") H 3600 D L G H^XUS
"RTN","XMUT1",26,0)
 ;
"RTN","XMUT1",27,0)
 ;LOAD DOCUMENTS FOUND INTO USER'S 'IN' BOX
"RTN","XMUT1",28,0)
G ;
"RTN","XMUT1",29,0)
 S (J,C,F)="" W !!,"CHOOSE FROM:",!
"RTN","XMUT1",30,0)
 F I=0:0 S I=$O(^TMP("XMUT1",I)) Q:'I  I $D(^VA(200,I,0)) W !,$J(I,8),"   ",$P(^(0),"^") I 'J S J=I
"RTN","XMUT1",31,0)
 I 'J W !!!,"NONE RECOVERED FOR ANYBODY !!!" K C,F,I,J,X Q
"RTN","XMUT1",32,0)
F W !!,"WHICH ONE: ",J,"// " R X:DTIME I X="" S X=J
"RTN","XMUT1",33,0)
 G E:"^"[$E(X) I X="?" D H1^XMUT1A G F
"RTN","XMUT1",34,0)
 I X="??" G G
"RTN","XMUT1",35,0)
 S D=X I '$D(^TMP("XMUT1",D)) W "   << NOT ON LIST !!!",*7 G G
"RTN","XMUT1",36,0)
 W !!,"RECOVERING MESSAGES ('+'=RECOVERED, '.'=MESSAGE PROCESSED)",!!
"RTN","XMUT1",37,0)
 S D=X,(C,F)=0
"RTN","XMUT1",38,0)
P S A=$O(^TMP("XMUT1",D,0)) G QQQ:'A W "." I $X>77 W !
"RTN","XMUT1",39,0)
 S C=C+1 W "+" G T:$D(^XMB(3.7,"M",A,D)),T:'$D(^XMB(3.9,A))
"RTN","XMUT1",40,0)
 S F=F+1
"RTN","XMUT1",41,0)
 L +^XMB(3.7,D)
"RTN","XMUT1",42,0)
 D PUTMSG^XMXMSGS2(D,1,"IN",A)
"RTN","XMUT1",43,0)
 L -^XMB(3.7,D)
"RTN","XMUT1",44,0)
T K ^TMP("XMUT1",D,A) G P
"RTN","XMUT1",45,0)
QQQ W !!,C," POTENTIAL ENTRIES PROCESSED.  ",F," MESSAGES RECOVERED.",!!
"RTN","XMUT1",46,0)
E K %,%1,A,C,D,F,I,J,Y,Z,%H
"RTN","XMUT1",47,0)
 Q
"RTN","XMUT1",48,0)
EXIT K X1,X2
"RTN","XMUT1",49,0)
 Q
"RTN","XMUT1",50,0)
 ;
"RTN","XMUT1",51,0)
 ;LIST MESSAGES IN MAILBOXES OF DUZ
"RTN","XMUT1",52,0)
M G MBOX^XMJBL
"RTN","XMUT1A")
0^227^B9108273
"RTN","XMUT1A",1,0)
XMUT1A ;(WASH ISC)/CAP-RECOVER MESSAGES ;06/22/99  15:28
"RTN","XMUT1A",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMUT1A",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMUT1A",4,0)
 ; DEL      XMUT-REC-DELETE
"RTN","XMUT1A",5,0)
 ; LIST     XMUT-REC-RPT
"RTN","XMUT1A",6,0)
NOKL G FX:$D(^DOPT("XMUT1",1)) S DIK="^DOPT(""XMUT1"","
"RTN","XMUT1A",7,0)
GO S ^DOPT("XMUT1",0)="Recover Messages Function^1N^"
"RTN","XMUT1A",8,0)
 F I=1:1 S X=$E($T(TABLE+I),4,99) Q:X=""  S ^DOPT("XMUT1",I,0)=X
"RTN","XMUT1A",9,0)
 D IXALL^DIK
"RTN","XMUT1A",10,0)
FX S DIC="^DOPT(""XMUT1"",",DIC(0)="AEQZ" D ^DIC K DIC Q:Y<0
"RTN","XMUT1A",11,0)
 S X=$P(Y(0),U,2,99) K DD,DO,Y D @X
"RTN","XMUT1A",12,0)
 D ^%ZISC
"RTN","XMUT1A",13,0)
 W ! K DIE,DIF G FX
"RTN","XMUT1A",14,0)
TABLE ;;;DESCRIPTION^PROGRAM OR TAG^PROGRAM
"RTN","XMUT1A",15,0)
 ;;FIND MESSAGES FOR USER^A^XMUT1
"RTN","XMUT1A",16,0)
 ;;LIST MESSAGES IN USER'S BASKETS^M^XMUT1
"RTN","XMUT1A",17,0)
 ;;LOAD MESSAGES INTO IN-BASKET^G^XMUT1
"RTN","XMUT1A",18,0)
 ;;LIST MESSAGES FOUND^LIST^XMUT1A
"RTN","XMUT1A",19,0)
 ;;DELETE LIST OF RECOVERED MESSAGES FROM THE UTILITY GLOBAL^DEL^XMUT1A
"RTN","XMUT1A",20,0)
 ;;
"RTN","XMUT1A",21,0)
LIST ;LIST MESSAGES FOUND
"RTN","XMUT1A",22,0)
 N J,C,F,I,X,XME0
"RTN","XMUT1A",23,0)
 S (J,C,F)="" W !!,"CHOOSE FROM:",!
"RTN","XMUT1A",24,0)
 F I=0:0 S I=$O(^TMP("XMUT1",I)) Q:'I  I $D(^VA(200,I,0)) W !,$J(I,8),"   ",$P(^(0),"^") I 'J S J=I
"RTN","XMUT1A",25,0)
 I 'J G NO
"RTN","XMUT1A",26,0)
L W !!,"WHICH ONE: ",J,"//" R X:DTIME I X="" S X=J
"RTN","XMUT1A",27,0)
 Q:"^"[$E(X)  I X="?" D H1 G L
"RTN","XMUT1A",28,0)
 I X="??" G LIST
"RTN","XMUT1A",29,0)
 I '$D(^TMP("XMUT1",X)) D H1 G LIST
"RTN","XMUT1A",30,0)
 S XME0=X,ZTSAVE("XME0")=""
"RTN","XMUT1A",31,0)
 D EN^XUTMDEVQ("ZTSK^XMUT1A","MailMan List Messages Found (XMUT-REC-RPT)",.ZTSAVE)
"RTN","XMUT1A",32,0)
 Q
"RTN","XMUT1A",33,0)
ZTSK ;
"RTN","XMUT1A",34,0)
 D NOW^%DTC S Y=%,XMF0=^DD("DD") K %,%I,%H X XMF0
"RTN","XMUT1A",35,0)
 S XMC0=0,XMB0=0 S XMA0=$P(^VA(200,XME0,0),"^")_" - "_Y D H
"RTN","XMUT1A",36,0)
N S XMC0=$O(^TMP("XMUT1",XME0,XMC0)) G NQ:'XMC0
"RTN","XMUT1A",37,0)
 S I=$G(^XMB(3.9,XMC0,0))
"RTN","XMUT1A",38,0)
 I I="" W !!,"Message removed from list - no longer in 3.9 file.",! K ^TMP("XMUT1",XME0,XMC0) G N
"RTN","XMUT1A",39,0)
 S XMD0=XMD0+1,Y=$P(I,"^",3) I Y?7N!(Y?7N1"."1N.N) X XMF0
"RTN","XMUT1A",40,0)
 W !?2,Y,?22,$P(I,"^")
"RTN","XMUT1A",41,0)
 G N:IOSL-6>XMD0 I $E(IOST,1,2)'="C-" D H G N
"RTN","XMUT1A",42,0)
 I '$D(ZTQUEUED) U IO(0) K DIR S DIR(0)="E" D ^DIR K DIR,DIRUT G NQ:X["^" U IO
"RTN","XMUT1A",43,0)
 D H G N
"RTN","XMUT1A",44,0)
H S XMB0=XMB0+1,XMD0=5
"RTN","XMUT1A",45,0)
 W @IOF,!,"CONTENTS OF MAILBOXES FOR ",XMA0,?60,"PAGE: ",XMB0,!!
"RTN","XMUT1A",46,0)
 W "  DATE@TIME",?22,"SUBJECT",!!
"RTN","XMUT1A",47,0)
 Q
"RTN","XMUT1A",48,0)
NQ K XMA0,XMB0,XMD0,XMC0,XME0,XMF0
"RTN","XMUT1A",49,0)
 I $D(ZTQUEUED) W @IOF K ZTSK S ZTREQ="@" Q
"RTN","XMUT1A",50,0)
 D ^%ZISC
"RTN","XMUT1A",51,0)
 Q
"RTN","XMUT1A",52,0)
 ;
"RTN","XMUT1A",53,0)
DEL ;DELETE LIST FROM ^TMP("XMUT1"...
"RTN","XMUT1A",54,0)
 S (J,C,F)="" W !!,"CHOOSE FROM:",!
"RTN","XMUT1A",55,0)
 F I=0:0 S I=$O(^TMP("XMUT1",I)) Q:'I  I $D(^VA(200,I,0)) W !,$J(I,8),"   ",$P(^(0),"^") I 'J S J=I
"RTN","XMUT1A",56,0)
 I 'J G NO
"RTN","XMUT1A",57,0)
D W !!,"WHICH ONE ",J,"//" R X:DTIME I X="" S X=J
"RTN","XMUT1A",58,0)
 Q:"^"[$E(X)  I X="?" D H1 G D
"RTN","XMUT1A",59,0)
 I X="??" D H1 G DEL
"RTN","XMUT1A",60,0)
 I '$D(^TMP("XMUT1",X)) D H1 G DEL
"RTN","XMUT1A",61,0)
 S XME0=X,XMB0=$G(^VA(200,XME0,0))
"RTN","XMUT1A",62,0)
 I XMB0="" W !,"  NO SUCH USER !!!",*7 G DQ
"RTN","XMUT1A",63,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="DO YOU MEAN '"_$P(XMB0,"^")_"' "
"RTN","XMUT1A",64,0)
 D ^DIR K DIR,DIRUT Q:"^"[X!("yY"'[X)
"RTN","XMUT1A",65,0)
DQ K ^TMP("XMUT1",XME0) W "  << DELETED !!!" K XME0 Q
"RTN","XMUT1A",66,0)
H1 W !!,"Choose NUMBER from list.  Or enter '??' for a list.",!,*7 Q
"RTN","XMUT1A",67,0)
NO W !!!,"NO MESSAGES RECOVERED FOR ANYBODY !!!" Q
"RTN","XMUT2")
0^107^B12131569
"RTN","XMUT2",1,0)
XMUT2 ;(WASH ISC)/CAP-RPT ON MESSAGES ;06/15/99  06:42
"RTN","XMUT2",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMUT2",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMUT2",4,0)
 ; ENTER    XMMGR-LARGE-MESSAGE-REPORT
"RTN","XMUT2",5,0)
ENTER ;
"RTN","XMUT2",6,0)
 N XMABORT,XML,XMZ,I,XMSAVE
"RTN","XMUT2",7,0)
 S XMABORT=0
"RTN","XMUT2",8,0)
 D INIT(.XML,.XMZ,.XMABORT) Q:XMABORT
"RTN","XMUT2",9,0)
 I $D(ZTQUEUED) D PROCESS(XML,XMZ) Q
"RTN","XMUT2",10,0)
 F I="XML","XMZ" S XMSAVE(I)=""
"RTN","XMUT2",11,0)
 D EN^XUTMDEVQ("PROC^XMUT2","MailMan Large Message Report",.XMSAVE)
"RTN","XMUT2",12,0)
 Q
"RTN","XMUT2",13,0)
INIT(XML,XMZ,XMABORT) ;
"RTN","XMUT2",14,0)
 S XML=$G(^XMB(1,1,"XMUT2-LINES")) I 'XML S XML=100
"RTN","XMUT2",15,0)
 S XMZ=$O(^XMB(3.9,0))
"RTN","XMUT2",16,0)
 Q:$D(ZTQUEUED)
"RTN","XMUT2",17,0)
 W !,"This report lists messages longer than a certain number of lines.",!
"RTN","XMUT2",18,0)
 D MINLINES(.XML,.XMABORT) Q:XMABORT
"RTN","XMUT2",19,0)
 D STARTXMZ(.XMZ,.XMABORT) Q:XMABORT
"RTN","XMUT2",20,0)
 Q
"RTN","XMUT2",21,0)
STARTXMZ(XMZ,XMABORT) ;
"RTN","XMUT2",22,0)
 N DIR,X
"RTN","XMUT2",23,0)
 W !!,"The default starting point provided is the first message number."
"RTN","XMUT2",24,0)
 S DIR("A")="Start at Message Number"
"RTN","XMUT2",25,0)
 S DIR("B")=XMZ
"RTN","XMUT2",26,0)
 S DIR(0)="N^"_XMZ_":"_$O(^XMB(3.7,"M",""),-1)
"RTN","XMUT2",27,0)
 D ^DIR I $D(DIRUT) S XMABORT=1
"RTN","XMUT2",28,0)
 S XMZ=Y
"RTN","XMUT2",29,0)
 Q
"RTN","XMUT2",30,0)
MINLINES(XML,XMABORT) ;
"RTN","XMUT2",31,0)
 N DIR,X,Y
"RTN","XMUT2",32,0)
 S DIR("A")="Report on messages longer than this many lines"
"RTN","XMUT2",33,0)
 S DIR("B")=XML
"RTN","XMUT2",34,0)
 S DIR(0)="N^10:100000"
"RTN","XMUT2",35,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMUT2",36,0)
 Q:Y=XML
"RTN","XMUT2",37,0)
 S XML=Y
"RTN","XMUT2",38,0)
 K DIR,X,Y
"RTN","XMUT2",39,0)
 S DIR("A")="Make this the default for future reports"
"RTN","XMUT2",40,0)
 S DIR("B")="YES"
"RTN","XMUT2",41,0)
 S DIR(0)="Y"
"RTN","XMUT2",42,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMUT2",43,0)
 Q:'Y
"RTN","XMUT2",44,0)
 S $P(^XMB(1,1,"XMUT2-LINES"),U)=XML
"RTN","XMUT2",45,0)
 Q
"RTN","XMUT2",46,0)
PROCESS(XML,XMZ) ;
"RTN","XMUT2",47,0)
PROC ;
"RTN","XMUT2",48,0)
 N XMABORT,XMPAGE,XMCNT,XMDATE,XMREC,XMLINES,XMLEN
"RTN","XMUT2",49,0)
 S XMLEN("XMZ")=$L($O(^XMB(3.9,"A"),-1))
"RTN","XMUT2",50,0)
 S XMLEN("FROM")=63-XMLEN("XMZ")\2
"RTN","XMUT2",51,0)
 S XMLEN("SUBJ")=63-XMLEN("XMZ")-XMLEN("FROM")
"RTN","XMUT2",52,0)
 S (XMABORT,XMCNT,XMPAGE)=0
"RTN","XMUT2",53,0)
 S XMDATE=$$MMDT^XMXUTIL1(DT)
"RTN","XMUT2",54,0)
 W:IOST["C-" @IOF
"RTN","XMUT2",55,0)
 D HDR
"RTN","XMUT2",56,0)
 S XMZ=XMZ=1
"RTN","XMUT2",57,0)
 F  S XMZ=$O(^XMB(3.9,XMZ)) Q:XMZ'>0  D  Q:XMABORT
"RTN","XMUT2",58,0)
 . S XMCNT=XMCNT+1
"RTN","XMUT2",59,0)
 . S XMLINES=+$P($G(^XMB(3.9,XMZ,2,0)),U,4)
"RTN","XMUT2",60,0)
 . I IOST["C-",XMCNT#1000=0 W:$X>50 ! W "."
"RTN","XMUT2",61,0)
 . Q:XMLINES'>XML
"RTN","XMUT2",62,0)
 . S XMREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMUT2",63,0)
 . Q:$P(XMREC,U)?1"R"1N.N
"RTN","XMUT2",64,0)
 . S XMRECIPS=+$P($G(^XMB(3.9,XMZ,1,0)),U,4)
"RTN","XMUT2",65,0)
 . I $Y+3>IOSL D PAGE(.XMABORT) Q:XMABORT
"RTN","XMUT2",66,0)
 . W !,$J(XMZ,XMLEN("XMZ")),$J($S(XMLINES>0:XMLINES,1:"NONE"),6),$J($S(XMRECIPS>0:XMRECIPS,1:"NONE"),6),"  "
"RTN","XMUT2",67,0)
 . W $$LJ^XLFSTR($E($$NAME^XMXUTIL($P(XMREC,U,2)),1,XMLEN("FROM")),XMLEN("FROM")),"  ",$$LJ^XLFSTR($E($$SUBJ^XMXUTIL2(XMREC),1,XMLEN("SUBJ")),XMLEN("SUBJ"))
"RTN","XMUT2",68,0)
 Q:XMABORT
"RTN","XMUT2",69,0)
 I IOST["C-" D WAIT^XMXUTIL
"RTN","XMUT2",70,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","XMUT2",71,0)
 Q
"RTN","XMUT2",72,0)
PAGE(XMABORT) ;
"RTN","XMUT2",73,0)
 I IOST["C-" D PAGE^XMXUTIL(.XMABORT) Q:XMABORT
"RTN","XMUT2",74,0)
 W @IOF
"RTN","XMUT2",75,0)
 D HDR
"RTN","XMUT2",76,0)
 Q
"RTN","XMUT2",77,0)
HDR ;
"RTN","XMUT2",78,0)
 S XMPAGE=XMPAGE+1
"RTN","XMUT2",79,0)
 W "Messages with more than ",XML," lines",?50,"Run on: ",XMDATE,?70,"Page: ",XMPAGE
"RTN","XMUT2",80,0)
 W !!,?(XMLEN("XMZ")+1),"Lines Rcpts  ",$$LJ^XLFSTR($$EZBLD^DIALOG(34006),XMLEN("FROM")),"  ",$$EZBLD^DIALOG(34002),!
"RTN","XMUT2",81,0)
 Q
"RTN","XMUT2",82,0)
ENT ;
"RTN","XMUT2",83,0)
 N XML,XMZ
"RTN","XMUT2",84,0)
 S XML=1000,XMZ=0
"RTN","XMUT2",85,0)
 F I="XML","XMZ" S XMSAVE(I)=""
"RTN","XMUT2",86,0)
 D EN^XUTMDEVQ("PROC^XMUT2","MailMan Large Message Report",.XMSAVE)
"RTN","XMUT2",87,0)
 Q
"RTN","XMUT2",88,0)
 ;
"RTN","XMUT2",89,0)
 ;#34002 = Subject
"RTN","XMUT2",90,0)
 ;#34006 = From
"RTN","XMUT4")
0^108^B87361523
"RTN","XMUT4",1,0)
XMUT4 ;(WASH ISC)/CAP-INTEGRITY CHECKER ;05/27/99  07:29
"RTN","XMUT4",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMUT4",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMUT4",4,0)
 ; CHKFILES   XMUT-CHKFIL
"RTN","XMUT4",5,0)
 Q
"RTN","XMUT4",6,0)
CHKFILES ;
"RTN","XMUT4",7,0)
 I $D(ZTQUEUED) D PROCESS Q
"RTN","XMUT4",8,0)
 N XMABORT
"RTN","XMUT4",9,0)
 S XMABORT=0
"RTN","XMUT4",10,0)
 D WARNING(.XMABORT) Q:XMABORT
"RTN","XMUT4",11,0)
 D EN^XUTMDEVQ("PROCESS^XMUT4","MailMan Global Integrity Checker")
"RTN","XMUT4",12,0)
 Q
"RTN","XMUT4",13,0)
WARNING(XMABORT) ;
"RTN","XMUT4",14,0)
 N DIR,X,Y
"RTN","XMUT4",15,0)
 W !!,"The MailMan file checker may take some time to process."
"RTN","XMUT4",16,0)
 W !,"If you have not tried it,  PLEASE try it when"
"RTN","XMUT4",17,0)
 W !,"the system will be quiescent for a LONG period of time."
"RTN","XMUT4",18,0)
 W !!,"ERRORS LISTED ARE GENERALLY NOT FATAL."
"RTN","XMUT4",19,0)
 W !,"(Please contact your ISC if there are many errors.)"
"RTN","XMUT4",20,0)
 W !!,"MOST ERRORS ARE CORRECTED:  New message, basket counts..."
"RTN","XMUT4",21,0)
 W !!,"Keep list generated for future reference.  If you see errors in"
"RTN","XMUT4",22,0)
 W !,"MailMan, the list may help to resolve them.",!
"RTN","XMUT4",23,0)
 S DIR(0)="Y",DIR("A")="Do you wish to proceed",DIR("B")="NO"
"RTN","XMUT4",24,0)
 S DIR("?")="Enter 'Y' to proceed, 'N' or '^' to stop."
"RTN","XMUT4",25,0)
 D ^DIR
"RTN","XMUT4",26,0)
 I $D(DIRUT)!'Y S XMABORT=1
"RTN","XMUT4",27,0)
 Q
"RTN","XMUT4",28,0)
PROCESS ;
"RTN","XMUT4",29,0)
 D MAILBOX
"RTN","XMUT4",30,0)
 D MESSAGE
"RTN","XMUT4",31,0)
 D SUMMARY
"RTN","XMUT4",32,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","XMUT4",33,0)
 Q
"RTN","XMUT4",34,0)
MESSAGE ;
"RTN","XMUT4",35,0)
 D MESSAGE^XMUT4C
"RTN","XMUT4",36,0)
 Q
"RTN","XMUT4",37,0)
SUMMARY ;
"RTN","XMUT4",38,0)
 D SUMMARY^XMUT4B
"RTN","XMUT4",39,0)
 Q
"RTN","XMUT4",40,0)
MAILBOX ;
"RTN","XMUT4",41,0)
 W:'$D(ZTQUEUED) !!,"Checking ^XMB(3.7, MAILBOX file"
"RTN","XMUT4",42,0)
 D USERS
"RTN","XMUT4",43,0)
 D MXREF
"RTN","XMUT4",44,0)
 D POSTBSKT
"RTN","XMUT4",45,0)
 Q
"RTN","XMUT4",46,0)
MXREF ;
"RTN","XMUT4",47,0)
 ; XMECNT   # messages in mailbox
"RTN","XMUT4",48,0)
 N XMZ,XMUSER,XMECNT,XMK
"RTN","XMUT4",49,0)
 W:'$D(ZTQUEUED) !!,"Checking M xref",!
"RTN","XMUT4",50,0)
 S (XMZ,XMECNT)=0
"RTN","XMUT4",51,0)
 F  S XMZ=$O(^XMB(3.7,"M",XMZ)) Q:'XMZ  D
"RTN","XMUT4",52,0)
 . S XMECNT=XMECNT+1 I '$D(ZTQUEUED),XMECNT#5000=0 W:$X>40 ! W XMECNT,"."
"RTN","XMUT4",53,0)
 . S XMUSER=""
"RTN","XMUT4",54,0)
 . F  S XMUSER=$O(^XMB(3.7,"M",XMZ,XMUSER)) Q:'XMUSER  D
"RTN","XMUT4",55,0)
 . . S XMK=""
"RTN","XMUT4",56,0)
 . . F  S XMK=$O(^XMB(3.7,"M",XMZ,XMUSER,XMK)) Q:'XMK  D
"RTN","XMUT4",57,0)
 . . . Q:$D(^XMB(3.7,XMUSER,2,XMK,1,XMZ,0))
"RTN","XMUT4",58,0)
 . . . K ^XMB(3.7,"M",XMZ,XMUSER,XMK)
"RTN","XMUT4",59,0)
 . . . D ERR(121,"M xref, but msg not in bskt: xref killed",XMUSER,XMK,XMZ)
"RTN","XMUT4",60,0)
 W:'$D(ZTQUEUED) !!,XMECNT," messages"
"RTN","XMUT4",61,0)
 Q
"RTN","XMUT4",62,0)
USERS ;
"RTN","XMUT4",63,0)
 ; XMUKCNT  # user's baskets
"RTN","XMUT4",64,0)
 ; XMUNCNT  # new messages for a user
"RTN","XMUT4",65,0)
 ; XMUCNT   # users
"RTN","XMUT4",66,0)
 ; XMKCNT   # baskets
"RTN","XMUT4",67,0)
 ; XMECNT   # message entries
"RTN","XMUT4",68,0)
 N XMUSER,XMECNT,XMUCNT,XMKCNT
"RTN","XMUT4",69,0)
 W:'$D(ZTQUEUED) !!,"Checking each user mailbox",!
"RTN","XMUT4",70,0)
 S (XMUSER,XMECNT,XMUCNT,XMKCNT)=0
"RTN","XMUT4",71,0)
 F  S XMUSER=$O(^XMB(3.7,XMUSER)) Q:XMUSER'>0  D
"RTN","XMUT4",72,0)
 . S XMUCNT=XMUCNT+1 I '$D(ZTQUEUED),XMUCNT#20=0 W:$X>40 ! W XMUCNT,"."
"RTN","XMUT4",73,0)
 . D USER(XMUSER,.XMUKCNT,.XMUECNT)
"RTN","XMUT4",74,0)
 . S XMKCNT=XMKCNT+XMUKCNT
"RTN","XMUT4",75,0)
 . S XMECNT=XMECNT+XMUECNT
"RTN","XMUT4",76,0)
 W:'$D(ZTQUEUED) !!,XMUCNT," Users, ",XMKCNT," Baskets, ",XMECNT," Entries"
"RTN","XMUT4",77,0)
 I $D(^XMB(3.7,0)) S:$P(^XMB(3.7,0),U,4)'=XMUCNT $P(^(0),U,4)=XMUCNT Q
"RTN","XMUT4",78,0)
 S ^XMB(3.7,0)="MAILBOX^3.7P^3^"_XMUCNT
"RTN","XMUT4",79,0)
 Q
"RTN","XMUT4",80,0)
USER(XMUSER,XMUKCNT,XMUECNT) ;
"RTN","XMUT4",81,0)
 ; XMUKECNT # messages in a user's basket
"RTN","XMUT4",82,0)
 ; XMUKNCNT # new messages in a user's basket
"RTN","XMUT4",83,0)
 N XMK,XMUKNCNT,XMUKECNT,XMUNCNT
"RTN","XMUT4",84,0)
 D BXREF(XMUSER)
"RTN","XMUT4",85,0)
 D N0XREF(XMUSER)
"RTN","XMUT4",86,0)
 S (XMK,XMUKCNT,XMUNCNT,XMUECNT)=0
"RTN","XMUT4",87,0)
 F  S XMK=$O(^XMB(3.7,XMUSER,2,XMK)) Q:XMK'>0  D
"RTN","XMUT4",88,0)
 . Q:XMK=.95
"RTN","XMUT4",89,0)
 . S XMUKCNT=XMUKCNT+1
"RTN","XMUT4",90,0)
 . D BSKT(XMUSER,XMK,.XMUKNCNT,.XMUKECNT)
"RTN","XMUT4",91,0)
 . S XMUNCNT=XMUNCNT+XMUKNCNT
"RTN","XMUT4",92,0)
 . S XMUECNT=XMUECNT+XMUKECNT
"RTN","XMUT4",93,0)
 S:$P($G(^XMB(3.7,XMUSER,0)),U,1)'=XMUSER $P(^(0),U,1)=XMUSER
"RTN","XMUT4",94,0)
 S:$P(^XMB(3.7,XMUSER,0),U,6)'=XMUNCNT $P(^(0),U,6)=XMUNCNT
"RTN","XMUT4",95,0)
 S:'$D(^XMB(3.7,"B",XMUSER,XMUSER)) ^XMB(3.7,"B",XMUSER,XMUSER)=""
"RTN","XMUT4",96,0)
 I $D(^XMB(3.7,XMUSER,2,0)) S:$P(^XMB(3.7,XMUSER,2,0),U,4)'=XMUKCNT $P(^(0),U,4)=XMUKCNT Q
"RTN","XMUT4",97,0)
 S ^XMB(3.7,XMUSER,2,0)="^3.701^"_$O(^XMB(3.7,XMUSER,2,"B"),-1)_U_XMUKCNT
"RTN","XMUT4",98,0)
 Q
"RTN","XMUT4",99,0)
BSKT(XMUSER,XMK,XMUKNCNT,XMUKECNT) ;
"RTN","XMUT4",100,0)
 N XMKN,XMKZ,XMZ,XMREC,XMRESEQ
"RTN","XMUT4",101,0)
 D CXREF(XMUSER,XMK,.XMRESEQ)
"RTN","XMUT4",102,0)
 S (XMZ,XMUKNCNT,XMUKECNT)=0
"RTN","XMUT4",103,0)
 F  S XMZ=$O(^XMB(3.7,XMUSER,2,XMK,1,XMZ)) Q:XMZ'>0  D
"RTN","XMUT4",104,0)
 . S XMREC=^XMB(3.7,XMUSER,2,XMK,1,XMZ,0)
"RTN","XMUT4",105,0)
 . I $P(XMREC,U,1)'=XMZ D
"RTN","XMUT4",106,0)
 . . S $P(^XMB(3.7,XMUSER,2,XMK,1,XMZ,0),U,1)=XMZ
"RTN","XMUT4",107,0)
 . . D ERR(103,"Msg in bskt, but no .01 field: .01 field created",XMUSER,XMK,XMZ)
"RTN","XMUT4",108,0)
 . I '$D(^XMB(3.9,XMZ,0)) D  Q
"RTN","XMUT4",109,0)
 . . D ERR(101,"Msg in bskt, but no msg: removed from bskt",XMUSER,XMK,XMZ)
"RTN","XMUT4",110,0)
 . . D ZAPIT^XMXMSGS2(XMUSER,XMK,XMZ)
"RTN","XMUT4",111,0)
 . S XMUKECNT=XMUKECNT+1
"RTN","XMUT4",112,0)
 . S XMKZ=$P(XMREC,U,2)
"RTN","XMUT4",113,0)
 . I XMKZ D
"RTN","XMUT4",114,0)
 . . I '$D(^XMB(3.7,XMUSER,2,XMK,1,"C",XMKZ,XMZ)) S ^(XMZ)="" D ERR(112,"Msg in bskt, but no C xref: xref created",XMUSER,XMK,XMZ)
"RTN","XMUT4",115,0)
 . E  D
"RTN","XMUT4",116,0)
 . . S XMKZ=$O(^XMB(3.7,XMUSER,2,XMK,1,"C",""),-1)+1
"RTN","XMUT4",117,0)
 . . S $P(^XMB(3.7,XMUSER,2,XMK,1,XMZ,0),U,2)=XMKZ
"RTN","XMUT4",118,0)
 . . S ^XMB(3.7,XMUSER,2,XMK,1,"C",XMKZ,XMZ)=""
"RTN","XMUT4",119,0)
 . . D ERR(102,"Msg in bskt, but no seq #: seq # created",XMUSER,XMK,XMZ)
"RTN","XMUT4",120,0)
 . ;I XMUSER=.5,XMK>999 Q
"RTN","XMUT4",121,0)
 . I $P(XMREC,U,3) D
"RTN","XMUT4",122,0)
 . . S XMUKNCNT=XMUKNCNT+1
"RTN","XMUT4",123,0)
 . . I '$D(^XMB(3.7,XMUSER,"N0",XMK,XMZ)) S ^(XMZ)="" D ERR(113,"New msg, but no N0 xref: xref created",XMUSER,XMK,XMZ)
"RTN","XMUT4",124,0)
 . I '$D(^XMB(3.7,"M",XMZ,XMUSER,XMK,XMZ)) S ^(XMZ)="" D ERR(111,"Msg in bskt, but no M xref: xref created",XMUSER,XMK,XMZ)
"RTN","XMUT4",125,0)
 I '$D(^XMB(3.7,XMUSER,2,XMK,0)) D
"RTN","XMUT4",126,0)
 . S XMKN=$S(XMK=1:"IN",XMK=.5:"WASTE",1:"* No Name *")
"RTN","XMUT4",127,0)
 . S ^XMB(3.7,XMUSER,2,XMK,0)=XMKN
"RTN","XMUT4",128,0)
 . D ERR(131,"No bskt 0 node: created",XMUSER,XMK)
"RTN","XMUT4",129,0)
 E  D
"RTN","XMUT4",130,0)
 . S XMKN=$P(^XMB(3.7,XMUSER,2,XMK,0),U)
"RTN","XMUT4",131,0)
 . I XMKN="" D
"RTN","XMUT4",132,0)
 . . S XMKN=$S(XMK=1:"IN",XMK=.5:"WASTE",1:"* No Name *")
"RTN","XMUT4",133,0)
 . . S $P(^XMB(3.7,XMUSER,2,XMK,0),U)=XMKN
"RTN","XMUT4",134,0)
 . . D ERR(132,"Bskt name null: created",XMUSER,XMK)
"RTN","XMUT4",135,0)
 I '$D(^XMB(3.7,XMUSER,2,"B",XMKN,XMK)) S ^(XMK)="" D ERR(141,"Bskt name, but no B xref: xref created",XMUSER,XMK)
"RTN","XMUT4",136,0)
 S:$P(^XMB(3.7,XMUSER,2,XMK,0),U,2)'=XMUKNCNT $P(^(0),U,2)=XMUKNCNT
"RTN","XMUT4",137,0)
 I $D(^XMB(3.7,XMUSER,2,XMK,1,0)) D
"RTN","XMUT4",138,0)
 . S:$P(^XMB(3.7,XMUSER,2,XMK,1,0),U,4)'=XMUKECNT $P(^(0),U,4)=XMUKECNT
"RTN","XMUT4",139,0)
 E  I XMUKECNT D
"RTN","XMUT4",140,0)
 . S ^XMB(3.7,XMUSER,2,XMK,1,0)="^3.702P^"_$O(^XMB(3.7,XMUSER,2,XMK,1,"C"),-1)_U_XMUKECNT
"RTN","XMUT4",141,0)
 . D ERR(133,"No msg multiple 0 node: created",XMUSER,XMK)
"RTN","XMUT4",142,0)
 Q:'$G(XMRESEQ)
"RTN","XMUT4",143,0)
 D RSEQ^XMXBSKT(XMUSER,XMK)
"RTN","XMUT4",144,0)
 D ERR(125,"C xref duplicate seq #s: bskt reseq'd",XMUSER,XMK)
"RTN","XMUT4",145,0)
 Q
"RTN","XMUT4",146,0)
CXREF(XMUSER,XMK,XMRESEQ) ; Check the basket's C xref (message sequence numbers in basket)
"RTN","XMUT4",147,0)
 N XMKZ,XMZ,XMCNT
"RTN","XMUT4",148,0)
 S XMKZ=0
"RTN","XMUT4",149,0)
 F  S XMKZ=$O(^XMB(3.7,XMUSER,2,XMK,1,"C",XMKZ)) Q:'XMKZ  D
"RTN","XMUT4",150,0)
 . S (XMZ,XMCNT)=0
"RTN","XMUT4",151,0)
 . F  S XMZ=$O(^XMB(3.7,XMUSER,2,XMK,1,"C",XMKZ,XMZ)) Q:'XMZ  D
"RTN","XMUT4",152,0)
 . . S XMCNT=XMCNT+1
"RTN","XMUT4",153,0)
 . . Q:$P($G(^XMB(3.7,XMUSER,2,XMK,1,XMZ,0)),U,2)=XMKZ
"RTN","XMUT4",154,0)
 . . I '$D(^XMB(3.7,XMUSER,2,XMK,1,XMZ,0)) D  Q
"RTN","XMUT4",155,0)
 . . . S ^XMB(3.7,XMUSER,2,XMK,1,XMZ,0)=XMZ_U_XMKZ
"RTN","XMUT4",156,0)
 . . . D ERR(122,"C xref, but msg not in bskt: put in bskt",XMUSER,XMK,XMZ)
"RTN","XMUT4",157,0)
 . . I $P(^XMB(3.7,XMUSER,2,XMK,1,XMZ,0),U,2)="" D  Q
"RTN","XMUT4",158,0)
 . . . S $P(^XMB(3.7,XMUSER,2,XMK,1,XMZ,0),U,2)=XMKZ
"RTN","XMUT4",159,0)
 . . . D ERR(123,"C xref, but no msg seq #: set seq # using xref",XMUSER,XMK,XMZ)
"RTN","XMUT4",160,0)
 . . K ^XMB(3.7,XMUSER,2,XMK,1,"C",XMKZ,XMZ)
"RTN","XMUT4",161,0)
 . . D ERR(124,"C xref does not match msg seq #: xref killed",XMUSER,XMK,XMZ)
"RTN","XMUT4",162,0)
 . S:XMCNT>1 XMRESEQ=1
"RTN","XMUT4",163,0)
 Q
"RTN","XMUT4",164,0)
N0XREF(XMUSER) ; Check the user's N0 xref (new messages)
"RTN","XMUT4",165,0)
 N XMK,XMZ
"RTN","XMUT4",166,0)
 S XMK=0
"RTN","XMUT4",167,0)
 F  S XMK=$O(^XMB(3.7,XMUSER,"N0",XMK)) Q:'XMK  D
"RTN","XMUT4",168,0)
 . S XMZ=0
"RTN","XMUT4",169,0)
 . F  S XMZ=$O(^XMB(3.7,XMUSER,"N0",XMK,XMZ)) Q:'XMZ  D
"RTN","XMUT4",170,0)
 . . Q:$P($G(^XMB(3.7,XMUSER,2,XMK,1,XMZ,0)),U,3)=1
"RTN","XMUT4",171,0)
 . . I '$D(^XMB(3.7,XMUSER,2,XMK,1,XMZ,0)) D  Q
"RTN","XMUT4",172,0)
 . . . S ^XMB(3.7,XMUSER,2,XMK,1,XMZ,0)=XMZ_"^^1"
"RTN","XMUT4",173,0)
 . . . D ERR(126,"N0 xref, but msg not in bskt: msg put in bskt",XMUSER,XMK,XMZ)
"RTN","XMUT4",174,0)
 . . S $P(^XMB(3.7,XMUSER,2,XMK,1,XMZ,0),U,3)=1
"RTN","XMUT4",175,0)
 . . D ERR(127,"N0 xref, but msg not new: new flag set",XMUSER,XMK,XMZ)
"RTN","XMUT4",176,0)
 Q
"RTN","XMUT4",177,0)
BXREF(XMUSER) ; Check the user's B xref (basket names)
"RTN","XMUT4",178,0)
 N XMK,XMKN
"RTN","XMUT4",179,0)
 S XMKN=""
"RTN","XMUT4",180,0)
 F  S XMKN=$O(^XMB(3.7,XMUSER,2,"B",XMKN)) Q:XMKN=""  D
"RTN","XMUT4",181,0)
 . S XMK=0
"RTN","XMUT4",182,0)
 . F  S XMK=$O(^XMB(3.7,XMUSER,2,"B",XMKN,XMK)) Q:'XMK  D
"RTN","XMUT4",183,0)
 . . Q:$E($P($G(^XMB(3.7,XMUSER,2,XMK,0)),U),1,30)=XMKN
"RTN","XMUT4",184,0)
 . . I $D(^XMB(3.7,XMUSER,2,XMK,0)) D  Q
"RTN","XMUT4",185,0)
 . . . S $P(^XMB(3.7,XMUSER,2,XMK,0),U)=XMKN
"RTN","XMUT4",186,0)
 . . . D ERR(151,"B xref, but bskt name null: name set using xref",XMUSER,XMK)
"RTN","XMUT4",187,0)
 . . S $P(^XMB(3.7,XMUSER,2,XMK,0),U)=XMKN
"RTN","XMUT4",188,0)
 . . D ERR(152,"B xref, but no bskt node: node set using xref",XMUSER,XMK)
"RTN","XMUT4",189,0)
 Q
"RTN","XMUT4",190,0)
POSTBSKT ; Check the Postmaster's baskets to see if any
"RTN","XMUT4",191,0)
 ; remote baskets are numbered below 1000.  If so, move them.
"RTN","XMUT4",192,0)
 N XMK,XMKN,XMKINST,XMZ,XMINST,XMPUT
"RTN","XMUT4",193,0)
 S XMK=1
"RTN","XMUT4",194,0)
 F  S XMK=$O(^XMB(3.7,.5,2,XMK)) Q:XMK>999  S XMKN=$P(^(XMK,0),U,1)  D
"RTN","XMUT4",195,0)
 . S XMINST=$$FIND1^DIC(4.2,"","XQ",XMKN)
"RTN","XMUT4",196,0)
 . Q:'XMINST
"RTN","XMUT4",197,0)
 . D ERR(160,"Xmit basket<1000 has domain name: investigate msgs.",.5,XMK)
"RTN","XMUT4",198,0)
 . ; This basket has a remote site name.  Does it have msgs to xmit?
"RTN","XMUT4",199,0)
 . S XMKINST=XMINST+1000
"RTN","XMUT4",200,0)
 . I '$D(^XMB(3.7,.5,2,XMKINST)) D MAKEBSKT^XMXBSKT(.5,XMKINST,XMKN)
"RTN","XMUT4",201,0)
 . S (XMZ,XMPUT)=0
"RTN","XMUT4",202,0)
 . F  S XMZ=$O(^XMB(3.7,.5,2,XMK,1,XMZ)) Q:'XMZ  D
"RTN","XMUT4",203,0)
 . . I '$D(^XMB(3.9,XMZ,1,"AQUEUE",XMINST)) D  Q
"RTN","XMUT4",204,0)
 . . . ; This msg does not need to be transmitted.  Does it belong here?
"RTN","XMUT4",205,0)
 . . . Q:$D(^XMB(3.9,XMZ,1,"C",.5))!$$BCAST^XMXSEC(XMZ)
"RTN","XMUT4",206,0)
 . . . D ERR(161,"Msg in xmit basket<1000 not addressed to Postmaster: deleted.",.5,XMK,XMZ)
"RTN","XMUT4",207,0)
 . . . D ZAPIT^XMXMSGS2(.5,XMK,XMZ)
"RTN","XMUT4",208,0)
 . . ; This msg needs to be transmitted.  Is it in the real xmit bskt?
"RTN","XMUT4",209,0)
 . . Q:$D(^XMB(3.7,.5,2,XMKINST,1,XMZ))  ; already there
"RTN","XMUT4",210,0)
 . . S XMPUT=XMPUT+1
"RTN","XMUT4",211,0)
 . . I $D(^XMB(3.9,XMZ,1,"C",.5))!$$BCAST^XMXSEC(XMZ) D  Q
"RTN","XMUT4",212,0)
 . . . D ERR(162,"Msg in xmit basket<1000: copied to proper bskt.",.5,XMK,XMZ)
"RTN","XMUT4",213,0)
 . . . D PUTMSG^XMXMSGS2(.5,XMKINST,XMKN,XMZ)
"RTN","XMUT4",214,0)
 . . D ERR(163,"Msg in xmit basket<1000: moved to proper bskt.",.5,XMK,XMZ)
"RTN","XMUT4",215,0)
 . . D COPYIT^XMXMSGS2(.5,XMK,XMZ,XMKINST)
"RTN","XMUT4",216,0)
 . . D ZAPIT^XMXMSGS2(.5,XMK,XMZ)
"RTN","XMUT4",217,0)
 . Q:$$BMSGCT^XMXUTIL(.5,XMK)
"RTN","XMUT4",218,0)
 . N XMFDA
"RTN","XMUT4",219,0)
 . S XMFDA(3.701,XMK_",.5,",.01)="@"
"RTN","XMUT4",220,0)
 . D FILE^DIE("","XMFDA")
"RTN","XMUT4",221,0)
 . D ERR(164,"Xmit basket<1000 with no msgs: deleted.",.5,XMK)
"RTN","XMUT4",222,0)
 Q
"RTN","XMUT4",223,0)
ERR(XMERRNUM,XMERRMSG,XMUSER,XMK,XMZ) ;
"RTN","XMUT4",224,0)
 S XMERROR(XMERRNUM)=$G(XMERROR(XMERRNUM))+1
"RTN","XMUT4",225,0)
 Q:$D(ZTQUEUED)
"RTN","XMUT4",226,0)
 W !,"DUZ=",XMUSER,", Bskt=",XMK,$S($D(XMZ):", Msg="_XMZ,1:""),", Err=",$J(XMERRNUM,3)," ",XMERRMSG
"RTN","XMUT4",227,0)
 Q
"RTN","XMUT4A")
0^109^B2091178
"RTN","XMUT4A",1,0)
XMUT4A ;ISC-SF/GMB- Integrity Checker ;06/29/99  15:17
"RTN","XMUT4A",2,0)
 ;;7.1;MailMan;**34,55,50**;Jun 02, 1994
"RTN","XMUT4A",3,0)
ADDITC(XMDUZ,XMK,XMZ,XMKZ) ; "C" xref, but msg not in bskt.  Fix it.
"RTN","XMUT4A",4,0)
 S ^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)=XMZ_U_XMKZ_U_$S($D(^XMB(3.7,XMDUZ,"N0",XMK,XMZ)):"1",$D(^XMB(3.7,XMDUZ,"N",XMK,XMZ)):"1",1:"")
"RTN","XMUT4A",5,0)
 S:'$D(^XMB(3.7,"M",XMZ,XMDUZ,XMK)) ^XMB(3.7,"M",XMZ,XMDUZ,XMK)=""
"RTN","XMUT4A",6,0)
 Q
"RTN","XMUT4A",7,0)
ADDITM(XMDUZ,XMK,XMZ,XMKZ) ; "M" xref, but msg not in bskt.  Fix it.
"RTN","XMUT4A",8,0)
 ; out: XMKZ
"RTN","XMUT4A",9,0)
 S XMKZ=$$GETXMKZ(XMDUZ,XMK,XMZ)
"RTN","XMUT4A",10,0)
 D ADDITC(XMDUZ,XMK,XMZ,XMKZ)
"RTN","XMUT4A",11,0)
 Q
"RTN","XMUT4A",12,0)
ADDITN(XMDUZ,XMTYPE,XMK,XMZ) ; "N" or "N0" xref, but msg not in bskt.  Fix it.
"RTN","XMUT4A",13,0)
 N XMKZ
"RTN","XMUT4A",14,0)
 S XMKZ=$$GETXMKZ(XMDUZ,XMK,XMZ)
"RTN","XMUT4A",15,0)
 S ^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)=XMZ_U_XMKZ_"^1"
"RTN","XMUT4A",16,0)
 S:'$D(^XMB(3.7,"M",XMZ,XMDUZ,XMK)) ^XMB(3.7,"M",XMZ,XMDUZ,XMK)=""
"RTN","XMUT4A",17,0)
 Q
"RTN","XMUT4A",18,0)
GETXMKZ(XMDUZ,XMK,XMZ) ; Find or create the message's basket sequence number.
"RTN","XMUT4A",19,0)
 N XMKZ
"RTN","XMUT4A",20,0)
 S XMKZ=0
"RTN","XMUT4A",21,0)
 F  S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ)) Q:'XMKZ  Q:$D(^(XMKZ,XMZ))
"RTN","XMUT4A",22,0)
 Q:XMKZ XMKZ
"RTN","XMUT4A",23,0)
 L +^XMB(3.7,XMDUZ,2,XMK)
"RTN","XMUT4A",24,0)
 S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",""),-1)+1
"RTN","XMUT4A",25,0)
 S ^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,XMZ)=""
"RTN","XMUT4A",26,0)
 L -^XMB(3.7,XMDUZ,2,XMK)
"RTN","XMUT4A",27,0)
 Q XMKZ
"RTN","XMUT4B")
0^110^B78291009
"RTN","XMUT4B",1,0)
XMUT4B ;(WASH ISC)/CAP-INTEGRITY CHECKER ;09/22/98  10:58
"RTN","XMUT4B",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMUT4B",3,0)
SUMMARY ;
"RTN","XMUT4B",4,0)
 W !!,"Summary of Integrity Check"
"RTN","XMUT4B",5,0)
 I '$D(XMERROR) W !!,"No errors to report." Q
"RTN","XMUT4B",6,0)
 D:$E($O(XMERROR(99)),1)=1 SUM
"RTN","XMUT4B",7,0)
 D:$E($O(XMERROR(199)),1)=2 SUM^XMUT4BA
"RTN","XMUT4B",8,0)
 K XMERROR
"RTN","XMUT4B",9,0)
 Q
"RTN","XMUT4B",10,0)
SUM ;
"RTN","XMUT4B",11,0)
 W !!,"^XMB(3.7, MAILBOX file"
"RTN","XMUT4B",12,0)
 S XMERRNUM=0
"RTN","XMUT4B",13,0)
 F  S XMERRNUM=$O(XMERROR(XMERRNUM)) Q:'XMERRNUM!(XMERRNUM>199)  D
"RTN","XMUT4B",14,0)
 . W !!,"Type ",$J(XMERRNUM,3)," errors=",XMERROR(XMERRNUM)
"RTN","XMUT4B",15,0)
 . D DESCRIBE(XMERRNUM)
"RTN","XMUT4B",16,0)
 Q
"RTN","XMUT4B",17,0)
DESCRIBE(XMERRNUM) ; ERROR TYPE DICTIONARY
"RTN","XMUT4B",18,0)
 N I,XMLINE
"RTN","XMUT4B",19,0)
 F I=0:1 S XMLINE=$T(@XMERRNUM+I) Q:XMLINE=""!(XMLINE[";;;;")  D
"RTN","XMUT4B",20,0)
 . W !,?4,$P(XMLINE,";;",2)
"RTN","XMUT4B",21,0)
 Q
"RTN","XMUT4B",22,0)
101 ;;Msg in basket, but not in Message file: removed from basket.  *FIXED*
"RTN","XMUT4B",23,0)
 ;;A message in a basket points to a non-existent message in the
"RTN","XMUT4B",24,0)
 ;;message file.
"RTN","XMUT4B",25,0)
 ;;To fix this, the message is removed from the basket.
"RTN","XMUT4B",26,0)
 ;;If left alone, the message would have been removed from the basket
"RTN","XMUT4B",27,0)
 ;;when the user tried to access the message.
"RTN","XMUT4B",28,0)
 ;;;;
"RTN","XMUT4B",29,0)
102 ;;Msg in basket, but no seq #: seq # created.  *FIXED*
"RTN","XMUT4B",30,0)
 ;;A message in a basket has no sequence number.
"RTN","XMUT4B",31,0)
 ;;To fix this, a sequence number was created to place the message at
"RTN","XMUT4B",32,0)
 ;;the end of the basket.
"RTN","XMUT4B",33,0)
 ;;If left alone, the user would have had difficulty locating this
"RTN","XMUT4B",34,0)
 ;;message.
"RTN","XMUT4B",35,0)
 ;;;;
"RTN","XMUT4B",36,0)
103 ;;Msg in basket, but no .01 field: .01 field created.  *FIXED*
"RTN","XMUT4B",37,0)
 ;;A message in a basket has no message number in its .01 field.
"RTN","XMUT4B",38,0)
 ;;To fix this, its message number (from the IEN) was placed in the
"RTN","XMUT4B",39,0)
 ;;.01 field
"RTN","XMUT4B",40,0)
 ;;If left alone, the MailMan would have had difficulty dealing with
"RTN","XMUT4B",41,0)
 ;;this message.
"RTN","XMUT4B",42,0)
 ;;;;
"RTN","XMUT4B",43,0)
111 ;;Msg in basket, but no M xref: xref created.  *FIXED*
"RTN","XMUT4B",44,0)
 ;;A message in a basket has no "M" cross-reference.
"RTN","XMUT4B",45,0)
 ;;To fix this, the "M" cross-reference has been created.
"RTN","XMUT4B",46,0)
 ;;If left alone, the 'unreferenced messages' purge might
"RTN","XMUT4B",47,0)
 ;;have purged the message.
"RTN","XMUT4B",48,0)
 ;;(This part of the integrity checker is called by XMAUTOPURGE
"RTN","XMUT4B",49,0)
 ;;before it actually purges.)
"RTN","XMUT4B",50,0)
 ;;;;
"RTN","XMUT4B",51,0)
112 ;;Msg in basket, but no C xref: xref created.  *FIXED*
"RTN","XMUT4B",52,0)
 ;;A message in a basket has a sequence number,
"RTN","XMUT4B",53,0)
 ;;but it is not in the "C" cross-reference for that basket.
"RTN","XMUT4B",54,0)
 ;;To fix this, the "C" cross-reference has been created, using
"RTN","XMUT4B",55,0)
 ;;the message's sequence number.
"RTN","XMUT4B",56,0)
 ;;If left alone, the user would have had difficulty locating this
"RTN","XMUT4B",57,0)
 ;;message.
"RTN","XMUT4B",58,0)
 ;;;;
"RTN","XMUT4B",59,0)
113 ;;New msg in basket, but no N0 xref: xref created.  *FIXED*
"RTN","XMUT4B",60,0)
 ;;A message in a basket is flagged new,
"RTN","XMUT4B",61,0)
 ;;but it is not in the "N0" cross-reference for that basket.
"RTN","XMUT4B",62,0)
 ;;To fix this, the "N0" cross-reference has been created.
"RTN","XMUT4B",63,0)
 ;;If left alone, the message would not have appeared new to the user.
"RTN","XMUT4B",64,0)
 ;;;;
"RTN","XMUT4B",65,0)
121 ;;M xref, but not in bskt: xref killed.  *FIXED*
"RTN","XMUT4B",66,0)
 ;;A message exists in the "M" cross-reference,
"RTN","XMUT4B",67,0)
 ;;but not in the basket to which it is pointing.
"RTN","XMUT4B",68,0)
 ;;To fix this, the "M" cross-reference has been killed.
"RTN","XMUT4B",69,0)
 ;;If left alone, the "M" cross-reference would have prevented the
"RTN","XMUT4B",70,0)
 ;;message from being purged during the unreferenced messages purge.
"RTN","XMUT4B",71,0)
 ;;;;
"RTN","XMUT4B",72,0)
122 ;;C xref, but msg not in basket: msg put in basket.  *FIXED*
"RTN","XMUT4B",73,0)
 ;;A message exists in the "C" cross-reference,
"RTN","XMUT4B",74,0)
 ;;but not in the user's basket.
"RTN","XMUT4B",75,0)
 ;;To fix this, the message has been put in the basket at the
"RTN","XMUT4B",76,0)
 ;;sequence number indicated by the C xref.
"RTN","XMUT4B",77,0)
 ;;If left alone, there would have been problems when the user
"RTN","XMUT4B",78,0)
 ;;tried to access the message.
"RTN","XMUT4B",79,0)
 ;;;;
"RTN","XMUT4B",80,0)
123 ;;C xref, but no msg seq #: seq # set using xref.  *FIXED*
"RTN","XMUT4B",81,0)
 ;;A message exists in the "C" cross-reference,
"RTN","XMUT4B",82,0)
 ;;but the sequence number is null in the basket entry.
"RTN","XMUT4B",83,0)
 ;;To fix this, the message sequence number has been set using
"RTN","XMUT4B",84,0)
 ;;the sequence number indicated by the C xref.
"RTN","XMUT4B",85,0)
 ;;If left alone, there would have been problems when the user
"RTN","XMUT4B",86,0)
 ;;tried to access the message.
"RTN","XMUT4B",87,0)
 ;;;;
"RTN","XMUT4B",88,0)
124 ;;C xref does not match msg seq #: xref killed.  *FIXED*
"RTN","XMUT4B",89,0)
 ;;A message exists in the "C" cross-reference,
"RTN","XMUT4B",90,0)
 ;;but the sequence number in the basket entry differs from
"RTN","XMUT4B",91,0)
 ;;the sequence number in the "C" cross-reference.
"RTN","XMUT4B",92,0)
 ;;To fix this, the "C" cross-reference has been killed.
"RTN","XMUT4B",93,0)
 ;;If left alone, there would have been problems when the user
"RTN","XMUT4B",94,0)
 ;;tried to access the message.
"RTN","XMUT4B",95,0)
 ;;;;
"RTN","XMUT4B",96,0)
125 ;;C xref duplicate seq #s: basket reseq'd.  *FIXED*
"RTN","XMUT4B",97,0)
 ;;More than one message has the same sequence number.
"RTN","XMUT4B",98,0)
 ;;To fix this, the entire basket was reseqenced.
"RTN","XMUT4B",99,0)
 ;;If left alone, there would have been problems when the user
"RTN","XMUT4B",100,0)
 ;;tried to access the messages with the duplicate sequence numbers.
"RTN","XMUT4B",101,0)
 ;;;;
"RTN","XMUT4B",102,0)
126 ;;N0 xref, but not in basket: put in basket.  *FIXED*
"RTN","XMUT4B",103,0)
 ;;A message exists in the "N0" cross-reference,
"RTN","XMUT4B",104,0)
 ;;but not in the user's basket to which it is pointing.
"RTN","XMUT4B",105,0)
 ;;To fix this, the message has been put in the user's basket.
"RTN","XMUT4B",106,0)
 ;;If left alone, there might have been problems when the user
"RTN","XMUT4B",107,0)
 ;;tried to access the message.
"RTN","XMUT4B",108,0)
 ;;;;
"RTN","XMUT4B",109,0)
127 ;;N0 xref, but msg not flagged new: flag set.  *FIXED*
"RTN","XMUT4B",110,0)
 ;;A message exists in the "N0" cross-reference,
"RTN","XMUT4B",111,0)
 ;;but the message isn't flagged new
"RTN","XMUT4B",112,0)
 ;;To fix this, the message new flag has been set.
"RTN","XMUT4B",113,0)
 ;;If left alone, the message might have remained new even after
"RTN","XMUT4B",114,0)
 ;;the user read it.
"RTN","XMUT4B",115,0)
 ;;;;
"RTN","XMUT4B",116,0)
131 ;;No basket zero node or B xref: 0 node created.  *FIXED*
"RTN","XMUT4B",117,0)
 ;;A basket has no zero node or "B" cross-reference.
"RTN","XMUT4B",118,0)
 ;;To fix this, a zero node is created using and the basket is
"RTN","XMUT4B",119,0)
 ;;named "* No Name *".
"RTN","XMUT4B",120,0)
 ;;If left alone, there might have been problems when the user
"RTN","XMUT4B",121,0)
 ;;tried to access the basket.
"RTN","XMUT4B",122,0)
 ;;;;
"RTN","XMUT4B",123,0)
132 ;;Basket zero node, but no name or B xref: 0 node created.  *FIXED*
"RTN","XMUT4B",124,0)
 ;;A basket has a zero node, but its name is null and it has
"RTN","XMUT4B",125,0)
 ;;no "B" cross-reference.
"RTN","XMUT4B",126,0)
 ;;To fix this, the basket is named "* No Name *".
"RTN","XMUT4B",127,0)
 ;;If left alone, there might have been problems when the user
"RTN","XMUT4B",128,0)
 ;;tried to access the basket.
"RTN","XMUT4B",129,0)
 ;;;;
"RTN","XMUT4B",130,0)
133 ;;No msg multiple zero node: 0 node created.  *FIXED*
"RTN","XMUT4B",131,0)
 ;;A basket has no message multiple zero node.
"RTN","XMUT4B",132,0)
 ;;To fix this, the message multiple zero node is created.
"RTN","XMUT4B",133,0)
 ;;If left alone, there might have been problems when the user
"RTN","XMUT4B",134,0)
 ;;tried to access the basket.
"RTN","XMUT4B",135,0)
 ;;;;
"RTN","XMUT4B",136,0)
151 ;;B xref, but basket name null: name set using xref.  *FIXED*
"RTN","XMUT4B",137,0)
 ;;A basket has no name.
"RTN","XMUT4B",138,0)
 ;;To fix this, the basket is named using the basket name from the
"RTN","XMUT4B",139,0)
 ;;"B" cross-reference.
"RTN","XMUT4B",140,0)
 ;;If left alone, there might have been problems when the user
"RTN","XMUT4B",141,0)
 ;;tried to access the basket.
"RTN","XMUT4B",142,0)
 ;;;;
"RTN","XMUT4B",143,0)
152 ;;B xref, but no basket zero node: 0 node created.  *FIXED*
"RTN","XMUT4B",144,0)
 ;;A basket has no zero node.
"RTN","XMUT4B",145,0)
 ;;To fix this, a zero node is created using the basket name from the
"RTN","XMUT4B",146,0)
 ;;"B" cross-reference.
"RTN","XMUT4B",147,0)
 ;;If left alone, there might have been problems when the user
"RTN","XMUT4B",148,0)
 ;;tried to access the basket.
"RTN","XMUT4B",149,0)
 ;;;;
"RTN","XMUT4B",150,0)
160 ;;Xmit basket<1000 has domain name: investigate msgs.  *WARNING*
"RTN","XMUT4B",151,0)
 ;;One of the Postmaster's baskets with an IEN less than 1000
"RTN","XMUT4B",152,0)
 ;;has the same name as of one of the domains in the DOMAIN file.
"RTN","XMUT4B",153,0)
 ;;Usually, such baskets have IENs which are the DOMAIN IEN+1000 and
"RTN","XMUT4B",154,0)
 ;;contain messages which are queued to be transmitted to the domain.
"RTN","XMUT4B",155,0)
 ;;We must investigate the messages in this fake domain basket.
"RTN","XMUT4B",156,0)
 ;;;;
"RTN","XMUT4B",157,0)
161 ;;Msg in xmit basket<1000 not addressed to Postmaster: deleted.  *FIXED*
"RTN","XMUT4B",158,0)
 ;;A message in a fake domain basket is not addressed to the Postmaster,
"RTN","XMUT4B",159,0)
 ;;and it is not queued to go to the domain,
"RTN","XMUT4B",160,0)
 ;;so it has been deleted from the basket.
"RTN","XMUT4B",161,0)
 ;;;;
"RTN","XMUT4B",162,0)
162 ;;Msg in xmit basket<1000: copied to proper bskt.  *FIXED*
"RTN","XMUT4B",163,0)
 ;;A message in a fake domain basket is addressed to the Postmaster,
"RTN","XMUT4B",164,0)
 ;;and is queued to go to the domain, but it is not in the proper
"RTN","XMUT4B",165,0)
 ;;transmit basket.  It has been copied to the proper transmit basket.
"RTN","XMUT4B",166,0)
 ;;;;
"RTN","XMUT4B",167,0)
163 ;;Msg in xmit basket<1000: moved to proper bskt.  *FIXED*
"RTN","XMUT4B",168,0)
 ;;A message in a fake domain basket is not addressed to the Postmaster,
"RTN","XMUT4B",169,0)
 ;;and is queued to go to the domain, but it is not in the proper
"RTN","XMUT4B",170,0)
 ;;transmit basket.  It has been moved to the proper transmit basket.
"RTN","XMUT4B",171,0)
 ;;;;
"RTN","XMUT4B",172,0)
164 ;;Xmit basket<1000 with no msgs: deleted.  *FIXED*
"RTN","XMUT4B",173,0)
 ;;A fake domain basket has no messages, so to avoid further confusion,
"RTN","XMUT4B",174,0)
 ;;it has been deleted.
"RTN","XMUT4B",175,0)
 ;;;;
"RTN","XMUT4BA")
0^111^B59134763
"RTN","XMUT4BA",1,0)
XMUT4BA ;(WASH ISC)/CAP-INTEGRITY CHECKER ;06/14/99  16:50
"RTN","XMUT4BA",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMUT4BA",3,0)
 Q
"RTN","XMUT4BA",4,0)
SUM ;
"RTN","XMUT4BA",5,0)
 W !!,"^XMB(3.9, MESSAGE file"
"RTN","XMUT4BA",6,0)
 S XMERRNUM=199
"RTN","XMUT4BA",7,0)
 F  S XMERRNUM=$O(XMERROR(XMERRNUM)) Q:'XMERRNUM!(XMERRNUM>299)  D
"RTN","XMUT4BA",8,0)
 . W !!,"Type ",$J(XMERRNUM,3)," errors=",XMERROR(XMERRNUM)
"RTN","XMUT4BA",9,0)
 . D DESCRIBE(XMERRNUM)
"RTN","XMUT4BA",10,0)
 Q
"RTN","XMUT4BA",11,0)
DESCRIBE(XMERRNUM) ; ERROR TYPE DICTIONARY
"RTN","XMUT4BA",12,0)
 N I,XMLINE
"RTN","XMUT4BA",13,0)
 F I=0:1 S XMLINE=$T(@XMERRNUM+I) Q:XMLINE=""!(XMLINE[";;;;")  D
"RTN","XMUT4BA",14,0)
 . W !,?4,$P(XMLINE,";;",2)
"RTN","XMUT4BA",15,0)
 Q
"RTN","XMUT4BA",16,0)
201 ;;Msg has bad/no 0 node *NOT FIXED*
"RTN","XMUT4BA",17,0)
 ;;A message has a bad/no zero node.
"RTN","XMUT4BA",18,0)
 ;;A message like this usually is not owned by anybody and can be
"RTN","XMUT4BA",19,0)
 ;;deleted.  Entries like this can be created by Network Mail when
"RTN","XMUT4BA",20,0)
 ;;your site is receiving a message, and the transmission ends
"RTN","XMUT4BA",21,0)
 ;;ungracefully before MailMan can recognize this and kill off the
"RTN","XMUT4BA",22,0)
 ;;incomplete transmission.
"RTN","XMUT4BA",23,0)
 ;;XMAUTOPURGE will usually purge this message.
"RTN","XMUT4BA",24,0)
 ;;;;
"RTN","XMUT4BA",25,0)
202 ;;Msg has no subject *FIXED*
"RTN","XMUT4BA",26,0)
 ;;A message has no subject.
"RTN","XMUT4BA",27,0)
 ;;This can happen with incoming network mail.
"RTN","XMUT4BA",28,0)
 ;;To fix this, the subject has been set to: "* No Subject *"
"RTN","XMUT4BA",29,0)
 ;;;;
"RTN","XMUT4BA",30,0)
203 ;;Msg subject <3 or >65 *NOT FIXED*
"RTN","XMUT4BA",31,0)
 ;;A message's subject is shorter or longer than the current standard
"RTN","XMUT4BA",32,0)
 ;;allows.
"RTN","XMUT4BA",33,0)
 ;;Most of these errors were created by versions of MailMan prior
"RTN","XMUT4BA",34,0)
 ;;to version 3.1 and do no harm.
"RTN","XMUT4BA",35,0)
 ;;;;
"RTN","XMUT4BA",36,0)
204 ;;Msg subject has no B xref *FIXED*
"RTN","XMUT4BA",37,0)
 ;;A message's subject has no "B" cross-reference.
"RTN","XMUT4BA",38,0)
 ;;To fix this, the "B" cross-reference is created.
"RTN","XMUT4BA",39,0)
 ;;If left alone, one could not have looked up this message by its
"RTN","XMUT4BA",40,0)
 ;;subject.
"RTN","XMUT4BA",41,0)
 ;;;;
"RTN","XMUT4BA",42,0)
205 ;;Msg subject B xref is too long *FIXED*
"RTN","XMUT4BA",43,0)
 ;;A message's subject "B" cross-reference is longer than in the DD.
"RTN","XMUT4BA",44,0)
 ;;To fix this, the "B" cross-reference is shortened.
"RTN","XMUT4BA",45,0)
 ;;If left alone, the "B" cross-reference would not have been killed
"RTN","XMUT4BA",46,0)
 ;;when the message was purged.
"RTN","XMUT4BA",47,0)
 ;;;;
"RTN","XMUT4BA",48,0)
206 ;;Msg has no sender *FIXED*
"RTN","XMUT4BA",49,0)
 ;;A message has no sender.
"RTN","XMUT4BA",50,0)
 ;;To fix this, the sender has been set to: "* No name *"
"RTN","XMUT4BA",51,0)
 ;;;;
"RTN","XMUT4BA",52,0)
207 ;;Msg has no date/time *FIXED*
"RTN","XMUT4BA",53,0)
 ;;A message has no date/time.
"RTN","XMUT4BA",54,0)
 ;;To fix this, the date/time has been set to: DT
"RTN","XMUT4BA",55,0)
 ;;;;
"RTN","XMUT4BA",56,0)
208 ;;Msg has no local create date *FIXED*
"RTN","XMUT4BA",57,0)
 ;;A message has no local create date.
"RTN","XMUT4BA",58,0)
 ;;This date is used by the message purge processes.
"RTN","XMUT4BA",59,0)
 ;;To fix this, the local create date has been set to the date
"RTN","XMUT4BA",60,0)
 ;;that the message was sent.
"RTN","XMUT4BA",61,0)
 ;;;;
"RTN","XMUT4BA",62,0)
209 ;;Msg local create date has no C xref *FIXED*
"RTN","XMUT4BA",63,0)
 ;;A message's local create date has no "C" cross-reference.
"RTN","XMUT4BA",64,0)
 ;;To fix this, the "C" cross-reference is created.
"RTN","XMUT4BA",65,0)
 ;;If left alone, the purge process would miss it.
"RTN","XMUT4BA",66,0)
 ;;;;
"RTN","XMUT4BA",67,0)
211 ;;Msg thinks it's a response to itself *FIXED*
"RTN","XMUT4BA",68,0)
 ;;A message points to itself in piece 8 of its zero node.
"RTN","XMUT4BA",69,0)
 ;;To fix this, piece 8 of the message zero node has been made null.
"RTN","XMUT4BA",70,0)
 ;;Run XMAUTOPURGE to purge the response.
"RTN","XMUT4BA",71,0)
 ;;;;
"RTN","XMUT4BA",72,0)
212 ;;Response has no original msg *FIXED*
"RTN","XMUT4BA",73,0)
 ;;A message seems to be a response, but the message to which it is
"RTN","XMUT4BA",74,0)
 ;;responding doesn't seem to be there.
"RTN","XMUT4BA",75,0)
 ;;Each response is associated with a message.  The response has the
"RTN","XMUT4BA",76,0)
 ;;original message number in piece 8 of its 0 node.  Local responses
"RTN","XMUT4BA",77,0)
 ;;have their subjects set to "R"_<original message number>.
"RTN","XMUT4BA",78,0)
 ;;(e.g. R1233 points to and is a response to message number 1233).
"RTN","XMUT4BA",79,0)
 ;;
"RTN","XMUT4BA",80,0)
 ;;In MailMan 3.2 and later, users are not allowed to use this
"RTN","XMUT4BA",81,0)
 ;;syntax for message subjects, in order to avoid contradictions
"RTN","XMUT4BA",82,0)
 ;;in the database.  This was not true in MailMan 3.09 and
"RTN","XMUT4BA",83,0)
 ;;earlier versions.
"RTN","XMUT4BA",84,0)
 ;;
"RTN","XMUT4BA",85,0)
 ;;A real message will usually have recipients
"RTN","XMUT4BA",86,0)
 ;;and be pointed at from ^XMB(3.7,"M",XMZ,...
"RTN","XMUT4BA",87,0)
 ;;
"RTN","XMUT4BA",88,0)
 ;;A real response will not have responses, although it may have recipients.
"RTN","XMUT4BA",89,0)
 ;;
"RTN","XMUT4BA",90,0)
 ;;To fix this, piece 8 of the response zero node has been made null.
"RTN","XMUT4BA",91,0)
 ;;Run XMAUTOPURGE to get rid of responses which don't have their
"RTN","XMUT4BA",92,0)
 ;;original messages.
"RTN","XMUT4BA",93,0)
 ;;;;
"RTN","XMUT4BA",94,0)
213 ;;Response not in response chain of original msg *FIXED*
"RTN","XMUT4BA",95,0)
 ;;A message seems to be a response, but the message to which it
"RTN","XMUT4BA",96,0)
 ;;claims to be responding does not have it in its response multiple.
"RTN","XMUT4BA",97,0)
 ;;To fix this, piece 8 of the response zero node has been made null.
"RTN","XMUT4BA",98,0)
 ;;Run XMAUTOPURGE to purge the response.
"RTN","XMUT4BA",99,0)
 ;;;;
"RTN","XMUT4BA",100,0)
216 ;;Response has no original msg *NOT FIXED*
"RTN","XMUT4BA",101,0)
 ;;A message seems to be a response, because its subject is Rnnn, but
"RTN","XMUT4BA",102,0)
 ;;the message to which it claims to be responding doesn't seem to be
"RTN","XMUT4BA",103,0)
 ;;there, and piece 8 of the response zero node is null.
"RTN","XMUT4BA",104,0)
 ;;Run XMAUTOPURGE to purge the response.
"RTN","XMUT4BA",105,0)
 ;;;;
"RTN","XMUT4BA",106,0)
217 ;;Response not in response chain of original msg *NOT FIXED*
"RTN","XMUT4BA",107,0)
 ;;A message seems to be a response, because its subject is Rnnn, but
"RTN","XMUT4BA",108,0)
 ;;the message to which it claims to be responding doesn't have it in
"RTN","XMUT4BA",109,0)
 ;;its response multiple, and piece 8 of the response zero node is null.
"RTN","XMUT4BA",110,0)
 ;;Run XMAUTOPURGE to purge the response.
"RTN","XMUT4BA",111,0)
 ;;;;
"RTN","XMUT4BA",112,0)
218 ;;Response didn't point to original msg in piece 8 *FIXED*
"RTN","XMUT4BA",113,0)
 ;;A message seems to be a response, because its subject is Rnnn, and
"RTN","XMUT4BA",114,0)
 ;;the message to which it claims to be responding does have it in
"RTN","XMUT4BA",115,0)
 ;;its response multiple, but piece 8 of the response zero node is null.
"RTN","XMUT4BA",116,0)
 ;;To fix this, piece 8 of the response zero node has been made to
"RTN","XMUT4BA",117,0)
 ;;point to its original message.
"RTN","XMUT4BA",118,0)
 ;;;;
"RTN","XMUT4BA",119,0)
221 ;;Recip null and no C xref *NOT FIXED*
"RTN","XMUT4BA",120,0)
 ;;A message recipient is null, and there is no "C" cross-reference
"RTN","XMUT4BA",121,0)
 ;;from which to regenerate the recipient.
"RTN","XMUT4BA",122,0)
 ;;This should be fixed manually.
"RTN","XMUT4BA",123,0)
 ;;;;
"RTN","XMUT4BA",124,0)
222 ;;Recip has no C xref: xref created *FIXED*
"RTN","XMUT4BA",125,0)
 ;;A message recipient has no "C" cross-reference.
"RTN","XMUT4BA",126,0)
 ;;To fix this the "C" cross-reference is created.
"RTN","XMUT4BA",127,0)
 ;;If left alone, responses might not have gone to the recipient.
"RTN","XMUT4BA",128,0)
 ;;;;
"RTN","XMUT4BA",129,0)
223 ;;Recip C xref is too long: xref shortened *FIXED*
"RTN","XMUT4BA",130,0)
 ;;A message recipient has a "C" cross-reference which is longer
"RTN","XMUT4BA",131,0)
 ;;than the DD expects.
"RTN","XMUT4BA",132,0)
 ;;To fix this the "C" cross-reference is shortened.
"RTN","XMUT4BA",133,0)
 ;;If left alone, nothing bad would have happened.
"RTN","XMUT4BA",134,0)
 ;;;;
"RTN","XMUT4BA",135,0)
231 ;;C xref, but recip null: fixed using numeric C xref *FIXED*
"RTN","XMUT4BA",136,0)
 ;;A message recipient is null, but it does have a numeric
"RTN","XMUT4BA",137,0)
 ;;"C" cross-reference, meaning that the recipient is local.
"RTN","XMUT4BA",138,0)
 ;;To fix this, the recipient is set to user pointed to by the
"RTN","XMUT4BA",139,0)
 ;;"C" cross-reference.
"RTN","XMUT4BA",140,0)
 ;;;;
"RTN","XMUT4BA",141,0)
232 ;;C xref, but recip null and C xref not numeric *NOT FIXED*
"RTN","XMUT4BA",142,0)
 ;;A message recipient is null, but it does have a "C" cross-reference.
"RTN","XMUT4BA",143,0)
 ;;However, the "C" cross-reference is not numeric, meaning that the
"RTN","XMUT4BA",144,0)
 ;;recipient is remote.  The "C" cross-reference may not have the
"RTN","XMUT4BA",145,0)
 ;;full recipient address, so we do not fix it.
"RTN","XMUT4BA",146,0)
 ;;This should be fixed manually.
"RTN","XMUT4BA",147,0)
 ;;;;
"RTN","XMUT4BA",148,0)
233 ;;C xref does not match recip: xref killed *FIXED*
"RTN","XMUT4BA",149,0)
 ;;A "C" cross-reference does not match the recipient value.
"RTN","XMUT4BA",150,0)
 ;;To fix this, the "C" cross-reference is killed.
"RTN","XMUT4BA",151,0)
 ;;;;
"RTN","XMUT4C")
0^123^B26644332
"RTN","XMUT4C",1,0)
XMUT4C ;(WASH ISC)/CAP-INTEGRITY CHECKER ;06/14/99  16:40
"RTN","XMUT4C",2,0)
 ;;7.1;MailMan;**10,22,50**;Jun 02, 1994
"RTN","XMUT4C",3,0)
MESSAGE ;
"RTN","XMUT4C",4,0)
 N XMZ,XMCNT,XMZREC,XMCRE8
"RTN","XMUT4C",5,0)
 W !!,"Checking ^XMB(3.9, MESSAGE file",!
"RTN","XMUT4C",6,0)
 S (XMZ,XMCNT)=0
"RTN","XMUT4C",7,0)
 F  S XMZ=$O(^XMB(3.9,XMZ)) Q:XMZ'>0  D
"RTN","XMUT4C",8,0)
 . S XMCNT=XMCNT+1
"RTN","XMUT4C",9,0)
 . I '$D(ZTQUEUED),XMCNT#5000=0 W:$X>40 ! W XMCNT,"."
"RTN","XMUT4C",10,0)
 . S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMUT4C",11,0)
 . I "^^^^^^^^"[XMZREC D
"RTN","XMUT4C",12,0)
 . . D ERR(XMZ,201,"Msg has bad/no 0 node: not fixed")
"RTN","XMUT4C",13,0)
 . E  D
"RTN","XMUT4C",14,0)
 . . D SUBJ(XMZ,XMZREC)
"RTN","XMUT4C",15,0)
 . . I $P(XMZREC,U,2)="" D
"RTN","XMUT4C",16,0)
 . . . S $P(^XMB(3.9,XMZ,0),U,2)=$$EZBLD^DIALOG(34009)
"RTN","XMUT4C",17,0)
 . . . D ERR(XMZ,206,"Msg has no sender: fixed")
"RTN","XMUT4C",18,0)
 . . I $P(XMZREC,U,3)="" D
"RTN","XMUT4C",19,0)
 . . . S $P(^XMB(3.9,XMZ,0),U,3)=DT
"RTN","XMUT4C",20,0)
 . . . D ERR(XMZ,207,"Msg has no date/time: fixed")
"RTN","XMUT4C",21,0)
 . D CRE8DT(XMZ,$P(XMZREC,U,3))
"RTN","XMUT4C",22,0)
 . D RESP(XMZ,XMZREC)
"RTN","XMUT4C",23,0)
 . D:$D(^XMB(3.9,XMZ,1)) RECIP(XMZ)
"RTN","XMUT4C",24,0)
 W !!,XMCNT," Messages processed."
"RTN","XMUT4C",25,0)
 I XMCNT=$P(^XMB(3.9,0),U,4) W "  Zero node is OK." Q
"RTN","XMUT4C",26,0)
 L +^XMB(3.9,0)
"RTN","XMUT4C",27,0)
 S $P(^XMB(3.9,0),U,4)=XMCNT
"RTN","XMUT4C",28,0)
 L -^XMB(3.9,0)
"RTN","XMUT4C",29,0)
 W "  I reset the zero node."
"RTN","XMUT4C",30,0)
 Q
"RTN","XMUT4C",31,0)
SUBJ(XMZ,XMZREC) ;
"RTN","XMUT4C",32,0)
 N XMSUBJ
"RTN","XMUT4C",33,0)
 S XMSUBJ=$P(XMZREC,U)
"RTN","XMUT4C",34,0)
 I XMSUBJ="" D
"RTN","XMUT4C",35,0)
 . S XMSUBJ=$$EZBLD^DIALOG(34012)
"RTN","XMUT4C",36,0)
 . S $P(^XMB(3.9,XMZ,0),U,1)=XMSUBJ
"RTN","XMUT4C",37,0)
 . S ^XMB(3.9,"B",XMSUBJ,XMZ)=""
"RTN","XMUT4C",38,0)
 . D ERR(XMZ,202,"Msg has no subject: fixed")
"RTN","XMUT4C",39,0)
 I $L(XMSUBJ)<3!($L(XMSUBJ)>65) D ERR(XMZ,203,"Msg subject <3 or >65: not fixed")
"RTN","XMUT4C",40,0)
 I '$D(^XMB(3.9,"B",$E(XMSUBJ,1,30),XMZ)) D
"RTN","XMUT4C",41,0)
 . I $L(XMSUBJ)>30,$D(^XMB(3.9,"B",XMSUBJ,XMZ)) D
"RTN","XMUT4C",42,0)
 . . K ^XMB(3.9,"B",XMSUBJ,XMZ)
"RTN","XMUT4C",43,0)
 . . D ERR(XMZ,205,"Subject B xref too long: xref shortened")
"RTN","XMUT4C",44,0)
 . E  D ERR(XMZ,204,"Subject has no B xref: xref created")
"RTN","XMUT4C",45,0)
 . S ^XMB(3.9,"B",$E(XMSUBJ,1,30),XMZ)=""
"RTN","XMUT4C",46,0)
 Q
"RTN","XMUT4C",47,0)
RESP(XMZ,XMZREC) ;
"RTN","XMUT4C",48,0)
 N XMZO
"RTN","XMUT4C",49,0)
 I $P(XMZREC,U,8) D  Q
"RTN","XMUT4C",50,0)
 . S XMZO=$P(XMZREC,U,8)
"RTN","XMUT4C",51,0)
 . I XMZO=XMZ D  Q
"RTN","XMUT4C",52,0)
 . . D ERR(XMZ,211,"Message thinks it's a response to itself: fixed")
"RTN","XMUT4C",53,0)
 . . S $P(^XMB(3.9,XMZ,0),U,8)=""
"RTN","XMUT4C",54,0)
 . I '$D(^XMB(3.9,XMZO,0)) D  Q
"RTN","XMUT4C",55,0)
 . . D ERR(XMZ,212,"No original message "_XMZO_" for this response: fixed")
"RTN","XMUT4C",56,0)
 . . S $P(^XMB(3.9,XMZ,0),U,8)=""
"RTN","XMUT4C",57,0)
 . I $$ATTACHED(XMZO,XMZ) Q
"RTN","XMUT4C",58,0)
 . D ERR(XMZ,213,"Not in response chain of "_XMZO_": fixed")
"RTN","XMUT4C",59,0)
 . S $P(^XMB(3.9,XMZ,0),U,8)=""
"RTN","XMUT4C",60,0)
 N XMSUBJ
"RTN","XMUT4C",61,0)
 S XMSUBJ=$P(XMZREC,U)
"RTN","XMUT4C",62,0)
 Q:XMSUBJ'?1"R"1.N
"RTN","XMUT4C",63,0)
 Q:$P(XMZREC,U,2)["@"
"RTN","XMUT4C",64,0)
 S XMZO=+$E(XMSUBJ,2,99)
"RTN","XMUT4C",65,0)
 I '$D(^XMB(3.9,XMZO,0)) D  Q
"RTN","XMUT4C",66,0)
 . D ERR(XMZ,216,"No original message "_XMZO_" for this response: not fixed")
"RTN","XMUT4C",67,0)
 I '$$ATTACHED(XMZO,XMZ) D  Q
"RTN","XMUT4C",68,0)
 . D ERR(XMZ,217,"Not in response chain of "_XMZO_": not fixed")
"RTN","XMUT4C",69,0)
 D ERR(XMZ,218,"Piece 8 didn't point to original message "_XMZO_": fixed")
"RTN","XMUT4C",70,0)
 S $P(^XMB(3.9,XMZ,0),U,8)=XMZO
"RTN","XMUT4C",71,0)
 Q
"RTN","XMUT4C",72,0)
ATTACHED(XMZO,XMZ) ; Is XMZ in the response chain of XMZO?
"RTN","XMUT4C",73,0)
 N I
"RTN","XMUT4C",74,0)
 S I=0
"RTN","XMUT4C",75,0)
 F  S I=$O(^XMB(3.9,XMZO,3,I)) Q:'I  Q:$P($G(^(I,0)),U)=XMZ
"RTN","XMUT4C",76,0)
 Q +I
"RTN","XMUT4C",77,0)
CRE8DT(XMZ,XMDATE) ;
"RTN","XMUT4C",78,0)
 S XMCRE8=$P($G(^XMB(3.9,XMZ,.6)),U,1)
"RTN","XMUT4C",79,0)
 I 'XMCRE8 D  Q
"RTN","XMUT4C",80,0)
 . I $P(XMDATE,".",1)?7N S XMDATE=$P(XMDATE,".",1)
"RTN","XMUT4C",81,0)
 . E  I XMDATE="" S XMDATE=DT
"RTN","XMUT4C",82,0)
 . E  D
"RTN","XMUT4C",83,0)
 . . S XMDATE=$$CONVERT^XMXUTIL1(XMDATE)
"RTN","XMUT4C",84,0)
 . . S:XMDATE=-1 XMDATE=DT
"RTN","XMUT4C",85,0)
 . S $P(^XMB(3.9,XMZ,.6),U,1)=XMDATE
"RTN","XMUT4C",86,0)
 . S ^XMB(3.9,"C",XMDATE,XMZ)=""
"RTN","XMUT4C",87,0)
 . D ERR(XMZ,208,"Msg has no local create date: fixed")
"RTN","XMUT4C",88,0)
 I '$D(^XMB(3.9,"C",XMCRE8,XMZ)) D
"RTN","XMUT4C",89,0)
 . S ^XMB(3.9,"C",XMCRE8,XMZ)=""
"RTN","XMUT4C",90,0)
 . D ERR(XMZ,209,"Local create date C xref missing: fixed")
"RTN","XMUT4C",91,0)
 Q
"RTN","XMUT4C",92,0)
RECIP(XMZ) ; Check recipient multiple
"RTN","XMUT4C",93,0)
 N I,XMVAL,XMXREF,XMRECIPS
"RTN","XMUT4C",94,0)
 D CXREF(XMZ)
"RTN","XMUT4C",95,0)
 S (I,XMRECIPS)=0
"RTN","XMUT4C",96,0)
 F  S I=$O(^XMB(3.9,XMZ,1,I)) Q:'I  D
"RTN","XMUT4C",97,0)
 . S XMRECIPS=XMRECIPS+1
"RTN","XMUT4C",98,0)
 . S XMVAL=$P($G(^XMB(3.9,XMZ,1,I,0)),U)
"RTN","XMUT4C",99,0)
 . I XMVAL="" D ERR(XMZ,221,"Recipient "_I_" null, no C xref: not fixed") Q
"RTN","XMUT4C",100,0)
 . Q:$D(^XMB(3.9,XMZ,1,"C",$E(XMVAL,1,30),I))
"RTN","XMUT4C",101,0)
 . I $L(XMVAL)>30,$D(^XMB(3.9,XMZ,1,"C",XMVAL,I)) D  Q
"RTN","XMUT4C",102,0)
 . . ;K ^XMB(3.9,XMZ,1,"C",XMVAL,I)
"RTN","XMUT4C",103,0)
 . . ;D ERR(XMZ,223,"Recipient "_I_" C xref too long: xref shortened")
"RTN","XMUT4C",104,0)
 . . ;S ^XMB(3.9,XMZ,1,"C",$E(XMVAL,1,30),I)=""
"RTN","XMUT4C",105,0)
 . D ERR(XMZ,222,"Recipient "_I_" no C xref: xref created")
"RTN","XMUT4C",106,0)
 . S ^XMB(3.9,XMZ,1,"C",$E(XMVAL,1,30),I)=""
"RTN","XMUT4C",107,0)
 I $D(^XMB(3.9,XMZ,1,0)) S:$P(^XMB(3.9,XMZ,1,0),U,4)'=XMRECIPS $P(^(0),U,4)=XMRECIPS Q
"RTN","XMUT4C",108,0)
 S ^XMB(3.9,XMZ,1,0)="^3.91A^"_I_U_XMRECIPS
"RTN","XMUT4C",109,0)
 Q
"RTN","XMUT4C",110,0)
CXREF(XMZ) ; Check C xref for Recipient multiple
"RTN","XMUT4C",111,0)
 N I,XMVAL,XMXREF
"RTN","XMUT4C",112,0)
 S (I,XMXREF)=""
"RTN","XMUT4C",113,0)
 F  S XMXREF=$O(^XMB(3.9,XMZ,1,"C",XMXREF)) Q:'XMXREF  D
"RTN","XMUT4C",114,0)
 . F  S I=$O(^XMB(3.9,XMZ,1,"C",XMXREF,I)) Q:'I  D
"RTN","XMUT4C",115,0)
 . . S XMVAL=$P($G(^XMB(3.9,XMZ,1,I,0)),U)
"RTN","XMUT4C",116,0)
 . . Q:$E(XMVAL,1,30)=$E(XMXREF,1,30)
"RTN","XMUT4C",117,0)
 . . I XMVAL="" D  Q
"RTN","XMUT4C",118,0)
 . . . I +XMXREF=XMXREF D  Q
"RTN","XMUT4C",119,0)
 . . . . S $P(^XMB(3.9,XMZ,1,I,0),U)=XMXREF
"RTN","XMUT4C",120,0)
 . . . . D ERR(XMZ,231,"C xref, but recip "_I_" null: fixed using numeric xref")
"RTN","XMUT4C",121,0)
 . . . D ERR(XMZ,232,"C xref, but recip "_I_" null: not fixed, xref not numeric")
"RTN","XMUT4C",122,0)
 . . K ^XMB(3.9,XMZ,1,"C",XMXREF,I)
"RTN","XMUT4C",123,0)
 . . D ERR(XMZ,233,"C xref for recip "_I_" doesn't match recip: xref killed")
"RTN","XMUT4C",124,0)
 Q
"RTN","XMUT4C",125,0)
ERR(XMZ,XMERRNUM,XMERRMSG) ;
"RTN","XMUT4C",126,0)
 S XMERROR(XMERRNUM)=$G(XMERROR(XMERRNUM))+1
"RTN","XMUT4C",127,0)
 W !,"Msg=",XMZ,", Err=",$J(XMERRNUM,3)," ",XMERRMSG
"RTN","XMUT4C",128,0)
 Q
"RTN","XMUT4C",129,0)
 ;
"RTN","XMUT4C",130,0)
 ;#34009 = * No Name *
"RTN","XMUT4C",131,0)
 ;#34012 = * No Subject *
"RTN","XMUT5")
0^209^B10053050
"RTN","XMUT5",1,0)
XMUT5 ;(WASH ISC)/CAP - CHECK OUT DELIVERY QUEUE ;06/22/99  15:32
"RTN","XMUT5",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMUT5",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMUT5",4,0)
 ; CHECK    XMMGR-CHECK-BACKGROUND-FILER
"RTN","XMUT5",5,0)
CHECK ;
"RTN","XMUT5",6,0)
 I $D(ZTQUEUED)!($G(IOST)'["C-") D DISPLAY Q
"RTN","XMUT5",7,0)
 F  D DISPLAY D  Q:'(Y!$D(DTOUT))
"RTN","XMUT5",8,0)
 . W !
"RTN","XMUT5",9,0)
 . N DIR,X,DTIME
"RTN","XMUT5",10,0)
 . S DTIME=5
"RTN","XMUT5",11,0)
 . S DIR(0)="Y",DIR("A")="Refresh",DIR("B")="YES"
"RTN","XMUT5",12,0)
 . S DIR("?",1)="Answer YES if you want the display refreshed."
"RTN","XMUT5",13,0)
 . S DIR("?",2)="Answer NO if you don't."
"RTN","XMUT5",14,0)
 . S DIR("?")="If you don't answer, the display will be refreshed every five seconds."
"RTN","XMUT5",15,0)
 . D ^DIR
"RTN","XMUT5",16,0)
 Q
"RTN","XMUT5",17,0)
DISPLAY ;
"RTN","XMUT5",18,0)
 N XMQLIST,XMQM,XMQR,Y,M,R,%,%0
"RTN","XMUT5",19,0)
 W !!,"Delivery Queue Status (1/2 Hour Statistics): " S %H=$H D YX^%DTC W Y
"RTN","XMUT5",20,0)
 D GO^XMUT5B
"RTN","XMUT5",21,0)
 W !,"Lines displayed since last 1/2 hour: ",+$G(^XMBPOST("LINES_READ",0)),!!,"Total items WAITING to be delivered: ",M("T")+R("T")
"RTN","XMUT5",22,0)
 W !,"Messages: "_+M("T"),"   Responses: "_+R("T")
"RTN","XMUT5",23,0)
 W !,"Message Deliveries: "_$P(M("T"),U,3)_"   Response Deliveries: "_$P(R("T"),U,3)
"RTN","XMUT5",24,0)
 S %=$G(^XMBPOST("STATS","M")),%0=$G(^("R")) I %+%0>0 W !!,"Total Deliveries COMPLETED since last 1/2 hour: ",%+%0
"RTN","XMUT5",25,0)
 I  W !,"Deliveries of --- Messages: ",%,"   Responses: ",%0
"RTN","XMUT5",26,0)
 D GETQ^XMKPLQ(.XMQLIST)
"RTN","XMUT5",27,0)
 W !!,"Number of queues: ",$L(XMQLIST("M"),",")+1," Message and ",$L(XMQLIST("R"),",")+1," Response"
"RTN","XMUT5",28,0)
 I M("T")+R("T")<1 W !!,"Nothing is in the delivery queue."
"RTN","XMUT5",29,0)
 E  D SHOWQ(.M,.R)
"RTN","XMUT5",30,0)
 D SHOWFILR
"RTN","XMUT5",31,0)
 Q
"RTN","XMUT5",32,0)
SHOWQ(M,R) ;
"RTN","XMUT5",33,0)
 N I,J,K,X
"RTN","XMUT5",34,0)
 W !!,"Currently in queue:" S K=$G(^XMB(1,1,6))
"RTN","XMUT5",35,0)
 I +M("T")>0 W !,"Message Group         # Messages    # Deliveries    Waiting Time"
"RTN","XMUT5",36,0)
 I  S J=$P(K,U) F I=1:1:10 I M("O",I) W !,?2,I_"  " D R W ?22,$J(+M("O",I),8),?36,$J($P(M("O",I),U,3),10),?51 I $P(M("O",I),U,2) W $J($$WAITIME($P(M("O",I),U,2)),12)
"RTN","XMUT5",37,0)
 I +R("T")>0 W !,"Response Group        # Responses   # Deliveries    Waiting Time"
"RTN","XMUT5",38,0)
 I  S J=$P(K,U,2) F I=1:1:10 I R("O",I) W !,?2,I_"  " D R W ?22,$J(+R("O",I),8),?36,$J($P(R("O",I),U,3),10),?51 I $P(R("O",I),U,2) W $J($$WAITIME($P(R("O",I),U,2)),12)
"RTN","XMUT5",39,0)
 Q
"RTN","XMUT5",40,0)
SHOWFILR ;
"RTN","XMUT5",41,0)
 N XMSTATUS,I
"RTN","XMUT5",42,0)
 D STATUS^XMKPL(.XMSTATUS)
"RTN","XMUT5",43,0)
 W !!,"Background filer status: "
"RTN","XMUT5",44,0)
 I $D(XMSTATUS)<10 D
"RTN","XMUT5",45,0)
 . W "ALL Background Delivery jobs are RUNNING."
"RTN","XMUT5",46,0)
 E  D
"RTN","XMUT5",47,0)
 . W !
"RTN","XMUT5",48,0)
 . S I=""
"RTN","XMUT5",49,0)
 . F  S I=$O(XMSTATUS(I)) Q:I=""  W !,XMSTATUS(I)
"RTN","XMUT5",50,0)
 Q
"RTN","XMUT5",51,0)
R ; Queue range
"RTN","XMUT5",52,0)
 I J="" W "(...)" Q
"RTN","XMUT5",53,0)
 I I=1 W "<"_+J Q
"RTN","XMUT5",54,0)
 I I>$L(J,",") W ">"_($P(J,",",I-1)-1) Q
"RTN","XMUT5",55,0)
 W ">"_$P(J,",",I-1)_" & <"_$P(J,",",I)
"RTN","XMUT5",56,0)
 Q
"RTN","XMUT5",57,0)
WAITIME(X) ;
"RTN","XMUT5",58,0)
 S X=$$TSTAMP^XMXUTIL1-X
"RTN","XMUT5",59,0)
 S %=X,X=""
"RTN","XMUT5",60,0)
 S:%'<86400 X=(%\86400)
"RTN","XMUT5",61,0)
 S:%#86400 X=X_" "_(%#86400\3600)_":"_$E(%#3600\60+100,2,3)_":"_$E(%#60+100,2,3)
"RTN","XMUT5",62,0)
 Q X
"RTN","XMUT5B")
0^211^B3327983
"RTN","XMUT5B",1,0)
XMUT5B ;(WASH ISC)/CAP-DELIVERY QUEUE ANALYSIS ;01/09/98  09:55
"RTN","XMUT5B",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMUT5B",3,0)
 ;;XX.XX
"RTN","XMUT5B",4,0)
 ;
"RTN","XMUT5B",5,0)
 ;M("O") & R("O") = frequency ^ oldest in group
"RTN","XMUT5B",6,0)
 ;M("T") & R("T") = same as "O" above except for all messages/responses
"RTN","XMUT5B",7,0)
GO ;S X="USERY^XMUT5B",@^%ZOSF("TRAP"),X=$ZC(%SPAWN,"SUBMIT/QUE=FORUM7_BATCH LEEUSER.COM")
"RTN","XMUT5B",8,0)
GP F I=1:1:10 S M("O",I)=0,R("O",I)=0
"RTN","XMUT5B",9,0)
 S M("T")=0
"RTN","XMUT5B",10,0)
 F I=1:1:10 I $D(^XMBPOST("M",I)) D M
"RTN","XMUT5B",11,0)
 S R("T")=0
"RTN","XMUT5B",12,0)
 F I=1:1:10 I $D(^XMBPOST("R",I)) D R
"RTN","XMUT5B",13,0)
 ;
"RTN","XMUT5B",14,0)
 Q
"RTN","XMUT5B",15,0)
M S %0=$G(^(I)),%=$O(^XMBPOST("M",I,0)),M("O",I)=+%0_"^"_%_"^"_$P(%0,U,2),$P(M("T"),U)=$P(M("T"),U)+%0,$P(M("T"),U,3)=$P(M("T"),U,3)+$P(%0,U,2) I $S('$P(M("T"),U,2):1,$P(M("T"),U,2)>%:1,1:0) S $P(M("T"),U,2)=%
"RTN","XMUT5B",16,0)
 Q
"RTN","XMUT5B",17,0)
R S %0=$G(^(I)),%=$O(^XMBPOST("R",I,0)),R("O",I)=+%0_"^"_%_"^"_$P(%0,U,2),$P(R("T"),U)=$P(R("T"),U)+%0,$P(R("T"),U,3)=$P(R("T"),U,3)+$P(%0,U,2) I $S('$P(R("T"),U,2):1,$P(R("T"),U,2)>%:1,1:0) S $P(R("T"),U,2)=%
"RTN","XMUT5B",18,0)
 Q
"RTN","XMUT5B",19,0)
USERS(%) ;Get the number of ZSLOT users
"RTN","XMUT5B",20,0)
 ;%=1 do not display output, %=0 display
"RTN","XMUT5B",21,0)
 N X,A,B,C,Y,Z,ZSLOTDSP S ZSLOTDSP=%
"RTN","XMUT5B",22,0)
 ;
"RTN","XMUT5B",23,0)
 ;First -- is the ZSLOT software installed ?
"RTN","XMUT5B",24,0)
 S X="ZSLOT" X ^%ZOSF("TEST") E  S %=0 G USERQ
"RTN","XMUT5B",25,0)
 ;
"RTN","XMUT5B",26,0)
 ;Call ZSLOT for count of ZSLOT users
"RTN","XMUT5B",27,0)
 S %="N/A" I $T(ENTCLUST^ZSLOT)'="" D ENTCLUST^ZSLOT S %=Y
"RTN","XMUT5B",28,0)
USERQ Q %
"RTN","XMUT5Q")
0^212^B18374484
"RTN","XMUT5Q",1,0)
XMUT5Q ;(WASH ISC)/CAP - FILE RESULTS/RESCHEDULE ;01/09/98  10:11
"RTN","XMUT5Q",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMUT5Q",3,0)
 Q
"RTN","XMUT5Q",4,0)
QUIT ;End process
"RTN","XMUT5Q",5,0)
 D REC
"RTN","XMUT5Q",6,0)
QUIT1 K %,A,B,I,J,RSP,X,Y,ZTSK,ZTSAVE,ZTRTN,ZTDTH
"RTN","XMUT5Q",7,0)
 K:'$D(ZTQUEUED) C,M,R
"RTN","XMUT5Q",8,0)
 G ZTSK0
"RTN","XMUT5Q",9,0)
 ;
"RTN","XMUT5Q",10,0)
ZTSK ;SCHEDULE TO RUN
"RTN","XMUT5Q",11,0)
 K XMUT5,XMUT5Q S ZTRTN="GO^XMUT5Q1" G GO
"RTN","XMUT5Q",12,0)
ZTSK0 ;Reschedules itself here
"RTN","XMUT5Q",13,0)
 S ZTRTN="GO2^XMUT5Q1"
"RTN","XMUT5Q",14,0)
GO Q:$S($D(XMUT5NO):1,'$D(XMUT5F):0,'$D(XMUT5Q):0,XMUT5Q>XMUT5F:1,1:0)
"RTN","XMUT5Q",15,0)
 S:'$D(XMUT5S) XMUT5S=1800
"RTN","XMUT5Q",16,0)
 K XMUT5N S XMUT5Q=$G(XMUT5Q)+1,ZTSAVE("C*")="",ZTSAVE("XMZUT*")="",ZTREQ="@" I $D(ZTQUEUED) S XMUT5=1
"RTN","XMUT5Q",17,0)
 S X=$H*86400+$P($H,",",2)+XMUT5S\XMUT5S*XMUT5S,ZTDTH=X\86400_","_(X#86400),ZTDESC="MGRMAIL "_XMUT5S_" second interval Delivery Queue Check"
"RTN","XMUT5Q",18,0)
 S:'$D(ZTRTN) ZTRTN="GO^XMUT5Q1" S ZTIO="" D ^%ZTLOAD
"RTN","XMUT5Q",19,0)
 Q
"RTN","XMUT5Q",20,0)
REC ;RECORD QUEUE STATUS
"RTN","XMUT5Q",21,0)
 D NOW^%DTC
"RTN","XMUT5Q",22,0)
 ;
"RTN","XMUT5Q",23,0)
 ;Look to see if data already file and quit if it is there
"RTN","XMUT5Q",24,0)
 S X=$P(%,".")_"."_$E($P(%,".",2),1,2) I $E($P(%,".",2),3)>2 S X=X_3
"RTN","XMUT5Q",25,0)
 S X=$O(^XMBX(4.2998,"B",X)),DA=$S(X="":"",1:$O(^(X,0))) Q:DA
"RTN","XMUT5Q",26,0)
 I 'DA S X=%,DIC="^XMBX(4.2998,",DIC(0)="FI",Y=0 D FILE^DICN
"RTN","XMUT5Q",27,0)
 S DIE="^XMBX(4.2998,",DA=+Y,XMUSER=$$USERS^XMUT5B(0)
"RTN","XMUT5Q",28,0)
 ;zero node
"RTN","XMUT5Q",29,0)
 S DR="1///"_(M("T")+R("T"))_";11///"_+M("T")_";12///"_+R("T")_";43///"_$P(^XMB(3.9,0),U,3)
"RTN","XMUT5Q",30,0)
 I $G(XMUSER) S DR=DR_";39///"_XMUSER_";38///"_XMUSER
"RTN","XMUT5Q",31,0)
 S %="LINES_READ" I $D(^XMBPOST(%)) L +^XMBPOST(%) S DR=DR_";15///"_^XMBPOST(%,0) S ^(0)=0 L -^XMBPOST(%)
"RTN","XMUT5Q",32,0)
 ;File it
"RTN","XMUT5Q",33,0)
 D ^DIE K DR
"RTN","XMUT5Q",34,0)
 L +^XMBPOST("GSTATS","R")
"RTN","XMUT5Q",35,0)
 S %=$G(^XMBPOST("STATS","R")) S:%>0 DR="45///"_+% S ^("R")=0
"RTN","XMUT5Q",36,0)
 L -^XMBPOST("GSTATS","R")
"RTN","XMUT5Q",37,0)
 L +^XMBPOST("GSTATS","M")
"RTN","XMUT5Q",38,0)
 S %=$G(^XMBPOST("STATS","M")) S:%>0 DR=$S($D(DR):DR_";",1:"")_"44///"_+% S ^("M")=0
"RTN","XMUT5Q",39,0)
 L -^XMBPOST("GSTATS","M")
"RTN","XMUT5Q",40,0)
 S (%0,%)="" F I=1:1:10 S %0=$G(^XMBPOST("M",I)) S %=%+$P(%0,U,2)
"RTN","XMUT5Q",41,0)
 S:%>0 DR=$S($D(DR):DR_";",1:"")_"46///"_%
"RTN","XMUT5Q",42,0)
 S (%0,%)="" F I=1:1:10 S %0=$G(^XMBPOST("R",I)) S %=%+$P(%0,U,2)
"RTN","XMUT5Q",43,0)
 S:%>0 DR=$S($D(DR):DR_";",1:"")_"47///"_% K %0
"RTN","XMUT5Q",44,0)
 I $D(DR) D ^DIE K DR
"RTN","XMUT5Q",45,0)
 ;1 node
"RTN","XMUT5Q",46,0)
 S %=$P(M("T"),U,2) I % S DR=$S($D(DR):DR_";",1:"")_"101///"_($H*86400+$P($H,",",2)-%)
"RTN","XMUT5Q",47,0)
 S %=$P(R("T"),U,2) I % S DR=$S($D(DR):DR_";",1:"")_"102///"_($H*86400+$P($H,",",2)-%)
"RTN","XMUT5Q",48,0)
 S %=$S($D(^XMB(1,1,6)):^(6),1:"10^50,400"),DR=$S($D(DR):DR_";",1:"")_"103///"_$P(%,U,2)_";104///"_$P(%,U)
"RTN","XMUT5Q",49,0)
 ;File it
"RTN","XMUT5Q",50,0)
 I $D(DR) D ^DIE K DR
"RTN","XMUT5Q",51,0)
 ;2 & 3 nodes
"RTN","XMUT5Q",52,0)
 S I=201,DR="" D DR
"RTN","XMUT5Q",53,0)
 D ^DIE:$L($G(DR)) K DR
"RTN","XMUT5Q",54,0)
 ;4 & 5 nodes
"RTN","XMUT5Q",55,0)
 S I=401,DR="" D DR
"RTN","XMUT5Q",56,0)
 ;File it
"RTN","XMUT5Q",57,0)
 D ^DIE:$L($G(DR)) K DR
"RTN","XMUT5Q",58,0)
 ;Nodes 6 & 7 - Deliveries
"RTN","XMUT5Q",59,0)
 F I=1:1:10 S %=$P(R("O",I),U,3) I % S DR=$S($D(DR):DR_";",1:"")_60_I_"///"_%
"RTN","XMUT5Q",60,0)
 F I=1:1:10 S %=$P(M("O",I),U,3) I % S DR=$S($D(DR):DR_";",1:"")_70_I_"///"_%
"RTN","XMUT5Q",61,0)
 D ^DIE:$L($G(DR))
"RTN","XMUT5Q",62,0)
 K %H,D,D0,DI,DIE,DIC,DA,DO,DR,DQ,X
"RTN","XMUT5Q",63,0)
 Q
"RTN","XMUT5Q",64,0)
DR F I=I:1:I+9 S:$E(I)=2 %=R("O",I#100) S:$E(I)=4 %=M("O",I#100) I +% S:$L(DR) DR=$G(DR)_";" S DR=$G(DR)_(I+100)_"///"_+% I +$P(%,U,2) S DR=$G(DR)_";"_I_"///"_($H*86400+$P($H,",",2)-$P(%,U,2))
"RTN","XMUT5Q",65,0)
 Q
"RTN","XMUT5Q",66,0)
GET N J S J=I N I S I=J,Z=J
"RTN","XMUT5Q",67,0)
GET1 W !!,"Please enter the following for "_$P("ORIGINAL MESSAGES: ,RESPONSES: ",",",Z)
"RTN","XMUT5Q",68,0)
 R !!,"Enter up to 9 numbers separated by commas to determine statistical groupings.",!,"EG:  50,100,500 will create 4 groups: 1-49, 50-99, 100-499 & 500 and above.",!!,"Enter them now: ",X:DTIME
"RTN","XMUT5Q",69,0)
 Q:"^"[X
"RTN","XMUT5Q",70,0)
 F I=1:1 S A=$P(X,",",I) Q:A=""  S B=$P(X,",",I+1) I $S(+A'=A:1,I>10:1,1:0)!(B'>A&B) D ERR G GET1
"RTN","XMUT5Q",71,0)
 Q
"RTN","XMUT5Q",72,0)
ENUSER ;Entry point called by VMS job that calculates active logons
"RTN","XMUT5Q",73,0)
 ;Parameter passed has three comma (",") pieces for active logons
"RTN","XMUT5Q",74,0)
 ;
"RTN","XMUT5Q",75,0)
 ;**** REVISED 1/93 ****
"RTN","XMUT5Q",76,0)
 ;VMS JOB NO LONGER WORKS -- ZSLOT USER ARE KEPT TRCK OF DIFFERENTLY
"RTN","XMUT5Q",77,0)
 ;
"RTN","XMUT5Q",78,0)
 ;$P(%,",",1)=Total - $P(%,",",2)=ZSLOT - $P(%,",",3)=Non-ZSLOT
"RTN","XMUT5Q",79,0)
 ;$P(%,",",4)=VMS style date (N-MMM-YYY HH:MM:SS:xx)
"RTN","XMUT5Q",80,0)
 ;
"RTN","XMUT5Q",81,0)
 S U="^" L +^XMBX(4.2998)
"RTN","XMUT5Q",82,0)
 S XMA0=%,%=$P(%,",",4),DA=$P($G(^XMBX(4.2998,0)),U,3) Q:'DA
"RTN","XMUT5Q",83,0)
 ;
"RTN","XMUT5Q",84,0)
 ;Re-construct VMS date to date FileMan's conversion can handle as input
"RTN","XMUT5Q",85,0)
 F I=0:0 Q:$E(%)'=" "  S %=$E(%,2,99)
"RTN","XMUT5Q",86,0)
 S X=$P(%,"-",2)_" "_$E("0",$L(+%))_+%_", "_+$P(%,"-",3),XMB0=$P(%," ",2)
"RTN","XMUT5Q",87,0)
 ;
"RTN","XMUT5Q",88,0)
 ;If this data applies to the last entry made for statistics (within
"RTN","XMUT5Q",89,0)
 ;1/2 hour) file it in this entry.
"RTN","XMUT5Q",90,0)
 ;
"RTN","XMUT5Q",91,0)
 D ^%DT S X=Y_"."_$P(XMB0,":")_$P(XMB0,":",2),(%0,Y)=^XMBX(4.2998,DA,0)
"RTN","XMUT5Q",92,0)
 I X-Y<.003 F %=22,23 S X=$P(XMA0,",",%-20) I X>$P(Y,"^",%) S $P(Y,"^",%)=X,$P(Y,"^",21)=$P(Y,"^",21)+X
"RTN","XMUT5Q",93,0)
 S ^XMBX(4.2998,DA,0)=Y L -^XMBX(4.2998) K DA,XMA0
"RTN","XMUT5Q",94,0)
 Q
"RTN","XMUT5Q",95,0)
ERR W *7,"  ???" S X="" Q
"RTN","XMUT5Q",96,0)
 ;
"RTN","XMUT5Q",97,0)
NOTASK ;Run in foreground
"RTN","XMUT5Q",98,0)
 S XMUT5NO=1,XMUT5=1
"RTN","XMUT5Q",99,0)
 R !!,"Initialize time stamps in queue (necessary 1st run): NO// ",X:DTIME
"RTN","XMUT5Q",100,0)
 K:$E(X)="Y" XMUT5
"RTN","XMUT5Q",101,0)
 G 0^XMUT5Q1
"RTN","XMUT6")
0^213^B4028377
"RTN","XMUT6",1,0)
XMUT6 ;(WASH ISC)/CAP - CHECK OUT DELIVERY QUEUE ;01/09/98  10:44
"RTN","XMUT6",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMUT6",3,0)
 W !!,"Checking Delivery Queue: " S %H=$H D YX^%DTC W Y
"RTN","XMUT6",4,0)
 D GO^XMUT5B I M("T")+R("T")<1 W !!,"NOTHING IS IN THE DELIVERY QUEUE !!" Q
"RTN","XMUT6",5,0)
 ;
"RTN","XMUT6",6,0)
GO ;Go through the queues and see if the data in them is correct
"RTN","XMUT6",7,0)
 K M,R,T
"RTN","XMUT6",8,0)
 S (M,R,T,M("D"),R("D"),T("D"))=0 F I=1:1:10 S (M(I),M("D",I),R(I),R("D",I))=0
"RTN","XMUT6",9,0)
 F I="M","R" F J=1:1:10 D COUNT
"RTN","XMUT6",10,0)
 W !!,"Total items Waiting to be delivered: ",T
"RTN","XMUT6",11,0)
 W !,"Messages: "_M,"   Responses: "_R
"RTN","XMUT6",12,0)
 W !,"Message Deliveries: "_M("D")_"   Response Deliveries: "_R("D")
"RTN","XMUT6",13,0)
 I M>0 W !!,"Message Group      # Messages    # Deliveries"
"RTN","XMUT6",14,0)
 I  F I=1:1:10 Q:'$D(M(I))  W !,?5,I,?25,M(I),?40,M("D",I),?53
"RTN","XMUT6",15,0)
 I R>0 W !!,"Response Group     # Responses   # Deliveries"
"RTN","XMUT6",16,0)
 I  F I=1:1:10 Q:'$D(R(I))  W !,?5,I,?25,R(I),?40,R("D",I),?53
"RTN","XMUT6",17,0)
Q D ^XMUT5
"RTN","XMUT6",18,0)
 Q
"RTN","XMUT6",19,0)
 ;
"RTN","XMUT6",20,0)
 ;Count the actual stuff in the queues
"RTN","XMUT6",21,0)
COUNT S (A,B,C)=0 ; I=group, J=queue, A=timestamp, B=id
"RTN","XMUT6",22,0)
A S A=$O(^XMBPOST(I,J,A)) Q:A'>0  S B=""
"RTN","XMUT6",23,0)
B S B=$O(^XMBPOST(I,J,A,B)) G A:B=""
"RTN","XMUT6",24,0)
 ;
"RTN","XMUT6",25,0)
 ;Messages
"RTN","XMUT6",26,0)
 I I="R" S C="" G C
"RTN","XMUT6",27,0)
 I B[U D FWD
"RTN","XMUT6",28,0)
 E  S %=+$G(^(B))
"RTN","XMUT6",29,0)
 S T=T+1,M=M+1,M(J)=M(J)+1,M("D")=M("D")+%,M("D",J)=M("D",J)+%,T("D")=T("D")+%
"RTN","XMUT6",30,0)
 G B
"RTN","XMUT6",31,0)
 ;
"RTN","XMUT6",32,0)
 ;Responses
"RTN","XMUT6",33,0)
C S C=$O(^XMBPOST(I,J,A,B,C)) G B:C="" S %=+$G(^(C)) G C:'%
"RTN","XMUT6",34,0)
 S T=T+1,R=R+1,R(J)=R(J)+1,R("D")=R("D")+%,R("D",J)=R("D",J)+%,T("D")=T("D")+%
"RTN","XMUT6",35,0)
 G C
"RTN","XMUT6",36,0)
 ;
"RTN","XMUT6",37,0)
 ;Sum up forwards
"RTN","XMUT6",38,0)
FWD S (%,K)=0 F  S K=$O(^XMBPOST("FWD",B_U_A,K)) Q:'K  S %=%+$L($G(^(K)),U)
"RTN","XMUT6",39,0)
 Q
"RTN","XMUT6",40,0)
MOVE ;Move queue 1 to queue 3
"RTN","XMUT6",41,0)
 S A="^XMBPOST(""R"",1)",B=0
"RTN","XMUT6",42,0)
MA S A=$Q(@A) Q:$P(A,$C(34),2)'="R"
"RTN","XMUT6",43,0)
 S B=B+1 G MA:B<2 S C=@A,D=A,$P(D,",",2)=3,@D=C K @A G MA
"RTN","XMUT6",44,0)
 ;
"RTN","XMUT6",45,0)
KILL ;Kill off X-ref of Responses
"RTN","XMUT6",46,0)
 S A="R"
"RTN","XMUT6",47,0)
KA S A=$O(^XMBPOST("R",A)) Q:A=""  W A,"  " K ^(A) G KA
"RTN","XMUTERM")
0^79^B59243598
"RTN","XMUTERM",1,0)
XMUTERM ;ISC-SF/GMB - Delete Mailbox/Delete Message ;05/14/99  14:21
"RTN","XMUTERM",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMUTERM",3,0)
 ; Taken from XUSTERM (SEA/AMF/WDE)
"RTN","XMUTERM",4,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMUTERM",5,0)
 ; ALL1     XMMGR-TERMINATE-MANY
"RTN","XMUTERM",6,0)
 ; ALL2     XMMGR-TERMINATE-SUGGEST
"RTN","XMUTERM",7,0)
 ; CHOOSE   XMMGR-TERMINATE-ONE
"RTN","XMUTERM",8,0)
 ; MESSAGE  XMMGR-PURGE-MESSAGE
"RTN","XMUTERM",9,0)
MESSAGE ; Manager chooses messages to purge
"RTN","XMUTERM",10,0)
 N DIR,XMABORT,XMZ,XMKILL
"RTN","XMUTERM",11,0)
 Q:$$NOTAUTH()
"RTN","XMUTERM",12,0)
 W @IOF,"This option enables you to purge any message."
"RTN","XMUTERM",13,0)
 W !!,"Purge means:"
"RTN","XMUTERM",14,0)
 W !,"-delete the message from all user mailboxes"
"RTN","XMUTERM",15,0)
 W !,"-delete the message from the MESSAGE file ^XMB(3.9"
"RTN","XMUTERM",16,0)
 W !,"-delete all responses from the MESSAGE file ^XMB(3.9"
"RTN","XMUTERM",17,0)
 W !,"-delete the message from the MESSAGES TO BE NEW AT A LATER DATE file ^XMB(3.73"
"RTN","XMUTERM",18,0)
 W !!,"Purge is not reversible.  The message is gone forever."
"RTN","XMUTERM",19,0)
 S (XMABORT,XMKILL)=0
"RTN","XMUTERM",20,0)
 F  D  Q:XMABORT
"RTN","XMUTERM",21,0)
 . W !
"RTN","XMUTERM",22,0)
 . S DIR(0)="NO^1:999999999999999:0^D CHKMSG^XMUTERM(Y)",DIR("A")="Purge MESSAGE"
"RTN","XMUTERM",23,0)
 . S DIR("?")="This response must be a message number"
"RTN","XMUTERM",24,0)
 . D ^DIR K DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMUTERM",25,0)
 . S XMZ=+Y
"RTN","XMUTERM",26,0)
 . S DIR(0)="Y",DIR("A")="Are you sure",DIR("B")="NO"
"RTN","XMUTERM",27,0)
 . D ^DIR K DIR I 'Y!$D(DIRUT) W !,"Message not purged." Q
"RTN","XMUTERM",28,0)
 . S (XMKILL("MSG"),XMKILL("RESP"))=0
"RTN","XMUTERM",29,0)
 . D KILL^XMA32A(XMZ,.XMKILL,XMABORT)
"RTN","XMUTERM",30,0)
 . W !!,XMKILL("MSG")," message" W:XMKILL("RESP") " and ",XMKILL("RESP")," responses" W " purged."
"RTN","XMUTERM",31,0)
 . S XMKILL=XMKILL+XMKILL("MSG")+XMKILL("RESP")
"RTN","XMUTERM",32,0)
 Q
"RTN","XMUTERM",33,0)
CHKMSG(XMZ) ;
"RTN","XMUTERM",34,0)
 I '$D(^XMB(3.9,XMZ)) K X Q
"RTN","XMUTERM",35,0)
 W "  ",$P($G(^XMB(3.9,XMZ,0)),U,1)
"RTN","XMUTERM",36,0)
 Q
"RTN","XMUTERM",37,0)
ALL1 ; MailMan chooses users to remove from MailMan
"RTN","XMUTERM",38,0)
 ; (Users who shouldn't have mailboxes.)
"RTN","XMUTERM",39,0)
 N XMTEST,DIR,XMABORT,XMCUTOFF,XMGRACE
"RTN","XMUTERM",40,0)
 Q:$$NOTAUTH()
"RTN","XMUTERM",41,0)
 S XMABORT=0
"RTN","XMUTERM",42,0)
 W @IOF,"This option goes through the MailBox global and deletes the user's mailbox if"
"RTN","XMUTERM",43,0)
 D HELP1
"RTN","XMUTERM",44,0)
 D CUTOFF(1,.XMGRACE,.XMCUTOFF,.XMABORT) Q:XMABORT
"RTN","XMUTERM",45,0)
 S DIR(0)="SO^T:Test Mode only;R:Real Mode"
"RTN","XMUTERM",46,0)
 S DIR("B")="Test Mode only"
"RTN","XMUTERM",47,0)
 S DIR("A")="Select Run Option"
"RTN","XMUTERM",48,0)
 S DIR("?",1)="'Real Mode' will remove qualifying users from MailMan."
"RTN","XMUTERM",49,0)
 S DIR("?",2)="'Test Mode' will not."
"RTN","XMUTERM",50,0)
 S DIR("?",3)="Select 'Test Mode' to see who would be removed."
"RTN","XMUTERM",51,0)
 S DIR("?")="Select 'Real Mode' to remove them."
"RTN","XMUTERM",52,0)
 D ^DIR Q:$D(DIRUT)
"RTN","XMUTERM",53,0)
 S XMTEST=$S(X="R":0,1:1)
"RTN","XMUTERM",54,0)
 S (ZTSAVE("XMTEST"),ZTSAVE("XMCUTOFF"),ZTSAVE("XMGRACE"))=""
"RTN","XMUTERM",55,0)
 W !!,"This report may take a while.  You might consider spooling it."
"RTN","XMUTERM",56,0)
 D EN^XUTMDEVQ("ALL1TASK^XMUTERM1","MailMan: Remove user Mailboxes",.ZTSAVE)
"RTN","XMUTERM",57,0)
 Q
"RTN","XMUTERM",58,0)
ALL2 ; MailMan reports on users who maybe should be removed from MailMan
"RTN","XMUTERM",59,0)
 ; (Users who haven't logged on in a while.)
"RTN","XMUTERM",60,0)
 N XMTEST,DIR,XMABORT,XMCUTOFF,XMGRACE
"RTN","XMUTERM",61,0)
 Q:$$NOTAUTH()
"RTN","XMUTERM",62,0)
 S XMABORT=0
"RTN","XMUTERM",63,0)
 W @IOF,"This option goes through the MailBox global and reports if"
"RTN","XMUTERM",64,0)
 D HELP2
"RTN","XMUTERM",65,0)
 W !!,"This option does not delete any mailboxes.  Use the XM-TERMINATE-ONE-USER"
"RTN","XMUTERM",66,0)
 W !,"option to delete any user mailboxes identified in this report.",!
"RTN","XMUTERM",67,0)
 D CUTOFF(2,.XMGRACE,.XMCUTOFF,.XMABORT) Q:XMABORT
"RTN","XMUTERM",68,0)
 S ZTSAVE("XMCUTOFF")=""
"RTN","XMUTERM",69,0)
 W !!,"This report may take a while.  You might consider spooling it."
"RTN","XMUTERM",70,0)
 D EN^XUTMDEVQ("ALL2TASK^XMUTERM1","MailMan: Remove user Mailboxes",.ZTSAVE)
"RTN","XMUTERM",71,0)
 Q
"RTN","XMUTERM",72,0)
NOTAUTH() ;
"RTN","XMUTERM",73,0)
 Q:$D(^XUSEC("XMMGR",DUZ)) 0
"RTN","XMUTERM",74,0)
 W !!,*7,"You may not run this option.  You do not hold the 'XMMGR' security key!"
"RTN","XMUTERM",75,0)
 Q 1
"RTN","XMUTERM",76,0)
HELP1 ;
"RTN","XMUTERM",77,0)
 W !,"- the user is not in the NEW PERSON file."
"RTN","XMUTERM",78,0)
 W !,"- the user has no access code and was not terminated."
"RTN","XMUTERM",79,0)
 W !,"- the user has no access code and was terminated w/o mailbox retention."
"RTN","XMUTERM",80,0)
 W !,"- the user has an access code, but no primary menu."
"RTN","XMUTERM",81,0)
 W !,"- the user has an access code and primary menu, but no verify code, AND"
"RTN","XMUTERM",82,0)
 W !,"  - has never signed on, since being added before a cutoff date."
"RTN","XMUTERM",83,0)
 W !,"  OR"
"RTN","XMUTERM",84,0)
 W !,"  - last signed on before a cutoff date."
"RTN","XMUTERM",85,0)
 W !!,"'Delete mailbox' includes:"
"RTN","XMUTERM",86,0)
 W !,"- Delete user's private mail groups"
"RTN","XMUTERM",87,0)
 W !,"- Remove user from membership in any group"
"RTN","XMUTERM",88,0)
 W !,"- Remove user as authorized sender from any group"
"RTN","XMUTERM",89,0)
 W !,"- Remove user from anyone's list of surrogates"
"RTN","XMUTERM",90,0)
 W !,"- Delete user's mailbox"
"RTN","XMUTERM",91,0)
 W !,"As a result, the user will not receive any mail.",!
"RTN","XMUTERM",92,0)
 Q
"RTN","XMUTERM",93,0)
HELP2 ;
"RTN","XMUTERM",94,0)
 W !,"- the user has an access code, verify code, and primary menu, but"
"RTN","XMUTERM",95,0)
 W !,"  last signed on before a cutoff date."
"RTN","XMUTERM",96,0)
 W !,"- the user was terminated before a cutoff date and allowed to keep a mailbox."
"RTN","XMUTERM",97,0)
 Q
"RTN","XMUTERM",98,0)
CUTOFF(XMWHICH,XMGRACE,XMCUTOFF,XMABORT) ;
"RTN","XMUTERM",99,0)
 N DIR
"RTN","XMUTERM",100,0)
 S XMGRACE=$$FMADD^XLFDT(DT,-30)
"RTN","XMUTERM",101,0)
 S DIR(0)="D^:"_XMGRACE_":EP"
"RTN","XMUTERM",102,0)
 S DIR("A")="Logon cutoff date"
"RTN","XMUTERM",103,0)
 S DIR("B")=$$FMTE^XLFDT(DT-10000)
"RTN","XMUTERM",104,0)
 S DIR("??")="^D HCUTOFF^XMUTERM(XMWHICH)"
"RTN","XMUTERM",105,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMUTERM",106,0)
 S XMCUTOFF=Y
"RTN","XMUTERM",107,0)
 Q
"RTN","XMUTERM",108,0)
HCUTOFF(XMWHICH) ;
"RTN","XMUTERM",109,0)
 W !,"The cutoff date must be more than 30 days ago."
"RTN","XMUTERM",110,0)
 W !,"It is used during the check to see if"
"RTN","XMUTERM",111,0)
 I XMWHICH="*"!(XMWHICH=1) D
"RTN","XMUTERM",112,0)
 . W !,"- the user has an access code and primary menu, but no verify code, AND"
"RTN","XMUTERM",113,0)
 . W !,"  - has never signed on, since being added before a cutoff date."
"RTN","XMUTERM",114,0)
 . W !,"  OR"
"RTN","XMUTERM",115,0)
 . W !,"  - last signed on before a cutoff date."
"RTN","XMUTERM",116,0)
 I XMWHICH="*"!(XMWHICH=2) D
"RTN","XMUTERM",117,0)
 . W !,"- the user has an access code, verify code, and primary menu, but"
"RTN","XMUTERM",118,0)
 . W !,"  last signed on before a cutoff date."
"RTN","XMUTERM",119,0)
 W !!,"(If you do not wish to check mailboxes based on a cutoff date, enter '1900'.)"
"RTN","XMUTERM",120,0)
 W !!,"Please enter that cutoff date."
"RTN","XMUTERM",121,0)
 Q
"RTN","XMUTERM",122,0)
CHOOSE ; Manager chooses user to remove from MailMan
"RTN","XMUTERM",123,0)
 N XMCUTOFF,XMABORT,XMI,XMGRACE
"RTN","XMUTERM",124,0)
 S XMABORT=0
"RTN","XMUTERM",125,0)
 Q:$$NOTAUTH()
"RTN","XMUTERM",126,0)
 W @IOF,"This option lets you delete the mailbox of a user if"
"RTN","XMUTERM",127,0)
 D HELP2
"RTN","XMUTERM",128,0)
 D HELP1
"RTN","XMUTERM",129,0)
 D CUTOFF("*",.XMGRACE,.XMCUTOFF,.XMABORT) Q:XMABORT
"RTN","XMUTERM",130,0)
 N DIR
"RTN","XMUTERM",131,0)
 S DIR(0)="SO^M:MailMan presents;I:I select"
"RTN","XMUTERM",132,0)
 S DIR("?",1)="Select 'M' if you want MailMan to $order through the MailBox file and"
"RTN","XMUTERM",133,0)
 S DIR("?",2)="present to you candidates for mailbox deletion."
"RTN","XMUTERM",134,0)
 S DIR("?",3)=""
"RTN","XMUTERM",135,0)
 S DIR("?")="Select 'I' if you want to do the selection directly."
"RTN","XMUTERM",136,0)
 D ^DIR Q:$D(DIRUT)
"RTN","XMUTERM",137,0)
 I Y="M" D MMCHOOSE(XMGRACE,XMCUTOFF) Q
"RTN","XMUTERM",138,0)
 D ICHOOSE(XMGRACE,XMCUTOFF)
"RTN","XMUTERM",139,0)
 Q
"RTN","XMUTERM",140,0)
MMCHOOSE(XMGRACE,XMCUTOFF) ;
"RTN","XMUTERM",141,0)
 N XMI,XMABORT,XMTERM
"RTN","XMUTERM",142,0)
 S (XMI,XMABORT)=0
"RTN","XMUTERM",143,0)
 F  S XMI=$O(^XMB(3.7,XMI)) Q:XMI'>0  D  Q:XMABORT
"RTN","XMUTERM",144,0)
 . D CHECK1^XMUTERM1(XMI,XMGRACE,XMCUTOFF,.XMTERM) I XMTERM D DELETE(XMI,.XMABORT) Q
"RTN","XMUTERM",145,0)
 . D CHECK2^XMUTERM1(XMI,XMCUTOFF,.XMTERM) I XMTERM D DELETE(XMI,.XMABORT)
"RTN","XMUTERM",146,0)
 Q
"RTN","XMUTERM",147,0)
ICHOOSE(XMGRACE,XMCUTOFF) ;
"RTN","XMUTERM",148,0)
 F  D  Q:XMABORT
"RTN","XMUTERM",149,0)
 . N DIC,Y
"RTN","XMUTERM",150,0)
 . S DIC="^XMB(3.7,"
"RTN","XMUTERM",151,0)
 . S DIC(0)="AEQM"
"RTN","XMUTERM",152,0)
 . S DIC("S")="N XMTERM,XMFORGET D CHECK1^XMUTERM1(Y,XMGRACE,XMCUTOFF,.XMTERM),CHECK2^XMUTERM1(Y,XMCUTOFF,.XMFORGET) I XMTERM!XMFORGET"
"RTN","XMUTERM",153,0)
 . W ! D ^DIC I Y=-1 S XMABORT=1 Q
"RTN","XMUTERM",154,0)
 . D DELETE(+Y)
"RTN","XMUTERM",155,0)
 Q
"RTN","XMUTERM",156,0)
DELETE(XMI,XMABORT) ;
"RTN","XMUTERM",157,0)
 N XMREC,XMDELETE
"RTN","XMUTERM",158,0)
 S XMREC=$G(^VA(200,XMI,0))
"RTN","XMUTERM",159,0)
 I XMREC'="" D  Q:'XMDELETE
"RTN","XMUTERM",160,0)
 . N DIR,Y
"RTN","XMUTERM",161,0)
 . W !!,$P(XMREC,U)
"RTN","XMUTERM",162,0)
 . W !,"Access Code: ",$S($P(XMREC,U,3)="":"NONE",1:"<Hidden>")
"RTN","XMUTERM",163,0)
 . W ?25,"Verify Code: ",$S($P($G(^VA(200,XMI,.1)),U,2)="":"NONE",1:"<Hidden>")
"RTN","XMUTERM",164,0)
 . W ?50,"Primary Menu: ",$S($P($G(^VA(200,XMI,201)),U,1)="":"NONE",1:$P($G(^DIC(19,$P(^(201),U),0)),U))
"RTN","XMUTERM",165,0)
 . W !,"Date Entered: ",$S($P($G(^VA(200,XMI,1)),U,7)="":"NONE",1:$$FMTE^XLFDT($P(^(1),U,7),"2D"))
"RTN","XMUTERM",166,0)
 . W ?25,"Last Logon: ",$S($P($G(^VA(200,XMI,1.1)),U,1)="":"NONE",1:$$FMTE^XLFDT($P(^(1.1),U,1),"2D"))
"RTN","XMUTERM",167,0)
 . W !,"Term Date: ",$S($P(XMREC,U,11)="":"NONE",1:$$FMTE^XLFDT($P(XMREC,U,11),"2D"))
"RTN","XMUTERM",168,0)
 . W:$P(XMREC,U,11) ?25,"Delete Mail: ",$S($P(XMREC,U,5)="y":"YES",1:"NO")
"RTN","XMUTERM",169,0)
 . W ?50,"New Messages: ",$P(^XMB(3.7,XMI,0),U,6)
"RTN","XMUTERM",170,0)
 . W !
"RTN","XMUTERM",171,0)
 . S DIR(0)="Y"
"RTN","XMUTERM",172,0)
 . S DIR("B")="NO"
"RTN","XMUTERM",173,0)
 . S DIR("A")="Delete this user's mailbox"
"RTN","XMUTERM",174,0)
 . D ^DIR I $D(DIRUT) S XMDELETE=0,XMABORT=1 Q
"RTN","XMUTERM",175,0)
 . I 'Y S XMDELETE=0 Q
"RTN","XMUTERM",176,0)
 . S XMDELETE=1
"RTN","XMUTERM",177,0)
 W !,"Deleting mailbox for user ",XMI," ",$S(XMREC="":"* not in ^VA(200, *",1:$P(XMREC,U))
"RTN","XMUTERM",178,0)
 D TERMINAT^XMUTERM1(XMI)
"RTN","XMUTERM",179,0)
 Q
"RTN","XMUTERM1")
0^80^B62925467
"RTN","XMUTERM1",1,0)
XMUTERM1 ;ISC-SF/GMB - Delete Mailbox (continued) ;05/14/99  14:22
"RTN","XMUTERM1",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMUTERM1",3,0)
 ; Taken from XUSTERM (SEA/AMF/WDE)
"RTN","XMUTERM1",4,0)
ALL1TASK ;
"RTN","XMUTERM1",5,0)
 N XMI,XMABORT,XMTERM,XMNAME,XMWHY,XMCUTEXT,XMLEN,XMCNT,XMADDED,XMAC,XMVC,XMPM,XMLASTON,XMTDATE,XMDELM,XMTOTAL
"RTN","XMUTERM1",6,0)
 S XMCUTEXT=$$FMTE^XLFDT(XMCUTOFF,"2DF")
"RTN","XMUTERM1",7,0)
 S XMLEN=$L($P(^VA(200,0),U,3))
"RTN","XMUTERM1",8,0)
 S (XMCNT,XMABORT,XMTOTAL)=0
"RTN","XMUTERM1",9,0)
 W:IOST["C-" @IOF D HEADER1
"RTN","XMUTERM1",10,0)
 S XMI=.999
"RTN","XMUTERM1",11,0)
 F  S XMI=$O(^XMB(3.7,XMI)) Q:XMI'>0  D  Q:XMABORT
"RTN","XMUTERM1",12,0)
 . S XMTOTAL=XMTOTAL+1 I '$D(ZTQUEUED) I XMTOTAL\100=0 U IO(0) W:$X>50 ! W "." U IO
"RTN","XMUTERM1",13,0)
 . D CHECK1(XMI,XMGRACE,XMCUTOFF,.XMTERM,.XMNAME,.XMWHY) Q:'XMTERM
"RTN","XMUTERM1",14,0)
 . I $Y+3>IOSL D  Q:XMABORT
"RTN","XMUTERM1",15,0)
 . . I IOST["C-" D PAGE^XMXUTIL(.XMABORT) Q:XMABORT
"RTN","XMUTERM1",16,0)
 . . W @IOF D HEADER1
"RTN","XMUTERM1",17,0)
 . D GETDATA(XMI,.XMADDED,.XMAC,.XMVC,.XMPM,.XMLASTON,.XMTDATE,.XMDELM)
"RTN","XMUTERM1",18,0)
 . W !,$J(XMI,XMLEN)," ",$E(XMNAME,1,32-XMLEN),?34,XMADDED,?44,XMAC,?47,XMVC,?50,XMPM,?53,XMLASTON,?63,XMTDATE,?76,XMDELM
"RTN","XMUTERM1",19,0)
 . S XMCNT=XMCNT+1
"RTN","XMUTERM1",20,0)
 . D:'XMTEST TERMINAT(XMI)  ; Delete if real mode
"RTN","XMUTERM1",21,0)
 W:XMCNT=0 !!,"No user mailboxes deleted."
"RTN","XMUTERM1",22,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","XMUTERM1",23,0)
 Q
"RTN","XMUTERM1",24,0)
HEADER1 ;
"RTN","XMUTERM1",25,0)
 W $S(XMTEST:"Test: ",1:""),"Delete user mailbox"
"RTN","XMUTERM1",26,0)
 W !,"(Logon cutoff date: ",XMCUTEXT,", AC=Access Code, VC=Verify Code, PM=Primary Menu)"
"RTN","XMUTERM1",27,0)
 ;       " ^VA(200             Last   Terminate  Delete"
"RTN","XMUTERM1",28,0)
 ;       " Created  AC VC PM  Sign on    Date     Mail"
"RTN","XMUTERM1",29,0)
 ;        xx/xx/xx  y  y  y  xx/xx/xx  xx/xx/xx     y
"RTN","XMUTERM1",30,0)
 W !!,?34," ^VA(200             Last   Terminate  Delete"
"RTN","XMUTERM1",31,0)
 W !,?XMLEN+1,"Delete Mailbox",?34," Created  AC VC PM  Sign on    Date     Mail"
"RTN","XMUTERM1",32,0)
 W !,"-------------------------------------------------------------------------------"
"RTN","XMUTERM1",33,0)
 Q
"RTN","XMUTERM1",34,0)
CHECK1(XMI,XMGRACE,XMCUTOFF,XMTERM,XMNAME,XMWHY) ;
"RTN","XMUTERM1",35,0)
 N XMREC,XMADDED
"RTN","XMUTERM1",36,0)
 S XMTERM=0
"RTN","XMUTERM1",37,0)
 Q:XMI<1
"RTN","XMUTERM1",38,0)
 S XMREC=$G(^VA(200,XMI,0))
"RTN","XMUTERM1",39,0)
 I XMREC="" D  Q
"RTN","XMUTERM1",40,0)
 . S XMTERM=1
"RTN","XMUTERM1",41,0)
 . S XMNAME="*No Name*"
"RTN","XMUTERM1",42,0)
 . S XMWHY="Not in NEW PERSON file"
"RTN","XMUTERM1",43,0)
 ; User is in NEW PERSON file
"RTN","XMUTERM1",44,0)
 S XMADDED=$P($G(^VA(200,XMI,1)),U,7)
"RTN","XMUTERM1",45,0)
 Q:XMADDED>XMGRACE
"RTN","XMUTERM1",46,0)
 I $P(XMREC,U,3)="" D  Q  ; if no access code...
"RTN","XMUTERM1",47,0)
 . N XMTDATE
"RTN","XMUTERM1",48,0)
 . S XMTDATE=$P(XMREC,U,11)
"RTN","XMUTERM1",49,0)
 . I XMTDATE="" D  Q
"RTN","XMUTERM1",50,0)
 . . S XMTERM=1
"RTN","XMUTERM1",51,0)
 . . S XMNAME=$P(XMREC,U)
"RTN","XMUTERM1",52,0)
 . . S XMWHY="No AC, no termination date"
"RTN","XMUTERM1",53,0)
 . I XMTDATE'<DT Q  ; To be Terminated in the future
"RTN","XMUTERM1",54,0)
 . I $P(XMREC,U,5)="n" Q  ; Terminated w/mail retention
"RTN","XMUTERM1",55,0)
 . S XMTERM=1
"RTN","XMUTERM1",56,0)
 . S XMNAME=$P(XMREC,U)
"RTN","XMUTERM1",57,0)
 . S XMWHY="No AC, terminated w/o mail retention"
"RTN","XMUTERM1",58,0)
 ; User has access code
"RTN","XMUTERM1",59,0)
 I $P($G(^VA(200,XMI,201)),U,1)="" D  Q  ; if no primary menu...
"RTN","XMUTERM1",60,0)
 . S XMTERM=1
"RTN","XMUTERM1",61,0)
 . S XMNAME=$P(XMREC,U)
"RTN","XMUTERM1",62,0)
 . S XMWHY="AC, but no PM"
"RTN","XMUTERM1",63,0)
 ; User has primary menu
"RTN","XMUTERM1",64,0)
 N XMLASTON  ; last sign on
"RTN","XMUTERM1",65,0)
 S XMLASTON=$P($G(^VA(200,XMI,1.1)),U)
"RTN","XMUTERM1",66,0)
 I $P($G(^VA(200,XMI,.1)),U,2)="" D  Q  ; if no verify code...
"RTN","XMUTERM1",67,0)
 . I XMLASTON="" D  Q
"RTN","XMUTERM1",68,0)
 . . I XMADDED<XMCUTOFF D  Q
"RTN","XMUTERM1",69,0)
 . . . S XMTERM=1
"RTN","XMUTERM1",70,0)
 . . . S XMNAME=$P(XMREC,U)
"RTN","XMUTERM1",71,0)
 . . . S XMWHY="AC & PM, no VC, no logon, added "_$$FMTE^XLFDT(XMADDED,"2DF")
"RTN","XMUTERM1",72,0)
 . I XMLASTON<XMCUTOFF D  Q
"RTN","XMUTERM1",73,0)
 . . S XMTERM=1
"RTN","XMUTERM1",74,0)
 . . S XMNAME=$P(XMREC,U)
"RTN","XMUTERM1",75,0)
 . . S XMWHY="AC & PM, no VC, last logon "_$$FMTE^XLFDT(XMLASTON,"2DF")
"RTN","XMUTERM1",76,0)
 ; User has verify code
"RTN","XMUTERM1",77,0)
 Q
"RTN","XMUTERM1",78,0)
GETDATA(XMI,XMADDED,XMAC,XMVC,XMPM,XMLASTON,XMTDATE,XMDELM,XMNEW) ;
"RTN","XMUTERM1",79,0)
 N XMREC
"RTN","XMUTERM1",80,0)
 S XMREC=$G(^VA(200,XMI,0))
"RTN","XMUTERM1",81,0)
 S XMADDED=$P($G(^VA(200,XMI,1)),U,7)  ; date added to NEW PERSON file
"RTN","XMUTERM1",82,0)
 S XMADDED=$S(XMADDED="":"",1:$$FMTE^XLFDT(XMADDED,"2DF"))
"RTN","XMUTERM1",83,0)
 S XMAC=$S($P(XMREC,U,3)="":"",1:"Y") ; access code
"RTN","XMUTERM1",84,0)
 S XMVC=$S($P($G(^VA(200,XMI,.1)),U,2)="":"",1:"Y") ; verify code
"RTN","XMUTERM1",85,0)
 S XMPM=$S($P($G(^VA(200,XMI,201)),U,1)="":"",1:"Y") ; primary menu
"RTN","XMUTERM1",86,0)
 S XMLASTON=$P($G(^VA(200,XMI,1.1)),U) ; last sign on
"RTN","XMUTERM1",87,0)
 S XMLASTON=$S(XMLASTON="":"",1:$$FMTE^XLFDT(XMLASTON,"2DF"))
"RTN","XMUTERM1",88,0)
 S XMTDATE=$P(XMREC,U,11)              ; termination date
"RTN","XMUTERM1",89,0)
 S XMTDATE=$S(XMTDATE="":"",1:$$FMTE^XLFDT(XMTDATE,"2DF"))
"RTN","XMUTERM1",90,0)
 S XMDELM=$$UP^XLFSTR($P(XMREC,U,5)) ; delete mail on termination
"RTN","XMUTERM1",91,0)
 S XMNEW=$P($G(^XMB(3.7,XMI,0)),U,6)  ; New messages
"RTN","XMUTERM1",92,0)
 Q
"RTN","XMUTERM1",93,0)
ALL2TASK ;
"RTN","XMUTERM1",94,0)
 N XMI,XMABORT,XMTERM,XMNAME,XMWHY,XMCUTEXT,XMSVC,XMLEN,XMCNT,XMADDED,XMAC,XMVC,XMPM,XMLASTON,XMTDATE,XMDELM,XMREC,XMTOTAL,XMNEW,XMFIRST
"RTN","XMUTERM1",95,0)
 K ^TMP("XM",$J)
"RTN","XMUTERM1",96,0)
 S XMCUTEXT=$$FMTE^XLFDT(XMCUTOFF,"2DF")
"RTN","XMUTERM1",97,0)
 S XMLEN=$L($P(^VA(200,0),U,3))
"RTN","XMUTERM1",98,0)
 S (XMCNT,XMABORT,XMTOTAL)=0,XMFIRST=1
"RTN","XMUTERM1",99,0)
 S XMI=.999
"RTN","XMUTERM1",100,0)
 F  S XMI=$O(^XMB(3.7,XMI)) Q:XMI'>0  D  Q:XMABORT
"RTN","XMUTERM1",101,0)
 . S XMTOTAL=XMTOTAL+1 I '$D(ZTQUEUED) I XMTOTAL\100=0 U IO(0) W:$X>50 ! W "." U IO
"RTN","XMUTERM1",102,0)
 . D CHECK2(XMI,XMCUTOFF,.XMTERM,.XMNAME,.XMWHY) Q:'XMTERM
"RTN","XMUTERM1",103,0)
 . S XMCNT=XMCNT+1
"RTN","XMUTERM1",104,0)
 . D GETDATA(XMI,.XMADDED,.XMAC,.XMVC,.XMPM,.XMLASTON,.XMTDATE,.XMDELM,.XMNEW)
"RTN","XMUTERM1",105,0)
 . S XMSVC=$S($P($G(^VA(200,XMI,5)),U,1)="":"*None*",1:$P($G(^DIC(49,$P(^(5),U,1),0),"*None*"),U,1))
"RTN","XMUTERM1",106,0)
 . S ^TMP("XM",$J,XMSVC,$S(XMNAME="":"*No Name*",1:$E(XMNAME,1,25-XMLEN)),XMI)=XMAC_U_XMVC_U_XMPM_U_XMLASTON_U_XMTDATE_U_XMDELM_U_XMNEW
"RTN","XMUTERM1",107,0)
 S (XMSVC,XMNAME,XMI)=""
"RTN","XMUTERM1",108,0)
 F  S XMSVC=$O(^TMP("XM",$J,XMSVC)) Q:XMSVC=""  D  Q:XMABORT
"RTN","XMUTERM1",109,0)
 . I XMFIRST D
"RTN","XMUTERM1",110,0)
 . . S XMFIRST=0
"RTN","XMUTERM1",111,0)
 . . W:IOST["C-" @IOF D HEADER2
"RTN","XMUTERM1",112,0)
 . E  D PAGE2(.XMABORT) Q:XMABORT
"RTN","XMUTERM1",113,0)
 . F  S XMNAME=$O(^TMP("XM",$J,XMSVC,XMNAME)) Q:XMNAME=""  D  Q:XMABORT
"RTN","XMUTERM1",114,0)
 . . F  S XMI=$O(^TMP("XM",$J,XMSVC,XMNAME,XMI)) Q:XMI=""  D  Q:XMABORT
"RTN","XMUTERM1",115,0)
 . . . I $Y+3>IOSL D PAGE2(.XMABORT) Q:XMABORT
"RTN","XMUTERM1",116,0)
 . . . S XMREC=^TMP("XM",$J,XMSVC,XMNAME,XMI)
"RTN","XMUTERM1",117,0)
 . . . W !,$J(XMI,XMLEN)," ",XMNAME,?27,$P(XMREC,U,1),?30,$P(XMREC,U,2),?33,$P(XMREC,U,3),?36,$P(XMREC,U,4),?46,$P(XMREC,U,5),?58,$P(XMREC,U,6),?60,$J($P(XMREC,U,7),6)
"RTN","XMUTERM1",118,0)
 W:XMCNT=0 !!,"No user mailboxes to report."
"RTN","XMUTERM1",119,0)
 K ^TMP("XM",$J)
"RTN","XMUTERM1",120,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","XMUTERM1",121,0)
 Q
"RTN","XMUTERM1",122,0)
PAGE2(XMABORT) ;
"RTN","XMUTERM1",123,0)
 I IOST["C-" D PAGE^XMXUTIL(.XMABORT) Q:XMABORT
"RTN","XMUTERM1",124,0)
 W @IOF D HEADER2
"RTN","XMUTERM1",125,0)
 Q
"RTN","XMUTERM1",126,0)
HEADER2 ;
"RTN","XMUTERM1",127,0)
 W "Check user mailbox for Service/Section: ",XMSVC
"RTN","XMUTERM1",128,0)
 W !!,"(Logon cutoff date: ",XMCUTEXT,", AC=Access Code, VC=Verify Code, PM=Primary Menu)"
"RTN","XMUTERM1",129,0)
 ;       "                                         Term  Deact"
"RTN","XMUTERM1",130,0)
 ;       "           Last   Terminate  Del   New   User  VISTA"
"RTN","XMUTERM1",131,0)
 ;       "AC VC PM  Sign on    Date    Mail  Msgs  Mbox  Access"
"RTN","XMUTERM1",132,0)
 ;        y  y  y  xx/xx/xx  xx/xx/xx   y  xxxxxx 
"RTN","XMUTERM1",133,0)
 ;
"RTN","XMUTERM1",134,0)
 W !!,?27,"                                         Term  Deact"
"RTN","XMUTERM1",135,0)
 W !,?27,"           Last   Terminate  Del   New   User  VISTA"
"RTN","XMUTERM1",136,0)
 W !,?XMLEN+1,"Check Mailbox",?27,"AC VC PM  Sign on    Date    Mail  Msgs  Mbox  Access"
"RTN","XMUTERM1",137,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","XMUTERM1",138,0)
 Q
"RTN","XMUTERM1",139,0)
CHECK2(XMI,XMCUTOFF,XMTERM,XMNAME,XMWHY) ;
"RTN","XMUTERM1",140,0)
 N XMREC
"RTN","XMUTERM1",141,0)
 S XMTERM=0
"RTN","XMUTERM1",142,0)
 Q:XMI<1
"RTN","XMUTERM1",143,0)
 S XMREC=$G(^VA(200,XMI,0))
"RTN","XMUTERM1",144,0)
 Q:XMREC=""  ; not in NEW PERSON file
"RTN","XMUTERM1",145,0)
 I $P(XMREC,U,3)="" D  Q
"RTN","XMUTERM1",146,0)
 . ; no access code
"RTN","XMUTERM1",147,0)
 . N XMTDATE
"RTN","XMUTERM1",148,0)
 . S XMTDATE=$P(XMREC,U,11)
"RTN","XMUTERM1",149,0)
 . Q:XMTDATE=""  ; not terminated
"RTN","XMUTERM1",150,0)
 . Q:XMTDATE'<XMCUTOFF  ; terminated after cutoff date
"RTN","XMUTERM1",151,0)
 . Q:$P(XMREC,U,5)'="n"  ; Terminated w/o mail retention
"RTN","XMUTERM1",152,0)
 . S XMTERM=1
"RTN","XMUTERM1",153,0)
 . S XMNAME=$P(XMREC,U)
"RTN","XMUTERM1",154,0)
 . S XMWHY="No AC, terminated w/mail retention"
"RTN","XMUTERM1",155,0)
 ; User has access code
"RTN","XMUTERM1",156,0)
 Q:$P($G(^VA(200,XMI,201)),U,1)=""  ; no primary menu
"RTN","XMUTERM1",157,0)
 Q:$P($G(^VA(200,XMI,.1)),U,2)=""   ; no verify code
"RTN","XMUTERM1",158,0)
 ; User has verify code and primary menu
"RTN","XMUTERM1",159,0)
 N XMLASTON  ; last sign on
"RTN","XMUTERM1",160,0)
 S XMLASTON=$P($G(^VA(200,XMI,1.1)),U)
"RTN","XMUTERM1",161,0)
 I XMLASTON<XMCUTOFF D  Q
"RTN","XMUTERM1",162,0)
 . S XMTERM=1
"RTN","XMUTERM1",163,0)
 . S XMNAME=$P(XMREC,U)
"RTN","XMUTERM1",164,0)
 . I XMLASTON="" S XMWHY="AC, VC, & PM, no logon" Q
"RTN","XMUTERM1",165,0)
 . S XMWHY="AC, VC, & PM, last logon "_$$FMTE^XLFDT(XMLASTON,"2DF")
"RTN","XMUTERM1",166,0)
 Q
"RTN","XMUTERM1",167,0)
TERMINAT(XMDUZ) ; Remove user from MailMan
"RTN","XMUTERM1",168,0)
 D GROUP(XMDUZ)
"RTN","XMUTERM1",169,0)
 D SURROGAT(XMDUZ)
"RTN","XMUTERM1",170,0)
 D MAILBOX(XMDUZ)
"RTN","XMUTERM1",171,0)
 D LATERNEW(XMDUZ)
"RTN","XMUTERM1",172,0)
 D LATERSND(XMDUZ)
"RTN","XMUTERM1",173,0)
 Q
"RTN","XMUTERM1",174,0)
GROUP(XMDUZ) ; Remove user from mail groups
"RTN","XMUTERM1",175,0)
 N XMI,XMJ,DIK,DA
"RTN","XMUTERM1",176,0)
 ; Remove user as member from all mail groups
"RTN","XMUTERM1",177,0)
 S XMI=0
"RTN","XMUTERM1",178,0)
 F  S XMI=$O(^XMB(3.8,"AB",XMDUZ,XMI)) Q:XMI'>0  D
"RTN","XMUTERM1",179,0)
 . S DA(1)=XMI,DIK="^XMB(3.8,XMI,1,",XMJ=0
"RTN","XMUTERM1",180,0)
 . F  S XMJ=$O(^XMB(3.8,"AB",XMDUZ,XMI,XMJ)) Q:XMJ'>0  S DA=XMJ D ^DIK
"RTN","XMUTERM1",181,0)
 K ^XMB(3.8,"AB",XMDUZ)
"RTN","XMUTERM1",182,0)
 ; Remove user's personal mail groups
"RTN","XMUTERM1",183,0)
 S XMI=0,DIK="^XMB(3.8,"
"RTN","XMUTERM1",184,0)
 F  S XMI=$O(^XMB(3.8,XMI)) Q:XMI'>0  I $P(^(XMI,0),U,6)=1,$G(^(3))=XMDUZ S DA=XMI D ^DIK
"RTN","XMUTERM1",185,0)
 ; Remove user as authorized sender from all mail groups
"RTN","XMUTERM1",186,0)
 S XMI=0,DIK="^XMB(3.8,XMI,4,"
"RTN","XMUTERM1",187,0)
 F  S XMI=$O(^XMB(3.8,XMI)) Q:XMI'>0  D
"RTN","XMUTERM1",188,0)
 . Q:'$D(^XMB(3.8,XMI,4,"B",XMDUZ))
"RTN","XMUTERM1",189,0)
 . S DA=$O(^XMB(3.8,XMI,4,"B",XMDUZ,0))
"RTN","XMUTERM1",190,0)
 . I '$D(^XMB(3.8,XMI,4,DA,0)) K ^XMB(3.8,XMI,4,"B",XMDUZ) Q
"RTN","XMUTERM1",191,0)
 . S DA(1)=XMI D ^DIK
"RTN","XMUTERM1",192,0)
 Q
"RTN","XMUTERM1",193,0)
SURROGAT(XMDUZ) ; Remove as mail surrogate
"RTN","XMUTERM1",194,0)
 N XMI,DA,DIK
"RTN","XMUTERM1",195,0)
 S XMI=0,DIK="^XMB(3.7,XMI,9,"
"RTN","XMUTERM1",196,0)
 F  S XMI=$O(^XMB(3.7,"AB",XMDUZ,XMI)) Q:XMI'>0  D
"RTN","XMUTERM1",197,0)
 . S DA=$O(^XMB(3.7,"AB",XMDUZ,XMI,0))
"RTN","XMUTERM1",198,0)
 . I '$D(^XMB(3.7,XMI,9,DA,0)) K ^XMB(3.7,"AB",XMDUZ,XMI) Q
"RTN","XMUTERM1",199,0)
 . S DA(1)=XMI D ^DIK
"RTN","XMUTERM1",200,0)
 K ^XMB(3.7,"AB",XMDUZ)
"RTN","XMUTERM1",201,0)
 Q
"RTN","XMUTERM1",202,0)
MAILBOX(XMDUZ) ; Remove user's mailbox
"RTN","XMUTERM1",203,0)
 Q:'$D(^XMB(3.7,XMDUZ,0))
"RTN","XMUTERM1",204,0)
 N DIK,DA
"RTN","XMUTERM1",205,0)
 S DIK="^XMB(3.7,",DA=XMDUZ D ^DIK
"RTN","XMUTERM1",206,0)
 Q
"RTN","XMUTERM1",207,0)
LATERNEW(XMDUZ) ; Remove the scheduling of any messages slated to become new for this user
"RTN","XMUTERM1",208,0)
 N DIK,DA
"RTN","XMUTERM1",209,0)
 S DIK="^XMB(3.73,"
"RTN","XMUTERM1",210,0)
 S DA=""
"RTN","XMUTERM1",211,0)
 F  S DA=$O(^XMB(3.73,"C",XMDUZ,DA)) Q:'DA  D ^DIK
"RTN","XMUTERM1",212,0)
 Q
"RTN","XMUTERM1",213,0)
LATERSND(XMDUZ) ; Remove the scheduling of any messages slated to be sent by this user.
"RTN","XMUTERM1",214,0)
 N XMZ,DIK,DA
"RTN","XMUTERM1",215,0)
 S XMZ=0
"RTN","XMUTERM1",216,0)
 F  S XMZ=$O(^XMB(3.9,"AW",XMDUZ,XMZ)) Q:'XMZ  D
"RTN","XMUTERM1",217,0)
 . S DA(1)=XMZ
"RTN","XMUTERM1",218,0)
 . S DIK="^XMB(3.9,"_DA(1)_",7,"
"RTN","XMUTERM1",219,0)
 . S DA=0
"RTN","XMUTERM1",220,0)
 . F  S DA=$O(^XMB(3.9,"AW",XMDUZ,XMZ,DA)) Q:'DA  D ^DIK
"RTN","XMUTERM1",221,0)
 Q
"RTN","XMUTPUR0")
0^257^B2360795
"RTN","XMUTPUR0",1,0)
XMUTPUR0 ;(KVAMC)/XXX-Maintain "AI" X-ref ;06/22/99  15:33
"RTN","XMUTPUR0",2,0)
 ;;7.1;MailMan;**7,50**;Jun 02, 1994
"RTN","XMUTPUR0",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMUTPUR0",4,0)
 ; ^XMUTPUR0  XMMGR-PURGE-AI-XREF
"RTN","XMUTPUR0",5,0)
 ;
"RTN","XMUTPUR0",6,0)
 S M='$G(ZTQUEUED)>0
"RTN","XMUTPUR0",7,0)
S ;Setup I=#nodes, K=#killed
"RTN","XMUTPUR0",8,0)
 S I=0,K=0
"RTN","XMUTPUR0",9,0)
 S %=$O(^XMBX(3.9,"AI",""))
"RTN","XMUTPUR0",10,0)
 I %="" W:M !,"XMBX Global 'AI' Node empty!",! Q
"RTN","XMUTPUR0",11,0)
 S %DT="",X="T-730" D ^%DT S XMDT=Y X ^DD("DD") G:'M A
"RTN","XMUTPUR0",12,0)
T W !,"Kill all XMBX 'AI' nodes older than "_Y_"? " R X:DTIME W !
"RTN","XMUTPUR0",13,0)
 I X["^" W !!,"Process Aborted !" H 1 G K
"RTN","XMUTPUR0",14,0)
 I X["?" W !!,"Enter 'Y' for 'YES', 'N' for 'NO' or '^' to abort",! G T
"RTN","XMUTPUR0",15,0)
 G K:"Qq"[X,K:X="^",K:"Nn"[X,S:"Yy"'[X
"RTN","XMUTPUR0",16,0)
 W !!,"***** Starting at " D ^%T
"RTN","XMUTPUR0",17,0)
A ;
"RTN","XMUTPUR0",18,0)
 N XMS,XMI,XMZ,XMXDT
"RTN","XMUTPUR0",19,0)
 ; XMS=Site, XMI=Msg ID, XMZ=Msg # here at this site
"RTN","XMUTPUR0",20,0)
 S (XMS,XMI,XMZ)=""
"RTN","XMUTPUR0",21,0)
 F  S XMS=$O(^XMBX(3.9,"AI",XMS)) Q:XMS=""  D
"RTN","XMUTPUR0",22,0)
 . F  S XMI=$O(^XMBX(3.9,"AI",XMS,XMI)) Q:XMI=""  D
"RTN","XMUTPUR0",23,0)
 . . S XMZ=$O(^XMBX(3.9,"AI",XMS,XMI,"")),XMXDT=$G(^(XMZ))
"RTN","XMUTPUR0",24,0)
 . . S I=I+1
"RTN","XMUTPUR0",25,0)
 . . I 'XMXDT S ^XMBX(3.9,"AI",XMS,XMI,XMZ)=DT Q
"RTN","XMUTPUR0",26,0)
 . . I XMXDT<XMDT K ^XMBX(3.9,"AI",XMS,XMI,XMZ) S K=K+1
"RTN","XMUTPUR0",27,0)
 ;
"RTN","XMUTPUR0",28,0)
 I M,I>0 W !,"Total Nodes:   "_I,!,"Nodes Killed:  "_K,!,"End at " D ^%T
"RTN","XMUTPUR0",29,0)
 I M W !!,"***** Done @ " D ^%T
"RTN","XMUTPUR0",30,0)
K K %,%H,%I,A,B,C,I,J,K,M,X,XMDT,Y
"RTN","XMUTPUR0",31,0)
 Q
"RTN","XMVGROUP")
0^124^B19313669
"RTN","XMVGROUP",1,0)
XMVGROUP ;ISC-SF/GMB-Group creation/enrollment ;06/09/99  16:13
"RTN","XMVGROUP",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMVGROUP",3,0)
 ; Replaces JOIN, ENT^XMA7G & ^XMA7G1 (ISC-WASH/RJ/THM/CAP/JA)
"RTN","XMVGROUP",4,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMVGROUP",5,0)
 ; ENROLL    XMENROLL        - Enroll in / Disenroll from a group
"RTN","XMVGROUP",6,0)
 ; LCOORD    XMMGR-MAIL-GRP-COORDINATOR
"RTN","XMVGROUP",7,0)
 ; RCOORD    XMMGR-MAIL-GRP-COORD-W/REMOTES
"RTN","XMVGROUP",8,0)
 ; PERSONAL  XMEDITPERSGROUP - Edit user's personal group.
"RTN","XMVGROUP",9,0)
ENROLL ; Enroll in / Disenroll from a group
"RTN","XMVGROUP",10,0)
 N DIC,Y,XMTYPE,XMABORT,XMIEN
"RTN","XMVGROUP",11,0)
 S XMABORT=0
"RTN","XMVGROUP",12,0)
 S:'$D(XMDUZ) XMDUZ=DUZ
"RTN","XMVGROUP",13,0)
 F  D  Q:XMABORT
"RTN","XMVGROUP",14,0)
 . S DIC="^XMB(3.8,",DIC(0)="AEQMZ"
"RTN","XMVGROUP",15,0)
 . S DIC("S")="S XMTYPE=$P(^(0),U,2) I XMTYPE=""PR""&$D(^XMB(3.8,+Y,1,""B"",XMDUZ))!(XMTYPE=""PU"")"
"RTN","XMVGROUP",16,0)
 . S DIC("W")="W:$D(^XMB(3.8,+Y,1,""B"",XMDUZ)) ?35,""Member"" I $P(^XMB(3.8,+Y,0),U,3)'=""y"" W ?43,""...Self Enrollment Not Allowed."""
"RTN","XMVGROUP",17,0)
 . W !
"RTN","XMVGROUP",18,0)
 . D ^DIC I Y<0 S XMABORT=1 Q
"RTN","XMVGROUP",19,0)
 . S XMIEN=+Y
"RTN","XMVGROUP",20,0)
 . I $P(^XMB(3.8,XMIEN,0),U,3)'="y" W !,"Self enrollment is not allowed for this mail group." Q
"RTN","XMVGROUP",21,0)
 . I $D(^XMB(3.8,XMIEN,1,"B",XMDUZ)) D DROP(XMIEN,XMDUZ) Q
"RTN","XMVGROUP",22,0)
 . D JOIN(XMIEN,XMDUZ)
"RTN","XMVGROUP",23,0)
 Q
"RTN","XMVGROUP",24,0)
JOIN(XMIEN,XMDUZ) ; Enroll in a group
"RTN","XMVGROUP",25,0)
 N XMFDA
"RTN","XMVGROUP",26,0)
 S XMFDA(3.81,"+1,"_XMIEN_",",.01)=XMDUZ
"RTN","XMVGROUP",27,0)
 D UPDATE^DIE("","XMFDA")
"RTN","XMVGROUP",28,0)
 W !,"You are now a member."
"RTN","XMVGROUP",29,0)
 Q
"RTN","XMVGROUP",30,0)
DROP(XMIEN,XMDUZ) ; Disenroll from a group
"RTN","XMVGROUP",31,0)
 N DIR,X,Y
"RTN","XMVGROUP",32,0)
 S DIR(0)="Y"
"RTN","XMVGROUP",33,0)
 S DIR("A")="You are a member.  Do you want to drop out"
"RTN","XMVGROUP",34,0)
 S DIR("B")="NO"
"RTN","XMVGROUP",35,0)
 S DIR("?")="Enter YES to remove yourself from the group; NO to remain a member"
"RTN","XMVGROUP",36,0)
 D ^DIR Q:$D(DIRUT)!'Y
"RTN","XMVGROUP",37,0)
 K DIR,X,Y
"RTN","XMVGROUP",38,0)
 N DA,DIK
"RTN","XMVGROUP",39,0)
 S DA(1)=XMIEN,DA=$O(^XMB(3.8,XMIEN,1,"B",XMDUZ,0)),DIK="^XMB(3.8,"_XMIEN_",1,"
"RTN","XMVGROUP",40,0)
 D ^DIK
"RTN","XMVGROUP",41,0)
 W !,"You are no longer a member."
"RTN","XMVGROUP",42,0)
 Q
"RTN","XMVGROUP",43,0)
PERSONAL ; Enter/Edit Personal Group
"RTN","XMVGROUP",44,0)
 ; XMIA is used for interaction on the REMOTE MEMBER input transform to facilitate lookup
"RTN","XMVGROUP",45,0)
 N DIC,DLAYGO,X,Y,XMABORT,XMIA
"RTN","XMVGROUP",46,0)
 S XMABORT=0,XMIA=1
"RTN","XMVGROUP",47,0)
 S DIC="^XMB(3.8,",DIC(0)="AEQMZL",DLAYGO=3.8
"RTN","XMVGROUP",48,0)
 S DIC("S")="I $P(^(0),U,2)=""PR"",$D(^XMB(3.8,+Y,3)),$P(^(3),U)=$G(XMDUZ,DUZ)"
"RTN","XMVGROUP",49,0)
 F  D  Q:XMABORT
"RTN","XMVGROUP",50,0)
 . W !
"RTN","XMVGROUP",51,0)
 . D ^DIC I Y<0 S XMABORT=1 Q
"RTN","XMVGROUP",52,0)
 . D PEDIT(+Y,$P(Y,U,3))
"RTN","XMVGROUP",53,0)
 Q
"RTN","XMVGROUP",54,0)
PEDIT(DA,XMNEW) ; Edit personal group
"RTN","XMVGROUP",55,0)
 N DIE,DR,DIDEL,Y,DIC
"RTN","XMVGROUP",56,0)
 S (DIDEL,DIE)=3.8
"RTN","XMVGROUP",57,0)
 S:XMNEW DR="4////PR;5////"_$G(XMDUZ,DUZ)_";7////n;10////1;"
"RTN","XMVGROUP",58,0)
 S DR=$G(DR)_".01T;2;12"
"RTN","XMVGROUP",59,0)
 S:$P(^XMB(1,1,0),U,19) DR=DR_";14;15"
"RTN","XMVGROUP",60,0)
 D ^DIE
"RTN","XMVGROUP",61,0)
 Q
"RTN","XMVGROUP",62,0)
LAYGO(X) ; Prevent someone from adding a (private) group with the same name as a public one.
"RTN","XMVGROUP",63,0)
 ; This function is invoked by the LAYGO field of ^XMB(3.8,.01)
"RTN","XMVGROUP",64,0)
 ; Returns 1 if group X may be created; 0 if not.
"RTN","XMVGROUP",65,0)
 N IEN,LAYGO
"RTN","XMVGROUP",66,0)
 S IEN="",LAYGO=1
"RTN","XMVGROUP",67,0)
 F  S IEN=$O(^XMB(3.8,"B",X,IEN)) Q:IEN=""  D  Q:'LAYGO
"RTN","XMVGROUP",68,0)
 . Q:$P(^XMB(3.8,IEN,0),U,2)="PR"
"RTN","XMVGROUP",69,0)
 . S LAYGO=0
"RTN","XMVGROUP",70,0)
 . D EN^DDIOL("Can't add it because public group '"_X_"' already exists.","","!,*7")
"RTN","XMVGROUP",71,0)
 Q LAYGO
"RTN","XMVGROUP",72,0)
REMOTE(XMADDR,XMIA) ; Serves as input transform for 'remote member'
"RTN","XMVGROUP",73,0)
 ; Allow remote addressees or local devices or local servers
"RTN","XMVGROUP",74,0)
 N XMERROR,XMRESTR,XMINSTR,XMFULL,XMPREFIX,DIX,DO
"RTN","XMVGROUP",75,0)
 S XMINSTR("ADDR FLAGS")="X" ; do not create ^TMP(, just check.
"RTN","XMVGROUP",76,0)
 I XMADDR[":" D  Q:'$D(XMADDR)
"RTN","XMVGROUP",77,0)
 . D RTYPE^XMXADDR1($P(XMADDR,":")) I $D(XMERROR) K XMADDR Q
"RTN","XMVGROUP",78,0)
 . D PREFIX^XMXADDR1(.XMADDR,.XMPREFIX) I $D(XMERROR) K XMADDR Q
"RTN","XMVGROUP",79,0)
 I XMADDR'["@","^D.^d.^S.^s.^"'[(U_$E(XMADDR,1,2)_U),'$D(XMPREFIX) K XMADDR Q
"RTN","XMVGROUP",80,0)
 D ADDRESS^XMXADDR(DUZ,XMADDR,.XMFULL,.XMERROR)
"RTN","XMVGROUP",81,0)
 I $D(XMERROR) K XMADDR Q
"RTN","XMVGROUP",82,0)
 I XMFULL'["@" D
"RTN","XMVGROUP",83,0)
 . I $E(XMFULL,1,2)="D."!($E(XMFULL,1,2)="S.") S XMFULL=XMFULL_"@"_^XMB("NETNAME") Q
"RTN","XMVGROUP",84,0)
 . ;I $G(XMPREFIX)'="" S XMFULL=XMFULL_"@"_^XMB("NETNAME") Q
"RTN","XMVGROUP",85,0)
 I XMFULL'["@" D  Q
"RTN","XMVGROUP",86,0)
 . K XMADDR
"RTN","XMVGROUP",87,0)
 . D EN^DDIOL("It can't be local address, except for Device or Server.")
"RTN","XMVGROUP",88,0)
 . I $E(XMFULL,1,2)="G." D EN^DDIOL("Put the group in the MEMBER GROUP multiple.")
"RTN","XMVGROUP",89,0)
 . E  D EN^DDIOL("Put the person in the MEMBER multiple.")
"RTN","XMVGROUP",90,0)
 . I $G(XMPREFIX)'="" D EN^DDIOL("Put "_XMPREFIX_" in the TYPE field.")
"RTN","XMVGROUP",91,0)
 I $G(XMPREFIX)'="" S XMFULL=XMPREFIX_":"_XMFULL
"RTN","XMVGROUP",92,0)
 S XMADDR=XMFULL
"RTN","XMVGROUP",93,0)
 Q
"RTN","XMVGROUP",94,0)
LCOORD ; Mail Group Coordinator edit w/o remote members
"RTN","XMVGROUP",95,0)
 D COORD(0)
"RTN","XMVGROUP",96,0)
 Q
"RTN","XMVGROUP",97,0)
RCOORD ; Mail Group Coordinator edit w/remote members
"RTN","XMVGROUP",98,0)
 D COORD(1)
"RTN","XMVGROUP",99,0)
 Q
"RTN","XMVGROUP",100,0)
COORD(XMREMOTE) ;
"RTN","XMVGROUP",101,0)
 ; XMIA is used for interaction on the REMOTE MEMBER input transform to facilitate lookup
"RTN","XMVGROUP",102,0)
 N DIC,XMABORT,DLAYGO,X,Y,XMIA
"RTN","XMVGROUP",103,0)
 S XMABORT=0,XMIA=1
"RTN","XMVGROUP",104,0)
 S DIC(0)="AEQM",DIC="^XMB(3.8,"
"RTN","XMVGROUP",105,0)
 ; If user doesn't hold the XMMGR key, then screen whether user is coordinator or organizer.
"RTN","XMVGROUP",106,0)
 I '$D(^XUSEC("XMMGR",DUZ)) S DIC("S")="I $D(^XMB(3.8,""AC"",$G(XMDUZ,DUZ),+Y))!($P($G(^XMB(3.8,+Y,3)),U,1)=DUZ)"
"RTN","XMVGROUP",107,0)
 F  D  Q:XMABORT
"RTN","XMVGROUP",108,0)
 . W !
"RTN","XMVGROUP",109,0)
 . D ^DIC I Y<0 S XMABORT=1 Q
"RTN","XMVGROUP",110,0)
 . D CEDIT(+Y,XMREMOTE)
"RTN","XMVGROUP",111,0)
 Q
"RTN","XMVGROUP",112,0)
CEDIT(DA,XMREMOTE) ;
"RTN","XMVGROUP",113,0)
 N DIE,DR,DIDEL,Y,DIC
"RTN","XMVGROUP",114,0)
 S DLAYGO=3.8,DIE="^XMB(3.8,"
"RTN","XMVGROUP",115,0)
 ; Allow editing of the Members - Remote field ?
"RTN","XMVGROUP",116,0)
 S DR="2" ; local members
"RTN","XMVGROUP",117,0)
 S DR=DR_";11" ; member groups
"RTN","XMVGROUP",118,0)
 S:XMREMOTE DR=DR_";12" ; remote members
"RTN","XMVGROUP",119,0)
 D ^DIE
"RTN","XMVGROUP",120,0)
 Q
"RTN","XMVSURR")
0^39^B6592053
"RTN","XMVSURR",1,0)
XMVSURR ;ISC-SF/GMB-Surrogate management ;04/14/99  15:40
"RTN","XMVSURR",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMVSURR",3,0)
 ; Replaces ^XMA7 (ISC-WASH/RJ/THM/CAP)
"RTN","XMVSURR",4,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMVSURR",5,0)
 ; SHARE    XMSHARE  - Become SHARED,MAIL
"RTN","XMVSURR",6,0)
 ; ASSUME   XMASSUME - Become another user
"RTN","XMVSURR",7,0)
SHARE ; Assume the identity of SHARED,MAIL
"RTN","XMVSURR",8,0)
 Q:'$$CHKOK
"RTN","XMVSURR",9,0)
 S XMDUZ=.6
"RTN","XMVSURR",10,0)
 D SURROGAT^XMVVITAE(XMDUZ,.XMV,.XMDUN,"",.XMPRIV)
"RTN","XMVSURR",11,0)
 D HEADER^XM
"RTN","XMVSURR",12,0)
 D MANAGE^XMJBM
"RTN","XMVSURR",13,0)
 D SELF
"RTN","XMVSURR",14,0)
 Q
"RTN","XMVSURR",15,0)
CHKOK() ;
"RTN","XMVSURR",16,0)
 I $D(^XUSEC("XMNOPRIV",DUZ)) W !,*7,"You have been given the XMNOPRIV key and may not become anyone's surrogate." Q 0
"RTN","XMVSURR",17,0)
 D CHECK^XMVVITAE
"RTN","XMVSURR",18,0)
 Q 1
"RTN","XMVSURR",19,0)
SELF ;
"RTN","XMVSURR",20,0)
 S XMDUZ=DUZ
"RTN","XMVSURR",21,0)
 D USER^XMVVITAE(XMDUZ,.XMV,.XMNOSEND,.XMDUN)
"RTN","XMVSURR",22,0)
 W *7,!,"You are now yourself again.",!
"RTN","XMVSURR",23,0)
 D HEADER^XM
"RTN","XMVSURR",24,0)
 Q
"RTN","XMVSURR",25,0)
ASSUME ; Assume someone else's identity
"RTN","XMVSURR",26,0)
 I '$D(^XMB(3.7,"AB",DUZ)) D SHARE Q
"RTN","XMVSURR",27,0)
 Q:'$$CHKOK
"RTN","XMVSURR",28,0)
 D LISTEM
"RTN","XMVSURR",29,0)
 N DIC,Y
"RTN","XMVSURR",30,0)
 S DIC(0)="AEMQZ"
"RTN","XMVSURR",31,0)
 S D="B^BB^C^D"
"RTN","XMVSURR",32,0)
 S DIC="^VA(200,"
"RTN","XMVSURR",33,0)
 S DIC("W")="D SHOWPRIV^XMVSURR(Y)"
"RTN","XMVSURR",34,0)
 S DIC("S")="I Y=.6!$D(^XMB(3.7,""AB"",DUZ,Y))"
"RTN","XMVSURR",35,0)
 I XMDUZ=DUZ D
"RTN","XMVSURR",36,0)
 . S DIC("B")="SHARED,MAIL"
"RTN","XMVSURR",37,0)
 E  D
"RTN","XMVSURR",38,0)
 . S DIC("S")=DIC("S")_"!(Y=DUZ),Y'=XMDUZ"
"RTN","XMVSURR",39,0)
 . S DIC("B")=XMV("DUZ NAME")
"RTN","XMVSURR",40,0)
 . W !,"You may select yourself to resume your own identity."
"RTN","XMVSURR",41,0)
 D MIX^DIC1 I Y=-1!$D(DUOUT)!$D(DTOUT) Q
"RTN","XMVSURR",42,0)
 S XMDUZ=+Y
"RTN","XMVSURR",43,0)
 I XMDUZ=DUZ D SELF Q
"RTN","XMVSURR",44,0)
 I XMDUZ=.6 D SHARE Q
"RTN","XMVSURR",45,0)
 D SURROGAT^XMVVITAE(XMDUZ,.XMV,.XMDUN,.XMNOSEND,.XMPRIV)
"RTN","XMVSURR",46,0)
 D HEADER^XM
"RTN","XMVSURR",47,0)
 Q
"RTN","XMVSURR",48,0)
LISTEM ; List surrogates a user may become
"RTN","XMVSURR",49,0)
 N XMDUZ
"RTN","XMVSURR",50,0)
 W !,"Choose from:"
"RTN","XMVSURR",51,0)
 S XMDUZ=0
"RTN","XMVSURR",52,0)
 F  S XMDUZ=$O(^XMB(3.7,"AB",DUZ,XMDUZ)) Q:'XMDUZ  W !,?3,$$NAME^XMXUTIL(XMDUZ) D SHOWPRIV(XMDUZ)
"RTN","XMVSURR",53,0)
 W !,?3,$$NAME^XMXUTIL(.6) D SHOWPRIV(.6) W !
"RTN","XMVSURR",54,0)
 Q
"RTN","XMVSURR",55,0)
SHOWPRIV(XMDUZ) ;
"RTN","XMVSURR",56,0)
 Q:XMDUZ=DUZ
"RTN","XMVSURR",57,0)
 I XMDUZ=.6 W ?40,"Read Privilege" Q
"RTN","XMVSURR",58,0)
 N XMPRIV,XMNEW
"RTN","XMVSURR",59,0)
 S XMPRIV=$P($G(^XMB(3.7,XMDUZ,9,+$O(^XMB(3.7,"AB",DUZ,XMDUZ,0)),0)),U,2,3)
"RTN","XMVSURR",60,0)
 I XMPRIV'["y" W ?40,"No Privileges" Q
"RTN","XMVSURR",61,0)
 S XMNEW=$$TNMSGCT^XMXUTIL(XMDUZ)
"RTN","XMVSURR",62,0)
 I $L(XMPRIV,"y")>2 W ?39," Read & Write Privileges"
"RTN","XMVSURR",63,0)
 E  W ?39,$S($P(XMPRIV,U)["y":" Read",1:" Write")," Privilege"
"RTN","XMVSURR",64,0)
 W ?64," ",$S(XMNEW:XMNEW,1:"No")," New Msgs"
"RTN","XMVSURR",65,0)
 Q
"RTN","XMVVITA")
0^262^B17382605
"RTN","XMVVITA",1,0)
XMVVITA ;ISC-SF/GMB-Edit User's MailMan Variables ;06/01/99  14:49
"RTN","XMVVITA",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMVVITA",3,0)
 ; Replaces ^XMGAPI1,FWD^XMA21FWD,BANNER^XMA6,EDIT^XMA7 (ISC-WASH/CAP)
"RTN","XMVVITA",4,0)
 ;
"RTN","XMVVITA",5,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMVVITA",6,0)
 ; BANNER   XMBANNER       - Edit user's banner
"RTN","XMVVITA",7,0)
 ; EDIT     XMEDITUSER     - Edit user's preferences
"RTN","XMVVITA",8,0)
 ; FILTER   XM FILTER EDIT - Edit user's message filters
"RTN","XMVVITA",9,0)
 ; BASKET   XM DELIVERY BASKET EDIT - Edit user's delivery basket preferences
"RTN","XMVVITA",10,0)
 ; FORWARD  XMEDITFWD      - Edit user's forwarding address
"RTN","XMVVITA",11,0)
 ; SURR     XMEDITSURR     - Edit user's surrogates
"RTN","XMVVITA",12,0)
FORWARD ; Edit forwarding address
"RTN","XMVVITA",13,0)
 N XMIA
"RTN","XMVVITA",14,0)
 S XMIA=1
"RTN","XMVVITA",15,0)
 N DIE,DA,DR
"RTN","XMVVITA",16,0)
 S DIE=3.7
"RTN","XMVVITA",17,0)
 S DA=DUZ
"RTN","XMVVITA",18,0)
 S DR="2;2.1"
"RTN","XMVVITA",19,0)
 D ^DIE
"RTN","XMVVITA",20,0)
 Q
"RTN","XMVVITA",21,0)
XMFWD(XMADDR,XMIA) ; Serves as input transform for 'forwarding address'
"RTN","XMVVITA",22,0)
 N XMERROR,XMRESTR,XMINSTR,XMFULL
"RTN","XMVVITA",23,0)
 I XMADDR'["@","^D.^d.^"'[(U_$E(XMADDR,1,2)_U) K XMADDR Q
"RTN","XMVVITA",24,0)
 S XMINSTR("ADDR FLAGS")="X" ; do not create ^TMP(, just check.
"RTN","XMVVITA",25,0)
 D ADDRESS^XMXADDR(DUZ,XMADDR,.XMFULL,.XMERROR)
"RTN","XMVVITA",26,0)
 I $D(XMERROR) K XMADDR Q
"RTN","XMVVITA",27,0)
 I XMFULL'["@" D
"RTN","XMVVITA",28,0)
 . ; Remote address is really local.  OK if device.
"RTN","XMVVITA",29,0)
 . I $E(XMFULL,1,2)="D." S XMFULL=XMFULL_"@"_^XMB("NETNAME")
"RTN","XMVVITA",30,0)
 I XMFULL'["@" D  Q
"RTN","XMVVITA",31,0)
 . ; Remote address is really local
"RTN","XMVVITA",32,0)
 . K XMADDR
"RTN","XMVVITA",33,0)
 . D EN^DDIOL("You can't have your mail forwarded to a local address.")
"RTN","XMVVITA",34,0)
 S XMADDR=XMFULL
"RTN","XMVVITA",35,0)
 Q
"RTN","XMVVITA",36,0)
DELFWD(XMUSER,XMFWD,XMERROR) ; Delete a user's invalid forwarding address.
"RTN","XMVVITA",37,0)
 S XMFDA(3.7,XMUSER_",",2)="@"
"RTN","XMVVITA",38,0)
 D FILE^DIE("","XMFDA")
"RTN","XMVVITA",39,0)
 N XMPARM,XMINSTR
"RTN","XMVVITA",40,0)
 S XMINSTR("FROM")=.5
"RTN","XMVVITA",41,0)
 S XMPARM(1)=XMFWD,XMPARM(2)=XMERROR
"RTN","XMVVITA",42,0)
 D TASKBULL^XMXBULL(.5,"XM FWD ADDRESS DELETE",.XMPARM,"",XMUSER,.XMINSTR)
"RTN","XMVVITA",43,0)
 Q
"RTN","XMVVITA",44,0)
BANNER ; Edit banner
"RTN","XMVVITA",45,0)
 N DIE,DA,DR
"RTN","XMVVITA",46,0)
 S DIE=3.7
"RTN","XMVVITA",47,0)
 S (XMDUZ,DA)=$G(XMDUZ,DUZ)
"RTN","XMVVITA",48,0)
 S DR=4
"RTN","XMVVITA",49,0)
 D ^DIE
"RTN","XMVVITA",50,0)
 D SETBAN^XMVVITAE(XMDUZ,.XMV)
"RTN","XMVVITA",51,0)
 Q
"RTN","XMVVITA",52,0)
FILTER ; Edit filters
"RTN","XMVVITA",53,0)
 N DIE,DA,DR
"RTN","XMVVITA",54,0)
 S DIE=3.7
"RTN","XMVVITA",55,0)
 S DA=DUZ
"RTN","XMVVITA",56,0)
 S DR="16;15"     ; Message filters flag ; Message filters
"RTN","XMVVITA",57,0)
 D ^DIE
"RTN","XMVVITA",58,0)
 Q:$D(^XMB(3.7,DUZ,15,"AF"))
"RTN","XMVVITA",59,0)
 W !,*7,"Note that you have no active filters."
"RTN","XMVVITA",60,0)
 Q
"RTN","XMVVITA",61,0)
BASKET ; Edit delivery baskets
"RTN","XMVVITA",62,0)
 N DIE,DA,DR
"RTN","XMVVITA",63,0)
 S DIE=3.7
"RTN","XMVVITA",64,0)
 S DA=DUZ
"RTN","XMVVITA",65,0)
 S DR="16.2;S:X'=""S"" Y=0;1"     ; Accept delivery basket? ; Select basket.
"RTN","XMVVITA",66,0)
 S DR(2,3.701)="3" ; Is this a delivery basket?
"RTN","XMVVITA",67,0)
 D ^DIE
"RTN","XMVVITA",68,0)
 Q
"RTN","XMVVITA",69,0)
SURR ; Edit Surrogates
"RTN","XMVVITA",70,0)
 N DIE,DA,DR
"RTN","XMVVITA",71,0)
 S DIE="^XMB(3.7,"
"RTN","XMVVITA",72,0)
 S DA=DUZ
"RTN","XMVVITA",73,0)
 S DR="8"         ; surrogate
"RTN","XMVVITA",74,0)
 D ^DIE
"RTN","XMVVITA",75,0)
 Q
"RTN","XMVVITA",76,0)
EDIT ; Edit User Preferences
"RTN","XMVVITA",77,0)
 N DIE,DA,DR
"RTN","XMVVITA",78,0)
 D CHECK^XMVVITAE
"RTN","XMVVITA",79,0)
 W !!,"Editing data in the MAILBOX file:"
"RTN","XMVVITA",80,0)
 S DIE="^XMB(3.7,"
"RTN","XMVVITA",81,0)
 S DA=DUZ
"RTN","XMVVITA",82,0)
 S DR=""
"RTN","XMVVITA",83,0)
 S DR=DR_";4"         ; banner
"RTN","XMVVITA",84,0)
 S DR=DR_";17"        ; message display order
"RTN","XMVVITA",85,0)
 S DR=DR_";18"        ; message reader default
"RTN","XMVVITA",86,0)
 S DR=DR_";19"        ; message reader prompt
"RTN","XMVVITA",87,0)
 S DR=DR_";6"         ; show message preview
"RTN","XMVVITA",88,0)
 S DR=DR_";11"        ; message action default
"RTN","XMVVITA",89,0)
 S DR=DR_";12"        ; ask basket
"RTN","XMVVITA",90,0)
 S DR=DR_";13"        ; show titles
"RTN","XMVVITA",91,0)
 S DR=DR_";14"        ; priority responses flag
"RTN","XMVVITA",92,0)
 S DR=DR_";14.1"      ; priority responses prompt
"RTN","XMVVITA",93,0)
 S DR=DR_";16.3"      ; p-message queued from
"RTN","XMVVITA",94,0)
 S DR=DR_";9"         ; mailman institution
"RTN","XMVVITA",95,0)
 S DR=DR_";2.21:2.23" ; network signature lines
"RTN","XMVVITA",96,0)
 S DR=DR_";4.5"       ; introduction
"RTN","XMVVITA",97,0)
 S DR=$E(DR,2,99)
"RTN","XMVVITA",98,0)
 D ^DIE
"RTN","XMVVITA",99,0)
 W !!,"Editing data in the NEW PERSON file:"
"RTN","XMVVITA",100,0)
 S DIE="^VA(200,"
"RTN","XMVVITA",101,0)
 S DA=DUZ
"RTN","XMVVITA",102,0)
 S DR=""
"RTN","XMVVITA",103,0)
 S DR=DR_";31.3"      ; preferred editor
"RTN","XMVVITA",104,0)
 S DR=DR_";.111"      ; street address 1
"RTN","XMVVITA",105,0)
 S DR=DR_";.112"      ; street address 2
"RTN","XMVVITA",106,0)
 S DR=DR_";.113"      ; street address 3
"RTN","XMVVITA",107,0)
 S DR=DR_";.114"      ; city
"RTN","XMVVITA",108,0)
 S DR=DR_";.115"      ; state
"RTN","XMVVITA",109,0)
 S DR=DR_";.116"      ; zip
"RTN","XMVVITA",110,0)
 S DR=DR_";.132"      ; office phone
"RTN","XMVVITA",111,0)
 S DR=DR_";.136"      ; fax #
"RTN","XMVVITA",112,0)
 S DR=DR_";.137"      ; voice pager
"RTN","XMVVITA",113,0)
 S DR=DR_";.138"      ; digital pager
"RTN","XMVVITA",114,0)
 S DR=DR_";.133ADD'L PHONE 1"      ; phone #3
"RTN","XMVVITA",115,0)
 S DR=DR_";.134ADD'L PHONE 2"      ; phone #4
"RTN","XMVVITA",116,0)
 S DR=$E(DR,2,99)
"RTN","XMVVITA",117,0)
 D ^DIE
"RTN","XMVVITA",118,0)
 D PREFER^XMVVITAE(DUZ,.XMV,.XMDISPI)
"RTN","XMVVITA",119,0)
 D SETBAN^XMVVITAE(XMDUZ,.XMV)
"RTN","XMVVITA",120,0)
 D SETNET^XMVVITAE(XMDUZ,.XMV)
"RTN","XMVVITA",121,0)
 Q
"RTN","XMVVITAE")
0^40^B45152977
"RTN","XMVVITAE",1,0)
XMVVITAE ;ISC-SF/GMB-Initialize User's MailMan Variables ;05/21/99  10:21
"RTN","XMVVITAE",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMVVITAE",3,0)
 ; Replaces ^XMGAPI1,FWD^XMA21FWD,BANNER^XMA6,EDIT^XMA7 (ISC-WASH/CAP)
"RTN","XMVVITAE",4,0)
 ; Entry points (DBIA 2728):
"RTN","XMVVITAE",5,0)
 ; INIT     Set up variables for DUZ or XMDUZ.
"RTN","XMVVITAE",6,0)
 ; OTHER    Set up variables to become a surrogate of someone else.
"RTN","XMVVITAE",7,0)
 ; SELF     Return from being a surrogate to being oneself again.
"RTN","XMVVITAE",8,0)
 ;
"RTN","XMVVITAE",9,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMVVITAE",10,0)
 Q
"RTN","XMVVITAE",11,0)
INIT ; Set up one's variables (for yourself or as a surrogate).
"RTN","XMVVITAE",12,0)
 K XMV
"RTN","XMVVITAE",13,0)
 D SYSTEM(.XMV)
"RTN","XMVVITAE",14,0)
 S:'$D(XMDUZ) XMDUZ=DUZ
"RTN","XMVVITAE",15,0)
 D DUZ(DUZ,.XMV,.XMDUN,.XMDISPI,.XMNOSEND)
"RTN","XMVVITAE",16,0)
 D:XMDUZ'=DUZ SURROGAT(XMDUZ,.XMV,.XMDUN,.XMNOSEND,.XMPRIV)
"RTN","XMVVITAE",17,0)
 Q
"RTN","XMVVITAE",18,0)
CHECK ; Check to make sure one's variables exist.
"RTN","XMVVITAE",19,0)
 I '$D(XMV("NAME"))!'$D(XMV("RDR DEF")) D INIT
"RTN","XMVVITAE",20,0)
 Q
"RTN","XMVVITAE",21,0)
OTHER ; Become someone else.  INIT should have been called previously.
"RTN","XMVVITAE",22,0)
 I '$D(XMV) D INIT Q
"RTN","XMVVITAE",23,0)
 D SURROGAT(XMDUZ,.XMV,.XMDUN,.XMNOSEND,.XMPRIV)
"RTN","XMVVITAE",24,0)
 Q
"RTN","XMVVITAE",25,0)
SELF ; Return to oneself after having become someone else.
"RTN","XMVVITAE",26,0)
 ; INIT should have been called previously.
"RTN","XMVVITAE",27,0)
 S XMDUZ=DUZ
"RTN","XMVVITAE",28,0)
 I '$D(XMV) D INIT Q
"RTN","XMVVITAE",29,0)
 D USER(XMDUZ,.XMV,.XMNOSEND,.XMDUN)
"RTN","XMVVITAE",30,0)
 Q
"RTN","XMVVITAE",31,0)
SYSTEM(XMV) ;
"RTN","XMVVITAE",32,0)
 ; XMV("VERSION")
"RTN","XMVVITAE",33,0)
 I '$D(DT) D DT^DICRW
"RTN","XMVVITAE",34,0)
 S XMV("VERSION")="VA MailMan "_$P($T(XMVVITAE+1),";",3)
"RTN","XMVVITAE",35,0)
 ; Check to make sure that important variables are defined correctly.
"RTN","XMVVITAE",36,0)
 I +$G(^XMB("NUM")),^XMB("NETNAME")=^XMB("NAME"),^XMB("NAME")=$P($G(^DIC(4.2,+$G(^XMB("NUM")),0)),U,1),^XMB("NUM")=$P($G(^XMB(1,1,0)),U,1) Q
"RTN","XMVVITAE",37,0)
 N XMI,XMNETNAM,XMNETNUM
"RTN","XMVVITAE",38,0)
 S XMNETNAM=$P($G(^DIC(4.2,+$G(^XMB("NUM")),0)),U,1)
"RTN","XMVVITAE",39,0)
 S XMNETNUM=$P($G(^XMB(1,1,0)),U,1)
"RTN","XMVVITAE",40,0)
 S XMI=0
"RTN","XMVVITAE",41,0)
 S XMI=XMI+1,XMV("SYSERR",XMI)="The domain for this facility is not christened correctly."
"RTN","XMVVITAE",42,0)
 S XMI=XMI+1,XMV("SYSERR",XMI)="IRM must correct this for network mail to function properly."
"RTN","XMVVITAE",43,0)
 S XMI=XMI+1,XMV("SYSERR",XMI)="The following pointers should contain the same numbers,"
"RTN","XMVVITAE",44,0)
 S XMI=XMI+1,XMV("SYSERR",XMI)="which should point to this facility's domain in ^DIC(4.2:"
"RTN","XMVVITAE",45,0)
 S XMI=XMI+1,XMV("SYSERR",XMI)="^XMB(""NUM"")="_$G(^XMB("NUM"))
"RTN","XMVVITAE",46,0)
 S XMI=XMI+1,XMV("SYSERR",XMI)="$P(^XMB(1,1,0),U,1)="_XMNETNUM
"RTN","XMVVITAE",47,0)
 S XMI=XMI+1,XMV("SYSERR",XMI)="The following domain names should all be the domain name of this facility:"
"RTN","XMVVITAE",48,0)
 S:$G(^XMB("NUM")) XMI=XMI+1,XMV("SYSERR",XMI)="$P(^DIC(4.2,"_^XMB("NUM")_",0),U,1)="_$P($G(^DIC(4.2,^XMB("NUM"),0)),U,1)
"RTN","XMVVITAE",49,0)
 I XMNETNUM,^XMB("NUM")='XMNETNUM S XMI=XMI+1,XMV("SYSERR",XMI)="$P(^DIC(4.2,"_XMNETNUM_",0),U,1)="_$P($G(^DIC(4.2,XMNETNUM,0)),U,1)
"RTN","XMVVITAE",50,0)
 S XMI=XMI+1,XMV("SYSERR",XMI)="^XMB(""NETNAME"")="_^XMB("NETNAME")
"RTN","XMVVITAE",51,0)
 S XMI=XMI+1,XMV("SYSERR",XMI)="^XMB(""NAME"")="_^XMB("NAME")
"RTN","XMVVITAE",52,0)
 Q
"RTN","XMVVITAE",53,0)
DUZ(XMDUZ,XMV,XMDUN,XMDISPI,XMNOSEND) ;
"RTN","XMVVITAE",54,0)
 ; XMV("DUZ NAME")
"RTN","XMVVITAE",55,0)
 K XMV("ERROR")
"RTN","XMVVITAE",56,0)
 I $G(DUZ,0)=0 S XMV("ERROR",1)="You do not have a DUZ." Q
"RTN","XMVVITAE",57,0)
 D USER(XMDUZ,.XMV,.XMNOSEND,.XMDUN) Q:$D(XMV("ERROR"))
"RTN","XMVVITAE",58,0)
 S XMV("DUZ NAME")=XMV("NAME")
"RTN","XMVVITAE",59,0)
 D LASTUSE(XMDUZ,.XMV)
"RTN","XMVVITAE",60,0)
 D PREFER(XMDUZ,.XMV,.XMDISPI)
"RTN","XMVVITAE",61,0)
 Q
"RTN","XMVVITAE",62,0)
SURROGAT(XMDUZ,XMV,XMDUN,XMNOSEND,XMPRIV) ;
"RTN","XMVVITAE",63,0)
 ; XMV("PRIV")
"RTN","XMVVITAE",64,0)
 ; XMPRIV
"RTN","XMVVITAE",65,0)
 Q:XMDUZ=DUZ
"RTN","XMVVITAE",66,0)
 K XMV("ERROR"),XMV("WARNING")
"RTN","XMVVITAE",67,0)
 I XMDUZ=.6 D  Q
"RTN","XMVVITAE",68,0)
 . S XMV("PRIV")="R",XMPRIV="y^n"
"RTN","XMVVITAE",69,0)
 . S (XMDUN,XMV("NAME"))=$P(^VA(200,.6,0),U,1)
"RTN","XMVVITAE",70,0)
 . D SETNET(XMDUZ,.XMV)
"RTN","XMVVITAE",71,0)
 . S XMV("NEW MSGS")=+$P(^XMB(3.7,XMDUZ,0),U,6)
"RTN","XMVVITAE",72,0)
 E  D  Q:$D(XMV("ERROR"))
"RTN","XMVVITAE",73,0)
 . N XMIEN
"RTN","XMVVITAE",74,0)
 . S XMIEN=+$O(^XMB(3.7,"AB",DUZ,XMDUZ,0))
"RTN","XMVVITAE",75,0)
 . ;Commented out because we shouldn't be here if not a valid surrogate
"RTN","XMVVITAE",76,0)
 . ;I 'XMIEN S XMV("ERROR",5)="You are not a surrogate of DUZ "_XMDUZ_"." Q
"RTN","XMVVITAE",77,0)
 . S XMPRIV=$G(^XMB(3.7,XMDUZ,9,XMIEN,0))
"RTN","XMVVITAE",78,0)
 . S XMV("PRIV")=$S($P(XMPRIV,U,2)="y":"R",1:"")_$S($P(XMPRIV,U,3)="y":"W",1:"")
"RTN","XMVVITAE",79,0)
 D USER(XMDUZ,.XMV,.XMNOSEND,.XMDUN) Q:$D(XMV("ERROR"))
"RTN","XMVVITAE",80,0)
 D LASTUSE(XMDUZ,.XMV)
"RTN","XMVVITAE",81,0)
 Q
"RTN","XMVVITAE",82,0)
USER(XMDUZ,XMV,XMNOSEND,XMDUN) ;
"RTN","XMVVITAE",83,0)
 ; XMV("WARNING")
"RTN","XMVVITAE",84,0)
 ; XMV("ERROR")
"RTN","XMVVITAE",85,0)
 ; XMV("NEW MSGS")
"RTN","XMVVITAE",86,0)
 ; XMV("NAME")
"RTN","XMVVITAE",87,0)
 ; XMV("NOSEND")
"RTN","XMVVITAE",88,0)
 ; XMNOSEND
"RTN","XMVVITAE",89,0)
 ; XMDUN
"RTN","XMVVITAE",90,0)
 N XMREC
"RTN","XMVVITAE",91,0)
 K XMV("ERROR"),XMV("WARNING")
"RTN","XMVVITAE",92,0)
 S XMREC=$G(^VA(200,XMDUZ,0))
"RTN","XMVVITAE",93,0)
 I XMREC="" S XMV("ERROR",2)="There is no person with DUZ "_XMDUZ_"." Q
"RTN","XMVVITAE",94,0)
 I $P(XMREC,U,3)="" S XMV("ERROR",3)="There is no Access Code for DUZ "_XMDUZ_"." Q
"RTN","XMVVITAE",95,0)
 I '$D(^XMB(3.7,XMDUZ,0)) S XMV("ERROR",4)="There is no mailbox for DUZ "_XMDUZ_"." Q
"RTN","XMVVITAE",96,0)
 S XMV("NOSEND")=0
"RTN","XMVVITAE",97,0)
 S (XMDUN,XMV("NAME"))=$P(XMREC,U)
"RTN","XMVVITAE",98,0)
 D SETNET(XMDUZ,.XMV)
"RTN","XMVVITAE",99,0)
 Q:$D(ZTQUEUED)
"RTN","XMVVITAE",100,0)
 I '$D(DUZ("SAV")),$D(XMMENU(0)) L +^XMB(3.7,"AD",DUZ):0 E  S (XMV("NOSEND"),XMNOSEND)=1,XMV("WARNING",4)="Multiple Signon"
"RTN","XMVVITAE",101,0)
 S:$D(^XMB(3.7,XMDUZ,"N")) XMV("WARNING",1)="Priority Mail"
"RTN","XMVVITAE",102,0)
 I '$D(DUZ("SAV")),'XMV("NOSEND"),$D(^XMB(3.7,"AD",XMDUZ)) D
"RTN","XMVVITAE",103,0)
 . I XMDUZ='DUZ,$G(XMV("PRIV"))'["W" Q
"RTN","XMVVITAE",104,0)
 . N XMZ
"RTN","XMVVITAE",105,0)
 . S XMREC=$G(^XMB(3.7,XMDUZ,"T"))
"RTN","XMVVITAE",106,0)
 . S XMZ=$P(XMREC,U,1) I XMZ="" K ^XMB(3.7,"AD",XMDUZ) Q
"RTN","XMVVITAE",107,0)
 . I '$D(^XMB(3.9,XMZ,0)) K ^XMB(3.7,XMDUZ,"T"),^XMB(3.7,"AD",XMDUZ) Q
"RTN","XMVVITAE",108,0)
 . S XMZ=$P(XMREC,U,3)
"RTN","XMVVITAE",109,0)
 . I XMZ,'$D(^XMB(3.9,XMZ,0)) K ^XMB(3.7,XMDUZ,"T"),^XMB(3.7,"AD",XMDUZ) Q
"RTN","XMVVITAE",110,0)
 . S XMV("WARNING",2)="Message in Buffer"
"RTN","XMVVITAE",111,0)
 S XMV("NEW MSGS")=+$P(^XMB(3.7,XMDUZ,0),U,6)
"RTN","XMVVITAE",112,0)
 I XMDUZ=.5 D
"RTN","XMVVITAE",113,0)
 . N I,XMK
"RTN","XMVVITAE",114,0)
 . S XMK=.99
"RTN","XMVVITAE",115,0)
 . F I=1:1 S XMK=$O(^XMB(3.7,.5,2,XMK)) Q:XMK>999
"RTN","XMVVITAE",116,0)
 . S:I>900 XMV("WARNING",5)="POSTMASTER has "_I_" baskets."
"RTN","XMVVITAE",117,0)
 D SETBAN(XMDUZ,.XMV)
"RTN","XMVVITAE",118,0)
 Q
"RTN","XMVVITAE",119,0)
SETNET(XMDUZ,XMV) ;
"RTN","XMVVITAE",120,0)
 ; XMV("NETNAME")
"RTN","XMVVITAE",121,0)
 S XMV("NETNAME")=$$NETNAME^XMXUTIL(XMDUZ)
"RTN","XMVVITAE",122,0)
 Q
"RTN","XMVVITAE",123,0)
SETBAN(XMDUZ,XMV) ;
"RTN","XMVVITAE",124,0)
 ; XMV("BANNER")
"RTN","XMVVITAE",125,0)
 N XMBANNER
"RTN","XMVVITAE",126,0)
 S XMBANNER=$G(^XMB(3.7,XMDUZ,"B"))
"RTN","XMVVITAE",127,0)
 I XMBANNER="" K XMV("BANNER")
"RTN","XMVVITAE",128,0)
 E  S XMV("BANNER")=XMBANNER
"RTN","XMVVITAE",129,0)
 Q
"RTN","XMVVITAE",130,0)
PREFER(XMDUZ,XMV,XMDISPI) ;
"RTN","XMVVITAE",131,0)
 ; XMV("SHOW INST")
"RTN","XMVVITAE",132,0)
 ; XMV("SHOW TITL")
"RTN","XMVVITAE",133,0)
 ; XMV("SHOW DUZ")
"RTN","XMVVITAE",134,0)
 ; XMV("ASK BSKT")
"RTN","XMVVITAE",135,0)
 ; XMV("MSG DEF")
"RTN","XMVVITAE",136,0)
 ; XMV("RDR DEF")
"RTN","XMVVITAE",137,0)
 ; XMV("RDR ASK")
"RTN","XMVVITAE",138,0)
 ; XMV("ORDER")
"RTN","XMVVITAE",139,0)
 ; XMV("PREVU")
"RTN","XMVVITAE",140,0)
 ; XMDISPI
"RTN","XMVVITAE",141,0)
 N XMUREC,XMSREC,XMDMA,XMMA
"RTN","XMVVITAE",142,0)
 S XMSREC=$G(^XMB(1,1,0)) ; Site's preferences
"RTN","XMVVITAE",143,0)
 S XMUREC=^XMB(3.7,DUZ,0) ; User's preferences
"RTN","XMVVITAE",144,0)
 S XMV("SHOW INST")=$S($P(XMSREC,U,5)["y":1,1:0)  ; Show Institution
"RTN","XMVVITAE",145,0)
 S XMV("SHOW TITL")=$S($P(XMUREC,U,10)=1:1,1:0)   ; Show Titles
"RTN","XMVVITAE",146,0)
 Q:$D(ZTQUEUED)
"RTN","XMVVITAE",147,0)
 S XMDISPI="X"  ; Show Help (Not used?)
"RTN","XMVVITAE",148,0)
 I XMV("SHOW INST") S XMDISPI=XMDISPI_"I"
"RTN","XMVVITAE",149,0)
 I XMV("SHOW TITL") S XMDISPI=XMDISPI_"T"
"RTN","XMVVITAE",150,0)
 S XMV("SHOW DUZ")=+$P(XMSREC,U,8)  ; Show DUZ when addressing messages
"RTN","XMVVITAE",151,0)
 I $P(XMSREC,U,6)["y",'$D(^XMB(3.7,XMDUZ,1,1,0)) S XMV("WARNING",3)="No Introduction"
"RTN","XMVVITAE",152,0)
 S XMDMA=$P(XMSREC,U,15)  ; Site's default message action (Delete, Ignore)
"RTN","XMVVITAE",153,0)
 S XMV("PREVU")=$P(XMUREC,U,4) S XMV("PREVU")=$S(XMV("PREVU")="Y":1,1:0)
"RTN","XMVVITAE",154,0)
 I $P(XMUREC,U,5)'["n" D
"RTN","XMVVITAE",155,0)
 . S XMDISPI=XMDISPI_"A"  ; Ask Basket
"RTN","XMVVITAE",156,0)
 . S XMV("ASK BSKT")=1
"RTN","XMVVITAE",157,0)
 E  S XMV("ASK BSKT")=0
"RTN","XMVVITAE",158,0)
 S XMMA=$P(XMUREC,U,9)  ; User's default message action (Delete, Ignore)
"RTN","XMVVITAE",159,0)
 S XMMA=$S(XMMA'="":XMMA,XMDMA'="":XMDMA,1:"I")
"RTN","XMVVITAE",160,0)
 S XMDISPI=XMDISPI_U_XMMA
"RTN","XMVVITAE",161,0)
 S XMV("MSG DEF")=XMMA
"RTN","XMVVITAE",162,0)
 S XMV("ORDER")=$S($P(XMUREC,U,13)="N":-1,1:1)
"RTN","XMVVITAE",163,0)
 S XMV("RDR DEF")=$P(XMUREC,U,16) S:XMV("RDR DEF")="" XMV("RDR DEF")="C"
"RTN","XMVVITAE",164,0)
 S XMV("RDR ASK")=$P(XMUREC,U,17) S:XMV("RDR ASK")="" XMV("RDR ASK")="Y"
"RTN","XMVVITAE",165,0)
 Q
"RTN","XMVVITAE",166,0)
LASTUSE(XMDUZ,XMV) ;
"RTN","XMVVITAE",167,0)
 ; XMV("LAST USE")
"RTN","XMVVITAE",168,0)
 I XMDUZ=.6!$D(ZTQUEUED) Q
"RTN","XMVVITAE",169,0)
 S XMV("LAST USE")=$P($G(^XMB(3.7,XMDUZ,"L"),"Never"),U,1)
"RTN","XMVVITAE",170,0)
 Q:$D(DUZ("SAV"))
"RTN","XMVVITAE",171,0)
 S ^XMB(3.7,XMDUZ,"L")=$$MMDT^XMXUTIL1($$NOW^XLFDT)_$S(XMDUZ'=DUZ:" (Surrogate: "_XMV("DUZ NAME")_")",1:"")_U_DT_U_DUZ
"RTN","XMVVITAE",172,0)
 Q
"RTN","XMXADDR")
0^41^B89901496
"RTN","XMXADDR",1,0)
XMXADDR ;ISC-SF/GMB-Address checker ;08/02/99  08:56
"RTN","XMXADDR",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXADDR",3,0)
 ; Replaces ^XMA21,^XMA210,^XMA24 (ISC-WASH/CAP/AML/LL)
"RTN","XMXADDR",4,0)
 ; XMIA     1=Interactive; 0=not
"RTN","XMXADDR",5,0)
CHKADDR(XMDUZ,XMTO,XMINSTR,XMRESTR,XMFULL) ; Check addressee(s) NON-INTERACTIVE
"RTN","XMXADDR",6,0)
 ; This entry point is meant for calls in which the addressees are
"RTN","XMXADDR",7,0)
 ; already in an array:
"RTN","XMXADDR",8,0)
 ; XMTO("addressee 1")=""
"RTN","XMXADDR",9,0)
 ; XMTO("addressee 2")=""
"RTN","XMXADDR",10,0)
 ; or for just a single addressee:  "addressee 1"
"RTN","XMXADDR",11,0)
 N XMADDR,XMIA,XMERROR
"RTN","XMXADDR",12,0)
 ;K XMERR,^TMP("XMERR",$J) DO NOT PUT THIS LINE IN HERE!
"RTN","XMXADDR",13,0)
 S XMIA=0
"RTN","XMXADDR",14,0)
 I $G(XMTO)]"",$O(XMTO(""))="" D  Q
"RTN","XMXADDR",15,0)
 . K XMFULL
"RTN","XMXADDR",16,0)
 . D ADDRESS(XMDUZ,XMTO,.XMFULL,.XMERROR) Q:'$D(XMERROR)
"RTN","XMXADDR",17,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)=XMERROR
"RTN","XMXADDR",18,0)
 . S:'$D(XMFULL) ^TMP("XMERR",$J,XMERR,"PARM")=XMTO
"RTN","XMXADDR",19,0)
 I $O(XMTO(""))="" D  Q
"RTN","XMXADDR",20,0)
 . ;S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Null addressee"
"RTN","XMXADDR",21,0)
 S XMADDR=""
"RTN","XMXADDR",22,0)
 F  S XMADDR=$O(XMTO(XMADDR)) Q:XMADDR=""  D
"RTN","XMXADDR",23,0)
 . N XMERROR,XMFULL
"RTN","XMXADDR",24,0)
 . D ADDRESS(XMDUZ,XMADDR,.XMFULL,.XMERROR) Q:'$D(XMERROR)
"RTN","XMXADDR",25,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)=XMERROR
"RTN","XMXADDR",26,0)
 . S:'$D(XMFULL) ^TMP("XMERR",$J,XMERR,"PARM")=XMADDR
"RTN","XMXADDR",27,0)
 Q
"RTN","XMXADDR",28,0)
INIT ;
"RTN","XMXADDR",29,0)
 N XMNOW
"RTN","XMXADDR",30,0)
 K ^TMP("XMY",$J),^TMP("XMY0",$J),^TMP("XMYL",$J)
"RTN","XMXADDR",31,0)
 S XMNOW=$$NOW^XLFDT
"RTN","XMXADDR",32,0)
 S XMINLATR=$E($$FMADD^XLFDT(XMNOW,"","",5),1,12)  ; Staggered delivery must be at least 5 minutes from now
"RTN","XMXADDR",33,0)
 S XMAXLATR=$$SCH^XLFDT("1M",XMNOW)  ; Staggered delivery must be at most 1 month from now
"RTN","XMXADDR",34,0)
 S XMBIGGRP=$P(^XMB(1,1,0),U,7)  ; Big group size
"RTN","XMXADDR",35,0)
 Q
"RTN","XMXADDR",36,0)
CLEANUP ;
"RTN","XMXADDR",37,0)
 K ^TMP("XMY",$J),^TMP("XMY0",$J),^TMP("XMYL",$J),XMINLATR,XMAXLATR,XMBIGGRP
"RTN","XMXADDR",38,0)
 Q
"RTN","XMXADDR",39,0)
ADDR(XMDUZ,XMADDR,XMINSTR,XMRESTR,XMFULL) ; Check one addressee (INTERACTIVE)
"RTN","XMXADDR",40,0)
 N XMIA
"RTN","XMXADDR",41,0)
 S XMIA=1
"RTN","XMXADDR",42,0)
 D ADDRESS(XMDUZ,XMADDR,.XMFULL)
"RTN","XMXADDR",43,0)
 Q
"RTN","XMXADDR",44,0)
ADDRESS(XMDUZ,XMADDR,XMFULL,XMERROR) ; Check one addressee
"RTN","XMXADDR",45,0)
 ; XMADDR   (in) Addressee (if number, assumed to be a person's DUZ)
"RTN","XMXADDR",46,0)
 ; XMFULL   (out) The full address of the addressee
"RTN","XMXADDR",47,0)
 N XMSTRIKE,XMPREFIX,XMLATER,XMFWDADD
"RTN","XMXADDR",48,0)
 D CHKPARM^XMXADDR1(.XMADDR,.XMSTRIKE,.XMPREFIX,.XMLATER) Q:$D(XMERROR)
"RTN","XMXADDR",49,0)
 I $G(XMINSTR("ADDR FLAGS"))["X" S XMSTRIKE=0,XMLATER="",XMPREFIX=""
"RTN","XMXADDR",50,0)
 I XMADDR["@"!(XMADDR["!") D
"RTN","XMXADDR",51,0)
 . I $D(XMRESTR("NONET")) D  Q
"RTN","XMXADDR",52,0)
 . . S XMERROR="Messages longer than "_XMRESTR("NONET")_" may not be sent across the network."
"RTN","XMXADDR",53,0)
 . . W:$G(XMIA) !,XMERROR
"RTN","XMXADDR",54,0)
 . D REMOTE^XMXADDR1(XMDUZ,XMADDR,XMSTRIKE,XMPREFIX,.XMLATER,.XMFULL)
"RTN","XMXADDR",55,0)
 E  D LOCAL(XMDUZ,XMADDR,XMSTRIKE,XMPREFIX,.XMLATER,.XMFULL)
"RTN","XMXADDR",56,0)
 D:'$D(XMERROR) SET(XMFULL,XMSTRIKE,XMPREFIX,XMLATER)
"RTN","XMXADDR",57,0)
 Q
"RTN","XMXADDR",58,0)
LOCAL(XMDUZ,XMADDR,XMSTRIKE,XMPREFIX,XMLATER,XMFULL) ;
"RTN","XMXADDR",59,0)
 I XMADDR="*" D  Q
"RTN","XMXADDR",60,0)
 . D BRODCAST^XMXADDR1(XMSTRIKE,XMPREFIX,.XMLATER,.XMFULL)
"RTN","XMXADDR",61,0)
 I $L(XMADDR)>2,".G.g.D.d.S.s."[("."_$E(XMADDR,1,2)) D  Q
"RTN","XMXADDR",62,0)
 . N XMADDR1
"RTN","XMXADDR",63,0)
 . S XMADDR1=$E(XMADDR,1)
"RTN","XMXADDR",64,0)
 . I "Gg"[XMADDR1 D EXPAND^XMXADDRG(XMDUZ,XMADDR,XMSTRIKE,XMPREFIX,.XMLATER,.XMFULL) Q
"RTN","XMXADDR",65,0)
 . I "Ss"[XMADDR1 D SERVER^XMXADDR1(XMADDR,XMSTRIKE,XMPREFIX,.XMLATER,.XMFULL) Q
"RTN","XMXADDR",66,0)
 . I "Dd"[XMADDR1 D DEVICE^XMXADDR1(XMADDR,XMSTRIKE,XMPREFIX,.XMLATER,.XMFULL) Q
"RTN","XMXADDR",67,0)
 N XMG
"RTN","XMXADDR",68,0)
 I XMADDR?1N.N,$L(XMADDR)>25 D  Q
"RTN","XMXADDR",69,0)
 . S XMERROR="Not found." Q:'$G(XMIA)
"RTN","XMXADDR",70,0)
 . W !,*7,XMERROR
"RTN","XMXADDR",71,0)
 I $G(XMIA) D
"RTN","XMXADDR",72,0)
 . D IPERSON(XMDUZ,.XMADDR,XMSTRIKE,XMPREFIX,.XMLATER,.XMG,.XMFULL) Q:$D(XMERROR)
"RTN","XMXADDR",73,0)
 . I XMLATER="?",XMG'=.6 D QLATER^XMXADDR1(XMFULL,.XMLATER)
"RTN","XMXADDR",74,0)
 E  D
"RTN","XMXADDR",75,0)
 . D PERSON^XMXADDR1(XMDUZ,.XMADDR,XMSTRIKE,XMPREFIX,XMLATER,.XMG,.XMFULL)
"RTN","XMXADDR",76,0)
 Q:$D(XMERROR)
"RTN","XMXADDR",77,0)
 D:XMFULL'["@" INDIV(XMDUZ,XMG,XMSTRIKE,XMPREFIX,XMLATER)
"RTN","XMXADDR",78,0)
 Q
"RTN","XMXADDR",79,0)
IPERSON(XMDUZ,XMADDR,XMSTRIKE,XMPREFIX,XMLATER,XMG,XMFULL) ;
"RTN","XMXADDR",80,0)
 N DIC,D,X,Y,XMXREFS
"RTN","XMXADDR",81,0)
 S XMADDR=$$UP^XLFSTR(XMADDR)
"RTN","XMXADDR",82,0)
 S DIC("S")="I $L($P(^(0),U,3)),$D(^XMB(3.7,+Y,2))"  ; User must have an access code & mailbox
"RTN","XMXADDR",83,0)
 ;I XMSTRIKE S DIC("S")=DIC("S")_",$D(^TMP(""XMY"",$J,+Y))" ; If '-', must already have been chosen
"RTN","XMXADDR",84,0)
 S DIC("W")="I Y'=DUZ D USERINFO^XMXADDR(Y)"
"RTN","XMXADDR",85,0)
 S DIC="^VA(200,"
"RTN","XMXADDR",86,0)
 S DIC(0)="FEZMN"  ; If user enters a DUZ, ask "OK?"
"RTN","XMXADDR",87,0)
 S X=XMADDR
"RTN","XMXADDR",88,0)
 ;S DIC(0)="FEZM"  ; If user enters a DUZ, do NOT ask "OK?"
"RTN","XMXADDR",89,0)
 ;S X=$S(XMADDR=+XMADDR:"`"_XMADDR,1:XMADDR)
"RTN","XMXADDR",90,0)
 S (XMXREFS,D)="B^BB^C^D" ; name^alias^initial^nickname
"RTN","XMXADDR",91,0)
 D MIX^DIC1
"RTN","XMXADDR",92,0)
 I Y>0 D  Q
"RTN","XMXADDR",93,0)
 . S XMG=+Y
"RTN","XMXADDR",94,0)
 . S XMFULL=$P(Y,U,2)
"RTN","XMXADDR",95,0)
 . Q:XMSTRIKE
"RTN","XMXADDR",96,0)
 . ; Sending to yourself, and ask bskt, and not creating a forwarding address
"RTN","XMXADDR",97,0)
 . I XMG=XMDUZ,$G(XMINSTR("ADDR FLAGS"))'["X",XMV("ASK BSKT") D
"RTN","XMXADDR",98,0)
 . . N XMK,XMDIC
"RTN","XMXADDR",99,0)
 . . S XMDIC("B")="IN"
"RTN","XMXADDR",100,0)
 . . D SELBSKT^XMJBU(XMDUZ,"Select basket to send to: ","L",.XMDIC,.XMK)
"RTN","XMXADDR",101,0)
 . . I XMK=U S XMERROR="No basket selected" Q
"RTN","XMXADDR",102,0)
 . . S XMINSTR("SELF BSKT")=XMK
"RTN","XMXADDR",103,0)
 . E  I XMG=.6 D
"RTN","XMXADDR",104,0)
 . . D CHKSHARE^XMXADDR1
"RTN","XMXADDR",105,0)
 . . I $D(XMERROR) W !,XMERROR Q
"RTN","XMXADDR",106,0)
 . . N XMK,XMDIC
"RTN","XMXADDR",107,0)
 . . S XMDIC("B")="IN"
"RTN","XMXADDR",108,0)
 . . D SELBSKT^XMJBU(.6,"Select basket to send to: ","L",.XMDIC,.XMK)
"RTN","XMXADDR",109,0)
 . . I XMK=U S XMERROR="No basket selected" Q
"RTN","XMXADDR",110,0)
 . . N DIR
"RTN","XMXADDR",111,0)
 . . S DIR("A")="Enter Termination Date"
"RTN","XMXADDR",112,0)
 . . S DIR("B")="T+30"
"RTN","XMXADDR",113,0)
 . . S DIR(0)="D^"_DT_"::ENX"
"RTN","XMXADDR",114,0)
 . . S DIR("?",1)="Messages sent to SHARED,MAIL must have a delete date"
"RTN","XMXADDR",115,0)
 . . S DIR("?")="so they may be automatically removed from SHARED,MAIL's mailbox."
"RTN","XMXADDR",116,0)
 . . S DIR("??")="^D HELP^%DTC"
"RTN","XMXADDR",117,0)
 . . D ^DIR
"RTN","XMXADDR",118,0)
 . . I $D(DIRUT) S XMERROR="Timeout or uparrow out" Q
"RTN","XMXADDR",119,0)
 . . S XMINSTR("SHARE BSKT")=XMK
"RTN","XMXADDR",120,0)
 . . S XMINSTR("SHARE DATE")=Y
"RTN","XMXADDR",121,0)
 . W:$D(XMERROR) !,XMFULL," removed from recipient list."
"RTN","XMXADDR",122,0)
 I $D(DTOUT)!$D(DUOUT) D  Q
"RTN","XMXADDR",123,0)
 . S XMERROR=$S($D(DTOUT):"  Timeout.",1:"  Up-arrow out.")
"RTN","XMXADDR",124,0)
 D NOTFOUND(XMADDR,XMXREFS)
"RTN","XMXADDR",125,0)
 I XMADDR=+XMADDR S XMERROR="Not found." Q
"RTN","XMXADDR",126,0)
 W !,*7,"Checking for MAIL NAME: ",XMADDR
"RTN","XMXADDR",127,0)
 S X=XMADDR
"RTN","XMXADDR",128,0)
 K DIC("S"),DIC("W")
"RTN","XMXADDR",129,0)
 S DIC(0)="FEZ"
"RTN","XMXADDR",130,0)
 S D="C"
"RTN","XMXADDR",131,0)
 S DIC="^XMB(3.7,"
"RTN","XMXADDR",132,0)
 D IX^DIC
"RTN","XMXADDR",133,0)
 I Y>0 D  Q
"RTN","XMXADDR",134,0)
 . S XMG=+Y
"RTN","XMXADDR",135,0)
 . S XMFULL=Y(0,0)
"RTN","XMXADDR",136,0)
 ; Not a Mail Name, see if it's in the Remote User Directory.
"RTN","XMXADDR",137,0)
 I $D(DTOUT)!$D(DUOUT) D  Q
"RTN","XMXADDR",138,0)
 . S XMERROR=$S($D(DTOUT):"  Timeout.",1:"  Up-arrow out.")
"RTN","XMXADDR",139,0)
 W !,*7,"Not a local user; checking Remote User Directory: ",X
"RTN","XMXADDR",140,0)
 S DIC(0)="MFEZ"
"RTN","XMXADDR",141,0)
 S D="B^F"
"RTN","XMXADDR",142,0)
 S DIC="^XMD(4.2997,"
"RTN","XMXADDR",143,0)
 D MIX^DIC1
"RTN","XMXADDR",144,0)
 I Y>0 D  Q
"RTN","XMXADDR",145,0)
 . S XMG=+Y
"RTN","XMXADDR",146,0)
 . S XMADDR=$P(Y(0),U,7)
"RTN","XMXADDR",147,0)
 . D REMDT^XMXADDR1(XMG)
"RTN","XMXADDR",148,0)
 . D REMOTE^XMXADDR1(XMDUZ,XMADDR,XMSTRIKE,XMPREFIX,.XMLATER,.XMFULL) Q:$D(XMERROR)
"RTN","XMXADDR",149,0)
 . W !,"Routing to Remote Address: ",XMFULL
"RTN","XMXADDR",150,0)
 ; Not in Remote User Directory, see if it's a Mail Group
"RTN","XMXADDR",151,0)
 I $D(DTOUT)!$D(DUOUT) D  Q
"RTN","XMXADDR",152,0)
 . S XMERROR=$S($D(DTOUT):"  Timeout.",1:"  Up-arrow out.")
"RTN","XMXADDR",153,0)
 S DIC="^XMB(3.8,"
"RTN","XMXADDR",154,0)
 S D="B"
"RTN","XMXADDR",155,0)
 S DIC(0)="O"
"RTN","XMXADDR",156,0)
 D IX^DIC
"RTN","XMXADDR",157,0)
 I Y>0 D  Q
"RTN","XMXADDR",158,0)
 . S XMERROR="  Enter 'G.groupname' to identify a mail group."
"RTN","XMXADDR",159,0)
 . W !,XMERROR
"RTN","XMXADDR",160,0)
 S XMERROR="  Not found."
"RTN","XMXADDR",161,0)
 W XMERROR
"RTN","XMXADDR",162,0)
 Q
"RTN","XMXADDR",163,0)
USERINFO(XMDUZ) ;
"RTN","XMXADDR",164,0)
 N %
"RTN","XMXADDR",165,0)
 W:XMV("SHOW DUZ") " (DUZ ",XMDUZ,")"
"RTN","XMXADDR",166,0)
 S %=$P($G(^VA(200,XMDUZ,5)),U,1)  ; Service/Section
"RTN","XMXADDR",167,0)
 I % S %=$P($G(^DIC(49,%,0)),U,1) W:$L(%)+$X+1>79 !,?4 W " ",%," "
"RTN","XMXADDR",168,0)
 S %=$P($G(^XMB(3.7,XMDUZ,"L"),"Never"),U,1)
"RTN","XMXADDR",169,0)
 W:$L(%)+$X+20>79 !,?4 W " Last used MailMan: ",%
"RTN","XMXADDR",170,0)
 S %=$G(^XMB(3.7,XMDUZ,0))
"RTN","XMXADDR",171,0)
 I $L($P(%,U,2)) W !,?5,"Forwarding Address: ",$P(%,U,2),", Local Delivery is ",$S($P(%,U,8):"ON",1:"OFF")
"RTN","XMXADDR",172,0)
 S %=$G(^XMB(3.7,XMDUZ,"B")) W:%'="" !,?10,%
"RTN","XMXADDR",173,0)
 Q
"RTN","XMXADDR",174,0)
NOTFOUND(XMADDR,XMXREFS) ;
"RTN","XMXADDR",175,0)
 N XMI,XMREC
"RTN","XMXADDR",176,0)
 S XMI=$$FIND1^DIC(200,"","OQ",$S(+XMADDR=XMADDR:"`"_XMADDR,1:XMADDR),XMXREFS)
"RTN","XMXADDR",177,0)
 I 'XMI W *7,"  Not found in NEW PERSON file." Q
"RTN","XMXADDR",178,0)
 S XMREC=^VA(200,XMI,0)
"RTN","XMXADDR",179,0)
 I $D(^XMB(3.7,XMI,2)),$P(XMREC,U,3)'="" Q
"RTN","XMXADDR",180,0)
 W !!,"If ",$P(XMREC,U,1)," is the person you're trying to address, you can't,"
"RTN","XMXADDR",181,0)
 W !,"because ",$P(XMREC,U,1)," doesn't have "
"RTN","XMXADDR",182,0)
 I $P(XMREC,U,3)="" D
"RTN","XMXADDR",183,0)
 . I $D(^XMB(3.7,XMI,2)) W "an access code or a mailbox." Q
"RTN","XMXADDR",184,0)
 . W "an access code."
"RTN","XMXADDR",185,0)
 E  W "a mailbox."
"RTN","XMXADDR",186,0)
 W !,"Message addressees must have an access code and a mailbox.",!
"RTN","XMXADDR",187,0)
 Q
"RTN","XMXADDR",188,0)
INDIV(XMDUZ,XMG,XMSTRIKE,XMPREFIX,XMLATER) ;
"RTN","XMXADDR",189,0)
 N XMGREC,XMIAHOLD
"RTN","XMXADDR",190,0)
 I $D(XMFWDADD) D  Q
"RTN","XMXADDR",191,0)
 . S XMERROR="You can't have a message forwarded to a local user."
"RTN","XMXADDR",192,0)
 S XMGREC=^XMB(3.7,XMG,0)
"RTN","XMXADDR",193,0)
 I $P(XMGREC,U,2)=""!(XMG=DUZ) D SETEXP(XMG,"",XMSTRIKE,XMPREFIX,XMLATER) Q
"RTN","XMXADDR",194,0)
 ; Addressee has a forwarding address
"RTN","XMXADDR",195,0)
 I $D(XMRESTR("NET RECEIVE")),$$UP^XLFSTR(XMRESTR("NET RECEIVE"))["POSTMASTER" D SETEXP(XMG,"",XMSTRIKE,XMPREFIX,XMLATER) Q  ; Ignore it if message from remote postmaster (to avoid looping messages to bad fwding address).
"RTN","XMXADDR",196,0)
 N XMFULL,XMERROR
"RTN","XMXADDR",197,0)
 S XMFWDADD=$P(XMGREC,U,2)
"RTN","XMXADDR",198,0)
 I $G(XMIA) S XMIA=0,XMIAHOLD=1
"RTN","XMXADDR",199,0)
 D REMOTE^XMXADDR1(XMDUZ,$P(XMGREC,U,2),XMSTRIKE,XMPREFIX,.XMLATER,.XMFULL)
"RTN","XMXADDR",200,0)
 K XMFWDADD
"RTN","XMXADDR",201,0)
 I '$D(XMERROR),'XMSTRIKE S ^TMP("XMY",$J,XMFULL,"F")=XMG  ; recipient fwded
"RTN","XMXADDR",202,0)
 I $G(XMIAHOLD) S XMIA=1
"RTN","XMXADDR",203,0)
 I $P(XMGREC,U,8)!$D(XMERROR) D SETEXP(XMG,"",XMSTRIKE,XMPREFIX,XMLATER) ; local delivery, too
"RTN","XMXADDR",204,0)
 D:$D(XMERROR) DELFWD^XMVVITA(XMG,$P(XMGREC,U,2),XMERROR)
"RTN","XMXADDR",205,0)
 Q
"RTN","XMXADDR",206,0)
SET(XMTO,XMSTRIKE,XMPREFIX,XMLATER) ;
"RTN","XMXADDR",207,0)
 Q:$G(XMINSTR("ADDR FLAGS"))["X"
"RTN","XMXADDR",208,0)
 I XMSTRIKE D  Q
"RTN","XMXADDR",209,0)
 . I $G(XMIA) D
"RTN","XMXADDR",210,0)
 . . I $E(XMTO,1,2)="G." D
"RTN","XMXADDR",211,0)
 . . . I $D(^TMP("XMY0",$J,XMTO,"L")) D  Q
"RTN","XMXADDR",212,0)
 . . . . W "  Later'd Group Deleted."
"RTN","XMXADDR",213,0)
 . . . . K ^TMP("XMYL",$J,XMTO)
"RTN","XMXADDR",214,0)
 . . . W !,"Members Deleted."
"RTN","XMXADDR",215,0)
 . . E  W:$X>70 ! W "  Deleted."
"RTN","XMXADDR",216,0)
 . . I XMTO'="* (Broadcast to all local users)",$D(^TMP("XMY0",$J,"* (Broadcast to all local users)")) W !,"But Broadcast will still go to all local users."
"RTN","XMXADDR",217,0)
 . . Q:'$D(^TMP("XMYL",$J))
"RTN","XMXADDR",218,0)
 . . N XMGRP
"RTN","XMXADDR",219,0)
 . . W !,"But message will still go to all members of the following later'd group(s):"
"RTN","XMXADDR",220,0)
 . . S XMGRP="" F  S XMGRP=$O(^TMP("XMYL",$J,XMGRP)) Q:XMGRP=""  W !,XMGRP
"RTN","XMXADDR",221,0)
 . K ^TMP("XMY0",$J,XMTO)
"RTN","XMXADDR",222,0)
 . K:$D(^TMP("XMYL",$J,XMTO)) ^TMP("XMYL",$J,XMTO)
"RTN","XMXADDR",223,0)
 S ^TMP("XMY0",$J,XMTO)=""    ; =XMIEN
"RTN","XMXADDR",224,0)
 S:XMPREFIX'="" ^TMP("XMY0",$J,XMTO,1)=$$UP^XLFSTR(XMPREFIX)
"RTN","XMXADDR",225,0)
 S:XMLATER ^TMP("XMY0",$J,XMTO,"L")=XMLATER,^TMP("XMYL",$J,XMTO)=""
"RTN","XMXADDR",226,0)
 I XMLATER="?",$G(XMIA) W !,*7,"'Later' not appropriate for this addressee.  'Later' ignored."
"RTN","XMXADDR",227,0)
 Q
"RTN","XMXADDR",228,0)
SETEXP(XMTO,XMIEN,XMSTRIKE,XMPREFIX,XMLATER) ;
"RTN","XMXADDR",229,0)
 Q:$G(XMINSTR("ADDR FLAGS"))["X"
"RTN","XMXADDR",230,0)
 I XMSTRIKE K ^TMP("XMY",$J,XMTO) Q
"RTN","XMXADDR",231,0)
 I XMLATER,XMTO'=XMDUZ Q
"RTN","XMXADDR",232,0)
 S ^TMP("XMY",$J,XMTO)=XMIEN
"RTN","XMXADDR",233,0)
 I XMPREFIX'="" S ^TMP("XMY",$J,XMTO,1)=$$UP^XLFSTR(XMPREFIX)
"RTN","XMXADDR",234,0)
 I $D(XMINSTR("NET FWD BY")),$D(XMRESTR("NET RECEIVE")) S ^TMP("XMY",$J,XMTO,"F")=XMINSTR("NET FWD BY")
"RTN","XMXADDR",235,0)
 Q
"RTN","XMXADDR1")
0^42^B62959497
"RTN","XMXADDR1",1,0)
XMXADDR1 ;ISC-SF/GMB- XMXADDR (continued) ;03/13/99  11:57
"RTN","XMXADDR1",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXADDR1",3,0)
CHKPARM(XMADDR,XMSTRIKE,XMPREFIX,XMLATER) ;
"RTN","XMXADDR1",4,0)
 I $E(XMADDR,1)="-" D
"RTN","XMXADDR1",5,0)
 . S XMSTRIKE=1
"RTN","XMXADDR1",6,0)
 . S XMADDR=$E(XMADDR,2,999)
"RTN","XMXADDR1",7,0)
 E  S XMSTRIKE=0
"RTN","XMXADDR1",8,0)
 I $E(XMADDR,1)=" "!($E(XMADDR,$L(XMADDR))=" ") S XMADDR=$$STRIP^XMXUTIL1(XMADDR)
"RTN","XMXADDR1",9,0)
 I $P(XMADDR,"@",1)="" D  Q
"RTN","XMXADDR1",10,0)
 . S XMERROR="Null address"
"RTN","XMXADDR1",11,0)
 . I $G(XMIA) W !,XMERROR
"RTN","XMXADDR1",12,0)
 I $E(XMADDR,1)'="""",XMADDR[":" D  Q
"RTN","XMXADDR1",13,0)
 . D PREFIX(.XMADDR,.XMPREFIX,.XMLATER)
"RTN","XMXADDR1",14,0)
 . I XMSTRIKE,XMLATER="?" S XMLATER=""
"RTN","XMXADDR1",15,0)
 S XMPREFIX=""
"RTN","XMXADDR1",16,0)
 S XMLATER=""
"RTN","XMXADDR1",17,0)
 Q
"RTN","XMXADDR1",18,0)
PREFIX(XMADDR,XMPREFIX,XMLATER) ;
"RTN","XMXADDR1",19,0)
 N XMPRE
"RTN","XMXADDR1",20,0)
 S XMPRE=$P(XMADDR,":",1)
"RTN","XMXADDR1",21,0)
 I XMPRE="" D  Q
"RTN","XMXADDR1",22,0)
 . S XMERROR="Null recipient type"
"RTN","XMXADDR1",23,0)
 . I $G(XMIA) W !,XMERROR
"RTN","XMXADDR1",24,0)
 S (XMLATER,XMPREFIX)=""
"RTN","XMXADDR1",25,0)
 S XMPRE=$$UP^XLFSTR(XMPRE)
"RTN","XMXADDR1",26,0)
 I $P(XMPRE,"@",1)["L",'$D(XMRESTR("NET RECEIVE")) D
"RTN","XMXADDR1",27,0)
 . D LATER($P(XMPRE,"@",2,99),.XMLATER)
"RTN","XMXADDR1",28,0)
 . S XMPRE=$TR($P(XMPRE,"@",1),"L")
"RTN","XMXADDR1",29,0)
 D:XMPRE'="" RTYPE(XMPRE,.XMPREFIX)
"RTN","XMXADDR1",30,0)
 I $D(XMERROR),$D(XMRESTR("NET RECEIVE")),+$$FACILITY^XMR1A($P(XMADDR,"@",2))'=^XMB("NUM") K XMERROR Q
"RTN","XMXADDR1",31,0)
 S XMADDR=$P(XMADDR,":",2)
"RTN","XMXADDR1",32,0)
 Q
"RTN","XMXADDR1",33,0)
LATER(XMWHEN,XMLATER) ; (XMWHEN=user-supplied date/time)
"RTN","XMXADDR1",34,0)
 I $G(XMIA),XMWHEN="" S XMLATER="?" Q
"RTN","XMXADDR1",35,0)
 D DT^DILF("FTX",XMWHEN,.XMLATER,XMINLATR)
"RTN","XMXADDR1",36,0)
 Q:XMLATER>0
"RTN","XMXADDR1",37,0)
 S XMLATER=$S($G(XMIA):"?",1:"")
"RTN","XMXADDR1",38,0)
 Q
"RTN","XMXADDR1",39,0)
RTYPE(XMPRE,XMPREFIX) ;
"RTN","XMXADDR1",40,0)
 N XMINTRNL
"RTN","XMXADDR1",41,0)
 D CHK^DIE(3.91,6.5,"",XMPRE,.XMINTRNL)
"RTN","XMXADDR1",42,0)
 I XMINTRNL="^" D  Q
"RTN","XMXADDR1",43,0)
 . S XMERROR="Invalid recipient type '"_XMPRE_"'"
"RTN","XMXADDR1",44,0)
 . I $G(XMIA) W !,XMERROR
"RTN","XMXADDR1",45,0)
 S XMPREFIX=XMINTRNL
"RTN","XMXADDR1",46,0)
 Q
"RTN","XMXADDR1",47,0)
QLATER(XMFULL,XMLATER) ;
"RTN","XMXADDR1",48,0)
 N DIR,Y
"RTN","XMXADDR1",49,0)
 W !
"RTN","XMXADDR1",50,0)
 S DIR(0)="DO^"_XMINLATR_":"_XMAXLATR_":EXT"
"RTN","XMXADDR1",51,0)
 S DIR("A",1)="Later Delivery must be at least 5 minutes from now."
"RTN","XMXADDR1",52,0)
 S DIR("A")="When Later"
"RTN","XMXADDR1",53,0)
 S DIR("B")=$$MMDT^XMXUTIL1($$FMADD^XLFDT($$NOW^XLFDT,"","",5)) ; (in 5 minutes)
"RTN","XMXADDR1",54,0)
 S DIR("B")=$P(DIR("B")," ",1,3)_"@"_$P(DIR("B")," ",4)
"RTN","XMXADDR1",55,0)
 ;S DIR("??")="Response must be no earlier than "_$$MMDT^XMXUTIL1(XMINLATR)
"RTN","XMXADDR1",56,0)
 D ^DIR I $D(DIRUT) D  Q
"RTN","XMXADDR1",57,0)
 . S XMLATER=""
"RTN","XMXADDR1",58,0)
 . S XMERROR="Up-arrow out of later date"
"RTN","XMXADDR1",59,0)
 . W !,XMFULL," removed from recipient list."
"RTN","XMXADDR1",60,0)
 S XMLATER=Y
"RTN","XMXADDR1",61,0)
 W:$E(XMFULL,1,2)="G." !!,">> Remember, you won't be able to 'minus' anyone from the group. <<"
"RTN","XMXADDR1",62,0)
 Q
"RTN","XMXADDR1",63,0)
SERVER(XMADDR,XMSTRIKE,XMPREFIX,XMLATER,XMFULL) ;
"RTN","XMXADDR1",64,0)
 N XMG
"RTN","XMXADDR1",65,0)
 S XMADDR=$P(XMADDR,".",2,99)
"RTN","XMXADDR1",66,0)
 I $G(XMIA) D
"RTN","XMXADDR1",67,0)
 . N DIC,X
"RTN","XMXADDR1",68,0)
 . S X=XMADDR
"RTN","XMXADDR1",69,0)
 . S DIC="^DIC(19,"
"RTN","XMXADDR1",70,0)
 . S DIC(0)="FEZ"
"RTN","XMXADDR1",71,0)
 . D ^DIC
"RTN","XMXADDR1",72,0)
 . I Y<0 D  Q
"RTN","XMXADDR1",73,0)
 . . S XMERROR="Invalid server name"
"RTN","XMXADDR1",74,0)
 . . W !,XMERROR
"RTN","XMXADDR1",75,0)
 . S XMG=+Y
"RTN","XMXADDR1",76,0)
 E  D
"RTN","XMXADDR1",77,0)
 . S XMG=$$FIND1^DIC(19,"","OQ",XMADDR) I 'XMG S XMERROR="Server "_$S($D(DIERR):"ambiguous.",1:"not found.")
"RTN","XMXADDR1",78,0)
 Q:$D(XMERROR)
"RTN","XMXADDR1",79,0)
 S XMFULL="S."_$P(^DIC(19,XMG,0),U,1)
"RTN","XMXADDR1",80,0)
 D SETEXP^XMXADDR(XMFULL,XMG,XMSTRIKE,XMPREFIX,XMLATER)
"RTN","XMXADDR1",81,0)
 Q
"RTN","XMXADDR1",82,0)
DEVICE(XMADDR,XMSTRIKE,XMPREFIX,XMLATER,XMFULL) ;
"RTN","XMXADDR1",83,0)
 N XMG
"RTN","XMXADDR1",84,0)
 S XMADDR=$P(XMADDR,".",2,99)
"RTN","XMXADDR1",85,0)
 I $G(XMIA) D
"RTN","XMXADDR1",86,0)
 . N DIC,X
"RTN","XMXADDR1",87,0)
 . S X=XMADDR
"RTN","XMXADDR1",88,0)
 . S DIC="^%ZIS(1,"   ; file 3.5
"RTN","XMXADDR1",89,0)
 . S DIC(0)="EF"
"RTN","XMXADDR1",90,0)
 . D ^DIC
"RTN","XMXADDR1",91,0)
 . I Y<0 D  Q
"RTN","XMXADDR1",92,0)
 . . S XMERROR="Invalid device name"
"RTN","XMXADDR1",93,0)
 . . W !,XMERROR
"RTN","XMXADDR1",94,0)
 . S XMG=+Y
"RTN","XMXADDR1",95,0)
 . S XMADDR=$P(Y,U,2)
"RTN","XMXADDR1",96,0)
 E  D
"RTN","XMXADDR1",97,0)
 . S XMG=$$FIND1^DIC(3.5,"","OQ",XMADDR) I 'XMG S XMERROR="Device "_$S($D(DIERR):"ambiguous.",1:"not found.") Q
"RTN","XMXADDR1",98,0)
 . S XMADDR=$P(^%ZIS(1,XMG,0),U,1)
"RTN","XMXADDR1",99,0)
 Q:$D(XMERROR)
"RTN","XMXADDR1",100,0)
 I XMADDR["P-MESSAGE" D  Q
"RTN","XMXADDR1",101,0)
 . S XMERROR="You may not use P-MESSAGE in an address."
"RTN","XMXADDR1",102,0)
 . I $G(XMIA) W !,XMERROR
"RTN","XMXADDR1",103,0)
 S XMFULL="D."_XMADDR
"RTN","XMXADDR1",104,0)
 D SETEXP^XMXADDR(XMFULL,XMG,XMSTRIKE,XMPREFIX,XMLATER)
"RTN","XMXADDR1",105,0)
 Q
"RTN","XMXADDR1",106,0)
PERSON(XMDUZ,XMADDR,XMSTRIKE,XMPREFIX,XMLATER,XMG,XMFULL) ;
"RTN","XMXADDR1",107,0)
 N XMSCREEN,XMNOTFND,XMINDEX,I
"RTN","XMXADDR1",108,0)
 S XMINDEX="B" ; "B^BB^C^D" = name^alias^initial^nickname            
"RTN","XMXADDR1",109,0)
 F I="BB","C","D" S:$D(^VA(200,I)) XMINDEX=XMINDEX_U_I
"RTN","XMXADDR1",110,0)
 S XMADDR=$$UP^XLFSTR(XMADDR)
"RTN","XMXADDR1",111,0)
 S XMSCREEN="I $L($P(^(0),U,3)),$D(^XMB(3.7,+Y,2))"  ; User must have an access code & mailbox
"RTN","XMXADDR1",112,0)
 S XMG=$$FIND1^DIC(200,"","OQ",$S(+XMADDR=XMADDR:"`"_XMADDR,1:XMADDR),XMINDEX,XMSCREEN)
"RTN","XMXADDR1",113,0)
 I XMG D  Q
"RTN","XMXADDR1",114,0)
 . S XMFULL=$P(^VA(200,XMG,0),U,1)
"RTN","XMXADDR1",115,0)
 . Q:XMG'=.6
"RTN","XMXADDR1",116,0)
 . D CHKSHARE
"RTN","XMXADDR1",117,0)
 . S:XMLATER XMLATER="?"  ; Can't 'later' to SHARED,MAIL
"RTN","XMXADDR1",118,0)
 S XMNOTFND=$S($D(DIERR):"ambiguous",1:"not found")
"RTN","XMXADDR1",119,0)
 I +XMADDR=XMADDR D  Q
"RTN","XMXADDR1",120,0)
 . S XMERROR="Addressee "_XMNOTFND_"."
"RTN","XMXADDR1",121,0)
 ; Not found in NEW PERSON file, see if there's a MAIL NAME
"RTN","XMXADDR1",122,0)
 I $D(^XMB(3.7,"C")) D  Q:XMG
"RTN","XMXADDR1",123,0)
 . S XMSCREEN="I $L($P(^VA(200,+Y,0),U,3))"  ; User must have an access code
"RTN","XMXADDR1",124,0)
 . S XMG=$$FIND1^DIC(3.7,"","OQ",XMADDR,"C",XMSCREEN) Q:'XMG
"RTN","XMXADDR1",125,0)
 . S XMFULL=$P(^VA(200,XMG,0),U,1)
"RTN","XMXADDR1",126,0)
 ; Not a Mail Name, see if it's in the Remote User Directory.
"RTN","XMXADDR1",127,0)
 S XMINDEX="" F I="B","F" S:$D(^DIC(4.2997,I)) XMINDEX=XMINDEX_U_I
"RTN","XMXADDR1",128,0)
 I XMINDEX'="" D  Q:XMG
"RTN","XMXADDR1",129,0)
 . S XMINDEX=$E(XMINDEX,2,99)
"RTN","XMXADDR1",130,0)
 . S XMG=$$FIND1^DIC(4.2997,"","OQ",XMADDR,XMINDEX) Q:'XMG
"RTN","XMXADDR1",131,0)
 . S XMADDR=$P(^XMD(4.2997,XMG,0),U,7)
"RTN","XMXADDR1",132,0)
 . D REMDT(XMG)
"RTN","XMXADDR1",133,0)
 . D REMOTE(XMDUZ,XMADDR,XMSTRIKE,XMPREFIX,XMLATER,.XMFULL)
"RTN","XMXADDR1",134,0)
 S XMERROR="Addressee "_XMNOTFND_"."
"RTN","XMXADDR1",135,0)
 Q
"RTN","XMXADDR1",136,0)
CHKSHARE ;
"RTN","XMXADDR1",137,0)
 I $G(XMINSTR("FLAGS"))["X"!($G(XMRESTR("FLAGS"))["X") D  Q
"RTN","XMXADDR1",138,0)
 . S XMERROR="Closed messages may not be sent to SHARED,MAIL."
"RTN","XMXADDR1",139,0)
 I $G(XMINSTR("FLAGS"))["C"!($G(XMRESTR("FLAGS"))["C") D  Q
"RTN","XMXADDR1",140,0)
 . S XMERROR="Confidential messages may not be sent to SHARED,MAIL."
"RTN","XMXADDR1",141,0)
 Q
"RTN","XMXADDR1",142,0)
BRODCAST(XMSTRIKE,XMPREFIX,XMLATER,XMFULL) ;
"RTN","XMXADDR1",143,0)
 I DUZ'=.5,'$D(^XUSEC("XMSTAR",DUZ)) D  Q
"RTN","XMXADDR1",144,0)
 . S XMERROR="Only the postmaster or holders of the XMSTAR key may broadcast messages."
"RTN","XMXADDR1",145,0)
 . W:$G(XMIA) !,XMERROR
"RTN","XMXADDR1",146,0)
 S XMFULL="* (Broadcast to all local users)"
"RTN","XMXADDR1",147,0)
 W:$G(XMIA) $E(XMFULL,2,99)
"RTN","XMXADDR1",148,0)
 D SETEXP^XMXADDR(XMFULL,"",XMSTRIKE,XMPREFIX,XMLATER)
"RTN","XMXADDR1",149,0)
 Q
"RTN","XMXADDR1",150,0)
REMDT(XMG) ;
"RTN","XMXADDR1",151,0)
 N XMFDA
"RTN","XMXADDR1",152,0)
 S XMFDA(4.2997,XMG_",",6)=$E(DT,1,5)  ; Date (YYYMM) remote address last used
"RTN","XMXADDR1",153,0)
 D FILE^DIE("","XMFDA")
"RTN","XMXADDR1",154,0)
 Q
"RTN","XMXADDR1",155,0)
REMOTE(XMDUZ,XMADDR,XMSTRIKE,XMPREFIX,XMLATER,XMFULL) ;
"RTN","XMXADDR1",156,0)
 ; XMVIA    IEN of domain in ^DIC(4.2 via which the msg will be sent
"RTN","XMXADDR1",157,0)
 ; XMVIAN   Name of domain via which the msg will be sent
"RTN","XMXADDR1",158,0)
 ; XMDOMAIN Domain of the addressee
"RTN","XMXADDR1",159,0)
 ; XMNAME   Name of the addressee
"RTN","XMXADDR1",160,0)
 N XMVIA,XMVIAN,XMDOMAIN,XMNAME
"RTN","XMXADDR1",161,0)
 S:XMADDR["<"!(XMADDR[" ") XMADDR=$$REMADDR(XMADDR)
"RTN","XMXADDR1",162,0)
 S XMNAME=$P(XMADDR,"@",1)
"RTN","XMXADDR1",163,0)
 I XMNAME="" D  Q
"RTN","XMXADDR1",164,0)
 . S XMERROR="Null addressee"
"RTN","XMXADDR1",165,0)
 . I $G(XMIA) W !,XMERROR
"RTN","XMXADDR1",166,0)
 S XMDOMAIN=$P(XMADDR,"@",2,99)
"RTN","XMXADDR1",167,0)
 I XMDOMAIN="" D  Q
"RTN","XMXADDR1",168,0)
 . I XMNAME["!" S XMERROR="You must specify a reachable uunet host."
"RTN","XMXADDR1",169,0)
 . E  S XMERROR="Null domain"
"RTN","XMXADDR1",170,0)
 . I $G(XMIA) W !,XMERROR
"RTN","XMXADDR1",171,0)
 ; find out the full domain name, and
"RTN","XMXADDR1",172,0)
 ; whether the domain is valid, and if so, via which entry in DIC(4.2
"RTN","XMXADDR1",173,0)
 D DNS^XMXADDRD(XMDUZ,.XMDOMAIN,.XMVIA,.XMVIAN) Q:$D(XMERROR)
"RTN","XMXADDR1",174,0)
 I XMDOMAIN=^XMB("NETNAME") D  ; the full domain name = the local domain
"RTN","XMXADDR1",175,0)
 . N XMQUOTED
"RTN","XMXADDR1",176,0)
 . S:XMNAME?1""""1.E1"""" XMNAME=$E(XMNAME,2,$L(XMNAME)-1),XMQUOTED=1
"RTN","XMXADDR1",177,0)
 . D LOCAL^XMXADDR(XMDUZ,XMNAME,XMSTRIKE,XMPREFIX,.XMLATER,.XMFULL)
"RTN","XMXADDR1",178,0)
 . Q:'$D(XMERROR)
"RTN","XMXADDR1",179,0)
 . Q:$G(XMQUOTED)
"RTN","XMXADDR1",180,0)
 . Q:".G.g.D.d.S.s."[("."_$E(XMNAME,1,2))
"RTN","XMXADDR1",181,0)
 . N XMSAVE
"RTN","XMXADDR1",182,0)
 . S XMSAVE=XMNAME
"RTN","XMXADDR1",183,0)
 . S XMNAME=$TR(XMNAME,"._+",", .")
"RTN","XMXADDR1",184,0)
 . Q:XMSAVE=XMNAME
"RTN","XMXADDR1",185,0)
 . K XMERROR
"RTN","XMXADDR1",186,0)
 . W:$G(XMIA) !,"Checking: ",XMNAME
"RTN","XMXADDR1",187,0)
 . D LOCAL^XMXADDR(XMDUZ,XMNAME,XMSTRIKE,XMPREFIX,.XMLATER,.XMFULL)
"RTN","XMXADDR1",188,0)
 E  D
"RTN","XMXADDR1",189,0)
 . I $D(XMRESTR("NONET")) D  Q
"RTN","XMXADDR1",190,0)
 . . S XMERROR="Messages longer than "_XMRESTR("NONET")_" may not be sent across the network."
"RTN","XMXADDR1",191,0)
 . . W:$G(XMIA) !,XMERROR
"RTN","XMXADDR1",192,0)
 . ; I XMDOMAIN?.E1".VA.GOV" D
"RTN","XMXADDR1",193,0)
 . ;. ; Check the address before the @ to find any obvious errors
"RTN","XMXADDR1",194,0)
 . ; Now transform spaces, commas, and periods in XMNAME
"RTN","XMXADDR1",195,0)
 . S XMFULL=XMNAME_"@"_XMDOMAIN
"RTN","XMXADDR1",196,0)
 . I XMLATER="?" D QLATER(XMFULL,.XMLATER) Q:$D(XMERROR)
"RTN","XMXADDR1",197,0)
 . D SETEXP^XMXADDR(XMFULL,XMVIA,XMSTRIKE,XMPREFIX,XMLATER)
"RTN","XMXADDR1",198,0)
 Q
"RTN","XMXADDR1",199,0)
REMADDR(XMADDR) ;
"RTN","XMXADDR1",200,0)
 I XMADDR["<" Q $TR($P($P(XMADDR,">",1),"<",2,99),"<")  ; handles <addr> and <<addr>>
"RTN","XMXADDR1",201,0)
 Q:XMADDR'[" " XMADDR
"RTN","XMXADDR1",202,0)
 I $E(XMADDR,1)=" "!($E(XMADDR,$L(XMADDR))=" ") S XMADDR=$$STRIP^XMXUTIL1(XMADDR)
"RTN","XMXADDR1",203,0)
 I XMADDR'["""",XMADDR'["(" Q XMADDR
"RTN","XMXADDR1",204,0)
 I XMADDR["""@" D  Q XMADDR
"RTN","XMXADDR1",205,0)
 . ; "first last"@domain
"RTN","XMXADDR1",206,0)
 . N I,J,XMDOM
"RTN","XMXADDR1",207,0)
 . S I=$F(XMADDR,"""@")
"RTN","XMXADDR1",208,0)
 . S XMDOM=$E(XMADDR,I,999)
"RTN","XMXADDR1",209,0)
 . S XMDOM=$P(XMDOM," ",1)
"RTN","XMXADDR1",210,0)
 . S J=$F(XMADDR,"""")
"RTN","XMXADDR1",211,0)
 . S XMADDR=$E(XMADDR,J-1,I-J)_"@"_XMDOM
"RTN","XMXADDR1",212,0)
 ; last.first@domain (first last)
"RTN","XMXADDR1",213,0)
 N I
"RTN","XMXADDR1",214,0)
 F I=1:1:$L(XMADDR," ") Q:$P(XMADDR," ",I)["@"
"RTN","XMXADDR1",215,0)
 S XMADDR=$P(XMADDR," ",I)
"RTN","XMXADDR1",216,0)
 Q XMADDR
"RTN","XMXADDR2")
0^264^B18936440
"RTN","XMXADDR2",1,0)
XMXADDR2 ;ISC-SF/GMB- XMXADDRG (continued) ;07/06/99  07:11
"RTN","XMXADDR2",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXADDR2",3,0)
DISTR(XMDUZ,XMG,XMSTRIKE,XMPREFIX,XMLATER) ;
"RTN","XMXADDR2",4,0)
 ; XMGN     Distribution group name
"RTN","XMXADDR2",5,0)
 N XMGM,XMGN
"RTN","XMXADDR2",6,0)
 S XMGM=""
"RTN","XMXADDR2",7,0)
 F  S XMGM=$O(^XMB(3.8,XMG,7,"B",XMGM)) Q:'XMGM  D  I XMLATER,'$G(XMIA) Q
"RTN","XMXADDR2",8,0)
 . I '$D(^XMB(3.816,XMGM)) D DELETE1(XMG,7,XMGM) Q
"RTN","XMXADDR2",9,0)
 . S XMGN=$P(^XMB(3.816,XMGM,0),U,1) Q:XMGN=""
"RTN","XMXADDR2",10,0)
 . I ".S.s.D.d.G.g."'[("."_$E(XMGN,1,2)) S XMGN="G."_XMGN
"RTN","XMXADDR2",11,0)
 . W:$G(XMIA) !,"Distribution List: ",XMGN
"RTN","XMXADDR2",12,0)
 . D:'XMLATER EXPDISTR(XMDUZ,XMGM,XMGN,XMSTRIKE,XMPREFIX,XMLATER)
"RTN","XMXADDR2",13,0)
 Q
"RTN","XMXADDR2",14,0)
EXPDISTR(XMDUZ,XMG,XMGN,XMSTRIKE,XMPREFIX,XMLATER) ;
"RTN","XMXADDR2",15,0)
 N XMI,XMDOMAIN
"RTN","XMXADDR2",16,0)
 ;S:".G.g."'[("."_$E(XMG,1,2)) XMLATER=""  ; XMLATER not appropriate for Servers or Devices.
"RTN","XMXADDR2",17,0)
 S XMI=0
"RTN","XMXADDR2",18,0)
 F  S XMI=$O(^XMB(3.816,XMG,1,"B",XMI)) Q:'XMI  D
"RTN","XMXADDR2",19,0)
 . S XMDOMAIN=$P($G(^DIC(4.2,XMI,0)),U,1) Q:XMDOMAIN=""
"RTN","XMXADDR2",20,0)
 . N XMERROR,XMIA,XMVIA
"RTN","XMXADDR2",21,0)
 . D DNS^XMXADDRD(XMDUZ,XMDOMAIN,.XMVIA)
"RTN","XMXADDR2",22,0)
 . I $D(XMERROR) S ^TMP("XM",$J,"GRPERR",XMG,"D",XMGN_"@"_XMDOMAIN)=XMERROR Q
"RTN","XMXADDR2",23,0)
 . D SETEXP^XMXADDR(XMGN_"@"_XMDOMAIN,XMVIA,XMSTRIKE,XMPREFIX,XMLATER)
"RTN","XMXADDR2",24,0)
 Q
"RTN","XMXADDR2",25,0)
FAXGROUP(XMDUZ,XMG,XMSTRIKE,XMPREFIX,XMLATER) ;
"RTN","XMXADDR2",26,0)
 N XMGM,XMI
"RTN","XMXADDR2",27,0)
 S XMGM=""
"RTN","XMXADDR2",28,0)
 F  S XMGM=$O(^XMB(3.8,XMG,9,"B",XMGM)) Q:XMGM=""  D  I XMLATER,'$G(XMIA) Q
"RTN","XMXADDR2",29,0)
 . S XMGN=$P($G(^AKF("FAXG",XMGM,0)),U)
"RTN","XMXADDR2",30,0)
 . I XMGN="" D DELETE1(XMG,9,XMGM) Q
"RTN","XMXADDR2",31,0)
 . W:$G(XMIA) !,"Fax Group: ",XMGN
"RTN","XMXADDR2",32,0)
 . S XMI=""
"RTN","XMXADDR2",33,0)
 . F  S XMI=$O(^AKF("FAXG",XMGM,2,"B",XMI)) Q:XMI=""  D FAX(XMDUZ,XMI,XMSTRIKE,XMPREFIX,XMLATER)
"RTN","XMXADDR2",34,0)
 Q
"RTN","XMXADDR2",35,0)
FAX(XMDUZ,XMG,XMSTRIKE,XMPREFIX,XMLATER) ;
"RTN","XMXADDR2",36,0)
 N XMGN
"RTN","XMXADDR2",37,0)
 S XMGN=$P($G(^AKF("FAXR",XMG,0)),U)
"RTN","XMXADDR2",38,0)
 Q:XMGN=""
"RTN","XMXADDR2",39,0)
 W:$G(XMIA) !,"Fax Recipient: ",XMGN
"RTN","XMXADDR2",40,0)
 ;D SETEXP^XMXADDR("F."_XMGN,XMG,XMSTRIKE,XMPREFIX,"")  ; XMLATER not appropriate
"RTN","XMXADDR2",41,0)
 D:'XMLATER SETEXP^XMXADDR("F."_XMGN,XMG,XMSTRIKE,XMPREFIX,XMLATER)
"RTN","XMXADDR2",42,0)
 Q
"RTN","XMXADDR2",43,0)
FAXINDIV(XMDUZ,XMG,XMSTRIKE,XMPREFIX,XMLATER) ;
"RTN","XMXADDR2",44,0)
 ; XMGM     Group member
"RTN","XMXADDR2",45,0)
 N XMGM,XMCNT
"RTN","XMXADDR2",46,0)
 S XMGM="",XMCNT=0
"RTN","XMXADDR2",47,0)
 F  S XMGM=$O(^XMB(3.8,XMG,8,"B",XMGM)) Q:XMGM=""  D  I XMLATER,'$G(XMIA) Q
"RTN","XMXADDR2",48,0)
 . I '$D(^AKF("FAXR",XMGM)) D DELETE1(XMG,8,XMGM) Q
"RTN","XMXADDR2",49,0)
 . D FAX(XMDUZ,XMGM,XMSTRIKE,XMPREFIX,XMLATER)
"RTN","XMXADDR2",50,0)
 Q
"RTN","XMXADDR2",51,0)
DELETE1(XMGIEN,XMNODE,XMGM) ;
"RTN","XMXADDR2",52,0)
 N DIK,DA
"RTN","XMXADDR2",53,0)
 L +^XMB(3.8,XMGIEN,XMNODE):0 E  Q
"RTN","XMXADDR2",54,0)
 S DA=$O(^XMB(3.8,XMG,XMNODE,"B",XMGM,0))
"RTN","XMXADDR2",55,0)
 S DA(1)=XMGIEN
"RTN","XMXADDR2",56,0)
 S DIK="^XMB(3.8,"_DA(1)_","_XMNODE_","
"RTN","XMXADDR2",57,0)
 D ^DIK
"RTN","XMXADDR2",58,0)
 L -^XMB(3.8,XMGIEN,XMNODE)
"RTN","XMXADDR2",59,0)
 Q
"RTN","XMXADDR2",60,0)
DELETE2(XMGIEN,XMNODE,DA) ;
"RTN","XMXADDR2",61,0)
 N DIK
"RTN","XMXADDR2",62,0)
 L +^XMB(3.8,XMGIEN,XMNODE):0 E  Q
"RTN","XMXADDR2",63,0)
 S DA(1)=XMGIEN
"RTN","XMXADDR2",64,0)
 S DIK="^XMB(3.8,"_DA(1)_","_XMNODE_","
"RTN","XMXADDR2",65,0)
 D ^DIK
"RTN","XMXADDR2",66,0)
 L -^XMB(3.8,XMGIEN,XMNODE)
"RTN","XMXADDR2",67,0)
 Q
"RTN","XMXADDR2",68,0)
GRPERR(XMDUZ,XMG,XMGN) ; Send a bulletin about errors in groups.
"RTN","XMXADDR2",69,0)
 N XMGIEN,XMPARM,XMINSTR
"RTN","XMXADDR2",70,0)
 S XMINSTR("FROM")=.5
"RTN","XMXADDR2",71,0)
 S XMPARM(1)=XMGN
"RTN","XMXADDR2",72,0)
 S XMGIEN=0
"RTN","XMXADDR2",73,0)
 F  S XMGIEN=$O(^TMP("XM",$J,"GRPERR",XMGIEN)) Q:'XMGIEN  D
"RTN","XMXADDR2",74,0)
 . N XMTXT,XMI,XMTO
"RTN","XMXADDR2",75,0)
 . S XMI=0
"RTN","XMXADDR2",76,0)
 . I XMGIEN'=XMG D
"RTN","XMXADDR2",77,0)
 . . S XMI=XMI+1,XMTXT(XMI)=""
"RTN","XMXADDR2",78,0)
 . . S XMI=XMI+1,XMTXT(XMI)="Problems in member group: "_$P($G(^XMB(3.8,XMGIEN,0)),U,1)_" (IEN="_XMGIEN_")"
"RTN","XMXADDR2",79,0)
 . I $D(^TMP("XM",$J,"GRPERR",XMGIEN,"L")) D GRPTXT(XMGIEN,"L","Local Member",.XMTXT,.XMI)
"RTN","XMXADDR2",80,0)
 . I $D(^TMP("XM",$J,"GRPERR",XMGIEN,"R")) D GRPTXT(XMGIEN,"R","Remote Member",.XMTXT,.XMI)
"RTN","XMXADDR2",81,0)
 . I $D(^TMP("XM",$J,"GRPERR",XMGIEN,"D")) D GRPTXT(XMGIEN,"D","Distribution List Domain",.XMTXT,.XMI)
"RTN","XMXADDR2",82,0)
 . I $D(^TMP("XM",$J,"GRPERR",XMGIEN,"C")) D GRPTXT(XMGIEN,"C","Circular Group Reference",.XMTXT,.XMI)
"RTN","XMXADDR2",83,0)
 . S XMTO(XMDUZ)=""  ; Person sending the message
"RTN","XMXADDR2",84,0)
 . D GRPADDR(XMG,.XMTO)
"RTN","XMXADDR2",85,0)
 . I XMG'=XMGIEN D GRPADDR(XMGIEN,.XMTO)
"RTN","XMXADDR2",86,0)
 . D TASKBULL^XMXBULL(XMDUZ,"XM GROUP ERROR",.XMPARM,"XMTXT",.XMTO,.XMINSTR)
"RTN","XMXADDR2",87,0)
 Q
"RTN","XMXADDR2",88,0)
GRPTXT(XMGIEN,XMTYPE,XMPROB,XMTXT,XMI) ;
"RTN","XMXADDR2",89,0)
 N XMNAME,XMERROR
"RTN","XMXADDR2",90,0)
 S XMNAME=""
"RTN","XMXADDR2",91,0)
 F  S XMNAME=$O(^TMP("XM",$J,"GRPERR",XMGIEN,XMTYPE,XMNAME)) Q:XMNAME=""  D
"RTN","XMXADDR2",92,0)
 . S XMI=XMI+1,XMTXT(XMI)=""
"RTN","XMXADDR2",93,0)
 . S XMI=XMI+1,XMTXT(XMI)=XMPROB_": "_XMNAME
"RTN","XMXADDR2",94,0)
 . S XMI=XMI+1,XMTXT(XMI)="Error: "_^TMP("XM",$J,"GRPERR",XMGIEN,XMTYPE,XMNAME)
"RTN","XMXADDR2",95,0)
 Q
"RTN","XMXADDR2",96,0)
GRPADDR(XMGIEN,XMTO) ;
"RTN","XMXADDR2",97,0)
 N I
"RTN","XMXADDR2",98,0)
 S I=$P($G(^XMB(3.8,XMGIEN,3)),U,1)  ; Organizer
"RTN","XMXADDR2",99,0)
 S:I XMTO(I)=""
"RTN","XMXADDR2",100,0)
 S I=$P($G(^XMB(3.8,XMGIEN,0)),U,7)  ; Coordinator
"RTN","XMXADDR2",101,0)
 S:I XMTO(I)=""
"RTN","XMXADDR2",102,0)
 Q:'$D(^XMB(3.8,XMGIEN,4,"B"))
"RTN","XMXADDR2",103,0)
 S I=0
"RTN","XMXADDR2",104,0)
 F  S I=$O(^XMB(3.8,XMGIEN,4,"B",I)) Q:'I  D
"RTN","XMXADDR2",105,0)
 . S XMTO(I)=""  ; Authorized sender
"RTN","XMXADDR2",106,0)
 Q
"RTN","XMXADDRD")
0^43^B36994683
"RTN","XMXADDRD",1,0)
XMXADDRD ;ISC-SF/GMB-DOMAIN NAME SERVER ;05/18/99  15:04
"RTN","XMXADDRD",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXADDRD",3,0)
 ; Replaces PSP^XMA210,^XMA21A,^XMA21B (ISC-WASH/CAP)
"RTN","XMXADDRD",4,0)
DNS(XMDUZ,XMDOMAIN,XMVIA,XMVIAN) ;
"RTN","XMXADDRD",5,0)
 ; XMDOMAIN - (in/out) Domain name.  May be mixed case.  Must already be
"RTN","XMXADDRD",6,0)
 ;            in xxx.xxx.xxx format.
"RTN","XMXADDRD",7,0)
 ; XMVIA    - (out) IEN of (relay) domain (in ^DIC(4.2))
"RTN","XMXADDRD",8,0)
 ; XMVIAN   - (out) Name of (relay) domain
"RTN","XMXADDRD",9,0)
 N XMVIAREC,XMNETNAM
"RTN","XMXADDRD",10,0)
 S XMNETNAM=^XMB("NETNAME")
"RTN","XMXADDRD",11,0)
 S XMDOMAIN=$$UP^XLFSTR(XMDOMAIN)
"RTN","XMXADDRD",12,0)
 I XMDOMAIN=XMNETNAM D  Q
"RTN","XMXADDRD",13,0)
 . S XMVIA=^XMB("NUM")
"RTN","XMXADDRD",14,0)
 . S XMVIAN=XMNETNAM
"RTN","XMXADDRD",15,0)
 D FINDDOMN
"RTN","XMXADDRD",16,0)
 Q:$D(XMERROR)
"RTN","XMXADDRD",17,0)
 I XMVIAN="VA.GOV",$$FORUM D  Q
"RTN","XMXADDRD",18,0)
 . S XMERROR="Domain not found: "_XMDOMAIN
"RTN","XMXADDRD",19,0)
 . W:$G(XMIA) !,XMERROR
"RTN","XMXADDRD",20,0)
 I $G(XMIA) D
"RTN","XMXADDRD",21,0)
 . W:XMDOMAIN'=XMVIAN " via ",XMVIAN
"RTN","XMXADDRD",22,0)
 . I XMVIAN'=XMNETNAM,$P(XMVIAREC,U,2)'["S" W " (Queued)"
"RTN","XMXADDRD",23,0)
 Q
"RTN","XMXADDRD",24,0)
FORUM() ; Is this FORUM or GATEWAY?
"RTN","XMXADDRD",25,0)
 Q $S($G(XMNETNAM,^XMB("NETNAME"))'["FORUM.":0,1:1)
"RTN","XMXADDRD",26,0)
FINDDOMN ; Look up domain
"RTN","XMXADDRD",27,0)
 N XMSUBDOM,XMFLAGS,DIC,X,Y
"RTN","XMXADDRD",28,0)
 S XMSUBDOM="",X=XMDOMAIN
"RTN","XMXADDRD",29,0)
 S XMFLAGS="ZMF"_$S('$G(XMIA):"O",$G(XMRESTR("FLAGS"))["O":"OE",1:"E")
"RTN","XMXADDRD",30,0)
 S DIC="^DIC(4.2,",DIC(0)=XMFLAGS
"RTN","XMXADDRD",31,0)
 F  S D="B^C" D MIX^DIC1 Q:Y>0!(X'[".")!$D(DUOUT)!$D(DTOUT)  D  Q:X=XMNETNAM
"RTN","XMXADDRD",32,0)
 . S XMSUBDOM=XMSUBDOM_$P(X,".")_"."
"RTN","XMXADDRD",33,0)
 . S X=$P(X,".",2,999)
"RTN","XMXADDRD",34,0)
 I Y'>0,X'[".",'$G(XMIA),$L(X)<4 S DIC(0)="ZFX",D="C" D IX^DIC  ; Look for COM,MIL,NET,etc. as synonym for one of the domains.
"RTN","XMXADDRD",35,0)
 I Y>0 D  Q   ; Domain successfully found
"RTN","XMXADDRD",36,0)
 . I XMSUBDOM'="" D  Q:$D(XMERROR)
"RTN","XMXADDRD",37,0)
 . . D CHKDOM($E(XMSUBDOM,1,$L(XMSUBDOM)-1)) Q:$D(XMERROR)
"RTN","XMXADDRD",38,0)
 . . Q:Y(0,0)'=XMNETNAM
"RTN","XMXADDRD",39,0)
 . . S XMERROR="Sub-domain '"_$E(XMSUBDOM,1,$L(XMSUBDOM)-1)_"' not found for domain '"_X_"'"
"RTN","XMXADDRD",40,0)
 . . W:$G(XMIA) !,XMERROR
"RTN","XMXADDRD",41,0)
 . I XMSUBDOM="",X'[".",$L(X)<4,$$FIND1^DIC(4.2996,"","QX",X) D  Q
"RTN","XMXADDRD",42,0)
 . . S XMERROR="Valid domain, but need subdomain: "_X
"RTN","XMXADDRD",43,0)
 . . Q:'$G(XMIA)
"RTN","XMXADDRD",44,0)
 . . W !,"Domain "_X_" is a valid INTERNET domain,"
"RTN","XMXADDRD",45,0)
 . . W !,"but you must specify at least one sub-domain."
"RTN","XMXADDRD",46,0)
 . S XMDOMAIN=$S(XMSUBDOM="":Y(0,0),1:XMSUBDOM_X)  ; MailMan's klugey way
"RTN","XMXADDRD",47,0)
 . ;S XMDOMAIN=XMSUBDOM_X ; Proper way?  Nope.
"RTN","XMXADDRD",48,0)
 . S XMVIA=+Y
"RTN","XMXADDRD",49,0)
 . S XMVIAREC=Y(0)
"RTN","XMXADDRD",50,0)
 . D VIA(.XMVIA,.XMVIAREC,.XMVIAN)
"RTN","XMXADDRD",51,0)
 I '$G(XMIA),X'=XMNETNAM D  Q:$D(XMERROR)
"RTN","XMXADDRD",52,0)
 . N Y,X
"RTN","XMXADDRD",53,0)
 . S X=XMDOMAIN
"RTN","XMXADDRD",54,0)
 . F  S Y=$$FIND1^DIC(4.2,"","MOQ",X,"B^C") Q:Y>0!$D(DIERR)!(X'[".")  D
"RTN","XMXADDRD",55,0)
 . . S X=$P(X,".",2,999)
"RTN","XMXADDRD",56,0)
 . Q:Y!'$D(DIERR)  ; (Y should never be >0, because we didn't find it before.)
"RTN","XMXADDRD",57,0)
 . I X'[".",$$FIND1^DIC(4.2996,"","QX",X) Q
"RTN","XMXADDRD",58,0)
 . S XMERROR="Domain ambiguous: "_X
"RTN","XMXADDRD",59,0)
 I $D(DTOUT)!$D(DUOUT) D  Q
"RTN","XMXADDRD",60,0)
 . S XMERROR=$S($D(DUOUT):"^",1:"time")_" out."
"RTN","XMXADDRD",61,0)
 . W !,XMERROR
"RTN","XMXADDRD",62,0)
 I X'["." D  Q  ; Domain not found, look in internet suffix file
"RTN","XMXADDRD",63,0)
 . D LOOKSFX Q:$D(XMERROR)
"RTN","XMXADDRD",64,0)
 . I X=XMDOMAIN D
"RTN","XMXADDRD",65,0)
 . . S XMERROR="Valid domain, but need subdomain: "_X
"RTN","XMXADDRD",66,0)
 . . Q:'$G(XMIA)
"RTN","XMXADDRD",67,0)
 . . W !,"Domain "_X_" is a valid INTERNET domain,"
"RTN","XMXADDRD",68,0)
 . . W !,"but you must specify at least one sub-domain."
"RTN","XMXADDRD",69,0)
 . E  D CHKDOM($E(XMSUBDOM,1,$L(XMSUBDOM)-1))
"RTN","XMXADDRD",70,0)
 I X=XMNETNAM D  Q
"RTN","XMXADDRD",71,0)
 . S XMERROR="Sub-domain '"_$E(XMSUBDOM,1,$L(XMSUBDOM)-1)_"' not found for domain '"_X_"'"
"RTN","XMXADDRD",72,0)
 . W:$G(XMIA) !,XMERROR
"RTN","XMXADDRD",73,0)
 Q
"RTN","XMXADDRD",74,0)
VIA(XMVIA,XMVIAREC,XMVIAN) ;
"RTN","XMXADDRD",75,0)
 S XMVIAN=$P(XMVIAREC,U,1)
"RTN","XMXADDRD",76,0)
 D CHKPRMIT(XMDUZ,XMVIAREC) Q:$D(XMERROR)
"RTN","XMXADDRD",77,0)
 ; If there's a relay domain, follow it.
"RTN","XMXADDRD",78,0)
 I $P(XMVIAREC,U,3) S XMVIA=$P(XMVIAREC,U,3),XMVIAREC=$G(^DIC(4.2,XMVIA,0)) D VIA(.XMVIA,.XMVIAREC,.XMVIAN) Q
"RTN","XMXADDRD",79,0)
 Q:$P(XMVIAREC,U,2)'["S"
"RTN","XMXADDRD",80,0)
 Q:$O(^DIC(4.2,XMVIA,1,0))  ; Domain has script(s).
"RTN","XMXADDRD",81,0)
 Q:$L(XMVIAN)+1=$F(XMVIAN,XMNETNAM)  ; Subdomain of this domain.
"RTN","XMXADDRD",82,0)
 N Y
"RTN","XMXADDRD",83,0)
 I $L(XMVIAN,".")>3 D  I Y,$P(^DIC(4.2,+Y,0),U,1)=XMNETNAM Q  ; Subdomain of this domain.
"RTN","XMXADDRD",84,0)
 . N X
"RTN","XMXADDRD",85,0)
 . S X=$P(XMVIAN,".",2,999)
"RTN","XMXADDRD",86,0)
 . F  S Y=$$FIND1^DIC(4.2,"","QX",X,"C") Q:Y!($L(X,".")<3)  D
"RTN","XMXADDRD",87,0)
 . . S X=$P(X,".",2,999)
"RTN","XMXADDRD",88,0)
 ; No script, so send to parent domain, if there is one,
"RTN","XMXADDRD",89,0)
 ; and if the parent isn't the same as this domain.
"RTN","XMXADDRD",90,0)
 Q:'$G(^XMB("PARENT"))
"RTN","XMXADDRD",91,0)
 Q:'$G(^XMB("NUM"))
"RTN","XMXADDRD",92,0)
 Q:^XMB("PARENT")=^XMB("NUM")
"RTN","XMXADDRD",93,0)
 Q:'$D(^DIC(4.2,^XMB("PARENT"),0))
"RTN","XMXADDRD",94,0)
 S XMVIA=^XMB("PARENT")
"RTN","XMXADDRD",95,0)
 S XMVIAREC=^DIC(4.2,XMVIA,0)
"RTN","XMXADDRD",96,0)
 S XMVIAN=$P(XMVIAREC,U,1)
"RTN","XMXADDRD",97,0)
 Q
"RTN","XMXADDRD",98,0)
CHKDOM(XMDOM,XMMAXDOM,XMMAXDOT) ;
"RTN","XMXADDRD",99,0)
 N I,XMSUBDOM
"RTN","XMXADDRD",100,0)
 I $TR(XMDOM,".-","")'?.AN D  Q
"RTN","XMXADDRD",101,0)
 . S XMERROR="Domain may not contain punctuation other than '.' or '-'."
"RTN","XMXADDRD",102,0)
 . W:$G(XMIA) !,XMERROR
"RTN","XMXADDRD",103,0)
 I '$D(XMMAXDOM) S XMMAXDOM=255
"RTN","XMXADDRD",104,0)
 I $L(XMDOM)>XMMAXDOM D  Q
"RTN","XMXADDRD",105,0)
 . S XMERROR="Domain must be from 1 to "_XMMAXDOM_" characters."
"RTN","XMXADDRD",106,0)
 . W:$G(XMIA) !,XMERROR
"RTN","XMXADDRD",107,0)
 I '$D(XMMAXDOT) S XMMAXDOT=63
"RTN","XMXADDRD",108,0)
 F I=1:1:$L(XMDOM,".") D  Q:$D(XMERROR)
"RTN","XMXADDRD",109,0)
 . S XMSUBDOM=$P(XMDOM,".",I)
"RTN","XMXADDRD",110,0)
 . I XMSUBDOM?1AN.E,$L(XMSUBDOM)'>XMMAXDOT Q
"RTN","XMXADDRD",111,0)
 . I $L(XMSUBDOM,I)>XMMAXDOT S XMERROR="Domain dot pieces must be from 1 to "_XMMAXDOT_" characters long."
"RTN","XMXADDRD",112,0)
 . E  S XMERROR="Domain dot pieces must begin with a letter or number."
"RTN","XMXADDRD",113,0)
 . Q:'$G(XMIA)
"RTN","XMXADDRD",114,0)
 . W !,XMERROR
"RTN","XMXADDRD",115,0)
 . W !,XMSUBDOM_" is not valid."
"RTN","XMXADDRD",116,0)
 Q
"RTN","XMXADDRD",117,0)
LOOKSFX ; Look for top level domain in internet suffix file
"RTN","XMXADDRD",118,0)
 ; Instead of looking in the file, we could call the COTS DNS, if it exists.
"RTN","XMXADDRD",119,0)
 N DIC,Y
"RTN","XMXADDRD",120,0)
 I $G(XMIA) D
"RTN","XMXADDRD",121,0)
 . W !,"Looking in Internet Suffix file..."
"RTN","XMXADDRD",122,0)
 . S DIC(0)=$TR(XMFLAGS,"O")_"X"
"RTN","XMXADDRD",123,0)
 E  S DIC(0)="X"
"RTN","XMXADDRD",124,0)
 S DIC="^DIC(4.2996,"
"RTN","XMXADDRD",125,0)
 S:$G(XMIA) DIC("W")="W ""  "",$P(^(0),U,2)"  ; high-level domain purpose/country
"RTN","XMXADDRD",126,0)
 D ^DIC
"RTN","XMXADDRD",127,0)
 I Y>0 D  Q:XMVIA
"RTN","XMXADDRD",128,0)
 . S XMVIA=$G(^XMB("PARENT"))
"RTN","XMXADDRD",129,0)
 . I 'XMVIA S XMVIA=$$FIND1^DIC(4.2,"","MQX",$S($$FORUM:"GK.VA.GOV",1:"FORUM.VA.GOV"),"B^C") Q:'XMVIA
"RTN","XMXADDRD",130,0)
 . S XMVIAREC=^DIC(4.2,XMVIA,0)
"RTN","XMXADDRD",131,0)
 . S XMVIAN=$P(XMVIAREC,U)
"RTN","XMXADDRD",132,0)
 S XMERROR="Domain not found: "_X
"RTN","XMXADDRD",133,0)
 W:$G(XMIA) !,XMERROR
"RTN","XMXADDRD",134,0)
 Q
"RTN","XMXADDRD",135,0)
CHKPRMIT(XMDUZ,XMVIAREC) ;
"RTN","XMXADDRD",136,0)
 I $G(XMINSTR("ADDR FLAGS"))["R",'$D(XMRESTR("NET RECEIVE")) Q
"RTN","XMXADDRD",137,0)
 I $P(XMVIAREC,U,2)["C",$P(XMVIAREC,U,2)'["S" D  Q
"RTN","XMXADDRD",138,0)
 . S XMERROR="Domain closed: "_$P(XMVIAREC,U,1)
"RTN","XMXADDRD",139,0)
 . W:$G(XMIA) !,XMERROR
"RTN","XMXADDRD",140,0)
 Q:$G(XMINSTR("ADDR FLAGS"))["R"
"RTN","XMXADDRD",141,0)
 I $P(XMVIAREC,U,11)'="",'$D(^XUSEC($P(XMVIAREC,U,11),XMDUZ)) D  Q
"RTN","XMXADDRD",142,0)
 . S XMERROR="You don't hold key to domain '"_$P(XMVIAREC,U,1)_"'."
"RTN","XMXADDRD",143,0)
 . W:$G(XMIA) !,XMERROR
"RTN","XMXADDRD",144,0)
 ; Maybe the following belongs in XMFWD^XMVVITAE:
"RTN","XMXADDRD",145,0)
 ;I $P(XMVIAREC,U,2)["N" D  Q
"RTN","XMXADDRD",146,0)
 ;. S XMERROR="No forwarding to domain '"_$P(XMVIAREC,U,1)_"'."
"RTN","XMXADDRD",147,0)
 ;. W:$G(XMIA) !,XMERROR
"RTN","XMXADDRD",148,0)
 Q
"RTN","XMXADDRD",149,0)
 ; **************************************************************
"RTN","XMXADDRD",150,0)
 ;I X'[".",$E(XMSUBDOM)="#" D  Q
"RTN","XMXADDRD",151,0)
 ;. ; X.400 Addressing  (See I3^XMA21A)
"RTN","XMXADDRD",152,0)
 ;. S X="#"
"RTN","XMXADDRD",153,0)
 ;. D ^DIC
"RTN","XMXADDRD",154,0)
 ;. I Y<1 D  Q
"RTN","XMXADDRD",155,0)
 ;. . S XMERROR="X.400 domain not found.  It must have '#' as its synonym."
"RTN","XMXADDRD",156,0)
 ;. . I $D(XMIA) W !,*7,XMERROR Q
"RTN","XMXADDRD",157,0)
 ;. . S XMMG="X.400 domain not found.  It must have '#' as its synonym."
"RTN","XMXADDRD",158,0)
 ;. S XMDOMAIN=XMSUBDOM_X
"RTN","XMXADDRD",159,0)
 ; **************************************************************
"RTN","XMXADDRD",160,0)
CHKNAME ; Input transform for .01 field of DOMAIN file 4.2
"RTN","XMXADDRD",161,0)
 N XMIA,XMERROR,I
"RTN","XMXADDRD",162,0)
 S XMIA=0
"RTN","XMXADDRD",163,0)
 S X=$$UP^XLFSTR(X)
"RTN","XMXADDRD",164,0)
 D CHKDOM(X,64,20)
"RTN","XMXADDRD",165,0)
 I $D(XMERROR) D  Q
"RTN","XMXADDRD",166,0)
 . D EN^DDIOL(XMERROR,"","!,*7")
"RTN","XMXADDRD",167,0)
 . K X
"RTN","XMXADDRD",168,0)
 Q:$D(DIFROM)
"RTN","XMXADDRD",169,0)
 F I=1:1:$L(X,".")-1 D  Q:'$D(X)
"RTN","XMXADDRD",170,0)
 . Q:'$D(^DIC(4.2996,"B",$P(X,".",I),0))
"RTN","XMXADDRD",171,0)
 . D EN^DDIOL("Domain dot pieces must not match Internet reserved domain names.","","!,*7")
"RTN","XMXADDRD",172,0)
 . K X
"RTN","XMXADDRD",173,0)
 Q
"RTN","XMXADDRD",174,0)
 ;I $G(XMIA) D
"RTN","XMXADDRD",175,0)
 ;. N DIC
"RTN","XMXADDRD",176,0)
 ;. S DIC="^DIC(4.2,",XMFLAGS="ZMF"_$S($G(XMRESTR("FLAGS"))["O":"OE",1:"E"),DIC(0)=XMFLAGS
"RTN","XMXADDRD",177,0)
 ;. F  D ^DIC Q:Y>0!(X'[".")!$D(DUOUT)!$D(DTOUT)  D  Q:X=XMNETNAM
"RTN","XMXADDRD",178,0)
 ;. . S XMSUBDOM=XMSUBDOM_$P(X,".")_"."
"RTN","XMXADDRD",179,0)
 ;. . S X=$P(X,".",2,999)
"RTN","XMXADDRD",180,0)
 ;E  D  Q:$D(XMERROR)
"RTN","XMXADDRD",181,0)
 ;. ; The problem with $$FIND1 is that if X matches a synonym, we have
"RTN","XMXADDRD",182,0)
 ;. ; no idea which synonym.  With ^DIC, if X matches a synonym, X is
"RTN","XMXADDRD",183,0)
 ;. ; set to the synonym.
"RTN","XMXADDRD",184,0)
 ;. ;S XMFLAGS="MOQ"
"RTN","XMXADDRD",185,0)
 ;. ;F  S Y=$$FIND1^DIC(4.2,"",XMFLAGS,X) Q:Y>0!(X'[".")  D  Q:X=XMNETNAM
"RTN","XMXADDRD",186,0)
 ;. F  S Y=$$FIND1^DIC(4.2,"","OQ",X,"B") Q:Y>0!$D(DIERR)  S Y=$$FIND1^DIC(4.2,"","OQ",X,"C") Q:Y>0!(X'[".")!$D(DIERR)  D  Q:X=XMNETNAM
"RTN","XMXADDRD",187,0)
 ;. . S XMSUBDOM=XMSUBDOM_$P(X,".")_"."
"RTN","XMXADDRD",188,0)
 ;. . S X=$P(X,".",2,999)
"RTN","XMXADDRD",189,0)
 ;. ;Q:'Y
"RTN","XMXADDRD",190,0)
 ;. I 'Y S:$D(DIERR) XMERROR="Domain ambiguous." Q
"RTN","XMXADDRD",191,0)
 ;. S Y(0)=^DIC(4.2,Y,0)
"RTN","XMXADDRD",192,0)
 ;. S Y(0,0)=$P(Y(0),U)
"RTN","XMXADDRD",193,0)
 ;. I $E(Y(0,0),1,$L(X))=X S X=Y(0,0)
"RTN","XMXADDRG")
0^44^B66384926
"RTN","XMXADDRG",1,0)
XMXADDRG ;ISC-SF/GMB- expand group ;03/19/99  08:47
"RTN","XMXADDRG",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXADDRG",3,0)
 ; Replaces ^XMA21G (ISC-WASH/CAP)
"RTN","XMXADDRG",4,0)
EXPAND(XMDUZ,XMADDR,XMSTRIKE,XMPREFIX,XMLATER,XMFULL) ;
"RTN","XMXADDRG",5,0)
 ; XMG      IEN of group in ^XMB(3.8)
"RTN","XMXADDRG",6,0)
 ; XMGN     Name of group
"RTN","XMXADDRG",7,0)
 ; XMGPRIV  Restrictions on use of group
"RTN","XMXADDRG",8,0)
 ; XMGMREC  Group member's ^XMB(3.7,x,0 record
"RTN","XMXADDRG",9,0)
 ; XMGCIRCL Array used to guard against circular references
"RTN","XMXADDRG",10,0)
 N XMG,XMGREC,XMGN,XMGPRIV,XMSCREEN,XMGCIRCL,XMIASAVE
"RTN","XMXADDRG",11,0)
 ; Screen:  Group is public OR user is owner
"RTN","XMXADDRG",12,0)
 ;          OR group is unrestricted and user is member
"RTN","XMXADDRG",13,0)
 I $D(XMRESTR("NOFPG")) D  Q
"RTN","XMXADDRG",14,0)
 . S XMERROR="Must be sender or hold XM GROUP PRIORITY key to forward priority mail to groups."
"RTN","XMXADDRG",15,0)
 . W:$G(XMIA) !,XMERROR
"RTN","XMXADDRG",16,0)
 S XMADDR=$E(XMADDR,3,999)
"RTN","XMXADDRG",17,0)
 S XMSCREEN="N J,XMA S J=^(0),XMA=$S($D(^XMB(3.8,+Y,3)):$P(^(3),U),1:.5) I $P(J,U,2)=""PU""!(XMA=XMDUZ)!(+$P(J,U,6)=0&$D(^XMB(3.8,+Y,1,""B"",XMDUZ)))"
"RTN","XMXADDRG",18,0)
 I $G(XMIA) D  Q:$D(XMERROR)
"RTN","XMXADDRG",19,0)
 . N DIC,X
"RTN","XMXADDRG",20,0)
 . S X=XMADDR
"RTN","XMXADDRG",21,0)
 . S DIC("S")=XMSCREEN
"RTN","XMXADDRG",22,0)
 . S DIC="^XMB(3.8,"
"RTN","XMXADDRG",23,0)
 . S DIC(0)="MEZ"
"RTN","XMXADDRG",24,0)
 . D ^DIC
"RTN","XMXADDRG",25,0)
 . I Y<0 D  Q
"RTN","XMXADDRG",26,0)
 . . S XMERROR="  Not found."
"RTN","XMXADDRG",27,0)
 . . W:XMADDR'="?" XMERROR
"RTN","XMXADDRG",28,0)
 . S XMG=+Y
"RTN","XMXADDRG",29,0)
 . S XMGN=$P(Y,U,2)
"RTN","XMXADDRG",30,0)
 . S XMGREC=Y(0)
"RTN","XMXADDRG",31,0)
 E  D  Q:$D(XMERROR)
"RTN","XMXADDRG",32,0)
 . S XMG=$$FIND1^DIC(3.8,"","MO",XMADDR,"",XMSCREEN) I 'XMG S XMERROR="Mail group "_$S($D(DIERR):"ambiguous.",1:"not found.") Q
"RTN","XMXADDRG",33,0)
 . S XMGREC=^XMB(3.8,XMG,0)
"RTN","XMXADDRG",34,0)
 . S XMGN=$P(XMGREC,U)
"RTN","XMXADDRG",35,0)
 I $D(^XMB(3.8,XMG,4,"B")),'$D(^("B",XMDUZ))!$D(XMRESTR("NET RECEIVE")) D  Q
"RTN","XMXADDRG",36,0)
 . ; If the group has authorized senders, then the sender must be local.
"RTN","XMXADDRG",37,0)
 . ; Incoming network mail may not address such a group.
"RTN","XMXADDRG",38,0)
 . S XMERROR="Sender not authorized to group."
"RTN","XMXADDRG",39,0)
 . Q:'$G(XMIA)
"RTN","XMXADDRG",40,0)
 . N XMABORT
"RTN","XMXADDRG",41,0)
 . S XMABORT=0
"RTN","XMXADDRG",42,0)
 . W @IOF,"You may not send mail directly to this group."
"RTN","XMXADDRG",43,0)
 . W !,"You must send it to an authorized sender for the group."
"RTN","XMXADDRG",44,0)
 . D AUTHSEND^XMHIG(XMG,XMABORT)
"RTN","XMXADDRG",45,0)
 S XMGPRIV=$P(XMGREC,U,6)
"RTN","XMXADDRG",46,0)
 S XMFULL="G."_XMGN_$S(XMGPRIV:" [Private Mail Group]",1:"")
"RTN","XMXADDRG",47,0)
 I $G(XMINSTR("ADDR FLAGS"))["X" Q
"RTN","XMXADDRG",48,0)
 I XMSTRIKE Q:$D(^TMP("XMY0",$J,XMFULL,"L"))  W:$G(XMIA) "  Deleting Members ..."
"RTN","XMXADDRG",49,0)
 I $G(XMIA),'XMSTRIKE D  Q:$D(XMERROR)
"RTN","XMXADDRG",50,0)
 . I XMLATER="",$G(XMBIGGRP),$$BIG(XMG) D LATERIT(XMFULL,.XMLATER)
"RTN","XMXADDRG",51,0)
 . I XMLATER="?" D QLATER^XMXADDR1(XMFULL,.XMLATER)
"RTN","XMXADDRG",52,0)
 I XMLATER,'$G(XMIA) Q
"RTN","XMXADDRG",53,0)
 I $D(XMIA) S XMIASAVE=XMIA
"RTN","XMXADDRG",54,0)
 I $D(^TMP("XM",$J,"GRPERR")) K ^TMP("XM",$J,"GRPERR")
"RTN","XMXADDRG",55,0)
 D EXPGROUP(XMDUZ,XMG,XMGREC,XMSTRIKE,XMPREFIX,XMLATER,.XMGCIRCL)
"RTN","XMXADDRG",56,0)
 I $D(^TMP("XM",$J,"GRPERR")) D
"RTN","XMXADDRG",57,0)
 . D GRPERR^XMXADDR2(XMDUZ,XMG,XMGN)
"RTN","XMXADDRG",58,0)
 . K ^TMP("XM",$J,"GRPERR")
"RTN","XMXADDRG",59,0)
 K XMIA
"RTN","XMXADDRG",60,0)
 I $D(XMIASAVE) S XMIA=XMIASAVE
"RTN","XMXADDRG",61,0)
 Q
"RTN","XMXADDRG",62,0)
BIG(XMIEN) ; Function returns 1 if big group, 0 if not
"RTN","XMXADDRG",63,0)
 Q:$D(^XMB(3.8,XMIEN,5,"B")) 1  ; has member groups
"RTN","XMXADDRG",64,0)
 Q:$D(^XMB(3.8,XMIEN,7,"B")) 1  ; has distribution list
"RTN","XMXADDRG",65,0)
 ;Q:$D(^XMB(3.8,XMIEN,9,"B")) 1  ; has fax groups
"RTN","XMXADDRG",66,0)
 N XMCNT,XMNODE
"RTN","XMXADDRG",67,0)
 S XMCNT=0
"RTN","XMXADDRG",68,0)
 F XMNODE=1,6,8 D  ; local, remote, & fax members
"RTN","XMXADDRG",69,0)
 . Q:'$D(^XMB(3.8,XMIEN,XMNODE,0))
"RTN","XMXADDRG",70,0)
 . S XMCNT=XMCNT+$P($G(^XMB(3.8,XMIEN,XMNODE,0)),U,4)
"RTN","XMXADDRG",71,0)
 Q XMCNT'<XMBIGGRP
"RTN","XMXADDRG",72,0)
LATERIT(XMFULL,XMLATER) ;
"RTN","XMXADDRG",73,0)
 N DIR,X,Y,DIRUT
"RTN","XMXADDRG",74,0)
 W !!,*7,"This group seems to be fairly big."
"RTN","XMXADDRG",75,0)
 W !,"If you don't need to 'minus' anyone from it,"
"RTN","XMXADDRG",76,0)
 W !,"then you can save some time by queuing this group for 'Later' delivery.",!
"RTN","XMXADDRG",77,0)
 S DIR(0)="Y"
"RTN","XMXADDRG",78,0)
 S DIR("A")="Would you like to queue this group for later delivery"
"RTN","XMXADDRG",79,0)
 S DIR("B")="NO"
"RTN","XMXADDRG",80,0)
 S DIR("?",1)="Answer NO if"
"RTN","XMXADDRG",81,0)
 S DIR("?",2)=" - You need to delete any group members from the message."
"RTN","XMXADDRG",82,0)
 S DIR("?",3)=""
"RTN","XMXADDRG",83,0)
 S DIR("?",4)="Answer YES if"
"RTN","XMXADDRG",84,0)
 S DIR("?",5)=" - You don't need to delete any group members from the message."
"RTN","XMXADDRG",85,0)
 S DIR("?")=" - and you'd like to save a bit of time."
"RTN","XMXADDRG",86,0)
 D ^DIR I $D(DIRUT) D  Q
"RTN","XMXADDRG",87,0)
 . S XMERROR="Up-arrow out of queue group"
"RTN","XMXADDRG",88,0)
 . W !,XMFULL," removed from recipient list."
"RTN","XMXADDRG",89,0)
 Q:'Y
"RTN","XMXADDRG",90,0)
 S XMLATER="?"
"RTN","XMXADDRG",91,0)
 Q
"RTN","XMXADDRG",92,0)
EXPGROUP(XMDUZ,XMG,XMGREC,XMSTRIKE,XMPREFIX,XMLATER,XMGCIRCL) ;
"RTN","XMXADDRG",93,0)
 ;Q:'$$AUTHGRP(XMDUZ,XMG,XMGREC)
"RTN","XMXADDRG",94,0)
 I $D(XMGCIRCL(XMG)) D  Q
"RTN","XMXADDRG",95,0)
 . ; Circular (infinite loop) reference!  Don't go there!
"RTN","XMXADDRG",96,0)
 . S ^TMP("XM",$J,"GRPERR",XMG,"C",$P(XMGREC,U,1))="" Q
"RTN","XMXADDRG",97,0)
 . I $G(XMIASAVE) D
"RTN","XMXADDRG",98,0)
 . . W !,"Mail group contains circular reference to G.",$P(XMGREC,U,1)
"RTN","XMXADDRG",99,0)
 . . W !,"Circular reference ignored."
"RTN","XMXADDRG",100,0)
 . . W !,"This circular reference should be investigated and eliminated."
"RTN","XMXADDRG",101,0)
 S XMGCIRCL(XMG)=""
"RTN","XMXADDRG",102,0)
 S $P(^XMB(3.8,XMG,0),U,4,5)=$P(XMGREC,U,4)+1_U_DT ; # references to group^date last ref'd
"RTN","XMXADDRG",103,0)
 I $G(XMIA) D
"RTN","XMXADDRG",104,0)
 . W !
"RTN","XMXADDRG",105,0)
 . D DISPCNT(XMG,1,"Local")
"RTN","XMXADDRG",106,0)
 . D DISPCNT(XMG,5,"Member Group(s)")
"RTN","XMXADDRG",107,0)
 . D DISPCNT(XMG,6,"Remote")
"RTN","XMXADDRG",108,0)
 . D DISPCNT(XMG,7,"Distribution List(s)")
"RTN","XMXADDRG",109,0)
 . D DISPCNT(XMG,8,"Fax Recipient(s)")
"RTN","XMXADDRG",110,0)
 . D DISPCNT(XMG,9,"Fax Group(s)")
"RTN","XMXADDRG",111,0)
 . W ":",!
"RTN","XMXADDRG",112,0)
 D INDIV(XMDUZ,XMG,XMSTRIKE,XMPREFIX,XMLATER) I XMLATER,'$G(XMIA) K XMGCIRCL(XMG) Q
"RTN","XMXADDRG",113,0)
 D GROUP(XMDUZ,XMG,XMSTRIKE,XMPREFIX,XMLATER,.XMGCIRCL) I XMLATER,'$G(XMIA) K XMGCIRCL(XMG) Q
"RTN","XMXADDRG",114,0)
 D REMOTE(XMDUZ,XMG,XMSTRIKE,XMPREFIX,XMLATER) I XMLATER,'$G(XMIA) K XMGCIRCL(XMG) Q
"RTN","XMXADDRG",115,0)
 D DISTR^XMXADDR2(XMDUZ,XMG,XMSTRIKE,XMPREFIX,XMLATER) I XMLATER,'$G(XMIA) K XMGCIRCL(XMG) Q
"RTN","XMXADDRG",116,0)
 I $P(^XMB(1,1,0),U,19) D FAXGROUP^XMXADDR2(XMDUZ,XMG,XMSTRIKE,XMPREFIX,XMLATER) I XMLATER,'$G(XMIA) K XMGCIRCL(XMG) Q
"RTN","XMXADDRG",117,0)
 I $P(^XMB(1,1,0),U,19) D FAXINDIV^XMXADDR2(XMDUZ,XMG,XMSTRIKE,XMPREFIX,XMLATER) I XMLATER,'$G(XMIA) K XMGCIRCL(XMG) Q
"RTN","XMXADDRG",118,0)
 K XMGCIRCL(XMG)
"RTN","XMXADDRG",119,0)
 Q
"RTN","XMXADDRG",120,0)
DISPCNT(XMIEN,XMNODE,XMDESCR) ;
"RTN","XMXADDRG",121,0)
 N XMCNT
"RTN","XMXADDRG",122,0)
 S XMCNT=$P($G(^XMB(3.8,XMIEN,XMNODE,0)),U,4) Q:'XMCNT
"RTN","XMXADDRG",123,0)
 I $X+3+$L(XMCNT)+$L(XMDESCR)>IOM W ",",!
"RTN","XMXADDRG",124,0)
 E  W:$X>4 ", "
"RTN","XMXADDRG",125,0)
 W XMCNT," ",XMDESCR
"RTN","XMXADDRG",126,0)
 Q
"RTN","XMXADDRG",127,0)
AUTHGRP(XMDUZ,XMG,XMGREC) ;
"RTN","XMXADDRG",128,0)
 ; Screen:  Group is public OR user is owner
"RTN","XMXADDRG",129,0)
 ;          OR group is unrestricted and user is member
"RTN","XMXADDRG",130,0)
 N XMOWNER
"RTN","XMXADDRG",131,0)
 I $P(XMGREC,U,2)="PU" Q 1  ; Group is public
"RTN","XMXADDRG",132,0)
 S XMOWNER=$P(^XMB(3.8,XMG,3),U,1) S:XMOWNER="" XMOWNER=.5
"RTN","XMXADDRG",133,0)
 I XMDUZ=XMOWNER Q 1  ; User is owner of group
"RTN","XMXADDRG",134,0)
 I +$P(XMGREC,U,6)=0,$D(^XMB(3.8,XMG,1,"B",XMDUZ)) Q 1  ; Group is unrestricted and user is a member
"RTN","XMXADDRG",135,0)
 S XMERROR="You may not access group '"_$P(XMGREC,U,1)_"'"
"RTN","XMXADDRG",136,0)
 W:$G(XMIA) !,XMERROR
"RTN","XMXADDRG",137,0)
 Q 0
"RTN","XMXADDRG",138,0)
INDIV(XMDUZ,XMG,XMSTRIKE,XMPREFIX,XMLATER) ;
"RTN","XMXADDRG",139,0)
 ; XMGM     Group member
"RTN","XMXADDRG",140,0)
 N XMI,XMGM,XMCNT,XMREC,XMTYPE
"RTN","XMXADDRG",141,0)
 S XMI=0,XMCNT=0
"RTN","XMXADDRG",142,0)
 F  S XMI=$O(^XMB(3.8,XMG,1,XMI)) Q:'XMI  S XMREC=^(XMI,0) D  I XMLATER,'$G(XMIA) Q
"RTN","XMXADDRG",143,0)
 . S XMGM=$P(XMREC,U,1),XMTYPE=$P(XMREC,U,2)
"RTN","XMXADDRG",144,0)
 . ; If SHARED,MAIL or no mailbox, then delete from group.
"RTN","XMXADDRG",145,0)
 . I XMGM=.6!'$D(^XMB(3.7,XMGM))!'$D(^VA(200,XMGM,0)) D DELETE2^XMXADDR2(XMG,1,XMI) Q
"RTN","XMXADDRG",146,0)
 . N XMFULL,XMERROR,XMFWDADD
"RTN","XMXADDRG",147,0)
 . D PERSON^XMXADDR1(XMDUZ,XMGM,"","","","",.XMFULL)
"RTN","XMXADDRG",148,0)
 . I $D(XMERROR) D  Q
"RTN","XMXADDRG",149,0)
 . . ; Commenting out because I'm not sure it should be reported.
"RTN","XMXADDRG",150,0)
 . . ;S XMFULL=$P($G(^VA(200,XMGM,0)),U,1)
"RTN","XMXADDRG",151,0)
 . . ;I XMFULL="" S XMFULL="USER #"_XMGM
"RTN","XMXADDRG",152,0)
 . . ;S ^TMP("XM",$J,"GRPERR",XMG,"L",XMFULL)=XMERROR
"RTN","XMXADDRG",153,0)
 . I 'XMLATER D INDIV^XMXADDR(XMDUZ,XMGM,XMSTRIKE,$S(XMPREFIX'="":XMPREFIX,1:XMTYPE),XMLATER)
"RTN","XMXADDRG",154,0)
 . Q:'$G(XMIA)
"RTN","XMXADDRG",155,0)
 . I XMCNT,XMCNT#16=0 D  Q:'$G(XMIA)
"RTN","XMXADDRG",156,0)
 . . N DIR,Y
"RTN","XMXADDRG",157,0)
 . . S DIR("A")="Do you want to see more members"
"RTN","XMXADDRG",158,0)
 . . S DIR(0)="Y",DIR("B")="No"
"RTN","XMXADDRG",159,0)
 . . D ^DIR
"RTN","XMXADDRG",160,0)
 . . S XMIA=+Y  ; The '+' takes care of $D(DIRUT)
"RTN","XMXADDRG",161,0)
 . S XMCNT=XMCNT+1
"RTN","XMXADDRG",162,0)
 . W:XMCNT#4-1=0 !
"RTN","XMXADDRG",163,0)
 . W ?XMCNT-1#4*20,$E($S(XMPREFIX'="":"",XMTYPE="":"",1:XMTYPE_":")_XMFULL,1,19)
"RTN","XMXADDRG",164,0)
 Q
"RTN","XMXADDRG",165,0)
GROUP(XMDUZ,XMG,XMSTRIKE,XMPREFIX,XMLATER,XMGCIRCL) ;
"RTN","XMXADDRG",166,0)
 N XMIEN,XMI,XMREC,XMTYPE
"RTN","XMXADDRG",167,0)
 S XMI=0
"RTN","XMXADDRG",168,0)
 F  S XMI=$O(^XMB(3.8,XMG,5,XMI)) Q:'XMI  S XMREC=^(XMI,0) D  I XMLATER,'$G(XMIA) Q
"RTN","XMXADDRG",169,0)
 . S XMIEN=$P(XMREC,U,1),XMTYPE=$P(XMREC,U,2)
"RTN","XMXADDRG",170,0)
 . I '$D(^XMB(3.8,XMIEN,0)) D DELETE2^XMXADDR2(XMG,5,XMI) Q
"RTN","XMXADDRG",171,0)
 . S XMREC=^XMB(3.8,XMIEN,0)
"RTN","XMXADDRG",172,0)
 . W:$G(XMIA) !,$S(XMPREFIX'="":"",XMTYPE="":"",1:XMTYPE_":"),"G.",$P(XMREC,U,1),":"
"RTN","XMXADDRG",173,0)
 . D EXPGROUP(XMDUZ,XMIEN,XMREC,XMSTRIKE,$S(XMPREFIX'="":XMPREFIX,1:XMTYPE),XMLATER,.XMGCIRCL)
"RTN","XMXADDRG",174,0)
 . W:$G(XMIA) !,"Finished with group ",$P(XMREC,U,1)
"RTN","XMXADDRG",175,0)
 Q
"RTN","XMXADDRG",176,0)
REMOTE(XMDUZ,XMG,XMSTRIKE,XMPREFIX,XMLATER) ;
"RTN","XMXADDRG",177,0)
 N XMGM,XMI
"RTN","XMXADDRG",178,0)
 S XMI=0
"RTN","XMXADDRG",179,0)
 F  S XMI=$O(^XMB(3.8,XMG,6,XMI)) Q:XMI'>0  D  I XMLATER,'$G(XMIA) Q
"RTN","XMXADDRG",180,0)
 . S XMGM=$P(^XMB(3.8,XMG,6,XMI,0),U)
"RTN","XMXADDRG",181,0)
 . Q:XMGM=""  ; Really should delete it from the remotes.
"RTN","XMXADDRG",182,0)
 . W:$G(XMIA) !,XMGM
"RTN","XMXADDRG",183,0)
 . Q:XMLATER
"RTN","XMXADDRG",184,0)
 . D DOREMOTE(XMDUZ,XMGM,XMSTRIKE,XMPREFIX,XMLATER)
"RTN","XMXADDRG",185,0)
 Q
"RTN","XMXADDRG",186,0)
DOREMOTE(XMDUZ,XMGM,XMSTRIKE,XMPREFIX,XMLATER) ;
"RTN","XMXADDRG",187,0)
 N XMERROR
"RTN","XMXADDRG",188,0)
 I XMGM[":" D  Q:$D(XMERROR)
"RTN","XMXADDRG",189,0)
 . I XMPREFIX="" D
"RTN","XMXADDRG",190,0)
 . . D PREFIX^XMXADDR1(.XMGM,.XMPREFIX)
"RTN","XMXADDRG",191,0)
 . E  D
"RTN","XMXADDRG",192,0)
 . . D PREFIX^XMXADDR1(.XMGM)
"RTN","XMXADDRG",193,0)
 . I $D(XMERROR) S ^TMP("XM",$J,"GRPERR",XMG,"R",XMGM)=XMERROR
"RTN","XMXADDRG",194,0)
 D REMOTE^XMXADDR1(XMDUZ,XMGM,XMSTRIKE,XMPREFIX,XMLATER)
"RTN","XMXADDRG",195,0)
 Q:'$D(XMERROR)
"RTN","XMXADDRG",196,0)
 Q:XMERROR="Sender not authorized to group."
"RTN","XMXADDRG",197,0)
 S ^TMP("XM",$J,"GRPERR",XMG,"R",XMGM)=XMERROR
"RTN","XMXADDRG",198,0)
 Q
"RTN","XMXANSER")
0^45^B7919752
"RTN","XMXANSER",1,0)
XMXANSER ;ISC-SF/GMB-Answer a msg ;06/14/99  09:27
"RTN","XMXANSER",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXANSER",3,0)
 ; Replaces ^XMA11A (ISC-WASH/CAP/THM)
"RTN","XMXANSER",4,0)
 ; XMDUZ             DUZ of who the msg is from
"RTN","XMXANSER",5,0)
 ; XMSUBJ            Subject of the msg (defaults to 'Re:' original subject)
"RTN","XMXANSER",6,0)
 ; XMBODY            Closed root of Body of the msg
"RTN","XMXANSER",7,0)
 ;                   Must be closed root, passed by value.  See WP_ROOT
"RTN","XMXANSER",8,0)
 ;                   definition for WP^DIE(), FM word processing filer.
"RTN","XMXANSER",9,0)
 ; XMTO              Additional addressees, besides msg originator
"RTN","XMXANSER",10,0)
 ; XMINSTR("FROM")   String saying from whom (default is user)
"RTN","XMXANSER",11,0)
 ; XMINSTR("SELF BSKT") Basket to deliver to if sender is recipient
"RTN","XMXANSER",12,0)
 ; XMINSTR("SHARE BSKT") Basket to deliver to if recipient is "SHARED,MAIL"
"RTN","XMXANSER",13,0)
 ; XMINSTR("SHARE DATE") Delete date if recipient is "SHARED,MAIL"
"RTN","XMXANSER",14,0)
 ; XMINSTR("RCPT BSKT") Basket name (only) to deliver to for other recipients
"RTN","XMXANSER",15,0)
 ; XMINSTR("VAPOR")  Date on which to vaporize (delete) this message
"RTN","XMXANSER",16,0)
 ;                   from recipient baskets
"RTN","XMXANSER",17,0)
 ; XMINSTR("LATER")  Date on which to send this msg, if not now
"RTN","XMXANSER",18,0)
 ; XMINSTR("FLAGS")  Any or all of the following:
"RTN","XMXANSER",19,0)
 ;                   P Priority
"RTN","XMXANSER",20,0)
 ;                   I Information only (may not be replied to)
"RTN","XMXANSER",21,0)
 ;                   X Closed msg (may not be forwarded)
"RTN","XMXANSER",22,0)
 ;                   C Confidential (surrogates may not read)
"RTN","XMXANSER",23,0)
 ;                   S Send to sender (make sender a recipient)
"RTN","XMXANSER",24,0)
 ;                   R Confirm receipt
"RTN","XMXANSER",25,0)
 ; XMINSTR("SCR KEY")   Scramble key (implies that msg should be scrambled)
"RTN","XMXANSER",26,0)
 ; XMINSTR("SCR HINT")  Hint (to guess the scramble key)
"RTN","XMXANSER",27,0)
 ; XMINSTR("KEYS")   List of keys needed by recipient to read msg (NOT IMPLEMENTED)
"RTN","XMXANSER",28,0)
 ; XMINSTR("TYPE")   Msg type is one of the following:
"RTN","XMXANSER",29,0)
 ;                   D Document
"RTN","XMXANSER",30,0)
 ;                   S Spooled Document
"RTN","XMXANSER",31,0)
 ;                   X DIFROM
"RTN","XMXANSER",32,0)
 ;                   O ODIF
"RTN","XMXANSER",33,0)
 ;                   B BLOB
"RTN","XMXANSER",34,0)
 ;                   K KIDS
"RTN","XMXANSER",35,0)
 ;
"RTN","XMXANSER",36,0)
 ; Output:
"RTN","XMXANSER",37,0)
 ; XMZR              The number of the message containing the answer.
"RTN","XMXANSER",38,0)
ANSRMSG(XMDUZ,XMK,XMKZ,XMSUBJ,XMBODY,XMTO,XMINSTR,XMZR) ;
"RTN","XMXANSER",39,0)
 N XMZ,XMZREC,XMZSENDR
"RTN","XMXANSER",40,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXANSER",41,0)
 D CHKMSG^XMXSEC1(XMDUZ,.XMK,.XMKZ,.XMZ,.XMZREC) Q:$D(XMERR)
"RTN","XMXANSER",42,0)
 Q:'$$ANSWER^XMXSEC(XMDUZ,XMZ,XMZREC)
"RTN","XMXANSER",43,0)
 S:$G(XMSUBJ)="" XMSUBJ="Re: "_$P(XMZREC,U,1)
"RTN","XMXANSER",44,0)
 D CRE8XMZ^XMXSEND(XMSUBJ,.XMZR) Q:$D(XMERR)
"RTN","XMXANSER",45,0)
 S XMZSENDR=$P(XMZREC,U,2)
"RTN","XMXANSER",46,0)
 S:XMZSENDR["@" XMZSENDR=$$REPLYTO1^XMXREPLY(XMZ)
"RTN","XMXANSER",47,0)
 D COMPOSE(XMZ,$P(XMZREC,U,1),XMZSENDR,XMZR,XMBODY)
"RTN","XMXANSER",48,0)
 S XMTO(XMZSENDR)=""
"RTN","XMXANSER",49,0)
 D ADDRNSND^XMXSEND(XMDUZ,XMZR,.XMTO,.XMINSTR)
"RTN","XMXANSER",50,0)
 Q
"RTN","XMXANSER",51,0)
COMPOSE(XMZ,XMZSUBJ,XMZSENDR,XMZR,XMBODY) ;
"RTN","XMXANSER",52,0)
 D COPY(XMZ,XMZSUBJ,XMZSENDR,XMZR)
"RTN","XMXANSER",53,0)
 ; File XMBODY, with the "append" option
"RTN","XMXANSER",54,0)
 D MOVEBODY^XMXSEND(XMZR,XMBODY,"A") ; Put the msg body in place
"RTN","XMXANSER",55,0)
 D NETSIG(XMZR)
"RTN","XMXANSER",56,0)
 Q
"RTN","XMXANSER",57,0)
COPY(XMZO,XMZOSUBJ,XMZOFROM,XMZ) ; Copy the original msg, putting ">" in front of each line.
"RTN","XMXANSER",58,0)
 N I,J,XMS,XMF
"RTN","XMXANSER",59,0)
 S XMS=">Original Msg: '"_XMZOSUBJ_"'"
"RTN","XMXANSER",60,0)
 S XMF="From: "_$$NAME^XMXUTIL(XMZOFROM)
"RTN","XMXANSER",61,0)
 I $L(XMS)+$L(XMF)<80 D
"RTN","XMXANSER",62,0)
 . S ^XMB(3.9,XMZ,2,1,0)=XMS_" "_XMF
"RTN","XMXANSER",63,0)
 . S J=1
"RTN","XMXANSER",64,0)
 E  D
"RTN","XMXANSER",65,0)
 . S ^XMB(3.9,XMZ,2,1,0)=XMS
"RTN","XMXANSER",66,0)
 . S ^XMB(3.9,XMZ,2,2,0)=">"_XMF
"RTN","XMXANSER",67,0)
 . S J=2
"RTN","XMXANSER",68,0)
 S J=J+1,^XMB(3.9,XMZ,2,J,0)=">"
"RTN","XMXANSER",69,0)
 S I=.999999
"RTN","XMXANSER",70,0)
 F  S I=$O(^XMB(3.9,XMZO,2,I)) Q:I=""  S J=J+1,^XMB(3.9,XMZ,2,J,0)=$E(">"_^(I,0),1,254)
"RTN","XMXANSER",71,0)
 S J=J+1,^XMB(3.9,XMZ,2,J,0)=""
"RTN","XMXANSER",72,0)
 S J=J+1,^XMB(3.9,XMZ,2,J,0)=""
"RTN","XMXANSER",73,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92A^"_J_U_J_U_DT
"RTN","XMXANSER",74,0)
 Q
"RTN","XMXANSER",75,0)
NETSIG(XMZ) ;
"RTN","XMXANSER",76,0)
 N I,XMNSIG
"RTN","XMXANSER",77,0)
 S XMNSIG(.1)=""
"RTN","XMXANSER",78,0)
 S XMNSIG(.2)=""
"RTN","XMXANSER",79,0)
 S XMNSIG(.3)="*******************************************************************************"
"RTN","XMXANSER",80,0)
 S XMNSIG=$G(^XMB(3.7,XMDUZ,"NS1"))
"RTN","XMXANSER",81,0)
 F I=1:1:3 S:$P(XMNSIG,U,I)'="" XMNSIG(I)=$P(XMNSIG,U,I)
"RTN","XMXANSER",82,0)
 S XMNSIG(4)=XMNSIG(.3)
"RTN","XMXANSER",83,0)
 D MOVEBODY^XMXSEND(XMZ,"XMNSIG","A") ; Add the network signature
"RTN","XMXANSER",84,0)
 Q
"RTN","XMXAPI")
0^46^B33828547
"RTN","XMXAPI",1,0)
XMXAPI ;ISC-SF/GMB- APIs ;06/03/99  15:50
"RTN","XMXAPI",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXAPI",3,0)
 ; All entry points covered by DBIA 2729.
"RTN","XMXAPI",4,0)
 ; Variables input:
"RTN","XMXAPI",5,0)
 ; XMATTACH  Imaging system BLOB attachment array
"RTN","XMXAPI",6,0)
 ; XMBODY    Message text (MUST NOT BE "XMBODY")
"RTN","XMXAPI",7,0)
 ;              (must be closed root, passed by value.  See WP_ROOT
"RTN","XMXAPI",8,0)
 ;               definition for WP^DIE(), FM word processing filer)
"RTN","XMXAPI",9,0)
 ; XMDUZ     User's DUZ, or enough of user's name for a positive ID
"RTN","XMXAPI",10,0)
 ;              eg: 1301 or "lastname,firs"
"RTN","XMXAPI",11,0)
 ; XMK       Basket number, or enough of a name for a positive ID
"RTN","XMXAPI",12,0)
 ;              eg: 1 or "IN"
"RTN","XMXAPI",13,0)
 ; XMKZ      Message number in basket XMK
"RTN","XMXAPI",14,0)
 ;           OR
"RTN","XMXAPI",15,0)
 ;           if $G(XMK)="", Message number in ^XMB(3.9
"RTN","XMXAPI",16,0)
 ; XMKZA     Message number list or list array in basket XMK
"RTN","XMXAPI",17,0)
 ;              eg: "1,3,5-7" or ARRAY("1,3")=""
"RTN","XMXAPI",18,0)
 ;                               ARRAY("5-7")=""
"RTN","XMXAPI",19,0)
 ;              (list may end in comma)
"RTN","XMXAPI",20,0)
 ;              (ARRAY must be passed by reference)
"RTN","XMXAPI",21,0)
 ;           OR
"RTN","XMXAPI",22,0)
 ;           if $G(XMK)="", Message number list or list array in ^XMB(3.9
"RTN","XMXAPI",23,0)
 ;              (same rules, but number ranges are NOT allowed)
"RTN","XMXAPI",24,0)
 ; XMSUBJ    Message subject
"RTN","XMXAPI",25,0)
 ; XMTO      Addressee or addressee array
"RTN","XMXAPI",26,0)
 ;              (array must be passed by reference)
"RTN","XMXAPI",27,0)
 ;           User's DUZ, or enough of user's name for a positive ID
"RTN","XMXAPI",28,0)
 ;              eg: 1301 or "lastname,firs" or ARRAY(1301)=""
"RTN","XMXAPI",29,0)
 ;                                             ARRAY("lastname,firs")=""
"RTN","XMXAPI",30,0)
 ;           G.group name (enough for positive ID)
"RTN","XMXAPI",31,0)
 ;           S.server name (enough for positive ID)
"RTN","XMXAPI",32,0)
 ;           D.device name (enough for positive ID)
"RTN","XMXAPI",33,0)
 ;           prefix above (except devices and servers) by:
"RTN","XMXAPI",34,0)
 ;              I: for 'information only' recipient (may not reply)
"RTN","XMXAPI",35,0)
 ;                 eg: "I:1301" or "I:lastname,firs"
"RTN","XMXAPI",36,0)
 ;              C: for 'copy' recipient (not expected to reply)
"RTN","XMXAPI",37,0)
 ;                 eg: "C:1301" or "C:lastname,firs"
"RTN","XMXAPI",38,0)
 ;              L@datetime: for when (in future) to send to this recipient
"RTN","XMXAPI",39,0)
 ;                 (datetime may be anything accepted by FM)
"RTN","XMXAPI",40,0)
 ;                 eg: "L@25 DEC@0500:1301" or "L@1 JAN:lastname,firs"
"RTN","XMXAPI",41,0)
 ;                     or "L@2981225.05:1301"
"RTN","XMXAPI",42,0)
 ;              (may combine IL@datetime:  or  CL@datetime:)
"RTN","XMXAPI",43,0)
 ;           To delete recipient, prefix by -
"RTN","XMXAPI",44,0)
 ;                 eg: -1301 or "-lastname,firs"
"RTN","XMXAPI",45,0)
 ; XMZ       message number in ^XMB(3.9,
"RTN","XMXAPI",46,0)
 ;
"RTN","XMXAPI",47,0)
 ; Variables output (must be passed by reference):
"RTN","XMXAPI",48,0)
 ; XMFULL    expanded address of last addressee
"RTN","XMXAPI",49,0)
 ; XMMSG     simple message telling how many messages were acted on
"RTN","XMXAPI",50,0)
 ; XMZ       message number created in ^XMB(3.9,
"RTN","XMXAPI",51,0)
 ;
"RTN","XMXAPI",52,0)
 ; Errors
"RTN","XMXAPI",53,0)
 ; XMERR     if there's any errors, then XMERR is set to the number of
"RTN","XMXAPI",54,0)
 ;           errors, otherwise XMERR is undefined.
"RTN","XMXAPI",55,0)
 ;           ^TMP("XMERR",$J,error number,"TEXT",line number)=error text
"RTN","XMXAPI",56,0)
ANSRMSG(XMDUZ,XMK,XMKZ,XMSUBJ,XMBODY,XMTO,XMINSTR,XMZR) ; Answer a msg (Send new msg with copy of original msg inside)
"RTN","XMXAPI",57,0)
 ; In:  User, basket, msg #
"RTN","XMXAPI",58,0)
 ; Out: XMZR (message number of answer)
"RTN","XMXAPI",59,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPI",60,0)
 D ANSRMSG^XMXPARM(.XMDUZ,.XMK,.XMKZ,.XMSUBJ,.XMBODY,.XMTO,.XMINSTR) Q:$D(XMERR)
"RTN","XMXAPI",61,0)
 D ANSRMSG^XMXANSER(XMDUZ,.XMK,XMKZ,.XMSUBJ,XMBODY,.XMTO,.XMINSTR,.XMZR)
"RTN","XMXAPI",62,0)
 Q
"RTN","XMXAPI",63,0)
DELMSG(XMDUZ,XMK,XMKZA,XMMSG) ; Delete msgs from a basket
"RTN","XMXAPI",64,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPI",65,0)
 D ACTMSGS^XMXPARM(.XMDUZ,.XMK,.XMKZA) Q:$D(XMERR)
"RTN","XMXAPI",66,0)
 D DELMSG^XMXMSGS(XMDUZ,.XMK,.XMKZA,.XMMSG)
"RTN","XMXAPI",67,0)
 Q
"RTN","XMXAPI",68,0)
FLTRMSG(XMDUZ,XMK,XMKZA,XMMSG) ; Filters msgs in a basket
"RTN","XMXAPI",69,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPI",70,0)
 D ACTMSGS^XMXPARM(.XMDUZ,.XMK,.XMKZA) Q:$D(XMERR)
"RTN","XMXAPI",71,0)
 D FLTRMSG^XMXMSGS(XMDUZ,.XMK,.XMKZA,.XMMSG)
"RTN","XMXAPI",72,0)
 Q
"RTN","XMXAPI",73,0)
FWDMSG(XMDUZ,XMK,XMKZA,XMTO,XMINSTR,XMMSG) ; Forward msgs
"RTN","XMXAPI",74,0)
 ; XMINSTR("SHARE DATE")
"RTN","XMXAPI",75,0)
 ; XMINSTR("SHARE BSKT")
"RTN","XMXAPI",76,0)
 ; XMINSTR("SELF BSKT")
"RTN","XMXAPI",77,0)
 ; XMINSTR("FWD BY") substitute any string instead of XMDUZ name
"RTN","XMXAPI",78,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPI",79,0)
 D FWDMSG^XMXPARM(.XMDUZ,.XMK,.XMKZA,.XMTO,.XMINSTR) Q:$D(XMERR)
"RTN","XMXAPI",80,0)
 D FWDMSG^XMXMSGS(XMDUZ,.XMK,.XMKZA,.XMTO,.XMINSTR,.XMMSG)
"RTN","XMXAPI",81,0)
 Q
"RTN","XMXAPI",82,0)
LATERMSG(XMDUZ,XMK,XMKZA,XMINSTR,XMMSG) ; Later msgs
"RTN","XMXAPI",83,0)
 ; XMINSTR("LATER")
"RTN","XMXAPI",84,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPI",85,0)
 D LATERMSG^XMXPARM(.XMDUZ,.XMK,.XMKZA,.XMINSTR) Q:$D(XMERR)
"RTN","XMXAPI",86,0)
 D LATERMSG^XMXMSGS(XMDUZ,.XMK,.XMKZA,.XMINSTR,.XMMSG)
"RTN","XMXAPI",87,0)
 Q
"RTN","XMXAPI",88,0)
MOVEMSG(XMDUZ,XMK,XMKZA,XMKTO,XMMSG) ; Move msgs from one basket to another
"RTN","XMXAPI",89,0)
 ; XMKTO   Basket number, or enough of a name for a positive ID.
"RTN","XMXAPI",90,0)
 ;         Identifies basket to move to
"RTN","XMXAPI",91,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPI",92,0)
 D MOVEMSG^XMXPARM(.XMDUZ,.XMK,.XMKZA,.XMKTO) Q:$D(XMERR)
"RTN","XMXAPI",93,0)
 D MOVEMSG^XMXMSGS(XMDUZ,.XMK,.XMKZA,XMKTO,.XMMSG)
"RTN","XMXAPI",94,0)
 Q
"RTN","XMXAPI",95,0)
PRTMSG(XMDUZ,XMK,XMKZA,XMPRTTO,XMINSTR,XMMSG,XMTASK,XMSUBJ,XMTO) ; Print msgs
"RTN","XMXAPI",96,0)
 ; XMINSTR("HDR"), "RESPS", "RECIPS", "WHEN"
"RTN","XMXAPI",97,0)
 ; XMPRTTO Printer name
"RTN","XMXAPI",98,0)
 ; XMSUBJ & XMTO used only if XMPRTTO is a P-MESSAGE device.  Even then, they're optional.
"RTN","XMXAPI",99,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPI",100,0)
 D PRTMSG^XMXPARM(.XMDUZ,.XMK,.XMKZA,.XMPRTTO,.XMINSTR,.XMSUBJ,.XMTO) Q:$D(XMERR)
"RTN","XMXAPI",101,0)
 D PRTMSG^XMXMSGS(XMDUZ,.XMK,.XMKZA,XMPRTTO,.XMINSTR,.XMMSG,.XMTASK,.XMSUBJ,.XMTO)
"RTN","XMXAPI",102,0)
 Q
"RTN","XMXAPI",103,0)
PUTSERV(XMKN,XMZ) ; Put a message in a server basket
"RTN","XMXAPI",104,0)
 ; XMKN   full server name, including "S."
"RTN","XMXAPI",105,0)
 D SERV^XMXPARMB(.XMKN,.XMZ) Q:$D(XMERR)
"RTN","XMXAPI",106,0)
 D PUTSERV^XMXMSGS1(XMKN,XMZ)
"RTN","XMXAPI",107,0)
 Q
"RTN","XMXAPI",108,0)
REPLYMSG(XMDUZ,XMK,XMKZ,XMBODY,XMINSTR,XMZR) ; Reply to msg (Attach reply to original msg)
"RTN","XMXAPI",109,0)
 ; XMINSTR("NET REPLY") 1=send over the network; 0=don't (default)
"RTN","XMXAPI",110,0)
 ; XMINSTR("NET SUBJ")  Network Reply subject (see XMSUBJ)
"RTN","XMXAPI",111,0)
 ; Out: XMZR (message number of answer)
"RTN","XMXAPI",112,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPI",113,0)
 D REPLYMSG^XMXPARM(.XMDUZ,.XMK,.XMKZ,.XMBODY,.XMINSTR) Q:$D(XMERR)
"RTN","XMXAPI",114,0)
 D REPLYMSG^XMXREPLY(XMDUZ,.XMK,XMKZ,XMBODY,.XMINSTR,.XMZR)
"RTN","XMXAPI",115,0)
 Q
"RTN","XMXAPI",116,0)
SENDBULL(XMDUZ,XMBN,XMPARM,XMBODY,XMTO,XMINSTR,XMZ,XMATTACH) ; Send a bulletin (returns XMZ)
"RTN","XMXAPI",117,0)
 ; In:  User, bulletin name, bulletin parameters, add'l text,
"RTN","XMXAPI",118,0)
 ;      add'l recipients, send now or later (when?), opt'l BLOB
"RTN","XMXAPI",119,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPI",120,0)
 D BULLETIN^XMXPARM(.XMDUZ,.XMBN,.XMPARM,.XMBODY,.XMTO,.XMINSTR,.XMATTACH) Q:$D(XMERR)
"RTN","XMXAPI",121,0)
 D SENDBULL^XMXBULL(XMDUZ,XMBN,.XMPARM,XMBODY,.XMTO,.XMINSTR,.XMZ,.XMATTACH)
"RTN","XMXAPI",122,0)
 Q
"RTN","XMXAPI",123,0)
SENDMSG(XMDUZ,XMSUBJ,XMBODY,XMTO,XMINSTR,XMZ,XMATTACH) ; Send a msg
"RTN","XMXAPI",124,0)
 ; In:  User, basket (if you are recipient), all msg parts,
"RTN","XMXAPI",125,0)
 ;      priority?, closed?, (info?,cc?), send now or later (when?),
"RTN","XMXAPI",126,0)
 ;      (KIDS,MIME,text,PackMan), delete date (if to shared,mail)
"RTN","XMXAPI",127,0)
 ; XMINSTR("RCPT BSKT")
"RTN","XMXAPI",128,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPI",129,0)
 D SENDMSG^XMXPARM(.XMDUZ,.XMSUBJ,.XMBODY,.XMTO,.XMINSTR,.XMATTACH) Q:$D(XMERR)
"RTN","XMXAPI",130,0)
 D SENDMSG^XMXSEND(XMDUZ,XMSUBJ,XMBODY,.XMTO,.XMINSTR,.XMZ,.XMATTACH)
"RTN","XMXAPI",131,0)
 Q
"RTN","XMXAPI",132,0)
TASKBULL(XMDUZ,XMBN,XMPARM,XMBODY,XMTO,XMINSTR,XMTASK,XMATTACH) ; Send a bulletin (Task it - does not return XMZ)
"RTN","XMXAPI",133,0)
 ; XMBN     Bulletin name (must be full name)
"RTN","XMXAPI",134,0)
 ; XMPARM   Array of parameters necessary for bulletin
"RTN","XMXAPI",135,0)
 ;             ARRAY(1)="parameter 1"
"RTN","XMXAPI",136,0)
 ;             ARRAY(2)="parameter 2"
"RTN","XMXAPI",137,0)
 ; XMBODY   Additional text to append to the bulletin text
"RTN","XMXAPI",138,0)
 ;              (must be closed root, passed by value.  See WP_ROOT
"RTN","XMXAPI",139,0)
 ;               definition for WP^DIE(), FM word processing filer)
"RTN","XMXAPI",140,0)
 ; XMTO     Additional addressee(s)
"RTN","XMXAPI",141,0)
 ; XMINSTR("SELF BSKT")
"RTN","XMXAPI",142,0)
 ;  ***ETC.***
"RTN","XMXAPI",143,0)
 ; In:  User, bulletin name, bulletin parameters, add'l text,
"RTN","XMXAPI",144,0)
 ;      add'l recipients, send now or later (when?), opt'l BLOB
"RTN","XMXAPI",145,0)
 ; Out: XMTASK (task number)
"RTN","XMXAPI",146,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPI",147,0)
 D BULLETIN^XMXPARM(.XMDUZ,.XMBN,.XMPARM,.XMBODY,.XMTO,.XMINSTR,.XMATTACH) Q:$D(XMERR)
"RTN","XMXAPI",148,0)
 D TASKBULL^XMXBULL(XMDUZ,XMBN,.XMPARM,XMBODY,.XMTO,.XMINSTR,.XMTASK,.XMATTACH)
"RTN","XMXAPI",149,0)
 Q
"RTN","XMXAPI",150,0)
TERMMSG(XMDUZ,XMK,XMKZA,XMMSG) ; Terminate msgs
"RTN","XMXAPI",151,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPI",152,0)
 D ACTMSGS^XMXPARM(.XMDUZ,.XMK,.XMKZA) Q:$D(XMERR)
"RTN","XMXAPI",153,0)
 D TERMMSG^XMXMSGS(XMDUZ,.XMK,.XMKZA,.XMMSG)
"RTN","XMXAPI",154,0)
 Q
"RTN","XMXAPI",155,0)
ZAPSERV(XMKN,XMZ) ; Delete a message from a server basket
"RTN","XMXAPI",156,0)
 ; XMKN   full server name, including "S."
"RTN","XMXAPI",157,0)
 D SERV^XMXPARMB(.XMKN,.XMZ) Q:$D(XMERR)
"RTN","XMXAPI",158,0)
 D ZAPSERV^XMXMSGS1(XMKN,XMZ)
"RTN","XMXAPI",159,0)
 Q
"RTN","XMXAPI",160,0)
 ; ***** other actions
"RTN","XMXAPI",161,0)
ADDRNSND(XMDUZ,XMZ,XMTO,XMINSTR) ; Build a message part 2 (address and send)
"RTN","XMXAPI",162,0)
 ; XMZ (in)
"RTN","XMXAPI",163,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPI",164,0)
 D ADDRNSND^XMXPARM(.XMDUZ,.XMZ,.XMTO,.XMINSTR) Q:$D(XMERR)
"RTN","XMXAPI",165,0)
 D ADDRNSND^XMXSEND(XMDUZ,XMZ,.XMTO,.XMINSTR)
"RTN","XMXAPI",166,0)
 Q
"RTN","XMXAPI",167,0)
CRE8XMZ(XMSUBJ,XMZ) ; Build a message part 1 (create)
"RTN","XMXAPI",168,0)
 ; In:  subject
"RTN","XMXAPI",169,0)
 ; Out: XMZ
"RTN","XMXAPI",170,0)
 D VSUBJ^XMXPARM(.XMSUBJ) Q:$D(XMERR)
"RTN","XMXAPI",171,0)
 D CRE8XMZ^XMXSEND(XMSUBJ,.XMZ)
"RTN","XMXAPI",172,0)
 Q
"RTN","XMXAPI",173,0)
TOWHOM(XMDUZ,XMZ,XMTYPE,XMTO,XMINSTR,XMFULL) ; Check ONE msg addressee
"RTN","XMXAPI",174,0)
 ; XMFULL   Expanded address of the addressee
"RTN","XMXAPI",175,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPI",176,0)
 D TOWHOM^XMXPARM(.XMDUZ,.XMZ,.XMTYPE,XMTO,.XMINSTR) Q:$D(XMERR)
"RTN","XMXAPI",177,0)
 D TOWHOM^XMXTO(XMDUZ,.XMZ,XMTYPE,XMTO,.XMINSTR,.XMFULL)
"RTN","XMXAPI",178,0)
 Q
"RTN","XMXAPI",179,0)
VSUBJ(XMSUBJ) ; Validate a subject
"RTN","XMXAPI",180,0)
 D VSUBJ^XMXPARM(.XMSUBJ)
"RTN","XMXAPI",181,0)
 Q
"RTN","XMXAPIB")
0^47^B10245722
"RTN","XMXAPIB",1,0)
XMXAPIB ;ISC-SF/GMB- Mailbox and Mail Basket APIs ;05/26/99  09:31
"RTN","XMXAPIB",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXAPIB",3,0)
 ; All entry points covered by DBIA 2723.
"RTN","XMXAPIB",4,0)
 ; XMDUZ   User's DUZ, or enough of user's name for a positive ID
"RTN","XMXAPIB",5,0)
 ; XMK     Basket number, or enough of a name for a positive ID
"RTN","XMXAPIB",6,0)
 ; ***** Mailbox actions
"RTN","XMXAPIB",7,0)
CRE8MBOX(XMDUZ,XMDATE) ; Create a mailbox
"RTN","XMXAPIB",8,0)
 ; In:  User
"RTN","XMXAPIB",9,0)
 ; User must be POSTMASTER or POSTMASTER surrogate and possess XMMGR key.
"RTN","XMXAPIB",10,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPIB",11,0)
 D CRE8MBOX^XMXPARMB(.XMDUZ,.XMDATE) Q:$D(XMERR)
"RTN","XMXAPIB",12,0)
 D CRE8MBOX^XMXMBOX(XMDUZ,.XMDATE)
"RTN","XMXAPIB",13,0)
 Q
"RTN","XMXAPIB",14,0)
FLTRMBOX(XMDUZ,XMMSG) ; Filter all messages in a user's mailbox
"RTN","XMXAPIB",15,0)
 ; In:  User
"RTN","XMXAPIB",16,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPIB",17,0)
 D MBOX^XMXPARMB(.XMDUZ) Q:$D(XMERR)
"RTN","XMXAPIB",18,0)
 D FLTRMBOX^XMXMBOX(XMDUZ,.XMMSG)
"RTN","XMXAPIB",19,0)
 Q
"RTN","XMXAPIB",20,0)
QMBOX(XMDUZ,XMMSG) ; Query a mailbox
"RTN","XMXAPIB",21,0)
 ; # msgs^# new msgs^date/time last msg received^priority mail (0/1)
"RTN","XMXAPIB",22,0)
 ; In:  User, Query type
"RTN","XMXAPIB",23,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPIB",24,0)
 D MBOX^XMXPARMB(.XMDUZ) Q:$D(XMERR)
"RTN","XMXAPIB",25,0)
 D QMBOX^XMXMBOX(XMDUZ,.XMMSG)
"RTN","XMXAPIB",26,0)
 Q
"RTN","XMXAPIB",27,0)
TERMMBOX(XMDUZ) ; Remove all traces of a user in MM globals
"RTN","XMXAPIB",28,0)
 ; In:  User
"RTN","XMXAPIB",29,0)
 ; User must be POSTMASTER or POSTMASTER surrogate and possess XMMGR key.
"RTN","XMXAPIB",30,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPIB",31,0)
 D TERMMBOX^XMXPARMB(.XMDUZ) Q:$D(XMERR)
"RTN","XMXAPIB",32,0)
 D TERMMBOX^XMXMBOX(XMDUZ)
"RTN","XMXAPIB",33,0)
 Q
"RTN","XMXAPIB",34,0)
 ; ***** Basket actions
"RTN","XMXAPIB",35,0)
CRE8BSKT(XMDUZ,XMKN,XMK) ; Create a basket
"RTN","XMXAPIB",36,0)
 ; In:  User, basket name
"RTN","XMXAPIB",37,0)
 ; Out: Basket number
"RTN","XMXAPIB",38,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPIB",39,0)
 D CRE8BSKT^XMXPARMB(.XMDUZ,.XMKN) Q:$D(XMERR)
"RTN","XMXAPIB",40,0)
 D CRE8BSKT^XMXBSKT(XMDUZ,XMKN,.XMK)
"RTN","XMXAPIB",41,0)
 Q
"RTN","XMXAPIB",42,0)
DELBSKT(XMDUZ,XMK,XMFLAGS) ; Delete basket
"RTN","XMXAPIB",43,0)
 ; In:  User, basket
"RTN","XMXAPIB",44,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPIB",45,0)
 D DELBSKT^XMXPARMB(.XMDUZ,.XMK,.XMFLAGS) Q:$D(XMERR)
"RTN","XMXAPIB",46,0)
 D DELBSKT^XMXBSKT(XMDUZ,XMK,.XMFLAGS)
"RTN","XMXAPIB",47,0)
 Q
"RTN","XMXAPIB",48,0)
FLTRBSKT(XMDUZ,XMK,XMMSG) ; Filter all messages in a user's basket
"RTN","XMXAPIB",49,0)
 ; In:  User
"RTN","XMXAPIB",50,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPIB",51,0)
 D BSKT^XMXPARMB(.XMDUZ,.XMK) Q:$D(XMERR)
"RTN","XMXAPIB",52,0)
 D FLTRBSKT^XMXBSKT(XMDUZ,XMK,.XMMSG)
"RTN","XMXAPIB",53,0)
 Q
"RTN","XMXAPIB",54,0)
LISTBSKT(XMDUZ,XMFLAGS,XMAMT,XMSTART,XMPART,XMTROOT) ;
"RTN","XMXAPIB",55,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPIB",56,0)
 D LISTBSKT^XMXPARMB(XMDUZ,.XMFLAGS,.XMAMT,.XMSTART,.XMPART,.XMTROOT) Q:$D(XMERR)
"RTN","XMXAPIB",57,0)
 D LISTBSKT^XMXBSKT(XMDUZ,.XMFLAGS,.XMAMT,.XMSTART,.XMPART,.XMTROOT)
"RTN","XMXAPIB",58,0)
 Q
"RTN","XMXAPIB",59,0)
LISTMSGS(XMDUZ,XMK,XMFLDS,XMFLAGS,XMAMT,XMSTART,XMCRIT,XMTROOT) ; List messages
"RTN","XMXAPIB",60,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPIB",61,0)
 D LISTMSGS^XMXPARMB(.XMDUZ,.XMK,.XMFLDS,.XMFLAGS,.XMAMT,.XMSTART,.XMCRIT,.XMTROOT) Q:$D(XMERR)
"RTN","XMXAPIB",62,0)
 D LISTMSGS^XMXLIST(XMDUZ,.XMK,.XMFLDS,.XMFLAGS,.XMAMT,.XMSTART,.XMCRIT,.XMTROOT)
"RTN","XMXAPIB",63,0)
 Q
"RTN","XMXAPIB",64,0)
NAMEBSKT(XMDUZ,XMK,XMKN) ; Change the name of a basket
"RTN","XMXAPIB",65,0)
 ; In:  User, basket, new basket name (@ will delete)
"RTN","XMXAPIB",66,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPIB",67,0)
 D NAMEBSKT^XMXPARMB(.XMDUZ,.XMK,.XMKN) Q:$D(XMERR)
"RTN","XMXAPIB",68,0)
 D NAMEBSKT^XMXBSKT(XMDUZ,XMK,XMKN)
"RTN","XMXAPIB",69,0)
 Q
"RTN","XMXAPIB",70,0)
QBSKT(XMDUZ,XMK,XMMSG) ; Get info on a basket
"RTN","XMXAPIB",71,0)
 ; In:  User, basket
"RTN","XMXAPIB",72,0)
 ; Out: basket ien^basket name^# msgs^# new msgs
"RTN","XMXAPIB",73,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPIB",74,0)
 D BSKT^XMXPARMB(.XMDUZ,.XMK) Q:$D(XMERR)
"RTN","XMXAPIB",75,0)
 D QBSKT^XMXBSKT(XMDUZ,XMK,.XMMSG)
"RTN","XMXAPIB",76,0)
 Q
"RTN","XMXAPIB",77,0)
RSEQBSKT(XMDUZ,XMK,XMMSG) ; Resequence msgs in a basket
"RTN","XMXAPIB",78,0)
 ; In:  User, basket
"RTN","XMXAPIB",79,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPIB",80,0)
 D BSKT^XMXPARMB(.XMDUZ,.XMK) Q:$D(XMERR)
"RTN","XMXAPIB",81,0)
 D RSEQBSKT^XMXBSKT(XMDUZ,XMK,.XMMSG)
"RTN","XMXAPIB",82,0)
 Q
"RTN","XMXAPIU")
0^263^B1235647
"RTN","XMXAPIU",1,0)
XMXAPIU ;ISC-SF/GMB- APIs for users to use interactively ;06/03/99  15:51
"RTN","XMXAPIU",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXAPIU",3,0)
 ; All entry points covered by DBIA 2774.
"RTN","XMXAPIU",4,0)
 ;
"RTN","XMXAPIU",5,0)
 ; The following are meant to be in an option's ROUTINE field.
"RTN","XMXAPIU",6,0)
 ; They expect that DUZ exists, and if the user is acting as a surrogate,
"RTN","XMXAPIU",7,0)
 ; that XMDUZ exists, too.  Otherwise, XMDUZ will be set to DUZ.
"RTN","XMXAPIU",8,0)
 ; If the XMV variables do not exist, INIT^XMVVITAE will be called.
"RTN","XMXAPIU",9,0)
 Q
"RTN","XMXAPIU",10,0)
READ ; Read/Manage messages in your Mailbox
"RTN","XMXAPIU",11,0)
 ; Needs XMDUZ
"RTN","XMXAPIU",12,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPIU",13,0)
 G MANAGE^XMJBM
"RTN","XMXAPIU",14,0)
 Q
"RTN","XMXAPIU",15,0)
READNEW ; Read new messages in your Mailbox
"RTN","XMXAPIU",16,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPIU",17,0)
 G NEW^XMJBN
"RTN","XMXAPIU",18,0)
 Q
"RTN","XMXAPIU",19,0)
SEND ; Send a message
"RTN","XMXAPIU",20,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPIU",21,0)
 G SEND^XMJMS
"RTN","XMXAPIU",22,0)
 Q
"RTN","XMXAPIU",23,0)
 ; The following are meant to be called from within a program.
"RTN","XMXAPIU",24,0)
TOWHOM(XMDUZ,XMZ,XMTYPE,XMINSTR) ; Ask user for msg addressees
"RTN","XMXAPIU",25,0)
 ; XMDUZ     User's DUZ
"RTN","XMXAPIU",26,0)
 ; XMZ       message number in ^XMB(3.9,
"RTN","XMXAPIU",27,0)
 ; XMTYPE
"RTN","XMXAPIU",28,0)
 ; XMINSTR
"RTN","XMXAPIU",29,0)
 ; XMERR     If there's any errors, then XMERR is set to the number of
"RTN","XMXAPIU",30,0)
 ;           errors, otherwise XMERR is undefined.
"RTN","XMXAPIU",31,0)
 ;           ^TMP("XMERR",$J,error number,"TEXT",line number)=error text
"RTN","XMXAPIU",32,0)
 I '$D(XMV) N XMV,XMDISPI,XMDUN,XMNOSEND,XMPRIV
"RTN","XMXAPIU",33,0)
 D ITOWHOM^XMXPARM(.XMDUZ,.XMZ,.XMTYPE,.XMINSTR) Q:$D(XMERR)
"RTN","XMXAPIU",34,0)
 D ITOWHOM^XMXTO(XMDUZ,.XMZ,XMTYPE,.XMINSTR)
"RTN","XMXAPIU",35,0)
 Q
"RTN","XMXBSKT")
0^50^B37483641
"RTN","XMXBSKT",1,0)
XMXBSKT ;ISC-SF/GMB- Basket APIs ;05/20/99  06:08
"RTN","XMXBSKT",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXBSKT",3,0)
CRE8BSKT(XMDUZ,XMKN,XMK) ; Routine creates basket, given name, and
"RTN","XMXBSKT",4,0)
 ; returns basket number.
"RTN","XMXBSKT",5,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXBSKT",6,0)
 I XMDUZ=.6,'$$POSTPRIV^XMXSEC Q
"RTN","XMXBSKT",7,0)
 I XMDUZ'=DUZ,'$$RPRIV^XMXSEC Q
"RTN","XMXBSKT",8,0)
 S XMK=$$FIND1^DIC(3.701,","_XMDUZ_",","X",XMKN)
"RTN","XMXBSKT",9,0)
 I XMK D  Q
"RTN","XMXBSKT",10,0)
 .; (It might be better if used an index which was the upper case of
"RTN","XMXBSKT",11,0)
 .;  the basket name, and if we checked for upper case of XMKN)
"RTN","XMXBSKT",12,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Basket '"_XMKN_"' already exists."
"RTN","XMXBSKT",13,0)
 I XMDUZ=.5,+$P(^XMB(3.7,XMDUZ,2,0),U,4)>998 D  Q
"RTN","XMXBSKT",14,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Postmaster may not have more than 999 baskets.  (>999=Network msg queues)"
"RTN","XMXBSKT",15,0)
 ;D VAL^DIE(3.701,"1,"_XMDUZ_",",.01,"H",XMKN) ; validate the name
"RTN","XMXBSKT",16,0)
 D MAKEBSKT(XMDUZ,.XMK,XMKN)
"RTN","XMXBSKT",17,0)
 Q
"RTN","XMXBSKT",18,0)
MAKEBSKT(XMDUZ,XMK,XMKN) ; Create a basket (For internal MM use only)
"RTN","XMXBSKT",19,0)
 ; If you give it an XMK, it'll put it there,
"RTN","XMXBSKT",20,0)
 ; else, it'll find a vacant XMK.
"RTN","XMXBSKT",21,0)
 N XMFDA,XMIEN
"RTN","XMXBSKT",22,0)
 I 'XMK F XMK=2:1 Q:'$D(^XMB(3.7,XMDUZ,2,XMK))  ; Find 1st vacant bskt #
"RTN","XMXBSKT",23,0)
 S XMFDA(3.701,"+1,"_XMDUZ_",",.01)=XMKN
"RTN","XMXBSKT",24,0)
 S XMIEN(1)=XMK
"RTN","XMXBSKT",25,0)
 D UPDATE^DIE("","XMFDA","XMIEN")
"RTN","XMXBSKT",26,0)
 Q
"RTN","XMXBSKT",27,0)
DELBSKT(XMDUZ,XMK,XMFLAGS) ;
"RTN","XMXBSKT",28,0)
 ; XMK      Basket IEN
"RTN","XMXBSKT",29,0)
 N XMNEW
"RTN","XMXBSKT",30,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXBSKT",31,0)
 I XMDUZ=.6,'$$POSTPRIV^XMXSEC Q
"RTN","XMXBSKT",32,0)
 I XMDUZ'=DUZ,'$$RPRIV^XMXSEC Q
"RTN","XMXBSKT",33,0)
 I XMK'>1 D  Q
"RTN","XMXBSKT",34,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="You may not delete '"_$S(XMK=.5:"WASTE",1:"IN")_"' basket."
"RTN","XMXBSKT",35,0)
 I $G(XMFLAGS)'["D",$$BMSGCT^XMXUTIL(XMDUZ,XMK)>0 D  Q
"RTN","XMXBSKT",36,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="You may not delete '"_$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1)_"' basket because it still has messages in it."
"RTN","XMXBSKT",37,0)
 L +^XMB(3.7,XMDUZ)
"RTN","XMXBSKT",38,0)
 S XMNEW=$$BNMSGCT^XMXUTIL(XMDUZ,XMK)
"RTN","XMXBSKT",39,0)
 S:XMNEW $P(^(0),U,6)=$P(^XMB(3.7,XMDUZ,0),U,6)-XMNEW
"RTN","XMXBSKT",40,0)
 N XMFDA
"RTN","XMXBSKT",41,0)
 S XMFDA(3.701,XMK_","_XMDUZ_",",.01)="@"
"RTN","XMXBSKT",42,0)
 D FILE^DIE("","XMFDA")
"RTN","XMXBSKT",43,0)
 L -^XMB(3.7,XMDUZ)
"RTN","XMXBSKT",44,0)
 Q
"RTN","XMXBSKT",45,0)
LISTBSKT(XMDUZ,XMFLAGS,XMAMT,XMSTART,XMPART,XMTROOT) ;
"RTN","XMXBSKT",46,0)
 N XMORDER,XMI,XMCNT,XMK,XMKREC,XMSCREEN,XMFMFLAG
"RTN","XMXBSKT",47,0)
 I XMDUZ'=DUZ,'$$RPRIV^XMXSEC Q
"RTN","XMXBSKT",48,0)
 I $D(XMTROOT),XMTROOT'="" D
"RTN","XMXBSKT",49,0)
 . K @$$CREF^DILF(XMTROOT)
"RTN","XMXBSKT",50,0)
 . S XMTROOT=$$OREF^DILF(XMTROOT)_"""XMLIST"","
"RTN","XMXBSKT",51,0)
 E  D
"RTN","XMXBSKT",52,0)
 . K ^TMP("XMLIST",$J)
"RTN","XMXBSKT",53,0)
 . S XMTROOT="^TMP(""XMLIST"",$J,"
"RTN","XMXBSKT",54,0)
 I $G(XMFLAGS)["N" S XMSCREEN="I $P(^(0),U,2)" ; Only baskets w/new msgs
"RTN","XMXBSKT",55,0)
 E  S XMSCREEN=""
"RTN","XMXBSKT",56,0)
 S XMFMFLAG="I"
"RTN","XMXBSKT",57,0)
 I $G(XMFLAGS)["B" S XMFMFLAG=XMFMFLAG_"B"
"RTN","XMXBSKT",58,0)
 D LIST^DIC(3.701,","_XMDUZ_",","",XMFMFLAG,.XMAMT,.XMSTART,.XMPART,"",XMSCREEN)
"RTN","XMXBSKT",59,0)
 S @(XMTROOT_"0)")=^TMP("DILIST",$J,0)
"RTN","XMXBSKT",60,0)
 S XMORDER=$S($G(XMFLAGS)["B":-1,1:1)
"RTN","XMXBSKT",61,0)
 S XMCNT=0,XMI=""
"RTN","XMXBSKT",62,0)
 F  S XMI=$O(^TMP("DILIST",$J,2,XMI),XMORDER) Q:'XMI  S XMK=^(XMI) D
"RTN","XMXBSKT",63,0)
 . S XMCNT=XMCNT+1
"RTN","XMXBSKT",64,0)
 . S XMKREC=^XMB(3.7,XMDUZ,2,XMK,0)
"RTN","XMXBSKT",65,0)
 . S @(XMTROOT_XMCNT_")")=XMK_U_$P(XMKREC,U,1)_U_$$BMSGCT^XMXUTIL(XMDUZ,XMK)_U_+$P(XMKREC,U,2) ; basket ien^basket name^# msgs^# new msgs
"RTN","XMXBSKT",66,0)
 . I '$G(XMAMT) S @(XMTROOT_"""BSKT"",$$UP^XLFSTR($P(XMKREC,U,1))_U_XMK,"_XMCNT_")")=""
"RTN","XMXBSKT",67,0)
 K ^TMP("DILIST",$J)
"RTN","XMXBSKT",68,0)
 Q
"RTN","XMXBSKT",69,0)
NAMEBSKT(XMDUZ,XMK,XMKN) ;
"RTN","XMXBSKT",70,0)
 ; XMK      Basket IEN
"RTN","XMXBSKT",71,0)
 ; XMKN     New basket name
"RTN","XMXBSKT",72,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXBSKT",73,0)
 I XMDUZ=.6,'$$POSTPRIV^XMXSEC Q
"RTN","XMXBSKT",74,0)
 I XMDUZ'=DUZ,'$$WPRIV^XMXSEC  Q
"RTN","XMXBSKT",75,0)
 I XMK'>1!XMK>999 D  Q
"RTN","XMXBSKT",76,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="You may not rename '"_$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1)_"' basket."
"RTN","XMXBSKT",77,0)
 N XMFDA
"RTN","XMXBSKT",78,0)
 S XMFDA(3.701,XMK_","_XMDUZ_",",.01)=XMKN
"RTN","XMXBSKT",79,0)
 D FILE^DIE("","XMFDA")
"RTN","XMXBSKT",80,0)
 Q
"RTN","XMXBSKT",81,0)
QBSKT(XMDUZ,XMK,XMMSG) ; Message counts for a mail basket
"RTN","XMXBSKT",82,0)
 N XMKREC
"RTN","XMXBSKT",83,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXBSKT",84,0)
 S XMMSG=""
"RTN","XMXBSKT",85,0)
 I XMDUZ'=DUZ,'$$RPRIV^XMXSEC  Q
"RTN","XMXBSKT",86,0)
 S XMKREC=^XMB(3.7,XMDUZ,2,XMK,0)
"RTN","XMXBSKT",87,0)
 S XMMSG=XMK_U_$P(XMKREC,U,1)_U_$$BMSGCT^XMXUTIL(XMDUZ,XMK)_U_+$P(XMKREC,U,2) ; basket ien^basket name^# msgs^# new msgs
"RTN","XMXBSKT",88,0)
 Q
"RTN","XMXBSKT",89,0)
RSEQBSKT(XMDUZ,XMK,XMMSG) ; Resequence message numbers
"RTN","XMXBSKT",90,0)
 ; XMZ      - Unique message number
"RTN","XMXBSKT",91,0)
 ; XMK      - basket number
"RTN","XMXBSKT",92,0)
 ; XMKZ     - Message number in basket
"RTN","XMXBSKT",93,0)
 ; XMKZCNT  - Number of messages in basket
"RTN","XMXBSKT",94,0)
 N XMKZCNT,XMERROR  ; (XMERROR is set in XMUT4)
"RTN","XMXBSKT",95,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXBSKT",96,0)
 S XMMSG=""
"RTN","XMXBSKT",97,0)
 I XMDUZ=.6,'$$POSTPRIV^XMXSEC Q
"RTN","XMXBSKT",98,0)
 I XMDUZ'=DUZ,'$$RPRIV^XMXSEC  Q
"RTN","XMXBSKT",99,0)
 D BSKT^XMUT4(XMDUZ,XMK)     ; Basket integrity check
"RTN","XMXBSKT",100,0)
 D RSEQ(XMDUZ,XMK,.XMKZCNT)  ; resequence
"RTN","XMXBSKT",101,0)
 S XMMSG="Resequenced from 1 to "_XMKZCNT
"RTN","XMXBSKT",102,0)
 Q
"RTN","XMXBSKT",103,0)
RSEQ(XMDUZ,XMK,XMKZNEW) ; Internal MailMan entry point to resequence a basket
"RTN","XMXBSKT",104,0)
 ; *** IN XMZ SEQUENCE ***
"RTN","XMXBSKT",105,0)
 N XMKZ,XMZ,XMFDA
"RTN","XMXBSKT",106,0)
 S (XMKZ,XMKZNEW,XMZ)=0
"RTN","XMXBSKT",107,0)
 F  S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,XMZ)) Q:XMZ'>0  S XMKZ=$P(^(XMZ,0),U,2) D  Q:$D(XMERR)
"RTN","XMXBSKT",108,0)
 . S XMKZNEW=XMKZNEW+1
"RTN","XMXBSKT",109,0)
 . Q:XMKZ=XMKZNEW
"RTN","XMXBSKT",110,0)
 . S XMFDA(3.702,XMZ_","_XMK_","_XMDUZ_",",2)=XMKZNEW
"RTN","XMXBSKT",111,0)
 . D FILE^DIE("","XMFDA") I $D(DIERR) S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Error resequencing '"_$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1)_"' basket."
"RTN","XMXBSKT",112,0)
 Q:$D(XMERR)
"RTN","XMXBSKT",113,0)
 S:+$P($G(^XMB(3.7,XMDUZ,2,XMK,1,0)),U,4)'=XMKZNEW $P(^(0),U,4)=XMKZNEW
"RTN","XMXBSKT",114,0)
 Q
"RTN","XMXBSKT",115,0)
XRSEQ(XMDUZ,XMK,XMKZNEW) ; Internal MailMan entry point to resequence a basket
"RTN","XMXBSKT",116,0)
 ; *** IN XMKZ SEQUENCE ***
"RTN","XMXBSKT",117,0)
 N XMKZ,XMZ,XMFDA
"RTN","XMXBSKT",118,0)
 S (XMKZ,XMKZNEW)=0
"RTN","XMXBSKT",119,0)
 F  S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ)) Q:XMKZ'>0  D  Q:$D(XMERR)
"RTN","XMXBSKT",120,0)
 . I XMKZ'>XMKZNEW S XMKZNEW=XMKZ-1
"RTN","XMXBSKT",121,0)
 . S XMZ=0
"RTN","XMXBSKT",122,0)
 . F  S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,XMZ)) Q:XMZ'>0  D  Q:$D(XMERR)
"RTN","XMXBSKT",123,0)
 . . S XMKZNEW=XMKZNEW+1
"RTN","XMXBSKT",124,0)
 . . Q:XMKZ=XMKZNEW
"RTN","XMXBSKT",125,0)
 . . S XMFDA(3.702,XMZ_","_XMK_","_XMDUZ_",",2)=XMKZNEW
"RTN","XMXBSKT",126,0)
 . . D FILE^DIE("","XMFDA") I $D(DIERR) S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Error resequencing '"_$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1)_"' basket."
"RTN","XMXBSKT",127,0)
 Q:$D(XMERR)
"RTN","XMXBSKT",128,0)
 S:+$P($G(^XMB(3.7,XMDUZ,2,XMK,1,0)),U,4)'=XMKZNEW $P(^(0),U,4)=XMKZNEW
"RTN","XMXBSKT",129,0)
 Q
"RTN","XMXBSKT",130,0)
FLTRBSKT(XMDUZ,XMK,XMMSG) ; Filter a basket
"RTN","XMXBSKT",131,0)
 ; XMZ      - Unique message number
"RTN","XMXBSKT",132,0)
 ; XMK      - basket number
"RTN","XMXBSKT",133,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXBSKT",134,0)
 S XMMSG=""
"RTN","XMXBSKT",135,0)
 I XMDUZ=.6,'$$POSTPRIV^XMXSEC Q
"RTN","XMXBSKT",136,0)
 I XMDUZ'=DUZ,'$$RPRIV^XMXSEC Q
"RTN","XMXBSKT",137,0)
 I XMK'=.5,'$D(^XMB(3.7,XMDUZ,15,"AF")) D  Q
"RTN","XMXBSKT",138,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="You have no message filters defined."
"RTN","XMXBSKT",139,0)
 I XMDUZ=.5,XMK>1000 D  Q
"RTN","XMXBSKT",140,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Postmaster may not filter baskets with IEN > 1000."
"RTN","XMXBSKT",141,0)
 N XMZ,XMKN
"RTN","XMXBSKT",142,0)
 S XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1)
"RTN","XMXBSKT",143,0)
 S XMZ=0
"RTN","XMXBSKT",144,0)
 F  S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,XMZ)) Q:XMZ'>0  D FLTR^XMXMSGS2(XMDUZ,XMK,XMKN,XMZ)
"RTN","XMXBSKT",145,0)
 S XMMSG="Basket filtered"
"RTN","XMXBSKT",146,0)
 Q
"RTN","XMXBULL")
0^51^B17239014
"RTN","XMXBULL",1,0)
XMXBULL ;ISC-SF/GMB-Bulletin ;06/09/99  07:06
"RTN","XMXBULL",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXBULL",3,0)
 ; Replaces ^XMB (ISC-WASH/THM/RWF/CAP)
"RTN","XMXBULL",4,0)
 ; TASKBULL creates and delivers a bulletin in background.
"RTN","XMXBULL",5,0)
 ; SENDBULL creates bulletin in foreground; delivers in background
"RTN","XMXBULL",6,0)
 ; TASK     for use by TaskMan only
"RTN","XMXBULL",7,0)
 ; The recipients of the message include any entries in the XMTO
"RTN","XMXBULL",8,0)
 ; array that the caller has defined and the members of mail groups
"RTN","XMXBULL",9,0)
 ; that are included in the definition of the entry in the Bulletin
"RTN","XMXBULL",10,0)
 ; file (#3.6) at the time of delivery.  There must be valid
"RTN","XMXBULL",11,0)
 ; recipients or the message will not be delivered.
"RTN","XMXBULL",12,0)
 ; Inputs:
"RTN","XMXBULL",13,0)
 ; XMDUZ    Sender DUZ
"RTN","XMXBULL",14,0)
 ; XMBNAME  The name of a bulletin (an entry in File #3.6)
"RTN","XMXBULL",15,0)
 ; XMPARM(parameter#)=The value to be stuffed into the bulletin for each
"RTN","XMXBULL",16,0)
 ;       required parameter.  (eg. XMPARM(1)=data for parameter#1
"RTN","XMXBULL",17,0)
 ; XMBODY   (optional) Additional text of the message
"RTN","XMXBULL",18,0)
 ; XMTO     (optional) Array of recipients of a bulletin
"RTN","XMXBULL",19,0)
 ; XMINSTR("FLAGS") (optional)
"RTN","XMXBULL",20,0)
 ;                     ["P" - priority
"RTN","XMXBULL",21,0)
 ; XMINSTR("FROM")  (optional) String saying from whom (default is sender)
"RTN","XMXBULL",22,0)
 ; XMINSTR("LATER") (optional) date/time to send the bulletin (default is now)
"RTN","XMXBULL",23,0)
 ; XMATTACH    (in)  Array of files to attach to message
"RTN","XMXBULL",24,0)
 ;                   ("IMAGE",x) imaging (BLOB) files
"RTN","XMXBULL",25,0)
 ; Output:
"RTN","XMXBULL",26,0)
 ; XMZ      (from entry SENDBULL only) Message number if successful
"RTN","XMXBULL",27,0)
 ; XMTASK   (from entry TASKBULL only) Task number (ZTSK) if successful
"RTN","XMXBULL",28,0)
TASKBULL(XMDUZ,XMBNAME,XMPARM,XMBODY,XMTO,XMINSTR,XMTASK,XMATTACH) ; Tasks it
"RTN","XMXBULL",29,0)
 N XMBIEN
"RTN","XMXBULL",30,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXBULL",31,0)
 I XMDUZ=.6 D  Q
"RTN","XMXBULL",32,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="SHARED,MAIL may not send a bulletin."
"RTN","XMXBULL",33,0)
 S XMBIEN=$O(^XMB(3.6,"B",XMBNAME,""))
"RTN","XMXBULL",34,0)
 D BULLETIN^XMKPO(XMDUZ,XMBNAME,XMBIEN,.XMPARM,.XMBODY,.XMTO,.XMINSTR,.XMTASK,.XMATTACH)
"RTN","XMXBULL",35,0)
 Q
"RTN","XMXBULL",36,0)
TASK ; TaskMan uses this entry point, and supplies variables:
"RTN","XMXBULL",37,0)
 ; XMDUZ,XMBIEN,XMPARM,XMBODY,XMTO,XMINSTR,XMATTACH
"RTN","XMXBULL",38,0)
 N XMZ
"RTN","XMXBULL",39,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXBULL",40,0)
 D SEND(XMDUZ,XMBIEN,.XMPARM,.XMBODY,.XMTO,.XMINSTR,.XMZ,.XMATTACH)
"RTN","XMXBULL",41,0)
 S ZTREQ="@"
"RTN","XMXBULL",42,0)
 Q
"RTN","XMXBULL",43,0)
SENDBULL(XMDUZ,XMBNAME,XMPARM,XMBODY,XMTO,XMINSTR,XMZ,XMATTACH) ; Does it now
"RTN","XMXBULL",44,0)
 N XMBIEN
"RTN","XMXBULL",45,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXBULL",46,0)
 I XMDUZ=.6 D  Q
"RTN","XMXBULL",47,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="SHARED,MAIL may not send a bulletin."
"RTN","XMXBULL",48,0)
 S XMBIEN=$O(^XMB(3.6,"B",XMBNAME,""))
"RTN","XMXBULL",49,0)
 D SEND(XMDUZ,XMBIEN,.XMPARM,.XMBODY,.XMTO,.XMINSTR,.XMZ,.XMATTACH)
"RTN","XMXBULL",50,0)
 Q
"RTN","XMXBULL",51,0)
SEND(XMDUZ,XMBIEN,XMPARM,XMBODY,XMTO,XMINSTR,XMZ,XMATTACH) ; Create and send the bulletin
"RTN","XMXBULL",52,0)
 N XMREC
"RTN","XMXBULL",53,0)
 S XMREC=^XMB(3.6,XMBIEN,0)
"RTN","XMXBULL",54,0)
 D CRE8XMZ^XMXSEND($$SUBJECT($P(XMREC,U,2),.XMPARM),.XMZ) Q:$D(XMERR)
"RTN","XMXBULL",55,0)
 D:$G(XMINSTR("ADDR FLAGS"))'["I" INIT^XMXADDR
"RTN","XMXBULL",56,0)
 D BULLADDR(XMDUZ,XMBIEN,.XMINSTR)
"RTN","XMXBULL",57,0)
 D CHKADDR^XMXADDR(XMDUZ,.XMTO,.XMINSTR)
"RTN","XMXBULL",58,0)
 I '$D(^TMP("XMY",$J)) D  Q
"RTN","XMXBULL",59,0)
 . D CLEANUP^XMXADDR
"RTN","XMXBULL",60,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="No addressees.  Bulletin not sent."
"RTN","XMXBULL",61,0)
 . D KILLMSG^XMXUTIL(XMZ)
"RTN","XMXBULL",62,0)
 . S XMZ=-1
"RTN","XMXBULL",63,0)
 I $P(XMREC,U,4),$G(XMINSTR("FLAGS"))'["P" S XMINSTR("FLAGS")=$G(XMINSTR("FLAGS"))_"P"
"RTN","XMXBULL",64,0)
 D:$D(XMATTACH("IMAGE"))>9 ADDBLOB^XMXSEND(XMZ,.XMATTACH)
"RTN","XMXBULL",65,0)
 D MOVEPART^XMXSEND(XMDUZ,XMZ,.XMINSTR)
"RTN","XMXBULL",66,0)
 D MOVEBODY^XMXSEND(XMZ,"^XMB(3.6,"_XMBIEN_",1)")  ; Bulletin text
"RTN","XMXBULL",67,0)
 D DOPARMS(XMZ,.XMPARM)
"RTN","XMXBULL",68,0)
 I $G(XMBODY)'="",$D(@XMBODY)>9,$O(@XMBODY@(0)) D MOVEBODY^XMXSEND(XMZ,XMBODY,"A")  ; Append the text (no parm translation)
"RTN","XMXBULL",69,0)
 I $E(XMREC,1,2)="XM" D CHKNONVF(XMZ,$P(XMREC,U))
"RTN","XMXBULL",70,0)
 D SEND^XMKP(XMDUZ,XMZ)
"RTN","XMXBULL",71,0)
 D CLEANUP^XMXADDR
"RTN","XMXBULL",72,0)
 D CHECK^XMKPL
"RTN","XMXBULL",73,0)
 Q
"RTN","XMXBULL",74,0)
BULLADDR(XMDUZ,XMBIEN,XMINSTR) ;
"RTN","XMXBULL",75,0)
 N XMGIEN,XMGROUP
"RTN","XMXBULL",76,0)
 S XMGIEN=""
"RTN","XMXBULL",77,0)
 F  S XMGIEN=$O(^XMB(3.6,XMBIEN,2,"B",XMGIEN)) Q:XMGIEN=""  D
"RTN","XMXBULL",78,0)
 . S XMGROUP="G."_$P($G(^XMB(3.8,XMGIEN,0)),U,1)
"RTN","XMXBULL",79,0)
 . D:XMGROUP]"G." CHKADDR^XMXADDR(XMDUZ,XMGROUP,.XMINSTR)
"RTN","XMXBULL",80,0)
 Q
"RTN","XMXBULL",81,0)
SUBJECT(XMSUBJ,XMPARM) ;
"RTN","XMXBULL",82,0)
 D:XMSUBJ["|" FILL(.XMSUBJ,.XMPARM)
"RTN","XMXBULL",83,0)
 Q XMSUBJ
"RTN","XMXBULL",84,0)
DOPARMS(XMZ,XMPARM) ;
"RTN","XMXBULL",85,0)
 N I,XMLINE
"RTN","XMXBULL",86,0)
 S I=0
"RTN","XMXBULL",87,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:I=""  D
"RTN","XMXBULL",88,0)
 . Q:^XMB(3.9,XMZ,2,I,0)'["|"
"RTN","XMXBULL",89,0)
 . S XMLINE=^XMB(3.9,XMZ,2,I,0)
"RTN","XMXBULL",90,0)
 . D:XMLINE["|" FILL(.XMLINE,.XMPARM)
"RTN","XMXBULL",91,0)
 . S ^XMB(3.9,XMZ,2,I,0)=XMLINE
"RTN","XMXBULL",92,0)
 Q
"RTN","XMXBULL",93,0)
FILL(XMLINE,XMPARM) ;
"RTN","XMXBULL",94,0)
 ; This gets confused by "\027||1|, your Help Request from, |2|,":
"RTN","XMXBULL",95,0)
 ;F  D  Q:XMLINE'["|"
"RTN","XMXBULL",96,0)
 ;. S XMLINE=$P(XMLINE,"|",1)_$G(XMPARM(+$P(XMLINE,"|",2)))_$P(XMLINE,"|",3,999)
"RTN","XMXBULL",97,0)
 ; This can handle it:
"RTN","XMXBULL",98,0)
 Q:XMLINE'?.E1"|"1.N1"|".E
"RTN","XMXBULL",99,0)
 N XML
"RTN","XMXBULL",100,0)
 S XML=""
"RTN","XMXBULL",101,0)
 F  D  Q:XMLINE'?.E1"|"1.N1"|".E
"RTN","XMXBULL",102,0)
 . I $P(XMLINE,"|",2)?1N.N S XMLINE=$P(XMLINE,"|",1)_$G(XMPARM(+$P(XMLINE,"|",2)))_$P(XMLINE,"|",3,999) Q
"RTN","XMXBULL",103,0)
 . S XML=XML_$P(XMLINE,"|",1)_"|",XMLINE=$P(XMLINE,"|",2,999)
"RTN","XMXBULL",104,0)
 S XMLINE=XML_XMLINE
"RTN","XMXBULL",105,0)
 Q
"RTN","XMXBULL",106,0)
CHKNONVF(XMZ,XMBNAME) ; (CHecK NO eNVelope From)
"RTN","XMXBULL",107,0)
 Q:$O(^TMP("XMY",$J,""),-1)'["@"
"RTN","XMXBULL",108,0)
 I XMBNAME'="XM_TRANSMISSION_ERROR",XMBNAME'="XM SEND ERR RECIPIENT",XMBNAME'="XM SEND ERR MSG" Q
"RTN","XMXBULL",109,0)
 ; This is an error bulletin sent by MailMan to someone at a remote site
"RTN","XMXBULL",110,0)
 ; indicating that their message could not be delivered for some reason.
"RTN","XMXBULL",111,0)
 ; We want to make sure that the 'envelope from' is null, so we pre-set
"RTN","XMXBULL",112,0)
 ; it here.  It's a little trick.
"RTN","XMXBULL",113,0)
 S $P(^XMB(3.9,XMZ,.7),U,1)="<>"
"RTN","XMXBULL",114,0)
 Q
"RTN","XMXEDIT")
0^253^B10785457
"RTN","XMXEDIT",1,0)
XMXEDIT ;ISC-SF/GMB-Edit msg that user has sent to self ;06/14/99  16:40
"RTN","XMXEDIT",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXEDIT",3,0)
 ; All entry points covered by DBIA 2730.
"RTN","XMXEDIT",4,0)
 ; These entry points edit a message.  They do not perform any checks to
"RTN","XMXEDIT",5,0)
 ; see whether it is appropriate to do so.  That is the responsibility
"RTN","XMXEDIT",6,0)
 ; of the calling routine.
"RTN","XMXEDIT",7,0)
 ; For these entry points, it is expected that:
"RTN","XMXEDIT",8,0)
 ; OPTMSG^XMXSEC2  has been called and has given its permission to
"RTN","XMXEDIT",9,0)
 ;                 edit the message or to toggle information only.
"RTN","XMXEDIT",10,0)
 ; OPTEDIT^XMXSEC2 has been called and has given its permission to
"RTN","XMXEDIT",11,0)
 ;                 edit the particular thing we are editing here.
"RTN","XMXEDIT",12,0)
 ; INMSG2^XMXUTIL2 has been called to set XMINSTR.  These routines expect
"RTN","XMXEDIT",13,0)
 ;                 that XMINSTR has been correctly set.  They will change
"RTN","XMXEDIT",14,0)
 ;                 XMINSTR according to the edit.
"RTN","XMXEDIT",15,0)
CLOSED(XMZ,XMINSTR,XMMSG) ; Toggle Closed msg
"RTN","XMXEDIT",16,0)
 I $D(^TMP("XMY",$J,.6)) D  Q
"RTN","XMXEDIT",17,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Messages addressed to SHARED,MAIL may not be closed."
"RTN","XMXEDIT",18,0)
 D FLAGTOGL(XMZ,1.95,.XMINSTR,"X","Closed",.XMMSG)
"RTN","XMXEDIT",19,0)
 Q
"RTN","XMXEDIT",20,0)
CONFID(XMZ,XMINSTR,XMMSG) ; Toggle Confidential msg
"RTN","XMXEDIT",21,0)
 I $D(^TMP("XMY",$J,.6)) D  Q
"RTN","XMXEDIT",22,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Messages addressed to SHARED,MAIL may not be confidential."
"RTN","XMXEDIT",23,0)
 D FLAGTOGL(XMZ,1.96,.XMINSTR,"C","Confidential",.XMMSG)
"RTN","XMXEDIT",24,0)
 Q
"RTN","XMXEDIT",25,0)
CONFIRM(XMZ,XMINSTR,XMMSG) ; Toggle Confirm receipt of msg
"RTN","XMXEDIT",26,0)
 D FLAGTOGL(XMZ,1.3,.XMINSTR,"R","Confirm Receipt Requested",.XMMSG)
"RTN","XMXEDIT",27,0)
 Q
"RTN","XMXEDIT",28,0)
DELIVER(XMZ,XMDBSKT,XMINSTR,XMMSG) ; Delivery basket
"RTN","XMXEDIT",29,0)
 I XMDBSKT="@" D  Q
"RTN","XMXEDIT",30,0)
 . K XMINSTR("RCPT BSKT")
"RTN","XMXEDIT",31,0)
 . S XMFDA(3.9,XMZ_",",21)="@"
"RTN","XMXEDIT",32,0)
 . D FILE^DIE("","XMFDA")
"RTN","XMXEDIT",33,0)
 . S XMMSG="Delivery basket removed"
"RTN","XMXEDIT",34,0)
 S XMINSTR("RCPT BSKT")=XMDBSKT
"RTN","XMXEDIT",35,0)
 S XMFDA(3.9,XMZ_",",21)=XMINSTR("RCPT BSKT")
"RTN","XMXEDIT",36,0)
 D FILE^DIE("","XMFDA")
"RTN","XMXEDIT",37,0)
 S XMMSG="Delivery basket set"
"RTN","XMXEDIT",38,0)
 Q
"RTN","XMXEDIT",39,0)
INFO(XMZ,XMINSTR,XMMSG) ; Toggle Information only msg
"RTN","XMXEDIT",40,0)
 D FLAGTOGL(XMZ,1.97,.XMINSTR,"I","Information only",.XMMSG)
"RTN","XMXEDIT",41,0)
 Q
"RTN","XMXEDIT",42,0)
PRIORITY(XMZ,XMINSTR,XMMSG) ; Toggle Priority msg
"RTN","XMXEDIT",43,0)
 D FLAGTOGL(XMZ,1.7,.XMINSTR,"P","Priority",.XMMSG)
"RTN","XMXEDIT",44,0)
 Q
"RTN","XMXEDIT",45,0)
SUBJ(XMZ,XMSUBJ,XMIM) ; Replace Subject
"RTN","XMXEDIT",46,0)
 I $G(XMSUBJ)="" S XMSUBJ=$$EZBLD^DIALOG(34012)
"RTN","XMXEDIT",47,0)
 S (XMIM("SUBJ"),XMFDA(3.9,XMZ_",",.01))=$$ENCODEUP^XMXUTIL1(XMSUBJ)
"RTN","XMXEDIT",48,0)
 D FILE^DIE("","XMFDA")
"RTN","XMXEDIT",49,0)
 Q
"RTN","XMXEDIT",50,0)
TEXT(XMZ,XMBODY) ; Replace Text
"RTN","XMXEDIT",51,0)
 D WP^DIE(3.9,XMZ_",",3,"",XMBODY)
"RTN","XMXEDIT",52,0)
 Q
"RTN","XMXEDIT",53,0)
VAPOR(XMZ,XMVAPOR,XMINSTR,XMMSG) ; Vaporize date
"RTN","XMXEDIT",54,0)
 I XMVAPOR="@" D  Q
"RTN","XMXEDIT",55,0)
 . K XMINSTR("VAPOR")
"RTN","XMXEDIT",56,0)
 . S XMFDA(3.9,XMZ_",",1.6)="@"
"RTN","XMXEDIT",57,0)
 . D FILE^DIE("","XMFDA")
"RTN","XMXEDIT",58,0)
 . S XMFDA(3.702,XMZ_","_XMK_","_XMDUZ_",",5)="@"
"RTN","XMXEDIT",59,0)
 . D FILE^DIE("","XMFDA")
"RTN","XMXEDIT",60,0)
 . S XMMSG="Vaporize Date removed"
"RTN","XMXEDIT",61,0)
 S XMINSTR("VAPOR")=XMVAPOR
"RTN","XMXEDIT",62,0)
 S XMFDA(3.9,XMZ_",",1.6)=XMINSTR("VAPOR")
"RTN","XMXEDIT",63,0)
 D FILE^DIE("","XMFDA")
"RTN","XMXEDIT",64,0)
 S XMFDA(3.702,XMZ_","_XMK_","_XMDUZ_",",5)=XMINSTR("VAPOR")
"RTN","XMXEDIT",65,0)
 D FILE^DIE("","XMFDA")
"RTN","XMXEDIT",66,0)
 S XMMSG="Vaporize Date set"
"RTN","XMXEDIT",67,0)
 Q
"RTN","XMXEDIT",68,0)
FLAGTOGL(XMZ,XMFIELD,XMINSTR,XMFLAG,XMTYPE,XMMSG) ; Flag Toggle
"RTN","XMXEDIT",69,0)
 N XMFDA
"RTN","XMXEDIT",70,0)
 I $G(XMINSTR("FLAGS"))[XMFLAG D
"RTN","XMXEDIT",71,0)
 . S XMINSTR("FLAGS")=$TR(XMINSTR("FLAGS"),XMFLAG)
"RTN","XMXEDIT",72,0)
 . S XMMSG="'"_XMTYPE_"' flag removed"
"RTN","XMXEDIT",73,0)
 . I XMFLAG="P" D
"RTN","XMXEDIT",74,0)
 . . S XMFDA(3.9,XMZ_",",XMFIELD)=$S($G(XMINSTR("TYPE"))="":"@",1:XMINSTR("TYPE"))
"RTN","XMXEDIT",75,0)
 . E  S XMFDA(3.9,XMZ_",",XMFIELD)="@"
"RTN","XMXEDIT",76,0)
 E  D
"RTN","XMXEDIT",77,0)
 . S XMINSTR("FLAGS")=$G(XMINSTR("FLAGS"))_XMFLAG
"RTN","XMXEDIT",78,0)
 . S XMMSG="Message flagged '"_XMTYPE_"'"
"RTN","XMXEDIT",79,0)
 . I XMFLAG="P" S XMFDA(3.9,XMZ_",",XMFIELD)=$G(XMINSTR("TYPE"))_"P"
"RTN","XMXEDIT",80,0)
 . E  S XMFDA(3.9,XMZ_",",XMFIELD)="y"
"RTN","XMXEDIT",81,0)
 D FILE^DIE("","XMFDA")
"RTN","XMXEDIT",82,0)
 Q
"RTN","XMXEDIT",83,0)
 ;
"RTN","XMXEDIT",84,0)
 ;#34012 = * No Subject *
"RTN","XMXLIST")
0^250^B56785820
"RTN","XMXLIST",1,0)
XMXLIST ;ISC-SF/GMB-List message: multiple conditions ;06/01/99  13:38
"RTN","XMXLIST",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXLIST",3,0)
LISTMSGS(XMDUZ,XMK,XMFLDS,XMFLAGS,XMAMT,XMSTART,XMF,XMTROOT) ;
"RTN","XMXLIST",4,0)
 ; XMK is the basket to look in
"RTN","XMXLIST",5,0)
 ;              =number - Look in this basket ONLY
"RTN","XMXLIST",6,0)
 ;              =*      - Look in all baskets
"RTN","XMXLIST",7,0)
 ; XMFLDS is a list, separated by ';', of fields to retrieve.
"RTN","XMXLIST",8,0)
 ; e.g. XMFLDS="SUBJ;DATE" means retrieve subject and date.
"RTN","XMXLIST",9,0)
 ;       "BSKT" = basket (default: <basket ien>^<basket name>)
"RTN","XMXLIST",10,0)
 ;                optionally followed by ":" and
"RTN","XMXLIST",11,0)
 ;                "I" for basket IEN only (no 2nd piece)
"RTN","XMXLIST",12,0)
 ;                "X" adds basket name xref
"RTN","XMXLIST",13,0)
 ;       "DATE" = date sent (default: <internal date>^<dd mmm yy hh:mm>)
"RTN","XMXLIST",14,0)
 ;                optionally followed by ":" and
"RTN","XMXLIST",15,0)
 ;                "I" for internal date only (no 2nd piece)
"RTN","XMXLIST",16,0)
 ;                "F" for FileMan date as the 2nd piece
"RTN","XMXLIST",17,0)
 ;                "X" adds FileMan date xref
"RTN","XMXLIST",18,0)
 ;       "FROM" = message from (default: <internal from>^<external from>)
"RTN","XMXLIST",19,0)
 ;                optionally followed by ":" and
"RTN","XMXLIST",20,0)
 ;                "I" for internal from only (no 2nd piece)
"RTN","XMXLIST",21,0)
 ;                "X" adds external from xref
"RTN","XMXLIST",22,0)
 ;       "LINE" = number of lines in the message
"RTN","XMXLIST",23,0)
 ;       "NEW"  = is the message new? (0=no; 1=yes; 2=yes, and priority, too)
"RTN","XMXLIST",24,0)
 ;       "PRI"  = is the message priority? (0=no; 1=yes)
"RTN","XMXLIST",25,0)
 ;       "READ" = how much of the message has the user read?
"RTN","XMXLIST",26,0)
 ;                null   = has not read the message at all
"RTN","XMXLIST",27,0)
 ;                0      = has read the message, but no responses
"RTN","XMXLIST",28,0)
 ;                number = has read through this response
"RTN","XMXLIST",29,0)
 ;       "RESP" = how many responses does the message have?
"RTN","XMXLIST",30,0)
 ;                0      = none
"RTN","XMXLIST",31,0)
 ;                number = this many
"RTN","XMXLIST",32,0)
 ;       "SEQN" = sequence number in basket
"RTN","XMXLIST",33,0)
 ;       "SUBJ" = message subject (always external)
"RTN","XMXLIST",34,0)
 ;                optionally followed by ":" and
"RTN","XMXLIST",35,0)
 ;                "X" adds subject xref
"RTN","XMXLIST",36,0)
 ; XMFLAGS are used to control processing
"RTN","XMXLIST",37,0)
 ;              =B Backwards order (Default is traverse forward)
"RTN","XMXLIST",38,0)
 ;              =C Use basket C-xref (Default is message IEN)
"RTN","XMXLIST",39,0)
 ;              =N New messages only (C flag ignored)
"RTN","XMXLIST",40,0)
 ;              =P New Priority messages only (C, N flags ignored)
"RTN","XMXLIST",41,0)
 ; XMAMT        How many?
"RTN","XMXLIST",42,0)
 ;              =number - Get this many
"RTN","XMXLIST",43,0)
 ;              =*      - Get all (default)
"RTN","XMXLIST",44,0)
 ; XMSTART is used to start the lister going.  The lister will keep it
"RTN","XMXLIST",45,0)
 ; updated from call to call.
"RTN","XMXLIST",46,0)
 ; XMSTART("XMK")  Start with this basket IEN (valid only if XMK="*")
"RTN","XMXLIST",47,0)
 ;                 Continues from there, with each successive call,
"RTN","XMXLIST",48,0)
 ;                 to the end.
"RTN","XMXLIST",49,0)
 ;                 (Default is to start with basket .5, the WASTE basket)
"RTN","XMXLIST",50,0)
 ; XMSTART("XMZ")  Start AFTER this message IEN (valid only if no C flag)
"RTN","XMXLIST",51,0)
 ;                 Continues from there, with each successive call,
"RTN","XMXLIST",52,0)
 ;                 to the end.
"RTN","XMXLIST",53,0)
 ;                 (Default is to start at the beginning (or end) of the
"RTN","XMXLIST",54,0)
 ;                 basket)
"RTN","XMXLIST",55,0)
 ; XMSTART("XMKZ") Start AFTER this message C-xref (valid only if C flag)
"RTN","XMXLIST",56,0)
 ;                 Continues from there, with each successive call,
"RTN","XMXLIST",57,0)
 ;                 to the end.
"RTN","XMXLIST",58,0)
 ;                 (Default is to start at the beginning (or end) of the
"RTN","XMXLIST",59,0)
 ;                 basket)
"RTN","XMXLIST",60,0)
 ; XMF contains conditions which are 'and'ed together to select only
"RTN","XMXLIST",61,0)
 ; those messages which meet the conditions.
"RTN","XMXLIST",62,0)
 ; XMF("FROM")  Message is from this person
"RTN","XMXLIST",63,0)
 ; XMF("FDATE") Message was sent on or after this date
"RTN","XMXLIST",64,0)
 ; XMF("RFROM") Message has a response from this person
"RTN","XMXLIST",65,0)
 ; XMF("SUBJ")  Subject contains this string
"RTN","XMXLIST",66,0)
 ; XMF("SUBJ","C") =0 - Search is not case-sensitive (default)
"RTN","XMXLIST",67,0)
 ;                 =1 - Search is case-sensitive
"RTN","XMXLIST",68,0)
 ; XMF("TDATE") Message was sent on or before this date
"RTN","XMXLIST",69,0)
 ; XMF("TEXT")  Message contains this string
"RTN","XMXLIST",70,0)
 ; XMF("TEXT","L") =1 - Look in message only (default)
"RTN","XMXLIST",71,0)
 ;                 =2 - Look in both message and responses
"RTN","XMXLIST",72,0)
 ;                 =3 - Look in responses only
"RTN","XMXLIST",73,0)
 ; XMF("TEXT","C") =0 - Search is not case-sensitive (default)
"RTN","XMXLIST",74,0)
 ;                 =1 - Search is case-sensitive
"RTN","XMXLIST",75,0)
 ; XMF("TO")    Message is to this person
"RTN","XMXLIST",76,0)
 ; XMTROOT is the target root to receive the message list.
"RTN","XMXLIST",77,0)
 ;              (default is ^TMP("XMLIST",$J))
"RTN","XMXLIST",78,0)
 ;
"RTN","XMXLIST",79,0)
 ; Variables set and used by the routine:
"RTN","XMXLIST",80,0)
 ; XMF("SUBJ","S") Look for this string in the subject
"RTN","XMXLIST",81,0)
 ; XMF("TEXT","S") Look for this string in the message
"RTN","XMXLIST",82,0)
 N XMZ,XMCNT,XMORDER
"RTN","XMXLIST",83,0)
 I XMDUZ'=DUZ,'$$RPRIV^XMXSEC Q
"RTN","XMXLIST",84,0)
 D INIT(.XMFLDS,.XMFLAGS,.XMAMT,.XMORDER,.XMF,.XMTROOT)
"RTN","XMXLIST",85,0)
 S (XMZ,XMCNT)=0
"RTN","XMXLIST",86,0)
 I XMK="*" D
"RTN","XMXLIST",87,0)
 . I XMFLAGS["P" D NEWA^XMXLIST1(XMDUZ,"N",XMORDER,.XMFLDS,XMAMT,.XMSTART,.XMF,XMTROOT) Q
"RTN","XMXLIST",88,0)
 . I XMFLAGS["N" D NEWA^XMXLIST1(XMDUZ,"N0",XMORDER,.XMFLDS,XMAMT,.XMSTART,.XMF,XMTROOT) Q
"RTN","XMXLIST",89,0)
 . I XMFLAGS["C" D REGAC^XMXLIST1(XMDUZ,XMORDER,.XMFLDS,XMAMT,.XMSTART,.XMF,XMTROOT) Q
"RTN","XMXLIST",90,0)
 . D REGAZ^XMXLIST1(XMDUZ,XMORDER,.XMFLDS,XMAMT,.XMSTART,.XMF,XMTROOT)
"RTN","XMXLIST",91,0)
 E  D
"RTN","XMXLIST",92,0)
 . N XMKN
"RTN","XMXLIST",93,0)
 . S XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1)
"RTN","XMXLIST",94,0)
 . I XMFLAGS["P" D NEW1(XMDUZ,XMK,XMKN,"N",XMORDER,.XMFLDS,XMAMT,.XMSTART,.XMF,XMTROOT) Q
"RTN","XMXLIST",95,0)
 . I XMFLAGS["N" D NEW1(XMDUZ,XMK,XMKN,"N0",XMORDER,.XMFLDS,XMAMT,.XMSTART,.XMF,XMTROOT) Q
"RTN","XMXLIST",96,0)
 . I XMFLAGS["C" D REG1C(XMDUZ,XMK,XMKN,XMORDER,.XMFLDS,XMAMT,.XMSTART,.XMF,XMTROOT) Q
"RTN","XMXLIST",97,0)
 . D REG1Z(XMDUZ,XMK,XMKN,XMORDER,.XMFLDS,XMAMT,.XMSTART,.XMF,XMTROOT)
"RTN","XMXLIST",98,0)
 Q
"RTN","XMXLIST",99,0)
INIT(XMFLDS,XMFLAGS,XMAMT,XMORDER,XMF,XMTROOT) ;
"RTN","XMXLIST",100,0)
 I $D(XMFLDS),XMFLDS="" K XMFLDS
"RTN","XMXLIST",101,0)
 I $D(XMTROOT),XMTROOT'="" D
"RTN","XMXLIST",102,0)
 . K @$$CREF^DILF(XMTROOT)
"RTN","XMXLIST",103,0)
 . S XMTROOT=$$OREF^DILF(XMTROOT)_"""XMLIST"","
"RTN","XMXLIST",104,0)
 E  D
"RTN","XMXLIST",105,0)
 . K ^TMP("XMLIST",$J)
"RTN","XMXLIST",106,0)
 . S XMTROOT="^TMP(""XMLIST"",$J,"
"RTN","XMXLIST",107,0)
 I $D(XMF) D
"RTN","XMXLIST",108,0)
 . I $D(XMF)'>9 K XMF Q
"RTN","XMXLIST",109,0)
 . S:$D(XMF("SUBJ")) XMF("SUBJ","S")=$S('$G(XMF("SUBJ","C")):$$UP^XLFSTR(XMF("SUBJ")),1:XMF("SUBJ"))
"RTN","XMXLIST",110,0)
 . I $D(XMF("TEXT")) D
"RTN","XMXLIST",111,0)
 . . S XMF("TEXT","S")=$S('$G(XMF("TEXT","C")):$$UP^XLFSTR(XMF("TEXT")),1:XMF("TEXT"))
"RTN","XMXLIST",112,0)
 . . I '$D(XMF("TEXT","L")) S XMF("TEXT","L")=1
"RTN","XMXLIST",113,0)
 . I $D(XMF("FROM")) S XMF("FROM")=$$UP^XLFSTR(XMF("FROM"))
"RTN","XMXLIST",114,0)
 . I $D(XMF("RFROM")) S XMF("RFROM")=$$UP^XLFSTR(XMF("RFROM"))
"RTN","XMXLIST",115,0)
 . I $D(XMF("TO")) S XMF("TO")=$$UP^XLFSTR(XMF("TO"))
"RTN","XMXLIST",116,0)
 S XMFLAGS=$G(XMFLAGS)
"RTN","XMXLIST",117,0)
 S XMORDER=$S(XMFLAGS["B":-1,1:1)
"RTN","XMXLIST",118,0)
 I $G(XMAMT)="" S XMAMT="*"
"RTN","XMXLIST",119,0)
 Q
"RTN","XMXLIST",120,0)
NEW1(XMDUZ,XMK,XMKN,XMTYPE,XMORDER,XMFLDS,XMAMT,XMSTART,XMF,XMTROOT) ; New messages in 1 basket
"RTN","XMXLIST",121,0)
 N XMCNT,XMZ
"RTN","XMXLIST",122,0)
 S XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1)
"RTN","XMXLIST",123,0)
 S XMCNT=0
"RTN","XMXLIST",124,0)
 S XMZ=$G(XMSTART("XMZ"))
"RTN","XMXLIST",125,0)
 F  S XMZ=$O(^XMB(3.7,XMDUZ,XMTYPE,XMK,XMZ),XMORDER) Q:'XMZ  D  Q:XMCNT=XMAMT
"RTN","XMXLIST",126,0)
 . I '$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITN^XMUT4A(XMDUZ,XMTYPE,XMK,XMZ)
"RTN","XMXLIST",127,0)
 . I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMXLIST",128,0)
 . I $D(XMF) Q:'$$GOODMSG^XMJMFB(XMDUZ,XMK,XMZ,.XMF)
"RTN","XMXLIST",129,0)
 . S XMCNT=XMCNT+1
"RTN","XMXLIST",130,0)
 . S @(XMTROOT_XMCNT_")")=XMZ
"RTN","XMXLIST",131,0)
 . Q:'$D(XMFLDS)
"RTN","XMXLIST",132,0)
 . D FIELDS^XMXLIST1(XMDUZ,XMK,XMKN,XMZ,.XMFLDS,XMTROOT,XMCNT)
"RTN","XMXLIST",133,0)
 . I XMFLDS["SEQN" D KSEQN^XMXLIST1(XMDUZ,XMK,XMZ,.XMFLDS,XMTROOT,XMCNT)
"RTN","XMXLIST",134,0)
 S XMSTART("XMZ")=XMZ
"RTN","XMXLIST",135,0)
 S @(XMTROOT_"0)")=XMCNT_U_XMAMT
"RTN","XMXLIST",136,0)
 ; Any more?
"RTN","XMXLIST",137,0)
 I 'XMZ S @(XMTROOT_"0)")=@(XMTROOT_"0)")_"^0" Q
"RTN","XMXLIST",138,0)
 I '$O(^XMB(3.7,XMDUZ,XMTYPE,XMK,XMZ),XMORDER) S @(XMTROOT_"0)")=@(XMTROOT_"0)")_"^0" Q
"RTN","XMXLIST",139,0)
 I '$D(XMF) S @(XMTROOT_"0)")=@(XMTROOT_"0)")_"^1" Q
"RTN","XMXLIST",140,0)
 N XMORE
"RTN","XMXLIST",141,0)
 S XMORE=0
"RTN","XMXLIST",142,0)
 F  S XMZ=$O(^XMB(3.7,XMDUZ,XMTYPE,XMK,XMZ),XMORDER) Q:'XMZ  D  Q:XMORE
"RTN","XMXLIST",143,0)
 . I '$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITN^XMUT4A(XMDUZ,XMTYPE,XMK,XMZ)
"RTN","XMXLIST",144,0)
 . I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMXLIST",145,0)
 . I $$GOODMSG^XMJMFB(XMDUZ,XMK,XMZ,.XMF) S XMORE=1
"RTN","XMXLIST",146,0)
 S @(XMTROOT_"0)")=@(XMTROOT_"0)")_U_XMORE
"RTN","XMXLIST",147,0)
 Q
"RTN","XMXLIST",148,0)
REG1C(XMDUZ,XMK,XMKN,XMORDER,XMFLDS,XMAMT,XMSTART,XMF,XMTROOT) ; Messages (by C-xref) in one basket
"RTN","XMXLIST",149,0)
 N XMCNT,XMKZ,XMZ
"RTN","XMXLIST",150,0)
 S XMCNT=0
"RTN","XMXLIST",151,0)
 S XMKZ=$G(XMSTART("XMKZ"))
"RTN","XMXLIST",152,0)
 F  S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ),XMORDER) Q:'XMKZ  D  Q:XMCNT=XMAMT
"RTN","XMXLIST",153,0)
 . S XMZ=$O(^(XMKZ,"")) ; naked reference from previous line!
"RTN","XMXLIST",154,0)
 . I '$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITC^XMUT4A(XMDUZ,XMK,XMZ,XMKZ)
"RTN","XMXLIST",155,0)
 . I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMXLIST",156,0)
 . I $D(XMF) Q:'$$GOODMSG^XMJMFB(XMDUZ,XMK,XMZ,.XMF)
"RTN","XMXLIST",157,0)
 . S XMCNT=XMCNT+1
"RTN","XMXLIST",158,0)
 . S @(XMTROOT_XMCNT_")")=XMZ
"RTN","XMXLIST",159,0)
 . Q:'$D(XMFLDS)
"RTN","XMXLIST",160,0)
 . D FIELDS^XMXLIST1(XMDUZ,XMK,XMKN,XMZ,.XMFLDS,XMTROOT,XMCNT)
"RTN","XMXLIST",161,0)
 . I FIELDS["SEQN" D SEQN^XMXLIST1(XMDUZ,XMKZ,.XMFLDS,XMTROOT,XMCNT)
"RTN","XMXLIST",162,0)
 S XMSTART("XMKZ")=XMKZ
"RTN","XMXLIST",163,0)
 S @(XMTROOT_"0)")=XMCNT_U_XMAMT
"RTN","XMXLIST",164,0)
 ; Any more?
"RTN","XMXLIST",165,0)
 I 'XMKZ S @(XMTROOT_"0)")=@(XMTROOT_"0)")_"^0" Q
"RTN","XMXLIST",166,0)
 I '$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ),XMORDER) S @(XMTROOT_"0)")=@(XMTROOT_"0)")_"^0" Q
"RTN","XMXLIST",167,0)
 I '$D(XMF) S @(XMTROOT_"0)")=@(XMTROOT_"0)")_"^1" Q
"RTN","XMXLIST",168,0)
 N XMORE
"RTN","XMXLIST",169,0)
 S XMORE=0
"RTN","XMXLIST",170,0)
 F  S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ),XMORDER) Q:'XMKZ  D  Q:XMORE
"RTN","XMXLIST",171,0)
 . I '$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITC^XMUT4A(XMDUZ,XMK,XMZ,XMKZ)
"RTN","XMXLIST",172,0)
 . I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMXLIST",173,0)
 . I $$GOODMSG^XMJMFB(XMDUZ,XMK,XMZ,.XMF) S XMORE=1
"RTN","XMXLIST",174,0)
 S @(XMTROOT_"0)")=@(XMTROOT_"0)")_U_XMORE
"RTN","XMXLIST",175,0)
 Q
"RTN","XMXLIST",176,0)
REG1Z(XMDUZ,XMK,XMKN,XMORDER,XMFLDS,XMAMT,XMSTART,XMF,XMTROOT) ; Messages (by IEN) in one basket
"RTN","XMXLIST",177,0)
 N XMCNT,XMZ
"RTN","XMXLIST",178,0)
 S XMCNT=0
"RTN","XMXLIST",179,0)
 S XMZ=$G(XMSTART("XMZ"))
"RTN","XMXLIST",180,0)
 I +XMZ=0 S XMZ=0 I XMORDER=-1 S XMZ=":"
"RTN","XMXLIST",181,0)
 F  S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,XMZ),XMORDER) Q:'XMZ  D  Q:XMCNT=XMAMT
"RTN","XMXLIST",182,0)
 . I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMXLIST",183,0)
 . I $D(XMF) Q:'$$GOODMSG^XMJMFB(XMDUZ,XMK,XMZ,.XMF)
"RTN","XMXLIST",184,0)
 . S XMCNT=XMCNT+1
"RTN","XMXLIST",185,0)
 . S @(XMTROOT_XMCNT_")")=XMZ
"RTN","XMXLIST",186,0)
 . Q:'$D(XMFLDS)
"RTN","XMXLIST",187,0)
 . D FIELDS^XMXLIST1(XMDUZ,XMK,XMKN,XMZ,.XMFLDS,XMTROOT,XMCNT)
"RTN","XMXLIST",188,0)
 . I XMFLDS["SEQN" D KSEQN^XMXLIST1(XMDUZ,XMK,XMZ,.XMFLDS,XMTROOT,XMCNT)
"RTN","XMXLIST",189,0)
 S XMSTART("XMZ")=XMZ
"RTN","XMXLIST",190,0)
 S @(XMTROOT_"0)")=XMCNT_U_XMAMT
"RTN","XMXLIST",191,0)
 ; Any more?
"RTN","XMXLIST",192,0)
 I 'XMZ S @(XMTROOT_"0)")=@(XMTROOT_"0)")_"^0" Q
"RTN","XMXLIST",193,0)
 I '$O(^XMB(3.7,XMDUZ,2,XMK,1,XMZ),XMORDER) S @(XMTROOT_"0)")=@(XMTROOT_"0)")_"^0" Q
"RTN","XMXLIST",194,0)
 I '$D(XMF) S @(XMTROOT_"0)")=@(XMTROOT_"0)")_"^1" Q
"RTN","XMXLIST",195,0)
 N XMORE
"RTN","XMXLIST",196,0)
 S XMORE=0
"RTN","XMXLIST",197,0)
 F  S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,XMZ),XMORDER) Q:'XMZ  D  Q:XMORE
"RTN","XMXLIST",198,0)
 . I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMXLIST",199,0)
 . I $$GOODMSG^XMJMFB(XMDUZ,XMK,XMZ,.XMF) S XMORE=1
"RTN","XMXLIST",200,0)
 S @(XMTROOT_"0)")=@(XMTROOT_"0)")_U_XMORE
"RTN","XMXLIST",201,0)
 Q
"RTN","XMXLIST1")
0^251^B43594198
"RTN","XMXLIST1",1,0)
XMXLIST1 ;ISC-SF/GMB-List message: multiple conditions (cont'd) ;06/29/99  14:38
"RTN","XMXLIST1",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXLIST1",3,0)
NEWA(XMDUZ,XMTYPE,XMORDER,XMFLDS,XMAMT,XMSTART,XMF,XMTROOT) ; New messages in all baskets
"RTN","XMXLIST1",4,0)
 N XMCNT,XMK,XMKN,XMZ
"RTN","XMXLIST1",5,0)
 S XMCNT=0
"RTN","XMXLIST1",6,0)
 S XMK=+$G(XMSTART("XMK")) I XMK S XMK=XMK-.01
"RTN","XMXLIST1",7,0)
 S XMZ=$G(XMSTART("XMZ"))
"RTN","XMXLIST1",8,0)
 F  S XMK=$O(^XMB(3.7,XMDUZ,XMTYPE,XMK)) Q:'XMK  D  Q:XMCNT=XMAMT
"RTN","XMXLIST1",9,0)
 . S XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1)
"RTN","XMXLIST1",10,0)
 . F  S XMZ=$O(^XMB(3.7,XMDUZ,XMTYPE,XMK,XMZ),XMORDER) Q:'XMZ  D  Q:XMCNT=XMAMT
"RTN","XMXLIST1",11,0)
 . . I '$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITN^XMUT4A(XMDUZ,XMTYPE,XMK,XMZ)
"RTN","XMXLIST1",12,0)
 . . I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMXLIST1",13,0)
 . . I $D(XMF) Q:'$$GOODMSG^XMJMFB(XMDUZ,XMK,XMZ,.XMF)
"RTN","XMXLIST1",14,0)
 . . S XMCNT=XMCNT+1
"RTN","XMXLIST1",15,0)
 . . S @(XMTROOT_XMCNT_")")=XMZ
"RTN","XMXLIST1",16,0)
 . . Q:'$D(XMFLDS)
"RTN","XMXLIST1",17,0)
 . . D FIELDS(XMDUZ,XMK,XMKN,XMZ,.XMFLDS,XMTROOT,XMCNT)
"RTN","XMXLIST1",18,0)
 . . I XMFLDS["SEQN" D KSEQN(XMDUZ,XMK,XMZ,.XMFLDS,XMTROOT,XMCNT)
"RTN","XMXLIST1",19,0)
 S XMSTART("XMK")=XMK
"RTN","XMXLIST1",20,0)
 S XMSTART("XMZ")=XMZ
"RTN","XMXLIST1",21,0)
 S @(XMTROOT_"0)")=XMCNT_U_XMAMT
"RTN","XMXLIST1",22,0)
 ; Any more?
"RTN","XMXLIST1",23,0)
 I 'XMK S @(XMTROOT_"0)")=@(XMTROOT_"0)")_"^0" Q
"RTN","XMXLIST1",24,0)
 I '$O(^XMB(3.7,XMDUZ,XMTYPE,XMK)),'$O(^XMB(3.7,XMDUZ,XMTYPE,XMK,XMZ),XMORDER) S @(XMTROOT_"0)")=@(XMTROOT_"0)")_"^0" Q
"RTN","XMXLIST1",25,0)
 I '$D(XMF) S @(XMTROOT_"0)")=@(XMTROOT_"0)")_"^1" Q
"RTN","XMXLIST1",26,0)
 N XMORE
"RTN","XMXLIST1",27,0)
 S XMORE=0,XMK=XMK-.01
"RTN","XMXLIST1",28,0)
 F  S XMK=$O(^XMB(3.7,XMDUZ,XMTYPE,XMK)) Q:'XMK  D  Q:XMORE
"RTN","XMXLIST1",29,0)
 . F  S XMZ=$O(^XMB(3.7,XMDUZ,XMTYPE,XMK,XMZ),XMORDER) Q:'XMZ  D  Q:XMORE
"RTN","XMXLIST1",30,0)
 . . I '$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITN^XMUT4A(XMDUZ,XMTYPE,XMK,XMZ)
"RTN","XMXLIST1",31,0)
 . . I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMXLIST1",32,0)
 . . I $$GOODMSG^XMJMFB(XMDUZ,XMK,XMZ,.XMF) S XMORE=1
"RTN","XMXLIST1",33,0)
 S @(XMTROOT_"0)")=@(XMTROOT_"0)")_U_XMORE
"RTN","XMXLIST1",34,0)
 Q
"RTN","XMXLIST1",35,0)
REGAC(XMDUZ,XMORDER,XMFLDS,XMAMT,XMSTART,XMF,XMTROOT) ; Messages (by C-xref) in all baskets
"RTN","XMXLIST1",36,0)
 N XMCNT,XMK,XMKN,XMKZ,XMZ
"RTN","XMXLIST1",37,0)
 S XMCNT=0
"RTN","XMXLIST1",38,0)
 S XMK=+$G(XMSTART("XMK")) I XMK S XMK=XMK-.01
"RTN","XMXLIST1",39,0)
 S XMKZ=$G(XMSTART("XMKZ"))
"RTN","XMXLIST1",40,0)
 F  S XMK=$O(^XMB(3.7,XMDUZ,2,XMK)) Q:'XMK  D  Q:XMCNT=XMAMT
"RTN","XMXLIST1",41,0)
 . S XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1)
"RTN","XMXLIST1",42,0)
 . F  S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ),XMORDER) Q:'XMKZ  D  Q:XMCNT=XMAMT
"RTN","XMXLIST1",43,0)
 . . S XMZ=$O(^(XMKZ,"")) ; naked reference from previous line!
"RTN","XMXLIST1",44,0)
 . . I '$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITC^XMUT4A(XMDUZ,XMK,XMZ,XMKZ)
"RTN","XMXLIST1",45,0)
 . . I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMXLIST1",46,0)
 . . I $D(XMF) Q:'$$GOODMSG^XMJMFB(XMDUZ,XMK,XMZ,.XMF)
"RTN","XMXLIST1",47,0)
 . . S XMCNT=XMCNT+1
"RTN","XMXLIST1",48,0)
 . . S @(XMTROOT_XMCNT_")")=XMZ
"RTN","XMXLIST1",49,0)
 . . Q:'$D(XMFLDS)
"RTN","XMXLIST1",50,0)
 . . D FIELDS(XMDUZ,XMK,XMKN,XMZ,.XMFLDS,XMTROOT,XMCNT)
"RTN","XMXLIST1",51,0)
 . . I XMFLDS["SEQN" D SEQN(XMDUZ,XMKZ,.XMFLDS,XMTROOT,XMCNT)
"RTN","XMXLIST1",52,0)
 S XMSTART("XMK")=XMK
"RTN","XMXLIST1",53,0)
 S XMSTART("XMKZ")=XMKZ
"RTN","XMXLIST1",54,0)
 S @(XMTROOT_"0)")=XMCNT_U_XMAMT
"RTN","XMXLIST1",55,0)
 ; Any more?
"RTN","XMXLIST1",56,0)
 I 'XMK S @(XMTROOT_"0)")=@(XMTROOT_"0)")_"^0" Q
"RTN","XMXLIST1",57,0)
 I '$O(^XMB(3.7,XMDUZ,2,XMK)),'$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ),XMORDER) S @(XMTROOT_"0)")=@(XMTROOT_"0)")_"^0" Q
"RTN","XMXLIST1",58,0)
 I '$D(XMF) S @(XMTROOT_"0)")=@(XMTROOT_"0)")_"^1" Q
"RTN","XMXLIST1",59,0)
 N XMORE
"RTN","XMXLIST1",60,0)
 S XMORE=0,XMK=XMK-.01
"RTN","XMXLIST1",61,0)
 F  S XMK=$O(^XMB(3.7,XMDUZ,2,XMK)) Q:'XMK  D  Q:XMORE
"RTN","XMXLIST1",62,0)
 . F  S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ),XMORDER) Q:'XMKZ  D  Q:XMORE
"RTN","XMXLIST1",63,0)
 . . I '$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)) D ADDITC^XMUT4A(XMDUZ,XMK,XMZ,XMKZ)
"RTN","XMXLIST1",64,0)
 . . I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMXLIST1",65,0)
 . . I $$GOODMSG^XMJMFB(XMDUZ,XMK,XMZ,.XMF) S XMORE=1
"RTN","XMXLIST1",66,0)
 S @(XMTROOT_"0)")=@(XMTROOT_"0)")_U_XMORE
"RTN","XMXLIST1",67,0)
 Q
"RTN","XMXLIST1",68,0)
REGAZ(XMDUZ,XMORDER,XMFLDS,XMAMT,XMSTART,XMF,XMTROOT) ; Messages (by IEN) in all baskets
"RTN","XMXLIST1",69,0)
 N XMCNT,XMK,XMKN,XMZ
"RTN","XMXLIST1",70,0)
 S XMCNT=0
"RTN","XMXLIST1",71,0)
 S XMK=+$G(XMSTART("XMK")) I XMK S XMK=XMK-.01
"RTN","XMXLIST1",72,0)
 S XMZ=$G(XMSTART("XMZ"))
"RTN","XMXLIST1",73,0)
 F  S XMK=$O(^XMB(3.7,XMDUZ,2,XMK)) Q:'XMK  D  Q:XMCNT=XMAMT
"RTN","XMXLIST1",74,0)
 . S XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1)
"RTN","XMXLIST1",75,0)
 . I +XMZ=0 S XMZ=0 I XMORDER=-1 S XMZ=":"
"RTN","XMXLIST1",76,0)
 . F  S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,XMZ),XMORDER) Q:'XMZ  D  Q:XMCNT=XMAMT
"RTN","XMXLIST1",77,0)
 . . I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMXLIST1",78,0)
 . . I $D(XMF) Q:'$$GOODMSG^XMJMFB(XMDUZ,XMK,XMZ,.XMF)
"RTN","XMXLIST1",79,0)
 . . S XMCNT=XMCNT+1
"RTN","XMXLIST1",80,0)
 . . S @(XMTROOT_XMCNT_")")=XMZ
"RTN","XMXLIST1",81,0)
 . . Q:'$D(XMFLDS)
"RTN","XMXLIST1",82,0)
 . . D FIELDS(XMDUZ,XMK,XMKN,XMZ,.XMFLDS,XMTROOT,XMCNT)
"RTN","XMXLIST1",83,0)
 . . I XMFLDS["SEQN" D KSEQN(XMDUZ,XMK,XMZ,.XMFLDS,XMTROOT,XMCNT)
"RTN","XMXLIST1",84,0)
 S XMSTART("XMK")=XMK
"RTN","XMXLIST1",85,0)
 S XMSTART("XMZ")=XMZ
"RTN","XMXLIST1",86,0)
 S @(XMTROOT_"0)")=XMCNT_U_XMAMT
"RTN","XMXLIST1",87,0)
 ; Any more?
"RTN","XMXLIST1",88,0)
 I 'XMK S @(XMTROOT_"0)")=@(XMTROOT_"0)")_"^0" Q
"RTN","XMXLIST1",89,0)
 I '$O(^XMB(3.7,XMDUZ,2,XMK)),'$O(^XMB(3.7,XMDUZ,2,XMK,1,XMZ),XMORDER) S @(XMTROOT_"0)")=@(XMTROOT_"0)")_"^0" Q
"RTN","XMXLIST1",90,0)
 I '$D(XMF) S @(XMTROOT_"0)")=@(XMTROOT_"0)")_"^1" Q
"RTN","XMXLIST1",91,0)
 N XMORE
"RTN","XMXLIST1",92,0)
 S XMORE=0,XMK=XMK-.01
"RTN","XMXLIST1",93,0)
 F  S XMK=$O(^XMB(3.7,XMDUZ,2,XMK)) Q:'XMK  D  Q:XMORE
"RTN","XMXLIST1",94,0)
 . I +XMZ=0 S XMZ=0 I XMORDER=-1 S XMZ=":"
"RTN","XMXLIST1",95,0)
 . F  S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,XMZ),XMORDER) Q:'XMZ  D  Q:XMORE
"RTN","XMXLIST1",96,0)
 . . I '$D(^XMB(3.9,XMZ,0)) D ZAPIT^XMXMSGS2(XMDUZ,XMK,XMZ) Q
"RTN","XMXLIST1",97,0)
 . . I $$GOODMSG^XMJMFB(XMDUZ,XMK,XMZ,.XMF) S XMORE=1
"RTN","XMXLIST1",98,0)
 S @(XMTROOT_"0)")=@(XMTROOT_"0)")_U_XMORE
"RTN","XMXLIST1",99,0)
 Q
"RTN","XMXLIST1",100,0)
FIELDS(XMDUZ,XMK,XMKN,XMZ,XMFLDS,XMTROOT,XMCNT) ;
"RTN","XMXLIST1",101,0)
 N XMZREC,XMLOOK,XMVAL
"RTN","XMXLIST1",102,0)
 S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMXLIST1",103,0)
 I XMFLDS["BSKT" D
"RTN","XMXLIST1",104,0)
 . S XMLOOK=$P($P(XMFLDS,"BSKT",2),";",1)
"RTN","XMXLIST1",105,0)
 . S @(XMTROOT_XMCNT_",""BSKT"")")=XMK_$S(XMLOOK["I":"",1:U_XMKN)
"RTN","XMXLIST1",106,0)
 . I XMLOOK["X" S @(XMTROOT_"""BSKT"",XMKN,XMCNT)")=""
"RTN","XMXLIST1",107,0)
 I XMFLDS["FROM" D
"RTN","XMXLIST1",108,0)
 . S XMLOOK=$P($P(XMFLDS,"FROM",2),";",1)
"RTN","XMXLIST1",109,0)
 . I XMLOOK["I" S @(XMTROOT_XMCNT_",""FROM"")")=$P(XMZREC,U,2) Q:XMLOOK'["X"
"RTN","XMXLIST1",110,0)
 . S XMVAL=$$FROM^XMXUTIL2(XMZREC)
"RTN","XMXLIST1",111,0)
 . I $E(XMVAL)="<" S XMVAL=$E(XMVAL,2,$L(XMVAL)-1)
"RTN","XMXLIST1",112,0)
 . I XMLOOK'["I" S @(XMTROOT_XMCNT_",""FROM"")")=$P(XMZREC,U,2)_U_XMVAL Q:XMLOOK'["X"
"RTN","XMXLIST1",113,0)
 . S @(XMTROOT_"""FROM"",XMVAL,XMCNT)")=""
"RTN","XMXLIST1",114,0)
 I XMFLDS["DATE" D
"RTN","XMXLIST1",115,0)
 . S XMLOOK=$P($P(XMFLDS,"DATE",2),";",1)
"RTN","XMXLIST1",116,0)
 . I XMLOOK'["X" D  Q
"RTN","XMXLIST1",117,0)
 . . I XMLOOK["I" S @(XMTROOT_XMCNT_",""DATE"")")=$P(XMZREC,U,3) Q
"RTN","XMXLIST1",118,0)
 . . I XMLOOK["F" D  Q
"RTN","XMXLIST1",119,0)
 . . . S XMVAL=$P(XMZREC,U,3)
"RTN","XMXLIST1",120,0)
 . . . I XMVAL'?7N.E S XMVAL=$$CONVERT^XMXUTIL1(XMVAL,1) I XMVAL=-1 S XMVAL=$P(XMZREC,U,3)
"RTN","XMXLIST1",121,0)
 . . . S @(XMTROOT_XMCNT_",""DATE"")")=$P(XMZREC,U,3)_U_XMVAL
"RTN","XMXLIST1",122,0)
 . . S @(XMTROOT_XMCNT_",""DATE"")")=$P(XMZREC,U,3)_U_$$DATE^XMXUTIL2(XMZREC)
"RTN","XMXLIST1",123,0)
 . S XMVAL=$P(XMZREC,U,3)
"RTN","XMXLIST1",124,0)
 . I XMVAL'?7N.E S XMVAL=$$CONVERT^XMXUTIL1(XMVAL,1)
"RTN","XMXLIST1",125,0)
 . S @(XMTROOT_"""DATE"",XMVAL,XMCNT)")=""
"RTN","XMXLIST1",126,0)
 . I XMLOOK["I" S @(XMTROOT_XMCNT_",""DATE"")")=$P(XMZREC,U,3) Q
"RTN","XMXLIST1",127,0)
 . I XMLOOK["F" S @(XMTROOT_XMCNT_",""DATE"")")=$P(XMZREC,U,3)_U_XMVAL Q
"RTN","XMXLIST1",128,0)
 . S @(XMTROOT_XMCNT_",""DATE"")")=$P(XMZREC,U,3)_U_$$DATE^XMXUTIL2(XMZREC)
"RTN","XMXLIST1",129,0)
 I XMFLDS["SUBJ" D
"RTN","XMXLIST1",130,0)
 . S XMLOOK=$P($P(XMFLDS,"SUBJ",2),";",1)
"RTN","XMXLIST1",131,0)
 . I XMLOOK'["X" S @(XMTROOT_XMCNT_",""SUBJ"")")=$$SUBJ^XMXUTIL2(XMZREC) Q
"RTN","XMXLIST1",132,0)
 . S XMVAL=$$SUBJ^XMXUTIL2(XMZREC)
"RTN","XMXLIST1",133,0)
 . S @(XMTROOT_XMCNT_",""SUBJ"")")=XMVAL
"RTN","XMXLIST1",134,0)
 . S @(XMTROOT_"""SUBJ"",XMVAL,XMCNT)")=""
"RTN","XMXLIST1",135,0)
 I XMFLDS["LINE" S @(XMTROOT_XMCNT_",""LINE"")")=$$LINE^XMXUTIL2(XMZ)
"RTN","XMXLIST1",136,0)
 I XMFLDS["PRI" S @(XMTROOT_XMCNT_",""PRI"")")=$$PRI^XMXUTIL2(XMZREC)
"RTN","XMXLIST1",137,0)
 I XMFLDS["NEW" S @(XMTROOT_XMCNT_",""NEW"")")=$$NEW^XMXUTIL2(XMDUZ,XMK,XMZ)
"RTN","XMXLIST1",138,0)
 I XMFLDS["RESP" S @(XMTROOT_XMCNT_",""RESP"")")=$$RESP^XMXUTIL2(XMZ)
"RTN","XMXLIST1",139,0)
 I XMFLDS["READ" S @(XMTROOT_XMCNT_",""READ"")")=$$ZREAD^XMXUTIL2(XMDUZ,XMZ)
"RTN","XMXLIST1",140,0)
 Q
"RTN","XMXLIST1",141,0)
KSEQN(XMDUZ,XMK,XMZ,XMFLDS,XMTROOT,XMCNT) ;
"RTN","XMXLIST1",142,0)
 S @(XMTROOT_XMCNT_",""SEQN"")")=$$KSEQN^XMXUTIL2(XMDUZ,XMK,XMZ)
"RTN","XMXLIST1",143,0)
 Q
"RTN","XMXLIST1",144,0)
SEQN(XMDUZ,XMKZ,XMFLDS,XMTROOT,XMCNT) ;
"RTN","XMXLIST1",145,0)
 S @(XMTROOT_XMCNT_",""SEQN"")")=XMKZ
"RTN","XMXLIST1",146,0)
 Q
"RTN","XMXMBOX")
0^53^B3198907
"RTN","XMXMBOX",1,0)
XMXMBOX ;ISC-SF/GMB- Mailbox APIs ;03/03/99  07:56
"RTN","XMXMBOX",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXMBOX",3,0)
QMBOX(XMDUZ,XMMSG) ; Message counts for a mailbox
"RTN","XMXMBOX",4,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXMBOX",5,0)
 S XMMSG=""
"RTN","XMXMBOX",6,0)
 I XMDUZ'=DUZ,'$$RPRIV^XMXSEC  Q
"RTN","XMXMBOX",7,0)
 S XMMSG=$$NEWS^XMXUTIL(XMDUZ)
"RTN","XMXMBOX",8,0)
 Q
"RTN","XMXMBOX",9,0)
FLTRMBOX(XMDUZ,XMMSG) ; Filter all the messages in a user's mailbox.
"RTN","XMXMBOX",10,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXMBOX",11,0)
 S XMMSG=""
"RTN","XMXMBOX",12,0)
 I XMDUZ'=DUZ,'$$RPRIV^XMXSEC Q
"RTN","XMXMBOX",13,0)
 N XMK
"RTN","XMXMBOX",14,0)
 S XMK=.99
"RTN","XMXMBOX",15,0)
 F  S XMK=$O(^XMB(3.7,XMDUZ,2,XMK)) Q:XMK'>0!(XMDUZ=.5&(XMK>999))  D
"RTN","XMXMBOX",16,0)
 . D FLTRBSKT^XMXBSKT(XMDUZ,XMK)
"RTN","XMXMBOX",17,0)
 S XMMSG="Mailbox filtered."
"RTN","XMXMBOX",18,0)
 Q
"RTN","XMXMBOX",19,0)
CRE8MBOX(XMDUZ,XMDATE) ; Create a Mailbox for a user
"RTN","XMXMBOX",20,0)
 ; XMDUZ  The user's DUZ
"RTN","XMXMBOX",21,0)
 ; XMDATE The user has been reinstated after not having worked here a
"RTN","XMXMBOX",22,0)
 ;        while.  Please note the earliest message date which the user
"RTN","XMXMBOX",23,0)
 ;        may access, and don't let the user access any messages before
"RTN","XMXMBOX",24,0)
 ;        that date, except for any which someone might forward to the
"RTN","XMXMBOX",25,0)
 ;        user.
"RTN","XMXMBOX",26,0)
 ;        =fileman date or any supported date format that FileMan
"RTN","XMXMBOX",27,0)
 ;         recognizes- The user may not access any before this date.
"RTN","XMXMBOX",28,0)
 ;        =0      - (default) The user may access any old msgs which had
"RTN","XMXMBOX",29,0)
 ;                  been addressed to the user.
"RTN","XMXMBOX",30,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXMBOX",31,0)
 ;I DUZ'=.5,'$$POSTPRIV^XMXSEC Q
"RTN","XMXMBOX",32,0)
 I '$D(^XMB(3.7,XMDUZ,0)) D
"RTN","XMXMBOX",33,0)
 . N XMFDA,XMIEN
"RTN","XMXMBOX",34,0)
 . S XMFDA(3.7,"+1,",.01)=XMDUZ
"RTN","XMXMBOX",35,0)
 . S XMIEN(1)=XMDUZ
"RTN","XMXMBOX",36,0)
 . D UPDATE^DIE("","XMFDA","XMIEN")
"RTN","XMXMBOX",37,0)
 D:'$D(^XMB(3.7,XMDUZ,2,.5,0)) MAKEBSKT^XMXBSKT(XMDUZ,.5,"WASTE")
"RTN","XMXMBOX",38,0)
 D:'$D(^XMB(3.7,XMDUZ,2,1,0)) MAKEBSKT^XMXBSKT(XMDUZ,1,"IN")
"RTN","XMXMBOX",39,0)
 ; Limit message access at reinstatement?
"RTN","XMXMBOX",40,0)
 Q:$G(XMDATE)=""
"RTN","XMXMBOX",41,0)
 N XMRESULT
"RTN","XMXMBOX",42,0)
 D VAL^DIE(3.7,XMDUZ_",",1.2,"",XMDATE,.XMRESULT)
"RTN","XMXMBOX",43,0)
 I XMRESULT=U D  Q
"RTN","XMXMBOX",44,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)=^TMP("DIERR",$J,1,"TEXT",1)
"RTN","XMXMBOX",45,0)
 . K DIERR,^TMP("DIERR",$J)
"RTN","XMXMBOX",46,0)
 S $P(^XMB(3.7,XMDUZ,0),U,7)=XMRESULT
"RTN","XMXMBOX",47,0)
 Q
"RTN","XMXMBOX",48,0)
TERMMBOX(XMDUZ) ; Terminate a user's Mailbox
"RTN","XMXMBOX",49,0)
 ; (Delete all traces of a user in MailMan)
"RTN","XMXMBOX",50,0)
 ; XMDUZ  The user's DUZ
"RTN","XMXMBOX",51,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXMBOX",52,0)
 I DUZ'=.5,'$$POSTPRIV^XMXSEC Q
"RTN","XMXMBOX",53,0)
 D TERMINAT^XMUTERM1(XMDUZ)
"RTN","XMXMBOX",54,0)
 Q
"RTN","XMXMSGS")
0^54^B36576680
"RTN","XMXMSGS",1,0)
XMXMSGS ;ISC-SF/GMB- Message APIs ;05/26/99  08:04
"RTN","XMXMSGS",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXMSGS",3,0)
DELMSG(XMDUZ,XMK,XMKZA,XMMSG) ;
"RTN","XMXMSGS",4,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXMSGS",5,0)
 I XMDUZ'=DUZ,'$$RPRIV^XMXSEC Q
"RTN","XMXMSGS",6,0)
 D ACTMSG("XDEL^XMXMSGS2") ;,XMDUZ,XMK,.XMKZA,"",.XMMSG)
"RTN","XMXMSGS",7,0)
 S XMMSG=XMMSG_" deleted."
"RTN","XMXMSGS",8,0)
 Q
"RTN","XMXMSGS",9,0)
MOVEMSG(XMDUZ,XMK,XMKZA,XMKTO,XMMSG) ;
"RTN","XMXMSGS",10,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXMSGS",11,0)
 I XMDUZ'=DUZ,'$$RPRIV^XMXSEC Q
"RTN","XMXMSGS",12,0)
 Q:XMK=XMKTO
"RTN","XMXMSGS",13,0)
 D ACTMSG("XMOVE^XMXMSGS2") ;,XMDUZ,XMK,.XMKZA,XMKTO,.XMMSG)
"RTN","XMXMSGS",14,0)
 S XMMSG=XMMSG_" saved."
"RTN","XMXMSGS",15,0)
 Q
"RTN","XMXMSGS",16,0)
TERMMSG(XMDUZ,XMK,XMKZA,XMMSG) ;
"RTN","XMXMSGS",17,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXMSGS",18,0)
 I XMDUZ'=DUZ,'$$RPRIV^XMXSEC Q
"RTN","XMXMSGS",19,0)
 D ACTMSG("XTERM^XMXMSGS2") ;,XMDUZ,XMK,.XMKZA,"",.XMMSG)
"RTN","XMXMSGS",20,0)
 S XMMSG=XMMSG_" terminated."
"RTN","XMXMSGS",21,0)
 Q
"RTN","XMXMSGS",22,0)
FLTRMSG(XMDUZ,XMK,XMKZA,XMMSG) ;
"RTN","XMXMSGS",23,0)
 N XMKN,XMKTO,XMKNTO
"RTN","XMXMSGS",24,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXMSGS",25,0)
 I XMDUZ'=DUZ,'$$RPRIV^XMXSEC Q
"RTN","XMXMSGS",26,0)
 I XMK'=.5,'$D(^XMB(3.7,XMDUZ,15,"AF")) D  Q
"RTN","XMXMSGS",27,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="You have no message filters defined."
"RTN","XMXMSGS",28,0)
 S:XMK XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1)
"RTN","XMXMSGS",29,0)
 D ACTMSG("XFLTR^XMXMSGS2") ;,XMDUZ,XMK,XMKN,.XMKZA,"",.XMMSG)
"RTN","XMXMSGS",30,0)
 S XMMSG=XMMSG_" filtered."
"RTN","XMXMSGS",31,0)
 Q
"RTN","XMXMSGS",32,0)
FWDMSG(XMDUZ,XMK,XMKZA,XMTO,XMINSTR,XMMSG) ;
"RTN","XMXMSGS",33,0)
 ; XMINSTR("SHARE DATE")  delete date if SHARED,MAIL is recipient
"RTN","XMXMSGS",34,0)
 ; XMINSTR("SHARE BSKT")  basket if SHARED,MAIL is recipient
"RTN","XMXMSGS",35,0)
 N XMRTN
"RTN","XMXMSGS",36,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXMSGS",37,0)
 I XMDUZ'=DUZ,'$$RPRIV^XMXSEC Q
"RTN","XMXMSGS",38,0)
 I $$ONEMSG(.XMKZA) D
"RTN","XMXMSGS",39,0)
 . S XMRTN="XFWDONE^XMXMSGS1" ; just one msg
"RTN","XMXMSGS",40,0)
 E  D
"RTN","XMXMSGS",41,0)
 . S XMRTN="XFWD^XMXMSGS1"
"RTN","XMXMSGS",42,0)
 . I $G(XMINSTR("ADDR FLAGS"))'["I" D INIT^XMXADDR
"RTN","XMXMSGS",43,0)
 . D CHKADDR^XMXADDR(XMDUZ,.XMTO,.XMINSTR)
"RTN","XMXMSGS",44,0)
 D ACTMSG(XMRTN) ;,XMDUZ,XMK,.XMKZA,.XMINSTR,.XMMSG)
"RTN","XMXMSGS",45,0)
 D CLEANUP^XMXADDR
"RTN","XMXMSGS",46,0)
 S XMMSG=XMMSG_" forwarded."
"RTN","XMXMSGS",47,0)
 Q
"RTN","XMXMSGS",48,0)
ONEMSG(XMKZA) ; Function decides if just one message
"RTN","XMXMSGS",49,0)
 N XMONE,XMMSGS
"RTN","XMXMSGS",50,0)
 I $G(XMKZA)]"" D  Q XMONE
"RTN","XMXMSGS",51,0)
 . I $O(XMKZA(""))="",+XMKZA=XMKZA S XMONE=1 Q
"RTN","XMXMSGS",52,0)
 . S XMONE=0
"RTN","XMXMSGS",53,0)
 S XMMSGS=$O(XMKZA(""))
"RTN","XMXMSGS",54,0)
 I $O(XMKZA(XMMSGS))'="" Q 0
"RTN","XMXMSGS",55,0)
 I +XMMSGS=XMMSGS Q 1
"RTN","XMXMSGS",56,0)
 Q 0
"RTN","XMXMSGS",57,0)
LATERMSG(XMDUZ,XMK,XMKZA,XMINSTR,XMMSG) ;
"RTN","XMXMSGS",58,0)
 ; XMINSTR("LATER")  FM date/time when msg should be made new.
"RTN","XMXMSGS",59,0)
 N XMWHEN
"RTN","XMXMSGS",60,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXMSGS",61,0)
 Q:'$$LATER^XMXSEC(XMDUZ)
"RTN","XMXMSGS",62,0)
 D ACTMSG("XLATER^XMXMSGS2") ;,XMDUZ,XMK,.XMKZA,.XMINSTR,.XMMSG)
"RTN","XMXMSGS",63,0)
 S XMMSG=XMMSG_" latered."
"RTN","XMXMSGS",64,0)
 Q
"RTN","XMXMSGS",65,0)
PRTMSG(XMDUZ,XMK,XMKZA,XMPRTTO,XMINSTR,XMMSG,XMTASK,XMSUBJ,XMTO) ;
"RTN","XMXMSGS",66,0)
 K XMERR,^TMP("XMERR",$J),^TMP("XM",$J,"XMZ")
"RTN","XMXMSGS",67,0)
 D ACTMSG("XPRT^XMXMSGS1") ;,XMDUZ,XMK,.XMKZA,.XMINSTR,.XMMSG)
"RTN","XMXMSGS",68,0)
 S XMMSG=XMMSG_" sent to printer."
"RTN","XMXMSGS",69,0)
 Q:+XMMSG=0
"RTN","XMXMSGS",70,0)
 I +XMMSG=1 D
"RTN","XMXMSGS",71,0)
 . D PRINT1^XMXPRT(XMDUZ,$O(^TMP("XM",$J,"XMZ","")),XMPRTTO,.XMINSTR,.XMTASK,.XMSUBJ,.XMTO)
"RTN","XMXMSGS",72,0)
 E  D
"RTN","XMXMSGS",73,0)
 . D PRINTM^XMXPRT(XMDUZ,XMPRTTO,.XMINSTR,.XMTASK,.XMSUBJ,.XMTO)
"RTN","XMXMSGS",74,0)
 K ^TMP("XM",$J,"XMZ")
"RTN","XMXMSGS",75,0)
 Q:$D(XMTASK)
"RTN","XMXMSGS",76,0)
 S XMMSG="0 messages sent to printer.  TaskMan Problem."
"RTN","XMXMSGS",77,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Problem setting up TaskMan task."
"RTN","XMXMSGS",78,0)
 Q
"RTN","XMXMSGS",79,0)
XPMSG(XMDUZ,XMK,XMKZA,XMMSG) ; Postmaster transmit priority toggle
"RTN","XMXMSGS",80,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXMSGS",81,0)
 I XMDUZ'=DUZ,'$$RPRIV^XMXSEC Q
"RTN","XMXMSGS",82,0)
 I XMDUZ'=.5!(XMK'>999) D  Q
"RTN","XMXMSGS",83,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Transmission Priority toggle valid only for Postmaster Transmission Queues."
"RTN","XMXMSGS",84,0)
 D ACTMSG("XXP^XMXMSGS1") ;,XMDUZ,XMK,.XMKZA,"",.XMMSG)
"RTN","XMXMSGS",85,0)
 S XMMSG=XMMSG_" transmission priority toggled."
"RTN","XMXMSGS",86,0)
 Q
"RTN","XMXMSGS",87,0)
ACTMSG(XMRTN) ;,XMDUZ,XMK,XMKZA,XMKTO,XMMSG)
"RTN","XMXMSGS",88,0)
 ; XMKZA    Array of msg numbers  DEL("1-3,7,11-15")
"RTN","XMXMSGS",89,0)
 ; XMKZL    List of msg numbers   1-3,7,11-15
"RTN","XMXMSGS",90,0)
 ;          (It is OK if the list ends with a comma)
"RTN","XMXMSGS",91,0)
 ; XMKZR    Range of msg numbers  1-3
"RTN","XMXMSGS",92,0)
 ; XMKZ1    First number in range 1
"RTN","XMXMSGS",93,0)
 ; XMKZN    Last number in range  3
"RTN","XMXMSGS",94,0)
 ; XMKZ     Message number
"RTN","XMXMSGS",95,0)
 N XMCNT,XMI,XMZ,XMPIECES
"RTN","XMXMSGS",96,0)
 S XMCNT=0
"RTN","XMXMSGS",97,0)
 I $G(XMK) D
"RTN","XMXMSGS",98,0)
 . N XMKZ,XMKZL,XMKZR,XMKZ1,XMKZN
"RTN","XMXMSGS",99,0)
 . ; is this an array or a variable?
"RTN","XMXMSGS",100,0)
 . I $G(XMKZA)]"",$O(XMKZA(""))="" S XMKZA(XMKZA)=""
"RTN","XMXMSGS",101,0)
 . S XMKZL=""
"RTN","XMXMSGS",102,0)
 . F  S XMKZL=$O(XMKZA(XMKZL)) Q:XMKZL=""  D
"RTN","XMXMSGS",103,0)
 . . S XMPIECES=$L(XMKZL,",")
"RTN","XMXMSGS",104,0)
 . . S:$P(XMKZL,",",XMPIECES)="" XMPIECES=XMPIECES-1
"RTN","XMXMSGS",105,0)
 . . F XMI=1:1:XMPIECES D
"RTN","XMXMSGS",106,0)
 . . . S XMKZR=$P(XMKZL,",",XMI)
"RTN","XMXMSGS",107,0)
 . . . I XMKZR["-" D
"RTN","XMXMSGS",108,0)
 . . . . ; deal with a range of msg #s
"RTN","XMXMSGS",109,0)
 . . . . S XMKZ1=$P(XMKZR,"-",1)
"RTN","XMXMSGS",110,0)
 . . . . S XMKZN=$P(XMKZR,"-",2)
"RTN","XMXMSGS",111,0)
 . . . . I XMKZ1>XMKZN S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Range '"_XMKZ1_"-"_XMKZN_"' invalid." Q
"RTN","XMXMSGS",112,0)
 . . . . S XMKZ=XMKZ1-.1
"RTN","XMXMSGS",113,0)
 . . . . F  S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ)) Q:'XMKZ!(XMKZ>XMKZN)  D
"RTN","XMXMSGS",114,0)
 . . . . . S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,""))
"RTN","XMXMSGS",115,0)
 . . . . . I 'XMZ S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Message "_XMKZ_" in basket "_XMK_" does not exist." Q
"RTN","XMXMSGS",116,0)
 . . . . . I '$D(^XMB(3.9,XMZ,0)) S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Message '"_XMZ_"' (message "_XMKZ_" in basket "_XMK_") does not exist." Q
"RTN","XMXMSGS",117,0)
 . . . . . D @XMRTN ;(XMDUZ,XMK,XMZ)
"RTN","XMXMSGS",118,0)
 . . . E  D
"RTN","XMXMSGS",119,0)
 . . . . S XMKZ=XMKZR
"RTN","XMXMSGS",120,0)
 . . . . S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,""))
"RTN","XMXMSGS",121,0)
 . . . . I 'XMZ S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Message "_XMKZ_" in basket "_XMK_" does not exist." Q
"RTN","XMXMSGS",122,0)
 . . . . I '$D(^XMB(3.9,XMZ,0)) S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Message '"_XMZ_"' (message "_XMKZ_" in basket "_XMK_") does not exist." Q
"RTN","XMXMSGS",123,0)
 . . . . D @XMRTN ;(XMDUZ,XMK,XMZ)
"RTN","XMXMSGS",124,0)
 E  D
"RTN","XMXMSGS",125,0)
 . N XMZL,XMZREC
"RTN","XMXMSGS",126,0)
 . ; is this an array or a variable?
"RTN","XMXMSGS",127,0)
 . I $G(XMKZA)]"",$O(XMKZA(""))="" S XMKZA(XMKZA)=""
"RTN","XMXMSGS",128,0)
 . S XMZL=""
"RTN","XMXMSGS",129,0)
 . F  S XMZL=$O(XMKZA(XMZL)) Q:XMZL=""  D
"RTN","XMXMSGS",130,0)
 . . I XMZL["-" D  Q
"RTN","XMXMSGS",131,0)
 . . . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="XMZ message ranges are not allowed."
"RTN","XMXMSGS",132,0)
 . . S XMPIECES=$L(XMZL,",")
"RTN","XMXMSGS",133,0)
 . . S:'$P(XMZL,",",XMPIECES) XMPIECES=XMPIECES-1
"RTN","XMXMSGS",134,0)
 . . F XMI=1:1:XMPIECES D
"RTN","XMXMSGS",135,0)
 . . . N XMK
"RTN","XMXMSGS",136,0)
 . . . S XMZ=$P(XMZL,",",XMI)
"RTN","XMXMSGS",137,0)
 . . . I '$D(^XMB(3.9,XMZ,0)) S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Message '"_XMZ_"'  does not exist." Q
"RTN","XMXMSGS",138,0)
 . . . S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMXMSGS",139,0)
 . . . Q:'$$ACCESS^XMXSEC(XMDUZ,XMZ,XMZREC)
"RTN","XMXMSGS",140,0)
 . . . D @XMRTN ;(XMDUZ,XMK,XMZ)
"RTN","XMXMSGS",141,0)
 S XMMSG=XMCNT_" message"_$S(XMCNT=1:"",1:"s")
"RTN","XMXMSGS",142,0)
 Q
"RTN","XMXMSGS1")
0^55^B26680795
"RTN","XMXMSGS1",1,0)
XMXMSGS1 ;ISC-SF/GMB- Message APIs (cont'd) ;03/24/99  15:09
"RTN","XMXMSGS1",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXMSGS1",3,0)
FWD(XMDUZ,XMZ,XMINSTR,XMCNT) ;
"RTN","XMXMSGS1",4,0)
XFWD ; (Need XMDUZ, XMZ, XMINSTR.  XMK not needed.)
"RTN","XMXMSGS1",5,0)
 ; XMZREC   Zero node of the msg record
"RTN","XMXMSGS1",6,0)
 N XMZREC,%X,%Y,XMRESTR
"RTN","XMXMSGS1",7,0)
 S XMZREC=^XMB(3.9,XMZ,0)
"RTN","XMXMSGS1",8,0)
 Q:'$$FORWARD^XMXSEC(XMDUZ,XMZ,XMZREC)
"RTN","XMXMSGS1",9,0)
 D GETRESTR^XMXSEC1(XMDUZ,XMZ,XMZREC,.XMINSTR,.XMRESTR)
"RTN","XMXMSGS1",10,0)
 D CHKSHARE(XMDUZ,XMZ,.XMRESTR)
"RTN","XMXMSGS1",11,0)
 I $G(XMINSTR("ADDR FLAGS"))'["R" D CHKRESTR(XMDUZ,XMZ,.XMRESTR)
"RTN","XMXMSGS1",12,0)
 D FWDIT(XMDUZ,XMZ,.XMINSTR,.XMCNT)
"RTN","XMXMSGS1",13,0)
 I $D(^TMP("XM",$J,"SAVE")) D RESTADDR
"RTN","XMXMSGS1",14,0)
 Q
"RTN","XMXMSGS1",15,0)
CHKSHARE(XMDUZ,XMZ,XMRESTR) ;
"RTN","XMXMSGS1",16,0)
 I $G(XMRESTR("FLAGS"))["C",$D(^TMP("XMY",$J,.6)) D
"RTN","XMXMSGS1",17,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXMSGS1",18,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="Message "_XMZ_" is confidential.  SHARED,MAIL removed as recipient."
"RTN","XMXMSGS1",19,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",2)="Confidential messages may not be forwarded to SHARED,MAIL."
"RTN","XMXMSGS1",20,0)
 . D SAVEADDR
"RTN","XMXMSGS1",21,0)
 . D CHKADDR^XMXADDR(XMDUZ,"-.6")
"RTN","XMXMSGS1",22,0)
 I $G(XMRESTR("FLAGS"))["X",$D(^TMP("XMY",$J,.6)) D
"RTN","XMXMSGS1",23,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXMSGS1",24,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="Message "_XMZ_" is closed.  SHARED,MAIL removed as recipient."
"RTN","XMXMSGS1",25,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",2)="Closed messages may not be forwarded to SHARED,MAIL."
"RTN","XMXMSGS1",26,0)
 . D SAVEADDR
"RTN","XMXMSGS1",27,0)
 . D CHKADDR^XMXADDR(XMDUZ,"-.6")
"RTN","XMXMSGS1",28,0)
 Q
"RTN","XMXMSGS1",29,0)
CHKRESTR(XMDUZ,XMZ,XMRESTR) ;
"RTN","XMXMSGS1",30,0)
 N XMTO
"RTN","XMXMSGS1",31,0)
 I $D(XMRESTR("NOFPG")) D
"RTN","XMXMSGS1",32,0)
 . ; The user is not allowed to forward this priority message to groups
"RTN","XMXMSGS1",33,0)
 . ; because s/he is not the originator and
"RTN","XMXMSGS1",34,0)
 . ; does not possess the proper security key.
"RTN","XMXMSGS1",35,0)
 . ; Search for any groups and delete them.
"RTN","XMXMSGS1",36,0)
 . N XMOK
"RTN","XMXMSGS1",37,0)
 . S XMTO="",XMOK=1
"RTN","XMXMSGS1",38,0)
 . F  S XMTO=$O(^TMP("XMY0",XMTO)) Q:XMTO'=+XMTO  D
"RTN","XMXMSGS1",39,0)
 . . Q:$E(XMTO,1,2)'="G."
"RTN","XMXMSGS1",40,0)
 . . S XMOK=0
"RTN","XMXMSGS1",41,0)
 . . I '$D(^TMP("XM",$J,"SAVE")) D SAVEADDR
"RTN","XMXMSGS1",42,0)
 . . D CHKADDR^XMXADDR(XMDUZ,"-"_XMTO)
"RTN","XMXMSGS1",43,0)
 . Q:XMOK
"RTN","XMXMSGS1",44,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXMSGS1",45,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="Priority message "_XMZ_" not forwarded to groups."
"RTN","XMXMSGS1",46,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",2)="Only message originator or XM GROUP PRIORITY key holders"
"RTN","XMXMSGS1",47,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",3)="may forward priority messages to groups."
"RTN","XMXMSGS1",48,0)
 I $D(XMRESTR("NONET")) D
"RTN","XMXMSGS1",49,0)
 . ; The user is not allowed to forward this message to remote sites
"RTN","XMXMSGS1",50,0)
 . ; because it exceeds the site maximum number of lines and
"RTN","XMXMSGS1",51,0)
 . ; s/he does not possess the proper security key.
"RTN","XMXMSGS1",52,0)
 . ; Search for any remote addressees and delete them.
"RTN","XMXMSGS1",53,0)
 . N XMOK
"RTN","XMXMSGS1",54,0)
 . S XMTO="",XMOK=1
"RTN","XMXMSGS1",55,0)
 . F  S XMTO=$O(^TMP("XMY0",XMTO)) Q:XMTO'=+XMTO  D
"RTN","XMXMSGS1",56,0)
 . . Q:XMTO'["@"
"RTN","XMXMSGS1",57,0)
 . . S XMOK=0
"RTN","XMXMSGS1",58,0)
 . . I '$D(^TMP("XM",$J,"SAVE")) D SAVEADDR
"RTN","XMXMSGS1",59,0)
 . . D CHKADDR^XMXADDR(XMDUZ,"-"_XMTO)
"RTN","XMXMSGS1",60,0)
 . Q:XMOK
"RTN","XMXMSGS1",61,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXMSGS1",62,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="Message "_XMZ_" not forwarded to remote recipients."
"RTN","XMXMSGS1",63,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",2)="Only XMMGR key holders may forward to remote sites"
"RTN","XMXMSGS1",64,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",3)="messages which exceed site maximum of "_XMRESTR("NONET")_" lines."
"RTN","XMXMSGS1",65,0)
 Q
"RTN","XMXMSGS1",66,0)
SAVEADDR ; Save addressees
"RTN","XMXMSGS1",67,0)
 S %X="^TMP(""XMY"",$J,",%Y="^TMP(""XM"",$J,""SAVE"",""XMY""," D %XY^%RCR
"RTN","XMXMSGS1",68,0)
 S %X="^TMP(""XMY0"",$J,",%Y="^TMP(""XM"",$J,""SAVE"",""XMY0""," D %XY^%RCR
"RTN","XMXMSGS1",69,0)
 Q
"RTN","XMXMSGS1",70,0)
RESTADDR ; Restore addressees
"RTN","XMXMSGS1",71,0)
 S %X="^TMP(""XM"",$J,""SAVE"",""XMY"",",%Y="^TMP(""XMY"",$J," D %XY^%RCR
"RTN","XMXMSGS1",72,0)
 S %X="^TMP(""XM"",$J,""SAVE"",""XMY0"",",%Y="^TMP(""XMY0"",$J," D %XY^%RCR
"RTN","XMXMSGS1",73,0)
 K ^TMP("XM",$J,"SAVE")
"RTN","XMXMSGS1",74,0)
 Q
"RTN","XMXMSGS1",75,0)
FWDONE(XMDUZ,XMZ,XMTO,XMINSTR,XMCNT) ; Forward one message
"RTN","XMXMSGS1",76,0)
XFWDONE ;
"RTN","XMXMSGS1",77,0)
 N XMZREC,XMRESTR
"RTN","XMXMSGS1",78,0)
 S XMZREC=^XMB(3.9,XMZ,0)
"RTN","XMXMSGS1",79,0)
 Q:'$$FORWARD^XMXSEC(XMDUZ,XMZ,XMZREC)
"RTN","XMXMSGS1",80,0)
 D:$G(XMINSTR("ADDR FLAGS"))'["I" INIT^XMXADDR
"RTN","XMXMSGS1",81,0)
 D:$G(XMINSTR("ADDR FLAGS"))'["R" GETRESTR^XMXSEC1(XMDUZ,XMZ,XMZREC,.XMRESTR)
"RTN","XMXMSGS1",82,0)
 D CHKADDR^XMXADDR(XMDUZ,.XMTO,.XMINSTR,.XMRESTR)
"RTN","XMXMSGS1",83,0)
 D FWDIT(XMDUZ,XMZ,.XMINSTR,.XMCNT)
"RTN","XMXMSGS1",84,0)
 Q
"RTN","XMXMSGS1",85,0)
FWDIT(XMDUZ,XMZ,XMINSTR,XMCNT) ;
"RTN","XMXMSGS1",86,0)
 I $D(^TMP("XMY",$J)) D  Q
"RTN","XMXMSGS1",87,0)
 . D FWD^XMKP(XMDUZ,XMZ,.XMINSTR)
"RTN","XMXMSGS1",88,0)
 . S:$D(XMCNT) XMCNT=XMCNT+1
"RTN","XMXMSGS1",89,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXMSGS1",90,0)
 S ^TMP("XMERR",$J,XMERR,"TEXT",1)="Message "_XMZ_" has no addressees.  Not forwarded."
"RTN","XMXMSGS1",91,0)
 Q
"RTN","XMXMSGS1",92,0)
PRT(XMDUZ,XMZ) ; Print
"RTN","XMXMSGS1",93,0)
XPRT ;
"RTN","XMXMSGS1",94,0)
 S ^TMP("XM",$J,"XMZ",XMZ)=""
"RTN","XMXMSGS1",95,0)
 S XMCNT=$G(XMCNT)+1
"RTN","XMXMSGS1",96,0)
 Q
"RTN","XMXMSGS1",97,0)
XP(XMDUZ,XMK,XMZ,XMCNT)      ;
"RTN","XMXMSGS1",98,0)
XXP ; Toggle Transmission Priority
"RTN","XMXMSGS1",99,0)
 S:'$G(XMK) XMK=$O(^XMB(3.7,"M",XMZ,XMDUZ,""))
"RTN","XMXMSGS1",100,0)
 I XMDUZ'=.5!(XMK'>999) D  Q
"RTN","XMXMSGS1",101,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Transmission Priority toggle valid only for Postmaster Transmission Queues."
"RTN","XMXMSGS1",102,0)
 N XMFDA
"RTN","XMXMSGS1",103,0)
 S XMFDA(3.702,XMZ_","_XMK_","_XMDUZ_",",6)=$S($P(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0),U,6):"@",1:1)
"RTN","XMXMSGS1",104,0)
 D FILE^DIE("","XMFDA")
"RTN","XMXMSGS1",105,0)
 S:$D(XMCNT) XMCNT=XMCNT+1
"RTN","XMXMSGS1",106,0)
 Q
"RTN","XMXMSGS1",107,0)
PUTSERV(XMKN,XMZ) ; Replaces SETSB^XMA1C (ISC-WASH/ACC/IHS)
"RTN","XMXMSGS1",108,0)
 ; Put message in Postmaster's basket for this server.
"RTN","XMXMSGS1",109,0)
 ; Create server basket as needed.
"RTN","XMXMSGS1",110,0)
 ; XMKN  Full server name (with S.)
"RTN","XMXMSGS1",111,0)
 ; XMZ   Message number
"RTN","XMXMSGS1",112,0)
 ;
"RTN","XMXMSGS1",113,0)
 ; Messages to server are saved in a mail basket of the
"RTN","XMXMSGS1",114,0)
 ; Postmaster much like transmission queues.  But while
"RTN","XMXMSGS1",115,0)
 ; Domain queues point at the domain file (domain#+1000),
"RTN","XMXMSGS1",116,0)
 ; Server baskets point at the option file (option#+10000).
"RTN","XMXMSGS1",117,0)
 N XMK
"RTN","XMXMSGS1",118,0)
 S XMK=$O(^DIC(19,"B",$E(XMKN,3,999),0)) Q:'XMK
"RTN","XMXMSGS1",119,0)
 S XMK=XMK+10000
"RTN","XMXMSGS1",120,0)
 D PUTMSG^XMXMSGS2(.5,XMK,XMKN,XMZ)
"RTN","XMXMSGS1",121,0)
 Q
"RTN","XMXMSGS1",122,0)
ZAPSERV(XMKN,XMZ) ; Replaces REMSBMSG^XMA1C (ISC-WASH/ACC/IHS)
"RTN","XMXMSGS1",123,0)
 ; Remove message from server basket
"RTN","XMXMSGS1",124,0)
 ; XMKN  Full server name (with S.)
"RTN","XMXMSGS1",125,0)
 ; XMZ   Message number
"RTN","XMXMSGS1",126,0)
 N XMK
"RTN","XMXMSGS1",127,0)
 S XMK=$O(^XMB(3.7,.5,2,"B",XMKN,0)) Q:'XMK  Q:XMK'>10000
"RTN","XMXMSGS1",128,0)
 D ZAPIT^XMXMSGS2(.5,XMK,XMZ)
"RTN","XMXMSGS1",129,0)
 Q
"RTN","XMXMSGS2")
0^135^B21815566
"RTN","XMXMSGS2",1,0)
XMXMSGS2 ;ISC-SF/GMB- Message APIs cont'd ;02/19/99  06:37
"RTN","XMXMSGS2",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXMSGS2",3,0)
DEL(XMDUZ,XMK,XMZ,XMCNT) ;
"RTN","XMXMSGS2",4,0)
XDEL ;
"RTN","XMXMSGS2",5,0)
 ; See ENTB^XMAH:  May only delete spooled document from msg action prompt.  Why?****************
"RTN","XMXMSGS2",6,0)
 I XMDUZ'=DUZ,'$$DELETE^XMXSEC(XMDUZ,XMK,XMZ,$G(^XMB(3.9,XMZ,0))) Q
"RTN","XMXMSGS2",7,0)
 I '$G(XMK) S XMK=$O(^XMB(3.7,"M",XMZ,XMDUZ,"")) Q:'XMK
"RTN","XMXMSGS2",8,0)
 S XMCNT=$G(XMCNT)+1
"RTN","XMXMSGS2",9,0)
 D ZAPIT(XMDUZ,XMK,XMZ)
"RTN","XMXMSGS2",10,0)
 D WASTEIT(XMDUZ,XMK,XMZ)
"RTN","XMXMSGS2",11,0)
 Q
"RTN","XMXMSGS2",12,0)
MOVE(XMDUZ,XMK,XMZ,XMKTO,XMCNT) ;
"RTN","XMXMSGS2",13,0)
XMOVE ;
"RTN","XMXMSGS2",14,0)
 I XMDUZ=.6,'$$MOVE^XMXSEC(XMDUZ,XMZ,$G(^XMB(3.9,XMZ,0))) Q
"RTN","XMXMSGS2",15,0)
 S:'$G(XMK) XMK=$O(^XMB(3.7,"M",XMZ,XMDUZ,""))
"RTN","XMXMSGS2",16,0)
 Q:XMK=XMKTO
"RTN","XMXMSGS2",17,0)
 I XMK D
"RTN","XMXMSGS2",18,0)
 . D COPYIT(XMDUZ,XMK,XMZ,XMKTO)
"RTN","XMXMSGS2",19,0)
 . D ZAPIT(XMDUZ,XMK,XMZ)
"RTN","XMXMSGS2",20,0)
 ; The message is not in the user's mailbox
"RTN","XMXMSGS2",21,0)
 E  D PUTMSG(XMDUZ,XMKTO,$P(^XMB(3.7,XMDUZ,2,XMKTO,0),U),XMZ)
"RTN","XMXMSGS2",22,0)
 S XMCNT=$G(XMCNT)+1
"RTN","XMXMSGS2",23,0)
 Q
"RTN","XMXMSGS2",24,0)
TERM(XMDUZ,XMK,XMZ,XMCNT) ;
"RTN","XMXMSGS2",25,0)
XTERM ;
"RTN","XMXMSGS2",26,0)
 N XMIEN
"RTN","XMXMSGS2",27,0)
 I XMDUZ'=DUZ,'$$DELETE^XMXSEC(XMDUZ,XMK,XMZ,$G(^XMB(3.9,XMZ,0))) Q
"RTN","XMXMSGS2",28,0)
 S:'$G(XMK) XMK=$O(^XMB(3.7,"M",XMZ,XMDUZ,""))
"RTN","XMXMSGS2",29,0)
 I XMK D
"RTN","XMXMSGS2",30,0)
 . D ZAPIT(XMDUZ,XMK,XMZ)
"RTN","XMXMSGS2",31,0)
 . D WASTEIT(XMDUZ,XMK,XMZ)
"RTN","XMXMSGS2",32,0)
 S XMIEN=+$O(^XMB(3.9,XMZ,1,"C",XMDUZ,0))
"RTN","XMXMSGS2",33,0)
 S:XMIEN ^XMB(3.9,XMZ,1,XMIEN,"D")=DT
"RTN","XMXMSGS2",34,0)
 S XMCNT=$G(XMCNT)+1
"RTN","XMXMSGS2",35,0)
 Q
"RTN","XMXMSGS2",36,0)
ZAPIT(XMDUZ,XMK,XMZ) ;
"RTN","XMXMSGS2",37,0)
 N XMFDA
"RTN","XMXMSGS2",38,0)
 S XMFDA(3.702,XMZ_","_XMK_","_XMDUZ_",",.01)="@" ; delete msg
"RTN","XMXMSGS2",39,0)
 I $D(^XMB(3.7,XMDUZ,"N0",XMK,XMZ)) D  Q
"RTN","XMXMSGS2",40,0)
 . L +^XMB(3.7,XMDUZ) ; It's a new msg, reduce count of...
"RTN","XMXMSGS2",41,0)
 . S $P(^(0),U,6)=$P(^XMB(3.7,XMDUZ,0),U,6)-1 ; new msgs in all bskts
"RTN","XMXMSGS2",42,0)
 . S $P(^(0),U,2)=$P(^XMB(3.7,XMDUZ,2,XMK,0),U,2)-1 ; new msgs in bskt
"RTN","XMXMSGS2",43,0)
 . D FILE^DIE("","XMFDA")
"RTN","XMXMSGS2",44,0)
 . L -^XMB(3.7,XMDUZ)
"RTN","XMXMSGS2",45,0)
 L +^XMB(3.7,XMDUZ,2,XMK)
"RTN","XMXMSGS2",46,0)
 D FILE^DIE("","XMFDA")
"RTN","XMXMSGS2",47,0)
 L -^XMB(3.7,XMDUZ,2,XMK)
"RTN","XMXMSGS2",48,0)
 Q
"RTN","XMXMSGS2",49,0)
COPYIT(XMDUZ,XMK,XMZ,XMKTO) ;
"RTN","XMXMSGS2",50,0)
 Q:$D(^XMB(3.7,XMDUZ,2,XMKTO,1,XMZ))  ; Message already exists at destination
"RTN","XMXMSGS2",51,0)
 N XMFDA,XMKREC,XMIENS,XMIEN
"RTN","XMXMSGS2",52,0)
 S XMKREC=^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)
"RTN","XMXMSGS2",53,0)
 S XMIENS="+1,"_XMKTO_","_XMDUZ_","
"RTN","XMXMSGS2",54,0)
 S XMIEN(1)=XMZ
"RTN","XMXMSGS2",55,0)
 S XMFDA(3.702,XMIENS,.01)=XMZ
"RTN","XMXMSGS2",56,0)
 I $P(XMKREC,U,3),XMKTO'=.5 S XMFDA(3.702,XMIENS,3)=$P(XMKREC,U,3) ; new flag
"RTN","XMXMSGS2",57,0)
 S:$P(XMKREC,U,4) XMFDA(3.702,XMIENS,4)=$P(XMKREC,U,4) ; date last accessed
"RTN","XMXMSGS2",58,0)
 I '$P(XMKREC,U,7),$P(XMKREC,U,5) S XMFDA(3.702,XMIENS,5)=$P(XMKREC,U,5) ; vapor date
"RTN","XMXMSGS2",59,0)
 S:$P(XMKREC,U,6) XMFDA(3.702,XMIENS,6)=$P(XMKREC,U,6) ; ntwk msg flag
"RTN","XMXMSGS2",60,0)
 L +^XMB(3.7,XMDUZ)
"RTN","XMXMSGS2",61,0)
 D UPDATE^DIE("","XMFDA","XMIEN")
"RTN","XMXMSGS2",62,0)
 I $P(XMKREC,U,3),XMKTO'=.5 D INCRNEW^XMXUTIL(XMDUZ,XMKTO) ; Increment new counts
"RTN","XMXMSGS2",63,0)
 L -^XMB(3.7,XMDUZ)
"RTN","XMXMSGS2",64,0)
 D:XMK=.5 RESURECT(XMDUZ,XMZ)
"RTN","XMXMSGS2",65,0)
 Q
"RTN","XMXMSGS2",66,0)
RESURECT(XMDUZ,XMZ) ; If msg was terminated, "unterminate" it.
"RTN","XMXMSGS2",67,0)
 N XMIEN
"RTN","XMXMSGS2",68,0)
 S XMIEN=+$O(^XMB(3.9,XMZ,1,"C",XMDUZ,0))
"RTN","XMXMSGS2",69,0)
 K:XMIEN ^XMB(3.9,XMZ,1,XMIEN,"D")
"RTN","XMXMSGS2",70,0)
 Q
"RTN","XMXMSGS2",71,0)
WASTEIT(XMDUZ,XMK,XMZ) ;
"RTN","XMXMSGS2",72,0)
 Q:XMK=.5
"RTN","XMXMSGS2",73,0)
 Q:$D(^XMB(3.7,XMDUZ,2,.5,1,XMZ))  ; Already in wastebasket
"RTN","XMXMSGS2",74,0)
 N XMFDA,XMIENS,XMIEN
"RTN","XMXMSGS2",75,0)
 S XMK=.5
"RTN","XMXMSGS2",76,0)
 L +^XMB(3.7,XMDUZ)
"RTN","XMXMSGS2",77,0)
 D:'$D(^XMB(3.7,XMDUZ,2,.5,0)) MAKEBSKT^XMXBSKT(XMDUZ,.5,"WASTE")
"RTN","XMXMSGS2",78,0)
 S XMIENS="+1,"_XMK_","_XMDUZ_","
"RTN","XMXMSGS2",79,0)
 S XMIEN(1)=XMZ
"RTN","XMXMSGS2",80,0)
 S XMFDA(3.702,XMIENS,.01)=XMZ
"RTN","XMXMSGS2",81,0)
 S XMFDA(3.702,XMIENS,4)=DT  ; date last accessed
"RTN","XMXMSGS2",82,0)
 D UPDATE^DIE("","XMFDA","XMIEN")
"RTN","XMXMSGS2",83,0)
 L -^XMB(3.7,XMDUZ)
"RTN","XMXMSGS2",84,0)
 Q
"RTN","XMXMSGS2",85,0)
LATER(XMDUZ,XMZ,XMWHEN,XMCNT) ;
"RTN","XMXMSGS2",86,0)
XLATER ;
"RTN","XMXMSGS2",87,0)
 S XMCNT=$G(XMCNT)+1
"RTN","XMXMSGS2",88,0)
 S:'$D(XMWHEN) XMWHEN=XMINSTR("LATER")
"RTN","XMXMSGS2",89,0)
 D LTRADD^XMJMD(XMDUZ,XMZ,XMWHEN)
"RTN","XMXMSGS2",90,0)
 Q
"RTN","XMXMSGS2",91,0)
FLTR(XMDUZ,XMK,XMKN,XMZ,XMCNT,XMKTO,XMKNTO) ; Filter message
"RTN","XMXMSGS2",92,0)
XFLTR ;
"RTN","XMXMSGS2",93,0)
 ; XMK    (in) the basket # the message is currently in.  (May be 0 if
"RTN","XMXMSGS2",94,0)
 ;             the message isn't currently in a basket.)
"RTN","XMXMSGS2",95,0)
 ; XMKN   (in) the name of basket XMK
"RTN","XMXMSGS2",96,0)
 ; XMKTO  (out) the basket # this routine decides to put the message in
"RTN","XMXMSGS2",97,0)
 ; XMKNTO (out) the name of basket XMKTO
"RTN","XMXMSGS2",98,0)
 ; This routine decides which basket the message belongs in.
"RTN","XMXMSGS2",99,0)
 ; If this is the same basket it is currently in, it sets XMKTO and
"RTN","XMXMSGS2",100,0)
 ; XMKNTO to the current basket.
"RTN","XMXMSGS2",101,0)
 ; Otherwise, it moves the message (from the current basket) to the
"RTN","XMXMSGS2",102,0)
 ; decided-upon basket and sets XMKTO and XMKNTO to that basket.
"RTN","XMXMSGS2",103,0)
 ; If the message is in the WASTE basket, and no filters are defined,
"RTN","XMXMSGS2",104,0)
 ; it will be moved to the IN basket.
"RTN","XMXMSGS2",105,0)
 I '$G(XMK) D
"RTN","XMXMSGS2",106,0)
 . S XMK=$O(^XMB(3.7,"M",XMZ,XMDUZ,""))
"RTN","XMXMSGS2",107,0)
 . S:XMK XMKN=$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1)
"RTN","XMXMSGS2",108,0)
 I XMDUZ=.6,XMK'=.5,'$$MOVE^XMXSEC(XMDUZ,XMZ,$G(^XMB(3.9,XMZ,0))) Q
"RTN","XMXMSGS2",109,0)
 S XMCNT=$G(XMCNT)+1
"RTN","XMXMSGS2",110,0)
 I $D(^XMB(3.7,XMDUZ,15,"AF")) D
"RTN","XMXMSGS2",111,0)
 . N XMZREC
"RTN","XMXMSGS2",112,0)
 . S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMXMSGS2",113,0)
 . D FILTER^XMTDF(XMDUZ,XMZ,$P(XMZREC,U,1),$P(XMZREC,U,2),.XMKTO,.XMKNTO)
"RTN","XMXMSGS2",114,0)
 . I XMKTO=1,XMK>1 S XMKTO=XMK,XMKNTO=XMKN
"RTN","XMXMSGS2",115,0)
 E  I XMK>1 S XMKTO=XMK,XMKNTO=XMKN
"RTN","XMXMSGS2",116,0)
 E  S XMKTO=1,XMKNTO="IN"
"RTN","XMXMSGS2",117,0)
 Q:XMK=XMKTO
"RTN","XMXMSGS2",118,0)
 I XMK D MOVE(XMDUZ,XMK,XMZ,XMKTO) Q
"RTN","XMXMSGS2",119,0)
 D PUTMSG(XMDUZ,XMKTO,XMKNTO,XMZ)
"RTN","XMXMSGS2",120,0)
 Q
"RTN","XMXMSGS2",121,0)
PUTMSG(XMDUZ,XMK,XMKN,XMZ) ; For internal MM use only.
"RTN","XMXMSGS2",122,0)
 ; Replaces SETSB^XMA1C, SET^XMS1, & part of MAIL^XMR0B
"RTN","XMXMSGS2",123,0)
 ; Put a msg in the Postmaster's (or anyone else's) basket.
"RTN","XMXMSGS2",124,0)
 ; The msg is NOT made new.
"RTN","XMXMSGS2",125,0)
 ; The basket has a specific name and number.
"RTN","XMXMSGS2",126,0)
 ; If the basket doesn't exist, create it.
"RTN","XMXMSGS2",127,0)
 ; XMK      Basket number
"RTN","XMXMSGS2",128,0)
 ; XMKN     Basket name
"RTN","XMXMSGS2",129,0)
 ; XMZ      Msg number
"RTN","XMXMSGS2",130,0)
 N XMFDA,XMIEN
"RTN","XMXMSGS2",131,0)
 Q:$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0))
"RTN","XMXMSGS2",132,0)
 I $D(^XMB(3.7,XMDUZ,2,XMK)) D  Q
"RTN","XMXMSGS2",133,0)
 . S XMFDA(3.702,"+1,"_XMK_","_XMDUZ_",",.01)=XMZ
"RTN","XMXMSGS2",134,0)
 . S XMIEN(1)=XMZ
"RTN","XMXMSGS2",135,0)
 . L +^XMB(3.7,XMDUZ,2,XMK)
"RTN","XMXMSGS2",136,0)
 . D UPDATE^DIE("","XMFDA","XMIEN")
"RTN","XMXMSGS2",137,0)
 . L -^XMB(3.7,XMDUZ,2,XMK)
"RTN","XMXMSGS2",138,0)
 S XMFDA(3.701,"+1,"_XMDUZ_",",.01)=XMKN
"RTN","XMXMSGS2",139,0)
 S XMFDA(3.702,"+2,+1,"_XMDUZ_",",.01)=XMZ
"RTN","XMXMSGS2",140,0)
 S XMIEN(1)=XMK
"RTN","XMXMSGS2",141,0)
 S XMIEN(2)=XMZ
"RTN","XMXMSGS2",142,0)
 L +^XMB(3.7,XMDUZ,2)
"RTN","XMXMSGS2",143,0)
 D UPDATE^DIE("","XMFDA","XMIEN")
"RTN","XMXMSGS2",144,0)
 L -^XMB(3.7,XMDUZ,2)
"RTN","XMXMSGS2",145,0)
 Q
"RTN","XMXPARM")
0^56^B73884061
"RTN","XMXPARM",1,0)
XMXPARM ;ISC-SF/GMB- Parameter check ;06/14/99  16:41
"RTN","XMXPARM",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXPARM",3,0)
ACTMSGS(XMDUZ,XMK,XMKZA) ;
"RTN","XMXPARM",4,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXPARM",5,0)
 D XMDUZ(.XMDUZ,.XMV)
"RTN","XMXPARM",6,0)
 I $G(XMK)'="" S XMK=$$XMK(XMDUZ,"XMK",XMK)
"RTN","XMXPARM",7,0)
 D XMKZA(.XMKZA)
"RTN","XMXPARM",8,0)
 Q
"RTN","XMXPARM",9,0)
ACTMSG(XMDUZ,XMK,XMKZ) ;
"RTN","XMXPARM",10,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXPARM",11,0)
 D XMDUZ(.XMDUZ,.XMV)
"RTN","XMXPARM",12,0)
 I $G(XMK)'="" D
"RTN","XMXPARM",13,0)
 . S XMK=$$XMK(XMDUZ,"XMK",XMK)
"RTN","XMXPARM",14,0)
 . D XMKZ(XMK,.XMKZ)
"RTN","XMXPARM",15,0)
 E  D XMZ(.XMKZ)
"RTN","XMXPARM",16,0)
 Q
"RTN","XMXPARM",17,0)
ANSRMSG(XMDUZ,XMK,XMKZ,XMSUBJ,XMBODY,XMTO,XMINSTR) ;
"RTN","XMXPARM",18,0)
 D ACTMSG(.XMDUZ,.XMK,.XMKZ)
"RTN","XMXPARM",19,0)
 I $G(XMSUBJ)'="" S XMSUBJ=$$XMSUBJ("XMSUBJ",$G(XMSUBJ))
"RTN","XMXPARM",20,0)
 D XMBODY(.XMBODY)
"RTN","XMXPARM",21,0)
 D:$D(XMTO) XMTO(.XMTO,$G(XMINSTR("ADDR FLAGS"))["I")
"RTN","XMXPARM",22,0)
 D:$D(XMINSTR) XMINSTR(.XMINSTR)
"RTN","XMXPARM",23,0)
 Q
"RTN","XMXPARM",24,0)
BULLETIN(XMDUZ,XMBN,XMPARM,XMBODY,XMTO,XMINSTR,XMATTACH) ;
"RTN","XMXPARM",25,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXPARM",26,0)
 D XMDUZ(.XMDUZ,.XMV)
"RTN","XMXPARM",27,0)
 D XMBN^XMXPARM1(.XMBN)
"RTN","XMXPARM",28,0)
 D:$D(XMBODY) XMBODY(.XMBODY,1)
"RTN","XMXPARM",29,0)
 D:$D(XMTO) XMTO(.XMTO,$G(XMINSTR("ADDR FLAGS"))["I")
"RTN","XMXPARM",30,0)
 D:$D(XMINSTR) XMINSTR(.XMINSTR)
"RTN","XMXPARM",31,0)
 Q
"RTN","XMXPARM",32,0)
FWDMSG(XMDUZ,XMK,XMKZA,XMTO,XMINSTR) ;
"RTN","XMXPARM",33,0)
 D ACTMSGS(.XMDUZ,.XMK,.XMKZA)
"RTN","XMXPARM",34,0)
 D XMTO(.XMTO,$G(XMINSTR("ADDR FLAGS"))["I")
"RTN","XMXPARM",35,0)
 D:$D(XMINSTR) XMINSTR(.XMINSTR)
"RTN","XMXPARM",36,0)
 Q
"RTN","XMXPARM",37,0)
LATERMSG(XMDUZ,XMK,XMKZA,XMINSTR) ;
"RTN","XMXPARM",38,0)
 D ACTMSGS(.XMDUZ,.XMK,.XMKZA)
"RTN","XMXPARM",39,0)
 D:$D(XMINSTR) XMINSTR(.XMINSTR)
"RTN","XMXPARM",40,0)
 Q
"RTN","XMXPARM",41,0)
MOVEMSG(XMDUZ,XMK,XMKZA,XMKTO) ;
"RTN","XMXPARM",42,0)
 D ACTMSGS(.XMDUZ,.XMK,.XMKZA)
"RTN","XMXPARM",43,0)
 D XMKTO(XMDUZ,.XMKTO)
"RTN","XMXPARM",44,0)
 Q
"RTN","XMXPARM",45,0)
PRTMSG(XMDUZ,XMK,XMKZA,XMPRTTO,XMINSTR,XMSUBJ,XMTO) ;
"RTN","XMXPARM",46,0)
 D ACTMSGS(.XMDUZ,.XMK,.XMKZA)
"RTN","XMXPARM",47,0)
 Q:'$D(XMINSTR)
"RTN","XMXPARM",48,0)
 I $D(XMINSTR("WHEN")) S XMINSTR("WHEN")=$$XMDATE("XMINSTR(""WHEN"")",XMINSTR("WHEN"))
"RTN","XMXPARM",49,0)
 I $D(XMINSTR("HDR")) D XMCODE^XMXPARM1("XMINSTR(""HDR"")",XMINSTR("HDR"),"^0^1^")
"RTN","XMXPARM",50,0)
 I $D(XMINSTR("RECIPS")) D XMCODE^XMXPARM1("XMINSTR(""RECIPS"")",XMINSTR("RECIPS"),"^0^1^2^")
"RTN","XMXPARM",51,0)
 I $G(XMSUBJ)'="" S XMSUBJ=$$XMSUBJ("XMSUBJ",$G(XMSUBJ))
"RTN","XMXPARM",52,0)
 I $D(XMTO) D XMTO(.XMTO,$G(XMINSTR("ADDR FLAGS"))["I")
"RTN","XMXPARM",53,0)
 Q
"RTN","XMXPARM",54,0)
REPLYMSG(XMDUZ,XMK,XMKZ,XMBODY,XMINSTR) ;
"RTN","XMXPARM",55,0)
 D ACTMSG(.XMDUZ,.XMK,.XMKZ)
"RTN","XMXPARM",56,0)
 D XMBODY(.XMBODY)
"RTN","XMXPARM",57,0)
 D:$D(XMINSTR) XMINSTR(.XMINSTR)
"RTN","XMXPARM",58,0)
 I $G(XMINSTR("NET REPLY")),$G(XMINSTR("NET SUBJ"))'="" S XMINSTR("NET SUBJ")=$$XMSUBJ("XMINSTR(""NET SUBJ"")",XMINSTR("NET SUBJ"))
"RTN","XMXPARM",59,0)
 Q
"RTN","XMXPARM",60,0)
SENDMSG(XMDUZ,XMSUBJ,XMBODY,XMTO,XMINSTR,XMATTACH) ;
"RTN","XMXPARM",61,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXPARM",62,0)
 D XMDUZ(.XMDUZ,.XMV)
"RTN","XMXPARM",63,0)
 S XMSUBJ=$$XMSUBJ("XMSUBJ",$G(XMSUBJ))
"RTN","XMXPARM",64,0)
 D XMBODY(.XMBODY)
"RTN","XMXPARM",65,0)
 D XMTO(.XMTO,$G(XMINSTR("ADDR FLAGS"))["I")
"RTN","XMXPARM",66,0)
 D:$D(XMINSTR) XMINSTR(.XMINSTR)
"RTN","XMXPARM",67,0)
 D:$D(XMATTACH) XMATTACH^XMXPARM1(.XMATTACH)
"RTN","XMXPARM",68,0)
 Q
"RTN","XMXPARM",69,0)
ADDRNSND(XMDUZ,XMZ,XMTO,XMINSTR) ;
"RTN","XMXPARM",70,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXPARM",71,0)
 D XMDUZ(.XMDUZ,.XMV)
"RTN","XMXPARM",72,0)
 D XMZ(.XMZ)
"RTN","XMXPARM",73,0)
 D XMTO(.XMTO,$G(XMINSTR("ADDR FLAGS"))["I")
"RTN","XMXPARM",74,0)
 D:$D(XMINSTR) XMINSTR(.XMINSTR)
"RTN","XMXPARM",75,0)
 Q
"RTN","XMXPARM",76,0)
VSUBJ(XMSUBJ) ;
"RTN","XMXPARM",77,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXPARM",78,0)
 S XMSUBJ=$$XMSUBJ("XMSUBJ",$G(XMSUBJ))
"RTN","XMXPARM",79,0)
 Q
"RTN","XMXPARM",80,0)
ITOWHOM(XMDUZ,XMZ,XMTYPE,XMINSTR) ;
"RTN","XMXPARM",81,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXPARM",82,0)
 D XMDUZ(.XMDUZ,.XMV)
"RTN","XMXPARM",83,0)
 D XMFLAG("XMTYPE",XMTYPE,"SF")
"RTN","XMXPARM",84,0)
 I XMTYPE'="S",XMINSTR("ADDR FLAGS")'["R" D XMZ(.XMZ)
"RTN","XMXPARM",85,0)
 D:$D(XMINSTR) XMINSTR(.XMINSTR)
"RTN","XMXPARM",86,0)
 Q
"RTN","XMXPARM",87,0)
TOWHOM(XMDUZ,XMZ,XMTYPE,XMTO,XMINSTR) ;
"RTN","XMXPARM",88,0)
 D ITOWHOM(.XMDUZ,.XMZ,.XMTYPE,.XMINSTR)
"RTN","XMXPARM",89,0)
 D XMTO(XMTO,$G(XMINSTR("ADDR FLAGS"))["I")
"RTN","XMXPARM",90,0)
 Q
"RTN","XMXPARM",91,0)
XMDUZ(XMDUZ,XMV) ;
"RTN","XMXPARM",92,0)
 S:$G(XMDUZ)="" XMDUZ=DUZ
"RTN","XMXPARM",93,0)
 D CHKUSER^XMXPARM1(.XMDUZ)
"RTN","XMXPARM",94,0)
 ; Need XMV "NAME","DUZ NAME", "NETNAME", "VERSION"
"RTN","XMXPARM",95,0)
 ; ^XMB("NETNAME"),^XMB("NUM"),^XMB("VIA")
"RTN","XMXPARM",96,0)
 I XMDUZ'=DUZ D
"RTN","XMXPARM",97,0)
 . I $D(^XUSEC("XMNOPRIV",DUZ)) S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="You have the XMNOPRIV key, and may not become anyone's surrogate." Q
"RTN","XMXPARM",98,0)
 . I XMDUZ'=.6,'$D(^XMB(3.7,"AB",DUZ,XMDUZ)) S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="You are not authorized to be a surrogate of DUZ "_XMDUZ_"." Q
"RTN","XMXPARM",99,0)
 I $D(XMV("VERSION")),$G(XMV("DUZ NAME"))=$P(^VA(200,DUZ,0),U,1),$G(XMV("NAME"))=$P(^VA(200,XMDUZ,0),U,1) Q
"RTN","XMXPARM",100,0)
 D INIT^XMVVITAE
"RTN","XMXPARM",101,0)
 Q
"RTN","XMXPARM",102,0)
XMSUBJ(XMPARM,XMSUBJ) ; Validate a prospective message subject
"RTN","XMXPARM",103,0)
 ;I $G(XMSUBJ)="" S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="No subject." Q ""
"RTN","XMXPARM",104,0)
 I XMSUBJ?.E1C.E S XMSUBJ=$$CTRL^XMXUTIL1(XMSUBJ)
"RTN","XMXPARM",105,0)
 I $E(XMSUBJ,1)=" "!($E(XMSUBJ,$L(XMSUBJ))=" ") S XMSUBJ=$$STRIP^XMXUTIL1(XMSUBJ)
"RTN","XMXPARM",106,0)
 I XMSUBJ["   " S XMSUBJ=$$MAXBLANK^XMXUTIL1(XMSUBJ)
"RTN","XMXPARM",107,0)
 I $G(XMSUBJ)="" Q $$EZBLD^DIALOG(34012)
"RTN","XMXPARM",108,0)
 I $L(XMSUBJ)+$L(XMSUBJ,U)-1>65!($L(XMSUBJ)<3) S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Subject must be from 3 to 65 characters long." Q XMSUBJ
"RTN","XMXPARM",109,0)
 I XMSUBJ?1"R".N S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Subject 'Rnnn' reserved." Q XMSUBJ
"RTN","XMXPARM",110,0)
 ;D VAL^DIE(3.9,"+1,",.01,"H",XMSUBJ)
"RTN","XMXPARM",111,0)
 Q XMSUBJ
"RTN","XMXPARM",112,0)
XMBODY(XMBODY,XMOPTNL) ; Check the body of the message (just make sure there is a body)
"RTN","XMXPARM",113,0)
 I $G(XMBODY)="" D  Q
"RTN","XMXPARM",114,0)
 . Q:$G(XMOPTNL)
"RTN","XMXPARM",115,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Message must have a body."
"RTN","XMXPARM",116,0)
 I $E(XMBODY,1,6)="XMBODY" S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Message body may not be called XMBODY." Q
"RTN","XMXPARM",117,0)
 Q:$D(@XMBODY)>9
"RTN","XMXPARM",118,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Message body '"_XMBODY_"' has no data."
"RTN","XMXPARM",119,0)
 Q
"RTN","XMXPARM",120,0)
XMTO(XMTO,XMOPTNL) ; Check the addressees (just make sure there is at least one)
"RTN","XMXPARM",121,0)
 Q:$D(XMTO)
"RTN","XMXPARM",122,0)
 I $G(XMOPTNL),$D(^TMP("XMY",$J)) Q
"RTN","XMXPARM",123,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="No recipients"
"RTN","XMXPARM",124,0)
 Q
"RTN","XMXPARM",125,0)
XMINSTR(XMINSTR) ; Validate special instructions
"RTN","XMXPARM",126,0)
 S:$D(XMINSTR("RCPT BSKT")) XMINSTR("RCPT BSKT")=$$XMKN^XMXPARMB(XMDUZ,"XMINSTR(""RCPT BSKT"")",XMINSTR("RCPT BSKT"),1)
"RTN","XMXPARM",127,0)
 S:$D(XMINSTR("SELF BSKT")) XMINSTR("SELF BSKT")=$$XMK(XMDUZ,"XMINSTR(""SELF BSKT"")",XMINSTR("SELF BSKT"),1)
"RTN","XMXPARM",128,0)
 I $D(XMINSTR("SHARE DATE")) S XMINSTR("SHARE DATE")=$$XMDATE("XMINSTR(""SHARE DATE"")",XMINSTR("SHARE DATE"))
"RTN","XMXPARM",129,0)
 S:$D(XMINSTR("SHARE BSKT")) XMINSTR("SHARE BSKT")=$$XMK(.6,"XMINSTR(""SHARE BSKT"")",XMINSTR("SHARE BSKT"),1)
"RTN","XMXPARM",130,0)
 I $D(XMINSTR("VAPOR")) S XMINSTR("VAPOR")=$$XMDATE("XMINSTR(""VAPOR"")",XMINSTR("VAPOR"))
"RTN","XMXPARM",131,0)
 I $D(XMINSTR("LATER")) S XMINSTR("LATER")=$$XMDATE("XMINSTR(""LATER"")",XMINSTR("LATER"))
"RTN","XMXPARM",132,0)
 I $D(XMINSTR("FROM")) S XMINSTR("FROM")=$$XMFROM("XMINSTR(""FROM"")",XMINSTR("FROM"))
"RTN","XMXPARM",133,0)
 I $D(XMINSTR("FWD BY")) S XMINSTR("FWD BY")=$$XMFROM("XMINSTR(""FWD BY"")",XMINSTR("FWD BY"))
"RTN","XMXPARM",134,0)
 D:$D(XMINSTR("FLAGS")) XMFLAG("XMINSTR(""FLAGS"")",XMINSTR("FLAGS"),"CIPRSX")
"RTN","XMXPARM",135,0)
 I $D(XMINSTR("SCR KEY"))!$D(XMINSTR("SCR HINT")) D
"RTN","XMXPARM",136,0)
 . D XMKEY^XMXPARM1($G(XMINSTR("SCR KEY")))
"RTN","XMXPARM",137,0)
 . D XMHINT^XMXPARM1($G(XMINSTR("SCR HINT")))
"RTN","XMXPARM",138,0)
 D:$D(XMINSTR("TYPE")) XMTYPE(XMINSTR("XMTYPE"))
"RTN","XMXPARM",139,0)
 D:$D(XMINSTR("STRIP")) XMSTRIP^XMXPARM1(XMINSTR("XMSTRIP"))
"RTN","XMXPARM",140,0)
 Q
"RTN","XMXPARM",141,0)
XMDATE(XMPARM,X) ;
"RTN","XMXPARM",142,0)
 N %DT,Y
"RTN","XMXPARM",143,0)
 S %DT="FT",%DT(0)="NOW"
"RTN","XMXPARM",144,0)
 D ^%DT
"RTN","XMXPARM",145,0)
 Q:Y>0 Y
"RTN","XMXPARM",146,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)=XMPARM_"="_X_" (Must be a date in the future)"
"RTN","XMXPARM",147,0)
 Q X
"RTN","XMXPARM",148,0)
XMFROM(XMPARM,XMFROM) ;
"RTN","XMXPARM",149,0)
 N XMINDEX,I,XMHOLD
"RTN","XMXPARM",150,0)
 Q:XMFROM=.5 XMFROM
"RTN","XMXPARM",151,0)
 I +XMFROM=XMFROM!(XMFROM[U)!($L(XMFROM)>65)!(XMFROM="") S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)=XMPARM_"="_XMFROM_" (Must be from 1 to 65 characters, not a #, no ^)" Q XMFROM
"RTN","XMXPARM",152,0)
 S XMHOLD=XMFROM
"RTN","XMXPARM",153,0)
 S XMFROM=$$CTRL^XMXUTIL1(XMFROM)
"RTN","XMXPARM",154,0)
 S XMFROM=$$STRIP^XMXUTIL1(XMFROM)
"RTN","XMXPARM",155,0)
 S XMFROM=$$MAXBLANK^XMXUTIL1(XMFROM)
"RTN","XMXPARM",156,0)
 Q:XMFROM["POSTMASTER" XMFROM
"RTN","XMXPARM",157,0)
 S XMINDEX="B" ; "B^BB^C^D" = name^alias^initial^nickname 
"RTN","XMXPARM",158,0)
 F I="BB","C","D" S:$D(^VA(200,I)) XMINDEX=XMINDEX_U_I
"RTN","XMXPARM",159,0)
 I $$FIND1^DIC(200,"","Q",$$UP^XLFSTR(XMFROM),XMINDEX)!$D(DIERR) S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)=XMPARM_"="_XMHOLD_" (May not be a real person.)" Q XMHOLD
"RTN","XMXPARM",160,0)
 Q XMFROM
"RTN","XMXPARM",161,0)
XMTYPE(XMTYPE) ; Validate a message type
"RTN","XMXPARM",162,0)
 I $L(XMTYPE)'=1 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="XMINSTR(""TYPE"")="_XMTYPE_" (Must be 1 character)" Q
"RTN","XMXPARM",163,0)
 D XMFLAG("XMINSTR(""TYPE"")",XMTYPE,"BDKOSX")
"RTN","XMXPARM",164,0)
 Q
"RTN","XMXPARM",165,0)
XMFLAG(XMPARM,XMFLAG,FLAGSET) ;
"RTN","XMXPARM",166,0)
 N XMLEFT
"RTN","XMXPARM",167,0)
 S XMLEFT=$TR(XMFLAG,FLAGSET,"")
"RTN","XMXPARM",168,0)
 Q:XMLEFT=""
"RTN","XMXPARM",169,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)=XMPARM_"="_XMFLAG_" ("_XMLEFT_" is not valid)"
"RTN","XMXPARM",170,0)
 Q
"RTN","XMXPARM",171,0)
XMK(XMDUZ,XMPARM,XMK,XMOPTNL) ;
"RTN","XMXPARM",172,0)
 I +XMK=XMK,$D(^XMB(3.7,XMDUZ,2,XMK)) Q XMK
"RTN","XMXPARM",173,0)
 ; Just in case a name was passed...
"RTN","XMXPARM",174,0)
 N XMKN
"RTN","XMXPARM",175,0)
 S XMKN=XMK
"RTN","XMXPARM",176,0)
 S XMK=$$FIND1^DIC(3.701,","_XMDUZ_",","OQ",XMKN)
"RTN","XMXPARM",177,0)
 Q:XMK XMK
"RTN","XMXPARM",178,0)
 I '$D(DIERR),$G(XMOPTNL) Q XMKN  ; Basket not found.  Will create on delivery.
"RTN","XMXPARM",179,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)=XMPARM_"="_XMKN_" (basket "_$S($D(DIERR):"name ambiguous",1:"not found")_")" Q XMKN
"RTN","XMXPARM",180,0)
 Q
"RTN","XMXPARM",181,0)
XMKTO(XMDUZ,XMKTO) ;
"RTN","XMXPARM",182,0)
 I '$D(XMKTO) S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="XMKTO not supplied."
"RTN","XMXPARM",183,0)
 S XMKTO=$$XMK(XMDUZ,"XMKTO",XMKTO)
"RTN","XMXPARM",184,0)
 Q
"RTN","XMXPARM",185,0)
XMKZ(XMK,XMKZ) ;
"RTN","XMXPARM",186,0)
 I $G(XMKZ),$D(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ)) Q
"RTN","XMXPARM",187,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Message '"_XMKZ_"' not found in basket "_XMK_"."
"RTN","XMXPARM",188,0)
 Q
"RTN","XMXPARM",189,0)
XMKZA(XMKZA) ; Check the message numbers (just make sure there is at least one)
"RTN","XMXPARM",190,0)
 Q:$D(XMKZA)
"RTN","XMXPARM",191,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="No message numbers."
"RTN","XMXPARM",192,0)
 Q
"RTN","XMXPARM",193,0)
XMZ(XMZ) ;
"RTN","XMXPARM",194,0)
 I $G(XMZ),$D(^XMB(3.9,XMZ,0)) Q
"RTN","XMXPARM",195,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Message '"_XMZ_"' not found in message global."
"RTN","XMXPARM",196,0)
 Q
"RTN","XMXPARM",197,0)
 ;
"RTN","XMXPARM",198,0)
 ;#34012 = * No Subject *
"RTN","XMXPARM1")
0^249^B8796402
"RTN","XMXPARM1",1,0)
XMXPARM1 ;ISC-SF/GMB- Parameter check (continued) ;01/25/99  16:03
"RTN","XMXPARM1",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXPARM1",3,0)
XMBN(XMBN) ; Check bulletin name
"RTN","XMXPARM1",4,0)
 I '$D(XMBN) S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Bulletin name is null" Q
"RTN","XMXPARM1",5,0)
 Q:$D(^XMB(3.6,"B",XMBN))
"RTN","XMXPARM1",6,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Bulletin '"_XMBN_"' does not exist."
"RTN","XMXPARM1",7,0)
 Q
"RTN","XMXPARM1",8,0)
CHKUSER(XMDUZ,XMNOMBOX) ; Ascertain/verify user's DUZ, and make sure authorized to use MailMan
"RTN","XMXPARM1",9,0)
 ; XMNOMBOX Is is possible that this user does not have a mailbox?
"RTN","XMXPARM1",10,0)
 ;          0=no (default); 1=yes
"RTN","XMXPARM1",11,0)
 N XMSCREEN,XMINDEX,I,XMUSER,XMADDR
"RTN","XMXPARM1",12,0)
 S XMADDR=XMDUZ
"RTN","XMXPARM1",13,0)
 S XMINDEX="B" ; "B^BB^C^D" = name^alias^initial^nickname
"RTN","XMXPARM1",14,0)
 F I="BB","C","D" S:$D(^VA(200,I)) XMINDEX=XMINDEX_U_I
"RTN","XMXPARM1",15,0)
 S XMADDR=$$UP^XLFSTR(XMADDR)
"RTN","XMXPARM1",16,0)
 S:'$G(XMNOMBOX) XMSCREEN="I $L($P(^(0),U,3)),$D(^XMB(3.7,+Y,2))"  ; User must have an access code & mailbox
"RTN","XMXPARM1",17,0)
 S XMDUZ=$$FIND1^DIC(200,"","Q",$S(+XMADDR=XMADDR:"`"_XMADDR,1:XMADDR),XMINDEX,.XMSCREEN)
"RTN","XMXPARM1",18,0)
 Q:XMDUZ
"RTN","XMXPARM1",19,0)
 S XMDUZ=XMADDR
"RTN","XMXPARM1",20,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="User '"_XMDUZ_"' "_$S($D(DIERR):"ambiguous.",1:"not found.")
"RTN","XMXPARM1",21,0)
 Q
"RTN","XMXPARM1",22,0)
XMSTRIP(XMSTRIP) ; Validate a message strip string
"RTN","XMXPARM1",23,0)
 I $L(XMSTRIP)>0,$L(XMSTRIP)<21 Q
"RTN","XMXPARM1",24,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="XMINSTR(""STRIP"")="_XMSTRIP_" (Must be from 1 to 20 characters)"
"RTN","XMXPARM1",25,0)
 Q
"RTN","XMXPARM1",26,0)
XMKEY(XMKEY) ; Validate a scramble key
"RTN","XMXPARM1",27,0)
 I XMKEY="" S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Must provide XMINSTR(""SCR KEY"") (scramble key from 3 to 20 characters)" Q
"RTN","XMXPARM1",28,0)
 ;D VAL^DIE(3.901,"1,"_XMZ_",",1.85,"H",XMKEY)
"RTN","XMXPARM1",29,0)
 I $L(XMKEY)>2,$L(XMKEY)<21 Q
"RTN","XMXPARM1",30,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="XMINSTR(""SCR KEY"")="_XMKEY_" (Must be from 3 to 20 characters)"
"RTN","XMXPARM1",31,0)
 Q
"RTN","XMXPARM1",32,0)
XMHINT(XMHINT) ; Validate a scramble hint
"RTN","XMXPARM1",33,0)
 I XMHINT="" S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Must provide XMINSTR(""SCR HINT"") (scramble hint from 1 to 40 characters)" Q
"RTN","XMXPARM1",34,0)
 ;D VAL^DIE(3.9,"1,"_XMZ_",",1.8,"H",XMHINT)
"RTN","XMXPARM1",35,0)
 I $L(XMHINT)>0,$L(XM)<41 Q
"RTN","XMXPARM1",36,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="XMINSTR(""SCR HINT"")="_XMHINT_" (Must be from 1 to 40 characters)"
"RTN","XMXPARM1",37,0)
 Q
"RTN","XMXPARM1",38,0)
XMATTACH(XMATTACH) ; Validate attachments
"RTN","XMXPARM1",39,0)
 Q
"RTN","XMXPARM1",40,0)
XMCODE(XMPARM,XMCODE,CODESET) ;
"RTN","XMXPARM1",41,0)
 Q:CODESET[(U_XMCODE_U)
"RTN","XMXPARM1",42,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)=XMPARM_"="_XMCODE_" (Must be from one of "_CODESET_")"
"RTN","XMXPARM1",43,0)
 Q
"RTN","XMXPARM1",44,0)
XMROOT(XMPARM,XMROOT) ; Validate root
"RTN","XMXPARM1",45,0)
 Q
"RTN","XMXPARMB")
0^57^B11516161
"RTN","XMXPARMB",1,0)
XMXPARMB ;ISC-SF/GMB- Parameter check for XMXAPIB ;04/07/99  13:37
"RTN","XMXPARMB",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXPARMB",3,0)
CRE8MBOX(XMDUZ,XMDATE) ; Create a mailbox for a user
"RTN","XMXPARMB",4,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXPARMB",5,0)
 D CHKUSER^XMXPARM1(.XMDUZ,1)
"RTN","XMXPARMB",6,0)
 Q
"RTN","XMXPARMB",7,0)
VA200(XMDUZ) ; Make sure DUZ exists
"RTN","XMXPARMB",8,0)
 Q:$D(^VA(200,XMDUZ,0))
"RTN","XMXPARMB",9,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="XMDUZ="_XMDUZ_" (No such person in NEW PERSON file.)"
"RTN","XMXPARMB",10,0)
 Q
"RTN","XMXPARMB",11,0)
TERMMBOX(XMDUZ) ; Terminate a mailbox (delete all traces of user in MailMan)
"RTN","XMXPARMB",12,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXPARMB",13,0)
 D CHKUSER^XMXPARM1(.XMDUZ,1)
"RTN","XMXPARMB",14,0)
 Q
"RTN","XMXPARMB",15,0)
MBOX(XMDUZ) ; 
"RTN","XMXPARMB",16,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXPARMB",17,0)
 D XMDUZ^XMXPARM(.XMDUZ,.XMV)
"RTN","XMXPARMB",18,0)
 Q
"RTN","XMXPARMB",19,0)
LISTBSKT(XMDUZ,XMFLAGS,XMAMT,XMSTART,XMPART,XMTROOT) ;
"RTN","XMXPARMB",20,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXPARMB",21,0)
 D XMDUZ^XMXPARM(.XMDUZ,.XMV)
"RTN","XMXPARMB",22,0)
 I $D(XMFLAGS) D XMFLAG^XMXPARM("XMFLAGS",XMFLAGS,"BN")
"RTN","XMXPARMB",23,0)
 I $D(XMAMT) D XMAMT("XMAMT",.XMAMT)
"RTN","XMXPARMB",24,0)
 Q
"RTN","XMXPARMB",25,0)
LISTMSGS(XMDUZ,XMK,XMFLDS,XMFLAGS,XMAMT,XMSTART,XMF,XMTROOT) ;
"RTN","XMXPARMB",26,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXPARMB",27,0)
 D XMDUZ^XMXPARM(.XMDUZ,.XMV)
"RTN","XMXPARMB",28,0)
 I $D(XMK) S:"*"'[XMK XMK=$$XMK^XMXPARM(XMDUZ,"XMK",XMK)
"RTN","XMXPARMB",29,0)
 I $D(XMFLAGS) D XMFLAG^XMXPARM("XMFLAGS",XMFLAGS,"BCNP")
"RTN","XMXPARMB",30,0)
 I $D(XMAMT) D XMAMT("XMAMT",.XMAMT)
"RTN","XMXPARMB",31,0)
 Q
"RTN","XMXPARMB",32,0)
DELBSKT(XMDUZ,XMK,XMFLAGS) ;
"RTN","XMXPARMB",33,0)
 D BSKT(.XMDUZ,.XMK)
"RTN","XMXPARMB",34,0)
 I $D(XMFLAGS) D XMFLAG^XMXPARM("XMFLAGS",XMFLAGS,"D")
"RTN","XMXPARMB",35,0)
 Q
"RTN","XMXPARMB",36,0)
BSKT(XMDUZ,XMK) ; Make sure basket exists
"RTN","XMXPARMB",37,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXPARMB",38,0)
 D XMDUZ^XMXPARM(.XMDUZ,.XMV)
"RTN","XMXPARMB",39,0)
 S:$D(XMK) XMK=$$XMK^XMXPARM(XMDUZ,"XMK",XMK)
"RTN","XMXPARMB",40,0)
 Q
"RTN","XMXPARMB",41,0)
CRE8BSKT(XMDUZ,XMKN) ;
"RTN","XMXPARMB",42,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXPARMB",43,0)
 D XMDUZ^XMXPARM(.XMDUZ,.XMV)
"RTN","XMXPARMB",44,0)
 S XMKN=$$XMKN(XMDUZ,"XMKN",XMKN)
"RTN","XMXPARMB",45,0)
 Q
"RTN","XMXPARMB",46,0)
NAMEBSKT(XMDUZ,XMK,XMKN) ;
"RTN","XMXPARMB",47,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXPARMB",48,0)
 D XMDUZ^XMXPARM(.XMDUZ,.XMV)
"RTN","XMXPARMB",49,0)
 S XMK=$$XMK^XMXPARM(XMDUZ,"XMK",.XMK)
"RTN","XMXPARMB",50,0)
 S XMKN=$$XMKN(XMDUZ,"XMKN",XMKN)
"RTN","XMXPARMB",51,0)
 Q
"RTN","XMXPARMB",52,0)
XMKN(XMDUZ,XMPARM,XMKN,XMOKXST) ; Validate a prospective basket name
"RTN","XMXPARMB",53,0)
 ; XMKN     prospective basket name
"RTN","XMXPARMB",54,0)
 ; XMOKXST  is it OK if a basket with that name already exists? (0=no; 1=yes)
"RTN","XMXPARMB",55,0)
 N XMOK
"RTN","XMXPARMB",56,0)
 I '$G(XMOKXST) D  Q:$D(XMERR) XMKN
"RTN","XMXPARMB",57,0)
 . Q:'$$FIND1^DIC(3.701,","_XMDUZ_",","XQ",XMKN)
"RTN","XMXPARMB",58,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)=XMPARM_"="_XMKN_" (basket of that name already exists)"
"RTN","XMXPARMB",59,0)
 D VAL^DIE(3.701,"1,"_XMDUZ_",",.01,"",XMKN,.XMOK) Q:XMOK'=U XMKN
"RTN","XMXPARMB",60,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)=XMPARM_"="_XMKN_" (illegal basket name)"
"RTN","XMXPARMB",61,0)
 Q XMKN
"RTN","XMXPARMB",62,0)
XMAMT(XMPARM,XMAMT) ;
"RTN","XMXPARMB",63,0)
 Q:'$D(XMAMT)
"RTN","XMXPARMB",64,0)
 Q:XMAMT=""
"RTN","XMXPARMB",65,0)
 Q:XMAMT="*"
"RTN","XMXPARMB",66,0)
 Q:XMAMT=+XMAMT&(XMAMT>0)
"RTN","XMXPARMB",67,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)=XMPARM_"="_XMAMT_" (Must be a positive number OR *.)"
"RTN","XMXPARMB",68,0)
 Q
"RTN","XMXPARMB",69,0)
SERV(XMKN,XMZ) ;
"RTN","XMXPARMB",70,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXPARMB",71,0)
 D XMSERV(.XMKN)
"RTN","XMXPARMB",72,0)
 D XMZ^XMXPARM(.XMZ)
"RTN","XMXPARMB",73,0)
 Q
"RTN","XMXPARMB",74,0)
XMSERV(XMKN) ;
"RTN","XMXPARMB",75,0)
 Q:$O(^DIC(19,"B",$E(XMKN,3,999),0))
"RTN","XMXPARMB",76,0)
 I $E(XMKN,1,2)'="S." S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="XMKN="_XMKN_" (server basket name must begin with 'S.'" Q
"RTN","XMXPARMB",77,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="XMKN="_XMKN_" (server basket not found.  Name must be exact.)"
"RTN","XMXPARMB",78,0)
 Q
"RTN","XMXPRT")
0^248^B6580377
"RTN","XMXPRT",1,0)
XMXPRT ;ISC-SF/GMB-Print messages ;06/25/99  08:13
"RTN","XMXPRT",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXPRT",3,0)
 ; For messages printed to the P-MESSAGE device,
"RTN","XMXPRT",4,0)
 ; XMAPSUBJ = message subject
"RTN","XMXPRT",5,0)
 ; XMY      = message addressees
"RTN","XMXPRT",6,0)
PRINT1(XMDUZ,XMZ,XMPRTTO,XMINSTR,ZTSK,XMAPSUBJ,XMY) ; Print one message
"RTN","XMXPRT",7,0)
 N XMWHICH,XMRECIPS,XMPRTHDR,ZTSAVE,ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTUCI
"RTN","XMXPRT",8,0)
 D PINIT(.XMINSTR,.XMPRTHDR,.XMRECIPS,.XMWHICH,.ZTDTH)
"RTN","XMXPRT",9,0)
 F I="XMV(","DUZ","XMDUZ","XMZ","XMWHICH","XMRECIPS","XMPRTHDR","XMAPSUBJ","XMY(" S ZTSAVE(I)=""
"RTN","XMXPRT",10,0)
 ;S:$D(XMSECURE) (ZTSAVE("XMSECURE"),ZTSAVE("XMSECURE("))=""
"RTN","XMXPRT",11,0)
 S ZTIO=XMPRTTO
"RTN","XMXPRT",12,0)
 S ZTDESC="MailMan Print"
"RTN","XMXPRT",13,0)
 S ZTRTN="XPMSG^XMXPRT"
"RTN","XMXPRT",14,0)
 D ^%ZTLOAD
"RTN","XMXPRT",15,0)
 Q
"RTN","XMXPRT",16,0)
PRINTM(XMDUZ,XMPRTTO,XMINSTR,ZTSK,XMAPSUBJ,XMY) ; Print more than one message
"RTN","XMXPRT",17,0)
 N XMWHICH,XMRECIPS,XMPRTHDR,ZTSAVE,ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTUCI
"RTN","XMXPRT",18,0)
 D PINIT(.XMINSTR,.XMPRTHDR,.XMRECIPS,.XMWHICH,.ZTDTH)
"RTN","XMXPRT",19,0)
 I "^0^*^"'[(U_XMWHICH_U) S XMWHICH="*"
"RTN","XMXPRT",20,0)
 F I="XMV(","DUZ","XMDUZ","XMZ","XMWHICH","XMRECIPS","XMPRTHDR","^TMP(""XM"",$J,""XMZ"",","XMAPSUBJ","XMY(" S ZTSAVE(I)=""
"RTN","XMXPRT",21,0)
 ;S:$D(XMSECURE) (ZTSAVE("XMSECURE"),ZTSAVE("XMSECURE("))=""
"RTN","XMXPRT",22,0)
 S ZTIO=XMPRTTO
"RTN","XMXPRT",23,0)
 S ZTDESC="MailMan Print"
"RTN","XMXPRT",24,0)
 S ZTRTN="XPRANGE^XMXPRT"
"RTN","XMXPRT",25,0)
 D ^%ZTLOAD
"RTN","XMXPRT",26,0)
 Q
"RTN","XMXPRT",27,0)
PINIT(XMINSTR,XMPRTHDR,XMRECIPS,XMWHICH,XMWHEN) ;
"RTN","XMXPRT",28,0)
 ; XMPRTHDR 1=Print header (default)
"RTN","XMXPRT",29,0)
 ;          0=don't (headerless print)
"RTN","XMXPRT",30,0)
 ; XMRECIPS 0=Don't print recipients (default)
"RTN","XMXPRT",31,0)
 ;          1=Print summary recipients
"RTN","XMXPRT",32,0)
 ;          2=Print detail recipients
"RTN","XMXPRT",33,0)
 S XMPRTHDR=+$G(XMINSTR("HDR"),1)
"RTN","XMXPRT",34,0)
 S XMRECIPS=+$G(XMINSTR("RECIPS"))
"RTN","XMXPRT",35,0)
 S XMWHICH=$G(XMINSTR("RESPS"),"*")
"RTN","XMXPRT",36,0)
 S XMWHEN=$G(XMINSTR("WHEN"),"NOW")
"RTN","XMXPRT",37,0)
 S XMWHEN=$S(XMWHEN="NOW":$H,1:$$FMTH^XLFDT(XMWHEN))
"RTN","XMXPRT",38,0)
 Q
"RTN","XMXPRT",39,0)
PMSG(XMDUZ,XMZ,XMWHICH,XMRECIPS,XMPRTHDR,XMFIRST) ;
"RTN","XMXPRT",40,0)
XPMSG ;
"RTN","XMXPRT",41,0)
 N XMK,XMKN,XMZREC,XMRESPS,XMPTR
"RTN","XMXPRT",42,0)
 S ZTREQ="@"
"RTN","XMXPRT",43,0)
 S XMK=+$O(^XMB(3.7,"M",XMZ,XMDUZ,""))
"RTN","XMXPRT",44,0)
 S XMKN=$S(XMK:$P(^XMB(3.7,XMDUZ,2,XMK,0),U,1),1:"* N/A *")
"RTN","XMXPRT",45,0)
 D RESPONSE^XMJMP(XMDUZ,XMZ,.XMRESPS,.XMPTR)
"RTN","XMXPRT",46,0)
 S:XMWHICH="*" XMWHICH=$S(XMRESPS:"0-"_XMRESPS,1:0)
"RTN","XMXPRT",47,0)
 S XMZREC=^XMB(3.9,XMZ,0)
"RTN","XMXPRT",48,0)
 I IOST["C-"!'$G(XMFIRST,1) W @IOF
"RTN","XMXPRT",49,0)
 D:XMPRTHDR IDHDR^XMJMP(XMDUZ)
"RTN","XMXPRT",50,0)
 D PRINTIT^XMJMP1(XMDUZ,XMK,XMKN,XMZ,XMZREC,XMRESPS,XMPTR,XMWHICH,XMRECIPS,XMPRTHDR)
"RTN","XMXPRT",51,0)
 Q
"RTN","XMXPRT",52,0)
PRANGE(XMDUZ,XMWHICH,XMRECIPS,XMPRTHDR) ;
"RTN","XMXPRT",53,0)
XPRANGE ; Print a range of messages.
"RTN","XMXPRT",54,0)
 N XMZ,XMFIRST
"RTN","XMXPRT",55,0)
 S XMZ=""
"RTN","XMXPRT",56,0)
 S XMFIRST=1
"RTN","XMXPRT",57,0)
 F  S XMZ=$O(^TMP("XM",$J,"XMZ",XMZ)) Q:'XMZ  D
"RTN","XMXPRT",58,0)
 . Q:'$D(^XMB(3.9,XMZ,0))
"RTN","XMXPRT",59,0)
 . D PMSG(XMDUZ,XMZ,XMWHICH,XMRECIPS,XMPRTHDR,.XMFIRST)
"RTN","XMXPRT",60,0)
 . S XMFIRST=0
"RTN","XMXPRT",61,0)
 Q
"RTN","XMXREPLY")
0^58^B13446429
"RTN","XMXREPLY",1,0)
XMXREPLY ;ISC-SF/GMB-Reply to a msg ;05/26/99  08:05
"RTN","XMXREPLY",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXREPLY",3,0)
REPLYMSG(XMDUZ,XMK,XMKZ,XMBODY,XMINSTR,XMZR) ;
"RTN","XMXREPLY",4,0)
 ; XMDUZ    DUZ of who the msg is from
"RTN","XMXREPLY",5,0)
 ; XMBODY   Body of the msg
"RTN","XMXREPLY",6,0)
 ;          Must be closed root, passed by value.  See WP_ROOT
"RTN","XMXREPLY",7,0)
 ;          definition for WP^DIE(), FM word processing filer.
"RTN","XMXREPLY",8,0)
 ; XMINSTR("FROM")     String saying from whom (default is XMDUZ)
"RTN","XMXREPLY",9,0)
 ; XMINSTR("STRIP")    String containing characters to strip from the message text
"RTN","XMXREPLY",10,0)
 ; XMINSTR("SCR HINT") Hint to guess the scramble key
"RTN","XMXREPLY",11,0)
 ;                     (must be the hint from original message)
"RTN","XMXREPLY",12,0)
 ; XMINSTR("SCR KEY")  Scramble key, if original message was scrambled.
"RTN","XMXREPLY",13,0)
 ;                     (must be the key from original message, as
"RTN","XMXREPLY",14,0)
 ;                     entered by the user: unscrambled!)
"RTN","XMXREPLY",15,0)
 ; *NOTE: SCR hint and key needed only for remote replies.  Even then,
"RTN","XMXREPLY",16,0)
 ;        I'm not sure they're really needed.
"RTN","XMXREPLY",17,0)
 ; XMINSTR("NET REPLY") 0=reply should NOT go over the network; 1=it should
"RTN","XMXREPLY",18,0)
 ; XMINSTR("NET SUBJ") Subject for network reply msg, else default to
"RTN","XMXREPLY",19,0)
 ;          "Re: original msg subject"
"RTN","XMXREPLY",20,0)
 ; XMZSENDR XMDUZ of the person who created and sent the msg
"RTN","XMXREPLY",21,0)
 ; If you are not a recipient or the sender, you may not reply.
"RTN","XMXREPLY",22,0)
 ; If msg is in SHARED,MAIL and your DUZ is .6, ERROR! G H^XUS ***
"RTN","XMXREPLY",23,0)
 ; If msg is info only AND you are not the sender, you may not reply.
"RTN","XMXREPLY",24,0)
 ; If msg is info only and was broadcast to all local users, may not reply
"RTN","XMXREPLY",25,0)
 ; If you are info only, you may not reply.
"RTN","XMXREPLY",26,0)
 ; If msg is from a remote POSTMASTER, may not reply.
"RTN","XMXREPLY",27,0)
 ; If msg is in waste basket or no basket, move it to a basket.
"RTN","XMXREPLY",28,0)
 ;
"RTN","XMXREPLY",29,0)
 ; Output:
"RTN","XMXREPLY",30,0)
 ; XMZR     msg # holding the reply to XMZ
"RTN","XMXREPLY",31,0)
 N XMZ,XMZREC,XMZSENDR,XMNETMSG
"RTN","XMXREPLY",32,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXREPLY",33,0)
 D CHKMSG^XMXSEC1(XMDUZ,.XMK,.XMKZ,.XMZ,.XMZREC) Q:$D(XMERR)
"RTN","XMXREPLY",34,0)
 Q:'$$REPLY^XMXSEC(XMDUZ,XMZ,XMZREC)
"RTN","XMXREPLY",35,0)
 D:XMK<1 FLTR^XMXMSGS2(XMDUZ,XMK,$S(XMK=.5:"WASTE",1:""),XMZ) ; Move msg from WASTE basket
"RTN","XMXREPLY",36,0)
 D CRE8XMZ^XMXSEND("R"_XMZ,.XMZR) Q:$D(XMERR)  ; Create a place for the response in the msg file
"RTN","XMXREPLY",37,0)
 D MOVEBODY^XMXSEND(XMZR,XMBODY) ; Put the msg body in place
"RTN","XMXREPLY",38,0)
 D CHEKBODY^XMXSEND(XMZR,$G(XMINSTR("STRIP")))
"RTN","XMXREPLY",39,0)
 D DOREPLY(XMDUZ,XMZ,XMZR,.XMINSTR)
"RTN","XMXREPLY",40,0)
 S XMZSENDR=$P(XMZREC,U,2)
"RTN","XMXREPLY",41,0)
 S XMNETMSG=$S(XMZSENDR["@":1,1:0)
"RTN","XMXREPLY",42,0)
 I 'XMNETMSG!'$G(XMINSTR("NET REPLY")) Q
"RTN","XMXREPLY",43,0)
 N XMFROM,XMREPLTO
"RTN","XMXREPLY",44,0)
 D REPLYTO(XMZ,.XMFROM,.XMREPLTO)
"RTN","XMXREPLY",45,0)
 D INIT^XMXADDR
"RTN","XMXREPLY",46,0)
 D CHKADDR^XMXADDR(XMDUZ,$$REMADDR^XMXADDR1($G(XMREPLTO,XMFROM)),.XMINSTR)
"RTN","XMXREPLY",47,0)
 D:'$D(XMERR) NETREPLY(XMDUZ,XMZ,XMZR,$S($G(XMINSTR("NET SUBJ"))'="":XMINSTR("NET SUBJ"),$E($P(XMZREC,U,1),1,4)="Re: ":$E($P(XMZREC,U,1),1,65),1:$E("Re: "_$P(XMZREC,U,1),1,65)),.XMINSTR)
"RTN","XMXREPLY",48,0)
 D CLEANUP^XMXADDR
"RTN","XMXREPLY",49,0)
 Q
"RTN","XMXREPLY",50,0)
DOREPLY(XMDUZ,XMZ,XMZR,XMINSTR) ;
"RTN","XMXREPLY",51,0)
 D:$D(XMSECURE) ENCMSG^XMJMCODE(XMZR) ; Scramble the msg, if needed
"RTN","XMXREPLY",52,0)
 D MOVER(XMDUZ,XMZ,XMZR,.XMINSTR) ; Point from response back to original msg
"RTN","XMXREPLY",53,0)
 D RPOST^XMKP(XMDUZ,XMZ,XMZR) ; Point from original msg to response and send the msg
"RTN","XMXREPLY",54,0)
 D CHECK^XMKPL
"RTN","XMXREPLY",55,0)
 Q
"RTN","XMXREPLY",56,0)
NETREPLY(XMDUZ,XMZ,XMZR,XMZRSUBJ,XMINSTR) ;
"RTN","XMXREPLY",57,0)
 N XMFDA,XMIENS
"RTN","XMXREPLY",58,0)
 S XMIENS=XMZR_","
"RTN","XMXREPLY",59,0)
 S XMFDA(3.9,XMIENS,.01)=XMZRSUBJ
"RTN","XMXREPLY",60,0)
 I $D(XMSECURE) D
"RTN","XMXREPLY",61,0)
 . S XMFDA(3.9,XMIENS,1.8)=XMINSTR("SCR HINT") ; Scramble hint
"RTN","XMXREPLY",62,0)
 . S XMFDA(3.9,XMIENS,1.85)=XMINSTR("SCR KEY") ; Scramble key
"RTN","XMXREPLY",63,0)
 S XMFDA(3.9,XMIENS,9.5)=$E(^XMB(3.9,XMZ,5),1,110) ; In response to remote msg id
"RTN","XMXREPLY",64,0)
 D FILE^DIE("","XMFDA")
"RTN","XMXREPLY",65,0)
 D SEND^XMKP(XMDUZ,XMZR)
"RTN","XMXREPLY",66,0)
 Q
"RTN","XMXREPLY",67,0)
MOVER(XMDUZ,XMZ,XMZR,XMINSTR) ;
"RTN","XMXREPLY",68,0)
 N XMFDA,XMIENS
"RTN","XMXREPLY",69,0)
 S XMIENS=XMZR_","
"RTN","XMXREPLY",70,0)
 I $D(XMINSTR("FROM")) D
"RTN","XMXREPLY",71,0)
 . S XMFDA(3.9,XMIENS,1)=XMINSTR("FROM")
"RTN","XMXREPLY",72,0)
 . ;S XMFDA(3.9,XMIENS,1.1)=DUZ
"RTN","XMXREPLY",73,0)
 E  D
"RTN","XMXREPLY",74,0)
 . S XMFDA(3.9,XMIENS,1)=XMDUZ
"RTN","XMXREPLY",75,0)
 . S:XMDUZ'=DUZ XMFDA(3.9,XMIENS,1.1)=DUZ
"RTN","XMXREPLY",76,0)
 S XMFDA(3.9,XMIENS,1.4)=$$NOW^XLFDT()
"RTN","XMXREPLY",77,0)
 S XMFDA(3.9,XMIENS,1.35)=XMZ
"RTN","XMXREPLY",78,0)
 D FILE^DIE("","XMFDA")
"RTN","XMXREPLY",79,0)
 Q
"RTN","XMXREPLY",80,0)
REPLYTO(XMZ,XMFROM,XMREPLTO) ; Get from and reply-to address, if any
"RTN","XMXREPLY",81,0)
 N XMHDR,XMFIND
"RTN","XMXREPLY",82,0)
 S XMFIND="^FROM^REPLY-TO^"
"RTN","XMXREPLY",83,0)
 D HDRFIND^XMR1(XMZ,XMFIND,.XMHDR)
"RTN","XMXREPLY",84,0)
 I $D(XMHDR("FROM")) S XMFROM=XMHDR("FROM")
"RTN","XMXREPLY",85,0)
 I $D(XMHDR("REPL")) S XMREPLTO=XMHDR("REPL")
"RTN","XMXREPLY",86,0)
 Q
"RTN","XMXREPLY",87,0)
REPLYTO1(XMZ) ;
"RTN","XMXREPLY",88,0)
 N XMFROM,XMREPLTO
"RTN","XMXREPLY",89,0)
 D REPLYTO(XMZ,.XMFROM,.XMREPLTO)
"RTN","XMXREPLY",90,0)
 Q $$REMADDR^XMXADDR1($G(XMREPLTO,XMFROM))
"RTN","XMXSEC")
0^240^B75144456
"RTN","XMXSEC",1,0)
XMXSEC ;ISC-SF/GMB-Message security and restrictions ;05/27/99  09:51
"RTN","XMXSEC",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXSEC",3,0)
 ; All entry points covered by DBIA 2731.
"RTN","XMXSEC",4,0)
BCAST(XMZ) ; 0=msg was not broadcast; 1=msg was broadcast
"RTN","XMXSEC",5,0)
 Q:$D(^XMB(3.9,XMZ,1,"C","* (Broadcast to all local user")) 1
"RTN","XMXSEC",6,0)
 Q:$D(^XMB(3.9,XMZ,1,"C","* (Broadcast to all local users)")) 1
"RTN","XMXSEC",7,0)
 Q 0
"RTN","XMXSEC",8,0)
ZCLOSED(XMZ) ;
"RTN","XMXSEC",9,0)
 Q $$CLOSED($G(^XMB(3.9,XMZ,0)))
"RTN","XMXSEC",10,0)
CLOSED(XMZREC) ; 0=msg is not closed; 1=msg is closed
"RTN","XMXSEC",11,0)
 Q "^Y^y^"[(U_$P(XMZREC,U,9)_U)
"RTN","XMXSEC",12,0)
ZCONFID(XMZ) ;
"RTN","XMXSEC",13,0)
 Q $$CONFID($G(^XMB(3.9,XMZ,0)))
"RTN","XMXSEC",14,0)
CONFID(XMZREC) ; 0=msg is not confidential; 1=msg is confidential
"RTN","XMXSEC",15,0)
 Q "^Y^y^"[(U_$P(XMZREC,U,11)_U)
"RTN","XMXSEC",16,0)
ZCONFIRM(XMZ) ;
"RTN","XMXSEC",17,0)
 Q $$CONFIRM($G(^XMB(3.9,XMZ,0)))
"RTN","XMXSEC",18,0)
CONFIRM(XMZREC) ; 0=msg is not confirm receipt requested; 1=msg is confirm
"RTN","XMXSEC",19,0)
 Q "^Y^y^"[(U_$P(XMZREC,U,5)_U)
"RTN","XMXSEC",20,0)
ZINFO(XMZ) ;
"RTN","XMXSEC",21,0)
 Q $$INFO($G(^XMB(3.9,XMZ,0)))
"RTN","XMXSEC",22,0)
INFO(XMZREC) ; 0=msg is not information only; 1=msg is information only
"RTN","XMXSEC",23,0)
 Q "^Y^y^"[(U_$P(XMZREC,U,12)_U)
"RTN","XMXSEC",24,0)
ZORIGIN8(XMDUZ,XMZ) ;
"RTN","XMXSEC",25,0)
 Q $$ORIGIN8R(XMDUZ,$G(^XMB(3.9,XMZ,0)))
"RTN","XMXSEC",26,0)
ORIGIN8R(XMDUZ,XMZREC) ; Did the user send the message?
"RTN","XMXSEC",27,0)
 ; 1=user is the originator ; 0=user is NOT the originator
"RTN","XMXSEC",28,0)
 Q:XMDUZ=$P(XMZREC,U,2) 1
"RTN","XMXSEC",29,0)
 Q:XMDUZ=$P(XMZREC,U,4) 1
"RTN","XMXSEC",30,0)
 Q:XMDUZ=DUZ 0
"RTN","XMXSEC",31,0)
 Q:DUZ=$P(XMZREC,U,2) 1
"RTN","XMXSEC",32,0)
 Q:DUZ=$P(XMZREC,U,4) 1
"RTN","XMXSEC",33,0)
 Q 0
"RTN","XMXSEC",34,0)
ZPRI(XMZ) ;
"RTN","XMXSEC",35,0)
 Q $$PRIORITY($G(^XMB(3.9,XMZ,0)))
"RTN","XMXSEC",36,0)
PRIORITY(XMZREC) ; 0=msg is not priority; 1=msg is priority
"RTN","XMXSEC",37,0)
 Q $P(XMZREC,U,7)["P"
"RTN","XMXSEC",38,0)
SURRCONF(XMDUZ,XMZ) ; 0=msg is not confidential; 1=msg is confidential, and surrogate may not read it.
"RTN","XMXSEC",39,0)
 ; We already know that XMDUZ'=DUZ.
"RTN","XMXSEC",40,0)
 ; But the surrogate may read a confidential message if it was the
"RTN","XMXSEC",41,0)
 ; surrogate who sent it.
"RTN","XMXSEC",42,0)
 Q:"^Y^y^"'[(U_$P($G(^XMB(3.9,XMZ,0)),U,11)_U) 0
"RTN","XMXSEC",43,0)
 Q:DUZ=$P(^(0),U,2) 0  ; naked ref from above
"RTN","XMXSEC",44,0)
 Q:DUZ=$P(^(0),U,4) 0  ; naked ref from above
"RTN","XMXSEC",45,0)
 Q 1
"RTN","XMXSEC",46,0)
ACCESS(XMDUZ,XMZ,XMZREC) ; Determines user access to a message.
"RTN","XMXSEC",47,0)
 ; 1=user may access; 0=user may not access
"RTN","XMXSEC",48,0)
 Q:$D(^XMB(3.7,"M",XMZ,XMDUZ)) 1  ; Message is in user's mailbox
"RTN","XMXSEC",49,0)
 N XMPRE
"RTN","XMXSEC",50,0)
 S XMPRE=$P(^XMB(3.7,XMDUZ,0),U,7)
"RTN","XMXSEC",51,0)
 I XMPRE,$P($G(^XMB(3.9,XMZ,.6)),U,1)<XMPRE D  Q 0
"RTN","XMXSEC",52,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",53,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="You may not access any message prior to "_$$MMDT^XMXUTIL1(XMPRE)
"RTN","XMXSEC",54,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",2)="unless someone forwards it to you."
"RTN","XMXSEC",55,0)
 Q:$D(^XMB(3.9,XMZ,1,"C",XMDUZ)) 1  ; User is recipient
"RTN","XMXSEC",56,0)
 ;Q:$D(^XMB(3.9,XMZ,1,"C",DUZ)) 1 ; Surrogate is a recipient.
"RTN","XMXSEC",57,0)
 Q:$$BCAST(XMZ) 1
"RTN","XMXSEC",58,0)
 I $G(XMZREC)="" S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMXSEC",59,0)
 I $P(XMZREC,U,8) D  Q 0
"RTN","XMXSEC",60,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",61,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="Message "_XMZ_" is a response to message "_$P(XMZREC,U,8)_"."
"RTN","XMXSEC",62,0)
 I $$ORIGIN8R(XMDUZ,XMZREC) D  Q 1  ; User is sender
"RTN","XMXSEC",63,0)
 . D ADDRECP^XMTDL(XMZ,$P(XMZREC,U,7)["P",XMDUZ)
"RTN","XMXSEC",64,0)
 . ;D LASTREAD^XMTDL(XMZ,XMDUZ,$P(XMZREC,U,3))
"RTN","XMXSEC",65,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",66,0)
 S ^TMP("XMERR",$J,XMERR,"TEXT",1)="You are neither a sender nor a recipient of this message."
"RTN","XMXSEC",67,0)
 S ^TMP("XMERR",$J,XMERR,"TEXT",2)="If you need to see it, ask someone to forward it to you."
"RTN","XMXSEC",68,0)
 Q 0
"RTN","XMXSEC",69,0)
SURRACC(XMDUZ,XMACCESS,XMZ,XMZREC) ; Determines surrogate access to a message.
"RTN","XMXSEC",70,0)
 ; 1=surrogate may access; 0=surrogate may not access
"RTN","XMXSEC",71,0)
 I $G(XMZREC)="" S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMXSEC",72,0)
 Q:'$$CONFID(XMZREC) 1  ; Message isn't confidential.
"RTN","XMXSEC",73,0)
 Q:DUZ=$P(XMZREC,U,2) 1 ; Surrogate sent the message.
"RTN","XMXSEC",74,0)
 Q:DUZ=$P(XMZREC,U,4) 1 ; Surrogate sent the message.
"RTN","XMXSEC",75,0)
 ;Q:$D(^XMB(3.9,XMZ,1,"C",DUZ)) 1 ; Surrogate is a recipient.
"RTN","XMXSEC",76,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",77,0)
 S ^TMP("XMERR",$J,XMERR,"TEXT",1)="Surrogates may not "_XMACCESS_" CONFIDENTIAL messages."
"RTN","XMXSEC",78,0)
 Q 0
"RTN","XMXSEC",79,0)
ANSWER(XMDUZ,XMZ,XMZREC) ; Answer (1=may, 0=may not)
"RTN","XMXSEC",80,0)
 I DUZ=.6!(XMDUZ=.6) D  Q 0
"RTN","XMXSEC",81,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",82,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="SHARED,MAIL may not answer a message."
"RTN","XMXSEC",83,0)
 I XMDUZ'=DUZ Q:'$$WPRIV 0  Q:'$$SURRACC(XMDUZ,"answer",XMZ,.XMZREC) 0
"RTN","XMXSEC",84,0)
 I $G(XMZREC)="" S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMXSEC",85,0)
 I $$PAKMAN^XMXSEC1(XMZ,XMZREC) D  Q 0
"RTN","XMXSEC",86,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",87,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="May not answer a PackMan message."
"RTN","XMXSEC",88,0)
 I $D(^XMB(3.9,XMZ,"K")) D  Q 0
"RTN","XMXSEC",89,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",90,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="May not answer a scrambled message.  Use Reply."
"RTN","XMXSEC",91,0)
 I "^^"[$G(^XMB(3.7,XMDUZ,"NS1")) D  Q 0
"RTN","XMXSEC",92,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",93,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="Must have a network signature in order to answer a message."
"RTN","XMXSEC",94,0)
 Q 1
"RTN","XMXSEC",95,0)
COPY(XMDUZ,XMZ,XMZREC) ; Copy (1=may, 0=may not)
"RTN","XMXSEC",96,0)
 I XMDUZ'=DUZ Q:'$$WPRIV 0  Q:'$$SURRACC(XMDUZ,"copy",XMZ,.XMZREC) 0
"RTN","XMXSEC",97,0)
 I $G(XMZREC)="" S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMXSEC",98,0)
 I $$CLOSED(XMZREC),'$$ORIGIN8R(XMDUZ,XMZREC) D  Q 0
"RTN","XMXSEC",99,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",100,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="Only the message originator may copy CLOSED messages."
"RTN","XMXSEC",101,0)
 I XMDUZ=.6,DUZ'=$P(XMZREC,U,2),DUZ'=$P(XMZREC,U,4) D  Q 0
"RTN","XMXSEC",102,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",103,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="Only the originator may copy messages in SHARED,MAIL"
"RTN","XMXSEC",104,0)
 I $D(^XMB(3.9,XMZ,"K")) D  Q 0
"RTN","XMXSEC",105,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",106,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="May not copy a scrambled message."
"RTN","XMXSEC",107,0)
 Q 1
"RTN","XMXSEC",108,0)
DELETE(XMDUZ,XMK,XMZ,XMZREC) ; Delete, Terminate (1=may, 0=may not)
"RTN","XMXSEC",109,0)
 Q:XMDUZ=DUZ 1
"RTN","XMXSEC",110,0)
 Q:'$$RWPRIV 0
"RTN","XMXSEC",111,0)
 I XMDUZ=.5,XMK>999 Q 1
"RTN","XMXSEC",112,0)
 Q:'$$SURRACC(XMDUZ,"delete",XMZ,.XMZREC) 0
"RTN","XMXSEC",113,0)
 I $G(XMZREC)="" S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMXSEC",114,0)
 I XMDUZ=.6,DUZ'=$P(XMZREC,U,2),DUZ'=$P(XMZREC,U,4),'$D(^XUSEC("XMMGR",DUZ)),'$D(^XMB(3.7,"AB",DUZ,.5,0)) D  Q 0
"RTN","XMXSEC",115,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",116,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="Only the originator, postmaster surrogate, or XMMGR key holder"
"RTN","XMXSEC",117,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",2)="may Delete, Terminate, Save, or Filter messages in SHARED,MAIL"
"RTN","XMXSEC",118,0)
 Q 1
"RTN","XMXSEC",119,0)
FORWARD(XMDUZ,XMZ,XMZREC) ; Forward (1=may, 0=may not)
"RTN","XMXSEC",120,0)
 I XMDUZ'=DUZ Q:'$$RWPRIV 0  Q:'$$SURRACC(XMDUZ,"forward",XMZ,.XMZREC) 0
"RTN","XMXSEC",121,0)
 I $G(XMZREC)="" S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMXSEC",122,0)
 I $$CLOSED(XMZREC),'$$ORIGIN8R(XMDUZ,XMZREC) D  Q 0
"RTN","XMXSEC",123,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",124,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="Only the message originator may forward CLOSED messages."
"RTN","XMXSEC",125,0)
 I XMDUZ=.6,DUZ'=$P(XMZREC,U,2),DUZ'=$P(XMZREC,U,4) D  Q 0
"RTN","XMXSEC",126,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",127,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="Only the originator may forward messages in SHARED,MAIL"
"RTN","XMXSEC",128,0)
 Q 1
"RTN","XMXSEC",129,0)
LATER(XMDUZ) ; Later (1=may, 0=may not)
"RTN","XMXSEC",130,0)
 I DUZ=.6!(XMDUZ=.6) D  Q 0
"RTN","XMXSEC",131,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="SHARED,MAIL may not 'later' a message."
"RTN","XMXSEC",132,0)
 Q:XMDUZ=DUZ 1
"RTN","XMXSEC",133,0)
 Q $$RWPRIV
"RTN","XMXSEC",134,0)
MOVE(XMDUZ,XMZ,XMZREC) ; Save or Filter (1=may, 0=may not)
"RTN","XMXSEC",135,0)
 Q:XMDUZ=DUZ 1
"RTN","XMXSEC",136,0)
 Q:'$$RWPRIV 0
"RTN","XMXSEC",137,0)
 ;Q:'$$SURRACC(XMDUZ,"save",XMZ,.XMZREC) 0
"RTN","XMXSEC",138,0)
 I $G(XMZREC)="" S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMXSEC",139,0)
 I XMDUZ=.6,DUZ'=$P(XMZREC,U,2),DUZ'=$P(XMZREC,U,4),'$D(^XUSEC("XMMGR",DUZ)),'$D(^XMB(3.7,"AB",DUZ,.5,0)) D  Q 0
"RTN","XMXSEC",140,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",141,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="Only the originator, postmaster surrogate, or XMMGR key holder"
"RTN","XMXSEC",142,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",2)="may Delete, Terminate, Save, or Filter messages in SHARED,MAIL"
"RTN","XMXSEC",143,0)
 Q 1
"RTN","XMXSEC",144,0)
READ(XMDUZ,XMZ,XMZREC) ; Read or Print (1=may, 0=may not)
"RTN","XMXSEC",145,0)
 Q:XMDUZ=DUZ 1
"RTN","XMXSEC",146,0)
 Q $$SURRACC(XMDUZ,"access",XMZ,.XMZREC)
"RTN","XMXSEC",147,0)
REPLY(XMDUZ,XMZ,XMZREC) ; Reply (1=may, 0=may not)
"RTN","XMXSEC",148,0)
 I DUZ=.6 D  Q 0
"RTN","XMXSEC",149,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",150,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="May not reply to message as SHARED,MAIL"
"RTN","XMXSEC",151,0)
 I XMDUZ'=DUZ Q:'$$RWPRIV 0  Q:'$$SURRACC(XMDUZ,"reply to",XMZ,.XMZREC) 0
"RTN","XMXSEC",152,0)
 I $G(XMZREC)="" S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMXSEC",153,0)
 I $D(^XMB(3.9,XMZ,"K")),$$PAKMAN^XMXSEC1(XMZ,XMZREC) D  Q 0
"RTN","XMXSEC",154,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",155,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="May not reply to secure PackMan message."
"RTN","XMXSEC",156,0)
 Q:$$ORIGIN8R(XMDUZ,XMZREC) 1
"RTN","XMXSEC",157,0)
 I $$INFO(XMZREC) D  Q 0
"RTN","XMXSEC",158,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",159,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="Only originator may reply to 'INFORMATION ONLY' message."
"RTN","XMXSEC",160,0)
 I $P($G(^XMB(3.9,XMZ,1,+$O(^XMB(3.9,XMZ,1,"C",XMDUZ,0)),"T")),U,1)["I" D  Q 0
"RTN","XMXSEC",161,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",162,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="'INFORMATION ONLY' recipient may not reply to message."
"RTN","XMXSEC",163,0)
 I $P(XMZREC,U,2)["POSTMASTER@" D  Q 0
"RTN","XMXSEC",164,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"XMZ")=XMZ
"RTN","XMXSEC",165,0)
 . S ^TMP("XMERR",$J,XMERR,"TEXT",1)="May not reply to message from remote POSTMASTER."
"RTN","XMXSEC",166,0)
 Q 1
"RTN","XMXSEC",167,0)
SEND(XMDUZ,XMINSTR) ; Send (1=may, 0=may not)
"RTN","XMXSEC",168,0)
 I DUZ=.6!(XMDUZ=.6) D  Q 0
"RTN","XMXSEC",169,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="SHARED,MAIL may not send a message."
"RTN","XMXSEC",170,0)
 Q:XMDUZ=DUZ 1
"RTN","XMXSEC",171,0)
 Q:$D(XMINSTR("FROM")) 1
"RTN","XMXSEC",172,0)
 Q:XMDUZ=.5 1
"RTN","XMXSEC",173,0)
 Q $$WPRIV
"RTN","XMXSEC",174,0)
RWPRIV() ; Does the surrogate have 'read' or 'write' privilege? (1=yes, 0=no)
"RTN","XMXSEC",175,0)
 Q:$G(XMV("PRIV"))["R"!($G(XMV("PRIV"))["W") 1
"RTN","XMXSEC",176,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="You do not have 'read' or 'write' privilege for "_XMV("NAME")
"RTN","XMXSEC",177,0)
 Q 0
"RTN","XMXSEC",178,0)
RPRIV() ; Does the surrogate have 'read' privilege? (1=yes, 0=no)
"RTN","XMXSEC",179,0)
 Q:$G(XMV("PRIV"))["R" 1
"RTN","XMXSEC",180,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="You do not have 'read' privilege for "_XMV("NAME")
"RTN","XMXSEC",181,0)
 Q 0
"RTN","XMXSEC",182,0)
WPRIV() ; Does the surrogate have 'write' privilege? (1=yes, 0=no)
"RTN","XMXSEC",183,0)
 Q:$G(XMV("PRIV"))["W" 1
"RTN","XMXSEC",184,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="You do not have 'write' privilege for "_XMV("NAME")
"RTN","XMXSEC",185,0)
 Q 0
"RTN","XMXSEC",186,0)
POSTPRIV() ; Perform postmaster actions (1=may, 0=may not)
"RTN","XMXSEC",187,0)
 ; This includes permission to perform group message actions in Shared,Mail.
"RTN","XMXSEC",188,0)
 I '$D(^XUSEC("XMMGR",DUZ)),'$D(^XMB(3.7,"AB",DUZ,.5)) D  Q 0
"RTN","XMXSEC",189,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Only a POSTMASTER surrogate or XMMGR key holder may do this."
"RTN","XMXSEC",190,0)
 Q 1
"RTN","XMXSEC",191,0)
ZPOSTPRV() ; Perform postmaster actions (1=may, 0=may not)
"RTN","XMXSEC",192,0)
 ; This includes permission to perform group message actions in Shared,Mail.
"RTN","XMXSEC",193,0)
 Q:$D(^XUSEC("XMMGR",DUZ)) 1
"RTN","XMXSEC",194,0)
 Q:$D(^XMB(3.7,"AB",DUZ,.5)) 1
"RTN","XMXSEC",195,0)
 Q 0
"RTN","XMXSEC1")
0^241^B41035184
"RTN","XMXSEC1",1,0)
XMXSEC1 ;ISC-SF/GMB-Message security and restrictions (cont'd) ;06/07/99  10:05
"RTN","XMXSEC1",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXSEC1",3,0)
 ; All entry points covered by DBIA 2732.
"RTN","XMXSEC1",4,0)
GETRESTR(XMDUZ,XMZ,XMZREC,XMINSTR,XMRESTR) ;
"RTN","XMXSEC1",5,0)
 ; If a message is closed, it may not be forwarded to SHARED,MAIL, even by the sender
"RTN","XMXSEC1",6,0)
 I $G(XMZREC)="" S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMXSEC1",7,0)
 S:"^Y^y^"[(U_$P(XMZREC,U,9)_U) XMRESTR("FLAGS")=$G(XMRESTR("FLAGS"))_"X"
"RTN","XMXSEC1",8,0)
 ; If a message is confidential, it may not be forwarded to SHARED,MAIL
"RTN","XMXSEC1",9,0)
 S:"^Y^y^"[(U_$P(XMZREC,U,11)_U) XMRESTR("FLAGS")=$G(XMRESTR("FLAGS"))_"C"
"RTN","XMXSEC1",10,0)
 Q:$G(XMINSTR("ADDR FLAGS"))["R"
"RTN","XMXSEC1",11,0)
 ; If a message is priority, it may not be forwarded to groups unless
"RTN","XMXSEC1",12,0)
 ; the user is the originator or possesses the proper security key.
"RTN","XMXSEC1",13,0)
 I $P(XMZREC,U,7)["P",'$$ORIGIN8R^XMXSEC(XMDUZ,XMZREC),'$D(^XUSEC("XM GROUP PRIORITY",XMDUZ)) S XMRESTR("NOFPG")=""
"RTN","XMXSEC1",14,0)
 ; If a message is more lines than the limit, then it may not be sent/forwarded to a remote site
"RTN","XMXSEC1",15,0)
 D CHKLINES(XMDUZ,XMZ,.XMRESTR)
"RTN","XMXSEC1",16,0)
 Q
"RTN","XMXSEC1",17,0)
CHKLINES(XMDUZ,XMZ,XMRESTR) ; Replaces NO^XMA21A
"RTN","XMXSEC1",18,0)
 N XMLIMIT
"RTN","XMXSEC1",19,0)
 Q:$D(^XUSEC("XMMGR",XMDUZ))
"RTN","XMXSEC1",20,0)
 S XMLIMIT=$P($G(^XMB(1,1,"NETWORK-LIMIT")),U)
"RTN","XMXSEC1",21,0)
 I XMLIMIT,$P($G(^XMB(3.9,XMZ,2,0)),U,4)>XMLIMIT S XMRESTR("NONET")=XMLIMIT
"RTN","XMXSEC1",22,0)
 Q
"RTN","XMXSEC1",23,0)
CHKMSG(XMDUZ,XMK,XMKZ,XMZ,XMZREC) ; Is the message where the calling routine says it is,
"RTN","XMXSEC1",24,0)
 ; and is the user authorized to access it?
"RTN","XMXSEC1",25,0)
 I $G(XMK) D  Q
"RTN","XMXSEC1",26,0)
 . S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,""))
"RTN","XMXSEC1",27,0)
 . I 'XMZ S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Message "_XMKZ_" not found in basket "_XMK_"." Q
"RTN","XMXSEC1",28,0)
 . S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMXSEC1",29,0)
 . I XMZREC="" S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Message "_XMZ_" not found (message "_XMKZ_" in basket "_XMK_")."
"RTN","XMXSEC1",30,0)
 S XMZ=XMKZ
"RTN","XMXSEC1",31,0)
 S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMXSEC1",32,0)
 I XMZREC="" S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Message "_XMZ_" not found." Q
"RTN","XMXSEC1",33,0)
 Q:'$$ACCESS^XMXSEC(XMDUZ,XMZ,XMZREC)
"RTN","XMXSEC1",34,0)
 S XMK=+$O(^XMB(3.7,"M",XMZ,XMDUZ,""))
"RTN","XMXSEC1",35,0)
 Q:'XMK
"RTN","XMXSEC1",36,0)
 S XMKZ=$P($G(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)),U,2)
"RTN","XMXSEC1",37,0)
 I 'XMKZ S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="The 'M' xref says message "_XMZ_" is in basket "_XMK_", but it isn't." Q
"RTN","XMXSEC1",38,0)
 Q
"RTN","XMXSEC1",39,0)
PAKMAN(XMZ,XMZREC) ; Returns 1 if this is a packman msg; 0 if not.
"RTN","XMXSEC1",40,0)
 ; Unfortunately, there isn't always an "X" in piece 7 of the zero node,
"RTN","XMXSEC1",41,0)
 ; so we must go check out the first line of text.
"RTN","XMXSEC1",42,0)
 N XMTYPE
"RTN","XMXSEC1",43,0)
 I $G(XMZREC)="" S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMXSEC1",44,0)
 S XMTYPE=$P(XMZREC,U,7)
"RTN","XMXSEC1",45,0)
 I "P"[XMTYPE D  Q XMTYPE  ; "P" means priority, and it exists along with
"RTN","XMXSEC1",46,0)
 . ; message type in piece 7 in all MailMan versions thru 7.*
"RTN","XMXSEC1",47,0)
 . N XMREC,XMI
"RTN","XMXSEC1",48,0)
 . S XMTYPE=0
"RTN","XMXSEC1",49,0)
 . S XMI=$O(^XMB(3.9,XMZ,2,.999999)) I 'XMI Q
"RTN","XMXSEC1",50,0)
 . S XMREC=^XMB(3.9,XMZ,2,XMI,0)
"RTN","XMXSEC1",51,0)
 . Q:$E(XMREC,1)'="$"
"RTN","XMXSEC1",52,0)
 . I XMREC?1"$TXT Created by".E1" at ".E1" on ".E S XMTYPE=1 Q  ; Unsecured PackMan
"RTN","XMXSEC1",53,0)
 . I XMREC?1"$TXT PACKMAN BACKUP".E S XMTYPE=1 Q  ; PackMan Backup
"RTN","XMXSEC1",54,0)
 . I XMREC?1"$TXT ^Created by".E1" at ".E1" on ".E S XMTYPE=1 Q  ; Secured PackMan
"RTN","XMXSEC1",55,0)
 Q:XMTYPE="K"!(XMTYPE="X") 1  ; PackMan message (KIDS or regular)
"RTN","XMXSEC1",56,0)
 Q 0
"RTN","XMXSEC1",57,0)
OPTGRP(XMDUZ,XMK,XMOPT) ; What may the user do at the basket/message group level?
"RTN","XMXSEC1",58,0)
 I XMK D
"RTN","XMXSEC1",59,0)
 . I XMDUZ=.5,XMK>999 D OPTPOST(.XMOPT) Q
"RTN","XMXSEC1",60,0)
 . D OPTUSER1(XMDUZ,.XMOPT)
"RTN","XMXSEC1",61,0)
 . D OPTUSER2(XMK,.XMOPT)
"RTN","XMXSEC1",62,0)
 E  D
"RTN","XMXSEC1",63,0)
 . D OPTUSER1(XMDUZ,.XMOPT)
"RTN","XMXSEC1",64,0)
 Q
"RTN","XMXSEC1",65,0)
OPTUSER1(XMDUZ,XMOPT) ;
"RTN","XMXSEC1",66,0)
 S XMOPT("D")="Delete messages"
"RTN","XMXSEC1",67,0)
 S XMOPT("F")="Forward messages"
"RTN","XMXSEC1",68,0)
 S XMOPT("FI")="Filter messages"
"RTN","XMXSEC1",69,0)
 S XMOPT("H")="Headerless Print messages"
"RTN","XMXSEC1",70,0)
 S XMOPT("L")="Later messages"
"RTN","XMXSEC1",71,0)
 S XMOPT("P")="Print messages"
"RTN","XMXSEC1",72,0)
 S XMOPT("S")="Save messages to another basket"
"RTN","XMXSEC1",73,0)
 S XMOPT("T")="Terminate messages"
"RTN","XMXSEC1",74,0)
 S:'$D(^XMB(3.7,XMDUZ,15,"AF")) XMOPT("FI","?")=$S(XMDUZ=DUZ:"You have",1:XMV("NAME")_" has")_" no message filters defined."
"RTN","XMXSEC1",75,0)
 Q:XMDUZ'=.6!$$ZPOSTPRV^XMXSEC()
"RTN","XMXSEC1",76,0)
 S XMOPT("D","?",1)="You must hold the XMMGR key or be a POSTMASTER surrogate"
"RTN","XMXSEC1",77,0)
 S XMOPT("D","?")="to Delete groups of messages in SHARED,MAIL."
"RTN","XMXSEC1",78,0)
 S XMOPT("F","?",1)=XMOPT("D","?",1)
"RTN","XMXSEC1",79,0)
 S XMOPT("F","?")="to Forward groups of messages in SHARED,MAIL."
"RTN","XMXSEC1",80,0)
 S XMOPT("FI","?",1)=XMOPT("D","?",1)
"RTN","XMXSEC1",81,0)
 S XMOPT("FI","?")="to Filter groups of messages in SHARED,MAIL."
"RTN","XMXSEC1",82,0)
 S XMOPT("L","?",1)=XMOPT("D","?",1)
"RTN","XMXSEC1",83,0)
 S XMOPT("L","?")="to Later groups of messages in SHARED,MAIL."
"RTN","XMXSEC1",84,0)
 S XMOPT("S","?",1)=XMOPT("D","?",1)
"RTN","XMXSEC1",85,0)
 S XMOPT("S","?")="to Save groups of messages to another basket in SHARED,MAIL."
"RTN","XMXSEC1",86,0)
 S XMOPT("T","?",1)=XMOPT("D","?",1)
"RTN","XMXSEC1",87,0)
 S XMOPT("T","?")="to Terminate groups of messages in SHARED,MAIL."
"RTN","XMXSEC1",88,0)
 Q
"RTN","XMXSEC1",89,0)
OPTUSER2(XMK,XMOPT) ;
"RTN","XMXSEC1",90,0)
 S XMOPT("C")="Change the name of this basket"
"RTN","XMXSEC1",91,0)
 S XMOPT("N")="New message list"
"RTN","XMXSEC1",92,0)
 S XMOPT("Q")="Query (search for) messages in this basket"
"RTN","XMXSEC1",93,0)
 S XMOPT("R")="Resequence messages"
"RTN","XMXSEC1",94,0)
 S:XMK'>1 XMOPT("C","?")="The name of "_$S(XMK=1:"the IN",XMK=.5:"the WASTE",1:"this")_" basket may not be changed."
"RTN","XMXSEC1",95,0)
 Q:XMDUZ'=.6!$$ZPOSTPRV^XMXSEC()
"RTN","XMXSEC1",96,0)
 S XMOPT("C","?",1)="You must hold the XMMGR key or be a POSTMASTER surrogate"
"RTN","XMXSEC1",97,0)
 S XMOPT("C","?")="to Change the name of a basket in SHARED,MAIL."
"RTN","XMXSEC1",98,0)
 Q
"RTN","XMXSEC1",99,0)
OPTPOST(XMOPT) ;
"RTN","XMXSEC1",100,0)
 S XMOPT("D")="Delete messages"
"RTN","XMXSEC1",101,0)
 S XMOPT("R")="Resequence messages"
"RTN","XMXSEC1",102,0)
 S XMOPT("X")="Xmit Priority toggle"
"RTN","XMXSEC1",103,0)
 Q
"RTN","XMXSEC1",104,0)
COPYAMT(XMZ,XMWHICH) ; Checks total number of lines to be copied and total number of responses to be copied.
"RTN","XMXSEC1",105,0)
 ; Function returns 1 if OK; 0 if not OK.
"RTN","XMXSEC1",106,0)
 ; XMWHICH string of which responses to copy (0=original msg).
"RTN","XMXSEC1",107,0)
 ;         Default = original msg and all responses.
"RTN","XMXSEC1",108,0)
 N XMLIMIT,XMRESPS,XMABORT
"RTN","XMXSEC1",109,0)
 S XMABORT=0
"RTN","XMXSEC1",110,0)
 S XMLIMIT=$$COPYLIMS
"RTN","XMXSEC1",111,0)
 S XMRESPS=+$P($G(^XMB(3.9,XMZ,3,0)),U,4)
"RTN","XMXSEC1",112,0)
 I XMRESPS=0 D TOOMANY(+$P($G(^XMB(3.9,XMZ,2,0)),U,4),$P(XMLIMIT,U,3),"lines",.XMABORT) Q 'XMABORT
"RTN","XMXSEC1",113,0)
 N I,J,XMRANGE,XMLINES
"RTN","XMXSEC1",114,0)
 S:'$D(XMWHICH) XMWHICH="0-"_XMRESPS
"RTN","XMXSEC1",115,0)
 S (XMRESPS,XMLINES)=0
"RTN","XMXSEC1",116,0)
 F I=1:1:$L(XMWHICH,",")-1 D
"RTN","XMXSEC1",117,0)
 . S XMRANGE=$P(XMWHICH,",",I)
"RTN","XMXSEC1",118,0)
 . F J=$P(XMRANGE,"-",1):1:$S(XMRANGE["-":$P(XMRANGE,"-",2),1:XMRANGE) D
"RTN","XMXSEC1",119,0)
 . . S XMRESPS=XMRESPS+1
"RTN","XMXSEC1",120,0)
 . . I J=0 S XMLINES=XMLINES+$P($G(^XMB(3.9,XMZ,2,0)),U,4) Q
"RTN","XMXSEC1",121,0)
 . . S XMLINES=XMLINES+$P($G(^XMB(3.9,+$G(^XMB(3.9,XMZ,3,J,0)),2,0)),U,4)
"RTN","XMXSEC1",122,0)
 D TOOMANY(XMLINES,$P(XMLIMIT,U,3),"lines",.XMABORT) Q:XMABORT 0
"RTN","XMXSEC1",123,0)
 D TOOMANY(XMRESPS,$P(XMLIMIT,U,2),"responses",.XMABORT) Q:XMABORT 0
"RTN","XMXSEC1",124,0)
 Q 1
"RTN","XMXSEC1",125,0)
TOOMANY(HOWMANY,XMLIMIT,XMNOUN,XMABORT) ;
"RTN","XMXSEC1",126,0)
 Q:HOWMANY'>XMLIMIT
"RTN","XMXSEC1",127,0)
 S XMABORT=1
"RTN","XMXSEC1",128,0)
 S XMERR=$G(XMERR)+1
"RTN","XMXSEC1",129,0)
 S ^TMP("XMERR",$J,XMERR,"TEXT",1)="You may not copy more than the site limit of "_XMLIMIT_" "_XMNOUN_"."
"RTN","XMXSEC1",130,0)
 Q
"RTN","XMXSEC1",131,0)
COPYLIMS() ; Function returns copy limits string.
"RTN","XMXSEC1",132,0)
 ; limits:  # recipients^# responses^# lines
"RTN","XMXSEC1",133,0)
 N I
"RTN","XMXSEC1",134,0)
 S XMLIMIT=$G(^XMB(1,1,.11))
"RTN","XMXSEC1",135,0)
 F I=1:1:3 I '$P(XMLIMIT,U,I) S $P(XMLIMIT,U,I)=$P("2999^99^3999",U,I)
"RTN","XMXSEC1",136,0)
 Q XMLIMIT
"RTN","XMXSEC1",137,0)
COPYRECP(XMZ) ; Checks total number of recipients to see if it's OK to list them in the copy text and send the copy to them, too.
"RTN","XMXSEC1",138,0)
 ; Function returns 1 if OK; 0 if not OK.
"RTN","XMXSEC1",139,0)
 N XMLIMIT
"RTN","XMXSEC1",140,0)
 S XMLIMIT=$$COPYLIMS
"RTN","XMXSEC1",141,0)
 Q:$P($G(^XMB(3.9,XMZ,1,0)),U,4)'>$P(XMLIMIT,U,1) 1
"RTN","XMXSEC1",142,0)
 S XMERR=$G(XMERR)+1
"RTN","XMXSEC1",143,0)
 S ^TMP("XMERR",$J,XMERR,"TEXT",1)="Because this message has more than the site limit of "_$P(XMLIMIT,U,1)_" recipients,"
"RTN","XMXSEC1",144,0)
 S ^TMP("XMERR",$J,XMERR,"TEXT",2)="we will neither list them in the text of the copy,"
"RTN","XMXSEC1",145,0)
 S ^TMP("XMERR",$J,XMERR,"TEXT",3)="nor will we deliver the copy to them."
"RTN","XMXSEC1",146,0)
 Q 0
"RTN","XMXSEC2")
0^246^B66710999
"RTN","XMXSEC2",1,0)
XMXSEC2 ;ISC-SF/GMB-Message security and restrictions ;04/16/99  10:31
"RTN","XMXSEC2",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXSEC2",3,0)
 ; All entry points covered by DBIA 2733.
"RTN","XMXSEC2",4,0)
EDIT(XMDUZ,XMZ,XMZREC) ; May the user edit the message? (1=may, 0=may not)
"RTN","XMXSEC2",5,0)
 I '$$ORIGIN8R^XMXSEC(XMDUZ,.XMZREC) D  Q 0
"RTN","XMXSEC2",6,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="You can't edit this message, because you didn't send it."
"RTN","XMXSEC2",7,0)
 E  I $P($G(^XMB(3.9,XMZ,1,0)),U,4)>1!($P(XMZREC,U,2)'=$O(^XMB(3.9,XMZ,1,"C",0))) D  Q 0
"RTN","XMXSEC2",8,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="You can't edit this message, because you have already sent it to someone else."
"RTN","XMXSEC2",9,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",2)="You may toggle the 'information only' switch, if you wish."
"RTN","XMXSEC2",10,0)
 Q 1
"RTN","XMXSEC2",11,0)
OPTEDIT(XMINSTR,XMOPT) ; We know the user may edit the message.
"RTN","XMXSEC2",12,0)
 ; Now, what, exactly, may be edited?
"RTN","XMXSEC2",13,0)
 S XMOPT("C")=$S(XMINSTR("FLAGS")["C":"UnConfidential (surrogate may read)",1:"Confidential (surrogate can't read)")
"RTN","XMXSEC2",14,0)
 S XMOPT("D")=$S($D(XMINSTR("RCPT BSKT")):"Delivery basket remove",1:"Delivery basket set")
"RTN","XMXSEC2",15,0)
 S XMOPT("P")=$S($G(XMINSTR("FLAGS"))["P":"Normal delivery",1:"Priority delivery")
"RTN","XMXSEC2",16,0)
 S XMOPT("R")=$S($G(XMINSTR("FLAGS"))["R":"No Confirm receipt",1:"Confirm receipt")
"RTN","XMXSEC2",17,0)
 S XMOPT("S")="Edit Subject"
"RTN","XMXSEC2",18,0)
 S XMOPT("T")="Edit Text"
"RTN","XMXSEC2",19,0)
 S XMOPT("V")=$S($G(XMINSTR("VAPOR")):"Vaporize date remove",1:"Vaporize date set")
"RTN","XMXSEC2",20,0)
 S XMOPT("X")=$S(XMINSTR("FLAGS")["X":"UnClose (forward allowed)",1:"Closed (no forward allowed)")
"RTN","XMXSEC2",21,0)
 I $D(^TMP("XMY",$J,.6)) D
"RTN","XMXSEC2",22,0)
 . S XMOPT("X","?")="Messages addressed to SHARED,MAIL may not be 'Closed'."
"RTN","XMXSEC2",23,0)
 . S XMOPT("C","?")="Messages addressed to SHARED,MAIL may not be 'Confidential'."
"RTN","XMXSEC2",24,0)
 Q
"RTN","XMXSEC2",25,0)
OPTMSG(XMDUZ,XMK,XMZ,XMIM,XMINSTR,XMIU,XMOPT) ; The user has access to the message.  Now what may the user do with it?
"RTN","XMXSEC2",26,0)
 ; in:
"RTN","XMXSEC2",27,0)
 ; XMDUZ  = the user
"RTN","XMXSEC2",28,0)
 ; XMK    = basket IEN if message is in a basket
"RTN","XMXSEC2",29,0)
 ;        = 0 otherwise
"RTN","XMXSEC2",30,0)
 ; XMZ    = the message IEN
"RTN","XMXSEC2",31,0)
 ; The following are set by INMSG1 and INMSG2^XMXUTIL2
"RTN","XMXSEC2",32,0)
 ; XMIM("FROM")  = piece 2 of the message's zero node
"RTN","XMXSEC2",33,0)
 ; XMINSTR       = special instructions
"RTN","XMXSEC2",34,0)
 ; XMIU("ORIGN8")=
"RTN","XMXSEC2",35,0)
 ; XMIU("IEN")   = the user's IEN in the message's recipient multiple
"RTN","XMXSEC2",36,0)
 ; out:
"RTN","XMXSEC2",37,0)
 ; XMOPT(<opt>) Possible options
"RTN","XMXSEC2",38,0)
 ; '$D(XMOPT(<opt>,"?")) User may do these things.
"RTN","XMXSEC2",39,0)
 ;  $D(XMOPT(<opt>,"?")) User may NOT do these things.
"RTN","XMXSEC2",40,0)
 N XMSECPAK ;,XMK
"RTN","XMXSEC2",41,0)
 ;S XMK=+$O(^XMB(3.7,"M",XMZ,XMDUZ,0))
"RTN","XMXSEC2",42,0)
 I $D(^XMB(3.9,XMZ,"K")),XMINSTR("TYPE")["X"!(XMINSTR("TYPE")["K") S XMSECPAK=1 ; secure packman
"RTN","XMXSEC2",43,0)
 E  S XMSECPAK=0
"RTN","XMXSEC2",44,0)
 K XMOPT
"RTN","XMXSEC2",45,0)
 S XMOPT("A")="Answer"
"RTN","XMXSEC2",46,0)
 S XMOPT("AA")="Access Attachments"
"RTN","XMXSEC2",47,0)
 S XMOPT("B")="Backup"
"RTN","XMXSEC2",48,0)
 S XMOPT("C")="Copy"
"RTN","XMXSEC2",49,0)
 S XMOPT("D")="Delete"
"RTN","XMXSEC2",50,0)
 S XMOPT("E")="Edit"
"RTN","XMXSEC2",51,0)
 S XMOPT("F")="Forward"
"RTN","XMXSEC2",52,0)
 S XMOPT("I")="Ignore"
"RTN","XMXSEC2",53,0)
 S XMOPT("IN")=$S($G(XMINSTR("FLAGS"))["I":"Un Info only",1:"Info only")
"RTN","XMXSEC2",54,0)
 S XMOPT("H")="Headerless Print"
"RTN","XMXSEC2",55,0)
 S XMOPT("K")=$S($G(XMINSTR("FLAGS"))["K":"Un Priority replies",1:"Priority replies")
"RTN","XMXSEC2",56,0)
 S XMOPT("L")="Later"
"RTN","XMXSEC2",57,0)
 S XMOPT("N")=$S($G(XMINSTR("FLAGS"))["N":"Un New",1:"New")
"RTN","XMXSEC2",58,0)
 S XMOPT("P")="Print"
"RTN","XMXSEC2",59,0)
 S XMOPT("Q")="Query"
"RTN","XMXSEC2",60,0)
 S XMOPT("QR")="Query Recipients"
"RTN","XMXSEC2",61,0)
 S XMOPT("QD")="Query Detailed"
"RTN","XMXSEC2",62,0)
 S XMOPT("QN")="Query Network"
"RTN","XMXSEC2",63,0)
 S XMOPT("R")="Reply"
"RTN","XMXSEC2",64,0)
 S XMOPT("S")="Save"
"RTN","XMXSEC2",65,0)
 S XMOPT("T")="Terminate"
"RTN","XMXSEC2",66,0)
 S XMOPT("V")="Vaporize date edit"
"RTN","XMXSEC2",67,0)
 S XMOPT("W")="Write"
"RTN","XMXSEC2",68,0)
 S XMOPT("X")=$S($G(XMINSTR("TYPE"))["K":"Xtract KIDS",$G(XMINSTR("TYPE"))["X":"Xtract PackMan",1:"Xtract")
"RTN","XMXSEC2",69,0)
 I XMDUZ=DUZ!($G(XMV("PRIV"))["W") D
"RTN","XMXSEC2",70,0)
 . D OPTW(XMDUZ,XMZ,XMIM("FROM"),XMIU("ORIGN8"),XMSECPAK,.XMINSTR)
"RTN","XMXSEC2",71,0)
 E  D
"RTN","XMXSEC2",72,0)
 . D OPTWNO(XMIU("ORIGN8"))
"RTN","XMXSEC2",73,0)
 D OPTR(XMDUZ,XMK,XMZ,.XMIU,XMSECPAK,.XMINSTR)
"RTN","XMXSEC2",74,0)
 I XMDUZ=.6 D DOSHARE(XMDUZ,XMK,XMIU("ORIGN8"),.XMINSTR) Q
"RTN","XMXSEC2",75,0)
 I XMDUZ=.5,XMK>999 D DOPOST
"RTN","XMXSEC2",76,0)
 Q
"RTN","XMXSEC2",77,0)
OPTW(XMDUZ,XMZ,XMFROM,XMORIGN8,XMSECPAK,XMINSTR) ; User must be self or have 'write' privilege as surrogate.
"RTN","XMXSEC2",78,0)
 I XMINSTR("FLAGS")["X",'XMORIGN8 S XMOPT("C","?")="You may not Copy a closed message unless you sent it."
"RTN","XMXSEC2",79,0)
 I $D(^XMB(3.9,XMZ,"K")) D
"RTN","XMXSEC2",80,0)
 . I XMSECPAK S XMOPT("C","?")="You may not Copy a secure KIDS or PackMan message."
"RTN","XMXSEC2",81,0)
 . E  D
"RTN","XMXSEC2",82,0)
 . . S XMOPT("A","?")="You may not Answer a scrambled message.  Use Reply."
"RTN","XMXSEC2",83,0)
 . . S XMOPT("C","?")="You may not Copy a scrambled message."
"RTN","XMXSEC2",84,0)
 I XMINSTR("TYPE")["X"!(XMINSTR("TYPE")["K") S XMOPT("A","?")="You may not Answer a KIDS or PackMan message."
"RTN","XMXSEC2",85,0)
 I "^^"[$G(^XMB(3.7,XMDUZ,"NS1")) D
"RTN","XMXSEC2",86,0)
 . S XMOPT("A","?",1)="You must have a NETWORK SIGNATURE to Answer messages."
"RTN","XMXSEC2",87,0)
 . S XMOPT("A","?")="Create a NETWORK SIGNATURE under 'Personal Preferences|User Options Edit'."
"RTN","XMXSEC2",88,0)
 I 'XMORIGN8 D
"RTN","XMXSEC2",89,0)
 . S XMOPT("IN","?")="Only the sender may toggle 'Information only'."
"RTN","XMXSEC2",90,0)
 . S XMOPT("E","?")="You can't edit this message, because you didn't send it."
"RTN","XMXSEC2",91,0)
 E  I $P($G(^XMB(3.9,XMZ,1,0)),U,4)>1!(XMFROM'=$O(^XMB(3.9,XMZ,1,"C",0))) D
"RTN","XMXSEC2",92,0)
 . S XMOPT("E","?",1)="You can't edit this message, because you have already sent it to someone else."
"RTN","XMXSEC2",93,0)
 . S XMOPT("E","?")="You may toggle the 'information only' switch, if you wish."
"RTN","XMXSEC2",94,0)
 Q
"RTN","XMXSEC2",95,0)
OPTWNO(XMORIGN8) ; Surrogate does not have 'write' privilege.
"RTN","XMXSEC2",96,0)
 S XMOPT("A","?")="You need 'write' privilege to Answer a message."
"RTN","XMXSEC2",97,0)
 S XMOPT("C","?")="You need 'write' privilege to Copy a message."
"RTN","XMXSEC2",98,0)
 S XMOPT("E","?")="You need 'write' privilege to Edit a message."
"RTN","XMXSEC2",99,0)
 I XMORIGN8 S XMOPT("IN","?")="You need 'write' privilege to toggle 'Information only'."
"RTN","XMXSEC2",100,0)
 E  S XMOPT("IN","?")="Only the sender may toggle 'Information only'."
"RTN","XMXSEC2",101,0)
 S XMOPT("W","?")="You need 'write' privilege to Write (send) a message."
"RTN","XMXSEC2",102,0)
 Q
"RTN","XMXSEC2",103,0)
OPTR(XMDUZ,XMK,XMZ,XMIU,XMSECPAK,XMINSTR) ; User must be self or have 'read' privilege as surrogate.
"RTN","XMXSEC2",104,0)
 S:'$O(^XMB(3.9,XMZ,2005,0)) XMOPT("AA","?")="This message has no Attachments."
"RTN","XMXSEC2",105,0)
 I 'XMK D
"RTN","XMXSEC2",106,0)
 . S XMOPT("D","?")="This message has already been deleted.  It's not in a basket."
"RTN","XMXSEC2",107,0)
 . S XMOPT("V","?")="This message has already vaporized.  It's not in a basket."
"RTN","XMXSEC2",108,0)
 I XMINSTR("FLAGS")'["P" S XMOPT("K","?")="The message must be 'priority' in order to toggle 'Priority replies'."
"RTN","XMXSEC2",109,0)
 I XMINSTR("FLAGS")["X",'XMIU("ORIGN8") S XMOPT("F","?")="Only the sender may forward a 'closed' message."
"RTN","XMXSEC2",110,0)
 I XMSECPAK D
"RTN","XMXSEC2",111,0)
 . S XMOPT("P","?")="You may not Print a secure KIDS or PackMan message."
"RTN","XMXSEC2",112,0)
 . S XMOPT("H","?")=XMOPT("P","?")
"RTN","XMXSEC2",113,0)
 . S XMOPT("R","?")="You may not Reply to a secure KIDS or PackMan message."
"RTN","XMXSEC2",114,0)
 E  I 'XMIU("ORIGN8"),XMINSTR("FLAGS")["I" S XMOPT("R","?")="Only the sender may Reply to an 'Information only' message."
"RTN","XMXSEC2",115,0)
 E  I 'XMIU("ORIGN8"),$P($G(^XMB(3.9,XMZ,1,XMIU("IEN"),"T")),U,1)="I" D
"RTN","XMXSEC2",116,0)
 . S XMOPT("R","?",1)=$S(XMDUZ=DUZ:"You are",1:XMV("NAME")_" is")_" an 'information only' recipient"
"RTN","XMXSEC2",117,0)
 . S XMOPT("R","?")="of this message, and may not Reply."
"RTN","XMXSEC2",118,0)
 I XMINSTR("TYPE")["X"!(XMINSTR("TYPE")["K") D
"RTN","XMXSEC2",119,0)
 . S:'$D(^XUSEC("XUPROGMODE",DUZ)) XMOPT("X","?")="You must have the XUPROGMODE key to extract KIDS or PackMan messages."
"RTN","XMXSEC2",120,0)
 E  S XMOPT("X","?")="This message is neither KIDS nor PackMan."
"RTN","XMXSEC2",121,0)
 Q
"RTN","XMXSEC2",122,0)
DOSHARE(XMDUZ,XMK,XMORIGN8,XMINSTR) ;
"RTN","XMXSEC2",123,0)
 S XMOPT("A","?")="SHARED,MAIL may not Answer a message."
"RTN","XMXSEC2",124,0)
 S XMOPT("AA","?")="SHARED,MAIL may not Access Attachments."
"RTN","XMXSEC2",125,0)
 S XMOPT("C","?")="SHARED,MAIL may not Copy a message."
"RTN","XMXSEC2",126,0)
 I XMK,$S(XMORIGN8:0,$D(^XUSEC("XMMGR",DUZ)):0,$D(^XMB(3.7,"AB",DUZ,.5)):0,1:1) D
"RTN","XMXSEC2",127,0)
 . S XMOPT("D","?",1)="You must be the sender, hold the XMMGR key, or be a POSTMASTER surrogate"
"RTN","XMXSEC2",128,0)
 . S XMOPT("D","?")="to Delete a message in SHARED,MAIL."
"RTN","XMXSEC2",129,0)
 . S XMOPT("S","?",1)=XMOPT("D","?",1)
"RTN","XMXSEC2",130,0)
 . S XMOPT("S","?")="to Save a message in SHARED,MAIL."
"RTN","XMXSEC2",131,0)
 . S XMOPT("T","?",1)=XMOPT("D","?",1)
"RTN","XMXSEC2",132,0)
 . S XMOPT("T","?")="to Terminate a message in SHARED,MAIL."
"RTN","XMXSEC2",133,0)
 . S XMOPT("V","?",1)=XMOPT("D","?",1)
"RTN","XMXSEC2",134,0)
 . S XMOPT("V","?")="to edit a message's Vaporize date in SHARED,MAIL."
"RTN","XMXSEC2",135,0)
 S XMOPT("E","?")="SHARED,MAIL may not Edit a message."
"RTN","XMXSEC2",136,0)
 S:'XMORIGN8 XMOPT("F","?")="Only the sender may forward a message from SHARED,MAIL."
"RTN","XMXSEC2",137,0)
 S XMOPT("IN","?")="SHARED,MAIL may not toggle 'Information only'."
"RTN","XMXSEC2",138,0)
 S XMOPT("K","?")="SHARED,MAIL may not toggle 'Priority replies'."
"RTN","XMXSEC2",139,0)
 S XMOPT("L","?")="SHARED,MAIL may not 'Later' a message."
"RTN","XMXSEC2",140,0)
 S XMOPT("N","?")="SHARED,MAIL may not 'New' a message."
"RTN","XMXSEC2",141,0)
 S XMOPT("W","?")="SHARED,MAIL may not Write (send) a new message."
"RTN","XMXSEC2",142,0)
 S XMOPT("X","?")="SHARED,MAIL may not extract KIDS or PackMan messages."
"RTN","XMXSEC2",143,0)
 Q
"RTN","XMXSEC2",144,0)
DOPOST ;
"RTN","XMXSEC2",145,0)
 S XMOPT("A","?")="You may not do this with messages in the transmit queues."
"RTN","XMXSEC2",146,0)
 S XMOPT("AA","?")=XMOPT("A","?")
"RTN","XMXSEC2",147,0)
 S XMOPT("B","?")=XMOPT("A","?")
"RTN","XMXSEC2",148,0)
 S XMOPT("C","?")=XMOPT("A","?")
"RTN","XMXSEC2",149,0)
 S XMOPT("E","?")=XMOPT("A","?")
"RTN","XMXSEC2",150,0)
 S XMOPT("F","?")=XMOPT("A","?")
"RTN","XMXSEC2",151,0)
 S XMOPT("IN","?")=XMOPT("A","?")
"RTN","XMXSEC2",152,0)
 S XMOPT("H","?")=XMOPT("A","?")
"RTN","XMXSEC2",153,0)
 S XMOPT("K","?")=XMOPT("A","?")
"RTN","XMXSEC2",154,0)
 S XMOPT("L","?")=XMOPT("A","?")
"RTN","XMXSEC2",155,0)
 S XMOPT("N","?")=XMOPT("A","?")
"RTN","XMXSEC2",156,0)
 S XMOPT("P","?")=XMOPT("A","?")
"RTN","XMXSEC2",157,0)
 S XMOPT("R","?")=XMOPT("A","?")
"RTN","XMXSEC2",158,0)
 S XMOPT("S","?")=XMOPT("A","?")
"RTN","XMXSEC2",159,0)
 S XMOPT("T","?")=XMOPT("A","?")
"RTN","XMXSEC2",160,0)
 S XMOPT("V","?")=XMOPT("A","?")
"RTN","XMXSEC2",161,0)
 S XMOPT("W","?")=XMOPT("A","?")
"RTN","XMXSEC2",162,0)
 S XMOPT("X","?")=XMOPT("A","?")
"RTN","XMXSEC2",163,0)
 Q
"RTN","XMXSEND")
0^60^B62755123
"RTN","XMXSEND",1,0)
XMXSEND ;ISC-SF/GMB-Send a msg ;06/01/99  14:17
"RTN","XMXSEND",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXSEND",3,0)
 ; Entry points:
"RTN","XMXSEND",4,0)
 ; SENDMSG  Send a message
"RTN","XMXSEND",5,0)
 ; CRE8XMZ  Setup a message. (1st part of 3-part message sending process)
"RTN","XMXSEND",6,0)
 ;          In the second part, the programmer directly sets the message
"RTN","XMXSEND",7,0)
 ;          text into the global.
"RTN","XMXSEND",8,0)
 ; ADDRNSND Send the message created by CRE8XMZ and 'texted' by the
"RTN","XMXSEND",9,0)
 ;          programmer.  (3rd part of 3-part message sending process)
"RTN","XMXSEND",10,0)
 ;          Involves checking the addressees, loading the message,
"RTN","XMXSEND",11,0)
 ;          putting the addressees in the message,
"RTN","XMXSEND",12,0)
 ;          and sending the message.
"RTN","XMXSEND",13,0)
 ; LATER    TaskMan entry point to send a 'later'd message
"RTN","XMXSEND",14,0)
SENDMSG(XMDUZ,XMSUBJ,XMBODY,XMTO,XMINSTR,XMZ,XMATTACH) ;
"RTN","XMXSEND",15,0)
 ; XMDUZ             DUZ of who the msg is from
"RTN","XMXSEND",16,0)
 ; XMSUBJ            Subject of the msg
"RTN","XMXSEND",17,0)
 ; XMBODY            Body of the msg
"RTN","XMXSEND",18,0)
 ;                   Must be closed root, passed by value.  See WP_ROOT
"RTN","XMXSEND",19,0)
 ;                   definition for WP^DIE(), FM word processing filer.
"RTN","XMXSEND",20,0)
 ; XMTO              Addressees
"RTN","XMXSEND",21,0)
 ; XMINSTR("SELF BSKT") Basket to deliver to if sender is recipient
"RTN","XMXSEND",22,0)
 ; XMINSTR("SHARE DATE") Delete date if recipient is "SHARED,MAIL"
"RTN","XMXSEND",23,0)
 ; XMINSTR("SHARE BSKT") Basket if recipient is "SHARED,MAIL"
"RTN","XMXSEND",24,0)
 ; XMINSTR("RCPT BSKT") Basket name (only) to deliver to for other recipients
"RTN","XMXSEND",25,0)
 ; XMINSTR("VAPOR")  Date on which to vaporize (delete) this message
"RTN","XMXSEND",26,0)
 ;                   from recipient baskets
"RTN","XMXSEND",27,0)
 ; XMINSTR("LATER")  Date on which to send this msg, if not now
"RTN","XMXSEND",28,0)
 ; XMINSTR("FROM")   String saying from whom (default is user)
"RTN","XMXSEND",29,0)
 ; XMINSTR("FLAGS")  Any or all of the following:
"RTN","XMXSEND",30,0)
 ;                   P Priority
"RTN","XMXSEND",31,0)
 ;                   I Information only (may not be replied to)
"RTN","XMXSEND",32,0)
 ;                   X Closed msg (may not be forwarded)
"RTN","XMXSEND",33,0)
 ;                   C Confidential (surrogates may not read)
"RTN","XMXSEND",34,0)
 ;                   S Send to sender (make sender a recipient)
"RTN","XMXSEND",35,0)
 ;                   R Confirm receipt
"RTN","XMXSEND",36,0)
 ; XMINSTR("SCR KEY") Scramble key (implies that msg should be scrambled)
"RTN","XMXSEND",37,0)
 ; XMINSTR("SCR HINT") Hint (to guess the scramble key)
"RTN","XMXSEND",38,0)
 ; XMINSTR("STRIP")  String containing characters to strip from the message text
"RTN","XMXSEND",39,0)
 ; XMINSTR("TYPE")   Msg type is one of the following:
"RTN","XMXSEND",40,0)
 ;                   D Document          (NOT IMPLEMENTED)
"RTN","XMXSEND",41,0)
 ;                   S Spooled Document  (NOT IMPLEMENTED)
"RTN","XMXSEND",42,0)
 ;                   X DIFROM            (NOT IMPLEMENTED)
"RTN","XMXSEND",43,0)
 ;                   O ODIF              (NOT IMPLEMENTED)
"RTN","XMXSEND",44,0)
 ;                   B BLOB
"RTN","XMXSEND",45,0)
 ;                   K KIDS              (NOT IMPLEMENTED)
"RTN","XMXSEND",46,0)
 ; XMINSTR("ADDR FLAGS")   Any or all of the following:
"RTN","XMXSEND",47,0)
 ;                   I Do not Initialize (kill) the ^TMP addressee global
"RTN","XMXSEND",48,0)
 ;                   R Do not Restrict addressees
"RTN","XMXSEND",49,0)
 ; XMZ         (out) msg number in ^XMB(3.9 (BUT IF $D(XMINSTR("LATER")),
"RTN","XMXSEND",50,0)
 ;                   then XMZ contains the task number)
"RTN","XMXSEND",51,0)
 ; XMATTACH    (in)  Array of files to attach to message
"RTN","XMXSEND",52,0)
 ;                   ("IMAGE",x) imaging (BLOB) files
"RTN","XMXSEND",53,0)
 ;                   ("ROU",x)   routines (NOT IMPLEMENTED)
"RTN","XMXSEND",54,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXSEND",55,0)
 Q:'$$SEND^XMXSEC(XMDUZ,.XMINSTR)
"RTN","XMXSEND",56,0)
 I $D(XMINSTR("LATER")) D  Q
"RTN","XMXSEND",57,0)
 . N XMTASK
"RTN","XMXSEND",58,0)
 . D PSNDLATR(XMDUZ,XMSUBJ,XMBODY,.XMTO,.XMINSTR,.XMTASK,.XMATTACH)
"RTN","XMXSEND",59,0)
 . I $D(XMTASK) S XMZ=XMTASK
"RTN","XMXSEND",60,0)
 D CRE8XMZ(XMSUBJ,.XMZ) Q:$D(XMERR)  ; Create a place for the msg in the msg file
"RTN","XMXSEND",61,0)
 D:$D(XMATTACH("IMAGE"))>9 ADDBLOB(XMZ,.XMATTACH) Q:$D(XMERR)
"RTN","XMXSEND",62,0)
 D MOVEBODY(XMZ,XMBODY)    ; Put the msg body in place
"RTN","XMXSEND",63,0)
 D CHEKBODY(XMZ,$G(XMINSTR("STRIP")))
"RTN","XMXSEND",64,0)
 D ADDRNSND(XMDUZ,XMZ,.XMTO,.XMINSTR)
"RTN","XMXSEND",65,0)
 Q
"RTN","XMXSEND",66,0)
ADDRNSND(XMDUZ,XMZ,XMTO,XMINSTR) ;
"RTN","XMXSEND",67,0)
 D CHEKADDR(XMDUZ,XMZ,.XMTO,.XMINSTR)
"RTN","XMXSEND",68,0)
 D BLDNSND(XMDUZ,XMZ,.XMINSTR)
"RTN","XMXSEND",69,0)
 D CLEANUP^XMXADDR
"RTN","XMXSEND",70,0)
 Q
"RTN","XMXSEND",71,0)
CHEKADDR(XMDUZ,XMZ,XMTO,XMINSTR) ;
"RTN","XMXSEND",72,0)
 N XMRESTR
"RTN","XMXSEND",73,0)
 D:$G(XMINSTR("ADDR FLAGS"))'["I" INIT^XMXADDR
"RTN","XMXSEND",74,0)
 D:$G(XMINSTR("ADDR FLAGS"))'["R" CHKLINES^XMXSEC1(XMDUZ,XMZ,.XMRESTR)
"RTN","XMXSEND",75,0)
 D:$G(XMINSTR("FLAGS"))["S" CHKADDR^XMXADDR(XMDUZ,XMDUZ)
"RTN","XMXSEND",76,0)
 D CHKADDR^XMXADDR(XMDUZ,.XMTO,.XMINSTR,.XMRESTR)  ; Address the msg
"RTN","XMXSEND",77,0)
 Q
"RTN","XMXSEND",78,0)
BLDNSND(XMDUZ,XMZ,XMINSTR) ;
"RTN","XMXSEND",79,0)
 I '$D(^TMP("XMY",$J)) S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="No addressees.  Message not sent." Q
"RTN","XMXSEND",80,0)
 D MOVEPART(XMDUZ,XMZ,.XMINSTR)  ; Put various parts of the msg in place
"RTN","XMXSEND",81,0)
 D SEND^XMKP(XMDUZ,XMZ,.XMINSTR) ; Send the msg
"RTN","XMXSEND",82,0)
 D CHECK^XMKPL
"RTN","XMXSEND",83,0)
 Q
"RTN","XMXSEND",84,0)
ADDBLOB(XMZ,XMATTACH) ;
"RTN","XMXSEND",85,0)
 N X,XMYBLOB,%X,%Y
"RTN","XMXSEND",86,0)
 S %X="XMATTACH(""IMAGE"",",%Y="XMYBLOB(" D %XY^%RCR
"RTN","XMXSEND",87,0)
 S X=$$MULTI^XMBBLOB(XMZ)
"RTN","XMXSEND",88,0)
 Q:'X
"RTN","XMXSEND",89,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Error with $$MULTI^XMBBLOB"
"RTN","XMXSEND",90,0)
 D KILLMSG^XMXUTIL(XMZ)
"RTN","XMXSEND",91,0)
 Q
"RTN","XMXSEND",92,0)
CRE8XMZ(XMSUBJ,XMZ,XMIA) ; Create a place for the msg in the msg file
"RTN","XMXSEND",93,0)
 N XMFDA,XMIEN,XMTRIES,XMMAXDIG,XMABORT
"RTN","XMXSEND",94,0)
 I XMSUBJ[U S XMSUBJ=$$ENCODEUP^XMXUTIL1(XMSUBJ)
"RTN","XMXSEND",95,0)
 S (XMABORT,XMTRIES)=0
"RTN","XMXSEND",96,0)
 F  L +^XMB(3.9,0):9 Q:$T  D  Q:XMTRIES>999!XMABORT
"RTN","XMXSEND",97,0)
 . S XMTRIES=XMTRIES+1
"RTN","XMXSEND",98,0)
 . H 0
"RTN","XMXSEND",99,0)
 . I '$G(XMIA)!$D(ZTQUEUED) Q
"RTN","XMXSEND",100,0)
 . N DIR,DIRUT,Y
"RTN","XMXSEND",101,0)
 . S DIR("A",1)="We're having trouble getting a lock on the MESSAGE file."
"RTN","XMXSEND",102,0)
 . S DIR("A")="Do you wish to "_$S(XMTRIES=1:"wait",1:"keep waiting")
"RTN","XMXSEND",103,0)
 . S DIR("?",1)="Some other process has a lock on the MESSAGE file."
"RTN","XMXSEND",104,0)
 . S DIR("?",2)="In order to maintain file integrity,"
"RTN","XMXSEND",105,0)
 . S DIR("?",3)="we must wait until the lock is released before we can continue."
"RTN","XMXSEND",106,0)
 . S DIR("?",4)="If you wish to "_$S(XMTRIES=1:"wait",1:"keep waiting")_", answer YES."
"RTN","XMXSEND",107,0)
 . S DIR("?")="If you don't wish to "_$S(XMTRIES=1:"wait",1:"keep waiting")_", answer NO."
"RTN","XMXSEND",108,0)
 . S DIR(0)="Y"
"RTN","XMXSEND",109,0)
 . S DIR("B")="YES"
"RTN","XMXSEND",110,0)
 . D ^DIR
"RTN","XMXSEND",111,0)
 . S XMABORT='Y
"RTN","XMXSEND",112,0)
 I XMTRIES>999!XMABORT D  Q
"RTN","XMXSEND",113,0)
 . S XMZ=-1
"RTN","XMXSEND",114,0)
 . I $G(XMIA),'$D(ZTQUEUED) W !!,"Please try again later." Q
"RTN","XMXSEND",115,0)
 . S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Could not lock MESSAGE file."
"RTN","XMXSEND",116,0)
 S XMMAXDIG=$P($G(^XMB(1,1,.17),8),U,1) I 'XMMAXDIG S XMMAXDIG=8
"RTN","XMXSEND",117,0)
 S XMTRIES=0
"RTN","XMXSEND",118,0)
TRYXMZ ;
"RTN","XMXSEND",119,0)
 S XMFDA(3.9,"+1,",.01)=XMSUBJ
"RTN","XMXSEND",120,0)
 S XMFDA(3.9,"+1,",31)=DT  ; local create date
"RTN","XMXSEND",121,0)
 D UPDATE^DIE("","XMFDA","XMIEN")
"RTN","XMXSEND",122,0)
 S XMZ=XMIEN(1)
"RTN","XMXSEND",123,0)
 I $L(XMZ)>XMMAXDIG D  S XMTRIES='XMTRIES G:XMTRIES TRYXMZ
"RTN","XMXSEND",124,0)
 . I 'XMTRIES D  Q
"RTN","XMXSEND",125,0)
 . . N DIK,DA
"RTN","XMXSEND",126,0)
 . . S DIK="^XMB(3.9,",DA=XMZ D ^DIK
"RTN","XMXSEND",127,0)
 . . S $P(^XMB(3.9,0),U,3)=99999
"RTN","XMXSEND",128,0)
 . . K XMIEN
"RTN","XMXSEND",129,0)
 . S XMMAXDIG=$L(XMZ),$P(^XMB(1,1,.17),U,1)=XMMAXDIG
"RTN","XMXSEND",130,0)
 L -^XMB(3.9,0)
"RTN","XMXSEND",131,0)
 Q
"RTN","XMXSEND",132,0)
MOVEBODY(XMZ,XMBODY,XMFLAG) ;
"RTN","XMXSEND",133,0)
 D WP^DIE(3.9,XMZ_",",3,$G(XMFLAG),XMBODY)
"RTN","XMXSEND",134,0)
 Q
"RTN","XMXSEND",135,0)
CHEKBODY(XMZ,XMSTRIP,XMI) ; Remove XMSTRIP, control characters from text
"RTN","XMXSEND",136,0)
 N XMLINE,I,XMLEN,XMALTRD
"RTN","XMXSEND",137,0)
 S XMI=+$G(XMI)
"RTN","XMXSEND",138,0)
 F  S XMI=$O(^XMB(3.9,XMZ,2,XMI)) Q:'XMI  S XMLINE=^(XMI,0) D
"RTN","XMXSEND",139,0)
 . S XMALTRD=0
"RTN","XMXSEND",140,0)
 . I $G(XMSTRIP)'="" S XMLEN=$L(XMLINE),XMLINE=$TR(XMLINE,XMSTRIP) I XMLEN>$L(XMLINE) S XMALTRD=1
"RTN","XMXSEND",141,0)
 . I XMLINE?.E1C.E D
"RTN","XMXSEND",142,0)
 . . S (I,XMALTRD)=1
"RTN","XMXSEND",143,0)
 . . F  D  Q:XMLINE'?.E1C.E
"RTN","XMXSEND",144,0)
 . . . I $E(XMLINE,I)?1C S XMLINE=$E(XMLINE,1,I-1)_$E(XMLINE,I+1,999) Q
"RTN","XMXSEND",145,0)
 . . . S I=I+1
"RTN","XMXSEND",146,0)
 . S:XMALTRD ^XMB(3.9,XMZ,2,XMI,0)=XMLINE
"RTN","XMXSEND",147,0)
 Q
"RTN","XMXSEND",148,0)
MOVEPART(XMDUZ,XMZ,XMINSTR) ; Put various parts of the msg in place
"RTN","XMXSEND",149,0)
 N XMFDA,XMIENS
"RTN","XMXSEND",150,0)
 S XMIENS=XMZ_","
"RTN","XMXSEND",151,0)
 I $D(XMINSTR("FROM")) S XMFDA(3.9,XMIENS,1)=XMINSTR("FROM")
"RTN","XMXSEND",152,0)
 E  D
"RTN","XMXSEND",153,0)
 . S XMFDA(3.9,XMIENS,1)=XMDUZ
"RTN","XMXSEND",154,0)
 . S:XMDUZ'=DUZ XMFDA(3.9,XMIENS,1.1)=DUZ
"RTN","XMXSEND",155,0)
 S XMFDA(3.9,XMIENS,1.4)=$$NOW^XLFDT()
"RTN","XMXSEND",156,0)
 I $D(XMINSTR) D
"RTN","XMXSEND",157,0)
 . S:$G(XMINSTR("FLAGS"))["R" XMFDA(3.9,XMIENS,1.3)="y"
"RTN","XMXSEND",158,0)
 . S:$D(XMINSTR("VAPOR")) XMFDA(3.9,XMIENS,1.6)=XMINSTR("VAPOR")
"RTN","XMXSEND",159,0)
 . S:$D(XMINSTR("TYPE")) XMFDA(3.9,XMIENS,1.7)=XMINSTR("TYPE")
"RTN","XMXSEND",160,0)
 . I $D(XMINSTR("SCR KEY")) D
"RTN","XMXSEND",161,0)
 . . N XMKEY,XMSECURE  ; XMSECURE is new'd for scramble
"RTN","XMXSEND",162,0)
 . . S XMFDA(3.9,XMIENS,1.8)=$S($G(XMINSTR("SCR HINT"))="":" ",1:XMINSTR("SCR HINT"))
"RTN","XMXSEND",163,0)
 . . D LOADCODE^XMJMCODE
"RTN","XMXSEND",164,0)
 . . S XMKEY=XMINSTR("SCR KEY")
"RTN","XMXSEND",165,0)
 . . D ADJUST^XMJMCODE(.XMKEY)
"RTN","XMXSEND",166,0)
 . . S XMFDA(3.9,XMIENS,1.85)="1"_$$ENCSTR^XMJMCODE(XMKEY)
"RTN","XMXSEND",167,0)
 . . D ENCMSG^XMJMCODE(XMZ)
"RTN","XMXSEND",168,0)
 . S:$G(XMINSTR("FLAGS"))["X" XMFDA(3.9,XMIENS,1.95)="y"
"RTN","XMXSEND",169,0)
 . S:$G(XMINSTR("FLAGS"))["C" XMFDA(3.9,XMIENS,1.96)="y"
"RTN","XMXSEND",170,0)
 . S:$G(XMINSTR("FLAGS"))["I" XMFDA(3.9,XMIENS,1.97)="y"
"RTN","XMXSEND",171,0)
 . S:$G(XMINSTR("FLAGS"))["P" XMFDA(3.9,XMIENS,1.7)=$G(XMFDA(3.9,XMIENS,1.7))_"P"
"RTN","XMXSEND",172,0)
 . S:$D(XMINSTR("RCPT BSKT")) XMFDA(3.9,XMIENS,21)=XMINSTR("RCPT BSKT")
"RTN","XMXSEND",173,0)
 S:$$BRODCAST^XMKP XMFDA(3.9,XMIENS,1.97)="y"
"RTN","XMXSEND",174,0)
 D FILE^DIE("","XMFDA")
"RTN","XMXSEND",175,0)
 Q
"RTN","XMXSEND",176,0)
LATER ; TaskMan entry point to send a user's latered message
"RTN","XMXSEND",177,0)
 N I,XMLATER,XMPREFIX,XMTO,XMV
"RTN","XMXSEND",178,0)
 D INIT^XMVVITAE
"RTN","XMXSEND",179,0)
 S I=""
"RTN","XMXSEND",180,0)
 F  S I=$O(^TMP("XMY0",$J,I)) Q:I=""  D
"RTN","XMXSEND",181,0)
 . S XMPREFIX=$G(^TMP("XMY0",$J,I,1))  ; prefix (I:,C:)
"RTN","XMXSEND",182,0)
 . S XMLATER=$G(^TMP("XMY0",$J,I,"L"))
"RTN","XMXSEND",183,0)
 . S:XMLATER'="" XMPREFIX=XMPREFIX_"L@"_XMLATER
"RTN","XMXSEND",184,0)
 . S:XMPREFIX'="" XMPREFIX=XMPREFIX_":"
"RTN","XMXSEND",185,0)
 . S XMTO(XMPREFIX_I)=""
"RTN","XMXSEND",186,0)
 D SENDMSG(XMDUZ,XMSUBJ,"^TMP(""XM"",$J,""BODY"")",.XMTO,.XMINSTR)
"RTN","XMXSEND",187,0)
 S ZTREQ="@"
"RTN","XMXSEND",188,0)
 Q
"RTN","XMXSEND",189,0)
PSNDLATR(XMDUZ,XMSUBJ,XMBODY,XMTO,XMINSTR,ZTSK,XMATTACH) ; Set up a task for a program to send a message later
"RTN","XMXSEND",190,0)
 N ZTRTN,ZTDTH,ZTDESC,ZTIO,ZTSAVE
"RTN","XMXSEND",191,0)
 S ZTIO=""
"RTN","XMXSEND",192,0)
 S ZTRTN="PTSKLATR^XMXSEND"
"RTN","XMXSEND",193,0)
 S ZTDTH=$$FMTH^XLFDT(XMINSTR("LATER"))
"RTN","XMXSEND",194,0)
 S ZTDESC="MailMan: Send Message Later"
"RTN","XMXSEND",195,0)
 S ZTSAVE($$OREF^DILF(XMBODY))=""
"RTN","XMXSEND",196,0)
 F I="DUZ","XMDUZ","XMSUBJ","XMBODY","XMTO","XMTO(","XMINSTR(","XMATTACH(" S ZTSAVE(I)=""
"RTN","XMXSEND",197,0)
 D ^%ZTLOAD
"RTN","XMXSEND",198,0)
 D HOME^%ZIS
"RTN","XMXSEND",199,0)
 I '$D(ZTSK) S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Task creation not successful"
"RTN","XMXSEND",200,0)
 Q
"RTN","XMXSEND",201,0)
PTSKLATR ; TaskMan entry point to send a program's latered message
"RTN","XMXSEND",202,0)
 K XMINSTR("LATER")
"RTN","XMXSEND",203,0)
 D SENDMSG(XMDUZ,XMSUBJ,XMBODY,.XMTO,.XMINSTR,"",.XMATTACH)
"RTN","XMXSEND",204,0)
 S ZTREQ="@"
"RTN","XMXSEND",205,0)
 Q
"RTN","XMXSEND",206,0)
STARTMSG(XMSUBJ,XMZ) ;
"RTN","XMXSEND",207,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXSEND",208,0)
 D CRE8XMZ(XMSUBJ,.XMZ) Q:$D(XMERR)
"RTN","XMXSEND",209,0)
 S XMLCNT=0
"RTN","XMXSEND",210,0)
 Q
"RTN","XMXSEND",211,0)
BODYLINE(XMZ,XMLINE) ; Put the msg body in place, line by line
"RTN","XMXSEND",212,0)
 S XMLCNT=XMLCNT+1
"RTN","XMXSEND",213,0)
 S ^XMB(3.9,XMZ,2,XMLCNT,0)=XMLINE
"RTN","XMXSEND",214,0)
 Q
"RTN","XMXSEND",215,0)
ENDMSG(XMDUZ,XMZ,XMTO,XMINSTR) ;
"RTN","XMXSEND",216,0)
 S ^XMB(3.9,XMZ,2,0)="^^"_XMLCNT_U_XMLCNT_U_DT
"RTN","XMXSEND",217,0)
 K XMLCNT
"RTN","XMXSEND",218,0)
 D ADDRNSND(XMDUZ,XMZ,.XMTO,.XMINSTR)
"RTN","XMXSEND",219,0)
 Q
"RTN","XMXSEND",220,0)
POSTMAST(XMDUZ,XMINSTR) ;
"RTN","XMXSEND",221,0)
 S:'$D(XMDUZ) XMDUZ=DUZ
"RTN","XMXSEND",222,0)
 D:'$G(XMV("PRIV")) INIT^XMVVITAE
"RTN","XMXSEND",223,0)
 S XMINSTR("FROM")=.5
"RTN","XMXSEND",224,0)
 Q
"RTN","XMXTO")
0^61^B4839235
"RTN","XMXTO",1,0)
XMXTO ;ISC-SF/GMB-Address a msg ;06/03/99  15:58
"RTN","XMXTO",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXTO",3,0)
 ; Entry points:
"RTN","XMXTO",4,0)
 ; ITOWHOM  Interactive 'to whom:'
"RTN","XMXTO",5,0)
 ; TOWHOM   Silent 'to whom:'
"RTN","XMXTO",6,0)
ITOWHOM(XMDUZ,XMZ,XMTYPE,XMINSTR) ; Interactive
"RTN","XMXTO",7,0)
 ; XMDUZ             DUZ of who is sending or forwarding the message
"RTN","XMXTO",8,0)
 ; XMZ               The message number
"RTN","XMXTO",9,0)
 ;                   (need not be supplied if XMTYPE="S" and
"RTN","XMXTO",10,0)
 ;                   XMINSTR("ADDR FLAGS")["R")
"RTN","XMXTO",11,0)
 ; XMTYPE            S='Send to:'
"RTN","XMXTO",12,0)
 ;                   F='Forward to:'
"RTN","XMXTO",13,0)
 ; XMINSTR("SELF BSKT") Basket to deliver to if sender is recipient
"RTN","XMXTO",14,0)
 ; XMINSTR("SHARE DATE") Delete date if recipient is "SHARED,MAIL"
"RTN","XMXTO",15,0)
 ; XMINSTR("SHARE BSKT") Basket if recipient is "SHARED,MAIL"
"RTN","XMXTO",16,0)
 ; XMINSTR("TO PROMPT") Initial prompt to whom to send the message (default=XMDUZ)
"RTN","XMXTO",17,0)
 ; XMINSTR("FLAGS")  Any or all or none of the following:
"RTN","XMXTO",18,0)
 ;                   (Necessary only if XMTYPE="S" and XMINSTR("ADDR FLAGS")["R")
"RTN","XMXTO",19,0)
 ;                   X Closed msg (may not be forwarded)
"RTN","XMXTO",20,0)
 ;                   C Confidential msg (surrogates may not read)
"RTN","XMXTO",21,0)
 ; XMINSTR("ADDR FLAGS")   Any or all of the following:
"RTN","XMXTO",22,0)
 ;                   I Do not Initialize (kill) the ^TMP addressee global
"RTN","XMXTO",23,0)
 ;                   R Do not Restrict addressees
"RTN","XMXTO",24,0)
 N XMRESTR,XMABORT
"RTN","XMXTO",25,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXTO",26,0)
 D INIT(XMDUZ,.XMZ,XMTYPE,.XMINSTR,.XMRESTR,.XMPROMPT) Q:$D(XMERR)
"RTN","XMXTO",27,0)
 S XMABORT=0
"RTN","XMXTO",28,0)
 D TOWHOM^XMJMT(XMDUZ,XMPROMPT,.XMINSTR,.XMRESTR,.XMABORT)
"RTN","XMXTO",29,0)
 Q:'XMABORT
"RTN","XMXTO",30,0)
 S XMERR=$G(XMERR)+1,^TMP("XMERR",$J,XMERR,"TEXT",1)="Addressing aborted."_$S(XMABORT>1:"  User timed out.",1:"")
"RTN","XMXTO",31,0)
 Q
"RTN","XMXTO",32,0)
TOWHOM(XMDUZ,XMZ,XMTYPE,XMTO,XMINSTR,XMFULL) ; Silent
"RTN","XMXTO",33,0)
 ; XMDUZ       (in)  DUZ of who is sending or forwarding the message
"RTN","XMXTO",34,0)
 ; XMZ         (in)  The message number
"RTN","XMXTO",35,0)
 ;                   (need not be supplied if XMTYPE="S" and
"RTN","XMXTO",36,0)
 ;                   XMINSTR("ADDR FLAGS")["R")
"RTN","XMXTO",37,0)
 ; XMTYPE      (in)  S='Send to:'
"RTN","XMXTO",38,0)
 ;                   F='Forward to:'
"RTN","XMXTO",39,0)
 ; XMTO        (in)  ONE addressee
"RTN","XMXTO",40,0)
 ; XMINSTR("SELF BSKT")  (in) Basket to deliver to if sender is recipient
"RTN","XMXTO",41,0)
 ; XMINSTR("SHARE DATE") (in) Delete date if recipient is "SHARED,MAIL"
"RTN","XMXTO",42,0)
 ; XMINSTR("SHARE BSKT") (in) Basket if recipient is "SHARED,MAIL"
"RTN","XMXTO",43,0)
 ; XMINSTR("FLAGS")      (in) Any or all or none of the following:
"RTN","XMXTO",44,0)
 ;                   (Necessary only if XMTYPE="S" and XMINSTR("ADDR FLAGS")["R")
"RTN","XMXTO",45,0)
 ;                   X Closed msg (may not be forwarded)
"RTN","XMXTO",46,0)
 ;                   C Confidential msg (surrogates may not read)
"RTN","XMXTO",47,0)
 ; XMINSTR("ADDR FLAGS")   Any or all of the following:
"RTN","XMXTO",48,0)
 ;                   I Do not Initialize (kill) the ^TMP addressee global
"RTN","XMXTO",49,0)
 ;                   R Do not Restrict addressees
"RTN","XMXTO",50,0)
 ; XMFULL      (out) the full address
"RTN","XMXTO",51,0)
 N XMRESTR
"RTN","XMXTO",52,0)
 K XMERR,^TMP("XMERR",$J)
"RTN","XMXTO",53,0)
 D INIT(XMDUZ,.XMZ,XMTYPE,.XMINSTR,.XMRESTR) Q:$D(XMERR)
"RTN","XMXTO",54,0)
 D CHKADDR^XMXADDR(XMDUZ,.XMTO,.XMINSTR,.XMRESTR,.XMFULL)
"RTN","XMXTO",55,0)
 Q
"RTN","XMXTO",56,0)
INIT(XMDUZ,XMZ,XMTYPE,XMINSTR,XMRESTR,XMPROMPT) ;
"RTN","XMXTO",57,0)
 I XMTYPE="S" D
"RTN","XMXTO",58,0)
 . S XMPROMPT="Send"
"RTN","XMXTO",59,0)
 . D:$G(XMINSTR("ADDR FLAGS"))'["R" CHKLINES^XMXSEC1(XMDUZ,XMZ,.XMRESTR)
"RTN","XMXTO",60,0)
 E  D
"RTN","XMXTO",61,0)
 . N XMZREC
"RTN","XMXTO",62,0)
 . S XMZREC=^XMB(3.9,XMZ,0)
"RTN","XMXTO",63,0)
 . S XMPROMPT="Forward"
"RTN","XMXTO",64,0)
 . Q:'$$FORWARD^XMXSEC(XMDUZ,XMZ,XMZREC)
"RTN","XMXTO",65,0)
 . D:$G(XMINSTR("ADDR FLAGS"))'["R" GETRESTR^XMXSEC1(XMDUZ,XMZ,XMZREC,.XMINSTR,.XMRESTR)
"RTN","XMXTO",66,0)
 D:$G(XMINSTR("ADDR FLAGS"))'["I" INIT^XMXADDR
"RTN","XMXTO",67,0)
 Q
"RTN","XMXUTIL")
0^62^B49773861
"RTN","XMXUTIL",1,0)
XMXUTIL ;ISC-SF/GMB- Message & Mailbox Utilities ;06/14/99  16:35
"RTN","XMXUTIL",2,0)
 ;;7.1;MailMan;**40,50**;Jun 02, 1994
"RTN","XMXUTIL",3,0)
 ; All entry points covered by DBIA 2734.
"RTN","XMXUTIL",4,0)
WAIT ;
"RTN","XMXUTIL",5,0)
 N DIR,Y,DIRUT S DIR(0)="E",DIR("A")="Press RETURN to continue" D ^DIR
"RTN","XMXUTIL",6,0)
 Q
"RTN","XMXUTIL",7,0)
PAGE(XMABORT) ;
"RTN","XMXUTIL",8,0)
 N DIR,Y,DIRUT S DIR(0)="E" D ^DIR I $D(DIRUT) S XMABORT=1
"RTN","XMXUTIL",9,0)
 Q
"RTN","XMXUTIL",10,0)
NEWS(XMDUZ,XMTEST) ;
"RTN","XMXUTIL",11,0)
 ; Given:
"RTN","XMXUTIL",12,0)
 ;   XMDUZ      User's DUZ
"RTN","XMXUTIL",13,0)
 ;   XMTEST     0=this is not a test. (DEFAULT)
"RTN","XMXUTIL",14,0)
 ;              (Field 1.12 LAST NEW MSG NOTIFY DATE/TIME may be updated)
"RTN","XMXUTIL",15,0)
 ;              1=this is just a test.
"RTN","XMXUTIL",16,0)
 ;              (Field 1.12 will not be updated)
"RTN","XMXUTIL",17,0)
 ; Returns:
"RTN","XMXUTIL",18,0)
 ;   -1         If no record of this user
"RTN","XMXUTIL",19,0)
 ;   0          If no new mail
"RTN","XMXUTIL",20,0)
 ; Otherwise, if the user has new mail, returns an ^-delimited string:
"RTN","XMXUTIL",21,0)
 ;   Piece 1:   # New Msgs
"RTN","XMXUTIL",22,0)
 ;   Piece 2:   Does the user have new priority mail? (1=yes;0=no)
"RTN","XMXUTIL",23,0)
 ;   Piece 3:   # New Msgs in IN basket
"RTN","XMXUTIL",24,0)
 ;   Piece 4:   Date/Time (FileMan) that the last msg was received
"RTN","XMXUTIL",25,0)
 ;   Piece 5:   Have there been any new messages since the last time
"RTN","XMXUTIL",26,0)
 ;              this function was called? (1=yes;0=no)
"RTN","XMXUTIL",27,0)
 N XMREC,XMNEW,XMRECEIV,XMNOTIFY
"RTN","XMXUTIL",28,0)
 S XMREC=$G(^XMB(3.7,XMDUZ,0))
"RTN","XMXUTIL",29,0)
 Q:XMREC="" -1
"RTN","XMXUTIL",30,0)
 S XMNEW=+$P(XMREC,U,6)
"RTN","XMXUTIL",31,0)
 Q:'XMNEW 0
"RTN","XMXUTIL",32,0)
 S XMRECEIV=$P(XMREC,U,14) ; date/time last msg received
"RTN","XMXUTIL",33,0)
 S XMNOTIFY=$P(XMREC,U,15) ; date/time user last notified
"RTN","XMXUTIL",34,0)
 I XMRECEIV>XMNOTIFY,'$G(XMTEST) S $P(^XMB(3.7,XMDUZ,0),U,15)=XMRECEIV
"RTN","XMXUTIL",35,0)
 Q XMNEW_U_($D(^XMB(3.7,XMDUZ,"N"))>0)_U_+$P(^XMB(3.7,XMDUZ,2,1,0),U,2)_U_XMRECEIV_U_(XMRECEIV>XMNOTIFY)
"RTN","XMXUTIL",36,0)
TNMSGCT(XMDUZ) ; Total new msg count
"RTN","XMXUTIL",37,0)
 Q +$P(^XMB(3.7,XMDUZ,0),U,6)
"RTN","XMXUTIL",38,0)
BNMSGCT(XMDUZ,XMK) ; Basket new msg count
"RTN","XMXUTIL",39,0)
 Q +$P(^XMB(3.7,XMDUZ,2,XMK,0),U,2)
"RTN","XMXUTIL",40,0)
TMSGCT(XMDUZ) ; Total msg count
"RTN","XMXUTIL",41,0)
 N I,XMK
"RTN","XMXUTIL",42,0)
 S I=0,XMK=.99
"RTN","XMXUTIL",43,0)
 F  S XMK=$O(^XMB(3.7,XMDUZ,2,XMK)) Q:XMK'>0  S I=I+$$BMSGCT(XMDUZ,XMK)
"RTN","XMXUTIL",44,0)
 Q I
"RTN","XMXUTIL",45,0)
BMSGCT(XMDUZ,XMK) ; Basket msg count
"RTN","XMXUTIL",46,0)
 Q +$P($G(^XMB(3.7,XMDUZ,2,XMK,1,0)),U,4)
"RTN","XMXUTIL",47,0)
LOCK(XMDOOR,XMLOCKED,XMWAIT) ; Lock a global (** NOT USED **)
"RTN","XMXUTIL",48,0)
 L +@XMDOOR:$G(XMWAIT,0) E  S XMLOCKED=0 Q
"RTN","XMXUTIL",49,0)
 S XMLOCKED=1
"RTN","XMXUTIL",50,0)
 Q
"RTN","XMXUTIL",51,0)
INCRNEW(XMDUZ,XMK) ; Increment the number of new messages in a basket
"RTN","XMXUTIL",52,0)
 ; For internal use only!
"RTN","XMXUTIL",53,0)
 S $P(^(0),U,2)=$P(^XMB(3.7,XMDUZ,2,XMK,0),U,2)+1 ; New msgs in bskt
"RTN","XMXUTIL",54,0)
 S $P(^(0),U,6)=$P(^XMB(3.7,XMDUZ,0),U,6)+1       ; New msgs for user
"RTN","XMXUTIL",55,0)
 S $P(^XMB(3.7,XMDUZ,0),U,14)=$$NOW^XLFDT         ; When last msg rec'd
"RTN","XMXUTIL",56,0)
 Q
"RTN","XMXUTIL",57,0)
DECRNEW(XMDUZ,XMK) ; Decrement the number of new messages in a basket
"RTN","XMXUTIL",58,0)
 ; For internal use only!
"RTN","XMXUTIL",59,0)
 S $P(^(0),U,2)=$P(^XMB(3.7,XMDUZ,2,XMK,0),U,2)-1 ; New msgs in bskt
"RTN","XMXUTIL",60,0)
 S $P(^(0),U,6)=$P(^XMB(3.7,XMDUZ,0),U,6)-1       ; New msgs for user
"RTN","XMXUTIL",61,0)
 Q
"RTN","XMXUTIL",62,0)
KVAPOR(XMDUZ,XMK,XMZ,XMVAPOR,XMIU) ; Set/delete a message's vaporize date in user's basket
"RTN","XMXUTIL",63,0)
 ; XMVAPOR ="@"           delete it
"RTN","XMXUTIL",64,0)
 ;         =FM date/time  set/change it
"RTN","XMXUTIL",65,0)
 N XMFDA,XMIENS
"RTN","XMXUTIL",66,0)
 S XMIENS=XMZ_","_XMK_","_XMDUZ_","
"RTN","XMXUTIL",67,0)
 S XMFDA(3.702,XMIENS,5)=XMVAPOR
"RTN","XMXUTIL",68,0)
 I XMVAPOR="@" D
"RTN","XMXUTIL",69,0)
 . K XMIU("KVAPOR")
"RTN","XMXUTIL",70,0)
 . S XMFDA(3.702,XMIENS,7)="@"
"RTN","XMXUTIL",71,0)
 E  D
"RTN","XMXUTIL",72,0)
 . S XMIU("KVAPOR")=XMVAPOR
"RTN","XMXUTIL",73,0)
 . S XMFDA(3.702,XMIENS,7)=0
"RTN","XMXUTIL",74,0)
 D FILE^DIE("","XMFDA")
"RTN","XMXUTIL",75,0)
 Q
"RTN","XMXUTIL",76,0)
BSKTNAME(XMDUZ,XMK) ; What's the name of this basket for this user?
"RTN","XMXUTIL",77,0)
 Q $P($G(^XMB(3.7,XMDUZ,2,XMK,0)),U,1)
"RTN","XMXUTIL",78,0)
NAME(XMID,XMIT) ; Given a name or DUZ, return the name
"RTN","XMXUTIL",79,0)
 ; XMID user's DUZ or name
"RTN","XMXUTIL",80,0)
 ; XMIT 1=if DUZ, return institution and title, too, if needed
"RTN","XMXUTIL",81,0)
 ;      0=just return the name (default)
"RTN","XMXUTIL",82,0)
 Q:+XMID'=XMID $S(XMID'="":XMID,1:$$EZBLD^DIALOG(34009))
"RTN","XMXUTIL",83,0)
 N XMNAME,XMREC,XMTITLE,XMINST
"RTN","XMXUTIL",84,0)
 S XMREC=$G(^VA(200,XMID,0))
"RTN","XMXUTIL",85,0)
 Q:XMREC="" $$EZBLD^DIALOG(34010,XMID)
"RTN","XMXUTIL",86,0)
 Q:'$G(XMIT) $P(XMREC,U)
"RTN","XMXUTIL",87,0)
 S XMNAME=$P(XMREC,U)
"RTN","XMXUTIL",88,0)
 I XMV("SHOW TITL"),$P(XMREC,U,9) D
"RTN","XMXUTIL",89,0)
 . S XMTITLE=$P($G(^DIC(3.1,$P(XMREC,U,9),0)),U)
"RTN","XMXUTIL",90,0)
 . S:XMTITLE'="" XMNAME=XMNAME_" - "_XMTITLE
"RTN","XMXUTIL",91,0)
 I XMV("SHOW INST"),$D(^XMB(3.7,XMID,6000)) D
"RTN","XMXUTIL",92,0)
 . S XMINST=$P(^XMB(3.7,XMID,6000),U)
"RTN","XMXUTIL",93,0)
 . S:XMINST'="" XMNAME=XMNAME_" ("_XMINST_")"
"RTN","XMXUTIL",94,0)
 Q XMNAME
"RTN","XMXUTIL",95,0)
NETNAME(XMDUZ) ; Given a DUZ or a string, return an internet name @ site name.
"RTN","XMXUTIL",96,0)
 N XMNETNAM
"RTN","XMXUTIL",97,0)
 Q:XMDUZ["@" XMDUZ
"RTN","XMXUTIL",98,0)
 I +XMDUZ=XMDUZ D
"RTN","XMXUTIL",99,0)
 . S:XMDUZ=0 XMDUZ=.5
"RTN","XMXUTIL",100,0)
 . ; Use Mail Name.  Lacking that, use real name.
"RTN","XMXUTIL",101,0)
 . S XMNETNAM=$S($L($P($G(^XMB(3.7,XMDUZ,.3)),U)):$P(^(.3),U),1:$P(^VA(200,XMDUZ,0),U))
"RTN","XMXUTIL",102,0)
 . I $E(XMNETNAM)=$C(34),$E(XMNETNAM,$L(XMNETNAM))=$C(34) Q  ; Ignore if quoted
"RTN","XMXUTIL",103,0)
 . I XMNETNAM?.E1C.E!($TR(XMNETNAM,$C(34)_"<>()[];:")'=XMNETNAM) S XMNETNAM=$C(34)_XMNETNAM_$C(34) Q  ; Quote if illegal
"RTN","XMXUTIL",104,0)
 . I XMNETNAM[","!(XMNETNAM[" ") S XMNETNAM=$TR(XMNETNAM,", .","._+")  ; Translate
"RTN","XMXUTIL",105,0)
 E  D
"RTN","XMXUTIL",106,0)
 . S XMNETNAM=XMDUZ
"RTN","XMXUTIL",107,0)
 . I $E(XMNETNAM)'=$C(34),$E(XMNETNAM,$L(XMNETNAM))'=$C(34) D
"RTN","XMXUTIL",108,0)
 . . I $E(XMNETNAM)="<",$E(XMNETNAM,$L(XMNETNAM))=">" D  I $E(XMNETNAM)=$C(34),$E(XMNETNAM,$L(XMNETNAM))=$C(34) Q
"RTN","XMXUTIL",109,0)
 . . . S XMNETNAM=$E(XMNETNAM,2,$L(XMNETNAM)-1)
"RTN","XMXUTIL",110,0)
 . . I XMNETNAM?.E1C.E!($TR(XMNETNAM,$C(34)_" ,<>()[];:")'=XMNETNAM) S XMNETNAM=$C(34)_XMNETNAM_$C(34) ; Quote if illegal
"RTN","XMXUTIL",111,0)
 Q XMNETNAM_"@"_^XMB("NETNAME")
"RTN","XMXUTIL",112,0)
MAKENEW(XMDUZ,XMK,XMZ,XMLOCKIT) ; Make a message new
"RTN","XMXUTIL",113,0)
 ; Must lock ^XMB(3.7,XMDUZ) before calling AND unlock after.
"RTN","XMXUTIL",114,0)
 ; If you set XMLOCKIT=1, I'll do the locking for you.
"RTN","XMXUTIL",115,0)
 Q:$D(^XMB(3.7,XMDUZ,"N0",XMK,XMZ))
"RTN","XMXUTIL",116,0)
 Q:'$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ))
"RTN","XMXUTIL",117,0)
 N XMFDA
"RTN","XMXUTIL",118,0)
 S XMFDA(3.702,XMZ_","_XMK_","_XMDUZ_",",3)="1" ; new
"RTN","XMXUTIL",119,0)
 I $G(XMLOCKIT) L +^XMB(3.7,XMDUZ)
"RTN","XMXUTIL",120,0)
 D FILE^DIE("","XMFDA")
"RTN","XMXUTIL",121,0)
 D INCRNEW(XMDUZ,XMK)
"RTN","XMXUTIL",122,0)
 I $G(XMLOCKIT) L -^XMB(3.7,XMDUZ)
"RTN","XMXUTIL",123,0)
 Q
"RTN","XMXUTIL",124,0)
NONEW(XMDUZ,XMK,XMZ,XMLOCKIT) ; Make a message not new
"RTN","XMXUTIL",125,0)
 ; Must lock ^XMB(3.7,XMDUZ) before calling AND unlock after.
"RTN","XMXUTIL",126,0)
 ; If you set XMLOCKIT=1, I'll do the locking for you.
"RTN","XMXUTIL",127,0)
 Q:'$D(^XMB(3.7,XMDUZ,"N0",XMK,XMZ))
"RTN","XMXUTIL",128,0)
 N XMFDA
"RTN","XMXUTIL",129,0)
 S XMFDA(3.702,XMZ_","_XMK_","_XMDUZ_",",3)="@" ; no longer new
"RTN","XMXUTIL",130,0)
 I $G(XMLOCKIT) L +^XMB(3.7,XMDUZ)
"RTN","XMXUTIL",131,0)
 D FILE^DIE("","XMFDA")
"RTN","XMXUTIL",132,0)
 D DECRNEW(XMDUZ,XMK)
"RTN","XMXUTIL",133,0)
 I $G(XMLOCKIT) L -^XMB(3.7,XMDUZ)
"RTN","XMXUTIL",134,0)
 Q
"RTN","XMXUTIL",135,0)
KILLMSG(DA) ; For internal MM use only.  Kill a msg in ^XMB(3.9
"RTN","XMXUTIL",136,0)
 N DIK
"RTN","XMXUTIL",137,0)
 S DIK="^XMB(3.9,"
"RTN","XMXUTIL",138,0)
 L +^XMB(3.9,0)
"RTN","XMXUTIL",139,0)
 D ^DIK
"RTN","XMXUTIL",140,0)
 L -^XMB(3.9,0)
"RTN","XMXUTIL",141,0)
 Q
"RTN","XMXUTIL",142,0)
LASTACC(XMDUZ,XMK,XMZ,XMRESP,XMIM,XMINSTR,XMIU,XMCONFRM) ; Note first, last accesses, number of responses read
"RTN","XMXUTIL",143,0)
 ; in:
"RTN","XMXUTIL",144,0)
 ; XMDUZ,XMK,XMZ the usual.  If message not in basket, set XMK=0.
"RTN","XMXUTIL",145,0)
 ; XMRESP        last response read this time
"RTN","XMXUTIL",146,0)
 ; XMIM          "SUBJ", "FROM"
"RTN","XMXUTIL",147,0)
 ; XMINSTR       "FLAGS"
"RTN","XMXUTIL",148,0)
 ; XMIU          "IEN", "RESP"
"RTN","XMXUTIL",149,0)
 ; out:
"RTN","XMXUTIL",150,0)
 ; XMCONFRM      Confirmation message was sent to message sender (0=no; 1=yes)
"RTN","XMXUTIL",151,0)
 N XMNOW,XMREC,XMFDA,XMIENS
"RTN","XMXUTIL",152,0)
 S XMCONFRM=0
"RTN","XMXUTIL",153,0)
 I 'XMIU("IEN") D  Q
"RTN","XMXUTIL",154,0)
 . I XMRESP>XMIU("RESP")!(XMIU("RESP")="") S XMIU("RESP")=XMRESP
"RTN","XMXUTIL",155,0)
 S XMNOW=$$NOW^XLFDT
"RTN","XMXUTIL",156,0)
 S XMREC=^XMB(3.9,XMZ,1,XMIU("IEN"),0)
"RTN","XMXUTIL",157,0)
 I $P(XMREC,U,10)="" D
"RTN","XMXUTIL",158,0)
 . S $P(XMREC,U,10)=XMNOW ; first access 
"RTN","XMXUTIL",159,0)
 . ; If confirmation requested, and user is not sender, send confirmation
"RTN","XMXUTIL",160,0)
 . I XMINSTR("FLAGS")["R",XMDUZ'=XMIM("FROM") D CONFIRM(XMDUZ,XMZ,.XMIM) S XMCONFRM=1
"RTN","XMXUTIL",161,0)
 S $P(XMREC,U,3)=XMNOW  ; last access
"RTN","XMXUTIL",162,0)
 I $S(XMRESP>$P(XMREC,U,2):1,1:$P(XMREC,U,2)="") S XMIU("RESP")=XMRESP,$P(XMREC,U,2)=XMRESP ; last response read
"RTN","XMXUTIL",163,0)
 S ^XMB(3.9,XMZ,1,XMIU("IEN"),0)=XMREC
"RTN","XMXUTIL",164,0)
 I XMDUZ'=DUZ,XMDUZ'=.6 S ^XMB(3.9,XMZ,1,XMIU("IEN"),"S")=XMV("DUZ NAME")
"RTN","XMXUTIL",165,0)
 Q:'XMK
"RTN","XMXUTIL",166,0)
 S XMREC=$G(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0))
"RTN","XMXUTIL",167,0)
 Q:XMREC=""  ; Message is not in the user's basket
"RTN","XMXUTIL",168,0)
 I '$P(XMREC,U,7) D  Q
"RTN","XMXUTIL",169,0)
 . S $P(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0),U,4)=XMNOW  ; last access (for MailMan's auto-vaporize)
"RTN","XMXUTIL",170,0)
 ; MailMan has set an automatic delete date.  Since this message was
"RTN","XMXUTIL",171,0)
 ; just accessed, we must delete that date.
"RTN","XMXUTIL",172,0)
 S XMIENS=XMZ_","_XMK_","_XMDUZ_","
"RTN","XMXUTIL",173,0)
 S XMFDA(3.702,XMIENS,4)=XMNOW  ; last access (for MailMan's auto-vaporize)
"RTN","XMXUTIL",174,0)
 S XMFDA(3.702,XMIENS,5)="@"  ; automatic delete date
"RTN","XMXUTIL",175,0)
 S XMFDA(3.702,XMIENS,7)="@"  ; delete date set by MailMan?
"RTN","XMXUTIL",176,0)
 D FILE^DIE("","XMFDA")
"RTN","XMXUTIL",177,0)
 Q
"RTN","XMXUTIL",178,0)
CONFIRM(XMDUZ,XMZ,XMIM) ; For internal MailMan use only.  Send confirmation message to sender.
"RTN","XMXUTIL",179,0)
 N XMPARM,XMTO
"RTN","XMXUTIL",180,0)
 S XMPARM(1)=XMIM("SUBJ")
"RTN","XMXUTIL",181,0)
 S XMPARM(2)=XMV("NAME") S:XMDUZ'=DUZ XMPARM(2)=XMPARM(2)_" (Surrogate: "_XMV("DUZ NAME")_")"
"RTN","XMXUTIL",182,0)
 ;S XMPARM(3)=$S($D(^XMB(3.9,XMZ,5)):$P(^(5),U),1:XMZ)
"RTN","XMXUTIL",183,0)
 S XMTO=XMIM("FROM")
"RTN","XMXUTIL",184,0)
 S XMTO=$S(+XMTO=XMTO:XMTO,1:$$RCPTTO(XMZ))
"RTN","XMXUTIL",185,0)
 D TASKBULL^XMXBULL(XMDUZ,"XMRDACK",.XMPARM,"",XMTO)
"RTN","XMXUTIL",186,0)
 Q
"RTN","XMXUTIL",187,0)
RCPTTO(XMZ) ; For internal MailMan use only.  Return-receipt-to a remote address.
"RTN","XMXUTIL",188,0)
 N XMI,XMREC,XMHDR,XMTO
"RTN","XMXUTIL",189,0)
 S XMI=0,XMHDR=""
"RTN","XMXUTIL",190,0)
 F  S XMI=$O(^XMB(3.9,XMZ,2,XMI)) Q:XMI'<1!'XMI  S XMREC=^(XMI,0) D  Q:$D(XMTO)
"RTN","XMXUTIL",191,0)
 . Q:XMREC=""
"RTN","XMXUTIL",192,0)
 . S XMHDR=$P(XMREC,":") Q:XMHDR=""
"RTN","XMXUTIL",193,0)
 . S XMHDR=$$UP^XLFSTR(XMHDR)
"RTN","XMXUTIL",194,0)
 . I XMHDR="RETURN-RECEIPT-TO" S XMTO=$$SCRUB^XMXUTIL1($P(XMREC,":",2,99)) Q
"RTN","XMXUTIL",195,0)
 S:'$D(XMTO) XMTO=$P(^XMB(3.9,XMZ,0),U,2)
"RTN","XMXUTIL",196,0)
 Q $$REMADDR^XMXADDR1(XMTO)
"RTN","XMXUTIL",197,0)
 ;
"RTN","XMXUTIL",198,0)
 ;#34009 = * No Name *
"RTN","XMXUTIL",199,0)
 ;#34010 = * User #<x> *
"RTN","XMXUTIL1")
0^238^B20913529
"RTN","XMXUTIL1",1,0)
XMXUTIL1 ;ISC-SF/GMB- Date & String Utilities ;04/09/99  15:06
"RTN","XMXUTIL1",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXUTIL1",3,0)
 ; All entry points covered by DBIA 2735.
"RTN","XMXUTIL1",4,0)
ENCODEUP(XMSUBJ) ; Change ^ to ~U~
"RTN","XMXUTIL1",5,0)
 F  Q:XMSUBJ'[U  S XMSUBJ=$P(XMSUBJ,U)_"~U~"_$P(XMSUBJ,U,2,999)
"RTN","XMXUTIL1",6,0)
 Q XMSUBJ
"RTN","XMXUTIL1",7,0)
DECODEUP(XMSUBJ) ; Change ~U~ to ^
"RTN","XMXUTIL1",8,0)
 F  Q:XMSUBJ'["~U~"  S XMSUBJ=$P(XMSUBJ,"~U~")_U_$P(XMSUBJ,"~U~",2,999)
"RTN","XMXUTIL1",9,0)
 Q XMSUBJ
"RTN","XMXUTIL1",10,0)
SCRUB(XMSTRING) ; Strip ctrl chars and leading/trailing blanks
"RTN","XMXUTIL1",11,0)
 S:$E(XMSTRING,1)=" "!($E(XMSTRING,$L(XMSTRING))=" ") XMSTRING=$$STRIP(XMSTRING)
"RTN","XMXUTIL1",12,0)
 S:XMSTRING?.E1C.E XMSTRING=$$CTRL(XMSTRING)
"RTN","XMXUTIL1",13,0)
 Q XMSTRING
"RTN","XMXUTIL1",14,0)
STRIP(XMSTRING) ; Strip leading and trailing blanks from a string
"RTN","XMXUTIL1",15,0)
 N I
"RTN","XMXUTIL1",16,0)
 I $E(XMSTRING,1)=" " D
"RTN","XMXUTIL1",17,0)
 . F I=2:1 Q:$E(XMSTRING,I)'=" "
"RTN","XMXUTIL1",18,0)
 . S XMSTRING=$E(XMSTRING,I,999)
"RTN","XMXUTIL1",19,0)
 I $E(XMSTRING,$L(XMSTRING))=" " D
"RTN","XMXUTIL1",20,0)
 . F I=$L(XMSTRING):-1 Q:$E(XMSTRING,I)'=" "
"RTN","XMXUTIL1",21,0)
 . S XMSTRING=$E(XMSTRING,1,I)
"RTN","XMXUTIL1",22,0)
 Q XMSTRING
"RTN","XMXUTIL1",23,0)
MAXBLANK(XMSTRING) ; Reduce 3 or more consecutive blanks in a string to 2
"RTN","XMXUTIL1",24,0)
 F  Q:XMSTRING'["   "  D
"RTN","XMXUTIL1",25,0)
 . S XMSTRING=$P(XMSTRING,"   ",1)_"  "_$P(XMSTRING,"   ",2,999)
"RTN","XMXUTIL1",26,0)
 Q XMSTRING
"RTN","XMXUTIL1",27,0)
CTRL(XMSTRING) ; Strip control characters from a string
"RTN","XMXUTIL1",28,0)
 N I
"RTN","XMXUTIL1",29,0)
 S I=1
"RTN","XMXUTIL1",30,0)
 F  Q:XMSTRING'?.E1C.E  D
"RTN","XMXUTIL1",31,0)
 . F I=I:1 Q:$E(XMSTRING,I)?1C
"RTN","XMXUTIL1",32,0)
 . S XMSTRING=$E(XMSTRING,1,I-1)_$E(XMSTRING,I+1,999)
"RTN","XMXUTIL1",33,0)
 Q XMSTRING
"RTN","XMXUTIL1",34,0)
MELD(XMSTRING,XMNUMBER,XMLEN) ; Function right-justifies a string and
"RTN","XMXUTIL1",35,0)
 ; left-justifies a number in a combined string of a given length.
"RTN","XMXUTIL1",36,0)
 ; The string will be truncated, if necessary.
"RTN","XMXUTIL1",37,0)
 ; e.g. $$MELD("I just love Lotus, don't you?",123,22) returns:
"RTN","XMXUTIL1",38,0)
 ;             "I just love Lotus  123"
"RTN","XMXUTIL1",39,0)
 Q:$G(XMNUMBER)="" $E($$LJ^XLFSTR(XMSTRING,XMLEN),1,XMLEN)
"RTN","XMXUTIL1",40,0)
 S XMLEN=XMLEN-$L(XMNUMBER)-2
"RTN","XMXUTIL1",41,0)
 Q $E($$LJ^XLFSTR(XMSTRING,XMLEN),1,XMLEN)_"  "_XMNUMBER
"RTN","XMXUTIL1",42,0)
TSTAMP() ; Timestamp
"RTN","XMXUTIL1",43,0)
 N X
"RTN","XMXUTIL1",44,0)
 S X=$H
"RTN","XMXUTIL1",45,0)
 Q X*86400+$P(X,",",2)
"RTN","XMXUTIL1",46,0)
MMDT(XMDT) ; (MailMan Date/Time) Given FM date/time, return dd mmm yy hh:mm
"RTN","XMXUTIL1",47,0)
 ; time is optional
"RTN","XMXUTIL1",48,0)
 Q:XMDT'=+XMDT XMDT
"RTN","XMXUTIL1",49,0)
 N MMDT
"RTN","XMXUTIL1",50,0)
 I $E(XMDT,4,5)="00" S $E(XMDT,4,5)="01"
"RTN","XMXUTIL1",51,0)
 I $E(XMDT,6,7)="00" S $E(XMDT,6,7)="01"
"RTN","XMXUTIL1",52,0)
 S MMDT=$E(XMDT,6,7)_" "_$P("Jan^Feb^Mar^Apr^May^Jun^Jul^Aug^Sep^Oct^Nov^Dec",U,$E(XMDT,4,5))_" "_$E(XMDT,2,3)
"RTN","XMXUTIL1",53,0)
 S XMDT=$P(XMDT,".",2)_"0000"
"RTN","XMXUTIL1",54,0)
 Q:'XMDT MMDT
"RTN","XMXUTIL1",55,0)
 Q MMDT_" "_$E(XMDT,1,2)_":"_$E(XMDT,3,4)
"RTN","XMXUTIL1",56,0)
INDT(XMDT) ; (InterNet Date/Time) Given FM date/time, return dd mmm yyyy hh:mm:ss +-hhmm (zone)
"RTN","XMXUTIL1",57,0)
 I $E(XMDT,4,5)="00" S $E(XMDT,4,5)="01"
"RTN","XMXUTIL1",58,0)
 I $E(XMDT,6,7)="00" S $E(XMDT,6,7)="01"
"RTN","XMXUTIL1",59,0)
 S XMDT=$$FMTE^XLFDT(XMDT,"1S")
"RTN","XMXUTIL1",60,0)
 ; Convert "Jun 28, 1955@10:10:00" to "28 Jun 1955 10:10:00"
"RTN","XMXUTIL1",61,0)
 S XMDT=+$P(XMDT," ",2)_" "_$P(XMDT," ",1)_" "_+$P(XMDT," ",3)_" "_$S(XMDT["@":$P(XMDT,"@",2),1:"00:00:00")
"RTN","XMXUTIL1",62,0)
 Q XMDT_" "_^XMB("TIMEDIFF")_" ("_^XMB("TIMEZONE")_")"
"RTN","XMXUTIL1",63,0)
CONVERT(X,XMTIME) ; Function to convert Internet dates to FM (returns -1 if error)
"RTN","XMXUTIL1",64,0)
 ; X         Internet date
"RTN","XMXUTIL1",65,0)
 ; XMTIME    =1 Convert time, too; =0 convert date only
"RTN","XMXUTIL1",66,0)
 ; Formats:  Tuesday, 28 June 1955 17:30:45 PDT
"RTN","XMXUTIL1",67,0)
 ;           Tue, 28 Jun 1955 17:30:45 PDT
"RTN","XMXUTIL1",68,0)
 ;           Tue 28 Jun 1955 17:30:45 PDT
"RTN","XMXUTIL1",69,0)
 ;           28 Jun 1955 17:30:45 -0900 (PST)  <== MailMan standard
"RTN","XMXUTIL1",70,0)
 ;           28 Jun 55 17:30 PST            <== Previous MailMan standard
"RTN","XMXUTIL1",71,0)
 ;           Tue Jun 28 17:30:45 PDT 1955
"RTN","XMXUTIL1",72,0)
 ;           28-JUN-1955 17:30:45 -0400
"RTN","XMXUTIL1",73,0)
 ;           6/28/55 17:30
"RTN","XMXUTIL1",74,0)
 ;           JUN 28 17:30 1955
"RTN","XMXUTIL1",75,0)
 N %DT,Y,XMD,XMT
"RTN","XMXUTIL1",76,0)
 I $E(X)=" "!($E(X)=$C(9)) F  S X=$E(X,2,99) Q:$E(X)'=$C(9)&($E(X)'=" ")  ; remove leading blanks or tabs
"RTN","XMXUTIL1",77,0)
 I X?.E2" ".E D  ; reduce all consecutive blanks to 1 blank
"RTN","XMXUTIL1",78,0)
 . N I S I=1
"RTN","XMXUTIL1",79,0)
 . F  S I=$F(X,"  ",I) Q:I=0  S X=$E(X,1,I-2)_$E(X,I,99),I=I-1
"RTN","XMXUTIL1",80,0)
 I X?3.A.E D
"RTN","XMXUTIL1",81,0)
 . I X?3.A1", ".E!(X?3.A1" "3.A.E)!(X?3.A1" "1.2N1" "3.A.E) S X=$P(X," ",2,99) ; remove leading day of week
"RTN","XMXUTIL1",82,0)
 I $P(X," ",3)[":" D
"RTN","XMXUTIL1",83,0)
 . S XMD=$P(X," ",1,2)_" "_$P(X," ",$L(X," ")) ; time is before year
"RTN","XMXUTIL1",84,0)
 . S XMT=$P(X," ",3,$L(X," ")-1)
"RTN","XMXUTIL1",85,0)
 E  D
"RTN","XMXUTIL1",86,0)
 . S XMD=$P(X," ",1,3) ; year is before time
"RTN","XMXUTIL1",87,0)
 . I XMD[":" D
"RTN","XMXUTIL1",88,0)
 . . S XMD=$P(X," ",1) ; "28-JUN-1955 17:30:45 -0400" or "6/28/55 17:30"
"RTN","XMXUTIL1",89,0)
 . . S XMT=$P(X," ",2,99)
"RTN","XMXUTIL1",90,0)
 . E  S XMT=$P(X," ",4,99)
"RTN","XMXUTIL1",91,0)
 I $G(XMTIME) Q $$TIMETOO(XMD,XMT)
"RTN","XMXUTIL1",92,0)
 S X=XMD
"RTN","XMXUTIL1",93,0)
 D ^%DT
"RTN","XMXUTIL1",94,0)
 Q Y
"RTN","XMXUTIL1",95,0)
TIMETOO(XMD,XMT) ; For internal MailMan use only.  Combine date and time, adjusting for difference from GMT.
"RTN","XMXUTIL1",96,0)
 N XMHH,XMMM,X,Y
"RTN","XMXUTIL1",97,0)
 Q:$L(XMT," ")'>1 -1  ; 17:30:45 -0800 (PST)
"RTN","XMXUTIL1",98,0)
 S XMYT=$P(XMT," ",2)
"RTN","XMXUTIL1",99,0)
 D ZONEDIFF(XMYT,.XMHH,.XMMM) Q:XMMM=-1 -1
"RTN","XMXUTIL1",100,0)
 S XMT=$P(XMT," ",1)
"RTN","XMXUTIL1",101,0)
 S:$L($P(XMT,":"))=1 XMT="0"_XMT
"RTN","XMXUTIL1",102,0)
 S XMT=$E(XMT,1,5)  ; FM will only handle hh:mm, not :ss
"RTN","XMXUTIL1",103,0)
 S:XMT="00:00" XMT="00:01" ; if midnight, add a minute
"RTN","XMXUTIL1",104,0)
 S X=XMD_"@"_XMT
"RTN","XMXUTIL1",105,0)
 S %DT="T" D ^%DT Q:Y=-1 -1
"RTN","XMXUTIL1",106,0)
 I 'XMHH,'XMMM Q Y
"RTN","XMXUTIL1",107,0)
 Q $$FMADD^XLFDT(Y,"",XMHH,XMMM)
"RTN","XMXUTIL1",108,0)
ZONEDIFF(XMYT,XMHH,XMMM) ; Given a time zone or time difference from GMT,
"RTN","XMXUTIL1",109,0)
 ; calculates the hours and minutes difference between that zone and ours
"RTN","XMXUTIL1",110,0)
 ; XMYT    IN:  Your Time zone or Time difference from GMT
"RTN","XMXUTIL1",111,0)
 ; XMHH    OUT: The time difference between us in hours
"RTN","XMXUTIL1",112,0)
 ; XMMM    OUT: The time difference between us in minutes
"RTN","XMXUTIL1",113,0)
 ; XMYTHH  Your Time difference from GMT in hours
"RTN","XMXUTIL1",114,0)
 ; XMYTMM  Your Time difference from GMT in minutes
"RTN","XMXUTIL1",115,0)
 ; XMMT    My Time difference from GMT
"RTN","XMXUTIL1",116,0)
 ; XMMTHH  My Time difference from GMT in hours
"RTN","XMXUTIL1",117,0)
 ; XMMTMM  My Time difference from GMT in minutes
"RTN","XMXUTIL1",118,0)
 N XMMT,XMYTHH,XMYTMM,XMMTHH,XMMTMM
"RTN","XMXUTIL1",119,0)
 S XMMT=^XMB("TIMEDIFF")
"RTN","XMXUTIL1",120,0)
 I XMYT=^XMB("TIMEZONE")!(XMYT=XMMT) S (XMHH,XMMM)=0 Q
"RTN","XMXUTIL1",121,0)
 I XMYT?3A S XMYT=$$GMTDIFF(XMYT) I XMYT="" S XMMM=-1 Q
"RTN","XMXUTIL1",122,0)
 S XMYTHH=XMYT\100
"RTN","XMXUTIL1",123,0)
 S XMYTMM=XMYT-(XMYTHH*100)
"RTN","XMXUTIL1",124,0)
 S XMMTHH=XMMT\100
"RTN","XMXUTIL1",125,0)
 S XMMTMM=XMMT-(XMMTHH*100)
"RTN","XMXUTIL1",126,0)
 S XMHH=XMMTHH-XMYTHH
"RTN","XMXUTIL1",127,0)
 S XMMM=XMMTMM-XMYTMM
"RTN","XMXUTIL1",128,0)
 Q
"RTN","XMXUTIL1",129,0)
 ; Also, remember, FM will not handle a 1-digit year
"RTN","XMXUTIL1",130,0)
 ; If this becomes a problem:
"RTN","XMXUTIL1",131,0)
 I $L($P(X," ",3))=1 S $P(X," ",3)="0"_$P(X," ",3)
"RTN","XMXUTIL1",132,0)
 ; *****************************************************
"RTN","XMXUTIL1",133,0)
GMTDIFF(XMZONE) ; Given time zone, returns standard internet time difference from GMT
"RTN","XMXUTIL1",134,0)
 ; XMZONE   3-char time zone name (PST, EDT, etc.)
"RTN","XMXUTIL1",135,0)
 ; returns difference in hours and minutes (+-hhmm) from GMT
"RTN","XMXUTIL1",136,0)
 ;          e.g. -0230, +1600
"RTN","XMXUTIL1",137,0)
 ; If time zone can't be found, returns null string
"RTN","XMXUTIL1",138,0)
 N XMIEN
"RTN","XMXUTIL1",139,0)
 S XMIEN=$O(^XMB(4.4,"B",XMZONE,0)) Q:'XMIEN ""
"RTN","XMXUTIL1",140,0)
 S XMDIFF=$P($G(^XMB(4.4,XMIEN,0)),U,3) Q:XMIEN="" ""
"RTN","XMXUTIL1",141,0)
 Q $$TIMEDIFF(XMDIFF)
"RTN","XMXUTIL1",142,0)
TIMEDIFF(XMDIFF) ; Given time difference, returns standard internet time difference.
"RTN","XMXUTIL1",143,0)
 ; XMDIFF   Difference (in hours) from GMT
"RTN","XMXUTIL1",144,0)
 ;          e.g. -2.5 => -0230
"RTN","XMXUTIL1",145,0)
 ;                16  => +1600
"RTN","XMXUTIL1",146,0)
 N XMSIGN
"RTN","XMXUTIL1",147,0)
 I XMDIFF<0 S XMSIGN="-",XMDIFF=-XMDIFF
"RTN","XMXUTIL1",148,0)
 E  S XMSIGN="+"
"RTN","XMXUTIL1",149,0)
 S XMDIFF=XMDIFF\1*100+(XMDIFF#1*60\1)
"RTN","XMXUTIL1",150,0)
 Q XMSIGN_$$RJ^XLFSTR(XMDIFF,4,"0")
"RTN","XMXUTIL2")
0^252^B43418106
"RTN","XMXUTIL2",1,0)
XMXUTIL2 ;ISC-SF/GMB- Message info ;06/14/99  16:34
"RTN","XMXUTIL2",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXUTIL2",3,0)
 ; All entry points covered by DBIA 2736.
"RTN","XMXUTIL2",4,0)
QRESP(XMZ,XMZREC,XMWHICH) ; Function returns 0 if message XMZ is a message.
"RTN","XMXUTIL2",5,0)
 ; If message XMZ is a response, returns XMZ of original message
"RTN","XMXUTIL2",6,0)
 ; and, optionally, the response number as the second piece.
"RTN","XMXUTIL2",7,0)
 ; in:
"RTN","XMXUTIL2",8,0)
 ; XMZ     XMZ of the message to be checked
"RTN","XMXUTIL2",9,0)
 ; XMZREC  (optional) 0-node of the message
"RTN","XMXUTIL2",10,0)
 ; XMWHICH (optional) If the message is a response,
"RTN","XMXUTIL2",11,0)
 ;         should MailMan also return the response number as the second piece? (0=no (default); 1=yes)
"RTN","XMXUTIL2",12,0)
 N XMZO
"RTN","XMXUTIL2",13,0)
 I $G(XMZREC)="" S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMXUTIL2",14,0)
 S XMZO=$S($P(XMZREC,U,8):$P(XMZREC,U,8),$P(XMZREC,U)?1"R"1.N:+$E(XMZREC,2,99),1:"")
"RTN","XMXUTIL2",15,0)
 ; The following test (XMZO'=XMZ) is necessary,
"RTN","XMXUTIL2",16,0)
 ; because some old messages point to themselves as responses.
"RTN","XMXUTIL2",17,0)
 I XMZO,XMZO'=XMZ Q:'$G(XMWHICH) XMZO  D  Q XMZO_U_XMWHICH  ; This is a response to message XMZO.
"RTN","XMXUTIL2",18,0)
 . S XMWHICH=0
"RTN","XMXUTIL2",19,0)
 . F  S XMWHICH=$O(^XMB(3.9,XMZO,3,XMWHICH)) Q:'XMWHICH  Q:^(XMWHICH,0)=XMZ
"RTN","XMXUTIL2",20,0)
 Q 0  ; This is a message.
"RTN","XMXUTIL2",21,0)
INMSG(XMDUZ,XMK,XMZ,XMZREC,XMFLAGS,XMIM,XMINSTR,XMIU) ;
"RTN","XMXUTIL2",22,0)
 ; Should NOT be called for responses!
"RTN","XMXUTIL2",23,0)
 ; XMFLAGS        If XMFLAGS["I" return internal only
"RTN","XMXUTIL2",24,0)
 ;                          ["F" return FM date
"RTN","XMXUTIL2",25,0)
 ; XMIU("KVAPOR") If applicable, user-specified vaporize date for message in basket
"RTN","XMXUTIL2",26,0)
 ; XMIU("NEW")    Is message new? (0=no; 1=yes; 2=yes, and priority, too)
"RTN","XMXUTIL2",27,0)
 D INMSG1(XMDUZ,XMZ,.XMZREC,.XMFLAGS,.XMIM,.XMIU)
"RTN","XMXUTIL2",28,0)
 D INMSG2(XMDUZ,XMZ,XMZREC,.XMIM,.XMINSTR,.XMIU)
"RTN","XMXUTIL2",29,0)
 Q:'XMK
"RTN","XMXUTIL2",30,0)
 N XMKREC
"RTN","XMXUTIL2",31,0)
 S XMKREC=$G(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0))
"RTN","XMXUTIL2",32,0)
 I $P(XMKREC,U,5) S XMIU("KVAPOR")=$P(XMKREC,U,5)
"RTN","XMXUTIL2",33,0)
 S XMIU("NEW")=$$NEW(XMDUZ,XMK,XMZ)
"RTN","XMXUTIL2",34,0)
 Q
"RTN","XMXUTIL2",35,0)
INMSG1(XMDUZ,XMZ,XMZREC,XMFLAGS,XMIM,XMIU) ;
"RTN","XMXUTIL2",36,0)
 ; Should NOT be called for responses!
"RTN","XMXUTIL2",37,0)
 ; XMIM("RESPS")
"RTN","XMXUTIL2",38,0)
 ; XMIU("IEN")
"RTN","XMXUTIL2",39,0)
 ; XMIU("RESP")
"RTN","XMXUTIL2",40,0)
 I $G(XMZREC)="" S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMXUTIL2",41,0)
 S XMFLAGS=$G(XMFLAGS)
"RTN","XMXUTIL2",42,0)
 D INM(XMZ,XMZREC,XMFLAGS,.XMIM)
"RTN","XMXUTIL2",43,0)
 I $D(XMIU) K XMIU
"RTN","XMXUTIL2",44,0)
 S XMIU("IEN")=+$O(^XMB(3.9,XMZ,1,"C",XMDUZ,0))
"RTN","XMXUTIL2",45,0)
 D INRESPS(XMZ,.XMIM,.XMIU)
"RTN","XMXUTIL2",46,0)
 Q
"RTN","XMXUTIL2",47,0)
INM(XMZ,XMZREC,XMFLAGS,XMIM) ; For internal MailMan use only.
"RTN","XMXUTIL2",48,0)
 ; XMIM and XMIU are killed first
"RTN","XMXUTIL2",49,0)
 ; out:
"RTN","XMXUTIL2",50,0)
 ; Always returned:
"RTN","XMXUTIL2",51,0)
 ; XMIM("XMZ")
"RTN","XMXUTIL2",52,0)
 ; XMIM("SUBJ")
"RTN","XMXUTIL2",53,0)
 ; XMIM("FROM")
"RTN","XMXUTIL2",54,0)
 ; XMIM("DATE")
"RTN","XMXUTIL2",55,0)
 ; XMIM("CRE8")
"RTN","XMXUTIL2",56,0)
 ; XMIM("SENDR")
"RTN","XMXUTIL2",57,0)
 ; XMIM("LINES")
"RTN","XMXUTIL2",58,0)
 ; XMIM("ENV FROM") 'Envelope From' returned only if it exists
"RTN","XMXUTIL2",59,0)
 ; Returned if XMFLAGS'["I":
"RTN","XMXUTIL2",60,0)
 ; XMIM("FROM DUZ")
"RTN","XMXUTIL2",61,0)
 ; XMIM("FROM NAME")
"RTN","XMXUTIL2",62,0)
 ; XMIM("DATE FM")     Returned if XMFLAGS["F"
"RTN","XMXUTIL2",63,0)
 ; XMIM("DATE MM")     Returned if XMFLAGS'["F"
"RTN","XMXUTIL2",64,0)
 ; XMIM("CRE8 MM")     Returned if XMFLAGS'["F"
"RTN","XMXUTIL2",65,0)
 ; XMIM("SENDR DUZ")
"RTN","XMXUTIL2",66,0)
 ; XMIM("SENDR NAME")
"RTN","XMXUTIL2",67,0)
 I $D(XMIM) K XMIM
"RTN","XMXUTIL2",68,0)
 S XMIM("XMZ")=XMZ
"RTN","XMXUTIL2",69,0)
 I $G(XMZREC)="" S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMXUTIL2",70,0)
 S XMIM("SUBJ")=$$SUBJ^XMXUTIL2(XMZREC)
"RTN","XMXUTIL2",71,0)
 S XMIM("FROM")=$P(XMZREC,U,2)
"RTN","XMXUTIL2",72,0)
 S XMIM("DATE")=$P(XMZREC,U,3)
"RTN","XMXUTIL2",73,0)
 S XMIM("SENDR")=$P(XMZREC,U,4)
"RTN","XMXUTIL2",74,0)
 S XMIM("CRE8")=$P($G(^XMB(3.9,XMZ,.6)),U)
"RTN","XMXUTIL2",75,0)
 S XMIM("LINES")=+$P($G(^XMB(3.9,XMZ,2,0)),U,4)
"RTN","XMXUTIL2",76,0)
 I $D(^XMB(3.9,XMZ,.7)) D
"RTN","XMXUTIL2",77,0)
 . N XMNVFROM
"RTN","XMXUTIL2",78,0)
 . S XMNVFROM=$P($G(^XMB(3.9,XMZ,.7)),U,1)
"RTN","XMXUTIL2",79,0)
 . I XMNVFROM'="" S XMIM("ENV FROM")=XMNVFROM
"RTN","XMXUTIL2",80,0)
 Q:XMFLAGS["I"
"RTN","XMXUTIL2",81,0)
 I +XMIM("FROM")'=XMIM("FROM") S XMIM("FROM NAME")=XMIM("FROM")
"RTN","XMXUTIL2",82,0)
 E  S XMIM("FROM DUZ")=XMIM("FROM"),XMIM("FROM NAME")=$$NAME^XMXUTIL(XMIM("FROM"))
"RTN","XMXUTIL2",83,0)
 I XMIM("SENDR")'="" D
"RTN","XMXUTIL2",84,0)
 . I +XMIM("SENDR")'=XMIM("SENDR") S XMIM("SENDR NAME")=XMIM("SENDR")
"RTN","XMXUTIL2",85,0)
 . E  S XMIM("SENDR DUZ")=XMIM("SENDR"),XMIM("SENDR NAME")=$$NAME^XMXUTIL(XMIM("SENDR"))
"RTN","XMXUTIL2",86,0)
 I XMFLAGS["F" D  Q
"RTN","XMXUTIL2",87,0)
 . I XMIM("DATE")?7N.E S XMIM("DATE FM")=XMIM("DATE") Q
"RTN","XMXUTIL2",88,0)
 . S XMIM("DATE FM")=$$CONVERT^XMXUTIL1(XMIM("DATE"),1)
"RTN","XMXUTIL2",89,0)
 S XMIM("DATE MM")=$$DATE(XMZREC,1) ; MailMan date
"RTN","XMXUTIL2",90,0)
 S XMIM("CRE8 MM")=$$MMDT^XMXUTIL1(XMIM("CRE8")) ; MailMan date
"RTN","XMXUTIL2",91,0)
 Q
"RTN","XMXUTIL2",92,0)
INRESPS(XMZ,XMIM,XMIU) ; How many responses?  What's the user read?
"RTN","XMXUTIL2",93,0)
 ; In:
"RTN","XMXUTIL2",94,0)
 ; XMZ
"RTN","XMXUTIL2",95,0)
 ; XMIU("IEN")   ien of user's record in recipient multiple
"RTN","XMXUTIL2",96,0)
 ; Out:
"RTN","XMXUTIL2",97,0)
 ; XMIM("RESPS") message has this many responses
"RTN","XMXUTIL2",98,0)
 ; XMIU("RESP")  last response read by the user
"RTN","XMXUTIL2",99,0)
 ;               (null=not read at all; 0=original msg only; number=resp)
"RTN","XMXUTIL2",100,0)
 S XMIM("RESPS")=+$P($G(^XMB(3.9,XMZ,3,0)),U,4)
"RTN","XMXUTIL2",101,0)
 S XMIU("RESP")=$P($G(^XMB(3.9,XMZ,1,XMIU("IEN"),0)),U,2)
"RTN","XMXUTIL2",102,0)
 Q
"RTN","XMXUTIL2",103,0)
INRESP(XMZ,XMIEN,XMFLAGS,XMIR) ; Get info on a response to a message.
"RTN","XMXUTIL2",104,0)
 ; In:
"RTN","XMXUTIL2",105,0)
 ; XMZ     XMZ of original message
"RTN","XMXUTIL2",106,0)
 ; XMIEN   Which response (1 thru # of responses)
"RTN","XMXUTIL2",107,0)
 ; XMFLAGS If XMFLAGS["I" return internal only
"RTN","XMXUTIL2",108,0)
 ;                   ["F" return FM date
"RTN","XMXUTIL2",109,0)
 ; Out:
"RTN","XMXUTIL2",110,0)
 ; XMIR   
"RTN","XMXUTIL2",111,0)
 N XMZREC,XMZR
"RTN","XMXUTIL2",112,0)
 K XMIR
"RTN","XMXUTIL2",113,0)
 I '$D(^XMB(3.9,XMZ,3,XMIEN)) Q
"RTN","XMXUTIL2",114,0)
 S XMZR=$G(^XMB(3.9,XMZ,3,XMIEN,0)) Q:'XMZR
"RTN","XMXUTIL2",115,0)
 S XMZREC=$G(^XMB(3.9,XMZR,0))
"RTN","XMXUTIL2",116,0)
 D INM(XMZR,XMZREC,XMFLAGS,.XMIR)
"RTN","XMXUTIL2",117,0)
 ;Q:XMIR("SUBJ")'?1"R".N
"RTN","XMXUTIL2",118,0)
 ;Q:XMFLAGS["I"
"RTN","XMXUTIL2",119,0)
 ;S XMZREC=$G(^XMB(3.9,XMZ,0)) Q:XMZREC=""
"RTN","XMXUTIL2",120,0)
 ;S XMIR("SUBJ X")="Re: "_$P(XMZREC,U,1)
"RTN","XMXUTIL2",121,0)
 ;I XMIR("SUBJ X")["~U~" S XMIR("SUBJ")=$$DECODEUP^XMXUTIL1(XMIR("SUBJ X"))
"RTN","XMXUTIL2",122,0)
 Q
"RTN","XMXUTIL2",123,0)
INMSG2(XMDUZ,XMZ,XMZREC,XMIM,XMINSTR,XMIU) ;
"RTN","XMXUTIL2",124,0)
 ; Should NOT be called for responses!
"RTN","XMXUTIL2",125,0)
 ; Does not kill XMIM, XMINSTR, or XMIU first
"RTN","XMXUTIL2",126,0)
 ; XMIM("RECIPS")   number of recipients of the message
"RTN","XMXUTIL2",127,0)
 ; XMIU("ORIGN8")   user sent message (0=no; 1=yes)
"RTN","XMXUTIL2",128,0)
 ; The following are set only if applicable:
"RTN","XMXUTIL2",129,0)
 ; XMINSTR("FLAGS")
"RTN","XMXUTIL2",130,0)
 ; XMINSTR("RCPT BSKT")
"RTN","XMXUTIL2",131,0)
 ; XMINSTR("TYPE")
"RTN","XMXUTIL2",132,0)
 ; XMINSTR("VAPOR")
"RTN","XMXUTIL2",133,0)
 ; XMINSTR("SCR HINT")
"RTN","XMXUTIL2",134,0)
 S XMIM("RECIPS")=$P($G(^XMB(3.9,XMZ,1,0)),U,4)
"RTN","XMXUTIL2",135,0)
 I $G(XMZREC)="" S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMXUTIL2",136,0)
 S XMIU("ORIGN8")=$$ORIGIN8R^XMXSEC(XMDUZ,XMZREC)
"RTN","XMXUTIL2",137,0)
 S:$P(XMZREC,U,6)'="" XMINSTR("VAPOR")=$P(XMZREC,U,6)
"RTN","XMXUTIL2",138,0)
 S XMINSTR("TYPE")=$P(XMZREC,U,7)  ; Msg type (regular, KIDS, etc.)
"RTN","XMXUTIL2",139,0)
 I $$PAKMAN^XMXSEC1(XMZ,XMZREC) D
"RTN","XMXUTIL2",140,0)
 . Q:XMINSTR("TYPE")["K"  ; KIDS
"RTN","XMXUTIL2",141,0)
 . S:XMINSTR("TYPE")'["X" XMINSTR("TYPE")=XMINSTR("TYPE")_"X" ; PackMan
"RTN","XMXUTIL2",142,0)
 S XMINSTR("FLAGS")=""
"RTN","XMXUTIL2",143,0)
 S:"^Y^y^"[(U_$P(XMZREC,U,5)_U) XMINSTR("FLAGS")=XMINSTR("FLAGS")_"R" ; confirmation requested
"RTN","XMXUTIL2",144,0)
 S:"^Y^y^"[(U_$P(XMZREC,U,9)_U) XMINSTR("FLAGS")=XMINSTR("FLAGS")_"X" ; closed
"RTN","XMXUTIL2",145,0)
 S:"^Y^y^"[(U_$P(XMZREC,U,11)_U) XMINSTR("FLAGS")=XMINSTR("FLAGS")_"C" ; confidential
"RTN","XMXUTIL2",146,0)
 S:"^Y^y^"[(U_$P(XMZREC,U,12)_U) XMINSTR("FLAGS")=XMINSTR("FLAGS")_"I" ; information only
"RTN","XMXUTIL2",147,0)
 I $P(XMZREC,U,10)'="" S XMINSTR("SCR HINT")=$P(XMZREC,U,10)
"RTN","XMXUTIL2",148,0)
 I $D(^XMB(3.9,XMZ,.5)) D
"RTN","XMXUTIL2",149,0)
 . N XMZBSKT
"RTN","XMXUTIL2",150,0)
 . S XMZBSKT=$P(^XMB(3.9,XMZ,.5),U,1)
"RTN","XMXUTIL2",151,0)
 . S:XMZBSKT'="" XMINSTR("RCPT BSKT")=XMZBSKT
"RTN","XMXUTIL2",152,0)
 Q:XMINSTR("TYPE")'["P"
"RTN","XMXUTIL2",153,0)
 S XMINSTR("FLAGS")=XMINSTR("FLAGS")_"P" ; priority
"RTN","XMXUTIL2",154,0)
 S XMINSTR("TYPE")=$TR(XMINSTR("TYPE"),"P")
"RTN","XMXUTIL2",155,0)
 S:'$P($G(^XMB(3.9,XMZ,1,XMIU("IEN"),0)),U,9) XMINSTR("FLAGS")=XMINSTR("FLAGS")_"K" ; priority responses
"RTN","XMXUTIL2",156,0)
 Q
"RTN","XMXUTIL2",157,0)
ZNODE(XMZ) ; Returns the zero node of the message.
"RTN","XMXUTIL2",158,0)
 Q $G(^XMB(3.9,XMZ,0))
"RTN","XMXUTIL2",159,0)
ZDATE(XMZ,XMTIME) ; What is the message date? (Returned in DD MMM YY HH:MM format)
"RTN","XMXUTIL2",160,0)
 ; XMTIME =0 Date only
"RTN","XMXUTIL2",161,0)
 ;        =1 Date and time (default)
"RTN","XMXUTIL2",162,0)
 Q $$DATE($G(^XMB(3.9,XMZ,0)),.XMTIME)
"RTN","XMXUTIL2",163,0)
DATE(XMZREC,XMTIME) ; What is the message date? (Returned in DD MMM YY HH:MM format)
"RTN","XMXUTIL2",164,0)
 ; XMTIME =0 Date only
"RTN","XMXUTIL2",165,0)
 ;        =1 Date and time (default)
"RTN","XMXUTIL2",166,0)
 N XMDATE
"RTN","XMXUTIL2",167,0)
 S XMDATE=$P(XMZREC,U,3)
"RTN","XMXUTIL2",168,0)
 S XMTIME=+$G(XMTIME,1)
"RTN","XMXUTIL2",169,0)
 I XMDATE?7N.E Q $$MMDT^XMXUTIL1($S(XMTIME:XMDATE,1:$E(XMDATE,1,7)))
"RTN","XMXUTIL2",170,0)
 N XMFM
"RTN","XMXUTIL2",171,0)
 S XMFM=$$CONVERT^XMXUTIL1(XMDATE,XMTIME)
"RTN","XMXUTIL2",172,0)
 I XMFM=-1 Q XMDATE
"RTN","XMXUTIL2",173,0)
 Q $$MMDT^XMXUTIL1(XMFM)
"RTN","XMXUTIL2",174,0)
ZSUBJ(XMZ) ; What is the message subject?
"RTN","XMXUTIL2",175,0)
 Q $$SUBJ($G(^XMB(3.9,XMZ,0)))
"RTN","XMXUTIL2",176,0)
SUBJ(XMZREC) ; What is the message subject?
"RTN","XMXUTIL2",177,0)
 N XMSUBJ
"RTN","XMXUTIL2",178,0)
 S XMSUBJ=$P(XMZREC,U,1)
"RTN","XMXUTIL2",179,0)
 I XMSUBJ="" Q $$EZBLD^DIALOG(34012)
"RTN","XMXUTIL2",180,0)
 I XMSUBJ["~U~" Q $$DECODEUP^XMXUTIL1(XMSUBJ)
"RTN","XMXUTIL2",181,0)
 Q XMSUBJ
"RTN","XMXUTIL2",182,0)
ZFROM(XMZ) ; Who sent the message?
"RTN","XMXUTIL2",183,0)
 Q $$FROM($G(^XMB(3.9,XMZ,0)))
"RTN","XMXUTIL2",184,0)
FROM(XMZREC) ; Who sent the message?
"RTN","XMXUTIL2",185,0)
 Q $$NAME^XMXUTIL($P(XMZREC,U,2))
"RTN","XMXUTIL2",186,0)
ZPRI(XMZ) ; Is the message priority?
"RTN","XMXUTIL2",187,0)
 Q $$PRI($G(^XMB(3.9,XMZ,0)))
"RTN","XMXUTIL2",188,0)
PRI(XMZREC) ; Is the message priority?
"RTN","XMXUTIL2",189,0)
 Q $P(XMZREC,U,7)["P"
"RTN","XMXUTIL2",190,0)
LINE(XMZ) ; How many lines does the message have?
"RTN","XMXUTIL2",191,0)
 Q +$P($G(^XMB(3.9,XMZ,2,0)),U,4)
"RTN","XMXUTIL2",192,0)
RESP(XMZ) ; How many responses does this message have?
"RTN","XMXUTIL2",193,0)
 Q +$P($G(^XMB(3.9,XMZ,3,0)),U,4)
"RTN","XMXUTIL2",194,0)
ZREAD(XMDUZ,XMZ) ; How many responses has the user read?
"RTN","XMXUTIL2",195,0)
 ; null   = the user has not read the message
"RTN","XMXUTIL2",196,0)
 ; 0      = the user has read the original message only
"RTN","XMXUTIL2",197,0)
 ; number = the user has read through this response
"RTN","XMXUTIL2",198,0)
 N XMUPTR
"RTN","XMXUTIL2",199,0)
 ;S XMUPTR=$O(^XMB(3.9,XMZ,1,"C",$S(XMDUZ=.6:DUZ,1:XMDUZ),0))
"RTN","XMXUTIL2",200,0)
 S XMUPTR=$O(^XMB(3.9,XMZ,1,"C",XMDUZ,0))
"RTN","XMXUTIL2",201,0)
 Q:'XMUPTR 0
"RTN","XMXUTIL2",202,0)
 Q $$READ($G(^XMB(3.9,XMZ,1,XMUPTR,0)))
"RTN","XMXUTIL2",203,0)
READ(XMZUREC) ; How many responses has the user read?
"RTN","XMXUTIL2",204,0)
 ; null   = the user has not read the message
"RTN","XMXUTIL2",205,0)
 ; 0      = the user has read the original message only
"RTN","XMXUTIL2",206,0)
 ; number = the user has read through this response
"RTN","XMXUTIL2",207,0)
 Q $P(XMZUREC,U,2)
"RTN","XMXUTIL2",208,0)
BSKT(XMDUZ,XMZ,XMNAME) ; Which basket is the message in for this user?
"RTN","XMXUTIL2",209,0)
 ; in:
"RTN","XMXUTIL2",210,0)
 ; XMDUZ,XMZ
"RTN","XMXUTIL2",211,0)
 ; XMNAME Return basket name as second piece? 0=no (default); 1=yes
"RTN","XMXUTIL2",212,0)
 ; returns:
"RTN","XMXUTIL2",213,0)
 ; 0           = it's not in any basket
"RTN","XMXUTIL2",214,0)
 ; number      = it's in this basket ien      ($G(XMNAME)=0)
"RTN","XMXUTIL2",215,0)
 ; number^name = it's in this basket ien^name (XMNAME=1)
"RTN","XMXUTIL2",216,0)
 N XMK
"RTN","XMXUTIL2",217,0)
 S XMK=+$O(^XMB(3.7,"M",XMZ,XMDUZ,""))
"RTN","XMXUTIL2",218,0)
 I 'XMK Q XMK
"RTN","XMXUTIL2",219,0)
 I '$G(XMNAME) Q XMK
"RTN","XMXUTIL2",220,0)
 Q XMK_U_$P($G(^XMB(3.7,XMDUZ,2,XMK,0)),U,1)
"RTN","XMXUTIL2",221,0)
NEW(XMDUZ,XMK,XMZ) ; Is the message new for this user?
"RTN","XMXUTIL2",222,0)
 ; 0 = no
"RTN","XMXUTIL2",223,0)
 ; 1 = yes
"RTN","XMXUTIL2",224,0)
 ; 2 = yes, and it's priority, too.
"RTN","XMXUTIL2",225,0)
 Q:$D(^XMB(3.7,XMDUZ,"N",XMK,XMZ)) 2
"RTN","XMXUTIL2",226,0)
 Q:$D(^XMB(3.7,XMDUZ,"N0",XMK,XMZ)) 1
"RTN","XMXUTIL2",227,0)
 Q 0
"RTN","XMXUTIL2",228,0)
KSEQN(XMDUZ,XMK,XMZ) ; What's the seqence number for this message in this user's basket?
"RTN","XMXUTIL2",229,0)
 Q $$SEQN($G(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)))
"RTN","XMXUTIL2",230,0)
SEQN(XMKZREC) ; What's the seqence number for this message in this user's basket?
"RTN","XMXUTIL2",231,0)
 Q $P(XMKZREC,U,2)
"RTN","XMXUTIL2",232,0)
 ;
"RTN","XMXUTIL2",233,0)
 ;#34012 = * No Subject *
"RTN","XMXUTIL3")
0^254^B12384491
"RTN","XMXUTIL3",1,0)
XMXUTIL3 ;ISC-SF/GMB-List addressees, recipients, message network header ;05/08/99  12:10
"RTN","XMXUTIL3",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXUTIL3",3,0)
 ; All entry points covered by DBIA 2737.
"RTN","XMXUTIL3",4,0)
 ; Common Parameters for Q, QD, QL, QN:
"RTN","XMXUTIL3",5,0)
 ; XMZ     message number in message file
"RTN","XMXUTIL3",6,0)
 ; XMAMT   How many?
"RTN","XMXUTIL3",7,0)
 ;         =number - Get this many
"RTN","XMXUTIL3",8,0)
 ;         =*      - Get all (default)
"RTN","XMXUTIL3",9,0)
 ; XMSTART("IEN") is used to start the lister going.  The lister will
"RTN","XMXUTIL3",10,0)
 ;         keep it updated from call to call.
"RTN","XMXUTIL3",11,0)
 ;         It is the IEN to start AFTER.
"RTN","XMXUTIL3",12,0)
 ;         (Default is to start at the beginning: after 0.)
"RTN","XMXUTIL3",13,0)
 ; XMTROOT is the target root to receive the message list.
"RTN","XMXUTIL3",14,0)
 ;         (default is ^TMP("XMLIST",$J))
"RTN","XMXUTIL3",15,0)
 ; XMFLAGS are used to control processing (currently not used)
"RTN","XMXUTIL3",16,0)
 ; XMFIND  Search for recipients/addressees matching this string.
"RTN","XMXUTIL3",17,0)
 ;         Same rules as for FileMan lookups.
"RTN","XMXUTIL3",18,0)
 ;         (If XMFIND is supplied, XMSTART and XMAMT are ignored, and
"RTN","XMXUTIL3",19,0)
 ;          a complete list is returned.)
"RTN","XMXUTIL3",20,0)
 ;
"RTN","XMXUTIL3",21,0)
Q(XMZ,XMFLAGS,XMAMT,XMSTART,XMFIND,XMTROOT) ; Addressee listing
"RTN","XMXUTIL3",22,0)
 N XMCNT,XMIEN,XMREC
"RTN","XMXUTIL3",23,0)
 D QINIT(.XMFLAGS,.XMAMT,.XMFIND,.XMTROOT)
"RTN","XMXUTIL3",24,0)
 I $D(XMFIND) D
"RTN","XMXUTIL3",25,0)
 . D FIND^DIC(3.911,","_XMZ_",","","",XMFIND,"","B")
"RTN","XMXUTIL3",26,0)
 E  D
"RTN","XMXUTIL3",27,0)
 . D LIST^DIC(3.911,","_XMZ_",","","",XMAMT,.XMSTART,"","B")
"RTN","XMXUTIL3",28,0)
 S XMCNT=0
"RTN","XMXUTIL3",29,0)
 F  S XMCNT=$O(^TMP("DILIST",$J,2,XMCNT)) Q:XMCNT=""  S XMIEN=^(XMCNT) D
"RTN","XMXUTIL3",30,0)
 . S XMREC=$G(^XMB(3.9,XMZ,6,XMIEN,0))
"RTN","XMXUTIL3",31,0)
 . S @(XMTROOT_XMCNT_",""TO NAME"")")=$P(XMREC,U,1)
"RTN","XMXUTIL3",32,0)
 . I $P(XMREC,U,2)'="" S @(XMTROOT_XMCNT_",""TYPE"")")=$P(XMREC,U,2)
"RTN","XMXUTIL3",33,0)
 S @(XMTROOT_"0)")=^TMP("DILIST",$J,0)
"RTN","XMXUTIL3",34,0)
 K ^TMP("DILIST",$J)
"RTN","XMXUTIL3",35,0)
 Q
"RTN","XMXUTIL3",36,0)
QD(XMZ,XMFLAGS,XMAMT,XMSTART,XMFIND,XMTROOT) ; Recipient listing
"RTN","XMXUTIL3",37,0)
 D QINIT(.XMFLAGS,.XMAMT,.XMFIND,.XMTROOT)
"RTN","XMXUTIL3",38,0)
 I $D(XMFIND) D
"RTN","XMXUTIL3",39,0)
 . N XMCNT
"RTN","XMXUTIL3",40,0)
 . D QFIND^XMXUTIL4(XMZ,XMFLAGS,XMFIND,XMTROOT,.XMCNT)
"RTN","XMXUTIL3",41,0)
 . S @(XMTROOT_"0)")=XMCNT_U_"*^0"
"RTN","XMXUTIL3",42,0)
 . K ^TMP("DILIST",$J)
"RTN","XMXUTIL3",43,0)
 E  D
"RTN","XMXUTIL3",44,0)
 . D QLIST^XMXUTIL4(XMZ,XMFLAGS,XMAMT,.XMSTART,XMTROOT)
"RTN","XMXUTIL3",45,0)
 Q
"RTN","XMXUTIL3",46,0)
QL(XMZ,XMFLAGS,XMAMT,XMSTART,XMFIND,XMTROOT) ; Later'd Addressee listing
"RTN","XMXUTIL3",47,0)
 N XMCNT,XMIEN,XMREC
"RTN","XMXUTIL3",48,0)
 D QINIT(.XMFLAGS,.XMAMT,.XMFIND,.XMTROOT)
"RTN","XMXUTIL3",49,0)
 I $D(XMFIND) D
"RTN","XMXUTIL3",50,0)
 . D FIND^DIC(3.914,","_XMZ_",","","",XMFIND,"","B")
"RTN","XMXUTIL3",51,0)
 E  D
"RTN","XMXUTIL3",52,0)
 . D LIST^DIC(3.914,","_XMZ_",","","",XMAMT,.XMSTART,"","B")
"RTN","XMXUTIL3",53,0)
 S XMCNT=0
"RTN","XMXUTIL3",54,0)
 F  S XMCNT=$O(^TMP("DILIST",$J,2,XMCNT)) Q:XMCNT=""  S XMIEN=^(XMCNT) D
"RTN","XMXUTIL3",55,0)
 . S XMREC=$G(^XMB(3.9,XMZ,7,XMIEN,0))
"RTN","XMXUTIL3",56,0)
 . S @(XMTROOT_XMCNT_",""TO NAME"")")=$P(XMREC,U,1)
"RTN","XMXUTIL3",57,0)
 . I $P(XMREC,U,2)'="" S @(XMTROOT_XMCNT_",""TYPE"")")=$P(XMREC,U,2)
"RTN","XMXUTIL3",58,0)
 . S @(XMTROOT_XMCNT_",""BY DUZ"")")=$P(XMREC,U,3)
"RTN","XMXUTIL3",59,0)
 . S @(XMTROOT_XMCNT_",""BY NAME"")")=$P(XMREC,U,4)
"RTN","XMXUTIL3",60,0)
 . S @(XMTROOT_XMCNT_",""WHEN"")")=$P(XMREC,U,5)
"RTN","XMXUTIL3",61,0)
 . S @(XMTROOT_XMCNT_",""WHEN MM"")")=$$MMDT^XMXUTIL1($P(XMREC,U,5))
"RTN","XMXUTIL3",62,0)
 S @(XMTROOT_"0)")=^TMP("DILIST",$J,0)
"RTN","XMXUTIL3",63,0)
 K ^TMP("DILIST",$J)
"RTN","XMXUTIL3",64,0)
 Q
"RTN","XMXUTIL3",65,0)
QINIT(XMFLAGS,XMAMT,XMFIND,XMTROOT) ; For internal MailMan use only.
"RTN","XMXUTIL3",66,0)
 S XMFLAGS=$G(XMFLAGS)
"RTN","XMXUTIL3",67,0)
 I $G(XMAMT)="" S XMAMT="*"
"RTN","XMXUTIL3",68,0)
 I $D(XMFIND),XMFIND="" K XMFIND
"RTN","XMXUTIL3",69,0)
 I $D(XMTROOT),XMTROOT'="" D
"RTN","XMXUTIL3",70,0)
 . K @$$CREF^DILF(XMTROOT)
"RTN","XMXUTIL3",71,0)
 . S XMTROOT=$$OREF^DILF(XMTROOT)_"""XMLIST"","
"RTN","XMXUTIL3",72,0)
 E  D
"RTN","XMXUTIL3",73,0)
 . K ^TMP("XMLIST",$J)
"RTN","XMXUTIL3",74,0)
 . S XMTROOT="^TMP(""XMLIST"",$J,"
"RTN","XMXUTIL3",75,0)
 Q
"RTN","XMXUTIL3",76,0)
QN(XMZ,XMFLAGS,XMAMT,XMSTART,XMTROOT) ; Get network header lines
"RTN","XMXUTIL3",77,0)
 N XMCNT,XMIEN
"RTN","XMXUTIL3",78,0)
 D QNINIT(.XMAMT,.XMTROOT)
"RTN","XMXUTIL3",79,0)
 S XMCNT=0
"RTN","XMXUTIL3",80,0)
 S XMIEN=+$G(XMSTART("IEN"))
"RTN","XMXUTIL3",81,0)
 F  S XMIEN=$O(^XMB(3.9,XMZ,2,XMIEN)) Q:XMIEN'<1  D  Q:XMCNT=XMAMT
"RTN","XMXUTIL3",82,0)
 . S XMCNT=XMCNT+1
"RTN","XMXUTIL3",83,0)
 . S @(XMTROOT_XMCNT_")")=^XMB(3.9,XMZ,2,XMIEN,0)
"RTN","XMXUTIL3",84,0)
 S XMSTART("IEN")=XMIEN
"RTN","XMXUTIL3",85,0)
 S @(XMTROOT_"0)")=XMCNT_U_XMAMT_U_$S(XMIEN'<1:0,$O(^XMB(3.9,XMZ,2,XMIEN))<1:1,1:0) ; Any more?
"RTN","XMXUTIL3",86,0)
 Q
"RTN","XMXUTIL3",87,0)
QNINIT(XMAMT,XMTROOT) ; For internal MailMan use only.
"RTN","XMXUTIL3",88,0)
 I $G(XMAMT)="" S XMAMT="*"
"RTN","XMXUTIL3",89,0)
 I $D(XMTROOT),XMTROOT'="" D
"RTN","XMXUTIL3",90,0)
 . K @$$CREF^DILF(XMTROOT)
"RTN","XMXUTIL3",91,0)
 . S XMTROOT=$$OREF^DILF(XMTROOT)_"""XMLIST"","
"RTN","XMXUTIL3",92,0)
 E  D
"RTN","XMXUTIL3",93,0)
 . K ^TMP("XMLIST",$J)
"RTN","XMXUTIL3",94,0)
 . S XMTROOT="^TMP(""XMLIST"",$J,"
"RTN","XMXUTIL3",95,0)
 Q
"RTN","XMXUTIL4")
0^255^B31579115
"RTN","XMXUTIL4",1,0)
XMXUTIL4 ;ISC-SF/GMB-List message recipients (cont'd) ;06/14/99  10:23
"RTN","XMXUTIL4",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMXUTIL4",3,0)
 ; All entry points are for internal MailMan use only.
"RTN","XMXUTIL4",4,0)
QLIST(XMZ,XMFLAGS,XMAMT,XMSTART,XMTROOT) ; list them
"RTN","XMXUTIL4",5,0)
 N XMCNT,XMIEN,XMREC,XMTO,XMNAME
"RTN","XMXUTIL4",6,0)
 S XMCNT=0,XMIEN=+$G(XMSTART("IEN"))
"RTN","XMXUTIL4",7,0)
 F  S XMIEN=$O(^XMB(3.9,XMZ,1,XMIEN)) Q:'XMIEN  D  Q:XMCNT=XMAMT
"RTN","XMXUTIL4",8,0)
 . S XMCNT=XMCNT+1
"RTN","XMXUTIL4",9,0)
 . S XMREC=$G(^XMB(3.9,XMZ,1,XMIEN,0))
"RTN","XMXUTIL4",10,0)
 . S XMTO=$P(XMREC,U,1)
"RTN","XMXUTIL4",11,0)
 . S XMNAME=$$NAME^XMXUTIL(XMTO)
"RTN","XMXUTIL4",12,0)
 . D QDFLDS(XMZ,XMFLAGS,XMIEN,XMREC,XMNAME,XMTROOT,XMCNT)
"RTN","XMXUTIL4",13,0)
 S XMSTART("IEN")=XMIEN
"RTN","XMXUTIL4",14,0)
 S @(XMTROOT_"0)")=XMCNT_U_XMAMT_U_$S(XMAMT="*":0,1:$O(^XMB(3.9,XMZ,1,XMIEN))>0)
"RTN","XMXUTIL4",15,0)
 Q
"RTN","XMXUTIL4",16,0)
QDFLDS(XMZ,XMFLAGS,XMIEN,XMREC,XMNAME,XMTROOT,XMCNT) ;
"RTN","XMXUTIL4",17,0)
 S @(XMTROOT_XMCNT_",""TO"")")=$P(XMREC,U,1)
"RTN","XMXUTIL4",18,0)
 S @(XMTROOT_XMCNT_",""TO NAME"")")=XMNAME
"RTN","XMXUTIL4",19,0)
 I $D(^XMB(3.9,XMZ,1,XMIEN,"T")) S @(XMTROOT_XMCNT_",""TYPE"")")=$P(^("T"),U,1)
"RTN","XMXUTIL4",20,0)
 I $D(^XMB(3.9,XMZ,1,XMIEN,"F")) D FWD(XMZ,XMIEN)
"RTN","XMXUTIL4",21,0)
 I $P(XMREC,U,1)?.N D  Q
"RTN","XMXUTIL4",22,0)
 . S @(XMTROOT_XMCNT_",""TO ID"")")="L" ; local user
"RTN","XMXUTIL4",23,0)
 . S @(XMTROOT_XMCNT_",""TO DUZ"")")=$P(XMREC,U,1)
"RTN","XMXUTIL4",24,0)
 . I $P(XMREC,U,2)'="" D
"RTN","XMXUTIL4",25,0)
 . . S @(XMTROOT_XMCNT_",""RESP"")")=$P(XMREC,U,2)
"RTN","XMXUTIL4",26,0)
 . I $P(XMREC,U,3)'="" D
"RTN","XMXUTIL4",27,0)
 . . S @(XMTROOT_XMCNT_",""LREAD"")")=$P(XMREC,U,3)
"RTN","XMXUTIL4",28,0)
 . . S @(XMTROOT_XMCNT_",""LREAD MM"")")=$$MMDT^XMXUTIL1($P(XMREC,U,3))
"RTN","XMXUTIL4",29,0)
 . I $P(XMREC,U,10)'="" D
"RTN","XMXUTIL4",30,0)
 . . S @(XMTROOT_XMCNT_",""FREAD"")")=$P(XMREC,U,10)
"RTN","XMXUTIL4",31,0)
 . . S @(XMTROOT_XMCNT_",""FREAD MM"")")=$$MMDT^XMXUTIL1($P(XMREC,U,10))
"RTN","XMXUTIL4",32,0)
 . I $D(^XMB(3.9,XMZ,1,XMIEN,"C")) D
"RTN","XMXUTIL4",33,0)
 . . N XMD
"RTN","XMXUTIL4",34,0)
 . . S XMD=^XMB(3.9,XMZ,1,XMIEN,"C")
"RTN","XMXUTIL4",35,0)
 . . S @(XMTROOT_XMCNT_",""COPY"")")=XMD
"RTN","XMXUTIL4",36,0)
 . . S @(XMTROOT_XMCNT_",""COPY MM"")")=$$MMDT^XMXUTIL1(XMD)
"RTN","XMXUTIL4",37,0)
 . I $D(^XMB(3.9,XMZ,1,XMIEN,"D")),$G(^("D")) D
"RTN","XMXUTIL4",38,0)
 . . N XMD
"RTN","XMXUTIL4",39,0)
 . . S XMD=^XMB(3.9,XMZ,1,XMIEN,"D")
"RTN","XMXUTIL4",40,0)
 . . S @(XMTROOT_XMCNT_",""TERM"")")=XMD
"RTN","XMXUTIL4",41,0)
 . . S @(XMTROOT_XMCNT_",""TERM MM"")")=$$MMDT^XMXUTIL1(XMD)
"RTN","XMXUTIL4",42,0)
 . I $D(^XMB(3.9,XMZ,1,XMIEN,"S")) D
"RTN","XMXUTIL4",43,0)
 . . S @(XMTROOT_XMCNT_",""SURR"")")=^XMB(3.9,XMZ,1,XMIEN,"S")
"RTN","XMXUTIL4",44,0)
 I $E(XMNAME,1,2)="F.",$P(XMREC,U,12)'=""!$P(XMREC,U,11) D  Q
"RTN","XMXUTIL4",45,0)
 . S @(XMTROOT_XMCNT_",""TO ID"")")="F" ; fax
"RTN","XMXUTIL4",46,0)
 . I $P(XMREC,U,5)'="" D
"RTN","XMXUTIL4",47,0)
 . . S @(XMTROOT_XMCNT_",""FDATE"")")=$P(XMREC,U,5)
"RTN","XMXUTIL4",48,0)
 . . S @(XMTROOT_XMCNT_",""FDATE MM"")")=$$MMDT^XMXUTIL1($P(XMREC,U,5))
"RTN","XMXUTIL4",49,0)
 . I $P(XMREC,U,6)'="" D
"RTN","XMXUTIL4",50,0)
 . . S @(XMTROOT_XMCNT_",""STATUS"")")=$P(XMREC,U,6)
"RTN","XMXUTIL4",51,0)
 . I $P(XMREC,U,11)'="" D
"RTN","XMXUTIL4",52,0)
 . . S @(XMTROOT_XMCNT_",""FAX IEN"")")=$P(XMREC,U,11)
"RTN","XMXUTIL4",53,0)
 . I $P(XMREC,U,12)'="" D
"RTN","XMXUTIL4",54,0)
 . . S @(XMTROOT_XMCNT_",""ID"")")=$P(XMREC,U,12)
"RTN","XMXUTIL4",55,0)
 I XMNAME["@" D  Q
"RTN","XMXUTIL4",56,0)
 . S @(XMTROOT_XMCNT_",""TO ID"")")="R" ; remote
"RTN","XMXUTIL4",57,0)
 . I $P(XMREC,U,4)'="" D
"RTN","XMXUTIL4",58,0)
 . . S @(XMTROOT_XMCNT_",""ID"")")=$P(XMREC,U,4)
"RTN","XMXUTIL4",59,0)
 . I $P(XMREC,U,5)'="" D
"RTN","XMXUTIL4",60,0)
 . . S @(XMTROOT_XMCNT_",""XDATE"")")=$P(XMREC,U,5)
"RTN","XMXUTIL4",61,0)
 . . S @(XMTROOT_XMCNT_",""XDATE MM"")")=$$MMDT^XMXUTIL1($P(XMREC,U,5))
"RTN","XMXUTIL4",62,0)
 . I $P(XMREC,U,6)'="" D
"RTN","XMXUTIL4",63,0)
 . . S @(XMTROOT_XMCNT_",""STATUS"")")=$P(XMREC,U,6)
"RTN","XMXUTIL4",64,0)
 . I $P(XMREC,U,7)'="",$D(^DIC(4.2,$P(XMREC,U,7),0)) D
"RTN","XMXUTIL4",65,0)
 . . S @(XMTROOT_XMCNT_",""PATH"")")=$P(XMREC,U,7)
"RTN","XMXUTIL4",66,0)
 . . S @(XMTROOT_XMCNT_",""PATH NAME"")")=$P(^DIC(4.2,$P(XMREC,U,7),0),U)
"RTN","XMXUTIL4",67,0)
 . I $P(XMREC,U,8)'="" D
"RTN","XMXUTIL4",68,0)
 . . S @(XMTROOT_XMCNT_",""SECS"")")=$P(XMREC,U,8)
"RTN","XMXUTIL4",69,0)
 I $E(XMNAME,1,3)="* (" D  Q
"RTN","XMXUTIL4",70,0)
 . S @(XMTROOT_XMCNT_",""TO ID"")")=$E(XMNAME) ; broadcast
"RTN","XMXUTIL4",71,0)
 ; I $E(XMNAME,1,2)="D."!($E(XMNAME,1,2)="S.")
"RTN","XMXUTIL4",72,0)
 S @(XMTROOT_XMCNT_",""TO ID"")")=$E(XMNAME) ; device or server
"RTN","XMXUTIL4",73,0)
 I $P(XMREC,U,3)'="" D
"RTN","XMXUTIL4",74,0)
 . S @(XMTROOT_XMCNT_",""SDATE"")")=$P(XMREC,U,3)
"RTN","XMXUTIL4",75,0)
 . S @(XMTROOT_XMCNT_",""SDATE MM"")")=$$MMDT^XMXUTIL1($P(XMREC,U,3))
"RTN","XMXUTIL4",76,0)
 I $P(XMREC,U,6)'="" D
"RTN","XMXUTIL4",77,0)
 . S @(XMTROOT_XMCNT_",""STATUS"")")=$P(XMREC,U,6)
"RTN","XMXUTIL4",78,0)
 Q
"RTN","XMXUTIL4",79,0)
FWD(XMZ,XMIEN) ;
"RTN","XMXUTIL4",80,0)
 Q:'$D(^XMB(3.9,XMZ,1,XMIEN,"F"))
"RTN","XMXUTIL4",81,0)
 N XMFWDBY
"RTN","XMXUTIL4",82,0)
 S XMFWDBY=^XMB(3.9,XMZ,1,XMIEN,"F")
"RTN","XMXUTIL4",83,0)
 I $P(XMFWDBY,U,2) S @(XMTROOT_XMCNT_",""FWD BY DUZ"")")=$P(XMFWDBY,U,2)
"RTN","XMXUTIL4",84,0)
 S XMFWDBY=$P(XMFWDBY,U)
"RTN","XMXUTIL4",85,0)
 I $E(XMFWDBY)?1A!($E(XMFWDBY)="<") D  Q
"RTN","XMXUTIL4",86,0)
 . N XMLEN
"RTN","XMXUTIL4",87,0)
 . S XMLEN=$L(XMFWDBY," ")
"RTN","XMXUTIL4",88,0)
 . S @(XMTROOT_XMCNT_",""FWD BY"")")=$P(XMFWDBY," ",1,XMLEN-4)
"RTN","XMXUTIL4",89,0)
 . S @(XMTROOT_XMCNT_",""FWD ON"")")=$P(XMFWDBY," ",XMLEN-3,XMLEN)
"RTN","XMXUTIL4",90,0)
 I $E(XMFWDBY)?1N!($E(XMFWDBY)=".") D  Q
"RTN","XMXUTIL4",91,0)
 . N XMLEN
"RTN","XMXUTIL4",92,0)
 . S XMFWDBY=$$NAME^XMXUTIL(+XMFWDBY)_" "_$P(XMFWDBY," ",2,99)
"RTN","XMXUTIL4",93,0)
 . S XMLEN=$L(XMFWDBY," ")
"RTN","XMXUTIL4",94,0)
 . S @(XMTROOT_XMCNT_",""FWD BY"")")=$P(XMFWDBY," ",1,XMLEN-4)
"RTN","XMXUTIL4",95,0)
 . S @(XMTROOT_XMCNT_",""FWD ON"")")=$P(XMFWDBY," ",XMLEN-3,XMLEN)
"RTN","XMXUTIL4",96,0)
 S @(XMTROOT_XMCNT_",""FWD ON"")")=$E(XMFWDBY,2,99)
"RTN","XMXUTIL4",97,0)
 Q
"RTN","XMXUTIL4",98,0)
QFIND(XMZ,XMFLAGS,XMFIND,XMTROOT,XMCNT) ; find them
"RTN","XMXUTIL4",99,0)
 N XMXREF
"RTN","XMXUTIL4",100,0)
 S XMCNT=0
"RTN","XMXUTIL4",101,0)
 S XMXREF="B"
"RTN","XMXUTIL4",102,0)
 S:$D(^VA(200,"BB")) XMXREF=XMXREF_"^BB"
"RTN","XMXUTIL4",103,0)
 S:$D(^VA(200,"C")) XMXREF=XMXREF_"^C"
"RTN","XMXUTIL4",104,0)
 S:$D(^VA(200,"D")) XMXREF=XMXREF_"^D"
"RTN","XMXUTIL4",105,0)
 D FIND^DIC(200,"","","A",XMFIND,"",XMXREF,"I $D(^XMB(3.9,XMZ,1,""C"",+Y))")
"RTN","XMXUTIL4",106,0)
 I '$D(DIERR) D MOVE(200,XMZ,XMFLAGS,XMTROOT,.XMCNT)
"RTN","XMXUTIL4",107,0)
 Q:$O(^XMB(3.9,XMZ,1,"C",":"))=""  ; Quit if there aren't any non-local addressees
"RTN","XMXUTIL4",108,0)
 N XMSCREEN
"RTN","XMXUTIL4",109,0)
 S XMSCREEN=$S(+XMFIND=XMFIND:"I '$D(^XMB(3.9,XMZ,1,""C"",XMFIND))",1:"")
"RTN","XMXUTIL4",110,0)
 D FIND^DIC(3.91,","_XMZ_",","","C",XMFIND,"","C",XMSCREEN)
"RTN","XMXUTIL4",111,0)
 I '$D(DIERR) D MOVE(3.91,XMZ,XMFLAGS,XMTROOT,.XMCNT)
"RTN","XMXUTIL4",112,0)
 Q:"ABCDEFGHIJKLMNOPQRSTUVWXYZ"'[$E(XMFIND)  ; Quit if the search string does not begin with an upper case letter
"RTN","XMXUTIL4",113,0)
 Q:$O(^XMB(3.9,XMZ,1,"C","`"))=""  ; Quit if there aren't any lower case addressees
"RTN","XMXUTIL4",114,0)
 ; FM will translate lower case to upper case in its search, but won't
"RTN","XMXUTIL4",115,0)
 ; translate upper to lower, so we do it here.
"RTN","XMXUTIL4",116,0)
 S XMSCREEN="I ^(0)]""`""" ; Limit search to lower case addresses
"RTN","XMXUTIL4",117,0)
 D FIND^DIC(3.91,","_XMZ_",","","C",$$LOW^XLFSTR(XMFIND),"","C",XMSCREEN)
"RTN","XMXUTIL4",118,0)
 I '$D(DIERR) D MOVE(3.91,XMZ,XMFLAGS,XMTROOT,.XMCNT)
"RTN","XMXUTIL4",119,0)
 Q
"RTN","XMXUTIL4",120,0)
MOVE(XMFILE,XMZ,XMFLAGS,XMTROOT,XMCNT) ; move search results
"RTN","XMXUTIL4",121,0)
 N I,XMIEN,XMREC,XMNAME
"RTN","XMXUTIL4",122,0)
 S I=0
"RTN","XMXUTIL4",123,0)
 F  S I=$O(^TMP("DILIST",$J,1,I)) Q:I=""  D
"RTN","XMXUTIL4",124,0)
 . S XMIEN=^TMP("DILIST",$J,2,I)
"RTN","XMXUTIL4",125,0)
 . I XMFILE=200 D
"RTN","XMXUTIL4",126,0)
 . . S XMIEN=$O(^XMB(3.9,XMZ,1,"C",XMIEN,0))
"RTN","XMXUTIL4",127,0)
 . . S XMREC=$G(^XMB(3.9,XMZ,1,XMIEN,0))
"RTN","XMXUTIL4",128,0)
 . . S XMNAME=^TMP("DILIST",$J,1,I)
"RTN","XMXUTIL4",129,0)
 . E  D
"RTN","XMXUTIL4",130,0)
 . . S XMREC=$G(^XMB(3.9,XMZ,1,XMIEN,0))
"RTN","XMXUTIL4",131,0)
 . . S XMNAME=$P(XMREC,U,1)
"RTN","XMXUTIL4",132,0)
 . S XMCNT=XMCNT+1
"RTN","XMXUTIL4",133,0)
 . D QDFLDS(XMZ,XMFLAGS,XMIEN,XMREC,XMNAME,XMTROOT,XMCNT)
"RTN","XMXUTIL4",134,0)
 Q
"RTN","XMYMNEM")
0^229^B5824471
"RTN","XMYMNEM",1,0)
XMYMNEM ;(WASH ISC)/CAP - CONVERT MAILMAN HOST #'S TO MNEMONICS ;03/11/98  13:06
"RTN","XMYMNEM",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMYMNEM",3,0)
 W !!,"This process will change ALL your MAILMAN HOST fields in the domain file"
"RTN","XMYMNEM",4,0)
 W !,"to MNEMONICS.  This change will mean that from now on you will never"
"RTN","XMYMNEM",5,0)
 W !,"need to patch another MAILMAN HOST number.  The MNEMONICS will always"
"RTN","XMYMNEM",6,0)
 W !,"be adjusted for any changes in configurations on the IDCU.",!!
"RTN","XMYMNEM",7,0)
 W "You may have domains in your domain file that are not included in this"
"RTN","XMYMNEM",8,0)
 W !,"list.  You are responsible for maintaining the MAILMAN HOST numbers for"
"RTN","XMYMNEM",9,0)
 W !,"these yourself.  They are not part of the standard domain file.  Don't"
"RTN","XMYMNEM",10,0)
 W !,"worry the old numbers will still work.",!!
"RTN","XMYMNEM",11,0)
 S U="^" D NOW^%DTC S XMDT=$E(%,4,5)_"/"_$E(%,6,7)_"/"_$E(%,2,3),%=$P(%,".",2) I $L(%) S %=$E(%_"000",1,4),XMDT=XMDT_" @ "_$E(%,1,2)_":"_$E(%,3,4)
"RTN","XMYMNEM",12,0)
R R !,"OPTION: CHECK//",X:299 E  W !!,"<< Time out ! " G END
"RTN","XMYMNEM",13,0)
 I X["^" G OUT
"RTN","XMYMNEM",14,0)
 G HELP:X="?" I X="" S XMF0="CHECK" G GO
"RTN","XMYMNEM",15,0)
 X ^%ZOSF("UPPERCASE") S X=Y S %="CHECK^REAL-CONVERSION" F I=1:1:$L(%,U) I $E($P(%,U,I),1,$L(X))=X S XMF0=$P(%,U,I) W $E(XMF0,$L(X)+1,99) G GO
"RTN","XMYMNEM",16,0)
HELP W !!,"Choose either CHECK or REAL CONVERSION",! G R
"RTN","XMYMNEM",17,0)
GO ;
"RTN","XMYMNEM",18,0)
 K %ZIS S %ZIS="Q"
"RTN","XMYMNEM",19,0)
 S ZTSAVE("XMF0")="",ZTSAVE("XMU")="",ZTSAVE("XMP")="",ZTSAVE("XMDT")=""
"RTN","XMYMNEM",20,0)
 D EN^XUTMDEVQ("ZTSK^XMYMNEM",XMF0_" MailMan Host Conversion",.ZTSAVE,.%ZIS)
"RTN","XMYMNEM",21,0)
 G KILL
"RTN","XMYMNEM",22,0)
ZTSK U IO K ^TMP($J) D DT^DICRW S XMA=0,XMPG=0 D ^XMYMNEM1,^XMYMNEM2 W !!,"WORKING",!! S XMD(1)=XMA,XMA=0
"RTN","XMYMNEM",23,0)
 G ^XMYMNEM0
"RTN","XMYMNEM",24,0)
OUT I X["^" W !!,"<< User requested Abort "
"RTN","XMYMNEM",25,0)
END W "Process aborted >>",!!,*7 G KILL
"RTN","XMYMNEM",26,0)
KILL K %,%0,I,X,Y,XMA,XMB,XMC,XMD,XMDT,XME,XMF,XMF0,XMP,XMPG,XMS,XMU
"RTN","XMYMNEM",27,0)
 K ZTUCI,ZTDTH,ZTSAVE,ZTRTN,ZTDESC,ZTIO,ZTSK
"RTN","XMYMNEM",28,0)
 Q
"RTN","XMYPOST2")
0^137^B21446425
"RTN","XMYPOST2",1,0)
XMYPOST2 ;(WASH ISC)/CAP-XM POST INIT ;03/12/98  13:07
"RTN","XMYPOST2",2,0)
 ;;7.1;MailMan;**49,50**;Jun 02, 1994
"RTN","XMYPOST2",3,0)
 ; Entry points used by MailMan options (not covered by DBIA):
"RTN","XMYPOST2",4,0)
 ; KSP      XMCHRIS - Edit MailMan Site Parameters
"RTN","XMYPOST2",5,0)
POST ;VERSION 3.1 POST INIT
"RTN","XMYPOST2",6,0)
 ;
"RTN","XMYPOST2",7,0)
KSP ;Set up/Change MailMan Site Parameters
"RTN","XMYPOST2",8,0)
 N XMREC,XMABORT
"RTN","XMYPOST2",9,0)
 S XMABORT=0
"RTN","XMYPOST2",10,0)
 S XMREC=$G(^XMB(1,1,0)) I '+XMREC,$O(^XMB(1,0)) G E
"RTN","XMYPOST2",11,0)
 I XMREC="" D
"RTN","XMYPOST2",12,0)
 . D INIT
"RTN","XMYPOST2",13,0)
 E  D
"RTN","XMYPOST2",14,0)
 . D CHANGE
"RTN","XMYPOST2",15,0)
 Q:XMABORT
"RTN","XMYPOST2",16,0)
 D PARENT
"RTN","XMYPOST2",17,0)
 D SCRIPT
"RTN","XMYPOST2",18,0)
 G Q
"RTN","XMYPOST2",19,0)
INIT ; Initial Christening
"RTN","XMYPOST2",20,0)
 N DIC,DIE,Y,DA,XMFDA
"RTN","XMYPOST2",21,0)
 S DIC=4.2,DIC(0)="AEMQ"
"RTN","XMYPOST2",22,0)
 D ^DIC I Y<1 S XMABORT=1 D E1 Q
"RTN","XMYPOST2",23,0)
 S XMFDA(4.3,"+1,",.01)=+Y
"RTN","XMYPOST2",24,0)
 D UPDATE^DIE("","XMFDA")
"RTN","XMYPOST2",25,0)
 K DIC,Y
"RTN","XMYPOST2",26,0)
 S DR="3//FORUM.VA.GOV;1//EST"
"RTN","XMYPOST2",27,0)
 S DIE=4.3,DA=1
"RTN","XMYPOST2",28,0)
 D ^DIE I $D(Y) S XMABORT=1 D E1
"RTN","XMYPOST2",29,0)
 Q
"RTN","XMYPOST2",30,0)
CHANGE ;
"RTN","XMYPOST2",31,0)
 N XMSITE,DIE,DA,DR,DIC,X,Y
"RTN","XMYPOST2",32,0)
 S XMSITE=$S($D(^XMB("NETNAME")):^XMB("NETNAME"),$D(^XMB("NAME")):^XMB("NAME"),$D(^DIC(4.2,+XMREC,0)):$P(^(0),U),1:XMREC)
"RTN","XMYPOST2",33,0)
 I '$$SURE(XMSITE) S XMABORT=1 Q  ; Are you sure?
"RTN","XMYPOST2",34,0)
 S DIC=4.2,DIC(0)="AEMQ",DIC("B")=$S($D(^DIC(4.2,+XMREC,0)):$P(^(0),U),1:XMSITE)
"RTN","XMYPOST2",35,0)
 D ^DIC I Y=-1 S XMABORT=1 Q
"RTN","XMYPOST2",36,0)
 I XMSITE'=$P(Y,U,2) D
"RTN","XMYPOST2",37,0)
 . I +Y=^XMB("NUM") D
"RTN","XMYPOST2",38,0)
 . . ; The domain name in file 4.2 has been changed.
"RTN","XMYPOST2",39,0)
 . . ; The pointer to file 4.2 has stayed the same.
"RTN","XMYPOST2",40,0)
 . . ; The filer won't fire the xrefs, so we need to do it manually
"RTN","XMYPOST2",41,0)
 . . S (^XMB("NAME"),^XMB("NETNAME"))=$P(Y,U,2)
"RTN","XMYPOST2",42,0)
 . E  D
"RTN","XMYPOST2",43,0)
 . . N XMFDA
"RTN","XMYPOST2",44,0)
 . . S XMFDA(4.3,"1,",.01)=+Y
"RTN","XMYPOST2",45,0)
 . . D FILE^DIE("","XMFDA")
"RTN","XMYPOST2",46,0)
 . W !!,"The domain name for this facility is now: ",^XMB("NAME")
"RTN","XMYPOST2",47,0)
 E  D
"RTN","XMYPOST2",48,0)
 . W !!,"The domain name for this facility remains: ",^XMB("NAME")
"RTN","XMYPOST2",49,0)
 K DIC,Y
"RTN","XMYPOST2",50,0)
 S DR="3//FORUM.VA.GOV;1//EST"
"RTN","XMYPOST2",51,0)
 S DIE=4.3,DA=1
"RTN","XMYPOST2",52,0)
 D ^DIE
"RTN","XMYPOST2",53,0)
 Q
"RTN","XMYPOST2",54,0)
SURE(XMSITE) ;  Function returns 1 if sure; 0 if not
"RTN","XMYPOST2",55,0)
 N DIR,X,Y
"RTN","XMYPOST2",56,0)
 W !!!,"         * * * *  WARNING  * * * *"
"RTN","XMYPOST2",57,0)
 W !!,"You are about to change the domain name of this facility"
"RTN","XMYPOST2",58,0)
 W !,"in the MailMan Site Parameters file."
"RTN","XMYPOST2",59,0)
 W !!,"Currently, this facility is named: ",XMSITE
"RTN","XMYPOST2",60,0)
 W !!,"You must be extremely sure before you proceed!",!
"RTN","XMYPOST2",61,0)
 S DIR("A")="Are you sure you want to change the name of this facility"
"RTN","XMYPOST2",62,0)
 S DIR("B")="NO"
"RTN","XMYPOST2",63,0)
 S DIR(0)="Y"
"RTN","XMYPOST2",64,0)
 D ^DIR Q:Y 1  ; Sure do!
"RTN","XMYPOST2",65,0)
 Q 0  ; Nope, I'm not sure!
"RTN","XMYPOST2",66,0)
PARENT ;
"RTN","XMYPOST2",67,0)
 N XMPARENT
"RTN","XMYPOST2",68,0)
 S XMPARENT=+$G(^XMB("PARENT"))
"RTN","XMYPOST2",69,0)
 I XMPARENT S XMPARENT=$S($D(^DIC(4.2,XMPARENT,0)):$P(^(0),U),1:0)
"RTN","XMYPOST2",70,0)
 I XMPARENT'=0 D
"RTN","XMYPOST2",71,0)
 . W !!,XMPARENT," has been initialized as your 'parent' domain."
"RTN","XMYPOST2",72,0)
 . W !,"(Forum is usually the parent domain, unless this is a subordinate domain.)"
"RTN","XMYPOST2",73,0)
 . W !!,"You may edit the MailMan Site Parameter file to change your parent domain."
"RTN","XMYPOST2",74,0)
 E  D
"RTN","XMYPOST2",75,0)
 . W !!,*7,"*** YOUR PARENT DOMAIN HAS NOT BEEN INITIALIZED !!! ***"
"RTN","XMYPOST2",76,0)
 . W !!,"You MUST edit the MailMan Site Parameter file to ENTER your parent domain."
"RTN","XMYPOST2",77,0)
 Q
"RTN","XMYPOST2",78,0)
SCRIPT ;RESET AUSTIN SCRIPT
"RTN","XMYPOST2",79,0)
 ;G SCRIPT^XMYPDOM
"RTN","XMYPOST2",80,0)
 W !!,"We will not initialize your transmission scripts."
"RTN","XMYPOST2",81,0)
 Q
"RTN","XMYPOST2",82,0)
Q W !!,"Use the 'Subroutine editor' option under network management menu to add your"
"RTN","XMYPOST2",83,0)
 W !,"site passwords to the MINIENGINE script, and the 'Edit a script' option"
"RTN","XMYPOST2",84,0)
 W !,"to edit any domain scripts that you choose to."
"RTN","XMYPOST2",85,0)
 ;D ^XMYPDOM
"RTN","XMYPOST2",86,0)
 Q
"RTN","XMYPOST2",87,0)
PMB S Y=Y+1000,^XMB(3.7,.5,2,+Y,1,0)=^TMP("XM",I,1,0),^XMB(3.7,.5,2,"B",$E($P(Y(0),U,1),1,30),+Y)="",^XMB(3.7,.5,2,+Y,0)=$P(Y(0),U)
"RTN","XMYPOST2",88,0)
 F J=0:0 S J=$O(^TMP("XM",I,1,J)) Q:J'>0  S ^XMB(3.7,.5,2,+Y,1,J,0)=J W "."
"RTN","XMYPOST2",89,0)
 Q
"RTN","XMYPOST2",90,0)
E W *7,!!,"There is a FILE INTEGRITY problem in your MailMan Site Parameters file",!,"There should only be one entry and that entry should be entry number 1.",!
"RTN","XMYPOST2",91,0)
E1 W *7,!,"Your MailMan site parameters MUST be reviewed."
"RTN","XMYPOST2",92,0)
EQ W !!,"Then you can finish the INIT by executing POST^XMYPOST.",! Q
"RTN","XMYPOST2",93,0)
E2 W *7,!,"You do not yet have an entry in your MailMan Site Parameters File",!,"Use FileMan to make an entry." G EQ
"RTN","XMYPOST9")
0^225^B23416692
"RTN","XMYPOST9",1,0)
XMYPOST9 ;SFISC/GMB - Post-patch stuff ;06/14/99  16:41
"RTN","XMYPOST9",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMYPOST9",3,0)
ENTER ;
"RTN","XMYPOST9",4,0)
 D XREFS
"RTN","XMYPOST9",5,0)
 D AIXREF^XMYPRE2
"RTN","XMYPOST9",6,0)
 D:$D(^XMBPOST("POST")) POST^XMYPRE2
"RTN","XMYPOST9",7,0)
 D MEDSYN^XMYPOSTA
"RTN","XMYPOST9",8,0)
 Q:$D(^XMB(1,1,.17))
"RTN","XMYPOST9",9,0)
 D SITE1
"RTN","XMYPOST9",10,0)
 D MESSAGE
"RTN","XMYPOST9",11,0)
 D SITE2
"RTN","XMYPOST9",12,0)
 Q
"RTN","XMYPOST9",13,0)
XREFS ;
"RTN","XMYPOST9",14,0)
 D BMES^XPDUTL("Fire xrefs on 'timezone' field of the MailMan site parms file.")
"RTN","XMYPOST9",15,0)
 N DIK,DA
"RTN","XMYPOST9",16,0)
 S DIK="^XMB(1,"
"RTN","XMYPOST9",17,0)
 S DA=1
"RTN","XMYPOST9",18,0)
 S DIK(1)=1
"RTN","XMYPOST9",19,0)
 D EN1^DIK
"RTN","XMYPOST9",20,0)
 Q
"RTN","XMYPOST9",21,0)
MESSAGE ;
"RTN","XMYPOST9",22,0)
 N XMZ,XMCNT,XMZREC,XMCRE8,XMPREV,XPDIDTOT,XMNOSUBJ
"RTN","XMYPOST9",23,0)
 S XPDIDTOT=0
"RTN","XMYPOST9",24,0)
 D UPDATE^XPDID(0)
"RTN","XMYPOST9",25,0)
 S XPDIDTOT=$P(^XMB(3.9,0),U,4)
"RTN","XMYPOST9",26,0)
 D BMES^XPDUTL("Check "_XPDIDTOT_" messages in ^XMB(3.9, MESSAGE file...")
"RTN","XMYPOST9",27,0)
 D MES^XPDUTL("and set local create date and xref for each message...")
"RTN","XMYPOST9",28,0)
 S XMNOSUBJ=$$EZBLD^DIALOG(34012)
"RTN","XMYPOST9",29,0)
 S XMPREV=DT
"RTN","XMYPOST9",30,0)
 S (XMZ,XMCNT)=0
"RTN","XMYPOST9",31,0)
 F  S XMZ=$O(^XMB(3.9,XMZ)) Q:XMZ'>0  D
"RTN","XMYPOST9",32,0)
 . S XMCNT=XMCNT+1
"RTN","XMYPOST9",33,0)
 . I XMCNT#1000=0 D UPDATE^XPDID(XMCNT)
"RTN","XMYPOST9",34,0)
 . S XMZREC=$G(^XMB(3.9,XMZ,0))
"RTN","XMYPOST9",35,0)
 . D RESP(XMZ,XMZREC,XMNOSUBJ)
"RTN","XMYPOST9",36,0)
 . D CRE8DT(XMZ,$P(XMZREC,U,3),.XMPREV)
"RTN","XMYPOST9",37,0)
 D UPDATE^XPDID(XMCNT)
"RTN","XMYPOST9",38,0)
 D BMES^XPDUTL(XMCNT_" messages in ^XMB(3.9, MESSAGE file.")
"RTN","XMYPOST9",39,0)
 I XMCNT=$P(^XMB(3.9,0),U,4) Q
"RTN","XMYPOST9",40,0)
 D MES^XPDUTL("Changing the count in the zero node in ^XMB(3.9 from "_$P(^XMB(3.9,0),U,4)_" to "_XMCNT_".")
"RTN","XMYPOST9",41,0)
 L +^XMB(3.9,0)
"RTN","XMYPOST9",42,0)
 S $P(^XMB(3.9,0),U,4)=XMCNT
"RTN","XMYPOST9",43,0)
 L -^XMB(3.9,0)
"RTN","XMYPOST9",44,0)
 Q
"RTN","XMYPOST9",45,0)
RESP(XMZ,XMZREC,XMNOSUBJ) ;
"RTN","XMYPOST9",46,0)
 N XMZO
"RTN","XMYPOST9",47,0)
 I $P(XMZREC,U,8) D  Q
"RTN","XMYPOST9",48,0)
 . S XMZO=$P(XMZREC,U,8)
"RTN","XMYPOST9",49,0)
 . I XMZO=XMZ D  Q
"RTN","XMYPOST9",50,0)
 . . ;D ERR(XMZ,"Message thinks it's a response to itself: fixed")
"RTN","XMYPOST9",51,0)
 . . S $P(^XMB(3.9,XMZ,0),U,8)=""
"RTN","XMYPOST9",52,0)
 . I '$D(^XMB(3.9,XMZO,0)) D  Q
"RTN","XMYPOST9",53,0)
 . . ;D ERR(XMZ,"No original message "_XMZO_" for this response: fixed")
"RTN","XMYPOST9",54,0)
 . . S $P(^XMB(3.9,XMZ,0),U,8)=""
"RTN","XMYPOST9",55,0)
 . I $$ATTACHED(XMZO,XMZ) Q
"RTN","XMYPOST9",56,0)
 . ;D ERR(XMZ,"Not in response chain of "_XMZO_": fixed")
"RTN","XMYPOST9",57,0)
 . S $P(^XMB(3.9,XMZ,0),U,8)=""
"RTN","XMYPOST9",58,0)
 N XMSUBJ
"RTN","XMYPOST9",59,0)
 S XMSUBJ=$P(XMZREC,U)
"RTN","XMYPOST9",60,0)
 I XMSUBJ="" D  Q
"RTN","XMYPOST9",61,0)
 . S $P(^XMB(3.9,XMZ,0),U,1)=XMNOSUBJ
"RTN","XMYPOST9",62,0)
 . S ^XMB(3.9,"B",XMNOSUBJ,XMZ)=""
"RTN","XMYPOST9",63,0)
 Q:XMSUBJ'?1"R"1.N
"RTN","XMYPOST9",64,0)
 Q:$P(XMZREC,U,2)["@"
"RTN","XMYPOST9",65,0)
 S XMZO=+$E(XMSUBJ,2,99)
"RTN","XMYPOST9",66,0)
 I '$D(^XMB(3.9,XMZO,0)) D  Q
"RTN","XMYPOST9",67,0)
 . ;D ERR(XMZ,"No original message "_XMZO_" for this response: not fixed")
"RTN","XMYPOST9",68,0)
 I '$$ATTACHED(XMZO,XMZ) D  Q
"RTN","XMYPOST9",69,0)
 . ;D ERR(XMZ,"Not in response chain of "_XMZO_": not fixed")
"RTN","XMYPOST9",70,0)
 ;D ERR(XMZ,"Piece 8 didn't point to original message "_XMZO_": fixed")
"RTN","XMYPOST9",71,0)
 S $P(^XMB(3.9,XMZ,0),U,8)=XMZO
"RTN","XMYPOST9",72,0)
 Q
"RTN","XMYPOST9",73,0)
ATTACHED(XMZO,XMZ) ; Is XMZ in the response chain of XMZO?
"RTN","XMYPOST9",74,0)
 N I
"RTN","XMYPOST9",75,0)
 S I=0
"RTN","XMYPOST9",76,0)
 F  S I=$O(^XMB(3.9,XMZO,3,I)) Q:'I  Q:$P($G(^(I,0)),U)=XMZ
"RTN","XMYPOST9",77,0)
 Q +I
"RTN","XMYPOST9",78,0)
CRE8DT(XMZ,XMDATE,XMPREV) ;
"RTN","XMYPOST9",79,0)
 S XMCRE8=$P($G(^XMB(3.9,XMZ,.6)),U,1)
"RTN","XMYPOST9",80,0)
 I 'XMCRE8 D  Q
"RTN","XMYPOST9",81,0)
 . I $P(XMDATE,".",1)?7N S XMDATE=$P(XMDATE,".",1)
"RTN","XMYPOST9",82,0)
 . E  I XMDATE="" S XMDATE=XMPREV
"RTN","XMYPOST9",83,0)
 . E  D
"RTN","XMYPOST9",84,0)
 . . S XMDATE=$$CONVERT^XMXUTIL1(XMDATE)
"RTN","XMYPOST9",85,0)
 . . S:XMDATE=-1 XMDATE=XMPREV
"RTN","XMYPOST9",86,0)
 . S ^XMB(3.9,XMZ,.6)=XMDATE
"RTN","XMYPOST9",87,0)
 . S ^XMB(3.9,"C",XMDATE,XMZ)=""
"RTN","XMYPOST9",88,0)
 . S XMPREV=XMDATE
"RTN","XMYPOST9",89,0)
 . ;D ERR(XMZ,"Msg has no local create date: fixed")
"RTN","XMYPOST9",90,0)
 S XMPREV=XMDATE
"RTN","XMYPOST9",91,0)
 I '$D(^XMB(3.9,"C",XMCRE8,XMZ)) D
"RTN","XMYPOST9",92,0)
 . S ^XMB(3.9,"C",XMCRE8,XMZ)=""
"RTN","XMYPOST9",93,0)
 . ;D ERR(XMZ,"Local create date C xref missing: fixed")
"RTN","XMYPOST9",94,0)
 Q
"RTN","XMYPOST9",95,0)
ERR(XMZ,XMERRMSG) ;
"RTN","XMYPOST9",96,0)
 D MES^XPDUTL("Msg="_XMZ_" "_XMERRMSG)
"RTN","XMYPOST9",97,0)
 Q
"RTN","XMYPOST9",98,0)
SITE1 ;
"RTN","XMYPOST9",99,0)
 Q:$D(^XMB(1,1,.17))
"RTN","XMYPOST9",100,0)
 D BMES^XPDUTL("Change message number references to date references in 4.3, MM Site Parms.")
"RTN","XMYPOST9",101,0)
 ; file 4.3, field 4.301
"RTN","XMYPOST9",102,0)
 I $P($G(^XMB(1,1,.14)),U,1) S $P(^XMB(1,1,.14),U,1)=""
"RTN","XMYPOST9",103,0)
 ; file 4.3, field 4.304
"RTN","XMYPOST9",104,0)
 N XMMSGS
"RTN","XMYPOST9",105,0)
 S XMMSGS=+$P($G(^XMB(1,1,"NOTOPURGE")),U)
"RTN","XMYPOST9",106,0)
 I XMMSGS D
"RTN","XMYPOST9",107,0)
 . N XMZ,XMCRE8,XMDAYS
"RTN","XMYPOST9",108,0)
 . S XMZ=$O(^XMB(3.9,$O(^XMB(3.9,":"),-1)-XMMSGS))
"RTN","XMYPOST9",109,0)
 . F  Q:$P($G(^XMB(3.9,XMZ,0)),U,3)?7N.E  S XMZ=$O(^XMB(3.9,XMZ)) Q:'XMZ
"RTN","XMYPOST9",110,0)
 . S XMCRE8=$$CONVERT^XMXUTIL1($E($P(^XMB(3.9,XMZ,0),U,3),1,7))
"RTN","XMYPOST9",111,0)
 . S XMDAYS=$$FMDIFF^XLFDT(DT,XMCRE8)
"RTN","XMYPOST9",112,0)
 . I XMDAYS>999 S XMDAYS=999
"RTN","XMYPOST9",113,0)
 . I XMDAYS<30 S XMDAYS=30
"RTN","XMYPOST9",114,0)
 . S $P(^XMB(1,1,"NOTOPURGE"),U)=XMDAYS
"RTN","XMYPOST9",115,0)
 ; file 4.3, field 17.1
"RTN","XMYPOST9",116,0)
 N XMDIGS
"RTN","XMYPOST9",117,0)
 S XMDIGS=$L($O(^XMB(3.9,":"),-1))
"RTN","XMYPOST9",118,0)
 I XMDIGS>14 S XMDIGS=14
"RTN","XMYPOST9",119,0)
 I XMDIGS<7 S XMDIGS=7
"RTN","XMYPOST9",120,0)
 S ^XMB(1,1,.17)=XMDIGS
"RTN","XMYPOST9",121,0)
 Q
"RTN","XMYPOST9",122,0)
SITE2 ;
"RTN","XMYPOST9",123,0)
 D BMES^XPDUTL("Change message number references to date references in 3.7, Mailbox file.")
"RTN","XMYPOST9",124,0)
 ; file 3.7, field 1.2
"RTN","XMYPOST9",125,0)
 N XMDUZ,XMZ,XMMIN,XMCRE8
"RTN","XMYPOST9",126,0)
 S XMMIN=$O(^XMB(3.9,0))
"RTN","XMYPOST9",127,0)
 S XMDUZ=0
"RTN","XMYPOST9",128,0)
 F  S XMDUZ=$O(^XMB(3.7,XMDUZ)) Q:'XMDUZ  D
"RTN","XMYPOST9",129,0)
 . S XMZ=$P($G(^XMB(3.7,XMDUZ,0)),U,7)
"RTN","XMYPOST9",130,0)
 . Q:'XMZ
"RTN","XMYPOST9",131,0)
 . I XMZ<XMMIN S $P(^XMB(3.7,XMDUZ,0),U,7)="" Q
"RTN","XMYPOST9",132,0)
 . I '$D(^XMB(3.9,XMZ)) S XMZ=$O(^XMB(3.9,XMZ))
"RTN","XMYPOST9",133,0)
 . S XMCRE8=$P($G(^XMB(3.9,XMZ,.6)),U,1)
"RTN","XMYPOST9",134,0)
 . S $P(^XMB(3.7,XMDUZ,0),U,7)=XMCRE8
"RTN","XMYPOST9",135,0)
 Q
"RTN","XMYPOST9",136,0)
 ;
"RTN","XMYPOST9",137,0)
 ;#34012 = * No Subject *
"RTN","XMYPOSTA")
0^266^B8944384
"RTN","XMYPOSTA",1,0)
XMYPOSTA ;SFISC/GMB - Post-patch stuff ;07/06/99  07:01
"RTN","XMYPOSTA",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMYPOSTA",3,0)
MEDSYN ;
"RTN","XMYPOSTA",4,0)
 D INIT
"RTN","XMYPOSTA",5,0)
 D SYNONYM^XMUDNC
"RTN","XMYPOSTA",6,0)
 Q
"RTN","XMYPOSTA",7,0)
INIT ; Load table into global
"RTN","XMYPOSTA",8,0)
 N DIK,I,X
"RTN","XMYPOSTA",9,0)
 K ^DOPT("XMSYN",$J)
"RTN","XMYPOSTA",10,0)
 S DIK="^DOPT(""XMSYN"",$J,"
"RTN","XMYPOSTA",11,0)
 S ^DOPT("XMSYN",$J,0)="Domain Synonyms^1N^"
"RTN","XMYPOSTA",12,0)
 F I=1:1 S X=$T(T+I) Q:X=" ;;"  S ^DOPT("XMSYN",$J,I,0)=$E(X,4,255)
"RTN","XMYPOSTA",13,0)
 D IXALL^DIK
"RTN","XMYPOSTA",14,0)
 Q
"RTN","XMYPOSTA",15,0)
T ;;current site name^new site name
"RTN","XMYPOSTA",16,0)
 ;;ALLEN-PARK.VA.GOV^DETROIT.MED.VA.GOV
"RTN","XMYPOSTA",17,0)
 ;;AMARILLO.VA.GOV
"RTN","XMYPOSTA",18,0)
 ;;BATH.VA.GOV
"RTN","XMYPOSTA",19,0)
 ;;BATTLE-CREEK.VA.GOV
"RTN","XMYPOSTA",20,0)
 ;;BECKLEY.VA.GOV
"RTN","XMYPOSTA",21,0)
 ;;BILOXI.VA.GOV
"RTN","XMYPOSTA",22,0)
 ;;BONHAM.VA.GOV
"RTN","XMYPOSTA",23,0)
 ;;BOSTON.VA.GOV
"RTN","XMYPOSTA",24,0)
 ;;BROCKTON.VA.GOV
"RTN","XMYPOSTA",25,0)
 ;;BRONX.VA.GOV
"RTN","XMYPOSTA",26,0)
 ;;CHAMPVA.DENVER.VA.GOV^HAC.MED.VA.GOV
"RTN","XMYPOSTA",27,0)
 ;;CHEYENNE.VA.GOV
"RTN","XMYPOSTA",28,0)
 ;;CHICAGO-LAKE.VA.GOV
"RTN","XMYPOSTA",29,0)
 ;;CHICAGO-WEST.VA.GOV       
"RTN","XMYPOSTA",30,0)
 ;;CHILLICOTHE.VA.GOV
"RTN","XMYPOSTA",31,0)
 ;;CLEVELAND.VA.GOV
"RTN","XMYPOSTA",32,0)
 ;;COLUMBIA-MO.VA.GOV
"RTN","XMYPOSTA",33,0)
 ;;COLUMBUS.VA.GOV
"RTN","XMYPOSTA",34,0)
 ;;DALLAS.VA.GOV
"RTN","XMYPOSTA",35,0)
 ;;DANVILLE.VA.GOV
"RTN","XMYPOSTA",36,0)
 ;;DAYTON.VA.GOV
"RTN","XMYPOSTA",37,0)
 ;;ERIE.VA.GOV
"RTN","XMYPOSTA",38,0)
 ;;FARGO.VA.GOV
"RTN","XMYPOSTA",39,0)
 ;;FAYETTVL-AR.VA.GOV
"RTN","XMYPOSTA",40,0)
 ;;FAYETTVL-NC.VA.GOV
"RTN","XMYPOSTA",41,0)
 ;;FORT-MEADE.VA.GOV^BLACK-HILLS.MED.VA.GOV
"RTN","XMYPOSTA",42,0)
 ;;FT-HARRISON.VA.GOV^MONTANA.MED.VA.GOV
"RTN","XMYPOSTA",43,0)
 ;;GAINESVILLE.VA.GOV^NORTH-FLORIDA.MED.VA.GOV
"RTN","XMYPOSTA",44,0)
 ;;GRAND-ISLAND.VA.GOV
"RTN","XMYPOSTA",45,0)
 ;;HAMPTON.VA.GOV
"RTN","XMYPOSTA",46,0)
 ;;HOT-SPRINGS.VA.GOV
"RTN","XMYPOSTA",47,0)
 ;;HUNTINGTON.VA.GOV
"RTN","XMYPOSTA",48,0)
 ;;IMMUNOLOGY.VA.GOV
"RTN","XMYPOSTA",49,0)
 ;;IOWA-CITY.VA.GOV
"RTN","XMYPOSTA",50,0)
 ;;IRON-MTN.VA.GOV
"RTN","XMYPOSTA",51,0)
 ;;ISC-ALBANY.VA.GOV^CIOFO-ALBANY.MED.VA.GOV
"RTN","XMYPOSTA",52,0)
 ;;ISC-BAYPINES.VA.GOV^CIOFO-BAYPINES.MED.VA.GOV
"RTN","XMYPOSTA",53,0)
 ;;ISC-BIRM.VA.GOV^CIOFO-BIRM.MED.VA.GOV
"RTN","XMYPOSTA",54,0)
 ;;ISC-CHICAGO.VA.GOV^CIOFO-HINES.MED.VA.GOV
"RTN","XMYPOSTA",55,0)
 ;;ISC-DALLAS.VA.GOV^CIOFO-DALLAS.MED.VA.GOV
"RTN","XMYPOSTA",56,0)
 ;;ISC-SF.VA.GOV^CIOFO-SF.MED.VA.GOV
"RTN","XMYPOSTA",57,0)
 ;;ISC-SLC.VA.GOV^CIOFO-SLC.MED.VA.GOV
"RTN","XMYPOSTA",58,0)
 ;;ISC-WASH.VA.GOV^CIOFO-WASH.MED.VA.GOV
"RTN","XMYPOSTA",59,0)
 ;;JACKSON.VA.GOV
"RTN","XMYPOSTA",60,0)
 ;;KANSAS-CITY.VA.GOV
"RTN","XMYPOSTA",61,0)
 ;;LEBANON.VA.GOV
"RTN","XMYPOSTA",62,0)
 ;;LEXINGTON.VA.GOV
"RTN","XMYPOSTA",63,0)
 ;;LINCOLN.VA.GOV
"RTN","XMYPOSTA",64,0)
 ;;MANCHESTER.VA.GOV
"RTN","XMYPOSTA",65,0)
 ;;MARION-IL.VA.GOV
"RTN","XMYPOSTA",66,0)
 ;;MARION-IN.VA.GOV^NORTHERN-INDIANA.MED.VA.GOV
"RTN","XMYPOSTA",67,0)
 ;;MARTINEZ.VA.GOV
"RTN","XMYPOSTA",68,0)
 ;;MIAMI.VA.GOV
"RTN","XMYPOSTA",69,0)
 ;;MILES-CITY.VA.GOV
"RTN","XMYPOSTA",70,0)
 ;;MILWAUKEE.VA.GOV
"RTN","XMYPOSTA",71,0)
 ;;MTN-HOME.VA.GOV
"RTN","XMYPOSTA",72,0)
 ;;N-CHICAGO.VA.GOV
"RTN","XMYPOSTA",73,0)
 ;;NASHVILLE.VA.GOV
"RTN","XMYPOSTA",74,0)
 ;;NEW-ORLEANS.VA.GOV
"RTN","XMYPOSTA",75,0)
 ;;NORTHPORT.VA.GOV
"RTN","XMYPOSTA",76,0)
 ;;PHILADELPHIA.VA.GOV
"RTN","XMYPOSTA",77,0)
 ;;POPLAR-BLUFF.VA.GOV
"RTN","XMYPOSTA",78,0)
 ;;PORTLAND.VA.GOV
"RTN","XMYPOSTA",79,0)
 ;;PRESCOTT.VA.GOV
"RTN","XMYPOSTA",80,0)
 ;;RENO.VA.GOV
"RTN","XMYPOSTA",81,0)
 ;;RICHMOND.VA.GOV
"RTN","XMYPOSTA",82,0)
 ;;SAGINAW.VA.GOV
"RTN","XMYPOSTA",83,0)
 ;;SALISBURY.VA.GOV
"RTN","XMYPOSTA",84,0)
 ;;SAN-JUAN.VA.GOV
"RTN","XMYPOSTA",85,0)
 ;;SANFRANCISCO.VA.GOV
"RTN","XMYPOSTA",86,0)
 ;;SPOKANE.VA.GOV
"RTN","XMYPOSTA",87,0)
 ;;ST-CLOUD.VA.GOV
"RTN","XMYPOSTA",88,0)
 ;;TEMPLE.VA.GOV^CENTRAL-TEXAS.MED.VA.GOV
"RTN","XMYPOSTA",89,0)
 ;;TOMAH.VA.GOV
"RTN","XMYPOSTA",90,0)
 ;;TUCSON.VA.GOV
"RTN","XMYPOSTA",91,0)
 ;;WALLA-WALLA.VA.GOV
"RTN","XMYPOSTA",92,0)
 ;;WEST-PALM.VA.GOV
"RTN","XMYPOSTA",93,0)
 ;;WILMINGTON.VA.GOV
"RTN","XMYPOSTA",94,0)
 ;;
"RTN","XMYPRE")
0^142^B5884294
"RTN","XMYPRE",1,0)
XMYPRE ;(WASH ISC)/CAP-PREINSTALLATION INIT ;05/20/98  07:53
"RTN","XMYPRE",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMYPRE",3,0)
 I +^DD(3.5,0,"VR")<7 W !!,*7,"Kernel 7 or later must be installed !",!,"This seems to be [from ^DD(3.5,0,""VR"")]",!,"Kernel "_^("VR"),!! Q
"RTN","XMYPRE",4,0)
 S X=$S($D(^DD(3.7,0,"VR")):^("VR"),1:"") I $L(X),X\1<6 G B
"RTN","XMYPRE",5,0)
 ;
"RTN","XMYPRE",6,0)
 ;CHECK MAILMAN VERSION / QUIT-CONT
"RTN","XMYPRE",7,0)
 I $D(^XMB("POSTQUIT")) S $P(^XMB(1,1,0),U,16)=1 K ^XMB("POSTQUIT")
"RTN","XMYPRE",8,0)
 ;
"RTN","XMYPRE",9,0)
 S XMVER=$S($D(^DD(3.7,0,"VR")):^("VR"),1:"")
"RTN","XMYPRE",10,0)
 G CONT:XMVER="" I +XMVER D ALL:XMVER<3.2,DOM,DDK1,PRE G CONT
"RTN","XMYPRE",11,0)
 K DIFQ W !!,"<ERROR> XMYPRE+10^XMYPRE (MailMan pre-init) -- INIT ABORTED !",!!,"[ ^DD(3.7,0,""VR"") was defined & not equal to a previous MailMan version. ]",!!
"RTN","XMYPRE",12,0)
 Q
"RTN","XMYPRE",13,0)
ALL ;Data Dictionary clean up
"RTN","XMYPRE",14,0)
 ;Delete old Mailbox fields
"RTN","XMYPRE",15,0)
 I XMVER<4 F DA=23,24 S DIK="^DD(3.7,",DA(1)=3.7 D ^DIK
"RTN","XMYPRE",16,0)
 Q
"RTN","XMYPRE",17,0)
 ;Delete fields from Domain file (4.2) moved to file 4.2999
"RTN","XMYPRE",18,0)
DOM F DA=7:1:15,15.4,15.5,15.6,15.7,24,25 S DIK="^DD(4.2," D ^DIK
"RTN","XMYPRE",19,0)
 S DIU=4.25,DIU(0)="DS" D EN^DIU2 K DIU,DIK,DA
"RTN","XMYPRE",20,0)
 F %=0:0 S %=$O(^DIC(4.2,%)) Q:+%'=%  K ^DIC(4.2,%,3)
"RTN","XMYPRE",21,0)
 Q
"RTN","XMYPRE",22,0)
SET S ^(.95,0)="ARRIVING",^XMB(3.7,.5,2,"B","ARRIVING",.95)=""
"RTN","XMYPRE",23,0)
 Q
"RTN","XMYPRE",24,0)
DDK1 ;remove old file for Message Statistics
"RTN","XMYPRE",25,0)
 ;This was required only for Alpha/Beta Test sites of Kernel 7 and
"RTN","XMYPRE",26,0)
 ;should go away for Kernel 8.
"RTN","XMYPRE",27,0)
 S DIU=4.2999,DIU(0)="DEST" D EN^DIU2 Q
"RTN","XMYPRE",28,0)
 ;
"RTN","XMYPRE",29,0)
 ;The Postmaster is set up here, but it is by a call from XMYPOST
"RTN","XMYPRE",30,0)
 ;because in a virgin UCI the zero node of the 3.7 file is not yet there.
"RTN","XMYPRE",31,0)
PRE S X="POSTMASTER",Y=.5 D A S X="SHARED,MAIL",Y=.6 D A G P
"RTN","XMYPRE",32,0)
A Q:$D(^VA(200,Y,0))
"RTN","XMYPRE",33,0)
 W !!,"Creating an entry for the "_X_" in the NEW PERSON file (file 200)"
"RTN","XMYPRE",34,0)
 S %=^VA(200,0),$P(%,U,4)=$P(%,U,4)+1,^(0)=%,^(Y,0)=X_"^^;",^VA(200,"B",X,Y)=""
"RTN","XMYPRE",35,0)
 D NEW^XM Q
"RTN","XMYPRE",36,0)
P S X=^VA(200,.5,0) I $P(X,U,3)="" S $P(^VA(200,.5,0),U,3)=";"
"RTN","XMYPRE",37,0)
 I '$D(^XMB(3.7,.5,0)) S Y=.5 D NEW^XM
"RTN","XMYPRE",38,0)
 I $D(XMB(3.7,.5,2,.95)) K ^(.95) D SET Q
"RTN","XMYPRE",39,0)
 S Y=^XMB(3.7,.5,2,0),$P(^(0),U,3,4)=$P(Y,U,3)+1_U_($P(Y,U,4)+1) D SET Q
"RTN","XMYPRE",40,0)
CONT ;W !!,"If you are initializing the entire Kernel, disregard the following, as"
"RTN","XMYPRE",41,0)
 ;W !,"the MailMan initialization is being included in a much larger process."
"RTN","XMYPRE",42,0)
 ;W !!,"The entire mailman initialization could take 2 to 3 hours.",!
"RTN","XMYPRE",43,0)
 ;R !,"Do you wish to continue with the initialization: NO// ",X:$S($D(DTIME):DTIME,1:600) I "Nn"[$E(X) K DIFQ Q
"RTN","XMYPRE",44,0)
 ;
"RTN","XMYPRE",45,0)
END D OPTIONS^XM,GO^XMP W !!,"<<<< SUCCESSFUL PRE-INIT >>>>",!
"RTN","XMYPRE",46,0)
Q K DIC,DIK,I,J,DA Q
"RTN","XMYPRE",47,0)
 Q
"RTN","XMYPRE",48,0)
NO W !,"NOT YET IMPLEMENTED" Q
"RTN","XMYPRE",49,0)
B W !!,"COULD NOT CONFIRM WHICH KERNEL VERSION IS LOADED.",!
"RTN","XMYPRE",50,0)
 K DIFQ Q
"RTN","XMYPRE2")
0^136^B57367507
"RTN","XMYPRE2",1,0)
XMYPRE2 ;(ISC-SF)/GMB-PREINSTALLATION INIT ;07/28/99  07:00
"RTN","XMYPRE2",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMYPRE2",3,0)
INIT ;
"RTN","XMYPRE2",4,0)
 K ^DOPT("XM"),^DOPT("XMC")
"RTN","XMYPRE2",5,0)
 Q:'$D(^XMBPOST("POST"))
"RTN","XMYPRE2",6,0)
 D DELFLD^XMYPRE2A
"RTN","XMYPRE2",7,0)
 D DELDATA^XMYPRE2B
"RTN","XMYPRE2",8,0)
 ;D AIXREF
"RTN","XMYPRE2",9,0)
 D PURGE
"RTN","XMYPRE2",10,0)
 D MOVE
"RTN","XMYPRE2",11,0)
 D CHKHDR
"RTN","XMYPRE2",12,0)
 D POST
"RTN","XMYPRE2",13,0)
 Q
"RTN","XMYPRE2",14,0)
AIXREF ;
"RTN","XMYPRE2",15,0)
 D BMES^XPDUTL("Check/Redo AI xref...")
"RTN","XMYPRE2",16,0)
 N XMREMID,XMZ,XMDT,XMP1,XMP2
"RTN","XMYPRE2",17,0)
 S XMREMID=""
"RTN","XMYPRE2",18,0)
 F  S XMREMID=$O(^XMBX(3.9,"AI",XMREMID)) Q:XMREMID=""  D
"RTN","XMYPRE2",19,0)
 . Q:XMREMID'["@"
"RTN","XMYPRE2",20,0)
 . S XMZ=$O(^XMBX(3.9,"AI",XMREMID,"")) Q:$D(^(XMZ))'=1  S XMDT=$G(^(XMZ),DT)
"RTN","XMYPRE2",21,0)
 . K ^XMBX(3.9,"AI",XMREMID,XMZ)
"RTN","XMYPRE2",22,0)
 . S XMP1=$$SCRUB^XMR1($P(XMREMID,"@",1)),XMP2=$$SCRUB^XMR1($P(XMREMID,"@",2))
"RTN","XMYPRE2",23,0)
 . I XMP1=""!(XMP2="") Q
"RTN","XMYPRE2",24,0)
 . I XMP1?.N S ^XMBX(3.9,"AI",XMP2,XMP1,XMZ)=XMDT Q
"RTN","XMYPRE2",25,0)
 . S ^XMBX(3.9,"AI",XMP1,XMP2,XMZ)=XMDT
"RTN","XMYPRE2",26,0)
 Q
"RTN","XMYPRE2",27,0)
PURGE ;
"RTN","XMYPRE2",28,0)
 D BMES^XPDUTL("Redo msg purge date mechanism...")
"RTN","XMYPRE2",29,0)
 N XMPD,XMDUZ,XMK,XMZ,XMREC,XMCUTOFF
"RTN","XMYPRE2",30,0)
 S (XMPD,XMDUZ,XMK,XMZ)=""
"RTN","XMYPRE2",31,0)
 F  S XMPD=$O(^XMB(3.7,"AC",XMPD)) Q:'XMPD  D
"RTN","XMYPRE2",32,0)
 . S XMCUTOFF=$$FMADD^XLFDT(XMPD,-30)
"RTN","XMYPRE2",33,0)
 . F  S XMDUZ=$O(^XMB(3.7,"AC",XMPD,XMDUZ)) Q:'XMDUZ  D
"RTN","XMYPRE2",34,0)
 . . F  S XMK=$O(^XMB(3.7,"AC",XMPD,XMDUZ,XMK)) Q:'XMK  D
"RTN","XMYPRE2",35,0)
 . . . F  S XMZ=$O(^XMB(3.7,"AC",XMPD,XMDUZ,XMK,XMZ)) Q:'XMZ  D
"RTN","XMYPRE2",36,0)
 . . . . S XMREC=$G(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0))
"RTN","XMYPRE2",37,0)
 . . . . I XMREC=""!'$P(XMREC,U,5) K ^XMB(3.7,"AC",XMPD,XMDUZ,XMK,XMZ) Q
"RTN","XMYPRE2",38,0)
 . . . . Q:$P(XMREC,U,5)'["*"  ; quit if purge date set by user
"RTN","XMYPRE2",39,0)
 . . . . ; Purge date was set by MailMan, if it ends in "*".
"RTN","XMYPRE2",40,0)
 . . . . ; If 'new' or if read after cutoff date, don't purge
"RTN","XMYPRE2",41,0)
 . . . . I $P(XMREC,U,3)!($P(XMREC,U,4)>XMCUTOFF) D
"RTN","XMYPRE2",42,0)
 . . . . . S $P(XMREC,U,5)=""
"RTN","XMYPRE2",43,0)
 . . . . . K ^XMB(3.7,"AC",XMPD,XMDUZ,XMK,XMZ)
"RTN","XMYPRE2",44,0)
 . . . . E  D
"RTN","XMYPRE2",45,0)
 . . . . . S $P(XMREC,U,5)=+$P(XMREC,U,5)
"RTN","XMYPRE2",46,0)
 . . . . . S $P(XMREC,U,7)=1
"RTN","XMYPRE2",47,0)
 . . . . S ^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)=XMREC
"RTN","XMYPRE2",48,0)
 Q
"RTN","XMYPRE2",49,0)
MOVE ;
"RTN","XMYPRE2",50,0)
 D BMES^XPDUTL("Move 'last msg received date/time' to its new field...")
"RTN","XMYPRE2",51,0)
 N XMDUZ
"RTN","XMYPRE2",52,0)
 S XMDUZ=0
"RTN","XMYPRE2",53,0)
 F  S XMDUZ=$O(^XMB(3.7,XMDUZ)) Q:'XMDUZ  D
"RTN","XMYPRE2",54,0)
 . Q:'$D(^XMB(3.7,XMDUZ,"N0",0))
"RTN","XMYPRE2",55,0)
 . S $P(^XMB(3.7,XMDUZ,0),U,14)=^XMB(3.7,XMDUZ,"N0",0)
"RTN","XMYPRE2",56,0)
 . K ^XMB(3.7,XMDUZ,"N0",0)
"RTN","XMYPRE2",57,0)
 Q
"RTN","XMYPRE2",58,0)
CHKHDR ;
"RTN","XMYPRE2",59,0)
 D BMES^XPDUTL("Make sure basket header nodes are correct...")
"RTN","XMYPRE2",60,0)
 N XMDUZ,XMK,XMZ,XMZCNT,XMKCNT
"RTN","XMYPRE2",61,0)
 S XMDUZ=0
"RTN","XMYPRE2",62,0)
 F  S XMDUZ=$O(^XMB(3.7,XMDUZ)) Q:XMDUZ'>0  D
"RTN","XMYPRE2",63,0)
 . S (XMK,XMKCNT)=0
"RTN","XMYPRE2",64,0)
 . F  S XMK=$O(^XMB(3.7,XMDUZ,2,XMK)) Q:XMK'>0  D
"RTN","XMYPRE2",65,0)
 . . S XMKCNT=XMKCNT+1
"RTN","XMYPRE2",66,0)
 . . S (XMZ,XMZCNT)=0
"RTN","XMYPRE2",67,0)
 . . F  S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,XMZ)) Q:XMZ'>0  S XMZCNT=XMZCNT+1
"RTN","XMYPRE2",68,0)
 . . S ^XMB(3.7,XMDUZ,2,XMK,1,0)="^3.702P^"_$O(^XMB(3.7,XMDUZ,2,XMK,1,"C"),-1)_U_XMZCNT
"RTN","XMYPRE2",69,0)
 . S ^XMB(3.7,XMDUZ,2,0)="^3.701^"_$O(^XMB(3.7,XMDUZ,2,"B"),-1)_U_XMKCNT
"RTN","XMYPRE2",70,0)
 Q
"RTN","XMYPRE2",71,0)
POST ;
"RTN","XMYPRE2",72,0)
 D BMES^XPDUTL("Reorganize ^XMBPOST...")
"RTN","XMYPRE2",73,0)
 N XMZ,XMQ,XMT
"RTN","XMYPRE2",74,0)
 ;
"RTN","XMYPRE2",75,0)
 S XMZ=0
"RTN","XMYPRE2",76,0)
 F  S XMZ=$O(^XMBPOST("POST",XMZ)) Q:XMZ'>0  D
"RTN","XMYPRE2",77,0)
 . I $O(^XMBPOST("POST",XMZ,0)) D FORWARD(XMZ) Q
"RTN","XMYPRE2",78,0)
 . D NEW(XMZ)
"RTN","XMYPRE2",79,0)
 ;
"RTN","XMYPRE2",80,0)
 S XMZ="R"
"RTN","XMYPRE2",81,0)
 F  S XMZ=$O(^XMBPOST("POST",XMZ)) Q:XMZ=""  D REPLY(XMZ)
"RTN","XMYPRE2",82,0)
 ;
"RTN","XMYPRE2",83,0)
 K ^XMBPOST("POST")
"RTN","XMYPRE2",84,0)
 ;
"RTN","XMYPRE2",85,0)
 S (XMQ,XMT,XMZ)="" ; Queue number, Timestamp, Message IEN
"RTN","XMYPRE2",86,0)
 F  S XMQ=$O(^XMBPOST("PGROUPM",XMQ)) Q:XMQ=""  D
"RTN","XMYPRE2",87,0)
 . S ^XMBPOST("M",XMQ)=^XMBPOST("PGROUPM",XMQ)
"RTN","XMYPRE2",88,0)
 . F  S XMT=$O(^XMBPOST("PGROUPM",XMQ,XMT)) Q:XMT=""  D
"RTN","XMYPRE2",89,0)
 . . F  S XMZ=$O(^XMBPOST("PGROUPM",XMQ,XMT,XMZ)) Q:XMZ=""  D
"RTN","XMYPRE2",90,0)
 . . . I $O(^XMBPOST("PGROUPM",XMQ,XMT,XMZ,0)) D GFORWARD(XMQ,XMT,XMZ) Q
"RTN","XMYPRE2",91,0)
 . . . D GNEW(XMQ,XMT,XMZ)
"RTN","XMYPRE2",92,0)
 ;
"RTN","XMYPRE2",93,0)
 K ^XMBPOST("PGROUPM")
"RTN","XMYPRE2",94,0)
 ;
"RTN","XMYPRE2",95,0)
 S (XMQ,XMT,XMZ)="" ; Queue number, Timestamp, Message IEN
"RTN","XMYPRE2",96,0)
 F  S XMQ=$O(^XMBPOST("PGROUPR",XMQ)) Q:XMQ'>0  D
"RTN","XMYPRE2",97,0)
 . S ^XMBPOST("R",XMQ)=^XMBPOST("PGROUPR",XMQ)
"RTN","XMYPRE2",98,0)
 . F  S XMT=$O(^XMBPOST("PGROUPR",XMQ,XMT)) Q:XMT=""  D
"RTN","XMYPRE2",99,0)
 . . F  S XMZ=$O(^XMBPOST("PGROUPR",XMQ,XMT,XMZ)) Q:XMZ=""  D GREPLY(XMQ,XMT,XMZ)
"RTN","XMYPRE2",100,0)
 ;
"RTN","XMYPRE2",101,0)
 K ^XMBPOST("PGROUPR")
"RTN","XMYPRE2",102,0)
 Q
"RTN","XMYPRE2",103,0)
FORWARD(XMZ) ;
"RTN","XMYPRE2",104,0)
 N XMTSTAMP,XMDUZ,XMPREC,XMKSELF,XMKSHARE,XMDSHARE,XMBCAST,I,J,XMUID,XMTO
"RTN","XMYPRE2",105,0)
 S XMPREC=^XMBPOST("POST",XMZ)
"RTN","XMYPRE2",106,0)
 S XMDUZ=$P(XMPREC,U),XMBCAST=$E($P(XMPREC,U,2))
"RTN","XMYPRE2",107,0)
 S XMPREC=$G(^XMBPOST("POST",XMZ,0))
"RTN","XMYPRE2",108,0)
 S XMTSTAMP=$P(XMPREC,U,7),XMCNT=$P(XMPREC,U,8)
"RTN","XMYPRE2",109,0)
 I 'XMTSTAMP S XMTSTAMP=$$TSTAMP
"RTN","XMYPRE2",110,0)
 I 'XMCNT S XMCNT=+$P($G(^XMB(3.9,XMZ,1,0)),U,3)
"RTN","XMYPRE2",111,0)
 S XMUID=XMZ_U_XMDUZ_U_XMTSTAMP
"RTN","XMYPRE2",112,0)
 S I=0
"RTN","XMYPRE2",113,0)
 F  S I=$O(^XMBPOST("POST",XMZ,I)) Q:'I  S XMPREC=^(I) D
"RTN","XMYPRE2",114,0)
 . I XMPREC[":" F J=1:1:$L(XMPREC,U) I $P(XMPREC,U,J)[":" D
"RTN","XMYPRE2",115,0)
 . . S XMTO=$P(XMPREC,U,J)
"RTN","XMYPRE2",116,0)
 . . I +XMTO=.6 D
"RTN","XMYPRE2",117,0)
 . . . S XMKSHARE=$P(XMTO,":",2),XMDSHARE=$P(XMTO,":",3)
"RTN","XMYPRE2",118,0)
 . . E  I +XMTO=XMDUZ S XMKSELF=$P(XMTO,":",2)
"RTN","XMYPRE2",119,0)
 . . S XMPREC=$P(XMPREC,U,1,J-1)_U_+XMTO_U_$P(XMPREC,U,J+1,999)
"RTN","XMYPRE2",120,0)
 . S ^XMBPOST("FWD",XMUID,I)=XMPREC
"RTN","XMYPRE2",121,0)
 S ^XMBPOST("BOX",XMTSTAMP,"M",XMZ_U_XMDUZ)=XMCNT_U_$G(XMKSELF)_U_$G(XMKSHARE)_U_$G(XMDSHARE)_U_XMBCAST
"RTN","XMYPRE2",122,0)
 Q
"RTN","XMYPRE2",123,0)
TSTAMP() ;
"RTN","XMYPRE2",124,0)
 N X
"RTN","XMYPRE2",125,0)
 S X=$H
"RTN","XMYPRE2",126,0)
 Q X*86400+$P(X,",",2)
"RTN","XMYPRE2",127,0)
NEW(XMZ) ;
"RTN","XMYPRE2",128,0)
 N XMTSTAMP,XMDUZ,XMPREC,XMKSELF,XMKSHARE,XMDSHARE,XMBCAST,XMCNT
"RTN","XMYPRE2",129,0)
 S XMPREC=^XMBPOST("POST",XMZ)
"RTN","XMYPRE2",130,0)
 S XMDUZ=$P(XMPREC,U),XMBCAST=$E($P(XMPREC,U,2))
"RTN","XMYPRE2",131,0)
 S XMKSELF=$P(XMPREC,U,3)
"RTN","XMYPRE2",132,0)
 S XMPREC=$G(^XMBPOST("POST",XMZ,0))
"RTN","XMYPRE2",133,0)
 S XMTSTAMP=$P(XMPREC,U,7),XMCNT=$P(XMPREC,U,8)
"RTN","XMYPRE2",134,0)
 I 'XMTSTAMP S XMTSTAMP=$$TSTAMP
"RTN","XMYPRE2",135,0)
 I 'XMCNT S XMCNT=+$P($G(^XMB(3.9,XMZ,1,0)),U,3)
"RTN","XMYPRE2",136,0)
 S XMPREC=$G(^XMBPOST("POST",XMZ,0,.6))
"RTN","XMYPRE2",137,0)
 S XMKSHARE=$P(XMPREC,":",1),XMDSHARE=$P(XMPREC,":",2)
"RTN","XMYPRE2",138,0)
 S ^XMBPOST("BOX",XMTSTAMP,"M",XMZ)=XMCNT_U_XMKSELF_U_XMKSHARE_U_XMDSHARE_U_XMBCAST
"RTN","XMYPRE2",139,0)
 Q
"RTN","XMYPRE2",140,0)
REPLY(XMZ) ;
"RTN","XMYPRE2",141,0)
 N XMID,XMDUZ,XMZO,XMZR,XMPREC,XMCNT,XMTSTAMP
"RTN","XMYPRE2",142,0)
 S XMZO=$E(XMZ,2,99)  ; Original msg
"RTN","XMYPRE2",143,0)
 S XMID=""
"RTN","XMYPRE2",144,0)
 F  S XMID=$O(^XMBPOST("POST",XMZ,XMID)) Q:XMID=""  S XMPREC=^(XMID) D
"RTN","XMYPRE2",145,0)
 . S XMDUZ=$P(XMID,":",2)
"RTN","XMYPRE2",146,0)
 . S XMZR=$P(XMPREC,U,5),XMTSTAMP=$P(XMPREC,U,7),XMCNT=$P(XMPREC,U,8)
"RTN","XMYPRE2",147,0)
 . S ^XMBPOST("BOX",XMTSTAMP,"R",XMZO_U_XMZR)=XMCNT_U_XMDUZ
"RTN","XMYPRE2",148,0)
 . S XMFDA(3.9001,"+1,"_XMZO_",",.01)=XMZR
"RTN","XMYPRE2",149,0)
 . D UPDATE^DIE("","XMFDA")
"RTN","XMYPRE2",150,0)
 Q
"RTN","XMYPRE2",151,0)
GFORWARD(XMQUEUE,XMTSTAMP,XMZ) ;
"RTN","XMYPRE2",152,0)
 N XMDUZ,XMPREC,XMKSELF,XMKSHARE,XMDSHARE,XMBCAST,I,J,XMUID,XMTO
"RTN","XMYPRE2",153,0)
 S XMPREC=^XMBPOST("PGROUPM",XMQUEUE,XMTSTAMP,XMZ)
"RTN","XMYPRE2",154,0)
 S XMDUZ=$P(XMPREC,U),XMBCAST=$E($P(XMPREC,U,2))
"RTN","XMYPRE2",155,0)
 S XMPREC=$G(^XMBPOST("PGROUPM",XMQUEUE,XMTSTAMP,XMZ,0))
"RTN","XMYPRE2",156,0)
 S XMCNT=$P(XMPREC,U,8)
"RTN","XMYPRE2",157,0)
 S XMUID=XMZ_U_XMDUZ_U_XMTSTAMP
"RTN","XMYPRE2",158,0)
 S I=0
"RTN","XMYPRE2",159,0)
 F  S I=$O(^XMBPOST("PGROUPM",XMQUEUE,XMTSTAMP,XMZ,I)) Q:'I  S XMPREC=^(I) D
"RTN","XMYPRE2",160,0)
 . I XMPREC[":" F J=1:1:$L(XMPREC,U) I $P(XMPREC,U,J)[":" D
"RTN","XMYPRE2",161,0)
 . . S XMTO=$P(XMPREC,U,J)
"RTN","XMYPRE2",162,0)
 . . I +XMTO=.6 D
"RTN","XMYPRE2",163,0)
 . . . S XMKSHARE=$P(XMTO,":",2),XMDSHARE=$P(XMTO,":",3)
"RTN","XMYPRE2",164,0)
 . . E  I +XMTO=XMDUZ S XMKSELF=$P(XMTO,":",2)
"RTN","XMYPRE2",165,0)
 . . S XMPREC=$P(XMPREC,U,1,J-1)_U_+XMTO_U_$P(XMPREC,U,J+1,999)
"RTN","XMYPRE2",166,0)
 . S ^XMBPOST("FWD",XMUID,I)=XMPREC
"RTN","XMYPRE2",167,0)
 S ^XMBPOST("M",XMQUEUE,XMTSTAMP,XMZ_U_XMDUZ)=XMCNT_U_$G(XMKSELF)_U_$G(XMKSHARE)_U_$G(XMDSHARE)_U_XMBCAST
"RTN","XMYPRE2",168,0)
 Q
"RTN","XMYPRE2",169,0)
GNEW(XMQUEUE,XMTSTAMP,XMZ) ;
"RTN","XMYPRE2",170,0)
 N XMDUZ,XMPREC,XMKSELF,XMKSHARE,XMDSHARE,XMBCAST,XMCNT
"RTN","XMYPRE2",171,0)
 S XMPREC=^XMBPOST("PGROUPM",XMQUEUE,XMTSTAMP,XMZ)
"RTN","XMYPRE2",172,0)
 S XMDUZ=$P(XMPREC,U),XMBCAST=$E($P(XMPREC,U,2))
"RTN","XMYPRE2",173,0)
 S XMKSELF=$P(XMPREC,U,3)
"RTN","XMYPRE2",174,0)
 S XMPREC=$G(^XMBPOST("PGROUPM",XMQUEUE,XMTSTAMP,XMZ,0))
"RTN","XMYPRE2",175,0)
 S XMCNT=$P(XMPREC,U,8)
"RTN","XMYPRE2",176,0)
 S XMPREC=$G(^XMBPOST("PGROUPM",XMQUEUE,XMTSTAMP,XMZ,0,.6))
"RTN","XMYPRE2",177,0)
 S XMKSHARE=$P(XMPREC,":",1),XMDSHARE=$P(XMPREC,":",2)
"RTN","XMYPRE2",178,0)
 S ^XMBPOST("M",XMQUEUE,XMTSTAMP,XMZ)=XMCNT_U_XMKSELF_U_XMKSHARE_U_XMDSHARE_U_XMBCAST
"RTN","XMYPRE2",179,0)
 Q
"RTN","XMYPRE2",180,0)
GREPLY(XMQUEUE,XMTSTAMP,XMZ) ;
"RTN","XMYPRE2",181,0)
 N XMID,XMDUZ,XMZO,XMZR,XMPREC,XMCNT
"RTN","XMYPRE2",182,0)
 S XMZO=$E(XMZ,2,99)  ; Original msg
"RTN","XMYPRE2",183,0)
 S XMID=""
"RTN","XMYPRE2",184,0)
 F  S XMID=$O(^XMBPOST("PGROUPR",XMQUEUE,XMTSTAMP,XMZ,XMID)) Q:XMID=""  S XMPREC=^(XMID) D
"RTN","XMYPRE2",185,0)
 . S XMDUZ=$P(XMID,":",2)
"RTN","XMYPRE2",186,0)
 . S XMZR=$P(XMPREC,U,5),XMCNT=$P(XMPREC,U,8)
"RTN","XMYPRE2",187,0)
 . S ^XMBPOST("R",XMQUEUE,XMTSTAMP,XMZO,XMZR)=XMCNT_U_XMDUZ
"RTN","XMYPRE2",188,0)
 S ^XMBPOST("R",XMQUEUE,"B",XMZO,XMTSTAMP)=""
"RTN","XMYPRE2",189,0)
 Q
"RTN","XMYPRE2A")
0^237^B46355271
"RTN","XMYPRE2A",1,0)
XMYPRE2A ;(ISC-SF)/GMB-PREINSTALLATION INIT ;03/20/99  10:53
"RTN","XMYPRE2A",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMYPRE2A",3,0)
DELFLD ;
"RTN","XMYPRE2A",4,0)
 N DIK,DA
"RTN","XMYPRE2A",5,0)
 D BMES^XPDUTL("Delete fields no longer needed...")
"RTN","XMYPRE2A",6,0)
 D MES^XPDUTL("...from ^XMB(3.7, MAILBOX")
"RTN","XMYPRE2A",7,0)
 K ^DD(3.7,0,"DR")    ; obsolete
"RTN","XMYPRE2A",8,0)
 K ^DD(3.7,4,1,1,2.2)
"RTN","XMYPRE2A",9,0)
 K ^DD(3.7,4,1,1,"DELETE PARAMETER #1")
"RTN","XMYPRE2A",10,0)
 K ^DD(3.7,4,1,1,"DELETE PARAMETER #2")
"RTN","XMYPRE2A",11,0)
 K ^DD(3.702,.01,1)   ; MESSAGE (all xrefs, NOT data)
"RTN","XMYPRE2A",12,0)
 K ^DD(3.702,0,"IX","B")
"RTN","XMYPRE2A",13,0)
 K ^DD(3.702,"IX",1)
"RTN","XMYPRE2A",14,0)
 K ^DD(3.701,0,"IX","N0")
"RTN","XMYPRE2A",15,0)
 K ^DD(3.702,0,"IX","N0")
"RTN","XMYPRE2A",16,0)
 K ^DD(3.701,0,"IX","N")
"RTN","XMYPRE2A",17,0)
 K ^DD(3.702,0,"IX","N")
"RTN","XMYPRE2A",18,0)
 S DIK="^DD(3.702,",DA=1,DA(1)=3.702 D ^DIK ; *RETRIEVAL KEYWORDS (field and data)
"RTN","XMYPRE2A",19,0)
 S DIK="^DD(3.7,",DA=4.6,DA(1)=3.7 D ^DIK ; PHONE NUMBERS (field and data)
"RTN","XMYPRE2A",20,0)
 S DIK="^DD(3.7,",DA=4.7,DA(1)=3.7 D ^DIK ; ADDRESS (field and data)
"RTN","XMYPRE2A",21,0)
 S DIK="^DD(3.7,",DA=6,DA(1)=3.7 D ^DIK ; *LAST RESPONSE SEEN (field and data)
"RTN","XMYPRE2A",22,0)
 S DIK="^DD(3.706,",DA=1,DA(1)=3.7 D ^DIK ; PRIORITY
"RTN","XMYPRE2A",23,0)
 S DIK="^DD(3.706,",DA=.01,DA(1)=3.7 D ^DIK ; ALREADY SIGNED ON TO DEVICES
"RTN","XMYPRE2A",24,0)
 S DIK="^DD(3.7,",DA=10,DA(1)=3.7 D ^DIK ; ALREADY SIGNED ON TO DEVICES (multiple and data)
"RTN","XMYPRE2A",25,0)
 I $D(^DD(3.7,22)) S DIK="^DD(3.7,",DA=22,DA(1)=3.7 D ^DIK ; ALREADY SIGNED ON TO DEVICES (multiple and data)
"RTN","XMYPRE2A",26,0)
 S DIK="^DD(3.7,",DA=20,DA(1)=3.7 D ^DIK ; LAST SYSTEM SIGNON DATE/TIME (field and data)
"RTN","XMYPRE2A",27,0)
 S DIK="^DD(3.7,",DA=21,DA(1)=3.7 D ^DIK ; TERMINAL TYPE LAST USED (field and data)
"RTN","XMYPRE2A",28,0)
 S DIK="^DD(3.701,",DA=3,DA(1)=3.701 D ^DIK ; FIRST POTENTIAL EMPTY SLOT (field and data)
"RTN","XMYPRE2A",29,0)
 S DIK="^DD(3.701,",DA=4,DA(1)=3.701 D ^DIK ; HIGHEST SLOT NUMBER (field and data)
"RTN","XMYPRE2A",30,0)
 S DIK="^DD(3.701,",DA=5,DA(1)=3.701 D ^DIK ; NUMBER OF MESSAGES IN BASKET (field and data)
"RTN","XMYPRE2A",31,0)
 D MES^XPDUTL("...from ^XMB(3.9 MESSAGE")
"RTN","XMYPRE2A",32,0)
 K ^DD(3.9,0,"IX","C") ; FROM (C xref - shouldn't be any data)
"RTN","XMYPRE2A",33,0)
 K ^DD(3.9,1,1)
"RTN","XMYPRE2A",34,0)
 S DIK="^DD(3.9,",DA=1.9,DA(1)=3.9 D ^DIK ; LOCK (field - shouldn't be any data)
"RTN","XMYPRE2A",35,0)
 S DIK="^DD(3.9,",DA=8.5,DA(1)=3.9 D ^DIK ; SCRAMBLE KEY (field, NOT data)
"RTN","XMYPRE2A",36,0)
 S DIK="^DD(3.9,",DA=8.6,DA(1)=3.9 D ^DIK ; SURROGATE READER (field - shouldn't be any data)
"RTN","XMYPRE2A",37,0)
 K ^DD(3.91,3,1) ; REMOTE MESSAGE ID (REMID xref - shouldn't be any data)
"RTN","XMYPRE2A",38,0)
 K ^DD(3.91,0,"IX","REMID")
"RTN","XMYPRE2A",39,0)
 K ^DD(3.91,"IX",3)
"RTN","XMYPRE2A",40,0)
 K ^DD(3.9,0,"PT",3.91,1)
"RTN","XMYPRE2A",41,0)
 D MES^XPDUTL("...from ^XMB(4.2999, MESSAGE STATISTICS")
"RTN","XMYPRE2A",42,0)
 S DIK="^DD(4.2999,",DA=17,DA(1)=4.2999 D ^DIK ; TOTAL MESSAGES RECEIVED (field, NOT data)
"RTN","XMYPRE2A",43,0)
 D MES^XPDUTL("...from ^XMB(1, MAILMAN SITE PARAMETERS")
"RTN","XMYPRE2A",44,0)
 S DIK="^DD(4.32,",DA=.01,DA(1)=4.3 D ^DIK ; POSTMASTER
"RTN","XMYPRE2A",45,0)
 S DIK="^DD(4.3,",DA=6,DA(1)=4.3    D ^DIK ; POSTMASTER
"RTN","XMYPRE2A",46,0)
 S DIK="^DD(4.3,",DA=8,DA(1)=4.3    D ^DIK ; MCTS DEVICE
"RTN","XMYPRE2A",47,0)
 S DIK="^DD(4.3,",DA=8.1,DA(1)=4.3  D ^DIK ; NETWORK LOG DEVICE
"RTN","XMYPRE2A",48,0)
 S DIK="^DD(4.3,",DA=8.5,DA(1)=4.3  D ^DIK ; VADATS NAME
"RTN","XMYPRE2A",49,0)
 S DIK="^DD(4.3,",DA=9,DA(1)=4.3    D ^DIK ; AGENCY CODE
"RTN","XMYPRE2A",50,0)
 S DIK="^DD(4.3,",DA=11,DA(1)=4.3   D ^DIK ; AUTO-GENERATE ACCESS CODES
"RTN","XMYPRE2A",51,0)
 S DIK="^DD(4.3,",DA=12,DA(1)=4.3   D ^DIK ; USER CHARACTERISTICS TEMPLATE
"RTN","XMYPRE2A",52,0)
 S DIK="^DD(4.3,",DA=13,DA(1)=4.3   D ^DIK ; *TASKMAN PRIORITY
"RTN","XMYPRE2A",53,0)
 S DIK="^DD(4.3,",DA=14,DA(1)=4.3   D ^DIK ; *TASKMAN PARTITION SIZE
"RTN","XMYPRE2A",54,0)
 S DIK="^DD(4.3,",DA=15,DA(1)=4.3   D ^DIK ; *TASKMAN RETENTION TIME
"RTN","XMYPRE2A",55,0)
 S DIK="^DD(4.3,",DA=16,DA(1)=4.3   D ^DIK ; *TASKMAN HANG BETWEEN JOBS
"RTN","XMYPRE2A",56,0)
 S DIK="^DD(4.3,",DA=19,DA(1)=4.3   D ^DIK ; OPTION AUDIT
"RTN","XMYPRE2A",57,0)
 S DIK="^DD(4.36,",DA=.01,DA(1)=4.3 D ^DIK ; OPTION TO AUDIT
"RTN","XMYPRE2A",58,0)
 S DIK="^DD(4.3,",DA=19.1,DA(1)=4.3 D ^DIK ; OPTION TO AUDIT
"RTN","XMYPRE2A",59,0)
 S DIK="^DD(4.35,",DA=.01,DA(1)=4.3 D ^DIK ; NAMESPACE TO AUDIT
"RTN","XMYPRE2A",60,0)
 S DIK="^DD(4.3,",DA=19.2,DA(1)=4.3 D ^DIK ; NAMESPACE TO AUDIT
"RTN","XMYPRE2A",61,0)
 S DIK="^DD(4.34,",DA=.01,DA(1)=4.3 D ^DIK ; USER TO AUDIT
"RTN","XMYPRE2A",62,0)
 S DIK="^DD(4.3,",DA=19.3,DA(1)=4.3 D ^DIK ; USER TO AUDIT
"RTN","XMYPRE2A",63,0)
 S DIK="^DD(4.3,",DA=19.4,DA(1)=4.3 D ^DIK ; INITIATE AUDIT
"RTN","XMYPRE2A",64,0)
 S DIK="^DD(4.3,",DA=19.5,DA(1)=4.3 D ^DIK ; TERMINATE AUDIT
"RTN","XMYPRE2A",65,0)
 S DIK="^DD(4.3,",DA=20,DA(1)=4.3   D ^DIK ; MAILMAN PURGE DATE
"RTN","XMYPRE2A",66,0)
 S DIK="^DD(4.3,",DA=21,DA(1)=4.3   D ^DIK ; NEW PERSON IDENTIFIERS
"RTN","XMYPRE2A",67,0)
 S DIK="^DD(4.3,",DA=31.1,DA(1)=4.3 D ^DIK ; MAX SPOOL LINES PER USER
"RTN","XMYPRE2A",68,0)
 S DIK="^DD(4.3,",DA=31.2,DA(1)=4.3 D ^DIK ; MAX SPOOL DOCUMENTS PER USER
"RTN","XMYPRE2A",69,0)
 S DIK="^DD(4.3,",DA=31.3,DA(1)=4.3 D ^DIK ; MAX SPOOL DOCUMENT LIFE-SPAN
"RTN","XMYPRE2A",70,0)
 S DIK="^DD(4.332,",DA=.02,DA(1)=4.3 D ^DIK ; DATE LAST UPDATED
"RTN","XMYPRE2A",71,0)
 S DIK="^DD(4.332,",DA=.03,DA(1)=4.3 D ^DIK ; ADDRESSEE FOR USAGE REPORTING
"RTN","XMYPRE2A",72,0)
 S DIK="^DD(4.332,",DA=.04,DA(1)=4.3 D ^DIK ; VERSION NUMBER
"RTN","XMYPRE2A",73,0)
 S DIK="^DD(4.3321,",DA=.01,DA(1)=4.332,DA(2)=4.3 D ^DIK ; PACKAGE NAMESPACE OR PREFIX
"RTN","XMYPRE2A",74,0)
 S DIK="^DD(4.33211,",DA=.01,DA(1)=4.3321,DA(2)=4.332,DA(3)=4.3 D ^DIK ; EXCLUDE NAMESPACE OR PREFIX
"RTN","XMYPRE2A",75,0)
 S DIK="^DD(4.3321,",DA=1,DA(1)=4.332,DA(2)=4.3 D ^DIK ; EXCLUDE NAMESPACE OR PREFIX
"RTN","XMYPRE2A",76,0)
 S DIK="^DD(4.332,",DA=1,DA(1)=4.3 D ^DIK ; PACKAGE NAMESPACE OR PREFIX
"RTN","XMYPRE2A",77,0)
 S DIK="^DD(4.332,",DA=.01,DA(1)=4.3 D ^DIK ; ALPHA/BETA TEST PACKAGE
"RTN","XMYPRE2A",78,0)
 S DIK="^DD(4.3,",DA=32,DA(1)=4.3   D ^DIK  ; ALPHA/BETA TEST PACKAGE
"RTN","XMYPRE2A",79,0)
 S DIK="^DD(4.333,",DA=.02,DA(1)=4.3 D ^DIK ; ACCESSES SINCE LAST UPDATE
"RTN","XMYPRE2A",80,0)
 S DIK="^DD(4.333,",DA=.01,DA(1)=4.3 D ^DIK ; ALPHA,BETA TEST OPTION
"RTN","XMYPRE2A",81,0)
 S DIK="^DD(4.3,",DA=33,DA(1)=4.3   D ^DIK  ; ALPHA,BETA TEST OPTION
"RTN","XMYPRE2A",82,0)
 S DIK="^DD(4.304,",DA=1,DA(1)=4.3   D ^DIK ; *INHIBIT LOGON?
"RTN","XMYPRE2A",83,0)
 S DIK="^DD(4.304,",DA=2,DA(1)=4.3   D ^DIK ; MAX SIGNON ALLOWED
"RTN","XMYPRE2A",84,0)
 S DIK="^DD(4.304,",DA=3,DA(1)=4.3   D ^DIK ; *REQUIRED VOLUME SET
"RTN","XMYPRE2A",85,0)
 S DIK="^DD(4.304,",DA=4,DA(1)=4.3   D ^DIK ; *MANAGER UCI
"RTN","XMYPRE2A",86,0)
 S DIK="^DD(4.30451,",DA=1,DA(1)=4.3045,DA(2)=4.304,DA(3)=4.3 D ^DIK ; *LINKED UCI
"RTN","XMYPRE2A",87,0)
 S DIK="^DD(4.30451,",DA=.01,DA(1)=4.3045,DA(2)=4.304,DA(3)=4.3 D ^DIK ; *LINKED VOLUME SET
"RTN","XMYPRE2A",88,0)
 S DIK="^DD(4.3045,",DA=1,DA(1)=4.304,DA(2)=4.3 D ^DIK ; *LINKED VOLUME SET
"RTN","XMYPRE2A",89,0)
 S DIK="^DD(4.3045,",DA=.01,DA(1)=4.304,DA(2)=4.3 D ^DIK ; *UCI
"RTN","XMYPRE2A",90,0)
 S DIK="^DD(4.304,",DA=5,DA(1)=4.3   D ^DIK ; *UCI
"RTN","XMYPRE2A",91,0)
 S DIK="^DD(4.304,",DA=6,DA(1)=4.3   D ^DIK ; LOG SYSTEM RT?
"RTN","XMYPRE2A",92,0)
 S DIK="^DD(4.304,",DA=7,DA(1)=4.3   D ^DIK ; *TASKMAN JOB LIMIT
"RTN","XMYPRE2A",93,0)
 S DIK="^DD(4.304,",DA=8,DA(1)=4.3   D ^DIK ; *OUT OF SERVICE?
"RTN","XMYPRE2A",94,0)
 S DIK="^DD(4.304,",DA=9,DA(1)=4.3   D ^DIK ; *REPLACEMENT VOLUME SET
"RTN","XMYPRE2A",95,0)
 S DIK="^DD(4.304,",DA=.01,DA(1)=4.3 D ^DIK ; VOLUME SET
"RTN","XMYPRE2A",96,0)
 S DIK="^DD(4.3,",DA=41,DA(1)=4.3   D ^DIK  ; VOLUME SET
"RTN","XMYPRE2A",97,0)
 S DIK="^DD(4.351,",DA=1,DA(1)=4.3 D ^DIK   ; TASKMAN JOB LIMIT
"RTN","XMYPRE2A",98,0)
 S DIK="^DD(4.351,",DA=.01,DA(1)=4.3 D ^DIK ; NODE NAME
"RTN","XMYPRE2A",99,0)
 S DIK="^DD(4.3,",DA=51,DA(1)=4.3   D ^DIK ; VAX CLUSTER NODE
"RTN","XMYPRE2A",100,0)
 S DIK="^DD(4.3,",DA=202,DA(1)=4.3  D ^DIK ; DEFAULT # OF ATTEMPTS
"RTN","XMYPRE2A",101,0)
 S DIK="^DD(4.3,",DA=203,DA(1)=4.3  D ^DIK ; DEFAULT LOCK-OUT TIME
"RTN","XMYPRE2A",102,0)
 S DIK="^DD(4.3,",DA=204,DA(1)=4.3  D ^DIK ; DEFAULT MULTIPLE SIGN-ON
"RTN","XMYPRE2A",103,0)
 S DIK="^DD(4.3,",DA=205,DA(1)=4.3  D ^DIK ; ASK DEVICE TYPE AT SIGN-ON
"RTN","XMYPRE2A",104,0)
 S DIK="^DD(4.3,",DA=206,DA(1)=4.3  D ^DIK ; DEFAULT AUTO-MENU
"RTN","XMYPRE2A",105,0)
 S DIK="^DD(4.3,",DA=209,DA(1)=4.3  D ^DIK ; DEFAULT TYPE-AHEAD
"RTN","XMYPRE2A",106,0)
 S DIK="^DD(4.3,",DA=210,DA(1)=4.3  D ^DIK ; DEFAULT TIMED-READ
"RTN","XMYPRE2A",107,0)
 S DIK="^DD(4.3,",DA=211,DA(1)=4.3  D ^DIK ; *BYPASS DEVICE LOCK-OUT
"RTN","XMYPRE2A",108,0)
 S DIK="^DD(4.3,",DA=212,DA(1)=4.3  D ^DIK ; *BYPASS SIGN-ON LOG
"RTN","XMYPRE2A",109,0)
 S DIK="^DD(4.33,",DA=.01,DA(1)=4.3 D ^DIK ; DEVICE TO AUDIT
"RTN","XMYPRE2A",110,0)
 S DIK="^DD(4.3,",DA=212.1,DA(1)=4.3 D ^DIK ; DEVICE TO AUDIT
"RTN","XMYPRE2A",111,0)
 S DIK="^DD(4.3,",DA=212.5,DA(1)=4.3 D ^DIK ; FAILED ACCESS ATTEMPT AUDIT
"RTN","XMYPRE2A",112,0)
 S DIK="^DD(4.3,",DA=213,DA(1)=4.3  D ^DIK ; BRIEF SIGN-ON DISPLAY
"RTN","XMYPRE2A",113,0)
 S DIK="^DD(4.3,",DA=214,DA(1)=4.3  D ^DIK ; LIFETIME OF VERIFY CODE
"RTN","XMYPRE2A",114,0)
 S DIK="^DD(4.3,",DA=216,DA(1)=4.3  D ^DIK ; INTERACTIVE USER'S PRIORITY
"RTN","XMYPRE2A",115,0)
 S DIK="^DD(4.3,",DA=240,DA(1)=4.3  D ^DIK ; INTRO TEXT
"RTN","XMYPRE2A",116,0)
 S DIK="^DD(4.3,",DA=300,DA(1)=4.3  D ^DIK ; LOG RESOURCE USAGE?
"RTN","XMYPRE2A",117,0)
 K ^DD(4.304)
"RTN","XMYPRE2A",118,0)
 K ^DD(4.3045)
"RTN","XMYPRE2A",119,0)
 K ^DD(4.30451)
"RTN","XMYPRE2A",120,0)
 K ^DD(4.32)
"RTN","XMYPRE2A",121,0)
 K ^DD(4.33)
"RTN","XMYPRE2A",122,0)
 K ^DD(4.332)
"RTN","XMYPRE2A",123,0)
 K ^DD(4.3321)
"RTN","XMYPRE2A",124,0)
 K ^DD(4.33211)
"RTN","XMYPRE2A",125,0)
 K ^DD(4.333)
"RTN","XMYPRE2A",126,0)
 K ^DD(4.34)
"RTN","XMYPRE2A",127,0)
 K ^DD(4.35)
"RTN","XMYPRE2A",128,0)
 K ^DD(4.351)
"RTN","XMYPRE2A",129,0)
 K ^DD(4.36)
"RTN","XMYPRE2A",130,0)
 K ^DD(4.3,0,"IX","AT")
"RTN","XMYPRE2A",131,0)
 K ^DD(4.3,0,"IX","ATM01")
"RTN","XMYPRE2A",132,0)
 K ^DD(4.3,0,"IX","ATM1")
"RTN","XMYPRE2A",133,0)
 K ^DD(4.3,0,"IX","ATM2")
"RTN","XMYPRE2A",134,0)
 K ^DD(4.3,0,"IX","ATM7")
"RTN","XMYPRE2A",135,0)
 K ^DD(4.3,0,"IX","ATM8")
"RTN","XMYPRE2A",136,0)
 K ^DD(4.3,0,"IX","ATM9")
"RTN","XMYPRE2A",137,0)
 K ^DD(4.3,0,"IX","AZTH")
"RTN","XMYPRE2A",138,0)
 K ^DD(4.3,0,"IX","AZTI")
"RTN","XMYPRE2A",139,0)
 K ^DD(4.3,0,"IX","AZTJ")
"RTN","XMYPRE2A",140,0)
 K ^DD(4.3,0,"IX","AZTM")
"RTN","XMYPRE2A",141,0)
 K ^DD(4.3,0,"IX","AZTO")
"RTN","XMYPRE2A",142,0)
 K ^DD(4.3,0,"IX","AZTP")
"RTN","XMYPRE2A",143,0)
 K ^DD(4.3,0,"IX","AZTR")
"RTN","XMYPRE2A",144,0)
 K ^DD(4.3,0,"IX","AZTS")
"RTN","XMYPRE2A",145,0)
 K ^DD(4.3,0,"IX","AZTT")
"RTN","XMYPRE2A",146,0)
 K ^DD(4.3,0,"IX","AZTV")
"RTN","XMYPRE2A",147,0)
 Q
"RTN","XMYPRE2B")
0^265^B9024689
"RTN","XMYPRE2B",1,0)
XMYPRE2B ;(ISC-SF)/GMB-PREINSTALLATION INIT ;05/27/99  12:35
"RTN","XMYPRE2B",2,0)
 ;;7.1;MailMan;**50**;Jun 02, 1994
"RTN","XMYPRE2B",3,0)
DELDATA ;
"RTN","XMYPRE2B",4,0)
 N XMDUZ,XMK,XMZ,XMREC,XPDIDTOT,XMCNT
"RTN","XMYPRE2B",5,0)
 D BMES^XPDUTL("Delete data from those fields...")
"RTN","XMYPRE2B",6,0)
 D MES^XPDUTL("...from ^XMB(3.7, MAILBOX")
"RTN","XMYPRE2B",7,0)
 S (XPDIDTOT,XMCNT)=0
"RTN","XMYPRE2B",8,0)
 D UPDATE^XPDID(0)
"RTN","XMYPRE2B",9,0)
 S XPDIDTOT=$P(^XMB(3.7,0),U,4)
"RTN","XMYPRE2B",10,0)
 D BMES^XPDUTL("Processing "_XPDIDTOT_" users in ^XMB(3.7, MAILBOX file...")
"RTN","XMYPRE2B",11,0)
 S XMDUZ=0
"RTN","XMYPRE2B",12,0)
 F  S XMDUZ=$O(^XMB(3.7,XMDUZ)) Q:XMDUZ'>0  D
"RTN","XMYPRE2B",13,0)
 . S XMCNT=XMCNT+1
"RTN","XMYPRE2B",14,0)
 . I XMCNT#250=0 D UPDATE^XPDID(XMCNT)
"RTN","XMYPRE2B",15,0)
 . I $P($G(^XMB(3.7,XMDUZ,0)),U)'=XMDUZ D
"RTN","XMYPRE2B",16,0)
 . . S $P(^XMB(3.7,XMDUZ,0),U)=XMDUZ
"RTN","XMYPRE2B",17,0)
 . . S ^XMB(3.7,"B",XMDUZ,XMDUZ)=""
"RTN","XMYPRE2B",18,0)
 . S:$P(^XMB(3.7,XMDUZ,0),U,4)'="" $P(^(0),U,4)="" ; 3.7,4.6
"RTN","XMYPRE2B",19,0)
 . I $D(^XMB(3.7,XMDUZ,3)) K ^XMB(3.7,XMDUZ,3) ; 3.7,4.7
"RTN","XMYPRE2B",20,0)
 . I $D(^XMB(3.7,XMDUZ,10)) K ^XMB(3.7,XMDUZ,10) ; 3.7,10
"RTN","XMYPRE2B",21,0)
 . I $D(^XMB(3.7,XMDUZ,.1)) K ^XMB(3.7,XMDUZ,.1) ; 3.7,20
"RTN","XMYPRE2B",22,0)
 . I $D(^XMB(3.7,XMDUZ,.2)) K ^XMB(3.7,XMDUZ,.2) ; 3.7,21
"RTN","XMYPRE2B",23,0)
 . S XMK=0
"RTN","XMYPRE2B",24,0)
 . F  S XMK=$O(^XMB(3.7,XMDUZ,2,XMK)) Q:XMK'>0  D
"RTN","XMYPRE2B",25,0)
 . . S ^(0)=$P($G(^XMB(3.7,XMDUZ,2,XMK,0)),U,1,2) ; 3.701,3 ,4 ,5
"RTN","XMYPRE2B",26,0)
 . . S XMZ=0
"RTN","XMYPRE2B",27,0)
 . . F  S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,XMZ)) Q:XMZ'>0  D
"RTN","XMYPRE2B",28,0)
 . . . I $D(^XMB(3.7,XMDUZ,1,XMK,1,XMZ,1)) K ^XMB(3.7,XMDUZ,1,XMK,1,XMZ,1) ; 3.702,1
"RTN","XMYPRE2B",29,0)
 . I $D(^XMB(3.7,XMDUZ,"T")) S $P(^XMB(3.7,XMDUZ,"T"),U,2)="" ; 3.7,6
"RTN","XMYPRE2B",30,0)
 D UPDATE^XPDID(XPDIDTOT)
"RTN","XMYPRE2B",31,0)
 D BMES^XPDUTL(XMCNT_" users in ^XMB(3.7, MAILBOX file.")
"RTN","XMYPRE2B",32,0)
 I XMCNT'=$P(^XMB(3.7,0),U,4) D
"RTN","XMYPRE2B",33,0)
 . D MES^XPDUTL("Changing the count in the zero node in ^XMB(3.7 from "_$P(^XMB(3.7,0),U,4)_" to "_XMCNT_".")
"RTN","XMYPRE2B",34,0)
 . L +^XMB(3.7,0)
"RTN","XMYPRE2B",35,0)
 . S $P(^XMB(3.7,0),U,4)=XMCNT
"RTN","XMYPRE2B",36,0)
 . L -^XMB(3.7,0)
"RTN","XMYPRE2B",37,0)
 D BMES^XPDUTL("Delete data from those fields...")
"RTN","XMYPRE2B",38,0)
 D MES^XPDUTL("...from ^XMB(3.9, MESSAGE")
"RTN","XMYPRE2B",39,0)
 K ^XM("C") ; 3.9,1   FROM (C xref - there shouldn't be any data)
"RTN","XMYPRE2B",40,0)
 D MES^XPDUTL("...from ^XMB(1, MAILMAN SITE PARAMETERS")
"RTN","XMYPRE2B",41,0)
 S $P(^XMB(1,1,0),U,7)=""
"RTN","XMYPRE2B",42,0)
 S $P(^XMB(1,1,0),U,8)=""
"RTN","XMYPRE2B",43,0)
 S $P(^XMB(1,1,0),U,10)=""
"RTN","XMYPRE2B",44,0)
 S $P(^XMB(1,1,0),U,11)=""
"RTN","XMYPRE2B",45,0)
 K ^XMB(1,1,2)
"RTN","XMYPRE2B",46,0)
 K ^XMB(1,1,3)
"RTN","XMYPRE2B",47,0)
 K ^XMB(1,1,4)
"RTN","XMYPRE2B",48,0)
 K ^XMB(1,1,4.33)
"RTN","XMYPRE2B",49,0)
 K ^XMB(1,1,5)
"RTN","XMYPRE2B",50,0)
 K ^XMB(1,1,19)
"RTN","XMYPRE2B",51,0)
 K ^XMB(1,1,19.1)
"RTN","XMYPRE2B",52,0)
 K ^XMB(1,1,19.2)
"RTN","XMYPRE2B",53,0)
 K ^XMB(1,1,19.3)
"RTN","XMYPRE2B",54,0)
 K ^XMB(1,1,"ABOPT")
"RTN","XMYPRE2B",55,0)
 K ^XMB(1,1,"ABPKG")
"RTN","XMYPRE2B",56,0)
 K ^XMB(1,1,"INTRO")
"RTN","XMYPRE2B",57,0)
 K ^XMB(1,1,"NPI")
"RTN","XMYPRE2B",58,0)
 K ^XMB(1,1,"SPL")
"RTN","XMYPRE2B",59,0)
 K ^XMB(1,1,"XUCP")
"RTN","XMYPRE2B",60,0)
 I $D(^XMB(1,1,"XUS")) D
"RTN","XMYPRE2B",61,0)
 . N XMINST
"RTN","XMYPRE2B",62,0)
 . S XMINST=$P(^XMB(1,1,"XUS"),U,17)
"RTN","XMYPRE2B",63,0)
 . S ^XMB(1,1,"XUS")=""
"RTN","XMYPRE2B",64,0)
 . S $P(^XMB(1,1,"XUS"),U,17)=XMINST
"RTN","XMYPRE2B",65,0)
 K ^XMB(1,"AT")
"RTN","XMYPRE2B",66,0)
 K ^XMB(1,"ATM01")
"RTN","XMYPRE2B",67,0)
 K ^XMB(1,"ATM1")
"RTN","XMYPRE2B",68,0)
 K ^XMB(1,"ATM2")
"RTN","XMYPRE2B",69,0)
 K ^XMB(1,"ATM7")
"RTN","XMYPRE2B",70,0)
 K ^XMB(1,"ATM8")
"RTN","XMYPRE2B",71,0)
 K ^XMB(1,"ATM9")
"RTN","XMYPRE2B",72,0)
 K ^XMB(1,"ATM13")
"RTN","XMYPRE2B",73,0)
 K ^XMB(1,"ATM14")
"RTN","XMYPRE2B",74,0)
 K ^XMB(1,"ATM15")
"RTN","XMYPRE2B",75,0)
 K ^XMB(1,"ATM16")
"RTN","XMYPRE2B",76,0)
 K ^XMB(1,"ATM300")
"RTN","XMYPRE2B",77,0)
 K ^XMB(1,"AZTH")
"RTN","XMYPRE2B",78,0)
 K ^XMB(1,"AZTI")
"RTN","XMYPRE2B",79,0)
 K ^XMB(1,"AZTJ")
"RTN","XMYPRE2B",80,0)
 K ^XMB(1,"AZTM")
"RTN","XMYPRE2B",81,0)
 K ^XMB(1,"AZTO")
"RTN","XMYPRE2B",82,0)
 K ^XMB(1,"AZTP")
"RTN","XMYPRE2B",83,0)
 K ^XMB(1,"AZTR")
"RTN","XMYPRE2B",84,0)
 K ^XMB(1,"AZTS")
"RTN","XMYPRE2B",85,0)
 K ^XMB(1,"AZTT")
"RTN","XMYPRE2B",86,0)
 K ^XMB(1,"AZTV")
"RTN","XMYPRE2B",87,0)
 Q
"RTN","XMZTERM")
1^242
"RTN","XMZTERM1")
1^243
"SEC","^DIC",4.3,4.3,0,"DD")
@
"SEC","^DIC",4.3,4.3,0,"DEL")
#
"SEC","^DIC",4.3,4.3,0,"LAYGO")
#
"SEC","^DIC",4.3,4.3,0,"RD")
#
"SEC","^DIC",4.3,4.3,0,"WR")
#
"UP",3.8,3.802,-1)
3.8^4
"UP",3.8,3.802,0)
3.802
"UP",3.8,3.81,-1)
3.8^1
"UP",3.8,3.81,0)
3.81
"UP",3.8,3.811,-1)
3.8^5
"UP",3.8,3.811,0)
3.811
"UP",3.8,3.812,-1)
3.8^6
"UP",3.8,3.812,0)
3.812
"UP",4.2,4.23,-1)
4.2^2
"UP",4.2,4.23,0)
4.23
"UP",4.2999,4.29992,-1)
4.2999^6
"UP",4.2999,4.29992,0)
4.29992
"VER")
8.0^22.0
"^DD",3.6,3.6,5,0)
RETENTION DAYS^NJ3,0^^0;3^K:+X'=X!(X>365)!(X<0)!(X?.E1"."1N.N) X
"^DD",3.6,3.6,5,3)
Type a Number between 0 and 365, 0 Decimal Digits
"^DD",3.6,3.6,5,21,0)
^^2^2^2941104^^
"^DD",3.6,3.6,5,21,1,0)
After this number of days, if the bulletin hasn't already been purged,
"^DD",3.6,3.6,5,21,2,0)
it will be purged by the XMAUTOPURGE option.
"^DD",3.6,3.6,5,"DT")
2941104
"^DD",3.6,3.6,12,0)
PRIORITY?^S^0:NO;1:YES;^0;4^Q
"^DD",3.6,3.6,12,3)
Should this bulletin be a priority message?
"^DD",3.6,3.6,12,21,0)
^^2^2^2970611^
"^DD",3.6,3.6,12,21,1,0)
If you want this bulletin to appear to the recipients as a priority message,
"^DD",3.6,3.6,12,21,2,0)
enter 'yes'; if not, enter 'no'.
"^DD",3.6,3.6,12,"DT")
2970611
"^DD",3.7,3.7,0)
FIELD^^16.3^37
"^DD",3.7,3.7,0,"DDA")
Y
"^DD",3.7,3.7,0,"DT")
2990227
"^DD",3.7,3.7,0,"IX","AB",3.703,.01)

"^DD",3.7,3.7,0,"IX","AC",3.702,5)

"^DD",3.7,3.7,0,"IX","AD",3.7,5)

"^DD",3.7,3.7,0,"IX","B",3.7,.01)

"^DD",3.7,3.7,0,"IX","C",3.7,.3)

"^DD",3.7,3.7,0,"IX","F",3.7,2)

"^DD",3.7,3.7,0,"IX","M",3.702,.01)

"^DD",3.7,3.7,0,"NM","MAILBOX")

"^DD",3.7,3.7,0,"VRPK")
XM
"^DD",3.7,3.7,.001,0)
NUMBER^NJ7,0I^^ ^K:+X'=X!(X>1000000)!(X<1)!(X?.E1"."1N.N) X
"^DD",3.7,3.7,.001,.1)
The number of the mailbasket
"^DD",3.7,3.7,.001,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 1000000
"^DD",3.7,3.7,.001,21,0)
^^3^3^2881121^^^
"^DD",3.7,3.7,.001,21,1,0)
This number is used internally to match mailboxes to users in the
"^DD",3.7,3.7,.001,21,2,0)
user file.  It is not seen by users.  Postmaster has been given the
"^DD",3.7,3.7,.001,21,3,0)
special number of .5.
"^DD",3.7,3.7,.001,"DT")
2851003
"^DD",3.7,3.7,.01,0)
NAME^RP200'XI^VA(200,^0;1^S DINUM=+X
"^DD",3.7,3.7,.01,.1)
The user who owns this mail box.
"^DD",3.7,3.7,.01,1,0)
^.1
"^DD",3.7,3.7,.01,1,1,0)
3.7^B
"^DD",3.7,3.7,.01,1,1,1)
S ^XMB(3.7,"B",$E(X,1,30),DA)=""
"^DD",3.7,3.7,.01,1,1,2)
K ^XMB(3.7,"B",$E(X,1,30),DA)
"^DD",3.7,3.7,.01,3)

"^DD",3.7,3.7,.01,21,0)
^^1^1^2931223^^^
"^DD",3.7,3.7,.01,21,1,0)
This is the name of the user who has this mail box.
"^DD",3.7,3.7,.01,"DT")
2851003
"^DD",3.7,3.7,.3,0)
MAIL NAME^FX^^.3;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<3) X I $D(X) D MNAME^XMA21C
"^DD",3.7,3.7,.3,1,0)
^.1
"^DD",3.7,3.7,.3,1,1,0)
3.7^C
"^DD",3.7,3.7,.3,1,1,1)
S ^XMB(3.7,"C",$E(X,1,30),DA)=""
"^DD",3.7,3.7,.3,1,1,2)
K ^XMB(3.7,"C",$E(X,1,30),DA)
"^DD",3.7,3.7,.3,1,1,"%D",0)
^^3^3^2921127^
"^DD",3.7,3.7,.3,1,1,"%D",1,0)
This cross reference is used to ensure that names for this field will
"^DD",3.7,3.7,.3,1,1,"%D",2,0)
be unique.  It is also used for look-up by the name-server for incoming
"^DD",3.7,3.7,.3,1,1,"%D",3,0)
network mail and local mail.
"^DD",3.7,3.7,.3,1,1,"DT")
2921127
"^DD",3.7,3.7,.3,3)
Answer with a name that will be used for your return address on messages sent to other sites.
"^DD",3.7,3.7,.3,4)
D HELP^XMA21C
"^DD",3.7,3.7,.3,21,0)
^^2^2^2931223^^^^
"^DD",3.7,3.7,.3,21,1,0)
This is a name that the user assigns to his mail-box on this system.
"^DD",3.7,3.7,.3,21,2,0)
It is guaranteed to be unique for each user.
"^DD",3.7,3.7,.3,"DT")
2921127
"^DD",3.7,3.7,1,0)
BASKET^3.701^^2;0
"^DD",3.7,3.7,1,21,0)
^^10^10^2970811^^^^
"^DD",3.7,3.7,1,21,1,0)
This is where users store their messages.  Each user is automatically given an
"^DD",3.7,3.7,1,21,2,0)
IN basket (#1), and a WASTE basket (#.5) when they first use MailMan.  These
"^DD",3.7,3.7,1,21,3,0)
are permanent, and may not be deleted by the user.  Other baskets may be
"^DD",3.7,3.7,1,21,4,0)
created by the user, and also deleted. 
"^DD",3.7,3.7,1,21,5,0)
 
"^DD",3.7,3.7,1,21,6,0)
Deleted messages are placed in the WASTE basket temporarily.  Every evening
"^DD",3.7,3.7,1,21,7,0)
the WASTE basket is emptied.
"^DD",3.7,3.7,1,21,8,0)
 
"^DD",3.7,3.7,1,21,9,0)
USERS SHOULD MANIPULATE BASKETS ONLY WITH MAILMAN; NOT TRY TO DO IT MANUALLY
"^DD",3.7,3.7,1,21,10,0)
WITH FILEMAN. 
"^DD",3.7,3.7,1,"DT")
2950226
"^DD",3.7,3.7,1.1,0)
# NEW MESSAGES FOR USER^NJ5,0^^0;6^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",3.7,3.7,1.1,.1)
Total number of NEW messages for this user.
"^DD",3.7,3.7,1.1,3)
TYPE A WHOLE NUMBER BETWEEN 0 AND 99999
"^DD",3.7,3.7,1.1,21,0)
^^1^1^2881121^^^^
"^DD",3.7,3.7,1.1,21,1,0)
A counter for the number of new messages in this MailBox
"^DD",3.7,3.7,1.1,"DT")
2870519
"^DD",3.7,3.7,1.11,0)
LAST MSG RECEIVED DATE/TIME^D^^0;14^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",3.7,3.7,1.11,3)
This is the date/time that the latest message was received.
"^DD",3.7,3.7,1.11,21,0)
^^2^2^2970409^^
"^DD",3.7,3.7,1.11,21,1,0)
This field is displayed when the user has new messages, and the user is
"^DD",3.7,3.7,1.11,21,2,0)
told how many, and when the last one was received.
"^DD",3.7,3.7,1.11,"DT")
2960403
"^DD",3.7,3.7,1.12,0)
LAST NEW MSG NOTIFY DATE/TIME^D^^0;15^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",3.7,3.7,1.12,3)
This is the last new message arrival date of which the user was notified.
"^DD",3.7,3.7,1.12,21,0)
^^7^7^2970409^^
"^DD",3.7,3.7,1.12,21,1,0)
This field is used during logon to determine whether or not to display to the
"^DD",3.7,3.7,1.12,21,2,0)
user the time that the last new message arrived. 
"^DD",3.7,3.7,1.12,21,3,0)

"^DD",3.7,3.7,1.12,21,4,0)
When the user logs on and has new messages, he is be told how many, and when
"^DD",3.7,3.7,1.12,21,5,0)
the last one arrived.  If he logs off without reading those messages and logs
"^DD",3.7,3.7,1.12,21,6,0)
on again, and hasn't received any further new messages, he is told how many new
"^DD",3.7,3.7,1.12,21,7,0)
messages he has, but is not told when the last one arrived. 
"^DD",3.7,3.7,1.12,"DT")
2970409
"^DD",3.7,3.7,1.2,0)
DATE @ REINSTATEMENT^D^^0;7^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",3.7,3.7,1.2,.1)
Date for the user at the time of reinstatement.
"^DD",3.7,3.7,1.2,3)

"^DD",3.7,3.7,1.2,21,0)
^^5^5^2980917^^^^
"^DD",3.7,3.7,1.2,21,1,0)
When a user is reinstated, the current date may be stored here if IRM
"^DD",3.7,3.7,1.2,21,2,0)
wants to make sure that the reinstated user may not read any messages
"^DD",3.7,3.7,1.2,21,3,0)
whose local create date is before the reinstatement date.
"^DD",3.7,3.7,1.2,21,4,0)
The user may not access such messages unless the messages are in one of
"^DD",3.7,3.7,1.2,21,5,0)
his mail baskets or the message is forwarded to him. 
"^DD",3.7,3.7,1.2,"DT")
2980917
"^DD",3.7,3.7,2,0)
FORWARDING ADDRESS^FX^^0;2^D XMFWD^XMVVITA(.X,$G(XMIA)) I $D(X) K:$L(X)>50!($L(X)<1) X
"^DD",3.7,3.7,2,.1)
Remote address to which mail is routed
"^DD",3.7,3.7,2,1,0)
^.1
"^DD",3.7,3.7,2,1,1,0)
^^BULLETIN MESSAGE
"^DD",3.7,3.7,2,1,1,1)
S Y(0)=X,D0=DA S X=Y(0) S Y(1)=$S($D(^XMB(3.7,D0,0)):^(0),1:"") S X=$P(Y(1),U,2) S XMB(1)=X X ^DD(3.7,2,1,1,1.2) K XMY S XMB="XMZFWDBULL" D ^XMB:$D(^XMB(3.6,"B",XMB)),ENT^XMUT7(DA) K Y,XMB
"^DD",3.7,3.7,2,1,1,1.2)
S X=Y(0) S Y(1)=$S($D(^XMB(3.7,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,1),0)):"",1:$P(^(0),U,1)) S XMB(2)=X
"^DD",3.7,3.7,2,1,1,2)
Q
"^DD",3.7,3.7,2,1,1,"%D",0)
^^5^5^2931101^^^^
"^DD",3.7,3.7,2,1,1,"%D",1,0)
This cross reference makes sure that someone is notified when a user
"^DD",3.7,3.7,2,1,1,"%D",2,0)
creates a new FORWARDING ADDRESS if there is a member of the POSTMASTER
"^DD",3.7,3.7,2,1,1,"%D",3,0)
mail group.  It also sends out a test message (from the POSTMASTER) that
"^DD",3.7,3.7,2,1,1,"%D",4,0)
will generate an error message to the POSTMASTER if the new FORWARDING
"^DD",3.7,3.7,2,1,1,"%D",5,0)
ADDRESS is not correct.
"^DD",3.7,3.7,2,1,1,"CREATE PARAMETER #1")
FORWARDING
"^DD",3.7,3.7,2,1,1,"CREATE PARAMETER #2")
NAME
"^DD",3.7,3.7,2,1,1,"CREATE VALUE")
XM-FWD-ADDRESS-CHECKER
"^DD",3.7,3.7,2,1,1,"DELETE VALUE")
NO EFFECT
"^DD",3.7,3.7,2,1,2,0)
3.7^F
"^DD",3.7,3.7,2,1,2,1)
S ^XMB(3.7,"F",$E(X,1,30),DA)=""
"^DD",3.7,3.7,2,1,2,2)
K ^XMB(3.7,"F",$E(X,1,30),DA)
"^DD",3.7,3.7,2,1,2,"%D",0)
^^2^2^2970205^^
"^DD",3.7,3.7,2,1,2,"%D",1,0)
This cross reference enables the site manager to easily find a user who
"^DD",3.7,3.7,2,1,2,"%D",2,0)
enters a bad forwarding address.
"^DD",3.7,3.7,2,1,2,"DT")
2970205
"^DD",3.7,3.7,2,3)
Enter a forwarding address (name@domain) of up to 50 characters.
"^DD",3.7,3.7,2,21,0)
^^8^8^2990512^^^^
"^DD",3.7,3.7,2,21,1,0)
This field names an additional address to which any messages addressed to
"^DD",3.7,3.7,2,21,2,0)
you are routed.  This address must be a remote address or a local device.
"^DD",3.7,3.7,2,21,3,0)

"^DD",3.7,3.7,2,21,4,0)
If you want a local user to see your messages, make that user a surrogate.
"^DD",3.7,3.7,2,21,5,0)
 
"^DD",3.7,3.7,2,21,6,0)
See the LOCAL DELIVERY FLAG.  If you do not edit this field to 'ON', then
"^DD",3.7,3.7,2,21,7,0)
mail will only be delivered to your FORWARDING ADDRESS and not to your
"^DD",3.7,3.7,2,21,8,0)
Mailbox.
"^DD",3.7,3.7,2,"DT")
2990224
"^DD",3.7,3.7,2.1,0)
LOCAL DELIVERY FLAG^S^0:NO LOCAL DELIVERY;1:LOCAL DELIVERY ON;^0;8^Q
"^DD",3.7,3.7,2.1,.1)
LOCAL DELIVERY
"^DD",3.7,3.7,2.1,3)
If this field is not set to 'ON' and the FORWARDING ADDRESS field is filled in, then messages will only be forwarded, not delivered locally.
"^DD",3.7,3.7,2.1,21,0)
^^9^9^2970725^^^^
"^DD",3.7,3.7,2.1,21,1,0)
This field only applies if you have a FORWARDING ADDRESS.
"^DD",3.7,3.7,2.1,21,2,0)

"^DD",3.7,3.7,2.1,21,3,0)
If you have a FORWARDING ADDRESS and you want your messages
"^DD",3.7,3.7,2.1,21,4,0)
delivered locally, too, select 1 or LOCAL DELIVERY ON.
"^DD",3.7,3.7,2.1,21,5,0)
Your messages will be delivered to both your local and remote addresses.
"^DD",3.7,3.7,2.1,21,6,0)

"^DD",3.7,3.7,2.1,21,7,0)
If you have a FORWARDING ADDRESS and you do not want your messages
"^DD",3.7,3.7,2.1,21,8,0)
delivered locally, too, select 0 or NO LOCAL DELIVERY.
"^DD",3.7,3.7,2.1,21,9,0)
Your messages will be delivered only to your remote addresses.
"^DD",3.7,3.7,2.1,"DT")
2970725
"^DD",3.7,3.7,2.21,0)
NETWORK SIGNATURE LINE 1 OF 3^F^^NS1;1^K:$L(X)>70!($L(X)<3) X
"^DD",3.7,3.7,2.21,3)
Answer must be 3-70 characters in length.
"^DD",3.7,3.7,2.21,21,0)
^^20^20^2980729^^^^
"^DD",3.7,3.7,2.21,21,1,0)
This field is used exclusively when a user chooses to 'Answer' a message
"^DD",3.7,3.7,2.21,21,2,0)
rather than 'Reply' to a message.  While a 'reply' chains the new
"^DD",3.7,3.7,2.21,21,3,0)
message to the original one, an 'answer' creates a new message to
"^DD",3.7,3.7,2.21,21,4,0)
send to the sender of the original message, a new message which will not
"^DD",3.7,3.7,2.21,21,5,0)
be chained to the original message.  The new message is created with a
"^DD",3.7,3.7,2.21,21,6,0)
copy of the message being answered, followed by the text of the answer,
"^DD",3.7,3.7,2.21,21,7,0)
followed by this field and the next two NETWORK SIGNATURE LINE fields.
"^DD",3.7,3.7,2.21,21,8,0)

"^DD",3.7,3.7,2.21,21,9,0)
Your network signature might contain your name, who you are, where you
"^DD",3.7,3.7,2.21,21,10,0)
work, how you can be contacted, a favorite quote, or whatever you like.
"^DD",3.7,3.7,2.21,21,11,0)
 
"^DD",3.7,3.7,2.21,21,12,0)
So the final message, sent only to the sender will look like this:
"^DD",3.7,3.7,2.21,21,13,0)
 
"^DD",3.7,3.7,2.21,21,14,0)
    Original text
"^DD",3.7,3.7,2.21,21,15,0)
    .
"^DD",3.7,3.7,2.21,21,16,0)
    .
"^DD",3.7,3.7,2.21,21,17,0)
    Answer
"^DD",3.7,3.7,2.21,21,18,0)
    .
"^DD",3.7,3.7,2.21,21,19,0)
    .
"^DD",3.7,3.7,2.21,21,20,0)
    Network signature (preceeded and succeeded by a line of "*"s)
"^DD",3.7,3.7,2.21,"DT")
2930326
"^DD",3.7,3.7,2.22,0)
NETWORK SIGNATURE LINE 2 OF 3^F^^NS1;2^K:$L(X)>70!($L(X)<3) X
"^DD",3.7,3.7,2.22,3)
Answer must be 3-70 characters in length.
"^DD",3.7,3.7,2.22,21,0)
^^1^1^2960228^^
"^DD",3.7,3.7,2.22,21,1,0)
See field 2.21 'NETWORK SIGNATURE LINE 1 OF 3'.
"^DD",3.7,3.7,2.22,"DT")
2930326
"^DD",3.7,3.7,2.23,0)
NETWORK SIGNATURE LINE 3 OF 3^F^^NS1;3^K:$L(X)>70!($L(X)<3) X
"^DD",3.7,3.7,2.23,3)
Answer must be 3-70 characters in length.
"^DD",3.7,3.7,2.23,21,0)
^^1^1^2930326^^
"^DD",3.7,3.7,2.23,21,1,0)
See field 2.21 'NETWORK SIGNATURE LINE 1 OF 3'.
"^DD",3.7,3.7,2.23,"DT")
2930326
"^DD",3.7,3.7,3,0)
LATEST MAILMAN ACCESS^F^^L;1^K:$L(X)>64!($L(X)<2) X
"^DD",3.7,3.7,3,3)
Answer must be 2-64 characters in length.
"^DD",3.7,3.7,3,21,0)
^^6^6^2970725^^^^
"^DD",3.7,3.7,3,21,1,0)
This field holds the time of last use of MailMan by this user.
"^DD",3.7,3.7,3,21,2,0)
It is in the format DD MMM YY HH:MM and may include a parenthesized
"^DD",3.7,3.7,3,21,3,0)
surrogate's name (if it was the surrogate that last accessed MailMan).
"^DD",3.7,3.7,3,21,4,0)

"^DD",3.7,3.7,3,21,5,0)
It is displayed when you address a message to a local user so that you
"^DD",3.7,3.7,3,21,6,0)
know when the user "last used MailMan".
"^DD",3.7,3.7,3,"DT")
2970725
"^DD",3.7,3.7,3.1,0)
LATEST MAILMAN ACCESS DATE^D^^L;2^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",3.7,3.7,3.1,21,0)
^^6^6^2960228^^^
"^DD",3.7,3.7,3.1,21,1,0)
The Latest Date Accessed (7N) is in FileMan format and is the same as
"^DD",3.7,3.7,3.1,21,2,0)
the portion of the LATEST ACCESS field that excludes time and text.
"^DD",3.7,3.7,3.1,21,3,0)
 
"^DD",3.7,3.7,3.1,21,4,0)
CAUTION:
"^DD",3.7,3.7,3.1,21,5,0)
 
"^DD",3.7,3.7,3.1,21,6,0)
This field does not exist for a NEW USER until he signs into MailMan.
"^DD",3.7,3.7,3.1,22)

"^DD",3.7,3.7,3.1,"DT")
2900619
"^DD",3.7,3.7,3.2,0)
LAST MAILMAN ACCESS USER ID^P200'^VA(200,^L;3^Q
"^DD",3.7,3.7,3.2,3)
Enter the DUZ of the user.
"^DD",3.7,3.7,3.2,21,0)
^^2^2^2900619^
"^DD",3.7,3.7,3.2,21,1,0)
This field is used to record the DUZ of the last user to sign onto the 
"^DD",3.7,3.7,3.2,21,2,0)
system and use a particular Mail Box.
"^DD",3.7,3.7,3.2,"DT")
2910523
"^DD",3.7,3.7,4,0)
BANNER^F^^B;1^K:$L(X)>200!($L(X)<2) X
"^DD",3.7,3.7,4,1,0)
^.1
"^DD",3.7,3.7,4,1,1,0)
^^BULLETIN MESSAGE
"^DD",3.7,3.7,4,1,1,1)
S Y(0)=X,D0=DA S X=Y(0) S Y(1)=$S($D(^XMB(3.7,D0,"B")):^("B"),1:"") S X=$P(Y(1),U,1) S XMB(1)=X X ^DD(3.7,4,1,1,1.2) K XMY S XMB="XM BANNER MESSAGE" D ^XMB:$D(^XMB(3.6,"B",XMB)) K Y,XMB
"^DD",3.7,3.7,4,1,1,1.2)
S X=Y(0) S Y(1)=$S($D(^XMB(3.7,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,1),0)):"",1:$P(^(0),U,1)) S XMB(2)=X
"^DD",3.7,3.7,4,1,1,2)
Q
"^DD",3.7,3.7,4,1,1,"%D",0)
^^1^1^2980430^^^
"^DD",3.7,3.7,4,1,1,"%D",1,0)
Sends a bulletin whenever a banner is created or changed.
"^DD",3.7,3.7,4,1,1,"CREATE PARAMETER #1")
BANNER
"^DD",3.7,3.7,4,1,1,"CREATE PARAMETER #2")
NAME
"^DD",3.7,3.7,4,1,1,"CREATE VALUE")
XM BANNER MESSAGE
"^DD",3.7,3.7,4,1,1,"DELETE VALUE")
NO EFFECT
"^DD",3.7,3.7,4,1,1,"DT")
2970804
"^DD",3.7,3.7,4,3)
ANSWER MUST BE 2-200 CHARACTERS IN LENGTH
"^DD",3.7,3.7,4,21,0)
^^1^1^2851003^^
"^DD",3.7,3.7,4,21,1,0)
The banner is displayed to others whenever they address mail to you.
"^DD",3.7,3.7,4,"DT")
2970804
"^DD",3.7,3.7,4.5,0)
INTRODUCTION^3.704^^1;0
"^DD",3.7,3.7,4.5,21,0)
^^2^2^2881107^
"^DD",3.7,3.7,4.5,21,1,0)
This field will be displayed upon fetching the data of a user during
"^DD",3.7,3.7,4.5,21,2,0)
the help functions.
"^DD",3.7,3.7,5,0)
MESSAGE BEING EDITED^P3.9I^XMB(3.9,^T;1^Q
"^DD",3.7,3.7,5,1,0)
^.1
"^DD",3.7,3.7,5,1,1,0)
3.7^AD^MUMPS
"^DD",3.7,3.7,5,1,1,1)
S ^XMB(3.7,"AD",DA,X)=""
"^DD",3.7,3.7,5,1,1,2)
K ^XMB(3.7,"AD",DA,X)
"^DD",3.7,3.7,5,1,1,"%D",0)
^^2^2^2931212^
"^DD",3.7,3.7,5,1,1,"%D",1,0)
This cross reference is used to keep track of the message currently 
"^DD",3.7,3.7,5,1,1,"%D",2,0)
being editted.
"^DD",3.7,3.7,5,1,1,"DT")
2901002
"^DD",3.7,3.7,5,21,0)
^^2^2^2881123^^^
"^DD",3.7,3.7,5,21,1,0)
When the user is interupted while entering a message, this field holds the
"^DD",3.7,3.7,5,21,2,0)
message number of the message being edited.
"^DD",3.7,3.7,5,"DT")
2901002
"^DD",3.7,3.7,6,0)
SHOW MESSAGE PREVIEW^S^Y:YES, SHOW MESSAGE PREVIEW;N:NO, DO NOT SHOW IT;^0;4^Q
"^DD",3.7,3.7,6,3)
Do you want to see a preview of the message subject and sender?
"^DD",3.7,3.7,6,21,0)
^^44^44^2990223^^^^
"^DD",3.7,3.7,6,21,1,0)
This applies to the Classic reader only.
"^DD",3.7,3.7,6,21,2,0)

"^DD",3.7,3.7,6,21,3,0)
When you are scrolling through the messages in a basket, you can choose
"^DD",3.7,3.7,6,21,4,0)
whether or not MailMan should display (preview) the message subject
"^DD",3.7,3.7,6,21,5,0)
and sender before you read the message.
"^DD",3.7,3.7,6,21,6,0)

"^DD",3.7,3.7,6,21,7,0)
Enter Y to see the preview; N not to.  If you don't enter anything, you
"^DD",3.7,3.7,6,21,8,0)
will not see a preview.
"^DD",3.7,3.7,6,21,9,0)

"^DD",3.7,3.7,6,21,10,0)
Seeing the message subject and sender may help you decide whether or not
"^DD",3.7,3.7,6,21,11,0)
you wish to read the message.  If you decide not to read the message,
"^DD",3.7,3.7,6,21,12,0)
you can "Ignore" it and move on to the next message.
"^DD",3.7,3.7,6,21,13,0)

"^DD",3.7,3.7,6,21,14,0)
The following is a sample dialogue showing message preview:
"^DD",3.7,3.7,6,21,15,0)

"^DD",3.7,3.7,6,21,16,0)
Select MailMan Menu Option: R  Read/Manage Messages
"^DD",3.7,3.7,6,21,17,0)
Select message reader:  Detailed Full Screen// Classic
"^DD",3.7,3.7,6,21,18,0)
Read mail in MAIL BASKET: IN//       (199 messages, 1 new)
"^DD",3.7,3.7,6,21,19,0)
Last message number: 248    Messages in basket: 199 (1 new)
"^DD",3.7,3.7,6,21,20,0)
Enter ??? for help.
"^DD",3.7,3.7,6,21,21,0)

"^DD",3.7,3.7,6,21,22,0)
Subj: MESSAGE A   From: USER,ONE
"^DD",3.7,3.7,6,21,23,0)
IN Basket Message: 248// I
"^DD",3.7,3.7,6,21,24,0)

"^DD",3.7,3.7,6,21,25,0)
Subj: MESSAGE B   From: USER,TWO
"^DD",3.7,3.7,6,21,26,0)
IN Basket Message: 247// I
"^DD",3.7,3.7,6,21,27,0)

"^DD",3.7,3.7,6,21,28,0)
Subj: MESSAGE C   From: USER,THREE
"^DD",3.7,3.7,6,21,29,0)
IN Basket Message: 246//
"^DD",3.7,3.7,6,21,30,0)

"^DD",3.7,3.7,6,21,31,0)
The following is a sample dialogue without message preview.  It is more
"^DD",3.7,3.7,6,21,32,0)
difficult to decide whether to read the message or to ignore it.
"^DD",3.7,3.7,6,21,33,0)

"^DD",3.7,3.7,6,21,34,0)
Select MailMan Menu Option: R  Read/Manage Messages
"^DD",3.7,3.7,6,21,35,0)
Select message reader:  Detailed Full Screen// Classic
"^DD",3.7,3.7,6,21,36,0)
Read mail in MAIL BASKET: IN//       (199 messages, 1 new)
"^DD",3.7,3.7,6,21,37,0)
Last message number: 248    Messages in basket: 199 (1 new)
"^DD",3.7,3.7,6,21,38,0)
Enter ??? for help.
"^DD",3.7,3.7,6,21,39,0)

"^DD",3.7,3.7,6,21,40,0)
IN Basket Message: 248// I
"^DD",3.7,3.7,6,21,41,0)

"^DD",3.7,3.7,6,21,42,0)
IN Basket Message: 247// I
"^DD",3.7,3.7,6,21,43,0)

"^DD",3.7,3.7,6,21,44,0)
IN Basket Message: 246//
"^DD",3.7,3.7,6,"DT")
2990223
"^DD",3.7,3.7,7,0)
MESSAGE BEING RESPONDED TO^P3.9I^XMB(3.9,^T;3^Q
"^DD",3.7,3.7,7,21,0)
^^2^2^2841202^
"^DD",3.7,3.7,7,21,1,0)
When the user is interupted while responding to a message, this field 
"^DD",3.7,3.7,7,21,2,0)
holds the message number of the original message being responded to.
"^DD",3.7,3.7,7,"DT")
2901002
"^DD",3.7,3.7,7.5,0)
BLOB MESSAGE^S^0:NO;1:YES;^T;4^Q
"^DD",3.7,3.7,7.5,3)
Are attachments (BLOBs) being added to this message?
"^DD",3.7,3.7,7.5,21,0)
^^3^3^2970221^
"^DD",3.7,3.7,7.5,21,1,0)
When the user is interrupted while creating a message, this field serves to
"^DD",3.7,3.7,7.5,21,2,0)
remind us whether or not the message was being created with attachments
"^DD",3.7,3.7,7.5,21,3,0)
(through the Imaging Package).
"^DD",3.7,3.7,7.5,"DT")
2970221
"^DD",3.7,3.7,8,0)
SURROGATE^3.703P^^9;0
"^DD",3.7,3.7,8,21,0)
^^4^4^2960228^^^^
"^DD",3.7,3.7,8,21,1,0)
This field lists all of the users who have the ability to act as a surrogate
"^DD",3.7,3.7,8,21,2,0)
for this user.  A surrogate may read or send mail for someone else, and is
"^DD",3.7,3.7,8,21,3,0)
listed as the "sender" of the message, while the message is "from" the
"^DD",3.7,3.7,8,21,4,0)
original user.
"^DD",3.7,3.7,9,0)
MAILMAN INSTITUTION^F^^6000;1^K:$L(X)>30!($L(X)<3) X
"^DD",3.7,3.7,9,3)
Answer must be 3-30 characters in length.
"^DD",3.7,3.7,9,21,0)
^^9^9^2980729^^^^
"^DD",3.7,3.7,9,21,1,0)
The MailMan Institution is shown in MailMan when the 'Show Institution in
"^DD",3.7,3.7,9,21,2,0)
MailMan?' field in the MailMan Site Parameters file indicates so.
"^DD",3.7,3.7,9,21,3,0)

"^DD",3.7,3.7,9,21,4,0)
It is shown in parentheses following your name and title in the heading of
"^DD",3.7,3.7,9,21,5,0)
every local message or response which you send.
"^DD",3.7,3.7,9,21,6,0)

"^DD",3.7,3.7,9,21,7,0)
It helps to further identify you.  It is usually the office or site where
"^DD",3.7,3.7,9,21,8,0)
you are located, and is most useful in systems such as FORUM, where people
"^DD",3.7,3.7,9,21,9,0)
from many different sites interact.
"^DD",3.7,3.7,9,"DT")
2891024
"^DD",3.7,3.7,11,0)
MESSAGE ACTION DEFAULT^S^I:IGNORE;D:DELETE;^0;9^Q
"^DD",3.7,3.7,11,3)
Enter an 'I' for 'Ignore' or a 'D' for 'Delete'.
"^DD",3.7,3.7,11,21,0)
0^^5^5^2980729^2900801^2900801^^
"^DD",3.7,3.7,11,21,1,0)
This field overrides the field of the same name in the MailMan Site
"^DD",3.7,3.7,11,21,2,0)
Parameters file.  Whatever you fill into this field will control the
"^DD",3.7,3.7,11,21,3,0)
default for the "Message Action" prompt that you answer after reading
"^DD",3.7,3.7,11,21,4,0)
each message in your IN basket.  For all other baskets, your message
"^DD",3.7,3.7,11,21,5,0)
action default will be "Ignore".
"^DD",3.7,3.7,11,"DT")
2901002
"^DD",3.7,3.7,12,0)
ASK BASKET?^S^y:YES;n:NO;^0;5^Q
"^DD",3.7,3.7,12,3)
If no, MailMan will not ask basket name when user sends message to himself.
"^DD",3.7,3.7,12,21,0)
^^8^8^2980427^^^
"^DD",3.7,3.7,12,21,1,0)
When you send a message to yourself, MailMan will ask you to which basket
"^DD",3.7,3.7,12,21,2,0)
to deliver the message.
"^DD",3.7,3.7,12,21,3,0)

"^DD",3.7,3.7,12,21,4,0)
Answer YES (this is the default) if this is what you want.
"^DD",3.7,3.7,12,21,5,0)

"^DD",3.7,3.7,12,21,6,0)
Answer NO if you do not want MailMan to ask you.  In this case, your
"^DD",3.7,3.7,12,21,7,0)
message will be filtered to the correct basket, with the IN basket being
"^DD",3.7,3.7,12,21,8,0)
the default delivery basket.
"^DD",3.7,3.7,12,"DT")
2850423
"^DD",3.7,3.7,13,0)
SHOW TITLES^S^1:YES;0:NO;^0;10^Q
"^DD",3.7,3.7,13,3)
Enter 'Yes' if you want to see senders' and recipients' titles.
"^DD",3.7,3.7,13,21,0)
^^3^3^2980729^^^^
"^DD",3.7,3.7,13,21,1,0)
This field controls whether or not senders of messages and responses,
"^DD",3.7,3.7,13,21,2,0)
and members of groups will be seen with their 'title' as recorded
"^DD",3.7,3.7,13,21,3,0)
in the NEW PERSON file (200).
"^DD",3.7,3.7,13,"DT")
2910326
"^DD",3.7,3.7,14,0)
PRIORITY RESPONSES FLAG^S^0:Responses are PRIORITY;1:Responses are ORDINARY;^0;11^Q
"^DD",3.7,3.7,14,21,0)
^^3^3^2920818^^
"^DD",3.7,3.7,14,21,1,0)
This field allows users to decide whether or not they want to receive
"^DD",3.7,3.7,14,21,2,0)
responses to their priority mail as priority.  It may be overridden by
"^DD",3.7,3.7,14,21,3,0)
setting a flag in a message that they are the sender or recipient of.
"^DD",3.7,3.7,14,"DT")
2921009
"^DD",3.7,3.7,14.1,0)
PRIORITY RESPONSES PROMPT^S^0:ASK EACH TIME MESSAGE IS READ;1:DO NOT ASK EACH TIME MESSAGE IS READ;^0;12^Q
"^DD",3.7,3.7,14.1,3)
Enter 'Ask' or 'Do not ask'.
"^DD",3.7,3.7,14.1,4)

"^DD",3.7,3.7,14.1,21,0)
^^12^12^2980729^^^^
"^DD",3.7,3.7,14.1,21,1,0)
Answer 'Ask', and MailMan will prompt you each time you read a PRIORITY
"^DD",3.7,3.7,14.1,21,2,0)
mail message, to find out if you want the future responses to that message
"^DD",3.7,3.7,14.1,21,3,0)
to be delivered as PRIORITY mail.  The default answer will be whatever
"^DD",3.7,3.7,14.1,21,4,0)
you answered before for that message, or if it's a new message, whatever
"^DD",3.7,3.7,14.1,21,5,0)
you have entered in PRIORITY RESPONSES FLAG.
"^DD",3.7,3.7,14.1,21,6,0)

"^DD",3.7,3.7,14.1,21,7,0)
Answer 'Do not ask', and MailMan will not bother you with such requests
"^DD",3.7,3.7,14.1,21,8,0)
for information, but will use whatever you have entered in
"^DD",3.7,3.7,14.1,21,9,0)
PRIORITY RESPONSES FLAG.
"^DD",3.7,3.7,14.1,21,10,0)

"^DD",3.7,3.7,14.1,21,11,0)
In either case you may toggle the value of this field by typing KPRIORITY
"^DD",3.7,3.7,14.1,21,12,0)
at the message action prompt.
"^DD",3.7,3.7,14.1,"DT")
2920930
"^DD",3.7,3.7,15,0)
FILTER^3.715^^15;0
"^DD",3.7,3.7,16,0)
FILTER MESSAGES?^S^N:NO;Y:YES;^16;1^Q
"^DD",3.7,3.7,16,3)
If you have mail filters set up, do you want to use them?
"^DD",3.7,3.7,16,21,0)
^^5^5^2980515^^^^
"^DD",3.7,3.7,16,21,1,0)
Answer 'yes' if you want MailMan to deliver your messages to your baskets
"^DD",3.7,3.7,16,21,2,0)
based on the filtering criteria (if any) you've set up.
"^DD",3.7,3.7,16,21,3,0)

"^DD",3.7,3.7,16,21,4,0)
Answer 'no' if you have no filtering criteria set up, or if you want MailMan to
"^DD",3.7,3.7,16,21,5,0)
ignore your filtering criteria and deposit all your messages in your IN basket.
"^DD",3.7,3.7,16,"DT")
2980515
"^DD",3.7,3.7,16.2,0)
ACCEPT DELIVERY BASKET?^S^Y:YES, ACCEPT IT;N:NO, DON'T ACCEPT IT;E:EXISTING BASKETS ONLY;S:SELECTED BASKETS ONLY;^16;2^Q
"^DD",3.7,3.7,16.2,3)
Accept message delivery into sender-specified baskets?
"^DD",3.7,3.7,16.2,21,0)
^^18^18^2980518^^^^
"^DD",3.7,3.7,16.2,21,1,0)
The sender of a message may specify the *basket* into which the message
"^DD",3.7,3.7,16.2,21,2,0)
should be delivered for all recipients.
"^DD",3.7,3.7,16.2,21,3,0)
You may decide whether to accept delivery to the target basket.
"^DD",3.7,3.7,16.2,21,4,0)

"^DD",3.7,3.7,16.2,21,5,0)
Answer 'NO' if you don't accept it.  This is the default.
"^DD",3.7,3.7,16.2,21,6,0)
 - The message will be delivered as usual.
"^DD",3.7,3.7,16.2,21,7,0)
Answer 'YES' if you accept it.
"^DD",3.7,3.7,16.2,21,8,0)
 - If the basket does not exist, it will be created.
"^DD",3.7,3.7,16.2,21,9,0)
 - The message will be delivered to the specified basket.
"^DD",3.7,3.7,16.2,21,10,0)
Answer 'EXIST' if you accept it only if that basket already exists.
"^DD",3.7,3.7,16.2,21,11,0)
 - If the basket exists, the message will be delivered to it.
"^DD",3.7,3.7,16.2,21,12,0)
 - If the basket doesn't exist, it will not be created, and the message
"^DD",3.7,3.7,16.2,21,13,0)
   will be delivered as usual.
"^DD",3.7,3.7,16.2,21,14,0)
Answer 'SELECT' if you accept it only if that basket already exists
"^DD",3.7,3.7,16.2,21,15,0)
and you have specified that the basket will accept such messages.
"^DD",3.7,3.7,16.2,21,16,0)
 - If the basket exists and accepts, the message will be delivered to it.
"^DD",3.7,3.7,16.2,21,17,0)
 - If the basket doesn't exist or doesn't accept,
"^DD",3.7,3.7,16.2,21,18,0)
   the message will be delivered as usual.
"^DD",3.7,3.7,16.2,"DT")
2980518
"^DD",3.7,3.7,16.3,0)
P-MESSAGE FROM^S^M:ME;P:POSTMASTER;^16;3^Q
"^DD",3.7,3.7,16.3,3)
From whom should your P-MESSAGEs be?
"^DD",3.7,3.7,16.3,21,0)
^^14^14^2990228^^^^
"^DD",3.7,3.7,16.3,21,1,0)
This pertains to anything you may print to the P-MESSAGE device.
"^DD",3.7,3.7,16.3,21,2,0)
The result is a message sent to you.  The question is, "From whom
"^DD",3.7,3.7,16.3,21,3,0)
should the message be?"
"^DD",3.7,3.7,16.3,21,4,0)

"^DD",3.7,3.7,16.3,21,5,0)
Answer ME if the message should be from you.
"^DD",3.7,3.7,16.3,21,6,0)
It will not be delivered new to you, but you will be able to edit it.
"^DD",3.7,3.7,16.3,21,7,0)
(If this field has nothing in it, the default is ME.)
"^DD",3.7,3.7,16.3,21,8,0)

"^DD",3.7,3.7,16.3,21,9,0)
Answer POSTMASTER if the message should be from the Postmaster.
"^DD",3.7,3.7,16.3,21,10,0)
It will be delivered new to you, but you will not be able to edit it.
"^DD",3.7,3.7,16.3,21,11,0)

"^DD",3.7,3.7,16.3,21,12,0)
If you queue the print, this is from whom the message will be.
"^DD",3.7,3.7,16.3,21,13,0)
If you don't queue the print, this is the default which will appear
"^DD",3.7,3.7,16.3,21,14,0)
in a dialog with MailMan to determine from whom the message will be.
"^DD",3.7,3.7,16.3,"DT")
2990227
"^DD",3.7,3.7,17,0)
MESSAGE ORDER^S^N:Newest First;O:Oldest First;^0;13^Q
"^DD",3.7,3.7,17,3)
In which order do you want your messages to appear?
"^DD",3.7,3.7,17,21,0)
^^2^2^2980511^^^
"^DD",3.7,3.7,17,21,1,0)
'Newest First' means messages are displayed in reverse message number order.
"^DD",3.7,3.7,17,21,2,0)
'Oldest First' means messages are displayed in message number order.
"^DD",3.7,3.7,17,"DT")
2980511
"^DD",3.7,3.7,18,0)
MESSAGE READER^S^C:Classic;D:Detailed Full Screen;S:Summary Full Screen;^0;16^Q
"^DD",3.7,3.7,18,3)
What should your default message reader be?
"^DD",3.7,3.7,18,21,0)
^^11^11^2971208^^^^
"^DD",3.7,3.7,18,21,1,0)
There are several ways to read and manage your messages:
"^DD",3.7,3.7,18,21,2,0)

"^DD",3.7,3.7,18,21,3,0)
Classic              - the one that has been around for years.
"^DD",3.7,3.7,18,21,4,0)
Detailed Full Screen - the new one, with a detailed message list.
"^DD",3.7,3.7,18,21,5,0)
Summary Full Screen  - the new one, with a summary message list.
"^DD",3.7,3.7,18,21,6,0)

"^DD",3.7,3.7,18,21,7,0)
'Classic' is the default, if you don't choose any.
"^DD",3.7,3.7,18,21,8,0)

"^DD",3.7,3.7,18,21,9,0)
In the next prompt, 'message reader prompt', you will be able to
"^DD",3.7,3.7,18,21,10,0)
specify whether the reader you choose should be used all the time
"^DD",3.7,3.7,18,21,11,0)
or whether you want to be asked each time.
"^DD",3.7,3.7,18,"DT")
2971204
"^DD",3.7,3.7,19,0)
MESSAGE READER PROMPT^S^Y:Yes, ask me;N:No, don't ask me, just use the default;^0;17^Q
"^DD",3.7,3.7,19,3)
Should MailMan ask you which message reader to use every time you go to read messages?
"^DD",3.7,3.7,19,21,0)
^^15^15^2980518^^^^
"^DD",3.7,3.7,19,21,1,0)
You have chosen a default 'message reader' in the previous selection.
"^DD",3.7,3.7,19,21,2,0)
You chose either the 'classic' reader or one of the 'full-screen' readers.
"^DD",3.7,3.7,19,21,3,0)
(If you didn't choose, then your default is the 'classic' reader.)
"^DD",3.7,3.7,19,21,4,0)

"^DD",3.7,3.7,19,21,5,0)
In this selection, you must decide whether you want MailMan to ask you
"^DD",3.7,3.7,19,21,6,0)
every time you use the message reader which reader to use, or not to ask
"^DD",3.7,3.7,19,21,7,0)
you and just go ahead and use your default message reader.
"^DD",3.7,3.7,19,21,8,0)

"^DD",3.7,3.7,19,21,9,0)
Answer 'Yes' if you want to be prompted for your reader choice every time
"^DD",3.7,3.7,19,21,10,0)
you go to read messages in a basket.  This is the default answer, and is
"^DD",3.7,3.7,19,21,11,0)
recommended until you have tried all the readers and decided that you want
"^DD",3.7,3.7,19,21,12,0)
to settle on using just one.
"^DD",3.7,3.7,19,21,13,0)

"^DD",3.7,3.7,19,21,14,0)
Answer 'No' if you don't want to be prompted, and you just want to use
"^DD",3.7,3.7,19,21,15,0)
your default reader every time.
"^DD",3.7,3.7,19,"DT")
2971204
"^DD",3.7,3.7,99,0)
RETENTION DAYS^NJ3,0^^0;3^K:+X'=X!(X>999)!(X<30)!(X?.E1"."1N.N) X
"^DD",3.7,3.7,99,3)
TYPE A WHOLE NUMBER BETWEEN 30 AND 999
"^DD",3.7,3.7,99,21,0)
^^5^5^2870716^
"^DD",3.7,3.7,99,21,1,0)
This field is not in service currently, but has been reserved here to
"^DD",3.7,3.7,99,21,2,0)
facilitate differing retention dates by user.  Currently the retention
"^DD",3.7,3.7,99,21,3,0)
date (number of days to retain messages in the IN basket) is in the
"^DD",3.7,3.7,99,21,4,0)
Kernel Site Parameters file.  This would continue to be the default
"^DD",3.7,3.7,99,21,5,0)
for all users that do not have this field filled in.
"^DD",3.7,3.7,99,"DT")
2870701
"^DD",3.7,3.701,0)
BASKET SUB-FIELD^^3^4
"^DD",3.7,3.701,0,"DT")
2990106
"^DD",3.7,3.701,0,"IX","AC",3.702,6)

"^DD",3.7,3.701,0,"IX","B",3.701,.01)

"^DD",3.7,3.701,0,"NM","BASKET")

"^DD",3.7,3.701,0,"UP")
3.7
"^DD",3.7,3.701,.01,0)
BASKET^MRF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<2) X
"^DD",3.7,3.701,.01,.1)
User's Mail Basket
"^DD",3.7,3.701,.01,1,0)
^.1
"^DD",3.7,3.701,.01,1,1,0)
3.701^B
"^DD",3.7,3.701,.01,1,1,1)
S ^XMB(3.7,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",3.7,3.701,.01,1,1,2)
K ^XMB(3.7,DA(1),2,"B",$E(X,1,30),DA)
"^DD",3.7,3.701,.01,1,1,"DT")
2931207
"^DD",3.7,3.701,.01,3)
Answer must be 2-30 characters in length.
"^DD",3.7,3.701,.01,21,0)
^^1^1^2970811^^^^
"^DD",3.7,3.701,.01,21,1,0)
The basket is the place where messages are delivered and/or stored.
"^DD",3.7,3.701,.01,22)
L
"^DD",3.7,3.701,.01,"DT")
2970811
"^DD",3.7,3.701,1,0)
MESSAGE^3.702P^^1;0
"^DD",3.7,3.701,1,21,0)
^^3^3^2970811^^^^
"^DD",3.7,3.701,1,21,1,0)
This is a list of pointers to messages which are in this basket.
"^DD",3.7,3.701,1,21,2,0)
Note that the basket contains only pointers.  The text of the message
"^DD",3.7,3.701,1,21,3,0)
is held only once in the Message file.
"^DD",3.7,3.701,2,0)
# NEW MESSAGES IN BASKET^NJ5,0^^0;2^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",3.7,3.701,2,.1)
Number of NEW messages in mail basket
"^DD",3.7,3.701,2,3)
Type a Number between 0 and 99999, 0 Decimal Digits
"^DD",3.7,3.701,2,21,0)
^^3^3^2970725^^^^
"^DD",3.7,3.701,2,21,1,0)
This is the field that is displayed during look-ups and lists of baskets.
"^DD",3.7,3.701,2,21,2,0)
Holds a count of the number of messages which are flagged as NEW for
"^DD",3.7,3.701,2,21,3,0)
this basket.
"^DD",3.7,3.701,2,"DT")
2970725
"^DD",3.7,3.701,3,0)
DELIVERY BASKET?^S^Y:YES;N:NO;^0;3^Q
"^DD",3.7,3.701,3,3)
Accept delivery to this basket?
"^DD",3.7,3.701,3,21,0)
^^8^8^2980518^
"^DD",3.7,3.701,3,21,1,0)
The sender of a message may specify the *basket* into which the message
"^DD",3.7,3.701,3,21,2,0)
should be delivered for all recipients.
"^DD",3.7,3.701,3,21,3,0)

"^DD",3.7,3.701,3,21,4,0)
This field is relevant only if you have set ACCEPT DELIVERY BASKET? to
"^DD",3.7,3.701,3,21,5,0)
'SELECTED baskets only'.
"^DD",3.7,3.701,3,21,6,0)

"^DD",3.7,3.701,3,21,7,0)
Is this basket one of those baskets which will accept messages from
"^DD",3.7,3.701,3,21,8,0)
senders who have specified target delivery baskets?
"^DD",3.7,3.701,3,"DT")
2980518
"^DD",3.7,3.702,0)
MESSAGE SUB-FIELD^^7^7
"^DD",3.7,3.702,0,"DT")
2990106
"^DD",3.7,3.702,0,"IX","C",3.702,2)

"^DD",3.7,3.702,0,"NM","MESSAGE")

"^DD",3.7,3.702,0,"UP")
3.701
"^DD",3.7,3.702,.01,0)
MESSAGE^P3.9'X^XMB(3.9,^0;1^S DINUM=+X
"^DD",3.7,3.702,.01,.1)
A pointer to each message in this basket
"^DD",3.7,3.702,.01,1,0)
^.1
"^DD",3.7,3.702,.01,1,2,0)
3.7^M
"^DD",3.7,3.702,.01,1,2,1)
S ^XMB(3.7,"M",$E(X,1,30),DA(2),DA(1),DA)=""
"^DD",3.7,3.702,.01,1,2,2)
K ^XMB(3.7,"M",$E(X,1,30),DA(2),DA(1),DA)
"^DD",3.7,3.702,.01,1,3,0)
^^TRIGGER^3.702^2
"^DD",3.7,3.702,.01,1,3,1)
K DIV S DIV=X,D0=DA(2),DIV(0)=D0,D1=DA(1),DIV(1)=D1,D2=DA,DIV(2)=D2 S Y(1)=$S($D(^XMB(3.7,D0,2,D1,1,D2,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y X ^DD(3.702,.01,1,3,1.1) X ^DD(3.702,.01,1,3,1.4)
"^DD",3.7,3.702,.01,1,3,1.1)
S X=DIV S X=$O(^XMB(3.7,DA(2),2,DA(1),1,"C",""),-1)+1
"^DD",3.7,3.702,.01,1,3,1.4)
S DIH=$S($D(^XMB(3.7,DIV(0),2,DIV(1),1,DIV(2),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=3.702,DIG=2 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",3.7,3.702,.01,1,3,2)
Q
"^DD",3.7,3.702,.01,1,3,"%D",0)
^^1^1^2960229^
"^DD",3.7,3.702,.01,1,3,"%D",1,0)
This trigger gives a new message the next sequence number in the mail basket.
"^DD",3.7,3.702,.01,1,3,"CREATE VALUE")
XM NEXT SEQUENCE NUMBER
"^DD",3.7,3.702,.01,1,3,"DELETE VALUE")
NO EFFECT
"^DD",3.7,3.702,.01,1,3,"DT")
2960229
"^DD",3.7,3.702,.01,1,3,"FIELD")
MAILBOX INDEX
"^DD",3.7,3.702,.01,3)
Users may not enter messages except through the SEND A MESSAGE option.
"^DD",3.7,3.702,.01,21,0)
^^1^1^2881121^^^
"^DD",3.7,3.702,.01,21,1,0)
Messages exist in the MESSAGE file and are pointed to by multiple RECIPIENTS.
"^DD",3.7,3.702,.01,21,2,0)
File.
"^DD",3.7,3.702,.01,"DT")
2970730
"^DD",3.7,3.702,2,0)
MAILBOX INDEX^RNJ5,0^^0;2^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",3.7,3.702,2,.1)
Index number of message in mail basket
"^DD",3.7,3.702,2,1,0)
^.1
"^DD",3.7,3.702,2,1,1,0)
3.702^C
"^DD",3.7,3.702,2,1,1,1)
S ^XMB(3.7,DA(2),2,DA(1),1,"C",$E(X,1,30),DA)=""
"^DD",3.7,3.702,2,1,1,2)
K ^XMB(3.7,DA(2),2,DA(1),1,"C",$E(X,1,30),DA)
"^DD",3.7,3.702,2,3)
Type a Number between 1 and 99999, 0 Decimal Digits
"^DD",3.7,3.702,2,5,1,0)
3.702^.01^3
"^DD",3.7,3.702,2,21,0)
^^2^2^2970725^^^^
"^DD",3.7,3.702,2,21,1,0)
This field is used to help the user choose a message.  It is assigned
"^DD",3.7,3.702,2,21,2,0)
when a message is delivered into a MailBox.
"^DD",3.7,3.702,2,"DT")
2970725
"^DD",3.7,3.702,3,0)
NEW FLAG^S^0:NOT NEW;1:NEW;^0;3^Q
"^DD",3.7,3.702,3,.1)
A flag which indicates NEW status for message
"^DD",3.7,3.702,3,1,0)
^.1
"^DD",3.7,3.702,3,1,1,0)
3.701^N0^MUMPS
"^DD",3.7,3.702,3,1,1,1)
S:X=1 ^XMB(3.7,DA(2),"N0",DA(1),DA)=""
"^DD",3.7,3.702,3,1,1,2)
K ^XMB(3.7,DA(2),"N0",DA(1),DA)
"^DD",3.7,3.702,3,1,1,"%D",0)
^^1^1^2970728^^
"^DD",3.7,3.702,3,1,1,"%D",1,0)
This x-ref is for new messages.
"^DD",3.7,3.702,3,1,1,"DT")
2970728
"^DD",3.7,3.702,3,1,2,0)
3.701^N^MUMPS
"^DD",3.7,3.702,3,1,2,1)
I X=1,$$PRIORITY^XMXSEC($G(^XMB(3.9,DA,0))) N % S %=$G(^XMB(3.9,DA,1,+$O(^XMB(3.9,DA,1,"C",DA(2),0)),0)) I '($P(%,U,9)&$P(%,U,10)) S ^XMB(3.7,DA(2),"N",DA(1),DA)=""
"^DD",3.7,3.702,3,1,2,2)
K ^XMB(3.7,DA(2),"N",DA(1),DA)
"^DD",3.7,3.702,3,1,2,"%D",0)
^^3^3^2990611^^^^
"^DD",3.7,3.702,3,1,2,"%D",1,0)
This x-ref is for priority messages.  If the message is priority, this x-ref is
"^DD",3.7,3.702,3,1,2,"%D",2,0)
set if the message is a new message or if the message has a new reply, and the
"^DD",3.7,3.702,3,1,2,"%D",3,0)
user has chosen to have replies priority, too. 
"^DD",3.7,3.702,3,1,2,"DT")
2990611
"^DD",3.7,3.702,3,3)
If this message is new, set it to 1, otherwise delete it.
"^DD",3.7,3.702,3,21,0)
^^2^2^2980518^^^^
"^DD",3.7,3.702,3,21,1,0)
This field indicates to the user and to MailMan whether or not a message is
"^DD",3.7,3.702,3,21,2,0)
new. 
"^DD",3.7,3.702,3,23,0)
^^8^8^2980518^^^^
"^DD",3.7,3.702,3,23,1,0)
While it is proper to set this field to 0 when the message is no longer new,
"^DD",3.7,3.702,3,23,2,0)
the preferred method is to delete the field (=@).
"^DD",3.7,3.702,3,23,3,0)

"^DD",3.7,3.702,3,23,4,0)
Please note that the cross references on this field, N and N0, are not
"^DD",3.7,3.702,3,23,5,0)
standard FileMan.
"^DD",3.7,3.702,3,23,6,0)

"^DD",3.7,3.702,3,23,7,0)
They should be:  ^XMB(3.7,duz,2,"N",X,xmk,xmz)=""
"^DD",3.7,3.702,3,23,8,0)
But they are:    ^XMB(3.7,duz,"N",xmk,xmz)=""
"^DD",3.7,3.702,3,"DT")
2990611
"^DD",3.7,3.702,4,0)
LAST READ DATE/TIME^D^^0;4^S %DT="ETR" D ^%DT S X=Y K:Y<1 X
"^DD",3.7,3.702,4,.1)
Date/time the message was last referenced
"^DD",3.7,3.702,4,3)
Enter the date & time.
"^DD",3.7,3.702,4,21,0)
^^1^1^2970725^^^
"^DD",3.7,3.702,4,21,1,0)
This is the last date/time the message was read, printed.
"^DD",3.7,3.702,4,23,0)
^^2^2^2970725^
"^DD",3.7,3.702,4,23,1,0)
This field is used during the 'in basket purge' to identify messages which
"^DD",3.7,3.702,4,23,2,0)
haven't been read in a while.
"^DD",3.7,3.702,4,"DT")
2970725
"^DD",3.7,3.702,5,0)
AUTOMATIC DELETE DATE^D^^0;5^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",3.7,3.702,5,1,0)
^.1
"^DD",3.7,3.702,5,1,1,0)
3.7^AC
"^DD",3.7,3.702,5,1,1,1)
S ^XMB(3.7,"AC",$E(X,1,30),DA(2),DA(1),DA)=""
"^DD",3.7,3.702,5,1,1,2)
K ^XMB(3.7,"AC",$E(X,1,30),DA(2),DA(1),DA)
"^DD",3.7,3.702,5,3)
Enter the date (in the future) when this message should be deleted from your basket.
"^DD",3.7,3.702,5,9)
^
"^DD",3.7,3.702,5,21,0)
^^2^2^2990106^^^^
"^DD",3.7,3.702,5,21,1,0)
This is the date at which this message will be 'vaporized',
"^DD",3.7,3.702,5,21,2,0)
deleted from this mail basket for this user.
"^DD",3.7,3.702,5,21,3,0)
the message will be taken out of the users mail basket at the first
"^DD",3.7,3.702,5,21,4,0)
time that the IN-BASKET-PURGE runs.
"^DD",3.7,3.702,5,"DT")
2990106
"^DD",3.7,3.702,6,0)
NETWORK PRIORITY TRANSMISSION?^S^1:YES;0:NO;^0;6^Q
"^DD",3.7,3.702,6,1,0)
^.1
"^DD",3.7,3.702,6,1,1,0)
3.701^AC^MUMPS
"^DD",3.7,3.702,6,1,1,1)
S:X=1 ^XMB(3.7,DA(2),2,"AC",$E(X,1,30),DA(1),DA)=""
"^DD",3.7,3.702,6,1,1,2)
K ^XMB(3.7,DA(2),2,"AC",$E(X,1,30),DA(1),DA)
"^DD",3.7,3.702,6,1,1,"DT")
2970730
"^DD",3.7,3.702,6,3)
Should this message be transmitted ahead of others?
"^DD",3.7,3.702,6,21,0)
^^10^10^2970730^^^^
"^DD",3.7,3.702,6,21,1,0)
This field is used to flag messages that need to be transmitted before all
"^DD",3.7,3.702,6,21,2,0)
other messages in a queue.  Only the POSTMASTER or his surrogate may flag
"^DD",3.7,3.702,6,21,3,0)
messages in this way. 
"^DD",3.7,3.702,6,21,4,0)

"^DD",3.7,3.702,6,21,5,0)
Messages in the queue which are flagged as priority are transmitted before
"^DD",3.7,3.702,6,21,6,0)
non-priority messages,
"^DD",3.7,3.702,6,21,7,0)
If more than one message is flagged as priority, those messages are
"^DD",3.7,3.702,6,21,8,0)
transmitted in message number order.
"^DD",3.7,3.702,6,21,9,0)

"^DD",3.7,3.702,6,21,10,0)
If the queue is currently transmitting, priority flagging may have no effect.
"^DD",3.7,3.702,6,"DT")
2970730
"^DD",3.7,3.702,7,0)
DELETE DATE SET BY MAILMAN?^S^0:NO;1:YES;^0;7^Q
"^DD",3.7,3.702,7,3)
Did MailMan set the automatic delete date for this message?
"^DD",3.7,3.702,7,21,0)
^^4^4^2970613^
"^DD",3.7,3.702,7,21,1,0)
When the IN BASKET PURGE sets a delete date for a message, it sets this field
"^DD",3.7,3.702,7,21,2,0)
to 1.
"^DD",3.7,3.702,7,21,3,0)

"^DD",3.7,3.702,7,21,4,0)
If a user sets a delete date for a message, this field is set to 0.
"^DD",3.7,3.702,7,"DT")
2970613
"^DD",3.7,3.703,0)
SURROGATE SUB-FIELD^NL^2^3
"^DD",3.7,3.703,0,"DT")
2891025
"^DD",3.7,3.703,0,"NM","SURROGATE")

"^DD",3.7,3.703,0,"UP")
3.7
"^DD",3.7,3.703,.01,0)
SURROGATE^MP200'^VA(200,^0;1^Q
"^DD",3.7,3.703,.01,1,0)
^.1
"^DD",3.7,3.703,.01,1,1,0)
3.7^AB
"^DD",3.7,3.703,.01,1,1,1)
S ^XMB(3.7,"AB",$E(X,1,30),DA(1),DA)=""
"^DD",3.7,3.703,.01,1,1,2)
K ^XMB(3.7,"AB",$E(X,1,30),DA(1),DA)
"^DD",3.7,3.703,.01,21,0)
^^4^4^2851009^
"^DD",3.7,3.703,.01,21,1,0)
A user who has the ability to act as a surrogate for this user. A
"^DD",3.7,3.703,.01,21,2,0)
surrogate may read or send mail for someone else, and is listed as
"^DD",3.7,3.703,.01,21,3,0)
the "sender" of the message, while the message is "from" the original
"^DD",3.7,3.703,.01,21,4,0)
user.
"^DD",3.7,3.703,.01,"DT")
2841202
"^DD",3.7,3.703,1,0)
READ PRIVILEGE^S^y:YES;n:NO;^0;2^Q
"^DD",3.7,3.703,1,21,0)
^^1^1^2850729^^
"^DD",3.7,3.703,1,21,1,0)
This flag controls whether the surrogate may read the mail of this user.
"^DD",3.7,3.703,1,"DT")
2841202
"^DD",3.7,3.703,2,0)
SEND PRIVILEGE^S^y:YES;n:NO;^0;3^Q
"^DD",3.7,3.703,2,21,0)
^^2^2^2960228^^^
"^DD",3.7,3.703,2,21,1,0)
This flag controls whether the surrogate may send messages while acting
"^DD",3.7,3.703,2,21,2,0)
as a surrogate of this user.  If so, the surrogate is named as "sender".
"^DD",3.7,3.703,2,"DT")
2841202
"^DD",3.7,3.704,0)
INTRODUCTION SUB-FIELD^NL^.01^1
"^DD",3.7,3.704,0,"NM","INTRODUCTION")

"^DD",3.7,3.704,0,"UP")
3.7
"^DD",3.7,3.704,.01,0)
INTRODUCTION^W^^0;1^Q
"^DD",3.7,3.704,.01,3)
Enter a short introductory text, describing the user to the group.
"^DD",3.7,3.704,.01,21,0)
^^1^1^2851009^
"^DD",3.7,3.704,.01,21,1,0)
A brief description, introducing the user to the group.
"^DD",3.7,3.704,.01,"DT")
2850423
"^DD",3.7,3.715,0)
FILTER SUB-FIELD^^6^7
"^DD",3.7,3.715,0,"DT")
2970520
"^DD",3.7,3.715,0,"IX","AC",3.715,3)

"^DD",3.7,3.715,0,"IX","AF",3.715,1)

"^DD",3.7,3.715,0,"IX","B",3.715,.01)

"^DD",3.7,3.715,0,"IX","C",3.715,2)

"^DD",3.7,3.715,0,"NM","FILTER")

"^DD",3.7,3.715,0,"UP")
3.7
"^DD",3.7,3.715,.01,0)
FILTER^MF^^0;1^K:$L(X)>30!($L(X)<3) X
"^DD",3.7,3.715,.01,1,0)
^.1
"^DD",3.7,3.715,.01,1,1,0)
3.715^B
"^DD",3.7,3.715,.01,1,1,1)
S ^XMB(3.7,DA(1),15,"B",$E(X,1,30),DA)=""
"^DD",3.7,3.715,.01,1,1,2)
K ^XMB(3.7,DA(1),15,"B",$E(X,1,30),DA)
"^DD",3.7,3.715,.01,3)
Answer must be 3-30 characters in length.
"^DD",3.7,3.715,.01,21,0)
^^22^22^2980908^^^^
"^DD",3.7,3.715,.01,21,1,0)
This is the name of your filter.  The filter is used by MailMan
"^DD",3.7,3.715,.01,21,2,0)
to determine into which basket to place a message.  Messages can be
"^DD",3.7,3.715,.01,21,3,0)
filtered based on up to three criteria which must all be true:
"^DD",3.7,3.715,.01,21,4,0)
- Subject contains
"^DD",3.7,3.715,.01,21,5,0)
- Message is from
"^DD",3.7,3.715,.01,21,6,0)
- Message is to
"^DD",3.7,3.715,.01,21,7,0)

"^DD",3.7,3.715,.01,21,8,0)
For example, if you specify 'subject contains' and 'message is from', the
"^DD",3.7,3.715,.01,21,9,0)
filter takes effect only if the subject contains the string you specify AND
"^DD",3.7,3.715,.01,21,10,0)
the message is from the person you specify. 
"^DD",3.7,3.715,.01,21,11,0)

"^DD",3.7,3.715,.01,21,12,0)
If you wish the filter to take effect upon 'subject contains' OR 'message
"^DD",3.7,3.715,.01,21,13,0)
is from' you must create two filters, one with 'subject contains', and the
"^DD",3.7,3.715,.01,21,14,0)
other with 'message is from'.
"^DD",3.7,3.715,.01,21,15,0)

"^DD",3.7,3.715,.01,21,16,0)
Filtering takes place during message delivery and can also be selected as a
"^DD",3.7,3.715,.01,21,17,0)
basket action.  The filter is ignored during delivery under the following
"^DD",3.7,3.715,.01,21,18,0)
conditions:
"^DD",3.7,3.715,.01,21,19,0)
- The message already exists in one of your baskets.
"^DD",3.7,3.715,.01,21,20,0)
- The message is from you, and you specified a basket (other than the IN
"^DD",3.7,3.715,.01,21,21,0)
basket) at the transmit prompt.
"^DD",3.7,3.715,.01,21,22,0)
- The sender has specified a delivery basket and you have allowed it.
"^DD",3.7,3.715,.01,"DT")
2970520
"^DD",3.7,3.715,1,0)
ORDER^RNJ3,0^^0;2^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",3.7,3.715,1,1,0)
^.1
"^DD",3.7,3.715,1,1,1,0)
3.715^AF^MUMPS
"^DD",3.7,3.715,1,1,1,1)
N XMSTAT S XMSTAT=$P($G(^XMB(3.7,DA(1),15,DA,0)),U,4) I XMSTAT S ^XMB(3.7,DA(1),15,"AF",X,DA)=""
"^DD",3.7,3.715,1,1,1,2)
N XMSTAT S XMSTAT=$P($G(^XMB(3.7,DA(1),15,DA,0)),U,4) I XMSTAT K ^XMB(3.7,DA(1),15,"AF",X,DA)
"^DD",3.7,3.715,1,1,1,"DT")
2970520
"^DD",3.7,3.715,1,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",3.7,3.715,1,21,0)
^^8^8^2980908^^^^
"^DD",3.7,3.715,1,21,1,0)
This is the order in which you wish to have your filters checked.
"^DD",3.7,3.715,1,21,2,0)

"^DD",3.7,3.715,1,21,3,0)
A message may match several filters, depending on the conditions you have
"^DD",3.7,3.715,1,21,4,0)
set.  It is here that you specify relative filter priority.  If several
"^DD",3.7,3.715,1,21,5,0)
filters have the same order, then the first one you entered receives
"^DD",3.7,3.715,1,21,6,0)
priority.
"^DD",3.7,3.715,1,21,7,0)

"^DD",3.7,3.715,1,21,8,0)
If you aren't sure, enter 100.  You can always change it later.
"^DD",3.7,3.715,1,"DT")
2970520
"^DD",3.7,3.715,2,0)
BASKET^RFX^^0;3^D BASKET^XMTDF(.X)
"^DD",3.7,3.715,2,1,0)
^.1
"^DD",3.7,3.715,2,1,1,0)
3.715^C
"^DD",3.7,3.715,2,1,1,1)
S ^XMB(3.7,DA(1),15,"C",$E(X,1,30),DA)=""
"^DD",3.7,3.715,2,1,1,2)
K ^XMB(3.7,DA(1),15,"C",$E(X,1,30),DA)
"^DD",3.7,3.715,2,1,1,"DT")
2970520
"^DD",3.7,3.715,2,3)
Answer must be a valid basket name (not the IN basket).
"^DD",3.7,3.715,2,4)
D BSKTHELP^XMTDF
"^DD",3.7,3.715,2,21,0)
^^8^8^2980908^^^^
"^DD",3.7,3.715,2,21,1,0)
This is the basket you want any messages to go into if they match all of
"^DD",3.7,3.715,2,21,2,0)
the conditions you specify for this filter.
"^DD",3.7,3.715,2,21,3,0)

"^DD",3.7,3.715,2,21,4,0)
The basket may not be the "IN" basket, because that is the default basket.
"^DD",3.7,3.715,2,21,5,0)

"^DD",3.7,3.715,2,21,6,0)
The basket must exist (or be created) at the time you specify it.  You may
"^DD",3.7,3.715,2,21,7,0)
delete this basket later.  If a message filters to this basket, and the
"^DD",3.7,3.715,2,21,8,0)
basket does not exist, the basket will be created.
"^DD",3.7,3.715,2,"DT")
2970521
"^DD",3.7,3.715,3,0)
STATUS^RS^0:OFF;1:ON;^0;4^Q
"^DD",3.7,3.715,3,1,0)
^.1
"^DD",3.7,3.715,3,1,1,0)
3.715^AC^MUMPS
"^DD",3.7,3.715,3,1,1,1)
Q:'X  N XMORDER S XMORDER=$P($G(^XMB(3.7,DA(1),15,DA,0)),U,2) I XMORDER S ^XMB(3.7,DA(1),15,"AF",XMORDER,DA)=""
"^DD",3.7,3.715,3,1,1,2)
Q:'X  N XMORDER S XMORDER=$P($G(^XMB(3.7,DA(1),15,DA,0)),U,2) I XMORDER K ^XMB(3.7,DA(1),15,"AF",XMORDER,DA)
"^DD",3.7,3.715,3,1,1,"DT")
2970520
"^DD",3.7,3.715,3,21,0)
^^2^2^2980908^^
"^DD",3.7,3.715,3,21,1,0)
If the filter is active, it will be used.
"^DD",3.7,3.715,3,21,2,0)
If the filter is not active, it will be ignored.
"^DD",3.7,3.715,3,"DT")
2970520
"^DD",3.7,3.715,4,0)
SUBJECT CONTAINS^FX^^0;5^K:$L(X)>25!($L(X)<3) X S:$D(X) X=$$UP^XLFSTR(X)
"^DD",3.7,3.715,4,3)
Answer must be 3-25 characters in length.
"^DD",3.7,3.715,4,21,0)
^^4^4^2980908^^^^
"^DD",3.7,3.715,4,21,1,0)
If the subject contains the string you specify AND if the message matches
"^DD",3.7,3.715,4,21,2,0)
the other conditions (if any), then the message matches this filter.
"^DD",3.7,3.715,4,21,3,0)

"^DD",3.7,3.715,4,21,4,0)
The subject is capitalized automatically to facilitate filtering.
"^DD",3.7,3.715,4,"DT")
2970806
"^DD",3.7,3.715,5,0)
FROM^FXO^^0;6^D FROM^XMTDF(.X)
"^DD",3.7,3.715,5,2)
S Y(0)=Y S:Y=+Y Y=$S($D(^VA(200,Y,0)):$P($G(^(0)),U),1:"NOT IN NEW PERSON FILE")
"^DD",3.7,3.715,5,2.1)
S:Y=+Y Y=$S($D(^VA(200,Y,0)):$P($G(^(0)),U),1:"NOT IN NEW PERSON FILE")
"^DD",3.7,3.715,5,3)
Who is the sender of the message?
"^DD",3.7,3.715,5,21,0)
^^18^18^2980908^^^^
"^DD",3.7,3.715,5,21,1,0)
This is the person who sent the message.
"^DD",3.7,3.715,5,21,2,0)

"^DD",3.7,3.715,5,21,3,0)
If it's a local person, just enter the name.
"^DD",3.7,3.715,5,21,4,0)

"^DD",3.7,3.715,5,21,5,0)
If it's a remote person, enter name@site.  MailMan will match any sender
"^DD",3.7,3.715,5,21,6,0)
whose name contains 'name' and whose site contains 'site'.
"^DD",3.7,3.715,5,21,7,0)
'name' may be null, in which case, MailMan will match any sender whose
"^DD",3.7,3.715,5,21,8,0)
site contains site.
"^DD",3.7,3.715,5,21,9,0)
'site' may be null, in which case, MailMan will match any sender whose
"^DD",3.7,3.715,5,21,10,0)
name contains name.
"^DD",3.7,3.715,5,21,11,0)
In any case, the string must be from 2 to 45 characters and must contain '@'.
"^DD",3.7,3.715,5,21,12,0)

"^DD",3.7,3.715,5,21,13,0)
The sender's name is capitalized automatically to facilitate filtering.
"^DD",3.7,3.715,5,21,14,0)

"^DD",3.7,3.715,5,21,15,0)
For this filter to activate, its STATUS must be on, this condition and
"^DD",3.7,3.715,5,21,16,0)
the other conditions (if any) must match the message, and it must be the
"^DD",3.7,3.715,5,21,17,0)
first filter (as controlled by its ORDER) to match the message.
"^DD",3.7,3.715,5,21,18,0)
Finally, filtering must be turned on.
"^DD",3.7,3.715,5,"DT")
2970521
"^DD",3.7,3.715,6,0)
ADDRESSED TO^FX^^0;7^D TO^XMTDF(.X)
"^DD",3.7,3.715,6,3)
Answer must be 1-45 characters in length.
"^DD",3.7,3.715,6,21,0)
^^15^15^2980908^^^^
"^DD",3.7,3.715,6,21,1,0)
Enter the person or group to whom the message is addressed.
"^DD",3.7,3.715,6,21,2,0)
If the person is remote, enter name@site.  MailMan will match any
"^DD",3.7,3.715,6,21,3,0)
sender whose name contains 'name' and whose site contains 'site'.
"^DD",3.7,3.715,6,21,4,0)
'name' or 'site' may be null.
"^DD",3.7,3.715,6,21,5,0)

"^DD",3.7,3.715,6,21,6,0)
The addressee's name is automatically capitalized to facilitate filtering.
"^DD",3.7,3.715,6,21,7,0)

"^DD",3.7,3.715,6,21,8,0)
MailMan will check the addressees that you see when you Query (Q) the
"^DD",3.7,3.715,6,21,9,0)
message.  MailMan will NOT check the expanded list of addresses that
"^DD",3.7,3.715,6,21,10,0)
you see when you Query Detailed (QD) the message.
"^DD",3.7,3.715,6,21,11,0)

"^DD",3.7,3.715,6,21,12,0)
For this filter to activate, its STATUS must be on, this condition and the
"^DD",3.7,3.715,6,21,13,0)
other conditions (if any) must match the message, and it must be the first
"^DD",3.7,3.715,6,21,14,0)
filter (as controlled by its ORDER) to match the message.  Finally,
"^DD",3.7,3.715,6,21,15,0)
filtering must be turned on. 
"^DD",3.7,3.715,6,"DT")
2970521
"^DD",3.73,3.73,0)
FIELD^^2^3
"^DD",3.73,3.73,0,"DDA")
Y
"^DD",3.73,3.73,0,"DT")
2970515
"^DD",3.73,3.73,0,"ID",2)
S %I=Y,Y=$S('$D(^(0)):"",$D(^XMB(3.9,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(3.9,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",3.73,3.73,0,"IX","AB",3.73,2)

"^DD",3.73,3.73,0,"IX","AB1",3.73,.01)

"^DD",3.73,3.73,0,"IX","AC",3.73,2)

"^DD",3.73,3.73,0,"IX","C",3.73,1)

"^DD",3.73,3.73,0,"NM","MESSAGES TO BE NEW AT A LATER DATE")

"^DD",3.73,3.73,0,"VRPK")
XM
"^DD",3.73,3.73,.01,0)
DATE MESSAGE WILL BE NEW^RDX^^0;1^S %DT(0)="NOW",%DT="ETF" D ^%DT S X=Y K:Y<1 X
"^DD",3.73,3.73,.01,.1)
Date Message Will Be New
"^DD",3.73,3.73,.01,1,0)
^.1
"^DD",3.73,3.73,.01,1,1,0)
^^TRIGGER^3.73^1
"^DD",3.73,3.73,.01,1,1,1)
X ^DD(3.73,.01,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^XMB(3.73,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$S($D(XMDUZ):XMDUZ,1:DUZ) X ^DD(3.73,.01,1,1,1.4)
"^DD",3.73,3.73,.01,1,1,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^XMB(3.73,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,2),0)):"",1:$P(^(0),U,1))=""
"^DD",3.73,3.73,.01,1,1,1.4)
S DIH=$S($D(^XMB(3.73,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=3.73,DIG=1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",3.73,3.73,.01,1,1,2)
Q
"^DD",3.73,3.73,.01,1,1,"CREATE CONDITION")
USER=""
"^DD",3.73,3.73,.01,1,1,"CREATE VALUE")
S X=$S($D(XMDUZ):XMDUZ,1:DUZ)
"^DD",3.73,3.73,.01,1,1,"DELETE VALUE")
NO EFFECT
"^DD",3.73,3.73,.01,1,1,"DT")
2970124
"^DD",3.73,3.73,.01,1,1,"FIELD")
USER
"^DD",3.73,3.73,.01,1,2,0)
3.73^AB1^MUMPS
"^DD",3.73,3.73,.01,1,2,1)
N XMDUZ,XMZ,XMREC S XMREC=$G(^XMB(3.73,DA,0)),XMDUZ=$P(XMREC,U,2),XMZ=$P(XMREC,U,3) I XMZ]"" S ^XMB(3.73,"AB",X,XMDUZ,XMZ,DA)=""
"^DD",3.73,3.73,.01,1,2,2)
N XMDUZ,XMZ,XMREC S XMREC=$G(^XMB(3.73,DA,0)),XMDUZ=$P(XMREC,U,2),XMZ=$P(XMREC,U,3) I XMZ]"" K ^XMB(3.73,"AB",X,XMDUZ,XMZ,DA)
"^DD",3.73,3.73,.01,1,2,"%D",0)
^^2^2^2970127^
"^DD",3.73,3.73,.01,1,2,"%D",1,0)
This xref activates when a user changes the date/time that a message is
"^DD",3.73,3.73,.01,1,2,"%D",2,0)
latered. 
"^DD",3.73,3.73,.01,1,2,"DT")
2970127
"^DD",3.73,3.73,.01,3)
Enter a date or date @ time on which you wish this message to be new.
"^DD",3.73,3.73,.01,21,0)
^^2^2^2970127^^^^
"^DD",3.73,3.73,.01,21,1,0)
This field should be in FileMan format.  The file will be X-referenced by it
"^DD",3.73,3.73,.01,21,2,0)
and the background filer will process it on that date.
"^DD",3.73,3.73,.01,"DT")
2970127
"^DD",3.73,3.73,1,0)
USER^RP200'^VA(200,^0;2^Q
"^DD",3.73,3.73,1,1,0)
^.1
"^DD",3.73,3.73,1,1,1,0)
3.73^C
"^DD",3.73,3.73,1,1,1,1)
S ^XMB(3.73,"C",$E(X,1,30),DA)=""
"^DD",3.73,3.73,1,1,1,2)
K ^XMB(3.73,"C",$E(X,1,30),DA)
"^DD",3.73,3.73,1,1,1,3)
This cross reference is used to drive the Later'd Messages Report.  Do not delete.
"^DD",3.73,3.73,1,1,1,"%D",0)
^^1^1^2900117^
"^DD",3.73,3.73,1,1,1,"%D",1,0)
SEE NO-DELETION MESSAGE.
"^DD",3.73,3.73,1,1,1,"DT")
2900117
"^DD",3.73,3.73,1,3)

"^DD",3.73,3.73,1,5,1,0)
3.73^.01^1
"^DD",3.73,3.73,1,9)
^
"^DD",3.73,3.73,1,12)
The user must have a mailbox and may only choose himself.
"^DD",3.73,3.73,1,12.1)
S DIC("S")="I $S($D(XMDUZ):XMDUZ,$D(DUZ):DUZ,1:"""")=Y,$D(^XMB(3.7,Y))"
"^DD",3.73,3.73,1,21,0)
^^2^2^2970731^^
"^DD",3.73,3.73,1,21,1,0)
This field indicates the user for whom the message will
"^DD",3.73,3.73,1,21,2,0)
be later'd.
"^DD",3.73,3.73,1,"DT")
2910618
"^DD",3.73,3.73,2,0)
MESSAGE^R*P3.9'^XMB(3.9,^0;3^S DIC("S")="I $D(^XMB(3.9,X,0)),$P(^(0),U,2)=$S($D(XMDUZ):XMDUZ,1:DUZ)!$D(^XMB(3.9,X,1,""C"",$S($D(XMDUZ):XMDUZ,1:DUZ)))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",3.73,3.73,2,1,0)
^.1
"^DD",3.73,3.73,2,1,1,0)
3.73^AB^MUMPS
"^DD",3.73,3.73,2,1,1,1)
S %=^XMB(3.73,DA,0),^XMB(3.73,"AB",+%,$P(%,U,2),X,DA)="" K %
"^DD",3.73,3.73,2,1,1,2)
S %=^XMB(3.73,DA,0) K ^XMB(3.73,"AB",+%,$P(%,U,2),X,DA),%
"^DD",3.73,3.73,2,1,1,"%D",0)
^^3^3^2971229^^
"^DD",3.73,3.73,2,1,1,"%D",1,0)
This cross reference keeps track of the dates on which messages
"^DD",3.73,3.73,2,1,1,"%D",2,0)
are scheduled to become new.
"^DD",3.73,3.73,2,1,1,"%D",3,0)
Each message may have many such dates.
"^DD",3.73,3.73,2,1,2,0)
3.73^AC^MUMPS
"^DD",3.73,3.73,2,1,2,1)
S %=^XMB(3.73,DA,0) S ^XMB(3.73,"AC",$P(%,U,3),$P(%,U,2),DA)="" K %
"^DD",3.73,3.73,2,1,2,2)
S %=^XMB(3.73,DA,0) K ^XMB(3.73,"AC",$P(%,U,3),$P(%,U,2),DA),%
"^DD",3.73,3.73,2,1,2,"%D",0)
^^2^2^2971229^^
"^DD",3.73,3.73,2,1,2,"%D",1,0)
This cross reference keeps track of messages which are scheduled to
"^DD",3.73,3.73,2,1,2,"%D",2,0)
become new for a particular mail box (user).
"^DD",3.73,3.73,2,1,2,"DT")
2900118
"^DD",3.73,3.73,2,12)
The user must be either the sender or the recipient of the message.
"^DD",3.73,3.73,2,12.1)
S DIC("S")="I $D(^XMB(3.9,X,0)),$P(^(0),U,2)=$S($D(XMDUZ):XMDUZ,1:DUZ)!$D(^XMB(3.9,X,1,""C"",$S($D(XMDUZ):XMDUZ,1:DUZ)))"
"^DD",3.73,3.73,2,21,0)
^^2^2^2881121^
"^DD",3.73,3.73,2,21,1,0)
This field indicates which message is to appear NEW at
"^DD",3.73,3.73,2,21,2,0)
a later date.
"^DD",3.73,3.73,2,"DT")
2900118
"^DD",3.8,3.8,.01,0)
NAME^RFX^^0;1^S:X?1"G.".E!(X?1"g.".E) X=$E(X,3,99) K:$L(X)>30!($L(X)<3)!'(X'?1P.E)!(X'?.ANP) X
"^DD",3.8,3.8,.01,.1)
MAIL GROUP NAME
"^DD",3.8,3.8,.01,1,0)
^.1
"^DD",3.8,3.8,.01,1,1,0)
3.8^B
"^DD",3.8,3.8,.01,1,1,1)
S ^XMB(3.8,"B",$E(X,1,30),DA)=""
"^DD",3.8,3.8,.01,1,1,2)
K ^XMB(3.8,"B",$E(X,1,30),DA)
"^DD",3.8,3.8,.01,3)
ANSWER MUST BE 3-30 CHARACTERS IN LENGTH
"^DD",3.8,3.8,.01,21,0)
^^2^2^2921125^^^^
"^DD",3.8,3.8,.01,21,1,0)
The name of a mail group, i.e. a list of recipients who can
"^DD",3.8,3.8,.01,21,2,0)
all be addressed at once by reference to this name.
"^DD",3.8,3.8,.01,"DT")
2931202
"^DD",3.8,3.8,.01,"LAYGO",1,0)
I $$LAYGO^XMVGROUP(X)
"^DD",3.8,3.8,2,0)
MEMBER^3.81P^^1;0
"^DD",3.8,3.8,2,21,0)
^^2^2^2971007^^^^
"^DD",3.8,3.8,2,21,1,0)
A member of a Mail Group is a user to whom messages will be sent when the
"^DD",3.8,3.8,2,21,2,0)
message is addressed to this mail group.
"^DD",3.8,3.8,2,"DT")
2911126
"^DD",3.8,3.8,6,0)
AUTHORIZED SENDER^3.802P^^4;0
"^DD",3.8,3.8,6,21,0)
^^12^12^2981231^^^^
"^DD",3.8,3.8,6,21,1,0)
If you wish to restrict this mail group to only a limited set of senders,
"^DD",3.8,3.8,6,21,2,0)
name them in this field.  If no names are entered here, then it is assumed
"^DD",3.8,3.8,6,21,3,0)
that anyone may send mail to this group (if public), or only members
"^DD",3.8,3.8,6,21,4,0)
may send to it (if private).  
"^DD",3.8,3.8,6,21,5,0)
 
"^DD",3.8,3.8,6,21,6,0)
If a user attempts to send mail to a group which has one or more authorized
"^DD",3.8,3.8,6,21,7,0)
senders, but is not an authorized sender, then he is shown a list of
"^DD",3.8,3.8,6,21,8,0)
authorized senders.  He may send the message to them, and they may forward
"^DD",3.8,3.8,6,21,9,0)
it, if desired.
"^DD",3.8,3.8,6,21,10,0)

"^DD",3.8,3.8,6,21,11,0)
NOTE:  Remote users may not send mail to any local group which has
"^DD",3.8,3.8,6,21,12,0)
authorized senders
"^DD",3.8,3.8,12,0)
MEMBERS - REMOTE^3.812^^6;0
"^DD",3.8,3.8,12,21,0)
^^4^4^2990219^^^^
"^DD",3.8,3.8,12,21,1,0)
This multiple contains remote addresses or local devices or local servers.
"^DD",3.8,3.8,12,21,2,0)
The input to the field is checked for validity at the time it is entered.
"^DD",3.8,3.8,12,21,3,0)
If the address BECOMES INCORRECT MailMan will try to inform
"^DD",3.8,3.8,12,21,4,0)
a responsible person of the non-delivery of a message.
"^DD",3.8,3.8,12,"DT")
2940811
"^DD",3.8,3.802,0)
AUTHORIZED SENDER SUB-FIELD^NL^.01^1
"^DD",3.8,3.802,0,"NM","AUTHORIZED SENDER")

"^DD",3.8,3.802,.01,0)
AUTHORIZED SENDER^MP200'^VA(200,^0;1^Q
"^DD",3.8,3.802,.01,1,0)
^.1
"^DD",3.8,3.802,.01,1,1,0)
3.802^B
"^DD",3.8,3.802,.01,1,1,1)
S ^XMB(3.8,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",3.8,3.802,.01,1,1,2)
K ^XMB(3.8,DA(1),4,"B",$E(X,1,30),DA)
"^DD",3.8,3.802,.01,3)
Enter name of user who may address this group, if it is to be limited
"^DD",3.8,3.802,.01,21,0)
^^9^9^2981231^^
"^DD",3.8,3.802,.01,21,1,0)
This subfile records user numbers of those users who have the
"^DD",3.8,3.802,.01,21,2,0)
exclusive privilege of addressing the mail group.  Messages sent
"^DD",3.8,3.802,.01,21,3,0)
by other users will reach the group only if forwarded by an authorized 
"^DD",3.8,3.802,.01,21,4,0)
sender.  The authorized senders receive all mail addressed to the
"^DD",3.8,3.802,.01,21,5,0)
group.
"^DD",3.8,3.802,.01,21,6,0)

"^DD",3.8,3.802,.01,21,7,0)
WARNING:  If a group has authorized senders, then remote users will not
"^DD",3.8,3.802,.01,21,8,0)
be able to send messages to it.  Any messages sent by a remote user to
"^DD",3.8,3.802,.01,21,9,0)
a group with authorized senders will be rejected.
"^DD",3.8,3.802,.01,"DT")
2910618
"^DD",3.8,3.81,0)
MEMBER SUB-FIELD^NL^1^2
"^DD",3.8,3.81,0,"NM","MEMBER")

"^DD",3.8,3.81,.01,0)
MEMBER^M*P200'^VA(200,^0;1^S DIC("S")="I $L($P(^(0),U,3)),$D(^XMB(3.7,+Y,0))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",3.8,3.81,.01,.1)
Local Member
"^DD",3.8,3.81,.01,1,0)
^.1
"^DD",3.8,3.81,.01,1,1,0)
3.81^B
"^DD",3.8,3.81,.01,1,1,1)
S ^XMB(3.8,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",3.8,3.81,.01,1,1,2)
K ^XMB(3.8,DA(1),1,"B",$E(X,1,30),DA)
"^DD",3.8,3.81,.01,1,1,"DT")
2990824
"^DD",3.8,3.81,.01,1,2,0)
3.8^AB
"^DD",3.8,3.81,.01,1,2,1)
S ^XMB(3.8,"AB",$E(X,1,30),DA(1),DA)=""
"^DD",3.8,3.81,.01,1,2,2)
K ^XMB(3.8,"AB",$E(X,1,30),DA(1),DA)
"^DD",3.8,3.81,.01,1,2,"DT")
2990727
"^DD",3.8,3.81,.01,3)
Enter a local user who should receive mail addressed to this group.
"^DD",3.8,3.81,.01,12)
User must have an access code and a mailbox.
"^DD",3.8,3.81,.01,12.1)
S DIC("S")="I $L($P(^(0),U,3)),$D(^XMB(3.7,+Y,0))"
"^DD",3.8,3.81,.01,21,0)
^^2^2^2990308^^^^
"^DD",3.8,3.81,.01,21,1,0)
The local user who is a member of this mail group.
"^DD",3.8,3.81,.01,21,2,0)
The user must have an access code and a mailbox.
"^DD",3.8,3.81,.01,"DT")
2990824
"^DD",3.8,3.81,1,0)
TYPE^S^C:CC;I:INFO;^0;2^Q
"^DD",3.8,3.81,1,21,0)
^^11^11^2990227^^^
"^DD",3.8,3.81,1,21,1,0)
This field indicates what type of recipient this is.
"^DD",3.8,3.81,1,21,2,0)

"^DD",3.8,3.81,1,21,3,0)
If this field has nothing in it, it indicates that this recipient is
"^DD",3.8,3.81,1,21,4,0)
a primary recipient, and may reply.
"^DD",3.8,3.81,1,21,5,0)

"^DD",3.8,3.81,1,21,6,0)
CC:  indicates that the recipient is being sent a copy, but is not the
"^DD",3.8,3.81,1,21,7,0)
primary recipient.  The recipient may reply.
"^DD",3.8,3.81,1,21,8,0)
 
"^DD",3.8,3.81,1,21,9,0)
INFO: indicates that the recipient may not reply to the message; the
"^DD",3.8,3.81,1,21,10,0)
message is being transmitted to the recipient for information purposes
"^DD",3.8,3.81,1,21,11,0)
only.
"^DD",3.8,3.81,1,"DT")
2990225
"^DD",3.8,3.811,1,0)
TYPE^S^C:CC;I:INFO;^0;2^Q
"^DD",3.8,3.811,1,21,0)
^^11^11^2990225^
"^DD",3.8,3.811,1,21,1,0)
This field indicates what type of recipient this is.
"^DD",3.8,3.811,1,21,2,0)

"^DD",3.8,3.811,1,21,3,0)
If this field has nothing in it, it indicates that this recipient is
"^DD",3.8,3.811,1,21,4,0)
a primary recipient, and may reply.
"^DD",3.8,3.811,1,21,5,0)

"^DD",3.8,3.811,1,21,6,0)
CC:  indicates that the recipient is being sent a copy, but is not the
"^DD",3.8,3.811,1,21,7,0)
primary recipient.  The recipient may reply.
"^DD",3.8,3.811,1,21,8,0)

"^DD",3.8,3.811,1,21,9,0)
INFO: indicates that the recipient may not reply to the message; the
"^DD",3.8,3.811,1,21,10,0)
message is being transmitted to the recipient for information purposes
"^DD",3.8,3.811,1,21,11,0)
only.
"^DD",3.8,3.811,1,"DT")
2990225
"^DD",3.8,3.812,0)
MEMBERS - REMOTE SUB-FIELD^^.01^1
"^DD",3.8,3.812,0,"NM","MEMBERS - REMOTE")

"^DD",3.8,3.812,.01,0)
REMOTE MEMBER^MFX^^0;1^D REMOTE^XMVGROUP(.X,$G(XMIA)) I $D(X) K:$L(X)>99 X
"^DD",3.8,3.812,.01,1,0)
^.1
"^DD",3.8,3.812,.01,1,1,0)
3.812^B
"^DD",3.8,3.812,.01,1,1,1)
S ^XMB(3.8,DA(1),6,"B",$E(X,1,30),DA)=""
"^DD",3.8,3.812,.01,1,1,2)
K ^XMB(3.8,DA(1),6,"B",$E(X,1,30),DA)
"^DD",3.8,3.812,.01,3)
Enter a remote address (name@domain) or local device (D.device) or local server (S.device).
"^DD",3.8,3.812,.01,21,0)
^^2^2^2990308^^^^
"^DD",3.8,3.812,.01,21,1,0)
This is a free text, validated (at the time you enter it) remote address
"^DD",3.8,3.812,.01,21,2,0)
or local device or local server.
"^DD",3.8,3.812,.01,"DT")
2971007
"^DD",3.9,3.9,0)
FIELD^NL^41^25
"^DD",3.9,3.9,0,"DDA")
Y
"^DD",3.9,3.9,0,"DT")
2990106
"^DD",3.9,3.9,0,"IX","AI",3.9,9)

"^DD",3.9,3.9,0,"IX","AL",3.914,4)

"^DD",3.9,3.9,0,"IX","AW",3.914,2)

"^DD",3.9,3.9,0,"IX","B",3.9,.01)

"^DD",3.9,3.9,0,"IX","C",3.9,31)

"^DD",3.9,3.9,0,"NM","MESSAGE")

"^DD",3.9,3.9,0,"PT",1.12,.06)

"^DD",3.9,3.9,0,"PT",3.7,5)

"^DD",3.9,3.9,0,"PT",3.7,7)

"^DD",3.9,3.9,0,"PT",3.702,.01)

"^DD",3.9,3.9,0,"PT",3.73,2)

"^DD",3.9,3.9,0,"PT",3.9,1.35)

"^DD",3.9,3.9,0,"PT",3.9001,.01)

"^DD",3.9,3.9,0,"SCR")
I $S('$D(DUZ):0,'$D(^XMB(3.9,+Y,0)):0,$P(^(0),U,2)=DUZ:1,$D(^(1,"C",DUZ)):1,$D(^("* (Broadcast to all local user")):1,1:0)
"^DD",3.9,3.9,0,"VRPK")
XM
"^DD",3.9,3.9,.001,0)
NUMBER^NJ15,0I^^ ^K:+X'=X!(X>999999999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",3.9,3.9,.001,.1)
A unique number assigned to each message, never reused
"^DD",3.9,3.9,.001,3)
Type a Number between 0 and 999999999999999, 0 Decimal Digits
"^DD",3.9,3.9,.001,21,0)
^^10^10^2971021^^
"^DD",3.9,3.9,.001,21,1,0)
This is the unique number which is assigned to a message at the time
"^DD",3.9,3.9,.001,21,2,0)
it is entered into the system.  Messages are numbered sequentially,
"^DD",3.9,3.9,.001,21,3,0)
and numbers are never re-used.  Numbers appear in the "Query" listing for
"^DD",3.9,3.9,.001,21,4,0)
the message, as <number>@<domain name>, where <number> is the message
"^DD",3.9,3.9,.001,21,5,0)
number for this message, and <domain name> is the name of the domain,
"^DD",3.9,3.9,.001,21,6,0)
as defined in the kernel site parameter file.  This combination of
"^DD",3.9,3.9,.001,21,7,0)
number and domain name uniquely identifies ALL messages in the mailman
"^DD",3.9,3.9,.001,21,8,0)
network, and editing control is such that no two copies of the message
"^DD",3.9,3.9,.001,21,9,0)
at different domains are different; the message is either identical
"^DD",3.9,3.9,.001,21,10,0)
or missing.
"^DD",3.9,3.9,.001,"DT")
2971021
"^DD",3.9,3.9,.01,0)
SUBJECT^RFOX^^0;1^K:X[""""!($A(X)=45) X I $D(X) S X=$$STRIP^XMXUTIL1(X),X=$$MAXBLANK^XMXUTIL1(X) K:$L(X)>65!($L(X)<3) X I $D(X),X["^" S X=$$ENCODEUP^XMXUTIL1(X)
"^DD",3.9,3.9,.01,.1)
A short, descriptive title to the message.
"^DD",3.9,3.9,.01,1,0)
^.1
"^DD",3.9,3.9,.01,1,1,0)
3.9^B
"^DD",3.9,3.9,.01,1,1,1)
S ^XMB(3.9,"B",$E(X,1,30),DA)=""
"^DD",3.9,3.9,.01,1,1,2)
K ^XMB(3.9,"B",$E(X,1,30),DA)
"^DD",3.9,3.9,.01,2)
S Y(0)=Y S:Y["~U~" Y=$$DECODEUP^XMXUTIL1(Y)
"^DD",3.9,3.9,.01,2.1)
S:Y["~U~" Y=$$DECODEUP^XMXUTIL1(Y)
"^DD",3.9,3.9,.01,3)
Answer must be 3-65 characters in length.
"^DD",3.9,3.9,.01,21,0)
^^4^4^2970811^^^^
"^DD",3.9,3.9,.01,21,1,0)
This is the subject of the message, and is shown whenever the message is
"^DD",3.9,3.9,.01,21,2,0)
displayed.
"^DD",3.9,3.9,.01,21,3,0)
Leading and trailing blanks are deleted.
"^DD",3.9,3.9,.01,21,4,0)
Any sequence of 3 or more blanks is reduced to 2 blanks.
"^DD",3.9,3.9,.01,23,0)
^^3^3^2970811^
"^DD",3.9,3.9,.01,23,1,0)
If the message happens to be a local reply, the message subject will be "R"
"^DD",3.9,3.9,.01,23,2,0)
followed by the message number of the original message for which this is a
"^DD",3.9,3.9,.01,23,3,0)
response.  This text contains ~U~ if the subject contains an up-arrow. 
"^DD",3.9,3.9,.01,"DEL",1,0)
I 1 W *7,"   DELETION ONLY ALLOWED THROUGH MANAGER 'PURGE'"
"^DD",3.9,3.9,.01,"DT")
2980526
"^DD",3.9,3.9,1,0)
FROM^RFI^^0;2^K:$L(X)>70!($L(X)<0) X
"^DD",3.9,3.9,1,.1)
The User number of who the message is from, or his network name if remote
"^DD",3.9,3.9,1,1,0)
^.1^^0
"^DD",3.9,3.9,1,3)
Answer must be 0-70 characters in length.
"^DD",3.9,3.9,1,21,0)
^^4^4^2970813^^^^
"^DD",3.9,3.9,1,21,1,0)
This is who the message is from.  In the case of
"^DD",3.9,3.9,1,21,2,0)
a local message, this is the internal entry number of the user in the
"^DD",3.9,3.9,1,21,3,0)
NEW PERSON file.  In the case of a networked message, it is the user's full
"^DD",3.9,3.9,1,21,4,0)
network address, in the format <user@domain>.
"^DD",3.9,3.9,1,23,0)
^^1^1^2970813^^
"^DD",3.9,3.9,1,23,1,0)
In a future patch, the field should be made longer, perhaps to 99.
"^DD",3.9,3.9,1,"DT")
2970813
"^DD",3.9,3.9,1.1,0)
SENDER^FI^^0;4^K:$L(X)>30!($L(X)<0) X
"^DD",3.9,3.9,1.1,.1)
The person who entered the message, if not the same as FROM
"^DD",3.9,3.9,1.1,3)
ANSWER MUST BE 0-30 CHARACTERS IN LENGTH
"^DD",3.9,3.9,1.1,21,0)
^^5^5^2990106^^^^
"^DD",3.9,3.9,1.1,21,1,0)
If the message is sent by a surrogate, this field holds the surrogate's
"^DD",3.9,3.9,1.1,21,2,0)
identity.
"^DD",3.9,3.9,1.1,21,3,0)

"^DD",3.9,3.9,1.1,21,4,0)
It is displayed on the message header in parentheses, with the text
"^DD",3.9,3.9,1.1,21,5,0)
SENDER: preceding the sender's name.
"^DD",3.9,3.9,1.1,"DT")
2851004
"^DD",3.9,3.9,1.3,0)
CONFIRMATION REQUESTED?^S^y:YES;n:NO;^0;5^Q
"^DD",3.9,3.9,1.3,.1)

"^DD",3.9,3.9,1.3,21,0)
^^2^2^2860211^^
"^DD",3.9,3.9,1.3,21,1,0)
This specifies whether or not the sender of a message will get an
"^DD",3.9,3.9,1.3,21,2,0)
acknowledgement when the message is read by the recipient.
"^DD",3.9,3.9,1.3,"DT")
2970728
"^DD",3.9,3.9,1.35,0)
ORIGINAL MESSAGE^P3.9'^XMB(3.9,^0;8^Q
"^DD",3.9,3.9,1.35,.1)
Original Message Number response points to
"^DD",3.9,3.9,1.35,3)

"^DD",3.9,3.9,1.35,21,0)
^^2^2^2970811^^^^
"^DD",3.9,3.9,1.35,21,1,0)
This field is used for responses only.
"^DD",3.9,3.9,1.35,21,2,0)
If this message is a response, this field points to the original message.
"^DD",3.9,3.9,1.35,"DT")
2880722
"^DD",3.9,3.9,1.4,0)
SENT DATE/TIME^D^^0;3^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",3.9,3.9,1.4,.1)
The date and time the message was sent.
"^DD",3.9,3.9,1.4,1,0)
^.1^^0
"^DD",3.9,3.9,1.4,21,0)
^^6^6^2970730^^^^
"^DD",3.9,3.9,1.4,21,1,0)
This is the date and time at which this message was sent.  It relates
"^DD",3.9,3.9,1.4,21,2,0)
to the completion of the sending process, not the beginning, as previous
"^DD",3.9,3.9,1.4,21,3,0)
versions did.
"^DD",3.9,3.9,1.4,21,4,0)
Initiation and initial sending can be separated by days, e.g. due to
"^DD",3.9,3.9,1.4,21,5,0)
equipment failure or illness of the sender, the time of the first send,
"^DD",3.9,3.9,1.4,21,6,0)
rather than the time message editing began, is retained.
"^DD",3.9,3.9,1.4,23,0)
^^5^5^2970811^
"^DD",3.9,3.9,1.4,23,1,0)
In a future patch, as remote messages arrive, their date should be
"^DD",3.9,3.9,1.4,23,2,0)
converted from clear text to FM, using CONVERT^XMA32A.
"^DD",3.9,3.9,1.4,23,3,0)
If conversion is not possible, the current date/time should be used.
"^DD",3.9,3.9,1.4,23,4,0)
Currently, the DD to the contrary, the clear text version of the date
"^DD",3.9,3.9,1.4,23,5,0)
of the remote message is placed in this field.
"^DD",3.9,3.9,1.4,"DT")
2970730
"^DD",3.9,3.9,1.6,0)
PURGE DATE^D^^0;6^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",3.9,3.9,1.6,3)
Enter a date in the future when this message should be purged.
"^DD",3.9,3.9,1.6,21,0)
^^2^2^2990113^^^^
"^DD",3.9,3.9,1.6,21,1,0)
This message will be set for all recipients to automatically delete on
"^DD",3.9,3.9,1.6,21,2,0)
this date.
"^DD",3.9,3.9,1.6,23,0)
^^3^3^2990113^^^
"^DD",3.9,3.9,1.6,23,1,0)
As the message is delivered to each recipient, the AUTOMATIC DELETE DATE
"^DD",3.9,3.9,1.6,23,2,0)
for the message in the recipient's basket is set to this purge date.
"^DD",3.9,3.9,1.6,23,3,0)
The recipient is free, of course, to change the AUTOMATIC DELETE DATE.
"^DD",3.9,3.9,1.6,"DT")
2990106
"^DD",3.9,3.9,1.7,0)
MESSAGE TYPE^F^^0;7^K:$L(X)>3!($L(X)<1) X
"^DD",3.9,3.9,1.7,.1)

"^DD",3.9,3.9,1.7,3)
Answer must be 1-3 characters in length.
"^DD",3.9,3.9,1.7,21,0)
^^16^16^2990225^^^^
"^DD",3.9,3.9,1.7,21,1,0)
This field enables MailMan to differentiate among types of messages.
"^DD",3.9,3.9,1.7,21,2,0)
Spooled documents must be handled partially through an interface to the
"^DD",3.9,3.9,1.7,21,3,0)
'spooler'.  Word processing documents are handled differently from
"^DD",3.9,3.9,1.7,21,4,0)
ordinary messages.
"^DD",3.9,3.9,1.7,21,5,0)
 
"^DD",3.9,3.9,1.7,21,6,0)
This field is set within MailMan to any combination of the valid codes,
"^DD",3.9,3.9,1.7,21,7,0)
e.g. "XPB" would indicate a PackMan message which includes a BLOB,
"^DD",3.9,3.9,1.7,21,8,0)
and marked by the user for priority delivery.
"^DD",3.9,3.9,1.7,21,9,0)
TYPE   MEANING
"^DD",3.9,3.9,1.7,21,10,0)
D      Document
"^DD",3.9,3.9,1.7,21,11,0)
S      Spooled Document
"^DD",3.9,3.9,1.7,21,12,0)
X      DIFROM (PackMan) Installable Message
"^DD",3.9,3.9,1.7,21,13,0)
O      ODIF Format
"^DD",3.9,3.9,1.7,21,14,0)
B      BLOB (eg. MIME) contained within
"^DD",3.9,3.9,1.7,21,15,0)
K      KIDS Distribution
"^DD",3.9,3.9,1.7,21,16,0)
P      Priority
"^DD",3.9,3.9,1.7,"DT")
2970730
"^DD",3.9,3.9,1.8,0)
SCRAMBLE HINT^F^^0;10^K:$L(X)>40!($L(X)<1) X
"^DD",3.9,3.9,1.8,.1)

"^DD",3.9,3.9,1.8,3)
Answer must be 1-40 characters in length.
"^DD",3.9,3.9,1.8,21,0)
^^7^7^2970225^^^^
"^DD",3.9,3.9,1.8,21,1,0)
A scramble hint is used to suggest to the reader what the scramble password is.
"^DD",3.9,3.9,1.8,21,2,0)
Since the password is not recoverable after it is entered, and since the reader
"^DD",3.9,3.9,1.8,21,3,0)
must supply the password in order to read the message, the hint can be a
"^DD",3.9,3.9,1.8,21,4,0)
helpful reminder to the reader of the message. 
"^DD",3.9,3.9,1.8,21,5,0)

"^DD",3.9,3.9,1.8,21,6,0)
The hint will be shown to the reader just before the reader is asked to enter
"^DD",3.9,3.9,1.8,21,7,0)
the password.
"^DD",3.9,3.9,1.8,"DT")
2970225
"^DD",3.9,3.9,1.85,0)
SCRAMBLE KEY^FI^^K;E1,200^K:$L(X)>200!($L(X)<3) X
"^DD",3.9,3.9,1.85,3)
Answer must be 3-20 characters in length.
"^DD",3.9,3.9,1.85,21,0)
^^3^3^2970225^^^^
"^DD",3.9,3.9,1.85,21,1,0)
The scramble password is a secret code which must be entered by the reader in
"^DD",3.9,3.9,1.85,21,2,0)
order to see the message.  Upper and lower case characters are treated the
"^DD",3.9,3.9,1.85,21,3,0)
same.  (The password is not case sensitive.) 
"^DD",3.9,3.9,1.85,23,0)
^^3^3^2970225^^^
"^DD",3.9,3.9,1.85,23,1,0)
The key is stored in scrambled form.  First character=1 indicates that
"^DD",3.9,3.9,1.85,23,2,0)
scrambling is done in standard bazaries cylinder form.  Other first
"^DD",3.9,3.9,1.85,23,3,0)
characters are reserved.
"^DD",3.9,3.9,1.85,"DT")
2970225
"^DD",3.9,3.9,1.95,0)
CLOSED MESSAGE?^S^y:YES;n:NO;^0;9^Q
"^DD",3.9,3.9,1.95,.1)
 
"^DD",3.9,3.9,1.95,3)
If closed, message may not be forwarded or copied by recipients.
"^DD",3.9,3.9,1.95,21,0)
^^2^2^2881121^^^^
"^DD",3.9,3.9,1.95,21,1,0)
This field, if set to 'yes', means that recipients may not forward or
"^DD",3.9,3.9,1.95,21,2,0)
copy the message.  
"^DD",3.9,3.9,1.95,"DT")
2850419
"^DD",3.9,3.9,1.96,0)
CONFIDENTIAL?^S^y:YES;n:NO;^0;11^Q
"^DD",3.9,3.9,1.96,3)
If confidential, surrogates may not read message.
"^DD",3.9,3.9,1.96,21,0)
^^2^2^2851004^
"^DD",3.9,3.9,1.96,21,1,0)
This field, if set to "yes", means that surrogates of the recipients
"^DD",3.9,3.9,1.96,21,2,0)
may not read this message.
"^DD",3.9,3.9,1.96,"DT")
2850419
"^DD",3.9,3.9,1.97,0)
INFORMATION ONLY?^S^y:YES;n:NO;^0;12^Q
"^DD",3.9,3.9,1.97,3)
If "YES", the message will be considered "INFORMATION ONLY" for all recipients.
"^DD",3.9,3.9,1.97,21,0)
^^8^8^2860210^
"^DD",3.9,3.9,1.97,21,1,0)
This field, if set to "YES", will cause all recipients to be considered
"^DD",3.9,3.9,1.97,21,2,0)
"INFORMATION ONLY", which disables responses to the message. 
"^DD",3.9,3.9,1.97,21,3,0)
 
"^DD",3.9,3.9,1.97,21,4,0)
If a sender wishes to individually restrict responses, "INFO:" before
"^DD",3.9,3.9,1.97,21,5,0)
the recipient's names will restrict their responses.
"^DD",3.9,3.9,1.97,21,6,0)
 
"^DD",3.9,3.9,1.97,21,7,0)
Messages which are broadcast (by naming a recipient "*"), are automatically
"^DD",3.9,3.9,1.97,21,8,0)
set to INFORMATION ONLY.
"^DD",3.9,3.9,1.97,"DT")
2860210
"^DD",3.9,3.9,2,0)
RECIPIENT^3.91A^^1;0
"^DD",3.9,3.9,2,21,0)
^^4^4^2970902^^^^
"^DD",3.9,3.9,2,21,1,0)
This is a list of all recipients of this message.  MailMan automatically
"^DD",3.9,3.9,2,21,2,0)
tracks each recipient's progress through the response chain, when
"^DD",3.9,3.9,2,21,3,0)
they last read it, who forwarded or copied the message, etc.  This 
"^DD",3.9,3.9,2,21,4,0)
information is displayed with the Query option after reading the message.
"^DD",3.9,3.9,3,0)
TEXT^3.92A^^2;0
"^DD",3.9,3.9,3,21,0)
^^2^2^2931214^^^^
"^DD",3.9,3.9,3,21,1,0)
This is the actual text of the message.  It is stored without the
"^DD",3.9,3.9,3,21,2,0)
wrap-around logic, in a line-by-line format.
"^DD",3.9,3.9,8,0)
RESPONSE^3.9001PA^^3;0
"^DD",3.9,3.9,8,.1)
LIST OF RESPONSES TO THIS MESSAGE
"^DD",3.9,3.9,8,21,0)
^^3^3^2881121^^^
"^DD",3.9,3.9,8,21,1,0)
This is a list of the responses to the message.  Each response is
"^DD",3.9,3.9,8,21,2,0)
a separate message, with a subject of "R" followed by this response
"^DD",3.9,3.9,8,21,3,0)
number.
"^DD",3.9,3.9,9,0)
INCOMING MESSAGE ID^FI^^5;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>110!($L(X)<2) X
"^DD",3.9,3.9,9,1,0)
^.1
"^DD",3.9,3.9,9,1,1,0)
3.9^AI^MUMPS
"^DD",3.9,3.9,9,1,1,1)
I X["@",$L($P(X,"@",1)),$L($P(X,"@",2)) S ^XMBX(3.9,"AI",$E($P(X,"@",2),1,64),$E($P(X,"@",1),1,64),DA)=DT
"^DD",3.9,3.9,9,1,1,2)
Q
"^DD",3.9,3.9,9,1,1,"%D",0)
^^12^12^2990218^^^^
"^DD",3.9,3.9,9,1,1,"%D",1,0)
This cross reference keeps track of messages that have already been
"^DD",3.9,3.9,9,1,1,"%D",2,0)
received from other sites.
"^DD",3.9,3.9,9,1,1,"%D",3,0)

"^DD",3.9,3.9,9,1,1,"%D",4,0)
This index is used to retrieve remote messages which have been transmitted
"^DD",3.9,3.9,9,1,1,"%D",5,0)
from other domains.  For example, if message 123 from loma-linda has
"^DD",3.9,3.9,9,1,1,"%D",6,0)
been sent to another site, that other site could inquire against 
"^DD",3.9,3.9,9,1,1,"%D",7,0)
message ID "loma-linda@123", to find out if the message had been 
"^DD",3.9,3.9,9,1,1,"%D",8,0)
received yet.
"^DD",3.9,3.9,9,1,1,"%D",9,0)
 
"^DD",3.9,3.9,9,1,1,"%D",10,0)
This index is also used to prevent messages from looping around the
"^DD",3.9,3.9,9,1,1,"%D",11,0)
network.  The MailMan receiver will not allow the same message to be
"^DD",3.9,3.9,9,1,1,"%D",12,0)
received twice at the same site.
"^DD",3.9,3.9,9,1,1,"DT")
2990218
"^DD",3.9,3.9,9,3)
Answer must be 2-110 characters in length.
"^DD",3.9,3.9,9,21,0)
^^4^4^2990122^^^^
"^DD",3.9,3.9,9,21,1,0)
If this is a message which has been received from a remote site,
"^DD",3.9,3.9,9,21,2,0)
its Message ID, as contained in the message header, is stored here.
"^DD",3.9,3.9,9,21,3,0)

"^DD",3.9,3.9,9,21,4,0)
Its format is usually <message ID@domain name>.
"^DD",3.9,3.9,9,"DT")
2990218
"^DD",3.9,3.9,9.5,0)
IN REPLY TO REMOTE MESSAGE ID^F^^IN;1^K:$L(X)>110!($L(X)<2) X
"^DD",3.9,3.9,9.5,3)
Answer must be 2-110 characters in length.
"^DD",3.9,3.9,9.5,21,0)
^^4^4^2990122^^^^
"^DD",3.9,3.9,9.5,21,1,0)
When a user responds to a message from a remote user,
"^DD",3.9,3.9,9.5,21,2,0)
the INCOMING MESSAGE ID (field 9) of the original message
"^DD",3.9,3.9,9.5,21,3,0)
is copied and placed here.
"^DD",3.9,3.9,9.5,21,4,0)
Its format is <domain@message id>.
"^DD",3.9,3.9,9.5,"DT")
2970728
"^DD",3.9,3.9,10,0)
ADDRESSED TO^3.911A^^6;0
"^DD",3.9,3.9,10,21,0)
^^6^6^2970516^^^^
"^DD",3.9,3.9,10,21,1,0)
There are two parts to addressing a message.  The first part occurs when
"^DD",3.9,3.9,10,21,2,0)
the user enters the 'names' (addresses) to which the message will be sent.
"^DD",3.9,3.9,10,21,3,0)
The second part occurs when Mail Groups are 'Expanded'.  The 'names' the
"^DD",3.9,3.9,10,21,4,0)
user enters will be recorded here.  The expanded list is in a multiple
"^DD",3.9,3.9,10,21,5,0)
titled 'Recipients'.  Old messages may not have 'ADDRESSED TO' data if they
"^DD",3.9,3.9,10,21,6,0)
were originated before MailMan recorded these two pieces of data separately.
"^DD",3.9,3.9,14,0)
LATER DELIVERY TO^3.914^^7;0
"^DD",3.9,3.9,21,0)
DELIVERY BASKET^F^^.5;1^K:$L(X)>30!($L(X)<2) X
"^DD",3.9,3.9,21,3)
Answer must be 2-30 characters in length.
"^DD",3.9,3.9,21,21,0)
^^2^2^2980515^^^
"^DD",3.9,3.9,21,21,1,0)
The Delivery Basket is the basket into which the message will be delivered
"^DD",3.9,3.9,21,21,2,0)
for each recipient.  It overrides any filters.
"^DD",3.9,3.9,21,"DT")
2980513
"^DD",3.9,3.9,31,0)
LOCAL CREATE DATE^D^^.6;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",3.9,3.9,31,1,0)
^.1
"^DD",3.9,3.9,31,1,1,0)
3.9^C
"^DD",3.9,3.9,31,1,1,1)
S ^XMB(3.9,"C",$E(X,1,30),DA)=""
"^DD",3.9,3.9,31,1,1,2)
K ^XMB(3.9,"C",$E(X,1,30),DA)
"^DD",3.9,3.9,31,1,1,"%D",0)
^^2^2^2980917^
"^DD",3.9,3.9,31,1,1,"%D",1,0)
This xref is used by the date purge and by the unreferenced messages
"^DD",3.9,3.9,31,1,1,"%D",2,0)
purge.
"^DD",3.9,3.9,31,1,1,"DT")
2980917
"^DD",3.9,3.9,31,3)
Enter the date this message was created.
"^DD",3.9,3.9,31,21,0)
^^2^2^2980918^^
"^DD",3.9,3.9,31,21,1,0)
This is the date this message was created and added to the message file.
"^DD",3.9,3.9,31,21,2,0)
It is used, via the "C" xref, to select messages for purging.
"^DD",3.9,3.9,31,"DT")
2980917
"^DD",3.9,3.9,41,0)
ENVELOPE FROM^F^^.7;1^K:$L(X)>99!($L(X)<1) X
"^DD",3.9,3.9,41,3)
Answer must be 1-99 characters in length.
"^DD",3.9,3.9,41,21,0)
^^5^5^2981015^
"^DD",3.9,3.9,41,21,1,0)
This is the 'from' as stated in the message envelope on an incoming
"^DD",3.9,3.9,41,21,2,0)
network message.
"^DD",3.9,3.9,41,21,3,0)
HELO ...
"^DD",3.9,3.9,41,21,4,0)
MAIL FROM:<envelope from>
"^DD",3.9,3.9,41,21,5,0)
RCPT TO: ...
"^DD",3.9,3.9,41,"DT")
2981015
"^DD",3.9,3.9,2005,0)
OBJECTS - OTHER BODY PARTS^3.92005P^^2005;0
"^DD",3.9,3.9,2005,21,0)
^^2^2^2931214^
"^DD",3.9,3.9,2005,21,1,0)
Pointers to the Object file are stored here as attachments
"^DD",3.9,3.9,2005,21,2,0)
to multimedia messages.
"^DD",3.9,3.9,2005,23,0)
^^1^1^2931214^
"^DD",3.9,3.9,2005,23,1,0)
The pointers in this field point at the OBJECT file (2005).
"^DD",3.9,3.9001,0)
RESPONSE SUB-FIELD^NL^.01^1
"^DD",3.9,3.9001,0,"DT")
2940705
"^DD",3.9,3.9001,0,"NM","RESPONSE")

"^DD",3.9,3.9001,0,"UP")
3.9
"^DD",3.9,3.9001,.01,0)
RESPONSE^MP3.9'I^XMB(3.9,^0;1^Q
"^DD",3.9,3.9001,.01,.1)
This is a list of the responses to this message.
"^DD",3.9,3.9001,.01,3)

"^DD",3.9,3.9001,.01,21,0)
^^1^1^2851009^
"^DD",3.9,3.9001,.01,21,1,0)
This is a response to this message.
"^DD",3.9,3.9001,.01,"DT")
2851004
"^DD",3.9,3.91,0)
RECIPIENT SUB-FIELD^NL^14^19
"^DD",3.9,3.91,0,"DT")
2970811
"^DD",3.9,3.91,0,"IX","AFAX",3.91,13)

"^DD",3.9,3.91,0,"IX","AQUEUE",3.91,6)

"^DD",3.9,3.91,0,"IX","C",3.91,.01)

"^DD",3.9,3.91,0,"NM","RECIPIENT")

"^DD",3.9,3.91,0,"UP")
3.9
"^DD",3.9,3.91,.01,0)
RECIPIENT^MFI^^0;1^K:$L(X)>85!($L(X)<1) X
"^DD",3.9,3.91,.01,.1)
The recipient user number or network address
"^DD",3.9,3.91,.01,1,0)
^.1
"^DD",3.9,3.91,.01,1,1,0)
3.91^C
"^DD",3.9,3.91,.01,1,1,1)
S ^XMB(3.9,DA(1),1,"C",$E(X,1,30),DA)=""
"^DD",3.9,3.91,.01,1,1,2)
K ^XMB(3.9,DA(1),1,"C",$E(X,1,30),DA)
"^DD",3.9,3.91,.01,1,1,"DT")
2960305
"^DD",3.9,3.91,.01,3)
Answer must be 1-85 characters in length.
"^DD",3.9,3.91,.01,21,0)
^^1^1^2970730^^^^
"^DD",3.9,3.91,.01,21,1,0)
The name of a recipient of this message.
"^DD",3.9,3.91,.01,23,0)
^^1^1^2970811^
"^DD",3.9,3.91,.01,23,1,0)
In a future patch, the field should be lengthened, perhaps to 99.
"^DD",3.9,3.91,.01,"DT")
2970730
"^DD",3.9,3.91,1,0)
LAST RESPONSE READ^NJ5,0^^0;2^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",3.9,3.91,1,.1)
Last response read, if this is a shared response message.
"^DD",3.9,3.91,1,1,0)
^.1^^0
"^DD",3.9,3.91,1,3)
Type a Number between 0 and 99999, 0 Decimal Digits
"^DD",3.9,3.91,1,21,0)
^^3^3^2970728^^^^
"^DD",3.9,3.91,1,21,1,0)
The last response which this recipient read.
"^DD",3.9,3.91,1,21,2,0)

"^DD",3.9,3.91,1,21,3,0)
It actually points into 3.9001, the Response multiple for this message.
"^DD",3.9,3.91,1,"DT")
2970728
"^DD",3.9,3.91,2,0)
LAST READ DATE/TIME^D^^0;3^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",3.9,3.91,2,.1)
Date/Time message was last read by recipient
"^DD",3.9,3.91,2,3)

"^DD",3.9,3.91,2,21,0)
^^1^1^2970730^^^^
"^DD",3.9,3.91,2,21,1,0)
The date and time this recipient last read this message.
"^DD",3.9,3.91,2,"DT")
2970730
"^DD",3.9,3.91,3,0)
REMOTE MESSAGE ID^F^^0;4^K:$L(X)>45!($L(X)<3) X
"^DD",3.9,3.91,3,.1)
The identifier of the message as accepted by the remote site
"^DD",3.9,3.91,3,1,0)
^.1^^0
"^DD",3.9,3.91,3,3)
Answer must be 3-45 characters in length.
"^DD",3.9,3.91,3,21,0)
^^2^2^2970730^^^
"^DD",3.9,3.91,3,21,1,0)
The identifier of the message at the remote location.
"^DD",3.9,3.91,3,21,2,0)
Format: message ID@site
"^DD",3.9,3.91,3,23,0)
^^1^1^2970811^
"^DD",3.9,3.91,3,23,1,0)
In a future patch, this field should be lengthened, perhaps to 110 chars.
"^DD",3.9,3.91,3,"DT")
2970728
"^DD",3.9,3.91,4,0)
TRANSMISSION DATE/TIME^D^^0;5^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",3.9,3.91,4,.1)
THE DATE/TIME A REMOTE MESSAGE WAS SENT 
"^DD",3.9,3.91,4,21,0)
^^1^1^2970730^^
"^DD",3.9,3.91,4,21,1,0)
The date and time the remote message was transmitted.
"^DD",3.9,3.91,4,"DT")
2970730
"^DD",3.9,3.91,5,0)
STATUS^F^^0;6^K:$L(X)>30!($L(X)<1) X
"^DD",3.9,3.91,5,.1)
Any error messages or comments by the receiver, if not delivered
"^DD",3.9,3.91,5,3)
ANSWER MUST BE 1-30 CHARACTERS IN LENGTH
"^DD",3.9,3.91,5,21,0)
^^12^12^2970902^^
"^DD",3.9,3.91,5,21,1,0)
This field holds the status of the recipient, if the recipient is other
"^DD",3.9,3.91,5,21,2,0)
than a local user.  If this is a device, the status is "Awaiting Device"
"^DD",3.9,3.91,5,21,3,0)
until the device has printed the message.  If this is a server, the
"^DD",3.9,3.91,5,21,4,0)
status will be "Awaiting Server" until the server has read the message.
"^DD",3.9,3.91,5,21,5,0)
In either of the above cases, the status becomes "done" when the process
"^DD",3.9,3.91,5,21,6,0)
is complete, and "Last read" field describes when the process was complete.
"^DD",3.9,3.91,5,21,7,0)
 
"^DD",3.9,3.91,5,21,8,0)
If the recipient is a remote user, the status is "awaiting transmission"
"^DD",3.9,3.91,5,21,9,0)
and the Path field names the queue in which the message is waiting.  When
"^DD",3.9,3.91,5,21,10,0)
the message has been sent, the Transmission date is set, the remote message
"^DD",3.9,3.91,5,21,11,0)
ID is set to the other domain's message number (providing bi-directional
"^DD",3.9,3.91,5,21,12,0)
linkage of messages), and the Path field is cleared.
"^DD",3.9,3.91,5,"DT")
2840120
"^DD",3.9,3.91,6,0)
PATH^P4.2'^DIC(4.2,^0;7^Q
"^DD",3.9,3.91,6,1,0)
^.1
"^DD",3.9,3.91,6,1,1,0)
3.91^AQUEUE
"^DD",3.9,3.91,6,1,1,1)
S ^XMB(3.9,DA(1),1,"AQUEUE",$E(X,1,30),DA)=""
"^DD",3.9,3.91,6,1,1,2)
K ^XMB(3.9,DA(1),1,"AQUEUE",$E(X,1,30),DA)
"^DD",3.9,3.91,6,1,1,"%D",0)
^^2^2^2920920^
"^DD",3.9,3.91,6,1,1,"%D",1,0)
This cross reference makes it possible for network mail transmissions to
"^DD",3.9,3.91,6,1,1,"%D",2,0)
immediately find the recipients to transmit a message to.
"^DD",3.9,3.91,6,1,1,"DT")
2920920
"^DD",3.9,3.91,6,21,0)
^^4^4^2840410^
"^DD",3.9,3.91,6,21,1,0)
This field points to the queue in which this message resides.  After
"^DD",3.9,3.91,6,21,2,0)
transmission, the REMOTE MESSAGE ID field holds the message number and
"^DD",3.9,3.91,6,21,3,0)
site to which the message was transmitted (which may be only a relay
"^DD",3.9,3.91,6,21,4,0)
point).
"^DD",3.9,3.91,6,"DT")
2920920
"^DD",3.9,3.91,6.5,0)
TYPE OF RECIPIENT^S^C:cc;I:Info;^T;1^Q
"^DD",3.9,3.91,6.5,21,0)
^^10^10^2990225^^^^
"^DD",3.9,3.91,6.5,21,1,0)
This field indicates what type of recipient this is.
"^DD",3.9,3.91,6.5,21,2,0)
 
"^DD",3.9,3.91,6.5,21,3,0)
CC:  indicates that the recipient is being sent a copy, but is not the
"^DD",3.9,3.91,6.5,21,4,0)
primary recipient.  He may reply.
"^DD",3.9,3.91,6.5,21,5,0)
 
"^DD",3.9,3.91,6.5,21,6,0)
INFO: indicates that the recipient may not reply to the message; the
"^DD",3.9,3.91,6.5,21,7,0)
message is being transmitted to him for information purposes only.
"^DD",3.9,3.91,6.5,21,8,0)
 
"^DD",3.9,3.91,6.5,21,9,0)
These flags are set by the "Send to:" prompt by including them before a
"^DD",3.9,3.91,6.5,21,10,0)
recipient name.  "CC:JONES" would put JONES on the CC: list.
"^DD",3.9,3.91,6.5,21,11,0)
 
"^DD",3.9,3.91,6.5,21,12,0)
These flags are set by the "Send to:" prompt by including them before a
"^DD",3.9,3.91,6.5,21,13,0)
message: "CC:JONES" would put JONES on the CC: list.
"^DD",3.9,3.91,6.5,"DT")
2970811
"^DD",3.9,3.91,6.6,0)
APPROVAL^F^^T;2^K:$L(X)>65!($L(X)<1) X
"^DD",3.9,3.91,6.6,3)
ANSWER MUST BE 1-65 CHARACTERS IN LENGTH
"^DD",3.9,3.91,6.6,21,0)
^^2^2^2841130^
"^DD",3.9,3.91,6.6,21,1,0)
This field is set whenever the  the recipient is named as a THRU: type, and issues the
"^DD",3.9,3.91,6.6,21,2,0)
approval command after reading it.
"^DD",3.9,3.91,6.6,"DT")
2841130
"^DD",3.9,3.91,7,0)
TERMINATION DATE^D^^D;1^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",3.9,3.91,7,21,0)
^^7^7^2900319^^^
"^DD",3.9,3.91,7,21,1,0)
This field, if set, inhibits MailMan from sending future replies to this
"^DD",3.9,3.91,7,21,2,0)
message, allowing him to "drop out" of a conversation.  This is accomplished
"^DD",3.9,3.91,7,21,3,0)
with the "Terminate" option.
"^DD",3.9,3.91,7,21,4,0)
 
"^DD",3.9,3.91,7,21,5,0)
This field is displayed whenever a recipient queries the message.  The
"^DD",3.9,3.91,7,21,6,0)
drop-outs will have the notation "Terminated: mm/dd/yy" in their status
"^DD",3.9,3.91,7,21,7,0)
line.
"^DD",3.9,3.91,7,"DT")
2840424
"^DD",3.9,3.91,8,0)
FORWARDED BY^FI^^F;1^K:$L(X)>110!($L(X)<1) X
"^DD",3.9,3.91,8,3)
Answer must be 1-110 characters in length.
"^DD",3.9,3.91,8,21,0)
^^3^3^2970728^^^
"^DD",3.9,3.91,8,21,1,0)
When a message is forwarded to another user, this field names the
"^DD",3.9,3.91,8,21,2,0)
person who did the forwarding, along with the date and time that this
"^DD",3.9,3.91,8,21,3,0)
was done.  It is displayed in the query option after reading.
"^DD",3.9,3.91,8,"DT")
2970728
"^DD",3.9,3.91,8.01,0)
FORWARDED BY (XMDUZ)^P200'^VA(200,^F;2^Q
"^DD",3.9,3.91,8.01,3)
Who forwarded the message to this recipient?
"^DD",3.9,3.91,8.01,21,0)
^^2^2^2970728^^
"^DD",3.9,3.91,8.01,21,1,0)
This field uses the XMDUZ variable to identify the user who
"^DD",3.9,3.91,8.01,21,2,0)
forwarded the message.
"^DD",3.9,3.91,8.01,"DT")
2970728
"^DD",3.9,3.91,8.5,0)
COPIED DATE/TIME^F^^C;1^K:$L(X)>15!($L(X)<1) X
"^DD",3.9,3.91,8.5,3)
Answer must be 1-15 characters in length.
"^DD",3.9,3.91,8.5,21,0)
^^3^3^2970728^^^
"^DD",3.9,3.91,8.5,21,1,0)
When a message is copied by a user, this field indicates the date and
"^DD",3.9,3.91,8.5,21,2,0)
time (in external format) at which this was done.
"^DD",3.9,3.91,8.5,21,3,0)
It is displayed in the query option after reading the message.
"^DD",3.9,3.91,8.5,"DT")
2970723
"^DD",3.9,3.91,9,0)
NETWORK TRANSMISSION TIME^NJ6,0I^^0;8^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",3.9,3.91,9,3)
Type a Number between 0 and 999999, 0 Decimal Digits
"^DD",3.9,3.91,9,21,0)
^^2^2^2970730^^
"^DD",3.9,3.91,9,21,1,0)
This field records the elapsed time (in seconds) during a network
"^DD",3.9,3.91,9,21,2,0)
transmission.
"^DD",3.9,3.91,9,"DT")
2880222
"^DD",3.9,3.91,10,0)
PRIORITY RESPONSES?^S^0:YES;1:NO;^0;9^Q
"^DD",3.9,3.91,10,21,0)
^^5^5^2980729^^^^
"^DD",3.9,3.91,10,21,1,0)
This field overrides the MESSAGE TYPE field in the zero node of the 
"^DD",3.9,3.91,10,21,2,0)
message, but only if it contains a "P".  In this way, some recipients can 
"^DD",3.9,3.91,10,21,3,0)
keep receiving responses to a 'Priority Message' as priority mail, while
"^DD",3.9,3.91,10,21,4,0)
others may choose not to.  One cannot, however, force the responses of an
"^DD",3.9,3.91,10,21,5,0)
ordinary message to be delivered as 'Priority Mail'.
"^DD",3.9,3.91,10,"DT")
2970728
"^DD",3.9,3.91,11,0)
FIRST READ DATE/TIME^D^^0;10^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",3.9,3.91,11,21,0)
^^2^2^2970730^^^
"^DD",3.9,3.91,11,21,1,0)
Into this field is set the date and time that a message was first seen
"^DD",3.9,3.91,11,21,2,0)
by the recipient.
"^DD",3.9,3.91,11,"DT")
2970730
"^DD",3.9,3.91,12,0)
SURROGATE READER^F^^S;1^K:$L(X)>35!($L(X)<3) X
"^DD",3.9,3.91,12,3)
Answer must be 3-35 characters in length.
"^DD",3.9,3.91,12,21,0)
^^1^1^2960403^^
"^DD",3.9,3.91,12,21,1,0)
This is the name of the surrogate who last read this message.
"^DD",3.9,3.91,12,"DT")
2960403
"^DD",3.9,3.91,13,0)
FAX RECIPIENT^P589499'^AKF("FAXR",^0;11^Q
"^DD",3.9,3.91,13,1,0)
^.1
"^DD",3.9,3.91,13,1,1,0)
3.91^AFAX
"^DD",3.9,3.91,13,1,1,1)
S ^XMB(3.9,DA(1),1,"AFAX",$E(X,1,30),DA)=""
"^DD",3.9,3.91,13,1,1,2)
K ^XMB(3.9,DA(1),1,"AFAX",$E(X,1,30),DA)
"^DD",3.9,3.91,13,1,1,"%D",0)
^^2^2^2970114^^
"^DD",3.9,3.91,13,1,1,"%D",1,0)
This cross reference makes it possible for MailMan to immediately find the
"^DD",3.9,3.91,13,1,1,"%D",2,0)
recipients to fax a message to. 
"^DD",3.9,3.91,13,1,1,"DT")
2970110
"^DD",3.9,3.91,13,3)
Enter the fax recipient
"^DD",3.9,3.91,13,21,0)
^^4^4^2970211^^^^
"^DD",3.9,3.91,13,21,1,0)
When the message is addressed to a fax recipient, this field points to the fax
"^DD",3.9,3.91,13,21,2,0)
rolodex file.  After the message is handed off to the fax software,
"^DD",3.9,3.91,13,21,3,0)
the pointer in this field is deleted and the Fax ID field is set to the fax ID
"^DD",3.9,3.91,13,21,4,0)
number assigned to it by the fax software.
"^DD",3.9,3.91,13,"DT")
2970211
"^DD",3.9,3.91,14,0)
FAX ID^F^^0;12^K:$L(X)>14!($L(X)<1) X
"^DD",3.9,3.91,14,3)
Answer must be 1-14 characters in length.
"^DD",3.9,3.91,14,21,0)
^^1^1^2970211^
"^DD",3.9,3.91,14,21,1,0)
This is the fax ID as assigned by the fax software (AKF*).
"^DD",3.9,3.91,14,"DT")
2970211
"^DD",3.9,3.911,0)
ADDRESSED TO SUB-FIELD^^1^2
"^DD",3.9,3.911,0,"DT")
2970516
"^DD",3.9,3.911,0,"IX","B",3.911,.01)

"^DD",3.9,3.911,0,"NM","ADDRESSED TO")

"^DD",3.9,3.911,0,"UP")
3.9
"^DD",3.9,3.911,.01,0)
ADDRESSED TO^MF^^0;1^K:$L(X)>99!($L(X)<1) X
"^DD",3.9,3.911,.01,1,0)
^.1
"^DD",3.9,3.911,.01,1,1,0)
3.911^B
"^DD",3.9,3.911,.01,1,1,1)
S ^XMB(3.9,DA(1),6,"B",$E(X,1,30),DA)=""
"^DD",3.9,3.911,.01,1,1,2)
K ^XMB(3.9,DA(1),6,"B",$E(X,1,30),DA)
"^DD",3.9,3.911,.01,3)
Enter the address of a local or remote person, group, device, or server.
"^DD",3.9,3.911,.01,21,0)
^^1^1^2931214^
"^DD",3.9,3.911,.01,21,1,0)
Into this field is recorded the way that a message was addressed.
"^DD",3.9,3.911,.01,"DT")
2911203
"^DD",3.9,3.911,1,0)
TYPE OF RECIPIENT^S^C:cc;I:Info;^0;2^Q
"^DD",3.9,3.911,1,21,0)
^^1^1^2970516^^
"^DD",3.9,3.911,1,21,1,0)
Indicates the type of recipient.
"^DD",3.9,3.911,1,"DT")
2970516
"^DD",3.9,3.914,0)
LATER DELIVERY TO SUB-FIELD^^4^5
"^DD",3.9,3.914,0,"DT")
2970516
"^DD",3.9,3.914,0,"IX","B",3.914,.01)

"^DD",3.9,3.914,0,"NM","LATER DELIVERY TO")

"^DD",3.9,3.914,0,"UP")
3.9
"^DD",3.9,3.914,.01,0)
LATER DELIVERY TO^MF^^0;1^K:$L(X)>99!($L(X)<1) X
"^DD",3.9,3.914,.01,1,0)
^.1
"^DD",3.9,3.914,.01,1,1,0)
3.914^B
"^DD",3.9,3.914,.01,1,1,1)
S ^XMB(3.9,DA(1),7,"B",$E(X,1,30),DA)=""
"^DD",3.9,3.914,.01,1,1,2)
K ^XMB(3.9,DA(1),7,"B",$E(X,1,30),DA)
"^DD",3.9,3.914,.01,1,1,"DT")
2970516
"^DD",3.9,3.914,.01,3)
Answer must be 1-99 characters in length.
"^DD",3.9,3.914,.01,21,0)
^^2^2^2970515^^
"^DD",3.9,3.914,.01,21,1,0)
This is the local or network address of the person to whom to deliver the
"^DD",3.9,3.914,.01,21,2,0)
message at a later date. 
"^DD",3.9,3.914,.01,"DT")
2970516
"^DD",3.9,3.914,1,0)
TYPE OF RECIPIENT^S^C:cc;I:Info;^0;2^Q
"^DD",3.9,3.914,1,21,0)
^^1^1^2970516^^
"^DD",3.9,3.914,1,21,1,0)
Indicates the type of recipient when the message is delivered later.
"^DD",3.9,3.914,1,"DT")
2970516
"^DD",3.9,3.914,2,0)
BY WHOM DUZ^RP200'^VA(200,^0;3^Q
"^DD",3.9,3.914,2,1,0)
^.1
"^DD",3.9,3.914,2,1,1,0)
3.9^AW
"^DD",3.9,3.914,2,1,1,1)
S ^XMB(3.9,"AW",$E(X,1,30),DA(1),DA)=""
"^DD",3.9,3.914,2,1,1,2)
K ^XMB(3.9,"AW",$E(X,1,30),DA(1),DA)
"^DD",3.9,3.914,2,1,1,"%D",0)
^^2^2^2970515^
"^DD",3.9,3.914,2,1,1,"%D",1,0)
This xref will help us find messages which have been scheduled for later
"^DD",3.9,3.914,2,1,1,"%D",2,0)
delivery by certain users.
"^DD",3.9,3.914,2,1,1,"DT")
2970515
"^DD",3.9,3.914,2,3)

"^DD",3.9,3.914,2,21,0)
^^1^1^2970515^^
"^DD",3.9,3.914,2,21,1,0)
This is the DUZ of the person who scheduled the delivery.
"^DD",3.9,3.914,2,"DT")
2970515
"^DD",3.9,3.914,3,0)
BY WHOM TEXT^RF^^0;4^K:$L(X)>99!($L(X)<1) X
"^DD",3.9,3.914,3,3)
Answer must be 1-99 characters in length.
"^DD",3.9,3.914,3,21,0)
^^1^1^2970515^
"^DD",3.9,3.914,3,21,1,0)
This is the name or remote address of the person who scheduled the delivery.
"^DD",3.9,3.914,3,"DT")
2970515
"^DD",3.9,3.914,4,0)
DELIVERY DATE/TIME^RD^^0;5^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",3.9,3.914,4,1,0)
^.1
"^DD",3.9,3.914,4,1,1,0)
3.9^AL
"^DD",3.9,3.914,4,1,1,1)
S ^XMB(3.9,"AL",$E(X,1,30),DA(1),DA)=""
"^DD",3.9,3.914,4,1,1,2)
K ^XMB(3.9,"AL",$E(X,1,30),DA(1),DA)
"^DD",3.9,3.914,4,1,1,"%D",0)
^^2^2^2970515^
"^DD",3.9,3.914,4,1,1,"%D",1,0)
Helps the 'later' delivery task to find messages which should be delivered
"^DD",3.9,3.914,4,1,1,"%D",2,0)
later to certain recipients.
"^DD",3.9,3.914,4,1,1,"DT")
2970515
"^DD",3.9,3.914,4,3)
When do you want the message delivered to this recipient?
"^DD",3.9,3.914,4,21,0)
^^1^1^2970731^^
"^DD",3.9,3.914,4,21,1,0)
Indicates when the message is to be delivered.
"^DD",3.9,3.914,4,"DT")
2970515
"^DD",3.9,3.92,0)
TEXT SUB-FIELD^NL^.01^1
"^DD",3.9,3.92,0,"DT")
2900501
"^DD",3.9,3.92,0,"NM","TEXT")

"^DD",3.9,3.92,0,"UP")
3.9
"^DD",3.9,3.92,.01,0)
TEXT^W^^0;1^Q
"^DD",3.9,3.92,.01,.1)
This is the text of the message, in the format as it is displayed on the screen.
"^DD",3.9,3.92,.01,3)

"^DD",3.9,3.92,.01,21,0)
^^2^2^2931214^
"^DD",3.9,3.92,.01,21,1,0)
This is the actual text of the message.  It is stored without the
"^DD",3.9,3.92,.01,21,2,0)
wrap-around logic, in a line-by-line format.
"^DD",3.9,3.92,.01,"DT")
2900501
"^DD",3.9,3.92005,0)
OBJECTS - OTHER BODY PARTS SUB-FIELD^^.01^1
"^DD",3.9,3.92005,0,"DT")
2920206
"^DD",3.9,3.92005,0,"IX","B",3.92005,.01)

"^DD",3.9,3.92005,0,"NM","OBJECTS - OTHER BODY PARTS")

"^DD",3.9,3.92005,0,"UP")
3.9
"^DD",3.9,3.92005,.01,0)
OBJECTS - OTHER BODY PARTS^MP2005^MAG(2005,^0;1^Q
"^DD",3.9,3.92005,.01,1,0)
^.1
"^DD",3.9,3.92005,.01,1,1,0)
3.92005^B
"^DD",3.9,3.92005,.01,1,1,1)
S ^XMB(3.9,DA(1),2005,"B",$E(X,1,30),DA)=""
"^DD",3.9,3.92005,.01,1,1,2)
K ^XMB(3.9,DA(1),2005,"B",$E(X,1,30),DA)
"^DD",3.9,3.92005,.01,1,1,"DT")
2920319
"^DD",3.9,3.92005,.01,21,0)
^^2^2^2931214^
"^DD",3.9,3.92005,.01,21,1,0)
Pointers to the Object file are stored here as attachments
"^DD",3.9,3.92005,.01,21,2,0)
to multimedia messages.
"^DD",3.9,3.92005,.01,"DT")
2920319
"^DD",4.2,4.2,.01,0)
NAME^RFX^^0;1^K:$L(X)>64!($L(X)<1) X I $D(X) D CHKNAME^XMXADDRD
"^DD",4.2,4.2,.01,.1)
The exact name of the domain, as used in network addressing
"^DD",4.2,4.2,.01,1,0)
^.1
"^DD",4.2,4.2,.01,1,1,0)
4.2^B
"^DD",4.2,4.2,.01,1,1,1)
S ^DIC(4.2,"B",$E(X,1,30),DA)=""
"^DD",4.2,4.2,.01,1,1,2)
K ^DIC(4.2,"B",$E(X,1,30),DA)
"^DD",4.2,4.2,.01,3)
Answer must be 1-64 characters in length.
"^DD",4.2,4.2,.01,4)

"^DD",4.2,4.2,.01,21,0)
^^10^10^2990518^^^^
"^DD",4.2,4.2,.01,21,1,0)
This name is the exact name of the domain, as used in network addressing.
"^DD",4.2,4.2,.01,21,2,0)
It consists of "." (dot) pieces that are formed hierarchically starting at
"^DD",4.2,4.2,.01,21,3,0)
the right.  Domains with dot pieces to the left are administered by the
"^DD",4.2,4.2,.01,21,4,0)
domain whose domain name consists of its name less the 1st dot piece.
"^DD",4.2,4.2,.01,21,5,0)
For example:  A.DOMAIN.COM is administered by DOMAIN.COM.
"^DD",4.2,4.2,.01,21,6,0)
 
"^DD",4.2,4.2,.01,21,7,0)
The domain name may be from 1 to 64 characters.
"^DD",4.2,4.2,.01,21,8,0)

"^DD",4.2,4.2,.01,21,9,0)
Each dot piece may be up to 20 characters, and must begin with an alpha
"^DD",4.2,4.2,.01,21,10,0)
or numeric, and be composed of only alpha, numeric, or "-" characters.
"^DD",4.2,4.2,.01,23,0)
^^5^5^2990518^^^
"^DD",4.2,4.2,.01,23,1,0)
Although the standard says that domain names may be 255 characters,
"^DD",4.2,4.2,.01,23,2,0)
and each dot piece may be 63 characters, MailMan must limit these,
"^DD",4.2,4.2,.01,23,3,0)
because of operating system restrictions.  MailMan places addresses
"^DD",4.2,4.2,.01,23,4,0)
in globals such as ^TMP("XMY0",$J,<name@site>)="".  If the address
"^DD",4.2,4.2,.01,23,5,0)
is too long, it can cause an invalid subscript error.
"^DD",4.2,4.2,.01,"DT")
2990518
"^DD",4.2,4.2,1,0)
FLAGS^FX^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>5!($L(X)<1) X S:$D(X) X=$$UP^XLFSTR(X)
"^DD",4.2,4.2,1,1,0)
^.1
"^DD",4.2,4.2,1,1,1,0)
4.2^AC^MUMPS
"^DD",4.2,4.2,1,1,1,1)
I X["P" S ^DIC(4.2,"AC","P",DA)=""
"^DD",4.2,4.2,1,1,1,2)
K ^DIC(4.2,"AC","P",DA)
"^DD",4.2,4.2,1,1,1,"%D",0)
^^2^2^2931212^
"^DD",4.2,4.2,1,1,1,"%D",1,0)
This cross reference keeps track of domains that have the polling
"^DD",4.2,4.2,1,1,1,"%D",2,0)
flag on.
"^DD",4.2,4.2,1,3)
C=CLOSED, S=SEND, Q=QUEUE, N=NO-FORWARD, P=POLL, T=TALKMAN ENABLED
"^DD",4.2,4.2,1,4)

"^DD",4.2,4.2,1,21,0)
19^^19^19^2990202^^^^
"^DD",4.2,4.2,1,21,1,0)
The flags field controls the flow of messages to this domain from the
"^DD",4.2,4.2,1,21,2,0)
local node.  Flags are:
"^DD",4.2,4.2,1,21,3,0)
 
"^DD",4.2,4.2,1,21,4,0)
S = Send.  MailMan should start a TaskMan task to transmit the message
"^DD",4.2,4.2,1,21,5,0)
    as soon as the message is received.
"^DD",4.2,4.2,1,21,6,0)
 
"^DD",4.2,4.2,1,21,7,0)
C = Close.  MailMan will not allow users to address mail to this domain.
"^DD",4.2,4.2,1,21,8,0)
 
"^DD",4.2,4.2,1,21,9,0)
Q or "" (the null string) = Queue.  MailMan will not deliver until a
"^DD",4.2,4.2,1,21,10,0)
    task is explicitly created to deliver the mail.
"^DD",4.2,4.2,1,21,11,0)
 
"^DD",4.2,4.2,1,21,12,0)
P = Poll.  A TaskMan task will poll all domains with this flag.
"^DD",4.2,4.2,1,21,13,0)
 
"^DD",4.2,4.2,1,21,14,0)
N = NO-forward.  MailMan will not allow messages to be forwarded to this
"^DD",4.2,4.2,1,21,15,0)
    domain.
"^DD",4.2,4.2,1,21,16,0)
 
"^DD",4.2,4.2,1,21,17,0)
T = Talkman enabled.  The presence of this flag allows Talkman to be 
"^DD",4.2,4.2,1,21,18,0)
    used at your site.  It is also necessary to put a 'T' command into
"^DD",4.2,4.2,1,21,19,0)
    the script so that TalkMan will be invoked properly.
"^DD",4.2,4.2,1,"DT")
2990202
"^DD",4.2,4.2,5,0)
SYNONYM^4.23^^2;0
"^DD",4.2,4.2,5,21,0)
^^1^1^2851009^^
"^DD",4.2,4.2,5,21,1,0)
Other names by which this domain is known.
"^DD",4.2,4.23,0)
SYNONYM SUB-FIELD^NL^.01^1
"^DD",4.2,4.23,0,"NM","SYNONYM")

"^DD",4.2,4.23,.01,0)
SYNONYM^MF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>64!($L(X)<1) X
"^DD",4.2,4.23,.01,1,0)
^.1
"^DD",4.2,4.23,.01,1,1,0)
4.2^C^MUMPS
"^DD",4.2,4.23,.01,1,1,1)
S ^DIC(4.2,"C",$E(X,1,64),DA(1),DA)=""
"^DD",4.2,4.23,.01,1,1,2)
K ^DIC(4.2,"C",$E(X,1,64),DA(1),DA)
"^DD",4.2,4.23,.01,1,1,"DT")
2990503
"^DD",4.2,4.23,.01,3)
Answer must be 1-64 characters in length.
"^DD",4.2,4.23,.01,21,0)
^^3^3^2990518^^^^
"^DD",4.2,4.23,.01,21,1,0)
Another name by which this Domain is known. For example,
"^DD",4.2,4.23,.01,21,2,0)
"San Francisco, CA" can be a synonym of the domain
"^DD",4.2,4.23,.01,21,3,0)
"SANFRANCISCO.VA.GOV".
"^DD",4.2,4.23,.01,"DT")
2990518
"^DD",4.2997,4.2997,99,0)
NETWORK ADDRESS^F^^0;7^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<3) X
"^DD",4.2997,4.2997,99,1,0)
^.1
"^DD",4.2997,4.2997,99,1,1,0)
4.2997^F
"^DD",4.2997,4.2997,99,1,1,1)
S ^XMD(4.2997,"F",X,DA)=""
"^DD",4.2997,4.2997,99,1,1,2)
K ^XMD(4.2997,"F",X,DA)
"^DD",4.2997,4.2997,99,1,1,"%D",0)
^^4^4^2930120^
"^DD",4.2997,4.2997,99,1,1,"%D",1,0)
This cross reference is used for look-up and also to determine if an
"^DD",4.2997,4.2997,99,1,1,"%D",2,0)
entry already exists.  Theory is that the old and new addresses can exist
"^DD",4.2997,4.2997,99,1,1,"%D",3,0)
in the file and that is okay.  The bad entry will be removed when the user
"^DD",4.2997,4.2997,99,1,1,"%D",4,0)
notifies the support staff.
"^DD",4.2997,4.2997,99,1,1,"DT")
2930120
"^DD",4.2997,4.2997,99,3)
Answer must be 3-30 characters in length.
"^DD",4.2997,4.2997,99,21,0)
^^4^4^2931214^
"^DD",4.2997,4.2997,99,21,1,0)
This field is used to address mail automatically.  When a look-up
"^DD",4.2997,4.2997,99,21,2,0)
is done on the local user file and fails, a secondary look-up tries
"^DD",4.2997,4.2997,99,21,3,0)
to find the user in the Remote User file.  If it is found, the message
"^DD",4.2997,4.2997,99,21,4,0)
is automatically addressed using this field.
"^DD",4.2997,4.2997,99,"DT")
2930120
"^DD",4.2999,4.29992,2,0)
XMIT AUDIT ERROR^F^^0;3^K:$L(X)>220!($L(X)<1) X
"^DD",4.2999,4.29992,2,3)
Answer must be 1-220 characters in length.
"^DD",4.2999,4.29992,2,21,0)
^^2^2^2981001^
"^DD",4.2999,4.29992,2,21,1,0)
If the transmission fails or is interrupted for some reason, the reason
"^DD",4.2999,4.29992,2,21,2,0)
will be placed here.
"^DD",4.2999,4.29992,2,"DT")
2981001
"^DD",4.3,4.3,0)
FIELD^^7.4^51
"^DD",4.3,4.3,0,"DDA")
Y
"^DD",4.3,4.3,0,"DT")
2990629
"^DD",4.3,4.3,0,"IX","AC",4.3,1)

"^DD",4.3,4.3,0,"IX","AD",4.3,.01)

"^DD",4.3,4.3,0,"IX","AE",4.3,3)

"^DD",4.3,4.3,0,"IX","AF",4.3,.01)

"^DD",4.3,4.3,0,"IX","AG",4.3,1)

"^DD",4.3,4.3,0,"IX","B",4.3,.01)

"^DD",4.3,4.3,0,"NM","MAILMAN SITE PARAMETERS")

"^DD",4.3,4.3,0,"VRPK")
XM
"^DD",4.3,4.3,.001,0)
NUMBER^NJ1,0^^ ^K:+X'=X!(X>1)!(X<1)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,.001,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 1
"^DD",4.3,4.3,.001,21,0)
1^^1^1^2920505^^
"^DD",4.3,4.3,.001,21,1,0)
Used to have VA fileman only have one entry in the file.
"^DD",4.3,4.3,.001,"DT")
2851217
"^DD",4.3,4.3,.01,0)
DOMAIN NAME^RP4.2'X^DIC(4.2,^0;1^S DINUM=1
"^DD",4.3,4.3,.01,1,0)
^.1
"^DD",4.3,4.3,.01,1,1,0)
4.3^B
"^DD",4.3,4.3,.01,1,1,1)
S ^XMB(1,"B",$E(X,1,30),DA)=""
"^DD",4.3,4.3,.01,1,1,2)
K ^XMB(1,"B",$E(X,1,30),DA)
"^DD",4.3,4.3,.01,1,2,0)
4.3^AD^MUMPS
"^DD",4.3,4.3,.01,1,2,1)
S ^XMB("NUM")=X
"^DD",4.3,4.3,.01,1,2,2)
K ^XMB("NUM")
"^DD",4.3,4.3,.01,1,2,"%D",0)
^^2^2^2931213^^
"^DD",4.3,4.3,.01,1,2,"%D",1,0)
This cross reference is used to record the pointer to the domain
"^DD",4.3,4.3,.01,1,2,"%D",2,0)
that is the name of the local site.
"^DD",4.3,4.3,.01,1,3,0)
4.3^AF^MUMPS
"^DD",4.3,4.3,.01,1,3,1)
I $D(^DIC(4.2,+X,0)) S (^XMB("NAME"),^XMB("NETNAME"))=$P(^DIC(4.2,+X,0),"^")
"^DD",4.3,4.3,.01,1,3,2)
K ^XMB("NAME"),^XMB("NETNAME")
"^DD",4.3,4.3,.01,1,3,"%D",0)
^^2^2^2931212^
"^DD",4.3,4.3,.01,1,3,"%D",1,0)
This cross reference is used to record the human readable name of the
"^DD",4.3,4.3,.01,1,3,"%D",2,0)
local site's identity.
"^DD",4.3,4.3,.01,1,3,"DT")
2900319
"^DD",4.3,4.3,.01,3)

"^DD",4.3,4.3,.01,21,0)
^^4^4^2980427^^
"^DD",4.3,4.3,.01,21,1,0)
This is the name of this installation of MailMan, as it is known
"^DD",4.3,4.3,.01,21,2,0)
to the rest of the network. It must appear in the DOMAIN file.
"^DD",4.3,4.3,.01,21,3,0)
This name applies to all CPUs or Volume sets which access this ^XMB
"^DD",4.3,4.3,.01,21,4,0)
global.
"^DD",4.3,4.3,.01,"DEL",.01,0)
I 1
"^DD",4.3,4.3,.01,"DT")
2900319
"^DD",4.3,4.3,1,0)
TIME ZONE^RP4.4'^XMB(4.4,^0;2^Q
"^DD",4.3,4.3,1,1,0)
^.1
"^DD",4.3,4.3,1,1,1,0)
4.3^AC^MUMPS
"^DD",4.3,4.3,1,1,1,1)
S ^XMB("TIMEZONE")=$P(^XMB(4.4,X,0),U)
"^DD",4.3,4.3,1,1,1,2)
K ^XMB("TIMEZONE")
"^DD",4.3,4.3,1,1,1,"%D",0)
^^2^2^2980511^^
"^DD",4.3,4.3,1,1,1,"%D",1,0)
This cross reference is used to record the name of the timezone
"^DD",4.3,4.3,1,1,1,"%D",2,0)
that is the correct time zone for the local site.
"^DD",4.3,4.3,1,1,2,0)
4.3^AG^MUMPS
"^DD",4.3,4.3,1,1,2,1)
S ^XMB("TIMEDIFF")=$$TIMEDIFF^XMXUTIL1($P(^XMB(4.4,X,0),U,3))
"^DD",4.3,4.3,1,1,2,2)
K ^XMB("TIMEDIFF")
"^DD",4.3,4.3,1,1,2,"%D",0)
^^5^5^2980511^^^^
"^DD",4.3,4.3,1,1,2,"%D",1,0)
This cross reference records the time difference, in standard internet format,
"^DD",4.3,4.3,1,1,2,"%D",2,0)
between this time zone and GMT.
"^DD",4.3,4.3,1,1,2,"%D",3,0)

"^DD",4.3,4.3,1,1,2,"%D",4,0)
For example, +0800 means 8 hours ahead of GMT.
"^DD",4.3,4.3,1,1,2,"%D",5,0)
             -0130 means 1 1/2 hours behind GMT.
"^DD",4.3,4.3,1,1,2,"DT")
2980511
"^DD",4.3,4.3,1,3)
Enter the time zone of this domain.
"^DD",4.3,4.3,1,21,0)
^^6^6^2980219^^^^
"^DD",4.3,4.3,1,21,1,0)
This field defines the timezone in which this domain is located.
"^DD",4.3,4.3,1,21,2,0)
Note that Standard and Daylight savings times are considered two
"^DD",4.3,4.3,1,21,3,0)
different timezones, requiring that the timezone be changed with
"^DD",4.3,4.3,1,21,4,0)
the changing of daylight savings.  The timezones are located in the
"^DD",4.3,4.3,1,21,5,0)
MailMan timezone file.  The values of the cross references on this
"^DD",4.3,4.3,1,21,6,0)
field are appended to message dates as they are sent over the network.
"^DD",4.3,4.3,1,"DT")
2980511
"^DD",4.3,4.3,2,0)
SUBORDINATE DOMAIN^4.31P^^1;0
"^DD",4.3,4.3,2,21,0)
^^3^3^2980122^^^
"^DD",4.3,4.3,2,21,1,0)
This field is not currently used.
"^DD",4.3,4.3,2,21,2,0)
This field describes the domains which are subordinate to this one;
"^DD",4.3,4.3,2,21,3,0)
that is, those domains which consider this domain a parent.
"^DD",4.3,4.3,3,0)
PARENT^P4.2'^DIC(4.2,^0;3^Q
"^DD",4.3,4.3,3,1,0)
^.1
"^DD",4.3,4.3,3,1,1,0)
4.3^AE^MUMPS
"^DD",4.3,4.3,3,1,1,1)
S ^XMB("PARENT")=X
"^DD",4.3,4.3,3,1,1,2)
K ^XMB("PARENT")
"^DD",4.3,4.3,3,1,1,"%D",0)
^^2^2^2931212^
"^DD",4.3,4.3,3,1,1,"%D",1,0)
This cross reference is used to record the name of the domain that
"^DD",4.3,4.3,3,1,1,"%D",2,0)
is the Parent of the local site.
"^DD",4.3,4.3,3,21,0)
^^15^15^2920903^^
"^DD",4.3,4.3,3,21,1,0)
This field holds the name of the domain which is considered the
"^DD",4.3,4.3,3,21,2,0)
parent of this domain.  The parent domain's subordinate domain
"^DD",4.3,4.3,3,21,3,0)
list will contain this domain, also.
"^DD",4.3,4.3,3,21,4,0)
 
"^DD",4.3,4.3,3,21,5,0)
Parent domains are used for routing messages when a subordinate
"^DD",4.3,4.3,3,21,6,0)
domain does not know a direct path to the selected domain.
"^DD",4.3,4.3,3,21,7,0)
 
"^DD",4.3,4.3,3,21,8,0)
Domains are connected to their parents as follows:
"^DD",4.3,4.3,3,21,9,0)
 
"^DD",4.3,4.3,3,21,10,0)
1.  The local domain is named.
"^DD",4.3,4.3,3,21,11,0)
2.  The parent is named at the local site.
"^DD",4.3,4.3,3,21,12,0)
3.  A script from the parent to the subordinate domain is created.
"^DD",4.3,4.3,3,21,13,0)
4.  A christening operation is performed by the parent domain.
"^DD",4.3,4.3,3,21,14,0)
    When the subordinate domain is christened, the domain is connected
"^DD",4.3,4.3,3,21,15,0)
    to the network.  (Mail may be addressed to remote domains)
"^DD",4.3,4.3,3,"DT")
2851120
"^DD",4.3,4.3,4,0)
DATE CHRISTENED^D^^0;4^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",4.3,4.3,4,3)
Date on which this domain was christened by its parent.
"^DD",4.3,4.3,4,21,0)
^^2^2^2851003^
"^DD",4.3,4.3,4,21,1,0)
This holds the date on which this local domain was christened by its
"^DD",4.3,4.3,4,21,2,0)
parent domain.
"^DD",4.3,4.3,4.301,0)
NO-PURGE DAYS BUFFER^NJ1,0^^.14;1^K:+X'=X!(X>5)!(X<2)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,4.301,3)
Type a Number between 2 and 5, 0 Decimal Digits
"^DD",4.3,4.3,4.301,21,0)
^^9^9^2980918^^^^
"^DD",4.3,4.3,4.301,21,1,0)
This field is used by the unreferenced messages purge to avoid purging
"^DD",4.3,4.3,4.301,21,2,0)
the last few days worth of messages in the message file.  It should be
"^DD",4.3,4.3,4.301,21,3,0)
a number sufficiently high so as to avoid purging messages which are
"^DD",4.3,4.3,4.301,21,4,0)
in danger of being purged before they can be delivered.  This includes
"^DD",4.3,4.3,4.301,21,5,0)
incoming network mail messages.  
"^DD",4.3,4.3,4.301,21,6,0)
The minimum (and default if this field is null) is two days.
"^DD",4.3,4.3,4.301,21,7,0)

"^DD",4.3,4.3,4.301,21,8,0)
For example, if this field is 2, then messages up to and including those
"^DD",4.3,4.3,4.301,21,9,0)
whose local create date is 2 days ago are subject to possible purge.
"^DD",4.3,4.3,4.301,"DT")
2980918
"^DD",4.3,4.3,4.302,0)
PURGE AUDIT^4.302D^^.1;0
"^DD",4.3,4.3,4.302,21,0)
^^17^17^2980122^^^^
"^DD",4.3,4.3,4.302,21,1,0)
This multiple contains a history of Message file purges.  Generally,
"^DD",4.3,4.3,4.302,21,2,0)
a record of the last 20 purges is kept.
"^DD",4.3,4.3,4.302,21,3,0)

"^DD",4.3,4.3,4.302,21,4,0)
MailMan has two ways to purge messages.  The option XMAUTOPURGE is generally
"^DD",4.3,4.3,4.302,21,5,0)
run after XMCLEAN (the waste basket cleaner) and will purge any messages
"^DD",4.3,4.3,4.302,21,6,0)
that are not pointed at by any recipients nor the sender.  The option
"^DD",4.3,4.3,4.302,21,7,0)
XMPURGE-BY-DATE can also be run to purge messages that have an origination
"^DD",4.3,4.3,4.302,21,8,0)
date older than one used to initiate the process.  It is recommended that 
"^DD",4.3,4.3,4.302,21,9,0)
before XMPURGE-BY-DATE is used, users be notified of the proposed purge 
"^DD",4.3,4.3,4.302,21,10,0)
date so they have a chance to preserve important texts.  These are the only 
"^DD",4.3,4.3,4.302,21,11,0)
options that actually kill off entries in the message file.  The XMPURGE 
"^DD",4.3,4.3,4.302,21,12,0)
option does the same thing as XMAUTOPURGE, but is meant to be run in 
"^DD",4.3,4.3,4.302,21,13,0)
foreground and displays data as it proceeds.
"^DD",4.3,4.3,4.302,21,14,0)
 
"^DD",4.3,4.3,4.302,21,15,0)
Unlike XMPURGE and XMAUTOPURGE, which only remove messages that no one holds 
"^DD",4.3,4.3,4.302,21,16,0)
in their mail baskets any more, XMPURGE-BY-DATE will remove messages from
"^DD",4.3,4.3,4.302,21,17,0)
users' mail baskets and then delete them from the message file (3.9).
"^DD",4.3,4.3,4.302,"DT")
2980123
"^DD",4.3,4.3,4.303,0)
AUTOMATIC INTEGRITY CHECK^S^0:YES;1:NO;^.12;1^Q
"^DD",4.3,4.3,4.303,3)
Enter 'Y' if you wish to run the integrity checker, 'N' if you do not wish to run the Integrity Checker (before the XMAUTOPURGE).
"^DD",4.3,4.3,4.303,21,0)
^^9^9^2910521^
"^DD",4.3,4.3,4.303,21,1,0)
XMAUTOPURGE is generally run at least once a week at most sites.  It is
"^DD",4.3,4.3,4.303,21,2,0)
the process that purges messages that are no longer referenced.  Before it
"^DD",4.3,4.3,4.303,21,3,0)
is run, XMCLEAN is generally run.  XMCLEAN removes messages from WASTE
"^DD",4.3,4.3,4.303,21,4,0)
baskets so that they will be unreferenced when XMAUTOPURGE comes along.
"^DD",4.3,4.3,4.303,21,5,0)
XMAUTOPURGE kicks off the part of XMUTCHECKFILE that checks the Mail Box
"^DD",4.3,4.3,4.303,21,6,0)
file.  XMUTCHECKFILE also resets and cleans up the  x-refs of this file.
"^DD",4.3,4.3,4.303,21,7,0)
If your system has had fairly clean runs of XMUTCHECKFILE or if the entire
"^DD",4.3,4.3,4.303,21,8,0)
XMUTCHECKFILE process is run regularly as a separate process, it is not
"^DD",4.3,4.3,4.303,21,9,0)
necessary for XMAUTOPURGE to run any part of it again.
"^DD",4.3,4.3,4.303,23,0)
^^5^5^2910521^
"^DD",4.3,4.3,4.303,23,1,0)
If this field is set to nill or other value that can be evaluated to zero
"^DD",4.3,4.3,4.303,23,2,0)
(+field=zero), then XMUTCHECKFIL is called to check MailBoxes and recreate
"^DD",4.3,4.3,4.303,23,3,0)
the X-ref that the XMAUTOPURGE uses to verify that a message is no longer
"^DD",4.3,4.3,4.303,23,4,0)
referenced by anyone.  If it is set to 1, then this call to XMUTCHECKFIL
"^DD",4.3,4.3,4.303,23,5,0)
is skipped.
"^DD",4.3,4.3,4.303,"DT")
2910520
"^DD",4.3,4.3,4.304,0)
WEEKDAY DAYS TO PURGE^NJ3,0^^NOTOPURGE;1^K:+X'=X!(X>999)!(X<30)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,4.304,3)
Type a Number between 30 and 999, 0 Decimal Digits
"^DD",4.3,4.3,4.304,21,0)
^^13^13^2980922^^^^
"^DD",4.3,4.3,4.304,21,1,0)
When the unreferenced messages purge runs, it purges messages from
"^DD",4.3,4.3,4.304,21,2,0)
the message file, ^XMB(3.9, which are no longer referenced, meaning
"^DD",4.3,4.3,4.304,21,3,0)
they aren't in anyone's mailbox.
"^DD",4.3,4.3,4.304,21,4,0)

"^DD",4.3,4.3,4.304,21,5,0)
If this field is null, OR if the purge is run on Saturday, the purge
"^DD",4.3,4.3,4.304,21,6,0)
starts at the beginning of the message file. 
"^DD",4.3,4.3,4.304,21,7,0)

"^DD",4.3,4.3,4.304,21,8,0)
If this field has a value, AND the purge is run on Sunday through
"^DD",4.3,4.3,4.304,21,9,0)
Friday, the purge starts at the message create date calculated by
"^DD",4.3,4.3,4.304,21,10,0)
subtracting the number of days from today's date.
"^DD",4.3,4.3,4.304,21,11,0)

"^DD",4.3,4.3,4.304,21,12,0)
So, if this number is 45, the unreferenced message purge would start
"^DD",4.3,4.3,4.304,21,13,0)
with messages created 45 days ago, and work from there forward.
"^DD",4.3,4.3,4.304,"DT")
2980917
"^DD",4.3,4.3,5,0)
SHOW INSTITUTION IN MAILMAN?^S^y:YES;n:NO;^0;5^Q
"^DD",4.3,4.3,5,3)
If yes, then the user's institution code will be displayed.
"^DD",4.3,4.3,5,21,0)
^^3^3^2851003^
"^DD",4.3,4.3,5,21,1,0)
This field controls whether mailman will show the user's organization
"^DD",4.3,4.3,5,21,2,0)
after his name.  This is useful when MailMan has many remote users,
"^DD",4.3,4.3,5,21,3,0)
who may not know each other's location or affiliation.
"^DD",4.3,4.3,5.1,0)
MESSAGE ACTION DEFAULT^S^I:IGNORE;D:DELETE;^0;15^Q
"^DD",4.3,4.3,5.1,21,0)
0^^2^2^2980122^2900801^2900801^
"^DD",4.3,4.3,5.1,21,1,0)
This is the default for the user prompt, "Message Action".  The user may
"^DD",4.3,4.3,5.1,21,2,0)
over-ride this default by selecting his own under "Edit User Options".
"^DD",4.3,4.3,5.1,"DT")
2901206
"^DD",4.3,4.3,5.11,0)
COPY LIMIT - RECIPIENTS^NJ5,0^^.11;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,5.11,3)
Type a Number between 1 and 99999, 0 Decimal Digits
"^DD",4.3,4.3,5.11,21,0)
^^4^4^2980122^^^^
"^DD",4.3,4.3,5.11,21,1,0)
This field enables site management to control whether a message with more
"^DD",4.3,4.3,5.11,21,2,0)
than a certain number of recipients may be copied.  A user may not copy a
"^DD",4.3,4.3,5.11,21,3,0)
message which has more than this number of recipients.  If this field is
"^DD",4.3,4.3,5.11,21,4,0)
null, then the limit is 2999.
"^DD",4.3,4.3,5.11,"DT")
2980123
"^DD",4.3,4.3,5.12,0)
COPY LIMIT - RESPONSES^NJ4,0^^.11;2^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,5.12,3)
Type a Number between 0 and 9999, 0 Decimal Digits
"^DD",4.3,4.3,5.12,21,0)
^^3^3^2980122^^^^
"^DD",4.3,4.3,5.12,21,1,0)
This field enables site management to limit the number of responses to
"^DD",4.3,4.3,5.12,21,2,0)
a message that may be copied.  A user may not copy more than this number
"^DD",4.3,4.3,5.12,21,3,0)
of responses to a message.  If this field is null, then the limit is 99.
"^DD",4.3,4.3,5.12,"DT")
2980123
"^DD",4.3,4.3,5.13,0)
COPY LIMIT - LINES^NJ7,0^^.11;3^K:+X'=X!(X>9999999)!(X<99)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,5.13,3)
Type a Number between 99 and 9999999, 0 Decimal Digits
"^DD",4.3,4.3,5.13,21,0)
^^3^3^2980122^^
"^DD",4.3,4.3,5.13,21,1,0)
This field enables site management to limit the number of lines that may be
"^DD",4.3,4.3,5.13,21,2,0)
copied from a message and its responses.  A user may not copy more than this
"^DD",4.3,4.3,5.13,21,3,0)
number of message lines.  If this field is null, then the limit is 3999.
"^DD",4.3,4.3,5.13,"DT")
2980123
"^DD",4.3,4.3,7,0)
REQUIRE INTRODUCTIONS?^S^y:YES;n:NO;^0;6^Q
"^DD",4.3,4.3,7,3)
Are users required to enter introductory text about themselves to the MailMan system?
"^DD",4.3,4.3,7,21,0)
^^4^4^2980730^^
"^DD",4.3,4.3,7,21,1,0)
If this is turned on, then users must introduce themselves when they
"^DD",4.3,4.3,7,21,2,0)
first log in to MailMan.  This forces users to describe themselves,
"^DD",4.3,4.3,7,21,3,0)
and enter their phone numbers and addresses for others to query with
"^DD",4.3,4.3,7,21,4,0)
the HELP options in MailMan.
"^DD",4.3,4.3,7,"DT")
2980123
"^DD",4.3,4.3,7.01,0)
FWD TEST MESSAGE TO POSTMASTER^S^1:NO;0:YES;^FORWARD;1^Q
"^DD",4.3,4.3,7.01,3)
Enter NO (or 1) to not send test messages about forwarding addresses to the Postmaster.
"^DD",4.3,4.3,7.01,21,0)
^^4^4^2931214^
"^DD",4.3,4.3,7.01,21,1,0)
Messages are sent automatically to a user's forwarding address if he
"^DD",4.3,4.3,7.01,21,2,0)
changes it.  If you want these messages to be sent to the Postmaster,
"^DD",4.3,4.3,7.01,21,3,0)
also, so that he is aware that the forwarding addresses are proper
"^DD",4.3,4.3,7.01,21,4,0)
mark this field with "YES".
"^DD",4.3,4.3,7.01,"DT")
2921228
"^DD",4.3,4.3,7.2,0)
BIG GROUP SIZE^NJ5,0^^0;7^K:+X'=X!(X>10000)!(X<50)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,7.2,3)
Type a Number between 50 and 10000, 0 Decimal Digits
"^DD",4.3,4.3,7.2,21,0)
^^25^25^2990629^^^
"^DD",4.3,4.3,7.2,21,1,0)
During message addressing, when a user addresses a message to a mail group
"^DD",4.3,4.3,7.2,21,2,0)
with a lot of members, it can seem to take forever to process the group.
"^DD",4.3,4.3,7.2,21,3,0)
(Dots of death!)  This field, BIG GROUP SIZE, can help.
"^DD",4.3,4.3,7.2,21,4,0)

"^DD",4.3,4.3,7.2,21,5,0)
IF you enter a number in this field, AND
"^DD",4.3,4.3,7.2,21,6,0)
    - If the group contains member groups
"^DD",4.3,4.3,7.2,21,7,0)
 or - If the group contains distribution lists
"^DD",4.3,4.3,7.2,21,8,0)
 or - If the number of local members plus the number of remote members
"^DD",4.3,4.3,7.2,21,9,0)
      exceeds or equals the BIG GROUP SIZE boundary
"^DD",4.3,4.3,7.2,21,10,0)

"^DD",4.3,4.3,7.2,21,11,0)
THEN the user is asked whether s/he wants to queue the group for later
"^DD",4.3,4.3,7.2,21,12,0)
delivery, and avoid waiting while the group is processed.
"^DD",4.3,4.3,7.2,21,13,0)

"^DD",4.3,4.3,7.2,21,14,0)
The user is also warned that if s/he chooses to queue delivery, then
"^DD",4.3,4.3,7.2,21,15,0)
recipients may not be 'minus'ed from the group.
"^DD",4.3,4.3,7.2,21,16,0)

"^DD",4.3,4.3,7.2,21,17,0)
If the user chooses not to queue delivery, then processing proceeds in the
"^DD",4.3,4.3,7.2,21,18,0)
foreground, as usual.
"^DD",4.3,4.3,7.2,21,19,0)

"^DD",4.3,4.3,7.2,21,20,0)
If the user chooses to queue delivery, then s/he is asked when the delivery
"^DD",4.3,4.3,7.2,21,21,0)
should take place.  The group is then queued for processing and delivery
"^DD",4.3,4.3,7.2,21,22,0)
at the specified time (by the same background job which 'news' messages).
"^DD",4.3,4.3,7.2,21,23,0)

"^DD",4.3,4.3,7.2,21,24,0)
There is no default.  (If BIG GROUP SIZE equates to zero, then groups are
"^DD",4.3,4.3,7.2,21,25,0)
processed in the foreground as usual.)
"^DD",4.3,4.3,7.2,"DT")
2990629
"^DD",4.3,4.3,7.3,0)
SHOW DUZ WHEN ADDRESS MESSAGE^S^0:NO;1:YES;^0;8^Q
"^DD",4.3,4.3,7.3,21,0)
^^13^13^2990302^
"^DD",4.3,4.3,7.3,21,1,0)
When someone addresses a message to a local user, should the DUZ of the
"^DD",4.3,4.3,7.3,21,2,0)
local user be displayed?
"^DD",4.3,4.3,7.3,21,3,0)

"^DD",4.3,4.3,7.3,21,4,0)
(If this field is null, the default answer is "no".)
"^DD",4.3,4.3,7.3,21,5,0)

"^DD",4.3,4.3,7.3,21,6,0)
Disadvantages:
"^DD",4.3,4.3,7.3,21,7,0)
- Your site's DUZs may be SSNs.  They should not be displayed.
"^DD",4.3,4.3,7.3,21,8,0)
- Users may be confused by the display.
"^DD",4.3,4.3,7.3,21,9,0)

"^DD",4.3,4.3,7.3,21,10,0)
Advantages:
"^DD",4.3,4.3,7.3,21,11,0)
- A DUZ is unique, whereas some users may share the same or very similar
"^DD",4.3,4.3,7.3,21,12,0)
name.  If a user knows the addressee's DUZ, the DUZ may be used to
"^DD",4.3,4.3,7.3,21,13,0)
address a message, instead of the name.
"^DD",4.3,4.3,7.3,"DT")
2990302
"^DD",4.3,4.3,7.4,0)
SHOW ADDRESS ON USER LOOKUP^S^0:NO;1:YES;^0;10^Q
"^DD",4.3,4.3,7.4,3)
Should the user's address be displayed in a MailMan lookup?
"^DD",4.3,4.3,7.4,21,0)
^^8^8^2990511^
"^DD",4.3,4.3,7.4,21,1,0)
Option XMHELPUSER displays user information.  Among the items displayed
"^DD",4.3,4.3,7.4,21,2,0)
are the address fields (.111 through .116) from the NEW PERSON file.
"^DD",4.3,4.3,7.4,21,3,0)

"^DD",4.3,4.3,7.4,21,4,0)
Some sites have home address information in these fields, which should not
"^DD",4.3,4.3,7.4,21,5,0)
be displayed.
"^DD",4.3,4.3,7.4,21,6,0)

"^DD",4.3,4.3,7.4,21,7,0)
If the address fields should be displayed, answer YES; otherwise, answer
"^DD",4.3,4.3,7.4,21,8,0)
NO.  If this field is null, the default answer is NO.
"^DD",4.3,4.3,7.4,"DT")
2990511
"^DD",4.3,4.3,7.5,0)
CPU (UCI,VOL) FOR FILER TO RUN^F^^0;12^K:$L(X)>30!($L(X)<3) X
"^DD",4.3,4.3,7.5,3)
Answer must be 3-30 characters in length.
"^DD",4.3,4.3,7.5,10)

"^DD",4.3,4.3,7.5,21,0)
^^3^3^2980122^^^^
"^DD",4.3,4.3,7.5,21,1,0)
Enter the UCI,VOL of where you want the background filer routines to run.
"^DD",4.3,4.3,7.5,21,2,0)
It is recommended that the XMB global also reside in this location.
"^DD",4.3,4.3,7.5,21,3,0)
If you are unsure what to enter, leave this field blank.
"^DD",4.3,4.3,7.5,"DT")
2980122
"^DD",4.3,4.3,7.6,0)
FTP ADDRESS FOR BLOB <GET>^F^^FTP-GET;1^K:$L(X)>15!($L(X)<7)!'(X?1.N1"."1.N1"."1.N1"."1.N) X
"^DD",4.3,4.3,7.6,3)
Answer must be 7-15 characters in length.
"^DD",4.3,4.3,7.6,21,0)
^^5^5^2931214^
"^DD",4.3,4.3,7.6,21,1,0)
If your images are on a network that is available via FTP from your
"^DD",4.3,4.3,7.6,21,2,0)
main node and you have no other way of accessing those message to get
"^DD",4.3,4.3,7.6,21,3,0)
them onto you main node so that you can FTP them to other sites, put
"^DD",4.3,4.3,7.6,21,4,0)
the IP address of the machine that you will GET your images from
"^DD",4.3,4.3,7.6,21,5,0)
into this field.
"^DD",4.3,4.3,7.6,"DT")
2920331
"^DD",4.3,4.3,7.7,0)
FTP RECEIVE DIRECTORY^F^^DISK/VOL;1^K:$L(X)>90!($L(X)<3) X
"^DD",4.3,4.3,7.7,3)
Answer must be 3-90 characters in length.
"^DD",4.3,4.3,7.7,21,0)
^^7^7^2930521^^^^
"^DD",4.3,4.3,7.7,21,1,0)
This field is used to store the path for BLOBs to be received in.
"^DD",4.3,4.3,7.7,21,2,0)
It is communicated to the transmitter of messages containing BLOBS so
"^DD",4.3,4.3,7.7,21,3,0)
that they can be FTP'd to the correct directory once the disk has
"^DD",4.3,4.3,7.7,21,4,0)
been designated with field 7.711.
"^DD",4.3,4.3,7.7,21,5,0)
 
"^DD",4.3,4.3,7.7,21,6,0)
If the receiving system is a DOS system the disk portion of the path 
"^DD",4.3,4.3,7.7,21,7,0)
is in the field 'FTP RECEIVE DISK'.
"^DD",4.3,4.3,7.7,23,0)
^^1^1^2930521^^^^
"^DD",4.3,4.3,7.7,23,1,0)
 
"^DD",4.3,4.3,7.7,"DT")
2940225
"^DD",4.3,4.3,7.71,0)
FTP RECEIVE NETWORK LOCATION^F^^FTPNETLOC;1^K:$L(X)>30!($L(X)<3) X
"^DD",4.3,4.3,7.71,3)
Answer must be 3-30 characters in length.
"^DD",4.3,4.3,7.71,21,0)
^^4^4^2931017^^
"^DD",4.3,4.3,7.71,21,1,0)
This field should be the name of an entry in your 2005.2 file (Network
"^DD",4.3,4.3,7.71,21,2,0)
Location).  It maps where incoming BLOBs will be placed and is the
"^DD",4.3,4.3,7.71,21,3,0)
logical equivalent of field 7.7.
"^DD",4.3,4.3,7.71,21,4,0)
 
"^DD",4.3,4.3,7.71,23,0)
^^2^2^2931017^^
"^DD",4.3,4.3,7.71,23,1,0)
 
"^DD",4.3,4.3,7.71,23,2,0)
 
"^DD",4.3,4.3,7.71,"DT")
2930426
"^DD",4.3,4.3,7.711,0)
FTP RECEIVE DISK^F^^FTPRCVDISK;1^K:$L(X)>30!($L(X)<2) X
"^DD",4.3,4.3,7.711,3)
Answer must be 2-30 characters in length.
"^DD",4.3,4.3,7.711,21,0)
^^2^2^2930521^^
"^DD",4.3,4.3,7.711,21,1,0)
This field contains the name of the physical disk that the FTP Receive
"^DD",4.3,4.3,7.711,21,2,0)
Network Location is on if the receiving system is a DOS system.
"^DD",4.3,4.3,7.711,"DT")
2930426
"^DD",4.3,4.3,7.72,0)
FTP ADDRESS FOR BLOB RECEIVE^F^^FTP-RCV;1^K:$L(X)>30!($L(X)<7)!'(X?1.N1"."1.N1"."1.N1"."1.N) X
"^DD",4.3,4.3,7.72,3)
Answer must be 7-30 characters in length.
"^DD",4.3,4.3,7.72,21,0)
^^2^2^2931214^
"^DD",4.3,4.3,7.72,21,1,0)
This is the IP address that you will advertise to other sites that wish
"^DD",4.3,4.3,7.72,21,2,0)
to send you images that attach to multimedia messages.
"^DD",4.3,4.3,7.72,"DT")
2930308
"^DD",4.3,4.3,7.73,0)
FTP USERNAME^F^^FTPUSER;1^K:$L(X)>30!($L(X)<3) X
"^DD",4.3,4.3,7.73,3)
Answer must be 3-30 characters in length.
"^DD",4.3,4.3,7.73,21,0)
^^2^2^2930423^
"^DD",4.3,4.3,7.73,21,1,0)
This is the VMS username that the sender will be told to use when he
"^DD",4.3,4.3,7.73,21,2,0)
FTP's BLOBs to this domain.
"^DD",4.3,4.3,7.73,"DT")
2930423
"^DD",4.3,4.3,7.731,0)
FTP PASSWORD^F^^FTPPWD;1^K:$L(X)>30!($L(X)<3) X
"^DD",4.3,4.3,7.731,3)
Answer must be 3-30 characters in length.
"^DD",4.3,4.3,7.731,21,0)
^^2^2^2930423^
"^DD",4.3,4.3,7.731,21,1,0)
This is the password if any that a BLOB sender needs to have when he FTPs
"^DD",4.3,4.3,7.731,21,2,0)
into the system.
"^DD",4.3,4.3,7.731,"DT")
2930423
"^DD",4.3,4.3,7.7999,0)
FTP NOTES^4.37^^FTP-NOTES;0
"^DD",4.3,4.3,7.7999,21,0)
^^2^2^2980122^^^
"^DD",4.3,4.3,7.7999,21,1,0)
This field holds site specific notes for this site on FTP operations.
"^DD",4.3,4.3,7.7999,21,2,0)
It is not used by MailMan.
"^DD",4.3,4.3,8.11,0)
LPC CHECKSUM^K^^LPC;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",4.3,4.3,8.11,3)
This is Standard MUMPS code used by network mail to calculate checksums.
"^DD",4.3,4.3,8.11,9)
@
"^DD",4.3,4.3,8.11,21,0)
^^8^8^2890310^
"^DD",4.3,4.3,8.11,21,1,0)
The code in this field will be obsolete after installation of KERNEL 6,
"^DD",4.3,4.3,8.11,21,2,0)
if the "LPC" node in ^%ZOSF [^%ZOSF("LPC")] is defined.  This field is
"^DD",4.3,4.3,8.11,21,3,0)
inserted by the MailMan POST-init if the ^%ZOSF("OS") is defined, contains
"^DD",4.3,4.3,8.11,21,4,0)
"DSM" and does not contain "VAX".  This is because of a situation that 
"^DD",4.3,4.3,8.11,21,5,0)
exists where DSM for PDP-aa series used to use on $ZCALL anbd in the updated
"^DD",4.3,4.3,8.11,21,6,0)
version uses a slightly different one.  Both do not exist in one system.
"^DD",4.3,4.3,8.11,21,7,0)
The way it is inserted is by setting an error trap and then trying one.
"^DD",4.3,4.3,8.11,21,8,0)
If it doesn't work, it must be the onther.
"^DD",4.3,4.3,8.11,"DT")
2890310
"^DD",4.3,4.3,8.12,0)
TCP CHANNEL - MAXIMUM TO USE^NJ3,0^^0;17^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,8.12,3)
Type a Number between 0 and 999, 0 Decimal Digits
"^DD",4.3,4.3,8.12,21,0)
^^3^3^2930223^
"^DD",4.3,4.3,8.12,21,1,0)
This field contains a value that is checked before starting a process
"^DD",4.3,4.3,8.12,21,2,0)
to transmit mail via a TCP/IP channel.  If there are already as many
"^DD",4.3,4.3,8.12,21,3,0)
processes running as is in this field, no process is started.
"^DD",4.3,4.3,8.12,"DT")
2920926
"^DD",4.3,4.3,8.13,0)
STATS NORMALIZATION^F^^7;1^K:$L(X)>99!($L(X)<1) X
"^DD",4.3,4.3,8.13,3)
Answer must be 1-99 characters in length.
"^DD",4.3,4.3,8.13,21,0)
^^1^1^2920926^
"^DD",4.3,4.3,8.13,21,1,0)
This option allows the user to customize the normalized report.
"^DD",4.3,4.3,8.13,"DT")
2980123
"^DD",4.3,4.3,8.14,0)
LARGE MESSAGE REPORT LINES^NJ6,0^^XMUT2-LINES;1^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,8.14,3)
Type a Number between 1 and 999999, 0 Decimal Digits
"^DD",4.3,4.3,8.14,21,0)
^^3^3^2980123^^^^
"^DD",4.3,4.3,8.14,21,1,0)
This field is used by the large message report.
"^DD",4.3,4.3,8.14,21,2,0)
Any message with more than this many lines is included in the report.
"^DD",4.3,4.3,8.14,21,3,0)
If this field is null, the default is 100.
"^DD",4.3,4.3,8.14,"DT")
2980123
"^DD",4.3,4.3,8.15,0)
TCP/IP POLLER RUN FLAG^S^1:STOP RUNNING;0:OKAY TO RUN;^0;18^Q
"^DD",4.3,4.3,8.15,21,0)
^^6^6^2950626^^
"^DD",4.3,4.3,8.15,21,1,0)
This field is checked every time the background tcp poller, XMRTCP,
"^DD",4.3,4.3,8.15,21,2,0)
starts to process poller request.  If it is set to 1, XMRTCP stops
"^DD",4.3,4.3,8.15,21,3,0)
running. If it is null or zero, XMRTCP processes the next entry.  If
"^DD",4.3,4.3,8.15,21,4,0)
XMRTCP is not running it will not be restarted if the field is set to 1.
"^DD",4.3,4.3,8.15,21,5,0)
If it is null or 0, and XMRTCP is not running, a background task will be
"^DD",4.3,4.3,8.15,21,6,0)
created to restart it.
"^DD",4.3,4.3,8.15,"DT")
2950626
"^DD",4.3,4.3,8.2,0)
RECORD NETMAIL TRANSCRIPT?^S^1:YES;0:NO;^0;14^Q
"^DD",4.3,4.3,8.2,21,0)
^^3^3^2930211^^^^
"^DD",4.3,4.3,8.2,21,1,0)
This field allows the site manager to turn on and off (toggle) whether or
"^DD",4.3,4.3,8.2,21,2,0)
not MailMan records all script transcripts in background.  The send portion
"^DD",4.3,4.3,8.2,21,3,0)
of scripts played (using the 'Play Script' option) will not be recorded.
"^DD",4.3,4.3,8.2,"DT")
2900627
"^DD",4.3,4.3,8.21,0)
XMITS TILL ERROR MESSAGE^NJ3,0^^NETWORK;1^K:+X'=X!(X>999)!(X<5)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,8.21,3)
Type a Number between 5 and 999, 0 Decimal Digits
"^DD",4.3,4.3,8.21,21,0)
^^3^3^2931214^
"^DD",4.3,4.3,8.21,21,1,0)
How many times will a transmission be attempted before a message is
"^DD",4.3,4.3,8.21,21,2,0)
sent to the Postmaster indicating that there have been multiple,
"^DD",4.3,4.3,8.21,21,3,0)
unsuccessful transmissions to a domain.
"^DD",4.3,4.3,8.21,"DT")
2930211
"^DD",4.3,4.3,8.3,0)
NETWORK - MAX LINES SEND^NJ5,0^^NETWORK-LIMIT;1^K:+X'=X!(X>15000)!(X<2000)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,8.3,3)
Type a Number between 2000 and 15000, 0 Decimal Digits
"^DD",4.3,4.3,8.3,21,0)
^^4^4^2980122^^
"^DD",4.3,4.3,8.3,21,1,0)
This field enables site management to limit the number of lines which
"^DD",4.3,4.3,8.3,21,2,0)
a message may have when it is addressed to a remote recipient.  A user
"^DD",4.3,4.3,8.3,21,3,0)
may not send a message across the network with more than this number of
"^DD",4.3,4.3,8.3,21,4,0)
lines.  If this field is null, there is no limit.
"^DD",4.3,4.3,8.3,"DT")
2980122
"^DD",4.3,4.3,8.31,0)
NETWORK - MAX LINES RECEIVE^NJ8,0^^NETWORK-LIMIT;2^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,8.31,3)
Type a Number between 0 and 99999999, 0 Decimal Digits
"^DD",4.3,4.3,8.31,21,0)
^^4^4^2980122^^
"^DD",4.3,4.3,8.31,21,1,0)
This field enables site management to limit the number of lines which
"^DD",4.3,4.3,8.31,21,2,0)
a message may have when it is received from a remote site.  Any message
"^DD",4.3,4.3,8.31,21,3,0)
received from a remote site which has more lines than this number is
"^DD",4.3,4.3,8.31,21,4,0)
automatically rejected.  If this field is null, there is no limit.
"^DD",4.3,4.3,8.31,"DT")
2980122
"^DD",4.3,4.3,8.4,0)
DIRECTORY REQUEST FLAG^S^0:Requests will NOT be granted.;1:Requests will be granted.;^8.4;1^Q
"^DD",4.3,4.3,8.4,3)
Enter 0 to stop all requests for the local directory from being granted.
"^DD",4.3,4.3,8.4,21,0)
^^6^6^2940417^^^
"^DD",4.3,4.3,8.4,21,1,0)
This field controls whether or not the XMMGR-DIRECTORY-RECV option will
"^DD",4.3,4.3,8.4,21,2,0)
grant request from remote site to send domain user directory information.
"^DD",4.3,4.3,8.4,21,3,0)
 
"^DD",4.3,4.3,8.4,21,4,0)
If the value is null or zero, request is rejected.  If the value is
"^DD",4.3,4.3,8.4,21,5,0)
one, a request is granted and domain user directory will
"^DD",4.3,4.3,8.4,21,6,0)
be made available to the remote site.
"^DD",4.3,4.3,8.4,"DT")
2940417
"^DD",4.3,4.3,10,0)
IN-BASKET-PURGE DAYS^NJ3,0^^0;9^K:+X'=X!(X>999)!(X<30)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,10,3)
Type a Number between 30 and 999, 0 Decimal Digits
"^DD",4.3,4.3,10,21,0)
^^10^10^2970723^^^^
"^DD",4.3,4.3,10,21,1,0)
This field is used by the IN BASKET PURGE to identify inactive messages and
"^DD",4.3,4.3,10,21,2,0)
mark them for purging.
"^DD",4.3,4.3,10,21,3,0)

"^DD",4.3,4.3,10,21,4,0)
A message is considered inactive if it has not been accessed in the past
"^DD",4.3,4.3,10,21,5,0)
number of days specified here.  The default is 30 days.
"^DD",4.3,4.3,10,21,6,0)

"^DD",4.3,4.3,10,21,7,0)
The IN BASKET PURGE sends a message to each user listing all messages which
"^DD",4.3,4.3,10,21,8,0)
it has marked for purging and stating that they will be purged in an
"^DD",4.3,4.3,10,21,9,0)
additional 30 days if they remain in the 'IN' basket and are not accessed
"^DD",4.3,4.3,10,21,10,0)
again.
"^DD",4.3,4.3,10,"DT")
2980123
"^DD",4.3,4.3,10.01,0)
IN-BASKET-PURGE TYPE^S^0:IN BASKET ONLY;1:ALL BASKETS;^.15;1^Q
"^DD",4.3,4.3,10.01,3)
Enter 0 for IN Basket, 1 for **All** baskets or ? for more information.
"^DD",4.3,4.3,10.01,4)

"^DD",4.3,4.3,10.01,21,0)
^^17^17^2980427^^^^
"^DD",4.3,4.3,10.01,21,1,0)
This field controls the extent of the IN-BASKET-PURGE.
"^DD",4.3,4.3,10.01,21,2,0)
If is is not filled in the effect on the IN-BASKET-PURGE
"^DD",4.3,4.3,10.01,21,3,0)
is the same as it would be if the value of the field is zero.
"^DD",4.3,4.3,10.01,21,4,0)
 
"^DD",4.3,4.3,10.01,21,5,0)
The field can have the following values:
"^DD",4.3,4.3,10.01,21,6,0)
 
"^DD",4.3,4.3,10.01,21,7,0)
    0 or null = The IN-BASKET-PURGE will affect user IN baskets only.
"^DD",4.3,4.3,10.01,21,8,0)
    1 = The IN-BASKET-PURGE will affect all user baskets.
"^DD",4.3,4.3,10.01,21,9,0)
        (This is not the normal way for this process to be run.  It is
"^DD",4.3,4.3,10.01,21,10,0)
         recommended that you discuss this with site management and get
"^DD",4.3,4.3,10.01,21,11,0)
         user input before doing this.)
"^DD",4.3,4.3,10.01,21,12,0)
 
"^DD",4.3,4.3,10.01,21,13,0)
In either case the users will be sent the now familiar message listing
"^DD",4.3,4.3,10.01,21,14,0)
the messages that will be deleted from their baskets in 30 days.  In
"^DD",4.3,4.3,10.01,21,15,0)
either case the field 'IN-BASKET-PURGE DAYS' will control how long a
"^DD",4.3,4.3,10.01,21,16,0)
message can remain inactive in a basket before it is considered okay
"^DD",4.3,4.3,10.01,21,17,0)
to put on the list of messages to be considered for deletion.
"^DD",4.3,4.3,10.01,"DT")
2930815
"^DD",4.3,4.3,10.1,0)
BACKGROUND FILER HANG TIME^NJ2,0^^0;13^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,10.1,3)
Background filer hangs up to 99 seconds between mail deliveries (default=5).
"^DD",4.3,4.3,10.1,21,0)
^^6^6^2980427^^
"^DD",4.3,4.3,10.1,21,1,0)
This field is used by the background filer when it is started up to determine
"^DD",4.3,4.3,10.1,21,2,0)
the amount of time it will hang between deliveries of messages.  Since mail
"^DD",4.3,4.3,10.1,21,3,0)
is not delivered, even to the sender, unless the backgournd filer delivers
"^DD",4.3,4.3,10.1,21,4,0)
it, it should not be too long a period so that your users are inconvenienced.
"^DD",4.3,4.3,10.1,21,5,0)
If this field is not filled in the background filer will hang for 5 seconds
"^DD",4.3,4.3,10.1,21,6,0)
between deliveries.  5 to 15 seconds is the recommended range.
"^DD",4.3,4.3,10.1,"DT")
2881115
"^DD",4.3,4.3,10.2,0)
BACKGROUND FILER RUN FLAG^S^1:STOP RUNNING;0:OKAY TO RUN;^0;16^Q
"^DD",4.3,4.3,10.2,9)
@
"^DD",4.3,4.3,10.2,21,0)
^^5^5^2980122^^^^
"^DD",4.3,4.3,10.2,21,1,0)
The background filer checks this field every time it is about to
"^DD",4.3,4.3,10.2,21,2,0)
deliver a message or response.  If it is set to 1, it stops running, and
"^DD",4.3,4.3,10.2,21,3,0)
will not restart until it is set to null or zero.  If it is null or zero,
"^DD",4.3,4.3,10.2,21,4,0)
and is already running, it continues.  If it is null or zero, and is not
"^DD",4.3,4.3,10.2,21,5,0)
running, a background task will be created to restart it.
"^DD",4.3,4.3,10.2,22)
P
"^DD",4.3,4.3,10.2,"DT")
2920123
"^DD",4.3,4.3,10.3,0)
BACKGROUND FILER RUN PRIORITY^NJ2,0^^.13;1^K:+X'=X!(X>10)!(X<0)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,10.3,3)
Type a Number between 0 and 10, 0 Decimal Digits
"^DD",4.3,4.3,10.3,21,0)
^^1^1^2980122^^
"^DD",4.3,4.3,10.3,21,1,0)
This field is used by the background filer to set its priority at runtime.
"^DD",4.3,4.3,10.3,"DT")
2921112
"^DD",4.3,4.3,16.1,0)
P-MESSAGE LINE LIMIT^NJ7,0^^.16;1^K:+X'=X!(X>9999999)!(X<2000)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,16.1,3)
Type a Number between 2000 and 9999999, 0 Decimal Digits
"^DD",4.3,4.3,16.1,21,0)
^^2^2^2980408^
"^DD",4.3,4.3,16.1,21,1,0)
This field enables site management to limit the number of lines which may
"^DD",4.3,4.3,16.1,21,2,0)
be printed to P-MESSAGE.  If this field is null, there is no limit.
"^DD",4.3,4.3,16.1,"DT")
2980408
"^DD",4.3,4.3,17.1,0)
MAX DIGITS FOR MESSAGE NUMBER^NJ2,0^^.17;1^K:+X'=X!(X>14)!(X<7)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,17.1,3)
Type a Number between 7 and 14, 0 Decimal Digits
"^DD",4.3,4.3,17.1,21,0)
^^17^17^2980917^^^
"^DD",4.3,4.3,17.1,21,1,0)
This field is used to control the size of the message number in
"^DD",4.3,4.3,17.1,21,2,0)
^XMB(3.9, the MESSAGE file.  If this field is null, its default 
"^DD",4.3,4.3,17.1,21,3,0)
will be 8 digits.  If the message number becomes greater
"^DD",4.3,4.3,17.1,21,4,0)
than this many digits, the message numbers will recycle back to
"^DD",4.3,4.3,17.1,21,5,0)
the next vacant message number after 999999.  In this way, message
"^DD",4.3,4.3,17.1,21,6,0)
numbers will cease being too ungainly in size.
"^DD",4.3,4.3,17.1,21,7,0)

"^DD",4.3,4.3,17.1,21,8,0)
So message numbers will be re-used.
"^DD",4.3,4.3,17.1,21,9,0)

"^DD",4.3,4.3,17.1,21,10,0)
If MailMan is not able to find a vacant message number less than
"^DD",4.3,4.3,17.1,21,11,0)
this number of digits, then MailMan will take the next available
"^DD",4.3,4.3,17.1,21,12,0)
message number, no matter how many digits it has, AND MailMan will
"^DD",4.3,4.3,17.1,21,13,0)
change this field to reflect the new maximum.
"^DD",4.3,4.3,17.1,21,14,0)

"^DD",4.3,4.3,17.1,21,15,0)
It is very important that the unreferenced messages purge and/or
"^DD",4.3,4.3,17.1,21,16,0)
the date purge be run on a regular basis to free up message numbers
"^DD",4.3,4.3,17.1,21,17,0)
for re-use.
"^DD",4.3,4.3,17.1,"DT")
2980917
"^DD",4.3,4.3,142,0)
NO-PURGE DAYS BUFFER (LOCAL)^NJ2,0^^.14;2^K:+X'=X!(X>10)!(X<2)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,142,3)
Type a Number between 2 and 10, 0 Decimal Digits
"^DD",4.3,4.3,142,21,0)
16^^22^22^2980918^^^^
"^DD",4.3,4.3,142,21,1,0)
This field is used during the un-referenced-messages purge to avoid
"^DD",4.3,4.3,142,21,2,0)
purging the last few messages in the message file, according to
"^DD",4.3,4.3,142,21,3,0)
their local create date. 
"^DD",4.3,4.3,142,21,4,0)

"^DD",4.3,4.3,142,21,5,0)
We subtract the NO-PURGE DAYS BUFFER (LOCAL) from today's date, giving
"^DD",4.3,4.3,142,21,6,0)
a 'no-purge date'.  Local messages which were created on or after that
"^DD",4.3,4.3,142,21,7,0)
date and which were sent to remote sites are not subject to purge.
"^DD",4.3,4.3,142,21,8,0)
Other messages are not affected by this buffer.
"^DD",4.3,4.3,142,21,9,0)

"^DD",4.3,4.3,142,21,10,0)
If this field is not filled in, it defaults to 7 days.  This is the
"^DD",4.3,4.3,142,21,11,0)
recommended value.
"^DD",4.3,4.3,142,21,12,0)

"^DD",4.3,4.3,142,21,13,0)
It should not be less than the NO-PURGE DAYS BUFFER (field 4.301)
"^DD",4.3,4.3,142,21,14,0)
or it will have no effect.
"^DD",4.3,4.3,142,21,15,0)

"^DD",4.3,4.3,142,21,16,0)
One situation in which this buffer may be useful is in the case of a
"^DD",4.3,4.3,142,21,17,0)
message sent only to a remote site.  Such a message is unreferenced
"^DD",4.3,4.3,142,21,18,0)
and would otherwise be subject to purge.  If a reply came from the
"^DD",4.3,4.3,142,21,19,0)
remote site after the original message had been purged, the sender
"^DD",4.3,4.3,142,21,20,0)
would have access only to the reply and not to the original message.
"^DD",4.3,4.3,142,21,21,0)
The NO-PURGE DAYS BUFFER (LOCAL) could be set to a reasonable number
"^DD",4.3,4.3,142,21,22,0)
of days to allow for a reply.
"^DD",4.3,4.3,142,"DT")
2980918
"^DD",4.3,4.3,143,0)
FAX ENABLED^S^0:no;1:yes;^0;19^Q
"^DD",4.3,4.3,143,3)
Is your site fax enabled?
"^DD",4.3,4.3,143,21,0)
^^7^7^2970109^
"^DD",4.3,4.3,143,21,1,0)
Your site is fax enabled if you have the suite of fax software and files
"^DD",4.3,4.3,143,21,2,0)
(^AKF) and fax capability and you choose to allow faxes to be sent via MailMan.
"^DD",4.3,4.3,143,21,3,0)

"^DD",4.3,4.3,143,21,4,0)
To send faxes via MailMan, Mail groups (file 3.8) must first be populated in the
"^DD",4.3,4.3,143,21,5,0)
fax recipient and fax group multiples.  Then, when a user sends a message to a
"^DD",4.3,4.3,143,21,6,0)
mail group, the message is also faxed to any fax recipients in that mail group.
"^DD",4.3,4.3,143,21,7,0)
Responses to the message are not faxed.
"^DD",4.3,4.3,143,"DT")
2970211
"^DD",4.3,4.3,217,0)
DEFAULT INSTITUTION^RP4^DIC(4,^XUS;17^Q
"^DD",4.3,4.3,217,3)
Enter the instutition to use as a default for users without one.
"^DD",4.3,4.3,217,9)
^
"^DD",4.3,4.3,217,21,0)
^^2^2^2980427^^^^
"^DD",4.3,4.3,217,21,1,0)
This field is the default institution that is shown for any user who
"^DD",4.3,4.3,217,21,2,0)
hasn't chosen one under "edit user options"
"^DD",4.3,4.3,217,23,0)
^^2^2^2980427^^
"^DD",4.3,4.3,217,23,1,0)
This field is set by a Mumps xref on file 8989.3, field 217, making it a
"^DD",4.3,4.3,217,23,2,0)
duplicate of that field.
"^DD",4.3,4.3,217,"DT")
2900213
"^DD",4.3,4.3,241,0)
BACKGROUND MESSAGE DELIVERERS^FX^^6;1^D CHKQ^XMKPLQ
"^DD",4.3,4.3,241,3)
Enter a set of increasing numbers separated by commas.
"^DD",4.3,4.3,241,4)
D HELPQ^XMKPLQ
"^DD",4.3,4.3,241,21,0)
^^2^2^2980121^^^^
"^DD",4.3,4.3,241,21,1,0)
This field is used by the background filer to determine how many message
"^DD",4.3,4.3,241,21,2,0)
delivery queues (and tasks) there should be and how to separate them.
"^DD",4.3,4.3,241,"DT")
2980121
"^DD",4.3,4.3,242,0)
BACKGROUND RESPONSE DELIVERERS^FX^^6;2^D CHKQ^XMKPLQ
"^DD",4.3,4.3,242,3)
Enter a set of increasing numbers separated by commas.
"^DD",4.3,4.3,242,4)
D HELPQ^XMKPLQ
"^DD",4.3,4.3,242,21,0)
^^2^2^2980121^^^^
"^DD",4.3,4.3,242,21,1,0)
This field is used by the background filer to determine how many response
"^DD",4.3,4.3,242,21,2,0)
delivery queues (and tasks) there will be and how to separate them.
"^DD",4.3,4.3,242,"DT")
2980121
"^DD",4.3,4.302,0)
PURGE AUDIT SUB-FIELD^^8^9
"^DD",4.3,4.302,0,"DT")
2980916
"^DD",4.3,4.302,0,"IX","B",4.302,.01)

"^DD",4.3,4.302,0,"NM","PURGE AUDIT")

"^DD",4.3,4.302,0,"UP")
4.3
"^DD",4.3,4.302,.01,0)
PURGE DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",4.3,4.302,.01,1,0)
^.1
"^DD",4.3,4.302,.01,1,1,0)
4.302^B
"^DD",4.3,4.302,.01,1,1,1)
S ^XMB(1,DA(1),.1,"B",$E(X,1,30),DA)=""
"^DD",4.3,4.302,.01,1,1,2)
K ^XMB(1,DA(1),.1,"B",$E(X,1,30),DA)
"^DD",4.3,4.302,.01,3)
Enter the purge date you are interested in.
"^DD",4.3,4.302,.01,21,0)
^^1^1^2980122^^
"^DD",4.3,4.302,.01,21,1,0)
This is a date on which one of the purges ran.
"^DD",4.3,4.302,.01,"DT")
2980123
"^DD",4.3,4.302,1,0)
REMAINING MESSAGES^NJ8,0^^0;2^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",4.3,4.302,1,3)
Type a Number between 0 and 99999999, 0 Decimal Digits
"^DD",4.3,4.302,1,21,0)
^^1^1^2980122^^^^
"^DD",4.3,4.302,1,21,1,0)
This is the number of messages that remained on file after the purge ran.
"^DD",4.3,4.302,1,"DT")
2980123
"^DD",4.3,4.302,2,0)
PURGED MESSAGES^NJ8,0^^0;3^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",4.3,4.302,2,3)
Type a Number between 0 and 99999999, 0 Decimal Digits
"^DD",4.3,4.302,2,21,0)
^^1^1^2980122^^^
"^DD",4.3,4.302,2,21,1,0)
This is the number of messages that were purged.
"^DD",4.3,4.302,2,"DT")
2890726
"^DD",4.3,4.302,3,0)
START PURGE DATE^D^^0;4^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",4.3,4.302,3,3)
Enter the date at which you wish processing to start.
"^DD",4.3,4.302,3,21,0)
^^4^4^2980916^^^^
"^DD",4.3,4.302,3,21,1,0)
This is the date entered by the user.  It refers to the starting date
"^DD",4.3,4.302,3,21,2,0)
of the purge process for unreferenced messages.  All unreferenced
"^DD",4.3,4.302,3,21,3,0)
messages sent on or after this date (and on or before the ending date)
"^DD",4.3,4.302,3,21,4,0)
are subject to purge.
"^DD",4.3,4.302,3,"DT")
2980916
"^DD",4.3,4.302,4,0)
STOP PURGE DATE^D^^0;5^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",4.3,4.302,4,3)
Enter the date after which you wish processing to stop.
"^DD",4.3,4.302,4,21,0)
^^4^4^2980916^^^^
"^DD",4.3,4.302,4,21,1,0)
This is the date entered by the user.  It refers to the ending date
"^DD",4.3,4.302,4,21,2,0)
of the purge process for unreferenced messages.  All unreferenced
"^DD",4.3,4.302,4,21,3,0)
messages sent on or before this date (and on or after the starting date)
"^DD",4.3,4.302,4,21,4,0)
are subject to purge.
"^DD",4.3,4.302,4,"DT")
2980916
"^DD",4.3,4.302,5,0)
PURGE TYPE^S^1:DATE PURGE;0:UNREFERENCED MESSAGES PURGE;^0;6^Q
"^DD",4.3,4.302,5,3)
Which type of purge is this?
"^DD",4.3,4.302,5,21,0)
^^1^1^2980123^^
"^DD",4.3,4.302,5,21,1,0)
There are purges of unreferenced messages and there are date purges.
"^DD",4.3,4.302,5,"DT")
2980123
"^DD",4.3,4.302,6,0)
PURGE MESSAGES OLDER THAN DATE^D^^0;7^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",4.3,4.302,6,21,0)
^^10^10^2980916^^^^
"^DD",4.3,4.302,6,21,1,0)
This field is used during date purges and unreferenced message purges.
"^DD",4.3,4.302,6,21,2,0)

"^DD",4.3,4.302,6,21,3,0)
During date purges, messages older than this date are purged from the
"^DD",4.3,4.302,6,21,4,0)
Message file.
"^DD",4.3,4.302,6,21,5,0)

"^DD",4.3,4.302,6,21,6,0)
During unreferenced message purges, unreferenced messages are purged
"^DD",4.3,4.302,6,21,7,0)
if they were created on or before the purge end date.
"^DD",4.3,4.302,6,21,8,0)
However, messages which originated locally and were sent to remote sites
"^DD",4.3,4.302,6,21,9,0)
are not purged if they were created on or after this date.  This is to
"^DD",4.3,4.302,6,21,10,0)
give the remote sites some time to reply to the unreferenced message.
"^DD",4.3,4.302,6,"DT")
2980916
"^DD",4.3,4.302,7,0)
LAST UPDATE^D^^0;8^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",4.3,4.302,7,21,0)
^^4^4^2980918^^
"^DD",4.3,4.302,7,21,1,0)
This is the date & time of the last update by the process.
"^DD",4.3,4.302,7,21,2,0)
It, along with the LAST DATE PROCESSED field,
"^DD",4.3,4.302,7,21,3,0)
should indicate to the user that the task is progressing
"^DD",4.3,4.302,7,21,4,0)
as it is checked and changes during the process.
"^DD",4.3,4.302,7,"DT")
2900125
"^DD",4.3,4.302,8,0)
LAST DATE PROCESSED^D^^0;9^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",4.3,4.302,8,3)

"^DD",4.3,4.302,8,21,0)
^^4^4^2980916^^^
"^DD",4.3,4.302,8,21,1,0)
This field is updated during the date purge.
"^DD",4.3,4.302,8,21,2,0)
It is the local create date of the last message actually processed
"^DD",4.3,4.302,8,21,3,0)
when the update was made to the progress data which also includes
"^DD",4.3,4.302,8,21,4,0)
the date/time of the update.
"^DD",4.3,4.302,8,"DT")
2980916
"^DD",4.3,4.31,0)
SUBORDINATE DOMAIN SUB-FIELD^NL^2^3
"^DD",4.3,4.31,0,"DT")
2910618
"^DD",4.3,4.31,0,"NM","SUBORDINATE DOMAIN")

"^DD",4.3,4.31,0,"UP")
4.3
"^DD",4.3,4.31,.01,0)
SUBORDINATE DOMAIN^MP4.2'^DIC(4.2,^0;1^Q
"^DD",4.3,4.31,.01,3)
This is a list of all domains which consider this domain a parent
"^DD",4.3,4.31,.01,21,0)
^^4^4^2980122^^
"^DD",4.3,4.31,.01,21,1,0)
This field is not currently used.
"^DD",4.3,4.31,.01,21,2,0)
This is a domain which is subordinate to this local MailMan
"^DD",4.3,4.31,.01,21,3,0)
domain, i.e. a domain which considers this local domain a
"^DD",4.3,4.31,.01,21,4,0)
"parent".
"^DD",4.3,4.31,1,0)
DATE CHRISTENED^D^^0;2^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",4.3,4.31,1,3)
Date on which this subordinate domain was christened..
"^DD",4.3,4.31,1,21,0)
^^4^4^2980122^^
"^DD",4.3,4.31,1,21,1,0)
This field is not currently used.
"^DD",4.3,4.31,1,21,2,0)
This field holds the date and time on which this subordinate domain
"^DD",4.3,4.31,1,21,3,0)
was accepted by this domain.  It is controlled automatically by the
"^DD",4.3,4.31,1,21,4,0)
MailMan christening operation.
"^DD",4.3,4.31,2,0)
CHRISTENED BY^P200'^VA(200,^0;3^Q
"^DD",4.3,4.31,2,21,0)
^^3^3^2980122^^
"^DD",4.3,4.31,2,21,1,0)
This field is not currently used.
"^DD",4.3,4.31,2,21,2,0)
This field holds the name of the user who performed the christening
"^DD",4.3,4.31,2,21,3,0)
operation on this subordinate domain.
"^DD",4.3,4.31,2,"DT")
2910618
"^DD",4.3,4.37,0)
FTP NOTES SUB-FIELD^^.01^1
"^DD",4.3,4.37,0,"DT")
2930616
"^DD",4.3,4.37,0,"NM","FTP NOTES")

"^DD",4.3,4.37,0,"UP")
4.3
"^DD",4.3,4.37,.01,0)
FTP NOTES^WL^^0;1^Q
"^DD",4.3,4.37,.01,3)
Put special notes revelant to the FTP operations of this site.
"^DD",4.3,4.37,.01,21,0)
^^1^1^2931214^
"^DD",4.3,4.37,.01,21,1,0)
See above.
"^DD",4.3,4.37,.01,"DT")
2930616
"^DIC",3.7,3.7,0)
MAILBOX^3.7P
"^DIC",3.7,3.7,0,"GL")
^XMB(3.7,
"^DIC",3.7,3.7,"%",0)
^1.005^1^1
"^DIC",3.7,3.7,"%",1,0)
XM
"^DIC",3.7,3.7,"%","B","XM",1)

"^DIC",3.7,3.7,"%D",0)
^^7^7^2990320^^^^
"^DIC",3.7,3.7,"%D",1,0)
This file holds pointers to the message file, according to users.
"^DIC",3.7,3.7,"%D",2,0)
Each mailbox entry corresponds to a user.  POSTMASTER is a special
"^DIC",3.7,3.7,"%D",3,0)
user who controls the network communications queues.  Each user
"^DIC",3.7,3.7,"%D",4,0)
is automatically given two baskets: IN and  WASTE.  All incoming messages
"^DIC",3.7,3.7,"%D",5,0)
go into the users IN basket.  When the user deletes them, they are
"^DIC",3.7,3.7,"%D",6,0)
temporarily stored in the WASTE basket.   Users may create new baskets
"^DIC",3.7,3.7,"%D",7,0)
as they wish.
"^DIC",3.7,"B","MAILBOX",3.7)

"^DIC",3.73,3.73,0)
MESSAGES TO BE NEW AT A LATER DATE^3.73ID
"^DIC",3.73,3.73,0,"GL")
^XMB(3.73,
"^DIC",3.73,3.73,"%D",0)
^^2^2^2931204^^
"^DIC",3.73,3.73,"%D",1,0)
This file holds entries that are processed by a special MailMan job that
"^DIC",3.73,3.73,"%D",2,0)
makes messages new for people at scheduled dates and times.
"^DIC",3.73,"B","MESSAGES TO BE NEW AT A LATER DATE",3.73)

"^DIC",3.9,3.9,0)
MESSAGE^3.9s
"^DIC",3.9,3.9,0,"GL")
^XMB(3.9,
"^DIC",3.9,3.9,"%D",0)
^^1^1^2940407^^^^
"^DIC",3.9,3.9,"%D",0,"LE")
1
"^DIC",3.9,3.9,"%D",1,0)
These messages are the heart of the MailMan system.
"^DIC",3.9,"B","MESSAGE",3.9)

"^DIC",4.3,4.3,0)
MAILMAN SITE PARAMETERS^4.3P
"^DIC",4.3,4.3,0,"GL")
^XMB(1,
"^DIC",4.3,4.3,"%",0)
^1.005^1^1
"^DIC",4.3,4.3,"%",1,0)
XM
"^DIC",4.3,4.3,"%","B","XM",1)

"^DIC",4.3,4.3,"%D",0)
1^^6^6^2990320^^^^
"^DIC",4.3,4.3,"%D",1,0)
This file holds the site parameters for MailMan.
"^DIC",4.3,4.3,"%D",2,0)
It may have only one entry - the domain name of the installation site.
"^DIC",4.3,4.3,"%D",3,0)
Some parameters are defined by the systems manager during installation.
"^DIC",4.3,4.3,"%D",4,0)
Others may be edited subsequent to installation.  The parent domain,
"^DIC",4.3,4.3,"%D",5,0)
set to FORUM during initialization, may be changed.  Audit parameters may
"^DIC",4.3,4.3,"%D",6,0)
be established.
"^DIC",4.3,"B","MAILMAN SITE PARAMETERS",4.3)

**END**
**END**
