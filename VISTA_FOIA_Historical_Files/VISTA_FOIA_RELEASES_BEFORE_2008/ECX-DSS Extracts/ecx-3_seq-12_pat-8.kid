KIDS Distribution saved on Oct 22, 1998@08:00:02
ECX*3*8 - DSS FY1999 UPDATE
**KIDS**:ECX*3.0*8^

**INSTALL NAME**
ECX*3.0*8
"BLD",1385,0)
ECX*3.0*8^DSS EXTRACTS^0^2981013^y
"BLD",1385,1,0)
^^1^1^2981013^^^^
"BLD",1385,1,1,0)
DSS Extracts FY1999 Update.
"BLD",1385,4,0)
^9.64PA^727.825^22
"BLD",1385,4,727.1,0)
727.1
"BLD",1385,4,727.1,2,0)
^9.641^727.1^1
"BLD",1385,4,727.1,2,727.1,0)
EXTRACT DEFINITIONS  (File-top level)
"BLD",1385,4,727.1,2,727.1,1,0)
^9.6411^11^2
"BLD",1385,4,727.1,2,727.1,1,7,0)
TYPE
"BLD",1385,4,727.1,2,727.1,1,11,0)
RUNNING PIECE
"BLD",1385,4,727.1,222)
y^n^p^^^^n
"BLD",1385,4,727.3,0)
727.3
"BLD",1385,4,727.3,222)
y^y^f^^^^n
"BLD",1385,4,727.4,0)
727.4
"BLD",1385,4,727.4,222)
y^y^f^^^^n
"BLD",1385,4,727.802,0)
727.802
"BLD",1385,4,727.802,2,0)
^9.641^727.802^1
"BLD",1385,4,727.802,2,727.802,0)
ADMISSION EXTRACT  (File-top level)
"BLD",1385,4,727.802,2,727.802,1,0)
^9.6411^47^7
"BLD",1385,4,727.802,2,727.802,1,18,0)
ELIGIBILITY
"BLD",1385,4,727.802,2,727.802,1,34,0)
PRIMARY CARE PROVIDER
"BLD",1385,4,727.802,2,727.802,1,38,0)
DSS DEPT.
"BLD",1385,4,727.802,2,727.802,1,42,0)
ADMISSION ELIGIBILITY
"BLD",1385,4,727.802,2,727.802,1,45,0)
SHARING AGREEMENT PAYOR
"BLD",1385,4,727.802,2,727.802,1,46,0)
SHARING AGREEMENT INSURANCE
"BLD",1385,4,727.802,2,727.802,1,47,0)
ENROLLMENT LOCATION
"BLD",1385,4,727.802,222)
y^n^p^^^^n
"BLD",1385,4,727.803,0)
727.803
"BLD",1385,4,727.803,2,0)
^9.641^727.803^1
"BLD",1385,4,727.803,2,727.803,0)
CLINIC EXTRACT  (File-top level)
"BLD",1385,4,727.803,2,727.803,1,0)
^9.6411^16^21
"BLD",1385,4,727.803,2,727.803,1,16,0)
PRIMARY CARE PROVIDER
"BLD",1385,4,727.803,2,727.803,1,17,0)
PROVIDER
"BLD",1385,4,727.803,2,727.803,1,21,0)
ELIGIBILITY
"BLD",1385,4,727.803,2,727.803,1,33,0)
SEX
"BLD",1385,4,727.803,2,727.803,1,34,0)
ZIP+4
"BLD",1385,4,727.803,2,727.803,1,37,0)
ENCOUNTER ELIGIBILITY
"BLD",1385,4,727.803,2,727.803,1,40,0)
CPT CODE (2)
"BLD",1385,4,727.803,2,727.803,1,41,0)
CPT CODE (3)
"BLD",1385,4,727.803,2,727.803,1,42,0)
CPT CODE (4)
"BLD",1385,4,727.803,2,727.803,1,43,0)
CPT CODE (5)
"BLD",1385,4,727.803,2,727.803,1,44,0)
CPT CODE (6)
"BLD",1385,4,727.803,2,727.803,1,45,0)
CPT CODE (7)
"BLD",1385,4,727.803,2,727.803,1,46,0)
CPT CODE (8)
"BLD",1385,4,727.803,2,727.803,1,47,0)
CPT CODE (9)
"BLD",1385,4,727.803,2,727.803,1,48,0)
CPT CODE (10)
"BLD",1385,4,727.803,2,727.803,1,49,0)
CPT CODE (11)
"BLD",1385,4,727.803,2,727.803,1,50,0)
SHARING AGREEMENT PAYOR
"BLD",1385,4,727.803,2,727.803,1,51,0)
SHARING AGREEMENT INSURANCE
"BLD",1385,4,727.803,2,727.803,1,52,0)
ENROLLMENT LOCATION
"BLD",1385,4,727.803,2,727.803,1,53,0)
STATE
"BLD",1385,4,727.803,2,727.803,1,54,0)
COUNTY
"BLD",1385,4,727.803,222)
y^n^p^^^^n
"BLD",1385,4,727.804,0)
727.804
"BLD",1385,4,727.804,2,0)
^9.641^727.804^1
"BLD",1385,4,727.804,2,727.804,0)
CLINIC NOSHOW EXTRACT  (File-top level)
"BLD",1385,4,727.804,2,727.804,1,0)
^9.6411^25^2
"BLD",1385,4,727.804,2,727.804,1,18,0)
PRIMARY CARE PROVIDER
"BLD",1385,4,727.804,2,727.804,1,25,0)
SET PIECE
"BLD",1385,4,727.804,222)
y^n^p^^^^n
"BLD",1385,4,727.805,0)
727.805
"BLD",1385,4,727.805,2,0)
^9.641^727.805^1
"BLD",1385,4,727.805,2,727.805,0)
NURSING EXTRACT  (File-top level)
"BLD",1385,4,727.805,2,727.805,1,0)
^9.6411^19^1
"BLD",1385,4,727.805,2,727.805,1,19,0)
SET PIECE
"BLD",1385,4,727.805,222)
y^n^p^^^^n
"BLD",1385,4,727.806,0)
727.806
"BLD",1385,4,727.806,2,0)
^9.641^727.806^1
"BLD",1385,4,727.806,2,727.806,0)
DENTAL EXTRACT  (File-top level)
"BLD",1385,4,727.806,2,727.806,1,0)
^9.6411^54^2
"BLD",1385,4,727.806,2,727.806,1,49,0)
PRIMARY CARE PROVIDER
"BLD",1385,4,727.806,2,727.806,1,54,0)
SET PIECE
"BLD",1385,4,727.806,222)
y^n^p^^^^n
"BLD",1385,4,727.808,0)
727.808
"BLD",1385,4,727.808,2,0)
^9.641^727.808^1
"BLD",1385,4,727.808,2,727.808,0)
PHYSICAL MOVEMENT EXTRACT  (File-top level)
"BLD",1385,4,727.808,2,727.808,1,0)
^9.6411^25^1
"BLD",1385,4,727.808,2,727.808,1,25,0)
DSS DEPT.
"BLD",1385,4,727.808,222)
y^n^p^^^^n
"BLD",1385,4,727.809,0)
727.809
"BLD",1385,4,727.809,2,0)
^9.641^727.809^1
"BLD",1385,4,727.809,2,727.809,0)
UNIT DOSE LOCAL EXTRACT  (File-top level)
"BLD",1385,4,727.809,2,727.809,1,0)
^9.6411^24^1
"BLD",1385,4,727.809,2,727.809,1,24,0)
SET PIECE
"BLD",1385,4,727.809,222)
y^n^p^^^^n
"BLD",1385,4,727.81,0)
727.81
"BLD",1385,4,727.81,2,0)
^9.641^727.81^1
"BLD",1385,4,727.81,2,727.81,0)
PRESCRIPTION EXTRACT  (File-top level)
"BLD",1385,4,727.81,2,727.81,1,0)
^9.6411^41^5
"BLD",1385,4,727.81,2,727.81,1,31,0)
PRIMARY CARE PROVIDER
"BLD",1385,4,727.81,2,727.81,1,36,0)
SEX
"BLD",1385,4,727.81,2,727.81,1,37,0)
ZIP+4
"BLD",1385,4,727.81,2,727.81,1,40,0)
STATE
"BLD",1385,4,727.81,2,727.81,1,41,0)
COUNTY
"BLD",1385,4,727.81,222)
y^n^p^^^^n
"BLD",1385,4,727.811,0)
727.811
"BLD",1385,4,727.811,2,0)
^9.641^727.811^1
"BLD",1385,4,727.811,2,727.811,0)
SURGERY EXTRACT  (File-top level)
"BLD",1385,4,727.811,2,727.811,1,0)
^9.6411^42^2
"BLD",1385,4,727.811,2,727.811,1,35,0)
PRIMARY CARE PROVIDER
"BLD",1385,4,727.811,2,727.811,1,42,0)
SET PIECE
"BLD",1385,4,727.811,222)
y^n^p^^^^n
"BLD",1385,4,727.813,0)
727.813
"BLD",1385,4,727.813,2,0)
^9.641^727.813^1
"BLD",1385,4,727.813,2,727.813,0)
LABORATORY EXTRACT  (File-top level)
"BLD",1385,4,727.813,2,727.813,1,0)
^9.6411^25^4
"BLD",1385,4,727.813,2,727.813,1,14,0)
LOCATION
"BLD",1385,4,727.813,2,727.813,1,15,0)
PROVIDER
"BLD",1385,4,727.813,2,727.813,1,21,0)
PRIMARY CARE PROVIDER
"BLD",1385,4,727.813,2,727.813,1,25,0)
SET PIECE
"BLD",1385,4,727.813,222)
y^n^p^^^^n
"BLD",1385,4,727.814,0)
727.814
"BLD",1385,4,727.814,2,0)
^9.641^727.814^1
"BLD",1385,4,727.814,2,727.814,0)
RADIOLOGY EXTRACT  (File-top level)
"BLD",1385,4,727.814,2,727.814,1,0)
^9.6411^26^2
"BLD",1385,4,727.814,2,727.814,1,22,0)
PRIMARY CARE PROVIDER
"BLD",1385,4,727.814,2,727.814,1,26,0)
SET PIECE
"BLD",1385,4,727.814,222)
y^n^p^^^^n
"BLD",1385,4,727.815,0)
727.815
"BLD",1385,4,727.815,2,0)
^9.641^727.815^1
"BLD",1385,4,727.815,2,727.815,0)
EVENT CAPTURE LOCAL EXTRACT  (File-top level)
"BLD",1385,4,727.815,2,727.815,1,0)
^9.6411^44^3
"BLD",1385,4,727.815,2,727.815,1,28,0)
PRIMARY CARE PROVIDER
"BLD",1385,4,727.815,2,727.815,1,38,0)
PLACEHOLDER1
"BLD",1385,4,727.815,2,727.815,1,44,0)
SET PIECE
"BLD",1385,4,727.815,222)
y^n^p^^^^n
"BLD",1385,4,727.817,0)
727.817
"BLD",1385,4,727.817,2,0)
^9.641^727.817^1
"BLD",1385,4,727.817,2,727.817,0)
TREATING SPECIALTY CHANGE EXTRACT  (File-top level)
"BLD",1385,4,727.817,2,727.817,1,0)
^9.6411^31^2
"BLD",1385,4,727.817,2,727.817,1,30,0)
ATTENDING PHYSICIAN LOS
"BLD",1385,4,727.817,2,727.817,1,31,0)
PRIMARY WARD PROVIDER LOS
"BLD",1385,4,727.817,222)
y^n^p^^^^n
"BLD",1385,4,727.819,0)
727.819
"BLD",1385,4,727.819,2,0)
^9.641^727.819^1
"BLD",1385,4,727.819,2,727.819,0)
IV DETAIL EXTRACT  (File-top level)
"BLD",1385,4,727.819,2,727.819,1,0)
^9.6411^29^2
"BLD",1385,4,727.819,2,727.819,1,22,0)
PRIMARY CARE PROVIDER
"BLD",1385,4,727.819,2,727.819,1,29,0)
SET PIECE
"BLD",1385,4,727.819,222)
y^n^p^^^^n
"BLD",1385,4,727.823,0)
727.823
"BLD",1385,4,727.823,2,0)
^9.641^727.823^1
"BLD",1385,4,727.823,2,727.823,0)
PAI EXTRACT  (File-top level)
"BLD",1385,4,727.823,2,727.823,1,0)
^9.6411^15^1
"BLD",1385,4,727.823,2,727.823,1,15,0)
SET PIECE
"BLD",1385,4,727.823,222)
y^n^p^^^^n
"BLD",1385,4,727.824,0)
727.824
"BLD",1385,4,727.824,2,0)
^9.641^727.824^1
"BLD",1385,4,727.824,2,727.824,0)
LAB RESULTS EXTRACT  (File-top level)
"BLD",1385,4,727.824,2,727.824,1,0)
^9.6411^21^1
"BLD",1385,4,727.824,2,727.824,1,21,0)
SET PIECE
"BLD",1385,4,727.824,222)
y^n^p^^^^n
"BLD",1385,4,727.825,0)
727.825
"BLD",1385,4,727.825,2,0)
^9.641^727.825^1
"BLD",1385,4,727.825,2,727.825,0)
QUASAR EXTRACT  (File-top level)
"BLD",1385,4,727.825,2,727.825,1,0)
^9.6411^44^3
"BLD",1385,4,727.825,2,727.825,1,28,0)
PRIMARY CARE PROVIDER
"BLD",1385,4,727.825,2,727.825,1,38,0)
PLACEHOLDER1
"BLD",1385,4,727.825,2,727.825,1,44,0)
SET PIECE
"BLD",1385,4,727.825,222)
y^n^p^^^^n
"BLD",1385,4,729,0)
729
"BLD",1385,4,729,222)
y^y^f^^^^n
"BLD",1385,4,730,0)
730
"BLD",1385,4,730,2,0)
^9.641^730^1
"BLD",1385,4,730,2,730,0)
NATIONAL SERVICE  (File-top level)
"BLD",1385,4,730,2,730,1,0)
^9.6411^4^2
"BLD",1385,4,730,2,730,1,3,0)
DSS SERVICE CODE
"BLD",1385,4,730,2,730,1,4,0)
VA COST CENTER
"BLD",1385,4,730,222)
y^y^p^^^^n
"BLD",1385,4,"APDD",727.1,727.1)

"BLD",1385,4,"APDD",727.1,727.1,7)

"BLD",1385,4,"APDD",727.1,727.1,11)

"BLD",1385,4,"APDD",727.802,727.802)

"BLD",1385,4,"APDD",727.802,727.802,18)

"BLD",1385,4,"APDD",727.802,727.802,34)

"BLD",1385,4,"APDD",727.802,727.802,38)

"BLD",1385,4,"APDD",727.802,727.802,42)

"BLD",1385,4,"APDD",727.802,727.802,45)

"BLD",1385,4,"APDD",727.802,727.802,46)

"BLD",1385,4,"APDD",727.802,727.802,47)

"BLD",1385,4,"APDD",727.803,727.803)

"BLD",1385,4,"APDD",727.803,727.803,16)

"BLD",1385,4,"APDD",727.803,727.803,17)

"BLD",1385,4,"APDD",727.803,727.803,21)

"BLD",1385,4,"APDD",727.803,727.803,33)

"BLD",1385,4,"APDD",727.803,727.803,34)

"BLD",1385,4,"APDD",727.803,727.803,37)

"BLD",1385,4,"APDD",727.803,727.803,40)

"BLD",1385,4,"APDD",727.803,727.803,41)

"BLD",1385,4,"APDD",727.803,727.803,42)

"BLD",1385,4,"APDD",727.803,727.803,43)

"BLD",1385,4,"APDD",727.803,727.803,44)

"BLD",1385,4,"APDD",727.803,727.803,45)

"BLD",1385,4,"APDD",727.803,727.803,46)

"BLD",1385,4,"APDD",727.803,727.803,47)

"BLD",1385,4,"APDD",727.803,727.803,48)

"BLD",1385,4,"APDD",727.803,727.803,49)

"BLD",1385,4,"APDD",727.803,727.803,50)

"BLD",1385,4,"APDD",727.803,727.803,51)

"BLD",1385,4,"APDD",727.803,727.803,52)

"BLD",1385,4,"APDD",727.803,727.803,53)

"BLD",1385,4,"APDD",727.803,727.803,54)

"BLD",1385,4,"APDD",727.804,727.804)

"BLD",1385,4,"APDD",727.804,727.804,18)

"BLD",1385,4,"APDD",727.804,727.804,25)

"BLD",1385,4,"APDD",727.805,727.805)

"BLD",1385,4,"APDD",727.805,727.805,19)

"BLD",1385,4,"APDD",727.806,727.806)

"BLD",1385,4,"APDD",727.806,727.806,49)

"BLD",1385,4,"APDD",727.806,727.806,54)

"BLD",1385,4,"APDD",727.808,727.808)

"BLD",1385,4,"APDD",727.808,727.808,25)

"BLD",1385,4,"APDD",727.809,727.809)

"BLD",1385,4,"APDD",727.809,727.809,24)

"BLD",1385,4,"APDD",727.81,727.81)

"BLD",1385,4,"APDD",727.81,727.81,31)

"BLD",1385,4,"APDD",727.81,727.81,36)

"BLD",1385,4,"APDD",727.81,727.81,37)

"BLD",1385,4,"APDD",727.81,727.81,40)

"BLD",1385,4,"APDD",727.81,727.81,41)

"BLD",1385,4,"APDD",727.811,727.811)

"BLD",1385,4,"APDD",727.811,727.811,35)

"BLD",1385,4,"APDD",727.811,727.811,42)

"BLD",1385,4,"APDD",727.813,727.813)

"BLD",1385,4,"APDD",727.813,727.813,14)

"BLD",1385,4,"APDD",727.813,727.813,15)

"BLD",1385,4,"APDD",727.813,727.813,21)

"BLD",1385,4,"APDD",727.813,727.813,25)

"BLD",1385,4,"APDD",727.814,727.814)

"BLD",1385,4,"APDD",727.814,727.814,22)

"BLD",1385,4,"APDD",727.814,727.814,26)

"BLD",1385,4,"APDD",727.815,727.815)

"BLD",1385,4,"APDD",727.815,727.815,28)

"BLD",1385,4,"APDD",727.815,727.815,38)

"BLD",1385,4,"APDD",727.815,727.815,44)

"BLD",1385,4,"APDD",727.817,727.817)

"BLD",1385,4,"APDD",727.817,727.817,30)

"BLD",1385,4,"APDD",727.817,727.817,31)

"BLD",1385,4,"APDD",727.819,727.819)

"BLD",1385,4,"APDD",727.819,727.819,22)

"BLD",1385,4,"APDD",727.819,727.819,29)

"BLD",1385,4,"APDD",727.823,727.823)

"BLD",1385,4,"APDD",727.823,727.823,15)

"BLD",1385,4,"APDD",727.824,727.824)

"BLD",1385,4,"APDD",727.824,727.824,21)

"BLD",1385,4,"APDD",727.825,727.825)

"BLD",1385,4,"APDD",727.825,727.825,28)

"BLD",1385,4,"APDD",727.825,727.825,38)

"BLD",1385,4,"APDD",727.825,727.825,44)

"BLD",1385,4,"APDD",730,730)

"BLD",1385,4,"APDD",730,730,3)

"BLD",1385,4,"APDD",730,730,4)

"BLD",1385,4,"B",727.1,727.1)

"BLD",1385,4,"B",727.3,727.3)

"BLD",1385,4,"B",727.4,727.4)

"BLD",1385,4,"B",727.802,727.802)

"BLD",1385,4,"B",727.803,727.803)

"BLD",1385,4,"B",727.804,727.804)

"BLD",1385,4,"B",727.805,727.805)

"BLD",1385,4,"B",727.806,727.806)

"BLD",1385,4,"B",727.808,727.808)

"BLD",1385,4,"B",727.809,727.809)

"BLD",1385,4,"B",727.81,727.81)

"BLD",1385,4,"B",727.811,727.811)

"BLD",1385,4,"B",727.813,727.813)

"BLD",1385,4,"B",727.814,727.814)

"BLD",1385,4,"B",727.815,727.815)

"BLD",1385,4,"B",727.817,727.817)

"BLD",1385,4,"B",727.819,727.819)

"BLD",1385,4,"B",727.823,727.823)

"BLD",1385,4,"B",727.824,727.824)

"BLD",1385,4,"B",727.825,727.825)

"BLD",1385,4,"B",729,729)

"BLD",1385,4,"B",730,730)

"BLD",1385,"INIT")
ECX3P8PT
"BLD",1385,"KRN",0)
^9.67PA^19^18
"BLD",1385,"KRN",.4,0)
.4
"BLD",1385,"KRN",.401,0)
.401
"BLD",1385,"KRN",.402,0)
.402
"BLD",1385,"KRN",.403,0)
.403
"BLD",1385,"KRN",.5,0)
.5
"BLD",1385,"KRN",.84,0)
.84
"BLD",1385,"KRN",3.6,0)
3.6
"BLD",1385,"KRN",3.8,0)
3.8
"BLD",1385,"KRN",9.2,0)
9.2
"BLD",1385,"KRN",9.8,0)
9.8
"BLD",1385,"KRN",9.8,"NM",0)
^9.68A^76^69
"BLD",1385,"KRN",9.8,"NM",1,0)
ECX3P8P1^^0^B55011190
"BLD",1385,"KRN",9.8,"NM",2,0)
ECX3P8P2^^0^B19757053
"BLD",1385,"KRN",9.8,"NM",3,0)
ECX3P8P3^^0^B6314055
"BLD",1385,"KRN",9.8,"NM",4,0)
ECX3P8PT^^0^B123291
"BLD",1385,"KRN",9.8,"NM",7,0)
ECXDSSD^^0^B45164085
"BLD",1385,"KRN",9.8,"NM",10,0)
ECXAADM^^0^B36294588
"BLD",1385,"KRN",9.8,"NM",11,0)
ECXADEN^^0^B54917592
"BLD",1385,"KRN",9.8,"NM",12,0)
ECXAECQ^^0^B27355088
"BLD",1385,"KRN",9.8,"NM",13,0)
ECXAECS^^0^B40489793
"BLD",1385,"KRN",9.8,"NM",14,0)
ECXALAB^^0^B32262849
"BLD",1385,"KRN",9.8,"NM",15,0)
ECXAMOV^^0^B64141382
"BLD",1385,"KRN",9.8,"NM",16,0)
ECXANUR^^0^B39095503
"BLD",1385,"KRN",9.8,"NM",17,0)
ECXAPAS^^0^B14597256
"BLD",1385,"KRN",9.8,"NM",18,0)
ECXARAD^^0^B36956828
"BLD",1385,"KRN",9.8,"NM",19,0)
ECXASUR^^0^B34325110
"BLD",1385,"KRN",9.8,"NM",20,0)
ECXATRT^^0^B47325400
"BLD",1385,"KRN",9.8,"NM",21,0)
ECXADM^^0^B15461464
"BLD",1385,"KRN",9.8,"NM",22,0)
ECXDENT^^0^B5638119
"BLD",1385,"KRN",9.8,"NM",23,0)
ECXDIVIV^^0^B12532326
"BLD",1385,"KRN",9.8,"NM",24,0)
ECXEC^^0^B15074270
"BLD",1385,"KRN",9.8,"NM",25,0)
ECXPIV1^^0^B391669
"BLD",1385,"KRN",9.8,"NM",26,0)
ECXPIVD^^0^B12387949
"BLD",1385,"KRN",9.8,"NM",27,0)
ECXPIVDN^^0^B20978629
"BLD",1385,"KRN",9.8,"NM",28,0)
ECXLABR^^0^B10392908
"BLD",1385,"KRN",9.8,"NM",29,0)
ECXLAB1^^0^B7105289
"BLD",1385,"KRN",9.8,"NM",30,0)
ECXNURS^^0^B8203555
"BLD",1385,"KRN",9.8,"NM",31,0)
ECXPAI^^0^B7176167
"BLD",1385,"KRN",9.8,"NM",32,0)
ECXMOV^^0^B6676158
"BLD",1385,"KRN",9.8,"NM",33,0)
ECXOPRX^^0^B21651617
"BLD",1385,"KRN",9.8,"NM",34,0)
ECXQSR^^0^B16010852
"BLD",1385,"KRN",9.8,"NM",35,0)
ECXRAD^^0^B10425750
"BLD",1385,"KRN",9.8,"NM",36,0)
ECXSETUP^^0^B26132298
"BLD",1385,"KRN",9.8,"NM",37,0)
ECXSETU1^^0^B27256178
"BLD",1385,"KRN",9.8,"NM",38,0)
ECXSCX^^0^B62769986
"BLD",1385,"KRN",9.8,"NM",39,0)
ECXSCNS^^0^B6917870
"BLD",1385,"KRN",9.8,"NM",40,0)
ECXSURG^^0^B16957546
"BLD",1385,"KRN",9.8,"NM",41,0)
ECXTRAC^^0^B38168499
"BLD",1385,"KRN",9.8,"NM",42,0)
ECXTRANS^^0^B36018767
"BLD",1385,"KRN",9.8,"NM",43,0)
ECXTRT^^0^B30915106
"BLD",1385,"KRN",9.8,"NM",44,0)
ECXTRT1^^0^B19563640
"BLD",1385,"KRN",9.8,"NM",45,0)
ECXTAUTO^^0^B17191066
"BLD",1385,"KRN",9.8,"NM",46,0)
ECXTLOCL^^0^B8678963
"BLD",1385,"KRN",9.8,"NM",47,0)
ECXUD^^0^B9627586
"BLD",1385,"KRN",9.8,"NM",48,0)
ECXUD1^^0^B407157
"BLD",1385,"KRN",9.8,"NM",49,0)
ECXUTL^^0^B33291575
"BLD",1385,"KRN",9.8,"NM",50,0)
ECXUTL2^^0^B12382222
"BLD",1385,"KRN",9.8,"NM",51,0)
ECXUTLA^^0^B50541468
"BLD",1385,"KRN",9.8,"NM",52,0)
ECXDVSN^^0^B41885150
"BLD",1385,"KRN",9.8,"NM",55,0)
ECXDVSNX^^0^B7609407
"BLD",1385,"KRN",9.8,"NM",56,0)
ECXWRD^^0^B14814274
"BLD",1385,"KRN",9.8,"NM",57,0)
ECXWRDX^^0^B19919646
"BLD",1385,"KRN",9.8,"NM",58,0)
ECXXREV^^0^B6974651
"BLD",1385,"KRN",9.8,"NM",59,0)
ECXDRUG^^0^B5124178
"BLD",1385,"KRN",9.8,"NM",60,0)
ECXDVSN1^^0^B27999936
"BLD",1385,"KRN",9.8,"NM",61,0)
ECXFEKE1^^0^B33931331
"BLD",1385,"KRN",9.8,"NM",62,0)
ECXFEKEY^^0^B62677964
"BLD",1385,"KRN",9.8,"NM",63,0)
ECXFELOC^^0^B17110525
"BLD",1385,"KRN",9.8,"NM",64,0)
ECXLABPI^^0^B2465114
"BLD",1385,"KRN",9.8,"NM",65,0)
ECXLABRS^^0^B8740300
"BLD",1385,"KRN",9.8,"NM",66,0)
ECXLARP^^0^B8800144
"BLD",1385,"KRN",9.8,"NM",68,0)
ECXPURG1^^0^B31575114
"BLD",1385,"KRN",9.8,"NM",69,0)
ECXSARAD^^0^B11284823
"BLD",1385,"KRN",9.8,"NM",70,0)
ECXSADEN^^0^B11751260
"BLD",1385,"KRN",9.8,"NM",71,0)
ECXSARXS^^0^B15203483
"BLD",1385,"KRN",9.8,"NM",72,0)
ECXSASUR^^0^B25856966
"BLD",1385,"KRN",9.8,"NM",73,0)
ECXSCLD^^0^B37439246
"BLD",1385,"KRN",9.8,"NM",74,0)
ECXLABN^^0^B14495301
"BLD",1385,"KRN",9.8,"NM",75,0)
ECXKILL^^0^B13006405
"BLD",1385,"KRN",9.8,"NM",76,0)
ECXSCX1^^0^B7246512
"BLD",1385,"KRN",9.8,"NM","B","ECX3P8P1",1)

"BLD",1385,"KRN",9.8,"NM","B","ECX3P8P2",2)

"BLD",1385,"KRN",9.8,"NM","B","ECX3P8P3",3)

"BLD",1385,"KRN",9.8,"NM","B","ECX3P8PT",4)

"BLD",1385,"KRN",9.8,"NM","B","ECXAADM",10)

"BLD",1385,"KRN",9.8,"NM","B","ECXADEN",11)

"BLD",1385,"KRN",9.8,"NM","B","ECXADM",21)

"BLD",1385,"KRN",9.8,"NM","B","ECXAECQ",12)

"BLD",1385,"KRN",9.8,"NM","B","ECXAECS",13)

"BLD",1385,"KRN",9.8,"NM","B","ECXALAB",14)

"BLD",1385,"KRN",9.8,"NM","B","ECXAMOV",15)

"BLD",1385,"KRN",9.8,"NM","B","ECXANUR",16)

"BLD",1385,"KRN",9.8,"NM","B","ECXAPAS",17)

"BLD",1385,"KRN",9.8,"NM","B","ECXARAD",18)

"BLD",1385,"KRN",9.8,"NM","B","ECXASUR",19)

"BLD",1385,"KRN",9.8,"NM","B","ECXATRT",20)

"BLD",1385,"KRN",9.8,"NM","B","ECXDENT",22)

"BLD",1385,"KRN",9.8,"NM","B","ECXDIVIV",23)

"BLD",1385,"KRN",9.8,"NM","B","ECXDRUG",59)

"BLD",1385,"KRN",9.8,"NM","B","ECXDSSD",7)

"BLD",1385,"KRN",9.8,"NM","B","ECXDVSN",52)

"BLD",1385,"KRN",9.8,"NM","B","ECXDVSN1",60)

"BLD",1385,"KRN",9.8,"NM","B","ECXDVSNX",55)

"BLD",1385,"KRN",9.8,"NM","B","ECXEC",24)

"BLD",1385,"KRN",9.8,"NM","B","ECXFEKE1",61)

"BLD",1385,"KRN",9.8,"NM","B","ECXFEKEY",62)

"BLD",1385,"KRN",9.8,"NM","B","ECXFELOC",63)

"BLD",1385,"KRN",9.8,"NM","B","ECXKILL",75)

"BLD",1385,"KRN",9.8,"NM","B","ECXLAB1",29)

"BLD",1385,"KRN",9.8,"NM","B","ECXLABN",74)

"BLD",1385,"KRN",9.8,"NM","B","ECXLABPI",64)

"BLD",1385,"KRN",9.8,"NM","B","ECXLABR",28)

"BLD",1385,"KRN",9.8,"NM","B","ECXLABRS",65)

"BLD",1385,"KRN",9.8,"NM","B","ECXLARP",66)

"BLD",1385,"KRN",9.8,"NM","B","ECXMOV",32)

"BLD",1385,"KRN",9.8,"NM","B","ECXNURS",30)

"BLD",1385,"KRN",9.8,"NM","B","ECXOPRX",33)

"BLD",1385,"KRN",9.8,"NM","B","ECXPAI",31)

"BLD",1385,"KRN",9.8,"NM","B","ECXPIV1",25)

"BLD",1385,"KRN",9.8,"NM","B","ECXPIVD",26)

"BLD",1385,"KRN",9.8,"NM","B","ECXPIVDN",27)

"BLD",1385,"KRN",9.8,"NM","B","ECXPURG1",68)

"BLD",1385,"KRN",9.8,"NM","B","ECXQSR",34)

"BLD",1385,"KRN",9.8,"NM","B","ECXRAD",35)

"BLD",1385,"KRN",9.8,"NM","B","ECXSADEN",70)

"BLD",1385,"KRN",9.8,"NM","B","ECXSARAD",69)

"BLD",1385,"KRN",9.8,"NM","B","ECXSARXS",71)

"BLD",1385,"KRN",9.8,"NM","B","ECXSASUR",72)

"BLD",1385,"KRN",9.8,"NM","B","ECXSCLD",73)

"BLD",1385,"KRN",9.8,"NM","B","ECXSCNS",39)

"BLD",1385,"KRN",9.8,"NM","B","ECXSCX",38)

"BLD",1385,"KRN",9.8,"NM","B","ECXSCX1",76)

"BLD",1385,"KRN",9.8,"NM","B","ECXSETU1",37)

"BLD",1385,"KRN",9.8,"NM","B","ECXSETUP",36)

"BLD",1385,"KRN",9.8,"NM","B","ECXSURG",40)

"BLD",1385,"KRN",9.8,"NM","B","ECXTAUTO",45)

"BLD",1385,"KRN",9.8,"NM","B","ECXTLOCL",46)

"BLD",1385,"KRN",9.8,"NM","B","ECXTRAC",41)

"BLD",1385,"KRN",9.8,"NM","B","ECXTRANS",42)

"BLD",1385,"KRN",9.8,"NM","B","ECXTRT",43)

"BLD",1385,"KRN",9.8,"NM","B","ECXTRT1",44)

"BLD",1385,"KRN",9.8,"NM","B","ECXUD",47)

"BLD",1385,"KRN",9.8,"NM","B","ECXUD1",48)

"BLD",1385,"KRN",9.8,"NM","B","ECXUTL",49)

"BLD",1385,"KRN",9.8,"NM","B","ECXUTL2",50)

"BLD",1385,"KRN",9.8,"NM","B","ECXUTLA",51)

"BLD",1385,"KRN",9.8,"NM","B","ECXWRD",56)

"BLD",1385,"KRN",9.8,"NM","B","ECXWRDX",57)

"BLD",1385,"KRN",9.8,"NM","B","ECXXREV",58)

"BLD",1385,"KRN",19,0)
19
"BLD",1385,"KRN",19,"NM",0)
^9.68A^6^6
"BLD",1385,"KRN",19,"NM",1,0)
ECX DSSDEPT MGMT^^0
"BLD",1385,"KRN",19,"NM",2,0)
ECX DIVISION ID^^0
"BLD",1385,"KRN",19,"NM",3,0)
ECX WARD DSSDEPT^^0
"BLD",1385,"KRN",19,"NM",4,0)
ECX DSSDEPT DECODE^^0
"BLD",1385,"KRN",19,"NM",5,0)
ECXWRD^^0
"BLD",1385,"KRN",19,"NM",6,0)
ECX MAINTENANCE^^2
"BLD",1385,"KRN",19,"NM","B","ECX DIVISION ID",2)

"BLD",1385,"KRN",19,"NM","B","ECX DSSDEPT DECODE",4)

"BLD",1385,"KRN",19,"NM","B","ECX DSSDEPT MGMT",1)

"BLD",1385,"KRN",19,"NM","B","ECX MAINTENANCE",6)

"BLD",1385,"KRN",19,"NM","B","ECX WARD DSSDEPT",3)

"BLD",1385,"KRN",19,"NM","B","ECXWRD",5)

"BLD",1385,"KRN",19.1,0)
19.1
"BLD",1385,"KRN",101,0)
101
"BLD",1385,"KRN",409.61,0)
409.61
"BLD",1385,"KRN",771,0)
771
"BLD",1385,"KRN",869.2,0)
869.2
"BLD",1385,"KRN",870,0)
870
"BLD",1385,"KRN",8994,0)
8994
"BLD",1385,"KRN","B",.4,.4)

"BLD",1385,"KRN","B",.401,.401)

"BLD",1385,"KRN","B",.402,.402)

"BLD",1385,"KRN","B",.403,.403)

"BLD",1385,"KRN","B",.5,.5)

"BLD",1385,"KRN","B",.84,.84)

"BLD",1385,"KRN","B",3.6,3.6)

"BLD",1385,"KRN","B",3.8,3.8)

"BLD",1385,"KRN","B",9.2,9.2)

"BLD",1385,"KRN","B",9.8,9.8)

"BLD",1385,"KRN","B",19,19)

"BLD",1385,"KRN","B",19.1,19.1)

"BLD",1385,"KRN","B",101,101)

"BLD",1385,"KRN","B",409.61,409.61)

"BLD",1385,"KRN","B",771,771)

"BLD",1385,"KRN","B",869.2,869.2)

"BLD",1385,"KRN","B",870,870)

"BLD",1385,"KRN","B",8994,8994)

"BLD",1385,"QUES",0)
^9.62^^
"BLD",1385,"REQB",0)
^9.611^2^2
"BLD",1385,"REQB",1,0)
ECX*3.0*11^2
"BLD",1385,"REQB",2,0)
ECX*3.0*12^2
"BLD",1385,"REQB","B","ECX*3.0*11",1)

"BLD",1385,"REQB","B","ECX*3.0*12",2)

"FIA",727.1)
EXTRACT DEFINITIONS
"FIA",727.1,0)
^ECX(727.1,
"FIA",727.1,0,0)
727.1
"FIA",727.1,0,1)
y^n^p^^^^n
"FIA",727.1,0,10)

"FIA",727.1,0,11)

"FIA",727.1,0,"RLRO")

"FIA",727.1,0,"VR")
3.0^ECX
"FIA",727.1,727.1)
1
"FIA",727.1,727.1,7)

"FIA",727.1,727.1,11)

"FIA",727.3)
DSS DIVISION IDENTIFIER
"FIA",727.3,0)
^ECX(727.3,
"FIA",727.3,0,0)
727.3P
"FIA",727.3,0,1)
y^y^f^^^^n
"FIA",727.3,0,10)

"FIA",727.3,0,11)

"FIA",727.3,0,"RLRO")

"FIA",727.3,0,"VR")
3.0^ECX
"FIA",727.3,727.3)
0
"FIA",727.4)
DSS WARD
"FIA",727.4,0)
^ECX(727.4,
"FIA",727.4,0,0)
727.4P
"FIA",727.4,0,1)
y^y^f^^^^n
"FIA",727.4,0,10)

"FIA",727.4,0,11)

"FIA",727.4,0,"RLRO")

"FIA",727.4,0,"VR")
3.0^ECX
"FIA",727.4,727.4)
0
"FIA",727.802)
ADMISSION EXTRACT
"FIA",727.802,0)
^ECX(727.802,
"FIA",727.802,0,0)
727.802
"FIA",727.802,0,1)
y^n^p^^^^n
"FIA",727.802,0,10)

"FIA",727.802,0,11)

"FIA",727.802,0,"RLRO")

"FIA",727.802,0,"VR")
3.0^ECX
"FIA",727.802,727.802)
1
"FIA",727.802,727.802,18)

"FIA",727.802,727.802,34)

"FIA",727.802,727.802,38)

"FIA",727.802,727.802,42)

"FIA",727.802,727.802,45)

"FIA",727.802,727.802,46)

"FIA",727.802,727.802,47)

"FIA",727.803)
CLINIC EXTRACT
"FIA",727.803,0)
^ECX(727.803,
"FIA",727.803,0,0)
727.803
"FIA",727.803,0,1)
y^n^p^^^^n
"FIA",727.803,0,10)

"FIA",727.803,0,11)

"FIA",727.803,0,"RLRO")

"FIA",727.803,0,"VR")
3.0^ECX
"FIA",727.803,727.803)
1
"FIA",727.803,727.803,16)

"FIA",727.803,727.803,17)

"FIA",727.803,727.803,21)

"FIA",727.803,727.803,33)

"FIA",727.803,727.803,34)

"FIA",727.803,727.803,37)

"FIA",727.803,727.803,40)

"FIA",727.803,727.803,41)

"FIA",727.803,727.803,42)

"FIA",727.803,727.803,43)

"FIA",727.803,727.803,44)

"FIA",727.803,727.803,45)

"FIA",727.803,727.803,46)

"FIA",727.803,727.803,47)

"FIA",727.803,727.803,48)

"FIA",727.803,727.803,49)

"FIA",727.803,727.803,50)

"FIA",727.803,727.803,51)

"FIA",727.803,727.803,52)

"FIA",727.803,727.803,53)

"FIA",727.803,727.803,54)

"FIA",727.804)
CLINIC NOSHOW EXTRACT
"FIA",727.804,0)
^ECX(727.804,
"FIA",727.804,0,0)
727.804
"FIA",727.804,0,1)
y^n^p^^^^n
"FIA",727.804,0,10)

"FIA",727.804,0,11)

"FIA",727.804,0,"RLRO")

"FIA",727.804,0,"VR")
3.0^ECX
"FIA",727.804,727.804)
1
"FIA",727.804,727.804,18)

"FIA",727.804,727.804,25)

"FIA",727.805)
NURSING EXTRACT
"FIA",727.805,0)
^ECX(727.805,
"FIA",727.805,0,0)
727.805
"FIA",727.805,0,1)
y^n^p^^^^n
"FIA",727.805,0,10)

"FIA",727.805,0,11)

"FIA",727.805,0,"RLRO")

"FIA",727.805,0,"VR")
3.0^ECX
"FIA",727.805,727.805)
1
"FIA",727.805,727.805,19)

"FIA",727.806)
DENTAL EXTRACT
"FIA",727.806,0)
^ECX(727.806,
"FIA",727.806,0,0)
727.806
"FIA",727.806,0,1)
y^n^p^^^^n
"FIA",727.806,0,10)

"FIA",727.806,0,11)

"FIA",727.806,0,"RLRO")

"FIA",727.806,0,"VR")
3.0^ECX
"FIA",727.806,727.806)
1
"FIA",727.806,727.806,49)

"FIA",727.806,727.806,54)

"FIA",727.808)
PHYSICAL MOVEMENT EXTRACT
"FIA",727.808,0)
^ECX(727.808,
"FIA",727.808,0,0)
727.808
"FIA",727.808,0,1)
y^n^p^^^^n
"FIA",727.808,0,10)

"FIA",727.808,0,11)

"FIA",727.808,0,"RLRO")

"FIA",727.808,0,"VR")
3.0^ECX
"FIA",727.808,727.808)
1
"FIA",727.808,727.808,25)

"FIA",727.809)
UNIT DOSE LOCAL EXTRACT
"FIA",727.809,0)
^ECX(727.809,
"FIA",727.809,0,0)
727.809
"FIA",727.809,0,1)
y^n^p^^^^n
"FIA",727.809,0,10)

"FIA",727.809,0,11)

"FIA",727.809,0,"RLRO")

"FIA",727.809,0,"VR")
3.0^ECX
"FIA",727.809,727.809)
1
"FIA",727.809,727.809,24)

"FIA",727.81)
PRESCRIPTION EXTRACT
"FIA",727.81,0)
^ECX(727.81,
"FIA",727.81,0,0)
727.81
"FIA",727.81,0,1)
y^n^p^^^^n
"FIA",727.81,0,10)

"FIA",727.81,0,11)

"FIA",727.81,0,"RLRO")

"FIA",727.81,0,"VR")
3.0^ECX
"FIA",727.81,727.81)
1
"FIA",727.81,727.81,31)

"FIA",727.81,727.81,36)

"FIA",727.81,727.81,37)

"FIA",727.81,727.81,40)

"FIA",727.81,727.81,41)

"FIA",727.811)
SURGERY EXTRACT
"FIA",727.811,0)
^ECX(727.811,
"FIA",727.811,0,0)
727.811
"FIA",727.811,0,1)
y^n^p^^^^n
"FIA",727.811,0,10)

"FIA",727.811,0,11)

"FIA",727.811,0,"RLRO")

"FIA",727.811,0,"VR")
3.0^ECX
"FIA",727.811,727.811)
1
"FIA",727.811,727.811,35)

"FIA",727.811,727.811,42)

"FIA",727.813)
LABORATORY EXTRACT
"FIA",727.813,0)
^ECX(727.813,
"FIA",727.813,0,0)
727.813
"FIA",727.813,0,1)
y^n^p^^^^n
"FIA",727.813,0,10)

"FIA",727.813,0,11)

"FIA",727.813,0,"RLRO")

"FIA",727.813,0,"VR")
3.0^ECX
"FIA",727.813,727.813)
1
"FIA",727.813,727.813,14)

"FIA",727.813,727.813,15)

"FIA",727.813,727.813,21)

"FIA",727.813,727.813,25)

"FIA",727.814)
RADIOLOGY EXTRACT
"FIA",727.814,0)
^ECX(727.814,
"FIA",727.814,0,0)
727.814
"FIA",727.814,0,1)
y^n^p^^^^n
"FIA",727.814,0,10)

"FIA",727.814,0,11)

"FIA",727.814,0,"RLRO")

"FIA",727.814,0,"VR")
3.0^ECX
"FIA",727.814,727.814)
1
"FIA",727.814,727.814,22)

"FIA",727.814,727.814,26)

"FIA",727.815)
EVENT CAPTURE LOCAL EXTRACT
"FIA",727.815,0)
^ECX(727.815,
"FIA",727.815,0,0)
727.815
"FIA",727.815,0,1)
y^n^p^^^^n
"FIA",727.815,0,10)

"FIA",727.815,0,11)

"FIA",727.815,0,"RLRO")

"FIA",727.815,0,"VR")
3.0^ECX
"FIA",727.815,727.815)
1
"FIA",727.815,727.815,28)

"FIA",727.815,727.815,38)

"FIA",727.815,727.815,44)

"FIA",727.817)
TREATING SPECIALTY CHANGE EXTRACT
"FIA",727.817,0)
^ECX(727.817,
"FIA",727.817,0,0)
727.817
"FIA",727.817,0,1)
y^n^p^^^^n
"FIA",727.817,0,10)

"FIA",727.817,0,11)

"FIA",727.817,0,"RLRO")

"FIA",727.817,0,"VR")
3.0^ECX
"FIA",727.817,727.817)
1
"FIA",727.817,727.817,30)

"FIA",727.817,727.817,31)

"FIA",727.819)
IV DETAIL EXTRACT
"FIA",727.819,0)
^ECX(727.819,
"FIA",727.819,0,0)
727.819
"FIA",727.819,0,1)
y^n^p^^^^n
"FIA",727.819,0,10)

"FIA",727.819,0,11)

"FIA",727.819,0,"RLRO")

"FIA",727.819,0,"VR")
3.0^ECX
"FIA",727.819,727.819)
1
"FIA",727.819,727.819,22)

"FIA",727.819,727.819,29)

"FIA",727.823)
PAI EXTRACT
"FIA",727.823,0)
^ECX(727.823,
"FIA",727.823,0,0)
727.823
"FIA",727.823,0,1)
y^n^p^^^^n
"FIA",727.823,0,10)

"FIA",727.823,0,11)

"FIA",727.823,0,"RLRO")

"FIA",727.823,0,"VR")
3.0^ECX
"FIA",727.823,727.823)
1
"FIA",727.823,727.823,15)

"FIA",727.824)
LAB RESULTS EXTRACT
"FIA",727.824,0)
^ECX(727.824,
"FIA",727.824,0,0)
727.824
"FIA",727.824,0,1)
y^n^p^^^^n
"FIA",727.824,0,10)

"FIA",727.824,0,11)

"FIA",727.824,0,"RLRO")

"FIA",727.824,0,"VR")
3.0^ECX
"FIA",727.824,727.824)
1
"FIA",727.824,727.824,21)

"FIA",727.825)
QUASAR EXTRACT
"FIA",727.825,0)
^ECX(727.825,
"FIA",727.825,0,0)
727.825
"FIA",727.825,0,1)
y^n^p^^^^n
"FIA",727.825,0,10)

"FIA",727.825,0,11)

"FIA",727.825,0,"RLRO")

"FIA",727.825,0,"VR")
3.0^ECX
"FIA",727.825,727.825)
1
"FIA",727.825,727.825,28)

"FIA",727.825,727.825,38)

"FIA",727.825,727.825,44)

"FIA",729)
DSS PRODUCTION UNIT
"FIA",729,0)
^ECX(729,
"FIA",729,0,0)
729I
"FIA",729,0,1)
y^y^f^^^^n
"FIA",729,0,10)

"FIA",729,0,11)

"FIA",729,0,"RLRO")

"FIA",729,0,"VR")
3.0^ECX
"FIA",729,729)
0
"FIA",730)
NATIONAL SERVICE
"FIA",730,0)
^ECC(730,
"FIA",730,0,0)
730I
"FIA",730,0,1)
y^y^p^^^^n
"FIA",730,0,10)

"FIA",730,0,11)

"FIA",730,0,"RLRO")

"FIA",730,0,"VR")
3.0^ECX
"FIA",730,730)
1
"FIA",730,730,3)

"FIA",730,730,4)

"INIT")
ECX3P8PT
"KRN",19,10161,-1)
2^6
"KRN",19,10161,0)
ECX MAINTENANCE^Maintenance^^M^11714^ECXMGR^^^^^^513
"KRN",19,10161,10,0)
^19.01PI^9^9
"KRN",19,10161,10,9,0)
10853^8^45
"KRN",19,10161,10,9,"^")
ECX DSSDEPT MGMT
"KRN",19,10161,"U")
MAINTENANCE
"KRN",19,10169,-1)
0^5
"KRN",19,10169,0)
ECXWRD^Active MAS Wards for Fiscal Year Print^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10169,1,0)
^^7^7^2980721^^^
"KRN",19,10169,1,1,0)
This option prints a list of all MAS wards that were active at any time 
"KRN",19,10169,1,2,0)
during the current fiscal year.  The list is sorted by Medical Center 
"KRN",19,10169,1,3,0)
Division and displays the pointer to the HOSPITAL LOCATION file (#44),
"KRN",19,10169,1,4,0)
the service and specialty associated with the ward in the WARD LOCATION
"KRN",19,10169,1,5,0)
file (#42), and the DSS Department code associated with the ward in the
"KRN",19,10169,1,6,0)
DSS WARD file (#727.4).
"KRN",19,10169,1,7,0)
      
"KRN",19,10169,25)
EN^ECXWRD
"KRN",19,10169,"U")
ACTIVE MAS WARDS FOR FISCAL YE
"KRN",19,10850,-1)
0^2
"KRN",19,10850,0)
ECX DIVISION ID^Enter/Edit DSS Division Identifier^^R^^ECXMGR^^^^^^
"KRN",19,10850,1,0)
^^3^3^2980721^^
"KRN",19,10850,1,1,0)
This option should only be used by the DSS Site Manager to enter or
"KRN",19,10850,1,2,0)
edit the DSS Division Identifier associated with any medical center
"KRN",19,10850,1,3,0)
division.
"KRN",19,10850,25)
EN^ECXDVSNX
"KRN",19,10850,"U")
ENTER/EDIT DSS DIVISION IDENTI
"KRN",19,10851,-1)
0^3
"KRN",19,10851,0)
ECX WARD DSSDEPT^Enter/Edit DSS Ward^^R^^ECXMGR^^^^^^
"KRN",19,10851,1,0)
^^3^3^2980721^
"KRN",19,10851,1,1,0)
This option should only be used by the DSS Site Manager to enter or
"KRN",19,10851,1,2,0)
edit the DSS Department code associated with each medical center
"KRN",19,10851,1,3,0)
ward.
"KRN",19,10851,25)
EN^ECXWRDX
"KRN",19,10851,"U")
ENTER/EDIT DSS WARD
"KRN",19,10852,-1)
0^4
"KRN",19,10852,0)
ECX DSSDEPT DECODE^Decode a DSS Department Code^^R^^^^^^^^
"KRN",19,10852,1,0)
^^12^12^2980721^
"KRN",19,10852,1,1,0)
This option will allow the user to enter a 4-character string, which
"KRN",19,10852,1,2,0)
will then be 'decoded' as if it were a DSS Department code.
"KRN",19,10852,1,3,0)
 
"KRN",19,10852,1,4,0)
DSS Department codes are of the format
"KRN",19,10852,1,5,0)
 
"KRN",19,10852,1,6,0)
   ABBCxxx
"KRN",19,10852,1,7,0)
   where: A = DSS Clinical Service code
"KRN",19,10852,1,8,0)
         BB = DSS Production Unit code
"KRN",19,10852,1,9,0)
          C = DSS Division Identifier code
"KRN",19,10852,1,10,0)
        xxx = suffix (optional)
"KRN",19,10852,1,11,0)
 
"KRN",19,10852,1,12,0)
Only the ABBC portion is decoded.
"KRN",19,10852,25)
DECODE^ECXDSSD
"KRN",19,10852,"U")
DECODE A DSS DEPARTMENT CODE
"KRN",19,10853,-1)
0^1
"KRN",19,10853,0)
ECX DSSDEPT MGMT^DSS Department Management^^M^^^^^^^^
"KRN",19,10853,1,0)
^^2^2^2980721^
"KRN",19,10853,1,1,0)
This menu holds the set of options needed for DSS Department management
"KRN",19,10853,1,2,0)
functions.
"KRN",19,10853,10,0)
^19.01IP^4^4
"KRN",19,10853,10,1,0)
10850^1^1
"KRN",19,10853,10,1,"^")
ECX DIVISION ID
"KRN",19,10853,10,2,0)
10851^2^2
"KRN",19,10853,10,2,"^")
ECX WARD DSSDEPT
"KRN",19,10853,10,3,0)
10169^3^3
"KRN",19,10853,10,3,"^")
ECXWRD
"KRN",19,10853,10,4,0)
10852^4^4
"KRN",19,10853,10,4,"^")
ECX DSSDEPT DECODE
"KRN",19,10853,99)
57622,30713
"KRN",19,10853,"U")
DSS DEPARTMENT MANAGEMENT
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0^2971222^2980112^11714
"PKG",513,22,1,"PAH",1,0)
8^2981013^11714
"PKG",513,22,1,"PAH",1,1,0)
^^1^1^2981022
"PKG",513,22,1,"PAH",1,1,1,0)
DSS Extracts FY1999 Update.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
69
"RTN","ECX3P8P1")
0^1^B55011190
"RTN","ECX3P8P1",1,0)
ECX3P8P1 ;ALB/JAP - National Clinic Update ;July 14, 1998
"RTN","ECX3P8P1",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECX3P8P1",3,0)
 ;
"RTN","ECX3P8P1",4,0)
ADD7272 ;** Add entries to file #727.2
"RTN","ECX3P8P1",5,0)
 ;ECXX is in format: ien;test^source
"RTN","ECX3P8P1",6,0)
 N ECX,ECXX,DA,DIC,DIE,DR,DINUM,X,Y,TEST,SOURCE
"RTN","ECX3P8P1",7,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",8,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",9,0)
 D MES^XPDUTL(" Adding entries to DSS LAB TESTS File (#727.2)...")
"RTN","ECX3P8P1",10,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",11,0)
 S $P(^DD(727.21,.01,0),U,5)=""
"RTN","ECX3P8P1",12,0)
 F ECX=1:1 S ECXX=$P($T(NEW7272+ECX),";;",2) Q:ECXX="QUIT"  D
"RTN","ECX3P8P1",13,0)
 .S ECXDA=$P(ECXX,";",1),ECXX=$P(ECXX,";",2)
"RTN","ECX3P8P1",14,0)
 .Q:'$D(^ECX(727.2,1))
"RTN","ECX3P8P1",15,0)
 .I $D(^ECX(727.2,1,1,0)),'$D(^ECX(727.2,1,1,ECXDA,0)) D
"RTN","ECX3P8P1",16,0)
 ..S TEST=$P(ECXX,U,1),SOURCE=$P(ECXX,U,2)
"RTN","ECX3P8P1",17,0)
 ..S DA(1)=1,DIC("P")=$P(^DD(727.2,1,0),U,2),DINUM=ECXDA
"RTN","ECX3P8P1",18,0)
 ..S X=TEST,DIC="^ECX(727.2,1,1,",DLAYGO=727.21,DIC(0)="LX",DIC("DR")="2///^S X=SOURCE"
"RTN","ECX3P8P1",19,0)
 ..K DD,DO D FILE^DICN K DLAYGO
"RTN","ECX3P8P1",20,0)
 ..D MESS
"RTN","ECX3P8P1",21,0)
 S $P(^DD(727.21,.01,0),U,5)="K X"
"RTN","ECX3P8P1",22,0)
 Q
"RTN","ECX3P8P1",23,0)
 ;
"RTN","ECX3P8P1",24,0)
ADD729 ;** Add DSS Production Units to file #729
"RTN","ECX3P8P1",25,0)
 ;ECXX is in format: CODE^^LONG DESCRIPTION^SHORT DESCRIPTION
"RTN","ECX3P8P1",26,0)
 N ECXDA,DIE,DR,ECX,ECXX,DIC,DA,X,Y,A1,A3,A4
"RTN","ECX3P8P1",27,0)
 ;continue only if this checkpoint didn't complete
"RTN","ECX3P8P1",28,0)
 S ECXDA=$O(^ECX(729,999),-1)
"RTN","ECX3P8P1",29,0)
 Q:ECXDA=77
"RTN","ECX3P8P1",30,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",31,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",32,0)
 D MES^XPDUTL(" Adding entries to DSS PRODUCTION UNIT File (#729)...")
"RTN","ECX3P8P1",33,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",34,0)
 S $P(^DD(729,.01,0),U,5)=""
"RTN","ECX3P8P1",35,0)
 F ECX=1:1 S ECXX=$P($T(NEW729+ECX),";;",2) Q:ECXX="QUIT"  D
"RTN","ECX3P8P1",36,0)
 .S ECXDA=$P(ECXX,";",1),ECXX=$P(ECXX,";",2)
"RTN","ECX3P8P1",37,0)
 .I $D(^ECX(729,0)),'$D(^ECX(729,ECXDA,0)) D
"RTN","ECX3P8P1",38,0)
 ..S A1=$P(ECXX,U,1),A3=$P(ECXX,U,3),A4=$P(ECXX,U,4)
"RTN","ECX3P8P1",39,0)
 ..S DINUM=ECXDA
"RTN","ECX3P8P1",40,0)
 ..S X=A1,DIC="^ECX(729,",DLAYGO=729,DIC(0)="LX",DIC("DR")="1///^S X=A3;2///^S X=A4"
"RTN","ECX3P8P1",41,0)
 ..K DD,DO D FILE^DICN K DLAYGO
"RTN","ECX3P8P1",42,0)
 ..D MESS2
"RTN","ECX3P8P1",43,0)
 S $P(^DD(729,.01,0),U,5)="K X"
"RTN","ECX3P8P1",44,0)
 Q
"RTN","ECX3P8P1",45,0)
 ;
"RTN","ECX3P8P1",46,0)
MESS ;** Add message
"RTN","ECX3P8P1",47,0)
 N ECXADMSG
"RTN","ECX3P8P1",48,0)
 S ECXADMSG=" "_TEST
"RTN","ECX3P8P1",49,0)
 D MES^XPDUTL(ECXADMSG)
"RTN","ECX3P8P1",50,0)
 S ECXADMSG="     added as record #"_ECXDA_"."
"RTN","ECX3P8P1",51,0)
 D MES^XPDUTL(ECXADMSG)
"RTN","ECX3P8P1",52,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",53,0)
 Q
"RTN","ECX3P8P1",54,0)
 ;
"RTN","ECX3P8P1",55,0)
MESS2 ;** Add message
"RTN","ECX3P8P1",56,0)
 N ECXADMSG
"RTN","ECX3P8P1",57,0)
 S ECXADMSG=" "_A1_" - "_A3
"RTN","ECX3P8P1",58,0)
 D MES^XPDUTL(ECXADMSG)
"RTN","ECX3P8P1",59,0)
 S ECXADMSG="     added as record #"_ECXDA_"."
"RTN","ECX3P8P1",60,0)
 D MES^XPDUTL(ECXADMSG)
"RTN","ECX3P8P1",61,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",62,0)
 Q
"RTN","ECX3P8P1",63,0)
 ;
"RTN","ECX3P8P1",64,0)
CLEAN ;** Delete any new entries added to file #729
"RTN","ECX3P8P1",65,0)
 N ECX,DA,DIK,DIC,X,Y,JJ,SS
"RTN","ECX3P8P1",66,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",67,0)
 D MES^XPDUTL(" This subroutine will delete those entries in file #729,")
"RTN","ECX3P8P1",68,0)
 D MES^XPDUTL(" DSS PRODUCTION UNIT File, which were added by patch ECX*3.0*8.")
"RTN","ECX3P8P1",69,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",70,0)
 I $E(IOST)="C" D  Q:'Y
"RTN","ECX3P8P1",71,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECX3P8P1",72,0)
 .K X,Y
"RTN","ECX3P8P1",73,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECX3P8P1",74,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",75,0)
 D MES^XPDUTL(" Deleting...")
"RTN","ECX3P8P1",76,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",77,0)
 F ECX=1:1:77 D
"RTN","ECX3P8P1",78,0)
 .S DA=ECX,DIK="^ECX(729,"
"RTN","ECX3P8P1",79,0)
 .D ^DIK
"RTN","ECX3P8P1",80,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",81,0)
 D MES^XPDUTL(" Done.")
"RTN","ECX3P8P1",82,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",83,0)
 Q
"RTN","ECX3P8P1",84,0)
 ;
"RTN","ECX3P8P1",85,0)
CLEAN2 ;delete records added to file #727.2
"RTN","ECX3P8P1",86,0)
 N ECX,X,Y,DA,DIK,DIC,JJ,SS
"RTN","ECX3P8P1",87,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",88,0)
 D MES^XPDUTL(" This subroutine will delete those entries in file #727.2,")
"RTN","ECX3P8P1",89,0)
 D MES^XPDUTL(" DSS LAB TESTS File, which were added by patch ECX*3.0*8.")
"RTN","ECX3P8P1",90,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",91,0)
 I $E(IOST)="C" D  Q:'Y
"RTN","ECX3P8P1",92,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECX3P8P1",93,0)
 .K X,Y
"RTN","ECX3P8P1",94,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECX3P8P1",95,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",96,0)
 D MES^XPDUTL(" Deleting...")
"RTN","ECX3P8P1",97,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",98,0)
 F ECX=13:1:31 D
"RTN","ECX3P8P1",99,0)
 .S DA=ECX,DA(1)=1,DIK="^ECX(727.2,1,1,"
"RTN","ECX3P8P1",100,0)
 .D ^DIK
"RTN","ECX3P8P1",101,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",102,0)
 D MES^XPDUTL(" Done.")
"RTN","ECX3P8P1",103,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P1",104,0)
 Q
"RTN","ECX3P8P1",105,0)
 ;
"RTN","ECX3P8P1",106,0)
NEW7272 ;new records for file #727.2
"RTN","ECX3P8P1",107,0)
 ;;13;GGTP (GAMMA-GT)^B
"RTN","ECX3P8P1",108,0)
 ;;14;DILANTIN (PHENYTOIN)^B
"RTN","ECX3P8P1",109,0)
 ;;15;VALPROIC ACID^B
"RTN","ECX3P8P1",110,0)
 ;;16;CARBAMAZEPINE (TEGRETOL)^B
"RTN","ECX3P8P1",111,0)
 ;;17;HGB A1C (GLYCOSYLATED HGB A1C)^B
"RTN","ECX3P8P1",112,0)
 ;;18;ALPHA 1 TRYPSIN PROTEINASE INHIBITOR^B
"RTN","ECX3P8P1",113,0)
 ;;19;PSA (PROSTATIC SPECIFIC ANTIGEN)^B
"RTN","ECX3P8P1",114,0)
 ;;20;CD-4 (T CELL COUNT)^B
"RTN","ECX3P8P1",115,0)
 ;;21;PROTIME^B
"RTN","ECX3P8P1",116,0)
 ;;22;TOTAL THYROXINE (T-4)^B
"RTN","ECX3P8P1",117,0)
 ;;23;TOTAL TRIIODOTHYRONINE (T-3)^B
"RTN","ECX3P8P1",118,0)
 ;;24;THYROID STIMULATING HORMONE (TSH)^B
"RTN","ECX3P8P1",119,0)
 ;;25;FOLATE^B
"RTN","ECX3P8P1",120,0)
 ;;26;VITAMIN B-12 LEVEL^B
"RTN","ECX3P8P1",121,0)
 ;;27;LDLC^B
"RTN","ECX3P8P1",122,0)
 ;;28;HDLC^B
"RTN","ECX3P8P1",123,0)
 ;;29;TOTAL CHOLESTEROL^B
"RTN","ECX3P8P1",124,0)
 ;;30;TRIGLYCERIDES^B
"RTN","ECX3P8P1",125,0)
 ;;31;SERUM CREATININE^B
"RTN","ECX3P8P1",126,0)
 ;;QUIT
"RTN","ECX3P8P1",127,0)
 ;
"RTN","ECX3P8P1",128,0)
NEW729 ;production unit entries to add;;CODE^^LONG DESCRIPTION^SHORT DESCRIPTION
"RTN","ECX3P8P1",129,0)
 ;;1;E1^^SICU^SICU
"RTN","ECX3P8P1",130,0)
 ;;2;E2^^TICU^TICU
"RTN","ECX3P8P1",131,0)
 ;;3;E3^^MICU1^MICU1
"RTN","ECX3P8P1",132,0)
 ;;4;E4^^MICU2^MICU2
"RTN","ECX3P8P1",133,0)
 ;;5;E5^^NICU^NICU
"RTN","ECX3P8P1",134,0)
 ;;6;E6^^CCU^CCU
"RTN","ECX3P8P1",135,0)
 ;;7;E7^^STEPDOWN 1^STEPDOWN1
"RTN","ECX3P8P1",136,0)
 ;;8;E8^^MICU/SICU COMB^MICSICU
"RTN","ECX3P8P1",137,0)
 ;;9;EJ^^RECOVERY ROOM^REC ROOM N
"RTN","ECX3P8P1",138,0)
 ;;10;EK^^WARD GENERAL MEDICINE/ACUTE MEDICINE 1^MED-1
"RTN","ECX3P8P1",139,0)
 ;;11;EL^^WARD GENERAL MEDICINE/ACUTE MEDICINE 2^MED-2
"RTN","ECX3P8P1",140,0)
 ;;12;EM^^WARD GENERAL MEDICINE/ACUTE MEDICINE 3^MED-3
"RTN","ECX3P8P1",141,0)
 ;;13;EN^^WARDS ONCOLOGY^ONC WD
"RTN","ECX3P8P1",142,0)
 ;;14;EO^^WARDS RHEUMATOLOGY/DERMATOLOGY^RHE WD
"RTN","ECX3P8P1",143,0)
 ;;15;EP^^WARDS - INFECTIOUS DISEASE^INF WD
"RTN","ECX3P8P1",144,0)
 ;;16;EQ^^WARD VENTILLATOR INT. MED 1^VIM-1
"RTN","ECX3P8P1",145,0)
 ;;17;ES^^WARD GENERAL MEDICINE/ACUTE MEDICINE 4^MED-4
"RTN","ECX3P8P1",146,0)
 ;;18;F1^^WARDS - SURGERY 1^SUR-1
"RTN","ECX3P8P1",147,0)
 ;;19;F2^^WARDS - SURGERY 2^SUR-2
"RTN","ECX3P8P1",148,0)
 ;;20;F3^^WARDS - SURGERY 3^SUR-3
"RTN","ECX3P8P1",149,0)
 ;;21;F4^^WARDS NEUROSURGERY^N SUR
"RTN","ECX3P8P1",150,0)
 ;;22;F5^^WARD NEURO/NEURO SURGERY^N/NS
"RTN","ECX3P8P1",151,0)
 ;;23;FE^^WARDS MIXED MED/SURG 1^M/SU-1
"RTN","ECX3P8P1",152,0)
 ;;24;FF^^WARDS MIXED MED/SURG 2^M/SU-2
"RTN","ECX3P8P1",153,0)
 ;;25;FG^^WARDS MIXED MED/SURG 3^M/SU-3
"RTN","ECX3P8P1",154,0)
 ;;26;FH^^WARDS MIXED MED/SURG 4^M/SU-4
"RTN","ECX3P8P1",155,0)
 ;;27;FI^^WARDS MIXED MED/SURG/PSI 1^MSP-1
"RTN","ECX3P8P1",156,0)
 ;;28;FJ^^WARDS MIXED MED/SURG/PSI 2^MSP-2
"RTN","ECX3P8P1",157,0)
 ;;29;FK^^WARD MIXED MED/SURG/INT. MED 1^MSI-1
"RTN","ECX3P8P1",158,0)
 ;;30;FL^^WARD MIXED MED/SURG/INT. MED 2^MSI-2
"RTN","ECX3P8P1",159,0)
 ;;31;FM^^WARDS MIXED MED/INT. MED 1^M/I-1
"RTN","ECX3P8P1",160,0)
 ;;32;FN^^WARDS MIXED MED/INT. MED 2^M/I-2
"RTN","ECX3P8P1",161,0)
 ;;33;FO^^WARD INT. MED WARD 1^IM-1
"RTN","ECX3P8P1",162,0)
 ;;34;FP^^WARD INT. MED WARD 2^IM-2
"RTN","ECX3P8P1",163,0)
 ;;35;FS^^WARD VENTILLATOR INT. MED 2^VIM-2
"RTN","ECX3P8P1",164,0)
 ;;36;FT^^WARD NEURO^NEU
"RTN","ECX3P8P1",165,0)
 ;;37;G1^^WARDS - ROUTINE NHCU 1^NHCU-1
"RTN","ECX3P8P1",166,0)
 ;;38;G2^^WARDS - ROUTINE NHCU 2^NHCU-2
"RTN","ECX3P8P1",167,0)
 ;;39;G3^^WARDS - ROUTINE NHCU 3^NHCU-3
"RTN","ECX3P8P1",168,0)
 ;;40;G4^^WARDS - ROUTINE NHCU 4^NHCU-4
"RTN","ECX3P8P1",169,0)
 ;;41;G5^^WARDS - ROUTINE NHCU 5^NHCU-5
"RTN","ECX3P8P1",170,0)
 ;;42;G6^^WARDS - ROUTINE NHCU 6^NHCU-6
"RTN","ECX3P8P1",171,0)
 ;;43;G7^^WARDS - NHCU VENTILATOR 1^NHV-1
"RTN","ECX3P8P1",172,0)
 ;;44;G8^^WARDS - NHCU VENTILATOR 2^NHV-2
"RTN","ECX3P8P1",173,0)
 ;;45;GK^^WARDS SCI ROUTINE 1^SCI-1
"RTN","ECX3P8P1",174,0)
 ;;46;GL^^WARDS SCI ROUTINE 2^SCI-2
"RTN","ECX3P8P1",175,0)
 ;;47;GM^^WARDS SCI - VENTILATOR 1 (ONLY)^SCV-1
"RTN","ECX3P8P1",176,0)
 ;;48;GN^^WARDS SCI - VENTILATOR 2 (ONLY)^SCV-2
"RTN","ECX3P8P1",177,0)
 ;;49;GO^^WARDS SCI - SURGERY^SCIS
"RTN","ECX3P8P1",178,0)
 ;;50;GP^^WARDS SCI - CHRONIC 1^SCC-1
"RTN","ECX3P8P1",179,0)
 ;;51;GQ^^WARDS SCI - CHRONIC 2^SCC-2
"RTN","ECX3P8P1",180,0)
 ;;52;GR^^WARDS SCI - CHRONIC 3^SCC-3
"RTN","ECX3P8P1",181,0)
 ;;53;GS^^WARDS REHAB CARDIAC^REC
"RTN","ECX3P8P1",182,0)
 ;;54;GT^^WARDS REHAB ROUTINE^REH
"RTN","ECX3P8P1",183,0)
 ;;55;GU^^WARDS REHAB BLIND^RE BL
"RTN","ECX3P8P1",184,0)
 ;;56;GV^^WARDS REHAB PAIN^RE PA
"RTN","ECX3P8P1",185,0)
 ;;57;H1^^WARDS ALC/DRUG REHAB 1^ADRE-1
"RTN","ECX3P8P1",186,0)
 ;;58;H3^^WARDS PSYCHIATRY MIXED DETOX 1^DET-1
"RTN","ECX3P8P1",187,0)
 ;;59;H4^^WARDS PSYCHIATRY MIXED DETOX 2^DET-2
"RTN","ECX3P8P1",188,0)
 ;;60;H5^^WARDS PSYCHIATRY ACUTE 1^APSI-1
"RTN","ECX3P8P1",189,0)
 ;;61;H6^^WARDS PSYCHIATRY ACUTE 2^APSI-2
"RTN","ECX3P8P1",190,0)
 ;;62;H7^^WARDS PSYCHIATRY CHRONIC 1^CPSI-1
"RTN","ECX3P8P1",191,0)
 ;;63;H8^^WARDS PSYCHIATRY CHRONIC 2^CPSI-2
"RTN","ECX3P8P1",192,0)
 ;;64;H9^^WARDS PSYCHIATRY CHRONIC 3^CPSI-3
"RTN","ECX3P8P1",193,0)
 ;;65;HA^^WARDS PSYCHIATRY CHRONIC 4^CPSI-4
"RTN","ECX3P8P1",194,0)
 ;;66;HI^^WARDS ALC/DRUG REHAB 2^ADRE-2
"RTN","ECX3P8P1",195,0)
 ;;67;HJ^^WARDS ALC/DRUG REHAB 3^ADRE-3
"RTN","ECX3P8P1",196,0)
 ;;68;HK^^WARDS ALC/DRUG REHAB 4^ADRE-4
"RTN","ECX3P8P1",197,0)
 ;;69;HL^^WARDS PSYCHIATRY ACUTE 3^APSI3
"RTN","ECX3P8P1",198,0)
 ;;70;HM^^WARDS PSYCHIATRY ACUTE 4^APSI4
"RTN","ECX3P8P1",199,0)
 ;;71;HN^^STAR I - MED/PSYCH <90 DAY STAY, OFTEN WITH NEURO SVC.^STARI
"RTN","ECX3P8P1",200,0)
 ;;72;HO^^STAR II - INTENSIVE LIFE SKILLS REHAB >90 DAY STAY^STARII
"RTN","ECX3P8P1",201,0)
 ;;73;HP^^STAR III - PSYCHIATRIC NURSING CARE, NOT ELEIGIBLE FOR NHCU^STARIII
"RTN","ECX3P8P1",202,0)
 ;;74;JD^^PTSD WARD 1^PTSDWARD1
"RTN","ECX3P8P1",203,0)
 ;;75;JE^^PTSD WARD 2^PTSDWARD2
"RTN","ECX3P8P1",204,0)
 ;;76;JF^^PTSD WARD 3^PTSDWARD3
"RTN","ECX3P8P1",205,0)
 ;;77;JG^^PTSD WARD 4^PTSDWARD4
"RTN","ECX3P8P1",206,0)
 ;;QUIT
"RTN","ECX3P8P2")
0^2^B19757053
"RTN","ECX3P8P2",1,0)
ECX3P8P2 ;ALB/JAP - National Service update ;July 14, 1998
"RTN","ECX3P8P2",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECX3P8P2",3,0)
 ;
"RTN","ECX3P8P2",4,0)
ADD730 ;** Add entries to file #730
"RTN","ECX3P8P2",5,0)
 ;ECXX is in format: IEN;NAME^^^DSS CODE^COST CENTER^SYNONYM
"RTN","ECX3P8P2",6,0)
 N ECX,ECXX,ECXDA,ECXDX,IEN,DIC,DA,DIE,DR,DIK,X,Y,DIR,DIRUT,JJ,SS,DUOUT,A1,A4,A5,A6
"RTN","ECX3P8P2",7,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P2",8,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P2",9,0)
 D MES^XPDUTL(" Adding entries to NATIONAL SERVICE File (#730)...")
"RTN","ECX3P8P2",10,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P2",11,0)
 F ECX=1:1 S ECXX=$P($T(NEW730+ECX),";;",2) Q:ECXX="QUIT"  D
"RTN","ECX3P8P2",12,0)
 .S ECXDA=$P(ECXX,";",1),ECXX=$P(ECXX,";",2)
"RTN","ECX3P8P2",13,0)
 .S A4=$P(ECXX,"^",4)
"RTN","ECX3P8P2",14,0)
 .;prefer new entry be made at specified ien
"RTN","ECX3P8P2",15,0)
 .I '$D(^ECC(730,ECXDA)) D  Q
"RTN","ECX3P8P2",16,0)
 ..S A1=$P(ECXX,"^",1),A4=$P(ECXX,"^",4),A5=$P(ECXX,"^",5),A6=$P(ECXX,"^",6)
"RTN","ECX3P8P2",17,0)
 ..S X=A1,DINUM=ECXDA,DIC="^ECC(730,",DLAYGO=730,DIC(0)="LX",DIC("DR")="3///^S X=A4;4///^S X=A5;5///^S X=A6"
"RTN","ECX3P8P2",18,0)
 ..K DD,DO D FILE^DICN K DLAYGO
"RTN","ECX3P8P2",19,0)
 ..I Y D MESS
"RTN","ECX3P8P2",20,0)
 .;if specified ien is already in use and the new record hasn't been added yet 
"RTN","ECX3P8P2",21,0)
 .;then add at next available record number below 100
"RTN","ECX3P8P2",22,0)
 .I $D(^ECC(730,ECXDA)),'$D(^ECC(730,"C",A4)) D  Q
"RTN","ECX3P8P2",23,0)
 ..S ECXDX=0
"RTN","ECX3P8P2",24,0)
 ..F IEN=ECXDA+1:1:100 I '$D(^ECC(730,IEN)) S ECXDX=IEN Q
"RTN","ECX3P8P2",25,0)
 ..;then try for record number below 1000
"RTN","ECX3P8P2",26,0)
 ..I ECXDX=0 F IEN=101:1:999 I '$D(^ECC(730,IEN)) S ECXDX=IEN Q
"RTN","ECX3P8P2",27,0)
 ..I ECXDX=0 D  Q
"RTN","ECX3P8P2",28,0)
 ...D MES^XPDUTL(" ")
"RTN","ECX3P8P2",29,0)
 ...D MES^XPDUTL(" Problem in NATIONAL SERVICE File (#730)...")
"RTN","ECX3P8P2",30,0)
 ...D MES^XPDUTL("   ...can't add entry for "_$P(ECXX,"^",1)_".")
"RTN","ECX3P8P2",31,0)
 ...D MES^XPDUTL(" ")
"RTN","ECX3P8P2",32,0)
 ..S A1=$P(ECXX,"^",1),A4=$P(ECXX,"^",4),A5=$P(ECXX,"^",5),A6=$P(ECXX,"^",6)
"RTN","ECX3P8P2",33,0)
 ..S X=A1,DINUM=ECXDX,DIC="^ECC(730,",DLAYGO=730,DIC(0)="LX",DIC("DR")="3///^S X=A4;4///^S X=A5;5///^S X=A6"
"RTN","ECX3P8P2",34,0)
 ..K DD,DO D FILE^DICN K DLAYGO
"RTN","ECX3P8P2",35,0)
 ..I Y S ECXDA=+Y D MESS
"RTN","ECX3P8P2",36,0)
 Q
"RTN","ECX3P8P2",37,0)
 ;
"RTN","ECX3P8P2",38,0)
MESS ;** Add message
"RTN","ECX3P8P2",39,0)
 N ECXADMSG
"RTN","ECX3P8P2",40,0)
 S ECXADMSG=" "_$P(ECXX,U,1)_" ("_$P(ECXX,U,4)_")"
"RTN","ECX3P8P2",41,0)
 D MES^XPDUTL(ECXADMSG)
"RTN","ECX3P8P2",42,0)
 S ECXADMSG="     added as record #"_ECXDA_"."
"RTN","ECX3P8P2",43,0)
 D MES^XPDUTL(ECXADMSG)
"RTN","ECX3P8P2",44,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P2",45,0)
 Q
"RTN","ECX3P8P2",46,0)
 ;
"RTN","ECX3P8P2",47,0)
MOD730 ;modify entries in file #730
"RTN","ECX3P8P2",48,0)
 ;ECXX is in format: IEN;NAME^^^DSS CODE^COST CENTER^SYNONYM
"RTN","ECX3P8P2",49,0)
 N ECX,ECXX,ECXF,A1,A4,A5,A6,DA,DIK
"RTN","ECX3P8P2",50,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P2",51,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P2",52,0)
 D MES^XPDUTL(" Modifying entries in NATIONAL SERVICE File (#730)...")
"RTN","ECX3P8P2",53,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P2",54,0)
 F ECX=1:1 S ECXX=$P($T(UPDATE+ECX),";;",2) Q:ECXX="QUIT"  D
"RTN","ECX3P8P2",55,0)
 .S ECXDA=$P(ECXX,";",1),ECXX=$P(ECXX,";",2)
"RTN","ECX3P8P2",56,0)
 .;if specified ien exists then update record  
"RTN","ECX3P8P2",57,0)
 .I $D(^ECC(730,ECXDA)) D  Q
"RTN","ECX3P8P2",58,0)
 ..S A1=$P(ECXX,U,1),A4=$P(ECXX,U,4),A5=$P(ECXX,U,5),A6=$P(ECXX,U,6)
"RTN","ECX3P8P2",59,0)
 ..S ECXDAX=ECXDA_","
"RTN","ECX3P8P2",60,0)
 ..S ECXF(730,ECXDAX,.01)=A1,ECXF(730,ECXDAX,3)=A4,ECXF(730,ECXDAX,4)=A5,ECXF(730,ECXDAX,5)=A6
"RTN","ECX3P8P2",61,0)
 ..K ^TMP("DIERR",$J)
"RTN","ECX3P8P2",62,0)
 ..D FILE^DIE("","ECXF")
"RTN","ECX3P8P2",63,0)
 ..I '$D(^TMP("DIERR",$J)) D MESSM
"RTN","ECX3P8P2",64,0)
 .I '$D(^ECC(730,ECXDA)) D  Q
"RTN","ECX3P8P2",65,0)
 ..D MES^XPDUTL(" ")
"RTN","ECX3P8P2",66,0)
 ..D MES^XPDUTL(" Missing record #"_ECXDA_" in NATIONAL SERVICE File (#730).")
"RTN","ECX3P8P2",67,0)
 ..S A1=$P(ECXX,U,1),A4=$P(ECXX,U,4),A5=$P(ECXX,U,5),A6=$P(ECXX,U,6)
"RTN","ECX3P8P2",68,0)
 ..S X=A1,DINUM=ECXDA,DIC="^ECC(730,",DLAYGO=730,DIC(0)="LX",DIC("DR")="3///^S X=A4;4///^S X=A5;5///^S X=A6"
"RTN","ECX3P8P2",69,0)
 ..K DD,DO D FILE^DICN K DLAYGO
"RTN","ECX3P8P2",70,0)
 ..I Y S ECXDA=+Y D MESS
"RTN","ECX3P8P2",71,0)
 Q
"RTN","ECX3P8P2",72,0)
 ;
"RTN","ECX3P8P2",73,0)
MESSM ;** Modify message
"RTN","ECX3P8P2",74,0)
 N ECXADMSG
"RTN","ECX3P8P2",75,0)
 S ECXADMSG=" "_A1_" ("_A4_")"
"RTN","ECX3P8P2",76,0)
 D MES^XPDUTL(ECXADMSG)
"RTN","ECX3P8P2",77,0)
 S ECXADMSG="     record #"_ECXDA_" modified."
"RTN","ECX3P8P2",78,0)
 D MES^XPDUTL(ECXADMSG)
"RTN","ECX3P8P2",79,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P2",80,0)
 Q
"RTN","ECX3P8P2",81,0)
UPDATE ;update records in file #730
"RTN","ECX3P8P2",82,0)
 ;;2;AMBULATORY CARE^^^A^204^
"RTN","ECX3P8P2",83,0)
 ;;3;ANESTHESIA^^^G^212^
"RTN","ECX3P8P2",84,0)
 ;;4;AUDIOLOGY & SPEECH PATHOLOGY^^^E^228^A&SP
"RTN","ECX3P8P2",85,0)
 ;;5;BLIND REHABILITATION^^^B^245^
"RTN","ECX3P8P2",86,0)
 ;;8;CHAPLAIN^^^1^244^
"RTN","ECX3P8P2",87,0)
 ;;10;DENTAL^^^T^248^
"RTN","ECX3P8P2",88,0)
 ;;11;DERMATOLOGY^^^K^236^
"RTN","ECX3P8P2",89,0)
 ;;12;NUTRITION AND FOOD SERVICE^^^F^243^DIETETICS
"RTN","ECX3P8P2",90,0)
 ;;14;DOMICILIARY^^^4^205^
"RTN","ECX3P8P2",91,0)
 ;;20;PATHOLOGY & LABORATORY MEDICINE^^^L^223^LABORATORY
"RTN","ECX3P8P2",92,0)
 ;;22;HEALTH ADMINISTRATION^^^2^285^MAS
"RTN","ECX3P8P2",93,0)
 ;;24;MEDICINE^^^M^201^
"RTN","ECX3P8P2",94,0)
 ;;25;NEUROLOGY^^^N^235^
"RTN","ECX3P8P2",95,0)
 ;;26;NUCLEAR MEDICINE^^^H^229^
"RTN","ECX3P8P2",96,0)
 ;;27;NURSING^^^U^241^
"RTN","ECX3P8P2",97,0)
 ;;30;PHARMACY^^^D^224^
"RTN","ECX3P8P2",98,0)
 ;;31;PROSTHETICS^^^Q^272^ORTHOTICS
"RTN","ECX3P8P2",99,0)
 ;;32;PSYCHIATRY^^^P^203^PSI
"RTN","ECX3P8P2",100,0)
 ;;33;PSYCHOLOGY^^^O^227^
"RTN","ECX3P8P2",101,0)
 ;;34;RADIATION THERAPY^^^Z^237^
"RTN","ECX3P8P2",102,0)
 ;;35;RADIOLOGY^^^X^222^
"RTN","ECX3P8P2",103,0)
 ;;36;RECREATION^^^J^246^
"RTN","ECX3P8P2",104,0)
 ;;39;PHYSICAL MEDICINE & REHABILITATION^^^R^242^REHAB MEDICINE
"RTN","ECX3P8P2",105,0)
 ;;42;SOCIAL WORK^^^W^221^
"RTN","ECX3P8P2",106,0)
 ;;43;SPINAL CORD INJURY^^^C^233^SCI
"RTN","ECX3P8P2",107,0)
 ;;44;SURGERY^^^S^202^
"RTN","ECX3P8P2",108,0)
 ;;47;GERIATRICS & EXTENDED CARE^^^3^234^GRECC
"RTN","ECX3P8P2",109,0)
 ;;QUIT
"RTN","ECX3P8P2",110,0)
 ;
"RTN","ECX3P8P2",111,0)
NEW730 ;new records for file #730
"RTN","ECX3P8P2",112,0)
 ;;48;DIALYSIS^^^I^211
"RTN","ECX3P8P2",113,0)
 ;;49;OPTOMETRY/OPHTHALMOLOGY^^^V^232
"RTN","ECX3P8P2",114,0)
 ;;50;PODIATRY^^^Y^231
"RTN","ECX3P8P2",115,0)
 ;;QUIT
"RTN","ECX3P8P3")
0^3^B6314055
"RTN","ECX3P8P3",1,0)
ECX3P8P3 ;ALB/JAP - National Service update ;July 14, 1998
"RTN","ECX3P8P3",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECX3P8P3",3,0)
 ;
"RTN","ECX3P8P3",4,0)
MOD7271 ;** modify entries in file #727.1
"RTN","ECX3P8P3",5,0)
 ;ECXX is in format: ien;running piece;0 node;routine
"RTN","ECX3P8P3",6,0)
 N ECX,ECXDA,ECXDAX,ECXX,ECXX2,ECXX3,ECXF,A1,A2,A3,A7,A8,A9,A10,DA,DIK,DIC,DIE,DR,ROU
"RTN","ECX3P8P3",7,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P3",8,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P3",9,0)
 D MES^XPDUTL(" Modifying entries in EXTRACT DEFINITIONS File (#727.1)...")
"RTN","ECX3P8P3",10,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P3",11,0)
 F ECX=1:1 S ECXX=$P($T(UPDATE+ECX),";;",2) Q:ECXX="QUIT"  D
"RTN","ECX3P8P3",12,0)
 .S ECXDA=$P(ECXX,";",1)
"RTN","ECX3P8P3",13,0)
 .;if specified ien exists then update record  
"RTN","ECX3P8P3",14,0)
 .I $D(^ECX(727.1,ECXDA)) D  Q
"RTN","ECX3P8P3",15,0)
 ..S ECXX2=$P(ECXX,";",2)
"RTN","ECX3P8P3",16,0)
 ..S ECXDAX=ECXDA_","
"RTN","ECX3P8P3",17,0)
 ..S ECXF(727.1,ECXDAX,11)=ECXX2
"RTN","ECX3P8P3",18,0)
 ..K ^TMP("DIERR",$J)
"RTN","ECX3P8P3",19,0)
 ..D FILE^DIE("","ECXF")
"RTN","ECX3P8P3",20,0)
 ..I ECXDA=3 D
"RTN","ECX3P8P3",21,0)
 ...S ^ECX(727.1,3,0)=$P(ECXX,";",3)
"RTN","ECX3P8P3",22,0)
 ..I ECXDA=12 D
"RTN","ECX3P8P3",23,0)
 ...S ^ECX(727.1,12,"ROU")="ECXLABN"
"RTN","ECX3P8P3",24,0)
 ..I ECXDA=16 D
"RTN","ECX3P8P3",25,0)
 ...S ^ECX(727.1,16,1,20,0)="on facility treating specialties which are entries in the FACILITY TREATING"
"RTN","ECX3P8P3",26,0)
 ..I '$D(^TMP("DIERR",$J)) D MESS
"RTN","ECX3P8P3",27,0)
 .I '$D(^ECX(727.1,ECXDA)) D
"RTN","ECX3P8P3",28,0)
 ..S ROU=$P(ECXX,";",4),ECXX3=$P(ECXX,";",3)
"RTN","ECX3P8P3",29,0)
 ..S A1=$P(ECXX3,U,1),A2=$P(ECXX3,U,2),A3=$P(ECXX3,U,3),A7=$P(ECXX3,U,7),A8=$P(ECXX3,U,8),A9=$P(ECXX3,U,9),A10=$P(ECXX3,U,10)
"RTN","ECX3P8P3",30,0)
 ..S X=A1,DINUM=ECXDA,DIC="^ECX(727.1,",DLAYGO=727.1,DIC(0)="LX",DIC("DR")="1///^S X=A2;2///^S X=A3;4///^S X=ROU;7///^S X=A7;8///^S X=A8;9///^S X=A9;11///^S X=A10"
"RTN","ECX3P8P3",31,0)
 ..K DD,DO D FILE^DICN K DLAYGO
"RTN","ECX3P8P3",32,0)
 ..I Y D MESS
"RTN","ECX3P8P3",33,0)
 ;establish the new "AC" index
"RTN","ECX3P8P3",34,0)
 S DIK="^ECX(727.1,",DIK(1)="7^AC" D ENALL^DIK
"RTN","ECX3P8P3",35,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P3",36,0)
 D MES^XPDUTL(" Done.")
"RTN","ECX3P8P3",37,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P3",38,0)
 Q
"RTN","ECX3P8P3",39,0)
 ;
"RTN","ECX3P8P3",40,0)
MESS ;** modify message
"RTN","ECX3P8P3",41,0)
 N ECXADMSG
"RTN","ECX3P8P3",42,0)
 S ECXADMSG="     record #"_ECXDA_" updated."
"RTN","ECX3P8P3",43,0)
 D MES^XPDUTL(ECXADMSG)
"RTN","ECX3P8P3",44,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P8P3",45,0)
 Q
"RTN","ECX3P8P3",46,0)
 ;
"RTN","ECX3P8P3",47,0)
UPDATE ;updates to records
"RTN","ECX3P8P3",48,0)
 ;;1;13
"RTN","ECX3P8P3",49,0)
 ;;2;11
"RTN","ECX3P8P3",50,0)
 ;;3;15;CLINIC NOSHOW^727.804^M^^^^Clinic no shows^NOS^SCNS^15
"RTN","ECX3P8P3",51,0)
 ;;4;7
"RTN","ECX3P8P3",52,0)
 ;;5;9
"RTN","ECX3P8P3",53,0)
 ;;7;14
"RTN","ECX3P8P3",54,0)
 ;;8;8
"RTN","ECX3P8P3",55,0)
 ;;9;2
"RTN","ECX3P8P3",56,0)
 ;;10;5
"RTN","ECX3P8P3",57,0)
 ;;12;1
"RTN","ECX3P8P3",58,0)
 ;;13;6
"RTN","ECX3P8P3",59,0)
 ;;14;3
"RTN","ECX3P8P3",60,0)
 ;;15;19
"RTN","ECX3P8P3",61,0)
 ;;16;17
"RTN","ECX3P8P3",62,0)
 ;;17;20
"RTN","ECX3P8P3",63,0)
 ;;18;21
"RTN","ECX3P8P3",64,0)
 ;;19;22
"RTN","ECX3P8P3",65,0)
 ;;20;23;PROSTHETICS^727.826^M^^^^Prosthetics^PRO^PRO^23;ECXPRO
"RTN","ECX3P8P3",66,0)
 ;;QUIT
"RTN","ECX3P8PT")
0^4^B123291
"RTN","ECX3P8PT",1,0)
ECX3P8PT ;ALB/JAP - PATCH ECX*3*8 Post-Install ; July 14, 1998
"RTN","ECX3P8PT",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECX3P8PT",3,0)
 ;
"RTN","ECX3P8PT",4,0)
POST ;Entry point
"RTN","ECX3P8PT",5,0)
 ;update records in file #727.1
"RTN","ECX3P8PT",6,0)
 D MOD7271^ECX3P8P3
"RTN","ECX3P8PT",7,0)
 ;add records to file #727.2
"RTN","ECX3P8PT",8,0)
 D ADD7272^ECX3P8P1
"RTN","ECX3P8PT",9,0)
 ;add records to file #729
"RTN","ECX3P8PT",10,0)
 D ADD729^ECX3P8P1
"RTN","ECX3P8PT",11,0)
 ;modify records in file #730
"RTN","ECX3P8PT",12,0)
 D MOD730^ECX3P8P2
"RTN","ECX3P8PT",13,0)
 ;add new records to file #730
"RTN","ECX3P8PT",14,0)
 D ADD730^ECX3P8P2
"RTN","ECX3P8PT",15,0)
 Q
"RTN","ECXAADM")
0^10^B36294588
"RTN","ECXAADM",1,0)
ECXAADM ;ALB/JAP - ADM Extract Audit Report ;Oct 08, 1997
"RTN","ECXAADM",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXAADM",3,0)
EN ;entry point for ADM extract audit report
"RTN","ECXAADM",4,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXAADM",5,0)
 S ECXERR=0
"RTN","ECXAADM",6,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAADM",7,0)
 S ECXHEAD="ADM",ECXAUD=0
"RTN","ECXAADM",8,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAADM",9,0)
 ;select extract
"RTN","ECXAADM",10,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAADM",11,0)
 Q:ECXERR
"RTN","ECXAADM",12,0)
 ;determine if facility is multidivisional
"RTN","ECXAADM",13,0)
 S DIC="^DG(43,",DA=1,DR="11;",DIQ="ECX",DIQ(0)="I" D EN^DIQ1
"RTN","ECXAADM",14,0)
 I +ECX(43,1,11,"I")=0 S ECXALL=1
"RTN","ECXAADM",15,0)
 I +ECX(43,1,11,"I")=1 D
"RTN","ECXAADM",16,0)
 .W !!
"RTN","ECXAADM",17,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all divisions"
"RTN","ECXAADM",18,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXAADM",19,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXAADM",20,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXAADM",21,0)
 .S ECXALL=Y
"RTN","ECXAADM",22,0)
 I ECXERR=1 D  Q
"RTN","ECXAADM",23,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAADM",24,0)
 .D AUDIT^ECXKILL
"RTN","ECXAADM",25,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXAADM",26,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAADM",27,0)
 W !
"RTN","ECXAADM",28,0)
 D ADM^ECXDVSN(.ECXDIV,ECXALL,ECXSTART,ECXEND,.ECXERR)
"RTN","ECXAADM",29,0)
 I ECXERR=1 D  Q
"RTN","ECXAADM",30,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAADM",31,0)
 .D AUDIT^ECXKILL
"RTN","ECXAADM",32,0)
 ;determine output device and queue if requested
"RTN","ECXAADM",33,0)
 S ECXPGM="PROCESS^ECXAADM",ECXDESC="ADM Extract Audit Report"
"RTN","ECXAADM",34,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXAADM",35,0)
 W !
"RTN","ECXAADM",36,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAADM",37,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAADM",38,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAADM",39,0)
 .D AUDIT^ECXKILL
"RTN","ECXAADM",40,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAADM",41,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAADM",42,0)
 .D PROCESS^ECXAADM
"RTN","ECXAADM",43,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAADM",44,0)
 D HOME^%ZIS
"RTN","ECXAADM",45,0)
 D AUDIT^ECXKILL
"RTN","ECXAADM",46,0)
 Q
"RTN","ECXAADM",47,0)
 ;
"RTN","ECXAADM",48,0)
PROCESS ;process data in file #727.802
"RTN","ECXAADM",49,0)
 N X,Y,W,DATE,DIV,IEN,TL,ORDER,SORD,GTOT,STOT,WARD,QQFLG,CNT
"RTN","ECXAADM",50,0)
 K ^TMP($J,"ECXWARD"),^TMP($J,"ECXORDER")
"RTN","ECXAADM",51,0)
 S (CNT,QQFLG)=0
"RTN","ECXAADM",52,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAADM",53,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAADM",54,0)
 ;get run date in external format
"RTN","ECXAADM",55,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAADM",56,0)
 ;get ward info in ^tmp($j,"ecxward" and ^tmp($j,"ecxorder"
"RTN","ECXAADM",57,0)
 D WARDS^ECXUTLA(ECXALL,.ECXDIV)
"RTN","ECXAADM",58,0)
 S W="" F  S W=$O(^TMP($J,"ECXWARD",W)) Q:W=""  D
"RTN","ECXAADM",59,0)
 .S DIV=$P(^TMP($J,"ECXWARD",W),U,3),GTOT(DIV)=0,TL(W)=0,ORDER="" D
"RTN","ECXAADM",60,0)
 ..F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  I $D(^(ORDER,1)) S STOT(DIV,ORDER)=0
"RTN","ECXAADM",61,0)
 ;get records in date range and ward set
"RTN","ECXAADM",62,0)
 S IEN="" F  S IEN=$O(^ECX(727.802,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAADM",63,0)
 .S DATE=$P(^ECX(727.802,IEN,0),U,9),WARD=$P(^(0),U,28)
"RTN","ECXAADM",64,0)
 .;convert free text date to fm internal format date
"RTN","ECXAADM",65,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAADM",66,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAADM",67,0)
 .;if ward is among those selected, then tally admission data
"RTN","ECXAADM",68,0)
 .I $D(TL(WARD)) S TL(WARD)=TL(WARD)+1,CNT=CNT+1
"RTN","ECXAADM",69,0)
 .I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXAADM",70,0)
 ;after all the extract records are processed, set totals into ^tmp($j,"ecxorder"
"RTN","ECXAADM",71,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAADM",72,0)
 S W="" F  S W=$O(TL(W)) Q:W=""  D
"RTN","ECXAADM",73,0)
 .S ORDER=$P(^TMP($J,"ECXWARD",W),U,1),DIV=$P(^(W),U,3)
"RTN","ECXAADM",74,0)
 .S $P(^TMP($J,"ECXORDER",DIV,ORDER),U,3)=TL(W)
"RTN","ECXAADM",75,0)
 ;determine ward group subtotal and division grandtotal
"RTN","ECXAADM",76,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAADM",77,0)
 S DIV="" F  S DIV=$O(^TMP($J,"ECXORDER",DIV)) Q:DIV=""  S GTOT(DIV)=0 D
"RTN","ECXAADM",78,0)
 .S ORDER="",STOT=0 F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  D
"RTN","ECXAADM",79,0)
 ..S TOT=$P(^TMP($J,"ECXORDER",DIV,ORDER),U,3),STOT=STOT+TOT,GTOT(DIV)=GTOT(DIV)+TOT
"RTN","ECXAADM",80,0)
 ..I $D(^TMP($J,"ECXORDER",DIV,ORDER,1)) S $P(^(1),U,3)=STOT,STOT=0
"RTN","ECXAADM",81,0)
 D PRINT
"RTN","ECXAADM",82,0)
 D AUDIT^ECXKILL
"RTN","ECXAADM",83,0)
 Q
"RTN","ECXAADM",84,0)
 ;
"RTN","ECXAADM",85,0)
PRINT ;print the admission data by division and ward order
"RTN","ECXAADM",86,0)
 N JJ,SS,LN,PG,QFLG,WRDNM,WRDTOT,GRPNM,GRPTOT,DATA,DATA1,DIC,DA,DR,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXAADM",87,0)
 U IO
"RTN","ECXAADM",88,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAADM",89,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXAADM",90,0)
 F  S DIV=$O(GTOT(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXAADM",91,0)
 .D HEADER Q:QFLG
"RTN","ECXAADM",92,0)
 .I GTOT(DIV)=0 D  Q
"RTN","ECXAADM",93,0)
 ..W !!,?5,"No admission data extracted for this medical center division.",!
"RTN","ECXAADM",94,0)
 .S ORDER="" F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  D  Q:QFLG
"RTN","ECXAADM",95,0)
 ..S DATA=^TMP($J,"ECXORDER",DIV,ORDER) K DATA1 I $D(^(ORDER,1)) S DATA1=^(1)
"RTN","ECXAADM",96,0)
 ..S WRDNM=$P(DATA,U,2),WRDTOT=+$P(DATA,U,3)
"RTN","ECXAADM",97,0)
 ..;don't display inactive wards unless there is admission data
"RTN","ECXAADM",98,0)
 ..;don't attempt to group inactive/unordered wards
"RTN","ECXAADM",99,0)
 ..I ORDER>999990 K DATA1 I WRDTOT=0 Q
"RTN","ECXAADM",100,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAADM",101,0)
 ..W !,?5,WRDNM,?45,$$RJ^XLFSTR(WRDTOT,5," ")
"RTN","ECXAADM",102,0)
 ..;if data1 exists, then this is the end of a ward group so print group total
"RTN","ECXAADM",103,0)
 ..I $G(DATA1) D  Q:QFLG
"RTN","ECXAADM",104,0)
 ...S GRPNM=$P(DATA1,U,2),GRPTOT=$P(DATA1,U,3)
"RTN","ECXAADM",105,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAADM",106,0)
 ...W !,?40,"----------"
"RTN","ECXAADM",107,0)
 ...W !,"Ward group "_GRPNM_" subtotal:",?45,$$RJ^XLFSTR(GRPTOT,5," ")
"RTN","ECXAADM",108,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAADM",109,0)
 ...W !!
"RTN","ECXAADM",110,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAADM",111,0)
 .W !!,"Division "_$P(ECXDIV(DIV),U,2)_" Grand Total:",?45,$$RJ^XLFSTR(GTOT(DIV),5," ")
"RTN","ECXAADM",112,0)
 I $E(IOST)'="C" D
"RTN","ECXAADM",113,0)
 .W @IOF S PG=PG+1
"RTN","ECXAADM",114,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAADM",115,0)
 .W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAADM",116,0)
 .W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAADM",117,0)
 .W !,"Report Run Date/Time:    "_ECXRUN,?68,"Page: ",PG
"RTN","ECXAADM",118,0)
 .W !!,LN,!!
"RTN","ECXAADM",119,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAADM",120,0)
 .W @IOF
"RTN","ECXAADM",121,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAADM",122,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAADM",123,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAADM",124,0)
 Q
"RTN","ECXAADM",125,0)
 ;
"RTN","ECXAADM",126,0)
HEADER ;header and page control
"RTN","ECXAADM",127,0)
 N JJ,SS,DIR,DIRUT,DTOUT,DUOUT,DSSID
"RTN","ECXAADM",128,0)
 I $E(IOST)="C" D
"RTN","ECXAADM",129,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAADM",130,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAADM",131,0)
 Q:QFLG
"RTN","ECXAADM",132,0)
 S DSSID=$P(ECXDIV(DIV),U,6)
"RTN","ECXAADM",133,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAADM",134,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAADM",135,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAADM",136,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAADM",137,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXAADM",138,0)
 I DSSID="" W !,"Medical Center Division: "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")",?68,"Page: "_PG
"RTN","ECXAADM",139,0)
 I DSSID]"" W !,"Medical Center Division: "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")"_" <"_DSSID_">",?68,"Page: "_PG
"RTN","ECXAADM",140,0)
 W !!,?5,"Ward <DSS Dept.>",?40,"# of Admissions"
"RTN","ECXAADM",141,0)
 W !,LN,!
"RTN","ECXAADM",142,0)
 Q
"RTN","ECXADEN")
0^11^B54917592
"RTN","ECXADEN",1,0)
ECXADEN ;ALB/JAP - DEN Extract Audit Report ;Oct 10, 1997
"RTN","ECXADEN",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXADEN",3,0)
 ;
"RTN","ECXADEN",4,0)
EN ;entry point for DEN extract audit report
"RTN","ECXADEN",5,0)
 ;select extract
"RTN","ECXADEN",6,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,SITES,ECX
"RTN","ECXADEN",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXADEN",8,0)
 S ECXERR=0
"RTN","ECXADEN",9,0)
 S ECXHEAD="DEN",ECXAUD=0
"RTN","ECXADEN",10,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXADEN",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXADEN",12,0)
 Q:ECXERR
"RTN","ECXADEN",13,0)
 ;determine if facility is multidivisional
"RTN","ECXADEN",14,0)
 K ECX D FILE^DID(225,,"ENTRIES","ECX") S SITES=ECX("ENTRIES") K ECX
"RTN","ECXADEN",15,0)
 I SITES=1 S ECXALL=1
"RTN","ECXADEN",16,0)
 I SITES>1 D
"RTN","ECXADEN",17,0)
 .W !!
"RTN","ECXADEN",18,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all divisions"
"RTN","ECXADEN",19,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXADEN",20,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXADEN",21,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXADEN",22,0)
 .S ECXALL=Y
"RTN","ECXADEN",23,0)
 I ECXERR=1 D  Q
"RTN","ECXADEN",24,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXADEN",25,0)
 .D AUDIT^ECXKILL
"RTN","ECXADEN",26,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXADEN",27,0)
 W !
"RTN","ECXADEN",28,0)
 S ECXSTART=ECXARRAY("START"),ECXEND=ECXARRAY("END")
"RTN","ECXADEN",29,0)
 D DEN^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXADEN",30,0)
 I ECXERR=1 D  Q
"RTN","ECXADEN",31,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXADEN",32,0)
 .D AUDIT^ECXKILL
"RTN","ECXADEN",33,0)
 ;determine output device and queue if requested
"RTN","ECXADEN",34,0)
 S ECXPGM="PROCESS^ECXADEN",ECXDESC="DEN Extract Audit Report"
"RTN","ECXADEN",35,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXADEN",36,0)
 W !
"RTN","ECXADEN",37,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXADEN",38,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXADEN",39,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXADEN",40,0)
 .D AUDIT^ECXKILL
"RTN","ECXADEN",41,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXADEN",42,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXADEN",43,0)
 .D PROCESS^ECXADEN
"RTN","ECXADEN",44,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXADEN",45,0)
 D HOME^%ZIS
"RTN","ECXADEN",46,0)
 D AUDIT^ECXKILL
"RTN","ECXADEN",47,0)
 Q
"RTN","ECXADEN",48,0)
 ;
"RTN","ECXADEN",49,0)
PROCESS ;process data in file #727.806
"RTN","ECXADEN",50,0)
 N X,Y,JJ,DATE,DIV,IEN,DFN,SXAM,CXAM,EXAM,PT,TMP,TOTPTS,QQFLG,CNT
"RTN","ECXADEN",51,0)
 K ^TMP($J,"ECXAUD"),^TMP($J,"ECXPATS"),^TMP($J,"ECXPROC")
"RTN","ECXADEN",52,0)
 S (CNT,QQFLG)=0
"RTN","ECXADEN",53,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXADEN",54,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXADEN",55,0)
 ;get run date in external format
"RTN","ECXADEN",56,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXADEN",57,0)
 ;convert ecxdiv array to be subscripted by dental site id #
"RTN","ECXADEN",58,0)
 S JJ=0 F  S JJ=$O(ECXDIV(JJ)) Q:JJ=""  S DIV=$P(ECXDIV(JJ),U,3),DIV(DIV)=JJ
"RTN","ECXADEN",59,0)
 ;get records within date range and dental site(s)
"RTN","ECXADEN",60,0)
 S IEN="" F  S IEN=$O(^ECX(727.806,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXADEN",61,0)
 .S PT=^ECX(727.806,IEN,0)
"RTN","ECXADEN",62,0)
 .S DATE=$P(PT,U,9),DIV=$P(PT,U,41)
"RTN","ECXADEN",63,0)
 .;convert free text date to fm internal format date
"RTN","ECXADEN",64,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXADEN",65,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXADEN",66,0)
 .;if dental division is in selected set, then tally dental data
"RTN","ECXADEN",67,0)
 .Q:'$D(DIV(DIV))
"RTN","ECXADEN",68,0)
 .S DFN=$P(PT,U,5),(SXAM,CXAM)=0,EXAM=$P(PT,U,11) S:EXAM="S" SXAM=1 S:EXAM="C" CXAM=1
"RTN","ECXADEN",69,0)
 .S DATA=SXAM_U_CXAM_U
"RTN","ECXADEN",70,0)
 .S DATA=DATA_+$P(PT,U,44)_U_+$P(PT,U,13)_U_+$P(PT,U,14)_U_+$P(PT,U,18)_U_+$P(PT,U,24)_U_+$P(PT,U,25)_U_+$P(PT,U,26)_U_+$P(PT,U,27)_U
"RTN","ECXADEN",71,0)
 .S DATA=DATA_+$P(PT,U,15)_U_+$P(PT,U,16)_U_+$P(PT,U,38)_U_+$P(PT,U,39)_U_+$P(PT,U,19)_U_+$P(PT,U,20)_U_+$P(PT,U,21)_U
"RTN","ECXADEN",72,0)
 .S DATA=DATA_+$P(PT,U,30)_U_+$P(PT,U,31)_U_+$P(PT,U,32)_U_+$P(PT,U,33)_U_+$P(PT,U,34)_U_+$P(PT,U,35)_U_+$P(PT,U,36)
"RTN","ECXADEN",73,0)
 .I '$D(^TMP($J,"ECXAUD",DIV,DFN)) S ^TMP($J,"ECXAUD",DIV,DFN)="0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0"
"RTN","ECXADEN",74,0)
 .S TMP=^TMP($J,"ECXAUD",DIV,DFN)
"RTN","ECXADEN",75,0)
 .F JJ=1:1:24 S $P(TMP,U,JJ)=$P(TMP,U,JJ)+$P(DATA,U,JJ)
"RTN","ECXADEN",76,0)
 .S ^TMP($J,"ECXAUD",DIV,DFN)=TMP,CNT=CNT+1
"RTN","ECXADEN",77,0)
 .I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ Q
"RTN","ECXADEN",78,0)
 ;after all dental extract records processed, then do totals by patient and procedure
"RTN","ECXADEN",79,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXADEN",80,0)
 S DIV="" F  S DIV=$O(DIV(DIV)) Q:DIV=""  S TOTPTS(DIV)=0 F JJ=1:1:24 S ^TMP($J,"ECXPROC",DIV,JJ)=0,^TMP($J,"ECXPATS",DIV,JJ)=0
"RTN","ECXADEN",81,0)
 S DIV="" F  S DIV=$O(^TMP($J,"ECXAUD",DIV)) Q:DIV=""  D
"RTN","ECXADEN",82,0)
 .S DFN="" F  S DFN=$O(^TMP($J,"ECXAUD",DIV,DFN)) Q:DFN=""  D
"RTN","ECXADEN",83,0)
 ..S TMP=^TMP($J,"ECXAUD",DIV,DFN),TOTPTS(DIV)=TOTPTS(DIV)+1
"RTN","ECXADEN",84,0)
 ..F JJ=1:1:24 S ^TMP($J,"ECXPROC",DIV,JJ)=^TMP($J,"ECXPROC",DIV,JJ)+$P(TMP,U,JJ) I +$P(TMP,U,JJ)>0 S ^TMP($J,"ECXPATS",DIV,JJ)=^TMP($J,"ECXPATS",DIV,JJ)+1
"RTN","ECXADEN",85,0)
 ;print the report
"RTN","ECXADEN",86,0)
 D PRINT
"RTN","ECXADEN",87,0)
 D AUDIT^ECXKILL
"RTN","ECXADEN",88,0)
 Q
"RTN","ECXADEN",89,0)
 ;
"RTN","ECXADEN",90,0)
PRINT ;print the DEN audit report by dental site
"RTN","ECXADEN",91,0)
 N LN,P,PG,SS,QFLG,GTPROC,GTPAT,TPROC,TPAT,DIEN,TEXT
"RTN","ECXADEN",92,0)
 U IO
"RTN","ECXADEN",93,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXADEN",94,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXADEN",95,0)
 F  S DIV=$O(^TMP($J,"ECXPROC",DIV)) Q:DIV=""  S DIEN=DIV(DIV) D  Q:QFLG
"RTN","ECXADEN",96,0)
 .S (GTPROC,GTPAT)=0
"RTN","ECXADEN",97,0)
 .D HEADER Q:QFLG
"RTN","ECXADEN",98,0)
 .I TOTPTS(DIV)=0 D  Q
"RTN","ECXADEN",99,0)
 ..W !!,?28,"No data for Dental Site "_$P(ECXDIV(DIEN),U,3)_".",!
"RTN","ECXADEN",100,0)
 .S GTPAT=TOTPTS(DIV)
"RTN","ECXADEN",101,0)
 .F P=1:1:24 D  Q:QFLG
"RTN","ECXADEN",102,0)
 ..S TEXT=$T(DENT+P),TEXT=$P(TEXT,";;",2),TPROC=^TMP($J,"ECXPROC",DIV,P),TPAT=^TMP($J,"ECXPATS",DIV,P),GTPROC=GTPROC+TPROC
"RTN","ECXADEN",103,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXADEN",104,0)
 ..W !,$E($P(TEXT,U,1),1,25),?28,$E($P(TEXT,U,2),1,25),?56,$$RJ^XLFSTR(TPROC,5," "),?70,$$RJ^XLFSTR(TPAT,5," ")
"RTN","ECXADEN",105,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!
"RTN","ECXADEN",106,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,?56,"-----",?70,"-----"
"RTN","ECXADEN",107,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,"Totals for Dental Site "_$P(ECXDIV(DIEN),U,3)_":",?56,$$RJ^XLFSTR(GTPROC,5," "),?70,$$RJ^XLFSTR(GTPAT,5," ")," **"
"RTN","ECXADEN",108,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"** Total # of unique patients.",!
"RTN","ECXADEN",109,0)
 I $E(IOST)'="C" D
"RTN","ECXADEN",110,0)
 .W @IOF S PG=PG+1
"RTN","ECXADEN",111,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXADEN",112,0)
 .W !,"DSS Extract Log #:    "_ECXEXT
"RTN","ECXADEN",113,0)
 .W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXADEN",114,0)
 .W !,"Report Run Date/Time: "_ECXRUN,?70,"Page: ",PG
"RTN","ECXADEN",115,0)
 .W !!,LN,!!
"RTN","ECXADEN",116,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXADEN",117,0)
 .W @IOF
"RTN","ECXADEN",118,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXADEN",119,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXADEN",120,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXADEN",121,0)
 Q
"RTN","ECXADEN",122,0)
 ;
"RTN","ECXADEN",123,0)
HEADER ;header and page control
"RTN","ECXADEN",124,0)
 N JJ,SS
"RTN","ECXADEN",125,0)
 I $E(IOST)="C" D
"RTN","ECXADEN",126,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXADEN",127,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXADEN",128,0)
 Q:QFLG
"RTN","ECXADEN",129,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXADEN",130,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXADEN",131,0)
 W !,"DSS Extract Log #:    "_ECXEXT
"RTN","ECXADEN",132,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXADEN",133,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXADEN",134,0)
 I $P(ECXDIV(DIEN),U,2)="" S $P(ECXDIV(DIEN),U,2)="Unknown"
"RTN","ECXADEN",135,0)
 W !,"Dental Site:          "_$P(ECXDIV(DIEN),U,3)_" ("_$P(ECXDIV(DIEN),U,2)_")",?70,"Page: "_PG
"RTN","ECXADEN",136,0)
 W !!,?56,"# of",?70,"# of"
"RTN","ECXADEN",137,0)
 W !,"DSS Procedure",?28,"Dental Procedure",?56,"Procedures",?70,"Patients"
"RTN","ECXADEN",138,0)
 W !,LN,!
"RTN","ECXADEN",139,0)
 Q
"RTN","ECXADEN",140,0)
 ;
"RTN","ECXADEN",141,0)
DENT ;;procedure names for report
"RTN","ECXADEN",142,0)
 ;;Screening Exam^ SCREENING EXAMINATION
"RTN","ECXADEN",143,0)
 ;;Complete Exam^ COMPLETE EXAMINATION
"RTN","ECXADEN",144,0)
 ;;Evaluation^ EVALUATION
"RTN","ECXADEN",145,0)
 ;;X-Rays Extraoral^ DIAGNOSTIC FILMS-EXTRAORAL
"RTN","ECXADEN",146,0)
 ;;X-Rays Intraoral^ DIAGNOSTIC FILMS-INTRAORAL
"RTN","ECXADEN",147,0)
 ;;Neoplasm Confirmed Malignant^ MALIGNANT NEOPLASM CONFIRMED
"RTN","ECXADEN",148,0)
 ;;Surfaces Restored^ SURFACE RESTORED
"RTN","ECXADEN",149,0)
 ;;Root Canal Therapy^ ROOT CANAL FILLED
"RTN","ECXADEN",150,0)
 ;;Periodontal Quads (Surgical)^ QUADRANT OF PERIODONTAL SURGERY
"RTN","ECXADEN",151,0)
 ;;Periodontal Quads (Root Plane)^ QUADRANT OF ROOT PLANING AND CURETTAGE
"RTN","ECXADEN",152,0)
 ;;Prophy Natural Dentition^ PROPHYLAXIS - NATURAL DENTITION
"RTN","ECXADEN",153,0)
 ;;Prophy Denture^ PATIENT WITH PROTHESES CLEANED
"RTN","ECXADEN",154,0)
 ;;Extractions^ EXTRACTIONS (WEIGHTED)
"RTN","ECXADEN",155,0)
 ;;Surgical Extractions^ SURGICAL EXTRACTION
"RTN","ECXADEN",156,0)
 ;;Neoplasm Removed^ NEOPLASM REMOVED
"RTN","ECXADEN",157,0)
 ;;Biopsy/Smear^ BIOPSY AND/OR CYTOLOGICAL SMEARS
"RTN","ECXADEN",158,0)
 ;;Fracture^ MAXILLOFACIAL FRACTURE REDUCTION
"RTN","ECXADEN",159,0)
 ;;Individual Crowns^ SINGLE CROWN (PER CROWN)
"RTN","ECXADEN",160,0)
 ;;Post & Cores^ POST AND CORE OR OVERDENTURE COPING
"RTN","ECXADEN",161,0)
 ;;Fixed Partials (Abut)^ ABUTMENT UNIT FOR FIXED PROSTHESIS
"RTN","ECXADEN",162,0)
 ;;Fixed Partials (Pont Only)^ PONTIC UNIT FOR FIXED PROSTHESIS
"RTN","ECXADEN",163,0)
 ;;Removable Partials^ REMOVABLE PARTIAL DENTURE INSERTED
"RTN","ECXADEN",164,0)
 ;;Complete Dentures^ REMOVABLE COMPLETE DENTURE INSERTED
"RTN","ECXADEN",165,0)
 ;;Prosthetic Repair^ PROTHESIS REPAIRED
"RTN","ECXADM")
0^21^B15461464
"RTN","ECXADM",1,0)
ECXADM ;ALB/JAP,BIR/DMA,CML,PTD-Admissions Extract ; [ 11/25/96  11:21 AM ]
"RTN","ECXADM",2,0)
 ;;3.0;DSS EXTRACTS;**1,4,11,8**;Dec 22, 1997
"RTN","ECXADM",3,0)
BEG ;entry point from option
"RTN","ECXADM",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXADM",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXADM",6,0)
 Q
"RTN","ECXADM",7,0)
 ;
"RTN","ECXADM",8,0)
START ; start package specific extract
"RTN","ECXADM",9,0)
 N QFLG,PAT,DFN
"RTN","ECXADM",10,0)
 S QFLG=0
"RTN","ECXADM",11,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD") S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXADM",12,0)
 S ECED=ECED+.3
"RTN","ECXADM",13,0)
 S ECD=ECSD1 F  S ECD=$O(^DGPM("ATT1",ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  F  S ECDA=$O(^DGPM("ATT1",ECD,ECDA)) Q:'ECDA  D
"RTN","ECXADM",14,0)
 .I $D(^DGPM(ECDA,0)) D  Q:QFLG 
"RTN","ECXADM",15,0)
 ..S EC=^DGPM(ECDA,0),DFN=$P(EC,U,3) I $D(^DPT(DFN,0)) S PAT=^(0) D GET Q:QFLG
"RTN","ECXADM",16,0)
 Q
"RTN","ECXADM",17,0)
 ;
"RTN","ECXADM",18,0)
GET ;gather extract data
"RTN","ECXADM",19,0)
 N ALIAS,DSSDEPT,ELG,ELGA,ENR,I,INSUR,J,JJ,MST,MSTEI,PAYOR,SAI,TOT,WRD,STATE,CNTY,ZIP,VAPA,X,Y
"RTN","ECXADM",20,0)
 S ECTM=$$ECXTIME^ECXUTL(ECD)
"RTN","ECXADM",21,0)
 S X=$$PRIMARY^ECXUTL2(DFN,ECD,ECPRO),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2)
"RTN","ECXADM",22,0)
 S ECM=$P($G(^DG(408.32,+$P(PAT,U,14),0)),U,2)
"RTN","ECXADM",23,0)
 K VAPA D ADD^VADPT
"RTN","ECXADM",24,0)
 S STATE=VAPA(5),CNTY=VAPA(7),ZIP=VAPA(6)
"RTN","ECXADM",25,0)
 S STATE=$P($G(^DIC(5,+STATE,0)),U,3),CNTY=$P($G(^DIC(5,+STATE,1,+CNTY,0)),U,3)
"RTN","ECXADM",26,0)
 S ELG=$P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),U,9) I ELG S ELG=$C(ELG+64)
"RTN","ECXADM",27,0)
 S ENR=$P($G(^DPT(DFN,"ENR")),U,2) I ENR D
"RTN","ECXADM",28,0)
 .S DIC="^DIC(4,",DA=ENR,DR="99;",DIQ(0)="I",DIQ="ENR"
"RTN","ECXADM",29,0)
 .D EN^DIQ1 S ENR=ENR(4,ENR,99,"I")
"RTN","ECXADM",30,0)
 .K DIC,DIQ,DA,DR
"RTN","ECXADM",31,0)
 S W=$P(EC,U,6),WRD=$P($G(^DIC(42,+W,44)),U),FAC=$P($G(^DIC(42,+W,0)),U,11),DSSDEPT=$P($G(^ECX(727.4,W,0)),U,2)
"RTN","ECXADM",32,0)
 S ELGA=$P($G(^DIC(8,+$P(EC,U,20),0)),U,9) I ELGA S ELGA=$C(ELGA+64)
"RTN","ECXADM",33,0)
 S (ECDRG,ECDIA)="",ECPTF=+$P(EC,U,16) I ECPTF,$D(^DGPT(ECPTF,"M")) D PTF
"RTN","ECXADM",34,0)
 S ECTS="" F J=1:1:100 S ECT1=$G(^DGPM(ECDA+J,0)) I $P(ECT1,U,14)=ECDA,$P(ECT1,U,2)=6 S ECTS=ECT1 Q
"RTN","ECXADM",35,0)
 ;get corresponding Treating specialty - should be the next one, but must be close
"RTN","ECXADM",36,0)
 ;it's possible that variable ects is still null at this point
"RTN","ECXADM",37,0)
 S ECXPRV="",ECXPRV=$P(ECTS,U,8) S:ECXPRV]"" ECXPRV=ECPRO_ECXPRV
"RTN","ECXADM",38,0)
 S ECXATT="",ECXATT=$P(ECTS,U,19) S:ECXATT]"" ECXATT=ECPRO_ECXATT
"RTN","ECXADM",39,0)
 S ECXSPC=$P($G(^DIC(45.7,+$P(ECTS,U,9),0)),U,2)
"RTN","ECXADM",40,0)
 S (MST,MSTEI)=""
"RTN","ECXADM",41,0)
 ;get visn 19 sharing agreement data
"RTN","ECXADM",42,0)
 D VISN19^ECXUTL2(DFN,.PAYOR,.SAI)
"RTN","ECXADM",43,0)
 D FILE
"RTN","ECXADM",44,0)
 Q
"RTN","ECXADM",45,0)
 ;
"RTN","ECXADM",46,0)
FILE ;file the extract record
"RTN","ECXADM",47,0)
 ;node0
"RTN","ECXADM",48,0)
 ;facility^dfn^ssn^name^in/out^day^primary care team^sex^dob^religion^employment status^health ins^state^county^zip^
"RTN","ECXADM",49,0)
 ;eligibility^vet^vietnam^agent orange^radiation^pow^period of service^means test^marital status^
"RTN","ECXADM",50,0)
 ;ward^treating specialty^attending physician^mov #^DRG^diagnosis^time^primary care provider^race^primary ward provider
"RTN","ECXADM",51,0)
 ;node1
"RTN","ECXADM",52,0)
 ;mpi^dss dept^attending npi^pc provider npi^ward provider npi^admission elig^mst status^mst indicator^sharing payor^sharing insurance^enrollment location
"RTN","ECXADM",53,0)
 N DA,DIK
"RTN","ECXADM",54,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXADM",55,0)
 S ECODE=EC7_U_EC23
"RTN","ECXADM",56,0)
 S ECODE=ECODE_U_FAC_U_DFN_U_$P(PAT,U,9)_U_$E($P($P(PAT,U),",")_"    ",1,4)_U_"3"_U_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECPTTM_U_$P(PAT,U,2)_U_$$ECXDOB^ECXUTL($P(PAT,U,3))_U_$P(PAT,U,8)_U_$P($G(^DPT(DFN,.311)),U,15)_U_+$$INSURED^IBCNS1(DFN,ECD)
"RTN","ECXADM",57,0)
 S ECODE=ECODE_U_STATE_U_CNTY_U_ZIP
"RTN","ECXADM",58,0)
 S ECODE=ECODE_U_ELG_U_$P($G(^DPT(DFN,"VET")),U)_U_$P($G(^DPT(DFN,.321))_"^^^^",U,1,3)_U_$P($G(^DPT(DFN,.52)),U,5)_U_$P($G(^DIC(21,+$P($G(^DPT(DFN,.32)),U,3),0)),U,3)_U_ECM_U_$P(PAT,U,5)
"RTN","ECXADM",59,0)
 S ECODE=ECODE_U_WRD_U_ECXSPC_U_ECXATT_U_ECDA
"RTN","ECXADM",60,0)
 S ECODE=ECODE_U_ECDRG_U_ECDIA_U_ECTM_U_ECPTPR_U_$P($G(^DIC(10,+$P(PAT,U,6),0)),U,2)_U_ECXPRV
"RTN","ECXADM",61,0)
 S ECODE1=U_DSSDEPT_U_U_U_U_ELGA_U_MST_U_MSTEI_U_PAYOR_U_SAI_U_ENR
"RTN","ECXADM",62,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXADM",63,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXADM",64,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXADM",65,0)
 Q
"RTN","ECXADM",66,0)
 ;
"RTN","ECXADM",67,0)
PTF ; get admitting DRG and diagnosis from PTF
"RTN","ECXADM",68,0)
 ;use number for DRG and .01 for diagnosis
"RTN","ECXADM",69,0)
 N EC,EC1
"RTN","ECXADM",70,0)
 S EC=1 I $D(^DGPT(ECPTF,"M",2,0)) S EC=2
"RTN","ECXADM",71,0)
 S EC1=+$P(^DGPT(ECPTF,"M",EC,0),U,5),ECDRG=$P($G(^DGPT(ECPTF,"M",EC,"P")),U)
"RTN","ECXADM",72,0)
 S ECDIA=$P($G(^ICD9(EC1,0)),U)
"RTN","ECXADM",73,0)
 Q
"RTN","ECXADM",74,0)
 ;
"RTN","ECXADM",75,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXADM",76,0)
 S ECHEAD="ADM"
"RTN","ECXADM",77,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXADM",78,0)
 Q
"RTN","ECXADM",79,0)
 ;
"RTN","ECXADM",80,0)
 ;
"RTN","ECXADM",81,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXADM",82,0)
 ; should be queued with a 1D frequency
"RTN","ECXADM",83,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXADM",84,0)
 ;
"RTN","ECXADM",85,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXADM",86,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXADM",87,0)
 ;
"RTN","ECXAECQ")
0^12^B27355088
"RTN","ECXAECQ",1,0)
ECXAECQ ;ALB/JAP - ECQ Extract Audit Report ;Oct 16, 1997
"RTN","ECXAECQ",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXAECQ",3,0)
 ;
"RTN","ECXAECQ",4,0)
EN ;entry point for ECQ extract audit report
"RTN","ECXAECQ",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR
"RTN","ECXAECQ",6,0)
 S ECXERR=0
"RTN","ECXAECQ",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAECQ",8,0)
 S ECXHEAD="ECQ",ECXAUD=0
"RTN","ECXAECQ",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAECQ",10,0)
 ;select extract
"RTN","ECXAECQ",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAECQ",12,0)
 Q:ECXERR
"RTN","ECXAECQ",13,0)
 ;currently, quasar does not accommodate multi-divisional sites
"RTN","ECXAECQ",14,0)
 S ECXALL=1
"RTN","ECXAECQ",15,0)
 D ECQ^ECXDVSN1(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXAECQ",16,0)
 I ECXERR=1 D  Q
"RTN","ECXAECQ",17,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAECQ",18,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECQ",19,0)
 ;determine output device and queue if requested
"RTN","ECXAECQ",20,0)
 W !
"RTN","ECXAECQ",21,0)
 S ECXPGM="PROCESS^ECXAECQ",ECXDESC="ECQ Extract Audit Report"
"RTN","ECXAECQ",22,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXAECQ",23,0)
 W !
"RTN","ECXAECQ",24,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAECQ",25,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAECQ",26,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAECQ",27,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECQ",28,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAECQ",29,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAECQ",30,0)
 .D PROCESS^ECXAECQ
"RTN","ECXAECQ",31,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAECQ",32,0)
 D HOME^%ZIS
"RTN","ECXAECQ",33,0)
 D AUDIT^ECXKILL
"RTN","ECXAECQ",34,0)
 Q
"RTN","ECXAECQ",35,0)
 ;
"RTN","ECXAECQ",36,0)
PROCESS ;process data in file #727.825
"RTN","ECXAECQ",37,0)
 N X,Y,W,DATA,DATE,DIV,DIVACK,IEN,LOC,UNIT,UNITN,VOL,PROC,PROCN,QQFLG,CNT
"RTN","ECXAECQ",38,0)
 K ^TMP($J,"ECXAUD"),^TMP($J,"ECXPROC")
"RTN","ECXAECQ",39,0)
 S (CNT,QQFLG)=0
"RTN","ECXAECQ",40,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAECQ",41,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAECQ",42,0)
 ;get run date in external format
"RTN","ECXAECQ",43,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAECQ",44,0)
 ;get the dss unit links for this division/site
"RTN","ECXAECQ",45,0)
 S DIV=0 F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  S DIVACK=$P(ECXDIV(DIV),U,1),ECXLINK(DIV)=^ACK(509850.8,DIVACK,"DSS")
"RTN","ECXAECQ",46,0)
 ;get extract records in date range
"RTN","ECXAECQ",47,0)
 S IEN="" F  S IEN=$O(^ECX(727.825,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAECQ",48,0)
 .S DATA=^ECX(727.825,IEN,0),DATE=$P(DATA,U,9),DIV=$P(DATA,U,4)
"RTN","ECXAECQ",49,0)
 .;convert free text date to fm internal format date
"RTN","ECXAECQ",50,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAECQ",51,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAECQ",52,0)
 .;if location is among those selected, then tally event capture data
"RTN","ECXAECQ",53,0)
 .I $D(ECXDIV(DIV)) D  Q:QQFLG
"RTN","ECXAECQ",54,0)
 ..;any quasar site that doesn't have links to dss is identified by "xx"
"RTN","ECXAECQ",55,0)
 ..S UNIT=$P(DATA,U,10) S LOC=$S(UNIT=$P(ECXLINK(DIV),U,1):"A",UNIT=$P(ECXLINK(DIV),U,2):"S",1:"XX")
"RTN","ECXAECQ",56,0)
 ..;any invalid cpt code is identified as "xxxxx"
"RTN","ECXAECQ",57,0)
 ..S PROC=$P(DATA,U,29),VOL=$P(DATA,U,13),PROCN=$P($G(^ICPT(+PROC,0)),U,2),PROC="A"_PROC S:VOL="" VOL=1 S:PROCN="" PROCN="Unknown"
"RTN","ECXAECQ",58,0)
 ..I '$D(^TMP($J,"ECXAUD",DIV,LOC,PROC)) S ^TMP($J,"ECXAUD",DIV,LOC,PROC)=0_U_PROCN
"RTN","ECXAECQ",59,0)
 ..S $P(^(PROC),U,1)=$P(^TMP($J,"ECXAUD",DIV,LOC,PROC),U,1)+VOL,CNT=CNT+1
"RTN","ECXAECQ",60,0)
 ..I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXAECQ",61,0)
 ;print the report
"RTN","ECXAECQ",62,0)
 D PRINT
"RTN","ECXAECQ",63,0)
 D AUDIT^ECXKILL
"RTN","ECXAECQ",64,0)
 Q
"RTN","ECXAECQ",65,0)
 ;
"RTN","ECXAECQ",66,0)
PRINT ;print quasar data by site and dss unit order
"RTN","ECXAECQ",67,0)
 N JJ,SS,LN,P,DIV,DIVNM,LOC,UNITN,PG,QFLG,GTOT,STOT,TOT,PROC,PROCN,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXAECQ",68,0)
 U IO
"RTN","ECXAECQ",69,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAECQ",70,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXAECQ",71,0)
 F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXAECQ",72,0)
 .S DIVNM=$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")" D HEADER
"RTN","ECXAECQ",73,0)
 .S GTOT=0,STOT("A")=0,STOT("S")=0,STOT("XX")=0
"RTN","ECXAECQ",74,0)
 .I '$D(^TMP($J,"ECXAUD",DIV)) D  Q
"RTN","ECXAECQ",75,0)
 ..W !!,?5,"No data available for this QUASAR site.",!!
"RTN","ECXAECQ",76,0)
 .I $D(^TMP($J,"ECXAUD",DIV)) S LOC="" F  S LOC=$O(^TMP($J,"ECXAUD",DIV,LOC)) Q:LOC=""  D  Q:QFLG
"RTN","ECXAECQ",77,0)
 ..;write the unit name
"RTN","ECXAECQ",78,0)
 ..S UNITN=$S(LOC="A":"Audiology",LOC="S":"Speech Pathology",1:"Unknown"),PROC=""
"RTN","ECXAECQ",79,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,UNITN,!
"RTN","ECXAECQ",80,0)
 ..F  S PROC=$O(^TMP($J,"ECXAUD",DIV,LOC,PROC)) Q:PROC=""  D  Q:QFLG
"RTN","ECXAECQ",81,0)
 ...S TOT=+^TMP($J,"ECXAUD",DIV,LOC,PROC),PROCN=$P(^(PROC),U,2),P=$E(PROC,2,99)
"RTN","ECXAECQ",82,0)
 ...S STOT(LOC)=STOT(LOC)+TOT,GTOT=GTOT+TOT
"RTN","ECXAECQ",83,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG  W !,?25,P,?35,$E(PROCN,1,30),?68,$$RJ^XLFSTR(TOT,5," ")
"RTN","ECXAECQ",84,0)
 ..;write the unit subtotal
"RTN","ECXAECQ",85,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?25,$E(LN,1,54)
"RTN","ECXAECQ",86,0)
 ..W !,"Total Volume for "_UNITN_":",?68,$$RJ^XLFSTR(STOT(LOC),5," "),!
"RTN","ECXAECQ",87,0)
 .;write the division grandtotal
"RTN","ECXAECQ",88,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Grand Total for Site "_DIVNM_":",?68,$$RJ^XLFSTR(GTOT,5," ")
"RTN","ECXAECQ",89,0)
 ;print the audit descriptive narrative
"RTN","ECXAECQ",90,0)
 I $E(IOST)'="C" D
"RTN","ECXAECQ",91,0)
 .W @IOF S PG=PG+1
"RTN","ECXAECQ",92,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAECQ",93,0)
 .W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAECQ",94,0)
 .W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAECQ",95,0)
 .W !,"Report Run Date/Time:    "_ECXRUN,?68,"Page: ",PG
"RTN","ECXAECQ",96,0)
 .W !!,LN,!!
"RTN","ECXAECQ",97,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAECQ",98,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAECQ",99,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAECQ",100,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAECQ",101,0)
 Q
"RTN","ECXAECQ",102,0)
 ;
"RTN","ECXAECQ",103,0)
HEADER ;header and page control
"RTN","ECXAECQ",104,0)
 N JJ,SS
"RTN","ECXAECQ",105,0)
 I $E(IOST)="C" D
"RTN","ECXAECQ",106,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAECQ",107,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAECQ",108,0)
 Q:QFLG
"RTN","ECXAECQ",109,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAECQ",110,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAECQ",111,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXAECQ",112,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAECQ",113,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXAECQ",114,0)
 W !,"QUASAR Site:          "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")",?68,"Page: "_PG
"RTN","ECXAECQ",115,0)
 W !!,"DSS Unit",?25,"Procedure",?68,"Volume"
"RTN","ECXAECQ",116,0)
 W !,LN,!
"RTN","ECXAECQ",117,0)
 Q
"RTN","ECXAECS")
0^13^B40489793
"RTN","ECXAECS",1,0)
ECXAECS ;ALB/JAP - ECS Extract Audit Report ;Oct 15, 1997
"RTN","ECXAECS",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXAECS",3,0)
 ;
"RTN","ECXAECS",4,0)
EN ;entry point for ECS extract audit report
"RTN","ECXAECS",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,CNT
"RTN","ECXAECS",6,0)
 S ECXERR=0
"RTN","ECXAECS",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAECS",8,0)
 S ECXHEAD="ECS",ECXAUD=0
"RTN","ECXAECS",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAECS",10,0)
 ;select extract
"RTN","ECXAECS",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAECS",12,0)
 Q:ECXERR
"RTN","ECXAECS",13,0)
 ;determine if facility is multidivisional for event capture
"RTN","ECXAECS",14,0)
 S CNT=0,ECXD="" F  S ECXD=$O(^DIC(4,"LOC",ECXD)) Q:ECXD=""  S CNT=CNT+1
"RTN","ECXAECS",15,0)
 S ECXALL=1
"RTN","ECXAECS",16,0)
 I CNT>1 D
"RTN","ECXAECS",17,0)
 .W !!
"RTN","ECXAECS",18,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all Locations"
"RTN","ECXAECS",19,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXAECS",20,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXAECS",21,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXAECS",22,0)
 .S ECXALL=Y
"RTN","ECXAECS",23,0)
 I ECXERR=1 D  Q
"RTN","ECXAECS",24,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAECS",25,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECS",26,0)
 ;select divisions/sites; all ec locations if ecxall=1
"RTN","ECXAECS",27,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAECS",28,0)
 D ECS^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXAECS",29,0)
 I ECXERR=1 D  Q
"RTN","ECXAECS",30,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAECS",31,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECS",32,0)
 ;determine output device and queue if requested
"RTN","ECXAECS",33,0)
 W !
"RTN","ECXAECS",34,0)
 S ECXPGM="PROCESS^ECXAECS",ECXDESC="ECS Extract Audit Report"
"RTN","ECXAECS",35,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXAECS",36,0)
 W !
"RTN","ECXAECS",37,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAECS",38,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAECS",39,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAECS",40,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECS",41,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAECS",42,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAECS",43,0)
 .D PROCESS^ECXAECS
"RTN","ECXAECS",44,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAECS",45,0)
 D HOME^%ZIS
"RTN","ECXAECS",46,0)
 D AUDIT^ECXKILL
"RTN","ECXAECS",47,0)
 Q
"RTN","ECXAECS",48,0)
 ;
"RTN","ECXAECS",49,0)
PROCESS ;process data in file #727.815
"RTN","ECXAECS",50,0)
 N X,Y,W,DATA,DATE,DIV,IEN,UNIT,UNITN,CAT,CATN,VOL,PROC,PROCN,PIEN,PRI,PRXF,PRSYN,QQFLG,CNT
"RTN","ECXAECS",51,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXAECS",52,0)
 S (CNT,QQFLG)=0
"RTN","ECXAECS",53,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAECS",54,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAECS",55,0)
 ;get run date in external format
"RTN","ECXAECS",56,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAECS",57,0)
 ;get records in date range
"RTN","ECXAECS",58,0)
 S IEN="" F  S IEN=$O(^ECX(727.815,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAECS",59,0)
 .S DATA=^ECX(727.815,IEN,0),DATE=$P(DATA,U,9),DIV=$P(DATA,U,4)
"RTN","ECXAECS",60,0)
 .;convert free text date to fm internal format date
"RTN","ECXAECS",61,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAECS",62,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAECS",63,0)
 .;if location is among those selected, then tally event capture data
"RTN","ECXAECS",64,0)
 .I $D(ECXDIV(DIV)) D  Q:QQFLG
"RTN","ECXAECS",65,0)
 ..S UNIT=$P(DATA,U,10),UNITN=$P($G(^ECD(UNIT,0)),U,1),UNIT(UNITN)=UNIT
"RTN","ECXAECS",66,0)
 ..;if no category, then cat=0
"RTN","ECXAECS",67,0)
 ..S CAT=+$P(DATA,U,11),CATN="" S:+CAT CATN=$P($G(^EC(726,CAT,0)),U,1) S:CATN="" CATN="Unknown"
"RTN","ECXAECS",68,0)
 ..S VOL=$P(DATA,U,13) S:VOL="" VOL=1 S PROC=$P(DATA,U,12)
"RTN","ECXAECS",69,0)
 ..I '$D(^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)) S ^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)=0
"RTN","ECXAECS",70,0)
 ..S ^(PROC)=^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)+VOL,CNT=CNT+1
"RTN","ECXAECS",71,0)
 ..I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ Q
"RTN","ECXAECS",72,0)
 ..;get the procedure name and setup in global array
"RTN","ECXAECS",73,0)
 ..S PIEN=0,PROCN=""
"RTN","ECXAECS",74,0)
 ..I $L(PROC)=6 S P=$E(PROC,1,5),PIEN=$O(^EC(725,"E",P,""))
"RTN","ECXAECS",75,0)
 ..;procedures from file #725
"RTN","ECXAECS",76,0)
 ..I +PIEN>0 D
"RTN","ECXAECS",77,0)
 ...S PROCN=$P($G(^EC(725,PIEN,0)),U,1)
"RTN","ECXAECS",78,0)
 ...S PRXF=PIEN_";EC(725,"
"RTN","ECXAECS",79,0)
 ...S PRI=+$O(^ECJ("AP",DIV,UNIT,CAT,PRXF,0)),PRSYN=$P($G(^ECJ(PRI,"PRO")),U,2)
"RTN","ECXAECS",80,0)
 ...I PRSYN]"" S PROCN=PRSYN
"RTN","ECXAECS",81,0)
 ..;procedures from file #81
"RTN","ECXAECS",82,0)
 ..I PIEN=0,PROCN="" D
"RTN","ECXAECS",83,0)
 ...S PIEN=$O(^ICPT("B",PROC,"")) I +PIEN>0 S PROCN=$P($G(^ICPT(PIEN,0)),U,2)
"RTN","ECXAECS",84,0)
 ...S PRXF=PIEN_";ICPT("
"RTN","ECXAECS",85,0)
 ...S PRI=+$O(^ECJ("AP",DIV,UNIT,CAT,PRXF,0)),PRSYN=$P($G(^ECJ(PRI,"PRO")),U,2)
"RTN","ECXAECS",86,0)
 ...I PRSYN]"" S PROCN=PRSYN
"RTN","ECXAECS",87,0)
 ..S:PROCN="" PROCN="Unknown"
"RTN","ECXAECS",88,0)
 ..S ^TMP($J,"ECXPROC",PROC)=PROCN
"RTN","ECXAECS",89,0)
 ;print the report
"RTN","ECXAECS",90,0)
 D PRINT
"RTN","ECXAECS",91,0)
 D AUDIT^ECXKILL
"RTN","ECXAECS",92,0)
 Q
"RTN","ECXAECS",93,0)
 ;
"RTN","ECXAECS",94,0)
PRINT ;print event capture data by location/division and dss unit order
"RTN","ECXAECS",95,0)
 N JJ,SS,P,PN,LN,NM,DIV,DIVNM,PG,QFLG,GTOT,PROC,STOT,TOT,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXAECS",96,0)
 U IO
"RTN","ECXAECS",97,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAECS",98,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXAECS",99,0)
 F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXAECS",100,0)
 .S DIVNM=$P(ECXDIV(DIV),U,2)_" ("_DIV_")",GTOT=0 D HEADER
"RTN","ECXAECS",101,0)
 .I '$D(^TMP($J,"ECXAUD",DIV)) D  Q
"RTN","ECXAECS",102,0)
 ..W !!,?5,"No data available for this Event Capture Location.",!!
"RTN","ECXAECS",103,0)
 .I $D(^TMP($J,"ECXAUD",DIV)) S UNITN="" F  S UNITN=$O(^TMP($J,"ECXAUD",DIV,UNITN)) Q:UNITN=""  D  Q:QFLG
"RTN","ECXAECS",104,0)
 ..S STOT=0,UNIT=UNIT(UNITN),CATN=""
"RTN","ECXAECS",105,0)
 ..;write the unit name
"RTN","ECXAECS",106,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,UNITN_" ("_UNIT_")",!
"RTN","ECXAECS",107,0)
 ..;initialize the proc array and set totals in array
"RTN","ECXAECS",108,0)
 ..F  S CATN=$O(^TMP($J,"ECXAUD",DIV,UNITN,CATN)) Q:CATN=""  K PROC S PROC="" D  Q:QFLG
"RTN","ECXAECS",109,0)
 ...;write the category name
"RTN","ECXAECS",110,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG  W !,?5,$E(CATN,1,25)
"RTN","ECXAECS",111,0)
 ...F  S PROC=$O(^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)) Q:PROC=""  S TOT=^(PROC) D
"RTN","ECXAECS",112,0)
 ....S STOT=STOT+TOT,GTOT=GTOT+TOT,PROCN=""
"RTN","ECXAECS",113,0)
 ....I $D(^TMP($J,"ECXPROC",PROC)) S PROCN=^(PROC)
"RTN","ECXAECS",114,0)
 ....S PROC($$LJ^XLFSTR(PROC,6," ")_" "_PROCN)=TOT
"RTN","ECXAECS",115,0)
 ...S PN="" F  S PN=$O(PROC(PN)) Q:PN=""  S TOT=PROC(PN) D  Q:QFLG
"RTN","ECXAECS",116,0)
 ....;write procedure and total
"RTN","ECXAECS",117,0)
 ....W ?35,$E(PN,1,30),?68,$$RJ^XLFSTR(TOT,5," "),!
"RTN","ECXAECS",118,0)
 ..;write the unit subtotal
"RTN","ECXAECS",119,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?5,$E(LN,1,74)
"RTN","ECXAECS",120,0)
 ..W !,"Total Volume for Unit "_UNITN_" ("_UNIT_"):",?68,$$RJ^XLFSTR(STOT,5," "),!
"RTN","ECXAECS",121,0)
 .;write the division grandtotal
"RTN","ECXAECS",122,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Grand Total for Location "_DIVNM_":",?68,$$RJ^XLFSTR(GTOT,5," ")
"RTN","ECXAECS",123,0)
 ;print the audit descriptive narrative
"RTN","ECXAECS",124,0)
 I $E(IOST)'="C" D
"RTN","ECXAECS",125,0)
 .W @IOF S PG=PG+1
"RTN","ECXAECS",126,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAECS",127,0)
 .W !,"DSS Extract Log #:      "_ECXEXT
"RTN","ECXAECS",128,0)
 .W !,"Date Range of Audit:    "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAECS",129,0)
 .W !,"Report Run Date/Time:   "_ECXRUN,?68,"Page: ",PG
"RTN","ECXAECS",130,0)
 .W !!,LN,!!
"RTN","ECXAECS",131,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAECS",132,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAECS",133,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAECS",134,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAECS",135,0)
 Q
"RTN","ECXAECS",136,0)
 ;
"RTN","ECXAECS",137,0)
HEADER ;header and page control
"RTN","ECXAECS",138,0)
 N JJ,SS
"RTN","ECXAECS",139,0)
 I $E(IOST)="C" D
"RTN","ECXAECS",140,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAECS",141,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAECS",142,0)
 Q:QFLG
"RTN","ECXAECS",143,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAECS",144,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAECS",145,0)
 W !,"DSS Extract Log #:      "_ECXARRAY("EXTRACT")
"RTN","ECXAECS",146,0)
 W !,"Date Range of Audit:    "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAECS",147,0)
 W !,"Report Run Date/Time:   "_ECXRUN
"RTN","ECXAECS",148,0)
 W !,"Event Capture Location: "_$P(ECXDIV(DIV),U,2)_" ("_DIV_")",?68,"Page: "_PG
"RTN","ECXAECS",149,0)
 W !!,"DSS Unit",!,?5,"Category",?35,"Procedure",?68,"Volume"
"RTN","ECXAECS",150,0)
 W !,LN,!
"RTN","ECXAECS",151,0)
 Q
"RTN","ECXALAB")
0^14^B32262849
"RTN","ECXALAB",1,0)
ECXALAB ;ALB/JAP - ECS Extract Audit Report ;Oct 23, 1997
"RTN","ECXALAB",2,0)
 ;;3.0;DSS EXTRACTS;**1,8**;Dec 22, 1997
"RTN","ECXALAB",3,0)
 ;
"RTN","ECXALAB",4,0)
EN ;entry point for LAB extract audit report
"RTN","ECXALAB",5,0)
 ;this audit report can be used for extracts done with
"RTN","ECXALAB",6,0)
 ;either ECXLABN or ECXLABO
"RTN","ECXALAB",7,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR
"RTN","ECXALAB",8,0)
 S ECXERR=0
"RTN","ECXALAB",9,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXALAB",10,0)
 S ECXHEAD="LAB",ECXAUD=0
"RTN","ECXALAB",11,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXALAB",12,0)
 ;select extract
"RTN","ECXALAB",13,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXALAB",14,0)
 Q:ECXERR
"RTN","ECXALAB",15,0)
 W !!
"RTN","ECXALAB",16,0)
 ;get the dss site name for report header
"RTN","ECXALAB",17,0)
 S ECXALL=1 D DEFAULT^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXALAB",18,0)
 Q:ECXERR=1
"RTN","ECXALAB",19,0)
 S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all Accession Areas"
"RTN","ECXALAB",20,0)
 S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXALAB",21,0)
 I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXALAB",22,0)
 ;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXALAB",23,0)
 S ECXALL=Y
"RTN","ECXALAB",24,0)
 I ECXERR=1 D  Q
"RTN","ECXALAB",25,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXALAB",26,0)
 .D AUDIT^ECXKILL
"RTN","ECXALAB",27,0)
 ;select accession areas; all accession areas if ecxall=1
"RTN","ECXALAB",28,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXALAB",29,0)
 D LAB^ECXDVSN1(.ECXACC,ECXALL,.ECXERR)
"RTN","ECXALAB",30,0)
 I ECXERR=1 D  Q
"RTN","ECXALAB",31,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXALAB",32,0)
 .D AUDIT^ECXKILL
"RTN","ECXALAB",33,0)
 ;determine output device and queue if requested
"RTN","ECXALAB",34,0)
 W !
"RTN","ECXALAB",35,0)
 S ECXPGM="PROCESS^ECXALAB",ECXDESC="LAB Extract Audit Report"
"RTN","ECXALAB",36,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXACC(")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXALAB",37,0)
 W !
"RTN","ECXALAB",38,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXALAB",39,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXALAB",40,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXALAB",41,0)
 .D AUDIT^ECXKILL
"RTN","ECXALAB",42,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXALAB",43,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXALAB",44,0)
 .D PROCESS^ECXALAB
"RTN","ECXALAB",45,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXALAB",46,0)
 D HOME^%ZIS
"RTN","ECXALAB",47,0)
 D AUDIT^ECXKILL
"RTN","ECXALAB",48,0)
 Q
"RTN","ECXALAB",49,0)
 ;
"RTN","ECXALAB",50,0)
PROCESS ;process data in file #727.813
"RTN","ECXALAB",51,0)
 N X,Y,JJ,LMIP,IEN,DATA,DATE,ACC,ACCNM,WKLDNM,WKLD,FILE,QQFLG,CNT
"RTN","ECXALAB",52,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXALAB",53,0)
 S (CNT,QQFLG)=0
"RTN","ECXALAB",54,0)
 ;see if site is using lmip codes
"RTN","ECXALAB",55,0)
 S LMIP=+$G(^ECX(728,1,"LMIP"))
"RTN","ECXALAB",56,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXALAB",57,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXALAB",58,0)
 ;get run date in external format
"RTN","ECXALAB",59,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXALAB",60,0)
 ;setup acc. area array by name
"RTN","ECXALAB",61,0)
 S ACC="" F  S ACC=$O(ECXACC(ACC)) Q:ACC=""  D
"RTN","ECXALAB",62,0)
 .S ACCNM=$P(ECXACC(ACC),U,1),ACCAB=$P(ECXACC(ACC),U,2),ACC(ACCAB)=ACCNM_" ("_ACCAB_")"
"RTN","ECXALAB",63,0)
 ;get records within date range and accession area
"RTN","ECXALAB",64,0)
 S IEN="" F  S IEN=$O(^ECX(727.813,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXALAB",65,0)
 .S DATA=^ECX(727.813,IEN,0),DATE=$P(DATA,U,9),ACC=$P(DATA,U,11)
"RTN","ECXALAB",66,0)
 .;convert free text date to fm internal format date
"RTN","ECXALAB",67,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXALAB",68,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXALAB",69,0)
 .Q:'$D(ACC(ACC))
"RTN","ECXALAB",70,0)
 .S ACCNM=$P(ACC(ACC),U,1)
"RTN","ECXALAB",71,0)
 .S WKLD="",WKLD=$P(DATA,U,20) D
"RTN","ECXALAB",72,0)
 ..S WKLDNM="" I WKLD]"" S X=WKLD,DIC="^LAM(",DIC(0)="MX" D ^DIC S WKLDNM=$P(Y,U,2)
"RTN","ECXALAB",73,0)
 ..I WKLD="" S:LMIP=1 WKLD="Unknown" S:LMIP=0 WKLD="NA"
"RTN","ECXALAB",74,0)
 ..I WKLDNM="" S WKLDNM="Unknown "_WKLD
"RTN","ECXALAB",75,0)
 .S FILE=$P(DATA,U,18)
"RTN","ECXALAB",76,0)
 .Q:((FILE'=2)&(FILE'=67))
"RTN","ECXALAB",77,0)
 .I '$D(^TMP($J,"ECXAUD",ACCNM,WKLDNM)) S ^TMP($J,"ECXAUD",ACCNM,WKLDNM)=0_U_0_U_WKLD
"RTN","ECXALAB",78,0)
 .I FILE=2 S $P(^(WKLDNM),U,1)=$P(^TMP($J,"ECXAUD",ACCNM,WKLDNM),U,1)+1,CNT=CNT+1
"RTN","ECXALAB",79,0)
 .I FILE=67 S $P(^(WKLDNM),U,2)=$P(^TMP($J,"ECXAUD",ACCNM,WKLDNM),U,2)+1,CNT=CNT+1
"RTN","ECXALAB",80,0)
 .I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXALAB",81,0)
 ;print the report
"RTN","ECXALAB",82,0)
 D PRINT
"RTN","ECXALAB",83,0)
 D AUDIT^ECXKILL
"RTN","ECXALAB",84,0)
 Q
"RTN","ECXALAB",85,0)
 ;
"RTN","ECXALAB",86,0)
PRINT ;print the LAB audit report by accession area and test
"RTN","ECXALAB",87,0)
 N SS,LN,PG,QFLG,TOTP,TOTR,GTOT,DIV,DIVNM,ACCAB,DIR,DR,DIRUT,DTOUT,DUOUT
"RTN","ECXALAB",88,0)
 U IO
"RTN","ECXALAB",89,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXALAB",90,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",ACCAB="",DIV="",DIV=$O(ECXDIV(DIV)) D HEADER
"RTN","ECXALAB",91,0)
 F  S ACCAB=$O(ACC(ACCAB)) Q:ACCAB=""  D  Q:QFLG
"RTN","ECXALAB",92,0)
 .S ACCNM=ACC(ACCAB),GTOT("P")=0,GTOT("R")=0
"RTN","ECXALAB",93,0)
 .;write the accession area name
"RTN","ECXALAB",94,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,ACCNM
"RTN","ECXALAB",95,0)
 .I '$D(^TMP($J,"ECXAUD",ACCNM)) D  Q
"RTN","ECXALAB",96,0)
 ..W !,?3,"No data available for this Accession Area.",!!
"RTN","ECXALAB",97,0)
 .I $D(^TMP($J,"ECXAUD",ACCNM)) S WKLDNM="" F  S WKLDNM=$O(^TMP($J,"ECXAUD",ACCNM,WKLDNM)) Q:WKLDNM=""  D  Q:QFLG
"RTN","ECXALAB",98,0)
 ..S TOTP=$P(^TMP($J,"ECXAUD",ACCNM,WKLDNM),U,1),TOTR=$P(^(WKLDNM),U,2),WKLD=$P(^(WKLDNM),U,3)
"RTN","ECXALAB",99,0)
 ..S GTOT("P")=GTOT("P")+TOTP,GTOT("R")=GTOT("R")+TOTR
"RTN","ECXALAB",100,0)
 ..;write the test data
"RTN","ECXALAB",101,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,$E(WKLDNM,1,36),?40,WKLD,?56,$$RJ^XLFSTR(TOTP,5," "),?68,$$RJ^XLFSTR(TOTR,5," ")
"RTN","ECXALAB",102,0)
 .;write the accession area grandtotal
"RTN","ECXALAB",103,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,$E(LN,1,70)
"RTN","ECXALAB",104,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,"Total for "_ACCNM_":",?56,$$RJ^XLFSTR(GTOT("P"),5," "),?68,$$RJ^XLFSTR(GTOT("R"),5," "),!!
"RTN","ECXALAB",105,0)
 ;print the audit descriptive narrative
"RTN","ECXALAB",106,0)
 I $E(IOST)'="C" D
"RTN","ECXALAB",107,0)
 .W @IOF S PG=PG+1
"RTN","ECXALAB",108,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXALAB",109,0)
 .W !,"DSS Extract Log #:    "_ECXEXT
"RTN","ECXALAB",110,0)
 .W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXALAB",111,0)
 .W !,"Report Run Date/Time: "_ECXRUN,?68,"Page: ",PG
"RTN","ECXALAB",112,0)
 .W !!,LN,!!
"RTN","ECXALAB",113,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXALAB",114,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXALAB",115,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXALAB",116,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXALAB",117,0)
 Q
"RTN","ECXALAB",118,0)
 ;
"RTN","ECXALAB",119,0)
HEADER ;header and page control
"RTN","ECXALAB",120,0)
 N JJ,SS
"RTN","ECXALAB",121,0)
 I $E(IOST)="C" D
"RTN","ECXALAB",122,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXALAB",123,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXALAB",124,0)
 Q:QFLG
"RTN","ECXALAB",125,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXALAB",126,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXALAB",127,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXALAB",128,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXALAB",129,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXALAB",130,0)
 W !,"DSS Site:             "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")",?68,"Page: "_PG
"RTN","ECXALAB",131,0)
 W !!,"Accession Area (Feeder Location)",?40,"LMIP",?56,"# of Tests",?68,"# of Tests"
"RTN","ECXALAB",132,0)
 W !,?3,"Procedure",?40,"Code",?56,"(Patients)",?68,"(Referrals)"
"RTN","ECXALAB",133,0)
 W !,LN,!
"RTN","ECXALAB",134,0)
 Q
"RTN","ECXAMOV")
0^15^B64141382
"RTN","ECXAMOV",1,0)
ECXAMOV ;ALB/JAP - MOV Extract Audit Report ;Oct 10, 1997
"RTN","ECXAMOV",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXAMOV",3,0)
 ;
"RTN","ECXAMOV",4,0)
EN ;entry point for MOV extract audit report
"RTN","ECXAMOV",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR
"RTN","ECXAMOV",6,0)
 S ECXERR=0
"RTN","ECXAMOV",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAMOV",8,0)
 S ECXHEAD="MOV",ECXAUD=0
"RTN","ECXAMOV",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAMOV",10,0)
 ;select extract
"RTN","ECXAMOV",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAMOV",12,0)
 Q:ECXERR
"RTN","ECXAMOV",13,0)
 ;determine if facility is multidivisional
"RTN","ECXAMOV",14,0)
 S DIC="^DG(43,",DA=1,DR="11;",DIQ="ECX",DIQ(0)="I" D EN^DIQ1
"RTN","ECXAMOV",15,0)
 I +ECX(43,1,11,"I")=0 S ECXALL=1
"RTN","ECXAMOV",16,0)
 I +ECX(43,1,11,"I")=1 D
"RTN","ECXAMOV",17,0)
 .W !!
"RTN","ECXAMOV",18,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all divisions"
"RTN","ECXAMOV",19,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXAMOV",20,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXAMOV",21,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXAMOV",22,0)
 .S ECXALL=Y
"RTN","ECXAMOV",23,0)
 I ECXERR=1 D  Q
"RTN","ECXAMOV",24,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAMOV",25,0)
 .D AUDIT^ECXKILL
"RTN","ECXAMOV",26,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXAMOV",27,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAMOV",28,0)
 D MOV^ECXDVSN(.ECXDIV,ECXALL,ECXSTART,ECXEND,.ECXERR)
"RTN","ECXAMOV",29,0)
 I ECXERR=1 D  Q
"RTN","ECXAMOV",30,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAMOV",31,0)
 .D AUDIT^ECXKILL
"RTN","ECXAMOV",32,0)
 ;determine output device and queue if requested
"RTN","ECXAMOV",33,0)
 W !
"RTN","ECXAMOV",34,0)
 S ECXPGM="PROCESS^ECXAMOV",ECXDESC="MOV Extract Audit Report"
"RTN","ECXAMOV",35,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXAMOV",36,0)
 W !!,?5,"The format of this report requires a page or screen",!,?5,"width of 132 characters.",!
"RTN","ECXAMOV",37,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAMOV",38,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAMOV",39,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAMOV",40,0)
 .D AUDIT^ECXKILL
"RTN","ECXAMOV",41,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAMOV",42,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAMOV",43,0)
 .D PROCESS^ECXAMOV
"RTN","ECXAMOV",44,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAMOV",45,0)
 D HOME^%ZIS
"RTN","ECXAMOV",46,0)
 D AUDIT^ECXKILL
"RTN","ECXAMOV",47,0)
 Q
"RTN","ECXAMOV",48,0)
 ;
"RTN","ECXAMOV",49,0)
PROCESS ;process data in file #727.808
"RTN","ECXAMOV",50,0)
 N X,Y,W,JJ,DATE,DATA,DIV,IEN,MOV,TL,ORDER,SORD,GTOT,STOT,WARD,TMOV,QQFLG,CNT,LINETOT
"RTN","ECXAMOV",51,0)
 K ^TMP($J,"ECXWARD"),^TMP($J,"ECXORDER")
"RTN","ECXAMOV",52,0)
 S (CNT,QQFLG)=0
"RTN","ECXAMOV",53,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAMOV",54,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAMOV",55,0)
 ;get run date in external format
"RTN","ECXAMOV",56,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAMOV",57,0)
 ;get ward info in ^tmp($j,"ecxward" and ^tmp($j,"ecxorder"
"RTN","ECXAMOV",58,0)
 D WARDS^ECXUTLA(ECXALL,.ECXDIV)
"RTN","ECXAMOV",59,0)
 ;setup up ^tmp($j,"mov", for legend
"RTN","ECXAMOV",60,0)
 S JJ=0 F  S JJ=$O(^DG(405.2,JJ)) Q:+JJ<1  S MOV=JJ D
"RTN","ECXAMOV",61,0)
 .S DATA=^DG(405.2,JJ,0),NM=$P(DATA,U,1),TYPE=$P(DATA,U,2)
"RTN","ECXAMOV",62,0)
 .S ^TMP($J,"MOV",TYPE,JJ)=NM
"RTN","ECXAMOV",63,0)
 F JJ=1:1:MOV S $P(TL,U,JJ)=0
"RTN","ECXAMOV",64,0)
 S W="" F  S W=$O(^TMP($J,"ECXWARD",W)) Q:W=""  D
"RTN","ECXAMOV",65,0)
 .S DIV=$P(^TMP($J,"ECXWARD",W),U,3) I '$D(GTOT(DIV)) F JJ=1:1:MOV S $P(GTOT(DIV),U,JJ)=0
"RTN","ECXAMOV",66,0)
 .S ^TMP($J,"TL",W)=TL
"RTN","ECXAMOV",67,0)
 .S ORDER="" D
"RTN","ECXAMOV",68,0)
 ..F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  I $D(^(ORDER,1)) D
"RTN","ECXAMOV",69,0)
 ...F JJ=1:1:MOV S $P(STOT(DIV,ORDER),U,JJ)=0
"RTN","ECXAMOV",70,0)
 ;get records in date range and ward set
"RTN","ECXAMOV",71,0)
 S IEN="" F  S IEN=$O(^ECX(727.808,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAMOV",72,0)
 .S DATA=^ECX(727.808,IEN,0),DATE=$P(DATA,U,9),WARD=$P(DATA,U,15),TMOV=$P(DATA,U,19)
"RTN","ECXAMOV",73,0)
 .;convert free text date to fm internal format date
"RTN","ECXAMOV",74,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAMOV",75,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAMOV",76,0)
 .;if ward is among those selected, then tally movement data
"RTN","ECXAMOV",77,0)
 .I $D(^TMP($J,"TL",WARD)) D
"RTN","ECXAMOV",78,0)
 ..S $P(^TMP($J,"TL",WARD),U,TMOV)=$P(^TMP($J,"TL",WARD),U,TMOV)+1
"RTN","ECXAMOV",79,0)
 ..S ORDER=$P(^TMP($J,"ECXWARD",WARD),U,1),DIV=$P(^(WARD),U,3),$P(GTOT(DIV),U,TMOV)=$P(GTOT(DIV),U,TMOV)+1
"RTN","ECXAMOV",80,0)
 ..S SORD=ORDER-.01,SORD=$O(STOT(DIV,SORD)) I +SORD S $P(STOT(DIV,SORD),U,TMOV)=$P(STOT(DIV,SORD),U,TMOV)+1
"RTN","ECXAMOV",81,0)
 ..S CNT=CNT+1 I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXAMOV",82,0)
 ;after all the extract records are processed, set totals into ^tmp($j,"ecxorder"
"RTN","ECXAMOV",83,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAMOV",84,0)
 S W="" F  S W=$O(^TMP($J,"TL",W)) Q:W=""  S TL(W)=^(W) D
"RTN","ECXAMOV",85,0)
 .S ORDER=$P(^TMP($J,"ECXWARD",W),U,1),DIV=$P(^(W),U,3)
"RTN","ECXAMOV",86,0)
 .S LINETOT=0 F JJ=1:1:MOV S $P(^TMP($J,"ECXORDER",DIV,ORDER),U,JJ+2)=$P(TL(W),U,JJ),LINETOT=LINETOT+$P(TL(W),U,JJ)
"RTN","ECXAMOV",87,0)
 .K TL(W)
"RTN","ECXAMOV",88,0)
 .;don't keep inactive wards unless there is movement data
"RTN","ECXAMOV",89,0)
 .I ORDER>999990,LINETOT=0 K ^TMP($J,"ECXORDER",DIV,ORDER)
"RTN","ECXAMOV",90,0)
 .I $D(^TMP($J,"ECXORDER",DIV,ORDER,1)) D
"RTN","ECXAMOV",91,0)
 ..;don't do group total on inactive/unordered wards
"RTN","ECXAMOV",92,0)
 ..I ORDER>999990 K ^TMP($J,"ECXORDER",DIV,ORDER,1) Q
"RTN","ECXAMOV",93,0)
 ..F JJ=1:1:MOV S $P(^TMP($J,"ECXORDER",DIV,ORDER,1),U,JJ+2)=$P(STOT(DIV,ORDER),U,JJ)
"RTN","ECXAMOV",94,0)
 D PRINT
"RTN","ECXAMOV",95,0)
 D AUDIT^ECXKILL
"RTN","ECXAMOV",96,0)
 Q
"RTN","ECXAMOV",97,0)
 ;
"RTN","ECXAMOV",98,0)
PRINT ;print the movement data by division and ward order
"RTN","ECXAMOV",99,0)
 N JJ,SS,LN,NM,TNM,PG,QFLG,WRDNM,WRDTOT,GRPNM,GRPTOT,DIVTOT,DATA,DATA1,TYPE,DIC,DA,DR,DIR,DIRUT,DTOUT,DUOUT,W1,W2
"RTN","ECXAMOV",100,0)
 U IO
"RTN","ECXAMOV",101,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAMOV",102,0)
 S (QFLG,PG)=0,$P(LN,"-",132)="",DIV=""
"RTN","ECXAMOV",103,0)
 F  S DIV=$O(GTOT(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXAMOV",104,0)
 .F TYPE=2,3 S TNM=$S(TYPE=2:"Transfer",TYPE=3:"Discharge",1:"") D HEADER Q:QFLG  S MOV="",DIVTOT=0 D  Q:QFLG
"RTN","ECXAMOV",105,0)
 ..F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  S DIVTOT=DIVTOT+$P(GTOT(DIV),U,MOV)
"RTN","ECXAMOV",106,0)
 ..I DIVTOT=0 D  Q
"RTN","ECXAMOV",107,0)
 ...W !!,"No "_TNM_" data extracted for this medical center division.",!
"RTN","ECXAMOV",108,0)
 ..S ORDER="" F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  D  Q:QFLG
"RTN","ECXAMOV",109,0)
 ...S DATA=^TMP($J,"ECXORDER",DIV,ORDER) K DATA1 I $D(^(ORDER,1)) S DATA1=^(1)
"RTN","ECXAMOV",110,0)
 ...S WRDNM=$P(DATA,U,2)
"RTN","ECXAMOV",111,0)
 ...I TYPE=3 S WRDNM=$P(WRDNM,"<",1),WRDNM=$E(WRDNM,1,14)
"RTN","ECXAMOV",112,0)
 ...I TYPE=2 D
"RTN","ECXAMOV",113,0)
 ....S W1=$P(WRDNM,"<",1),W2=$P(WRDNM,"<",2)
"RTN","ECXAMOV",114,0)
 ....S:W2="" WRDNM=$E(W1,1,14) S:W2]"" WRDNM=$$LJ^XLFSTR($E(W1,1,12),12," ")_" <"_W2
"RTN","ECXAMOV",115,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",116,0)
 ...W !,WRDNM S TAB=$S(TYPE=2:20,1:10),LINETOT=0
"RTN","ECXAMOV",117,0)
 ...F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  D
"RTN","ECXAMOV",118,0)
 ....S WRDTOT=$P(DATA,U,2+MOV),TAB=TAB+6 W ?TAB,$$RJ^XLFSTR(WRDTOT,5," ") S LINETOT=LINETOT+WRDTOT
"RTN","ECXAMOV",119,0)
 ...S TAB=TAB+8 W ?TAB,$$RJ^XLFSTR(LINETOT,5," ")
"RTN","ECXAMOV",120,0)
 ...;if data1 exists, then this is the end of a ward group so print group totals
"RTN","ECXAMOV",121,0)
 ...I $G(DATA1) D  Q:QFLG
"RTN","ECXAMOV",122,0)
 ....S GRPNM=$P(DATA1,U,2) D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",123,0)
 ....W !,?18,$E(LN,1,113)
"RTN","ECXAMOV",124,0)
 ....D:($Y+3>IOSL) HEADER Q:QFLG  W !,"Ward group "_GRPNM_" subtotals:",!
"RTN","ECXAMOV",125,0)
 ....D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",126,0)
 ....S TAB=$S(TYPE=2:20,1:10),LINETOT=0
"RTN","ECXAMOV",127,0)
 ....F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  D
"RTN","ECXAMOV",128,0)
 .....S GRPTOT=$P(DATA1,U,2+MOV),TAB=TAB+6 W ?TAB,$$RJ^XLFSTR(GRPTOT,5," ") S LINETOT=LINETOT+GRPTOT
"RTN","ECXAMOV",129,0)
 ....S TAB=TAB+8 W ?TAB,$$RJ^XLFSTR(LINETOT,5," ")
"RTN","ECXAMOV",130,0)
 ....D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",131,0)
 ....W !!
"RTN","ECXAMOV",132,0)
 ..Q:QFLG
"RTN","ECXAMOV",133,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Division "_$P(ECXDIV(DIV),U,2)_" Grand Totals:",!
"RTN","ECXAMOV",134,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",135,0)
 ..S TAB=$S(TYPE=2:20,1:10),LINETOT=0
"RTN","ECXAMOV",136,0)
 ..F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  D
"RTN","ECXAMOV",137,0)
 ...S GTOT=$P(GTOT(DIV),U,MOV),TAB=TAB+6 W ?TAB,$$RJ^XLFSTR(GTOT,5," ") S LINETOT=LINETOT+GTOT
"RTN","ECXAMOV",138,0)
 ..S TAB=TAB+8 W ?TAB,$$RJ^XLFSTR(LINETOT,5," ")
"RTN","ECXAMOV",139,0)
 ..I $E(IOST)'="C" D LEGEND
"RTN","ECXAMOV",140,0)
 I $E(IOST)'="C" D
"RTN","ECXAMOV",141,0)
 .W @IOF S PG=PG+1
"RTN","ECXAMOV",142,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAMOV",143,0)
 .W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAMOV",144,0)
 .W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAMOV",145,0)
 .W !,"Report Run Date/Time:    "_ECXRUN,?120,"Page: ",PG
"RTN","ECXAMOV",146,0)
 .W !!,LN,!!
"RTN","ECXAMOV",147,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAMOV",148,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAMOV",149,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAMOV",150,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAMOV",151,0)
 Q
"RTN","ECXAMOV",152,0)
 ;
"RTN","ECXAMOV",153,0)
HEADER ;header and page control
"RTN","ECXAMOV",154,0)
 N JJ,SS,TAB,DSSID
"RTN","ECXAMOV",155,0)
 I $E(IOST)="C" D
"RTN","ECXAMOV",156,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAMOV",157,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAMOV",158,0)
 Q:QFLG
"RTN","ECXAMOV",159,0)
 S DSSID=$P(ECXDIV(DIV),U,6)
"RTN","ECXAMOV",160,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAMOV",161,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAMOV",162,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAMOV",163,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAMOV",164,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXAMOV",165,0)
 I DSSID="" W !,"Medical Center Division: "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")",?120,"Page: "_PG
"RTN","ECXAMOV",166,0)
 I DSSID]"" W !,"Medical Center Division: "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")"_" <"_DSSID_">",?120,"Page: "_PG
"RTN","ECXAMOV",167,0)
 S TAB=$S(TYPE=2:28,1:20)
"RTN","ECXAMOV",168,0)
 I TYPE=2 W !!,"Ward <DSS Dept.>",?TAB,"MAS Movement ("_TNM_") Types",!
"RTN","ECXAMOV",169,0)
 I TYPE=3 W !!,"Ward",?TAB,"MAS Movement ("_TNM_") Types",!
"RTN","ECXAMOV",170,0)
 S MOV="",TAB=$S(TYPE=2:20,1:10)
"RTN","ECXAMOV",171,0)
 F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  S TAB=TAB+6 W ?TAB,$$RJ^XLFSTR(MOV,5," ")
"RTN","ECXAMOV",172,0)
 S TAB=TAB+8 W ?TAB,$$RJ^XLFSTR("Total",5," ")
"RTN","ECXAMOV",173,0)
 W !,LN,!
"RTN","ECXAMOV",174,0)
 Q
"RTN","ECXAMOV",175,0)
 ;
"RTN","ECXAMOV",176,0)
LEGEND ;print legend for each report type
"RTN","ECXAMOV",177,0)
 N MOV,MOVNM
"RTN","ECXAMOV",178,0)
 D:($Y+10>IOSL) HEADER
"RTN","ECXAMOV",179,0)
 W !!,TNM_" Movements Legend --"
"RTN","ECXAMOV",180,0)
 S MOV="" F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  D  Q:MOV=""
"RTN","ECXAMOV",181,0)
 .S MOVNM=^TMP($J,"MOV",TYPE,MOV) W !,MOV,?4,"= ",$E(MOVNM,1,32)
"RTN","ECXAMOV",182,0)
 .S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  S MOVNM=^(MOV) W ?41,MOV,?44,"= ",$E(MOVNM,1,32)
"RTN","ECXAMOV",183,0)
 .S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  S MOVNM=^(MOV) W ?81,MOV,?84,"= ",$E(MOVNM,1,32)
"RTN","ECXAMOV",184,0)
 Q
"RTN","ECXANUR")
0^16^B39095503
"RTN","ECXANUR",1,0)
ECXANUR ;ALB/JAP - NUR Extract Audit Report ;Oct 15, 1997
"RTN","ECXANUR",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXANUR",3,0)
 ;
"RTN","ECXANUR",4,0)
EN ;entry point for NUR extract audit report
"RTN","ECXANUR",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR
"RTN","ECXANUR",6,0)
 S ECXERR=0
"RTN","ECXANUR",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXANUR",8,0)
 S ECXHEAD="NUR",ECXAUD=0
"RTN","ECXANUR",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXANUR",10,0)
 ;select extract
"RTN","ECXANUR",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXANUR",12,0)
 Q:ECXERR
"RTN","ECXANUR",13,0)
 ;determine if facility is multidivisional
"RTN","ECXANUR",14,0)
 S DIC="^DG(43,",DA=1,DR="11;",DIQ="ECX",DIQ(0)="I" D EN^DIQ1
"RTN","ECXANUR",15,0)
 I +ECX(43,1,11,"I")=0 S ECXALL=1
"RTN","ECXANUR",16,0)
 I +ECX(43,1,11,"I")=1 D
"RTN","ECXANUR",17,0)
 .W !!
"RTN","ECXANUR",18,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all divisions"
"RTN","ECXANUR",19,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXANUR",20,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXANUR",21,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXANUR",22,0)
 .S ECXALL=Y
"RTN","ECXANUR",23,0)
 I ECXERR=1 D  Q
"RTN","ECXANUR",24,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXANUR",25,0)
 .D AUDIT^ECXKILL
"RTN","ECXANUR",26,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXANUR",27,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXANUR",28,0)
 D NUR^ECXDVSN1(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXANUR",29,0)
 I ECXERR=1 D  Q
"RTN","ECXANUR",30,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXANUR",31,0)
 .D AUDIT^ECXKILL
"RTN","ECXANUR",32,0)
 ;determine output device and queue if requested
"RTN","ECXANUR",33,0)
 W !
"RTN","ECXANUR",34,0)
 S ECXPGM="PROCESS^ECXANUR",ECXDESC="NUR Extract Audit Report"
"RTN","ECXANUR",35,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXANUR",36,0)
 W !
"RTN","ECXANUR",37,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXANUR",38,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXANUR",39,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXANUR",40,0)
 .D AUDIT^ECXKILL
"RTN","ECXANUR",41,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXANUR",42,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXANUR",43,0)
 .D PROCESS^ECXANUR
"RTN","ECXANUR",44,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXANUR",45,0)
 D HOME^%ZIS
"RTN","ECXANUR",46,0)
 D AUDIT^ECXKILL
"RTN","ECXANUR",47,0)
 Q
"RTN","ECXANUR",48,0)
 ;
"RTN","ECXANUR",49,0)
PROCESS ;process data in file #727.805
"RTN","ECXANUR",50,0)
 N X,Y,W,DATA,DATE,DIV,IEN,LOC,PAT,BD,BDS,QQFLG,CNT
"RTN","ECXANUR",51,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXANUR",52,0)
 S (CNT,QQFLG)=0
"RTN","ECXANUR",53,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXANUR",54,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXANUR",55,0)
 ;get run date in external format
"RTN","ECXANUR",56,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXANUR",57,0)
 ;get records in date range and ward set
"RTN","ECXANUR",58,0)
 S IEN="" F  S IEN=$O(^ECX(727.805,"AC",ECXEXT,IEN)) Q:IEN=""  D
"RTN","ECXANUR",59,0)
 .S DATA=^ECX(727.805,IEN,0),DATE=$P(DATA,U,9),LOC=$P(DATA,U,13)
"RTN","ECXANUR",60,0)
 .;convert free text date to fm internal format date
"RTN","ECXANUR",61,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXANUR",62,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXANUR",63,0)
 .;if ward is among those selected, then tally nursing data
"RTN","ECXANUR",64,0)
 .I $D(ECXDIV(LOC)) D
"RTN","ECXANUR",65,0)
 ..S DIV="",DIV=$O(ECXDIV(LOC,DIV))
"RTN","ECXANUR",66,0)
 ..S PAT=$P(DATA,U,10),BD=$P(DATA,U,14)
"RTN","ECXANUR",67,0)
 ..I '$D(^TMP($J,"ECXAUD",DIV,LOC,BD,PAT)) S ^TMP($J,"ECXAUD",DIV,LOC,BD,PAT)=0
"RTN","ECXANUR",68,0)
 ..S ^(PAT)=^TMP($J,"ECXAUD",DIV,LOC,BD,PAT)+1,CNT=CNT+1
"RTN","ECXANUR",69,0)
 ..I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXANUR",70,0)
 ;after all extract records processed, get bedsection names for printing
"RTN","ECXANUR",71,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXANUR",72,0)
 S IEN=0 F  S IEN=$O(^NURSF(213.3,IEN)) Q:+IEN=0  S BDS(IEN)=$P(^NURSF(213.3,IEN,0),U,1)
"RTN","ECXANUR",73,0)
 ;print the report
"RTN","ECXANUR",74,0)
 D PRINT
"RTN","ECXANUR",75,0)
 D AUDIT^ECXKILL
"RTN","ECXANUR",76,0)
 Q
"RTN","ECXANUR",77,0)
 ;
"RTN","ECXANUR",78,0)
PRINT ;print the nursing classification data by division and location order
"RTN","ECXANUR",79,0)
 N JJ,SS,LN,NM,BDNM,NLNM,DIV,DIVNM,LOC,PG,QFLG,BTOT,GTOT,STOT,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXANUR",80,0)
 U IO
"RTN","ECXANUR",81,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXANUR",82,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXANUR",83,0)
 F  S DIV=$O(ECXDIV("D",DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXANUR",84,0)
 .S DIVNM=$P(ECXDIV("D",DIV),U,2)_" ("_$P(ECXDIV("D",DIV),U,3)_")" D HEADER
"RTN","ECXANUR",85,0)
 .I '$D(^TMP($J,"ECXAUD",DIV)) D  Q
"RTN","ECXANUR",86,0)
 ..W !!,?3,"No data available for this division.",!!
"RTN","ECXANUR",87,0)
 .F JJ=1:1:5 S GTOT(JJ)=0,GTOT("T")=0
"RTN","ECXANUR",88,0)
 .I $D(^TMP($J,"ECXAUD",DIV)) S LOC="" F  S LOC=$O(^TMP($J,"ECXAUD",DIV,LOC)) Q:LOC=""  D  Q:QFLG
"RTN","ECXANUR",89,0)
 ..F JJ=1:1:5 S STOT(JJ)=0,STOT("T")=0
"RTN","ECXANUR",90,0)
 ..S NLNM=$P(ECXDIV(LOC,DIV),U,2)_" ("_LOC_")",BD=""
"RTN","ECXANUR",91,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,NLNM
"RTN","ECXANUR",92,0)
 ..F  S BD=$O(^TMP($J,"ECXAUD",DIV,LOC,BD)) Q:BD=""  D  Q:QFLG
"RTN","ECXANUR",93,0)
 ...F PAT=1:1:5 S TOT(PAT)=+$G(^TMP($J,"ECXAUD",DIV,LOC,BD,PAT))
"RTN","ECXANUR",94,0)
 ...S BDNM=BDS(BD),BDNM=$E(BDNM,1,22)_" ("_BD_")",BTOT=0 F JJ=1:1:5 S BTOT=BTOT+TOT(JJ)
"RTN","ECXANUR",95,0)
 ...;write the bedsection totals
"RTN","ECXANUR",96,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXANUR",97,0)
 ...W !,?3,BDNM,?33,$$RJ^XLFSTR(TOT(1),5," "),?41,$$RJ^XLFSTR(TOT(2),5," "),?50,$$RJ^XLFSTR(TOT(3),5," "),?57,$$RJ^XLFSTR(TOT(4),5," "),?64,$$RJ^XLFSTR(TOT(5),5," "),?74,$$RJ^XLFSTR(BTOT,5," ")
"RTN","ECXANUR",98,0)
 ...;increment grand total and subtotal
"RTN","ECXANUR",99,0)
 ...F JJ=1:1:5 S GTOT(JJ)=GTOT(JJ)+TOT(JJ),STOT(JJ)=STOT(JJ)+TOT(JJ)
"RTN","ECXANUR",100,0)
 ...S GTOT("T")=GTOT("T")+BTOT,STOT("T")=STOT("T")+BTOT
"RTN","ECXANUR",101,0)
 ..;write the location subtotals
"RTN","ECXANUR",102,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?33,$E(LN,1,46)
"RTN","ECXANUR",103,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,"Sub-totals for Location ("_LOC_"):"
"RTN","ECXANUR",104,0)
 ..W ?33,$$RJ^XLFSTR(STOT(1),5," "),?41,$$RJ^XLFSTR(STOT(2),5," "),?50,$$RJ^XLFSTR(STOT(3),5," "),?57,$$RJ^XLFSTR(STOT(4),5," "),?64,$$RJ^XLFSTR(STOT(5),5," "),?74,$$RJ^XLFSTR(STOT("T"),5," ")
"RTN","ECXANUR",105,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !!
"RTN","ECXANUR",106,0)
 .;write the division grand totals
"RTN","ECXANUR",107,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Grand Totals for "_DIVNM_":"
"RTN","ECXANUR",108,0)
 .W ?33,$$RJ^XLFSTR(GTOT(1),5," "),?41,$$RJ^XLFSTR(GTOT(2),5," "),?50,$$RJ^XLFSTR(GTOT(3),5," "),?57,$$RJ^XLFSTR(GTOT(4),5," "),?64,$$RJ^XLFSTR(GTOT(5),5," "),?74,$$RJ^XLFSTR(GTOT("T"),5," ")
"RTN","ECXANUR",109,0)
 ;print the audit descriptive narrative
"RTN","ECXANUR",110,0)
 I $E(IOST)'="C" D
"RTN","ECXANUR",111,0)
 .W @IOF S PG=PG+1
"RTN","ECXANUR",112,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXANUR",113,0)
 .W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXANUR",114,0)
 .W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXANUR",115,0)
 .W !,"Report Run Date/Time:    "_ECXRUN,?68,"Page: ",PG
"RTN","ECXANUR",116,0)
 .W !!,LN,!!
"RTN","ECXANUR",117,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXANUR",118,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXANUR",119,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXANUR",120,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXANUR",121,0)
 Q
"RTN","ECXANUR",122,0)
 ;
"RTN","ECXANUR",123,0)
HEADER ;header and page control
"RTN","ECXANUR",124,0)
 N JJ,SS
"RTN","ECXANUR",125,0)
 I $E(IOST)="C" D
"RTN","ECXANUR",126,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXANUR",127,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXANUR",128,0)
 Q:QFLG
"RTN","ECXANUR",129,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXANUR",130,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXANUR",131,0)
 W !,"DSS Extract Log #:       "_ECXARRAY("EXTRACT")
"RTN","ECXANUR",132,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXANUR",133,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXANUR",134,0)
 W !,"Medical Center Division: "_$P(ECXDIV("D",DIV),U,2)_" ("_$P(ECXDIV("D",DIV),U,3)_")",?68,"Page: "_PG
"RTN","ECXANUR",135,0)
 W !!,"Nursing Location",?36,"Patients per Acuity Level (Category)"
"RTN","ECXANUR",136,0)
 W !,?3,"Nursing Bedsection",?37,"I",?44,"II",?52,"III",?60,"IV",?68,"V",?74,"Total"
"RTN","ECXANUR",137,0)
 W !,LN,!
"RTN","ECXANUR",138,0)
 Q
"RTN","ECXAPAS")
0^17^B14597256
"RTN","ECXAPAS",1,0)
ECXAPAS ;ALB/JAP - PAS Extract Audit Report ;Oct 16, 1997
"RTN","ECXAPAS",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXAPAS",3,0)
 ;
"RTN","ECXAPAS",4,0)
EN ;entry point for PAS extract audit report
"RTN","ECXAPAS",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR
"RTN","ECXAPAS",6,0)
 S ECXERR=0
"RTN","ECXAPAS",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAPAS",8,0)
 S ECXHEAD="PAS",ECXAUD=0
"RTN","ECXAPAS",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAPAS",10,0)
 ;select extract
"RTN","ECXAPAS",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAPAS",12,0)
 Q:ECXERR
"RTN","ECXAPAS",13,0)
 ;currently, quasar does not accommodate multi-divisional sites
"RTN","ECXAPAS",14,0)
 S ECXALL=1
"RTN","ECXAPAS",15,0)
 D PAS^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXAPAS",16,0)
 I ECXERR=1 D  Q
"RTN","ECXAPAS",17,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAPAS",18,0)
 .D AUDIT^ECXKILL
"RTN","ECXAPAS",19,0)
 ;determine output device and queue if requested
"RTN","ECXAPAS",20,0)
 W !
"RTN","ECXAPAS",21,0)
 S ECXPGM="PROCESS^ECXAPAS",ECXDESC="PAS Extract Audit Report"
"RTN","ECXAPAS",22,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXAPAS",23,0)
 W !
"RTN","ECXAPAS",24,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAPAS",25,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAPAS",26,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAPAS",27,0)
 .D AUDIT^ECXKILL
"RTN","ECXAPAS",28,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAPAS",29,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAPAS",30,0)
 .D PROCESS^ECXAPAS
"RTN","ECXAPAS",31,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAPAS",32,0)
 D HOME^%ZIS
"RTN","ECXAPAS",33,0)
 D AUDIT^ECXKILL
"RTN","ECXAPAS",34,0)
 Q
"RTN","ECXAPAS",35,0)
 ;
"RTN","ECXAPAS",36,0)
PROCESS ;process data in file #727.823
"RTN","ECXAPAS",37,0)
 N X,Y,W,DATA,DATE,DIV,IEN,QQFLG,CNT
"RTN","ECXAPAS",38,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXAPAS",39,0)
 S (CNT,QQFLG)=0
"RTN","ECXAPAS",40,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAPAS",41,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAPAS",42,0)
 ;get run date in external format
"RTN","ECXAPAS",43,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAPAS",44,0)
 ;get extract records in date range
"RTN","ECXAPAS",45,0)
 S IEN="" F  S IEN=$O(^ECX(727.823,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAPAS",46,0)
 .S DATA=^ECX(727.823,IEN,0),DATE=$P(DATA,U,9),DIV=$P(DATA,U,4)
"RTN","ECXAPAS",47,0)
 .;currently the 4th piece of extract record is always null for pai
"RTN","ECXAPAS",48,0)
 .S:DIV="" DIV=1
"RTN","ECXAPAS",49,0)
 .;convert free text date to fm internal format date
"RTN","ECXAPAS",50,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAPAS",51,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAPAS",52,0)
 .I $D(ECXDIV(DIV)) D
"RTN","ECXAPAS",53,0)
 ..I '$D(^TMP($J,"ECXAUD",DIV)) S ^TMP($J,"ECXAUD",DIV)=0
"RTN","ECXAPAS",54,0)
 ..S ^(DIV)=^TMP($J,"ECXAUD",DIV)+1,CNT=CNT+1
"RTN","ECXAPAS",55,0)
 ..I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXAPAS",56,0)
 ;print the report
"RTN","ECXAPAS",57,0)
 D PRINT
"RTN","ECXAPAS",58,0)
 D AUDIT^ECXKILL
"RTN","ECXAPAS",59,0)
 Q
"RTN","ECXAPAS",60,0)
 ;
"RTN","ECXAPAS",61,0)
PRINT ;print pai data by site
"RTN","ECXAPAS",62,0)
 N JJ,SS,LN,P,DIV,DIVNM,GTOT,PG,QFLG,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXAPAS",63,0)
 U IO
"RTN","ECXAPAS",64,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXAPAS",65,0)
 F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXAPAS",66,0)
 .S DIVNM=$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")" D HEADER
"RTN","ECXAPAS",67,0)
 .S GTOT=$G(^TMP($J,"ECXAUD",DIV))
"RTN","ECXAPAS",68,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAPAS",69,0)
 .W !!,"Total Patient Assessments extracted for date range: "_GTOT
"RTN","ECXAPAS",70,0)
 I $E(IOST)'="C" D
"RTN","ECXAPAS",71,0)
 .W @IOF S PG=PG+1
"RTN","ECXAPAS",72,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAPAS",73,0)
 .W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAPAS",74,0)
 .W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAPAS",75,0)
 .W !,"Report Run Date/Time:    "_ECXRUN,?68,"Page: ",PG
"RTN","ECXAPAS",76,0)
 .W !!,LN,!!
"RTN","ECXAPAS",77,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAPAS",78,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAPAS",79,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPAS",80,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAPAS",81,0)
 Q
"RTN","ECXAPAS",82,0)
 ;
"RTN","ECXAPAS",83,0)
HEADER ;header and page control
"RTN","ECXAPAS",84,0)
 N JJ,SS
"RTN","ECXAPAS",85,0)
 I $E(IOST)="C" D
"RTN","ECXAPAS",86,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPAS",87,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAPAS",88,0)
 Q:QFLG
"RTN","ECXAPAS",89,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAPAS",90,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAPAS",91,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXAPAS",92,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAPAS",93,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXAPAS",94,0)
 W !,"DSS Site:             "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")",?68,"Page: "_PG
"RTN","ECXAPAS",95,0)
 W !,LN,!
"RTN","ECXAPAS",96,0)
 Q
"RTN","ECXARAD")
0^18^B36956828
"RTN","ECXARAD",1,0)
ECXARAD ;ALB/JAP - RAD Extract Audit Report ;Oct 16, 1997
"RTN","ECXARAD",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXARAD",3,0)
 ;
"RTN","ECXARAD",4,0)
EN ;entry point for RAD extract audit report
"RTN","ECXARAD",5,0)
 ;select extract
"RTN","ECXARAD",6,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,SITES,ECX
"RTN","ECXARAD",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXARAD",8,0)
 S ECXERR=0
"RTN","ECXARAD",9,0)
 S ECXHEAD="RAD",ECXAUD=0
"RTN","ECXARAD",10,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXARAD",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXARAD",12,0)
 Q:ECXERR
"RTN","ECXARAD",13,0)
 ;determine if facility is multidivisional
"RTN","ECXARAD",14,0)
 K ECX D FILE^DID(79,,"ENTRIES","ECX") S SITES=ECX("ENTRIES") K ECX
"RTN","ECXARAD",15,0)
 I SITES=1 S ECXALL=1
"RTN","ECXARAD",16,0)
 I SITES>1 D
"RTN","ECXARAD",17,0)
 .W !!
"RTN","ECXARAD",18,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all divisions"
"RTN","ECXARAD",19,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXARAD",20,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXARAD",21,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXARAD",22,0)
 .S ECXALL=Y
"RTN","ECXARAD",23,0)
 I ECXERR=1 D  Q
"RTN","ECXARAD",24,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXARAD",25,0)
 .D AUDIT^ECXKILL
"RTN","ECXARAD",26,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXARAD",27,0)
 W !
"RTN","ECXARAD",28,0)
 S ECXSTART=ECXARRAY("START"),ECXEND=ECXARRAY("END")
"RTN","ECXARAD",29,0)
 D RAD^ECXDVSN2(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXARAD",30,0)
 I ECXERR=1 D  Q
"RTN","ECXARAD",31,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXARAD",32,0)
 .D AUDIT^ECXKILL
"RTN","ECXARAD",33,0)
 ;determine output device and queue if requested
"RTN","ECXARAD",34,0)
 S ECXPGM="PROCESS^ECXARAD",ECXDESC="RAD Extract Audit Report"
"RTN","ECXARAD",35,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXARAD",36,0)
 W !
"RTN","ECXARAD",37,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXARAD",38,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXARAD",39,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXARAD",40,0)
 .D AUDIT^ECXKILL
"RTN","ECXARAD",41,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXARAD",42,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXARAD",43,0)
 .D PROCESS^ECXARAD
"RTN","ECXARAD",44,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXARAD",45,0)
 D HOME^%ZIS
"RTN","ECXARAD",46,0)
 D AUDIT^ECXKILL
"RTN","ECXARAD",47,0)
 Q
"RTN","ECXARAD",48,0)
 ;
"RTN","ECXARAD",49,0)
PROCESS ;process data in file #727.814
"RTN","ECXARAD",50,0)
 N X,Y,JJ,DIV,IEN,DATA,DATE,ECX,PAT,TYPE,IMNM,IMAB,PROC,PROCN,CPT,DIC,DIQ,DR,DA,QQFLG,CNT
"RTN","ECXARAD",51,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXARAD",52,0)
 S (CNT,QQFLG)=0
"RTN","ECXARAD",53,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXARAD",54,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXARAD",55,0)
 ;get run date in external format
"RTN","ECXARAD",56,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXARAD",57,0)
 ;setup array of imaging types
"RTN","ECXARAD",58,0)
 S TYPE=0 F  S TYPE=$O(^RA(79.2,TYPE)) Q:+TYPE<1  D
"RTN","ECXARAD",59,0)
 .K ECX S DIC="^RA(79.2,",DR=".01;3",DIQ="ECX",DIQ(0)="I",DA=TYPE D EN^DIQ1
"RTN","ECXARAD",60,0)
 .S TYPE(TYPE)=ECX(79.2,TYPE,.01,"I")_U_ECX(79.2,TYPE,3,"I")
"RTN","ECXARAD",61,0)
 ;get records within date range and radiology site(s)
"RTN","ECXARAD",62,0)
 S IEN="" F  S IEN=$O(^ECX(727.814,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXARAD",63,0)
 .S DATA=^ECX(727.814,IEN,0),DATE=$P(DATA,U,9),DIV=$P(DATA,U,4)
"RTN","ECXARAD",64,0)
 .;convert free text date to fm internal format date
"RTN","ECXARAD",65,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXARAD",66,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXARAD",67,0)
 .Q:'$D(ECXDIV(DIV))
"RTN","ECXARAD",68,0)
 .S PAT=$P(DATA,U,8),TYPE=$P(DATA,U,21),PROC=$P(DATA,U,11),CPT=$P(DATA,U,10),CPT="A"_$$RJ^XLFSTR(CPT,5,0)
"RTN","ECXARAD",69,0)
 .S IMNM=$P(TYPE(TYPE),U,1),IMAB=$P(TYPE(TYPE),U,2)
"RTN","ECXARAD",70,0)
 .K ECX S DIC="^RAMIS(71,",DR=".01",DIQ="ECX",DIQ(0)="I",DA=+PROC D EN^DIQ1
"RTN","ECXARAD",71,0)
 .S PROCN=$G(ECX(71,+PROC,.01,"I")) I PROCN="" S PROCN="Unknown"
"RTN","ECXARAD",72,0)
 .;tally procedures; 1st piece is outpatient total, 2nd piece is inpatient total
"RTN","ECXARAD",73,0)
 .I '$D(^TMP($J,"ECXAUD",DIV,IMNM,CPT)) S ^TMP($J,"ECXAUD",DIV,IMNM,CPT)=0_U_0_U_PROCN
"RTN","ECXARAD",74,0)
 .I PAT=1 S $P(^(CPT),U,1)=$P(^TMP($J,"ECXAUD",DIV,IMNM,CPT),U,1)+1,CNT=CNT+1
"RTN","ECXARAD",75,0)
 .I PAT=3 S $P(^(CPT),U,2)=$P(^TMP($J,"ECXAUD",DIV,IMNM,CPT),U,2)+1,CNT=CNT+1
"RTN","ECXARAD",76,0)
 .I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXARAD",77,0)
 ;print the report
"RTN","ECXARAD",78,0)
 D PRINT
"RTN","ECXARAD",79,0)
 D AUDIT^ECXKILL
"RTN","ECXARAD",80,0)
 Q
"RTN","ECXARAD",81,0)
 ;
"RTN","ECXARAD",82,0)
PRINT ;print the RAD audit report by radiology site
"RTN","ECXARAD",83,0)
 N LN,P,PG,QFLG,TOT,STOT,GTOT,DIVNM,IMAG,IMTYPE,T,SS,DIC,DIR,DR,DIRUT,DTOUT,DUOUT
"RTN","ECXARAD",84,0)
 U IO
"RTN","ECXARAD",85,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXARAD",86,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXARAD",87,0)
 ;arrange type array by name
"RTN","ECXARAD",88,0)
 S T=0 F  S T=$O(TYPE(T)) Q:T=""  S IMNM=$P(TYPE(T),U,1),IMAG(IMNM)=T
"RTN","ECXARAD",89,0)
 F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXARAD",90,0)
 .S DIVNM=$P(ECXDIV(DIV),U,2)_" ("_DIV_")",GTOT(1)=0,GTOT(3)=0 D HEADER
"RTN","ECXARAD",91,0)
 .I '$D(^TMP($J,"ECXAUD",DIV)) D  Q
"RTN","ECXARAD",92,0)
 ..W !!,?5,"No data available for this Radiology Division.",!!
"RTN","ECXARAD",93,0)
 .I $D(^TMP($J,"ECXAUD",DIV)) S IMNM="" F  S IMNM=$O(^TMP($J,"ECXAUD",DIV,IMNM)) Q:IMNM=""  D  Q:QFLG
"RTN","ECXARAD",94,0)
 ..S STOT(1)=0,STOT(3)=0,IMTYPE=IMAG(IMNM),CPT=""
"RTN","ECXARAD",95,0)
 ..;write the imaging type name
"RTN","ECXARAD",96,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,IMNM_" ("_DIV_"-"_IMTYPE_")",!
"RTN","ECXARAD",97,0)
 ..F  S CPT=$O(^TMP($J,"ECXAUD",DIV,IMNM,CPT)) Q:CPT=""  S TOT(1)=$P(^(CPT),U,1),TOT(3)=$P(^(CPT),U,2),PROCN=$P(^(CPT),U,3) D  Q:QFLG
"RTN","ECXARAD",98,0)
 ...S STOT(1)=STOT(1)+TOT(1),STOT(3)=STOT(3)+TOT(3)
"RTN","ECXARAD",99,0)
 ...S GTOT(1)=GTOT(1)+TOT(1),GTOT(3)=GTOT(3)+TOT(3)
"RTN","ECXARAD",100,0)
 ...;write procedure and total
"RTN","ECXARAD",101,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG  W ?3,$E(CPT,2,99),?14,$E(PROCN,1,38),?60,$$RJ^XLFSTR(TOT(3),5," "),?70,$$RJ^XLFSTR(TOT(1),5," "),!
"RTN","ECXARAD",102,0)
 ..;write the unit subtotal
"RTN","ECXARAD",103,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?5,$E(LN,1,74)
"RTN","ECXARAD",104,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,"Sub-totals for "_IMNM_" ("_DIV_"-"_IMTYPE_"):",?60,$$RJ^XLFSTR(STOT(3),5," "),?70,$$RJ^XLFSTR(STOT(1),5," "),!
"RTN","ECXARAD",105,0)
 .;write the division grandtotal
"RTN","ECXARAD",106,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Grand Total for Division "_DIVNM_":",?60,$$RJ^XLFSTR(GTOT(3),5," "),?70,$$RJ^XLFSTR(GTOT(1),5," ")
"RTN","ECXARAD",107,0)
 ;print the audit descriptive narrative
"RTN","ECXARAD",108,0)
 I $E(IOST)'="C" D
"RTN","ECXARAD",109,0)
 .W @IOF S PG=PG+1
"RTN","ECXARAD",110,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXARAD",111,0)
 .W !,"DSS Extract Log #:    "_ECXEXT
"RTN","ECXARAD",112,0)
 .W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXARAD",113,0)
 .W !,"Report Run Date/Time: "_ECXRUN,?68,"Page: ",PG
"RTN","ECXARAD",114,0)
 .W !!,LN,!!
"RTN","ECXARAD",115,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXARAD",116,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXARAD",117,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXARAD",118,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXARAD",119,0)
 Q
"RTN","ECXARAD",120,0)
 ;
"RTN","ECXARAD",121,0)
HEADER ;header and page control
"RTN","ECXARAD",122,0)
 N JJ,SS
"RTN","ECXARAD",123,0)
 I $E(IOST)="C" D
"RTN","ECXARAD",124,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXARAD",125,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXARAD",126,0)
 Q:QFLG
"RTN","ECXARAD",127,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXARAD",128,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXARAD",129,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXARAD",130,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXARAD",131,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXARAD",132,0)
 W !,"Radiology Division:   "_$P(ECXDIV(DIV),U,2)_" ("_DIV_")",?60,"Page: "_PG
"RTN","ECXARAD",133,0)
 W !!,"Imaging Type (Feeder Location)",?60,"# of Procedures"
"RTN","ECXARAD",134,0)
 W !,?3,"CPT Code",?14,"Procedure",?60,"Inpt.",?70,"Outpt."
"RTN","ECXARAD",135,0)
 W !,LN,!
"RTN","ECXARAD",136,0)
 Q
"RTN","ECXASUR")
0^19^B34325110
"RTN","ECXASUR",1,0)
ECXASUR ;ALB/JAP - SUR Extract Audit Report ;Oct 22, 1997
"RTN","ECXASUR",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXASUR",3,0)
 ;
"RTN","ECXASUR",4,0)
EN ;entry point for SUR extract audit report
"RTN","ECXASUR",5,0)
 ;select extract
"RTN","ECXASUR",6,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,SITES,ECX
"RTN","ECXASUR",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXASUR",8,0)
 S ECXERR=0
"RTN","ECXASUR",9,0)
 S ECXHEAD="SUR",ECXAUD=0
"RTN","ECXASUR",10,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXASUR",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXASUR",12,0)
 Q:ECXERR
"RTN","ECXASUR",13,0)
 ;determine if facility is multidivisional
"RTN","ECXASUR",14,0)
 K ECX D FILE^DID(133,,"ENTRIES","ECX") S SITES=ECX("ENTRIES") K ECX
"RTN","ECXASUR",15,0)
 I SITES=1 S ECXALL=1
"RTN","ECXASUR",16,0)
 I SITES>1 D
"RTN","ECXASUR",17,0)
 .W !!
"RTN","ECXASUR",18,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all divisions"
"RTN","ECXASUR",19,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXASUR",20,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXASUR",21,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXASUR",22,0)
 .S ECXALL=Y
"RTN","ECXASUR",23,0)
 I ECXERR=1 D  Q
"RTN","ECXASUR",24,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXASUR",25,0)
 .D AUDIT^ECXKILL
"RTN","ECXASUR",26,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXASUR",27,0)
 W !
"RTN","ECXASUR",28,0)
 S ECXSTART=ECXARRAY("START"),ECXEND=ECXARRAY("END")
"RTN","ECXASUR",29,0)
 D SUR^ECXDVSN2(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXASUR",30,0)
 I ECXERR=1 D  Q
"RTN","ECXASUR",31,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXASUR",32,0)
 .D AUDIT^ECXKILL
"RTN","ECXASUR",33,0)
 ;determine output device and queue if requested
"RTN","ECXASUR",34,0)
 S ECXPGM="PROCESS^ECXASUR",ECXDESC="SUR Extract Audit Report"
"RTN","ECXASUR",35,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXASUR",36,0)
 W !
"RTN","ECXASUR",37,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXASUR",38,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXASUR",39,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXASUR",40,0)
 .D AUDIT^ECXKILL
"RTN","ECXASUR",41,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXASUR",42,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXASUR",43,0)
 .D PROCESS^ECXASUR
"RTN","ECXASUR",44,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXASUR",45,0)
 D HOME^%ZIS
"RTN","ECXASUR",46,0)
 D AUDIT^ECXKILL
"RTN","ECXASUR",47,0)
 Q
"RTN","ECXASUR",48,0)
 ;
"RTN","ECXASUR",49,0)
PROCESS ;process data in file #727.811
"RTN","ECXASUR",50,0)
 N X,Y,JJ,DIV,IEN,DATA,DATE,CASE,CASES,OR,LOC,PROC,PROCN,PSI,CPT,DIC,QQFLG,CNT
"RTN","ECXASUR",51,0)
 K ^TMP($J,"ECXAUD"),^TMP($J,"ECXS")
"RTN","ECXASUR",52,0)
 S (CNT,QQFLG)=0
"RTN","ECXASUR",53,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXASUR",54,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXASUR",55,0)
 ;get run date in external format
"RTN","ECXASUR",56,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXASUR",57,0)
 ;get records within date range and surgery site(s)
"RTN","ECXASUR",58,0)
 S IEN="" F  S IEN=$O(^ECX(727.811,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXASUR",59,0)
 .S DATA=^ECX(727.811,IEN,0),DATE=$P(DATA,U,9),DIV=$P(DATA,U,4)
"RTN","ECXASUR",60,0)
 .;convert free text date to fm internal format date
"RTN","ECXASUR",61,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXASUR",62,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXASUR",63,0)
 .Q:'$D(ECXDIV(DIV))
"RTN","ECXASUR",64,0)
 .S CASE=$P(DATA,U,10),OR=$P(DATA,U,12),PSI=$P(DATA,U,17),PROC=$P(DATA,U,18)
"RTN","ECXASUR",65,0)
 .Q:(PROC="")&(PSI="I")
"RTN","ECXASUR",66,0)
 .S (CPT,PROCN)="" I PROC]"" D
"RTN","ECXASUR",67,0)
 ..;from cpt code get procedure name; variable cpt should be same as variable proc
"RTN","ECXASUR",68,0)
 ..K Y S DIC="^ICPT(",DIC(0)="XZ",X=PROC D ^DIC
"RTN","ECXASUR",69,0)
 ..S CPT=$P($G(Y(0)),U,1),PROCN=$P($G(Y(0)),U,2)
"RTN","ECXASUR",70,0)
 .S:CPT="" CPT="Unknown" S:PROCN="" PROCN="Unknown" S CPT="A"_CPT
"RTN","ECXASUR",71,0)
 .S LOC=$S(OR="":2,1:1)
"RTN","ECXASUR",72,0)
 .;tally procedures by location and division
"RTN","ECXASUR",73,0)
 .I '$D(^TMP($J,"ECXAUD",DIV,LOC,CPT)) S ^TMP($J,"ECXAUD",DIV,LOC,CPT)=0_U_PROCN
"RTN","ECXASUR",74,0)
 .S $P(^(CPT),U,1)=$P(^TMP($J,"ECXAUD",DIV,LOC,CPT),U,1)+1,CNT=CNT+1
"RTN","ECXASUR",75,0)
 .I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ Q
"RTN","ECXASUR",76,0)
 .I '$D(^TMP($J,"ECXS",DIV,LOC,CASE)) S ^TMP($J,"ECXS",DIV,LOC,CASE)=""
"RTN","ECXASUR",77,0)
 ;total cases for each division and location
"RTN","ECXASUR",78,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXASUR",79,0)
 S DIV="" F  S DIV=$O(^TMP($J,"ECXS",DIV)) Q:DIV=""  F LOC=1:1:2 S CASES(DIV,LOC)=0,CASE="" D
"RTN","ECXASUR",80,0)
 .F  S CASE=$O(^TMP($J,"ECXS",DIV,LOC,CASE)) Q:CASE=""  S CASES(DIV,LOC)=CASES(DIV,LOC)+1
"RTN","ECXASUR",81,0)
 K ^TMP($J,"ECXS")
"RTN","ECXASUR",82,0)
 ;print the report
"RTN","ECXASUR",83,0)
 D PRINT
"RTN","ECXASUR",84,0)
 D AUDIT^ECXKILL
"RTN","ECXASUR",85,0)
 Q
"RTN","ECXASUR",86,0)
 ;
"RTN","ECXASUR",87,0)
PRINT ;print the SUR audit report by location and division
"RTN","ECXASUR",88,0)
 N LN,PG,QFLG,TOT,GTOT,DIVNM,CPT,CPTN,PROCN,LOCNM,LOCNMC,SS,DIR,DR,DIRUT,DTOUT,DUOUT
"RTN","ECXASUR",89,0)
 U IO
"RTN","ECXASUR",90,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXASUR",91,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXASUR",92,0)
 F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  F LOC=1:1:2 D  Q:QFLG
"RTN","ECXASUR",93,0)
 .S DIVNM=$P(ECXDIV(DIV),U,2)_" ("_DIV_")",GTOT(1)=0,GTOT(2)=0
"RTN","ECXASUR",94,0)
 .S LOCNM=$S(LOC=1:"O.R. Surgical Procedures",1:"Non-O.R. Surgical Procedures")
"RTN","ECXASUR",95,0)
 .D HEADER
"RTN","ECXASUR",96,0)
 .I '$D(^TMP($J,"ECXAUD",DIV,LOC)) D
"RTN","ECXASUR",97,0)
 ..W !!,?3,"No data available for "_LOCNM_".",!!
"RTN","ECXASUR",98,0)
 .I $D(^TMP($J,"ECXAUD",DIV,LOC)) S CPT="" F  S CPT=$O(^TMP($J,"ECXAUD",DIV,LOC,CPT)) Q:CPT=""  S TOT(LOC)=$P(^(CPT),U,1),PROCN=$P(^(CPT),U,2),CPTN=$E(CPT,2,99) D  Q:QFLG
"RTN","ECXASUR",99,0)
 ..S GTOT(LOC)=GTOT(LOC)+TOT(LOC)
"RTN","ECXASUR",100,0)
 ..;write procedure and total
"RTN","ECXASUR",101,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,CPTN,?14,$E(PROCN,1,40),?63,$$RJ^XLFSTR(TOT(LOC),5," ")
"RTN","ECXASUR",102,0)
 .;write the division totals
"RTN","ECXASUR",103,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,$E(LN,1,65)
"RTN","ECXASUR",104,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"For Division "_DIVNM_"--"
"RTN","ECXASUR",105,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,"Total "_LOCNM_":",?63,$$RJ^XLFSTR(GTOT(LOC),5," ")
"RTN","ECXASUR",106,0)
 .S LOCNMC=$P(LOCNM,"Pro",1) S:'$D(CASES(DIV,LOC)) CASES(DIV,LOC)=0
"RTN","ECXASUR",107,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,"Total "_LOCNMC_"Cases:",?63,$$RJ^XLFSTR(CASES(DIV,LOC),5," ")
"RTN","ECXASUR",108,0)
 ;print the audit descriptive narrative
"RTN","ECXASUR",109,0)
 I $E(IOST)'="C" D
"RTN","ECXASUR",110,0)
 .W @IOF S PG=PG+1
"RTN","ECXASUR",111,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXASUR",112,0)
 .W !,"DSS Extract Log #:    "_ECXEXT
"RTN","ECXASUR",113,0)
 .W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXASUR",114,0)
 .W !,"Report Run Date/Time: "_ECXRUN,?68,"Page: ",PG
"RTN","ECXASUR",115,0)
 .W !!,LN,!!
"RTN","ECXASUR",116,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXASUR",117,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXASUR",118,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXASUR",119,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXASUR",120,0)
 Q
"RTN","ECXASUR",121,0)
 ;
"RTN","ECXASUR",122,0)
HEADER ;header and page control
"RTN","ECXASUR",123,0)
 N JJ,SS
"RTN","ECXASUR",124,0)
 I $E(IOST)="C" D
"RTN","ECXASUR",125,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXASUR",126,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXASUR",127,0)
 Q:QFLG
"RTN","ECXASUR",128,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXASUR",129,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXASUR",130,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXASUR",131,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXASUR",132,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXASUR",133,0)
 W !,"Surgery Division:     "_$P(ECXDIV(DIV),U,2)_" ("_DIV_")",?63,"Page: "_PG
"RTN","ECXASUR",134,0)
 W !!,LOCNM
"RTN","ECXASUR",135,0)
 W !,?3,"CPT Code",?14,"Procedure",?63,"# of Procedures"
"RTN","ECXASUR",136,0)
 W !,LN,!
"RTN","ECXASUR",137,0)
 Q
"RTN","ECXATRT")
0^20^B47325400
"RTN","ECXATRT",1,0)
ECXATRT ;ALB/JAP - TRT Extract Audit Report ;Oct 16, 1997
"RTN","ECXATRT",2,0)
 ;;3.0;DSS EXTRACTS;**1,6,8**;Dec 22, 1997
"RTN","ECXATRT",3,0)
 ;
"RTN","ECXATRT",4,0)
EN ;entry point for TRT extract audit report
"RTN","ECXATRT",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR
"RTN","ECXATRT",6,0)
 S ECXERR=0
"RTN","ECXATRT",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXATRT",8,0)
 S ECXHEAD="TRT",ECXAUD=0
"RTN","ECXATRT",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXATRT",10,0)
 ;select extract
"RTN","ECXATRT",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXATRT",12,0)
 Q:ECXERR
"RTN","ECXATRT",13,0)
 ;currently, this extract does not capture divisional data
"RTN","ECXATRT",14,0)
 S ECXALL=1
"RTN","ECXATRT",15,0)
 D TRT^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXATRT",16,0)
 I ECXERR=1 D  Q
"RTN","ECXATRT",17,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXATRT",18,0)
 .D AUDIT^ECXKILL
"RTN","ECXATRT",19,0)
 ;determine output device and queue if requested
"RTN","ECXATRT",20,0)
 W !
"RTN","ECXATRT",21,0)
 S ECXPGM="PROCESS^ECXATRT",ECXDESC="TRT Extract Audit Report"
"RTN","ECXATRT",22,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXATRT",23,0)
 W !
"RTN","ECXATRT",24,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXATRT",25,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXATRT",26,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXATRT",27,0)
 .D AUDIT^ECXKILL
"RTN","ECXATRT",28,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXATRT",29,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXATRT",30,0)
 .D PROCESS^ECXATRT
"RTN","ECXATRT",31,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXATRT",32,0)
 D HOME^%ZIS
"RTN","ECXATRT",33,0)
 D AUDIT^ECXKILL
"RTN","ECXATRT",34,0)
 Q
"RTN","ECXATRT",35,0)
 ;
"RTN","ECXATRT",36,0)
PROCESS ;process data in file #727.817
"RTN","ECXATRT",37,0)
 N X,Y,W,DATA,DATE,DIV,IEN,TS,SPEC,FTS,FTSNM,SERV,ECX,QQFLG,CNT,A1,A2,NUM,MN,NEWFTS,NEWSPEC
"RTN","ECXATRT",38,0)
 K ^TMP($J,"ECXAUD"),^TMP($J,"ECXSPEC")
"RTN","ECXATRT",39,0)
 S (QQFLG,CNT)=0
"RTN","ECXATRT",40,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXATRT",41,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXATRT",42,0)
 ;get run date in external format
"RTN","ECXATRT",43,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXATRT",44,0)
 ;set up the specialty array for site/division
"RTN","ECXATRT",45,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXATRT",46,0)
 S DIV="" F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  D
"RTN","ECXATRT",47,0)
 .S DIC="^DIC(42.4,",DR=".01;3",DIQ(0)="E",DIQ="ECX"
"RTN","ECXATRT",48,0)
 .S SPEC="" F  S SPEC=$O(^DIC(42.4,"B",SPEC)) Q:SPEC=""  S TS=$O(^(SPEC,0)) D
"RTN","ECXATRT",49,0)
 ..K ECX S DA=TS D EN^DIQ1
"RTN","ECXATRT",50,0)
 ..S SPEC=$G(ECX(42.4,TS,.01,"E")),SERV=$G(ECX(42.4,TS,3,"E")) S:SERV="" SERV="Unknown"
"RTN","ECXATRT",51,0)
 ..S ^TMP($J,"ECXSPEC",DIV,TS)=0_U_SERV_U_SPEC,NUM(TS)=0
"RTN","ECXATRT",52,0)
 ;set up the specialty to facility treating specialty conversion array;
"RTN","ECXATRT",53,0)
 ;determine if active between ecxstart and ecxend;
"RTN","ECXATRT",54,0)
 ;ignore if facility treating specialty not active within date range of report;
"RTN","ECXATRT",55,0)
 S DIC="^DIC(45.7,",DR=".01;1",DIQ(0)="I",DIQ="ECX"
"RTN","ECXATRT",56,0)
 S FTSNM="" F  S FTSNM=$O(^DIC(45.7,"B",FTSNM)) Q:FTSNM=""  S FTS=$O(^(FTSNM,0)) D
"RTN","ECXATRT",57,0)
 .K ECX S DA=FTS D EN^DIQ1
"RTN","ECXATRT",58,0)
 .S FTSNM=$G(ECX(45.7,FTS,.01,"I")),TS=$G(ECX(45.7,FTS,1,"I"))
"RTN","ECXATRT",59,0)
 .Q:TS=""
"RTN","ECXATRT",60,0)
 .S A1=$$ACTIVE^DGACT(45.7,FTS,ECXSTART),A2=$$ACTIVE^DGACT(45.7,FTS,ECXEND)
"RTN","ECXATRT",61,0)
 .Q:A1=0&(A2=0)
"RTN","ECXATRT",62,0)
 .;num(ts) will hold the number of active facility treat. specialties (file #45.7) associated 
"RTN","ECXATRT",63,0)
 .;with this national specialty (file #42.4).
"RTN","ECXATRT",64,0)
 .I '$D(NUM(TS)) S NUM(TS)=0
"RTN","ECXATRT",65,0)
 .S ^TMP($J,"ECXTS",TS,FTS)=FTSNM,^TMP($J,"ECXREVTS",FTS)=TS,NUM(TS)=NUM(TS)+1
"RTN","ECXATRT",66,0)
 ;get extract records in date range
"RTN","ECXATRT",67,0)
 S IEN="" F  S IEN=$O(^ECX(727.817,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXATRT",68,0)
 .S DATA=^ECX(727.817,IEN,0),DATE=$P(DATA,U,9),DIV=$P(DATA,U,4)
"RTN","ECXATRT",69,0)
 .;currently the 4th piece of extract record is always null for trt
"RTN","ECXATRT",70,0)
 .S:DIV="" DIV=1
"RTN","ECXATRT",71,0)
 .;convert free text date to fm internal format date
"RTN","ECXATRT",72,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXATRT",73,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXATRT",74,0)
 .I $D(ECXDIV(DIV)) D
"RTN","ECXATRT",75,0)
 ..;ts is the old specialty, newfts is the new facility treat. spec. for the movement date;
"RTN","ECXATRT",76,0)
 ..;after patch #1 'losing treating specialty los' field (#17) is non-null only for actual specialty changes;
"RTN","ECXATRT",77,0)
 ..;so should be able to distinguish true ts changes from provider-only changes;
"RTN","ECXATRT",78,0)
 ..;although it will still be possible that old and new specialty are the same, but facility
"RTN","ECXATRT",79,0)
 ..;treat. spec. was changed, but we've lost that info in the extract.
"RTN","ECXATRT",80,0)
 ..;
"RTN","ECXATRT",81,0)
 ..;filter out those records which are definitely provider-only changes;
"RTN","ECXATRT",82,0)
 ..;these are the records that have 'losing treating specialty los' which is null;
"RTN","ECXATRT",83,0)
 ..;but for extracts done prior to patch #1, still need to compare old & new specialty.
"RTN","ECXATRT",84,0)
 ..S NEWTS=$P(DATA,U,15),TS=$P(DATA,U,16),LOS=$P(DATA,U,17)
"RTN","ECXATRT",85,0)
 ..;leaving this next line in here for v3.0 extracts done prior to patch #1
"RTN","ECXATRT",86,0)
 ..Q:(NUM(TS)=1)&(NEWTS=TS)
"RTN","ECXATRT",87,0)
 ..Q:LOS=""
"RTN","ECXATRT",88,0)
 ..S $P(^(TS),U,1)=$P(^TMP($J,"ECXSPEC",DIV,TS),U,1)+1,CNT=CNT+1
"RTN","ECXATRT",89,0)
 ..I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXATRT",90,0)
 ;after all extract records processed, arrange by service and specialty;
"RTN","ECXATRT",91,0)
 ;total can only be associated with specialty, not facility treating specialty;
"RTN","ECXATRT",92,0)
 ;include specialty only if total loss is non-zero
"RTN","ECXATRT",93,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXATRT",94,0)
 S DIV="" F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  I $D(^TMP($J,"ECXSPEC",DIV)) D
"RTN","ECXATRT",95,0)
 .S TS="" F  S TS=$O(^TMP($J,"ECXSPEC",DIV,TS)) Q:TS=""  D
"RTN","ECXATRT",96,0)
 ..S TOT=+$P(^TMP($J,"ECXSPEC",DIV,TS),U,1) I TOT>0 D
"RTN","ECXATRT",97,0)
 ...S SERV=$P(^(TS),U,2),SPEC=$P(^(TS),U,3)
"RTN","ECXATRT",98,0)
 ...S ^TMP($J,"ECXAUD",DIV,SERV,SPEC)=TOT_U_TS
"RTN","ECXATRT",99,0)
 ;print the report
"RTN","ECXATRT",100,0)
 D PRINT
"RTN","ECXATRT",101,0)
 D AUDIT^ECXKILL
"RTN","ECXATRT",102,0)
 Q
"RTN","ECXATRT",103,0)
 ;
"RTN","ECXATRT",104,0)
PRINT ;print trt data by site, by service, by specialty
"RTN","ECXATRT",105,0)
 N JJ,SS,LN,P,DIV,DIVNM,GTOT,SVCTOT,PG,QFLG,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXATRT",106,0)
 U IO
"RTN","ECXATRT",107,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXATRT",108,0)
 S (QFLG,PG)=0,$P(LN,"-",80)=""
"RTN","ECXATRT",109,0)
 ;division associated with the treat. spec. change is not actually known; division is dss site
"RTN","ECXATRT",110,0)
 S DIV="" S DIV=$O(ECXDIV(DIV)) Q:DIV=""  S GTOT=0
"RTN","ECXATRT",111,0)
 D HEADER
"RTN","ECXATRT",112,0)
 I '$D(^TMP($J,"ECXAUD",DIV)) D  Q
"RTN","ECXATRT",113,0)
 .W !!,?5,"No data available for this DSS Site.",!!
"RTN","ECXATRT",114,0)
 I $D(^TMP($J,"ECXAUD",DIV)) S SERV="" F  S SERV=$O(^TMP($J,"ECXAUD",DIV,SERV)) Q:SERV=""  D  Q:QFLG
"RTN","ECXATRT",115,0)
 .S SVCTOT=0
"RTN","ECXATRT",116,0)
 .;write the service name
"RTN","ECXATRT",117,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,SERV
"RTN","ECXATRT",118,0)
 .S SPEC="" F  S SPEC=$O(^TMP($J,"ECXAUD",DIV,SERV,SPEC)) Q:SPEC=""  D  Q:QFLG
"RTN","ECXATRT",119,0)
 ..;write the specialty name and total
"RTN","ECXATRT",120,0)
 ..S TOT=$P(^TMP($J,"ECXAUD",DIV,SERV,SPEC),U,1),TS=$P(^(SPEC),U,2)
"RTN","ECXATRT",121,0)
 ..W ?22,$E(SPEC,1,30)_" ("_TS_")",?68,$$RJ^XLFSTR(TOT,5," "),!
"RTN","ECXATRT",122,0)
 ..S SVCTOT=SVCTOT+TOT,GTOT=GTOT+TOT
"RTN","ECXATRT",123,0)
 ..S FTS="" F  S FTS=$O(^TMP($J,"ECXTS",TS,FTS)) Q:FTS=""  D  Q:QFLG
"RTN","ECXATRT",124,0)
 ...S FTSNM=^TMP($J,"ECXTS",TS,FTS)
"RTN","ECXATRT",125,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG  W ?25,$E(FTSNM,1,30),!
"RTN","ECXATRT",126,0)
 .;write the service subtotal
"RTN","ECXATRT",127,0)
 .Q:QFLG
"RTN","ECXATRT",128,0)
 .W ?22,$E(LN,1,54),!
"RTN","ECXATRT",129,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W "Total for "_SERV_":",?68,$$RJ^XLFSTR(SVCTOT,5," "),!
"RTN","ECXATRT",130,0)
 ;write the grandtotal for all services at facility
"RTN","ECXATRT",131,0)
 D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Grand Total for all Services:",?68,$$RJ^XLFSTR(GTOT,5," ")
"RTN","ECXATRT",132,0)
 ;print the audit descriptive narrative
"RTN","ECXATRT",133,0)
 I $E(IOST)'="C" D
"RTN","ECXATRT",134,0)
 .W @IOF S PG=PG+1
"RTN","ECXATRT",135,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXATRT",136,0)
 .W !,"DSS Extract Log #:    "_ECXEXT
"RTN","ECXATRT",137,0)
 .W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXATRT",138,0)
 .W !,"Report Run Date/Time: "_ECXRUN,?68,"Page: ",PG
"RTN","ECXATRT",139,0)
 .W !!,LN,!!
"RTN","ECXATRT",140,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXATRT",141,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXATRT",142,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXATRT",143,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXATRT",144,0)
 Q
"RTN","ECXATRT",145,0)
 ;
"RTN","ECXATRT",146,0)
HEADER ;header and page control
"RTN","ECXATRT",147,0)
 N JJ,SS
"RTN","ECXATRT",148,0)
 I $E(IOST)="C" D
"RTN","ECXATRT",149,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXATRT",150,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXATRT",151,0)
 Q:QFLG
"RTN","ECXATRT",152,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXATRT",153,0)
 ;W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXATRT",154,0)
 W !,"Treating Specialty Change"_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXATRT",155,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXATRT",156,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXATRT",157,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXATRT",158,0)
 W !,"DSS Site:             "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")",?68,"Page: "_PG
"RTN","ECXATRT",159,0)
 W !!,"Service",?22,"Specialty (DSS Code)",?68,"# of Losses"
"RTN","ECXATRT",160,0)
 W !,?25,"Facility Treating Specialty"
"RTN","ECXATRT",161,0)
 W !,LN,!
"RTN","ECXATRT",162,0)
 Q
"RTN","ECXDENT")
0^22^B5638119
"RTN","ECXDENT",1,0)
ECXDENT ;ALB/JAP,BIR/DMA,PTD-Dental Extract for DSS ; [ 11/22/96  5:23 PM ]
"RTN","ECXDENT",2,0)
 ;;3.0;DSS EXTRACTS;**11,8**;Dec 22, 1997
"RTN","ECXDENT",3,0)
BEG ;entry point from option
"RTN","ECXDENT",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXDENT",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXDENT",6,0)
 Q
"RTN","ECXDENT",7,0)
 ;
"RTN","ECXDENT",8,0)
START ;start package specific extract
"RTN","ECXDENT",9,0)
 N DATA,X,Y
"RTN","ECXDENT",10,0)
 S QFLG=0
"RTN","ECXDENT",11,0)
 K ECXDD D FIELD^DID(220.5,.01,,"SPECIFIER","ECXDD") S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXDENT",12,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXDENT",13,0)
 F  S ECD=$O(^DENT(221,"B",ECD)),J=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S J=$O(^DENT(221,"B",ECD,J)) Q:'J  D  Q:QFLG
"RTN","ECXDENT",14,0)
 .Q:'$D(^DENT(221,J,0)) 
"RTN","ECXDENT",15,0)
 .S DATA=^DENT(221,J,0),$P(DATA,U,50)="" D STUFF
"RTN","ECXDENT",16,0)
 Q
"RTN","ECXDENT",17,0)
 ;
"RTN","ECXDENT",18,0)
STUFF ;get data
"RTN","ECXDENT",19,0)
 S DFN=+$P(DATA,U,4) Q:'$D(^DPT(DFN,0))
"RTN","ECXDENT",20,0)
 S ECP=^DPT(DFN,0),SSN=$P(ECP,U,9),ECNA=$E($P($P(ECP,U),",")_"    ",1,4)
"RTN","ECXDENT",21,0)
 S X=$$INP^ECXUTL2(DFN,ECD),ECA=$P(X,U,1),ECMN=$P(X,U,2),ECTS=$P(X,U,3)
"RTN","ECXDENT",22,0)
 S ECDEN=$P(DATA,U,3),ECDEN=$P($G(^DENT(220.5,ECDEN,0)),U) S:ECDEN]"" ECDEN=ECPRO_ECDEN
"RTN","ECXDENT",23,0)
 S X=$$PRIMARY^ECXUTL2(DFN,ECD,ECPRO),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2)
"RTN","ECXDENT",24,0)
 D FILE
"RTN","ECXDENT",25,0)
 Q
"RTN","ECXDENT",26,0)
 ;
"RTN","ECXDENT",27,0)
FILE ;file record
"RTN","ECXDENT",28,0)
 ;node0
"RTN","ECXDENT",29,0)
 ;inst^dfn^ssn^name^in/out^day^provider^screen/complete^admin proc^x-rays ex^x-rays int^prophy natural^prophy denture^op room^neoplasm malig^
"RTN","ECXDENT",30,0)
 ;neoplasm removed^biopsy/smear^fracture^pat category^other sig surg^surface restored^root canal^periodontal quads (surg)^perio quads (root plane)^
"RTN","ECXDENT",31,0)
 ;patient ed^spot check exam^indiv crowns^posts & cores^fixed partials (abut)^fixed partials (pont)^removable partials^complete dentures^prosthetic repair^
"RTN","ECXDENT",32,0)
 ;splints & spec procs^extractions^surg extractions^other sig treatment^div^completion/termination^interdisc consult^evaluation^pre-auth 2nd opinion^
"RTN","ECXDENT",33,0)
 ;spot check discrepancy^mov #^treat spec^primary care team^primary care provider^time
"RTN","ECXDENT",34,0)
 ;node1
"RTN","ECXDENT",35,0)
 ;mpi^dss dept^provider npi^pc provider npi
"RTN","ECXDENT",36,0)
 N DA,DIK
"RTN","ECXDENT",37,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXDENT",38,0)
 S ECODE=EC7_U_EC23
"RTN","ECXDENT",39,0)
 S ECODE=ECODE_U_$P(DATA,U,40)_U_DFN_U_SSN_U_ECNA_U_ECA_U_$$ECXDATE^ECXUTL($P(DATA,U),ECXYM)_U_ECDEN
"RTN","ECXDENT",40,0)
 S ECODE=ECODE_U_$P(DATA,U,7,9)_U_$P(DATA,U,11,20)_U_$P(DATA,U,22,38)_U_$P(DATA,U,40,45)_U_ECMN_U_ECTS
"RTN","ECXDENT",41,0)
 S ECODE=ECODE_U_ECPTTM_U_ECPTPR_U_$$ECXTIME^ECXUTL($P(DATA,U))
"RTN","ECXDENT",42,0)
 S ECODE1=U_U_U
"RTN","ECXDENT",43,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXDENT",44,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXDENT",45,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXDENT",46,0)
 Q
"RTN","ECXDENT",47,0)
 ;
"RTN","ECXDENT",48,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXDENT",49,0)
 S ECHEAD="DEN"
"RTN","ECXDENT",50,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXDENT",51,0)
 Q
"RTN","ECXDENT",52,0)
 ;
"RTN","ECXDENT",53,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXDENT",54,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXDIVIV")
0^23^B12532326
"RTN","ECXDIVIV",1,0)
ECXDIVIV ;BIR/CML-Enter/Edit and Print IV Room Division ; [ 11/15/96  11:12 AM ]
"RTN","ECXDIVIV",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXDIVIV",3,0)
 ;
"RTN","ECXDIVIV",4,0)
ED ;enter/edit division field for iv rooms
"RTN","ECXDIVIV",5,0)
 N CHKFLG,DIC,DIE,DA,DR
"RTN","ECXDIVIV",6,0)
 W !!,"This option allows editing of the DIVISION field for IV Rooms.",!
"RTN","ECXDIVIV",7,0)
 S CHKFLG=0,OUT=0
"RTN","ECXDIVIV",8,0)
 D CHK Q:CHKFLG
"RTN","ECXDIVIV",9,0)
 F  D  Q:OUT
"RTN","ECXDIVIV",10,0)
 .W ! S DIC=59.5,DIC(0)="QEAMZ" D ^DIC
"RTN","ECXDIVIV",11,0)
 .I Y<0 S OUT=1 Q
"RTN","ECXDIVIV",12,0)
 .I $G(^PS(59.5,+Y,"I"))]"" W "   *INACTIVE*",$C(7)
"RTN","ECXDIVIV",13,0)
 .S DIE=DIC,DA=+Y
"RTN","ECXDIVIV",14,0)
 .S DR=.02 D ^DIE K DA
"RTN","ECXDIVIV",15,0)
 Q
"RTN","ECXDIVIV",16,0)
 ;
"RTN","ECXDIVIV",17,0)
PRT ;print worksheet
"RTN","ECXDIVIV",18,0)
 W !!,"This option will produce a worksheet listing all entries in the IV Room file"
"RTN","ECXDIVIV",19,0)
 W !,"(#59.5).  It should be used to help DSS and Pharmacy services define and"
"RTN","ECXDIVIV",20,0)
 W !,"review the DIVISION assignments for each IV Room.",!! S QFLG=0
"RTN","ECXDIVIV",21,0)
 S QFLG=0,CHKFLG=0
"RTN","ECXDIVIV",22,0)
 D CHK Q:CHKFLG
"RTN","ECXDIVIV",23,0)
 D EN^XUTMDEVQ("START^ECXDIVIV","DSS - IV Room List")
"RTN","ECXDIVIV",24,0)
 I POP D
"RTN","ECXDIVIV",25,0)
 .W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","ECXDIVIV",26,0)
 .D PAUSE
"RTN","ECXDIVIV",27,0)
 Q
"RTN","ECXDIVIV",28,0)
 ;
"RTN","ECXDIVIV",29,0)
START ;queued entry point
"RTN","ECXDIVIV",30,0)
 N CHKFLG,DIV,DIVNM,INACT,IV,IVRM,JJ,LN1,LN2,PDT,PG,QFLG,SS,X,Y
"RTN","ECXDIVIV",31,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXDIVIV",32,0)
 K ^TMP("ECXDIVIV",$J) S QFLG=0,IV=0
"RTN","ECXDIVIV",33,0)
 F  S IV=$O(^PS(59.5,IV)) Q:'IV  I $D(^PS(59.5,IV,0)) D
"RTN","ECXDIVIV",34,0)
 .S IVRM=$E($P(^PS(59.5,IV,0),U),1,30),DIV=$P(^(0),U,4)
"RTN","ECXDIVIV",35,0)
 .S DIVNM=$S(DIV="":"ZZZ",1:$E($P(^DG(40.8,DIV,0),U),1,30))
"RTN","ECXDIVIV",36,0)
 .K INACT I $P($G(^PS(59.5,IV,"I")),U)]"" S INACT=$$FMTE^XLFDT($P(^PS(59.5,IV,"I"),U),1)
"RTN","ECXDIVIV",37,0)
 .S ^TMP("ECXDIVIV",$J,DIVNM,IVRM)=$S($D(INACT):INACT,1:"")
"RTN","ECXDIVIV",38,0)
 ;print report
"RTN","ECXDIVIV",39,0)
 S PG=0,PDT=$$FMTE^XLFDT(DT),$P(LN1,"-",81)="",$P(LN2,"_",30)=""
"RTN","ECXDIVIV",40,0)
 D HDR
"RTN","ECXDIVIV",41,0)
 I '$D(^TMP("ECXDIVIV",$J)) W !!,"No Data found for this worksheet."
"RTN","ECXDIVIV",42,0)
 I $D(^TMP("ECXDIVIV",$J)) S DIVNM="" D
"RTN","ECXDIVIV",43,0)
 .F  S DIVNM=$O(^TMP("ECXDIVIV",$J,DIVNM)) Q:DIVNM=""  Q:QFLG  D
"RTN","ECXDIVIV",44,0)
 ..S IVRM=""
"RTN","ECXDIVIV",45,0)
 ..F  S IVRM=$O(^TMP("ECXDIVIV",$J,DIVNM,IVRM)) Q:IVRM=""  Q:QFLG  D
"RTN","ECXDIVIV",46,0)
 ...S INACT=^TMP("ECXDIVIV",$J,DIVNM,IVRM)
"RTN","ECXDIVIV",47,0)
 ...D:$Y+4>IOSL HDR Q:QFLG
"RTN","ECXDIVIV",48,0)
 ...W !!,IVRM,?34,$S(DIVNM="ZZZ":LN2,1:DIVNM),?60,INACT
"RTN","ECXDIVIV",49,0)
 I $E(IOST)="C"&('QFLG) D PAUSE
"RTN","ECXDIVIV",50,0)
 K ^TMP("ECXDIVIV",$J) S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECXDIVIV",51,0)
 W:$E(IOST)'="C" @IOF
"RTN","ECXDIVIV",52,0)
 D ^%ZISC
"RTN","ECXDIVIV",53,0)
 Q
"RTN","ECXDIVIV",54,0)
 ;
"RTN","ECXDIVIV",55,0)
HDR ;header
"RTN","ECXDIVIV",56,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXDIVIV",57,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1
"RTN","ECXDIVIV",58,0)
 Q:QFLG
"RTN","ECXDIVIV",59,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF
"RTN","ECXDIVIV",60,0)
 W !,"IV Room Worksheet",?72,"Page: ",PG,!,"Printed ",PDT
"RTN","ECXDIVIV",61,0)
 W !!,"IV ROOM",?34,"DIVISION",?60,"INACTIVE DATE",!,LN1
"RTN","ECXDIVIV",62,0)
 Q
"RTN","ECXDIVIV",63,0)
 ;
"RTN","ECXDIVIV",64,0)
CHK ;check for existence of necessary files for division functionality
"RTN","ECXDIVIV",65,0)
 S CHKFLG=0
"RTN","ECXDIVIV",66,0)
 I '$O(^PS(59.5,0)) D  Q:CHKFLG
"RTN","ECXDIVIV",67,0)
 .W !,"The IV Room file (#59.5) does not exist!"
"RTN","ECXDIVIV",68,0)
 .S CHKFLG=1 D PAUSE
"RTN","ECXDIVIV",69,0)
 I '$D(^ECX(728.113,0)) D  Q:CHKFLG
"RTN","ECXDIVIV",70,0)
 .W $C(7),!!,"Your facility appears to be running a version of Inpatient Medications prior to"
"RTN","ECXDIVIV",71,0)
 .W !,"version 4.5 which is necessary to use this option."
"RTN","ECXDIVIV",72,0)
 .S CHKFLG=1 D PAUSE
"RTN","ECXDIVIV",73,0)
 K TEST1 D FIELD^DID(59.5,.02,"","TYPE","TEST1")
"RTN","ECXDIVIV",74,0)
 I '$D(TEST1) D
"RTN","ECXDIVIV",75,0)
 .W $C(7),!!,"The Inpatient Medications Patch PSJ*4.5*27 has not yet been installed!"
"RTN","ECXDIVIV",76,0)
 .W !,"It must be loaded before you can proceed with this option."
"RTN","ECXDIVIV",77,0)
 .S CHKFLG=1 D PAUSE
"RTN","ECXDIVIV",78,0)
 Q
"RTN","ECXDIVIV",79,0)
 ;
"RTN","ECXDIVIV",80,0)
PAUSE ;pause screen
"RTN","ECXDIVIV",81,0)
 I $E(IOST)="C" D
"RTN","ECXDIVIV",82,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXDIVIV",83,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXDIVIV",84,0)
 Q
"RTN","ECXDRUG")
0^59^B5124178
"RTN","ECXDRUG",1,0)
ECXDRUG ;BIR/DMA-Report of Drugs Missing Class or NDC ; 17 Jan 95 / 3:17 PM
"RTN","ECXDRUG",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXDRUG",3,0)
 W @IOF,!!,"This routine will generate a list of drugs missing either VA Class or NDC.",!,"These two elements make up the feeder key for your drug products,",!,"and should be entered.",!!,"Note - supply items may not have an NDC",!!
"RTN","ECXDRUG",4,0)
 S %ZIS="Q" D ^%ZIS K %ZIS Q:POP
"RTN","ECXDRUG",5,0)
 I $D(IO("Q")) S ZTRTN="EN^ECXDRUG",ZTDESC="Report of drugs missing class or NDC" D ^%ZTLOAD,^%ZISC Q
"RTN","ECXDRUG",6,0)
 ;
"RTN","ECXDRUG",7,0)
EN ;entry point
"RTN","ECXDRUG",8,0)
 D HEAD
"RTN","ECXDRUG",9,0)
 S DR="" F  S DR=$O(^PSDRUG("B",DR)) Q:DR=""  Q:$D(ECQ)  F J=0:0 S J=$O(^PSDRUG("B",DR,J)) Q:'J  Q:$D(ECQ)  S A=$G(^PSDRUG(J,0)),B=$G(^(2)) I $P(A,U,2)=""!($P(A,U,3)["S")!($P(B,U,4)="") D  I $Y+5>IOSL D HEAD
"RTN","ECXDRUG",10,0)
 .W !,?5,$P(A,U) W:$P(A,U,2)="" ?50,"YES" W:$P(B,U,4)="" ?60,"YES" W:$P(A,U,3)["S" ?70,"YES"
"RTN","ECXDRUG",11,0)
OUT D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" K DR,J,A,B,ECQ,DIR,DIRUT Q
"RTN","ECXDRUG",12,0)
HEAD I IOST["C-" S DIR(0)="E" D ^DIR I 'Y S ECQ=1 Q
"RTN","ECXDRUG",13,0)
 W:$Y @IOF W !,?25,"DRUG NAME",?48,"MISSING",?58,"MISSING",?68,"SUPPLY",!,?49,"CLASS",?60,"NDC",?69,"ITEM",! Q
"RTN","ECXDRUG",14,0)
 ;
"RTN","ECXDSSD")
0^7^B45164085
"RTN","ECXDSSD",1,0)
ECXDSSD ;ALB/JAP - Derive DSS Department code ;July 16, 1998
"RTN","ECXDSSD",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXDSSD",3,0)
 ;
"RTN","ECXDSSD",4,0)
DERIVE(ECXSVC,ECXPUNIT,ECXDIV,ECXSUF) ;entry point for extrinsic function
"RTN","ECXDSSD",5,0)
 ; input
"RTN","ECXDSSD",6,0)
 ; ECXSVC = null or pointer to file #730; required
"RTN","ECXDSSD",7,0)
 ; ECXPUNIT = null or pointer to file #729; required
"RTN","ECXDSSD",8,0)
 ; ECXDIV = null or pointer to file #727.3; required
"RTN","ECXDSSD",9,0)
 ; ECXSUF = null or character string; optional
"RTN","ECXDSSD",10,0)
 ; output
"RTN","ECXDSSD",11,0)
 ; DSSDEPT = dss department code as ABBCxxx or null
"RTN","ECXDSSD",12,0)
 ;           A=DSS CODE from file (#730)
"RTN","ECXDSSD",13,0)
 ;          BB=DSS PRODUCTION UNIT CODE from file (#729)
"RTN","ECXDSSD",14,0)
 ;           C=DSS DIVISION IDENTIFIER from file (#727.3)
"RTN","ECXDSSD",15,0)
 ;         xxx=suffix of not more than three characters (optional)
"RTN","ECXDSSD",16,0)
 ;
"RTN","ECXDSSD",17,0)
 N DSSDEPT
"RTN","ECXDSSD",18,0)
 S DSSDEPT=""
"RTN","ECXDSSD",19,0)
 Q:'$D(ECXSVC) DSSDEPT Q:'$D(ECXPUNIT) DSSDEPT Q:'$D(ECXDIV) DSSDEPT
"RTN","ECXDSSD",20,0)
 D GETDIV(.ECXDIV)
"RTN","ECXDSSD",21,0)
 I ECXDIV="" Q DSSDEPT
"RTN","ECXDSSD",22,0)
 D GETSVC(.ECXSVC)
"RTN","ECXDSSD",23,0)
 I ECXSVC="" Q DSSDEPT
"RTN","ECXDSSD",24,0)
 D GETPUNIT(.ECXPUNIT)
"RTN","ECXDSSD",25,0)
 I ECXPUNIT="" Q DSSDEPT
"RTN","ECXDSSD",26,0)
 S DSSDEPT=ECXSVC_ECXPUNIT_ECXDIV
"RTN","ECXDSSD",27,0)
 ;if variable ecxsuf does not exist, then do nothing
"RTN","ECXDSSD",28,0)
 ;if variable ecxsuf is null, then assume user interaction for entry
"RTN","ECXDSSD",29,0)
 ;if variable suffix is a character string, then assume no user interaction; validate ecxsuf
"RTN","ECXDSSD",30,0)
 I $D(ECXSUF) D
"RTN","ECXDSSD",31,0)
 .D GETSUF(.ECXSUF)
"RTN","ECXDSSD",32,0)
 .S DSSDEPT=DSSDEPT_ECXSUF
"RTN","ECXDSSD",33,0)
 Q DSSDEPT
"RTN","ECXDSSD",34,0)
 ;
"RTN","ECXDSSD",35,0)
GETDIV(ECXDIV) ;get division portion of dss dept code
"RTN","ECXDSSD",36,0)
 ; input
"RTN","ECXDSSD",37,0)
 ; ECXDIV = pointer to file #40.8 or null; required; passed by reference
"RTN","ECXDSSD",38,0)
 ; output
"RTN","ECXDSSD",39,0)
 ; ECXDIV = dss division identifier or null
"RTN","ECXDSSD",40,0)
 N ECX,USER,DIC,DR,DIQ,DA,X,Y,DTOUT,DUOUT,JJ,SS
"RTN","ECXDSSD",41,0)
 S USER=0
"RTN","ECXDSSD",42,0)
 I ECXDIV="" D  Q:$D(DTOUT)!($D(DUOUT))!(+Y<1)
"RTN","ECXDSSD",43,0)
 .W !!
"RTN","ECXDSSD",44,0)
 .S USER=1
"RTN","ECXDSSD",45,0)
 .S DIC(0)="AEMQZ",DIC="^ECX(727.3," D ^DIC
"RTN","ECXDSSD",46,0)
 .S:+Y>0 ECXDIV=+Y Q
"RTN","ECXDSSD",47,0)
 S DIC="^ECX(727.3,",DR="1;",DIQ(0)="E",DIQ="ECX",DA=ECXDIV
"RTN","ECXDSSD",48,0)
 D EN^DIQ1
"RTN","ECXDSSD",49,0)
 S ECXDIV=$G(ECX(727.3,ECXDIV,1,"E"))
"RTN","ECXDSSD",50,0)
 I ECXDIV="",USER=1 D
"RTN","ECXDSSD",51,0)
 .W !!,"The selected division does not yet have a"
"RTN","ECXDSSD",52,0)
 .W !,"DSS Identifier code defined.",!
"RTN","ECXDSSD",53,0)
 .W !,"Use the Enter/Edit DSS Division Identifier option"
"RTN","ECXDSSD",54,0)
 .W !,"to associate a DSS identifier with this division.",!
"RTN","ECXDSSD",55,0)
 .I $E(IOST)="C" D
"RTN","ECXDSSD",56,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXDSSD",57,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR W !
"RTN","ECXDSSD",58,0)
 Q
"RTN","ECXDSSD",59,0)
 ;
"RTN","ECXDSSD",60,0)
GETSVC(ECXSVC) ;get service portion of dss dept code
"RTN","ECXDSSD",61,0)
 ; input
"RTN","ECXDSSD",62,0)
 ; ECXSVC = pointer to file #730 or null; required; passed by reference
"RTN","ECXDSSD",63,0)
 ; output
"RTN","ECXDSSD",64,0)
 ; ECXSVC = dss service code or null
"RTN","ECXDSSD",65,0)
 N ECX,USER,DIC,DR,DIQ,X,Y,JJ,SS,DA,DTOUT,DUOUT
"RTN","ECXDSSD",66,0)
 S USER=0
"RTN","ECXDSSD",67,0)
 I ECXSVC="" D  Q:$D(DTOUT)!($D(DUOUT))!(+Y<1)
"RTN","ECXDSSD",68,0)
 .W !!
"RTN","ECXDSSD",69,0)
 .S USER=1
"RTN","ECXDSSD",70,0)
 .S DIC(0)="AEMQZ",DIC="^ECC(730," D ^DIC
"RTN","ECXDSSD",71,0)
 .S:+Y>0 ECXSVC=+Y
"RTN","ECXDSSD",72,0)
 S DIC="^ECC(730,",DR="3;",DIQ(0)="E",DIQ="ECX",DA=ECXSVC
"RTN","ECXDSSD",73,0)
 D EN^DIQ1
"RTN","ECXDSSD",74,0)
 S ECXSVC=$G(ECX(730,ECXSVC,3,"E"))
"RTN","ECXDSSD",75,0)
 I ECXSVC="",USER=1 D
"RTN","ECXDSSD",76,0)
 .W !!,"The selected National Service does not have a"
"RTN","ECXDSSD",77,0)
 .W !,"DSS Clinical Service code defined.",!
"RTN","ECXDSSD",78,0)
 .W !,"It cannot be used in a DSS Department code.",!
"RTN","ECXDSSD",79,0)
 .I $E(IOST)="C" D
"RTN","ECXDSSD",80,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXDSSD",81,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR W !
"RTN","ECXDSSD",82,0)
 Q
"RTN","ECXDSSD",83,0)
 ;
"RTN","ECXDSSD",84,0)
GETPUNIT(ECXPUNIT) ;get production unit portion of dss dept code
"RTN","ECXDSSD",85,0)
 ; input
"RTN","ECXDSSD",86,0)
 ; ECXPUNIT = pointer to file #729 or null; required; passed by reference
"RTN","ECXDSSD",87,0)
 ; output
"RTN","ECXDSSD",88,0)
 ; ECXPUNIT = dss production unit code or null
"RTN","ECXDSSD",89,0)
 N ECX,DIC,DR,DIQ,X,Y,DTOUT,DUOUT,DA
"RTN","ECXDSSD",90,0)
 I ECXPUNIT="" D  Q:$D(DTOUT)!($D(DUOUT))!(+Y<1)
"RTN","ECXDSSD",91,0)
 .W !!
"RTN","ECXDSSD",92,0)
 .S DIC(0)="AEMQZ",DIC="^ECX(729," D ^DIC
"RTN","ECXDSSD",93,0)
 .S:+Y>0 ECXPUNIT=+Y
"RTN","ECXDSSD",94,0)
 S DIC="^ECX(729,",DR=".01;",DIQ(0)="E",DIQ="ECX",DA=ECXPUNIT
"RTN","ECXDSSD",95,0)
 D EN^DIQ1
"RTN","ECXDSSD",96,0)
 S ECXPUNIT=$G(ECX(729,ECXPUNIT,.01,"E"))
"RTN","ECXDSSD",97,0)
 Q
"RTN","ECXDSSD",98,0)
 ;
"RTN","ECXDSSD",99,0)
GETSUF(ECXSUF) ;get suffix portion of dss dept code
"RTN","ECXDSSD",100,0)
 ; input
"RTN","ECXDSSD",101,0)
 ; ECXSUF = character string or null; required; passed by reference
"RTN","ECXDSSD",102,0)
 ; output
"RTN","ECXDSSD",103,0)
 ; ECXSUF = character string or null;
"RTN","ECXDSSD",104,0)
 ;          input character string will be returned as null
"RTN","ECXDSSD",105,0)
 N USER,AGAIN,LEN,ZERO,OUT,DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","ECXDSSD",106,0)
 ;ask user for input only if ecxsuf="", otherwise assume no user interaction
"RTN","ECXDSSD",107,0)
 ;variable user acts as a flag --> if =1, then assume user interaction
"RTN","ECXDSSD",108,0)
 S USER=0 S:ECXSUF="" USER=1,AGAIN=0
"RTN","ECXDSSD",109,0)
 ;variable again acts as a flag --> if =1, don't ask user if he wants to enter suffix 
"RTN","ECXDSSD",110,0)
 D SUF2
"RTN","ECXDSSD",111,0)
 Q
"RTN","ECXDSSD",112,0)
SUF2 ;ask user for input if necessary, then validate variable ecxsuf
"RTN","ECXDSSD",113,0)
 I USER=1 D
"RTN","ECXDSSD",114,0)
 .I AGAIN=0 D  Q:$D(DIRUT)!(Y=0)
"RTN","ECXDSSD",115,0)
 ..W !!
"RTN","ECXDSSD",116,0)
 ..S DIR(0)="YA",DIR("A")="Do you want to enter a suffix? ",DIR("B")="NO" K X,Y
"RTN","ECXDSSD",117,0)
 ..D ^DIR K DIR
"RTN","ECXDSSD",118,0)
 .W !!
"RTN","ECXDSSD",119,0)
 .S AGAIN=0
"RTN","ECXDSSD",120,0)
 .S DIR(0)="FA^1:3",DIR("A")="Enter suffix: " K X,Y
"RTN","ECXDSSD",121,0)
 .D ^DIR K DIR
"RTN","ECXDSSD",122,0)
 .Q:$D(DIRUT)  Q:(X="^")&(Y="^")
"RTN","ECXDSSD",123,0)
 .S ECXSUF=Y,LEN=$L(ECXSUF)
"RTN","ECXDSSD",124,0)
 .I ECXSUF["-" D
"RTN","ECXDSSD",125,0)
 ..I $L(ECXSUF)=1 W !!,"Invalid ...try again." S ECXSUF="",AGAIN=1 Q
"RTN","ECXDSSD",126,0)
 ..I $E(ECXSUF,1)'="-" D  Q
"RTN","ECXDSSD",127,0)
 ...W !!,"The hyphen character < - > is only allowed as the"
"RTN","ECXDSSD",128,0)
 ...W !!,"1st character in the suffix.",!
"RTN","ECXDSSD",129,0)
 ...W !,"Try again...",!
"RTN","ECXDSSD",130,0)
 ...S ECXSUF="",AGAIN=1
"RTN","ECXDSSD",131,0)
 ..W !!,"The hyphen character < - > should not be used unless this"
"RTN","ECXDSSD",132,0)
 ..W !,"DSS Department code was previously established in DSS/Austin."
"RTN","ECXDSSD",133,0)
 ..W !
"RTN","ECXDSSD",134,0)
 ..S DIR(0)="YA",DIR("A")="Do you want to remove the hyphen? ",DIR("B")="YES" K X,Y
"RTN","ECXDSSD",135,0)
 ..D ^DIR K DIR
"RTN","ECXDSSD",136,0)
 ..S:($D(DIRUT))!(Y=1) ECXSUF="" S:(Y=1) AGAIN=1
"RTN","ECXDSSD",137,0)
 .Q:AGAIN=1
"RTN","ECXDSSD",138,0)
 .S ZERO=0
"RTN","ECXDSSD",139,0)
 .F I=1:1:LEN S X=$E(ECXSUF,I) D  Q:AGAIN=1
"RTN","ECXDSSD",140,0)
 ..Q:X="-"&(I=1)
"RTN","ECXDSSD",141,0)
 ..I X?1P D  Q:AGAIN=1
"RTN","ECXDSSD",142,0)
 ...W !!,"There is an invalid punctuation character < "_X_" > in the suffix.",!
"RTN","ECXDSSD",143,0)
 ...W !,"Try again...",!
"RTN","ECXDSSD",144,0)
 ...S ECXSUF="",AGAIN=1
"RTN","ECXDSSD",145,0)
 ..I X?1L D  Q:AGAIN=1
"RTN","ECXDSSD",146,0)
 ...W !!,"There is an invalid lowercase character < "_X_" > in the suffix.",!
"RTN","ECXDSSD",147,0)
 ...W !,"Try again...",!
"RTN","ECXDSSD",148,0)
 ...S ECXSUF="",AGAIN=1
"RTN","ECXDSSD",149,0)
 ..S:X="0" ZERO=ZERO+0 S:X'="0" ZERO=ZERO+1
"RTN","ECXDSSD",150,0)
 .Q:AGAIN=1
"RTN","ECXDSSD",151,0)
 .I ZERO=0 D
"RTN","ECXDSSD",152,0)
 ..W !!,"There are too many zeroes in the suffix.",!
"RTN","ECXDSSD",153,0)
 ..W !,"Try again...",!
"RTN","ECXDSSD",154,0)
 ..S ECXSUF="",AGAIN=1
"RTN","ECXDSSD",155,0)
 I USER=1,AGAIN=1 G SUF2
"RTN","ECXDSSD",156,0)
 ;no user interaction; validate ecxsuf
"RTN","ECXDSSD",157,0)
 I USER=0,ECXSUF]"" D
"RTN","ECXDSSD",158,0)
 .S (ZERO,OUT)=0
"RTN","ECXDSSD",159,0)
 .S LEN=$L(ECXSUF) I LEN>3 S ECXSUF="" Q
"RTN","ECXDSSD",160,0)
 .F I=1:1:LEN S X=$E(ECXSUF,I) D  Q:OUT=1
"RTN","ECXDSSD",161,0)
 ..I X="-",I'=1 S ECXSUF="",OUT=1
"RTN","ECXDSSD",162,0)
 ..I X?1P,X'="-" S ECXSUF="",OUT=1
"RTN","ECXDSSD",163,0)
 ..I X?1L S ECXSUF="",OUT=1
"RTN","ECXDSSD",164,0)
 ..S:X="0" ZERO=ZERO+0 S:X'="0" ZERO=ZERO+1
"RTN","ECXDSSD",165,0)
 .I ZERO=0 S ECXSUF=""
"RTN","ECXDSSD",166,0)
 Q
"RTN","ECXDSSD",167,0)
 ;
"RTN","ECXDSSD",168,0)
DECODE ;allow user to decode a dss department code
"RTN","ECXDSSD",169,0)
 N CODE,DESC,OUT,DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","ECXDSSD",170,0)
 W !!,"You may enter a DSS Department as 'ABBC' (no suffix)."
"RTN","ECXDSSD",171,0)
 W !,"The code will be 'translated' into a description and displayed.",!!
"RTN","ECXDSSD",172,0)
 S OUT=0
"RTN","ECXDSSD",173,0)
 F  D  Q:OUT=1  Q:$D(DIRUT)
"RTN","ECXDSSD",174,0)
 .S DIR(0)="FA^4:4",DIR("A")="Enter a DSS Department code: " K X,Y
"RTN","ECXDSSD",175,0)
 .D ^DIR K DIR
"RTN","ECXDSSD",176,0)
 .Q:$D(DIRUT)  Q:(X="^")&(Y="^")
"RTN","ECXDSSD",177,0)
 .S CODE=Y D REVERSE(CODE,.DESC)
"RTN","ECXDSSD",178,0)
 .W !
"RTN","ECXDSSD",179,0)
 .W !?5,"Service ",?20,"<"_$E(CODE,1)_">  = "_$P(DESC,U,1)
"RTN","ECXDSSD",180,0)
 .W !?5,"Prod. Unit ",?20,"<"_$E(CODE,2,3)_"> = "_$P(DESC,U,2)
"RTN","ECXDSSD",181,0)
 .W !?5,"Division ",?20,"<"_$E(CODE,4)_">  = "_$P(DESC,U,3)
"RTN","ECXDSSD",182,0)
 .W !
"RTN","ECXDSSD",183,0)
 .S DIR(0)="YA",DIR("A")="Another one? ",DIR("B")="YES" K X,Y
"RTN","ECXDSSD",184,0)
 .D ^DIR K DIR
"RTN","ECXDSSD",185,0)
 .I Y=0 S OUT=1
"RTN","ECXDSSD",186,0)
 Q
"RTN","ECXDSSD",187,0)
 ;
"RTN","ECXDSSD",188,0)
REVERSE(ECXDEPT,ECXDESC) ;get dss dept code description
"RTN","ECXDSSD",189,0)
 ; input
"RTN","ECXDSSD",190,0)
 ; ECXDEPT = dss dept code as ABBCxxx; required
"RTN","ECXDSSD",191,0)
 ; output
"RTN","ECXDSSD",192,0)
 ; ECXDESC = code description; passed by reference
"RTN","ECXDSSD",193,0)
 ;           service_name^prod_unit_long_desc^division_name/station number
"RTN","ECXDSSD",194,0)
 ;           note: if suffix (xxx) is present, it is ignored because free text
"RTN","ECXDSSD",195,0)
 N SVC,PUNIT,DIV
"RTN","ECXDSSD",196,0)
 Q:$L(ECXDEPT)<4
"RTN","ECXDSSD",197,0)
 S SVC=$E(ECXDEPT,1),PUNIT=$E(ECXDEPT,2,3),DIV=$E(ECXDEPT,4)
"RTN","ECXDSSD",198,0)
 K X,ECXERR S X=$$FIND1^DIC(730,,"X",SVC,"C",,"ECXERR")
"RTN","ECXDSSD",199,0)
 S SVC=$S(X>0:$P(^ECC(730,X,0),U,1),X=0:"Not found",X="":"Error",1:"")
"RTN","ECXDSSD",200,0)
 K X,ECXERR S X=$$FIND1^DIC(729,,"X",PUNIT,"B",,"ECXERR")
"RTN","ECXDSSD",201,0)
 S PUNIT=$S(X>0:$P(^ECX(729,X,0),U,3),X=0:"Not found",X="":"Error",1:"")
"RTN","ECXDSSD",202,0)
 K X,ECXERR S X=$$FIND1^DIC(727.3,,"X",DIV,"C",,"ECXERR")
"RTN","ECXDSSD",203,0)
 S DIV=$S(X>0:$P(^DG(40.8,X,0),U,1)_"/"_$P(^(0),U,2),X=0:"Not found",X="":"Error",1:"")
"RTN","ECXDSSD",204,0)
 S ECXDESC=SVC_U_PUNIT_U_DIV
"RTN","ECXDSSD",205,0)
 Q
"RTN","ECXDVSN")
0^52^B41885150
"RTN","ECXDVSN",1,0)
ECXDVSN ;ALB/JAP - Division selection utility ;Sep 29, 1997
"RTN","ECXDVSN",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXDVSN",3,0)
 ;
"RTN","ECXDVSN",4,0)
ADM(ECXDIV,ECXALL,ECXSTART,ECXEND,ECXERR) ;division information for ADM extract audit report
"RTN","ECXDVSN",5,0)
 ;selected inpatient divisions from medical center division file (#40.8)
"RTN","ECXDVSN",6,0)
 ;   input
"RTN","ECXDVSN",7,0)
 ;   ECXDIV = array of inpatient divisions selected (required)
"RTN","ECXDVSN",8,0)
 ;            passed by reference array containing
"RTN","ECXDVSN",9,0)
 ;            selected divisions;
"RTN","ECXDVSN",10,0)
 ;   ECXALL = 1/0 (optional)
"RTN","ECXDVSN",11,0)
 ;            1==> user wants all inpatient divisions OR
"RTN","ECXDVSN",12,0)
 ;                 facility is non-divisional
"RTN","ECXDVSN",13,0)
 ;            0==> user wants to select some divisions
"RTN","ECXDVSN",14,0)
 ;            if ECXALL not defined, then assume 1
"RTN","ECXDVSN",15,0)
 ;   ECXSTART = start date of date range (optional)
"RTN","ECXDVSN",16,0)
 ;   ECXEND   = end date of date range (optional)
"RTN","ECXDVSN",17,0)
 ;   ECXERR   = passed by reference for error return (required)
"RTN","ECXDVSN",18,0)
 ;   output
"RTN","ECXDVSN",19,0)
 ;   ECXDIV = array of divisions selected from file #40.8;
"RTN","ECXDVSN",20,0)
 ;            if ECXALL=1, then array contains all divisions 
"RTN","ECXDVSN",21,0)
 ;            if ECXALL=0, then array contains user-selected divisions
"RTN","ECXDVSN",22,0)
 ;    ECXDIV(ien in file #40.8) = ien in file #4^name^station number^primary indicator^active indicator^dss id
"RTN","ECXDVSN",23,0)
 ;   error CODE
"RTN","ECXDVSN",24,0)
 ;   ECXERR   = 1, if input problem occurs
"RTN","ECXDVSN",25,0)
 ;              0, otherwise
"RTN","ECXDVSN",26,0)
 ;
"RTN","ECXDVSN",27,0)
 N OUT,DIC,X,Y,NM,ECXD,ECXIEN,ECXDIEN,ECXACT,ECXNAME,ECXNUM
"RTN","ECXDVSN",28,0)
 S (OUT,ECXERR)=0
"RTN","ECXDVSN",29,0)
 ;if start date or end date missing, then both default to today
"RTN","ECXDVSN",30,0)
 I '$G(ECXSTART)!('$G(ECXEND)) S (ECXSTART,ECXEND)=DT
"RTN","ECXDVSN",31,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN",32,0)
 I ECXALL=1 D
"RTN","ECXDVSN",33,0)
 .S NM="" F  S NM=$O(^DG(40.8,"B",NM)) Q:NM=""  S ECXIEN=$O(^(NM,"")) D
"RTN","ECXDVSN",34,0)
 ..Q:+$P(^DG(40.8,ECXIEN,0),U,3)=1
"RTN","ECXDVSN",35,0)
 ..K Y S DIC="^DG(40.8,",DIC(0)="NZ",X=ECXIEN D ^DIC
"RTN","ECXDVSN",36,0)
 ..Q:Y=-1
"RTN","ECXDVSN",37,0)
 ..S ECXNAME=$P(Y(0),U,1),ECXNUM=$P(Y(0),U,2),ECXDIEN=$P(Y(0),U,7)
"RTN","ECXDVSN",38,0)
 ..S ECXDIV(ECXIEN)=ECXDIEN_U_ECXNAME_U_ECXNUM
"RTN","ECXDVSN",39,0)
 ..D ACTDIV(ECXIEN,ECXSTART,ECXEND,.ECXD,.ECXACT)
"RTN","ECXDVSN",40,0)
 ..S ECXDIV(ECXIEN)=ECXDIV(ECXIEN)_U_ECXD_U_ECXACT
"RTN","ECXDVSN",41,0)
 ..I $D(^ECX(727.3,ECXIEN)) D
"RTN","ECXDVSN",42,0)
 ...S ECXDIV(ECXIEN)=ECXDIV(ECXIEN)_U_$P($G(^ECX(727.3,ECXIEN,0)),U,2)
"RTN","ECXDVSN",43,0)
 I ECXALL=0 F  Q:OUT!ECXERR  D
"RTN","ECXDVSN",44,0)
 .K Y S DIC="^DG(40.8,",DIC(0)="AEMQZ",DIC("S")="I $P(^(0),U,3)'=1"
"RTN","ECXDVSN",45,0)
 .D ^DIC I $G(DUOUT)!($G(DTOUT)) S OUT=1,ECXERR=1 Q
"RTN","ECXDVSN",46,0)
 .I Y=-1,X="" S OUT=1 Q
"RTN","ECXDVSN",47,0)
 .S ECXIEN=+Y,ECXNAME=$P(Y(0),U,1),ECXNUM=$P(Y(0),U,2),ECXDIEN=$P(Y(0),U,7)
"RTN","ECXDVSN",48,0)
 .S ECXDIV(ECXIEN)=ECXDIEN_U_ECXNAME_U_ECXNUM
"RTN","ECXDVSN",49,0)
 .D ACTDIV(ECXIEN,ECXSTART,ECXEND,.ECXD,.ECXACT)
"RTN","ECXDVSN",50,0)
 .S ECXDIV(ECXIEN)=ECXDIV(ECXIEN)_U_ECXD_U_ECXACT
"RTN","ECXDVSN",51,0)
 .I $D(^ECX(727.3,ECXIEN)) D
"RTN","ECXDVSN",52,0)
 ..S ECXDIV(ECXIEN)=ECXDIV(ECXIEN)_U_$P($G(^ECX(727.3,ECXIEN,0)),U,2)
"RTN","ECXDVSN",53,0)
 .I 'ECXACT W !!,?5,"Please note: Division "_ECXNUM_" was not active during",!,?5,"             selected date range.",!
"RTN","ECXDVSN",54,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN",55,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN",56,0)
 Q
"RTN","ECXDVSN",57,0)
 ;
"RTN","ECXDVSN",58,0)
ACTDIV(ECXIEN,ECXSTART,ECXEND,ECXD,ECXACT) ;determine if division active at anytime during date range
"RTN","ECXDVSN",59,0)
 ;to be called by ADM^ECXDVSN
"RTN","ECXDVSN",60,0)
 ;   input
"RTN","ECXDVSN",61,0)
 ;   ECXIEN   = ien in file #40.8; required
"RTN","ECXDVSN",62,0)
 ;   ECXSTART = start of date range; FM format; required
"RTN","ECXDVSN",63,0)
 ;   ECXEND   = end of date range; FM format; required
"RTN","ECXDVSN",64,0)
 ;   output
"RTN","ECXDVSN",65,0)
 ;   ECXD   = 1/0; passed by reference
"RTN","ECXDVSN",66,0)
 ;            1 indicates primary division
"RTN","ECXDVSN",67,0)
 ;   ECXACT = 1/0; passed by reference
"RTN","ECXDVSN",68,0)
 ;            returns 0, if division not active during date range;
"RTN","ECXDVSN",69,0)
 ;            note: only start date and end date are checked; if division
"RTN","ECXDVSN",70,0)
 ;                  inactive on both dates, then division assumed inactive
"RTN","ECXDVSN",71,0)
 ;                  for entire date range
"RTN","ECXDVSN",72,0)
 ;assume division active; set ecxact=1
"RTN","ECXDVSN",73,0)
 S ECXACT=1
"RTN","ECXDVSN",74,0)
 ;check if division active on start date or end date;
"RTN","ECXDVSN",75,0)
 ;these dates are normally within the same month
"RTN","ECXDVSN",76,0)
 F ECXDATE=ECXSTART,ECXEND D
"RTN","ECXDVSN",77,0)
 .S DATE(ECXDATE)=$$SITE^VASITE(ECXDATE,ECXIEN)
"RTN","ECXDVSN",78,0)
 .S ECXD=0
"RTN","ECXDVSN",79,0)
 .I ECXIEN=$$PRIM^VASITE(ECXDATE) S ECXD=1
"RTN","ECXDVSN",80,0)
 ;if not active on start date and not active on end date, reset ecxact=0
"RTN","ECXDVSN",81,0)
 I DATE(ECXSTART)=-1,DATE(ECXEND)=-1 S ECXACT=0
"RTN","ECXDVSN",82,0)
 Q
"RTN","ECXDVSN",83,0)
 ;
"RTN","ECXDVSN",84,0)
MOV(ECXDIV,ECXALL,ECXSTART,ECXEND,ECXERR) ;division information for MOV extract audit report 
"RTN","ECXDVSN",85,0)
 ;selected divisions from medical center division file (#40.8)
"RTN","ECXDVSN",86,0)
 ;   input
"RTN","ECXDVSN",87,0)
 ;   (see ADM)
"RTN","ECXDVSN",88,0)
 ;   output
"RTN","ECXDVSN",89,0)
 ;   (see ADM)
"RTN","ECXDVSN",90,0)
 ;
"RTN","ECXDVSN",91,0)
 D ADM^ECXDVSN(.ECXDIV,ECXALL,ECXSTART,ECXEND,.ECXERR)
"RTN","ECXDVSN",92,0)
 Q
"RTN","ECXDVSN",93,0)
 ;
"RTN","ECXDVSN",94,0)
PAS(ECXDIV,ECXALL,ECXERR) ;setup division/site information for PAS extract audit report
"RTN","ECXDVSN",95,0)
 ;   input
"RTN","ECXDVSN",96,0)
 ;   ECXDIV = passed by reference array variable
"RTN","ECXDVSN",97,0)
 ;   ECXALL = 1
"RTN","ECXDVSN",98,0)
 ;   output
"RTN","ECXDVSN",99,0)
 ;   ECXDIV = data for default division/site;
"RTN","ECXDVSN",100,0)
 ;            ECXDIV(1)=ien in file #4^name^station number
"RTN","ECXDVSN",101,0)
 ;            where the INSTITUTION file pointer is obtained from file #728
"RTN","ECXDVSN",102,0)
 ;
"RTN","ECXDVSN",103,0)
 S ECXALL=1 D DEFAULT^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXDVSN",104,0)
 Q
"RTN","ECXDVSN",105,0)
 ;
"RTN","ECXDVSN",106,0)
TRT(ECXDIV,ECXALL,ECXERR) ;setup division/site information for TRT extract audit report
"RTN","ECXDVSN",107,0)
 ;   input
"RTN","ECXDVSN",108,0)
 ;   ECXDIV = passed by reference array variable
"RTN","ECXDVSN",109,0)
 ;   ECXALL = 1
"RTN","ECXDVSN",110,0)
 ;   output
"RTN","ECXDVSN",111,0)
 ;   ECXDIV = data for default division/site;
"RTN","ECXDVSN",112,0)
 ;            ECXDIV(1)=ien in file #4^name^station number
"RTN","ECXDVSN",113,0)
 ;            where the INSTITUTION file pointer is obtained from file #728
"RTN","ECXDVSN",114,0)
 ;
"RTN","ECXDVSN",115,0)
 S ECXALL=1 D DEFAULT^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXDVSN",116,0)
 Q
"RTN","ECXDVSN",117,0)
 ;
"RTN","ECXDVSN",118,0)
DEFAULT(ECXDIV,ECXALL,ECXERR) ;default division/site information for audit report
"RTN","ECXDVSN",119,0)
 ;   input
"RTN","ECXDVSN",120,0)
 ;   ECXDIV = passed by reference array variable
"RTN","ECXDVSN",121,0)
 ;   ECXALL = 1
"RTN","ECXDVSN",122,0)
 ;   output
"RTN","ECXDVSN",123,0)
 ;   ECXDIV = data for default division/site;
"RTN","ECXDVSN",124,0)
 ;            ECXDIV(1)=ien in file #4^name^station number
"RTN","ECXDVSN",125,0)
 ;            where the INSTITUTION file pointer is obtained from file #728
"RTN","ECXDVSN",126,0)
 ;
"RTN","ECXDVSN",127,0)
 N DIV,ECX
"RTN","ECXDVSN",128,0)
 S ECXERR=0
"RTN","ECXDVSN",129,0)
 S DIV=$P($G(^ECX(728,1,0)),U,1)
"RTN","ECXDVSN",130,0)
 I DIV="" S ECXERR=1 Q
"RTN","ECXDVSN",131,0)
 K ECX S DIC="^DIC(4,",DIQ(0)="I",DIQ="ECX",DA=DIV,DR=".01;99" D EN^DIQ1
"RTN","ECXDVSN",132,0)
 I $D(ECX) S ECXDIV(1)=DIV_U_ECX(4,DIV,.01,"I")_U_ECX(4,DIV,99,"I")
"RTN","ECXDVSN",133,0)
 I '$D(ECX) S ECXERR=1
"RTN","ECXDVSN",134,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN",135,0)
 Q
"RTN","ECXDVSN",136,0)
 ;
"RTN","ECXDVSN",137,0)
DEN(ECXDIV,ECXALL,ECXERR) ;setup division/site information for DEN extract audit report
"RTN","ECXDVSN",138,0)
 ;   input
"RTN","ECXDVSN",139,0)
 ;   ECXDIV = passed by reference array variable (required)
"RTN","ECXDVSN",140,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN",141,0)
 ;            '0' indicates user to select dental division;
"RTN","ECXDVSN",142,0)
 ;            '1' indicates 'all' dental divisions or only one division
"RTN","ECXDVSN",143,0)
 ;                exists in file #225; default is '1'
"RTN","ECXDVSN",144,0)
 ;   output
"RTN","ECXDVSN",145,0)
 ;   ECXDIV = data for dental division/site;
"RTN","ECXDVSN",146,0)
 ;            ECXDIV(ien in file #225)=ien in file #4^name^station number
"RTN","ECXDVSN",147,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN",148,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN",149,0)
 N X,Y,DIC,DTOUT,DUOUT,DIRUT,OUT,ECXD,ECXIEN
"RTN","ECXDVSN",150,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN",151,0)
 S ECXERR=0,ECXD=""
"RTN","ECXDVSN",152,0)
 ;if ecxall=1, then all dental divisions/sites
"RTN","ECXDVSN",153,0)
 I ECXALL=1 D
"RTN","ECXDVSN",154,0)
 .F  S ECXD=$O(^DENT(225,"B",ECXD)) Q:ECXD=""  S ECXIEN=$O(^(ECXD,"")) D
"RTN","ECXDVSN",155,0)
 ..S $P(ECXDIV(ECXIEN),U,3)=ECXD S DIC="^DIC(4,",DIC(0)="MX",X=ECXD D ^DIC
"RTN","ECXDVSN",156,0)
 ..S:+Y>0 ECXDIV(ECXIEN)=Y S:+Y=-1 ECXDIV(ECXIEN)=U
"RTN","ECXDVSN",157,0)
 ..S ECXDIV(ECXIEN)=ECXDIV(ECXIEN)_U_ECXD
"RTN","ECXDVSN",158,0)
 ;if ecxall=0, user selects some/all dental divisions/sites
"RTN","ECXDVSN",159,0)
 I ECXALL=0 S OUT=0 D
"RTN","ECXDVSN",160,0)
 .F  Q:OUT!ECXERR  D
"RTN","ECXDVSN",161,0)
 ..S DIC="^DENT(225,",DIC(0)="AEMQ" K X,Y D ^DIC
"RTN","ECXDVSN",162,0)
 ..I $G(DUOUT)!($G(DTOUT)) S OUT=1,ECXERR=1 Q
"RTN","ECXDVSN",163,0)
 ..I Y=-1,X="" S OUT=1 Q
"RTN","ECXDVSN",164,0)
 ..S ECXIEN=+Y,ECXD=$P(Y,U,2) K X,Y
"RTN","ECXDVSN",165,0)
 ..S DIC="^DIC(4,",DIC(0)="MX",X=ECXD D ^DIC
"RTN","ECXDVSN",166,0)
 ..S:+Y>0 ECXDIV(ECXIEN)=Y S:+Y=-1 ECXDIV(ECXIEN)=U
"RTN","ECXDVSN",167,0)
 ..S ECXDIV(ECXIEN)=ECXDIV(ECXIEN)_U_ECXD
"RTN","ECXDVSN",168,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN",169,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN",170,0)
 Q
"RTN","ECXDVSN",171,0)
 ;
"RTN","ECXDVSN",172,0)
ECS(ECXDIV,ECXALL,ECXERR) ;setup division/location information for ECS extract audit report
"RTN","ECXDVSN",173,0)
 ;   input
"RTN","ECXDVSN",174,0)
 ;   ECXDIV = passed by reference array variable (required)
"RTN","ECXDVSN",175,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN",176,0)
 ;            '0' indicates user to select EC location(s);
"RTN","ECXDVSN",177,0)
 ;            '1' indicates 'all' locations or only one location
"RTN","ECXDVSN",178,0)
 ;                exists in file #4 "LOC" index;
"RTN","ECXDVSN",179,0)
 ;            default is '1'
"RTN","ECXDVSN",180,0)
 ;   output
"RTN","ECXDVSN",181,0)
 ;   ECXDIV = data for EC location;
"RTN","ECXDVSN",182,0)
 ;            ECXDIV(ien in file #4)=ien in file #4^name^station number
"RTN","ECXDVSN",183,0)
 ;            where the INSTITUTION file pointer is obtained from 
"RTN","ECXDVSN",184,0)
 ;            "LOC" index in file #4
"RTN","ECXDVSN",185,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN",186,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN",187,0)
 ;
"RTN","ECXDVSN",188,0)
 N X,Y,I,DIC,DIR,DIRUT,DTOUT,DUOUT,NM,OUT,ECXD,ECXIEN,ECXLOC
"RTN","ECXDVSN",189,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN",190,0)
 S ECXERR=0,ECXD="",I=0
"RTN","ECXDVSN",191,0)
 ;get all available ec locations in ecxloc array
"RTN","ECXDVSN",192,0)
 F  S ECXD=$O(^DIC(4,"LOC",ECXD)) Q:ECXD=""  S I=I+1,ECXIEN=$O(^(ECXD,"")),ECXLOC(I)=ECXD_U_ECXIEN_U_$P($G(^DIC(4,ECXIEN,99)),U,1)
"RTN","ECXDVSN",193,0)
 ;if ecxall=1, then all ec locations
"RTN","ECXDVSN",194,0)
 I ECXALL=1 S I="" D  Q
"RTN","ECXDVSN",195,0)
 .F  S I=$O(ECXLOC(I)) Q:I=""  D
"RTN","ECXDVSN",196,0)
 ..S ECXIEN=$P(ECXLOC(I),U,2)
"RTN","ECXDVSN",197,0)
 ..S ECXDIV(ECXIEN)=ECXIEN_U_$P(ECXLOC(I),U,1)_U_$P(ECXLOC(I),U,3)
"RTN","ECXDVSN",198,0)
 I ECXALL=0 S OUT=0,I=0 D
"RTN","ECXDVSN",199,0)
 .W !!,"Event Capture Locations:",! S I=0,DIR(0)="SXO^"
"RTN","ECXDVSN",200,0)
 .;spaces are embedded in dir(0) to prevent user from selecting by alpha characters in name
"RTN","ECXDVSN",201,0)
 .F  S I=$O(ECXLOC(I)) Q:I=""  S NM=$P(ECXLOC(I),U,1) W !,?10,I_"  ",NM S DIR(0)=DIR(0)_I_":"_"-   "_NM_";"
"RTN","ECXDVSN",202,0)
 .W !
"RTN","ECXDVSN",203,0)
 .F  Q:OUT!ECXERR  D
"RTN","ECXDVSN",204,0)
 ..S DIR("A")="Select Event Capture Location",DIR("S")="I +Y=Y"
"RTN","ECXDVSN",205,0)
 ..D ^DIR
"RTN","ECXDVSN",206,0)
 ..I $G(DTOUT)!($G(DUOUT)) S ECXERR=1 Q
"RTN","ECXDVSN",207,0)
 ..I X="" D  Q
"RTN","ECXDVSN",208,0)
 ...I '$D(ECXDIV) W !!,"No Location selected...exiting.",! S OUT=1 Q
"RTN","ECXDVSN",209,0)
 ...W !!,"You have selected the following Location(s):",!
"RTN","ECXDVSN",210,0)
 ...S I=0 F  S I=$O(ECXDIV(I)) Q:I=""  W !,?10,$P(ECXDIV(I),U,2)_" ("_$P(ECXDIV(I),U,3)_")"
"RTN","ECXDVSN",211,0)
 ...W ! K X,Y,DIR S DIR(0)="Y",DIR("A")="Is that ok",DIR("B")="YES" D ^DIR
"RTN","ECXDVSN",212,0)
 ...I $D(DIRUT) S ECXERR=1
"RTN","ECXDVSN",213,0)
 ...I Y=0 S ECXERR=1
"RTN","ECXDVSN",214,0)
 ...S OUT=1
"RTN","ECXDVSN",215,0)
 ..S ECXIEN=$P(ECXLOC(X),U,2)
"RTN","ECXDVSN",216,0)
 ..S ECXDIV(ECXIEN)=ECXIEN_U_$P(ECXLOC(X),U,1)_U_$P(ECXLOC(X),U,3)
"RTN","ECXDVSN",217,0)
 ;exit
"RTN","ECXDVSN",218,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN",219,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN",220,0)
 Q
"RTN","ECXDVSN1")
0^60^B27999936
"RTN","ECXDVSN1",1,0)
ECXDVSN1 ;ALB/JAP - Division selection utility (cont.) ;Sep 30, 1997
"RTN","ECXDVSN1",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXDVSN1",3,0)
 ;
"RTN","ECXDVSN1",4,0)
ECQ(ECXDIV,ECXALL,ECXERR) ;setup division/site information for QSR extract audit report
"RTN","ECXDVSN1",5,0)
 ;   input
"RTN","ECXDVSN1",6,0)
 ;   ECXDIV = passed by reference array variable (required)
"RTN","ECXDVSN1",7,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN1",8,0)
 ;            '0' indicates user to select QUASAR site/division;
"RTN","ECXDVSN1",9,0)
 ;            '1' indicates 'all' sites/divisions or only one site/division
"RTN","ECXDVSN1",10,0)
 ;                exists in file #509850.8; currently only one site is allowed
"RTN","ECXDVSN1",11,0)
 ;                to be defined;
"RTN","ECXDVSN1",12,0)
 ;            default is '1'
"RTN","ECXDVSN1",13,0)
 ;   output
"RTN","ECXDVSN1",14,0)
 ;   ECXDIV = data for QUASAR site/division;
"RTN","ECXDVSN1",15,0)
 ;            ECXDIV(ien in file #4)=ien in file #509850.8^name^station number
"RTN","ECXDVSN1",16,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN1",17,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN1",18,0)
 ;
"RTN","ECXDVSN1",19,0)
 N X,Y,DIC,OUT,ECX,ECXD,ECXIEN
"RTN","ECXDVSN1",20,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN1",21,0)
 ;currently, only ONE site may be defined in file #509850.8
"RTN","ECXDVSN1",22,0)
 S:ECXALL=0 ECXALL=1
"RTN","ECXDVSN1",23,0)
 S ECXERR=0,ECXD=""
"RTN","ECXDVSN1",24,0)
 ;if ecxall=1, then all QUASAR sites/divisions; but there's only one
"RTN","ECXDVSN1",25,0)
 I ECXALL=1 D
"RTN","ECXDVSN1",26,0)
 .F  S ECXD=$O(^ACK(509850.8,"B",ECXD)) Q:ECXD=""  S ECXIEN=$O(^(ECXD,"")) D
"RTN","ECXDVSN1",27,0)
 ..K ECX S DIC="^DIC(4,",DIQ(0)="I",DIQ="ECX",DA=ECXD,DR=".01;99" D EN^DIQ1
"RTN","ECXDVSN1",28,0)
 ..I $D(ECX) S ECXDIV(ECXD)=ECXIEN_U_ECX(4,ECXD,.01,"I")_U_ECX(4,ECXD,99,"I")
"RTN","ECXDVSN1",29,0)
 ..I '$D(ECX) S ECXERR=1
"RTN","ECXDVSN1",30,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN1",31,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN1",32,0)
 Q
"RTN","ECXDVSN1",33,0)
 ;
"RTN","ECXDVSN1",34,0)
LAB(ECXACC,ECXALL,ECXERR) ;setup accession area information for LAB extract audit report
"RTN","ECXDVSN1",35,0)
 ;   input
"RTN","ECXDVSN1",36,0)
 ;   ECXACC = passed by reference array variable (required)
"RTN","ECXDVSN1",37,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN1",38,0)
 ;            '0' indicates user to select Accession Area(s);
"RTN","ECXDVSN1",39,0)
 ;            '1' indicates 'all' Accession Areas are selected
"RTN","ECXDVSN1",40,0)
 ;            default is '1'
"RTN","ECXDVSN1",41,0)
 ;   output
"RTN","ECXDVSN1",42,0)
 ;   ECXACC = data for Accession Area(s);
"RTN","ECXDVSN1",43,0)
 ;            ECXACC(ien in file #68)=name^abbreviation
"RTN","ECXDVSN1",44,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN1",45,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN1",46,0)
 ;
"RTN","ECXDVSN1",47,0)
 N X,Y,DIC,DIQ,DA,DR,DTOUT,DUOUT,DIRUT,OUT,ECX,ECXA,ECXIEN
"RTN","ECXDVSN1",48,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN1",49,0)
 S ECXERR=0,ECXA=""
"RTN","ECXDVSN1",50,0)
 ;if ecxall=1, then all accession areas are selected
"RTN","ECXDVSN1",51,0)
 I ECXALL=1 D
"RTN","ECXDVSN1",52,0)
 .;^LRO(68,"B",xxx,ien)=1 indicates a synonym; skip synonyms
"RTN","ECXDVSN1",53,0)
 .F  S ECXA=$O(^LRO(68,"B",ECXA)) Q:ECXA=""  S ECXIEN=$O(^(ECXA,"")) D
"RTN","ECXDVSN1",54,0)
 ..Q:^LRO(68,"B",ECXA,ECXIEN)=1
"RTN","ECXDVSN1",55,0)
 ..K ECX S DIC="^LRO(68,",DR=".01;.09",DIQ="ECX",DA=ECXIEN D EN^DIQ1
"RTN","ECXDVSN1",56,0)
 ..Q:'$D(ECX)
"RTN","ECXDVSN1",57,0)
 ..;acc. areas with ZZ in name indicates no longer used
"RTN","ECXDVSN1",58,0)
 ..Q:$E(ECX(68,ECXIEN,.01),1,2)="ZZ"
"RTN","ECXDVSN1",59,0)
 ..S ECXACC(ECXIEN)=ECX(68,ECXIEN,.01)_U_ECX(68,ECXIEN,.09)
"RTN","ECXDVSN1",60,0)
 ;if ecxall=0, user selects some/all acc. areas
"RTN","ECXDVSN1",61,0)
 ;allow user to choose "ZZ"'d acc. area even though it may currently be inactive
"RTN","ECXDVSN1",62,0)
 I ECXALL=0 S OUT=0 D
"RTN","ECXDVSN1",63,0)
 .F  Q:OUT!ECXERR  D
"RTN","ECXDVSN1",64,0)
 ..S DIC="^LRO(68,",DIC(0)="AEMQZ" K X,Y D ^DIC
"RTN","ECXDVSN1",65,0)
 ..I $G(DUOUT)!($G(DTOUT)) S OUT=1,ECXERR=1 Q
"RTN","ECXDVSN1",66,0)
 ..I Y=-1,X="" S OUT=1 Q
"RTN","ECXDVSN1",67,0)
 ..S ECXACC(+Y)=$P(Y(0),U,1)_U_$P(Y(0),U,11)
"RTN","ECXDVSN1",68,0)
 I ECXERR=1 K ECXACC
"RTN","ECXDVSN1",69,0)
 I '$D(ECXACC) S ECXERR=1
"RTN","ECXDVSN1",70,0)
 Q
"RTN","ECXDVSN1",71,0)
 ;
"RTN","ECXDVSN1",72,0)
NUR(ECXDIV,ECXALL,ECXERR) ;setup accession area information for LAB extract audit report
"RTN","ECXDVSN1",73,0)
 ;   input
"RTN","ECXDVSN1",74,0)
 ;   ECXDIV = passed by reference array variable (required)
"RTN","ECXDVSN1",75,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN1",76,0)
 ;            '0' indicates user to select nursing location(s)/division(s);
"RTN","ECXDVSN1",77,0)
 ;            '1' indicates 'all' nursing locations and medical center divisions 
"RTN","ECXDVSN1",78,0)
 ;                are selected or facility is non-divisional;
"RTN","ECXDVSN1",79,0)
 ;            default is '1'
"RTN","ECXDVSN1",80,0)
 ;   output
"RTN","ECXDVSN1",81,0)
 ;   ECXDIV = data for nursing location(s) and medical center division(s);
"RTN","ECXDVSN1",82,0)
 ;            ECXDIV("D",ien in file #40.8)=ien in file #4^name^station number
"RTN","ECXDVSN1",83,0)
 ;            ECXDIV(ien in file #211.4,ien in file #40.8)=ien in file #44
"RTN","ECXDVSN1",84,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN1",85,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN1",86,0)
 ;
"RTN","ECXDVSN1",87,0)
 ;N X,Y,DIC,DIQ,DA,OUT,ECX,ECXLOC,ECXSC,ECXDIEN,ECXNLIEN,ECXNLNM,ECXPRIME
"RTN","ECXDVSN1",88,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN1",89,0)
 S (ECXERR,OUT)=0,ECXSC=""
"RTN","ECXDVSN1",90,0)
 ;get ien in file #40.8 of primary division
"RTN","ECXDVSN1",91,0)
 S ECXPRIME=$$PRIM^VASITE(DT)
"RTN","ECXDVSN1",92,0)
 ;associate nursing locations with medical center divisions
"RTN","ECXDVSN1",93,0)
 F  S ECXSC=$O(^NURSF(211.4,"B",ECXSC)) Q:ECXSC=""  S ECXNLIEN="" F  S ECXNLIEN=$O(^NURSF(211.4,"B",ECXSC,ECXNLIEN)) Q:ECXNLIEN=""  D
"RTN","ECXDVSN1",94,0)
 .K ECX
"RTN","ECXDVSN1",95,0)
 .S ECXDIEN=0,ECXNLNM="",DIC="^SC(",DIQ(0)="I",DIQ="ECX",DA=ECXSC,DR=".01;3.5" D EN^DIQ1
"RTN","ECXDVSN1",96,0)
 .;if the 15th piece is null or y=-1 then ecxdien=primary division as default
"RTN","ECXDVSN1",97,0)
 .I $D(ECX) S ECXDIEN=+ECX(44,ECXSC,3.5,"I"),ECXNLNM=ECX(44,ECXSC,.01,"I")
"RTN","ECXDVSN1",98,0)
 .S:ECXDIEN=0 ECXDIEN=ECXPRIME
"RTN","ECXDVSN1",99,0)
 .S ECXLOC(ECXDIEN)="",ECXLOC(ECXDIEN,ECXNLIEN)=ECXSC_U_ECXNLNM
"RTN","ECXDVSN1",100,0)
 ;
"RTN","ECXDVSN1",101,0)
 ;if ecxall=1 don't prompt; setup all nursing locations and divisions incl. those w/o division
"RTN","ECXDVSN1",102,0)
 I ECXALL=1 S ECXDIEN="" D
"RTN","ECXDVSN1",103,0)
 .F  S ECXDIEN=$O(ECXLOC(ECXDIEN)) Q:ECXDIEN=""  D
"RTN","ECXDVSN1",104,0)
 ..S DIC="^DG(40.8,",DIC(0)="NXZ",X=ECXDIEN D ^DIC I +Y>0 D
"RTN","ECXDVSN1",105,0)
 ...S ECXDIV("D",ECXDIEN)=$P(Y(0),U,7)_U_$P(Y(0),U,1)_U_$P(Y(0),U,2),ECXNLIEN=""
"RTN","ECXDVSN1",106,0)
 ...F  S ECXNLIEN=$O(ECXLOC(ECXDIEN,ECXNLIEN)) Q:ECXNLIEN=""  S ECXDIV(ECXNLIEN,ECXDIEN)=ECXLOC(ECXDIEN,ECXNLIEN)
"RTN","ECXDVSN1",107,0)
 ;
"RTN","ECXDVSN1",108,0)
 ;if ecxall=0 let user select division(s)
"RTN","ECXDVSN1",109,0)
 I ECXALL=0 F  Q:OUT!ECXERR  D
"RTN","ECXDVSN1",110,0)
 .S DIC="^DG(40.8,",DIC(0)="AEMQZ",DIC("S")="I $P(^(0),U,3)'=1"
"RTN","ECXDVSN1",111,0)
 .D ^DIC I $G(DUOUT)!($G(DTOUT)) S OUT=1,ECXERR=1 Q
"RTN","ECXDVSN1",112,0)
 .I Y=-1,X="" S OUT=1 Q
"RTN","ECXDVSN1",113,0)
 .S ECXDIEN=+Y,NM=$P(Y,U,2)
"RTN","ECXDVSN1",114,0)
 .I '$D(ECXLOC(ECXDIEN)) D  Q
"RTN","ECXDVSN1",115,0)
 ..W !!,?5,"Division "_NM_" not associated with Nursing Locations.",!,?5,"Try again...",!
"RTN","ECXDVSN1",116,0)
 .S ECXDIV("D",ECXDIEN)=$P(Y(0),U,7)_U_$P(Y(0),U,1)_U_$P(Y(0),U,2),ECXNLIEN=""
"RTN","ECXDVSN1",117,0)
 .F  S ECXNLIEN=$O(ECXLOC(ECXDIEN,ECXNLIEN)) Q:ECXNLIEN=""  S ECXDIV(ECXNLIEN,ECXDIEN)=ECXLOC(ECXDIEN,ECXNLIEN)
"RTN","ECXDVSN1",118,0)
 ;in case of user up-arrow out or timeout, make sure nothing returned in ecxdiv
"RTN","ECXDVSN1",119,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN1",120,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN1",121,0)
 Q
"RTN","ECXDVSN1",122,0)
 ;
"RTN","ECXDVSN1",123,0)
PRE(ECXDIV,ECXALL,ECXERR) ;setup site information for PRE extract audit report
"RTN","ECXDVSN1",124,0)
 ;   input
"RTN","ECXDVSN1",125,0)
 ;   ECXDIV = passed by reference array variable (required)
"RTN","ECXDVSN1",126,0)
 ;   ECXALL = 0/1 (optional)
"RTN","ECXDVSN1",127,0)
 ;            '0' indicates user to select Pharmacy site(s);
"RTN","ECXDVSN1",128,0)
 ;            '1' indicates 'all' sites are selected
"RTN","ECXDVSN1",129,0)
 ;            default is '1'
"RTN","ECXDVSN1",130,0)
 ;   output
"RTN","ECXDVSN1",131,0)
 ;   ECXDIV = data for Pharmacy site(s);
"RTN","ECXDVSN1",132,0)
 ;            ECXDIV(ien in file #59)=IEN in file #59^name^site number^IEN in file #4
"RTN","ECXDVSN1",133,0)
 ;   ECXERR = 0/1
"RTN","ECXDVSN1",134,0)
 ;            if input problem, then '1' returned
"RTN","ECXDVSN1",135,0)
 ;
"RTN","ECXDVSN1",136,0)
 N X,Y,DIC,DIQ,DA,OUT,ECXARR,ECXP,ECXIEN
"RTN","ECXDVSN1",137,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXDVSN1",138,0)
 S ECXERR=0,ECXP=""
"RTN","ECXDVSN1",139,0)
 ;if ecxall=1, then all pharmacy sites are selected or there's only one
"RTN","ECXDVSN1",140,0)
 I ECXALL=1 S ECXP="" D
"RTN","ECXDVSN1",141,0)
 .F  S ECXP=$O(^PS(59,"B",ECXP)) Q:ECXP=""  S ECXIEN=$O(^(ECXP,"")) D
"RTN","ECXDVSN1",142,0)
 ..K ECXARR S DIC="^PS(59,",DR=".01;.06;100",DIQ="ECXARR",DA=ECXIEN D EN^DIQ1
"RTN","ECXDVSN1",143,0)
 ..Q:'$D(ECXARR)
"RTN","ECXDVSN1",144,0)
 ..S ECXDIV(ECXIEN)=ECXIEN_U_ECXARR(59,ECXIEN,.01)_U_ECXARR(59,ECXIEN,.06)_U_ECXARR(59,ECXIEN,100)
"RTN","ECXDVSN1",145,0)
 ;if ecxall=0, then user selects pharmacy site(s)
"RTN","ECXDVSN1",146,0)
 I ECXALL=0 S OUT=0 D
"RTN","ECXDVSN1",147,0)
 .F  Q:OUT!ECXERR  D
"RTN","ECXDVSN1",148,0)
 ..S DIC="^PS(59,",DIC(0)="AEMQZ" K X,Y D ^DIC
"RTN","ECXDVSN1",149,0)
 ..I $G(DUOUT)!($G(DTOUT)) S OUT=1,ECXERR=1 Q
"RTN","ECXDVSN1",150,0)
 ..I Y=-1,X="" S OUT=1 Q
"RTN","ECXDVSN1",151,0)
 ..K ECXARR S (ECXIEN,DA)=+Y,DIC="^PS(59,",DR=".01;.06;100",DIQ="ECXARR" D EN^DIQ1
"RTN","ECXDVSN1",152,0)
 ..Q:'$D(ECXARR)
"RTN","ECXDVSN1",153,0)
 ..S ECXDIV(ECXIEN)=ECXIEN_U_ECXARR(59,ECXIEN,.01)_U_ECXARR(59,ECXIEN,.06)_U_ECXARR(59,ECXIEN,100)
"RTN","ECXDVSN1",154,0)
 ;
"RTN","ECXDVSN1",155,0)
 I ECXERR=1 K ECXDIV
"RTN","ECXDVSN1",156,0)
 I '$D(ECXDIV) S ECXERR=1
"RTN","ECXDVSN1",157,0)
 Q
"RTN","ECXDVSNX")
0^55^B7609407
"RTN","ECXDVSNX",1,0)
ECXDVSNX ;ALB/JAP - Division Identifier for DSS ;July 16, 1998
"RTN","ECXDVSNX",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXDVSNX",3,0)
 ;
"RTN","ECXDVSNX",4,0)
EN ;entry point from menu option
"RTN","ECXDVSNX",5,0)
 ;user adds inpatient divisions to file #727.3
"RTN","ECXDVSNX",6,0)
 N D,L,X,Y,YR,MON,FY,CODES,OUT,%,DIR,DIRUT,DTOUT,DUOUT,DIC,DIE,DR
"RTN","ECXDVSNX",7,0)
 D NOW^%DTC S ECX=$$FMTE^XLFDT(%,"5D"),YR=+$P(ECX,"/",3),MON=+$P(ECX,"/",1),FY=$S(MON<10:YR,1:YR+1)
"RTN","ECXDVSNX",8,0)
 S ECXFY=FY-1700,ECFYB=ECXFY-1_"1000",ECFYE=ECXFY_"1001"
"RTN","ECXDVSNX",9,0)
 ;get all inpatient divisions active during this fiscal year
"RTN","ECXDVSNX",10,0)
 D ADM^ECXDVSN(.ECXDIV,1,ECFYB,ECFYE,.ECXERR)
"RTN","ECXDVSNX",11,0)
 S CODES="" F D=0:0 S D=$O(ECXDIV(D)) Q:D=""  S CODES=CODES_D_":"_$P(ECXDIV(D),U,2)_";"
"RTN","ECXDVSNX",12,0)
 S L=$L(CODES),CODES=$E(CODES,1,L-1)
"RTN","ECXDVSNX",13,0)
 D SELECT
"RTN","ECXDVSNX",14,0)
 G EXIT
"RTN","ECXDVSNX",15,0)
 Q
"RTN","ECXDVSNX",16,0)
 ;
"RTN","ECXDVSNX",17,0)
SELECT ;select division
"RTN","ECXDVSNX",18,0)
 W !!
"RTN","ECXDVSNX",19,0)
 S DIR(0)="SAO^"_CODES,DIR("A")="Select Medical Center Division: " K X,Y
"RTN","ECXDVSNX",20,0)
 D ^DIR K DIR Q:$D(DIRUT)
"RTN","ECXDVSNX",21,0)
 S ECXDIV=+Y
"RTN","ECXDVSNX",22,0)
 W !!,"Division:",?20,$P(ECXDIV(ECXDIV),U,2)
"RTN","ECXDVSNX",23,0)
 W !,"Station number:",?20,$P(ECXDIV(ECXDIV),U,3)
"RTN","ECXDVSNX",24,0)
 W !,"Primary division?:",?20,$S(+$P(ECXDIV(ECXDIV),U,4):"Yes",1:"No")
"RTN","ECXDVSNX",25,0)
 I $P(ECXDIV(ECXDIV),U,5)=0 D  Q:$D(DTOUT)  G:+Y=0 SELECT
"RTN","ECXDVSNX",26,0)
 .W !!,"The division you selected does not appear to be active"
"RTN","ECXDVSNX",27,0)
 .W !,"in the current fiscal year.",!!
"RTN","ECXDVSNX",28,0)
 .S DIR(0)="YA",DIR("A")="Do you still want to select this division? ",DIR("B")="NO" K X,Y
"RTN","ECXDVSNX",29,0)
 .D ^DIR K DIR
"RTN","ECXDVSNX",30,0)
 ;if selected division already has a dss identifier, then display it
"RTN","ECXDVSNX",31,0)
 S DR="1;",DIQ(0)="E",DIQ="ECX",DA=ECXDIV,DIC="^ECX(727.3," K ECX D EN^DIQ1
"RTN","ECXDVSNX",32,0)
 I $G(ECX(727.3,ECXDIV,1,"E"))]"" D  Q:$D(DTOUT)  G:+Y=0 SELECT
"RTN","ECXDVSNX",33,0)
 .W !,"DSS Identifier:",?20,ECX(727.3,ECXDIV,1,"E"),!
"RTN","ECXDVSNX",34,0)
 .S DIR(0)="YA",DIR("A")="Do you want to change this identifier? ",DIR("B")="NO" K X,Y
"RTN","ECXDVSNX",35,0)
 .D ^DIR K DIR
"RTN","ECXDVSNX",36,0)
 ;allow user to enter/edit dss division identifier
"RTN","ECXDVSNX",37,0)
 S OUT=0
"RTN","ECXDVSNX",38,0)
 F  D  Q:$D(DIRUT)!(OUT=1)
"RTN","ECXDVSNX",39,0)
 .W !
"RTN","ECXDVSNX",40,0)
 .S DIR(0)="FA^1:1",DIR("A")="Enter the DSS Division Identifier: " K X,Y
"RTN","ECXDVSNX",41,0)
 .D ^DIR K DIR Q:$D(DIRUT)
"RTN","ECXDVSNX",42,0)
 .I X?.P!(X?.L)!($L(X)>1)!(X="0") W !,"Invalid ...try again.",! Q
"RTN","ECXDVSNX",43,0)
 .I '$$CHKCODE(X,ECXDIV) W !,"Already used for another division ...try again.",! Q
"RTN","ECXDVSNX",44,0)
 .S ECXID=X,OUT=1
"RTN","ECXDVSNX",45,0)
 Q:$D(DIRUT)
"RTN","ECXDVSNX",46,0)
 ;if selected division isn't in file #727.3, then add it
"RTN","ECXDVSNX",47,0)
 I '$D(ECX(727.3,ECXDIV)) D
"RTN","ECXDVSNX",48,0)
 .S (X,DINUM)=ECXDIV,DIC(0)="L",DLAYGO=727.3,DIC="^ECX(727.3,"
"RTN","ECXDVSNX",49,0)
 .K DD,DO D FILE^DICN K DINUM,DLAYGO,X,Y
"RTN","ECXDVSNX",50,0)
 ;update with new identifier
"RTN","ECXDVSNX",51,0)
 S DIE="^ECX(727.3,",DA=ECXDIV,DR="1////^S X=ECXID;" D ^DIE
"RTN","ECXDVSNX",52,0)
 W !!
"RTN","ECXDVSNX",53,0)
 G SELECT
"RTN","ECXDVSNX",54,0)
 ;
"RTN","ECXDVSNX",55,0)
EXIT ;common exit point
"RTN","ECXDVSNX",56,0)
 K ECX,ECXDIV,ECXERR,ECXFY,ECFYB,ECFYE
"RTN","ECXDVSNX",57,0)
 Q
"RTN","ECXDVSNX",58,0)
 ;
"RTN","ECXDVSNX",59,0)
CHKCODE(X,ECXDIV) ;make sure dss identifier is unique
"RTN","ECXDVSNX",60,0)
 I '$D(^ECX(727.3,"C",X)) Q 1
"RTN","ECXDVSNX",61,0)
 S XX=$O(^ECX(727.3,"C",X,0))
"RTN","ECXDVSNX",62,0)
 I XX'=ECXDIV Q 0
"RTN","ECXDVSNX",63,0)
 Q 1
"RTN","ECXEC")
0^24^B15074270
"RTN","ECXEC",1,0)
ECXEC ;ALB/JAP,BIR/JLP,PTD-DSS Event Capture Extract  [ 02/14/97   2:26 PM ]
"RTN","ECXEC",2,0)
 ;;3.0;DSS EXTRACTS;**11,8**;Dec 22, 1997
"RTN","ECXEC",3,0)
BEG ;entry point from option
"RTN","ECXEC",4,0)
 I '$D(^ECH) W !,"Event Capture is not initialized",!! Q
"RTN","ECXEC",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXEC",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXEC",7,0)
 Q
"RTN","ECXEC",8,0)
START ;begin EC extract
"RTN","ECXEC",9,0)
 N QFLG,X,Y
"RTN","ECXEC",10,0)
 S QFLG=0
"RTN","ECXEC",11,0)
 S ECED=ECED+.3
"RTN","ECXEC",12,0)
 K ^TMP("EC",$J)
"RTN","ECXEC",13,0)
 S ECLL=0
"RTN","ECXEC",14,0)
 F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:('ECLL)!(QFLG)  F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)!(QFLG)  D
"RTN","ECXEC",15,0)
 .F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXEC",16,0)
 Q
"RTN","ECXEC",17,0)
UPDATE ;sets record and updates counters
"RTN","ECXEC",18,0)
 S ECCH=^ECH(ECDA,0),ECL=$P(ECCH,U,4),ECDFN=$P(ECCH,U,2),ECDT=$P(ECCH,U,3),ECM=$P(ECCH,U,6),ECC=$P(ECCH,U,8),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXEC",19,0)
 Q:'$D(^DPT(ECDFN,0))  S SSN=$P(^(0),U,9),ECNA=$E($P($P(^(0),U),",")_"    ",1,4)
"RTN","ECXEC",20,0)
 S X=$$PRIMARY^ECXUTL2(ECDFN,ECDT),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2)
"RTN","ECXEC",21,0)
 S X=$$INP^ECXUTL2(ECDFN,ECDT),ECA=$P(X,U,1),ECMN=$P(X,U,2),ECTS=$P(X,U,3)
"RTN","ECXEC",22,0)
 S ECP=$P(ECCH,U,9)
"RTN","ECXEC",23,0)
 Q:ECP']""
"RTN","ECXEC",24,0)
 S ECO=$P(ECCH,U,12),ECV=$P(ECCH,U,10),ECDU=$P(ECCH,U,7)
"RTN","ECXEC",25,0)
 S ECXUNIT=$G(^ECD(ECDU,0)),ECCS=+$P(ECXUNIT,U,4),ECDCM=$P(ECXUNIT,U,5),ECUSTOP=$P(ECXUNIT,U,10),ECUPCE=$P(ECXUNIT,U,14)
"RTN","ECXEC",26,0)
 ;derivation of dss identifier depends on whether dss unit is set to send data to pce
"RTN","ECXEC",27,0)
 S ECAC=$P($G(ECCH),U,19)
"RTN","ECXEC",28,0)
 ;if this is a record that 'goes to pce', then get the dss identifier from the clinic stop codes
"RTN","ECXEC",29,0)
 S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",30,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECA=1)) D
"RTN","ECXEC",31,0)
 .I +ECAC D
"RTN","ECXEC",32,0)
 ..S ECAC1=$P($G(^SC(+ECAC,0)),U,7),ECAC2=$P($G(^(0)),U,18)
"RTN","ECXEC",33,0)
 ..I 'ECAC2 S ECAC2S="000"
"RTN","ECXEC",34,0)
 ..I 'ECAC1 S (ECAC1S,ECAC2S)="000" Q
"RTN","ECXEC",35,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECAC1,0)),U,2),ECAC2S=$P($G(^DIC(40.7,+ECAC2,0)),U,2)
"RTN","ECXEC",36,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S=$$RJ^XLFSTR(ECAC2S,3,0)
"RTN","ECXEC",37,0)
 .I 'ECAC D
"RTN","ECXEC",38,0)
 ..S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",39,0)
 ;if this record doesn't go to pce, then get the dss idetifier from the dss unit
"RTN","ECXEC",40,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECA=3)) D
"RTN","ECXEC",41,0)
 .I +ECUSTOP D
"RTN","ECXEC",42,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECUSTOP,0)),U,2),ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0)
"RTN","ECXEC",43,0)
 ..S ECAC2S="000"
"RTN","ECXEC",44,0)
 .I 'ECUSTOP D
"RTN","ECXEC",45,0)
 ..S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",46,0)
 S ECDSS=ECAC1S_ECAC2S
"RTN","ECXEC",47,0)
 ;setup provider(s) as'2'_ien; iens are now only in file #200; keeping obsolete reference
"RTN","ECXEC",48,0)
 ;to file #3.1 for backward compatibility; will be revised in future
"RTN","ECXEC",49,0)
 S ECU=$P(ECCH,U,11),ECUN1=$S(ECU["DIC(3.1":3_$P(ECU,";"),1:2_$P(ECU,";"))
"RTN","ECXEC",50,0)
 S ECU2=$P(ECCH,U,15),ECU2A=$S('ECU2:"",ECU2["DIC(3.1":3_$P(ECU2,";"),1:2_$P(ECU2,";"))
"RTN","ECXEC",51,0)
 S ECU3=$P(ECCH,U,17),ECU3A=$S('ECU3:"",ECU3["DIC(3.1":3_$P(ECU3,";"),1:2_$P(ECU3,";"))
"RTN","ECXEC",52,0)
 ;change for version 2 where ECP is a variable pointer and we want to expand it
"RTN","ECXEC",53,0)
 ;category = category or null if stored as 0
"RTN","ECXEC",54,0)
 I ECP[";" S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U),ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L"),ECC=$S(ECC:ECC,1:"")
"RTN","ECXEC",55,0)
 ;pick up EC to PCE data from "P" in File 721
"RTN","ECXEC",56,0)
 S ECPCE=$G(^ECH(ECDA,"P"))
"RTN","ECXEC",57,0)
 S ECPCE1=$P(ECPCE,U),ECPCE1=$P($G(^ICPT(+ECPCE1,0)),U),ECPCE2=$P(ECPCE,U,2),ECPCE3=$P(ECPCE,U,3),ECPCE4=$P(ECPCE,U,4),ECPCE5=$P(ECPCE,U,5),ECPCE6=$P(ECPCE,U,6)
"RTN","ECXEC",58,0)
 S ECPCE7=$S($P(ECPCE,U,7)=1:"Y",1:"N")
"RTN","ECXEC",59,0)
 S ECPCE=ECPCE1_U_ECPCE2_U_ECPCE3_U_ECPCE4_U_ECPCE5_U_ECPCE6_U_ECPCE7
"RTN","ECXEC",60,0)
 D FILE
"RTN","ECXEC",61,0)
 Q
"RTN","ECXEC",62,0)
 ;
"RTN","ECXEC",63,0)
FILE ;file record in #727.815
"RTN","ECXEC",64,0)
 ;node0
"RTN","ECXEC",65,0)
 ;ecode=inst^dfn^ssn^name^i/o status^day^DSS unit^category^procedure^volume^cost center^ordering sec^section^
"RTN","ECXEC",66,0)
 ;provider^^prov 2^^prov 3^^^mov #^treat spec^time^primary care team^primary care provider^pce cpt code^
"RTN","ECXEC",67,0)
 ;icd-9 code^agent orange^radiation exposure^environmental contaminants^service connected^sent to pce^^dss identifier^placeholder1
"RTN","ECXEC",68,0)
 ;node1
"RTN","ECXEC",69,0)
 ;mpi^dss dept^provider npi^provider #2 npi^provider #3 npi^pc provider npi
"RTN","ECXEC",70,0)
 N DA,DIK
"RTN","ECXEC",71,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXEC",72,0)
 S ECODE=EC7_U_EC23
"RTN","ECXEC",73,0)
 S ECODE=ECODE_U_ECL_U_ECDFN_U_SSN_U_ECNA_U_ECA_U_$$ECXDATE^ECXUTL(ECDT,ECXYM)_U_ECDU_U_ECC_U_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECUN1
"RTN","ECXEC",74,0)
 S ECODE=ECODE_U_U_ECU2A_U_U_ECU3A_U_U_U_ECMN_U_ECTS_U_ECTM_U_ECPTTM_U_ECPTPR_U_ECPCE_U_U_ECDSS_U
"RTN","ECXEC",75,0)
 S ECODE1=U_U_U_U_U
"RTN","ECXEC",76,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXEC",77,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXEC",78,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXEC",79,0)
 Q
"RTN","ECXEC",80,0)
 ;
"RTN","ECXEC",81,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXEC",82,0)
 S ECHEAD="ECS"
"RTN","ECXEC",83,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXEC",84,0)
 Q
"RTN","ECXEC",85,0)
 ;
"RTN","ECXEC",86,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXEC",87,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXFEKE1")
0^61^B33931331
"RTN","ECXFEKE1",1,0)
ECXFEKE1 ;BIR/DMA,CML-Print Feeder Keys (CONTINUED); [ 03/28/96  5:44 PM ]
"RTN","ECXFEKE1",2,0)
 ;;3.0;DSS EXTRACTS;**11,8**;Dec 22, 1997
"RTN","ECXFEKE1",3,0)
 ;
"RTN","ECXFEKE1",4,0)
SELLABKE() ;** Function to prompt user selection of type of Lab Feeder Key
"RTN","ECXFEKE1",5,0)
 ;
"RTN","ECXFEKE1",6,0)
 ;** Variable Definitions
"RTN","ECXFEKE1",7,0)
 ;**  ECXKEY    - Value of user selection returned to calling code
"RTN","ECXFEKE1",8,0)
 ;**                Returns  N - LMIP Code formated feeder keys
"RTN","ECXFEKE1",9,0)
 ;**                         O - Locally formated feeder keys
"RTN","ECXFEKE1",10,0)
 ;**                        -1 - User uparrow (^) or Time out
"RTN","ECXFEKE1",11,0)
 ;
"RTN","ECXFEKE1",12,0)
 N ECXKEY
"RTN","ECXFEKE1",13,0)
 W !!,"The Feeder Key List for the Feeder System LAB can be printed by:"
"RTN","ECXFEKE1",14,0)
 W !,?5,"(O)ld Feeder Key sort by Local Feeder Key values"
"RTN","ECXFEKE1",15,0)
 W !,?5,"(N)ew Feeder Key sort by LMIP Codes"
"RTN","ECXFEKE1",16,0)
 S DIR(0)="S^O:OLD;N:NEW"
"RTN","ECXFEKE1",17,0)
 S:$D(^ECX(728,1,"LMIP")) DIR("B")="NEW"
"RTN","ECXFEKE1",18,0)
 S:'$D(^ECX(728,1,"LMIP")) DIR("B")="OLD"
"RTN","ECXFEKE1",19,0)
 D ^DIR
"RTN","ECXFEKE1",20,0)
 S:$D(DIRUT) ECXKEY=-1
"RTN","ECXFEKE1",21,0)
 S:'$D(DIRUT) ECXKEY=Y
"RTN","ECXFEKE1",22,0)
 K Y,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXFEKE1",23,0)
 Q ECXKEY
"RTN","ECXFEKE1",24,0)
 ;
"RTN","ECXFEKE1",25,0)
SUR F EC=1:1:16 S EC1=$P($T(@("S"_EC)),";",3),EC2=$P(EC1,U),ECD=$P(EC1,U,2),^TMP($J,"SUR",EC2_"-10",EC)=ECD_" PATIENT TIME",^TMP($J,"SUR",EC2_"-40",EC)=ECD_" SURGEON TIME" D
"RTN","ECXFEKE1",26,0)
 .S ^TMP($J,"SUR",EC2_"-60",EC)=ECD_" RECOVERY ROOM TIME",^TMP($J,"SUR",EC2_"-70",EC)=ECD_" TECHNICIAN TIME",^TMP($J,"SUR",EC2_"-30",EC)=ECD_" CLEANUP TIME"
"RTN","ECXFEKE1",27,0)
 .S ^TMP($J,"SUR",EC2_"-22",1)=ECD_" ANESTHESIA TIME (SPECIAL)"
"RTN","ECXFEKE1",28,0)
 .S ^TMP($J,"SUR",EC2_"-21",1)=ECD_" ANESTHESIA TIME (GENERAL)"
"RTN","ECXFEKE1",29,0)
 .S ^TMP($J,"SUR",EC2_"-23",1)=ECD_" ANESTHESIA TIME (LOCAL)"
"RTN","ECXFEKE1",30,0)
 .S ^TMP($J,"SUR",EC2_"-24",1)=ECD_" ANESTHESIA TIME (SPI/EPI)"
"RTN","ECXFEKE1",31,0)
 .S ^TMP($J,"SUR",EC2_"-25",1)=ECD_" ANESTHESIA TIME (OTHER)"
"RTN","ECXFEKE1",32,0)
 .S ^TMP($J,"SUR",EC2_"-26",1)=ECD_" ANESTHESIA TIME (UNKNOWN)"
"RTN","ECXFEKE1",33,0)
 .S ^TMP($J,"SUR",EC2_"-27",1)=ECD_" ANESTHESIA TIME (MONITORED)"
"RTN","ECXFEKE1",34,0)
 S EC=0 F  S EC=$O(^SRO(131.9,EC)) Q:'EC  I $D(^(EC,0)) S ECD=$P(^(0),U),^TMP($J,"SUR",$$RJ^XLFSTR(EC,5,0),EC)=ECD
"RTN","ECXFEKE1",35,0)
 Q
"RTN","ECXFEKE1",36,0)
S1 ;;050^GENERAL(OR WHEN NOT DEFINED BELOW)
"RTN","ECXFEKE1",37,0)
S2 ;;051^GYNECOLOGY
"RTN","ECXFEKE1",38,0)
S3 ;;052^NEUROSURGERY
"RTN","ECXFEKE1",39,0)
S4 ;;053^OPHTHALMOLOGY
"RTN","ECXFEKE1",40,0)
S5 ;;054^ORTHOPEDICS
"RTN","ECXFEKE1",41,0)
S6 ;;055^OTORHINOLARYNGOLOGY (ENT)
"RTN","ECXFEKE1",42,0)
S7 ;;056^PLASTIC SURGERY (INCLUDES HEAD AND NECK)
"RTN","ECXFEKE1",43,0)
S8 ;;057^PROCTOLOGY
"RTN","ECXFEKE1",44,0)
S9 ;;058^THORACIC SURGERY (INC. CARDIAC SURG.)
"RTN","ECXFEKE1",45,0)
S10 ;;059^UROLOGY
"RTN","ECXFEKE1",46,0)
S11 ;;060^ORAL SURGERY (DENTAL)
"RTN","ECXFEKE1",47,0)
S12 ;;061^PODIATRY
"RTN","ECXFEKE1",48,0)
S13 ;;062^PERIPHERAL VASCULAR
"RTN","ECXFEKE1",49,0)
S14 ;;500^CARDIAC SURGERY
"RTN","ECXFEKE1",50,0)
S15 ;;501^TRANSPLANTATION
"RTN","ECXFEKE1",51,0)
S16 ;;502^ANESTHESIOLOGY
"RTN","ECXFEKE1",52,0)
 ;
"RTN","ECXFEKE1",53,0)
DEN F EC=3:1 S EC1=$T(DEN+EC) Q:EC1'?1"D"2N.E  S ECD=$P(EC1,";",3),EC1=$P(EC1," "),^TMP($J,"DEN",EC1,EC)=ECD
"RTN","ECXFEKE1",54,0)
 Q
"RTN","ECXFEKE1",55,0)
 ;
"RTN","ECXFEKE1",56,0)
D08C ;;COMPLETE EXAM
"RTN","ECXFEKE1",57,0)
D08S ;;SCREENING EXAM
"RTN","ECXFEKE1",58,0)
D09 ;;ADMIN PROCEDURE
"RTN","ECXFEKE1",59,0)
D10 ;;X-RAYS EXTRAORAL #
"RTN","ECXFEKE1",60,0)
D11 ;;X-RAYS INTRAORAL #
"RTN","ECXFEKE1",61,0)
D12 ;;PROPHY NATURAL DENTITION
"RTN","ECXFEKE1",62,0)
D13 ;;PROPHY DENTURE
"RTN","ECXFEKE1",63,0)
D14 ;;OPERATING ROOM
"RTN","ECXFEKE1",64,0)
D15 ;;NEOPLASM CONFIRMED MALIGNANT #
"RTN","ECXFEKE1",65,0)
D16 ;;NEOPLASM REMOVED #
"RTN","ECXFEKE1",66,0)
D17 ;;BIOPSY/SMEAR #
"RTN","ECXFEKE1",67,0)
D18 ;;FRACTURE #
"RTN","ECXFEKE1",68,0)
D20 ;;OTHER SIGNIF. SURG. (CTV)
"RTN","ECXFEKE1",69,0)
D21 ;;SURFACES RESTORED #
"RTN","ECXFEKE1",70,0)
D22 ;;ROOT CANAL THERAPY #
"RTN","ECXFEKE1",71,0)
D23 ;;PERIDONTAL QUADS (SURGICAL) #
"RTN","ECXFEKE1",72,0)
D24 ;;PERIO QUADS (ROOT PLANE) #
"RTN","ECXFEKE1",73,0)
D25G ;;PATIENT ED (CTV) GROUP
"RTN","ECXFEKE1",74,0)
D25I ;;PATIENT ED (CTV) INDIVIDUAL
"RTN","ECXFEKE1",75,0)
D26S ;;SPOT CHECK EXAM (STAFF)
"RTN","ECXFEKE1",76,0)
D26F ;;SPOT CHECK EXAM (FEE)
"RTN","ECXFEKE1",77,0)
D27 ;;INDIVIDUAL CROWNS #
"RTN","ECXFEKE1",78,0)
D28 ;;POST & CORES #
"RTN","ECXFEKE1",79,0)
D29 ;;FIXED PARTIALS (ABUT) #
"RTN","ECXFEKE1",80,0)
D30 ;;FIXED PARTIALS (PONT ONLY) #
"RTN","ECXFEKE1",81,0)
D31 ;;REMOVABLE PARTIALS #
"RTN","ECXFEKE1",82,0)
D32 ;;COMPLETE DENTURES #
"RTN","ECXFEKE1",83,0)
D33 ;;PROSTHETIC REPAIR #
"RTN","ECXFEKE1",84,0)
D34 ;;SPLINT AND SPEC. PROCESS (CTV)
"RTN","ECXFEKE1",85,0)
D35 ;;EXTRACTIONS #
"RTN","ECXFEKE1",86,0)
D36 ;;SURGICAL EXTRACTIONS #
"RTN","ECXFEKE1",87,0)
D37 ;;OTHER SIG TREATMENT (CTV)
"RTN","ECXFEKE1",88,0)
D38 ;;DIVISION (STATION DIVISION)
"RTN","ECXFEKE1",89,0)
D39C ;;COMPLETIONS
"RTN","ECXFEKE1",90,0)
D39T ;;TERMINATIONS
"RTN","ECXFEKE1",91,0)
D40 ;;INTERDISCIPLINARY CONSULT
"RTN","ECXFEKE1",92,0)
D41 ;;EVALUATIONS
"RTN","ECXFEKE1",93,0)
D42 ;;PRE AUTHORIZATION/2ND OPINION
"RTN","ECXFEKE1",94,0)
D43M ;;SPOT CHECK DISCREPANCY (STAFF)
"RTN","ECXFEKE1",95,0)
D43R ;;SPOT CHECK DISCREPANCY (FEE)
"RTN","ECXFEKE1",96,0)
 ;
"RTN","ECXFEKE1",97,0)
PRINT ;
"RTN","ECXFEKE1",98,0)
 ;setting EC9=EC1 is just for the benefit of the new ECS feeder key list - don't want to mess-up the other lists
"RTN","ECXFEKE1",99,0)
 S (QFLG,PG)=0,$P(LN,"-",81)=""
"RTN","ECXFEKE1",100,0)
 S EC="" F  S EC=$O(^TMP($J,EC)),EC1="" Q:EC=""  Q:QFLG  D HEAD F  S EC1=$O(^TMP($J,EC,EC1)),EC9=EC1,EC2=""  Q:EC1=""  Q:QFLG  D
"RTN","ECXFEKE1",101,0)
 .I EC="CLI" S EC9=$P(EC9,";",2)
"RTN","ECXFEKE1",102,0)
 .I EC="ECS",$G(ECECS)="N" S EC9=$P(EC9,";",2)
"RTN","ECXFEKE1",103,0)
 .I EC="LAB",EC9[".8" S EC9=$$ADD0(EC9)
"RTN","ECXFEKE1",104,0)
 .F  S EC2=$O(^TMP($J,EC,EC1,EC2)) Q:EC2=""  D
"RTN","ECXFEKE1",105,0)
 ..D:($Y+3>IOSL) HEAD Q:QFLG
"RTN","ECXFEKE1",106,0)
 ..I EC="PHA" W !,?2,$E(EC9,2,99),?24,$E($P(^TMP($J,EC,EC1,EC2),U,1),1,32),?58,$E($P(^(EC2),U,2),2,99) Q
"RTN","ECXFEKE1",107,0)
 ..W !,?5,EC9,?27,^TMP($J,EC,EC1,EC2)
"RTN","ECXFEKE1",108,0)
 I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECXFEKE1",109,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXFEKE1",110,0)
 K EC,EC1,EC2,EC3,EC9,ECCSC,ECD,ECLIST,ECNDC,ECNDF,ECNFC,ECPHA,ECECS,ECLAB,ECSC,ECST,ECY,JJ,LN,P1,P2,P3,PG,POP,QFLG,SC,SS,X,Y,^TMP($J),DIR,DIRUT,DUOUT
"RTN","ECXFEKE1",111,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECXFEKE1",112,0)
 Q
"RTN","ECXFEKE1",113,0)
HEAD ;
"RTN","ECXFEKE1",114,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXFEKE1",115,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXFEKE1",116,0)
 W:$Y!($E(IOST)="C") @IOF
"RTN","ECXFEKE1",117,0)
 S PG=PG+1 W !,?21,"Feeder Key List For Feeder System ",EC,?70,"Page: ",PG
"RTN","ECXFEKE1",118,0)
 I EC="PHA" D  Q
"RTN","ECXFEKE1",119,0)
 .I $D(ECPHA) W !?22,$S(ECPHA="O":"(OLD Feeder Key from VA Class)",1:"(NEW Feeder Key from NDF Match)")
"RTN","ECXFEKE1",120,0)
 .I $P(ECPHA2,U,2)=0 W !!,?2,"Feeder Key",?24,"Description",!,LN,!
"RTN","ECXFEKE1",121,0)
 .I $P(ECPHA2,U,2)=1 W !!,"Pre-FY1999 Feeder Key",?24,"Description",?58,"FY1999 Feeder Key",!,LN,!
"RTN","ECXFEKE1",122,0)
 .I $P(ECPHA2,U,2)=2 W !!,"FY1999 Feeder Key",?24,"Description",?58,"Pre-FY1999 Feeder Key",!,LN,!
"RTN","ECXFEKE1",123,0)
 I $D(ECECS)&(EC="ECS") W !?21,$S(ECECS="O":"(OLD Feeder Key sorted by Category-Procedure)",1:"(NEW Feeder Key sorted by Procedure-CPT Code)")
"RTN","ECXFEKE1",124,0)
 I $D(ECLAB)&(EC="LAB") W !?15,$S(ECLAB="O":"(OLD Feeder Key sorted by Local Feeder Key values)",1:"      (NEW Feeder Key sorted by LMIP Codes)")
"RTN","ECXFEKE1",125,0)
 W !!,?5,"Feeder Key",?27,"Description",!,LN,!
"RTN","ECXFEKE1",126,0)
 Q
"RTN","ECXFEKE1",127,0)
ADD0(ECXFKEY) ;** Append zeros to decimal place on feeder key
"RTN","ECXFEKE1",128,0)
 ;
"RTN","ECXFEKE1",129,0)
 ;** Variable Definitions
"RTN","ECXFEKE1",130,0)
 ;**  ECXFKEY   - Value of Feeder Key
"RTN","ECXFEKE1",131,0)
 ;**                Returns  feeder key with zeros appended to make a
"RTN","ECXFEKE1",132,0)
 ;**                          four place decimal.
"RTN","ECXFEKE1",133,0)
 ;
"RTN","ECXFEKE1",134,0)
 N ECXD,LPCNT,LPEND,ECXFEKEY,ECXDEC
"RTN","ECXFEKE1",135,0)
 S ECXDEC=$P(ECXFKEY,".",2)
"RTN","ECXFEKE1",136,0)
 S LPEND=4-$L(ECXDEC)
"RTN","ECXFEKE1",137,0)
 F LPCNT=1:1:LPEND S ECXDEC=ECXDEC_"0"
"RTN","ECXFEKE1",138,0)
 S ECXFEKEY=$P(ECXFKEY,".",1)_"."_ECXDEC
"RTN","ECXFEKE1",139,0)
 Q ECXFEKEY
"RTN","ECXFEKE1",140,0)
 ;
"RTN","ECXFEKEY")
0^62^B62677964
"RTN","ECXFEKEY",1,0)
ECXFEKEY ;BIR/DMA,CML-Print Feeder Keys; [ 05/15/96  9:44 AM ]
"RTN","ECXFEKEY",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8**;Dec 22, 1997
"RTN","ECXFEKEY",3,0)
EN ;entry point from option
"RTN","ECXFEKEY",4,0)
 W !!,"Print list of Feeder Keys:",!
"RTN","ECXFEKEY",5,0)
 W !,"Select : 1. CLI",!,?9,"2. DEN",!,?9,"3. ECS",!,?9,"4. LAB",!,?9,"5. NUR",!,?9,"6. PHA",!,?9,"7. RAD",!,?9,"8. SUR",! S DIR(0)="L^1:8" D ^DIR Q:$D(DIRUT)
"RTN","ECXFEKEY",6,0)
 S ECY=Y
"RTN","ECXFEKEY",7,0)
 I Y["6" D
"RTN","ECXFEKEY",8,0)
 .S ECPHA="",ECPHA2="0^0"
"RTN","ECXFEKEY",9,0)
 .W !!,"The Feeder Key List for the Feeder System PHA can be printed as:",!?5,"(O)ld Feeder Key by VA Class",!?5,"(N)ew Feeder Key by NDF Match"
"RTN","ECXFEKEY",10,0)
 .S DIR(0)="S^O:OLD;N:NEW",DIR("B")="NEW" D ^DIR K DIR Q:$D(DIRUT)  S ECPHA=Y
"RTN","ECXFEKEY",11,0)
 .I ECPHA="N" S X="PSNAPIS" X ^%ZOSF("TEST") I $T D
"RTN","ECXFEKEY",12,0)
 ..I $T(PSNAPIS+1^PSNAPIS)[";;3.18;",$T(PSNAPIS+1^PSNAPIS)[";**5" S ECPHA2="1^0" Q
"RTN","ECXFEKEY",13,0)
 ..I $T(PSNAPIS+1^PSNAPIS)[";;4.0;" D
"RTN","ECXFEKEY",14,0)
 ...S ECPHA2="2^0"
"RTN","ECXFEKEY",15,0)
 ...W @IOF D NDF4^ECXNDC
"RTN","ECXFEKEY",16,0)
 ...W !!,"Both the pre-FY1999 and FY1999 Feeder keys will appear on this report."
"RTN","ECXFEKEY",17,0)
 ...W !,"But you may select the sort order for the listing."
"RTN","ECXFEKEY",18,0)
 ...W !!,"The NDF Feeder Key List can be sorted by:",!!?5,"(1) Pre-FY1999 Feeder Keys ",!?5,"(2) FY1999 Feeder Keys",!
"RTN","ECXFEKEY",19,0)
 ...S DIR(0)="N^1:2:0" D ^DIR K DIR Q:$D(DIRUT)  S $P(ECPHA2,U,2)=Y
"RTN","ECXFEKEY",20,0)
 G:$D(DIRUT) QUIT
"RTN","ECXFEKEY",21,0)
 I ECY["3" D
"RTN","ECXFEKEY",22,0)
 .W !!,"The Feeder Key List for the Feeder System ECS can be printed by:",!?5,"(O)ld Feeder Key sort by Category-Procedure",!?5,"(N)ew Feeder Key sort by Procedure-CPT Code"
"RTN","ECXFEKEY",23,0)
 .S DIR(0)="S^O:OLD;N:NEW",DIR("B")="NEW" D ^DIR K DIR Q:$D(DIRUT)  S ECECS=Y
"RTN","ECXFEKEY",24,0)
 S:ECY["4" ECLAB=$$SELLABKE^ECXFEKE1() ;**Prompt to select Lab Feeder key
"RTN","ECXFEKEY",25,0)
 G:($G(ECLAB)=-1) QUIT ;**GOTO Exit point
"RTN","ECXFEKEY",26,0)
 G:$D(DIRUT) QUIT
"RTN","ECXFEKEY",27,0)
 K %ZIS,IOP S %ZIS="QM",%ZIS("B")="" D ^%ZIS
"RTN","ECXFEKEY",28,0)
 I POP W !,"NO DEVICE SELECTED!!" G QUIT
"RTN","ECXFEKEY",29,0)
 I $D(IO("Q")) K IO("Q") D  G QUIT
"RTN","ECXFEKEY",30,0)
 .S ZTRTN="START^ECXFEKEY",ZTDESC="Feeder Key List (DSS)"
"RTN","ECXFEKEY",31,0)
 .S ZTSAVE("ECY")="",ZTSAVE("ECPHA")="",ZTSAVE("ECPHA2")="",ZTSAVE("ECECS")="",ZTSAVE("ECLAB")=""
"RTN","ECXFEKEY",32,0)
 .D ^%ZTLOAD I $D(ZTSK) W !,"Queued Task #: "_ZTSK
"RTN","ECXFEKEY",33,0)
 .D HOME^%ZIS K ZTSK
"RTN","ECXFEKEY",34,0)
 ;
"RTN","ECXFEKEY",35,0)
START ;queued entry point
"RTN","ECXFEKEY",36,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXFEKEY",37,0)
 K ^TMP($J)
"RTN","ECXFEKEY",38,0)
 F ECLIST=1:1 S EC=$P(ECY,",",ECLIST) Q:EC=""  D:EC=1 CLI D:EC=2 DEN^ECXFEKE1 D:EC=3 ECS D:EC=4 LAB D:EC=5 NUR D:EC=6 PHA D:EC=7 RAD D:EC=8 SUR^ECXFEKE1
"RTN","ECXFEKEY",39,0)
 U IO D PRINT^ECXFEKE1
"RTN","ECXFEKEY",40,0)
 Q
"RTN","ECXFEKEY",41,0)
LAB S EC=0
"RTN","ECXFEKEY",42,0)
 ;
"RTN","ECXFEKEY",43,0)
 ;** OLD Feeder Key format
"RTN","ECXFEKEY",44,0)
 I $G(ECLAB)="O" DO
"RTN","ECXFEKEY",45,0)
 .F  S EC=$O(^LAB(60,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),U),^TMP($J,"LAB",EC,EC)=EC1
"RTN","ECXFEKEY",46,0)
 ;
"RTN","ECXFEKEY",47,0)
 ;** NEW Feeder key format (LMIP Code)
"RTN","ECXFEKEY",48,0)
 I $G(ECLAB)="N" DO
"RTN","ECXFEKEY",49,0)
 .N EC2
"RTN","ECXFEKEY",50,0)
 .F  S EC=$O(^LAM(EC)) Q:'EC  DO
"RTN","ECXFEKEY",51,0)
 ..I $D(^LAM(EC,0)) DO
"RTN","ECXFEKEY",52,0)
 ...S EC1=$P(^LAM(EC,0),U,1),EC1=$P(EC1,"~",1)
"RTN","ECXFEKEY",53,0)
 ...S EC2=$P(^LAM(EC,0),U,2)
"RTN","ECXFEKEY",54,0)
 ...I EC2'[".9999",(EC2'[".8") S EC2=EC2\1
"RTN","ECXFEKEY",55,0)
 ...S ^TMP($J,"LAB",+EC2,+EC2)=EC1
"RTN","ECXFEKEY",56,0)
 Q
"RTN","ECXFEKEY",57,0)
ECS ;old ECS feeder key list for pre-FY97 data
"RTN","ECXFEKEY",58,0)
 G:$G(ECECS)="N" ECS2
"RTN","ECXFEKEY",59,0)
 S EC=0 I $P($G(^EC(720.1,1,0)),U,2) D  G ECQ
"RTN","ECXFEKEY",60,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^(EC,0)) D
"RTN","ECXFEKEY",61,0)
 ..S EC1=$P($P(^(0),U),"-",3,4),EC2=$P(EC1,"-"),EC2=$S(+EC2:EC2,1:"***"),EC4=$S($P($G(^EC(726,+EC2,0)),U)]"":$P(^(0),U),1:"***")
"RTN","ECXFEKEY",62,0)
 ..S EC3=$P(EC1,"-",2) Q:'+EC3  S EC3=$S(EC3["ICPT":$P($G(^ICPT(+EC3,0)),U),+EC3<90000:$P($G(^EC(725,+EC3,0)),U,2)_"N",1:$P($G(^EC(725,+EC3,0)),U,2)_"L")
"RTN","ECXFEKEY",63,0)
 ..S EC5=$P(EC1,"-",2),EC5=$S(EC5["ICPT":$E($P($G(^ICPT(+EC5,0)),U,2),1,25),EC5["EC":$E($P($G(^EC(725,+EC5,0)),U),1,25),1:"UNKNOWN")
"RTN","ECXFEKEY",64,0)
 ..S ^TMP($J,"ECS",EC2_" - "_EC3,EC3)=EC4_" - "_EC5
"RTN","ECXFEKEY",65,0)
 F  S EC=$O(^ECK(EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P($P(^(0),U),"-",3,4),EC2=$E($P($G(^ECP(+EC1,0)),U),1,25),EC3=$E($P($G(^ECP(+$P(EC1,"-",2),0)),U),1,25),^TMP($J,"ECS",EC1,EC1)=EC2_" - "_EC3
"RTN","ECXFEKEY",66,0)
ECQ K EC1,EC2,EC3,EC4,EC5,EC6,EC7,EC8,EC9,EC10 Q
"RTN","ECXFEKEY",67,0)
ECS2 ;new ECS feeder key list for FY97 data
"RTN","ECXFEKEY",68,0)
 ;feeder key is <Procedure> if PCE CPT code is same or null;
"RTN","ECXFEKEY",69,0)
 ;feeder is <Procedure-PCE CPT> otherwise;
"RTN","ECXFEKEY",70,0)
 ;the description column of list shows procedure (EC5) in lowercase and CPT code (EC8) in uppercase;
"RTN","ECXFEKEY",71,0)
 ;but if procedure (EC3) is itself a CPT Code, convert EC5 to uppercase
"RTN","ECXFEKEY",72,0)
 ;concatenation of "A;" and "B;" are for proper sorting - CPT codes 1st, then other procedures
"RTN","ECXFEKEY",73,0)
 S EC=0 I $P($G(^EC(720.1,1,0)),U,2) D  G ECQ
"RTN","ECXFEKEY",74,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^ECJ(EC,0)) D
"RTN","ECXFEKEY",75,0)
 ..S EC1=$P($P(^ECJ(EC,0),U),"-",3,4)
"RTN","ECXFEKEY",76,0)
 ..S EC3=$P(EC1,"-",2) Q:'+EC3  S EC3=$S(EC3["ICPT":$P($G(^ICPT(+EC3,0)),U),+EC3<90000:$P($G(^EC(725,+EC3,0)),U,2)_"N",1:$P($G(^EC(725,+EC3,0)),U,2)_"L")
"RTN","ECXFEKEY",77,0)
 ..S EC5=$P(EC1,"-",2),EC5=$S(EC5["ICPT":$E($P($G(^ICPT(+EC5,0)),U,2),1,25),EC5["EC":$E($P($G(^EC(725,+EC5,0)),U),1,25),1:"UNKNOWN")
"RTN","ECXFEKEY",78,0)
 ..S EC5=$$LOW(EC5)
"RTN","ECXFEKEY",79,0)
 ..I EC1["ICPT" S EC5=$$UPP(EC5),EC3="A;"_EC3
"RTN","ECXFEKEY",80,0)
 ..S EC6=$P(EC1,"-",2),EC7="",EC8=""
"RTN","ECXFEKEY",81,0)
 ..I EC6["EC(725," D
"RTN","ECXFEKEY",82,0)
 ...S EC6=$S(+EC6>0:$P($G(^EC(725,+EC6,0)),U,5),1:"") S EC7=$S(+EC6>0:$P($G(^ICPT(+EC6,0)),U),1:"")
"RTN","ECXFEKEY",83,0)
 ...S EC8=$S(+EC6>0:$E($P($G(^ICPT(+EC6,0)),U,2),1,25),1:"")
"RTN","ECXFEKEY",84,0)
 ...S EC8=$$UPP(EC8),EC3="B;"_EC3
"RTN","ECXFEKEY",85,0)
 ..S EC9=$S(EC7'="":EC3_"-"_EC7,1:EC3),EC10=$S(EC8'="":EC5_" - "_EC8,1:EC5)
"RTN","ECXFEKEY",86,0)
 ..S ^TMP($J,"ECS",EC9,EC3)=EC10
"RTN","ECXFEKEY",87,0)
 G ECQ
"RTN","ECXFEKEY",88,0)
LOW(X) ;convert string to lowercase
"RTN","ECXFEKEY",89,0)
 F %=2:1:$L(X) I $E(X,%)?1U,$E(X,%-1)?1A S X=$E(X,0,%-1)_$C($A(X,%)+32)_$E(X,%+1,999)
"RTN","ECXFEKEY",90,0)
 Q X
"RTN","ECXFEKEY",91,0)
UPP(X) ;convert string to uppercase
"RTN","ECXFEKEY",92,0)
 F %=1:1:$L(X) S:$E(X,%)?1L X=$E(X,0,%-1)_$C($A(X,%)-32)_$E(X,%+1,999)
"RTN","ECXFEKEY",93,0)
 Q X
"RTN","ECXFEKEY",94,0)
 ;
"RTN","ECXFEKEY",95,0)
PHA ; feeder system for all pharmacy extracts is PHA
"RTN","ECXFEKEY",96,0)
 G:$G(ECPHA)="N" PHA2
"RTN","ECXFEKEY",97,0)
 S EC=0 F  S EC=$O(^PSDRUG(EC)) Q:'EC  I $D(^(EC,0)) S ECD=$P(^(0),U),EC1=$P(^(0),U,2),EC2=$P($G(^(2)),U,4),EC3=$$RJ^XLFSTR($P(EC2,"-"),6,0)_$$RJ^XLFSTR($P(EC2,"-",2),4,0)_$$RJ^XLFSTR($P(EC2,"-",3),2,0),EC3=$TR(EC3,"*","0") D
"RTN","ECXFEKEY",98,0)
 .S:EC1="" EC1="ZZ999" S:EC3="000000000000" EC3="999999999999"
"RTN","ECXFEKEY",99,0)
 .S ^TMP($J,"PHA",EC1_EC3,EC)=ECD
"RTN","ECXFEKEY",100,0)
 Q
"RTN","ECXFEKEY",101,0)
PHA2 ;NEW PHA Feeder Key List sorted by NDF Match
"RTN","ECXFEKEY",102,0)
 S ECXYM(1)=$$ECXYM^ECXUTL(2980930),ECXYM(2)=$$ECXYM^ECXUTL(DT)
"RTN","ECXFEKEY",103,0)
 ;pre ndf v4
"RTN","ECXFEKEY",104,0)
 I +ECPHA2<2 S EC=0 F  S EC=$O(^PSDRUG(EC)) Q:'EC  I $D(^PSDRUG(EC,0)) D
"RTN","ECXFEKEY",105,0)
 .S ECD=$P(^PSDRUG(EC,0),U),ECNDC=$P($G(^PSDRUG(EC,2)),U,4),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXFEKEY",106,0)
 .S ECNDF=$G(^PSDRUG(EC,"ND")),P1=$P(ECNDF,U),P3=$P(ECNDF,U,3)
"RTN","ECXFEKEY",107,0)
 .I +ECPHA2=1 S ECNFC=$$DSS^PSNAPIS(P1,P3,DT)_ECNFC
"RTN","ECXFEKEY",108,0)
 .I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXFEKEY",109,0)
 .Q:+ECNFC=0
"RTN","ECXFEKEY",110,0)
 .S ECNFC="A"_ECNFC,^TMP($J,"PHA",ECNFC,EC)=ECD
"RTN","ECXFEKEY",111,0)
 ;after ndf v4
"RTN","ECXFEKEY",112,0)
 I +ECPHA2=2 S EC=0 F  S EC=$O(^PSDRUG(EC)) Q:'EC  I $D(^PSDRUG(EC,0)) D
"RTN","ECXFEKEY",113,0)
 .S ECD=$P(^PSDRUG(EC,0),U),ECNDC=$P($G(^PSDRUG(EC,2)),U,4),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXFEKEY",114,0)
 .S ECNDF=$G(^PSDRUG(EC,"ND")),P1=$P(ECNDF,U),P3=$P(ECNDF,U,3)
"RTN","ECXFEKEY",115,0)
 .;get the 19 character key
"RTN","ECXFEKEY",116,0)
 .S ECNFC(1)=$$DSS^PSNAPIS(P1,P3,ECXYM(1))_ECNFC
"RTN","ECXFEKEY",117,0)
 .;get the 17 character key
"RTN","ECXFEKEY",118,0)
 .S ECNFC(2)=$$DSS^PSNAPIS(P1,P3,ECXYM(2))_ECNFC
"RTN","ECXFEKEY",119,0)
 .Q:((+ECNFC(1)=0)&(+ECNFC(2)=0))
"RTN","ECXFEKEY",120,0)
 .;2nd piece of variable ecpha2 determines sort order
"RTN","ECXFEKEY",121,0)
 .S ECNFC(1)="A"_ECNFC(1),ECNFC(2)="A"_ECNFC(2)
"RTN","ECXFEKEY",122,0)
 .I $P(ECPHA2,U,2)=1 S ^TMP($J,"PHA",ECNFC(1),EC)=ECD_U_ECNFC(2)
"RTN","ECXFEKEY",123,0)
 .I $P(ECPHA2,U,2)=2 S ^TMP($J,"PHA",ECNFC(2),EC)=ECD_U_ECNFC(1)
"RTN","ECXFEKEY",124,0)
 Q
"RTN","ECXFEKEY",125,0)
CLI S SC=0 F  S SC=$O(^SC(SC)) Q:'SC  I $D(^(SC,0)) S EC=^(0),ECD=$P(EC,U) I $P(EC,U,3)="C" D  S ^TMP($J,"CLI","A;"_P1_P2_ECLEN_P3_"0",SC)=ECD
"RTN","ECXFEKEY",126,0)
 .S ECSC=$P($G(^DIC(40.7,+$P(EC,U,7),0)),U,2),ECCSC=$P($G(^DIC(40.7,+$P(EC,U,18),0)),U,2)
"RTN","ECXFEKEY",127,0)
 .S ECLEN="NNN" I $D(^SC(SC,"SL")),$P(^("SL"),U,2)'="V" S ECLEN=$S($P(^("SL"),U):$P(^("SL"),U),1:"NNN"),ECLEN=$E("000"_ECLEN,$L(ECLEN)+1,$L(ECLEN)+3)
"RTN","ECXFEKEY",128,0)
 .S (P1,P2)="000",P3="0000" I '$D(^ECX(728.44,SC,0)),ECCSC]"" S ECST=5,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3),P2=$E("000"_ECCSC,$L(ECCSC)+1,$L(ECCSC)+3) Q
"RTN","ECXFEKEY",129,0)
 .I '$D(^ECX(728.44,SC,0)) S ECST=1,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3) Q
"RTN","ECXFEKEY",130,0)
 .S EC=^ECX(728.44,SC,0),ECST=$P(EC,U,6)
"RTN","ECXFEKEY",131,0)
 .I ECST=6 Q
"RTN","ECXFEKEY",132,0)
 .;action code 6 means ignore
"RTN","ECXFEKEY",133,0)
 .I $P(EC,U,4)]"" S ECSC=$P(EC,U,4)
"RTN","ECXFEKEY",134,0)
 .I $P(EC,U,5)]"" S ECCSC=$P(EC,U,5)
"RTN","ECXFEKEY",135,0)
 .I ECST="" S ECST=4,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3),P3=$E("0000"_SC,$L(SC)+1,$L(SC)+4) S:ECCSC P2=$E("000"_ECCSC,$L(ECCSC)+1,$L(ECCSC)+3) Q
"RTN","ECXFEKEY",136,0)
 .I ECST<2 S P1=ECSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3) Q
"RTN","ECXFEKEY",137,0)
 .I ECST=2 S P1=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3) Q
"RTN","ECXFEKEY",138,0)
 .I ECST=3 S P1=ECSC,P11=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3),P11=$E("000"_P11,$L(P11)+1,$L(P11)+3) Q
"RTN","ECXFEKEY",139,0)
 .I ECST>3,ECST<7 S P1=ECSC,P2=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3),P2=$E("000"_P2,$L(P2)+1,$L(P2)+3) S:ECST=4 P3=$P($G(^ECX(728.441,+$P(^ECX(728.44,SC,0),U,8),0)),U) I P3="" S P3=$E("0000"_SC,$L(SC)+1,$L(SC)+4)
"RTN","ECXFEKEY",140,0)
 K ECLEN Q
"RTN","ECXFEKEY",141,0)
RAD S EC=0 F  S EC=$O(^RAMIS(71,EC)) Q:'EC  I $D(^(EC,0)) S EC1=^(0),ECD=$P(EC1,U),EC2=$P($G(^ICPT(+$P(EC1,U,9),0)),U) S:EC2="" EC2="Unknown" S ^TMP($J,"RAD",EC2,EC)=ECD
"RTN","ECXFEKEY",142,0)
 S ^TMP($J,"RAD",88888,88888)="Portable procedure",^TMP($J,"RAD",99999,99999)="OR procedure"
"RTN","ECXFEKEY",143,0)
 Q
"RTN","ECXFEKEY",144,0)
NUR F EC=1:1:11 S EC1=$P($T(@EC),";",3) F EC2=0:1:5 S ^TMP($J,"NUR",$P(EC1,U)_"-"_EC2,EC2)=$P(EC1,U,2)_" LEVEL "_EC2
"RTN","ECXFEKEY",145,0)
1 ;;PSI^PSYCHIATRIC
"RTN","ECXFEKEY",146,0)
2 ;;SUR^SURGICAL
"RTN","ECXFEKEY",147,0)
3 ;;MED^MEDICAL (EXCLUDE SCI)
"RTN","ECXFEKEY",148,0)
4 ;;SCI^MEDICAL (SCI)
"RTN","ECXFEKEY",149,0)
5 ;;NUR^NURSING HOME CARE UNIT
"RTN","ECXFEKEY",150,0)
6 ;;REC^RECOVERY ROOM
"RTN","ECXFEKEY",151,0)
7 ;;ITN^INTENSIVE CARE
"RTN","ECXFEKEY",152,0)
8 ;;HEM^HEMODIALYSIS
"RTN","ECXFEKEY",153,0)
9 ;;INT^INTERMEDIATE CARE
"RTN","ECXFEKEY",154,0)
10 ;;DOM^DOMICILIARY
"RTN","ECXFEKEY",155,0)
11 ;;ALC^ALCOHOL AND DRUG TREATMENT
"RTN","ECXFEKEY",156,0)
 Q
"RTN","ECXFEKEY",157,0)
QUIT ;
"RTN","ECXFEKEY",158,0)
 K ECY,ECPHA,ECECS,ECLAB,DIR,DIRUT,DUOUT,X,Y
"RTN","ECXFEKEY",159,0)
 Q
"RTN","ECXFELOC")
0^63^B17110525
"RTN","ECXFELOC",1,0)
ECXFELOC ;BIR/DMA,CML-Print Feeder Locations; [ 05/07/96  8:41 AM ]
"RTN","ECXFELOC",2,0)
 ;;3.0;DSS EXTRACTS;**1,8**;Dec 22, 1997
"RTN","ECXFELOC",3,0)
EN ;entry point from option
"RTN","ECXFELOC",4,0)
 W !!,"Print list of feeder locations.",! S QFLG=1
"RTN","ECXFELOC",5,0)
 K %ZIS S %ZIS="Q" D ^%ZIS Q:POP 
"RTN","ECXFELOC",6,0)
 I $D(IO("Q")) S ZTDESC="Feeder Location List (DSS)",ZTRTN="START^ECXFELOC" D ^%ZTLOAD D ^%ZISC G OUT
"RTN","ECXFELOC",7,0)
 U IO
"RTN","ECXFELOC",8,0)
START ;queued entry point
"RTN","ECXFELOC",9,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXFELOC",10,0)
 K ^TMP($J) S (QFLG,PG)=0,$P(LN,"-",81)=""
"RTN","ECXFELOC",11,0)
LAB S EC=0 F  S EC=$O(^LRO(68,EC)) Q:'EC  I $D(^(EC,0)) S EC1=^(0),^TMP($J,"LAB",$P(EC1,U,11),EC)=$P(EC1,U)
"RTN","ECXFELOC",12,0)
ECS S EC=0 I $P($G(^EC(720.1,1,0)),U,2) D  G IV
"RTN","ECXFELOC",13,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),"-",1,2),EC2=$P($G(^ECD(+$P(EC1,"-",2),0)),U),^TMP($J,"ECS",EC1,EC1)=EC2
"RTN","ECXFELOC",14,0)
 F  S EC=$O(^ECK(EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),"-",1,2),EC2=$P($G(^ECD(+$P(EC1,"-",2),0)),U),^TMP($J,"ECS",EC1,EC1)=EC2
"RTN","ECXFELOC",15,0)
IV S EC=0 F  S EC=$O(^DG(40.8,EC)) Q:'EC  I $D(^DG(40.8,EC,0)) S EC1=$E($P(^(0),U),1,30),^TMP($J,"IVP","IVP"_EC,EC)="IV Pharmacy-"_EC1
"RTN","ECXFELOC",16,0)
CLI S EC=0 F  S EC=$O(^SC(EC)) Q:'EC  I $D(^(EC,0)) S EC1=^(0),ECS=$P(EC1,U,15),ECSC=$P($G(^DIC(40.7,+$P(EC1,U,7),0)),U,2),ECD=$P(EC1,U) S:'ECS ECS=1 D
"RTN","ECXFELOC",17,0)
 .I $P(EC1,U,17)'="Y",$P(EC1,U,3)="C" S DAT=$G(^SC(EC,"I")),ID=+DAT,RD=$P(DAT,U,2) I 'ID!(ID>DT)!(RD&(RD<DT)) S ^TMP($J,"CLI",ECS_ECSC,EC)=ECD
"RTN","ECXFELOC",18,0)
PRE I $O(^PS(59,0)) G V6
"RTN","ECXFELOC",19,0)
 S EC=0 F  S EC=$O(^DIC(59,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$E($P(^(0),U),1,30),^TMP($J,"PRE","PRE"_EC,EC)="Prescriptions-"_EC1
"RTN","ECXFELOC",20,0)
 G RAD
"RTN","ECXFELOC",21,0)
V6 S EC=0 F  S EC=$O(^PS(59,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$E($P(^(0),U),1,30),^TMP($J,"PRE","PRE"_EC,EC)="Prescriptions-"_EC1
"RTN","ECXFELOC",22,0)
RAD S EC=0 F  S EC=$O(^RA(79,EC)),EC1=0 Q:'EC  I $D(^(EC,0)) S ECD=$P(^(0),U) F  S EC1=$O(^RA(79.2,EC1)) Q:'EC1  I $D(^(EC1,0)) S ECD1=$P(^(0),U),^TMP($J,"RAD",EC_"-"_EC1,EC_"-"_EC1)=ECD_"-"_ECD1
"RTN","ECXFELOC",23,0)
NUR S EC=0 F  S EC=$O(^NURSF(211.4,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),U),EC1=$P($G(^SC(+EC1,0)),U),^TMP($J,"NUR",EC,EC)=EC1
"RTN","ECXFELOC",24,0)
SUR F EC=1:1:14 S EC2=$P($T(@EC),";",3) F EC1="I","A","D","M","P","C","S" S EC3=$P($T(@EC1),";",3),^TMP($J,"SUR",$P(EC2,U)_EC1,EC)=$P(EC2,U,2)_"-"_EC3
"RTN","ECXFELOC",25,0)
1 ;;ORGE^GENERAL PURPOSE OPERATING ROOM
"RTN","ECXFELOC",26,0)
2 ;;OROR^ORTHOPEDIC OPERATING ROOM
"RTN","ECXFELOC",27,0)
3 ;;ORCA^CARDIAC OPERATING ROOM
"RTN","ECXFELOC",28,0)
4 ;;ORNE^NEUROSURGERY OPERATING ROOM
"RTN","ECXFELOC",29,0)
5 ;;ORCN^CARDIAC/NEURO OPERATING ROOM
"RTN","ECXFELOC",30,0)
6 ;;ORAM^AMBULATORY OPERATING ROOM
"RTN","ECXFELOC",31,0)
7 ;;ORIN^INTENSIVE CARE UNIT
"RTN","ECXFELOC",32,0)
8 ;;OREN^ENDOSCOPY ROOM
"RTN","ECXFELOC",33,0)
9 ;;ORCY^CYSTOSCOPY ROOM
"RTN","ECXFELOC",34,0)
10 ;;ORWA^WARD
"RTN","ECXFELOC",35,0)
11 ;;ORCL^CLINIC
"RTN","ECXFELOC",36,0)
12 ;;ORDE^DEDICATED ROOM
"RTN","ECXFELOC",37,0)
13 ;;OROT^OTHER LOCATION
"RTN","ECXFELOC",38,0)
14 ;;ORNO^UNKNOWN
"RTN","ECXFELOC",39,0)
I ;;IMPLANTS
"RTN","ECXFELOC",40,0)
A ;;ANESTHESIA TIME
"RTN","ECXFELOC",41,0)
D ;;SURGERY TIME (DENTAL)
"RTN","ECXFELOC",42,0)
M ;;SURGERY TIME (MEDICINE)
"RTN","ECXFELOC",43,0)
P ;;SURGERY TIME (PSYCH)
"RTN","ECXFELOC",44,0)
C ;;SURGERY TIME (SPINAL CORD)
"RTN","ECXFELOC",45,0)
S ;;SURGERY TIME (SURGERY)
"RTN","ECXFELOC",46,0)
UDP S EC=0 F  S EC=$O(^DG(40.8,EC)) Q:'EC  I $D(^DG(40.8,EC,0)) S EC1=$E($P(^(0),U),1,30),^TMP($J,"UDP","UDP"_EC,EC)="Unit Dose Medications-"_EC1
"RTN","ECXFELOC",47,0)
DEN S EC=0 F  S EC=$O(^DENT(225,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),U),^TMP($J,"DEN",EC1,EC)="Dental "_EC1
"RTN","ECXFELOC",48,0)
 ;
"RTN","ECXFELOC",49,0)
PRINT ;
"RTN","ECXFELOC",50,0)
 S EC="" F  S EC=$O(^TMP($J,EC)),EC1="" Q:EC=""  Q:QFLG  D HEAD Q:QFLG  F  S EC1=$O(^TMP($J,EC,EC1)),EC2=""  Q:EC1=""  Q:QFLG  F  S EC2=$O(^TMP($J,EC,EC1,EC2)) Q:EC2=""  Q:QFLG  D
"RTN","ECXFELOC",51,0)
 .W !,?5,EC1,?23,^(EC2) I $Y+3>IOSL D HEAD Q:QFLG
"RTN","ECXFELOC",52,0)
OUT I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECXFELOC",53,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXFELOC",54,0)
 K ^TMP($J),DAT,EC,EC1,EC2,EC3,ECD,ECD1,ECS,ECSC,ID,JJ,LN,PG,POP,QFLG,RD,SS,X,Y
"RTN","ECXFELOC",55,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","ECXFELOC",56,0)
HEAD ;
"RTN","ECXFELOC",57,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXFELOC",58,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXFELOC",59,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,?15,"Feeder Location List For Feeder System ",EC,?72,"Page: ",PG,!!,?5,"FEEDER LOCATION",?23,"DESCRIPTION",!,LN
"RTN","ECXFELOC",60,0)
 Q
"RTN","ECXKILL")
0^75^B13006405
"RTN","ECXKILL",1,0)
ECXKILL ;BIR/DMA,PTD-Kill Local Variables ; 02/06/97 10:25 [ 03/27/97  12:43 PM ]
"RTN","ECXKILL",2,0)
 ;;3.0;DSS EXTRACTS;**9,8**;Dec 22, 1997
"RTN","ECXKILL",3,0)
 K %,%DT,%Y,%ZIS,A,A1,A2,ABR,B,BY,D,D0,D1,DA,DAT,DATA,DATA1,DATA2,DATA6,DATAOP,DD,DFN,DHDH,DIC,DIE,DIK,DINUM,DIQ
"RTN","ECXKILL",4,0)
 K DIR,DIRUT,DO,DOB,DR,DTOUT,DUOUT,EC,EC0,EC1,EC10,EC11,EC16,EC2,EC23,EC2NODE,EC3,EC42,EC50,EC6,EC7,ECA,ECAC,ECACA,ECAD,ECADM,ECALL
"RTN","ECXKILL",5,0)
 K ECANE,ECAO,ECARG,ECAS,ECAT,ECATSV,ECB,ECC,ECCA,ECCAN,ECCAT,ECCH,ECCN,ECCNT,ECCS,ECCSC,ECD,ECD0,ECD1,ECDA,ECDAL,ECDAT
"RTN","ECXKILL",6,0)
 K ECDATA,ECDATA1,ECDATE,ECDEN,ECDEX,ECDF,ECDFN,ECDFN0,ECDI,ECDIA,ECDIF,ECDIV,ECDL,ECDN,ECDNEW,ECDO,ECDOC,ECDR,ECDRG,ECDS,ECDSSU,ECDT,ECDTTM
"RTN","ECXKILL",7,0)
 K ECDU,ECEC0,ECED,ECED1,ECEDN,ECEDNEW,ECF,ECF1,ECFD,ECFDT,ECFILE,ECFK,ECFL,ECFR,ECGRP,ECH,ECHD,ECHEAD,ECI,ECID,ECIEN,ECIFN,ECIN
"RTN","ECXKILL",8,0)
 K ECINST,ECINV,ECIV,ECJ,ECK,ECL,ECL1,ECLAN,ECLAST,ECLDT,ECLINK,ECLIST,ECLL,ECLN,ECLOC,ECLRN,ECLX,ECLY,ECM,ECMAX,ECMIN
"RTN","ECXKILL",9,0)
 K ECXMISS,ECMN,ECMOD,ECMODS,ECMORE,ECMS,ECMSG,ECMSN,ECMT,ECMW,ECMY,ECN,ECNA,ECNDC,ECNDF,ECNFC,ECNL,ECNO,ECNODE,ECNOGO
"RTN","ECXKILL",10,0)
 K ECNT,ECO,ECO0,ECO1,ECO2,ECOB,ECODE,ECODE0,ECODE1,ECOLD,ECONE,ECOPAY,ECOPAYT,ECORTY,ECOS,ECP,ECPACK,ECPCE,ECPCE1,ECPCE2,ECPCE3,ECPCE4,ECPCE5,ECPCE6,ECPCE7,ECPIECE,ECPN,ECPRC,ECPRO
"RTN","ECXKILL",11,0)
 K ECPROF,ECPT,ECPTF,ECPTPR,ECPTTM,ECQ,ECQT,ECQTY,ECRD,ECRE,ECRED,ECREF,ECRFL,ECRN,ECROU,ECRR,ECRS,ECRSD,ECRTN,ECRX,ECS,ECSA,ECSC
"RTN","ECXKILL",12,0)
 K ECSD,ECSD1,ECSDN,ECSN,ECSR,ECSS,ECST,ECSTOP,ECSU,ECT,ECT1,ECTD,ECTD1,ECTEMP,ECTM,ECTNTL,ECTOTAL,ECTREAT,ECTRT,ECTS,ECTY,ECU,ECU2,ECU2A
"RTN","ECXKILL",13,0)
 K ECU3,ECU3A,ECUD,ECUI,ECUN,ECUN1,ECUNIT,ECURG,ECUT,ECUT2,ECUT3,ECV,ECW,ECWC,ECWD,ECX,ECXB,ECXLNCNT,ECXMDA,ECXMDT,ECXNOW,ECXQUEUE,ECXS,ECXSTART
"RTN","ECXKILL",14,0)
 K ECY,ECYM,ECZ,ECZNODE,ELIG,ENL,FAC,FLDS,FR,I,ID,IOP,J,K,L,LOC,LOS,LRDFN,NAM,OPC,P,P1,P11,P2,P3,POP,Q,RACE,RD,RESP,QFLG
"RTN","ECXKILL",15,0)
 K SC,SRDA,SRNM,SSN,STC,SU,TEN,TES,TIME,TO,TOT,VAERR,VAIP,VET,W,WTO,X,X1,X2,XMDUZ,XMER,XMFROM,XMREC,XMRG,XMSER,XMSUB
"RTN","ECXKILL",16,0)
 K XMTEXT,XMY,XMZ,XQMSG,XQSOP,XQSUB,XX,Y,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK,ECSTA,ECCTY,STATE,COUNTY,ECVER
"RTN","ECXKILL",17,0)
 K ECCPT,ECEKG,ECICD,ECPROV,ECREC,ECVAL,ECVIS,NCNTR,PTADT,STOP,ECIVRM,ECOR,ECWK,ECWKLD,LREDT,LRSDT,FD,ECHL,ECARSC
"RTN","ECXKILL",18,0)
 K ECDTST,ECLTST,ECODE2,ECORDT,ECORTM,ECRDDT,ECRDTM,ECRES,ECWCDA,ECXINST,ECX2TME
"RTN","ECXKILL",19,0)
 K ECXATT,ECXATTL,ECXATTN,ECXLOS,ECXLOSA,ECXLOSP,ECXPRV,ECXPRVL,ECXPRVN,ECXTRT,ECXTRTL,ECXTRTN,ECXSPC,ECXSPCL,ECXSPCN
"RTN","ECXKILL",20,0)
 K ECCSC,ECXSC,ECXP1,ECXP2,ECXP3,ECXDSSI,ECXYM,ECXDIV,ECXDAY,ECXSSN
"RTN","ECXKILL",21,0)
 ;
"RTN","ECXKILL",22,0)
AUDIT ;kill audit report variables
"RTN","ECXKILL",23,0)
 K ECX,ECXARRAY,ECXACC,ECXALL,ECXAUD,ECXD,ECXDEF,ECXDESC,ECXDIV
"RTN","ECXKILL",24,0)
 K ECXEND,ECXERR,ECXEXT,ECXHEAD,ECXLOC,ECXPGM,ECXRUN,ECXSAVE,ECXSTART
"RTN","ECXKILL",25,0)
 K IO("Q"),POP,DIR,DIC,DIE,DA,DR,DO,DIRUT,DUOUT,DTOUT
"RTN","ECXKILL",26,0)
 K ^TMP($J,"ECXORDER"),^TMP($J,"ECXWARD"),^TMP($J,"ECXAUD"),^TMP($J,"MOV"),^TMP($J,"TL"),^TMP($J,"ECXPROC"),^TMP($J,"ECXTS"),^TMP($J,"ECXFL"),^TMP($J,"ECXSPEC"),^TMP($J,"ECXPATS")
"RTN","ECXKILL",27,0)
 Q
"RTN","ECXLAB1")
0^29^B7105289
"RTN","ECXLAB1",1,0)
ECXLAB1 ;ALB/JAP,BIR/CML-Driver Routine for DSS Lab Extract; [ 03/20/97  11:54 AM ]
"RTN","ECXLAB1",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXLAB1",3,0)
EN ;entry point from option
"RTN","ECXLAB1",4,0)
 N JJ,SS,LN,X,Y,DIRUT,DTOUT,DUOUT,DIR
"RTN","ECXLAB1",5,0)
 I '$O(^ECX(728,0)) D  Q
"RTN","ECXLAB1",6,0)
 .W $C(7),!!,"You have not yet defined your facility in the DSS EXTRACTS file (#728)!"
"RTN","ECXLAB1",7,0)
 .I ($E(IOST)="C") D
"RTN","ECXLAB1",8,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLAB1",9,0)
 ..K X,Y
"RTN","ECXLAB1",10,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXLAB1",11,0)
 ;Check for lmip flag (field .5) in file (#728), if "1" then skip this question
"RTN","ECXLAB1",12,0)
 I $G(^ECX(728,1,"LMIP")) D  Q
"RTN","ECXLAB1",13,0)
 .D BEG^ECXLABN
"RTN","ECXLAB1",14,0)
 S $P(LN,"-",80)=""
"RTN","ECXLAB1",15,0)
 W $C(7),@IOF,!,LN,!,"     ARE YOU COMPLETELY READY TO SEND LMIP CODES FOR DSS LAB FEEDER KEYS?      ",!,LN
"RTN","ECXLAB1",16,0)
 W !!,"To answer ""YES"" to this question, Lab CO directives for LMIP MUST have"
"RTN","ECXLAB1",17,0)
 W !,"been completed at your facility. This means that your Lab Service must"
"RTN","ECXLAB1",18,0)
 W !,"have matched all entries in the LABORATORY TEST file (#60) to an LMIP"
"RTN","ECXLAB1",19,0)
 W !,"code.  After this is accomplished, you are ready to send LMIP codes to"
"RTN","ECXLAB1",20,0)
 W !,"DSS for your initial LAB Feeder Key Values."
"RTN","ECXLAB1",21,0)
 W !!?30,"**IMPORTANT NOTES**",!,"- Once you answer ""YES"" to send LMIP Codes, you will not be asked this"
"RTN","ECXLAB1",22,0)
 W !,"  question again.  All LAB extracts will send LMIP Codes."
"RTN","ECXLAB1",23,0)
 W !,"- Answering ""NO"" will prevent generation of DSS LAB extracts"
"RTN","ECXLAB1",24,0)
 W !,"- If you are not sure, enter an ""^"" at the next prompt and check with"
"RTN","ECXLAB1",25,0)
 W !,"  your LAB ADPAC or LAB Service before continuing."
"RTN","ECXLAB1",26,0)
 W ! K DIR D HELP S DIR(0)="Y",DIR("A")="Are you ready to send LMIP codes",DIR("B")="NO"
"RTN","ECXLAB1",27,0)
 D ^DIR K DIR
"RTN","ECXLAB1",28,0)
 I 'Y D
"RTN","ECXLAB1",29,0)
 .W !!,"LAB Extracts cannot be generated without LMIP Codes.",!,"...exiting."
"RTN","ECXLAB1",30,0)
 I Y D
"RTN","ECXLAB1",31,0)
 .W !!,"Proceeding with LAB extract...",!
"RTN","ECXLAB1",32,0)
 .S ^ECX(728,1,"LMIP")=1
"RTN","ECXLAB1",33,0)
 I '$D(DIRUT),($E(IOST)="C") D
"RTN","ECXLAB1",34,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLAB1",35,0)
 .K X,Y
"RTN","ECXLAB1",36,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXLAB1",37,0)
 Q
"RTN","ECXLAB1",38,0)
 ;
"RTN","ECXLAB1",39,0)
HELP ;
"RTN","ECXLAB1",40,0)
 S DIR("?",1)="   Enter:"
"RTN","ECXLAB1",41,0)
 S DIR("?",2)="     ""YES"" if your site is ready to send LMIP codes,"
"RTN","ECXLAB1",42,0)
 S DIR("?",3)="      ""NO"" if your site cannot send LMIP Codes,"
"RTN","ECXLAB1",43,0)
 S DIR("?")="       ""^"" to exit option."
"RTN","ECXLAB1",44,0)
 Q
"RTN","ECXLABN")
0^74^B14495301
"RTN","ECXLABN",1,0)
ECXLABN ;ALB/JAP,BIR/CML-Lab Extract for DSS (New Format - With LMIP Codes) ; [ 11/22/96  5:14 PM ]
"RTN","ECXLABN",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8**;Dec 22, 1997
"RTN","ECXLABN",3,0)
BEG ;entry point
"RTN","ECXLABN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABN",6,0)
 Q
"RTN","ECXLABN",7,0)
 ;
"RTN","ECXLABN",8,0)
START ; entry when queued
"RTN","ECXLABN",9,0)
 N QFLG
"RTN","ECXLABN",10,0)
 S QFLG=0
"RTN","ECXLABN",11,0)
 K ^LRO(64.03)
"RTN","ECXLABN",12,0)
 S LRSDT=ECSD,LREDT=ECED
"RTN","ECXLABN",13,0)
 D ^LRCAPDSS
"RTN","ECXLABN",14,0)
 ;quit if no completion date for API compile
"RTN","ECXLABN",15,0)
 I '$P($G(^LRO(64.03,1,1,1,0)),U,4) Q
"RTN","ECXLABN",16,0)
 ;quit if tasked and user sends stop request
"RTN","ECXLABN",17,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","ECXLABN",18,0)
 .K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",19,0)
 ;otherwise, continue
"RTN","ECXLABN",20,0)
 K ECXDD D FIELD^DID(64.03,1,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXLABN",21,0)
 S ECLRN=1
"RTN","ECXLABN",22,0)
 F  S ECLRN=$O(^LRO(64.03,ECLRN)) Q:'ECLRN  D  Q:QFLG
"RTN","ECXLABN",23,0)
 .Q:'$D(^LRO(64.03,ECLRN,0))
"RTN","ECXLABN",24,0)
 .S EC1=^LRO(64.03,ECLRN,0)
"RTN","ECXLABN",25,0)
 .S ECDOC=ECPROF_$P(EC1,U,2),ECLOC=$P(EC1,U,15),EC=$P(EC1,U,3)
"RTN","ECXLABN",26,0)
 .I EC]"" D GET
"RTN","ECXLABN",27,0)
 K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",28,0)
 Q
"RTN","ECXLABN",29,0)
 ;
"RTN","ECXLABN",30,0)
GET ;get data
"RTN","ECXLABN",31,0)
 N X
"RTN","ECXLABN",32,0)
 S ECF=$S($P(EC,";",2)="DPT(":2,$P(EC,";",2)="LRT(67,":67,1:0) Q:'ECF
"RTN","ECXLABN",33,0)
 S ECIFN=$P(EC,";")
"RTN","ECXLABN",34,0)
 ;resolve ecloc
"RTN","ECXLABN",35,0)
 S ECXL1=+$P(ECLOC,";",1),ECXL2=$P(ECLOC,";",2)
"RTN","ECXLABN",36,0)
 I ECF=2 S ECLOC=$S(ECXL1>0:ECXL1,1:"") I ECXL2]"",ECXL2'="SC(" S ECLOC=""
"RTN","ECXLABN",37,0)
 I ECF=67 D  S ECLOC=ECXSTN
"RTN","ECXLABN",38,0)
 .S (ECXSTN,ECXAGC)=""
"RTN","ECXLABN",39,0)
 .I ECXL2'="DIC(4," S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",40,0)
 .I '$D(^DIC(4,ECXL1)) S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",41,0)
 .I $D(^DIC(4,ECXL1)) S ECXSTN=$P(^DIC(4,ECXL1,"99"),U,1),ECXAGC=$E($P(^(99),U,5),1,2) S:ECXSTN="" ECXSTN="ZZZZZ" S:ECXAGC="" ECXAGC="ZZ"
"RTN","ECXLABN",42,0)
 S ECDT=$P(EC1,U,13),ECD=$P(ECDT,"."),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXLABN",43,0)
 S ECWKLD=$P(EC1,U,11),ECWK="" I $D(^LAM(ECWKLD,0)) S ECWK=$P(^(0),U,2)
"RTN","ECXLABN",44,0)
 S (ECNA,ECSN,ECMN,ECPTTM,ECPTPR)="",ECA=1
"RTN","ECXLABN",45,0)
 ;get the patient data if record is in file #2
"RTN","ECXLABN",46,0)
 I ECF=2,$D(^DPT(ECIFN,0)) D
"RTN","ECXLABN",47,0)
 .S EC0=^DPT(ECIFN,0),ECNA=$E($P($P(EC0,U),",")_"    ",1,4),ECSN=$P(EC0,U,9)
"RTN","ECXLABN",48,0)
 .S X=$$INP^ECXUTL2(ECIFN,ECD),ECA=$P(X,U,1),ECMN=$P(X,U,2)
"RTN","ECXLABN",49,0)
 .S X=$$PRIMARY^ECXUTL2(ECIFN,ECD,ECPROF),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2)
"RTN","ECXLABN",50,0)
 ;get patient data if record is in file #67
"RTN","ECXLABN",51,0)
 I ECF=67 S ECSN="000123456",ECNA="RFRL" I $D(^LRT(67,ECIFN,0)) D
"RTN","ECXLABN",52,0)
 .S EC0=^LRT(67,ECIFN,0),ECNA=$E($P($P(EC0,U),",")_"    ",1,4),ECSN=$P(EC0,U,9) D
"RTN","ECXLABN",53,0)
 ..S ECNA=$TR(ECNA,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABN",54,0)
 ..I ECSN="" S ECSN="000123456" Q
"RTN","ECXLABN",55,0)
 ..S ECSN=$TR(ECSN," "),ECSN=$TR(ECSN,"-")
"RTN","ECXLABN",56,0)
 ..I ($L(ECSN)<9)!($L(ECSN)>10) S ECSN="000123456" Q
"RTN","ECXLABN",57,0)
 ..I $L(ECSN)=9,ECSN'?9N S ECSN="000123456" Q
"RTN","ECXLABN",58,0)
 ..I $L(ECSN)=10,ECSN'?9N1"P" S ECSN="000123456"
"RTN","ECXLABN",59,0)
 S ECTREAT=$P(EC1,U,10) I ECTREAT S ECTREAT=$P($G(^DIC(45.7,+ECTREAT,0)),U,2)
"RTN","ECXLABN",60,0)
 ;create extract record only if patient name and accession area exist
"RTN","ECXLABN",61,0)
 I ECNA]"" S ECT=$P(EC1,U,8),ECURG=$P(EC1,U,9),EC=+$P(EC1,U,7) I EC D
"RTN","ECXLABN",62,0)
 .S:ECF=2 ECACA=EC_U_$P($G(^LRO(68,EC,0)),U,11) S:ECF=67 ECACA=ECXAGC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",63,0)
 .D FILE
"RTN","ECXLABN",64,0)
 Q
"RTN","ECXLABN",65,0)
 ;
"RTN","ECXLABN",66,0)
FILE ;file record
"RTN","ECXLABN",67,0)
 ;node0
"RTN","ECXLABN",68,0)
 ;inst^patient (or thing) number^SSN (or equivalent)^name^in/out^day^accession area^abbreviation^test^urgency^treating spec^location^provider and file^
"RTN","ECXLABN",69,0)
 ;movement number^file^time^workload code^primary care team^primary care provider
"RTN","ECXLABN",70,0)
 ;node1
"RTN","ECXLABN",71,0)
 ;mpi^dss dept^provider npi^pc provider npi
"RTN","ECXLABN",72,0)
 N DA,DIK
"RTN","ECXLABN",73,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABN",74,0)
 S ECODE=EC7_U_EC23
"RTN","ECXLABN",75,0)
 S ECODE=ECODE_U_ECINST_U_ECIFN_U_ECSN_U_ECNA_U_ECA_U_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECACA_U_ECT_U_ECURG_U_ECTREAT_U_ECLOC_U_ECDOC_U_ECMN_U_ECF_U_ECTM_U_ECWK_U_ECPTTM_U_ECPTPR
"RTN","ECXLABN",76,0)
 ;(ECACA=acc area^abbreviation)
"RTN","ECXLABN",77,0)
 S ECODE1=U_U_U
"RTN","ECXLABN",78,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABN",79,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXLABN",80,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABN",81,0)
 Q
"RTN","ECXLABN",82,0)
 ;
"RTN","ECXLABN",83,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABN",84,0)
 S ECHEAD="LAB"
"RTN","ECXLABN",85,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABN",86,0)
 Q
"RTN","ECXLABN",87,0)
 ;
"RTN","ECXLABN",88,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABN",89,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLABPI")
0^64^B2465114
"RTN","ECXLABPI",1,0)
ECXLABPI ;BIR/DMA-One Time Routine to Print Lab Tests ; 08 Aug 94 / 6:50 AM
"RTN","ECXLABPI",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXLABPI",3,0)
 W !!,"This will print a list of your lab products from the Lab extract file"
"RTN","ECXLABPI",4,0)
 S %ZIS="Q" D ^%ZIS K %ZIS Q:POP
"RTN","ECXLABPI",5,0)
 I $D(IO("Q")) S ZTDESC="Lab product list",ZTRTN="EN^ECXLABPI" D ^%ZTLOAD,^%ZISC K ZTRTN,ZTDESC Q
"RTN","ECXLABPI",6,0)
 ;
"RTN","ECXLABPI",7,0)
EN ;
"RTN","ECXLABPI",8,0)
 K ^TMP($J)
"RTN","ECXLABPI",9,0)
 F J=0:0 S J=$O(^ECX(727.813,J)) Q:'J  S EC=$G(^(J,0)) I EC]"" S ABR=$P(EC,U,11),TES=$P(EC,U,12),TEN=$P($G(^LAB(60,+TES,0)),U),^TMP($J,ABR,TES)=TEN
"RTN","ECXLABPI",10,0)
 ;
"RTN","ECXLABPI",11,0)
 D HEAD S ABR="" F  S ABR=$O(^TMP($J,ABR)) Q:ABR=""  F J=0:0 S J=$O(^TMP($J,ABR,J)) Q:'J  W !,?7,ABR,?15,J,?25,^(J) I $Y+4>IOSL D HEAD
"RTN","ECXLABPI",12,0)
 D ^%ZISC S ZTREQ="@" K ^TMP($J) Q
"RTN","ECXLABPI",13,0)
 ;
"RTN","ECXLABPI",14,0)
HEAD W:$Y @IOF W !,?20,"LAB EXTRACT PRODUCTS",!,"ACCESSION",?12,"NUMBER",?30,"DESCRIPTION",!!
"RTN","ECXLABPI",15,0)
 Q
"RTN","ECXLABR")
0^28^B10392908
"RTN","ECXLABR",1,0)
ECXLABR ;ALB/JAP,BIR/CML-LAR Extract for DSS (New Format - With LMIP Codes) ; [ 03/05/97  2:55 PM ]
"RTN","ECXLABR",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXLABR",3,0)
BEG ;entry point from option
"RTN","ECXLABR",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABR",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABR",6,0)
 Q
"RTN","ECXLABR",7,0)
 ;
"RTN","ECXLABR",8,0)
START ; entry when queued
"RTN","ECXLABR",9,0)
 N QFLG
"RTN","ECXLABR",10,0)
 K ^LAR(64.036) S LRSDT=ECSD,LREDT=ECED
"RTN","ECXLABR",11,0)
 D ^LRCAPDAR
"RTN","ECXLABR",12,0)
 ;quit if no completion date for API compile
"RTN","ECXLABR",13,0)
 I '$P($G(^LAR(64.036,1,2,1,0)),U,4) Q
"RTN","ECXLABR",14,0)
 ;build local array of workload codes for local lab tests linked to DSS tests
"RTN","ECXLABR",15,0)
 K ECLOC S ECDTST=0
"RTN","ECXLABR",16,0)
 F  S ECDTST=$O(^ECX(727.2,1,1,ECDTST)) Q:'ECDTST  S ECLTST=0 F  S ECLTST=$O(^ECX(727.2,1,1,ECDTST,"LOC",ECLTST)) Q:'ECLTST  D
"RTN","ECXLABR",17,0)
 .S ECLTIEN=+^ECX(727.2,1,1,ECDTST,"LOC",ECLTST,0)
"RTN","ECXLABR",18,0)
 .S ECWCDA=+$G(^LAB(60,ECLTIEN,64)) I ECWCDA S ECWC=$P(^LAM(ECWCDA,0),U,2),ECLOC(ECWCDA)=ECWC
"RTN","ECXLABR",19,0)
 K ECLTIEN
"RTN","ECXLABR",20,0)
 ;process temporary lab file #64.036
"RTN","ECXLABR",21,0)
 ;allow for referral patients in future??
"RTN","ECXLABR",22,0)
 N QFLG
"RTN","ECXLABR",23,0)
 S QFLG=0
"RTN","ECXLABR",24,0)
 S ECLRN=1 F  S ECLRN=$O(^LAR(64.036,ECLRN)) Q:'ECLRN  Q:QFLG  I $D(^LAR(64.036,ECLRN,0))  D
"RTN","ECXLABR",25,0)
 .S EC1=^LAR(64.036,ECLRN,0),ECF=$P(EC1,U,2)
"RTN","ECXLABR",26,0)
 .Q:ECF=""
"RTN","ECXLABR",27,0)
 .S ECDFN=$P(EC1,U,3)
"RTN","ECXLABR",28,0)
 .S ECORDT=$$ECXDATE^ECXUTL($P(EC1,U,4),ECXYM),ECORTM=$$ECXTIME^ECXUTL($P(EC1,U,4)_"."_$P(EC1,U,5)),ECRDDT=$$ECXDATE^ECXUTL($P(EC1,U,6),ECXYM),ECRDTM=$$ECXTIME^ECXUTL($P(EC1,U,6)_"."_$P(EC1,U,7))
"RTN","ECXLABR",29,0)
 .S ECDR=$P(EC1,U,6)_"."_$P(EC1,U,7)
"RTN","ECXLABR",30,0)
 .S (ECNA,ECSN,ECMN,ECTREAT)=""
"RTN","ECXLABR",31,0)
 .I ECF=2,$D(^DPT(ECDFN,0)) D
"RTN","ECXLABR",32,0)
 ..S EC0=^DPT(ECDFN,0),ECNA=$E($P($P(EC0,U),",")_"    ",1,4),ECSN=$P(EC0,U,9)
"RTN","ECXLABR",33,0)
 ..S X=$$INP^ECXUTL2(ECDFN,ECDR),ECA=$P(X,U,1),ECMN=$P(X,U,2),ECTS=$P(X,U,3)
"RTN","ECXLABR",34,0)
 .;I ECF=67 S ECSN="000123456",ECNA="RFRL"
"RTN","ECXLABR",35,0)
 .;loop on results multiple
"RTN","ECXLABR",36,0)
 .S ECRES=0
"RTN","ECXLABR",37,0)
 .F  S ECRES=$O(^LAR(64.036,ECLRN,1,ECRES)) Q:('ECRES)!(QFLG)  I $D(^LAR(64.036,ECLRN,1,ECRES,0)) D  Q:QFLG
"RTN","ECXLABR",38,0)
 ..S EC2=^LAR(64.036,ECLRN,1,ECRES,0)
"RTN","ECXLABR",39,0)
 ..S ECN=$P(EC2,U),ECRS=$P(EC2,U,2),ECHL=$E($P(EC2,U,3)),ECWC=+$P(EC2,U,4) S ECWC=$S($D(ECLOC(ECWC)):ECLOC(ECWC),1:"")
"RTN","ECXLABR",40,0)
 ..I ECWC]"" D FILE
"RTN","ECXLABR",41,0)
 K ^LAR(64.036) S ^LAR(64.036,0)="LAB DSS LAR EXTRACT^64.036^"
"RTN","ECXLABR",42,0)
 Q
"RTN","ECXLABR",43,0)
 ;
"RTN","ECXLABR",44,0)
FILE ;file record
"RTN","ECXLABR",45,0)
 ;node0
"RTN","ECXLABR",46,0)
 ;facility^dfn^ssn^name(4)^in/out^day(ready)^lab test code^results^hi/lo indicator^date ordered^time ordered^date ready^time ready^movement file #^treating specialty^workload code(64)
"RTN","ECXLABR",47,0)
 ;node1
"RTN","ECXLABR",48,0)
 ;mpi^dss dept
"RTN","ECXLABR",49,0)
 N DA,DIK
"RTN","ECXLABR",50,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABR",51,0)
 S ECODE=EC7_U_EC23
"RTN","ECXLABR",52,0)
 S ECODE=ECODE_U_ECINST_U_ECDFN_U_ECSN_U_ECNA_U_ECA_U_$$ECXDATE^ECXUTL($P(EC1,U,6),ECXYM)
"RTN","ECXLABR",53,0)
 S ECODE=ECODE_U_$$RJ^XLFSTR(ECN,4,0)_U_ECRS_U_ECHL_U_ECORDT_U_$$LJ^XLFSTR(ECORTM,6,0)_U_ECRDDT_U_$$LJ^XLFSTR(ECRDTM,6,0)_U_ECMN_U_ECTS_U_ECWC
"RTN","ECXLABR",54,0)
 S ECODE1=U
"RTN","ECXLABR",55,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABR",56,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXLABR",57,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABR",58,0)
 Q
"RTN","ECXLABR",59,0)
 ;
"RTN","ECXLABR",60,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABR",61,0)
 S ECHEAD="LAR"
"RTN","ECXLABR",62,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABR",63,0)
 Q
"RTN","ECXLABR",64,0)
 ;
"RTN","ECXLABR",65,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABR",66,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLABRS")
0^65^B8740300
"RTN","ECXLABRS",1,0)
ECXLABRS ;BIR/CML-Set Up the File to Control Extract of Lab Results; [ 02/26/97  2:56 PM ]
"RTN","ECXLABRS",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXLABRS",3,0)
EN ;entry point from option
"RTN","ECXLABRS",4,0)
 W @IOF
"RTN","ECXLABRS",5,0)
 W !,"This option will assist in the steps that create the files necessary to"
"RTN","ECXLABRS",6,0)
 W !,"control the extract of lab results for DSS. This will probably require"
"RTN","ECXLABRS",7,0)
 W !,"a combined effort between DSS personnel and lab personnel."
"RTN","ECXLABRS",8,0)
 ;
"RTN","ECXLABRS",9,0)
ASKTST ;loop on DSS lab tests multiple in 727.21 and the local lab data name subfile 727.211
"RTN","ECXLABRS",10,0)
 W !!!,"Step #1 - For each of the DSS lab tests, identify the tests as they"
"RTN","ECXLABRS",11,0)
 W !?10,"are named in your laboratory.  There may be more than one"
"RTN","ECXLABRS",12,0)
 W !?10,"test in your laboratory to generate the results asked for,"
"RTN","ECXLABRS",13,0)
 W !?10,"in that case, you should enter all such tests."
"RTN","ECXLABRS",14,0)
 F  W ! S DIC="^ECX(727.2,1,1,",DIC(0)="AEQM" D ^DIC Q:Y<0  S TST=+Y D
"RTN","ECXLABRS",15,0)
 .K EC,ECNM S ECNM=$P(^ECX(727.2,1,1,TST,0),U),EC=$P(^(0),U,2),EC=$S(EC="B":"BLOOD",1:"URINE")
"RTN","ECXLABRS",16,0)
 .W !,"(for ",ECNM,", select tests that use ",EC," as a specimen)"
"RTN","ECXLABRS",17,0)
 .W ! F  K DA S DA(2)=1,DA(1)=TST,DIC="^ECX(727.2,"_DA(2)_",1,"_DA(1)_",""LOC"",",DIC(0)="QEAMOLZ" K ECXDD D FIELD^DID(727.21,1,,"SPECIFIER","ECXDD") S DIC("P")=ECXDD("SPECIFIER") K ECXDD D ^DIC K DIC Q:Y<0  S LOC=+Y D
"RTN","ECXLABRS",18,0)
 ..S DA(2)=1,DA(1)=TST,DA=LOC,DIE="^ECX(727.2,"_DA(2)_",1,"_DA(1)_",""LOC"",",DR=.01 D ^DIE K DIE
"RTN","ECXLABRS",19,0)
ASKBLD ;loop on blood specimen multiple 727.22  
"RTN","ECXLABRS",20,0)
 G:$D(DTOUT)!($D(DUOUT)) END
"RTN","ECXLABRS",21,0)
 W !!!,"Step #2 - Define all blood specimens used by your facility."
"RTN","ECXLABRS",22,0)
 W ! F  S DA(1)=1,DIC="^ECX(727.2,"_DA(1)_",""BL"",",DIC(0)="QEAMOLZ" K ECXDD D FIELD^DID(727.2,2,,"SPECIFIER","ECXDD") S DIC("P")=ECXDD("SPECIFIER") K ECXDD D ^DIC K DIC Q:Y<0  D
"RTN","ECXLABRS",23,0)
 .S DA=+Y,DA(1)=1,DIE="^ECX(727.2,"_DA(1)_",""BL"",",DR=.01 D ^DIE K DIE
"RTN","ECXLABRS",24,0)
ASKUR ;loop on urine specimen multiple 727.23  
"RTN","ECXLABRS",25,0)
 G:$D(DTOUT)!($D(DUOUT)) END
"RTN","ECXLABRS",26,0)
 W !!!,"Step #3 - Define all urine specimens used by your facility."
"RTN","ECXLABRS",27,0)
 W ! F  S DA(1)=1,DIC="^ECX(727.2,"_DA(1)_",""UR"",",DIC(0)="QEAMOLZ" K ECXDD D FIELD^DID(727.2,3,,"SPECIFIER","ECXDD") S DIC("P")=ECXDD("SPECIFIER") K ECXDD D ^DIC K DIC Q:Y<0  D
"RTN","ECXLABRS",28,0)
 .S DA=+Y,DA(1)=1,DIE="^ECX(727.2,"_DA(1)_",""UR"",",DR=.01 D ^DIE K DIE
"RTN","ECXLABRS",29,0)
END K DA,DIC,DIE,DR,EC,ECNM,ECXB,ECXS,J,LOC,TST,X,Y Q
"RTN","ECXLARP")
0^66^B8800144
"RTN","ECXLARP",1,0)
ECXLARP ;BIR/CML,PTD-Print DSS Lab Tests Names Datasheet (LAR) ; 12/17/96 11:12 [ 02/26/97  2:57 PM ]
"RTN","ECXLARP",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXLARP",3,0)
EN ;entry point from option
"RTN","ECXLARP",4,0)
 S QFLG=1
"RTN","ECXLARP",5,0)
 W !!,"This option prints a list of the DSS Lab Tests used for the Lab Results",!,"Extract (LAR).  It will display the local lab data names for each test.",!,"The blood and urine specimens used locally are also listed."
"RTN","ECXLARP",6,0)
 I '$O(^ECX(727.2,0)) W !!,"The DSS LAB TEST file (#727.2) does not exist on your system!" G QUIT
"RTN","ECXLARP",7,0)
DEV W !!,"The right margin for this report is 80.",!!
"RTN","ECXLARP",8,0)
 D EN^XUTMDEVQ("START^ECXLARP","DSS - Print DSS Lab Tests") I 'POP Q
"RTN","ECXLARP",9,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","ECXLARP",10,0)
 G QUIT
"RTN","ECXLARP",11,0)
START ;
"RTN","ECXLARP",12,0)
 S (PG,QFLG,CNT)=0,$P(LN,"-",81)="" D NOW^%DTC S Y=$E(%,1,12) X ^DD("DD") S HDT=Y D HDR
"RTN","ECXLARP",13,0)
 S ECLAB="" F  S ECLAB=$O(^ECX(727.2,1,1,"B",ECLAB)) Q:ECLAB=""  Q:QFLG  S ECIEN=0 F  S ECIEN=$O(^ECX(727.2,1,1,"B",ECLAB,ECIEN)) Q:'ECIEN  Q:QFLG  D
"RTN","ECXLARP",14,0)
 .S CNT=CNT+1 D:$Y+4>IOSL HDR Q:QFLG  W !!,$J(CNT,2),". ",ECLAB D
"RTN","ECXLARP",15,0)
 ..Q:'$O(^ECX(727.2,1,1,ECIEN,"LOC",0))
"RTN","ECXLARP",16,0)
 ..S ECLOC=0 F  S ECLOC=$O(^ECX(727.2,1,1,ECIEN,"LOC",ECLOC)) Q:'ECLOC  D:$Y+4>IOSL HDR Q:QFLG  S ECLIEN=+^ECX(727.2,1,1,ECIEN,"LOC",ECLOC,0) W !?9,$P($G(^LAB(60,ECLIEN,0)),U)
"RTN","ECXLARP",17,0)
 K ECLIEN ;** Variable added to accomodate lack of DINUM on 727.2, P #26
"RTN","ECXLARP",18,0)
 G:QFLG QUIT
"RTN","ECXLARP",19,0)
SPEC F ECFLD="BL","UR" D
"RTN","ECXLARP",20,0)
 .I $O(^ECX(727.2,1,ECFLD,0)) D
"RTN","ECXLARP",21,0)
 ..D:$Y+4>IOSL HDR Q:QFLG  W !!!,$S(ECFLD="BL":"BLOOD",1:"URINE")_" SPECIMEN TOPOGRAPHIES",!,$E(LN,1,27)
"RTN","ECXLARP",22,0)
 ..S ECIEN=0 F  S ECIEN=$O(^ECX(727.2,1,ECFLD,ECIEN)) Q:'ECIEN  D:$Y+4>IOSL HDR Q:QFLG  W !,$P($G(^LAB(61,ECIEN,0)),U)
"RTN","ECXLARP",23,0)
QUIT ;
"RTN","ECXLARP",24,0)
 I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECXLARP",25,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLARP",26,0)
 K %I,CNT,ECFLD,ECIEN,ECLAB,ECLOC,HDT,JJ,LN,PG,QFLG,SS,X,Y,ZTSK
"RTN","ECXLARP",27,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","ECXLARP",28,0)
HDR ;HEADER
"RTN","ECXLARP",29,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLARP",30,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXLARP",31,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"DSS Lab Tests Names Datasheet",?72,"Page: ",PG,!,"Printed on ",HDT,!
"RTN","ECXLARP",32,0)
 W !?5,"DSS LAB TEST NAME",!?9,"LOCAL LAB DATA NAME(S)",!,LN
"RTN","ECXLARP",33,0)
 Q
"RTN","ECXMOV")
0^32^B6676158
"RTN","ECXMOV",1,0)
ECXMOV ;ALB/JAP,BIR/DMA,PTD-Transfer and Discharge Extract ; 10/29/96 13:36
"RTN","ECXMOV",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXMOV",3,0)
BEG ;entry point from option
"RTN","ECXMOV",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXMOV",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXMOV",6,0)
 Q
"RTN","ECXMOV",7,0)
 ;
"RTN","ECXMOV",8,0)
START ; start package specific extract
"RTN","ECXMOV",9,0)
 N DSSDEPT,FAC,LOS,PAT,W,WRD,WTO,QFLG,X1,X2,X
"RTN","ECXMOV",10,0)
 S QFLG=0
"RTN","ECXMOV",11,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD") S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXMOV",12,0)
 S ECED=ECED+.3
"RTN","ECXMOV",13,0)
 F ECM=2,3 S ECARG="ATT"_ECM,ECD=ECSD1 F  S ECD=$O(^DGPM(ECARG,ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  D  Q:QFLG
"RTN","ECXMOV",14,0)
 .F  S ECDA=$O(^DGPM(ECARG,ECD,ECDA)) Q:'ECDA  I $D(^DGPM(ECDA,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXMOV",15,0)
 ..S DFN=+$P(EC,U,3),ECMT=$P(EC,U,18) I $D(^DPT(DFN,0)) S PAT=^(0) D  Q:QFLG
"RTN","ECXMOV",16,0)
 ..S ECTM=$$ECXTIME^ECXUTL(ECD)
"RTN","ECXMOV",17,0)
 ..S WTO=$P(EC,U,6),WTO=$P($G(^DIC(42,+WTO,44)),U)
"RTN","ECXMOV",18,0)
 ..S ECCA=$P(EC,U,14),EC=^DGPM(ECCA,0),ECA=$P(EC,U)
"RTN","ECXMOV",19,0)
 ..S ECDL=9999999.9999999-ECD,ECDL=+$O(^DGPM("ATID2",DFN,ECDL)),ECDAL=+$O(^DGPM("ATID2",DFN,ECDL,0)) I $D(^DGPM(ECDAL,0)),$P(^(0),U)>$P(EC,U) S EC=^(0)
"RTN","ECXMOV",20,0)
 ..S W=$P(EC,U,6),WRD=$P($G(^DIC(42,+W,44)),U),FAC=$P($G(^DIC(42,+W,0)),U,11),DSSDEPT=$P($G(^ECX(727.4,W,0)),U,2)
"RTN","ECXMOV",21,0)
 ..S ECDI=$S(ECM=2:"",1:$$ECXDATE^ECXUTL(ECD,ECXYM))
"RTN","ECXMOV",22,0)
 ..S X1=ECD,X2=$P(EC,U) D ^%DTC S LOS=X
"RTN","ECXMOV",23,0)
 ..D FILE
"RTN","ECXMOV",24,0)
 Q
"RTN","ECXMOV",25,0)
FILE ;file the extract record
"RTN","ECXMOV",26,0)
 ;node0
"RTN","ECXMOV",27,0)
 ;fac^dfn^ssn^name^in/out^day^^adm date^disc date^mov #^type^losing ward^treat spec^los^^movement type^mov time^gaining ward^adm time^^
"RTN","ECXMOV",28,0)
 ;node1
"RTN","ECXMOV",29,0)
 ;mpi^dss dept
"RTN","ECXMOV",30,0)
 N DA,DIK
"RTN","ECXMOV",31,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXMOV",32,0)
 S ECODE=EC7_U_EC23
"RTN","ECXMOV",33,0)
 S ECODE=ECODE_U_FAC_U_DFN_U_$P(PAT,U,9)_U_$E($P($P(PAT,U),",")_"    ",1,4)_U_"3"_U_$$ECXDATE^ECXUTL(ECD,ECXYM)_U
"RTN","ECXMOV",34,0)
 S ECODE=ECODE_U_$$ECXDATE^ECXUTL(ECA,ECXYM)_U_ECDI_U_ECDA_U_ECM_U_WRD_U_U_LOS_U_U_ECMT_U_ECTM_U_WTO_U_$$ECXTIME^ECXUTL(ECA)_U_U
"RTN","ECXMOV",35,0)
 S ECODE1=U_DSSDEPT
"RTN","ECXMOV",36,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXMOV",37,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXMOV",38,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXMOV",39,0)
 Q
"RTN","ECXMOV",40,0)
 ;
"RTN","ECXMOV",41,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXMOV",42,0)
 S ECHEAD="MOV"
"RTN","ECXMOV",43,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXMOV",44,0)
 Q
"RTN","ECXMOV",45,0)
 ;
"RTN","ECXMOV",46,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXMOV",47,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXNURS")
0^30^B8203555
"RTN","ECXNURS",1,0)
ECXNURS ;ALB/JAP,BIR/DMA,PTD-Nursing Extract for DSS ; 11/01/96 10:16
"RTN","ECXNURS",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXNURS",3,0)
BEG ;entry point from option
"RTN","ECXNURS",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXNURS",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXNURS",6,0)
 Q
"RTN","ECXNURS",7,0)
 ;
"RTN","ECXNURS",8,0)
START ;entry when queued
"RTN","ECXNURS",9,0)
 N CNT,QFLG
"RTN","ECXNURS",10,0)
 S QFLG=0,CNT=0
"RTN","ECXNURS",11,0)
 K ^TMP($J,"ECX")
"RTN","ECXNURS",12,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXNURS",13,0)
 F  S ECD=$O(^NURSA(214.6,"B",ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  D  Q:QFLG
"RTN","ECXNURS",14,0)
 .F  S ECDA=$O(^NURSA(214.6,"B",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXNURS",15,0)
 ..;store in ^tmp($j,dfn,date<w/o time>) to get only one per patient per day
"RTN","ECXNURS",16,0)
 ..S DIC=214.6,DIQ(0)="I",DA=ECDA,DIQ="LOC",DR=".01;.02;1;3;4;6;7"
"RTN","ECXNURS",17,0)
 ..D EN^DIQ1 K DIQ,DIC,DA,DR
"RTN","ECXNURS",18,0)
 ..F J=.01,.02,1,3,4,6,7 S EC(J)=LOC(214.6,ECDA,J,"I")
"RTN","ECXNURS",19,0)
 ..S ^TMP($J,"ECX",EC(.02),$P(EC(.01),"."))=EC(1)_U_EC(3)_U_EC(4)_U_EC(6)_U_EC(7)_U_EC(.01)
"RTN","ECXNURS",20,0)
 ..K LOC(214.6,ECDA),EC
"RTN","ECXNURS",21,0)
 ..S CNT=CNT+1
"RTN","ECXNURS",22,0)
 ..I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXNURS",23,0)
 Q:QFLG
"RTN","ECXNURS",24,0)
 D RESOLVE
"RTN","ECXNURS",25,0)
 K ^TMP($J,"ECX")
"RTN","ECXNURS",26,0)
 Q
"RTN","ECXNURS",27,0)
 ;
"RTN","ECXNURS",28,0)
RESOLVE ;pull from ^TMP, format and file
"RTN","ECXNURS",29,0)
 S DFN=0,ECX=",2,3,25,26,43,45,"
"RTN","ECXNURS",30,0)
 F  S DFN=$O(^TMP($J,"ECX",DFN)) Q:'DFN  I $D(^DPT(DFN,0)) S ECPN=^(0),ECD=0 D  Q:QFLG
"RTN","ECXNURS",31,0)
 .F  S ECD=$O(^TMP($J,"ECX",DFN,ECD)) Q:'ECD   D  Q:QFLG
"RTN","ECXNURS",32,0)
 ..K VAIP S VAIP("D")=ECD+.24 D IN5^VADPT Q:'VAIP(1)
"RTN","ECXNURS",33,0)
 ..I +$P(^TMP($J,"ECX",DFN,ECD),U,6)'>+$P(VAIP(3),U) K VAIP Q
"RTN","ECXNURS",34,0)
 ..S EC0=","_$P(VAIP(4),U)_"," I ECX[EC0 K VAIP Q
"RTN","ECXNURS",35,0)
 ..;quit if last ward of day not where he was classified
"RTN","ECXNURS",36,0)
 ..;quit if discharged or transfered to anything other than pass after the rating
"RTN","ECXNURS",37,0)
 ..S ECA="" I +VAIP(13) S ECA=$P(^DGPM(+VAIP(13),0),U)
"RTN","ECXNURS",38,0)
 ..S (ECMN,ECTS)="" S ECMN=VAIP(1),ECTS=$P($G(^DIC(45.7,+VAIP(8),0)),U,2) K VAIP
"RTN","ECXNURS",39,0)
 ..D FILE
"RTN","ECXNURS",40,0)
 Q
"RTN","ECXNURS",41,0)
 ;
"RTN","ECXNURS",42,0)
FILE ;file record
"RTN","ECXNURS",43,0)
 ;node0
"RTN","ECXNURS",44,0)
 ;inst^dfn^ssn^name^in/out^date^acuity level(category)^entered by^classifier^nurs location^nursing bed section^mov #^treat spec^adm date^adm time
"RTN","ECXNURS",45,0)
 ;node1
"RTN","ECXNURS",46,0)
 ;mpi^dss dept
"RTN","ECXNURS",47,0)
 N DA,DIK
"RTN","ECXNURS",48,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXNURS",49,0)
 S ECODE=EC7_U_EC23
"RTN","ECXNURS",50,0)
 S ECODE=ECODE_U_ECINST_U_DFN_U_$P(ECPN,U,9)_U_$E($P($P(ECPN,U),",")_"    ",1,4)_U_"3"
"RTN","ECXNURS",51,0)
 S ECODE=ECODE_U_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_$P(^TMP($J,"ECX",DFN,ECD),U,1,5)
"RTN","ECXNURS",52,0)
 S ECODE=ECODE_U_ECMN_U_ECTS_U_$$ECXDATE^ECXUTL(ECA,ECXYM)_U_$$ECXTIME^ECXUTL(ECA)
"RTN","ECXNURS",53,0)
 S ECODE1=U
"RTN","ECXNURS",54,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXNURS",55,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXNURS",56,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXNURS",57,0)
 Q
"RTN","ECXNURS",58,0)
 ;
"RTN","ECXNURS",59,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXNURS",60,0)
 S ECHEAD="NUR"
"RTN","ECXNURS",61,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXNURS",62,0)
 Q
"RTN","ECXNURS",63,0)
 ;
"RTN","ECXNURS",64,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXNURS",65,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXOPRX")
0^33^B21651617
"RTN","ECXOPRX",1,0)
ECXOPRX ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ; [ 03/26/97  2:09 PM ]
"RTN","ECXOPRX",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8**;Dec 22, 1997
"RTN","ECXOPRX",3,0)
 ;
"RTN","ECXOPRX",4,0)
BEG ;entry point from option
"RTN","ECXOPRX",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXOPRX",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXOPRX",7,0)
 Q
"RTN","ECXOPRX",8,0)
START ;entry when queued
"RTN","ECXOPRX",9,0)
 N QFLG,X,DA,DIC,DIQ,DR
"RTN","ECXOPRX",10,0)
 S QFLG=0
"RTN","ECXOPRX",11,0)
 I '$D(ECINST) D
"RTN","ECXOPRX",12,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXOPRX",13,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXOPRX",14,0)
 ;before V6
"RTN","ECXOPRX",15,0)
 S ECPROF=6
"RTN","ECXOPRX",16,0)
 S ECD=$O(^PSRX("AL",0)) I ECD,ECD<ECSD1 G V6
"RTN","ECXOPRX",17,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",18,0)
 F  S ECD=$O(^PSRX("AD",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  F  S ECRX=$O(^PSRX("AD",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AD",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",19,0)
 Q
"RTN","ECXOPRX",20,0)
 ;
"RTN","ECXOPRX",21,0)
V6 ;version 6 or better
"RTN","ECXOPRX",22,0)
 S ECPROF=2
"RTN","ECXOPRX",23,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",24,0)
 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",25,0)
 S ECREF="P",ECD=ECSD1 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",26,0)
 Q
"RTN","ECXOPRX",27,0)
 ;
"RTN","ECXOPRX",28,0)
STUFF ;get date
"RTN","ECXOPRX",29,0)
 N ELG,SSN,DOB,SEX,ADDR,ZIP,STATE,CNTY,VET,NEW1,VAPA,DFN
"RTN","ECXOPRX",30,0)
 S ECTM=$$ECXTIME^ECXUTL(ECD),ECDATA=^PSRX(ECRX,0) I ECRFL S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0)) I ECDATA1="" Q
"RTN","ECXOPRX",31,0)
 ;ecref set to 1 in extract+5 and v6+1 and to "P" in v6+2
"RTN","ECXOPRX",32,0)
 ;refill nodes and partial nodes are identical in layout
"RTN","ECXOPRX",33,0)
 ;fills (ie., ecrfl=0) and refills (ie.,ecrfl>0) from the "AL" cross-reference, partials from the "AM"
"RTN","ECXOPRX",34,0)
 S ECDFN=$P(ECDATA,U,2),ECPRO=ECPROF_$P(ECDATA,U,4),ECPRC=$P(ECDATA,U,17),ECDRG=+$P(ECDATA,U,6)
"RTN","ECXOPRX",35,0)
 Q:'$D(^DPT(+ECDFN,0))  S PAT=^DPT(+ECDFN,0)
"RTN","ECXOPRX",36,0)
 S X=$$INP^ECXUTL2(ECDFN,ECD),ECA=$P(X,U,1),ECMN=$P(X,U,2),ECTS=$P(X,U,3)
"RTN","ECXOPRX",37,0)
 S SSN=$P(PAT,U,9),ECPT=$E($P($P(PAT,U),",")_"    ",1,4)
"RTN","ECXOPRX",38,0)
 S DOB=$$ECXDOB^ECXUTL($P(PAT,U,3)),SEX=$P(PAT,U,2)
"RTN","ECXOPRX",39,0)
 K APA S DFN=ECDFN D ADD^VADPT
"RTN","ECXOPRX",40,0)
 S STATE=VAPA(5),CNTY=VAPA(7),ZIP=$P(VAPA(11),U,2)
"RTN","ECXOPRX",41,0)
 S STATE=$P($G(^DIC(5,+STATE,0)),U,3),CNTY=$P($G(^DIC(5,+STATE,1,+CNTY,0)),U,3)
"RTN","ECXOPRX",42,0)
 S VET=$P($G(^DPT(+ECDFN,"VET")),U),ELG=$P($G(^DIC(8,+$G(^DPT(+ECDFN,.36)),0)),U,9) I ELG S ELG=$C(ELG+64)
"RTN","ECXOPRX",43,0)
 S X=$$PRIMARY^ECXUTL2(ECDFN,ECD,ECPROF),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2)
"RTN","ECXOPRX",44,0)
 I 'ECRFL D
"RTN","ECXOPRX",45,0)
 .S ECMW=$P(ECDATA,U,11),ECQTY=+$P(ECDATA,U,7),ECDIV=$S($D(^PSRX(ECRX,2)):$P(^(2),U,9),1:1)
"RTN","ECXOPRX",46,0)
 .S ECPRC=+$P(ECDATA,U,17),ECOPAY=$P($G(^PSRX(ECRX,"IB")),U,2)]""
"RTN","ECXOPRX",47,0)
 .S ECPRO="" S:$P(ECDATA,U,4)]"" ECPRO=ECPROF_$P(ECDATA,U,4)
"RTN","ECXOPRX",48,0)
 I ECRFL D
"RTN","ECXOPRX",49,0)
 .S ECMW=$P(ECDATA1,U,2),ECQTY=+$P(ECDATA1,U,4),ECDIV=$S(+$P(ECDATA1,U,9):$P(ECDATA1,U,9),1:1)
"RTN","ECXOPRX",50,0)
 .S ECPRC=+$P(ECDATA1,U,11),ECOPAY=$P($G(^PSRX(ECRX,1,ECRFL,"IB")),U)]""
"RTN","ECXOPRX",51,0)
 .S ECPRO="" S:$P(ECDATA1,U,17)]"" ECPRO=ECPROF_$P(ECDATA1,U,17)
"RTN","ECXOPRX",52,0)
 S ECDS=$S(ECRFL:$P(ECDATA1,U,10),1:$P(ECDATA,U,8))
"RTN","ECXOPRX",53,0)
 S ECCAT=$P(^PSDRUG(ECDRG,0),U,2),ECINV=$P(^(0),U,3)["I",ECINV=$S(ECINV:"I",1:"")
"RTN","ECXOPRX",54,0)
 S ECUI=$P($G(^PSDRUG(ECDRG,660)),U,8)
"RTN","ECXOPRX",55,0)
 S ECNDC=$P($G(^PSDRUG(ECDRG,2)),U,4),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXOPRX",56,0)
 S ECNDF=$G(^PSDRUG(ECDRG,"ND")),P1=$P(ECNDF,U),P3=$P(ECNDF,U,3)
"RTN","ECXOPRX",57,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXOPRX",58,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXOPRX",59,0)
 I ECMW="M" S ECMW=1 I $D(^PSRX("AR",ECD,ECRX)) S ECMW=2
"RTN","ECXOPRX",60,0)
 I ECMW="W" S ECMW=""
"RTN","ECXOPRX",61,0)
 S NEW1="" I ECRFL=0 S NEW1=1
"RTN","ECXOPRX",62,0)
 D FILE
"RTN","ECXOPRX",63,0)
 Q
"RTN","ECXOPRX",64,0)
 ;
"RTN","ECXOPRX",65,0)
FILE ;file record
"RTN","ECXOPRX",66,0)
 ;node0
"RTN","ECXOPRX",67,0)
 ;inst^dfn^ssn^name^in/out^day^division^provider^drug category^mail^placeholder1^new^placeholder2^qty^cost^placeholder3^
"RTN","ECXOPRX",68,0)
 ;mov #^treat spec^placeholder4^unit of issue^dob^elig^vet^copay^feeder key^investigational^days supply^primary care team^primary care provider^time^race
"RTN","ECXOPRX",69,0)
 ;node1
"RTN","ECXOPRX",70,0)
 ;mpi^dss dept^sex^zip+4^provider npi^pc provider npi^state^county
"RTN","ECXOPRX",71,0)
 N DA,DIK
"RTN","ECXOPRX",72,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXOPRX",73,0)
 S ECODE=EC7_U_EC23
"RTN","ECXOPRX",74,0)
 S ECODE=ECODE_U_ECINST_U_ECDFN_U_SSN_U_ECPT_U_ECA_U_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECDIV_U_ECPRO_U_ECCAT_U_ECMW_U_U_NEW1_U_U_ECQTY_U_(ECQTY*ECPRC)_U_U_ECMN_U_ECTS_U_U_ECUI_U_DOB
"RTN","ECXOPRX",75,0)
 S ECODE=ECODE_U_ELG_U_VET_U_ECOPAY_U_ECNFC_U_ECINV_U_ECDS_U_ECPTTM_U_ECPTPR_U_ECTM_U_$P($G(^DIC(10,+$P(^DPT(ECDFN,0),U,6),0)),U,2)
"RTN","ECXOPRX",76,0)
 S ECODE1=U_U_SEX_U_ZIP_U_U_U_STATE_U_CNTY
"RTN","ECXOPRX",77,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXOPRX",78,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXOPRX",79,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXOPRX",80,0)
 Q
"RTN","ECXOPRX",81,0)
 ;
"RTN","ECXOPRX",82,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXOPRX",83,0)
 S ECHEAD="PRE"
"RTN","ECXOPRX",84,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXOPRX",85,0)
 Q
"RTN","ECXOPRX",86,0)
 ;
"RTN","ECXOPRX",87,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXOPRX",88,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPAI")
0^31^B7176167
"RTN","ECXPAI",1,0)
ECXPAI ;ALB/JAP,BIR/DMA,PTD-PAI Extract from File 45.9 ; 10/30/96 14:25
"RTN","ECXPAI",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXPAI",3,0)
BEG ;entry point from option
"RTN","ECXPAI",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPAI",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXPAI",6,0)
 Q
"RTN","ECXPAI",7,0)
 ;
"RTN","ECXPAI",8,0)
START ; start package specific extract
"RTN","ECXPAI",9,0)
 N DFN,QFLG,SSN,NAM,RACE
"RTN","ECXPAI",10,0)
 S QFLG=0
"RTN","ECXPAI",11,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXPAI",12,0)
 F  S ECD=$O(^DG(45.9,"AA",ECD)),ECF=0 Q:'ECD  Q:ECD>ECED  F  S ECF=$O(^DG(45.9,"AA",ECD,ECF)) Q:'ECF  I $D(^DG(45.9,ECF,0)) S EC=^(0),DFN=+EC,ECTD=$P(EC,U,7) I $D(^DPT(DFN,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXPAI",13,0)
 .S ECDA=0 F  S ECDA=+$O(^DGPM("APCA",DFN,ECDA)),ECTD1=ECTD-.0001 Q:'ECDA  I $D(^DGPM(ECDA,0)) F  S ECTD1=+$O(^DGPM("APCA",DFN,ECDA,ECTD1)) Q:'ECTD1  Q:ECTD1>(ECTD+.3)  D  Q:QFLG
"RTN","ECXPAI",14,0)
 ..S EC1=0 F  S EC1=+$O(^DGPM("APCA",DFN,ECDA,ECTD1,EC1)) Q:'EC1  I $D(^DGPM(EC1,0)),$P(^(0),U,2)'=3 S ECADM=$P(^DGPM(ECDA,0),U) D  Q:QFLG
"RTN","ECXPAI",15,0)
 ...S NAM=$E($P($P(EC,U),",")_"    ",1,4),SSN=$P(EC,U,9),RACE=$P($G(^DIC(10,+$P(EC,U,6),0)),U,2)
"RTN","ECXPAI",16,0)
 ...D FILE
"RTN","ECXPAI",17,0)
 Q
"RTN","ECXPAI",18,0)
 ;
"RTN","ECXPAI",19,0)
FILE ;file record
"RTN","ECXPAI",20,0)
 ;node0
"RTN","ECXPAI",21,0)
 ;fac^dfn^ssn^name^i/o^day^admission date^admission time^admission/transfer date^admission/transfer time^race
"RTN","ECXPAI",22,0)
 ;node1
"RTN","ECXPAI",23,0)
 ;mpi^dss dept
"RTN","ECXPAI",24,0)
 N DA,DIK
"RTN","ECXPAI",25,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1)
"RTN","ECXPAI",26,0)
 S ECODEZ="" I EC7>0 S ECODEZ=^ECX(ECFILE,EC7,0)
"RTN","ECXPAI",27,0)
 S EC7=EC7+1
"RTN","ECXPAI",28,0)
 S ECODE=EC7_U_EC23
"RTN","ECXPAI",29,0)
 S ECODE=ECODE_U_U_DFN_U_SSN_U_NAM_U_"3"_U_$$ECXDATE^ECXUTL(ECD,ECXYM)
"RTN","ECXPAI",30,0)
 S ECODE=ECODE_U_$$ECXDATE^ECXUTL(ECADM,ECXYM)_U_$$ECXTIME^ECXUTL(ECADM)_U_$$ECXDATE^ECXUTL(ECTD1,ECXYM)_U_$$ECXTIME^ECXUTL(ECTD1)_U_RACE
"RTN","ECXPAI",31,0)
 S ECODE1=U
"RTN","ECXPAI",32,0)
 Q:ECODE=ECODEZ
"RTN","ECXPAI",33,0)
 I $P(ECODE,U,5,9)=$P(ECODEZ,U,5,9),$P(ECODE,U,12)=$P(ECODEZ,U,12),$P(ECODE,U,10,11)'=$P(ECODEZ,10,11) D  Q
"RTN","ECXPAI",34,0)
 .S $P(^ECX(ECFILE,EC7,0),U,10,11)=$P(ECODE,U,10,11)
"RTN","ECXPAI",35,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXPAI",36,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPAI",37,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPAI",38,0)
 Q
"RTN","ECXPAI",39,0)
 ;
"RTN","ECXPAI",40,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPAI",41,0)
 S ECHEAD="PAS"
"RTN","ECXPAI",42,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPAI",43,0)
 Q
"RTN","ECXPAI",44,0)
 ;
"RTN","ECXPAI",45,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPAI",46,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPIV1")
0^25^B391669
"RTN","ECXPIV1",1,0)
ECXPIV1 ;ALB/JAP,BIR/DMA-Store Data from IV Package into 728.113 ; 03 Nov 95 / 12:58 PM
"RTN","ECXPIV1",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXPIV1",3,0)
 ;called from the IV routine PSIVSTAT
"RTN","ECXPIV1",4,0)
 ;load IV data into an EC file for later extract to vendor
"RTN","ECXPIV1",5,0)
 N DA,DIK
"RTN","ECXPIV1",6,0)
 S X="ECXY1" X ^%ZOSF("TEST") I $T D ^ECXY1
"RTN","ECXPIV1",7,0)
 I '$D(^ECX(728.113)) Q
"RTN","ECXPIV1",8,0)
 L +^ECX(728.113,0):1 Q:'$T
"RTN","ECXPIV1",9,0)
 S EC=$O(^ECX(728.113,999999999),-1),EC=EC+1
"RTN","ECXPIV1",10,0)
 S ^ECX(728.113,EC,0)=EC_U_ECUD L -^ECX(728.113,0)
"RTN","ECXPIV1",11,0)
 S DA=EC,DIK="^ECX(728.113," D IX^DIK
"RTN","ECXPIV1",12,0)
 K EC
"RTN","ECXPIV1",13,0)
 Q
"RTN","ECXPIVD")
0^26^B12387949
"RTN","ECXPIVD",1,0)
ECXPIVD ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV STATS File (#50.8) ; [ 12/05/96  10:41 AM ]
"RTN","ECXPIVD",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8**;Dec 22, 1997
"RTN","ECXPIVD",3,0)
BEG ;entry point from option
"RTN","ECXPIVD",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPIVD",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXPIVD",6,0)
 Q
"RTN","ECXPIVD",7,0)
 ;
"RTN","ECXPIVD",8,0)
START ; start package specific extract
"RTN","ECXPIVD",9,0)
 N QFLG,X
"RTN","ECXPIVD",10,0)
 S QFLG=0
"RTN","ECXPIVD",11,0)
 S ECED=ECED+.3
"RTN","ECXPIVD",12,0)
 K ^TMP($J)
"RTN","ECXPIVD",13,0)
 S ECIV=0 F  S ECIV=$O(^PS(50.8,ECIV)),ECD=ECSD1 Q:'ECIV  F  S ECD=$O(^PS(50.8,ECIV,2,ECD)) Q:'ECD  Q:ECD>ECED  K ^TMP($J) D  Q:QFLG
"RTN","ECXPIVD",14,0)
 .;go thru AC crossreference to get pointers to 52.6 and 52.7
"RTN","ECXPIVD",15,0)
 .F ECJ=52.6,52.7 S ECK=0 F  S ECK=$O(^PS(50.8,ECIV,2,ECD,2,"AC",ECJ,ECK)),ECL=0 Q:'ECK  F   S ECL=$O(^PS(50.8,ECIV,2,ECD,2,"AC",ECJ,ECK,ECL)) Q:'ECL  S ^TMP($J,ECL,ECK)=""
"RTN","ECXPIVD",16,0)
 .S ECI=0 F  S ECI=$O(^PS(50.8,ECIV,2,ECD,2,ECI)) Q:'ECI  I $D(^(ECI,0)) S ECC=$P(^(0),U,5),ECF=+$P(^(0),U,7),ECDRG=+$O(^TMP($J,ECI,0)),EC50=+$P($G(^PS(ECF,ECDRG,0)),U,2) D  Q:QFLG
"RTN","ECXPIVD",17,0)
 ..S ECCAT=$P($G(^PSDRUG(EC50,0)),U,2),ECNDC=$P($G(^(2)),U,4),ECNDF=$G(^("ND")),ECINV=$P(^(0),U,3),ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXPIVD",18,0)
 ..S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXPIVD",19,0)
 ..S P1=$P(ECNDF,U),P3=$P(ECNDF,U,3)
"RTN","ECXPIVD",20,0)
 ..S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXPIVD",21,0)
 ..I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXPIVD",22,0)
 ..S ECDFN=0 F  S ECDFN=$O(^PS(50.8,ECIV,2,ECD,2,ECI,1,ECDFN)) Q:'ECDFN  I $D(^(ECDFN,0)) S EC=^(0),ECQ=$P(EC,U,2)-$P(EC,U,3)-$P(EC,U,6),ECCS=ECQ*ECC,ECW=$P(EC,U,5) I ECQ D  Q:QFLG
"RTN","ECXPIVD",23,0)
 ...I $D(^DPT(ECDFN,0)) S EC1=^(0),(ECWD,ECMN,ECTS,ECADM)="" D
"RTN","ECXPIVD",24,0)
 ....S X=$$PRIMARY^ECXUTL2(ECDFN,ECD),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2)
"RTN","ECXPIVD",25,0)
 ....I ECW=.5 S ECWD="CLI"
"RTN","ECXPIVD",26,0)
 ....E  S ECWD=$P($G(^DIC(42,+ECW,44)),U) K VAIP S VAIP("D")=ECD,DFN=ECDFN D IN5^VADPT S ECMN=VAIP(1),ECTS=$P($G(^DIC(45.7,+VAIP(8),0)),U,2) S:+VAIP(13) ECADM=$P(^DGPM(+VAIP(13),0),U) K VAIP
"RTN","ECXPIVD",27,0)
 ....D FILE K P1,P3
"RTN","ECXPIVD",28,0)
 Q
"RTN","ECXPIVD",29,0)
 ;
"RTN","ECXPIVD",30,0)
FILE ;file record
"RTN","ECXPIVD",31,0)
 ;node0
"RTN","ECXPIVD",32,0)
 ;fac^dfn^ssn^name^i/o^day^va class^qty^ward^cost^movement #^treat spec^ndc^investigational^iv dispensing fee^new feeder key^total doses^primary care team^primary care provider^ivp time^adm date^adm time^dss identifier
"RTN","ECXPIVD",33,0)
 ;node1
"RTN","ECXPIVD",34,0)
 ;mpi^dss dept^pc provider npi
"RTN","ECXPIVD",35,0)
 N DA,DIK
"RTN","ECXPIVD",36,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPIVD",37,0)
 S ECODE=EC7_U_EC23
"RTN","ECXPIVD",38,0)
 S ECODE=ECODE_U_ECINST_U_ECDFN_U_$P(EC1,U,9)_U_$E($P($P(EC1,U),",")_"    ",1,4)_U_$S(ECW=.5:1,1:3)_U_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECCAT_U_ECQ
"RTN","ECXPIVD",39,0)
 S ECODE=ECODE_U_ECWD_U_ECCS_U_ECMN_U_ECTS_U_ECNDC_U_ECINV_U_U_U_U_ECPTTM_U_ECPTPR_U_"000000"_U_$$ECXDATE^ECXUTL(ECADM,ECXYM)_$$ECXTIME^ECXUTL(ECADM)_U
"RTN","ECXPIVD",40,0)
 ;if this is an outpatient, send null for admission date and "000000" for admission time
"RTN","ECXPIVD",41,0)
 I ECW=.5 S $P(ECODE,U,24)="",$P(ECODE,U,25)="000000"
"RTN","ECXPIVD",42,0)
 S ECODE1=U_U
"RTN","ECXPIVD",43,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXPIVD",44,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPIVD",45,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPIVD",46,0)
 Q
"RTN","ECXPIVD",47,0)
 ;
"RTN","ECXPIVD",48,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPIVD",49,0)
 S ECHEAD="IVP"
"RTN","ECXPIVD",50,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPIVD",51,0)
 ;variables ecver and ecrtn will be reset in routine ecxtrac if appropriate
"RTN","ECXPIVD",52,0)
 S ECVER=3
"RTN","ECXPIVD",53,0)
 Q
"RTN","ECXPIVD",54,0)
 ;
"RTN","ECXPIVD",55,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPIVD",56,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPIVDN")
0^27^B20978629
"RTN","ECXPIVDN",1,0)
ECXPIVDN ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ; [ 03/26/97  2:10 PM ]
"RTN","ECXPIVDN",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8**;Dec 22, 1997
"RTN","ECXPIVDN",3,0)
START ; start package specific extract
"RTN","ECXPIVDN",4,0)
 N QFLG
"RTN","ECXPIVDN",5,0)
 S QFLG=0
"RTN","ECXPIVDN",6,0)
 I '$D(ECINST) D
"RTN","ECXPIVDN",7,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPIVDN",8,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPIVDN",9,0)
 S ECED=ECED+.3
"RTN","ECXPIVDN",10,0)
 K ^TMP($J)
"RTN","ECXPIVDN",11,0)
 S ECD=ECSD1
"RTN","ECXPIVDN",12,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  I $D(^DPT(DFN,0)) S EC=^(0) D DEMOG F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J) S ECVOL=0 D  Q:QFLG
"RTN","ECXPIVDN",13,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXPIVDN",14,0)
 ..S DRG=$P(EC,U,4) I $P(EC,U,8)]"" D
"RTN","ECXPIVDN",15,0)
 ...I '$D(^TMP($J,"A",DRG)) S ^(DRG)=$P(EC,U,7,8),^(DRG,1)=0,^(2)=$P(EC,U,12)
"RTN","ECXPIVDN",16,0)
 ...S ^(1)=^TMP($J,"A",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",17,0)
 ..I $P(EC,U,9) D
"RTN","ECXPIVDN",18,0)
 ...I '$D(^TMP($J,"S",DRG)) S ^(DRG)=$P(EC,U,9)_"^ML",^(DRG,1)=0,^(2)=$P(EC,U,12),ECVOL=$P(EC,U,9)+ECVOL
"RTN","ECXPIVDN",19,0)
 ...S ^(1)=^TMP($J,"S",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",20,0)
 ..S ECTYP=$P(EC,U,11),ECTOTC=0,ECDTTM=$$ECXTIME^ECXUTL($P(EC,U,5))
"RTN","ECXPIVDN",21,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXPIVDN",22,0)
 .;leave the next line in case the decision is made to send volume designations
"RTN","ECXPIVDN",23,0)
 .;I ECTYP="H" S ECTYP=ECTYP_$S(ECVOL'>1000:1,ECVOL'>2000:2,1:3)
"RTN","ECXPIVDN",24,0)
 .F SA="S","A" S DRG="" F  S DRG=$O(^TMP($J,SA,DRG)) Q:DRG=""  S ECST=^(DRG),CNT=^(DRG,1),COST=^(2),ECTOTC=ECTOTC+COST,COST=COST*CNT I $D(^PSDRUG(DRG,0)) S EC0=^(0),EC2=$G(^(2)),ECND=$G(^("ND")) D  Q:QFLG
"RTN","ECXPIVDN",25,0)
 ..S ECDIV="",ECXDSSI=""
"RTN","ECXPIVDN",26,0)
 ..;if outpatient get division from iv rm; get dss identifier for clinic
"RTN","ECXPIVDN",27,0)
 ..I ECA=1 D
"RTN","ECXPIVDN",28,0)
 ...I $D(^PS(55,DFN,"IV",ON,2)) S ECIVRM=$P(^(2),U,2),ECDIV=$P(^PS(59.5,ECIVRM,0),U,4)
"RTN","ECXPIVDN",29,0)
 ...S CLIN=+$P(EC,U,13),(ECXP1,ECXP2)="000"
"RTN","ECXPIVDN",30,0)
 ...S ECXCL=$G(^ECX(728.44,CLIN,0)) Q:ECXCL=""
"RTN","ECXPIVDN",31,0)
 ...S ECSC=$P(ECXCL,U,4),ECCSC=$P(ECXCL,U,5)
"RTN","ECXPIVDN",32,0)
 ...I ECSC="" S ECSC=$P(ECXCL,U,2),ECCSC=$P(ECXCL,U,3)
"RTN","ECXPIVDN",33,0)
 ...I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXPIVDN",34,0)
 ...I ECSC="" S ECSC=$P($G(^SC(ECXSC,0)),U,7),ECCSC=$P($G(^SC(ECXSC,0)),U,18) I ECSC D
"RTN","ECXPIVDN",35,0)
 ....S ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2) S:ECCSC]"" ECXP2=$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXPIVDN",36,0)
 ....S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXPIVDN",37,0)
 ...S ECXDSSI=ECXP1_ECXP2
"RTN","ECXPIVDN",38,0)
 ..;if inpatient get division from ward
"RTN","ECXPIVDN",39,0)
 ..I ECA=3 S ECDIV=$P(^SC(ECW,0),U,15)
"RTN","ECXPIVDN",40,0)
 ..S ECINV=$P(EC0,U,3),ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXPIVDN",41,0)
 ..S ECST=CNT*ECST_" "_$P(ECST,U,2)
"RTN","ECXPIVDN",42,0)
 ..S ECNDC=$P(EC2,U,4),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXPIVDN",43,0)
 ..S P1=$P(ECND,U),P3=$P(ECND,U,3)
"RTN","ECXPIVDN",44,0)
 ..S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXPIVDN",45,0)
 ..I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXPIVDN",46,0)
 ..D FILE
"RTN","ECXPIVDN",47,0)
 K ^TMP($J),CLIN,CNT,COST,DA,DFN,DIC,DIK,DRG,ON,SA,SSN,X,Y,P1,P3
"RTN","ECXPIVDN",48,0)
 Q
"RTN","ECXPIVDN",49,0)
 ;
"RTN","ECXPIVDN",50,0)
FILE ;file record
"RTN","ECXPIVDN",51,0)
 ;node0
"RTN","ECXPIVDN",52,0)
 ;facility^dfn^ssn^name^in/out pat^day^va class^qty^ward^cost^movement #^treating specialty^ndc^investigational^dispensing fee^new feeder key^total doses per day^primary care team^primary care provider^ivp time^adm date^adm time^dss identifier
"RTN","ECXPIVDN",53,0)
 ;node1
"RTN","ECXPIVDN",54,0)
 ;mpi^dss dept^pc provider npi
"RTN","ECXPIVDN",55,0)
 N DA,DIK
"RTN","ECXPIVDN",56,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPIVDN",57,0)
 S ECODE=EC7_U_EC23
"RTN","ECXPIVDN",58,0)
 S ECODE=ECODE_U_ECDIV_U_DFN_U_SSN_U_ECNA_U_ECA_U_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_$P(EC0,U,2)_U_CNT_U_ECW_U_COST_U_ECMN_U_ECTS
"RTN","ECXPIVDN",59,0)
 S ECODE=ECODE_U_ECNDC_U_ECINV_U_ECTYP_U_ECNFC_U_ECST_U_ECPTTM_U_ECPTPR_U_ECDTTM_U_$$ECXDATE^ECXUTL(ECADM,ECXYM)_U_$$ECXTIME^ECXUTL(ECADM)_U_ECXDSSI
"RTN","ECXPIVDN",60,0)
 ;if this is an outpatient, send null for admission date and "000000" for admission time
"RTN","ECXPIVDN",61,0)
 I ECA=1 S $P(ECODE,U,24)="",$P(ECODE,U,25)="000000"
"RTN","ECXPIVDN",62,0)
 S ECODE1=U_U
"RTN","ECXPIVDN",63,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXPIVDN",64,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPIVDN",65,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPIVDN",66,0)
 Q
"RTN","ECXPIVDN",67,0)
 ;
"RTN","ECXPIVDN",68,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPIVDN",69,0)
 S ECHEAD="IVP"
"RTN","ECXPIVDN",70,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPIVDN",71,0)
 ;variables ecver and ecrtn will be reset in routine ecxtrac if appropriate
"RTN","ECXPIVDN",72,0)
 S ECVER=7
"RTN","ECXPIVDN",73,0)
 Q
"RTN","ECXPIVDN",74,0)
 ;
"RTN","ECXPIVDN",75,0)
DEMOG ;new patient - get primary care team and provider, name, SSN, and VAIP
"RTN","ECXPIVDN",76,0)
 N X
"RTN","ECXPIVDN",77,0)
 S X=$$PRIMARY^ECXUTL2(DFN,ECD),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2)
"RTN","ECXPIVDN",78,0)
 S SSN=$P(EC,U,9),ECNA=$E($P($P(EC,U),",")_"    ",1,4)
"RTN","ECXPIVDN",79,0)
 ; checks for in/outpatient status and gets movement number
"RTN","ECXPIVDN",80,0)
 S ECA=1,(ECTS,ECADM)="",ECW=.5,(ECWR,ECTSR)="OUTPATIENT" K VAIP S VAIP("D")=ECD D IN5^VADPT S ECMN=VAIP(1)
"RTN","ECXPIVDN",81,0)
 I ECMN S ECA=3,ECTS=$P($G(^DIC(45.7,+VAIP(8),0)),U,2),ECW=+$G(^DIC(42,+VAIP(5),44)),ECWR=$P(VAIP(5),U,2),ECTSR=$P(VAIP(8),U,2)
"RTN","ECXPIVDN",82,0)
 I +VAIP(13) S ECADM=$P(^DGPM(+VAIP(13),0),U)
"RTN","ECXPIVDN",83,0)
 K VAIP,VAERR
"RTN","ECXPIVDN",84,0)
 Q
"RTN","ECXPIVDN",85,0)
 ;
"RTN","ECXPIVDN",86,0)
 ;
"RTN","ECXPIVDN",87,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPIVDN",88,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPURG1")
0^68^B31575114
"RTN","ECXPURG1",1,0)
ECXPURG1 ;BIR/CML-Purge of DSS Extract Files (CONTINUED) ; [ 12/05/96  11:58 AM ]
"RTN","ECXPURG1",2,0)
 ;;3.0;DSS EXTRACTS;**2,9,8**;Dec 22, 1997
"RTN","ECXPURG1",3,0)
GET ;compile list of purgable extracts
"RTN","ECXPURG1",4,0)
 K HI,LO,ECBDT,ECEDT,ECLOC,^TMP("ECXPURG",$J)
"RTN","ECXPURG1",5,0)
 S QFLG=1 W !!,"...one moment please"
"RTN","ECXPURG1",6,0)
 S ECEX=0 F  S ECEX=$O(^ECX(727,ECEX)) Q:'ECEX  I '$G(^ECX(727,ECEX,"PURG")),$D(^ECX(727,ECEX,0)) S EC=^(0) D
"RTN","ECXPURG1",7,0)
 .S ^TMP("ECXPURG",$J,$P(EC,U,3),ECEX)="",ECLOC(ECEX)=$P(EC,U,3)_U_$P(EC,U,4,5)
"RTN","ECXPURG1",8,0)
 I '$D(^TMP("ECXPURG",$J)) W !!,"There are no extracts that can be purged at this time." G DONE
"RTN","ECXPURG1",9,0)
ASK1 ;ask for print
"RTN","ECXPURG1",10,0)
 W !
"RTN","ECXPURG1",11,0)
 K DIR S DIR(0)="Y",DIR("A")="Do you want to print a list of extracts that can be purged",DIR("B")="NO"
"RTN","ECXPURG1",12,0)
 D ^DIR K DIR I $D(DIRUT) K ECLOC G DONE
"RTN","ECXPURG1",13,0)
 G:'Y ASK2
"RTN","ECXPURG1",14,0)
 W !!,"The right margin for this report is 80.",!!
"RTN","ECXPURG1",15,0)
 K ZTSAVE S ZTSAVE("^TMP(""ECXPURG"",$J,")=""
"RTN","ECXPURG1",16,0)
 D EN^XUTMDEVQ("PRT^ECXPURG1","DSS - Print Purgable Extracts",.ZTSAVE) I 'POP G ASK2
"RTN","ECXPURG1",17,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","ECXPURG1",18,0)
ASK2 ;ask for extract range
"RTN","ECXPURG1",19,0)
 ;
"RTN","ECXPURG1",20,0)
 ;** Check divisions for purging
"RTN","ECXPURG1",21,0)
 N ECCHK,ECTMP
"RTN","ECXPURG1",22,0)
 S ECCHK=$$DIV4^XUSER(.ECTMP,DUZ)
"RTN","ECXPURG1",23,0)
 I 'ECCHK DO
"RTN","ECXPURG1",24,0)
 .W !,"You do not have any divisions defined in your user set up and can not purge."
"RTN","ECXPURG1",25,0)
 .S DIR(0)="FAO^1:1",DIR("A")="Hit Return to continue." D ^DIR K DIR,X,Y
"RTN","ECXPURG1",26,0)
 .K ECLOC
"RTN","ECXPURG1",27,0)
 ;
"RTN","ECXPURG1",28,0)
 I 'ECCHK G DONE  ;** (essentially) QUIT out of middle
"RTN","ECXPURG1",29,0)
 ;
"RTN","ECXPURG1",30,0)
 W !,"You will not be able to select an extract that is not from your division.",!
"RTN","ECXPURG1",31,0)
 S LO=$O(ECLOC(0)),HI=$O(ECLOC(" "),-1)
"RTN","ECXPURG1",32,0)
 S DIR(0)="L^"_LO_":"_HI_"",DIR("A")="Select extracts to be purged"
"RTN","ECXPURG1",33,0)
 S DIR("?",1)="Choose the number (or numbers) of the extracts you wish to purge,",DIR("?")="(E.g., 1-3,17,20 to choose 1 thru 3 and 17 and 20)."
"RTN","ECXPURG1",34,0)
 W ! D ^DIR K DIR I $D(DIRUT) K ECLOC G DONE
"RTN","ECXPURG1",35,0)
 S JJ=0,Y=","_Y F  S JJ=$O(ECLOC(JJ)) Q:'JJ  S JZ=","_JJ_"," I Y'[JZ K ECLOC(JJ)
"RTN","ECXPURG1",36,0)
 D DIVCHK(.ECLOC,.ECTMP)
"RTN","ECXPURG1",37,0)
 I '$D(ECLOC) W !!,"You have not chosen a valid extract number.  Try again." G GET
"RTN","ECXPURG1",38,0)
ASK3 W !!,"I will purge the following extract(s):"
"RTN","ECXPURG1",39,0)
 S JJ=0 F  S JJ=$O(ECLOC(JJ)) Q:'JJ  D
"RTN","ECXPURG1",40,0)
 .W !?5,"#",JJ," - ",$P(ECLOC(JJ),U)
"RTN","ECXPURG1",41,0)
 .W ?47,$TR($$FMTE^XLFDT($P(ECLOC(JJ),U,2),"5DF")," ","0")," to ",$TR($$FMTE^XLFDT($P(ECLOC(JJ),U,3),"5DF")," ","0")
"RTN","ECXPURG1",42,0)
 W !! K DIR S DIR(0)="Y",DIR("A")="Is this OK",DIR("B")="NO"
"RTN","ECXPURG1",43,0)
 S DIR("?",1)="    Enter:"
"RTN","ECXPURG1",44,0)
 S DIR("?",2)="      ""YES"" if you agree with this list and would like to proceed,"
"RTN","ECXPURG1",45,0)
 S DIR("?",3)="       ""NO"" if you would like to make a different selection, or"
"RTN","ECXPURG1",46,0)
 S DIR("?")="        ""^"" to exit option."
"RTN","ECXPURG1",47,0)
 D ^DIR K DIR I $D(DIRUT) K ECLOC G DONE
"RTN","ECXPURG1",48,0)
 I 'Y G GET
"RTN","ECXPURG1",49,0)
 ; at this point, the local array ECLOC( is passed back to ^ECXPURG
"RTN","ECXPURG1",50,0)
 G DONE
"RTN","ECXPURG1",51,0)
QUIT ;
"RTN","ECXPURG1",52,0)
 I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECXPURG1",53,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXPURG1",54,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECXPURG1",55,0)
DONE K ^TMP("ECXPURG",$J),ZTSK Q
"RTN","ECXPURG1",56,0)
PRT ;print list of extracts
"RTN","ECXPURG1",57,0)
 S (PG,QFLG)=0,$P(LN,"-",81)="" D NOW^%DTC S Y=$E(%,1,12) X ^DD("DD") S HDT=Y D HDR
"RTN","ECXPURG1",58,0)
 S ECTYP="" F  S ECTYP=$O(^TMP("ECXPURG",$J,ECTYP)) Q:ECTYP=""  Q:QFLG  D:$Y+4>IOSL HDR Q:QFLG  W !!,ECTYP D
"RTN","ECXPURG1",59,0)
 .S ECEX=0 F  S ECEX=$O(^TMP("ECXPURG",$J,ECTYP,ECEX)) Q:'ECEX  Q:QFLG  I $D(^ECX(727,ECEX,0)) S EC=^(0) D
"RTN","ECXPURG1",60,0)
 ..S ECDT=$$FMTE^XLFDT($P(EC,U,2),"D")
"RTN","ECXPURG1",61,0)
 ..S ECFR=$TR($$FMTE^XLFDT($P(EC,U,4),"5DF")," ","0")
"RTN","ECXPURG1",62,0)
 ..S ECTO=$TR($$FMTE^XLFDT($P(EC,U,5),"5DF")," ","0")
"RTN","ECXPURG1",63,0)
 ..S ECRC=$P(EC,U,6) S:ECRC="" ECRC="Incomplete"
"RTN","ECXPURG1",64,0)
 ..S ECTRN=$$FMTE^XLFDT($G(^ECX(727,ECEX,"TR")),"D")
"RTN","ECXPURG1",65,0)
 ..S ECXDIV=$P($G(^ECX(727,ECEX,"DIV")),U,1)
"RTN","ECXPURG1",66,0)
 ..K ECXDIC S DA=ECXDIV,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPURG1",67,0)
 ..D EN^DIQ1 S ECXDIV=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPURG1",68,0)
 ..D:$Y+3>IOSL HDR Q:QFLG
"RTN","ECXPURG1",69,0)
 ..W !?1,ECEX,?11,ECDT,?25,ECFR,"-",ECTO,?48,$J(ECRC,9),?60,ECTRN,?75,ECXDIV
"RTN","ECXPURG1",70,0)
 G QUIT
"RTN","ECXPURG1",71,0)
HDR ;HEADER
"RTN","ECXPURG1",72,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXPURG1",73,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXPURG1",74,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"PURGABLE EXTRACTS",?72,"Page: ",PG,!,"Printed on ",HDT,!
"RTN","ECXPURG1",75,0)
 W !,"FEEDER SYS",?12,"EXTRACT,",!,"EXTRACT #",?12,"DATE",?33,"FROM-TO",?48,"RECORD CNT",?60,"TRANSMIT DATE",?75,"DIV",!,LN
"RTN","ECXPURG1",76,0)
 Q
"RTN","ECXPURG1",77,0)
DATES ;ask for date range for purge of holding files
"RTN","ECXPURG1",78,0)
 K HI,LO,ECBDT,ECEDT
"RTN","ECXPURG1",79,0)
 I ECY="I" D
"RTN","ECXPURG1",80,0)
 .I '$O(^ECX(728.113,0)) W !!,"You have no data in the IVP holding file (file #728.113) to purge." Q
"RTN","ECXPURG1",81,0)
 .S LO=$O(^ECX(728.113,"A",0)),HI=$O(^ECX(728.113,"A"," "),-1)
"RTN","ECXPURG1",82,0)
 I ECY="U" D
"RTN","ECXPURG1",83,0)
 .I '$O(^ECX(728.904,0)) W !!,"You have no data in the UDP holding file (file #728.904) to purge." Q
"RTN","ECXPURG1",84,0)
 .S LO=$O(^ECX(728.904,"A",0)),HI=$O(^ECX(728.904,"A"," "),-1)
"RTN","ECXPURG1",85,0)
 Q:$G(LO)=""
"RTN","ECXPURG1",86,0)
 W @IOF,!!,"This file currently holds ",$S(ECY="I":"IVP",1:"UDP")," data from <",$$FMTE^XLFDT(LO,"D"),"> to <",$$FMTE^XLFDT(HI,"D"),">."
"RTN","ECXPURG1",87,0)
 W ! K DIR S DIR(0)="DA^"_LO_":"_HI_":EPX",DIR("A")="Beginning date for purge: " D ^DIR K DIR I $D(DIRUT) K HI,LO Q
"RTN","ECXPURG1",88,0)
 S ECBDT=+Y
"RTN","ECXPURG1",89,0)
 K DIR S DIR(0)="DA^"_ECBDT_":"_HI_":EPX",DIR("A")="Ending date for purge: " D ^DIR K DIR I $D(DIRUT) K HI,LO,ECBDT Q
"RTN","ECXPURG1",90,0)
 S ECEDT=+Y
"RTN","ECXPURG1",91,0)
ASK4 ; ask to confirm date range
"RTN","ECXPURG1",92,0)
 W !!,"I will purge the ",$S(ECY="I":"IVP",1:"UDP")," holding file from <",$$FMTE^XLFDT(ECBDT,"D"),"> to <",$$FMTE^XLFDT(ECEDT,"D"),">."
"RTN","ECXPURG1",93,0)
 W $C(7),$C(7),!!?3,"** REMEMBER - Once this data is purged it CANNOT be recreated. **"
"RTN","ECXPURG1",94,0)
 W !! K DIR S DIR(0)="Y",DIR("A")="Is this OK",DIR("B")="NO"
"RTN","ECXPURG1",95,0)
 S DIR("?",1)="    Enter:"
"RTN","ECXPURG1",96,0)
 S DIR("?",2)="      ""YES"" if you agree with this date range and wish to proceed,"
"RTN","ECXPURG1",97,0)
 S DIR("?",3)="       ""NO"" if you would like to make a different selection, or"
"RTN","ECXPURG1",98,0)
 S DIR("?")="        ""^"" to exit option."
"RTN","ECXPURG1",99,0)
 D ^DIR K DIR I $D(DIRUT) K ECBDT,ECEDT Q 
"RTN","ECXPURG1",100,0)
 I 'Y G DATES
"RTN","ECXPURG1",101,0)
 ; at this point, ECBDT and ECEDT are passed back to ^ECXPURG
"RTN","ECXPURG1",102,0)
 Q
"RTN","ECXPURG1",103,0)
 ;
"RTN","ECXPURG1",104,0)
DIVCHK(ECLOC,ECTMP) ;**Remove extracts from ECLOC that are for user's div.
"RTN","ECXPURG1",105,0)
 N ECLPDA
"RTN","ECXPURG1",106,0)
 S ECLPDA=0
"RTN","ECXPURG1",107,0)
 F  S ECLPDA=$O(ECLOC(ECLPDA)) Q:(+ECLPDA=0)  DO
"RTN","ECXPURG1",108,0)
 .I '$D(ECTMP($P(^ECX(727,ECLPDA,"DIV"),U,1))) KILL ECLOC(ECLPDA)
"RTN","ECXPURG1",109,0)
 Q
"RTN","ECXQSR")
0^34^B16010852
"RTN","ECXQSR",1,0)
ECXQSR ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ; 02/14/97 14:07
"RTN","ECXQSR",2,0)
 ;;3.0;DSS EXTRACTS;**11,8**;Dec 22, 1997
"RTN","ECXQSR",3,0)
BEG ;entry point from option
"RTN","ECXQSR",4,0)
 I '$O(^ACK(509850.8,0)) W !,"You must be using the Quality Audiology & Speech Pathology",!,"Audit & Review (QUASAR) software to run this extract.",!! Q
"RTN","ECXQSR",5,0)
 I '$D(^ACK(509850.8,1,"DSS")) W !,"Linkage has not been established between QUASAR and the DSS UNIT file (#724).",!! Q
"RTN","ECXQSR",6,0)
 I '$O(^ACK(509850.6,0)) W !,"There is no data in the A&SP CLINIC VISIT file (#509850.6).",!! Q
"RTN","ECXQSR",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXQSR",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXQSR",9,0)
 Q
"RTN","ECXQSR",10,0)
 ;
"RTN","ECXQSR",11,0)
START ;entry point from tasked job
"RTN","ECXQSR",12,0)
 N QFLG
"RTN","ECXQSR",13,0)
 S QFLG=0
"RTN","ECXQSR",14,0)
 S ECED=ECED+.9,ECD=ECSD1
"RTN","ECXQSR",15,0)
 ;quasar will be multi-divisional in future
"RTN","ECXQSR",16,0)
 S ECL=+^ACK(509850.8,1,0),ECLINK=^ACK(509850.8,1,"DSS")
"RTN","ECXQSR",17,0)
 F  S ECD=$O(^ACK(509850.6,"B",ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  F  S ECDA=$O(^ACK(509850.6,"B",ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXQSR",18,0)
 Q
"RTN","ECXQSR",19,0)
 ;
"RTN","ECXQSR",20,0)
UPDATE ;create record for each unique CPT code for clinic visit, 
"RTN","ECXQSR",21,0)
 N ECZNODE
"RTN","ECXQSR",22,0)
 S ECZNODE=$G(^ACK(509850.6,ECDA,0)),EC2NODE=$G(^ACK(509850.6,ECDA,2))
"RTN","ECXQSR",23,0)
 S ECDT=$P(ECZNODE,U),ECDAY=$$ECXDATE^ECXUTL(ECDT,ECXYM),ECTIME=$$ECXTIME^ECXUTL(ECDT) S:$P(ECDT,".",2)="" ECTIME="000000"
"RTN","ECXQSR",24,0)
 S ECDFN=$P(ECZNODE,U,2)
"RTN","ECXQSR",25,0)
 Q:'$D(^DPT(ECDFN,0))
"RTN","ECXQSR",26,0)
 D INP
"RTN","ECXQSR",27,0)
 S ECSTOP=$P(EC2NODE,U) Q:ECSTOP=""
"RTN","ECXQSR",28,0)
 S ECHL="",(ECHLS,ECHL2S)="000",ECAC=$P($G(ECZNODE),U,6) I ECAC D
"RTN","ECXQSR",29,0)
 .S ECHL=+$P($G(^SC(ECAC,0)),U,7),ECHL2=+$P($G(^(0)),U,18) I ECHL D
"RTN","ECXQSR",30,0)
 ..S ECHLS=$P($G(^DIC(40.7,+ECHL,0)),U,2),ECHL2S=$P($G(^DIC(40.7,+ECHL2,0)),U,2)
"RTN","ECXQSR",31,0)
 ..S ECHLS=$$RJ^XLFSTR(ECHLS,3,0),ECHL2S=$$RJ^XLFSTR(ECHL2S,3,0)
"RTN","ECXQSR",32,0)
 S ECDSS=ECHLS_ECHL2S
"RTN","ECXQSR",33,0)
 S ECDU=$S(ECSTOP="A":$P(ECLINK,U),ECSTOP="S":$P(ECLINK,U,2),1:"") Q:'ECDU
"RTN","ECXQSR",34,0)
 S ECDSSU=$G(^ECD(ECDU,0)),ECCS=+$P(ECDSSU,U,4),(ECO,ECM)=+$P(ECDSSU,U,3),ECDCM=$P(ECDSSU,U,5)
"RTN","ECXQSR",35,0)
 S ECUN1=$P(EC2NODE,U,7) S:ECUN1]"" ECUN1=2_ECUN1
"RTN","ECXQSR",36,0)
 Q:'$O(^ACK(509850.6,ECDA,3,0))
"RTN","ECXQSR",37,0)
 ;Create local array of procedure codes and # of times each procedure was performed.
"RTN","ECXQSR",38,0)
 S ECPN=0 F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",39,0)
 .S XX=+^ACK(509850.6,ECDA,3,ECPN,0),XX=+$G(^ACK(509850.4,XX,0)),XX=$P($G(^ICPT(XX,0)),U)
"RTN","ECXQSR",40,0)
 .I XX]"" S LOC(XX)=$G(LOC(XX))+1
"RTN","ECXQSR",41,0)
 Q:'$O(LOC(0))
"RTN","ECXQSR",42,0)
 Q:'$O(^ACK(509850.6,ECDA,1,0))
"RTN","ECXQSR",43,0)
 S ECIEN=$O(^ACK(509850.6,ECDA,1,0)),ECDIA=+^ACK(509850.6,ECDA,1,ECIEN,0),ECDIA=$P($G(^ICD9(ECDIA,0)),U)
"RTN","ECXQSR",44,0)
 ;Loop through array of unique procedures. Create record in ECODE.
"RTN","ECXQSR",45,0)
 S ECP=0 D
"RTN","ECXQSR",46,0)
 .F  S ECP=$O(LOC(ECP)) Q:'ECP  S ECV=+LOC(ECP) D FILE
"RTN","ECXQSR",47,0)
 .K LOC
"RTN","ECXQSR",48,0)
 Q
"RTN","ECXQSR",49,0)
 ;
"RTN","ECXQSR",50,0)
FILE ;file record in #727.825
"RTN","ECXQSR",51,0)
 ;node0
"RTN","ECXQSR",52,0)
 ;inst^dfn^ssn^name^i/o status^day^DSS unit^category^procedure^volume^cost center^ordering sec^section^
"RTN","ECXQSR",53,0)
 ;provider^^prov 2^^prov 3^^^mov #^treat spec^time^primary care team^primary care provider^pce cpt code^
"RTN","ECXQSR",54,0)
 ;icd-9 code^agent orange^radiation exposure^environmental contaminants^service connected^sent to pce^^dss identifier^plcaeholder1
"RTN","ECXQSR",55,0)
 ;node1
"RTN","ECXQSR",56,0)
 ;mpi^dss dept^provider npi^provider #2 npi^provider #3 npi^pc provider npi
"RTN","ECXQSR",57,0)
 N DA,DIK
"RTN","ECXQSR",58,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXQSR",59,0)
 S ECODE=EC7_U_EC23
"RTN","ECXQSR",60,0)
 S ECODE=ECODE_U_ECL_U_ECDFN_U_ECXSSN_U_ECNA_U_ECA_U_ECDAY_U_ECDU_U_U_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECUN1_U_U_U_U_U_U_U_ECMN_U_ECTS_U_ECTIME
"RTN","ECXQSR",61,0)
 S ECODE=ECODE_U_ECPTTM_U_ECPTPR_U_ECP_U_ECDIA_U_ECAO_U_ECRE_U_ECENV_U_ECSC_U_"N"_U_U_ECDSS_U
"RTN","ECXQSR",62,0)
 S ECODE1=U_U_U_U_U
"RTN","ECXQSR",63,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXQSR",64,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXQSR",65,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXQSR",66,0)
 Q
"RTN","ECXQSR",67,0)
 ;
"RTN","ECXQSR",68,0)
INP ;determine in/outpatient status, demographics, primary care team and provider, eligibility, and service history.
"RTN","ECXQSR",69,0)
 ; ECA=1 (outpatient) or =3 (inpatient)
"RTN","ECXQSR",70,0)
 ; ECTS=null (outpatient) or =treating specialty ien
"RTN","ECXQSR",71,0)
 ; ECMN=movement number ien or null (outpatient)
"RTN","ECXQSR",72,0)
 ; ECXSSN=social security number and ECNA=first 4 of last name
"RTN","ECXQSR",73,0)
 ; ECPTTM=primary care team and ECPTPR=primary care provider
"RTN","ECXQSR",74,0)
 ; ECENV=environmental contaminants status
"RTN","ECXQSR",75,0)
 ; ECAO=agent orange status
"RTN","ECXQSR",76,0)
 ; ECRE=radiation exposure status
"RTN","ECXQSR",77,0)
 ; ECSC=service connected status
"RTN","ECXQSR",78,0)
 N DFN,VAIP,VAEL,VASV
"RTN","ECXQSR",79,0)
 S ECNA=$P($P(^DPT(ECDFN,0),U),",",1),ECNA=$E(ECNA_"    ",1,4),ECXSSN=$P(^DPT(ECDFN,0),U,9)
"RTN","ECXQSR",80,0)
 S ECENV=$P($G(^DPT(ECDFN,.322)),U,13)
"RTN","ECXQSR",81,0)
 S X=$$PRIMARY^ECXUTL2(ECDFN,ECDT),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2)
"RTN","ECXQSR",82,0)
 S X=$$INP^ECXUTL2(ECDFN,ECDT),ECA=$P(X,U,1),ECMN=$P(X,U,2),ECTS=$P(X,U,3)
"RTN","ECXQSR",83,0)
 S VAIP("D")=ECDT,DFN=ECDFN D ELIG^VADPT,SVC^VADPT
"RTN","ECXQSR",84,0)
 S ECSC=$S(+VAEL(3):"Y",1:"N")
"RTN","ECXQSR",85,0)
 S ECAO=$S(VASV(2)=1:"Y",VASV(2)=0:"N",1:"U")
"RTN","ECXQSR",86,0)
 S ECRE=$S(VASV(3)=1:"Y",VASV(3)=0:"N",1:"U")
"RTN","ECXQSR",87,0)
 K VAIP,VAEL,VASV,VAERR
"RTN","ECXQSR",88,0)
 Q
"RTN","ECXQSR",89,0)
 ;
"RTN","ECXQSR",90,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR",91,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR",92,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR",93,0)
 Q
"RTN","ECXQSR",94,0)
 ;
"RTN","ECXQSR",95,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR",96,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXRAD")
0^35^B10425750
"RTN","ECXRAD",1,0)
ECXRAD ;ALB/JAP,BIR/PDW,PTD-Extract for Radiology ; [ 11/27/96  10:47 AM ]
"RTN","ECXRAD",2,0)
 ;;3.0;DSS EXTRACTS;**11,8**;Dec 22, 1997
"RTN","ECXRAD",3,0)
BEG ;entry point from option
"RTN","ECXRAD",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXRAD",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXRAD",6,0)
 Q
"RTN","ECXRAD",7,0)
 ;
"RTN","ECXRAD",8,0)
START ;start rad extract
"RTN","ECXRAD",9,0)
 N QFLG
"RTN","ECXRAD",10,0)
 S QFLG=0
"RTN","ECXRAD",11,0)
 K ECXDD D FIELD^DID(70.03,14,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXRAD",12,0)
 S ECDFN="",ECDT=ECSD-.1,ECED1=ECED+.3
"RTN","ECXRAD",13,0)
 F  S ECDT=$O(^RADPT("AR",ECDT)) Q:ECDT>ECED1!(ECDT'>0)  D  Q:QFLG
"RTN","ECXRAD",14,0)
 .S ECDFN=""
"RTN","ECXRAD",15,0)
 .F  S ECDFN=$O(^RADPT("AR",ECDT,ECDFN)) Q:ECDFN=""  I $D(^DPT(ECDFN,0)) D GET Q:QFLG
"RTN","ECXRAD",16,0)
 Q
"RTN","ECXRAD",17,0)
 ;
"RTN","ECXRAD",18,0)
GET ;get data
"RTN","ECXRAD",19,0)
 N SSN,W,X
"RTN","ECXRAD",20,0)
 S SSN=$P(^DPT(ECDFN,0),U,9),ECNA=$E($P($P(^(0),U),",")_"   ",1,4)
"RTN","ECXRAD",21,0)
 ;with dfn get all exams within date range
"RTN","ECXRAD",22,0)
 S ECXMDT=ECSD-.1
"RTN","ECXRAD",23,0)
 F  S ECXMDT=$O(^RADPT(ECDFN,"DT","B",ECXMDT)) Q:((ECXMDT>ECED1)!(ECXMDT=""))  D  Q:QFLG
"RTN","ECXRAD",24,0)
 .S ECTM=$$ECXTIME^ECXUTL(ECXMDT) S:ECTM>235959 ECTM=235959
"RTN","ECXRAD",25,0)
 .S X=$$PRIMARY^ECXUTL2(ECDFN,ECXMDT,ECPROF),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2)
"RTN","ECXRAD",26,0)
 .S X=$$INP^ECXUTL2(ECDFN,ECXMDT),ECA=$P(X,U,1),ECMN=$P(X,U,2),ECTS=$P(X,U,3)
"RTN","ECXRAD",27,0)
 .;for dfn & date get exam(s) ien
"RTN","ECXRAD",28,0)
 .S ECXMDA=""
"RTN","ECXRAD",29,0)
 .F  S ECXMDA=$O(^RADPT(ECDFN,"DT","B",ECXMDT,ECXMDA)) Q:+ECXMDA=0  D
"RTN","ECXRAD",30,0)
 ..S ECXDIV=$P(^RADPT(ECDFN,"DT",ECXMDA,0),U,3),ECLOC=$P(^(0),U,4),ECTY=$P(^(0),U,2),ECXDAY=$$ECXDATE^ECXUTL($P(^(0),U),ECXYM)
"RTN","ECXRAD",31,0)
 ..;proceedures and modifiers for specific exam (case numbers)
"RTN","ECXRAD",32,0)
 ..S ECCN=0
"RTN","ECXRAD",33,0)
 ..F  S ECCN=$O(^RADPT(ECDFN,"DT",ECXMDA,"P",ECCN)) Q:ECCN'>0  D
"RTN","ECXRAD",34,0)
 ...S ECCA=^RADPT(ECDFN,"DT",ECXMDA,"P",ECCN,0)
"RTN","ECXRAD",35,0)
 ...S W=$P(ECCA,U,6),W=$P($G(^DIC(42,+W,44)),U)
"RTN","ECXRAD",36,0)
 ...S:W="" W=$P(ECCA,U,8)
"RTN","ECXRAD",37,0)
 ...S ECS=$P(ECCA,U,7),ECDOC=ECPROF_$P(ECCA,U,14),ECDI=$P(ECCA,U,13)
"RTN","ECXRAD",38,0)
 ...S ECPRO=$P(ECCA,U,2),ECSTAT=$P($G(^RA(72,+$P(ECCA,U,3),0)),U,3)
"RTN","ECXRAD",39,0)
 ...Q:'ECPRO 
"RTN","ECXRAD",40,0)
 ...Q:+ECSTAT=0
"RTN","ECXRAD",41,0)
 ...;pickup CPT code,ward/clinic,service,provider,diagnostic code
"RTN","ECXRAD",42,0)
 ...S ECPT=+$P($G(^RAMIS(71,+ECPRO,0)),U,9),ECPT=$P($G(^ICPT(ECPT,0)),U)
"RTN","ECXRAD",43,0)
 ...;get proceedure modifiers
"RTN","ECXRAD",44,0)
 ...S ECMOD=0,ECMODS=""
"RTN","ECXRAD",45,0)
 ...F  S ECMOD=$O(^RADPT(ECDFN,"DT",ECXMDA,"P",ECCN,"M",ECMOD)) Q:ECMOD'>0  S ECMODS=ECMODS_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",46,0)
 ...D FILE
"RTN","ECXRAD",47,0)
 Q
"RTN","ECXRAD",48,0)
 ;
"RTN","ECXRAD",49,0)
FILE ;file record
"RTN","ECXRAD",50,0)
 ;node0
"RTN","ECXRAD",51,0)
 ;rad div^dfn^ssn^name^in/out^day^cpt code^procedure^img loc^ward^ser^diag code^req physician^
"RTN","ECXRAD",52,0)
 ;modifiers^mov #^treat spec^time^imaging type^primary care team^primary care provider
"RTN","ECXRAD",53,0)
 ;node1
"RTN","ECXRAD",54,0)
 ;mpi^dss dept^req physician npi^pc provider npi
"RTN","ECXRAD",55,0)
 N DA,DIK
"RTN","ECXRAD",56,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXRAD",57,0)
 S ECODE=EC7_U_EC23
"RTN","ECXRAD",58,0)
 S ECODE=ECODE_U_ECXDIV_U_ECDFN_U_SSN_U_ECNA_U_ECA_U_ECXDAY
"RTN","ECXRAD",59,0)
 S ECODE=ECODE_U_ECPT_U_ECPRO_U_ECLOC_U_W_U_ECS_U_ECDI_U_ECDOC
"RTN","ECXRAD",60,0)
 S ECODE=ECODE_U_ECMODS_U_ECMN_U_ECTS_U_ECTM_U_ECTY_U_ECPTTM_U_ECPTPR
"RTN","ECXRAD",61,0)
 S ECODE1=U_U_U
"RTN","ECXRAD",62,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXRAD",63,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXRAD",64,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXRAD",65,0)
 Q
"RTN","ECXRAD",66,0)
 ;
"RTN","ECXRAD",67,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXRAD",68,0)
 S ECHEAD="RAD"
"RTN","ECXRAD",69,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXRAD",70,0)
 Q
"RTN","ECXSADEN")
0^70^B11751260
"RTN","ECXSADEN",1,0)
ECXSADEN ;BIR/DMA-SAS Report from Dental Extract; 31 Aug 95 / 1:40 PM
"RTN","ECXSADEN",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXSADEN",3,0)
EN ;entry point from menu option
"RTN","ECXSADEN",4,0)
 W @IOF,!!,"Dental Extract SAS Report",!!
"RTN","ECXSADEN",5,0)
 ;ecxaud=1 for 'sas' audit
"RTN","ECXSADEN",6,0)
 S ECXHEAD="DEN",ECXAUD=1
"RTN","ECXSADEN",7,0)
 ;select extract
"RTN","ECXSADEN",8,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXSADEN",9,0)
 I ECXERR D AUDIT^ECXKILL Q
"RTN","ECXSADEN",10,0)
 ;select all dental sites/divisions
"RTN","ECXSADEN",11,0)
 S ECXALL=1 D DEN^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXSADEN",12,0)
 I ECXERR D AUDIT^ECXKILL Q
"RTN","ECXSADEN",13,0)
 W !!
"RTN","ECXSADEN",14,0)
 S ECXPGM="PROCESS^ECXSADEN",ECXDESC="Dental Extract SAS Report"
"RTN","ECXSADEN",15,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXSADEN",16,0)
 W !
"RTN","ECXSADEN",17,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXSADEN",18,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXSADEN",19,0)
 .W !!,?5,"Try agian later... exiting.",!
"RTN","ECXSADEN",20,0)
 .D AUDIT^ECXKILL
"RTN","ECXSADEN",21,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXSADEN",22,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXSADEN",23,0)
 .D PROCESS
"RTN","ECXSADEN",24,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXSADEN",25,0)
 D HOME^%ZIS
"RTN","ECXSADEN",26,0)
 D AUDIT^ECXKILL
"RTN","ECXSADEN",27,0)
 Q
"RTN","ECXSADEN",28,0)
 ;
"RTN","ECXSADEN",29,0)
PROCESS ;queued entry
"RTN","ECXSADEN",30,0)
 N J,K,X,Y,JJ,SS,LN,PG,DIV,DIVNUM,EC,ECQ,ECFK,ECFL,QFLG,TOT,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXSADEN",31,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXSADEN",32,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXSADEN",33,0)
 S (QFLG,PG)=0,$P(LN,"-",80)=""
"RTN","ECXSADEN",34,0)
 ;get run date in external format
"RTN","ECXSADEN",35,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXSADEN",36,0)
 ;arrange dental divisions by station #
"RTN","ECXSADEN",37,0)
 S DIV="" F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  S DIVNUM=$P(ECXDIV(DIV),U,3),DIV(DIVNUM)=ECXDIV(DIV)
"RTN","ECXSADEN",38,0)
 ;process the extract records
"RTN","ECXSADEN",39,0)
 S J="" F  S J=$O(^ECX(727.806,"AC",ECXEXT,J)) Q:'J  I $D(^ECX(727.806,J,0)) S EC=^(0),ECFL=$P(EC,U,41) D
"RTN","ECXSADEN",40,0)
 .I $P(EC,U,12) S ^("D09")=$G(^TMP($J,"ECXAUD",ECFL,"D09"))+1
"RTN","ECXSADEN",41,0)
 .F K=10,11,15:1:18,20:1:24,27:1:37 S ECQ=$P(EC,U,K+3) I ECQ S ^("D"_K)=$G(^TMP($J,"ECXAUD",ECFL,"D"_K))+ECQ
"RTN","ECXSADEN",42,0)
 .I $P(EC,U,11)="C" S ^("D08C")=$G(^TMP($J,"ECXAUD",ECFL,"D08C"))+1
"RTN","ECXSADEN",43,0)
 .I $P(EC,U,11)="S" S ^("D08S")=$G(^TMP($J,"ECXAUD",ECFL,"D08S"))+1
"RTN","ECXSADEN",44,0)
 .F K=12,13,14 I $P(EC,U,K+3)=1 S ^("D"_K)=$G(^TMP($J,"ECXAUD",ECFL,"D"_K))+1
"RTN","ECXSADEN",45,0)
 .I $P(EC,U,28)=3 S ^("D25I")=$G(^TMP($J,"ECXAUD",ECFL,"D25I"))+1
"RTN","ECXSADEN",46,0)
 .I $P(EC,U,28)=4 S ^("D25G")=$G(^TMP($J,"ECXAUD",ECFL,"D25G"))+1
"RTN","ECXSADEN",47,0)
 .I $P(EC,U,29)=1 S ^("D26S")=$G(^TMP($J,"ECXAUD",ECFL,"D26S"))+1
"RTN","ECXSADEN",48,0)
 .I $P(EC,U,29)=3 S ^("D26F")=$G(^TMP($J,"ECXAUD",ECFL,"D26F"))+1
"RTN","ECXSADEN",49,0)
 .I $P(EC,U,42)=2 S ^("D39C")=$G(^TMP($J,"ECXAUD",ECFL,"D39C"))+1
"RTN","ECXSADEN",50,0)
 .I $P(EC,U,42)=3 S ^("D39T")=$G(^TMP($J,"ECXAUD",ECFL,"D39T"))+1
"RTN","ECXSADEN",51,0)
 .F K=40:1:42 I $P(EC,U,K+3)=1 S ^("D"_K)=$G(^TMP($J,"ECXAUD",ECFL,"D"_K))+1
"RTN","ECXSADEN",52,0)
 .S EC=$P(EC,U,46),EC=$S(EC=1:"M",EC=2:"Q",EC=3:"R",1:"") I EC]"" S ^("D43"_EC)=$G(^TMP($J,"ECXAUD",ECFL,"D43"_EC))+1
"RTN","ECXSADEN",53,0)
 ;print the report
"RTN","ECXSADEN",54,0)
 U IO
"RTN","ECXSADEN",55,0)
 S ECFL="" F  S ECFL=$O(^TMP($J,"ECXAUD",ECFL)) Q:ECFL=""  D  Q:QFLG
"RTN","ECXSADEN",56,0)
 .D HEADER
"RTN","ECXSADEN",57,0)
 .S TOT(ECFL)=0
"RTN","ECXSADEN",58,0)
 .S ECFK="" F  S ECFK=$O(^TMP($J,"ECXAUD",ECFL,ECFK)) Q:ECFK=""  S TOT=^(ECFK) D  Q:QFLG
"RTN","ECXSADEN",59,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,ECFL,?43,ECFK,?68,$$RJ^XLFSTR(TOT,5," ")
"RTN","ECXSADEN",60,0)
 ..S TOT(ECFL)=TOT(ECFL)+TOT
"RTN","ECXSADEN",61,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,?40,$E(LN,1,34)
"RTN","ECXSADEN",62,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,"Total for Feeder Location "_ECFL_":",?68,$$RJ^XLFSTR(TOT(ECFL),5," ")
"RTN","ECXSADEN",63,0)
 ;close
"RTN","ECXSADEN",64,0)
 I $E(IOST)'="C" W @IOF
"RTN","ECXSADEN",65,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXSADEN",66,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXSADEN",67,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXSADEN",68,0)
 D AUDIT^ECXKILL
"RTN","ECXSADEN",69,0)
 Q
"RTN","ECXSADEN",70,0)
 ;
"RTN","ECXSADEN",71,0)
HEADER ;print the header
"RTN","ECXSADEN",72,0)
 D SASHEAD^ECXUTLA(ECFL,ECXHEAD,.DIV,.ECXARRAY,.PG)
"RTN","ECXSADEN",73,0)
 Q
"RTN","ECXSARAD")
0^69^B11284823
"RTN","ECXSARAD",1,0)
ECXSARAD ;BIR/DMA-SAS Report from Radiology Extract; 25 Apr 95 / 11:03 AM
"RTN","ECXSARAD",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXSARAD",3,0)
EN ;entry point from menu option
"RTN","ECXSARAD",4,0)
 W @IOF,!!,"Radiology Extract SAS Report",!!
"RTN","ECXSARAD",5,0)
 ;ecxaud=1 for 'sas' audit
"RTN","ECXSARAD",6,0)
 S ECXHEAD="RAD",ECXAUD=1
"RTN","ECXSARAD",7,0)
 ;select extract
"RTN","ECXSARAD",8,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXSARAD",9,0)
 I ECXERR D AUDIT^ECXKILL Q
"RTN","ECXSARAD",10,0)
 ;select all radiology sites/divisions
"RTN","ECXSARAD",11,0)
 S ECXALL=1 D RAD^ECXDVSN2(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXSARAD",12,0)
 I ECXERR D AUDIT^ECXKILL Q
"RTN","ECXSARAD",13,0)
 W !!
"RTN","ECXSARAD",14,0)
 S ECXPGM="PROCESS^ECXSARAD",ECXDESC="Radiology Extract SAS Report"
"RTN","ECXSARAD",15,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXSARAD",16,0)
 W !
"RTN","ECXSARAD",17,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXSARAD",18,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXSARAD",19,0)
 .W !!,?5,"Try agian later... exiting.",!
"RTN","ECXSARAD",20,0)
 .D AUDIT^ECXKILL
"RTN","ECXSARAD",21,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXSARAD",22,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXSARAD",23,0)
 .D PROCESS
"RTN","ECXSARAD",24,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXSARAD",25,0)
 D HOME^%ZIS
"RTN","ECXSARAD",26,0)
 D AUDIT^ECXKILL
"RTN","ECXSARAD",27,0)
 Q
"RTN","ECXSARAD",28,0)
 ;
"RTN","ECXSARAD",29,0)
PROCESS ;queued entry
"RTN","ECXSARAD",30,0)
 N J,K,X,Y,JJ,SS,LN,PG,DIV,EC,ECFK,ECFL,QFLG,TOT,TYPE,TYPENM,DIQ,DR,DA,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXSARAD",31,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXSARAD",32,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXSARAD",33,0)
 S (QFLG,PG)=0,$P(LN,"-",80)=""
"RTN","ECXSARAD",34,0)
 ;get run date in external format
"RTN","ECXSARAD",35,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXSARAD",36,0)
 ;setup array of imaging types
"RTN","ECXSARAD",37,0)
 S TYPE=0 F  S TYPE=$O(^RA(79.2,TYPE)) Q:+TYPE<1  D
"RTN","ECXSARAD",38,0)
 .K ECX S DIC="^RA(79.2,",DR=".01;3",DIQ="ECX",DIQ(0)="I",DA=TYPE D EN^DIQ1
"RTN","ECXSARAD",39,0)
 .S TYPE(TYPE)=ECX(79.2,TYPE,.01,"I")_U_ECX(79.2,TYPE,3,"I")
"RTN","ECXSARAD",40,0)
 ;process the extract records
"RTN","ECXSARAD",41,0)
 S J="" F  S J=$O(^ECX(727.814,"AC",ECXEXT,J)) Q:'J  I $D(^ECX(727.814,J,0)) S EC=^(0),DIV=$P(EC,U,4),ECFL=DIV_"-"_$P(EC,U,21) D
"RTN","ECXSARAD",42,0)
 .S ECFK=$P(EC,U,10) I ECFK="" S ECFK=$P(EC,U,11)
"RTN","ECXSARAD",43,0)
 .I $P(EC,U,10)="",$P(EC,U,11)=468 S ECFK=777777
"RTN","ECXSARAD",44,0)
 .S MODS=";"_$P(EC,U,17)_";"
"RTN","ECXSARAD",45,0)
 .S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+1
"RTN","ECXSARAD",46,0)
 .I MODS[";1;" S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+1
"RTN","ECXSARAD",47,0)
 .I MODS[";2;" S ^(888888)=$G(^TMP($J,"ECXAUD",DIV,ECFL,888888))+1
"RTN","ECXSARAD",48,0)
 .I MODS[";3;" S ^(999999)=$G(^TMP($J,"ECXAUD",DIV,ECFL,999999))+1
"RTN","ECXSARAD",49,0)
 ;print the report
"RTN","ECXSARAD",50,0)
 U IO
"RTN","ECXSARAD",51,0)
 S DIV="" F  S DIV=$O(^TMP($J,"ECXAUD",DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXSARAD",52,0)
 .D HEADER S TOT("D")=0
"RTN","ECXSARAD",53,0)
 .S ECFL="" F  S ECFL=$O(^TMP($J,"ECXAUD",DIV,ECFL)) Q:ECFL=""  S TYPE=+$P(ECFL,"-",2) D  Q:QFLG
"RTN","ECXSARAD",54,0)
 ..S TYPENM=$P($G(TYPE(TYPE)),U,1),TYPENM=$E(TYPENM,1,18),TOT("FL")=0
"RTN","ECXSARAD",55,0)
 ..S ECFK="" F  S ECFK=$O(^TMP($J,"ECXAUD",DIV,ECFL,ECFK)) Q:ECFK=""  S TOT=^(ECFK) D  Q:QFLG
"RTN","ECXSARAD",56,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,ECFL,?43,ECFK,?68,$$RJ^XLFSTR(TOT,5," ")
"RTN","ECXSARAD",57,0)
 ...S TOT("FL")=TOT("FL")+TOT,TOT("D")=TOT("D")+TOT
"RTN","ECXSARAD",58,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?40,$E(LN,1,34)
"RTN","ECXSARAD",59,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,"Total for Feeder Location "_DIV_"-"_TYPENM_" ("_ECFL_"):",?68,$$RJ^XLFSTR(TOT("FL"),5," ")
"RTN","ECXSARAD",60,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Grand Total for Division "_DIV_":",?68,$$RJ^XLFSTR(TOT("D"),5," ")
"RTN","ECXSARAD",61,0)
 ;close
"RTN","ECXSARAD",62,0)
 I $E(IOST)'="C" W @IOF
"RTN","ECXSARAD",63,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXSARAD",64,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXSARAD",65,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXSARAD",66,0)
 D AUDIT^ECXKILL
"RTN","ECXSARAD",67,0)
 Q
"RTN","ECXSARAD",68,0)
HEADER ;print the header
"RTN","ECXSARAD",69,0)
 D SASHEAD^ECXUTLA(DIV,ECXHEAD,.ECXDIV,.ECXARRAY,.PG)
"RTN","ECXSARAD",70,0)
 Q
"RTN","ECXSARXS")
0^71^B15203483
"RTN","ECXSARXS",1,0)
ECXSARXS ;BIR/DMA-SAS Report from Prescription Extract; 22 Sep 95 / 10:27 AM
"RTN","ECXSARXS",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXSARXS",3,0)
 ;
"RTN","ECXSARXS",4,0)
EN ;entry point from menu option
"RTN","ECXSARXS",5,0)
 W @IOF,!!,"Prescription Extract SAS Report",!!
"RTN","ECXSARXS",6,0)
 ;ecxaud=1 for 'sas' audit
"RTN","ECXSARXS",7,0)
 S ECXHEAD="PRE",ECXAUD=1
"RTN","ECXSARXS",8,0)
 ;select extract
"RTN","ECXSARXS",9,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXSARXS",10,0)
 I ECXERR D AUDIT^ECXKILL Q
"RTN","ECXSARXS",11,0)
 ;select all pharmacy sites/divisions
"RTN","ECXSARXS",12,0)
 S ECXALL=1 D PRE^ECXDVSN1(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXSARXS",13,0)
 I ECXERR D AUDIT^ECXKILL Q
"RTN","ECXSARXS",14,0)
 W !!
"RTN","ECXSARXS",15,0)
 S ECXPGM="PROCESS^ECXSARXS",ECXDESC="Prescription Extract SAS Report"
"RTN","ECXSARXS",16,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXSARXS",17,0)
 W !
"RTN","ECXSARXS",18,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXSARXS",19,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXSARXS",20,0)
 .W !!,?5,"Try agian later... exiting.",!
"RTN","ECXSARXS",21,0)
 .D AUDIT^ECXKILL
"RTN","ECXSARXS",22,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXSARXS",23,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXSARXS",24,0)
 .D PROCESS
"RTN","ECXSARXS",25,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXSARXS",26,0)
 D HOME^%ZIS
"RTN","ECXSARXS",27,0)
 D AUDIT^ECXKILL
"RTN","ECXSARXS",28,0)
 Q
"RTN","ECXSARXS",29,0)
 ;
"RTN","ECXSARXS",30,0)
PROCESS ;queued entry
"RTN","ECXSARXS",31,0)
 N J,X,Y,JJ,SS,LN,PG,DIV,EC,ECFK,ECFL,ECQ,MAIL,NEWRX,COPAY,DEA,TOT,QFLG,DIQ,DR,DA,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXSARXS",32,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXSARXS",33,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXSARXS",34,0)
 S (QFLG,PG)=0,$P(LN,"-",80)=""
"RTN","ECXSARXS",35,0)
 ;get run date in external format
"RTN","ECXSARXS",36,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXSARXS",37,0)
 ;process the extract records
"RTN","ECXSARXS",38,0)
 S J="" F  S J=$O(^ECX(727.81,"AC",ECXEXT,J)) Q:'J  I $D(^ECX(727.81,J,0)) S EC=^(0) D
"RTN","ECXSARXS",39,0)
 .S DIV=$P(EC,U,10),MAIL=+$P(EC,U,13),NEWRX=+$P(EC,U,15),COPAY=+$P(EC,U,27),DEA=$P(EC,U,29)
"RTN","ECXSARXS",40,0)
 .;non-cmop rxs only
"RTN","ECXSARXS",41,0)
 .;feeder location is always "pre"_div
"RTN","ECXSARXS",42,0)
 .I MAIL'=2 D
"RTN","ECXSARXS",43,0)
 ..S ECFL="PRE"_DIV,ECFK=$P(EC,U,28),ECQ=+$P(EC,U,17)
"RTN","ECXSARXS",44,0)
 ..S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",45,0)
 ..;additional feeder key records for non-cmop rx
"RTN","ECXSARXS",46,0)
 ..S ECFK="BASIC",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",47,0)
 ..I MAIL=1 D
"RTN","ECXSARXS",48,0)
 ...S ECFK="VAMAIL",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",49,0)
 ...I NEWRX=1 D
"RTN","ECXSARXS",50,0)
 ....S ECFK="NEWVMOP",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",51,0)
 ..I MAIL=0&(NEWRX=1) D
"RTN","ECXSARXS",52,0)
 ...S ECFK="NEWWIN",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",53,0)
 ..I COPAY=1 D
"RTN","ECXSARXS",54,0)
 ...S ECFK="COPAY",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",55,0)
 ..I DEA="I" D
"RTN","ECXSARXS",56,0)
 ...S ECFK="PREDEASP",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",57,0)
 .;cmop rxs only
"RTN","ECXSARXS",58,0)
 .;feeder location is "cmopdsu"_div, "cmopdis"_div, and also "pre"_div
"RTN","ECXSARXS",59,0)
 .I MAIL=2 D
"RTN","ECXSARXS",60,0)
 ..S ECFL="CMOPDSU"_DIV,ECFK=$P(EC,U,28),ECQ=+$P(EC,U,17),^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",61,0)
 ..S ECFL="CMOPDIS"_DIV,ECFK="CMOPDISP",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",62,0)
 ..S ECFL="PRE"_DIV D
"RTN","ECXSARXS",63,0)
 ...;possibly three additional feeder key recods for cmop rx
"RTN","ECXSARXS",64,0)
 ...I NEWRX=1 D
"RTN","ECXSARXS",65,0)
 ....S ECFK="NEWCMOP",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",66,0)
 ...I COPAY=1 D
"RTN","ECXSARXS",67,0)
 ....S ECFK="COPAY",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",68,0)
 ...I DEA="I" D
"RTN","ECXSARXS",69,0)
 ....S ECFK="PREDEASP",ECQ=1,^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSARXS",70,0)
 ;print the report
"RTN","ECXSARXS",71,0)
 U IO
"RTN","ECXSARXS",72,0)
 S DIV="" F  S DIV=$O(^TMP($J,"ECXAUD",DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXSARXS",73,0)
 .D HEADER
"RTN","ECXSARXS",74,0)
 .S ECFL="" F  S ECFL=$O(^TMP($J,"ECXAUD",DIV,ECFL)) Q:ECFL=""  D  Q:QFLG
"RTN","ECXSARXS",75,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,ECFL
"RTN","ECXSARXS",76,0)
 ..S ECFK="" F  S ECFK=$O(^TMP($J,"ECXAUD",DIV,ECFL,ECFK)) Q:ECFK=""  S TOT=^(ECFK) D  Q:QFLG
"RTN","ECXSARXS",77,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG  W ?40,ECFK,?68,$$RJ^XLFSTR(TOT,5," "),!
"RTN","ECXSARXS",78,0)
 ;close
"RTN","ECXSARXS",79,0)
 I $E(IOST)'="C" W @IOF
"RTN","ECXSARXS",80,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXSARXS",81,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXSARXS",82,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXSARXS",83,0)
 D AUDIT^ECXKILL
"RTN","ECXSARXS",84,0)
 Q
"RTN","ECXSARXS",85,0)
 ;
"RTN","ECXSARXS",86,0)
HEADER ;print the header
"RTN","ECXSARXS",87,0)
 D SASHEAD^ECXUTLA(DIV,ECXHEAD,.ECXDIV,.ECXARRAY,.PG)
"RTN","ECXSARXS",88,0)
 Q
"RTN","ECXSASUR")
0^72^B25856966
"RTN","ECXSASUR",1,0)
ECXSASUR ;BIR/DMA-SAS Report from Surgery Extract; 19 Jul 95 / 11:13 AM
"RTN","ECXSASUR",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXSASUR",3,0)
EN ;entry point from menu option
"RTN","ECXSASUR",4,0)
 W @IOF,!!,"Surgery Extract SAS Report",!!
"RTN","ECXSASUR",5,0)
 ;ecxaud=1 for 'sas' audit
"RTN","ECXSASUR",6,0)
 S ECXHEAD="SUR",ECXAUD=1
"RTN","ECXSASUR",7,0)
 ;select extract
"RTN","ECXSASUR",8,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXSASUR",9,0)
 I ECXERR D AUDIT^ECXKILL Q
"RTN","ECXSASUR",10,0)
 ;select all surgery sites/divisions
"RTN","ECXSASUR",11,0)
 S ECXALL=1 D SUR^ECXDVSN2(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXSASUR",12,0)
 I ECXERR D AUDIT^ECXKILL Q
"RTN","ECXSASUR",13,0)
 W !!
"RTN","ECXSASUR",14,0)
 S ECXPGM="PROCESS^ECXSASUR",ECXDESC="Surgery Extract SAS Report"
"RTN","ECXSASUR",15,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXSASUR",16,0)
 W !
"RTN","ECXSASUR",17,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXSASUR",18,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXSASUR",19,0)
 .W !!,?5,"Try agian later... exiting.",!
"RTN","ECXSASUR",20,0)
 .D AUDIT^ECXKILL
"RTN","ECXSASUR",21,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXSASUR",22,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXSASUR",23,0)
 .D PROCESS
"RTN","ECXSASUR",24,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXSASUR",25,0)
 D HOME^%ZIS
"RTN","ECXSASUR",26,0)
 D AUDIT^ECXKILL
"RTN","ECXSASUR",27,0)
 Q
"RTN","ECXSASUR",28,0)
 ;
"RTN","ECXSASUR",29,0)
PROCESS ;queued entry
"RTN","ECXSASUR",30,0)
 N J,JJ,X,Y,SS,LN,PG,DIV,EC,EC16,EC31,ECF1,ECFK,ECFL,ECFLNM,ECFLX,ECFX,QFLG,TOT,F1,F1SUB,F1NM,F2,F2SUB,F2NM,FL,DIQ,DR,DA,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXSASUR",31,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXSASUR",32,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXSASUR",33,0)
 S (QFLG,PG)=0,$P(LN,"-",80)=""
"RTN","ECXSASUR",34,0)
 ;get run date in external format
"RTN","ECXSASUR",35,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXSASUR",36,0)
 ;setup array of feeder location names
"RTN","ECXSASUR",37,0)
 F F1=1:1:14 S X=$P($T(FEED1+F1),";",3),F1SUB=$P(X,U,1),F1NM=$P(X,U,2) S ^TMP($J,"ECXFL","OR"_F1SUB)=F1NM D
"RTN","ECXSASUR",38,0)
 .F F2=1:1:7 S X=$P($T(FEED2+F2),";",3),F2SUB=$P(X,U,1),F2NM=$P(X,U,2) S ^TMP($J,"ECXFL","OR"_F1SUB_F2SUB)=F1NM_" - "_F2NM,FL(F2SUB)=F2NM
"RTN","ECXSASUR",39,0)
 ;process extract records
"RTN","ECXSASUR",40,0)
 ;type='p'rimary or 's'econdary or 'i'mplant
"RTN","ECXSASUR",41,0)
 ;ignore type=secondary
"RTN","ECXSASUR",42,0)
 S J="" F  S J=$O(^ECX(727.811,"AC",ECXEXT,J)) Q:'J  I $D(^ECX(727.811,J,0)) S EC=^(0),DIV=$P(EC,U,4) I $P(EC,U,17)'="S",$P(EC,U,28)'="C" D
"RTN","ECXSASUR",43,0)
 .;determine feeder location
"RTN","ECXSASUR",44,0)
 .S ECF1=$E($P(EC,U,32),1,4)
"RTN","ECXSASUR",45,0)
 .I ECF1="" D
"RTN","ECXSASUR",46,0)
 ..S ECF1=$P(EC,U,30),ECF1="OR"_$E("GEORCANECNAMINENCYWACLDEOT",ECF1*2-1,ECF1*2)
"RTN","ECXSASUR",47,0)
 ..S:ECF1="OR" ECF1="ORNO"
"RTN","ECXSASUR",48,0)
 ..I $P(EC,U,30)="",$P(EC,U,12)="",$P(EC,U,11)="059" S ECF1="ORCY"
"RTN","ECXSASUR",49,0)
 .S ECFL=DIV_ECF1
"RTN","ECXSASUR",50,0)
 .;determine surgical specialty
"RTN","ECXSASUR",51,0)
 .S ECSS=$P(EC,U,11) S:ECSS="" ECSS=999 I $P(EC,U,32)'="" S ECSS="NON"
"RTN","ECXSASUR",52,0)
 .;type=implant generates one product record; volume is always at least 1
"RTN","ECXSASUR",53,0)
 .I $P(EC,U,17)="I" D  Q
"RTN","ECXSASUR",54,0)
 ..S ECFLX=ECFL_"I",ECFK=ECSS_"-"_$$RJ^XLFSTR($P(EC,U,23),5,0)
"RTN","ECXSASUR",55,0)
 ..S ECQ=$P(EC,U,24) S:'ECQ ECQ=1
"RTN","ECXSASUR",56,0)
 ..S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFLX,ECFK))+ECQ
"RTN","ECXSASUR",57,0)
 .;type=primary generates four or five product records, but only two are of interest here
"RTN","ECXSASUR",58,0)
 .;anesthesia time product
"RTN","ECXSASUR",59,0)
 .S ECQ=+$P(EC,U,22) I ECQ>0 D
"RTN","ECXSASUR",60,0)
 ..S ECFLX=ECFL_"A",EC16=$P(EC,U,16)
"RTN","ECXSASUR",61,0)
 ..S ECD=$S(EC16="G":1,EC16="L":3,EC16="S":4,EC16="E":4,EC16="M":7,EC16="":6,1:5)
"RTN","ECXSASUR",62,0)
 ..S ECFK=ECSS_"-"_"2"_ECD
"RTN","ECXSASUR",63,0)
 ..S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFLX,ECFK))+ECQ
"RTN","ECXSASUR",64,0)
 .;surgeon time product
"RTN","ECXSASUR",65,0)
 .S ECQ=+$P(EC,U,21) I ECQ>0 D
"RTN","ECXSASUR",66,0)
 ..S EC31=+$P(EC,U,31),ECFX=$S(EC31=10:"D",EC31=24:"M",EC31=32:"P",EC31=43:"C",1:"S")
"RTN","ECXSASUR",67,0)
 ..S ECFLX=ECFL_ECFX
"RTN","ECXSASUR",68,0)
 ..S ECFK=ECSS_"-40"
"RTN","ECXSASUR",69,0)
 ..S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFLX,ECFK))+ECQ
"RTN","ECXSASUR",70,0)
 .;patient time product
"RTN","ECXSASUR",71,0)
 .S ECQ=+$P(EC,U,20) I ECQ>0 D
"RTN","ECXSASUR",72,0)
 ..S ECFK=ECSS_"-10"
"RTN","ECXSASUR",73,0)
 ..S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSASUR",74,0)
 .;recovery room time product only if not cystoscopy and not non-or
"RTN","ECXSASUR",75,0)
 .I ECFL'="ORCY",$P(EC,U,32)="" D
"RTN","ECXSASUR",76,0)
 ..S ECQ=+$P(EC,U,33) I ECQ>0 D
"RTN","ECXSASUR",77,0)
 ...S ECFK=ECSS_"-60"
"RTN","ECXSASUR",78,0)
 ...S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSASUR",79,0)
 .;technician time product, only for cystoscopy
"RTN","ECXSASUR",80,0)
 .I ECFL="ORCY" D
"RTN","ECXSASUR",81,0)
 ..S ECQ=+$P(EC,U,20) S:($P(EC,U,22)>$P(EC,U,20)) ECQ=+$P(EC,U,22) I ECQ>0 D
"RTN","ECXSASUR",82,0)
 ...S ECFK=ECSS_"-70"
"RTN","ECXSASUR",83,0)
 ...S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSASUR",84,0)
 .;cleanup time product
"RTN","ECXSASUR",85,0)
 .S ECQ=2 D
"RTN","ECXSASUR",86,0)
 ..S ECFK=ECSS_"-30"
"RTN","ECXSASUR",87,0)
 ..S ^(ECFK)=$G(^TMP($J,"ECXAUD",DIV,ECFL,ECFK))+ECQ
"RTN","ECXSASUR",88,0)
 ;print the report
"RTN","ECXSASUR",89,0)
 U IO
"RTN","ECXSASUR",90,0)
 S DIV="" F  S DIV=$O(^TMP($J,"ECXAUD",DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXSASUR",91,0)
 .D HEADER
"RTN","ECXSASUR",92,0)
 .S ECFL="" F  S ECFL=$O(^TMP($J,"ECXAUD",DIV,ECFL)) Q:ECFL=""  D  Q:QFLG
"RTN","ECXSASUR",93,0)
 ..S DIVL=$L(DIV),ECFLX=$E(ECFL,DIVL+1,99),ECFLNM=$G(^TMP($J,"ECXFL",ECFLX)) S:ECFLNM="" ECFLNM="NON-OR"
"RTN","ECXSASUR",94,0)
 ..I ECFLNM="NON-OR" D
"RTN","ECXSASUR",95,0)
 ...S F2SUB=$E(ECFLX,5),F2NM=""
"RTN","ECXSASUR",96,0)
 ...S:F2SUB]"" F2NM=$G(FL(F2SUB)) S:F2NM]"" ECFLNM=ECFLNM_" - "_F2NM
"RTN","ECXSASUR",97,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,ECFL,?12,ECFLNM
"RTN","ECXSASUR",98,0)
 ..S ECFK="" F  S ECFK=$O(^TMP($J,"ECXAUD",DIV,ECFL,ECFK)) Q:ECFK=""  S TOT=^(ECFK) D  Q:QFLG
"RTN","ECXSASUR",99,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG  W ?48,ECFK,?68,$$RJ^XLFSTR(TOT,6," "),!
"RTN","ECXSASUR",100,0)
 ;close
"RTN","ECXSASUR",101,0)
 I $E(IOST)'="C" W @IOF
"RTN","ECXSASUR",102,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXSASUR",103,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXSASUR",104,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXSASUR",105,0)
 D AUDIT^ECXKILL
"RTN","ECXSASUR",106,0)
 Q
"RTN","ECXSASUR",107,0)
HEADER ;print the header
"RTN","ECXSASUR",108,0)
 N ECXTAB
"RTN","ECXSASUR",109,0)
 S ECXTAB=48
"RTN","ECXSASUR",110,0)
 D SASHEAD^ECXUTLA(DIV,ECXHEAD,.ECXDIV,.ECXARRAY,.PG,ECXTAB)
"RTN","ECXSASUR",111,0)
 Q
"RTN","ECXSASUR",112,0)
 ;
"RTN","ECXSASUR",113,0)
FEED1 ;or location names
"RTN","ECXSASUR",114,0)
 ;;AM^AMBULATORY OR
"RTN","ECXSASUR",115,0)
 ;;CA^CARDIAC OR
"RTN","ECXSASUR",116,0)
 ;;CL^CLINIC
"RTN","ECXSASUR",117,0)
 ;;CN^CARDIAC/NEURO OR
"RTN","ECXSASUR",118,0)
 ;;CY^CYSTOSCOPY RM.
"RTN","ECXSASUR",119,0)
 ;;DE^DEDICATED RM.
"RTN","ECXSASUR",120,0)
 ;;EN^ENDOSCOPY RM.
"RTN","ECXSASUR",121,0)
 ;;GE^GENERAL OR
"RTN","ECXSASUR",122,0)
 ;;IN^ICU
"RTN","ECXSASUR",123,0)
 ;;NE^NEUROSURGERY OR
"RTN","ECXSASUR",124,0)
 ;;NO^UNKNOWN
"RTN","ECXSASUR",125,0)
 ;;OR^ORTHOPEDIC OR
"RTN","ECXSASUR",126,0)
 ;;OT^OTHER LOCATION
"RTN","ECXSASUR",127,0)
 ;;WA^WARD
"RTN","ECXSASUR",128,0)
 ;
"RTN","ECXSASUR",129,0)
FEED2 ;service location names
"RTN","ECXSASUR",130,0)
 ;;A^ANESTHESIA
"RTN","ECXSASUR",131,0)
 ;;I^IMPLANTS
"RTN","ECXSASUR",132,0)
 ;;C^SPINAL CORD
"RTN","ECXSASUR",133,0)
 ;;D^DENTAL
"RTN","ECXSASUR",134,0)
 ;;M^MEDICINE
"RTN","ECXSASUR",135,0)
 ;;P^PSYCH
"RTN","ECXSASUR",136,0)
 ;;S^SURGERY
"RTN","ECXSCLD")
0^73^B37439246
"RTN","ECXSCLD",1,0)
ECXSCLD ;BIR/DMA,CML-Enter, Print and Edit Entries in 728.44 ; [ 12/12/96  4:14 PM ]
"RTN","ECXSCLD",2,0)
 ;;3.0;DSS EXTRACTS;**2,8**;Dec 22, 1997
"RTN","ECXSCLD",3,0)
EN ;entry point from option
"RTN","ECXSCLD",4,0)
 ;load entries
"RTN","ECXSCLD",5,0)
 W !!,"This option creates local entries in the DSS CLINIC AND STOP CODES file.",!
"RTN","ECXSCLD",6,0)
 I '$D(^ECX(728.44)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",7,0)
 K ZTSAVE S ZTDESC="Gather Clinic stop codes for DSS",ZTRTN="START^ECXSCLD",ZTIO="" D ^%ZTLOAD
"RTN","ECXSCLD",8,0)
 Q
"RTN","ECXSCLD",9,0)
START ; entry point
"RTN","ECXSCLD",10,0)
 S EC=0,ECNT=0 F  S EC=$O(^SC(EC)) Q:'EC  I $D(^(EC,0)) S ECD=^(0),DAT=$G(^("I")) I $P(ECD,U,3)="C" D FIX
"RTN","ECXSCLD",11,0)
 K DIK S DIK="^ECX(728.44,",DIK(1)=".01^B" D ENALL^DIK
"RTN","ECXSCLD",12,0)
 ;S $P(^ECX(728.44,0),U,3,4)=ECL_U_ECNT
"RTN","ECXSCLD",13,0)
 K ZTDESC,EC,J,ECD,ECD2,ECL,ECS,ECS2,ECP
"RTN","ECXSCLD",14,0)
 S ZTREQ="@" Q
"RTN","ECXSCLD",15,0)
 ;
"RTN","ECXSCLD",16,0)
FIX ; get stop codes and default style for feeder key
"RTN","ECXSCLD",17,0)
 ; 1 if no credit stop code - 5 if credit stop code exists
"RTN","ECXSCLD",18,0)
 K ECD2,ECS2 I $D(^ECX(728.44,EC,0)) S ECD2=^(0) F ECS=2,3 S ECS2(ECS)=$P(ECD2,U,ECS)
"RTN","ECXSCLD",19,0)
 S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCLD",20,0)
 I $D(ECD2) D
"RTN","ECXSCLD",21,0)
 .I ID,ID'>DT I 'RD!(RD>DT) S:$P(ECD2,U,10)'=ID $P(ECD2,U,7)="" S $P(ECD2,U,10)=ID
"RTN","ECXSCLD",22,0)
 .I ID,RD,RD'>DT S:$P(ECD2,U,10) $P(ECD2,U,7)="" S $P(ECD2,U,10)=""
"RTN","ECXSCLD",23,0)
 .I ID,ID>DT S:$P(ECD2,U,10) $P(ECD2,U,7)="" S $P(ECD2,U,10)=""
"RTN","ECXSCLD",24,0)
 .I 'ID,$P(ECD2,U,10) S $P(ECD2,U,7)="",$P(ECD2,U,10)=""
"RTN","ECXSCLD",25,0)
 F ECS=7,18 S ECP=+$P(ECD,U,ECS),ECS(ECS)=$P($G(^DIC(40.7,ECP,0)),U,2)
"RTN","ECXSCLD",26,0)
 S ECDF=$S(ECS(18)]"":5,1:1) S:$P(ECD,U,17)="Y" ECDF=6 S:$G(^SC(EC,"OOS")) ECDF=6
"RTN","ECXSCLD",27,0)
 S ECL=EC,ECD=EC_U_ECS(7)_U_ECS(18)
"RTN","ECXSCLD",28,0)
 I '$D(ECD2) D
"RTN","ECXSCLD",29,0)
 .S $P(^ECX(728.44,EC,0),U,1,5)=ECD_U_ECS(7)_U_ECS(18),ECNT=ECNT+1,$P(^(0),U,6)=ECDF
"RTN","ECXSCLD",30,0)
 I $D(ECD2) D
"RTN","ECXSCLD",31,0)
 .S $P(ECD2,U,1,3)=ECD
"RTN","ECXSCLD",32,0)
 .I +ECS(7)'=+ECS2(2)!(+ECS(18)'=+ECS2(3)) S $P(ECD2,U,7)=""
"RTN","ECXSCLD",33,0)
 .S ^ECX(728.44,EC,0)=ECD2
"RTN","ECXSCLD",34,0)
 Q
"RTN","ECXSCLD",35,0)
 ;
"RTN","ECXSCLD",36,0)
PRINT ; print worksheet for updates
"RTN","ECXSCLD",37,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",38,0)
 W !!,"This option produces a worksheet of (A)ll DSS Clinic Stops or only the",!,"(U)nreviewed Clinic Stops that are awaiting approval.  Clinics that were"
"RTN","ECXSCLD",39,0)
 W !,"defined as ""inactive"" by MAS the last time the option ""Create DSS Clinic",!,"Stop Code File"" was run will be indicated with an ""*"".",!
"RTN","ECXSCLD",40,0)
 S DIR(0)="S^A:ALL;U:UNREVIEWED",DIR("A")="Enter ""A"" or ""U""",DIR("?",1)="Enter: ""A"" to print a worksheet of all DSS Clinic Stops,",DIR("?")="       ""U"" to print only the Clinic Stops that have not been approved."
"RTN","ECXSCLD",41,0)
 D ^DIR K DIR G END:$D(DIRUT) S ECALL=$E(Y)
"RTN","ECXSCLD",42,0)
 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","ECXSCLD",43,0)
 I $D(IO("Q")) K ZTSAVE S ZTDESC="DSS clinic stop code work sheet",ZTRTN="SPRINT^ECXSCLD",ZTSAVE("ECALL")="" D ^%ZTLOAD,HOME^%ZIS Q
"RTN","ECXSCLD",44,0)
 U IO
"RTN","ECXSCLD",45,0)
SPRINT ; queued entry to print work sheet
"RTN","ECXSCLD",46,0)
 S QFLG=0,$P(LN,"-",81)="",PG=0
"RTN","ECXSCLD",47,0)
 S ECDATE=$O(^ECX(728.44,"A1","")) I ECDATE S ECDATE=-ECDATE,ECDATE=$$FMTE^XLFDT(ECDATE,"5DF"),ECDATE=$TR(ECDATE," ","0")
"RTN","ECXSCLD",48,0)
 K ^TMP("EC",$J) F J=0:0 S J=$O(^ECX(728.44,J)) Q:'J  I $D(^ECX(728.44,J,0)),$S(ECALL="A":1,1:$P(^(0),U,7)="") S ECSD=^(0) I $D(^SC(J,0)) S ECSC=$P(^(0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",49,0)
 D HEAD S ECSC="" I $O(^TMP("EC",$J,ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! G END
"RTN","ECXSCLD",50,0)
 F J=1:1 S ECSC=$O(^TMP("EC",$J,ECSC)) Q:ECSC=""  S ECD=^(ECSC) D SHOWEM Q:QFLG
"RTN","ECXSCLD",51,0)
 I $E(IOST)="C",'QFLG D SS
"RTN","ECXSCLD",52,0)
 K ^TMP("EC",$J),J,ECSC,ECSD,ECDATE,QFLG,PG,LN,SS
"RTN","ECXSCLD",53,0)
 W:$Y @IOF D ^%ZISC S ZTREQ="@"
"RTN","ECXSCLD",54,0)
 Q
"RTN","ECXSCLD",55,0)
 ;
"RTN","ECXSCLD",56,0)
HEAD ; header for worksheet
"RTN","ECXSCLD",57,0)
 D SS Q:QFLG
"RTN","ECXSCLD",58,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"WORKSHEET FOR DSS CLINIC STOPS",?72,"Page: ",PG
"RTN","ECXSCLD",59,0)
 I ECDATE]"" W !,"(last reviewed on ",ECDATE,")"
"RTN","ECXSCLD",60,0)
 E  W !,"(NEVER REVIEWED)"
"RTN","ECXSCLD",61,0)
 W !
"RTN","ECXSCLD",62,0)
 W !!,?1,"CLINIC",?33,"STOP",?40,"CREDIT",?49,"DSS",?56,"DSS",?65,"ACTION",?73,"NAT'L"
"RTN","ECXSCLD",63,0)
 W !,?33,"CODE",?40,"STOP",?49,"STOP",?56,"CREDIT",?73,"CODE",!,?1,"(* - currently inactive)",?40,"CODE",?49,"CODE",?56,"CODE",!,LN Q
"RTN","ECXSCLD",64,0)
 ;
"RTN","ECXSCLD",65,0)
SHOWEM ; list clinics for worksheet
"RTN","ECXSCLD",66,0)
 I $Y+4>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD",67,0)
 W !!,$E(ECSC,1,30) W:$P(ECD,U,9)]"" "*" F J=1:1:5 W ?$P("33,40,49,56,68",",",J),$S($P(ECD,U,J):$P(ECD,U,J),J<3:"",1:"_____")
"RTN","ECXSCLD",68,0)
 S ECN=$P($G(^ECX(728.441,+$P(ECD,U,7),0)),U) W ?73,$S(ECN]"":ECN,1:"____")
"RTN","ECXSCLD",69,0)
 Q
"RTN","ECXSCLD",70,0)
SS ;SCROLL STOPS
"RTN","ECXSCLD",71,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXSCLD",72,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXSCLD",73,0)
 Q
"RTN","ECXSCLD",74,0)
 ;
"RTN","ECXSCLD",75,0)
EDIT ; put in DSS stopcodes and which one to send
"RTN","ECXSCLD",76,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",77,0)
 W ! S DIC=728.44,DIC(0)="QEAMZ" D ^DIC G END:Y<0 W !,"STOP CODE : ",$P(Y(0),U,2),!,"CREDIT STOP CODE : ",$P(Y(0),U,3)
"RTN","ECXSCLD",78,0)
 S DIE=DIC,DA=+Y,DR="3;4;5//1;S:X'=4 Y=6;7;6///"_DT_";8" D ^DIE S:$P(^ECX(728.44,DA,0),U,6)'=4 $P(^(0),U,8)="" S $P(^(0),U,7)="" K DIC,DIE,DA G EDIT
"RTN","ECXSCLD",79,0)
 ;
"RTN","ECXSCLD",80,0)
APPROVE ; approve current DSS Stop and Credit Stop codes
"RTN","ECXSCLD",81,0)
 W !!,"This option allows you to mark the current clinic entries in the CLINICS AND",!,"STOP CODES file (#728.44) as ""reviewed"".  Those entries will then be omitted"
"RTN","ECXSCLD",82,0)
 W !,"from the list printed from the ""Clinic and DSS Stop Codes Print"" when you",!,"choose to print only ""unreviewed"" clinics.",!
"RTN","ECXSCLD",83,0)
 K DIR S DIR(0)="Y",DIR("A",1)="Are you ready to approve the reviewed information provided by the",DIR("A")="""Clinic and DSS Stop Codes Print""",DIR("B")="NO"
"RTN","ECXSCLD",84,0)
 S DIR("?",1)="   Enter:"
"RTN","ECXSCLD",85,0)
 S DIR("?",2)="     ""YES"" if you concur with the ""Clinic and DSS Stop Codes Print"","
"RTN","ECXSCLD",86,0)
 S DIR("?",3)="     ""NO"" or <RET> if you do not want to approve the current information,"
"RTN","ECXSCLD",87,0)
 S DIR("?")="     ""^"" to exit option."
"RTN","ECXSCLD",88,0)
 D ^DIR K DIR I 'Y!($D(DIRUT)) G END
"RTN","ECXSCLD",89,0)
 W ! S ZTRTN="APPLOOP^ECXSCLD",ZTIO="",ZTDESC="Approve DSS stop codes for clinic extract" D ^%ZTLOAD W !!,"...approval queued" G END
"RTN","ECXSCLD",90,0)
 ;
"RTN","ECXSCLD",91,0)
APPLOOP ; queued entry to approve action codes
"RTN","ECXSCLD",92,0)
 F EC=0:0 S EC=$O(^ECX(728.44,EC)) Q:'EC  I $D(^(EC,0)) S DA=EC,DIE="^ECX(728.44,",DR="6///"_DT D ^DIE
"RTN","ECXSCLD",93,0)
 S ZTREQ="@" G END
"RTN","ECXSCLD",94,0)
END K X,Y,DA,DR,DIC,DIE,QFLG,PG,LN
"RTN","ECXSCLD",95,0)
 Q
"RTN","ECXSCLD",96,0)
 ;
"RTN","ECXSCLD",97,0)
LOOK ;queued entry to check for new clinics
"RTN","ECXSCLD",98,0)
 S ECD=$E(DT,1,5)-1-($E(DT,4,5)="01"*8800),ECD0=ECD_"00",ECXMISS=10,ECGRP="SCX" K ^TMP("ECXS",$J)
"RTN","ECXSCLD",99,0)
 F EC=0:0 S EC=$O(^SC(EC)) Q:'EC  I $D(^(EC,0)),$P(^(0),U,3)="C",'$D(^ECX(728.44,EC)) S DAT=$G(^SC(EC,"I")) D
"RTN","ECXSCLD",100,0)
 .S ID=+DAT,RD=$P(DAT,U,2) I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCLD",101,0)
 .S ^TMP("ECXS",$J,ECXMISS,0)=$J(EC,6)_"    "_$$LJ^XLFSTR($P(^SC(EC,0),U),40),ECXMISS=ECXMISS+1
"RTN","ECXSCLD",102,0)
 D ^ECXSCX1
"RTN","ECXSCLD",103,0)
 Q
"RTN","ECXSCNS")
0^39^B6917870
"RTN","ECXSCNS",1,0)
ECXSCNS ;ALB/JAP,BIR/DMA,PTD-No Show Clinic Extract ; [ 11/22/96  5:48 PM ]
"RTN","ECXSCNS",2,0)
 ;;3.0;DSS EXTRACTS;**11,8**;Dec 22, 1997
"RTN","ECXSCNS",3,0)
BEG ;entry point from option
"RTN","ECXSCNS",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSCNS",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSCNS",6,0)
 Q
"RTN","ECXSCNS",7,0)
 ;
"RTN","ECXSCNS",8,0)
START ;start package specific extract
"RTN","ECXSCNS",9,0)
 N QFLG
"RTN","ECXSCNS",10,0)
 S QFLG=0
"RTN","ECXSCNS",11,0)
 S ECED=ECED+.3
"RTN","ECXSCNS",12,0)
 S SC=0
"RTN","ECXSCNS",13,0)
 F  S SC=$O(^SC(SC)) Q:('SC)!(QFLG)  I $D(^(SC,0)) S EC=^(0) I $P(EC,U,3)="C" D  Q:QFLG
"RTN","ECXSCNS",14,0)
 .S SU=$P(EC,U,15)
"RTN","ECXSCNS",15,0)
 .D FEEDER^ECXSCX1(SC,ECSD1,.ECXP1,.ECXP2,.ECXP3,.ECXSEND)
"RTN","ECXSCNS",16,0)
 .Q:ECXSEND=6
"RTN","ECXSCNS",17,0)
 .S ECXDSS=ECXP1_ECXP2,ECD=ECSD1
"RTN","ECXSCNS",18,0)
 .F  S ECD=$O(^SC(SC,"S",ECD)) Q:'ECD  Q:ECD>ECED  D  Q:QFLG
"RTN","ECXSCNS",19,0)
 ..S ECDA=0
"RTN","ECXSCNS",20,0)
 ..F  S ECDA=$O(^SC(SC,"S",ECD,1,ECDA)) Q:'ECDA  I $D(^(ECDA,0)),$S('$D(^("C")):1,1:^("C")="") D
"RTN","ECXSCNS",21,0)
 ...S EC=^SC(SC,"S",ECD,1,ECDA,0),DFN=$P(EC,U)
"RTN","ECXSCNS",22,0)
 ...I $D(^DPT(+DFN,0)) S EC1=^(0) D INP
"RTN","ECXSCNS",23,0)
 ...;log no shows only for outpatients
"RTN","ECXSCNS",24,0)
 ...I ECA=1 D
"RTN","ECXSCNS",25,0)
 ....S DOB=$$ECXDOB^ECXUTL($P(EC1,U,3)),VET=$P($G(^("VET")),U),RACE=$P($G(^DIC(10,+$P(EC1,U,6),0)),U,2),ELG=$P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),U,9) I ELG S ELG=$C(ELG+64)
"RTN","ECXSCNS",26,0)
 ....I $D(^DPT(DFN,"S",ECD,0)),$P(^(0),U)=SC,$P(^(0),U,2)]"",$P(^(0),U,2)["N"
"RTN","ECXSCNS",27,0)
 ....D FILE
"RTN","ECXSCNS",28,0)
 Q
"RTN","ECXSCNS",29,0)
 ;
"RTN","ECXSCNS",30,0)
FILE ;file record
"RTN","ECXSCNS",31,0)
 ;node0
"RTN","ECXSCNS",32,0)
 ;fac^dfn^ssn^name^in/out^day^^mov #^treat spec^dob^elig^vet^time^primary care team^primary care provider^provider^race^dss identifier
"RTN","ECXSCNS",33,0)
 ;node1
"RTN","ECXSCNS",34,0)
 ;mpi^dss dept^pc provider npi^provider npi^
"RTN","ECXSCNS",35,0)
 N DA,DIK
"RTN","ECXSCNS",36,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSCNS",37,0)
 S ECODE=EC7_U_EC23
"RTN","ECXSCNS",38,0)
 S ECODE=ECODE_U_SU_U_DFN_U_$P(EC1,U,9)_U_$E($P($P(EC1,U),",")_"    ",1,4)_U_ECA_U_$$ECXDATE^ECXUTL(ECD,ECXYM)
"RTN","ECXSCNS",39,0)
 S ECODE=ECODE_U_U_ECMN_U_ECTS_U_DOB_U_ELG_U_VET_U_$$ECXTIME^ECXUTL(ECD)_U_ECPTTM_U_ECPTPR_U_U_RACE_U_ECXDSS
"RTN","ECXSCNS",40,0)
 S ECODE1=U_U_U
"RTN","ECXSCNS",41,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXSCNS",42,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSCNS",43,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSCNS",44,0)
 Q
"RTN","ECXSCNS",45,0)
 ;
"RTN","ECXSCNS",46,0)
INP ;Determine in/outpatient status, movement number, primary care team and provider.
"RTN","ECXSCNS",47,0)
 N X
"RTN","ECXSCNS",48,0)
 S X=$$INP^ECXUTL2(DFN,ECD),ECA=$P(X,U,1),ECMN=$P(X,U,2),ECTS=$P(X,U,3)
"RTN","ECXSCNS",49,0)
 S X=$$PRIMARY^ECXUTL2(DFN,ECD),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2)
"RTN","ECXSCNS",50,0)
 Q
"RTN","ECXSCNS",51,0)
 ;
"RTN","ECXSCNS",52,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSCNS",53,0)
 S ECHEAD="NOS"
"RTN","ECXSCNS",54,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCNS",55,0)
 Q
"RTN","ECXSCNS",56,0)
 ;
"RTN","ECXSCNS",57,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSCNS",58,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXSCX")
0^38^B62769986
"RTN","ECXSCX",1,0)
ECXSCX ;ALB/JAP,BIR/DMA,CML,PTD-Clinic Extract ; 02/06/97 10:24 [ 03/26/97  2:10 PM ]
"RTN","ECXSCX",2,0)
 ;;3.0;DSS EXTRACTS;**1,3,11,8**;Dec 22, 1997
"RTN","ECXSCX",3,0)
BEG ;entry point from option
"RTN","ECXSCX",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSCX",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSCX",6,0)
 Q
"RTN","ECXSCX",7,0)
 ;
"RTN","ECXSCX",8,0)
START ;entry point
"RTN","ECXSCX",9,0)
 N QFLG
"RTN","ECXSCX",10,0)
 K ^TMP("ECXS",$J) S ECXMISS=10,ECED=ECED+.3 S SC=0,QFLG=0
"RTN","ECXSCX",11,0)
 ;scheduled appts. and appended ekgs: loop through the file (#44)
"RTN","ECXSCX",12,0)
 F  S SC=$O(^SC(SC)) Q:('SC)!(QFLG)  I $D(^(SC,0)) S EC=^(0) I $P(EC,U,3)="C" S ECSU=$P(EC,U,15) S:'ECSU ECSU=1 D FEEDER^ECXSCX1(SC,ECSD1,.P1,.P2,.P3,.ECST) I ECST'=6 S ECD=ECSD1 D  Q:QFLG
"RTN","ECXSCX",13,0)
 .F  S ECD=$O(^SC(SC,"S",ECD)) Q:'ECD  Q:ECD>ECED  Q:QFLG  S ECDA=0 F  S ECDA=$O(^SC(SC,"S",ECD,1,ECDA)) Q:'ECDA  I $D(^(ECDA,0)) D  Q:QFLG
"RTN","ECXSCX",14,0)
 ..;for each patient appointment in the date range (skip cancellations), examine the APPOINTMENT multiple in the PATIENT file (#2)
"RTN","ECXSCX",15,0)
 ..I $S('$D(^SC(SC,"S",ECD,1,ECDA,"C")):1,1:$P(^("C"),U,3)]"") S PTADT=^(0),DFN=$P(PTADT,U) I $D(^DPT(+DFN,0)),$P(PTADT,U,9)="",$P($G(^DPT(DFN,"S",ECD,0)),U,2)'["C" D
"RTN","ECXSCX",16,0)
 ...D PAT,AOIRPOW^ECXUTL(DFN,.ECXAIP)
"RTN","ECXSCX",17,0)
 ...S ECL=$P(PTADT,U,2),ECL=$$RJ^XLFSTR(ECL,3,0),ECOB=$G(^SC(SC,"S",ECD,1,ECDA,"OB"))]""
"RTN","ECXSCX",18,0)
 ...;don't continue with record creation if the clinic appointment can't be found in subfile 2.98
"RTN","ECXSCX",19,0)
 ...Q:'$D(^DPT(DFN,"S",ECD,0))  Q:$P(^DPT(DFN,"S",ECD,0),U)'=SC
"RTN","ECXSCX",20,0)
 ...K EC2 S EC2=^DPT(DFN,"S",ECD,0) S ECN=$S($P(EC2,U,2)="N":"N",$P(EC2,U,2)="NA":"N",$P(EC2,U,2)="NT":"Q",1:"0")
"RTN","ECXSCX",21,0)
 ...S ECIEN=$P(EC2,U,20),ECEKG=$P(EC2,U,5)
"RTN","ECXSCX",22,0)
 ...I ECST'=3 S ECFD=P1_P2_ECL_P3_ECN,ECO1=ECO1_U_ECFD_U_ECOB_U_SC D API,FILE
"RTN","ECXSCX",23,0)
 ...I ECST=3 S ECFD=P1_"000"_ECL_P3_ECN,ECO1=ECO1_U_ECFD_U_ECOB_U_SC D API,FILE
"RTN","ECXSCX",24,0)
 ...I ECST=3 S ECFD=P2_"000"_ECL_P3_ECN,ECO1=ECO1_U_ECFD_U_ECOB_U_SC D API,FILE
"RTN","ECXSCX",25,0)
 ...;check for appended visits for EKG (107); if regular appt. is a no-show, append is a no-show
"RTN","ECXSCX",26,0)
 ...Q:'ECEKG  D
"RTN","ECXSCX",27,0)
 ....S $P(ECODE,U,7,9)="1070000280000"_ECN_U_U
"RTN","ECXSCX",28,0)
 ....S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSCX",29,0)
 ....S $P(ECODE,U,1)=EC7
"RTN","ECXSCX",30,0)
 ....D FILE2
"RTN","ECXSCX",31,0)
 ;Dispositions, stand-alones, and appended lab and x-ray: loop through the file (#409.68) for date range
"RTN","ECXSCX",32,0)
 S ECD=ECSD1
"RTN","ECXSCX",33,0)
 F  S ECD=$O(^SCE("B",ECD)) Q:'ECD!(ECD>ECED)  S ECIEN=0 D  Q:QFLG
"RTN","ECXSCX",34,0)
 .F  S ECIEN=$O(^SCE("B",ECD,ECIEN)) Q:'ECIEN  D  Q:QFLG
"RTN","ECXSCX",35,0)
 ..;quit if no outpatient encounter zero node
"RTN","ECXSCX",36,0)
 ..Q:'$D(^SCE(ECIEN,0))
"RTN","ECXSCX",37,0)
 ..;fd=1>x-ray or lab record, fd=2>disposition, fd=0>stand-alone visit
"RTN","ECXSCX",38,0)
 ..S FD=0,NCNTR=^SCE(ECIEN,0),STOP=$P($G(^DIC(40.7,+$P(NCNTR,U,3),0)),U,2)
"RTN","ECXSCX",39,0)
 ..S ENELG=$P($G(^DIC(8,+$P(NCNTR,U,13),0)),U,9) I ENELG S ENELG=$C(ENELG+64)
"RTN","ECXSCX",40,0)
 ..;quit if no clinic stop code for encounter
"RTN","ECXSCX",41,0)
 ..Q:'STOP
"RTN","ECXSCX",42,0)
 ..;clinic stop code equals 105 (x-ray) or 108 (lab)
"RTN","ECXSCX",43,0)
 ..I (STOP=105)!(STOP=108) S FD=1 D BLD Q
"RTN","ECXSCX",44,0)
 ..;quit if encounter not stop code addition or disposition
"RTN","ECXSCX",45,0)
 ..I ($P(NCNTR,U,8)'=2),($P(NCNTR,U,8)'=3) Q
"RTN","ECXSCX",46,0)
 ..;originating process type equals disposition
"RTN","ECXSCX",47,0)
 ..I $P(NCNTR,U,8)=3 S FD=2 D BLD Q
"RTN","ECXSCX",48,0)
 ..;else originating process type equals stop code addition (stand-alone)
"RTN","ECXSCX",49,0)
 ..;quit if there is a parent encounter pointer.
"RTN","ECXSCX",50,0)
 ..Q:$P($G(NCNTR),U,6)
"RTN","ECXSCX",51,0)
 ..D BLD
"RTN","ECXSCX",52,0)
 ;send missing clinic msg if needed
"RTN","ECXSCX",53,0)
 D:$D(^TMP("ECXS",$J)) EN^ECXSCX1
"RTN","ECXSCX",54,0)
 K EC,EC1,EC2,ECA,ECCPT,ECCSC,ECD,ECDA,ECEKG,ECFD,ECICD,ECIEN,ECL,ECMN,ECN,ECO1,ECO2,ECOB,ECODE,ECPROV,ECPTPR,ECPTTM,ECREC,ECSC,ECST,ECSU,ECTS,ECVAL,ECVIS
"RTN","ECXSCX",55,0)
 K C,CPT,DFN,ELIG,P1,P11,P2,P3,PTADT,SC,VAERR,VAIP,SEX,ADDR,STATE,CNTY,ENELG,PAYOR,SAI,ENR,MST,MSTEI
"RTN","ECXSCX",56,0)
 Q
"RTN","ECXSCX",57,0)
 ;
"RTN","ECXSCX",58,0)
BLD ;build record from outpatient encounter
"RTN","ECXSCX",59,0)
 S DFN=+$P(NCNTR,U,2),LOC=$P(NCNTR,U,4),ECSU=1 S:LOC ECSU=$P(^SC(LOC,0),U,15)
"RTN","ECXSCX",60,0)
 Q:'$D(^DPT(DFN,0))
"RTN","ECXSCX",61,0)
 D PAT,AOIRPOW^ECXUTL(DFN,.ECXAIP)
"RTN","ECXSCX",62,0)
 S P1=$$RJ^XLFSTR(STOP,3,0),P2="000",P3="0000",ECST=1
"RTN","ECXSCX",63,0)
 ;for x-ray and lab
"RTN","ECXSCX",64,0)
 I FD=1 S ECO1=ECO1_U_P1_P2_"02800000"_U_U D API,FILE Q
"RTN","ECXSCX",65,0)
 ;for dispositions
"RTN","ECXSCX",66,0)
 I FD=2 S ECO1=ECO1_U_P1_"47906000000"_U_U D API,FILE Q
"RTN","ECXSCX",67,0)
 ;for stand-alone visits
"RTN","ECXSCX",68,0)
 I LOC,$D(^SC(LOC,0)) S SC=LOC,EC=^(0) D FEEDER^ECXSCX1(SC,ECD,.P1,.P2,.P3,.ECST)
"RTN","ECXSCX",69,0)
 I ECST'=6 S ECO1=ECO1_U_P1_P2_"029"_P3_"0"_U_U_SC D API,FILE
"RTN","ECXSCX",70,0)
 Q
"RTN","ECXSCX",71,0)
 ;
"RTN","ECXSCX",72,0)
FILE ;finish record setup
"RTN","ECXSCX",73,0)
 ;node0
"RTN","ECXSCX",74,0)
 ;facility^dfn^ssn^name^in/out status^day^feeder key^overbook^sc^mov #^treat spec^time^primary care team^
"RTN","ECXSCX",75,0)
 ;primary care provider^provider^CPT code^ICD-9 code^dob^eligibility^vet^race^
"RTN","ECXSCX",76,0)
 ;ao status^ao visit^ir statusir visit^pow status^pow location^provider person class
"RTN","ECXSCX",77,0)
 ;node1
"RTN","ECXSCX",78,0)
 ;mpi^dss dept^sex^zip+4^pc provider npi^provider npi^encounter elig^mst status^mst indicator^
"RTN","ECXSCX",79,0)
 ;cpt2^cpt3^cpt4^cpt5^cpt6^cpt7^cpt8^cpt9^cpt10^cpt11^sharing payor^sharing insurance^enr location^state^county
"RTN","ECXSCX",80,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSCX",81,0)
 S ECODE=EC7_U_EC23
"RTN","ECXSCX",82,0)
 S ECODE=ECODE_U_ECO1
"RTN","ECXSCX",83,0)
 S $P(ECODE,U,8)=ECA,ECODE=ECODE_U_ECMN_U_ECTS_U_$$ECXTIME^ECXUTL(ECD)_U_ECPTTM_U_ECPTPR_U_ECPROV_U_ECCPT_U_ECICD
"RTN","ECXSCX",84,0)
 S ECODE=ECODE_U_$$ECXDOB^ECXUTL(DOB)_U_ELIG_U_VET_U_RACE
"RTN","ECXSCX",85,0)
 S ECODE=ECODE_U_ECXAIP("AO")_U_ECVAO_U_ECXAIP("IR")_U_ECVIR_U_ECXAIP("POW")_U_ECXAIP("POWL")_U_ECXPRPC
"RTN","ECXSCX",86,0)
 S CPT="" F C=2:1:11 S CPT=CPT_CPT(C) I C<11 S CPT=CPT_U
"RTN","ECXSCX",87,0)
 S ECODE1=U_U_SEX_U_ZIP_U_U_U_ENELG_U_MST_U_MSTEI_U_CPT_U_PAYOR_U_SAI_U_ENR_U_STATE_U_CNTY
"RTN","ECXSCX",88,0)
 D FILE2
"RTN","ECXSCX",89,0)
 Q
"RTN","ECXSCX",90,0)
 ;
"RTN","ECXSCX",91,0)
FILE2 ;file record
"RTN","ECXSCX",92,0)
 N DA,DIK
"RTN","ECXSCX",93,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXSCX",94,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSCX",95,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSCX",96,0)
 Q
"RTN","ECXSCX",97,0)
 ;
"RTN","ECXSCX",98,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSCX",99,0)
 S ECHEAD="CLI"
"RTN","ECXSCX",100,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCX",101,0)
 Q
"RTN","ECXSCX",102,0)
 ;
"RTN","ECXSCX",103,0)
PAT ;patient file data
"RTN","ECXSCX",104,0)
 N VAPA
"RTN","ECXSCX",105,0)
 S EC1=^DPT(DFN,0)
"RTN","ECXSCX",106,0)
 S ECO1=ECSU_U_DFN_U_$P(EC1,U,9)_U_$E($P($P(EC1,U),",")_"    ",1,4)_U_U_$$ECXDATE^ECXUTL(ECD,ECXYM)
"RTN","ECXSCX",107,0)
 S ELIG=$P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),U,9) I ELIG S ELIG=$C(ELIG+64)
"RTN","ECXSCX",108,0)
 S SEX=$P(EC1,U,2),DOB=$P(EC1,U,3),VET=$P($G(^DPT(DFN,"VET")),U),RACE=$P($G(^DIC(10,+$P(EC1,U,6),0)),U,2)
"RTN","ECXSCX",109,0)
 D ADD^VADPT
"RTN","ECXSCX",110,0)
 S STATE=VAPA(5),CNTY=VAPA(7),ZIP=$P(VAPA(11),U,2)
"RTN","ECXSCX",111,0)
 S STATE=$P($G(^DIC(5,+STATE,0)),U,3),CNTY=$P($G(^DIC(5,+STATE,1,+CNTY,0)),U,3)
"RTN","ECXSCX",112,0)
 S ENR=$P($G(^DPT(DFN,"ENR")),U,2) I ENR D
"RTN","ECXSCX",113,0)
 .S DIC="^DIC(4,",DA=ENR,DR="99;",DIQ(0)="I",DIQ="ENR"
"RTN","ECXSCX",114,0)
 .D EN^DIQ1 S ENR=ENR(4,ENR,99,"I")
"RTN","ECXSCX",115,0)
 .K DIC,DIQ,DA,DR
"RTN","ECXSCX",116,0)
 S (MST,MSTEI)=""
"RTN","ECXSCX",117,0)
 ;get visn 19 sharing agreement data
"RTN","ECXSCX",118,0)
 D VISN19^ECXUTL2(DFN,.PAYOR,.SAI)
"RTN","ECXSCX",119,0)
 Q
"RTN","ECXSCX",120,0)
API ;call external utilities
"RTN","ECXSCX",121,0)
 ;determine in/out status and primary care
"RTN","ECXSCX",122,0)
 N X,PROV
"RTN","ECXSCX",123,0)
 F C=2:1:11 S CPT(C)=""
"RTN","ECXSCX",124,0)
 S X=$$INP^ECXUTL2(DFN,ECD),ECA=$P(X,U,1),ECMN=$P(X,U,2),ECTS=$P(X,U,3)
"RTN","ECXSCX",125,0)
 S X=$$PRIMARY^ECXUTL2(DFN,ECD),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2)
"RTN","ECXSCX",126,0)
 ;call pce api for cpt code, diagnosis/provider designated as primary
"RTN","ECXSCX",127,0)
 S ENELG="",ECPROV="",ECXPRPC="",ECCPT=99199,ECICD=799.9,ECVAO="",ECVIR=""
"RTN","ECXSCX",128,0)
 I 'ECIEN Q
"RTN","ECXSCX",129,0)
 I ECIEN D
"RTN","ECXSCX",130,0)
 .S ECVIS=+$P($G(^SCE(ECIEN,0)),U,5)
"RTN","ECXSCX",131,0)
 .S ENELG=+$P($G(^SCE(ECIEN,0)),U,13),ENELG=$P($G(^DIC(8,ENELG,0)),U,9)
"RTN","ECXSCX",132,0)
 .I ENELG S ENELG=$C(ENELG+64)
"RTN","ECXSCX",133,0)
 I 'ECVIS Q
"RTN","ECXSCX",134,0)
 I ECVIS D ENCEVENT^PXAPI(ECVIS)
"RTN","ECXSCX",135,0)
 I $O(^TMP("PXKENC",$J,ECVIS,""))']"" Q
"RTN","ECXSCX",136,0)
 ;get icd9 code; else use 799.9
"RTN","ECXSCX",137,0)
 I $O(^TMP("PXKENC",$J,ECVIS,"POV",0)) D
"RTN","ECXSCX",138,0)
 .S (ECREC,ECVAL)=0
"RTN","ECXSCX",139,0)
 .F  S ECREC=$O(^TMP("PXKENC",$J,ECVIS,"POV",ECREC)) Q:'ECREC  S:($P(^TMP("PXKENC",$J,ECVIS,"POV",ECREC,0),U,12)="P") ECVAL=+^(0) Q:$P(^TMP("PXKENC",$J,ECVIS,"POV",ECREC,0),U,12)="P"
"RTN","ECXSCX",140,0)
 .I 'ECVAL S ECREC=$O(^TMP("PXKENC",$J,ECVIS,"POV",0)) I ECREC S ECVAL=+^(ECREC,0)
"RTN","ECXSCX",141,0)
 .I ECVAL S ECICD=$P($G(^ICD9(ECVAL,0)),U)
"RTN","ECXSCX",142,0)
 ;get first provider designated as primary; if no primary, then get first physician provider; if no physician, then get first provider; if no "prv" array nodes, use null.
"RTN","ECXSCX",143,0)
 I $O(^TMP("PXKENC",$J,ECVIS,"PRV",0)) D
"RTN","ECXSCX",144,0)
 .S (ECREC,ECVAL)=0
"RTN","ECXSCX",145,0)
 .F  S ECREC=$O(^TMP("PXKENC",$J,ECVIS,"PRV",ECREC)) Q:'ECREC  S:($P(^TMP("PXKENC",$J,ECVIS,"PRV",ECREC,0),U,4)="P") ECVAL=+^(0) Q:$P(^TMP("PXKENC",$J,ECVIS,"PRV",ECREC,0),U,4)="P"
"RTN","ECXSCX",146,0)
 .I ECVAL S ECPROV=ECVAL,ECXPRPC=$$PRVCLASS^ECXUTL(ECPROV,ECD)
"RTN","ECXSCX",147,0)
 .I 'ECVAL S ECREC=0 D
"RTN","ECXSCX",148,0)
 ..F  S ECREC=$O(^TMP("PXKENC",$J,ECVIS,"PRV",ECREC)) Q:'ECREC  D  Q:ECVAL
"RTN","ECXSCX",149,0)
 ...S ECVAL=+^TMP("PXKENC",$J,ECVIS,"PRV",ECREC,0) Q:'ECVAL
"RTN","ECXSCX",150,0)
 ...S ECXPRPC=$$PRVCLASS^ECXUTL(ECVAL,ECD) Q:ECXPRPC=""
"RTN","ECXSCX",151,0)
 ...S NUM=$E(ECXPRPC,2,7) S:(NUM<110000)!(NUM>119999) ECVAL=0,ECXPRPC=""
"RTN","ECXSCX",152,0)
 ...I ECVAL S ECPROV=ECVAL
"RTN","ECXSCX",153,0)
 .I 'ECVAL D
"RTN","ECXSCX",154,0)
 ..S ECREC=$O(^TMP("PXKENC",$J,ECVIS,"PRV",0)) Q:'ECREC  S ECVAL=+^(ECREC,0)
"RTN","ECXSCX",155,0)
 ..I ECVAL S ECPROV=ECVAL,ECXPRPC=$$PRVCLASS^ECXUTL(ECPROV,ECD)
"RTN","ECXSCX",156,0)
 .S:ECPROV]"" ECPROV="2"_ECPROV
"RTN","ECXSCX",157,0)
 ;get cpt code for ien
"RTN","ECXSCX",158,0)
 I $O(^TMP("PXKENC",$J,ECVIS,"CPT",0)) D
"RTN","ECXSCX",159,0)
 .S (ECREC,ECVAL)=0
"RTN","ECXSCX",160,0)
 .;if there's a primary provider, get a cpt associated with that provider
"RTN","ECXSCX",161,0)
 .I ECPROV]"" D
"RTN","ECXSCX",162,0)
 ..S PROV=$E(ECPROV,2,99)
"RTN","ECXSCX",163,0)
 ..F  S ECREC=$O(^TMP("PXKENC",$J,ECVIS,"CPT",ECREC)) Q:'ECREC  D  Q:ECVAL
"RTN","ECXSCX",164,0)
 ...I $D(^TMP("PXKENC",$J,ECVIS,"CPT",ECREC,12)) S:$P(^(12),U,4)=PROV ECVAL=+^TMP("PXKENC",$J,ECVIS,"CPT",ECREC,0)
"RTN","ECXSCX",165,0)
 ...I ECVAL D
"RTN","ECXSCX",166,0)
 ....S ECCPT=$P($G(^ICPT(ECVAL,0)),U)
"RTN","ECXSCX",167,0)
 ...;get rid of the cpt record
"RTN","ECXSCX",168,0)
 ...K ^TMP("PXKENC",$J,ECVIS,"CPT",ECREC)
"RTN","ECXSCX",169,0)
 .I ECVAL=0 S ECREC=+$O(^TMP("PXKENC",$J,ECVIS,"CPT",0)) I ECREC S ECVAL=+^(ECREC,0)
"RTN","ECXSCX",170,0)
 .I ECVAL D
"RTN","ECXSCX",171,0)
 ..S ECCPT=$P($G(^ICPT(ECVAL,0)),U)
"RTN","ECXSCX",172,0)
 ..;get rid of the cpt record
"RTN","ECXSCX",173,0)
 ..K ^TMP("PXKENC",$J,ECVIS,"CPT",ECREC)
"RTN","ECXSCX",174,0)
 .;get remaining cpt codes
"RTN","ECXSCX",175,0)
 .S ECREC=0,C=2
"RTN","ECXSCX",176,0)
 .F  S ECREC=$O(^TMP("PXKENC",$J,ECVIS,"CPT",ECREC)) Q:'ECREC!(C>11)  D
"RTN","ECXSCX",177,0)
 ..S ECVAL=+^TMP("PXKENC",$J,ECVIS,"CPT",ECREC,0)
"RTN","ECXSCX",178,0)
 ..I ECVAL S CPT(C)=$P($G(^ICPT(ECVAL,0)),U),C=C+1
"RTN","ECXSCX",179,0)
 ;ao and ir
"RTN","ECXSCX",180,0)
 S (ECVAO,ECVIR)=""
"RTN","ECXSCX",181,0)
 I $D(^TMP("PXKENC",$J,ECVIS,"VST",ECVIS,800)) D
"RTN","ECXSCX",182,0)
 .S ECVAO=$P(^(800),U,2),ECVIR=$P(^(800),U,3)
"RTN","ECXSCX",183,0)
 .S:ECVAO="0" ECVAO="N" S:ECVIR=0 ECVIR="N"
"RTN","ECXSCX",184,0)
 .S:ECVAO="1" ECVAO="Y" S:ECVIR=1 ECVIR="Y"
"RTN","ECXSCX",185,0)
 Q
"RTN","ECXSCX",186,0)
 ;
"RTN","ECXSCX",187,0)
QUE ;entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSCX",188,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXSCX1")
0^76^B7246512
"RTN","ECXSCX1",1,0)
ECXSCX1 ;ALB/JAP,BIR/DMA-Clinic Extract Message ; 20 Mar 95 / 11:10 AM [ 12/03/96  1:32 PM ]
"RTN","ECXSCX1",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXSCX1",3,0)
EN ;entry point from ecxscx
"RTN","ECXSCX1",4,0)
 N ECX
"RTN","ECXSCX1",5,0)
 S ECX=$O(^TMP("ECXS",$J,0)) Q:ECX=""
"RTN","ECXSCX1",6,0)
 S XMSUB="MISSING CLINICS",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",7,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",8,0)
 F ECX=1:1:6 S ^TMP("ECXS",$J,ECX,0)=$P($T(MSG+ECX),";",3,300)
"RTN","ECXSCX1",9,0)
 S XMTEXT="^TMP(""ECXS"",$J," D ^XMD K ^TMP("ECXS",$J)
"RTN","ECXSCX1",10,0)
 Q
"RTN","ECXSCX1",11,0)
 ;
"RTN","ECXSCX1",12,0)
MSG ;Text for the leading lines of the missing clinic messages
"RTN","ECXSCX1",13,0)
 ;;The following clinics have not been entered into the CLINIC AND
"RTN","ECXSCX1",14,0)
 ;;STOP CODES file (#728.44).  If any listed clinic is currently
"RTN","ECXSCX1",15,0)
 ;;active, please use the options 'Create DSS Clinic Stop Code File'
"RTN","ECXSCX1",16,0)
 ;;and 'Enter/Edit DSS Stop Codes for Clinics' to update this file.
"RTN","ECXSCX1",17,0)
 ;; 
"RTN","ECXSCX1",18,0)
 ;
"RTN","ECXSCX1",19,0)
MISS ;load ^TMP for clinics missing from 728.44
"RTN","ECXSCX1",20,0)
 Q:'$O(^SC(SC,"S",ECSD1))  S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2) I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",21,0)
 ; no missing messages for inactive clinics
"RTN","ECXSCX1",22,0)
 I '$D(ECXMISS) S ECXMISS=10
"RTN","ECXSCX1",23,0)
 S ^TMP("ECXS",$J,ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)_ECSC_"/"_ECCSC,ECXMISS=ECXMISS+1
"RTN","ECXSCX1",24,0)
 Q
"RTN","ECXSCX1",25,0)
 ;
"RTN","ECXSCX1",26,0)
FEEDER(ECXSC,ECXSD,ECXP1,ECXP2,ECXP3,ECXSEND) ;get transmission style and feeder key variables
"RTN","ECXSCX1",27,0)
 ;feeder key is primary stop code_secondary stop code_length of appointment_national clinic code_noshow indicator
"RTN","ECXSCX1",28,0)
 ;   input
"RTN","ECXSCX1",29,0)
 ;   ECXSCX = ien of clinic in file #44 (required)
"RTN","ECXSCX1",30,0)
 ;   ECXSD  = start date of extract date range (required)
"RTN","ECXSCX1",31,0)
 ;   ECXP1,ECXP2,ECXP3,ECXSEND passed by reference (required)
"RTN","ECXSCX1",32,0)
 ;   output (passed-by-reference variables)
"RTN","ECXSCX1",33,0)
 ;   ECXP1  = primary stop code
"RTN","ECXSCX1",34,0)
 ;   ECXP2  = secondary stop code
"RTN","ECXSCX1",35,0)
 ;   ECXP3  = field #7 of file #728.44
"RTN","ECXSCX1",36,0)
 ;   ECXSEND = field #5 of file #728.44
"RTN","ECXSCX1",37,0)
 N ECSC,ECCSC,SC,ECSD1,ECXNC,ECXMISS
"RTN","ECXSCX1",38,0)
 S (ECXP1,ECXP2)="000",ECXP3="0000"
"RTN","ECXSCX1",39,0)
 S ECXSEND=1
"RTN","ECXSCX1",40,0)
 I '$D(^ECX(728.44,ECXSC,0)) D  Q
"RTN","ECXSCX1",41,0)
 .S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P(^(0),U,18)
"RTN","ECXSCX1",42,0)
 .S SC=ECXSC,ECSD1=ECXSD D MISS^ECXSCX1
"RTN","ECXSCX1",43,0)
 .I ECSC S ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2),ECXP1=$$RJ^XLFSTR(+ECXP1,3,0)
"RTN","ECXSCX1",44,0)
 S EC=$G(^ECX(728.44,ECXSC,0)) Q:EC=""
"RTN","ECXSCX1",45,0)
 S ECXSEND=$P(EC,U,6)
"RTN","ECXSCX1",46,0)
 Q:ECXSEND=6
"RTN","ECXSCX1",47,0)
 S ECSC=+$P(EC,U,4),ECCSC=+$P(EC,U,5)
"RTN","ECXSCX1",48,0)
 I 'ECSC S ECSC=+$P(EC,U,2),ECCSC=+$P(EC,U,3)
"RTN","ECXSCX1",49,0)
 I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXSCX1",50,0)
 I 'ECSC D
"RTN","ECXSCX1",51,0)
 .S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P($G(^(0)),U,18) I ECSC D
"RTN","ECXSCX1",52,0)
 ..S ECXP1=+$P($G(^DIC(40.7,ECSC,0)),U,2) S:ECCSC ECXP2=+$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXSCX1",53,0)
 ..S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXSCX1",54,0)
 ;for action code=1, secondary stop code is always "000"
"RTN","ECXSCX1",55,0)
 I ECXSEND=1 S ECXP2="000" Q
"RTN","ECXSCX1",56,0)
 ;action code of 2 or 3 should not be used, but continue to follow v2t11 logic
"RTN","ECXSCX1",57,0)
 I ECXSEND=2 S ECXP1=ECXP2,ECXP2="000" Q
"RTN","ECXSCX1",58,0)
 I ECXSEND=3 Q
"RTN","ECXSCX1",59,0)
 ;for action code=4, need to get national clinic code
"RTN","ECXSCX1",60,0)
 I ECXSEND=4 D
"RTN","ECXSCX1",61,0)
 .S ECXNC=+$P($G(^ECX(728.44,ECXSC,0)),U,8)
"RTN","ECXSCX1",62,0)
 .I ECXNC S ECXNC=$P($G(^ECX(728.441,ECXNC,0)),U),ECXP3=$$RJ^XLFSTR(ECXNC,4,0)
"RTN","ECXSCX1",63,0)
 Q
"RTN","ECXSETU1")
0^37^B27256178
"RTN","ECXSETU1",1,0)
ECXSETU1 ;BIR/DMA,CML,PTD-Get Movements and Treating Speciality for Setup ; [ 01/10/97  4:34 PM ]
"RTN","ECXSETU1",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXSETU1",3,0)
EN ;entry point
"RTN","ECXSETU1",4,0)
 ;get movements
"RTN","ECXSETU1",5,0)
 S ECFILE=727.821,ECRN=0,QFLG=0
"RTN","ECXSETU1",6,0)
 F DFN=0:0 S DFN=$O(^TMP($J,DFN)) Q:'DFN  F ECCA=0:0 S ECCA=$O(^TMP($J,DFN,ECCA)) Q:'ECCA  S ECM=$O(^DGPM("APMV",DFN,ECCA,ECD0)) I ECM S ECDA=$O(^(ECM,0)) I ECDA,ECDA'=ECCA,$D(^DGPM(+ECDA,0)) S EC=^(0),DFN=+$P(EC,U,3) D  Q:QFLG
"RTN","ECXSETU1",7,0)
 .Q:'$D(^DPT(DFN,0))  S D0=^DPT(DFN,0),ECDAT=ECED,ECTM=$E($P(ECDAT,".",2)_"000000",1,6),ECXYM=$$ECXYM^ECXUTL(ECDAT),ECMT=$P(EC,U,18),ECMT=$S(ECMT<22:ECMT,ECMT<25:4,ECMT=25:3,ECMT=26:2,1:ECMT)
"RTN","ECXSETU1",8,0)
 .;from absence becomes transfer, from auth to unauth becomes to unauth
"RTN","ECXSETU1",9,0)
 .;from unauth to auth becomes to auth
"RTN","ECXSETU1",10,0)
 .S WTO=$P(EC,U,6),WTO=$P($G(^DIC(42,+WTO,44)),U)
"RTN","ECXSETU1",11,0)
 .S ECCA=$P(EC,U,14),EC=^DGPM(ECCA,0),ECA=$E($P(EC,U),".")
"RTN","ECXSETU1",12,0)
 .;use admit as previous transfer
"RTN","ECXSETU1",13,0)
 .S W=$P(EC,U,6),FAC=$P($G(^DIC(42,+W,0)),U,11),W=$P($G(^DIC(42,+W,44)),U)
"RTN","ECXSETU1",14,0)
 .S ECODE=FAC_U_DFN_U_$P(D0,U,9)_U_$E($P($P(D0,U),",")_"    ",1,4)_"^3^"_$$ECXDATE^ECXUTL(ECD,ECXYM)_U
"RTN","ECXSETU1",15,0)
 .S ECA=$P($G(^DGPM(+$P(EC,U,14),0)),U)
"RTN","ECXSETU1",16,0)
 .S X1=ECD,X2=$P(EC,U) D ^%DTC S LOS=X
"RTN","ECXSETU1",17,0)
 .S ECODE=ECODE_U_$$ECXDATE^ECXUTL(ECA,ECXYM)_"^^"_ECDA_"^2^"_W_"^^"_LOS_"^^"_ECMT_U_ECTM_U_WTO_U_$$ECXTIME^ECXUTL(ECA)_"^^^"
"RTN","ECXSETU1",18,0)
 .;fac^dfn^ssn^name^in/out^day^^adm date^disc date^mov #^type^losing ward^treat spec ^los^attending physician^movement type^mov time^gaining ward^adm time
"RTN","ECXSETU1",19,0)
 .S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSETU1",20,0)
 .S ^ECX(ECFILE,EC7,0)=EC7_U_ECXYM_U_U_ECODE,ECRN=ECRN+1
"RTN","ECXSETU1",21,0)
 .S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSETU1",22,0)
 .I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSETU1",23,0)
 S ECLAST=$O(^ECX(ECFILE,999999999),-1),ECTOTAL=$P(^ECX(ECFILE,0),U,4)+ECRN,$P(^(0),U,3,4)=ECLAST_U_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXSETU1",24,0)
 I QFLG S ZTSTOP=1 Q
"RTN","ECXSETU1",25,0)
 ;
"RTN","ECXSETU1",26,0)
 ;get treating specialty
"RTN","ECXSETU1",27,0)
 S ECFILE=727.822,ECRN=0,QFLG=0
"RTN","ECXSETU1",28,0)
 F DFN=0:0 S DFN=$O(^TMP($J,DFN)) Q:'DFN  F ECCA=0:0 S ECCA=$O(^TMP($J,DFN,ECCA)) Q:'ECCA  S ECM=$O(^DGPM("ATS",DFN,ECCA,ECD0)) I ECM S EC=$O(^(ECM,0)),ECDA=+$O(^(+EC,0)) I $D(^DGPM(ECDA,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXSETU1",29,0)
 .Q:'$D(^DPT(DFN,0))  S D0=^(0),ECMT=$P(EC,U,18),ECDAT=ECED,ECTM=$E($P(ECDAT,".",2)_"000000",1,6),ECXYM=$$ECXYM^ECXUTL(ECDAT)
"RTN","ECXSETU1",30,0)
 .S ECA=^DGPM($P(EC,U,14),0),EC=ECA
"RTN","ECXSETU1",31,0)
 .S X1=ECD,(ECA,X2)=$P(EC,U) D ^%DTC S LOS=X
"RTN","ECXSETU1",32,0)
 .S ECTRT="" F ECDA=ECCA:1:ECCA+10 S EC=$G(^DGPM(ECDA,0)) I $P(EC,U,14)=ECCA,$P(EC,U,2)=6 S ECTRT=$P($G(^DIC(45.7,+$P(EC,U,9),0)),U,2) Q
"RTN","ECXSETU1",33,0)
 .;get treating specialty associated with admission
"RTN","ECXSETU1",34,0)
 .S ECODE=U_DFN_U_$P(D0,U,9)_U_$E($P($P(D0,U),",")_"    ",1,4)_"^3^"_$$ECXDATE^ECXUTL(ECD,ECXYM)_"^^"_$$ECXDATE^ECXUTL(ECA,ECXYM)_"^^"_ECDA_"^6^^"_ECTRT_U_LOS
"RTN","ECXSETU1",35,0)
 .S ECODE=ECODE_U_ECPRO_$P(EC,U,19)_U_ECMT_U_ECTM_U_$$ECXTIME^ECXUTL(+ECA)_"^^^^"
"RTN","ECXSETU1",36,0)
 .;fac^dfn^ssn^name^i/o^day^product^adm date^dis date^mov#^type^gaining ward^treat spec^duration^attending physician^movement type^trt time^adm time
"RTN","ECXSETU1",37,0)
 .S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSETU1",38,0)
 .S ^ECX(ECFILE,EC7,0)=EC7_U_ECXYM_U_U_ECODE,ECRN=ECRN+1
"RTN","ECXSETU1",39,0)
 .S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSETU1",40,0)
 .I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSETU1",41,0)
 S ECLAST=$O(^ECX(ECFILE,999999999),-1),ECTOTAL=$P(^ECX(ECFILE,0),U,4)+ECRN,$P(^(0),U,3,4)=ECLAST_U_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXSETU1",42,0)
 I QFLG S ZTSTOP=1 Q
"RTN","ECXSETU1",43,0)
 ;
"RTN","ECXSETU1",44,0)
LOAD ; into files 727.802, 727.808 and 727.818
"RTN","ECXSETU1",45,0)
 S ECCNT=0,ECVER=7
"RTN","ECXSETU1",46,0)
 I $$S^%ZTLOAD S ZTSTOP=1 K ^TMP($J) Q
"RTN","ECXSETU1",47,0)
 S ECFR=727.82,ECFILE=727.802,ECPACK="Admission (setup)",ECHEAD="ADM",ECGRP="ADMS",ECYM="" D MOVE
"RTN","ECXSETU1",48,0)
 I $$S^%ZTLOAD S ZTSTOP=1 K ^TMP($J) Q
"RTN","ECXSETU1",49,0)
 S ECFR=727.821,ECFILE=727.808,ECPACK="Movement (setup)",ECHEAD="MOV",ECGRP="MOVS",ECYM="" D MOVE
"RTN","ECXSETU1",50,0)
 I $$S^%ZTLOAD S ZTSTOP=1 K ^TMP($J) Q
"RTN","ECXSETU1",51,0)
 S ECFR=727.822,ECFILE=727.817,ECPACK="Treating specialty change (setup)",ECHEAD="TRT",ECGRP="TREAT",ECYM="" D MOVE
"RTN","ECXSETU1",52,0)
 S ^ECX(728,1,"S")=DT ;clear running flag set done date
"RTN","ECXSETU1",53,0)
 K XMY S Y=$$HTE^XLFDT($H)
"RTN","ECXSETU1",54,0)
 S XMDUZ="DSS SYSTEM",XMSUB="SETUP EXTRACT FOR DSS",XMY("G.DSS-ADMS@"_^XMB("NETNAME"))=""
"RTN","ECXSETU1",55,0)
 S ECM(1)="The DSS setup extract completed on "_$P(Y,"@")_" at "_$P(Y,"@",2),ECM(2)="A total of "_ECCNT_" extract file entries were created."
"RTN","ECXSETU1",56,0)
 S XMTEXT="ECM(" D ^XMD
"RTN","ECXSETU1",57,0)
 S ZTREQ="@" K ^TMP($J)
"RTN","ECXSETU1",58,0)
 Q
"RTN","ECXSETU1",59,0)
 ;
"RTN","ECXSETU1",60,0)
MOVE ;
"RTN","ECXSETU1",61,0)
 F  S ECYM=$O(^ECX(ECFR,"AM",ECYM)) Q:ECYM=""  D UP727 D
"RTN","ECXSETU1",62,0)
 .F EC0=0:0 S EC0=$O(^ECX(ECFR,"AM",ECYM,EC0)) Q:'EC0  S ECD=^ECX(ECFR,EC0,0),$P(ECD,U,3)=EC3 D
"RTN","ECXSETU1",63,0)
 ..S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSETU1",64,0)
 ..S ^ECX(ECFILE,EC7,0)=EC7_U_$P(ECD,U,2,200),ECRN=ECRN+1 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSETU1",65,0)
 ..S DIK="^ECX("_ECFR_",",DA=EC0 D ^DIK
"RTN","ECXSETU1",66,0)
 ..S ECCNT=ECCNT+1
"RTN","ECXSETU1",67,0)
 .S $P(^ECX(727,EC3,0),U,6)=ECRN
"RTN","ECXSETU1",68,0)
 .S ECLAST=$O(^ECX(ECFILE,999999999),-1),ECTOTAL=$P(^ECX(ECFILE,0),U,4)+ECRN,$P(^(0),U,3,4)=ECLAST_U_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXSETU1",69,0)
 Q
"RTN","ECXSETU1",70,0)
 ;
"RTN","ECXSETU1",71,0)
UP727 ;update file #727
"RTN","ECXSETU1",72,0)
 S EC=$P(^ECX(727,0),U,3)+1,$P(^(0),U,3,4)=EC_U_EC
"RTN","ECXSETU1",73,0)
 S ^ECX(727,EC,0)=EC_U_DT_U_ECPACK_U_ECED_U_ECED
"RTN","ECXSETU1",74,0)
 S ^ECX(727,EC,"HEAD")=ECHEAD
"RTN","ECXSETU1",75,0)
 S ^ECX(727,EC,"FILE")=ECFILE
"RTN","ECXSETU1",76,0)
 S ^ECX(727,EC,"GRP")=ECGRP,^ECX(727,EC,"DIV")=ECINST
"RTN","ECXSETU1",77,0)
 S DA=EC,DIK="^ECX(727," D IX^DIK K DA,DIK
"RTN","ECXSETU1",78,0)
 S ECRN=0,EC3=EC
"RTN","ECXSETU1",79,0)
 Q
"RTN","ECXSETUP")
0^36^B26132298
"RTN","ECXSETUP",1,0)
ECXSETUP ;ALB/JAP,BIR/DMA,CML,PTD-Generate Patient Population for a Given Day ; [ 11/25/96  11:26 AM ]
"RTN","ECXSETUP",2,0)
 ;;3.0;DSS EXTRACTS;**11,8**;Dec 22, 1997
"RTN","ECXSETUP",3,0)
EN ;entry point from option
"RTN","ECXSETUP",4,0)
 ;Pick a day, find everyone who was in the hospital on that day,
"RTN","ECXSETUP",5,0)
 ;find the corresponding admission and the last transfer and treating
"RTN","ECXSETUP",6,0)
 ;speciality change
"RTN","ECXSETUP",7,0)
 ;This routine should only be run once
"RTN","ECXSETUP",8,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXSETUP",9,0)
 I $P($G(^ECX(728,1,"S")),U,2)]"" W !,"The setup extract is already running.",! Q
"RTN","ECXSETUP",10,0)
 I $P($G(^ECX(728,1,"S")),U) W !,"The setup extract has already been run.",! Q
"RTN","ECXSETUP",11,0)
 W !!,"This option will extract the admission data and data for the last",!,"transfer and treating specialty change for all patients who",!,"were in the hospital on the day you select.",!!
"RTN","ECXSETUP",12,0)
 W !!,"NOTE - This will generate a snapshot of your inpatient population on the",!,"BEGINNING of the day you select, not the end of the day as MAS reports do.",!
"RTN","ECXSETUP",13,0)
 W "For example, for the inpatient setup extract if you choose October 1, 1994,",!,"the report will start at midnight at the beginning of the day."
"RTN","ECXSETUP",14,0)
 W "  For the MAS",!,"report, you would choose September 30, 1994.  The MAS report begins at midnight",!,"at the end of the day.",!!!
"RTN","ECXSETUP",15,0)
 S Y=$E(DT,1,3) S:'$E(DT,4) Y=Y-1 S ECDEX=$$FMTE^XLFDT(Y_"1001")
"RTN","ECXSETUP",16,0)
DATE S DIR(0)="D^::EXP",DIR("A")="Select the starting date ",DIR("B")=ECDEX D ^DIR K DIR G END:$D(DIRUT) S ECED=Y I Y>DT W !,"Date must be in the past",! G DATE
"RTN","ECXSETUP",17,0)
 S ECDEX=$$FMTE^XLFDT(Y)
"RTN","ECXSETUP",18,0)
 S ZTSAVE("ECED")="",ZTDESC="Find all inpatients on "_ECDEX,ZTIO="",ZTRTN="START^ECXSETUP" D ^%ZTLOAD
"RTN","ECXSETUP",19,0)
 I $D(ZTSK) W !,"Request queued as Task #",ZTSK,".",!
"RTN","ECXSETUP",20,0)
 G END
"RTN","ECXSETUP",21,0)
 ;
"RTN","ECXSETUP",22,0)
START ;queued entry point
"RTN","ECXSETUP",23,0)
 I $G(^ECX(728,1,"S"))]"",$G(^("S"))'="^" Q  ;already running or finished
"RTN","ECXSETUP",24,0)
 S $P(^ECX(728,1,"S"),U,2)="R" ; set run flag
"RTN","ECXSETUP",25,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD") S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXSETUP",26,0)
 S ECPACK="Admission setup",ECPIECE=13,ECRTN="START^ECXSETUP",ECGRP="ADMS",ECHEAD="ADM",ECFILE=727.82,ECSD=ECED,ECD=ECED,ECVER=7
"RTN","ECXSETUP",27,0)
 S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXSETUP",28,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXSETUP",29,0)
 S ECRN=0,QFLG=0
"RTN","ECXSETUP",30,0)
 S ECD0=9999999.9999999-ECD
"RTN","ECXSETUP",31,0)
 K ^TMP($J)
"RTN","ECXSETUP",32,0)
 F DFN=0:0 S DFN=$O(^DGPM("ATID1",DFN)) Q:'DFN  S EC1=$O(^(DFN,ECD0)) I EC1 S ECDA=+$O(^(EC1,0)) I $D(^DGPM(ECDA,0)) D  Q:QFLG
"RTN","ECXSETUP",33,0)
 .S EC=^(0),ECX=+$P(EC,U,17),ECAS=$P(EC,U,18)=40 D:$S('ECX:1,'$D(^DGPM(ECX,0)):1,^DGPM(ECX,0)>ECD:1,1:0) GET I ECAS D GET1
"RTN","ECXSETUP",34,0)
 I QFLG S ZTSTOP=1 G END
"RTN","ECXSETUP",35,0)
 S ECLAST=$O(^ECX(ECFILE,999999999),-1),ECTOTAL=$P(^ECX(ECFILE,0),U,4)+ECRN,$P(^(0),U,3,4)=ECLAST_U_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXSETUP",36,0)
 G ^ECXSETU1
"RTN","ECXSETUP",37,0)
END K DIR,ECD,ECDEX,X,Y,ECD0,DFN,DA,EC0
"RTN","ECXSETUP",38,0)
 Q
"RTN","ECXSETUP",39,0)
 ;
"RTN","ECXSETUP",40,0)
GET ;
"RTN","ECXSETUP",41,0)
 Q:'$D(^DPT(DFN,0))  S D0=^DPT(DFN,0),ECAD=$P(EC,U),^TMP($J,DFN,ECDA)=""
"RTN","ECXSETUP",42,0)
 S ECTM=$$ECXTIME^ECXUTL(ECAD),ECXYM=$$ECXYM^ECXUTL(ECED)
"RTN","ECXSETUP",43,0)
 S X=$$PRIMARY^ECXUTL2(DFN,ECD),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2)
"RTN","ECXSETUP",44,0)
 S ECODE=DFN_U_$P(D0,U,9)_U_$E($P($P(D0,U),",")_"    ",1,4)_"^3^"_$$ECXDATE^ECXUTL(ECAD,ECXYM)_U_ECPTTM
"RTN","ECXSETUP",45,0)
 S ECODE=ECODE_U_$P(D0,U,2)_U_$$ECXDOB^ECXUTL($P(D0,U,3))_U_$P(D0,U,8)_U_$P($G(^DPT(DFN,.311)),U,15)_U_+$$INSURED^IBCNS1(DFN,ECD)
"RTN","ECXSETUP",46,0)
 S D1=$G(^DPT(DFN,.11)),ECSTA=$P(D1,U,5),STATE=$S(ECSTA:$P(^DIC(5,ECSTA,0),U,3),1:"")
"RTN","ECXSETUP",47,0)
 S ECCTY=$P(D1,U,7),COUNTY=$S(ECCTY:$P(^DIC(5,ECSTA,1,ECCTY,0),U,3),1:"")
"RTN","ECXSETUP",48,0)
 S ECODE=ECODE_U_STATE_U_COUNTY_U_$P(D1,U,6),D1=$P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),U,9) I D1 S D1=$C(D1+64)
"RTN","ECXSETUP",49,0)
 S ECM=$P($G(^DG(408.32,+$P(D0,U,14),0)),U,2)
"RTN","ECXSETUP",50,0)
 S ECODE=ECODE_U_D1_U_$P($G(^DPT(DFN,"VET")),U)_U_$P($G(^DPT(DFN,.321))_"^^^^",U,1,3)_U_$P($G(^DPT(DFN,.52)),U,5)_U_$P($G(^DIC(21,+$P($G(^DPT(DFN,.32)),U,3),0)),U,3)_U_ECM_U_$P(D0,U,5)
"RTN","ECXSETUP",51,0)
 S W=$P(EC,U,6),FAC=$P($G(^DIC(42,+W,0)),U,11),W=$P($G(^DIC(42,+W,44)),U)
"RTN","ECXSETUP",52,0)
 S ECTS="" F J=1:1:100 S ECT1=$G(^DGPM(ECDA+J,0)) I $P(ECT1,U,14)=ECDA,$P(ECT1,U,2)=6 S ECTS=ECT1 Q
"RTN","ECXSETUP",53,0)
 ;get corresponding Treating specialty - should be the next one, but must be close
"RTN","ECXSETUP",54,0)
 S ECODE=FAC_U_ECODE_U_W_U_$P($G(^DIC(45.7,+$P(ECTS,U,9),0)),U,2)_U_ECPRO_$P(ECTS,U,19)_U_ECDA
"RTN","ECXSETUP",55,0)
 S (ECDRG,ECDIA)="",ECPTF=+$P(EC,U,16) I ECPTF,$D(^DGPT(ECPTF,"M")) D PTF S ECODE=ECODE_U_ECDRG_U_ECDIA
"RTN","ECXSETUP",56,0)
 S $P(ECODE,U,31)=ECTM,$P(ECODE,U,32)=ECPTPR,$P(ECODE,U,33)=$P($G(^DIC(10,+$P(D0,U,6),0)),U,2)_"^^"
"RTN","ECXSETUP",57,0)
 ;facility^dfn^ssn^name^in/out^day^primary care team^sex^dob^religion^employment status^health ins^state^county^zip^eligibility^
"RTN","ECXSETUP",58,0)
 ;vet^vietnam^agent orange^radiation^pow^period of service^means test^marital status^ward^treating specialty^
"RTN","ECXSETUP",59,0)
 ;attending physician^mov #^DRG^diagnosis^time^primary care provider^race
"RTN","ECXSETUP",60,0)
FILE ;file record
"RTN","ECXSETUP",61,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSETUP",62,0)
 S ^ECX(ECFILE,EC7,0)=EC7_U_ECXYM_U_U_ECODE,ECRN=ECRN+1
"RTN","ECXSETUP",63,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSETUP",64,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSETUP",65,0)
 Q
"RTN","ECXSETUP",66,0)
 ;
"RTN","ECXSETUP",67,0)
GET1 ;look again for admission if the one we found was ASIH (ECAS=1)
"RTN","ECXSETUP",68,0)
 F EC1=EC1:0 S EC1=$O(^DGPM("ATID1",DFN,EC1)) Q:'EC1  S ECDA=$O(^(EC1,0)) I ECDA,$D(^DGPM(ECDA,0)) S EC=^DGPM(ECDA,0) I $P(EC,U,18)'=40 S ECX=$P(EC,U,17) Q
"RTN","ECXSETUP",69,0)
 I EC1,ECDA,$S('ECX:1,'$D(^DGPM(ECX,0)):1,^DGPM(ECX,0)>ECD:1,1:0) D GET ; find the admission movement (not ASIH) for this ASIH movement
"RTN","ECXSETUP",70,0)
 Q
"RTN","ECXSETUP",71,0)
 ;
"RTN","ECXSETUP",72,0)
 ;
"RTN","ECXSETUP",73,0)
PTF ; get admitting DRG and diagnosis from PTF
"RTN","ECXSETUP",74,0)
 ;use number for DRG and .01 for diagnosis
"RTN","ECXSETUP",75,0)
 S EC=1 I $D(^DGPT(ECPTF,"M",2,0)) S EC=2
"RTN","ECXSETUP",76,0)
 S EC2=+$P(^DGPT(ECPTF,"M",EC,0),U,5),ECDRG=$P($G(^DGPT(ECPTF,"M",EC,"P")),U)
"RTN","ECXSETUP",77,0)
 S ECDIA=$P($G(^ICD9(EC2,0)),U) Q
"RTN","ECXSETUP",78,0)
 ;
"RTN","ECXSETUP",79,0)
 ;
"RTN","ECXSURG")
0^40^B16957546
"RTN","ECXSURG",1,0)
ECXSURG ;ALB/JAP,BIR/DMA,PTD-Surgery Extract for DSS ; [ 03/20/97  3:04 PM ]
"RTN","ECXSURG",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8**;Dec 22, 1997
"RTN","ECXSURG",3,0)
BEG ;entry point from option
"RTN","ECXSURG",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSURG",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSURG",6,0)
 Q
"RTN","ECXSURG",7,0)
 ;
"RTN","ECXSURG",8,0)
START ;
"RTN","ECXSURG",9,0)
 N QFLG
"RTN","ECXSURG",10,0)
 S QFLG=0
"RTN","ECXSURG",11,0)
 S ECED=ECED+.3
"RTN","ECXSURG",12,0)
 S ECD=ECSD1 F  S ECD=$O(^SRF("AC",ECD)),ECD0=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXSURG",13,0)
 .I $D(^SRF(ECD0,0)) S EC0=^(0),DFN=+EC0 I $D(^DPT(DFN,0)) S ECP=^(0) D STUFF Q:QFLG
"RTN","ECXSURG",14,0)
 Q
"RTN","ECXSURG",15,0)
 ;
"RTN","ECXSURG",16,0)
STUFF ;gather data
"RTN","ECXSURG",17,0)
 N J,X,Y,SSN,DATA1,DATA2,DATAOP
"RTN","ECXSURG",18,0)
 S SSN=$P(ECP,U,9),ECNA=$E($P($P(ECP,U),",")_"    ",1,4)
"RTN","ECXSURG",19,0)
 S X=$$PRIMARY^ECXUTL2(DFN,ECD),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2)
"RTN","ECXSURG",20,0)
 S X=$$INP^ECXUTL2(DFN,ECD),ECA=$P(X,U,1),ECMN=$P(X,U,2),ECTS=$P(X,U,3),ECXADD=$P(X,U,4),ECXADD=$$ECXDATE^ECXUTL(ECXADD,ECXYM)
"RTN","ECXSURG",21,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:0),DATA2=$S($D(^(.2)):^(.2),1:""),DATAOP=$S($D(^("OP")):^("OP"),1:""),ECDIV=$S($D(^(8)):^(8),1:ECINST),ECANE="",ECSR=$P(DATA1,U,4),ECAT=$P(DATA1,U,13),ECNO=$G(^("NON"))
"RTN","ECXSURG",22,0)
 S ECTM=$$ECXTIME^ECXUTL($P(DATA2,U,10)) I $P(ECNO,U)="Y" S ECTM=$$ECXTIME^ECXUTL($P(ECNO,U,4))
"RTN","ECXSURG",23,0)
 S ECCAN=$G(^SRF(ECD0,30))>0 I ECCAN!('$P(DATA2,U,10)&($P(ECNO,U)'="Y")) Q
"RTN","ECXSURG",24,0)
 ;quit if cancelled or no pt. in oper. rm. time
"RTN","ECXSURG",25,0)
 ;look for non-OR
"RTN","ECXSURG",26,0)
 I $P(ECNO,U)="Y" S ECSR=$P(ECNO,U,6),ECAT=$P(ECNO,U,7),A1=$P(ECNO,U,5),A2=$P(ECNO,U,4),TIME="##" D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXSURG",27,0)
 S ECNL="" I $P(ECNO,U)="Y" S ECNL=+$P(ECNO,U,2),ECNL=$P($G(^ECX(728.44,ECNL,0)),U,9) I ECNL="" S ECNL="UNKNOWN"
"RTN","ECXSURG",28,0)
 S ECSA=$P($G(^SRF(ECD0,.3)),U,4),ECO=$P($G(^SRF(ECD0,0)),U,2) S ECORTY=$P($G(^SRS(+ECO,2)),U),ECO=$P($G(^SRS(+ECO,0)),U)
"RTN","ECXSURG",29,0)
 ;get service of attending surgeon
"RTN","ECXSURG",30,0)
 S ECATSV=$P($G(^DIC(49,+$G(^VA(200,+ECAT,5)),730)),U)
"RTN","ECXSURG",31,0)
 ;add leading 2s for pointer to 200
"RTN","ECXSURG",32,0)
 S:ECAT ECAT=2_ECAT S:ECSR ECSR=2_ECSR S:ECSA ECSA=2_ECSA
"RTN","ECXSURG",33,0)
 S J=$O(^SRF(ECD0,6,0)) I J,$D(^(J,0)) S ECANE=$P(^(0),U) I $P(^(0),U,3)'="Y" F  S J=$O(^SRF(ECD0,6,J)) Q:'J  I $D(^(J,0)),$P(^(0),U,3)="Y" S ECANE=$P(^(0),U) Q
"RTN","ECXSURG",34,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXSURG",35,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0) S:ECSS="000" ECSS="999"
"RTN","ECXSURG",36,0)
 ;get primary procedure
"RTN","ECXSURG",37,0)
 S ECPT=+$P(DATAOP,U,2),ECPT=$P($G(^ICPT(ECPT,0)),U)
"RTN","ECXSURG",38,0)
 S ECODE0="P"_U_ECPT_U
"RTN","ECXSURG",39,0)
 F J="10,12","2,3","1,4" S A2=$P(DATA2,U,$P(J,",")),A1=$P(DATA2,U,$P(J,",",2)),TIME="##" D:(A1&A2) TIME S ECODE0=ECODE0_U_TIME K TIME
"RTN","ECXSURG",40,0)
 S ECRR="" I $D(^SRF(ECD0,1.1)) S A1=$P(^(1.1),U,8),A2=$P(^(1.1),U,7),TIME="##" D:(A1&A2) TIME S ECRR=TIME K TIME
"RTN","ECXSURG",41,0)
 I ECNL]"" S $P(ECODE0,U,18)=ECNT
"RTN","ECXSURG",42,0)
 ;ecode0=p^cpt code^^patient time^operation time^anesthesia time
"RTN","ECXSURG",43,0)
 D FILE
"RTN","ECXSURG",44,0)
 ;get secondary procedures
"RTN","ECXSURG",45,0)
 S J=0
"RTN","ECXSURG",46,0)
 F  S J=$O(^SRF(ECD0,13,J)) Q:'J  I $D(^(J,0)),$D(^(2)),$P(^(2),U)]"" S ECPT=$P(^(2),U),ECODE0="S"_U_$P($G(^ICPT(ECPT,0)),U) D FILE
"RTN","ECXSURG",47,0)
 ;ecode0=s^cpt code
"RTN","ECXSURG",48,0)
 ;get prostheses
"RTN","ECXSURG",49,0)
 S J=0
"RTN","ECXSURG",50,0)
 F  S J=$O(^SRF(ECD0,1,J)) Q:'J  I $D(^(J,0)) S X=+^(0),Q=$P($G(^(1)),U,2) S:'Q Q=1 S ECODE0="I"_U_U_U_U_U_U_X_U_Q D FILE
"RTN","ECXSURG",51,0)
 ;ecode0=i^^^^^^prosthesis^quantity
"RTN","ECXSURG",52,0)
 Q
"RTN","ECXSURG",53,0)
 ;
"RTN","ECXSURG",54,0)
FILE ;file record
"RTN","ECXSURG",55,0)
 ;node0
"RTN","ECXSURG",56,0)
 ;division^dfn^ssn^name^in/out^day^case #^surg specialty^or room #^surgeon^attending^anesthesia supervisor^anesthesia technique^
"RTN","ECXSURG",57,0)
 ;primary/secondary/prostheses^cpt^^pt time^op time^anes time^prostheses^qty^^
"RTN","ECXSURG",58,0)
 ;movement number^treating speciality^cancelled^time^or type^attending's service^non-or dss id^recovery room time^^primary care team^primary care provider^admission date
"RTN","ECXSURG",59,0)
 ;node1
"RTN","ECXSURG",60,0)
 ;mpi^dss dept^surgeon npi^attending npi^anes supervisor npi^pc provider npi
"RTN","ECXSURG",61,0)
 N DA,DIK
"RTN","ECXSURG",62,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSURG",63,0)
 S ECODE=EC7_U_EC23
"RTN","ECXSURG",64,0)
 S ECODE=ECODE_U_ECDIV_U_DFN_U_SSN_U_ECNA_U_ECA_U_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECD0_U_ECSS_U_ECO_U_ECSR_U_ECAT_U_ECSA_U_ECANE
"RTN","ECXSURG",65,0)
 S ECODE=ECODE_U_ECODE0
"RTN","ECXSURG",66,0)
 S $P(ECODE,U,26,37)=ECMN_U_ECTS_U_$S(ECCAN:"C",1:"")_U_ECTM_U_ECORTY_U_ECATSV_U_ECNL_U_ECRR_U_U_ECPTTM_U_ECPTPR_U_ECXADD
"RTN","ECXSURG",67,0)
 S ECODE1=U_U_U_U_U
"RTN","ECXSURG",68,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXSURG",69,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSURG",70,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSURG",71,0)
 Q
"RTN","ECXSURG",72,0)
 ;
"RTN","ECXSURG",73,0)
TIME ; given date/time get increment
"RTN","ECXSURG",74,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG",75,0)
 S TIME=$TR($J($$FMDIFF^XLFDT(A1,A2,2)/900,6,0)," ") I TIME<0 S TIME="###"
"RTN","ECXSURG",76,0)
 Q
"RTN","ECXSURG",77,0)
 ;
"RTN","ECXSURG",78,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG",79,0)
 S ECHEAD="SUR"
"RTN","ECXSURG",80,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG",81,0)
 Q
"RTN","ECXSURG",82,0)
 ;
"RTN","ECXSURG",83,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG",84,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXTAUTO")
0^45^B17191066
"RTN","ECXTAUTO",1,0)
ECXTAUTO ;BIR/DMA-Background Queuing for Package Extracts ; 17 Mar 95 / 1:04 PM
"RTN","ECXTAUTO",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXTAUTO",3,0)
 ;Queuing and message sending for package extracts for local use
"RTN","ECXTAUTO",4,0)
 ;Input ECPACK   printed name of package (e.g. Lab, Prescriptions)
"RTN","ECXTAUTO",5,0)
 ;      ECPIECE  piece of node where last date is stored
"RTN","ECXTAUTO",6,0)
 ;      ECRTN    in the form of START^ROUTINE
"RTN","ECXTAUTO",7,0)
 ;      ECGRP    name of local mail group to receive summary message
"RTN","ECXTAUTO",8,0)
 ;               (MUST BE 1 TO 5 UPPER CASE ALPHA - NO SPACES)
"RTN","ECXTAUTO",9,0)
 ;      ECFILE   file number of the local editing file
"RTN","ECXTAUTO",10,0)
 ; generates EC23=2nd and 3rd piece of zero node in local editing file
"RTN","ECXTAUTO",11,0)
 ;               =YYMM of end date^pointer to 727
"RTN","ECXTAUTO",12,0)
 ;
"RTN","ECXTAUTO",13,0)
 Q  ;no entry from the top
"RTN","ECXTAUTO",14,0)
 ;
"RTN","ECXTAUTO",15,0)
GO ; called entry from QUE
"RTN","ECXTAUTO",16,0)
 S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTAUTO",17,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTAUTO",18,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXTAUTO",19,0)
 S ECFDT=$$FMADD^XLFDT($P($G(^ECX(728,1,ECNODE)),U,ECPIECE),1) I ECFDT>ECED D ERROR G REQUE:'$D(ECEDNEW) Q
"RTN","ECXTAUTO",20,0)
 I ECFDT>ECSD S ECSD=ECFDT I ECSD>ECED G REQUE:'$D(ECDNEW) Q
"RTN","ECXTAUTO",21,0)
 S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="R"
"RTN","ECXTAUTO",22,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXTAUTO",23,0)
 L +^ECX(727,0) S EC=$P(^ECX(727,0),U,3)+1,$P(^(0),U,3,4)=EC_U_EC L -^ECX(727,0)
"RTN","ECXTAUTO",24,0)
 S ^ECX(727,EC,0)=EC_U_DT_U_ECPACK_U_ECSD_U_$E(ECED,1,7)
"RTN","ECXTAUTO",25,0)
 S ^ECX(727,EC,"HEAD")=ECHEAD
"RTN","ECXTAUTO",26,0)
 S ^ECX(727,EC,"FILE")=ECFILE
"RTN","ECXTAUTO",27,0)
 S ^ECX(727,EC,"GRP")=ECGRP
"RTN","ECXTAUTO",28,0)
 S ^ECX(727,"AC",DT,EC)="",^ECX(727,"AD",ECPACK,EC)=""
"RTN","ECXTAUTO",29,0)
 S ECRN=0,EC23=$$ECXYM^ECXUTL(ECED)_U_EC
"RTN","ECXTAUTO",30,0)
EXTRACT ;do specific extract
"RTN","ECXTAUTO",31,0)
 S ECXSTART=$P($$HTE^XLFDT($H),":",1,2),ECXNOW=$H
"RTN","ECXTAUTO",32,0)
 D @ECRTN
"RTN","ECXTAUTO",33,0)
 S $P(^ECX(728,1,ECNODE),U,ECPIECE)=$P(ECED,".") S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTAUTO",34,0)
 S $P(^ECX(727,$P(EC23,U,2),0),U,6)=ECRN
"RTN","ECXTAUTO",35,0)
 S ECLAST=$O(^ECX(ECFILE,999999999),-1),ECTOTAL=$P(^ECX(ECFILE,0),U,4)+ECRN,$P(^(0),U,3,4)=ECLAST_U_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXTAUTO",36,0)
 ;set piece 3 and 4 of the zero node
"RTN","ECXTAUTO",37,0)
 ;
"RTN","ECXTAUTO",38,0)
MSG ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTAUTO",39,0)
 S XMSUB=ECINST_" - "_ECPACK_" BACKGROUND EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTAUTO",40,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTAUTO",41,0)
 S ECMSG(1,0)="The BACKGROUND DSS-"_ECPACK_" extract (#"_$P(EC23,U,2)_") for "_ECSDN,ECMSG(2,0)="through "_ECEDN_" was begun on "_$P(ECXSTART,"@")_" at "_$P(ECXSTART,"@",2)
"RTN","ECXTAUTO",42,0)
 S ECMSG(3,0)="and completed on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_"."
"RTN","ECXTAUTO",43,0)
 S ECMSG(4,0)=" ",ECMSG(5,0)="A total of "_ECRN_" records were written."
"RTN","ECXTAUTO",44,0)
 S ECMSG(6,0)=" ",ECMSG(7,0)="Extract time was [HH:MM:SS] "_$$HDIFF^XLFDT($H,ECXNOW,3),ECMSG(8,0)=" "
"RTN","ECXTAUTO",45,0)
 S XMTEXT="ECMSG(" D ^XMD
"RTN","ECXTAUTO",46,0)
 S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)=""
"RTN","ECXTAUTO",47,0)
 Q:$D(ECEDNEW)  ;for weekly where we have to do 2, don't requeue after first
"RTN","ECXTAUTO",48,0)
 ;
"RTN","ECXTAUTO",49,0)
REQUE ;use fields in 727.1 to reque job for next time
"RTN","ECXTAUTO",50,0)
 S EC=$O(^ECX(727.1,"AF",ECFILE,0)),EC=$P(^ECX(727.1,EC,0),U,3)
"RTN","ECXTAUTO",51,0)
 I EC="D" S ZTDTH=ZTDTH+1_","_$P(ZTDTH,",",2) D REQ^%ZTLOAD Q
"RTN","ECXTAUTO",52,0)
 I EC="W" S ZTDTH=ZTDTH+7_","_$P(ZTDTH,",",2) D REQ^%ZTLOAD Q
"RTN","ECXTAUTO",53,0)
 I EC="M" S EC=$$HTFM^XLFDT(ZTDTH,1),EC=$E(EC,1,5)+1+($E(EC,4,5)=12*8800)_$E(EC,6,14),ZTDTH=$$FMTH^XLFDT(EC,1)_","_$P(ZTDTH,",",2) D REQ^%ZTLOAD Q
"RTN","ECXTAUTO",54,0)
 Q
"RTN","ECXTAUTO",55,0)
 ;
"RTN","ECXTAUTO",56,0)
QUE ;Entry point from package extracts - determine start and stop date from 727.1
"RTN","ECXTAUTO",57,0)
 ;
"RTN","ECXTAUTO",58,0)
 K ECEDNEW
"RTN","ECXTAUTO",59,0)
 S EC=$O(^ECX(727.1,"AF",ECFILE,0)),EC=^ECX(727.1,EC,0),ECD=$P(EC,U,4),EC=$P(EC,U,3)
"RTN","ECXTAUTO",60,0)
 S ECDT=$P($$HTFM^XLFDT(ZTDTH,1),".")
"RTN","ECXTAUTO",61,0)
 I EC="M" S ECSD=$E(ECDT,1,5)-1-($E(ECDT,4,5)="01"*8800)_"01",ECED=$$FMADD^XLFDT($E(ECDT,1,5)_"01",-1) G GO
"RTN","ECXTAUTO",62,0)
 I EC="D" S ECED=$$HTFM^XLFDT(ZTDTH-ECD,1),ECSD=ECED G GO
"RTN","ECXTAUTO",63,0)
 I EC="W" S ECED=$$HTFM^XLFDT(ZTDTH-ECD,1),ECSD=$$HTFM^XLFDT(ZTDTH-ECD-6,1) I $E(ECED,4,5)=$E(ECSD,4,5) G GO
"RTN","ECXTAUTO",64,0)
 ;here for a weekly extract that spans 2 months.
"RTN","ECXTAUTO",65,0)
 S ECEDNEW=ECED,ECED=$$FMADD^XLFDT($E(ECED,1,5)_"01",-1) D GO
"RTN","ECXTAUTO",66,0)
 S ECED=ECEDNEW,ECSD=$E(ECED,1,5)_"01" K ECEDNEW G GO
"RTN","ECXTAUTO",67,0)
 ;
"RTN","ECXTAUTO",68,0)
ERROR ; send message when job was queued to extract data already extracted
"RTN","ECXTAUTO",69,0)
 ;
"RTN","ECXTAUTO",70,0)
 S XMSUB=ECINST_" - "_ECPACK_" BACKGROUND EXTRACT FAILURE",XMDUZ="DSS SYSTEM"
"RTN","ECXTAUTO",71,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTAUTO",72,0)
 S ECMSG(1,0)="The "_ECPACK_" extract was queued to extract data for",ECMSG(2,0)="a range of dates which had already been extracted.",ECMSG(3,0)="  The extract was NOT rerun"
"RTN","ECXTAUTO",73,0)
 S XMTEXT="ECMSG(" D ^XMD
"RTN","ECXTAUTO",74,0)
 S ECNOGO=1
"RTN","ECXTAUTO",75,0)
 Q
"RTN","ECXTLOCL")
0^46^B8678963
"RTN","ECXTLOCL",1,0)
ECXTLOCL ;BIR/DMA-Package Extracts for Local Use ; 17 Mar 95 / 1:04 PM
"RTN","ECXTLOCL",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXTLOCL",3,0)
EN ;entry point
"RTN","ECXTLOCL",4,0)
 ;Queuing and message sending for package extracts for local use
"RTN","ECXTLOCL",5,0)
 ;Input ECPACK   printed name of package (e.g. Lab, Prescriptions)
"RTN","ECXTLOCL",6,0)
 ;      ECRTN    in the form of START^ROUTINE
"RTN","ECXTLOCL",7,0)
 ;      ECGRP    name of local mail group to receive summary message
"RTN","ECXTLOCL",8,0)
 ;               (MUST BE 1 TO 5 UPPER CASE ALPHA - NO SPACES)
"RTN","ECXTLOCL",9,0)
 ;      ECFILE   file number of the local editing file
"RTN","ECXTLOCL",10,0)
 ; generates EC23=2nd and 3rd piece of zero node in local editing file
"RTN","ECXTLOCL",11,0)
 ;               =YYMM of end date^pointer to 727
"RTN","ECXTLOCL",12,0)
 ;
"RTN","ECXTLOCL",13,0)
 S EC=$O(^ECX(727.1,"AF",ECFILE,0)),EC=$P($G(^ECX(727.1,EC,0)),U,5) I 'EC G ERROR
"RTN","ECXTLOCL",14,0)
 S ECED=$$FMADD^XLFDT(DT,-EC+1),ECSD=$$FMADD^XLFDT(DT,-EC)
"RTN","ECXTLOCL",15,0)
 ;look at results for DT-Offset so ECSD=DT-EC
"RTN","ECXTLOCL",16,0)
 S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTLOCL",17,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTLOCL",18,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXTLOCL",19,0)
 L +^ECX(727,0) S EC=$P(^ECX(727,0),U,3)+1,$P(^(0),U,3,4)=EC_U_EC L -^ECX(727,0)
"RTN","ECXTLOCL",20,0)
 S ^ECX(727,EC,0)=EC_U_DT_U_ECPACK_U_ECSD_U_$E(ECED,1,7)
"RTN","ECXTLOCL",21,0)
 S ^ECX(727,EC,"HEAD")=ECHEAD
"RTN","ECXTLOCL",22,0)
 S ^ECX(727,EC,"FILE")=ECFILE
"RTN","ECXTLOCL",23,0)
 S ^ECX(727,EC,"GRP")=ECGRP
"RTN","ECXTLOCL",24,0)
 S ^ECX(727,EC,"L")="L"
"RTN","ECXTLOCL",25,0)
 S ^ECX(727,"AC",DT,EC)="",^ECX(727,"AD",ECPACK,EC)=""
"RTN","ECXTLOCL",26,0)
 S ECRN=0,EC23=$$ECXYM^ECXUTL(ECED)_U_EC
"RTN","ECXTLOCL",27,0)
EXTRACT ;do specific extract
"RTN","ECXTLOCL",28,0)
 D @ECRTN
"RTN","ECXTLOCL",29,0)
 S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTLOCL",30,0)
 S $P(^ECX(727,$P(EC23,U,2),0),U,6)=ECRN
"RTN","ECXTLOCL",31,0)
 S ECLAST=$O(^ECX(ECFILE,999999999),-1),ECTOTAL=$P(^ECX(ECFILE,0),U,4)+ECRN,$P(^(0),U,3,4)=ECLAST_U_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXTLOCL",32,0)
 ;set piece 3 and 4 of the zero node
"RTN","ECXTLOCL",33,0)
 ;
"RTN","ECXTLOCL",34,0)
MSG ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTLOCL",35,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTLOCL",36,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTLOCL",37,0)
 S ECMSG(1,0)="The LOCAL USE DSS-"_ECPACK_" extract for "_ECSDN_" through ",ECMSG(2,0)=ECEDN_" was completed on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_". ",ECMSG(3,0)=" ",ECMSG(4,0)="A total of "_ECRN_" records were written."
"RTN","ECXTLOCL",38,0)
 S ECMSG(5,0)=" "
"RTN","ECXTLOCL",39,0)
 S XMTEXT="ECMSG(" D ^XMD
"RTN","ECXTLOCL",40,0)
 Q
"RTN","ECXTLOCL",41,0)
 ;
"RTN","ECXTLOCL",42,0)
 Q
"RTN","ECXTLOCL",43,0)
ERROR ;local extract not properly setup
"RTN","ECXTLOCL",44,0)
 S EC(1)="The local "_ECPACK_" extract was not properly set up",EC(2)="Please review settings in file 727.1 and requeue this extract"
"RTN","ECXTLOCL",45,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))="",XMTEXT="EC(",XMSUB="Local extract not properly setup",XMDUZ="DSS SYSTEM" D ^XMD
"RTN","ECXTLOCL",46,0)
 S ZTREQ="@" Q
"RTN","ECXTRAC")
0^41^B38168499
"RTN","ECXTRAC",1,0)
ECXTRAC ;ALB/GTS,JAP,BIR/DMA,CML-Package Extracts for DSS ; 11/08/96 15:37
"RTN","ECXTRAC",2,0)
 ;;3.0;DSS EXTRACTS;**9,8**;Dec 22, 1997
"RTN","ECXTRAC",3,0)
 ;Date range, queuing and message sending for package extracts
"RTN","ECXTRAC",4,0)
 ;Input ECPACK   printed name of package (e.g. Lab, Prescriptions)
"RTN","ECXTRAC",5,0)
 ;      ECNODE   in file 728 where last date is stored
"RTN","ECXTRAC",6,0)
 ;      ECPIECE  piece of node where last date is stored
"RTN","ECXTRAC",7,0)
 ;      ECRTN    in the form of START^ROUTINE
"RTN","ECXTRAC",8,0)
 ;      ECGRP    name of local mail group to receive summary message
"RTN","ECXTRAC",9,0)
 ;               (MUST BE 1 TO 5 UPPER CASE ALPHA - NO SPACES)
"RTN","ECXTRAC",10,0)
 ;      ECFILE   file number of the local editing file
"RTN","ECXTRAC",11,0)
 ; generates EC23=2nd and 3rd piece of zero node in local editing file
"RTN","ECXTRAC",12,0)
 ;               =YYMM of end date^pointer to 727
"RTN","ECXTRAC",13,0)
 ;
"RTN","ECXTRAC",14,0)
EN ;entry point
"RTN","ECXTRAC",15,0)
 N OUT,CHKFLG
"RTN","ECXTRAC",16,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXTRAC",17,0)
 I '$D(ECHEAD) S ECHEAD=" "
"RTN","ECXTRAC",18,0)
 I $P($G(^ECX(728,1,ECNODE+.1)),U,ECPIECE)]"" D  Q
"RTN","ECXTRAC",19,0)
 .W !!,$C(7),ECPACK," extract is already scheduled to run",!!
"RTN","ECXTRAC",20,0)
 .D PAUSE
"RTN","ECXTRAC",21,0)
 W @IOF,!,"Extract ",ECPACK," Information for DSS",!!
"RTN","ECXTRAC",22,0)
 S:'$D(ECINST) ECINST=+$P(^ECX(728,1,0),U)
"RTN","ECXTRAC",23,0)
 S ECXINST=ECINST
"RTN","ECXTRAC",24,0)
 K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTRAC",25,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTRAC",26,0)
 ;* get last date for all extracts except prosthetics
"RTN","ECXTRAC",27,0)
 I ECGRP'="PRO" D
"RTN","ECXTRAC",28,0)
 .S ECLDT=$S($D(^ECX(728,1,ECNODE)):$P(^(ECNODE),U,ECPIECE),1:2610624)
"RTN","ECXTRAC",29,0)
 .S:ECLDT="" ECLDT=2610624
"RTN","ECXTRAC",30,0)
 ;* get last date for prosthetics
"RTN","ECXTRAC",31,0)
 I ECGRP="PRO" D
"RTN","ECXTRAC",32,0)
 .N ECXDA1
"RTN","ECXTRAC",33,0)
 .S ECXDA1=$O(^ECX(728,0))
"RTN","ECXTRAC",34,0)
 .I $D(^ECX(728,ECXDA1,1,ECXINST,0)) D
"RTN","ECXTRAC",35,0)
 ..S ECLDT=$P(^ECX(728,ECXDA1,1,ECXINST,0),U,2)
"RTN","ECXTRAC",36,0)
 .I '$D(^ECX(728,ECXDA1,1,ECXINST,0)) D
"RTN","ECXTRAC",37,0)
 ..S DA(1)=ECXDA1
"RTN","ECXTRAC",38,0)
 ..S DIC(0)="L" K ECXDD
"RTN","ECXTRAC",39,0)
 ..D FIELD^DID(728,59,,"SPECIFIER","ECXDD")
"RTN","ECXTRAC",40,0)
 ..S DIC("P")=ECXDD("SPECIFIER") K ECXDD
"RTN","ECXTRAC",41,0)
 ..S DIC="^ECX(728,"_DA(1)_",1,",X=ECXINST,DINUM=X
"RTN","ECXTRAC",42,0)
 ..K DD,DO D FILE^DICN
"RTN","ECXTRAC",43,0)
 ..K DIC,X,DINUM,Y,DA
"RTN","ECXTRAC",44,0)
 ..S ECLDT=2610624
"RTN","ECXTRAC",45,0)
 S OUT=0
"RTN","ECXTRAC",46,0)
 F  S (ECED,ECSD)="" D  Q:OUT
"RTN","ECXTRAC",47,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: " D ^%DT
"RTN","ECXTRAC",48,0)
 .I Y<0 S OUT=1 Q
"RTN","ECXTRAC",49,0)
 .S ECSD=Y
"RTN","ECXTRAC",50,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: " D ^%DT
"RTN","ECXTRAC",51,0)
 .I Y<0 S OUT=1 Q
"RTN","ECXTRAC",52,0)
 .I Y<ECSD D  Q
"RTN","ECXTRAC",53,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXTRAC",54,0)
 ..W !,"Please try again.",!!
"RTN","ECXTRAC",55,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXTRAC",56,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXTRAC",57,0)
 ..W !,"Please try again.",!!
"RTN","ECXTRAC",58,0)
 .S ECED=Y
"RTN","ECXTRAC",59,0)
 .I ECLDT'<ECSD D  Q
"RTN","ECXTRAC",60,0)
 ..W !!,"The ",ECPACK," information has already been extracted through ",$$FMTE^XLFDT(ECLDT),"."
"RTN","ECXTRAC",61,0)
 ..W !,"Please enter a new date range.",!!
"RTN","ECXTRAC",62,0)
 .S OUT=1
"RTN","ECXTRAC",63,0)
 I ECED]"",ECSD]"" D QUE
"RTN","ECXTRAC",64,0)
 Q
"RTN","ECXTRAC",65,0)
 ;
"RTN","ECXTRAC",66,0)
QUE ;queue extract
"RTN","ECXTRAC",67,0)
 ;if the extract is ivp (i.e., file=727.819), check to see which feeder key format to use
"RTN","ECXTRAC",68,0)
 ;if there is data in the intermediate file (#728.113) for the start date the user selects
"RTN","ECXTRAC",69,0)
 ; or there is data for a date prior to the start date use new format
"RTN","ECXTRAC",70,0)
 N CHKFLG
"RTN","ECXTRAC",71,0)
 I ECFILE=727.819,$O(^ECX(728.113,"A",ECED+1),-1) D  Q:CHKFLG
"RTN","ECXTRAC",72,0)
 .S CHKFLG=0
"RTN","ECXTRAC",73,0)
 .S DATE=$O(^ECX(728.113,"A",ECED+1),-1) D
"RTN","ECXTRAC",74,0)
 ..I DATE<ECSD S CHKFLG=1
"RTN","ECXTRAC",75,0)
 .Q:CHKFLG
"RTN","ECXTRAC",76,0)
 .D CHK^ECXDIVIV Q:CHKFLG
"RTN","ECXTRAC",77,0)
 .D CHK2 Q:CHKFLG
"RTN","ECXTRAC",78,0)
 .S ECRTN="START^ECXPIVDN",ECVER=7
"RTN","ECXTRAC",79,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXTRAC",80,0)
 I '$D(ECHEAD) S ECHEAD=""
"RTN","ECXTRAC",81,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXTRAC",82,0)
 K ZTSAVE
"RTN","ECXTRAC",83,0)
 S (ZTSAVE("ECINST"),ZTSAVE("ECED"),ZTSAVE("ECSD"),ZTSAVE("ECSD1"),ZTSAVE("ECEDN"),ZTSAVE("ECSDN"))=""
"RTN","ECXTRAC",84,0)
 S (ZTSAVE("ECPACK"),ZTSAVE("ECPIECE"),ZTSAVE("ECRTN"),ZTSAVE("ECGRP"),ZTSAVE("ECNODE"),ZTSAVE("ECFILE"),ZTSAVE("ECHEAD"),ZTSAVE("ECVER"))=""
"RTN","ECXTRAC",85,0)
 S (ZTSAVE("ECINST"),ZTSAVE("ECXINST"))=""
"RTN","ECXTRAC",86,0)
 S ZTDESC=ECPACK_" EXTRACT: "_ECSDN_" TO "_ECEDN,ZTRTN="START^ECXTRAC",ZTIO=""
"RTN","ECXTRAC",87,0)
 D ^%ZTLOAD
"RTN","ECXTRAC",88,0)
 I $D(ZTSK) D
"RTN","ECXTRAC",89,0)
 .S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="R"
"RTN","ECXTRAC",90,0)
 .W !,"Request queued as Task #",ZTSK,".",!
"RTN","ECXTRAC",91,0)
 .D PAUSE
"RTN","ECXTRAC",92,0)
 Q
"RTN","ECXTRAC",93,0)
 ;
"RTN","ECXTRAC",94,0)
START ; entry when queued
"RTN","ECXTRAC",95,0)
 S QFLG=0
"RTN","ECXTRAC",96,0)
 L +^ECX(727,0) S EC=$P(^ECX(727,0),U,3)+1,$P(^(0),U,3,4)=EC_U_EC L -^ECX(727,0)
"RTN","ECXTRAC",97,0)
 S ^ECX(727,EC,0)=EC_U_DT_U_ECPACK_U_ECSD_U_$E(ECED,1,7)
"RTN","ECXTRAC",98,0)
 S ^ECX(727,EC,"HEAD")=ECHEAD
"RTN","ECXTRAC",99,0)
 S ^ECX(727,EC,"FILE")=ECFILE
"RTN","ECXTRAC",100,0)
 S ^ECX(727,EC,"GRP")=ECGRP
"RTN","ECXTRAC",101,0)
 I $D(ECVER) S ^ECX(727,EC,"VER")=ECVER
"RTN","ECXTRAC",102,0)
 S ^ECX(727,EC,"DIV")=ECXINST
"RTN","ECXTRAC",103,0)
 S DA=EC,DIK="^ECX(727," D IX^DIK K DIK,DA
"RTN","ECXTRAC",104,0)
 S ECRN=0,ECXYM=$$ECXYM^ECXUTL(ECED),EC23=ECXYM_U_EC
"RTN","ECXTRAC",105,0)
 S ECXSTART=$P($$HTE^XLFDT($H),":",1,2),ECXNOW=$H
"RTN","ECXTRAC",106,0)
 ;do specific extract
"RTN","ECXTRAC",107,0)
 D @ECRTN
"RTN","ECXTRAC",108,0)
 ;if task gets stop request, set ztstop and quit
"RTN","ECXTRAC",109,0)
 I QFLG D  Q
"RTN","ECXTRAC",110,0)
 .S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="",ZTSTOP=1
"RTN","ECXTRAC",111,0)
 .D ^ECXKILL
"RTN","ECXTRAC",112,0)
 ;* set last date for all extracts except prosthetics
"RTN","ECXTRAC",113,0)
 S:(ECGRP'="PRO") $P(^ECX(728,1,ECNODE),U,ECPIECE)=$P(ECED,".")
"RTN","ECXTRAC",114,0)
 ;* set last date for prosthetics
"RTN","ECXTRAC",115,0)
 I ECGRP="PRO" D
"RTN","ECXTRAC",116,0)
 .N ECXDA1
"RTN","ECXTRAC",117,0)
 .S ECXDA1=$O(^ECX(728,0))
"RTN","ECXTRAC",118,0)
 .S $P(^ECX(728,ECXDA1,1,ECXINST,0),U,2)=$P(ECED,".")
"RTN","ECXTRAC",119,0)
 S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTRAC",120,0)
 S $P(^ECX(727,$P(EC23,U,2),0),U,6)=ECRN
"RTN","ECXTRAC",121,0)
 ;set piece 3 and 4 of the zero node
"RTN","ECXTRAC",122,0)
 S ECLAST=$O(^ECX(ECFILE,99999999),-1),ECTOTAL=$P(^ECX(ECFILE,0),U,4)+ECRN,$P(^(0),U,3,4)=ECLAST_U_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXTRAC",123,0)
 D MSG
"RTN","ECXTRAC",124,0)
 S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)=""
"RTN","ECXTRAC",125,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECXTRAC",126,0)
 D ^ECXKILL
"RTN","ECXTRAC",127,0)
 Q
"RTN","ECXTRAC",128,0)
 ;
"RTN","ECXTRAC",129,0)
MSG ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTRAC",130,0)
 N ECSXS
"RTN","ECXTRAC",131,0)
 I ECPACK="Prosthetics" D
"RTN","ECXTRAC",132,0)
 .S ECSXS=$$MSG^ECXAPRO("G.DSS-"_ECGRP,ECSD,ECED,ECSDN,ECEDN,ECXINST,EC23,QFLG,ECINST)
"RTN","ECXTRAC",133,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTRAC",134,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTRAC",135,0)
 S ECMSG(1,0)="The DSS-"_ECPACK_" extract (#"_$P(EC23,U,2)_") for "_ECSDN,ECMSG(2,0)="through "_ECEDN_" was begun on "_$P(ECXSTART,"@")_" at "_$P(ECXSTART,"@",2)
"RTN","ECXTRAC",136,0)
 S ECMSG(3,0)="and completed on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_"."
"RTN","ECXTRAC",137,0)
 S ECMSG(4,0)=" ",ECMSG(5,0)="A total of "_ECRN_" records were written."
"RTN","ECXTRAC",138,0)
 S ECMSG(6,0)=" ",ECMSG(7,0)="Extract time was [HH:MM:SS] "_$$HDIFF^XLFDT($H,ECXNOW,3),ECMSG(8,0)=" "
"RTN","ECXTRAC",139,0)
 I $D(ECSXS),('ECSXS) D
"RTN","ECXTRAC",140,0)
 .S ECMSG(9,0)="There was a problem sending the HCPCS cost bulletin."
"RTN","ECXTRAC",141,0)
 .S ECMSG(10,0)=" "
"RTN","ECXTRAC",142,0)
 S XMTEXT="ECMSG("
"RTN","ECXTRAC",143,0)
 D ^XMD
"RTN","ECXTRAC",144,0)
 Q
"RTN","ECXTRAC",145,0)
 ;
"RTN","ECXTRAC",146,0)
CHK2 ;iv extract check - all active iv rooms to have a division
"RTN","ECXTRAC",147,0)
 S CHKFLG=0,EC=0
"RTN","ECXTRAC",148,0)
 F  S EC=$O(^PS(59.5,EC)) Q:'EC  I '$P(^PS(59.5,EC,0),U,4) D  Q:CHKFLG
"RTN","ECXTRAC",149,0)
 .S CHKFLG=$S('$G(^PS(59.5,EC,"I")):1,$G(^PS(59.5,EC,"I"))>DT:1,1:0)
"RTN","ECXTRAC",150,0)
 .I CHKFLG D
"RTN","ECXTRAC",151,0)
 ..W !!,"All active IV Rooms in the IV Room file (#59.5) must have a ""DIVISION""",!,"assigned to run this extract!"
"RTN","ECXTRAC",152,0)
 ..W !!,"This information can be entered using the DSS Extract Manager's Maintenance ",!,"option ""Enter/Edit IV Room Division""." Q
"RTN","ECXTRAC",153,0)
 ..D PAUSE
"RTN","ECXTRAC",154,0)
 Q
"RTN","ECXTRAC",155,0)
 ;
"RTN","ECXTRAC",156,0)
PAUSE ;pause screen
"RTN","ECXTRAC",157,0)
 S OUT=0
"RTN","ECXTRAC",158,0)
 I $E(IOST)="C" D
"RTN","ECXTRAC",159,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXTRAC",160,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXTRAC",161,0)
 I 'Y S OUT=1
"RTN","ECXTRAC",162,0)
 W !!
"RTN","ECXTRAC",163,0)
 Q
"RTN","ECXTRANS")
0^42^B36018767
"RTN","ECXTRANS",1,0)
ECXTRANS ;ALB/GTS,JAP,BIR/DMA-Extract from Local Editing Files and Transmit ; [ 11/26/96  2:13 PM ]
"RTN","ECXTRANS",2,0)
 ;;3.0;DSS EXTRACTS;**2,9,12,8**;Dec 22, 1997
"RTN","ECXTRANS",3,0)
EN ;entry point from option
"RTN","ECXTRANS",4,0)
 N ECDA,ECRE,ECTMP,ECCHK,ECDIVVR,ECXDIQ,JJ,SS,OUT,DIR,DUOUT,DTOUT,DIRUT,DIC,X,Y
"RTN","ECXTRANS",5,0)
 I $G(^ECX(728,1,"QUEUE"))'?1"DM"1U D  Q
"RTN","ECXTRANS",6,0)
 .W !,"You have not defined a proper transmission queue"
"RTN","ECXTRANS",7,0)
 .W !,"for entry number 1 in the DSS EXTRACTS file (#728)."
"RTN","ECXTRANS",8,0)
 .W !,"No transmission allowed."
"RTN","ECXTRANS",9,0)
 .D PAUSE
"RTN","ECXTRANS",10,0)
 S ECXQUEUE=$G(^ECX(728,1,"QUEUE"))
"RTN","ECXTRANS",11,0)
 ;** check divisions for transmission
"RTN","ECXTRANS",12,0)
 S ECCHK=$$DIV4^XUSER(.ECTMP,DUZ)
"RTN","ECXTRANS",13,0)
 I 'ECCHK D  Q
"RTN","ECXTRANS",14,0)
 .W !,"You do not have any divisions defined in your user set up and cannot transmit."
"RTN","ECXTRANS",15,0)
 .S DIR(0)="FAO^1:1",DIR("A")="Hit Return to continue." D ^DIR K DIR,X,Y
"RTN","ECXTRANS",16,0)
 W !!,"Your user setup will only allow you to transmit extracts from the"
"RTN","ECXTRANS",17,0)
 W !," following divisions:",!
"RTN","ECXTRANS",18,0)
 S ECDIVVR=""
"RTN","ECXTRANS",19,0)
 F  S ECDIVVR=$O(ECTMP(ECDIVVR)) Q:'(+ECDIVVR)  D
"RTN","ECXTRANS",20,0)
 .K ECXDIC S DA=ECDIVVR,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01"
"RTN","ECXTRANS",21,0)
 .D EN^DIQ1 W !,"   ",$G(ECXDIC(4,DA,.01,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTRANS",22,0)
 W !!,"If you can't select an extract, it is probably from another division.",!
"RTN","ECXTRANS",23,0)
 D PAUSE Q:OUT
"RTN","ECXTRANS",24,0)
 S ECRE="",DIC="^ECX(727,",DIC(0)="AEQM",DIC("A")="Transmit which extract: "
"RTN","ECXTRANS",25,0)
 S DIC("S")="I '$D(^ECX(727,+Y,""L"")),'$D(^ECX(727,+Y,""PURG"")),$D(ECTMP(+$P($G(^ECX(727,+Y,""DIV"")),U,1)))"
"RTN","ECXTRANS",26,0)
 D ^DIC
"RTN","ECXTRANS",27,0)
 I Y<0 W !! Q
"RTN","ECXTRANS",28,0)
 ;get data on extract
"RTN","ECXTRANS",29,0)
 S DR="1;6;3;4;5;15",(ECDA,DA)=+Y,DIQ(0)="E",DIQ="ECXDIQ" D EN^DIQ1
"RTN","ECXTRANS",30,0)
 W !!,ECXDIQ(727,ECDA,6,"E")_" Extract",?42,"Records:    ",ECXDIQ(727,ECDA,5,"E")
"RTN","ECXTRANS",31,0)
 W !,"Generated on: ",ECXDIQ(727,ECDA,1,"E"),?42,"Start date: ",ECXDIQ(727,ECDA,3,"E")
"RTN","ECXTRANS",32,0)
 W !,"Division:     ",$E(ECXDIQ(727,ECDA,15,"E"),1,26),?42,"End date:   ",ECXDIQ(727,ECDA,4,"E")
"RTN","ECXTRANS",33,0)
 I $G(^ECX(727,ECDA,"PURG")) S ECX=^("PURG") D  Q
"RTN","ECXTRANS",34,0)
 .W !!,"Data for this extract was purged on ",$TR($$FMTE^XLFDT(ECX,"5DF")," ","0")
"RTN","ECXTRANS",35,0)
 .K ECX
"RTN","ECXTRANS",36,0)
 .D PAUSE
"RTN","ECXTRANS",37,0)
 I $G(^ECX(727,ECDA,"TR")) S ECX=^("TR") D  Q:OUT
"RTN","ECXTRANS",38,0)
 .S OUT=0
"RTN","ECXTRANS",39,0)
 .W !!,"This extract was transmitted on ",$TR($$FMTE^XLFDT(ECX,"5DF")," ","0")
"RTN","ECXTRANS",40,0)
 .K ECX S DIR(0)="Y",DIR("A")="Do you want to retransmit " D ^DIR K DIR
"RTN","ECXTRANS",41,0)
 .I 'Y S OUT=1 Q
"RTN","ECXTRANS",42,0)
 .K ^ECX(727,ECDA,"TR")
"RTN","ECXTRANS",43,0)
 .S ECRE="re"
"RTN","ECXTRANS",44,0)
 S ECTYPE=$P(^ECX(727,ECDA,0),U,3),ECIEN=+$O(^ECX(727.1,"AC",ECTYPE,0)),ECPIECE=$P(^ECX(727.1,ECIEN,0),U,10)
"RTN","ECXTRANS",45,0)
 I ECPIECE>0,$P($G(^ECX(728,1,7.1)),U,ECPIECE)]"" D  Q
"RTN","ECXTRANS",46,0)
 .D MES^XPDUTL(" ")
"RTN","ECXTRANS",47,0)
 .D MES^XPDUTL("An "_ECTYPE_" Extract is currently running or scheduled to run.")
"RTN","ECXTRANS",48,0)
 .D MES^XPDUTL("Please wait until that job has completed before attempting")
"RTN","ECXTRANS",49,0)
 .D MES^XPDUTL("this transmission.")
"RTN","ECXTRANS",50,0)
 .D MES^XPDUTL(" ")
"RTN","ECXTRANS",51,0)
 .D PAUSE
"RTN","ECXTRANS",52,0)
 S ZTSK=$G(^ECX(727,ECDA,"Q")) I ZTSK D STAT^%ZTLOAD I ZTSK(0) I ZTSK(1)<3 D  Q
"RTN","ECXTRANS",53,0)
 .W !!,"Task ",ZTSK," is already queued to transmit this extract."
"RTN","ECXTRANS",54,0)
 .K ZTSK
"RTN","ECXTRANS",55,0)
 .D PAUSE
"RTN","ECXTRANS",56,0)
 S ZTSAVE("ECDA")="",ZTSAVE("ECXQUEUE")="",ZTSAVE("ECRE")="",ZTRTN="START^ECXTRANS",ZTIO="",ZTDESC="Transmission of extract # "_ECDA
"RTN","ECXTRANS",57,0)
 W !! D ^%ZTLOAD
"RTN","ECXTRANS",58,0)
 I $D(ZTSK) D
"RTN","ECXTRANS",59,0)
 .W !,"Request queued as Task #",ZTSK,"."
"RTN","ECXTRANS",60,0)
 .S ^ECX(727,ECDA,"Q")=ZTSK K ZTSK
"RTN","ECXTRANS",61,0)
 .D PAUSE
"RTN","ECXTRANS",62,0)
 Q
"RTN","ECXTRANS",63,0)
START ; entry point from task
"RTN","ECXTRANS",64,0)
 N DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTRANS",65,0)
 S:$P(^ECX(727,ECDA,0),U,3)'="Prosthetics" ECINST=$P(^ECX(728,1,0),U)
"RTN","ECXTRANS",66,0)
 S:$P(^ECX(727,ECDA,0),U,3)="Prosthetics" ECINST=$P(^("DIV"),U)
"RTN","ECXTRANS",67,0)
 S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTRANS",68,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I"))
"RTN","ECXTRANS",69,0)
 S ECF=^ECX(727,ECDA,"FILE"),ECHEAD=^("HEAD"),ECGRP=^("GRP"),ECED=$P(^(0),U,5),ECPACK=$P(^(0),U,3)
"RTN","ECXTRANS",70,0)
 S ECVER=$G(^("VER")) S:'ECVER ECVER=1 S ECVER=$$RJ^XLFSTR(ECVER,3,0)
"RTN","ECXTRANS",71,0)
 ;all setup extracts for all sites to go to queue DMU - Judy Sine 2/16/95
"RTN","ECXTRANS",72,0)
 I ECPACK["(setup)" S ECXQUEUE="DMU"
"RTN","ECXTRANS",73,0)
 ;all LAR extracts for fy96/fy97 for test sites go to queue DMW;BTSO/AAC 11/18/97
"RTN","ECXTRANS",74,0)
 I ECHEAD="LAR",+ECED<2971001 S ECXQUEUE="DMW"
"RTN","ECXTRANS",75,0)
 K ^TMP($J) S ECHD(1)=ECINST_ECHEAD_$$ECXYM^ECXUTL(ECED)_ECVER,ECRN=0,ECMSN=1,ECMIN=2,ECMAX=200,ECLN=ECMIN
"RTN","ECXTRANS",76,0)
 I ECHEAD="PRO" S ECMAX=150
"RTN","ECXTRANS",77,0)
 I ECHEAD="CLI" S ECMAX=175
"RTN","ECXTRANS",78,0)
 ;* check for and concat nodes 0 and 1 into one message line
"RTN","ECXTRANS",79,0)
 I ECHEAD="ECQ"!(ECHEAD="ECS") D
"RTN","ECXTRANS",80,0)
 .F J=0:0 S J=$O(^ECX(ECF,"AC",ECDA,J)) Q:'J  Q:$$S^%ZTLOAD  I $D(^ECX(ECF,J,0)) D
"RTN","ECXTRANS",81,0)
 ..F JJ=1:1:6 S FIELD(JJ)=$P($G(^ECX(ECF,J,1)),U,JJ)
"RTN","ECXTRANS",82,0)
 ..S ^TMP($J,ECMSN,ECLN,0)=$P(^ECX(ECF,J,0),U,4,37)_U_FIELD(2)
"RTN","ECXTRANS",83,0)
 ..I $D(^ECX(ECF,J,1)) S ^TMP($J,ECMSN,ECLN,0)=^TMP($J,ECMSN,ECLN,0)_U_FIELD(1)_U_FIELD(3)_U_FIELD(4)_U_FIELD(5)_U_FIELD(6)
"RTN","ECXTRANS",84,0)
 ..S ^TMP($J,ECMSN,ECLN,0)=^TMP($J,ECMSN,ECLN,0)_U_"~"
"RTN","ECXTRANS",85,0)
 ..S ECLN=ECLN+1,ECRN=ECRN+1 I ECLN>ECMAX,$O(^ECX(ECF,"AC",ECDA,J)) S ECLN=ECMIN,ECMSN=ECMSN+1
"RTN","ECXTRANS",86,0)
 I ECHEAD'="ECQ"&(ECHEAD'="ECS") D
"RTN","ECXTRANS",87,0)
 .F J=0:0 S J=$O(^ECX(ECF,"AC",ECDA,J)) Q:'J  Q:$$S^%ZTLOAD  I $D(^ECX(ECF,J,0)) D
"RTN","ECXTRANS",88,0)
 ..S ^TMP($J,ECMSN,ECLN,0)=$P(^ECX(ECF,J,0),U,4,100)
"RTN","ECXTRANS",89,0)
 ..I $D(^ECX(ECF,J,1)) S ^TMP($J,ECMSN,ECLN,0)=^TMP($J,ECMSN,ECLN,0)_U_$P(^ECX(ECF,J,1),U,1,100)
"RTN","ECXTRANS",90,0)
 ..S ^TMP($J,ECMSN,ECLN,0)=^TMP($J,ECMSN,ECLN,0)_U_"~"
"RTN","ECXTRANS",91,0)
 ..S ECLN=ECLN+1,ECRN=ECRN+1 I ECLN>ECMAX,$O(^ECX(ECF,"AC",ECDA,J)) S ECLN=ECMIN,ECMSN=ECMSN+1
"RTN","ECXTRANS",92,0)
 ;quit if user stopped task
"RTN","ECXTRANS",93,0)
 I $$S^%ZTLOAD D CLEAN Q
"RTN","ECXTRANS",94,0)
 S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTRANS",95,0)
 ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTRANS",96,0)
 S ECXLNCNT=7
"RTN","ECXTRANS",97,0)
 F ECMS=1:1:ECMSN D SEND
"RTN","ECXTRANS",98,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTRANS",99,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTRANS",100,0)
 S ^TMP($J,"LOC",1,0)="The DSS "_ECPACK_" extract (#"_ECDA_") was "_ECRE_"transmitted on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_". "
"RTN","ECXTRANS",101,0)
 S ^TMP($J,"LOC",3,0)=" "
"RTN","ECXTRANS",102,0)
 S ^TMP($J,"LOC",4,0)="A total of "_ECRN_" records were written."
"RTN","ECXTRANS",103,0)
 S ^TMP($J,"LOC",5,0)="A total of "_ECMSN_" messages were sent."
"RTN","ECXTRANS",104,0)
 S ^TMP($J,"LOC",6,0)="    Message numbers :"
"RTN","ECXTRANS",105,0)
 S XMTEXT="^TMP($J,""LOC"","
"RTN","ECXTRANS",106,0)
 D ^XMD
"RTN","ECXTRANS",107,0)
 S ^ECX(727,ECDA,"TR")=DT
"RTN","ECXTRANS",108,0)
 D CLEAN
"RTN","ECXTRANS",109,0)
 Q
"RTN","ECXTRANS",110,0)
 ;
"RTN","ECXTRANS",111,0)
SEND ;send individual messages
"RTN","ECXTRANS",112,0)
 N ECXDD,DA,DIC,DIE,DINUM,X,XMDUZ,XMTEXT,XMSUB,XMY,XMZ
"RTN","ECXTRANS",113,0)
 S XMSUB="("_ECGRP_") "_ECINST_" - "_ECPACK_" DSS EXTRACT, MESSAGE "_ECMS_" OF "_ECMSN
"RTN","ECXTRANS",114,0)
 S XMDUZ="DSS SYSTEM"
"RTN","ECXTRANS",115,0)
 F J=1:1:ECMIN-1 S ^TMP($J,ECMS,J,0)=ECHD(J)
"RTN","ECXTRANS",116,0)
 S XMY("XXX@Q-"_ECXQUEUE_".VA.GOV")=""
"RTN","ECXTRANS",117,0)
 S XMTEXT="^TMP($J,ECMS,"
"RTN","ECXTRANS",118,0)
 D ^XMD
"RTN","ECXTRANS",119,0)
 S ^TMP($J,"LOC",ECXLNCNT,0)=XMZ,ECXLNCNT=ECXLNCNT+1
"RTN","ECXTRANS",120,0)
 ;store msg # in extract log
"RTN","ECXTRANS",121,0)
 D FIELD^DID(727,301,,"SPECIFIER","ECXDD")
"RTN","ECXTRANS",122,0)
 S DA(1)=ECDA,DIC(0)="L",DIC("P")=ECXDD("SPECIFIER")
"RTN","ECXTRANS",123,0)
 S DIC="^ECX(727,"_DA(1)_",1,",X=XMZ,DINUM=X
"RTN","ECXTRANS",124,0)
 K DD,DO D FILE^DICN
"RTN","ECXTRANS",125,0)
 Q
"RTN","ECXTRANS",126,0)
 ;
"RTN","ECXTRANS",127,0)
CLEAN ;clean-up
"RTN","ECXTRANS",128,0)
 S ZTREQ="@"
"RTN","ECXTRANS",129,0)
 K ^TMP($J),^ECX(727,ECDA,"Q"),XMDUZ,XMTEXT,XMSUB,XMY,XMZ
"RTN","ECXTRANS",130,0)
 D ^ECXKILL
"RTN","ECXTRANS",131,0)
 I $$S^%ZTLOAD K ZTREQ S ZTSTOP=1
"RTN","ECXTRANS",132,0)
 Q
"RTN","ECXTRANS",133,0)
 ;
"RTN","ECXTRANS",134,0)
PAUSE ;pause screen
"RTN","ECXTRANS",135,0)
 S OUT=0
"RTN","ECXTRANS",136,0)
 I $E(IOST)="C" D
"RTN","ECXTRANS",137,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXTRANS",138,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXTRANS",139,0)
 I 'Y S OUT=1
"RTN","ECXTRANS",140,0)
 W !!
"RTN","ECXTRANS",141,0)
 Q
"RTN","ECXTRT")
0^43^B30915106
"RTN","ECXTRT",1,0)
ECXTRT ;ALB/JAP,BIR/DMA,CML,PTD-Treating Specialty Change Extract ; [ 01/10/97  4:33 PM ]
"RTN","ECXTRT",2,0)
 ;;3.0;DSS EXTRACTS;**1,8**;Dec 22, 1997
"RTN","ECXTRT",3,0)
BEG ;entry point from option
"RTN","ECXTRT",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXTRT",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXTRT",6,0)
 Q
"RTN","ECXTRT",7,0)
 ;
"RTN","ECXTRT",8,0)
START ; start package specific extract
"RTN","ECXTRT",9,0)
 N TEMP,LOC,TRT,SPC
"RTN","ECXTRT",10,0)
 S QFLG=0
"RTN","ECXTRT",11,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD") S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXTRT",12,0)
 K TEMP S TRT=0
"RTN","ECXTRT",13,0)
 F  S TRT=$O(^DIC(45.7,TRT)) Q:+TRT=0  S SPC=$P(^DIC(45.7,TRT,0),U,2),$P(TEMP,U,TRT)=SPC
"RTN","ECXTRT",14,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXTRT",15,0)
 ;loop through type 6 movements to get treating specialty and provider changes
"RTN","ECXTRT",16,0)
 F  S ECD=$O(^DGPM("ATT6",ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  F  S ECDA=$O(^DGPM("ATT6",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXTRT",17,0)
 .I $D(^DGPM(ECDA,0)) S EC=^(0),DFN=+$P(EC,U,3) I $D(^DPT(DFN,0)) S PAT=^(0) D  Q:QFLG
"RTN","ECXTRT",18,0)
 ..S ECXMVD1=$P(EC,U,1),ECMT=$P(EC,U,18),ECXADM=$P(EC,U,14),ECXADT=$P($G(^DGPM(ECXADM,0)),U,1)
"RTN","ECXTRT",19,0)
 ..;skip the record if its the admission treat. spec. change for this episode of care
"RTN","ECXTRT",20,0)
 ..Q:ECXADM=$P(EC,U,24)
"RTN","ECXTRT",21,0)
 ..S (ECXLOS,ECXLOSA,ECXLOSP)=""
"RTN","ECXTRT",22,0)
 ..K LOC D SETLOC(DFN,ECXADM,ECPRO,TEMP,.LOC)
"RTN","ECXTRT",23,0)
 ..;get data for current (new) ts movement
"RTN","ECXTRT",24,0)
 ..S ECD1=9999999.9999999-ECXMVD1
"RTN","ECXTRT",25,0)
 ..D FINDLOC(ECD1,.LOC,.ECXSPCN,.ECXPRVN,.ECXATTN,.ECXMOVN,.ECXTRTN)
"RTN","ECXTRT",26,0)
 ..Q:ECXSPCN=""
"RTN","ECXTRT",27,0)
 ..S ECD2=$O(LOC(ECD1)) Q:ECD2=""
"RTN","ECXTRT",28,0)
 ..S ECXMVD2=9999999.9999999-ECD2
"RTN","ECXTRT",29,0)
 ..;get data for previous (losing) ts movement
"RTN","ECXTRT",30,0)
 ..D FINDLOC(ECD2,.LOC,.ECXSPCL,.ECXPRVL,.ECXATTL,.ECXMOVL,.ECXTRTL)
"RTN","ECXTRT",31,0)
 ..;if ts has changed, find los on losing ts
"RTN","ECXTRT",32,0)
 ..D:ECXTRTL'=ECXTRTN PREVTRT^ECXTRT1(.LOC,ECD1,ECD2,ECXTRTL,.ECXLOS)
"RTN","ECXTRT",33,0)
 ..;whether ts has changed or not, see if primary provider has changed
"RTN","ECXTRT",34,0)
 ..;dont bother if there's no data on current primary provider or no change in provider
"RTN","ECXTRT",35,0)
 ..D:(ECXPRVN'="")&(ECXPRVN'=ECXPRVL) PREVPRV^ECXTRT1(.LOC,ECD1,ECXPRVN,ECD2,.ECXPRVL,.ECXLOSP)
"RTN","ECXTRT",36,0)
 ..;whether ts has changed or not, see if attending physician has changed
"RTN","ECXTRT",37,0)
 ..;dont bother if theres no data on current attending physician or no change in attending
"RTN","ECXTRT",38,0)
 ..D:(ECXATTN'="")&(ECXATTN'=ECXATTL) PREVATT^ECXTRT1(.LOC,ECD1,ECXATTN,ECD2,.ECXATTL,.ECXLOSA)
"RTN","ECXTRT",39,0)
 ..S ECXDATE=$$ECXDATE^ECXUTL(ECXMVD1,ECXYM),ECXTIME=$$ECXTIME^ECXUTL(ECXMVD1)
"RTN","ECXTRT",40,0)
 ..S ECXADMDT=$$ECXDATE^ECXUTL(ECXADT,ECXYM),ECXADMTM=$$ECXTIME^ECXUTL(ECXADT),ECXDCDT=""
"RTN","ECXTRT",41,0)
 ..D FILE
"RTN","ECXTRT",42,0)
 ;for nhcu episodes with intervening asih stays, the los calculated here is not accurate,
"RTN","ECXTRT",43,0)
 ;but it never has been; this is best solution within current extract framework;
"RTN","ECXTRT",44,0)
 ;at discharge the los calculated for nhcu apisodes will be the los since admission w/o asih los subtracted;
"RTN","ECXTRT",45,0)
 ;
"RTN","ECXTRT",46,0)
 ;loop through discharges to get last treating specialty
"RTN","ECXTRT",47,0)
 S ECD=ECSD1
"RTN","ECXTRT",48,0)
 F  S ECD=$O(^DGPM("ATT3",ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  F  S ECDA=$O(^DGPM("ATT3",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXTRT",49,0)
 .I $D(^DGPM(ECDA,0)) S EC=^(0),DFN=+$P(EC,U,3) I $D(^DPT(DFN,0)) S PAT=^(0) D  Q:QFLG
"RTN","ECXTRT",50,0)
 ..S ECXMVD1=$P(EC,U,1)
"RTN","ECXTRT",51,0)
 ..S (ECXDATE,ECXDCDT)=$$ECXDATE^ECXUTL(ECXMVD1,ECXYM),ECXTIME=$$ECXTIME^ECXUTL(ECXMVD1)
"RTN","ECXTRT",52,0)
 ..S ECMT=$P(EC,U,18),ECXADM=$P(EC,U,14),ECXADT=$P($G(^DGPM(ECXADM,0)),U,1)
"RTN","ECXTRT",53,0)
 ..S ECXADMDT=$$ECXDATE^ECXUTL(ECXADT,ECXYM),ECXADMTM=$$ECXTIME^ECXUTL(ECXADT)
"RTN","ECXTRT",54,0)
 ..S (ECXTRTN,ECXSPCN,ECXPRVN,ECXATTN)="" S (ECXLOS,ECXLOSA,ECXLOSP)=""
"RTN","ECXTRT",55,0)
 ..K LOC D SETLOC(DFN,ECXADM,ECPRO,TEMP,.LOC)
"RTN","ECXTRT",56,0)
 ..S ECD1=9999999.9999999-ECXMVD1
"RTN","ECXTRT",57,0)
 ..;get ts change just before d/c
"RTN","ECXTRT",58,0)
 ..S ECD2=$O(LOC(ECD1)),ECXMVD2=9999999.9999999-ECD2
"RTN","ECXTRT",59,0)
 ..D FINDLOC(ECD2,.LOC,.ECXSPCL,.ECXPRVL,.ECXATTL,.ECXMOVL,.ECXTRTL)
"RTN","ECXTRT",60,0)
 ..;if closest ts change is admission ts, cant go back any further
"RTN","ECXTRT",61,0)
 ..S TRT=$O(LOC(ECD2,0)),REC=$O(LOC(ECD2,TRT,0))
"RTN","ECXTRT",62,0)
 ..I REC=ECXADM D
"RTN","ECXTRT",63,0)
 ...S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOS=X
"RTN","ECXTRT",64,0)
 ...I ECXPRVL'="" S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOSP=X
"RTN","ECXTRT",65,0)
 ...I ECXATTL'="" S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOSA=X
"RTN","ECXTRT",66,0)
 ..;otherwise, need to find when change to last ts occurred
"RTN","ECXTRT",67,0)
 ..I REC'=ECXADM D
"RTN","ECXTRT",68,0)
 ...D PREVTRT^ECXTRT1(.LOC,ECD1,ECD2,ECXTRTL,.ECXLOS)
"RTN","ECXTRT",69,0)
 ...D PREVPRV^ECXTRT1(.LOC,ECD1,ECXPRVN,ECD2,.ECXPRVL,.ECXLOSP)
"RTN","ECXTRT",70,0)
 ...D PREVATT^ECXTRT1(.LOC,ECD1,ECXATTN,ECD2,.ECXATTL,.ECXLOSA)
"RTN","ECXTRT",71,0)
 ..S:ECXLOS>9999 ECXLOS=9999 S:ECXLOSA>9999 ECXLOSA=9999 S:ECXLOSP>9999 ECXLOSP=9999
"RTN","ECXTRT",72,0)
 ..D FILE
"RTN","ECXTRT",73,0)
 Q
"RTN","ECXTRT",74,0)
 ;
"RTN","ECXTRT",75,0)
SETLOC(DFN,ECXADM,ECXPRO,ECXTEMP,ECXLOC) ;setup the local array from the ATS index
"RTN","ECXTRT",76,0)
 ; output
"RTN","ECXTRT",77,0)
 ; ECXLOC = local array (passed by reference)
"RTN","ECXTRT",78,0)
 ;
"RTN","ECXTRT",79,0)
 N SUB3,SUB4,SUB5,SPC,PRV,ATT,MOV
"RTN","ECXTRT",80,0)
 S SUB3=0
"RTN","ECXTRT",81,0)
 F  S SUB3=$O(^DGPM("ATS",DFN,ECXADM,SUB3)) Q:SUB3=""  D
"RTN","ECXTRT",82,0)
 .S (SUB4,SUB5)=0
"RTN","ECXTRT",83,0)
 .S SUB4=$O(^DGPM("ATS",DFN,ECXADM,SUB3,SUB4)),SUB5=$O(^DGPM("ATS",DFN,ECXADM,SUB3,SUB4,SUB5))
"RTN","ECXTRT",84,0)
 .S ECXLOC(SUB3,SUB4,SUB5)=""
"RTN","ECXTRT",85,0)
 .S SPC=$P(ECXTEMP,U,SUB4)
"RTN","ECXTRT",86,0)
 .S DATA=$G(^DGPM(SUB5,0)),PRV=$P(DATA,U,8),ATT=$P(DATA,U,19),MOV=$P(DATA,U,14)
"RTN","ECXTRT",87,0)
 .S:PRV]"" PRV=ECXPRO_PRV S:ATT]"" ATT=ECXPRO_ATT
"RTN","ECXTRT",88,0)
 .S ECXLOC(SUB3,SUB4,SUB5)=SPC_U_PRV_U_ATT_U_MOV
"RTN","ECXTRT",89,0)
 Q
"RTN","ECXTRT",90,0)
 ;
"RTN","ECXTRT",91,0)
FINDLOC(ECXTSD,ECXLOC,ECXSPC,ECXPRV,ECXATT,ECXMOV,ECXTRT) ;find local array node for current ts movement
"RTN","ECXTRT",92,0)
 ;   input
"RTN","ECXTRT",93,0)
 ;   ECXTSD = inverse date/time for current ts movement; required
"RTN","ECXTRT",94,0)
 ;   ECXLOC = local array; passed by reference; required
"RTN","ECXTRT",95,0)
 ;   output; data from record contained in MOVE
"RTN","ECXTRT",96,0)
 ;   ECXSPC = piece 1 of LOC (passed by reference)
"RTN","ECXTRT",97,0)
 ;   ECXPRV = piece 2 of LOC concatenated to PRO (passed by reference)
"RTN","ECXTRT",98,0)
 ;   ECXATT = piece 3 of LOC concatenated to PRO (passed by reference)
"RTN","ECXTRT",99,0)
 ;   ECXMOV = piece 4 of LOC (passed by reference)
"RTN","ECXTRT",100,0)
 ;   ECXTRT = pointer to file #45.7
"RTN","ECXTRT",101,0)
 ;
"RTN","ECXTRT",102,0)
 N SUB3,SUB4,SUB5,LOC
"RTN","ECXTRT",103,0)
 S (ECXSPC,ECXPRV,ECXATT,ECXMOV)=""
"RTN","ECXTRT",104,0)
 S SUB3=ECXTSD
"RTN","ECXTRT",105,0)
 I $D(ECXLOC(SUB3)) D
"RTN","ECXTRT",106,0)
 .S SUB4=$O(ECXLOC(SUB3,0)),SUB5=$O(ECXLOC(SUB3,SUB4,0))
"RTN","ECXTRT",107,0)
 .S LOC=ECXLOC(SUB3,SUB4,SUB5)
"RTN","ECXTRT",108,0)
 .S ECXTRT=SUB4
"RTN","ECXTRT",109,0)
 .S ECXSPC=$P(LOC,U,1)
"RTN","ECXTRT",110,0)
 .S ECXPRV=$P(LOC,U,2)
"RTN","ECXTRT",111,0)
 .S ECXATT=$P(LOC,U,3)
"RTN","ECXTRT",112,0)
 .S ECXMOV=$P(LOC,U,4)
"RTN","ECXTRT",113,0)
 Q
"RTN","ECXTRT",114,0)
 ;
"RTN","ECXTRT",115,0)
FILE ;file the extract record
"RTN","ECXTRT",116,0)
 ;node0
"RTN","ECXTRT",117,0)
 ;fac^dfn^ssn^name^i/o^date^product^adm date^d/c date^mov#^type^new ts^losing ts^losing ts los
"RTN","ECXTRT",118,0)
 ;^losing attending^movement type^time^adm time^new provider^new attending^losing provider
"RTN","ECXTRT",119,0)
 ;node1
"RTN","ECXTRT",120,0)
 ;mpi^dss dept^losing attending npi^new provider npi^new attending npi^losing provider npi^losing attending los^losing provider los
"RTN","ECXTRT",121,0)
 ;
"RTN","ECXTRT",122,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXTRT",123,0)
 S ECODE=EC7_U_EC23_U_U_DFN_U_$P(PAT,U,9)_U_$E($P($P(PAT,U),",")_"    ",1,4)_U_3_U_ECXDATE_U_U_ECXADMDT_U_ECXDCDT
"RTN","ECXTRT",124,0)
 S ECODE=ECODE_U_ECDA_U_6_U_ECXSPCN_U_ECXSPCL_U_ECXLOS_U_ECXATTL_U_ECMT_U_ECXTIME_U_ECXADMTM_U_ECXPRVN_U_ECXATTN_U_ECXPRVL
"RTN","ECXTRT",125,0)
 S ECODE1=U_U_U_U_U_U_ECXLOSA_U_ECXLOSP
"RTN","ECXTRT",126,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXTRT",127,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXTRT",128,0)
 I $D(ZTQUEUED),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXTRT",129,0)
 Q
"RTN","ECXTRT",130,0)
 ;
"RTN","ECXTRT",131,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXTRT",132,0)
 S ECHEAD="TRT"
"RTN","ECXTRT",133,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXTRT",134,0)
 Q
"RTN","ECXTRT",135,0)
 ;
"RTN","ECXTRT",136,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXTRT",137,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXTRT",138,0)
 Q
"RTN","ECXTRT1")
0^44^B19563640
"RTN","ECXTRT1",1,0)
ECXTRT1 ;ALB/JAP Treating Specialty Change Extract (cont) ; July 22, 1998
"RTN","ECXTRT1",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXTRT1",3,0)
 ;
"RTN","ECXTRT1",4,0)
PREVTRT(ECXLOC,ECXDATE1,ECXDATE2,ECXTRTL,ECXLOS) ;find the date on which the change to the losing treat. spec. occurred
"RTN","ECXTRT1",5,0)
 ;   input
"RTN","ECXTRT1",6,0)
 ;   ECXLOC   = local array built from ATS index on file #405 (passed by reference); required
"RTN","ECXTRT1",7,0)
 ;   ECXDATE1 = inverse date of current (new) ts movement; required)
"RTN","ECXTRT1",8,0)
 ;   ECXDATE2 = inverse date of previous (losing) ts movement; required
"RTN","ECXTRT1",9,0)
 ;   ECXTRTL  = pointer value to file #45.7 for previous facility 
"RTN","ECXTRT1",10,0)
 ;              treating specialty; required
"RTN","ECXTRT1",11,0)
 ;   output
"RTN","ECXTRT1",12,0)
 ;   ECXLOS  = patients length of stay on previous (losing) ts (passed by reference)
"RTN","ECXTRT1",13,0)
 ;
"RTN","ECXTRT1",14,0)
 N DATE,DATE3,X,X1,X2
"RTN","ECXTRT1",15,0)
 S DATE=ECXDATE2,DATE3="",ECXLOS=0
"RTN","ECXTRT1",16,0)
 F  S DATE=$O(ECXLOC(DATE)) Q:DATE=""  S TRT=$O(ECXLOC(DATE,0)) Q:TRT'=ECXTRTL
"RTN","ECXTRT1",17,0)
 ;if date=null, then get immediately previous date by reverse $o
"RTN","ECXTRT1",18,0)
 ;if date=null, this gets the last date in ecxloc array, i.e., the admission ts movement
"RTN","ECXTRT1",19,0)
 S DATE3=$O(ECXLOC(DATE),-1)
"RTN","ECXTRT1",20,0)
 S X1=9999999.9999999-ECXDATE1,X2=9999999.9999999-DATE3 D ^%DTC
"RTN","ECXTRT1",21,0)
 S ECXLOS=X S:ECXLOS>9999 ECXLOS=9999
"RTN","ECXTRT1",22,0)
 Q
"RTN","ECXTRT1",23,0)
 ;
"RTN","ECXTRT1",24,0)
PREVATT(ECXLOC,ECXDATE1,ECXATTN,ECXDATE2,ECXATTL,ECXLOS) ;find the date on which the change to the losing attending occurred
"RTN","ECXTRT1",25,0)
 ;   input
"RTN","ECXTRT1",26,0)
 ;   ECXLOC   = local array built from ATS index on file #405 (passed by reference); required
"RTN","ECXTRT1",27,0)
 ;   ECXDATE1 = inverse date of current (new) attending; required)
"RTN","ECXTRT1",28,0)
 ;   ECXATTN  = specifier for current (new) attending; required
"RTN","ECXTRT1",29,0)
 ;   ECXDATE2 = inverse date of previous (losing) attending; required
"RTN","ECXTRT1",30,0)
 ;   ECXATTL  = specifier for previous (losing) attending (passed by reference); required
"RTN","ECXTRT1",31,0)
 ;   output
"RTN","ECXTRT1",32,0)
 ;   ECXLOSA  = patients length of stay with previous (losing) attending (passed by reference)
"RTN","ECXTRT1",33,0)
 ;
"RTN","ECXTRT1",34,0)
 N DATE,DATE3,X,X1,X2,TRT,REC,ATT,OUT
"RTN","ECXTRT1",35,0)
 S (DATE,DATE3)=ECXDATE2,ECXLOSA="",OUT=0
"RTN","ECXTRT1",36,0)
 I ECXATTL'="" D
"RTN","ECXTRT1",37,0)
 .F  S DATE=$O(ECXLOC(DATE)) Q:DATE=""  S TRT=$O(ECXLOC(DATE,0)),REC=$O(ECXLOC(DATE,TRT,0)) D  Q:OUT=1
"RTN","ECXTRT1",38,0)
 ..S ATT=$P(ECXLOC(DATE,TRT,REC),U,3)
"RTN","ECXTRT1",39,0)
 ..;if provider is changed, then quit without resetting date3, and quit loop
"RTN","ECXTRT1",40,0)
 ..I ATT'="",ATT'=ECXATTL S OUT=1
"RTN","ECXTRT1",41,0)
 ..;there's probably always data on attending, so this may not be needed;
"RTN","ECXTRT1",42,0)
 ..;but if att=null, then dont know if provider in ecxattl was attending or not, so don't reset date3;
"RTN","ECXTRT1",43,0)
 ..;reset date3 only if know for sure
"RTN","ECXTRT1",44,0)
 ..I ATT=ECXATTL S DATE3=DATE
"RTN","ECXTRT1",45,0)
 .;so date3 is earliest known date for attending specified in ecxattl
"RTN","ECXTRT1",46,0)
 .S X1=9999999.9999999-ECXDATE1,X2=9999999.9999999-DATE3 D ^%DTC
"RTN","ECXTRT1",47,0)
 .S ECXLOSA=X
"RTN","ECXTRT1",48,0)
 ;theres probably always data on attending, so this may not be needed;
"RTN","ECXTRT1",49,0)
 ;but if ecxattl is null, then need to find valid previous attending
"RTN","ECXTRT1",50,0)
 I ECXATTL="" D
"RTN","ECXTRT1",51,0)
 .;ecxattn will also be null if evaluating discharge movements
"RTN","ECXTRT1",52,0)
 .F  S DATE=$O(ECXLOC(DATE)) Q:DATE=""  S TRT=$O(ECXLOC(DATE,0)),REC=$O(ECXLOC(DATE,TRT,0)) D  Q:OUT=1
"RTN","ECXTRT1",53,0)
 ..S ATT=$P(ECXLOC(DATE,TRT,REC),U,3)
"RTN","ECXTRT1",54,0)
 ..;if no change in attending, then keep ecxlosa=null
"RTN","ECXTRT1",55,0)
 ..I ATT'="",ATT=ECXATTN S OUT=1
"RTN","ECXTRT1",56,0)
 ..I ATT'="",ATT'=ECXATTN D
"RTN","ECXTRT1",57,0)
 ...;reset ecxattl to send back to caller and calculate los
"RTN","ECXTRT1",58,0)
 ...S OUT=1,ECXATTL=ATT,DATE3=DATE
"RTN","ECXTRT1",59,0)
 ...S X1=99999999.9999999-ECXDATE1,X2=9999999.9999999-DATE3 D ^%DTC
"RTN","ECXTRT1",60,0)
 ...S ECXLOSA=X
"RTN","ECXTRT1",61,0)
 ;it is possible that ecxattl and ecxlosa will still be null
"RTN","ECXTRT1",62,0)
 S:ECXLOSA>9999 ECXLOSA=9999
"RTN","ECXTRT1",63,0)
 Q
"RTN","ECXTRT1",64,0)
 ;
"RTN","ECXTRT1",65,0)
PREVPRV(ECXLOC,ECXDATE1,ECXPRVN,ECXDATE2,ECXPRVL,ECXLOS) ;find the date on which the change to the losing primary provider occurred
"RTN","ECXTRT1",66,0)
 ;   input
"RTN","ECXTRT1",67,0)
 ;   ECXLOC   = local array built from ATS index on file #405 (passed by reference); required
"RTN","ECXTRT1",68,0)
 ;   ECXDATE1 = inverse date of current (new) primary provider; required)
"RTN","ECXTRT1",69,0)
 ;   ECXPRVN  = specifier for current (new) primary provider; required
"RTN","ECXTRT1",70,0)
 ;   ECXDATE2 = inverse date of previous (losing) primary provider; required
"RTN","ECXTRT1",71,0)
 ;   ECXPRVL  = specifier for previous (losing) primary provider 9passed by reference); required
"RTN","ECXTRT1",72,0)
 ;   output
"RTN","ECXTRT1",73,0)
 ;   ECXLOSP  = patients length of stay with previous (losing) primary provider (passed by reference)
"RTN","ECXTRT1",74,0)
 ;
"RTN","ECXTRT1",75,0)
 N DATE,DATE3,X,X1,X2,TRT,REC,PRV,OUT
"RTN","ECXTRT1",76,0)
 S (DATE,DATE3)=ECXDATE2,ECXLOSP="",OUT=0
"RTN","ECXTRT1",77,0)
 I ECXPRVL'="" D
"RTN","ECXTRT1",78,0)
 .F  S DATE=$O(ECXLOC(DATE)) Q:DATE=""  S TRT=$O(ECXLOC(DATE,0)),REC=$O(ECXLOC(DATE,TRT,0)) D  Q:OUT=1
"RTN","ECXTRT1",79,0)
 ..S PRV=$P(ECXLOC(DATE,TRT,REC),U,2)
"RTN","ECXTRT1",80,0)
 ..;if provider is changed, then quit without resetting date3, and quit loop
"RTN","ECXTRT1",81,0)
 ..I PRV'="",PRV'=ECXPRVL S OUT=1
"RTN","ECXTRT1",82,0)
 ..;if prv=null, then don't know if provider in ecxprvl was patient's provider or not, so don't reset date3;
"RTN","ECXTRT1",83,0)
 ..;reset date3 only if know for sure
"RTN","ECXTRT1",84,0)
 ..I PRV=ECXPRVL S DATE3=DATE
"RTN","ECXTRT1",85,0)
 .;so date3 is earliest known date for attending specified in ecxattl
"RTN","ECXTRT1",86,0)
 .S X1=9999999.9999999-ECXDATE1,X2=9999999.9999999-DATE3 D ^%DTC
"RTN","ECXTRT1",87,0)
 .S ECXLOSP=X
"RTN","ECXTRT1",88,0)
 ;if ecxprvl is null, then need to find valid previous primary provider
"RTN","ECXTRT1",89,0)
 I ECXPRVL="" D
"RTN","ECXTRT1",90,0)
 .;ecxprvn will also be null if evaluating discharge movements
"RTN","ECXTRT1",91,0)
 .F  S DATE=$O(ECXLOC(DATE)) Q:DATE=""  S TRT=$O(ECXLOC(DATE,0)),REC=$O(ECXLOC(DATE,TRT,0)) D  Q:OUT=1
"RTN","ECXTRT1",92,0)
 ..S PRV=$P(ECXLOC(DATE,TRT,REC),U,2)
"RTN","ECXTRT1",93,0)
 ..;if no change in primary provider, then keep ecxlosp=null
"RTN","ECXTRT1",94,0)
 ..I PRV'="",PRV=ECXPRVN S OUT=1
"RTN","ECXTRT1",95,0)
 ..I PRV'="",PRV'=ECXPRVN D
"RTN","ECXTRT1",96,0)
 ...;reset ecxprvl to send back to caller and calculate los
"RTN","ECXTRT1",97,0)
 ...S OUT=1,ECXPRVL=PRV,DATE3=DATE
"RTN","ECXTRT1",98,0)
 ...S X1=99999999.9999999-ECXDATE1,X2=9999999.9999999-DATE3 D ^%DTC
"RTN","ECXTRT1",99,0)
 ...S ECXLOSP=X
"RTN","ECXTRT1",100,0)
 ;it is possible that ecxprvl and ecxlosp will still be null
"RTN","ECXTRT1",101,0)
 S:ECXLOSP>9999 ECXLOSP=9999
"RTN","ECXTRT1",102,0)
 Q
"RTN","ECXUD")
0^47^B9627586
"RTN","ECXUD",1,0)
ECXUD ;ALB/JAP,BIR/DMA,PTD-Extract from UNIT DOSE EXTRACT DATA File (#728.904) ; 11/01/96 14:35
"RTN","ECXUD",2,0)
 ;;3.0;DSS EXTRACTS;**10,8**;Dec 22, 1997
"RTN","ECXUD",3,0)
BEG ;entry point from option
"RTN","ECXUD",4,0)
 I '$O(^ECX(728.904,"A",0)) W !,"There are no unit dose orders to extract",!! R X:5 K X Q
"RTN","ECXUD",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXUD",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXUD",7,0)
 Q
"RTN","ECXUD",8,0)
 ;
"RTN","ECXUD",9,0)
START ;start package specific extract
"RTN","ECXUD",10,0)
 N QFLG
"RTN","ECXUD",11,0)
 S QFLG=0
"RTN","ECXUD",12,0)
 S ECED=ECED+.3
"RTN","ECXUD",13,0)
 F ECD=ECSD1:0 S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:QFLG  F J=0:0 S J=$O(^ECX(728.904,"A",ECD,J)) Q:'J  I $D(^ECX(728.904,J,0)) S DATA=^(0),^(1)=$P(EC23,U,2),^ECX(728.904,"AC",$P(EC23,U,2),J)="" D STUFF Q:QFLG
"RTN","ECXUD",14,0)
 Q
"RTN","ECXUD",15,0)
 ;
"RTN","ECXUD",16,0)
STUFF ;get data
"RTN","ECXUD",17,0)
 N X
"RTN","ECXUD",18,0)
 S DFN=$P(DATA,U,2) Q:'$D(^DPT(DFN,0))
"RTN","ECXUD",19,0)
 S SSN=$P(^DPT(DFN,0),U,9),ECNA=$E($P($P(^(0),U),",")_"    ",1,4)
"RTN","ECXUD",20,0)
 S ECPRO=$P(DATA,U,7),ECPRO=$E($P(ECPRO,";",2))_$P(ECPRO,";")
"RTN","ECXUD",21,0)
 S X=$$INP^ECXUTL2(DFN,ECD),ECA=$P(X,U,1),ECMN=$P(X,U,2),ECTS=$P(X,U,3),ECADM=$P(X,U,4)
"RTN","ECXUD",22,0)
 S W=$P(DATA,U,6),ECDIV=$P($G(^DIC(42,+W,0)),U,11),W=$P($G(^DIC(42,+W,44)),U)
"RTN","ECXUD",23,0)
 S ECCAT=$P(^PSDRUG(+$P(DATA,U,4),0),U,2),ECINV=$P(^(0),U,3),ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXUD",24,0)
 S ECNDC=$P($G(^PSDRUG(+$P(DATA,U,4),2)),U,4),ECNDF=$G(^("ND"))
"RTN","ECXUD",25,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXUD",26,0)
 S P1=$P(ECNDF,U),P3=$P(ECNDF,U,3)
"RTN","ECXUD",27,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXUD",28,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXUD",29,0)
 D FILE K P1,P3
"RTN","ECXUD",30,0)
 Q
"RTN","ECXUD",31,0)
 ;
"RTN","ECXUD",32,0)
FILE ;file record
"RTN","ECXUD",33,0)
 ;node0
"RTN","ECXUD",34,0)
 ;facility^dfn^ssn^name^in/out^day^drug category^quantity^ward^provider^cost^mov #^treat spec^ndc^new feeder key^investigational^udp time^adm date^adm time
"RTN","ECXUD",35,0)
 ;node1
"RTN","ECXUD",36,0)
 ;mpi^dss dept^provider npi
"RTN","ECXUD",37,0)
 N DA,DIK
"RTN","ECXUD",38,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXUD",39,0)
 S ECODE=EC7_U_EC23
"RTN","ECXUD",40,0)
 S ECODE=ECODE_U_ECDIV_U_DFN_U_SSN_U_ECNA_U_"3"_U_$$ECXDATE^ECXUTL($P(DATA,U,3),ECXYM)_U_ECCAT_U_$P(DATA,U,5)_U_W_U_ECPRO_U_$P(DATA,U,8)_U_ECMN_U_ECTS
"RTN","ECXUD",41,0)
 S ECODE=ECODE_U_ECNDC_U_ECNFC_U_ECINV_U_$E($P($P(DATA,U,3),".",2)_"000000",1,6)_U_$$ECXDATE^ECXUTL(ECADM,ECXYM)_U_$$ECXTIME^ECXUTL(ECADM)
"RTN","ECXUD",42,0)
 S ECODE1=U_U
"RTN","ECXUD",43,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXUD",44,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXUD",45,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXUD",46,0)
 Q
"RTN","ECXUD",47,0)
 ;
"RTN","ECXUD",48,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXUD",49,0)
 S ECHEAD="UDP"
"RTN","ECXUD",50,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXUD",51,0)
 S ECSD=$O(^ECX(728.904,"A",0)),ECED=$$FMADD^XLFDT($E(ECSD,1,5)+1+($E(ECSD,4,5)=12*8800)_"01",-1)
"RTN","ECXUD",52,0)
 Q
"RTN","ECXUD",53,0)
 ;
"RTN","ECXUD",54,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXUD",55,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXUD1")
0^48^B407157
"RTN","ECXUD1",1,0)
ECXUD1 ;ALB/JAP,BIR/DMA-Store Data from Unit Dose Package into 728.904 ; 26 Sep 95 / 12:44 PM
"RTN","ECXUD1",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXUD1",3,0)
 ;called from 2 unit dose routines - PSGPLF and PSGAMSA
"RTN","ECXUD1",4,0)
 ;load UD data into an EC file for later extract to vendor
"RTN","ECXUD1",5,0)
 N DA,DIK
"RTN","ECXUD1",6,0)
 S X="ECXYUD1" X ^%ZOSF("TEST") I $T D ^ECXYUD1
"RTN","ECXUD1",7,0)
 I '$D(^ECX(728.904)) Q
"RTN","ECXUD1",8,0)
 L +^ECX(728.904,0):1 Q:'$T
"RTN","ECXUD1",9,0)
 S EC=$O(^ECX(728.904,999999999),-1),EC=EC+1
"RTN","ECXUD1",10,0)
 S ^ECX(728.904,EC,0)=EC_U_ECUD L -^ECX(728.904,0)
"RTN","ECXUD1",11,0)
 S DA=EC,DIK="^ECX(728.904," D IX^DIK
"RTN","ECXUD1",12,0)
 K EC
"RTN","ECXUD1",13,0)
 Q
"RTN","ECXUTL")
0^49^B33291575
"RTN","ECXUTL",1,0)
ECXUTL ;ALB/JAP - Utilities for DSS Extracts ;Sep 17, 1997
"RTN","ECXUTL",2,0)
 ;;3.0;DSS EXTRACTS;**1,5,8**;Dec 22, 1997
"RTN","ECXUTL",3,0)
 ;
"RTN","ECXUTL",4,0)
ECXYM(ECXFMDT) ;extrinsic function
"RTN","ECXUTL",5,0)
 ;converts any FM internal format date or date/time to a 6-character string
"RTN","ECXUTL",6,0)
 ;
"RTN","ECXUTL",7,0)
 ;   input
"RTN","ECXUTL",8,0)
 ;   ECXFMDT = date or date/time; FM internal format (required)
"RTN","ECXUTL",9,0)
 ;   output
"RTN","ECXUTL",10,0)
 ;   ECXYM = YYYYMM string
"RTN","ECXUTL",11,0)
 ;
"RTN","ECXUTL",12,0)
 N MONTH,YEAR,CENTURY,ECXYM
"RTN","ECXUTL",13,0)
 ;
"RTN","ECXUTL",14,0)
 ;error checks
"RTN","ECXUTL",15,0)
 I +ECXFMDT'=ECXFMDT S ECXYM="000000" Q ECXYM
"RTN","ECXUTL",16,0)
 I $L($P(ECXFMDT,"."))'=7 S ECXYM="000000" Q ECXYM
"RTN","ECXUTL",17,0)
 I +$E(ECXFMDT,4,5)<1!(+$E(ECXFMDT,4,5)>12) S ECXYM="000000" Q ECXYM
"RTN","ECXUTL",18,0)
 ;
"RTN","ECXUTL",19,0)
 S MONTH=$E(ECXFMDT,4,5),YEAR=$E(ECXFMDT,2,3),CENTURY=$E(ECXFMDT,1)+17
"RTN","ECXUTL",20,0)
 S ECXYM=CENTURY_YEAR_MONTH
"RTN","ECXUTL",21,0)
 Q ECXYM
"RTN","ECXUTL",22,0)
 ;
"RTN","ECXUTL",23,0)
ECXYMX(ECXYM) ;extrinsic function
"RTN","ECXUTL",24,0)
 ;converts a 6-character numeric string of format YYYYMM
"RTN","ECXUTL",25,0)
 ;to a FM external format date
"RTN","ECXUTL",26,0)
 ;
"RTN","ECXUTL",27,0)
 ;   input
"RTN","ECXUTL",28,0)
 ;   ECXYM = YYYYMM string (required)
"RTN","ECXUTL",29,0)
 ;   output
"RTN","ECXUTL",30,0)
 ;   ECXYMX = FM external format date;
"RTN","ECXUTL",31,0)
 ;            SEP 1997
"RTN","ECXUTL",32,0)
 ;   error code
"RTN","ECXUTL",33,0)
 ;   if input problem, then "000000" returned
"RTN","ECXUTL",34,0)
 ;
"RTN","ECXUTL",35,0)
 N Y,%DT,CENTURY,FMCENT,ECXYMX
"RTN","ECXUTL",36,0)
 ;
"RTN","ECXUTL",37,0)
 ;error checks
"RTN","ECXUTL",38,0)
 I ECXYM="" S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",39,0)
 I +ECXYM'=ECXYM S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",40,0)
 I $L(ECXYM)'=6 S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",41,0)
 I +$E(ECXYM,1,4)<1800 S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",42,0)
 I +$E(ECXYM,5,6)<1!(+$E(ECXYM,5,6)>12) S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",43,0)
 ;
"RTN","ECXUTL",44,0)
 S CENTURY=$E(ECXYM,1,2)
"RTN","ECXUTL",45,0)
 S FMCENT=CENTURY-17
"RTN","ECXUTL",46,0)
 S Y=FMCENT_$E(ECXYM,3,6) D DD^%DT S ECXYMX=Y
"RTN","ECXUTL",47,0)
 ;
"RTN","ECXUTL",48,0)
 ;error checks
"RTN","ECXUTL",49,0)
 I $L(ECXYMX)'=8 S ECXYMX="000000"
"RTN","ECXUTL",50,0)
 I "JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC"'[$E(ECXYMX,1,3) S ECXYMX="000000"
"RTN","ECXUTL",51,0)
 Q ECXYMX
"RTN","ECXUTL",52,0)
 ;
"RTN","ECXUTL",53,0)
ECXDATE(ECXFMDT,ECXYM) ;extrinsic function
"RTN","ECXUTL",54,0)
 ;converts any FM internal format date or date/time to a 8-character string
"RTN","ECXUTL",55,0)
 ;
"RTN","ECXUTL",56,0)
 ;   input
"RTN","ECXUTL",57,0)
 ;   ECXFMDT = date or date/time; FM internal format (required)
"RTN","ECXUTL",58,0)
 ;   ECXYM = YYYYMM; year/month 6-character string (required)
"RTN","ECXUTL",59,0)
 ;   output
"RTN","ECXUTL",60,0)
 ;   ECXDATE = YYYYMMDD string
"RTN","ECXUTL",61,0)
 ;   error code
"RTN","ECXUTL",62,0)
 ;   "000000" returned, if problem with input
"RTN","ECXUTL",63,0)
 ;
"RTN","ECXUTL",64,0)
 N MONTH,YEAR,CENTURY,DAY,ECXDATE
"RTN","ECXUTL",65,0)
 ;
"RTN","ECXUTL",66,0)
 ;error checks
"RTN","ECXUTL",67,0)
 I +ECXYM'=ECXYM S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",68,0)
 I $L(ECXYM)'=6 S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",69,0)
 I +$E(ECXYM,1,4)<1800 S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",70,0)
 I +$E(ECXYM,5,6)<1!($E(ECXYM,5,6)>12) S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",71,0)
 ;special case where ecxfmdt is null; default to year/month of ecxym
"RTN","ECXUTL",72,0)
 I ECXFMDT="" S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",73,0)
 ;error checks
"RTN","ECXUTL",74,0)
 I +ECXFMDT'=ECXFMDT S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",75,0)
 I $L(ECXFMDT)<7 S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",76,0)
 I +$E(ECXFMDT,4,5)>12 S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",77,0)
 I +$E(ECXFMDT,6,7)>31 S ECXFMDT=$E(ECXFMDT,1,5)_"01"
"RTN","ECXUTL",78,0)
 ;default to 1st day of month
"RTN","ECXUTL",79,0)
 S DAY=$E(ECXFMDT,6,7) S:DAY="00" DAY="01"
"RTN","ECXUTL",80,0)
 ;default to month of ecxym
"RTN","ECXUTL",81,0)
 S MONTH=$E(ECXFMDT,4,5) S:MONTH="00" MONTH=$E(ECXYM,5,6)
"RTN","ECXUTL",82,0)
 S YEAR=$E(ECXFMDT,2,3)
"RTN","ECXUTL",83,0)
 S CENTURY=$E(ECXFMDT,1)+17
"RTN","ECXUTL",84,0)
 S ECXDATE=CENTURY_YEAR_MONTH_DAY
"RTN","ECXUTL",85,0)
 Q ECXDATE
"RTN","ECXUTL",86,0)
 ;
"RTN","ECXUTL",87,0)
ECXDATEX(ECXDATE) ;extrinsic function
"RTN","ECXUTL",88,0)
 ;converts an 8-character numeric string of format YYYYMMDD
"RTN","ECXUTL",89,0)
 ;to a FM external format date
"RTN","ECXUTL",90,0)
 ;
"RTN","ECXUTL",91,0)
 ;   input
"RTN","ECXUTL",92,0)
 ;   ECXDATE = YYYYMMDD string (required)
"RTN","ECXUTL",93,0)
 ;   output
"RTN","ECXUTL",94,0)
 ;   ECXDATEX = FM external format date;
"RTN","ECXUTL",95,0)
 ;              SEP 12, 1997
"RTN","ECXUTL",96,0)
 ;   error code
"RTN","ECXUTL",97,0)
 ;   if input problem, then "000000" returned
"RTN","ECXUTL",98,0)
 ;
"RTN","ECXUTL",99,0)
 N Y,%DT,CENTURY,FMCENT,ECXDATEX
"RTN","ECXUTL",100,0)
 ;
"RTN","ECXUTL",101,0)
 ;error checks
"RTN","ECXUTL",102,0)
 I +ECXDATE'=ECXDATE S ECXDATEX="000000" Q ECXDATEX
"RTN","ECXUTL",103,0)
 I $L(ECXDATE)'=8 S ECXDATEX="000000" Q ECXDATEX
"RTN","ECXUTL",104,0)
 I +$E(ECXDATE,7,8)>31 S ECXDATEX="000000" Q ECXDATEX
"RTN","ECXUTL",105,0)
 ;
"RTN","ECXUTL",106,0)
 S CENTURY=$E(ECXDATE,1,2)
"RTN","ECXUTL",107,0)
 S FMCENT=CENTURY-17
"RTN","ECXUTL",108,0)
 S Y=FMCENT_$E(ECXDATE,3,8) D DD^%DT S ECXDATEX=Y
"RTN","ECXUTL",109,0)
 ;
"RTN","ECXUTL",110,0)
 ;error checks
"RTN","ECXUTL",111,0)
 I $L(ECXDATEX)'=12 S ECXDATEX="000000"
"RTN","ECXUTL",112,0)
 I "JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC"'[$E(ECXDATEX,1,3) S ECXDATEX="000000"
"RTN","ECXUTL",113,0)
 Q ECXDATEX
"RTN","ECXUTL",114,0)
 ;
"RTN","ECXUTL",115,0)
ECXDOB(ECXFMDT) ;extrinsic function
"RTN","ECXUTL",116,0)
 ;converts a FM internal format date or date/time to a 6-character string
"RTN","ECXUTL",117,0)
 ;if ecxfmdt is null, the function returns 19420101
"RTN","ECXUTL",118,0)
 ;   input
"RTN","ECXUTL",119,0)
 ;   ECXFMDT = date or date/time (required); 
"RTN","ECXUTL",120,0)
 ;             must be valid FM internal format 
"RTN","ECXUTL",121,0)
 ;   output
"RTN","ECXUTL",122,0)
 ;   ECXDOB = YYYYMMDD string (required);
"RTN","ECXUTL",123,0)
 ;            defaults to 19420101
"RTN","ECXUTL",124,0)
 ;
"RTN","ECXUTL",125,0)
 N MONTH,YEAR,CENTURY,DAY,ECXDOB
"RTN","ECXUTL",126,0)
 ;only consider date portion
"RTN","ECXUTL",127,0)
 S ECXFMDT=$P(ECXFMDT,".",1)
"RTN","ECXUTL",128,0)
 ;special case where ecxfmdt is null
"RTN","ECXUTL",129,0)
 I ECXFMDT="" S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",130,0)
 ;error checks - return default
"RTN","ECXUTL",131,0)
 I +ECXFMDT'=ECXFMDT S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",132,0)
 I $L(ECXFMDT)<7 S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",133,0)
 I +ECXFMDT>DT S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",134,0)
 ;default to 1st day of month
"RTN","ECXUTL",135,0)
 S DAY=$E(ECXFMDT,6,7) S:DAY="00"!(+DAY>31) DAY="01"
"RTN","ECXUTL",136,0)
 ;default to 1st month of year
"RTN","ECXUTL",137,0)
 S MONTH=$E(ECXFMDT,4,5) S:MONTH="00"!(+MONTH>12) MONTH="01",DAY="01"
"RTN","ECXUTL",138,0)
 S YEAR=$E(ECXFMDT,2,3)
"RTN","ECXUTL",139,0)
 S CENTURY=$E(ECXFMDT,1)+17
"RTN","ECXUTL",140,0)
 S ECXDOB=CENTURY_YEAR_MONTH_DAY
"RTN","ECXUTL",141,0)
 Q ECXDOB
"RTN","ECXUTL",142,0)
 ;
"RTN","ECXUTL",143,0)
ECXTIME(ECXFMDT) ;extrinsic function
"RTN","ECXUTL",144,0)
 ;converts Fileman internal date/time to 6-character time string
"RTN","ECXUTL",145,0)
 ;format HHMMSS
"RTN","ECXUTL",146,0)
 ;
"RTN","ECXUTL",147,0)
 ;   input
"RTN","ECXUTL",148,0)
 ;   ECXFMDT = date or date/time (required); 
"RTN","ECXUTL",149,0)
 ;             must be valid FM internal format
"RTN","ECXUTL",150,0)
 ;   output
"RTN","ECXUTL",151,0)
 ;   ECXTIME = 6-character numeric string;
"RTN","ECXUTL",152,0)
 ;             format HHMMSS; string length always 6
"RTN","ECXUTL",153,0)
 ;
"RTN","ECXUTL",154,0)
 N J,JJ,TIME,HH,MM,SS,ECXTIME
"RTN","ECXUTL",155,0)
 ;if any non-numerics, set default
"RTN","ECXUTL",156,0)
 I +ECXFMDT=0 S ECXTIME="000300" Q ECXTIME
"RTN","ECXUTL",157,0)
 ;use only time portion of fileman internal format
"RTN","ECXUTL",158,0)
 S TIME=$P(ECXFMDT,".",2),TIME=$E(TIME,1,6)
"RTN","ECXUTL",159,0)
 ;if time unknown, set default
"RTN","ECXUTL",160,0)
 I TIME="" S ECXTIME="000300" Q ECXTIME
"RTN","ECXUTL",161,0)
 ;be sure time is 6 characters
"RTN","ECXUTL",162,0)
 S TIME=$$LJ^XLFSTR(TIME,6,0)
"RTN","ECXUTL",163,0)
 ;error checks -- set default
"RTN","ECXUTL",164,0)
 S HH=$E(TIME,1,2),MM=$E(TIME,3,4),SS=$E(TIME,5,6)
"RTN","ECXUTL",165,0)
 I +HH>23 S ECXTIME="000300" Q ECXTIME
"RTN","ECXUTL",166,0)
 I +MM>59 S MM="59"
"RTN","ECXUTL",167,0)
 I +SS>59 S SS="59"
"RTN","ECXUTL",168,0)
 S ECXTIME=HH_MM_SS
"RTN","ECXUTL",169,0)
 Q ECXTIME
"RTN","ECXUTL",170,0)
 ;
"RTN","ECXUTL",171,0)
ECXTIMEX(ECXTIME,ECXMIL) ;extrinsic function
"RTN","ECXUTL",172,0)
 ;converts a 6-character time string to external, user readable format
"RTN","ECXUTL",173,0)
 ;used as output transform for time fields in many dss extract files
"RTN","ECXUTL",174,0)
 ;   input
"RTN","ECXUTL",175,0)
 ;   ECXTIME = 6-character numeric string (required); 
"RTN","ECXUTL",176,0)
 ;   ECXMIL = if "1", then return military time (optional)          
"RTN","ECXUTL",177,0)
 ;   output
"RTN","ECXUTL",178,0)
 ;   ECXTIMEX = character string;
"RTN","ECXUTL",179,0)
 ;              if ECXMIL=1, format HH:MM:SS
"RTN","ECXUTL",180,0)
 ;              otherwise, hours:mins AM/PM
"RTN","ECXUTL",181,0)
 ;   error code
"RTN","ECXUTL",182,0)
 ;   if input problem, then "000000" returned
"RTN","ECXUTL",183,0)
 ;              
"RTN","ECXUTL",184,0)
 N TIME,HH,MM,SS,ECXTIMEX,J,JJ
"RTN","ECXUTL",185,0)
 ;error checks
"RTN","ECXUTL",186,0)
 I $L(ECXTIME)'=6 S ECXTIMEX="000000" Q ECXTIMEX
"RTN","ECXUTL",187,0)
 F J=1:1:6 S JJ=$E(ECXTIME,J) I $A(JJ)<48!($A(JJ)>57) S ECXTIMEX="000000" Q
"RTN","ECXUTL",188,0)
 I $D(ECXTIMEX) Q ECXTIMEX
"RTN","ECXUTL",189,0)
 S HH=$E(ECXTIME,1,2),MM=$E(ECXTIME,3,4),SS=$E(ECXTIME,5,6)
"RTN","ECXUTL",190,0)
 I +HH>23!(+MM>59)!(+SS>59) S ECXTIMEX="000000" Q ECXTIMEX
"RTN","ECXUTL",191,0)
 ;if ecxmil=1, return military time
"RTN","ECXUTL",192,0)
 I $G(ECXMIL) S ECXTIMEX=HH_":"_MM_":"_SS Q ECXTIMEX
"RTN","ECXUTL",193,0)
 ;otherwise, use am/pm format
"RTN","ECXUTL",194,0)
 S X="0."_ECXTIME
"RTN","ECXUTL",195,0)
 S X=$E($P(X,".",2)_"0000",1,4),%=X>1159 S:X>1259 X=X-1200
"RTN","ECXUTL",196,0)
 S X=X\100_":"_$E(X#100+100,2,3)_" "_$E("AP",%+1)_"M"
"RTN","ECXUTL",197,0)
 S ECXTIMEX=X
"RTN","ECXUTL",198,0)
 Q ECXTIMEX
"RTN","ECXUTL",199,0)
 ;
"RTN","ECXUTL",200,0)
AOIRPOW(ECXDFN,ECXAIP) ;get data on ao, ir, pow status
"RTN","ECXUTL",201,0)
 ;
"RTN","ECXUTL",202,0)
 ;   input
"RTN","ECXUTL",203,0)
 ;   ECXDFN = ien in file #2 (required)
"RTN","ECXUTL",204,0)
 ;   ECXAIP = array for returned data (required)
"RTN","ECXUTL",205,0)
 ;            (passed by reference)
"RTN","ECXUTL",206,0)
 ;
"RTN","ECXUTL",207,0)
 ;   output
"RTN","ECXUTL",208,0)
 ;   ECXAIP("AO") = agent orange status
"RTN","ECXUTL",209,0)
 ;   ECXAIP("IR") = ion. radiation status
"RTN","ECXUTL",210,0)
 ;   ECXAIP("POW") = pow status
"RTN","ECXUTL",211,0)
 ;   ECXAIP("POWL") = pow location/period
"RTN","ECXUTL",212,0)
 ;
"RTN","ECXUTL",213,0)
 N J
"RTN","ECXUTL",214,0)
 S ECXAIP("AO")="",ECXAIP("IR")="",ECXAIP("POW")="",ECXAIP("POWL")=""
"RTN","ECXUTL",215,0)
 S ECXAIP("AO")=$P($G(^DPT(ECXDFN,.321)),U,2),ECXAIP("IR")=$P($G(^(.321)),U,3)
"RTN","ECXUTL",216,0)
 S ECXAIP("POW")=$P($G(^DPT(ECXDFN,.52)),U,5),ECXAIP("POWL")=$P($G(^(.52)),U,6)
"RTN","ECXUTL",217,0)
 F J="AO","IR","POW" I ECXAIP(J)="" S ECXAIP(J)="U"
"RTN","ECXUTL",218,0)
 I ECXAIP("POWL"),ECXAIP("POW")'="Y" S ECXAIP("POWL")=""
"RTN","ECXUTL",219,0)
 Q
"RTN","ECXUTL",220,0)
 ;
"RTN","ECXUTL",221,0)
PRVCLASS(PERS,DATE) ;determine the person class and return va code
"RTN","ECXUTL",222,0)
 ;   input
"RTN","ECXUTL",223,0)
 ;   PERS  = pointer to file #200 (required)
"RTN","ECXUTL",224,0)
 ;   DATE  = date on which person class must be active (required)
"RTN","ECXUTL",225,0)
 ;           (internal Fileman format)
"RTN","ECXUTL",226,0)
 ;   output
"RTN","ECXUTL",227,0)
 ;   VACODE = VA code field from file #8932.1
"RTN","ECXUTL",228,0)
 ;            (exactly 7 characters in length)
"RTN","ECXUTL",229,0)
 N ECX,VACODE
"RTN","ECXUTL",230,0)
 S VACODE=""
"RTN","ECXUTL",231,0)
 S ECX=$$GET^XUA4A72(PERS,DATE)
"RTN","ECXUTL",232,0)
 S VACODE=$P(ECX,U,7) I $L(VACODE)'=7 S VACODE=""
"RTN","ECXUTL",233,0)
 Q VACODE
"RTN","ECXUTL2")
0^50^B12382222
"RTN","ECXUTL2",1,0)
ECXUTL2 ;ALB/JAP - Utilities for DSS Extracts (cont.) ;Aug 5, 1998
"RTN","ECXUTL2",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXUTL2",3,0)
 ;
"RTN","ECXUTL2",4,0)
ECXDEF(ECXHEAD,ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER) ;variables specific to extract from file #727.1
"RTN","ECXUTL2",5,0)
 ;   input 
"RTN","ECXUTL2",6,0)
 ;   ECXHEAD = extract header code
"RTN","ECXUTL2",7,0)
 ;   all other formal list parameters passed by reference
"RTN","ECXUTL2",8,0)
 ;   output
"RTN","ECXUTL2",9,0)
 ;   ECXPACK = type field (#7)
"RTN","ECXUTL2",10,0)
 ;   ECXGRP  = group field (#9)
"RTN","ECXUTL2",11,0)
 ;   ECXFILE = file number field (#1)
"RTN","ECXUTL2",12,0)
 ;   ECXRTN  = routine field (#4)
"RTN","ECXUTL2",13,0)
 ;   ECXPIECE= running piece field (#11)
"RTN","ECXUTL2",14,0)
 ;   ECXVER  = dss version
"RTN","ECXUTL2",15,0)
 ;
"RTN","ECXUTL2",16,0)
 N ECXIEN,ECXARR,DIC,DA,DR,DIQ
"RTN","ECXUTL2",17,0)
 S (ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER)=""
"RTN","ECXUTL2",18,0)
 S ECXIEN=+$O(^ECX(727.1,"C",ECXHEAD,0)) I ECXIEN=0 D  Q
"RTN","ECXUTL2",19,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",20,0)
 .D MES^XPDUTL(" It appears that you may have a problem with File #727.1 --")
"RTN","ECXUTL2",21,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",22,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is not properly defined.")
"RTN","ECXUTL2",23,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",24,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",25,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",26,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",27,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",28,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",29,0)
 .W !!
"RTN","ECXUTL2",30,0)
 S DIC="^ECX(727.1,",DA=ECXIEN,DR=".01;1;4;7;9;11",DIQ="ECXARR"
"RTN","ECXUTL2",31,0)
 D EN^DIQ1
"RTN","ECXUTL2",32,0)
 S ECXPACK=ECXARR(727.1,ECXIEN,7)
"RTN","ECXUTL2",33,0)
 S ECXGRP=ECXARR(727.1,ECXIEN,9)
"RTN","ECXUTL2",34,0)
 S ECXFILE=ECXARR(727.1,ECXIEN,1)
"RTN","ECXUTL2",35,0)
 S ECXRTN="START^"_ECXARR(727.1,ECXIEN,4)
"RTN","ECXUTL2",36,0)
 S ECXPIECE=ECXARR(727.1,ECXIEN,11)
"RTN","ECXUTL2",37,0)
 ;version of dss/tsi in Austin as specified by btso
"RTN","ECXUTL2",38,0)
 S ECXVER=7
"RTN","ECXUTL2",39,0)
 Q
"RTN","ECXUTL2",40,0)
 ;
"RTN","ECXUTL2",41,0)
PRIMARY(ECXDFN,ECXDATE,ECXPREFX) ;determine patient's pc team and pc provider
"RTN","ECXUTL2",42,0)
 ; input
"RTN","ECXUTL2",43,0)
 ; ECXDFN    = file #2 ien (required)
"RTN","ECXUTL2",44,0)
 ; ECXDATE   = date of interest (required)
"RTN","ECXUTL2",45,0)
 ; ECXPREFX  = prefix for provider data (optional)
"RTN","ECXUTL2",46,0)
 ;             defaults to "2" if not specified otherwise
"RTN","ECXUTL2",47,0)
 ; output
"RTN","ECXUTL2",48,0)
 ; ECXPRIME  = pc team ien^prefix_pc provider ien
"RTN","ECXUTL2",49,0)
 ;
"RTN","ECXUTL2",50,0)
 N ECPTTM,ECPTPR
"RTN","ECXUTL2",51,0)
 S:'$D(ECXPREFX) ECXPREFX=2 S:(+ECXPREFX=0) ECXPREFX=2
"RTN","ECXUTL2",52,0)
 S ECPTTM=+$$OUTPTTM^ECXUTL3(ECXDFN,ECXDATE) S:ECPTTM=0 ECPTTM=""
"RTN","ECXUTL2",53,0)
 S ECPTPR=+$$OUTPTPR^ECXUTL3(ECXDFN,ECXDATE) S:ECPTPR=0 ECPTPR="" S:ECPTPR]"" ECPTPR=ECXPREFX_ECPTPR
"RTN","ECXUTL2",54,0)
 S ECXPRIME=ECPTTM_U_ECPTPR
"RTN","ECXUTL2",55,0)
 Q ECXPRIME
"RTN","ECXUTL2",56,0)
 ;
"RTN","ECXUTL2",57,0)
INP(ECXDFN,ECXDATE) ; check for inpatient status
"RTN","ECXUTL2",58,0)
 ; input
"RTN","ECXUTL2",59,0)
 ; ECXDFN  = file #2 ien
"RTN","ECXUTL2",60,0)
 ; ECXDATE = date of interest
"RTN","ECXUTL2",61,0)
 ; output
"RTN","ECXUTL2",62,0)
 ; ECXINP  = patient status^movment #^current treat. spec.^admission date/time
"RTN","ECXUTL2",63,0)
 ;           where patient status = 3 for inpatient
"RTN","ECXUTL2",64,0)
 ;                                = 1 for outpatient
"RTN","ECXUTL2",65,0)
 ;
"RTN","ECXUTL2",66,0)
 N DFN,VAIP,ECA,ECMN,ECTS
"RTN","ECXUTL2",67,0)
 S DFN=ECXDFN
"RTN","ECXUTL2",68,0)
 S ECA=1,(ECMN,ECTS,ECADM)=""
"RTN","ECXUTL2",69,0)
 K VAIP S VAIP("D")=ECXDATE D IN5^VADPT
"RTN","ECXUTL2",70,0)
 S ECMN=$G(VAIP(1))
"RTN","ECXUTL2",71,0)
 I ECMN D
"RTN","ECXUTL2",72,0)
 .S ECA=3
"RTN","ECXUTL2",73,0)
 .S ECTS=$P($G(^DIC(45.7,+VAIP(8),0)),U,2)
"RTN","ECXUTL2",74,0)
 .S ECADM=$P(^DGPM(+$G(VAIP(13)),0),U)
"RTN","ECXUTL2",75,0)
 S ECXINP=ECA_U_ECMN_U_ECTS_U_ECADM
"RTN","ECXUTL2",76,0)
 Q ECXINP
"RTN","ECXUTL2",77,0)
 ;
"RTN","ECXUTL2",78,0)
VISN19(ECXDFN,ECXPAYOR,ECXSAI) ;visn 19 sharing agreement data
"RTN","ECXUTL2",79,0)
 ; input  ECXDFN = patient file ien
"RTN","ECXUTL2",80,0)
 ; output ECXPAYOR, ECXSAI (passed by reference)
"RTN","ECXUTL2",81,0)
 ;
"RTN","ECXUTL2",82,0)
 N I,JJ,ALIAS,INSUR,TOT
"RTN","ECXUTL2",83,0)
 S (ECXPAYOR,ECXSAI)=""
"RTN","ECXUTL2",84,0)
 I $D(^DPT(ECXDFN,.01)) S JJ=0 D
"RTN","ECXUTL2",85,0)
 .F  S JJ=$O(^DPT(ECXDFN,.01,JJ)) Q:JJ=""  S ALIAS=$P(^(JJ,0),U,1) D  Q:ECXPAYOR]""
"RTN","ECXUTL2",86,0)
 ..S ECXPAYOR=$S(ALIAS="CAT C":ALIAS,ALIAS="CATEGORY C":ALIAS,ALIAS="CHAMPVA":ALIAS,ALIAS="CHAMPUS":ALIAS,ALIAS="TRICARE":ALIAS,ALIAS="SHARING AGREEMENT":ALIAS,1:"")
"RTN","ECXUTL2",87,0)
 I ECXPAYOR]"",$D(^DPT(ECXDFN,.312)) S (J,JJ)=0 D
"RTN","ECXUTL2",88,0)
 .F  S JJ=$O(^DPT(ECXDFN,.312,JJ)) Q:+JJ=0  S I=$P(^(JJ,0),U,1),J=J+1,INSUR(J)=$P($G(^DIC(36,I,0)),U,1)
"RTN","ECXUTL2",89,0)
 .S TOT=$O(INSUR(99),-1)
"RTN","ECXUTL2",90,0)
 .I TOT=1 S ECXSAI=INSUR(1) Q
"RTN","ECXUTL2",91,0)
 .I TOT=2 S ECXSAI=$E(INSUR(1),1,14)_","_$E(INSUR(2),1,14) Q
"RTN","ECXUTL2",92,0)
 .I TOT=3 S ECXSAI=$E(INSUR(1),1,9)_","_$E(INSUR(2),1,9)_","_$E(INSUR(3),1,9) Q
"RTN","ECXUTL2",93,0)
 .I TOT>3 S ECXSAI=$E(INSUR(1),1,9)_","_$E(INSUR(2),1,9)_","_$E(INSUR(3),1,9_"M")
"RTN","ECXUTL2",94,0)
 Q
"RTN","ECXUTLA")
0^51^B50541468
"RTN","ECXUTLA",1,0)
ECXUTLA ;ALB/JAP - Utilities for Audit Reports ;Sep 25, 1997
"RTN","ECXUTLA",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXUTLA",3,0)
 ;
"RTN","ECXUTLA",4,0)
AUDIT(ECXHEAD,ECXERR,ECXARRAY,ECXAUD) ;set audit report parameters
"RTN","ECXUTLA",5,0)
 ;   input
"RTN","ECXUTLA",6,0)
 ;   ECXHEAD  = extract HEADER CODE (required)
"RTN","ECXUTLA",7,0)
 ;              (from file #727.1, field #7)
"RTN","ECXUTLA",8,0)
 ;   ECXERR   = passed-by-reference variable (required)
"RTN","ECXUTLA",9,0)
 ;   ECXARRAY = passed-by-reference array (required)
"RTN","ECXUTLA",10,0)
 ;   ECXAUD   = 0/1 (optional)
"RTN","ECXUTLA",11,0)
 ;              0 --> extract audit (default)
"RTN","ECXUTLA",12,0)
 ;              1 --> SAS audit
"RTN","ECXUTLA",13,0)
 ;   output
"RTN","ECXUTLA",14,0)
 ;   ECXARRAY = array of audit parameters
"RTN","ECXUTLA",15,0)
 ;              ECXARRAY("DEF")     = ien of extract type in file #727.1
"RTN","ECXUTLA",16,0)
 ;              ECXARRAY("TYPE")    = print name for extract; field #7 in file #727.1
"RTN","ECXUTLA",17,0)
 ;              ECXARRAY("EXTRACT") = ien of extract in file #727
"RTN","ECXUTLA",18,0)
 ;              ECXARRAY("START")   = start date for extract audit
"RTN","ECXUTLA",19,0)
 ;              ECXARRAY("END")     = end date for extract audit
"RTN","ECXUTLA",20,0)
 ;              ECXARRAY("ERUN")    = date on which extract was generated
"RTN","ECXUTLA",21,0)
 ;   error CODE
"RTN","ECXUTLA",22,0)
 ;   ECXERR   = 1, if input problem occurs
"RTN","ECXUTLA",23,0)
 ;              0, otherwise
"RTN","ECXUTLA",24,0)
 ;
"RTN","ECXUTLA",25,0)
 N X,Y,N,DA,DIC,DIQ,DIR,DTOUT,DUOUT,DIRUT,ECXDA,ECXTYPE,ECXSTART,ECXEND,ECXARR
"RTN","ECXUTLA",26,0)
 S ECXERR=0
"RTN","ECXUTLA",27,0)
 S N=$O(^ECX(727.1,"C",ECXHEAD,"")) S:N="" ECXERR=1
"RTN","ECXUTLA",28,0)
 Q:ECXERR
"RTN","ECXUTLA",29,0)
 S DIC="^ECX(727.1,",DIC(0)="NZ",X=N
"RTN","ECXUTLA",30,0)
 D ^DIC I Y=-1 S ECXERR=1 Q
"RTN","ECXUTLA",31,0)
 S ECXTYPE=$P(Y(0),U,7)_U_+Y K X,Y,DIC
"RTN","ECXUTLA",32,0)
 I $G(ECXAUD)=1,ECXHEAD'="DEN",ECXHEAD'="PRE",ECXHEAD'="RAD",ECXHEAD'="SUR" S ECXERR=1
"RTN","ECXUTLA",33,0)
 Q:ECXERR
"RTN","ECXUTLA",34,0)
 S DIC="^ECX(727,",DIC(0)="AEMQ",DIC("S")="I $P(^(0),U,3)=$P(ECXTYPE,U),'$D(^(""PURG""))"
"RTN","ECXUTLA",35,0)
 D ^DIC I Y=-1!($G(DUOUT))!($G(DTOUT)) S ECXERR=1 Q
"RTN","ECXUTLA",36,0)
 S DIC="^ECX(727,",(DA,ECXDA)=+Y,DR=".01;1;2;3;4;5;300",DIQ="ECXARR"
"RTN","ECXUTLA",37,0)
 D EN^DIQ1
"RTN","ECXUTLA",38,0)
 W !!,?5,"Extract:      ",ECXARR(727,ECXDA,2)," #",ECXDA
"RTN","ECXUTLA",39,0)
 W !!,?5,"Start date:   ",ECXARR(727,ECXDA,3)
"RTN","ECXUTLA",40,0)
 W !,?5,"End date:     ",ECXARR(727,ECXDA,4)
"RTN","ECXUTLA",41,0)
 W !,?5,"# of Records: ",ECXARR(727,ECXDA,5)
"RTN","ECXUTLA",42,0)
 ;if transmit date exists, then ask user if audit still needed
"RTN","ECXUTLA",43,0)
 I $L(ECXARR(727,ECXDA,300))>0 D
"RTN","ECXUTLA",44,0)
 .W !!,?5,"The extract which you have chosen to audit"
"RTN","ECXUTLA",45,0)
 .W !,?5,"was transmitted to AAC/DSS on ",ECXARR(727,ECXDA,300),".",!
"RTN","ECXUTLA",46,0)
 .S DIR(0)="Y",DIR("A")="Do you want to continue with this audit report",DIR("B")="NO" D ^DIR
"RTN","ECXUTLA",47,0)
 .S:$G(DIRUT) ECXERR=1 S:Y=0 ECXERR=1
"RTN","ECXUTLA",48,0)
 Q:ECXERR
"RTN","ECXUTLA",49,0)
 ;setup the return array
"RTN","ECXUTLA",50,0)
 S ECXARRAY("EXTRACT")=ECXARR(727,ECXDA,.01),ECXARRAY("TYPE")=$P(ECXTYPE,U),ECXARRAY("DEF")=$P(ECXTYPE,U,2)
"RTN","ECXUTLA",51,0)
 S ECXARRAY("START")=ECXARR(727,ECXDA,3),ECXARRAY("END")=ECXARR(727,ECXDA,4),ECXARRAY("ERUN")=ECXARR(727,ECXDA,1)
"RTN","ECXUTLA",52,0)
 ;determine date range only for extract audit reports
"RTN","ECXUTLA",53,0)
 I $G(ECXAUD)=0 D
"RTN","ECXUTLA",54,0)
 .S ECXSTART=ECXARRAY("START"),ECXEND=ECXARRAY("END") D RANGE^ECXUTLA(.ECXSTART,.ECXEND,.ECXERR)
"RTN","ECXUTLA",55,0)
 .I ECXERR K ECXARRAY
"RTN","ECXUTLA",56,0)
 .Q:ECXERR
"RTN","ECXUTLA",57,0)
 .S ECXARRAY("START")=ECXSTART,ECXARRAY("END")=ECXEND
"RTN","ECXUTLA",58,0)
 Q
"RTN","ECXUTLA",59,0)
 ;
"RTN","ECXUTLA",60,0)
RANGE(ECXSTART,ECXEND,ECXERR) ;determine date range for extract audit report
"RTN","ECXUTLA",61,0)
 ;   input
"RTN","ECXUTLA",62,0)
 ;   ECXSTART = start date of extract in file #727 (required)
"RTN","ECXUTLA",63,0)
 ;              passed by reference
"RTN","ECXUTLA",64,0)
 ;   ECXEND   = end date of extract in file #727 (required)
"RTN","ECXUTLA",65,0)
 ;              passed by reference
"RTN","ECXUTLA",66,0)
 ;   ECXERR   = passed by reference (required)
"RTN","ECXUTLA",67,0)
 ;   output
"RTN","ECXUTLA",68,0)
 ;   ECXSTART = user selected start date
"RTN","ECXUTLA",69,0)
 ;   ECXEND   = user selected end date
"RTN","ECXUTLA",70,0)
 ;   error CODE
"RTN","ECXUTLA",71,0)
 ;   ECXERR   = 1, if input problem occurs
"RTN","ECXUTLA",72,0)
 ;              0, otherwise
"RTN","ECXUTLA",73,0)
 ;
"RTN","ECXUTLA",74,0)
 ;
"RTN","ECXUTLA",75,0)
 ;convert dates to internal format
"RTN","ECXUTLA",76,0)
 N DATEA,DATEB,X,Y,%DT,DTOUT,OUT
"RTN","ECXUTLA",77,0)
 S (ECXERR,OUT)=0
"RTN","ECXUTLA",78,0)
 S X=ECXSTART D ^%DT S DATEA=Y
"RTN","ECXUTLA",79,0)
 S X=ECXEND D ^%DT S DATEB=Y
"RTN","ECXUTLA",80,0)
 ;allow user to select start date
"RTN","ECXUTLA",81,0)
 ;can't be less than ecxstart or greater than ecxend
"RTN","ECXUTLA",82,0)
 W !!,?5,"You can narrow the date range, if you wish.",!
"RTN","ECXUTLA",83,0)
 W !,?5,"The Start Date can't be earlier than ",ECXSTART,","
"RTN","ECXUTLA",84,0)
 W !,?5,"or later than ",ECXEND,".",!
"RTN","ECXUTLA",85,0)
 F  Q:OUT!ECXERR  D
"RTN","ECXUTLA",86,0)
 .S %DT="AEX",%DT("A")="Select Start Date: ",%DT("B")=ECXSTART,%DT(0)=DATEA
"RTN","ECXUTLA",87,0)
 .D ^%DT S:Y=-1 ECXERR=1 S:$G(DTOUT) ECXERR=1
"RTN","ECXUTLA",88,0)
 .Q:ECXERR
"RTN","ECXUTLA",89,0)
 .I Y>DATEB D  Q
"RTN","ECXUTLA",90,0)
 ..W !,?5,"But that's later than ",ECXEND,"...try again.",!
"RTN","ECXUTLA",91,0)
 .S DATEA=Y,OUT=1
"RTN","ECXUTLA",92,0)
 I ECXERR K ECXSTART,ECXEND
"RTN","ECXUTLA",93,0)
 Q:ECXERR
"RTN","ECXUTLA",94,0)
 S Y=DATEA D DD^%DT S ECXSTART=Y
"RTN","ECXUTLA",95,0)
 ;allow user to select end date
"RTN","ECXUTLA",96,0)
 ;can't be less than ecxstart or greater than ecxend
"RTN","ECXUTLA",97,0)
 W !!,?5,"The End Date can't be earlier than ",ECXSTART
"RTN","ECXUTLA",98,0)
 W !,?5,"(the Start Date you selected), or later than ",ECXEND,".",!
"RTN","ECXUTLA",99,0)
 S OUT=0
"RTN","ECXUTLA",100,0)
 F  Q:OUT!ECXERR  D
"RTN","ECXUTLA",101,0)
 .S %DT="AEX",%DT("A")="Select End Date: ",%DT("B")=ECXEND,%DT(0)=-DATEB
"RTN","ECXUTLA",102,0)
 .D ^%DT S:Y=-1 ECXERR=1 S:$G(DTOUT) ECXERR=1
"RTN","ECXUTLA",103,0)
 .Q:ECXERR
"RTN","ECXUTLA",104,0)
 .I Y<DATEA D  Q
"RTN","ECXUTLA",105,0)
 ..W !,?5,"But that's earlier than ",ECXSTART,"...try again.",!
"RTN","ECXUTLA",106,0)
 .S DATEB=Y,OUT=1
"RTN","ECXUTLA",107,0)
 I ECXERR K ECXSTART,ECXEND
"RTN","ECXUTLA",108,0)
 Q:ECXERR
"RTN","ECXUTLA",109,0)
 S Y=DATEB D DD^%DT S ECXEND=Y
"RTN","ECXUTLA",110,0)
 Q
"RTN","ECXUTLA",111,0)
 ;
"RTN","ECXUTLA",112,0)
DEVICE(ZTRTN,ZTDESC,ZTSAVE) ;get print device and optionally task to background
"RTN","ECXUTLA",113,0)
 ;   input
"RTN","ECXUTLA",114,0)
 ;   ZTRTN  = line^routine; task entry point (required)
"RTN","ECXUTLA",115,0)
 ;            variable for %ZTLOAD
"RTN","ECXUTLA",116,0)
 ;   ZTDESC = task description (required)
"RTN","ECXUTLA",117,0)
 ;            variable for %ZTLOAD
"RTN","ECXUTLA",118,0)
 ;   ZTSAVE = array; passed by reference (required)
"RTN","ECXUTLA",119,0)
 ;            variables for %ZTLOAD
"RTN","ECXUTLA",120,0)
 ;   output
"RTN","ECXUTLA",121,0)
 ;   ZTSAVE = returns ZTSAVE("POP"),ZTSAVE("ZTSK")
"RTN","ECXUTLA",122,0)
 ;
"RTN","ECXUTLA",123,0)
 N POP,ZTSK
"RTN","ECXUTLA",124,0)
 S ZTSAVE("POP")=0,ZTSAVE("ZTSK")=0
"RTN","ECXUTLA",125,0)
 ;return ztsave("pop")=1 and quit if required input not available
"RTN","ECXUTLA",126,0)
 I '$L(ZTRTN)!('$L(ZTDESC))!('$D(ZTSAVE)) S ZTSAVE("POP")=1 Q
"RTN","ECXUTLA",127,0)
 ;get print device
"RTN","ECXUTLA",128,0)
 K IO("Q") S %ZIS="QM" D ^%ZIS
"RTN","ECXUTLA",129,0)
 S ZTSAVE("POP")=POP
"RTN","ECXUTLA",130,0)
 I POP D
"RTN","ECXUTLA",131,0)
 .W !,"No device selected...exiting.",!
"RTN","ECXUTLA",132,0)
 Q:POP
"RTN","ECXUTLA",133,0)
 I $D(IO("Q")) D
"RTN","ECXUTLA",134,0)
 .S ZTSAVE("ZTREQ")="@"
"RTN","ECXUTLA",135,0)
 .D ^%ZTLOAD
"RTN","ECXUTLA",136,0)
 .I $G(ZTSK)>0 D
"RTN","ECXUTLA",137,0)
 ..W !,"Request queued as Task #",ZTSK,".",!
"RTN","ECXUTLA",138,0)
 ..S ZTSAVE("ZTSK")=ZTSK
"RTN","ECXUTLA",139,0)
 ..S ZTSAVE("POP")=0
"RTN","ECXUTLA",140,0)
 .I '$G(ZTSK) D
"RTN","ECXUTLA",141,0)
 ..W !,"Request to queue cancelled...exiting.",!
"RTN","ECXUTLA",142,0)
 ..S ZTSAVE("ZTSK")=0
"RTN","ECXUTLA",143,0)
 ..S ZTSAVE("POP")=1
"RTN","ECXUTLA",144,0)
 Q
"RTN","ECXUTLA",145,0)
 ;
"RTN","ECXUTLA",146,0)
WARDS(ECXALL,ECXDIV) ;get wards for selected divisions
"RTN","ECXUTLA",147,0)
 ;   input
"RTN","ECXUTLA",148,0)
 ;   ECXALL = 1/0 (optional)
"RTN","ECXUTLA",149,0)
 ;            1==> user selected all divisions OR
"RTN","ECXUTLA",150,0)
 ;                 facility is non-divisional
"RTN","ECXUTLA",151,0)
 ;            0==> user selected some divisions
"RTN","ECXUTLA",152,0)
 ;            if ECXALL not defined, then assume 1
"RTN","ECXUTLA",153,0)
 ;   ECXDIV = array of divisions selected (optional)
"RTN","ECXUTLA",154,0)
 ;            passed by reference array containing
"RTN","ECXUTLA",155,0)
 ;            selected divisions;
"RTN","ECXUTLA",156,0)
 ;            if ECXALL=1, then ECXDIV array isn't
"RTN","ECXUTLA",157,0)
 ;            required; information for all wards will be obtained
"RTN","ECXUTLA",158,0)
 ;            if ECXALL=0, then only wards for divisions in ECXDIV
"RTN","ECXUTLA",159,0)
 ;   output
"RTN","ECXUTLA",160,0)
 ;   ^TMP($J,"ECXWARD", contains ward name, division, g&l order
"RTN","ECXUTLA",161,0)
 ;   ^TMP($J,"ECXORDER", contains ward grouping info
"RTN","ECXUTLA",162,0)
 ;
"RTN","ECXUTLA",163,0)
 N IEN,WARD,ORDX,NAME,NM,ORDER,DIV,HIEN,GROUP,DATA,DEPT,NAMEDEPT
"RTN","ECXUTLA",164,0)
 K ^TMP($J,"ECXWARD"),^TMP($J,"ECXORDER")
"RTN","ECXUTLA",165,0)
 ;if ecxall not here, then set ecxall=1
"RTN","ECXUTLA",166,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXUTLA",167,0)
 S ORDX=0,NM=""
"RTN","ECXUTLA",168,0)
 F  S NM=$O(^DIC(42,"B",NM)) Q:NM=""  S IEN=0 F  S IEN=$O(^DIC(42,"B",NM,IEN)) Q:IEN=""  D
"RTN","ECXUTLA",169,0)
 .S DIV=+$P(^DIC(42,IEN,0),U,11) Q:DIV=0
"RTN","ECXUTLA",170,0)
 .I ECXALL=0,'$D(ECXDIV(DIV)) Q
"RTN","ECXUTLA",171,0)
 .S (NAME,ORDER,DEPT)="",NAME=$P(^DIC(42,IEN,0),U,1),ORDER=+$P($G(^DIC(42,IEN,"ORDER")),U,1),DEPT=$P($G(^ECX(727.4,IEN,0)),U,2)
"RTN","ECXUTLA",172,0)
 .;'unordered' ward is probably inactive, but get basic data anyway
"RTN","ECXUTLA",173,0)
 .I ORDER=0 S ORDX=ORDX+1,ORDER="99999"_ORDX,ORDER=+ORDER
"RTN","ECXUTLA",174,0)
 .;get this ward's ien in file #44; file #727.802 & #727.808 use pointers to file #44
"RTN","ECXUTLA",175,0)
 .S HIEN=+$P($G(^DIC(42,IEN,44)),U,1) Q:HIEN=0
"RTN","ECXUTLA",176,0)
 .;if this is last ward in group, then get the group name
"RTN","ECXUTLA",177,0)
 .K GROUP I $D(^DIC(42,IEN,1,1,0)) S GROUP=$P(^DIC(42,IEN,1,1,0),U,1) I GROUP="" K GROUP
"RTN","ECXUTLA",178,0)
 .S ^TMP($J,"ECXWARD",HIEN)=ORDER_U_NAME_U_DIV_U_IEN_U_DEPT
"RTN","ECXUTLA",179,0)
 .I $D(GROUP) S ^TMP($J,"ECXWARD",HIEN,1)=GROUP
"RTN","ECXUTLA",180,0)
 ;after all wards in file #42 are processed, arrange by g&l order
"RTN","ECXUTLA",181,0)
 S HIEN=0
"RTN","ECXUTLA",182,0)
 F  S HIEN=$O(^TMP($J,"ECXWARD",HIEN)) Q:HIEN=""  S DATA=^TMP($J,"ECXWARD",HIEN) D
"RTN","ECXUTLA",183,0)
 .S ORDER=$P(DATA,U,1),NAME=$P(DATA,U,2),DIV=$P(DATA,U,3),DEPT=$P(DATA,U,5)
"RTN","ECXUTLA",184,0)
 .S NAMEDEPT=NAME S:DEPT]"" NAMEDEPT=NAME_" <"_DEPT_">"
"RTN","ECXUTLA",185,0)
 .S ^TMP($J,"ECXORDER",DIV,ORDER)=HIEN_U_NAMEDEPT_U
"RTN","ECXUTLA",186,0)
 .I $D(^TMP($J,"ECXWARD",HIEN,1)) S GROUP=^(1),^TMP($J,"ECXORDER",DIV,ORDER,1)=1_U_GROUP_U
"RTN","ECXUTLA",187,0)
 Q
"RTN","ECXUTLA",188,0)
 ;
"RTN","ECXUTLA",189,0)
SASHEAD(ECXFL,ECXHEAD,ECXDIV,ECXARRAY,ECXPG,ECXTAB) ;header and page control
"RTN","ECXUTLA",190,0)
 ;
"RTN","ECXUTLA",191,0)
 ;   ECXFL   = feeder location (division) (required)
"RTN","ECXUTLA",192,0)
 ;   ECXHEAD = extract header from file #727.1 (required)               
"RTN","ECXUTLA",193,0)
 ;   ECXDIV  = array of divisions selected (required)
"RTN","ECXUTLA",194,0)
 ;   ECXPG   = page number (required)
"RTN","ECXUTLA",195,0)
 ;   ECXTAB  = tab location;
"RTN","ECXUTLA",196,0)
 ;             allows for proper spacing in sub-header line (optional)
"RTN","ECXUTLA",197,0)
 ;
"RTN","ECXUTLA",198,0)
 N JJ,SS,LN
"RTN","ECXUTLA",199,0)
 S $P(LN,"-",80)=""
"RTN","ECXUTLA",200,0)
 I $G(ECXTAB)="" S ECXTAB=40
"RTN","ECXUTLA",201,0)
 I $E(IOST)="C" D
"RTN","ECXUTLA",202,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTLA",203,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUTLA",204,0)
 Q:QFLG
"RTN","ECXUTLA",205,0)
 W:$Y!($E(IOST)="C") @IOF S ECXPG=ECXPG+1
"RTN","ECXUTLA",206,0)
 W !,"SAS Audit Report for "_ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract"
"RTN","ECXUTLA",207,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXUTLA",208,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXUTLA",209,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXUTLA",210,0)
 I $D(ECXDIV(ECXFL)) W !,"Division/Site:        "_$P(ECXDIV(ECXFL),U,2)_" ("_ECXFL_")",?68,"Page: "_ECXPG
"RTN","ECXUTLA",211,0)
 I '$D(ECXDIV(ECXFL)) W !,"Division/Site:        "_"Unknown",?68,"Page: "_ECXPG
"RTN","ECXUTLA",212,0)
 W !!,"Feeder Location",?ECXTAB,"Feeder Key",?68,"Quantity"
"RTN","ECXUTLA",213,0)
 W !,LN,!
"RTN","ECXUTLA",214,0)
 Q
"RTN","ECXWRD")
0^56^B14814274
"RTN","ECXWRD",1,0)
ECXWRD ;BIR/CML,ALB/JAP  Print Active Wards for Fiscal Year ; Nov 25,1996
"RTN","ECXWRD",2,0)
 ;;3.0;DSS EXTRACTS;**2,8**;Dec 22, 1997
"RTN","ECXWRD",3,0)
 ;
"RTN","ECXWRD",4,0)
EN ;entry point from option
"RTN","ECXWRD",5,0)
 N DATE,YR,MON,FY,POP,ZTSK
"RTN","ECXWRD",6,0)
 D NOW^%DTC S DATE=$$FMTE^XLFDT(%,"5D"),YR=+$P(DATE,"/",3),MON=+$P(DATE,"/",1),FY=$S(MON<10:YR,1:YR+1)
"RTN","ECXWRD",7,0)
 W !!,"This option prints a list of all MAS wards that were active at any time"
"RTN","ECXWRD",8,0)
 W !,"during FY",FY,".  The list is sorted by Medical Center Division and displays"
"RTN","ECXWRD",9,0)
 W !,"the pointer to the Hospital Location file (#44) and DSS Department data"
"RTN","ECXWRD",10,0)
 W !,"if available."
"RTN","ECXWRD",11,0)
 W !!,"This report requires a print width of 132 characters.",!!
"RTN","ECXWRD",12,0)
 S ECXPGM="START^ECXWRD",ECXDESC="DSS-Print Active Wards for Fiscal Year",ECXSAVE("FY")=""
"RTN","ECXWRD",13,0)
 W ! D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXWRD",14,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXWRD",15,0)
 .W !,"No device selected... try again later.!!"
"RTN","ECXWRD",16,0)
 I ECXSAVE("ZTSK")=0 U IO D START^ECXWRD
"RTN","ECXWRD",17,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXWRD",18,0)
 D HOME^%ZIS
"RTN","ECXWRD",19,0)
 K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXWRD",20,0)
 K ECXDIVN,ECFYB,ECFYE,ECXWD,ECXWDN,ECXDEPT,ECXDESC,FY,^TMP("ECXWRD",$J)
"RTN","ECXWRD",21,0)
 Q
"RTN","ECXWRD",22,0)
START ;
"RTN","ECXWRD",23,0)
 N QFLG,%,%H,%I,JJ,SS,HDT,DATA
"RTN","ECXWRD",24,0)
 K ^TMP("ECXWRD",$J)
"RTN","ECXWRD",25,0)
 S ECXFY=FY-1700
"RTN","ECXWRD",26,0)
 S ECFYB=ECXFY-1_"1000",ECFYE=ECXFY_"1001"
"RTN","ECXWRD",27,0)
 ;gather data
"RTN","ECXWRD",28,0)
 S ECXWD=0
"RTN","ECXWRD",29,0)
 F  S ECXWD=$O(^DIC(42,ECXWD)) Q:'ECXWD  I $D(^DIC(42,ECXWD,0))  D
"RTN","ECXWRD",30,0)
 .S EC=^DIC(42,ECXWD,0) D CHK Q:X=1
"RTN","ECXWRD",31,0)
 .S DR=".01;.03;.015;.017;44",DIQ(0)="IE",DIQ="ECX",DA=ECXWD,DIC="^DIC(42," K ECX D EN^DIQ1
"RTN","ECXWRD",32,0)
 .S ECXWDN=$G(ECX(42,ECXWD,.01,"E"))
"RTN","ECXWRD",33,0)
 .S ECXDIVN=$G(ECX(42,ECXWD,.015,"E")) S:ECXDIVN="" ECXDIVN="UNKNOWN"
"RTN","ECXWRD",34,0)
 .S ^TMP("ECXWRD",$J,ECXDIVN,ECXWDN)=$G(ECX(42,ECXWD,44,"I"))_U_$G(ECX(42,ECXWD,.03,"E"))_U_$G(ECX(42,ECXWD,.017,"E"))_U
"RTN","ECXWRD",35,0)
 .I $D(^ECX(727.4,ECXWD)) D
"RTN","ECXWRD",36,0)
 ..S ECXDEPT=$P(^ECX(727.4,ECXWD,0),U,2) Q:ECXDEPT=""
"RTN","ECXWRD",37,0)
 ..D REVERSE^ECXDSSD(ECXDEPT,.ECXDESC)
"RTN","ECXWRD",38,0)
 ..S ^TMP("ECXWRD",$J,ECXDIVN,ECXWDN)=^TMP("ECXWRD",$J,ECXDIVN,ECXWDN)_ECXDEPT_U_ECXDESC
"RTN","ECXWRD",39,0)
 ;print the report
"RTN","ECXWRD",40,0)
 S (PG,QFLG)=0,$P(LN,"-",130)="" D NOW^%DTC S Y=$E(%,1,12) X ^DD("DD") S HDT=Y
"RTN","ECXWRD",41,0)
 D HDR
"RTN","ECXWRD",42,0)
 I '$D(^TMP("ECXWRD",$J)) W !!,"NO DATA FOUND FOR THIS REPORT" Q
"RTN","ECXWRD",43,0)
 S ECXDIVN=""
"RTN","ECXWRD",44,0)
 F  S ECXDIVN=$O(^TMP("ECXWRD",$J,ECXDIVN)) Q:ECXDIVN=""  Q:QFLG  D
"RTN","ECXWRD",45,0)
 .D:$Y+4>IOSL HDR Q:QFLG
"RTN","ECXWRD",46,0)
 .W !!,"DIVISION: ",ECXDIVN S ECXWDN="" D
"RTN","ECXWRD",47,0)
 ..F  S ECXWDN=$O(^TMP("ECXWRD",$J,ECXDIVN,ECXWDN)) Q:ECXWDN=""  Q:QFLG  D
"RTN","ECXWRD",48,0)
 ...S DATA=^TMP("ECXWRD",$J,ECXDIVN,ECXWDN),ECXDEPT=$P(DATA,U,4)
"RTN","ECXWRD",49,0)
 ...D:$Y+4>IOSL HDR Q:QFLG  W !?5,$E(ECXWDN,1,20),?30,ECXDEPT,?45,$P(DATA,U,1),?60,$E($P(DATA,U,2),1,18),?80,$P(DATA,U,3)
"RTN","ECXWRD",50,0)
 ...Q:ECXDEPT=""
"RTN","ECXWRD",51,0)
 ...D:$Y+4>IOSL HDR Q:QFLG
"RTN","ECXWRD",52,0)
 ...W !?30,"[Svc: "_$E($P(DATA,U,5),1,20)_"   "_"Prod. Unit: "_$E($P(DATA,U,6),1,40)_"   "_"Div: "_$P(DATA,U,7)_"]",!
"RTN","ECXWRD",53,0)
 I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECXWRD",54,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXWRD",55,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECXWRD",56,0)
 K ECXDIVN,ECFYB,ECFYE,ECXWD,ECXWDN,ECXDEPT,ECXDESC,FY,^TMP("ECXWRD",$J)
"RTN","ECXWRD",57,0)
 Q
"RTN","ECXWRD",58,0)
 ;
"RTN","ECXWRD",59,0)
CHK ;has this ward been active?
"RTN","ECXWRD",60,0)
 ; output      
"RTN","ECXWRD",61,0)
 ; X = 1 if inactive (out-of-service), 0 otherwise
"RTN","ECXWRD",62,0)
 ;
"RTN","ECXWRD",63,0)
 N ECX,ECY
"RTN","ECXWRD",64,0)
 S X=1 Q:'$D(ECXWD)  S ECY=ECFYB
"RTN","ECXWRD",65,0)
 I '$O(^DIC(42,ECXWD,"OOS",0)) S X=0 Q
"RTN","ECXWRD",66,0)
 S ECX=+$O(^DIC(42,ECXWD,"OOS","AINV",9999998.9-ECY)),ECX=$S($D(^DIC(42,ECXWD,"OOS",+$O(^(+ECX,0)),0)):^(0),1:"")
"RTN","ECXWRD",67,0)
 I '$P(ECX,U,6) S X=0 Q
"RTN","ECXWRD",68,0)
 I $P(ECX,U,6),'$P(ECX,U,4) S X=1 Q
"RTN","ECXWRD",69,0)
 I $P(ECX,U,6),$P(ECX,U,4)<ECFYE S X=0 Q
"RTN","ECXWRD",70,0)
 S X=1
"RTN","ECXWRD",71,0)
 Q
"RTN","ECXWRD",72,0)
 ;
"RTN","ECXWRD",73,0)
HDR ;header and page control
"RTN","ECXWRD",74,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXWRD",75,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXWRD",76,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"Active Wards for FY",FY,!,"Printed on ",HDT,!
"RTN","ECXWRD",77,0)
 W !?30,"DSS",?45,"Pointer",?60,"Ward",?80,"Ward"
"RTN","ECXWRD",78,0)
 W !?5,"WARD",?30,"Department",?45,"to File #44",?60,"Service",?80,"Specialty"
"RTN","ECXWRD",79,0)
 W !,LN
"RTN","ECXWRD",80,0)
 Q
"RTN","ECXWRDX")
0^57^B19919646
"RTN","ECXWRDX",1,0)
ECXWRDX ;ALB/JAP - Assign DSS Dept. to Ward ;July 16, 1998
"RTN","ECXWRDX",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXWRDX",3,0)
 ;
"RTN","ECXWRDX",4,0)
EN ;entry point from menu option
"RTN","ECXWRDX",5,0)
 ;lookup ward
"RTN","ECXWRDX",6,0)
 N DIC,DIR,DTOUT,DUOUT,DIRUT,X,Y,DSSID,OUT
"RTN","ECXWRDX",7,0)
 S DIC(0)="AEMQZ",DIC="^DIC(42," D ^DIC G:$D(DTOUT)!($D(DUOUT))!(+Y<1) EXIT
"RTN","ECXWRDX",8,0)
 S ECXWARD=+Y,DSSID=""
"RTN","ECXWRDX",9,0)
 S DR=".01;.02;.03;.015;.017",DIQ(0)="IE",DIQ="ECX",DA=ECXWARD,DIC="^DIC(42," K ECX D EN^DIQ1
"RTN","ECXWRDX",10,0)
 S ECXWARD=ECXWARD_U_$G(ECX(42,+ECXWARD,.01,"E"))
"RTN","ECXWRDX",11,0)
 W !!,"Ward: ",?18,$P(ECXWARD,U,2)
"RTN","ECXWRDX",12,0)
 S ECXDIV=$G(ECX(42,+ECXWARD,.015,"I"))
"RTN","ECXWRDX",13,0)
 I +ECXDIV>0 D
"RTN","ECXWRDX",14,0)
 .;division may not exist in file #727.3, or it may not have a dss id
"RTN","ECXWRDX",15,0)
 .S DSSID=$P($G(^ECX(727.3,+ECXDIV,0)),U,2) S:DSSID="" DSSID="Not defined"
"RTN","ECXWRDX",16,0)
 .S ECXDIV=ECXDIV_U_ECX(42,+ECXWARD,.015,"E")_"/"_$P(^DG(40.8,+ECXDIV,0),U,2)_" <"_DSSID_">"
"RTN","ECXWRDX",17,0)
 W !,"Ward Bedsection: ",?18,$G(ECX(42,+ECXWARD,.02,"E"))
"RTN","ECXWRDX",18,0)
 W !,"Ward Specialty: ",?18,$G(ECX(42,+ECXWARD,.017,"E"))
"RTN","ECXWRDX",19,0)
 W !,"Ward Service: ",?18,$G(ECX(42,+ECXWARD,.03,"E"))
"RTN","ECXWRDX",20,0)
 I +ECXDIV>0 W !,"Division: ",?18,$P(ECXDIV,U,2)
"RTN","ECXWRDX",21,0)
 ;dss id for division is needed to derive dss dept code
"RTN","ECXWRDX",22,0)
 I DSSID["Not" D  G EN
"RTN","ECXWRDX",23,0)
 .W !!,"Cannot proceed with assignment of DSS Department code for ward,"
"RTN","ECXWRDX",24,0)
 .W !,"because the "_ECX(42,+ECXWARD,.015,"E")_" division does not have a DSS Division Identifier."
"RTN","ECXWRDX",25,0)
 .W !
"RTN","ECXWRDX",26,0)
 .W !,"Use the Enter/Edit DSS Division Identifier option to associate an"
"RTN","ECXWRDX",27,0)
 .W !,"identifier with "_ECX(42,+ECXWARD,.015,"E")_"."
"RTN","ECXWRDX",28,0)
 .I $E(IOST)="C" D
"RTN","ECXWRDX",29,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXWRDX",30,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR,JJ,SS W !
"RTN","ECXWRDX",31,0)
 I ECXDIV="" D  G EN
"RTN","ECXWRDX",32,0)
 .W !!,"Cannot proceed with assignment of DSS Department code for ward,"
"RTN","ECXWRDX",33,0)
 .W !,"because the ward is not associated with a Medical Center Division."
"RTN","ECXWRDX",34,0)
 .W !
"RTN","ECXWRDX",35,0)
 .I $E(IOST)="C" D
"RTN","ECXWRDX",36,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXWRDX",37,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR W !
"RTN","ECXWRDX",38,0)
 I '$D(ECX(727.4,+ECXWARD)) D
"RTN","ECXWRDX",39,0)
 .S (X,DINUM)=+ECXWARD,DIC(0)="L",DLAYGO=727.4,DIC="^ECX(727.4,"
"RTN","ECXWRDX",40,0)
 .K DD,DO D FILE^DICN K DIC,DINUM,DLAYGO,X,Y
"RTN","ECXWRDX",41,0)
 S DR="1;",DIQ(0)="E",DIQ="ECX",DA=+ECXWARD,DIC="^ECX(727.4," K ECX D EN^DIQ1
"RTN","ECXWRDX",42,0)
 S ECXDEPT=$G(ECX(727.4,+ECXWARD,1,"E"))
"RTN","ECXWRDX",43,0)
 S ECXDEPT0=ECXDEPT K X,Y
"RTN","ECXWRDX",44,0)
 ;if ward has dss dept, then edit
"RTN","ECXWRDX",45,0)
 I ECXDEPT]"" D
"RTN","ECXWRDX",46,0)
 .D REVERSE^ECXDSSD(ECXDEPT,.ECXDESC)
"RTN","ECXWRDX",47,0)
 .W !!,"DSS Department for Ward "_$P(ECXWARD,U,2)
"RTN","ECXWRDX",48,0)
 .W !?5,"Service ",?20,"<"_$E(ECXDEPT,1)_">  = "_$P(ECXDESC,U,1)
"RTN","ECXWRDX",49,0)
 .W !?5,"Prod. Unit ",?20,"<"_$E(ECXDEPT,2,3)_"> = "_$P(ECXDESC,U,2)
"RTN","ECXWRDX",50,0)
 .W !?5,"Division ",?20,"<"_$E(ECXDEPT,4)_">  = "_$P(ECXDESC,U,3)
"RTN","ECXWRDX",51,0)
 .W !?5,"Suffix ",?22,"   = "_$E(ECXDEPT,5,7),!!
"RTN","ECXWRDX",52,0)
 .S DIR(0)="YA",DIR("A")="Do you want edit this DSS Department? ",DIR("B")="YES" K X,Y
"RTN","ECXWRDX",53,0)
 .D ^DIR K DIR W !!
"RTN","ECXWRDX",54,0)
 .Q:$D(DIRUT)
"RTN","ECXWRDX",55,0)
 .I Y=1 D DEPT(ECXWARD,ECXDIV,.ECXDEPT)
"RTN","ECXWRDX",56,0)
 G:ECXDEPT0]"" EN
"RTN","ECXWRDX",57,0)
 ;if ward doesn't have dss dept, then enter
"RTN","ECXWRDX",58,0)
 I ECXDEPT0="" D DEPT(ECXWARD,ECXDIV,.ECXDEPT)
"RTN","ECXWRDX",59,0)
 G EN
"RTN","ECXWRDX",60,0)
 ;
"RTN","ECXWRDX",61,0)
DEPT(ECXWARD,ECXDIV,ECXDEPT) ;allow user to enter/edit dss dept for ward
"RTN","ECXWRDX",62,0)
 ;division is already known from file #42 (above)
"RTN","ECXWRDX",63,0)
 ;service is 'nursing' by definition - ien 27 in file #730
"RTN","ECXWRDX",64,0)
 ; input
"RTN","ECXWRDX",65,0)
 ; ECXWARD = 1st piece is ien to file #42 & file #727.4; required
"RTN","ECXWRDX",66,0)
 ; ECXDIV = 1st piece is ien to file $40.8 & file #727.3; required
"RTN","ECXWRDX",67,0)
 ; output
"RTN","ECXWRDX",68,0)
 ; ECXDEPT = current dss department code for ward or null
"RTN","ECXWRDX",69,0)
 N ECXSVC,ECXPUNIT,ECXDESC,ECXSUF,OUT,X,Y,SS,JJ,DIRUT,DTOUT,DUOUT
"RTN","ECXWRDX",70,0)
 I ECXDEPT="" D
"RTN","ECXWRDX",71,0)
 .W !,"The medical center division for the ward selected is"
"RTN","ECXWRDX",72,0)
 .W !,"already known.  The service associated with all ward"
"RTN","ECXWRDX",73,0)
 .W !,"production units is 'Nursing'.",!
"RTN","ECXWRDX",74,0)
 .W !!,"You must identify the DSS Production Unit for this ward,"
"RTN","ECXWRDX",75,0)
 .W !,"and a suffix (if needed) to complete the DSS Department code."
"RTN","ECXWRDX",76,0)
 .I $E(IOST)="C" D
"RTN","ECXWRDX",77,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXWRDX",78,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR W !
"RTN","ECXWRDX",79,0)
 I ECXDEPT]"" D
"RTN","ECXWRDX",80,0)
 .W !,"You may edit the DSS Production Unit and suffix,"
"RTN","ECXWRDX",81,0)
 F  D  Q:$D(DIRUT)!(OUT=1)
"RTN","ECXWRDX",82,0)
 .S ECXDEPT=""
"RTN","ECXWRDX",83,0)
 .S ECXSVC=27,(ECXPUNIT,ECXSUF)="",OUT=0
"RTN","ECXWRDX",84,0)
 .S ECXDEPT=$$DERIVE^ECXDSSD(ECXSVC,ECXPUNIT,+ECXDIV,ECXSUF)
"RTN","ECXWRDX",85,0)
 .;diplay dss dept code to user
"RTN","ECXWRDX",86,0)
 .I ECXDEPT="" S OUT=1 Q
"RTN","ECXWRDX",87,0)
 .D REVERSE^ECXDSSD(ECXDEPT,.ECXDESC)
"RTN","ECXWRDX",88,0)
 .W !!,"DSS Department for Ward "_$P(ECXWARD,U,2)
"RTN","ECXWRDX",89,0)
 .W !?5,"Service ",?20,"<"_$E(ECXDEPT,1)_">  = "_$P(ECXDESC,U,1)
"RTN","ECXWRDX",90,0)
 .W !?5,"Prod. Unit ",?20,"<"_$E(ECXDEPT,2,3)_"> = "_$P(ECXDESC,U,2)
"RTN","ECXWRDX",91,0)
 .W !?5,"Division ",?20,"<"_$E(ECXDEPT,4)_">  = "_$P(ECXDESC,U,3)
"RTN","ECXWRDX",92,0)
 .W !?5,"Suffix ",?22,"   = "_$E(ECXDEPT,5,7),!!
"RTN","ECXWRDX",93,0)
 .S DIR(0)="YA",DIR("A")="Is this ok? ",DIR("B")="YES" K X,Y
"RTN","ECXWRDX",94,0)
 .D ^DIR K DIR
"RTN","ECXWRDX",95,0)
 .I $D(DIRUT)!(Y=0) S ECXDEPT="" Q
"RTN","ECXWRDX",96,0)
 .I Y S OUT=1
"RTN","ECXWRDX",97,0)
 Q:$D(DIRUT)
"RTN","ECXWRDX",98,0)
 I ECXDEPT]"" S DIE="^ECX(727.4,",DA=+ECXWARD,DR="1////^S X=ECXDEPT;" D ^DIE
"RTN","ECXWRDX",99,0)
 W !!
"RTN","ECXWRDX",100,0)
 Q
"RTN","ECXWRDX",101,0)
 ;
"RTN","ECXWRDX",102,0)
EXIT ;common exit point
"RTN","ECXWRDX",103,0)
 K ECX,ECXWARD,ECXDEPT,ECXSVC,ECXDIV,ECXPUNIT,ECXSUF,ECXDESC
"RTN","ECXWRDX",104,0)
 Q
"RTN","ECXXREV")
0^58^B6974651
"RTN","ECXXREV",1,0)
ECXXREV ;ALB/JAP,BIR/DMA-Status Report from the Extract Log ; [ 05/29/96  5:38 PM ]
"RTN","ECXXREV",2,0)
 ;;3.0;DSS EXTRACTS;**8**;Dec 22, 1997
"RTN","ECXXREV",3,0)
EN ;entry point from option
"RTN","ECXXREV",4,0)
 N EC,EC0,ECM,ECXDIQ,X,Y,DIC,DIQ,DR,POP
"RTN","ECXXREV",5,0)
 S DIC=727,DIC(0)="AEQMZ" D ^DIC K DIC
"RTN","ECXXREV",6,0)
 Q:Y<0
"RTN","ECXXREV",7,0)
 S EC=+Y,EC0=Y(0)
"RTN","ECXXREV",8,0)
 D SHOW
"RTN","ECXXREV",9,0)
 K IO("Q") S %ZIS="Q" D ^%ZIS K %ZIS
"RTN","ECXXREV",10,0)
 Q:POP 
"RTN","ECXXREV",11,0)
 I $D(IO("Q")) D  Q
"RTN","ECXXREV",12,0)
 .S ZTSAVE("EC")="",ZTSAVE("EC0")="",ZTDESC="DSS Extract Status Report",ZTRTN="START^ECXXREV"
"RTN","ECXXREV",13,0)
 .D ^%ZTLOAD
"RTN","ECXXREV",14,0)
 D START W !!
"RTN","ECXXREV",15,0)
 G EN
"RTN","ECXXREV",16,0)
 Q
"RTN","ECXXREV",17,0)
 ;
"RTN","ECXXREV",18,0)
START ;queued entry
"RTN","ECXXREV",19,0)
 N ECXDIQ,ECXRUN,C,L,LN,PG,QFLG
"RTN","ECXXREV",20,0)
 U IO
"RTN","ECXXREV",21,0)
 S $P(LN,"-",80)="",PG=0,QFLG=0
"RTN","ECXXREV",22,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXXREV",23,0)
 D HDR
"RTN","ECXXREV",24,0)
 D SHOW
"RTN","ECXXREV",25,0)
 W !,"Purged:      ",$S(ECXDIQ(727,EC,9,"E")]"":ECXDIQ(727,EC,9,"E"),1:"(Not purged)")
"RTN","ECXXREV",26,0)
 W !,"Transmitted: ",$S(ECXDIQ(727,EC,300,"E")]"":ECXDIQ(727,EC,300,"E"),1:"(Not transmitted)")
"RTN","ECXXREV",27,0)
 I ECXDIQ(727,EC,300,"E")]"" D
"RTN","ECXXREV",28,0)
 .I '$O(^ECX(727,EC,1,0)) W !,"All transmission messages confirmed." Q
"RTN","ECXXREV",29,0)
 .W !,"Unconfirmed transmission message numbers --"
"RTN","ECXXREV",30,0)
 .F ECM=0:0 S ECM=$O(^ECX(727,EC,1,ECM)) Q:'ECM  D  Q:QFLG
"RTN","ECXXREV",31,0)
 ..W !,ECM
"RTN","ECXXREV",32,0)
 ..S ECM=$O(^ECX(727,EC,1,ECM)) I 'ECM S QFLG=1 Q
"RTN","ECXXREV",33,0)
 ..W ?20,ECM
"RTN","ECXXREV",34,0)
 ..S ECM=$O(^ECX(727,EC,1,ECM)) I 'ECM S QFLG=1 Q
"RTN","ECXXREV",35,0)
 ..W ?40,ECM
"RTN","ECXXREV",36,0)
 ..I $Y+3>IOSL D HDR Q:QFLG
"RTN","ECXXREV",37,0)
 D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" K IO("Q")
"RTN","ECXXREV",38,0)
 Q
"RTN","ECXXREV",39,0)
 ;
"RTN","ECXXREV",40,0)
HDR ;header
"RTN","ECXXREV",41,0)
 N JJ,SS
"RTN","ECXXREV",42,0)
 I $E(IOST)="C" D
"RTN","ECXXREV",43,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXXREV",44,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXXREV",45,0)
 Q:QFLG
"RTN","ECXXREV",46,0)
 W:$Y @IOF S PG=PG+1
"RTN","ECXXREV",47,0)
 W !,"Status Report for DSS Extract #",EC," ("_$P(EC0,U,3)_")"
"RTN","ECXXREV",48,0)
 I $E(IOST)'="C" W !,"Printed: ",ECXRUN,?68,"Page: ",PG
"RTN","ECXXREV",49,0)
 W !,LN
"RTN","ECXXREV",50,0)
 I PG>1 W !,"Unconfirmed transmission message numbers (con.t) --",!
"RTN","ECXXREV",51,0)
 Q
"RTN","ECXXREV",52,0)
 ;
"RTN","ECXXREV",53,0)
SHOW ;get data on extract
"RTN","ECXXREV",54,0)
 S DIC="^ECX(727,",DR="1;6;3;4;5;9;15;300",DA=+EC,DIQ(0)="E",DIQ="ECXDIQ" D EN^DIQ1
"RTN","ECXXREV",55,0)
 W !!,ECXDIQ(727,EC,6,"E")_" Extract (#"_EC_")",?42,"Records:    ",ECXDIQ(727,EC,5,"E")
"RTN","ECXXREV",56,0)
 W !,"Generated:   ",ECXDIQ(727,EC,1,"E"),?42,"Start date: ",ECXDIQ(727,EC,3,"E")
"RTN","ECXXREV",57,0)
 W !,"Division:    ",$E(ECXDIQ(727,EC,15,"E"),1,26),?42,"End date:   ",ECXDIQ(727,EC,4,"E")
"RTN","ECXXREV",58,0)
 Q
"SEC","^DIC",727.3,727.3,0,"AUDIT")
@
"SEC","^DIC",727.3,727.3,0,"DD")
^
"SEC","^DIC",727.3,727.3,0,"DEL")
^
"SEC","^DIC",727.3,727.3,0,"LAYGO")
^
"SEC","^DIC",727.3,727.3,0,"RD")

"SEC","^DIC",727.3,727.3,0,"WR")
^
"SEC","^DIC",727.4,727.4,0,"AUDIT")
@
"SEC","^DIC",727.4,727.4,0,"DD")
^
"SEC","^DIC",727.4,727.4,0,"DEL")
^
"SEC","^DIC",727.4,727.4,0,"LAYGO")
^
"SEC","^DIC",727.4,727.4,0,"RD")

"SEC","^DIC",727.4,727.4,0,"WR")
^
"SEC","^DIC",729,729,0,"AUDIT")
@
"SEC","^DIC",729,729,0,"DD")
^
"SEC","^DIC",729,729,0,"DEL")
^
"SEC","^DIC",729,729,0,"LAYGO")
^
"SEC","^DIC",729,729,0,"RD")

"SEC","^DIC",729,729,0,"WR")
^
"VER")
8.0^21.0
"^DD",727.1,727.1,7,0)
TYPE^RF^^0;7^K:$L(X)>30!($L(X)<3) X
"^DD",727.1,727.1,7,1,0)
^.1
"^DD",727.1,727.1,7,1,1,0)
727.1^AC
"^DD",727.1,727.1,7,1,1,1)
S ^ECX(727.1,"AC",$E(X,1,30),DA)=""
"^DD",727.1,727.1,7,1,1,2)
K ^ECX(727.1,"AC",$E(X,1,30),DA)
"^DD",727.1,727.1,7,1,1,"DT")
2980706
"^DD",727.1,727.1,7,3)
Answer must be 3-30 characters in length.
"^DD",727.1,727.1,7,21,0)
^^3^3^2970925^
"^DD",727.1,727.1,7,21,1,0)
This is the print name for the extract.  It has an important use in
"^DD",727.1,727.1,7,21,2,0)
supplying a data element to the TYPE field (#2) of the DSS EXTRACT
"^DD",727.1,727.1,7,21,3,0)
LOG file (#727).
"^DD",727.1,727.1,7,23,0)
^^5^5^2970925^
"^DD",727.1,727.1,7,23,1,0)
A free text field; only 1st character is capitalized.  Used as
"^DD",727.1,727.1,7,23,2,0)
print name for the extract.
"^DD",727.1,727.1,7,23,3,0)
 
"^DD",727.1,727.1,7,23,4,0)
This data element is also hard-coded into the SETUP code unit of
"^DD",727.1,727.1,7,23,5,0)
each extract routine using variable ECPACK.
"^DD",727.1,727.1,7,"DT")
2980706
"^DD",727.1,727.1,11,0)
RUNNING PIECE^RNJ2,0^^0;10^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.1,727.1,11,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",727.1,727.1,11,21,0)
^^3^3^2980706^^
"^DD",727.1,727.1,11,21,1,0)
This numeric provides the position of the data element which indicates
"^DD",727.1,727.1,11,21,2,0)
whether an extract of this type is currently running or is queued to
"^DD",727.1,727.1,11,21,3,0)
run.
"^DD",727.1,727.1,11,23,0)
^^2^2^2980706^
"^DD",727.1,727.1,11,23,1,0)
The piece of the ^ECX(728,1,7.1) node indicated in this field will
"^DD",727.1,727.1,11,23,2,0)
contain an "R", if the extract is currently running or queued to run.
"^DD",727.1,727.1,11,"DT")
2980706
"^DD",727.3,727.3,0)
FIELD^^1^2
"^DD",727.3,727.3,0,"DT")
2980716
"^DD",727.3,727.3,0,"IX","B",727.3,.01)

"^DD",727.3,727.3,0,"IX","C",727.3,1)

"^DD",727.3,727.3,0,"NM","DSS DIVISION IDENTIFIER")

"^DD",727.3,727.3,0,"VRPK")
ECX
"^DD",727.3,727.3,.01,0)
MEDICAL CENTER DIVISION^RP40.8'^DG(40.8,^0;1^Q
"^DD",727.3,727.3,.01,1,0)
^.1
"^DD",727.3,727.3,.01,1,1,0)
727.3^B
"^DD",727.3,727.3,.01,1,1,1)
S ^ECX(727.3,"B",$E(X,1,30),DA)=""
"^DD",727.3,727.3,.01,1,1,2)
K ^ECX(727.3,"B",$E(X,1,30),DA)
"^DD",727.3,727.3,.01,3)

"^DD",727.3,727.3,.01,8.5)
^
"^DD",727.3,727.3,.01,9)
^
"^DD",727.3,727.3,.01,21,0)
^^3^3^2980701^
"^DD",727.3,727.3,.01,21,1,0)
Only existing entries in the MEDICAL CENTER DIVISION file (#40.8) may
"^DD",727.3,727.3,.01,21,2,0)
be selected.  The division must be active during the current fiscal 
"^DD",727.3,727.3,.01,21,3,0)
year.
"^DD",727.3,727.3,.01,"DT")
2980701
"^DD",727.3,727.3,1,0)
DSS DIVISION IDENTIFIER^RFX^^0;2^K:$L(X)>1!($L(X)<1)!(X?.P) X
"^DD",727.3,727.3,1,1,0)
^.1
"^DD",727.3,727.3,1,1,1,0)
727.3^C
"^DD",727.3,727.3,1,1,1,1)
S ^ECX(727.3,"C",$E(X,1,30),DA)=""
"^DD",727.3,727.3,1,1,1,2)
K ^ECX(727.3,"C",$E(X,1,30),DA)
"^DD",727.3,727.3,1,1,1,"%D",0)
^^1^1^2980714^
"^DD",727.3,727.3,1,1,1,"%D",1,0)
Regular cross-reference on DSS Division Identifier.
"^DD",727.3,727.3,1,1,1,"DT")
2980714
"^DD",727.3,727.3,1,3)
Answer must be a unique code, 1 character in length.
"^DD",727.3,727.3,1,8.5)
^
"^DD",727.3,727.3,1,9)
^
"^DD",727.3,727.3,1,21,0)
^^6^6^2980721^^^
"^DD",727.3,727.3,1,21,1,0)
Sites should use the same value as they have established on DSS in Austin
"^DD",727.3,727.3,1,21,2,0)
for the medical center division.
"^DD",727.3,727.3,1,21,3,0)
 
"^DD",727.3,727.3,1,21,4,0)
Exactly one alphanumeric character.
"^DD",727.3,727.3,1,21,5,0)
Numerics: 1-9 (0 not allowed).
"^DD",727.3,727.3,1,21,6,0)
Alphas: A-Z (lowercase not allowed).
"^DD",727.3,727.3,1,"DT")
2980721
"^DD",727.4,727.4,0)
FIELD^^1^2
"^DD",727.4,727.4,0,"DT")
2980701
"^DD",727.4,727.4,0,"IX","B",727.4,.01)

"^DD",727.4,727.4,0,"NM","DSS WARD")

"^DD",727.4,727.4,0,"VRPK")
ECX
"^DD",727.4,727.4,.01,0)
MEDICAL CENTER WARD^RP42'^DIC(42,^0;1^Q
"^DD",727.4,727.4,.01,1,0)
^.1
"^DD",727.4,727.4,.01,1,1,0)
727.4^B
"^DD",727.4,727.4,.01,1,1,1)
S ^ECX(727.4,"B",$E(X,1,30),DA)=""
"^DD",727.4,727.4,.01,1,1,2)
K ^ECX(727.4,"B",$E(X,1,30),DA)
"^DD",727.4,727.4,.01,3)

"^DD",727.4,727.4,.01,8.5)
^
"^DD",727.4,727.4,.01,9)
^
"^DD",727.4,727.4,.01,"DT")
2980701
"^DD",727.4,727.4,1,0)
DSS DEPARTMENT^RF^^0;2^K:$L(X)>7!($L(X)<4) X
"^DD",727.4,727.4,1,3)
Answer must be 4-7 characters in length.
"^DD",727.4,727.4,1,8.5)
^
"^DD",727.4,727.4,1,9)
^
"^DD",727.4,727.4,1,21,0)
^^16^16^2980701^
"^DD",727.4,727.4,1,21,1,0)
The DSS Department code consists of a minimum of 4 characters as:
"^DD",727.4,727.4,1,21,2,0)
  
"^DD",727.4,727.4,1,21,3,0)
     ABBCxxx
"^DD",727.4,727.4,1,21,4,0)
  
"^DD",727.4,727.4,1,21,5,0)
Derived as follows:
"^DD",727.4,727.4,1,21,6,0)
  
"^DD",727.4,727.4,1,21,7,0)
A  = DSS CODE in NATIONAL SERVICE file (#730)
"^DD",727.4,727.4,1,21,8,0)
BB = DSS PRODUCTION UNIT CODE in DSS PRODUCTION UNIT file (#729) 
"^DD",727.4,727.4,1,21,9,0)
C  = DSS DIVISION IDENTIFIER in DSS DIVISION IDENTIFIER file (#727.3)
"^DD",727.4,727.4,1,21,10,0)
  
"^DD",727.4,727.4,1,21,11,0)
xxx = A suffix of not more than three characters which must be numeric
"^DD",727.4,727.4,1,21,12,0)
      digits or uppercase alpha characters.  The first character of the
"^DD",727.4,727.4,1,21,13,0)
      string may be "-", but that is not recommended.
"^DD",727.4,727.4,1,21,14,0)
  
"^DD",727.4,727.4,1,21,15,0)
This field should not be edited through FileMan.  Use the appropriate
"^DD",727.4,727.4,1,21,16,0)
DSS EXTRACTS option.
"^DD",727.4,727.4,1,"DT")
2980701
"^DD",727.802,727.802,18,0)
ELIGIBILITY^F^^0;19^K:$L(X)>3!($L(X)<1) X
"^DD",727.802,727.802,18,.1)
Eligibility
"^DD",727.802,727.802,18,3)
Answer must be 1-3 characters in length.
"^DD",727.802,727.802,18,21,0)
^^1^1^2980708^^^^
"^DD",727.802,727.802,18,21,1,0)
Appropriate eligibility code based on veteran or non-veteran status.
"^DD",727.802,727.802,18,23,0)
^^9^9^2980708^^^^
"^DD",727.802,727.802,18,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.802,727.802,18,23,2,0)
in the ADMISSION EXTRACT file (#727.802), ELIGIBILITY data is derived from
"^DD",727.802,727.802,18,23,3,0)
the PRIMARY ELIGIBILITY CODE field (.361) in the PATIENT file (#2).
"^DD",727.802,727.802,18,23,4,0)
PRIMARY ELIGIBILITY CODE is a pointer to the ELIGIBILITY CODE file (#8).
"^DD",727.802,727.802,18,23,5,0)
The data is derived from the MAS ELIGIBILITY CODE field (8) in the
"^DD",727.802,727.802,18,23,6,0)
ELIGIBILITY CODE file (#8) which in turn is a pointer to the MAS
"^DD",727.802,727.802,18,23,7,0)
ELIGIBILITY CODE file (#8.1). The MAS eligibility code pointer value is
"^DD",727.802,727.802,18,23,8,0)
converted to an alpha character representative of it's number, i.e., 1
"^DD",727.802,727.802,18,23,9,0)
converts to A, 2 converts to B, etc.
"^DD",727.802,727.802,18,"DT")
2980708
"^DD",727.802,727.802,34,0)
PRIMARY CARE PROVIDER^F^^0;35^K:$L(X)>11!($L(X)<1) X
"^DD",727.802,727.802,34,.1)
Primary Care Provider
"^DD",727.802,727.802,34,3)
Enter primary care provider assigned to this patient.
"^DD",727.802,727.802,34,21,0)
^^1^1^2980708^^^^
"^DD",727.802,727.802,34,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.802,727.802,34,23,0)
^^8^8^2980708^^^^
"^DD",727.802,727.802,34,23,1,0)
Using the DATE/TIME field (.01) from the PATIENT MOVEMENT file (#405) 
"^DD",727.802,727.802,34,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) 
"^DD",727.802,727.802,34,23,3,0)
in the ADMISSION EXTRACT file (#727.802), a call is made to the 
"^DD",727.802,727.802,34,23,4,0)
Scheduling API, OUTPTPR^SDUTL3. The API returns the provider's internal 
"^DD",727.802,727.802,34,23,5,0)
entry number and name from the NEW PERSON file (#200). 
"^DD",727.802,727.802,34,23,6,0)
 
"^DD",727.802,727.802,34,23,7,0)
A "2" is prefixed to the pointer value to indicate that the source file
"^DD",727.802,727.802,34,23,8,0)
is "200".
"^DD",727.802,727.802,34,"DT")
2961015
"^DD",727.802,727.802,38,0)
DSS DEPT.^F^^1;2^K:$L(X)>10!($L(X)<4) X
"^DD",727.802,727.802,38,3)
Answer must be 4-10 characters in length.
"^DD",727.802,727.802,38,21,0)
^^2^2^2980708^^
"^DD",727.802,727.802,38,21,1,0)
The DSS Department code for the ward.  Must contain at least
"^DD",727.802,727.802,38,21,2,0)
four characters to be a valid code.
"^DD",727.802,727.802,38,23,0)
^^12^12^2980708^
"^DD",727.802,727.802,38,23,1,0)
The DSS Department code for the ward associated with the admission
"^DD",727.802,727.802,38,23,2,0)
movement record.  This code is found in the DSS WARD file (#727.4)
"^DD",727.802,727.802,38,23,3,0)
using the value of the WARD LOCATION field (#.06) of the PATIENT
"^DD",727.802,727.802,38,23,4,0)
MOVEMENT file (#405) record for the patient's admission movement.
"^DD",727.802,727.802,38,23,5,0)
The value found in WARD LOCATION is a pointer to the WARD LOCATION
"^DD",727.802,727.802,38,23,6,0)
file (#42).
"^DD",727.802,727.802,38,23,7,0)
 
"^DD",727.802,727.802,38,23,8,0)
Each record in file #727.4 has a #.01 field which points to a record
"^DD",727.802,727.802,38,23,9,0)
in file #42, and the internal entry number of the file #727.4 is set
"^DD",727.802,727.802,38,23,10,0)
to be the same as the record in file #42 to which it points.  Therefore,
"^DD",727.802,727.802,38,23,11,0)
the WARD LOCATION field (#.06) can be used as a pointer to file #727.4
"^DD",727.802,727.802,38,23,12,0)
as well.
"^DD",727.802,727.802,38,"DT")
2980708
"^DD",727.802,727.802,42,0)
ADMISSION ELIGIBILITY^F^^1;6^K:$L(X)>3!($L(X)<1) X
"^DD",727.802,727.802,42,3)
Answer must be 1-3 characters in length.
"^DD",727.802,727.802,42,21,0)
^^1^1^2980708^^
"^DD",727.802,727.802,42,21,1,0)
The eligibility of the patient for this specific admission.
"^DD",727.802,727.802,42,23,0)
^^12^12^2980708^
"^DD",727.802,727.802,42,23,1,0)
The Admission Eligibility is derived from the ADMITTING ELIGIBILITY
"^DD",727.802,727.802,42,23,2,0)
field (#.2) of the PATIENT MOVEMENT file (#405) record associated 
"^DD",727.802,727.802,42,23,3,0)
with this patient admission.
"^DD",727.802,727.802,42,23,4,0)
 
"^DD",727.802,727.802,42,23,5,0)
Field (#.2) points to the ELIGIBILITY CODE file (#8).  Then the
"^DD",727.802,727.802,42,23,6,0)
MAS ELIGIBILITY CODE field (#8) of file #8 points to the MAS
"^DD",727.802,727.802,42,23,7,0)
ELIGIBILITY CODE file (#8.1).  This pointer value to file #8.1 is
"^DD",727.802,727.802,42,23,8,0)
converted to a 1-character alpha code by using the following
"^DD",727.802,727.802,42,23,9,0)
formula:
"^DD",727.802,727.802,42,23,10,0)
 
"^DD",727.802,727.802,42,23,11,0)
   If the pointer to file #8.1 is in variable E, then the
"^DD",727.802,727.802,42,23,12,0)
   Admission Eligibility is set to $C(E+64).
"^DD",727.802,727.802,42,"DT")
2980708
"^DD",727.802,727.802,45,0)
SHARING AGREEMENT PAYOR^F^^1;9^K:$L(X)>15!($L(X)<3) X
"^DD",727.802,727.802,45,3)
Answer must be 3-15 characters in length.
"^DD",727.802,727.802,45,21,0)
^^1^1^2980915^^^
"^DD",727.802,727.802,45,21,1,0)
An indicator used for patients participating in sharing agreements.
"^DD",727.802,727.802,45,23,0)
14^^12^12^2980915^^
"^DD",727.802,727.802,45,23,1,0)
The ALIAS sub-field (#.01) of the ALIAS multiple field (#1) of the
"^DD",727.802,727.802,45,23,2,0)
PATIENT file (#2) is used to indicate a patient who participates in 
"^DD",727.802,727.802,45,23,3,0)
a sharing agreement.
"^DD",727.802,727.802,45,23,4,0)
 
"^DD",727.802,727.802,45,23,5,0)
If the #.01 field contains any one of the following key words, that
"^DD",727.802,727.802,45,23,6,0)
word(s) will be placed into this field:
"^DD",727.802,727.802,45,23,7,0)
 
"^DD",727.802,727.802,45,23,8,0)
SHARING AGREEMENT
"^DD",727.802,727.802,45,23,9,0)
CHAMPVA
"^DD",727.802,727.802,45,23,10,0)
TRICARE
"^DD",727.802,727.802,45,23,11,0)
CAT C
"^DD",727.802,727.802,45,23,12,0)
CATEGORY C
"^DD",727.802,727.802,45,"DT")
2980713
"^DD",727.802,727.802,46,0)
SHARING AGREEMENT INSURANCE^F^^1;10^K:$L(X)>30!($L(X)<3) X
"^DD",727.802,727.802,46,3)
Answer must be 3-30 characters in length.
"^DD",727.802,727.802,46,21,0)
^^2^2^2980915^^^
"^DD",727.802,727.802,46,21,1,0)
Used to indicate insurer(s) for patients who participate in
"^DD",727.802,727.802,46,21,2,0)
sharing agreements.
"^DD",727.802,727.802,46,23,0)
^^15^15^2980915^^^
"^DD",727.802,727.802,46,23,1,0)
The INSURANCE TYPE sub-field (#.01) of the INSURANCE TYPE multiple
"^DD",727.802,727.802,46,23,2,0)
field (#.3121) of the PAITENT file (#2).
"^DD",727.802,727.802,46,23,3,0)
 
"^DD",727.802,727.802,46,23,4,0)
If there are multiple insurance companies listed, they shall
"^DD",727.802,727.802,46,23,5,0)
be extracted according to the following:
"^DD",727.802,727.802,46,23,6,0)
a) If there is one insurance company send up to 30 characters.
"^DD",727.802,727.802,46,23,7,0)
b) If there are two insurance companies, send two 14-character
"^DD",727.802,727.802,46,23,8,0)
   names separated by a comma.
"^DD",727.802,727.802,46,23,9,0)
c) If there are three insurance companies, send three 
"^DD",727.802,727.802,46,23,10,0)
   9-character names separated by commas.
"^DD",727.802,727.802,46,23,11,0)
d) If there are 4 or more insurance companies, send the first
"^DD",727.802,727.802,46,23,12,0)
   three 9-character names separated by commas, followed by 
"^DD",727.802,727.802,46,23,13,0)
   another comma and the character M.  M would stand for More
"^DD",727.802,727.802,46,23,14,0)
   and the implication is there are more than 4 insurance 
"^DD",727.802,727.802,46,23,15,0)
   companies.
"^DD",727.802,727.802,46,"DT")
2980713
"^DD",727.802,727.802,47,0)
ENROLLMENT LOCATION^F^^1;11^K:$L(X)>5!($L(X)<3) X
"^DD",727.802,727.802,47,3)
Answer must be 3-5 characters in length.
"^DD",727.802,727.802,47,21,0)
^^2^2^2980713^
"^DD",727.802,727.802,47,21,1,0)
The facility that the patient chooses to designate as his 
"^DD",727.802,727.802,47,21,2,0)
preferred location for care.
"^DD",727.802,727.802,47,23,0)
^^5^5^2980713^
"^DD",727.802,727.802,47,23,1,0)
The PREFERRED FACILITY field (# 27.02) of the PATIENT file (#2)
"^DD",727.802,727.802,47,23,2,0)
is defined as the facility that the patient chooses to designate
"^DD",727.802,727.802,47,23,3,0)
as his preferred location for care.  The PREFERRED FACILITY field
"^DD",727.802,727.802,47,23,4,0)
(# 27.02) is a pointer to the INSTITUTION file (#4) and is the 
"^DD",727.802,727.802,47,23,5,0)
value in the STATION NUMBER field (#99).
"^DD",727.802,727.802,47,"DT")
2980713
"^DD",727.803,727.803,16,0)
PRIMARY CARE PROVIDER^F^^0;17^K:$L(X)>11!($L(X)<1) X
"^DD",727.803,727.803,16,.1)
Primary Care Provider
"^DD",727.803,727.803,16,3)
Enter primary care provider assigned to this patient.
"^DD",727.803,727.803,16,21,0)
^^1^1^2980708^^^^
"^DD",727.803,727.803,16,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.803,727.803,16,23,0)
^^13^13^2980708^^^^
"^DD",727.803,727.803,16,23,1,0)
For scheduled appointments and appended EKG visits, use the 
"^DD",727.803,727.803,16,23,2,0)
APPOINTMENT DATE/TIME field (.01) in the APPOINTMENT field (1900) 
"^DD",727.803,727.803,16,23,3,0)
multiple of the HOSPITAL LOCATION file (#44).
"^DD",727.803,727.803,16,23,4,0)
For dispositions, stand-alones, and appended lab and x-ray visits, 
"^DD",727.803,727.803,16,23,5,0)
use the DATE field (.01) in the OUTPATIENT ENCOUNTER file 409.68). 
"^DD",727.803,727.803,16,23,6,0)
The date along with the patient pointer (DFN) stored in the PATIENT 
"^DD",727.803,727.803,16,23,7,0)
NO. - DFN field (4) in the CLINIC EXTRACT file (#727.803) is used to 
"^DD",727.803,727.803,16,23,8,0)
make a call to the Scheduling API, OUTPTPR^SDUTL3. The API returns 
"^DD",727.803,727.803,16,23,9,0)
the provider's internal entry number and name from the NEW PERSON 
"^DD",727.803,727.803,16,23,10,0)
file (#200). 
"^DD",727.803,727.803,16,23,11,0)
 
"^DD",727.803,727.803,16,23,12,0)
A "2" is prefixed to the pointer value to indicate that the source file
"^DD",727.803,727.803,16,23,13,0)
is "200".
"^DD",727.803,727.803,16,"DT")
2961015
"^DD",727.803,727.803,17,0)
PROVIDER^F^^0;18^K:$L(X)>11!($L(X)<1) X
"^DD",727.803,727.803,17,.1)
Provider
"^DD",727.803,727.803,17,3)
Enter provider for this record.
"^DD",727.803,727.803,17,21,0)
^^1^1^2980708^^^^
"^DD",727.803,727.803,17,21,1,0)
The provider assigned to this patient.
"^DD",727.803,727.803,17,23,0)
^^10^10^2980708^^^^
"^DD",727.803,727.803,17,23,1,0)
Using the internal entry number for the encounter in the OUTPATIENT 
"^DD",727.803,727.803,17,23,2,0)
ENCOUNTER file (#409.68), the VISIT FILE ENTRY field (.05) is 
"^DD",727.803,727.803,17,23,3,0)
determined. This entry is used to make a call to the Patient Care 
"^DD",727.803,727.803,17,23,4,0)
Encounter API, ENCEVENT^PXAPI. The API returns all visit data in the 
"^DD",727.803,727.803,17,23,5,0)
TMP("PXKENC",$J) array. The first provider identified as "primary" 
"^DD",727.803,727.803,17,23,6,0)
from the array is used. A default value of null is used if no 
"^DD",727.803,727.803,17,23,7,0)
"primary" provider is found.
"^DD",727.803,727.803,17,23,8,0)
 
"^DD",727.803,727.803,17,23,9,0)
A "2" is prefixed to the pointer value to indicate that the source file
"^DD",727.803,727.803,17,23,10,0)
is "200".
"^DD",727.803,727.803,17,"DT")
2961015
"^DD",727.803,727.803,21,0)
ELIGIBILITY^F^^0;22^K:$L(X)>3!($L(X)<1) X
"^DD",727.803,727.803,21,.1)
Eligibility
"^DD",727.803,727.803,21,3)
Answer must be 1-3 characters in length.
"^DD",727.803,727.803,21,21,0)
^^1^1^2980608^^^^
"^DD",727.803,727.803,21,21,1,0)
Appropriate eligibility code based on veteran or non-veteran status.
"^DD",727.803,727.803,21,23,0)
^^9^9^2980608^^^^
"^DD",727.803,727.803,21,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field
"^DD",727.803,727.803,21,23,2,0)
(4) in the CLINIC EXTRACT file (#727.803), ELIGIBILITY data is derived 
"^DD",727.803,727.803,21,23,3,0)
from the PRIMARY ELIGIBILITY CODE field (.361) in the PATIENT file (#2).
"^DD",727.803,727.803,21,23,4,0)
PRIMARY ELIGIBILITY CODE is a pointer to the ELIGIBILITY CODE file (#8).
"^DD",727.803,727.803,21,23,5,0)
The data is derived from the MAS ELIGIBILITY CODE field (8) in the
"^DD",727.803,727.803,21,23,6,0)
ELIGIBILITY CODE file (#8) which in turn is a pointer to the MAS
"^DD",727.803,727.803,21,23,7,0)
ELIGIBILITY CODE file (#8.1). The MAS eligibility code pointer value is
"^DD",727.803,727.803,21,23,8,0)
converted to an alpha character representative of it's number, i.e., 1
"^DD",727.803,727.803,21,23,9,0)
converts to A, 2 converts to B, etc.
"^DD",727.803,727.803,21,"DT")
2980708
"^DD",727.803,727.803,33,0)
SEX^S^M:MALE;F:FEMALE;^1;3^Q
"^DD",727.803,727.803,33,21,0)
^^1^1^2980708^^^
"^DD",727.803,727.803,33,21,1,0)
The sex of the patient.  M(ale) or F(emale).
"^DD",727.803,727.803,33,23,0)
^^2^2^2980708^^
"^DD",727.803,727.803,33,23,1,0)
Data is taken from the SEX field (#.02) of the patient's record in
"^DD",727.803,727.803,33,23,2,0)
the PATIENT file (#2).
"^DD",727.803,727.803,33,"DT")
2980708
"^DD",727.803,727.803,34,0)
ZIP+4^F^^1;4^K:$L(X)>10!($L(X)<5) X
"^DD",727.803,727.803,34,3)
Answer must be 5-10 characters in length.
"^DD",727.803,727.803,34,21,0)
^^1^1^2980708^^^^
"^DD",727.803,727.803,34,21,1,0)
The patient's zipcode with optional 4-digit extension.
"^DD",727.803,727.803,34,23,0)
^^3^3^2980708^^
"^DD",727.803,727.803,34,23,1,0)
The patient's zipcode with optional 4-digit extension as found in
"^DD",727.803,727.803,34,23,2,0)
the ZIP+4 field (#.1112) of the patient's record in the PATIENT
"^DD",727.803,727.803,34,23,3,0)
file (#2).
"^DD",727.803,727.803,34,"DT")
2980708
"^DD",727.803,727.803,37,0)
ENCOUNTER ELIGIBILITY^F^^1;7^K:$L(X)>3!($L(X)<1) X
"^DD",727.803,727.803,37,3)
Answer must be 1-3 characters in length.
"^DD",727.803,727.803,37,21,0)
^^1^1^2980708^^^
"^DD",727.803,727.803,37,21,1,0)
The patient's eligibility for this outpatient encounter.
"^DD",727.803,727.803,37,23,0)
^^14^14^2980708^
"^DD",727.803,727.803,37,23,1,0)
The Encounter Eligibility is derived as follows.
"^DD",727.803,727.803,37,23,2,0)
  
"^DD",727.803,727.803,37,23,3,0)
From the OUTPATIENT ENCOUNTER field (#21) of the APPOINTMENT field
"^DD",727.803,727.803,37,23,4,0)
(#1900) multiple of the PATIENT file (#2), which points to the
"^DD",727.803,727.803,37,23,5,0)
OUTPATIENT ENCOUNTER file (#409.68).  The ELIGIBILITY OF ENCOUNTER
"^DD",727.803,727.803,37,23,6,0)
field (#.13) of file #409.68 points to the ELIGIBILITY CODE file (#8).
"^DD",727.803,727.803,37,23,7,0)
  
"^DD",727.803,727.803,37,23,8,0)
Then the MAS ELIGIBILITY CODE field (#8) of file #8 points to the
"^DD",727.803,727.803,37,23,9,0)
MAS ELIGIBILITY CODE file (#8.1).  This pointer value to file #8.1 
"^DD",727.803,727.803,37,23,10,0)
is converted to a 1-character alpha code by using the following
"^DD",727.803,727.803,37,23,11,0)
formula:
"^DD",727.803,727.803,37,23,12,0)
  
"^DD",727.803,727.803,37,23,13,0)
   If the pointer to file #8.1 is in variable E, then the
"^DD",727.803,727.803,37,23,14,0)
   Admission Eligibility is set to $C(E+64).
"^DD",727.803,727.803,37,"DT")
2980708
"^DD",727.803,727.803,40,0)
CPT CODE (2)^F^^1;10^K:$L(X)>8!($L(X)<5) X
"^DD",727.803,727.803,40,3)
Answer must be 5-8 characters in length.
"^DD",727.803,727.803,40,21,0)
^^2^2^2980709^
"^DD",727.803,727.803,40,21,1,0)
The Current Procedural Terminology (CPT) code for a procedure 
"^DD",727.803,727.803,40,21,2,0)
performed during the outpatient visit.
"^DD",727.803,727.803,40,23,0)
^^8^8^2980709^^
"^DD",727.803,727.803,40,23,1,0)
Using the internal entry number for the encounter in the OUTPATIENT 
"^DD",727.803,727.803,40,23,2,0)
ENCOUNTER file (#409.68), the VISIT FILE ENTRY field (.05) is 
"^DD",727.803,727.803,40,23,3,0)
determined. This entry is used to make a call to the Patient Care 
"^DD",727.803,727.803,40,23,4,0)
Encounter API, ENCEVENT^PXAPI. The API returns all visit data in the 
"^DD",727.803,727.803,40,23,5,0)
TMP("PXKENC",$J) array.
"^DD",727.803,727.803,40,23,6,0)
  
"^DD",727.803,727.803,40,23,7,0)
Use the next CPT code listed in the array which has not already
"^DD",727.803,727.803,40,23,8,0)
been captured for the extract record. 
"^DD",727.803,727.803,40,"DT")
2980709
"^DD",727.803,727.803,41,0)
CPT CODE (3)^F^^1;11^K:$L(X)>8!($L(X)<5) X
"^DD",727.803,727.803,41,3)
Answer must be 5-8 characters in length.
"^DD",727.803,727.803,41,21,0)
^^2^2^2980709^
"^DD",727.803,727.803,41,21,1,0)
The Current Procedural Terminology (CPT) code for a procedure 
"^DD",727.803,727.803,41,21,2,0)
performed during the outpatient visit.
"^DD",727.803,727.803,41,23,0)
^^8^8^2980709^
"^DD",727.803,727.803,41,23,1,0)
Using the internal entry number for the encounter in the OUTPATIENT 
"^DD",727.803,727.803,41,23,2,0)
ENCOUNTER file (#409.68), the VISIT FILE ENTRY field (.05) is 
"^DD",727.803,727.803,41,23,3,0)
determined. This entry is used to make a call to the Patient Care 
"^DD",727.803,727.803,41,23,4,0)
Encounter API, ENCEVENT^PXAPI. The API returns all visit data in the 
"^DD",727.803,727.803,41,23,5,0)
TMP("PXKENC",$J) array.
"^DD",727.803,727.803,41,23,6,0)
  
"^DD",727.803,727.803,41,23,7,0)
Use the next CPT code listed in the array which has not already
"^DD",727.803,727.803,41,23,8,0)
been captured for the extract record. 
"^DD",727.803,727.803,41,"DT")
2980709
"^DD",727.803,727.803,42,0)
CPT CODE (4)^F^^1;12^K:$L(X)>8!($L(X)<5) X
"^DD",727.803,727.803,42,3)
Answer must be 5-8 characters in length.
"^DD",727.803,727.803,42,21,0)
^^2^2^2980709^
"^DD",727.803,727.803,42,21,1,0)
The Current Procedural Terminology (CPT) code for a procedure 
"^DD",727.803,727.803,42,21,2,0)
performed during the outpatient visit.
"^DD",727.803,727.803,42,23,0)
^^8^8^2980709^
"^DD",727.803,727.803,42,23,1,0)
Using the internal entry number for the encounter in the OUTPATIENT 
"^DD",727.803,727.803,42,23,2,0)
ENCOUNTER file (#409.68), the VISIT FILE ENTRY field (.05) is 
"^DD",727.803,727.803,42,23,3,0)
determined. This entry is used to make a call to the Patient Care 
"^DD",727.803,727.803,42,23,4,0)
Encounter API, ENCEVENT^PXAPI. The API returns all visit data in the 
"^DD",727.803,727.803,42,23,5,0)
TMP("PXKENC",$J) array.
"^DD",727.803,727.803,42,23,6,0)
  
"^DD",727.803,727.803,42,23,7,0)
Use the next CPT code listed in the array which has not already
"^DD",727.803,727.803,42,23,8,0)
been captured for the extract record. 
"^DD",727.803,727.803,42,"DT")
2980709
"^DD",727.803,727.803,43,0)
CPT CODE (5)^F^^1;13^K:$L(X)>8!($L(X)<5) X
"^DD",727.803,727.803,43,3)
Answer must be 5-8 characters in length.
"^DD",727.803,727.803,43,21,0)
^^2^2^2980709^
"^DD",727.803,727.803,43,21,1,0)
The Current Procedural Terminology (CPT) code for a procedure 
"^DD",727.803,727.803,43,21,2,0)
performed during the outpatient visit.
"^DD",727.803,727.803,43,23,0)
^^8^8^2980709^
"^DD",727.803,727.803,43,23,1,0)
Using the internal entry number for the encounter in the OUTPATIENT 
"^DD",727.803,727.803,43,23,2,0)
ENCOUNTER file (#409.68), the VISIT FILE ENTRY field (.05) is 
"^DD",727.803,727.803,43,23,3,0)
determined. This entry is used to make a call to the Patient Care 
"^DD",727.803,727.803,43,23,4,0)
Encounter API, ENCEVENT^PXAPI. The API returns all visit data in the 
"^DD",727.803,727.803,43,23,5,0)
TMP("PXKENC",$J) array.
"^DD",727.803,727.803,43,23,6,0)
  
"^DD",727.803,727.803,43,23,7,0)
Use the next CPT code listed in the array which has not already
"^DD",727.803,727.803,43,23,8,0)
been captured for the extract record. 
"^DD",727.803,727.803,43,"DT")
2980709
"^DD",727.803,727.803,44,0)
CPT CODE (6)^F^^1;14^K:$L(X)>8!($L(X)<5) X
"^DD",727.803,727.803,44,3)
Answer must be 5-8 characters in length.
"^DD",727.803,727.803,44,21,0)
^^2^2^2980709^
"^DD",727.803,727.803,44,21,1,0)
The Current Procedural Terminology (CPT) code for a procedure 
"^DD",727.803,727.803,44,21,2,0)
performed during the outpatient visit.
"^DD",727.803,727.803,44,23,0)
^^8^8^2980709^
"^DD",727.803,727.803,44,23,1,0)
Using the internal entry number for the encounter in the OUTPATIENT 
"^DD",727.803,727.803,44,23,2,0)
ENCOUNTER file (#409.68), the VISIT FILE ENTRY field (.05) is 
"^DD",727.803,727.803,44,23,3,0)
determined. This entry is used to make a call to the Patient Care 
"^DD",727.803,727.803,44,23,4,0)
Encounter API, ENCEVENT^PXAPI. The API returns all visit data in the 
"^DD",727.803,727.803,44,23,5,0)
TMP("PXKENC",$J) array.
"^DD",727.803,727.803,44,23,6,0)
  
"^DD",727.803,727.803,44,23,7,0)
Use the next CPT code listed in the array which has not already
"^DD",727.803,727.803,44,23,8,0)
been captured for the extract record. 
"^DD",727.803,727.803,44,"DT")
2980709
"^DD",727.803,727.803,45,0)
CPT CODE (7)^F^^1;15^K:$L(X)>8!($L(X)<5) X
"^DD",727.803,727.803,45,3)
Answer must be 5-8 characters in length.
"^DD",727.803,727.803,45,21,0)
^^2^2^2980709^
"^DD",727.803,727.803,45,21,1,0)
The Current Procedural Terminology (CPT) code for a procedure 
"^DD",727.803,727.803,45,21,2,0)
performed during the outpatient visit.
"^DD",727.803,727.803,45,23,0)
^^8^8^2980709^
"^DD",727.803,727.803,45,23,1,0)
Using the internal entry number for the encounter in the OUTPATIENT 
"^DD",727.803,727.803,45,23,2,0)
ENCOUNTER file (#409.68), the VISIT FILE ENTRY field (.05) is 
"^DD",727.803,727.803,45,23,3,0)
determined. This entry is used to make a call to the Patient Care 
"^DD",727.803,727.803,45,23,4,0)
Encounter API, ENCEVENT^PXAPI. The API returns all visit data in the 
"^DD",727.803,727.803,45,23,5,0)
TMP("PXKENC",$J) array.
"^DD",727.803,727.803,45,23,6,0)
  
"^DD",727.803,727.803,45,23,7,0)
Use the next CPT code listed in the array which has not already
"^DD",727.803,727.803,45,23,8,0)
been captured for the extract record. 
"^DD",727.803,727.803,45,"DT")
2980709
"^DD",727.803,727.803,46,0)
CPT CODE (8)^F^^1;16^K:$L(X)>8!($L(X)<5) X
"^DD",727.803,727.803,46,3)
Answer must be 5-8 characters in length.
"^DD",727.803,727.803,46,21,0)
^^2^2^2980709^
"^DD",727.803,727.803,46,21,1,0)
The Current Procedural Terminology (CPT) code for a procedure 
"^DD",727.803,727.803,46,21,2,0)
performed during the outpatient visit.
"^DD",727.803,727.803,46,23,0)
^^8^8^2980709^
"^DD",727.803,727.803,46,23,1,0)
Using the internal entry number for the encounter in the OUTPATIENT 
"^DD",727.803,727.803,46,23,2,0)
ENCOUNTER file (#409.68), the VISIT FILE ENTRY field (.05) is 
"^DD",727.803,727.803,46,23,3,0)
determined. This entry is used to make a call to the Patient Care 
"^DD",727.803,727.803,46,23,4,0)
Encounter API, ENCEVENT^PXAPI. The API returns all visit data in the 
"^DD",727.803,727.803,46,23,5,0)
TMP("PXKENC",$J) array.
"^DD",727.803,727.803,46,23,6,0)
  
"^DD",727.803,727.803,46,23,7,0)
Use the next CPT code listed in the array which has not already
"^DD",727.803,727.803,46,23,8,0)
been captured for the extract record. 
"^DD",727.803,727.803,46,"DT")
2980709
"^DD",727.803,727.803,47,0)
CPT CODE (9)^F^^1;17^K:$L(X)>8!($L(X)<5) X
"^DD",727.803,727.803,47,3)
Answer must be 5-8 characters in length.
"^DD",727.803,727.803,47,21,0)
^^2^2^2980709^
"^DD",727.803,727.803,47,21,1,0)
The Current Procedural Terminology (CPT) code for a procedure 
"^DD",727.803,727.803,47,21,2,0)
performed during the outpatient visit.
"^DD",727.803,727.803,47,23,0)
^^8^8^2980709^
"^DD",727.803,727.803,47,23,1,0)
Using the internal entry number for the encounter in the OUTPATIENT 
"^DD",727.803,727.803,47,23,2,0)
ENCOUNTER file (#409.68), the VISIT FILE ENTRY field (.05) is 
"^DD",727.803,727.803,47,23,3,0)
determined. This entry is used to make a call to the Patient Care 
"^DD",727.803,727.803,47,23,4,0)
Encounter API, ENCEVENT^PXAPI. The API returns all visit data in the 
"^DD",727.803,727.803,47,23,5,0)
TMP("PXKENC",$J) array.
"^DD",727.803,727.803,47,23,6,0)
  
"^DD",727.803,727.803,47,23,7,0)
Use the next CPT code listed in the array which has not already
"^DD",727.803,727.803,47,23,8,0)
been captured for the extract record. 
"^DD",727.803,727.803,47,"DT")
2980709
"^DD",727.803,727.803,48,0)
CPT CODE (10)^F^^1;18^K:$L(X)>8!($L(X)<5) X
"^DD",727.803,727.803,48,3)
Answer must be 5-8 characters in length.
"^DD",727.803,727.803,48,21,0)
^^2^2^2980709^
"^DD",727.803,727.803,48,21,1,0)
The Current Procedural Terminology (CPT) code for a procedure 
"^DD",727.803,727.803,48,21,2,0)
performed during the outpatient visit.
"^DD",727.803,727.803,48,23,0)
^^8^8^2980709^
"^DD",727.803,727.803,48,23,1,0)
Using the internal entry number for the encounter in the OUTPATIENT 
"^DD",727.803,727.803,48,23,2,0)
ENCOUNTER file (#409.68), the VISIT FILE ENTRY field (.05) is 
"^DD",727.803,727.803,48,23,3,0)
determined. This entry is used to make a call to the Patient Care 
"^DD",727.803,727.803,48,23,4,0)
Encounter API, ENCEVENT^PXAPI. The API returns all visit data in the 
"^DD",727.803,727.803,48,23,5,0)
TMP("PXKENC",$J) array.
"^DD",727.803,727.803,48,23,6,0)
  
"^DD",727.803,727.803,48,23,7,0)
Use the next CPT code listed in the array which has not already
"^DD",727.803,727.803,48,23,8,0)
been captured for the extract record. 
"^DD",727.803,727.803,48,"DT")
2980709
"^DD",727.803,727.803,49,0)
CPT CODE (11)^F^^1;19^K:$L(X)>8!($L(X)<5) X
"^DD",727.803,727.803,49,3)
Answer must be 5-8 characters in length.
"^DD",727.803,727.803,49,21,0)
^^2^2^2980709^
"^DD",727.803,727.803,49,21,1,0)
The Current Procedural Terminology (CPT) code for a procedure 
"^DD",727.803,727.803,49,21,2,0)
performed during the outpatient visit.
"^DD",727.803,727.803,49,23,0)
^^8^8^2980709^
"^DD",727.803,727.803,49,23,1,0)
Using the internal entry number for the encounter in the OUTPATIENT 
"^DD",727.803,727.803,49,23,2,0)
ENCOUNTER file (#409.68), the VISIT FILE ENTRY field (.05) is 
"^DD",727.803,727.803,49,23,3,0)
determined. This entry is used to make a call to the Patient Care 
"^DD",727.803,727.803,49,23,4,0)
Encounter API, ENCEVENT^PXAPI. The API returns all visit data in the 
"^DD",727.803,727.803,49,23,5,0)
TMP("PXKENC",$J) array.
"^DD",727.803,727.803,49,23,6,0)
  
"^DD",727.803,727.803,49,23,7,0)
Use the next CPT code listed in the array which has not already
"^DD",727.803,727.803,49,23,8,0)
been captured for the extract record. 
"^DD",727.803,727.803,49,"DT")
2980709
"^DD",727.803,727.803,50,0)
SHARING AGREEMENT PAYOR^F^^1;20^K:$L(X)>15!($L(X)<3) X
"^DD",727.803,727.803,50,3)
Answer must be 3-15 characters in length.
"^DD",727.803,727.803,50,21,0)
^^1^1^2980915^^
"^DD",727.803,727.803,50,21,1,0)
An indicator used for patients participating in sharing agreements.
"^DD",727.803,727.803,50,23,0)
^^12^12^2980915^^
"^DD",727.803,727.803,50,23,1,0)
The ALIAS sub-field (#.01) of the ALIAS multiple field (#1) of the
"^DD",727.803,727.803,50,23,2,0)
PATIENT file (#2) is used to indicate a patient who participates in 
"^DD",727.803,727.803,50,23,3,0)
a sharing agreement.
"^DD",727.803,727.803,50,23,4,0)
  
"^DD",727.803,727.803,50,23,5,0)
If the #.01 field contains any one of the following key words, that
"^DD",727.803,727.803,50,23,6,0)
word(s) will be placed into this field:
"^DD",727.803,727.803,50,23,7,0)
  
"^DD",727.803,727.803,50,23,8,0)
SHARING AGREEMENT
"^DD",727.803,727.803,50,23,9,0)
CHAMPVA
"^DD",727.803,727.803,50,23,10,0)
TRICARE
"^DD",727.803,727.803,50,23,11,0)
CAT C
"^DD",727.803,727.803,50,23,12,0)
CATEGORY C
"^DD",727.803,727.803,50,"DT")
2980713
"^DD",727.803,727.803,51,0)
SHARING AGREEMENT INSURANCE^F^^1;21^K:$L(X)>30!($L(X)<3) X
"^DD",727.803,727.803,51,3)
Answer must be 3-30 characters in length.
"^DD",727.803,727.803,51,21,0)
^^2^2^2980915^^
"^DD",727.803,727.803,51,21,1,0)
Used to indicate insurer(s) for patients who participate in
"^DD",727.803,727.803,51,21,2,0)
sharing agreements.
"^DD",727.803,727.803,51,23,0)
^^12^12^2980915^^
"^DD",727.803,727.803,51,23,1,0)
If there are multiple insurance companies listed, they shall
"^DD",727.803,727.803,51,23,2,0)
be extracted according to the following:
"^DD",727.803,727.803,51,23,3,0)
a) If there is one insurance company send up to 30 characters.
"^DD",727.803,727.803,51,23,4,0)
b) If there are two insurance companies, send two 14-character
"^DD",727.803,727.803,51,23,5,0)
   names separated by a comma.
"^DD",727.803,727.803,51,23,6,0)
c) If there are three insurance companies, send three 
"^DD",727.803,727.803,51,23,7,0)
   9-character names separated by commas.
"^DD",727.803,727.803,51,23,8,0)
d) If there are 4 or more insurance companies, send the first
"^DD",727.803,727.803,51,23,9,0)
   three 9-character names separated by commas, followed by 
"^DD",727.803,727.803,51,23,10,0)
   another comma and the character M.  M would stand for More
"^DD",727.803,727.803,51,23,11,0)
   and the implication is there are more than 4 insurance 
"^DD",727.803,727.803,51,23,12,0)
   companies.
"^DD",727.803,727.803,51,"DT")
2980713
"^DD",727.803,727.803,52,0)
ENROLLMENT LOCATION^F^^1;22^K:$L(X)>5!($L(X)<3) X
"^DD",727.803,727.803,52,3)
Answer must be 3-5 characters in length.
"^DD",727.803,727.803,52,21,0)
^^2^2^2980713^
"^DD",727.803,727.803,52,21,1,0)
The facility that the patient chooses to designate as his
"^DD",727.803,727.803,52,21,2,0)
preferred location for care.
"^DD",727.803,727.803,52,23,0)
^^5^5^2980713^
"^DD",727.803,727.803,52,23,1,0)
The PREFERRED FACILITY field (# 27.02) of the PATIENT file (#2)
"^DD",727.803,727.803,52,23,2,0)
is defined as the facility that the patient chooses to designate
"^DD",727.803,727.803,52,23,3,0)
as his preferred location for care.  The PREFERRED FACILITY field
"^DD",727.803,727.803,52,23,4,0)
(# 27.02) is a pointer to the INSTITUTION file (#4) and is the 
"^DD",727.803,727.803,52,23,5,0)
value in the STATION NUMBER field (#99).
"^DD",727.803,727.803,52,"DT")
2980713
"^DD",727.803,727.803,53,0)
STATE^F^^1;23^K:$L(X)>2!($L(X)<2) X
"^DD",727.803,727.803,53,3)
Answer must be 2 characters in length.
"^DD",727.803,727.803,53,21,0)
^^1^1^2980713^
"^DD",727.803,727.803,53,21,1,0)
The state in which the patient resides.
"^DD",727.803,727.803,53,23,0)
^^4^4^2980713^
"^DD",727.803,727.803,53,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.803,727.803,53,23,2,0)
in the ADMISSION EXTRACT file (#727.802), data is derived from the STATE
"^DD",727.803,727.803,53,23,3,0)
field (#.115) in the PATIENT file (#2) which points to the STATE file (#5).
"^DD",727.803,727.803,53,23,4,0)
From the STATE file record, use the two character VA STATE CODE field (#2).
"^DD",727.803,727.803,53,"DT")
2980713
"^DD",727.803,727.803,54,0)
COUNTY^F^^1;24^K:$L(X)>3!($L(X)<3) X
"^DD",727.803,727.803,54,3)
Answer must be 3 characters in length.
"^DD",727.803,727.803,54,21,0)
^^1^1^2980713^
"^DD",727.803,727.803,54,21,1,0)
The county in which the patient resides.
"^DD",727.803,727.803,54,23,0)
^^6^6^2980713^
"^DD",727.803,727.803,54,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.803,727.803,54,23,2,0)
in the ADMISSION EXTRACT file (#727.802), data is taken from the
"^DD",727.803,727.803,54,23,3,0)
COUNTY field (#.117) in the PATIENT file (#2) which points to a subfile
"^DD",727.803,727.803,54,23,4,0)
record in the COUNTY multiple field (#3) of the STATE file (#5).  A pointer
"^DD",727.803,727.803,54,23,5,0)
to the STATE file (#5) is obtained from the STATE field (#.115) of the 
"^DD",727.803,727.803,54,23,6,0)
file #2 record.
"^DD",727.803,727.803,54,"DT")
2980713
"^DD",727.804,727.804,18,0)
PRIMARY CARE PROVIDER^F^^0;18^K:$L(X)>11!($L(X)<1) X
"^DD",727.804,727.804,18,.1)
Primary Care Provider
"^DD",727.804,727.804,18,3)
Enter primary care provider assigned to this patient.
"^DD",727.804,727.804,18,21,0)
^^1^1^2980708^^^
"^DD",727.804,727.804,18,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.804,727.804,18,23,0)
^^9^9^2980708^^^
"^DD",727.804,727.804,18,23,1,0)
Using the APPOINTMENT DATE/TIME field (.01) in the APPOINTMENT field 
"^DD",727.804,727.804,18,23,2,0)
(1900) multiple of the HOSPITAL LOCATION file (#44) and the patient 
"^DD",727.804,727.804,18,23,3,0)
pointer (DFN) stored in the PATIENT NO. - DFN field (4) in the CLINIC 
"^DD",727.804,727.804,18,23,4,0)
NOSHOW EXTRACT file (#727.804), a call is made to the Scheduling API, 
"^DD",727.804,727.804,18,23,5,0)
OUTPTPR^SDUTL3. The API returns the provider's internal entry number 
"^DD",727.804,727.804,18,23,6,0)
and name from the NEW PERSON file (#200). 
"^DD",727.804,727.804,18,23,7,0)
 
"^DD",727.804,727.804,18,23,8,0)
A "2" is prefixed to the pointer value to indicate that the source file
"^DD",727.804,727.804,18,23,9,0)
is "200".
"^DD",727.804,727.804,18,"DT")
2961015
"^DD",727.804,727.804,25,0)
SET PIECE^F^^1;4^K:$L(X)>1!($L(X)<1) X
"^DD",727.804,727.804,25,3)
Answer must be 1 character in length.
"^DD",727.804,727.804,25,21,0)
^^2^2^2980925^^^
"^DD",727.804,727.804,25,21,1,0)
This field is placed in the data dictionary so that the record will
"^DD",727.804,727.804,25,21,2,0)
contain the proper number of "^" pieces expected by DSS/Austin.
"^DD",727.804,727.804,25,23,0)
^^3^3^2980925^^
"^DD",727.804,727.804,25,23,1,0)
This field will always be set to null.  Its only purpose is to
"^DD",727.804,727.804,25,23,2,0)
establish a file record containing the appropriate number of "^"
"^DD",727.804,727.804,25,23,3,0)
pieces in the transmission to DSS/Austin.
"^DD",727.804,727.804,25,"DT")
2980923
"^DD",727.805,727.805,19,0)
SET PIECE^F^^1;2^K:$L(X)>1!($L(X)<1) X
"^DD",727.805,727.805,19,3)
Answer must be 1 character in length.
"^DD",727.805,727.805,19,21,0)
^^2^2^2980923^^
"^DD",727.805,727.805,19,21,1,0)
This field is placed in the data dictionary so that the record will
"^DD",727.805,727.805,19,21,2,0)
contain the proper number of "^" pieces expected by DSS/Austin.
"^DD",727.805,727.805,19,23,0)
^^3^3^2980923^
"^DD",727.805,727.805,19,23,1,0)
This field will always be set to null.  Its only purpose is to
"^DD",727.805,727.805,19,23,2,0)
establish a file record containing the appropriate number of "^"
"^DD",727.805,727.805,19,23,3,0)
pieces in the transmission to DSS/Austin.
"^DD",727.805,727.805,19,"DT")
2980923
"^DD",727.806,727.806,49,0)
PRIMARY CARE PROVIDER^F^^0;50^K:$L(X)>11!($L(X)<1) X
"^DD",727.806,727.806,49,.1)
Primary Care Provider
"^DD",727.806,727.806,49,3)
Enter primary care provider assigned to this patient.
"^DD",727.806,727.806,49,21,0)
^^1^1^2980819^^^^
"^DD",727.806,727.806,49,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.806,727.806,49,23,0)
^^8^8^2980819^^^^
"^DD",727.806,727.806,49,23,1,0)
Using the DATE field (.01) from the DENTAL TREATMENT (AMIS) file (#221) 
"^DD",727.806,727.806,49,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) 
"^DD",727.806,727.806,49,23,3,0)
in the DENTAL EXTRACT file (#727.806), a call is made to the Scheduling 
"^DD",727.806,727.806,49,23,4,0)
API, OUTPTPR^SDUTL3. The API returns the provider's internal entry 
"^DD",727.806,727.806,49,23,5,0)
number and name from the NEW PERSON file (#200). 
"^DD",727.806,727.806,49,23,6,0)
 
"^DD",727.806,727.806,49,23,7,0)
A "2" is prefixed to the pointer value to indicate that the source file
"^DD",727.806,727.806,49,23,8,0)
is "200".
"^DD",727.806,727.806,49,"DT")
2961016
"^DD",727.806,727.806,54,0)
SET PIECE^F^^1;4^K:$L(X)>1!($L(X)<1) X
"^DD",727.806,727.806,54,3)
Answer must be 1 character in length.
"^DD",727.806,727.806,54,21,0)
^^2^2^2980923^^
"^DD",727.806,727.806,54,21,1,0)
This field is placed in the data dictionary so that the record will
"^DD",727.806,727.806,54,21,2,0)
contain the proper number of "^" pieces expected by DSS/Austin.
"^DD",727.806,727.806,54,23,0)
^^3^3^2980923^
"^DD",727.806,727.806,54,23,1,0)
This field will always be set to null.  Its only purpose is to
"^DD",727.806,727.806,54,23,2,0)
establish a file record containing the appropriate number of "^"
"^DD",727.806,727.806,54,23,3,0)
pieces in the transmission to DSS/Austin.
"^DD",727.806,727.806,54,"DT")
2980923
"^DD",727.808,727.808,25,0)
DSS DEPT.^F^^1;2^K:$L(X)>10!($L(X)<4) X
"^DD",727.808,727.808,25,3)
Answer must be 4-10 characters in length.
"^DD",727.808,727.808,25,21,0)
^^12^12^2980708^
"^DD",727.808,727.808,25,21,1,0)
The DSS Department code for the ward associated with the physical
"^DD",727.808,727.808,25,21,2,0)
movement record.  This code is found in the DSS WARD file (#727.4)
"^DD",727.808,727.808,25,21,3,0)
using the value of the WARD LOCATION field (#.06) of the PATIENT
"^DD",727.808,727.808,25,21,4,0)
MOVEMENT file (#405) record for the patient's physical movement.
"^DD",727.808,727.808,25,21,5,0)
The value found in WARD LOCATION is a pointer to the WARD LOCATION
"^DD",727.808,727.808,25,21,6,0)
file (#42).
"^DD",727.808,727.808,25,21,7,0)
  
"^DD",727.808,727.808,25,21,8,0)
Each record in file #727.4 has a #.01 field which points to a record
"^DD",727.808,727.808,25,21,9,0)
in file #42, and the internal entry number of the file #727.4 is set
"^DD",727.808,727.808,25,21,10,0)
to be the same as the record in file #42 to which it points.  Therefore,
"^DD",727.808,727.808,25,21,11,0)
the WARD LOCATION field (#.06) can be used as a pointer to file #727.4
"^DD",727.808,727.808,25,21,12,0)
as well.
"^DD",727.808,727.808,25,"DT")
2980708
"^DD",727.809,727.809,24,0)
SET PIECE^F^^1;3^K:$L(X)>1!($L(X)<1) X
"^DD",727.809,727.809,24,3)
Answer must be 1 character in length.
"^DD",727.809,727.809,24,21,0)
^^2^2^2980923^
"^DD",727.809,727.809,24,21,1,0)
This field is placed in the data dictionary so that the record will
"^DD",727.809,727.809,24,21,2,0)
contain the proper number of "^" pieces expected by DSS/Austin.
"^DD",727.809,727.809,24,23,0)
^^3^3^2980923^
"^DD",727.809,727.809,24,23,1,0)
This field will always be set to null.  Its only purpose is to
"^DD",727.809,727.809,24,23,2,0)
establish a file record containing the appropriate number of "^"
"^DD",727.809,727.809,24,23,3,0)
pieces in the transmission to DSS/Austin.
"^DD",727.809,727.809,24,"DT")
2980923
"^DD",727.81,727.81,31,0)
PRIMARY CARE PROVIDER^F^^0;32^K:$L(X)>11!($L(X)<1) X
"^DD",727.81,727.81,31,.1)
Primary Care Provider
"^DD",727.81,727.81,31,3)
Enter primary care provider assigned to this patient.
"^DD",727.81,727.81,31,21,0)
^^1^1^2980708^^^^
"^DD",727.81,727.81,31,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.81,727.81,31,23,0)
^^9^9^2980708^^^^
"^DD",727.81,727.81,31,23,1,0)
Using the RELEASED DATE/TIME (V. 6 or >) field or the FILL DATE (V. <6)
"^DD",727.81,727.81,31,23,2,0)
field from the PRESCRIPTION file (#52) and the patient pointer (DFN)
"^DD",727.81,727.81,31,23,3,0)
stored in the PATIENT NO. - DFN field (4) in the PRESCRIPTION EXTRACT
"^DD",727.81,727.81,31,23,4,0)
file (#727.81), a call is made to the Scheduling API, OUTPTPR^SDUTL3. 
"^DD",727.81,727.81,31,23,5,0)
The API returns the provider's internal entry number and name from the 
"^DD",727.81,727.81,31,23,6,0)
NEW PERSON file (#200). 
"^DD",727.81,727.81,31,23,7,0)
 
"^DD",727.81,727.81,31,23,8,0)
A "2" is prefixed to the pointer value to indicate that the source file
"^DD",727.81,727.81,31,23,9,0)
is "200".
"^DD",727.81,727.81,31,"DT")
2961015
"^DD",727.81,727.81,36,0)
SEX^S^M:MALE;F:FEMALE;^1;3^Q
"^DD",727.81,727.81,36,21,0)
^^1^1^2980708^
"^DD",727.81,727.81,36,21,1,0)
The sex of the patient.  M(ale) or F(emale).
"^DD",727.81,727.81,36,23,0)
^^2^2^2980708^
"^DD",727.81,727.81,36,23,1,0)
Data is taken from the SEX field (#.02) of the patient's record in
"^DD",727.81,727.81,36,23,2,0)
the PATIENT file (#2).
"^DD",727.81,727.81,36,"DT")
2980708
"^DD",727.81,727.81,37,0)
ZIP+4^F^^1;4^K:$L(X)>10!($L(X)<5) X
"^DD",727.81,727.81,37,3)
Answer must be 5-10 characters in length.
"^DD",727.81,727.81,37,21,0)
^^1^1^2980708^
"^DD",727.81,727.81,37,21,1,0)
The patient's zipcode with optional 4-digit extension.
"^DD",727.81,727.81,37,23,0)
^^3^3^2980708^
"^DD",727.81,727.81,37,23,1,0)
The patient's zipcode with optional 4-digit extension as found in
"^DD",727.81,727.81,37,23,2,0)
the ZIP+4 field (#.1112) of the patient's record in the PATIENT
"^DD",727.81,727.81,37,23,3,0)
file (#2).
"^DD",727.81,727.81,37,"DT")
2980708
"^DD",727.81,727.81,40,0)
STATE^F^^1;7^K:$L(X)>2!($L(X)<2) X
"^DD",727.81,727.81,40,3)
Answer must be 2 characters in length.
"^DD",727.81,727.81,40,21,0)
^^1^1^2980713^^
"^DD",727.81,727.81,40,21,1,0)
The state in which the patient resides.
"^DD",727.81,727.81,40,23,0)
^^4^4^2980713^^
"^DD",727.81,727.81,40,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.81,727.81,40,23,2,0)
in the ADMISSION EXTRACT file (#727.802), data is derived from the STATE
"^DD",727.81,727.81,40,23,3,0)
field (#.115) in the PATIENT file (#2) which points to the STATE file (#5).
"^DD",727.81,727.81,40,23,4,0)
From the STATE file record, use the two character VA STATE CODE field (#2).
"^DD",727.81,727.81,40,"DT")
2980708
"^DD",727.81,727.81,41,0)
COUNTY^F^^1;8^K:$L(X)>3!($L(X)<3) X
"^DD",727.81,727.81,41,3)
Answer must be 3 characters in length.
"^DD",727.81,727.81,41,21,0)
^^1^1^2980713^^
"^DD",727.81,727.81,41,21,1,0)
The county in which the patient resides.
"^DD",727.81,727.81,41,23,0)
^^9^9^2980713^^
"^DD",727.81,727.81,41,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.81,727.81,41,23,2,0)
in the ADMISSION EXTRACT file (#727.802), data is taken from the
"^DD",727.81,727.81,41,23,3,0)
COUNTY field (#.117) in the PATIENT file (#2) which points to a subfile
"^DD",727.81,727.81,41,23,4,0)
record in the COUNTY multiple field (#3) of the STATE file (#5).  A pointer 
"^DD",727.81,727.81,41,23,5,0)
to the STATE file (#5) is obtained from the STATE field (#.115) of the 
"^DD",727.81,727.81,41,23,6,0)
file #2 record.
"^DD",727.81,727.81,41,23,7,0)
  
"^DD",727.81,727.81,41,23,8,0)
From the subfile record of field #3 of file #5, use the value of the 
"^DD",727.81,727.81,41,23,9,0)
VA COUNTY CODE field (#2).
"^DD",727.81,727.81,41,"DT")
2980708
"^DD",727.811,727.811,35,0)
PRIMARY CARE PROVIDER^F^^0;36^K:$L(X)>11!($L(X)<1) X
"^DD",727.811,727.811,35,.1)
Primary Care Provider
"^DD",727.811,727.811,35,3)
Enter primary care provider assigned to this patient.
"^DD",727.811,727.811,35,21,0)
^^1^1^2980708^^^^
"^DD",727.811,727.811,35,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.811,727.811,35,23,0)
^^8^8^2980708^^^^
"^DD",727.811,727.811,35,23,1,0)
Using the DATE OF OPERATION field (.09) from the SURGERY file (#130) 
"^DD",727.811,727.811,35,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) 
"^DD",727.811,727.811,35,23,3,0)
in the SURGERY EXTRACT file (#727.811), a call is made to the Scheduling 
"^DD",727.811,727.811,35,23,4,0)
API, OUTPTPR^SDUTL3. The API returns the provider's internal entry 
"^DD",727.811,727.811,35,23,5,0)
number and name from the NEW PERSON file (#200). 
"^DD",727.811,727.811,35,23,6,0)
 
"^DD",727.811,727.811,35,23,7,0)
A "2" is prefixed to the pointer value to indicate that the source file
"^DD",727.811,727.811,35,23,8,0)
is "200".
"^DD",727.811,727.811,35,"DT")
2961018
"^DD",727.811,727.811,42,0)
SET PIECE^F^^1;6^K:$L(X)>1!($L(X)<1) X
"^DD",727.811,727.811,42,3)
Answer must be 1 character in length.
"^DD",727.811,727.811,42,21,0)
^^2^2^2980923^^
"^DD",727.811,727.811,42,21,1,0)
This field is placed in the data dictionary so that the record will
"^DD",727.811,727.811,42,21,2,0)
contain the proper number of "^" pieces expected by DSS/Austin.
"^DD",727.811,727.811,42,23,0)
^^3^3^2980923^
"^DD",727.811,727.811,42,23,1,0)
This field will always be set to null.  Its only purpose is to
"^DD",727.811,727.811,42,23,2,0)
establish a file record containing the appropriate number of "^"
"^DD",727.811,727.811,42,23,3,0)
pieces in the transmission to DSS/Austin.
"^DD",727.811,727.811,42,"DT")
2980923
"^DD",727.813,727.813,14,0)
LOCATION^F^^0;15^K:$L(X)>20!($L(X)<1) X
"^DD",727.813,727.813,14,.1)
Location
"^DD",727.813,727.813,14,3)
Answer must be 1-20 characters in length.
"^DD",727.813,727.813,14,21,0)
^^1^1^2980708^^^^
"^DD",727.813,727.813,14,21,1,0)
The service/location from which the original order came.
"^DD",727.813,727.813,14,23,0)
^^14^14^2980708^^^^
"^DD",727.813,727.813,14,23,1,0)
1. For Lab Extract without LMIP Codes:
"^DD",727.813,727.813,14,23,2,0)
   NAME field (.01) of the HOSPITAL LOCATION file (#44) as pointed to by 
"^DD",727.813,727.813,14,23,3,0)
   the ORDERING LOCATION field (23) within the SPECIMEN # multiple (1) 
"^DD",727.813,727.813,14,23,4,0)
   of the LAB ORDER ENTRY file (#69). 
"^DD",727.813,727.813,14,23,5,0)
 
"^DD",727.813,727.813,14,23,6,0)
2. For Lab Extract with LMIP Codes:
"^DD",727.813,727.813,14,23,7,0)
   NAME field (.01) of the HOSPITAL LOCATION file (#44) as pointed to by 
"^DD",727.813,727.813,14,23,8,0)
   the ORDERING LOCATION field (20) of the ACCESSION WKLD CODE TIME 
"^DD",727.813,727.813,14,23,9,0)
   field (1) multiple within the WKLD CODE field (1) multiple within the 
"^DD",727.813,727.813,14,23,10,0)
   DATE field (.03) multiple of the WKLD DATA file (#64.1).
"^DD",727.813,727.813,14,23,11,0)
 
"^DD",727.813,727.813,14,23,12,0)
In the case of the Lab Extract with LMIP Codes, this field may sometimes 
"^DD",727.813,727.813,14,23,13,0)
be null since Lab allows "non-standard" locations to be entered and 
"^DD",727.813,727.813,14,23,14,0)
these entries would be of no help to the purpose of this extract.
"^DD",727.813,727.813,14,"DT")
2980708
"^DD",727.813,727.813,15,0)
PROVIDER^F^^0;16^K:$L(X)>11!($L(X)<1) X
"^DD",727.813,727.813,15,.1)
Provider
"^DD",727.813,727.813,15,3)
Enter provider for this record.
"^DD",727.813,727.813,15,21,0)
^^1^1^2980708^^^^
"^DD",727.813,727.813,15,21,1,0)
The provider assigned to this patient or entity.  
"^DD",727.813,727.813,15,23,0)
^^14^14^2980708^^^^
"^DD",727.813,727.813,15,23,1,0)
1. For Lab Extract without LMIP Codes:
"^DD",727.813,727.813,15,23,2,0)
   NAME field (.01) of the PROVIDER file (#6) or the NAME field (.01) of 
"^DD",727.813,727.813,15,23,3,0)
   the NEW PERSON file (#200) as pointed to by the PROVIDER field (7) 
"^DD",727.813,727.813,15,23,4,0)
   within the SPECIMEN # multiple (1) of the LAB ORDER ENTRY file (#69). 
"^DD",727.813,727.813,15,23,5,0)
 
"^DD",727.813,727.813,15,23,6,0)
2. For Lab Extract with LMIP Codes:
"^DD",727.813,727.813,15,23,7,0)
   NAME field (.01) of the PROVIDER file (#6) or the NAME field (.01) of 
"^DD",727.813,727.813,15,23,8,0)
   the NEW PERSON file (#200) as pointed to by the PROVIDER field (15) 
"^DD",727.813,727.813,15,23,9,0)
   of the ACCESSION WKLD CODE TIME field (1) multiple within the WKLD 
"^DD",727.813,727.813,15,23,10,0)
   CODE field (1) multiple within the DATE field (.03) multiple of the 
"^DD",727.813,727.813,15,23,11,0)
   WKLD DATA file (#64.1).
"^DD",727.813,727.813,15,23,12,0)
 
"^DD",727.813,727.813,15,23,13,0)
The pointer value for the provider will be prefixed by "6" if found in
"^DD",727.813,727.813,15,23,14,0)
file #6; it will be prefixed by "2" if found in file #200.
"^DD",727.813,727.813,15,"DT")
2961017
"^DD",727.813,727.813,21,0)
PRIMARY CARE PROVIDER^F^^0;22^K:$L(X)>11!($L(X)<1) X
"^DD",727.813,727.813,21,.1)
Primary Care Provider
"^DD",727.813,727.813,21,3)
Enter primary care provider assigned to this patient.
"^DD",727.813,727.813,21,21,0)
^^1^1^2980708^^^^
"^DD",727.813,727.813,21,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.813,727.813,21,23,0)
^^16^16^2980708^^^
"^DD",727.813,727.813,21,23,1,0)
The ACCESSION DATE is defined by one of two methods. For Lab Extract 
"^DD",727.813,727.813,21,23,2,0)
without LMIP Codes, ACCESSION DATE is defined by the DATE ORDERED field 
"^DD",727.813,727.813,21,23,3,0)
(.01) of the LAB ORDER ENTRY file (#69). For Lab Extract with LMIP 
"^DD",727.813,727.813,21,23,4,0)
Codes, ACCESSION DATE is defined by the DATE ORDERED field (11) of the 
"^DD",727.813,727.813,21,23,5,0)
ACCESSION WKLD CODE TIME field (1) multiple within the WKLD CODE field 
"^DD",727.813,727.813,21,23,6,0)
(1) multiple within the DATE field (.03) multiple of the WKLD DATA file 
"^DD",727.813,727.813,21,23,7,0)
(#64.1).
"^DD",727.813,727.813,21,23,8,0)
  
"^DD",727.813,727.813,21,23,9,0)
Using the ACCESSION DATE and the patient pointer (DFN) stored in the 
"^DD",727.813,727.813,21,23,10,0)
PATIENT NO. - DFN field (4) in the LABORATORY EXTRACT file (#727.813), a 
"^DD",727.813,727.813,21,23,11,0)
call is made to the Scheduling API, OUTPTPR^SDUTL3. The API returns the 
"^DD",727.813,727.813,21,23,12,0)
provider's internal entry number and name from the NEW PERSON file 
"^DD",727.813,727.813,21,23,13,0)
(#200). 
"^DD",727.813,727.813,21,23,14,0)
 
"^DD",727.813,727.813,21,23,15,0)
A "2" is prefixed to the pointer value to indicate that the source file
"^DD",727.813,727.813,21,23,16,0)
is "200".
"^DD",727.813,727.813,21,"DT")
2961017
"^DD",727.813,727.813,25,0)
SET PIECE^F^^1;4^K:$L(X)>1!($L(X)<1) X
"^DD",727.813,727.813,25,3)
Answer must be 1 character in length.
"^DD",727.813,727.813,25,21,0)
^^2^2^2980923^^
"^DD",727.813,727.813,25,21,1,0)
This field is placed in the data dictionary so that the record will
"^DD",727.813,727.813,25,21,2,0)
contain the proper number of "^" pieces expected by DSS/Austin.
"^DD",727.813,727.813,25,23,0)
^^3^3^2980923^
"^DD",727.813,727.813,25,23,1,0)
This field will always be set to null.  Its only purpose is to
"^DD",727.813,727.813,25,23,2,0)
establish a file record containing the appropriate number of "^"
"^DD",727.813,727.813,25,23,3,0)
pieces in the transmission to DSS/Austin.
"^DD",727.813,727.813,25,"DT")
2980923
"^DD",727.814,727.814,22,0)
PRIMARY CARE PROVIDER^F^^0;23^K:$L(X)>11!($L(X)<1) X
"^DD",727.814,727.814,22,.1)
Primary Care Provider
"^DD",727.814,727.814,22,3)
Enter primary care provider assigned to this patient.
"^DD",727.814,727.814,22,21,0)
^^1^1^2980708^^^^
"^DD",727.814,727.814,22,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.814,727.814,22,23,0)
^^9^9^2980708^^^^
"^DD",727.814,727.814,22,23,1,0)
Using the EXAM DATE field (.01) within the REGISTERED EXAMS multiple 
"^DD",727.814,727.814,22,23,2,0)
(2) of the RAD/NUC MED PATIENT file (#70) and the patient pointer (DFN) 
"^DD",727.814,727.814,22,23,3,0)
stored in the PATIENT NO. - DFN field (4) in the RADIOLOGY EXTRACT file 
"^DD",727.814,727.814,22,23,4,0)
(#727.814), a call is made to the Scheduling API, OUTPTPR^SDUTL3. The 
"^DD",727.814,727.814,22,23,5,0)
API returns the provider's internal entry number and name from the NEW 
"^DD",727.814,727.814,22,23,6,0)
PERSON file (#200). 
"^DD",727.814,727.814,22,23,7,0)
 
"^DD",727.814,727.814,22,23,8,0)
A "2" is prefixed to the pointer value to indicate that the source file
"^DD",727.814,727.814,22,23,9,0)
is "200".
"^DD",727.814,727.814,22,"DT")
2961018
"^DD",727.814,727.814,26,0)
SET PIECE^F^^1;4^K:$L(X)>1!($L(X)<1) X
"^DD",727.814,727.814,26,3)
Answer must be 1 character in length.
"^DD",727.814,727.814,26,21,0)
^^2^2^2980923^^
"^DD",727.814,727.814,26,21,1,0)
This field is placed in the data dictionary so that the record will
"^DD",727.814,727.814,26,21,2,0)
contain the proper number of "^" pieces expected by DSS/Austin.
"^DD",727.814,727.814,26,23,0)
^^3^3^2980923^
"^DD",727.814,727.814,26,23,1,0)
This field will always be set to null.  Its only purpose is to
"^DD",727.814,727.814,26,23,2,0)
establish a file record containing the appropriate number of "^"
"^DD",727.814,727.814,26,23,3,0)
pieces in the transmission to DSS/Austin.
"^DD",727.814,727.814,26,"DT")
2980923
"^DD",727.815,727.815,28,0)
PRIMARY CARE PROVIDER^F^^0;28^K:$L(X)>11!($L(X)<1) X
"^DD",727.815,727.815,28,.1)
Primary Care Provider
"^DD",727.815,727.815,28,3)
Enter primary care provider assigned to this patient.
"^DD",727.815,727.815,28,21,0)
^^1^1^2980708^^^^
"^DD",727.815,727.815,28,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.815,727.815,28,23,0)
^^9^9^2980708^^^
"^DD",727.815,727.815,28,23,1,0)
Using the DATE/TIME OF PROCEDURE field (2) from the EVENT CAPTURE 
"^DD",727.815,727.815,28,23,2,0)
PATIENT file (#721) and the patient pointer (DFN) stored in the PATIENT 
"^DD",727.815,727.815,28,23,3,0)
NO. - DFN field (4) in the EVENT CAPTURE LOCAL EXTRACT file (#727.815), 
"^DD",727.815,727.815,28,23,4,0)
a call is made to the Scheduling API, OUTPTPR^SDUTL3. The API returns 
"^DD",727.815,727.815,28,23,5,0)
the provider's internal entry number and name from the NEW PERSON file 
"^DD",727.815,727.815,28,23,6,0)
(#200). 
"^DD",727.815,727.815,28,23,7,0)
 
"^DD",727.815,727.815,28,23,8,0)
A "2" is prefixed to the pointer value to indicate that the source file
"^DD",727.815,727.815,28,23,9,0)
is "200".
"^DD",727.815,727.815,28,"DT")
2961017
"^DD",727.815,727.815,38,0)
PLACEHOLDER1^F^^0;38^K:$L(X)>1!($L(X)<1) X
"^DD",727.815,727.815,38,.1)

"^DD",727.815,727.815,38,3)
Answer must be 1 character in length.
"^DD",727.815,727.815,38,21,0)
^^1^1^2980708^^^^
"^DD",727.815,727.815,38,21,1,0)
Placeholder; null.
"^DD",727.815,727.815,38,"DT")
2980708
"^DD",727.815,727.815,44,0)
SET PIECE^F^^1;6^K:$L(X)>1!($L(X)<1) X
"^DD",727.815,727.815,44,3)
Answer must be 1 character in length.
"^DD",727.815,727.815,44,21,0)
^^2^2^2980923^^
"^DD",727.815,727.815,44,21,1,0)
This field is placed in the data dictionary so that the record will
"^DD",727.815,727.815,44,21,2,0)
contain the proper number of "^" pieces expected by DSS/Austin.
"^DD",727.815,727.815,44,23,0)
^^3^3^2980923^
"^DD",727.815,727.815,44,23,1,0)
This field will always be set to null.  Its only purpose is to
"^DD",727.815,727.815,44,23,2,0)
establish a file record containing the appropriate number of "^"
"^DD",727.815,727.815,44,23,3,0)
pieces in the transmission to DSS/Austin.
"^DD",727.815,727.815,44,"DT")
2980923
"^DD",727.817,727.817,30,0)
ATTENDING PHYSICIAN LOS^NJ4,0^^1;7^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.817,727.817,30,3)
Type a Number between 0 and 9999, 0 Decimal Digits
"^DD",727.817,727.817,30,21,0)
^^1^1^2980714^
"^DD",727.817,727.817,30,21,1,0)
The patient's length of stay with the losing attending physician.
"^DD",727.817,727.817,30,"DT")
2980723
"^DD",727.817,727.817,31,0)
PRIMARY WARD PROVIDER LOS^NJ4,0^^1;8^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.817,727.817,31,3)
Type a Number between 0 and 9999, 0 Decimal Digits
"^DD",727.817,727.817,31,21,0)
^^1^1^2980714^
"^DD",727.817,727.817,31,21,1,0)
The patient's length of stay with the losing primary ward provider.
"^DD",727.817,727.817,31,"DT")
2980723
"^DD",727.819,727.819,22,0)
PRIMARY CARE PROVIDER^F^^0;22^K:$L(X)>11!($L(X)<1) X
"^DD",727.819,727.819,22,.1)
Primary Care Provider
"^DD",727.819,727.819,22,3)
Enter primary care provider assigned to this patient.
"^DD",727.819,727.819,22,21,0)
^^1^1^2980708^^^^
"^DD",727.819,727.819,22,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.819,727.819,22,23,0)
^^13^13^2980708^^^^
"^DD",727.819,727.819,22,23,1,0)
DATE is defined by one of two methods. For sites running a version of 
"^DD",727.819,727.819,22,23,2,0)
Inpatient Medications prior to V. 4.5, DATE is defined by the DATE field 
"^DD",727.819,727.819,22,23,3,0)
(.01) of the DATE multiple (2) in the IV STATS file (#50.8). For sites 
"^DD",727.819,727.819,22,23,4,0)
running Inpatient Medications V. 4.5 or higher, DATE is defined by the 
"^DD",727.819,727.819,22,23,5,0)
DATE/TIME field (4) of the IV EXTRACT DATA file (#728.113).
"^DD",727.819,727.819,22,23,6,0)
  
"^DD",727.819,727.819,22,23,7,0)
Using the DATE and the patient pointer (DFN) stored in the PATIENT NO. - 
"^DD",727.819,727.819,22,23,8,0)
DFN field (4) in the IV DETAIL EXTRACT file (#727.819), a call is made 
"^DD",727.819,727.819,22,23,9,0)
to the Scheduling API, OUTPTPR^SDUTL3. The API returns the provider's 
"^DD",727.819,727.819,22,23,10,0)
internal entry number and name from the NEW PERSON file (#200). 
"^DD",727.819,727.819,22,23,11,0)
 
"^DD",727.819,727.819,22,23,12,0)
A "2" is prefixed to the pointer value to indicate that the source file
"^DD",727.819,727.819,22,23,13,0)
is "200".
"^DD",727.819,727.819,22,"DT")
2961017
"^DD",727.819,727.819,29,0)
SET PIECE^F^^1;3^K:$L(X)>1!($L(X)<1) X
"^DD",727.819,727.819,29,3)
Answer must be 1 character in length.
"^DD",727.819,727.819,29,21,0)
^^2^2^2980923^^^
"^DD",727.819,727.819,29,21,1,0)
This field is placed in the data dictionary so that the record will
"^DD",727.819,727.819,29,21,2,0)
contain the proper number of "^" pieces expected by DSS/Austin.
"^DD",727.819,727.819,29,23,0)
^^3^3^2980923^
"^DD",727.819,727.819,29,23,1,0)
This field will always be set to null.  Its only purpose is to
"^DD",727.819,727.819,29,23,2,0)
establish a file record containing the appropriate number of "^"
"^DD",727.819,727.819,29,23,3,0)
pieces in the transmission to DSS/Austin.
"^DD",727.819,727.819,29,"DT")
2980923
"^DD",727.823,727.823,15,0)
SET PIECE^F^^1;2^K:$L(X)>1!($L(X)<1) X
"^DD",727.823,727.823,15,3)
Answer must be 1 character in length.
"^DD",727.823,727.823,15,21,0)
^^2^2^2980923^^
"^DD",727.823,727.823,15,21,1,0)
This field is placed in the data dictionary so that the record will
"^DD",727.823,727.823,15,21,2,0)
contain the proper number of "^" pieces expected by DSS/Austin.
"^DD",727.823,727.823,15,23,0)
^^3^3^2980923^
"^DD",727.823,727.823,15,23,1,0)
This field will always be set to null.  Its only purpose is to
"^DD",727.823,727.823,15,23,2,0)
establish a file record containing the appropriate number of "^"
"^DD",727.823,727.823,15,23,3,0)
pieces in the transmission to DSS/Austin.
"^DD",727.823,727.823,15,"DT")
2980923
"^DD",727.824,727.824,21,0)
SET PIECE^F^^1;2^K:$L(X)>1!($L(X)<1) X
"^DD",727.824,727.824,21,3)
Answer must be 1 character in length.
"^DD",727.824,727.824,21,21,0)
^^2^2^2980923^^
"^DD",727.824,727.824,21,21,1,0)
This field is placed in the data dictionary so that the record will
"^DD",727.824,727.824,21,21,2,0)
contain the proper number of "^" pieces expected by DSS/Austin.
"^DD",727.824,727.824,21,23,0)
^^3^3^2980923^
"^DD",727.824,727.824,21,23,1,0)
This field will always be set to null.  Its only purpose is to
"^DD",727.824,727.824,21,23,2,0)
establish a file record containing the appropriate number of "^"
"^DD",727.824,727.824,21,23,3,0)
pieces in the transmission to DSS/Austin.
"^DD",727.824,727.824,21,"DT")
2980923
"^DD",727.825,727.825,28,0)
PRIMARY CARE PROVIDER^F^^0;28^K:$L(X)>11!($L(X)<1) X
"^DD",727.825,727.825,28,.1)
Primary Care Provider
"^DD",727.825,727.825,28,3)
Enter primary care provider assigned to this patient.
"^DD",727.825,727.825,28,21,0)
^^1^1^2980708^^^^
"^DD",727.825,727.825,28,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.825,727.825,28,23,0)
^^8^8^2980708^^^
"^DD",727.825,727.825,28,23,1,0)
Using the DATE field (.01) from the A&SP CLINIC VISIT file (#509850.6) 
"^DD",727.825,727.825,28,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4) 
"^DD",727.825,727.825,28,23,3,0)
in the QUASAR EXTRACT file (#727.825), a call is made to the Scheduling 
"^DD",727.825,727.825,28,23,4,0)
API, OUTPTPR^SDUTL3. The API returns the provider's internal entry 
"^DD",727.825,727.825,28,23,5,0)
number and name from the NEW PERSON file (#200). 
"^DD",727.825,727.825,28,23,6,0)
 
"^DD",727.825,727.825,28,23,7,0)
A "2" is prefixed to the pointer value to indicate that the source file
"^DD",727.825,727.825,28,23,8,0)
is "200".
"^DD",727.825,727.825,28,"DT")
2961016
"^DD",727.825,727.825,38,0)
PLACEHOLDER1^F^^0;38^K:$L(X)>1!($L(X)<1) X
"^DD",727.825,727.825,38,.1)

"^DD",727.825,727.825,38,3)
Answer must be 1 character in length.
"^DD",727.825,727.825,38,21,0)
^^1^1^2980708^^
"^DD",727.825,727.825,38,21,1,0)
Placeholder; null.
"^DD",727.825,727.825,38,"DT")
2980708
"^DD",727.825,727.825,44,0)
SET PIECE^F^^1;6^K:$L(X)>1!($L(X)<1) X
"^DD",727.825,727.825,44,3)
Answer must be 1 character in length.
"^DD",727.825,727.825,44,21,0)
^^2^2^2980923^^
"^DD",727.825,727.825,44,21,1,0)
This field is placed in the data dictionary so that the record will
"^DD",727.825,727.825,44,21,2,0)
contain the proper number of "^" pieces expected by DSS/Austin.
"^DD",727.825,727.825,44,23,0)
^^3^3^2980923^
"^DD",727.825,727.825,44,23,1,0)
This field will always be set to null.  Its only purpose is to
"^DD",727.825,727.825,44,23,2,0)
establish a file record containing the appropriate number of "^"
"^DD",727.825,727.825,44,23,3,0)
pieces in the transmission to DSS/Austin.
"^DD",727.825,727.825,44,"DT")
2980923
"^DD",729,729,0)
FIELD^^2^3
"^DD",729,729,0,"DDA")
N
"^DD",729,729,0,"DT")
2980630
"^DD",729,729,0,"ID",1)
W "   ",$P(^(0),U,3)
"^DD",729,729,0,"IX","B",729,.01)

"^DD",729,729,0,"NM","DSS PRODUCTION UNIT")

"^DD",729,729,0,"VRPK")
ECX
"^DD",729,729,.01,0)
DSS PRODUCTION UNIT CODE^RF^^0;1^K X
"^DD",729,729,.01,1,0)
^.1
"^DD",729,729,.01,1,1,0)
729^B
"^DD",729,729,.01,1,1,1)
S ^ECX(729,"B",$E(X,1,30),DA)=""
"^DD",729,729,.01,1,1,2)
K ^ECX(729,"B",$E(X,1,30),DA)
"^DD",729,729,.01,3)
Answer must be 2 characters in length.
"^DD",729,729,.01,8.5)
^
"^DD",729,729,.01,9)
^
"^DD",729,729,.01,21,0)
^^6^6^2980701^^
"^DD",729,729,.01,21,1,0)
A unique two-character code for the DSS Production Unit.  DSS Production
"^DD",729,729,.01,21,2,0)
Units and associated codes are provided by the Bedford Technical Services
"^DD",729,729,.01,21,3,0)
Office.
"^DD",729,729,.01,21,4,0)
 
"^DD",729,729,.01,21,5,0)
The two characters may consist of any numeric digit or any uppercase
"^DD",729,729,.01,21,6,0)
alphabetic character.
"^DD",729,729,.01,"DT")
2980702
"^DD",729,729,1,0)
LONG DESCRIPTION^RF^^0;3^K:$L(X)>80!($L(X)<3) X
"^DD",729,729,1,3)
Answer must be 3-80 characters in length.
"^DD",729,729,1,8.5)
^
"^DD",729,729,1,9)
^
"^DD",729,729,1,21,0)
^^4^4^2980701^
"^DD",729,729,1,21,1,0)
A descriptive phrase which defines the DSS Production Unit.
"^DD",729,729,1,21,2,0)
 
"^DD",729,729,1,21,3,0)
As with all information associated with DSS Production Units, this
"^DD",729,729,1,21,4,0)
is provided by the Bedford Technical Services Office.
"^DD",729,729,1,"DT")
2980630
"^DD",729,729,2,0)
SHORT DESCRIPTION^F^^0;4^K:$L(X)>10!($L(X)<3) X
"^DD",729,729,2,3)
Answer must be 3-10 characters in length.
"^DD",729,729,2,8.5)
^
"^DD",729,729,2,9)
^
"^DD",729,729,2,21,0)
^^6^6^2980701^
"^DD",729,729,2,21,1,0)
An acronym-like character string which identifies the DSS Production
"^DD",729,729,2,21,2,0)
Unit.
"^DD",729,729,2,21,3,0)
 
"^DD",729,729,2,21,4,0)
The string may be no more than 10 characters in length.  It may contain
"^DD",729,729,2,21,5,0)
uppercase letters, numeric digits, and certain special characters (e.g.,
"^DD",729,729,2,21,6,0)
"/", "-", and <space>).
"^DD",729,729,2,"DT")
2980630
"^DD",730,730,3,0)
DSS SERVICE CODE^FI^^0;4^K:$L(X)>1!($L(X)<1) X
"^DD",730,730,3,1,0)
^.1
"^DD",730,730,3,1,1,0)
730^C
"^DD",730,730,3,1,1,1)
S ^ECC(730,"C",$E(X,1,30),DA)=""
"^DD",730,730,3,1,1,2)
K ^ECC(730,"C",$E(X,1,30),DA)
"^DD",730,730,3,1,1,"%D",0)
^^1^1^2980714^
"^DD",730,730,3,1,1,"%D",1,0)
Regular cross-reference on DSS Service Code.
"^DD",730,730,3,1,1,"DT")
2980714
"^DD",730,730,3,3)
Answer must be 1 character in length.
"^DD",730,730,3,8.5)
^
"^DD",730,730,3,9)
^
"^DD",730,730,3,21,0)
^^3^3^2980714^^
"^DD",730,730,3,21,1,0)
DSS National Service Code for clinical services.  Data is provided
"^DD",730,730,3,21,2,0)
by DSS Bedford Technical Service Office and is not editable by the 
"^DD",730,730,3,21,3,0)
local site.
"^DD",730,730,3,23,0)
^^2^2^2980714^^
"^DD",730,730,3,23,1,0)
Exactly one alphanumeric character; if alpha then must 
"^DD",730,730,3,23,2,0)
be uppercase.
"^DD",730,730,3,"DT")
2980715
"^DD",730,730,4,0)
VA COST CENTER^FI^^0;5^K:$L(X)>3!($L(X)<3) X
"^DD",730,730,4,3)
Answer must be 3 characters in length.
"^DD",730,730,4,8.5)
^
"^DD",730,730,4,9)
^
"^DD",730,730,4,21,0)
^^3^3^2980714^
"^DD",730,730,4,21,1,0)
VA Cost Center associated with the service.  Data is provided
"^DD",730,730,4,21,2,0)
by DSS Bedford Technical Service Office and is not editable by the 
"^DD",730,730,4,21,3,0)
local site.
"^DD",730,730,4,23,0)
^^1^1^2980714^
"^DD",730,730,4,23,1,0)
A code consisting of three numeric characters.
"^DD",730,730,4,"DT")
2980714
"^DIC",727.3,727.3,0)
DSS DIVISION IDENTIFIER^727.3
"^DIC",727.3,727.3,0,"GL")
^ECX(727.3,
"^DIC",727.3,727.3,"%D",0)
^^4^4^2980831^^
"^DIC",727.3,727.3,"%D",1,0)
This file is used to associate a local DSS Identifier with each medical
"^DIC",727.3,727.3,"%D",2,0)
center division.  Do not use FileMan to enter/edit data in this file.  The 
"^DIC",727.3,727.3,"%D",3,0)
DSS Site Manager is provided with a specific menu option with which to
"^DIC",727.3,727.3,"%D",4,0)
perform file updates.
"^DIC",727.3,"B","DSS DIVISION IDENTIFIER",727.3)

"^DIC",727.4,727.4,0)
DSS WARD^727.4
"^DIC",727.4,727.4,0,"GL")
^ECX(727.4,
"^DIC",727.4,727.4,"%D",0)
^^4^4^2980831^
"^DIC",727.4,727.4,"%D",1,0)
This file is used to associate a DSS Department code with each active
"^DIC",727.4,727.4,"%D",2,0)
ward in the medical center.  Do not use FileMan to enter/edit data in this
"^DIC",727.4,727.4,"%D",3,0)
file.  The DSS Site Manager is provided with a specific menu option with
"^DIC",727.4,727.4,"%D",4,0)
which to perform file updates.
"^DIC",727.4,"B","DSS WARD",727.4)

"^DIC",729,729,0)
DSS PRODUCTION UNIT^729
"^DIC",729,729,0,"GL")
^ECX(729,
"^DIC",729,729,"%D",0)
^^8^8^2980831^
"^DIC",729,729,"%D",1,0)
This file provides codes associated with DSS production units.  These
"^DIC",729,729,"%D",2,0)
codes are used when the DSS Site Manager develops DSS Department codes
"^DIC",729,729,"%D",3,0)
to be associated with various medical center entities such as wards.
"^DIC",729,729,"%D",4,0)
 
"^DIC",729,729,"%D",5,0)
This file is intended for read only purposes.  It must not be modified
"^DIC",729,729,"%D",6,0)
in any way by the local site.  Modifications to this file will be
"^DIC",729,729,"%D",7,0)
distributed nationally in accordance with guidance provided by the
"^DIC",729,729,"%D",8,0)
DSS Bedford Technical Services Office.
"^DIC",729,"B","DSS PRODUCTION UNIT",729)

**END**
**END**
