Released IB*2*327 SEQ #312
Extracted from mail message
**KIDS**:IB*2.0*327^

**INSTALL NAME**
IB*2.0*327
"BLD",6541,0)
IB*2.0*327^INTEGRATED BILLING^0^3060421^y
"BLD",6541,1,0)
^^3^3^3051215^
"BLD",6541,1,1,0)
Prevents a claim from being an MRA request claim when Medicare (WNR) is 
"BLD",6541,1,2,0)
the secondary insurance and prevents the deletion of MRA secondary 
"BLD",6541,1,3,0)
insurance.
"BLD",6541,4,0)
^9.64PA^399^1
"BLD",6541,4,399,0)
399
"BLD",6541,4,399,2,0)
^9.641^399^1
"BLD",6541,4,399,2,399,0)
BILL/CLAIMS  (File-top level)
"BLD",6541,4,399,2,399,1,0)
^9.6411^101^1
"BLD",6541,4,399,2,399,1,101,0)
PRIMARY INSURANCE CARRIER
"BLD",6541,4,399,222)
y^n^p^^^^n^^n
"BLD",6541,4,399,224)

"BLD",6541,4,"APDD",399,399)

"BLD",6541,4,"APDD",399,399,101)

"BLD",6541,4,"B",399,399)

"BLD",6541,"KRN",0)
^9.67PA^8989.52^19
"BLD",6541,"KRN",.4,0)
.4
"BLD",6541,"KRN",.401,0)
.401
"BLD",6541,"KRN",.402,0)
.402
"BLD",6541,"KRN",.403,0)
.403
"BLD",6541,"KRN",.5,0)
.5
"BLD",6541,"KRN",.84,0)
.84
"BLD",6541,"KRN",3.6,0)
3.6
"BLD",6541,"KRN",3.8,0)
3.8
"BLD",6541,"KRN",9.2,0)
9.2
"BLD",6541,"KRN",9.8,0)
9.8
"BLD",6541,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",6541,"KRN",9.8,"NM",1,0)
IBCBB^^0^B14993587
"BLD",6541,"KRN",9.8,"NM",2,0)
IBCB1^^0^B64732488
"BLD",6541,"KRN",9.8,"NM",3,0)
IBEFUNC^^0^B47438335
"BLD",6541,"KRN",9.8,"NM",4,0)
IBCEF4^^0^B28792521
"BLD",6541,"KRN",9.8,"NM",5,0)
IBCB11^^0^B4330079
"BLD",6541,"KRN",9.8,"NM","B","IBCB1",2)

"BLD",6541,"KRN",9.8,"NM","B","IBCB11",5)

"BLD",6541,"KRN",9.8,"NM","B","IBCBB",1)

"BLD",6541,"KRN",9.8,"NM","B","IBCEF4",4)

"BLD",6541,"KRN",9.8,"NM","B","IBEFUNC",3)

"BLD",6541,"KRN",19,0)
19
"BLD",6541,"KRN",19,"NM",0)
^9.68A^^
"BLD",6541,"KRN",19.1,0)
19.1
"BLD",6541,"KRN",101,0)
101
"BLD",6541,"KRN",409.61,0)
409.61
"BLD",6541,"KRN",771,0)
771
"BLD",6541,"KRN",870,0)
870
"BLD",6541,"KRN",8989.51,0)
8989.51
"BLD",6541,"KRN",8989.52,0)
8989.52
"BLD",6541,"KRN",8994,0)
8994
"BLD",6541,"KRN","B",.4,.4)

"BLD",6541,"KRN","B",.401,.401)

"BLD",6541,"KRN","B",.402,.402)

"BLD",6541,"KRN","B",.403,.403)

"BLD",6541,"KRN","B",.5,.5)

"BLD",6541,"KRN","B",.84,.84)

"BLD",6541,"KRN","B",3.6,3.6)

"BLD",6541,"KRN","B",3.8,3.8)

"BLD",6541,"KRN","B",9.2,9.2)

"BLD",6541,"KRN","B",9.8,9.8)

"BLD",6541,"KRN","B",19,19)

"BLD",6541,"KRN","B",19.1,19.1)

"BLD",6541,"KRN","B",101,101)

"BLD",6541,"KRN","B",409.61,409.61)

"BLD",6541,"KRN","B",771,771)

"BLD",6541,"KRN","B",870,870)

"BLD",6541,"KRN","B",8989.51,8989.51)

"BLD",6541,"KRN","B",8989.52,8989.52)

"BLD",6541,"KRN","B",8994,8994)

"BLD",6541,"QUES",0)
^9.62^^
"BLD",6541,"REQB",0)
^9.611^3^3
"BLD",6541,"REQB",1,0)
IB*2.0*249^2
"BLD",6541,"REQB",2,0)
IB*2.0*288^2
"BLD",6541,"REQB",3,0)
IB*2.0*296^2
"BLD",6541,"REQB","B","IB*2.0*249",1)

"BLD",6541,"REQB","B","IB*2.0*288",2)

"BLD",6541,"REQB","B","IB*2.0*296",3)

"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^n^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399,101)

"IX",399,399,"AE",0)
399^AE^Index by patient and insurance company^MU^^R^IR^I^399^^^^^S
"IX",399,399,"AE",.1,0)
^^7^7^3041021^
"IX",399,399,"AE",.1,1,0)
Cross reference of patients and bills to payer responsible for the bill.
"IX",399,399,"AE",.1,2,0)
This will be used to prevent deletion of insurance policy entries from the
"IX",399,399,"AE",.1,3,0)
patient file if a bill has been created for this insurance company.
"IX",399,399,"AE",.1,4,0)
 
"IX",399,399,"AE",.1,5,0)
Created with patch IB*2.0*288 replacing traditional cross-reference #1 in 
"IX",399,399,"AE",.1,6,0)
field 135 of file 399.  Medicare is now a valid insurance company for 
"IX",399,399,"AE",.1,7,0)
this index file.
"IX",399,399,"AE",1)
N CURR S CURR=+$$COBN^IBCEF(DA) I $G(X(4)),$G(X(CURR)) S ^DGCR(399,"AE",X(4),X(CURR),DA)="" I $$MCRWNR^IBEFUNC(X(CURR)),$G(X(CURR+1)) S ^DGCR(399,"AE",X(4),X(CURR+1),DA)=""
"IX",399,399,"AE",2)
N G I $G(X(4)) F G=1,2,3 I $G(X(G)) K ^DGCR(399,"AE",X(4),X(G),DA)
"IX",399,399,"AE",2.5)
K ^DGCR(399,"AE")
"IX",399,399,"AE",11.1,0)
^.114IA^4^4
"IX",399,399,"AE",11.1,1,0)
1^F^399^101^^^F
"IX",399,399,"AE",11.1,2,0)
2^F^399^102^^^F
"IX",399,399,"AE",11.1,3,0)
3^F^399^103^^^F
"IX",399,399,"AE",11.1,4,0)
4^F^399^.02^^^F
"IX",399,399,"AUPDID",0)
399^AUPDID^UPDATE PROVIDER ID WHEN DATA FIELDS CHANGE AT TOP LEVEL OF FILE^MU^^R^IR^I^399^^^^^A
"IX",399,399,"AUPDID",.1,0)
^^5^5^3010109^
"IX",399,399,"AUPDID",.1,1,0)
This cross reference maintains the integrity of the rendering or attending
"IX",399,399,"AUPDID",.1,2,0)
provider id whenever an insurance company is added, deleted or changed
"IX",399,399,"AUPDID",.1,3,0)
on the claim.  If either of these provider functions exist on the bill,
"IX",399,399,"AUPDID",.1,4,0)
this cross reference sets the default id data based on the insurance co's
"IX",399,399,"AUPDID",.1,5,0)
parameters.
"IX",399,399,"AUPDID",1)
D:X1(1)'=X2(1)!(X1(5)'=X2(5)) SETID^IBCEP3(DA,1) D:X1(2)'=X2(2)!(X1(4)'=X2(4)) SETID^IBCEP3(DA,2) D:X1(3)'=X2(3)!(X1(6)'=X2(6)) SETID^IBCEP3(DA,3)
"IX",399,399,"AUPDID",1.4)
S X=$S($O(^DGCR(399,DA,"PRV",0)):1,1:0)
"IX",399,399,"AUPDID",2)
D:X1(1)'=X2(1)!(X1(5)'=X2(5)) DELID^IBCEP3(DA,1) D:X1(2)'=X2(2)!(X1(4)'=X2(4)) DELID^IBCEP3(DA,2) D:X1(3)'=X2(3)!(X1(6)'=X2(6)) DELID^IBCEP3(DA,3)
"IX",399,399,"AUPDID",2.4)
S X=$S($O(^DGCR(399,DA,"PRV",0)):1,1:0)
"IX",399,399,"AUPDID",11.1,0)
^.114IA^6^6
"IX",399,399,"AUPDID",11.1,1,0)
1^F^399^101^^^F
"IX",399,399,"AUPDID",11.1,2,0)
2^F^399^102^^^F
"IX",399,399,"AUPDID",11.1,3,0)
3^F^399^103^^^F
"IX",399,399,"AUPDID",11.1,4,0)
4^F^399^113^^^F
"IX",399,399,"AUPDID",11.1,5,0)
5^F^399^112^^^F
"IX",399,399,"AUPDID",11.1,5,3)
 
"IX",399,399,"AUPDID",11.1,6,0)
6^F^399^114^^^F
"IX",399,399,"AUPDID",11.1,6,3)
 
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
327^3060421
"PKG",200,22,1,"PAH",1,1,0)
^^3^3^3060421
"PKG",200,22,1,"PAH",1,1,1,0)
Prevents a claim from being an MRA request claim when Medicare (WNR) is 
"PKG",200,22,1,"PAH",1,1,2,0)
the secondary insurance and prevents the deletion of MRA secondary 
"PKG",200,22,1,"PAH",1,1,3,0)
insurance.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","IBCB1")
0^2^B64732488^B77996552
"RTN","IBCB1",1,0)
IBCB1 ;ALB/AAS - Process bill after enter/edited ;2-NOV-89
"RTN","IBCB1",2,0)
 ;;2.0;INTEGRATED BILLING;**70,106,51,137,161,182,155,327**;21-MAR-94
"RTN","IBCB1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCB1",4,0)
 ;
"RTN","IBCB1",5,0)
 ;MAP TO DGCRB1
"RTN","IBCB1",6,0)
 ;
"RTN","IBCB1",7,0)
 ;IBQUIT = Flag to stop processing
"RTN","IBCB1",8,0)
 ;IBVIEW = Flag for Bill has been viewed
"RTN","IBCB1",9,0)
 ;IBDISP = Flag for Bill entering display been viewed.
"RTN","IBCB1",10,0)
 ;
"RTN","IBCB1",11,0)
 K ^UTILITY($J) I $D(IBAC),IBAC>1 G @IBAC
"RTN","IBCB1",12,0)
1 ;complete bill
"RTN","IBCB1",13,0)
 D END,EDITS^IBCB2 G:IBQUIT END
"RTN","IBCB1",14,0)
 ;
"RTN","IBCB1",15,0)
 I '$$IICM^IBCB2(IBIFN) G END ; Ingenix ClaimsManager
"RTN","IBCB1",16,0)
 I '$$IIQMED^IBCB2(IBIFN) G END ; DSS QuadraMed Claims Scrubber
"RTN","IBCB1",17,0)
 ;
"RTN","IBCB1",18,0)
3 ;authorize bill/request MRA
"RTN","IBCB1",19,0)
 I '$D(^XUSEC("IB AUTHORIZE",DUZ))!('$D(IBIFN)) W !!,"You do not hold the Authorize Key.",! G END
"RTN","IBCB1",20,0)
 I '$P($G(^IBE(350.9,1,1)),"^",23),DUZ=$P(^DGCR(399,IBIFN,"S"),"^",2) W !!,"Entering user can not authorize.",! G END
"RTN","IBCB1",21,0)
 I $P(^DGCR(399,IBIFN,"S"),"^",9) W !,"Already Approved, Can't change" G END
"RTN","IBCB1",22,0)
 D:'$G(IBAC)!($G(IBAC)>1) EDITS^IBCB2 G:IBQUIT END
"RTN","IBCB1",23,0)
 ;
"RTN","IBCB1",24,0)
 I $G(IBAC)'=1,'$$IICM^IBCB2(IBIFN) G END ; Ingenix ClaimsManager
"RTN","IBCB1",25,0)
 I $G(IBAC)'=1,'$$IIQMED^IBCB2(IBIFN) G END ; DSS QuadraMed Claims Scrubber
"RTN","IBCB1",26,0)
 ;
"RTN","IBCB1",27,0)
AUTH S IBMRA=$$REQMRA^IBEFUNC(IBIFN)
"RTN","IBCB1",28,0)
 S IBEND=0
"RTN","IBCB1",29,0)
 I IBMRA["R" D AUTH^IBCB11 G:IBEND END ;MRA normally required, but MEDIGAP ins co
"RTN","IBCB1",30,0)
 ;                         doesn't want/need it or MRA parameter off
"RTN","IBCB1",31,0)
 ;
"RTN","IBCB1",32,0)
 W !!,"THIS BILL WILL "_$P("NOT ^",U,$$TXMT^IBCEF4(IBIFN)+1)_"BE TRANSMITTED ELECTRONICALLY"
"RTN","IBCB1",33,0)
 W !!,"WANT TO ",$S('IBMRA:"AUTHORIZE BILL",1:"REQUEST AN MRA")," AT THIS TIME" S %=2 D YN^DICN G:%=-1!(%=2) END
"RTN","IBCB1",34,0)
 I '% W !?4,"YES - If finished entering bill information and to allow bill to be printed or transmitted",!?4,"No - To take no action" G AUTH
"RTN","IBCB1",35,0)
 S (DIC,DIE)=399,IBYY=$S('IBMRA:"@90",1:"@901"),DA=IBIFN,DR="[IB STATUS]" D ^DIE K DIC,DIE,IBYY D:$D(IBX3) DISAP^IBCBULL
"RTN","IBCB1",36,0)
 I $S('IBMRA:'$P(^DGCR(399,IBIFN,"S"),"^",9),1:'$P($G(^DGCR(399,IBIFN,"TX")),U,6)) G END
"RTN","IBCB1",37,0)
 ;
"RTN","IBCB1",38,0)
 ; Update the review status for all EOB's on file
"RTN","IBCB1",39,0)
 D STAT^IBCEMU2(IBIFN,3)     ; Accepted - Complete EOB
"RTN","IBCB1",40,0)
 ;
"RTN","IBCB1",41,0)
 D AUTOCK^IBCEU2(IBIFN) ; Checks for need to add any codes to bill based on information already on bill, specifically for EDI purposes
"RTN","IBCB1",42,0)
 S IBTXSTAT=$$TXMT^IBCEF4(IBIFN,,1)  ;Determine transmit, whether live/test
"RTN","IBCB1",43,0)
 I IBTXSTAT D  I IBMRA D CTCOPY^IBCCCB(IBIFN,1) G END
"RTN","IBCB1",44,0)
 .W !,"  Adding "
"RTN","IBCB1",45,0)
 .W:+IBTXSTAT=2 "test " W "bill to BILL TRANSMISSION File"_$S('IBMRA:"",1:" for MRA submission")_".",!
"RTN","IBCB1",46,0)
 .W:+IBTXSTAT=1&IBMRA "  Bill is no longer editable unless returned in error from Medicare."
"RTN","IBCB1",47,0)
 .S Y=$$ADDTBILL(IBIFN,+IBTXSTAT)
"RTN","IBCB1",48,0)
 .W ! W:'$P(Y,U,3) *7 W $S($P(Y,U,3):"  Bill will be submitted electronically",1:"  Error loading into transmit file - bill can not be transmitted.")
"RTN","IBCB1",49,0)
 .;
"RTN","IBCB1",50,0)
 ;
"RTN","IBCB1",51,0)
 W !,"Passing completed Bill to Accounts Receivable.  Bill is no longer editable."
"RTN","IBCB1",52,0)
 D ARPASS(IBIFN,1)
"RTN","IBCB1",53,0)
 G:'$G(PRCASV("OKAY")) END
"RTN","IBCB1",54,0)
 W !,"Completed Bill Successfully sent to Accounts Receivable." D FIND^IBOHCK(DFN,IBIFN)
"RTN","IBCB1",55,0)
 ;
"RTN","IBCB1",56,0)
 ; Check to see if any unreviewed status messages or EOBs on file and
"RTN","IBCB1",57,0)
 ; what to do about them
"RTN","IBCB1",58,0)
 N IBTXBARR
"RTN","IBCB1",59,0)
 S IBRESUB=$$RESUB^IBCECSA4($S($G(IBCNCOPY):$P($G(^DGCR(399,IBIFN,0)),U,15),1:IBIFN),+IBTXSTAT,"E",.IBTXBARR)
"RTN","IBCB1",60,0)
 I IBRESUB=2 D         ; update review statuses to be 'review complete'
"RTN","IBCB1",61,0)
 . N IBDA S IBDA=0
"RTN","IBCB1",62,0)
 . F  S IBDA=$O(IBTXBARR(IBDA)) Q:'IBDA  D UPDEDI^IBCEM(IBDA,$S($G(IBCNCOPY):"R",1:"E"))
"RTN","IBCB1",63,0)
 . Q
"RTN","IBCB1",64,0)
 ;
"RTN","IBCB1",65,0)
 K IBTXPRT
"RTN","IBCB1",66,0)
 ;
"RTN","IBCB1",67,0)
4 ;generate/print bill
"RTN","IBCB1",68,0)
 G:'$D(IBIFN) END
"RTN","IBCB1",69,0)
 S:'$D(IBMRA) IBMRA=+$$NEEDMRA^IBEFUNC(IBIFN)
"RTN","IBCB1",70,0)
 I 'IBMRA,'$P(^DGCR(399,IBIFN,"S"),"^",9) W !!,*7,"Not Authorized, Can Not Print!" G END
"RTN","IBCB1",71,0)
 I IBMRA,'$P(^DGCR(399,IBIFN,"TX"),"^",6) W !!,*7,"Not Ready For MRA Submission, Can Not Print!" G END
"RTN","IBCB1",72,0)
 S IBTXSTAT=$$TXMT^IBCEF4(IBIFN)
"RTN","IBCB1",73,0)
 I IBMRA,$$NEEDMRA^IBEFUNC(IBIFN)'["R" W !!,*7,"MRA Submission not yet confirmed by Austin, Can Not Print!" Q:$S('IBTXSTAT:1,1:"XP"'[$P($G(^IBA(364,+$$LAST364^IBCEF4(IBIFN),0)),U,3))
"RTN","IBCB1",74,0)
 I +IBTXSTAT,$D(^IBA(364,"ABDT",IBIFN)) S IBTXOK="" D  I 'IBTXOK S %=2 G GENTX
"RTN","IBCB1",75,0)
 . N IBX,IBTST
"RTN","IBCB1",76,0)
 . S IBX=+$$LAST364^IBCEF4(IBIFN),IBTST=""
"RTN","IBCB1",77,0)
 . I $$TEST^IBCEF4(IBIFN) S (IBTXOK,IBTST)=1
"RTN","IBCB1",78,0)
 . I "XP"[$P($G(^IBA(364,IBX,0)),U,3) D:'IBTST  Q
"RTN","IBCB1",79,0)
 .. W !!,*7,"This Bill Can Not Be Printed Until Transmit Confirmed" W:IBMRA " (to request an MRA)" D:'$D(IBVIEW) VIEW^IBCB2
"RTN","IBCB1",80,0)
 . W !!,"This Bill Has Already Been Transmitted" W:IBMRA " (to request an MRA)"
"RTN","IBCB1",81,0)
 . S DIR("B")="Y",DIR("A")="WANT TO PRINT IT ANYWAY",DIR(0)="Y" D ^DIR K DIR Q:$D(DTOUT)!$D(DUOUT)!'Y  S IBTXOK=1
"RTN","IBCB1",82,0)
 D DISP^IBCB2
"RTN","IBCB1",83,0)
 S:'$D(IBQUIT) IBQUIT=0
"RTN","IBCB1",84,0)
 D:'$D(IBVIEW) VIEW^IBCB2 G:IBQUIT END
"RTN","IBCB1",85,0)
 S IBPNT=$P(^DGCR(399,IBIFN,"S"),"^",12)
"RTN","IBCB1",86,0)
GEN I $$TEST^IBCEF4(IBIFN) W !!,"THIS BILL IS BEING USED AS A TRANSMISSION TEST BILL"
"RTN","IBCB1",87,0)
 W !!,"WANT TO ",$S(IBPNT]"":"RE-",1:""),"PRINT BILL AT THIS TIME" S %=2 D YN^DICN I %=-1 D:+$G(IBAC)=1 END,CTCOPY^IBCCCB(IBIFN) G END
"RTN","IBCB1",88,0)
 I '% W !?4,"YES - to print the bill now",!?4,"NO - To take no action" G GEN
"RTN","IBCB1",89,0)
GENTX I %'=1 D:+$G(IBAC)=1 END,CTCOPY^IBCCCB(IBIFN) G END
"RTN","IBCB1",90,0)
 ;
"RTN","IBCB1",91,0)
 ; Bill has never been printed.  First time print.
"RTN","IBCB1",92,0)
 I 'IBPNT D  G END
"RTN","IBCB1",93,0)
 . I $D(IBTXPRT) D TXPRTS
"RTN","IBCB1",94,0)
 . D EN1^IBCF
"RTN","IBCB1",95,0)
 . I $D(IBTXPRT) D TXPRT
"RTN","IBCB1",96,0)
 . D MRA^IBCEMU1(IBIFN)       ; Printing the MRA
"RTN","IBCB1",97,0)
 . I +$G(IBAC)=1 D END,CTCOPY^IBCCCB(IBIFN)
"RTN","IBCB1",98,0)
 . Q
"RTN","IBCB1",99,0)
 ;
"RTN","IBCB1",100,0)
 ; Below section is for re-prints
"RTN","IBCB1",101,0)
RPNT G:$$NEEDMRA^IBEFUNC(IBIFN) END
"RTN","IBCB1",102,0)
 R !!,"(2)nd Notice, (3)rd Notice, (C)opy or (O)riginal: C// ",IBPNT:DTIME S:IBPNT="" IBPNT="C" G:IBPNT["^" END
"RTN","IBCB1",103,0)
 S IBPNT=$E(IBPNT,1) I "23oOcC"'[IBPNT W !?5,"Enter 'O' to reprint the original bill or",!?5,"Enter 'C' to reprint the bill as a duplicate copy or",!?5,"Enter '2' or '3' to print 2nd or 3rd follow-up notices." S IBPNT=1 G RPNT
"RTN","IBCB1",104,0)
 W "  (",$S("cC"[IBPNT:"COPY","oO"[IBPNT:"ORIGINAL",IBPNT=2:"2nd NOTICE",IBPNT=3:"3rd NOTICE",1:""),")"
"RTN","IBCB1",105,0)
 I $D(IBTXPRT) D
"RTN","IBCB1",106,0)
 . D TXPRTS
"RTN","IBCB1",107,0)
 . I "oOcC"[IBPNT S IBRESUB=$$RESUB^IBCECSA4(IBIFN,1,"P")
"RTN","IBCB1",108,0)
 S IBPNT=$S("oO"[IBPNT:1,"cC"[IBPNT:0,1:IBPNT)
"RTN","IBCB1",109,0)
 D EN1X^IBCF D:$D(IBTXPRT) TXPRT
"RTN","IBCB1",110,0)
 D MRA^IBCEMU1(IBIFN)       ; Printing the MRA
"RTN","IBCB1",111,0)
 ;
"RTN","IBCB1",112,0)
 ;
"RTN","IBCB1",113,0)
END K IBER,IBEND D END^IBCBB1 K IBQUIT,IBVIEW,IBDISP,IBST,IB,PRCAERCD,PRCAERR,PRCASVC,PRCAT,DGRA2,IBBT,IBCH,IBNDS,IBOA,IBREV,IBX,DGXRF1,PRCAORA,IBX3,DGBILLBS,DGII,DGVISCNT,DGFIL,DGTE,IBTXOK,IBTXSTAT,IBMRA,IBNOFIX
"RTN","IBCB1",114,0)
 K %DT,DIC,DIE,I,J,X,Y,Y1,Y2,IBER,IBDFN,IBDSDT,IBJ,IBNDI1,IBZZ,VA,IBMA,IBXDT,DI,PRCAPAYR,DGBS,DGCNT,DGDA,DGPAG,DGREVC,DGRV,DGTEXT,DGTOTPAG,IBOPV,DGLCNT,DGTEXT1,DGRSPAC,DGSM,IBPNT,DGINPT,DGLL,IBCPTN,IBFL
"RTN","IBCB1",115,0)
 K IBRESUB,IBOPV1,IBOPV2,IBCHG,DGBIL1,DGU,DDH,IBA1,IBINS,IBPROC,PRCARI K:'$D(PRCASV("NOTICE")) PRCASV
"RTN","IBCB1",116,0)
 K ^TMP("IBXDATA",$J),^TMP("IBXEDIT",$J)
"RTN","IBCB1",117,0)
 K IBCISNT,IBCISTAT,IBCIERR   ; remove ClaimsManager variables
"RTN","IBCB1",118,0)
 Q
"RTN","IBCB1",119,0)
 ;
"RTN","IBCB1",120,0)
TX1(IBX,RESUB) ; Transmit a single bill from file 364 entry # IBX
"RTN","IBCB1",121,0)
 ; RESUB = flag (1 = resubmitting a bill, 0 = submitting bill 1st time)
"RTN","IBCB1",122,0)
 ; Returns 1 if successfully extracted to mailman queue for transmission,
"RTN","IBCB1",123,0)
 ;         0 if extract not successful
"RTN","IBCB1",124,0)
 N IBTXOK,IBVVSAVE
"RTN","IBCB1",125,0)
 K ^TMP("IBRESUBMIT",$J),^TMP("IBONE",$J)
"RTN","IBCB1",126,0)
 S IBVVSAVE("IBX")=IBX,^TMP("IBONE",$J)=+$G(RESUB),^($J,IBX)=""
"RTN","IBCB1",127,0)
 D ONE^IBCE837
"RTN","IBCB1",128,0)
 S IBX=IBVVSAVE("IBX")
"RTN","IBCB1",129,0)
 I $P($G(^IBA(364,IBX,0)),U,3)="P" S IBTXOK=1
"RTN","IBCB1",130,0)
 K ^TMP("IBONE",$J)
"RTN","IBCB1",131,0)
 Q $G(IBTXOK)
"RTN","IBCB1",132,0)
 ;
"RTN","IBCB1",133,0)
ARONLY(IBIFN) ; Pass bill to A/R, but that's all
"RTN","IBCB1",134,0)
 D ARPASS(IBIFN,0)
"RTN","IBCB1",135,0)
 Q
"RTN","IBCB1",136,0)
 ;
"RTN","IBCB1",137,0)
ARPASS(IBIFN,UPDOK) ;Pass bill to A/R as NEW BILL
"RTN","IBCB1",138,0)
 ;IBIFN = bill entry #
"RTN","IBCB1",139,0)
 ;UPDOK = flag 1: if error going to A/R, allow interactive edit
"RTN","IBCB1",140,0)
 ;             0: send bulletin to IB EDI for error going to A/R
"RTN","IBCB1",141,0)
 Q:+$$STA^PRCAFN(+IBIFN)'=201  ;Must not have been sent previously
"RTN","IBCB1",142,0)
 D GVAR^IBCBB
"RTN","IBCB1",143,0)
 ;Can't be an ins co that won't reimburse
"RTN","IBCB1",144,0)
 Q:$S($P($G(^DGCR(399,IBIFN,0)),U,11)="i":'IBNDMP,1:0)
"RTN","IBCB1",145,0)
 D ARRAY^IBCBB1,^PRCASVC6
"RTN","IBCB1",146,0)
 D REL^PRCASVC:$G(PRCASV("OKAY"))
"RTN","IBCB1",147,0)
 I '$G(PRCASV("OKAY")) D
"RTN","IBCB1",148,0)
 . N IBQUIT,IBQUIT1
"RTN","IBCB1",149,0)
 . S IBQUIT=0
"RTN","IBCB1",150,0)
 . I $G(UPDOK) D  Q
"RTN","IBCB1",151,0)
 .. F  D  Q:IBQUIT
"RTN","IBCB1",152,0)
 ... D DSPARERR^IBCB2("")
"RTN","IBCB1",153,0)
 ... Q:IBQUIT
"RTN","IBCB1",154,0)
 ... I $$ASKEDIT^IBCB2($G(IBAC)) D VIEW1^IBCB2 Q
"RTN","IBCB1",155,0)
 ... S IBQUIT=1
"RTN","IBCB1",156,0)
 . N XMSUB,XMY,XMTEXT,XMDUZ,IBT
"RTN","IBCB1",157,0)
 . S XMSUB="ERROR PASSING BILL TO A/R ON CONFIRMATION",XMTEXT="IBT(",XMY="G.IB EDI",XMDUZ=.5
"RTN","IBCB1",158,0)
 . S IBT(1)="A problem has been detected while trying to pass bill "_$P($G(^DGCR(399,IBIFN,0)),U)_" to"
"RTN","IBCB1",159,0)
 . S IBT(2)="Accounts Receivable when updating the bill's electronic confirmation."
"RTN","IBCB1",160,0)
 . S IBT(3)="Please use the option PASS BILL TO A/R to complete this process."
"RTN","IBCB1",161,0)
 . D ^XMD
"RTN","IBCB1",162,0)
 Q
"RTN","IBCB1",163,0)
 ;
"RTN","IBCB1",164,0)
ADDTBILL(IBIFN,TXST) ; Add new transmit bill rec to file 364 for bill IBIFN
"RTN","IBCB1",165,0)
 ; TXST = test flag 1=live, 2=test
"RTN","IBCB1",166,0)
 N COB,DD,DO,DIC,DLAYGO,X
"RTN","IBCB1",167,0)
 S TXST=($G(TXST)/2\1),COB=$$COB^IBCEF(IBIFN)
"RTN","IBCB1",168,0)
 S DIC(0)="L",DIC="^IBA(364,",DLAYGO=364,X=IBIFN,DIC("DR")=".03///X;.04///NOW;.07////"_TXST_";.08////"_COB D FILE^DICN
"RTN","IBCB1",169,0)
 Q Y
"RTN","IBCB1",170,0)
 ;
"RTN","IBCB1",171,0)
TXPRTS ; Save off last print date to see if bill was reprinted without queueing
"RTN","IBCB1",172,0)
 I '$$NEEDMRA^IBEFUNC(IBIFN) S IBTXPRT("PRT")=$P($G(^DGCR(399,IBIFN,"S")),U,14)
"RTN","IBCB1",173,0)
 Q
"RTN","IBCB1",174,0)
 ;
"RTN","IBCB1",175,0)
TXPRT ; Set variable if print was tasked or bill was printed (last print date changed)
"RTN","IBCB1",176,0)
 I '$$NEEDMRA^IBEFUNC(IBIFN),$S($G(ZTSK):1,1:IBTXPRT("PRT")'=$P($G(^DGCR(399,IBIFN,"S")),U,14)) S IBTXPRT=1
"RTN","IBCB1",177,0)
 Q
"RTN","IBCB1",178,0)
 ;
"RTN","IBCB11")
0^5^B4330079
"RTN","IBCB11",1,0)
IBCB11 ;ALB/AAS - Process bill after enter/edited ;2-NOV-89
"RTN","IBCB11",2,0)
 ;;2.0;INTEGRATED BILLING;**327**;21-MAR-94
"RTN","IBCB11",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCB11",4,0)
AUTH N DIR,Y,X,IBINS,NXTINS
"RTN","IBCB11",5,0)
 S NXTINS=+$$POLICY^IBCEF(IBIFN,1,$$COBN^IBCEF(IBIFN)+1)  ; next ins
"RTN","IBCB11",6,0)
 S IBINS=$P($G(^DIC(36,NXTINS,0)),U)   ; name of next insurance
"RTN","IBCB11",7,0)
 Q:$$MCRWNR^IBEFUNC(NXTINS)            ; quit if its Medicare
"RTN","IBCB11",8,0)
 ;IF IBMRA = R2 PASS BILL DIRECTLY TO TERTIARY INSURANCE
"RTN","IBCB11",9,0)
 I IBMRA="R2" D  Q
"RTN","IBCB11",10,0)
 .D EN^DDIOL("This bill has secondary policy of MEDICARE and an MRA will not be submitted.","","!")
"RTN","IBCB11",11,0)
 .D EN^DDIOL("This bill will go directly to "_IBINS,"","!!")
"RTN","IBCB11",12,0)
 .D COBCHG^IBCCC2(IBIFN,+$$CURR^IBCEF2(IBIFN))
"RTN","IBCB11",13,0)
 .Q
"RTN","IBCB11",14,0)
 ;
"RTN","IBCB11",15,0)
 S DIR(0)="YO",DIR("B")="YES",DIR("A",1)=" "
"RTN","IBCB11",16,0)
 S DIR("A",2)="This bill has prior insurance of MEDICARE, but"
"RTN","IBCB11",17,0)
 I +$P($G(^IBE(350.9,1,8)),U,10)'<2 D
"RTN","IBCB11",18,0)
 . S DIR("A",3)="Ins Co, "_IBINS_", does not want/need an MRA."
"RTN","IBCB11",19,0)
 E  D
"RTN","IBCB11",20,0)
 . S DIR("A",3)="the site parameter for MRA Requests is turned off."
"RTN","IBCB11",21,0)
 S DIR("A",4)=" "
"RTN","IBCB11",22,0)
 S DIR("A")="Do you want this bill to go directly to "_IBINS
"RTN","IBCB11",23,0)
 S DIR("?",1)="If you answer NO, the bill will not be authorized."
"RTN","IBCB11",24,0)
 S DIR("?")="If you answer YES, this bill will automatically become a "_$P("secondary^tertiary",U,$$COBN^IBCEF(IBIFN))_" bill."
"RTN","IBCB11",25,0)
 D ^DIR K DIR
"RTN","IBCB11",26,0)
 I 'Y S IBEND=1 W !,"Can't continue",! Q
"RTN","IBCB11",27,0)
 D COBCHG^IBCCC2(IBIFN,+$$CURR^IBCEF2(IBIFN))
"RTN","IBCB11",28,0)
 Q
"RTN","IBCBB")
0^1^B14993587^B14269669
"RTN","IBCBB",1,0)
IBCBB ;ALB/AAS - EDIT CHECK ROUTINE TO BE INVOKED BEFORE ALL BILL APPROVAL ACTIONS ;2-NOV-89
"RTN","IBCBB",2,0)
 ;;2.0;INTEGRATED BILLING;**80,51,137,288,327**;21-MAR-94
"RTN","IBCBB",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCBB",4,0)
 ;
"RTN","IBCBB",5,0)
 ;MAP TO DGCRBB
"RTN","IBCBB",6,0)
 ;
"RTN","IBCBB",7,0)
 ;IBNDn = IBND(n) = ^ib(399,n)
"RTN","IBCBB",8,0)
 ;RETURNS:
"RTN","IBCBB",9,0)
 ;IBER=fields with errors separated by semi-colons
"RTN","IBCBB",10,0)
 ;PRCASV("OKAY")=1 if iber="" and $D(prcasv("array")) compete
"RTN","IBCBB",11,0)
 ;
"RTN","IBCBB",12,0)
GVAR ;set up variables for mccr
"RTN","IBCBB",13,0)
 Q:'$D(IBIFN)  F I=0,"M","U","U1","S","MP","TX","UF3","UF31","U2" S @("IBND"_I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCBB",14,0)
 S IBBNO=$P(IBND0,"^"),DFN=$P(IBND0,"^",2),IBEVDT=$P(IBND0,"^",3)
"RTN","IBCBB",15,0)
 S IBLOC=$P(IBND0,"^",4),IBCL=$P(IBND0,"^",5),IBTF=$P(IBND0,"^",6)
"RTN","IBCBB",16,0)
 S IBAT=$P(IBND0,"^",7),IBWHO=$P(IBND0,"^",11),IBST=$P(IBND0,"^",13),IBFT=$P(IBND0,"^",19)
"RTN","IBCBB",17,0)
 S IBFDT=$P(IBNDU,"^",1),IBTDT=$P(IBNDU,"^",2)
"RTN","IBCBB",18,0)
 S IBTC=$P(IBNDU1,"^",1),IBFY=$P(IBNDU1,"^",9),IBFYC=$P(IBNDU1,"^",10)
"RTN","IBCBB",19,0)
 S IBEU=$P(IBNDS,"^",2),IBRU=$P(IBNDS,"^",5),IBAU=$P(IBNDS,"^",8)
"RTN","IBCBB",20,0)
 S IBTOB=$$TOB(IBND0),IBTOB12=$E(IBTOB,1,2)
"RTN","IBCBB",21,0)
 K ^TMP($J,"BILL-WARN")
"RTN","IBCBB",22,0)
 Q
"RTN","IBCBB",23,0)
 ;
"RTN","IBCBB",24,0)
EN ;Entry to check for errors
"RTN","IBCBB",25,0)
 N IBQ,IBXERR,IBXDATA,IBXSAVE,IBZPRC92,IBQUIT,IBISEQ,IDDATA,IBERRNO
"RTN","IBCBB",26,0)
 I $D(IBFL) N IBFL
"RTN","IBCBB",27,0)
 K ^TMP($J)
"RTN","IBCBB",28,0)
 W !
"RTN","IBCBB",29,0)
 S IBER="" D GVAR I '$D(IBND0) S IBER=-1 Q
"RTN","IBCBB",30,0)
 ;
"RTN","IBCBB",31,0)
 ;I $$ISPROS^IBCEF1(IBIFN) D
"RTN","IBCBB",32,0)
 ;. D WARN^IBCBB11("Bill has prosthetics item(s) and will only print locally")
"RTN","IBCBB",33,0)
 ;. I $$NEEDMRA^IBEFUNC(IBIFN) S IBQUIT=$$IBER^IBCBB3(.IBER,"098")
"RTN","IBCBB",34,0)
 ;
"RTN","IBCBB",35,0)
 ;patient in patient file
"RTN","IBCBB",36,0)
 I DFN="" S IBER=IBER_"IB057;"
"RTN","IBCBB",37,0)
 I DFN]"",'$D(^DPT(DFN)) S IBER=IBER_"IB057;"
"RTN","IBCBB",38,0)
 ;
"RTN","IBCBB",39,0)
 ;Event date in correct format
"RTN","IBCBB",40,0)
 I IBEVDT="" S IBER=IBER_"IB049;"
"RTN","IBCBB",41,0)
 I IBEVDT]"",IBEVDT'?7N&(IBEVDT'?7N1".".N) S IBER=IBER_"IB049;"
"RTN","IBCBB",42,0)
 ;
"RTN","IBCBB",43,0)
 ;Rate Type
"RTN","IBCBB",44,0)
 I IBAT="" S IBER=IBER_"IB059;"
"RTN","IBCBB",45,0)
 I IBAT]"",'$D(^DGCR(399.3,IBAT,0)) S IBER=IBER_"IB059;"
"RTN","IBCBB",46,0)
 I IBAT]"",$D(^DGCR(399.3,IBAT,0)),'$P(^(0),"^",6) S IBER=IBER_"IB059;",IBAT=""
"RTN","IBCBB",47,0)
 ;I IBAT]"",$D(^DGCR(399.3,IBAT,0)) S IBARTP=$P(^PRCA(430.2,$P(^DGCR(399.3,IBAT,0),"^",6),0),"^",6)
"RTN","IBCBB",48,0)
 I IBAT]"",$P($G(^DGCR(399.3,IBAT,0)),"^",6) S IBARTP=$P($$CATN^PRCAFN($P(^DGCR(399.3,IBAT,0),"^",6)),"^",3)
"RTN","IBCBB",49,0)
 ;Check that AR category expects same debtor as defined in who's respon.
"RTN","IBCBB",50,0)
 I $D(IBARTP),IBWHO="i"&(IBARTP'="T")!(IBWHO="p"&("PC"'[IBARTP))!(IBWHO="o"&(IBARTP'="N")) S IBER=IBER_"IB058;"
"RTN","IBCBB",51,0)
 ;
"RTN","IBCBB",52,0)
 ;Who's Responsible
"RTN","IBCBB",53,0)
 I IBWHO=""!($L(IBWHO)>1)!("iop"'[IBWHO) S IBER=IBER_"IB065;"
"RTN","IBCBB",54,0)
 S IBMRA=$S($$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN)):$$TXMT^IBCEF4(IBIFN)>0,1:0)
"RTN","IBCBB",55,0)
 ;  MCR will not reimburse is only valid if there is subsequent insurance
"RTN","IBCBB",56,0)
 ;   that will reimburse
"RTN","IBCBB",57,0)
 I IBWHO="i" D
"RTN","IBCBB",58,0)
 . I IBMRA D  Q
"RTN","IBCBB",59,0)
 .. N Z,IBZ
"RTN","IBCBB",60,0)
 .. S IBZ=0
"RTN","IBCBB",61,0)
 .. F Z=$$COBN^IBCEF(IBIFN):1:3 I $D(^DGCR(399,IBIFN,"I"_(Z+1))),$P($G(^DIC(36,+$G(^DGCR(399,IBIFN,"I"_(Z+1))),0)),U,2)'="N" S IBZ=1 Q
"RTN","IBCBB",62,0)
 .. I 'IBZ S IBER=IBER_"IB054;" D WARN^IBCBB11("A valid claim for MEDICARE WNR needs subsequent ins. that will reimburse")
"RTN","IBCBB",63,0)
 ..
"RTN","IBCBB",64,0)
 . I $$COB^IBCEF(IBIFN)="S",$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN))=1,$D(^DGCR(399,IBIFN,"I3")) Q
"RTN","IBCBB",65,0)
 . I $S('IBNDMP:1,1:$P(IBNDMP,U,2)'=$$BPP^IBCNS2(IBIFN,1)) S IBER=IBER_"IB054;"
"RTN","IBCBB",66,0)
 I IBWHO="o",'$P(IBNDM,"^",11) S IBER=IBER_"IB053;"
"RTN","IBCBB",67,0)
 ;
"RTN","IBCBB",68,0)
 ; All insurance subscribers must have a birthdate on file
"RTN","IBCBB",69,0)
 ;  - 11/10/04 - IB*2.0*288
"RTN","IBCBB",70,0)
 F IBISEQ=1:1:3 D
"RTN","IBCBB",71,0)
 . I '$P($G(^DGCR(399,IBIFN,"I"_IBISEQ)),U,1) Q   ; no insurance here
"RTN","IBCBB",72,0)
 . K ^UTILITY("VADM",$J),^UTILITY("VAPA",$J)
"RTN","IBCBB",73,0)
 . S IDDATA=$$INSDEM^IBCEF(IBIFN,IBISEQ)
"RTN","IBCBB",74,0)
 . K ^UTILITY("VADM",$J),^UTILITY("VAPA",$J)
"RTN","IBCBB",75,0)
 . I $P(IDDATA,U,1) Q   ; birthdate exists
"RTN","IBCBB",76,0)
 . ; IB error codes
"RTN","IBCBB",77,0)
 . ;    IB221 - primary insured's dob missing
"RTN","IBCBB",78,0)
 . ;    IB222 - secondary insured's dob missing
"RTN","IBCBB",79,0)
 . ;    IB223 - tertiary insured's dob missing
"RTN","IBCBB",80,0)
 . S IBERRNO=220+IBISEQ
"RTN","IBCBB",81,0)
 . S IBER=IBER_"IB"_IBERRNO_";"
"RTN","IBCBB",82,0)
 . Q
"RTN","IBCBB",83,0)
 ;
"RTN","IBCBB",84,0)
 D ^IBCBB1
"RTN","IBCBB",85,0)
 Q
"RTN","IBCBB",86,0)
 ;
"RTN","IBCBB",87,0)
EDIT(IBIFN) ; Run edits from within the billing edit screens
"RTN","IBCBB",88,0)
 N IBVIEW,IBDISP,IBNOFIX,DIR,X,Y
"RTN","IBCBB",89,0)
 S (IBNOFIX,IBVIEW,IBDISP)=1
"RTN","IBCBB",90,0)
 D EDITS^IBCB2
"RTN","IBCBB",91,0)
 W ! S DIR("A")="Press RETURN to continue",DIR(0)="E" D ^DIR K DIR
"RTN","IBCBB",92,0)
 Q
"RTN","IBCBB",93,0)
 ;
"RTN","IBCBB",94,0)
TOB(IBND0) ;
"RTN","IBCBB",95,0)
 ; IBND0 = the 0-node of the bill (file 399)
"RTN","IBCBB",96,0)
 Q ($P(IBND0,U,24)_$P($G(^DGCR(399.1,+$P(IBND0,U,25),0)),U,2)_$P(IBND0,U,26))
"RTN","IBCBB",97,0)
 ;
"RTN","IBCEF4")
0^4^B28792521^B27604330
"RTN","IBCEF4",1,0)
IBCEF4 ;ALB/TMP - MRA/EDI ACTIVATED UTILITIES ;06-FEB-96
"RTN","IBCEF4",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,232,155,296,327**;21-MAR-94
"RTN","IBCEF4",3,0)
 ;
"RTN","IBCEF4",4,0)
EDIACTV(IBEDIMRA) ; Returns 0 if EDI or MRA is not active, 
"RTN","IBCEF4",5,0)
 ; otherwise, returns 1
"RTN","IBCEF4",6,0)
 ; IBEDIMRA : 1= checking if EDI is active, 2= checking if MRA is active
"RTN","IBCEF4",7,0)
 N IBEDI
"RTN","IBCEF4",8,0)
 S IBEDI=$P($G(^IBE(350.9,1,8)),U,10)
"RTN","IBCEF4",9,0)
 Q $S('IBEDI:0,IBEDI=3:1,1:IBEDI=IBEDIMRA)
"RTN","IBCEF4",10,0)
 ;
"RTN","IBCEF4",11,0)
RATEOK(IBIFN) ; Returns 1 if rate type of bill IBIFN is transmittable
"RTN","IBCEF4",12,0)
 Q +$P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBIFN,0)),U,7),0)),U,10)
"RTN","IBCEF4",13,0)
 ;
"RTN","IBCEF4",14,0)
INSOK(INS) ; Determine EDI activation status of insurance co
"RTN","IBCEF4",15,0)
 Q +$G(^DIC(36,INS,3))  ;1 = TEST, 2 = LIVE, 0 = NOT ACTIVE FOR EDI
"RTN","IBCEF4",16,0)
 ;
"RTN","IBCEF4",17,0)
BSTATX(IBIFN) ; Returns internal value of bill's latest transmission status
"RTN","IBCEF4",18,0)
 N IBDA
"RTN","IBCEF4",19,0)
 Q $P($G(^IBA(364,+$$LAST364(IBIFN),0)),U,3)
"RTN","IBCEF4",20,0)
 ;
"RTN","IBCEF4",21,0)
LAST364(IBIFN) ; Determine ien of latest transmit bill record for a bill
"RTN","IBCEF4",22,0)
 Q +$O(^IBA(364,"ABDT",IBIFN,+$O(^IBA(364,"ABDT",IBIFN,""),-1),""),-1)
"RTN","IBCEF4",23,0)
 ;
"RTN","IBCEF4",24,0)
TXMT(IBIFN,IBWHY,IBNEW) ; Determine if bill # IBIFN is 'transmittable'
"RTN","IBCEF4",25,0)
 ; IBNEW = flag is 1 if new entry - don't check for entry in file 364
"RTN","IBCEF4",26,0)
 ; Function returns:
"RTN","IBCEF4",27,0)
 ;        0 if not transmittable
"RTN","IBCEF4",28,0)
 ;        if transmittable, the entire node 3 of the insurance company
"RTN","IBCEF4",29,0)
 ;  and, if passed by reference IBWHY = reason not transmittable
"RTN","IBCEF4",30,0)
 ;                    1 if local print
"RTN","IBCEF4",31,0)
 ;                    2 if EDI/MRA not active
"RTN","IBCEF4",32,0)
 ;                    3 if rate type not transmittable
"RTN","IBCEF4",33,0)
 ;                    4 if no transmit for insurance co
"RTN","IBCEF4",34,0)
 ;                    5 if failed txmn rules
"RTN","IBCEF4",35,0)
 ;                      and IBWHY(0) = ien of rule failed
"RTN","IBCEF4",36,0)
 ;                    6 if Rx with missing/invalid NDC format
"RTN","IBCEF4",37,0)
 ;
"RTN","IBCEF4",38,0)
 N IB,IB0,IBOK,IBCOB,IBMCR,X1
"RTN","IBCEF4",39,0)
 S IBOK=1,IB=IBIFN,IBWHY=""
"RTN","IBCEF4",40,0)
 ;
"RTN","IBCEF4",41,0)
 S IBCOB=$$COBN^IBCEF(IB),IB(.07)=+$G(^DGCR(399,IB,"I"_IBCOB))
"RTN","IBCEF4",42,0)
 S IBMCR=$$MCRWNR^IBEFUNC(IB(.07))
"RTN","IBCEF4",43,0)
 ; Does bill have force local print flag set?
"RTN","IBCEF4",44,0)
 I 'IBMCR D  G:IBWHY TXMTQ  ; MCR WNR not curr ins
"RTN","IBCEF4",45,0)
 . I $S($$MRASEC(IBIFN):$P($G(^DGCR(399,IBIFN,"TX")),U,9)=1,1:$P($G(^DGCR(399,IBIFN,"TX")),U,8)=1) S IBOK=0,IBWHY=1
"RTN","IBCEF4",46,0)
 I '$G(IBNEW),'$O(^IBA(364,"B",IBIFN,0)),$P($G(^DGCR(399,IBIFN,0)),U,13)>2,'$$RETN^PRCAFN(IBIFN) S IBOK=0 G TXMTQ ; Not recognized as transmittable when it was authorized
"RTN","IBCEF4",47,0)
 I $O(^IBA(364,"B",IBIFN,0)),$$INSOK(IB(.07)),$$BSTATX(IBIFN)'="X" G TXMTQ ;Already determined to be transmittable - entry exists for bill in transmit bill file
"RTN","IBCEF4",48,0)
 S IB(.03)=$S('IBMCR:1,1:2) ; EDI(1) or MRA(2)
"RTN","IBCEF4",49,0)
 S IB(.04)=$S('$$INPAT^IBCEF(IB,1):1,1:2) ;Outpt(1) or Inpt(2)
"RTN","IBCEF4",50,0)
 S IB(.05)=$S($$FT^IBCEF(IB)=3:1,1:2) ;Inst(1) or Prof(2)
"RTN","IBCEF4",51,0)
 ; Execute unmodifiable, general edits
"RTN","IBCEF4",52,0)
 S X1=$$EDIACTV(IB(.03))
"RTN","IBCEF4",53,0)
 I 'X1 S IBWHY=2
"RTN","IBCEF4",54,0)
 I 'IBWHY S X1=$$RATEOK(IBIFN) S:'X1 IBWHY=3
"RTN","IBCEF4",55,0)
 I 'IBWHY S X1=$$INSOK(+IB(.07)) S:'X1 IBWHY=4
"RTN","IBCEF4",56,0)
 I 'IBWHY,$$ISRX^IBCEF1(IBIFN) D  ;S:'X1 IBWHY=6
"RTN","IBCEF4",57,0)
 . ; Check for Rxs and NDC # format valid (5-4-2)
"RTN","IBCEF4",58,0)
 . ;IF THIS IS A UB92 DO NOT SEND ELECTRONIC
"RTN","IBCEF4",59,0)
 . I $$FT^IBCEF(IBIFN)=3 S IBWHY=1
"RTN","IBCEF4",60,0)
 . ;
"RTN","IBCEF4",61,0)
 . Q  ;;CHECK REMOVAL SO NON NDC FORMAT NUMBERS WILL GO
"RTN","IBCEF4",62,0)
 . N Z,Z0,Z00
"RTN","IBCEF4",63,0)
 . S Z="" F  S Z=$O(^IBA(362.4,"AIFN"_IBIFN,Z)) Q:Z=""!'X1  D  Q:'X1
"RTN","IBCEF4",64,0)
 .. S Z0=0 F  S Z0=$O(^IBA(362.4,"AIFN"_IBIFN,Z,Z0)) Q:'Z0  D  Q:'X1
"RTN","IBCEF4",65,0)
 ... S Z00=$G(^IBA(362.4,Z0,0))
"RTN","IBCEF4",66,0)
 ... Q:$S($P(Z00,U,8)="":1,1:$L($P(Z00,U,8))=11)
"RTN","IBCEF4",67,0)
 ... I $P(Z00,U,9)'=4 S X1=0
"RTN","IBCEF4",68,0)
 ; Only continue if general edits are passed
"RTN","IBCEF4",69,0)
 I $$COB^IBCEF(IB)="S" D
"RTN","IBCEF4",70,0)
 . S COBINS=$P($G(^DGCR(399,IB,"M")),U,IBCOB+1)
"RTN","IBCEF4",71,0)
 . I 'COBINS Q
"RTN","IBCEF4",72,0)
 . I IBMCR S IBWHY=1,$P(^DGCR(399,IBIFN,"TX"),U,8)=1
"RTN","IBCEF4",73,0)
 I IBWHY S IBOK=0 G TXMTQ
"RTN","IBCEF4",74,0)
 S IBOK=$$EDIT(IBIFN,.IB,.IBWHY)
"RTN","IBCEF4",75,0)
 G:'IBOK TXMTQ
"RTN","IBCEF4",76,0)
 ;
"RTN","IBCEF4",77,0)
TXMTQ ;
"RTN","IBCEF4",78,0)
 I IBOK S IBOK=$G(^DIC(36,+IB(.07),3))
"RTN","IBCEF4",79,0)
 Q IBOK
"RTN","IBCEF4",80,0)
 ;
"RTN","IBCEF4",81,0)
MRASEC(IBIFN) ; Returns 1 if current bill is secondary to MCR WNR
"RTN","IBCEF4",82,0)
 N IBSEQ,IB,Z
"RTN","IBCEF4",83,0)
 S IB=0
"RTN","IBCEF4",84,0)
 ; Chk if MCR WNR is prev insurer with MRA on file
"RTN","IBCEF4",85,0)
 S IBSEQ=$$COBN^IBCEF(IBIFN)-1
"RTN","IBCEF4",86,0)
 S Z=$$MCRONBIL^IBEFUNC(IBIFN,IBSEQ) I +Z=1,$P(Z,U,2)=1,$$CHK^IBCEMU1(IBIFN) S IB=1
"RTN","IBCEF4",87,0)
 Q IB
"RTN","IBCEF4",88,0)
 ;
"RTN","IBCEF4",89,0)
EDIT(IBIFN,IB,IBWHY) ; Find, execute edits applying to bill to see if transmittable
"RTN","IBCEF4",90,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEF4",91,0)
 ; IB = array containing necessary data for xref search from bill
"RTN","IBCEF4",92,0)
 ;      subscripted by field # in file 364.4
"RTN","IBCEF4",93,0)
 ;
"RTN","IBCEF4",94,0)
 ;  Matrix entries:
"RTN","IBCEF4",95,0)
 ;    IB(.03): 1=EDI specific, 2=MRA specific
"RTN","IBCEF4",96,0)
 ;    IB(.04): 1=Outpatient or 2=inpatient only (currently defaults to 3)
"RTN","IBCEF4",97,0)
 ;    IB(.05): 1=Only institutional or 2=only professional
"RTN","IBCEF4",98,0)
 ;          X: Anything valid
"RTN","IBCEF4",99,0)
 ;
"RTN","IBCEF4",100,0)
 ;                 MRA-EDI    IN-OUT     INST-PROF
"RTN","IBCEF4",101,0)
 ;  Level          -------    ------     ---------
"RTN","IBCEF4",102,0)
 ;    1               X          X           X
"RTN","IBCEF4",103,0)
 ;    2               X          X        IB(.05)
"RTN","IBCEF4",104,0)
 ;    3               X       IB(.04)        X
"RTN","IBCEF4",105,0)
 ;    4               X       IB(.04)     IB(.05)
"RTN","IBCEF4",106,0)
 ;    5            IB(.03)       X           X
"RTN","IBCEF4",107,0)
 ;    6            IB(.03)       X        IB(.05) 
"RTN","IBCEF4",108,0)
 ;    7            IB(.03)    IB(.04)        X
"RTN","IBCEF4",109,0)
 ;    8            IB(.03)    IB(.04)     IB(.05)
"RTN","IBCEF4",110,0)
 ;
"RTN","IBCEF4",111,0)
 N IB0,IB1,IB2,IB3,IB4,IBDA,IBFT,IBPASS,IBSEQ,IBT,IBNOCK
"RTN","IBCEF4",112,0)
 I '$G(IB(.03)) S IBPASS=0 G EDITQ
"RTN","IBCEF4",113,0)
 S IBFT=$$FT^IBCEF(IBIFN)
"RTN","IBCEF4",114,0)
 ;
"RTN","IBCEF4",115,0)
 S IBPASS=1
"RTN","IBCEF4",116,0)
 F IBSEQ=1:1:8 D  Q:'IBPASS  ; Loop thru levels in matrix
"RTN","IBCEF4",117,0)
 . F IB1=1:1:3 Q:'IBPASS  F IB2=1:1:3 Q:'IBPASS  F IB3=1:1:3 Q:'IBPASS  D
"RTN","IBCEF4",118,0)
 .. S IB4=0 F  S IB4=$O(^IBE(364.4,"AD",IB1,IB2,IB3,IB4)) Q:'IB4  I $O(^(IB4,0)) D  Q:'IBPASS
"RTN","IBCEF4",119,0)
 ... S IBDA=0
"RTN","IBCEF4",120,0)
 ... F   S IBDA=$O(^IBE(364.4,"AD",IB1,IB2,IB3,IB4,IBDA)) Q:'IBDA  S IB0=$G(^IBE(364.4,IBDA,0)) I IB0'="",'$D(IBNOCK(IBDA)) D  Q:'IBPASS
"RTN","IBCEF4",121,0)
 .... I $P(IB0,U,2)>DT S IBNOCK(IBDA)="" Q  ; Not activated yet
"RTN","IBCEF4",122,0)
 .... I $P(IB0,U,6),$P(IB0,U,6)'>DT  S IBNOCK(IBDA)="" Q  ; Inactive
"RTN","IBCEF4",123,0)
 .... I $P(IB0,U,11),IB3'=3,$S(IBFT=3:IB3'=1,IBFT=2:IB3'=2,1:0) S IBNOCK(IBDA)="" Q  ; Form type not included - not used for form type rule (0)
"RTN","IBCEF4",124,0)
 .... I IB4=1,'$D(^IBE(364.4,IBDA,3,"B",+IB(.07))) S IBNOCK(IBDA)="" Q  ; Ins not included for rule
"RTN","IBCEF4",125,0)
 .... I IB4=2,$D(^IBE(364.4,IBDA,2,"B",+IB(.07))) S IBNOCK(IBDA)="" Q  ; Ins is excluded from rule
"RTN","IBCEF4",126,0)
 .... S IBT=$G(^IBE(364.4,IBDA,1))
"RTN","IBCEF4",127,0)
 .... ; Code can assume IBIFN, IBDA and IB(.03 thru .05 and .07) exist
"RTN","IBCEF4",128,0)
 .... I IBT'="" X IBT I '$T S IBPASS=0,IBWHY(0)=IBDA,IBWHY=5
"RTN","IBCEF4",129,0)
EDITQ Q IBPASS
"RTN","IBCEF4",130,0)
 ;
"RTN","IBCEF4",131,0)
STATUS(IBIFN) ; Function returns whether or not bill currently has a status
"RTN","IBCEF4",132,0)
 ;  message or EOB message not yet fully reviewed -
"RTN","IBCEF4",133,0)
 ; (only for transmittable bills)
"RTN","IBCEF4",134,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEF4",135,0)
 ; Returns:
"RTN","IBCEF4",136,0)
 ; 0 = None found
"RTN","IBCEF4",137,0)
 ; If found, returns a pieced string as follows:
"RTN","IBCEF4",138,0)
 ;
"RTN","IBCEF4",139,0)
 ;   [1] ien of transmit bill entry (file 364) associated with an
"RTN","IBCEF4",140,0)
 ;       entry in file 361 with an unreviewed status message
"RTN","IBCEF4",141,0)
 ;   [2] ien of transmit bill entry (file 364) associated with an
"RTN","IBCEF4",142,0)
 ;       entry in file 361.1 with an unreviewed EOB
"RTN","IBCEF4",143,0)
 ;
"RTN","IBCEF4",144,0)
 N IB,Z,Z0
"RTN","IBCEF4",145,0)
 S IB=""
"RTN","IBCEF4",146,0)
 S Z="" F  S Z=$O(^IBM(361,"B",IBIFN,Z),-1) Q:'Z  I $P($G(^IBM(361,Z,0)),U,9)<2,$P(^(0),U,11) S $P(IB,U)=$P(^(0),U,11) Q
"RTN","IBCEF4",147,0)
 ;
"RTN","IBCEF4",148,0)
 S Z="" F  S Z=$O(^IBM(361.1,"B",IBIFN,Z),-1) Q:'Z  I $P($G(^IBM(361.1,Z,0)),U,16)<2,$P(^(0),U,19) S $P(IB,U,2)=$P(^(0),U,19) Q
"RTN","IBCEF4",149,0)
 ;
"RTN","IBCEF4",150,0)
 Q IB
"RTN","IBCEF4",151,0)
 ;
"RTN","IBCEF4",152,0)
TEST(IBIFN) ; Returns 1 if bill IBIFN is a transmission test bill, 0 if not
"RTN","IBCEF4",153,0)
 Q +$S($G(^TMP("IBEDI_TEST_BATCH",$J)):1,1:+$P($G(^IBA(364,+$$LAST364(IBIFN),0)),U,7))
"RTN","IBCEF4",154,0)
 ;
"RTN","IBEFUNC")
0^3^B47438335^B45602678
"RTN","IBEFUNC",1,0)
IBEFUNC ;ALB/RLW - EXTRINSIC FUNCTIONS ;12-JUN-92
"RTN","IBEFUNC",2,0)
 ;;2.0;INTEGRATED BILLING;**55,91,106,139,51,153,232,155,249,327**;21-MAR-94
"RTN","IBEFUNC",3,0)
 ;
"RTN","IBEFUNC",4,0)
ETXT(X) ; -- output error text from 350.8
"RTN","IBEFUNC",5,0)
 ; -- input error code
"RTN","IBEFUNC",6,0)
 N Y S Y=X
"RTN","IBEFUNC",7,0)
 I X="" G ETXTQ
"RTN","IBEFUNC",8,0)
 S Y=$P($G(^IBE(350.8,+$O(^IBE(350.8,"AC",X,0)),0)),U,2)
"RTN","IBEFUNC",9,0)
ETXTQ Q Y
"RTN","IBEFUNC",10,0)
 ;
"RTN","IBEFUNC",11,0)
IGN(X,Y) ; ignore means test? for appt type on dates
"RTN","IBEFUNC",12,0)
 ; -- input x = mas appt type
"RTN","IBEFUNC",13,0)
 ;          y = appt date
"RTN","IBEFUNC",14,0)
 ;    output  = true if this appt type should not be billed for
"RTN","IBEFUNC",15,0)
 ;              Means Test billing (352.1,.04) for given date
"RTN","IBEFUNC",16,0)
 ;
"RTN","IBEFUNC",17,0)
 I '$G(X)!('$G(Y)) Q 1
"RTN","IBEFUNC",18,0)
 Q +$P($G(^IBE(352.1,+$O(^(+$O(^IBE(352.1,"AIVDT",+X,-(Y+.1))),0)),0)),U,4)
"RTN","IBEFUNC",19,0)
 ;
"RTN","IBEFUNC",20,0)
DSP(X,Y) ; display on input screen?
"RTN","IBEFUNC",21,0)
 ; --    input X = mas appt type (P409.1)
"RTN","IBEFUNC",22,0)
 ;             Y = date
"RTN","IBEFUNC",23,0)
 ;       output  = true if appt type X (352.1,.02) should be displayed as
"RTN","IBEFUNC",24,0)
 ;          a potential billable visit (352.1,.06) on given date Y (352.1,.03)
"RTN","IBEFUNC",25,0)
 ;
"RTN","IBEFUNC",26,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",27,0)
 Q +$P($G(^IBE(352.1,+$O(^(+$O(^IBE(352.1,"AIVDT",+X,-(Y+.1))),0)),0)),U,6)
"RTN","IBEFUNC",28,0)
 ;
"RTN","IBEFUNC",29,0)
RPT(X,Y) ; print on report?
"RTN","IBEFUNC",30,0)
 ; -- input X = mas appt type (P409.1)
"RTN","IBEFUNC",31,0)
 ;          Y = date
"RTN","IBEFUNC",32,0)
 ;    output  = true if appt type X (352.1,.02) should be printed on 'Vets w/ Ins and Opt
"RTN","IBEFUNC",33,0)
 ;               Visits' report (352.1,.05) on given date Y (352.1,.06)
"RTN","IBEFUNC",34,0)
 ;
"RTN","IBEFUNC",35,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",36,0)
 Q +$P($G(^IBE(352.1,+$O(^(+$O(^IBE(352.1,"AIVDT",+X,-(Y+.1))),0)),0)),U,5)
"RTN","IBEFUNC",37,0)
 ;
"RTN","IBEFUNC",38,0)
NBDIS(X,Y) ; Is disposition non-billable?
"RTN","IBEFUNC",39,0)
 ; -- input X = disposition (P37)
"RTN","IBEFUNC",40,0)
 ;          Y = date of appt
"RTN","IBEFUNC",41,0)
 ;    output  = true (1) if disposition should be ignored for
"RTN","IBEFUNC",42,0)
 ;              Means test billing (352.2,.03) for given date
"RTN","IBEFUNC",43,0)
 ;
"RTN","IBEFUNC",44,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",45,0)
 Q +$P($G(^IBE(352.2,+$O(^(+$O(^IBE(352.2,"AIVDT",+X,-(Y+.1))),0)),0)),U,3)
"RTN","IBEFUNC",46,0)
 ;
"RTN","IBEFUNC",47,0)
NBCSC(X,Y) ; Is clinic stop code non-billable?
"RTN","IBEFUNC",48,0)
 ; -- input X = clinic stop code (P40.7)
"RTN","IBEFUNC",49,0)
 ;          Y = date of appt
"RTN","IBEFUNC",50,0)
 ;    output  = true (1) if clinic stop code should be ignored for
"RTN","IBEFUNC",51,0)
 ;              Means test billing (352.3,.03) for given date
"RTN","IBEFUNC",52,0)
 ;
"RTN","IBEFUNC",53,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",54,0)
 Q +$P($G(^IBE(352.3,+$O(^(+$O(^IBE(352.3,"AIVDT",+X,-(Y+.1))),0)),0)),U,3)
"RTN","IBEFUNC",55,0)
 ;
"RTN","IBEFUNC",56,0)
NBCL(X,Y) ; Is clinic non-billable?
"RTN","IBEFUNC",57,0)
 ; -- input X = clinic (P44)
"RTN","IBEFUNC",58,0)
 ;          Y = date of appt
"RTN","IBEFUNC",59,0)
 ;    output  = true (1) if clinic should be ignored for
"RTN","IBEFUNC",60,0)
 ;              Means test billing (352.4,.03) for given date
"RTN","IBEFUNC",61,0)
 ;
"RTN","IBEFUNC",62,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",63,0)
 Q +$P($G(^IBE(352.4,+$O(^(+$O(^IBE(352.4,"AIVDT",+X,-(Y+.1))),0)),0)),U,3)
"RTN","IBEFUNC",64,0)
 ;
"RTN","IBEFUNC",65,0)
NBST(X,Y) ; Is clinic stop code non-billable for Third Party?
"RTN","IBEFUNC",66,0)
 ; -- input X = clinic stop code (P40.7), Y = appt date
"RTN","IBEFUNC",67,0)
 ;    output  = true (1) if stop non-billable for Third Party (352.3,.05) for given dt
"RTN","IBEFUNC",68,0)
 ;
"RTN","IBEFUNC",69,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",70,0)
 Q +$P($G(^IBE(352.3,+$O(^(+$O(^IBE(352.3,"AIVDTT2",+X,-(Y+.1))),0)),0)),U,5)
"RTN","IBEFUNC",71,0)
 ;
"RTN","IBEFUNC",72,0)
NBCT(X,Y) ; Is clinic non-billable for Third Party?
"RTN","IBEFUNC",73,0)
 ; -- input X = clinic (P44), Y = appt dt
"RTN","IBEFUNC",74,0)
 ;    output  = true (1) if clinic non-billable for Third Party (352.4,.05) for given date
"RTN","IBEFUNC",75,0)
 ;
"RTN","IBEFUNC",76,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",77,0)
 Q +$P($G(^IBE(352.4,+$O(^(+$O(^IBE(352.4,"AIVDTT2",+X,-(Y+.1))),0)),0)),U,5)
"RTN","IBEFUNC",78,0)
 ;
"RTN","IBEFUNC",79,0)
NABST(X,Y) ; Returns true (1) if stop code flagged to be ignored by Third Party auto biller (use DT)
"RTN","IBEFUNC",80,0)
 S:'$G(Y) Y=DT I '$G(X) Q 0
"RTN","IBEFUNC",81,0)
 Q +$P($G(^IBE(352.3,+$O(^(+$O(^IBE(352.3,"AIVDTT2",+X,-(Y+.1))),0)),0)),U,6)
"RTN","IBEFUNC",82,0)
 ;
"RTN","IBEFUNC",83,0)
NABCT(X,Y) ; Returns true (1) if clinic is flagged to be ignored by Third Party auto biller (use DT)
"RTN","IBEFUNC",84,0)
 S:'$G(Y) Y=DT I '$G(X) Q 0
"RTN","IBEFUNC",85,0)
 Q +$P($G(^IBE(352.4,+$O(^(+$O(^IBE(352.4,"AIVDTT2",+X,-(Y+.1))),0)),0)),U,6)
"RTN","IBEFUNC",86,0)
 ;
"RTN","IBEFUNC",87,0)
PT(DFN) ;returns (patient name^long pat id^short pat id) or null if not found
"RTN","IBEFUNC",88,0)
 N X,IBX S X="" I $D(DFN) S X=$G(^DPT(+DFN,0)) I X'="" S X=$P(X,U,1)_U_$P($G(^DPT(DFN,.36)),U,3,4) D
"RTN","IBEFUNC",89,0)
 . S IBX=$P(^DPT(+DFN,0),U,9)
"RTN","IBEFUNC",90,0)
 . I $P(X,U,2)="" S $P(X,U,2)=$E(IBX,1,3)_"-"_$E(IBX,4,5)_"-"_$E(IBX,6,10)
"RTN","IBEFUNC",91,0)
 . I $P(X,U,3)="" S $P(X,U,3)=$E(IBX,6,10)
"RTN","IBEFUNC",92,0)
 Q X
"RTN","IBEFUNC",93,0)
 ;
"RTN","IBEFUNC",94,0)
EXSET(X,D0,D1) ;returns external value of a set in file D0, field D1
"RTN","IBEFUNC",95,0)
 Q $$EXPAND^IBTRE($G(D0),$G(D1),$G(X))
"RTN","IBEFUNC",96,0)
 ;
"RTN","IBEFUNC",97,0)
BABCSC(DFN,IBDT) ; -- any billable Third Party visits in encounter file for patient
"RTN","IBEFUNC",98,0)
 ;  -- Input  dfn = patient,  ibdt = date
"RTN","IBEFUNC",99,0)
 ;     output     = 1 if any billable stop on date OR 0 if none
"RTN","IBEFUNC",100,0)
 ;
"RTN","IBEFUNC",101,0)
 N IBX,IBVAL,IBCBK,IBFILTER
"RTN","IBEFUNC",102,0)
 S IBX=0
"RTN","IBEFUNC",103,0)
 I '$G(DFN)!('$G(IBDT)) G BABQ
"RTN","IBEFUNC",104,0)
 ;
"RTN","IBEFUNC",105,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=IBDT\1,IBVAL("EDT")=IBDT\1+.24
"RTN","IBEFUNC",106,0)
 ;Ignore if not chkd out, no stop, non-billable stop, non-billable clinic
"RTN","IBEFUNC",107,0)
 S IBFILTER=""
"RTN","IBEFUNC",108,0)
 S IBCBK="I $P(Y0,U,12)=2,$P(Y0,U,3),'$$NBST^IBEFUNC($P(Y0,U,3),+Y0),'$$NBCT^IBEFUNC(+$P(Y0,U,4),+Y0) S (IBX,SDSTOP)=1"
"RTN","IBEFUNC",109,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,"",IBCBK,1) K ^TMP("DIERR",$J)
"RTN","IBEFUNC",110,0)
 ;
"RTN","IBEFUNC",111,0)
BABQ Q IBX
"RTN","IBEFUNC",112,0)
 ;
"RTN","IBEFUNC",113,0)
APPTCT(IBOE0) ; Determine if appt encounter/appt has valid status for billing
"RTN","IBEFUNC",114,0)
 ; Returns 1 if valid, 0 if not
"RTN","IBEFUNC",115,0)
 ; IBOE0 = the encounter's 0-node (input)
"RTN","IBEFUNC",116,0)
 N STAT
"RTN","IBEFUNC",117,0)
 S STAT=$P(IBOE0,U,12) ;Encounter stat
"RTN","IBEFUNC",118,0)
 I STAT=14 S STAT=2
"RTN","IBEFUNC",119,0)
 ; Assume 1,2 (and 14 sometimes) are valid, 8 = INPATIENT
"RTN","IBEFUNC",120,0)
 Q STAT<3
"RTN","IBEFUNC",121,0)
 ;
"RTN","IBEFUNC",122,0)
NCTCL(IBOE0) ; Determine if a clinic for an outpt encounter is non-count
"RTN","IBEFUNC",123,0)
 ; IBOE0 = the 0-node of the encounter
"RTN","IBEFUNC",124,0)
 Q ($P($G(^SC(+$P(IBOE0,U,4),0)),U,17)="Y")
"RTN","IBEFUNC",125,0)
 ;
"RTN","IBEFUNC",126,0)
DISCT(IBOE,IBOE0) ; Determine if disposition has valid status for billing
"RTN","IBEFUNC",127,0)
 ; Returns 1 if valid, 0 if not valid
"RTN","IBEFUNC",128,0)
 ; IBOE = encounter ien
"RTN","IBEFUNC",129,0)
 ; IBOE0 = 0-node of encounter (optional)
"RTN","IBEFUNC",130,0)
 N IBX
"RTN","IBEFUNC",131,0)
 S IBX=$$DISND^IBSDU(IBOE,$G(IBOE0),2)
"RTN","IBEFUNC",132,0)
 Q (IBX<2)
"RTN","IBEFUNC",133,0)
 ;
"RTN","IBEFUNC",134,0)
NEEDMRA(IBIFN) ; Returns MRA NEEDED STATUS for bill
"RTN","IBEFUNC",135,0)
 Q $P($G(^DGCR(399,+IBIFN,"TX")),U,5)
"RTN","IBEFUNC",136,0)
 ;
"RTN","IBEFUNC",137,0)
REQMRA(IBIFN) ; Determine from site parameter, ins assigned to bill and txmn
"RTN","IBEFUNC",138,0)
 ;   rules if request for MRA is needed (MCRWNR must be current ins co)
"RTN","IBEFUNC",139,0)
 ; "R" = not needed due to next carrier not requiring it (txmn rules),
"RTN","IBEFUNC",140,0)
 ; "R1" = not needed due to MRA turned off at site
"RTN","IBEFUNC",141,0)
 ;  0 = not needed,  1 = needed
"RTN","IBEFUNC",142,0)
 N IB0,COBINS,COBSEQ,IBOK,Z1,Z0,IBDA,IB00,IB0
"RTN","IBEFUNC",143,0)
 ;
"RTN","IBEFUNC",144,0)
 I $$COB^IBCEF(IBIFN)="A" S IBOK=0 G REQMRAQ    ; payer sequence = patient not allowed for MRA
"RTN","IBEFUNC",145,0)
 S COBSEQ=$$COBN^IBCEF(IBIFN)
"RTN","IBEFUNC",146,0)
 S COBINS=$P($G(^DGCR(399,IBIFN,"M")),U,COBSEQ)
"RTN","IBEFUNC",147,0)
 ;Curr ins must = MEDICARE WNR
"RTN","IBEFUNC",148,0)
 S IBOK=+$$MCRWNR(COBINS)
"RTN","IBEFUNC",149,0)
 I 'IBOK G REQMRAQ
"RTN","IBEFUNC",150,0)
 ;
"RTN","IBEFUNC",151,0)
 I '$$EDIACTV^IBCEF4(2) S IBOK="R1" G REQMRAQ ; Site param=NO
"RTN","IBEFUNC",152,0)
 ;
"RTN","IBEFUNC",153,0)
 ; Check next ins for MRA needed
"RTN","IBEFUNC",154,0)
 I COBSEQ'<3 S IBOK=0 G REQMRAQ
"RTN","IBEFUNC",155,0)
 ;
"RTN","IBEFUNC",156,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBEFUNC",157,0)
 S COBINS=+$P($G(^DGCR(399,IBIFN,"M")),U,COBSEQ+1)
"RTN","IBEFUNC",158,0)
 I 'COBINS S IBOK=0 G REQMRAQ ;No next ins
"RTN","IBEFUNC",159,0)
 I $$COB^IBCEF(IBIFN)="S" D  I IBOK="R2" G REQMRAQ
"RTN","IBEFUNC",160,0)
 . S COBINS=$P($G(^DGCR(399,IBIFN,"M")),U,COBSEQ)
"RTN","IBEFUNC",161,0)
 . I +$$MCRWNR(COBINS)=1 S IBOK="R2"
"RTN","IBEFUNC",162,0)
 ;
"RTN","IBEFUNC",163,0)
 ; Check only rules with rule type = 2 (MRA REQUEST RESTRICTIONS)
"RTN","IBEFUNC",164,0)
 S IBDA=0 F  S IBDA=$O(^IBE(364.4,"AC",2,IBDA)) Q:'IBDA  S IB00=$G(^IBE(364.4,IBDA,0)) D  Q:'IBOK
"RTN","IBEFUNC",165,0)
 . I $P(IB00,U,2)>DT Q  ; Inactive
"RTN","IBEFUNC",166,0)
 . I $P(IB00,U,6),$P(IB00,U,6)'>DT Q  ; Expired
"RTN","IBEFUNC",167,0)
 . S Z0=$$INPAT^IBCEF(IBIFN,1),Z0=$S(Z0=1:2,1:1)
"RTN","IBEFUNC",168,0)
 . S Z1=$$FT^IBCEF(IBIFN),Z1=$S(Z1=3:1,1:2)
"RTN","IBEFUNC",169,0)
 . I $S($P(IB00,U,4)=3:1,1:$P(IB00,U,4)=Z0),$S($P(IB00,U,5)=3:1,1:$P(IB00,U,5)=Z1) S Z0=$D(^IBE(364.4,IBDA,3,"B",COBINS)) I Z0>0 S IBOK="R"
"RTN","IBEFUNC",170,0)
 ;
"RTN","IBEFUNC",171,0)
REQMRAQ Q IBOK
"RTN","IBEFUNC",172,0)
 ;
"RTN","IBEFUNC",173,0)
MCRWNR(IBINS) ;Returns whether the ins co IBINS is MEDICARE WNR (Will
"RTN","IBEFUNC",174,0)
 ;           NOT Reimburse) 0=NO, 1=YES
"RTN","IBEFUNC",175,0)
 N Z,Z0
"RTN","IBEFUNC",176,0)
 S Z=0,Z0=$G(^DIC(36,+IBINS,0))
"RTN","IBEFUNC",177,0)
 I $P(Z0,U,2)="N",$P($G(^IBE(355.2,+$P(Z0,U,13),0)),U)="MEDICARE" S Z=1
"RTN","IBEFUNC",178,0)
 Q Z
"RTN","IBEFUNC",179,0)
 ;
"RTN","IBEFUNC",180,0)
WNRBILL(IBIFN,IBCOB) ; Returns whether the ins for COB seq IBCOB
"RTN","IBEFUNC",181,0)
 ;  is MEDICARE will not reimburse
"RTN","IBEFUNC",182,0)
 ;
"RTN","IBEFUNC",183,0)
 I $G(IBCOB)="" S IBCOB=$$COBN^IBCEF(IBIFN)
"RTN","IBEFUNC",184,0)
 S IBCOB=$TR(IBCOB,"PST","123")
"RTN","IBEFUNC",185,0)
 Q $$MCRWNR(+$G(^DGCR(399,IBIFN,"I"_IBCOB)))
"RTN","IBEFUNC",186,0)
 ;
"RTN","IBEFUNC",187,0)
MCR(IBINS) ;Returns whether the ins co IBINS is MCR Will Reimburse
"RTN","IBEFUNC",188,0)
 ;          0=NO , 1=YES
"RTN","IBEFUNC",189,0)
 N Z,Z0
"RTN","IBEFUNC",190,0)
 S Z=0,Z0=$G(^DIC(36,+IBINS,0))
"RTN","IBEFUNC",191,0)
 I $P(Z0,U,2)'="N",$P($G(^IBE(355.2,+$P(Z0,U,13),0)),U)="MEDICARE" S Z=1
"RTN","IBEFUNC",192,0)
 Q Z
"RTN","IBEFUNC",193,0)
 ;
"RTN","IBEFUNC",194,0)
MRATYPE(IBIEN,IBVAR) ; Returns: A = MEDICARE A   B = MEDICARE B
"RTN","IBEFUNC",195,0)
 ;  C = MEDICARE OTHER    null = NOT MEDICARE
"RTN","IBEFUNC",196,0)
 ; for the plan associated with bill ien IBIEN OR grp plan IBIEN
"RTN","IBEFUNC",197,0)
 ; If IBVAR = "" or 'C', the data is from bill ien in IBIEN
"RTN","IBEFUNC",198,0)
 ;          = 'P', the data is from grp policy ien in IBIEN
"RTN","IBEFUNC",199,0)
 ; 
"RTN","IBEFUNC",200,0)
 N IBPLAN
"RTN","IBEFUNC",201,0)
 S IBPLAN=$S($G(IBVAR)'="P":+$$POLICY^IBCEF(IBIEN,18),1:IBIEN)
"RTN","IBEFUNC",202,0)
 Q $P($G(^IBA(355.3,+IBPLAN,0)),U,14)
"RTN","IBEFUNC",203,0)
 ;
"RTN","IBEFUNC",204,0)
MCRONBIL(IBIFN,IBFLG) ; Returns 0 if MCR WNR not on bill IBIFN
"RTN","IBEFUNC",205,0)
 ;  1 if on bill, is on or before current ins
"RTN","IBEFUNC",206,0)
 ;  2 if on bill, but after current ins
"RTN","IBEFUNC",207,0)
 ; IBFLG = a COB number if second "^" piece of return data should be
"RTN","IBEFUNC",208,0)
 ;         1 if MCRWNR is the insurance at that COB sequence (optional)
"RTN","IBEFUNC",209,0)
 N Z,IBON,Q
"RTN","IBEFUNC",210,0)
 S IBON=0,Q=$$COBN^IBCEF(IBIFN)
"RTN","IBEFUNC",211,0)
 F Z=1:1:3 I $$WNRBILL(IBIFN,Z) S IBON=$S(Q'<Z:1,1:2)_$S('$G(IBFLG):"",Z'=IBFLG:"",1:"^1") Q
"RTN","IBEFUNC",212,0)
 Q IBON
"RTN","IBEFUNC",213,0)
 ;
"RTN","IBEFUNC",214,0)
PROFEE(IBIFN) ; Returns whether any rev codes for prof fees
"RTN","IBEFUNC",215,0)
 ;  included on bill IBIFN  0 = not included,  1 = included,
"RTN","IBEFUNC",216,0)
 ;  2 = both inst and prof are included
"RTN","IBEFUNC",217,0)
 ;
"RTN","IBEFUNC",218,0)
 N IBPRO,Z
"RTN","IBEFUNC",219,0)
 S IBPRO=0,Z=$O(^DGCR(399,IBIFN,"RC","B",959)) ; Rev cds 960-989 are prof
"RTN","IBEFUNC",220,0)
 I Z,Z<990 D
"RTN","IBEFUNC",221,0)
 . S IBPRO=1
"RTN","IBEFUNC",222,0)
 . S Z=$O(^DGCR(399,IBIFN,"RC","B",0))
"RTN","IBEFUNC",223,0)
 . I $S(Z:Z<960,1:0)!($O(^DGCR(399,IBIFN,"RC","B",1000),-1)'<990) S IBPRO=2
"RTN","IBEFUNC",224,0)
 Q IBPRO
"RTN","IBEFUNC",225,0)
 ;
"RTN","IBEFUNC",226,0)
GETMOD(IBIFN,IBCPT,EXT) ; Returns 'list' of modifiers for file 399
"RTN","IBEFUNC",227,0)
 ;   procedure for bill IBIFN and proc ien IBCPT
"RTN","IBEFUNC",228,0)
 ;   in modifier seq order, separated by ','
"RTN","IBEFUNC",229,0)
 ;  If EXT = 1, return the actual modifier, not the ptr
"RTN","IBEFUNC",230,0)
 N IBMOD,IBZ,IBZ0,IB0,Z
"RTN","IBEFUNC",231,0)
 S IBZ=0,IBMOD=""
"RTN","IBEFUNC",232,0)
 F  S IBZ=$O(^DGCR(399,IBIFN,"CP",IBCPT,"MOD","B",IBZ)) Q:'IBZ  S IBZ0=0 F  S IBZ0=$O(^DGCR(399,IBIFN,"CP",IBCPT,"MOD","B",IBZ,IBZ0)) Q:'IBZ0  I $D(^DGCR(399,IBIFN,"CP",IBCPT,"MOD",IBZ0,0)) S IB0=$G(^(0)) D
"RTN","IBEFUNC",233,0)
 . I '$G(EXT) S Z=$P(IB0,U,2)
"RTN","IBEFUNC",234,0)
 . I $G(EXT) S Z=$$MOD^ICPTMOD($P(IB0,U,2),"I"),Z=$S($P(Z,U)=-1:"",1:$P(Z,U,2))
"RTN","IBEFUNC",235,0)
 . Q:Z=""
"RTN","IBEFUNC",236,0)
 . S IBMOD=IBMOD_$S(IBMOD="":"",1:",")_Z
"RTN","IBEFUNC",237,0)
 Q IBMOD
"RTN","IBEFUNC",238,0)
 ;
"RTN","IBEFUNC",239,0)
MODLST(MODS,DESC,IBMOD) ; Returns string of actual mods
"RTN","IBEFUNC",240,0)
 ; MOVED
"RTN","IBEFUNC",241,0)
 Q $$MODLST^IBEFUNC2(MODS,$G(DESC),.IBMOD)
"RTN","IBEFUNC",242,0)
 ;
"RTN","IBEFUNC",243,0)
GETSPEC(FILE,FIELD) ; Get fld specifier for FIELD # in FILE
"RTN","IBEFUNC",244,0)
 ; Use to set DIC("P") for FILE^DICN
"RTN","IBEFUNC",245,0)
 N IBZ
"RTN","IBEFUNC",246,0)
 D FIELD^DID(FILE,FIELD,"","SPECIFIER","IBZ")
"RTN","IBEFUNC",247,0)
 Q $G(IBZ("SPECIFIER"))
"RTN","IBEFUNC",248,0)
 ;
"VER")
8.0^22.0
"^DD",399,399,101,0)
PRIMARY INSURANCE CARRIER^R*P36'X^DIC(36,^M;1^D DD^IBCNS S DIC("S")="I $D(IBDD(+Y)),'$D(^DGCR(399,DA,""AIC"",+Y))" D ^DIC K DIC,IBDD S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,101,1,0)
^.1
"^DD",399,399,101,1,1,0)
^^TRIGGER^399^122
"^DD",399,399,101,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$$PRVNUM^IBCU(DA,X,1) X ^DD(399,101,1,1,1.4)
"^DD",399,399,101,1,1,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,2)=DIV,DIH=399,DIG=122 D ^DICR
"^DD",399,399,101,1,1,2)
Q
"^DD",399,399,101,1,1,3)
Do Not Delete
"^DD",399,399,101,1,1,"%D",0)
^.101^3^3^3020819^^
"^DD",399,399,101,1,1,"%D",1,0)
This trigger sets the Bill Primary Provider # based on the Form Type,  
"^DD",399,399,101,1,1,"%D",2,0)
using the Primary Insurance Companies Hospital or Professional Provider 
"^DD",399,399,101,1,1,"%D",3,0)
Number.  Special case for Medicare Part A.
"^DD",399,399,101,1,1,"CREATE VALUE")
S X=$$PRVNUM^IBCU(DA,X,1)
"^DD",399,399,101,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399,101,1,1,"DT")
3020819
"^DD",399,399,101,1,1,"FIELD")
PRIMARY PROVIDER #
"^DD",399,399,101,1,2,0)
^^TRIGGER^399^24
"^DD",399,399,101,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$COBN^IBCEF(DA)=1 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y X ^DD(399,101,1,2,1.1) X ^DD(399,101,1,2,1.4)
"^DD",399,399,101,1,2,1.1)
S X=DIV S X=$S($$REQMRA^IBEFUNC(DA):"1N",1:"")
"^DD",399,399,101,1,2,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"TX")):^("TX"),1:""),DIV=X S $P(^("TX"),U,5)=DIV,DIH=399,DIG=24 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,101,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$COBN^IBCEF(DA)=1 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(399,101,1,2,2.4)
"^DD",399,399,101,1,2,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"TX")):^("TX"),1:""),DIV=X S $P(^("TX"),U,5)=DIV,DIH=399,DIG=24 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,101,1,2,3)
DO NOT DELETE
"^DD",399,399,101,1,2,"%D",0)
^^2^2^2990628^
"^DD",399,399,101,1,2,"%D",1,0)
This triggers the CLAIM MRA STATUS to 'MRA NEEDED' (1N) if the primary
"^DD",399,399,101,1,2,"%D",2,0)
insurance is the current insurance and the current insurance = MEDICARE WNR.
"^DD",399,399,101,1,2,"CREATE CONDITION")
I $$COBN^IBCEF(DA)=1
"^DD",399,399,101,1,2,"CREATE VALUE")
S X=$S($$REQMRA^IBEFUNC(DA):"1N",1:"")
"^DD",399,399,101,1,2,"DELETE CONDITION")
I $$COBN^IBCEF(DA)=1
"^DD",399,399,101,1,2,"DELETE VALUE")
@
"^DD",399,399,101,1,2,"DT")
2990628
"^DD",399,399,101,1,2,"FIELD")
CLAIM MRA STATUS
"^DD",399,399,101,1,3,0)
^^TRIGGER^399^27
"^DD",399,399,101,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$S($$MCRWNR^IBEFUNC(X):$$COBN^IBCEF(DA)=1,1:0) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(399,101,1,3,1.4)
"^DD",399,399,101,1,3,1.4)
S DIH=$G(^DGCR(399,DIV(0),"TX")),DIV=X S $P(^("TX"),U,8)=DIV,DIH=399,DIG=27 D ^DICR
"^DD",399,399,101,1,3,2)
Q
"^DD",399,399,101,1,3,3)
Do not delete
"^DD",399,399,101,1,3,"%D",0)
^^3^3^3041119^
"^DD",399,399,101,1,3,"%D",1,0)
When the current insurance is the primary insurance and the primary
"^DD",399,399,101,1,3,"%D",2,0)
insurance is MEDICARE WNR, delete the FORCE CLAIM TO PRINT field as it
"^DD",399,399,101,1,3,"%D",3,0)
is not valid to print an MRA request.
"^DD",399,399,101,1,3,"CREATE CONDITION")
S X=$S($$MCRWNR^IBEFUNC(X):$$COBN^IBCEF(DA)=1,1:0)
"^DD",399,399,101,1,3,"CREATE VALUE")
@
"^DD",399,399,101,1,3,"DELETE VALUE")
NO EFFECT
"^DD",399,399,101,1,3,"DT")
3041119
"^DD",399,399,101,1,3,"FIELD")
FORCE CLAIM TO PRINT
"^DD",399,399,101,3)
Enter name of insurance carrier to which this bill is to be sent.
"^DD",399,399,101,5,1,0)
399^112^1
"^DD",399,399,101,12)
Only valid insurance companies for this date of care.
"^DD",399,399,101,12.1)
S DIC("S")="I $D(IBDD(+Y)),'$D(^DGCR(399,DA,""AIC"",+Y))"
"^DD",399,399,101,21,0)
^^2^2^2990503^^^^
"^DD",399,399,101,21,1,0)
This is the name of the insurance carrier to which this bill is to be sent.
"^DD",399,399,101,21,2,0)
This is from the entries in this patient's file of insurance companies. 
"^DD",399,399,101,23,0)
^^3^3^2990503^^^
"^DD",399,399,101,23,1,0)
Only valid/active insurance companies for this patient can be choosen,
"^DD",399,399,101,23,2,0)
as defined by DD^IBCNS.  Company must not already be defined as a carrier 
"^DD",399,399,101,23,3,0)
(399,102-103) for this bill.
"^DD",399,399,101,"DT")
3051215
"BLD",6541,6)
^312
**END**
**END**
