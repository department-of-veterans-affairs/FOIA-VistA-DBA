Released MD*1*5 SEQ #4
Extracted from mail message
**KIDS**:MD*1.0*5^

**INSTALL NAME**
MD*1.0*5
"BLD",17113,0)
MD*1.0*5^CLINICAL PROCEDURES^0^3060508^y
"BLD",17113,1,0)
^^2^2^3050106^^^^
"BLD",17113,1,1,0)
Please refer to the National Patch Module for the detail of this patch 
"BLD",17113,1,2,0)
build.
"BLD",17113,4,0)
^9.64PA^702^2
"BLD",17113,4,702,0)
702
"BLD",17113,4,702,2,0)
^9.641^702^1
"BLD",17113,4,702,2,702,0)
CP TRANSACTION  (File-top level)
"BLD",17113,4,702,2,702,1,0)
^9.6411^.3^1
"BLD",17113,4,702,2,702,1,.3,0)
CONVERSION ID REFERENCE
"BLD",17113,4,702,222)
y^y^p^^^^n^^n
"BLD",17113,4,702,224)

"BLD",17113,4,703.9,0)
703.9
"BLD",17113,4,703.9,222)
y^y^f^^^^n
"BLD",17113,4,"APDD",702,702)

"BLD",17113,4,"APDD",702,702,.3)

"BLD",17113,4,"B",702,702)

"BLD",17113,4,"B",703.9,703.9)

"BLD",17113,6)
6^
"BLD",17113,6.3)
1
"BLD",17113,"ABPKG")
n
"BLD",17113,"INID")
^y
"BLD",17113,"INIT")
MDPOST5
"BLD",17113,"KRN",0)
^9.67PA^8989.52^19
"BLD",17113,"KRN",.4,0)
.4
"BLD",17113,"KRN",.4,"NM",0)
^9.68A^3^3
"BLD",17113,"KRN",.4,"NM",1,0)
MD CONVERSION ERRORS    FILE #703.9^703.9^0
"BLD",17113,"KRN",.4,"NM",2,0)
MD CONVERSION SUMMARY    FILE #703.9^703.9^0
"BLD",17113,"KRN",.4,"NM",3,0)
MD CONVERSION TOTALS    FILE #703.9^703.9^0
"BLD",17113,"KRN",.4,"NM","B","MD CONVERSION ERRORS    FILE #703.9",1)

"BLD",17113,"KRN",.4,"NM","B","MD CONVERSION SUMMARY    FILE #703.9",2)

"BLD",17113,"KRN",.4,"NM","B","MD CONVERSION TOTALS    FILE #703.9",3)

"BLD",17113,"KRN",.401,0)
.401
"BLD",17113,"KRN",.401,"NM",0)
^9.68A^3^3
"BLD",17113,"KRN",.401,"NM",1,0)
MD CONVERSION ERRORS    FILE #703.9^703.9^0
"BLD",17113,"KRN",.401,"NM",2,0)
MD CONVERSION SUMMARY    FILE #703.9^703.9^0
"BLD",17113,"KRN",.401,"NM",3,0)
MD CONVERSION TOTALS    FILE #703.9^703.9^0
"BLD",17113,"KRN",.401,"NM","B","MD CONVERSION ERRORS    FILE #703.9",1)

"BLD",17113,"KRN",.401,"NM","B","MD CONVERSION SUMMARY    FILE #703.9",2)

"BLD",17113,"KRN",.401,"NM","B","MD CONVERSION TOTALS    FILE #703.9",3)

"BLD",17113,"KRN",.402,0)
.402
"BLD",17113,"KRN",.403,0)
.403
"BLD",17113,"KRN",.403,"NM",0)
^9.68A^1^1
"BLD",17113,"KRN",.403,"NM",1,0)
MD MAIN    FILE #703.9^703.9^0
"BLD",17113,"KRN",.403,"NM","B","MD MAIN    FILE #703.9",1)

"BLD",17113,"KRN",.5,0)
.5
"BLD",17113,"KRN",.84,0)
.84
"BLD",17113,"KRN",3.6,0)
3.6
"BLD",17113,"KRN",3.8,0)
3.8
"BLD",17113,"KRN",9.2,0)
9.2
"BLD",17113,"KRN",9.8,0)
9.8
"BLD",17113,"KRN",9.8,"NM",0)
^9.68A^19^17
"BLD",17113,"KRN",9.8,"NM",3,0)
MDRPCOT^^0^B62244057
"BLD",17113,"KRN",9.8,"NM",4,0)
MDRPCOT1^^0^B27880896
"BLD",17113,"KRN",9.8,"NM",5,0)
MDCVT^^0^B81652612
"BLD",17113,"KRN",9.8,"NM",6,0)
MDCVT1^^0^B71614831
"BLD",17113,"KRN",9.8,"NM",7,0)
MDCVTU^^0^B2189080
"BLD",17113,"KRN",9.8,"NM",8,0)
MDOUTOR^^0^B33171008
"BLD",17113,"KRN",9.8,"NM",9,0)
MDPOST5^^0^B1064423
"BLD",17113,"KRN",9.8,"NM",10,0)
MDSTATU^^0^B39040181
"BLD",17113,"KRN",9.8,"NM",11,0)
MDPCE^^0^B4577099
"BLD",17113,"KRN",9.8,"NM",12,0)
MCARPS2^^0^B18375280
"BLD",17113,"KRN",9.8,"NM",13,0)
MCARPS3^^0^B17072262
"BLD",17113,"KRN",9.8,"NM",14,0)
MCORMN^^0^B27253923
"BLD",17113,"KRN",9.8,"NM",15,0)
MCORMN0^^0^B20182884
"BLD",17113,"KRN",9.8,"NM",16,0)
MCORMN01^^0^B4360683
"BLD",17113,"KRN",9.8,"NM",17,0)
MDPS3^^0^B8616457
"BLD",17113,"KRN",9.8,"NM",18,0)
MCARPS1^^0^B8444833
"BLD",17113,"KRN",9.8,"NM",19,0)
MDESPRT^^0^B8888916
"BLD",17113,"KRN",9.8,"NM","B","MCARPS1",18)

"BLD",17113,"KRN",9.8,"NM","B","MCARPS2",12)

"BLD",17113,"KRN",9.8,"NM","B","MCARPS3",13)

"BLD",17113,"KRN",9.8,"NM","B","MCORMN",14)

"BLD",17113,"KRN",9.8,"NM","B","MCORMN0",15)

"BLD",17113,"KRN",9.8,"NM","B","MCORMN01",16)

"BLD",17113,"KRN",9.8,"NM","B","MDCVT",5)

"BLD",17113,"KRN",9.8,"NM","B","MDCVT1",6)

"BLD",17113,"KRN",9.8,"NM","B","MDCVTU",7)

"BLD",17113,"KRN",9.8,"NM","B","MDESPRT",19)

"BLD",17113,"KRN",9.8,"NM","B","MDOUTOR",8)

"BLD",17113,"KRN",9.8,"NM","B","MDPCE",11)

"BLD",17113,"KRN",9.8,"NM","B","MDPOST5",9)

"BLD",17113,"KRN",9.8,"NM","B","MDPS3",17)

"BLD",17113,"KRN",9.8,"NM","B","MDRPCOT",3)

"BLD",17113,"KRN",9.8,"NM","B","MDRPCOT1",4)

"BLD",17113,"KRN",9.8,"NM","B","MDSTATU",10)

"BLD",17113,"KRN",19,0)
19
"BLD",17113,"KRN",19,"NM",0)
^9.68A^10^10
"BLD",17113,"KRN",19,"NM",1,0)
MDCVT BUILD CONVERSION LIST^^0
"BLD",17113,"KRN",19,"NM",2,0)
MDCVT CONVERSION LOCKOUT^^0
"BLD",17113,"KRN",19,"NM",3,0)
MDCVT DISK SPACE^^0
"BLD",17113,"KRN",19,"NM",4,0)
MDCVT ERROR LOG^^0
"BLD",17113,"KRN",19,"NM",5,0)
MDCVT LIST OF TIU TITLES^^0
"BLD",17113,"KRN",19,"NM",6,0)
MDCVT MANAGER^^0
"BLD",17113,"KRN",19,"NM",7,0)
MDCVT RUN^^0
"BLD",17113,"KRN",19,"NM",8,0)
MDCVT SETUP^^0
"BLD",17113,"KRN",19,"NM",9,0)
MDCVT SUMMARY^^0
"BLD",17113,"KRN",19,"NM",10,0)
MDCVT TOTALS^^0
"BLD",17113,"KRN",19,"NM","B","MDCVT BUILD CONVERSION LIST",1)

"BLD",17113,"KRN",19,"NM","B","MDCVT CONVERSION LOCKOUT",2)

"BLD",17113,"KRN",19,"NM","B","MDCVT DISK SPACE",3)

"BLD",17113,"KRN",19,"NM","B","MDCVT ERROR LOG",4)

"BLD",17113,"KRN",19,"NM","B","MDCVT LIST OF TIU TITLES",5)

"BLD",17113,"KRN",19,"NM","B","MDCVT MANAGER",6)

"BLD",17113,"KRN",19,"NM","B","MDCVT RUN",7)

"BLD",17113,"KRN",19,"NM","B","MDCVT SETUP",8)

"BLD",17113,"KRN",19,"NM","B","MDCVT SUMMARY",9)

"BLD",17113,"KRN",19,"NM","B","MDCVT TOTALS",10)

"BLD",17113,"KRN",19.1,0)
19.1
"BLD",17113,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",17113,"KRN",101,0)
101
"BLD",17113,"KRN",409.61,0)
409.61
"BLD",17113,"KRN",771,0)
771
"BLD",17113,"KRN",870,0)
870
"BLD",17113,"KRN",8989.51,0)
8989.51
"BLD",17113,"KRN",8989.51,"NM",0)
^9.68A^1^1
"BLD",17113,"KRN",8989.51,"NM",1,0)
MD MEDICINE CONVERTED^^0
"BLD",17113,"KRN",8989.51,"NM","B","MD MEDICINE CONVERTED",1)

"BLD",17113,"KRN",8989.52,0)
8989.52
"BLD",17113,"KRN",8994,0)
8994
"BLD",17113,"KRN","B",.4,.4)

"BLD",17113,"KRN","B",.401,.401)

"BLD",17113,"KRN","B",.402,.402)

"BLD",17113,"KRN","B",.403,.403)

"BLD",17113,"KRN","B",.5,.5)

"BLD",17113,"KRN","B",.84,.84)

"BLD",17113,"KRN","B",3.6,3.6)

"BLD",17113,"KRN","B",3.8,3.8)

"BLD",17113,"KRN","B",9.2,9.2)

"BLD",17113,"KRN","B",9.8,9.8)

"BLD",17113,"KRN","B",19,19)

"BLD",17113,"KRN","B",19.1,19.1)

"BLD",17113,"KRN","B",101,101)

"BLD",17113,"KRN","B",409.61,409.61)

"BLD",17113,"KRN","B",771,771)

"BLD",17113,"KRN","B",870,870)

"BLD",17113,"KRN","B",8989.51,8989.51)

"BLD",17113,"KRN","B",8989.52,8989.52)

"BLD",17113,"KRN","B",8994,8994)

"BLD",17113,"QUES",0)
^9.62^^
"BLD",17113,"REQB",0)
^9.611^4^4
"BLD",17113,"REQB",1,0)
TIU*1.0*182^2
"BLD",17113,"REQB",2,0)
MAG*3.0*47^2
"BLD",17113,"REQB",3,0)
GMRC*3.0*37^2
"BLD",17113,"REQB",4,0)
MD*1.0*10^2
"BLD",17113,"REQB","B","GMRC*3.0*37",3)

"BLD",17113,"REQB","B","MAG*3.0*47",2)

"BLD",17113,"REQB","B","MD*1.0*10",4)

"BLD",17113,"REQB","B","TIU*1.0*182",1)

"FIA",702)
CP TRANSACTION
"FIA",702,0)
^MDD(702,
"FIA",702,0,0)
702PIAO
"FIA",702,0,1)
y^y^p^^^^n^^n
"FIA",702,0,10)

"FIA",702,0,11)

"FIA",702,0,"RLRO")

"FIA",702,0,"VR")
1.0^MD
"FIA",702,702)
1
"FIA",702,702,.3)

"FIA",703.9)
CP CONVERSION
"FIA",703.9,0)
^MDD(703.9,
"FIA",703.9,0,0)
703.9s
"FIA",703.9,0,1)
y^y^f^^^^n
"FIA",703.9,0,10)

"FIA",703.9,0,11)

"FIA",703.9,0,"RLRO")

"FIA",703.9,0,"VR")
1.0^MD
"FIA",703.9,703.9)
0
"FIA",703.9,703.91)
0
"FIA",703.9,703.92)
0
"INIT")
MDPOST5
"KRN",.4,1906,-1)
0^2
"KRN",.4,1906,0)
MD CONVERSION SUMMARY^3050106.0832^^703.9^^^3050228
"KRN",.4,1906,"F",2)
2,.01;C1;"ID";L20~2,.02;C22;L15;"Status"~2,.1;C39;L40;"Message"~
"KRN",.4,1906,"H")
MEDICINE CONVERSION SUMMARY
"KRN",.4,1907,-1)
0^1
"KRN",.4,1907,0)
MD CONVERSION ERRORS^3030919.1322^@^703.9^^@^3050228
"KRN",.4,1907,"F",2)
2,.01~2,.1;C35;W40~
"KRN",.4,1907,"H")
CP CONVERSION ERROR LISTING
"KRN",.4,1908,-1)
0^3
"KRN",.4,1908,0)
MD CONVERSION TOTALS^3030919.1334^@^703.9^^@^3040915
"KRN",.4,1908,"DCL","703.92^.04")
+
"KRN",.4,1908,"DCL","703.92^.05")
+
"KRN",.4,1908,"DNP")
1
"KRN",.4,1908,"F",2)
2,.04~2,.05~
"KRN",.4,1908,"H")
CP CONVERSION STATISTICS
"KRN",.401,1167,-1)
0^2
"KRN",.401,1167,0)
MD CONVERSION SUMMARY^3030923.1446^^703.9^^^3050228
"KRN",.401,1167,2,0)
^.4014^2^2
"KRN",.401,1167,2,1,0)
703.9^.01^NAME^@^^^^^^4
"KRN",.401,1167,2,1,"GET")
S DISX(1)=$P($G(^MDD(703.9,D0,0)),U)
"KRN",.401,1167,2,1,"IX")
^MDD(703.9,"B",^MDD(703.9,^2
"KRN",.401,1167,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,1167,2,1,"SER")
0^0
"KRN",.401,1167,2,1,"TXT")
NAME not null
"KRN",.401,1167,2,2,0)
703.92^.02^STATUS^@^;S1^^^^^3
"KRN",.401,1167,2,2,1,0)
^.40141^1^1
"KRN",.401,1167,2,2,1,1,0)
703.9^2
"KRN",.401,1167,2,2,1,"B",703.9,1)

"KRN",.401,1167,2,2,"GET")
S DISX(2)=$P($G(^MDD(703.9,D0,2,D1,0)),U,2)
"KRN",.401,1167,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,1167,2,2,"TXT")
STATUS not null
"KRN",.401,1167,2,"B",703.9,1)

"KRN",.401,1167,2,"B",703.92,2)

"KRN",.401,1168,-1)
0^1
"KRN",.401,1168,0)
MD CONVERSION ERRORS^3030919.1321^@^703.9^^@^3050228
"KRN",.401,1168,2,0)
^.4014^2^2
"KRN",.401,1168,2,1,0)
703.9^.01^NAME^@^^^^^^4
"KRN",.401,1168,2,1,"GET")
S DISX(1)=$P($G(^MDD(703.9,D0,0)),U)
"KRN",.401,1168,2,1,"IX")
^MDD(703.9,"B",^MDD(703.9,^2
"KRN",.401,1168,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,1168,2,1,"SER")
0^0
"KRN",.401,1168,2,1,"TXT")
NAME not null
"KRN",.401,1168,2,2,0)
703.92^.02^STATUS^^^^^^^3
"KRN",.401,1168,2,2,1,0)
^.40141^1^1
"KRN",.401,1168,2,2,1,1,0)
703.9^2
"KRN",.401,1168,2,2,1,"B",703.9,1)

"KRN",.401,1168,2,2,"F")
Dz^E^E (Error)
"KRN",.401,1168,2,2,"GET")
S DISX(2)=$P($G(^MDD(703.9,D0,2,D1,0)),U,2)
"KRN",.401,1168,2,2,"QCON")
I DISX(2)="E"
"KRN",.401,1168,2,2,"T")
E^E^E (Error)
"KRN",.401,1168,2,2,"TXT")
STATUS equals E (Error)
"KRN",.401,1168,2,"B",703.9,1)

"KRN",.401,1168,2,"B",703.92,2)

"KRN",.401,1168,"%D",0)
^^1^1^3030919^
"KRN",.401,1168,"%D",1,0)
Displays a listing of reports in error status
"KRN",.401,1169,-1)
0^3
"KRN",.401,1169,0)
MD CONVERSION TOTALS^3030923.1356^@^703.9^^@^3030923
"KRN",.401,1169,2,0)
^.4014^2^2
"KRN",.401,1169,2,1,0)
703.9^.01^NAME^@^^^^^^4
"KRN",.401,1169,2,1,"GET")
S DISX(1)=$P($G(^MDD(703.9,D0,0)),U)
"KRN",.401,1169,2,1,"IX")
^MDD(703.9,"B",^MDD(703.9,^2
"KRN",.401,1169,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,1169,2,1,"SER")
0^0
"KRN",.401,1169,2,1,"TXT")
NAME not null
"KRN",.401,1169,2,2,0)
703.92^.02^STATUS^+^^^^^^3
"KRN",.401,1169,2,2,1,0)
^.40141^1^1
"KRN",.401,1169,2,2,1,1,0)
703.9^2
"KRN",.401,1169,2,2,1,"B",703.9,1)

"KRN",.401,1169,2,2,"F")
CQz^CR^CR (Converted Real Mode)
"KRN",.401,1169,2,2,"GET")
S DISX(2)=$P($G(^MDD(703.9,D0,2,D1,0)),U,2)
"KRN",.401,1169,2,2,"QCON")
I (DISX(2)]]"CQz")&(DISX(2)']]"CT")
"KRN",.401,1169,2,2,"T")
CT^CT^CT (Converted Test Mode)
"KRN",.401,1169,2,2,"TXT")
STATUS from CR (Converted Real Mode) to CT (Converted Test Mode)
"KRN",.401,1169,2,"B",703.9,1)

"KRN",.401,1169,2,"B",703.92,2)

"KRN",.403,115,-1)
0^1
"KRN",.403,115,0)
MD MAIN^@^@^^3030203.1413^^^703.9^0^0^1
"KRN",.403,115,40,0)
^.4031I^2^2
"KRN",.403,115,40,1,0)
1^^1,1
"KRN",.403,115,40,1,1)
Page 1
"KRN",.403,115,40,1,40,0)
^.4032IP^435^3
"KRN",.403,115,40,1,40,433,0)
MD HDR^1^1,1^e
"KRN",.403,115,40,1,40,434,0)
MD SETTINGS^2^3,1^e
"KRN",.403,115,40,1,40,435,0)
MD FILES^3^10,1^e
"KRN",.403,115,40,1,40,435,2)
8^B^f^1
"KRN",.403,115,40,2,0)
2^^8,8^^^1^16,73
"KRN",.403,115,40,2,1)
MD MAIN 2
"KRN",.403,115,40,2,40,0)
^.4032IP^436^1
"KRN",.403,115,40,2,40,436,0)
MD PROCEDURE UPDATE^1^1,1^e
"KRN",.404,433,0)
MD HDR^703.9
"KRN",.404,433,40,0)
^.4044I^2^2
"KRN",.404,433,40,1,0)
1^MEDICINE FILE CONVERSION PARAMETERS^1
"KRN",.404,433,40,1,2)
^^1,24
"KRN",.404,433,40,2,0)
2^!M^1
"KRN",.404,433,40,2,.1)
S Y=$TR($J("",79)," ","-")
"KRN",.404,433,40,2,2)
^^2,1
"KRN",.404,434,0)
MD SETTINGS^703.9
"KRN",.404,434,40,0)
^.4044I^8^7
"KRN",.404,434,40,1,0)
2^Scratch HFS Directory^3
"KRN",.404,434,40,1,1)
.1
"KRN",.404,434,40,1,2)
3,32^45^3,3
"KRN",.404,434,40,1,4)
0
"KRN",.404,434,40,2,0)
4^Files to be converted^1
"KRN",.404,434,40,2,2)
^^6,3
"KRN",.404,434,40,3,0)
5^Medicine Package Procedure^1
"KRN",.404,434,40,3,2)
^^7,3
"KRN",.404,434,40,4,0)
6^(Y/N)^1
"KRN",.404,434,40,4,2)
^^7,53
"KRN",.404,434,40,6,0)
3^Administrative Closure User^3
"KRN",.404,434,40,6,1)
.03
"KRN",.404,434,40,6,2)
4,32^35^4,3
"KRN",.404,434,40,7,0)
1^Conversion Mode^3
"KRN",.404,434,40,7,1)
.02
"KRN",.404,434,40,7,2)
2,32^4^2,3
"KRN",.404,434,40,7,3)
0
"KRN",.404,434,40,8,0)
7^Convert^1
"KRN",.404,434,40,8,2)
^^6,51
"KRN",.404,435,0)
MD FILES^703.91
"KRN",.404,435,40,0)
^.4044I^3^2
"KRN",.404,435,40,1,0)
1^^3
"KRN",.404,435,40,1,1)
.01
"KRN",.404,435,40,1,2)
1,3^35
"KRN",.404,435,40,1,4)
^^^1
"KRN",.404,435,40,3,0)
2^^3
"KRN",.404,435,40,3,1)
.03
"KRN",.404,435,40,3,2)
1,55^3
"KRN",.404,435,40,3,3)
N
"KRN",.404,435,40,3,4)
0^^1
"KRN",.404,435,40,3,10)
S:X=1 DDSSTACK=2
"KRN",.404,436,0)
MD PROCEDURE UPDATE^703.91
"KRN",.404,436,40,0)
^.4044I^6^5
"KRN",.404,436,40,1,0)
1^ Medicine Procedure Conversion Settings ^1
"KRN",.404,436,40,1,2)
^^1,2
"KRN",.404,436,40,2,0)
2^Medicine Procedure^3^^MEDPROC
"KRN",.404,436,40,2,1)
.01
"KRN",.404,436,40,2,2)
3,25^37^3,3
"KRN",.404,436,40,2,4)
^^^1
"KRN",.404,436,40,3,0)
3^CP Procedure^3^^CPPROC
"KRN",.404,436,40,3,1)
.02
"KRN",.404,436,40,3,2)
5,25^30^5,3
"KRN",.404,436,40,5,0)
5^Convert if no status^3
"KRN",.404,436,40,5,1)
.04
"KRN",.404,436,40,5,2)
6,25^3^6,3
"KRN",.404,436,40,6,0)
6^Use TIU Note Title^3
"KRN",.404,436,40,6,1)
.05
"KRN",.404,436,40,6,2)
7,25^40^7,3
"KRN",19,11905,-1)
0^6
"KRN",19,11905,0)
MDCVT MANAGER^Medicine to CP Conversion Manager^^M^^^^^^^^CLINICAL PROCEDURES
"KRN",19,11905,1,0)
^19.06^3^3^3041109^^^^
"KRN",19,11905,1,1,0)
This is the Medicine to CP Manager menu option.  This menu option
"KRN",19,11905,1,2,0)
consists of options to assist the site in converting the Medicine
"KRN",19,11905,1,3,0)
reports to Clinical Procedures text reports.
"KRN",19,11905,10,0)
^19.01IP^9^9
"KRN",19,11905,10,1,0)
11906^1^1
"KRN",19,11905,10,1,"^")
MDCVT SETUP
"KRN",19,11905,10,2,0)
11909^3^3
"KRN",19,11905,10,2,"^")
MDCVT RUN
"KRN",19,11905,10,3,0)
11908^4^4
"KRN",19,11905,10,3,"^")
MDCVT SUMMARY
"KRN",19,11905,10,4,0)
11907^5^5
"KRN",19,11905,10,4,"^")
MDCVT DISK SPACE
"KRN",19,11905,10,5,0)
11910^6^6
"KRN",19,11905,10,5,"^")
MDCVT LIST OF TIU TITLES
"KRN",19,11905,10,6,0)
11911^7^7
"KRN",19,11905,10,6,"^")
MDCVT TOTALS
"KRN",19,11905,10,7,0)
11912^8^8
"KRN",19,11905,10,7,"^")
MDCVT ERROR LOG
"KRN",19,11905,10,8,0)
11913^9^9
"KRN",19,11905,10,8,"^")
MDCVT CONVERSION LOCKOUT
"KRN",19,11905,10,9,0)
11914^2^2
"KRN",19,11905,10,9,"^")
MDCVT BUILD CONVERSION LIST
"KRN",19,11905,99)
60142,45029
"KRN",19,11905,99.1)
59904,24363
"KRN",19,11905,"U")
MEDICINE TO CP CONVERSION MANA
"KRN",19,11906,-1)
0^8
"KRN",19,11906,0)
MDCVT SETUP^Conversion Setup^^R^^^^^^^^CLINICAL PROCEDURES^^^1
"KRN",19,11906,1,0)
^19.06^5^5^3041109^^^^
"KRN",19,11906,1,1,0)
This option will bring up a setup screen for the site
"KRN",19,11906,1,2,0)
to setup the Medicine Report Conversion parameter setup.
"KRN",19,11906,1,3,0)
This parameter setup allows the site to control which Medicine
"KRN",19,11906,1,4,0)
reports will be converted and which CP Definition and TIU title
"KRN",19,11906,1,5,0)
to link to.
"KRN",19,11906,15)
K DDSFILE,DR,DA
"KRN",19,11906,20)

"KRN",19,11906,25)
SETUP^MDCVT
"KRN",19,11906,"U")
CONVERSION SETUP
"KRN",19,11907,-1)
0^3
"KRN",19,11907,0)
MDCVT DISK SPACE^Disk Space Requirements^^R^^^^^^^^CLINICAL PROCEDURES
"KRN",19,11907,1,0)
^19.06^5^5^3060508^^^^
"KRN",19,11907,1,1,0)
This option will generate a summary of the Medicine report
"KRN",19,11907,1,2,0)
conversion.  This summary consists of a list of the files
"KRN",19,11907,1,3,0)
converted to Clinical Procedures, the count of the records converted,
"KRN",19,11907,1,4,0)
and the total lines and Bytes of the records that were converted
"KRN",19,11907,1,5,0)
in each file.
"KRN",19,11907,25)
SUMMARY^MDCVT
"KRN",19,11907,"U")
DISK SPACE REQUIREMENTS
"KRN",19,11908,-1)
0^9
"KRN",19,11908,0)
MDCVT SUMMARY^Summary of Conversion Process^^P^^^^^^^^CLINICAL PROCEDURES
"KRN",19,11908,1,0)
^19.06^8^8^3050105^^^^
"KRN",19,11908,1,1,0)
This option will generate a Medicine Report Conversion report.  This
"KRN",19,11908,1,2,0)
report consists of a listing of all Medicine records that were processed
"KRN",19,11908,1,3,0)
in the conversion in variable pointer format and the status of the
"KRN",19,11908,1,4,0)
conversion whether the record was converted, skipped, or errored.
"KRN",19,11908,1,5,0)
If the record was converted, the total number of lines and bytes that
"KRN",19,11908,1,6,0)
the record was converted to in a TIU document will be displayed.
"KRN",19,11908,1,7,0)
If the record errored, the reason why it errored will be displayed.
"KRN",19,11908,1,8,0)
If the record was skipped, the reason why it was skipped will be displayed.
"KRN",19,11908,60)
MDD(703.9,
"KRN",19,11908,62)
0
"KRN",19,11908,63)
[MD CONVERSION SUMMARY]
"KRN",19,11908,64)
[MD CONVERSION SUMMARY]
"KRN",19,11908,65)

"KRN",19,11908,66)

"KRN",19,11908,"U")
SUMMARY OF CONVERSION PROCESS
"KRN",19,11909,-1)
0^7
"KRN",19,11909,0)
MDCVT RUN^Run the Conversion Process^^R^^^^^^^^CLINICAL PROCEDURES
"KRN",19,11909,1,0)
^19.06^4^4^3060508^^^^
"KRN",19,11909,1,1,0)
This option will start the Medicine Report conversion to Clinical
"KRN",19,11909,1,2,0)
Procedures.  This option will only convert reports for procedures that 
"KRN",19,11909,1,3,0)
have the "CONVERT Y/N" field set to "Yes" under the MEDICINE FILE
"KRN",19,11909,1,4,0)
PARAMETERS field in the CP CONVERSION file (#703.9).
"KRN",19,11909,25)
EN^MDCVT
"KRN",19,11909,"U")
RUN THE CONVERSION PROCESS
"KRN",19,11910,-1)
0^5
"KRN",19,11910,0)
MDCVT LIST OF TIU TITLES^List of TIU Titles Needed^^R^^^^^^^^CLINICAL PROCEDURES
"KRN",19,11910,1,0)
^19.06^7^7^3060508^^^^
"KRN",19,11910,1,1,0)
This option will allow the user to generate a list of Medicine procedures
"KRN",19,11910,1,2,0)
and the TIU titles needed to be created for the procedures that will be
"KRN",19,11910,1,3,0)
used for the Medicine report conversion.  The PRINT NAME of the procedures
"KRN",19,11910,1,4,0)
in the PROCEDURE/SUBSPECIALTY file (#697.2) will be used in the display.
"KRN",19,11910,1,5,0)
This list will list the procedures and titles for a Medicine Package
"KRN",19,11910,1,6,0)
Procedure if the "Convert Y/N" parameter is set to "Yes" and the "Use
"KRN",19,11910,1,7,0)
TIU Note Title" parameter is blank in the Conversion Setup option.
"KRN",19,11910,25)
DISP^MDSTATU
"KRN",19,11910,"U")
LIST OF TIU TITLES NEEDED
"KRN",19,11911,-1)
0^10
"KRN",19,11911,0)
MDCVT TOTALS^Conversion Totals By Status^^R^^^^^^^^CLINICAL PROCEDURES
"KRN",19,11911,1,0)
^19.06^2^2^3040708^^^^
"KRN",19,11911,1,1,0)
This option will verify that the Medicine reports conversion is complete
"KRN",19,11911,1,2,0)
and are in appropriate statuses.
"KRN",19,11911,25)
TOTALS^MDCVT
"KRN",19,11911,"U")
CONVERSION TOTALS BY STATUS
"KRN",19,11912,-1)
0^4
"KRN",19,11912,0)
MDCVT ERROR LOG^Error Log^^P^^^^^^^^CLINICAL PROCEDURES
"KRN",19,11912,1,0)
^19.06^5^5^3041109^^
"KRN",19,11912,1,1,0)
This option generates a log of all the errors that occurred with each
"KRN",19,11912,1,2,0)
Medicine report during the conversion.  The listing consists of the
"KRN",19,11912,1,3,0)
CONVERSION ID and ERROR MESSAGE.  The CONVERSION ID consists of
"KRN",19,11912,1,4,0)
the record # concatenated with a ";" and the global location
"KRN",19,11912,1,5,0)
(e.g.,"345;MCAR(699,").
"KRN",19,11912,60)
MDD(703.9,
"KRN",19,11912,62)
0
"KRN",19,11912,63)
[MD CONVERSION ERRORS]
"KRN",19,11912,64)
[MD CONVERSION ERRORS]
"KRN",19,11912,"U")
ERROR LOG
"KRN",19,11913,-1)
0^2
"KRN",19,11913,0)
MDCVT CONVERSION LOCKOUT^Conversion Lockout^^R^^^^^^^^CLINICAL PROCEDURES
"KRN",19,11913,1,0)
^19.06^6^6^3060508^^^^
"KRN",19,11913,1,1,0)
This option will let the user place a specialty/procedure or ALL
"KRN",19,11913,1,2,0)
specialty/procedures Enter/Edit and Report options 'OUT OF SERVICE'
"KRN",19,11913,1,3,0)
in the Medicine package.  It will also set Kernel site parameter
"KRN",19,11913,1,4,0)
MD MEDICINE CONVERTED to "YES" when all specialties/procedures enter/edit
"KRN",19,11913,1,5,0)
and report options are disabled or when the user indicated that all
"KRN",19,11913,1,6,0)
Medicine reports have been converted.
"KRN",19,11913,25)
LOCKOUT^MDCVT
"KRN",19,11913,"U")
CONVERSION LOCKOUT
"KRN",19,11914,-1)
0^1
"KRN",19,11914,0)
MDCVT BUILD CONVERSION LIST^Build Conversion List^^A^^^^^^^^CLINICAL PROCEDURES^^1^1
"KRN",19,11914,1,0)
^19.06^11^11^3041109^^^^
"KRN",19,11914,1,1,0)
The user will need to run this option before using the [MDCVT RUN],
"KRN",19,11914,1,2,0)
Run the Conversion Process, option.  This option will let the user
"KRN",19,11914,1,3,0)
build the conversion list of the Medicine file records for the CP
"KRN",19,11914,1,4,0)
CONVERSION file (#703.9).  It will populate the CONVERSION LOG
"KRN",19,11914,1,5,0)
sub-file (#703.92) with all entries in the "AC" cross reference in
"KRN",19,11914,1,6,0)
the MEDICAL PATIENT file (#690) and set the STATUS field as
"KRN",19,11914,1,7,0)
"Ready to Convert" for each entry.  This option can be queued.
"KRN",19,11914,1,8,0)
Once the conversion list is built, this option can also be used
"KRN",19,11914,1,9,0)
to add new additional entries in the Medicine file into the conversion
"KRN",19,11914,1,10,0)
list.  This option will not overwrite the existing entries in the
"KRN",19,11914,1,11,0)
CONVERSION LOG but add to the list.
"KRN",19,11914,15)
K MDS
"KRN",19,11914,20)
S MDS=$$BLD^MDCVT1()
"KRN",19,11914,25)

"KRN",19,11914,"U")
BUILD CONVERSION LIST
"KRN",8989.51,349,-1)
0^1
"KRN",8989.51,349,0)
MD MEDICINE CONVERTED^Medicine Package Converted^0^^Yes/No^0
"KRN",8989.51,349,1)
Y
"KRN",8989.51,349,20,0)
^^1^1^3030923^
"KRN",8989.51,349,20,1,0)
Used to determine if the Medicine Package has been converted.
"KRN",8989.51,349,30,0)
^8989.513I^1^1
"KRN",8989.51,349,30,1,0)
1^4.2
"MBREQ")
0
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",390,-1)
1^1
"PKG",390,0)
CLINICAL PROCEDURES^MD^Clinical Procedures
"PKG",390,20,0)
^9.402P^^
"PKG",390,22,0)
^9.49I^1^1
"PKG",390,22,1,0)
1.0^3040521^3040521^4558
"PKG",390,22,1,"PAH",1,0)
5^3060508^4558
"PKG",390,22,1,"PAH",1,1,0)
^^2^2^3060508
"PKG",390,22,1,"PAH",1,1,1,0)
Please refer to the National Patch Module for the detail of this patch 
"PKG",390,22,1,"PAH",1,1,2,0)
build.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
17
"RTN","MCARPS1")
0^18^B8444833^B8248104
"RTN","MCARPS1",1,0)
MCARPS1 ;WISC/TJK,RCH-SUMMARY OF PATIENT PROCEDURES (2) ;6/18/97  10:33
"RTN","MCARPS1",2,0)
 ;;1.0;CLINICAL PROCEDURES;**5**;Apr 01, 2004;Build 1
"RTN","MCARPS1",3,0)
 K ^TMP("MCAR",$J) S S4="" F M=1:1 S S4=$O(^MCAR(690,"AC",DFN,S4)) Q:S4=""  D LOCFIL
"RTN","MCARPS1",4,0)
 Q
"RTN","MCARPS1",5,0)
LOCFIL G LOCFIL1:$D(S5) S S5="" F K=1:1 S S5=$O(^MCAR(690,"AC",DFN,S4,S5)) Q:S5=""  D LOCFIL1
"RTN","MCARPS1",6,0)
 K S5 Q
"RTN","MCARPS1",7,0)
LOCFIL1 S S6="" F L=1:1 S S6=$O(^MCAR(690,"AC",DFN,S4,S5,S6)) Q:S6=""  D CONT
"RTN","MCARPS1",8,0)
 Q
"RTN","MCARPS1",9,0)
CONT ;CONT+1 modified on 2-7-94,S MCFILE..2) added to conform w/alpha site
"RTN","MCARPS1",10,0)
 Q:$O(^MDD(702,"ACONV",S6_";"_S5_",",0))
"RTN","MCARPS1",11,0)
 I $D(^MCAR(+$P(S5,"(",2),S6,2005)) S MCFILE=+$P(S5,"(",2) D SUM^MCMAG
"RTN","MCARPS1",12,0)
 I S5="MCAR(702.7" Q
"RTN","MCARPS1",13,0)
 I S5="MCAR(699" S (LL,LL1)=$P($G(^MCAR(699,S6,0)),U,12) Q:LL'>0  S LL=$P($G(^MCAR(697.2,LL,0)),U) G CONT1:'$D(PE) Q:PE'=LL  G CONT1
"RTN","MCARPS1",14,0)
 ;I S5="MCAR(699.5" S (LL,LL1)=$P($G(^MCAR(699.5,S6,0)),U,6) Q:'LL  S LL=$P($G(^MCAR(697.2,LL,0)),U) G CONT1:'$D(PE) Q:PE'=LL  G CONT1  ;MC*2.3*8
"RTN","MCARPS1",15,0)
 I S5="MCAR(699.5",'$D(PE) D  Q  ;MC*2.3*8
"RTN","MCARPS1",16,0)
 .S LL6=$P($G(^MCAR(699.5,S6,0)),U,6),LL8=$P($G(^MCAR(699.5,S6,0)),U,8)
"RTN","MCARPS1",17,0)
 .S (LL,LL1)=$P($G(^MCAR(699.5,S6,0)),U,6) Q:'LL  S LL=$P($G(^MCAR(697.2,LL,0)),U) D CONT1
"RTN","MCARPS1",18,0)
 I S5="MCAR(699.5",$D(PE) D  Q  ;MC*2.3*8
"RTN","MCARPS1",19,0)
 .S LL6=$P($G(^MCAR(699.5,S6,0)),U,6),LL8=$P($G(^MCAR(699.5,S6,0)),U,8)
"RTN","MCARPS1",20,0)
 .S (LL,LL1)=$P($G(^MCAR(699.5,S6,0)),U,6) Q:'LL  S LL=$P($G(^MCAR(697.2,LL,0)),U)
"RTN","MCARPS1",21,0)
 .N LLX,LLY
"RTN","MCARPS1",22,0)
 .S LLX=$O(^MCAR(697.2,"B",PE,0)) Q:'LLX  S LLY=$P($G(^MCAR(697.2,LLX,1)),U)
"RTN","MCARPS1",23,0)
 .I LLY="S",LLX=LL6 D CONT1
"RTN","MCARPS1",24,0)
 .I LLY="P",LLX=LL8 D CONT1
"RTN","MCARPS1",25,0)
 I S5[694 S (LL,LL1)=$P($G(^MCAR(694,S6,0)),U,3) Q:'LL  S LL=$P(^MCAR(697.2,LL,0),U) G CONT1:'$D(PE) Q:PE'=LL  G CONT1
"RTN","MCARPS1",26,0)
 ;MFD 2/5/93 I S5[700,$P($G(^MCAR(700,S6,2)),U)'="Y" Q  ;    exclude unreleased PFT
"RTN","MCARPS1",27,0)
 S (LL,LL1)=$O(^MCAR(697.2,"C",S5,0)),LL=$P(^MCAR(697.2,LL,0),U,1)
"RTN","MCARPS1",28,0)
CONT1 ;
"RTN","MCARPS1",29,0)
 S REC=$O(^MCAR(697.2,"B",LL,0)) S:REC="" REC=0
"RTN","MCARPS1",30,0)
 S MCARCODE=""
"RTN","MCARPS1",31,0)
 S MCESON=$P($G(^MCAR(697.2,REC,0)),U,14),MCESKEY=$P($G(^MCAR(697.2,REC,0)),U,15),MCSUP=+$P($G(^MCAR(697.2,REC,0)),U,16)
"RTN","MCARPS1",32,0)
 S (MCARSUM,MCARPSUM)="",MCARFILE=U_S5_","_S6_",.2)" S:$D(@MCARFILE) MCARSUM=$P(@MCARFILE,U,1),MCARPSUM=$P(@MCARFILE,U,2)
"RTN","MCARPS1",33,0)
 K MCARFILE S S1=$S(WH="P":LL,1:S4),S2=$S(WH="P":S4,1:LL)
"RTN","MCARPS1",34,0)
 S MCFILE=+$P(S5,"(",2)
"RTN","MCARPS1",35,0)
 I MCESON,($G(MCESKEY)'=""),('$$SCRSUMPT^MCESSCR(MCESKEY,S6,MCSUP)) K MCARSUM,MCARPSUM,MCFILE,REC,MCSUP Q
"RTN","MCARPS1",36,0)
 I $P($G(@(U_S5_","_S6_",""ES"")")),U,7)="S" G EXIT  ;MC*2.3*8
"RTN","MCARPS1",37,0)
 S S2=S2_U_S6  ;MC*2.3*8
"RTN","MCARPS1",38,0)
 S ^TMP("MCAR",$J,S1,S2)=MCARSUM_U_S6_U_$P(^MCAR(697.2,LL1,0),U,5,7)
"RTN","MCARPS1",39,0)
 S $P(^TMP("MCAR",$J,S1,S2),U,10)=MCARPSUM
"RTN","MCARPS1",40,0)
 S $P(^TMP("MCAR",$J,S1,S2),U,11)=LL
"RTN","MCARPS1",41,0)
 I S5="MCAR(699.5" D  ;MC*2.3*8
"RTN","MCARPS1",42,0)
 .I LL8="" S LL8=" "
"RTN","MCARPS1",43,0)
 .S $P(^TMP("MCAR",$J,S1,S2),U,12)=$E(($E($P($G(^MCAR(697.2,LL6,0)),U,8),1,13)_"/"_$P($G(^MCAR(697.2,LL8,0)),U)),1,31) K LL6,LL8
"RTN","MCARPS1",44,0)
EXIT K MCARSUM,MCARPSUM,REC,MCSUP,MCESON Q
"RTN","MCARPS2")
0^12^B18375280^B17411795
"RTN","MCARPS2",1,0)
MCARPS2 ;SLC/dcm,WAA Summary of patient procedures for CPRS ;12/15/97  14:49
"RTN","MCARPS2",2,0)
 ;;1.0;CLINICAL PROCEDURES;**5**;Apr 01, 2004;Build 1
"RTN","MCARPS2",3,0)
 ;Modified from MCARPS1 for CPRS
"RTN","MCARPS2",4,0)
 ; Reference DBIA # 3397 Medicine Report Support from CPRS.
"RTN","MCARPS2",5,0)
 ;                # 2263 XPAR parameter call.
"RTN","MCARPS2",6,0)
EN(DFN) ;Get procedures for a patient
"RTN","MCARPS2",7,0)
 I '$$PATCH^XPDUTL("MD*1.0*2") G MED
"RTN","MCARPS2",8,0)
 I $$FIND1^DIC(9.4,"","MX","MEDICINE") Q:$$GET^XPAR("SYS","MD MEDICINE CONVERTED",1)&$D(S5)
"RTN","MCARPS2",9,0)
 N MCGLB,MCBLK,MCRT K ^TMP("OR",$J,"MCAR") S MCGLB=$NA(^TMP("OR",$J,"MCAR","OT"))
"RTN","MCARPS2",10,0)
 S MCBLK="",MCRT="D EN1^MDPS1(.MCGLB,DFN,MCBLK,MCBLK,99999,MCBLK,MCBLK)"
"RTN","MCARPS2",11,0)
 X MCRT
"RTN","MCARPS2",12,0)
 Q
"RTN","MCARPS2",13,0)
MED S WH=""
"RTN","MCARPS2",14,0)
 K ^TMP("OR",$J,"MCAR") S S4="" F M=1:1 S S4=$O(^MCAR(690,"AC",DFN,S4)) Q:S4=""  D LOCFIL
"RTN","MCARPS2",15,0)
 D PR0
"RTN","MCARPS2",16,0)
 Q
"RTN","MCARPS2",17,0)
LOCFIL G LOCFIL1:$D(S5) S S5="" F K=1:1 S S5=$O(^MCAR(690,"AC",DFN,S4,S5)) Q:S5=""  D LOCFIL1
"RTN","MCARPS2",18,0)
 K S5 Q
"RTN","MCARPS2",19,0)
LOCFIL1 S S6="" F L=1:1 S S6=$O(^MCAR(690,"AC",DFN,S4,S5,S6)) Q:S6=""  D CONT
"RTN","MCARPS2",20,0)
 Q
"RTN","MCARPS2",21,0)
CONT ;CONT+1 modified on 2-7-94,S MCFILE..2) added to conform w/alpha site
"RTN","MCARPS2",22,0)
 Q:$O(^MDD(702,"ACONV",S6_";"_S5_",",0))
"RTN","MCARPS2",23,0)
 I $D(^MCAR(+$P(S5,"(",2),S6,2005)) S MCFILE=+$P(S5,"(",2) D SUM^MCMAG
"RTN","MCARPS2",24,0)
 I S5="MCAR(702.7" Q
"RTN","MCARPS2",25,0)
 I S5="MCAR(699" S (LL,LL1)=$P($G(^MCAR(699,S6,0)),U,12) Q:LL'>0  S LL=$P($G(^MCAR(697.2,LL,0)),U) G:'$D(PE) CONT1 Q:PE'=LL  G CONT1
"RTN","MCARPS2",26,0)
 ;I S5="MCAR(699.5" S (LL,LL1)=$P($G(^MCAR(699.5,S6,0)),U,6) Q:'LL  S LL=$P($G(^MCAR(697.2,LL,0)),U) G CONT1:'$D(PE) Q:PE'=LL  G CONT1  ;MC*2.3*8
"RTN","MCARPS2",27,0)
 I S5="MCAR(699.5",'$D(PE) D  Q  ;MC*2.3*8
"RTN","MCARPS2",28,0)
 .S LL6=$P($G(^MCAR(699.5,S6,0)),U,6),LL8=$P($G(^MCAR(699.5,S6,0)),U,8)
"RTN","MCARPS2",29,0)
 .S (LL,LL1)=$P($G(^MCAR(699.5,S6,0)),U,6) Q:'LL  S LL=$P($G(^MCAR(697.2,LL,0)),U) D CONT1
"RTN","MCARPS2",30,0)
 I S5="MCAR(699.5",$D(PE) D  Q  ;MC*2.3*8
"RTN","MCARPS2",31,0)
 .S LL6=$P($G(^MCAR(699.5,S6,0)),U,6),LL8=$P($G(^MCAR(699.5,S6,0)),U,8)
"RTN","MCARPS2",32,0)
 .S (LL,LL1)=$P($G(^MCAR(699.5,S6,0)),U,6) Q:'LL  S LL=$P($G(^MCAR(697.2,LL,0)),U)
"RTN","MCARPS2",33,0)
 .N LLX,LLY
"RTN","MCARPS2",34,0)
 .S LLX=$O(^MCAR(697.2,"B",PE,0)) Q:'LLX  S LLY=$P($G(^MCAR(697.2,LLX,1)),U)
"RTN","MCARPS2",35,0)
 .I LLY="S",LLX=LL6 D CONT1
"RTN","MCARPS2",36,0)
 .I LLY="P",LLX=LL8 D CONT1
"RTN","MCARPS2",37,0)
 I S5[694 S (LL,LL1)=$P($G(^MCAR(694,S6,0)),U,3) Q:'LL  S LL=$P(^MCAR(697.2,LL,0),U) G CONT1:'$D(PE) Q:PE'=LL  G CONT1
"RTN","MCARPS2",38,0)
 ;MFD 2/5/93 I S5[700,$P($G(^MCAR(700,S6,2)),U)'="Y" Q  ;    exclude unreleased PFT
"RTN","MCARPS2",39,0)
 S (LL,LL1)=$O(^MCAR(697.2,"C",S5,0)),LL=$P(^MCAR(697.2,LL,0),U,1)
"RTN","MCARPS2",40,0)
CONT1 ;
"RTN","MCARPS2",41,0)
 S REC=$O(^MCAR(697.2,"B",LL,0)) S:REC="" REC=0
"RTN","MCARPS2",42,0)
 S MCARCODE=""
"RTN","MCARPS2",43,0)
 S MCESON=$P($G(^MCAR(697.2,REC,0)),U,14),MCESKEY=$P($G(^MCAR(697.2,REC,0)),U,15),MCSUP=+$P($G(^MCAR(697.2,REC,0)),U,16)
"RTN","MCARPS2",44,0)
 S (MCARSUM,MCARPSUM)="",MCARFILE=U_S5_","_S6_",.2)" S:$D(@MCARFILE) MCARSUM=$P(@MCARFILE,U,1),MCARPSUM=$P(@MCARFILE,U,2)
"RTN","MCARPS2",45,0)
 K MCARFILE S S1=$S(WH="P":LL,1:S4),S2=$S(WH="P":S4,1:LL)
"RTN","MCARPS2",46,0)
 S MCFILE=+$P(S5,"(",2)
"RTN","MCARPS2",47,0)
 I MCESON,($G(MCESKEY)'=""),('$$SCRSUMPT^MCESSCR(MCESKEY,S6,MCSUP)) K MCARSUM,MCARPSUM,MCFILE,REC,MCSUP Q
"RTN","MCARPS2",48,0)
 I '$$VALID^MCARUTL5(S5,S6,DFN) Q  ; MC*2.3*33
"RTN","MCARPS2",49,0)
 I $P($G(@(U_S5_","_S6_",""ES"")")),U,7)="S" G EXIT  ;MC*2.3*8
"RTN","MCARPS2",50,0)
 S S2=S2_U_S6  ;MC*2.3*8
"RTN","MCARPS2",51,0)
 S ^TMP("OR",$J,"MCAR",S1,S2)=MCARSUM_U_S6_U_$P(^MCAR(697.2,LL1,0),U,5,7)
"RTN","MCARPS2",52,0)
 ;I $P(^MCAR(697.2,LL1,0),U,2)'=S5 S $P(^TMP("OR",$J,"MCAR",S1,S2),U,3,5)="EN1^MCARGP^CONSULTS" ; MC*2.3*33
"RTN","MCARPS2",53,0)
 ;I $P(^MCAR(697.2,LL1,0),U,2)'=S5 S $P(^TMP("OR",$J,"MCAR",S1,S2),U,3,5)="EN1^MCARGP^NONENDO" ; MC*2.3*33
"RTN","MCARPS2",54,0)
 ;I $P(^MCAR(697.2,LL1,0),U,2)'=S5 S $P(^TMP("OR",$J,"MCAR",S1,S2),U,3,5)="EN1^MCARGP^GI" ; MC*2.3*33
"RTN","MCARPS2",55,0)
 I $P(^MCAR(697.2,LL1,0),U,2)'=S5 S $P(^TMP("OR",$J,"MCAR",S1,S2),U,3,5)="EN1^MCARGP^PARAC" ; MC*2.3*33
"RTN","MCARPS2",56,0)
 S $P(^TMP("OR",$J,"MCAR",S1,S2),U,10)=MCARPSUM
"RTN","MCARPS2",57,0)
 S $P(^TMP("OR",$J,"MCAR",S1,S2),U,11)=LL
"RTN","MCARPS2",58,0)
 I S5="MCAR(699.5" D  ;MC*2.3*8
"RTN","MCARPS2",59,0)
 .I LL8="" S LL8=" "
"RTN","MCARPS2",60,0)
 .S $P(^TMP("OR",$J,"MCAR",S1,S2),U,12)=$E(($E($P($G(^MCAR(697.2,LL6,0)),U,8),1,13)_"/"_$P($G(^MCAR(697.2,LL8,0)),U)),1,31) K LL6,LL8
"RTN","MCARPS2",61,0)
EXIT K MCARSUM,MCARPSUM,REC,MCSUP,MCESON Q
"RTN","MCARPS2",62,0)
PR0 S I="",L=0
"RTN","MCARPS2",63,0)
 F  S I=$O(^TMP("OR",$J,"MCAR",I)) Q:I=""  I I'="OT" D
"RTN","MCARPS2",64,0)
 . S J="" F  S J=$O(^TMP("OR",$J,"MCAR",I,J)) Q:J=""  S PR=^(J) D
"RTN","MCARPS2",65,0)
 .. Q:$P(PR,U,3,5)="^^"  ; MC*2.3*33
"RTN","MCARPS2",66,0)
 .. S MCARDT=$S(WH="P":$P(J,U),1:I),MCARPROC=$S(WH="P":I,1:$P(J,U))
"RTN","MCARPS2",67,0)
 .. S MCARPROC=$O(^MCAR(697.2,"B",MCARPROC,0)),MCARPROC=$P(^MCAR(697.2,MCARPROC,0),U,8)
"RTN","MCARPS2",68,0)
 .. I $P(PR,U,12)'="" S MCARPROC=$P(PR,U,12)
"RTN","MCARPS2",69,0)
 .. S DA=$P(PR,U,2),K=$P(PR,U),M=$P(PR,U,10)
"RTN","MCARPS2",70,0)
 .. S K=$S(K="N"!(K="L"):"NORMAL",K="A":"ABNORMAL",K="B":"BORDERLINE",K="T":"TECHNICALLY UNSATISFACTORY",K="ND":"NON-DIAGNOSTIC",K="MI":"MILDLY ABNORMAL",K="MO":"MODERATELY ABNORMAL",K="S":"SEVERELY ABNORMAL",1:"")
"RTN","MCARPS2",71,0)
 .. S Y=9999999.9999-MCARDT X ^DD("DD")
"RTN","MCARPS2",72,0)
 .. S L=L+1 S ^TMP("OR",$J,"MCAR","OT",L)=MCARPROC_U_DA_U_$P(PR,U,3,5)_U_J S $P(^(L),U,6)=Y,$P(^(L),U,7)=K,$P(^(L),U,10)=M,$P(^(L),U,11)=$S(WH="P":I_U_$P(J,U,2),1:J)
"RTN","MCARPS2",73,0)
 Q
"RTN","MCARPS3")
0^13^B17072262^B16808255
"RTN","MCARPS3",1,0)
MCARPS3 ; HOIFO/NCA - Get Procedures for Medicine and CP ;1/13/04  14:35
"RTN","MCARPS3",2,0)
 ;;1.0;CLINICAL PROCEDURES;**5**;Apr 01, 2004;Build 1
"RTN","MCARPS3",3,0)
 ;Modified from MCARPS2 for CPRS
"RTN","MCARPS3",4,0)
 ; Please Reference DBIA # 3397
"RTN","MCARPS3",5,0)
EN(MCDFN,CODE,MDSDT,MDEDT) ;Get procedures for a patient
"RTN","MCARPS3",6,0)
 S WH="" K ^TMP("OR",$J,"MCAR")
"RTN","MCARPS3",7,0)
 N MDGBL,MDPTR
"RTN","MCARPS3",8,0)
 S MDGBL="^MCAR(690,""AC"",MCDFN)"
"RTN","MCARPS3",9,0)
 F  S MDGBL=$Q(@MDGBL) Q:MDGBL=""  Q:$QS(MDGBL,3)'=MCDFN  D
"RTN","MCARPS3",10,0)
 .S MDPTR=$QS(MDGBL,6)_";"_$QS(MDGBL,5)_",",S4=$QS(MDGBL,4),S5=$QS(MDGBL,5),S6=$QS(MDGBL,6)
"RTN","MCARPS3",11,0)
 .D CONT
"RTN","MCARPS3",12,0)
 D PR0
"RTN","MCARPS3",13,0)
 K S5 Q
"RTN","MCARPS3",14,0)
CONT ;CONT+1 modified on 2-7-94,S MCFILE..2) added to conform w/alpha site
"RTN","MCARPS3",15,0)
 Q:$O(^MDD(702,"ACONV",S6_";"_S5_",",0))
"RTN","MCARPS3",16,0)
 I $D(^MCAR(+$P(S5,"(",2),S6,2005)) S MCFILE=+$P(S5,"(",2) D SUM^MCMAG
"RTN","MCARPS3",17,0)
 I S5="MCAR(702.7" Q
"RTN","MCARPS3",18,0)
 I S5="MCAR(699" S (LL,LL1)=$P($G(^MCAR(699,S6,0)),U,12) Q:LL'>0  S LL=$P($G(^MCAR(697.2,LL,0)),U) G:'$D(PE) CONT1 Q:PE'=LL  G CONT1
"RTN","MCARPS3",19,0)
 I S5="MCAR(699.5",'$D(PE) D  Q  ;MC*2.3*8
"RTN","MCARPS3",20,0)
 .S LL6=$P($G(^MCAR(699.5,S6,0)),U,6),LL8=$P($G(^MCAR(699.5,S6,0)),U,8)
"RTN","MCARPS3",21,0)
 .S (LL,LL1)=$P($G(^MCAR(699.5,S6,0)),U,6) Q:'LL  S LL=$P($G(^MCAR(697.2,LL,0)),U) D CONT1
"RTN","MCARPS3",22,0)
 I S5="MCAR(699.5",$D(PE) D  Q  ;MC*2.3*8
"RTN","MCARPS3",23,0)
 .S LL6=$P($G(^MCAR(699.5,S6,0)),U,6),LL8=$P($G(^MCAR(699.5,S6,0)),U,8)
"RTN","MCARPS3",24,0)
 .S (LL,LL1)=$P($G(^MCAR(699.5,S6,0)),U,6) Q:'LL  S LL=$P($G(^MCAR(697.2,LL,0)),U)
"RTN","MCARPS3",25,0)
 .N LLX,LLY
"RTN","MCARPS3",26,0)
 .S LLX=$O(^MCAR(697.2,"B",PE,0)) Q:'LLX  S LLY=$P($G(^MCAR(697.2,LLX,1)),U)
"RTN","MCARPS3",27,0)
 .I LLY="S",LLX=LL6 D CONT1
"RTN","MCARPS3",28,0)
 .I LLY="P",LLX=LL8 D CONT1
"RTN","MCARPS3",29,0)
 I S5[694 S (LL,LL1)=$P($G(^MCAR(694,S6,0)),U,3) Q:'LL  S LL=$P(^MCAR(697.2,LL,0),U) G CONT1:'$D(PE) Q:PE'=LL  G CONT1
"RTN","MCARPS3",30,0)
 ;MFD 2/5/93 I S5[700,$P($G(^MCAR(700,S6,2)),U)'="Y" Q  ;    exclude unreleased PFT
"RTN","MCARPS3",31,0)
 S (LL,LL1)=$O(^MCAR(697.2,"C",S5,0)),LL=$P(^MCAR(697.2,LL,0),U,1)
"RTN","MCARPS3",32,0)
CONT1 ;
"RTN","MCARPS3",33,0)
 S REC=$O(^MCAR(697.2,"B",LL,0)) S:REC="" REC=0
"RTN","MCARPS3",34,0)
 S MCARCODE=""
"RTN","MCARPS3",35,0)
 S MCESON=$P($G(^MCAR(697.2,REC,0)),U,14),MCESKEY=$P($G(^MCAR(697.2,REC,0)),U,15),MCSUP=+$P($G(^MCAR(697.2,REC,0)),U,16)
"RTN","MCARPS3",36,0)
 S (MCARSUM,MCARPSUM)="",MCARFILE=U_S5_","_S6_",.2)" S:$D(@MCARFILE) MCARSUM=$P(@MCARFILE,U,1),MCARPSUM=$P(@MCARFILE,U,2)
"RTN","MCARPS3",37,0)
 K MCARFILE S S1=$S(WH="P":LL,1:S4),S2=$S(WH="P":S4,1:LL)
"RTN","MCARPS3",38,0)
 S MCFILE=+$P(S5,"(",2)
"RTN","MCARPS3",39,0)
 I MCESON,($G(MCESKEY)'=""),('$$SCRSUMPT^MCESSCR(MCESKEY,S6,MCSUP)) K MCARSUM,MCARPSUM,MCFILE,REC,MCSUP Q
"RTN","MCARPS3",40,0)
 I '$$VALID^MCARUTL5(S5,S6,MCDFN) Q  ; MC*2.3*33
"RTN","MCARPS3",41,0)
 I $P($G(@(U_S5_","_S6_",""ES"")")),U,7)="S" G EXIT  ;MC*2.3*8
"RTN","MCARPS3",42,0)
 S S2=S2_U_S6  ;MC*2.3*8
"RTN","MCARPS3",43,0)
 S ^TMP("OR",$J,"MCAR",S1,S2)=MCARSUM_U_S6_";"_S5_","_U_$P(^MCAR(697.2,LL1,0),U,5,7)
"RTN","MCARPS3",44,0)
 ;I $P(^MCAR(697.2,LL1,0),U,2)'=S5 S $P(^TMP("OR",$J,"MCAR",S1,S2),U,3,5)="EN1^MCARGP^CONSULTS" ; MC*2.3*33
"RTN","MCARPS3",45,0)
 ;I $P(^MCAR(697.2,LL1,0),U,2)'=S5 S $P(^TMP("OR",$J,"MCAR",S1,S2),U,3,5)="EN1^MCARGP^NONENDO" ; MC*2.3*33
"RTN","MCARPS3",46,0)
 ;I $P(^MCAR(697.2,LL1,0),U,2)'=S5 S $P(^TMP("OR",$J,"MCAR",S1,S2),U,3,5)="EN1^MCARGP^GI" ; MC*2.3*33
"RTN","MCARPS3",47,0)
 I $P(^MCAR(697.2,LL1,0),U,2)'=S5 S $P(^TMP("OR",$J,"MCAR",S1,S2),U,3,5)="EN1^MCARGP^PARAC" ; MC*2.3*33
"RTN","MCARPS3",48,0)
 S $P(^TMP("OR",$J,"MCAR",S1,S2),U,10)=MCARPSUM
"RTN","MCARPS3",49,0)
 S $P(^TMP("OR",$J,"MCAR",S1,S2),U,11)=LL
"RTN","MCARPS3",50,0)
 I S5="MCAR(699.5" D  ;MC*2.3*8
"RTN","MCARPS3",51,0)
 .I LL8="" S LL8=" "
"RTN","MCARPS3",52,0)
 .S $P(^TMP("OR",$J,"MCAR",S1,S2),U,12)=$E(($E($P($G(^MCAR(697.2,LL6,0)),U,8),1,13)_"/"_$P($G(^MCAR(697.2,LL8,0)),U)),1,31) K LL6,LL8
"RTN","MCARPS3",53,0)
EXIT K MCARSUM,MCARPSUM,REC,MCSUP,MCESON Q
"RTN","MCARPS3",54,0)
PR0 S I="",L=0
"RTN","MCARPS3",55,0)
 F  S I=$O(^TMP("OR",$J,"MCAR",I)) Q:I=""  I I'="OT" D
"RTN","MCARPS3",56,0)
 . S J="" F  S J=$O(^TMP("OR",$J,"MCAR",I,J)) Q:J=""  S PR=^(J) D
"RTN","MCARPS3",57,0)
 .. Q:$P(PR,U,3,5)="^^"  ; MC*2.3*33
"RTN","MCARPS3",58,0)
 .. S MCARDT=$S(WH="P":$P(J,U),1:I),MCARPROC=$S(WH="P":I,1:$P(J,U))
"RTN","MCARPS3",59,0)
 .. S MCARPROC=$O(^MCAR(697.2,"B",MCARPROC,0)),MCARPROC=$P(^MCAR(697.2,MCARPROC,0),U,8)
"RTN","MCARPS3",60,0)
 .. I $P(PR,U,12)'="" S MCARPROC=$P(PR,U,12)
"RTN","MCARPS3",61,0)
 .. S DA=$P(PR,U,2),K=$P(PR,U),M=$P(PR,U,10)
"RTN","MCARPS3",62,0)
 .. S K=$S(K="N"!(K="L"):"NORMAL",K="A":"ABNORMAL",K="B":"BORDERLINE",K="T":"TECHNICALLY UNSATISFACTORY",K="ND":"NON-DIAGNOSTIC",K="MI":"MILDLY ABNORMAL",K="MO":"MODERATELY ABNORMAL",K="S":"SEVERELY ABNORMAL",1:"")
"RTN","MCARPS3",63,0)
 ..I CODE'="" Q:CODE'=K
"RTN","MCARPS3",64,0)
 ..I +$G(MDSDT) Q:(9999999.9999-MCARDT)<+$G(MDSDT)
"RTN","MCARPS3",65,0)
 ..I +$G(MDEDT) Q:(9999999.9999-MCARDT)>+$G(MDEDT)
"RTN","MCARPS3",66,0)
 ..N MCDT S MCDT=MCARDT,Y=9999999.9999-MCARDT X ^DD("DD")
"RTN","MCARPS3",67,0)
 ..S L=MCARPROC_"~"_DA
"RTN","MCARPS3",68,0)
 ..S ^TMP("MDPLST",$J,MCDT,L)=MCARPROC_U_+DA_U_"PR690^MDPS1"_U_$P(PR,U,5)_U_J S $P(^(L),U,6)=Y,$P(^(L),U,7)=K,$P(^(L),U,10)=M,$P(^(L),U,11)=$S(WH="P":I_U_$P(J,U,2),1:J)
"RTN","MCARPS3",69,0)
 K ^TMP("OR",$J,"MCAR")
"RTN","MCARPS3",70,0)
 Q
"RTN","MCORMN")
0^14^B27253923^B26988124
"RTN","MCORMN",1,0)
MCORMN ;WISC/DCB-Front-end for Health Summary ;4/26/04  11:54
"RTN","MCORMN",2,0)
 ;;1.0;CLINICAL PROCEDURES;**5**;Apr 01, 2004;Build 1
"RTN","MCORMN",3,0)
 ; Reference IA #1236 for Medicine and Health Summary interface.
"RTN","MCORMN",4,0)
 ;              #3778 for Medicine and Health Summary interface for RDV
"RTN","MCORMN",5,0)
 ;              #10070 for XMD API call.
"RTN","MCORMN",6,0)
 ;              #10064 for XM call.
"RTN","MCORMN",7,0)
 ;              #10090 DIC(4) Read Access.
"RTN","MCORMN",8,0)
 ;              #10106 for HLFNC calls.
"RTN","MCORMN",9,0)
 ;              #10113 for Access to ^XMB(3.9,#,2)
"RTN","MCORMN",10,0)
HL7(MESSNUMB) ;This is the HL7 entry point for queries
"RTN","MCORMN",11,0)
 N MSH,TEMP,ORD,ST,MSTR,BDATE,EDATE,OCC,PROC,PATID,MCTDEC,XMZ,MCLINE
"RTN","MCORMN",12,0)
 N QDT,QFC,QP,QID,RAP,GNODE,ATYPE
"RTN","MCORMN",13,0)
 Q:+MESSNUMB=0 0
"RTN","MCORMN",14,0)
 S GNODE="^XMB(3.9,"_MESSNUMB_",2)"
"RTN","MCORMN",15,0)
 S MSH=$G(@GNODE@(1,0)) I MSH="" D ERROR Q 0
"RTN","MCORMN",16,0)
 S MSTR=$E(MSH,4,9) D SLIP^MCORMN0(MSTR)
"RTN","MCORMN",17,0)
 S QRD=$G(@GNODE@(2,0)) I QRD="" D ERROR Q 0
"RTN","MCORMN",18,0)
 S QFC=$P(QRD,ST(1),3) I QFC'="R" D ERROR Q 0
"RTN","MCORMN",19,0)
 S QLR=$P(QRD,ST(1),8),OCC=$P(QLR,ST(2),2),ATYPE=$P(QLR,ST(2),1)
"RTN","MCORMN",20,0)
 S PATID=+$P(QRD,ST(1),9)
"RTN","MCORMN",21,0)
 I '$D(^MCAR(690,"AC",PATID)) D ERROR Q ""
"RTN","MCORMN",22,0)
 S PROC=$P(QRD,ST(1),11)
"RTN","MCORMN",23,0)
 S TEMP=$P(QRD,ST(1),12) S BDATE=$P(TEMP,ST(2),1),EDATE=$P(TEMP,ST(2),2)
"RTN","MCORMN",24,0)
 S BDATE=$$FMDATE^HLFNC(BDATE),EDATE=$$FMDATE^HLFNC(EDATE)
"RTN","MCORMN",25,0)
 S RAP=$P(MSH,ST(1),3)
"RTN","MCORMN",26,0)
 S MCTDEC="^TMP(""MCAR1"",$J)",GLOBAL=1
"RTN","MCORMN",27,0)
 D HSUM(RAP,PATID,BDATE,EDATE,OCC,PROC,MSTR,MCTDEC,.GLOBAL,ATYPE)
"RTN","MCORMN",28,0)
 I GLOBAL=0 S ^TMP("MCAR1",$J,1)="" Q 0
"RTN","MCORMN",29,0)
 I GLOBAL'=0 D
"RTN","MCORMN",30,0)
 .S XMSUB="Medicine Response",XMDUN="Medicine",XMDUZ=.5
"RTN","MCORMN",31,0)
 .S XMTEXT="^TMP(""MCAR1"",$J,",XMY("G.MC MESSAGING SERVER")=""
"RTN","MCORMN",32,0)
 .;S XMY(DUZ)=""
"RTN","MCORMN",33,0)
 .D ^XMD
"RTN","MCORMN",34,0)
 .S GLOBAL=+$G(XMZ)
"RTN","MCORMN",35,0)
 D KILL^XM
"RTN","MCORMN",36,0)
 K ^TMP("MCAR1",$J)
"RTN","MCORMN",37,0)
 Q GLOBAL
"RTN","MCORMN",38,0)
ERROR ;HL7 Messaging Error
"RTN","MCORMN",39,0)
 D KILL^XM Q
"RTN","MCORMN",40,0)
SERVER ;A do nothing routine
"RTN","MCORMN",41,0)
 Q
"RTN","MCORMN",42,0)
HSUM(RAP,PATID,BDATE,EDATE,OCC,PE,MSTR,MCTDEC,GLOBAL,ATYPE) ;Sending Message Builder
"RTN","MCORMN",43,0)
 N LOC,REC,RNF,SNF,SAP,MST,PCI,VID,MCDFN,TMP,ENDDATE,BEGDATE,MCIMAGE
"RTN","MCORMN",44,0)
 N LOOP,DFN,COUNT,MCPROC,MCFILE,PREC,SENDATE,FILE,MCREC,MCDEST
"RTN","MCORMN",45,0)
 N MCER,MCERR,MCVAL,TEMP,WH,S5
"RTN","MCORMN",46,0)
 I +PATID'=PATID S GLOBAL=0 Q
"RTN","MCORMN",47,0)
 I '$D(^MCAR(690,"AC",PATID))&('$D(^MDD(702,"B",PATID))) S GLOBAL=0 Q
"RTN","MCORMN",48,0)
 I PE'="" D
"RTN","MCORMN",49,0)
 .S S5=+$O(^MCAR(697.2,"B",PE,0))
"RTN","MCORMN",50,0)
 .S S5=$P($G(^MCAR(697.2,S5,0)),U,2)
"RTN","MCORMN",51,0)
 .I S5="" S PE="" K S5
"RTN","MCORMN",52,0)
 S MCVAL=DUZ(2),REC=$$FIND1^DIC(4,"","X",MCVAL,"D","","MCER")
"RTN","MCORMN",53,0)
 S LOC=$S(+REC:$$GET1^DIQ(4,+REC_",",.01),1:"")
"RTN","MCORMN",54,0)
 S (RNF,SNF)=LOC
"RTN","MCORMN",55,0)
 S SAP="Medicine",MST="HS",PCI="P"
"RTN","MCORMN",56,0)
 S VID=$P($T(+2),";",3),MCDFN=PATID,MCLINE=0
"RTN","MCORMN",57,0)
 S:EDATE="" EDATE=9999999.9999
"RTN","MCORMN",58,0)
 S:BDATE="" BDATE=0
"RTN","MCORMN",59,0)
 S:+OCC=0 OCC=999999
"RTN","MCORMN",60,0)
 I EDATE<BDATE S TEMP=EDATE,EDATE=BDATE,BDATE=TEMP
"RTN","MCORMN",61,0)
 S ENDDATE=(9999999.9999-EDATE)-.00001
"RTN","MCORMN",62,0)
 S BEGDATE=(9999999.9999-BDATE)+.00001
"RTN","MCORMN",63,0)
 S LOOP=ENDDATE,COUNT=0
"RTN","MCORMN",64,0)
 N L,LL,LL1,K,M,PE,REC,S1,S2,S4,S6
"RTN","MCORMN",65,0)
 N MCARCODE,MCARFILE,MCARPSUM,MCARSUM,MCESKEY,MCESON,MCSUP,MCESSEC
"RTN","MCORMN",66,0)
 S MCIMAGE=""
"RTN","MCORMN",67,0)
 K ^TMP("MCAR",$J)
"RTN","MCORMN",68,0)
 S DFN=PATID,WH="P" D ^MCARPS1
"RTN","MCORMN",69,0)
PROCN ;
"RTN","MCORMN",70,0)
 N MCRESULT,MDHOLDR,MCROU
"RTN","MCORMN",71,0)
 I $$PATCH^XPDUTL("MD*1.0*2")!('$$FIND1^DIC(9.4,"","MX","MEDICINE")) D
"RTN","MCORMN",72,0)
 .S MDRDV=1 K ^TMP("MDPLST",$J)
"RTN","MCORMN",73,0)
 .S MCRESULT=$NA(^TMP("MDPLST",$J)) N MCLP,MCLP1,MCXG
"RTN","MCORMN",74,0)
 .S MCROU="D GET702^MDPS3(.MCRESULT,PATID,"""",BDATE,EDATE,OCC)"
"RTN","MCORMN",75,0)
 .X MCROU
"RTN","MCORMN",76,0)
 .S MCLP="" F  S MCLP=$O(^TMP("MDPLST",$J,MCLP)) Q:MCLP=""  S MCLP1="" F  S MCLP1=$O(^TMP("MDPLST",$J,MCLP,MCLP1)) Q:MCLP1=""  S MCXG=$G(^(MCLP1)) D
"RTN","MCORMN",77,0)
 ..S:$G(^TMP("MCAR",$J,MCLP,MCLP1))="" ^TMP("MCAR",$J,MCLP,MCLP1)=MCXG
"RTN","MCORMN",78,0)
 .K ^TMP("MDPLST",$J)
"RTN","MCORMN",79,0)
 S MCPROC="",COUNT=0 N MCG
"RTN","MCORMN",80,0)
 F  S MCPROC=$O(^TMP("MCAR",$J,MCPROC)) Q:MCPROC=""  D
"RTN","MCORMN",81,0)
 .S MCDTIME=ENDDATE
"RTN","MCORMN",82,0)
 .F  S MCDTIME=$O(^TMP("MCAR",$J,MCPROC,MCDTIME)) Q:MCDTIME=""  Q:COUNT'<OCC  Q:MCDTIME>BEGDATE  S MCG=$G(^(MCDTIME)) D
"RTN","MCORMN",83,0)
 ..S MCREC=$P(MCG,U,2) Q:+MCREC=0
"RTN","MCORMN",84,0)
 ..S MCDEST=MCTDEC,SENDATE=9999999.9999-MCDTIME,MDHOLDR=MCPROC
"RTN","MCORMN",85,0)
 ..I +$G(BDATE) Q:SENDATE<+$G(BDATE)
"RTN","MCORMN",86,0)
 ..I +$G(EDATE) Q:SENDATE>+$G(EDATE)
"RTN","MCORMN",87,0)
 ..I $P(MCG,U,4)["MDPS1" S MCARGDA=+$P(MCG,U,2) Q:'MCARGDA  D PR690 S COUNT=COUNT+1,MCPROC=MDHOLDR Q
"RTN","MCORMN",88,0)
 ..S PREC=$O(^MCAR(697.2,"B",MCPROC,"")) Q:PREC=""
"RTN","MCORMN",89,0)
 ..S FILE=$P($G(^MCAR(697.2,PREC,0)),U,2) Q:FILE=""
"RTN","MCORMN",90,0)
 ..S MCFILE=+$P(FILE,"MCAR(",2)
"RTN","MCORMN",91,0)
 ..S MCERR=$$BUILD^MCORMN0(RAP,DFN,SAP,SNF,RNF,MST,PCI,VID,.MCLINE,MSTR,MCDEST,MCPROC,MCFILE,MCREC,SENDATE,ATYPE)
"RTN","MCORMN",92,0)
 ..S:MCERR=0 COUNT=COUNT+1
"RTN","MCORMN",93,0)
 K ^TMP("MCAR",$J),^TMP("MDPTXT",$J),MCPRO,MCARPPS,MCARGRTN,MDT,MDHDR,MDRDV
"RTN","MCORMN",94,0)
 Q
"RTN","MCORMN",95,0)
PR690 ; Set node for CP Reports
"RTN","MCORMN",96,0)
 N HLECH,MCRREC,ST
"RTN","MCORMN",97,0)
 S MCPRO=$P(MCG,U,11),MCARPPS=$P(MCG,U,3,4),MCARGRTN=$P(MCG,U,5),MDT="RD",MDHDR=1
"RTN","MCORMN",98,0)
 S HLECH=$E(MSTR,2,4) D SLIP^MCORMN0(MSTR)
"RTN","MCORMN",99,0)
 D SETNODE(MCDEST,$$MSH^MCORMN01(MCPROC,SAP,SNF,RAP,RNF,MST,PCI,VID))
"RTN","MCORMN",100,0)
 D SETNODE(MCDEST,$$PID^MCORMN01(MCDFN))
"RTN","MCORMN",101,0)
 D SETNODE(MCDEST,$$OBR1(SENDATE,MCPROC,HLECH))
"RTN","MCORMN",102,0)
 D SETNODE(MCDEST,$$OBX1^MCORMN01("W","ST","702~.1~702.1^^DD",1,""))
"RTN","MCORMN",103,0)
 D @MCARPPS S MCRREC=$NA(^TMP("MDPTXT",$J))
"RTN","MCORMN",104,0)
 F  S MCRREC=$Q(@MCRREC) Q:MCRREC=""  Q:$QS(MCRREC,1)'="MDPTXT"  D
"RTN","MCORMN",105,0)
 .D SETNODE(MCTDEC,$G(@MCRREC))
"RTN","MCORMN",106,0)
 D SETNODE(MCDEST,"||")
"RTN","MCORMN",107,0)
 Q
"RTN","MCORMN",108,0)
OBR1(SDATE,MCPROC,HLECH) ; OBX Messaging Line
"RTN","MCORMN",109,0)
 N LOOP,TEMP,TMP,STAT,STR
"RTN","MCORMN",110,0)
 S TMP="OTH"
"RTN","MCORMN",111,0)
 S STAT="COMPLETE"
"RTN","MCORMN",112,0)
 S TEMP=$$CONVERT^MCORMN01("D",SDATE),STR="OBR",$P(STR,ST(1),8)=TEMP
"RTN","MCORMN",113,0)
 S $P(STR,ST(1),16)=TMP,$P(STR,ST(1),26)=STAT
"RTN","MCORMN",114,0)
 Q STR
"RTN","MCORMN",115,0)
SETNODE(NODE,VALUE) ; Set the node with the HL7 message string
"RTN","MCORMN",116,0)
 S MCLINE=MCLINE+1,@NODE@(MCLINE,0)=VALUE
"RTN","MCORMN",117,0)
 Q
"RTN","MCORMN",118,0)
HL1(MCSAP,MCDFN,MCB,MCE,MCOCC,MCTYP) ; Alternate Entry Point for Data View
"RTN","MCORMN",119,0)
 N MSH,TEMP,ORD,ST,MSTR,BDATE,EDATE,OCC,PROC,PATID,MCTDEC,XMZ,MCLINE
"RTN","MCORMN",120,0)
 N QDT,QFC,QP,QID,RAP,GNODE,ATYPE
"RTN","MCORMN",121,0)
 S GLOBAL=1 K ^TMP("MCAR1",$J)
"RTN","MCORMN",122,0)
 D HSUM(MCSAP,MCDFN,MCB,MCE,MCOCC,"","|^~\&|","^TMP(""MCAR1"",$J)",.GLOBAL,MCTYP)
"RTN","MCORMN",123,0)
 I GLOBAL=0 S ^TMP("MCAR1",$J,1,0)=""
"RTN","MCORMN",124,0)
 Q
"RTN","MCORMN0")
0^15^B20182884^B20155309
"RTN","MCORMN0",1,0)
MCORMN0 ;WISC/DCB-HL7 MESSAGE BUILDER ;7/23/99  09:08
"RTN","MCORMN0",2,0)
 ;;1.0;CLINICAL PROCEDURES;**5**;Apr 01, 2004;Build 1
"RTN","MCORMN0",3,0)
 W !,"This is not a valid entry point" Q
"RTN","MCORMN0",4,0)
BUILD(RAP,MCDFN,SAP,SNF,RNF,MST,PCI,VID,MCLINE,MSTR,MCDEST,MCPROC,MCFILE,MCREC,SDATE,ATYPE) ; Build the message
"RTN","MCORMN0",5,0)
 K ^TMP("MCORMN",$J)
"RTN","MCORMN0",6,0)
 N MCERR,MCOR,MCOR1,MCOR2,MCOR3,MCOR4,MSE,OBR,HLECH
"RTN","MCORMN0",7,0)
 N LOOP,MCDS,ST,MSE,MCHOLD,MCHOLD
"RTN","MCORMN0",8,0)
 S MSE=0,HLECH=$E(MSTR,2,4) D SLIP(MSTR)
"RTN","MCORMN0",9,0)
 S MCHOLD=+$O(^MCAR(697.2,"B",MCPROC,""))
"RTN","MCORMN0",10,0)
 S MCHOLD=$P($G(^MCAR(697.2,MCHOLD,0)),U,8)
"RTN","MCORMN0",11,0)
 S MCERR=$$GETDATA^MCORMN1(MCPROC,MCREC,"^TMP(""MCORMN"",$J)",MCFILE,ATYPE) Q:MCERR=0 1
"RTN","MCORMN0",12,0)
 S MCHOLD=$S(MCHOLD="":MCPROC,1:MCHOLD)
"RTN","MCORMN0",13,0)
 D SETNODE(MCDEST,$$MSH^MCORMN01(MCHOLD,SAP,SNF,RAP,RNF,MST,PCI,VID))
"RTN","MCORMN0",14,0)
 D SETNODE(MCDEST,$$PID^MCORMN01(MCDFN))
"RTN","MCORMN0",15,0)
 D SETNODE(MCDEST,$$OBR1^MCORMN01(SDATE,MCPROC,MCREC,MCFILE)) S OBR=MCLINE
"RTN","MCORMN0",16,0)
 S MCOR1=""
"RTN","MCORMN0",17,0)
 F  S MCOR1=$O(^TMP("MCORMN",$J,"E",MCOR1)) Q:MCOR1=""  D
"RTN","MCORMN0",18,0)
 .S MCOR2=""
"RTN","MCORMN0",19,0)
 .F  S MCOR2=$O(^TMP("MCORMN",$J,"E",MCOR1,MCOR2)) Q:MCOR2=""  D
"RTN","MCORMN0",20,0)
 ..S MCOR3=""
"RTN","MCORMN0",21,0)
 ..F  S MCOR3=$O(^TMP("MCORMN",$J,"E",MCOR1,MCOR2,MCOR3)) Q:MCOR3=""  D
"RTN","MCORMN0",22,0)
 ...D GETDATA(RAP,MCDEST,OBR,MCOR1,MCOR2,MCOR3)
"RTN","MCORMN0",23,0)
 I +$P($G(^MCAR(MCFILE,MCREC,2005,0)),U,4)>0 D
"RTN","MCORMN0",24,0)
 .N OBI,OBR,OSI,VTI,UNT,RNG
"RTN","MCORMN0",25,0)
 .S OBI=MCFILE_ST(3)_"2005"_ST(3)_"P"_ST(2)_"IMAGES?"_ST(2)_"DD"
"RTN","MCORMN0",26,0)
 .S OBR="Images are associated with this procedure"
"RTN","MCORMN0",27,0)
 .S OSI="",VTI="",FILETYPE="P",UNT="",RNG=""
"RTN","MCORMN0",28,0)
 .D SETOBX1(FILETYPE,VTI,OBI,OSI,OBR),SETOBX2(UNT,RNG)
"RTN","MCORMN0",29,0)
 Q 0
"RTN","MCORMN0",30,0)
GETDATA(RAP,MCDEST,OBR,MCOR1,MCOR2,MCOR3) ; Process the Data
"RTN","MCORMN0",31,0)
 N TMP1,TMP,HL7,TYPE
"RTN","MCORMN0",32,0)
 S TMP=$G(^TMP("MCORMN",$J,"F",MCOR1,MCOR3,0))
"RTN","MCORMN0",33,0)
 S HL7=$G(^TMP("MCORMN",$J,"F",MCOR1,MCOR3,1))
"RTN","MCORMN0",34,0)
 S TYPE=$P(HL7,U,7)
"RTN","MCORMN0",35,0)
 I (TYPE'="OBR"),(TYPE'="INFO"),(RAP="Health Summary") S TYPE="DD"
"RTN","MCORMN0",36,0)
 Q:(TYPE="INFO")!(TYPE="MISC")!(TYPE="")
"RTN","MCORMN0",37,0)
 S TMP1="D "_TYPE_"(TMP,HL7,OBR,MCOR1,MCOR2,MCOR3)" X TMP1
"RTN","MCORMN0",38,0)
 Q
"RTN","MCORMN0",39,0)
ICD9(TMP,HL7,OBX,MCOR1,MCOR2,MCOR3) ; This is the ICD9 message builder for OBX
"RTN","MCORMN0",40,0)
 N OID,VT1,UNT,OSI,OBI,RNG,RST,DA,DIC,DR,DIQ,XTMP,CONT
"RTN","MCORMN0",41,0)
 S OBI="ICD9",OSI="",MST=$G(MST)+1,OSI=MST,CONT=""
"RTN","MCORMN0",42,0)
 S VTI=$P(HL7,U,2) S:VTI="" VTI="CE"
"RTN","MCORMN0",43,0)
 S UNT="",RNG="",RST=$G(^TMP("MCORMN",$J,"E",MCOR1,MCOR2,MCOR3,1)) Q:RST=""
"RTN","MCORMN0",44,0)
 ;S DA=$O(^ICD9("B",RST,"")) Q:DA=""
"RTN","MCORMN0",45,0)
 Q
"RTN","MCORMN0",46,0)
 S DIC="^ICD9(",DR=".01;3",DIQ="XTMP(" D EN^DIQ1
"RTN","MCORMN0",47,0)
 S RST=XTMP(80,DA,.01)_ST(2)_XTMP(80,DA,3)_ST(2)_"ICD9"
"RTN","MCORMN0",48,0)
 D SETOBX1("",VTI,OBI,OSI,RST)
"RTN","MCORMN0",49,0)
 Q
"RTN","MCORMN0",50,0)
ASTM(TMP,HL7,OBX,MCOR1,MCOR2,MCOR3) ; This is the ASTM message builder for OBX
"RTN","MCORMN0",51,0)
 N ASTM,ASTME,VTI,UNT,RNG,RST,OSI,OBI,FILETYPE
"RTN","MCORMN0",52,0)
 S FILETYPE=$P(TMP,U,2),OSI=""
"RTN","MCORMN0",53,0)
 S ASTM=$P(HL7,U,1),ASTME=$G(^MCAR(690.5,ASTM,0))
"RTN","MCORMN0",54,0)
 S ASTM=$P(ASTME,U,1)_$P(ASTME,U,2),VTI=$P(HL7,U,2)
"RTN","MCORMN0",55,0)
 S OBI=ASTM_ST(2)_$P(ASTME,U,3)_ST(2)_"CPT4"
"RTN","MCORMN0",56,0)
 S UNT=$P(HL7,U,3),RNG=$P(HL7,U,4)
"RTN","MCORMN0",57,0)
 D RDATA(VTI,OBI,OSI,UNT,RNG,FILETYPE,MCOR1,MCOR2,MCOR3)
"RTN","MCORMN0",58,0)
 Q
"RTN","MCORMN0",59,0)
SUM(TMP,HL7,OBX,MCOR1,MCOR2,MCOR3) ; This is the miss. message builder for OBX
"RTN","MCORMN0",60,0)
 N FILETYPE,VTI,UNT,RNG,RST,OSI,OBI
"RTN","MCORMN0",61,0)
 S FILETYPE=$P(TMP,U,2),OSI=""
"RTN","MCORMN0",62,0)
 S OBI="SST",(UNT,RNG)="",OSI=""
"RTN","MCORMN0",63,0)
 S VTI="TX"
"RTN","MCORMN0",64,0)
 D RDATA(VTI,OBI,OSI,UNT,RNG,FILETYPE,MCOR1,MCOR2,MCOR3)
"RTN","MCORMN0",65,0)
 Q
"RTN","MCORMN0",66,0)
DD(TMP,HL7,OBX,MCOR1,MCOR2,MCOR3) ; This is the DD mesage builder for OBX
"RTN","MCORMN0",67,0)
 N FLDNAME,VTI,OBI,OSI,UNT,RNG,FILETYPE,FLDNAME
"RTN","MCORMN0",68,0)
 S FILETYPE=$P(TMP,U,2),FLDNAME=$P(TMP,"^",1),OSI=""
"RTN","MCORMN0",69,0)
 S VTI=$P(HL7,U,2),OBI=MCOR1_ST(3)_MCOR3_ST(3)_FILETYPE_ST(2)_FLDNAME_ST(2)_"DD"
"RTN","MCORMN0",70,0)
 S UNT=$P(HL7,U,3),RNG=$P(HL7,U,4)
"RTN","MCORMN0",71,0)
 D RDATA(VTI,OBI,OSI,UNT,RNG,FILETYPE,MCOR1,MCOR2,MCOR3)
"RTN","MCORMN0",72,0)
 Q
"RTN","MCORMN0",73,0)
OBR(TMP,HL7,OBX,MCOR1,MCOR2,MCOR3) ; This is the OBR add on message
"RTN","MCORMN0",74,0)
 N RST,PIECE,FILETYPE
"RTN","MCORMN0",75,0)
 S FILETYPE=$P(TMP,U,2),RST=$G(^TMP("MCORMN",$J,"E",MCOR1,MCOR2,MCOR3,1))
"RTN","MCORMN0",76,0)
 S RST=$$CONVERT^MCORMN01(FILETYPE,RST),PIECE=$P(HL7,U,6)+1
"RTN","MCORMN0",77,0)
 S $P(@MCDEST@(OBX),ST(1),PIECE)=RST
"RTN","MCORMN0",78,0)
 Q
"RTN","MCORMN0",79,0)
RDATA(VTI,OBI,OSI,UNT,RNG,FILETYPE,MCOR1,MCOR2,MCOR3) ;
"RTN","MCORMN0",80,0)
 N MCOR4,CONT,LEN,RSTT,TEMP,COUNT,END,RST,CNT,LOOP,LOOP2,X,DIWL,DIWR,DIWF
"RTN","MCORMN0",81,0)
 S MCOR4=""
"RTN","MCORMN0",82,0)
 F LOOP=1:1 S MCOR4=$O(^TMP("MCORMN",$J,"E",MCOR1,MCOR2,MCOR3,MCOR4)) Q:MCOR4=""  D
"RTN","MCORMN0",83,0)
 .S X=^TMP("MCORMN",$J,"E",MCOR1,MCOR2,MCOR3,MCOR4)
"RTN","MCORMN0",84,0)
 .;I $L(X)>80 D WP
"RTN","MCORMN0",85,0)
 .I $L(X)>80 D
"RTN","MCORMN0",86,0)
 ..D WP
"RTN","MCORMN0",87,0)
 .E  D
"RTN","MCORMN0",88,0)
 ..D:LOOP=1 SETOBX1(FILETYPE,VTI,OBI,OSI,X)
"RTN","MCORMN0",89,0)
 ..D:LOOP'=1 SETNODE(MCDEST,X)
"RTN","MCORMN0",90,0)
 D SETOBX2(UNT,RNG)
"RTN","MCORMN0",91,0)
 Q
"RTN","MCORMN0",92,0)
WP ;
"RTN","MCORMN0",93,0)
 K ^UTILITY($J,"W") S DIWL=0,DIWR=80,DIWF="" D ^DIWP
"RTN","MCORMN0",94,0)
 S CNT=^UTILITY($J,"W",0)
"RTN","MCORMN0",95,0)
 F LOOP2=1:1:CNT S RST=^UTILITY($J,"W",0,LOOP2,0) D
"RTN","MCORMN0",96,0)
 .I (LOOP2>1)!(LOOP>1) D SETNODE(MCDEST,RST)
"RTN","MCORMN0",97,0)
 .E  D SETOBX1(FILETYPE,VTI,OBI,OSI,RST)
"RTN","MCORMN0",98,0)
 K ^UTILITY($J,"W")
"RTN","MCORMN0",99,0)
 Q
"RTN","MCORMN0",100,0)
SETOBX1(FILETYPE,VTI,OBI,OSI,OBR) ; Sets the first part of QBX line
"RTN","MCORMN0",101,0)
 S:VTI="" VTI="ST"
"RTN","MCORMN0",102,0)
 S:OSI="" (MSE,OSI)=$G(MSE)+1
"RTN","MCORMN0",103,0)
 D SETNODE(MCDEST,$$OBX1^MCORMN01(FILETYPE,VTI,OBI,OSI,OBR))
"RTN","MCORMN0",104,0)
 Q
"RTN","MCORMN0",105,0)
SETOBX2(RNG,UNT) ;Sets the second part of OBX line
"RTN","MCORMN0",106,0)
 S @MCDEST@(MCLINE,0)=@MCDEST@(MCLINE,0)_$$OBX2^MCORMN01(RNG,UNT)
"RTN","MCORMN0",107,0)
 Q
"RTN","MCORMN0",108,0)
SETNODE(NODE,VALUE) ;Set the node with the HL7 message string
"RTN","MCORMN0",109,0)
 S MCLINE=MCLINE+1,@NODE@(MCLINE,0)=VALUE
"RTN","MCORMN0",110,0)
 Q
"RTN","MCORMN0",111,0)
SLIP(MSTR) ;Seperate the delimiters
"RTN","MCORMN0",112,0)
 F LOOP=1:1:5 S ST(LOOP)=$E(MSTR,LOOP,LOOP)
"RTN","MCORMN0",113,0)
 Q
"RTN","MCORMN01")
0^16^B4360683^B4178975
"RTN","MCORMN01",1,0)
MCORMN01 ;WISC/DCB-HL7 MESSAGE BUILDER PART 2 ;5/2/96  13:30
"RTN","MCORMN01",2,0)
 ;;1.0;CLINICAL PROCEDURES;**5**;Apr 01, 2004;Build 1
"RTN","MCORMN01",3,0)
 ; Reference IA #10106 for HLFNC calls.
"RTN","MCORMN01",4,0)
 ;              #10061 for VADPT call.
"RTN","MCORMN01",5,0)
 W !,"This is not a valid entry point" Q
"RTN","MCORMN01",6,0)
MSH(PROC,SAP,SNF,RAP,RNF,MST,PCI,VID) ;MSH Messaging Line
"RTN","MCORMN01",7,0)
 N MSH,Y,%,%I
"RTN","MCORMN01",8,0)
 D NOW^%DTC
"RTN","MCORMN01",9,0)
 S $P(MSH,ST(1),8)=$$CONVERT("D",%)
"RTN","MCORMN01",10,0)
 S MSH="MSH"_MSTR,$P(MSH,ST(1),3)=PROC_ST(2)_SAP,$P(MSH,ST(1),4)=SNF
"RTN","MCORMN01",11,0)
 S $P(MSH,ST(1),5)=RAP,$P(MSH,ST(1),6)=RNF,$P(MSH,ST(1),9)=MST
"RTN","MCORMN01",12,0)
 S $P(MSH,ST(1),10)=PCI,$P(MSH,ST(1),11)=VID
"RTN","MCORMN01",13,0)
 Q MSH
"RTN","MCORMN01",14,0)
PID(DFN) ;PID Messaging Line
"RTN","MCORMN01",15,0)
 N PID,VADM,SSN,PTN,DOB,SEX,LOOP
"RTN","MCORMN01",16,0)
 D DEM^VADPT
"RTN","MCORMN01",17,0)
 S SSN=$$M11^HLFNC($P(VADM(2),U,1)),PTN=$$CONVERT("P200",VADM(1))
"RTN","MCORMN01",18,0)
 S DOB=$$CONVERT("D",$P(VADM(3),U))
"RTN","MCORMN01",19,0)
 S SEX=$P(VADM(5),U)
"RTN","MCORMN01",20,0)
 S PID="PID",$P(PID,ST(1),4)=SSN
"RTN","MCORMN01",21,0)
 S $P(PID,ST(1),7)=PTN,$P(PID,ST(1),8)=DOB,$P(PID,ST(1),9)=SEX
"RTN","MCORMN01",22,0)
 Q PID
"RTN","MCORMN01",23,0)
OBX1(FILETYPE,VTI,OBI,OSI,OBR) ; ODX Messaging Line
"RTN","MCORMN01",24,0)
 N OBX
"RTN","MCORMN01",25,0)
 S OBR=$$CONVERT(FILETYPE,OBR)
"RTN","MCORMN01",26,0)
 S OBX="OBX",$P(OBX,ST(1),3)=VTI
"RTN","MCORMN01",27,0)
 S $P(OBX,ST(1),4)=OBI,$P(OBX,ST(1),5)=OSI,$P(OBX,ST(1),6)=OBR
"RTN","MCORMN01",28,0)
 Q OBX
"RTN","MCORMN01",29,0)
OBX2(UNT,RNG) ; ODX Messaging Line
"RTN","MCORMN01",30,0)
 N OBX
"RTN","MCORMN01",31,0)
 S OBX=""
"RTN","MCORMN01",32,0)
 S $P(OBX,ST(1),2)=UNT,$P(OBX,ST(1),3)=RNG
"RTN","MCORMN01",33,0)
 Q OBX
"RTN","MCORMN01",34,0)
OBR1(SDATE,MCPROC,REC,FILE) ; OBX Messaging Line
"RTN","MCORMN01",35,0)
 N LOOP,TEMP,TMP,STAT,STR
"RTN","MCORMN01",36,0)
 S TMP=+$O(^MCAR(697.2,"B",MCPROC,""))
"RTN","MCORMN01",37,0)
 S:'TMP TMP=$P($G(^MCAR(697.2,TMP,0)),U,4)
"RTN","MCORMN01",38,0)
 S TMP=$S(TMP="C":"EC",TMP="H":"HM",TMP["P":"PF",1:"OTH")
"RTN","MCORMN01",39,0)
 S STAT=$P($G(^MCAR(MCFILE,REC,"ES")),U,7)
"RTN","MCORMN01",40,0)
 S STAT=$S(STAT="RNV":"R",STAT="RV":"F",STAT="ROV":"F",STAT["D":"P",1:"")
"RTN","MCORMN01",41,0)
 S TEMP=$$CONVERT("D",SDATE),STR="OBR",$P(STR,ST(1),8)=TEMP
"RTN","MCORMN01",42,0)
 S $P(STR,ST(1),16)=TMP,$P(STR,ST(1),26)=STAT
"RTN","MCORMN01",43,0)
 Q STR
"RTN","MCORMN01",44,0)
CONVERT(FILETYPE,RST) ;Convert Fileman to HL7
"RTN","MCORMN01",45,0)
 N TEMP
"RTN","MCORMN01",46,0)
 S TEMP=RST
"RTN","MCORMN01",47,0)
 I FILETYPE["D" D
"RTN","MCORMN01",48,0)
 .S TEMP=$$HLDATE^HLFNC(RST,"TS")
"RTN","MCORMN01",49,0)
 S:(FILETYPE["P200")!(FILETYPE["P690") TEMP=$$HLNAME^HLFNC(RST)
"RTN","MCORMN01",50,0)
 Q TEMP
"RTN","MDCVT")
0^5^B81652612^n/a
"RTN","MDCVT",1,0)
MDCVT ; HOIFO/DP/NCA - Medicine Package Conversion ;10/20/04  12:49
"RTN","MDCVT",2,0)
 ;;1.0;CLINICAL PROCEDURES;**5**;Apr 01, 2004;Build 1
"RTN","MDCVT",3,0)
 ; Integration Agreements:
"RTN","MDCVT",4,0)
 ; IA# 2263 [Supported] XPAR parameter calls.
"RTN","MDCVT",5,0)
 ; IA# 2320 [Supported] %ZISH calls.
"RTN","MDCVT",6,0)
 ; IA#10031 [Supported] DDS call to bring up Screen Man
"RTN","MDCVT",7,0)
 ;
"RTN","MDCVT",8,0)
EN ; [Procedure] Main entry point to convert database to TIU notes
"RTN","MDCVT",9,0)
 N MDCNVT,MDDIR,MDFILE,MDREC,MDTEST,MDTIUI,MDXR,ORHFS,X,Y
"RTN","MDCVT",10,0)
 S (MDCNVT("CR"),MDCNVT("CT"),MDCNVT("E"),MDCNVT("S"),MDCNVT("TOT"))=0
"RTN","MDCVT",11,0)
 I $$GET^XPAR("SYS","MD MEDICINE CONVERTED",1) W !!,"Already Converted" Q
"RTN","MDCVT",12,0)
 I '$P($G(^MDD(703.9,1,0)),U,3) W !!,"No Administrative Closure Person." Q
"RTN","MDCVT",13,0)
 S MDTEST=+$P($G(^MDD(703.9,1,0)),U,2)'=1
"RTN","MDCVT",14,0)
 S MDXR=$O(^MDD(703.9,1,2,"AS","")) I MDXR="" W !!,"No Conversion List.  Run Build Conversion List option." Q
"RTN","MDCVT",15,0)
 ;
"RTN","MDCVT",16,0)
 W @IOF,!,"Medicine to Clinical Procedure Conversion"
"RTN","MDCVT",17,0)
 K DIR S DIR(0)="YA"
"RTN","MDCVT",18,0)
 S DIR("A")="Ok to continue? "
"RTN","MDCVT",19,0)
 S DIR("A",1)="Running conversion in "_$S(MDTEST:"TEST",1:"REAL")_" mode.",DIR("B")="NO" D ^DIR K DIR Q:$D(DIRUT)!$D(DIROUT)!(Y<1)
"RTN","MDCVT",20,0)
 ;
"RTN","MDCVT",21,0)
 ; Set up the HFS variables
"RTN","MDCVT",22,0)
 S MDFILE="MDCVT.TXT",MDDIR=$P($G(^MDD(703.9,1,.1)),U)
"RTN","MDCVT",23,0)
 S X=$$TESTHFS() I '+X W !!,"HFS Device Error: ",$P(X,U,2) Q
"RTN","MDCVT",24,0)
 ;
"RTN","MDCVT",25,0)
 ; Last Chance
"RTN","MDCVT",26,0)
 W ! K DIR S DIR(0)="YA"
"RTN","MDCVT",27,0)
 S DIR("A")="Ready to "_$S(MDTEST:"test the conversion of",1:"convert")_" the Medicine Files? "
"RTN","MDCVT",28,0)
 S DIR("B")="NO" D ^DIR K DIR Q:$D(DIRUT)!$D(DIROUT)!(Y<1)
"RTN","MDCVT",29,0)
 ;
"RTN","MDCVT",30,0)
 ; See if previous errors need to be reset
"RTN","MDCVT",31,0)
 W !!,"Conversion in progress...",!
"RTN","MDCVT",32,0)
 D RESET
"RTN","MDCVT",33,0)
 ;
"RTN","MDCVT",34,0)
 ; Set MDREC up here - This prevents loss on M error trap in EN1
"RTN","MDCVT",35,0)
 S MDREC=0
"RTN","MDCVT",36,0)
 ;
"RTN","MDCVT",37,0)
 W !?5,"[.] Indicates converted record"
"RTN","MDCVT",38,0)
 W !?5,"[*] Indicates error in record",!!
"RTN","MDCVT",39,0)
 ;
"RTN","MDCVT",40,0)
EN1 ; [Procedure] Resumes on error via $ETRAP variable
"RTN","MDCVT",41,0)
 N $ESTACK,$ETRAP S $ETRAP="ERR^MDCVT"
"RTN","MDCVT",42,0)
 N MDCONS,MDECON,MDFDA,MDNODE,MDNOTE,MDOK,MDPR,MDR,MDR1,MDSTUD,MDUSR,MDX1
"RTN","MDCVT",43,0)
 F  S MDREC=$O(^MDD(703.9,1,2,"AS","R",MDREC)) Q:'MDREC  D
"RTN","MDCVT",44,0)
 .S MDPTR=$$GET1^DIQ(703.92,MDREC_",1,",.01) Q:MDPTR=""
"RTN","MDCVT",45,0)
 .S MDGBL=U_$P(MDPTR,";",2)_$P(MDPTR,";",1)_")"
"RTN","MDCVT",46,0)
 .S MDCNVT("TOT")=MDCNVT("TOT")+1
"RTN","MDCVT",47,0)
 .I '$P($G(^MDD(703.9,1,1,+$P(MDGBL,"(",2),0)),U,3) D  Q
"RTN","MDCVT",48,0)
 ..D SKIP(MDPTR,"Report type not marked for conversion")
"RTN","MDCVT",49,0)
 ..S MDCNVT("S")=MDCNVT("S")+1
"RTN","MDCVT",50,0)
 .S MDSTAT=$P($G(@MDGBL@("ES")),U,7)
"RTN","MDCVT",51,0)
 .I MDSTAT="" D  Q:'MDOK
"RTN","MDCVT",52,0)
 ..S MDOK=+$P($G(^MDD(703.9,1,1,+$P(MDGBL,"(",2),0)),U,4)
"RTN","MDCVT",53,0)
 ..D:'MDOK LOGERR(MDPTR,"Unable to determine status")
"RTN","MDCVT",54,0)
 .I MDSTAT="S" D SKIP(MDPTR,"Report Superseded") S MDCNVT("S")=MDCNVT("S")+1 Q
"RTN","MDCVT",55,0)
 .I MDSTAT["D" D LOGERR(MDPTR,"Report in Draft/Problem Draft status") Q
"RTN","MDCVT",56,0)
 .;I MDSTAT="RNV" D LOGERR(MDPTR,"Report not verified") Q
"RTN","MDCVT",57,0)
 .I MDTEST W "." ; Progress indicator
"RTN","MDCVT",58,0)
 .;
"RTN","MDCVT",59,0)
 .; Produce report using HFS device MDHFS
"RTN","MDCVT",60,0)
 .S %ZIS("HFSNAME")=MDDIR_MDFILE,%ZIS("HFSMODE")="W",IOP="MDHFS;P-MDHFS"
"RTN","MDCVT",61,0)
 .D ^%ZIS I POP D LOGERR(MDPTR,"No HFS Access or device MDHFS") Q
"RTN","MDCVT",62,0)
 .S ORHFS="SCRATCH"
"RTN","MDCVT",63,0)
 .U IO D EN^MCAPI(MDPTR,0) D ^%ZISC
"RTN","MDCVT",64,0)
 .;
"RTN","MDCVT",65,0)
 .; Fetch the report text
"RTN","MDCVT",66,0)
 .K ^TMP($J)
"RTN","MDCVT",67,0)
 .S X=$$FTG^%ZISH(MDDIR,MDFILE,$NA(^TMP($J,1)),2)
"RTN","MDCVT",68,0)
 .;
"RTN","MDCVT",69,0)
 .; Delete the Host File
"RTN","MDCVT",70,0)
 .S DELETE(MDFILE)=""
"RTN","MDCVT",71,0)
 .S X=$$DEL^%ZISH(MDDIR,"DELETE")
"RTN","MDCVT",72,0)
 .; Is it a valid report?
"RTN","MDCVT",73,0)
 .S LINES=$O(^TMP($J,""),-1)
"RTN","MDCVT",74,0)
 .S BYTES=0 F X=0:0 S X=$O(^TMP($J,X)) Q:'X  S BYTES=BYTES+$L(^(X))
"RTN","MDCVT",75,0)
 .I LINES<5&(^TMP($J,2)["BAD MEDICINE") D LOGERR(MDPTR,^TMP($J,2)) Q
"RTN","MDCVT",76,0)
 .;
"RTN","MDCVT",77,0)
 .; Get Legal header For Report
"RTN","MDCVT",78,0)
 .S RESULTS=$NA(^TMP($J)) D GETHDR^MDESPRT(.RESULTS,MDPTR)
"RTN","MDCVT",79,0)
 .;
"RTN","MDCVT",80,0)
 .; If test mode quit at this point
"RTN","MDCVT",81,0)
 .I MDTEST D FINISH(MDPTR,LINES,BYTES,"") S MDCNVT("CT")=MDCNVT("CT")+1 Q
"RTN","MDCVT",82,0)
 .;
"RTN","MDCVT",83,0)
 .; If real mode set to Unspecified Error status and proceed
"RTN","MDCVT",84,0)
 .;D LOGERR(MDPTR,"Unspecified Error")
"RTN","MDCVT",85,0)
 .S MDNODE=$G(^MDD(703.9,1,2,+MDREC,0))
"RTN","MDCVT",86,0)
 .S MDNODE=$P(MDNODE,U,1)
"RTN","MDCVT",87,0)
 .;
"RTN","MDCVT",88,0)
 .; Create the note
"RTN","MDCVT",89,0)
 .S MDTIUI=$$CONVERT^MDCVT1(MDNODE,$NA(^TMP($J)))
"RTN","MDCVT",90,0)
 .I +MDTIUI'>0 D LOGERR(MDPTR,"Couldn't create the TIU document") Q
"RTN","MDCVT",91,0)
 .;
"RTN","MDCVT",92,0)
 .; Update Consults and Imaging
"RTN","MDCVT",93,0)
 .;
"RTN","MDCVT",94,0)
 .D UPD^MDCVT1(MDGBL,MDNODE,MDTIUI,MDTEST)
"RTN","MDCVT",95,0)
 .;
"RTN","MDCVT",96,0)
 .; Flag as finished
"RTN","MDCVT",97,0)
 .;
"RTN","MDCVT",98,0)
 .D FINISH(MDPTR,LINES,BYTES,MDTIUI) S MDCNVT("CR")=MDCNVT("CR")+1
"RTN","MDCVT",99,0)
 ;
"RTN","MDCVT",100,0)
 D TOTALS^MDCVT1(.MDCNVT)
"RTN","MDCVT",101,0)
 Q
"RTN","MDCVT",102,0)
 ;
"RTN","MDCVT",103,0)
TESTHFS() ; Verify HFS is working properly
"RTN","MDCVT",104,0)
 N MDNOW
"RTN","MDCVT",105,0)
 S %ZIS("HFSNAME")=MDDIR_MDFILE,%ZIS("HFSMODE")="W",IOP="MDHFS;P-MDHFS"
"RTN","MDCVT",106,0)
 D ^%ZIS I POP W !,"No HFS Access or missing device MDHFS" Q 0
"RTN","MDCVT",107,0)
 S X=1 D  Q:'X 0
"RTN","MDCVT",108,0)
 .I IOT'="HFS" W !,"Device MDHFS not of type HFS" S X=0
"RTN","MDCVT",109,0)
 .I IOST'="P-MDHFS" W !,"Missing Terminal Type P-MDHFS" S X=0 Q
"RTN","MDCVT",110,0)
 .I IOSL'=88 W !,"Improper Page Length in Terminal Type P-MDHFS" S X=0
"RTN","MDCVT",111,0)
 .I IOM'=80 W !,"Improper Page Width in Terminal Type P-MDHFS" S X=0
"RTN","MDCVT",112,0)
 .I IOF'="#" W !,"Improper Form Feed in Terminal Type P-MDHFS" S X=0
"RTN","MDCVT",113,0)
 ;
"RTN","MDCVT",114,0)
 D NOW^%DTC S MDNOW=% K %
"RTN","MDCVT",115,0)
 U IO W !!,MDNOW
"RTN","MDCVT",116,0)
 D ^%ZISC
"RTN","MDCVT",117,0)
 ;
"RTN","MDCVT",118,0)
 ; Fetch the text
"RTN","MDCVT",119,0)
 K ^TMP($J)
"RTN","MDCVT",120,0)
 S X=$$FTG^%ZISH(MDDIR,MDFILE,$NA(^TMP($J,1)),2)
"RTN","MDCVT",121,0)
 I 'X W !,"Unable to retrieve data back from Host File" Q 0
"RTN","MDCVT",122,0)
 I ^TMP($J,3)'=MDNOW W !,"Error verifying data in Host File" Q 0
"RTN","MDCVT",123,0)
 ;
"RTN","MDCVT",124,0)
 ; Delete the Host File
"RTN","MDCVT",125,0)
 S DELETE(MDFILE)=""
"RTN","MDCVT",126,0)
 S X=$$DEL^%ZISH(MDDIR,"DELETE")
"RTN","MDCVT",127,0)
 I X'=1 W !,"Unable delete Host File" Q 0
"RTN","MDCVT",128,0)
 Q 1
"RTN","MDCVT",129,0)
 ;
"RTN","MDCVT",130,0)
ERR ; M Error trap submodule to document error and continue
"RTN","MDCVT",131,0)
 D LOGERR(MDPTR,$ECODE)
"RTN","MDCVT",132,0)
 I $G(ION)="MDHFS" D ^%ZISC ; Close device if using the HFS
"RTN","MDCVT",133,0)
 G EN1
"RTN","MDCVT",134,0)
 ;
"RTN","MDCVT",135,0)
FINISH(MDPTR,LINES,BYTES,TIUIEN) ; Update status to converted
"RTN","MDCVT",136,0)
 N MDFDA,MDIEN,MDIENS
"RTN","MDCVT",137,0)
 S MDIEN=$O(^MDD(703.9,1,2,"B",MDPTR,0))
"RTN","MDCVT",138,0)
 I MDIEN<1 W !,"Error, no log entry ",MDPTR Q
"RTN","MDCVT",139,0)
 S MDIENS=MDIEN_",1,"
"RTN","MDCVT",140,0)
 I MDTEST S MDFDA(703.92,MDIENS,.02)="CT"
"RTN","MDCVT",141,0)
 E  S MDFDA(703.92,MDIENS,.02)="CR"
"RTN","MDCVT",142,0)
 S MDFDA(703.92,MDIENS,.03)=TIUIEN
"RTN","MDCVT",143,0)
 S MDFDA(703.92,MDIENS,.04)=LINES
"RTN","MDCVT",144,0)
 S MDFDA(703.92,MDIENS,.05)=BYTES
"RTN","MDCVT",145,0)
 S MDFDA(703.92,MDIENS,.1)=LINES_" lines, "_BYTES_" bytes"
"RTN","MDCVT",146,0)
 D FILE^DIE("","MDFDA")
"RTN","MDCVT",147,0)
 Q
"RTN","MDCVT",148,0)
 ;
"RTN","MDCVT",149,0)
LOGERR(MDPTR,ERRMSG) ; Log conversion error
"RTN","MDCVT",150,0)
 N MDFDA,MDIEN,MDIENS
"RTN","MDCVT",151,0)
 S MDIEN=$O(^MDD(703.9,1,2,"B",MDPTR,0))
"RTN","MDCVT",152,0)
 I MDIEN<1 W !,"Error, no log entry ",MDPTR Q
"RTN","MDCVT",153,0)
 S MDIENS=MDIEN_",1,"
"RTN","MDCVT",154,0)
 S MDFDA(703.92,MDIENS,.02)="E"
"RTN","MDCVT",155,0)
 S MDFDA(703.92,MDIENS,.1)=$TR(ERRMSG,U,"~")
"RTN","MDCVT",156,0)
 D FILE^DIE("","MDFDA")
"RTN","MDCVT",157,0)
 W "*" ; Progress indicator
"RTN","MDCVT",158,0)
 Q
"RTN","MDCVT",159,0)
 ;
"RTN","MDCVT",160,0)
RESET ; Reset error status reports to READY TO CONVERT
"RTN","MDCVT",161,0)
 N MDIEN S MDIEN=0
"RTN","MDCVT",162,0)
 ; Check for real mode and convert test conversions
"RTN","MDCVT",163,0)
 I 'MDTEST F  S MDIEN=$O(^MDD(703.9,1,2,"AS","CT",MDIEN)) Q:'MDIEN  D
"RTN","MDCVT",164,0)
 .N MDFDA
"RTN","MDCVT",165,0)
 .S MDFDA(703.92,MDIEN_",1,",.02)="R"
"RTN","MDCVT",166,0)
 .D FILE^DIE("","MDFDA")
"RTN","MDCVT",167,0)
 ; Regardless of mode switch skipped back to ready
"RTN","MDCVT",168,0)
 F  S MDIEN=$O(^MDD(703.9,1,2,"AS","S",MDIEN)) Q:'MDIEN  D
"RTN","MDCVT",169,0)
 .N MDFDA
"RTN","MDCVT",170,0)
 .S MDFDA(703.92,MDIEN_",1,",.02)="R"
"RTN","MDCVT",171,0)
 .D FILE^DIE("","MDFDA")
"RTN","MDCVT",172,0)
 ; Regardless of mode switch errors back to ready
"RTN","MDCVT",173,0)
 F  S MDIEN=$O(^MDD(703.9,1,2,"AS","E",MDIEN)) Q:'MDIEN  D
"RTN","MDCVT",174,0)
 .N MDFDA
"RTN","MDCVT",175,0)
 .S MDFDA(703.92,MDIEN_",1,",.02)="R"
"RTN","MDCVT",176,0)
 .D FILE^DIE("","MDFDA")
"RTN","MDCVT",177,0)
 Q
"RTN","MDCVT",178,0)
 ;
"RTN","MDCVT",179,0)
REBUILD ; [Procedure] Build the file manually
"RTN","MDCVT",180,0)
 N MDROOT
"RTN","MDCVT",181,0)
 S X=$P(^MDD(703.9,0),U,1,2)_U_U K ^MDD(703.9) S ^MDD(703.9,0)=X
"RTN","MDCVT",182,0)
 S MDROOT=$NA(^MDD(703.9,1))
"RTN","MDCVT",183,0)
 S @MDROOT@(0)="DEFAULT"
"RTN","MDCVT",184,0)
 S @MDROOT@(1,0)="^703.91P^^"
"RTN","MDCVT",185,0)
 F X=691,691.1,691.5,691.6,691.7,691.8,694,694.5,698,698.1,698.2,698.3,699,699.5,700,701 S @MDROOT@(1,X,0)=X
"RTN","MDCVT",186,0)
 S DA=1,DIK="^MDD(703.9," D IXALL^DIK K DA,DIK
"RTN","MDCVT",187,0)
 Q
"RTN","MDCVT",188,0)
 ;
"RTN","MDCVT",189,0)
SETUP ; [Procedure] 
"RTN","MDCVT",190,0)
 I '$O(^MDD(703.9,0)) W !,"Initializing..." D REBUILD,SETDEF^MDSTATU
"RTN","MDCVT",191,0)
 S DDSFILE=703.9,DR="[MD MAIN]",DA=1 D ^DDS
"RTN","MDCVT",192,0)
 Q
"RTN","MDCVT",193,0)
 ;
"RTN","MDCVT",194,0)
SKIP(MDPTR,REASON) ; [Procedure] Skip Report
"RTN","MDCVT",195,0)
 N MDFDA,MDIEN,MDIENS
"RTN","MDCVT",196,0)
 S MDIEN=$O(^MDD(703.9,1,2,"B",MDPTR,0))
"RTN","MDCVT",197,0)
 I MDIEN<1 W !,"Error, no log entry ",MDPTR Q
"RTN","MDCVT",198,0)
 S MDIENS=MDIEN_",1,"
"RTN","MDCVT",199,0)
 S MDFDA(703.92,MDIENS,.02)="S"
"RTN","MDCVT",200,0)
 S MDFDA(703.92,MDIENS,.1)=$TR(REASON,U,"~")
"RTN","MDCVT",201,0)
 D FILE^DIE("","MDFDA")
"RTN","MDCVT",202,0)
 Q
"RTN","MDCVT",203,0)
 ;
"RTN","MDCVT",204,0)
SYNC(MDPTR) ; Make sure entry exists
"RTN","MDCVT",205,0)
 N MDFDA
"RTN","MDCVT",206,0)
 Q:$O(^MDD(703.9,1,2,"B",MDPTR,0))
"RTN","MDCVT",207,0)
 Q:$O(^MDD(702,"ACONV",MDPTR,0))
"RTN","MDCVT",208,0)
 S MDFDA(703.92,"+1,1,",.01)=MDPTR
"RTN","MDCVT",209,0)
 S MDFDA(703.92,"+1,1,",.02)="R"
"RTN","MDCVT",210,0)
 D UPDATE^DIE("","MDFDA")
"RTN","MDCVT",211,0)
 Q
"RTN","MDCVT",212,0)
 ;
"RTN","MDCVT",213,0)
LOCKOUT ; Lockout Options and set API Flag
"RTN","MDCVT",214,0)
 D ^MDOUTOR
"RTN","MDCVT",215,0)
 Q
"RTN","MDCVT",216,0)
 ;
"RTN","MDCVT",217,0)
STATUS(MDPTR) ; [Procedure] Return status of VPtr
"RTN","MDCVT",218,0)
 S X=$O(^MDD(703.9,1,2,"B",MDPTR,0))
"RTN","MDCVT",219,0)
 I X Q $P($G(^MDD(703.9,1,2,X,0)),U,2)  ; Return actual status
"RTN","MDCVT",220,0)
 N MDFDA,MDIEN,MDMSG
"RTN","MDCVT",221,0)
 S MDFDA(703.92,"+1,1,",.01)=MDPTR
"RTN","MDCVT",222,0)
 S MDFDA(703.92,"+1,1,",.02)="N"
"RTN","MDCVT",223,0)
 D UPDATE^DIE("","MDFDA","MDIEN","MDMSG")
"RTN","MDCVT",224,0)
 I $G(MDIEN(1))<1 W !,"Error adding to conversion log ",MDPTR Q -1
"RTN","MDCVT",225,0)
 Q "N"
"RTN","MDCVT",226,0)
 ;
"RTN","MDCVT",227,0)
SUMMARY ; Disk space requirements
"RTN","MDCVT",228,0)
 N FILE,LP,TOTB,TOTC,TOTL,X
"RTN","MDCVT",229,0)
 W !!,"Summarizing..."
"RTN","MDCVT",230,0)
 K ^TMP($J)
"RTN","MDCVT",231,0)
 S (TOTL,TOTC,TOTB)=0
"RTN","MDCVT",232,0)
 S MDSTAT=$O(^MDD(703.9,1,2,"AS","C")) ; will be CT or CR
"RTN","MDCVT",233,0)
 I MDSTAT'["C" W !!,"No report was converted. You MUST run the conversion in TEST or",!,"REAL mode first to be able to display the Disk Space Requirements." Q
"RTN","MDCVT",234,0)
 D S1 I MDSTAT="CR" S MDSTAT="CT" D S1
"RTN","MDCVT",235,0)
 W @IOF,!,"FILE",?42,$J("COUNT",8),?52,$J("LINES",8),?62,$J("BYTES",12)
"RTN","MDCVT",236,0)
 W !,$TR($J("",79)," ","-")
"RTN","MDCVT",237,0)
 S X="" F  S X=$O(^TMP($J,X)) Q:X=""  D
"RTN","MDCVT",238,0)
 .W !,$E($P(@X,U,1),1,40)
"RTN","MDCVT",239,0)
 .W ?42,$J(^TMP($J,X,"C"),8)
"RTN","MDCVT",240,0)
 .W ?52,$J(^TMP($J,X,"L"),8)
"RTN","MDCVT",241,0)
 .W ?62,$J(^TMP($J,X,"B"),12)
"RTN","MDCVT",242,0)
 .S TOTC=TOTC+^TMP($J,X,"C")
"RTN","MDCVT",243,0)
 .S TOTL=TOTL+^TMP($J,X,"L")
"RTN","MDCVT",244,0)
 .S TOTB=TOTB+^TMP($J,X,"B")
"RTN","MDCVT",245,0)
 W !?42,$TR($J("",37)," ","=")
"RTN","MDCVT",246,0)
 W !?42,$J(TOTC,8),?52,$J(TOTL,8),?62,$J(TOTB,12) K ^TMP($J)
"RTN","MDCVT",247,0)
 Q
"RTN","MDCVT",248,0)
 ;
"RTN","MDCVT",249,0)
S1 ; Loop for both CT or CR Statuses
"RTN","MDCVT",250,0)
 N X S X="" F  S X=$O(^MDD(703.9,1,2,"AS",MDSTAT,X)) Q:X=""  D
"RTN","MDCVT",251,0)
 .S FILE=$P($G(^MDD(703.9,1,2,X,0)),U,1)
"RTN","MDCVT",252,0)
 .S FILE=U_$P(FILE,";",2)_"0)"
"RTN","MDCVT",253,0)
 .S ^TMP($J,FILE,"C")=$G(^TMP($J,FILE,"C"))+1
"RTN","MDCVT",254,0)
 .S ^TMP($J,FILE,"L")=$G(^TMP($J,FILE,"L"))+$P(^MDD(703.9,1,2,X,0),U,4)
"RTN","MDCVT",255,0)
 .S ^TMP($J,FILE,"B")=$G(^TMP($J,FILE,"B"))+$P(^MDD(703.9,1,2,X,0),U,5)
"RTN","MDCVT",256,0)
 Q
"RTN","MDCVT",257,0)
TOTALS ; Count by Status
"RTN","MDCVT",258,0)
 N MDSTAT S MDSTAT=""
"RTN","MDCVT",259,0)
 F  S MDSTAT=$O(^MDD(703.9,1,2,"AS",MDSTAT)) Q:MDSTAT=""  D
"RTN","MDCVT",260,0)
 .S Y=0 F X=0:0 S X=$O(^MDD(703.9,1,2,"AS",MDSTAT,X)) Q:'X  S Y=Y+1
"RTN","MDCVT",261,0)
 .S MDSTAT(MDSTAT)=Y
"RTN","MDCVT",262,0)
 W @IOF,!,"Conversion Totals",!,$TR($J("",35)," ","-")
"RTN","MDCVT",263,0)
 W !,"Converted REAL Mode: ",$J(+$G(MDSTAT("CR")),9)
"RTN","MDCVT",264,0)
 W !,"Converted TEST Mode: ",$J(+$G(MDSTAT("CT")),9)
"RTN","MDCVT",265,0)
 W !,"Skipped:             ",$J(+$G(MDSTAT("S")),9)
"RTN","MDCVT",266,0)
 W !,"Error:               ",$J(+$G(MDSTAT("E")),9)
"RTN","MDCVT",267,0)
 Q
"RTN","MDCVT",268,0)
 ;
"RTN","MDCVT1")
0^6^B71614831^n/a
"RTN","MDCVT1",1,0)
MDCVT1 ; HOIFO/NCA - Medicine Package Conversion (Cont.) ;1/6/05  15:12
"RTN","MDCVT1",2,0)
 ;;1.0;CLINICAL PROCEDURES;**5**;Apr 01, 2004;Build 1
"RTN","MDCVT1",3,0)
 ; Integration Agreements:
"RTN","MDCVT1",4,0)
 ; IA# 4630 [Subscription] Calls to GMRCCP.
"RTN","MDCVT1",5,0)
 ; IA# 3535 [Subscription] Calls to TIUSRVP.
"RTN","MDCVT1",6,0)
 ; IA# 4508 [Subscription] Call to TIUSRVPT.
"RTN","MDCVT1",7,0)
 ; IA# 4588 [Subscription] Call to MAGMC2CP
"RTN","MDCVT1",8,0)
 ; IA# 2729 [Supported] Calls to XMXAPI.
"RTN","MDCVT1",9,0)
 ; IA#10063 [Supported] %ZTLOAD routine calls.
"RTN","MDCVT1",10,0)
 ;
"RTN","MDCVT1",11,0)
CONVERT(MDNOD,MDGLB) ; [Function] Convert Medicine Report to TIU Document
"RTN","MDCVT1",12,0)
 ; Input parameters
"RTN","MDCVT1",13,0)
 ;  1. MDNOD [Literal/Required] 
"RTN","MDCVT1",14,0)
 ;  2. MDGLB [Reference/Required] 
"RTN","MDCVT1",15,0)
 ;
"RTN","MDCVT1",16,0)
 ; Returns the TIU Note IEN
"RTN","MDCVT1",17,0)
 ; or 0 if report is skipped because Convert flag is set to "NO" or Report Converted
"RTN","MDCVT1",18,0)
 ; or -1^Error message
"RTN","MDCVT1",19,0)
 ; (Note: Error messages will be filed in Subfile 703.92 field .1)
"RTN","MDCVT1",20,0)
 ;
"RTN","MDCVT1",21,0)
 N MDCONV,MDEX,MDFIEN,MDFILE,MDFLG,MDGN,MDP,MDPROC,MDRES,MDTITL,MDUSER,MDX
"RTN","MDCVT1",22,0)
 S (MDGN,MDP)=MDNOD
"RTN","MDCVT1",23,0)
 S (MDEX,MDRES)="",MDFLG=0
"RTN","MDCVT1",24,0)
 S MDFIEN=+MDP Q:'MDFIEN "-1^No IEN for "_MDP
"RTN","MDCVT1",25,0)
 S MDFILE=+$P(MDP,"MCAR(",2) Q:'MDFILE "-1^No File Number for "_MDP
"RTN","MDCVT1",26,0)
 I $O(^MDD(702,"ACONV",MDFIEN_";MCAR("_MDFILE_",",0)) Q "-1^Already Converted."
"RTN","MDCVT1",27,0)
 S MDPAT=$$GET1^DIQ(MDFILE,MDFIEN_",","MEDICAL PATIENT","I")
"RTN","MDCVT1",28,0)
 I 'MDPAT S MDPAT=$$GET1^DIQ(MDFILE,MDFIEN_",","PATIENT","I")
"RTN","MDCVT1",29,0)
 I 'MDPAT Q "-1^No Medical Patient."
"RTN","MDCVT1",30,0)
 ; Get Medicine Parameter
"RTN","MDCVT1",31,0)
 S MDPROC=$G(^MDD(703.9,1,1,MDFILE,0))
"RTN","MDCVT1",32,0)
 ; Get CP Definition and Convert?
"RTN","MDCVT1",33,0)
 S MDCONV=$P(MDPROC,"^",3) I '+MDCONV D SKIP^MDCVT(MDP,"CONVERT Y/N flag set to No.") Q 0
"RTN","MDCVT1",34,0)
 S MDTITL=$P(MDPROC,"^",5) S:'MDTITL MDTITL=$$LOCATN^MDSTATU(MDGN)
"RTN","MDCVT1",35,0)
 Q:MDTITL'>0 "-1^No Historical Note Title."
"RTN","MDCVT1",36,0)
 S MDPROC=$P(MDPROC,"^",2) S:'MDPROC MDPROC=$$LOCATP^MDSTATU(MDGN)
"RTN","MDCVT1",37,0)
 Q:'MDPROC "-1^No CP definition for "_MDP
"RTN","MDCVT1",38,0)
 S MDUSER=$P($G(^MDD(703.9,1,0)),U,3) I 'MDUSER Q "-1^No Administrative Closure User Designated."
"RTN","MDCVT1",39,0)
 ; Get Existing TIU Note
"RTN","MDCVT1",40,0)
 S MDX=$O(^MDD(703.9,1,2,"B",MDP,0))
"RTN","MDCVT1",41,0)
 I +MDX S MDX=$G(^MDD(703.9,1,2,+MDX,0))
"RTN","MDCVT1",42,0)
 I +$P(MDX,"^",3) S MDEX=+$P(MDX,"^",3) Q MDEX
"RTN","MDCVT1",43,0)
 ; Create TIU Note
"RTN","MDCVT1",44,0)
 S MDRES=$$NEWTIU(MDFILE,MDPAT,MDFIEN,MDPROC,MDTITL,MDUSER,.MDGLB) I +MDRES<1 D LOGERR^MDCVT(MDP,$P(MDRES,"^",2)) S $P(MDRES,"^")=-1 Q MDRES
"RTN","MDCVT1",45,0)
 Q +MDRES
"RTN","MDCVT1",46,0)
 ;
"RTN","MDCVT1",47,0)
NEWTIU(MDFILE,MDPAT,MDFIEN,MDPROC,MDTITL,MDU,MDGLB) ; [Function] Create New TIU Note for Medicine Reports
"RTN","MDCVT1",48,0)
 ; Input parameters
"RTN","MDCVT1",49,0)
 ;  1. MDFILE [Literal/Required] 
"RTN","MDCVT1",50,0)
 ;  2. MDPAT [Literal/Required] 
"RTN","MDCVT1",51,0)
 ;  3. MDFIEN [Literal/Required] 
"RTN","MDCVT1",52,0)
 ;  4. MDPROC [Literal/Required] 
"RTN","MDCVT1",53,0)
 ;  5. MDTITL [Literal/Required]
"RTN","MDCVT1",54,0)
 ;  6. MDGLB [Reference/Required] 
"RTN","MDCVT1",55,0)
 ;
"RTN","MDCVT1",56,0)
 N MDADD,MDCHKI,MDCODE,MDD,MDDT,MDERR,MDFDA,MDIEN,MDIENS,MDK,MDLOC,MDNOTE,MDRET,MDSSTR,MDVST,MDVSTR,MDWP
"RTN","MDCVT1",57,0)
 ; Get Hospital Location
"RTN","MDCVT1",58,0)
 S MDLOC=$$HOSP^MDSTATU(MDFIEN_";MCAR("_MDFILE)
"RTN","MDCVT1",59,0)
 I 'MDLOC S MDLOC=$$GET1^DIQ(702.01,+MDPROC_",",.05,"I")
"RTN","MDCVT1",60,0)
 Q:'MDLOC "0^No Hospital Location."
"RTN","MDCVT1",61,0)
 S MDCODE=$$GET1^DIQ(MDFILE,MDFIEN_",","SUMMARY","I")
"RTN","MDCVT1",62,0)
 I MDCODE'="" S MDCODE=$S(MDCODE="N":1,MDCODE="A":2,MDCODE="B":3,MDCODE="MI":2,MDCODE="MO":2,MDCODE="S":2,1:4)
"RTN","MDCVT1",63,0)
 E  S MDCHKI=$$CHKINT(MDFILE,MDFIEN),MDCODE=$S(+MDCHKI:(MDCHKI+4),1:"")
"RTN","MDCVT1",64,0)
 S MDDT=$$GET1^DIQ(MDFILE,MDFIEN_",",.01,"I")
"RTN","MDCVT1",65,0)
 ; Set Un-dictated status
"RTN","MDCVT1",66,0)
 ;S MDWP(.05)=1
"RTN","MDCVT1",67,0)
 ; Set Author/Dictator and Entered By
"RTN","MDCVT1",68,0)
 ;S MDWP(1202)=MDU,MDWP(1302)=MDU
"RTN","MDCVT1",69,0)
 ; Set Procedure Summary Code and Date/Time of Procedure
"RTN","MDCVT1",70,0)
 S MDWP(70201)=MDCODE,MDWP(70202)=MDDT
"RTN","MDCVT1",71,0)
 F MDK=0:0 S MDK=$O(@MDGLB@(MDK)) Q:'MDK  S MDWP("TEXT",MDK,0)=$G(@MDGLB@(MDK))
"RTN","MDCVT1",72,0)
 D NOW^%DTC S MDD=% K %
"RTN","MDCVT1",73,0)
 S MDFDA(702,"+1,",.01)=MDPAT
"RTN","MDCVT1",74,0)
 S MDFDA(702,"+1,",.02)=MDD
"RTN","MDCVT1",75,0)
 S MDFDA(702,"+1,",.03)=DUZ
"RTN","MDCVT1",76,0)
 S MDFDA(702,"+1,",.04)=MDPROC
"RTN","MDCVT1",77,0)
 S MDFDA(702,"+1,",.09)=4  ; Status = Checked-In
"RTN","MDCVT1",78,0)
 D UPDATE^DIE("","MDFDA","MDIEN","MDERR") Q:$D(MDERR)
"RTN","MDCVT1",79,0)
 S MDRET=$$EN1^MDPCE(MDIEN(1),MDDT,MDPROC_"^"_MDLOC,"E","A")
"RTN","MDCVT1",80,0)
 I +MDRET S MDVST=+MDRET,MDSSTR=$P(MDRET,"^",2),MDVSTR=$P(MDSSTR,";",3)_";"_$P(MDSSTR,";",2)_";"_$P(MDSSTR,";")
"RTN","MDCVT1",81,0)
 I +MDRET<1 D DELETE(MDIEN(1)) Q MDRET
"RTN","MDCVT1",82,0)
 S MDNOTE="" D MAKE^TIUSRVP(.MDNOTE,MDPAT,MDTITL,$P(MDVSTR,";",2),MDLOC,MDVST,.MDWP,MDVSTR,1,1)
"RTN","MDCVT1",83,0)
 ; Add the TIU Document Reference
"RTN","MDCVT1",84,0)
 S MDIENS=MDIEN(1)_","
"RTN","MDCVT1",85,0)
 I +MDNOTE S MDFDA(702,MDIENS,.06)=MDNOTE D FILE^DIE("","MDFDA","MDERR")
"RTN","MDCVT1",86,0)
 I +MDNOTE'>0 D DELETE(MDIEN(1))
"RTN","MDCVT1",87,0)
 Q MDNOTE
"RTN","MDCVT1",88,0)
 ;
"RTN","MDCVT1",89,0)
UPD(MDGB,MDNOD,MDTI,MDT) ; Do consults and Imaging update and log response
"RTN","MDCVT1",90,0)
 N MDCONS,MDECON,MDUSR,MDEFLG,MDIMG,MDNOTE,MDR,MDR1,MDRET,MDSTUD,MDTT,MDWP,MDX1 S (MDEFLG,MDRET)=0
"RTN","MDCVT1",91,0)
 ; Get the existing study
"RTN","MDCVT1",92,0)
 ;
"RTN","MDCVT1",93,0)
 S MDSTUD=$O(^MDD(702,"ATIU",+MDTI,0)) Q:'MDSTUD
"RTN","MDCVT1",94,0)
 ;
"RTN","MDCVT1",95,0)
 ;Get existing consult
"RTN","MDCVT1",96,0)
 ;
"RTN","MDCVT1",97,0)
 S MDECON=$$GET1^DIQ(702,MDSTUD_",",.05,"I")
"RTN","MDCVT1",98,0)
 ;
"RTN","MDCVT1",99,0)
 ; Get Administrative Closure Person
"RTN","MDCVT1",100,0)
 ;
"RTN","MDCVT1",101,0)
 S MDUSR=$P($G(^MDD(703.9,1,0)),U,3) Q:'MDUSR
"RTN","MDCVT1",102,0)
 S MDTT=$S(+$G(MDT)>0:0,1:1)
"RTN","MDCVT1",103,0)
 S MDCONS=$$CVTCONS^MDCVT1(MDTT,MDNOD,+MDTI)
"RTN","MDCVT1",104,0)
 I +MDCONS<0&($P(MDCONS,U,2)'["No MC results sent") D LOGERR^MDCVT(MDNOD,"Consults error: "_$P(MDCONS,U,2)) Q
"RTN","MDCVT1",105,0)
 I +MDCONS>0 K MDWP I +$P(MDCONS,U,3) D  Q:MDEFLG
"RTN","MDCVT1",106,0)
 .S MDWP(1405)=+$P(MDCONS,U,3)_";GMR(123,"
"RTN","MDCVT1",107,0)
 .D UPDATE^TIUSRVP(.MDNOTE,+MDTI,.MDWP,1)
"RTN","MDCVT1",108,0)
 .I +MDNOTE<1 D LOGERR^MDCVT(MDNOD,"COULDN'T UPDATE THE NOTE") S MDEFLG=1 Q
"RTN","MDCVT1",109,0)
 .I +$P(MDCONS,U,3) S MDFDA(702,MDSTUD_",",.05)=+$P(MDCONS,U,3) D FILE^DIE("","MDFDA")
"RTN","MDCVT1",110,0)
 .Q
"RTN","MDCVT1",111,0)
 ; Do imaging update and log response
"RTN","MDCVT1",112,0)
 Q:$$GET1^DIQ(702,MDSTUD_",",.09,"I")=3
"RTN","MDCVT1",113,0)
 I $O(@MDGB@(2005,0)) D  Q:MDRET<0  ; Quit on Imaging error
"RTN","MDCVT1",114,0)
 .S (MDIMG,MDX1)=0
"RTN","MDCVT1",115,0)
 .F  S MDX1=$O(@MDGB@(2005,MDX1)) Q:'MDX1  D  Q:MDRET<0
"RTN","MDCVT1",116,0)
 ..S MDIMG=+@MDGB@(2005,MDX1,0)
"RTN","MDCVT1",117,0)
 ..S MDRET=$$CVTIMG(MDTT,MDNOD,MDTI,MDIMG)
"RTN","MDCVT1",118,0)
 ..D:MDRET<0 LOGERR^MDCVT(MDNOD,"Imaging error: "_$P(MDRET,U,2))
"RTN","MDCVT1",119,0)
 Q:MDRET<0  K MDFDA S MDFDA(702,MDSTUD_",",.09)=3,MDFDA(702,MDSTUD_",",.3)=MDNOD D FILE^DIE("","MDFDA") W "."
"RTN","MDCVT1",120,0)
 ;
"RTN","MDCVT1",121,0)
 ; Close the record with Administrative Closure
"RTN","MDCVT1",122,0)
 S (MDR,MDR1)=""
"RTN","MDCVT1",123,0)
 I +MDTI D ADMNCLOS^TIUSRVPT(.MDR,+MDTI,"M",MDUSR) I '+MDR D DELETE^TIUSRVP(.MDR1,+MDTI) D LOGERR^MDCVT(MDNOD,"Can't Administrative close document")
"RTN","MDCVT1",124,0)
 Q
"RTN","MDCVT1",125,0)
PROC(MDX5,MDX6) ; Get Medicine Procedure Name
"RTN","MDCVT1",126,0)
 N LL,LL6,LL8
"RTN","MDCVT1",127,0)
 I MDX5="MCAR(699" S LL=$P($G(^MCAR(699,MDX6,0)),U,12) Q:LL'>0  S LL=$P($G(^MCAR(697.2,+LL,0)),U) Q LL
"RTN","MDCVT1",128,0)
 I MDX5="MCAR(699.5" D
"RTN","MDCVT1",129,0)
 .S LL6=$P($G(^MCAR(699.5,MDX6,0)),U,6),LL8=$P($G(^MCAR(699.5,MDX6,0)),U,8)
"RTN","MDCVT1",130,0)
 .S LL=$P($G(^MCAR(699.5,MDX6,0)),U,6) Q:'LL  S LL=$P($G(^MCAR(697.2,LL,0)),U) Q LL
"RTN","MDCVT1",131,0)
 I MDX5[694 S LL=$P($G(^MCAR(694,MDX6,0)),U,3) Q:'LL  S LL=$P(^MCAR(697.2,LL,0),U) Q LL
"RTN","MDCVT1",132,0)
 S LL=$O(^MCAR(697.2,"C",MDX5,0)),LL=$P(^MCAR(697.2,LL,0),U,1)
"RTN","MDCVT1",133,0)
 Q LL
"RTN","MDCVT1",134,0)
CVTIMG(MDTST,MDN,MDTIU,MDIMAGES) ; Call Imaging API
"RTN","MDCVT1",135,0)
 Q $$TIU^MAGMC2CP(MDTST,MDN,MDTIU,.MDIMAGES)
"RTN","MDCVT1",136,0)
CVTCONS(MDTST,MDN,MDTIU) ; Call Consults API
"RTN","MDCVT1",137,0)
 Q $$MCCNVT^GMRCCP(MDTST,MDN,MDTIU)
"RTN","MDCVT1",138,0)
CHKINT(MDFL,MDMREC) ; Check to see if record from Medical Device
"RTN","MDCVT1",139,0)
 ; Returns 1 or 0
"RTN","MDCVT1",140,0)
 N MDN1,MDF
"RTN","MDCVT1",141,0)
 I MDFL=691 S MDN1=$G(^MCAR(691,+MDMREC,10,0)) I +$P(MDN1,U,3)&($P(MDN1,U,3)>1) Q 1
"RTN","MDCVT1",142,0)
 I MDFL=691.1 S MDN1=$G(^MCAR(691.1,+MDMREC,43,0)) I +$P(MDN1,U,3)&($P(MDN1,U,3)>1) Q 1
"RTN","MDCVT1",143,0)
 I MDFL=691.5 S MDN1=$G(^MCAR(691.5,+MDMREC,9,0)) I +$P(MDN1,U,3)&($P(MDN1,U,3)>1) Q 1
"RTN","MDCVT1",144,0)
 I MDFL=691.6 S MDN1=$G(^MCAR(691.6,+MDMREC,7,0)) I +$P(MDN1,U,3)&($P(MDN1,U,3)>1) Q 1
"RTN","MDCVT1",145,0)
 I MDFL=691.8 S MDN1=$G(^MCAR(691.8,+MDMREC,12,0)) I +$P(MDN1,U,3)&($P(MDN1,U,3)>1) Q 1
"RTN","MDCVT1",146,0)
 I MDFL=698.3 S MDN1=$G(^MCAR(698.3,+MDMREC,10,0)) I +$P(MDN1,U,3)&($P(MDN1,U,3)>1) Q 1
"RTN","MDCVT1",147,0)
 I MDFL=699 S MDN1=$G(^MCAR(699,+MDMREC,33,0)) I +$P(MDN1,U,3)&($P(MDN1,U,3)>1) Q 1
"RTN","MDCVT1",148,0)
 I MDFL=700 S MDF=0 D  Q:MDF 1
"RTN","MDCVT1",149,0)
 .S MDN1=$G(^MCAR(700,+MDMREC,25,0))
"RTN","MDCVT1",150,0)
 .I +$P(MDN1,U,3)&($P(MDN1,U,3)>1) S MDF=1 Q
"RTN","MDCVT1",151,0)
 .S MDN1=$G(^MCAR(700,+MDMREC,3,0))
"RTN","MDCVT1",152,0)
 .I +$P(MDN1,U,3)&($P(MDN1,U,3)>1) S MDF=1 Q
"RTN","MDCVT1",153,0)
 .S MDN1=$G(^MCAR(700,+MDMREC,4,0))
"RTN","MDCVT1",154,0)
 .I +$P(MDN1,U,3)&($P(MDN1,U,3)>1) S MDF=1 Q
"RTN","MDCVT1",155,0)
 I +$P($G(^MCAR(MDFL,+MDMREC,2005,0)),U,4)>0 Q 1
"RTN","MDCVT1",156,0)
 Q 0
"RTN","MDCVT1",157,0)
BLD() ; Build the list of reports to convert
"RTN","MDCVT1",158,0)
 W ! K DIR S DIR(0)="YA",DIR("A")="Build the list of reports to convert? "
"RTN","MDCVT1",159,0)
 S DIR("A",1)="You can rebuild the list to check for new Medicine Reports that"
"RTN","MDCVT1",160,0)
 S DIR("A",2)="may have been added since the last time you ran the Build Conversion List.",DIR("B")="NO" D ^DIR K DIR
"RTN","MDCVT1",161,0)
 ;
"RTN","MDCVT1",162,0)
 Q:Y<1 1  ; User said no to re-build
"RTN","MDCVT1",163,0)
 Q:$D(DIRUT)!$D(DIROUT)!(Y<1) 0  ; User has cancelled
"RTN","MDCVT1",164,0)
 ;
"RTN","MDCVT1",165,0)
 K DIR S DIR(0)="YA",DIR("A")="Queue the conversion list build? ",DIR("B")="YES" D ^DIR K DIR
"RTN","MDCVT1",166,0)
 I Y=0 D QBLD Q 1  ; User has opted to do it now
"RTN","MDCVT1",167,0)
 I Y=1 D  Q 0  ; User has queued the build
"RTN","MDCVT1",168,0)
 .S ZTRTN="QBLD^MDCVT1"
"RTN","MDCVT1",169,0)
 .S ZTDESC="Medicine Conversion List Build"
"RTN","MDCVT1",170,0)
 .S ZTREQ="@",ZTSAVE("ZTREQ")="",MDQUE=1,MDDUZ=DUZ,ZTSAVE("MDDUZ")="",ZTSAVE("MDQUE")=""
"RTN","MDCVT1",171,0)
 .S (ZTDTH,ZTIO)=""
"RTN","MDCVT1",172,0)
 .D ^%ZTLOAD
"RTN","MDCVT1",173,0)
 .I $G(ZTSK) W "Task Queued"
"RTN","MDCVT1",174,0)
 .E  W "Task Cancelled"
"RTN","MDCVT1",175,0)
 Q 0  ; User cancelled out of the queueing
"RTN","MDCVT1",176,0)
 ;
"RTN","MDCVT1",177,0)
QBLD ; Queued entry point for re-build
"RTN","MDCVT1",178,0)
 L +(^MDD(703.9,1,2)):5 E  Q
"RTN","MDCVT1",179,0)
 N MDGBL,MDPTR,MDFDA,MDFL,MDIEN,MDY,X2
"RTN","MDCVT1",180,0)
 S X2="" F  S X2=$O(^MDD(703.9,1,1,X2)) Q:X2=""  S MDY=$G(^(X2,0)) D
"RTN","MDCVT1",181,0)
 .Q:'+$P(MDY,U,3)
"RTN","MDCVT1",182,0)
 .S MDFL=$P(MDY,U),MDGBL="^MCAR("_MDFL_",""B"")"
"RTN","MDCVT1",183,0)
 .F  S MDGBL=$Q(@MDGBL) Q:MDGBL=""  Q:$QS(MDGBL,2)'="B"  D
"RTN","MDCVT1",184,0)
 ..Q:'$P($G(^MCAR(MDFL,+$QS(MDGBL,4),0)),U,2)
"RTN","MDCVT1",185,0)
 ..S MDPTR=$QS(MDGBL,4)_";MCAR("_MDFL_","
"RTN","MDCVT1",186,0)
 ..D SYNC^MDCVT(MDPTR)
"RTN","MDCVT1",187,0)
 L -(^MDD(703.9,1,2))
"RTN","MDCVT1",188,0)
 I +$G(MDQUE) D
"RTN","MDCVT1",189,0)
 .N TXT,XMTO,XMBODY,XMDUZ,XMSUBJ
"RTN","MDCVT1",190,0)
 .S XMINSTR("FROM")=.5,XMSUBJ="Conversion List"
"RTN","MDCVT1",191,0)
 .S XMTO=$G(MDDUZ) Q:'XMTO
"RTN","MDCVT1",192,0)
 .S TXT(1)="The Queued Conversion List is finished."
"RTN","MDCVT1",193,0)
 .S TXT(2)="You can run the Medicine report conversion process.",XMBODY="TXT"
"RTN","MDCVT1",194,0)
 .D SENDMSG^XMXAPI(DUZ,XMSUBJ,XMBODY,XMTO,.XMINSTR)
"RTN","MDCVT1",195,0)
 .K MDQUE,MDDUZ
"RTN","MDCVT1",196,0)
 Q
"RTN","MDCVT1",197,0)
DELETE(MDIN) ; Delete study upon unsuccessful Note Creation
"RTN","MDCVT1",198,0)
 N MDFDA
"RTN","MDCVT1",199,0)
 S MDFDA(702,MDIN_",",.01)=""
"RTN","MDCVT1",200,0)
 D FILE^DIE("","MDFDA")
"RTN","MDCVT1",201,0)
 N DA,DIK S DA=+MDIN,DIK="^MDD(702," D ^DIK
"RTN","MDCVT1",202,0)
 Q
"RTN","MDCVT1",203,0)
TOTALS(MDSTAT) ; Count by Status
"RTN","MDCVT1",204,0)
 S MDSTAT("E")=0
"RTN","MDCVT1",205,0)
 S MDSTAT("E")=MDSTAT("TOT")-(MDSTAT("S")+MDSTAT("CR")+MDSTAT("CT"))
"RTN","MDCVT1",206,0)
 W @IOF,!,"Conversion Totals",!,$TR($J("",35)," ","-")
"RTN","MDCVT1",207,0)
 W !,"Converted REAL Mode: ",$J(+$G(MDSTAT("CR")),9)
"RTN","MDCVT1",208,0)
 W !,"Converted TEST Mode: ",$J(+$G(MDSTAT("CT")),9)
"RTN","MDCVT1",209,0)
 W !,"Skipped:             ",$J(+$G(MDSTAT("S")),9)
"RTN","MDCVT1",210,0)
 W !,"Error:               ",$J(+$G(MDSTAT("E")),9)
"RTN","MDCVT1",211,0)
 Q
"RTN","MDCVTU")
0^7^B2189080^n/a
"RTN","MDCVTU",1,0)
MDCVTU ; HOIFO/NCA - Medicine Conversion Verification Utility ; [08-28-2003 11:34]
"RTN","MDCVTU",2,0)
 ;;1.0;CLINICAL PROCEDURES;**5**;Apr 01, 2004;Build 1
"RTN","MDCVTU",3,0)
 ; Integration Agreement:
"RTN","MDCVTU",4,0)
 ; IA #10155 Access 3rd piece of ^DD(filenumber,fieldnumber,0)
"RTN","MDCVTU",5,0)
 ;
"RTN","MDCVTU",6,0)
EN ; [Procedure] Verify the Medicine Records Are Converted
"RTN","MDCVTU",7,0)
 N CNT,CNTS,MDC,MDK,MDL,MDTIT
"RTN","MDCVTU",8,0)
 S MDTIT=";"_$P($G(^DD(703.92,.02,0)),U,3)
"RTN","MDCVTU",9,0)
 D EN1 W !!!
"RTN","MDCVTU",10,0)
 S MDK="" F  S MDK=$O(MDC(MDK)) Q:MDK=""  S MDX=$G(MDC(MDK)) D
"RTN","MDCVTU",11,0)
 .I +MDX S MDL=$F(MDTIT,";"_MDK_":") W !,$P($E(MDTIT,MDL,999),";")_": ",?30,+MDX
"RTN","MDCVTU",12,0)
 I '$D(MDC) W !,"Verified Medicine Reports Conversion Completed.",!
"RTN","MDCVTU",13,0)
 W !,"Reports Converted ",?30,CNT
"RTN","MDCVTU",14,0)
 W !,"Reports Skipped: ",?30,CNTS
"RTN","MDCVTU",15,0)
 Q
"RTN","MDCVTU",16,0)
EN1 ; Loop to Check Medicine Records
"RTN","MDCVTU",17,0)
 N MDP,MDPTR,MDREC,MDS,MDX
"RTN","MDCVTU",18,0)
 S MDREC=$NA(^MCAR(690,"AC")),(CNT,CNTS)=0
"RTN","MDCVTU",19,0)
 F  S MDREC=$Q(@MDREC) Q:MDREC=""  Q:$QS(MDREC,2)'="AC"  D
"RTN","MDCVTU",20,0)
 .S MDPTR=$QS(MDREC,6)_";"_$QS(MDREC,5)_","
"RTN","MDCVTU",21,0)
 .S MDP=$O(^MDD(703.9,1,2,"B",MDPTR,0))
"RTN","MDCVTU",22,0)
 .I 'MDP S MDS=$$STATUS^MDCVT(MDPTR) S:$G(MDC(MDS))="" MDC(MDS)=0 S MDC(MDS)=MDC(MDS)+1 Q
"RTN","MDCVTU",23,0)
 .S MDS=$P(^MDD(703.9,1,2,MDP,0),U,2)
"RTN","MDCVTU",24,0)
 .I MDS="CR" S CNT=CNT+1 Q
"RTN","MDCVTU",25,0)
 .I MDS="S" S CNTS=CNTS+1 Q
"RTN","MDCVTU",26,0)
 .S:$G(MDC(MDS))="" MDC(MDS)=0 S MDC(MDS)=MDC(MDS)+1
"RTN","MDCVTU",27,0)
 .Q
"RTN","MDCVTU",28,0)
 Q
"RTN","MDESPRT")
0^19^B8888916^n/a
"RTN","MDESPRT",1,0)
MDESPRT ;HOIFO/NCA - ELECTRONIC SIGNATURE PRINT ;12/21/04  09:24
"RTN","MDESPRT",2,0)
 ;;1.0;CLINICAL PROCEDURES;**5**;Apr 01, 2004;Build 1
"RTN","MDESPRT",3,0)
GETHDR(RESULTS,MDDP) ; Get Legal Header for Report Text
"RTN","MDESPRT",4,0)
 K ^TMP("MDTMP",$J) N MDC,MDFCHK,MDFT,MDS5,MDS6,X3,Y S (MDFCHK,MDFT)=0
"RTN","MDESPRT",5,0)
 N MCSTAT,TEMP,CODE,CREATION,FNAME,FT,FTYPE,NAME,NUM,TT,VERSION S MDC=7
"RTN","MDESPRT",6,0)
 S ^TMP("MDTMP",$J,1)="****************************************************************"
"RTN","MDESPRT",7,0)
 S ^TMP("MDTMP",$J,2)="This information was imported from the Medicine Package software"
"RTN","MDESPRT",8,0)
 S ^TMP("MDTMP",$J,3)="and does not include an electronic signature; therefore, it is"
"RTN","MDESPRT",9,0)
 S ^TMP("MDTMP",$J,4)="being administratively closed and should be used as information"
"RTN","MDESPRT",10,0)
 S ^TMP("MDTMP",$J,5)="only."
"RTN","MDESPRT",11,0)
 S ^TMP("MDTMP",$J,6)="****************************************************************"
"RTN","MDESPRT",12,0)
 S ^TMP("MDTMP",$J,7)=""
"RTN","MDESPRT",13,0)
 S MDS5=$P($P($G(MDDP),";",2),","),MDS5=+$P(MDS5,"(",2),MDS6=+MDDP
"RTN","MDESPRT",14,0)
 I $P($G(^MCAR(MDS5,MDS6,"ES")),U,7)=""!($P($G(^MCAR(MDS5,MDS6,"ES")),U,7)="RNV") S ^TMP("MDTMP",$J,8)="                          CONVERTED ARCHIVED REPORT",MDC=MDC+1
"RTN","MDESPRT",15,0)
 F X3=0:0 S X3=$O(@RESULTS@(X3)) Q:'X3  D  Q:+MDFCHK
"RTN","MDESPRT",16,0)
 .I $P($G(^MCAR(MDS5,MDS6,"ES")),U,7)="RNV"&($G(@RESULTS@(X3))["R e l e a s e   S t a t u s") S MDFCHK=1 Q
"RTN","MDESPRT",17,0)
 .S MDC=MDC+1,^TMP("MDTMP",$J,MDC)=$G(@RESULTS@(X3))
"RTN","MDESPRT",18,0)
 S TEMP=$G(^MCAR(MDS5,MDS6,"ES"))
"RTN","MDESPRT",19,0)
 I $P(TEMP,U,7)=""!($P(TEMP,U,7)="RNV") S MDFT=1
"RTN","MDESPRT",20,0)
 I +MDFT<1 K ^TMP($J) M ^TMP($J)=^TMP("MDTMP",$J) K ^TMP("MDTMP",$J) Q
"RTN","MDESPRT",21,0)
 I $P(TEMP,U,7)="RNV"&($G(^TMP("MDTMP",$J,MDC))[" - -") K ^TMP("MDTMP",$J,MDC) S MDC=MDC-1
"RTN","MDESPRT",22,0)
 S $P(TEMP,U,15)=DT
"RTN","MDESPRT",23,0)
 ; Retrieve RC/ES Field (NA = Dont need)
"RTN","MDESPRT",24,0)
 S NAME="^^^^^^CODE^^^^^^^^CREATION",FTYPE="^^^^^^F^^^^^^^^D"
"RTN","MDESPRT",25,0)
 F TT=7,15 D
"RTN","MDESPRT",26,0)
 .S Y=$P(TEMP,U,TT),FT=$P(FTYPE,U,TT),FNAME=$P(NAME,U,TT)
"RTN","MDESPRT",27,0)
 .I Y S:FT="D" @FNAME=+$E(Y,4,5)_"/"_+$E(Y,6,7)_"/"_$E((1700+$E(Y,1,3)),3,4) S:FT="F" @FNAME=Y
"RTN","MDESPRT",28,0)
 S MCSTAT="CONVERTED ARCHIVED REPORT"
"RTN","MDESPRT",29,0)
 S NUM=1
"RTN","MDESPRT",30,0)
 S VERSION=NUM_" of "_NUM
"RTN","MDESPRT",31,0)
 S $P(SS," -",40)="" S MDC=MDC+1,^TMP("MDTMP",$J,MDC)=""
"RTN","MDESPRT",32,0)
 S MDC=MDC+1,^TMP("MDTMP",$J,MDC)=""
"RTN","MDESPRT",33,0)
 S MDC=MDC+1,^TMP("MDTMP",$J,MDC)=""
"RTN","MDESPRT",34,0)
 S MDC=MDC+1,^TMP("MDTMP",$J,MDC)=SS K SS
"RTN","MDESPRT",35,0)
 S MDC=MDC+1,^TMP("MDTMP",$J,MDC)=$J(" ",18)_"R e p o r t   R e l e a s e   S t a t u s"
"RTN","MDESPRT",36,0)
 S MDC=MDC+1,^TMP("MDTMP",$J,MDC)=""
"RTN","MDESPRT",37,0)
 S MDC=MDC+1,^TMP("MDTMP",$J,MDC)="Current "
"RTN","MDESPRT",38,0)
 S MDC=MDC+1,^TMP("MDTMP",$J,MDC)="Report  "_$J(" ",51)_"Date of    Report"
"RTN","MDESPRT",39,0)
 S MDC=MDC+1,^TMP("MDTMP",$J,MDC)="Status  "_$J(" ",51)_" Entry     Version"
"RTN","MDESPRT",40,0)
 S $P(SS,"=",80)="",MDC=MDC+1,^TMP("MDTMP",$J,MDC)=SS K SS
"RTN","MDESPRT",41,0)
 S MDC=MDC+1,^TMP("MDTMP",$J,MDC)=MCSTAT
"RTN","MDESPRT",42,0)
 S MDC=MDC+1,^TMP("MDTMP",$J,MDC)=$J(" ",59)_CREATION_"    "_VERSION
"RTN","MDESPRT",43,0)
 K ^TMP($J) M ^TMP($J)=^TMP("MDTMP",$J) K ^TMP("MDTMP",$J)
"RTN","MDESPRT",44,0)
 Q
"RTN","MDOUTOR")
0^8^B33171008^n/a
"RTN","MDOUTOR",1,0)
MDOUTOR ; HOIFO/NCA - Post Conversion Routine ; [04-14-2003 10:51]
"RTN","MDOUTOR",2,0)
 ;;1.0;CLINICAL PROCEDURES;**5**;Apr 01, 2004;Build 1
"RTN","MDOUTOR",3,0)
EN1 ; [Procedure]
"RTN","MDOUTOR",4,0)
 ; This post conversion routine will place the Medicine Enter/Edit 
"RTN","MDOUTOR",5,0)
 ; options out of order
"RTN","MDOUTOR",6,0)
 ; Reference IA # 1157 [Supported] Kernel XPDMENU calls.
"RTN","MDOUTOR",7,0)
 ;           IA # 2263 [Supported] XPAR parameter calls
"RTN","MDOUTOR",8,0)
 ;           IA #10075 [Supported] Option File Read.
"RTN","MDOUTOR",9,0)
 ;
"RTN","MDOUTOR",10,0)
 N LP,MDAR,MDFDA,MDLAB,MDPI,MDOPI,MDOPT,MDTXT,MDSEL,MDX
"RTN","MDOUTOR",11,0)
 I $$GET^XPAR("SYS","MD MEDICINE CONVERTED",1) W !!,"Options Already Disabled.",! Q
"RTN","MDOUTOR",12,0)
 K DIR S DIR(0)="YA",DIR("A")="Place the Medicine options OUT OF ORDER? ",DIR("B")="NO" D ^DIR K DIR Q:$D(DIRUT)!$D(DIROUT)!(Y<1)
"RTN","MDOUTOR",13,0)
 K DIR S DIR(0)="SO^1:CATH;2:ECG;3:ECHO;4:EP;5:HOLTER;6:ETT;7:SURGICAL RISK;8:CONSULT;9:GI;10:PULMONARY-GI;11:PFT;12:HEMATOLOGY;13:PACEMAKER;14:RHEUMATOLOGY;15:ALL"
"RTN","MDOUTOR",14,0)
 S DIR("?")="Enter a code from 1-15."
"RTN","MDOUTOR",15,0)
 D ^DIR K DIR Q:$D(DIRUT)!$D(DIROUT)!(Y<1)  S MDSEL=Y
"RTN","MDOUTOR",16,0)
 S MDTXT="Medicine Reports Converted to Clinical Procedures - OPTION OUT OF SERVICE"
"RTN","MDOUTOR",17,0)
 F MDX=1:1 S MDOPT=$P($T(LABEL+MDX),";;",2) Q:MDOPT="**END**"  D
"RTN","MDOUTOR",18,0)
 .Q:MDOPT=""
"RTN","MDOUTOR",19,0)
 .S MDAR(MDX)=MDOPT
"RTN","MDOUTOR",20,0)
 .Q
"RTN","MDOUTOR",21,0)
 S MDLAB=$S(MDSEL'=15:$G(MDAR(MDSEL)),1:"")
"RTN","MDOUTOR",22,0)
 W !!,"Placing the following Medicine options OUT OF ORDER:",!
"RTN","MDOUTOR",23,0)
 I MDSEL=15 F LP=1:1:15 S MDLAB=$G(MDAR(LP)) Q:MDLAB=""  D DISABLE
"RTN","MDOUTOR",24,0)
 I MDSEL=15 D EN^XPAR("SYS","MD MEDICINE CONVERTED",1,1) Q
"RTN","MDOUTOR",25,0)
 D:MDSEL'=15 DISABLE
"RTN","MDOUTOR",26,0)
 W !! K DIR S DIR(0)="YA",DIR("A")="Are All Medicine Reports Converted? ",DIR("B")="NO" D ^DIR K DIR Q:$D(DIRUT)!$D(DIROUT)!(Y<1)
"RTN","MDOUTOR",27,0)
 D EN^XPAR("SYS","MD MEDICINE CONVERTED",1,1)
"RTN","MDOUTOR",28,0)
 Q
"RTN","MDOUTOR",29,0)
DISABLE ; Disabling the options
"RTN","MDOUTOR",30,0)
 F MDX=1:1 S MDOPT=$P($T(@MDLAB+MDX),";;",2) Q:MDOPT="**END**"  D
"RTN","MDOUTOR",31,0)
 .Q:MDOPT=""
"RTN","MDOUTOR",32,0)
 .S MDPI=$$FIND1^DIC(19,"","MX",MDOPT) Q:'MDPI
"RTN","MDOUTOR",33,0)
 .D OUT^XPDMENU(MDOPT,MDTXT)
"RTN","MDOUTOR",34,0)
 .W !,$$GET1^DIQ(19,MDPI_",",1,"E"),"   [",MDOPT,"]"
"RTN","MDOUTOR",35,0)
 Q
"RTN","MDOUTOR",36,0)
 ;
"RTN","MDOUTOR",37,0)
LABEL ; [Labels]
"RTN","MDOUTOR",38,0)
 ;;CATH
"RTN","MDOUTOR",39,0)
 ;;ECG
"RTN","MDOUTOR",40,0)
 ;;ECHO
"RTN","MDOUTOR",41,0)
 ;;EP
"RTN","MDOUTOR",42,0)
 ;;HOLTER
"RTN","MDOUTOR",43,0)
 ;;ETT
"RTN","MDOUTOR",44,0)
 ;;SURG
"RTN","MDOUTOR",45,0)
 ;;CONSULT
"RTN","MDOUTOR",46,0)
 ;;GI
"RTN","MDOUTOR",47,0)
 ;;PULM
"RTN","MDOUTOR",48,0)
 ;;PFT
"RTN","MDOUTOR",49,0)
 ;;HEM
"RTN","MDOUTOR",50,0)
 ;;PACE
"RTN","MDOUTOR",51,0)
 ;;RHEUM
"RTN","MDOUTOR",52,0)
 ;;SUMM
"RTN","MDOUTOR",53,0)
 ;;**END**
"RTN","MDOUTOR",54,0)
OPTIONS ; [Data Module] Enter/Edit Medicine options
"RTN","MDOUTOR",55,0)
CATH ;;[Cardiac Catheterization options]
"RTN","MDOUTOR",56,0)
 ;;MCFSCATH
"RTN","MDOUTOR",57,0)
 ;;MCFPCATH
"RTN","MDOUTOR",58,0)
 ;;MCFLCATH
"RTN","MDOUTOR",59,0)
 ;;MCBLCATH
"RTN","MDOUTOR",60,0)
 ;;MCBSCATH
"RTN","MDOUTOR",61,0)
 ;;MCBPCATH
"RTN","MDOUTOR",62,0)
 ;;MCARCATHIMAGE
"RTN","MDOUTOR",63,0)
 ;;**END**
"RTN","MDOUTOR",64,0)
ECG ;;[Electrocardiogram options]
"RTN","MDOUTOR",65,0)
 ;;MCFSECG
"RTN","MDOUTOR",66,0)
 ;;MCFPECG
"RTN","MDOUTOR",67,0)
 ;;MCFLECG
"RTN","MDOUTOR",68,0)
 ;;MCARECGAUTOSUM
"RTN","MDOUTOR",69,0)
 ;;MCBLECG
"RTN","MDOUTOR",70,0)
 ;;MCBSECG
"RTN","MDOUTOR",71,0)
 ;;MCBPECG
"RTN","MDOUTOR",72,0)
 ;;**END**
"RTN","MDOUTOR",73,0)
ECHO ;;[Echocardiogram options]
"RTN","MDOUTOR",74,0)
 ;;MCFSECHO
"RTN","MDOUTOR",75,0)
 ;;MCFPECHO
"RTN","MDOUTOR",76,0)
 ;;MCFLECHO
"RTN","MDOUTOR",77,0)
 ;;MCARECHOIMAGE
"RTN","MDOUTOR",78,0)
 ;;MCBLECHO
"RTN","MDOUTOR",79,0)
 ;;MCBSECHO
"RTN","MDOUTOR",80,0)
 ;;MCBPECHO
"RTN","MDOUTOR",81,0)
 ;;**END**
"RTN","MDOUTOR",82,0)
EP ;;[Electrophysiology options]
"RTN","MDOUTOR",83,0)
 ;;MCFSEP
"RTN","MDOUTOR",84,0)
 ;;MCFPEP
"RTN","MDOUTOR",85,0)
 ;;MCFLEP
"RTN","MDOUTOR",86,0)
 ;;MCBLEP
"RTN","MDOUTOR",87,0)
 ;;MCBSEP
"RTN","MDOUTOR",88,0)
 ;;MCBPEP
"RTN","MDOUTOR",89,0)
 ;;**END**
"RTN","MDOUTOR",90,0)
HOLTER ;;[Holter options]
"RTN","MDOUTOR",91,0)
 ;;MCFSHOLTER
"RTN","MDOUTOR",92,0)
 ;;MCFPHOLTER
"RTN","MDOUTOR",93,0)
 ;;MCFLHOLTER
"RTN","MDOUTOR",94,0)
 ;;MCBLHOLTER
"RTN","MDOUTOR",95,0)
 ;;MCBSHOLTER
"RTN","MDOUTOR",96,0)
 ;;MCBPHOLTER
"RTN","MDOUTOR",97,0)
 ;;**END**
"RTN","MDOUTOR",98,0)
ETT ;;[Exercise Tolerance Test options]
"RTN","MDOUTOR",99,0)
 ;;MCFSETT
"RTN","MDOUTOR",100,0)
 ;;MCFPETT
"RTN","MDOUTOR",101,0)
 ;;MCFLETT
"RTN","MDOUTOR",102,0)
 ;;MCBLETT
"RTN","MDOUTOR",103,0)
 ;;MCBSETT
"RTN","MDOUTOR",104,0)
 ;;MCBPETT
"RTN","MDOUTOR",105,0)
 ;;**END**
"RTN","MDOUTOR",106,0)
SURG ;;[Surgical Risk Assessment options]
"RTN","MDOUTOR",107,0)
 ;;MCARCATHSRAPRE
"RTN","MDOUTOR",108,0)
 ;;MCARCATHSRAPOST
"RTN","MDOUTOR",109,0)
 ;;MCARSRAPRE
"RTN","MDOUTOR",110,0)
 ;;MCARSRAPOST
"RTN","MDOUTOR",111,0)
 ;;MCARCATHSRAPRINT
"RTN","MDOUTOR",112,0)
 ;;**END**
"RTN","MDOUTOR",113,0)
CONSULT ;;[Consult options]
"RTN","MDOUTOR",114,0)
 ;;MCARGICONSULTEDIT
"RTN","MDOUTOR",115,0)
 ;;MCCONSULTSCREEN
"RTN","MDOUTOR",116,0)
 ;;MCARGICONSULTPRINT
"RTN","MDOUTOR",117,0)
 ;;MCARGICONSULTBRIEF
"RTN","MDOUTOR",118,0)
 ;;MCCONSULTBRSCR
"RTN","MDOUTOR",119,0)
 ;;MCCONSULTBRREPORT
"RTN","MDOUTOR",120,0)
 ;;**END**
"RTN","MDOUTOR",121,0)
GI ;;[GI options]
"RTN","MDOUTOR",122,0)
 ;;MCFLGI
"RTN","MDOUTOR",123,0)
 ;;MCFSGI
"RTN","MDOUTOR",124,0)
 ;;MCFPGI
"RTN","MDOUTOR",125,0)
 ;;MCARGIDIAG
"RTN","MDOUTOR",126,0)
 ;;MCARGIRECALLIST
"RTN","MDOUTOR",127,0)
 ;;MCARGIMAGE
"RTN","MDOUTOR",128,0)
 ;;MCBLGI
"RTN","MDOUTOR",129,0)
 ;;MCBSGI
"RTN","MDOUTOR",130,0)
 ;;MCBPGI
"RTN","MDOUTOR",131,0)
 ;;MCFLNONENDO
"RTN","MDOUTOR",132,0)
 ;;MCFSNONENDO
"RTN","MDOUTOR",133,0)
 ;;MCFPNONENDO
"RTN","MDOUTOR",134,0)
 ;;MCBLNONENDO
"RTN","MDOUTOR",135,0)
 ;;MCBSNONENDO
"RTN","MDOUTOR",136,0)
 ;;MCBPNONENDO
"RTN","MDOUTOR",137,0)
 ;;**END**
"RTN","MDOUTOR",138,0)
PULM ;;[Pulmonary options]
"RTN","MDOUTOR",139,0)
 ;;MCFLPULM
"RTN","MDOUTOR",140,0)
 ;;MCFSPULM
"RTN","MDOUTOR",141,0)
 ;;MCFPPULM
"RTN","MDOUTOR",142,0)
 ;;MCARPULMDIAG
"RTN","MDOUTOR",143,0)
 ;;MCARPULMRECALLIST
"RTN","MDOUTOR",144,0)
 ;;MCARPULMIMAGE
"RTN","MDOUTOR",145,0)
 ;;MCBLPULM
"RTN","MDOUTOR",146,0)
 ;;MCBSPULM
"RTN","MDOUTOR",147,0)
 ;;MCBPPULM
"RTN","MDOUTOR",148,0)
 ;;**END**
"RTN","MDOUTOR",149,0)
PFT ;;[Pulmonary Function Test Options]
"RTN","MDOUTOR",150,0)
 ;;MCFLPFT
"RTN","MDOUTOR",151,0)
 ;;MCFLPFTI
"RTN","MDOUTOR",152,0)
 ;;MCFPPFT
"RTN","MDOUTOR",153,0)
 ;;MCFSPFT
"RTN","MDOUTOR",154,0)
 ;;MCBLPFT
"RTN","MDOUTOR",155,0)
 ;;MCBSPFT
"RTN","MDOUTOR",156,0)
 ;;MCBPPFT
"RTN","MDOUTOR",157,0)
 ;;**END**
"RTN","MDOUTOR",158,0)
HEM ;;[Hematology options]
"RTN","MDOUTOR",159,0)
 ;;MCFLHEM
"RTN","MDOUTOR",160,0)
 ;;MCFSHEM
"RTN","MDOUTOR",161,0)
 ;;MCFPHEM
"RTN","MDOUTOR",162,0)
 ;;MCARHEMIMAGE
"RTN","MDOUTOR",163,0)
 ;;MCBLHEM
"RTN","MDOUTOR",164,0)
 ;;MCBSHEM
"RTN","MDOUTOR",165,0)
 ;;MCBPHEM
"RTN","MDOUTOR",166,0)
 ;;**END**
"RTN","MDOUTOR",167,0)
PACE ;;[Pacemaker options]
"RTN","MDOUTOR",168,0)
 ;;MCARPACEMULTEDIT
"RTN","MDOUTOR",169,0)
 ;;MCARPACEGENIMP
"RTN","MDOUTOR",170,0)
 ;;MCFLALEAD
"RTN","MDOUTOR",171,0)
 ;;MCFLVLEAD
"RTN","MDOUTOR",172,0)
 ;;MCFLSURV
"RTN","MDOUTOR",173,0)
 ;;MCARPACEDIT
"RTN","MDOUTOR",174,0)
 ;;MCBLGENE
"RTN","MDOUTOR",175,0)
 ;;MCBLALEAD
"RTN","MDOUTOR",176,0)
 ;;MCBLVLEAD
"RTN","MDOUTOR",177,0)
 ;;MCBLSURV
"RTN","MDOUTOR",178,0)
 ;;MCFSMULTI
"RTN","MDOUTOR",179,0)
 ;;MCFSGENIMPL.
"RTN","MDOUTOR",180,0)
 ;;MCFSALEAD
"RTN","MDOUTOR",181,0)
 ;;MCFSVLEAD
"RTN","MDOUTOR",182,0)
 ;;MCARPACESCREENSURV
"RTN","MDOUTOR",183,0)
 ;;MCARPACESCREENDEMO
"RTN","MDOUTOR",184,0)
 ;;MCBSGENI
"RTN","MDOUTOR",185,0)
 ;;MCBSALEAD
"RTN","MDOUTOR",186,0)
 ;;MCBSVLEAD
"RTN","MDOUTOR",187,0)
 ;;MCPACSURVBRSCR
"RTN","MDOUTOR",188,0)
 ;;MCARPACEGENPRINT
"RTN","MDOUTOR",189,0)
 ;;MCFPALEAD
"RTN","MDOUTOR",190,0)
 ;;MCFPVLEAD
"RTN","MDOUTOR",191,0)
 ;;MCARPACESURVPRINT
"RTN","MDOUTOR",192,0)
 ;;MCARPACEPATIENT
"RTN","MDOUTOR",193,0)
 ;;MCBPGEN.IMPLANT
"RTN","MDOUTOR",194,0)
 ;;MCBPALEAD
"RTN","MDOUTOR",195,0)
 ;;MCBPVLEAD
"RTN","MDOUTOR",196,0)
 ;;MCPACSURVBRREPORT
"RTN","MDOUTOR",197,0)
 ;;**END**
"RTN","MDOUTOR",198,0)
RHEUM ;;[Rheumatology options]
"RTN","MDOUTOR",199,0)
 ;;MCRHDIAGF
"RTN","MDOUTOR",200,0)
 ;;MCRHBACKF
"RTN","MDOUTOR",201,0)
 ;;MCRHNARRF
"RTN","MDOUTOR",202,0)
 ;;MCRHLABF
"RTN","MDOUTOR",203,0)
 ;;MCRHHAQF
"RTN","MDOUTOR",204,0)
 ;;MCRHPATHISTF
"RTN","MDOUTOR",205,0)
 ;;MCRHPHYSF
"RTN","MDOUTOR",206,0)
 ;;MCRHDEATHF
"RTN","MDOUTOR",207,0)
 ;;MCRHDIAGP
"RTN","MDOUTOR",208,0)
 ;;MCRHBACKP
"RTN","MDOUTOR",209,0)
 ;;MCRHNARRP
"RTN","MDOUTOR",210,0)
 ;;MCRHLABP
"RTN","MDOUTOR",211,0)
 ;;MCRHHAQP
"RTN","MDOUTOR",212,0)
 ;;MCRHPATHISTP
"RTN","MDOUTOR",213,0)
 ;;MCRHPHYSP
"RTN","MDOUTOR",214,0)
 ;;MCRHDEATHP
"RTN","MDOUTOR",215,0)
 ;;MCRHALLP
"RTN","MDOUTOR",216,0)
 ;;MCBPRHEUM
"RTN","MDOUTOR",217,0)
 ;;MCRHIMAGE
"RTN","MDOUTOR",218,0)
 ;;MCRHDIAGL
"RTN","MDOUTOR",219,0)
 ;;MCRHNARRL
"RTN","MDOUTOR",220,0)
 ;;MCRHHAQL
"RTN","MDOUTOR",221,0)
 ;;MCRHPATHISTL
"RTN","MDOUTOR",222,0)
 ;;MCRHPHYSL
"RTN","MDOUTOR",223,0)
 ;;MCRHDEATHL
"RTN","MDOUTOR",224,0)
 ;;MCRHBRIEF
"RTN","MDOUTOR",225,0)
 ;;MCFLGEN
"RTN","MDOUTOR",226,0)
 ;;MCFSGEN
"RTN","MDOUTOR",227,0)
 ;;MCGENERICIMAGE
"RTN","MDOUTOR",228,0)
 ;;MCBLGEN
"RTN","MDOUTOR",229,0)
 ;;MCBSGEN
"RTN","MDOUTOR",230,0)
 ;;**END**
"RTN","MDOUTOR",231,0)
SUMM ;;[Procedure Summary option]
"RTN","MDOUTOR",232,0)
 ;;MCARSUMMARY
"RTN","MDOUTOR",233,0)
 ;;**END**
"RTN","MDPCE")
0^11^B4577099^B4297640
"RTN","MDPCE",1,0)
MDPCE ; HIRMFO/NCA - Routine For Data Extract ; [05-28-2002 12:55]
"RTN","MDPCE",2,0)
 ;;1.0;CLINICAL PROCEDURES;**5**;Apr 01, 2004;Build 1
"RTN","MDPCE",3,0)
 ; Integration Agreements:
"RTN","MDPCE",4,0)
 ; IA# 1889 [Subscription] Create New Visit
"RTN","MDPCE",5,0)
 ;
"RTN","MDPCE",6,0)
EN1(MDINST,MDPDTE,MDPR,MDTYP,MDETYP) ; [Function] PCE Visit Creation
"RTN","MDPCE",7,0)
 ; Input parameters
"RTN","MDPCE",8,0)
 ;  1. MDINST [Literal/Required] Transaction IEN
"RTN","MDPCE",9,0)
 ;  2. MDPDT [Literal/Optional] Procedure Date/Time
"RTN","MDPCE",10,0)
 ;  3. MDPR [Literal/Required] CP Definition
"RTN","MDPCE",11,0)
 ;  4. MDTYP [Literal/Required] Type of Visit (Ambulatory or Hospitalization or Event (Historical))
"RTN","MDPCE",12,0)
 ;  5. MDETYP [Literal/Required] Encounter Type (Primary or Ancillary)
"RTN","MDPCE",13,0)
 ;
"RTN","MDPCE",14,0)
 N DATA,MDCLOC,MDPERR,MDJ,MDPKG,MDRES,MDSTR,MDVISIT,MDDRES K ^TMP("MDPXAPI",$J)
"RTN","MDPCE",15,0)
 S MDOUT=""
"RTN","MDPCE",16,0)
 S MDPKG=$$FIND1^DIC(9.4,"","MX","CLINICAL PROCEDURES")
"RTN","MDPCE",17,0)
 I 'MDPKG Q "-1^CLINICAL PROCEDURES does not exist in Package File."
"RTN","MDPCE",18,0)
 I '$D(^MDD(702,MDINST,0)) Q "-1^No Study Record."
"RTN","MDPCE",19,0)
 S MDSTR=$G(^MDD(702,MDINST,0))
"RTN","MDPCE",20,0)
 S MDJ=0,MDJ=MDJ+1
"RTN","MDPCE",21,0)
 S MDCLOC=$$GET1^DIQ(702.01,+MDPR_",",.05,"I")
"RTN","MDPCE",22,0)
 I 'MDCLOC S:MDPR["^" MDCLOC=$P(MDPR,"^",2)
"RTN","MDPCE",23,0)
 I 'MDCLOC Q "-1^No Hospital Location for CP Definition."
"RTN","MDPCE",24,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"ENC D/T")=MDPDTE
"RTN","MDPCE",25,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"PATIENT")=$P(MDSTR,"^",1)
"RTN","MDPCE",26,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"HOS LOC")=MDCLOC
"RTN","MDPCE",27,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"SERVICE CATEGORY")=MDTYP
"RTN","MDPCE",28,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"ENCOUNTER TYPE")=MDETYP
"RTN","MDPCE",29,0)
 S MDRES=$$DATA2PCE^PXAPI("^TMP(""MDPXAPI"",$J)",MDPKG,"CLINICAL PROCEDURES",.MDVISIT,"","",1,"",.MDPERR)
"RTN","MDPCE",30,0)
 I MDRES S MDOUT=MDVISIT_"^"_MDCLOC_";"_MDPDTE_";"_MDTYP S MDFDA(702,MDINST_",",.07)=MDTYP_";"_MDPDTE_";"_MDCLOC D FILE^DIE("K","MDFDA") K ^TMP("MDPXAPI",$J) Q MDOUT
"RTN","MDPCE",31,0)
 K ^TMP("MDPXAPI",$J)
"RTN","MDPCE",32,0)
 S MDOUT="-1^PCE Visit Creation Error."
"RTN","MDPCE",33,0)
 Q MDOUT
"RTN","MDPCE",34,0)
 ;
"RTN","MDPOST5")
0^9^B1064423^n/a
"RTN","MDPOST5",1,0)
MDPOST5 ; HOIFO/NCA - Post-Init Routine ; [04-14-2003 10:51]
"RTN","MDPOST5",2,0)
 ;;1.0;CLINICAL PROCEDURES;**5**;Apr 01, 2004;Build 1
"RTN","MDPOST5",3,0)
 ; Reference IA # 1157 [Supported] Kernel XPDMENU calls.
"RTN","MDPOST5",4,0)
EN1 ; [Procedure]
"RTN","MDPOST5",5,0)
 ; If the patch Medicine is not installed disable the conversion
"RTN","MDPOST5",6,0)
 ; options.
"RTN","MDPOST5",7,0)
 ;
"RTN","MDPOST5",8,0)
 N MDPKG
"RTN","MDPOST5",9,0)
 S MDPKG=$$FIND1^DIC(9.4,"","MX","MEDICINE") Q:+MDPKG
"RTN","MDPOST5",10,0)
 N MDFDA,MDPI,MDOPI,MDOPT,MDX
"RTN","MDPOST5",11,0)
 F MDX=1:1 S MDOPT=$P($T(OPTIONS+MDX),";;",2) Q:MDOPT="**END**"  D
"RTN","MDPOST5",12,0)
 .Q:MDOPT=""
"RTN","MDPOST5",13,0)
 .S MDPI=$$FIND1^DIC(19,"","MX",MDOPT) Q:'MDPI
"RTN","MDPOST5",14,0)
 .D OUT^XPDMENU(MDOPT,"Out of Order")
"RTN","MDPOST5",15,0)
 .Q
"RTN","MDPOST5",16,0)
 Q
"RTN","MDPOST5",17,0)
 ;
"RTN","MDPOST5",18,0)
OPTIONS ; [MD Conversion Options]
"RTN","MDPOST5",19,0)
 ;;MDCVT SETUP
"RTN","MDPOST5",20,0)
 ;;MDCVT BUILD CONVERSION LIST
"RTN","MDPOST5",21,0)
 ;;MDCVT RUN
"RTN","MDPOST5",22,0)
 ;;MDCVT SUMMARY
"RTN","MDPOST5",23,0)
 ;;MDCVT DISK SPACE
"RTN","MDPOST5",24,0)
 ;;MDCVT LIST OF TIU TITLES
"RTN","MDPOST5",25,0)
 ;;MDCVT TOTALS
"RTN","MDPOST5",26,0)
 ;;MDCVT ERROR LOG
"RTN","MDPOST5",27,0)
 ;;MDCVT CONVERSION LOCKOUT
"RTN","MDPOST5",28,0)
 ;;MDCVT MANAGER
"RTN","MDPOST5",29,0)
 ;;**END**
"RTN","MDPOST5",30,0)
 Q
"RTN","MDPS3")
0^17^B8616457^B8516931
"RTN","MDPS3",1,0)
MDPS3 ; HOIFO/NCA - Remote Data View Data Retriever for CP ;4/29/04  10:50
"RTN","MDPS3",2,0)
 ;;1.0;CLINICAL PROCEDURES;**2,5**;Apr 01, 2004;Build 1
"RTN","MDPS3",3,0)
 ; Integration Agreements:
"RTN","MDPS3",4,0)
 ; Reference IA# 2693 [Subscription] TIU Extractions.
"RTN","MDPS3",5,0)
 ;               3067 [Private] Read fields in Consult file (#123) w/FM
"RTN","MDPS3",6,0)
 ;               10104 [Supported] Routine XLFSTR calls.
"RTN","MDPS3",7,0)
 ;                 875 [Subscription] Access Order Status file (#100.01)
"RTN","MDPS3",8,0)
 ;
"RTN","MDPS3",9,0)
GET702(MDGLO,MDDFN,MDC,MDSDT,MDEDT,MDMAX) ; Gather the new 702 entries
"RTN","MDPS3",10,0)
 N MDARR,MDCON,MDDTE,MDLP,MDCODE,MDPROC,MDSTAT,MDX
"RTN","MDPS3",11,0)
 S MDLP="" F  S MDLP=$O(^MDD(702,"B",MDDFN,MDLP)) Q:MDLP<1  D
"RTN","MDPS3",12,0)
 .S MDX=$G(^MDD(702,MDLP,0)) Q:$P(MDX,"^",9)'=3
"RTN","MDPS3",13,0)
 .S MDPROC=$$GET1^DIQ(702,MDLP_",",.04,"E") Q:MDPROC=""
"RTN","MDPS3",14,0)
 .Q:'$P(MDX,U,6)
"RTN","MDPS3",15,0)
 .K ^TMP("MDTIUST",$J) S MDTIUER=""
"RTN","MDPS3",16,0)
 .D EXTRACT^TIULQ($P(MDX,U,6),"^TMP(""MDTIUST"",$J)",MDTIUER,".01;.05;70201;70202") Q:+MDTIUER
"RTN","MDPS3",17,0)
 .S MDCODE=$G(^TMP("MDTIUST",$J,$P(MDX,U,6),70201,"E"))
"RTN","MDPS3",18,0)
 .S:MDCODE'="" MDCODE=$$UP^XLFSTR(MDCODE)
"RTN","MDPS3",19,0)
 .I $G(MDC)'="" Q:MDCODE'=$G(MDC)
"RTN","MDPS3",20,0)
 .S MDDTE=$G(^TMP("MDTIUST",$J,$P(MDX,U,6),70202,"I"))
"RTN","MDPS3",21,0)
 .S MDSTAT=$G(^TMP("MDTIUST",$J,$P(MDX,U,6),.05,"E"))
"RTN","MDPS3",22,0)
 .S:'MDDTE MDDTE=$$GET1^DIQ(702,MDLP_",",.02,"I")
"RTN","MDPS3",23,0)
 .K ^TMP("MDTIUST",$J)
"RTN","MDPS3",24,0)
 .S MDCON=$P(MDX,U,5)
"RTN","MDPS3",25,0)
 .I +$G(MDSDT) Q:MDDTE<+$G(MDSDT)
"RTN","MDPS3",26,0)
 .I +$G(MDEDT) Q:MDDTE>+$G(MDEDT)
"RTN","MDPS3",27,0)
 .I MDCON D  Q:MDSTAT'="COMPLETE"
"RTN","MDPS3",28,0)
 ..S MDSTAT=$$GET1^DIQ(123,MDCON_",",8,"E")
"RTN","MDPS3",29,0)
 ..I MDSTAT="" S MDSTAT=$$GET1^DIQ(123,MDCON_",",8,"I") S:+MDSTAT MDSTAT=$$GET1^DIQ(100.01,MDSTAT_",",.01,"E")
"RTN","MDPS3",30,0)
 ..Q
"RTN","MDPS3",31,0)
 .S Y=MDDTE X ^DD("DD") N MDREV S MDREV=(9999999.9999-MDDTE)
"RTN","MDPS3",32,0)
 .I MDCON Q:$G(MDARR(MDCON))'=""  S MDARR(MDCON)=MDCON
"RTN","MDPS3",33,0)
 .S:$G(^TMP("MDPLST",$J,MDPROC,MDREV_"^"_MDLP))="" ^(MDREV_"^"_MDLP)=MDPROC_"^"_MDLP_"^"_"PR702"_"^"_"MDPS1"_"^^"_Y_"^"_MDCODE_"^^^^"_MDPROC_"^^"_MDCON
"RTN","MDPS3",34,0)
 .Q
"RTN","MDPS3",35,0)
 K MDARR
"RTN","MDPS3",36,0)
 Q
"RTN","MDPS3",37,0)
PRO(RESULT) ;  Function to return info on single proceedure.
"RTN","MDPS3",38,0)
 ;
"RTN","MDPS3",39,0)
 ; RESULT = variable pointer to a medicine file
"RTN","MDPS3",40,0)
 ;          (e.g. "12;MCAR(691.5,") (required)
"RTN","MDPS3",41,0)
 N MDVAL,LL,S3,S4,S5
"RTN","MDPS3",42,0)
 S S3=+RESULT,S4=$P(RESULT,";",2),S4=$P(S4,",")
"RTN","MDPS3",43,0)
 I S4="MCAR(702.7" Q ""
"RTN","MDPS3",44,0)
 I S4="MCAR(699" S LL=$P($G(^MCAR(699,+S3,0)),U,12),MDVAL=$P($G(^MCAR(697.2,+LL,0)),U) Q MDVAL
"RTN","MDPS3",45,0)
 I S4="MCAR(699.5" S LL=$P($G(^MCAR(699.5,+S3,0)),U,6),MDVAL=$P($G(^MCAR(697.2,+LL,0)),U) Q MDVAL
"RTN","MDPS3",46,0)
 I S4="MCAR(694" S LL=$P($G(^MCAR(699.5,+S3,0)),U,6),MDVAL=$P($G(^MCAR(697.2,+LL,0)),U) Q MDVAL
"RTN","MDPS3",47,0)
 S LL=$O(^MCAR(697.2,"C",S4,0)),MDVAL=$P(^MCAR(697.2,LL,0),U)
"RTN","MDPS3",48,0)
 Q MDVAL
"RTN","MDPS3",49,0)
HDR ; Print Header for Report Form Feed
"RTN","MDPS3",50,0)
 N FFL,MDNM,MDNAME,MDTITL S $P(FFL,"-",80)=""
"RTN","MDPS3",51,0)
 S MDNM=$QS(MDREC,4),MDNAME=$O(^MCAR(697.2,"B",MDNM,0))
"RTN","MDPS3",52,0)
 I MDNAME S MDTITL=$P($G(^MCAR(697.2,+MDNAME,0)),"^",8)
"RTN","MDPS3",53,0)
 I $G(MDTITL)="" S MDNAME=$O(^MDS(702.01,"B",MDNM,0)) S:MDNAME MDTITL=$P($G(^MDS(702.01,+MDNAME,0)),U)
"RTN","MDPS3",54,0)
 W !!
"RTN","MDPS3",55,0)
 S MDRPG=MDRPG+1 W !,"Pg. "_MDRPG_$J(" ",25)_$$HOSP^MDPS2(DFN)
"RTN","MDPS3",56,0)
 I $G(MDTITL)'="" W !,$J(" ",25)_MDTITL
"RTN","MDPS3",57,0)
 W !,$$DEMO^MDPS2(DFN)
"RTN","MDPS3",58,0)
 W !,FFL
"RTN","MDPS3",59,0)
 Q
"RTN","MDRPCOT")
0^3^B62244057^B61489222
"RTN","MDRPCOT",1,0)
MDRPCOT ; HOIFO/DP/NCA - Object RPCs (TMDTransaction) ;12/5/02  15:33
"RTN","MDRPCOT",2,0)
 ;;1.0;CLINICAL PROCEDURES;**5**;Apr 01, 2004;Build 1
"RTN","MDRPCOT",3,0)
 ; Integration Agreements:
"RTN","MDRPCOT",4,0)
 ; IA# 2693 [Subscription] TIU Extractions.
"RTN","MDRPCOT",5,0)
 ; IA# 2944 [Subscription] Calls to TIUSRVR1.
"RTN","MDRPCOT",6,0)
 ; IA# 3535 [Subscription] Calls to TIUSRVP.
"RTN","MDRPCOT",7,0)
 ; IA# 10104 [Supported] Routine XLFSTR calls
"RTN","MDRPCOT",8,0)
ADDMSG ; [Procedure] Add message to transaction
"RTN","MDRPCOT",9,0)
 N MDIEN,MDIENS,MDRET
"RTN","MDRPCOT",10,0)
 Q:'$G(DATA("TRANSACTION"))
"RTN","MDRPCOT",11,0)
 Q:$G(DATA("MESSAGE"))=""
"RTN","MDRPCOT",12,0)
 S MDIEN=+DATA("TRANSACTION"),MDIENS="+1,"_MDIEN_","
"RTN","MDRPCOT",13,0)
 D NOW^%DTC S DATA("DATE")=% K %
"RTN","MDRPCOT",14,0)
 S MDFDA(702.091,MDIENS,.01)=+$O(^MDD(702,+MDIEN,.091,"A"),-1)+1
"RTN","MDRPCOT",15,0)
 S MDFDA(702.091,MDIENS,.02)=DATA("DATE")
"RTN","MDRPCOT",16,0)
 S MDFDA(702.091,MDIENS,.03)=$G(DATA("PKG"),"UNKNOWN")
"RTN","MDRPCOT",17,0)
 S MDFDA(702.091,MDIENS,.09)=DATA("MESSAGE")
"RTN","MDRPCOT",18,0)
 D UPDATE^DIE("","MDFDA","MDRET")
"RTN","MDRPCOT",19,0)
 Q
"RTN","MDRPCOT",20,0)
 ;
"RTN","MDRPCOT",21,0)
DELETE ; [Procedure] Delete Study
"RTN","MDRPCOT",22,0)
 ; Sets @RESULTS@(0)="-1^Reason for not deleting" or "1^Study Deleted"
"RTN","MDRPCOT",23,0)
 ;
"RTN","MDRPCOT",24,0)
 N MDHOLD,MDNOTE,MDRES,MDSIEN
"RTN","MDRPCOT",25,0)
 S (MDHOLD,MDSIEN)=+DATA,MDRES=0,MDNOTE=""
"RTN","MDRPCOT",26,0)
 S:+$P(^MDD(702,MDSIEN,0),U,6) MDNOTE=$P(^MDD(702,MDSIEN,0),U,6)
"RTN","MDRPCOT",27,0)
 I "13"[$P(^MDD(702,MDSIEN,0),U,9) S @RESULTS@(0)="-1^Can't Delete TIU Note from a "_$$GET1^DIQ(702,MDSIEN,.09,"E")_" Study." Q
"RTN","MDRPCOT",28,0)
 I "5"[$P(^MDD(702,MDSIEN,0),U,9) S MDCANR=$$CANCEL^MDHL7B(MDHOLD) I MDCANR<1 S @RESULTS@(0)="-1^"_$P(MDCANR,"^",2) Q
"RTN","MDRPCOT",29,0)
 I +MDNOTE S MDRES="" D DELETE^TIUSRVP(.MDRES,MDNOTE)
"RTN","MDRPCOT",30,0)
 I MDRES D  Q
"RTN","MDRPCOT",31,0)
 .D STATUS(MDSIEN_",",2,$P(MDRES,"^",2))
"RTN","MDRPCOT",32,0)
 .S DATA("TRANSACTION")=MDSIEN,DATA("PKG")="TIU"
"RTN","MDRPCOT",33,0)
 .S DATA("MESSAGE")=$P(MDRES,"^",2) D ADDMSG
"RTN","MDRPCOT",34,0)
 .S @RESULTS@(0)="-1^"_$P(MDRES,"^",2)
"RTN","MDRPCOT",35,0)
 .Q
"RTN","MDRPCOT",36,0)
 E  D
"RTN","MDRPCOT",37,0)
 .S MDFDA(702,DATA_",",.01)=""
"RTN","MDRPCOT",38,0)
 .D FILE^DIE("","MDFDA")
"RTN","MDRPCOT",39,0)
 .N DA,DIK S DA=+MDSIEN,DIK="^MDD(702," D ^DIK
"RTN","MDRPCOT",40,0)
 .S @RESULTS@(0)="1^Study Deleted."
"RTN","MDRPCOT",41,0)
 .Q
"RTN","MDRPCOT",42,0)
 Q
"RTN","MDRPCOT",43,0)
 ;
"RTN","MDRPCOT",44,0)
FILEMSG(STUDY,MDPKG,MDSTAT,MDMSG) ; [Procedure] File Study Status and Message.
"RTN","MDRPCOT",45,0)
 S DATA("TRANSACTION")=STUDY,DATA("PKG")=MDPKG
"RTN","MDRPCOT",46,0)
 S DATA("MESSAGE")=$P(MDMSG,"^",2)
"RTN","MDRPCOT",47,0)
 D STATUS(STUDY_",",MDSTAT,$P(MDMSG,"^",2)),ADDMSG
"RTN","MDRPCOT",48,0)
 Q
"RTN","MDRPCOT",49,0)
 ;
"RTN","MDRPCOT",50,0)
FILES ; [Procedure] Add/remove an attachment to this transaction
"RTN","MDRPCOT",51,0)
 NEW MDFDA,MDIEN,MDIENS,MDRET,P1,P2,P3,P4
"RTN","MDRPCOT",52,0)
 S P1=$P(DATA,U,1),P2=$P(DATA,U,2),P3=$P(DATA,U,3),P4=$P(DATA,U,4)
"RTN","MDRPCOT",53,0)
 S MDIEN=0
"RTN","MDRPCOT",54,0)
 ; Look for file (All comparisons done on lower case values)
"RTN","MDRPCOT",55,0)
 F  S MDIEN=$O(^MDD(702,P1,.1,MDIEN)) Q:'MDIEN  D  Q:X=P3
"RTN","MDRPCOT",56,0)
 .S X=$$LOW^XLFSTR($G(^MDD(702,P1,.1,MDIEN,.1)))
"RTN","MDRPCOT",57,0)
 I MDIEN&P4 S @RESULTS@(0)="1^File already assigned" Q
"RTN","MDRPCOT",58,0)
 I 'MDIEN&'P4 S @RESULTS@(0)="1^File not assigned" Q
"RTN","MDRPCOT",59,0)
 I P4 D  Q  ; Add a file
"RTN","MDRPCOT",60,0)
 .S MDIENS="+1,"_P1_","
"RTN","MDRPCOT",61,0)
 .S MDFDA(702.1,MDIENS,.01)=$O(^MDD(702,P1,.1,"B",""),-1)+1
"RTN","MDRPCOT",62,0)
 .S MDFDA(702.1,MDIENS,.02)=$S(P2:"I",1:"U")
"RTN","MDRPCOT",63,0)
 .I P2 S MDFDA(702.1,MDIENS,.03)=P2
"RTN","MDRPCOT",64,0)
 .S MDFDA(702.1,MDIENS,.1)=P3
"RTN","MDRPCOT",65,0)
 .D UPDATE^DIE("","MDFDA","MDIEN")
"RTN","MDRPCOT",66,0)
 .S @RESULTS@(0)=+$G(MDIEN(1),-1)
"RTN","MDRPCOT",67,0)
 I 'P4 D  Q  ; Remove the file
"RTN","MDRPCOT",68,0)
 .S MDFDA(702.1,MDIEN_","_P1_",",.01)="@"
"RTN","MDRPCOT",69,0)
 .D FILE^DIE("","MDFDA","MDRET")
"RTN","MDRPCOT",70,0)
 .S @RESULTS@(0)=$S($D(MDRET):-1,1:1)
"RTN","MDRPCOT",71,0)
 Q
"RTN","MDRPCOT",72,0)
 ;
"RTN","MDRPCOT",73,0)
GETATT ; [Procedure] Get Attachments
"RTN","MDRPCOT",74,0)
 F X=0:0 S X=$O(^MDD(702,DATA,.1,X)) Q:'X  D
"RTN","MDRPCOT",75,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","MDRPCOT",76,0)
 .S @RESULTS@(Y)=$P(^MDD(702,DATA,.1,X,0),U,1,3)
"RTN","MDRPCOT",77,0)
 .S $P(@RESULTS@(Y),U,4)=$G(^MDD(702,DATA,.1,X,.1))
"RTN","MDRPCOT",78,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOT",79,0)
 Q
"RTN","MDRPCOT",80,0)
 ;
"RTN","MDRPCOT",81,0)
GETERR ; [Procedure] Return list of Imaging Errors
"RTN","MDRPCOT",82,0)
 ; DATA = Transaction IEN
"RTN","MDRPCOT",83,0)
 F MDX=0:0 S MDX=$O(^MDD(702,DATA,.091,MDX)) Q:'MDX  D
"RTN","MDRPCOT",84,0)
 .S MDY=+^MDD(702,DATA,.091,MDX,0)_U,Y=$P(^(0),U,2)
"RTN","MDRPCOT",85,0)
 .D D^DIQ S MDY=MDY_Y_U
"RTN","MDRPCOT",86,0)
 .S MDY=MDY_$P(^MDD(702,DATA,.091,MDX,0),U,3)_U_$P(^(0),U,9)
"RTN","MDRPCOT",87,0)
 .S ^TMP($J,$O(^TMP($J,""),-1)+1)=MDY
"RTN","MDRPCOT",88,0)
 S ^TMP($J,0)=+$O(^TMP($J,""),-1)
"RTN","MDRPCOT",89,0)
 Q
"RTN","MDRPCOT",90,0)
 ;
"RTN","MDRPCOT",91,0)
NEWSTAT ; [Procedure] RPC Call to set status
"RTN","MDRPCOT",92,0)
 S MDFDA(702,DATA,.09)=TYPE
"RTN","MDRPCOT",93,0)
 D FILE^DIE("","MDFDA")
"RTN","MDRPCOT",94,0)
 Q
"RTN","MDRPCOT",95,0)
 ;
"RTN","MDRPCOT",96,0)
RPC(RESULTS,OPTION,DATA,TYPE,FILE,RESREP) ; [Procedure] Main RPC call
"RTN","MDRPCOT",97,0)
 N MDCANR,MDCON,MDDOC,MDFDA,MDFN,MDGST,MDHOLD,MDIEN,MDIENS,MDL,MDLOC,MDMSG,MDNEWV,MDNOTE,MDNVST,MDPDT,MDPKG,MDPROC,MDRES,MDRESU,MDRESUL,MDRET,MDS,MDSIEN,MDSTAT,MDSTUDY,MDTITL,MDTIUER,MDTRAN,MDTST,MDTSTR,MDVST,MDVSTR,MDWP,MDX,MDY
"RTN","MDRPCOT",98,0)
 S RESULTS=$NA(^TMP($J)) K @RESULTS
"RTN","MDRPCOT",99,0)
 D:$T(@OPTION)]"" @OPTION
"RTN","MDRPCOT",100,0)
 D:'$D(@RESULTS) BADRPC^MDRPCU("MD TMDTRANSACTION","MDRPCOT",OPTION)
"RTN","MDRPCOT",101,0)
 D CLEAN^DILF
"RTN","MDRPCOT",102,0)
 Q
"RTN","MDRPCOT",103,0)
 ;
"RTN","MDRPCOT",104,0)
STATUS(MDIENS,MDSTAT,MDMSG) ; [Procedure] Update transaction status
"RTN","MDRPCOT",105,0)
 S MDFDA(702,MDIENS,.08)=$G(MDMSG)
"RTN","MDRPCOT",106,0)
 S MDFDA(702,MDIENS,.09)=MDSTAT
"RTN","MDRPCOT",107,0)
 D FILE^DIE("","MDFDA")
"RTN","MDRPCOT",108,0)
 Q
"RTN","MDRPCOT",109,0)
 ;
"RTN","MDRPCOT",110,0)
SUBMIT ; [Procedure] Process the Image(s) Submission.
"RTN","MDRPCOT",111,0)
 ; Output: -1^Error Message or
"RTN","MDRPCOT",112,0)
 ;          1^Successful Message
"RTN","MDRPCOT",113,0)
 N MDRESUL,MDSTUDY
"RTN","MDRPCOT",114,0)
 S MDSTUDY=+DATA,MDRESUL=""
"RTN","MDRPCOT",115,0)
 ; Create New TIU Document
"RTN","MDRPCOT",116,0)
 S MDRESUL=$$NEWTIUN(MDSTUDY)
"RTN","MDRPCOT",117,0)
 ; File TIU Error messages
"RTN","MDRPCOT",118,0)
 ;I +MDRESUL<0 D FILEMSG(MDSTUDY,"TIU",2,MDRESUL) Q MDRESUL
"RTN","MDRPCOT",119,0)
 I +MDRESUL<0 D  Q
"RTN","MDRPCOT",120,0)
 .D FILEMSG(MDSTUDY,"TIU",2,MDRESUL)
"RTN","MDRPCOT",121,0)
 .S @RESULTS@(0)=MDRESUL
"RTN","MDRPCOT",122,0)
 ; Submit and export the images
"RTN","MDRPCOT",123,0)
 S MDRESUL=$$SUBMIT^MDRPCOT1(MDSTUDY)
"RTN","MDRPCOT",124,0)
 ; File message
"RTN","MDRPCOT",125,0)
 D FILEMSG(MDSTUDY,"IMAGING",$S(+MDRESUL>0:+MDRESUL,1:2),MDRESUL)
"RTN","MDRPCOT",126,0)
 S @RESULTS@(0)=MDRESUL
"RTN","MDRPCOT",127,0)
 Q
"RTN","MDRPCOT",128,0)
 ;
"RTN","MDRPCOT",129,0)
VIEWTIU ; [Procedure] VIew the associated tiu document
"RTN","MDRPCOT",130,0)
 I '$P(^MDD(702,+DATA,0),U,6) D  Q
"RTN","MDRPCOT",131,0)
 .S @RESULTS@(0)="NO TIU NOTE FOR THIS STUDY"
"RTN","MDRPCOT",132,0)
 D TGET^TIUSRVR1(.RESULTS,+$P(^MDD(702,+DATA,0),U,6))
"RTN","MDRPCOT",133,0)
 Q
"RTN","MDRPCOT",134,0)
 ;
"RTN","MDRPCOT",135,0)
GETDATA(STUDY) ; [Function] Return the Necessary data for creating a TIU note.
"RTN","MDRPCOT",136,0)
 ; Return: Patient DFN_"^"_TIU title_"^"_Hospital Location_"^"_TIU Note
"RTN","MDRPCOT",137,0)
 ;         IEN_"^"_Consult #_"^"_CP Definition IEN_"^"_Visit String_"^"
"RTN","MDRPCOT",138,0)
 ;         New Visit Flag
"RTN","MDRPCOT",139,0)
 ;         or
"RTN","MDRPCOT",140,0)
 ;         -1^Error Message
"RTN","MDRPCOT",141,0)
 N DFN,MDCON,MDFN,MDIEN,MDIENS,MDLOC,MDNEWV,MDNOTE,MDNVST,MDPROC,MDVSTR,MDTITL,MDX,MDTST
"RTN","MDRPCOT",142,0)
 S MDIEN=+STUDY,MDIENS=MDIEN_",",MDNVST=0
"RTN","MDRPCOT",143,0)
 I $$GET1^DIQ(702,MDIENS,.01)="" Q "-1^No such study entry."
"RTN","MDRPCOT",144,0)
 ; Get DFN
"RTN","MDRPCOT",145,0)
 S DFN=$$GET1^DIQ(702,MDIEN,.01,"I")
"RTN","MDRPCOT",146,0)
 I 'DFN Q "-1^No DFN."
"RTN","MDRPCOT",147,0)
 ; Get CP Def
"RTN","MDRPCOT",148,0)
 S MDPROC=$$GET1^DIQ(702,MDIEN,.04,"I")
"RTN","MDRPCOT",149,0)
 I 'MDPROC Q "-1^No CP Def."
"RTN","MDRPCOT",150,0)
 ; Get Consult
"RTN","MDRPCOT",151,0)
 S MDCON=$$GET1^DIQ(702,MDIEN,.05,"I")
"RTN","MDRPCOT",152,0)
 I 'MDCON Q "-1^No Consult #."
"RTN","MDRPCOT",153,0)
 ; Get TIU Note Title
"RTN","MDRPCOT",154,0)
 S MDTITL=$$GET1^DIQ(702.01,+MDPROC_",",.04,"I")
"RTN","MDRPCOT",155,0)
 I 'MDTITL Q "-1^No TIU Note Title."
"RTN","MDRPCOT",156,0)
 S MDVSTR=$$GET1^DIQ(702,MDIEN,.07)
"RTN","MDRPCOT",157,0)
 I MDVSTR=""  Q "-1^No Visit String."
"RTN","MDRPCOT",158,0)
 I $L(MDVSTR,";")=1 S MDNVST=1,MDVSTR=";"_MDVSTR ; If new visit is selected
"RTN","MDRPCOT",159,0)
 ; MDLOC is Hospital Location
"RTN","MDRPCOT",160,0)
 I MDVSTR'="" D
"RTN","MDRPCOT",161,0)
 .S MDVSTR=$$GETVSTR^MDRPCOT1(DFN,MDVSTR,MDPROC,$$GET1^DIQ(702,MDIEN,.02,"I"))
"RTN","MDRPCOT",162,0)
 .S MDLOC=$P(MDVSTR,";",1)
"RTN","MDRPCOT",163,0)
 ; Does TIU doc already exist?
"RTN","MDRPCOT",164,0)
 I $$GET1^DIQ(702,MDIEN,.06,"I") Q DFN_"^"_MDTITL_"^"_MDLOC_"^"_+$$GET1^DIQ(702,MDIEN,.06,"I")_"^"_MDCON_"^"_MDPROC_"^"_MDVSTR_"^"_MDNVST
"RTN","MDRPCOT",165,0)
 ; Does TIU doc exist for previous transaction of this consult?
"RTN","MDRPCOT",166,0)
 I MDCON S MDNOTE=$$PREV(MDCON,MDIEN)
"RTN","MDRPCOT",167,0)
 Q DFN_"^"_MDTITL_"^"_MDLOC_"^"_+MDNOTE_"^"_MDCON_"^"_MDPROC_"^"_MDVSTR_"^"_MDNVST
"RTN","MDRPCOT",168,0)
 ;
"RTN","MDRPCOT",169,0)
NEWTIUN(STUDY) ; [Function] Create a new TIU for transaction
"RTN","MDRPCOT",170,0)
 ; Input: STUDY - IENS of CP study entry
"RTN","MDRPCOT",171,0)
 ; Return: TIU Document IEN
"RTN","MDRPCOT",172,0)
 N CTR,DFN,MDCON,MDFDA,MDGST,MDL,MDLOC,MDNOTE,MDPDT,MDPROC,MDRESU,MDTITL,MDTSTR,MDVST,MDVSTR,MDWP S CTR=0,MDGST=+STUDY,MDRESU=""
"RTN","MDRPCOT",173,0)
 ; Get data for TIU Note Creation
"RTN","MDRPCOT",174,0)
 S (MDTSTR,MDRESU)=$$GETDATA(MDGST)
"RTN","MDRPCOT",175,0)
 ; File Error message
"RTN","MDRPCOT",176,0)
 I +MDRESU<0 D FILEMSG(MDGST,"CP",2,MDRESU) Q MDRESU
"RTN","MDRPCOT",177,0)
 I $G(MDTSTR)="" Q "-1^No Data to Create TIU Document"
"RTN","MDRPCOT",178,0)
 F MDL="DFN","MDTITL","MDLOC","MDNOTE","MDCON","MDPROC","MDVSTR","MDNVST" D
"RTN","MDRPCOT",179,0)
 .S CTR=CTR+1,@MDL=$P(MDTSTR,"^",CTR)
"RTN","MDRPCOT",180,0)
 S MDVST=""
"RTN","MDRPCOT",181,0)
 ; If previous TIU document exists, quit
"RTN","MDRPCOT",182,0)
 I MDNOTE Q MDNOTE
"RTN","MDRPCOT",183,0)
 I 'MDLOC Q "-1^No Hospital Location."
"RTN","MDRPCOT",184,0)
 ; Create new visit, if no vstring
"RTN","MDRPCOT",185,0)
 S MDPDT=$$PDT^MDRPCOT1(MDGST)
"RTN","MDRPCOT",186,0)
 S:'MDPDT MDPDT=$P(MDVSTR,";",2) ; If No D/T Performed grab visit D/T
"RTN","MDRPCOT",187,0)
 ; Build variables for TIU Call
"RTN","MDRPCOT",188,0)
 S MDWP(.05)=1 ; Undicated Status
"RTN","MDRPCOT",189,0)
 S MDWP(1405)=+MDCON_";GMR(123," ; Package Reference
"RTN","MDRPCOT",190,0)
 I MDPDT S MDWP(70202)=MDPDT ; Date/Time Performed
"RTN","MDRPCOT",191,0)
 ; File PCE Error message
"RTN","MDRPCOT",192,0)
 I MDNVST S MDRESU=$$EN1^MDPCE(MDGST,MDPDT,MDPROC,$P(MDVSTR,";",3),"P") I +MDRESU S MDVST=+MDRESU,MDVSTR=$P(MDRESU,"^",2)
"RTN","MDRPCOT",193,0)
 I MDNVST&(+MDRESU<0) D FILEMSG(MDGST,"PCE",2,$P(MDRESU,"^",2)) Q MDRESU
"RTN","MDRPCOT",194,0)
 ; Create the TIU note stub
"RTN","MDRPCOT",195,0)
 S MDNOTE="" D MAKE^TIUSRVP(.MDNOTE,DFN,MDTITL,$P(MDVSTR,";",2),MDLOC,$S(MDVST:MDVST,1:""),.MDWP,MDVSTR,1,1)
"RTN","MDRPCOT",196,0)
 I '(+MDNOTE) S $P(MDNOTE,"^")=-1 Q MDNOTE
"RTN","MDRPCOT",197,0)
 ; Finalize the transaction
"RTN","MDRPCOT",198,0)
 S MDFDA(702,STUDY_",",.06)=+MDNOTE
"RTN","MDRPCOT",199,0)
 S MDFDA(702,STUDY_",",.08)=""
"RTN","MDRPCOT",200,0)
 D FILE^DIE("","MDFDA")
"RTN","MDRPCOT",201,0)
 Q 1
"RTN","MDRPCOT",202,0)
 ;
"RTN","MDRPCOT",203,0)
PREV(MDC,MDS) ; [Function] Return the Previous TIU document.
"RTN","MDRPCOT",204,0)
 N MDNEWV,MDDOC,MDTRAN,MDTIUER,MDTST
"RTN","MDRPCOT",205,0)
 S (MDDOC,MDNEWV,MDTRAN,MDTIUER,MDTST)="" K ^TMP("MDTIUST",$J)
"RTN","MDRPCOT",206,0)
 F  S MDTRAN=$O(^MDD(702,"ACON",MDC,MDTRAN)) Q:'MDTRAN  D  Q:'MDTRAN
"RTN","MDRPCOT",207,0)
 .I $P(^MDD(702,MDTRAN,0),U,6) D
"RTN","MDRPCOT",208,0)
 ..D EXTRACT^TIULQ($P(^MDD(702,MDTRAN,0),U,6),"^TMP(""MDTIUST"",$J)",MDTIUER,".01;.05;1406") Q:+MDTIUER
"RTN","MDRPCOT",209,0)
 ..S MDTST=$G(^TMP("MDTIUST",$J,$P(^MDD(702,MDTRAN,0),U,6),.05,"E"))
"RTN","MDRPCOT",210,0)
 ..I MDTST'="UNDICTATED"&(MDTST'="UNSIGNED") K ^TMP("MDTIUST",$J) Q
"RTN","MDRPCOT",211,0)
 ..I MDTST="UNSIGNED"&'($G(^TMP("MDTIUST",$J,$P(^MDD(702,MDTRAN,0),U,6),1406,"I"))) K ^TMP("MDTIUST",$J) Q
"RTN","MDRPCOT",212,0)
 ..S MDDOC=$P(^MDD(702,MDTRAN,0),U,6),MDNEWV=$P(^MDD(702,MDTRAN,0),U,7)
"RTN","MDRPCOT",213,0)
 ..Q:'MDS
"RTN","MDRPCOT",214,0)
 ..S MDFDA(702,MDS_",",.06)=MDDOC
"RTN","MDRPCOT",215,0)
 ..S MDFDA(702,MDS_",",.07)=MDNEWV
"RTN","MDRPCOT",216,0)
 ..D FILE^DIE("","MDFDA")
"RTN","MDRPCOT",217,0)
 ..S MDTRAN=""
"RTN","MDRPCOT",218,0)
 Q MDDOC
"RTN","MDRPCOT",219,0)
 ;
"RTN","MDRPCOT1")
0^4^B27880896^B26833377
"RTN","MDRPCOT1",1,0)
MDRPCOT1 ; HOIFO/NCA/DP - Object RPCs (TMDTransaction) - Continued ; [08-02-2002 12:55]
"RTN","MDRPCOT1",2,0)
 ;;1.0;CLINICAL PROCEDURES;**5**;Apr 01, 2004;Build 1
"RTN","MDRPCOT1",3,0)
 ; Integration Agreements:
"RTN","MDRPCOT1",4,0)
 ; IA# 3468 [Subscription] GMRCCP API.
"RTN","MDRPCOT1",5,0)
 ; IA# 3567 [Subscription] MAGGSIUI API
"RTN","MDRPCOT1",6,0)
 ; IA# 10040 [Supported] Hospital Location File Access
"RTN","MDRPCOT1",7,0)
 ; IA# 10061 [Supported] Calls to VADPT
"RTN","MDRPCOT1",8,0)
 ; IA# 10103 [Supported] Calls to XLFDT.
"RTN","MDRPCOT1",9,0)
 ;
"RTN","MDRPCOT1",10,0)
DELERR(MDTIEN) ; [Procedure] Delete Imaging Error Messages
"RTN","MDRPCOT1",11,0)
 S MDLP=0 F  S MDLP=$O(^MDD(702,MDTIEN,.091,MDLP)) Q:'MDLP  D
"RTN","MDRPCOT1",12,0)
 .K DA,DIK
"RTN","MDRPCOT1",13,0)
 .S DA=+MDLP,DA(1)=+MDTIEN,DIK="^MDD(702,"_DA(1)_",.091," D ^DIK
"RTN","MDRPCOT1",14,0)
 .Q
"RTN","MDRPCOT1",15,0)
 Q
"RTN","MDRPCOT1",16,0)
 ;
"RTN","MDRPCOT1",17,0)
IMGSTAT(STUDY,MDSTAT) ; [Procedure] Update the Image Status.
"RTN","MDRPCOT1",18,0)
 N MDL
"RTN","MDRPCOT1",19,0)
 S MDL=0 F  S MDL=$O(^MDD(702,STUDY,.1,MDL)) Q:MDL<1  S $P(^(MDL,0),"^",9)=MDSTAT
"RTN","MDRPCOT1",20,0)
 Q
"RTN","MDRPCOT1",21,0)
 ;
"RTN","MDRPCOT1",22,0)
GETVSTR(DFN,MDSSTR,MDPR,MDTR) ; [Function] Check the Visit String
"RTN","MDRPCOT1",23,0)
 N MDCLOC,MDLOC,MDINPT,VAIP
"RTN","MDRPCOT1",24,0)
 I '$G(MDTR) Q 0
"RTN","MDRPCOT1",25,0)
 I '$G(MDPR) Q 0
"RTN","MDRPCOT1",26,0)
 I $G(MDSSTR)="" Q 0
"RTN","MDRPCOT1",27,0)
 S VAIP("D")=MDTR ; DT of Transaction Created
"RTN","MDRPCOT1",28,0)
 D IN5^VADPT S MDINPT=$S(+VAIP(13):1,1:0)
"RTN","MDRPCOT1",29,0)
 S MDCLOC=$$GET1^DIQ(702.01,+MDPR_",",.05,"I")
"RTN","MDRPCOT1",30,0)
 I 'MDCLOC S MDCLOC=+$P(MDSSTR,";",3) I 'MDCLOC Q 0
"RTN","MDRPCOT1",31,0)
 S Y=MDCLOC_";"_$P(MDSSTR,";",2)_";"_$P(MDSSTR,";")
"RTN","MDRPCOT1",32,0)
 I $P(Y,";",3)="A" Q Y
"RTN","MDRPCOT1",33,0)
 S:$P(Y,";",3)="" $P(Y,";",3)="A"
"RTN","MDRPCOT1",34,0)
 S:+MDINPT $P(Y,";",3)="A"
"RTN","MDRPCOT1",35,0)
 Q Y
"RTN","MDRPCOT1",36,0)
 ;
"RTN","MDRPCOT1",37,0)
PDT(STUDY) ; [Function] Loop through the attachments for Date/Time Performed.
"RTN","MDRPCOT1",38,0)
 N MDL,MDDT
"RTN","MDRPCOT1",39,0)
 S MDL=0,MDDT=""
"RTN","MDRPCOT1",40,0)
 F  S MDL=$O(^MDD(702,STUDY,.1,MDL)) Q:'MDL  D  Q:MDDT
"RTN","MDRPCOT1",41,0)
 .S MDDT=$P($G(^MDD(702,STUDY,.1,MDL,0)),"^",3)
"RTN","MDRPCOT1",42,0)
 I MDDT S MDDT=$P($G(^MDD(703.1,+MDDT,0)),"^",3) ; Get Date/Time Performed
"RTN","MDRPCOT1",43,0)
 Q MDDT
"RTN","MDRPCOT1",44,0)
 ;
"RTN","MDRPCOT1",45,0)
SUBMIT(STUDY) ; [Function] Submit all non-pending/uncomplete images in transaction to Imaging
"RTN","MDRPCOT1",46,0)
 N DATA,MDACQ,MDC,MDCRES,MDCTR,MDLOC,MDAR,MDARR,MDDT,MDFDA,MDDEL,MDIEN,MDIENS,MDIMG,MDL,MDMAG,MDR,MDST,MDX,MDY,MDZ
"RTN","MDRPCOT1",47,0)
 S MDIEN=+STUDY,MDIENS=MDIEN_","
"RTN","MDRPCOT1",48,0)
 S MDST=$$GET1^DIQ(702,MDIEN,.09,"I") I "13"[MDST Q "-1^Study not in proper status"
"RTN","MDRPCOT1",49,0)
 D DELERR(+MDIEN)
"RTN","MDRPCOT1",50,0)
 I $$GET1^DIQ(702,MDIEN,.01)="" Q "-1^No Entry in file (#702)."
"RTN","MDRPCOT1",51,0)
 D NOW^%DTC S MDDT=%
"RTN","MDRPCOT1",52,0)
 S MDMAG("IDFN")=+$$GET1^DIQ(702,MDIEN,.01,"I")
"RTN","MDRPCOT1",53,0)
 I 'MDMAG("IDFN") Q "-1^No Patient DFN."
"RTN","MDRPCOT1",54,0)
 S MDMAG("PXPKG")=8925
"RTN","MDRPCOT1",55,0)
 S MDMAG("PXIEN")=+$$GET1^DIQ(702,MDIEN,.06,"I")
"RTN","MDRPCOT1",56,0)
 I 'MDMAG("PXIEN") Q "-1^No TIU IEN"
"RTN","MDRPCOT1",57,0)
 I '$O(^MDD(702,MDIEN,.1,0)) D  Q $S(+MDR<0:MDR,1:"3^Transaction Complete")
"RTN","MDRPCOT1",58,0)
 .S MDC=$$GET1^DIQ(702,MDIEN,.05,"I")
"RTN","MDRPCOT1",59,0)
 .S MDR=$$UPDCONS(MDC,MDMAG("PXIEN"))
"RTN","MDRPCOT1",60,0)
 S MDMAG("STSCB")="ISTAT^MDAPI"
"RTN","MDRPCOT1",61,0)
 S MDMAG("TRKID")="CP;"_MDIEN_"-"_MDDT
"RTN","MDRPCOT1",62,0)
 S MDLOC=$$GET1^DIQ(702,MDIEN,.07,"I"),MDLOC=$P(MDLOC,";",3)
"RTN","MDRPCOT1",63,0)
 I 'MDLOC Q "-1^No Hospital Location."
"RTN","MDRPCOT1",64,0)
 S MDMAG("ACQS")=$S(+$$GET1^DIQ(44,MDLOC_",",3,"I"):+$$GET1^DIQ(44,MDLOC_",",3,"I"),1:+$G(DUZ(2)))
"RTN","MDRPCOT1",65,0)
 S MDMAG("ACQL")=MDLOC
"RTN","MDRPCOT1",66,0)
 S MDX=$$GET1^DIQ(702,MDIEN,.04,"I")
"RTN","MDRPCOT1",67,0)
 S MDZ=$P(^MDS(702.01,+MDX,0),"^",1)
"RTN","MDRPCOT1",68,0)
 S (MDACQ,MDX,MDDEL)="",MDCTR=0
"RTN","MDRPCOT1",69,0)
 N MDTOT S MDTOT=$$GET1^DIQ(702,MDIENS,.991)
"RTN","MDRPCOT1",70,0)
 S MDL=0 F  S MDL=$O(^MDD(702,MDIEN,.1,MDL)) Q:MDL<1  S MDX=$G(^(MDL,0)) D
"RTN","MDRPCOT1",71,0)
 .S:'MDDEL MDDEL=$P(MDX,"^",3)
"RTN","MDRPCOT1",72,0)
 .S MDY=$G(^MDD(702,MDIEN,.1,MDL,.1)) Q:MDY=""
"RTN","MDRPCOT1",73,0)
 .S:MDACQ="" MDACQ=$P($P(MDY,"\\",2),"\")
"RTN","MDRPCOT1",74,0)
 .S:"12"[$P(MDX,"^",9) $P(MDX,"^",9)=""
"RTN","MDRPCOT1",75,0)
 .I $P(MDX,"^",9)="" S MDCTR=MDCTR+1,MDARR(MDCTR)=MDY_"^"_MDZ_" image "_MDCTR_" out of "_MDTOT
"RTN","MDRPCOT1",76,0)
 .Q
"RTN","MDRPCOT1",77,0)
 I '$O(MDARR(0)) Q "-1^No UNC."
"RTN","MDRPCOT1",78,0)
 S MDMAG("GDESC")=MDZ_" Result"
"RTN","MDRPCOT1",79,0)
 I MDDEL S MDY=$P($G(^MDD(703.1,+MDDEL,0)),"^",3,4),MDMAG("PXDT")=$P(MDY,"^",1),MDY=+$P(MDY,"^",2),MDMAG("ACQD")=$P($G(^MDS(702.09,+MDY,0)),"^"),MDMAG("DFLG")=+$P($G(^MDS(702.09,+MDY,0)),"^",5)
"RTN","MDRPCOT1",80,0)
 S:$G(MDMAG("ACQD"))="" MDMAG("ACQD")=MDACQ
"RTN","MDRPCOT1",81,0)
 S:'$G(MDMAG("PXDT")) MDMAG("PXDT")=MDDT ; If no date, use NOW in MDDT
"RTN","MDRPCOT1",82,0)
 S MDMAG("TRTYPE")="NEW"
"RTN","MDRPCOT1",83,0)
 D IMPORT^MAGGSIUI(.MDIMG,.MDARR,.MDMAG)
"RTN","MDRPCOT1",84,0)
 I '(+$G(MDIMG(0))) D  Q "-1^"_$P(MDIMG(0),"^",2)
"RTN","MDRPCOT1",85,0)
 .D IMGSTAT(+MDIENS,1)
"RTN","MDRPCOT1",86,0)
 .F MDAR=0:0 S MDAR=$O(MDIMG(MDAR)) Q:'MDAR  I $G(MDIMG(MDAR))'="" D
"RTN","MDRPCOT1",87,0)
 ..S DATA("MESSAGE")=$$TRANS^MDAPI(MDIMG(MDAR)) D ADDMSG^MDRPCOT
"RTN","MDRPCOT1",88,0)
 D IMGSTAT(+MDIENS,0)
"RTN","MDRPCOT1",89,0)
 Q "1^Images Submitted"
"RTN","MDRPCOT1",90,0)
 ;
"RTN","MDRPCOT1",91,0)
UPDCONS(MDC,MDDOC) ; [Function] Update Consults Procedure Status
"RTN","MDRPCOT1",92,0)
 N MDCRES
"RTN","MDRPCOT1",93,0)
 S MDCRES=$$CPDOC^GMRCCP(MDC,MDDOC,2)
"RTN","MDRPCOT1",94,0)
 I '(+MDCRES) Q "-1^"_$P(MDCRES,"^",2)
"RTN","MDRPCOT1",95,0)
 Q 1
"RTN","MDRPCOT1",96,0)
 ;
"RTN","MDRPCOT1",97,0)
GETIORD(MDIEN) ; [Function] Return the Instrument order number for this study
"RTN","MDRPCOT1",98,0)
 ; Called from instrument interface routines
"RTN","MDRPCOT1",99,0)
 Q:'$D(^MDD(702,MDIEN,0))#2 -1  ; No such study
"RTN","MDRPCOT1",100,0)
 Q:'$P(^MDD(702,MDIEN,0),U,12) $$NEWIORD(MDIEN)  ; Create a new one
"RTN","MDRPCOT1",101,0)
 Q $P(^MDD(702,MDIEN,0),U,12)  ; Return the existing one
"RTN","MDRPCOT1",102,0)
 ;
"RTN","MDRPCOT1",103,0)
NEWIORD(MDIEN) ; [Function] Generate & return new unique instrument order number
"RTN","MDRPCOT1",104,0)
 ; Notice: will overwrite existing order number if it exists
"RTN","MDRPCOT1",105,0)
 N MDFDA
"RTN","MDRPCOT1",106,0)
 Q:'$D(^MDD(702,MDIEN,0))#2 -1  ; No such study
"RTN","MDRPCOT1",107,0)
 L +^MDD(702,"AION"):15 E  Q -1  ; Unable to lock and guarantee uniqueness
"RTN","MDRPCOT1",108,0)
 F  D  Q:'$D(^MDD(702,"AION",X))  H 1  ; Loop until unique
"RTN","MDRPCOT1",109,0)
 . S X=$$NOW^XLFDT() ; Current DateTime
"RTN","MDRPCOT1",110,0)
 . S X=$TR($J(X,14,6),".","") ; Pad with 0's and strip the decimal
"RTN","MDRPCOT1",111,0)
 . Q
"RTN","MDRPCOT1",112,0)
 I $E($G(^MDS(702.09,DEVIEN,0)),1,4)="Muse" D
"RTN","MDRPCOT1",113,0)
 . ; Due to current limitation to the Muse can only except 9
"RTN","MDRPCOT1",114,0)
 . S X=$E($TR($H,",",""),2,10) ; Using $E($H) only for the MUSE
"RTN","MDRPCOT1",115,0)
 . I '$D(^MDD(702,"AION",X)) Q  ; It is unique and quit
"RTN","MDRPCOT1",116,0)
 . N I,FLG ; Not unique
"RTN","MDRPCOT1",117,0)
 . S FLG=0
"RTN","MDRPCOT1",118,0)
 . F I=1:1 D  Q:FLG
"RTN","MDRPCOT1",119,0)
 . . S X=X+1
"RTN","MDRPCOT1",120,0)
 . . I '$D(^MDD(702,"AION",X)) S FLG=1
"RTN","MDRPCOT1",121,0)
 . . Q
"RTN","MDRPCOT1",122,0)
 . Q
"RTN","MDRPCOT1",123,0)
 S MDFDA(702,MDIEN_",",.12)=X  ; Build FDA
"RTN","MDRPCOT1",124,0)
 D FILE^DIE("","MDFDA")  ; File it
"RTN","MDRPCOT1",125,0)
 L -(^MDD(702,"AION"))  ; Unlock it
"RTN","MDRPCOT1",126,0)
 Q $P(^MDD(702,MDIEN,0),U,12)  ; Return it from the file
"RTN","MDRPCOT1",127,0)
 ;
"RTN","MDRPCOT1",128,0)
GETSTDY(MDION) ; [Function] Return study from instrument order number
"RTN","MDRPCOT1",129,0)
 ; Called from instrument interface routines
"RTN","MDRPCOT1",130,0)
 Q:'$D(^MDD(702,"AION",MDION)) -1  ; No such order number
"RTN","MDRPCOT1",131,0)
 Q $O(^MDD(702,"AION",MDION,""))  ; Return the 702 ien
"RTN","MDRPCOT1",132,0)
 ;
"RTN","MDSTATU")
0^10^B39040181^n/a
"RTN","MDSTATU",1,0)
MDSTATU ; HOIFO/NCA - Print List of Document Titles Needed ;10/21/04  13:44
"RTN","MDSTATU",2,0)
 ;;1.0;CLINICAL PROCEDURES;**5**;Apr 01, 2004;Build 1
"RTN","MDSTATU",3,0)
 ; Reference Integration Agreement:
"RTN","MDSTATU",4,0)
 ; IA# 10035 [Supported] Access to DPT file (#2)
"RTN","MDSTATU",5,0)
 ; IA# 10039 [Supported] Hospital Location lookup in DIC(42
"RTN","MDSTATU",6,0)
 ; IA# 10061 [Supported VADPT calls
"RTN","MDSTATU",7,0)
 ; IA# 10104 [Supported] Routine XLFSTR calls
"RTN","MDSTATU",8,0)
 ;
"RTN","MDSTATU",9,0)
DISP ; Display List of TIU titles need to be created for Medicine procedures
"RTN","MDSTATU",10,0)
 W ! K IOP,%ZIS S %ZIS("A")="Select Device: ",%ZIS="MQ" D ^%ZIS K %ZIS,IOP Q:POP
"RTN","MDSTATU",11,0)
 I $D(IO("Q")) S ZTRTN="D1^MDSTATU",ZTREQ="@",ZTSAVE("ZTREQ")="",ZTDESC="List Documents Titles Needed",(ZTDTH,ZTIO)="" D ^%ZTLOAD D ^%ZISC W !,"Request Queued" Q
"RTN","MDSTATU",12,0)
 U IO D D1 D ^%ZISC K %ZIS,IOP Q
"RTN","MDSTATU",13,0)
D1 ; Process Display
"RTN","MDSTATU",14,0)
 N ANS,CNT,DTP,LN,LP,MDK,MDF,MDFIL,MDN,MDN1,MDR,MDTIT,MDV,MDX,PG,S1,TIT,X
"RTN","MDSTATU",15,0)
 S (CNT,PG)=0,ANS="",S1=$S(IOST?1"C".E:IOSL-2,1:IOSL-7) D H1 S MDFIL=8925.1
"RTN","MDSTATU",16,0)
 S LP=0 F  S LP=$O(^MDD(703.9,1,1,LP)) Q:LP<1!(ANS="^")  S MDF=$G(^(LP,0)) D
"RTN","MDSTATU",17,0)
 .Q:'$P(MDF,U,3)
"RTN","MDSTATU",18,0)
 .S MDTIT=$P(MDF,U,5) Q:MDTIT
"RTN","MDSTATU",19,0)
 .Q:'$P(MDF,U)  S MDR="MCAR("_+$P(MDF,U)
"RTN","MDSTATU",20,0)
 .S MDN=0 F  S MDN=$O(^MCAR(697.2,"C",MDR,MDN)) Q:MDN<1!(ANS="^")  I $G(^MCAR(697.2,MDN,0))'="" D
"RTN","MDSTATU",21,0)
 ..S CNT=CNT+1,MDK=$G(^MCAR(697.2,MDN,0)),TIT=$S($P(MDK,U,8)'="":$P(MDK,U,8),1:$P(MDK,U)),TIT=$$UP^XLFSTR(TIT),MDN1=$G(^MCAR(697.2,MDN,1))
"RTN","MDSTATU",22,0)
 ..D:$Y'<S1 HDR Q:ANS="^"
"RTN","MDSTATU",23,0)
 ..I $P(MDF,U)=699 Q:$P(MDN1,U)="S"
"RTN","MDSTATU",24,0)
 ..I $P(MDF,U)=694 Q:$P(MDN1,U)="S"
"RTN","MDSTATU",25,0)
 ..I $P(MDF,U)=699.5 Q:$P(MDN1,U)="P"
"RTN","MDSTATU",26,0)
 ..S MDV="HISTORICAL "_TIT_$S(TIT["PROCEDURE":"",1:" PROCEDURE")
"RTN","MDSTATU",27,0)
 ..S:$L(MDV)>60 MDV=$E(MDV,1,60)
"RTN","MDSTATU",28,0)
 ..Q:+$$FIND1^DIC(MDFIL,"","BOX",MDV,"B","","MDERR")
"RTN","MDSTATU",29,0)
 ..W !,TIT,?35,MDV
"RTN","MDSTATU",30,0)
 I 'CNT W !!,"No Historical TIU titles need to be created."
"RTN","MDSTATU",31,0)
 W ! Q
"RTN","MDSTATU",32,0)
PAUSE ; Pause For Scroll
"RTN","MDSTATU",33,0)
 I IOST?1"C".E R !!,"Press RETURN to continue. ",X:DTIME S:'$T!(X["^") ANS="^" Q:ANS="^"  I "^"'[X W !,"Enter a RETURN to Continue." G PAUSE
"RTN","MDSTATU",34,0)
 Q
"RTN","MDSTATU",35,0)
DTP ; Printable Date/Time
"RTN","MDSTATU",36,0)
 S %=DTP,DTP=$J(+$E(DTP,6,7),2)_"-"_$P("Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec"," ",+$E(DTP,4,5))_"-"_$E(DTP,2,3)
"RTN","MDSTATU",37,0)
 S:%#1 %=+$E(%_"0",9,10)_"^"_$E(%_"000",11,12),DTP=DTP_$J($S(%>12:%-12,1:+%),3)_":"_$P(%,"^",2)_$S(%<12:"am",%<24:"pm",1:"m") K % Q
"RTN","MDSTATU",38,0)
HDR ; Display Header and Scroll Pause
"RTN","MDSTATU",39,0)
 D PAUSE Q:ANS="^"
"RTN","MDSTATU",40,0)
H1 ; Print Header
"RTN","MDSTATU",41,0)
 W:'($E(IOST,1,2)'="C-"&'PG) @IOF
"RTN","MDSTATU",42,0)
 D NOW^%DTC S MDX=%
"RTN","MDSTATU",43,0)
 S PG=PG+1,DTP=MDX D DTP W !,DTP,?20,"L I S T   O F   T I U   T I T L E S   N E E D E D",?73,"Page ",PG
"RTN","MDSTATU",44,0)
 W ! S $P(LN,"-",80)="" W !,LN,!
"RTN","MDSTATU",45,0)
 W !,"PROCEDURES",?35,"Titles Needed to be Created"
"RTN","MDSTATU",46,0)
 W !,"----------",?35,"---------------------------",!
"RTN","MDSTATU",47,0)
 Q
"RTN","MDSTATU",48,0)
SETDEF ; Set default CP Definitions in Conversion Parameter
"RTN","MDSTATU",49,0)
 N MDERR,MDDIEN,MDK,MDF,MDFC,MDFIL,MDFDA,MDLP,MDN,MDNAM,MDOPT,MDR,MDS,MDTAR,MDNAM,MDX,MDY S MDFIL=8925.1 K MDTAR
"RTN","MDSTATU",50,0)
 F MDX=1:1 S MDOPT=$P($T(MEDTIT+MDX),";;",2) Q:MDOPT="**END**"  D
"RTN","MDSTATU",51,0)
 .S MDS=$P(MDOPT,";",2)
"RTN","MDSTATU",52,0)
 .S MDY=+$$FIND1^DIC(MDFIL,"","BOX",MDS,"B","","MDERR") Q:'MDY
"RTN","MDSTATU",53,0)
 .S MDTAR(+MDOPT)=+MDY
"RTN","MDSTATU",54,0)
 S MDLP=0 F  S MDLP=$O(^MDD(703.9,1,1,MDLP)) Q:MDLP<1  S MDF=$G(^(MDLP,0)) D
"RTN","MDSTATU",55,0)
 .S MDFC=+$P(MDF,U)  Q:'MDFC  S MDR="MCAR("_MDFC
"RTN","MDSTATU",56,0)
 .Q:MDFC=699
"RTN","MDSTATU",57,0)
 .Q:MDFC=699.5
"RTN","MDSTATU",58,0)
 .Q:MDFC=694
"RTN","MDSTATU",59,0)
 .S (MDK,MDN)=0,MDNAM="" F  S MDN=$O(^MCAR(697.2,"C",MDR,MDN)) Q:MDN<1  I $G(^MCAR(697.2,MDN,0))'="" D
"RTN","MDSTATU",60,0)
 ..S MDK=$G(^MCAR(697.2,MDN,0)),MDNAM=$S($P(MDK,U,8)'="":$P(MDK,U,8),1:$P(MDK,U)),MDNAM=$$UP^XLFSTR(MDNAM)
"RTN","MDSTATU",61,0)
 .I MDNAM=""&(+$P(MDF,U)=694.5) S MDNAM="CARDIAC SURGERY RISK ASSESSMENT"
"RTN","MDSTATU",62,0)
 .Q:MDNAM=""
"RTN","MDSTATU",63,0)
 .S:$L(MDNAM)<30 MDNAM=MDNAM_" - HIST"
"RTN","MDSTATU",64,0)
 .S:$L(MDNAM)>30 MDNAM=$E(MDNAM,1,30)
"RTN","MDSTATU",65,0)
 .I '$O(^MDS(702.01,"B",MDNAM,0)) D
"RTN","MDSTATU",66,0)
 ..Q:$P(MDF,U,2)'=""
"RTN","MDSTATU",67,0)
 ..K MDERR,MDDIEN
"RTN","MDSTATU",68,0)
 ..S MDFDA(702.01,"+1,",.01)=MDNAM
"RTN","MDSTATU",69,0)
 ..D UPDATE^DIE("","MDFDA","MDDIEN","MDERR") Q:$D(MDERR)
"RTN","MDSTATU",70,0)
 ..S:+MDDIEN(1) $P(^MDD(703.9,1,1,MDLP,0),U,2)=+MDDIEN(1)
"RTN","MDSTATU",71,0)
 .I $P(MDF,U,5)="" S:+$G(MDTAR(MDFC)) $P(^MDD(703.9,1,1,MDLP,0),U,5)=+$G(MDTAR(MDFC))
"RTN","MDSTATU",72,0)
 Q
"RTN","MDSTATU",73,0)
GETMED(MDMNO,MDTYPE) ; Get the Medicine Procedure name
"RTN","MDSTATU",74,0)
 N MDI,MDMF,MDLL,MDLL1,MDLL6,MDLL8,MDNA
"RTN","MDSTATU",75,0)
 S MDNA=""
"RTN","MDSTATU",76,0)
 Q:MDTYPE="" MDNA
"RTN","MDSTATU",77,0)
 Q:'+MDMNO MDNA
"RTN","MDSTATU",78,0)
 S MDI=+MDMNO,MDMF=+$P(MDMNO,"MCAR(",2) Q:'MDMF MDNA
"RTN","MDSTATU",79,0)
 I MDMF=699 D
"RTN","MDSTATU",80,0)
 .S (MDLL,MDLL1)=$P($G(^MCAR(699,+MDI,0)),U,12) Q:'MDLL
"RTN","MDSTATU",81,0)
 .S MDLL=$G(^MCAR(697.2,MDLL,0)) Q:MDLL=""
"RTN","MDSTATU",82,0)
 .S MDNA=$S($P(MDLL,U,8)'="":$P(MDLL,U,8),1:$P(MDLL,U)) Q
"RTN","MDSTATU",83,0)
 I MDMF=699.5 D
"RTN","MDSTATU",84,0)
 .S MDLL6=$P($G(^MCAR(699.5,+MDI,0)),U,6) Q:'MDLL6
"RTN","MDSTATU",85,0)
 .S MDLL8=$P($G(^MCAR(699.5,+MDI,0)),U,8) S:MDLL8="" MDLL8=" "
"RTN","MDSTATU",86,0)
 .S MDLL=$G(^MCAR(697.2,MDLL6,0)) Q:MDLL=""
"RTN","MDSTATU",87,0)
 .I MDTYPE="N" S MDNA=$S($P(MDLL,U,8)'="":$P(MDLL,U,8),1:$P(MDLL,U)) Q
"RTN","MDSTATU",88,0)
 .I MDTYPE="P" S MDNA=$E(($E($P(MDLL,U,8),1,13)_"/"_$P($G(^MCAR(697.2,+MDLL8,0)),U)),1,30)
"RTN","MDSTATU",89,0)
 I MDMF=694 D
"RTN","MDSTATU",90,0)
 .S MDLL=$P($G(^MCAR(694,MDI,0)),U,3) Q:'MDLL
"RTN","MDSTATU",91,0)
 .S MDLL=$G(^MCAR(697.2,MDLL,0)) Q:MDLL=""
"RTN","MDSTATU",92,0)
 .S MDNA=$S($P(MDLL,U,8)'="":$P(MDLL,U,8),1:$P(MDLL,U)) Q
"RTN","MDSTATU",93,0)
 S:MDNA'="" MDNA=$$UP^XLFSTR(MDNA)
"RTN","MDSTATU",94,0)
 Q MDNA
"RTN","MDSTATU",95,0)
LOCATP(MDNNO) ; Locate the CP Definition procedure or Add the New Entry
"RTN","MDSTATU",96,0)
 N MDDIEN,MDERR,MDFDA,MDNM,Y S Y=0
"RTN","MDSTATU",97,0)
 Q:'+MDNNO 0  S MDMNO=MDNNO
"RTN","MDSTATU",98,0)
 S MDNM=$$GETMED(MDMNO,"P") Q:MDNM="" Y
"RTN","MDSTATU",99,0)
 S MDNM=MDNM_" - HIST" S:$L(MDNM)>30 MDNM=$E(MDNM,1,30)
"RTN","MDSTATU",100,0)
 S Y=$O(^MDS(702.01,"B",MDNM,0)) Q:+Y Y
"RTN","MDSTATU",101,0)
 S MDFDA(702.01,"+1,",.01)=MDNM
"RTN","MDSTATU",102,0)
 D UPDATE^DIE("","MDFDA","MDDIEN","MDERR") Q:$D(MDERR)
"RTN","MDSTATU",103,0)
 S Y=+MDDIEN(1)
"RTN","MDSTATU",104,0)
 Q Y
"RTN","MDSTATU",105,0)
LOCATN(MDNNO) ; Locate the Historical Document Title
"RTN","MDSTATU",106,0)
 N MDDIEN,MDERR,MDFDA,MDNM,MDT,MDV,Y S Y=0,MDV=8925.1
"RTN","MDSTATU",107,0)
 Q:'+MDNNO 0  S MDMNO=MDNNO
"RTN","MDSTATU",108,0)
 S MDNM=$$GETMED(MDMNO,"N") Q:MDNM="" Y
"RTN","MDSTATU",109,0)
 S MDT="HISTORICAL "_MDNM_$S(MDNM["PROCEDURE":"",1:" PROCEDURE")
"RTN","MDSTATU",110,0)
 S Y=+$$FIND1^DIC(MDV,"","BOX",MDT,"B","","MDERR")
"RTN","MDSTATU",111,0)
 Q Y
"RTN","MDSTATU",112,0)
HOSP(MDNNO) ; Locate the Hospital Location
"RTN","MDSTATU",113,0)
 N MDERR,MDI,MDMF,MDOPT,MDL,MDS,MDTAR,MDV,MDW,MDW1,MDX
"RTN","MDSTATU",114,0)
 S MDL=0 K MDTAR
"RTN","MDSTATU",115,0)
 Q:'+MDNNO MDL
"RTN","MDSTATU",116,0)
 S MDI=+MDNNO,MDMF=+$P(MDNNO,"MCAR(",2) Q:'MDMF MDL
"RTN","MDSTATU",117,0)
 F MDX=1:1 S MDOPT=$P($T(MEDTIT+MDX),";;",2) Q:MDOPT="**END**"  D
"RTN","MDSTATU",118,0)
 .S MDS=$P(MDOPT,";",3,4)
"RTN","MDSTATU",119,0)
 .S MDTAR(+MDOPT)=MDS
"RTN","MDSTATU",120,0)
 S MDS=$G(MDTAR(MDMF))
"RTN","MDSTATU",121,0)
 S:+$P(MDS,";",2) MDL=$P($G(^MCAR(MDMF,MDI,$P(MDS,";"))),"^",+$P(MDS,";",2))
"RTN","MDSTATU",122,0)
 I 'MDL D
"RTN","MDSTATU",123,0)
 .S DFN=+$P($G(^MCAR(MDMF,MDI,0)),U,2),VAIP("D")=$P($G(^MCAR(MDMF,MDI,0)),U,1)
"RTN","MDSTATU",124,0)
 .D IN5^VADPT S MDW=+VAIP(5) D KVAR^VADPT S:MDW MDL=+$P($G(^DIC(42,+MDW,44)),U)
"RTN","MDSTATU",125,0)
 .I 'MDL S MDW=$G(^DPT(DFN,.1)) I MDW'="" S MDV=42,MDW1=$$FIND1^DIC(MDV,"","BOX",MDW,"B","","MDERR") S:MDW1 MDL=+$P($G(^DIC(42,+MDW1,44)),U)
"RTN","MDSTATU",126,0)
 Q MDL
"RTN","MDSTATU",127,0)
MEDTIT ;; [Medicine Historical Document Titles]
"RTN","MDSTATU",128,0)
 ;;691.1;HISTORICAL CARDIAC CATHETERIZATION PROCEDURE;0;6
"RTN","MDSTATU",129,0)
 ;;691;HISTORICAL ECHOCARDIOGRAM PROCEDURE;11;2
"RTN","MDSTATU",130,0)
 ;;691.5;HISTORICAL ELECTROCARDIOGRAM PROCEDURE;8;1
"RTN","MDSTATU",131,0)
 ;;691.8;HISTORICAL ELECTROPHYSIOLOGY PROCEDURE;15;3
"RTN","MDSTATU",132,0)
 ;;691.7;HISTORICAL EXERCISE TOLERANCE TEST PROCEDURE;10;5
"RTN","MDSTATU",133,0)
 ;;691.6;HISTORICAL HOLTER PROCEDURE;0;18
"RTN","MDSTATU",134,0)
 ;;698;HISTORICAL PACEMAKER IMPLANTATION PROCEDURE
"RTN","MDSTATU",135,0)
 ;;698.1;HISTORICAL PACEMAKER IMPLANTATION PROCEDURE
"RTN","MDSTATU",136,0)
 ;;698.2;HISTORICAL PACEMAKER IMPLANTATION PROCEDURE
"RTN","MDSTATU",137,0)
 ;;698.3;HISTORICAL PACEMAKER IMPLANTATION PROCEDURE
"RTN","MDSTATU",138,0)
 ;;694.5;HISTORICAL PRE/POST SURGERY RISK NOTE
"RTN","MDSTATU",139,0)
 ;;694; ;0;4
"RTN","MDSTATU",140,0)
 ;;699; ;0;11
"RTN","MDSTATU",141,0)
 ;;700;HISTORICAL PULMONARY FUNCTION TEST PROCEDURE;0;10
"RTN","MDSTATU",142,0)
 ;;701;HISTORICAL RHEUMATOLOGY PROCEDURE
"RTN","MDSTATU",143,0)
 ;;**END**
"SEC","^DD",703.9,703.9,1,8)

"SEC","^DD",703.9,703.9,1,9)

"SEC","^DIC",703.9,703.9,0,"AUDIT")
#
"SEC","^DIC",703.9,703.9,0,"DD")
@
"SEC","^DIC",703.9,703.9,0,"DEL")
#
"SEC","^DIC",703.9,703.9,0,"LAYGO")
#
"SEC","^DIC",703.9,703.9,0,"RD")
#
"SEC","^DIC",703.9,703.9,0,"WR")
#
"VER")
8.0^22.0
"^DD",702,702,.3,0)
CONVERSION ID REFERENCE^F^^2;1^K:$L(X)>30!($L(X)<1) X
"^DD",702,702,.3,1,0)
^.1
"^DD",702,702,.3,1,1,0)
702^ACONV
"^DD",702,702,.3,1,1,1)
S ^MDD(702,"ACONV",$E(X,1,30),DA)=""
"^DD",702,702,.3,1,1,2)
K ^MDD(702,"ACONV",$E(X,1,30),DA)
"^DD",702,702,.3,1,1,3)
Do Not Delete.
"^DD",702,702,.3,1,1,"%D",0)
^.101^3^3^3040920^^^
"^DD",702,702,.3,1,1,"%D",1,0)
This cross reference is used to keep track of which CP transaction study was
"^DD",702,702,.3,1,1,"%D",2,0)
created during the Medicine report conversion and which Medicine record it is
"^DD",702,702,.3,1,1,"%D",3,0)
asscoaited with.
"^DD",702,702,.3,1,1,"DT")
3040920
"^DD",702,702,.3,3)
Answer must be 1-30 characters in length.
"^DD",702,702,.3,21,0)
^.001^22^22^3040923^^^^
"^DD",702,702,.3,21,1,0)
This field is the Reference Conversion ID.  It is a variable pointer
"^DD",702,702,.3,21,2,0)
to the Medicine files.  It indicates which converted Medicine report record
"^DD",702,702,.3,21,3,0)
is associated with the CP Transaction study.  This field helps to keep track
"^DD",702,702,.3,21,4,0)
which CP Transaction study was created for the Medicine report conversion.
"^DD",702,702,.3,21,5,0)
This field is a variable pointer to the following files:
"^DD",702,702,.3,21,6,0)
                                                                  
"^DD",702,702,.3,21,7,0)
691   ECHO                                   
"^DD",702,702,.3,21,8,0)
691.1 CARDIAC CATHETERIZATION                  
"^DD",702,702,.3,21,9,0)
691.5 ELECTROCARDIOGRAM (EKG)                  
"^DD",702,702,.3,21,10,0)
691.6 HOLTER                               
"^DD",702,702,.3,21,11,0)
691.7 EXERCISE TOLERANCE TEST                  
"^DD",702,702,.3,21,12,0)
691.8 ELECTROPHYSIOLOGY (EP)                   
"^DD",702,702,.3,21,13,0)
694   HEMATOLOGY                            
"^DD",702,702,.3,21,14,0)
694.5 CARDIAC SURGERY RISK ASSESSMENT          
"^DD",702,702,.3,21,15,0)
698   GENERATOR IMPLANT                        
"^DD",702,702,.3,21,16,0)
698.1 V LEAD IMPLANT                          
"^DD",702,702,.3,21,17,0)
698.2 A LEAD IMPLANT                       
"^DD",702,702,.3,21,18,0)
698.3 PACEMAKER SURVEILLANCE                   
"^DD",702,702,.3,21,19,0)
699   ENDOSCOPY/CONSULT                          
"^DD",702,702,.3,21,20,0)
699.5 GENERALIZED PROCEDURE/CONSULT              
"^DD",702,702,.3,21,21,0)
700   PULMONARY FUNCTION TESTS                   
"^DD",702,702,.3,21,22,0)
701   RHEUMATOLOGY           
"^DD",702,702,.3,"DT")
3040920
"^DD",703.9,703.9,0)
FIELD^^2^6
"^DD",703.9,703.9,0,"DDA")
N
"^DD",703.9,703.9,0,"DT")
3040915
"^DD",703.9,703.9,0,"IX","B",703.9,.01)

"^DD",703.9,703.9,0,"NM","CP CONVERSION")

"^DD",703.9,703.9,0,"SCR")
I +Y=1
"^DD",703.9,703.9,0,"VRPK")
MD
"^DD",703.9,703.9,.01,0)
NAME^RFX^^0;1^K X
"^DD",703.9,703.9,.01,1,0)
^.1
"^DD",703.9,703.9,.01,1,1,0)
703.9^B
"^DD",703.9,703.9,.01,1,1,1)
S ^MDD(703.9,"B",$E(X,1,30),DA)=""
"^DD",703.9,703.9,.01,1,1,2)
K ^MDD(703.9,"B",$E(X,1,30),DA)
"^DD",703.9,703.9,.01,3)
This field is only accessible via the conversion routine.
"^DD",703.9,703.9,.01,21,0)
^.001^3^3^3041109^^^^
"^DD",703.9,703.9,.01,21,1,0)
This field contains the name of the CP conversion.
"^DD",703.9,703.9,.01,21,2,0)
It is only accessible by the CP conversion routine.
"^DD",703.9,703.9,.01,21,3,0)
It is exported with one "DEFAULT" entry.
"^DD",703.9,703.9,.02,0)
MODE^S^0:TEST;1:REAL;^0;2^Q
"^DD",703.9,703.9,.02,3)
Enter 0 for Test or 1 for Real mode.
"^DD",703.9,703.9,.02,21,0)
^.001^1^1^3041109^^
"^DD",703.9,703.9,.02,21,1,0)
This field indicates if the CP conversion is in test or real mode.
"^DD",703.9,703.9,.02,"DT")
3030903
"^DD",703.9,703.9,.03,0)
ADMINISTRATIVE CLOSURE USER^P200'^VA(200,^0;3^Q
"^DD",703.9,703.9,.03,3)
Enter an Administrative Closure person.
"^DD",703.9,703.9,.03,21,0)
^^3^3^3040630^
"^DD",703.9,703.9,.03,21,1,0)
This field points to the New Person file (#200).  It is used to
"^DD",703.9,703.9,.03,21,2,0)
indicate the Administrative Closure person used to close the TIU
"^DD",703.9,703.9,.03,21,3,0)
documents for the CP conversion.
"^DD",703.9,703.9,.03,"DT")
3030923
"^DD",703.9,703.9,.1,0)
SCRATCH HFS DIRECTORY^F^^.1;1^K:$L(X)>50!($L(X)<1) X
"^DD",703.9,703.9,.1,3)
Answer must be 1-50 characters in length.
"^DD",703.9,703.9,.1,21,0)
^^3^3^3040630^
"^DD",703.9,703.9,.1,21,1,0)
This field stores the scratch HFS directory used for the
"^DD",703.9,703.9,.1,21,2,0)
CP conversion.  The CP conversion program will use this directory
"^DD",703.9,703.9,.1,21,3,0)
to convert the Medicine reports.
"^DD",703.9,703.9,.1,"DT")
3030103
"^DD",703.9,703.9,1,0)
MEDICINE FILE PARAMETERS^703.91P^^1;0
"^DD",703.9,703.9,1,21,0)
^.001^2^2^3041109^^^^
"^DD",703.9,703.9,1,21,1,0)
This multiple contains the parameter data used for the CP conversion of the
"^DD",703.9,703.9,1,21,2,0)
Medicine reports.
"^DD",703.9,703.9,2,0)
CONVERSION LOG^703.92^^2;0
"^DD",703.9,703.9,2,21,0)
^.001^1^1^3040923^^
"^DD",703.9,703.9,2,21,1,0)
This multiple is used to store the data for the conversion log.
"^DD",703.9,703.91,0)
MEDICINE FILE PARAMETERS SUB-FIELD^^.05^5
"^DD",703.9,703.91,0,"DT")
3040915
"^DD",703.9,703.91,0,"IX","B",703.91,.01)

"^DD",703.9,703.91,0,"NM","MEDICINE FILE PARAMETERS")

"^DD",703.9,703.91,0,"UP")
703.9
"^DD",703.9,703.91,.01,0)
MEDICINE FILE PARAMETERS^MP1'X^DIC(^0;1^S DINUM=+X
"^DD",703.9,703.91,.01,1,0)
^.1
"^DD",703.9,703.91,.01,1,1,0)
703.91^B
"^DD",703.9,703.91,.01,1,1,1)
S ^MDD(703.9,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",703.9,703.91,.01,1,1,2)
K ^MDD(703.9,DA(1),1,"B",$E(X,1,30),DA)
"^DD",703.9,703.91,.01,21,0)
^.001^3^3^3041109^^^^
"^DD",703.9,703.91,.01,21,1,0)
This field points to the File file (#1).  It is used to store the
"^DD",703.9,703.91,.01,21,2,0)
Medicine file number that this parameter is pertaining to.
"^DD",703.9,703.91,.01,21,3,0)
(Reference IA #4507)
"^DD",703.9,703.91,.01,"DT")
3021107
"^DD",703.9,703.91,.02,0)
CP DEFINITION^P702.01'^MDS(702.01,^0;2^Q
"^DD",703.9,703.91,.02,21,0)
^.001^2^2^3041109^^
"^DD",703.9,703.91,.02,21,1,0)
This field contains the CP Definition to which the Medicine Report will
"^DD",703.9,703.91,.02,21,2,0)
be mapped.
"^DD",703.9,703.91,.02,"DT")
3021107
"^DD",703.9,703.91,.03,0)
CONVERT Y/N^S^0:No;1:Yes;^0;3^Q
"^DD",703.9,703.91,.03,21,0)
^.001^2^2^3041109^^
"^DD",703.9,703.91,.03,21,1,0)
This field is used as a flag to mark the Medicine Report. Enter
"^DD",703.9,703.91,.03,21,2,0)
0 for 'to not convert' or 1 for 'to convert'.
"^DD",703.9,703.91,.03,"DT")
3030203
"^DD",703.9,703.91,.04,0)
CONVERT IF NO STATUS^S^0:No;1:Yes;^0;4^Q
"^DD",703.9,703.91,.04,3)

"^DD",703.9,703.91,.04,21,0)
^.001^4^4^3041109^^
"^DD",703.9,703.91,.04,21,1,0)
This field is used as a flag to indicate whether the Medicine
"^DD",703.9,703.91,.04,21,2,0)
report should be converted or not be converted, if there is
"^DD",703.9,703.91,.04,21,3,0)
no status for the report.  The field is 0 for 'not to convert'
"^DD",703.9,703.91,.04,21,4,0)
or 1 for 'to convert'.
"^DD",703.9,703.91,.04,"DT")
3031003
"^DD",703.9,703.91,.05,0)
USE TIU NOTE TITLE^*P8925.1'^TIU(8925.1,^0;5^S DIC("S")="I $$ISHISTCP^TIUCP(+Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",703.9,703.91,.05,12)
Restricts title to Historical CP documents only.
"^DD",703.9,703.91,.05,12.1)
S DIC("S")="I $$ISHISTCP^TIUCP(+Y)"
"^DD",703.9,703.91,.05,21,0)
^.001^2^2^3041109^^
"^DD",703.9,703.91,.05,21,1,0)
This field stores the Historical TIU note title used for the conversion
"^DD",703.9,703.91,.05,21,2,0)
of the Medicine reports to CP reports. (Reference IA #3377 and 3568)
"^DD",703.9,703.91,.05,"DT")
3040915
"^DD",703.9,703.92,0)
CONVERSION LOG SUB-FIELD^^.1^6
"^DD",703.9,703.92,0,"DT")
3030923
"^DD",703.9,703.92,0,"IX","AS",703.92,.02)

"^DD",703.9,703.92,0,"IX","B",703.92,.01)

"^DD",703.9,703.92,0,"NM","CONVERSION LOG")

"^DD",703.9,703.92,0,"UP")
703.9
"^DD",703.9,703.92,.01,0)
CONVERSION ID^MF^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",703.9,703.92,.01,1,0)
^.1
"^DD",703.9,703.92,.01,1,1,0)
703.92^B
"^DD",703.9,703.92,.01,1,1,1)
S ^MDD(703.9,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",703.9,703.92,.01,1,1,2)
K ^MDD(703.9,DA(1),2,"B",$E(X,1,30),DA)
"^DD",703.9,703.92,.01,3)
Answer must be 1-30 characters in length.
"^DD",703.9,703.92,.01,21,0)
^.001^20^20^3040923^^^^
"^DD",703.9,703.92,.01,21,1,0)
This field is the Conversion ID.  It is a variable pointer to the
"^DD",703.9,703.92,.01,21,2,0)
Medicine files.  This field will store an entry for each Medicine file
"^DD",703.9,703.92,.01,21,3,0)
record converted. This field is a variable pointer to the following files:
"^DD",703.9,703.92,.01,21,4,0)

"^DD",703.9,703.92,.01,21,5,0)
691   ECHO                                   
"^DD",703.9,703.92,.01,21,6,0)
691.1 CARDIAC CATHETERIZATION                 
"^DD",703.9,703.92,.01,21,7,0)
691.5 ELECTROCARDIOGRAM (EKG)                 
"^DD",703.9,703.92,.01,21,8,0)
691.6 HOLTER                               
"^DD",703.9,703.92,.01,21,9,0)
691.7 EXERCISE TOLERANCE TEST                 
"^DD",703.9,703.92,.01,21,10,0)
691.8 ELECTROPHYSIOLOGY (EP)                  
"^DD",703.9,703.92,.01,21,11,0)
694   HEMATOLOGY                            
"^DD",703.9,703.92,.01,21,12,0)
694.5 CARDIAC SURGERY RISK ASSESSMENT         
"^DD",703.9,703.92,.01,21,13,0)
698   GENERATOR IMPLANT                       
"^DD",703.9,703.92,.01,21,14,0)
698.1 V LEAD IMPLANT                          
"^DD",703.9,703.92,.01,21,15,0)
698.2 A LEAD IMPLANT                      
"^DD",703.9,703.92,.01,21,16,0)
698.3 PACEMAKER SURVEILLANCE                  
"^DD",703.9,703.92,.01,21,17,0)
699   ENDOSCOPY/CONSULT                       
"^DD",703.9,703.92,.01,21,18,0)
699.5 GENERALIZED PROCEDURE/CONSULT           
"^DD",703.9,703.92,.01,21,19,0)
700   PULMONARY FUNCTION TESTS                
"^DD",703.9,703.92,.01,21,20,0)
701   RHEUMATOLOGY           
"^DD",703.9,703.92,.01,"DT")
3021107
"^DD",703.9,703.92,.02,0)
STATUS^S^CR:Converted Real Mode;CT:Converted Test Mode;E:Error;S:Skipped;R:Ready to Convert;^0;2^Q
"^DD",703.9,703.92,.02,1,0)
^.1
"^DD",703.9,703.92,.02,1,1,0)
703.92^AS
"^DD",703.9,703.92,.02,1,1,1)
S ^MDD(703.9,DA(1),2,"AS",$E(X,1,30),DA)=""
"^DD",703.9,703.92,.02,1,1,2)
K ^MDD(703.9,DA(1),2,"AS",$E(X,1,30),DA)
"^DD",703.9,703.92,.02,1,1,"DT")
3021107
"^DD",703.9,703.92,.02,21,0)
^.001^7^7^3040923^^^^
"^DD",703.9,703.92,.02,21,1,0)
This is the status field of the conversion log.  There are five
"^DD",703.9,703.92,.02,21,2,0)
set of codes:            
"^DD",703.9,703.92,.02,21,3,0)
CR   WILL STAND FOR: Converted Real Mode      
"^DD",703.9,703.92,.02,21,4,0)
CT   WILL STAND FOR: Converted Test Mode    
"^DD",703.9,703.92,.02,21,5,0)
 E   WILL STAND FOR: Error               
"^DD",703.9,703.92,.02,21,6,0)
 S   WILL STAND FOR: Skipped              
"^DD",703.9,703.92,.02,21,7,0)
 R   WILL STAND FOR: Ready to Convert
"^DD",703.9,703.92,.02,"DT")
3030923
"^DD",703.9,703.92,.03,0)
NEW TIU DOCUMENT IEN^F^^0;3^K:$L(X)>15!($L(X)<1) X
"^DD",703.9,703.92,.03,3)
Answer must be 1-15 characters in length.
"^DD",703.9,703.92,.03,21,0)
^.001^3^3^3051005^^^
"^DD",703.9,703.92,.03,21,1,0)
This field contains a pointer to the TIU Document file (#8925).
"^DD",703.9,703.92,.03,21,2,0)
(Reference IA #4796).  This will hold the internal entry number
"^DD",703.9,703.92,.03,21,3,0)
of the document of the converted medicine report.
"^DD",703.9,703.92,.03,"DT")
3021107
"^DD",703.9,703.92,.04,0)
LINES^NJ9,0^^0;4^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",703.9,703.92,.04,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",703.9,703.92,.04,21,0)
^^2^2^3040630^
"^DD",703.9,703.92,.04,21,1,0)
This field contains the line count of the Medicine report
"^DD",703.9,703.92,.04,21,2,0)
that was converted.
"^DD",703.9,703.92,.04,"DT")
3021107
"^DD",703.9,703.92,.05,0)
BYTES^NJ9,0^^0;5^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",703.9,703.92,.05,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",703.9,703.92,.05,21,0)
^^2^2^3040630^
"^DD",703.9,703.92,.05,21,1,0)
This field contains the number of bytes of the Medicine report
"^DD",703.9,703.92,.05,21,2,0)
that was converted.
"^DD",703.9,703.92,.05,"DT")
3021107
"^DD",703.9,703.92,.1,0)
ERROR MSG^F^^.1;1^K:$L(X)>250!($L(X)<1) X
"^DD",703.9,703.92,.1,3)
Answer must be 1-250 characters in length.
"^DD",703.9,703.92,.1,21,0)
^^2^2^3040630^
"^DD",703.9,703.92,.1,21,1,0)
This field stores the error message during the conversion of
"^DD",703.9,703.92,.1,21,2,0)
the Medicine report.
"^DD",703.9,703.92,.1,"DT")
3021107
"^DIC",703.9,703.9,0)
CP CONVERSION^703.9
"^DIC",703.9,703.9,0,"GL")
^MDD(703.9,
"^DIC",703.9,703.9,"%",0)
^1.005^^0
"^DIC",703.9,703.9,"%D",0)
^1.001^4^4^3041109^^
"^DIC",703.9,703.9,"%D",1,0)
This is the CP Conversion File file (#703.9).  This file is used for storing
"^DIC",703.9,703.9,"%D",2,0)
the site parameters needed and used to convert Medicine reports to CP
"^DIC",703.9,703.9,"%D",3,0)
Text reports.  This file also stores the status of the conversion process
"^DIC",703.9,703.9,"%D",4,0)
for each converted Medicine report.
"^DIC",703.9,"B","CP CONVERSION",703.9)

"BLD",17113,6)
^4
**END**
**END**
