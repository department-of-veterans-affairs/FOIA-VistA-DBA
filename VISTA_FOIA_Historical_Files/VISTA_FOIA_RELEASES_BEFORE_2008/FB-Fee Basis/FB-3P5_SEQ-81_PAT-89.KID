Released FB*3.5*89 SEQ #81
Extracted from mail message
**KIDS**:FB*3.5*89^

**INSTALL NAME**
FB*3.5*89
"BLD",5974,0)
FB*3.5*89^FEE BASIS^0^3050328^y
"BLD",5974,1,0)
^^3^3^3050207^
"BLD",5974,1,1,0)
The patch enhances all four payment batch formats (B3, B5, B9, and BT) 
"BLD",5974,1,2,0)
that are transmitted from VistA Fee Basis to Central FEE (AAC) to include
"BLD",5974,1,3,0)
additional data elements.
"BLD",5974,4,0)
^9.64PA^^
"BLD",5974,"KRN",0)
^9.67PA^8989.52^19
"BLD",5974,"KRN",.4,0)
.4
"BLD",5974,"KRN",.401,0)
.401
"BLD",5974,"KRN",.402,0)
.402
"BLD",5974,"KRN",.403,0)
.403
"BLD",5974,"KRN",.5,0)
.5
"BLD",5974,"KRN",.84,0)
.84
"BLD",5974,"KRN",3.6,0)
3.6
"BLD",5974,"KRN",3.8,0)
3.8
"BLD",5974,"KRN",9.2,0)
9.2
"BLD",5974,"KRN",9.8,0)
9.8
"BLD",5974,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",5974,"KRN",9.8,"NM",1,0)
FBAAV0^^0^B38746071
"BLD",5974,"KRN",9.8,"NM",2,0)
FBAAV3^^0^B3268497
"BLD",5974,"KRN",9.8,"NM",3,0)
FBAAV2^^0^B11336306
"BLD",5974,"KRN",9.8,"NM",4,0)
FBAAV5^^0^B47393581
"BLD",5974,"KRN",9.8,"NM",5,0)
FBAAV01^^0^B12070120
"BLD",5974,"KRN",9.8,"NM","B","FBAAV0",1)

"BLD",5974,"KRN",9.8,"NM","B","FBAAV01",5)

"BLD",5974,"KRN",9.8,"NM","B","FBAAV2",3)

"BLD",5974,"KRN",9.8,"NM","B","FBAAV3",2)

"BLD",5974,"KRN",9.8,"NM","B","FBAAV5",4)

"BLD",5974,"KRN",19,0)
19
"BLD",5974,"KRN",19.1,0)
19.1
"BLD",5974,"KRN",101,0)
101
"BLD",5974,"KRN",409.61,0)
409.61
"BLD",5974,"KRN",771,0)
771
"BLD",5974,"KRN",870,0)
870
"BLD",5974,"KRN",8989.51,0)
8989.51
"BLD",5974,"KRN",8989.52,0)
8989.52
"BLD",5974,"KRN",8994,0)
8994
"BLD",5974,"KRN","B",.4,.4)

"BLD",5974,"KRN","B",.401,.401)

"BLD",5974,"KRN","B",.402,.402)

"BLD",5974,"KRN","B",.403,.403)

"BLD",5974,"KRN","B",.5,.5)

"BLD",5974,"KRN","B",.84,.84)

"BLD",5974,"KRN","B",3.6,3.6)

"BLD",5974,"KRN","B",3.8,3.8)

"BLD",5974,"KRN","B",9.2,9.2)

"BLD",5974,"KRN","B",9.8,9.8)

"BLD",5974,"KRN","B",19,19)

"BLD",5974,"KRN","B",19.1,19.1)

"BLD",5974,"KRN","B",101,101)

"BLD",5974,"KRN","B",409.61,409.61)

"BLD",5974,"KRN","B",771,771)

"BLD",5974,"KRN","B",870,870)

"BLD",5974,"KRN","B",8989.51,8989.51)

"BLD",5974,"KRN","B",8989.52,8989.52)

"BLD",5974,"KRN","B",8994,8994)

"BLD",5974,"QUES",0)
^9.62^^
"BLD",5974,"REQB",0)
^9.611^1^1
"BLD",5974,"REQB",1,0)
FB*3.5*55^2
"BLD",5974,"REQB","B","FB*3.5*55",1)

"MBREQ")
0
"PKG",60,-1)
1^1
"PKG",60,0)
FEE BASIS^FB^Used to pay private vendors
"PKG",60,20,0)
^9.402P^1^1
"PKG",60,20,1,0)
2^^FBPMRG
"PKG",60,20,1,1)

"PKG",60,20,"B",2,1)

"PKG",60,22,0)
^9.49I^1^1
"PKG",60,22,1,0)
3.5^2950130^2950313
"PKG",60,22,1,"PAH",1,0)
89^3050328
"PKG",60,22,1,"PAH",1,1,0)
^^3^3^3050328
"PKG",60,22,1,"PAH",1,1,1,0)
The patch enhances all four payment batch formats (B3, B5, B9, and BT) 
"PKG",60,22,1,"PAH",1,1,2,0)
that are transmitted from VistA Fee Basis to Central FEE (AAC) to include
"PKG",60,22,1,"PAH",1,1,3,0)
additional data elements.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","FBAAV0")
0^1^B38746071
"RTN","FBAAV0",1,0)
FBAAV0 ;AISC/GRR-ELECTRONICALLY TRANSMIT FEE DATA ;2/8/2005
"RTN","FBAAV0",2,0)
 ;;3.5;FEE BASIS;**3,4,55,89**;JAN 30, 1995
"RTN","FBAAV0",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAV0",4,0)
 K ^TMP($J,"FBAABATCH"),^TMP($J,"FBVADAT") D DT^DICRW
"RTN","FBAAV0",5,0)
 I '$D(^FBAA(161.7,"AC","S")),'$D(^FBAA(161.7,"AC","R")),'$D(^FBAA(161.25,"AE")),$S('$D(^FBAA(161.26,"AC","P")):1,$O(^FBAA(161.26,"AC","P",0))'>0:1,1:0) W !,*7,"There are no transactions requiring transmission",*7 Q
"RTN","FBAAV0",6,0)
 W !!,"This option will transmit all Batches and MRA's ready to be transmitted",!,"to Austin"
"RTN","FBAAV0",7,0)
RD W !! S DIR(0)="Y",DIR("A")="Are you sure you want to continue",DIR("B")="No" D ^DIR K DIR G END:'Y
"RTN","FBAAV0",8,0)
 L +^FBAA(161.7,"AC"):0 G:'$T LOCK^FBAAUTL1
"RTN","FBAAV0",9,0)
 W !!,"The following Batches will be transmitted: " F FBSTAT="S","R" F J=0:0 S J=$O(^FBAA(161.7,"AC",FBSTAT,J)) Q:J'>0  S FBATCH=$G(^FBAA(161.7,J,0)) D
"RTN","FBAAV0",10,0)
 .Q:'+FBATCH
"RTN","FBAAV0",11,0)
 .I (FBSTAT="S"&($P(FBATCH,U,15)="Y"))!(+$P(FBATCH,U,9)) S ^TMP($J,"FBAABATCH",J)="" W !,+FBATCH
"RTN","FBAAV0",12,0)
RTRAN ;Entry from Re-transmit MRA routine
"RTN","FBAAV0",13,0)
 D ADDRESS^FBAAV01 G END:VATERR K VAT
"RTN","FBAAV0",14,0)
 D WAIT^DICD,STATION^FBAAUTL,HD^FBAAUTL I $D(FB("ERROR")) G END
"RTN","FBAAV0",15,0)
 S TOTSTR=0,$P(PAD," ",200)=" "
"RTN","FBAAV0",16,0)
 D ^FBAAV1:$D(^FBAA(161.25,"AE"))
"RTN","FBAAV0",17,0)
 D ^FBAAV4:$D(^FBAA(161.26,"AC","P"))
"RTN","FBAAV0",18,0)
 F J=0:0 S J=$O(^TMP($J,"FBAABATCH",J)) Q:J'>0  I $D(^FBAA(161.7,J,0)) S Y(0)=^(0) D SET1,DET:FBAABT="B3",DETP^FBAAV2:FBAABT="B5",DETT^FBAAV3:FBAABT="B2",^FBAAV5:FBAABT="B9"
"RTN","FBAAV0",19,0)
END L -^FBAA(161.7,"AC") D KILL^FBAAV1 Q
"RTN","FBAAV0",20,0)
SET1 ; build the payment batch header string (used by all four formats)
"RTN","FBAAV0",21,0)
 S FBAABN=$P(Y(0),"^",1),FBAABN=$E("00000",$L(FBAABN)+1,5)_FBAABN
"RTN","FBAAV0",22,0)
 S FBAAON=$E($P(Y(0),"^",2),3,6)
"RTN","FBAAV0",23,0)
 S FBAACD=$$AUSDT^FBAAV3(DT)
"RTN","FBAAV0",24,0)
 S FBAACP=$E($P(Y(0),"^",2),1,2)
"RTN","FBAAV0",25,0)
 S FBAABT=$P(Y(0),"^",3)
"RTN","FBAAV0",26,0)
 S FBAAAP=$$AUSAMT^FBAAV3($P(Y(0),"^",9),10)
"RTN","FBAAV0",27,0)
 S FBSTAT=$P(^FBAA(161.7,J,"ST"),"^")
"RTN","FBAAV0",28,0)
 S FBCHB=$P(Y(0),"^",15)
"RTN","FBAAV0",29,0)
 S FBEXMPT=$P(Y(0),"^",18)
"RTN","FBAAV0",30,0)
 S X=$$SUB^FBAAUTL5(+$P(Y(0),U,8)_"-"_$P(Y(0),U,2))
"RTN","FBAAV0",31,0)
 S FBAASN=$$LJ^XLFSTR($S(X]"":X,1:FBAASN),6," ")
"RTN","FBAAV0",32,0)
 I FBSTAT="R"!(FBSTAT="S"&(FBCHB'["Y"))!(FBSTAT="S"&($G(FBEXMPT)="Y")) S FBSTR=FBHD_$S(FBAABT="B2":"BT",1:FBAABT)_FBAACD_FBAASN_FBAABN_"  "_FBAAAP_FBAACP_" $"
"RTN","FBAAV0",33,0)
 Q
"RTN","FBAAV0",34,0)
DET ;entry point to process B3 (outpatient/ancillary) batch
"RTN","FBAAV0",35,0)
 ; input (partial list)
"RTN","FBAAV0",36,0)
 ;   J      - Batch IEN in file 161.7
"RTN","FBAAV0",37,0)
 ;   FBAAON - last 4 of obligation number
"RTN","FBAAV0",38,0)
 ;   FBAASN - station number (formatted)
"RTN","FBAAV0",39,0)
 S FBTXT=0
"RTN","FBAAV0",40,0)
 D CKB3V^FBAAV01 I $G(FBERR) K FBERR Q
"RTN","FBAAV0",41,0)
 F K=0:0 S K=$O(^FBAAC("AC",J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAAC("AC",J,K,L)) Q:L'>0  F M=0:0 S M=$O(^FBAAC("AC",J,K,L,M)) Q:M'>0  F N=0:0 S N=$O(^FBAAC("AC",J,K,L,M,N)) Q:N'>0  S Y(0)=$G(^FBAAC(K,1,L,1,M,1,N,0)) I Y(0)]"",+$P(Y(0),U,3) D
"RTN","FBAAV0",42,0)
 .N FBDTSR1,FBPICN
"RTN","FBAAV0",43,0)
 .S FBDTSR1=+$G(^FBAAC(K,1,L,1,M,0))
"RTN","FBAAV0",44,0)
 .S FBPICN=K_U_L_U_M_U_N
"RTN","FBAAV0",45,0)
 .S FBY=$G(^FBAAC(K,1,L,1,M,1,N,2))
"RTN","FBAAV0",46,0)
 .I 'FBTXT S FBTXT=1 D NEWMSG^FBAAV01,STORE^FBAAV01,UPD
"RTN","FBAAV0",47,0)
 .D GOT
"RTN","FBAAV0",48,0)
 ;
"RTN","FBAAV0",49,0)
 D:FBTXT XMIT^FBAAV01
"RTN","FBAAV0",50,0)
 Q
"RTN","FBAAV0",51,0)
 ;
"RTN","FBAAV0",52,0)
GOT ; process a B3 line item
"RTN","FBAAV0",53,0)
 ;
"RTN","FBAAV0",54,0)
 N DFN,FBADJ,FBADJA1,FBADJA2,FBADJR1,FBADJR2,FBADMIT,FBAUTHF,FBIENS
"RTN","FBAAV0",55,0)
 N FBMOD1,FBMOD2,FBMOD3,FBMOD4,FBPNAMX,FBUNITS,FBX
"RTN","FBAAV0",56,0)
 ;
"RTN","FBAAV0",57,0)
 S FBIENS=N_","_M_","_L_","_K_","
"RTN","FBAAV0",58,0)
 ;
"RTN","FBAAV0",59,0)
 ; get CPT modifiers
"RTN","FBAAV0",60,0)
 D
"RTN","FBAAV0",61,0)
 . N FBMODA,FBMODL
"RTN","FBAAV0",62,0)
 . D MODDATA^FBAAUTL4(K,L,M,N)
"RTN","FBAAV0",63,0)
 . S FBMODL=$$MODL^FBAAUTL4("FBMODA","E")
"RTN","FBAAV0",64,0)
 . S FBMOD1=$$RJ^XLFSTR($P(FBMODL,",",1),5," ")
"RTN","FBAAV0",65,0)
 . S FBMOD2=$$RJ^XLFSTR($P(FBMODL,",",2),5," ")
"RTN","FBAAV0",66,0)
 . S FBMOD3=$$RJ^XLFSTR($P(FBMODL,",",3),5," ")
"RTN","FBAAV0",67,0)
 . S FBMOD4=$$RJ^XLFSTR($P(FBMODL,",",4),5," ")
"RTN","FBAAV0",68,0)
 ;
"RTN","FBAAV0",69,0)
 S FBPAYT=$P(Y(0),"^",20),FBPAYT=$S(FBPAYT]"":FBPAYT,1:"V")
"RTN","FBAAV0",70,0)
 ;
"RTN","FBAAV0",71,0)
 S FBVID=$P($G(^FBAAV(L,0)),U,2)
"RTN","FBAAV0",72,0)
 S FBVID=FBVID_$E(PAD,$L(FBVID)+1,11)
"RTN","FBAAV0",73,0)
 S:FBPAYT="R" FBVID=$E(PAD,1,11)
"RTN","FBAAV0",74,0)
 ;
"RTN","FBAAV0",75,0)
 D POV^FBAAUTL2
"RTN","FBAAV0",76,0)
 S POV=$S(POV']"":"",POV="A":6,POV="B":7,POV="C":8,POV="D":9,POV="E":10,1:POV)
"RTN","FBAAV0",77,0)
 S POV=$S(POV']"":99,$D(^FBAA(161.82,POV,0)):$P(^(0),"^",3),1:99)
"RTN","FBAAV0",78,0)
 S FBPOV=POV
"RTN","FBAAV0",79,0)
 S FBTT=$S(FBTT]"":FBTT,1:1)
"RTN","FBAAV0",80,0)
 S FBCPT=$$CPT^FBAAUTL4($P(Y(0),"^")),FBCPT=$S($L(FBCPT)=5:FBCPT,1:"     ")
"RTN","FBAAV0",81,0)
 S FBPSA=$$PSA^FBAAV5(+$P(Y(0),U,12),+FBAASN) I $L(+FBPSA)'=3 S FBPSA=999
"RTN","FBAAV0",82,0)
 S FBPATT=$P(Y(0),"^",17),FBPATT=$S(FBPATT]"":FBPATT,1:10)
"RTN","FBAAV0",83,0)
 S FBTD=$$AUSDT^FBAAV3(FBDTSR1) ; formatted treatment date
"RTN","FBAAV0",84,0)
 S FBSUSP=$P(Y(0),"^",5),FBSUSP=$S(FBSUSP]"":FBSUSP,1:" ")
"RTN","FBAAV0",85,0)
 S FBSUSP=$S(FBSUSP=" ":" ",$D(^FBAA(161.27,+FBSUSP,0)):$P(^(0),"^"),1:" ")
"RTN","FBAAV0",86,0)
 S FBAP=$$AUSAMT^FBAAV3($P(Y(0),"^",3),8) ; amount paid
"RTN","FBAAV0",87,0)
 S FBPOS=+$P(Y(0),"^",25),FBPOS=$S(FBPOS:$P(^IBE(353.1,FBPOS,0),"^"),1:"  ")
"RTN","FBAAV0",88,0)
 S FBHCFA=+$P(Y(0),"^",26),FBHCFA=$S(FBHCFA:$P(^IBE(353.2,FBHCFA,0),"^"),1:""),FBHCFA=$E(PAD,$L(FBHCFA)+1,2)_FBHCFA
"RTN","FBAAV0",89,0)
 S FBVTOS=+$P(Y(0),"^",24),FBVTOS=$S(FBVTOS:$P(^FBAA(163.85,FBVTOS,0),"^",2),1:"  ")
"RTN","FBAAV0",90,0)
 S FBPD=+$P(Y(0),"^",23),FBPD=$S(FBPD:$$ICD9^FBCSV1(FBPD,$G(FBDTSR1)),1:""),FBPD=$E(PAD,$L(FBPD)+1,7)_FBPD
"RTN","FBAAV0",91,0)
 S FBINVN=$P(Y(0),"^",16)
"RTN","FBAAV0",92,0)
 S FBINVN=$E("000000000",$L(FBINVN)+1,9)_FBINVN
"RTN","FBAAV0",93,0)
 S FBAUTHF=$S($P(Y(0),U,13)["FB583":"U",1:"A") ; auth/unauth flag
"RTN","FBAAV0",94,0)
 S FBDIN=$$AUSDT^FBAAV3($P(Y(0),"^",15)) ; invoice date rec'd
"RTN","FBAAV0",95,0)
 S FBADMIT=$$AUSDT^FBAAV3($$B3ADMIT(FBIENS)) ; formatted admission date
"RTN","FBAAV0",96,0)
 ;
"RTN","FBAAV0",97,0)
 S VAPA("P")=""
"RTN","FBAAV0",98,0)
 S DFN=K
"RTN","FBAAV0",99,0)
 ; Note - before this point Y(0) was the 0 node of subfile #162.03
"RTN","FBAAV0",100,0)
 ;      - after this point Y(0) will be the 0 node of file #2
"RTN","FBAAV0",101,0)
 S Y(0)=$G(^DPT(+K,0)) Q:Y(0)']""
"RTN","FBAAV0",102,0)
 D PAT^FBAAUTL2
"RTN","FBAAV0",103,0)
 ; obtain date of birth, must follow call to PAT^FBAAUTL2 to overwrite 
"RTN","FBAAV0",104,0)
 ; the value returned from it
"RTN","FBAAV0",105,0)
 S FBDOB=$$AUSDT^FBAAV3($P(Y(0),"^",3)) ; date of birth
"RTN","FBAAV0",106,0)
 D ADD^VADPT
"RTN","FBAAV0",107,0)
 S FBPNAMX=$$HL7NAME^FBAAV4(DFN) ; patient name
"RTN","FBAAV0",108,0)
 S FBUNITS=$P(FBY,U,14)
"RTN","FBAAV0",109,0)
 S:FBUNITS<1 FBUNITS=1
"RTN","FBAAV0",110,0)
 S FBUNITS=$$RJ^XLFSTR(FBUNITS,5,0) ; volume indicator (units paid)
"RTN","FBAAV0",111,0)
 ;
"RTN","FBAAV0",112,0)
 ; get and format adjustment reason codes and amounts (if any)
"RTN","FBAAV0",113,0)
 D LOADADJ^FBAAFA(FBIENS,.FBADJ)
"RTN","FBAAV0",114,0)
 S FBX=$$ADJL^FBUTL2(.FBADJ)
"RTN","FBAAV0",115,0)
 S FBADJR1=$$RJ^XLFSTR($P(FBX,U,1),5," ")
"RTN","FBAAV0",116,0)
 S FBADJA1=$$AUSAMT^FBAAV3($P(FBX,U,3),9,1)
"RTN","FBAAV0",117,0)
 S FBADJR2=$$RJ^XLFSTR($P(FBX,U,4),5," ")
"RTN","FBAAV0",118,0)
 S FBADJA2=$$AUSAMT^FBAAV3($P(FBX,U,6),9,1)
"RTN","FBAAV0",119,0)
 K FBADJ,FBX
"RTN","FBAAV0",120,0)
 ;
"RTN","FBAAV0",121,0)
 S FBST=$S($P(VAPA(5),"^")="":"  ",$D(^DIC(5,$P(VAPA(5),"^"),0)):$P(^(0),"^",2),1:"  ")
"RTN","FBAAV0",122,0)
 S:$L(FBST)'=2 FBST=$E(PAD,$L(FBST)+1,2)_FBST
"RTN","FBAAV0",123,0)
 S FBCTY=$S($P(VAPA(7),"^",1)="":"   ",FBST="  ":"   ",$D(^DIC(5,$P(VAPA(5),"^"),1,$P(VAPA(7),"^"),0)):$P(^(0),"^",3),1:"   ")
"RTN","FBAAV0",124,0)
 I $L(FBCTY)'=3 S FBCTY=$E("000",$L(FBCTY)+1,3)_FBCTY
"RTN","FBAAV0",125,0)
 S FBZIP=$S('+$G(VAPA(11)):VAPA(6),+VAPA(11):$P(VAPA(11),U),1:VAPA(6)),FBZIP=$TR(FBZIP,"-","")_$E("000000000",$L(FBZIP)+1,9)
"RTN","FBAAV0",126,0)
 D STRING^FBAAV01
"RTN","FBAAV0",127,0)
 Q
"RTN","FBAAV0",128,0)
 ;
"RTN","FBAAV0",129,0)
UPD ; update the batch file
"RTN","FBAAV0",130,0)
 N Y
"RTN","FBAAV0",131,0)
 S DA=J,(DIC,DIE)="^FBAA(161.7,"
"RTN","FBAAV0",132,0)
 S DR="11////^S X=""T"";12////^S X=DT"
"RTN","FBAAV0",133,0)
 D ^DIE
"RTN","FBAAV0",134,0)
 Q
"RTN","FBAAV0",135,0)
 ;
"RTN","FBAAV0",136,0)
STORE D STORE^FBAAV01 Q
"RTN","FBAAV0",137,0)
 ;
"RTN","FBAAV0",138,0)
B3ADMIT(FBIENS) ; Determine Admission Date for a B3 payment line item
"RTN","FBAAV0",139,0)
 ; input
"RTN","FBAAV0",140,0)
 ;   FBIENS - IENS (FileMan format) for subfile 162.03 entry
"RTN","FBAAV0",141,0)
 ; returns admission date in internal FileMan format or null value
"RTN","FBAAV0",142,0)
 ;
"RTN","FBAAV0",143,0)
 N FB7078,FBRET
"RTN","FBAAV0",144,0)
 S FBRET=""
"RTN","FBAAV0",145,0)
 S FB7078=$$GET1^DIQ(162.03,FBIENS,27,"I") ; associated 7078/583
"RTN","FBAAV0",146,0)
 ; (the unauthorized ancillary claims will have the treatment date
"RTN","FBAAV0",147,0)
 ;  instead of the inpatient admission date so nothing is sent to
"RTN","FBAAV0",148,0)
 ;  Austin for them)
"RTN","FBAAV0",149,0)
 ;
"RTN","FBAAV0",150,0)
 ; if line items points to a 7078 authorization then return a date
"RTN","FBAAV0",151,0)
 I $P(FB7078,";",2)="FB7078(" D
"RTN","FBAAV0",152,0)
 . N FBY
"RTN","FBAAV0",153,0)
 . S FBY=$G(^FB7078(+FB7078,0))
"RTN","FBAAV0",154,0)
 . ; if fee program is civil hospital then return 7078 date of admission
"RTN","FBAAV0",155,0)
 . I $P(FBY,U,11)=6 S FBRET=$P(FBY,U,15)
"RTN","FBAAV0",156,0)
 . ; if fee program is CNH then return 7078 authorized from date
"RTN","FBAAV0",157,0)
 . I $P(FBY,U,11)=7 S FBRET=$P(FBY,U,4)
"RTN","FBAAV0",158,0)
 ;
"RTN","FBAAV0",159,0)
 Q FBRET
"RTN","FBAAV01")
0^5^B12070120
"RTN","FBAAV01",1,0)
FBAAV01 ;AISC/GRR-ELECTRONICALLY TRANSMIT FEE DATA CONTINUED ;1/31/2005
"RTN","FBAAV01",2,0)
 ;;3.5;FEE BASIS;**89**;JAN 30, 1995
"RTN","FBAAV01",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAV01",4,0)
NEWMSG ;get new message number, reset line counter
"RTN","FBAAV01",5,0)
 ;FBLN=line counter, FBFEE=FEE message counter, FBNVP=NVP message counter
"RTN","FBAAV01",6,0)
 ;FBOKTX=1 if message pending, 0 otherwise
"RTN","FBAAV01",7,0)
 S FBXMZ=0,FBJ=$G(J),FBK=$G(K) S:'$D(FBFEE) FBFEE=1 S:'$D(FBNVP) FBNVP=1
"RTN","FBAAV01",8,0)
 S XMSUB=$S('$D(FBFLAG):"FEE BASIS MESSAGE # "_FBFEE,1:"FEE NON-VA HOSP TO PRICER MESSAGE # "_FBNVP),XMDUZ=DUZ
"RTN","FBAAV01",9,0)
 S FBOKTX=0
"RTN","FBAAV01",10,0)
 D XMZ^XMA2
"RTN","FBAAV01",11,0)
 I '$D(XMZ)!(XMZ'>0) G NEWMSG
"RTN","FBAAV01",12,0)
 S FBXMZ=XMZ,FBLN=0,FBOKTX=1,J=FBJ,K=FBK K XMZ
"RTN","FBAAV01",13,0)
 Q
"RTN","FBAAV01",14,0)
 ;
"RTN","FBAAV01",15,0)
XMIT ;send message, increment message counter
"RTN","FBAAV01",16,0)
 ;FBLN=line counter, FBFEE=FEE message counter, FBNVP=NVP message counter
"RTN","FBAAV01",17,0)
 ;FBXMFEE(=FEE recipient array, FBXMNVP(=NVP recipient array
"RTN","FBAAV01",18,0)
 S FBJ=J,FBK=K K XMY D ROUT
"RTN","FBAAV01",19,0)
 S XMZ=FBXMZ,^XMB(3.9,XMZ,2,0)="^3.92A^"_FBLN_"^"_FBLN_"^"_DT
"RTN","FBAAV01",20,0)
 S XMDUN=$P(^VA(200,DUZ,0),U) D ENT1^XMD
"RTN","FBAAV01",21,0)
 S FBLN=0,FBOKTX=0
"RTN","FBAAV01",22,0)
 D INCRM ;increment message counter
"RTN","FBAAV01",23,0)
 S J=FBJ,K=FBK
"RTN","FBAAV01",24,0)
 Q
"RTN","FBAAV01",25,0)
 ;
"RTN","FBAAV01",26,0)
ROUT ;set up recipients for message
"RTN","FBAAV01",27,0)
 I $D(FBFLAG) S FBI=0 F  S FBI=$O(FBXMNVP(FBI)) Q:'FBI  S X=FBXMNVP(FBI),XMN=0,XMDF="" D INST^XMA21 K XMN,XMDF
"RTN","FBAAV01",28,0)
 I '$D(FBFLAG) S FBI=0 F  S FBI=$O(FBXMFEE(FBI)) Q:'FBI  S X=FBXMFEE(FBI),XMN=0,XMDF="" D INST^XMA21 K XMN,XMDF
"RTN","FBAAV01",29,0)
 S XMY(DUZ)="",XMDUZ=DUZ Q
"RTN","FBAAV01",30,0)
 ;
"RTN","FBAAV01",31,0)
INCRM ;increment message counter
"RTN","FBAAV01",32,0)
 I $D(FBFLAG) S FBNVP=FBNVP+1
"RTN","FBAAV01",33,0)
 E  S FBFEE=FBFEE+1
"RTN","FBAAV01",34,0)
 Q
"RTN","FBAAV01",35,0)
 ;
"RTN","FBAAV01",36,0)
INCRL ;increment line counter
"RTN","FBAAV01",37,0)
 S FBLN=FBLN+1 Q
"RTN","FBAAV01",38,0)
 ;
"RTN","FBAAV01",39,0)
STORE ;set message string
"RTN","FBAAV01",40,0)
 D INCRL S ^XMB(3.9,FBXMZ,2,FBLN,0)=FBSTR
"RTN","FBAAV01",41,0)
 Q
"RTN","FBAAV01",42,0)
 ;
"RTN","FBAAV01",43,0)
ADDRESS ;set up recipient array, FBXMFEE( for FEE router, FBXMNVP( for NVP router
"RTN","FBAAV01",44,0)
 F VATNAME="FEE","NVP" D ^VATRAN G:VATERR ADDQ S FBI=0 F  S FBI=$O(VAT(FBI)) Q:'FBI  S FBVAR="FBXM"_VATNAME_"("_FBI_")" S @FBVAR=VAT(FBI)
"RTN","FBAAV01",45,0)
ADDQ Q
"RTN","FBAAV01",46,0)
 ;Following checks for Austin Name Field in Vendor file in order to continue transmitting that batch.
"RTN","FBAAV01",47,0)
CKB3V F FB1=0:0 S FB1=$O(^FBAAC("AC",J,FB1)) Q:'FB1!($G(FBERR))  F FB2=0:0 S FB2=$O(^FBAAC("AC",J,FB1,FB2)) Q:FB2'>0!($G(FBERR))  D CHKV
"RTN","FBAAV01",48,0)
 Q
"RTN","FBAAV01",49,0)
CKB5V F FB1=0:0 S FB1=$O(^FBAA(162.1,"AE",J,FB1)) Q:'FB1!($G(FBERR))  I $G(^FBAA(162.1,FB1,0)) S FB2=+$P(^(0),"^",4) D CHKV
"RTN","FBAAV01",50,0)
 Q
"RTN","FBAAV01",51,0)
CKB9V F FB1=0:0 S FB1=$O(^FBAAI("AC",J,FB1)) Q:'FB1!($G(FBERR))  I $G(^FBAAI(FB1,0)) S FB2=+$P(^(0),"^",3) D CHKV
"RTN","FBAAV01",52,0)
 Q
"RTN","FBAAV01",53,0)
CHKV I $$CKVEN^FBAADV(FB2) W !!,*7,"VENDOR: ",$$VNAME^FBNHEXP(FB2)," Not approved in Austin yet.",!,"Batch # ",FBAABN," CANNOT BE TRANSMITTED!!!" S FBERR=1
"RTN","FBAAV01",54,0)
 Q
"RTN","FBAAV01",55,0)
 ;
"RTN","FBAAV01",56,0)
STRING ;called from FBAAV0 to build 'B3' payment record
"RTN","FBAAV01",57,0)
 ;
"RTN","FBAAV01",58,0)
 S FBPICN=$$PADZ(FBPICN,30)
"RTN","FBAAV01",59,0)
 ;
"RTN","FBAAV01",60,0)
 ; build and store 1st line in message
"RTN","FBAAV01",61,0)
 S FBSTR=3_FBAASN_FBSSN_FBPAYT_FBPNAMX_FBVID_"  "_FBAP_FBAAON_FBSUSP_FBPOV_FBPATT_FBTD_FBTT_FBDIN_FBINVN_FBST_FBCTY_FBZIP_$E(FBPSA,1,3)_FBCPT_FBPOS_FBHCFA_FBVTOS_FBPD
"RTN","FBAAV01",62,0)
 S FBSTR=FBSTR_+$P($G(FBY),U,2)_$E(PAD,1,8)_FBPICN_$S(+FBY:$$AUSDT^FBAAV3(+FBY),1:FBDIN)
"RTN","FBAAV01",63,0)
 S FBSTR=FBSTR_FBADMIT_FBDOB_FBUNITS_FBAUTHF_FBMOD1_FBMOD2_FBMOD3_FBMOD4_FBADJR1_FBADJR2_"~"
"RTN","FBAAV01",64,0)
 D STORE
"RTN","FBAAV01",65,0)
 ;
"RTN","FBAAV01",66,0)
 ; build and store 2nd line in message
"RTN","FBAAV01",67,0)
 S FBSTR=FBADJA1_FBADJA2_$E(PAD,1,10)_"~$"
"RTN","FBAAV01",68,0)
 D STORE
"RTN","FBAAV01",69,0)
 ;
"RTN","FBAAV01",70,0)
 K FBPICN,FBY
"RTN","FBAAV01",71,0)
 Q
"RTN","FBAAV01",72,0)
 ;
"RTN","FBAAV01",73,0)
PADZ(X,Y) ;call to pad 'X' with leading zeros' to a field length of 'Y'
"RTN","FBAAV01",74,0)
 ;
"RTN","FBAAV01",75,0)
 I $S('$L(X):1,'Y:1,Y<$L(X):1,1:0) Q ""
"RTN","FBAAV01",76,0)
 N Z S Z=0,$P(Z,0,Y)=0
"RTN","FBAAV01",77,0)
 Q $E(Z,$L(X)+1,Y)_X
"RTN","FBAAV2")
0^3^B11336306
"RTN","FBAAV2",1,0)
FBAAV2 ;AISC/GRR-ELECTRONICALLY TRANSMIT PHARMACY PAYMENTS ;2/8/2005
"RTN","FBAAV2",2,0)
 ;;3.5;FEE BASIS;**3,89**;JAN 30, 1995
"RTN","FBAAV2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAV2",4,0)
DETP ; ENTRY FROM FBAAV0
"RTN","FBAAV2",5,0)
 S FBTXT=0
"RTN","FBAAV2",6,0)
 D CKB5V^FBAAV01 I $G(FBERR) K FBERR Q
"RTN","FBAAV2",7,0)
 F K=0:0 S K=$O(^FBAA(162.1,"AE",J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAA(162.1,"AE",J,K,L)) Q:L'>0  S Y(0)=$G(^FBAA(162.1,K,"RX",L,0)),Y(2)=$G(^(2)),Y=$G(^FBAA(162.1,K,0)) I Y(0)]"",Y]"",+$P(Y(0),U,16) D
"RTN","FBAAV2",8,0)
 .N FBPICN,FBY
"RTN","FBAAV2",9,0)
 .S FBPICN=K_U_L
"RTN","FBAAV2",10,0)
 .S FBY=$S($P(Y,U,12):$P(Y,U,12),1:$P(Y,U,2))_U_+$P(Y(2),U,9)
"RTN","FBAAV2",11,0)
 .I 'FBTXT S FBTXT=1 D NEWMSG^FBAAV01,STORE^FBAAV01,UPD^FBAAV0
"RTN","FBAAV2",12,0)
 .D GOTP
"RTN","FBAAV2",13,0)
 D:FBTXT XMIT^FBAAV01
"RTN","FBAAV2",14,0)
 Q
"RTN","FBAAV2",15,0)
 ;
"RTN","FBAAV2",16,0)
GOTP ; process a B5 line item
"RTN","FBAAV2",17,0)
 N DFN,FBADJ,FBADJA1,FBADJA2,FBADJR1,FBADJR2,FBIENS,FBPNAMX,FBVY0,FBX
"RTN","FBAAV2",18,0)
 ;
"RTN","FBAAV2",19,0)
 S FBIENS=$P(FBPICN,U,2)_","_$P(FBPICN,U,1)_","
"RTN","FBAAV2",20,0)
 S FBPAYT=$P(Y(0),"^",20),FBPAYT=$S(FBPAYT]"":FBPAYT,1:"V")
"RTN","FBAAV2",21,0)
 S FBINVN=$P(Y,"^"),FBINVN=$E("000000000",$L(FBINVN)+1,9)_FBINVN
"RTN","FBAAV2",22,0)
 S FBDIN=$$AUSDT^FBAAV3($P(Y,"^",2))
"RTN","FBAAV2",23,0)
 ;
"RTN","FBAAV2",24,0)
 S FBVFN=$P(Y,"^",4)
"RTN","FBAAV2",25,0)
 S FBVY0=$G(^FBAAV(FBVFN,0)) ; vendor 0 node
"RTN","FBAAV2",26,0)
 S FBVID=$P(FBVY0,U,2),FBVID=$E(FBVID,1,9)_$E(PAD,$L(FBVID)+1,9)
"RTN","FBAAV2",27,0)
 S FBCSN=$S($P(FBVY0,U,2)]"":$P(FBVY0,U,10),1:"")
"RTN","FBAAV2",28,0)
 S FBCSN=$E("0000",$L(FBCSN)+1,4)_FBCSN
"RTN","FBAAV2",29,0)
 I FBPAYT="R" S FBVID=$E(PAD,1,9),FBCSN=$E(PAD,1,4)
"RTN","FBAAV2",30,0)
 K FBVY0
"RTN","FBAAV2",31,0)
 ;
"RTN","FBAAV2",32,0)
 S FBRX=$P(Y(0),"^",1),FBRX=$E("00000000",$L(FBRX)+1,8)_FBRX
"RTN","FBAAV2",33,0)
 I '$L($G(FBAASN)) D STATION^FBAAUTL
"RTN","FBAAV2",34,0)
 S FBPSA=$$PSA^FBAAV5(+$P(Y(2),U,5),+FBAASN) I $L(+FBPSA)'=3 S FBPSA=999
"RTN","FBAAV2",35,0)
 S FBTD=$$AUSDT^FBAAV3($P(Y(0),"^",3))
"RTN","FBAAV2",36,0)
 S FBSUSP=$P(Y(0),"^",8),FBSUSP=$S(FBSUSP="":" ",$D(^FBAA(161.27,+FBSUSP,0)):$P(^(0),"^"),1:" ")
"RTN","FBAAV2",37,0)
 S FBAC=$$AUSAMT^FBAAV3($P(Y(0),"^",4),8)
"RTN","FBAAV2",38,0)
 S FBAP=$$AUSAMT^FBAAV3($P(Y(0),"^",16),8)
"RTN","FBAAV2",39,0)
 I FBAC=FBAP S FBAP="        "
"RTN","FBAAV2",40,0)
 S DFN=$P(Y(0),"^",5)
"RTN","FBAAV2",41,0)
 Q:'DFN
"RTN","FBAAV2",42,0)
 Q:'$D(^DPT(DFN,0))
"RTN","FBAAV2",43,0)
 ; Note: Prior to the following line Y(0) = the 0 node of subfile 161.11
"RTN","FBAAV2",44,0)
 ;       After the line Y(0) will be the 0 node of file #2
"RTN","FBAAV2",45,0)
 S VAPA("P")="",Y(0)=^DPT(DFN,0) D PAT^FBAAUTL2,ADD^VADPT
"RTN","FBAAV2",46,0)
 S FBPNAMX=$$HL7NAME^FBAAV4(DFN)
"RTN","FBAAV2",47,0)
 S FBST=$S($P(VAPA(5),"^")="":"  ",$D(^DIC(5,$P(VAPA(5),"^"),0)):$P(^(0),"^",2),1:"  ")
"RTN","FBAAV2",48,0)
 S:$L(FBST)'=2 FBST=$E(PAD,$L(FBST)+1,2)_FBST
"RTN","FBAAV2",49,0)
 S FBCTY=$S($P(VAPA(7),"^")="":"   ",FBST="  ":"   ",$D(^DIC(5,$P(VAPA(5),"^"),1,$P(VAPA(7),"^"),0)):$P(^(0),"^",3),1:"   ")
"RTN","FBAAV2",50,0)
 I $L(FBCTY)'=3 S FBCTY=$E("000",$L(FBCTY)+1,3)_FBCTY
"RTN","FBAAV2",51,0)
 S FBZIP=$S('+$G(VAPA(11)):VAPA(6),+VAPA(11):$P(VAPA(11),U),1:VAPA(6)),FBZIP=$TR(FBZIP,"-","")_$E("000000000",$L(FBZIP)+1,9)
"RTN","FBAAV2",52,0)
 ;
"RTN","FBAAV2",53,0)
 ; get and format adjustment reason codes and amounts (if any)
"RTN","FBAAV2",54,0)
 D LOADADJ^FBRXFA(FBIENS,.FBADJ)
"RTN","FBAAV2",55,0)
 S FBX=$$ADJL^FBUTL2(.FBADJ)
"RTN","FBAAV2",56,0)
 S FBADJR1=$$RJ^XLFSTR($P(FBX,U,1),5," ")
"RTN","FBAAV2",57,0)
 S FBADJA1=$$AUSAMT^FBAAV3($P(FBX,U,3),9,1)
"RTN","FBAAV2",58,0)
 S FBADJR2=$$RJ^XLFSTR($P(FBX,U,4),5," ")
"RTN","FBAAV2",59,0)
 S FBADJA2=$$AUSAMT^FBAAV3($P(FBX,U,6),9,1)
"RTN","FBAAV2",60,0)
 K FBADJ,FBX
"RTN","FBAAV2",61,0)
 ;
"RTN","FBAAV2",62,0)
 S FBSTR=5_FBAASN_FBSSN_FBPAYT_FBPNAMX_FBVID_FBCSN_FBAC_FBAP_FBAAON_FBSUSP_FBTD_FBRX_FBDIN_FBINVN_FBST_FBCTY_FBZIP_$E(FBPSA,1,3)
"RTN","FBAAV2",63,0)
 S FBSTR=FBSTR_$P(FBY,U,2)_$E(PAD,1,8)_$$PADZ^FBAAV01(FBPICN,30)_$$AUSDT^FBAAV3(+FBY)
"RTN","FBAAV2",64,0)
 S FBSTR=FBSTR_FBADJR1_FBADJR2_FBADJA1_FBADJA2_$E(PAD,1,10)_"$"
"RTN","FBAAV2",65,0)
 D STORE^FBAAV01
"RTN","FBAAV2",66,0)
 Q
"RTN","FBAAV3")
0^2^B3268497
"RTN","FBAAV3",1,0)
FBAAV3 ;AISC/GRR-CREATE & ELECTRONICALLY TRANSMIT TRANSACTIONS FOR TRAVEL PAYMENTS ;2/8/2005
"RTN","FBAAV3",2,0)
 ;;3.5;FEE BASIS;**3,89**;JAN 30, 1995
"RTN","FBAAV3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAV3",4,0)
DETT ; process a travel batch
"RTN","FBAAV3",5,0)
 S FBTXT=0
"RTN","FBAAV3",6,0)
 F K=0:0 S K=$O(^FBAAC("AD",J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAAC("AD",J,K,L)) Q:L'>0  S Y(0)=$G(^FBAAC(K,3,L,0)) I Y(0)]"",+$P(Y(0),U,3) D
"RTN","FBAAV3",7,0)
 .S FBPICN=K_U_L
"RTN","FBAAV3",8,0)
 .I 'FBTXT S FBTXT=1 D NEWMSG^FBAAV01,STORE^FBAAV01,UPD^FBAAV0
"RTN","FBAAV3",9,0)
 .D GOT
"RTN","FBAAV3",10,0)
 D:FBTXT XMIT^FBAAV01 Q
"RTN","FBAAV3",11,0)
GOT ; process a travel line item
"RTN","FBAAV3",12,0)
 N DFN,FBPNAMX
"RTN","FBAAV3",13,0)
 S FBTD=$$AUSDT($P(Y(0),U))
"RTN","FBAAV3",14,0)
 S FBAP=$$AUSAMT($P(Y(0),"^",3),8)
"RTN","FBAAV3",15,0)
 S DFN=K
"RTN","FBAAV3",16,0)
 Q:'DFN
"RTN","FBAAV3",17,0)
 Q:'$D(^DPT(DFN,0))
"RTN","FBAAV3",18,0)
 ; Note: Prior to the following line Y(0) = 0 node of subfile #162.04
"RTN","FBAAV3",19,0)
 ;       After the line, Y(0) will = 0 node of file #2
"RTN","FBAAV3",20,0)
 S Y(0)=^DPT(DFN,0)
"RTN","FBAAV3",21,0)
 D PAT^FBAAUTL2
"RTN","FBAAV3",22,0)
 S FBPNAMX=$$HL7NAME^FBAAV4(DFN) ; formatted patient name
"RTN","FBAAV3",23,0)
 S FBSTR="T"_FBAASN_FBSSN_"T"_FBPNAMX_FBAP_FBAAON_FBTD_"0"_$E(PAD,1,8)
"RTN","FBAAV3",24,0)
 S FBSTR=FBSTR_$$PADZ^FBAAV01(FBPICN,30)_FBTD_"$"
"RTN","FBAAV3",25,0)
 D STORE^FBAAV01
"RTN","FBAAV3",26,0)
 K FBPICN
"RTN","FBAAV3",27,0)
 Q
"RTN","FBAAV3",28,0)
 ;
"RTN","FBAAV3",29,0)
AUSDT(FBDT) ;called to format date from VA FileMan internal to YYYYMMDD
"RTN","FBAAV3",30,0)
 ; if input date is blank or invalid, eight spaces will be returned
"RTN","FBAAV3",31,0)
 ;
"RTN","FBAAV3",32,0)
 N FBRET
"RTN","FBAAV3",33,0)
 S:FBDT FBRET=$$FMTHL7^XLFDT($P(FBDT,"."))
"RTN","FBAAV3",34,0)
 S:$G(FBRET)=""!($G(FBRET)<0) FBRET="        "
"RTN","FBAAV3",35,0)
 Q FBRET
"RTN","FBAAV3",36,0)
 ;
"RTN","FBAAV3",37,0)
AUSAMT(FBAMT,FBL,FBS) ; called to format signed dollar amount for Austin
"RTN","FBAAV3",38,0)
 ; input
"RTN","FBAAV3",39,0)
 ;   FBAMT - dollar amount
"RTN","FBAAV3",40,0)
 ;   FBL   - (optional) length of return sting 
"RTN","FBAAV3",41,0)
 ;   FBS   - (optional) =true(1) if return value could be negative (-)
"RTN","FBAAV3",42,0)
 ;           default is false (0)
"RTN","FBAAV3",43,0)
 ; result
"RTN","FBAAV3",44,0)
 ;   string value, right justified, 0 padded, decimal point removed,
"RTN","FBAAV3",45,0)
 ;   with rightmost 2 numeric characters the cents
"RTN","FBAAV3",46,0)
 ;   if FBS true then rightmost character indicate the sign (' ' or '-')
"RTN","FBAAV3",47,0)
 ;   example with FBS false: 12.41 with length 8 would return '00001241'
"RTN","FBAAV3",48,0)
 ;   example with FBS true:  12.41 with length 9 would return '00001241 '
"RTN","FBAAV3",49,0)
 ;   example with FBS true: -12.41 with length 9 would return '00001241-'
"RTN","FBAAV3",50,0)
 ;
"RTN","FBAAV3",51,0)
 N FBRET
"RTN","FBAAV3",52,0)
 ;
"RTN","FBAAV3",53,0)
 ; use absolute value
"RTN","FBAAV3",54,0)
 S FBRET=$S(FBAMT<0:-FBAMT,1:FBAMT)
"RTN","FBAAV3",55,0)
 ;
"RTN","FBAAV3",56,0)
 ; format with 2 decimals places
"RTN","FBAAV3",57,0)
 S FBRET=$FN(FBRET,"",2)
"RTN","FBAAV3",58,0)
 ;
"RTN","FBAAV3",59,0)
 ; remove the decimal point
"RTN","FBAAV3",60,0)
 S FBRET=$TR(FBRET,".","")
"RTN","FBAAV3",61,0)
 ;
"RTN","FBAAV3",62,0)
 ; add the suffix denoting the sign when applicable (when FBS true)
"RTN","FBAAV3",63,0)
 S FBRET=FBRET_$S('$G(FBS):"",FBAMT<0:"-",1:" ")
"RTN","FBAAV3",64,0)
 ;
"RTN","FBAAV3",65,0)
 ; right justify and 0 pad
"RTN","FBAAV3",66,0)
 S FBRET=$$RJ^XLFSTR(FBRET,$G(FBL),"0")
"RTN","FBAAV3",67,0)
 ;
"RTN","FBAAV3",68,0)
 ; return result
"RTN","FBAAV3",69,0)
 Q FBRET
"RTN","FBAAV3",70,0)
 ;
"RTN","FBAAV3",71,0)
 ;FBAAV3
"RTN","FBAAV5")
0^4^B47393581
"RTN","FBAAV5",1,0)
FBAAV5 ;AISC/GRR-CREATE TRANSACTIONS FOR CH/CNH PAYMENTS ;2/8/2005
"RTN","FBAAV5",2,0)
 ;;3.5;FEE BASIS;**3,55,89**;JAN 30, 1995
"RTN","FBAAV5",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAV5",4,0)
 D CKB9V^FBAAV01 I $G(FBERR) K FBERR Q
"RTN","FBAAV5",5,0)
 G:FBSTAT="S"&(FBCHB="Y")&($P(Y(0),"^",18)'="Y") ^FBAAV6
"RTN","FBAAV5",6,0)
DETCH S FBTXT=0
"RTN","FBAAV5",7,0)
 F K=0:0 S K=$O(^FBAAI("AC",J,K)) Q:K'>0  S Y(0)=$G(^FBAAI(K,0)),Y(2)=$G(^(2)) I Y(0)]"",+$P(Y(0),U,9) D
"RTN","FBAAV5",8,0)
 .N FBPICN,FBY
"RTN","FBAAV5",9,0)
 .S FBPICN=K
"RTN","FBAAV5",10,0)
 .S FBY=$S($P(Y(2),U,2):$P(Y(2),U,2),1:$P(Y(0),U,2))_U_+$P(Y(2),U,3)
"RTN","FBAAV5",11,0)
 .I 'FBTXT S FBTXT=1 D NEWMSG^FBAAV01,STORE^FBAAV01,UPD^FBAAV0
"RTN","FBAAV5",12,0)
 .D GOT
"RTN","FBAAV5",13,0)
 D:FBTXT XMIT^FBAAV01 Q
"RTN","FBAAV5",14,0)
GOT ; process an inpatient invoice
"RTN","FBAAV5",15,0)
 N DFN,FBADJ,FBADJA,FBADJR,FBADMIT,FBAUTHF,FBCDAYS,FBDISDT,FBDISTY
"RTN","FBAAV5",16,0)
 N FBDRG,FBIENS,FBPA,FBPNAMX,FBVMID,FBX
"RTN","FBAAV5",17,0)
 S FBIENS=K_","
"RTN","FBAAV5",18,0)
 I '$L($G(FBAASN)) D STATION^FBAAUTL
"RTN","FBAAV5",19,0)
 S FBPSA=$$PSA(+$P(Y(0),U,20),+$G(FBAASN)) I $L(+FBPSA)'=3 S FBPSA=999
"RTN","FBAAV5",20,0)
 S FBPAYT=$P(Y(0),"^",13),FBPAYT=$S(FBPAYT]"":FBPAYT,1:"V")
"RTN","FBAAV5",21,0)
 S L=$P(Y(0),"^",3)
"RTN","FBAAV5",22,0)
 S FBVID=$S($D(^FBAAV(L,0)):$P(^(0),"^",2),1:"")
"RTN","FBAAV5",23,0)
 S FBVID=FBVID_$E(PAD,$L(FBVID)+1,11)
"RTN","FBAAV5",24,0)
 S:FBPAYT="R" FBVID=$E(PAD,1,11)
"RTN","FBAAV5",25,0)
 S FBVMID=$S($D(^FBAAV(L,0)):$P(^(0),"^",17),1:"")
"RTN","FBAAV5",26,0)
 S FBVMID=$E(PAD,$L(FBVMID)+1,6)_FBVMID
"RTN","FBAAV5",27,0)
 S POV=$P(Y(0),"^",18)
"RTN","FBAAV5",28,0)
 S POV=$S(POV']"":"",POV="A":6,POV="B":7,POV="C":8,POV="D":9,POV="E":10,1:POV),POV=$S(POV']"":40,$D(^FBAA(161.82,POV,0)):$P(^(0),"^",3),1:40),FBPOV=POV
"RTN","FBAAV5",29,0)
 S FBPATT=$P(Y(0),"^",19),FBPATT=$S(FBPATT]"":FBPATT,1:10)
"RTN","FBAAV5",30,0)
 S FBFTD=$$AUSDT^FBAAV3($P(Y(0),"^",6)) ; from treatment date
"RTN","FBAAV5",31,0)
 S FBTTD=$$AUSDT^FBAAV3($P(Y(0),"^",7)) ; to treatment date
"RTN","FBAAV5",32,0)
 S FBSUSP=$P(Y(0),"^",11),FBSUSP=$S(FBSUSP="":" ",$D(^FBAA(161.27,FBSUSP,0)):$P(^(0),"^",1),1:" ")
"RTN","FBAAV5",33,0)
 S FBINVN=$P(Y(0),"^",1)
"RTN","FBAAV5",34,0)
 S FBINVN=$E("000000000",$L(FBINVN)+1,9)_FBINVN
"RTN","FBAAV5",35,0)
 S FBDIN=$$AUSDT^FBAAV3($P(Y(0),"^",2)) ; invoice date rec'd
"RTN","FBAAV5",36,0)
 S FBAP=$$AUSAMT^FBAAV3($P(Y(0),"^",9),8)
"RTN","FBAAV5",37,0)
 S FBAC=$$AUSAMT^FBAAV3($P(Y(0),"^",8),8)
"RTN","FBAAV5",38,0)
 S FBPA=$$AUSAMT^FBAAV3($P(Y(0),"^",26),8)
"RTN","FBAAV5",39,0)
 S FBDRG=$P(Y(0),"^",24),FBDRG=$E(PAD,$L(FBDRG)+1,4)_FBDRG
"RTN","FBAAV5",40,0)
 S FBAUTHF=$S($P(Y(0),U,5)["FB583":"U",1:"A") ; auth/unauth flag
"RTN","FBAAV5",41,0)
 K FBDX,FBPRC F I=1:1:5 S (FBDX(I),FBPRC(I))="       "
"RTN","FBAAV5",42,0)
 I $D(^FBAAI(K,"DX")) S Y("DX")=^("DX") F M=1:1:5 Q:$P(Y("DX"),"^",M)=""  S FBDX(M)=$$SPACES^FBCSV1($$ICD9^FBCSV1(+$P(Y("DX"),"^",M),$P($G(Y(0)),"^",6)),7) I $L(FBDX(M))<7 S FBDX(M)=$E(PAD,$L(FBDX(M))+1,7)_FBDX(M)
"RTN","FBAAV5",43,0)
 I $D(^FBAAI(K,"PROC")) S Y("PROC")=^("PROC") F M=1:1:5 Q:$P(Y("PROC"),"^",M)=""  S FBPRC(M)=$$SPACES^FBCSV1($$ICD0^FBCSV1($P(Y("PROC"),"^",M),$P($G(Y(0)),"^",6)),7) I $L(FBPRC(M))<7 S FBPRC(M)=$E("       ",$L(FBPRC(M))+1,7)_FBPRC(M)
"RTN","FBAAV5",44,0)
 S DFN=$P(Y(0),"^",4)
"RTN","FBAAV5",45,0)
 ; Note: Prior to the following line Y(0) = the 0 node of file 162.5
"RTN","FBAAV5",46,0)
 ;       After the line Y(0) will equal the 0 node of file #2
"RTN","FBAAV5",47,0)
 S VAPA("P")="",Y(0)=$S($D(^DPT(DFN,0)):^(0),1:"")
"RTN","FBAAV5",48,0)
 D PAT^FBAAUTL2
"RTN","FBAAV5",49,0)
 ; obtain date of birth, must follow call to PAT^FBAAUTL2 to overwrite 
"RTN","FBAAV5",50,0)
 ; the value returned from it
"RTN","FBAAV5",51,0)
 S FBDOB=$$AUSDT^FBAAV3($P(Y(0),"^",3))
"RTN","FBAAV5",52,0)
 D ADD^VADPT
"RTN","FBAAV5",53,0)
 S FBPNAMX=$$HL7NAME^FBAAV4(DFN) ; patient name
"RTN","FBAAV5",54,0)
 S FBST=$S($P(VAPA(5),"^",1)="":"  ",$D(^DIC(5,$P(VAPA(5),"^",1),0)):$P(^(0),"^",2),1:"  ")
"RTN","FBAAV5",55,0)
 S:$L(FBST)'=2 FBST=$E(PAD,$L(FBST)+1,2)_FBST
"RTN","FBAAV5",56,0)
 S FBCTY=$S($P(VAPA(7),"^",1)="":"   ",FBST="  ":"   ",$D(^DIC(5,$P(VAPA(5),"^",1),1,$P(VAPA(7),"^",1),0)):$P(^(0),"^",3),1:"   ")
"RTN","FBAAV5",57,0)
 I $L(FBCTY)'=3 S FBCTY=$E("000",$L(FBCTY)+1,3)_FBCTY
"RTN","FBAAV5",58,0)
 S FBZIP=$S('+$G(VAPA(11)):VAPA(6),+VAPA(11):$P(VAPA(11),U),1:VAPA(6)),FBZIP=$TR(FBZIP,"-","")_$E("000000000",$L(FBZIP)+1,9)
"RTN","FBAAV5",59,0)
 S FBADMIT=$$AUSDT^FBAAV3($P($$B9ADMIT(FBIENS),".")) ; admission date
"RTN","FBAAV5",60,0)
 ; get and format discharge date and type
"RTN","FBAAV5",61,0)
 S FBX=$$B9DISCHG(FBIENS)
"RTN","FBAAV5",62,0)
 S FBDISDT=$$AUSDT^FBAAV3($P($P(FBX,U),".")) ; discharge date
"RTN","FBAAV5",63,0)
 S FBDISTY=$$RJ^XLFSTR($P(FBX,U,2),3,0) ; discharge type
"RTN","FBAAV5",64,0)
 K FBX
"RTN","FBAAV5",65,0)
 ; get volume indicator (covered days)
"RTN","FBAAV5",66,0)
 S FBCDAYS=$$RJ^XLFSTR($$GET1^DIQ(162.5,FBIENS,54),5,"0")
"RTN","FBAAV5",67,0)
 ; obtain and format the adjustment codes and amounts
"RTN","FBAAV5",68,0)
 ; get and format adjustment reason codes and amounts (if any)
"RTN","FBAAV5",69,0)
 D LOADADJ^FBCHFA(FBIENS,.FBADJ)
"RTN","FBAAV5",70,0)
 S FBX=$$ADJL^FBUTL2(.FBADJ)
"RTN","FBAAV5",71,0)
 S FBADJR=$$RJ^XLFSTR($P(FBX,U,1),5," ")
"RTN","FBAAV5",72,0)
 S FBADJA=$$AUSAMT^FBAAV3($P(FBX,U,3),9,1)
"RTN","FBAAV5",73,0)
 K FBADJ,FBX
"RTN","FBAAV5",74,0)
 ;
"RTN","FBAAV5",75,0)
 S FBSTR=9_FBAASN_FBSSN_FBPAYT_FBPNAMX_FBVID_"  "_"  "_FBAP_FBAAON_FBSUSP_FBPOV_FBPATT_FBFTD_FBTTD_FBDIN_FBINVN_FBVMID_FBST_FBCTY_FBZIP_FBPSA_$P(FBY,U,2)_$E(PAD,1,14)
"RTN","FBAAV5",76,0)
 F I=1:1:5 S FBSTR=FBSTR_FBDX(I)
"RTN","FBAAV5",77,0)
 S FBSTR=FBSTR_$$PADZ^FBAAV01(FBPICN,23)_$$AUSDT^FBAAV3(+FBY)_"~"
"RTN","FBAAV5",78,0)
 D STORE^FBAAV01
"RTN","FBAAV5",79,0)
 ;
"RTN","FBAAV5",80,0)
 ; build 2nd line
"RTN","FBAAV5",81,0)
 S FBSTR=""
"RTN","FBAAV5",82,0)
 F I=1:1:5 S FBSTR=FBSTR_FBPRC(I)
"RTN","FBAAV5",83,0)
 S FBSTR=FBSTR_"  "_FBAC_"  "_FBPA_FBDRG_" "_FBADMIT_FBDISDT_FBDOB_FBDISTY_FBCDAYS_FBAUTHF_FBADJR_"  "_FBADJA_$E(PAD,1,10)_"~$"
"RTN","FBAAV5",84,0)
 D STORE^FBAAV01
"RTN","FBAAV5",85,0)
 ;
"RTN","FBAAV5",86,0)
 Q
"RTN","FBAAV5",87,0)
 ;
"RTN","FBAAV5",88,0)
PSA(X,Y) ;call to set default Primary Service Area (PSA)
"RTN","FBAAV5",89,0)
 ;to send to Austin.
"RTN","FBAAV5",90,0)
 ;X = pointer to the institution file
"RTN","FBAAV5",91,0)
 ;Y = default if unable to determine station number in file 4
"RTN","FBAAV5",92,0)
 ;call returns the 3 digit station number only
"RTN","FBAAV5",93,0)
 ;if Y undef return '0'
"RTN","FBAAV5",94,0)
 I '$G(Y) S Y=0
"RTN","FBAAV5",95,0)
 Q $S('X:+Y,$E($P($G(^DIC(4,+X,99)),U),1,3)'?3N:+Y,1:$E($P($G(^(99)),U),1,3))
"RTN","FBAAV5",96,0)
 ;
"RTN","FBAAV5",97,0)
B9ADMIT(FBIENS) ; Determine Admission Date for a B9 payment
"RTN","FBAAV5",98,0)
 ; input
"RTN","FBAAV5",99,0)
 ;   FBIENS
"RTN","FBAAV5",100,0)
 ; returns admission date in internal FileMan format or null value
"RTN","FBAAV5",101,0)
 N FB7078,FBRET
"RTN","FBAAV5",102,0)
 S FBRET=""
"RTN","FBAAV5",103,0)
 ;
"RTN","FBAAV5",104,0)
 S FB7078=$$GET1^DIQ(162.5,FBIENS,4,"I") ; associated 7078/583
"RTN","FBAAV5",105,0)
 ;
"RTN","FBAAV5",106,0)
 ; if invoice points to a 7078 authorization then get date from the 7078
"RTN","FBAAV5",107,0)
 I $P(FB7078,";",2)="FB7078(" D
"RTN","FBAAV5",108,0)
 . N FBY
"RTN","FBAAV5",109,0)
 . S FBY=$G(^FB7078(+FB7078,0))
"RTN","FBAAV5",110,0)
 . ; if fee program is civil hospital then return 7078 date of admission
"RTN","FBAAV5",111,0)
 . I $P(FBY,U,11)=6 S FBRET=$P(FBY,U,15)
"RTN","FBAAV5",112,0)
 . ; if fee program is CNH then return 7078 authorized from date
"RTN","FBAAV5",113,0)
 . I $P(FBY,U,11)=7 S FBRET=$P(FBY,U,4)
"RTN","FBAAV5",114,0)
 ;
"RTN","FBAAV5",115,0)
 ; if invoice points to an unauthorized claim then use the treatment from
"RTN","FBAAV5",116,0)
 ;   date on the unauthorized claim
"RTN","FBAAV5",117,0)
 I $P(FB7078,";",2)="FB583(" D
"RTN","FBAAV5",118,0)
 . N FBY
"RTN","FBAAV5",119,0)
 . S FBY=$G(^FB583(+FB7078,0))
"RTN","FBAAV5",120,0)
 . S FBRET=$P(FBY,U,5)
"RTN","FBAAV5",121,0)
 ;
"RTN","FBAAV5",122,0)
 ; return the result
"RTN","FBAAV5",123,0)
 Q FBRET
"RTN","FBAAV5",124,0)
 ;
"RTN","FBAAV5",125,0)
B9DISCHG(FBIENS) ; Determine Discharge Date and Type for a B9 payment
"RTN","FBAAV5",126,0)
 ; input
"RTN","FBAAV5",127,0)
 ;   FBIENS - Invoice IEN (file 162.5) with trailing comma
"RTN","FBAAV5",128,0)
 ; returns discharge date in internal FileMan format or null value and
"RTN","FBAAV5",129,0)
 ; discharge type or null value
"RTN","FBAAV5",130,0)
 N FB7078,FBDISDT,FBDISTY
"RTN","FBAAV5",131,0)
 S (FBDISDT,FBDISTY)=""
"RTN","FBAAV5",132,0)
 ;
"RTN","FBAAV5",133,0)
 S FB7078=$$GET1^DIQ(162.5,FBIENS,4,"I") ; associated 7078/583
"RTN","FBAAV5",134,0)
 ;
"RTN","FBAAV5",135,0)
 ; if invoice points to an unauthorized claim then use the treatment to
"RTN","FBAAV5",136,0)
 ;   date on the unauthorized claim
"RTN","FBAAV5",137,0)
 I $P(FB7078,";",2)="FB583(" D
"RTN","FBAAV5",138,0)
 . N FBY
"RTN","FBAAV5",139,0)
 . S FBY=$G(^FB583(+FB7078,0))
"RTN","FBAAV5",140,0)
 . S FBDISDT=$P(FBY,U,6)
"RTN","FBAAV5",141,0)
 . S FBDISTY=$$GET1^DIQ(162.5,FBIENS,"6.5:1") ; discharge type
"RTN","FBAAV5",142,0)
 ;
"RTN","FBAAV5",143,0)
 ; if invoice points to a 7078 authorization then get date from the 7078
"RTN","FBAAV5",144,0)
 I $P(FB7078,";",2)="FB7078(" D
"RTN","FBAAV5",145,0)
 . N FBY
"RTN","FBAAV5",146,0)
 . S FBY=$G(^FB7078(+FB7078,0))
"RTN","FBAAV5",147,0)
 . ;
"RTN","FBAAV5",148,0)
 . ; if fee program is civil hospital then return 7078 date of discharge
"RTN","FBAAV5",149,0)
 . I $P(FBY,U,11)=6 D
"RTN","FBAAV5",150,0)
 . . S FBDISDT=$P(FBY,U,16) ; discharge date
"RTN","FBAAV5",151,0)
 . . S FBDISTY=$$GET1^DIQ(162.5,FBIENS,"6.5:1") ; discharge type
"RTN","FBAAV5",152,0)
 . ;
"RTN","FBAAV5",153,0)
 . ; if fee program is CNH then get date & type from CNH activity file
"RTN","FBAAV5",154,0)
 . I $P(FBY,U,11)=7 D
"RTN","FBAAV5",155,0)
 . . N DFN,FBADMIT,FBADMITR,FBACTA,FBAUTHP,FBDA,FBDTR
"RTN","FBAAV5",156,0)
 . . S DFN=$P(FBY,U,3) ; patient IEN
"RTN","FBAAV5",157,0)
 . . S FBADMIT=$P($P(FBY,U,4),".") ; CNH admission date
"RTN","FBAAV5",158,0)
 . . S FBAUTHP=+$O(^FBAAA("AG",FB7078,DFN,0)) ; authorization 'pointer'
"RTN","FBAAV5",159,0)
 . . ;
"RTN","FBAAV5",160,0)
 . . ; find the admission entry in CNH ACTIVITY file          
"RTN","FBAAV5",161,0)
 . . S FBACTA=0 ; init the admission activity ien
"RTN","FBAAV5",162,0)
 . . S FBADMITR=9999999-FBADMIT ; reverse admission date
"RTN","FBAAV5",163,0)
 . . S FBDTR=9999999-$$FMADD^XLFDT(FBADMIT,1) ; start loop
"RTN","FBAAV5",164,0)
 . . F  S FBDTR=$O(^FBAACNH("AF",DFN,FBDTR)) Q:'FBDTR!($P(FBDTR,".")>FBADMITR)  D  Q:FBACTA
"RTN","FBAAV5",165,0)
 . . . S FBDA=0 F  S FBDA=$O(^FBAACNH("AF",DFN,FBDTR,FBDA)) Q:'FBDA  D
"RTN","FBAAV5",166,0)
 . . . . S FBY=$G(^FBAACNH(FBDA,0))
"RTN","FBAAV5",167,0)
 . . . . I $P(FBY,U,3)="A",$P(FBY,U,10)=FBAUTHP S FBACTA=FBDA ; found it
"RTN","FBAAV5",168,0)
 . . Q:'FBACTA  ; could not find the admission activity
"RTN","FBAAV5",169,0)
 . . ;
"RTN","FBAAV5",170,0)
 . . ; get date from associated discharge (if any) in CNH ACTIVITY file
"RTN","FBAAV5",171,0)
 . . S FBDA=" "
"RTN","FBAAV5",172,0)
 . . F  S FBDA=$O(^FBAACNH("AC",FBACTA,FBDA),-1) Q:FBDA'>0  D  Q:FBDISDT
"RTN","FBAAV5",173,0)
 . . . S FBY=$G(^FBAACNH(FBDA,0))
"RTN","FBAAV5",174,0)
 . . . I $P(FBY,U,3)="D" D
"RTN","FBAAV5",175,0)
 . . . . S FBDISDT=$P($P(FBY,U),".")
"RTN","FBAAV5",176,0)
 . . . . S FBDISTY=$P(FBY,U,8)
"RTN","FBAAV5",177,0)
 . . . . I FBDISTY'="" S FBDISTY=FBDISTY+100
"RTN","FBAAV5",178,0)
 ;
"RTN","FBAAV5",179,0)
 ; return the result
"RTN","FBAAV5",180,0)
 Q FBDISDT_"^"_FBDISTY
"RTN","FBAAV5",181,0)
 ;
"RTN","FBAAV5",182,0)
 ;FBAAV5
"VER")
8.0^22.0
"BLD",5974,6)
^SEQ #81
**END**
**END**
