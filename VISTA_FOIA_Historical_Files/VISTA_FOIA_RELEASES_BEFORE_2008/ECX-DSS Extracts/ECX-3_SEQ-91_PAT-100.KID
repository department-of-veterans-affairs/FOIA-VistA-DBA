Released ECX*3*100 SEQ #91
Extracted from mail message
**KIDS**:ECX*3.0*100^

**INSTALL NAME**
ECX*3.0*100
"BLD",7072,0)
ECX*3.0*100^DSS EXTRACTS^0^3070103^y
"BLD",7072,1,0)
^^1^1^3061219^
"BLD",7072,1,1,0)
This patch provides a fix to the Prosthetic Extract and Nutrition Worksheets.
"BLD",7072,4,0)
^9.64PA^^
"BLD",7072,6.3)
2
"BLD",7072,"KRN",0)
^9.67PA^8989.52^19
"BLD",7072,"KRN",.4,0)
.4
"BLD",7072,"KRN",.401,0)
.401
"BLD",7072,"KRN",.402,0)
.402
"BLD",7072,"KRN",.403,0)
.403
"BLD",7072,"KRN",.5,0)
.5
"BLD",7072,"KRN",.84,0)
.84
"BLD",7072,"KRN",3.6,0)
3.6
"BLD",7072,"KRN",3.8,0)
3.8
"BLD",7072,"KRN",9.2,0)
9.2
"BLD",7072,"KRN",9.8,0)
9.8
"BLD",7072,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",7072,"KRN",9.8,"NM",1,0)
ECXPROCT^^0^B21321082
"BLD",7072,"KRN",9.8,"NM",2,0)
ECXPRO1^^0^B18902819
"BLD",7072,"KRN",9.8,"NM",3,0)
ECXNUTDE^^0^B4945860
"BLD",7072,"KRN",9.8,"NM","B","ECXNUTDE",3)

"BLD",7072,"KRN",9.8,"NM","B","ECXPRO1",2)

"BLD",7072,"KRN",9.8,"NM","B","ECXPROCT",1)

"BLD",7072,"KRN",19,0)
19
"BLD",7072,"KRN",19.1,0)
19.1
"BLD",7072,"KRN",101,0)
101
"BLD",7072,"KRN",409.61,0)
409.61
"BLD",7072,"KRN",771,0)
771
"BLD",7072,"KRN",870,0)
870
"BLD",7072,"KRN",8989.51,0)
8989.51
"BLD",7072,"KRN",8989.52,0)
8989.52
"BLD",7072,"KRN",8994,0)
8994
"BLD",7072,"KRN","B",.4,.4)

"BLD",7072,"KRN","B",.401,.401)

"BLD",7072,"KRN","B",.402,.402)

"BLD",7072,"KRN","B",.403,.403)

"BLD",7072,"KRN","B",.5,.5)

"BLD",7072,"KRN","B",.84,.84)

"BLD",7072,"KRN","B",3.6,3.6)

"BLD",7072,"KRN","B",3.8,3.8)

"BLD",7072,"KRN","B",9.2,9.2)

"BLD",7072,"KRN","B",9.8,9.8)

"BLD",7072,"KRN","B",19,19)

"BLD",7072,"KRN","B",19.1,19.1)

"BLD",7072,"KRN","B",101,101)

"BLD",7072,"KRN","B",409.61,409.61)

"BLD",7072,"KRN","B",771,771)

"BLD",7072,"KRN","B",870,870)

"BLD",7072,"KRN","B",8989.51,8989.51)

"BLD",7072,"KRN","B",8989.52,8989.52)

"BLD",7072,"KRN","B",8994,8994)

"BLD",7072,"QUES",0)
^9.62^^
"BLD",7072,"REQB",0)
^9.611^3^3
"BLD",7072,"REQB",1,0)
ECX*3.0*39^2
"BLD",7072,"REQB",2,0)
ECX*3.0*71^2
"BLD",7072,"REQB",3,0)
ECX*3.0*92^2
"BLD",7072,"REQB","B","ECX*3.0*39",1)

"BLD",7072,"REQB","B","ECX*3.0*71",2)

"BLD",7072,"REQB","B","ECX*3.0*92",3)

"MBREQ")
0
"PKG",535,-1)
1^1
"PKG",535,0)
DSS EXTRACTS^ECX
"PKG",535,20,0)
^9.402P^^
"PKG",535,22,0)
^9.49I^1^1
"PKG",535,22,1,0)
3.0^2971222^3000224^66481
"PKG",535,22,1,"PAH",1,0)
100^3070103
"PKG",535,22,1,"PAH",1,1,0)
^^1^1^3070103
"PKG",535,22,1,"PAH",1,1,1,0)
This patch provides a fix to the Prosthetic Extract and Nutrition Worksheets.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","ECXNUTDE")
0^3^B4945860^B4229451
"RTN","ECXNUTDE",1,0)
ECXNUTDE ;ALB/JRC - Nut Division Worksheet Edit ; 12/15/06 2:01pm
"RTN","ECXNUTDE",2,0)
 ;;3.0;DSS EXTRACTS;**92,100**;Dec 22, 1997;Build 2
"RTN","ECXNUTDE",3,0)
 ;
"RTN","ECXNUTDE",4,0)
EN ;entry point from menu option
"RTN","ECXNUTDE",5,0)
 ;Declare variables
"RTN","ECXNUTDE",6,0)
 N STOP,DIR,DIRUT,FL,DIC,Y,DIVISION,DSSDIV,DTOUT,DUOUT,FL,DLAYGO
"RTN","ECXNUTDE",7,0)
 S STOP=0
"RTN","ECXNUTDE",8,0)
 F  D  Q:STOP
"RTN","ECXNUTDE",9,0)
 .S DIR(0)="SO^PL:PRODUCTION LOCATION;DL:DELIVERY LOCATION"
"RTN","ECXNUTDE",10,0)
 .S DIR("A")="Select location to edit?"
"RTN","ECXNUTDE",11,0)
 .D ^DIR I $D(DIRUT) S STOP=1 Q
"RTN","ECXNUTDE",12,0)
 .S FL=$S(Y="PL":119.71,Y="DL":119.72,1:"")
"RTN","ECXNUTDE",13,0)
 .F  D  Q:STOP
"RTN","ECXNUTDE",14,0)
 ..;Select division to edit
"RTN","ECXNUTDE",15,0)
 ..S DIC="^ECX(728.46,",DIC(0)="AEQMZL",DLAYGO=728.45
"RTN","ECXNUTDE",16,0)
 ..S DIC("A")="Select "_$S(FL=119.71:"Production",1:"Delivery")_" Location to edit: "
"RTN","ECXNUTDE",17,0)
 ..S DIC("V")="I +Y(0)="_FL
"RTN","ECXNUTDE",18,0)
 ..D ^DIC
"RTN","ECXNUTDE",19,0)
 ..I ($D(DTOUT))!($D(DUOUT))!(Y<1) S STOP=1 Q
"RTN","ECXNUTDE",20,0)
 ..S DIVISION=$P(Y,U,2)
"RTN","ECXNUTDE",21,0)
 ..D SCREEN Q:STOP
"RTN","ECXNUTDE",22,0)
 ..D UPDATE Q:STOP
"RTN","ECXNUTDE",23,0)
 Q
"RTN","ECXNUTDE",24,0)
 ;
"RTN","ECXNUTDE",25,0)
SCREEN ;Screen Division Selection
"RTN","ECXNUTDE",26,0)
 N DIV,IEN,INST,CHOICES,CNT,DIR,DIRUT,DUOUT,SITE,ECXINST,DIVNAME
"RTN","ECXNUTDE",27,0)
 N DIVIEN,PARENT,NODE
"RTN","ECXNUTDE",28,0)
 S SITE=+$P($$SITE^VASITE(),U,3) D SIBLING^XUAF4("ECXINST",SITE)
"RTN","ECXNUTDE",29,0)
 S DIVIEN=0,(DIV,CHOICES,DIVNAME)=""
"RTN","ECXNUTDE",30,0)
 S PARENT=$O(ECXINST("P",0)) Q:'PARENT
"RTN","ECXNUTDE",31,0)
 F  S DIVIEN=$O(ECXINST("P",PARENT,"C",DIVIEN)) Q:'DIVIEN  D
"RTN","ECXNUTDE",32,0)
 .S NODE=ECXINST("P",PARENT,"C",DIVIEN)
"RTN","ECXNUTDE",33,0)
 .S DIVNAME=$P(NODE,U),DIV=$P(NODE,U,2)
"RTN","ECXNUTDE",34,0)
 .Q:DIV'[SITE
"RTN","ECXNUTDE",35,0)
 .;Prepare choices
"RTN","ECXNUTDE",36,0)
 .S CNT=$G(CNT)+1,DIV(CNT)=DIVIEN
"RTN","ECXNUTDE",37,0)
 .S CHOICES=$G(CHOICES)_CNT_":"_DIVNAME_" "_DIV_";"
"RTN","ECXNUTDE",38,0)
 S DIR(0)="S^"_CHOICES
"RTN","ECXNUTDE",39,0)
 S DIR("A")="Select DSS Assigned Division"
"RTN","ECXNUTDE",40,0)
 D ^DIR
"RTN","ECXNUTDE",41,0)
 I $D(DIRUT)!$D(DUOUT) S STOP=1 Q
"RTN","ECXNUTDE",42,0)
 S DSSDIV=DIV(Y)
"RTN","ECXNUTDE",43,0)
 Q
"RTN","ECXNUTDE",44,0)
 ;
"RTN","ECXNUTDE",45,0)
UPDATE ;Update file (#728.46) assigned product field
"RTN","ECXNUTDE",46,0)
 N ECXFDA,ECXERR
"RTN","ECXNUTDE",47,0)
 S ECXFDA(728.46,"?+1,",.01)=DIVISION
"RTN","ECXNUTDE",48,0)
 S ECXFDA(728.46,"?+1,",1)=DSSDIV
"RTN","ECXNUTDE",49,0)
 D UPDATE^DIE("","ECXFDA","","ECXERR")
"RTN","ECXNUTDE",50,0)
 I $D(ECXERR) D
"RTN","ECXNUTDE",51,0)
 .W !!!,"Problem encountered during record update "
"RTN","ECXNUTDE",52,0)
 .W !!,"Contact IRM"_"  Error: "_$G(ECXERR("DIERR",1,"TEXT",1))
"RTN","ECXNUTDE",53,0)
 Q
"RTN","ECXPRO1")
0^2^B18902819^B18441018
"RTN","ECXPRO1",1,0)
ECXPRO1 ;ALB/GTS - Prosthetics Extract for DSS (Continued) ; DEC 15, 2006
"RTN","ECXPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**9,11,13,15,21,24,33,37,39,100**;Dec 22, 1997;Build 2
"RTN","ECXPRO1",3,0)
 ;
"RTN","ECXPRO1",4,0)
NTEG(ECXDFN,ECXLNE,ECXPIEN,ECXN0,ECXNLB,ECINST,ECXFORM) ;** Check for required fields
"RTN","ECXPRO1",5,0)
 ;   Input
"RTN","ECXPRO1",6,0)
 ;    ECXDFN   - ien in file #2
"RTN","ECXPRO1",7,0)
 ;    ECXLNE   - line number variable (passed by reference)
"RTN","ECXPRO1",8,0)
 ;    ECXPIEN  - IEN for the Prosthetics record
"RTN","ECXPRO1",9,0)
 ;    ECXN0    - zero node of the Prosthetics record
"RTN","ECXPRO1",10,0)
 ;    ECXNLB   - LB node of the Prosthetics record
"RTN","ECXPRO1",11,0)
 ;    ECINST   - station number being extracted
"RTN","ECXPRO1",12,0)
 ;    ECXFORM  - Form Requested On
"RTN","ECXPRO1",13,0)
 ;   Output (to be KILLed by calling routine)
"RTN","ECXPRO1",14,0)
 ;    ^TMP("ECX-PRO EXC",$J) - Array for the exception message       
"RTN","ECXPRO1",15,0)
 ;    ECXLNE                 - The number of the next line in the msg
"RTN","ECXPRO1",16,0)
 ;    ECXSTAT2               - Patient Station Number
"RTN","ECXPRO1",17,0)
 ;    ECXDATE                - Delivery Date of Prosthesis
"RTN","ECXPRO1",18,0)
 ;    ECXTYPE                - Type of Transaction work performed
"RTN","ECXPRO1",19,0)
 ;    ECXSRCE                - Source of prosthesis
"RTN","ECXPRO1",20,0)
 ;    ECXHCPCS               - CPT/HCPCS code for prosthesis
"RTN","ECXPRO1",21,0)
 ;    ECXRQST                - Requesting Station
"RTN","ECXPRO1",22,0)
 ;    ECXRCST                - Receiving Station
"RTN","ECXPRO1",23,0)
 ;    ECXPHCPC               - PSAS HCPCS code; if 'unknown', then use CPT/HCPCS code 
"RTN","ECXPRO1",24,0)
 ;   Output (KILLed by NTEG)
"RTN","ECXPRO1",25,0)
 ;    ECXMISS                - 1 indicates missing information
"RTN","ECXPRO1",26,0)
 ;    ECXGOOD                - 0 indicates record should not be extracted
"RTN","ECXPRO1",27,0)
 ;
"RTN","ECXPRO1",28,0)
 N ECXGOOD,ECXMISS
"RTN","ECXPRO1",29,0)
 S (ECXRCST,ECXRQST)="",ECXGOOD=1,ECXSTAT2=$P(ECXN0,U,10)
"RTN","ECXPRO1",30,0)
 I ECXSTAT2]"" D
"RTN","ECXPRO1",31,0)
 .K ECXDIC
"RTN","ECXPRO1",32,0)
 .S DA=ECXSTAT2,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",33,0)
 .D EN^DIQ1 S ECXSTAT2=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",34,0)
 .S:(ECINST'=$E(ECXSTAT2,1,3)) ECXGOOD=0 ;*Screen for incorrect Station
"RTN","ECXPRO1",35,0)
 ;
"RTN","ECXPRO1",36,0)
 ;** Screen out records
"RTN","ECXPRO1",37,0)
 S:($P(ECXN0,U,17)'="") ECXGOOD=0 ;*SHIP/DEL is not NULL
"RTN","ECXPRO1",38,0)
 S:($P(ECXN0,U,26)'="") ECXGOOD=0 ;*PICKUP/DEL is not NULL
"RTN","ECXPRO1",39,0)
 S:(+($P($G(^RMPR(660,ECXPIEN,"AM")),U,2))=1) ECXGOOD=0 ;*NO ADMIN CT=1
"RTN","ECXPRO1",40,0)
 S:(($P(ECXN0,U,15))'="") ECXGOOD=0 ;*HISTORICAL DATA is not NULL
"RTN","ECXPRO1",41,0)
 ;
"RTN","ECXPRO1",42,0)
 S ECXDATE=$P(ECXN0,U,12),ECXTYPE=$P(ECXN0,U,4),ECXSRCE=$P(ECXN0,U,14)
"RTN","ECXPRO1",43,0)
 S ECXHCPCS=$P($G(^ICPT(+$P(ECXN0,U,22),0)),U,1),ECXCMOD=""
"RTN","ECXPRO1",44,0)
 S ECXHCPCS=$$CPT^ECXUTL3(ECXHCPCS,ECXCMOD)
"RTN","ECXPRO1",45,0)
 ;get psas hcpcs code from file #661.1
"RTN","ECXPRO1",46,0)
 S ECXPHCPC=$P($G(^RMPR(660,ECXPIEN,1)),U,4) D
"RTN","ECXPRO1",47,0)
 .;I +ECXPHCPC S ECXPHCPC=$P($G(^RMPR(661.1,ECXPHCPC,0)),U,1)
"RTN","ECXPRO1",48,0)
 .I +ECXPHCPC S ECXPHCPC=$E($P($G(^RMPR(661.1,ECXPHCPC,0)),U,1),1,5)
"RTN","ECXPRO1",49,0)
 .I ECXPHCPC="UNKNOWN" S ECXPHCPC=$E(ECXHCPCS,1,5)
"RTN","ECXPRO1",50,0)
 ;
"RTN","ECXPRO1",51,0)
 ;* Get Requesting Station Number
"RTN","ECXPRO1",52,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",53,0)
 .S ECXRQST=$P(ECXNLB,U,1)
"RTN","ECXPRO1",54,0)
 .I ECXRQST]"" D
"RTN","ECXPRO1",55,0)
 ..S DA=ECXRQST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",56,0)
 ..D EN^DIQ1 S ECXRQST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",57,0)
 S:(ECXFORM'["-3") ECXRQST=""
"RTN","ECXPRO1",58,0)
 ;
"RTN","ECXPRO1",59,0)
 ;* Screen out records
"RTN","ECXPRO1",60,0)
 S:(+$P(ECXFORM,U,2)=13) ECXGOOD=0 ;*FORM REQUESTED ON = 13
"RTN","ECXPRO1",61,0)
 ;
"RTN","ECXPRO1",62,0)
 ;* Get Receiving Station Number
"RTN","ECXPRO1",63,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",64,0)
 .S ECXRCST=$P(ECXNLB,U,4)
"RTN","ECXPRO1",65,0)
 .I ECXRCST]"" D
"RTN","ECXPRO1",66,0)
 ..S DA=ECXRCST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",67,0)
 ..D EN^DIQ1 S ECXRCST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",68,0)
 S:(ECXFORM'["-3") ECXRCST=""
"RTN","ECXPRO1",69,0)
 ;
"RTN","ECXPRO1",70,0)
 ;** Check for integrity and set up the problem variable if right DIV
"RTN","ECXPRO1",71,0)
 I ECXGOOD D CHK
"RTN","ECXPRO1",72,0)
 Q ECXGOOD
"RTN","ECXPRO1",73,0)
 ;
"RTN","ECXPRO1",74,0)
CHK ;*Check variables
"RTN","ECXPRO1",75,0)
 ; Input
"RTN","ECXPRO1",76,0)
 ;  Variables set in and Output from NTEG^ECXPRO1
"RTN","ECXPRO1",77,0)
 ; Output
"RTN","ECXPRO1",78,0)
 ;  ^TMP("ECX-PRO EXC",$J,   - Global of records with integrity problems
"RTN","ECXPRO1",79,0)
 ;
"RTN","ECXPRO1",80,0)
 S ECXMISS=""
"RTN","ECXPRO1",81,0)
 I ECXSTAT2']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",82,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",83,0)
 I ECXDFN=0 S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",84,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",85,0)
 ;I ECXSSN']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",86,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",87,0)
 ;I ECXNA="    " S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",88,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",89,0)
 I ECXDATE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",90,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",91,0)
 I ECXTYPE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",92,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",93,0)
 I ECXSRCE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",94,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",95,0)
 I ECXHCPCS']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",96,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",97,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",98,0)
 .I ECXRQST']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",99,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",100,0)
 I ECXFORM']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",101,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",102,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",103,0)
 .I ECXRCST']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",104,0)
 I ECXMISS'="^^^^^^^^^^" D
"RTN","ECXPRO1",105,0)
 .S ECXGOOD=0
"RTN","ECXPRO1",106,0)
 .D ECXMISLN^ECXPRO2(ECXMISS,.ECXLNE,ECXPIEN)
"RTN","ECXPRO1",107,0)
 Q
"RTN","ECXPRO1",108,0)
 ;
"RTN","ECXPRO1",109,0)
PROSINFO(ECXDA,ECXLB,ECX0,ECXFORM) ;*Get Prosthetics Information
"RTN","ECXPRO1",110,0)
 ;
"RTN","ECXPRO1",111,0)
 ;  Input
"RTN","ECXPRO1",112,0)
 ;    ECDA    - The IEN for the Prosthetics record
"RTN","ECXPRO1",113,0)
 ;    ECX0    - The zero node of the Prosthetics record
"RTN","ECXPRO1",114,0)
 ;    ECXLB   - The LB node of the Prosthetics record
"RTN","ECXPRO1",115,0)
 ;    ECXFORM - The Form Requested On (to determine Lab transactions)
"RTN","ECXPRO1",116,0)
 ;
"RTN","ECXPRO1",117,0)
 ;  Output (to be KILLed by calling routine)
"RTN","ECXPRO1",118,0)
 ;    ECXCTAMT   - The Cost of Transaction
"RTN","ECXPRO1",119,0)
 ;    ECXLLC     - The Lab Labor Cost
"RTN","ECXPRO1",120,0)
 ;    ECXLMC     - The Lab Material Cost
"RTN","ECXPRO1",121,0)
 ;    ECXGRPR    - The AMIS Grouper number
"RTN","ECXPRO1",122,0)
 ;    ECXBILST   - The Billing Status
"RTN","ECXPRO1",123,0)
 ;    ECXQTY     - The Quantity
"RTN","ECXPRO1",124,0)
 ;
"RTN","ECXPRO1",125,0)
 S (ECXLLC,ECXLMC,ECXCTAMT)="",ECXBILST=$P($G(^RMPR(660,ECXDA,"AM")),U,3)
"RTN","ECXPRO1",126,0)
 S ECXQTY=$P(ECX0,U,7)
"RTN","ECXPRO1",127,0)
 S:(+ECXQTY=0) ECXQTY=1
"RTN","ECXPRO1",128,0)
 ;
"RTN","ECXPRO1",129,0)
 ;- Set Quantity field to 8 chars (right-justified & padded w/zeros)
"RTN","ECXPRO1",130,0)
 S ECXQTY=$$RJ^XLFSTR(ECXQTY,8,0)
"RTN","ECXPRO1",131,0)
 S ECXGRPR=$P($G(^RMPR(660,ECXDA,"AMS")),U,1),ECXCTAMT=$P(ECX0,U,16)
"RTN","ECXPRO1",132,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",133,0)
 .S ECXCTAMT=$P(ECXLB,U,9),ECXLLC=$P(ECXLB,U,7),ECXLMC=$P(ECXLB,U,8)
"RTN","ECXPRO1",134,0)
 ;
"RTN","ECXPRO1",135,0)
 ;- If Stock Issue or Inventory Issue, Cost of Transaction=0
"RTN","ECXPRO1",136,0)
 I $P(ECXFORM,U,2)=11!($P(ECXFORM,U,2)=12) S ECXCTAMT=0
"RTN","ECXPRO1",137,0)
 S:ECXCTAMT="" ECXCTAMT=0 S:ECXCTAMT>999999 ECXCTAMT=999999
"RTN","ECXPRO1",138,0)
 S:ECXLLC="" ECXLLC=0 S:ECXLLC>999999 ECXLLC=999999
"RTN","ECXPRO1",139,0)
 S:ECXLMC="" ECXLMC=0 S:ECXLMC>999999 ECXLMC=999999
"RTN","ECXPRO1",140,0)
 ;
"RTN","ECXPRO1",141,0)
 ;- Round to next dollar amount
"RTN","ECXPRO1",142,0)
 I (ECXCTAMT#1)>.50 S ECXCTAMT=(ECXCTAMT+1)\1
"RTN","ECXPRO1",143,0)
 I (ECXLLC#1)>.50 S ECXLLC=(ECXLLC+1)\1
"RTN","ECXPRO1",144,0)
 I (ECXLMC#1)>.50 S ECXLMC=(ECXLMC+1)\1
"RTN","ECXPRO1",145,0)
 Q
"RTN","ECXPROCT")
0^1^B21321082^B21026328
"RTN","ECXPROCT",1,0)
ECXPROCT ;ALB/GTS - ProstheticS Cost by PSAS HCPC Report DSS ; 12/15/06 3:55pm
"RTN","ECXPROCT",2,0)
 ;;3.0;DSS EXTRACTS;**71,100**;Dec 22, 1997;Build 2
"RTN","ECXPROCT",3,0)
 ;
"RTN","ECXPROCT",4,0)
EN ;entry point from option
"RTN","ECXPROCT",5,0)
 ;Initialize varables
"RTN","ECXPROCT",6,0)
 N DIR,ECSD1,ECED,X,Y
"RTN","ECXPROCT",7,0)
 ;Prompt for start date
"RTN","ECXPROCT",8,0)
 S DIR(0)="D^::EX"
"RTN","ECXPROCT",9,0)
 S DIR("A")="Enter Report Start Date"
"RTN","ECXPROCT",10,0)
 D ^DIR
"RTN","ECXPROCT",11,0)
 I $D(DIRUT) Q
"RTN","ECXPROCT",12,0)
 S ECSD1=Y
"RTN","ECXPROCT",13,0)
 ;Prompt for end date
"RTN","ECXPROCT",14,0)
 K DIR,X,Y
"RTN","ECXPROCT",15,0)
 S DIR(0)="D^"_ECSD1_":"_DT_":EX"
"RTN","ECXPROCT",16,0)
 S DIR("A")="Enter Report Ending Date"
"RTN","ECXPROCT",17,0)
 D ^DIR
"RTN","ECXPROCT",18,0)
 I $D(DIRUT) Q
"RTN","ECXPROCT",19,0)
 S ECED=Y
"RTN","ECXPROCT",20,0)
 ;Queue Report
"RTN","ECXPROCT",21,0)
 W !!,"** REPORT REQUIRES 132 COLUMNS TO PRINT CORRECTLY **",!!
"RTN","ECXPROCT",22,0)
 N ZTDESC,ZTIO,ZTSAVE
"RTN","ECXPROCT",23,0)
 S ZTIO=""
"RTN","ECXPROCT",24,0)
 S ZTDESC="Prosthetic Cost by PSAS HCPC Report for DSS"
"RTN","ECXPROCT",25,0)
 F I="ECSD1","ECED","ECXPHCPC","ECXPHDESC","ECXHCPC","ECXQTY","ECXUOFI","ECXCOST","ECXTCOST" D
"RTN","ECXPROCT",26,0)
 .S ZTSAVE(I)=""
"RTN","ECXPROCT",27,0)
 D EN^XUTMDEVQ("EN1^ECXPROCT",ZTDESC,.ZTSAVE)
"RTN","ECXPROCT",28,0)
 Q
"RTN","ECXPROCT",29,0)
 ;
"RTN","ECXPROCT",30,0)
EN1 ;Tasked entry point
"RTN","ECXPROCT",31,0)
 ;Input : ECSD1  -  FM format report start date
"RTN","ECXPROCT",32,0)
 ;        ECED   -  FM format report end date
"RTN","ECXPROCT",33,0)
 ;
"RTN","ECXPROCT",34,0)
 ;Output : None
"RTN","ECXPROCT",35,0)
 ;
"RTN","ECXPROCT",36,0)
 ;Declare variables
"RTN","ECXPROCT",37,0)
 N ECXPHCPC,ECXHCDES,ECXHCPC,ECXQTY,ECXUOFI,ECXCOST,ECXTCOST,PAGENUM
"RTN","ECXPROCT",38,0)
 N ECXLNE,ECXCT,ECXDACT,ECX0,ECX1,ECXED1,ECINSTSV,ECXLNSTR,ECXP
"RTN","ECXPROCT",39,0)
 N DIC,DR,DA,DIQ
"RTN","ECXPROCT",40,0)
 S ECXED1=ECED+.9999,ECXCT=ECSD1,(CNT,QFLG,PAGENUM,ECXTCOST,ECXQTY,STOP)=0
"RTN","ECXPROCT",41,0)
 D HEADER I STOP D EXIT Q
"RTN","ECXPROCT",42,0)
 D GETDATA
"RTN","ECXPROCT",43,0)
 I '$D(^TMP("ECXDSS",$J)) D  Q
"RTN","ECXPROCT",44,0)
 .W !
"RTN","ECXPROCT",45,0)
 .W !,"***********************************************"
"RTN","ECXPROCT",46,0)
 .W !,"*  NOTHING TO REPORT FOR SELECTED TIME FRAME  *"
"RTN","ECXPROCT",47,0)
 .W !,"***********************************************"
"RTN","ECXPROCT",48,0)
 .D WAIT
"RTN","ECXPROCT",49,0)
 D DETAIL I STOP D EXIT Q
"RTN","ECXPROCT",50,0)
 D TOTAL
"RTN","ECXPROCT",51,0)
 K ^TMP("ECXDSS",$J)
"RTN","ECXPROCT",52,0)
 Q
"RTN","ECXPROCT",53,0)
 ;
"RTN","ECXPROCT",54,0)
GETDATA ;Get data
"RTN","ECXPROCT",55,0)
 F  S ECXCT=$O(^RMPR(660,"CT",ECXCT)),CNT=CNT+1 Q:(ECXCT>ECXED1)!('ECXCT)!(QFLG=1)  D
"RTN","ECXPROCT",56,0)
 .S ECXDACT=0
"RTN","ECXPROCT",57,0)
 .F  S ECXDACT=$O(^RMPR(660,"CT",ECXCT,ECXDACT)) Q:('ECXDACT)!(QFLG=1)  D
"RTN","ECXPROCT",58,0)
 ..;Get data nodes and icrement conunter
"RTN","ECXPROCT",59,0)
 ..S CNT=CNT+1
"RTN","ECXPROCT",60,0)
 ..S ECX0=$G(^RMPR(660,ECXDACT,0)),ECX1=$G(^(1))
"RTN","ECXPROCT",61,0)
 ..Q:'$D(^RMPR(660,ECXDACT,0))
"RTN","ECXPROCT",62,0)
 ..S ECXPHCPC=$P(ECX1,U,4),ECHCDES=$P(ECX1,U,2),ECXHCPC=$P(ECX0,U,22)
"RTN","ECXPROCT",63,0)
 ..S ECXQTY=$P(ECX0,U,7),ECXUOFI=$P(ECX0,U,8),ECXCOST=$P(ECX0,U,16)
"RTN","ECXPROCT",64,0)
 ..;Resolve external values for PSAS HCPC
"RTN","ECXPROCT",65,0)
 ..K DIC S DIC="^RMPR(661.1,",DIC(0)="NZ",X=ECXPHCPC D ^DIC
"RTN","ECXPROCT",66,0)
 ..;S ECXPHCPC=$P($G(Y(0)),U,1)
"RTN","ECXPROCT",67,0)
 ..S ECXPHCPC=$E($P($G(Y(0)),U,1),1,5)
"RTN","ECXPROCT",68,0)
 ..;Resolve external values for HCPC
"RTN","ECXPROCT",69,0)
 ..K DIC S DIC="^ICPT(",DIC(0)="NZ",X=ECXHCPC D ^DIC
"RTN","ECXPROCT",70,0)
 ..S ECXHCPC=$P($G(Y(0)),U,1)
"RTN","ECXPROCT",71,0)
 ..;Resolve external value for unit of issue
"RTN","ECXPROCT",72,0)
 ..K DIC S DIC="^PRCD(420.5,",DIC(0)="NZ",X=ECXUOFI D ^DIC
"RTN","ECXPROCT",73,0)
 ..S ECXUOFI=$P($G(Y(0)),U,2)
"RTN","ECXPROCT",74,0)
 ..S ECXTCOST=ECXCOST+ECXTCOST
"RTN","ECXPROCT",75,0)
 ..S ECXDIV=$$GET1^DIQ(660,ECXDACT,8,"I")
"RTN","ECXPROCT",76,0)
 ..S ECXDFN=$G(ECXP(660,ECXDACT,.02,"I"))
"RTN","ECXPROCT",77,0)
 ..S ECXFORM=$G(ECXP(660,ECXDACT,11,"E"))_U_$G(ECXP(660,ECXDACT,11,"I"))
"RTN","ECXPROCT",78,0)
 ..;Save for later
"RTN","ECXPROCT",79,0)
 ..S ^TMP("ECXDSS",$J,CNT)=ECXPHCPC_U_ECHCDES_U_ECXHCPC_U_ECXQTY_U_ECXUOFI_U_ECXCOST
"RTN","ECXPROCT",80,0)
 ..Q
"RTN","ECXPROCT",81,0)
 .Q
"RTN","ECXPROCT",82,0)
 Q
"RTN","ECXPROCT",83,0)
HEADER ;print header
"RTN","ECXPROCT",84,0)
 S PAGENUM=PAGENUM+1
"RTN","ECXPROCT",85,0)
 S $P(LN,"-",132)=""
"RTN","ECXPROCT",86,0)
 W @IOF
"RTN","ECXPROCT",87,0)
 W !,"Cost by PSAS HCPC REPORT for "_$P($$SITE^VASITE,U,2)_" station "_$P($$SITE^VASITE,U,3),?120,"Page: ",PAGENUM
"RTN","ECXPROCT",88,0)
 W !!,"Report for ",$$FMTE^XLFDT(ECSD1)," thru ",$$FMTE^XLFDT(ECED)
"RTN","ECXPROCT",89,0)
 W !,?1,"PSAS HCPC",?15,"DESCRIPTION",?89,"HCPC",?98,"QTY",?104,"Unit of Issue",?126,"Cost"
"RTN","ECXPROCT",90,0)
 W !?1,LN
"RTN","ECXPROCT",91,0)
 Q
"RTN","ECXPROCT",92,0)
 ;
"RTN","ECXPROCT",93,0)
DETAIL ;Print detailed line
"RTN","ECXPROCT",94,0)
 ;Input  :  ^TMP("ECXDSS",$J) full global reference
"RTN","ECXPROCT",95,0)
 ;          ECXPHCPC  -   PSAS HCPCS
"RTN","ECXPROCT",96,0)
 ;          ECXPHDESC -   PSAS HCPC Description
"RTN","ECXPROCT",97,0)
 ;          ECXHCPC   -   HCPCS
"RTN","ECXPROCT",98,0)
 ;          ECXQTY    -   Quantity
"RTN","ECXPROCT",99,0)
 ;          ECXUOFI   -   Unit of issue
"RTN","ECXPROCT",100,0)
 ;          ECXCOST   -   Total cost
"RTN","ECXPROCT",101,0)
 ;Output  : None
"RTN","ECXPROCT",102,0)
 S RECORD=0 F  S RECORD=$O(^TMP("ECXDSS",$J,RECORD)) Q:'RECORD!(STOP)  D
"RTN","ECXPROCT",103,0)
 .S NODE=^TMP("ECXDSS",$J,RECORD)
"RTN","ECXPROCT",104,0)
 .W !?1,$$RJ^XLFSTR($P(NODE,U,1),6),?15,$P(NODE,U,2),?89,$$RJ^XLFSTR($P(NODE,U,3),U,6),?99,$$RJ^XLFSTR($P(NODE,U,4),U,6),?107,$P(NODE,U,5)
"RTN","ECXPROCT",105,0)
 .W ?122,"$"_$$RJ^XLFSTR($P($P(NODE,U,6),".",1),6)_"."_$$LJ^XLFSTR($P($P(NODE,U,6),".",2),2,0)
"RTN","ECXPROCT",106,0)
 .I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER
"RTN","ECXPROCT",107,0)
 .Q
"RTN","ECXPROCT",108,0)
 Q
"RTN","ECXPROCT",109,0)
 ;
"RTN","ECXPROCT",110,0)
TOTAL ;Report totals
"RTN","ECXPROCT",111,0)
 N DASH
"RTN","ECXPROCT",112,0)
 S $P(DASH,"=",15)=""
"RTN","ECXPROCT",113,0)
 W !!,?118,DASH
"RTN","ECXPROCT",114,0)
 W !?90,"Grand Total: ",?118,"$ "_$$RJ^XLFSTR($FNUMBER(ECXTCOST,",",2),11)
"RTN","ECXPROCT",115,0)
 Q
"RTN","ECXPROCT",116,0)
 ;
"RTN","ECXPROCT",117,0)
WAIT ;End of page logic
"RTN","ECXPROCT",118,0)
 ;Input   ; None
"RTN","ECXPROCT",119,0)
 ;Output  ; STOP - Flag inidcating if printing should continue
"RTN","ECXPROCT",120,0)
 ;                 1 = Stop     0 = Continue
"RTN","ECXPROCT",121,0)
 ;
"RTN","ECXPROCT",122,0)
 S STOP=0
"RTN","ECXPROCT",123,0)
 ;CRT - Prompt for continue
"RTN","ECXPROCT",124,0)
 I $E(IOST,1,2)="C-"&(IOSL'>24) D  Q
"RTN","ECXPROCT",125,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","ECXPROCT",126,0)
 .N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ECXPROCT",127,0)
 .S DIR(0)="E"
"RTN","ECXPROCT",128,0)
 .D ^DIR
"RTN","ECXPROCT",129,0)
 .S STOP=$S(Y'=1:1,1:0)
"RTN","ECXPROCT",130,0)
 ;Background task - check taskman
"RTN","ECXPROCT",131,0)
 S STOP=$$S^%ZTLOAD()
"RTN","ECXPROCT",132,0)
 I STOP D
"RTN","ECXPROCT",133,0)
 .W !,"*********************************************"
"RTN","ECXPROCT",134,0)
 .W !,"*  PRINTING OF REPORT STOPPED AS REQUESTED  *"
"RTN","ECXPROCT",135,0)
 .W !,"*********************************************"
"RTN","ECXPROCT",136,0)
 Q
"RTN","ECXPROCT",137,0)
EXIT ;Kill temp global
"RTN","ECXPROCT",138,0)
 K ^TMP("ECXDSS",$J)
"RTN","ECXPROCT",139,0)
 Q
"VER")
8.0^22.0
"BLD",7072,6)
^91
**END**
**END**
