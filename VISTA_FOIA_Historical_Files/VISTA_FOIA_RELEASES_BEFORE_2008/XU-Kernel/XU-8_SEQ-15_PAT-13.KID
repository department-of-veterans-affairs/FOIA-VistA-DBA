Released XU*8*13 SEQ #15
Extracted from mail message
**KIDS**:XU*8.0*13^

**INSTALL NAME**
XU*8.0*13
"BLD",12,0)
XU*8.0*13^KERNEL^0^2960206^y
"BLD",12,1,0)
^^65^65^2960206^
"BLD",12,1,1,0)
 
"BLD",12,1,2,0)
This patch includes a fix for a problem with multiple sign-ons when the
"BLD",12,1,3,0)
user must change their verify code or the user encounters an error that
"BLD",12,1,4,0)
kicks them off the system. They are left marked as signed on and IRM must
"BLD",12,1,5,0)
clear them. Also included is the fix to code that was changing the old
"BLD",12,1,6,0)
location for multiple sign-on when dropping into programmer mode.
"BLD",12,1,7,0)
NOIS: DAY-1095-41499, DDC-1095-53156
"BLD",12,1,8,0)
 
"BLD",12,1,9,0)
Fixed the UNDEF error that happened when the Switch UCI option was
"BLD",12,1,10,0)
used, This option is on the toolbox menu. It calls routine XUS3A.
"BLD",12,1,11,0)
Under DSM there were changes to %XUCI and ZU to HALT the process
"BLD",12,1,12,0)
after a UCI switch.
"BLD",12,1,13,0)
 
"BLD",12,1,14,0)
Included is a new entry for the FACILITY TYPE file #4.1, the entry is 
"BLD",12,1,15,0)
DDC the DENVER DISTRIBUTION CENTER.
"BLD",12,1,16,0)
 
"BLD",12,1,17,0)
The ZUVXD routine also has a change to prevent dataset hang-up errors from
"BLD",12,1,18,0)
ZSLOT devices from filling the error trap.
"BLD",12,1,19,0)
 
"BLD",12,1,20,0)
routine        new checksum
"BLD",12,1,21,0)
XUCIVXD           2941248
"BLD",12,1,22,0)
XUS3A             2755868
"BLD",12,1,23,0)
XUSCLEAN          6326709
"BLD",12,1,24,0)
ZOSVDTM           5567795
"BLD",12,1,25,0)
ZOSVMSM          11537923
"BLD",12,1,26,0)
ZOSVMSQ           4730703
"BLD",12,1,27,0)
ZOSVVXD           7409621
"BLD",12,1,28,0)
ZUDTM             2979064
"BLD",12,1,29,0)
ZUMSM             1837292
"BLD",12,1,30,0)
ZUMSQ             1238607
"BLD",12,1,31,0)
ZUVXD             4733253
"BLD",12,1,32,0)
 
"BLD",12,1,33,0)
========================================================================= 
"BLD",12,1,34,0)
Installation:
"BLD",12,1,35,0)
 
"BLD",12,1,36,0)
 1. Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"BLD",12,1,37,0)
    option will load the KIDS package in this message onto your system.
"BLD",12,1,38,0)
 2. Answer NO to the question:
"BLD",12,1,39,0)
    'Shall I preserve what is on disk in a separate back-up message ?'
"BLD",12,1,40,0)
 3. From the 'Installation Menu' of the KIDS menu, run the option
"BLD",12,1,41,0)
    'Verify Checksums in Transport Global' and verify that all routines
"BLD",12,1,42,0)
    have the correct checksum.
"BLD",12,1,43,0)
 4. Inhibit users from login into system. 
"BLD",12,1,44,0)
 5. From the 'Installation Menu' of the KIDS menu, run the option 'Install
"BLD",12,1,45,0)
    Package(s)' Select the package 'XU*8.0*13' and proceed with install.
"BLD",12,1,46,0)
 6. After installing this patch, you need to move 1 or 2 of the following
"BLD",12,1,47,0)
    routines from your productions account to the manager account:
"BLD",12,1,48,0)
    For Datatree     ZOSVDTM 
"BLD",12,1,49,0)
    For Micronetics  ZOSVMSM
"BLD",12,1,50,0)
    For Intersystems ZOSVMSQ
"BLD",12,1,51,0)
    For DSM          ZOSVVXD and XUCIVXD
"BLD",12,1,52,0)
       and rename to %ZOSV be sure to move the routine to any other CPU's.
"BLD",12,1,53,0)
       Example: ZL ZOSVVXD ZS %ZOSV
"BLD",12,1,54,0)
       For DSM also ZL XUCIVXD ZS %XUCI
"BLD",12,1,55,0)
 7. After installing this patch, you need to rename 1 of the following
"BLD",12,1,56,0)
    routines in the production account: 
"BLD",12,1,57,0)
    For Datatree     ZUDTM
"BLD",12,1,58,0)
    For Micronetics  ZUMSM
"BLD",12,1,59,0)
    For Intersystems ZUMSQ
"BLD",12,1,60,0)
    For DSM          ZUVXD
"BLD",12,1,61,0)
        renamed to ZU.  
"BLD",12,1,62,0)
 8.  On MSM move the routines to the other servers.  
"BLD",12,1,63,0)
     On DSM, rebuild your map set.  
"BLD",12,1,64,0)
 9. Enable user's login.
"BLD",12,1,65,0)
========================================================================= 
"BLD",12,4,0)
^9.64PA^4.1^1
"BLD",12,4,4.1,0)
4.1
"BLD",12,4,4.1,222)
n^n^f^^n^^y^m^n
"BLD",12,4,4.1,224)
I $G(^DIC(4.1,+Y,0))["DDC^"
"BLD",12,4,"B",4.1,4.1)

"BLD",12,"KRN",0)
^9.67PA^8994^15
"BLD",12,"KRN",.4,0)
.4
"BLD",12,"KRN",.401,0)
.401
"BLD",12,"KRN",.402,0)
.402
"BLD",12,"KRN",.403,0)
.403
"BLD",12,"KRN",.5,0)
.5
"BLD",12,"KRN",.84,0)
.84
"BLD",12,"KRN",3.6,0)
3.6
"BLD",12,"KRN",9.2,0)
9.2
"BLD",12,"KRN",9.8,0)
9.8
"BLD",12,"KRN",9.8,"NM",0)
^9.68A^14^11
"BLD",12,"KRN",9.8,"NM",3,0)
XUS3A^^0^B4869960
"BLD",12,"KRN",9.8,"NM",4,0)
XUSCLEAN^^0^B9899345
"BLD",12,"KRN",9.8,"NM",5,0)
ZOSVVXD^^0^B16275771
"BLD",12,"KRN",9.8,"NM",7,0)
ZOSVMSM^^0^B33995631
"BLD",12,"KRN",9.8,"NM",8,0)
ZOSVDTM^^0^B21222067
"BLD",12,"KRN",9.8,"NM",9,0)
ZUVXD^^0^B9736967
"BLD",12,"KRN",9.8,"NM",10,0)
ZUMSM^^0^B3068731
"BLD",12,"KRN",9.8,"NM",11,0)
ZUDTM^^0^B4340681
"BLD",12,"KRN",9.8,"NM",12,0)
ZUMSQ^^0^B1776863
"BLD",12,"KRN",9.8,"NM",13,0)
ZOSVMSQ^^0^B11993153
"BLD",12,"KRN",9.8,"NM",14,0)
XUCIVXD^^0^B4458808
"BLD",12,"KRN",9.8,"NM","B","XUCIVXD",14)

"BLD",12,"KRN",9.8,"NM","B","XUS3A",3)

"BLD",12,"KRN",9.8,"NM","B","XUSCLEAN",4)

"BLD",12,"KRN",9.8,"NM","B","ZOSVDTM",8)

"BLD",12,"KRN",9.8,"NM","B","ZOSVMSM",7)

"BLD",12,"KRN",9.8,"NM","B","ZOSVMSQ",13)

"BLD",12,"KRN",9.8,"NM","B","ZOSVVXD",5)

"BLD",12,"KRN",9.8,"NM","B","ZUDTM",11)

"BLD",12,"KRN",9.8,"NM","B","ZUMSM",10)

"BLD",12,"KRN",9.8,"NM","B","ZUMSQ",12)

"BLD",12,"KRN",9.8,"NM","B","ZUVXD",9)

"BLD",12,"KRN",19,0)
19
"BLD",12,"KRN",19.1,0)
19.1
"BLD",12,"KRN",101,0)
101
"BLD",12,"KRN",409.61,0)
409.61
"BLD",12,"KRN",8994,0)
8994
"BLD",12,"KRN",8995,0)
8995
"BLD",12,"KRN","B",.4,.4)

"BLD",12,"KRN","B",.401,.401)

"BLD",12,"KRN","B",.402,.402)

"BLD",12,"KRN","B",.403,.403)

"BLD",12,"KRN","B",.5,.5)

"BLD",12,"KRN","B",.84,.84)

"BLD",12,"KRN","B",3.6,3.6)

"BLD",12,"KRN","B",9.2,9.2)

"BLD",12,"KRN","B",9.8,9.8)

"BLD",12,"KRN","B",19,19)

"BLD",12,"KRN","B",19.1,19.1)

"BLD",12,"KRN","B",101,101)

"BLD",12,"KRN","B",409.61,409.61)

"BLD",12,"KRN","B",8994,8994)

"BLD",12,"KRN","B",8995,8995)

"BLD",12,"QUES",0)
^9.62^^
"DATA",4.1,52,0)
DDC^DENVER DISTRIBUTION CENTER
"FIA",4.1)
FACILITY TYPE
"FIA",4.1,0)
^DIC(4.1,
"FIA",4.1,0,0)
4.1I
"FIA",4.1,0,1)
n^n^f^^n^^y^m^n
"FIA",4.1,0,10)

"FIA",4.1,0,11)
I $G(^DIC(4.1,+Y,0))["DDC^"
"FIA",4.1,0,"RLRO")

"FIA",4.1,0,"VR")
8.0^XU
"FIA",4.1,4.1)
0
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^XUDOCV7 NEW FEATURES
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^2950703^2951018^4
"PKG",3,22,1,"PAH",1,0)
13^2960206^2
"PKG",3,22,1,"PAH",1,1,0)
^^65^65^2960206
"PKG",3,22,1,"PAH",1,1,1,0)
 
"PKG",3,22,1,"PAH",1,1,2,0)
This patch includes a fix for a problem with multiple sign-ons when the
"PKG",3,22,1,"PAH",1,1,3,0)
user must change their verify code or the user encounters an error that
"PKG",3,22,1,"PAH",1,1,4,0)
kicks them off the system. They are left marked as signed on and IRM must
"PKG",3,22,1,"PAH",1,1,5,0)
clear them. Also included is the fix to code that was changing the old
"PKG",3,22,1,"PAH",1,1,6,0)
location for multiple sign-on when dropping into programmer mode.
"PKG",3,22,1,"PAH",1,1,7,0)
NOIS: DAY-1095-41499, DDC-1095-53156
"PKG",3,22,1,"PAH",1,1,8,0)
 
"PKG",3,22,1,"PAH",1,1,9,0)
Fixed the UNDEF error that happened when the Switch UCI option was
"PKG",3,22,1,"PAH",1,1,10,0)
used, This option is on the toolbox menu. It calls routine XUS3A.
"PKG",3,22,1,"PAH",1,1,11,0)
Under DSM there were changes to %XUCI and ZU to HALT the process
"PKG",3,22,1,"PAH",1,1,12,0)
after a UCI switch.
"PKG",3,22,1,"PAH",1,1,13,0)
 
"PKG",3,22,1,"PAH",1,1,14,0)
Included is a new entry for the FACILITY TYPE file #4.1, the entry is 
"PKG",3,22,1,"PAH",1,1,15,0)
DDC the DENVER DISTRIBUTION CENTER.
"PKG",3,22,1,"PAH",1,1,16,0)
 
"PKG",3,22,1,"PAH",1,1,17,0)
The ZUVXD routine also has a change to prevent dataset hang-up errors from
"PKG",3,22,1,"PAH",1,1,18,0)
ZSLOT devices from filling the error trap.
"PKG",3,22,1,"PAH",1,1,19,0)
 
"PKG",3,22,1,"PAH",1,1,20,0)
routine        new checksum
"PKG",3,22,1,"PAH",1,1,21,0)
XUCIVXD           2941248
"PKG",3,22,1,"PAH",1,1,22,0)
XUS3A             2755868
"PKG",3,22,1,"PAH",1,1,23,0)
XUSCLEAN          6326709
"PKG",3,22,1,"PAH",1,1,24,0)
ZOSVDTM           5567795
"PKG",3,22,1,"PAH",1,1,25,0)
ZOSVMSM          11537923
"PKG",3,22,1,"PAH",1,1,26,0)
ZOSVMSQ           4730703
"PKG",3,22,1,"PAH",1,1,27,0)
ZOSVVXD           7409621
"PKG",3,22,1,"PAH",1,1,28,0)
ZUDTM             2979064
"PKG",3,22,1,"PAH",1,1,29,0)
ZUMSM             1837292
"PKG",3,22,1,"PAH",1,1,30,0)
ZUMSQ             1238607
"PKG",3,22,1,"PAH",1,1,31,0)
ZUVXD             4733253
"PKG",3,22,1,"PAH",1,1,32,0)
 
"PKG",3,22,1,"PAH",1,1,33,0)
========================================================================= 
"PKG",3,22,1,"PAH",1,1,34,0)
Installation:
"PKG",3,22,1,"PAH",1,1,35,0)
 
"PKG",3,22,1,"PAH",1,1,36,0)
 1. Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",3,22,1,"PAH",1,1,37,0)
    option will load the KIDS package in this message onto your system.
"PKG",3,22,1,"PAH",1,1,38,0)
 2. Answer NO to the question:
"PKG",3,22,1,"PAH",1,1,39,0)
    'Shall I preserve what is on disk in a separate back-up message ?'
"PKG",3,22,1,"PAH",1,1,40,0)
 3. From the 'Installation Menu' of the KIDS menu, run the option
"PKG",3,22,1,"PAH",1,1,41,0)
    'Verify Checksums in Transport Global' and verify that all routines
"PKG",3,22,1,"PAH",1,1,42,0)
    have the correct checksum.
"PKG",3,22,1,"PAH",1,1,43,0)
 4. Inhibit users from login into system. 
"PKG",3,22,1,"PAH",1,1,44,0)
 5. From the 'Installation Menu' of the KIDS menu, run the option 'Install
"PKG",3,22,1,"PAH",1,1,45,0)
    Package(s)' Select the package 'XU*8.0*13' and proceed with install.
"PKG",3,22,1,"PAH",1,1,46,0)
 6. After installing this patch, you need to move 1 or 2 of the following
"PKG",3,22,1,"PAH",1,1,47,0)
    routines from your productions account to the manager account:
"PKG",3,22,1,"PAH",1,1,48,0)
    For Datatree     ZOSVDTM 
"PKG",3,22,1,"PAH",1,1,49,0)
    For Micronetics  ZOSVMSM
"PKG",3,22,1,"PAH",1,1,50,0)
    For Intersystems ZOSVMSQ
"PKG",3,22,1,"PAH",1,1,51,0)
    For DSM          ZOSVVXD and XUCIVXD
"PKG",3,22,1,"PAH",1,1,52,0)
       and rename to %ZOSV be sure to move the routine to any other CPU's.
"PKG",3,22,1,"PAH",1,1,53,0)
       Example: ZL ZOSVVXD ZS %ZOSV
"PKG",3,22,1,"PAH",1,1,54,0)
       For DSM also ZL XUCIVXD ZS %XUCI
"PKG",3,22,1,"PAH",1,1,55,0)
 7. After installing this patch, you need to rename 1 of the following
"PKG",3,22,1,"PAH",1,1,56,0)
    routines in the production account: 
"PKG",3,22,1,"PAH",1,1,57,0)
    For Datatree     ZUDTM
"PKG",3,22,1,"PAH",1,1,58,0)
    For Micronetics  ZUMSM
"PKG",3,22,1,"PAH",1,1,59,0)
    For Intersystems ZUMSQ
"PKG",3,22,1,"PAH",1,1,60,0)
    For DSM          ZUVXD
"PKG",3,22,1,"PAH",1,1,61,0)
        renamed to ZU.  
"PKG",3,22,1,"PAH",1,1,62,0)
 8.  On MSM move the routines to the other servers.  
"PKG",3,22,1,"PAH",1,1,63,0)
     On DSM, rebuild your map set.  
"PKG",3,22,1,"PAH",1,1,64,0)
 9. Enable user's login.
"PKG",3,22,1,"PAH",1,1,65,0)
========================================================================= 
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options and Menu Options
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
11
"RTN","XUCIVXD")
0^14^B4458808
"RTN","XUCIVXD",1,0)
%XUCI ;SFISC/STAFF - SWAP UCIs VAX/DSM ;1/23/96  09:28
"RTN","XUCIVXD",2,0)
 ;;8.0;KERNEL;**13**;Jul 10, 1995
"RTN","XUCIVXD",3,0)
 ;FOR VAX-DSM
"RTN","XUCIVXD",4,0)
1 R !,"What UCI: ",%UCI:$S($D(DTIME):DTIME,1:10),"  " Q:%UCI=""!(%UCI["^")  G 2
"RTN","XUCIVXD",5,0)
 ;
"RTN","XUCIVXD",6,0)
2 ;
"RTN","XUCIVXD",7,0)
 I %UCI="PROD"!(%UCI="MGR") S %UCI=^%ZOSF(%UCI)
"RTN","XUCIVXD",8,0)
 S X=%UCI X ^%ZOSF("UCICHECK") G ERR:0[Y
"RTN","XUCIVXD",9,0)
 X ^%ZOSF("PROGMODE") I Y W:'($D(XUSLNT)!$D(ZTQUEUED)) !,*7,"NO SWITCHING UCI'S IN PROGRAMMER MODE!",! S Y=0 Q
"RTN","XUCIVXD",10,0)
V D SWAP
"RTN","XUCIVXD",11,0)
U I '($D(XUSLNT)!$D(ZTQUEUED)) W *7,!,"YOU'RE IN UCI: ",$ZU(0),!
"RTN","XUCIVXD",12,0)
 S $ZT="^%ZTER",%=$D(^%ZOSF("OS"))
"RTN","XUCIVXD",13,0)
K K %,%UCI S Y=1 Q
"RTN","XUCIVXD",14,0)
 ;
"RTN","XUCIVXD",15,0)
SWAP ;
"RTN","XUCIVXD",16,0)
 X ^%ZOSF("PROGMODE") I 'Y S X=$S(X[",":$ZC(%SETUCI,$P(X,","),$P(X,",",2)),1:$ZC(%SETUCI,$P(X,","))),X=$ZC(%PGMSET),X=$ZC(%SECMAP)
"RTN","XUCIVXD",17,0)
 Q
"RTN","XUCIVXD",18,0)
 ;
"RTN","XUCIVXD",19,0)
ENT G 2:$D(%UCI)#2,1
"RTN","XUCIVXD",20,0)
 ;
"RTN","XUCIVXD",21,0)
GO ;
"RTN","XUCIVXD",22,0)
 D 2 Q:0[Y  S X=PGM I PGM'?1"%".E X ^%ZOSF("TEST") I '$T W !?9,"'"_X_"' DOES NOT EXIST IN "_%UCI,! HALT
"RTN","XUCIVXD",23,0)
 S X=$&ZLIB.%SETSYM("DHCP$UCI_CHANGE",1)
"RTN","XUCIVXD",24,0)
 K ^XUTL("XQ",$J),^UTILITY($J) G @(U_PGM)
"RTN","XUCIVXD",25,0)
 ;
"RTN","XUCIVXD",26,0)
DO S %UCI=$P(XQZ,"[",2,9),PGM=$P(XQZ,"[",1),%UCI=$E(%UCI,1,$L(%UCI)-1)
"RTN","XUCIVXD",27,0)
 I %UCI="PROD"!(%UCI="MGR") S %UCI=^%ZOSF(%UCI)
"RTN","XUCIVXD",28,0)
 E  S X=%UCI X ^%ZOSF("UCICHECK") G ERR:0[Y
"RTN","XUCIVXD",29,0)
 X ^%ZOSF("UCI") D SAV,D S %UCI=Y D 2,RES Q
"RTN","XUCIVXD",30,0)
D N Y,%XUCI D 2 Q:0[Y  G @PGM Q
"RTN","XUCIVXD",31,0)
SAV S %XUCI="" F %="DUZ","DUZ(0)","DT","DTIME","IO","IO(0)","IOF","IOM","IOST","IOST(0)" S %XUCI=%XUCI_$S($D(@%)#2:@%,1:"")_"^"
"RTN","XUCIVXD",32,0)
 Q
"RTN","XUCIVXD",33,0)
RES F %=1:1:10 S @($P("DUZ^DUZ(0)^DT^DTIME^IO^IO(0)^IOF^IOM^IOST^IOST(0)","^",%))=$P(%XUCI,"^",%)
"RTN","XUCIVXD",34,0)
 Q
"RTN","XUCIVXD",35,0)
 ;
"RTN","XUCIVXD",36,0)
ERR W !?9,"'"_X_"' IS AN INVALID UCI!",!
"RTN","XUS3A")
0^3^B4869960
"RTN","XUS3A",1,0)
XUS3A ;SF-ISC/STAFF - CHANGE UCI'S ;10/18/95  12:59
"RTN","XUS3A",2,0)
 ;;8.0;KERNEL;**13**;Jul 10, 1995
"RTN","XUS3A",3,0)
 Q
"RTN","XUS3A",4,0)
 ;PICK A UCI TO SWITCH TO
"RTN","XUS3A",5,0)
SWITCH ;Allow users that have the UCI field in there NP file to switch UCI's.
"RTN","XUS3A",6,0)
 W !!,"Switch UCI's option.",!
"RTN","XUS3A",7,0)
 I $$PROGMODE^%ZOSV() W !,$C(7),"No switching UCI's in Programmer Mode." Q
"RTN","XUS3A",8,0)
 I $O(^VA(200,DUZ,.2,0))'>0 D  Q
"RTN","XUS3A",9,0)
 . W !,"Sorry but you do not have any UCI's that you are allowed to"
"RTN","XUS3A",10,0)
 . W !,"switch too."
"RTN","XUS3A",11,0)
 . Q
"RTN","XUS3A",12,0)
 N DIR,X,Y,PGM,%UCI,DEF
"RTN","XUS3A",13,0)
 S DEF="ZU" ;DEF is default routine to switch to.
"RTN","XUS3A",14,0)
UCI S DIR(0)="F",DIR("A")="Select UCI:ROUTINE",DIR("??")="^D SHOW^XUS3A"
"RTN","XUS3A",15,0)
 S DIR("?")="Enter a UCI name (:Routine) to switch to."
"RTN","XUS3A",16,0)
 D ^DIR K DIR I $D(DUOUT)!$D(DTOUT)!(X="^") Q
"RTN","XUS3A",17,0)
 I Y?.N,$D(^VA(200,DUZ,.2,Y,0)) S UC=^(0),Y=$P(UC,U)_":"_$P($P(UC,U,2),":")
"RTN","XUS3A",18,0)
 S X=$P(Y,":"),PGM=$P(Y,":",2,3) S:PGM[":" X=$P(Y,":",1,2),PGM=$P(Y,":",3) ;for M/vx
"RTN","XUS3A",19,0)
 S:PGM="" PGM=DEF
"RTN","XUS3A",20,0)
SAME I X="" Q  ;Didn't select anything.
"RTN","XUS3A",21,0)
 D PM S %UCI=X X ^%ZOSF("UCICHECK") I 0[Y G BAD
"RTN","XUS3A",22,0)
 F DA=0:0 S DA=$O(^VA(200,DUZ,.2,DA)) Q:DA'>0  S Y=^(DA,0) D  G:GO NXT
"RTN","XUS3A",23,0)
 . S GO=0,X=$P(Y,U),XUA=$P(Y,U,2) D PM Q:%UCI'=X 
"RTN","XUS3A",24,0)
 . I XUA="" S XUA=DEF
"RTN","XUS3A",25,0)
 . F %=1:1:20 I $P(XUA,":",%)=PGM S GO=1 Q
"RTN","XUS3A",26,0)
 . Q
"RTN","XUS3A",27,0)
BAD W !,"UCI not found!" D SHOW G UCI
"RTN","XUS3A",28,0)
 ;
"RTN","XUS3A",29,0)
NXT ;Here we go.
"RTN","XUS3A",30,0)
 D C^XUSCLEAN K ^XUTL("XQ",$J),^XUTL($J),^TMP($J),^UTILITY($J)
"RTN","XUS3A",31,0)
 ;K DA S XQZ="^"_PGM_"["_%UCI_"]" D DO^%XUCI G ^XUSCLEAN
"RTN","XUS3A",32,0)
 K DA G GO^%XUCI
"RTN","XUS3A",33,0)
 ;
"RTN","XUS3A",34,0)
 ;
"RTN","XUS3A",35,0)
SHOW W ! S I=0,UC="",X=$S($D(^VA(200,DUZ,201)):+^(201),1:0)
"RTN","XUS3A",36,0)
 W !,"Enter ^ to return to your current menu, or select from:"
"RTN","XUS3A",37,0)
 F I=0:0 S I=$O(^VA(200,DUZ,.2,I)) Q:I'>0  D
"RTN","XUS3A",38,0)
 . W !,?5 S UC=$G(^VA(200,DUZ,.2,I,0)),X=$P(UC,U,1),UC=$P(UC,U,2,99)
"RTN","XUS3A",39,0)
 . I UC'[":" W I
"RTN","XUS3A",40,0)
 . D PM W ?10,X X ^%ZOSF("UCICHECK") I 0[Y W " -- Not currently a valid  UCI!",*7 Q
"RTN","XUS3A",41,0)
 . W:UC]"" ":"_UC
"RTN","XUS3A",42,0)
 . Q
"RTN","XUS3A",43,0)
 Q
"RTN","XUS3A",44,0)
 ;
"RTN","XUS3A",45,0)
PM I X="PROD"!(X="MGR") S X=^%ZOSF(X)
"RTN","XUS3A",46,0)
 Q
"RTN","XUSCLEAN")
0^4^B9899345
"RTN","XUSCLEAN",1,0)
XUSCLEAN ;SF/STAFF - CLEANUP BEFORE EXIT ;10/31/95  09:40
"RTN","XUSCLEAN",2,0)
 ;;8.0;KERNEL;**13**;Jul 10, 1995
"RTN","XUSCLEAN",3,0)
H ;;Exit point for all applications
"RTN","XUSCLEAN",4,0)
 LOCK  ;Unlock any locks
"RTN","XUSCLEAN",5,0)
 S U="^"
"RTN","XUSCLEAN",6,0)
 I $D(^XUTL("XQ",$J,"T")) S %XQEA=^("T") F %XQEA1=%XQEA:-1:1 I $D(^XUTL("XQ",$J,%XQEA1)),$P(^(%XQEA1),U,16) S %XQEA2=+^(%XQEA1) I $D(^DIC(19,%XQEA2,15)),$L(^(15)) X ^(15) ;Unwind Exit Actions
"RTN","XUSCLEAN",7,0)
 K %XQEA,%XQEA1,%XQEA2
"RTN","XUSCLEAN",8,0)
 G:$D(IO("C")) H2
"RTN","XUSCLEAN",9,0)
 I $S($D(IOST)[0:1,IOST="":1,IOST["C-":1,1:0),'$D(XUERF) W !!!!!!!!!!!!!!!!!!!!!!!
"RTN","XUSCLEAN",10,0)
 I $D(XQNOLOG) W !!,"==>  Sorry, all activity on this volume set is being halted!  Try again later.",*7,*7,*7,!!!!
"RTN","XUSCLEAN",11,0)
 W !!,"Halting at " S X=$P($H,",",2),Y=$E(X#3600\60+100,2,3),X=X\3600,Z=0 S:X>11 Z=1 S:'X X=12 S:X>12 X=X-12 W X,":",Y," ",$S(Z:"pm",1:"am")
"RTN","XUSCLEAN",12,0)
 D:$D(DUZ("NEWCODE")) NEWCODE
"RTN","XUSCLEAN",13,0)
H2 ;No talking after this point
"RTN","XUSCLEAN",14,0)
 D C,XUTL
"RTN","XUSCLEAN",15,0)
 ;K ^DISV($S($D(DUZ)#2:+DUZ,1:0))
"RTN","XUSCLEAN",16,0)
 S:'($D(XQXFLG)#2) XQXFLG="" I $D(XQCH),XQCH="HALT" S $P(XQXFLG,U,3)=""
"RTN","XUSCLEAN",17,0)
 I ($D(XQNOHALT)#2)!($D(ZTQUEUED)#2)!($P(XQXFLG,U,3)="XUP") K XQNOHALT,XQXFLG Q  ;Return to REST^XQ12, ^XUP or Taskman.
"RTN","XUSCLEAN",18,0)
 I $D(^%ZIS("H"))#2 X ^("H")
"RTN","XUSCLEAN",19,0)
 G HALT^ZU ;Go to ZU to do final halt.
"RTN","XUSCLEAN",20,0)
C ;
"RTN","XUSCLEAN",21,0)
 N XUDEV
"RTN","XUSCLEAN",22,0)
 S XUDEV=$S($D(^XUTL("XQ",$J,"IOS")):^("IOS"),1:"")
"RTN","XUSCLEAN",23,0)
 D ^%ZISC,BYE
"RTN","XUSCLEAN",24,0)
 Q
"RTN","XUSCLEAN",25,0)
BYE ;Set flags to show user has left. Called from anyplace the user exits
"RTN","XUSCLEAN",26,0)
 N I1
"RTN","XUSCLEAN",27,0)
 I $G(^VA(200,+$G(DUZ),1.1)) S $P(^VA(200,DUZ,1.1),"^",3)=0
"RTN","XUSCLEAN",28,0)
 S I1=+$G(^XUTL("XQ",$J,0))
"RTN","XUSCLEAN",29,0)
 I $D(^XUSEC(0,I1,0)) S $P(^(0),"^",4)=$$NOW^XLFDT K:$D(I1) ^XUSEC(0,"CUR",DUZ,I1)
"RTN","XUSCLEAN",30,0)
 K ^XUTL("XQ",$J)
"RTN","XUSCLEAN",31,0)
 Q
"RTN","XUSCLEAN",32,0)
XUTL ;Cleanup Globals
"RTN","XUSCLEAN",33,0)
 N XQN D CLEAN^DILF ;Cleanup FM too.
"RTN","XUSCLEAN",34,0)
 K ^XUTL($J),^UTILITY($J),^TMP($J)
"RTN","XUSCLEAN",35,0)
 S XQN=" " F  S XQN=$O(^XUTL(XQN)) Q:XQN=""  K:"^XQO^XGATR^XGKB^"'[XQN ^XUTL(XQN,$J)
"RTN","XUSCLEAN",36,0)
 S XQN=" " F  S XQN=$O(^TMP(XQN)) Q:XQN=""  K ^TMP(XQN,$J)
"RTN","XUSCLEAN",37,0)
 S XQN=" " F  S XQN=$O(^UTILITY(XQN)) Q:XQN=""  K:"^ROU^GLO^LRLTR"'[XQN ^UTILITY(XQN,$J)
"RTN","XUSCLEAN",38,0)
 K ^XUTL("ZISPARAM",$I)
"RTN","XUSCLEAN",39,0)
 Q
"RTN","XUSCLEAN",40,0)
NEWCODE ;Ask user to verify new code
"RTN","XUSCLEAN",41,0)
 W !!,*7,"But, as I recall...",!,"You've changed your VERIFY CODE during this session.",!,"Please remember it for next time." H 4
"RTN","XUSCLEAN",42,0)
 ;W !!,*7,"But, as I recall...",!,"You've changed your VERIFY CODE during this session." S XUK=3,XUH=DUZ("NEWCODE"),XUNC=1,DA=DUZ X ^%ZOSF("EOFF") D NEWCODE^XUS2
"RTN","XUSCLEAN",43,0)
 Q
"RTN","XUSCLEAN",44,0)
KILL ;This is what others want. RWF
"RTN","XUSCLEAN",45,0)
 K %1,%2,%3 S %3=+$G(^XUTL("XQ",$J,"T"))
"RTN","XUSCLEAN",46,0)
 F %1=%3:-1:1 S %2=+$G(^XUTL("XQ",$J,%1)),%2=$G(^DIC(19,%2,"NOKILL")) I %2]"" N @%2
"RTN","XUSCLEAN",47,0)
KILL1 ;To clean up ALL but kernel variables.
"RTN","XUSCLEAN",48,0)
 N KWAPI,XGWIN,XGDI,XGEVENT
"RTN","XUSCLEAN",49,0)
 N XQAEXIT,XQAUSER,XQX1,XQAKILL,XQAID
"RTN","XUSCLEAN",50,0)
 K (DUZ,DTIME,DT,DISYS,IO,IOBS,IOF,IOM,ION,IOSL,IOST,IOT,IOS,IOXY,U,XRTL,%ZH0,XQVOL,XQY,XQY0,XQDIC,XQPSM,XQPT,XQAUDIT,XQXFLG,ZTSTOP,ZTQUEUED,ZTREQ)
"RTN","XUSCLEAN",51,0)
 K IO("C"),IO("Q")
"RTN","XUSCLEAN",52,0)
 Q
"RTN","XUSCLEAN",53,0)
XMR ;Entry point from XUS to DO xmr and cleanup after.
"RTN","XUSCLEAN",54,0)
 D NEXT^XUS1 S XQXFLG="",XQXFLG("HALT")=1 G H2
"RTN","ZOSVDTM")
0^8^B21222067
"RTN","ZOSVDTM",1,0)
%ZOSV ;SFISC/AC,LL/DFH,sfisc/fyb ;10/31/95  10:04
"RTN","ZOSVDTM",2,0)
 ;;8.0;KERNEL;**13**;Jul 10, 1995
"RTN","ZOSVDTM",3,0)
 ; ** For DataTree **
"RTN","ZOSVDTM",4,0)
 ;
"RTN","ZOSVDTM",5,0)
ACTJ() ; Active Jobs
"RTN","ZOSVDTM",6,0)
 Q $$njobs^%mjob("running")
"RTN","ZOSVDTM",7,0)
 ;
"RTN","ZOSVDTM",8,0)
AVJ() ; Available Jobs
"RTN","ZOSVDTM",9,0)
 Q $$njobs^%mjob("free")
"RTN","ZOSVDTM",10,0)
 ;
"RTN","ZOSVDTM",11,0)
T0 ; start RT clock
"RTN","ZOSVDTM",12,0)
 S XRT0=$H Q
"RTN","ZOSVDTM",13,0)
T1 ; store RT datum
"RTN","ZOSVDTM",14,0)
 S ^%ZRTL(3,XRTL,+$H,XRTN,$P($H,",",2))=XRT0 K XRT0 Q
"RTN","ZOSVDTM",15,0)
MAXJ ; Maximum # of Jobs
"RTN","ZOSVDTM",16,0)
 S Y=$$njobs^%mjob("total") Q
"RTN","ZOSVDTM",17,0)
 ;
"RTN","ZOSVDTM",18,0)
BAUD ; Baud rate of device - used by BAUD field of the Device File
"RTN","ZOSVDTM",19,0)
 ; Internal entry of device is D0
"RTN","ZOSVDTM",20,0)
 ZETRAP BAUDERR
"RTN","ZOSVDTM",21,0)
 S X=$zdevspeed($P(^%ZIS(1,D0,0),"^",2)) Q
"RTN","ZOSVDTM",22,0)
BAUDERR S X="" Q
"RTN","ZOSVDTM",23,0)
 ;
"RTN","ZOSVDTM",24,0)
LGR() Q $ZR ;Last global reference
"RTN","ZOSVDTM",25,0)
 ;
"RTN","ZOSVDTM",26,0)
EC() Q $ZE ;Error code
"RTN","ZOSVDTM",27,0)
 ;
"RTN","ZOSVDTM",28,0)
DEVOPN ;X=$J,Y=List of devices separated by a comma
"RTN","ZOSVDTM",29,0)
 G DEVOPN^%ZOSV1
"RTN","ZOSVDTM",30,0)
 ;
"RTN","ZOSVDTM",31,0)
DEVOK ;X=Device $I, Y=0 if available, Y=999 if device is busy
"RTN","ZOSVDTM",32,0)
 ;Y=-1 if device is undefined.
"RTN","ZOSVDTM",33,0)
 G RES:$G(X1)="RES" I $E(X)="/"!($E(X)="\") S Y=0 Q
"RTN","ZOSVDTM",34,0)
 I $D(X)[0 S X=$I
"RTN","ZOSVDTM",35,0)
 I X=$I S Y=$J Q
"RTN","ZOSVDTM",36,0)
 I X<20,(X>9) S Y=0 D NULLDEV O X:("W":NULLDEV):0 C:$T X S:'$T Y=999 Q
"RTN","ZOSVDTM",37,0)
 ZETRAP NODEV
"RTN","ZOSVDTM",38,0)
 O X::0 I '$T S Y=999 Q
"RTN","ZOSVDTM",39,0)
 C X S Y=0
"RTN","ZOSVDTM",40,0)
 Q
"RTN","ZOSVDTM",41,0)
RES S Y=0,%ZISD0=$O(^%ZISL(3.54,"B",X,0))
"RTN","ZOSVDTM",42,0)
 I '%ZISD0 S Y=-1,%ZISD0=%O(^%ZIS(1,"C",X)) Q:'%ZISD0  Q:'$D(^%ZIS(1,+%ZISD0,0))  Q:$P(^(0),"^")'=X  Q:'$D(^("TYPE"))  Q:^("TYPE")'="RES"  S Y=0 Q
"RTN","ZOSVDTM",43,0)
 S X1=$S($D(^%ZISL(3.54,+%ZISD0,0)):^(0),1:"")
"RTN","ZOSVDTM",44,0)
 I $P(X1,"^",2)&(X=$P(X1,"^")) S Y=0 Q
"RTN","ZOSVDTM",45,0)
 S Y=999 F %ZISD1=0:0 S %ZISD1=$O(^%ZISL(3.54,%ZISD0,1,%ZISD1)) Q:%ZISD1'>0  I $D(^(%ZISD1,0)) S Y=$P(^(0),"^",3) Q
"RTN","ZOSVDTM",46,0)
 K %ZISD0,%ZISD1
"RTN","ZOSVDTM",47,0)
 Q
"RTN","ZOSVDTM",48,0)
NULLDEV ; based on %device
"RTN","ZOSVDTM",49,0)
 K HWTYPE S NULLDEV="NUL",H=$V($S($P($ZVER,"/",2)<4:4,1:1),3,-1)
"RTN","ZOSVDTM",50,0)
 S HWTYPE=$S(H<10:"WS",H<20:"MF",H<64:"?",H<129:"PC",1:"?")
"RTN","ZOSVDTM",51,0)
 I HWTYPE'="PC" S NULLDEV="[NUL]"
"RTN","ZOSVDTM",52,0)
 K H,HWTYPE Q
"RTN","ZOSVDTM",53,0)
 ;
"RTN","ZOSVDTM",54,0)
NODEV S Y=-1
"RTN","ZOSVDTM",55,0)
 Q
"RTN","ZOSVDTM",56,0)
 ;
"RTN","ZOSVDTM",57,0)
DOLRO ;SAVE ENTIRE SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVDTM",58,0)
 ;I $P($ZVER,"/",2)<4 D ^%VARLOG
"RTN","ZOSVDTM",59,0)
 S Y="%" F %=0:0 S Y=$O(@Y) Q:Y=""  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVDTM",60,0)
 Q
"RTN","ZOSVDTM",61,0)
 ;
"RTN","ZOSVDTM",62,0)
ORDER ; Save part of the symbol table in location specified by X
"RTN","ZOSVDTM",63,0)
 S (Y,Y1)=$P(Y,"*",1) I $D(@Y)=0 F %=0:0 S Y=$O(@Y) Q:Y=""!(Y[Y1)
"RTN","ZOSVDTM",64,0)
 Q:Y=""  S %=$D(@Y) S:%#2 @(X_"Y)="_Y)
"RTN","ZOSVDTM",65,0)
 I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVDTM",66,0)
 F %=0:0 S Y=$O(@Y) Q:Y=""!(Y'[Y1)  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVDTM",67,0)
 K %,X,Y,Y1 Q
"RTN","ZOSVDTM",68,0)
 ;
"RTN","ZOSVDTM",69,0)
JOBPAR ; Returns job X's namespace
"RTN","ZOSVDTM",70,0)
 D JSTAT^%ZOSV1
"RTN","ZOSVDTM",71,0)
 I ($P($ZVER,"/",2)'<4)&($P($ZVER,"/",2)<4.3) S Y=$ZCONVERT($V(0,JA+908,-5),"U")
"RTN","ZOSVDTM",72,0)
 E  S Y=$$jstat^%mjob(X),Y=$P(Y,"|",4)
"RTN","ZOSVDTM",73,0)
 Q
"RTN","ZOSVDTM",74,0)
 ;
"RTN","ZOSVDTM",75,0)
 ;
"RTN","ZOSVDTM",76,0)
NOLOG ; No logins allowed
"RTN","ZOSVDTM",77,0)
 S Y=0 Q
"RTN","ZOSVDTM",78,0)
 ;
"RTN","ZOSVDTM",79,0)
PARSIZ ;
"RTN","ZOSVDTM",80,0)
 S X=3 Q
"RTN","ZOSVDTM",81,0)
 ;
"RTN","ZOSVDTM",82,0)
PRIINQ() ; Priority Inquire
"RTN","ZOSVDTM",83,0)
 N X,Y S X=$J ;D JSTAT^%ZOSV1
"RTN","ZOSVDTM",84,0)
 ;I ZVER S Y=$V(0,$V(1,(X-1*2)+100,-2)*16+5,-1)-128\2 S:Y Y=10-Y
"RTN","ZOSVDTM",85,0)
 S Y=$$jstat^%mjob(X),Y=$P(Y,"|",7) S:Y Y=10-Y
"RTN","ZOSVDTM",86,0)
 Q Y
"RTN","ZOSVDTM",87,0)
 ;
"RTN","ZOSVDTM",88,0)
PRIORITY ; Set priority of job
"RTN","ZOSVDTM",89,0)
 I X<1!(X>10) Q
"RTN","ZOSVDTM",90,0)
 S Y=X,X=10-X ; convert Kernel to DTM priority
"RTN","ZOSVDTM",91,0)
 I $P($ZVER,"/",2)<4 V 64+$J:50:$C(128+X) Q
"RTN","ZOSVDTM",92,0)
 S X=X*2+128 zc #changepriority(X) V 2:5:$C(X)
"RTN","ZOSVDTM",93,0)
 Q
"RTN","ZOSVDTM",94,0)
PRGMODE ;
"RTN","ZOSVDTM",95,0)
 W ! S ZTPAC=$S($D(^VA(200,+DUZ,.1))#10:$P(^(.1),"^",5),1:""),XUVOL=^%ZOSF("VOL")
"RTN","ZOSVDTM",96,0)
 I ZTPAC]"" X ^%ZOSF("EOFF") R !,"PAC: ",X:60 S X=$ZCONVERT(X,"U") X ^%ZOSF("EON") I X'=ZTPAC W "??",*7 Q
"RTN","ZOSVDTM",97,0)
 S XMB="XUPROGMODE",XMB(1)=DUZ,XMB(2)=$I D ^XMB:$L($T(^XMB)) D BYE^XUSCLEAN K ZTPAC,X,XMB
"RTN","ZOSVDTM",98,0)
 X ^%ZOSF("UCI") S XUCI=Y,XQZ="PRGM^ZUA[MGR]",XUSLNT=1 D DO^%XUCI
"RTN","ZOSVDTM",99,0)
 U:$I>99 $I:IXXLATE=2 D ^%mshell
"RTN","ZOSVDTM",100,0)
 ;
"RTN","ZOSVDTM",101,0)
UCICHECK(X) ; The call to ns^%m for Version 4 is necessary
"RTN","ZOSVDTM",102,0)
 ; only if namespaces are password protected.
"RTN","ZOSVDTM",103,0)
 ZETRAP BADUCI N CURUCI
"RTN","ZOSVDTM",104,0)
 S X=$P(X,",")
"RTN","ZOSVDTM",105,0)
 S X=$ZCONVERT(X,"U"),CURUCI=$ZNSPACE
"RTN","ZOSVDTM",106,0)
 I $P($ZVER,"/",2)<4 ZNSPACE X ZNSPACE CURUCI Q X
"RTN","ZOSVDTM",107,0)
 D ns^%m(X,1) S ^UTILITY($J)="" ; *** force error if dataset not mounted
"RTN","ZOSVDTM",108,0)
 I CURUCI'=X D ns^%m(CURUCI,1)
"RTN","ZOSVDTM",109,0)
 Q X
"RTN","ZOSVDTM",110,0)
BADUCI ; set flag and return to old namespace
"RTN","ZOSVDTM",111,0)
 S Y=0
"RTN","ZOSVDTM",112,0)
 I $P($ZVER,"/",2)<4 ZNSPACE CURUCI
"RTN","ZOSVDTM",113,0)
 E  D ns^%m(CURUCI,1)
"RTN","ZOSVDTM",114,0)
 Q Y
"RTN","ZOSVDTM",115,0)
 ;
"RTN","ZOSVDTM",116,0)
VERSION(X) ;return OS version, X=1 - return OS
"RTN","ZOSVDTM",117,0)
 Q $S($G(X):$P($ZV,"/"),1:$P($ZV,"/",2))
"RTN","ZOSVDTM",118,0)
 ;
"RTN","ZOSVDTM",119,0)
SETNM(X) ;Set name, Fall into SETENV
"RTN","ZOSVDTM",120,0)
SETENV ; Set environment
"RTN","ZOSVDTM",121,0)
 S XUENV=X_"^"
"RTN","ZOSVDTM",122,0)
 I $P($ZVER,"/",2)>4.2 V 2:374:$C($L(X))_X:$J#256 Q
"RTN","ZOSVDTM",123,0)
 S X1=X,X=$J D JSTAT^%ZOSV1
"RTN","ZOSVDTM",124,0)
 V 0:JA+374:$C($L(X1))_X1
"RTN","ZOSVDTM",125,0)
 Q
"RTN","ZOSVDTM",126,0)
GETENV ; Get environment
"RTN","ZOSVDTM",127,0)
 S Y=$ZNSPACE_"^"_^%ZOSF("VOL")_"^^"_^%ZOSF("VOL")
"RTN","ZOSVDTM",128,0)
 Q
"RTN","ZOSVDTM",129,0)
TRMON ;Turn terminators on
"RTN","ZOSVDTM",130,0)
 U $I:IXINTERP=2 N % S %=$$getall^%mixinterp()
"RTN","ZOSVDTM",131,0)
 I $A(%)'=35 F %=0:1:31,127 D set^%mixinterp(%,35)
"RTN","ZOSVDTM",132,0)
 Q
"RTN","ZOSVDTM",133,0)
TRMOFF ;Turn terminators off
"RTN","ZOSVDTM",134,0)
 U $I:IXINTERP=$S($I>99:1,1:0)
"RTN","ZOSVDTM",135,0)
 Q
"RTN","ZOSVDTM",136,0)
PASSALL ;Pass all characters
"RTN","ZOSVDTM",137,0)
 U $I:IXINTERP=3 N % S %=$$getall^%mixinterp()
"RTN","ZOSVDTM",138,0)
 I $A(%)'=18 F %=0:1:31,127 D set^%mixinterp(%,18)
"RTN","ZOSVDTM",139,0)
 Q
"RTN","ZOSVDTM",140,0)
NOPASS ;Do not pass all characters
"RTN","ZOSVDTM",141,0)
 D TRMOFF
"RTN","ZOSVDTM",142,0)
 Q
"RTN","ZOSVDTM",143,0)
 ;
"RTN","ZOSVDTM",144,0)
HFSREW(IO,IOPAR) ;Rewind Host File
"RTN","ZOSVDTM",145,0)
 S $ZT="HFSRWERR"
"RTN","ZOSVDTM",146,0)
 U IO:(LFA=0)
"RTN","ZOSVDTM",147,0)
 Q 1
"RTN","ZOSVDTM",148,0)
HFSRWERR ;Error encountered.
"RTN","ZOSVDTM",149,0)
 Q 0
"RTN","ZOSVDTM",150,0)
LOGRSRC(OPT) ;record resource usage in ^XUCP
"RTN","ZOSVDTM",151,0)
 Q
"RTN","ZOSVDTM",152,0)
SETTRM(X) ;Turn on specified terminators.
"RTN","ZOSVDTM",153,0)
 U $I:TERM=X
"RTN","ZOSVDTM",154,0)
 Q 1
"RTN","ZOSVMSM")
0^7^B33995631
"RTN","ZOSVMSM",1,0)
%ZOSV ;SFISC/AC - $View commands for MSM-PC/PLUS ;12/12/95  13:47
"RTN","ZOSVMSM",2,0)
 ;;8.0;KERNEL;**13**;Jul 10, 1995
"RTN","ZOSVMSM",3,0)
 ;
"RTN","ZOSVMSM",4,0)
ACTJ() ;
"RTN","ZOSVMSM",5,0)
 Q $S($$V3:$V($V(44)+168,-3,2),1:$V(168,-4,2))
"RTN","ZOSVMSM",6,0)
AVJ() ;
"RTN","ZOSVMSM",7,0)
 Q $S($$V3:$V($V(44)+94,-3,2)+1-$V($V(44)+168,-3,2),1:$V($V(3,-5),-3,0)-$V(168,-4,2))
"RTN","ZOSVMSM",8,0)
T0 ; start RT clock
"RTN","ZOSVMSM",9,0)
 I $$OSTYPE()'=1 S XRT0=$H Q
"RTN","ZOSVMSM",10,0)
 S XRT0=$P($H,",")_","_($V(#46C,-3,4)*5.4925\1/100) Q
"RTN","ZOSVMSM",11,0)
T1 ; store RT datum
"RTN","ZOSVMSM",12,0)
 I $$OSTYPE()'=1 S ^%ZRTL(3,XRTL,+$H,$P($H,",",2))=XTR0 K XTR0 Q
"RTN","ZOSVMSM",13,0)
 S ^%ZRTL(3,XRTL,+$H,XRTN,$V(#46C,-3,4)*5.4925\1/100)=XRT0 K XRT0 Q
"RTN","ZOSVMSM",14,0)
JOBPAR ;
"RTN","ZOSVMSM",15,0)
 S Y=$V(2,X,2) Q:'Y
"RTN","ZOSVMSM",16,0)
 S Y=$ZU(Y#32,Y\32) Q
"RTN","ZOSVMSM",17,0)
PROGMODE() ;
"RTN","ZOSVMSM",18,0)
 Q $V(0,$J,2)#2
"RTN","ZOSVMSM",19,0)
PRGMODE ;
"RTN","ZOSVMSM",20,0)
 W ! S ZTPAC=$S('$D(^VA(200,+DUZ,.1)):"",1:$P(^(.1),U,5)),XUVOL=^%ZOSF("VOL")
"RTN","ZOSVMSM",21,0)
 ;I ZTPAC="" W *7,"YOU HAVE NO PROGRAMMER ACCESS CODE!",! Q
"RTN","ZOSVMSM",22,0)
 I ZTPAC]"" X ^%ZOSF("EOFF") R !,"PAC: ",X:60 X ^%ZOSF("EON") I X'=ZTPAC W "??",*7 Q
"RTN","ZOSVMSM",23,0)
 S XMB="XUPROGMODE",XMB(1)=DUZ,XMB(2)=$I D ^XMB:$L($T(^XMB)) D BYE^XUSCLEAN K ZTPAC,X,XMB
"RTN","ZOSVMSM",24,0)
 S ZOSVER='$ZB($V(140,$J,2),512,1) ; 1 if V 2.1+ err trapping in effect
"RTN","ZOSVMSM",25,0)
 X ^%ZOSF("UCI") S XUCI=Y,XQZ="PRGM^ZUA[MGR]",XUSLNT=1 D DO^%XUCI B:ZOSVER 2 V 0:$J:$ZB($V(0,$J,2),1,7):2 S $ZE="PRGMODEX^%ZOSV" ABORT
"RTN","ZOSVMSM",26,0)
PRGMODEX W !,"YOU ARE NOW IN PROGRAMMING MODE!",! S $ZE="" B:ZOSVER -2 K ZOSVER Q
"RTN","ZOSVMSM",27,0)
 ;
"RTN","ZOSVMSM",28,0)
SIGNOFF ;
"RTN","ZOSVMSM",29,0)
 I 0
"RTN","ZOSVMSM",30,0)
 ;I $V($V(44)+4,-3,2)\32768#2 Q
"RTN","ZOSVMSM",31,0)
 Q
"RTN","ZOSVMSM",32,0)
UCI ;
"RTN","ZOSVMSM",33,0)
 S Y=$ZU(0) Q  ;X ^%ZOSF("UCI") Q
"RTN","ZOSVMSM",34,0)
 ;
"RTN","ZOSVMSM",35,0)
UCICHECK(X) ;
"RTN","ZOSVMSM",36,0)
 N Y,I S Y="",$ZT="BADUCI^%ZOSV"
"RTN","ZOSVMSM",37,0)
 I X["," S Y=$ZU($P(X,","),$P(X,",",2)),(X,Y)=$ZU($P(Y,","),$P(Y,",",2)) Q:Y]"" Y
"RTN","ZOSVMSM",38,0)
 F I=1:1:64 G:$ZU(I)="" BADUCI Q:$ZU(I)=X!($P($ZU(I),",")=X)!(I=X)
"RTN","ZOSVMSM",39,0)
 Q $ZU(I)
"RTN","ZOSVMSM",40,0)
 ;
"RTN","ZOSVMSM",41,0)
BADUCI Q ""
"RTN","ZOSVMSM",42,0)
 ;
"RTN","ZOSVMSM",43,0)
BAUD S Y=^%ZOSF("MGR"),X=$S($D(^%ZIS(1,D0,0)):$P(^(0),"^",2),1:"")
"RTN","ZOSVMSM",44,0)
 Q:X=""  I '$D(^[Y]SYS(0,"DDB",+X)) S X="" Q
"RTN","ZOSVMSM",45,0)
 S X=$P(^(+X),",",3)#100 Q:'X
"RTN","ZOSVMSM",46,0)
 S X=$P("50,75,110,134.5,150,300,600,1200,1800,2400,3600,4800,9600",",",X) Q
"RTN","ZOSVMSM",47,0)
 ;
"RTN","ZOSVMSM",48,0)
LGR() Q $ZR ;Last global ref.
"RTN","ZOSVMSM",49,0)
 ;
"RTN","ZOSVMSM",50,0)
EC() Q $ZE ;Error code
"RTN","ZOSVMSM",51,0)
 ;
"RTN","ZOSVMSM",52,0)
DOLRO ;SAVE ENTIRE SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVMSM",53,0)
 S Y="%" F %=0:0 S Y=$O(@Y) Q:Y=""  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVMSM",54,0)
 Q
"RTN","ZOSVMSM",55,0)
 ;
"RTN","ZOSVMSM",56,0)
ORDER ;SAVE PART OF SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVMSM",57,0)
 S (Y,Y1)=$P(Y,"*",1) I $D(@Y)=0 F %=0:0 S Y=$O(@Y) Q:Y=""!(Y[Y1)
"RTN","ZOSVMSM",58,0)
 Q:Y=""  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVMSM",59,0)
 F %=0:0 S Y=$O(@Y) Q:Y=""!(Y'[Y1)  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVMSM",60,0)
 K %,X,Y,Y1 Q
"RTN","ZOSVMSM",61,0)
 ;
"RTN","ZOSVMSM",62,0)
PRIORITY ;
"RTN","ZOSVMSM",63,0)
 N %D,%P S %P=(X>5) D INT^%HL Q
"RTN","ZOSVMSM",64,0)
 ;
"RTN","ZOSVMSM",65,0)
PRIINQ() ;
"RTN","ZOSVMSM",66,0)
 Q $S($V(20,$J,2):10,1:1)
"RTN","ZOSVMSM",67,0)
PARSIZ ;
"RTN","ZOSVMSM",68,0)
 S X=3 Q
"RTN","ZOSVMSM",69,0)
 ;
"RTN","ZOSVMSM",70,0)
NOLOG ;
"RTN","ZOSVMSM",71,0)
 S Y=$S($$V3:"$V($V(44)+4,-3,2)",1:"$V(4,-4,2)")_"\64#2" Q
"RTN","ZOSVMSM",72,0)
 ;
"RTN","ZOSVMSM",73,0)
DEVOPN ;
"RTN","ZOSVMSM",74,0)
 ;X=$J,Y=List of devices separated by a comma
"RTN","ZOSVMSM",75,0)
 N %,%1,%I,%X
"RTN","ZOSVMSM",76,0)
 S Y=""
"RTN","ZOSVMSM",77,0)
 I $$V3 S %=$V($V(44)+10,-3,2),%1=$V($V(44)+8,-3,2)+$V(44),%=$V(%*5+%1)
"RTN","ZOSVMSM",78,0)
 E  S %=$V(5,-5,0)
"RTN","ZOSVMSM",79,0)
 F %I=1:1:255 S %X=$V(%+%I+%I,-3,2) I %X,%X#4=0,%X/4=X S Y=Y_%I_","
"RTN","ZOSVMSM",80,0)
 Q
"RTN","ZOSVMSM",81,0)
DEVOK ;
"RTN","ZOSVMSM",82,0)
 ;X=Device $I, Y=0 if available, Y=Job # if owned,
"RTN","ZOSVMSM",83,0)
 ;Y=-1 if device is undefined.
"RTN","ZOSVMSM",84,0)
 G RES:$G(X1)="RES" I $E(X)="/"!($E(X)="\") S Y=0 Q
"RTN","ZOSVMSM",85,0)
 I X=2 S Y=0 Q
"RTN","ZOSVMSM",86,0)
 I X'?1.N!(X'>0!(X'<1024)) S Y=-1 Q
"RTN","ZOSVMSM",87,0)
 N %
"RTN","ZOSVMSM",88,0)
 I $$VERSION(1)["NT" D DVOPN Q
"RTN","ZOSVMSM",89,0)
 ;
"RTN","ZOSVMSM",90,0)
 I $$V3 S %=$V($V(44)+8,-3,2)+$V(44),%=$V($V($V(44)+10,-3,2)*5+%),Y=$V(%+X+X,-3,2),Y=$S(Y=0:0,Y#4=0:Y/4,1:-1)
"RTN","ZOSVMSM",91,0)
 E  S %=$V(5,-5,0),Y=$V(%+X+X,-3,2),Y=$S(Y=0:0,Y#4=0:Y/4+$V(272,-4),1:-1)
"RTN","ZOSVMSM",92,0)
 I 'Y D DVOPN Q
"RTN","ZOSVMSM",93,0)
 S:Y=$J Y=0 Q
"RTN","ZOSVMSM",94,0)
DVOPN S $ZT="DVERR",Y=0 Q:$D(%ZTIO)
"RTN","ZOSVMSM",95,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZOSVMSM",96,0)
 O X::$S($D(%ZISTO):%ZISTO,1:0) E  S Y=999 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZOSVMSM",97,0)
 L:$D(%ZISLOCK) -@%ZISLOCK
"RTN","ZOSVMSM",98,0)
 S Y=0 I '$D(%ZISCHK)!$S($D(%ZIS)#2:(%ZIS["T"),1:0) C X Q
"RTN","ZOSVMSM",99,0)
 S:X]"" IO(1,X)="" Q
"RTN","ZOSVMSM",100,0)
DVERR I $ZE["OPENERR" S Y=-1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZOSVMSM",101,0)
 I $ZE["<NODEV>" S Y=-1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZOSVMSM",102,0)
 ZQ
"RTN","ZOSVMSM",103,0)
RES S Y=0,%ZISD0=$O(^%ZISL(3.54,"B",X,0))
"RTN","ZOSVMSM",104,0)
 I '%ZISD0 S Y=-1,%ZISD0=%O(^%ZIS(1,"C",X)) Q:'%ZISD0  Q:'$D(^%ZIS(1,+%ZISD0,0))  Q:$P(^(0),"^")'=X  Q:'$D(^("TYPE"))  Q:^("TYPE")'="RES"  S Y=0 Q
"RTN","ZOSVMSM",105,0)
 S X1=$S($D(^%ZISL(3.54,+%ZISD0,0)):^(0),1:"")
"RTN","ZOSVMSM",106,0)
 I $P(X1,"^",2)&(X=$P(X1,"^")) S Y=0 Q
"RTN","ZOSVMSM",107,0)
 S Y=999 F %ZISD1=0:0 S %ZISD1=$O(^%ZISL(3.54,%ZISD0,1,%ZISD1)) Q:%ZISD1'>0  I $D(^(%ZISD1,0)) S Y=$P(^(0),"^",3) Q
"RTN","ZOSVMSM",108,0)
 K %ZISD0,%ZISD1
"RTN","ZOSVMSM",109,0)
 Q
"RTN","ZOSVMSM",110,0)
V2CL1 F %=0:0 Q:$ZA<0  R %X:5 Q:%X']""  F %1=0:0 S %1=$L(%Y),%Y=%Y_$E(%X,1,255-%1),%X=$E(%X,256-%1,$L(%X)),%1=$F(%Y,%ZCR) Q:%1'>0  S %2=$E(%Y,$A(%Y)=10+1,%1-2),%Y=$E(%Y,%1,$L(%Y)) D V2CL2
"RTN","ZOSVMSM",111,0)
 I %Y]"" S %2=$E(%Y,$A(%Y)=10+1,$L(%Y)) D V2CL2
"RTN","ZOSVMSM",112,0)
 C 2:256 K IO(1,2) D CLOSE^ZISPL1 K %Y,%X,%1,ZOSFV
"RTN","ZOSVMSM",113,0)
 Q
"RTN","ZOSVMSM",114,0)
V2CL2 S %1=$F(%2,$C(12)) I %1>0 S %=%+1 D LIMIT:%Z1<% Q:%Z1<%  S ^XMBS(3.519,XS,2,%,0)="|TOP|",%2=$E(%2,1,%1-2)_$E(%2,%1,$L(%2))
"RTN","ZOSVMSM",115,0)
 S %=%+1,^XMBS(3.519,XS,2,%,0)=%2 Q
"RTN","ZOSVMSM",116,0)
 ;
"RTN","ZOSVMSM",117,0)
LIMIT S ^XMBS(3.519,XS,2,%,0)="*** INCOMPLETE REPORT  -- SPOOL DOCUMENT LINE LIMIT EXCEEDED ***",$P(^XMB(3.51,%ZDA,0),"^",11)=1 Q
"RTN","ZOSVMSM",118,0)
 ;
"RTN","ZOSVMSM",119,0)
SET ;SET SPECIAL VARIABLES
"RTN","ZOSVMSM",120,0)
 S X=$H X ^%ZOSF("ZD") S DT=$E(Y,7,8)+200_$E(Y,1,2)_$E(Y,4,5)
"RTN","ZOSVMSM",121,0)
 Q
"RTN","ZOSVMSM",122,0)
GETENV ;Get enviroment  (UCI^VOL^NODE)
"RTN","ZOSVMSM",123,0)
 S Y=$P($ZU(0),",",1)_"^"_$P($ZU(0),",",2)_"^^"_$P($ZU(0),",",2)
"RTN","ZOSVMSM",124,0)
 Q
"RTN","ZOSVMSM",125,0)
VERSION(X) ;return OS version, X=1 - return OS
"RTN","ZOSVMSM",126,0)
 Q $S($G(X):$P($ZV,"Version "),1:$P($ZV,"Version ",2))
"RTN","ZOSVMSM",127,0)
V3() ;returns 1=version 3, 0=version 4
"RTN","ZOSVMSM",128,0)
 Q $P($ZV,"Version ",2)<4
"RTN","ZOSVMSM",129,0)
OSTYPE() ;Return 1 = PC/PLUS, 2 = NT, 3 = UNIX
"RTN","ZOSVMSM",130,0)
 N % S %=VERSION(1)
"RTN","ZOSVMSM",131,0)
 Q $S(%["MSM-PC/PLUS":1,%["Windows NT":2,1:3)
"RTN","ZOSVMSM",132,0)
 ;
"RTN","ZOSVMSM",133,0)
SETNM(X) ;Set name, Fall into SETENV
"RTN","ZOSVMSM",134,0)
SETENV ;Set enviroment
"RTN","ZOSVMSM",135,0)
 Q
"RTN","ZOSVMSM",136,0)
ZHDIF ;Display dif of two $$ZH^%MSMOPS's
"RTN","ZOSVMSM",137,0)
 S U="^" W !?2,"CPU=",$J($P(%ZH1,U)-$P(%ZH0,U),6,2),?14,"ET=",$J($P(%ZH1,U,7)-$P(%ZH0,U,7),6,2),?25,"PRD=",$J($P(%ZH1,U,3)-$P(%ZH0,U,3),4),?35,"LRD=",$J($P(%ZH1,U,2)-$P(%ZH0,U,2),6),?47,"LWT=",$J($P(%ZH1,U,4)-$P(%ZH0,U,4),5)
"RTN","ZOSVMSM",138,0)
 W ?58,"TI=",$J($P(%ZH1,U,5)-$P(%ZH0,U,5),4),?67,"TO=",$J($P(%ZH1,U,6)-$P(%ZH0,U,6),5)
"RTN","ZOSVMSM",139,0)
 Q
"RTN","ZOSVMSM",140,0)
LOGRSRC(OPT) ;record resource usage in ^XUCP
"RTN","ZOSVMSM",141,0)
 Q:$$OSTYPE'=1
"RTN","ZOSVMSM",142,0)
 N C,H,I,J,U
"RTN","ZOSVMSM",143,0)
 S C=",",U="^",%=$$ZH^%MSMOPS,H=$P($H,C)_C_($V(#46C,-3,4)*5.4925\1/100)
"RTN","ZOSVMSM",144,0)
 I $P(H,",",2)\1#100=0 S J=$$HTFM^XLFDT($H,1),I=$$FMADD^XLFDT(J,365)_U_J,^XTMP("XUCP",0)=I
"RTN","ZOSVMSM",145,0)
 S ^XTMP("XUCP","NODNAM",$P(H,C),$J,$P(H,C,2))=$P(%,U)_U_$P(%,U,3)_U_$P(%,U,2)_U_$P(%,U,4,6)_U_OPT_U_($P(%,U,7)*100\1/100)
"RTN","ZOSVMSM",146,0)
 Q
"RTN","ZOSVMSM",147,0)
SETTRM(X) ;Set specified terminators.
"RTN","ZOSVMSM",148,0)
 U $I:(::::::::X)
"RTN","ZOSVMSM",149,0)
 Q 1
"RTN","ZOSVMSQ")
0^13^B11993153
"RTN","ZOSVMSQ",1,0)
%ZOSV ;SFISC/AC - $View commands for M/SQL (ISM VAX) systems.  ;12/15/95  08:53
"RTN","ZOSVMSQ",2,0)
 ;;8.0;KERNEL;**13**;Jul 03, 1995
"RTN","ZOSVMSQ",3,0)
ACTJ() ;
"RTN","ZOSVMSQ",4,0)
 N Y,% S Y=$V(204,-2,4),%="" F Y=0:1:Y-1 S %=$ZJ(%) Q:%=""
"RTN","ZOSVMSQ",5,0)
 Q Y
"RTN","ZOSVMSQ",6,0)
AVJ() ;
"RTN","ZOSVMSQ",7,0)
 Q 128-$$ACTJ()
"RTN","ZOSVMSQ",8,0)
PRIINQ() ;
"RTN","ZOSVMSQ",9,0)
 Q 8
"RTN","ZOSVMSQ",10,0)
UCI ;
"RTN","ZOSVMSQ",11,0)
 ;S Y=$V(4,-2,4)+348,Y=$V(Y+1,$J,-$V(Y,$J,1)) Q  ;***
"RTN","ZOSVMSQ",12,0)
 D ^%ST S Y=$V(%ST("DIR")+1,$J,-$V(%ST("DIR"),$J,1)) Q
"RTN","ZOSVMSQ",13,0)
 ;
"RTN","ZOSVMSQ",14,0)
UCICHECK(X) ;
"RTN","ZOSVMSQ",15,0)
 N Y,%
"RTN","ZOSVMSQ",16,0)
 S X=$P(X,",",1),Y=0,%=^%ZOSF("MGR"),%=$D(^[%]SYS("UCI",0)) F %=0:0 S Y=$O(^(Y)) Q:Y=""!(Y=X)
"RTN","ZOSVMSQ",17,0)
 Q Y
"RTN","ZOSVMSQ",18,0)
JOBPAR ;
"RTN","ZOSVMSQ",19,0)
 K ZJ S ZJ="" F Y=0:0 S ZJ=$ZJ(ZJ) Q:'$L(ZJ)  S ZJ(ZJ)=""
"RTN","ZOSVMSQ",20,0)
 ;S Y="" Q:'$D(ZJ(X))  S Y=$V($V(4,-2,4)+349,X,-$V($V(4,-2,4)+348,X,1)) K ZJ Q
"RTN","ZOSVMSQ",21,0)
 S Y="" Q:'$D(ZJ(X))  S Y=$P($V(-1,X),"^",5) K ZJ Q
"RTN","ZOSVMSQ",22,0)
 ;
"RTN","ZOSVMSQ",23,0)
T0 ; start RT clock
"RTN","ZOSVMSQ",24,0)
 S XRT0=$H Q
"RTN","ZOSVMSQ",25,0)
T1 ; store RT datum
"RTN","ZOSVMSQ",26,0)
 S ^%ZRTL(3,XRTL,+$H,XRTN,$P($H,",",2))=XRT0 K XRT0 Q
"RTN","ZOSVMSQ",27,0)
NOLOG ;
"RTN","ZOSVMSQ",28,0)
 S Y="$V(0,-2,4)\4096#2" Q
"RTN","ZOSVMSQ",29,0)
 ;
"RTN","ZOSVMSQ",30,0)
PRGMODE ;
"RTN","ZOSVMSQ",31,0)
 W ! S ZTPAC=$S('$D(^VA(200,+DUZ,.1)):"",1:$P(^(.1),U,5)),XUVOL=^%ZOSF("VOL")
"RTN","ZOSVMSQ",32,0)
 S X="" X ^%ZOSF("EOFF") R:ZTPAC]"" !,"PAC: ",X:60 D LC^XUS X ^%ZOSF("EON") I X'=ZTPAC W "??",*7 Q
"RTN","ZOSVMSQ",33,0)
 S XMB="XUPROGMODE",XMB(1)=DUZ,XMB(2)=$I D ^XMB:$L($T(^XMB)) D BYE^XUSCLEAN K ZTPAC,X,XMB
"RTN","ZOSVMSQ",34,0)
 D UCI S XUCI=Y,XQZ="PRGM^ZUA[MGR]",XUSLNT=1 D DO^%XUCI D ^%BJ X "ZR  B"
"RTN","ZOSVMSQ",35,0)
 Q
"RTN","ZOSVMSQ",36,0)
LGR() Q $ZR ;Last Global ref.
"RTN","ZOSVMSQ",37,0)
 ;
"RTN","ZOSVMSQ",38,0)
EC() Q $ZE ;Error code
"RTN","ZOSVMSQ",39,0)
 ;
"RTN","ZOSVMSQ",40,0)
DOLRO ;SAVE ENTIRE SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVMSQ",41,0)
 S Y="%" F %=0:0 S Y=$O(@Y) Q:Y=""  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVMSQ",42,0)
 Q
"RTN","ZOSVMSQ",43,0)
 ;
"RTN","ZOSVMSQ",44,0)
ORDER ;SAVE PART OF SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVMSQ",45,0)
 S (Y,Y1)=$P(Y,"*",1) I $D(@Y)=0 F %=0:0 S Y=$O(@Y) Q:Y=""!(Y[Y1)
"RTN","ZOSVMSQ",46,0)
 Q:Y=""  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVMSQ",47,0)
 F %=0:0 S Y=$O(@Y) Q:Y=""!(Y'[Y1)  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVMSQ",48,0)
 K %,X,Y,Y1 Q
"RTN","ZOSVMSQ",49,0)
 ;
"RTN","ZOSVMSQ",50,0)
PARSIZ ;
"RTN","ZOSVMSQ",51,0)
 S X=3 Q
"RTN","ZOSVMSQ",52,0)
 ;
"RTN","ZOSVMSQ",53,0)
DEVOPN ;List of Devices opened
"RTN","ZOSVMSQ",54,0)
 ;Returns variable Y. Y=Devices owned separated by a comma
"RTN","ZOSVMSQ",55,0)
 S X=$J
"RTN","ZOSVMSQ",56,0)
 N % S Y=$P($V(-1,$J),"^",3) F %=1:1:$L(Y,",") S $P(Y,",",%)=$P($P(Y,",",%),"*",1)
"RTN","ZOSVMSQ",57,0)
 Q
"RTN","ZOSVMSQ",58,0)
DEVOK ;
"RTN","ZOSVMSQ",59,0)
 I $G(X1)="RES" G RES
"RTN","ZOSVMSQ",60,0)
 I X=2 S Y=0 Q
"RTN","ZOSVMSQ",61,0)
 S $ZT="OPNERR"
"RTN","ZOSVMSQ",62,0)
 O X::$S($D(%ZISTO):%ZISTO,1:0) E  S Y=999 Q  ;G NOPN
"RTN","ZOSVMSQ",63,0)
 S Y=0 I '$D(%ZISCHK)!$S($D(%ZIS)#2:(%ZIS["T"),1:0) C X Q
"RTN","ZOSVMSQ",64,0)
 S:X]"" IO(1,X)="" Q
"RTN","ZOSVMSQ",65,0)
 Q
"RTN","ZOSVMSQ",66,0)
NOPN ;
"RTN","ZOSVMSQ",67,0)
 N ZJ S $ZT="NJ"
"RTN","ZOSVMSQ",68,0)
 S ZJ="" F %=0:0 S ZJ=$ZJ(ZJ) Q:'ZJ  D NOPN1 Q:'ZJ
"RTN","ZOSVMSQ",69,0)
 Q
"RTN","ZOSVMSQ",70,0)
NOPN1 S Y=$V(-1,ZJ) I $P(Y,"^",3)[X_","!($P(Y,"^",3)[X_"*,") S Y=ZJ,ZJ="" Q
"RTN","ZOSVMSQ",71,0)
 Q
"RTN","ZOSVMSQ",72,0)
NJ Q  ;NOJOB ERROR
"RTN","ZOSVMSQ",73,0)
OPNERR S Y=-1 Q
"RTN","ZOSVMSQ",74,0)
 ;
"RTN","ZOSVMSQ",75,0)
RES S Y=0,%ZISD0=$O(^%ZISL(3.54,"B",X,0))
"RTN","ZOSVMSQ",76,0)
 I '%ZISD0 S Y=-1,%ZISD0=%O(^%ZIS(1,"C",X)) Q:'%ZISD0  Q:'$D(^%ZIS(1,+%ZISD0,0))  Q:$P(^(0),"^")'=X  Q:'$D(^("TYPE"))  Q:^("TYPE")'="RES"  S Y=0 Q
"RTN","ZOSVMSQ",77,0)
 S X1=$S($D(^%ZISL(3.54,+%ZISD0,0)):^(0),1:"")
"RTN","ZOSVMSQ",78,0)
 I $P(X1,"^",2)&(X=$P(X1,"^")) S Y=0 Q
"RTN","ZOSVMSQ",79,0)
 S Y=999 F %ZISD1=0:0 S %ZISD1=$O(^%ZISL(3.54,%ZISD0,1,%ZISD1)) Q:%ZISD1'>0  I $D(^(%ZISD1,0)) S Y=$P(^(0),"^",3) Q
"RTN","ZOSVMSQ",80,0)
 K %ZISD0,%ZISD1
"RTN","ZOSVMSQ",81,0)
 Q
"RTN","ZOSVMSQ",82,0)
GETENV ;Get environment  (UCI^VOL^NODE)
"RTN","ZOSVMSQ",83,0)
 X ^%ZOSF("UCI") S Y=Y_"^"_^%ZOSF("VOL")_"^^"_^%ZOSF("VOL")
"RTN","ZOSVMSQ",84,0)
 Q
"RTN","ZOSVMSQ",85,0)
VERSION(X) ;return OS version, X=1 - return OS
"RTN","ZOSVMSQ",86,0)
 Q $S($G(X):$P($ZV," V"),1:$P($P($ZV," V",2)," "))
"RTN","ZOSVMSQ",87,0)
 ;
"RTN","ZOSVMSQ",88,0)
SETNM(X) ;Set name, Fall into SETENV
"RTN","ZOSVMSQ",89,0)
SETENV ;Set environment
"RTN","ZOSVMSQ",90,0)
 Q
"RTN","ZOSVMSQ",91,0)
 ;
"RTN","ZOSVMSQ",92,0)
HFSREW(IO,IOPAR) ;Rewind Host File.
"RTN","ZOSVMSQ",93,0)
 S $ZT="HFSRWERR"
"RTN","ZOSVMSQ",94,0)
 C IO O @(""""_IO_""""_$S(IOPAR]"":":"_IOPAR_":1",1:":1")) I '$T Q 0
"RTN","ZOSVMSQ",95,0)
 Q 1
"RTN","ZOSVMSQ",96,0)
HFSRWERR ;Error encountered
"RTN","ZOSVMSQ",97,0)
 Q 0
"RTN","ZOSVMSQ",98,0)
LOGRSRC(OPT) ;record resource usage in ^XUCP
"RTN","ZOSVMSQ",99,0)
 Q
"RTN","ZOSVVXD")
0^5^B16275771
"RTN","ZOSVVXD",1,0)
%ZOSV ;SFISC/AC - View commands & special functions. ;2/2/96  13:17
"RTN","ZOSVVXD",2,0)
 ;;8.0;KERNEL;**13**;Jul 05, 1995
"RTN","ZOSVVXD",3,0)
ACTJ() ; # active jobs
"RTN","ZOSVVXD",4,0)
 Q $P($$JOBS^%SY,",",2)
"RTN","ZOSVVXD",5,0)
 ;
"RTN","ZOSVVXD",6,0)
AVJ() ; # available jobs
"RTN","ZOSVVXD",7,0)
 N Y S Y=$$JOBS^%SY Q +Y-$P(Y,",",2)
"RTN","ZOSVVXD",8,0)
 ;
"RTN","ZOSVVXD",9,0)
T0 ; start RT clock
"RTN","ZOSVVXD",10,0)
 S %ZH0=$ZH,%=$P(%ZH0,",",3) S:$E($ZV,10,12)>5.1 %=$E(%,13,23) S XRT0=+$H_","_($P(%,":")*3600+($P(%,":",2)*60)+$P(%,":",3)) Q
"RTN","ZOSVVXD",11,0)
 ;
"RTN","ZOSVVXD",12,0)
T1 ; store RT datum w/ZHDIF
"RTN","ZOSVVXD",13,0)
 S %ZH1=$ZH,%=$P(%ZH1,",",3) S:$E($ZV,10,12)>5.1 %=$E(%,13,23) S XRT1=+$H_","_($P(%,":")*3600+($P(%,":",2)*60)+$P(%,":",3))
"RTN","ZOSVVXD",14,0)
 S ^%ZRTL(3,XRTL,+XRT1,XRTN,$P(XRT1,",",2))=XRT0_"^^"_($P(%ZH1,",")-$P(%ZH0,","))_"^"_($P(%ZH1,",",7)-$P(%ZH0,",",7))_"^"_($P(%ZH1,",",8)-$P(%ZH0,",",8)) K XRT0,%ZH0,%ZH1 Q
"RTN","ZOSVVXD",15,0)
 ;
"RTN","ZOSVVXD",16,0)
PASSALL ;
"RTN","ZOSVVXD",17,0)
 S Y=$ZC(%SPAWN,"SET TERM/PASTHRU "_$I) U $I:NOTERM Q
"RTN","ZOSVVXD",18,0)
NOPASS ;
"RTN","ZOSVVXD",19,0)
 S Y=$ZC(%SPAWN,"SET TERM/NOPASTHRU "_$I) U $I:TERM="" Q
"RTN","ZOSVVXD",20,0)
 ;
"RTN","ZOSVVXD",21,0)
PRGMODE ;
"RTN","ZOSVVXD",22,0)
 W ! S ZTPAC=$S($D(^VA(200,+DUZ,.1))#10:$P(^(.1),"^",5),1:""),XUVOL=^%ZOSF("VOL")
"RTN","ZOSVVXD",23,0)
 S X="" X ^%ZOSF("EOFF") R:ZTPAC]"" !,"PAC: ",X:60 D LC^XUS X ^%ZOSF("EON") I X'=ZTPAC W "??",*7 Q
"RTN","ZOSVVXD",24,0)
 S XMB="XUPROGMODE",XMB(1)=DUZ,XMB(2)=$I D ^XMB:$L($T(^XMB)) D BYE^XUSCLEAN K ZTPAC,X,XMB
"RTN","ZOSVVXD",25,0)
 I '$$PROGMODE() D UCI S XUCI=Y,XQZ="PRGM^ZUA[MGR]",XUSLNT=1 D DO^%XUCI ZESCAPE
"RTN","ZOSVVXD",26,0)
 E  S $ECODE=",<<PROG>>,"
"RTN","ZOSVVXD",27,0)
 ;
"RTN","ZOSVVXD",28,0)
PROGMODE() ;
"RTN","ZOSVVXD",29,0)
 Q ($V($V($V(0)))#2=0)
"RTN","ZOSVVXD",30,0)
 ;
"RTN","ZOSVVXD",31,0)
UCI ;
"RTN","ZOSVVXD",32,0)
 S Y=$ZC(%UCI),Y=$P(Y,",",1)_","_$P(Y,",",4) Q
"RTN","ZOSVVXD",33,0)
 ;
"RTN","ZOSVVXD",34,0)
UCICHECK(X) ;
"RTN","ZOSVVXD",35,0)
 N %,%1,U,V,Y
"RTN","ZOSVVXD",36,0)
 I '(X?3U!(X?3U1","3U)) Q ""
"RTN","ZOSVVXD",37,0)
 S U=$ZC(%UCI),V=$P(U,",",4),U=$P(U,","),%1=$P(X,",",2),%=$P(X,",")
"RTN","ZOSVVXD",38,0)
 S Y=$ZC(%SETUCI,%,%1),Y=$S(Y:%_","_$S(%1]"":%1,1:V),1:""),V=$ZC(%SETUCI,U,V)
"RTN","ZOSVVXD",39,0)
 Q Y
"RTN","ZOSVVXD",40,0)
 ;
"RTN","ZOSVVXD",41,0)
PRIORITY ;
"RTN","ZOSVVXD",42,0)
 Q:X>10!(X<1)  S X=(X+1)\2-1,Y=$ZC(%SETPRI,X) Q
"RTN","ZOSVVXD",43,0)
 ;
"RTN","ZOSVVXD",44,0)
PRIINQ() ;
"RTN","ZOSVVXD",45,0)
 Q $ZC(%GETJPI,0,"PRIB")*2+2
"RTN","ZOSVVXD",46,0)
 ;
"RTN","ZOSVVXD",47,0)
BAUD S X="UNKNOWN" Q
"RTN","ZOSVVXD",48,0)
 ;
"RTN","ZOSVVXD",49,0)
LGR() Q $ZR ;Last global ref.
"RTN","ZOSVVXD",50,0)
 ;
"RTN","ZOSVVXD",51,0)
EC() Q $ZE ;Error code
"RTN","ZOSVVXD",52,0)
 ;
"RTN","ZOSVVXD",53,0)
DOLRO ;SAVE ENTIRE SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVVXD",54,0)
 S Y="%" F  S Y=$ZSORT(@Y) Q:Y=""  D  ;code from DEC
"RTN","ZOSVVXD",55,0)
 . I $D(@Y)#2 S @(X_"Y)="_Y)
"RTN","ZOSVVXD",56,0)
 . I $D(@Y)>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVVXD",57,0)
 K %X,%Y,Y Q
"RTN","ZOSVVXD",58,0)
 ;
"RTN","ZOSVVXD",59,0)
ORDER ;SAVE PARTS OF SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVVXD",60,0)
 ;PARTS INDICATED BY X1("NAMESPACE*")="" ARRAY
"RTN","ZOSVVXD",61,0)
 I $D(X1("*"))#2 D DOLRO Q
"RTN","ZOSVVXD",62,0)
 S X1="" F  S X1=$O(X1(X1)) Q:X1=""  D
"RTN","ZOSVVXD",63,0)
 . S (Y,Y1)=$P(X1,"*") I $D(@Y)=0 F  S Y=$ZSORT(@Y) Q:Y=""!(Y[Y1)
"RTN","ZOSVVXD",64,0)
 . Q:Y=""  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVVXD",65,0)
 . F  S Y=$ZSORT(@Y) Q:Y=""!(Y'[Y1)  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVVXD",66,0)
 . Q
"RTN","ZOSVVXD",67,0)
 K %,%X,%Y,Y,Y1 Q
"RTN","ZOSVVXD",68,0)
 ;
"RTN","ZOSVVXD",69,0)
PARSIZ ;
"RTN","ZOSVVXD",70,0)
 S X=3 Q
"RTN","ZOSVVXD",71,0)
 ;
"RTN","ZOSVVXD",72,0)
NOLOG ;
"RTN","ZOSVVXD",73,0)
 S Y=0 Q
"RTN","ZOSVVXD",74,0)
 ;
"RTN","ZOSVVXD",75,0)
DEVOPN G DEVOPN^%ZOSV1
"RTN","ZOSVVXD",76,0)
DEVOK G DEVOK^%ZOSV1
"RTN","ZOSVVXD",77,0)
RES G RES^%ZOSV1
"RTN","ZOSVVXD",78,0)
 ;
"RTN","ZOSVVXD",79,0)
GETENV ;Get environment Return Y='UCI^VOL/DIR^NODE^BOX LOOKUP'
"RTN","ZOSVVXD",80,0)
 S Y=$P($ZU(0),",",1)_"^"_$P($ZU(0),",",2)_"^"_$P($ZC(%GETSYI),",",4)
"RTN","ZOSVVXD",81,0)
 S $P(Y,"^",4)=$P(Y,"^",2)_":"_$P(Y,"^",3)
"RTN","ZOSVVXD",82,0)
 Q
"RTN","ZOSVVXD",83,0)
VERSION(X) ;return OS version, X=1 - return OS
"RTN","ZOSVVXD",84,0)
 Q $S($G(X):$P($ZV," V"),1:$P($ZV," V",2))
"RTN","ZOSVVXD",85,0)
 ;
"RTN","ZOSVVXD",86,0)
SETNM(X) ;Set name, Trap dup's, Fall into SETENV
"RTN","ZOSVVXD",87,0)
 N $ETRAP S $ETRAP="S $ECODE="""" Q"
"RTN","ZOSVVXD",88,0)
SETENV ;Set environment X='PROCESS NAME^ '
"RTN","ZOSVVXD",89,0)
 S %=$ZC(%SETPRN,$P(X,"^")) Q
"RTN","ZOSVVXD",90,0)
 ;
"RTN","ZOSVVXD",91,0)
ZHDIF ;Display dif of two $ZH's
"RTN","ZOSVVXD",92,0)
 W !," CPU=",$J($P(%ZH1,",")-$P(%ZH0,","),6,2),?14," ET=",$J($P(%ZH1,",",2)-$P(%ZH0,",",2),6,1),?27," DIO=",$J($P(%ZH1,",",7)-$P(%ZH0,",",7),5),?40," BIO=",$J($P(%ZH1,",",8)-$P(%ZH0,",",8),5),! Q
"RTN","ZOSVVXD",93,0)
 ;
"RTN","ZOSVVXD",94,0)
LOGRSRC(OPT) ;record resource usage in ^XTMP("XUCP"
"RTN","ZOSVVXD",95,0)
 N %,%D,%H,%M,%Y,C,H,U,X S C=",",U="^",%=$ZH,H=$P(%,C,3) S:$E($ZV,10,12)>5.1 H=$E(H,13,23) S H=$P($H,C)_C_($P(H,":")*3600+($P(H,":",2)*60)+$P(H,":",3))
"RTN","ZOSVVXD",96,0)
 S ^XTMP("XUCP",$P($ZC(%GETSYI),C,4),$P(H,C),$J,$P(H,C,2))=$P(%,C)_U_$P(%,C,7)_U_$P(%,C,8)_U_$P(%,C,4)_U_OPT_U_$P(%,C,3)
"RTN","ZOSVVXD",97,0)
 S %H=$H I $P(%H,C,2)#1000=0 S %=%H>21608+%H-.1,%Y=%\365.25+141,%=%#365.25\1,%D=%+306#(%Y#4=0+365)#153#61#31+1,%M=%-%D\29+1,X=%Y_"00"+%M_"00"+%D,^XTMP("XUCP",0)=X+10000_U_X
"RTN","ZOSVVXD",98,0)
 Q
"RTN","ZOSVVXD",99,0)
 ;
"RTN","ZOSVVXD",100,0)
SETTRM(X) ;Turn on specified terminators.
"RTN","ZOSVVXD",101,0)
 U $I:TERM=X
"RTN","ZOSVVXD",102,0)
 Q 1
"RTN","ZUDTM")
0^11^B4340681
"RTN","ZUDTM",1,0)
ZU ;SF/GFT - For DTM, TIE ALL TERMINALS EXCEPT CONSOLE TO THIS ROUTINE!! ;10/31/95  09:51
"RTN","ZUDTM",2,0)
 ;;8.0;KERNEL;**13**;Jul 10, 1995
"RTN","ZUDTM",3,0)
 ; *** For DataTree ***
"RTN","ZUDTM",4,0)
EN S $ZT="ERR^ZU"
"RTN","ZUDTM",5,0)
 ZITRAP CTRLC^ZU
"RTN","ZUDTM",6,0)
 S ZUGUI2=($I=1),ZUGUI=$G(ZUGUI1)&$G(ZUGUI2)
"RTN","ZUDTM",7,0)
 G ^XUS
"RTN","ZUDTM",8,0)
 ;
"RTN","ZUDTM",9,0)
G ;Entry Point for GUI devices
"RTN","ZUDTM",10,0)
 S ZUGUI1=1 G EN
"RTN","ZUDTM",11,0)
ERR S $ZT="" L  ;Come here on error, save Y and $ZR
"RTN","ZUDTM",12,0)
 S ZUY=$S($D(Y)#2:Y,1:"undefined"),ZUZR=$ZR 
"RTN","ZUDTM",13,0)
 B 0 X ^%ZOSF("PROGMODE") Q:Y
"RTN","ZUDTM",14,0)
 S $ZT="HALT^ZU"
"RTN","ZUDTM",15,0)
 I $G(IO)]"",$D(IO(1,IO)),$E($G(IOST))="P" U IO W @$S($D(IOF):IOF,1:"#")
"RTN","ZUDTM",16,0)
 G:$ZE["<INRPT>" CTRLC
"RTN","ZUDTM",17,0)
 I $ZE["NOPEN>^XUS" I $D(XUEXIT),XUEXIT D C^XUS H  ; Trap <NOPEN> which appears to be due to modem control and breaking micom connection without logging it in ^%ZTER
"RTN","ZUDTM",18,0)
 I $D(IO)=11 U IO(0) W !!,"RECORDING THAT AN ERROR OCCURED ---",!!?10,$ZE,!!?15,"Sorry 'bout that",!!,*7
"RTN","ZUDTM",19,0)
 S %ZTERLRG=$ZR,%ZT("^XUTL(""XQ"",$J)")="" D ^%ZTER K %ZT S XUERF="" ; Capture symbol table first!
"RTN","ZUDTM",20,0)
 I $G(DUZ)'>0 HALT
"RTN","ZUDTM",21,0)
 ;
"RTN","ZUDTM",22,0)
CTRLC I $D(IO)=11 U IO(0) C:IO'=IO(0) IO S IO=IO(0)
"RTN","ZUDTM",23,0)
 W:$ZE["<INRPT>" !,"--Interrupt Acknowledged",!
"RTN","ZUDTM",24,0)
CTRLC2 G:$G(^XUTL("XQ",$J,"T"))<2 ^XUSCLEAN
"RTN","ZUDTM",25,0)
 S ^XUTL("XQ",$J,"T")=1,XQY=^(1),XQY0=$P(XQY,"^",2,99)
"RTN","ZUDTM",26,0)
 G:$P(XQY0,"^",4)'="M" CTRLC2
"RTN","ZUDTM",27,0)
 S XQPSM=$P(XQY,"^",1),XQY=+XQPSM,XQPSM=$P(XQPSM,XQY,2,3)
"RTN","ZUDTM",28,0)
 G:'XQY ^XUSCLEAN
"RTN","ZUDTM",29,0)
 S $ZT="ERR^ZU" G M1^XQ
"RTN","ZUDTM",30,0)
 ;
"RTN","ZUDTM",31,0)
HALT S $ZT="" I $D(^XUTL("XQ",$J)) D BYE^XUSCLEAN
"RTN","ZUDTM",32,0)
 HALT
"RTN","ZUDTM",33,0)
 ;
"RTN","ZUMSM")
0^10^B3068731
"RTN","ZUMSM",1,0)
ZU ;SF/GFT - For MSM, TIE ALL TERMINALS EXCEPT CONSOLE TO THIS ROUTINE!! ;02/06/96  08:21
"RTN","ZUMSM",2,0)
 ;;8.0;KERNEL;**13**;Jul 10, 1995
"RTN","ZUMSM",3,0)
 ;FOR MSM-DOS and MSM-UNIX
"RTN","ZUMSM",4,0)
EN S $ZT="ERR^ZU",ZUGUI2=$$GUI()
"RTN","ZUMSM",5,0)
 ;The next line keeps sign-on users from taking the last slot
"RTN","ZUMSM",6,0)
 ;It can be commented out if not needed.
"RTN","ZUMSM",7,0)
JOBCHK X ^%ZOSF("AVJ") I Y<3 W $C(7),!!,"** TROUBLE ** - ** CALL IRM NOW! **" G HALT
"RTN","ZUMSM",8,0)
 G ^XUSG:$G(ZUGUI1),^XUS
"RTN","ZUMSM",9,0)
 ;
"RTN","ZUMSM",10,0)
G ;Entry point for GUI device.
"RTN","ZUMSM",11,0)
 S ZUGUI1=1 G EN
"RTN","ZUMSM",12,0)
 ;
"RTN","ZUMSM",13,0)
ERR S $ZT="HALT^ZU" L  ;Come here on error.
"RTN","ZUMSM",14,0)
 B 0 ;Turn off break
"RTN","ZUMSM",15,0)
 S %ZTERLGR=$ZR,%ZT("^XUTL(""XQ"",$J)")="" D ^%ZTER
"RTN","ZUMSM",16,0)
 I $G(IO)]"",$D(IO(1,IO)),$E($G(IOST))="P" U IO W @$S($D(IOF):IOF,1:"#")
"RTN","ZUMSM",17,0)
 I $G(IO(0))]"" U IO(0) W !!,"RECORDING THAT AN ERROR OCCURRED ---",!!?15,"Sorry 'bout that",!,*7,!?10,"$ZERROR=",$ZERROR
"RTN","ZUMSM",18,0)
 X ^%ZOSF("PROGMODE") Q:Y  S $ZT="HALT^ZU"
"RTN","ZUMSM",19,0)
 I $ZE'["<INRPT>" S XUERF="" G ^XUSCLEAN
"RTN","ZUMSM",20,0)
CTRLC I $D(IO)=11 U IO(0) W !,"--Interrupt Acknowledged",!
"RTN","ZUMSM",21,0)
 D KILL1^XUSCLEAN ;Clean up symbol table
"RTN","ZUMSM",22,0)
 ;
"RTN","ZUMSM",23,0)
CTRLC2 G:$G(^XUTL("XQ",$J,"T"))<2 ^XUSCLEAN
"RTN","ZUMSM",24,0)
 S ^XUTL("XQ",$J,"T")=1,XQY=^(1),XQY0=$P(XQY,"^",2,99)
"RTN","ZUMSM",25,0)
 G:$P(XQY0,"^",4)'="M" CTRLC2
"RTN","ZUMSM",26,0)
 S XQPSM=$P(XQY,"^",1),XQY=+XQPSM,XQPSM=$P(XQPSM,XQY,2,3)
"RTN","ZUMSM",27,0)
 G:'XQY ^XUSCLEAN
"RTN","ZUMSM",28,0)
 S $ZT="ERR^ZU" G M1^XQ
"RTN","ZUMSM",29,0)
 ;
"RTN","ZUMSM",30,0)
HALT S $ZT="" I $D(^XUTL("XQ",$J)) D BYE^XUSCLEAN
"RTN","ZUMSM",31,0)
 HALT
"RTN","ZUMSM",32,0)
 ;
"RTN","ZUMSM",33,0)
GUI() ;Test if under GUI
"RTN","ZUMSM",34,0)
 S $ZT="GUIX",X="" G:$PD'=1 GUIX
"RTN","ZUMSM",35,0)
 S X=$G(^$DI($PD,"PLATFORM"))
"RTN","ZUMSM",36,0)
GUIX Q X
"RTN","ZUMSQ")
0^12^B1776863
"RTN","ZUMSQ",1,0)
ZU ;SF/GFT - For M/SQL, TIE ALL TERMINALS EXCEPT CONSOLE TO THIS ROUTINE!! ;10/31/95  09:53
"RTN","ZUMSQ",2,0)
 ;;8.0;KERNEL;**13**;Jul 10, 1995
"RTN","ZUMSQ",3,0)
 ;FOR M/SQL
"RTN","ZUMSQ",4,0)
EN S $ZS=96
"RTN","ZUMSQ",5,0)
 S $ZT="ERR^ZU"
"RTN","ZUMSQ",6,0)
 S ZUGUI=$G(ZUGUI1)&$G(ZUGUI2) K ZUGUI1,ZUGUI2
"RTN","ZUMSQ",7,0)
 G ^XUSG:ZUGUI,^XUS
"RTN","ZUMSQ",8,0)
 ;
"RTN","ZUMSQ",9,0)
G ;Entry point for GUI device.
"RTN","ZUMSQ",10,0)
 S ZUGUI1=1 G EN
"RTN","ZUMSQ",11,0)
 ;
"RTN","ZUMSQ",12,0)
ERR X ^%ZOSF("NBRK") S $ZT="HALT^ZU" L  ;Come here on a error
"RTN","ZUMSQ",13,0)
 I $G(IO)]"",$D(IO(1,IO)),$E($G(IOST))="P" U IO W @$S($D(IOF):IOF,1:"#")
"RTN","ZUMSQ",14,0)
 I $G(IO(0))]"" U IO(0) W !!,"RECORDING THAT AN ERROR OCCURRED ---",!!?15,"Sorry 'bout that",!,*7,!?10,"$ZERROR=",$ZERROR
"RTN","ZUMSQ",15,0)
 S %ZTERLGR="" D ^%ZTER
"RTN","ZUMSQ",16,0)
 I $ZE'["<INTERRUPT>" G ^XUSCLEAN
"RTN","ZUMSQ",17,0)
CTRLC W !,"--Interupt Acknowledged",!
"RTN","ZUMSQ",18,0)
 S Y=^XUTL("XQ",$J,^XUTL("XQ",$J,"T")-1),Y(0)=$P(Y,"^",2,99),Y=$P("^",1)
"RTN","ZUMSQ",19,0)
 S $ZT="ERR^ZU" G M1^XQ
"RTN","ZUMSQ",20,0)
 ;
"RTN","ZUMSQ",21,0)
HALT S $ZT="" I $D(^XUTL("XQ",$J)) D BYE^XUSCLEAN
"RTN","ZUMSQ",22,0)
 HALT
"RTN","ZUVXD")
0^9^B9736967
"RTN","ZUVXD",1,0)
ZU ;SF/JLI,RWF - For DSM, TIE ALL TERMINALS TO THIS ROUTINE!! ;1/23/96  09:28
"RTN","ZUVXD",2,0)
 ;;8.0;KERNEL;**13**;Jul 10, 1995
"RTN","ZUVXD",3,0)
 ;FOR VAX-DSM V5 & V6
"RTN","ZUVXD",4,0)
EN ;I '$D(X) X ^%ZOSF("PROGMODE") I 'Y,$&ZLIB.%GETJPI($J,"CPUTIM")<400 D  
"RTN","ZUVXD",5,0)
 ;. S %=$&ZLIB.%GETJPI($J,"LOGINTIM"),%ZH0="0,,"_%_",,,,0,0"
"RTN","ZUVXD",6,0)
 ;. S:$E($ZV,10,12)>5.1 %=$E(%,13,23) S XRT0=+$H_","_($P(%,":")*3600+($P(%,":",2)*60)+$P(%,":",3)),XRTL=$ZU(0),XRTN=$T(+0) D T1^%ZOSV
"RTN","ZUVXD",7,0)
 S X=$&ZLIB.%DISABLCTRL($C(25)) U $I:NOCENABLE
"RTN","ZUVXD",8,0)
 I $D(^XTV(8989.3,1,"XUCP")),^("XUCP")="Y" D LOGRSRC^%ZOSV("DSMIN")
"RTN","ZUVXD",9,0)
 S ZUGUI2=$&ZLIB.%TRNLNM("DECW$DISPLAY",,,,,"VALUE")
"RTN","ZUVXD",10,0)
 N $ESTACK,$ETRAP S $ETRAP="S %ZTER11S=$STACK D ERR^ZU Q:$QUIT 0 Q"
"RTN","ZUVXD",11,0)
 G ^XUSG:$G(ZUGUI1),^XUS
"RTN","ZUVXD",12,0)
 ;
"RTN","ZUVXD",13,0)
G ;Entry point for GUI device.
"RTN","ZUVXD",14,0)
 S ZUGUI1=1 G EN
"RTN","ZUVXD",15,0)
ERR ;Come here on error
"RTN","ZUVXD",16,0)
 S $ETRAP="D UNWIND^ZU" L  U $I:NOCENABLE
"RTN","ZUVXD",17,0)
 Q:$ECODE["<PROG>"
"RTN","ZUVXD",18,0)
 I $ZE["^XUS1A:2, %DSM-E-WRITERR" G HALT
"RTN","ZUVXD",19,0)
 I $G(IO)]"",$D(IO(1,IO)),$E($G(IOST))="P" U IO W @$S($D(IOF):IOF,1:"#")
"RTN","ZUVXD",20,0)
 I $G(IO(0))]"" U IO(0) W !!,"RECORDING THAT AN ERROR OCCURRED ---",!!?15,"Sorry 'bout that",!,*7,!?10,"$STACK=",$STACK,"  $ECODE=",$ECODE,!?10,"$ZERROR=",$ZERROR
"RTN","ZUVXD",21,0)
 S %ZTERLGR=$ZR,%ZT("^XUTL(""XQ"",$J)")="" D ^%ZTER K %ZT S XUERF="" ; Capture symbol table first!
"RTN","ZUVXD",22,0)
 I $D(%ZTERROR),$P(%ZTERROR,"^",2)="F" H  ; Halt immediately for disaster type FATAL errors
"RTN","ZUVXD",23,0)
 ;U $I:NOCENABLE D PROGMODE^%ZOSV I Y U $I:CENABLE Q
"RTN","ZUVXD",24,0)
 I $G(DUZ)'>0 HALT
"RTN","ZUVXD",25,0)
 ;
"RTN","ZUVXD",26,0)
CTRLC I $D(IO)=11 U IO(0) C:IO'=IO(0) IO S IO=IO(0)
"RTN","ZUVXD",27,0)
 W:$ZE["-CTLC" !,"--Interrupt Acknowledged",!
"RTN","ZUVXD",28,0)
 D KILL1^XUSCLEAN ;Clean up symbol table
"RTN","ZUVXD",29,0)
 S $ECODE=",<<POP>>,"
"RTN","ZUVXD",30,0)
 Q
"RTN","ZUVXD",31,0)
 ;
"RTN","ZUVXD",32,0)
UNWIND ;Unwind the stack
"RTN","ZUVXD",33,0)
 Q:$ESTACK>1  G CONT:$ECODE["<<HALT>>",CTRLC2:$ECODE["<<POP>>"
"RTN","ZUVXD",34,0)
 S $ECODE=""
"RTN","ZUVXD",35,0)
 Q
"RTN","ZUVXD",36,0)
 ;
"RTN","ZUVXD",37,0)
CTRLC2 S $ECODE="" G:$G(^XUTL("XQ",$J,"T"))<2 ^XUSCLEAN
"RTN","ZUVXD",38,0)
 S ^XUTL("XQ",$J,"T")=1,XQY=$G(^(1)),XQY0=$P(XQY,"^",2,99)
"RTN","ZUVXD",39,0)
 G:$P(XQY0,"^",4)'="M" CTRLC2
"RTN","ZUVXD",40,0)
 S XQPSM=$P(XQY,"^",1),XQY=+XQPSM,XQPSM=$P(XQPSM,XQY,2,3)
"RTN","ZUVXD",41,0)
 G:'XQY ^XUSCLEAN
"RTN","ZUVXD",42,0)
 S $ECODE="",$ETRAP="S %ZTER11S=$STACK D ERR^ZU Q:$QUIT 0 Q" G M1^XQ
"RTN","ZUVXD",43,0)
 ;
"RTN","ZUVXD",44,0)
HALT I $D(^XUTL("XQ",$J)) D:$D(DUZ)#2 BYE^XUSCLEAN
"RTN","ZUVXD",45,0)
 I '$ESTACK G CONT
"RTN","ZUVXD",46,0)
 S $ETRAP="D UNWIND^ZU" ;Set new trap
"RTN","ZUVXD",47,0)
 S $ECODE=",<<HALT>>," ;Cause error to unwind stack
"RTN","ZUVXD",48,0)
 Q
"RTN","ZUVXD",49,0)
CONT ;
"RTN","ZUVXD",50,0)
 S $ECODE="",$ETRAP=""
"RTN","ZUVXD",51,0)
 I $D(^XTV(8989.3,1,"XUCP")),^("XUCP")="Y" D LOGRSRC^%ZOSV("DSMOUT")
"RTN","ZUVXD",52,0)
 I $&ZLIB.%GETSYM("DHCP$UCI_CHANGE") HALT  ;User changed UCI's
"RTN","ZUVXD",53,0)
 I $L($&ZLIB.%GETSYM("ZSLOT")) QUIT  ;Quit upto ZSLOT
"RTN","ZUVXD",54,0)
 S %=$&ZLIB.%GETDVI($I,"TT_DIALUP") I %!$D(XQXFLG("HALT")) HALT
"RTN","ZUVXD",55,0)
 S X="Waiting "_($J#1000000) D SETENV^%ZOSV ;Change VMS name
"RTN","ZUVXD",56,0)
 U $I:NOCENABLE R !,"Enter return to continue: ",X:600 S:'$T X="^" G:X'="^" ^ZU
"RTN","ZUVXD",57,0)
 I $D(^XTV(8989.3,1,"XUCP")),^("XUCP")="Y" D LOGRSRC^%ZOSV("DSMHALT")
"RTN","ZUVXD",58,0)
 HALT
"RTN","ZUVXD",59,0)
SLOT ;Entry point from ZSLOT
"RTN","ZUVXD",60,0)
 N ZIO,ZTIME
"RTN","ZUVXD",61,0)
 D LOG G EN
"RTN","ZUVXD",62,0)
 ;
"RTN","ZUVXD",63,0)
LOG ;Define some nessary Logical names for ZSLOT
"RTN","ZUVXD",64,0)
 S %=$&ZLIB.%CRELOG("SYS$INPUT",$I,"SUPERVISOR")
"RTN","ZUVXD",65,0)
 S %=$&ZLIB.%CRELOG("SYS$OUTPUT",$I,"SUPERVISOR")
"RTN","ZUVXD",66,0)
 S %=$&ZLIB.%CRELOG("SYS$COMMAND",$I,"SUPERVISOR")
"RTN","ZUVXD",67,0)
 Q
"VER")
8.0^21.0
"^DD",4.1,4.1,0)
FIELD^^2^3
"^DD",4.1,4.1,0,"DDA")
N
"^DD",4.1,4.1,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",4.1,4.1,0,"IX","B",4.1,.01)

"^DD",4.1,4.1,0,"IX","C",4.1,1)

"^DD",4.1,4.1,0,"NM","FACILITY TYPE")

"^DD",4.1,4.1,0,"PT",4,13)

"^DD",4.1,4.1,.01,0)
NAME^RF^^0;1^K:$L(X)>11!($L(X)<1)!'(X'?1P.E) X
"^DD",4.1,4.1,.01,.1)
Type Code
"^DD",4.1,4.1,.01,1,0)
^.1
"^DD",4.1,4.1,.01,1,1,0)
4.1^B
"^DD",4.1,4.1,.01,1,1,1)
S ^DIC(4.1,"B",$E(X,1,30),DA)=""
"^DD",4.1,4.1,.01,1,1,2)
K ^DIC(4.1,"B",$E(X,1,30),DA)
"^DD",4.1,4.1,.01,3)
Answer must be 1-11 characters in length.
"^DD",4.1,4.1,.01,21,0)
^^1^1^2920518^^
"^DD",4.1,4.1,.01,21,1,0)
This is the Facility type code.
"^DD",4.1,4.1,.01,"DT")
2890502
"^DD",4.1,4.1,1,0)
FULL NAME^F^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>45!($L(X)<3) X
"^DD",4.1,4.1,1,1,0)
^.1
"^DD",4.1,4.1,1,1,1,0)
4.1^C
"^DD",4.1,4.1,1,1,1,1)
S ^DIC(4.1,"C",$E(X,1,30),DA)=""
"^DD",4.1,4.1,1,1,1,2)
K ^DIC(4.1,"C",$E(X,1,30),DA)
"^DD",4.1,4.1,1,3)
Answer must be 3-45 characters in length.
"^DD",4.1,4.1,1,21,0)
^^1^1^2920518^^
"^DD",4.1,4.1,1,21,1,0)
This is the full name of the facility type code.
"^DD",4.1,4.1,2,0)
TITLE^F^^0;3^K:$L(X)>45!($L(X)<3) X
"^DD",4.1,4.1,2,3)
Answer must be 3-45 characters in length.
"^DD",4.1,4.1,2,21,0)
^^1^1^2920518^^^
"^DD",4.1,4.1,2,21,1,0)
Reserved
"^DD",4.1,4.1,2,"DT")
2890502
"^DIC",4.1,4.1,0)
FACILITY TYPE^4.1I
"^DIC",4.1,4.1,0,"GL")
^DIC(4.1,
"^DIC",4.1,4.1,"%",0)
^1.005^1^1
"^DIC",4.1,4.1,"%",1,0)
XU
"^DIC",4.1,4.1,"%","B","XU",1)

"^DIC",4.1,4.1,"%D",0)
^^5^5^2950306^^^
"^DIC",4.1,4.1,"%D",1,0)
This file is pointed to by the Institution File.  It containes a list
"^DIC",4.1,4.1,"%D",2,0)
of facility codes that had previously been stored in the VA Type Code
"^DIC",4.1,4.1,"%D",3,0)
field of the Institution File.  This file is distributed with data,
"^DIC",4.1,4.1,"%D",4,0)
and the new data should overwrite the old. It is cross-referenced by name
"^DIC",4.1,4.1,"%D",5,0)
and full name.
"^DIC",4.1,"B","FACILITY TYPE",4.1)

**END**
**END**
