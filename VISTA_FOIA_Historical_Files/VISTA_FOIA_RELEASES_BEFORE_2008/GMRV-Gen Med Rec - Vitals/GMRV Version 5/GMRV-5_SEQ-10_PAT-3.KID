Released GMRV*5*3 SEQ #10
Extracted from mail message
**KIDS**:GMRV*5.0*3^

**INSTALL NAME**
GMRV*5.0*3
"BLD",4897,0)
GMRV*5.0*3^GEN. MED. REC. - VITALS^0^3060320^y
"BLD",4897,1,0)
^^2^2^3040405^
"BLD",4897,1,1,0)
Please read the GMRV*5*3 patch description on FORUM for an explanation of
"BLD",4897,1,2,0)
what this patch does.
"BLD",4897,4,0)
^9.64PA^^
"BLD",4897,6.3)
12
"BLD",4897,"ABNS",0)
^9.66A^^
"BLD",4897,"ABPKG")
n^n
"BLD",4897,"INIT")
GMV3PST
"BLD",4897,"KRN",0)
^9.67PA^8989.52^19
"BLD",4897,"KRN",.4,0)
.4
"BLD",4897,"KRN",.401,0)
.401
"BLD",4897,"KRN",.402,0)
.402
"BLD",4897,"KRN",.403,0)
.403
"BLD",4897,"KRN",.5,0)
.5
"BLD",4897,"KRN",.84,0)
.84
"BLD",4897,"KRN",3.6,0)
3.6
"BLD",4897,"KRN",3.8,0)
3.8
"BLD",4897,"KRN",9.2,0)
9.2
"BLD",4897,"KRN",9.8,0)
9.8
"BLD",4897,"KRN",9.8,"NM",0)
^9.68A^19^19
"BLD",4897,"KRN",9.8,"NM",1,0)
GMVRPCU^^0^5383241
"BLD",4897,"KRN",9.8,"NM",2,0)
GMV3PST^^0^13164837
"BLD",4897,"KRN",9.8,"NM",3,0)
GMVUTL8^^0^6643593
"BLD",4897,"KRN",9.8,"NM",4,0)
GMVLAT0^^0^31312749
"BLD",4897,"KRN",9.8,"NM",5,0)
GMVRPCP^^0^28561668
"BLD",4897,"KRN",9.8,"NM",6,0)
GMVGGR2^^0^16803927
"BLD",4897,"KRN",9.8,"NM",7,0)
GMVGGR1^^0^19172168
"BLD",4897,"KRN",9.8,"NM",8,0)
GMVHS^^0^58476565
"BLD",4897,"KRN",9.8,"NM",9,0)
GMVHS1^^0^8049761
"BLD",4897,"KRN",9.8,"NM",10,0)
GMVGETD^^0^11418226
"BLD",4897,"KRN",9.8,"NM",11,0)
GMVUTL7^^0^23154796
"BLD",4897,"KRN",9.8,"NM",12,0)
GMVDCSAV^^0^19942469
"BLD",4897,"KRN",9.8,"NM",13,0)
GMVUTL3^^0^5324263
"BLD",4897,"KRN",9.8,"NM",14,0)
GMVGETQ^^0^5211254
"BLD",4897,"KRN",9.8,"NM",15,0)
GMVUTL1^^0^5125108
"BLD",4897,"KRN",9.8,"NM",16,0)
GMVPAR^^0^4978105
"BLD",4897,"KRN",9.8,"NM",17,0)
GMVRPCHL^^0^17869735
"BLD",4897,"KRN",9.8,"NM",18,0)
GMVBMI^^0^5347673
"BLD",4897,"KRN",9.8,"NM",19,0)
GMVRPCM^^0^72972413
"BLD",4897,"KRN",9.8,"NM","B","GMV3PST",2)

"BLD",4897,"KRN",9.8,"NM","B","GMVBMI",18)

"BLD",4897,"KRN",9.8,"NM","B","GMVDCSAV",12)

"BLD",4897,"KRN",9.8,"NM","B","GMVGETD",10)

"BLD",4897,"KRN",9.8,"NM","B","GMVGETQ",14)

"BLD",4897,"KRN",9.8,"NM","B","GMVGGR1",7)

"BLD",4897,"KRN",9.8,"NM","B","GMVGGR2",6)

"BLD",4897,"KRN",9.8,"NM","B","GMVHS",8)

"BLD",4897,"KRN",9.8,"NM","B","GMVHS1",9)

"BLD",4897,"KRN",9.8,"NM","B","GMVLAT0",4)

"BLD",4897,"KRN",9.8,"NM","B","GMVPAR",16)

"BLD",4897,"KRN",9.8,"NM","B","GMVRPCHL",17)

"BLD",4897,"KRN",9.8,"NM","B","GMVRPCM",19)

"BLD",4897,"KRN",9.8,"NM","B","GMVRPCP",5)

"BLD",4897,"KRN",9.8,"NM","B","GMVRPCU",1)

"BLD",4897,"KRN",9.8,"NM","B","GMVUTL1",15)

"BLD",4897,"KRN",9.8,"NM","B","GMVUTL3",13)

"BLD",4897,"KRN",9.8,"NM","B","GMVUTL7",11)

"BLD",4897,"KRN",9.8,"NM","B","GMVUTL8",3)

"BLD",4897,"KRN",19,0)
19
"BLD",4897,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",4897,"KRN",19,"NM",1,0)
GMV V/M GUI^^0
"BLD",4897,"KRN",19,"NM","B","GMV V/M GUI",1)

"BLD",4897,"KRN",19.1,0)
19.1
"BLD",4897,"KRN",101,0)
101
"BLD",4897,"KRN",409.61,0)
409.61
"BLD",4897,"KRN",771,0)
771
"BLD",4897,"KRN",870,0)
870
"BLD",4897,"KRN",870,"NM",0)
^9.68A^^
"BLD",4897,"KRN",8989.51,0)
8989.51
"BLD",4897,"KRN",8989.51,"NM",0)
^9.68A^1^1
"BLD",4897,"KRN",8989.51,"NM",1,0)
GMV DLL VERSION^^0
"BLD",4897,"KRN",8989.51,"NM","B","GMV DLL VERSION",1)

"BLD",4897,"KRN",8989.52,0)
8989.52
"BLD",4897,"KRN",8994,0)
8994
"BLD",4897,"KRN",8994,"NM",0)
^9.68A^16^16
"BLD",4897,"KRN",8994,"NM",1,0)
GMV DLL VERSION^^0
"BLD",4897,"KRN",8994,"NM",2,0)
GMV ADD VM^^0
"BLD",4897,"KRN",8994,"NM",3,0)
GMV CONVERT DATE^^0
"BLD",4897,"KRN",8994,"NM",4,0)
GMV GET CATEGORY IEN^^0
"BLD",4897,"KRN",8994,"NM",5,0)
GMV GET CURRENT TIME^^0
"BLD",4897,"KRN",8994,"NM",6,0)
GMV GET VITAL TYPE IEN^^0
"BLD",4897,"KRN",8994,"NM",7,0)
GMV LATEST VM^^0
"BLD",4897,"KRN",8994,"NM",8,0)
GMV MANAGER^^0
"BLD",4897,"KRN",8994,"NM",9,0)
GMV PARAMETER^^0
"BLD",4897,"KRN",8994,"NM",10,0)
GMV USER^^0
"BLD",4897,"KRN",8994,"NM",11,0)
GMV VITALS/CAT/QUAL^^0
"BLD",4897,"KRN",8994,"NM",12,0)
GMV V/M ALLDATA^^0
"BLD",4897,"KRN",8994,"NM",13,0)
GMV EXTRACT REC^^0
"BLD",4897,"KRN",8994,"NM",14,0)
GMV MARK ERROR^^0
"BLD",4897,"KRN",8994,"NM",15,0)
GMV ALLERGY^^0
"BLD",4897,"KRN",8994,"NM",16,0)
GMV LOCATION SELECT^^0
"BLD",4897,"KRN",8994,"NM","B","GMV ADD VM",2)

"BLD",4897,"KRN",8994,"NM","B","GMV ALLERGY",15)

"BLD",4897,"KRN",8994,"NM","B","GMV CONVERT DATE",3)

"BLD",4897,"KRN",8994,"NM","B","GMV DLL VERSION",1)

"BLD",4897,"KRN",8994,"NM","B","GMV EXTRACT REC",13)

"BLD",4897,"KRN",8994,"NM","B","GMV GET CATEGORY IEN",4)

"BLD",4897,"KRN",8994,"NM","B","GMV GET CURRENT TIME",5)

"BLD",4897,"KRN",8994,"NM","B","GMV GET VITAL TYPE IEN",6)

"BLD",4897,"KRN",8994,"NM","B","GMV LATEST VM",7)

"BLD",4897,"KRN",8994,"NM","B","GMV LOCATION SELECT",16)

"BLD",4897,"KRN",8994,"NM","B","GMV MANAGER",8)

"BLD",4897,"KRN",8994,"NM","B","GMV MARK ERROR",14)

"BLD",4897,"KRN",8994,"NM","B","GMV PARAMETER",9)

"BLD",4897,"KRN",8994,"NM","B","GMV USER",10)

"BLD",4897,"KRN",8994,"NM","B","GMV V/M ALLDATA",12)

"BLD",4897,"KRN",8994,"NM","B","GMV VITALS/CAT/QUAL",11)

"BLD",4897,"KRN","B",.4,.4)

"BLD",4897,"KRN","B",.401,.401)

"BLD",4897,"KRN","B",.402,.402)

"BLD",4897,"KRN","B",.403,.403)

"BLD",4897,"KRN","B",.5,.5)

"BLD",4897,"KRN","B",.84,.84)

"BLD",4897,"KRN","B",3.6,3.6)

"BLD",4897,"KRN","B",3.8,3.8)

"BLD",4897,"KRN","B",9.2,9.2)

"BLD",4897,"KRN","B",9.8,9.8)

"BLD",4897,"KRN","B",19,19)

"BLD",4897,"KRN","B",19.1,19.1)

"BLD",4897,"KRN","B",101,101)

"BLD",4897,"KRN","B",409.61,409.61)

"BLD",4897,"KRN","B",771,771)

"BLD",4897,"KRN","B",870,870)

"BLD",4897,"KRN","B",8989.51,8989.51)

"BLD",4897,"KRN","B",8989.52,8989.52)

"BLD",4897,"KRN","B",8994,8994)

"BLD",4897,"QUES",0)
^9.62^^
"BLD",4897,"REQB",0)
^9.611^3^3
"BLD",4897,"REQB",1,0)
GMRV*5.0*1^2
"BLD",4897,"REQB",2,0)
GMRV*5.0*9^2
"BLD",4897,"REQB",3,0)
GMRV*5.0*13^2
"BLD",4897,"REQB","B","GMRV*5.0*1",1)

"BLD",4897,"REQB","B","GMRV*5.0*13",3)

"BLD",4897,"REQB","B","GMRV*5.0*9",2)

"INIT")
GMV3PST
"KRN",19,10377,-1)
0^1
"KRN",19,10377,0)
GMV V/M GUI^Vitals/Measurements GUI Application^^B^^^^^^^^GEN. MED. REC. - VITALS
"KRN",19,10377,1,0)
^19.06^1^1^3020326^^^^
"KRN",19,10377,1,1,0)
This option controls access to the GUI Vitals/Measurements application.
"KRN",19,10377,99.1)
60325,20313
"KRN",19,10377,"RPC",0)
^19.05P^133^34
"KRN",19,10377,"RPC",78,0)
GMV MANAGER
"KRN",19,10377,"RPC",81,0)
GMV ADD VM
"KRN",19,10377,"RPC",83,0)
GMV ALLERGY
"KRN",19,10377,"RPC",86,0)
GMV CLINIC PT
"KRN",19,10377,"RPC",87,0)
GMV CONVERT DATE
"KRN",19,10377,"RPC",89,0)
GMV CUMULATIVE REPORT
"KRN",19,10377,"RPC",91,0)
GMV ENTERED IN ERROR-PATIENT
"KRN",19,10377,"RPC",92,0)
GMV EXTRACT REC
"KRN",19,10377,"RPC",93,0)
GMV GET CURRENT TIME
"KRN",19,10377,"RPC",101,0)
GMV LATEST VITALS BY LOCATION
"KRN",19,10377,"RPC",102,0)
GMV LATEST VITALS FOR PATIENT
"KRN",19,10377,"RPC",103,0)
GMV LATEST VM
"KRN",19,10377,"RPC",105,0)
GMV MARK ERROR
"KRN",19,10377,"RPC",108,0)
GMV PT GRAPH
"KRN",19,10377,"RPC",110,0)
GMV PTSELECT
"KRN",19,10377,"RPC",111,0)
GMV QUALIFIER TABLE
"KRN",19,10377,"RPC",112,0)
GMV ROOM/BED
"KRN",19,10377,"RPC",116,0)
GMV TEAM PATIENTS
"KRN",19,10377,"RPC",118,0)
GMV V/M ALLDATA
"KRN",19,10377,"RPC",119,0)
GMV VITALS/CAT/QUAL
"KRN",19,10377,"RPC",120,0)
GMV WARD LOCATION
"KRN",19,10377,"RPC",121,0)
GMV WARD PT
"KRN",19,10377,"RPC",122,0)
GMV WARD/ROOM PATIENTS
"KRN",19,10377,"RPC",123,0)
GMV USER
"KRN",19,10377,"RPC",124,0)
GMV NUR UNIT PT
"KRN",19,10377,"RPC",125,0)
GMV CHECK DEVICE
"KRN",19,10377,"RPC",126,0)
GMV PARAMETER
"KRN",19,10377,"RPC",127,0)
ORWPT PTINQ
"KRN",19,10377,"RPC",128,0)
GMV GET CATEGORY IEN
"KRN",19,10377,"RPC",129,0)
GMV GET VITAL TYPE IEN
"KRN",19,10377,"RPC",130,0)
VAFCTFU CONVERT DFN TO ICN
"KRN",19,10377,"RPC",131,0)
VAFCTFU CONVERT ICN TO DFN
"KRN",19,10377,"RPC",132,0)
GMV DLL VERSION
"KRN",19,10377,"RPC",133,0)
GMV LOCATION SELECT
"KRN",19,10377,"U")
VITALS/MEASUREMENTS GUI APPLIC
"KRN",8989.51,413,-1)
0^1
"KRN",8989.51,413,0)
GMV DLL VERSION^Vitals DLL version check^1^DLL:Version^Yes/No^0
"KRN",8989.51,413,1)
Y
"KRN",8989.51,413,6)
F^1:50
"KRN",8989.51,413,20,0)
^^5^5^3051116^
"KRN",8989.51,413,20,1,0)
This parameter is used to store the DLL versions that are compatible with
"KRN",8989.51,413,20,2,0)
the current server version of the Vitals/Measurements application. The
"KRN",8989.51,413,20,3,0)
Instance format is DLL:VERSION.
"KRN",8989.51,413,20,4,0)
 
"KRN",8989.51,413,20,5,0)
Example:  GMV_VITALSVIEWENTER.DLL:v. 07/21/05 10:34
"KRN",8989.51,413,30,0)
^8989.513I^1^1
"KRN",8989.51,413,30,1,0)
1^4.2
"KRN",8994,451,-1)
0^3
"KRN",8994,451,0)
GMV CONVERT DATE^GETDT^GMVGETQ^1^S^0^^1
"KRN",8994,451,1,0)
^^4^4^3051028^
"KRN",8994,451,1,1,0)
This remote procedure call converts a user-supplied date/time into VA
"KRN",8994,451,1,2,0)
FileMan's internal and external date format.
"KRN",8994,451,1,3,0)
 
"KRN",8994,451,1,4,0)
This remote procedure call is documented in Integration Agreement 4353.
"KRN",8994,451,2,0)
^8994.02A^1^1
"KRN",8994,451,2,1,0)
GMRDATE^1^30^1^1
"KRN",8994,451,2,1,1,0)
^8994.021^1^1^3051011^^^^
"KRN",8994,451,2,1,1,1,0)
GMRDATE is the user-supplied date/time text.
"KRN",8994,451,2,"B","GMRDATE",1)

"KRN",8994,451,2,"PARAMSEQ",1,1)

"KRN",8994,451,3,0)
^8994.03^6^6^3051011^^
"KRN",8994,451,3,1,0)
RESULT=Date in internal FileMan format^Date in external FileMan format
"KRN",8994,451,3,2,0)
 
"KRN",8994,451,3,3,0)
Example:
"KRN",8994,451,3,4,0)
 > S GMRDATE="10/11/2005@10:30AM"
"KRN",8994,451,3,5,0)
 > D GETDT^GMVGETQ(.RESULT,GMRDATE) ZW RESULT
"KRN",8994,451,3,6,0)
 > RESULT="3051011.103^OCT 11, 2005@10:30:00"
"KRN",8994,454,-1)
0^2
"KRN",8994,454,0)
GMV ADD VM^EN1^GMVDCSAV^1^S^0^^1
"KRN",8994,454,1,0)
^8994.01^4^4^3051028^^^
"KRN",8994,454,1,1,0)
This remote procedure call is used to enter a new Vital/Measurement record
"KRN",8994,454,1,2,0)
in the GMRV Vital Measurement file (#120.5).
"KRN",8994,454,1,3,0)
 
"KRN",8994,454,1,4,0)
This remote procedure call is documented in Integration Agreement 3996.
"KRN",8994,454,2,0)
^8994.02A^1^1
"KRN",8994,454,2,1,0)
GMRVDATA^1^255^1^1
"KRN",8994,454,2,1,1,0)
^8994.021^17^17^3051028^^
"KRN",8994,454,2,1,1,1,0)
This variable contains the data needed to create a Vital/Measurement
"KRN",8994,454,2,1,1,2,0)
record in the GMRV Vital Measurement (#120.5) file. The values are parsed
"KRN",8994,454,2,1,1,3,0)
out of the GMRVDATA variable and filed.
"KRN",8994,454,2,1,1,4,0)
 
"KRN",8994,454,2,1,1,5,0)
GMRVDATA has the following data:
"KRN",8994,454,2,1,1,6,0)
 piece1^piece2^piece3^piece4^piece5
"KRN",8994,454,2,1,1,7,0)
 
"KRN",8994,454,2,1,1,8,0)
 where:
"KRN",8994,454,2,1,1,9,0)
  piece1 = date/time in FileMan internal format
"KRN",8994,454,2,1,1,10,0)
  piece2 = patient number from FILE 2 (i.e., DFN)
"KRN",8994,454,2,1,1,11,0)
  piece3 = vital type, a semi-colon, the reading, a semi-colon, and 
"KRN",8994,454,2,1,1,12,0)
           oxygen flow rate and percentage values [optional] (e.g.,
"KRN",8994,454,2,1,1,13,0)
           21;99;1 l/min 90%)
"KRN",8994,454,2,1,1,14,0)
  piece4 = hospital location (FILE 44) pointer value
"KRN",8994,454,2,1,1,15,0)
  piece5 = user number from FILE 200 (i.e., DUZ), an asterisk, and the 
"KRN",8994,454,2,1,1,16,0)
           qualifier (File 120.52) internal entry numbers separated by
"KRN",8994,454,2,1,1,17,0)
           colons (e.g., 547*50:65)
"KRN",8994,454,2,"B","GMRVDATA",1)

"KRN",8994,454,2,"PARAMSEQ",1,1)

"KRN",8994,454,3,0)
^8994.03^8^8^3051028^^^^
"KRN",8994,454,3,1,0)
RESULT does not return a value. 
"KRN",8994,454,3,2,0)
 
"KRN",8994,454,3,3,0)
The data is filed in the GMRV VITAL MEASUREMENT (#120.5) file.
"KRN",8994,454,3,4,0)
 
"KRN",8994,454,3,5,0)
Example:
"KRN",8994,454,3,6,0)
 
"KRN",8994,454,3,7,0)
 > S GMRVDATA="3051011.1635^134^1;120/80;^67^87*2:38:50:75"
"KRN",8994,454,3,8,0)
 > D EN1^GMVDCSAV(.RESULT,GMRVDATA)
"KRN",8994,457,-1)
0^13
"KRN",8994,457,0)
GMV EXTRACT REC^GETVM^GMVGETD^4^S^0^^1
"KRN",8994,457,1,0)
^^4^4^3051114^
"KRN",8994,457,1,1,0)
This remote procedure call retrieves vital records from the GMRV Vital
"KRN",8994,457,1,2,0)
Measurement (#120.5) file for a selected patient within a given date span.
"KRN",8994,457,1,3,0)
 
"KRN",8994,457,1,4,0)
This remote procedure call is documented in Integration Agreement 4416.
"KRN",8994,457,2,0)
^8994.02A^1^1
"KRN",8994,457,2,1,0)
GMRVDATA^1^30^1^1
"KRN",8994,457,2,1,1,0)
^8994.021^9^9^3051114^^^
"KRN",8994,457,2,1,1,1,0)
GMRVDATA consists of 4 pieces of information:
"KRN",8994,457,2,1,1,2,0)
 piece1^piece2^piece3^piece4
"KRN",8994,457,2,1,1,3,0)
 
"KRN",8994,457,2,1,1,4,0)
 where piece1 = Patient (#2) file pointer (i.e., DFN)
"KRN",8994,457,2,1,1,5,0)
       piece2 = End date of search (FileMan internal format)
"KRN",8994,457,2,1,1,6,0)
       piece3 = single vital type abbreviation (File 120.51, Field 1)
"KRN",8994,457,2,1,1,7,0)
                [optional] If not defined, the default is
"KRN",8994,457,2,1,1,8,0)
                "T;P;R;BP;HT;WT;PN;PO2;CG;CVP"
"KRN",8994,457,2,1,1,9,0)
       piece4 = Start date of search (FileMan internal format)
"KRN",8994,457,2,"B","GMRVDATA",1)

"KRN",8994,457,2,"PARAMSEQ",1,1)

"KRN",8994,457,3,0)
^8994.03^28^28^3051114^^
"KRN",8994,457,3,1,0)
Returns the name of the global array (i.e., ^TMP($J,"GRPC")) containing a
"KRN",8994,457,3,2,0)
list of vital records for the selected patient within the defined date
"KRN",8994,457,3,3,0)
range.
"KRN",8994,457,3,4,0)
 
"KRN",8994,457,3,5,0)
 The TMP global contains: 
"KRN",8994,457,3,6,0)
 ^TMP($J,"GRPC",n)=piece1^piece2
"KRN",8994,457,3,7,0)
 
"KRN",8994,457,3,8,0)
 where piece1 = File 120.5 IEN
"KRN",8994,457,3,9,0)
       piece2 = a string of text in the following format:
"KRN",8994,457,3,10,0)
                Date/time taken (external)   Vital Type Abbreviation: 
"KRN",8994,457,3,11,0)
                Rate U.S. units (Metric value) (Qualifiers)
"KRN",8994,457,3,12,0)
            n = sequential number starting at 1.
"KRN",8994,457,3,13,0)
 
"KRN",8994,457,3,14,0)
 
"KRN",8994,457,3,15,0)
 Example:
"KRN",8994,457,3,16,0)
 > S GMRVDATA="134^3051028^BP^3051001"
"KRN",8994,457,3,17,0)
 > D GETVM^GMVGETD(.RESULT,GMRVDATA) ZW RESULT
"KRN",8994,457,3,18,0)
 > RESULT="^TMP(538999278,"GRPC")"
"KRN",8994,457,3,19,0)
 > D ^%G
"KRN",8994,457,3,20,0)
 > Global ^TMP($J,"GRPC"
"KRN",8994,457,3,21,0)
 > ^TMP(538999278,"GRPC",1)=8858^10/11/05@16:35   B/P:   120/80*  (L ARM, 
"KRN",8994,457,3,22,0)
   SITTING, CAROTID, CALF) _VITPROVIDER,ONE
"KRN",8994,457,3,23,0)
 >                       2)=8961^10/20/05@14:47   B/P:   128/81*  (L ARM,
"KRN",8994,457,3,24,0)
   SITTING, PALPATED) _VITPROVIDER,TWO
"KRN",8994,457,3,25,0)
 
"KRN",8994,457,3,26,0)
If there is no data, then the following is returned:
"KRN",8994,457,3,27,0)
 
"KRN",8994,457,3,28,0)
^TMP($J,"GRPC",1)=0^NO VITALS/MEASUREMENTS ENTERED WITHIN THIS PERIOD
"KRN",8994,468,-1)
0^14
"KRN",8994,468,0)
GMV MARK ERROR^ERROR^GMVUTL1^1^S^0^^
"KRN",8994,468,1,0)
^^4^4^3051114^
"KRN",8994,468,1,1,0)
This remote procedure call marks a selected vitals record in the GMRV
"KRN",8994,468,1,2,0)
Vital Measurement (#120.5) file as entered-in-error.
"KRN",8994,468,1,3,0)
 
"KRN",8994,468,1,4,0)
This remote procedure call is documented in Integration Agreement 4414.
"KRN",8994,468,2,0)
^8994.02A^1^1
"KRN",8994,468,2,1,0)
GMVDATA^1^60^1^1
"KRN",8994,468,2,1,1,0)
^8994.021^9^9^3051114^^
"KRN",8994,468,2,1,1,1,0)
GMVDATA contains the following information:
"KRN",8994,468,2,1,1,2,0)
 
"KRN",8994,468,2,1,1,3,0)
 piece1^piece2^piece3
"KRN",8994,468,2,1,1,4,0)
 
"KRN",8994,468,2,1,1,5,0)
 where piece1 = FILE 120.5 IEN 
"KRN",8994,468,2,1,1,6,0)
       piece2 = FILE 200 IEN (i.e., DUZ)
"KRN",8994,468,2,1,1,7,0)
       piece3 = A single value to indicate the reason for the error.
"KRN",8994,468,2,1,1,8,0)
                1 = INCORRECT DATE/TIME, 2 = INCORRECT READING, 3 =
"KRN",8994,468,2,1,1,9,0)
                INCORRECT PATIENT and 4 = INVALID RECORD
"KRN",8994,468,2,"B","GMVDATA",1)

"KRN",8994,468,2,"PARAMSEQ",1,1)

"KRN",8994,468,3,0)
^8994.03^7^7^3051114^^^
"KRN",8994,468,3,1,0)
If the record is marked as entered in error, RESULT is set to "OK".
"KRN",8994,468,3,2,0)
Otherwise, RESULT is set to "Record Not Found"
"KRN",8994,468,3,3,0)
 
"KRN",8994,468,3,4,0)
 Example:
"KRN",8994,468,3,5,0)
 > S GMVDATA="1560^547^1"
"KRN",8994,468,3,6,0)
 > D ERROR^GMVUTL1(.RESULT,GMVDATA) ZW RESULT
"KRN",8994,468,3,7,0)
 > RESULT="OK"
"KRN",8994,475,-1)
0^12
"KRN",8994,475,0)
GMV V/M ALLDATA^VMDATA^GMVGGR1^4^S^0^^1
"KRN",8994,475,1,0)
^8994.01^4^4^3051101^^^^
"KRN",8994,475,1,1,0)
This remote procedure call lists all vitals/measurements data for a given
"KRN",8994,475,1,2,0)
date/time span.
"KRN",8994,475,1,3,0)
 
"KRN",8994,475,1,4,0)
This remote procedure call is documented in Integration Agreement 4654.
"KRN",8994,475,2,0)
^8994.02A^1^1
"KRN",8994,475,2,1,0)
GMVDATA^1^60^1^1
"KRN",8994,475,2,1,1,0)
^^8^8^3051101^
"KRN",8994,475,2,1,1,1,0)
GMVDATA consists of 4 pieces of data:
"KRN",8994,475,2,1,1,2,0)
 
"KRN",8994,475,2,1,1,3,0)
 piece1^piece2^piece3^piece4
"KRN",8994,475,2,1,1,4,0)
 
"KRN",8994,475,2,1,1,5,0)
 where piece1 = File 2 IEN (i.e., DFN)
"KRN",8994,475,2,1,1,6,0)
       piece2 = Start date/time for search (FileMan internal format)
"KRN",8994,475,2,1,1,7,0)
       piece3 = End date/time for search (FileMan internal format)
"KRN",8994,475,2,1,1,8,0)
       piece4 = 0 (zero)
"KRN",8994,475,2,"B","GMVDATA",1)

"KRN",8994,475,2,"PARAMSEQ",1,1)

"KRN",8994,475,3,0)
^^77^77^3051101^
"KRN",8994,475,3,1,0)
RESULT array returns the data or a "NO DATA" message.
"KRN",8994,475,3,2,0)
 
"KRN",8994,475,3,3,0)
Case A: The NO DATA message is returned.
"KRN",8994,475,3,4,0)
 
"KRN",8994,475,3,5,0)
The TMP global returns:
"KRN",8994,475,3,6,0)
 ^TMP($J,1)=lastname,first  social security number  date of birth  age 
"KRN",8994,475,3,7,0)
            "(Yrs)" gender
"KRN",8994,475,3,8,0)
 ^TMP($J,2)="Unit:" unit  "Room:" room
"KRN",8994,475,3,9,0)
 ^TMP($J,3)="Division:" division
"KRN",8994,475,3,10,0)
 ^TMP($J,4)= search date range
"KRN",8994,475,3,11,0)
 ^TMP($J,5)="NO DATA"
"KRN",8994,475,3,12,0)
 
"KRN",8994,475,3,13,0)
Example: 
"KRN",8994,475,3,14,0)
 > S GMVDATA="90^3051012^3051012^0"
"KRN",8994,475,3,15,0)
 > D VMDATA^GMVGGR1(.RESULT,GMVDATA) ZW RESULT
"KRN",8994,475,3,16,0)
 > RESULT="^TMP(539349605)"
"KRN",8994,475,3,17,0)
 > D ^%G
"KRN",8994,475,3,18,0)
 > Global ^TMP($J
"KRN",8994,475,3,19,0)
 > ^TMP(539349605,1)=VITPATIENT,ONE 000-11-1234  JAN 2,1934  71 (Yrs)  
"KRN",8994,475,3,20,0)
                     MALE
"KRN",8994,475,3,21,0)
                  2)=Unit:    Room: 
"KRN",8994,475,3,22,0)
                  3)=Division: 
"KRN",8994,475,3,23,0)
                  4)=OCT 11,2005 - OCT 11,2005
"KRN",8994,475,3,24,0)
                  5)=NO DATA
"KRN",8994,475,3,25,0)
 
"KRN",8994,475,3,26,0)
 
"KRN",8994,475,3,27,0)
Casee B: Fourth piece of GMVDATA (Flag) is 0
"KRN",8994,475,3,28,0)
 
"KRN",8994,475,3,29,0)
The TMP global returns:
"KRN",8994,475,3,30,0)
 ^TMP($J,1)=lastname,first social security number  date of birth  age 
"KRN",8994,475,3,31,0)
            "(Yrs)" sex
"KRN",8994,475,3,32,0)
 ^TMP($J,2)="Unit:" unit  "Room:" room
"KRN",8994,475,3,33,0)
 ^TMP($J,3)="Division:" division
"KRN",8994,475,3,34,0)
 ^TMP($J,4)= search date range
"KRN",8994,475,3,35,0)
 ^TMP($J,n)=piece1 through piece23
"KRN",8994,475,3,36,0)
 
"KRN",8994,475,3,37,0)
 where piece1 = date of reading in mm-dd-yy format
"KRN",8994,475,3,38,0)
       piece2 = time of reading in hh:mm:ss format
"KRN",8994,475,3,39,0)
       piece3 = Temperature value and qualifier abbreviations
"KRN",8994,475,3,40,0)
       piece4 = Pulse value and qualifier abbreviations
"KRN",8994,475,3,41,0)
       piece5 = Respiration and qualifier abbreviations
"KRN",8994,475,3,42,0)
       piece6 = Pulse Oximetry value, qualifier abbreviations, flow rate 
"KRN",8994,475,3,43,0)
                and percentage value
"KRN",8994,475,3,44,0)
       piece7 = Blood Pressure value and qualifier abbreviations
"KRN",8994,475,3,45,0)
       piece8 = Weight value (pounds) and qualifier abbreviations
"KRN",8994,475,3,46,0)
       piece9 = Weight value (kilos)
"KRN",8994,475,3,47,0)
       piece10 = Body Mass Index calculation
"KRN",8994,475,3,48,0)
       piece11 = Height value (inches) and qualifier abbreviations 
"KRN",8994,475,3,49,0)
       piece12 = Height value (centimeters)
"KRN",8994,475,3,50,0)
       piece13 = Circumference Girth value (inches) and qualifier 
"KRN",8994,475,3,51,0)
                 abbreviations
"KRN",8994,475,3,52,0)
       piece14 = Circumference Girth value (centimeters)
"KRN",8994,475,3,53,0)
       piece15 = Central Venous Pressure value (cmH2O)
"KRN",8994,475,3,54,0)
       piece16 = Central Venous Pressure value (mmHg)
"KRN",8994,475,3,55,0)
       piece17 = Input value (from Intake & Output package)
"KRN",8994,475,3,56,0)
       piece18 = Output value (from Intake & Output package)
"KRN",8994,475,3,57,0)
       piece19 = Pain value
"KRN",8994,475,3,58,0)
       piece20 = always null
"KRN",8994,475,3,59,0)
       piece21 = always null
"KRN",8994,475,3,60,0)
       piece22 = hospital location (FILE 44, Field .01)
"KRN",8994,475,3,61,0)
       piece23 = name of person who entered the data (FILE 200, Field .01)
"KRN",8994,475,3,62,0)
 
"KRN",8994,475,3,63,0)
Example: 
"KRN",8994,475,3,64,0)
 > S GMVDATA="134^3050901^3050930^0"          
"KRN",8994,475,3,65,0)
 > D VMDATA^GMVGGR1(.RESULT,GMVDATA) ZW RESULT
"KRN",8994,475,3,66,0)
 > RESULT="^TMP(539349605)"
"KRN",8994,475,3,67,0)
 > D ^%G
"KRN",8994,475,3,68,0)
 > Global ^TMP($J
"KRN",8994,475,3,69,0)
 > ^TMP(539349605,1)=VITPATIENT,TWO 000-11-1234  JUN 1,1957  48 (Yrs)  
"KRN",8994,475,3,70,0)
                     FEMALE
"KRN",8994,475,3,71,0)
                  2)=Unit: 2-ASM   Room: 
"KRN",8994,475,3,72,0)
                  3)=Division: TEST HINES
"KRN",8994,475,3,73,0)
                  4)=SEP 1,2005 - SEP 30,2005
"KRN",8994,475,3,74,0)
                  5)=09-14-05^17:18:00^^^^^^135- A St^61.36^22^66- 
"KRN",8994,475,3,75,0)
                     A^167.64^^^^^^^^ ^^2-ASM^VITPROVIDER,ONE
"KRN",8994,475,3,76,0)
                  6)=09-26-05^11:30:57^^^^^120/80*- La Si Car 
"KRN",8994,475,3,77,0)
                     Clf^^^^^^^^^^^^^^^2-A SM^VITPROVIDER,TWO
"KRN",8994,495,-1)
0^15
"KRN",8994,495,0)
GMV ALLERGY^ALLERGY^GMVUTL3^2^S^0^^1
"KRN",8994,495,1,0)
^^3^3^3051028^
"KRN",8994,495,1,1,0)
This remote procedure call retrieves the patient's allergy information.
"KRN",8994,495,1,2,0)
 
"KRN",8994,495,1,3,0)
This remote procedure call is documented in Integration Agreement 4350.
"KRN",8994,495,2,0)
^8994.02A^1^1
"KRN",8994,495,2,1,0)
DFN^1^30^1^1
"KRN",8994,495,2,1,1,0)
^8994.021^1^1^3051028^^^^
"KRN",8994,495,2,1,1,1,0)
DFN is a pointer to the PATIENT file (#2).
"KRN",8994,495,2,"B","DFN",1)

"KRN",8994,495,2,"PARAMSEQ",1,1)

"KRN",8994,495,3,0)
^^17^17^3051028^
"KRN",8994,495,3,1,0)
Returns the patient allergy information in the array specified.
"KRN",8994,495,3,2,0)
 
"KRN",8994,495,3,3,0)
 The result array returns:
"KRN",8994,495,3,4,0)
  RESULT(n)=This patient has the following allergy(ies):
"KRN",8994,495,3,5,0)
      (n+1)=piece1
"KRN",8994,495,3,6,0)
 
"KRN",8994,495,3,7,0)
  where piece1 = the allergy name
"KRN",8994,495,3,8,0)
             n = sequential number starting at 1.
"KRN",8994,495,3,9,0)
 
"KRN",8994,495,3,10,0)
If there is no data, then the following is returned:
"KRN",8994,495,3,11,0)
 RESULT(1)=No Allergy Assessment
"KRN",8994,495,3,12,0)
 
"KRN",8994,495,3,13,0)
Example:
"KRN",8994,495,3,14,0)
 > S DFN=134
"KRN",8994,495,3,15,0)
 > D ALLERGY^GMVUTL3(.RESULT,DFN) ZW RESULT
"KRN",8994,495,3,16,0)
 > RESULT(1)="This patient has the following allergy(ies): "
"KRN",8994,495,3,17,0)
 > RESULT(2)="PENICILLIN"
"KRN",8994,1050,-1)
0^11
"KRN",8994,1050,0)
GMV VITALS/CAT/QUAL^GETVITAL^GMVUTL7^2^S^0^^1
"KRN",8994,1050,1,0)
^8994.01^3^3^3051101^^^^
"KRN",8994,1050,1,1,0)
Returns all qualifier information for the vital types selected.
"KRN",8994,1050,1,2,0)
 
"KRN",8994,1050,1,3,0)
This remote procedure call is documented in Integration Agreement 4359.
"KRN",8994,1050,2,0)
^8994.02A^1^1
"KRN",8994,1050,2,1,0)
GMVLIST^1^60^1^1
"KRN",8994,1050,2,1,1,0)
^8994.021^3^3^3051101^^^^
"KRN",8994,1050,2,1,1,1,0)
A list of vital type abbreviations (FILE 120.51, Field 1) separated by
"KRN",8994,1050,2,1,1,2,0)
up-arrows (e.g., "HT^WT" for height and weight). When the value is null,
"KRN",8994,1050,2,1,1,3,0)
all qualifier information will be returned for all vital types.
"KRN",8994,1050,2,"B","GMVLIST",1)

"KRN",8994,1050,2,"PARAMSEQ",1,1)

"KRN",8994,1050,3,0)
^^69^69^3051101^
"KRN",8994,1050,3,1,0)
Returns the qualifier information for the selected vital types in the 
"KRN",8994,1050,3,2,0)
array specified. Includes the abnormal high and low values for the vital 
"KRN",8994,1050,3,3,0)
type, if any.
"KRN",8994,1050,3,4,0)
 
"KRN",8994,1050,3,5,0)
The result array contains:
"KRN",8994,1050,3,6,0)
 RESULT(n)=piece1^piece2^piece3^piece4^piece5^piece6^piece7^piece8^piece9
"KRN",8994,1050,3,7,0)
 RESULT(n.nnn)=pieceA^pieceB^pieceC^pieceD
"KRN",8994,1050,3,8,0)
 
"KRN",8994,1050,3,9,0)
  where n is a sequential number starting with 1
"KRN",8994,1050,3,10,0)
        piece1 = V for vital type
"KRN",8994,1050,3,11,0)
        piece2 = FILE 120.51 IEN for this vital type
"KRN",8994,1050,3,12,0)
        piece3 = vital type name (FILE 120.51, Field .01)
"KRN",8994,1050,3,13,0)
        piece4 = Abbreviation (FILE 120.51, Field 1)
"KRN",8994,1050,3,14,0)
        piece5 = PCE Abbreviation (FILE 120.51, Field 7)
"KRN",8994,1050,3,15,0)
        piece6 = If vital type is Blood Pressure this is the 
"KRN",8994,1050,3,16,0)
                 abnormal systolic high value (File 120.57, Field 5.7).
"KRN",8994,1050,3,17,0)
                 If vital type is Temperature, this is the abnormal high 
"KRN",8994,1050,3,18,0)
                 value (File 120.57, Field 5.1)
"KRN",8994,1050,3,19,0)
                 If vital type is Respiration, this is the abnormal high
"KRN",8994,1050,3,20,0)
                 value (File 120.57, Field 5.5)
"KRN",8994,1050,3,21,0)
                 If vital type is Pulse, this is the abnormal high value 
"KRN",8994,1050,3,22,0)
                 (File 120.57, Field 5.3)
"KRN",8994,1050,3,23,0)
                 If vital type is Central Venous Pressure, this is the 
"KRN",8994,1050,3,24,0)
                 abnormal high value (File 120.57, Field 6.1)
"KRN",8994,1050,3,25,0)
        piece7 = If vital type is Blood Pressure this is the 
"KRN",8994,1050,3,26,0)
                 abnormal diastolic high value (File 120.57, Field 5.71).
"KRN",8994,1050,3,27,0)
                 If vital type is Temperature, this is the abnormal low 
"KRN",8994,1050,3,28,0)
                 value (File 120.57, Field 5.2)
"KRN",8994,1050,3,29,0)
                 If vital type is Respiration, this is the abnormal low
"KRN",8994,1050,3,30,0)
                 value (File 120.57, Field 5.6)
"KRN",8994,1050,3,31,0)
                 If vital type is Pulse, this is the abnormal low value 
"KRN",8994,1050,3,32,0)
                 (File 120.57, Field 5.4)
"KRN",8994,1050,3,33,0)
                 If vital type is Central Venous Pressure, this is the 
"KRN",8994,1050,3,34,0)
                 abnormal low value (File 120.57, Field 6.2)
"KRN",8994,1050,3,35,0)
        piece8 = If vital type is Blood Pressure this is the 
"KRN",8994,1050,3,36,0)
                 abnormal systolic low value (File 120.57, Field 5.8).
"KRN",8994,1050,3,37,0)
                 If vital type is Central Pressure, this is the abnormal 
"KRN",8994,1050,3,38,0)
                 O2 saturation (File 120.57, Field 6.3)
"KRN",8994,1050,3,39,0)
        piece9 = If vital type is Blood Pressure this is the 
"KRN",8994,1050,3,40,0)
                 abnormal diastolic low value (File 120.57, Field 5.81).
"KRN",8994,1050,3,41,0)
 
"KRN",8994,1050,3,42,0)
 RESULT(n.nnn)=pieceA^pieceB^pieceC^pieceD
"KRN",8994,1050,3,43,0)
  where pieceA = C for CATEGORY or Q for QUALIFIER
"KRN",8994,1050,3,44,0)
 
"KRN",8994,1050,3,45,0)
  if pieceA is C, then  
"KRN",8994,1050,3,46,0)
        pieceB = FILE 120.53 IEN for this category
"KRN",8994,1050,3,47,0)
        pieceC = category name (FILE 120.53, Field .01)
"KRN",8994,1050,3,48,0)
        pieceD = null
"KRN",8994,1050,3,49,0)
 
"KRN",8994,1050,3,50,0)
  if pieceB is Q, then
"KRN",8994,1050,3,51,0)
        pieceB = FILE 120.52 IEN for this qualifier
"KRN",8994,1050,3,52,0)
        pieceC = qualifier name (FILE 120.52, Field .01)
"KRN",8994,1050,3,53,0)
        pieceD = synonym (FILE 120.52, Field .02)
"KRN",8994,1050,3,54,0)
 
"KRN",8994,1050,3,55,0)
Example:
"KRN",8994,1050,3,56,0)
 > S GMVLIST="HT^WT"                            
"KRN",8994,1050,3,57,0)
 > D GETVITAL^GMVUTL7(.RESULT,GMVLIST) ZW RESULT
"KRN",8994,1050,3,58,0)
 > RESULT(1)="V^8^HEIGHT^HT^HT^"
"KRN",8994,1050,3,59,0)
 > RESULT(1.001)="C^4^QUALITY"
"KRN",8994,1050,3,60,0)
 > RESULT(1.002)="Q^42^ACTUAL^A"
"KRN",8994,1050,3,61,0)
 > RESULT(1.003)="Q^43^ESTIMATED^E"
"KRN",8994,1050,3,62,0)
 > RESULT(1.004)="Q^107^Stated^St"
"KRN",8994,1050,3,63,0)
 > RESULT(2)="V^9^WEIGHT^WT^WT^"
"KRN",8994,1050,3,64,0)
 > RESULT(2.001)="C^2^METHOD"
"KRN",8994,1050,3,65,0)
 > RESULT(2.002)="Q^39^OTHER^Oth"
"KRN",8994,1050,3,66,0)
 > RESULT(2.003)="Q^50^SITTING^Si"
"KRN",8994,1050,3,67,0)
 > RESULT(2.004)="Q^51^STANDING^St"
"KRN",8994,1050,3,68,0)
 > RESULT(2.005)="C^4^QUALITY"
"KRN",8994,1050,3,69,0)
 > RESULT(2.006)="Q^42^ACTUAL^A"
"KRN",8994,1459,-1)
0^7
"KRN",8994,1459,0)
GMV LATEST VM^GETLAT^GMVGETD^4^S^0^^1
"KRN",8994,1459,1,0)
^8994.01^4^4^3051031^^^
"KRN",8994,1459,1,1,0)
This remote procedure call retrieves the latest vital records for a given
"KRN",8994,1459,1,2,0)
patient.
"KRN",8994,1459,1,3,0)
 
"KRN",8994,1459,1,4,0)
This remote procedure call is documented in Integration Agreement 4358.
"KRN",8994,1459,2,0)
^8994.02A^1^1
"KRN",8994,1459,2,1,0)
GMRDFN^1^10^1^1
"KRN",8994,1459,2,1,1,0)
^8994.021^1^1^3051031^^^
"KRN",8994,1459,2,1,1,1,0)
GMRDFN variable is a pointer to the Patient (#2) file (i.e., DFN).
"KRN",8994,1459,2,"B","GMRDFN",1)

"KRN",8994,1459,2,"PARAMSEQ",1,1)

"KRN",8994,1459,3,0)
^^42^42^3051031^
"KRN",8994,1459,3,1,0)
Returns the name of the global array (i.e., ^TMP($J,"GRPC")) containing 
"KRN",8994,1459,3,2,0)
the latest vitals for the selected patient.
"KRN",8994,1459,3,3,0)
 
"KRN",8994,1459,3,4,0)
 The TMP global contains: 
"KRN",8994,1459,3,5,0)
  ^TMP($J,"GRPC",n)=piece1
"KRN",8994,1459,3,6,0)
 
"KRN",8994,1459,3,7,0)
  where piece1 = is a formatted line of text.
"KRN",8994,1459,3,8,0)
             n = sequential number starting at 1.
"KRN",8994,1459,3,9,0)
 
"KRN",8994,1459,3,10,0)
The formatted line of text includes the vital type, value and unit
"KRN",8994,1459,3,11,0)
(U.S.), value and unit (metric), qualifiers, supplemental oxygen, body
"KRN",8994,1459,3,12,0)
mass index value, and person who entered the record.
"KRN",8994,1459,3,13,0)
 
"KRN",8994,1459,3,14,0)
If there is no data for the patient, the following is returned:
"KRN",8994,1459,3,15,0)
 ^TMP($J,"GRPC",1)=There are no results to report
"KRN",8994,1459,3,16,0)
 
"KRN",8994,1459,3,17,0)
Example:
"KRN",8994,1459,3,18,0)
 > S GMRDFN=134
"KRN",8994,1459,3,19,0)
 > D GETLAT^GMVGETD(.RESULT,GMRDFN) ZW RESULT
"KRN",8994,1459,3,20,0)
 > RESULT="^TMP(539349605,"GRPC")"
"KRN",8994,1459,3,21,0)
 > D ^%G
"KRN",8994,1459,3,22,0)
 > Global ^TMP($J,"GRPC"
"KRN",8994,1459,3,23,0)
 > ^TMP(539349605,"GRPC",1)=Temp.: (08/09/05@08:00)  102 F  (38.9 C)*
"KRN",8994,1459,3,24,0)
   (ORAL) _VITPROVIDER,ONE
"KRN",8994,1459,3,25,0)
 >                       2)=Pulse:       (07/14/05@16:33)  55 
"KRN",8994,1459,3,26,0)
   (LEFT,CAROTID,PALPATED,LYING)  _VITPROVIDER,ONE
"KRN",8994,1459,3,27,0)
 >                       3)=Resp.:       (07/14/05@16:33)  31 
"KRN",8994,1459,3,28,0)
   (SPONTANEOUS,SITTING) _VITPROVIDER,ONE
"KRN",8994,1459,3,29,0)
 >                       4)=Pulse Ox:    (08/22/05@13:48)  99% with 
"KRN",8994,1459,3,30,0)
   supplemental O2 1 L/min 90% NASAL CANNULA  _VITPROVIDER,ONE
"KRN",8994,1459,3,31,0)
 >                       5)=B/P:         (09/26/05@11:30)  120/80* (L 
"KRN",8994,1459,3,32,0)
   ARM,SITTING,CAROTID,CALF)  _VITPROVIDER,TWO
"KRN",8994,1459,3,33,0)
 >                       6)=Ht.: (09/14/05@17:18)  5 ft 6 in (167.64
"KRN",8994,1459,3,34,0)
   cm) (ACTUAL)  _VITPROVIDER,ONE
"KRN",8994,1459,3,35,0)
 >                       7)=Wt.: (09/14/05@17:18)  135 lb  (61.36 kg)
"KRN",8994,1459,3,36,0)
   (ACTUAL,STANDING)  _VITPROVIDER,ONE
"KRN",8994,1459,3,37,0)
 >                       8)=Body Mass Index:             22  
"KRN",8994,1459,3,38,0)
                         9)=CVP:         (08/22/05@17:09)  15 cmH2O (11.0 
"KRN",8994,1459,3,39,0)
   mmHg)  _VITPROVIDER,ONE
"KRN",8994,1459,3,40,0)
                        10)=Circ/Girth:  (07/22/05@10:22)  1 in (2.54 cm)
"KRN",8994,1459,3,41,0)
  (DRY,ABDO MINAL)  _VITPROVIDER,TWO
"KRN",8994,1459,3,42,0)
                        11)=Pain: (09/15/05@16:43)  5  _VITPROVIDER,ONE
"KRN",8994,1482,-1)
0^8
"KRN",8994,1482,0)
GMV MANAGER^RPC^GMVRPCM^4^S^0^^1
"KRN",8994,1482,1,0)
^8994.01^3^3^3060222^^^^
"KRN",8994,1482,1,1,0)
Performs many functions for the Manager module.
"KRN",8994,1482,1,2,0)
 
"KRN",8994,1482,1,3,0)
This remote procedure call is documented in Integration Agreement 4360.
"KRN",8994,1482,2,0)
^8994.02A^2^2
"KRN",8994,1482,2,1,0)
OPTION^1^10^1^1
"KRN",8994,1482,2,1,1,0)
^^1^1^3051028^
"KRN",8994,1482,2,1,1,1,0)
Routine tag line in GMVRPCM to call.
"KRN",8994,1482,2,2,0)
DATA^1^100^1^2
"KRN",8994,1482,2,2,1,0)
^8994.021^1^1^3060222^^^^
"KRN",8994,1482,2,2,1,1,0)
Other data as required for the call.
"KRN",8994,1482,2,"B","DATA",2)

"KRN",8994,1482,2,"B","OPTION",1)

"KRN",8994,1482,2,"PARAMSEQ",1,1)

"KRN",8994,1482,2,"PARAMSEQ",2,2)

"KRN",8994,1482,3,0)
^^575^575^3060222^
"KRN",8994,1482,3,1,0)
This remote procedure call performs various actions such as building
"KRN",8994,1482,3,2,0)
selection lists and modifying package parameters. The entry point is
"KRN",8994,1482,3,3,0)
RPC^GMVRPCM. It has input parameters of RESULTS, OPTION and DATA (ex:
"KRN",8994,1482,3,4,0)
RPC^GMVRPCM(.RESULTS,OPTION,DATA). 
"KRN",8994,1482,3,5,0)
 
"KRN",8994,1482,3,6,0)
The RESULTS variable will contain the ^TMP("GMVMGR",$J) global array 
"KRN",8994,1482,3,7,0)
reference. The ^TMP("GMVMGR",$J) global array contains the results.
"KRN",8994,1482,3,8,0)
 
"KRN",8994,1482,3,9,0)
The OPTION variable identifies a line label in the GMVRPCM routine 
"KRN",8994,1482,3,10,0)
that will be invoked to process the call.
"KRN",8994,1482,3,11,0)
 
"KRN",8994,1482,3,12,0)
The DATA variable contains any additional values needed by the OPTION
"KRN",8994,1482,3,13,0)
variable to process the call.
"KRN",8994,1482,3,14,0)
 
"KRN",8994,1482,3,15,0)
 
"KRN",8994,1482,3,16,0)
1) When the OPTION value is ADDQUAL, this RPC will link a GMRV VITAL 
"KRN",8994,1482,3,17,0)
QUALIFIER (#120.52) file entry to a GMRV VITAL TYPE (#120.51) file entry. 
"KRN",8994,1482,3,18,0)
  
"KRN",8994,1482,3,19,0)
The DATA value is a three part value separated by semi-colons(;). The 
"KRN",8994,1482,3,20,0)
first value is the FILE 120.51 internal entry number (IEN). The second 
"KRN",8994,1482,3,21,0)
value is the GMRV VITAL CATEGORY (#120.53) IEN. The third value is the 
"KRN",8994,1482,3,22,0)
GMRV VITAL QUALIFIER (#120.52).
"KRN",8994,1482,3,23,0)
  
"KRN",8994,1482,3,24,0)
Example:
"KRN",8994,1482,3,25,0)
 
"KRN",8994,1482,3,26,0)
 > S DATA="1;1;1"
"KRN",8994,1482,3,27,0)
 > S OPTION="ADDQUAL"
"KRN",8994,1482,3,28,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,29,0)
 > RESULT="^TMP("GMVMGR",539356158)"
"KRN",8994,1482,3,30,0)
 > D ^%G
"KRN",8994,1482,3,31,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,32,0)
 > ^TMP("GMVMGR",539356158,0)=1^Qualifier Assigned
"KRN",8994,1482,3,33,0)
 
"KRN",8994,1482,3,34,0)
If an error is encountered, a "-1" followed by a caret and the error 
"KRN",8994,1482,3,35,0)
message text (i.e., -1^error message) is returned. 
"KRN",8994,1482,3,36,0)
 
"KRN",8994,1482,3,37,0)
 
"KRN",8994,1482,3,38,0)
2) When the OPTION value is DELQUAL, this RPC will unlink a qualifier to 
"KRN",8994,1482,3,39,0)
a GMRV VITAL TYPE (#120.51) file entry. 
"KRN",8994,1482,3,40,0)
  
"KRN",8994,1482,3,41,0)
The DATA value is a three part value separated by semi-colons. The first 
"KRN",8994,1482,3,42,0)
value is the FILE 120.51 internal entry number (IEN). The second value is 
"KRN",8994,1482,3,43,0)
the GMRV VITAL CATEGORY (#120.53) IEN. The third value is the GMRV VITAL 
"KRN",8994,1482,3,44,0)
QUALIFIER (#120.52) IEN.
"KRN",8994,1482,3,45,0)
  
"KRN",8994,1482,3,46,0)
Example:
"KRN",8994,1482,3,47,0)
 > S DATA="1;1;1"         
"KRN",8994,1482,3,48,0)
 > S OPTION="DELQUAL"                        
"KRN",8994,1482,3,49,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,50,0)
 > RESULT="^TMP("GMVMGR",539356158)"
"KRN",8994,1482,3,51,0)
 > D ^%G
"KRN",8994,1482,3,52,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,53,0)
 > ^TMP("GMVMGR",539356158,0)=1^Qualifier removed.
"KRN",8994,1482,3,54,0)
 
"KRN",8994,1482,3,55,0)
If an error is encountered, a "-1" followed by a caret and the error 
"KRN",8994,1482,3,56,0)
message text (i.e., -1^error message) is returned.
"KRN",8994,1482,3,57,0)
 
"KRN",8994,1482,3,58,0)
  
"KRN",8994,1482,3,59,0)
3) When the OPTION value is DELTEMP, this RPC will delete a data input
"KRN",8994,1482,3,60,0)
template definition.
"KRN",8994,1482,3,61,0)
  
"KRN",8994,1482,3,62,0)
The DATA value is a two part value separated by a caret (^). The first 
"KRN",8994,1482,3,63,0)
value is the ENTITY value. See IA #2263 for a list of entity values.
"KRN",8994,1482,3,64,0)
The second value is the name of the data input template.
"KRN",8994,1482,3,65,0)
  
"KRN",8994,1482,3,66,0)
Example:
"KRN",8994,1482,3,67,0)
 > S DATA="USR^PAIN ONLY"
"KRN",8994,1482,3,68,0)
 > S OPTION="DELTEMP"
"KRN",8994,1482,3,69,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,70,0)
 > RESULT="^TMP("GMVMGR",539356158)"
"KRN",8994,1482,3,71,0)
 > D ^%G
"KRN",8994,1482,3,72,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,73,0)
 > ^TMP("GMVMGR",539356158,0)=1^Template Removed. 
"KRN",8994,1482,3,74,0)
 
"KRN",8994,1482,3,75,0)
If an error is encountered, a "-1" followed by a caret and the error 
"KRN",8994,1482,3,76,0)
message text (i.e., -1^error message) is returned.
"KRN",8994,1482,3,77,0)
 
"KRN",8994,1482,3,78,0)
 
"KRN",8994,1482,3,79,0)
4) When the OPTION value is GETCATS, this RPC will return a list of 
"KRN",8994,1482,3,80,0)
qualifiers (FILE 120.52) associated with a vital type (FILE 120.51). 
"KRN",8994,1482,3,81,0)
  
"KRN",8994,1482,3,82,0)
The DATA value is a one part value. It is a pointer value to FILE 120.51
"KRN",8994,1482,3,83,0)
 
"KRN",8994,1482,3,84,0)
The TMP global contains:
"KRN",8994,1482,3,85,0)
 ^TMP("GMVMGR",$J,0)=piece1^piece2
"KRN",8994,1482,3,86,0)
 ^TMP("GMVMGR",$J,n)=piece3^piece4^piece5
"KRN",8994,1482,3,87,0)
   
"KRN",8994,1482,3,88,0)
 where piece1 = number of categories (FILE 120.53) associated with this 
"KRN",8994,1482,3,89,0)
                vital type
"KRN",8994,1482,3,90,0)
       piece2 = vital type name
"KRN",8994,1482,3,91,0)
       piece3 = category IEN (FILE 120.53)
"KRN",8994,1482,3,92,0)
       piece4 = category name (FILE 120.53, Field .01)
"KRN",8994,1482,3,93,0)
       piece5 = qualifier names (FILE 120.52, Field .01) separated by a 
"KRN",8994,1482,3,94,0)
                comma and space
"KRN",8994,1482,3,95,0)
            n = sequential number starting with 1 
"KRN",8994,1482,3,96,0)
 
"KRN",8994,1482,3,97,0)
Example:
"KRN",8994,1482,3,98,0)
 > S DATA="21" 
"KRN",8994,1482,3,99,0)
 > S OPTION="GETCATS"
"KRN",8994,1482,3,100,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,101,0)
 > RESULT="^TMP("GMVMGR",539356158)"
"KRN",8994,1482,3,102,0)
 > D ^%G
"KRN",8994,1482,3,103,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,104,0)
 > ^TMP("GMVMGR",539356158,0)=1^PULSE OXIMETRY
"KRN",8994,1482,3,105,0)
                        1)=2^METHOD^AEROSOL/HUMIDIFIED MASK, CPAP, FACE 
"KRN",8994,1482,3,106,0)
   TENT, L ARM, MASK, NASAL CANNULA, NON RE-BREATHER, PARTIAL RE-BREATHER,
"KRN",8994,1482,3,107,0)
   ROOM AIR, T-PIECE, TRACHEOSTOMY COLLAR, VENTILATOR, VENTURI MASK
"KRN",8994,1482,3,108,0)
 
"KRN",8994,1482,3,109,0)
If an error is encountered, a "-1" followed by a caret and the error 
"KRN",8994,1482,3,110,0)
message text (i.e., -1^error message) is returned.
"KRN",8994,1482,3,111,0)
 
"KRN",8994,1482,3,112,0)
 
"KRN",8994,1482,3,113,0)
5) When the OPTION value is GETDATA, this RPC will return the value of 
"KRN",8994,1482,3,114,0)
the entry you specify.
"KRN",8994,1482,3,115,0)
  
"KRN",8994,1482,3,116,0)
The DATA value is a three part value. The first part is the file number. 
"KRN",8994,1482,3,117,0)
The second part is the IEN number of the entry. The third part is the
"KRN",8994,1482,3,118,0)
field number.
"KRN",8994,1482,3,119,0)
 
"KRN",8994,1482,3,120,0)
The TMP global contains:
"KRN",8994,1482,3,121,0)
 ^TMP("GMVMGR",$J,0)=external value of the field
"KRN",8994,1482,3,122,0)
 
"KRN",8994,1482,3,123,0)
Example:
"KRN",8994,1482,3,124,0)
 > S DATA="120.51^1^1"
"KRN",8994,1482,3,125,0)
 > D RPC(.RESULT,"GETDATA",DATA) ZW RESULT             
"KRN",8994,1482,3,126,0)
 > RESULT="^TMP("GMVMGR",539339804)"
"KRN",8994,1482,3,127,0)
 > D ^%G
"KRN",8994,1482,3,128,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,129,0)
 > ^TMP("GMVMGR",539339804,0)=BP
"KRN",8994,1482,3,130,0)
        
"KRN",8994,1482,3,131,0)
If a value cannot be found, then a null value is returned.
"KRN",8994,1482,3,132,0)
 
"KRN",8994,1482,3,133,0)
 
"KRN",8994,1482,3,134,0)
6) When the OPTION value is GETDEF, this RPC will return default template
"KRN",8994,1482,3,135,0)
names. 
"KRN",8994,1482,3,136,0)
  
"KRN",8994,1482,3,137,0)
The DATA value is a one part value. If it is null, then all default 
"KRN",8994,1482,3,138,0)
templates for that user will be returned. 
"KRN",8994,1482,3,139,0)
 
"KRN",8994,1482,3,140,0)
The TMP global contains:
"KRN",8994,1482,3,141,0)
 ^TMP("GMVMGR",$J,0)=piece1
"KRN",8994,1482,3,142,0)
 ^TMP("GMVMGR",$J,n)=piece2^piece3
"KRN",8994,1482,3,143,0)
 
"KRN",8994,1482,3,144,0)
 where piece1 = number of templates found
"KRN",8994,1482,3,145,0)
       piece2 = an IEN value, a semi-colon, and a global reference
"KRN",8994,1482,3,146,0)
       piece3 = template name
"KRN",8994,1482,3,147,0)
            n = sequential number starting with 1
"KRN",8994,1482,3,148,0)
 
"KRN",8994,1482,3,149,0)
Example A: 
"KRN",8994,1482,3,150,0)
 > S DATA="" 
"KRN",8994,1482,3,151,0)
 > S OPTION="GETDEF"
"KRN",8994,1482,3,152,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,153,0)
 > RESULT="^TMP("GMVMGR",539356158)"
"KRN",8994,1482,3,154,0)
 > D ^%G
"KRN",8994,1482,3,155,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,156,0)
 > ^TMP("GMVMGR",539356158,0)=4
"KRN",8994,1482,3,157,0)
                           1)=125;SC(^WARD 10A
"KRN",8994,1482,3,158,0)
                           2)=334;DIC(4.2,^TEST
"KRN",8994,1482,3,159,0)
                           3)=4601;VA(200,^Height ONLY
"KRN",8994,1482,3,160,0)
                           4)=547;VA(200,^All Vital Signs
"KRN",8994,1482,3,161,0)
 
"KRN",8994,1482,3,162,0)
If the DATA value is an entity value (see IA 2263 for a list of entity 
"KRN",8994,1482,3,163,0)
values), then the default template name for that entity will be returned.
"KRN",8994,1482,3,164,0)
 
"KRN",8994,1482,3,165,0)
The TMP global contains:
"KRN",8994,1482,3,166,0)
 ^TMP("GMVMGR",$J,0)=template name
"KRN",8994,1482,3,167,0)
 
"KRN",8994,1482,3,168,0)
Example B:
"KRN",8994,1482,3,169,0)
 > S DATA="USR"                                
"KRN",8994,1482,3,170,0)
 > S OPTION="GETDEF"                           
"KRN",8994,1482,3,171,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,172,0)
 > RESULT="^TMP("GMVMGR",539356158)"
"KRN",8994,1482,3,173,0)
 > D ^%G
"KRN",8994,1482,3,174,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,175,0)
 > ^TMP("GMVMGR",539356158,0)=MY DEFAULT
"KRN",8994,1482,3,176,0)
 
"KRN",8994,1482,3,177,0)
If an error is encountered, a "-1" followed by a caret and the error 
"KRN",8994,1482,3,178,0)
message text (i.e., -1^error message) is returned.  
"KRN",8994,1482,3,179,0)
 
"KRN",8994,1482,3,180,0)
  
"KRN",8994,1482,3,181,0)
7) When the OPTION value is GETHILO, this RPC will return the abnormal 
"KRN",8994,1482,3,182,0)
high or low value for a vital type.
"KRN",8994,1482,3,183,0)
 
"KRN",8994,1482,3,184,0)
The DATA value is a one part value which identifies a field number in 
"KRN",8994,1482,3,185,0)
the GMRV VITALS PARAMETERS (#120.57) field.
"KRN",8994,1482,3,186,0)
 
"KRN",8994,1482,3,187,0)
The TMP global contains:
"KRN",8994,1482,3,188,0)
 ^TMP("GMVMGR",$J,0)=field value
"KRN",8994,1482,3,189,0)
 
"KRN",8994,1482,3,190,0)
Example:
"KRN",8994,1482,3,191,0)
 > S DATA=5.2
"KRN",8994,1482,3,192,0)
 > S OPTION="GETHILO"
"KRN",8994,1482,3,193,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,194,0)
 > RESULT="^TMP("GMVMGR",539356158)"
"KRN",8994,1482,3,195,0)
 > D ^%G
"KRN",8994,1482,3,196,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,197,0)
 > ^TMP("GMVMGR",539356158,0)=94 
"KRN",8994,1482,3,198,0)
 
"KRN",8994,1482,3,199,0)
A zero is returned if there is no value in the field. 
"KRN",8994,1482,3,200,0)
 
"KRN",8994,1482,3,201,0)
 
"KRN",8994,1482,3,202,0)
8) When the OPTION value is GETLIST, this RPC returns a list of entries
"KRN",8994,1482,3,203,0)
for the file number specified.
"KRN",8994,1482,3,204,0)
 
"KRN",8994,1482,3,205,0)
The DATA value is a one part value. It is a file number.
"KRN",8994,1482,3,206,0)
 
"KRN",8994,1482,3,207,0)
The TMP global contains:
"KRN",8994,1482,3,208,0)
 ^TMP("GMVMGR",$J,0)=piece1^piece2
"KRN",8994,1482,3,209,0)
 ^TMP("GMVMGR",$J,n)=piece3^piece4
"KRN",8994,1482,3,210,0)
 
"KRN",8994,1482,3,211,0)
 where piece1 = number of entries returned
"KRN",8994,1482,3,212,0)
       piece2 = file name [not returned in all cases] 
"KRN",8994,1482,3,213,0)
       piece3 = file number, a semi-colon and record IEN
"KRN",8994,1482,3,214,0)
       piece4 = the .01 value of the record
"KRN",8994,1482,3,215,0)
            n = sequential number starting with 1
"KRN",8994,1482,3,216,0)
 
"KRN",8994,1482,3,217,0)
Examples:
"KRN",8994,1482,3,218,0)
 Retrieve a list of wards.
"KRN",8994,1482,3,219,0)
 > S DATA=42
"KRN",8994,1482,3,220,0)
 > S OPTION="GETLIST"
"KRN",8994,1482,3,221,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,222,0)
 > RESULT="^TMP("GMVMGR",539363784)"
"KRN",8994,1482,3,223,0)
 > D ^%G
"KRN",8994,1482,3,224,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,225,0)
 > ^TMP("GMVMGR",539363784,0)=26^WARD LOCATION
"KRN",8994,1482,3,226,0)
                           1)=42;14^10A
"KRN",8994,1482,3,227,0)
                           n)=42;15^10B 
"KRN",8994,1482,3,228,0)
                           26)=42;39^10Z
"KRN",8994,1482,3,229,0)
 
"KRN",8994,1482,3,230,0)
 Retrieve a list of clinics.
"KRN",8994,1482,3,231,0)
 > S DATA=44
"KRN",8994,1482,3,232,0)
 > S OPTION="GETLIST"              
"KRN",8994,1482,3,233,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,234,0)
 > RESULT="^TMP("GMVMGR",539363784)"
"KRN",8994,1482,3,235,0)
 > D ^%G
"KRN",8994,1482,3,236,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,237,0)
 > ^TMP("GMVMGR",539363784,0)=61
"KRN",8994,1482,3,238,0)
                           1)=44;6^HOUSE/A
"KRN",8994,1482,3,239,0)
                           n)=44;8^HOUSE/C
"KRN",8994,1482,3,240,0)
                           61)=44;39^HOUSE/ZZ
"KRN",8994,1482,3,241,0)
 
"KRN",8994,1482,3,242,0)
 Retrieve a list vital types.
"KRN",8994,1482,3,243,0)
 > S DATA=120.51
"KRN",8994,1482,3,244,0)
 > S OPTION="GETLIST"              
"KRN",8994,1482,3,245,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,246,0)
 > RESULT="^TMP("GMVMGR",539363784)"
"KRN",8994,1482,3,247,0)
 > D ^%G
"KRN",8994,1482,3,248,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,249,0)
 > ^TMP("GMVMGR",539363784,0)=10^GMRV VITAL TYPE
"KRN",8994,1482,3,250,0)
                           1)=120.51;1^BLOOD PRESSURE
"KRN",8994,1482,3,251,0)
                           N)=120.51;19^CENTRAL VENOUS PRESSURE
"KRN",8994,1482,3,252,0)
                           10)=120.51;9^WEIGHT
"KRN",8994,1482,3,253,0)
 
"KRN",8994,1482,3,254,0)
 Retrieve a list of qualifiers.
"KRN",8994,1482,3,255,0)
 > S DATA=120.52
"KRN",8994,1482,3,256,0)
 > S OPTION="GETLIST"              
"KRN",8994,1482,3,257,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,258,0)
 > RESULT="^TMP("GMVMGR",539363784)"
"KRN",8994,1482,3,259,0)
 > D ^%G
"KRN",8994,1482,3,260,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,261,0)
 > ^TMP("GMVMGR",539363784,0)=80^GMRV VITAL QUALIFIER
"KRN",8994,1482,3,262,0)
                           1)=120.52;74^ABDOMINAL
"KRN",8994,1482,3,263,0)
                           n)=120.52;42^ACTUAL
"KRN",8994,1482,3,264,0)
                           80)=120.52;99^WRIST
"KRN",8994,1482,3,265,0)
 
"KRN",8994,1482,3,266,0)
 Retrieve a list of CPRS teams.
"KRN",8994,1482,3,267,0)
 > S DATA=100.21
"KRN",8994,1482,3,268,0)
 > S OPTION="GETLIST"              
"KRN",8994,1482,3,269,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,270,0)
 > RESULT="^TMP("GMVMGR",539363784)"
"KRN",8994,1482,3,271,0)
 > D ^%G                                       
"KRN",8994,1482,3,272,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,273,0)
 > ^TMP("GMVMGR",539363784,0)=103
"KRN",8994,1482,3,274,0)
                           1)=100.21;28^1AS
"KRN",8994,1482,3,275,0)
                           n)=100.21;60^1ASO
"KRN",8994,1482,3,276,0)
                           103)=100.21;96^consult team
"KRN",8994,1482,3,277,0)
 
"KRN",8994,1482,3,278,0)
 Retrieve a list of nursing units.
"KRN",8994,1482,3,279,0)
 > S DATA=211.4
"KRN",8994,1482,3,280,0)
 > S OPTION="GETLIST"               
"KRN",8994,1482,3,281,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,282,0)
 > RESULT="^TMP("GMVMGR",539363784)"
"KRN",8994,1482,3,283,0)
 > D ^%G
"KRN",8994,1482,3,284,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,285,0)
 > ^TMP("GMVMGR",539363784,0)=21
"KRN",8994,1482,3,286,0)
                           1)=211.4;7^10E
"KRN",8994,1482,3,287,0)
                           n)=211.4;17^10W
"KRN",8994,1482,3,288,0)
                           21)=211.4;9^SICU
"KRN",8994,1482,3,289,0)
 
"KRN",8994,1482,3,290,0)
If an error is encountered, a "-1" followed by a caret and the error 
"KRN",8994,1482,3,291,0)
message text (i.e., -1^error message) is returned.
"KRN",8994,1482,3,292,0)
 
"KRN",8994,1482,3,293,0)
 
"KRN",8994,1482,3,294,0)
9) When the OPTION value is GETQUAL, this RPC returns a list of 
"KRN",8994,1482,3,295,0)
qualifiers associated with this vital type.
"KRN",8994,1482,3,296,0)
 
"KRN",8994,1482,3,297,0)
The DATA value is a two part value separated by a semi-colon. The first 
"KRN",8994,1482,3,298,0)
part is vital type (FILE 120.51) IEN. The second part is a category (FILE
"KRN",8994,1482,3,299,0)
120.53) IEN.
"KRN",8994,1482,3,300,0)
 
"KRN",8994,1482,3,301,0)
The TMP global contains:
"KRN",8994,1482,3,302,0)
 ^TMP("GMVMGR",$J,0)=piece1^piece2
"KRN",8994,1482,3,303,0)
 ^TMP("GMVMGR",$J,n)=piece3^piece4
"KRN",8994,1482,3,304,0)
 
"KRN",8994,1482,3,305,0)
  where piece1 = number of entries found
"KRN",8994,1482,3,306,0)
        piece2 = category name (FILE 120.53, Field .01)
"KRN",8994,1482,3,307,0)
        piece3 = qualifier IEN
"KRN",8994,1482,3,308,0)
        piece4 = qualifier name (FILE 120.52, Field .01)
"KRN",8994,1482,3,309,0)
             n = sequential number starting with 1
"KRN",8994,1482,3,310,0)
 
"KRN",8994,1482,3,311,0)
Example:
"KRN",8994,1482,3,312,0)
 > S DATA="1;1",OPTION="GETQUAL"
"KRN",8994,1482,3,313,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,314,0)
 > RESULT="^TMP("GMVMGR",539356158)"
"KRN",8994,1482,3,315,0)
 > D ^%G
"KRN",8994,1482,3,316,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,317,0)
 > ^TMP("GMVMGR",539356158,0)=6^LOCATION
"KRN",8994,1482,3,318,0)
                           1)=139^Test Qualifier
"KRN",8994,1482,3,319,0)
                           2)=53^FEMORAL
"KRN",8994,1482,3,320,0)
                           3)=2^L ARM
"KRN",8994,1482,3,321,0)
                           4)=4^L LEG
"KRN",8994,1482,3,322,0)
                           5)=24^PERIPHERAL
"KRN",8994,1482,3,323,0)
                           6)=1^R ARM 
"KRN",8994,1482,3,324,0)
 
"KRN",8994,1482,3,325,0)
If an error is encountered, a "-1" followed by a caret and the error 
"KRN",8994,1482,3,326,0)
message text (i.e., -1^error message) is returned.
"KRN",8994,1482,3,327,0)
 
"KRN",8994,1482,3,328,0)
 
"KRN",8994,1482,3,329,0)
10) When the OPTION value is GETTEMP, this RPC will return a list data 
"KRN",8994,1482,3,330,0)
input templates definitions.
"KRN",8994,1482,3,331,0)
 
"KRN",8994,1482,3,332,0)
The DATA value is a two part value separated by a caret. The first part 
"KRN",8994,1482,3,333,0)
is an entity value. See IA 2263 for a list of entities. The second part is
"KRN",8994,1482,3,334,0)
a data input template name. 
"KRN",8994,1482,3,335,0)
 
"KRN",8994,1482,3,336,0)
When DATA is null, all data input template definitions are returned.
"KRN",8994,1482,3,337,0)
 
"KRN",8994,1482,3,338,0)
The TMP global contains:
"KRN",8994,1482,3,339,0)
 ^TMP("GMVMGR",$J,0)=piece1
"KRN",8994,1482,3,340,0)
 ^TMP("GMVMGR",$J,n)=piece2^piece3^piece4^piece5^piece6
"KRN",8994,1482,3,341,0)
 
"KRN",8994,1482,3,342,0)
  where piece1 = number of entries returned
"KRN",8994,1482,3,343,0)
        piece2 = 1, 2, 3, or 4. (1 = Domain, 2 = Institution, 3 = Hospital
"KRN",8994,1482,3,344,0)
                 location and 4 = New Person)
"KRN",8994,1482,3,345,0)
        piece3 = file IEN, a semi-colon and global reference
"KRN",8994,1482,3,346,0)
        piece4 = Field .01 value of the file specified in piece3
"KRN",8994,1482,3,347,0)
        piece5 = template name
"KRN",8994,1482,3,348,0)
        piece6 = template description text, a bar, vital type IEN (FILE 
"KRN",8994,1482,3,349,0)
120.51), a colon, a metric flag (0=U.S. and 1=metric), category IEN
"KRN",8994,1482,3,350,0)
(FILE 120.53), a coma, and a qualifier IEN (FILE 120.52), a tilde
"KRN",8994,1482,3,351,0)
indicates additional category and qualifier combinations for the vital
"KRN",8994,1482,3,352,0)
type. A semi-colon indicates the start of the next vital type.
"KRN",8994,1482,3,353,0)
             n = sequential number starting with 1
"KRN",8994,1482,3,354,0)
 
"KRN",8994,1482,3,355,0)
Example:
"KRN",8994,1482,3,356,0)
 > S DATA="USR",OPTION="GETTEMP"               
"KRN",8994,1482,3,357,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,358,0)
 > RESULT="^TMP("GMVMGR",539356158)"
"KRN",8994,1482,3,359,0)
 > D ^%G
"KRN",8994,1482,3,360,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,361,0)
 > ^TMP("GMVMGR",539356158,0)=1
"KRN",8994,1482,3,362,0)
                           1)=4^547;VA(200,^VITUSER,ONE^MY DEFAULT^ALL
"KRN",8994,1482,3,363,0)
                              VITALS|1:0:1,2~2,59~3,50;20:1
"KRN",8994,1482,3,364,0)
 
"KRN",8994,1482,3,365,0)
 
"KRN",8994,1482,3,366,0)
If an error is encountered, a "-1" followed by a caret and the error 
"KRN",8994,1482,3,367,0)
message text (i.e., -1^error message) is returned.
"KRN",8994,1482,3,368,0)
 
"KRN",8994,1482,3,369,0)
 
"KRN",8994,1482,3,370,0)
11) When the OPTION value is LOOKUP, this RPC will do a file lookup
"KRN",8994,1482,3,371,0)
 
"KRN",8994,1482,3,372,0)
The DATA value is a three part value separated by a caret. The first part 
"KRN",8994,1482,3,373,0)
is a file number. The second part is a value to look up. The third part is
"KRN",8994,1482,3,374,0)
the field or fields to do the look up on. If the third piece is not 
"KRN",8994,1482,3,375,0)
defined, the lookup is done on the .01 field of the file.
"KRN",8994,1482,3,376,0)
 
"KRN",8994,1482,3,377,0)
The TMP global contains:
"KRN",8994,1482,3,378,0)
 ^TMP("GMVMGR",$J,0)=piece1
"KRN",8994,1482,3,379,0)
 ^TMP("GMVMGR",$J,n)=piece2^piece3
"KRN",8994,1482,3,380,0)
 
"KRN",8994,1482,3,381,0)
  where piece1 = number of entries found
"KRN",8994,1482,3,382,0)
        piece2 = file number, a semi-colon and record IEN
"KRN",8994,1482,3,383,0)
        piece3 = field value
"KRN",8994,1482,3,384,0)
 
"KRN",8994,1482,3,385,0)
Example:
"KRN",8994,1482,3,386,0)
 > S DATA="44^OUTPAT^.01",OPTION="LOOKUP"      
"KRN",8994,1482,3,387,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,388,0)
 > RESULT="^TMP("GMVMGR",539359648)"
"KRN",8994,1482,3,389,0)
 > D ^%G
"KRN",8994,1482,3,390,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,391,0)
 > ^TMP("GMVMGR",539359648,0)=3
"KRN",8994,1482,3,392,0)
                           1)=44;75^OUTPATIENT NUC MED
"KRN",8994,1482,3,393,0)
                           2)=44;74^OUTPATIENT RADIOLOGY
"KRN",8994,1482,3,394,0)
                           3)=44;80^OUTPATIENT ULTRASOUND
"KRN",8994,1482,3,395,0)
 
"KRN",8994,1482,3,396,0)
If an error is encountered, a "-1" followed by a caret and the error 
"KRN",8994,1482,3,397,0)
message text (i.e., -1^error message) is returned.
"KRN",8994,1482,3,398,0)
 
"KRN",8994,1482,3,399,0)
 
"KRN",8994,1482,3,400,0)
12) When the OPTION value is NEWQUAL, this RPC will always return an 
"KRN",8994,1482,3,401,0)
error message instructing the user to use the New Term Rapid Turnaround 
"KRN",8994,1482,3,402,0)
process.
"KRN",8994,1482,3,403,0)
 
"KRN",8994,1482,3,404,0)
The DATA value is always null.
"KRN",8994,1482,3,405,0)
 
"KRN",8994,1482,3,406,0)
Example:
"KRN",8994,1482,3,407,0)
 > S DATA=""
"KRN",8994,1482,3,408,0)
 > S OPTION="NEWQUAL"
"KRN",8994,1482,3,409,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,410,0)
 > RESULT="^TMP("GMVMGR",539356158)"
"KRN",8994,1482,3,411,0)
 > D ^%G
"KRN",8994,1482,3,412,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,413,0)
 > ^TMP("GMVMGR",539356158,0)=-1^Use the New Term Rapid Turnaround (NTRT) 
"KRN",8994,1482,3,414,0)
   process to add qualifiers
"KRN",8994,1482,3,415,0)
 
"KRN",8994,1482,3,416,0)
  
"KRN",8994,1482,3,417,0)
13) When the OPTION value is NEWTEMP, this RPC will file a new data 
"KRN",8994,1482,3,418,0)
input template.
"KRN",8994,1482,3,419,0)
 
"KRN",8994,1482,3,420,0)
The DATA value is a three part value separated by a caret. The first part 
"KRN",8994,1482,3,421,0)
is an entity. See IA 2263 for a list of entities. The second part is 
"KRN",8994,1482,3,422,0)
the name of the data input template. The third part is the description
"KRN",8994,1482,3,423,0)
text. If the third part is null, the template description will default to
"KRN",8994,1482,3,424,0)
"No Description".
"KRN",8994,1482,3,425,0)
 
"KRN",8994,1482,3,426,0)
The TMP global contains:
"KRN",8994,1482,3,427,0)
 ^TMP("GMVMGR",$J,0)=piece1^piece2^piece3^piece4
"KRN",8994,1482,3,428,0)
 
"KRN",8994,1482,3,429,0)
  where piece1 = 1, 2, 3, or 4 (1 = DOMAIN (#4.2), 2 = INSTITUTION (#4), 
"KRN",8994,1482,3,430,0)
                 3 = HOSPITAL LOCATION, and 4 = NEW PERSON)
"KRN",8994,1482,3,431,0)
        piece2 = IEN, a semi-colon, and global reference (e.g., 3;DIC(4.2)
"KRN",8994,1482,3,432,0)
        piece3 = the .01 field value for the record in piece2
"KRN",8994,1482,3,433,0)
        piece4 = data input name
"KRN",8994,1482,3,434,0)
 
"KRN",8994,1482,3,435,0)
Example:
"KRN",8994,1482,3,436,0)
 > S DATA="USR^1 EAST^All Vital Types"
"KRN",8994,1482,3,437,0)
 > S OPTION="NEWTEMP"
"KRN",8994,1482,3,438,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,439,0)
 > RESULT="^TMP("GMVMGR",539343036)"
"KRN",8994,1482,3,440,0)
 > D ^%G
"KRN",8994,1482,3,441,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,442,0)
 > ^TMP("GMVMGR",539343036,0)=4^547;VA(200,^VITUSER,ONE^1 EAST
"KRN",8994,1482,3,443,0)
 
"KRN",8994,1482,3,444,0)
If an error is encountered, a "-1" followed by a caret and the error 
"KRN",8994,1482,3,445,0)
message text (i.e., -1^error message) is returned.          
"KRN",8994,1482,3,446,0)
  
"KRN",8994,1482,3,447,0)
 
"KRN",8994,1482,3,448,0)
14) When the OPTION value is RENTEMP, this RPC will rename a data input 
"KRN",8994,1482,3,449,0)
template. 
"KRN",8994,1482,3,450,0)
 
"KRN",8994,1482,3,451,0)
The DATA value is a three part value separated by a caret. The first part 
"KRN",8994,1482,3,452,0)
is an entity. See IA 2263 for a list of entities. The second part is the
"KRN",8994,1482,3,453,0)
current template name. The third part is the new name of the template.
"KRN",8994,1482,3,454,0)
 
"KRN",8994,1482,3,455,0)
The TMP global contains:
"KRN",8994,1482,3,456,0)
 ^TMP("GMVMGR",$J,0)=1^Renamed
"KRN",8994,1482,3,457,0)
         
"KRN",8994,1482,3,458,0)
Example:
"KRN",8994,1482,3,459,0)
 > S DATA="USR^FRANK'S DEFAULT^MY DEFAULT"
"KRN",8994,1482,3,460,0)
 > S OPTION="RENTEMP"
"KRN",8994,1482,3,461,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,462,0)
 > RESULT="^TMP("GMVMGR",539356158)"
"KRN",8994,1482,3,463,0)
 > D ^%G
"KRN",8994,1482,3,464,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,465,0)
 > ^TMP("GMVMGR",539356158,0)=1^Renamed
"KRN",8994,1482,3,466,0)
 
"KRN",8994,1482,3,467,0)
If an error is encountered, a "-1" followed by a caret and the error 
"KRN",8994,1482,3,468,0)
message text (i.e., -1^error message) is returned. 
"KRN",8994,1482,3,469,0)
  
"KRN",8994,1482,3,470,0)
 
"KRN",8994,1482,3,471,0)
15) When the OPTION value is SETDATA, this RPC always returns an error
"KRN",8994,1482,3,472,0)
message that instructs the user to use the New Term Rapid Turnaround
"KRN",8994,1482,3,473,0)
process.
"KRN",8994,1482,3,474,0)
  
"KRN",8994,1482,3,475,0)
The DATA value is null.
"KRN",8994,1482,3,476,0)
  
"KRN",8994,1482,3,477,0)
Example:
"KRN",8994,1482,3,478,0)
 > S DATA=""
"KRN",8994,1482,3,479,0)
 > S OPTION="SETDATA"                  
"KRN",8994,1482,3,480,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,481,0)
 > RESULT="^TMP("GMVMGR",539356158)"
"KRN",8994,1482,3,482,0)
 > D ^%G
"KRN",8994,1482,3,483,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,484,0)
 > ^TMP("GMVMGR",539356158,0)=-1^Use the New Term Rapid Turnaround (NTRT) 
"KRN",8994,1482,3,485,0)
   process to add qualifiers
"KRN",8994,1482,3,486,0)
 
"KRN",8994,1482,3,487,0)
  
"KRN",8994,1482,3,488,0)
16) When the OPTION value is SETDEF, this RPC will set that data input 
"KRN",8994,1482,3,489,0)
template as a default.
"KRN",8994,1482,3,490,0)
  
"KRN",8994,1482,3,491,0)
The DATA value is a two part value separated by a caret. The first part is
"KRN",8994,1482,3,492,0)
an entity. See IA 2263 for a list of entities. The second part is the 
"KRN",8994,1482,3,493,0)
name of the template that will become the default template.
"KRN",8994,1482,3,494,0)
 
"KRN",8994,1482,3,495,0)
The TMP global contains:
"KRN",8994,1482,3,496,0)
 ^TMP("GMVMGR",$J,0)=1^Set As Default
"KRN",8994,1482,3,497,0)
 
"KRN",8994,1482,3,498,0)
Example:
"KRN",8994,1482,3,499,0)
 > S DATA="USR^FRANK'S LIST"
"KRN",8994,1482,3,500,0)
 > S OPTION="SETDEF"
"KRN",8994,1482,3,501,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,502,0)
 > RESULT="^TMP("GMVMGR",539356158)"
"KRN",8994,1482,3,503,0)
 > D ^%G
"KRN",8994,1482,3,504,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,505,0)
 > ^TMP("GMVMGR",539356158,0)=1^Set As Default.
"KRN",8994,1482,3,506,0)
 
"KRN",8994,1482,3,507,0)
If an error is encountered, a "-1" followed by a caret and the error 
"KRN",8994,1482,3,508,0)
message text (i.e., -1^error message) is returned.  
"KRN",8994,1482,3,509,0)
  
"KRN",8994,1482,3,510,0)
 
"KRN",8994,1482,3,511,0)
17) When the OPTION value is SETHILO, this RPC will set the high and low 
"KRN",8994,1482,3,512,0)
abnormal values for a vital type.
"KRN",8994,1482,3,513,0)
  
"KRN",8994,1482,3,514,0)
The DATA value is a two part value separated by a caret. The first part 
"KRN",8994,1482,3,515,0)
is a field number in the GMRV VITALS PARAMETERS (#120.57) file. The 
"KRN",8994,1482,3,516,0)
second part is the value that field should be set to.
"KRN",8994,1482,3,517,0)
 
"KRN",8994,1482,3,518,0)
The TMP global contains:
"KRN",8994,1482,3,519,0)
 ^TMP("GMVMGR",$J,0)=1^Update Complete.  
"KRN",8994,1482,3,520,0)
 
"KRN",8994,1482,3,521,0)
Example:
"KRN",8994,1482,3,522,0)
 > S DATA="5.1^102",OPTION="SETHILO"
"KRN",8994,1482,3,523,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,524,0)
 > RESULT="^TMP("GMVMGR",539356158)"
"KRN",8994,1482,3,525,0)
 > D ^%G
"KRN",8994,1482,3,526,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,527,0)
 > ^TMP("GMVMGR",539356158,0)=1^Update Complete.
"KRN",8994,1482,3,528,0)
 
"KRN",8994,1482,3,529,0)
If an error is encountered, a "-1" followed by a caret and the error 
"KRN",8994,1482,3,530,0)
message text (i.e., -1^error message) is returned.
"KRN",8994,1482,3,531,0)
  
"KRN",8994,1482,3,532,0)
 
"KRN",8994,1482,3,533,0)
18) When the OPTION value is SETTEMP, this RPC will save the input 
"KRN",8994,1482,3,534,0)
template definition.
"KRN",8994,1482,3,535,0)
  
"KRN",8994,1482,3,536,0)
DATA is a three part value separated by a caret. The first part is 
"KRN",8994,1482,3,537,0)
an entity. See IA 2263 for a list of entities. The second part is the
"KRN",8994,1482,3,538,0)
template name. The third part is the template definition.
"KRN",8994,1482,3,539,0)
 
"KRN",8994,1482,3,540,0)
The TMP global contains:
"KRN",8994,1482,3,541,0)
 ^TMP("GMVMGR",$J,0)=1^Template Saved.
"KRN",8994,1482,3,542,0)
  
"KRN",8994,1482,3,543,0)
Example:
"KRN",8994,1482,3,544,0)
 > S DATA="USR^ONE VITAL TYPE ONLY^CONTAINS ONLY ONE VITAL TYPE|2:0:1,102"
"KRN",8994,1482,3,545,0)
 > S OPTION="SETTEMP"
"KRN",8994,1482,3,546,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,547,0)
 > RESULT="^TMP("GMVMGR",539356158)"
"KRN",8994,1482,3,548,0)
 > D ^%G
"KRN",8994,1482,3,549,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,550,0)
 > ^TMP("GMVMGR",539356158,0)=1^Template Saved.
"KRN",8994,1482,3,551,0)
 
"KRN",8994,1482,3,552,0)
 
"KRN",8994,1482,3,553,0)
If an error is encountered, a "-1" followed by a caret and the error 
"KRN",8994,1482,3,554,0)
message text (i.e., -1^error message) is returned.  
"KRN",8994,1482,3,555,0)
 
"KRN",8994,1482,3,556,0)
  
"KRN",8994,1482,3,557,0)
19) When the OPTION value is VALID, this RPC will validate data.
"KRN",8994,1482,3,558,0)
 
"KRN",8994,1482,3,559,0)
DATA is a four part value separated by a caret. The first part is the 
"KRN",8994,1482,3,560,0)
a file number. The second part is a record number. The third part is a
"KRN",8994,1482,3,561,0)
field number. The fourth part is the value to validate.
"KRN",8994,1482,3,562,0)
 
"KRN",8994,1482,3,563,0)
The TMP global contains:
"KRN",8994,1482,3,564,0)
 ^TMP("GMVMGR",$J,0)=1^Valid Data
"KRN",8994,1482,3,565,0)
 
"KRN",8994,1482,3,566,0)
Example:
"KRN",8994,1482,3,567,0)
 > S DATA="120.5^8864^.01^3051012.1034",OPTION="VALID"
"KRN",8994,1482,3,568,0)
 > D RPC^GMVRPCM(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1482,3,569,0)
 > RESULT="^TMP("GMVMGR",539343036)"
"KRN",8994,1482,3,570,0)
 > D ^%G
"KRN",8994,1482,3,571,0)
 > Global ^TMP("GMVMGR",$J
"KRN",8994,1482,3,572,0)
 > ^TMP("GMVMGR",539343036,0)=1^Valid Data 
"KRN",8994,1482,3,573,0)
 
"KRN",8994,1482,3,574,0)
If an error is encountered, a "-1" followed by a caret and the error 
"KRN",8994,1482,3,575,0)
message text (i.e., -1^error message) is returned.
"KRN",8994,1491,-1)
0^5
"KRN",8994,1491,0)
GMV GET CURRENT TIME^TIME^GMVUTL7^1^S^0^^0^
"KRN",8994,1491,1,0)
^8994.01^3^3^3051116^^^^
"KRN",8994,1491,1,1,0)
Gets the current date and time from the server.
"KRN",8994,1491,1,2,0)
 
"KRN",8994,1491,1,3,0)
This remote procedure call is documented in Integration Agreement 4355.
"KRN",8994,1491,2,0)
^8994.02A^^0
"KRN",8994,1491,3,0)
^8994.03^9^9^3051116^^
"KRN",8994,1491,3,1,0)
Returns current date and time in FileMan internal and external format.
"KRN",8994,1491,3,2,0)
 
"KRN",8994,1491,3,3,0)
Example:
"KRN",8994,1491,3,4,0)
 > D TIME^GMVUTL7(.RESULT) ZW RESULT
"KRN",8994,1491,3,5,0)
 > RESULT=3051011.143332
"KRN",8994,1491,3,6,0)
 
"KRN",8994,1491,3,7,0)
Note: There is an input parameter, P2, listed in the TIME line tag of the
"KRN",8994,1491,3,8,0)
GMVUTL7 routine. However, it is not used. It can be set to any value or
"KRN",8994,1491,3,9,0)
omitted. It remains for backwards compatibility.
"KRN",8994,1494,-1)
0^10
"KRN",8994,1494,0)
GMV USER^RPC^GMVRPCU^4^S^0^^1
"KRN",8994,1494,1,0)
^8994.01^3^3^3051028^^^^
"KRN",8994,1494,1,1,0)
Retrieves data about the user (e.g., parameter settings).
"KRN",8994,1494,1,2,0)
 
"KRN",8994,1494,1,3,0)
This remote procedure call is documented in Integration Agreement 4366.
"KRN",8994,1494,2,0)
^8994.02A^2^2
"KRN",8994,1494,2,1,0)
OPTION^1^10^1^1
"KRN",8994,1494,2,1,1,0)
^8994.021^1^1^3020902^^
"KRN",8994,1494,2,1,1,1,0)
Routine tag line to call in GMVRPCU.
"KRN",8994,1494,2,2,0)
DATA^1^100^1^2
"KRN",8994,1494,2,2,1,0)
^8994.021^1^1^3051028^^^^
"KRN",8994,1494,2,2,1,1,0)
Other data as required for the call.
"KRN",8994,1494,2,"B","DATA",2)

"KRN",8994,1494,2,"B","OPTION",1)

"KRN",8994,1494,2,"PARAMSEQ",1,1)

"KRN",8994,1494,2,"PARAMSEQ",2,2)

"KRN",8994,1494,3,0)
^^96^96^3051028^
"KRN",8994,1494,3,1,0)
This Remote Procedure Call (RPC) performs various actions focusing on the 
"KRN",8994,1494,3,2,0)
user. The entry point is RPC^GMVRPCU. It has input parameters of RESULTS, 
"KRN",8994,1494,3,3,0)
OPTION and DATA (e.g., RPC^GMVRPCU(RESULTS,OPTION,DATA)). 
"KRN",8994,1494,3,4,0)
 
"KRN",8994,1494,3,5,0)
The RESULTS variable contains the results of the call or the location 
"KRN",8994,1494,3,6,0)
where the results can be found.
"KRN",8994,1494,3,7,0)
 
"KRN",8994,1494,3,8,0)
The OPTION variable identifies another entry point in the GMVRPCU routine 
"KRN",8994,1494,3,9,0)
that is invoked to process the call.
"KRN",8994,1494,3,10,0)
 
"KRN",8994,1494,3,11,0)
The DATA variable contains any values needed by the OPTION variable to 
"KRN",8994,1494,3,12,0)
process the call.
"KRN",8994,1494,3,13,0)
 
"KRN",8994,1494,3,14,0)
1) When the OPTION value is SETPAR, this RPC will set and/or delete the 
"KRN",8994,1494,3,15,0)
value of a GMV USER DEFAULTS setting (e.g., the user's default template).
"KRN",8994,1494,3,16,0)
 
"KRN",8994,1494,3,17,0)
The DATA value is a two part value separated by a caret. The first part  
"KRN",8994,1494,3,18,0)
is name of a setting. The second part is the value of the setting. If the 
"KRN",8994,1494,3,19,0)
second part is null, the existing value of the setting is deleted.
"KRN",8994,1494,3,20,0)
 
"KRN",8994,1494,3,21,0)
The TMP global contains:
"KRN",8994,1494,3,22,0)
 ^TMP("GMVUSER",$J,0)=1^Parameter set.
"KRN",8994,1494,3,23,0)
 or
"KRN",8994,1494,3,24,0)
 ^TMP("GMVUSER",$J,0)=1^Parameter cleared
"KRN",8994,1494,3,25,0)
 
"KRN",8994,1494,3,26,0)
Example:
"KRN",8994,1494,3,27,0)
 > S DATA="DefaultTemplate^547;VA(200,|MY DEFAULT",OPTION="SETPAR"
"KRN",8994,1494,3,28,0)
 > D RPC^GMVRPCU(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1494,3,29,0)
 > RESULT="^TMP("GMVUSER",539374023)"
"KRN",8994,1494,3,30,0)
 > D ^%G
"KRN",8994,1494,3,31,0)
 > Global ^TMP("GMVUSER",$J
"KRN",8994,1494,3,32,0)
 > ^TMP("GMVUSER",539374023,0)=1^Parameter set.
"KRN",8994,1494,3,33,0)
 
"KRN",8994,1494,3,34,0)
If an error is encountered, a "-1" followed by a caret and the error 
"KRN",8994,1494,3,35,0)
message text (i.e., -1^error message) is returned.
"KRN",8994,1494,3,36,0)
 
"KRN",8994,1494,3,37,0)
 
"KRN",8994,1494,3,38,0)
 
"KRN",8994,1494,3,39,0)
2) When the OPTION value is GETPAR, this RPC will return the value of the
"KRN",8994,1494,3,40,0)
GMV USER DEFAULTS setting specified in the DATA value.
"KRN",8994,1494,3,41,0)
 
"KRN",8994,1494,3,42,0)
The DATA value is a one part value. It is the name of a setting (e.g., 
"KRN",8994,1494,3,43,0)
the user's default template).
"KRN",8994,1494,3,44,0)
 
"KRN",8994,1494,3,45,0)
 The TMP global contains:
"KRN",8994,1494,3,46,0)
  ^TMP("GMVUSER",$J,0)=value of setting or null
"KRN",8994,1494,3,47,0)
 
"KRN",8994,1494,3,48,0)
Example:
"KRN",8994,1494,3,49,0)
 > S DATA="DefaultTemplate",OPTION="GETPAR"       
"KRN",8994,1494,3,50,0)
 > D RPC^GMVRPCU(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,1494,3,51,0)
 > RESULT="^TMP("GMVUSER",539374023)"
"KRN",8994,1494,3,52,0)
 > D ^%G
"KRN",8994,1494,3,53,0)
 > Global ^TMP("GMVUSER",$J
"KRN",8994,1494,3,54,0)
 > ^TMP("GMVUSER",539374023,0)=547;VA(200,|ONE VITAL TYPE ONLY
"KRN",8994,1494,3,55,0)
 
"KRN",8994,1494,3,56,0)
 
"KRN",8994,1494,3,57,0)
3) When the OPTION value is SIGNON, this RPC will return information about
"KRN",8994,1494,3,58,0)
the user who is currently signed onto the system.
"KRN",8994,1494,3,59,0)
 
"KRN",8994,1494,3,60,0)
The DATA value is not used. The user's IEN (i.e., DUZ) to the NEW PERSON 
"KRN",8994,1494,3,61,0)
(#200) file value must be defined when this call is made.
"KRN",8994,1494,3,62,0)
 
"KRN",8994,1494,3,63,0)
The RESULT variable will return the following array:
"KRN",8994,1494,3,64,0)
  RESULT(0)=NEW PERSON (#200) file internal entry number (DUZ)
"KRN",8994,1494,3,65,0)
  RESULT(1)=User's name (FILE 200, Field .01)
"KRN",8994,1494,3,66,0)
  RESULT(2)=Domain (FILE 4.2) internal entry number
"KRN",8994,1494,3,67,0)
  RESULT(3)=Domain name (FILE 4.2, Field .01)
"KRN",8994,1494,3,68,0)
  RESULT(4)=Institution (FILE 4) internal entry number the user is signed
"KRN",8994,1494,3,69,0)
             into (i.e., DUZ(2))
"KRN",8994,1494,3,70,0)
  RESULT(5)=Institution name (FILE 4, Field .01)
"KRN",8994,1494,3,71,0)
  RESULT(6)="0" or "1". "1" indicates the user has the GMV MANAGER or 
"KRN",8994,1494,3,72,0)
             programmer key. "0" indicates the user has neither key.
"KRN",8994,1494,3,73,0)
  RESULT(7)=The user's title (FILE 200, Field 8)
"KRN",8994,1494,3,74,0)
  RESULT(8)=This value is always null.
"KRN",8994,1494,3,75,0)
  RESULT(9)=Number of seconds the system will wait for a response from 
"KRN",8994,1494,3,76,0)
             the user (i.e., DTIME). The default time is 300 seconds.
"KRN",8994,1494,3,77,0)
  RESULT(10)=INSTITUTION (#4) file IEN^FILE 4 external value^station 
"KRN",8994,1494,3,78,0)
              number (e.g., 499^SUPPORT ISC^499).
"KRN",8994,1494,3,79,0)
 
"KRN",8994,1494,3,80,0)
Example:
"KRN",8994,1494,3,81,0)
 > S OPTION="SIGNON"
"KRN",8994,1494,3,82,0)
 > D RPC(.RESULT,OPTION) ZW RESULT
"KRN",8994,1494,3,83,0)
 > RESULT="^TMP("GMVUSER",539375907)"
"KRN",8994,1494,3,84,0)
 > D ^%G
"KRN",8994,1494,3,85,0)
 > Global ^TMP("GMVUSER",$J
"KRN",8994,1494,3,86,0)
 > ^TMP("GMVUSER",539375907,0)=547
"KRN",8994,1494,3,87,0)
                            1)=VITUSER,ONE
"KRN",8994,1494,3,88,0)
                            2)=334
"KRN",8994,1494,3,89,0)
                            3)=DEV.DEV.FO-HINES.MED.VA.GOV
"KRN",8994,1494,3,90,0)
                            4)=499
"KRN",8994,1494,3,91,0)
                            5)=SUPPORT ISC
"KRN",8994,1494,3,92,0)
                            6)=1
"KRN",8994,1494,3,93,0)
                            7)=PROGRAMMER
"KRN",8994,1494,3,94,0)
                            8)=
"KRN",8994,1494,3,95,0)
                            9)=9999
"KRN",8994,1494,3,96,0)
                           10)=499^SUPPORT ISC^499
"KRN",8994,1571,-1)
0^9
"KRN",8994,1571,0)
GMV PARAMETER^RPC^GMVPAR^4^S^0^^1
"KRN",8994,1571,1,0)
^^3^3^3051114^
"KRN",8994,1571,1,1,0)
Sets and retrieves parameter values used by the graphical user interface.
"KRN",8994,1571,1,2,0)
 
"KRN",8994,1571,1,3,0)
This remote procedure call is documented in Integration Agreement 4367.
"KRN",8994,1571,2,0)
^8994.02A^5^5
"KRN",8994,1571,2,1,0)
OPTION^1^10^1^1
"KRN",8994,1571,2,1,1,0)
^^1^1^3020902^
"KRN",8994,1571,2,1,1,1,0)
Routine tag line to call.
"KRN",8994,1571,2,2,0)
ENT^1^^^2
"KRN",8994,1571,2,2,1,0)
^^2^2^3051101^
"KRN",8994,1571,2,2,1,1,0)
The entity value to use. See Integration Agreement 2263 and FILE 8989.518
"KRN",8994,1571,2,2,1,2,0)
for a list of entity values.
"KRN",8994,1571,2,3,0)
PAR^1^^^3
"KRN",8994,1571,2,3,1,0)
^^2^2^3051031^
"KRN",8994,1571,2,3,1,1,0)
The parameter value to use. See FILE 8989.51 for a list of parameter
"KRN",8994,1571,2,3,1,2,0)
values. This value must start with the letters "GMV" (no quotes).
"KRN",8994,1571,2,4,0)
INST^1^^^4
"KRN",8994,1571,2,4,1,0)
^^1^1^3051031^
"KRN",8994,1571,2,4,1,1,0)
The instance to use. 
"KRN",8994,1571,2,5,0)
VAL^1^^^6
"KRN",8994,1571,2,5,1,0)
^8994.021^1^1^3051114^^^^
"KRN",8994,1571,2,5,1,1,0)
The value assigned to a parameter. Values are stored in FILE 8989.5.
"KRN",8994,1571,2,"B","ENT",2)

"KRN",8994,1571,2,"B","INST",4)

"KRN",8994,1571,2,"B","OPTION",1)

"KRN",8994,1571,2,"B","PAR",3)

"KRN",8994,1571,2,"B","VAL",5)

"KRN",8994,1571,2,"PARAMSEQ",1,1)

"KRN",8994,1571,2,"PARAMSEQ",2,2)

"KRN",8994,1571,2,"PARAMSEQ",3,3)

"KRN",8994,1571,2,"PARAMSEQ",4,4)

"KRN",8994,1571,2,"PARAMSEQ",6,5)

"KRN",8994,1571,3,0)
^8994.03^105^105^3051114^^
"KRN",8994,1571,3,1,0)
This remote procedure call sets and retrieves parameter settings that 
"KRN",8994,1571,3,2,0)
are used in the graphical user interface.
"KRN",8994,1571,3,3,0)
 
"KRN",8994,1571,3,4,0)
The entry point is RPC^GMVPAR.. It has input parameters of RESULTS,
"KRN",8994,1571,3,5,0)
OPTION, ENT, PAR, INST and VAL (ex:
"KRN",8994,1571,3,6,0)
RPC^GMVPAR(RESULTS,OPTION,ENT,PAR,INST,VAL).
"KRN",8994,1571,3,7,0)
 
"KRN",8994,1571,3,8,0)
The RESULTS variable contains the results of the call or the location 
"KRN",8994,1571,3,9,0)
where the results can be found.
"KRN",8994,1571,3,10,0)
 
"KRN",8994,1571,3,11,0)
The OPTION variable identifies the entry point in the GMVPAR routine 
"KRN",8994,1571,3,12,0)
that will be invoked to process the call.
"KRN",8994,1571,3,13,0)
 
"KRN",8994,1571,3,14,0)
If an error occurrs, the ^TMP global contains: 
"KRN",8994,1571,3,15,0)
 ^TMP($J,0)=-1^error message text
"KRN",8994,1571,3,16,0)
 
"KRN",8994,1571,3,17,0)
         
"KRN",8994,1571,3,18,0)
1) When the OPTION value is DELPAR, this RPC deletes the value for the 
"KRN",8994,1571,3,19,0)
instance, parameter and entity specified.
"KRN",8994,1571,3,20,0)
 
"KRN",8994,1571,3,21,0)
The TMP global contains:
"KRN",8994,1571,3,22,0)
 ^TMP($J,0)=1^Instance deleted
"KRN",8994,1571,3,23,0)
 
"KRN",8994,1571,3,24,0)
Example:
"KRN",8994,1571,3,25,0)
 > S OPTION="DELPAR",ENT="SYS",PAR="GMV DLL VERSION"
"KRN",8994,1571,3,26,0)
 > S INST="GMV_VITALSVIEWENTER.DLL:v. 07/21/05 10:34"
"KRN",8994,1571,3,27,0)
 > D RPC^GMVPAR(.RESULT,OPTION,ENT,PAR,INST) ZW RESULT                   
"KRN",8994,1571,3,28,0)
 > RESULT="^TMP(538999278)"
"KRN",8994,1571,3,29,0)
 > D ^%G
"KRN",8994,1571,3,30,0)
 > Global ^TMP($J
"KRN",8994,1571,3,31,0)
 > ^TMP(538999278,0)=1^Instance deleted
"KRN",8994,1571,3,32,0)
 
"KRN",8994,1571,3,33,0)
 
"KRN",8994,1571,3,34,0)
2) When the OPTION value is ENTVAL, this RPC returns the external value 
"KRN",8994,1571,3,35,0)
of the entity specified.
"KRN",8994,1571,3,36,0)
 
"KRN",8994,1571,3,37,0)
The TMP global contains:
"KRN",8994,1571,3,38,0)
 TMP($J,0)=external value
"KRN",8994,1571,3,39,0)
                         
"KRN",8994,1571,3,40,0)
Example:
"KRN",8994,1571,3,41,0)
 > S OPTION="ENTVAL",ENT="USR"              
"KRN",8994,1571,3,42,0)
 > D RPC(.RESULT,OPTION,ENT) ZW RESULT 
"KRN",8994,1571,3,43,0)
 > RESULT="^TMP(538993252)"
"KRN",8994,1571,3,44,0)
 > D ^%G
"KRN",8994,1571,3,45,0)
 > Global ^TMP($J
"KRN",8994,1571,3,46,0)
 > ^TMP(538993252,0)=TRAXLER,FRANK
"KRN",8994,1571,3,47,0)
 
"KRN",8994,1571,3,48,0)
 
"KRN",8994,1571,3,49,0)
3) When the OPTION value is GETLST, this RPC returns a list of instances 
"KRN",8994,1571,3,50,0)
and their values for the parameter and entity specified.
"KRN",8994,1571,3,51,0)
 
"KRN",8994,1571,3,52,0)
The TMP global contains:
"KRN",8994,1571,3,53,0)
 ^TMP($J,0)=piece1
"KRN",8994,1571,3,54,0)
 ^TMP($J,n)=piece2^piece3
"KRN",8994,1571,3,55,0)
 
"KRN",8994,1571,3,56,0)
  where piece1 = number of entries returned
"KRN",8994,1571,3,57,0)
        piece2 = instance name
"KRN",8994,1571,3,58,0)
        piece3 = instance value
"KRN",8994,1571,3,59,0)
             n = sequential number starting with 1
"KRN",8994,1571,3,60,0)
 
"KRN",8994,1571,3,61,0)
 
"KRN",8994,1571,3,62,0)
Example:
"KRN",8994,1571,3,63,0)
 > S OPTION="GETLST",ENT="USR",PAR="GMV USER DEFAULTS"
"KRN",8994,1571,3,64,0)
 > D RPC(.RESULT,OPTION,ENT,PAR) ZW RESULT
"KRN",8994,1571,3,65,0)
 > RESULT="^TMP(538993252)"
"KRN",8994,1571,3,66,0)
 > D ^%G
"KRN",8994,1571,3,67,0)
 > Global ^TMP($J
"KRN",8994,1571,3,68,0)
 > ^TMP(538993252,0)=44
"KRN",8994,1571,3,69,0)
                  1)=DefaultTemplate^547;VA(200,|MY DEFAULT
"KRN",8994,1571,3,70,0)
                  n)=UNIT_INDEX^0
"KRN",8994,1571,3,71,0)
                  44)=WARD_INDEX^-1
"KRN",8994,1571,3,72,0)
 
"KRN",8994,1571,3,73,0)
        
"KRN",8994,1571,3,74,0)
4) When the OPTION value is GETPAR, this RPC will get the value for the 
"KRN",8994,1571,3,75,0)
instance, parameter and entity specified. 
"KRN",8994,1571,3,76,0)
 
"KRN",8994,1571,3,77,0)
The TMP global contains:
"KRN",8994,1571,3,78,0)
 ^TMP($J,0)=piece1
"KRN",8994,1571,3,79,0)
 
"KRN",8994,1571,3,80,0)
 where piece1 = value
"KRN",8994,1571,3,81,0)
 
"KRN",8994,1571,3,82,0)
Example:
"KRN",8994,1571,3,83,0)
 > S ENT="USR",PAR="GMV USER DEFAULTS",INST="DefaultTemplate"   
"KRN",8994,1571,3,84,0)
 > S OPTION="GETPAR"
"KRN",8994,1571,3,85,0)
 > D RPC(.RESULT,OPTION,ENT,PAR,INST) ZW RESULT              
"KRN",8994,1571,3,86,0)
 > RESULT="^TMP(538993252)"
"KRN",8994,1571,3,87,0)
 > D ^%G
"KRN",8994,1571,3,88,0)
 > Global ^TMP($J
"KRN",8994,1571,3,89,0)
 > ^TMP(538993252,0)=547;VA(200,|MY DEFAULT
"KRN",8994,1571,3,90,0)
 
"KRN",8994,1571,3,91,0)
 
"KRN",8994,1571,3,92,0)
5) When the OPTION value is SETPAR, this RPC set the value of an instance 
"KRN",8994,1571,3,93,0)
for the instance, parameter and entity specified.
"KRN",8994,1571,3,94,0)
 
"KRN",8994,1571,3,95,0)
The TMP global contains:
"KRN",8994,1571,3,96,0)
 ^TMP($J,0)=1^Parameter updated
"KRN",8994,1571,3,97,0)
 
"KRN",8994,1571,3,98,0)
Example: 
"KRN",8994,1571,3,99,0)
 > S OPTION="SETPAR",ENT="USR",PAR="GMV USER DEFAULTS",INST="SearchDelay"
"KRN",8994,1571,3,100,0)
 > S VAL=1.5
"KRN",8994,1571,3,101,0)
 > D RPC^GMVPAR(.RESULT,OPTION,ENT,PAR,INST,VAL) ZW RESULT
"KRN",8994,1571,3,102,0)
 > RESULT="^TMP(538999278)"
"KRN",8994,1571,3,103,0)
 > D ^%G
"KRN",8994,1571,3,104,0)
 > Global ^TMP($J
"KRN",8994,1571,3,105,0)
 > ^TMP(538999278,0)=1^Parameter updated
"KRN",8994,1685,-1)
0^6
"KRN",8994,1685,0)
GMV GET VITAL TYPE IEN^TYPE^GMVUTL8^1^S^0
"KRN",8994,1685,1,0)
^^4^4^3051028^
"KRN",8994,1685,1,1,0)
Returns the IEN if the value is found in the GMRV VITAL TYPE (#120.51)
"KRN",8994,1685,1,2,0)
file.
"KRN",8994,1685,1,3,0)
 
"KRN",8994,1685,1,4,0)
This remote procedure call is documented in Integration Agreement 4357.
"KRN",8994,1685,2,0)
^8994.02A^1^1
"KRN",8994,1685,2,1,0)
GMVTYPE^1^55^1^1
"KRN",8994,1685,2,1,1,0)
^8994.021^1^1^3051028^^^
"KRN",8994,1685,2,1,1,1,0)
GMVTYPE = Name of Vital Type (from FILE 120.51) (e.g., WEIGHT)
"KRN",8994,1685,2,"B","GMVTYPE",1)

"KRN",8994,1685,2,"PARAMSEQ",1,1)

"KRN",8994,1685,3,0)
^8994.03^6^6^3051028^^
"KRN",8994,1685,3,1,0)
Returns the IEN if GMVTYPE exists in FILE 120.51.
"KRN",8994,1685,3,2,0)
 
"KRN",8994,1685,3,3,0)
Example:
"KRN",8994,1685,3,4,0)
 > S GMVTYPE="WEIGHT"
"KRN",8994,1685,3,5,0)
 > D TYPE^GMVUTL8(.RESULT,GMVTYPE) ZW RESULT
"KRN",8994,1685,3,6,0)
 > RESULT=9
"KRN",8994,1686,-1)
0^4
"KRN",8994,1686,0)
GMV GET CATEGORY IEN^CATEGORY^GMVUTL8^1^S^0
"KRN",8994,1686,1,0)
^^4^4^3051028^
"KRN",8994,1686,1,1,0)
Returns the IEN if the value is found in the GMRV VITAL CATEGORY (#120.53)
"KRN",8994,1686,1,2,0)
file.
"KRN",8994,1686,1,3,0)
 
"KRN",8994,1686,1,4,0)
This remote procedure call is documented in Integration Agreement 4354.
"KRN",8994,1686,2,0)
^8994.02A^1^1
"KRN",8994,1686,2,1,0)
GMVCAT^1^45^1^1
"KRN",8994,1686,2,1,1,0)
^8994.021^1^1^3051028^^^^
"KRN",8994,1686,2,1,1,1,0)
GMVCAT = Name of Category (from FILE 120.53) (e.g., METHOD)
"KRN",8994,1686,2,"B","GMVCAT",1)

"KRN",8994,1686,2,"PARAMSEQ",1,1)

"KRN",8994,1686,3,0)
^8994.03^6^6^3051028^^
"KRN",8994,1686,3,1,0)
Returns the IEN if GMVCAT exists in FILE 120.53
"KRN",8994,1686,3,2,0)
 
"KRN",8994,1686,3,3,0)
Example:
"KRN",8994,1686,3,4,0)
 > S GMVCAT="METHOD"
"KRN",8994,1686,3,5,0)
 > D CATEGORY^GMVUTL8(.RESULT,GMVCAT) ZW RESULT
"KRN",8994,1686,3,6,0)
 > RESULT=2
"KRN",8994,2334,-1)
0^1
"KRN",8994,2334,0)
GMV DLL VERSION^DLL^GMVUTL8^1^S^0^^
"KRN",8994,2334,1,0)
^^4^4^3051114^
"KRN",8994,2334,1,1,0)
Returns a YES or NO response to indicate if the Dynamic Link Library (DLL)
"KRN",8994,2334,1,2,0)
file should be used.
"KRN",8994,2334,1,3,0)
 
"KRN",8994,2334,1,4,0)
This remote procedure call is documented in Integration Agreement 4420.
"KRN",8994,2334,2,0)
^8994.02A^1^1
"KRN",8994,2334,2,1,0)
GMVX^1^50^1^1
"KRN",8994,2334,2,1,1,0)
^8994.021^2^2^3051114^^^^
"KRN",8994,2334,2,1,1,1,0)
This value is the name of the file and the date/time associated with it 
"KRN",8994,2334,2,1,1,2,0)
(e.g., GMV_VITALSVIEWENTER.DLL:v. 07/21/05 10:34).
"KRN",8994,2334,2,"B","GMVX",1)

"KRN",8994,2334,2,"PARAMSEQ",1,1)

"KRN",8994,2334,3,0)
^8994.03^7^7^3051114^^^
"KRN",8994,2334,3,1,0)
Returns YES if the file can be used. Returns NO, if the file cannot be
"KRN",8994,2334,3,2,0)
used. Returns null if the file was not found.
"KRN",8994,2334,3,3,0)
 
"KRN",8994,2334,3,4,0)
Example:
"KRN",8994,2334,3,5,0)
 > S GMVX="GMV_VITALSVIEWENTER.DLL:v. 07/21/05 10:34"
"KRN",8994,2334,3,6,0)
 > D DLL^GMVUTL8(.RESULT,GMVX) ZW RESULT
"KRN",8994,2334,3,7,0)
 > RESULT="NO"
"KRN",8994,2338,-1)
0^16
"KRN",8994,2338,0)
GMV LOCATION SELECT^RPC^GMVRPCHL^4^S^0^^1
"KRN",8994,2338,1,0)
^8994.01^4^4^3051219^^^^
"KRN",8994,2338,1,1,0)
Select a hospital location by name, from a patient appointment or from a
"KRN",8994,2338,1,2,0)
patient admission.
"KRN",8994,2338,1,3,0)
 
"KRN",8994,2338,1,4,0)
This remote procedure is documented in Integration Agreement 4461.
"KRN",8994,2338,2,0)
^8994.02A^2^2
"KRN",8994,2338,2,1,0)
OPTION^1^10^1^1
"KRN",8994,2338,2,1,1,0)
^^1^1^3051206^
"KRN",8994,2338,2,1,1,1,0)
Routine tag line in GMVRPCHL to call.
"KRN",8994,2338,2,2,0)
DATA^1^100^1^2
"KRN",8994,2338,2,2,1,0)
^8994.021^1^1^3051219^^^^
"KRN",8994,2338,2,2,1,1,0)
Other data as required for the call.
"KRN",8994,2338,2,"B","DATA",2)

"KRN",8994,2338,2,"B","OPTION",1)

"KRN",8994,2338,2,"PARAMSEQ",1,1)

"KRN",8994,2338,2,"PARAMSEQ",2,2)

"KRN",8994,2338,3,0)
^^117^117^3051219^
"KRN",8994,2338,3,1,0)
This remote procedure call allows the user to select a hospital location. 
"KRN",8994,2338,3,2,0)
The entry point is RPC^GMVRPCHL. It has input parameters of RESULTS, 
"KRN",8994,2338,3,3,0)
OPTION and DATA (ex. RPC^GMVRPCHL(.RESULTS,OPTION,DATA).
"KRN",8994,2338,3,4,0)
 
"KRN",8994,2338,3,5,0)
The RESULTS variable will contain the ^TMP("GMVHLOC",$J) global array 
"KRN",8994,2338,3,6,0)
reference. The ^TMP("GMVHLOC",$J) global array contains the results.
"KRN",8994,2338,3,7,0)
 
"KRN",8994,2338,3,8,0)
The OPTION variable identifies a line label in the GMVRPCHL routine that 
"KRN",8994,2338,3,9,0)
will be invoked to process the call.
"KRN",8994,2338,3,10,0)
 
"KRN",8994,2338,3,11,0)
The DATA variable contains any additional values needed by the OPTION 
"KRN",8994,2338,3,12,0)
variable to process the call.
"KRN",8994,2338,3,13,0)
 
"KRN",8994,2338,3,14,0)
 1) When the OPTION value is NAME, this RPC will do a file lookup.
"KRN",8994,2338,3,15,0)
 
"KRN",8994,2338,3,16,0)
 The DATA value is a three part value separated by carets(^). The first 
"KRN",8994,2338,3,17,0)
 part is a file number. The second part is a value to look up. The third
"KRN",8994,2338,3,18,0)
 part is the field or fields to do the look up on. If the third piece is
"KRN",8994,2338,3,19,0)
 not defined, the lookup is done on the .01 field of the file.
"KRN",8994,2338,3,20,0)
 
"KRN",8994,2338,3,21,0)
 The TMP global contains:
"KRN",8994,2338,3,22,0)
  ^TMP("GMVHLOC",$J,0)=piece1
"KRN",8994,2338,3,23,0)
  ^TMP("GMVHLOC",$J,n)=piece2^piece3
"KRN",8994,2338,3,24,0)
 
"KRN",8994,2338,3,25,0)
   where piece1 = number of entries found
"KRN",8994,2338,3,26,0)
         piece2 = file number, a semi-colon and record IEN
"KRN",8994,2338,3,27,0)
         piece3 = field value
"KRN",8994,2338,3,28,0)
 
"KRN",8994,2338,3,29,0)
 Example:
"KRN",8994,2338,3,30,0)
 >S OPTION="NAME",DATA="44^OUTPATIENT^.01"    
"KRN",8994,2338,3,31,0)
 >D RPC^GMVRPCHL(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,2338,3,32,0)
 >RESULT="^TMP("GMVHLOC",539052767)"
"KRN",8994,2338,3,33,0)
 >D ^%G
"KRN",8994,2338,3,34,0)
 >Global ^TMP("GMVHLOC",$J
"KRN",8994,2338,3,35,0)
 >^TMP("GMVHLOC",539052767,0)=3
"KRN",8994,2338,3,36,0)
                          1)=44;75^OUTPATIENT NUC MED
"KRN",8994,2338,3,37,0)
                          2)=44;74^OUTPATIENT RADIOLOGY
"KRN",8994,2338,3,38,0)
                          3)=44;80^OUTPATIENT ULTRASOUND
"KRN",8994,2338,3,39,0)
 
"KRN",8994,2338,3,40,0)
 
"KRN",8994,2338,3,41,0)
 2) When the OPTION value is APPT, this RPC will return a list of clinic 
"KRN",8994,2338,3,42,0)
 appointments for the patient.
"KRN",8994,2338,3,43,0)
 
"KRN",8994,2338,3,44,0)
 The DATA value is a four part value separated by carets(^). The first 
"KRN",8994,2338,3,45,0)
 piece is DFN. The second piece is the start date of the search. If 
"KRN",8994,2338,3,46,0)
 not defined, this value defaults to 365 days prior to today. The third 
"KRN",8994,2338,3,47,0)
 piece is the end date of the search. If not defined, the value defaults 
"KRN",8994,2338,3,48,0)
 to today. Both dates are in FileMan internal format. The fourth piece is
"KRN",8994,2338,3,49,0)
 a string of numbers to indicate what types of appointments to return. If
"KRN",8994,2338,3,50,0)
 not defined, the value defaults to "123456789" (i.e., all appointment
"KRN",8994,2338,3,51,0)
 types) where:
"KRN",8994,2338,3,52,0)
 
"KRN",8994,2338,3,53,0)
 1 - Active/Kept
"KRN",8994,2338,3,54,0)
 2 - Inpatient appts. only
"KRN",8994,2338,3,55,0)
 3 - No-shows 
"KRN",8994,2338,3,56,0)
 4 - No-shows, auto-rebook
"KRN",8994,2338,3,57,0)
 5 - Cancelled by clinic
"KRN",8994,2338,3,58,0)
 6 - Cancelled by clinic, auto rebook
"KRN",8994,2338,3,59,0)
 7 - Cancelled by patient
"KRN",8994,2338,3,60,0)
 8 - Cancelled by patient, auto rebook
"KRN",8994,2338,3,61,0)
 9 - No action taken
"KRN",8994,2338,3,62,0)
 
"KRN",8994,2338,3,63,0)
 The TMP global contains:
"KRN",8994,2338,3,64,0)
  ^TMP("GMVHLOC",$J,0)=piece1
"KRN",8994,2338,3,65,0)
  ^TMP("GMVHLOC",$J,n)=piece2^piece3^piece4^piece5^piece6^piece7
"KRN",8994,2338,3,66,0)
                       ^piece8^piece9^
"KRN",8994,2338,3,67,0)
 
"KRN",8994,2338,3,68,0)
   where piece1 = number of entries found
"KRN",8994,2338,3,69,0)
         piece2 = date/time of appt (FM internal)
"KRN",8994,2338,3,70,0)
         piece3 = date/time of appt (external)
"KRN",8994,2338,3,71,0)
         piece4 = hospital location IEN (FILE 44)
"KRN",8994,2338,3,72,0)
         piece5 = hospital location name (FILE 44, Field .01)
"KRN",8994,2338,3,73,0)
         piece6 = appt status (internal)
"KRN",8994,2338,3,74,0)
         piece7 = appt status (external)
"KRN",8994,2338,3,75,0)
         piece8 = appt type (internal)
"KRN",8994,2338,3,76,0)
         piece9 = appt type (external)
"KRN",8994,2338,3,77,0)
 
"KRN",8994,2338,3,78,0)
 Example:
"KRN",8994,2338,3,79,0)
 > S OPTION="APPT",DATA="78^3051201^3051206^"   
"KRN",8994,2338,3,80,0)
 > D RPC^GMVRPCHL(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,2338,3,81,0)
 > RESULT="^TMP("GMVHLOC",539052767)"
"KRN",8994,2338,3,82,0)
 > D ^%G
"KRN",8994,2338,3,83,0)
 > Global ^TMP("GMVHLOC",$J
"KRN",8994,2338,3,84,0)
 > ^TMP("GMVHLOC",539052767,0)=1
"KRN",8994,2338,3,85,0)
                            1)=3051206.1^DEC 6,2005@10:00^88^WEIGHT 
"KRN",8994,2338,3,86,0)
                               CLINIC^^^9^REGULAR
"KRN",8994,2338,3,87,0)
 
"KRN",8994,2338,3,88,0)
 3) When the OPTION value is ADMIT, this RPC will return a list of 
"KRN",8994,2338,3,89,0)
 hospital admissions for the patient specified.
"KRN",8994,2338,3,90,0)
 
"KRN",8994,2338,3,91,0)
 The DATA value is the patient's DFN.
"KRN",8994,2338,3,92,0)
 
"KRN",8994,2338,3,93,0)
 The TMP global contains:
"KRN",8994,2338,3,94,0)
  ^TMP("GMVHLOC",$J,0)=piece1
"KRN",8994,2338,3,95,0)
  ^TMP("GMVHLOC",$J,n)=piece2^piece3^piece4^piece5^piece6
"KRN",8994,2338,3,96,0)
 
"KRN",8994,2338,3,97,0)
   where piece1 = number of entries found
"KRN",8994,2338,3,98,0)
         piece2 = date/time of admission (external) 
"KRN",8994,2338,3,99,0)
         piece3 = hospital location IEN (FILE 44)
"KRN",8994,2338,3,100,0)
         piece4 = hospital location name (FILE 44, Field .01)
"KRN",8994,2338,3,101,0)
         piece5 = type of movement (FILE 405.1, Field .01)
"KRN",8994,2338,3,102,0)
         piece6 = movement IEN (FILE 405)
"KRN",8994,2338,3,103,0)
 
"KRN",8994,2338,3,104,0)
 Example:
"KRN",8994,2338,3,105,0)
 > S OPTION="ADMIT",DATA=134
"KRN",8994,2338,3,106,0)
 > D RPC^GMVRPCHL(.RESULT,OPTION,DATA) ZW RESULT
"KRN",8994,2338,3,107,0)
 > RESULT="^TMP("GMVHLOC",539052767)"
"KRN",8994,2338,3,108,0)
 > D ^%G
"KRN",8994,2338,3,109,0)
 > Global ^TMP("GMVHLOC",$J
"KRN",8994,2338,3,110,0)
 > ^TMP("GMVHLOC",539052767,0)=1 
"KRN",8994,2338,3,111,0)
                            1)=Apr 09, 2001 1:48:43 pm^67^
"KRN",8994,2338,3,112,0)
                               2-ASM^DIRECT^1712 
"KRN",8994,2338,3,113,0)
 
"KRN",8994,2338,3,114,0)
 
"KRN",8994,2338,3,115,0)
If an error is encountered for NAME, ADMIT or APPT, a "-1" followed by a
"KRN",8994,2338,3,116,0)
caret and the error message text (i.e., -1^error message) is returned in 
"KRN",8994,2338,3,117,0)
RESULT(0).
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",44,-1)
1^1
"PKG",44,0)
GEN. MED. REC. - VITALS^GMRV^Vitals/Measurements Module of General Medical Record.
"PKG",44,20,0)
^9.402P^^
"PKG",44,22,0)
^9.49I^1^1
"PKG",44,22,1,0)
5.0^3021029
"PKG",44,22,1,"PAH",1,0)
3^3060320
"PKG",44,22,1,"PAH",1,1,0)
^^2^2^3060320
"PKG",44,22,1,"PAH",1,1,1,0)
Please read the GMRV*5*3 patch description on FORUM for an explanation of
"PKG",44,22,1,"PAH",1,1,2,0)
what this patch does.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
19
"RTN","GMV3PST")
0^2^B13164837
"RTN","GMV3PST",1,0)
GMV3PST ;HOIFO/FT-POST INSTALLATION FOR GMRV*5*3 ;5/17/05  08:56
"RTN","GMV3PST",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**3**;Oct 31, 2002
"RTN","GMV3PST",3,0)
 ;
"RTN","GMV3PST",4,0)
 ; This routine uses the following IAs:
"RTN","GMV3PST",5,0)
 ; #2263  - ^XPAR calls   (supported)
"RTN","GMV3PST",6,0)
 ; #4835  - Add RPCS to OR CPRS GUI CHART option (private)
"RTN","GMV3PST",7,0)
 ; #10141 - ^XPDUTL calls (supported)
"RTN","GMV3PST",8,0)
 ;
"RTN","GMV3PST",9,0)
 ; This routine supports the following IAs:
"RTN","GMV3PST",10,0)
 ; #4833 - ADDRPCS     (private)
"RTN","GMV3PST",11,0)
 ;
"RTN","GMV3PST",12,0)
 ; This post-installation:
"RTN","GMV3PST",13,0)
 ; Updates the parameters for the required client version.
"RTN","GMV3PST",14,0)
 ; Adds GMV RPCS to the 'OR CPRS GUI CHART' list of RPCs
"RTN","GMV3PST",15,0)
 ;
"RTN","GMV3PST",16,0)
EN ; Main entry point
"RTN","GMV3PST",17,0)
 D XPAR,ADDRPCS,DLL
"RTN","GMV3PST",18,0)
 Q
"RTN","GMV3PST",19,0)
XPAR ; Setup preliminary parameters
"RTN","GMV3PST",20,0)
 ; This submodule is called during the KIDS installation
"RTN","GMV3PST",21,0)
 ; process.
"RTN","GMV3PST",22,0)
 ;
"RTN","GMV3PST",23,0)
 ; Variables:
"RTN","GMV3PST",24,0)
 ;  GMV:    [Private] Scratch
"RTN","GMV3PST",25,0)
 ;  GMVGUI: [Private] Current version of GUI being installed
"RTN","GMV3PST",26,0)
 ;  GMVLST: [Private] Scratch List
"RTN","GMV3PST",27,0)
 ;
"RTN","GMV3PST",28,0)
 ; New private variables
"RTN","GMV3PST",29,0)
 N GMV,GMVGUI,GMVLST
"RTN","GMV3PST",30,0)
 ; Announce my intentions
"RTN","GMV3PST",31,0)
 D BMES^XPDUTL("Updating system parameters.")
"RTN","GMV3PST",32,0)
 ; Set current client version
"RTN","GMV3PST",33,0)
 S GMVGUI="5.0.3.19"
"RTN","GMV3PST",34,0)
 ; Deactivate all previous versions from XPAR
"RTN","GMV3PST",35,0)
 D GETLST^XPAR(.GMVLST,"SYS","GMV GUI VERSION")
"RTN","GMV3PST",36,0)
 F GMV=0:0 S GMV=$O(GMVLST(GMV)) Q:'GMV  D
"RTN","GMV3PST",37,0)
 .D EN^XPAR("SYS","GMV GUI VERSION",$P(GMVLST(GMV),"^",1),0)
"RTN","GMV3PST",38,0)
 ; Add and/or activate current client versions
"RTN","GMV3PST",39,0)
 D EN^XPAR("SYS","GMV GUI VERSION","VITALS.EXE:"_GMVGUI,1)
"RTN","GMV3PST",40,0)
 D EN^XPAR("SYS","GMV GUI VERSION","VITALSMANAGER.EXE:"_GMVGUI,1)
"RTN","GMV3PST",41,0)
 Q
"RTN","GMV3PST",42,0)
DLL ;
"RTN","GMV3PST",43,0)
 ; Variables:
"RTN","GMV3PST",44,0)
 ;  GMV:    [Private] Scratch
"RTN","GMV3PST",45,0)
 ;  GMVDLL: [Private] Current version of DLL being installed
"RTN","GMV3PST",46,0)
 ;  GMVLST: [Private] Scratch List
"RTN","GMV3PST",47,0)
 ;
"RTN","GMV3PST",48,0)
 ; New private variables
"RTN","GMV3PST",49,0)
 N GMV,GMVDLL,GMVLST
"RTN","GMV3PST",50,0)
 ; Announce my intentions
"RTN","GMV3PST",51,0)
 D BMES^XPDUTL("Updating DLL parameter.")
"RTN","GMV3PST",52,0)
 ; Deactivate all previous versions from XPAR
"RTN","GMV3PST",53,0)
 D GETLST^XPAR(.GMVLST,"SYS","GMV DLL VERSION")
"RTN","GMV3PST",54,0)
 F GMV=0:0 S GMV=$O(GMVLST(GMV)) Q:'GMV  D
"RTN","GMV3PST",55,0)
 .D EN^XPAR("SYS","GMV DLL VERSION",$P(GMVLST(GMV),"^",1),0)
"RTN","GMV3PST",56,0)
 ; Add and/or activate current client versions
"RTN","GMV3PST",57,0)
 S GMVDLL="GMV_VITALSVIEWENTER.DLL:v. 01/20/06 09:08" ;T17
"RTN","GMV3PST",58,0)
 D EN^XPAR("SYS","GMV DLL VERSION",GMVDLL,1)
"RTN","GMV3PST",59,0)
 S GMVDLL="GMV_VITALSVIEWENTER.DLL:v. 02/15/06 15:55" ;T18
"RTN","GMV3PST",60,0)
 D EN^XPAR("SYS","GMV DLL VERSION",GMVDLL,1)
"RTN","GMV3PST",61,0)
 S GMVDLL="GMV_VITALSVIEWENTER.DLL:v. 03/14/06 16:35" ;released version (19)
"RTN","GMV3PST",62,0)
 D EN^XPAR("SYS","GMV DLL VERSION",GMVDLL,1)
"RTN","GMV3PST",63,0)
 Q
"RTN","GMV3PST",64,0)
ADDRPCS ; Add GMV RPCs to CPRS option
"RTN","GMV3PST",65,0)
 N GMVDA,GMVDA1,GMVERR,GMVFDA,GMVIEN,GMVMSG,GMVNAME,GMVNODE,GMVTEST,GMVX
"RTN","GMV3PST",66,0)
 K ^TMP($J),^TMP("GMV 3PST",$J)
"RTN","GMV3PST",67,0)
 S GMVDA=$$FIND1^DIC(19,"","O","OR CPRS GUI CHART","B","","GMVERR")
"RTN","GMV3PST",68,0)
 I 'GMVDA D  Q
"RTN","GMV3PST",69,0)
 .S GMVMSG(1)="Cannot find the 'OR CPRS GUI CHART' option."
"RTN","GMV3PST",70,0)
 .S GMVMSG(2)="Cannot add the RPCs needed. Please log a Remedy Ticket."
"RTN","GMV3PST",71,0)
 .D EN^DDIOL(.GMVMSG,"","!?5")
"RTN","GMV3PST",72,0)
 .Q
"RTN","GMV3PST",73,0)
 ; Get list of existing RPCs for OR CPRS GUI CHART option
"RTN","GMV3PST",74,0)
 D GETS^DIQ(19,GMVDA,"320*","I","^TMP($J)","GMVERR")
"RTN","GMV3PST",75,0)
 S GMVX=""
"RTN","GMV3PST",76,0)
 F  S GMVX=$O(^TMP($J,19.05,GMVX)) Q:GMVX=""  D
"RTN","GMV3PST",77,0)
 .S GMVIEN=+$G(^TMP($J,19.05,GMVX,.01,"I"))
"RTN","GMV3PST",78,0)
 .Q:'GMVIEN
"RTN","GMV3PST",79,0)
 .S ^TMP("GMV 3PST",$J,GMVIEN)=""
"RTN","GMV3PST",80,0)
 .Q
"RTN","GMV3PST",81,0)
 K GMVERR,GMVX
"RTN","GMV3PST",82,0)
 ; get GMV rpcs from table
"RTN","GMV3PST",83,0)
 F GMVX=1:1 S GMVNODE=$T(RPCLIST+GMVX) Q:$P(GMVNODE,";",3)=""  D
"RTN","GMV3PST",84,0)
 .S GMVNAME=$P(GMVNODE,";",3)
"RTN","GMV3PST",85,0)
 .Q:GMVNAME=""
"RTN","GMV3PST",86,0)
 .K GMVERR
"RTN","GMV3PST",87,0)
 .S GMVDA1=$$FIND1^DIC(8994,"","O",GMVNAME,"B","","GMVERR")
"RTN","GMV3PST",88,0)
 .Q:'GMVDA1
"RTN","GMV3PST",89,0)
 .Q:$D(^TMP("GMV 3PST",$J,GMVDA1))  ;rpc is already there
"RTN","GMV3PST",90,0)
 .K GMVERR,GMVFDA,GMVIEN
"RTN","GMV3PST",91,0)
 .S GMVFDA(19.05,"+1,"_GMVDA_",",.01)=GMVDA1
"RTN","GMV3PST",92,0)
 .D UPDATE^DIE("","GMVFDA","GMVIEN","GMVERR")
"RTN","GMV3PST",93,0)
 .Q
"RTN","GMV3PST",94,0)
 K ^TMP($J),^TMP("GMV 3PST",$J)
"RTN","GMV3PST",95,0)
 Q
"RTN","GMV3PST",96,0)
RPCLIST ; List of GMV RPCs to add to OR CPRS GUI CHART option 
"RTN","GMV3PST",97,0)
 ;;GMV ADD VM
"RTN","GMV3PST",98,0)
 ;;GMV CONVERT DATE
"RTN","GMV3PST",99,0)
 ;;GMV GET CATEGORY IEN
"RTN","GMV3PST",100,0)
 ;;GMV GET CURRENT TIME
"RTN","GMV3PST",101,0)
 ;;GMV GET VITAL TYPE IEN
"RTN","GMV3PST",102,0)
 ;;GMV LATEST VM
"RTN","GMV3PST",103,0)
 ;;GMV MANAGER
"RTN","GMV3PST",104,0)
 ;;GMV PARAMETER
"RTN","GMV3PST",105,0)
 ;;GMV USER
"RTN","GMV3PST",106,0)
 ;;GMV VITALS/CAT/QUAL
"RTN","GMV3PST",107,0)
 ;;GMV V/M ALLDATA
"RTN","GMV3PST",108,0)
 ;;GMV EXTRACT REC
"RTN","GMV3PST",109,0)
 ;;GMV MARK ERROR
"RTN","GMV3PST",110,0)
 ;;GMV ALLERGY
"RTN","GMV3PST",111,0)
 ;;GMV DLL VERSION
"RTN","GMV3PST",112,0)
 ;;GMV LOCATION SELECT
"RTN","GMV3PST",113,0)
 ;;;
"RTN","GMVBMI")
0^18^B5347673^B5347273
"RTN","GMVBMI",1,0)
GMVBMI ;HIOFO/YH,FT-EXTRACT HEIGHT TO CALCULATE BMI FOR WEIGHT; 3/24/97 ;11/8/01  14:38
"RTN","GMVBMI",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**3**;Oct 31, 2002
"RTN","GMVBMI",3,0)
 ;
"RTN","GMVBMI",4,0)
 ; This routine uses the following IAs:
"RTN","GMVBMI",5,0)
 ; <None>
"RTN","GMVBMI",6,0)
 ;
"RTN","GMVBMI",7,0)
HT ;OBTAIN THE LATEST HEIGHT FOR THE CURRENT WEIGHT
"RTN","GMVBMI",8,0)
 K GHEIGHT S GI=$O(^GMRD(120.51,"B","HEIGHT",0)) Q:GI'>0
"RTN","GMVBMI",9,0)
 S GH=0 F  S GH=$O(^GMR(120.5,"AA",DFN,GI,GH)) Q:GH'>0  S GH(1)=0 F  S GH(1)=$O(^GMR(120.5,"AA",DFN,GI,GH,GH(1))) Q:GH(1)'>0  I $D(^GMR(120.5,GH(1),0)),'$D(^GMR(120.5,GH(1),2)),$P(^GMR(120.5,GH(1),0),"^",8)'="" D
"RTN","GMVBMI",10,0)
 . I $P(^GMR(120.5,GH(1),0),"^",8)>0 S GHEIGHT($P(^(0),"^"))=$P(^(0),"^",8)
"RTN","GMVBMI",11,0)
 Q
"RTN","GMVBMI",12,0)
CALBMI(GBMI) ;OBTAIN HEIGHT TO CALCULATE BMI
"RTN","GMVBMI",13,0)
 N GDATE,GMRVHT S GMRVHT="" D HT I '$D(GHEIGHT) K GHEIGHT,GI,GH Q
"RTN","GMVBMI",14,0)
 ;HEIGHT AND WEIGHT WERE OBTAINED AT THE SAME TIME
"RTN","GMVBMI",15,0)
 I $D(GHEIGHT(GBMI(1))) D  K GHEIGHT,GH,GI Q
"RTN","GMVBMI",16,0)
 . S GBMI(2)=GBMI(2)/2.2,GMRVHT=+GHEIGHT(GBMI(1))*2.54/100
"RTN","GMVBMI",17,0)
 . I +GMRVHT'>0 S GBMI=$J(0,0,0) Q
"RTN","GMVBMI",18,0)
 . S GBMI=$J(GBMI(2)/(GMRVHT*GMRVHT),0,2) S GBMI=GBMI_$S(GBMI>27:"*",1:"")
"RTN","GMVBMI",19,0)
 ;EXTRACT THE HEIGHT TAKEN BEFORE THE WEIGHT WAS TAKEN
"RTN","GMVBMI",20,0)
 S GDATE=9999999-GBMI(1),GDATE(1)=0 F  S GDATE=$O(^GMR(120.5,"AA",DFN,GI,GDATE)) Q:GDATE'>0!(GDATE(1)>0)  D
"RTN","GMVBMI",21,0)
 . S G=$O(^GMR(120.5,"AA",DFN,GI,GDATE,0)) Q:G'>0  I $P($G(^GMR(120.5,G,0)),"^",8)'>0 Q
"RTN","GMVBMI",22,0)
 . S GDATE(1)=GDATE
"RTN","GMVBMI",23,0)
 ;EXTRACT THE HEIGHT TAKEN AFTER THE WEIGHT WAS TAKEN
"RTN","GMVBMI",24,0)
 I GDATE(1)>0,$D(GHEIGHT(9999999-GDATE(1))) D  K GHEIGHT,GH,GI Q
"RTN","GMVBMI",25,0)
 . S GDATE(1)=9999999-GDATE(1),GMRVHT=+GHEIGHT(GDATE(1))
"RTN","GMVBMI",26,0)
 . S GBMI(2)=GBMI(2)/2.2,GMRVHT=GMRVHT*2.54/100
"RTN","GMVBMI",27,0)
 . I +GMRVHT'>0 S GBMI=$J(0,0,0) Q
"RTN","GMVBMI",28,0)
 . S GBMI=$J(GBMI(2)/(GMRVHT*GMRVHT),0,2),GBMI=GBMI_$S(GBMI>27:"*",1:"")
"RTN","GMVBMI",29,0)
 S GDATE=GBMI(1),GDATE(1)=0 F  S GDATE=$O(GHEIGHT(GDATE)) Q:GDATE'>0!(GDATE(1)>0)  S GDATE(1)=GDATE
"RTN","GMVBMI",30,0)
 I GDATE(1)>0 D  K GHEIGHT,GH,GI,G Q
"RTN","GMVBMI",31,0)
 . S GMRVHT=+GHEIGHT(GDATE(1))
"RTN","GMVBMI",32,0)
 . S GBMI(2)=GBMI(2)/2.2,GMRVHT=GMRVHT*2.54/100
"RTN","GMVBMI",33,0)
 . I +GMRVHT'>0 S GBMI=$J(0,0,0) Q
"RTN","GMVBMI",34,0)
 . S GBMI=$J(GBMI(2)/(GMRVHT*GMRVHT),0,2),GBMI=GBMI_$S(GBMI>27:"*",1:"")
"RTN","GMVBMI",35,0)
 K GHEIGHT,GI,GH,G Q
"RTN","GMVDCSAV")
0^12^B19942469^B19291667
"RTN","GMVDCSAV",1,0)
GMVDCSAV ;HOIFO/DAD-VITALS COMPONENT: SAVE DATA ; 8/5/05 7:01am
"RTN","GMVDCSAV",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**9,3**;Oct 31, 2002
"RTN","GMVDCSAV",3,0)
 ;
"RTN","GMVDCSAV",4,0)
 ; This routine uses the following IAs:
"RTN","GMVDCSAV",5,0)
 ; #10103 - ^XLFDT calls           (supported)
"RTN","GMVDCSAV",6,0)
 ;
"RTN","GMVDCSAV",7,0)
 ; This routine supports the following IAs:
"RTN","GMVDCSAV",8,0)
 ; #3996 - GMV ADD VM RPC called at EN1  (private)
"RTN","GMVDCSAV",9,0)
 ; 
"RTN","GMVDCSAV",10,0)
 ; 01/28/2005 KAM GMRV*5*9 Record midnight with 1 second added
"RTN","GMVDCSAV",11,0)
 ;                         Stop adding second on multiple patent entry
"RTN","GMVDCSAV",12,0)
 ;
"RTN","GMVDCSAV",13,0)
EN1(RESULT,GMVDATA) ; GMV ADD VM [RPC entry point]
"RTN","GMVDCSAV",14,0)
 ; Saves vitals data
"RTN","GMVDCSAV",15,0)
 N GMVCNT,GMVD0,GMVFDA,GMVINUM,GMVQNUM,GMVRNUM,GMVIEN,GMVDUN
"RTN","GMVDCSAV",16,0)
 N GMVVNUM,GMVVMEAS,GMVVQUAL,GMVVREAS
"RTN","GMVDCSAV",17,0)
 D QUALTWO
"RTN","GMVDCSAV",18,0)
 Q
"RTN","GMVDCSAV",19,0)
 ;I $O(@GMVDATA@("V",0))>0 D VITMEA
"RTN","GMVDCSAV",20,0)
 ;I $O(@GMVDATA@("I",0))>0 D ENTERR
"RTN","GMVDCSAV",21,0)
 ;I $G(RESULT(0))="OK" D MSG("OK: Data saved")
"RTN","GMVDCSAV",22,0)
 ;Q
"RTN","GMVDCSAV",23,0)
 ;
"RTN","GMVDCSAV",24,0)
VITMEA ; *** Save vital measurement data ***
"RTN","GMVDCSAV",25,0)
 S GMVVNUM=0 K GMVFDA
"RTN","GMVDCSAV",26,0)
 S GMVCNT=+$O(@GMVDATA@("V",1E25),-1)
"RTN","GMVDCSAV",27,0)
 F  S GMVVNUM=$O(@GMVDATA@("V",GMVVNUM)) Q:GMVVNUM'>0  D
"RTN","GMVDCSAV",28,0)
 . S GMVVMEAS=$G(@GMVDATA@("V",GMVVNUM))
"RTN","GMVDCSAV",29,0)
 . S GMVFDA(120.5,"+"_GMVVNUM_",",.01)=GMVDTDUN ; Date time taken
"RTN","GMVDCSAV",30,0)
 . S GMVFDA(120.5,"+"_GMVVNUM_",",.02)=GMVDFN   ; Patient
"RTN","GMVDCSAV",31,0)
 . S GMVFDA(120.5,"+"_GMVVNUM_",",.03)=$P(GMVVMEAS,U) ;
"RTN","GMVDCSAV",32,0)
 . S GMVFDA(120.5,"+"_GMVVNUM_",",.04)=GMVDTENT  ; Date Time entered
"RTN","GMVDCSAV",33,0)
 . S GMVFDA(120.5,"+"_GMVVNUM_",",.05)=GMVHOSPL  ; Hospital
"RTN","GMVDCSAV",34,0)
 . S GMVFDA(120.5,"+"_GMVVNUM_",",.06)=GMVENTBY  ; Entered by (DUZ)
"RTN","GMVDCSAV",35,0)
 . S GMVFDA(120.5,"+"_GMVVNUM_",",1.2)=$P($P(GMVVMEAS,U,2),";",1) ; Rate
"RTN","GMVDCSAV",36,0)
 . S GMVFDA(120.5,"+"_GMVVNUM_",",1.4)=$P($P(GMVVMEAS,U,2),";",2) ; Sup 02
"RTN","GMVDCSAV",37,0)
 . S GMVQNUM=0
"RTN","GMVDCSAV",38,0)
 . F  S GMVQNUM=$O(@GMVDATA@("Q",GMVVNUM,GMVQNUM)) Q:GMVQNUM'>0  D
"RTN","GMVDCSAV",39,0)
 .. S GMVVQUAL=$G(@GMVDATA@("Q",GMVVNUM,GMVQNUM))
"RTN","GMVDCSAV",40,0)
 .. S GMVCNT=GMVCNT+1
"RTN","GMVDCSAV",41,0)
 .. S GMVFDA(120.505,"+"_GMVCNT_",","+"_GMVVNUM_",",.01)=GMVVQUAL
"RTN","GMVDCSAV",42,0)
 .. Q
"RTN","GMVDCSAV",43,0)
 . Q
"RTN","GMVDCSAV",44,0)
 D UPDATE^DIE("","GMVFDA"),FMERROR
"RTN","GMVDCSAV",45,0)
 S RESULT(0)="OK"
"RTN","GMVDCSAV",46,0)
 Q
"RTN","GMVDCSAV",47,0)
 ;
"RTN","GMVDCSAV",48,0)
ENTERR ; *** Save entered in error data ***
"RTN","GMVDCSAV",49,0)
 S GMVINUM=0 K GMVFDA
"RTN","GMVDCSAV",50,0)
 S GMVCNT=+$O(@GMVDATA@("I",1E25),-1)
"RTN","GMVDCSAV",51,0)
 F  S GMVINUM=$O(@GMVDATA@("I",GMVINUM)) Q:GMVINUM'>0  D
"RTN","GMVDCSAV",52,0)
 . S GMVD0=$G(@GMVDATA@("I",GMVINUM))
"RTN","GMVDCSAV",53,0)
 . S GMVFDA(120.5,GMVD0_",",2)=1
"RTN","GMVDCSAV",54,0)
 . S GMVFDA(120.5,GMVD0_",",3)=GMVERRBY
"RTN","GMVDCSAV",55,0)
 . S GMVRNUM=0
"RTN","GMVDCSAV",56,0)
 . F  S GMVRNUM=$O(@GMVDATA@("R",GMVINUM,GMVRNUM)) Q:GMVRNUM'>0  D
"RTN","GMVDCSAV",57,0)
 .. S GMVVREAS=$G(@GMVDATA@("R",GMVINUM,GMVRNUM))
"RTN","GMVDCSAV",58,0)
 .. S GMVCNT=GMVCNT+1
"RTN","GMVDCSAV",59,0)
 .. S GMVFDA(120.506,"+"_GMVCNT_","_GMVD0_",",.01)=GMVVREAS
"RTN","GMVDCSAV",60,0)
 .. Q
"RTN","GMVDCSAV",61,0)
 . Q
"RTN","GMVDCSAV",62,0)
 D UPDATE^DIE("","GMVFDA"),FMERROR
"RTN","GMVDCSAV",63,0)
 S RESULT(0)="OK"
"RTN","GMVDCSAV",64,0)
 Q
"RTN","GMVDCSAV",65,0)
QUALTWO ; Add a new entry to FILE 120.5
"RTN","GMVDCSAV",66,0)
 S GMVVNUM=0 K GMVFDA
"RTN","GMVDCSAV",67,0)
 S GMVVMEAS=$P(GMVDATA,"*",1) ; 
"RTN","GMVDCSAV",68,0)
 S GMVDTDUN=$P(GMVVMEAS,"^",1) ; Date time
"RTN","GMVDCSAV",69,0)
 ;01/28/2005 KAM GMRV*5*9 Added next Line PAL-0105-60940 
"RTN","GMVDCSAV",70,0)
 I +$P(GMVDTDUN,".",2)'>0 S GMVDTDUN=$$FMADD^XLFDT(GMVDTDUN,"","","",1)
"RTN","GMVDCSAV",71,0)
 S GMVDFN=$P(GMVVMEAS,"^",2) ; Patient DFN
"RTN","GMVDCSAV",72,0)
 S GMVVTYP=$P(GMVVMEAS,"^",3) ; Vital type
"RTN","GMVDCSAV",73,0)
 S GMVDTDUN=$$CHKDT(GMVDTDUN,$P(GMVVTYP,";",1))
"RTN","GMVDCSAV",74,0)
 S GMVDTENT=$$NOW^XLFDT ; Current date time
"RTN","GMVDCSAV",75,0)
 S GMVHOSPL=$P(GMVVMEAS,"^",4) ; Hospital
"RTN","GMVDCSAV",76,0)
 S GMVENTBY=$P(GMVVMEAS,"^",5) ; DUZ
"RTN","GMVDCSAV",77,0)
 S GMVFDA(120.5,"+1,",.01)=GMVDTDUN ; Date time taken
"RTN","GMVDCSAV",78,0)
 S GMVFDA(120.5,"+1,",.02)=GMVDFN   ; Patient
"RTN","GMVDCSAV",79,0)
 S GMVFDA(120.5,"+1,",.03)=$P(GMVVTYP,";",1)   ; Vital Type
"RTN","GMVDCSAV",80,0)
 S GMVFDA(120.5,"+1,",.04)=GMVDTENT  ; Date Time entered
"RTN","GMVDCSAV",81,0)
 S GMVFDA(120.5,"+1,",.05)=GMVHOSPL  ; Hospital
"RTN","GMVDCSAV",82,0)
 S GMVFDA(120.5,"+1,",.06)=GMVENTBY  ; Entered by (DUZ)
"RTN","GMVDCSAV",83,0)
 S GMVFDA(120.5,"+1,",1.2)=$P(GMVVTYP,";",2) ; Rate
"RTN","GMVDCSAV",84,0)
 S GMVFDA(120.5,"+1,",1.4)=$P(GMVVTYP,";",3) ; Sup 02
"RTN","GMVDCSAV",85,0)
 S GMVIEN=""
"RTN","GMVDCSAV",86,0)
 D UPDATE^DIE("","GMVFDA","GMVIEN"),FMERROR
"RTN","GMVDCSAV",87,0)
 S GMVCNT=1
"RTN","GMVDCSAV",88,0)
 S GMVQUALS=$P(GMVDATA,"*",2)
"RTN","GMVDCSAV",89,0)
 F GMVLOOP=1:1:$L(GMVQUALS,":")+1 D
"RTN","GMVDCSAV",90,0)
 . S GMVVQUAL=$P(GMVQUALS,":",GMVLOOP)
"RTN","GMVDCSAV",91,0)
 . Q:GMVVQUAL=""
"RTN","GMVDCSAV",92,0)
 . S GMVCNT=GMVCNT+1
"RTN","GMVDCSAV",93,0)
 . D ADDQUAL^GMVGETQ(.GMVRES,GMVIEN(1)_"^"_GMVVQUAL)
"RTN","GMVDCSAV",94,0)
 . Q
"RTN","GMVDCSAV",95,0)
 Q 
"RTN","GMVDCSAV",96,0)
 ;
"RTN","GMVDCSAV",97,0)
CHKDT(GMVDT,GMVSAV) ;Check id there ios a vital entered for that date and time
"RTN","GMVDCSAV",98,0)
 N GMVA,GMVQ
"RTN","GMVDCSAV",99,0)
 S GMVQ=0
"RTN","GMVDCSAV",100,0)
 S GMVA=""
"RTN","GMVDCSAV",101,0)
 F  S GMVA=$O(^GMR(120.5,"B",GMVDT,GMVA)) Q:GMVA=""  D
"RTN","GMVDCSAV",102,0)
 . ;01/28/2005 KAM GMRV*5*9 Added next Line BHS-0504-10643 
"RTN","GMVDCSAV",103,0)
 . I GMVDFN'=$P($G(^GMR(120.5,GMVA,0)),U,2) Q
"RTN","GMVDCSAV",104,0)
 . S GMVTY=$P($G(^GMR(120.5,GMVA,0)),"^",3)
"RTN","GMVDCSAV",105,0)
 . I GMVTY=GMVSAV D
"RTN","GMVDCSAV",106,0)
 . . S GMVDT=$$FMADD^XLFDT(GMVDT,"","","",1)
"RTN","GMVDCSAV",107,0)
 . . Q
"RTN","GMVDCSAV",108,0)
 . Q
"RTN","GMVDCSAV",109,0)
 Q GMVDT
"RTN","GMVDCSAV",110,0)
MSG(X) ; *** Add a line to the message array ***
"RTN","GMVDCSAV",111,0)
 S (GMVMSG,RESULT(-1))=1+$G(RESULT(-1),0)
"RTN","GMVDCSAV",112,0)
 S RESULT(GMVMSG)=X
"RTN","GMVDCSAV",113,0)
 I $P(X,":")="ERROR" S RESULT(0)="ERROR"
"RTN","GMVDCSAV",114,0)
 Q
"RTN","GMVDCSAV",115,0)
 ;
"RTN","GMVDCSAV",116,0)
FMERROR ;
"RTN","GMVDCSAV",117,0)
 I $O(^TMP("DIERR",$J,0))>0 D
"RTN","GMVDCSAV",118,0)
 . N GMVER1,GMVER2
"RTN","GMVDCSAV",119,0)
 . S GMVER1=0
"RTN","GMVDCSAV",120,0)
 . F  S GMVER1=$O(^TMP("DIERR",$J,GMVER1)) Q:GMVER1'>0  D
"RTN","GMVDCSAV",121,0)
 .. S GMVER2=0
"RTN","GMVDCSAV",122,0)
 .. F  S GMVER2=$O(^TMP("DIERR",$J,GMVER1,"TEXT",GMVER2)) Q:GMVER2'>0  D
"RTN","GMVDCSAV",123,0)
 ... D MSG("ERROR: "_$G(^TMP("DIERR",$J,GMVER1,"TEXT",GMVER2)))
"RTN","GMVDCSAV",124,0)
 ... Q
"RTN","GMVDCSAV",125,0)
 .. Q
"RTN","GMVDCSAV",126,0)
 . Q
"RTN","GMVDCSAV",127,0)
 D CLEAN^DILF
"RTN","GMVDCSAV",128,0)
 Q
"RTN","GMVGETD")
0^10^B11418226^B10666719
"RTN","GMVGETD",1,0)
GMVGETD ;HOIFO/YH,FT-EXTRACTS WARD/ROOM-BED/PT AND PT VITALS ;5/25/05  16:32
"RTN","GMVGETD",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**3**;Oct 31, 2002
"RTN","GMVGETD",3,0)
 ;
"RTN","GMVGETD",4,0)
 ; This routine uses the following IAs:
"RTN","GMVGETD",5,0)
 ; #1380  - ^DG(405.4 references   (controlled)
"RTN","GMVGETD",6,0)
 ; #1377  - ^DIC(42 references     (controlled)
"RTN","GMVGETD",7,0)
 ; #10035 - FILE 2 references      (supported)
"RTN","GMVGETD",8,0)
 ; #10039 - FILE 42 references     (supported)
"RTN","GMVGETD",9,0)
 ;
"RTN","GMVGETD",10,0)
 ; This routine supports the following IAs:
"RTN","GMVGETD",11,0)
 ; #4416 - GMV EXTRACT REC RPC is called at GETVM  (private)
"RTN","GMVGETD",12,0)
 ; #4358 - GMV LATEST VM RPC is called at GETLAT (private)
"RTN","GMVGETD",13,0)
 ;
"RTN","GMVGETD",14,0)
GETVM(RESULT,GMRVDATA) ;GMV EXTRACT REC [RPC entry point]
"RTN","GMVGETD",15,0)
 ;RETURNS VITALS/MEASUREMENTS FOR A PARTICULAR PATIENT A FOR GIVEN DATE/TIME SPAN IN RESULT ARRAY.
"RTN","GMVGETD",16,0)
 ;GMRVDATA = DFN^END DATE VITAL TAKEN^VITAL TYPE (OPTIONAL)^START DATE VITAL TAKEN
"RTN","GMVGETD",17,0)
 N GMVDAYS,DFN,GMRVSDT,GMRVFDT,GMVTYPE S DFN=+$P(GMRVDATA,"^"),GMRVSDT=+$P(GMRVDATA,"^",2),GMVDAYS=$P(GMRVDATA,"^",4),GMVTYPE=$P(GMRVDATA,"^",3) K ^TMP($J,"GRPC")
"RTN","GMVGETD",18,0)
 S GMRVFDT=$P(GMRVSDT,".",1)_".2400"
"RTN","GMVGETD",19,0)
 I GMVDAYS'="" S GMRVSDT=$P(GMVDAYS,".",1)
"RTN","GMVGETD",20,0)
 S:GMVTYPE'="" GMVTYPE(1)=$P(^GMRD(120.51,$O(^GMRD(120.51,"C",GMVTYPE,0)),0),"^")
"RTN","GMVGETD",21,0)
 D EN1^GMVGETD1
"RTN","GMVGETD",22,0)
 I '$D(^TMP($J,"GRPC")) S ^TMP($J,"GRPC",1)="0^NO "_$S(GMVTYPE'="":GMVTYPE(1),1:"VITALS/MEASUREMENTS ")_" ENTERED WITHIN THIS PERIOD"
"RTN","GMVGETD",23,0)
 S RESULT=$NA(^TMP($J,"GRPC"))
"RTN","GMVGETD",24,0)
 K GMRDT,GMRVARY,GMRVITY,GMRVX,GMRZZ
"RTN","GMVGETD",25,0)
 Q
"RTN","GMVGETD",26,0)
GETLAT(RESULT,GMRDFN) ;GMV LATEST VM [RPC entry point]
"RTN","GMVGETD",27,0)
 ; RETURNS THE LATEST VITALS/MEASUREMENTS FOR A GIVEN PATIENT(GMRDFN)
"RTN","GMVGETD",28,0)
 ; IN RESULT ARRAY.
"RTN","GMVGETD",29,0)
 K ^TMP($J,"GRPC") D EN1^GMVLAT0(GMRDFN)
"RTN","GMVGETD",30,0)
 S RESULT=$NA(^TMP($J,"GRPC"))
"RTN","GMVGETD",31,0)
 Q
"RTN","GMVGETD",32,0)
WARDLOC(RESULT,DUMMY) ;GMV WARD LOCATION [RPC entry point]
"RTN","GMVGETD",33,0)
 ;RETURNS MAS WARD LOCATIONS IN RESULT ARRAY
"RTN","GMVGETD",34,0)
 K ^TMP($J,"GWARD"),^TMP($J,"GMRV") N GMRWARD,GINDEX,GN,GMR
"RTN","GMVGETD",35,0)
 D LIST^DIC(42,"","","","*","","","","","I '$$INACT42^GMVUT2(+Y)","^TMP($J,""GMRV"")")
"RTN","GMVGETD",36,0)
 S GINDEX=+$P($G(^TMP($J,"GMRV","DILIST",0)),"^")
"RTN","GMVGETD",37,0)
 I GINDEX>0 D
"RTN","GMVGETD",38,0)
 . S (GMR,GN)=0 F  S GN=$O(^TMP($J,"GMRV","DILIST",1,GN)) Q:GN'>0  D
"RTN","GMVGETD",39,0)
 . . S GMRWARD(1)=^TMP($J,"GMRV","DILIST",1,GN),GMRWARD=+^TMP($J,"GMRV","DILIST",2,GN) I $O(^DPT("CN",GMRWARD(1),0))>0 S GMR=GMR+1,^TMP($J,"GWARD",GMR)=GMRWARD_"^"_GMRWARD(1)_U_^DIC(42,GMRWARD,44)
"RTN","GMVGETD",40,0)
 K ^TMP($J,"GMRV") S RESULT=$NA(^TMP($J,"GWARD"))
"RTN","GMVGETD",41,0)
 Q
"RTN","GMVGETD",42,0)
WARDPT(RESULT,GMRWARD) ;GMV WARD PT [RPC entry point]
"RTN","GMVGETD",43,0)
 ;RETURNS A LIST OF PATIENTS ADMITTED TO A GIVEN MAS WARD(GMRWARD) IN RESULT ARRAY.
"RTN","GMVGETD",44,0)
 Q:'$D(^DPT("CN",GMRWARD))
"RTN","GMVGETD",45,0)
 N OUT,GN,DFN,DFN1,GMVPAT
"RTN","GMVGETD",46,0)
 K ^TMP($J,"GMRPT")
"RTN","GMVGETD",47,0)
 S (GN,DFN)=0 F  S DFN=$O(^DPT("CN",GMRWARD,DFN)) Q:DFN'>0  D
"RTN","GMVGETD",48,0)
 . I $D(^DPT(DFN,0)) D
"RTN","GMVGETD",49,0)
 . . S GMVPAT=""
"RTN","GMVGETD",50,0)
 . . D PTINFO^GMVUTL3(.GMVPAT,DFN)
"RTN","GMVGETD",51,0)
 . . S OUT($P(^DPT(DFN,0),"^"),DFN)=DFN_"^"_$P(^DPT(DFN,0),"^")_"^"_GMVPAT
"RTN","GMVGETD",52,0)
 I '$D(OUT) Q
"RTN","GMVGETD",53,0)
 S DFN=""
"RTN","GMVGETD",54,0)
 F  S DFN=$O(OUT(DFN)) Q:DFN=""  D
"RTN","GMVGETD",55,0)
 .S DFN1=0
"RTN","GMVGETD",56,0)
 .F  S DFN1=$O(OUT(DFN,DFN1)) Q:'DFN1  D
"RTN","GMVGETD",57,0)
 ..S GN=GN+1,^TMP($J,"GMRPT",GN)=OUT(DFN,DFN1)
"RTN","GMVGETD",58,0)
 ..Q
"RTN","GMVGETD",59,0)
 .Q
"RTN","GMVGETD",60,0)
 S RESULT=$NA(^TMP($J,"GMRPT"))
"RTN","GMVGETD",61,0)
 Q
"RTN","GMVGETD",62,0)
ROOMBED(RESULT,GMRWARD) ;GMV ROOM/BED [RPC entry point]
"RTN","GMVGETD",63,0)
 ;RETURNS A LIST OF ROOMS/BEDS FOR A GIVEN MAS WARD(GMRWARD) IN RESULT ARRAY.
"RTN","GMVGETD",64,0)
 Q:'$D(^DIC(42,"B",GMRWARD))
"RTN","GMVGETD",65,0)
 N GN,GROOM,GWARD,GMVTMP K ^TMP($J,"GROOM")
"RTN","GMVGETD",66,0)
 S (GN,GROOM)=0,GWARD=$O(^DIC(42,"B",GMRWARD,0)) I GWARD'>0 S ^TMP($J,"GROOM",1)="NO ROOM" G QUIT
"RTN","GMVGETD",67,0)
 F  S GROOM=$O(^DG(405.4,"W",GWARD,GROOM)) Q:GROOM'>0  I $D(^DG(405.4,GROOM)) D 
"RTN","GMVGETD",68,0)
 . S GMVTMP($P($P(^DG(405.4,GROOM,0),"^"),"-",1))=GROOM
"RTN","GMVGETD",69,0)
 . ;S GN=GN+1,^TMP($J,"GROOM",GN)=GROOM_"^"_$P(^DG(405.4,GROOM,0),"^")
"RTN","GMVGETD",70,0)
 . Q
"RTN","GMVGETD",71,0)
 S GROOM="",GN=0
"RTN","GMVGETD",72,0)
 F  S GROOM=$O(GMVTMP(GROOM)) Q:GROOM=""  D
"RTN","GMVGETD",73,0)
 . S GN=GN+1,^TMP($J,"GROOM",GN)=GMVTMP(GROOM)_"^"_GROOM
"RTN","GMVGETD",74,0)
 . Q
"RTN","GMVGETD",75,0)
QUIT S RESULT=$NA(^TMP($J,"GROOM"))
"RTN","GMVGETD",76,0)
 Q
"RTN","GMVGETQ")
0^14^B5211254^B4969394
"RTN","GMVGETQ",1,0)
GMVGETQ ;HOIFO/YH,FT-UTILITIES TO OBTAIN DATE/TIME, HOSPITAL, DUZ, VITAL CATEGORY AND EDIT V/M ;9/6/02  09:35
"RTN","GMVGETQ",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**3**;Oct 31, 2002
"RTN","GMVGETQ",3,0)
 ;
"RTN","GMVGETQ",4,0)
 ; This routine uses the following IAs:
"RTN","GMVGETQ",5,0)
 ; #10103 - ^XLFDT calls           (supported)
"RTN","GMVGETQ",6,0)
 ;
"RTN","GMVGETQ",7,0)
 ; This routine supports the following IAs:
"RTN","GMVGETQ",8,0)
 ; #4353 - GMV CONVERT DATE RPC is called at GETDT  (private)
"RTN","GMVGETQ",9,0)
 ;
"RTN","GMVGETQ",10,0)
GETDT(RESULT,GMRDATE) ;GMV CONVERT DATE [RPC entry point]
"RTN","GMVGETQ",11,0)
 ;INPUT VARIABLE:
"RTN","GMVGETQ",12,0)
 ;GMRDATE - DATE/TIME FROM EDIT.TEXT ENTERED BY USER
"RTN","GMVGETQ",13,0)
 ;OUTPUT VARIABLE:
"RTN","GMVGETQ",14,0)
 ;RESULT - CONTAINS INTERNAL AND EXTERNAL DATE/TIME
"RTN","GMVGETQ",15,0)
 N GDATE D DT^DILF("ETS",GMRDATE,.GDATE)
"RTN","GMVGETQ",16,0)
 I $G(GDATE)'>0 S RESULT="" Q
"RTN","GMVGETQ",17,0)
 I $G(GDATE)>$$NOW^XLFDT S RESULT="" Q
"RTN","GMVGETQ",18,0)
 S RESULT=$G(GDATE)_"^"_$G(GDATE(0))
"RTN","GMVGETQ",19,0)
 Q
"RTN","GMVGETQ",20,0)
 ;
"RTN","GMVGETQ",21,0)
ADDQUAL(RESULT,GMRVDATA) ; Add qualifiers to FILE 120.5 entry
"RTN","GMVGETQ",22,0)
 ; ADD QUALIFIER TO 120.505 SUBFILE
"RTN","GMVGETQ",23,0)
 ; Input:
"RTN","GMVGETQ",24,0)
 ;    GMRVDATA=120.5 IEN^QUALIFIER (120.52) IEN
"RTN","GMVGETQ",25,0)
 ; Output:
"RTN","GMVGETQ",26,0)
 ;    RESULT = "" or the IEN of the subfile entry
"RTN","GMVGETQ",27,0)
 ;
"RTN","GMVGETQ",28,0)
 N GMVCNT,GMVERR,GMVFDA,GMVOKAY,GMRVIEN,GMRVQUAL
"RTN","GMVGETQ",29,0)
 S GMRVIEN=+$P(GMRVDATA,"^",1) ;File 120.5 ien
"RTN","GMVGETQ",30,0)
 S GMRVQUAL=+$P(GMRVDATA,"^",2) ;File 120.52 ien
"RTN","GMVGETQ",31,0)
 ; Does File 120.5 entry exist?
"RTN","GMVGETQ",32,0)
 I '$D(^GMR(120.5,GMRVIEN,0)) D  Q
"RTN","GMVGETQ",33,0)
 .S RESULT=""
"RTN","GMVGETQ",34,0)
 .;or S RESULT="-1^Vitals entry not found."
"RTN","GMVGETQ",35,0)
 .Q
"RTN","GMVGETQ",36,0)
 ; Is the qualifier already stored?
"RTN","GMVGETQ",37,0)
 I $O(^GMR(120.5,GMRVIEN,5,"B",GMRVQUAL,0))>0 D  Q
"RTN","GMVGETQ",38,0)
 .S RESULT=""
"RTN","GMVGETQ",39,0)
 .;or S RESULT="-1^Qualifier already filed. No change made."
"RTN","GMVGETQ",40,0)
 .Q
"RTN","GMVGETQ",41,0)
 ; Legitimate Qualifier?
"RTN","GMVGETQ",42,0)
 I '$D(^GMRD(120.52,GMRVQUAL,0)) D  Q
"RTN","GMVGETQ",43,0)
 .S RESULT=""
"RTN","GMVGETQ",44,0)
 .; or S RESULT="-1^"_$P(GMRVDATA,U,2)_" is not a legitimate qualifier"
"RTN","GMVGETQ",45,0)
 .Q
"RTN","GMVGETQ",46,0)
 S GMVCNT=0 ;counter for number of tries to lock an entry
"RTN","GMVGETQ",47,0)
B2 ; Lock the entry
"RTN","GMVGETQ",48,0)
 I GMVCNT>3 D  Q  ;4 strikes and you're out
"RTN","GMVGETQ",49,0)
 .S RESULT=""
"RTN","GMVGETQ",50,0)
 .;or S RESULT="-1^Could not lock entry to file qualifiers."
"RTN","GMVGETQ",51,0)
 .L -^GMR(120.5,GMRVIEN,0)
"RTN","GMVGETQ",52,0)
 .Q
"RTN","GMVGETQ",53,0)
 L +^GMR(120.5,GMRVIEN,0):1
"RTN","GMVGETQ",54,0)
 S GMVCNT=GMVCNT+1
"RTN","GMVGETQ",55,0)
 I '$T L -^GMR(120.5,GMRVIEN,0) G B2
"RTN","GMVGETQ",56,0)
 ; Store the  qualifier
"RTN","GMVGETQ",57,0)
 S GMVFDA(120.505,"+1,"_GMRVIEN_",",.01)=GMRVQUAL
"RTN","GMVGETQ",58,0)
 D UPDATE^DIE("","GMVFDA","GMVOKAY","GMVERR")
"RTN","GMVGETQ",59,0)
 L -^GMR(120.5,GMRVIEN,0)
"RTN","GMVGETQ",60,0)
 I $D(GMVERR) S RESULT="" ; or S RESULT="-1^*fileman error message*"
"RTN","GMVGETQ",61,0)
 E  S RESULT=+$G(GMVOKAY(1))
"RTN","GMVGETQ",62,0)
 Q
"RTN","GMVGGR1")
0^7^B19172168^B19614768
"RTN","GMVGGR1",1,0)
GMVGGR1 ;HOIFO/YH,FT-VITAL SIGNS RECORD SF 511 ;6/12/02  11:58
"RTN","GMVGGR1",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**3**;Oct 31, 2002
"RTN","GMVGGR1",3,0)
 ;
"RTN","GMVGGR1",4,0)
 ; This routine uses the following IAs:
"RTN","GMVGGR1",5,0)
 ;  #3214 - ^GMRYAPI calls         (private)
"RTN","GMVGGR1",6,0)
 ; #10040 - FILE 44 references     (supported)
"RTN","GMVGGR1",7,0)
 ; #10061 - ^VADPT calls           (supported)
"RTN","GMVGGR1",8,0)
 ; #10096 - ^%ZOSF calls           (supported)
"RTN","GMVGGR1",9,0)
 ;
"RTN","GMVGGR1",10,0)
 ; This routine supports the following IAs:
"RTN","GMVGGR1",11,0)
 ; #4654 - GMV V/M ALLDATA RPC is called at VMDATA (private)
"RTN","GMVGGR1",12,0)
 ;
"RTN","GMVGGR1",13,0)
VMDATA(RESULT,GMVDATA) ;GMV V/M ALLDATA [RPC entry point]
"RTN","GMVGGR1",14,0)
 ;ENTRY POINT FROM GMRV SF511 GUI TO EXTRACT ALL DATA
"RTN","GMVGGR1",15,0)
 ; GMVDATA: piece 1 = DFN
"RTN","GMVGGR1",16,0)
 ;                2 = start date
"RTN","GMVGGR1",17,0)
 ;                3 = end date
"RTN","GMVGGR1",18,0)
 ;                4 = 0
"RTN","GMVGGR1",19,0)
 ;
"RTN","GMVGGR1",20,0)
 N DFN,GQT,X,Y
"RTN","GMVGGR1",21,0)
 K ^TMP($J)
"RTN","GMVGGR1",22,0)
 S (GMROUT,GN,GQT)=0,DFN=+$P(GMVDATA,"^"),GMRSTRT=$P(GMVDATA,"^",2),GMRFIN=$P(GMVDATA,"^",3),GMR=+$P(GMVDATA,"^",4)
"RTN","GMVGGR1",23,0)
 S GSEL=0,GMR=0
"RTN","GMVGGR1",24,0)
 S Y=GMRSTRT X ^DD("DD") S GSTRFIN=Y S Y=GMRFIN X ^DD("DD") S GSTRFIN=GSTRFIN_" - "_Y
"RTN","GMVGGR1",25,0)
 S GMRHT=0
"RTN","GMVGGR1",26,0)
 K ^TMP($J,"GMR"),^TMP($J,"GMRK"),^TMP($J,"GDT"),^TMP($J,"GMRVG"),^TMP($J,"GTNM")
"RTN","GMVGGR1",27,0)
 S GSTART1=(9999999-GMRFIN)-.0001,GEND1=9999999-GMRSTRT
"RTN","GMVGGR1",28,0)
 F GTYPE="B","H","P","R","T","W","PO2","CVP","CG","PN" D SETT
"RTN","GMVGGR1",29,0)
 S GRPT=5 D:GMR'=1 SETIO D ^GMVGGR2
"RTN","GMVGGR1",30,0)
Q1 K GMR,GSOL,GIVDT,GMRHLOC,GMRVJ,GDATA,GDT,GEN,GEND1,GI,GJ,GK,GMRVX,GSTART1,GTNM,GTYP,GTYPE,GX,I D KVAR^VADPT K VA,VAROOT
"RTN","GMVGGR1",31,0)
 D QIO^GMVGR5
"RTN","GMVGGR1",32,0)
 K GRPT,GMROUT,GMRRMBD,GAGE,GCNT,GDOB,GCNTB,GCNTD,GCNTP,GCNTR,GCNTT,GCNTT1,GCNTI,GCNTO,GDT1,GCNTPD,GCNTTD,GCNTW,GPG,GPGS,GHT,GTYPE1,GCNTB3,GDTA,XDT,XIO,XX,^TMP($J,"GMRK"),^TMP($J,"GMR"),^TMP($J,"GDT"),^TMP($J,"GMRVG")
"RTN","GMVGGR1",33,0)
 K GLINE,GMRQUAL,^TMP($J,"GTNM"),G,GDA,GDIP,GDOP,GINF,GMIN,GMRFIN,GMRHT,GMRSITE,GMRSTRT,GMRVARY,GMRVHLOC,GMRWARD,GN,GNDATE,GNSHFT,GRNDIP,GRNDOP,GRNGIP,GSIP,GSOP,GSTAR,GSTRFIN,GSUB
"RTN","GMVGGR1",34,0)
 Q
"RTN","GMVGGR1",35,0)
SETT ;SET GMRT
"RTN","GMVGGR1",36,0)
 S GTYP(1)=$S(GTYPE="B":"BLOOD PRESSURE",GTYPE="P":"PULSE",GTYPE="R":"RESPIRATION",GTYPE="T":"TEMPERATURE",GTYPE="H":"HEIGHT",GTYPE="W":"WEIGHT",GTYPE="CG":"CIRCUMFERENCE/GIRTH",GTYPE="PO2":"PULSE OXIMETRY",1:"")
"RTN","GMVGGR1",37,0)
 I GTYP(1)="" S GTYP(1)=$S(GTYPE="CVP":"CENTRAL VENOUS PRESSURE",GTYPE="PN":"PAIN",1:"")
"RTN","GMVGGR1",38,0)
 Q:GTYP(1)=""
"RTN","GMVGGR1",39,0)
 S GTYP=$O(^GMRD(120.51,"B",GTYP(1),""))
"RTN","GMVGGR1",40,0)
 I GTYP>0 F GX=GSTART1:0 S GX=$O(^GMR(120.5,"AA",DFN,GTYP,GX)) Q:GX>GEND1!(GX'>0)  F GEN=0:0 S GEN=$O(^GMR(120.5,"AA",DFN,GTYP,GX,GEN)) Q:GEN'>0  I '$D(^GMR(120.5,GEN,2)) D BLDARR
"RTN","GMVGGR1",41,0)
 Q
"RTN","GMVGGR1",42,0)
BLDARR ;
"RTN","GMVGGR1",43,0)
 N GMVLOC,GMVUSER
"RTN","GMVGGR1",44,0)
 S GDATA=$S($D(^GMR(120.5,GEN,0)):^(0),1:"")
"RTN","GMVGGR1",45,0)
 Q:GDATA=""
"RTN","GMVGGR1",46,0)
 S GMVLOC=+$P(GDATA,U,5) ;hospital location ien
"RTN","GMVGGR1",47,0)
 S GMVLOC=$P($G(^SC(GMVLOC,0)),U,1)
"RTN","GMVGGR1",48,0)
 S GMVUSER=+$P(GDATA,U,6) ;user duz
"RTN","GMVGGR1",49,0)
 S GMVUSER=$$PERSON^GMVUTL1(GMVUSER)
"RTN","GMVGGR1",50,0)
 S GMRVX=GTYPE,GMRVX(0)=$P(GDATA,"^",8),GMRVX(1)=0  D:GMRVX(0)>0!(GMRVX(0)<0)!($E(GMRVX(0))="0") EN1^GMVSAS0
"RTN","GMVGGR1",51,0)
 K GMRVARY S GMRVARY="" I $P($G(^GMR(120.5,GEN,5,0)),"^",4)>0 D CHAR^GMVCHAR(GEN,.GMRVARY,GTYP)
"RTN","GMVGGR1",52,0)
 K GG S GG="" I $O(GMRVARY(0)) D
"RTN","GMVGGR1",53,0)
 . S GG(1)=0 F  S GG(1)=$O(GMRVARY(GG(1))) Q:GG(1)'>0  S GG(2)=0 F  S GG(2)=$O(GMRVARY(GG(1),GG(2))) Q:GG(2)'>0  S GG(3)="" F  S GG(3)=$O(GMRVARY(GG(1),GG(2),GG(3))) Q:GG(3)=""  S GG=GG_$S(GG="":"",1:";")_GG(3)
"RTN","GMVGGR1",54,0)
 I $P(GDATA,"^",8)="" Q
"RTN","GMVGGR1",55,0)
 S ^TMP($J,"GMRVG",9999999-GX,GTYPE,$P(GDATA,"^",8))=GG_"^"_$S($G(GMRVX(1))>0:1,1:"")_"^^"_$P(GDATA,"^",10)_U_GMVLOC_U_GMVUSER
"RTN","GMVGGR1",56,0)
 S:$D(^TMP($J,"GMRVG",9999999-GX,"H",$P(GDATA,"^",8))) GHT=$P(GDATA,"^",8)
"RTN","GMVGGR1",57,0)
 ;I GTYPE="B",$P(GDATA,"^",8)'>0 S ^TMP($J,"GMRVG",9999999-GX,"B",$P(GDATA,"^",8))="^^"
"RTN","GMVGGR1",58,0)
 K GG
"RTN","GMVGGR1",59,0)
 Q
"RTN","GMVGGR1",60,0)
SETIO ;
"RTN","GMVGGR1",61,0)
 S X="GMRYRP0" X ^%ZOSF("TEST") Q:'$T
"RTN","GMVGGR1",62,0)
 D IO^GMVGR5
"RTN","GMVGGR1",63,0)
 D SETIOAR
"RTN","GMVGGR1",64,0)
 Q
"RTN","GMVGGR1",65,0)
SETIOAR F GTYPE1="XI"_($$INPUT^GMRYAPI()+4),"XO"_($$OUTPUT^GMRYAPI()+1) F GDT=0:0 S GDT=$O(^TMP($J,"GMR",GTYPE1,GDT)) Q:GDT'>0  F GDTA=0:0 S GDTA=$O(^TMP($J,"GMR",GTYPE1,GDT,GDTA)) Q:GDTA=""  D SETIOAR1
"RTN","GMVGGR1",66,0)
 Q
"RTN","GMVGGR1",67,0)
SETIOAR1 S:GTYPE1["XI" ^TMP($J,"GMRVG",GDT,"I",GDTA)="^" S:GTYPE1["XO" ^TMP($J,"GMRVG",GDT,"O",GDTA)="^"
"RTN","GMVGGR1",68,0)
 Q
"RTN","GMVGGR2")
0^6^B16803927^B16039152
"RTN","GMVGGR2",1,0)
GMVGGR2 ;HOIFO/YH,FT-SET ^TMP($J) GLOBAL ;9/30/02  14:58
"RTN","GMVGGR2",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**3**;Oct 31, 2002
"RTN","GMVGGR2",3,0)
 ;CONTINUTATION OF GMVGGR1
"RTN","GMVGGR2",4,0)
 ;
"RTN","GMVGGR2",5,0)
 ; This routine uses the following IAs:
"RTN","GMVGGR2",6,0)
 ; #10061 - ^VADPT calls           (supported)
"RTN","GMVGGR2",7,0)
 ;
"RTN","GMVGGR2",8,0)
GRAPH ;
"RTN","GMVGGR2",9,0)
 D:GMR=0 SETV
"RTN","GMVGGR2",10,0)
 I '$D(^TMP($J,"GMRVG")) S GN=GN+1,^TMP($J,GN)="NO DATA",RESULT=$NA(^TMP($J)) Q
"RTN","GMVGGR2",11,0)
 K GMRQUAL S GDT=0 F  S GDT=$O(^TMP($J,"GMRVG",GDT)) Q:GDT'>0  D
"RTN","GMVGGR2",12,0)
 .  S:GMR=0 GN=GN+1,^TMP($J,GN)="^^^^^^^^^^^^^^^^^^^^^" D DATE
"RTN","GMVGGR2",13,0)
 .  S GI="" F  S GI=$O(^TMP($J,"GMRVG",GDT,GI)) Q:GI=""  D
"RTN","GMVGGR2",14,0)
 . . S GK="" F  S GK=$O(^TMP($J,"GMRVG",GDT,GI,GK)) Q:GK=""  D SETA
"RTN","GMVGGR2",15,0)
 D KVAR^VADPT K VA
"RTN","GMVGGR2",16,0)
 ;RETURN CALL ROUTINE WITH QUALIFIERS
"RTN","GMVGGR2",17,0)
 I GMR=1,$D(GMRQUAL) D
"RTN","GMVGGR2",18,0)
 . S (GQ,GQ(1))=""
"RTN","GMVGGR2",19,0)
 . F  S GQ=$O(GMRQUAL(GQ)) Q:GQ=""  D
"RTN","GMVGGR2",20,0)
 . . S I=0,GQ(1)=$S(GQ="T":"TEMPERATURE",GQ="P":"PULSE",GQ="R":"RESPIRATION",GQ="B":"BLOOD PRESSURE",GQ="H":"HEIGHT",GQ="W":"WEIGHT",GQ="CVP":"CVP",GQ="PO2":"PULSE OXIMETRY",GQ="CG":"CIRCUMFERENCE/GIRTH",1:"")
"RTN","GMVGGR2",21,0)
 . . Q:GQ(1)=""  S GN=GN+1,^TMP($J,GN)=GQ(1)_"--- "
"RTN","GMVGGR2",22,0)
 . . S GQ(2)="" F  S GQ(2)=$O(GMRQUAL(GQ,GQ(2))) Q:GQ(2)=""  S I=I+1 S:I>1 ^TMP($J,GN)=^(GN)_"," S ^TMP($J,GN)=^TMP($J,GN)_" "_GQ(2)
"RTN","GMVGGR2",23,0)
 K GQ,GG,GI,GMRVJ,GSYNO,GHOLD,GLINE,GMRQUAL
"RTN","GMVGGR2",24,0)
 K ^TMP($J,"GMR"),^TMP($J,"GMRVG")
"RTN","GMVGGR2",25,0)
 S RESULT=$NA(^TMP($J))
"RTN","GMVGGR2",26,0)
 Q
"RTN","GMVGGR2",27,0)
SETV ;Set patient data in ^TMP($J,"GMRK" global
"RTN","GMVGGR2",28,0)
 D DEM^VADPT,INP^VADPT
"RTN","GMVGGR2",29,0)
 S GN=1,^TMP($J,GN)=$S(VADM(1)'="":VADM(1),1:"         ")_"  "_$S(VADM(2)'="":$P(VADM(2),"^",2),1:" ")_"  "_$S($D(VADM(3)):$P(VADM(3),"^",2),1:" ")_"  "_$S($D(VADM(4)):VADM(4),1:" ")_" (Yrs)"
"RTN","GMVGGR2",30,0)
 S ^TMP($J,GN)=^(GN)_"  "_$S($D(VADM(5)):$P(VADM(5),"^",2),1:" ")
"RTN","GMVGGR2",31,0)
 S GN=2,^TMP($J,GN)="Unit: "_$P($G(VAIN(4)),"^",2)_"   Room: "_$P($G(VAIN(5)),"-",1,2)
"RTN","GMVGGR2",32,0)
 I '$D(GMRVHLOC) S GMRVHLOC=$$HOSPLOC^GMVUTL1(+$G(VAIN(4)))
"RTN","GMVGGR2",33,0)
 S GN=3,^TMP($J,GN)="Division: "_$$DIVISION^GMVUTL1(+GMRVHLOC)
"RTN","GMVGGR2",34,0)
 S GN=4,^TMP($J,GN)=GSTRFIN
"RTN","GMVGGR2",35,0)
 Q
"RTN","GMVGGR2",36,0)
DATE S:GMR=0 $P(^TMP($J,GN),"^")=$E(GDT,4,5)_"-"_$E(GDT,6,7)_"-"_$E(GDT,2,3)
"RTN","GMVGGR2",37,0)
 S:GMR=0 Y=$E($P(GDT,".",2)_"000000",1,6),$P(^TMP($J,GN),"^",2)=$E(Y,1,2)_":"_$E(Y,3,4)_":"_$E(Y,5,6)
"RTN","GMVGGR2",38,0)
 Q
"RTN","GMVGGR2",39,0)
SETA ;Store measurements in ^TMP($J, global
"RTN","GMVGGR2",40,0)
 N GMVNODE
"RTN","GMVGGR2",41,0)
 S GMVNODE=$G(^TMP($J,"GMRVG",GDT,GI,GK))
"RTN","GMVGGR2",42,0)
 S $P(^TMP($J,GN),"^",22)=$P(GMVNODE,U,5)
"RTN","GMVGGR2",43,0)
 S $P(^TMP($J,GN),"^",23)=$P(GMVNODE,U,6)
"RTN","GMVGGR2",44,0)
 S GK(1)=GK
"RTN","GMVGGR2",45,0)
 I GK(1)="Unavailable" S GK(1)="Unavail"
"RTN","GMVGGR2",46,0)
 I GI="I" S:GMR=0 $P(^TMP($J,GN),"^",17)=GK(1) Q
"RTN","GMVGGR2",47,0)
 I GI="O" S:GMR=0 $P(^TMP($J,GN),"^",18)=GK(1) Q
"RTN","GMVGGR2",48,0)
 I GI="PN" S:GMR=0 $P(^TMP($J,GN),"^",19)=GK(1) Q
"RTN","GMVGGR2",49,0)
 S (GMRSITE,GMRSITE(1),GINF,GMRVJ)=""
"RTN","GMVGGR2",50,0)
 I GK(1)'="" D  Q:GMR=1
"RTN","GMVGGR2",51,0)
 . S GMRSITE(1)=$P(GMVNODE,U,1),GMRVJ=$P(GMVNODE,U,2),GINF=$P(GMVNODE,U,4)
"RTN","GMVGGR2",52,0)
 . I GMRSITE(1)'="" D SYNOARY^GMVLGQU
"RTN","GMVGGR2",53,0)
 I GI="R" S $P(^TMP($J,GN),"^",5)=GK(1)_$S(GMRVJ=1:"*",1:"")_"- "_GMRSITE Q
"RTN","GMVGGR2",54,0)
 I GI="H" D  Q
"RTN","GMVGGR2",55,0)
 . S $P(^TMP($J,GN),"^",11)=GK(1)_"- "_GMRSITE,$P(^TMP($J,GN),"^",12)=$S(GK(1)>0:$J(GK(1)*2.54,0,2),1:"") S:GK(1)>0 GMRHT=(GK(1)*2.54)/100
"RTN","GMVGGR2",56,0)
 I GI="PO2" D  Q
"RTN","GMVGGR2",57,0)
 . S (GINF(1),GINF(2))="" I GINF'="" D PO2^GMVLGQU(.GINF)
"RTN","GMVGGR2",58,0)
 . S $P(^TMP($J,GN),"^",6)=GK(1)_$S(GMRVJ=1:"*",1:"")_"- "_GMRSITE_"-"_GINF(1)_"-"_GINF(2)
"RTN","GMVGGR2",59,0)
 I GI="CVP" D  Q
"RTN","GMVGGR2",60,0)
 . S $P(^TMP($J,GN),"^",15)=$S(GK(1)>0!(GK(1)<0):$J(GK(1),0,1),1:GK(1))_$S(GMRVJ=1:"*",1:"")
"RTN","GMVGGR2",61,0)
 . S $P(^TMP($J,GN),"^",16)=$S(GK(1)>0!(GK(1)<0)!($E(GK(1))="0"):$J(GK(1)/1.36,0,1),1:"")_$S(GMRVJ=1:"*",1:"")
"RTN","GMVGGR2",62,0)
 I GI="CG" D  Q
"RTN","GMVGGR2",63,0)
 . S $P(^TMP($J,GN),"^",13)=GK(1)_"- "_GMRSITE,$P(^TMP($J,GN),"^",14)=$S(GK(1)>0:$J(GK(1)/.3937,0,2),1:"")
"RTN","GMVGGR2",64,0)
 I GI="B",GK(1)'="" S $P(^TMP($J,GN),"^",7)=GK(1)_$S(GMRVJ=1:"*",1:"")_"- "_GMRSITE
"RTN","GMVGGR2",65,0)
 I GI="W" S $P(^TMP($J,GN),"^",8)=GK(1)_"- "_GMRSITE,$P(^(GN),"^",9)=$S(GK(1)>0:$J(GK(1)*.45359237,0,2),1:"")
"RTN","GMVGGR2",66,0)
 I GK(1)>0,GI="W" D  Q
"RTN","GMVGGR2",67,0)
  . S GHOLD=GI,GMRBMI="",GMRBMI(1)=GDT,GMRBMI(2)=GK(1) D CALBMI^GMVBMI(.GMRBMI) S GI=GHOLD
"RTN","GMVGGR2",68,0)
  . S $P(^TMP($J,GN),"^",10)=GMRBMI K GMRBMI
"RTN","GMVGGR2",69,0)
 I GI="T" S $P(^TMP($J,GN),"^",3)=GK(1)_$S(GMRVJ=1:"*",1:"")_"- "_GMRSITE Q
"RTN","GMVGGR2",70,0)
 I GI="P" S $P(^TMP($J,GN),"^",4)=GK(1)_$S(GMRVJ=1:"*",1:"")_"- "_GMRSITE
"RTN","GMVGGR2",71,0)
 Q
"RTN","GMVHS")
0^8^B58476565
"RTN","GMVHS",1,0)
GMVHS ;HIOFO/FT-RETURN PATIENT DATA UTILITY ;6/10/05  11:32
"RTN","GMVHS",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**3**;Oct 31, 2002
"RTN","GMVHS",3,0)
 ;
"RTN","GMVHS",4,0)
 ; This routine uses the following IAs:
"RTN","GMVHS",5,0)
 ; #10040 - FILE 44 references     (supported)
"RTN","GMVHS",6,0)
 ; #10104 - ^XLFSTR calls          (supported)
"RTN","GMVHS",7,0)
 ;
"RTN","GMVHS",8,0)
 ; This routine supports the following IAs:
"RTN","GMVHS",9,0)
 ; EN1 - 4791                       (private)
"RTN","GMVHS",10,0)
 ;
"RTN","GMVHS",11,0)
EN1 ; Entry to gather patients vital/measurment data
"RTN","GMVHS",12,0)
 ; Input variables
"RTN","GMVHS",13,0)
 ;
"RTN","GMVHS",14,0)
 ;     DFN = Entry number of patient in Patient file. (Required)
"RTN","GMVHS",15,0)
 ; GMRVSTR = types of vital/measurments desired.  Use the abbreviations
"RTN","GMVHS",16,0)
 ;           found in the Vital Type (120.51) file.  For multiple
"RTN","GMVHS",17,0)
 ;           vitals, use the ; as a delimiter. (Required)
"RTN","GMVHS",18,0)
 ; GMRVSTR(0) = GMRVSTDT^GMRVENDT^GMRVOCC^GMRVSORD
"RTN","GMVHS",19,0)
 ;         where GMRVSTDT = The start date/time that the utility will
"RTN","GMVHS",20,0)
 ;                          use in obtaining patient data.  (Required)
"RTN","GMVHS",21,0)
 ;               GMRVENDT = The end date/time that the utility will use
"RTN","GMVHS",22,0)
 ;                          to stop the search.  (Required)
"RTN","GMVHS",23,0)
 ;               GMRVOCC  = The number of occurrences of the data that
"RTN","GMVHS",24,0)
 ;                          is desired by the search.  (Required)
"RTN","GMVHS",25,0)
 ;               GMRVSORD = The sort order desired in output. 0 will sort 
"RTN","GMVHS",26,0)
 ;                          the data by vital type, then by date/time entered.
"RTN","GMVHS",27,0)
 ;                          1 will sort the data by date/time entered, then by 
"RTN","GMVHS",28,0)
 ;                          vital type. (REQUIRED)
"RTN","GMVHS",29,0)
 ; GMRVSTR("LT") = ^TYP1^[TYP2^...]  (OPTIONAL)
"RTN","GMVHS",30,0)
 ;         THIS VARIABLE IS AN ^ DELIMITED LIST OF HOSPITAL LOCATION
"RTN","GMVHS",31,0)
 ;         TYPES TO EXTRACT MEASUREMENT DATA FOR.  E.G., ^C^M^, WILL
"RTN","GMVHS",32,0)
 ;         EXTRACT DATA FOR ONLY THOSE MEASUREMENTS TAKEN ON CLINICS
"RTN","GMVHS",33,0)
 ;         OR MODULES.
"RTN","GMVHS",34,0)
 ;
"RTN","GMVHS",35,0)
 ; Output variables:
"RTN","GMVHS",36,0)
 ;
"RTN","GMVHS",37,0)
 ; The utility will create an array with the desired information.  The
"RTN","GMVHS",38,0)
 ; array structure will be as follows if '$P(GMRVSTR,"^",4):
"RTN","GMVHS",39,0)
 ;      ^UTILITY($J,"GMRVD",GMRVTYP,GMRVRDT,GMRVIEN)=GMRVDATA
"RTN","GMVHS",40,0)
 ; or if $P(GMRVSTR,"^",4) then the following will be returned:
"RTN","GMVHS",41,0)
 ;      ^UTILITY($J,"GMRVD",GMRVRDT,GMRVTYP,GMRVIEN)=GMRVDATA
"RTN","GMVHS",42,0)
 ; where GMRVRDT  = Reverse FileMan date/time.
"RTN","GMVHS",43,0)
 ;                  9999999-Date/time vital/measurement was taken.
"RTN","GMVHS",44,0)
 ;       GMRVTYP  = The abbreviation used in the GMRVSTR string for the
"RTN","GMVHS",45,0)
 ;                  type of vital/measurment taken.
"RTN","GMVHS",46,0)
 ;       GMRVIEN  = Entry number in file Vital/Measurement (120.5) file.
"RTN","GMVHS",47,0)
 ;       
"RTN","GMVHS",48,0)
 ;       $P(GMRVDATA,"^",1) = date/time of the reading (FileMan internal) 
"RTN","GMVHS",49,0)
 ;       $P(GMRVDATA,"^",2) = Patient (#2) number (i.e., DFN) 
"RTN","GMVHS",50,0)
 ;       $P(GMRVDATA,"^",3) = vital type ien (File 120.51) 
"RTN","GMVHS",51,0)
 ;       $P(GMRVDATA,"^",4) = date/time of data entry (FileMan internal) 
"RTN","GMVHS",52,0)
 ;       $P(GMRVDATA,"^",5) = hospital location ien (File 44) 
"RTN","GMVHS",53,0)
 ;       $P(GMRVDATA,"^",6) = user ien (File 200) 
"RTN","GMVHS",54,0)
 ;       $P(GMRVDATA,"^",7) = always null 
"RTN","GMVHS",55,0)
 ;       $P(GMRVDATA,"^",8) = reading (e.g., 98.6, Unavailable) 
"RTN","GMVHS",56,0)
 ;       $P(GMRVDATA,"^",9) = always null
"RTN","GMVHS",57,0)
 ;       $P(GMRVDATA,"^",10) = the first qualifier
"RTN","GMVHS",58,0)
 ;       $P(GMRVDATA,"^",11) = the second qualifier
"RTN","GMVHS",59,0)
 ;       $P(GMRVDATA,"^",12)= "*" for abnormal measurement, otherwise = ""
"RTN","GMVHS",60,0)
 ;       $P(GMRVDATA,"^",13)= values in centigrade for T; kilos for WT; 
"RTN","GMVHS",61,0)
 ;                            centimeters for HT and Circumference/Girth;
"RTN","GMVHS",62,0)
 ;                            and mmHg for CVP
"RTN","GMVHS",63,0)
 ;       $P(GMRVDATA,"^",14)= Body Mass Index
"RTN","GMVHS",64,0)
 ;       $P(GMRVDATA,"^",15)= L/Min of supplemental O2
"RTN","GMVHS",65,0)
 ;       $P(GMRVDATA,"^",16)= % of supplemental O2
"RTN","GMVHS",66,0)
 ;       $P(GMRVDATA,"^",17)= all qualifiers delimited by semi-colons
"RTN","GMVHS",67,0)
 ; The variable GMRVSTR will be killed upon exit.
"RTN","GMVHS",68,0)
 ;
"RTN","GMVHS",69,0)
 Q:'$D(GMRVSTR(0))!'($D(GMRVSTR)#2)!'($D(DFN)#2)
"RTN","GMVHS",70,0)
 Q:DFN'>0
"RTN","GMVHS",71,0)
 I $G(GMRVSTR("LT"))="" S GMRVSTR("LT")="" ;hospital location list
"RTN","GMVHS",72,0)
HSKPING ; Housekeeping
"RTN","GMVHS",73,0)
 K ^UTILITY($J,"GMRVD")
"RTN","GMVHS",74,0)
 N GMVABNML,GMVDATA,GMVEND,GMVHTIEN,GMVIEN,GMVLOOP,GMVMAX,GMVNODE,GMVOCC,GMVRATE,GMVSORD,GMVSTART,GMVTIEN,GMVTYPE,GMVWTIEN
"RTN","GMVHS",75,0)
 D RANGE
"RTN","GMVHS",76,0)
 F GMVLOOP=1:1:$L(GMRVSTR,";") D
"RTN","GMVHS",77,0)
 .S GMVTYPE=$P(GMRVSTR,";",GMVLOOP)
"RTN","GMVHS",78,0)
 .Q:GMVTYPE=""
"RTN","GMVHS",79,0)
 .S GMVMAX(GMVTYPE)=0
"RTN","GMVHS",80,0)
 .Q
"RTN","GMVHS",81,0)
 S GMVOCC=$P(GMRVSTR(0),U,3) ;max # of occurrences
"RTN","GMVHS",82,0)
 S GMVSORD=$P(GMRVSTR(0),U,4) ;sort order
"RTN","GMVHS",83,0)
 S GMVWTIEN=$$GETTYPEI("WT"),GMVHTIEN=$$GETTYPEI("HT")
"RTN","GMVHS",84,0)
 F GMRVSTR(1)=1:1:$L(GMRVSTR,";") S GMVTYPE=$P(GMRVSTR,";",GMRVSTR(1)) I $L(GMVTYPE) S GMVSTART=$S($P(GMRVSTR(0),"^",2):9999999-$P(GMRVSTR(0),"^",2)-.0000001,1:0),GMVEND=9999999-$P(GMRVSTR(0),"^"),GMRVSTR("O")=0 D GETDATE
"RTN","GMVHS",85,0)
 K GMRVSTR
"RTN","GMVHS",86,0)
 Q
"RTN","GMVHS",87,0)
GETDATE ; Loop thru AA xref
"RTN","GMVHS",88,0)
 S GMVTIEN=$O(^GMRD(120.51,"C",GMVTYPE,0)) ;vital type ien
"RTN","GMVHS",89,0)
 Q:'GMVTIEN
"RTN","GMVHS",90,0)
 S GMVLOOP=GMVSTART
"RTN","GMVHS",91,0)
 F  S GMVLOOP=$O(^GMR(120.5,"AA",DFN,GMVTIEN,GMVLOOP)) Q:GMVLOOP>GMVEND!(GMVLOOP'>0)  D GETNODE Q:GMVMAX(GMVTYPE)>GMVOCC
"RTN","GMVHS",92,0)
 Q
"RTN","GMVHS",93,0)
GETNODE ; Get patient record
"RTN","GMVHS",94,0)
 S GMVIEN=0
"RTN","GMVHS",95,0)
 F  S GMVIEN=$O(^GMR(120.5,"AA",DFN,GMVTIEN,GMVLOOP,GMVIEN)) Q:GMVIEN'>0!(GMVMAX(GMVTYPE)>GMVOCC)  I '$P($G(^GMR(120.5,+GMVIEN,2)),U) D
"RTN","GMVHS",96,0)
 .S GMVNODE=$G(^GMR(120.5,+GMVIEN,0))
"RTN","GMVHS",97,0)
 .Q:GMVNODE=""!($P(GMVNODE,U,8)="")
"RTN","GMVHS",98,0)
 .I $L(GMRVSTR("LT")) Q:$P(GMVNODE,U,5)'>0  Q:GMRVSTR("LT")'[("^"_$$GET1^DIQ(44,$P(GMVNODE,U,5)_",",2,"I")_"^")  ;hospital location check
"RTN","GMVHS",99,0)
 .;max # of occurrence check needed
"RTN","GMVHS",100,0)
 .S GMVMAX(GMVTYPE)=GMVMAX(GMVTYPE)+1
"RTN","GMVHS",101,0)
 .S GMVRATE=$P(GMVNODE,U,8)
"RTN","GMVHS",102,0)
 .D ZERONODE
"RTN","GMVHS",103,0)
 .D QUALS
"RTN","GMVHS",104,0)
 .I GMVTYPE="PO2" D PO2($P(GMVNODE,U,10))
"RTN","GMVHS",105,0)
 .D METRIC
"RTN","GMVHS",106,0)
 .D:$P(GMVNODE,U,3)=GMVWTIEN BMI ;calculate BMI for weight
"RTN","GMVHS",107,0)
 .D:$$TEXT(GMVRATE) ABNORMAL
"RTN","GMVHS",108,0)
 .D SET
"RTN","GMVHS",109,0)
 .Q
"RTN","GMVHS",110,0)
 Q
"RTN","GMVHS",111,0)
GETTYPEI(GMVTIEN) ; Return vital type (120.51) ien
"RTN","GMVHS",112,0)
 ; GMVTIEN = vital type abbreviation
"RTN","GMVHS",113,0)
 S GMVTIEN=$G(GMVTIEN)
"RTN","GMVHS",114,0)
 I GMVTIEN="" Q 0
"RTN","GMVHS",115,0)
 Q $O(^GMRD(120.51,"C",GMVTIEN,0))
"RTN","GMVHS",116,0)
 ;
"RTN","GMVHS",117,0)
ZERONODE ; Get zero node data
"RTN","GMVHS",118,0)
 S GMVDATA=$P($G(GMVNODE),U,1,8)_"^^^^^^^^^"
"RTN","GMVHS",119,0)
 Q
"RTN","GMVHS",120,0)
QUALS ; Get qualifiers for record
"RTN","GMVHS",121,0)
 N GMVQCNT,GMVQIEN,GMVQLIST,GMVQUALS
"RTN","GMVHS",122,0)
 S (GMVQCNT,GMVQIEN)=0,GMVQLIST=""
"RTN","GMVHS",123,0)
 F  S GMVQIEN=$O(^GMR(120.5,GMVIEN,5,"B",GMVQIEN)) Q:'GMVQIEN  D
"RTN","GMVHS",124,0)
 .S GMVQCNT=GMVQCNT+1
"RTN","GMVHS",125,0)
 .S GMVQUALS(GMVQCNT)=$P($G(^GMRD(120.52,+GMVQIEN,0)),U,1)
"RTN","GMVHS",126,0)
 .Q
"RTN","GMVHS",127,0)
 I $D(GMVQUALS(1)) S $P(GMVDATA,U,10)=GMVQUALS(1)
"RTN","GMVHS",128,0)
 I $D(GMVQUALS(2)) S $P(GMVDATA,U,11)=GMVQUALS(2)
"RTN","GMVHS",129,0)
 I $O(GMVQUALS(0)) D
"RTN","GMVHS",130,0)
 .S GMVQCNT=0
"RTN","GMVHS",131,0)
 .F  S GMVQCNT=$O(GMVQUALS(GMVQCNT)) Q:'GMVQCNT  D
"RTN","GMVHS",132,0)
 ..S GMVQLIST=GMVQLIST_GMVQUALS(GMVQCNT)_";"
"RTN","GMVHS",133,0)
 ..Q
"RTN","GMVHS",134,0)
 .Q
"RTN","GMVHS",135,0)
 I $G(GMVQLIST)]"" D
"RTN","GMVHS",136,0)
 .S GMVQLIST=$E(GMVQLIST,1,$L(GMVQLIST)-1)
"RTN","GMVHS",137,0)
 .S $P(GMVDATA,U,17)=GMVQLIST
"RTN","GMVHS",138,0)
 .Q
"RTN","GMVHS",139,0)
 Q
"RTN","GMVHS",140,0)
PO2(X) ; Get flow rate and liters/minute for Pulse Oximetry reading
"RTN","GMVHS",141,0)
 N GMVCONC,GMVFLOW
"RTN","GMVHS",142,0)
 S (GMVFLOW,GMVCONC)=""
"RTN","GMVHS",143,0)
 I X["%" D
"RTN","GMVHS",144,0)
 .S GMVCONC=$P(X,"%")
"RTN","GMVHS",145,0)
 .I GMVCONC["l/min" S GMVCONC=$P(GMVCONC,"l/min",2)
"RTN","GMVHS",146,0)
 I X["l/min" D
"RTN","GMVHS",147,0)
 .S GMVFLOW=$P(X,"l/min")
"RTN","GMVHS",148,0)
 .I GMVFLOW["%" S GMVFLOW=$P(GMVFLOW,"%",2)
"RTN","GMVHS",149,0)
 S GMVFLOW=$$STRIP^XLFSTR(GMVFLOW," ")
"RTN","GMVHS",150,0)
 S GMVCONC=$$STRIP^XLFSTR(GMVCONC," ")
"RTN","GMVHS",151,0)
 S $P(GMVDATA,U,15)=GMVFLOW
"RTN","GMVHS",152,0)
 S $P(GMVDATA,U,16)=GMVCONC
"RTN","GMVHS",153,0)
 Q
"RTN","GMVHS",154,0)
METRIC ; Calculate metric value for temperature, height, weight and
"RTN","GMVHS",155,0)
 ; circumference/girth
"RTN","GMVHS",156,0)
 N GMVMETRC
"RTN","GMVHS",157,0)
 S GMVMETRC=""
"RTN","GMVHS",158,0)
 Q:'$$TEXT(GMVRATE)  ;quit if not a numeric reading
"RTN","GMVHS",159,0)
 I GMVTYPE="T" D
"RTN","GMVHS",160,0)
 .S GMVMETRC=$J(GMVRATE-32*5/9,0,1)
"RTN","GMVHS",161,0)
 .Q
"RTN","GMVHS",162,0)
 I GMVTYPE="HT" D
"RTN","GMVHS",163,0)
 .S GMVMETRC=$J(2.54*GMVRATE,0,2)
"RTN","GMVHS",164,0)
 .Q
"RTN","GMVHS",165,0)
 I GMVTYPE="WT" D
"RTN","GMVHS",166,0)
 .S GMVMETRC=$J(GMVRATE*.45359237,0,2)
"RTN","GMVHS",167,0)
 .Q
"RTN","GMVHS",168,0)
 I GMVTYPE="CG" D
"RTN","GMVHS",169,0)
 .S GMVMETRC=$J(2.54*GMVRATE,0,2)
"RTN","GMVHS",170,0)
 .Q
"RTN","GMVHS",171,0)
 I GMVTYPE="CVP" D
"RTN","GMVHS",172,0)
 .S GMVMETRC=$J(GMVRATE/1.36,0,2)
"RTN","GMVHS",173,0)
 .Q
"RTN","GMVHS",174,0)
 I GMVMETRC]"" S $P(GMVDATA,U,13)=GMVMETRC
"RTN","GMVHS",175,0)
 Q
"RTN","GMVHS",176,0)
ABNORMAL ; Is reading outside of normal range?
"RTN","GMVHS",177,0)
 N GMVASTRK,GMVDIA,GMVSYS
"RTN","GMVHS",178,0)
 S GMVASTRK=""
"RTN","GMVHS",179,0)
 I GMVTYPE="T" D
"RTN","GMVHS",180,0)
 .S:GMVRATE>$P(GMVABNML("T"),U,1) GMVASTRK="*"
"RTN","GMVHS",181,0)
 .S:GMVRATE<$P(GMVABNML("T"),U,2) GMVASTRK="*"
"RTN","GMVHS",182,0)
 .Q
"RTN","GMVHS",183,0)
 I GMVTYPE="P" D
"RTN","GMVHS",184,0)
 .S:GMVRATE>$P(GMVABNML("P"),U,1) GMVASTRK="*"
"RTN","GMVHS",185,0)
 .S:GMVRATE<$P(GMVABNML("P"),U,2) GMVASTRK="*"
"RTN","GMVHS",186,0)
 .Q
"RTN","GMVHS",187,0)
 I GMVTYPE="R" D
"RTN","GMVHS",188,0)
 .S:GMVRATE>$P(GMVABNML("R"),U,1) GMVASTRK="*"
"RTN","GMVHS",189,0)
 .S:GMVRATE<$P(GMVABNML("R"),U,2) GMVASTRK="*"
"RTN","GMVHS",190,0)
 .Q
"RTN","GMVHS",191,0)
 I GMVTYPE="BP" D
"RTN","GMVHS",192,0)
 .S GMVSYS=$P(GMVRATE,"/",1)
"RTN","GMVHS",193,0)
 .S GMVDIA=$S($P(GMVRATE,"/",3)="":$P(GMVRATE,"/",2),1:$P(GMVRATE,"/",3))
"RTN","GMVHS",194,0)
 .S:GMVSYS>$P(GMVABNML("BP"),U,7) GMVASTRK="*"
"RTN","GMVHS",195,0)
 .S:GMVSYS<$P(GMVABNML("BP"),U,9) GMVASTRK="*"
"RTN","GMVHS",196,0)
 .S:GMVDIA>$P(GMVABNML("BP"),U,8) GMVASTRK="*"
"RTN","GMVHS",197,0)
 .S:GMVDIA<$P(GMVABNML("BP"),U,10) GMVASTRK="*"
"RTN","GMVHS",198,0)
 .Q
"RTN","GMVHS",199,0)
 I GMVTYPE="CVP" D
"RTN","GMVHS",200,0)
 .S:GMVRATE>$P(GMVABNML("CVP"),U,1) GMVASTRK="*"
"RTN","GMVHS",201,0)
 .S:GMVRATE<$P(GMVABNML("CVP"),U,2) GMVASTRK="*"
"RTN","GMVHS",202,0)
 .Q
"RTN","GMVHS",203,0)
 I GMVTYPE="PO2" D
"RTN","GMVHS",204,0)
 .S:GMVRATE<$P(GMVABNML("PO2"),U,2) GMVASTRK="*"
"RTN","GMVHS",205,0)
 .Q
"RTN","GMVHS",206,0)
 S $P(GMVDATA,U,12)=GMVASTRK
"RTN","GMVHS",207,0)
 Q
"RTN","GMVHS",208,0)
BMI ; Calculate Body Mass Index
"RTN","GMVHS",209,0)
 N GMVBMI
"RTN","GMVHS",210,0)
 S GMVBMI=""
"RTN","GMVHS",211,0)
 S GMVBMI=$$CALCBMI^GMVHS1(GMVNODE,GMVLOOP)
"RTN","GMVHS",212,0)
 S $P(GMVDATA,U,14)=GMVBMI
"RTN","GMVHS",213,0)
 Q
"RTN","GMVHS",214,0)
SET ; Set UTILITY($J,"GMRVD") node
"RTN","GMVHS",215,0)
 S:'GMVSORD ^UTILITY($J,"GMRVD",GMVTYPE,GMVLOOP,GMVIEN)=GMVDATA
"RTN","GMVHS",216,0)
 S:GMVSORD ^UTILITY($J,"GMRVD",GMVLOOP,GMVTYPE,GMVIEN)=GMVDATA
"RTN","GMVHS",217,0)
 Q
"RTN","GMVHS",218,0)
TEXT(RATE) ; Is rate a text code?
"RTN","GMVHS",219,0)
 ; Returns 0 if RATE has a text code and 1 if a numeric reading
"RTN","GMVHS",220,0)
 N GMVYES
"RTN","GMVHS",221,0)
 S RATE=$G(RATE),GMVYES=1
"RTN","GMVHS",222,0)
 I "REFUSEDPASSUNAVAILABLE"[$$UP^XLFSTR(RATE) S GMVYES=0
"RTN","GMVHS",223,0)
 Q GMVYES
"RTN","GMVHS",224,0)
 ;
"RTN","GMVHS",225,0)
RANGE ; Find normal ranges and store in array
"RTN","GMVHS",226,0)
 N GMVPIEN,GMVPNODE
"RTN","GMVHS",227,0)
 S GMVABNML("T")="0^0" ;high^low
"RTN","GMVHS",228,0)
 S GMVABNML("P")="0^0" ;high^low
"RTN","GMVHS",229,0)
 S GMVABNML("R")="0^0" ;high^low
"RTN","GMVHS",230,0)
 S GMVABNML("CVP")="0^0" ;high^low
"RTN","GMVHS",231,0)
 S GMVABNML("PO2")="0^0" ;low
"RTN","GMVHS",232,0)
 S GMVABNML("BP")="0^0^0^0" ;sys high^sys low^dia high^dia low
"RTN","GMVHS",233,0)
 S GMVPIEN=$O(^GMRD(120.57,0))
"RTN","GMVHS",234,0)
 Q:'GMVPIEN
"RTN","GMVHS",235,0)
 S GMVPNODE=$G(^GMRD(120.57,GMVPIEN,1))
"RTN","GMVHS",236,0)
 S GMVABNML("T")=$P(GMVPNODE,U,1)_U_$P(GMVPNODE,U,2)
"RTN","GMVHS",237,0)
 S GMVABNML("P")=$P(GMVPNODE,U,3)_U_$P(GMVPNODE,U,4)
"RTN","GMVHS",238,0)
 S GMVABNML("R")=$P(GMVPNODE,U,5)_U_$P(GMVPNODE,U,6)
"RTN","GMVHS",239,0)
 S GMVABNML("BP")=$P(GMVPNODE,U,7)_U_$P(GMVPNODE,U,9)_U_$P(GMVPNODE,U,8)_U_$P(GMVPNODE,U,10)
"RTN","GMVHS",240,0)
 S GMVABNML("CVP")=$P(GMVPNODE,U,11)_U_$P(GMVPNODE,U,12)
"RTN","GMVHS",241,0)
 S GMVABNML("PO2")=""_U_$P(GMVPNODE,U,13)
"RTN","GMVHS",242,0)
 Q
"RTN","GMVHS1")
0^9^B8049761
"RTN","GMVHS1",1,0)
GMVHS1 ;HIOFO/FT-RETURN PATIENT DATA UTILITY (cont.) ;6/30/05  16:56
"RTN","GMVHS1",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**3**;Oct 31, 2002
"RTN","GMVHS1",3,0)
 ;
"RTN","GMVHS1",4,0)
 ; This routine uses the following IAs:
"RTN","GMVHS1",5,0)
 ; <None>
"RTN","GMVHS1",6,0)
 ;
"RTN","GMVHS1",7,0)
CALCBMI(GMVNODE,GMVDATE) ; Calculate BMI for a record
"RTN","GMVHS1",8,0)
 ; GMVNODE = FILE 120.5 zero node
"RTN","GMVHS1",9,0)
 ; GMVDATE = reverse date/time of the weight reading
"RTN","GMVHS1",10,0)
 N GMVADATE,GMVAHGT,GMVBDATE,GMVBHGT,GMVBMI,GMVDFN,GMVH,GMVHTI,GMVIEN,GMVHGT,GMVWDATE,GMVWTI
"RTN","GMVHS1",11,0)
 S GMVHTI=$$GETTYPEI^GMVHS("HT") ;height ien
"RTN","GMVHS1",12,0)
 S GMVWTI=$$GETTYPEI^GMVHS("WT") ;weight ien
"RTN","GMVHS1",13,0)
 S GMVBMI="^",GMVNODE=$G(GMVNODE),GMVDATE=$G(GMVDATE)
"RTN","GMVHS1",14,0)
 I $P(GMVNODE,U,3)'=GMVWTI Q GMVBMI  ;not a weight reading
"RTN","GMVHS1",15,0)
 I $P(GMVNODE,U,8)'>0 Q GMVBMI  ;weight'>0
"RTN","GMVHS1",16,0)
 S GMVDFN=$P(GMVNODE,U,2)
"RTN","GMVHS1",17,0)
 I 'GMVDFN Q GMVBMI
"RTN","GMVHS1",18,0)
 I 'GMVDATE Q GMVBMI
"RTN","GMVHS1",19,0)
 S GMVWDATE=$P(GMVNODE,U,1) ;date/time of weight
"RTN","GMVHS1",20,0)
 S GMVHGT=0
"RTN","GMVHS1",21,0)
 ; Look for exact date/time match for height entry
"RTN","GMVHS1",22,0)
 S GMVIEN=$O(^GMR(120.5,"AA",GMVDFN,GMVHTI,GMVDATE,0))
"RTN","GMVHS1",23,0)
 I GMVIEN S GMVHGT=$$HEIGHT(GMVIEN)
"RTN","GMVHS1",24,0)
 I $P(GMVHGT,U,1) S GMVBMI=$$CALC($P(GMVNODE,U,8),$P(GMVHGT,U,1)) Q GMVBMI
"RTN","GMVHS1",25,0)
 ; get height and date/time taken before weight
"RTN","GMVHS1",26,0)
 S GMVBDATE=GMVDATE,GMVBHGT=0
"RTN","GMVHS1",27,0)
 F  S GMVBDATE=$O(^GMR(120.5,"AA",GMVDFN,GMVHTI,GMVBDATE)) Q:GMVBDATE'>0!(+GMVBHGT)  D
"RTN","GMVHS1",28,0)
 .S GMVIEN=0
"RTN","GMVHS1",29,0)
 .F  S GMVIEN=$O(^GMR(120.5,"AA",GMVDFN,GMVHTI,GMVBDATE,GMVIEN)) Q:GMVIEN'>0!(+GMVBHGT)  D
"RTN","GMVHS1",30,0)
 ..S GMVBHGT=$$HEIGHT(GMVIEN)
"RTN","GMVHS1",31,0)
 ..Q
"RTN","GMVHS1",32,0)
 .Q
"RTN","GMVHS1",33,0)
 ; get height and date/time taken after weight
"RTN","GMVHS1",34,0)
 S GMVADATE=GMVDATE,GMVAHGT=0
"RTN","GMVHS1",35,0)
 F  S GMVADATE=$O(^GMR(120.5,"AA",GMVDFN,GMVHTI,GMVADATE),-1) Q:GMVADATE'>0!(+GMVAHGT)  D
"RTN","GMVHS1",36,0)
 .S GMVIEN=0
"RTN","GMVHS1",37,0)
 .F  S GMVIEN=$O(^GMR(120.5,"AA",GMVDFN,GMVHTI,GMVADATE,GMVIEN)) Q:GMVIEN'>0!(+GMVAHGT)  D
"RTN","GMVHS1",38,0)
 ..S GMVAHGT=$$HEIGHT(GMVIEN)
"RTN","GMVHS1",39,0)
 ..Q
"RTN","GMVHS1",40,0)
 .Q
"RTN","GMVHS1",41,0)
 S GMVBDATE=$P(GMVBHGT,U,2),GMVBHGT=$P(GMVBHGT,U,1)
"RTN","GMVHS1",42,0)
 S GMVADATE=$P(GMVAHGT,U,2),GMVAHGT=$P(GMVAHGT,U,1)
"RTN","GMVHS1",43,0)
 I $P(GMVBDATE,".",1)=$P(GMVWDATE,".",1) S GMVBMI=$$CALC($P(GMVNODE,U,8),GMVBHGT) Q GMVBMI
"RTN","GMVHS1",44,0)
 I $P(GMVADATE,".",1)=$P(GMVWDATE,".",1) S GMVBMI=$$CALC($P(GMVNODE,U,8),GMVAHGT) Q GMVBMI
"RTN","GMVHS1",45,0)
 S GMVH=$S(GMVBHGT>0:GMVBHGT,GMVAHGT>0:GMVAHGT,1:"")
"RTN","GMVHS1",46,0)
 I GMVH="" Q GMVBMI
"RTN","GMVHS1",47,0)
 S GMVBMI=$$CALC($P(GMVNODE,U,8),GMVH) Q GMVBMI
"RTN","GMVHS1",48,0)
 Q GMVBMI
"RTN","GMVHS1",49,0)
 ;
"RTN","GMVHS1",50,0)
HEIGHT(GMVIEN) ; Does record have a useable height value? Is yes, return that value.
"RTN","GMVHS1",51,0)
 ; GMVIEN = File 120.5 entry number
"RTN","GMVHS1",52,0)
 N GMVX
"RTN","GMVHS1",53,0)
 S GMVIEN=+$G(GMVIEN)
"RTN","GMVHS1",54,0)
 I '$D(^GMR(120.5,GMVIEN,0)) Q 0
"RTN","GMVHS1",55,0)
 I $P($G(^GMR(120.5,GMVIEN,2)),U,1)=1 Q 0
"RTN","GMVHS1",56,0)
 S GMVX=$P(^GMR(120.5,GMVIEN,0),U,8)
"RTN","GMVHS1",57,0)
 I GMVX'>0 Q 0
"RTN","GMVHS1",58,0)
 Q GMVX_U_$P(^GMR(120.5,GMVIEN,0),U,1)
"RTN","GMVHS1",59,0)
 ;
"RTN","GMVHS1",60,0)
CALC(GMVWT,GMVHT) ; Crunch the numbers, return bmi score
"RTN","GMVHS1",61,0)
 ; GMVWT (lb)
"RTN","GMVHS1",62,0)
 ; GMVHT (in)
"RTN","GMVHS1",63,0)
 N GMVX
"RTN","GMVHS1",64,0)
 S GMVWT=$G(GMVWT),GMVHT=$G(GMVHT)
"RTN","GMVHS1",65,0)
 I 'GMVWT!(GMVHT'>0) Q ""
"RTN","GMVHS1",66,0)
 S GMVWT=GMVWT/2.2,GMVHT=GMVHT*2.54/100
"RTN","GMVHS1",67,0)
 S GMVX=$J(GMVWT/(GMVHT*GMVHT),0,0) S GMVX=GMVX_$S(GMVX>27:"*",1:"")
"RTN","GMVHS1",68,0)
 Q GMVX
"RTN","GMVHS1",69,0)
 ;
"RTN","GMVLAT0")
0^4^B31312749^B30381121
"RTN","GMVLAT0",1,0)
GMVLAT0 ;HOIFO/YH,FT-DISPLAY LATEST VITALS/MEASUREMENTS FOR A PATIENT ;5/26/05  14:10
"RTN","GMVLAT0",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**1,3**;Oct 31, 2002
"RTN","GMVLAT0",3,0)
 ;
"RTN","GMVLAT0",4,0)
 ; This routine uses the following IAs:
"RTN","GMVLAT0",5,0)
 ; #10104 - ^XLFSTR calls          (supported)
"RTN","GMVLAT0",6,0)
 ;
"RTN","GMVLAT0",7,0)
EN1(DFN) ; Entry to extract the latest vitals/measurements for a patient
"RTN","GMVLAT0",8,0)
 ;called by GETLAT^GMVGETD
"RTN","GMVLAT0",9,0)
 N G,GJ,GBLANK,GMVUSER,GMVNUMBR,X,Y
"RTN","GMVLAT0",10,0)
 S GJ=0,GBLANK=""
"RTN","GMVLAT0",11,0)
 F X="T","P","R","PO2","BP","HT","WT","CVP","CG","PN" I $D(^GMRD(120.51,"C",X))  S GMR(X)=$O(^GMRD(120.51,"C",X,"")),Y=$P($G(^GMRD(120.51,GMR(X),0)),"^") Q:Y=""
"RTN","GMVLAT0",12,0)
 K GMRDT,GMRVWT,GMRVHT
"RTN","GMVLAT0",13,0)
 S X=""
"RTN","GMVLAT0",14,0)
 F  S X=$O(GMR(X)) Q:X=""  S GMRDATS="" I GMR(X)>0 F GMRDAT=0:0 S GMRDAT=$O(^GMR(120.5,"AA",DFN,+GMR(X),GMRDAT)) Q:$S(GMRDAT'>0:1,GMRDATS>0:1,1:0)  D SETDATAR
"RTN","GMVLAT0",15,0)
 I '($D(GMRDATA)\10) S GJ=GJ+1,^TMP($J,"GRPC",GJ)="There are no results to report " G Q
"RTN","GMVLAT0",16,0)
 F X="T","P","R","PO2","BP","HT","WT","CVP","CG","PN" I $D(GMRDATA(X)) S GMRVDT="",(GMRVDT(1),GMVD)=0 F  S GMVD=$O(GMRDATA(X,GMVD)) Q:GMVD'>0  D WRTDT S GMVD(1)=0 F  S GMVD(1)=$O(GMRDATA(X,GMVD,GMVD(1))) Q:GMVD(1)'>0  D
"RTN","GMVLAT0",17,0)
 . S GMVNUMBR=$P($G(^GMR(120.5,+GMVD(1),0)),U,8)
"RTN","GMVLAT0",18,0)
 . Q:GMVNUMBR=""  ;RATE cannot be null
"RTN","GMVLAT0",19,0)
 .; set flag to indicate RATE is a numeric reading
"RTN","GMVLAT0",20,0)
 . S GMVNUMBR=$$NUMBER(GMVNUMBR)
"RTN","GMVLAT0",21,0)
 . S GMVUSER=$P($G(^GMR(120.5,+GMVD(1),0)),U,6) ;user ien
"RTN","GMVLAT0",22,0)
 . S GMVUSER=$$PERSON^GMVUTL1(GMVUSER) ;user name
"RTN","GMVLAT0",23,0)
 . S GJ=GJ+1,^TMP($J,"GRPC",GJ)="",GMRVX(0)=GMRDATA(X,GMVD,GMVD(1)) S GMRVX=X D:GMVNUMBR EN1^GMVSAS0
"RTN","GMVLAT0",24,0)
  .S:GMRVDT(1)=0 ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_$S(X="BP":"B/P",X="P":"Pulse",X="R":"Resp.",X="T":"Temp.",X="HT":"Ht.",X="CG":"Circ/Girth",X="WT":"Wt.",X="PO2":"Pulse Ox",X="PN":"Pain",1:X)_":"
"RTN","GMVLAT0",25,0)
 .I GMRVDT(1)=0 S GBLANK=$$REPEAT^XLFSTR(" ",13-$L(^TMP($J,"GRPC",GJ))),^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GBLANK_"("_GMRVDT_") " S GMRVDT(1)=1
"RTN","GMVLAT0",26,0)
 .S GBLANK=$$REPEAT^XLFSTR(" ",31-$L(^TMP($J,"GRPC",GJ))),^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GBLANK
"RTN","GMVLAT0",27,0)
 . I X="T" S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GMRVX(0)_$S(GMVNUMBR=1:" F  ("_$J(+GMRVX(0)-32*5/9,0,1)_" C)",1:"")
"RTN","GMVLAT0",28,0)
 .I X="WT" S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GMRVX(0)_$S(GMVNUMBR=1:" lb  ("_$J(GMRVX(0)*.45359237,0,2)_" kg)",1:"") S GMRVWT=GMRVX(0)/2.2
"RTN","GMVLAT0",29,0)
 .I X="HT" D
"RTN","GMVLAT0",30,0)
 ..S GMRVHT=(GMRVX(0)*2.54)/100
"RTN","GMVLAT0",31,0)
 ..I GMVNUMBR=0 S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GMRVX(0) Q
"RTN","GMVLAT0",32,0)
 ..S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_$S(GMRVX(0)\12:GMRVX(0)\12_" ft ",1:"")_$S(GMRVX(0)#12:GMRVX(0)#12_" in",1:"")_$S(GMVNUMBR=1:" ("_$J(GMRVX(0)*2.54,0,2)_" cm)",1:"")
"RTN","GMVLAT0",33,0)
 ..Q
"RTN","GMVLAT0",34,0)
 .I X="CG" S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GMRVX(0)_$S(GMVNUMBR=1:" in ("_$J(+GMRVX(0)/.3937,0,2)_" cm)",1:"")
"RTN","GMVLAT0",35,0)
 .I X="CVP" S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GMRVX(0)_$S(GMVNUMBR=1:" cmH2O ("_$J(GMRVX(0)/1.36,0,1)_" mmHg)",1:"")
"RTN","GMVLAT0",36,0)
 .I X="PO2" S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GMRVX(0)_$S(GMVNUMBR=1:"% ",1:"")
"RTN","GMVLAT0",37,0)
 .I X="P"!(X="R")!(X="BP") S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GMRVX(0)
"RTN","GMVLAT0",38,0)
 .I X="PN" D  S ^TMP($J,"GRPC",GJ)=^(GJ)_GMRVX(0)
"RTN","GMVLAT0",39,0)
 ..Q:'GMVNUMBR  ;not a number
"RTN","GMVLAT0",40,0)
 ..I GMRVX(0)=0 S GMRVX(0)="0 - No pain" Q
"RTN","GMVLAT0",41,0)
 ..I GMRVX(0)=99 S GMRVX(0)="99 - Unable to respond" Q
"RTN","GMVLAT0",42,0)
 ..I GMRVX(0)=10 S GMRVX(0)="Pain class - 10 Worst imaginable pain" Q
"RTN","GMVLAT0",43,0)
 ..Q
"RTN","GMVLAT0",44,0)
 .S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_$S('$D(GMRVX(1)):"",'GMRVX(1):"",1:"*") K GMRVX
"RTN","GMVLAT0",45,0)
 .D CHAR
"RTN","GMVLAT0",46,0)
 .I X="WT",$G(GMRVWT)>0,$G(GMRVHT)>0 D
"RTN","GMVLAT0",47,0)
 ..S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_"  _"_GMVUSER
"RTN","GMVLAT0",48,0)
 ..S GJ=GJ+1,GMRVHT(1)=$J(GMRVWT/(GMRVHT*GMRVHT),0,2),^TMP($J,"GRPC",GJ)="Body Mass Index:",GMVUSER="" D
"RTN","GMVLAT0",49,0)
 ...S GBLANK=$$REPEAT^XLFSTR(" ",29-$L(^TMP($J,"GRPC",GJ))),^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GBLANK_GMRVHT(1)_$S(GMRVHT(1)>27:"*",1:"")
"RTN","GMVLAT0",50,0)
 ...Q
"RTN","GMVLAT0",51,0)
 ..Q
"RTN","GMVLAT0",52,0)
 .S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_"  "_$S(GMVUSER]"":"_",1:"")_GMVUSER
"RTN","GMVLAT0",53,0)
 .Q
"RTN","GMVLAT0",54,0)
Q ; kill variables and quit
"RTN","GMVLAT0",55,0)
 K GMRVWT,GMRVHT,GMR,GMVD,GBP,GMRVARY,GMRVDA,GMRDATA,GMVDM,GLIN,GMRZZ
"RTN","GMVLAT0",56,0)
 K GMRVDT,GMROUT,%Y,GMRL,GMRDT,DIC,GMRDAT,GMRDATS,GMRSTR,GMRX,GMRVX,POP
"RTN","GMVLAT0",57,0)
 Q
"RTN","GMVLAT0",58,0)
SETDATAR ; get record IEN if not marked as entered-in-error
"RTN","GMVLAT0",59,0)
 S Y=0
"RTN","GMVLAT0",60,0)
 F  S Y=$O(^GMR(120.5,"AA",DFN,GMR(X),GMRDAT,Y)) Q:Y'>0!GMRDATS  I '$D(^GMR(120.5,Y,2)) D SETNODE
"RTN","GMVLAT0",61,0)
 Q
"RTN","GMVLAT0",62,0)
SETNODE ; Set record node
"RTN","GMVLAT0",63,0)
 S GMRL=$S($D(^GMR(120.5,Y,0)):^(0),1:"")
"RTN","GMVLAT0",64,0)
 S GMRL1=$P(GMRL,"^") ;adding trailing zeros to time if necessary
"RTN","GMVLAT0",65,0)
 S $P(GMRL1,".",2)=$P(GMRL1,".",2)_"0000"
"RTN","GMVLAT0",66,0)
 S $P(GMRL1,".",2)=$E($P(GMRL1,".",2),1,4)
"RTN","GMVLAT0",67,0)
 S $P(GMRL,"^")=GMRL1
"RTN","GMVLAT0",68,0)
 K GMRL1
"RTN","GMVLAT0",69,0)
 I GMRL'="" S GMRDATA(X,$P(GMRL,"^"),Y)=$P(GMRL,"^",8),GMRDATS=1 I $P($G(^GMR(120.5,Y,5,0)),"^",4)>0 D CHAR^GMVCHAR(Y,.GMRVARY,GMR(X))
"RTN","GMVLAT0",70,0)
 Q
"RTN","GMVLAT0",71,0)
WRTDT ;
"RTN","GMVLAT0",72,0)
 S GMRVDT=$E(GMVD,4,5)_"/"_$E(GMVD,6,7)_"/"_$E(GMVD,2,3)_"@"_$E($P(GMVD,".",2),1,2)_$S($E($P(GMVD,".",2),3,4)'="":":"_$E($P(GMVD,".",2),3,4),1:"")
"RTN","GMVLAT0",73,0)
 Q
"RTN","GMVLAT0",74,0)
CHAR ;
"RTN","GMVLAT0",75,0)
 S GMRZZ=$$WRITECH(GMVD(1),.GMRVARY,5) S:GMRZZ'=""&(X'="PO2") GMRZZ="("_GMRZZ_")"
"RTN","GMVLAT0",76,0)
 I X="PO2",$P(^GMR(120.5,GMVD(1),0),"^",10)'="" S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_"with supplemental O2" D
"RTN","GMVLAT0",77,0)
 . S GPO2=$P(^GMR(120.5,GMVD(1),0),"^",10)
"RTN","GMVLAT0",78,0)
 . S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_" "_$S(GPO2["l/min":$P(GPO2," l/min")_" L/min",1:"")_$S(GPO2["l/min":$P(GPO2," l/min",2),1:GPO2)
"RTN","GMVLAT0",79,0)
 . K GPO2
"RTN","GMVLAT0",80,0)
 S:GMRZZ'="" ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_" "_GMRZZ K GMRZZ Q
"RTN","GMVLAT0",81,0)
 S:$G(GMRZZ)'="" ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_"  "_GMRZZ K GMRZZ
"RTN","GMVLAT0",82,0)
 Q
"RTN","GMVLAT0",83,0)
SETBP ;
"RTN","GMVLAT0",84,0)
 D SETBP^GMVLATS
"RTN","GMVLAT0",85,0)
 Q
"RTN","GMVLAT0",86,0)
WRITECH(GDA,GARRY,GN)   ;
"RTN","GMVLAT0",87,0)
 ; Input data:
"RTN","GMVLAT0",88,0)
 ; GDA - Pointer to the patient vitals/measurements data file #120.5
"RTN","GMVLAT0",89,0)
 ; GARRY - qualifier data array for a measurement
"RTN","GMVLAT0",90,0)
 ;         GARRY(GDA,Print order,qualifier data)
"RTN","GMVLAT0",91,0)
 ; GN - Number of print order to print
"RTN","GMVLAT0",92,0)
 N GMRVDA,GDATA
"RTN","GMVLAT0",93,0)
 S GDATA="",GMRVDA(1)=0
"RTN","GMVLAT0",94,0)
 F  S GMRVDA(1)=$O(GARRY(GDA,GMRVDA(1))) Q:GMRVDA(1)'>0!(GMRVDA(1)>GN)  S GMRVDA(2)="" F  S GMRVDA(2)=$O(GARRY(GDA,GMRVDA(1),GMRVDA(2))) Q:GMRVDA(2)=""  D
"RTN","GMVLAT0",95,0)
 . S GDATA=GDATA_","_GMRVDA(2)
"RTN","GMVLAT0",96,0)
 . Q
"RTN","GMVLAT0",97,0)
 I $E(GDATA,1)="," S GDATA=$E(GDATA,2,$L(GDATA)) ;strip off leading comma
"RTN","GMVLAT0",98,0)
 Q GDATA
"RTN","GMVLAT0",99,0)
 ;
"RTN","GMVLAT0",100,0)
NUMBER(GMVRATE) ; Function determines if the RATE has a numeric reading or one
"RTN","GMVLAT0",101,0)
 ; of the text codes (e.g. REFUSED).
"RTN","GMVLAT0",102,0)
 ; Returns 0 if GMVRATE has a text code
"RTN","GMVLAT0",103,0)
 ;         1 if a numeric reading
"RTN","GMVLAT0",104,0)
 N GMVYES
"RTN","GMVLAT0",105,0)
 S GMVRATE=$G(GMVRATE)
"RTN","GMVLAT0",106,0)
 S GMVYES=1
"RTN","GMVLAT0",107,0)
 I "REFUSEDPASSUNAVAILABLE"[$$UP^XLFSTR(GMVRATE) S GMVYES=0
"RTN","GMVLAT0",108,0)
 Q GMVYES
"RTN","GMVLAT0",109,0)
 ;
"RTN","GMVPAR")
0^16^B4978105^B8679095
"RTN","GMVPAR",1,0)
GMVPAR ; HOIFO/DP - XPARameter RPC ; 31-MAY-2002 10:06:18
"RTN","GMVPAR",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**3**;Oct 31, 2002
"RTN","GMVPAR",3,0)
 ; Integration Agreements:
"RTN","GMVPAR",4,0)
 ; IA# 2263  [Supported] XPAR parameter call.
"RTN","GMVPAR",5,0)
 ; IA# 2541  [Supported] Call to XUPARAM.
"RTN","GMVPAR",6,0)
 ; IA# 10060 [Supported] FILE 200 fields
"RTN","GMVPAR",7,0)
 ; IA# 10090 [Supported] FILE 4 references
"RTN","GMVPAR",8,0)
 ;
"RTN","GMVPAR",9,0)
 ; This routine supports the following IAs:
"RTN","GMVPAR",10,0)
 ; #4367 - GMV PARAMETER RPC is called at RPC (private)
"RTN","GMVPAR",11,0)
 ; 
"RTN","GMVPAR",12,0)
 ;DELLST; [Procedure] Delete list of parameters
"RTN","GMVPAR",13,0)
 ;D NDEL^XPAR(ENT,PAR,.ERR)
"RTN","GMVPAR",14,0)
 ;S:'$G(ERR) @RESULTS@(0)="1^All instances removed"
"RTN","GMVPAR",15,0)
 ;Q
"RTN","GMVPAR",16,0)
 ;
"RTN","GMVPAR",17,0)
DELPAR ; [Procedure] Delete single parameter value
"RTN","GMVPAR",18,0)
 D DEL^XPAR(ENT,PAR,INST,.ERR)
"RTN","GMVPAR",19,0)
 S:'$G(ERR) @RESULTS@(0)="1^Instance deleted"
"RTN","GMVPAR",20,0)
 Q
"RTN","GMVPAR",21,0)
 ;
"RTN","GMVPAR",22,0)
ENTVAL ; [Procedure] Return value of the entity
"RTN","GMVPAR",23,0)
 I ENT="SYS" S ENT=$$KSP^XUPARAM("WHERE")
"RTN","GMVPAR",24,0)
 E  I ENT="DIV" S ENT=$$GET1^DIQ(4,DUZ(2)_",",.01)
"RTN","GMVPAR",25,0)
 E  I ENT="USR" S ENT=$$GET1^DIQ(200,DUZ_",",.01)
"RTN","GMVPAR",26,0)
 E  S ENT=$$GET1^DIQ(+$P(ENT,"(",2),+ENT_",",.01)
"RTN","GMVPAR",27,0)
 S @RESULTS@(0)=ENT
"RTN","GMVPAR",28,0)
 Q
"RTN","GMVPAR",29,0)
 ;
"RTN","GMVPAR",30,0)
 ;GETHDR; [Procedure] Returns common header format
"RTN","GMVPAR",31,0)
 ;S X=$$FIND1^DIC(8989.51,,"QX",PAR)
"RTN","GMVPAR",32,0)
 ;I X S @RESULTS@(0)=X_";8989.51^"_PAR
"RTN","GMVPAR",33,0)
 ;E  S @RESULTS@(0)="-1^No such parameter ["_PAR_"]"
"RTN","GMVPAR",34,0)
 ;Q
"RTN","GMVPAR",35,0)
 ;
"RTN","GMVPAR",36,0)
GETLST ; [Procedure] Return all instances of a parameter
"RTN","GMVPAR",37,0)
 D GETLST^XPAR(.RET,ENT,PAR,"E",.ERR)
"RTN","GMVPAR",38,0)
 Q:$G(ERR,0)
"RTN","GMVPAR",39,0)
 S TMP="RET"
"RTN","GMVPAR",40,0)
 F  S TMP=$Q(@TMP) Q:TMP=""  D
"RTN","GMVPAR",41,0)
 .S @RESULTS@($O(@RESULTS@(""),-1)+1)=@TMP
"RTN","GMVPAR",42,0)
 S @RESULTS@(0)=$O(@RESULTS@(""),-1)
"RTN","GMVPAR",43,0)
 Q
"RTN","GMVPAR",44,0)
 ;
"RTN","GMVPAR",45,0)
GETPAR ; [Procedure] Returns external value of a parameter
"RTN","GMVPAR",46,0)
 S @RESULTS@(0)=$$GET^XPAR(ENT,PAR,INST,"E")
"RTN","GMVPAR",47,0)
 Q
"RTN","GMVPAR",48,0)
 ;
"RTN","GMVPAR",49,0)
 ;GETWP; [Procedure] Returns WP text for a parameter
"RTN","GMVPAR",50,0)
 ;D GETWP^XPAR(.RET,ENT,PAR,INST,.ERR)
"RTN","GMVPAR",51,0)
 ;Q:$G(ERR,0)
"RTN","GMVPAR",52,0)
 ;S TMP="RET"
"RTN","GMVPAR",53,0)
 ;F  S TMP=$Q(@TMP) Q:TMP=""  D
"RTN","GMVPAR",54,0)
 ;.S @RESULTS@($O(@RESULTS@(""),-1)+1)=@TMP
"RTN","GMVPAR",55,0)
 ;S @RESULTS@(0)=$O(@RESULTS@(""),-1)_U_INST
"RTN","GMVPAR",56,0)
 ;Q
"RTN","GMVPAR",57,0)
 ;
"RTN","GMVPAR",58,0)
RPC(RESULTS,OPTION,ENT,PAR,INST,VAL) ; [Procedure] Main RPC Hit Point
"RTN","GMVPAR",59,0)
 ; RPC: [GMV PARAMETER]
"RTN","GMVPAR",60,0)
 ;
"RTN","GMVPAR",61,0)
 ; Requires that the parameter name in PAR
"RTN","GMVPAR",62,0)
 ; be in the GMV namespace.
"RTN","GMVPAR",63,0)
 ;
"RTN","GMVPAR",64,0)
 ; Input parameters
"RTN","GMVPAR",65,0)
 ;  1. RESULTS [Literal/Required] No description
"RTN","GMVPAR",66,0)
 ;  2. OPTION [Literal/Required] No description
"RTN","GMVPAR",67,0)
 ;  3. ENT [Literal/Required] No description
"RTN","GMVPAR",68,0)
 ;  4. PAR [Literal/Required] No description
"RTN","GMVPAR",69,0)
 ;  5. INST [Literal/Required] No description
"RTN","GMVPAR",70,0)
 ;  6. VAL [Literal/Required] No description
"RTN","GMVPAR",71,0)
 ;
"RTN","GMVPAR",72,0)
 N ERR,TMP,RET,TXT,IEN,IENS,ROOT
"RTN","GMVPAR",73,0)
 S INST=$G(INST,1)
"RTN","GMVPAR",74,0)
 S PAR=$G(PAR,"GMV")
"RTN","GMVPAR",75,0)
 S RESULTS=$NA(^TMP($J)) K @RESULTS
"RTN","GMVPAR",76,0)
 I PAR'?1"GMV".E S ^TMP($J,0)="-1^Non Vitals Measurements Parameter" Q
"RTN","GMVPAR",77,0)
 D:$T(@OPTION)]"" @OPTION
"RTN","GMVPAR",78,0)
 I +$G(ERR) K @RESULTS S @RESULTS@(0)="-1^Error: "_(+ERR)_" "_$P(ERR,U,2)
"RTN","GMVPAR",79,0)
 I '$D(^TMP($J)) S @RESULTS@(0)="-1^No date returned"
"RTN","GMVPAR",80,0)
 D CLEAN^DILF
"RTN","GMVPAR",81,0)
 Q
"RTN","GMVPAR",82,0)
 ;
"RTN","GMVPAR",83,0)
 ;SETLST; [Procedure] Build list of parameters
"RTN","GMVPAR",84,0)
 ;N GMVINS ; Instance Counter
"RTN","GMVPAR",85,0)
 ;D DELLST(ENT,PAR)
"RTN","GMVPAR",86,0)
 ;S GMVINS=""
"RTN","GMVPAR",87,0)
 ;F  S GMVINS=$O(VAL(GMVINS)) Q:GMVINS=""  D
"RTN","GMVPAR",88,0)
 ;.D EN^XPAR(ENT,PAR,GMVINS,VAL(GMVINS),.ERR)
"RTN","GMVPAR",89,0)
 ;S:'$G(ERR) @RESULTS@(0)="1^List "_PAR_" rebuilt"
"RTN","GMVPAR",90,0)
 ;Q
"RTN","GMVPAR",91,0)
 ;
"RTN","GMVPAR",92,0)
SETPAR ; [Procedure] Set single value into a parameter
"RTN","GMVPAR",93,0)
 D EN^XPAR(ENT,PAR,INST,VAL,.ERR)
"RTN","GMVPAR",94,0)
 S:'$G(ERR) @RESULTS@(0)="1^Parameter updated"
"RTN","GMVPAR",95,0)
 Q
"RTN","GMVPAR",96,0)
 ;
"RTN","GMVPAR",97,0)
 ;SETWP; [Procedure] Set WP text into a parameter
"RTN","GMVPAR",98,0)
 ;S TXT=INST,TMP=""
"RTN","GMVPAR",99,0)
 ;F  S TMP=$O(VAL(TMP)) Q:TMP=""  D
"RTN","GMVPAR",100,0)
 ;.S TXT($O(TXT(""),-1)+1,0)=VAL(TMP)
"RTN","GMVPAR",101,0)
 ;D EN^XPAR(ENT,PAR,INST,.TXT,.ERR)
"RTN","GMVPAR",102,0)
 ;S:'$G(ERR) @RESULTS@(0)="1^WP Text Saved"
"RTN","GMVPAR",103,0)
 ;Q
"RTN","GMVPAR",104,0)
 ;
"RTN","GMVRPCHL")
0^17^B17869735
"RTN","GMVRPCHL",1,0)
GMVRPCHL ;HIOFO/FT-RPC FOR HOSPITAL LOCATION SELECTION ;12/7/05  10:32
"RTN","GMVRPCHL",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**3**;Oct 31, 2002
"RTN","GMVRPCHL",3,0)
 ;
"RTN","GMVRPCHL",4,0)
 ; This routine uses the following IAs:
"RTN","GMVRPCHL",5,0)
 ;  #1378 - DGPM references        (controlled)
"RTN","GMVRPCHL",6,0)
 ;  #2965 - FILE 405.1 references  (controlled)
"RTN","GMVRPCHL",7,0)
 ; #10039 - FILE 42 references     (supported)
"RTN","GMVRPCHL",8,0)
 ; #10040 - FILE 44 references     (supported)
"RTN","GMVRPCHL",9,0)
 ; #10061 - ^VADPT calls           (supported)
"RTN","GMVRPCHL",10,0)
 ; #10103 - ^XLFDT calls           (supported)
"RTN","GMVRPCHL",11,0)
 ;
"RTN","GMVRPCHL",12,0)
 ; This routine supports the following IAs:
"RTN","GMVRPCHL",13,0)
 ; #4461 - GMV LOCATION SELECT RPC is called at RPC  (private)
"RTN","GMVRPCHL",14,0)
 ;
"RTN","GMVRPCHL",15,0)
RPC(RESULTS,OPTION,DATA) ; [Procedure] Main RPC call tag
"RTN","GMVRPCHL",16,0)
 ; RPC: [GMV LOCATION SELECT]
"RTN","GMVRPCHL",17,0)
 ;
"RTN","GMVRPCHL",18,0)
 ; Input parameters
"RTN","GMVRPCHL",19,0)
 ;  1. RESULTS [Reference/Required] RPC Return array
"RTN","GMVRPCHL",20,0)
 ;  2. OPTION [Literal/Required] RPC Option to execute
"RTN","GMVRPCHL",21,0)
 ;  3. DATA [Literal/Required] Other data as required for call
"RTN","GMVRPCHL",22,0)
 ;
"RTN","GMVRPCHL",23,0)
 S RESULTS=$NA(^TMP("GMVHLOC",$J)) K @RESULTS
"RTN","GMVRPCHL",24,0)
 D:$T(@OPTION)]"" @OPTION
"RTN","GMVRPCHL",25,0)
 S:'$D(@RESULTS) @RESULTS@(0)="-1^No results returned"
"RTN","GMVRPCHL",26,0)
 D CLEAN^DILF,KVAR^VADPT
"RTN","GMVRPCHL",27,0)
 Q
"RTN","GMVRPCHL",28,0)
NAME ; Return list of clinics and wards by name
"RTN","GMVRPCHL",29,0)
 ; DATA=pieceA^pieceB^pieceC
"RTN","GMVRPCHL",30,0)
 ;  where pieceA - file number (required)
"RTN","GMVRPCHL",31,0)
 ;        pieceB - value to begin search with (required)
"RTN","GMVRPCHL",32,0)
 ;        pieceC - field(s) to do the look-up on (optional, defaults to .01 field)
"RTN","GMVRPCHL",33,0)
 ;
"RTN","GMVRPCHL",34,0)
 ; RESULTS(0)=piece1^piece2
"RTN","GMVRPCHL",35,0)
 ; RESULTS(n)=piece3
"RTN","GMVRPCHL",36,0)
 ;  where piece1 - -1 if error OR number of entries found
"RTN","GMVRPCHL",37,0)
 ;        piece2 - error message if piece1=-1
"RTN","GMVRPCHL",38,0)
 ;        piece3 - field values requested.
"RTN","GMVRPCHL",39,0)
 ;             n - sequential number starting with 1
"RTN","GMVRPCHL",40,0)
 ; 
"RTN","GMVRPCHL",41,0)
 N GMVSCRN,GMVFLD,X
"RTN","GMVRPCHL",42,0)
 S DATA=$G(DATA)
"RTN","GMVRPCHL",43,0)
 I +DATA'>0 D  Q
"RTN","GMVRPCHL",44,0)
 .S @RESULTS@(0)="-1^Not a valid file number"
"RTN","GMVRPCHL",45,0)
 .Q
"RTN","GMVRPCHL",46,0)
 S GMVSCRN=$S(+DATA=44:"I $P(^(0),U,3)'=""Z""",1:"")
"RTN","GMVRPCHL",47,0)
 I $P(DATA,"^",3)="" S GMVFLD="@;.01"
"RTN","GMVRPCHL",48,0)
 E  S GMVFLD="@;"_$P(DATA,"^",3)
"RTN","GMVRPCHL",49,0)
 S GMVFLD=$P(GMVFLD,";",1,5) ; Limit lookup to 4 display fields
"RTN","GMVRPCHL",50,0)
 D FIND^DIC(+DATA,"",GMVFLD,"P",$P(DATA,"^",2),"","",GMVSCRN)
"RTN","GMVRPCHL",51,0)
 I $D(^TMP("DIERR",$J)) D  Q
"RTN","GMVRPCHL",52,0)
 .S @RESULTS@(0)="-1^"_$G(^TMP("DIERR",$J,1,"TEXT",1))
"RTN","GMVRPCHL",53,0)
 .Q
"RTN","GMVRPCHL",54,0)
 I ^TMP("DILIST",$J,0)<1 D  Q
"RTN","GMVRPCHL",55,0)
 .S @RESULTS@(0)="-1^No entries found matching '"_$P(DATA,U,2)_"'."
"RTN","GMVRPCHL",56,0)
 .Q
"RTN","GMVRPCHL",57,0)
 ;I ^TMP("DILIST",$J,0)>60 D  Q
"RTN","GMVRPCHL",58,0)
 ;.S @RESULTS@(0)="-1^Too many matches found, please be more specific."
"RTN","GMVRPCHL",59,0)
 ;.Q
"RTN","GMVRPCHL",60,0)
 F X=0:0 S X=$O(^TMP("DILIST",$J,X)) Q:'X  D
"RTN","GMVRPCHL",61,0)
 .S @RESULTS@(X)=+DATA_";"_^TMP("DILIST",$J,X,0)
"RTN","GMVRPCHL",62,0)
 .Q
"RTN","GMVRPCHL",63,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCHL",64,0)
 Q
"RTN","GMVRPCHL",65,0)
APPT ; Get patient appointments using SDA^VADPT
"RTN","GMVRPCHL",66,0)
 ; DATA=GMVDFN^GMVFROM^GMVTO^GMVFLAG
"RTN","GMVRPCHL",67,0)
 ;         GMVDFN - DFN (required)
"RTN","GMVRPCHL",68,0)
 ;        GMVFROM - Start date of search (optional)
"RTN","GMVRPCHL",69,0)
 ;          GMVTO - End date of search (optional)
"RTN","GMVRPCHL",70,0)
 ;        GMVFLAG - kind of appt flag (optional)
"RTN","GMVRPCHL",71,0)
 ; RESULTS(0)=piece1^piece2
"RTN","GMVRPCHL",72,0)
 ; RESULTS(n)=piece3^piece4^piece5^piece6^piece7^piece8^piece9^piece10
"RTN","GMVRPCHL",73,0)
 ;
"RTN","GMVRPCHL",74,0)
 ;  where piece1 - -1 if an error OR the number of records returned
"RTN","GMVRPCHL",75,0)
 ;        piece2 - an error message if piece1 = -1
"RTN","GMVRPCHL",76,0)
 ;        piece3 - appointment date/time (FM internal)
"RTN","GMVRPCHL",77,0)
 ;        piece4 - appointment date/time (external)
"RTN","GMVRPCHL",78,0)
 ;        piece5 - clinic (internal)
"RTN","GMVRPCHL",79,0)
 ;        piece6 - clinic (external)
"RTN","GMVRPCHL",80,0)
 ;        piece7 - status (internal)
"RTN","GMVRPCHL",81,0)
 ;        piece8 - status (external)
"RTN","GMVRPCHL",82,0)
 ;        piece9 - appointment type (external)
"RTN","GMVRPCHL",83,0)
 ;        piece10 - appointment type (external)
"RTN","GMVRPCHL",84,0)
 ;              n - a sequential number starting with 1 
"RTN","GMVRPCHL",85,0)
 ;        
"RTN","GMVRPCHL",86,0)
 N GMVARRAY,GMVCNT,GMVE,GMVI,GMVLOOP,GMVDFN,GMVFROM,GMVTO,GMVFLAG
"RTN","GMVRPCHL",87,0)
 N DFN,VAERR,VASD
"RTN","GMVRPCHL",88,0)
 S DATA=$G(DATA)
"RTN","GMVRPCHL",89,0)
 S GMVDFN=$P(DATA,U,1),GMVFROM=$P(DATA,U,2),GMVTO=$P(DATA,U,3),GMVFLAG=$P(DATA,U,4)
"RTN","GMVRPCHL",90,0)
 S GMVDFN=+$G(GMVDFN)
"RTN","GMVRPCHL",91,0)
 I '$G(GMVDFN) S @RESULTS@(0)="-1^Patient ID is missing" Q
"RTN","GMVRPCHL",92,0)
 I $G(GMVFROM)="" S GMVFROM=$$FMADD^XLFDT(DT,-365)
"RTN","GMVRPCHL",93,0)
 I $G(GMVTO)="" S GMVTO=DT_".235959"
"RTN","GMVRPCHL",94,0)
 S:GMVFLAG="" VASD("W")="123456789"
"RTN","GMVRPCHL",95,0)
 S DFN=GMVDFN,VASD("T")=GMVTO,VASD("F")=GMVFROM
"RTN","GMVRPCHL",96,0)
 D SDA^VADPT
"RTN","GMVRPCHL",97,0)
 I $G(VAERR)=1 S @RESULTS@(0)="-1^DFN or ^DPT(DFN,0) is not defined" Q
"RTN","GMVRPCHL",98,0)
 S @RESULTS@(0)=0
"RTN","GMVRPCHL",99,0)
 I '$D(^UTILITY("VASD",$J)) Q
"RTN","GMVRPCHL",100,0)
 S (GMVCNT,GMVLOOP)=0
"RTN","GMVRPCHL",101,0)
 F  S GMVLOOP=$O(^UTILITY("VASD",$J,GMVLOOP)) Q:'GMVLOOP  D
"RTN","GMVRPCHL",102,0)
 .S GMVE=$G(^UTILITY("VASD",$J,GMVLOOP,"E"))
"RTN","GMVRPCHL",103,0)
 .S GMVI=$G(^UTILITY("VASD",$J,GMVLOOP,"I"))
"RTN","GMVRPCHL",104,0)
 .Q:'$P(GMVI,U,1)
"RTN","GMVRPCHL",105,0)
 .S GMVCNT=GMVCNT+1
"RTN","GMVRPCHL",106,0)
 .S GMVARRAY(9999999.999999-$P(GMVI,U,1))=$P(GMVI,U,1)_U_$P(GMVE,U,1)_U_$P(GMVI,U,2)_U_$P(GMVE,U,2)_U_$P(GMVI,U,3)_U_$P(GMVE,U,3)_U_$P(GMVI,U,4)_U_$P(GMVE,U,4)
"RTN","GMVRPCHL",107,0)
 .Q
"RTN","GMVRPCHL",108,0)
 S $P(@RESULTS@(0),U,1)=GMVCNT
"RTN","GMVRPCHL",109,0)
 K ^UTILITY("VASD",$J)
"RTN","GMVRPCHL",110,0)
 S (GMVCNT,GMVLOOP)=0
"RTN","GMVRPCHL",111,0)
 F  S GMVLOOP=$O(GMVARRAY(GMVLOOP)) Q:'GMVLOOP  D
"RTN","GMVRPCHL",112,0)
 .S GMVCNT=GMVCNT+1
"RTN","GMVRPCHL",113,0)
 .S @RESULTS@(GMVCNT)=$G(GMVARRAY(GMVLOOP))
"RTN","GMVRPCHL",114,0)
 .Q
"RTN","GMVRPCHL",115,0)
 Q
"RTN","GMVRPCHL",116,0)
ADMIT ; return a list of admissions
"RTN","GMVRPCHL",117,0)
 ; DATA=DFN
"RTN","GMVRPCHL",118,0)
 ; RESULTS(0)=piece1
"RTN","GMVRPCHL",119,0)
 ; RESULTS(n)=piece2^piece3^piece4^piece5^piece6
"RTN","GMVRPCHL",120,0)
 ;   where piece1 - number of records returned
"RTN","GMVRPCHL",121,0)
 ;         piece2 - movement date/time (external)
"RTN","GMVRPCHL",122,0)
 ;         piece3 - location ien (FILE 44)
"RTN","GMVRPCHL",123,0)
 ;         piece4 - location name (FILE 44, Field .01)
"RTN","GMVRPCHL",124,0)
 ;         piece5 - type of move
"RTN","GMVRPCHL",125,0)
 ;         PIECE6 - movement ien
"RTN","GMVRPCHL",126,0)
 ;              n - a sequential number starting with 1
"RTN","GMVRPCHL",127,0)
 ;
"RTN","GMVRPCHL",128,0)
 N DFN,TIM,MOV,X0,MTIM,XTYP,XLOC,HLOC,ILST
"RTN","GMVRPCHL",129,0)
 S DFN=DATA,ILST=0,TIM=""
"RTN","GMVRPCHL",130,0)
 I '$G(DFN) Q
"RTN","GMVRPCHL",131,0)
 F  S TIM=$O(^DGPM("ATID1",DFN,TIM)) Q:TIM'>0  D
"RTN","GMVRPCHL",132,0)
 .S MOV=0
"RTN","GMVRPCHL",133,0)
 .F  S MOV=$O(^DGPM("ATID1",DFN,TIM,MOV)) Q:MOV'>0  D
"RTN","GMVRPCHL",134,0)
 ..S X0=$G(^DGPM(MOV,0)) I X0']"" Q
"RTN","GMVRPCHL",135,0)
 ..S MTIM=$P(X0,U),MTIM=$$FMTE^XLFDT(MTIM,"1P")
"RTN","GMVRPCHL",136,0)
 ..S XTYP=$P($G(^DG(405.1,+$P(X0,U,4),0)),U,1)
"RTN","GMVRPCHL",137,0)
 ..S XLOC=$P($G(^DIC(42,+$P(X0,U,6),0)),U,1),HLOC=+$G(^(44))
"RTN","GMVRPCHL",138,0)
 ..S ILST=ILST+1,@RESULTS@(ILST)=MTIM_U_HLOC_U_XLOC_U_XTYP_U_MOV
"RTN","GMVRPCHL",139,0)
 ..Q
"RTN","GMVRPCHL",140,0)
 .Q
"RTN","GMVRPCHL",141,0)
 S @RESULTS@(0)=ILST
"RTN","GMVRPCHL",142,0)
 Q
"RTN","GMVRPCM")
0^19^B72972413^B72972413
"RTN","GMVRPCM",1,0)
GMVRPCM ; HOIFO/DP - RPC for Vitals Manager ;07/25/05 9:10am
"RTN","GMVRPCM",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**1,8,13,3**;Oct 31, 2002
"RTN","GMVRPCM",3,0)
 ; Integration Agreements:
"RTN","GMVRPCM",4,0)
 ; #10040 [Supported] File 44 references
"RTN","GMVRPCM",5,0)
 ; #10076 [Supported] XUSEC Calls
"RTN","GMVRPCM",6,0)
 ; #2263 [Supported] XPAR Calls
"RTN","GMVRPCM",7,0)
 ; #2541 [Supported] XUPARAM Calls
"RTN","GMVRPCM",8,0)
 ; #2692 [Controlled] ORQPTQ1
"RTN","GMVRPCM",9,0)
 ; #3227 [Private] NURAPI Calls
"RTN","GMVRPCM",10,0)
 ; #4084 [Private] File 44 AC x-ref
"RTN","GMVRPCM",11,0)
 ; #4360 [Private] GMV MANAGER RPC
"RTN","GMVRPCM",12,0)
ADDQUAL ; [P] Add qualifier to vital/category
"RTN","GMVRPCM",13,0)
 S GMVVIT=+$P(DATA,";",1),GMVCAT=+$P(DATA,";",2),GMVQUAL=+$P(DATA,";",3)
"RTN","GMVRPCM",14,0)
 I $O(^GMRD(120.52,GMVQUAL,1,"B",GMVVIT,0)) D  Q
"RTN","GMVRPCM",15,0)
 .S @RESULTS@(0)="1^Qualifier already assigned."
"RTN","GMVRPCM",16,0)
 S GMVFDA(120.521,"+1,"_GMVQUAL_",",.01)=GMVVIT
"RTN","GMVRPCM",17,0)
 S GMVFDA(120.521,"+1,"_GMVQUAL_",",.02)=GMVCAT
"RTN","GMVRPCM",18,0)
 D UPDATE^DIE("","GMVFDA","GMVIEN","GMVERR")
"RTN","GMVRPCM",19,0)
 I $G(GMVIEN(1)) S @RESULTS@(0)=+GMVIEN(1)_"^Qualifier Assigned"
"RTN","GMVRPCM",20,0)
 E  S @RESULTS@(0)="-1^Unable to assign qualifier"
"RTN","GMVRPCM",21,0)
 Q
"RTN","GMVRPCM",22,0)
DELQUAL ; [P] Delete qualifier from vital/category
"RTN","GMVRPCM",23,0)
 S GMVVIT=+$P(DATA,";",1),GMVCAT=+$P(DATA,";",2),GMVQUAL=+$P(DATA,";",3)
"RTN","GMVRPCM",24,0)
 S X=$O(^GMRD(120.52,GMVQUAL,1,"B",GMVVIT,0))
"RTN","GMVRPCM",25,0)
 S GMVFDA(120.521,X_","_GMVQUAL_",",.01)="@"
"RTN","GMVRPCM",26,0)
 D FILE^DIE("","GMVFDA","GMVERR")
"RTN","GMVRPCM",27,0)
 I $D(GMVERR) S @RESULTS@(0)="-1^Unable to remove qualifier."
"RTN","GMVRPCM",28,0)
 E  S @RESULTS@(0)="1^Qualifier removed."
"RTN","GMVRPCM",29,0)
 Q
"RTN","GMVRPCM",30,0)
DELTEMP ; [P] Delete Template
"RTN","GMVRPCM",31,0)
 S GMVENT=$P(DATA,U,1),GMVNAME=$P(DATA,U,2)
"RTN","GMVRPCM",32,0)
 I $$GET^XPAR(GMVENT,"GMV TEMPLATE DEFAULT")=GMVNAME D
"RTN","GMVRPCM",33,0)
 .D DEL^XPAR(GMVENT,"GMV TEMPLATE DEFAULT",1)
"RTN","GMVRPCM",34,0)
 D DEL^XPAR(GMVENT,"GMV TEMPLATE",GMVNAME,.GMVERR)
"RTN","GMVRPCM",35,0)
 I '$G(GMVERR) S @RESULTS@(0)="1^Template Removed."
"RTN","GMVRPCM",36,0)
 E  S @RESULTS@(0)="-1^"_GMVERR
"RTN","GMVRPCM",37,0)
 Q
"RTN","GMVRPCM",38,0)
GETCATS ; [P] Return Listing of categories
"RTN","GMVRPCM",39,0)
 N GMVQI
"RTN","GMVRPCM",40,0)
 F GMVCAT=0:0 S GMVCAT=$O(^GMRD(120.52,"AA",DATA,GMVCAT)) Q:'GMVCAT  D
"RTN","GMVRPCM",41,0)
 .Q:$$ACTIVE^GMVUID(120.53,"",GMVCAT_",","")
"RTN","GMVRPCM",42,0)
 .S GMVQUAL="",X="" F  S X=$O(^GMRD(120.52,"AA",DATA,GMVCAT,X)) Q:X=""  D
"RTN","GMVRPCM",43,0)
 ..S GMVQI=$O(^GMRD(120.52,"AA",DATA,GMVCAT,X,0))
"RTN","GMVRPCM",44,0)
 ..Q:$$ACTIVE^GMVUID(120.52,"",GMVQI_",","")
"RTN","GMVRPCM",45,0)
 ..S GMVQUAL=GMVQUAL_$S(GMVQUAL]"":", ",1:"")_X
"RTN","GMVRPCM",46,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","GMVRPCM",47,0)
 .S @RESULTS@(Y)=GMVCAT_U_$P(^GMRD(120.53,GMVCAT,0),U)_U_GMVQUAL
"RTN","GMVRPCM",48,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)_U_$P(^GMRD(120.51,DATA,0),U)
"RTN","GMVRPCM",49,0)
 Q
"RTN","GMVRPCM",50,0)
GETDATA ; [P] Generic fileman data call
"RTN","GMVRPCM",51,0)
 ; Variable DATA = File#^IENS^Field#
"RTN","GMVRPCM",52,0)
 S @RESULTS@(0)=$$GET1^DIQ($P(DATA,U,1),$P(DATA,U,2),$P(DATA,U,3))
"RTN","GMVRPCM",53,0)
 Q
"RTN","GMVRPCM",54,0)
GETDEF ; [P] Get Default Template
"RTN","GMVRPCM",55,0)
 I $G(DATA)]"" D  Q
"RTN","GMVRPCM",56,0)
 .S X=$$GET^XPAR($P(DATA,U),"GMV TEMPLATE DEFAULT")
"RTN","GMVRPCM",57,0)
 .I X="" S @RESULTS@(0)="-1^No Default Template"
"RTN","GMVRPCM",58,0)
 .E  S @RESULTS@(0)=X
"RTN","GMVRPCM",59,0)
 D ENVAL^XPAR(.GMV,"GMV TEMPLATE DEFAULT")
"RTN","GMVRPCM",60,0)
 S X="" F  S X=$O(GMV(X)) Q:X=""  D
"RTN","GMVRPCM",61,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","GMVRPCM",62,0)
 .S @RESULTS@(Y)=X_U_GMV(X,1)
"RTN","GMVRPCM",63,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCM",64,0)
 Q
"RTN","GMVRPCM",65,0)
GETHILO ; [P] Returns an abnormal value
"RTN","GMVRPCM",66,0)
 S @RESULTS@(0)=+$$GET1^DIQ(120.57,"1,",DATA)
"RTN","GMVRPCM",67,0)
 Q
"RTN","GMVRPCM",68,0)
GETLIST ; [P] Return listing of file
"RTN","GMVRPCM",69,0)
 K GMVRET,^TMP("DILIST",$J)
"RTN","GMVRPCM",70,0)
 S GMVSCRN=""
"RTN","GMVRPCM",71,0)
 I +DATA=44 S DATA2=$P(DATA,U,2),DATA=+DATA
"RTN","GMVRPCM",72,0)
 I DATA=120.51 D  ; Set screen for vitals list
"RTN","GMVRPCM",73,0)
 .S GMVSCRN="I $$VITALIEN^GMVUTL8()[("",""_+Y_"","")"
"RTN","GMVRPCM",74,0)
 I DATA=42 D  ; Screen for ward location
"RTN","GMVRPCM",75,0)
 .S GMVSCRN="I '$$INACT42^GMVUT2(+Y)"
"RTN","GMVRPCM",76,0)
 I DATA=44 D  Q  ; Clinics
"RTN","GMVRPCM",77,0)
 .N CNT S X=DATA2,CNT=0
"RTN","GMVRPCM",78,0)
 .F  S X=$O(^SC("AC","C",X)) Q:'X!(CNT>100)  D
"RTN","GMVRPCM",79,0)
 ..Q:+$G(^SC(X,"OOS"))
"RTN","GMVRPCM",80,0)
 ..S Y=$G(^SC(X,"I"))
"RTN","GMVRPCM",81,0)
 ..I Y Q:DT>+Y&($P(Y,U,2)=""!(DT<$P(Y,U,2)))
"RTN","GMVRPCM",82,0)
 ..S @RESULTS@($O(@RESULTS@(""),-1)+1)=DATA_";"_X_U_$P(^SC(X,0),U),CNT=CNT+1
"RTN","GMVRPCM",83,0)
 .S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCM",84,0)
 I DATA=100.21 D  Q  ; CPRS Teams
"RTN","GMVRPCM",85,0)
 .D TEAMS^ORQPTQ1(.GMVRET)
"RTN","GMVRPCM",86,0)
 .F X=0:0 S X=$O(GMVRET(X)) Q:'X  S @RESULTS@(X)=DATA_";"_GMVRET(X)
"RTN","GMVRPCM",87,0)
 .S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCM",88,0)
 I DATA=211.4 D  Q  ; NURS Locations
"RTN","GMVRPCM",89,0)
 .D ACTLOCS^NURAPI(.GMVRET)
"RTN","GMVRPCM",90,0)
 .F X=0:0 S X=$O(GMVRET(X)) Q:'X  S @RESULTS@(X)=DATA_";"_GMVRET(X)
"RTN","GMVRPCM",91,0)
 .S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCM",92,0)
 I DATA=120.52 S GMVSCRN="I '$$ACTIVE^GMVUID(120.52,.01,+Y_"","","""")"
"RTN","GMVRPCM",93,0)
 D LIST^DIC(DATA,"","@;.01","P","","","","",GMVSCRN)
"RTN","GMVRPCM",94,0)
 F X=0:0 S X=$O(^TMP("DILIST",$J,X)) Q:'X  D
"RTN","GMVRPCM",95,0)
 .S @RESULTS@(X)=DATA_";"_^TMP("DILIST",$J,X,0)
"RTN","GMVRPCM",96,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)_U_$$GET1^DID(DATA,"","","NAME")
"RTN","GMVRPCM",97,0)
 K ^TMP("DILIST",$J)
"RTN","GMVRPCM",98,0)
 Q
"RTN","GMVRPCM",99,0)
GETQUAL ; [P] Return qualifiers list
"RTN","GMVRPCM",100,0)
 ; DATA=VitalIEN;CatIEN
"RTN","GMVRPCM",101,0)
 ; Uses X-ref of ^GMRD(120.52,"AA",VitalIEN,CategoryIEN,QName,QIEN)
"RTN","GMVRPCM",102,0)
 S GMVIT=+$P(DATA,";",1),GMVCAT=+$P(DATA,";",2)
"RTN","GMVRPCM",103,0)
 I '$D(^GMRD(120.53,GMVCAT,0)) S @RESULTS@(0)="-1^No such category" Q
"RTN","GMVRPCM",104,0)
 I $$ACTIVE^GMVUID(120.53,"",GMVCAT_",","") S @RESULTS@(0)="-1^Inactive category" Q
"RTN","GMVRPCM",105,0)
 I '$D(^GMRD(120.51,GMVIT,0)) S @RESULTS@(0)="-1^No such vital" Q
"RTN","GMVRPCM",106,0)
 I $$ACTIVE^GMVUID(120.51,"",GMVIT_",","") S @RESULTS@(0)="-1^Inactive vital type" Q
"RTN","GMVRPCM",107,0)
 S GMVNAM=""
"RTN","GMVRPCM",108,0)
 F  S GMVNAM=$O(^GMRD(120.52,"AA",GMVIT,GMVCAT,GMVNAM)) Q:GMVNAM=""  D
"RTN","GMVRPCM",109,0)
 .S GMVIEN=$O(^GMRD(120.52,"AA",GMVIT,GMVCAT,GMVNAM,0))  ; Assume only one of this name
"RTN","GMVRPCM",110,0)
 .Q:$$ACTIVE^GMVUID(120.52,"",GMVIEN_",","")
"RTN","GMVRPCM",111,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","GMVRPCM",112,0)
 .S @RESULTS@(Y)=GMVIEN_U_GMVNAM
"RTN","GMVRPCM",113,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)_U_$P(^GMRD(120.53,GMVCAT,0),U)
"RTN","GMVRPCM",114,0)
 Q
"RTN","GMVRPCM",115,0)
GETTEMP ; [P] Get Template List
"RTN","GMVRPCM",116,0)
 I $G(DATA)]"" D
"RTN","GMVRPCM",117,0)
 .S GMVENT=$$ENTITY($P(DATA,U,1)),GMVNAME=$P(DATA,U,2)
"RTN","GMVRPCM",118,0)
 .I GMVNAME="" D
"RTN","GMVRPCM",119,0)
 ..D GETLST^XPAR(.GMVTMP,GMVENT,"GMV TEMPLATE")
"RTN","GMVRPCM",120,0)
 ..F X=0:0 S X=$O(GMVTMP(X)) Q:'X  D
"RTN","GMVRPCM",121,0)
 ...S GMV(GMVENT,$P(GMVTMP(X),U,1))=$P(GMVTMP(X),U,2,10)
"RTN","GMVRPCM",122,0)
 .I GMVNAME]"" S GMV(GMVENT,GMVNAME)=$$GET^XPAR(GMVENT,"GMV TEMPLATE",GMVNAME)
"RTN","GMVRPCM",123,0)
 I $G(DATA)="" D ENVAL^XPAR(.GMV,"GMV TEMPLATE")
"RTN","GMVRPCM",124,0)
 S GMVENT="",GMVNAME=""
"RTN","GMVRPCM",125,0)
 F  S GMVENT=$O(GMV(GMVENT)) Q:GMVENT=""  D
"RTN","GMVRPCM",126,0)
 .S GMVROOT=$P(GMVENT,";",2),GMVTYPE=$$TYPE(GMVROOT),GMVIEN=+GMVENT
"RTN","GMVRPCM",127,0)
 .Q:GMVTYPE=0  ;unknown template type
"RTN","GMVRPCM",128,0)
 .Q:GMVROOT="VA(200,"&('$$GET^XPAR("SYS","GMV ALLOW USER TEMPLATES"))
"RTN","GMVRPCM",129,0)
 .I GMVROOT="VA(200,"&(GMVIEN'=DUZ) Q:'$D(^XUSEC("GMV MANAGER",DUZ))
"RTN","GMVRPCM",130,0)
 .F  S GMVNAME=$O(GMV(GMVENT,GMVNAME)) Q:GMVNAME=""  D
"RTN","GMVRPCM",131,0)
 ..S GMVOWNER=$P($G(@(U_GMVROOT_(+GMVIEN)_",0)"),"Unk"),U)
"RTN","GMVRPCM",132,0)
 ..S Y=$O(@RESULTS@(""),-1)+1
"RTN","GMVRPCM",133,0)
 ..S @RESULTS@(Y)=GMVTYPE_U_GMVENT_U_GMVOWNER_U_GMVNAME_U_GMV(GMVENT,GMVNAME)
"RTN","GMVRPCM",134,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCM",135,0)
 Q
"RTN","GMVRPCM",136,0)
LOOKUP ; [P] Does a lookup on a file
"RTN","GMVRPCM",137,0)
 N GMVSCRN
"RTN","GMVRPCM",138,0)
 S GMVSCRN=$S(+DATA=44:"I "_"""^C^W^"""_"[$P(^(0),U,3)",1:"")
"RTN","GMVRPCM",139,0)
 I $P(DATA,"^",3)="" S GMVFLD="@;.01"
"RTN","GMVRPCM",140,0)
 E  S GMVFLD="@;"_$P(DATA,"^",3)
"RTN","GMVRPCM",141,0)
 S GMVFLD=$P(GMVFLD,";",1,5) ; Limit lookup to 4 display fields
"RTN","GMVRPCM",142,0)
 D FIND^DIC(+DATA,"",GMVFLD,"P",$P(DATA,"^",2),61,,GMVSCRN)
"RTN","GMVRPCM",143,0)
 I ^TMP("DILIST",$J,0)<1 D  Q
"RTN","GMVRPCM",144,0)
 .S @RESULTS@(0)="-1^No entries found matching '"_$P(DATA,U,2)_"'."
"RTN","GMVRPCM",145,0)
 I ^TMP("DILIST",$J,0)>60 D  Q
"RTN","GMVRPCM",146,0)
 .S @RESULTS@(0)="-1^Too many matches found, please be more specific."
"RTN","GMVRPCM",147,0)
 F X=0:0 S X=$O(^TMP("DILIST",$J,X)) Q:'X  D
"RTN","GMVRPCM",148,0)
 .S @RESULTS@(X)=+DATA_";"_^TMP("DILIST",$J,X,0)
"RTN","GMVRPCM",149,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCM",150,0)
 Q
"RTN","GMVRPCM",151,0)
NEWQUAL ; [P] Create New Qualifier
"RTN","GMVRPCM",152,0)
 S @RESULTS@(0)="-1^Use the New Term Rapid Turnaround (NTRT) process to add qualifiers"
"RTN","GMVRPCM",153,0)
 Q
"RTN","GMVRPCM",154,0)
NEWTEMP ; [P] New Template
"RTN","GMVRPCM",155,0)
 S GMVENT=$P(DATA,"^",1),GMVNAME=$P(DATA,"^",2),GMVDESC=$P(DATA,"^",3)
"RTN","GMVRPCM",156,0)
 S GMVENT=$$ENTITY(GMVENT)
"RTN","GMVRPCM",157,0)
 S GMVTYPE=$$TYPE($P(GMVENT,";",2))
"RTN","GMVRPCM",158,0)
 S GMVOWN=$P($G(@(U_$P(GMVENT,";",2)_+GMVENT_",0)"),"Unk"),U)
"RTN","GMVRPCM",159,0)
 S:GMVDESC="" GMVDESC="No Description"
"RTN","GMVRPCM",160,0)
 D ADD^XPAR(GMVENT,"GMV TEMPLATE",GMVNAME,GMVDESC,.GMVERR)
"RTN","GMVRPCM",161,0)
 I 'GMVERR S @RESULTS@(0)=GMVTYPE_U_GMVENT_U_GMVOWN_U_GMVNAME
"RTN","GMVRPCM",162,0)
 E  S @RESULTS@(0)="-1^"_GMVERR
"RTN","GMVRPCM",163,0)
 Q
"RTN","GMVRPCM",164,0)
RENTEMP ; [P] Rename a Template
"RTN","GMVRPCM",165,0)
 S GMVENT=$P(DATA,U,1),GMVOLD=$P(DATA,U,2),GMVNEW=$P(DATA,U,3)
"RTN","GMVRPCM",166,0)
 D REP^XPAR(GMVENT,"GMV TEMPLATE",GMVOLD,GMVNEW,.GMVERR)
"RTN","GMVRPCM",167,0)
 I 'GMVERR S @RESULTS@(0)="1^Renamed"
"RTN","GMVRPCM",168,0)
 E  S @RESULTS@(0)="-1^"_GMVERR Q
"RTN","GMVRPCM",169,0)
 ; Reset default template if this was a default template
"RTN","GMVRPCM",170,0)
 D:$$GET^XPAR(GMVENT,"GMV TEMPLATE DEFAULT")=GMVOLD
"RTN","GMVRPCM",171,0)
 .D EN^XPAR(GMVENT,"GMV TEMPLATE DEFAULT",1,GMVNEW)
"RTN","GMVRPCM",172,0)
 Q
"RTN","GMVRPCM",173,0)
RPC(RESULTS,OPTION,DATA) ; [Procedure] Main RPC call tag
"RTN","GMVRPCM",174,0)
 ; RPC: [GMV MANAGER]
"RTN","GMVRPCM",175,0)
 ;
"RTN","GMVRPCM",176,0)
 ; Input parameters
"RTN","GMVRPCM",177,0)
 ;  1. RESULTS [Reference/Required] RPC Return array
"RTN","GMVRPCM",178,0)
 ;  2. OPTION [Literal/Required] RPC Option to execute
"RTN","GMVRPCM",179,0)
 ;  3. DATA [Literal/Required] Other data as required for call
"RTN","GMVRPCM",180,0)
 ;
"RTN","GMVRPCM",181,0)
 N GMV,GMVCAT,GMVDESC,GMVENT,GMVERR,GMVFDA,GMVFLD,GMVIEN,GMVIT,GMVNAM,GMVNAME,GMVNEW,GMVOLD,GMVOWN,GMVOWNER,GMVQUAL,GMVROOT,GMVTYPE,GMVVAL,GMVVIT,GMVSCRN
"RTN","GMVRPCM",182,0)
 S RESULTS=$NA(^TMP("GMVMGR",$J)) K @RESULTS
"RTN","GMVRPCM",183,0)
 D:$T(@OPTION)]"" @OPTION
"RTN","GMVRPCM",184,0)
 S:'$D(@RESULTS) @RESULTS@(0)="-1^No results returned"
"RTN","GMVRPCM",185,0)
 D CLEAN^DILF
"RTN","GMVRPCM",186,0)
 Q
"RTN","GMVRPCM",187,0)
SETDATA ; [P] Save New Qualifier Name/Abbv
"RTN","GMVRPCM",188,0)
 S @RESULTS@(0)="-1^Use the New Term Rapid Turnaround (NTRT) process to add qualifiers"
"RTN","GMVRPCM",189,0)
 Q
"RTN","GMVRPCM",190,0)
SETDEF ; [P] Set Default Template
"RTN","GMVRPCM",191,0)
 D EN^XPAR($P(DATA,U),"GMV TEMPLATE DEFAULT",1,$P(DATA,U,2),.GMVERR)
"RTN","GMVRPCM",192,0)
 I '$G(GMVERR) S @RESULTS@(0)="1^Set As Default."
"RTN","GMVRPCM",193,0)
 E  S @RESULTS@(0)="-1^"_GMVERR
"RTN","GMVRPCM",194,0)
 Q
"RTN","GMVRPCM",195,0)
SETHILO ; [P] Set abnormal value
"RTN","GMVRPCM",196,0)
 L +(^GMRD(120.57,0)):5
"RTN","GMVRPCM",197,0)
 E  S @RESULTS@(0)="-1^Site File In Use." Q
"RTN","GMVRPCM",198,0)
 S GMVFLD=$P(DATA,"^",1),GMVVAL=$P(DATA,"^",2)
"RTN","GMVRPCM",199,0)
 S GMVFDA(120.57,"1,",GMVFLD)=GMVVAL
"RTN","GMVRPCM",200,0)
 D FILE^DIE("","GMVFDA","GMVERR")
"RTN","GMVRPCM",201,0)
 L -(^GMRD(120.57,0))
"RTN","GMVRPCM",202,0)
 S @RESULTS@(0)="1^Update Complete."
"RTN","GMVRPCM",203,0)
 Q
"RTN","GMVRPCM",204,0)
SETTEMP ; [P] Set Template data
"RTN","GMVRPCM",205,0)
 D EN^XPAR($P(DATA,U),"GMV TEMPLATE",$P(DATA,U,2),$P(DATA,U,3),.GMVERR)
"RTN","GMVRPCM",206,0)
 I '$G(GMVERR) S @RESULTS@(0)="1^Template Saved."
"RTN","GMVRPCM",207,0)
 E  S @RESULTS@(0)="-1^"_GMVERR
"RTN","GMVRPCM",208,0)
 Q
"RTN","GMVRPCM",209,0)
VALID ; [P] Verify data validity against fileman
"RTN","GMVRPCM",210,0)
 D VAL^DIE($P(DATA,U,1),$P(DATA,U,2),$P(DATA,U,3),"H",$P(DATA,U,4),.GMVRET)
"RTN","GMVRPCM",211,0)
 I GMVRET'="^" S @RESULTS@(0)="1^Valid Data"
"RTN","GMVRPCM",212,0)
 E  S @RESULTS@(0)="-1^"_^TMP("DIERR",$J,1,"TEXT",1)
"RTN","GMVRPCM",213,0)
 Q
"RTN","GMVRPCM",214,0)
ENTITY(X) ; [Function] Convert USR, SYS, and DIV entities
"RTN","GMVRPCM",215,0)
 ; Input parameters
"RTN","GMVRPCM",216,0)
 ;  1. X [Literal/Required] XPAR generic entity to transform to variable pointer format
"RTN","GMVRPCM",217,0)
 ;
"RTN","GMVRPCM",218,0)
 Q:X="USR" DUZ_";VA(200,"
"RTN","GMVRPCM",219,0)
 Q:X="SYS" $$FIND1^DIC(4.2,"","QX",$$KSP^XUPARAM("WHERE"))_";DIC(4.2,"
"RTN","GMVRPCM",220,0)
 Q:X="DIV" DUZ(2)_";DIC(4,"
"RTN","GMVRPCM",221,0)
 Q X
"RTN","GMVRPCM",222,0)
 ;
"RTN","GMVRPCM",223,0)
TYPE(X) ; [F] Returns the type of template
"RTN","GMVRPCM",224,0)
 ; Input parameters
"RTN","GMVRPCM",225,0)
 ;  1. X [Literal/Required] Variable pointer to evaluate
"RTN","GMVRPCM",226,0)
 ;
"RTN","GMVRPCM",227,0)
 Q:X="DIC(4.2," 1 ;Domain
"RTN","GMVRPCM",228,0)
 Q:X="DIC(4," 2 ;  Institution
"RTN","GMVRPCM",229,0)
 Q:X="SC(" 3 ;     Hospital Location
"RTN","GMVRPCM",230,0)
 Q:X="VA(200," 4 ; New Person
"RTN","GMVRPCM",231,0)
 Q 0 ;             Unknown
"RTN","GMVRPCM",232,0)
 ;
"RTN","GMVRPCM",233,0)
VT ;VitalTypeIENS
"RTN","GMVRPCM",234,0)
 N X,Y,Z
"RTN","GMVRPCM",235,0)
 S Y=0,@RESULTS@(0)="-1"
"RTN","GMVRPCM",236,0)
 F X="T","P","R","BP","HT","WT","PN","PO2","CVP","CG" D
"RTN","GMVRPCM",237,0)
 .S Z=$O(^GMRD(120.51,"C",X,0))
"RTN","GMVRPCM",238,0)
 .Q:'Z
"RTN","GMVRPCM",239,0)
 .S Y=Y+1,@RESULTS@(Y)=Z
"RTN","GMVRPCM",240,0)
 Q
"RTN","GMVRPCP")
0^5^B28561668^B24862995
"RTN","GMVRPCP",1,0)
GMVRPCP ;HOIFO/DP-RPC for GMV_PtSelect.pas ; 7/8/05 8:05am
"RTN","GMVRPCP",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**1,3**;Oct 31, 2002
"RTN","GMVRPCP",3,0)
 ; Integration Agreements:
"RTN","GMVRPCP",4,0)
 ; IA# 510 [Controlled] Calls to set ^DISV
"RTN","GMVRPCP",5,0)
 ; IA# 3027 [Supported] Calls to DGSEC4
"RTN","GMVRPCP",6,0)
 ; IA# 3266 [Controlled] Calls to DOB^DPTLK1
"RTN","GMVRPCP",7,0)
 ; IA# 3267 [Controlled] Calls to SSN^DPTLK1
"RTN","GMVRPCP",8,0)
 ; IA# 3593 [Supported] Calls to DPTLK6
"RTN","GMVRPCP",9,0)
 ; IA# 4440 [Supported] XUPROD calls
"RTN","GMVRPCP",10,0)
 ; IA# 10035 [Supported] Calls for FILE 2 references.
"RTN","GMVRPCP",11,0)
 ; IA# 10039 [Supported] Reads of ^DIC(42,#,44)
"RTN","GMVRPCP",12,0)
 ; IA# 10040 [Supported] Reads of ^SC(
"RTN","GMVRPCP",13,0)
 ; IA# 10061 [Supported] Calls to VADPT
"RTN","GMVRPCP",14,0)
 ; IA# 10112 [Supported] VASITE calls
"RTN","GMVRPCP",15,0)
 ;
"RTN","GMVRPCP",16,0)
ADD(X) ; [Procedure] Add line to @RESULTS@(...
"RTN","GMVRPCP",17,0)
 ; Input parameters
"RTN","GMVRPCP",18,0)
 ;  1. X [Literal/Required] Data to add to @RESULTS@(...
"RTN","GMVRPCP",19,0)
 S @RESULTS@(+$O(@RESULTS@(""),-1)+1)=X
"RTN","GMVRPCP",20,0)
 Q
"RTN","GMVRPCP",21,0)
 ;
"RTN","GMVRPCP",22,0)
LOGSEC ; [Procedure] Log Security
"RTN","GMVRPCP",23,0)
 D NOTICE^DGSEC4(.GMVRET,DFN,DATA,1)
"RTN","GMVRPCP",24,0)
 S @RESULTS@(0)=$S(GMVRET:"1^Logged",1:"-1^Unable to log")
"RTN","GMVRPCP",25,0)
 Q
"RTN","GMVRPCP",26,0)
 ;
"RTN","GMVRPCP",27,0)
RPC(RESULTS,OPTION,DFN,DATA) ; [Procedure] Main RPC call tag
"RTN","GMVRPCP",28,0)
 ; RPC: [GMV PTSELECT]
"RTN","GMVRPCP",29,0)
 ; Input parameters
"RTN","GMVRPCP",30,0)
 ;  1. RESULTS [Literal/Required] RPC return array
"RTN","GMVRPCP",31,0)
 ;  2. OPTION [Literal/Required] Call method for RPC
"RTN","GMVRPCP",32,0)
 ;  3. DFN [Literal/Required] Patient IEN
"RTN","GMVRPCP",33,0)
 ;  4. DATA [Literal/Optional] Other data as required for call
"RTN","GMVRPCP",34,0)
 S RESULTS=$NA(^TMP("GMVPTSELECT",$J)) K @RESULTS
"RTN","GMVRPCP",35,0)
 D:$T(@OPTION)]"" @OPTION
"RTN","GMVRPCP",36,0)
 D:'$D(@RESULTS)
"RTN","GMVRPCP",37,0)
 .S @RESULTS@(0)="-1^No results returned"
"RTN","GMVRPCP",38,0)
 D CLEAN^DILF
"RTN","GMVRPCP",39,0)
 Q
"RTN","GMVRPCP",40,0)
 ;
"RTN","GMVRPCP",41,0)
HOSPLOC ; [Procedure] Return location as ptr to 44 or ""
"RTN","GMVRPCP",42,0)
 N VAIN
"RTN","GMVRPCP",43,0)
 D INP^VADPT S @RESULTS@(0)=+$G(^DIC(42,+VAIN(4),44),"")
"RTN","GMVRPCP",44,0)
 Q
"RTN","GMVRPCP",45,0)
 ;
"RTN","GMVRPCP",46,0)
PTHDR ; [Procedure] Patient Info for Header Displays
"RTN","GMVRPCP",47,0)
 I '$D(^DPT(+$G(DFN),0)) D  Q
"RTN","GMVRPCP",48,0)
 .S @RESULTS@(0)="-1^No Such DFN ["_$G(DFN,"<Null>")_"]"
"RTN","GMVRPCP",49,0)
 N GMVIENS
"RTN","GMVRPCP",50,0)
 S @RESULTS@(0)=+DFN,GMVIENS=(+DFN)_","
"RTN","GMVRPCP",51,0)
 S @RESULTS@(1)=$$GET1^DIQ(2,GMVIENS,.01)_"  "_$$GET1^DIQ(2,GMVIENS,.09)
"RTN","GMVRPCP",52,0)
 S @RESULTS@(2)="DOB: "_$$GET1^DIQ(2,GMVIENS,.03)_" "_$$GET1^DIQ(2,GMVIENS,.02)_", Age: "_$$GET1^DIQ(2,GMVIENS,.033)
"RTN","GMVRPCP",53,0)
 Q
"RTN","GMVRPCP",54,0)
 ;
"RTN","GMVRPCP",55,0)
PTLKUP ; [Procedure] Patient lookup handled separately for security
"RTN","GMVRPCP",56,0)
 N GMVIDX
"RTN","GMVRPCP",57,0)
 S GMVIDX=$S(DATA?9N.1"P":"SSN",1:"B^BS^BS5")
"RTN","GMVRPCP",58,0)
 D FIND^DIC(2,"","@;.01;.02;.03;.09","MP",DATA,60,GMVIDX)
"RTN","GMVRPCP",59,0)
 I $P(^TMP("DILIST",$J,0),U,3) D  Q
"RTN","GMVRPCP",60,0)
 .S @RESULTS@(0)="-1^Too many patients found matching '"_DATA_"'. Please be more specific."
"RTN","GMVRPCP",61,0)
 F GMV=0:0 S GMV=$O(^TMP("DILIST",$J,GMV)) Q:'GMV  D
"RTN","GMVRPCP",62,0)
 .S @RESULTS@(GMV)=$$PTREC(+^TMP("DILIST",$J,GMV,0))
"RTN","GMVRPCP",63,0)
 I '$D(@RESULTS) S @RESULTS@(0)="-1^No patients matching '"_DATA_"'"
"RTN","GMVRPCP",64,0)
 E  S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCP",65,0)
 Q
"RTN","GMVRPCP",66,0)
 ;
"RTN","GMVRPCP",67,0)
PTREC(DFN) ;
"RTN","GMVRPCP",68,0)
 ; Extrinsic to return a Pt Rec  in standard list format
"RTN","GMVRPCP",69,0)
 N GMV
"RTN","GMVRPCP",70,0)
 S GMV=$G(^DPT(DFN,0))
"RTN","GMVRPCP",71,0)
 S GMV="2;"_DFN_U_$P(GMV,U,1)_U_$P(GMV,U,2)_U_$P(GMV,U,3)_U_$P(GMV,U,9)
"RTN","GMVRPCP",72,0)
 S $P(GMV,U,10)=$$DOB^DPTLK1(DFN)
"RTN","GMVRPCP",73,0)
 S $P(GMV,U,11)=$$SSN^DPTLK1(DFN)
"RTN","GMVRPCP",74,0)
 Q GMV
"RTN","GMVRPCP",75,0)
 ;
"RTN","GMVRPCP",76,0)
SELECT ; [Procedure] Select patient
"RTN","GMVRPCP",77,0)
 ; Calls required utilities to check security and
"RTN","GMVRPCP",78,0)
 ; return associated warnings/alerts about a
"RTN","GMVRPCP",79,0)
 ; patient being selected.
"RTN","GMVRPCP",80,0)
 ; Variables:
"RTN","GMVRPCP",81,0)
 ;  IENS: [Private] Fileman IENS
"RTN","GMVRPCP",82,0)
 ;  GMVDFN: [Private] Scratch
"RTN","GMVRPCP",83,0)
 ;  GMVFLD: [Private] FIeld number
"RTN","GMVRPCP",84,0)
 ;  GMVID: [Private] Identifier array
"RTN","GMVRPCP",85,0)
 ;  GMVRET: [Private] Scratch
"RTN","GMVRPCP",86,0)
 ;  GMVX: [Private] Scratch
"RTN","GMVRPCP",87,0)
 ; New private variables
"RTN","GMVRPCP",88,0)
 NEW IENS,GMVDFN,GMVFLD,GMVID,GMVIDIEN,GMVIDS,GMVRET,GMVX
"RTN","GMVRPCP",89,0)
 I '$D(^DPT(+$G(DFN),0))#2 S @RESULTS@(0)="-1^No such patient" Q
"RTN","GMVRPCP",90,0)
 S ^DISV(DUZ,"^DPT(")=DFN ;spacebar return
"RTN","GMVRPCP",91,0)
 S @RESULTS@(0)="1^Required Identifiers & messages"
"RTN","GMVRPCP",92,0)
 S IENS=DFN_","
"RTN","GMVRPCP",93,0)
 D FILE^DID(2,,"REQUIRED IDENTIFIERS","GMVIDS")
"RTN","GMVRPCP",94,0)
 F GMVX=0:0 S GMVX=$O(GMVIDS("REQUIRED IDENTIFIERS",GMVX)) Q:'GMVX  D
"RTN","GMVRPCP",95,0)
 .S GMVFLD=GMVIDS("REQUIRED IDENTIFIERS",GMVX,"FIELD")
"RTN","GMVRPCP",96,0)
 .S GMVID="$$PTID^"_$$GET1^DID(2,GMVFLD,"","LABEL")
"RTN","GMVRPCP",97,0)
 .S GMVID=GMVID_U_$$GET1^DIQ(2,IENS,GMVFLD)
"RTN","GMVRPCP",98,0)
 .D:GMVFLD=.03
"RTN","GMVRPCP",99,0)
 ..S GMVID=GMVID_" ("_$$GET1^DIQ(2,IENS,.033)_")"
"RTN","GMVRPCP",100,0)
 ..S GMVID=GMVID_U_$$DOB^DPTLK1(+IENS)
"RTN","GMVRPCP",101,0)
 .D:GMVFLD=.09
"RTN","GMVRPCP",102,0)
 ..S X=$P(GMVID,U,3),X=$E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,10)
"RTN","GMVRPCP",103,0)
 ..S $P(GMVID,U,3)=X,$P(GMVID,U,4)=$$SSN^DPTLK1(+IENS)
"RTN","GMVRPCP",104,0)
 .S @RESULTS@($O(@RESULTS@(""),-1)+1)=GMVID
"RTN","GMVRPCP",105,0)
 ; Add ward and Room/Bed
"RTN","GMVRPCP",106,0)
 S GMVID="$$PTID^"_$$GET1^DID(2,.1,"","LABEL")
"RTN","GMVRPCP",107,0)
 S GMVID=GMVID_U_$$GET1^DIQ(2,IENS,.1)
"RTN","GMVRPCP",108,0)
 S GMVIDIEN=$P(GMVID,U,3)
"RTN","GMVRPCP",109,0)
 S GMVIDIEN=$$IDIEN(GMVIDIEN)
"RTN","GMVRPCP",110,0)
 S GMVID=GMVID_U_GMVIDIEN
"RTN","GMVRPCP",111,0)
 S @RESULTS@($O(@RESULTS@(""),-1)+1)=GMVID
"RTN","GMVRPCP",112,0)
 S GMVID="$$PTID^"_$$GET1^DID(2,.101,"","LABEL")
"RTN","GMVRPCP",113,0)
 S GMVID=GMVID_U_$$GET1^DIQ(2,IENS,.101)
"RTN","GMVRPCP",114,0)
 S @RESULTS@($O(@RESULTS@(""),-1)+1)=GMVID
"RTN","GMVRPCP",115,0)
 ; ------- Clevland Alert -------
"RTN","GMVRPCP",116,0)
 K GMVRET
"RTN","GMVRPCP",117,0)
 D GUIBS5A^DPTLK6(.GMVRET,DFN) D:GMVRET(1)=1
"RTN","GMVRPCP",118,0)
 .D ADD("$$MSGHDR^2^SAME LAST NAME AND LAST 4")
"RTN","GMVRPCP",119,0)
 .S GMVX=1
"RTN","GMVRPCP",120,0)
 .F  S GMVX=$O(GMVRET(GMVX)) Q:'GMVX!(+$G(GMVRET(GMVX)))  D
"RTN","GMVRPCP",121,0)
 ..D ADD($P(GMVRET(GMVX),U,2))
"RTN","GMVRPCP",122,0)
 .D ADD(" ")
"RTN","GMVRPCP",123,0)
 .S GMVX=1
"RTN","GMVRPCP",124,0)
 .F  S GMVX=$O(GMVRET(GMVX)) Q:'GMVX  D:+GMVRET(GMVX)
"RTN","GMVRPCP",125,0)
 ..S GMVDFN=+$P(GMVRET(GMVX),U,2)
"RTN","GMVRPCP",126,0)
 ..D ADD($$GET1^DIQ(2,GMVDFN_",",.01)_"    "_$$DOB^DPTLK1(GMVDFN)_"    "_$$SSN^DPTLK1(GMVDFN))
"RTN","GMVRPCP",127,0)
 .D ADD(" ")
"RTN","GMVRPCP",128,0)
 .D ADD("Please review carefully before continuing")
"RTN","GMVRPCP",129,0)
 .D ADD("$$MSGEND")
"RTN","GMVRPCP",130,0)
 ; ------- Sensitive Record? -------
"RTN","GMVRPCP",131,0)
 K GMVRET
"RTN","GMVRPCP",132,0)
 D PTSEC^DGSEC4(.GMVRET,DFN) D:GMVRET(1)'=0
"RTN","GMVRPCP",133,0)
 .D:GMVRET(1)=3
"RTN","GMVRPCP",134,0)
 ..D ADD("$$MSGHDR^0^CAN'T ACCESS YOUR OWN RECORD!!")
"RTN","GMVRPCP",135,0)
 .D:GMVRET(1)=-1
"RTN","GMVRPCP",136,0)
 ..D ADD("$$MSGHDR^0^INCOMPLETE INFORMATION - CAN'T PROCEED")
"RTN","GMVRPCP",137,0)
 .D:GMVRET(1)=1
"RTN","GMVRPCP",138,0)
 ..D ADD("$$MSGHDR^1^SENSITIVE RECORD ACCESS")
"RTN","GMVRPCP",139,0)
 .D:GMVRET(1)'=-1&(GMVRET(1)'=3)&(GMVRET(1)'=1)
"RTN","GMVRPCP",140,0)
 ..D ADD("$$MSGHDR^3^SENSITIVE RECORD ACCESS")
"RTN","GMVRPCP",141,0)
 .S GMVX=1
"RTN","GMVRPCP",142,0)
 .F  S GMVX=$O(GMVRET(GMVX)) Q:'GMVX  D ADD($TR(GMVRET(GMVX),"*"," "))
"RTN","GMVRPCP",143,0)
 .D ADD("$$MSGEND")
"RTN","GMVRPCP",144,0)
 ; ------- Means Test Information? -------
"RTN","GMVRPCP",145,0)
 D GUIMTD^DPTLK6(.GMVRET,DFN) D:GMVRET(1)=1
"RTN","GMVRPCP",146,0)
 .D ADD("$$MSGHDR^1^NOTICE")
"RTN","GMVRPCP",147,0)
 .F GMVX=1:0 S GMVX=$O(GMVRET(GMVX)) Q:'GMVX  D ADD(GMVRET(GMVX))
"RTN","GMVRPCP",148,0)
 .D ADD("$$MSGEND")
"RTN","GMVRPCP",149,0)
 Q
"RTN","GMVRPCP",150,0)
 ;
"RTN","GMVRPCP",151,0)
IDIEN(GMVIEN) ;
"RTN","GMVRPCP",152,0)
 S GMVIEN=$G(GMVIEN)
"RTN","GMVRPCP",153,0)
 I GMVIEN="" Q ""
"RTN","GMVRPCP",154,0)
 S GMVIEN=$O(^SC("B",GMVIEN,0))
"RTN","GMVRPCP",155,0)
 Q GMVIEN
"RTN","GMVRPCP",156,0)
 ;
"RTN","GMVRPCP",157,0)
CCOW ; Return CCOW site and production indicator
"RTN","GMVRPCP",158,0)
 S @RESULTS@(0)=$P($$SITE^VASITE(),"^",3)_"^"_$$PROD^XUPROD()
"RTN","GMVRPCP",159,0)
 Q
"RTN","GMVRPCP",160,0)
 ;
"RTN","GMVRPCU")
0^1^B5383241^B5083930
"RTN","GMVRPCU",1,0)
GMVRPCU ; HOIFO/DP - RPC for Vitals User ;3/18/04  12:49
"RTN","GMVRPCU",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**3**;Oct 31, 2002
"RTN","GMVRPCU",3,0)
 ; Integration Agreements:
"RTN","GMVRPCU",4,0)
 ; IA# 10076 [Supported] XUSEC Calls
"RTN","GMVRPCU",5,0)
 ; IA# 2263 [Supported] XPAR Calls
"RTN","GMVRPCU",6,0)
 ; IA# 2541 [Supported] XUPARAM Calls
"RTN","GMVRPCU",7,0)
 ; IA# 10112 [Supported] VASITE calls
"RTN","GMVRPCU",8,0)
 ;
"RTN","GMVRPCU",9,0)
 ; This routine supports the following IAs:
"RTN","GMVRPCU",10,0)
 ; #4366 - GMV USER RPC is called at RPC (private)
"RTN","GMVRPCU",11,0)
 ;
"RTN","GMVRPCU",12,0)
RPC(RESULTS,OPTION,DATA) ; [Procedure] Main RPC call tag
"RTN","GMVRPCU",13,0)
 ; RPC: [GMV USER]
"RTN","GMVRPCU",14,0)
 ;
"RTN","GMVRPCU",15,0)
 ; Input parameters
"RTN","GMVRPCU",16,0)
 ;  1. RESULTS [Reference/Required] RPC Return array
"RTN","GMVRPCU",17,0)
 ;  2. OPTION [Literal/Required] RPC Option to execute
"RTN","GMVRPCU",18,0)
 ;  3. DATA [Literal/Required] Other data as required for call
"RTN","GMVRPCU",19,0)
 ;
"RTN","GMVRPCU",20,0)
 N GMV,GMVCAT,GMVDESC,GMVENT,GMVERR,GMVFDA,GMVFLD,GMVIEN,GMVIT,GMVNAM,GMVNAME,GMVNEW,GMVOLD,GMVOWN,GMVOWNER,GMVQUAL,GMVROOT,GMVTYPE,GMVVAL,GMVVIT,GMVSCRN
"RTN","GMVRPCU",21,0)
 S RESULTS=$NA(^TMP("GMVUSER",$J)) K @RESULTS
"RTN","GMVRPCU",22,0)
 D:$T(@OPTION)]"" @OPTION
"RTN","GMVRPCU",23,0)
 S:'$D(@RESULTS) @RESULTS@(0)="-1^No results returned"
"RTN","GMVRPCU",24,0)
 D CLEAN^DILF
"RTN","GMVRPCU",25,0)
 Q
"RTN","GMVRPCU",26,0)
 ;
"RTN","GMVRPCU",27,0)
SETPAR ; [Procedure] Set/Clear Parameter
"RTN","GMVRPCU",28,0)
 I $P(DATA,U,2)="" D  Q
"RTN","GMVRPCU",29,0)
 .D DEL^XPAR("USR","GMV USER DEFAULTS",$P(DATA,U,1),.GMVERR)
"RTN","GMVRPCU",30,0)
 .I '$G(GMVERR) S @RESULTS@(0)="1^Parameter cleared"
"RTN","GMVRPCU",31,0)
 .E  S @RESULTS@(0)="-1^"_GMVERR
"RTN","GMVRPCU",32,0)
 D EN^XPAR("USR","GMV USER DEFAULTS",$P(DATA,U,1),$P(DATA,U,2),.GMVERR)
"RTN","GMVRPCU",33,0)
 I '$G(GMVERR) S @RESULTS@(0)="1^Parameter set."
"RTN","GMVRPCU",34,0)
 E  S @RESULTS@(0)="-1^"_GMVERR
"RTN","GMVRPCU",35,0)
 Q
"RTN","GMVRPCU",36,0)
 ;
"RTN","GMVRPCU",37,0)
GETPAR ; [Procedure] Get Parameter
"RTN","GMVRPCU",38,0)
 S @RESULTS@(0)=$$GET^XPAR("USR","GMV USER DEFAULTS",DATA,"Q")
"RTN","GMVRPCU",39,0)
 Q
"RTN","GMVRPCU",40,0)
 ;
"RTN","GMVRPCU",41,0)
SIGNON ; [Procedure] Returns sign-on information after Broker.Connected := True
"RTN","GMVRPCU",42,0)
 S @RESULTS@(0)=DUZ
"RTN","GMVRPCU",43,0)
 S @RESULTS@(1)=$$GET1^DIQ(200,DUZ_",",.01) ; Name
"RTN","GMVRPCU",44,0)
 S @RESULTS@(2)=+$$FIND1^DIC(4.2,"","QX",$$KSP^XUPARAM("WHERE")) ;Domain
"RTN","GMVRPCU",45,0)
 S @RESULTS@(3)=$$KSP^XUPARAM("WHERE") ; Domain Name
"RTN","GMVRPCU",46,0)
 S @RESULTS@(4)=+$G(DUZ(2)) ; Division IEN
"RTN","GMVRPCU",47,0)
 S @RESULTS@(5)=$S(+$G(DUZ(2)):$$GET1^DIQ(4,DUZ(2)_",",.01),1:"UNKNOWN")
"RTN","GMVRPCU",48,0)
 S @RESULTS@(6)=($D(^XUSEC("GMV MANAGER",DUZ))#2)!(DUZ(0)="@")
"RTN","GMVRPCU",49,0)
 S @RESULTS@(7)=$$GET1^DIQ(200,DUZ_",",8)
"RTN","GMVRPCU",50,0)
 S @RESULTS@(8)=""
"RTN","GMVRPCU",51,0)
 S @RESULTS@(9)=$G(DTIME,300)
"RTN","GMVRPCU",52,0)
 S @RESULTS@(10)=$$SITE^VASITE()
"RTN","GMVRPCU",53,0)
 Q
"RTN","GMVRPCU",54,0)
 ;
"RTN","GMVUTL1")
0^15^B5125108^B4892410
"RTN","GMVUTL1",1,0)
GMVUTL1 ;HOIFO/YH,FT-EXTRACT CLINIC LIST AND MARK VITALS ENTERED IN ERROR ;6/11/03  09:25
"RTN","GMVUTL1",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**1,3**;Oct 31, 2002
"RTN","GMVUTL1",3,0)
 ;
"RTN","GMVUTL1",4,0)
 ; This routine uses the following IAs:
"RTN","GMVUTL1",5,0)
 ;  #1246 - WIN^DGPMDDCF           (supported)
"RTN","GMVUTL1",6,0)
 ; #10039 - FILE 42 references     (supported)
"RTN","GMVUTL1",7,0)
 ; #10040 - ^SC( references        (supported)
"RTN","GMVUTL1",8,0)
 ; #10060 - FILE 200 fields        (supported)
"RTN","GMVUTL1",9,0)
 ; #10090 - FILE 4 references      (supported)
"RTN","GMVUTL1",10,0)
 ; #10104 - ^XLFSTR calls          (supported)
"RTN","GMVUTL1",11,0)
 ;
"RTN","GMVUTL1",12,0)
 ; This routine supports the following IAs:
"RTN","GMVUTL1",13,0)
 ; #4414 - GMV MARK ERROR RPC is called at ERROR (private)
"RTN","GMVUTL1",14,0)
 ;
"RTN","GMVUTL1",15,0)
ERROR(RESULT,GMVDATA)  ;GMV MARK ERROR [RPC entry point]
"RTN","GMVUTL1",16,0)
 ;GMVDATA CONSISTS OF THE FOLLOWING DATA:
"RTN","GMVUTL1",17,0)
 ;FILE # 120.5 IEN^DUZ^INCORRECT DATE/TIME^INCORRECT READING^INCORRECT
"RTN","GMVUTL1",18,0)
 ;PATIENT^INVALID RECORD
"RTN","GMVUTL1",19,0)
 N GMVFDA,GMVIEN,GMVIENS
"RTN","GMVUTL1",20,0)
 I '$D(^GMR(120.5,+GMVDATA,0))#2 S RESULT="ERROR: Record Not Found" Q
"RTN","GMVUTL1",21,0)
 S GMVIENS=(+GMVDATA)_","
"RTN","GMVUTL1",22,0)
 S GMVFDA(120.5,GMVIENS,2)=1
"RTN","GMVUTL1",23,0)
 S GMVFDA(120.5,GMVIENS,3)=$P(GMVDATA,"^",2)
"RTN","GMVUTL1",24,0)
 S GMVFDA(120.506,"+1,"_GMVIENS,.01)=$P(GMVDATA,"^",3)
"RTN","GMVUTL1",25,0)
 D UPDATE^DIE("","GMVFDA","GMVIEN")
"RTN","GMVUTL1",26,0)
 S RESULT="OK"
"RTN","GMVUTL1",27,0)
 Q
"RTN","GMVUTL1",28,0)
 ;
"RTN","GMVUTL1",29,0)
ACTLOC(LOC) ; Function: returns TRUE if active hospital location
"RTN","GMVUTL1",30,0)
 N D0,X I +$G(^SC(LOC,"OOS")) Q 0                ; screen out OOS entry
"RTN","GMVUTL1",31,0)
 S D0=+$G(^SC(LOC,42)) I D0 D WIN^DGPMDDCF Q 'X  ; chk out of svc wards
"RTN","GMVUTL1",32,0)
 S X=$G(^SC(LOC,"I")) I +X=0 Q 1                 ; no inactivate date
"RTN","GMVUTL1",33,0)
 I DT>$P(X,U)&($P(X,U,2)=""!(DT<$P(X,U,2))) Q 0  ; chk reactivate date
"RTN","GMVUTL1",34,0)
 Q 1                                             ; must still be active
"RTN","GMVUTL1",35,0)
 ;
"RTN","GMVUTL1",36,0)
PERSON(X) ;RETURN PERSON'S NAME FROM FILE #200.
"RTN","GMVUTL1",37,0)
 N GMVNAME
"RTN","GMVUTL1",38,0)
 Q:'X ""
"RTN","GMVUTL1",39,0)
 S GMVNAME=$$GET1^DIQ(200,X,.01,"E")
"RTN","GMVUTL1",40,0)
 Q $S(GMVNAME'="":GMVNAME,1:"")
"RTN","GMVUTL1",41,0)
FILLER(L,S,STRING)     ; Returns the number of filler characters desired.
"RTN","GMVUTL1",42,0)
 ; L - larger number
"RTN","GMVUTL1",43,0)
 ; S - smaller number
"RTN","GMVUTL1",44,0)
 ; STRING - string of same characters (e.g., spaces)
"RTN","GMVUTL1",45,0)
 ; Use spaces if STRING is not defined.
"RTN","GMVUTL1",46,0)
 I $L(STRING)=0 S STRING=$$REPEAT^XLFSTR(" ",79) ;line of spaces
"RTN","GMVUTL1",47,0)
 Q $E(STRING,1,L-S)
"RTN","GMVUTL1",48,0)
 ;
"RTN","GMVUTL1",49,0)
HOSPLOC(GMVWARD) ; Function returns Hospital Location IEN for a ward
"RTN","GMVUTL1",50,0)
 ; Input:
"RTN","GMVUTL1",51,0)
 ;  GMVWARD - Ward (FILE 42) IEN
"RTN","GMVUTL1",52,0)
 ; Returns:
"RTN","GMVUTL1",53,0)
 ;  Hospital Location (FILE 44) IEN for the ward
"RTN","GMVUTL1",54,0)
 ;  If GMVWARD'>0 or not found, then returns "" (null)
"RTN","GMVUTL1",55,0)
 I $G(GMVWARD)'>0 Q ""  ;illegal ward ien
"RTN","GMVUTL1",56,0)
 Q $P($G(^DIC(42,+GMVWARD,44)),"^")
"RTN","GMVUTL1",57,0)
 ;
"RTN","GMVUTL1",58,0)
DIVISION(GMVLOC) ; Function returns Division name for Hospital Location
"RTN","GMVUTL1",59,0)
 ; (FILE 44) IEN
"RTN","GMVUTL1",60,0)
 ; Input:
"RTN","GMVUTL1",61,0)
 ;  GMVLOC - Hospital Location (FILE 44) IEN
"RTN","GMVUTL1",62,0)
 ; Returns:
"RTN","GMVUTL1",63,0)
 ;  Division name (FILE 4) associated with that Hospital Location
"RTN","GMVUTL1",64,0)
 ;  If GMVLOC'>0 or not found, then returns "" (null)
"RTN","GMVUTL1",65,0)
 I $G(GMVLOC)'>0 Q ""  ;illegal hospital location
"RTN","GMVUTL1",66,0)
 Q $S(GMVLOC>0:$$GET1^DIQ(4,+$$GET1^DIQ(44,+GMVLOC,3,"I"),.01,"I"),1:"")
"RTN","GMVUTL1",67,0)
 ;
"RTN","GMVUTL3")
0^13^B5324263^B5074648
"RTN","GMVUTL3",1,0)
GMVUTL3 ;HOIFO/YH,FT-RPCBROKER UTILITY ROUTINE TO EXTRACT NURSING UNIT/ROOM-BED - 3 ;10/24/03  14:20
"RTN","GMVUTL3",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**3**;Oct 31, 2002
"RTN","GMVUTL3",3,0)
 ;
"RTN","GMVUTL3",4,0)
 ; This routine uses the following IAs:
"RTN","GMVUTL3",5,0)
 ;  #2692 - ^ORQPTQ1 calls         (controlled)
"RTN","GMVUTL3",6,0)
 ; #10061 - ^VADPT calls           (supported)
"RTN","GMVUTL3",7,0)
 ; #10099 - ^GMRADPT calls         (supported)
"RTN","GMVUTL3",8,0)
 ; 
"RTN","GMVUTL3",9,0)
 ; This routine supports the following IAs:
"RTN","GMVUTL3",10,0)
 ; #4350  - GMV ALLERGY RPC called at ALLERGY  (private)
"RTN","GMVUTL3",11,0)
 ;
"RTN","GMVUTL3",12,0)
PTINFO(RESULT,DFN,GMVDT) ; gets patient demographic and eligibility info
"RTN","GMVUTL3",13,0)
 ;RESULT=SSN^DOB^SEX AND AGE^ATTENDING^VETERAN^INTERNAL DATE/TIME
"RTN","GMVUTL3",14,0)
 ;       DECEASED^EXTERNAL DATE/TIME DECEASED
"RTN","GMVUTL3",15,0)
 D 1^VADPT,ELIG^VADPT
"RTN","GMVUTL3",16,0)
 S RESULT=$P($G(VADM(2)),"^",2)_"^"_$P($G(VADM(3)),"^",2)_"^"_$P($G(VADM(5)),"^",2)_", "_$P($G(VADM(4)),"^")_" years"_"^"_$P($G(VAIN(11)),"^",2)
"RTN","GMVUTL3",17,0)
 S RESULT=RESULT_"^"_$S(VAEL(4)=1:"YES",1:"NO")_"^^^^"
"RTN","GMVUTL3",18,0)
 S $P(RESULT,"^",8)=$P(VAIN(4),"^",2),$P(RESULT,"^",9)=$P(VAIN(5),"^")
"RTN","GMVUTL3",19,0)
 I VADM(6)>0 S $P(RESULT,"^",6)=$P(VADM(6),"^"),$P(RESULT,"^",7)=$P(VADM(6),"^",2)
"RTN","GMVUTL3",20,0)
 S $P(RESULT,"^",10)=VADM(1)
"RTN","GMVUTL3",21,0)
 N GMVSENS
"RTN","GMVUTL3",22,0)
 S GMVSENS=$$PTREC^GMVRPCP(DFN) ;check sensitvity of DOB and SSN 
"RTN","GMVUTL3",23,0)
 S $P(RESULT,U,1)=$P(GMVSENS,U,11) ;SSN
"RTN","GMVUTL3",24,0)
 S $P(RESULT,U,2)=$P(GMVSENS,U,10) ;DOB
"RTN","GMVUTL3",25,0)
 Q
"RTN","GMVUTL3",26,0)
TEAMPT(RESULT,GMVTEAM) ;GMV TEAM PATIENTS [RPC entry point]
"RTN","GMVUTL3",27,0)
 ; Calls CPRS API (IA #2692) and return list of patients for a given
"RTN","GMVUTL3",28,0)
 ; team (File 100.21, Field 10).
"RTN","GMVUTL3",29,0)
 N GMVI,GMVOUT,GMVPTNUM
"RTN","GMVUTL3",30,0)
 ; Call CPRS API with name of array to return data in and the IEN of
"RTN","GMVUTL3",31,0)
 ; the File 100.21 entry. CPRS returns:
"RTN","GMVUTL3",32,0)
 ; Arrayname(Sequential #)=DFN ^ patient name (File 2, Field .01)
"RTN","GMVUTL3",33,0)
 D TEAMPTS^ORQPTQ1(.GMVOUT,GMVTEAM)
"RTN","GMVUTL3",34,0)
 I $P($G(GMVOUT(1)),U,1)="" S RESULT(1)="NO PATIENTS" Q
"RTN","GMVUTL3",35,0)
 S GMVI=0
"RTN","GMVUTL3",36,0)
 F  S GMVI=$O(GMVOUT(GMVI)) Q:'GMVI  D
"RTN","GMVUTL3",37,0)
 .S GMVPTNUM=+$P(GMVOUT(GMVI),U,1)
"RTN","GMVUTL3",38,0)
 .D PTINFO(.GMVPAT,GMVPTNUM)
"RTN","GMVUTL3",39,0)
 .S RESULT(GMVI)=$P(GMVOUT(GMVI),U,2)_U_+$P(GMVOUT(GMVI),U,1)_U_GMVPAT
"RTN","GMVUTL3",40,0)
 .Q
"RTN","GMVUTL3",41,0)
QUITP K OUT,ARRAY1
"RTN","GMVUTL3",42,0)
 Q
"RTN","GMVUTL3",43,0)
ALLERGY(RESULT,DFN) ;GMV ALLERGY [RPC entry point]
"RTN","GMVUTL3",44,0)
 N GMRAL,GMVALG,GN D EN1^GMRADPT M GMVALG=GMRAL
"RTN","GMVUTL3",45,0)
 I $O(GMVALG(0))'>0 D  Q
"RTN","GMVUTL3",46,0)
 . I $G(GMVALG)="" S RESULT(1)="No Allergy Assessment"
"RTN","GMVUTL3",47,0)
 . I $G(GMVALG)=0 S RESULT(1)="No Known Allergies"
"RTN","GMVUTL3",48,0)
 . Q
"RTN","GMVUTL3",49,0)
 S GN=1,RESULT(1)="This patient has the following allergy(ies): ",GN(1)=0 F  S GN(1)=$O(GMVALG(GN(1))) Q:GN(1)'>0  D
"RTN","GMVUTL3",50,0)
 . S GN=GN+1,RESULT(GN)=$P($G(GMVALG(GN(1))),U,2)
"RTN","GMVUTL3",51,0)
 Q
"RTN","GMVUTL7")
0^11^B23154796^B22243524
"RTN","GMVUTL7",1,0)
GMVUTL7 ;HIOFO/DS,FT-RPC API TO RETURN ALL VITALS/CATEGORIES/QUALIFIERS ;7/17/02  14:52
"RTN","GMVUTL7",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**3**;Oct 31, 2002
"RTN","GMVUTL7",3,0)
 ;
"RTN","GMVUTL7",4,0)
 ; This routine uses the following IAs:
"RTN","GMVUTL7",5,0)
 ; #10035 - FILE 2 references      (supported)
"RTN","GMVUTL7",6,0)
 ; #10103 - ^XLFDT calls           (supported)
"RTN","GMVUTL7",7,0)
 ;
"RTN","GMVUTL7",8,0)
 ; This routine supports the following IAs:
"RTN","GMVUTL7",9,0)
 ; #4355 - GMV GET CURRENT TIME RPC is called at TIME  (private)
"RTN","GMVUTL7",10,0)
 ; #4359 - GMV VITALS/CAT/QUAL RPC is called at GETVITAL (private)
"RTN","GMVUTL7",11,0)
 ;
"RTN","GMVUTL7",12,0)
GETVITAL(RESULT,GMVLIST)        ; GMV VITALS/CAT/QUAL [RPC entry point]
"RTN","GMVUTL7",13,0)
 ; Returns all vital qual info in RESULT
"RTN","GMVUTL7",14,0)
 ;GMVLIST is either "" for all vitals or a list of required eg 1^2^
"RTN","GMVUTL7",15,0)
 N GMVNUM,GMVDATA,GMVDO,GMVLOOP
"RTN","GMVUTL7",16,0)
 S GMVNUM=1
"RTN","GMVUTL7",17,0)
 I GMVLIST'="" D
"RTN","GMVUTL7",18,0)
 . F GMVLOOP=1:1:$L(GMVLIST,"^") D
"RTN","GMVUTL7",19,0)
 .. S GMVDO=$P(GMVLIST,"^",GMVLOOP)
"RTN","GMVUTL7",20,0)
 .. Q:GMVDO=""
"RTN","GMVUTL7",21,0)
 .. S GMVDO=$$GETIEN(GMVDO)
"RTN","GMVUTL7",22,0)
 .. Q:GMVDO=""
"RTN","GMVUTL7",23,0)
 .. S RESULT(GMVNUM)=$$GETDATA(GMVDO)_"^"_$$ABBVAL(GMVDO)
"RTN","GMVUTL7",24,0)
 .. D GETALL(GMVNUM,.RESULT)
"RTN","GMVUTL7",25,0)
 .. S GMVNUM=GMVNUM+1
"RTN","GMVUTL7",26,0)
 .. Q
"RTN","GMVUTL7",27,0)
 . Q
"RTN","GMVUTL7",28,0)
 E  D
"RTN","GMVUTL7",29,0)
 . S GMVLOOP=0
"RTN","GMVUTL7",30,0)
 . F  S GMVLOOP=$O(^GMRD(120.51,GMVLOOP)) Q:GMVLOOP'>0  D
"RTN","GMVUTL7",31,0)
 .. S RESULT(GMVNUM)=$$GETDATA(GMVLOOP)_"^"_$$ABBVAL(GMVLOOP)
"RTN","GMVUTL7",32,0)
 .. D GETALL(GMVNUM,.RESULT)
"RTN","GMVUTL7",33,0)
 .. S GMVNUM=GMVNUM+1
"RTN","GMVUTL7",34,0)
 .. Q
"RTN","GMVUTL7",35,0)
 . Q
"RTN","GMVUTL7",36,0)
 Q
"RTN","GMVUTL7",37,0)
GETALL(GMVLOOP,RESULT)  ;
"RTN","GMVUTL7",38,0)
 S GMVCNT=0
"RTN","GMVUTL7",39,0)
 ;S GMVLOOP="" F  S GMVLOOP=$O(RESULT(GMVLOOP)) Q:GMVLOOP=""  D
"RTN","GMVUTL7",40,0)
 Q:$G(RESULT(GMVLOOP))=""
"RTN","GMVUTL7",41,0)
 Q:$P(RESULT(GMVLOOP),"^",1)'="V"
"RTN","GMVUTL7",42,0)
 S GMVITTYP=$P(RESULT(GMVLOOP),"^",2)
"RTN","GMVUTL7",43,0)
 S GMVD2=""
"RTN","GMVUTL7",44,0)
 S GMVCNT=GMVLOOP+.001
"RTN","GMVUTL7",45,0)
 F  S GMVD2=$O(^GMRD(120.53,"C",GMVITTYP,GMVD2)) Q:GMVD2'>0  D
"RTN","GMVUTL7",46,0)
 . S GMVD1=0
"RTN","GMVUTL7",47,0)
 . F  S GMVD1=$O(^GMRD(120.53,"C",GMVITTYP,GMVD2,GMVD1)) Q:GMVD1'>0  D
"RTN","GMVUTL7",48,0)
 .. S GMVDATA=$P($G(^GMRD(120.53,GMVD2,0)),U)
"RTN","GMVUTL7",49,0)
 .. I GMVDATA]"" D
"RTN","GMVUTL7",50,0)
 ... S GMVITTYP(0)=$G(^GMRD(120.51,+GMVITTYP,0))
"RTN","GMVUTL7",51,0)
 ... S GMVITTYP(1)=GMVITTYP,GMVITTYP(2)=$P(GMVITTYP(0),U,2)
"RTN","GMVUTL7",52,0)
 ... S GMVITTYP(3)=$P(GMVITTYP(0),U)
"RTN","GMVUTL7",53,0)
 ... S GMVDEFQ=$P($G(^GMRD(120.53,GMVD2,1,GMVD1,0)),U,7)
"RTN","GMVUTL7",54,0)
 ... S GMVDEFQ(0)=$G(^GMRD(120.52,+GMVDEFQ,0))
"RTN","GMVUTL7",55,0)
 ... S GMVDEFQ(1)=GMVDEFQ,GMVDEFQ(2)=$P(GMVDEFQ(0),U,2)
"RTN","GMVUTL7",56,0)
 ... S GMVDEFQ(3)=$P(GMVDEFQ(0),U)
"RTN","GMVUTL7",57,0)
 ... S RESULT(GMVCNT)="C"_U_GMVD2_U_GMVDATA
"RTN","GMVUTL7",58,0)
 ... D GETCAT(GMVITTYP,GMVD2,.RESULT,.GMVCNT)
"RTN","GMVUTL7",59,0)
 ... S GMVCNT=GMVCNT+.001
"RTN","GMVUTL7",60,0)
 ... Q
"RTN","GMVUTL7",61,0)
 .. Q
"RTN","GMVUTL7",62,0)
 . Q
"RTN","GMVUTL7",63,0)
 Q
"RTN","GMVUTL7",64,0)
GETDATA(GMVVITAL)       ;
"RTN","GMVUTL7",65,0)
 N GMVDATA,GMVD0,GMVD1
"RTN","GMVUTL7",66,0)
 I $G(^GMRD(120.51,GMVVITAL,0))="" D   Q GMVRES
"RTN","GMVUTL7",67,0)
 . S GMVRES="V^"_GMVVITAL_"^ERROR"
"RTN","GMVUTL7",68,0)
 . Q
"RTN","GMVUTL7",69,0)
 S GMVDATA=$G(^GMRD(120.51,GMVVITAL,0))
"RTN","GMVUTL7",70,0)
 I GMVDATA]"" S GMVRES="V"_U_GMVVITAL_U_$P(GMVDATA,U)_U_$P(GMVDATA,U,2)_U_$P(GMVDATA,U,7)
"RTN","GMVUTL7",71,0)
 Q GMVRES
"RTN","GMVUTL7",72,0)
GETCAT(GMVVTP,GMVITCAT,RESULT,GMVNUM)        ;
"RTN","GMVUTL7",73,0)
 N GMVD0,GMVD1,GMVCNT
"RTN","GMVUTL7",74,0)
 S GMVD0=0,GMVCNT=0
"RTN","GMVUTL7",75,0)
 F  S GMVD0=$O(^GMRD(120.52,"C",GMVITTYP,GMVD0)) Q:GMVD0'>0  D
"RTN","GMVUTL7",76,0)
 . S GMVD1=0
"RTN","GMVUTL7",77,0)
 . F  S GMVD1=$O(^GMRD(120.52,"C",GMVITTYP,GMVD0,GMVD1)) Q:GMVD1'>0  D
"RTN","GMVUTL7",78,0)
 .. S GMVCATD0=$P($G(^GMRD(120.52,GMVD0,1,GMVD1,0)),U,2)
"RTN","GMVUTL7",79,0)
 .. I $G(GMVITCAT)>0,GMVITCAT'=GMVCATD0 Q
"RTN","GMVUTL7",80,0)
 .. S GMVDATA=$G(^GMRD(120.52,GMVD0,0))
"RTN","GMVUTL7",81,0)
 .. I GMVDATA]"" D
"RTN","GMVUTL7",82,0)
 ... S GMVITTYP(0)=$G(^GMRD(120.51,+GMVITTYP,0))
"RTN","GMVUTL7",83,0)
 ... S GMVITTYP(1)=GMVITTYP,GMVITTYP(2)=$P(GMVITTYP(0),U,2)
"RTN","GMVUTL7",84,0)
 ... S GMVITTYP(3)=$P(GMVITTYP(0),U)
"RTN","GMVUTL7",85,0)
 ... S GMVITCAT(0)=$G(^GMRD(120.53,+GMVCATD0,0))
"RTN","GMVUTL7",86,0)
 ... S GMVITCAT(1)=GMVCATD0,(GMVITCAT(2),GMVITCAT(3))=$P(GMVITCAT(0),U)
"RTN","GMVUTL7",87,0)
 ... S GMVNUM=GMVNUM+.001
"RTN","GMVUTL7",88,0)
 ... S RESULT(GMVNUM)="Q"_U_GMVD0_U_$P(GMVDATA,U)_U_$P(GMVDATA,U,2)
"RTN","GMVUTL7",89,0)
 ... Q
"RTN","GMVUTL7",90,0)
 .. Q
"RTN","GMVUTL7",91,0)
 . Q
"RTN","GMVUTL7",92,0)
 Q
"RTN","GMVUTL7",93,0)
ABBVAL(VITALTYP)       ;
"RTN","GMVUTL7",94,0)
 N RESULT,GMVDATA
"RTN","GMVUTL7",95,0)
 ; Gets high low values if they exist
"RTN","GMVUTL7",96,0)
 I $G(^GMRD(120.57,1,1))="" Q ""
"RTN","GMVUTL7",97,0)
 S RESULT=""
"RTN","GMVUTL7",98,0)
 S GMVDATA=$P($G(^GMRD(120.57,1,1)),U,1,13)
"RTN","GMVUTL7",99,0)
 I VITALTYP=1 D
"RTN","GMVUTL7",100,0)
 . ; BP
"RTN","GMVUTL7",101,0)
 . S RESULT=$P(GMVDATA,U,7,10)
"RTN","GMVUTL7",102,0)
 . Q
"RTN","GMVUTL7",103,0)
 I VITALTYP=2 D
"RTN","GMVUTL7",104,0)
 . ; Temprature
"RTN","GMVUTL7",105,0)
 . S RESULT=$P(GMVDATA,U,1,2)
"RTN","GMVUTL7",106,0)
 . Q
"RTN","GMVUTL7",107,0)
 I VITALTYP=5 D
"RTN","GMVUTL7",108,0)
 . ; Pulse
"RTN","GMVUTL7",109,0)
 . S RESULT=$P(GMVDATA,U,3,4)
"RTN","GMVUTL7",110,0)
 . Q
"RTN","GMVUTL7",111,0)
 I VITALTYP=3 D
"RTN","GMVUTL7",112,0)
 . ;Respirations
"RTN","GMVUTL7",113,0)
 . S RESULT=$P(GMVDATA,U,5,6)
"RTN","GMVUTL7",114,0)
 . Q
"RTN","GMVUTL7",115,0)
 I VITALTYP=19 D
"RTN","GMVUTL7",116,0)
 . ;CVP
"RTN","GMVUTL7",117,0)
 . S RESULT=$P(GMVDATA,U,11,13)
"RTN","GMVUTL7",118,0)
 . Q
"RTN","GMVUTL7",119,0)
 Q RESULT
"RTN","GMVUTL7",120,0)
GETIEN(GMVABB) ; Gets IEN from the Abbreviation code.
"RTN","GMVUTL7",121,0)
 Q $O(^GMRD(120.51,"C",GMVABB,""))
"RTN","GMVUTL7",122,0)
ROOMPT(RESULTS,GMVWRD,GMVRLST) ; GMV WARD/ROOM PATIENTS [RPC entry point]
"RTN","GMVUTL7",123,0)
 ; Returns a list of patients in the ward and rooms specified
"RTN","GMVUTL7",124,0)
 ; Input:
"RTN","GMVUTL7",125,0)
 ; RESULTS - name of the array to hold the patient list
"RTN","GMVUTL7",126,0)
 ; GMVWRD  - name of the ward (e.g., 2EAST)
"RTN","GMVUTL7",127,0)
 ; GMVRLST - the room numbers of the ward separated by comma
"RTN","GMVUTL7",128,0)
 ;           (e.g., 200,210,220)
"RTN","GMVUTL7",129,0)
 ; Output:
"RTN","GMVUTL7",130,0)
 ; RESULT(n)=patient name^DFN^DOB (external)^SSN (no hyphens)
"RTN","GMVUTL7",131,0)
 ; 
"RTN","GMVUTL7",132,0)
 ; n is a sequential number beginning with 0 (zero)
"RTN","GMVUTL7",133,0)
 N GMRVROOM,GMRVLST,GMRVCNT,GMVT,GMVDF
"RTN","GMVUTL7",134,0)
 K RESULTS
"RTN","GMVUTL7",135,0)
 S GMVWARD(1)=GMVWRD
"RTN","GMVUTL7",136,0)
 I GMVRLST["," D
"RTN","GMVUTL7",137,0)
 . F GMVA=1:1:$L(GMVRLST)+1 D
"RTN","GMVUTL7",138,0)
 . . Q:$P(GMVRLST,",",GMVA)=""
"RTN","GMVUTL7",139,0)
 . . S GMVROOM($P($P(GMVRLST,",",GMVA),"-"))=""
"RTN","GMVUTL7",140,0)
 . . Q
"RTN","GMVUTL7",141,0)
 . Q
"RTN","GMVUTL7",142,0)
 E  D
"RTN","GMVUTL7",143,0)
 . S GMVROOM($P(GMVRLST,"-"))=""
"RTN","GMVUTL7",144,0)
 . Q
"RTN","GMVUTL7",145,0)
 S GMVEDB="S"
"RTN","GMVUTL7",146,0)
 K ^TMP($J)
"RTN","GMVUTL7",147,0)
 D WARD^GMVDS1
"RTN","GMVUTL7",148,0)
 S GMVT="",GMVCNT=0
"RTN","GMVUTL7",149,0)
 F  S GMVT=$O(^TMP($J,GMVT)) Q:GMVT=""  D
"RTN","GMVUTL7",150,0)
 . S GMVN=""
"RTN","GMVUTL7",151,0)
 . F  S GMVN=$O(^TMP($J,GMVT,GMVN)) Q:GMVN=""  D
"RTN","GMVUTL7",152,0)
 . . S GMVDF=""
"RTN","GMVUTL7",153,0)
 . . F  S GMVDF=$O(^TMP($J,GMVT,GMVN,GMVDF)) Q:GMVDF=""  D
"RTN","GMVUTL7",154,0)
 . . . S GMVDOB=$$FMTE^XLFDT($P(^DPT(GMVDF,0),"^",3))
"RTN","GMVUTL7",155,0)
 . . . S GMVSSN=$P(^DPT(GMVDF,0),"^",9)
"RTN","GMVUTL7",156,0)
 . . . S RESULTS(GMVCNT)=GMVN_"^"_GMVDF_"^"_GMVDOB_"^"_GMVSSN
"RTN","GMVUTL7",157,0)
 . . . S GMVCNT=GMVCNT+1
"RTN","GMVUTL7",158,0)
 . . . Q
"RTN","GMVUTL7",159,0)
 . . Q
"RTN","GMVUTL7",160,0)
 . Q
"RTN","GMVUTL7",161,0)
 Q
"RTN","GMVUTL7",162,0)
TIME(RESULT,P2) ;Gets current time
"RTN","GMVUTL7",163,0)
 S RESULT=$$NOW^XLFDT()
"RTN","GMVUTL7",164,0)
 Q
"RTN","GMVUTL8")
0^3^B6643593^B2694671
"RTN","GMVUTL8",1,0)
GMVUTL8 ;HIOFO/DS,FT-RPC API TO RETURN ALL VITALS/CATEGORIES/QUALIFIERS ;3/31/05  13:34
"RTN","GMVUTL8",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**1,3**;Oct 31, 2002
"RTN","GMVUTL8",3,0)
 ;
"RTN","GMVUTL8",4,0)
 ; This routine uses the following IAs:
"RTN","GMVUTL8",5,0)
 ;  #2263 - ^XPAR calls            (Supported)
"RTN","GMVUTL8",6,0)
 ;  #3227 - ^NURAPI calls          (private)
"RTN","GMVUTL8",7,0)
 ;
"RTN","GMVUTL8",8,0)
 ; This routine supports the following IAs:
"RTN","GMVUTL8",9,0)
 ; #4653 - QUALIFRS & SUPO2 entry points     (private)
"RTN","GMVUTL8",10,0)
 ; #4420 - GMV DLL VERSION is called at DLL  (private)
"RTN","GMVUTL8",11,0)
 ; #4354 - GMV GET CATEGORY IEN is called at CATEGORY  (private)
"RTN","GMVUTL8",12,0)
 ; #4357 - GMV GET VITAL TYPE IEN is called at TYPE  (private)
"RTN","GMVUTL8",13,0)
 ;
"RTN","GMVUTL8",14,0)
APTLIST(ARRAY,LOC) ; Returns a list of active patients for a nursing
"RTN","GMVUTL8",15,0)
 ; location in the array specified. [RPC entry point]
"RTN","GMVUTL8",16,0)
 ;  input:   LOC - (Required) NURS LOCATION file (#211.4) ien
"RTN","GMVUTL8",17,0)
 ;  input: ARRAY - (Required) Name of the array to return entries in
"RTN","GMVUTL8",18,0)
 ; output: ARRAY - Subscripted by sequential number with DFN in first
"RTN","GMVUTL8",19,0)
 ;                 piece and patient name in second piece.
"RTN","GMVUTL8",20,0)
 ;         example: ARRAY(#)=DFN^patient name^SSN^DOB^SEX AND AGE
"RTN","GMVUTL8",21,0)
 ;                  ^ATTENDING^VETERAN^INTERNAL DATE/TIME DECEASED
"RTN","GMVUTL8",22,0)
 ;                  ^EXTERNAL DATE/TIME DECEASED
"RTN","GMVUTL8",23,0)
 ;
"RTN","GMVUTL8",24,0)
 I $G(LOC)="" S ARRAY(1)=-1
"RTN","GMVUTL8",25,0)
 N DFN,GMVARRAY,GMVCNT,GMVPAT,PATNAME
"RTN","GMVUTL8",26,0)
 D APTLIST^NURAPI(LOC,.GMVARRAY)
"RTN","GMVUTL8",27,0)
 I $G(GMVARRAY(1))'>0 S ARRAY(1)=-1 Q
"RTN","GMVUTL8",28,0)
 S GMVCNT=0
"RTN","GMVUTL8",29,0)
 F  S GMVCNT=$O(GMVARRAY(GMVCNT)) Q:'GMVCNT  D
"RTN","GMVUTL8",30,0)
 .S DFN=$P(GMVARRAY(GMVCNT),U,1)
"RTN","GMVUTL8",31,0)
 .Q:'DFN
"RTN","GMVUTL8",32,0)
 .S PATNAME=$P(GMVARRAY(GMVCNT),U,2)
"RTN","GMVUTL8",33,0)
 .D PTINFO^GMVUTL3(.GMVPAT,DFN)
"RTN","GMVUTL8",34,0)
 .S ARRAY(GMVCNT)=DFN_U_PATNAME_U_GMVPAT
"RTN","GMVUTL8",35,0)
 .Q
"RTN","GMVUTL8",36,0)
 Q
"RTN","GMVUTL8",37,0)
TYPE(RESULT,GMVTYPE) ;GMV GET VITAL TYPE IEN [RPC entry point]
"RTN","GMVUTL8",38,0)
 ; Input:
"RTN","GMVUTL8",39,0)
 ;   RESULT = variable name to hold result
"RTN","GMVUTL8",40,0)
 ;  GMVTYPE = Name of Vital Type (from FILE 120.51) (e.g., WEIGHT)
"RTN","GMVUTL8",41,0)
 ; Output: Returns the IEN if GMVTYPE exists in FILE 120.51
"RTN","GMVUTL8",42,0)
 ;         else returns -1
"RTN","GMVUTL8",43,0)
 ;
"RTN","GMVUTL8",44,0)
 I GMVTYPE="" S RESULT=-1 Q
"RTN","GMVUTL8",45,0)
 S RESULT=+$O(^GMRD(120.51,"B",GMVTYPE,0))
"RTN","GMVUTL8",46,0)
 Q
"RTN","GMVUTL8",47,0)
CATEGORY(RESULT,GMVCAT) ;GMV GET CATEGORY IEN [RPC entry point]
"RTN","GMVUTL8",48,0)
 ; Input
"RTN","GMVUTL8",49,0)
 ;  RESULT = variable name to hold result
"RTN","GMVUTL8",50,0)
 ;  GMVCAT = Name of Category (from FILE 120.53) (e.g., METHOD)
"RTN","GMVUTL8",51,0)
 ; Output: Returns the IEN if GMVTYPE exists in FILE 120.53
"RTN","GMVUTL8",52,0)
 ;         else returns -1
"RTN","GMVUTL8",53,0)
 I GMVCAT="" S RESULT=-1 Q
"RTN","GMVUTL8",54,0)
 S RESULT=+$O(^GMRD(120.53,"B",GMVCAT,0))
"RTN","GMVUTL8",55,0)
 Q
"RTN","GMVUTL8",56,0)
QUALIFER(RESULT,GMVQUAL) ;Return IEN of Qualifier name
"RTN","GMVUTL8",57,0)
 ; Input:
"RTN","GMVUTL8",58,0)
 ;   RESULT = variable name to hold result
"RTN","GMVUTL8",59,0)
 ;  GMVQUAL = Name of Qualifier (from FILE 120.52) (e.g., ORAL)
"RTN","GMVUTL8",60,0)
 ; Output: Returns the IEN if GMVQUAL exists in FILE 120.52
"RTN","GMVUTL8",61,0)
 ;         else returns -1
"RTN","GMVUTL8",62,0)
 ;
"RTN","GMVUTL8",63,0)
 I GMVQUAL="" S RESULT=-1 Q
"RTN","GMVUTL8",64,0)
 S RESULT=+$O(^GMRD(120.52,"B",GMVQUAL,0))
"RTN","GMVUTL8",65,0)
 Q
"RTN","GMVUTL8",66,0)
VITALIEN() ;Returns the Vital Type IENS in a list separated by commas.
"RTN","GMVUTL8",67,0)
 ; ex: ",8,9,21,20,5,3,22,1,2,19,"
"RTN","GMVUTL8",68,0)
 ;
"RTN","GMVUTL8",69,0)
 N GMVABB,GMVIEN,GMVLIST
"RTN","GMVUTL8",70,0)
 S GMVLIST=""
"RTN","GMVUTL8",71,0)
 F GMVABB="BP","T","R","P","HT","WT","CVP","CG","PO2","PN" D
"RTN","GMVUTL8",72,0)
 .S GMVIEN=$O(^GMRD(120.51,"C",GMVABB,0))
"RTN","GMVUTL8",73,0)
 .Q:'GMVIEN
"RTN","GMVUTL8",74,0)
 .S GMVLIST=GMVLIST_","_GMVIEN
"RTN","GMVUTL8",75,0)
 .Q
"RTN","GMVUTL8",76,0)
 I $L(GMVLIST)'="," S GMVLIST=GMVLIST_","
"RTN","GMVUTL8",77,0)
 Q GMVLIST
"RTN","GMVUTL8",78,0)
 ;
"RTN","GMVUTL8",79,0)
QUALIFRS(VIEN) ;Function to return vitals qualifiers text
"RTN","GMVUTL8",80,0)
 ; VIEN is the FILE 120.5 IEN
"RTN","GMVUTL8",81,0)
 ; Returns the qualifiers in a string of text
"RTN","GMVUTL8",82,0)
 ; e.g., Actual,Standing
"RTN","GMVUTL8",83,0)
 ;
"RTN","GMVUTL8",84,0)
 N QUALS,VQIEN,QNAME
"RTN","GMVUTL8",85,0)
 S QUALS=""
"RTN","GMVUTL8",86,0)
 I 'VIEN Q QUALS
"RTN","GMVUTL8",87,0)
 S VQIEN=0
"RTN","GMVUTL8",88,0)
 F  S VQIEN=$O(^GMR(120.5,VIEN,5,"B",VQIEN)) Q:'VQIEN  D
"RTN","GMVUTL8",89,0)
 .S QNAME=$P($G(^GMRD(120.52,+VQIEN,0)),U,1)
"RTN","GMVUTL8",90,0)
 .I QNAME]"" S QUALS=QUALS_QNAME_","
"RTN","GMVUTL8",91,0)
 .Q
"RTN","GMVUTL8",92,0)
 I $L(QUALS)>0 S QUALS=$E(QUALS,1,$L(QUALS)-1)
"RTN","GMVUTL8",93,0)
 Q QUALS
"RTN","GMVUTL8",94,0)
SUPO2(VIEN) ;Function to return the Supplemental O2 value
"RTN","GMVUTL8",95,0)
 ; VIEN is the FILE 120.5 IEN
"RTN","GMVUTL8",96,0)
 ; Returns the Supplemental O2 value (#1.4)
"RTN","GMVUTL8",97,0)
 ; e.g., 2.0 l/min 90%
"RTN","GMVUTL8",98,0)
 ;
"RTN","GMVUTL8",99,0)
 S VIEN=+$G(VIEN)
"RTN","GMVUTL8",100,0)
 Q $P($G(^GMR(120.5,VIEN,0)),U,10)
"RTN","GMVUTL8",101,0)
 ;
"RTN","GMVUTL8",102,0)
DLL(RESULT,GMVX) ; Entry for [GMV DLL VERSION] RPC. Returns DLL version check
"RTN","GMVUTL8",103,0)
 ; RESULT = variable name to return check
"RTN","GMVUTL8",104,0)
 ;   GMVX = dll name and version date/time
"RTN","GMVUTL8",105,0)
 ; Returns yes or no  
"RTN","GMVUTL8",106,0)
 S RESULT=$$GET^XPAR("SYS","GMV DLL VERSION",GMVX,"E")
"RTN","GMVUTL8",107,0)
 S:RESULT="" RESULT="NO"
"RTN","GMVUTL8",108,0)
 Q
"RTN","GMVUTL8",109,0)
 ;
"VER")
8.0^22.0
"BLD",4897,6)
^10
**END**
**END**
