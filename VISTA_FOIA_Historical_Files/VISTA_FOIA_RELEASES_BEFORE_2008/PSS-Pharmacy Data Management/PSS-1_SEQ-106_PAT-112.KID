Released PSS*1*112 SEQ #106
Extracted from mail message
**KIDS**:PSS*1.0*112^

**INSTALL NAME**
PSS*1.0*112
"BLD",6192,0)
PSS*1.0*112^PHARMACY DATA MANAGEMENT^0^3061016^y
"BLD",6192,1,0)
^^24^24^3060829^
"BLD",6192,1,1,0)
This patch enhances an original Pharmacy Data Management API call 
"BLD",6192,1,2,0)
DATA^PSS50.  By replacing FileMan calls with direct reads, data retrieval 
"BLD",6192,1,3,0)
from the DRUG file (#50) speed has been greatly improved. Specifications 
"BLD",6192,1,4,0)
for this API can be found in the Pharmacy Re-Engineering (PRE) API Manual.
"BLD",6192,1,5,0)
 
"BLD",6192,1,6,0)
This patch also enhances an original Pharmacy Data Management API call 
"BLD",6192,1,7,0)
ALL^PSS51P2.  By replacing FileMan calls with direct reads, data 
"BLD",6192,1,8,0)
retrieval from the MEDICATION ROUTES file (#51.2) speed has been greatly 
"BLD",6192,1,9,0)
improved. Specifications for this API can be found in the Pharmacy 
"BLD",6192,1,10,0)
Re-Engineering (PRE) API Manual.
"BLD",6192,1,11,0)
 
"BLD",6192,1,12,0)
Additionally, this patch introduces an API STATUS^PSS55MIS which requires
"BLD",6192,1,13,0)
three parameters.  The set of codes for STATUS field in the PHARMACY
"BLD",6192,1,14,0)
PATIENT file (#55) subfiles is returned. This API will invoke the
"BLD",6192,1,15,0)
FIELD^DID Fileman call and data will be returned to the calling
"BLD",6192,1,16,0)
application as specified in the FIELD^DID FileMan documentation. 
"BLD",6192,1,17,0)
Specifications for this API can be found in the Pharmacy Re-Engineering
"BLD",6192,1,18,0)
(PRE) API Manual.
"BLD",6192,1,19,0)
 
"BLD",6192,1,20,0)
Finally, this patch introduces CLINIC^PSS55MIS which requires three 
"BLD",6192,1,21,0)
parameters. This API returns a clinic from the HOSPITAL LOCATION file 
"BLD",6192,1,22,0)
(#44) based on a provided order number and patient DFN.  This API invokes 
"BLD",6192,1,23,0)
the GETS^DIQ data retrieval call.  Specifications for this API can be 
"BLD",6192,1,24,0)
found in the Pharmacy Re-Engineering (PRE) API Manual.
"BLD",6192,4,0)
^9.64PA^^
"BLD",6192,6)
1^
"BLD",6192,6.3)
30
"BLD",6192,"KRN",0)
^9.67PA^8989.52^19
"BLD",6192,"KRN",.4,0)
.4
"BLD",6192,"KRN",.401,0)
.401
"BLD",6192,"KRN",.402,0)
.402
"BLD",6192,"KRN",.403,0)
.403
"BLD",6192,"KRN",.5,0)
.5
"BLD",6192,"KRN",.84,0)
.84
"BLD",6192,"KRN",3.6,0)
3.6
"BLD",6192,"KRN",3.8,0)
3.8
"BLD",6192,"KRN",9.2,0)
9.2
"BLD",6192,"KRN",9.8,0)
9.8
"BLD",6192,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",6192,"KRN",9.8,"NM",1,0)
PSS50DAT^^0^B58906701
"BLD",6192,"KRN",9.8,"NM",2,0)
PSS50TMP^^0^B21555506
"BLD",6192,"KRN",9.8,"NM",3,0)
PSS51P2^^0^B45538228
"BLD",6192,"KRN",9.8,"NM",4,0)
PSS55MIS^^0^B4456080
"BLD",6192,"KRN",9.8,"NM","B","PSS50DAT",1)

"BLD",6192,"KRN",9.8,"NM","B","PSS50TMP",2)

"BLD",6192,"KRN",9.8,"NM","B","PSS51P2",3)

"BLD",6192,"KRN",9.8,"NM","B","PSS55MIS",4)

"BLD",6192,"KRN",19,0)
19
"BLD",6192,"KRN",19.1,0)
19.1
"BLD",6192,"KRN",101,0)
101
"BLD",6192,"KRN",409.61,0)
409.61
"BLD",6192,"KRN",771,0)
771
"BLD",6192,"KRN",870,0)
870
"BLD",6192,"KRN",8989.51,0)
8989.51
"BLD",6192,"KRN",8989.52,0)
8989.52
"BLD",6192,"KRN",8994,0)
8994
"BLD",6192,"KRN","B",.4,.4)

"BLD",6192,"KRN","B",.401,.401)

"BLD",6192,"KRN","B",.402,.402)

"BLD",6192,"KRN","B",.403,.403)

"BLD",6192,"KRN","B",.5,.5)

"BLD",6192,"KRN","B",.84,.84)

"BLD",6192,"KRN","B",3.6,3.6)

"BLD",6192,"KRN","B",3.8,3.8)

"BLD",6192,"KRN","B",9.2,9.2)

"BLD",6192,"KRN","B",9.8,9.8)

"BLD",6192,"KRN","B",19,19)

"BLD",6192,"KRN","B",19.1,19.1)

"BLD",6192,"KRN","B",101,101)

"BLD",6192,"KRN","B",409.61,409.61)

"BLD",6192,"KRN","B",771,771)

"BLD",6192,"KRN","B",870,870)

"BLD",6192,"KRN","B",8989.51,8989.51)

"BLD",6192,"KRN","B",8989.52,8989.52)

"BLD",6192,"KRN","B",8994,8994)

"BLD",6192,"QUES",0)
^9.62^^
"BLD",6192,"REQB",0)
^9.611^1^1
"BLD",6192,"REQB",1,0)
PSS*1.0*85^2
"BLD",6192,"REQB","B","PSS*1.0*85",1)

"MBREQ")
0
"PKG",517,-1)
1^1
"PKG",517,0)
PHARMACY DATA MANAGEMENT^PSS^Maintenance of Pharmacy files.
"PKG",517,20,0)
^9.402P^^
"PKG",517,22,0)
^9.49I^1^1
"PKG",517,22,1,0)
1.0^2970930^2971014^11595
"PKG",517,22,1,"PAH",1,0)
112^3061016^10000000059
"PKG",517,22,1,"PAH",1,1,0)
^^24^24^3061016
"PKG",517,22,1,"PAH",1,1,1,0)
This patch enhances an original Pharmacy Data Management API call 
"PKG",517,22,1,"PAH",1,1,2,0)
DATA^PSS50.  By replacing FileMan calls with direct reads, data retrieval 
"PKG",517,22,1,"PAH",1,1,3,0)
from the DRUG file (#50) speed has been greatly improved. Specifications 
"PKG",517,22,1,"PAH",1,1,4,0)
for this API can be found in the Pharmacy Re-Engineering (PRE) API Manual.
"PKG",517,22,1,"PAH",1,1,5,0)
 
"PKG",517,22,1,"PAH",1,1,6,0)
This patch also enhances an original Pharmacy Data Management API call 
"PKG",517,22,1,"PAH",1,1,7,0)
ALL^PSS51P2.  By replacing FileMan calls with direct reads, data 
"PKG",517,22,1,"PAH",1,1,8,0)
retrieval from the MEDICATION ROUTES file (#51.2) speed has been greatly 
"PKG",517,22,1,"PAH",1,1,9,0)
improved. Specifications for this API can be found in the Pharmacy 
"PKG",517,22,1,"PAH",1,1,10,0)
Re-Engineering (PRE) API Manual.
"PKG",517,22,1,"PAH",1,1,11,0)
 
"PKG",517,22,1,"PAH",1,1,12,0)
Additionally, this patch introduces an API STATUS^PSS55MIS which requires
"PKG",517,22,1,"PAH",1,1,13,0)
three parameters.  The set of codes for STATUS field in the PHARMACY
"PKG",517,22,1,"PAH",1,1,14,0)
PATIENT file (#55) subfiles is returned. This API will invoke the
"PKG",517,22,1,"PAH",1,1,15,0)
FIELD^DID Fileman call and data will be returned to the calling
"PKG",517,22,1,"PAH",1,1,16,0)
application as specified in the FIELD^DID FileMan documentation. 
"PKG",517,22,1,"PAH",1,1,17,0)
Specifications for this API can be found in the Pharmacy Re-Engineering
"PKG",517,22,1,"PAH",1,1,18,0)
(PRE) API Manual.
"PKG",517,22,1,"PAH",1,1,19,0)
 
"PKG",517,22,1,"PAH",1,1,20,0)
Finally, this patch introduces CLINIC^PSS55MIS which requires three 
"PKG",517,22,1,"PAH",1,1,21,0)
parameters. This API returns a clinic from the HOSPITAL LOCATION file 
"PKG",517,22,1,"PAH",1,1,22,0)
(#44) based on a provided order number and patient DFN.  This API invokes 
"PKG",517,22,1,"PAH",1,1,23,0)
the GETS^DIQ data retrieval call.  Specifications for this API can be 
"PKG",517,22,1,"PAH",1,1,24,0)
found in the Pharmacy Re-Engineering (PRE) API Manual.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","PSS50DAT")
0^1^B58906701^B33215766
"RTN","PSS50DAT",1,0)
PSS50DAT ;BHAM ISC/TSS - CONTINUATION OF API FOR INFORMATION FROM FILE 50; 5 Sep 03 
"RTN","PSS50DAT",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**85,92,112**;9/30/97;Build 30
"RTN","PSS50DAT",3,0)
DATA ;
"RTN","PSS50DAT",4,0)
 ;PSSIEN - IEN of entry in 50
"RTN","PSS50DAT",5,0)
 ;PSSFT - Free Text name in 50
"RTN","PSS50DAT",6,0)
 ;PSSFL - Inactive flag - "" - All entries
"RTN","PSS50DAT",7,0)
 ;                        FileMan Date - Only entries with no Inactive Date or an Inactive Date greater than this date.
"RTN","PSS50DAT",8,0)
 ;PSSPK - Application Package's Use - "" - All entries
"RTN","PSS50DAT",9,0)
 ;                                         Alphabetic codes that represent the DHCP packages that consider this drug to be
"RTN","PSS50DAT",10,0)
 ;                                         part of their formulary.
"RTN","PSS50DAT",11,0)
 ;PSSRTOI - Orderable Item - return only entries matched to a Pharmacy Orderable Item                                         
"RTN","PSS50DAT",12,0)
 ;LIST - Subscript of ^TMP array in the form ^TMP($J,LIST,Field Number where Field Number is the Field Number of the data
"RTN","PSS50DAT",13,0)
 ;       piece being returned.
"RTN","PSS50DAT",14,0)
 ;Reference to ^PSNDF(50.68 is supported by DBIA 3735
"RTN","PSS50DAT",15,0)
 ;NEW UNPROTECTED FILEMAN VARIABLES
"RTN","PSS50DAT",16,0)
 N DO,DINDEX,DISUB,DIVAL
"RTN","PSS50DAT",17,0)
 N PSSBGCNT
"RTN","PSS50DAT",18,0)
 N PSSCNT
"RTN","PSS50DAT",19,0)
 N PSSTIEN
"RTN","PSS50DAT",20,0)
 N PSSTMP
"RTN","PSS50DAT",21,0)
 N PSSOLD
"RTN","PSS50DAT",22,0)
 N PSSALT
"RTN","PSS50DAT",23,0)
 N PSSMATCH
"RTN","PSS50DAT",24,0)
 N PSSSYN
"RTN","PSS50DAT",25,0)
 S PSSBGCNT=0
"RTN","PSS50DAT",26,0)
 S SCR("S")=""
"RTN","PSS50DAT",27,0)
 I $G(LIST)']"" Q
"RTN","PSS50DAT",28,0)
 I +$G(PSSIEN)'>0,($G(PSSFT)']"") S ^TMP($J,LIST,0)=-1_"^"_"NO DATA FOUND" Q
"RTN","PSS50DAT",29,0)
 K ^TMP("DILIST",$J)
"RTN","PSS50DAT",30,0)
 K ^TMP($J,LIST)
"RTN","PSS50DAT",31,0)
 S SCR("S")=""
"RTN","PSS50DAT",32,0)
 I +$G(PSSFL)>0!($G(PSSPK)]"")!($G(PSSRTOI)=1) N PSS5ND,PSSZ3,PSSZ4 D SETSCRN^PSS50A
"RTN","PSS50DAT",33,0)
 I +$G(PSSIEN)>0 N PSSIEN2 S PSSIEN2=$$FIND1^DIC(50,"","A","`"_PSSIEN,,SCR("S"),"") D  K ^TMP("PSSP50",$J) D COUNTBG Q
"RTN","PSS50DAT",34,0)
 .I PSSIEN2>0 D DIRREAD
"RTN","PSS50DAT",35,0)
 I +$G(PSSIEN)=0 D
"RTN","PSS50DAT",36,0)
 .I PSSFT="??" D LOOPDIR D COUNTBG Q
"RTN","PSS50DAT",37,0)
 .D FIND^DIC(50,,"@;.01","QP",PSSFT,,"B",SCR("S"),,"") D LOOPDI D COUNTBG
"RTN","PSS50DAT",38,0)
 Q
"RTN","PSS50DAT",39,0)
 ;
"RTN","PSS50DAT",40,0)
COUNTBG ;CHECKS PSSBGCNT AND FILLS COUNT IN ON 0 NODE OF ^TMP($J,LIST)
"RTN","PSS50DAT",41,0)
 I PSSBGCNT>0 D
"RTN","PSS50DAT",42,0)
 .S ^TMP($J,LIST,0)=PSSBGCNT
"RTN","PSS50DAT",43,0)
 ELSE  S ^TMP($J,LIST,0)=-1_"^"_"NO DATA FOUND"
"RTN","PSS50DAT",44,0)
 Q
"RTN","PSS50DAT",45,0)
 ;
"RTN","PSS50DAT",46,0)
LOOPDI ;LOOPS ON "DILIST" FROM FILEMAN CALL (USED FOR RETURNING MULTIPLE DRUGS FROM PSSFT)
"RTN","PSS50DAT",47,0)
 S PSSTIEN=0 ;TEMP IEN TO ITERATE OVER DILIST
"RTN","PSS50DAT",48,0)
 F  S PSSTIEN=$O(^TMP("DILIST",$J,PSSTIEN)) Q:PSSTIEN=""  D
"RTN","PSS50DAT",49,0)
 .S PSSIEN2=($P(^TMP("DILIST",$J,PSSTIEN,0),U,1))
"RTN","PSS50DAT",50,0)
 .D DIRREAD
"RTN","PSS50DAT",51,0)
 Q
"RTN","PSS50DAT",52,0)
 ;
"RTN","PSS50DAT",53,0)
LOOPDIR ;LOOP FOR A DIRECT READ.  READS ALL IENs FOR ^PSDRUG(
"RTN","PSS50DAT",54,0)
 S PSSIEN2=0
"RTN","PSS50DAT",55,0)
 F  S PSSIEN2=$O(^PSDRUG(PSSIEN2)) Q:'PSSIEN2  D
"RTN","PSS50DAT",56,0)
 .I $P($G(^PSDRUG(PSSIEN2,0)),U,1)'="" D DIRALL
"RTN","PSS50DAT",57,0)
 Q
"RTN","PSS50DAT",58,0)
 ;
"RTN","PSS50DAT",59,0)
DIRALL ;TEST FOR PSSFL, PSSRTOI, PSSPK, BAILS IF CONDITIONS MEET TRUE
"RTN","PSS50DAT",60,0)
 I $G(PSSFL),$P($G(^PSDRUG(PSSIEN2,"I")),"^"),$P($G(^("I")),"^")'>PSSFL Q
"RTN","PSS50DAT",61,0)
 I $G(PSSRTOI)=1,'$P($G(^PSDRUG(PSSIEN2,2)),"^") Q
"RTN","PSS50DAT",62,0)
 I $G(PSSPK)]"" N PSSZ5,PSSZ6 S PSSZ5=0 F PSSZ6=1:1:$L(PSSPK) Q:PSSZ5  I $P($G(^PSDRUG(PSSIEN2,2)),U,3)[$E(PSSPK,PSSZ6) S PSSZ5=1
"RTN","PSS50DAT",63,0)
 I $G(PSSPK)]"",'PSSZ5 Q
"RTN","PSS50DAT",64,0)
 D DIRREAD
"RTN","PSS50DAT",65,0)
 Q
"RTN","PSS50DAT",66,0)
 ;
"RTN","PSS50DAT",67,0)
DIRREAD ;MAIN DIRECT READ FOR ENTIRE ROUTINE
"RTN","PSS50DAT",68,0)
 D DIRREAD^PSS50TMP
"RTN","PSS50DAT",69,0)
 D SYNONYM
"RTN","PSS50DAT",70,0)
 S ^TMP($J,LIST,"B",$G(^TMP($J,LIST,PSSIEN2,.01)),PSSIEN2)=""
"RTN","PSS50DAT",71,0)
 D FORMALT
"RTN","PSS50DAT",72,0)
 D OLD
"RTN","PSS50DAT",73,0)
 D SRVCODE($P(^TMP($J,LIST,PSSIEN2,22),U,1))
"RTN","PSS50DAT",74,0)
 S PSSBGCNT=PSSBGCNT+1
"RTN","PSS50DAT",75,0)
 Q
"RTN","PSS50DAT",76,0)
 ;
"RTN","PSS50DAT",77,0)
SYNONYM ; FILLS SYNONYM MULTIPLE
"RTN","PSS50DAT",78,0)
 S PSSCNT=0
"RTN","PSS50DAT",79,0)
 S PSSTMP=""
"RTN","PSS50DAT",80,0)
 S PSSSYN=""
"RTN","PSS50DAT",81,0)
 F  S PSSSYN=$O(^PSDRUG(PSSIEN2,1,PSSSYN)) Q:PSSSYN=""  D
"RTN","PSS50DAT",82,0)
 .I $P($G(^PSDRUG(PSSIEN2,1,PSSSYN,0)),U,1)'="" D
"RTN","PSS50DAT",83,0)
 ..S ^TMP($J,LIST,PSSIEN2,"SYN",PSSSYN,.01)=$P($G(^PSDRUG(PSSIEN2,1,PSSSYN,0)),U,1)
"RTN","PSS50DAT",84,0)
 ..;;;;;INTENDED USE
"RTN","PSS50DAT",85,0)
 ..S PSSTMP=$P($G(^PSDRUG(PSSIEN2,1,PSSSYN,0)),U,3)
"RTN","PSS50DAT",86,0)
 ..I PSSTMP="0" S ^TMP($J,LIST,PSSIEN2,"SYN",PSSSYN,1)=PSSTMP_U_"TRADE NAME"
"RTN","PSS50DAT",87,0)
 ..I PSSTMP="1" S ^TMP($J,LIST,PSSIEN2,"SYN",PSSSYN,1)=PSSTMP_U_"QUICK CODE"
"RTN","PSS50DAT",88,0)
 ..I PSSTMP="D" S ^TMP($J,LIST,PSSIEN2,"SYN",PSSSYN,1)=PSSTMP_U_"DRUG ACCOUNTABILITY"
"RTN","PSS50DAT",89,0)
 ..I PSSTMP="C" S ^TMP($J,LIST,PSSIEN2,"SYN",PSSSYN,1)=PSSTMP_U_"CONTROLLED SUBSTANCES"
"RTN","PSS50DAT",90,0)
 ..I PSSTMP="" S ^TMP($J,LIST,PSSIEN2,"SYN",PSSSYN,1)=""
"RTN","PSS50DAT",91,0)
 ..;;;;;NDC CODE
"RTN","PSS50DAT",92,0)
 ..S ^TMP($J,LIST,PSSIEN2,"SYN",PSSSYN,2)=$P($G(^PSDRUG(PSSIEN2,1,PSSSYN,0)),U,2)
"RTN","PSS50DAT",93,0)
 ..S ^TMP($J,LIST,PSSIEN2,"SYN",PSSSYN,403)=$P($G(^PSDRUG(PSSIEN2,1,PSSSYN,0)),U,7)
"RTN","PSS50DAT",94,0)
 ..S PSSCNT=PSSCNT+1
"RTN","PSS50DAT",95,0)
 I PSSCNT=0 S ^TMP($J,LIST,PSSIEN2,"SYN",0)="-1^NO DATA FOUND"
"RTN","PSS50DAT",96,0)
 ELSE  S ^TMP($J,LIST,PSSIEN2,"SYN",0)=PSSCNT
"RTN","PSS50DAT",97,0)
 Q
"RTN","PSS50DAT",98,0)
 ;
"RTN","PSS50DAT",99,0)
FORMALT ;FILLS FORMULARY ALTERATIVE MULTIPLE
"RTN","PSS50DAT",100,0)
 S PSSCNT=0
"RTN","PSS50DAT",101,0)
 S PSSALT=0
"RTN","PSS50DAT",102,0)
 F  S PSSALT=$O(^PSDRUG(PSSIEN2,65,PSSALT)) Q:PSSALT=""  D
"RTN","PSS50DAT",103,0)
 .I $P($G(^PSDRUG(PSSIEN2,65,PSSALT,0)),U,1)'="" D
"RTN","PSS50DAT",104,0)
 ..S ^TMP($J,LIST,PSSIEN2,"FRM",PSSALT,2)=$P($G(^PSDRUG(PSSIEN2,65,PSSALT,0)),U,1)_U_$P($G(^PSDRUG($P($G(^PSDRUG(PSSIEN2,65,PSSALT,0)),U,1),0)),U,1)
"RTN","PSS50DAT",105,0)
 ..S PSSCNT=PSSCNT+1
"RTN","PSS50DAT",106,0)
 I PSSCNT=0 S ^TMP($J,LIST,PSSIEN2,"FRM",0)="-1^NO DATA FOUND"
"RTN","PSS50DAT",107,0)
 ELSE  S ^TMP($J,LIST,PSSIEN2,"FRM",0)=PSSCNT
"RTN","PSS50DAT",108,0)
 Q
"RTN","PSS50DAT",109,0)
 ;
"RTN","PSS50DAT",110,0)
OLD ;FILLS THE OLD NAME MULTIPLE
"RTN","PSS50DAT",111,0)
 S PSSCNT=0
"RTN","PSS50DAT",112,0)
 S PSSOLD=0
"RTN","PSS50DAT",113,0)
 F  S PSSOLD=$O(^PSDRUG(PSSIEN2,900,PSSOLD)) Q:PSSOLD=""  D
"RTN","PSS50DAT",114,0)
 .I $P($G(^PSDRUG(PSSIEN2,900,PSSOLD,0)),U,2)'="" D
"RTN","PSS50DAT",115,0)
 ..S X=$$UP^XLFSTR($$FMTE^XLFDT($P(^PSDRUG(PSSIEN2,900,PSSOLD,0),U,2)))
"RTN","PSS50DAT",116,0)
 ..S ^TMP($J,LIST,PSSIEN2,"OLD",PSSOLD,.02)=$P($G(^PSDRUG(PSSIEN2,900,PSSOLD,0)),U,2)_U_X
"RTN","PSS50DAT",117,0)
 .ELSE  S ^TMP($J,LIST,PSSIEN2,"OLD",PSSOLD,.02)=""
"RTN","PSS50DAT",118,0)
 .I $P($G(^PSDRUG(PSSIEN2,900,PSSOLD,0)),U,1)'="" D
"RTN","PSS50DAT",119,0)
 ..S ^TMP($J,LIST,PSSIEN2,"OLD",PSSOLD,.01)=$P($G(^PSDRUG(PSSIEN2,900,PSSOLD,0)),U,1)
"RTN","PSS50DAT",120,0)
 ..S PSSCNT=PSSCNT+1
"RTN","PSS50DAT",121,0)
 .ELSE  S ^TMP($J,LIST,PSSIEN2,"OLD",PSSOLD,.01)=""
"RTN","PSS50DAT",122,0)
 I PSSCNT=0 S ^TMP($J,LIST,PSSIEN2,"OLD",0)="-1^NO DATA FOUND"
"RTN","PSS50DAT",123,0)
 ELSE  S ^TMP($J,LIST,PSSIEN2,"OLD",0)=PSSCNT
"RTN","PSS50DAT",124,0)
 Q
"RTN","PSS50DAT",125,0)
 ;
"RTN","PSS50DAT",126,0)
SRVCODE(PSSMATCH)     ;FILLS SERVICE CODE MULTIPLE
"RTN","PSS50DAT",127,0)
 I PSSMATCH'="" S ^TMP($J,LIST,PSSIEN2,400)=$P($G(^PSNDF(50.68,PSSMATCH,"PFS")),U,1)
"RTN","PSS50DAT",128,0)
 I $P($G(^TMP($J,LIST,PSSIEN2,400)),U,1)="" S ^TMP($J,LIST,PSSIEN2,400)=$P($G(^PSDRUG(PSSIEN2,"PFS")),U,1)
"RTN","PSS50DAT",129,0)
 I $P($G(^TMP($J,LIST,PSSIEN2,400)),U,1)="" S ^TMP($J,LIST,PSSIEN2,400)=600000
"RTN","PSS50DAT",130,0)
 Q
"RTN","PSS50DAT",131,0)
 ;
"RTN","PSS50DAT",132,0)
DRG ;
"RTN","PSS50DAT",133,0)
 ;PSSIEN - IEN of entry in 50
"RTN","PSS50DAT",134,0)
 ;PSSFT - Free Text name in 50
"RTN","PSS50DAT",135,0)
 ;PSSFL - Inactive flag - "" - All entries
"RTN","PSS50DAT",136,0)
 ;                        FileMan Date - Only entries with no Inactive Date or an Inactive Date greater than this date.
"RTN","PSS50DAT",137,0)
 ;PSSPK - Application Package's Use - "" - All entries
"RTN","PSS50DAT",138,0)
 ;                                         Alphabetic codes that represent the DHCP packages that consider this drug to be
"RTN","PSS50DAT",139,0)
 ;                                         part of their formulary.
"RTN","PSS50DAT",140,0)
 ;PSSRTOI - Orderable Item - return only entries matched to a Pharmacy Orderable Item
"RTN","PSS50DAT",141,0)
 ;LIST - Subscript of ^TMP array in the form ^TMP($J,LIST,Field Number where Field Number is the Field Number of the data
"RTN","PSS50DAT",142,0)
 ;       piece being returned.
"RTN","PSS50DAT",143,0)
 N DIERR,ZZERR,PSSP50,SCR,PSS,PSSMLCT
"RTN","PSS50DAT",144,0)
 I $G(LIST)']"" Q
"RTN","PSS50DAT",145,0)
 K ^TMP($J,LIST)
"RTN","PSS50DAT",146,0)
 I +$G(PSSIEN)'>0,($G(PSSFT)']"") S ^TMP($J,LIST,0)=-1_"^"_"NO DATA FOUND" Q
"RTN","PSS50DAT",147,0)
 S SCR("S")=""
"RTN","PSS50DAT",148,0)
 I +$G(PSSFL)>0!($G(PSSPK)]"")!($G(PSSRTOI)=1) N PSS5ND,PSSZ3,PSSZ4 D SETSCRN^PSS50A
"RTN","PSS50DAT",149,0)
 I +$G(PSSIEN)>0 N PSSIEN2 S PSSIEN2=$$FIND1^DIC(50,"","A","`"_PSSIEN,,SCR("S"),"") D  K ^TMP("PSSP50",$J) Q
"RTN","PSS50DAT",150,0)
 .K ^TMP("DIERR",$J)
"RTN","PSS50DAT",151,0)
 .I +PSSIEN2'>0 S ^TMP($J,LIST,0)=-1_"^"_"NO DATA FOUND" Q
"RTN","PSS50DAT",152,0)
 .S ^TMP($J,LIST,0)=1
"RTN","PSS50DAT",153,0)
 .K ^TMP("PSSP50",$J) D GETS^DIQ(50,+PSSIEN2,".01;62.01:62.05;905","IE","^TMP(""PSSP50"",$J)") S PSS(1)=0
"RTN","PSS50DAT",154,0)
 .F  S PSS(1)=$O(^TMP("PSSP50",$J,50,PSS(1))) Q:'PSS(1)  D SETDRG^PSS50A1
"RTN","PSS50DAT",155,0)
 I $G(PSSIEN)'="" S ^TMP($J,LIST,0)=-1_"^"_"NO DATA FOUND" Q
"RTN","PSS50DAT",156,0)
 I $G(PSSFT)]"" D
"RTN","PSS50DAT",157,0)
 .I PSSFT["??" D LOOP^PSS50A1 Q
"RTN","PSS50DAT",158,0)
 .K ^TMP("DILIST",$J)
"RTN","PSS50DAT",159,0)
 .D FIND^DIC(50,,"@;.01","QP",PSSFT,,"B",SCR("S"),,"")
"RTN","PSS50DAT",160,0)
 .I +$G(^TMP("DILIST",$J,0))=0 S ^TMP($J,LIST,0)=-1_"^"_"NO DATA FOUND" Q
"RTN","PSS50DAT",161,0)
 .I +^TMP("DILIST",$J,0)>0 S ^TMP($J,LIST,0)=+^TMP("DILIST",$J,0) N PSSXX S PSSXX=0 F  S PSSXX=$O(^TMP("DILIST",$J,PSSXX)) Q:'PSSXX  D
"RTN","PSS50DAT",162,0)
 ..S PSSIEN=+^TMP("DILIST",$J,PSSXX,0)
"RTN","PSS50DAT",163,0)
 ..K ^TMP("PSSP50",$J) D GETS^DIQ(50,+PSSIEN,".01;62.01:62.05;905","IE","^TMP(""PSSP50"",$J)") S PSS(1)=0
"RTN","PSS50DAT",164,0)
 ..F  S PSS(1)=$O(^TMP("PSSP50",$J,50,PSS(1))) Q:'PSS(1)  D SETDRG^PSS50A1
"RTN","PSS50DAT",165,0)
 K ^TMP("DILIST",$J),^TMP("PSSP50",$J)
"RTN","PSS50DAT",166,0)
 Q
"RTN","PSS50DAT",167,0)
 ;
"RTN","PSS50DAT",168,0)
LOOP ;
"RTN","PSS50DAT",169,0)
 N PSS50DD1,PSS50DD2,PSS50DD3,PSS50DD4,PSS50ER1,PSS50ER2,PSS50ER3,PSS50ER4,PSS51NFD,PSS52NFD,PSSG2N,PSS501NX
"RTN","PSS50DAT",170,0)
 D FIELD^DID(50,51,"Z","POINTER","PSS50DD1","PSS50ER1") S PSS51NFD=$G(PSS50DD1("POINTER"))
"RTN","PSS50DAT",171,0)
 D FIELD^DID(50,52,"Z","POINTER","PSS50DD2","PSS50ER2") S PSS52NFD=$G(PSS50DD2("POINTER"))
"RTN","PSS50DAT",172,0)
 D FIELD^DID(50,301,"Z","POINTER","PSS50DD3","PSS50ER3") S PSSG2N=$G(PSS50DD3("POINTER"))
"RTN","PSS50DAT",173,0)
 D FIELD^DID(50.1,1,"Z","POINTER","PSS50DD4","PSS50ER4") S PSS501NX=$G(PSS50DD4("POINTER"))
"RTN","PSS50DAT",174,0)
 N PSSENCT
"RTN","PSS50DAT",175,0)
 S PSSENCT=0
"RTN","PSS50DAT",176,0)
 S PSS(1)=0 F  S PSS(1)=$O(^PSDRUG(PSS(1))) Q:'PSS(1)  D
"RTN","PSS50DAT",177,0)
 .I $P($G(^PSDRUG(PSS(1),0)),"^")="" Q
"RTN","PSS50DAT",178,0)
 .I $G(PSSFL),$P($G(^PSDRUG(PSS(1),"I")),"^"),$P($G(^("I")),"^")'>PSSFL Q
"RTN","PSS50DAT",179,0)
 .I $G(PSSRTOI)=1,'$P($G(^PSDRUG(PSS(1),2)),"^") Q
"RTN","PSS50DAT",180,0)
 .;Naked reference below refers to ^PSDRUG(PSS(1),2)
"RTN","PSS50DAT",181,0)
 .I $G(PSSPK)]"" N PSSZ5,PSSZ6 S PSSZ5=0 F PSSZ6=1:1:$L(PSSPK) Q:PSSZ5  I $P($G(^(2)),"^",3)[$E(PSSPK,PSSZ6) S PSSZ5=1
"RTN","PSS50DAT",182,0)
 .I $G(PSSPK)]"",'PSSZ5 Q
"RTN","PSS50DAT",183,0)
 .D SETSUB1^PSS50AQM(PSS(1)),SETSUB2^PSS50AQM(PSS(1)),SETSUB3^PSS50AQM(PSS(1))
"RTN","PSS50DAT",184,0)
 .D SETALL^PSS50AQM,SETOLD^PSS50AQM,SETSYN^PSS50AQM,SETFMA^PSS50AQM
"RTN","PSS50DAT",185,0)
 .S PSSENCT=PSSENCT+1
"RTN","PSS50DAT",186,0)
 S ^TMP($J,LIST,0)=$S($G(PSSENCT):$G(PSSENCT),1:"-1^NO DATA FOUND")
"RTN","PSS50DAT",187,0)
 Q
"RTN","PSS50TMP")
0^2^B21555506^n/a
"RTN","PSS50TMP",1,0)
PSS50TMP ;BIR/TSS - CONTINUATION OF API FOR INFORMATION FROM FILE 50; 5 Sep 03 
"RTN","PSS50TMP",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**112**;9/30/97;Build 30
"RTN","PSS50TMP",3,0)
 ;Reference to ^PSNDF(50.68 is supported by DBIA 3735
"RTN","PSS50TMP",4,0)
 ;Reference to ^PSNDF(50.6 is supported by DBIA 2079
"RTN","PSS50TMP",5,0)
 ;Reference to ^PSNDF(50.605 is supported by DBIA 2138
"RTN","PSS50TMP",6,0)
 ;Reference to ^PSNDF(50.606 is supported by DBIA 2174
"RTN","PSS50TMP",7,0)
 ;Reference to ^PSNDF(50.3 is supported by DBIA 2612
"RTN","PSS50TMP",8,0)
DIRREAD ; PERFORMS ALL NON-MULTIPLE DIRECT READING FOR PSS50DAT
"RTN","PSS50TMP",9,0)
 N PSSZTMP
"RTN","PSS50TMP",10,0)
 S ^TMP($J,LIST,PSSIEN2,.01)=$P($G(^PSDRUG(PSSIEN2,0)),U,1)
"RTN","PSS50TMP",11,0)
 S ^TMP($J,LIST,PSSIEN2,2)=$P($G(^PSDRUG(PSSIEN2,0)),U,2)
"RTN","PSS50TMP",12,0)
 I $P($G(^PSDRUG(PSSIEN2,2)),U,1)'="" D
"RTN","PSS50TMP",13,0)
 .S ^TMP($J,LIST,PSSIEN2,2.1)=$P($G(^PSDRUG(PSSIEN2,2)),U,1)_U_$P($G(^PS(50.7,$P($G(^PSDRUG(PSSIEN2,2)),U,1),0)),U,1)_U_$P($G(^PS(50.7,$P($G(^PSDRUG(PSSIEN2,2)),U,1),0)),U,2)
"RTN","PSS50TMP",14,0)
 .S ^TMP($J,LIST,PSSIEN2,2.1)=^TMP($J,LIST,PSSIEN2,2.1)_U_$P($G(^PS(50.606,$P($G(^PS(50.7,$P($G(^PSDRUG(PSSIEN2,2)),U,1),0)),U,2),0)),U,1)
"RTN","PSS50TMP",15,0)
 ELSE  S ^TMP($J,LIST,PSSIEN2,2.1)=""
"RTN","PSS50TMP",16,0)
 S PSSZTMP=$G(^PSDRUG(PSSIEN2,0))
"RTN","PSS50TMP",17,0)
 S ^TMP($J,LIST,PSSIEN2,3)=$P($G(PSSZTMP),U,3)
"RTN","PSS50TMP",18,0)
 S ^TMP($J,LIST,PSSIEN2,4)=$P($G(PSSZTMP),U,4)
"RTN","PSS50TMP",19,0)
 S ^TMP($J,LIST,PSSIEN2,5)=$P($G(PSSZTMP),U,5)
"RTN","PSS50TMP",20,0)
 S ^TMP($J,LIST,PSSIEN2,6)=$P($G(PSSZTMP),U,6)
"RTN","PSS50TMP",21,0)
 S ^TMP($J,LIST,PSSIEN2,8)=$P($G(PSSZTMP),U,8)
"RTN","PSS50TMP",22,0)
 I $P($G(^PSDRUG(PSSIEN2,660)),U,2)'="" D
"RTN","PSS50TMP",23,0)
 . S ^TMP($J,LIST,PSSIEN2,12)=$P($G(^PSDRUG(PSSIEN2,660)),U,2)_U_$P($G(^DIC(51.5,$P($G(^PSDRUG(PSSIEN2,660)),U,2),0)),U,1)_U_$P($G(^DIC(51.5,$P($G(^PSDRUG(PSSIEN2,660)),U,2),0)),U,2)
"RTN","PSS50TMP",24,0)
 ELSE  S ^TMP($J,LIST,PSSIEN2,12)=""
"RTN","PSS50TMP",25,0)
 S PSSZTMP=$G(^PSDRUG(PSSIEN2,660))
"RTN","PSS50TMP",26,0)
 S ^TMP($J,LIST,PSSIEN2,13)=$P($G(PSSZTMP),U,3)
"RTN","PSS50TMP",27,0)
 S ^TMP($J,LIST,PSSIEN2,14.5)=$P($G(PSSZTMP),U,8)
"RTN","PSS50TMP",28,0)
 S ^TMP($J,LIST,PSSIEN2,15)=$P($G(PSSZTMP),U,5)
"RTN","PSS50TMP",29,0)
 S ^TMP($J,LIST,PSSIEN2,16)=$P($G(PSSZTMP),U,6)
"RTN","PSS50TMP",30,0)
 S ^TMP($J,LIST,PSSIEN2,21)=$P($G(PSSZTMP),U,2)
"RTN","PSS50TMP",31,0)
 I $P($G(^PSDRUG(PSSIEN2,"ND")),U,1)'="" D
"RTN","PSS50TMP",32,0)
 .S ^TMP($J,LIST,PSSIEN2,20)=$P($G(^PSDRUG(PSSIEN2,"ND")),U,1)_U_$P($G(^PSNDF(50.6,$P($G(^PSDRUG(PSSIEN2,"ND")),U,1),0)),U,1)
"RTN","PSS50TMP",33,0)
 ELSE  S ^TMP($J,LIST,PSSIEN2,20)=""
"RTN","PSS50TMP",34,0)
 I $P($G(^PSDRUG(PSSIEN2,"ND")),U,3)'="" D
"RTN","PSS50TMP",35,0)
 .S ^TMP($J,LIST,PSSIEN2,22)=$P($G(^PSDRUG(PSSIEN2,"ND")),U,3)_U_$P($G(^PSNDF(50.68,$P($G(^PSDRUG(PSSIEN2,"ND")),U,3),0)),U,1)
"RTN","PSS50TMP",36,0)
 ELSE  S ^TMP($J,LIST,PSSIEN2,22)=""
"RTN","PSS50TMP",37,0)
 I $P($G(^PSDRUG(PSSIEN2,"ND")),U,6)'="" D
"RTN","PSS50TMP",38,0)
 . S ^TMP($J,LIST,PSSIEN2,25)=$P($G(^PSDRUG(PSSIEN2,"ND")),U,6)_U_$P($G(^PS(50.605,$P($G(^PSDRUG(PSSIEN2,"ND")),U,6),0)),U,1)_U_$P($G(^PS(50.605,$P($G(^PSDRUG(PSSIEN2,"ND")),U,6),0)),U,2)
"RTN","PSS50TMP",39,0)
 ELSE  S ^TMP($J,LIST,PSSIEN2,25)=""
"RTN","PSS50TMP",40,0)
 S ^TMP($J,LIST,PSSIEN2,27)=$P($G(^PSDRUG(PSSIEN2,"ND")),U,10)
"RTN","PSS50TMP",41,0)
 S ^TMP($J,LIST,PSSIEN2,31)=$P($G(^PSDRUG(PSSIEN2,2)),U,4)
"RTN","PSS50TMP",42,0)
 S ^TMP($J,LIST,PSSIEN2,40)=$P($G(^PSDRUG(PSSIEN2,"PSO")),U,1)
"RTN","PSS50TMP",43,0)
 I $P($G(^PSDRUG(PSSIEN2,0)),U,9) D
"RTN","PSS50TMP",44,0)
 .S ^TMP($J,LIST,PSSIEN2,51)=$P($G(^PSDRUG(PSSIEN2,0)),U,9)
"RTN","PSS50TMP",45,0)
 .I ^TMP($J,LIST,PSSIEN2,51)="1" S ^TMP($J,LIST,PSSIEN2,51)=^TMP($J,LIST,PSSIEN2,51)_U_"N/F" Q
"RTN","PSS50TMP",46,0)
 .I ^TMP($J,LIST,PSSIEN2,51)="" S ^TMP($J,LIST,PSSIEN2,51)=^TMP($J,LIST,PSSIEN2,51)_U Q
"RTN","PSS50TMP",47,0)
 ELSE  S ^TMP($J,LIST,PSSIEN2,51)=""
"RTN","PSS50TMP",48,0)
 I $P($G(^PSDRUG(PSSIEN2,0)),U,11) D
"RTN","PSS50TMP",49,0)
 .S ^TMP($J,LIST,PSSIEN2,52)=$P($G(^PSDRUG(PSSIEN2,0)),U,11)
"RTN","PSS50TMP",50,0)
 .I ^TMP($J,LIST,PSSIEN2,52)="1" S ^TMP($J,LIST,PSSIEN2,52)=^TMP($J,LIST,PSSIEN2,52)_U_"V-N/F" Q
"RTN","PSS50TMP",51,0)
 .I ^TMP($J,LIST,PSSIEN2,52)="" S ^TMP($J,LIST,PSSIEN2,52)=^TMP($J,LIST,PSSIEN2,52)_U Q
"RTN","PSS50TMP",52,0)
 ELSE  S ^TMP($J,LIST,PSSIEN2,52)=""
"RTN","PSS50TMP",53,0)
 S ^TMP($J,LIST,PSSIEN2,63)=$P($G(^PSDRUG(PSSIEN2,2)),U,3)
"RTN","PSS50TMP",54,0)
 I $P($G(^PSDRUG(PSSIEN2,2)),U,6)'="" D
"RTN","PSS50TMP",55,0)
 .S ^TMP($J,LIST,PSSIEN2,64)=$P($G(^PSDRUG(PSSIEN2,2)),U,6)_U_$P($G(^PS(50.3,$P($G(^PSDRUG(PSSIEN2,2)),U,6),0)),U,1)
"RTN","PSS50TMP",56,0)
 ELSE  S ^TMP($J,LIST,PSSIEN2,64)=""
"RTN","PSS50TMP",57,0)
 I $P($G(^PSDRUG(PSSIEN2,"I")),U,1) D
"RTN","PSS50TMP",58,0)
 .N Y S Y=$P($G(^PSDRUG(PSSIEN2,"I")),U,1) X ^DD("DD")
"RTN","PSS50TMP",59,0)
 .S ^TMP($J,LIST,PSSIEN2,100)=$P($G(^PSDRUG(PSSIEN2,"I")),U,1)_U_$G(Y)
"RTN","PSS50TMP",60,0)
 ELSE  S ^TMP($J,LIST,PSSIEN2,100)=""
"RTN","PSS50TMP",61,0)
 S ^TMP($J,LIST,PSSIEN2,101)=$P($G(^PSDRUG(PSSIEN2,0)),U,10)
"RTN","PSS50TMP",62,0)
 S ^TMP($J,LIST,PSSIEN2,102)=$P($G(^PSDRUG(PSSIEN2,2)),U,2)
"RTN","PSS50TMP",63,0)
 I $P($G(^PSDRUG(PSSIEN2,"PSG")),U,2) D
"RTN","PSS50TMP",64,0)
 .S ^TMP($J,LIST,PSSIEN2,301)=$P($G(^PSDRUG(PSSIEN2,"PSG")),U,2)
"RTN","PSS50TMP",65,0)
 .S PSSZTMP=^TMP($J,LIST,PSSIEN2,301)
"RTN","PSS50TMP",66,0)
 .I ^TMP($J,LIST,PSSIEN2,301)="0" S ^TMP($J,LIST,PSSIEN2,301)=PSSZTMP_U_"Field 03 or 04 - Doses by Type" Q
"RTN","PSS50TMP",67,0)
 .I ^TMP($J,LIST,PSSIEN2,301)="1" S ^TMP($J,LIST,PSSIEN2,301)=PSSZTMP_U_"Field 06 or 07 - Units of Issue" Q
"RTN","PSS50TMP",68,0)
 .I ^TMP($J,LIST,PSSIEN2,301)="2" S ^TMP($J,LIST,PSSIEN2,301)=PSSZTMP_U_"Field 17 - Fluids and Admin Sets" Q
"RTN","PSS50TMP",69,0)
 .I ^TMP($J,LIST,PSSIEN2,301)="3" S ^TMP($J,LIST,PSSIEN2,301)=PSSZTMP_U_"Field 22 - Blood Products" Q
"RTN","PSS50TMP",70,0)
 ELSE  S ^TMP($J,LIST,PSSIEN2,301)=""
"RTN","PSS50TMP",71,0)
 S ^TMP($J,LIST,PSSIEN2,302)=$P($G(^PSDRUG(PSSIEN2,"PSG")),U,3)
"RTN","PSS50TMP",72,0)
 S ^TMP($J,LIST,PSSIEN2,400)=$P($G(^PSDRUG(PSSIEN2,"PFS")),U,1)
"RTN","PSS50TMP",73,0)
 Q
"RTN","PSS51P2")
0^3^B45538228^B30235843
"RTN","PSS51P2",1,0)
PSS51P2 ;BIR/LDT - API FOR INFORMATION FROM FILE 51.2; 5 Sep 03
"RTN","PSS51P2",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**85,112**;9/30/97;Build 30
"RTN","PSS51P2",3,0)
 ;
"RTN","PSS51P2",4,0)
ALL(PSSIEN,PSSFT,PSSFL,PSSPK,LIST) ;
"RTN","PSS51P2",5,0)
 ;PSSIEN - IEN of entry in MEDICATION ROUTES file (#51.2).
"RTN","PSS51P2",6,0)
 ;PSSFT - Free Text name in MEDICATION ROUTES file (#51.2).
"RTN","PSS51P2",7,0)
 ;PSSFL - Inactive flag - "" - All entries
"RTN","PSS51P2",8,0)
 ;        FileMan Date - Only entries with no Inactive Date or an Inactive Date greater than this date.
"RTN","PSS51P2",9,0)
 ;PSSPK - PACKAGE USE field (#3) of the MEDICATION ROUTES file (#51.2).
"RTN","PSS51P2",10,0)
 ;LIST - Subscript of ^TMP array in the form ^TMP($J,LIST,Field Number where Field Number is
"RTN","PSS51P2",11,0)
 ;the Field Number of the data piece being returned.
"RTN","PSS51P2",12,0)
 ;Returns NAME field (#.01), ABBREVIATION field (#1), PACKAGE USE field (#3), OUTPATIENT EXPANSION field (#4),
"RTN","PSS51P2",13,0)
 ;OTHER LANGUAGE EXPANSION field (#4.1), INACTIVATION DATE field (#5), and IV FLAG field (#6)
"RTN","PSS51P2",14,0)
 ;of MEDICATION ROUTES file (#51.2).
"RTN","PSS51P2",15,0)
 N DIERR,ZZERR,PSS51P2,SCR,PSS,PSSBGCNT,PSSCNT,PSSTIEN,PSSTMP,PSSNAM
"RTN","PSS51P2",16,0)
 S PSSBGCNT=0
"RTN","PSS51P2",17,0)
 S SCR("S")=""
"RTN","PSS51P2",18,0)
 I $G(LIST)']"" Q
"RTN","PSS51P2",19,0)
 K ^TMP("DILIST",$J)
"RTN","PSS51P2",20,0)
 K ^TMP($J,LIST)
"RTN","PSS51P2",21,0)
 I +$G(PSSIEN)'>0,($G(PSSFT)']"") S ^TMP($J,LIST,0)=-1_"^"_"NO DATA FOUND" Q
"RTN","PSS51P2",22,0)
 S SCR("S")=""
"RTN","PSS51P2",23,0)
 I +$G(PSSFL)>0 N ND D SETSCRN
"RTN","PSS51P2",24,0)
 ;Naked reference below refers to ^PS(51.2,+Y,0)
"RTN","PSS51P2",25,0)
 I $G(PSSPK)]"" S SCR("S")=$S(SCR("S")]"":SCR("S")_" I $P($G(^(0)),U,4)=$G(PSSPK)",1:"I $P($G(^(0)),U,4)=$G(PSSPK)")
"RTN","PSS51P2",26,0)
 I +$G(PSSIEN)>0 N PSSIEN2 S PSSIEN2=$$FIND1^DIC(51.2,"","A","`"_PSSIEN,,SCR("S"),"") D  D COUNTBG Q
"RTN","PSS51P2",27,0)
 .I PSSIEN2>0 D DIRREAD
"RTN","PSS51P2",28,0)
 I +$G(PSSIEN)=0 D
"RTN","PSS51P2",29,0)
 .I PSSFT="??" D LOOPDIR D COUNTBG Q
"RTN","PSS51P2",30,0)
 .D FIND^DIC(51.2,,"@;.01;1","QP",PSSFT,,"B",SCR("S"),,"") D LOOPDI D COUNTBG
"RTN","PSS51P2",31,0)
 Q
"RTN","PSS51P2",32,0)
 ;
"RTN","PSS51P2",33,0)
COUNTBG ;CHECKS PSSBGCNT AND FILLS COUNT IN ON 0 NODE OF ^TMP($J,LIST)
"RTN","PSS51P2",34,0)
 I PSSBGCNT>0 D
"RTN","PSS51P2",35,0)
 .S ^TMP($J,LIST,0)=PSSBGCNT
"RTN","PSS51P2",36,0)
 ELSE  S ^TMP($J,LIST,0)=-1_"^"_"NO DATA FOUND"
"RTN","PSS51P2",37,0)
 Q
"RTN","PSS51P2",38,0)
 ;
"RTN","PSS51P2",39,0)
LOOPDI ;LOOPS ON "DILIST" FROM FILEMAN CALL (USED FOR RETURNING MULTIPLE DRUGS FROM PSSFT)
"RTN","PSS51P2",40,0)
 S PSSTIEN=0 ;TEMP IEN TO ITERATE OVER DILIST
"RTN","PSS51P2",41,0)
 F  S PSSTIEN=$O(^TMP("DILIST",$J,PSSTIEN)) Q:PSSTIEN=""  D
"RTN","PSS51P2",42,0)
 .S PSSIEN2=($P(^TMP("DILIST",$J,PSSTIEN,0),U,1))
"RTN","PSS51P2",43,0)
 .D DIRREAD
"RTN","PSS51P2",44,0)
 Q
"RTN","PSS51P2",45,0)
 ;
"RTN","PSS51P2",46,0)
LOOPDIR ;LOOP FOR A DIRECT READ.  READS ALL IENs FOR ^PSDRUG(
"RTN","PSS51P2",47,0)
 S PSSIEN2=0
"RTN","PSS51P2",48,0)
 F  S PSSIEN2=$O(^PS(51.2,PSSIEN2)) Q:'PSSIEN2  D 
"RTN","PSS51P2",49,0)
 .D DIRALL
"RTN","PSS51P2",50,0)
 Q
"RTN","PSS51P2",51,0)
 ;
"RTN","PSS51P2",52,0)
DIRALL ;TEST FOR PSSFL, PSSPK, BAILS IF CONDITIONS MEET TRUE
"RTN","PSS51P2",53,0)
 I $G(PSSFL),$P($G(^PS(51.2,PSSIEN2,0)),U,5),$P($G(^PS(51.2,PSSIEN2,0)),U,5)'>PSSFL Q
"RTN","PSS51P2",54,0)
 I $G(PSSPK)]"" N PSSZ5,PSSZ6 S PSSZ5=0 F PSSZ6=1:1:$L(PSSPK) Q:PSSZ5  I $P($G(^PS(51.2,PSSIEN2,0)),U,4)[$E(PSSPK,PSSZ6) S PSSZ5=1
"RTN","PSS51P2",55,0)
 I $G(PSSPK)]"",'PSSZ5 Q
"RTN","PSS51P2",56,0)
 D DIRREAD
"RTN","PSS51P2",57,0)
 Q
"RTN","PSS51P2",58,0)
 ;
"RTN","PSS51P2",59,0)
DIRREAD ;MAIN DIRECT READ FOR ENTIRE ROUTINE
"RTN","PSS51P2",60,0)
 S PSSNAM=$P($G(^PS(51.2,PSSIEN2,0)),U,1)
"RTN","PSS51P2",61,0)
 S ^TMP($J,LIST,PSSIEN2,.01)=PSSNAM
"RTN","PSS51P2",62,0)
 S ^TMP($J,LIST,PSSIEN2,1)=$P($G(^PS(51.2,PSSIEN2,0)),U,3)
"RTN","PSS51P2",63,0)
 S PSSTMP=$P($G(^PS(51.2,PSSIEN2,0)),U,4)
"RTN","PSS51P2",64,0)
 I PSSTMP="0" S ^TMP($J,LIST,PSSIEN2,3)=PSSTMP_U_"NATIONAL DRUG FILE ONLY"
"RTN","PSS51P2",65,0)
 I PSSTMP="1" S ^TMP($J,LIST,PSSIEN2,3)=PSSTMP_U_"ALL PACKAGES"
"RTN","PSS51P2",66,0)
 I PSSTMP="" S ^TMP($J,LIST,PSSIEN2,3)=""
"RTN","PSS51P2",67,0)
 S ^TMP($J,LIST,PSSIEN2,4)=$P($G(^PS(51.2,PSSIEN2,0)),U,2)
"RTN","PSS51P2",68,0)
 S ^TMP($J,LIST,PSSIEN2,4.1)=$P($G(^PS(51.2,PSSIEN2,0)),U,7)
"RTN","PSS51P2",69,0)
 I $P($G(^PS(51.2,PSSIEN2,0)),U,5)'="" D
"RTN","PSS51P2",70,0)
 .S X=$$UP^XLFSTR($$FMTE^XLFDT($P($G(^PS(51.2,PSSIEN2,0)),U,5)))
"RTN","PSS51P2",71,0)
 .S ^TMP($J,LIST,PSSIEN2,5)=$P($G(^PS(51.2,PSSIEN2,0)),U,5)_U_X
"RTN","PSS51P2",72,0)
 ELSE  S ^TMP($J,LIST,PSSIEN2,5)=""
"RTN","PSS51P2",73,0)
 N PSSTMP S PSSTMP=$P($G(^PS(51.2,PSSIEN2,0)),U,6)
"RTN","PSS51P2",74,0)
 I PSSTMP="0"!PSSTMP="" S ^TMP($J,LIST,PSSIEN2,6)=PSSTMP_U_"NO"
"RTN","PSS51P2",75,0)
 I PSSTMP="1" D
"RTN","PSS51P2",76,0)
 .S ^TMP($J,LIST,PSSIEN2,6)=PSSTMP_U_"YES"
"RTN","PSS51P2",77,0)
 .S ^TMP($J,LIST,"IV",PSSNAM,PSSIEN2)=""
"RTN","PSS51P2",78,0)
 I PSSTMP="" S ^TMP($J,LIST,PSSIEN2,6)=""
"RTN","PSS51P2",79,0)
 S ^TMP($J,LIST,"B",$P($G(^PS(51.2,PSSIEN2,0)),U,1),PSSIEN2)=""
"RTN","PSS51P2",80,0)
 S PSSBGCNT=PSSBGCNT+1
"RTN","PSS51P2",81,0)
 Q
"RTN","PSS51P2",82,0)
 ;
"RTN","PSS51P2",83,0)
SETSCRN ;Set Screen for inactive Medication Routes
"RTN","PSS51P2",84,0)
 ;Naked reference below refers to ^PS(51.2,+Y,0)
"RTN","PSS51P2",85,0)
 S SCR("S")="S ND=$P($G(^(0)),U,5) I ND=""""!(ND>PSSFL)"
"RTN","PSS51P2",86,0)
 Q
"RTN","PSS51P2",87,0)
 ;
"RTN","PSS51P2",88,0)
NAME(PSSFT,PSSPK,LIST) ;
"RTN","PSS51P2",89,0)
 ;PSSFT - Free Text name in MEDICATION ROUTES file (#51.2).
"RTN","PSS51P2",90,0)
 ;PSSPK - PACKAGE USE field (#3) of the MEDICATION ROUTES file (#51.2).
"RTN","PSS51P2",91,0)
 ;LIST - Subscript of ^TMP array in the form ^TMP($J,LIST,Field Number where Field Number is
"RTN","PSS51P2",92,0)
 ;the Field Number of the data piece being returned.
"RTN","PSS51P2",93,0)
 ;Returns NAME field (#.01), ABBREVIATION field (#1), and INACTIVATION DATE field (#5)
"RTN","PSS51P2",94,0)
 ;of MEDICATION ROUTES file (#51.2).
"RTN","PSS51P2",95,0)
 N DIERR,ZZERR,PSS51P2,SCR,PSS
"RTN","PSS51P2",96,0)
 I $G(LIST)']"" Q
"RTN","PSS51P2",97,0)
 K ^TMP($J,LIST)
"RTN","PSS51P2",98,0)
 I ($G(PSSFT)']"") S ^TMP($J,LIST,0)=-1_"^"_"NO DATA FOUND" Q
"RTN","PSS51P2",99,0)
 ;Naked reference below refers to ^PS(51.2,+Y,0)
"RTN","PSS51P2",100,0)
 S SCR("S")=$S($G(PSSPK)]"":"I $P($G(^(0)),""^"",4)=$G(PSSPK)",1:"")
"RTN","PSS51P2",101,0)
 I PSSFT["??" D LOOP(2) Q
"RTN","PSS51P2",102,0)
 D FIND^DIC(51.2,,"@;.01;1","QP",PSSFT,,"B",SCR("S"),,"")
"RTN","PSS51P2",103,0)
 I +$G(^TMP("DILIST",$J,0))=0 S ^TMP($J,LIST,0)=-1_"^"_"NO DATA FOUND" Q
"RTN","PSS51P2",104,0)
 S ^TMP($J,LIST,0)=+^TMP("DILIST",$J,0)
"RTN","PSS51P2",105,0)
 N PSSXX S PSSXX=0 F  S PSSXX=$O(^TMP("DILIST",$J,PSSXX)) Q:'PSSXX  D
"RTN","PSS51P2",106,0)
 .S PSSIEN=+^TMP("DILIST",$J,PSSXX,0) K ^TMP("PSS51P2",$J) D GETS^DIQ(51.2,+PSSIEN,".01;1;5","IE","^TMP(""PSS51P2"",$J)") S PSS(1)=0
"RTN","PSS51P2",107,0)
 .F  S PSS(1)=$O(^TMP("PSS51P2",$J,51.2,PSS(1))) Q:'PSS(1)  D SETZRO2
"RTN","PSS51P2",108,0)
 K TMP("DILIST",$J),^TMP("PSS51P2",$J)
"RTN","PSS51P2",109,0)
 Q
"RTN","PSS51P2",110,0)
 ;
"RTN","PSS51P2",111,0)
IEN(PSSABBR,LIST) ;
"RTN","PSS51P2",112,0)
 ;PSSABBR - ABBREVIATION field (#1) in MEDICATION ROUTES file (#51.2).
"RTN","PSS51P2",113,0)
 ;LIST - Subscript of ^TMP array in the form ^TMP($J,LIST,Field Number where Field Number is
"RTN","PSS51P2",114,0)
 ;the Field Number of the data piece being returned.
"RTN","PSS51P2",115,0)
 ;Returns NAME field (#.01), ABBREVIATION field (#1), and INACTIVATION DATE field (#5)
"RTN","PSS51P2",116,0)
 ;of MEDICATION ROUTES file (#51.2).
"RTN","PSS51P2",117,0)
 N DIERR,ZZERR,PSS51P2,SCR,PSS
"RTN","PSS51P2",118,0)
 I $G(LIST)']"" Q
"RTN","PSS51P2",119,0)
 K ^TMP($J,LIST)
"RTN","PSS51P2",120,0)
 I ($G(PSSABBR)']"") S ^TMP($J,LIST,0)=-1_"^"_"NO DATA FOUND" Q
"RTN","PSS51P2",121,0)
 D FIND^DIC(51.2,,"@;.01;1","QP",PSSABBR,,"C",,,"")
"RTN","PSS51P2",122,0)
 I +$G(^TMP("DILIST",$J,0))=0 S ^TMP($J,LIST,0)=-1_"^"_"NO DATA FOUND" Q
"RTN","PSS51P2",123,0)
 S ^TMP($J,LIST,0)=+^TMP("DILIST",$J,0)
"RTN","PSS51P2",124,0)
 N PSSXX S PSSXX=0 F  S PSSXX=$O(^TMP("DILIST",$J,PSSXX)) Q:'PSSXX  D
"RTN","PSS51P2",125,0)
 .S PSSIEN=+^TMP("DILIST",$J,PSSXX,0) K ^TMP("PSS51P2",$J) D GETS^DIQ(51.2,+PSSIEN,".01;1;3;4;5;6;4.1","IE","^TMP(""PSS51P2"",$J)") S PSS(1)=0
"RTN","PSS51P2",126,0)
 .F  S PSS(1)=$O(^TMP("PSS51P2",$J,51.2,PSS(1))) Q:'PSS(1)  D SETZRO2
"RTN","PSS51P2",127,0)
 K TMP("DILIST",$J),^TMP("PSS51P2",$J)
"RTN","PSS51P2",128,0)
 Q
"RTN","PSS51P2",129,0)
 ;
"RTN","PSS51P2",130,0)
SETZRO ;
"RTN","PSS51P2",131,0)
 S ^TMP($J,LIST,+PSS(1),.01)=$G(^TMP("PSS51P2",$J,51.2,PSS(1),.01,"I"))
"RTN","PSS51P2",132,0)
 S ^TMP($J,LIST,"B",$G(^TMP("PSS51P2",$J,51.2,PSS(1),.01,"I")),+PSS(1))=""
"RTN","PSS51P2",133,0)
 S ^TMP($J,LIST,+PSS(1),4)=$G(^TMP("PSS51P2",$J,51.2,PSS(1),4,"I"))
"RTN","PSS51P2",134,0)
 S ^TMP($J,LIST,+PSS(1),1)=$G(^TMP("PSS51P2",$J,51.2,PSS(1),1,"I"))
"RTN","PSS51P2",135,0)
 S ^TMP($J,LIST,+PSS(1),3)=$S($G(^TMP("PSS51P2",$J,51.2,PSS(1),3,"I"))="":"",1:^TMP("PSS51P2",$J,51.2,PSS(1),3,"I")_"^"_^TMP("PSS51P2",$J,51.2,PSS(1),3,"E"))
"RTN","PSS51P2",136,0)
 S ^TMP($J,LIST,+PSS(1),5)=$S($G(^TMP("PSS51P2",$J,51.2,PSS(1),5,"I"))="":"",1:^TMP("PSS51P2",$J,51.2,PSS(1),5,"I")_"^"_^TMP("PSS51P2",$J,51.2,PSS(1),5,"E"))
"RTN","PSS51P2",137,0)
 S ^TMP($J,LIST,+PSS(1),6)=$S($G(^TMP("PSS51P2",$J,51.2,PSS(1),6,"I"))="":"",1:^TMP("PSS51P2",$J,51.2,PSS(1),6,"I")_"^"_^TMP("PSS51P2",$J,51.2,PSS(1),6,"E"))
"RTN","PSS51P2",138,0)
 S ^TMP($J,LIST,+PSS(1),4.1)=$G(^TMP("PSS51P2",$J,51.2,PSS(1),4.1,"I"))
"RTN","PSS51P2",139,0)
 Q
"RTN","PSS51P2",140,0)
 ;
"RTN","PSS51P2",141,0)
SETZRO2 ;
"RTN","PSS51P2",142,0)
 S ^TMP($J,LIST,+PSS(1),.01)=$G(^TMP("PSS51P2",$J,51.2,PSS(1),.01,"I"))
"RTN","PSS51P2",143,0)
 S ^TMP($J,LIST,"B",$G(^TMP("PSS51P2",$J,51.2,PSS(1),.01,"I")),+PSS(1))=""
"RTN","PSS51P2",144,0)
 S ^TMP($J,LIST,+PSS(1),1)=$G(^TMP("PSS51P2",$J,51.2,PSS(1),1,"I"))
"RTN","PSS51P2",145,0)
 S ^TMP($J,LIST,+PSS(1),5)=$S($G(^TMP("PSS51P2",$J,51.2,PSS(1),5,"I"))="":"",1:^TMP("PSS51P2",$J,51.2,PSS(1),5,"I")_"^"_^TMP("PSS51P2",$J,51.2,PSS(1),5,"E"))
"RTN","PSS51P2",146,0)
 Q
"RTN","PSS51P2",147,0)
 ;
"RTN","PSS51P2",148,0)
LOOP(PSS) ;
"RTN","PSS51P2",149,0)
 N CNT S CNT=0
"RTN","PSS51P2",150,0)
 S PSSIEN=0 F  S PSSIEN=$O(^PS(51.2,PSSIEN)) Q:'PSSIEN  D @(PSS)
"RTN","PSS51P2",151,0)
 S ^TMP($J,LIST,0)=$S($G(CNT)>0:CNT,1:"-1^NO DATA FOUND")
"RTN","PSS51P2",152,0)
 Q
"RTN","PSS51P2",153,0)
 ;
"RTN","PSS51P2",154,0)
1 ;
"RTN","PSS51P2",155,0)
 S ND=$G(^PS(51.2,+PSSIEN,0))
"RTN","PSS51P2",156,0)
 I +$G(PSSFL)>0 Q:$P($G(ND),"^",5)]""&($P($G(ND),"^",5)'>$G(PSSFL))
"RTN","PSS51P2",157,0)
 I $G(PSSPK)]"" Q:$P($G(ND),"^",4)'=$G(PSSPK)
"RTN","PSS51P2",158,0)
 K ^TMP("PSS51P2",$J) D GETS^DIQ(51.2,+PSSIEN,".01;1;3;4;5;6;4.1","IE","^TMP(""PSS51P2"",$J)") S PSS(1)=0 D
"RTN","PSS51P2",159,0)
 .F  S PSS(1)=$O(^TMP("PSS51P2",$J,51.2,PSS(1))) Q:'PSS(1)  D SETZRO S CNT=CNT+1
"RTN","PSS51P2",160,0)
 Q
"RTN","PSS51P2",161,0)
 ;
"RTN","PSS51P2",162,0)
2 ;
"RTN","PSS51P2",163,0)
 I $G(PSSPK)]"",$P($G(^PS(51.2,+PSSIEN,0)),"^",4)'=$G(PSSPK) Q
"RTN","PSS51P2",164,0)
 K ^TMP("PSS51P2",$J) D GETS^DIQ(51.2,+PSSIEN,".01;1;5","IE","^TMP(""PSS51P2"",$J)") S PSS(1)=0 D
"RTN","PSS51P2",165,0)
 .F  S PSS(1)=$O(^TMP("PSS51P2",$J,51.2,PSS(1))) Q:'PSS(1)  D SETZRO2 S CNT=CNT+1
"RTN","PSS51P2",166,0)
 Q
"RTN","PSS55MIS")
0^4^B4456080^n/a
"RTN","PSS55MIS",1,0)
PSS55MIS ;BIR/TSS - API FOR VARIOUS DATA FROM PHARMACY PATIENT FILE; 5 Sep 03
"RTN","PSS55MIS",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**112**;9/30/97;Build 30
"RTN","PSS55MIS",3,0)
STATUS(PSSFILE,PSSFIELD,LIST) ;
"RTN","PSS55MIS",4,0)
 ;PSSFILE - FILE NUMBER (VALIDATED AGAINST "FILES" LINE-TAG BELOW)
"RTN","PSS55MIS",5,0)
 ;PSSFIELD - FIELD NUMBER FROM FILE
"RTN","PSS55MIS",6,0)
 ;LIST - NAME OF LOCAL ARRAY RETURNED
"RTN","PSS55MIS",7,0)
 ;Returns the set of codes valid for the status field
"RTN","PSS55MIS",8,0)
 S PSSDIY=""
"RTN","PSS55MIS",9,0)
 Q:'$G(PSSFILE)  Q:'$G(PSSFIELD)  Q:$G(LIST)=""
"RTN","PSS55MIS",10,0)
 N PSSTEST S PSSTEST=$$VALID(PSSFILE,PSSFIELD)
"RTN","PSS55MIS",11,0)
 I PSSTEST'>0 S PSSDIY=-1 Q
"RTN","PSS55MIS",12,0)
 D FIELD^DID(PSSFILE,PSSFIELD,"","POINTER",LIST) Q
"RTN","PSS55MIS",13,0)
VALID(PSTFILE,PSTFIELD) ;TEST FOR VALID DATA INPUT FOR PSOFILE AND DIC
"RTN","PSS55MIS",14,0)
 N PSVLOOP,PSVTEST,PSVALID S PSVALID=-1
"RTN","PSS55MIS",15,0)
 F PSVLOOP=1:1 S PSVTEST=$P($T(FILES+PSVLOOP),";;",2)_";;"_$P($T(FILES+PSVLOOP),";;",3) Q:$G(PSVTEST)'>0!(PSVALID=1)  D
"RTN","PSS55MIS",16,0)
 .I PSTFILE=$P(PSVTEST,";;",1) D  Q
"RTN","PSS55MIS",17,0)
 ..I PSTFIELD=$P(PSVTEST,";;",2) S PSVALID=1
"RTN","PSS55MIS",18,0)
 Q PSVALID
"RTN","PSS55MIS",19,0)
 ;
"RTN","PSS55MIS",20,0)
FILES ;ACCESS FILE LIST
"RTN","PSS55MIS",21,0)
 ;;55.06;;28
"RTN","PSS55MIS",22,0)
 ;;55.01;;100
"RTN","PSS55MIS",23,0)
 ;;55.05;;5
"RTN","PSS55MIS",24,0)
 Q
"RTN","PSS55MIS",25,0)
CLINIC(PSSORD,PSSDFN,PSSMED) ;
"RTN","PSS55MIS",26,0)
 ;PSSORD - ORDER NUMBER
"RTN","PSS55MIS",27,0)
 ;PSSDFN - DFN NUMBER
"RTN","PSS55MIS",28,0)
 ;PSSMED - MED TYPE: "U" FOR UNIT DOSE, "I" FOR IV
"RTN","PSS55MIS",29,0)
 N PSSOUT S PSSOUT=""
"RTN","PSS55MIS",30,0)
 Q:'PSSORD
"RTN","PSS55MIS",31,0)
 Q:'PSSDFN
"RTN","PSS55MIS",32,0)
 Q:$G(PSSMED)=""
"RTN","PSS55MIS",33,0)
 S PSSIEN=PSSORD_","_PSSDFN
"RTN","PSS55MIS",34,0)
 K ^TMP($J,"TEMP")
"RTN","PSS55MIS",35,0)
 ;DMS TEST CASES FOR UNIT DOSE: 73,739
"RTN","PSS55MIS",36,0)
 ;TEST CASES FOR IV: 6,1
"RTN","PSS55MIS",37,0)
 I PSSMED="U" D
"RTN","PSS55MIS",38,0)
 .D GETS^DIQ(55.06,PSSIEN,"130","IE","^TMP($J,""TEMP"")")
"RTN","PSS55MIS",39,0)
 .I $G(^TMP($J,"TEMP",55.06,PSSIEN_",",130,"I"))'="" S PSSOUT=$G(^TMP($J,"TEMP",55.06,PSSIEN_",",130,"I"))_"^"_$G(^TMP($J,"TEMP",55.06,PSSIEN_",",130,"E"))
"RTN","PSS55MIS",40,0)
 I PSSMED="I" D
"RTN","PSS55MIS",41,0)
 .D GETS^DIQ(55.01,PSSIEN,"136","IE","^TMP($J,""TEMP"")")
"RTN","PSS55MIS",42,0)
 .I $G(^TMP($J,"TEMP",55.01,PSSIEN_",",136,"I"))'="" S PSSOUT=$G(^TMP($J,"TEMP",55.01,PSSIEN_",",136,"I"))_"^"_$G(^TMP($J,"TEMP",55.01,PSSIEN_",",136,"E"))
"RTN","PSS55MIS",43,0)
 K ^TMP($J,"TEMP")
"RTN","PSS55MIS",44,0)
 Q PSSOUT
"RTN","PSS55MIS",45,0)
 ;
"VER")
8.0^22.0
"BLD",6192,6)
^106
**END**
**END**
