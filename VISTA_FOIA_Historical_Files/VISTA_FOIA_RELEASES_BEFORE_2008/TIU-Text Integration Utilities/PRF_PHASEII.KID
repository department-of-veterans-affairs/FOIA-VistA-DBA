KIDS Distribution saved on Mar 20, 2006@10:19:30
Combined Build for PRF II    RELEASED
**KIDS**:TIU*1.0*184^USR*1.0*27^DG*5.3*554^

**INSTALL NAME**
TIU*1.0*184
"BLD",4999,0)
TIU*1.0*184^TEXT INTEGRATION UTILITIES^0^3060320^y
"BLD",4999,1,0)
^^2^2^3050729^
"BLD",4999,1,1,0)
The description of this build can be found in the National Patch Module 
"BLD",4999,1,2,0)
under patch TIU*1*184.
"BLD",4999,4,0)
^9.64PA^8925^2
"BLD",4999,4,8925,0)
8925
"BLD",4999,4,8925,2,0)
^9.641^8925^1
"BLD",4999,4,8925,2,8925,0)
TIU DOCUMENT  (File-top level)
"BLD",4999,4,8925,2,8925,1,0)
^9.6411^1407^1
"BLD",4999,4,8925,2,8925,1,1407,0)
PRF FLAG ACTION
"BLD",4999,4,8925,222)
y^y^p^^^^n^^n
"BLD",4999,4,8925,224)

"BLD",4999,4,8925.1,0)
8925.1
"BLD",4999,4,8925.1,2,0)
^9.641^8925.1^1
"BLD",4999,4,8925.1,2,8925.1,0)
TIU DOCUMENT DEFINITION  (File-top level)
"BLD",4999,4,8925.1,2,8925.1,1,0)
^9.6411^.15^1
"BLD",4999,4,8925.1,2,8925.1,1,.15,0)
PRF FLAG
"BLD",4999,4,8925.1,222)
y^y^p^^^^n^^n
"BLD",4999,4,8925.1,224)

"BLD",4999,4,"APDD",8925,8925)

"BLD",4999,4,"APDD",8925,8925,1407)

"BLD",4999,4,"APDD",8925.1,8925.1)

"BLD",4999,4,"APDD",8925.1,8925.1,.15)

"BLD",4999,4,"B",8925,8925)

"BLD",4999,4,"B",8925.1,8925.1)

"BLD",4999,"ABPKG")
n
"BLD",4999,"INID")
^n
"BLD",4999,"INIT")
POST^TIUPS184
"BLD",4999,"KRN",0)
^9.67PA^8989.52^19
"BLD",4999,"KRN",.4,0)
.4
"BLD",4999,"KRN",.401,0)
.401
"BLD",4999,"KRN",.402,0)
.402
"BLD",4999,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",4999,"KRN",.402,"NM",1,0)
TIU ENTER/EDIT PRF    FILE #8925^8925^0
"BLD",4999,"KRN",.402,"NM","B","TIU ENTER/EDIT PRF    FILE #8925",1)

"BLD",4999,"KRN",.403,0)
.403
"BLD",4999,"KRN",.5,0)
.5
"BLD",4999,"KRN",.84,0)
.84
"BLD",4999,"KRN",3.6,0)
3.6
"BLD",4999,"KRN",3.8,0)
3.8
"BLD",4999,"KRN",9.2,0)
9.2
"BLD",4999,"KRN",9.8,0)
9.8
"BLD",4999,"KRN",9.8,"NM",0)
^9.68A^33^32
"BLD",4999,"KRN",9.8,"NM",1,0)
TIUPRF^^0^B5321260
"BLD",4999,"KRN",9.8,"NM",2,0)
TIUPRF1^^0^B46123899
"BLD",4999,"KRN",9.8,"NM",3,0)
TIUPRF2^^0^B23001960
"BLD",4999,"KRN",9.8,"NM",4,0)
TIUCNSLT^^0^B33628356
"BLD",4999,"KRN",9.8,"NM",6,0)
TIUPFFIX^^0^B6928359
"BLD",4999,"KRN",9.8,"NM",7,0)
TIUPUTPF^^0^B35898028
"BLD",4999,"KRN",9.8,"NM",8,0)
TIURB2^^0^B37777164
"BLD",4999,"KRN",9.8,"NM",9,0)
TIURC1^^0^B46965745
"BLD",4999,"KRN",9.8,"NM",10,0)
TIURS1^^0^B72987985
"BLD",4999,"KRN",9.8,"NM",11,0)
TIUPS184^^0^B2439016
"BLD",4999,"KRN",9.8,"NM",12,0)
TIURB^^0^B44977489
"BLD",4999,"KRN",9.8,"NM",13,0)
TIUHELP^^0^B13369426
"BLD",4999,"KRN",9.8,"NM",14,0)
TIURD^^0^B45915368
"BLD",4999,"KRN",9.8,"NM",15,0)
TIUSRV^^0^B48467254
"BLD",4999,"KRN",9.8,"NM",16,0)
TIUPEVNT^^0^B40232009
"BLD",4999,"KRN",9.8,"NM",17,0)
TIURE^^0^B29422878
"BLD",4999,"KRN",9.8,"NM",18,0)
TIUPRF3^^0^B1863909
"BLD",4999,"KRN",9.8,"NM",19,0)
TIUPRFL^^0^B24295402
"BLD",4999,"KRN",9.8,"NM",20,0)
TIUFL^^0^B34624803
"BLD",4999,"KRN",9.8,"NM",21,0)
TIUFLD^^0^B38075587
"BLD",4999,"KRN",9.8,"NM",22,0)
TIUFHLP1^^0^B13209699
"BLD",4999,"KRN",9.8,"NM",23,0)
TIUFD^^0^B41470416
"BLD",4999,"KRN",9.8,"NM",24,0)
TIUEDI3^^0^B38405027
"BLD",4999,"KRN",9.8,"NM",25,0)
TIUPUTC^^0^B30729125
"BLD",4999,"KRN",9.8,"NM",26,0)
TIUFLF7^^0^B33656495
"BLD",4999,"KRN",9.8,"NM",27,0)
TIULP^^0^B45549039
"BLD",4999,"KRN",9.8,"NM",28,0)
TIUPNAPI^^0^B27434460
"BLD",4999,"KRN",9.8,"NM",29,0)
TIUSRVP^^0^B45548216
"BLD",4999,"KRN",9.8,"NM",30,0)
TIUSRVP2^^0^B11052340
"BLD",4999,"KRN",9.8,"NM",31,0)
TIUFHA1^^0^B35016847
"BLD",4999,"KRN",9.8,"NM",32,0)
TIUFHA7^^0^B70187398
"BLD",4999,"KRN",9.8,"NM",33,0)
TIUFHA8^^0^B46720896
"BLD",4999,"KRN",9.8,"NM","B","TIUCNSLT",4)

"BLD",4999,"KRN",9.8,"NM","B","TIUEDI3",24)

"BLD",4999,"KRN",9.8,"NM","B","TIUFD",23)

"BLD",4999,"KRN",9.8,"NM","B","TIUFHA1",31)

"BLD",4999,"KRN",9.8,"NM","B","TIUFHA7",32)

"BLD",4999,"KRN",9.8,"NM","B","TIUFHA8",33)

"BLD",4999,"KRN",9.8,"NM","B","TIUFHLP1",22)

"BLD",4999,"KRN",9.8,"NM","B","TIUFL",20)

"BLD",4999,"KRN",9.8,"NM","B","TIUFLD",21)

"BLD",4999,"KRN",9.8,"NM","B","TIUFLF7",26)

"BLD",4999,"KRN",9.8,"NM","B","TIUHELP",13)

"BLD",4999,"KRN",9.8,"NM","B","TIULP",27)

"BLD",4999,"KRN",9.8,"NM","B","TIUPEVNT",16)

"BLD",4999,"KRN",9.8,"NM","B","TIUPFFIX",6)

"BLD",4999,"KRN",9.8,"NM","B","TIUPNAPI",28)

"BLD",4999,"KRN",9.8,"NM","B","TIUPRF",1)

"BLD",4999,"KRN",9.8,"NM","B","TIUPRF1",2)

"BLD",4999,"KRN",9.8,"NM","B","TIUPRF2",3)

"BLD",4999,"KRN",9.8,"NM","B","TIUPRF3",18)

"BLD",4999,"KRN",9.8,"NM","B","TIUPRFL",19)

"BLD",4999,"KRN",9.8,"NM","B","TIUPS184",11)

"BLD",4999,"KRN",9.8,"NM","B","TIUPUTC",25)

"BLD",4999,"KRN",9.8,"NM","B","TIUPUTPF",7)

"BLD",4999,"KRN",9.8,"NM","B","TIURB",12)

"BLD",4999,"KRN",9.8,"NM","B","TIURB2",8)

"BLD",4999,"KRN",9.8,"NM","B","TIURC1",9)

"BLD",4999,"KRN",9.8,"NM","B","TIURD",14)

"BLD",4999,"KRN",9.8,"NM","B","TIURE",17)

"BLD",4999,"KRN",9.8,"NM","B","TIURS1",10)

"BLD",4999,"KRN",9.8,"NM","B","TIUSRV",15)

"BLD",4999,"KRN",9.8,"NM","B","TIUSRVP",29)

"BLD",4999,"KRN",9.8,"NM","B","TIUSRVP2",30)

"BLD",4999,"KRN",19,0)
19
"BLD",4999,"KRN",19,"NM",0)
^9.68A^^
"BLD",4999,"KRN",19.1,0)
19.1
"BLD",4999,"KRN",101,0)
101
"BLD",4999,"KRN",101,"NM",0)
^9.68A^9^8
"BLD",4999,"KRN",101,"NM",1,0)
TIU ACTION MENU LINK^^0
"BLD",4999,"KRN",101,"NM",2,0)
TIU ACTION LINK TO PROBLEMS^^0
"BLD",4999,"KRN",101,"NM",3,0)
TIU ACTION LINK WITH CLIENT RECORD^^0
"BLD",4999,"KRN",101,"NM",4,0)
TIU BROWSE MENU LINK^^0
"BLD",4999,"KRN",101,"NM",6,0)
TIU BROWSE ACTION LINK WITH CLIENT APP^^0
"BLD",4999,"KRN",101,"NM",7,0)
TIU ACTION LINK TO VISIT^^0
"BLD",4999,"KRN",101,"NM",8,0)
TIU BROWSE ACTION REASSIGN^^0
"BLD",4999,"KRN",101,"NM",9,0)
TIU BROWSE ACTION LINK TO PROBLEM^^0
"BLD",4999,"KRN",101,"NM","B","TIU ACTION LINK TO PROBLEMS",2)

"BLD",4999,"KRN",101,"NM","B","TIU ACTION LINK TO VISIT",7)

"BLD",4999,"KRN",101,"NM","B","TIU ACTION LINK WITH CLIENT RECORD",3)

"BLD",4999,"KRN",101,"NM","B","TIU ACTION MENU LINK",1)

"BLD",4999,"KRN",101,"NM","B","TIU BROWSE ACTION LINK TO PROBLEM",9)

"BLD",4999,"KRN",101,"NM","B","TIU BROWSE ACTION LINK WITH CLIENT APP",6)

"BLD",4999,"KRN",101,"NM","B","TIU BROWSE ACTION REASSIGN",8)

"BLD",4999,"KRN",101,"NM","B","TIU BROWSE MENU LINK",4)

"BLD",4999,"KRN",409.61,0)
409.61
"BLD",4999,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",4999,"KRN",771,0)
771
"BLD",4999,"KRN",870,0)
870
"BLD",4999,"KRN",8989.51,0)
8989.51
"BLD",4999,"KRN",8989.52,0)
8989.52
"BLD",4999,"KRN",8994,0)
8994
"BLD",4999,"KRN",8994,"NM",0)
^9.68A^6^6
"BLD",4999,"KRN",8994,"NM",1,0)
TIU ISPRF^^0
"BLD",4999,"KRN",8994,"NM",2,0)
TIU GET PRF ACTIONS^^0
"BLD",4999,"KRN",8994,"NM",3,0)
TIU LINK TO FLAG^^0
"BLD",4999,"KRN",8994,"NM",4,0)
TIU GET DOCUMENT STATUS^^0
"BLD",4999,"KRN",8994,"NM",5,0)
TIU GET PRF TITLE^^0
"BLD",4999,"KRN",8994,"NM",6,0)
TIU GET LINKED PRF NOTES^^0
"BLD",4999,"KRN",8994,"NM","B","TIU GET DOCUMENT STATUS",4)

"BLD",4999,"KRN",8994,"NM","B","TIU GET LINKED PRF NOTES",6)

"BLD",4999,"KRN",8994,"NM","B","TIU GET PRF ACTIONS",2)

"BLD",4999,"KRN",8994,"NM","B","TIU GET PRF TITLE",5)

"BLD",4999,"KRN",8994,"NM","B","TIU ISPRF",1)

"BLD",4999,"KRN",8994,"NM","B","TIU LINK TO FLAG",3)

"BLD",4999,"KRN","B",.4,.4)

"BLD",4999,"KRN","B",.401,.401)

"BLD",4999,"KRN","B",.402,.402)

"BLD",4999,"KRN","B",.403,.403)

"BLD",4999,"KRN","B",.5,.5)

"BLD",4999,"KRN","B",.84,.84)

"BLD",4999,"KRN","B",3.6,3.6)

"BLD",4999,"KRN","B",3.8,3.8)

"BLD",4999,"KRN","B",9.2,9.2)

"BLD",4999,"KRN","B",9.8,9.8)

"BLD",4999,"KRN","B",19,19)

"BLD",4999,"KRN","B",19.1,19.1)

"BLD",4999,"KRN","B",101,101)

"BLD",4999,"KRN","B",409.61,409.61)

"BLD",4999,"KRN","B",771,771)

"BLD",4999,"KRN","B",870,870)

"BLD",4999,"KRN","B",8989.51,8989.51)

"BLD",4999,"KRN","B",8989.52,8989.52)

"BLD",4999,"KRN","B",8994,8994)

"BLD",4999,"QUES",0)
^9.62^^
"BLD",4999,"REQB",0)
^9.611^12^12
"BLD",4999,"REQB",1,0)
TIU*1.0*112^2
"BLD",4999,"REQB",2,0)
TIU*1.0*144^2
"BLD",4999,"REQB",3,0)
TIU*1.0*155^2
"BLD",4999,"REQB",4,0)
TIU*1.0*156^2
"BLD",4999,"REQB",5,0)
TIU*1.0*77^2
"BLD",4999,"REQB",6,0)
TIU*1.0*173^2
"BLD",4999,"REQB",7,0)
TIU*1.0*90^2
"BLD",4999,"REQB",8,0)
TIU*1.0*182^2
"BLD",4999,"REQB",9,0)
TIU*1.0*180^2
"BLD",4999,"REQB",10,0)
TIU*1.0*157^2
"BLD",4999,"REQB",11,0)
TIU*1.0*43^2
"BLD",4999,"REQB",12,0)
TIU*1.0*64^2
"BLD",4999,"REQB","B","TIU*1.0*112",1)

"BLD",4999,"REQB","B","TIU*1.0*144",2)

"BLD",4999,"REQB","B","TIU*1.0*155",3)

"BLD",4999,"REQB","B","TIU*1.0*156",4)

"BLD",4999,"REQB","B","TIU*1.0*157",10)

"BLD",4999,"REQB","B","TIU*1.0*173",6)

"BLD",4999,"REQB","B","TIU*1.0*180",9)

"BLD",4999,"REQB","B","TIU*1.0*182",8)

"BLD",4999,"REQB","B","TIU*1.0*43",11)

"BLD",4999,"REQB","B","TIU*1.0*64",12)

"BLD",4999,"REQB","B","TIU*1.0*77",5)

"BLD",4999,"REQB","B","TIU*1.0*90",7)

"FIA",8925)
TIU DOCUMENT
"FIA",8925,0)
^TIU(8925,
"FIA",8925,0,0)
8925IPs
"FIA",8925,0,1)
y^y^p^^^^n^^n
"FIA",8925,0,10)

"FIA",8925,0,11)

"FIA",8925,0,"RLRO")

"FIA",8925,0,"VR")
1.0^TIU
"FIA",8925,8925)
1
"FIA",8925,8925,1407)

"FIA",8925.1)
TIU DOCUMENT DEFINITION
"FIA",8925.1,0)
^TIU(8925.1,
"FIA",8925.1,0,0)
8925.1I
"FIA",8925.1,0,1)
y^y^p^^^^n^^n
"FIA",8925.1,0,10)

"FIA",8925.1,0,11)

"FIA",8925.1,0,"RLRO")

"FIA",8925.1,0,"VR")
1.0^TIU
"FIA",8925.1,8925.1)
1
"FIA",8925.1,8925.1,.15)

"INIT")
POST^TIUPS184
"KRN",.402,1998,-1)
0^1
"KRN",.402,1998,0)
TIU ENTER/EDIT PRF^3050309.1533^@^8925^^@^3060104
"KRN",.402,1998,"DIAB",2,0,8925,3)
AUTHOR/DICTATOR//^S X=$$PERSNAME^TIULC1($S($D(TIUAUTH):+TIUAUTH,1:+DUZ));T;REQ
"KRN",.402,1998,"DIAB",3,0,8925,7)
EXPECTED COSIGNER//^S X=$G(TIUDCSNR);REQ
"KRN",.402,1998,"DIAB",7,0,8925,2)
REFERENCE DATE//^S X=$$DATE^TIULS($$NOW^XLFDT,"MM/DD/YY@HR:MIN");T
"KRN",.402,1998,"DIAB",7,0,8925,7)
EXPECTED COSIGNER;REQ
"KRN",.402,1998,"DR",1,8925)
.02////^S X=DFN;.03////^S X=$P($G(TIU("VISIT")),U);.07////^S X=$P($G(TIU("EDT")),U);.08////^S X=$P($G(TIU("LDT")),U);1401////^S X=$P($G(TIU("AD#")),U);I '+$G(TIUBY) S Y="@1";I +$P($G(^TIU(8925,+DA,12)),U,5) S Y="@13";
"KRN",.402,1998,"DR",1,8925,1)
1205////^S X=$P($G(TIU("LOC")),U);@13;I +$G(^TIU(8925,+DA,13)) S Y="@14";1301////^S X=$$NOW^TIULC;@14;I +$P($G(^TIU(8925,+DA,12)),U,2) S Y="@1";1202////^S X=$S($D(TIUAUTH):+TIUAUTH,1:+$G(DUZ));@1;I +$G(TIUBY) S Y="@2";
"KRN",.402,1998,"DR",1,8925,2)
I $P($G(^SC(+$G(TIU("LOC")),0)),U,3)="W" S Y="@3";1205////^S X=$P($G(TIU("LOC")),U);S Y="@4";@3;1205//^S X=$P($G(TIU("LOC")),U,2);@4;1301T~//^S X=$$DATE^TIULS($$NOW^XLFDT,"MM/DD/YY@HR:MIN");
"KRN",.402,1998,"DR",1,8925,3)
I +$$DATENOTE^TIULA3($$DATE^TIULS(X,"MM/DD/YY@HR:MIN:SEC"))'>0 S Y="@4";1202R~T~//^S X=$$PERSNAME^TIULC1($S($D(TIUAUTH):+TIUAUTH,1:+DUZ));
"KRN",.402,1998,"DR",1,8925,4)
I +$G(TIUAUTH),(+$P(^TIU(8925,+DA,12),U,2)'=+$G(TIUAUTH)) S TIU("SVC")=$$PROVSVC^TIULV(+$P(^(12),U,2)),TIUAUTH=+$P(^TIU(8925,+DA,12),U,2);@2;1204////^S X=$P($G(^TIU(8925,+DA,12)),U,2);S TIUESNR=X;
"KRN",.402,1998,"DR",1,8925,5)
I +$P($G(^TIU(8925,+DA,13)),U,2) S Y="@5";1302////^S X=DUZ;@5;I +$P($G(^TIU(8925,+DA,12)),U) S Y="@6";1201////^S X=$$NOW^TIULC;@6;S TIURQCS=+$$REQCOSIG^TIULP(+$G(TIUTYP),+DA,+$G(TIUESNR));
"KRN",.402,1998,"DR",1,8925,6)
I 'TIURQCS,($L($P($G(^TIU(8925,+DA,12)),U,8))'>0) S Y="@7";I +TIURQCS S Y="@15";W !!,"No cosignature is required for this author.",!;1208///@;1506///@;S Y="@7";@15;I +$$ISA^USRLM(DUZ,"TRANSCRIPTIONIST") S Y="@8";
"KRN",.402,1998,"DR",1,8925,7)
S TIUDCSNR=$$PERSNAME^TIULC1(+$P($G(TIUPREF),U,9));I TIUDCSNR="UNKNOWN" S Y="@11";1208R~//^S X=$G(TIUDCSNR);K TIUDCSNR;S Y="@9";@11;1208R~;S Y="@9";@8;1208;@9;1506////1;@7;
"KRN",.402,1998,"DR",1,8925,8)
I $G(TIUNEW) S LINKED=$$GETLINK^TIUPRF1(+^TIU(8925,DA,0),DFN,DA) S:'LINKED TIUQUIT=1 K LINKED S:$G(TIUQUIT) Y=0;I +$P($G(TIUPREF),U,8)'>0,($G(^TIU(8925,+DA,17))']"") S Y="@10";1701;@10;K TIUESNR,TIURQCS;
"KRN",.402,1998,"DR",1,8925,9)
I $P($G(^TIU(8925,+DA,13)),U,3)]"" S Y="@12";1303////^S X="D";@12;
"KRN",101,3528,-1)
0^8
"KRN",101,3528,0)
TIU BROWSE ACTION REASSIGN^Reassign^^A^^^^^^^^TEXT INTEGRATION UTILITIES
"KRN",101,3528,1,0)
^^3^3^3050219^
"KRN",101,3528,1,1,0)
Allows authorized users (as defined by your local business rules in ASU)
"KRN",101,3528,1,2,0)
to re-link the current document which has been inappropriately linked
"KRN",101,3528,1,3,0)
to the wrong patient or the wrong visit/admission.
"KRN",101,3528,20)
D REASSIG1^TIURD
"KRN",101,3528,99)
59956,62259
"KRN",101,3600,-1)
0^7
"KRN",101,3600,0)
TIU ACTION LINK TO VISIT^Patient/Visit^^A^^^^^^^^TEXT INTEGRATION UTILITIES
"KRN",101,3600,1,0)
^^4^4^3050228^
"KRN",101,3600,1,1,0)
Allows authorized users to re-link the current document which has been
"KRN",101,3600,1,2,0)
inappropriately linked to the wrong patient or the wrong visit/admission.
"KRN",101,3600,1,3,0)
 
"KRN",101,3600,1,4,0)
Interdisciplinary entries must be detached before they can be re-linked.
"KRN",101,3600,15)
S VALMBCK="R"
"KRN",101,3600,20)
D REASSIGN^TIURD
"KRN",101,3600,99)
57316,37868
"KRN",101,3601,-1)
0^2
"KRN",101,3601,0)
TIU ACTION LINK TO PROBLEMS^Problems^^A^^^^^^^^TEXT INTEGRATION UTILITIES
"KRN",101,3601,1,0)
^^2^2^3050219^
"KRN",101,3601,1,1,0)
Allows authorized users to link documents to problems from the patient's
"KRN",101,3601,1,2,0)
active Problem List in a many-to-many fashion.
"KRN",101,3601,15)

"KRN",101,3601,20)
D LINK^TIURB
"KRN",101,3601,99)
57061,57322
"KRN",101,3602,-1)
0^1
"KRN",101,3602,0)
TIU ACTION MENU LINK^Link ...^^M^^^^^^^^TEXT INTEGRATION UTILITIES
"KRN",101,3602,1,0)
^^5^5^3050219^
"KRN",101,3602,1,1,0)
Allows authorized users to (re)-link documents to either problems,
"KRN",101,3602,1,2,0)
patients/visits, or records in other applications (e.g., Consult Results
"KRN",101,3602,1,3,0)
to Consult Requests, Patient Record Flag Documents to Flags, etc.). Such
"KRN",101,3602,1,4,0)
associations permit a variety of clinically useful "views" of the on-line
"KRN",101,3602,1,5,0)
record.
"KRN",101,3602,2,0)
^101.02A^^0
"KRN",101,3602,4)
26
"KRN",101,3602,10,0)
^101.01PA^3^3
"KRN",101,3602,10,1,0)
3601^^1^
"KRN",101,3602,10,1,"^")
TIU ACTION LINK TO PROBLEMS
"KRN",101,3602,10,2,0)
3600^^3^
"KRN",101,3602,10,2,"^")
TIU ACTION LINK TO VISIT
"KRN",101,3602,10,3,0)
5039^^5^
"KRN",101,3602,10,3,"^")
TIU ACTION LINK WITH CLIENT RECORD
"KRN",101,3602,15)

"KRN",101,3602,20)
S XQORM(0)="AD",XQORM("??")="D LINKHELP^TIUHELP",VALMBCK=""
"KRN",101,3602,24)
I '$G(TIUGLINK)
"KRN",101,3602,26)
W !
"KRN",101,3602,28)
Specify Linkage: 
"KRN",101,3602,99)
59959,66237
"KRN",101,4768,-1)
0^9
"KRN",101,4768,0)
TIU BROWSE ACTION LINK TO PROBLEM^Problems^^A^^^^^^^^TEXT INTEGRATION UTILITIES
"KRN",101,4768,1,0)
^^2^2^3050228^
"KRN",101,4768,1,1,0)
Link the selected document to one or more Problems from the patient's
"KRN",101,4768,1,2,0)
active Problem List.
"KRN",101,4768,20)
D LINK1^TIURB1
"KRN",101,4768,99)
59959,60077
"KRN",101,4769,-1)
0^4
"KRN",101,4769,0)
TIU BROWSE MENU LINK^Link ...^^M^^^^^^^^TEXT INTEGRATION UTILITIES
"KRN",101,4769,1,0)
^101.06^6^6^3050219^^
"KRN",101,4769,1,1,0)
Allows authorized users to (re)-link single documents to either problems,
"KRN",101,4769,1,2,0)
a different patient/visit if current patient/visit is incorrect, or a
"KRN",101,4769,1,3,0)
record in another VistA application (for example, a Consult Result may be
"KRN",101,4769,1,4,0)
linked to a Consult Request, a Patient Record Flag Document to a Flag, and
"KRN",101,4769,1,5,0)
so on). Such associations permit a variety of clinically useful "views" of
"KRN",101,4769,1,6,0)
the on-line record.
"KRN",101,4769,4)
26
"KRN",101,4769,10,0)
^101.01PA^6^6
"KRN",101,4769,10,4,0)
4768^^1^
"KRN",101,4769,10,4,"^")
TIU BROWSE ACTION LINK TO PROBLEM
"KRN",101,4769,10,5,0)
3528^^3^^^Patient/Visit
"KRN",101,4769,10,5,"^")
TIU BROWSE ACTION REASSIGN
"KRN",101,4769,10,6,0)
5040^^5^
"KRN",101,4769,10,6,"^")
TIU BROWSE ACTION LINK WITH CLIENT APP
"KRN",101,4769,15)
K TIUCHNG
"KRN",101,4769,20)
S XQORM(0)="AD",XQORM("??")="D LINKHELP^TIUHELP",VALMBCK=""
"KRN",101,4769,26)
W !
"KRN",101,4769,28)
Specify Linkage: 
"KRN",101,4769,99)
59978,55393
"KRN",101,5039,-1)
0^3
"KRN",101,5039,0)
TIU ACTION LINK WITH CLIENT RECORD^Link to Other Applic^^A^^^^^^^^TEXT INTEGRATION UTILITIES
"KRN",101,5039,1,0)
^^3^3^3050219^
"KRN",101,5039,1,1,0)
Allows authorized users to (re)-link TIU Documents to records in Other
"KRN",101,5039,1,2,0)
Applications. For example, Consult Results may be linked to Consult
"KRN",101,5039,1,3,0)
Requests, Patient Record Flag Documents may be linked to Flags, and so on.
"KRN",101,5039,15)
S VALMBCK="R"
"KRN",101,5039,20)
D CLAPPLNK^TIURD
"KRN",101,5039,24)
I '$G(TIUGLINK)
"KRN",101,5039,99)
59950,51818
"KRN",101,5040,-1)
0^6
"KRN",101,5040,0)
TIU BROWSE ACTION LINK WITH CLIENT APP^Link to Other Applic^^A^^^^^^^^TEXT INTEGRATION UTILITIES
"KRN",101,5040,1,0)
^101.06^4^4^3050219^^
"KRN",101,5040,1,1,0)
Allows authorized users (as defined by your local business rules in ASU)
"KRN",101,5040,1,2,0)
to link or re-link the current document to a record in another 
"KRN",101,5040,1,3,0)
application. For example, Consult Results may be linked to Consult
"KRN",101,5040,1,4,0)
Requests, Patient Record Flag Documents to Flags, etc..
"KRN",101,5040,15)
S VALMBCK="R"
"KRN",101,5040,20)
D FULL^VALM1,CLAPPLN1^TIURD(TIUDA)
"KRN",101,5040,99)
59978,55402
"KRN",8994,2447,-1)
0^1
"KRN",8994,2447,0)
TIU ISPRF^ISPRFTTL^TIUPRF2^1^A^0
"KRN",8994,2447,1,0)
^^2^2^3040428^
"KRN",8994,2447,1,1,0)
This RPC is to check to see if the passed in TIU DOCUMENT TITLE IEN is a 
"KRN",8994,2447,1,2,0)
Patient Record Flag TITLE.
"KRN",8994,2447,2,0)
^8994.02A^1^1
"KRN",8994,2447,2,1,0)
TIUTTL^1^^1^1
"KRN",8994,2447,2,1,1,0)
^^1^1^3040428^
"KRN",8994,2447,2,1,1,1,0)
TIU DOCUMENT TITLE IEN
"KRN",8994,2447,2,"B","TIUTTL",1)

"KRN",8994,2447,2,"PARAMSEQ",1,1)

"KRN",8994,2447,3,0)
^^2^2^3040428^
"KRN",8994,2447,3,1,0)
1 if TIUTTL is a PRF Title
"KRN",8994,2447,3,2,0)
0 if TIUTTL is not a PRF Title
"KRN",8994,2448,-1)
0^2
"KRN",8994,2448,0)
TIU GET PRF ACTIONS^GETACTS^TIUPRF2^2^^0
"KRN",8994,2448,1,0)
^8994.01^2^2^3040429^^^
"KRN",8994,2448,1,1,0)
This RPC gets the Patient Record Flag History Assignments/Actions for a 
"KRN",8994,2448,1,2,0)
Patient/Title Combination.
"KRN",8994,2448,2,0)
^8994.02A^2^2
"KRN",8994,2448,2,1,0)
TIUTTL^1^^1^1
"KRN",8994,2448,2,1,1,0)
^^1^1^3040429^
"KRN",8994,2448,2,1,1,1,0)
TIU DOCUMENT DEFINITION (TITLE) IEN
"KRN",8994,2448,2,2,0)
DFN^1^^1^2
"KRN",8994,2448,2,2,1,0)
^^1^1^3040429^
"KRN",8994,2448,2,2,1,1,0)
Patient Pointer (file 2 IEN)
"KRN",8994,2448,2,"B","DFN",2)

"KRN",8994,2448,2,"B","TIUTTL",1)

"KRN",8994,2448,2,"PARAMSEQ",1,1)

"KRN",8994,2448,2,"PARAMSEQ",2,2)

"KRN",8994,2448,3,0)
^8994.03^4^4^3040429^^^
"KRN",8994,2448,3,1,0)
Returns data in the following format for each Flag Assignment/Action
"KRN",8994,2448,3,2,0)
 
"KRN",8994,2448,3,3,0)
FLAG NAME^FLAG IEN^ACTION NAME^ACTION IEN^ACTION DATE I^ACTION DATE E^TIU 
"KRN",8994,2448,3,4,0)
IEN
"KRN",8994,2449,-1)
0^3
"KRN",8994,2449,0)
TIU LINK TO FLAG^LINK^TIUPRF2^1^^0
"KRN",8994,2449,1,0)
^8994.01^1^1^3040429^^
"KRN",8994,2449,1,1,0)
This RPC is used to link a Progress Note to a Patient Record Flag
"KRN",8994,2449,2,0)
^8994.02A^4^4
"KRN",8994,2449,2,1,0)
TIUIEN^1^^1^1
"KRN",8994,2449,2,1,1,0)
^^1^1^3040428^
"KRN",8994,2449,2,1,1,1,0)
TIU DOCUMENT IEN (8925)
"KRN",8994,2449,2,2,0)
PRFIEN^1^^1^2
"KRN",8994,2449,2,2,1,0)
^^1^1^3040428^
"KRN",8994,2449,2,2,1,1,0)
Flag IEN (26.11 or 26.15)
"KRN",8994,2449,2,3,0)
ACTIENT^1^^1^3
"KRN",8994,2449,2,3,1,0)
^^1^1^3040428^
"KRN",8994,2449,2,3,1,1,0)
PRF Assignment History IEN (26.14)
"KRN",8994,2449,2,4,0)
DFN^1^^1^4
"KRN",8994,2449,2,4,1,0)
^^1^1^3040429^
"KRN",8994,2449,2,4,1,1,0)
Patient IEN (File 2)
"KRN",8994,2449,2,"B","ACTIENT",3)

"KRN",8994,2449,2,"B","DFN",4)

"KRN",8994,2449,2,"B","PRFIEN",2)

"KRN",8994,2449,2,"B","TIUIEN",1)

"KRN",8994,2449,2,"PARAMSEQ",1,1)

"KRN",8994,2449,2,"PARAMSEQ",2,2)

"KRN",8994,2449,2,"PARAMSEQ",3,3)

"KRN",8994,2449,2,"PARAMSEQ",4,4)

"KRN",8994,2450,-1)
0^4
"KRN",8994,2450,0)
TIU GET DOCUMENT STATUS^GETSTAT^TIUPRF2^1^^0
"KRN",8994,2450,1,0)
^8994.01^1^1^3040429^^
"KRN",8994,2450,1,1,0)
This RPC is used to retrieve the Status (8925.6 IEN) of a TIU DOCUMENT.
"KRN",8994,2450,2,0)
^8994.02A^1^1
"KRN",8994,2450,2,1,0)
TIUIEN^1^^1^1
"KRN",8994,2450,2,1,1,0)
^^1^1^3040429^
"KRN",8994,2450,2,1,1,1,0)
TIU DOCUMENT IEN (8925)
"KRN",8994,2450,2,"B","TIUIEN",1)

"KRN",8994,2450,2,"PARAMSEQ",1,1)

"KRN",8994,2450,3,0)
^8994.03^1^1^3040429^^
"KRN",8994,2450,3,1,0)
TIU DOCUMENT STATUS IEN (8925.6)
"KRN",8994,2539,-1)
0^6
"KRN",8994,2539,0)
TIU GET LINKED PRF NOTES^GETNOTES^TIUPRF2^2
"KRN",8994,2539,1,0)
^^2^2^3050829^
"KRN",8994,2539,1,1,0)
Returns list of SIGNED, LINKED PRF notes for given patient, for given
"KRN",8994,2539,1,2,0)
PRF Title
"KRN",8994,2539,2,0)
^8994.02A^3^3
"KRN",8994,2539,2,1,0)
PTDFN^1^^1^1
"KRN",8994,2539,2,1,1,0)
^^1^1^3050728^
"KRN",8994,2539,2,1,1,1,0)
Patient IEN in Patient file
"KRN",8994,2539,2,2,0)
TIUTTL^1^^1^2
"KRN",8994,2539,2,2,1,0)
^^1^1^3050728^
"KRN",8994,2539,2,2,1,1,0)
PRF Title IEN in file 8925.1
"KRN",8994,2539,2,3,0)
REVORDER^1^1^0^3
"KRN",8994,2539,2,3,1,0)
^8994.021^2^2^3050829^^
"KRN",8994,2539,2,3,1,1,0)
Optional.  Boolean flag, with 1 indicating to subscript the list of notes
"KRN",8994,2539,2,3,1,2,0)
in reverse chronological order.  Default is chronological order.
"KRN",8994,2539,2,"B","PTDFN",1)

"KRN",8994,2539,2,"B","REVORDER",3)

"KRN",8994,2539,2,"B","TIUTTL",2)

"KRN",8994,2539,2,"PARAMSEQ",1,1)

"KRN",8994,2539,2,"PARAMSEQ",2,2)

"KRN",8994,2539,2,"PARAMSEQ",3,3)

"KRN",8994,2539,3,0)
^^4^4^3050829^
"KRN",8994,2539,3,1,0)
   TIUY = # of notes
"KRN",8994,2539,3,2,0)
   TIUY(InternalNoteDate) = NoteIEN^Action^ExternalNoteDate^Author
"KRN",8994,2539,3,3,0)
where Internal Note Date is REFERENCE DATE in file 8925, (or
"KRN",8994,2539,3,4,0)
9999999-REFERENCE DATE if REVORDER=1).
"KRN",8994,2540,-1)
0^5
"KRN",8994,2540,0)
TIU GET PRF TITLE^GETTITLE^TIUPRF2^1
"KRN",8994,2540,1,0)
^^2^2^3050728^
"KRN",8994,2540,1,1,0)
Returns IEN of the TIU Note Title in file 8925.1 which is associated
"KRN",8994,2540,1,2,0)
with given flag for given patient.
"KRN",8994,2540,2,0)
^8994.02A^2^2
"KRN",8994,2540,2,1,0)
PTDFN^1^^1^1
"KRN",8994,2540,2,1,1,0)
^^1^1^3050728^
"KRN",8994,2540,2,1,1,1,0)
Patient IEN in Patient file
"KRN",8994,2540,2,2,0)
FLAGID^1^^1^2
"KRN",8994,2540,2,2,1,0)
^^2^2^3050728^
"KRN",8994,2540,2,2,1,1,0)
The unique number for a particular Active Record Flag returned by 
"KRN",8994,2540,2,2,1,2,0)
$$GETACT^DGPFAPI.  See IA #3860.  See also GETFLAG^ORPRF.
"KRN",8994,2540,2,"B","FLAGID",2)

"KRN",8994,2540,2,"B","PTDFN",1)

"KRN",8994,2540,2,"PARAMSEQ",1,1)

"KRN",8994,2540,2,"PARAMSEQ",2,2)

"KRN",8994,2540,3,0)
^^2^2^3050728^
"KRN",8994,2540,3,1,0)
Returns TIUY = TitleIEN^Title,
"KRN",8994,2540,3,2,0)
where Title is the .01 field in file 8925.1
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PKG",193,-1)
1^1
"PKG",193,0)
TEXT INTEGRATION UTILITIES^TIU^Text Integration Utilities 
"PKG",193,20,0)
^9.402P^^
"PKG",193,22,0)
^9.49I^1^1
"PKG",193,22,1,0)
1.0^3010321^3010321^11
"PKG",193,22,1,"PAH",1,0)
184^3060320
"PKG",193,22,1,"PAH",1,1,0)
^^2^2^3060320
"PKG",193,22,1,"PAH",1,1,1,0)
The description of this build can be found in the National Patch Module 
"PKG",193,22,1,"PAH",1,1,2,0)
under patch TIU*1*184.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
32
"RTN","TIUCNSLT")
0^4^B33628356
"RTN","TIUCNSLT",1,0)
TIUCNSLT ; SLC/JER - Patient movement look-up ;1/7/03 [6/11/04 8:34am]
"RTN","TIUCNSLT",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**4,31,109,131,142,144,184**;Jun 20, 1997
"RTN","TIUCNSLT",3,0)
 ; External References
"RTN","TIUCNSLT",4,0)
 ;   DBIA 2324   $$ISA^USRLM
"RTN","TIUCNSLT",5,0)
 ;   DBIA 3473   SEND^GMRCTIU
"RTN","TIUCNSLT",6,0)
 ;   DBIA 3473   GET^GMRCTIU
"RTN","TIUCNSLT",7,0)
 ;   DBIA 3575   ROLLBACK^GMRCTIU1
"RTN","TIUCNSLT",8,0)
GETCNSLT(DFN,TIUCPF,TIUDA,TIUOVR) ; Match consult result
"RTN","TIUCNSLT",9,0)
 ;to an active request
"RTN","TIUCNSLT",10,0)
 ; Call with:
"RTN","TIUCNSLT",11,0)
 ;     [DFN] - patient file entry number
"RTN","TIUCNSLT",12,0)
 ;  [TIUCPF] - flag to indicate clinical procedure (Optional)
"RTN","TIUCNSLT",13,0)
 ;  [TIUDA] - TIU document IEN of consult result (Optional).
"RTN","TIUCNSLT",14,0)
 ;            If TIUDA has a request, return it w/o asking user.
"RTN","TIUCNSLT",15,0)
 ;  [TIUOVR] - flag to override restrictions on selectable requests
"RTN","TIUCNSLT",16,0)
 ;             (Optional).  If not received or received as null, reset
"RTN","TIUCNSLT",17,0)
 ;             according to whether user is in MIS.
"RTN","TIUCNSLT",18,0)
 ;      Note - If DA is defined and TIU document DA has a request,
"RTN","TIUCNSLT",19,0)
 ;             code returns its request instead of asking user.
"RTN","TIUCNSLT",20,0)
 ;   Returns:     TIUY  - Variable pointer to consult request
"RTN","TIUCNSLT",21,0)
 ;                      = -1 if pat has no requests
"RTN","TIUCNSLT",22,0)
 ;                      = 0 if no request is selected
"RTN","TIUCNSLT",23,0)
AGN ; Loop for handling repeated attempts
"RTN","TIUCNSLT",24,0)
 N TIUI,TIUII,TIUER,TIUOK,TIUOUT,TIUX,TIUY,TIUCNT,X
"RTN","TIUCNSLT",25,0)
 I +DFN'>0 S TIUOUT=1 Q 0
"RTN","TIUCNSLT",26,0)
 I +$G(GMRCO) S TIUX=+$G(GMRCO) G GETX
"RTN","TIUCNSLT",27,0)
 ; -- If TIUDA is not defined, try DA for backward
"RTN","TIUCNSLT",28,0)
 ;    compatibility:
"RTN","TIUCNSLT",29,0)
 S TIUDA=$S('$D(TIUDA):+$G(DA),1:+TIUDA)
"RTN","TIUCNSLT",30,0)
 ; -- Ignore TIUDA if it doesn't match pt DFN:
"RTN","TIUCNSLT",31,0)
 I $P($G(^TIU(8925,TIUDA,0)),U,2)'=+DFN S TIUDA=0
"RTN","TIUCNSLT",32,0)
 ; -- If TIUDA or its parent already has a request,
"RTN","TIUCNSLT",33,0)
 ;    return it & don't ask user:
"RTN","TIUCNSLT",34,0)
 I +$P($G(^TIU(8925,TIUDA,14)),U,5) S TIUX=+$P($G(^(14)),U,5) G GETX
"RTN","TIUCNSLT",35,0)
 I +$$ISADDNDM^TIULC1(TIUDA) S TIUX=+$$DADCR(TIUDA) G:+TIUX>0 GETX
"RTN","TIUCNSLT",36,0)
 ; -- If override flag is null or is not defined, set it according to
"RTN","TIUCNSLT",37,0)
 ;    user's membership in MIS:
"RTN","TIUCNSLT",38,0)
 S TIUOVR=$S($G(TIUOVR)="":+$$ISA^USRLM(DUZ,"MEDICAL INFORMATION SECTION"),1:+TIUOVR)
"RTN","TIUCNSLT",39,0)
 D SEND^GMRCTIU(DFN,$G(TIUOVR),$G(TIUCPF))
"RTN","TIUCNSLT",40,0)
 ; If no consult requests for patient, then quit with -1
"RTN","TIUCNSLT",41,0)
 I $S($G(^TMP("GMRCR",$J,"TIU",1,0))["No Consults":1,'$D(^TMP("GMRCR",$J,"TIU")):1,1:0) D  Q -1
"RTN","TIUCNSLT",42,0)
 . W !!,$C(7),"No CONSULT REQUESTS to Result for ",$P($G(^DPT(DFN,0)),U),".",!
"RTN","TIUCNSLT",43,0)
 S (TIUCNT,TIUI)=0 F  S TIUI=+$O(^TMP("GMRCR",$J,"TIU",TIUI)) Q:+TIUI'>0  D
"RTN","TIUCNSLT",44,0)
 . S TIUCNT=+$G(TIUCNT)+1
"RTN","TIUCNSLT",45,0)
 W !,"You must link this Result to a Consult Request...",!
"RTN","TIUCNSLT",46,0)
 D  I +TIUER Q:+$G(TIUOUT) 0  G AGN
"RTN","TIUCNSLT",47,0)
 . W !,"The following CONSULT REQUEST"
"RTN","TIUCNSLT",48,0)
 . W $S(+TIUCNT>1:"(S) are",1:" is")," available:"
"RTN","TIUCNSLT",49,0)
 . S (TIUER,TIUOK,TIUI)=0
"RTN","TIUCNSLT",50,0)
 . F  S TIUI=$O(^TMP("GMRCR",$J,"TIU",TIUI)) Q:+TIUI'>0!+TIUER!+TIUOK  D
"RTN","TIUCNSLT",51,0)
 . . S TIUII=TIUI,TIUX=$G(^TMP("GMRCR",$J,"TIU",TIUI,0))
"RTN","TIUCNSLT",52,0)
 . . D WRITE I '(TIUI#5) D BREAK
"RTN","TIUCNSLT",53,0)
 . Q:$D(TIUOUT)
"RTN","TIUCNSLT",54,0)
 . I +TIUER S TIUOUT=1 Q
"RTN","TIUCNSLT",55,0)
 . I TIUII#5 D BREAK Q:$D(TIUOUT)
"RTN","TIUCNSLT",56,0)
 . I +TIUER S TIUOUT=1 Q
"RTN","TIUCNSLT",57,0)
 . S TIUX=$O(^TMP("GMRCR",$J,"TIU","B",+TIUOK,0))
"RTN","TIUCNSLT",58,0)
 . ;,^DISV(DUZ,"^GMR(123,",DFN)=+TIUX
"RTN","TIUCNSLT",59,0)
 . W "  ",+TIUX
"RTN","TIUCNSLT",60,0)
GETX S TIUY=+TIUX_";GMR(123,"
"RTN","TIUCNSLT",61,0)
 Q $G(TIUY)
"RTN","TIUCNSLT",62,0)
BREAK ; Handle prompting
"RTN","TIUCNSLT",63,0)
 W !,"CHOOSE 1-",TIUII W:$D(^TMP("GMRCR",$J,"TIU",TIUII+1,0)) !,"<RETURN> TO CONTINUE",!,"OR '^' TO QUIT" W ": " R X:DTIME
"RTN","TIUCNSLT",64,0)
 I $S('$T!(X["^"):1,X=""&'$D(^TMP("GMRCR",$J,"TIU",TIUII+1)):1,1:0) S TIUER=1 Q
"RTN","TIUCNSLT",65,0)
 I X="" Q
"RTN","TIUCNSLT",66,0)
 I X'=+X!'$D(^TMP("GMRCR",$J,"TIU",+X)) W !!,$C(7),"INVALID RESPONSE",! G BREAK
"RTN","TIUCNSLT",67,0)
 S TIUOK=X
"RTN","TIUCNSLT",68,0)
 Q
"RTN","TIUCNSLT",69,0)
DADCR(DA) ; Get the Consult request associated with the parent record
"RTN","TIUCNSLT",70,0)
 N TIUDADA,TIUY S TIUDADA=$P($G(^TIU(8925,+DA,0)),U,6)
"RTN","TIUCNSLT",71,0)
 S TIUY=$P($G(^TIU(8925,TIUDADA,14)),U,5)
"RTN","TIUCNSLT",72,0)
 Q TIUY
"RTN","TIUCNSLT",73,0)
WRITE W !,TIUX
"RTN","TIUCNSLT",74,0)
 Q
"RTN","TIUCNSLT",75,0)
POST(TIUDA,STATUS) ; Post status updates to Consult Tracking
"RTN","TIUCNSLT",76,0)
 N GMRCDA,DA,TIUAUTH S GMRCDA=+$P($G(^TIU(8925,+TIUDA,14)),U,5)
"RTN","TIUCNSLT",77,0)
 I +GMRCDA'>0 Q
"RTN","TIUCNSLT",78,0)
 S TIUAUTH=$P($G(^TIU(8925,TIUDA,12)),U,2)
"RTN","TIUCNSLT",79,0)
 D GET^GMRCTIU(GMRCDA,TIUDA,STATUS,TIUAUTH)
"RTN","TIUCNSLT",80,0)
 Q 
"RTN","TIUCNSLT",81,0)
ISCNSLT(TIUY,TITLE) ; Boolean RPC to evaluate whether TITLE is a CONSULT
"RTN","TIUCNSLT",82,0)
 N TIUCLASS
"RTN","TIUCNSLT",83,0)
 S TIUCLASS=+$$CLASS
"RTN","TIUCNSLT",84,0)
 I +TIUCLASS'>0 S TIUY=0 Q
"RTN","TIUCNSLT",85,0)
 S TIUY=+$$ISA^TIULX(TITLE,TIUCLASS)
"RTN","TIUCNSLT",86,0)
 Q
"RTN","TIUCNSLT",87,0)
CHANGE(TIUDA,TIUCPF,TIUNOCS) ; Re-direct the TIU Document to a different CT Record
"RTN","TIUCNSLT",88,0)
 ; Passes back TIUNOCS=-1 if pt has no requests or none is selected
"RTN","TIUCNSLT",89,0)
 N DA,DFN,DIE,DR,GMRCO,GMRCSTAT,GMRCVP,TIUD0,TIUD14
"RTN","TIUCNSLT",90,0)
 S TIUD0=$G(^TIU(8925,TIUDA,0)),TIUD14=$G(^(14))
"RTN","TIUCNSLT",91,0)
 S DFN=$P(TIUD0,U,2),GMRCO=$P(TIUD14,U,5)
"RTN","TIUCNSLT",92,0)
 Q:+DFN'>0
"RTN","TIUCNSLT",93,0)
 I GMRCO'="" D ROLLBACK(TIUDA) K GMRCO ;P144
"RTN","TIUCNSLT",94,0)
CHAGN S DA=TIUDA,TIUNOCS=0
"RTN","TIUCNSLT",95,0)
 W ! S GMRCVP=+$$GETCNSLT(DFN,$G(TIUCPF))_";GMR(123,"
"RTN","TIUCNSLT",96,0)
 I +GMRCVP=0 W !!,$C(7),"You must select a Consult Request...Restoring record."
"RTN","TIUCNSLT",97,0)
 I +GMRCVP'>0 D RETREAT(TIUDA,TIUD14) S TIUPOP=1,TIUNOCS=-1 Q  ;P144
"RTN","TIUCNSLT",98,0)
 S DIE=8925,DA=TIUDA,DR="1405////^S X=GMRCVP" D ^DIE
"RTN","TIUCNSLT",99,0)
 D UPDTADD(TIUDA,GMRCVP)
"RTN","TIUCNSLT",100,0)
 S GMRCO=+GMRCVP,GMRCSTAT=$S($P(TIUD0,U,5)>6:"COMPLETED",1:"INCOMPLETE")
"RTN","TIUCNSLT",101,0)
 D POST(TIUDA,GMRCSTAT)
"RTN","TIUCNSLT",102,0)
 Q
"RTN","TIUCNSLT",103,0)
RETREAT(DA,TIUD14) ; If Pt has no requests, retreat gracefully
"RTN","TIUCNSLT",104,0)
 N DIE,DR,GMRCO,GMRCSTAT
"RTN","TIUCNSLT",105,0)
 S DIE=8925,DR="1405////^S X=$P(TIUD14,U,5)" D ^DIE
"RTN","TIUCNSLT",106,0)
 S GMRCO=+$P(TIUD14,U,5)
"RTN","TIUCNSLT",107,0)
 S GMRCSTAT=$S($P(TIUD0,U,5)>6:"COMPLETED",1:"INCOMPLETE")
"RTN","TIUCNSLT",108,0)
 D POST(TIUDA,GMRCSTAT)
"RTN","TIUCNSLT",109,0)
 Q
"RTN","TIUCNSLT",110,0)
UPDTADD(TIUDA,TIUCVP) ; Addenda for re-linked original are updated
"RTN","TIUCNSLT",111,0)
 ;Update TIU(8925 ONLY.  GMR(123 doesn't track individual adda
"RTN","TIUCNSLT",112,0)
 I $$HASADDEN^TIULC1(+TIUDA) D
"RTN","TIUCNSLT",113,0)
 . N DA
"RTN","TIUCNSLT",114,0)
 . S DA=0 F  S DA=$O(^TIU(8925,"DAD",+TIUDA,DA)) Q:+DA'>0  D
"RTN","TIUCNSLT",115,0)
 . . N DR,DIE
"RTN","TIUCNSLT",116,0)
 . . I '+$$ISADDNDM^TIULC1(+DA) Q
"RTN","TIUCNSLT",117,0)
 . . S DR="1405////^S X=TIUCVP"
"RTN","TIUCNSLT",118,0)
 . . S DIE=8925 D ^DIE
"RTN","TIUCNSLT",119,0)
 . . D ^DIE
"RTN","TIUCNSLT",120,0)
 Q
"RTN","TIUCNSLT",121,0)
ROLLBACK(TIUDA) ; Roll back CT Record when TIU changes require it
"RTN","TIUCNSLT",122,0)
 N GMRCDA,DIE,DR,DA S GMRCDA=+$P($G(^TIU(8925,TIUDA,14)),U,5)
"RTN","TIUCNSLT",123,0)
 I +GMRCDA>0 D ROLLBACK^GMRCTIU1(GMRCDA,TIUDA) ;P144
"RTN","TIUCNSLT",124,0)
 S DIE="^TIU(8925,",DA=TIUDA,DR="1405///@" D ^DIE
"RTN","TIUCNSLT",125,0)
 Q
"RTN","TIUCNSLT",126,0)
CLASS() ; What is the TIU Class (or Document Class) for CONSULTS
"RTN","TIUCNSLT",127,0)
 N GMRCY
"RTN","TIUCNSLT",128,0)
 S GMRCY=+$O(^TIU(8925.1,"B","CONSULTS",0))
"RTN","TIUCNSLT",129,0)
 I +GMRCY>0,$S($P($G(^TIU(8925.1,+GMRCY,0)),U,4)="CL":0,$P($G(^(0)),U,4)="DC":0,1:1) S GMRCY=0
"RTN","TIUCNSLT",130,0)
 Q GMRCY
"RTN","TIUCNSLT",131,0)
REMCNSLT(TIUDA) ;Remove link to consult if there is one ;*171
"RTN","TIUCNSLT",132,0)
 ;TIUDA is a TIU record number
"RTN","TIUCNSLT",133,0)
 N TIUTYPE,TIUDELX
"RTN","TIUCNSLT",134,0)
 S TIUTYPE=+$G(^TIU(8925,+TIUDA,0))
"RTN","TIUCNSLT",135,0)
 S TIUDELX=$$DELETE^TIULC1(TIUTYPE)
"RTN","TIUCNSLT",136,0)
 I TIUDELX]"" X TIUDELX
"RTN","TIUCNSLT",137,0)
 Q
"RTN","TIUCNSLT",138,0)
CONSCT(TIUDA,TIUOTTL,TIUNTTL) ;
"RTN","TIUCNSLT",139,0)
 ;non cons title to cons title - already handled
"RTN","TIUCNSLT",140,0)
 ;cons title to cons title - already handled
"RTN","TIUCNSLT",141,0)
 ;cons title to non cons title
"RTN","TIUCNSLT",142,0)
 N TIUCLASS
"RTN","TIUCNSLT",143,0)
 S TIUCLASS=$$CLASS^TIUCNSLT()
"RTN","TIUCNSLT",144,0)
 I +$$ISA^TIULX(TIUOTTL,TIUCLASS),'+$$ISA^TIULX(TIUNTTL,TIUCLASS) D
"RTN","TIUCNSLT",145,0)
 . W !,"The Title you selected is not a Consults Title."
"RTN","TIUCNSLT",146,0)
 . W !,"  The note is currently linked to a Consults Request,"
"RTN","TIUCNSLT",147,0)
 . W !,"  but will be disassociated when the title is changed"
"RTN","TIUCNSLT",148,0)
 . W !,"  to a non Consults Title.",!
"RTN","TIUCNSLT",149,0)
 . W !,"Do you want to continue with this Change Title Action?"
"RTN","TIUCNSLT",150,0)
 . I +$$READ^TIUU("YO",,"N")'>0 S TIUQUIT=1
"RTN","TIUCNSLT",151,0)
 . I $G(TIUQUIT)=1 W !,"Title not changed." Q
"RTN","TIUCNSLT",152,0)
 . D REMCNSLT(+TIUDA)
"RTN","TIUCNSLT",153,0)
 Q
"RTN","TIUCNSLT",154,0)
CNSCTGUI(TIUDA,TIUOTTL,TIUNTTL) ;
"RTN","TIUCNSLT",155,0)
 ;non cons title to cons title - already handled
"RTN","TIUCNSLT",156,0)
 ;cons title to cons title - already handled
"RTN","TIUCNSLT",157,0)
 ;cons title to non cons title
"RTN","TIUCNSLT",158,0)
 N TIUCLASS
"RTN","TIUCNSLT",159,0)
 S TIUCLASS=$$CLASS^TIUCNSLT()
"RTN","TIUCNSLT",160,0)
 I +$$ISA^TIULX(TIUOTTL,TIUCLASS),'+$$ISA^TIULX(TIUNTTL,TIUCLASS) D
"RTN","TIUCNSLT",161,0)
 . ;Assume the confirmation has been taken care of already
"RTN","TIUCNSLT",162,0)
 . D REMCNSLT(+TIUDA)
"RTN","TIUCNSLT",163,0)
 Q
"RTN","TIUEDI3")
0^24^B38405027
"RTN","TIUEDI3",1,0)
TIUEDI3 ; SLC/MAM - Additional Edit Code ;4/19/05
"RTN","TIUEDI3",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**100,113,184**;Jun 20, 1997
"RTN","TIUEDI3",3,0)
 ;
"RTN","TIUEDI3",4,0)
GETRECNW(DFN,TIU,TIUTYP1,TIUNEW,TIUDPRM,TIUINQ,PERSON,EDIT) ; New GETREC.
"RTN","TIUEDI3",5,0)
 ;  Code rewritten from the old GETREC^TIUEDI1.
"RTN","TIUEDI3",6,0)
 ;  GETREC^TIUEDI1 now calls this code.
"RTN","TIUEDI3",7,0)
 ;  New parameters: Left out TIUCREAT since we always used it as 1.
"RTN","TIUEDI3",8,0)
 ;                  Added PERSON and EDIT. 
"RTN","TIUEDI3",9,0)
 ;  Can be called directly, or via GETREC^TIUEDI1 for
"RTN","TIUEDI3",10,0)
 ;backward compatibility. GETREC^TIUEDI1 uses OLD parameters.
"RTN","TIUEDI3",11,0)
 ;  There are 3 functional differences between GETRECNW and the old 
"RTN","TIUEDI3",12,0)
 ;GETREC: First, GETRECNW no longer does RETRY since there should no 
"RTN","TIUEDI3",13,0)
 ;longer be editable entries with no time in the visit field.
"RTN","TIUEDI3",14,0)
 ;Second, if user when creating new docmt is asked if user wants
"RTN","TIUEDI3",15,0)
 ;to edit existing docmt instead, and user says no, and user
"RTN","TIUEDI3",16,0)
 ;cannot create a new docmt, then user is no longer given the
"RTN","TIUEDI3",17,0)
 ;existing record to addend.  User must use a separate addend action.
"RTN","TIUEDI3",18,0)
 ;Third, because code is restructured, code no longer quits before
"RTN","TIUEDI3",19,0)
 ;creating a new docmt if GETRECNW is called with DUOUT, etc defined.
"RTN","TIUEDI3",20,0)
 ;So quit before calling GETRECNW if DUOUT, etc.
"RTN","TIUEDI3",21,0)
 ; Returns document record DA, where DA is:
"RTN","TIUEDI3",22,0)
 ;   new docmt for user to continue entering, or
"RTN","TIUEDI3",23,0)
 ;   existing docmt for user to edit or addend.
"RTN","TIUEDI3",24,0)
 ; If called by upload, DA is:
"RTN","TIUEDI3",25,0)
 ;   new docmt to continue entering, or
"RTN","TIUEDI3",26,0)
 ;   existing docmt for text replacement or addendum.
"RTN","TIUEDI3",27,0)
 ;
"RTN","TIUEDI3",28,0)
 ; Call with:
"RTN","TIUEDI3",29,0)
 ; DFN, TIU array, TIUTYP1 are REQUIRED.
"RTN","TIUEDI3",30,0)
 ;    [DFN] --> Patient IFN.
"RTN","TIUEDI3",31,0)
 ;    [TIU] --> Visit info array
"RTN","TIUEDI3",32,0)
 ;              References TIU("VSTR") = LOC;VDT;VTYP
"RTN","TIUEDI3",33,0)
 ;                         TIU("VISIT") = Visit File IFN
"RTN","TIUEDI3",34,0)
 ;                         TIU("LOC")
"RTN","TIUEDI3",35,0)
 ;                         TIU("VLOC")
"RTN","TIUEDI3",36,0)
 ;                         TIU("STOP") = mark to defer workload
"RTN","TIUEDI3",37,0)
 ; [TIUTYP1] --> Title info variable of form:
"RTN","TIUEDI3",38,0)
 ;              TIUTYP1 = 1^title DA^title Name, where the 1
"RTN","TIUEDI3",39,0)
 ;              is just style to imitate XQORNOD
"RTN","TIUEDI3",40,0)
 ; [TIUNEW] --> flag, passed back with
"RTN","TIUEDI3",41,0)
 ;              TIUNEW = 1 if returned docmt is new
"RTN","TIUEDI3",42,0)
 ;              TIUNEW = 0 if returned docmt already existed,
"RTN","TIUEDI3",43,0)
 ;              timeout, etc
"RTN","TIUEDI3",44,0)
 ;
"RTN","TIUEDI3",45,0)
 ;[TIUDPRM] --> Docmt param array where
"RTN","TIUEDI3",46,0)
 ;              $P($G(TIUDPRM(0)),U,10), = 1 if
"RTN","TIUEDI3",47,0)
 ;              more than ONE record/visit is allowed.
"RTN","TIUEDI3",48,0)
 ;              If TIUDPRM not received, don't worry about
"RTN","TIUEDI3",49,0)
 ;              creating multiple documents
"RTN","TIUEDI3",50,0)
 ; [TIUINQ] --> Ask user flag, where
"RTN","TIUEDI3",51,0)
 ;              TIUINQ = 1: ask re edit/addend existing docmt
"RTN","TIUEDI3",52,0)
 ;              (Interactive List Manager options, TRY docmt def)
"RTN","TIUEDI3",53,0)
 ;              TIUINQ = 0: don't ask (Upload & GUI options)
"RTN","TIUEDI3",54,0)
 ; [PERSON] --> IFN of person asking to edit/create docmt,
"RTN","TIUEDI3",55,0)
 ;              or for upload, = author of document
"RTN","TIUEDI3",56,0)
 ;              If not received, assumed to be DUZ.
"RTN","TIUEDI3",57,0)
 ;   [EDIT] --> flag, passed back with EDIT = 1 if returned
"RTN","TIUEDI3",58,0)
 ;              PREEXISTING docmt can be edited by PERSON. If
"RTN","TIUEDI3",59,0)
 ;              preexisting docmt returned and 'EDIT, then
"RTN","TIUEDI3",60,0)
 ;              docmt cannot be edited by person.
"RTN","TIUEDI3",61,0)
 N TIUVSTR,MULTOK,DA,TLFULL,XISONE
"RTN","TIUEDI3",62,0)
 N EDABLEDA,YESDOIT ;10/3/00
"RTN","TIUEDI3",63,0)
 N TIUTYPDA,TIUTYPNM
"RTN","TIUEDI3",64,0)
 I '$G(PERSON) S PERSON=DUZ
"RTN","TIUEDI3",65,0)
 S TIUVSTR=TIU("VSTR")
"RTN","TIUEDI3",66,0)
 ; -- If just testing a document definition (TRY) rather than
"RTN","TIUEDI3",67,0)
 ;    doing a real note, skip inquiry into existing notes: --
"RTN","TIUEDI3",68,0)
 I +$G(NOSAVE) S DA=$$CREATREC(DFN,.TIU,TIUTYP1),TIUNEW=1 G GETNWX
"RTN","TIUEDI3",69,0)
 ; --  MULTOK: More than ONE record/visit is OK (param permits,
"RTN","TIUEDI3",70,0)
 ;             or didn't care enough to send the parameter)
"RTN","TIUEDI3",71,0)
 ;     TLFULL: Only 1 docmt allowed, and it
"RTN","TIUEDI3",72,0)
 ;                already exists on this title/pt/vst --
"RTN","TIUEDI3",73,0)
 I '$D(TIUDPRM(0)) S MULTOK=1
"RTN","TIUEDI3",74,0)
 E  S MULTOK=+$P(TIUDPRM(0),U,10)
"RTN","TIUEDI3",75,0)
 S (TIUNEW,EDIT,DA,TLFULL,EDABLEDA)=0
"RTN","TIUEDI3",76,0)
 S TIUTYPDA=$P(TIUTYP1,U,2),TIUTYPNM=$P(TIUTYP1,U,3)
"RTN","TIUEDI3",77,0)
 S XISONE=$$EXIST(DFN,TIUTYPDA,TIUVSTR)
"RTN","TIUEDI3",78,0)
 I 'MULTOK,XISONE S TLFULL=1
"RTN","TIUEDI3",79,0)
 ; -- Find existing editable docmts for patient, title, & visit:--
"RTN","TIUEDI3",80,0)
 S EDABLEDA=+$$EXIST(DFN,TIUTYPDA,TIUVSTR,1,PERSON)
"RTN","TIUEDI3",81,0)
 ; -- If there are NO such docmts,
"RTN","TIUEDI3",82,0)
 ;    then create new if title not full,
"RTN","TIUEDI3",83,0)
 ;    or return existing [NONeditable] for addendum [if user wants]: --
"RTN","TIUEDI3",84,0)
 I 'EDABLEDA D  G GETNWX
"RTN","TIUEDI3",85,0)
 . I 'TLFULL S DA=$$CREATREC(DFN,.TIU,TIUTYP1),TIUNEW=1 Q
"RTN","TIUEDI3",86,0)
 . I +$G(TIUINQ) D  Q
"RTN","TIUEDI3",87,0)
 . . W !!,"There is already a ",TIUTYPNM,".",!
"RTN","TIUEDI3",88,0)
 . . W "Only ONE record of this type per Visit is allowed...",!
"RTN","TIUEDI3",89,0)
 . . S YESDOIT=+$$READ^TIUU("Y"," Would you like to addend the existing record","NO")
"RTN","TIUEDI3",90,0)
 . . I YESDOIT S DA=XISONE
"RTN","TIUEDI3",91,0)
 . I '+$G(TIUINQ) S DA=XISONE
"RTN","TIUEDI3",92,0)
 . Q
"RTN","TIUEDI3",93,0)
 ; -- If there ARE such docmts, then
"RTN","TIUEDI3",94,0)
 ;      If title is full, return existing docmt for edit.
"RTN","TIUEDI3",95,0)
 ;      If title is NOT full, return existing docmt for edit,
"RTN","TIUEDI3",96,0)
 ;        or ask user.
"RTN","TIUEDI3",97,0)
 I EDABLEDA D  G GETNWX
"RTN","TIUEDI3",98,0)
 . I TLFULL D:+$G(TIUINQ)  S DA=EDABLEDA,EDIT=1 Q
"RTN","TIUEDI3",99,0)
 . . W !!,"There is already a ",TIUTYPNM," which you may edit."
"RTN","TIUEDI3",100,0)
 . . W !,"Only ONE record of this type per Visit is allowed...",!
"RTN","TIUEDI3",101,0)
 . . W "Opening the existing record"
"RTN","TIUEDI3",102,0)
 . . S TIUCHNG("EXIST")=1
"RTN","TIUEDI3",103,0)
 . I 'TLFULL D  Q
"RTN","TIUEDI3",104,0)
 . . I '+$G(TIUINQ) S DA=EDABLEDA,EDIT=1 Q
"RTN","TIUEDI3",105,0)
 . . W !!,"There is already a ",TIUTYPNM," which you may edit."
"RTN","TIUEDI3",106,0)
 . . S YESDOIT=+$$INQUIRE ; "Create new anyway?"
"RTN","TIUEDI3",107,0)
 . . I $D(DUOUT)!$D(DTOUT)!$D(DIROUT) Q
"RTN","TIUEDI3",108,0)
 . . I YESDOIT S DA=$$CREATREC(DFN,.TIU,TIUTYP1),TIUNEW=1 Q
"RTN","TIUEDI3",109,0)
 . . W !!,"Okay, I'll open the existing record then!"
"RTN","TIUEDI3",110,0)
 . . S DA=EDABLEDA,EDIT=1,TIUCHNG("EXIST")=1
"RTN","TIUEDI3",111,0)
GETNWX ;
"RTN","TIUEDI3",112,0)
 I TIUNEW,'DA S TIUNEW=0
"RTN","TIUEDI3",113,0)
 Q +$G(DA)
"RTN","TIUEDI3",114,0)
 ;
"RTN","TIUEDI3",115,0)
EXIST(DFN,TIUTYPDA,TIUVSTR,REQEDIT,PERSON) ; If a docmt already
"RTN","TIUEDI3",116,0)
 ;EXISTS for the given patient, title, and visit, then return it.
"RTN","TIUEDI3",117,0)
 ; Ignore: - docmts of status deleted or retracted
"RTN","TIUEDI3",118,0)
 ;         - all docmts if run across a docmt w/ requesting pkg
"RTN","TIUEDI3",119,0)
 ;         - all docmts if Title is PRF Title
"RTN","TIUEDI3",120,0)
 ;         - I REQEDIT, then also ignore docmts PERSON cannot edit.
"RTN","TIUEDI3",121,0)
 ; If there are more than one, get the smallest DA.
"RTN","TIUEDI3",122,0)
 ; Receives TIUVSTR = LOC;VDT;VTYP
"RTN","TIUEDI3",123,0)
 ; Needs TIUTYPDA = title DA
"RTN","TIUEDI3",124,0)
 ; REQEDIT & PERSON are optional
"RTN","TIUEDI3",125,0)
 N REQUEST,DA,TIUI,STATUS,RETRY
"RTN","TIUEDI3",126,0)
 S REQEDIT=+$G(REQEDIT)
"RTN","TIUEDI3",127,0)
 I '$G(PERSON) S PERSON=DUZ
"RTN","TIUEDI3",128,0)
 S (REQUEST,TIUI,DA)=0
"RTN","TIUEDI3",129,0)
 I $$ISPFTTL^TIUPRFL(TIUTYPDA) G EXISTEX
"RTN","TIUEDI3",130,0)
LOOP ; -- Find existing docmt for given patient, title, & visit:--
"RTN","TIUEDI3",131,0)
 F  S TIUI=+$O(^TIU(8925,"APTLD",DFN,TIUTYPDA,TIUVSTR,TIUI)) Q:'TIUI  D  Q:REQUEST  Q:DA
"RTN","TIUEDI3",132,0)
 . ; -- If TIUI doesn't exist, reject it and keep looking: --
"RTN","TIUEDI3",133,0)
 . I '$D(^TIU(8925,TIUI,0)) D  Q
"RTN","TIUEDI3",134,0)
 . . K ^TIU(8925,"APTLD",DFN,TIUTYPDA,TIUVSTR,TIUI)
"RTN","TIUEDI3",135,0)
 . ; -- If TIUI has requesting package (e.g. Consults),
"RTN","TIUEDI3",136,0)
 . ;    then reject it and quit looking: --
"RTN","TIUEDI3",137,0)
 . I +$P($G(^TIU(8925,TIUI,14)),U,5) S REQUEST=1 Q  ; **22**
"RTN","TIUEDI3",138,0)
 . ; -- If TIUI has status deleted or retracted, reject it
"RTN","TIUEDI3",139,0)
 . ;    and keep looking: TIU*1*61 --
"RTN","TIUEDI3",140,0)
 . S STATUS=+$P($G(^TIU(8925,TIUI,0)),U,5)
"RTN","TIUEDI3",141,0)
 . I STATUS=14!(STATUS=15) Q
"RTN","TIUEDI3",142,0)
 . ; -- If OK so far, and record not required to be editable,
"RTN","TIUEDI3",143,0)
 . ;then grab existing record and stop looking: --
"RTN","TIUEDI3",144,0)
 . I 'REQEDIT S DA=TIUI Q
"RTN","TIUEDI3",145,0)
 . ; -- If REQEDIT & PERSON can edit existing record,
"RTN","TIUEDI3",146,0)
 . ;    then grab it and stop looking: --
"RTN","TIUEDI3",147,0)
 . N CANEDIT S CANEDIT=+$$CANDO^TIULP(TIUI,"EDIT RECORD",PERSON)
"RTN","TIUEDI3",148,0)
 . I +CANEDIT>0 S DA=TIUI
"RTN","TIUEDI3",149,0)
 ; -- If record not required to be editable & still haven't
"RTN","TIUEDI3",150,0)
 ;    found a record, check for records with no visit time: --
"RTN","TIUEDI3",151,0)
 ;    (Early anomaly with DSs at Boston)
"RTN","TIUEDI3",152,0)
 I +DA'>0,($P(TIUVSTR,";",3)="H"),(+$G(RETRY)'>0) D  G LOOP
"RTN","TIUEDI3",153,0)
 . S RETRY=1,$P(TIUVSTR,";",2)=$P($P(TIUVSTR,";",2),".")
"RTN","TIUEDI3",154,0)
EXISTEX ;
"RTN","TIUEDI3",155,0)
 Q +$G(DA)
"RTN","TIUEDI3",156,0)
 ;
"RTN","TIUEDI3",157,0)
CREATREC(DFN,TIU,TIUTYP1) ; Create document record - Returns DA
"RTN","TIUEDI3",158,0)
 ; Receives array TIU as in GETRECNW
"RTN","TIUEDI3",159,0)
 ; Needs var TIUTYP1 as in GETRECNW
"RTN","TIUEDI3",160,0)
 N DIC,DLAYGO,X,Y,TIUFPRIV,TIUVTYP,RETRY,TIUVSTR,TIUVISIT,DA
"RTN","TIUEDI3",161,0)
 N TIUTYPDA,TIUTYPNM
"RTN","TIUEDI3",162,0)
 S TIUTYPDA=$P(TIUTYP1,U,2),TIUTYPNM=$P(TIUTYP1,U,3)
"RTN","TIUEDI3",163,0)
 S TIUVSTR=TIU("VSTR")
"RTN","TIUEDI3",164,0)
 S DA=0,TIUFPRIV=1
"RTN","TIUEDI3",165,0)
 S (DIC,DLAYGO)=8925,DIC(0)="FL"
"RTN","TIUEDI3",166,0)
 S X=""""_"`"_TIUTYPDA_"""" D ^DIC
"RTN","TIUEDI3",167,0)
 I +Y'>0 W !,TIUTYPNM," record could not be created.",! G CREXIT
"RTN","TIUEDI3",168,0)
 ; -- Stuff patient, visit, parent doc type, status,
"RTN","TIUEDI3",169,0)
 ;    visit type, hosp loc, visit loc, division: --
"RTN","TIUEDI3",170,0)
 S DA=+Y
"RTN","TIUEDI3",171,0)
 N DIE,DR S DIE=8925
"RTN","TIUEDI3",172,0)
 S TIUVTYP=$P($G(TIUVSTR),";",3)
"RTN","TIUEDI3",173,0)
 S TIUVISIT=$S(+$G(TIU("VISIT")):+$G(TIU("VISIT")),1:"")
"RTN","TIUEDI3",174,0)
 S DR=".02////"_DFN_";.03////"_TIUVISIT_";.04////"_$$DOCCLASS^TIULC1(+$P(Y,U,2))_";.05///"_$$UP^XLFSTR($$STATUS^TIULC(DA))_";.13////"_TIUVTYP_";1205////"_$P($G(TIU("LOC")),U)_";1211////"_$P($G(TIU("VLOC")),U)_";1212////"_$P($G(TIU("INST")),U)
"RTN","TIUEDI3",175,0)
 D ^DIE
"RTN","TIUEDI3",176,0)
 ; -- [Mark record for deferred crediting of stop code (fld #.11)]: --
"RTN","TIUEDI3",177,0)
 I +$G(TIU("STOP")) D DEFER^TIUVSIT(DA,+$G(TIU("STOP")))
"RTN","TIUEDI3",178,0)
CREXIT Q +$G(DA)
"RTN","TIUEDI3",179,0)
 ;
"RTN","TIUEDI3",180,0)
INQUIRE() ; Ask user whether to create a new note anyway
"RTN","TIUEDI3",181,0)
 N TIUY,TIUPRMT
"RTN","TIUEDI3",182,0)
 S TIUY=0,TIUPRMT="Do you want to create a new record anyway"
"RTN","TIUEDI3",183,0)
 S TIUY=+$$READ^TIUU("Y",TIUPRMT,"NO")
"RTN","TIUEDI3",184,0)
 Q TIUY
"RTN","TIUEDI3",185,0)
 ;
"RTN","TIUFD")
0^23^B41470416
"RTN","TIUFD",1,0)
TIUFD ; SLC/MAM - LM Screen D (Display) INIT, DS/BASICS,ITEMS,PARNT,BOILTX,TECH(LASTLIN) ;4/11/05
"RTN","TIUFD",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**14,184**;Jun 20, 1997
"RTN","TIUFD",3,0)
 ;
"RTN","TIUFD",4,0)
HDR ; -- header code
"RTN","TIUFD",5,0)
 S VALMHDR(1)=$$FHDR
"RTN","TIUFD",6,0)
HDRX ;
"RTN","TIUFD",7,0)
 Q
"RTN","TIUFD",8,0)
 ;
"RTN","TIUFD",9,0)
FHDR() ; Function returns Type_Name for headers; Requires Array TIUFNOD0.
"RTN","TIUFD",10,0)
 N NAME,TYPE
"RTN","TIUFD",11,0)
 S NAME=$P(TIUFNOD0,U)
"RTN","TIUFD",12,0)
 S TYPE=$$MIXED^TIULS(TIUFNOD0("TYPE"))
"RTN","TIUFD",13,0)
 I TYPE'="" S TYPE=TYPE_" "
"RTN","TIUFD",14,0)
 Q $$CENTER^TIUFL(TYPE_NAME,79)
"RTN","TIUFD",15,0)
 ;
"RTN","TIUFD",16,0)
INIT ; -- init variables and list array
"RTN","TIUFD",17,0)
 N TEMPLATE
"RTN","TIUFD",18,0)
 K ^TMP("TIUF3",$J),^TMP("TIUF3IDX",$J)
"RTN","TIUFD",19,0)
 D CLEAN^VALM10
"RTN","TIUFD",20,0)
 S VALMCNT=0 D DSBASICS(.VALMCNT)
"RTN","TIUFD",21,0)
INITX I $D(DTOUT) S VALMQUIT=1
"RTN","TIUFD",22,0)
 Q
"RTN","TIUFD",23,0)
 ;
"RTN","TIUFD",24,0)
DSBASICS(LASTLIN) ; Set/Update Display Array TIUF3 starting with Basics.
"RTN","TIUFD",25,0)
 ; Requires LASTLIN = Last array line set, if setting array; = Last
"RTN","TIUFD",26,0)
 ;line to keep before resetting the rest if resetting array.
"RTN","TIUFD",27,0)
 ; Updates LASTLIN to Last array line set by this module.
"RTN","TIUFD",28,0)
 ; Requires CURRENT arrays TIUFINFO, TIUFNOD0.
"RTN","TIUFD",29,0)
 ;WARNING: +TIUFINFO may = 0!
"RTN","TIUFD",30,0)
 ; Any blanklines are set at the beginning, not the end, of the module.
"RTN","TIUFD",31,0)
 N LINENO,CNT,TIUI,FILEDA,LP,LC,OWNER,DA,DR,TYPE,DIC,DIQ,FLDNO
"RTN","TIUFD",32,0)
 S LINENO=LASTLIN
"RTN","TIUFD",33,0)
 ;If called to redisplay edited screen rather than by Init, kill array starting with Basics before resetting array.
"RTN","TIUFD",34,0)
 S CNT=$O(^TMP("TIUF3",$J,1000000),-1)
"RTN","TIUFD",35,0)
 F TIUI=LASTLIN+1:1:CNT K ^TMP("TIUF3",$J,TIUI),^TMP("TIUF3IDX",$J,TIUI)
"RTN","TIUFD",36,0)
 S FILEDA=TIUFINFO("FILEDA"),TYPE=$P(TIUFNOD0,U,4)
"RTN","TIUFD",37,0)
 S LINENO=LINENO+1,^TMP("TIUF3",$J,LINENO,0)="  Basics"_$S(TYPE'="O":"            Note: Values preceded by * have been inherited",1:"")
"RTN","TIUFD",38,0)
 K TIUFQ
"RTN","TIUFD",39,0)
 S DIC=8925.1,DR=".01:.15;3.02;3.03",DIQ(0)="I,E",DA=FILEDA,DIQ="TIUFQ" D EN^DIQ1 ;P184
"RTN","TIUFD",40,0)
 F FLDNO=.01,.02,.03,.04,.1,0,.13,.07,.05,.11,.08,.15,3.02,3.03 D
"RTN","TIUFD",41,0)
 . I FLDNO=0,"NM"'[TIUFWHO Q  ;Sets IFN line.
"RTN","TIUFD",42,0)
 . I FLDNO=.1,TYPE'="CO" Q
"RTN","TIUFD",43,0)
 . I FLDNO=.11,TIUFTMPL'="A"!(TYPE="O") Q
"RTN","TIUFD",44,0)
 . I FLDNO=3.03,TYPE="CO"!(TYPE="O")!(TIUFWHO="C") Q
"RTN","TIUFD",45,0)
 . I FLDNO=3.02,"N"'[TIUFWHO Q  ; For now, include OK to Distribute only on Natl options.  MAM
"RTN","TIUFD",46,0)
 . D SETFLD^TIUFLD(FILEDA,.LINENO,FLDNO)
"RTN","TIUFD",47,0)
 . Q
"RTN","TIUFD",48,0)
 K TIUFQ
"RTN","TIUFD",49,0)
DSBAX S LASTLIN=LINENO Q:$D(DTOUT)  D DSPARNT(.LASTLIN)
"RTN","TIUFD",50,0)
 Q
"RTN","TIUFD",51,0)
 ;
"RTN","TIUFD",52,0)
DSPARNT(LASTLIN) ; Set/Update Display Array TIUF3 starting with Parents.
"RTN","TIUFD",53,0)
 ; See DSBASICS for required variables, etc.
"RTN","TIUFD",54,0)
 N LINENO,CNT,TIUI,FILEDA,TIUREC,INFO,NODE0,TYPE,OLDLNO,PARENT
"RTN","TIUFD",55,0)
 S (TIUFPLIN,LINENO)=LASTLIN,FILEDA=TIUFINFO("FILEDA"),TYPE=$P(TIUFNOD0,U,4)
"RTN","TIUFD",56,0)
 I TYPE="O" G DSPAX
"RTN","TIUFD",57,0)
 ; Don't display parents if Template H or C, unless SHARED CO OR (mistakenly) Multiple Parents:
"RTN","TIUFD",58,0)
 I "HC"[TIUFTMPL,'((TYPE="CO")&$P(TIUFNOD0,U,10)) S PARENT=+$O(^TIU(8925.1,"AD",FILEDA,0)) I '$O(^TIU(8925.1,"AD",FILEDA,PARENT)) G DSPAX
"RTN","TIUFD",59,0)
 ;If called to redisplay edited screen rather than by Init, kill array starting with Parents before resetting array.
"RTN","TIUFD",60,0)
 S CNT=$O(^TMP("TIUF3",$J,1000000),-1)
"RTN","TIUFD",61,0)
 F TIUI=LASTLIN+1:1:CNT K ^TMP("TIUF3",$J,TIUI),^TMP("TIUF3IDX",$J,TIUI)
"RTN","TIUFD",62,0)
 S FILEDA=TIUFINFO("FILEDA")
"RTN","TIUFD",63,0)
 S LINENO=LINENO+1,^TMP("TIUF3",$J,LINENO,0)=""
"RTN","TIUFD",64,0)
 S LINENO=LINENO+1,^TMP("TIUF3",$J,LINENO,0)="  Parent"_$S(TIUFNOD0("SHARE")="":"",1:"s")_$S($O(^TIU(8925.1,"AD",FILEDA,0)):"                                   Type      IFN  Natl  Status  Owner",1:"")
"RTN","TIUFD",65,0)
 I '$O(^TIU(8925.1,"AD",FILEDA,0)) S LASTLIN=LINENO G DSPAX
"RTN","TIUFD",66,0)
 S TIUI=0,OLDLNO=LINENO
"RTN","TIUFD",67,0)
 F  S TIUI=$O(^TIU(8925.1,"AD",FILEDA,TIUI)) Q:'TIUI  D  G:$D(DTOUT) DSPAX
"RTN","TIUFD",68,0)
 . S LINENO=LINENO+1 D NINFO^TIUFLLM(LINENO,TIUI,.INFO),PARSE^TIUFLLM(.INFO),NODE0ARR^TIUFLF(TIUI,.NODE0) Q:$D(DTOUT)
"RTN","TIUFD",69,0)
 . I NODE0="" W !!," Entry "_FILEDA_" has parent missing from the file.",! S LINENO=LINENO-1 D PAUSE^TIUFXHLX Q
"RTN","TIUFD",70,0)
 . D BUFENTRY^TIUFLLM2(.INFO,.NODE0,"80")
"RTN","TIUFD",71,0)
 . Q
"RTN","TIUFD",72,0)
 D UPDATE^TIUFLLM1("D",LINENO-OLDLNO,OLDLNO)
"RTN","TIUFD",73,0)
DSPAX S LASTLIN=LINENO Q:$D(DTOUT)  D DSITEMS(.LASTLIN)
"RTN","TIUFD",74,0)
 Q
"RTN","TIUFD",75,0)
 ;
"RTN","TIUFD",76,0)
DSITEMS(LASTLIN) ; Set/Update Display Array TIUF3 starting with Items.
"RTN","TIUFD",77,0)
 ; See DSBASICS for required variables, etc.
"RTN","TIUFD",78,0)
 ; Called by subtemplates D AND T
"RTN","TIUFD",79,0)
 N LINENO,CNT,TIUI,FILEDA,TIUREC,ITEMS,OLDLNO,HASITEMS
"RTN","TIUFD",80,0)
 S (TIUFILIN,LINENO)=LASTLIN
"RTN","TIUFD",81,0)
 G:TIUFNOD0("ITEMS")="" DSITX ; Items is NA
"RTN","TIUFD",82,0)
 ;If called to redisplay edited screen rather than by Init, kill array starting with Items before resetting array.
"RTN","TIUFD",83,0)
 S CNT=$O(^TMP("TIUF3",$J,1000000),-1)
"RTN","TIUFD",84,0)
 F TIUI=LASTLIN+1:1:CNT K ^TMP("TIUF3",$J,TIUI),^TMP("TIUF3IDX",$J,TIUI)
"RTN","TIUFD",85,0)
 S FILEDA=TIUFINFO("FILEDA")
"RTN","TIUFD",86,0)
 S LINENO=LINENO+1,^TMP("TIUF3",$J,LINENO,0)=""
"RTN","TIUFD",87,0)
 ; HASITEMS may have changed if edited items:
"RTN","TIUFD",88,0)
 S ITEMS="  Items",HASITEMS=$$HASITEMS^TIUFLF1(FILEDA) I HASITEMS S ITEMS=ITEMS_" (By Sequence if they have it, otherwise alphabetically by Menu Text)"
"RTN","TIUFD",89,0)
 S LINENO=LINENO+1,^TMP("TIUF3",$J,LINENO,0)=ITEMS
"RTN","TIUFD",90,0)
 I 'HASITEMS G DSITX
"RTN","TIUFD",91,0)
 S TIUREC=$$SETSTR^VALM1("Item","",2,37)
"RTN","TIUFD",92,0)
 S:"NM"[TIUFWHO TIUREC=$$SETSTR^VALM1("    IFN",TIUREC,32,7)
"RTN","TIUFD",93,0)
 S TIUREC=$$SETSTR^VALM1("Seq   ",TIUREC,41,6),TIUREC=$$SETSTR^VALM1("Mnem",TIUREC,49,4),TIUREC=$$SETSTR^VALM1("Menu Text",TIUREC,55,26)
"RTN","TIUFD",94,0)
 S LINENO=LINENO+1,^TMP("TIUF3",$J,LINENO,0)=TIUREC,OLDLNO=LINENO
"RTN","TIUFD",95,0)
 ; Checked for items existing before entered EDIT/View.  So items exist:
"RTN","TIUFD",96,0)
 D BUFITEMS^TIUFLT("D",.TIUFINFO,.LINENO) G:$D(DTOUT) DSITX
"RTN","TIUFD",97,0)
 D UPDATE^TIUFLLM1("D",LINENO-OLDLNO,OLDLNO)
"RTN","TIUFD",98,0)
DSITX S LASTLIN=LINENO Q:$D(DTOUT)  D DSBOILTX(.LASTLIN)
"RTN","TIUFD",99,0)
 Q
"RTN","TIUFD",100,0)
 ;
"RTN","TIUFD",101,0)
DSBOILTX(LASTLIN) ; Set Display Array TIUF3 starting with Boilerplte Text.
"RTN","TIUFD",102,0)
 ; Used by subtemplates D and X AND T
"RTN","TIUFD",103,0)
 ; See DSBASICS for required variables, etc.
"RTN","TIUFD",104,0)
 N LINENO,CNT,TIUI,FILEDA,NAME
"RTN","TIUFD",105,0)
 S (TIUFBLIN,LINENO)=LASTLIN
"RTN","TIUFD",106,0)
 G:TIUFNOD0("BOILPT")="" DSBOX ; NA
"RTN","TIUFD",107,0)
 ;If called to redisplay edited screen rather than by Init, kill array starting with Boilpt Txt before resetting array.
"RTN","TIUFD",108,0)
 S CNT=$O(^TMP("TIUF3",$J,1000000),-1)
"RTN","TIUFD",109,0)
 F TIUI=LASTLIN+1:1:CNT K ^TMP("TIUF3",$J,TIUI),^TMP("TIUF3IDX",$J,TIUI)
"RTN","TIUFD",110,0)
 S FILEDA=TIUFINFO("FILEDA")
"RTN","TIUFD",111,0)
 I TIUFSTMP'="X" S LINENO=LINENO+1,^TMP("TIUF3",$J,LINENO,0)="",LINENO=LINENO+1,^TMP("TIUF3",$J,LINENO,0)="  Boilerplate Text"
"RTN","TIUFD",112,0)
 I TIUFNOD0("TYPE")="COMPONENT" S NAME=$P(TIUFNOD0,U),LINENO=LINENO+1,^TMP("TIUF3",$J,LINENO,0)=NAME_":"
"RTN","TIUFD",113,0)
 D SETBOIL^TIUFLD1(FILEDA,.LINENO)
"RTN","TIUFD",114,0)
 D DSETBOIL^TIUFLD1(FILEDA,.LINENO)
"RTN","TIUFD",115,0)
DSBOX S LASTLIN=LINENO Q:$D(DTOUT)  D:TIUFSTMP'="X" DSTECH(.LASTLIN)
"RTN","TIUFD",116,0)
 Q
"RTN","TIUFD",117,0)
 ;
"RTN","TIUFD",118,0)
DSTECH(LASTLIN) ; Set/Update Display Array TIUF3 starting with Technical Flds.
"RTN","TIUFD",119,0)
 ; See DSBASICS for required variables, etc.
"RTN","TIUFD",120,0)
 ; Called by subtemp D and T
"RTN","TIUFD",121,0)
 N LINENO,CNT,TIUI,FILEDA,FLDNO,PFILEDA,PNODE61,PCUSTOM,TYPE
"RTN","TIUFD",122,0)
 N DIC,DR,DIQ,DA
"RTN","TIUFD",123,0)
 S (TIUFTLIN,LINENO)=LASTLIN
"RTN","TIUFD",124,0)
 I "NM"'[TIUFWHO G DSTEX
"RTN","TIUFD",125,0)
 S TYPE=$P(TIUFNOD0,U,4) I TYPE="CO" G DSTEX
"RTN","TIUFD",126,0)
 ;If called to redisplay edited screen rather than by Init, kill array starting with Tech flds before resetting array.
"RTN","TIUFD",127,0)
 S CNT=$O(^TMP("TIUF3",$J,1000000),-1)
"RTN","TIUFD",128,0)
 F TIUI=LASTLIN+1:1:CNT K ^TMP("TIUF3",$J,TIUI),^TMP("TIUF3IDX",$J,TIUI)
"RTN","TIUFD",129,0)
 S FILEDA=TIUFINFO("FILEDA")
"RTN","TIUFD",130,0)
 S LINENO=LINENO+1,^TMP("TIUF3",$J,LINENO,0)=""
"RTN","TIUFD",131,0)
 S LINENO=LINENO+1,^TMP("TIUF3",$J,LINENO,0)="  Technical Fields"_$S(TYPE'="O":"      Note: Values preceded by * have been inherited",1:"")
"RTN","TIUFD",132,0)
 K TIUFQ
"RTN","TIUFD",133,0)
 S DIC=8925.1,DR="4.1:4.45;4.6;4.7;4.9;5:9",DIQ(0)="I,E",DA=FILEDA,DIQ="TIUFQ" D EN^DIQ1
"RTN","TIUFD",134,0)
 I TYPE="O" D SETFLD^TIUFLD(FILEDA,.LINENO,9) G DSTEX
"RTN","TIUFD",135,0)
 S PFILEDA=+$O(^TIU(8925.1,"AD",FILEDA,0))
"RTN","TIUFD",136,0)
 I TYPE="CL"!(TYPE="DC")!(TYPE="DOC") S PNODE61=$G(^TIU(8925.1,PFILEDA,6.1)),PCUSTOM=$P(PNODE61,U,4) I PCUSTOM="" D INHERIT^TIUFLD(FILEDA,0,6.14,"","","",.PCUSTOM)
"RTN","TIUFD",137,0)
 F FLDNO=4.1,4.2,4.3,4.4,4.45,4.6,4.7,4.9,5,6,6.1,6.12,6.13,7,8,6.14 D
"RTN","TIUFD",138,0)
 . I FLDNO=6.14,TYPE'="CL",TYPE'="DC" Q
"RTN","TIUFD",139,0)
 . I FLDNO=6.1!(FLDNO=6.12)!(FLDNO=6.13),'$G(PCUSTOM) Q
"RTN","TIUFD",140,0)
 . D SETFLD^TIUFLD(FILEDA,.LINENO,FLDNO)
"RTN","TIUFD",141,0)
 . Q
"RTN","TIUFD",142,0)
DSTEX K TIUFQ S LASTLIN=LINENO Q:$D(DTOUT)  D DSEMBED^TIUFD1(.LASTLIN)
"RTN","TIUFD",143,0)
 Q
"RTN","TIUFD",144,0)
 ;
"RTN","TIUFHA1")
0^31^B35016847
"RTN","TIUFHA1",1,0)
TIUFHA1 ; SLC/MAM - LM Templates H,A Actn Delete. CANTDEL(FILEDA,USED),ASKOK(OLDLNO,IFLAG,USED) ;1/19/06
"RTN","TIUFHA1",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**2,13,43,184**;Jun 20, 1997
"RTN","TIUFHA1",3,0)
 ;
"RTN","TIUFHA1",4,0)
 ;$$HASAS^USRLFF - IA 2329
"RTN","TIUFHA1",5,0)
 ;$$FNDTITLE^DGPFAPI1 - IA 4383
"RTN","TIUFHA1",6,0)
DELETE ; Templates H and A Action Delete Entries
"RTN","TIUFHA1",7,0)
 ; Requires TIUFTMPL.
"RTN","TIUFHA1",8,0)
 ; Requires TIUFWHO, set in Options TIUF/A/C/H EDIT/SORT/CREATE DDEFS CLIN/MGR/NATL.
"RTN","TIUFHA1",9,0)
 ; Not on Clinician menu: don't worry about TIUFWHO="C".
"RTN","TIUFHA1",10,0)
 N OLDLNO,TIUFDA,FILEDA,USED,IFLAG,PFILEDA,SHARED,ANCQUIT,MSG1
"RTN","TIUFHA1",11,0)
 N ASKOK,ITEMDA,LINENO,INFO,PINFO,MSG,TIUFXNOD,TIUI,ANCESTOR,NODE0,NATL
"RTN","TIUFHA1",12,0)
 N DTOUT,DIRUT,DIROUT
"RTN","TIUFHA1",13,0)
 S VALMBCK="",TIUFXNOD=$G(XQORNOD(0))
"RTN","TIUFHA1",14,0)
 D EN^VALM2(TIUFXNOD,"O")
"RTN","TIUFHA1",15,0)
 I '$O(VALMY(0)) G DELEX
"RTN","TIUFHA1",16,0)
 S OLDLNO=0
"RTN","TIUFHA1",17,0)
 F  S OLDLNO=$O(VALMY(OLDLNO)) Q:'OLDLNO  D
"RTN","TIUFHA1",18,0)
 . S TIUFDA(OLDLNO)=$P(^TMP("TIUF1IDX",$J,OLDLNO),U,2)
"RTN","TIUFHA1",19,0)
 . Q
"RTN","TIUFHA1",20,0)
 S OLDLNO=0 K DIRUT
"RTN","TIUFHA1",21,0)
 F  S OLDLNO=$O(TIUFDA(OLDLNO)) Q:'OLDLNO!$D(DIRUT)  D  L -^TIU(8925.1,+$G(FILEDA))
"RTN","TIUFHA1",22,0)
 . S MSG=" Processing Entry "_OLDLNO_"..." W !!,MSG
"RTN","TIUFHA1",23,0)
 . S FILEDA=TIUFDA(OLDLNO)
"RTN","TIUFHA1",24,0)
 . I $G(TIUFCDA) D  Q:$G(ANCQUIT)
"RTN","TIUFHA1",25,0)
 . . D ANCESTOR^TIUFLF4(TIUFCDA,^TIU(8925.1,TIUFCDA,0),.ANCESTOR) S ANCQUIT=0
"RTN","TIUFHA1",26,0)
 . . F TIUI=0:1 Q:'$G(ANCESTOR(TIUI))  I FILEDA=ANCESTOR(TIUI) D  Q
"RTN","TIUFHA1",27,0)
 . . . S ANCQUIT=1
"RTN","TIUFHA1",28,0)
 . . . I TIUI=0 S MSG=" This is your Current Position in the Hierarchy; Can't delete" W !!,MSG,! D PAUSE^TIUFXHLX Q
"RTN","TIUFHA1",29,0)
 . . . S MSG=" This entry is ABOVE your Current Position in the Hierarchy; Can't delete" W !!,MSG,! D PAUSE^TIUFXHLX
"RTN","TIUFHA1",30,0)
 . S NODE0=^TIU(8925.1,FILEDA,0),NATL=$P(NODE0,U,13),SHARED=$P(NODE0,U,10)
"RTN","TIUFHA1",31,0)
 . I SHARED S MSG=" Shared Components cannot be deleted; if they do not have multiple parents,",MSG1="they can be edited to NOT SHARED and then deleted" W !!,MSG,!,MSG1 D PAUSE^TIUFXHLX Q
"RTN","TIUFHA1",32,0)
 . I $P(^TIU(8925.1,FILEDA,0),U,13) S MSG=" National Entry; Can't delete" W MSG,! D PAUSE^TIUFXHLX Q
"RTN","TIUFHA1",33,0)
 . I $P(NODE0,U,4)="O" W !,"To delete an Object, please select action Detailed Display.",! D PAUSE^TIUFXHLX Q
"RTN","TIUFHA1",34,0)
 . I ($L($P(NODE0,U,5))!$L($P(NODE0,U,6))),'$$PERSOWNS^TIUFLF2(FILEDA,DUZ) S MSG=" Only an Owner can delete a file entry" W MSG,! D PAUSE^TIUFXHLX Q
"RTN","TIUFHA1",35,0)
 . L +^TIU(8925.1,FILEDA):1 I '$T W !!," Another user is editing this entry; Please try later" H 2 Q
"RTN","TIUFHA1",36,0)
 . S USED=$S($P(NODE0,U,4)="O":$$OBJUSED^TIUFLJ(FILEDA),1:$$DDEFUSED^TIUFLF(FILEDA))
"RTN","TIUFHA1",37,0)
 . Q:$$CANTDEL(FILEDA,USED)
"RTN","TIUFHA1",38,0)
 . S IFLAG=+$O(^TIU(8925.1,"AD",FILEDA,0))
"RTN","TIUFHA1",39,0)
 . I TIUFTMPL="A",IFLAG D  D PAUSE^TIUFXHLX Q:$D(DIRUT)
"RTN","TIUFHA1",40,0)
 . . H 1 W !!,"  Entry "_OLDLNO_" has Parent:"
"RTN","TIUFHA1",41,0)
 . . S PFILEDA=0 F  D  Q:'PFILEDA
"RTN","TIUFHA1",42,0)
 . . . S PFILEDA=$O(^TIU(8925.1,"AD",FILEDA,PFILEDA)) Q:'PFILEDA
"RTN","TIUFHA1",43,0)
 . . . W !?5,$P(^TIU(8925.1,PFILEDA,0),U)
"RTN","TIUFHA1",44,0)
 . H 1 S ASKOK=$$ASKOK(OLDLNO,IFLAG,USED) I 'ASKOK  S MSG=" ... Entry "_OLDLNO_" not deleted!" W MSG,! D PAUSE^TIUFXHLX Q
"RTN","TIUFHA1",45,0)
 . I 'IFLAG G DELENTY
"RTN","TIUFHA1",46,0)
 . ; If FILEDA is used as an item, delete it as an item:
"RTN","TIUFHA1",47,0)
 . N DA,DIK
"RTN","TIUFHA1",48,0)
 . S PFILEDA=$O(^TIU(8925.1,"AD",FILEDA,0)) Q:'PFILEDA
"RTN","TIUFHA1",49,0)
 . S ITEMDA=$O(^TIU(8925.1,"AD",FILEDA,PFILEDA,0)) Q:'ITEMDA
"RTN","TIUFHA1",50,0)
 . I TIUFTMPL="A",$E(TIUFATTR)="P" S TIUFREDO=1
"RTN","TIUFHA1",51,0)
 . S DA(1)=PFILEDA,DA=ITEMDA,DIK="^TIU(8925.1,DA(1),10," D ^DIK
"RTN","TIUFHA1",52,0)
DELENTY . ; Delete FILEDA as Docmt Def entry in file 8925.1:
"RTN","TIUFHA1",53,0)
 . N DA,DIK
"RTN","TIUFHA1",54,0)
 . I TIUFTMPL="A",$E(TIUFATTR)="P" S TIUFREDO=1 ;Delete affects parentage globally.
"RTN","TIUFHA1",55,0)
 . S DA=FILEDA,DIK="^TIU(8925.1," D ^DIK
"RTN","TIUFHA1",56,0)
 . S LINENO=$O(^TMP("TIUF1IDX",$J,"DAF",FILEDA,0))
"RTN","TIUFHA1",57,0)
 . G:'LINENO MSG ; not there since parent was already deleted
"RTN","TIUFHA1",58,0)
 . I "AJ"[TIUFTMPL D  G MSG
"RTN","TIUFHA1",59,0)
 . . I '$G(TIUFREDO) D UPDATE^TIUFLLM1(TIUFTMPL,-1,LINENO-1) S VALMCNT=VALMCNT-1
"RTN","TIUFHA1",60,0)
 . ; Update LM Template H: collapse and then delete FILEDA's LINENO.
"RTN","TIUFHA1",61,0)
 . S INFO=^TMP("TIUF1IDX",$J,LINENO) D PARSE^TIUFLLM(.INFO)
"RTN","TIUFHA1",62,0)
 . I INFO("XPDLCNT") S VALMCNT=VALMCNT-INFO("XPDLCNT") D COLLAPSE^TIUFH1(.INFO)
"RTN","TIUFHA1",63,0)
 . S PINFO=^TMP("TIUF1IDX",$J,INFO("PLINENO")) D PARSE^TIUFLLM(.PINFO)
"RTN","TIUFHA1",64,0)
 . D UPDATE^TIUFLLM1("H",-1,LINENO-1,.PINFO) S VALMCNT=VALMCNT-1
"RTN","TIUFHA1",65,0)
MSG . S MSG=" ... Entry "_OLDLNO_" Deleted!" W MSG,! H 1 S VALMBCK="R"
"RTN","TIUFHA1",66,0)
 . Q
"RTN","TIUFHA1",67,0)
 I TIUFTMPL="C" K TIUFCMSG D
"RTN","TIUFHA1",68,0)
 . S TIUFCMSG(1)=" Select "_$S(TIUFCTYP="DC":"TITLE",1:"CLASS/DOCUMENTCLASS")_" to create a new "_TIUFCNM
"RTN","TIUFHA1",69,0)
 . S TIUFCMSG(2)="or to Go Down a Level, Select NEXT LEVEL."
"RTN","TIUFHA1",70,0)
 . I VALMCNT>VALM("LINES") S TIUFCMSG(2)="or to Go Down a Level, Screen to (+/-) Desired ",TIUFCMSG(3)=TIUFCNM_" Item, and Select NEXT LEVEL."
"RTN","TIUFHA1",71,0)
DELEX I $D(DTOUT) S VALMBCK="Q" Q
"RTN","TIUFHA1",72,0)
 I "AJ"[TIUFTMPL,VALMBCK="R",TIUFREDO D INIT^TIUFA S:$D(DTOUT) VALMBCK="Q"
"RTN","TIUFHA1",73,0)
 Q
"RTN","TIUFHA1",74,0)
 ;
"RTN","TIUFHA1",75,0)
ASKOK(OLDLNO,IFLAG,USED) ; Function warns user, asks if OK to continue delete. 1/OK; 0/not OK
"RTN","TIUFHA1",76,0)
 N DIR,X,Y,ANS
"RTN","TIUFHA1",77,0)
 S ANS=0
"RTN","TIUFHA1",78,0)
 I USED=0 S DIR("A")="Object has not been embedded in Boilerplate Text.  Delete" G ASKOX
"RTN","TIUFHA1",79,0)
 S DIR("A",1)="Entry "_OLDLNO_" is not presently used by any documents.  If entry is deleted,"
"RTN","TIUFHA1",80,0)
 I IFLAG S DIR("A",2)="any items UNDER it will be Orphans.  I will delete entry as an item under its",DIR("A")="parent AND as a Document Definition.  It will no longer exist. OK"
"RTN","TIUFHA1",81,0)
 E  S DIR("A",2)="any items UNDER it will be Orphans.  I will delete entry as a Document",DIR("A")="Definition.  It will no longer exist. OK"
"RTN","TIUFHA1",82,0)
ASKOX S DIR(0)="Y",DIR("B")="NO" D ^DIR S ANS=Y W !
"RTN","TIUFHA1",83,0)
 Q ANS
"RTN","TIUFHA1",84,0)
 ;
"RTN","TIUFHA1",85,0)
CANTDEL(FILEDA,USED) ; Function returns 1 if FILEDA can't be deleted, else 0.
"RTN","TIUFHA1",86,0)
 N ANS,MSG
"RTN","TIUFHA1",87,0)
 S ANS=0
"RTN","TIUFHA1",88,0)
 I USED="YES" S MSG="Entry In Use by documents; Can't delete" W MSG,! S ANS=1 G CANTX
"RTN","TIUFHA1",89,0)
 I USED S MSG="Object embedded in boilerplate text; Can't delete" W !,MSG,! S ANS=1 G CANTX
"RTN","TIUFHA1",90,0)
 I $$HASAS^USRLFF(FILEDA) S MSG=" Entry has Authorizations/Subscriptions; Can't delete." W !!,MSG,! S ANS=1 G CANTX ;**43**
"RTN","TIUFHA1",91,0)
 I $$FNDTITLE^DGPFAPI1(FILEDA)>0 S MSG="Entry Associated with PRF Flag; Can't delete" W MSG,! S ANS=1 G CANTX
"RTN","TIUFHA1",92,0)
 I '$D(^TIU(8925.1,"AS",+^TMP("TIUF",$J,"STATI"),FILEDA)),$P(^TIU(8925.1,FILEDA,0),U,7) D  G CANTX
"RTN","TIUFHA1",93,0)
 . S MSG=" Status not INACTIVE; Can't delete" W MSG,! S ANS=1
"RTN","TIUFHA1",94,0)
CANTX ;
"RTN","TIUFHA1",95,0)
 I $D(MSG) D PAUSE^TIUFXHLX
"RTN","TIUFHA1",96,0)
 Q ANS
"RTN","TIUFHA1",97,0)
 ;
"RTN","TIUFHA7")
0^32^B70187398
"RTN","TIUFHA7",1,0)
TIUFHA7 ; SLC/MAM - VALMBG(FILEDA,EFILEDA,EOLDLNO), UPDATE, MOVETL, REEXPAND(FILEDA,LINENO,UPDATE), WHICHDC(FILEDA,PFILEDA,ACTION) ;1/27/06
"RTN","TIUFHA7",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**11,27,184**;Jun 20, 1997
"RTN","TIUFHA7",3,0)
 ;
"RTN","TIUFHA7",4,0)
WHICHDC(FILEDA,PFILEDA,ACTION) ; Function returns IFN of DC to copy/move Title to, or 0 if none chosen
"RTN","TIUFHA7",5,0)
 ;Requires FILEDA = IFN of Title to copy/move
"RTN","TIUFHA7",6,0)
 ;Requires PFILEDA = parent of Title
"RTN","TIUFHA7",7,0)
 ;Requires ACTION = MT or C
"RTN","TIUFHA7",8,0)
 N X,Y,GPFILEDA,DIC,DIR,NEWDCY,CWAD1,CWAD2
"RTN","TIUFHA7",9,0)
 S GPFILEDA=+$O(^TIU(8925.1,"AD",PFILEDA,0)) ;orig g'parent of title
"RTN","TIUFHA7",10,0)
AGAINDC S DIC=8925.1,DIC(0)="AEMNQZ"
"RTN","TIUFHA7",11,0)
 I ACTION="MT" D
"RTN","TIUFHA7",12,0)
 . W !!,"  Selecting target Document Class.  Enter '??' for a list of selectable ones.",!
"RTN","TIUFHA7",13,0)
 . W "  You may not select PRF Flag Document Classes"
"RTN","TIUFHA7",14,0)
 . I TIUFWHO'="N" W " or Document Classes",!,"    outside the original Class."
"RTN","TIUFHA7",15,0)
 . E  W "."
"RTN","TIUFHA7",16,0)
 . S DIC("A")="Select TIU DOCUMENT CLASS NAME to Move Title to: "
"RTN","TIUFHA7",17,0)
 . ; - Selected DC must: be DC, in hierarchy, not=current DC,
"RTN","TIUFHA7",18,0)
 . ;   not addm, not PRF DC, & unless user is natl,
"RTN","TIUFHA7",19,0)
 . ;   must be in same class as orig DC:
"RTN","TIUFHA7",20,0)
 . ; - Careful! last global ref could change during screen:
"RTN","TIUFHA7",21,0)
 . S DIC("S")="I $P(^(0),U,4)=""DC""&($$ORPHAN^TIUFLF4(Y,^(0))=""NO"")"
"RTN","TIUFHA7",22,0)
 . S DIC("S")=DIC("S")_"&(Y'=PFILEDA)&(Y'=512)&'$$ISPFDC^TIUPRFL(Y)"
"RTN","TIUFHA7",23,0)
 . I TIUFWHO'="N" S DIC("S")=DIC("S")_"&(GPFILEDA=+$O(^TIU(8925.1,""AD"",Y,0)))"
"RTN","TIUFHA7",24,0)
 I ACTION="C" S DIC("A")="Select TIU DOCUMENT CLASS NAME to Add Copy to: ",DIC("S")="I $P(^(0),U,4)=""DC""&($$ORPHAN^TIUFLF4(Y,^(0))=""NO"")&(Y'=512)"
"RTN","TIUFHA7",25,0)
 D ^DIC I Y=-1 G WDCX
"RTN","TIUFHA7",26,0)
 S NEWDCY=Y,NEWDCY(0)=Y(0)
"RTN","TIUFHA7",27,0)
 N TIUFCK D CHECK^TIUFLF3(+NEWDCY,+$O(^TIU(8925.1,"AD",+NEWDCY,0)),0,.TIUFCK)
"RTN","TIUFHA7",28,0)
 I 'TIUFCK D  I '$$OVERRIDE^TIUFHA2("select entry even though it is FAULTY") W $S(ACTION="MT":"  Title NOT moved.",1:"  Copy NOT added.") D PAUSE^TIUFXHLX  K NEWDCY G WDCX
"RTN","TIUFHA7",29,0)
 . W !!,"Faulty Document Class.  Please TRY it and correct problems before ",$S(ACTION="MT":"Moving Title",1:"Adding Copy"),!,"to it.  "
"RTN","TIUFHA7",30,0)
 I PFILEDA S CWAD1=$P(NEWDCY(0),U,14),CWAD2=$P(^TIU(8925.1,PFILEDA,0),U,14) I (CWAD1="")&(CWAD2'="")!((CWAD1'="")&(CWAD2="")) D  G AGAINDC:Y=0,WDCX:'Y
"RTN","TIUFHA7",31,0)
 . S DIR(0)="Y",DIR("B")="NO"
"RTN","TIUFHA7",32,0)
 . S DIR("A",1)="CWAD's behave differently from nonCWAD documents.",DIR("A")="Are you sure you want this Document Class" D ^DIR
"RTN","TIUFHA7",33,0)
 . I 'Y K NEWDCY
"RTN","TIUFHA7",34,0)
WDCX I $D(DTOUT) S VALMQUIT=1
"RTN","TIUFHA7",35,0)
 Q $S($G(NEWDCY):NEWDCY,1:0)
"RTN","TIUFHA7",36,0)
 ;
"RTN","TIUFHA7",37,0)
VALMBG(FILEDA,EFILEDA,EOLDLNO) ; Set VALMBG to show FILEDA if FILEDA is in LM Array.
"RTN","TIUFHA7",38,0)
 ; requires FILEDA.
"RTN","TIUFHA7",39,0)
 ; Requires EFILEDA = DA of LM entry of interest, EOLDLNO = old lineno of EFILEDA. EFILEDA and/or EOLDLNO may be 0.
"RTN","TIUFHA7",40,0)
 ; Entry of interest is entry to be copied, or Parent of Title to me moved, or Title whose documents are being moved.
"RTN","TIUFHA7",41,0)
 N LINENO,ENEWLNO
"RTN","TIUFHA7",42,0)
 S LINENO=+$O(^TMP("TIUF1IDX",$J,"DAF",FILEDA,0)),ENEWLNO=+$O(^TMP("TIUF1IDX",$J,"DAF",EFILEDA,0))
"RTN","TIUFHA7",43,0)
 I 'LINENO,"AJ"[TIUFTMPL W !,"...  Not in Current View" H 2
"RTN","TIUFHA7",44,0)
 I 'LINENO  Q
"RTN","TIUFHA7",45,0)
 ; If FILEDA shows on the screen, and entry of interest is still in same place on screen then don't change screen position:
"RTN","TIUFHA7",46,0)
 I LINENO'<VALMBG,LINENO'>(VALMBG+VALM("LINES")-1),EOLDLNO=ENEWLNO Q
"RTN","TIUFHA7",47,0)
 S VALMBG=LINENO
"RTN","TIUFHA7",48,0)
 Q
"RTN","TIUFHA7",49,0)
 ;
"RTN","TIUFHA7",50,0)
UPDATE ; Update Parent Document Type for documents of a certain title
"RTN","TIUFHA7",51,0)
 ; ALSO updates CLASS xrefs if valid OLDCLASS can be gotten from ^XTMP("TIUFMOVEN",FILEDA)=OLDCLASS
"RTN","TIUFHA7",52,0)
 N FILEDA,NODE0,INFO,DIR,OLDCLASS
"RTN","TIUFHA7",53,0)
 ; N DIR for EN^VALM2 default
"RTN","TIUFHA7",54,0)
 I '$D(TIUFMOVE) S TIUFMOVE="" ;Set to N in opt ZZTIUFH EDIT DDEFS NATL
"RTN","TIUFHA7",55,0)
 S VALM("ENTITY")="Title whose documents you want to Update"
"RTN","TIUFHA7",56,0)
AGAINUP D EN^VALM2(TIUFXNOD,"SO") G:'$O(VALMY(0)) UPDAX S INFO=$G(^TMP("TIUF1IDX",$J,$O(VALMY(0)))) I 'INFO W !!," Missing List Manager Data; See IRM",! D PAUSE^TIUFXHLX S VALMBCK="Q" G UPDAX
"RTN","TIUFHA7",57,0)
 S FILEDA=$P(INFO,U,2),NODE0=^TIU(8925.1,FILEDA,0)
"RTN","TIUFHA7",58,0)
 ; Need TIUFXNOD phrase to prevent loop:
"RTN","TIUFHA7",59,0)
 N DIRUT I $P(NODE0,U,4)'="DOC" W !,"   ?? Entry must be a TITLE (not a Document Class, etc.).",! D PAUSE^TIUFXHLX G UPDAX:$D(DIRUT)!(TIUFXNOD["="),AGAINUP
"RTN","TIUFHA7",60,0)
 I '$O(^TIU(8925,"B",FILEDA,0)) W !,"  ?? Title has no documents to Update",! D PAUSE^TIUFXHLX G UPDAX:$D(DIRUT)!(TIUFXNOD["="),AGAINUP
"RTN","TIUFHA7",61,0)
 I TIUFMOVE="N" S OLDCLASS=$G(^XTMP("TIUFMOVEN"_FILEDA))
"RTN","TIUFHA7",62,0)
 S OLDCLASS=+$G(OLDCLASS) ;may be 0
"RTN","TIUFHA7",63,0)
 S ^XTMP("TIUFMOVE"_TIUFMOVE_FILEDA,0)=+$$FMADD^XLFDT(DT,30)_U_DT
"RTN","TIUFHA7",64,0)
 D MTRPOINT^TIUFHA8(FILEDA,OLDCLASS)
"RTN","TIUFHA7",65,0)
UPDAX K:TIUFMOVE="" TIUFMOVE S VALM("ENTITY")="Entry" Q
"RTN","TIUFHA7",66,0)
 ;
"RTN","TIUFHA7",67,0)
MOVETL ; Move Title to different DC.  Template H ONLY.  National titles cannot be moved.  Unless special arrangements are made w/ TIU developers, new DC must be in same CLASS as original DC.
"RTN","TIUFHA7",68,0)
 N INFO,FILEDA,NODE0,LINENO,PFILEDA,TENDA,NEWDCY,NDCLNO,PLINENO
"RTN","TIUFHA7",69,0)
 N GPFILEDA,OLDCLASS,DIR ; DIR for EN^VALM2 default
"RTN","TIUFHA7",70,0)
 N EXPAND,DA,DIK,TIUFI,LACKTECH,OVERRIDE
"RTN","TIUFHA7",71,0)
 S VALM("ENTITY")="Title to Move"
"RTN","TIUFHA7",72,0)
 S TIUFMOVE=$G(TIUFMOVE) ; Set to N in opt ZZTIUFH EDIT DDEFS NATL
"RTN","TIUFHA7",73,0)
AGAINTL D EN^VALM2(TIUFXNOD,"SO") G:'$O(VALMY(0)) MTLX S INFO=$G(^TMP("TIUF1IDX",$J,$O(VALMY(0)))) I 'INFO W !!," Missing List Manager Data; See IRM",! D PAUSE^TIUFXHLX S VALMBCK="Q" G MTLX
"RTN","TIUFHA7",74,0)
 S FILEDA=$P(INFO,U,2),NODE0=^TIU(8925.1,FILEDA,0),LINENO=+INFO
"RTN","TIUFHA7",75,0)
 ; Need TIUFXNOD phrase to prevent loop:
"RTN","TIUFHA7",76,0)
 N DIRUT I $P(NODE0,U,4)'="DOC" W !,"   ?? Entry must be a TITLE (not a Document Class, etc.).",! D PAUSE^TIUFXHLX G MTLX:$D(DIRUT)!(TIUFXNOD["="),AGAINTL
"RTN","TIUFHA7",77,0)
 I $P(NODE0,U,13) W !,"   ?? Can't Move National Titles",! D PAUSE^TIUFXHLX G MTLX:$D(DIRUT)!(TIUFXNOD["="),AGAINTL
"RTN","TIUFHA7",78,0)
 I $$ISPFTTL^TIUPRFL(FILEDA) W !,"   ?? Can't Move PRF Flag Titles",! D PAUSE^TIUFXHLX G MTLX:$D(DIRUT)!(TIUFXNOD["="),AGAINTL
"RTN","TIUFHA7",79,0)
 S PFILEDA=+$O(^TIU(8925.1,"AD",FILEDA,0))
"RTN","TIUFHA7",80,0)
 S TENDA=$P(INFO,U,6),PLINENO=$P(INFO,U,5)
"RTN","TIUFHA7",81,0)
 ; -----Check Title under PRESENT parent:
"RTN","TIUFHA7",82,0)
 N TIUFCK D CHECK^TIUFLF3(FILEDA,PFILEDA,1,.TIUFCK) G:$D(DTOUT) MTLX
"RTN","TIUFHA7",83,0)
 K TIUFCK("E"),TIUFCK("R"),TIUFCK("V"),TIUFCK("D"),TIUFCK("H"),TIUFCK("N"),TIUFCK("G")
"RTN","TIUFHA7",84,0)
 I $D(TIUFCK)>9 D  G:'OVERRIDE MTLX
"RTN","TIUFHA7",85,0)
 . W !!,"Faulty Title.  Please TRY it and correct problems before moving it.",!
"RTN","TIUFHA7",86,0)
 . S OVERRIDE=$$OVERRIDE^TIUFHA2("select title even though it is FAULTY")
"RTN","TIUFHA7",87,0)
 . I 'OVERRIDE W "  NOT Moved",! D PAUSE^TIUFXHLX
"RTN","TIUFHA7",88,0)
 S VALMBCK="R" K DIRUT
"RTN","TIUFHA7",89,0)
 L +^TIU(8925.1,FILEDA):1 I '$T W !!,"Another user is editing this Title.",! H 4 G MTLX
"RTN","TIUFHA7",90,0)
 S NEWDCY=$$WHICHDC(FILEDA,PFILEDA,"MT")
"RTN","TIUFHA7",91,0)
 I 'NEWDCY G MTLX ;NEWDCY=New Document Class Y
"RTN","TIUFHA7",92,0)
 S GPFILEDA=+$O(^TIU(8925.1,"AD",PFILEDA,0))
"RTN","TIUFHA7",93,0)
 I GPFILEDA'=+$O(^TIU(8925.1,"AD",+NEWDCY,0)) S OLDCLASS=GPFILEDA
"RTN","TIUFHA7",94,0)
 S OLDCLASS=+$G(OLDCLASS)
"RTN","TIUFHA7",95,0)
 ; -----Check Title under PROPOSED parent:
"RTN","TIUFHA7",96,0)
 N TIUFCK D CHECK^TIUFLF3(FILEDA,NEWDCY,1,.TIUFCK) G:$D(DTOUT) MTLX
"RTN","TIUFHA7",97,0)
 ; -----If Title faulty under proposed parent, don't move:
"RTN","TIUFHA7",98,0)
 S LACKTECH=0
"RTN","TIUFHA7",99,0)
 F TIUFI="E^Edit Template","R^Print Method","V^Visit Linkage Method","D^Validation Method","H^Print Form Header","N^Print Form Number","G^Print Group" S:$D(TIUFCK($E(TIUFI))) LACKTECH=1
"RTN","TIUFHA7",100,0)
 I LACKTECH D
"RTN","TIUFHA7",101,0)
 . W !!,"Documents would not function properly under this move",!,"since Title lacks Technical Fields.  Please edit Title's:",!
"RTN","TIUFHA7",102,0)
 . F TIUFI="E^Edit Template","R^Print Method","V^Visit Linkage Method","D^Validation Method","H^Print Form Header","N^Print Form Number","G^Print Group" W:$D(TIUFCK($E(TIUFI))) ?16,$P(TIUFI,U,2),!
"RTN","TIUFHA7",103,0)
 . W !,"Use values Title inherits from its ancestors.  (To see inherited values, select",!,"Detailed Display for the CURRENT PARENT."
"RTN","TIUFHA7",104,0)
 . I $D(TIUFCK("H"))!$D(TIUFCK("N"))!$D(TIUFCK("G")) W "  In some cases you may have to look",!,"higher up the hierarchy than current parent."
"RTN","TIUFHA7",105,0)
 . W ")  Then come back and try again",!,"to move the Title.",!
"RTN","TIUFHA7",106,0)
 I LACKTECH,'$$OVERRIDE^TIUFHA2("ignore missing fields") W "  Title NOT moved",! D PAUSE^TIUFXHLX G MTLX
"RTN","TIUFHA7",107,0)
 ; -----Delete Title from old parent, Add to new parent:
"RTN","TIUFHA7",108,0)
 I $P(NODE0,U,7)'=+^TMP("TIUF",$J,"STATI") D AUTOSTAT^TIUFLF6(FILEDA,NODE0,"INACTIVE")
"RTN","TIUFHA7",109,0)
 S DA=TENDA,DA(1)=PFILEDA,DIK="^TIU(8925.1,DA(1),10," D ^DIK
"RTN","TIUFHA7",110,0)
 D REEXPAND(PFILEDA,PLINENO,1)
"RTN","TIUFHA7",111,0)
 D ADDTEN^TIUFLF4(+NEWDCY,FILEDA,NODE0,"")
"RTN","TIUFHA7",112,0)
 S NDCLNO=+$O(^TMP("TIUF1IDX",$J,"DAF",+NEWDCY,0))
"RTN","TIUFHA7",113,0)
 I NDCLNO D REEXPAND(+NEWDCY,NDCLNO,1),VALMBG(FILEDA,PFILEDA,PLINENO)
"RTN","TIUFHA7",114,0)
 W !,"...Title Inactivated, Moved to ",$P(NEWDCY,U,2),"."
"RTN","TIUFHA7",115,0)
 K ^XTMP("TIUFMOVE"_TIUFMOVE_FILEDA) ; Cleanup before resetting
"RTN","TIUFHA7",116,0)
 S ^XTMP("TIUFMOVE"_TIUFMOVE_FILEDA,0)=+$$FMADD^XLFDT(DT,30)_U_DT
"RTN","TIUFHA7",117,0)
 D MTRPOINT^TIUFHA8(FILEDA,OLDCLASS)
"RTN","TIUFHA7",118,0)
 D  D:'$D(DIRUT) PAUSE^TIUFXHLX
"RTN","TIUFHA7",119,0)
 . W !!,"Since the Title is in a new Document Class, it now inherits from a new parent",!,"wherever it lacks its own values, and its behavior may differ from before.  It",!
"RTN","TIUFHA7",120,0)
 . W "may also differ from its new siblings wherever it HAS its own values and",!,"siblings INHERIT them.",!
"RTN","TIUFHA7",121,0)
 . W !,"Please check Title thoroughly before reactivating.  Check Business Rules,",!,"TIU Document Parameters, and Document Definition attributes including Basic,",!,"Technical, and Upload fields.",!
"RTN","TIUFHA7",122,0)
 . I TIUFWHO="N" D
"RTN","TIUFHA7",123,0)
 . . W !,"Note that the IN USE display is not updated for CLASSES if old and new Document",!
"RTN","TIUFHA7",124,0)
 . . W "Classes were in different Classes.  This is intentional, to speed up the move",!
"RTN","TIUFHA7",125,0)
 . . W "process.  Display can be updated at any time by collapsing and reexpanding",!
"RTN","TIUFHA7",126,0)
 . . W "the hierarchy.",!
"RTN","TIUFHA7",127,0)
MTLX I $D(DTOUT) S VALMBCK="Q"
"RTN","TIUFHA7",128,0)
 L -^TIU(8925.1,+$G(FILEDA)) S VALM("ENTITY")="Entry" K:TIUFMOVE="" TIUFMOVE
"RTN","TIUFHA7",129,0)
 Q
"RTN","TIUFHA7",130,0)
 ;
"RTN","TIUFHA7",131,0)
REEXPAND(FILEDA,LINENO,UPDATE) ; Collapse, reexpand FILEDA; FILEDA is LINENO in LM array. Sets VALMCNT. Updates LINENO if UPDATE.
"RTN","TIUFHA7",132,0)
 ; Requires FILEDA, LINENO.
"RTN","TIUFHA7",133,0)
 ;DON'T CALL THIS except from template H or C since it resets VALMCNT.
"RTN","TIUFHA7",134,0)
 N INFO,EXPAND
"RTN","TIUFHA7",135,0)
 S INFO=^TMP("TIUF1IDX",$J,LINENO),EXPAND=$P(INFO,U,3) D PARSE^TIUFLLM(.INFO),COLLAPSE^TIUFH1(.INFO) S VALMCNT=VALMCNT-EXPAND D EXPAND1^TIUFH1(.INFO) S VALMCNT=VALMCNT+$P(INFO,U,3)
"RTN","TIUFHA7",136,0)
 I $G(UPDATE) D LINEUP^TIUFLLM1(.INFO,"H")
"RTN","TIUFHA7",137,0)
 Q
"RTN","TIUFHA7",138,0)
 ;
"RTN","TIUFHA8")
0^33^B46720896
"RTN","TIUFHA8",1,0)
TIUFHA8 ; SLC/MAM - MOVEDOC, MDRPOINT(OLDTLDA,NEWTLDA,POLDTLDA,PNEWTLDA,NOLOCK), NEWTITLE(FILEDA,PFILEDA), MTRPOINT(TITLEDA,OLDCLASS) ;1/29/06
"RTN","TIUFHA8",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**11,27,64,184**;Jun 20, 1997
"RTN","TIUFHA8",3,0)
 ;
"RTN","TIUFHA8",4,0)
CANT(FILEDA,NODE0) ; Check if docmts can be moved; return 1 if cant
"RTN","TIUFHA8",5,0)
 N CANTMSG,CANT S CANT=0
"RTN","TIUFHA8",6,0)
 I $P(NODE0,U,4)'="DOC" S CANTMSG="   ?? Entry must be a TITLE (not a Document Class, etc.)" G:$D(CANTMSG) CANTX
"RTN","TIUFHA8",7,0)
 I $$HASITEMS^TIUFLF1(FILEDA) S CANTMSG="   ?? Documents cannot be moved for Titles with Components" G:$D(CANTMSG) CANTX
"RTN","TIUFHA8",8,0)
 I '$O(^TIU(8925,"B",FILEDA,0)) S CANTMSG="  ?? Title has no documents to move" G:$D(CANTMSG) CANTX
"RTN","TIUFHA8",9,0)
 I FILEDA=81 S CANTMSG="   ?? Can't Move Addenda" G:$D(CANTMSG) CANTX
"RTN","TIUFHA8",10,0)
 I $$ISPFTTL^TIUPRFL(FILEDA) S CANTMSG="   ?? Documents cannot be moved for PRF Flag Titles" G:$D(CANTMSG) CANTX
"RTN","TIUFHA8",11,0)
CANTX I $D(CANTMSG) W !,CANTMSG,! D PAUSE^TIUFXHLX S CANT=1
"RTN","TIUFHA8",12,0)
 Q CANT
"RTN","TIUFHA8",13,0)
 ;
"RTN","TIUFHA8",14,0)
MOVEDOC ; Move documents from old Title to new Title.  Template H ONLY.  Titles must have same grandparent.  Titles cannot have components.
"RTN","TIUFHA8",15,0)
 N INFO,FILEDA,NODE0,PFILEDA,TENDA,NEWTLY,LINENO,PLINENO
"RTN","TIUFHA8",16,0)
 N DA,DIK,NPLINENO,DIR,NPFILEDA,NOLOCK,CWAD1,CWAD2
"RTN","TIUFHA8",17,0)
 ; N DIR for EN^VALM2 default
"RTN","TIUFHA8",18,0)
 S VALM("ENTITY")="Title whose documents you want to Move"
"RTN","TIUFHA8",19,0)
AGAINDOC D EN^VALM2(TIUFXNOD,"SO") G:'$O(VALMY(0)) MDOCX S INFO=$G(^TMP("TIUF1IDX",$J,$O(VALMY(0)))) I 'INFO W !," Missing List Manager Data; See IRM",! D PAUSE^TIUFXHLX S VALMBCK="Q" G MDOCX
"RTN","TIUFHA8",20,0)
 S FILEDA=$P(INFO,U,2),NODE0=^TIU(8925.1,FILEDA,0),LINENO=+INFO
"RTN","TIUFHA8",21,0)
 N DIRUT
"RTN","TIUFHA8",22,0)
 ; - Check selected title. Need TIUFXNOD phrase to prevent loop:
"RTN","TIUFHA8",23,0)
 I $$CANT(FILEDA,NODE0) G MDOCX:$D(DIRUT)!(TIUFXNOD["="),AGAINDOC
"RTN","TIUFHA8",24,0)
 S PFILEDA=+$O(^TIU(8925.1,"AD",FILEDA,0)),PLINENO=$P(INFO,U,5)
"RTN","TIUFHA8",25,0)
 S TENDA=$P(INFO,U,6)
"RTN","TIUFHA8",26,0)
 S VALMBCK="R" K DIRUT
"RTN","TIUFHA8",27,0)
 S NEWTLY=$$NEWTITLE(FILEDA,PFILEDA)
"RTN","TIUFHA8",28,0)
 I 'NEWTLY G MDOCX
"RTN","TIUFHA8",29,0)
 D  I 'NEWTLY G MDOCX ;P64 add Are you sure; add CWAD/nonCWAD warning
"RTN","TIUFHA8",30,0)
 . S DIR(0)="Y",DIR("B")="YES",DIR("?")="  Action not reversible if target title already has its own documents."
"RTN","TIUFHA8",31,0)
 . S DIR("A",1)="Moving documents from title",DIR("A",2)="            "_$P(NODE0,U),DIR("A",3)="  to title  "_$P(NEWTLY,U,2)_"."
"RTN","TIUFHA8",32,0)
 . S DIR("A")="    Are you sure"
"RTN","TIUFHA8",33,0)
 . S NPFILEDA=+$O(^TIU(8925.1,"AD",+NEWTLY,0)),CWAD1=$P($G(^TIU(8925.1,NPFILEDA,0)),U,14),CWAD2=$P($G(^TIU(8925.1,PFILEDA,0)),U,14)
"RTN","TIUFHA8",34,0)
 . I (CWAD1="")&(CWAD2'="")!((CWAD1'="")&(CWAD2="")) S DIR("A")="CWADs behave differently from nonCWAD documents. Sure you want to move",DIR("B")="NO",DIR("?")="  CWADs generate alerts; nonCWADs don't."
"RTN","TIUFHA8",35,0)
 . W ! D ^DIR I 'Y S NEWTLY=0
"RTN","TIUFHA8",36,0)
 I $P(NODE0,U,7)'=+^TMP("TIUF",$J,"STATI") D AUTOSTAT^TIUFLF6(FILEDA,NODE0,"INACTIVE")
"RTN","TIUFHA8",37,0)
 S NOLOCK=0 D MDRPOINT(FILEDA,+NEWTLY,PFILEDA,NPFILEDA,.NOLOCK)
"RTN","TIUFHA8",38,0)
 W ! W:NOLOCK "...done.  Please move remaining documents later."
"RTN","TIUFHA8",39,0)
 W:'NOLOCK "...done.  All documents Moved to Title ",$P(NEWTLY,U,2),".",!,"Parent Document Type updated as necessary for all documents."
"RTN","TIUFHA8",40,0)
 W !!,"If you want users to be able to enter more documents on the OLD TITLE,",!,"please reactivate it."
"RTN","TIUFHA8",41,0)
 D PAUSE^TIUFXHLX
"RTN","TIUFHA8",42,0)
 S NPLINENO=+$O(^TMP("TIUF1IDX",$J,"DAF",NPFILEDA,0))
"RTN","TIUFHA8",43,0)
 I NPFILEDA'=PFILEDA D REEXPAND^TIUFHA7(PFILEDA,PLINENO,1)
"RTN","TIUFHA8",44,0)
 D REEXPAND^TIUFHA7(NPFILEDA,NPLINENO,1),VALMBG^TIUFHA7(+NEWTLY,FILEDA,LINENO)
"RTN","TIUFHA8",45,0)
MDOCX I '$G(NEWTLY) W !,"...Nothing moved" H 2 ;P64 add Nothing moved
"RTN","TIUFHA8",46,0)
 S VALM("ENTITY")="Entry"
"RTN","TIUFHA8",47,0)
 Q
"RTN","TIUFHA8",48,0)
 ;
"RTN","TIUFHA8",49,0)
MDRPOINT(OLDTLDA,NEWTLDA,POLDTLDA,PNEWTLDA,NOLOCK) ; Repoint for Move Documents from one title to another: Repoints TITLE and PARENT DOCUMENT TYPE for documents that use old title.
"RTN","TIUFHA8",50,0)
 ; If old and new titles are in same DC, skips repointing PARENT DOCUMENT TYPE.
"RTN","TIUFHA8",51,0)
 N DIE,DR,DA,FILEDA
"RTN","TIUFHA8",52,0)
 W !!,"OLD Title inactivated.  Moving documents..."
"RTN","TIUFHA8",53,0)
 S DR=".01////"_NEWTLDA,DIE=8925
"RTN","TIUFHA8",54,0)
 S:POLDTLDA'=PNEWTLDA DR=DR_";.04////"_PNEWTLDA
"RTN","TIUFHA8",55,0)
 S FILEDA=0 F  S FILEDA=$O(^TIU(8925,"B",OLDTLDA,FILEDA)) Q:'FILEDA  D
"RTN","TIUFHA8",56,0)
 . L +^TIU(8925,FILEDA,0):1 I '$T W !,"...Document can't be locked.  Please move it later. Continuing to move others...",! H 2 S NOLOCK=1 Q
"RTN","TIUFHA8",57,0)
 . S DA=FILEDA D ^DIE
"RTN","TIUFHA8",58,0)
 . W "." L -^TIU(8925,FILEDA,0)
"RTN","TIUFHA8",59,0)
 Q
"RTN","TIUFHA8",60,0)
 ;
"RTN","TIUFHA8",61,0)
NEWTITLE(FILEDA,PFILEDA) ; Function returns DIC's Y=N^S of New Title to move documents to, or 0 if none chosen.
"RTN","TIUFHA8",62,0)
 ;Requires FILEDA = IFN of old Title
"RTN","TIUFHA8",63,0)
 ;Requires PFILEDA = parent of old Title
"RTN","TIUFHA8",64,0)
 N X,Y,DIC,DIR,NEWTLY,TIUFCK,NPFILEDA,GPFILEDA,OVERRIDE
"RTN","TIUFHA8",65,0)
 N SCRN1,SCRN2,SCRN3
"RTN","TIUFHA8",66,0)
 S GPFILEDA=+$O(^TIU(8925.1,"AD",PFILEDA,0)) ; G'parent of old Title
"RTN","TIUFHA8",67,0)
AGAINNEW S DIC=8925.1,DIC(0)="AEMNQZ" K NEWTLY
"RTN","TIUFHA8",68,0)
 W !!,"  Selecting target Title."
"RTN","TIUFHA8",69,0)
 W "  Enter '??' for a list of selectable ones.",!
"RTN","TIUFHA8",70,0)
 W "  You may not select PRF Flag Titles or Titles outside"
"RTN","TIUFHA8",71,0)
 W " the original Class."
"RTN","TIUFHA8",72,0)
 S DIC("A")="Select TIU TITLE NAME to Move documents to: "
"RTN","TIUFHA8",73,0)
 ; - Type=TL, not=old title, not addm title, not PRF title,
"RTN","TIUFHA8",74,0)
 ;   same g'parent (i.e. class):
"RTN","TIUFHA8",75,0)
 S SCRN1="I $P(^(0),U,4)=""DOC""&(Y'=FILEDA)&(Y'=81)"
"RTN","TIUFHA8",76,0)
 S SCRN2="&'$$ISPFTTL^TIUPRFL(Y)&(GPFILEDA="
"RTN","TIUFHA8",77,0)
 S SCRN3="+$O(^TIU(8925.1,""AD"",+$O(^TIU(8925.1,""AD"",Y,0)),0)))"
"RTN","TIUFHA8",78,0)
 S DIC("S")=SCRN1_SCRN2_SCRN3
"RTN","TIUFHA8",79,0)
 D ^DIC I Y=-1 G NEWTLX
"RTN","TIUFHA8",80,0)
 S NEWTLY=Y,NEWTLY(0)=Y(0),NPFILEDA=+$O(^TIU(8925.1,"AD",+NEWTLY,0))
"RTN","TIUFHA8",81,0)
 ;P64 removed "can't move docmts to natl titles"
"RTN","TIUFHA8",82,0)
 I $$HASITEMS^TIUFLF1(+NEWTLY) W !,"   ?? Documents cannot be moved to Titles with Components",! G AGAINNEW
"RTN","TIUFHA8",83,0)
 D CHECK^TIUFLF3(+NEWTLY,NPFILEDA,0,.TIUFCK)
"RTN","TIUFHA8",84,0)
 I 'TIUFCK D
"RTN","TIUFHA8",85,0)
 . W !!,"Faulty Title.  Please TRY Title and correct problems",!,"before moving documents to it."
"RTN","TIUFHA8",86,0)
 . S OVERRIDE=$$OVERRIDE^TIUFHA2("select title even though it is FAULTY")
"RTN","TIUFHA8",87,0)
 . I 'OVERRIDE W "  Documents NOT Moved.",! D PAUSE^TIUFXHLX K NEWTLY
"RTN","TIUFHA8",88,0)
NEWTLX I $D(DTOUT) S VALMQUIT=1
"RTN","TIUFHA8",89,0)
 Q $S($G(NEWTLY):NEWTLY,1:0)
"RTN","TIUFHA8",90,0)
 ;
"RTN","TIUFHA8",91,0)
MTRPOINT(TITLEDA,OLDCLASS) ; Repoint for Move Title from one DC to another:
"RTN","TIUFHA8",92,0)
 ; Repoints PARENT DOCUMENT TYPE to parent of TITLEDA for documents using
"RTN","TIUFHA8",93,0)
 ;title TITLEDA.
"RTN","TIUFHA8",94,0)
 ; If by special arrangement with TIU developers, Title is moved from one
"RTN","TIUFHA8",95,0)
 ;CLASS to another, ALSO resets class xrefs for documents using TITLEDA.
"RTN","TIUFHA8",96,0)
 ;Requires OLDCLASS = IFN of class title was moved FROM. Gets OLDCLASS
"RTN","TIUFHA8",97,0)
 ;from MOVETL, or from UPDATE using ^XTMP("TIUFMOVEN",TITLEDA) = OLDCLASS
"RTN","TIUFHA8",98,0)
 ; Requires TIUFMOVE,^XTMP("TIUFMOVE"[_N]_TLDA,0)
"RTN","TIUFHA8",99,0)
 N DIE,DR,DA,FILEDA,NOLOCK,XDCDA
"RTN","TIUFHA8",100,0)
 I '$O(^TIU(8925,"B",TITLEDA,0)) W !!,"Title has no documents to update.",! Q
"RTN","TIUFHA8",101,0)
 S NOLOCK=0,XDCDA=+$O(^TIU(8925.1,"AD",TITLEDA,0)) I 'XDCDA W !!,"Title has no parent.",! Q
"RTN","TIUFHA8",102,0)
 W !!,"Processing documents that use this Title...",!
"RTN","TIUFHA8",103,0)
 S FILEDA=0 F  S FILEDA=$O(^TIU(8925,"B",TITLEDA,FILEDA)) Q:'FILEDA  D MTRPT1(TITLEDA,FILEDA,XDCDA,+$G(OLDCLASS),.NOLOCK)
"RTN","TIUFHA8",104,0)
 W !,"Done."
"RTN","TIUFHA8",105,0)
 I NOLOCK D   D PAUSE^TIUFXHLX Q
"RTN","TIUFHA8",106,0)
 . W !!,"  Since some documents needing update were (still) not available, please update",!,"them using action 'Update Documents' (again) for this title.",!
"RTN","TIUFHA8",107,0)
 . S ^XTMP("TIUFMOVE"_TIUFMOVE_TITLEDA,"ONCETHRU")=""
"RTN","TIUFHA8",108,0)
 W "  All documents updated for selected Title.",!
"RTN","TIUFHA8",109,0)
 K ^XTMP("TIUFMOVE"_TIUFMOVE_TITLEDA) D PAUSE^TIUFXHLX
"RTN","TIUFHA8",110,0)
 Q
"RTN","TIUFHA8",111,0)
 ;
"RTN","TIUFHA8",112,0)
MTRPT1(TITLEDA,DA,XDCDA,OLDCLASS,NOLOCK) ; Repoint 1 docmt for Move TL.
"RTN","TIUFHA8",113,0)
 ; Requires TITLEDA,DA,XDCDA,TIUFMOVE.  Requires OLDCLASS>or=0.
"RTN","TIUFHA8",114,0)
 ; Kills DA node of ^XTMP("TIUFMOVE[N]"_TLDA if successfully updated.
"RTN","TIUFHA8",115,0)
 I $D(^XTMP("TIUFMOVE"_TIUFMOVE_TITLEDA,"ONCETHRU")),'$D(^XTMP("TIUFMOVE"_TIUFMOVE_TITLEDA,DA)) Q  ;DA already updated
"RTN","TIUFHA8",116,0)
 I TIUFMOVE'="N",XDCDA=$P(^TIU(8925,DA,0),U,4) Q  ; move NOT between CLASSES, Parent Docmt Type already ok.
"RTN","TIUFHA8",117,0)
 L +^TIU(8925,DA,0):1 I '$T W !,"...Document ",DA," can't be locked, not updated.",! S NOLOCK=1 S ^XTMP("TIUFMOVE"_TIUFMOVE_TITLEDA,DA)="" Q
"RTN","TIUFHA8",118,0)
 S DR=".04////"_XDCDA,DIE=8925 D ^DIE
"RTN","TIUFHA8",119,0)
 I OLDCLASS D CLXREF^TIUFHA9(DA,OLDCLASS)
"RTN","TIUFHA8",120,0)
 L -^TIU(8925,DA,0)
"RTN","TIUFHA8",121,0)
 I $G(ACTION)="U" W !,"Document ",DA," updated"
"RTN","TIUFHA8",122,0)
 E  W "."
"RTN","TIUFHA8",123,0)
 K ^XTMP("TIUFMOVE"_TIUFMOVE_TITLEDA,DA)
"RTN","TIUFHA8",124,0)
 Q
"RTN","TIUFHA8",125,0)
 ;
"RTN","TIUFHA8",126,0)
DCDOCMTS(XDCLASS,OLDCLASS) ; Updates CLASS xrefs for documents using DC XDCLASS
"RTN","TIUFHA8",127,0)
 N TENDA,TITLEDA
"RTN","TIUFHA8",128,0)
 S TENDA=0
"RTN","TIUFHA8",129,0)
 F  S TENDA=$O(^TIU(8925.1,XDCLASS,10,TENDA)) Q:'TENDA  D
"RTN","TIUFHA8",130,0)
 . S TITLEDA=+^TIU(8925.1,XDCLASS,10,TENDA,0) Q:'TITLEDA
"RTN","TIUFHA8",131,0)
 . D TLDOCMTS(TITLEDA,OLDCLASS)
"RTN","TIUFHA8",132,0)
 Q
"RTN","TIUFHA8",133,0)
 ;
"RTN","TIUFHA8",134,0)
TLDOCMTS(TITLEDA,OLDCLASS) ; Updates CLASS xrefs for documents using title TITLEDA.
"RTN","TIUFHA8",135,0)
 N DIE,DR,DA,FILEDA,NOLOCK,XDCDA
"RTN","TIUFHA8",136,0)
 I '$O(^TIU(8925,"B",TITLEDA,0)) Q
"RTN","TIUFHA8",137,0)
 ;I '$O(^TIU(8925,"B",TITLEDA,0)) W !!,"Title has no documents to update.",! Q
"RTN","TIUFHA8",138,0)
 ;W !!,"Updating CLASS cross-references for documents that use this Title...",!
"RTN","TIUFHA8",139,0)
 S FILEDA=0 F  S FILEDA=$O(^TIU(8925,"B",TITLEDA,FILEDA)) Q:'FILEDA  D CLXREF^TIUFHA9(FILEDA,OLDCLASS)
"RTN","TIUFHA8",140,0)
 ;W !,"Done."
"RTN","TIUFHA8",141,0)
 W "."
"RTN","TIUFHA8",142,0)
 Q
"RTN","TIUFHA8",143,0)
 ;
"RTN","TIUFHLP1")
0^22^B13209699
"RTN","TIUFHLP1",1,0)
TIUFHLP1 ; SLC/MAM - On-line help library: EDITVW, FIELD ;4/5/05
"RTN","TIUFHLP1",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**14,184**;Jun 20, 1997
"RTN","TIUFHLP1",3,0)
 ;
"RTN","TIUFHLP1",4,0)
EDITVW ; Write Field Description for Fields Shown in Edit View Templates D
"RTN","TIUFHLP1",5,0)
 N TIUI,FLDNM,FLDNO,MSG,FILEDA,TYPE,PFILEDA
"RTN","TIUFHLP1",6,0)
 S FILEDA=TIUFINFO("FILEDA"),TYPE=$P(TIUFNOD0,U,4)
"RTN","TIUFHLP1",7,0)
 S PFILEDA=+$O(^TIU(8925.1,"AD",FILEDA,0))
"RTN","TIUFHLP1",8,0)
 ; NOTE ON DISPLAY OF HERITABLE FIELDS: text in desc of protocol TIUFD ACTION MENU MGR:
"RTN","TIUFHLP1",9,0)
 I "MN"[TIUFWHO,TYPE'="O" D ITEM^TIUFHLP(^TMP("TIUF",$J,"INHERIT"))
"RTN","TIUFHLP1",10,0)
BASICS W !!,$$CENTER^TIUFL("Help on Basics",80),! K DIROUT
"RTN","TIUFHLP1",11,0)
 F FLDNO=.01,.02,.03,.04,.1,0,.13,.07,.05,.06,.11,.08,.15,3.02,3.03 K DIRUT D  Q:$D(DIRUT)
"RTN","TIUFHLP1",12,0)
 . I FLDNO=0!(FLDNO=3.03),"NM"'[TIUFWHO Q
"RTN","TIUFHLP1",13,0)
 . I FLDNO=.11,TIUFTMPL'="A"!(TYPE="O") Q  ;orphan
"RTN","TIUFHLP1",14,0)
 . I FLDNO=3.02,"N"'[TIUFWHO Q  ;OK to Distribute
"RTN","TIUFHLP1",15,0)
 . I TYPE="O",(FLDNO=.1)!(FLDNO=.08)!(FLDNO=.15)!(FLDNO=.12)!(FLDNO=3.03) Q
"RTN","TIUFHLP1",16,0)
 . D FIELD(8925.1,FLDNO)
"RTN","TIUFHLP1",17,0)
 Q:$D(DTOUT)!$D(DIROUT)
"RTN","TIUFHLP1",18,0)
 I TYPE="O" G BOILTX
"RTN","TIUFHLP1",19,0)
ITEMS W !!,$$CENTER^TIUFL("Help on Items",80),!
"RTN","TIUFHLP1",20,0)
 F FLDNO=10 K DIRUT D FIELD(8925.1,FLDNO) Q:$D(DIRUT)
"RTN","TIUFHLP1",21,0)
 F FLDNO=2,3,4 K DIRUT D FIELD(8925.14,FLDNO) Q:$D(DIRUT)
"RTN","TIUFHLP1",22,0)
 Q:$D(DTOUT)!$D(DIROUT)
"RTN","TIUFHLP1",23,0)
BOILTX W !!,$$CENTER^TIUFL("Help on Boilerplate Text",80),!
"RTN","TIUFHLP1",24,0)
 D FIELD(8925.1,3)
"RTN","TIUFHLP1",25,0)
 Q:$D(DTOUT)!$D(DIROUT)  Q:$G(TIUFSTMP)="X"
"RTN","TIUFHLP1",26,0)
 I TYPE="CO" G UPLOAD
"RTN","TIUFHLP1",27,0)
TECH N PNODE61,PCUSTOM
"RTN","TIUFHLP1",28,0)
 I "MN"'[TIUFWHO Q
"RTN","TIUFHLP1",29,0)
 W !!,$$CENTER^TIUFL("Help on Technical Fields",80),!
"RTN","TIUFHLP1",30,0)
 I TYPE'="O" F FLDNO=4.1,4.2,4.3,4.4,4.45,4.6,4.7,4.9,5,6,6.14,6.1,6.12,6.13,7,8 K DIRUT D FIELD(8925.1,FLDNO) Q:$D(DIRUT)
"RTN","TIUFHLP1",31,0)
 I TYPE="O" D FIELD(8925.1,9)
"RTN","TIUFHLP1",32,0)
 Q:$D(DTOUT)!$D(DIROUT)
"RTN","TIUFHLP1",33,0)
 I TYPE="O"!(TYPE="CO") G EDVWX
"RTN","TIUFHLP1",34,0)
UPLOAD W !!,$$CENTER^TIUFL("Help on Upload",80),!
"RTN","TIUFHLP1",35,0)
 F FLDNO=1.01,1.02,1.03,4,4.5,4.8 K DIRUT D FIELD(8925.1,FLDNO) Q:$D(DIRUT)
"RTN","TIUFHLP1",36,0)
 Q:$D(DTOUT)!$D(DIROUT)
"RTN","TIUFHLP1",37,0)
 W !!,$$CENTER^TIUFL("Help on Upload Record Header",80),!
"RTN","TIUFHLP1",38,0)
 W !,"NOTE: The following fields are for Captioned Headers.  (Fields for Delimited",!,"Headers are similar.)",!
"RTN","TIUFHLP1",39,0)
 F FLDNO=.01:.01:.04,1,.05:.01:.07 K DIRUT D FIELD(8925.12,FLDNO) Q:$D(DIRUT)
"RTN","TIUFHLP1",40,0)
EDVWX D CLEAN^DILF
"RTN","TIUFHLP1",41,0)
 Q
"RTN","TIUFHLP1",42,0)
 ;
"RTN","TIUFHLP1",43,0)
FIELD(FILENO,FLDNO) ; Writes (sub)field description for Display Template D
"RTN","TIUFHLP1",44,0)
 N FLDNM,TIUI,MSG,HERE
"RTN","TIUFHLP1",45,0)
 S FLDNM=$S(FILENO=8925.1:^TMP("TIUF",$J,FLDNO,"LABEL"),FILENO=8925.14:$S(FLDNO=2:"Mnemonic",FLDNO=3:"Sequence",1:"Menu Text"),FILENO=8925.11:^TMP("TIUF",$J,1,FLDNO,"LABEL"),1:"")
"RTN","TIUFHLP1",46,0)
 I FLDNM="" S FLDNM=^TMP("TIUF",$J,2,FLDNO,"LABEL")
"RTN","TIUFHLP1",47,0)
 K DIRUT W:$$CONTINUE^TIUFHLP !?1,$G(IOINHI),$P(FLDNM,U),$G(IOINORM),! Q:$D(DIRUT)
"RTN","TIUFHLP1",48,0)
 I FLDNO=0 W "   The Internal File Number is the number of the entry in the TIU Document",! W:$$CONTINUE^TIUFHLP "   Definition File.  IFN is included in the display to help programmers with",! W:$$CONTINUE^TIUFHLP "   debugging.",! Q
"RTN","TIUFHLP1",49,0)
 D HELP^DIE(FILENO,"",FLDNO,"D")
"RTN","TIUFHLP1",50,0)
 S HERE=1 I $G(TIUFTMPL)="J",(FLDNO=.04)!(FLDNO=.07) S HERE=0
"RTN","TIUFHLP1",51,0)
 F TIUI=1:1:$G(DIHELP) S MSG=^TMP("DIHELP",$J,TIUI) K DIRUT D  Q:$D(DIRUT)
"RTN","TIUFHLP1",52,0)
 . I FLDNO=.04,$G(TIUFTMPL)="J",MSG["O OBJECT" S HERE=1
"RTN","TIUFHLP1",53,0)
 . I FLDNO=.07,$G(TIUFTMPL)="J",MSG["OBJECT STATUS",MSG'["OBJECT STATUS," S HERE=1
"RTN","TIUFHLP1",54,0)
 . W:HERE&$$CONTINUE^TIUFHLP ?3,MSG,!
"RTN","TIUFHLP1",55,0)
 Q
"RTN","TIUFHLP1",56,0)
 ;
"RTN","TIUFL")
0^20^B34624803
"RTN","TIUFL",1,0)
TIUFL ; SLC/MAM - Library of Modules and Functions: SETUP, RMSG, CENTER(X,N) ;4/5/05
"RTN","TIUFL",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**14,184**;Jun 20, 1997
"RTN","TIUFL",3,0)
 ;
"RTN","TIUFL",4,0)
CENTER(X,N) ; Center X in space of N Characters. Adapted from TIULS.
"RTN","TIUFL",5,0)
 ; Truncates X to N chars if X>N.  NOTE: LM truncates header at scroll lock if header longer than VALMWD-1.
"RTN","TIUFL",6,0)
 N SP,ANSCTR
"RTN","TIUFL",7,0)
 S $P(SP," ",((N-$L(X))\2)+1)=""
"RTN","TIUFL",8,0)
 S ANSCTR=$G(SP)_X_$G(SP) I $L(ANSCTR)>N S ANSCTR=$E(ANSCTR,1,N)
"RTN","TIUFL",9,0)
 Q ANSCTR
"RTN","TIUFL",10,0)
 ;
"RTN","TIUFL",11,0)
SETUP ; Sets ^TMP("TIUF",$J) array before entering Document Definition Utility, etc.
"RTN","TIUFL",12,0)
 ; Array is used in routines and in protocols, including protocol
"RTN","TIUFL",13,0)
 ;item text and item displayed name.  If Type field Set of Codes changes,
"RTN","TIUFL",14,0)
 ;or allowable Statuses from TIU Status File, then ^TMP("TIUF" array and
"RTN","TIUFL",15,0)
 ;associated protocols will need changing.
"RTN","TIUFL",16,0)
 ; TIUF uses protocols TIUF TYPE etc. and TIUF STATUS etc. so that Type,
"RTN","TIUFL",17,0)
 ;Status, and Sort values can be edited at the bottom of the LM screen
"RTN","TIUFL",18,0)
 ;without allowed choices scrolling off.
"RTN","TIUFL",19,0)
 N DIC,X,Y,TIUFI,DA
"RTN","TIUFL",20,0)
 S TIUFPRIV=1
"RTN","TIUFL",21,0)
 S X="IOELALL" D ENDR^%ZISS
"RTN","TIUFL",22,0)
ARRNO ; ^TMP("TIUF",$J) subscripts ARRNO_H/A/C/J/T/D/O.
"RTN","TIUFL",23,0)
 ; e.g. ^TMP("TIUF",$J,"ARRNOH")= 1 since LM Template H uses Array
"RTN","TIUFL",24,0)
 ;number 1, i.e. ^TMP("TIUF1" Arrays.
"RTN","TIUFL",25,0)
 F TIUFI="H","A","C","J","T","D","O" S ^TMP("TIUF",$J,"ARRNO"_TIUFI)=$S("HACJ"[TIUFI:1,TIUFI="T":2,1:3) ; D, O are 3
"RTN","TIUFL",26,0)
 ;
"RTN","TIUFL",27,0)
CLINDOC ; subscript "CLINDOC".
"RTN","TIUFL",28,0)
 ; e.g. ^TMP("TIUF",$J,"CLINDOC")=38
"RTN","TIUFL",29,0)
 S DIC=8925.1,DIC(0)="X",X="CLINICAL DOCUMENTS" D ^DIC
"RTN","TIUFL",30,0)
 G:Y=-1 SETUX
"RTN","TIUFL",31,0)
 S ^TMP("TIUF",$J,"CLINDOC")=+Y
"RTN","TIUFL",32,0)
CLPAC ; Subscript "CLPAC"  NOTE: may not find it so subscript may not exist
"RTN","TIUFL",33,0)
 S DIC=8930,DIC(0)="X"
"RTN","TIUFL",34,0)
 S X="CLINICAL COORDINATOR" D ^DIC
"RTN","TIUFL",35,0)
 I Y>0 S ^TMP("TIUF",$J,"CLPAC")=+Y
"RTN","TIUFL",36,0)
RM ; Subscripts "RMAC", "RMAM", "RMHC", "RMHM",
"RTN","TIUFL",37,0)
 ;"RMCM", "RMJC", "RMJM", "RMT", "RMD" similar to VALM("RM"),
"RTN","TIUFL",38,0)
 ;LM Template Right Margin for Sub/Templates A, H, C, and J, T, D; 
"RTN","TIUFL",39,0)
 ;for TIUFWHO Clinician, Manager.
"RTN","TIUFL",40,0)
 S TIUF("RMAC")=186
"RTN","TIUFL",41,0)
 S TIUF("RMAM")=195
"RTN","TIUFL",42,0)
 S TIUF("RMHC")=179
"RTN","TIUFL",43,0)
 S TIUF("RMHM")=188
"RTN","TIUFL",44,0)
 S TIUF("RMCM")=188
"RTN","TIUFL",45,0)
 S TIUF("RMJC")=157
"RTN","TIUFL",46,0)
 S TIUF("RMJM")=166
"RTN","TIUFL",47,0)
 S TIUF("RMT")=123
"RTN","TIUFL",48,0)
 S (TIUF("RMD"),TIUF("RMXM"),TIUF("RMXC"))=80
"RTN","TIUFL",49,0)
NMWIDTH ; Subscript NMWIDTH for entry name in Temps HACJ.
"RTN","TIUFL",50,0)
 S ^TMP("TIUF",$J,"NMWIDTH")=$S("NM"[TIUFWHO:65,1:72) ; Used in Create options.
"RTN","TIUFL",51,0)
 ;
"RTN","TIUFL",52,0)
HIDDEN ; Subscript HIDDEN for IFN of protocol TIUF HIDDEN ACTIONS
"RTN","TIUFL",53,0)
 S DIC=101
"RTN","TIUFL",54,0)
 S X="TIUF HIDDEN ACTIONS" D ^DIC G:Y=-1 SETUX
"RTN","TIUFL",55,0)
 S ^TMP("TIUF",$J,"HIDDEN")=+Y
"RTN","TIUFL",56,0)
 ;
"RTN","TIUFL",57,0)
STOP ; Subscript STOP for IFN of protocol TIUF QUIT1
"RTN","TIUFL",58,0)
 S DIC=101
"RTN","TIUFL",59,0)
 S X="TIUF QUIT1" D ^DIC G:Y=-1 SETUX
"RTN","TIUFL",60,0)
 S ^TMP("TIUF",$J,"STOP")=+Y
"RTN","TIUFL",61,0)
 ;
"RTN","TIUFL",62,0)
NEWHELP ; Subscript NEWHELP for IFN of protocol TIUFC ACTION MENU
"RTN","TIUFL",63,0)
 S DIC=101
"RTN","TIUFL",64,0)
 S X="TIUFC ACTION MENU" D ^DIC G:Y=-1 SETUX
"RTN","TIUFL",65,0)
 S ^TMP("TIUF",$J,"NEWHELP")=+Y
"RTN","TIUFL",66,0)
 ;
"RTN","TIUFL",67,0)
INHERIT ; Subscript INHERIT for IFN of protocol TIUFD ACTION MENU MGR
"RTN","TIUFL",68,0)
 S DIC=101
"RTN","TIUFL",69,0)
 S X="TIUFD ACTION MENU MGR" D ^DIC G:Y=-1 SETUX
"RTN","TIUFL",70,0)
 S ^TMP("TIUF",$J,"INHERIT")=+Y
"RTN","TIUFL",71,0)
 ;
"RTN","TIUFL",72,0)
RIGHT ; Subscript RIGHT for IFN of protocol TIUF RIGHT.
"RTN","TIUFL",73,0)
 S DIC=101
"RTN","TIUFL",74,0)
 S X="TIUF RIGHT" D ^DIC G:Y=-1 SETUX
"RTN","TIUFL",75,0)
 S ^TMP("TIUF",$J,"RIGHT")=+Y
"RTN","TIUFL",76,0)
 ;
"RTN","TIUFL",77,0)
LEFT ; Subscript LEFT for IFN of protocol TIUF LEFT.
"RTN","TIUFL",78,0)
 S DIC=101
"RTN","TIUFL",79,0)
 S X="TIUF LEFT" D ^DIC G:Y=-1 SETUX
"RTN","TIUFL",80,0)
 S ^TMP("TIUF",$J,"LEFT")=+Y
"RTN","TIUFL",81,0)
 ;
"RTN","TIUFL",82,0)
CREATE ; Subscript CREATE for IFN of protocol TIUFC ACTION MENU.
"RTN","TIUFL",83,0)
 S DIC=101
"RTN","TIUFL",84,0)
 S X="TIUFC ACTION MENU" D ^DIC G:Y=-1 SETUX
"RTN","TIUFL",85,0)
 S ^TMP("TIUF",$J,"CREATE")=+Y
"RTN","TIUFL",86,0)
 ;
"RTN","TIUFL",87,0)
TYPE ; Subscripts TYPECL, TYPEDC, TYPETL, etc.
"RTN","TIUFL",88,0)
 S ^TMP("TIUF",$J,"TYPECL")="CLASS"
"RTN","TIUFL",89,0)
 S ^TMP("TIUF",$J,"TYPEDC")="DOCUMENT CLASS"
"RTN","TIUFL",90,0)
 S ^TMP("TIUF",$J,"TYPETL")="TITLE"
"RTN","TIUFL",91,0)
 S ^TMP("TIUF",$J,"TYPECO")="COMPONENT"
"RTN","TIUFL",92,0)
 S ^TMP("TIUF",$J,"TYPEO")="OBJECT"
"RTN","TIUFL",93,0)
 S ^TMP("TIUF",$J,"TYPENONE")="NONE"
"RTN","TIUFL",94,0)
 ;
"RTN","TIUFL",95,0)
STAT ; subscripts "STATI" (I for Inactive), "STATT" (T for Test),
"RTN","TIUFL",96,0)
 ;"STATA" (A for Active), "PCLSTAT", "STAT#"
"RTN","TIUFL",97,0)
 ; e.g. ^TMP("TIUF",$J,"STATI")=13^INACTIVE where
"RTN","TIUFL",98,0)
 ;   13 = TIU Status File IFN for INACTIVE.
"RTN","TIUFL",99,0)
 ; e.g. ^TMP("TIUF",$J,"STAT13")="INACTIVE" where
"RTN","TIUFL",100,0)
 ;   13 = IFN of INACTIVE in TIU Status File.
"RTN","TIUFL",101,0)
 ;
"RTN","TIUFL",102,0)
 S DIC=8925.6,DIC(0)="X"
"RTN","TIUFL",103,0)
 F TIUFI="INACTIVE","TEST","ACTIVE" D  G:Y=-1 SETUX
"RTN","TIUFL",104,0)
 . S X=TIUFI D ^DIC Q:Y=-1
"RTN","TIUFL",105,0)
 . S ^TMP("TIUF",$J,"STAT"_$E(TIUFI))=+Y_U_TIUFI,^TMP("TIUF",$J,"STAT"_+Y)=TIUFI
"RTN","TIUFL",106,0)
 . Q
"RTN","TIUFL",107,0)
SORT ; subscripts "SORT", "SORTCM" (CM for CHANGE SORT MENU),
"RTN","TIUFL",108,0)
 ; e.g. ^TMP("TIUF",$J,"SORT")=3766, =IFN of protocol TIUF SORT
"RTN","TIUFL",109,0)
 ; e.g. ^TMP("TIUF",$J,"SORTCM")=3819, =IFN of protocol TIUF CHANGE SORT MENU
"RTN","TIUFL",110,0)
 ; e.g. ^TMP("TIUF",$J,"SORTT")=3635, =IFN of protocol TIUF SORT BY TYPE
"RTN","TIUFL",111,0)
 K DIC,DA S DIC=101,DIC(0)="X",X="TIUF SORT" D ^DIC G:Y=-1 SETUX
"RTN","TIUFL",112,0)
 S ^TMP("TIUF",$J,"SORT")=+Y
"RTN","TIUFL",113,0)
 S X="TIUF CHANGE SORT MENU" D ^DIC G:Y=-1 SETUX
"RTN","TIUFL",114,0)
 S ^TMP("TIUF",$J,"SORTCM")=+Y
"RTN","TIUFL",115,0)
 F TIUFI="T^TYPE","O^OWNER","S^STATUS","U^USED BY DOCMTS","P^PARENTAGE" D  G:Y=-1 SETUX
"RTN","TIUFL",116,0)
 . S X="TIUF SORT BY "_$P(TIUFI,U,2) D ^DIC I Y=-1 Q
"RTN","TIUFL",117,0)
 . S ^TMP("TIUF",$J,"SORT"_$P(TIUFI,U))=+Y
"RTN","TIUFL",118,0)
MSG S ^TMP("TIUF",$J,"SMSG")="?Help   >ScrollRight   PS/PL PrintScrn/List   +/-"
"RTN","TIUFL",119,0)
 S ^TMP("TIUF",$J,"MSG")="? Help       +, - Next, Previous Screen     PS/PL"
"RTN","TIUFL",120,0)
 S ^TMP("TIUF",$J,"NMSG")="New Users, Please Enter '?NEW' for Help"
"RTN","TIUFL",121,0)
FLDNAM ; Single Subscripts are Field Numbers: e.g. ^TMP("TIUF",$J,4,"LABEL")="Upload Look-Up Method".
"RTN","TIUFL",122,0)
 ;See also FLDTYPE for second piece.
"RTN","TIUFL",123,0)
 S ^TMP("TIUF",$J,0,"LABEL")="IFN^BASICS"
"RTN","TIUFL",124,0)
 S ^TMP("TIUF",$J,1.03,"LABEL")="TARGET TEXT FIELD"
"RTN","TIUFL",125,0)
 F TIUFI=.01:.01:.15,1.01,1.02,2,3,3.02,3.03,4,4.1,4.2,4.3,4.4,4.45,4.5,4.6,4.7,4.8,4.9,5,6,6.1,6.12,6.13,6.14,7,8,9,10 D FIELD^DID(8925.1,TIUFI,"","LABEL","^TMP(""TIUF"",$J,TIUFI)")
"RTN","TIUFL",126,0)
 ;S ^TMP("TIUF",$J,.05,"LABEL")="OWNER^BASICS"
"RTN","TIUFL",127,0)
 ; Double Subscripts are Field Numbers of Multiples,SubField Numbers: e.g
"RTN","TIUFL",128,0)
 ;^TMP("TIUF",$J,1,.01,"LABEL")="Header Piece", the .01 subfield of Multiple field 1:
"RTN","TIUFL",129,0)
 F TIUFI=.01:.01:.07,1 D FIELD^DID(8925.11,TIUFI,"","LABEL","^TMP(""TIUF"",$J,1,TIUFI)"),FIELD^DID(8925.12,TIUFI,"","LABEL","^TMP(""TIUF"",$J,2,TIUFI)")
"RTN","TIUFL",130,0)
 F TIUFI=2,3,4 D FIELD^DID(8925.14,TIUFI,"","LABEL","^TMP(""TIUF"",$J,10,TIUFI)")
"RTN","TIUFL",131,0)
 ;
"RTN","TIUFL",132,0)
FLDTYPE ; Sets ^ piece after FLDNAME = BASICS, TECH, UPLOAD or UPHEAD, i.e. which part of the display the field is in.
"RTN","TIUFL",133,0)
 F TIUFI=.01:.01:.15,3.02,3.03 S $P(^TMP("TIUF",$J,TIUFI,"LABEL"),U,2)="BASICS"
"RTN","TIUFL",134,0)
 F TIUFI=4.1,4.2,4.3,4.4,4.45,4.6,4.7,4.9,5,6,6.1,6.12,6.13,6.14,7,8,9 S $P(^TMP("TIUF",$J,TIUFI,"LABEL"),U,2)="TECH"
"RTN","TIUFL",135,0)
 F TIUFI=1.01:.01:1.03,4,4.5,4.8 S $P(^TMP("TIUF",$J,TIUFI,"LABEL"),U,2)="UPLOAD"
"RTN","TIUFL",136,0)
 F TIUFI=.01:.01:.07,1,2 S $P(^TMP("TIUF",$J,1,TIUFI,"LABEL"),U,2)="UPHEAD",$P(^TMP("TIUF",$J,2,TIUFI,"LABEL"),U,2)="UPHEAD"
"RTN","TIUFL",137,0)
SETUX I $G(Y)=-1 W !!," Missing Basic Variables; See IRM.",! D PAUSE^TIUFXHLX S VALMQUIT=1
"RTN","TIUFL",138,0)
 Q
"RTN","TIUFL",139,0)
 ;
"RTN","TIUFL",140,0)
RMSG ; redisplays standard TIUF msg.  Sets VALMSG=stnd msg.  Called by items of LM Protocol Menus, items of TIUF HIDDEN ACTIONS.
"RTN","TIUFL",141,0)
 ; Requires TIUFSTMP if currently in subtemplate;
"RTN","TIUFL",142,0)
 ; Requires TIUF messages as set in TIUFL.
"RTN","TIUFL",143,0)
 N MSG
"RTN","TIUFL",144,0)
 S VALMSG=$$VMSG
"RTN","TIUFL",145,0)
 D MSG^VALM10(MSG)
"RTN","TIUFL",146,0)
 Q
"RTN","TIUFL",147,0)
 ;
"RTN","TIUFL",148,0)
VMSG() ; Function returns standard VALMSG for a Template.
"RTN","TIUFL",149,0)
 N VMSG
"RTN","TIUFL",150,0)
 I $G(TIUFCBEG) S VMSG=^TMP("TIUF",$J,"NMSG") G VMSG1
"RTN","TIUFL",151,0)
 I "HACJ"[TIUFTMPL,'$D(TIUFSTMP) D  G VMSG1
"RTN","TIUFL",152,0)
 . I $P($G(XQORNOD),";")=^TMP("TIUF",$J,"RIGHT") S VMSG=^TMP("TIUF",$J,"MSG") Q
"RTN","TIUFL",153,0)
 . I $P($G(XQORNOD),";")=^TMP("TIUF",$J,"LEFT") S VMSG=^TMP("TIUF",$J,"SMSG") Q
"RTN","TIUFL",154,0)
 . I $G(VALMLFT)<80 S VMSG=^TMP("TIUF",$J,"SMSG") Q
"RTN","TIUFL",155,0)
 . S VMSG=^TMP("TIUF",$J,"MSG")
"RTN","TIUFL",156,0)
 I $G(TIUFSTMP)="T" D  G VMSG1
"RTN","TIUFL",157,0)
 . I $P($G(XQORNOD),";")=^TMP("TIUF",$J,"RIGHT") S VMSG=^TMP("TIUF",$J,"MSG") Q
"RTN","TIUFL",158,0)
 . I $P($G(XQORNOD),";")=^TMP("TIUF",$J,"LEFT") S VMSG=^TMP("TIUF",$J,"SMSG") Q
"RTN","TIUFL",159,0)
 . I $G(VALMLFT)<80 S VMSG=^TMP("TIUF",$J,"SMSG") Q
"RTN","TIUFL",160,0)
 . S VMSG=^TMP("TIUF",$J,"MSG")
"RTN","TIUFL",161,0)
 I $G(TIUFSTMP)="D"!($G(TIUFSTMP)="X") S VMSG=^TMP("TIUF",$J,"MSG")
"RTN","TIUFL",162,0)
VMSG1 Q VMSG
"RTN","TIUFL",163,0)
 ;
"RTN","TIUFLD")
0^21^B38075587
"RTN","TIUFLD",1,0)
TIUFLD ; SLC/MAM - Lib; Template D Related; SETFLD(FILEDA,LASTLIN,FLDNO,SUBFDA,SUBFLDNO), INHERIT(FILEDA,PFILEDA,FLDNO,EIFORM,SUBFDA,SUBFLDNO,VALUE,AFILEDA), MULTILN(TIUREC,LASTLIN,FLDNAME) ;3/2/06
"RTN","TIUFLD",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**14,77,184**;Jun 20, 1997
"RTN","TIUFLD",3,0)
 ;
"RTN","TIUFLD",4,0)
SETFLD(FILEDA,LASTLIN,FLDNO,SUBFDA,SUBFLDNO) ; Puts External Field in TMP("TIUF3") for Template D (Display), for FILEDA.
"RTN","TIUFLD",5,0)
 ; Requires Array TIUFQ as set in TIUFD, TIUFD1.
"RTN","TIUFLD",6,0)
 ; Requires FILEDA=DA in file.
"RTN","TIUFLD",7,0)
 ; Requires LASTLIN = Last array line set, if setting array; = Last
"RTN","TIUFLD",8,0)
 ;line to keep before resetting the rest if resetting array.
"RTN","TIUFLD",9,0)
 ; Updates LASTLIN to Last array line set by this module.
"RTN","TIUFLD",10,0)
 ; Requires FLDNO from list: 0, .01, .02, .03, .04, .05, .07, .08, .1, .11, .13, .15, 1, 1.01, 1.02, 1.03, 2, 3.02, 3.03, 4, 4.1, 4.2, 4.3, 4.4, 4,45, 4.5, 4.6, 4.7, 4.8, 4.9, 5, 6 6.1, 6.12, 6.13, 6.14, 7, 8, 9.
"RTN","TIUFLD",11,0)
 ; For FLDNO 0, sets IFN=FILEDA
"RTN","TIUFLD",12,0)
 ; For FLDNO 1 and 2, requires SUBFLDNO from list: .01, .02, .03, .04, .05, .06, .07, .1
"RTN","TIUFLD",13,0)
 ; For FLDNO 1 and 2, requires SUBFDA=DA in subfile.
"RTN","TIUFLD",14,0)
 ; For FLDNO .05, combines .05 and .06 into Owner (one value).
"RTN","TIUFLD",15,0)
 N TIUREC,LINENO,AVAIL,FLDNAME,NODE1,ZZCONT,FLDNAME1,UPFIELD,UPFILE,UPMSG
"RTN","TIUFLD",16,0)
 N FIELDNO,FDA,TYPE,POWNER,COWNER,LP,LC,OWNER,FLDVAL,FILENO,LENGTH
"RTN","TIUFLD",17,0)
 N TIUCKUP,TIUFTEMP
"RTN","TIUFLD",18,0)
 S:'$G(SUBFLDNO) SUBFLDNO=0 S:'$G(SUBFDA) SUBFDA=0
"RTN","TIUFLD",19,0)
 S FLDNAME=$S(FLDNO=.05:"OWNER^BASICS",$G(SUBFLDNO):^TMP("TIUF",$J,FLDNO,SUBFLDNO,"LABEL"),1:^TMP("TIUF",$J,FLDNO,"LABEL")),LENGTH=$P(FLDNAME,U,2),FLDNAME=$P(FLDNAME,U)
"RTN","TIUFLD",20,0)
 S LENGTH=$S(LENGTH="BASICS":16,LENGTH="TECH":20,LENGTH="UPLOAD":29,1:26)
"RTN","TIUFLD",21,0)
 S:FLDNO FLDNAME=$$MIXED^TIULS(FLDNAME)
"RTN","TIUFLD",22,0)
 S:FLDNO=.15 FLDNAME="PRF Flag",LENGTH=16
"RTN","TIUFLD",23,0)
 I $L(FLDNAME)>LENGTH S:$L(FLDNAME," ")=2 FLDNAME1=$P(FLDNAME," "),FLDNAME=$P(FLDNAME," ",2) S:$L(FLDNAME," ")>2 FLDNAME1=$P(FLDNAME," ",1,2),FLDNAME=$P(FLDNAME," ",3,5) S FLDNAME1=$J(FLDNAME1,LENGTH)
"RTN","TIUFLD",24,0)
 S AVAIL=77-$L(FLDNAME),TYPE=$P(TIUFNOD0,U,4)
"RTN","TIUFLD",25,0)
 S FLDNAME=$J(FLDNAME,LENGTH)
"RTN","TIUFLD",26,0)
 I FLDNO=.05 D  G SETFLD2
"RTN","TIUFLD",27,0)
 . S POWNER=TIUFQ(8925.1,FILEDA,.05,"E"),COWNER=TIUFQ(8925.1,FILEDA,.06,"E")
"RTN","TIUFLD",28,0)
 . S LP=$L(POWNER),LC=$L(COWNER)
"RTN","TIUFLD",29,0)
 . S OWNER=$S(LP&'LC:POWNER,LC&'LP:COWNER,LP&LC:$E(POWNER,1,30)_","_$E(COWNER,1,30),1:"None")
"RTN","TIUFLD",30,0)
 . S TIUREC=OWNER
"RTN","TIUFLD",31,0)
 S FILENO=8925.1_$S(FLDNO=1!(FLDNO=2):FLDNO,1:"")
"RTN","TIUFLD",32,0)
 S FIELDNO=$S($G(SUBFLDNO):SUBFLDNO,1:FLDNO)
"RTN","TIUFLD",33,0)
 S FDA=$S($G(SUBFDA):SUBFDA,1:FILEDA)
"RTN","TIUFLD",34,0)
 I FLDNO=.07,$P(TIUFNOD0,U,10) S TIUREC="" G SETFX
"RTN","TIUFLD",35,0)
 S TIUREC=$G(TIUFQ(FILENO,FDA,FIELDNO,"E"))
"RTN","TIUFLD",36,0)
 I FLDNO=.08,TIUREC="NA" G SETFX
"RTN","TIUFLD",37,0)
 I FLDNO=.15,TIUREC="NA" G SETFX
"RTN","TIUFLD",38,0)
 I FLDNO=.1!(FLDNO=.13)!(FLDNO=3.02),TIUREC="" S TIUREC="NO"
"RTN","TIUFLD",39,0)
 I FLDNO=0 S TIUREC=FILEDA ; Sets IFN
"RTN","TIUFLD",40,0)
 G:FLDNO<1 SETFLD2 ;  not heritable.
"RTN","TIUFLD",41,0)
 S NODE1=$G(^TIU(8925.1,FILEDA,1))
"RTN","TIUFLD",42,0)
 I FLDNO=1.01 D
"RTN","TIUFLD",43,0)
 . I $P(NODE1,U)="" S TIUREC="" Q
"RTN","TIUFLD",44,0)
 . D FILE^DID($P(NODE1,U),"","NAME","UPFILE")
"RTN","TIUFLD",45,0)
 . S UPMSG=" FILE ERROR; Please Edit Upload"
"RTN","TIUFLD",46,0)
 . I $G(DIERR) S TIUREC=UPMSG Q
"RTN","TIUFLD",47,0)
 . S TIUREC=UPFILE("NAME")
"RTN","TIUFLD",48,0)
 . D CHK^DIE(8925.1,1.01,"",TIUREC,.TIUCKUP) I TIUCKUP="^" S TIUREC=UPMSG
"RTN","TIUFLD",49,0)
 I FLDNO=1.03 D
"RTN","TIUFLD",50,0)
 . I $P(NODE1,U,3)="" S TIUREC="" Q
"RTN","TIUFLD",51,0)
 . S UPMSG=" FILE/FIELD/SUBSCRIPT ERROR; Please Edit Upload"
"RTN","TIUFLD",52,0)
 . D FIELD^DID($P(NODE1,U),+$P($P(NODE1,U,3),";"),"","LABEL;GLOBAL SUBSCRIPT LOCATION","UPFIELD")
"RTN","TIUFLD",53,0)
 . I $G(DIERR) S TIUREC=UPMSG Q
"RTN","TIUFLD",54,0)
 . I UPFIELD("GLOBAL SUBSCRIPT LOCATION")'=($P($P(NODE1,U,3),";",2)_";0") S TIUREC=UPMSG Q
"RTN","TIUFLD",55,0)
 . S TIUREC=UPFIELD("LABEL")
"RTN","TIUFLD",56,0)
 I FLDNO'<1,FLDNO<3 G SETFLD2 ;Upload flds, not heritable.
"RTN","TIUFLD",57,0)
 G:FLDNO=3.02!(FLDNO=4)!(FLDNO=4.5)!(FLDNO=4.8) SETFLD2 ;  not heritable.
"RTN","TIUFLD",58,0)
SETFLD1 ; Technical fields, others which are heritable.
"RTN","TIUFLD",59,0)
 I TIUREC'="" S TIUREC="  "_TIUREC
"RTN","TIUFLD",60,0)
 I TIUREC="" D INHERIT(FILEDA,0,FLDNO,"E",SUBFDA,SUBFLDNO,.FLDVAL) S TIUREC=FLDVAL S TIUREC=$S(FLDVAL("E")'="":"* "_FLDVAL("E"),FLDNO=3.03&(FILEDA=38):"  NO (by default)",FLDNO=3.03:"* NO",1:"") ;P77
"RTN","TIUFLD",61,0)
SETFLD2 I $D(FLDNAME1) S LASTLIN=LASTLIN+1,^TMP("TIUF3",$J,LASTLIN,0)=FLDNAME1
"RTN","TIUFLD",62,0)
 I FLDNO<1!(FLDNO=3.02),TIUREC'="" S TIUREC="  "_TIUREC
"RTN","TIUFLD",63,0)
 I $L(TIUREC)'>AVAIL S LASTLIN=LASTLIN+1,^TMP("TIUF3",$J,LASTLIN,0)=FLDNAME_": "_TIUREC G SETFX
"RTN","TIUFLD",64,0)
 I FLDNO'<4 D FIELD^DID(8925.1,FLDNO,"","TYPE","TIUFTEMP") I TIUFTEMP("TYPE")="MUMPS" D MMULTILN(TIUREC,.LASTLIN,FLDNAME) G SETFX
"RTN","TIUFLD",65,0)
 I FLDNO=1!(FLDNO=2),$G(SUBFLDNO)=1 D MMULTILN(TIUREC,.LASTLIN,FLDNAME) G SETFX ;Upload caption transform code
"RTN","TIUFLD",66,0)
 D MULTILN(TIUREC,.LASTLIN,FLDNAME)
"RTN","TIUFLD",67,0)
SETFX D CLEAN^DILF
"RTN","TIUFLD",68,0)
 Q
"RTN","TIUFLD",69,0)
 ;
"RTN","TIUFLD",70,0)
INHERIT(FILEDA,PFILEDA,FLDNO,EIFORM,SUBFDA,SUBFLDNO,VALUE,AFILEDA) ;
"RTN","TIUFLD",71,0)
 ; Can't make it a function with pieces since pieces may contain ^.
"RTN","TIUFLD",72,0)
 ; For FLDNO'=6.14, Returns in VALUE the Field Value for first ancestor
"RTN","TIUFLD",73,0)
 ;of FILEDA that has a field value.  If not found, returns "".
"RTN","TIUFLD",74,0)
 ; For FLDNO=6.14, returns "" if no ancestor has a value, internal=0
"RTN","TIUFLD",75,0)
 ;if ANY ancestor is 0; else 1.
"RTN","TIUFLD",76,0)
 ; Requires FILEDA, FLDNO. If FLDNO = 1 or 2, requires SUBFDA,
"RTN","TIUFLD",77,0)
 ;SUBFLDNO. See SETFLDS.
"RTN","TIUFLD",78,0)
 ; Optional PFILEDA=anticipated parent IFN for ADD ITEMS, etc.
"RTN","TIUFLD",79,0)
 ; If EIFORM="E", returns in VALUE("E") the external value; else
"RTN","TIUFLD",80,0)
 ;returns VALUE("E")=""
"RTN","TIUFLD",81,0)
 ; Returns AFILEDA= IFN of ancestor used, if none, 0.
"RTN","TIUFLD",82,0)
 ; Requires FLDNO from list (heritable subset of list from SETFLD):  3.03, 4.1, 4.2, 4.3, 4.4, 4.45, 4.9, 5, 6 6.1, 6.12, 6.13, 6.14, 7, 8, 9. WHAT ABOUT ENTRY AND EXIT ACTIONS? MAM
"RTN","TIUFLD",83,0)
 N PNODE,NODENO,ZZCONT,C,Y
"RTN","TIUFLD",84,0)
 S (VALUE,VALUE("E"))=""
"RTN","TIUFLD",85,0)
 I '$D(EIFORM) S EIFORM="I"
"RTN","TIUFLD",86,0)
 S:'$G(SUBFLDNO) SUBFLDNO=0 S:'$G(SUBFDA) SUBFDA=0
"RTN","TIUFLD",87,0)
 S:'PFILEDA PFILEDA=$O(^TIU(8925.1,"AD",FILEDA,0)) G:'PFILEDA INHEX
"RTN","TIUFLD",88,0)
 S NODENO=$S((FLDNO=6.1)!(FLDNO=6.12)!(FLDNO=6.13)!(FLDNO=6.14):6.1,(FLDNO=3.03):3,1:FLDNO)
"RTN","TIUFLD",89,0)
 S PNODE=$G(^TIU(8925.1,PFILEDA,NODENO)) I PNODE="" G AGAIN
"RTN","TIUFLD",90,0)
 I FLDNO=6.14 S VALUE=$P(PNODE,U,4) G:VALUE=0 INHEX G:VALUE="" AGAIN
"RTN","TIUFLD",91,0)
 S VALUE=$S(FLDNO=6.1:$P(PNODE,U),FLDNO=6.12:$P(PNODE,U,2),FLDNO=6.13:$P(PNODE,U,3),FLDNO=6.14:$P(PNODE,U,4),FLDNO=3.03:$P(PNODE,U,3),1:PNODE)
"RTN","TIUFLD",92,0)
 G:VALUE'="" INHEX
"RTN","TIUFLD",93,0)
AGAIN D INHERIT(PFILEDA,0,FLDNO,EIFORM,SUBFDA,SUBFLDNO,.VALUE,.AFILEDA)
"RTN","TIUFLD",94,0)
INHEX S AFILEDA=+PFILEDA
"RTN","TIUFLD",95,0)
 I VALUE'="",EIFORM="E" D
"RTN","TIUFLD",96,0)
 . I FLDNO=1 S C=$P(^DD(8925.11,SUBFLDNO,0),U,2),Y=VALUE D Y^DIQ S VALUE("E")=Y Q
"RTN","TIUFLD",97,0)
 . I FLDNO=2 S C=$P(^DD(8925.12,SUBFLDNO,0),U,2),Y=VALUE D Y^DIQ S VALUE("E")=Y Q
"RTN","TIUFLD",98,0)
 . S C=$P(^DD(8925.1,FLDNO,0),U,2),Y=VALUE D Y^DIQ S VALUE("E")=Y Q
"RTN","TIUFLD",99,0)
 Q
"RTN","TIUFLD",100,0)
 ;
"RTN","TIUFLD",101,0)
MULTILN(TIUREC,LASTLIN,FLDNAME) ; Set FLDNAME and as much as fits of TIUREC
"RTN","TIUFLD",102,0)
 ;into line LASTLIN+1.  Set rest of TIUREC into succeeding lines,
"RTN","TIUFLD",103,0)
 ;splitting at words.
"RTN","TIUFLD",104,0)
 ; Requires TIUREC,FLDNAME
"RTN","TIUFLD",105,0)
 ; Requires LASTLIN = Last array line set, if setting array; = Last
"RTN","TIUFLD",106,0)
 ;line to keep before resetting the rest if resetting array.
"RTN","TIUFLD",107,0)
 ; Updates LASTLIN to Last array line set by this module.
"RTN","TIUFLD",108,0)
 N TIUK,TIUL,REST,TIUFT,AVAIL,LINENO
"RTN","TIUFLD",109,0)
 S AVAIL=79-$L($G(FLDNAME)) D WRAP^TIUFLD(TIUREC,AVAIL)
"RTN","TIUFLD",110,0)
 S LINENO=LASTLIN+1 ;P77 cleanup
"RTN","TIUFLD",111,0)
 S ^TMP("TIUF3",$J,LINENO,0)=FLDNAME_": "_TIUFT(1)
"RTN","TIUFLD",112,0)
 S REST="" F TIUK=2:1 Q:'$D(TIUFT(TIUK))  S REST=REST_TIUFT(TIUK)
"RTN","TIUFLD",113,0)
 K TIUFT I REST'="" D WRAP^TIUFLD(REST,79)
"RTN","TIUFLD",114,0)
 F TIUL=1:1 Q:'$D(TIUFT(TIUL))  S LINENO=LINENO+1,^TMP("TIUF3",$J,LINENO,0)=TIUFT(TIUL)
"RTN","TIUFLD",115,0)
 S LASTLIN=LINENO
"RTN","TIUFLD",116,0)
 Q
"RTN","TIUFLD",117,0)
 ;
"RTN","TIUFLD",118,0)
MMULTILN(TIUREC,LASTLIN,FLDNAME) ;MULTILN for M code (show spaces)
"RTN","TIUFLD",119,0)
 N TIUK,TIUL,TIUFT,LINENO,FCHAR,LCHAR
"RTN","TIUFLD",120,0)
 S LINENO=LASTLIN,TIUK=1,FCHAR=1,LCHAR=79-($L($G(FLDNAME))+2)
"RTN","TIUFLD",121,0)
 F  D  Q:FCHAR>$L(TIUREC)
"RTN","TIUFLD",122,0)
 . S TIUFT(TIUK)=$E(TIUREC,FCHAR,LCHAR)
"RTN","TIUFLD",123,0)
 . S TIUK=TIUK+1,FCHAR=LCHAR+1,LCHAR=FCHAR+78
"RTN","TIUFLD",124,0)
 S TIUFT(1)=FLDNAME_": "_TIUFT(1)
"RTN","TIUFLD",125,0)
 F TIUL=1:1 Q:'$D(TIUFT(TIUL))  S LINENO=LINENO+1,^TMP("TIUF3",$J,LINENO,0)=TIUFT(TIUL)
"RTN","TIUFLD",126,0)
 F TIUL=2:1 Q:'$D(TIUFT(TIUL))  S ^TMP("TIUF3",$J,LINENO,0)=TIUFT(TIUL)
"RTN","TIUFLD",127,0)
 S LASTLIN=LINENO
"RTN","TIUFLD",128,0)
 Q
"RTN","TIUFLD",129,0)
 ;
"RTN","TIUFLD",130,0)
WRAP(TEXT,LENGTH,FLENGTH) ; Breaks text string into first substring of
"RTN","TIUFLD",131,0)
 ;length FLENGTH; subsequent substrings of length LENGTH;
"RTN","TIUFLD",132,0)
 ;Sets them into array TIUFT with subscripts 1,2,3, etc.
"RTN","TIUFLD",133,0)
 ;Adapted from Joel Russell's WRAP^GMTSORC.
"RTN","TIUFLD",134,0)
 N TIUFI,TIUFJ,LINE,TIUFT1,TIUFT2,TIUFY
"RTN","TIUFLD",135,0)
 I $G(TEXT)']"" Q
"RTN","TIUFLD",136,0)
 F TIUFI=1:1 D  Q:TIUFI=$L(TEXT," ")
"RTN","TIUFLD",137,0)
 . S TIUFT=$P(TEXT," ",TIUFI)
"RTN","TIUFLD",138,0)
 . I $L(TIUFT)>LENGTH D
"RTN","TIUFLD",139,0)
 . . S TIUFT1=$E(TIUFT,1,LENGTH),TIUFT2=$E(TIUFT,LENGTH+1,$L(TIUFT))
"RTN","TIUFLD",140,0)
 . . S $P(TEXT," ",TIUFI)=TIUFT1_" "_TIUFT2
"RTN","TIUFLD",141,0)
 S LINE=1,TIUFT(1)=$P(TEXT," ")
"RTN","TIUFLD",142,0)
 F TIUFI=2:1 D  Q:TIUFI'<$L(TEXT," ")
"RTN","TIUFLD",143,0)
 . S:$L($G(TIUFT(LINE))_" "_$P(TEXT," ",TIUFI))>LENGTH LINE=LINE+1,TIUFY=1
"RTN","TIUFLD",144,0)
 . S TIUFT(LINE)=$G(TIUFT(LINE))_$S(+$G(TIUFY):"",1:" ")_$P(TEXT," ",TIUFI),TIUFY=0
"RTN","TIUFLD",145,0)
 Q
"RTN","TIUFLD",146,0)
 ;
"RTN","TIUFLF7")
0^26^B33656495
"RTN","TIUFLF7",1,0)
TIUFLF7 ; SLC/MAM - Library; File 8925.1: POSSTYPE(PFILEDA),TYPELIST(NAME,FILEDA,PFILEDA,TYPEMSG,TYPELIST),EDTYPE(FILEDA,NODE0,PFILEDA,XFLG,USED),DUPNAME(NAME,FILEDA),DUPITEM(NAME,PFILEDA,FILEDA),DDEFIEN(TIUDEFNM,etc) ;5/2/05
"RTN","TIUFLF7",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**2,17,90,184**;Jun 20, 1997
"RTN","TIUFLF7",3,0)
 ;
"RTN","TIUFLF7",4,0)
POSSTYPE(PFILEDA) ; Function returns possible Types an Entry may have to
"RTN","TIUFLF7",5,0)
 ;be consistent with its parent, e.g. ^CL^DC^
"RTN","TIUFLF7",6,0)
 ; If parent has bad type or no type, Returns POSSTYPE="".
"RTN","TIUFLF7",7,0)
 ; If PFILEDA = 0, Returns all Types including Object.
"RTN","TIUFLF7",8,0)
 ; Requires PFILEDA = 8925.1 IFN of parent of Entry;
"RTN","TIUFLF7",9,0)
 ;                  = 0 if Entry has no parent, actual or prospective.
"RTN","TIUFLF7",10,0)
 ; Shared CO can have more than 1 parent.  But any parent will determine the type of the Child to be a CO, so OK to check only 1 parent.
"RTN","TIUFLF7",11,0)
 N PNODE0,POSSTYPE,PTYPE
"RTN","TIUFLF7",12,0)
 S POSSTYPE=""
"RTN","TIUFLF7",13,0)
 I 'PFILEDA S POSSTYPE="^CL^DC^DOC^CO^O^" G POSTX
"RTN","TIUFLF7",14,0)
 S PNODE0=$G(^TIU(8925.1,PFILEDA,0)) I '$D(PNODE0) W !!," File entry "_PFILEDA_" does not exist in File; See IRM",! D PAUSE^TIUFXHLX G POSTX
"RTN","TIUFLF7",15,0)
 S PTYPE=$P(PNODE0,U,4)
"RTN","TIUFLF7",16,0)
 S POSSTYPE=$S(PTYPE="CL":"^CL^DC^",PTYPE="DC":"^DOC^",PTYPE="CO"!(PTYPE="DOC"):"^CO^",1:"")
"RTN","TIUFLF7",17,0)
POSTX Q POSSTYPE
"RTN","TIUFLF7",18,0)
 ;
"RTN","TIUFLF7",19,0)
TYPELIST(NAME,FILEDA,PFILEDA,TYPEMSG,TYPELIST) ; Module sets list of possible types, sets msg array TYPEMSG explaining nonparent limits on type.
"RTN","TIUFLF7",20,0)
 ; Requires NAME of entry being checked
"RTN","TIUFLF7",21,0)
 ; Requires PFILEDA=IFN of parent if entry has actual or prospective parent (as in Create, Add Items)
"RTN","TIUFLF7",22,0)
 ; Requires FILEDA if entry already exists in the file
"RTN","TIUFLF7",23,0)
 ; Optional TYPEMSG
"RTN","TIUFLF7",24,0)
 ; Optional TYPELIST: Returns TYPELIST = subset of CL,DC,DOC,CO,O
"RTN","TIUFLF7",25,0)
 ;representing permitted Types. Example: ^CL^DOC^
"RTN","TIUFLF7",26,0)
 ;If has parent, parent already has item w same name, then TYPELIST=""
"RTN","TIUFLF7",27,0)
 N DUPNAME,POSSTYPE,TYPE,REST,FDATYPE
"RTN","TIUFLF7",28,0)
 S FILEDA=+$G(FILEDA),PFILEDA=+$G(PFILEDA),TYPELIST=""
"RTN","TIUFLF7",29,0)
 S FDATYPE=$S(FILEDA:$P(^TIU(8925.1,FILEDA,0),U,4),1:"")
"RTN","TIUFLF7",30,0)
 I (FDATYPE'="CL")&(FDATYPE'="DC")&(FDATYPE'="DOC")&(FDATYPE'="CO")&(FDATYPE'="O") S FDATYPE=""
"RTN","TIUFLF7",31,0)
 S DUPNAME=$$DUPNAME(NAME,FILEDA)
"RTN","TIUFLF7",32,0)
 S POSSTYPE=$$POSSTYPE(PFILEDA) G:$D(DTOUT) TYPEX
"RTN","TIUFLF7",33,0)
 I POSSTYPE="" S TYPEMSG("T")="Parent has No Type/Wrong Type" G TYPEX
"RTN","TIUFLF7",34,0)
 I FDATYPE="O"!(TIUFTMPL="J") S TYPELIST="^O^" G TYPEX
"RTN","TIUFLF7",35,0)
 S REST="" F TYPE="CL","DC","DOC","CO","O" I POSSTYPE[(U_TYPE_U) D
"RTN","TIUFLF7",36,0)
 . I DUPNAME[(U_TYPE_U) S:TYPE'="DOC" REST=$S(REST'="":REST_" or "_TYPE,1:TYPE) S:TYPE="DOC" REST=$S(REST'="":REST_" or TL",1:"TL") Q
"RTN","TIUFLF7",37,0)
 . I TYPE="O" D  Q
"RTN","TIUFLF7",38,0)
 . . I FDATYPE'="" Q
"RTN","TIUFLF7",39,0)
 . . I '$$BADNAP^TIUFLF1(NAME,FILEDA,1) S TYPELIST=TYPELIST_U_TYPE Q 
"RTN","TIUFLF7",40,0)
 . . S TYPEMSG("O")=" Type cannot be Object; Object would be ambiguous"
"RTN","TIUFLF7",41,0)
 . S TYPELIST=TYPELIST_U_TYPE
"RTN","TIUFLF7",42,0)
 I TYPELIST'="" S TYPELIST=TYPELIST_U
"RTN","TIUFLF7",43,0)
 I REST'="" S TYPEMSG("R")=" Type cannot be "_REST_"; File already has",TYPEMSG("R1")="an entry of that Type with the same Name" Q
"RTN","TIUFLF7",44,0)
TYPEX Q
"RTN","TIUFLF7",45,0)
 ;
"RTN","TIUFLF7",46,0)
DUPNAME(NAME,FILEDA) ; Function returns 1 if NAME already
"RTN","TIUFLF7",47,0)
 ;exists in file for entry OTHER THAN FILEDA, else 0.  If 1, returns
"RTN","TIUFLF7",48,0)
 ;1^Type^Type^ etc., for example, 1^DOC^CO^ means: file has a duplicate
"RTN","TIUFLF7",49,0)
 ;name of Type DOC other than FILEDA and a duplicate name of Type CO
"RTN","TIUFLF7",50,0)
 ;other than FILEDA.
"RTN","TIUFLF7",51,0)
 N XDUPANS,XDUPDA,TYPE
"RTN","TIUFLF7",52,0)
 S FILEDA=+$G(FILEDA)
"RTN","TIUFLF7",53,0)
 S (XDUPDA,XDUPANS)=0
"RTN","TIUFLF7",54,0)
 F  S XDUPDA=$O(^TIU(8925.1,"B",$E(NAME,1,60),XDUPDA)) Q:'XDUPDA  D  ;TIU*1*90 change to 60 chars
"RTN","TIUFLF7",55,0)
 . I NAME=$P(^TIU(8925.1,XDUPDA,0),U),XDUPDA'=FILEDA S:'XDUPANS XDUPANS="1^" S TYPE=$P(^TIU(8925.1,XDUPDA,0),U,4) I TYPE'="" S:XDUPANS'[(U_TYPE_U) XDUPANS=XDUPANS_TYPE_U
"RTN","TIUFLF7",56,0)
 Q XDUPANS
"RTN","TIUFLF7",57,0)
 ;
"RTN","TIUFLF7",58,0)
DUPITEM(NAME,PFILEDA,FILEDA) ; Function returns 1 if PFILEDA already has item
"RTN","TIUFLF7",59,0)
 ;(other than FILEDA) named NAME.
"RTN","TIUFLF7",60,0)
 ; Requires NAME, PFILEDA
"RTN","TIUFLF7",61,0)
 ; Requires FILEDA if FILEDA should be excluded from items checked for
"RTN","TIUFLF7",62,0)
 ;duplicate names
"RTN","TIUFLF7",63,0)
 N ITEMANS,XDUPDA
"RTN","TIUFLF7",64,0)
 S (XDUPDA,ITEMANS)=0,FILEDA=+$G(FILEDA)
"RTN","TIUFLF7",65,0)
 F  S XDUPDA=$O(^TIU(8925.1,"B",$E(NAME,1,60),XDUPDA)) Q:'XDUPDA  D  Q:ITEMANS  ; TIU*1*90 change to 60 chars
"RTN","TIUFLF7",66,0)
 . I NAME=$P(^TIU(8925.1,XDUPDA,0),U),$D(^TIU(8925.1,"AD",XDUPDA,PFILEDA)),XDUPDA'=FILEDA S ITEMANS=1
"RTN","TIUFLF7",67,0)
 I ITEMANS S TIUFIMSG=" Please enter a different Name; Parent already has Item with that Name"
"RTN","TIUFLF7",68,0)
DUPIX Q ITEMANS
"RTN","TIUFLF7",69,0)
 ;
"RTN","TIUFLF7",70,0)
DUP(NAME,PFILEDA,FILEDA) ; Function returns 1 if PFILEDA already has item
"RTN","TIUFLF7",71,0)
 ;(possibly FILEDA itself if FILEDA is Shared) named NAME.
"RTN","TIUFLF7",72,0)
 ; Requires NAME, PFILEDA, FILEDA; Used in NAMSCRN^TIUFLF2
"RTN","TIUFLF7",73,0)
 ; FILEDA is potential, not actual item of PFILEDA.
"RTN","TIUFLF7",74,0)
 N DUPANS S DUPANS=0
"RTN","TIUFLF7",75,0)
 ;Patch 13: Set TIUFIMSG here so NAMSCRN (which calls DUP) always sets
"RTN","TIUFLF7",76,0)
 ;it:
"RTN","TIUFLF7",77,0)
 I $D(^TIU(8925.1,PFILEDA,10,"B",FILEDA)) S DUPANS=1,TIUFIMSG=" Please enter a different Name; Parent already has Item with that Name" G DUPX
"RTN","TIUFLF7",78,0)
 S DUPANS=$$DUPITEM(NAME,PFILEDA,FILEDA)
"RTN","TIUFLF7",79,0)
DUPX Q DUPANS
"RTN","TIUFLF7",80,0)
 ;
"RTN","TIUFLF7",81,0)
EDTYPE(FILEDA,NODE0,PFILEDA,XFLG,USED) ; User edit FILEDA Type.
"RTN","TIUFLF7",82,0)
 ; Requires FILEDA, NODE0.
"RTN","TIUFLF7",83,0)
 ; Requires PFILEDA if DA has an actual/prospective parent. Need PFILEDA
"RTN","TIUFLF7",84,0)
 ;for add items/Create DDEF - they're not in AD xref because not items
"RTN","TIUFLF7",85,0)
 ;yet.
"RTN","TIUFLF7",86,0)
 ; Updates NODE0 (not the array, just the node).
"RTN","TIUFLF7",87,0)
 ; Returns XFLG=1 if user ^exited or timed out, else as received.
"RTN","TIUFLF7",88,0)
 ; Requires USED =1 for object or $$DDEFUSED^TIUFLF
"RTN","TIUFLF7",89,0)
 N TYPE,X,Y,NAME,TIUFTMSG,TIUFTLST,DEFLT,DIE,DR
"RTN","TIUFLF7",90,0)
 K DIRUT,DUOUT,DIROUT
"RTN","TIUFLF7",91,0)
 I $P(NODE0,U,4)="O" W !!,"TYPE: Object. Can't edit Type",! G EDTYX
"RTN","TIUFLF7",92,0)
 I USED="YES"!(USED="ERROR") W !!,"TYPE: Entry In Use by Documents; Can't edit Type",! G EDTYX
"RTN","TIUFLF7",93,0)
 S PFILEDA=+$G(PFILEDA),NAME=$P(NODE0,U)
"RTN","TIUFLF7",94,0)
 D TYPELIST(NAME,FILEDA,PFILEDA,.TIUFTMSG,.TIUFTLST) G:$D(DTOUT) EDTYX
"RTN","TIUFLF7",95,0)
 I $D(TIUFTMSG("T")) W !!,TIUFTMSG("T"),!,"Can't edit Type" S XFLG=1 D PAUSE^TIUFXHLX G EDTYX
"RTN","TIUFLF7",96,0)
 I $D(TIUFTMSG("R")),$D(TIUFTMSG("R1")) W !!,TIUFTMSG("R"),!,TIUFTMSG("R1"),!
"RTN","TIUFLF7",97,0)
 I $D(TIUFTMSG("O")) W:'$D(TIUFTMSG("R")) ! W TIUFTMSG("O"),!
"RTN","TIUFLF7",98,0)
 I TIUFTLST="" W !!,"TYPE: ",$S($D(TIUFTMSG):TIUFTMSG(1),1:" Faulty entry; File has entries of every permitted Type with the same Name"),! D PAUSE^TIUFXHLX S XFLG=1 G EDTYX
"RTN","TIUFLF7",99,0)
 S DEFLT=$P(NODE0,U,4) S:$L(TIUFTLST,U)=3 DEFLT=$P(TIUFTLST,U,2) S:DEFLT="DOC" DEFLT="TL"
"RTN","TIUFLF7",100,0)
READTYP K DUOUT S TYPE=$S(DEFLT'="":$$SELTYPE^TIUFLF8(FILEDA,DEFLT),1:$$SELTYPE^TIUFLF8(FILEDA))
"RTN","TIUFLF7",101,0)
 I $D(DUOUT)!$D(DTOUT) G EDTYX
"RTN","TIUFLF7",102,0)
 I TYPE="" W "  ?? Enter appropriate Type or '^' to exit",! H 2 G READTYP
"RTN","TIUFLF7",103,0)
 S:TYPE="TL" TYPE="DOC" S DIE=8925.1,DR=".04////"_TYPE D ^DIE
"RTN","TIUFLF7",104,0)
 S NODE0=^TIU(8925.1,FILEDA,0)
"RTN","TIUFLF7",105,0)
EDTYX S:$D(DUOUT)!$D(DTOUT) XFLG=1
"RTN","TIUFLF7",106,0)
 Q
"RTN","TIUFLF7",107,0)
 ;
"RTN","TIUFLF7",108,0)
DDEFIEN(TIUDEFNM,TIUTYPE) ; Function gets IEN (and more) of Doc Def
"RTN","TIUFLF7",109,0)
 ;Requires TIUDEFNM - .01 name of Title, Docmt Class or Class in
"RTN","TIUFLF7",110,0)
 ;                    the Document Definition file #8925.1
"RTN","TIUFLF7",111,0)
 ;Requires TIUTYPE - Expected type of DDEF: TL or DC or CL
"RTN","TIUFLF7",112,0)
 ;Returns IEN^STATUS^NATL if exactly one DDEF of type TIUTYPE
"RTN","TIUFLF7",113,0)
 ;        is found
"RTN","TIUFLF7",114,0)
 ;     or 0^ErrMsg
"RTN","TIUFLF7",115,0)
 ; NOTE: Only ONE DDEF of a given type is allowed in 8925.1.
"RTN","TIUFLF7",116,0)
 ;       If DDEFs are created using TIU DDEF options, that is enforced.
"RTN","TIUFLF7",117,0)
 ;       If DDEFs are created in a patch, the patch MUST
"RTN","TIUFLF7",118,0)
 ;         enforce it.
"RTN","TIUFLF7",119,0)
 ;As a precaution,  this module returns 0^ErrMsg if duplicates are found.
"RTN","TIUFLF7",120,0)
 ;However, TIU code ASSUMES there are no duplicates within a type.
"RTN","TIUFLF7",121,0)
 N TIUDEFDA,GOTIT,ERRMSG,TIUNODE0
"RTN","TIUFLF7",122,0)
 S TIUTYPE=$G(TIUTYPE)
"RTN","TIUFLF7",123,0)
 I TIUTYPE'="TL",TIUTYPE'="DC",TIUTYPE'="CL" Q "0^Type Required"
"RTN","TIUFLF7",124,0)
 I TIUTYPE="TL" S TIUTYPE="DOC"
"RTN","TIUFLF7",125,0)
 S TIUDEFDA=0
"RTN","TIUFLF7",126,0)
 ; -- Not in B xref:
"RTN","TIUFLF7",127,0)
 I '$O(^TIU(8925.1,"B",TIUDEFNM,0)) S ERRMSG="0^Entry not found" Q ERRMSG
"RTN","TIUFLF7",128,0)
 F  S TIUDEFDA=+$O(^TIU(8925.1,"B",TIUDEFNM,TIUDEFDA)) Q:TIUDEFDA'>0  D  Q:$D(ERRMSG)
"RTN","TIUFLF7",129,0)
 . S TIUNODE0=$G(^TIU(8925.1,TIUDEFDA,0))
"RTN","TIUFLF7",130,0)
 . ; -- Not in file or not right type:
"RTN","TIUFLF7",131,0)
 . I $P(TIUNODE0,U,4)'=TIUTYPE Q
"RTN","TIUFLF7",132,0)
 . ; -- Second good one:
"RTN","TIUFLF7",133,0)
 . I $D(GOTIT) S ERRMSG="0^Duplicates found" Q
"RTN","TIUFLF7",134,0)
 . ; -- First good one; set GOTIT=IEN^STATUS^NATL:
"RTN","TIUFLF7",135,0)
 . S GOTIT=TIUDEFDA_U_$P(TIUNODE0,U,7)_U_$P(TIUNODE0,U,13)
"RTN","TIUFLF7",136,0)
 ; -- Not in B xref, or dups:
"RTN","TIUFLF7",137,0)
 I $D(ERRMSG) Q ERRMSG
"RTN","TIUFLF7",138,0)
 ; Good one w/o dups:
"RTN","TIUFLF7",139,0)
 I $D(GOTIT) Q GOTIT
"RTN","TIUFLF7",140,0)
 ; In B xref but not in file, or bad type:
"RTN","TIUFLF7",141,0)
 Q "0^Entry not found"
"RTN","TIUFLF7",142,0)
 ;
"RTN","TIUHELP")
0^13^B13369426
"RTN","TIUHELP",1,0)
TIUHELP ; SLC/JER - On-line help library ;2/28/05
"RTN","TIUHELP",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**100,184**;Jun 20, 1997
"RTN","TIUHELP",3,0)
 ;
"RTN","TIUHELP",4,0)
LINKHELP ; Help for link protocol menus
"RTN","TIUHELP",5,0)
 W !,"      Problems - links to problems in patient's active Problem List;"
"RTN","TIUHELP",6,0)
 W !," Patient/Visit - reassigns to a different patient and/or visit;"
"RTN","TIUHELP",7,0)
 W !,"  Other Applic - links, for example, a Consult Result to a Request, or",!,"                   a PRF Note to a Patient Record Flag."
"RTN","TIUHELP",8,0)
 Q
"RTN","TIUHELP",9,0)
 ;
"RTN","TIUHELP",10,0)
PROTOCOL ; Help for protocols
"RTN","TIUHELP",11,0)
 N DIRUT,DTOUT,DUOUT,TIUX,ORU,ORUPRMT,VALMDDF,VALMPGE S TIUX=X
"RTN","TIUHELP",12,0)
 D FULL^VALM1
"RTN","TIUHELP",13,0)
 I TIUX="?"!(TIUX="??") D  G PROTX
"RTN","TIUHELP",14,0)
 . I TIUX="??",($G(VALMAR)="^TMP(""TIUR"",$J)") D STATUS I $D(DIRUT) W ! Q
"RTN","TIUHELP",15,0)
 . D DISP^XQORM1 W !!,"Enter selection by typing the name, or abbreviation.",!,"Enter '??' or '???' for additional details.",!
"RTN","TIUHELP",16,0)
 . I TIUX="?" W:$$STOP^TIUU ""
"RTN","TIUHELP",17,0)
 I TIUX="???" D MENU(XQORNOD) I $D(DIROUT) S (XQORQUIT,XQORPOP)=1 Q
"RTN","TIUHELP",18,0)
PROTX S VALMBCK="R"
"RTN","TIUHELP",19,0)
 Q
"RTN","TIUHELP",20,0)
MENU(XQORNOD) ; Unwind protocol menus for help
"RTN","TIUHELP",21,0)
 N TIUSEQ,TIUI,TIUJ D CLEAR^VALM1
"RTN","TIUHELP",22,0)
 W:$$CONTINUE "Valid selections are:",!
"RTN","TIUHELP",23,0)
 S TIUI=0 F  S TIUI=$O(^ORD(101,+XQORNOD,10,TIUI)) Q:+TIUI'>0  D
"RTN","TIUHELP",24,0)
 . S TIUJ=+$P($G(^ORD(101,+XQORNOD,10,TIUI,0)),U,3) S:$D(TIUSEQ(TIUJ)) TIUJ=TIUJ+.1
"RTN","TIUHELP",25,0)
 . S TIUSEQ(TIUJ)=+$P(^ORD(101,+XQORNOD,10,TIUI,0),U)
"RTN","TIUHELP",26,0)
 S TIUI=0 F  S TIUI=$O(TIUSEQ(TIUI)) Q:+TIUI'>0!$D(DIRUT)  D
"RTN","TIUHELP",27,0)
 . I $D(^ORD(101,+TIUSEQ(TIUI),0)) D ITEM(+TIUSEQ(TIUI),1)
"RTN","TIUHELP",28,0)
 Q
"RTN","TIUHELP",29,0)
ITEM(XQORNOD,TAB) ; Show descriptions of items
"RTN","TIUHELP",30,0)
 N TIUI
"RTN","TIUHELP",31,0)
 Q:$P($G(^ORD(101,+XQORNOD,0)),U,2)']""
"RTN","TIUHELP",32,0)
 W:$$CONTINUE ?+$G(TAB),$G(IOINHI),$$UPPER^TIULS($P($G(^ORD(101,+XQORNOD,0)),U,2)),$G(IOINORM),!
"RTN","TIUHELP",33,0)
 I $D(DIRUT) Q
"RTN","TIUHELP",34,0)
 S TIUI=0 F  S TIUI=$O(^ORD(101,+XQORNOD,1,TIUI)) Q:+TIUI'>0!$D(DIRUT)  D
"RTN","TIUHELP",35,0)
 . W:$$CONTINUE ?(TAB+2),$G(^ORD(101,+XQORNOD,1,TIUI,0)),! Q:$D(DIRUT)
"RTN","TIUHELP",36,0)
 S TIUI=0 F  S TIUI=$O(^ORD(101,+XQORNOD,10,TIUI)) Q:+TIUI'>0  D
"RTN","TIUHELP",37,0)
 . D ITEM(+$G(^ORD(101,+XQORNOD,10,+TIUI,0))_";ORD(101,",3)
"RTN","TIUHELP",38,0)
 Q
"RTN","TIUHELP",39,0)
STATUS ; Show status descriptions
"RTN","TIUHELP",40,0)
 W:$$CONTINUE !!,"The Following Statuses are defined:"
"RTN","TIUHELP",41,0)
 D STATEXP
"RTN","TIUHELP",42,0)
 W:$$CONTINUE !!,"The Following Indicators are defined:",!!
"RTN","TIUHELP",43,0)
 W:$$CONTINUE " '+' to the left of the Title or Patient's name indicates that",!,"     a report has addenda.",!
"RTN","TIUHELP",44,0)
 W:$$CONTINUE " '*' to the left of the Title or Patient's name indicates",!,"     a priority (STAT) document.",!
"RTN","TIUHELP",45,0)
 W:$$CONTINUE " '<' to the left of the Title or Patient's name indicates an",!,"     interdisciplinary note, which can be expanded to show entries.",!
"RTN","TIUHELP",46,0)
 W:$$CONTINUE " '>' to the left of the Title or Patient's name indicates",!,"     that the note is an entry of an interdisciplinary note.",!
"RTN","TIUHELP",47,0)
 ;W:$$CONTINUE "These will appear at the top of the list.",!
"RTN","TIUHELP",48,0)
 Q
"RTN","TIUHELP",49,0)
CONTINUE() ; Pagination control
"RTN","TIUHELP",50,0)
 N Y
"RTN","TIUHELP",51,0)
 I $Y<(IOSL-2) S Y=1 G CONTX
"RTN","TIUHELP",52,0)
 S Y=$$STOP^TIUU("",1) W:+Y @IOF,!
"RTN","TIUHELP",53,0)
CONTX Q Y
"RTN","TIUHELP",54,0)
STATEXP ; Explain Statuses
"RTN","TIUHELP",55,0)
 N TIUI,TIUJ,TIUY S TIUI=0
"RTN","TIUHELP",56,0)
 D STATUS^TIUSRVL(.TIUY,"ALL",1)
"RTN","TIUHELP",57,0)
 F  S TIUI=$O(TIUY(TIUI)) Q:+TIUI'>0  D
"RTN","TIUHELP",58,0)
 . I TIUI>1 W:$$CONTINUE !
"RTN","TIUHELP",59,0)
 . W:$$CONTINUE !,$G(IOINHI),$P(TIUY(TIUI),U,2),$G(IOINORM)
"RTN","TIUHELP",60,0)
 . S TIUJ=0 F  S TIUJ=$O(TIUY(TIUI,1,TIUJ)) Q:+TIUJ'>0  D
"RTN","TIUHELP",61,0)
 . . W:$$CONTINUE !?2,$G(TIUY(TIUI,1,TIUJ))
"RTN","TIUHELP",62,0)
 Q
"RTN","TIULP")
0^27^B45549039
"RTN","TIULP",1,0)
TIULP ; SLC/JER - Functions determining privilege ;7/29/05
"RTN","TIULP",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**98,100,116,109,138,152,175,157,182,184**;Jun 20, 1997
"RTN","TIULP",3,0)
CANDO(TIUDA,TIUACT,PERSON) ; Can PERSON perform action now
"RTN","TIULP",4,0)
 ; Receives: TIUDA=Record number in file 8925
"RTN","TIULP",5,0)
 ;           TIUACT=Name of user action in 8930.8 (USR ACTION)
"RTN","TIULP",6,0)
 ;           PERSON=New Person file IFN.
"RTN","TIULP",7,0)
 ;                  Assumed to be DUZ if not received.
"RTN","TIULP",8,0)
 ;                  New **100** ID param, backward compatible.
"RTN","TIULP",9,0)
 ;  Returns:   TIUY=1:yes,0:no_"^"_why not message
"RTN","TIULP",10,0)
 N TIUI,TIUTYP,TIUROLE,STATUS,TIUY,TIUATYP,MSG,WHO,MODIFIER,TIUD0
"RTN","TIULP",11,0)
 S TIUY=0 I '$G(PERSON) S PERSON=DUZ
"RTN","TIULP",12,0)
 S TIUD0=$G(^TIU(8925,+TIUDA,0)) I 'TIUD0 G CANDOX
"RTN","TIULP",13,0)
 I $$ISPRFDOC^TIUPRF(TIUDA),((TIUACT="ATTACH ID ENTRY")!(TIUACT="ATTACH TO ID NOTE")) S TIUY="0^Patient Record Flag notes may not be used as Interdisciplinary notes." G CANDOX
"RTN","TIULP",14,0)
 ;**100** was I +TIUACT'>0 S TIUACT etc.
"RTN","TIULP",15,0)
 S TIUACT=$$USREVNT(TIUACT) I +TIUACT'>0 G CANDOX
"RTN","TIULP",16,0)
 ; -- Historical Procedures - Prohibit actions detailed in
"RTN","TIULP",17,0)
 ;    HPCAN^TIUCP: P182
"RTN","TIULP",18,0)
 N HPCAN I $$ISHISTCP^TIUCP(+TIUD0) S HPCAN=$$HPCAN^TIUCP(+TIUACT) I 'HPCAN S TIUY=HPCAN G CANDOX
"RTN","TIULP",19,0)
 ; **152 Get status to evaluate for completed document.
"RTN","TIULP",20,0)
 S STATUS=+$P(TIUD0,U,5)
"RTN","TIULP",21,0)
 ; **152 prevents editing or sending back a completed document.
"RTN","TIULP",22,0)
 I STATUS>6,(+TIUACT=9)!(+TIUACT=17) D  G CANDOX
"RTN","TIULP",23,0)
 .; **152 Displays message to user
"RTN","TIULP",24,0)
 . I +TIUACT=9 S TIUY="0^ You may not edit a completed document."
"RTN","TIULP",25,0)
 . I +TIUACT=17 S TIUY="0^You may not send back this completed document."
"RTN","TIULP",26,0)
 ; -- In case business rules have changed, & children already existed:
"RTN","TIULP",27,0)
 I +TIUACT=24,$D(^TIU(8925,"GDAD",TIUDA)) D  G CANDOX
"RTN","TIULP",28,0)
 . S TIUY="0^ This note cannot be attached; it has its own children."
"RTN","TIULP",29,0)
 I +TIUACT=25,+$G(^TIU(8925,TIUDA,21)) D  G CANDOX
"RTN","TIULP",30,0)
 . S TIUY="0^ This note cannot receive interdisciplinary children; it is itself a child."
"RTN","TIULP",31,0)
 I +TIUACT=4!(+TIUACT=5),+$$BLANK^TIULC(TIUDA) D  G CANDOX
"RTN","TIULP",32,0)
 . S TIUY="0^ Contains blanks ("_$P(TIUPRM1,U,6)_") which must be filled before "_$P(TIUACT,U,2)_"ATURE."
"RTN","TIULP",33,0)
 S TIUROLE=$$USRROLE(TIUDA,PERSON)
"RTN","TIULP",34,0)
 S TIUTYP=+TIUD0
"RTN","TIULP",35,0)
 I $$ISADDNDM^TIULC1(+TIUDA) S TIUATYP=TIUTYP,TIUTYP=+$G(^TIU(8925,+$P(TIUD0,U,6),0))
"RTN","TIULP",36,0)
 I TIUROLE']"" S TIUY=$$CANDO^USRLA(TIUTYP,STATUS,+TIUACT,PERSON)
"RTN","TIULP",37,0)
 F TIUI=1:1:($L(TIUROLE,U)-1) D  Q:+$G(TIUY)>0
"RTN","TIULP",38,0)
 . S TIUY=$$CANDO^USRLA(TIUTYP,STATUS,+TIUACT,PERSON,$P(TIUROLE,U,TIUI))
"RTN","TIULP",39,0)
 I +$G(TIUATYP) S TIUTYP=+$G(TIUATYP)
"RTN","TIULP",40,0)
 ;**100** update for PERSON param; update for verb modifier:
"RTN","TIULP",41,0)
 I +TIUY'>0 D  G CANDOX
"RTN","TIULP",42,0)
 . S WHO=" You"
"RTN","TIULP",43,0)
 . ;I PERSON'=DUZ S WHO=$P(^VA(200,PERSON,0),U),WHO=$$NAME^TIULS(WHO,"FIRST LAST")
"RTN","TIULP",44,0)
 . I PERSON'=DUZ S WHO=$$NAME^TIULS($$GET1^DIQ(200,PERSON,.01),"FIRST LAST") ;P182
"RTN","TIULP",45,0)
 . S MODIFIER=$P(TIUACT,U,3) I $L(MODIFIER) S MODIFIER=" "_MODIFIER
"RTN","TIULP",46,0)
 . ;e.g. "You may not ATTACH this UNSIGNED TELEPHONE NOTE TO AN ID NOTE."
"RTN","TIULP",47,0)
 . S MSG=WHO_" may not "_$P(TIUACT,U,2)_" this "_$P($G(^TIU(8925.6,+STATUS,0)),U)_" "_$$PNAME^TIULC1(TIUTYP)_MODIFIER_"."
"RTN","TIULP",48,0)
 . S TIUY=TIUY_U_MSG
"RTN","TIULP",49,0)
 I +TIUACT=15,$$HASIMG^TIURB2(+TIUDA) D  G CANDOX
"RTN","TIULP",50,0)
 . S TIUY="0^ This document contains linked images. You must ""delete"" the Images using the Imaging package before proceeding."
"RTN","TIULP",51,0)
CANDOX Q TIUY
"RTN","TIULP",52,0)
 ;
"RTN","TIULP",53,0)
CANLINK(TIUTYP) ; Can user (DUZ) link (attach) a document of a particular type
"RTN","TIULP",54,0)
 ;to an ID note.
"RTN","TIULP",55,0)
 ; For use in ADD NEW ID NOTE, where docmt is not entered yet.
"RTN","TIULP",56,0)
 ; Assume most favorable circumstances (user will complete
"RTN","TIULP",57,0)
 ;the note, so if user still can't attach, can tell them no,
"RTN","TIULP",58,0)
 ;when they first select title for the new entry.
"RTN","TIULP",59,0)
 ; Rule out if TIUTYP can be an ID parent, since ID parent
"RTN","TIULP",60,0)
 ;and ID kid function as mutually exclusive, (regardless of
"RTN","TIULP",61,0)
 ;business rules).
"RTN","TIULP",62,0)
 N TIUACT,STATUS,USRROLE,TIUY
"RTN","TIULP",63,0)
 S TIUACT=$$USREVNT("ATTACH TO ID NOTE"),STATUS=7 ; complete
"RTN","TIULP",64,0)
 S USRROLE=+$O(^USR(8930.2,"B","COMPLETER",0))
"RTN","TIULP",65,0)
 S TIUY=$$CANDO^USRLA(TIUTYP,STATUS,+TIUACT,DUZ,USRROLE)
"RTN","TIULP",66,0)
 I '$G(TIUY) S TIUY="0^ You may not use this title for interdisciplinary child entries." Q TIUY
"RTN","TIULP",67,0)
 ; -- If user can attach a certain note, but note can also receive
"RTN","TIULP",68,0)
 ;    ID entries, don't let user attach it. --
"RTN","TIULP",69,0)
 I $$POSSPRNT^TIULP(TIUTYP) S TIUY="0^ This interdisciplinary PARENT title cannot be used for CHILD entries."
"RTN","TIULP",70,0)
 ; -- If selected type is a CWAD, don't let user attach it: --
"RTN","TIULP",71,0)
 I $$ISCWAD^TIULX(TIUTYP) S TIUY="0^ CWAD titles cannot be used for interdisciplinary entries."
"RTN","TIULP",72,0)
 ; -- If selected type is a PRF, don't let user attach it: --
"RTN","TIULP",73,0)
 I $$ISPFTTL^TIUPRFL(TIUTYP) S TIUY="0^ Patient Record Flag titles cannot be used for interdisciplinary entries."
"RTN","TIULP",74,0)
 ; -- If selected type is a consult, don't let user attach it: --
"RTN","TIULP",75,0)
 I $$ISA^TIULX(TIUTYP,+$$CLASS^TIUCNSLT) S TIUY="0^ Consult titles cannot be used for interdisciplinary entries."
"RTN","TIULP",76,0)
 Q TIUY
"RTN","TIULP",77,0)
 ;
"RTN","TIULP",78,0)
POSSPRNT(TIUTYP) ; Is a docmt intended as a possible ID parent?
"RTN","TIULP",79,0)
 ;Returns 1^WHYCAN'TATTACH if there are business rules permitting ANYONE
"RTN","TIULP",80,0)
 ;to attach ID entries to notes of type TIUTYP.
"RTN","TIULP",81,0)
 ;Else returns 0.
"RTN","TIULP",82,0)
 N TIUACT,STATUS,TIUY,DADTYP
"RTN","TIULP",83,0)
 S TIUY=0,TIUACT=+$$USREVNT("ATTACH ID ENTRY")
"RTN","TIULP",84,0)
 F STATUS=6,7,8 D  G:TIUY POSSX
"RTN","TIULP",85,0)
 . I $O(^USR(8930.1,"AR",TIUTYP,STATUS,TIUACT,0)) S TIUY=1 Q
"RTN","TIULP",86,0)
 . I $O(^USR(8930.1,"AC",TIUTYP,STATUS,TIUACT,0)) S TIUY=1
"RTN","TIULP",87,0)
 ; -- If no rules for TIUTYP, try its parent: --
"RTN","TIULP",88,0)
 S DADTYP=$O(^TIU(8925.1,"AD",TIUTYP,0)) G:DADTYP'>0 POSSX
"RTN","TIULP",89,0)
 S TIUY=$$POSSPRNT(DADTYP)
"RTN","TIULP",90,0)
POSSX I TIUY S TIUY="1^ Interdisciplinary PARENT notes cannot be attached as CHILD entries."
"RTN","TIULP",91,0)
 Q TIUY
"RTN","TIULP",92,0)
 ;
"RTN","TIULP",93,0)
CANENTR(TIUTYP) ; Evaluate privilege to enter a document of a particular type
"RTN","TIULP",94,0)
 N TIUACT,STATUS,USRROLE,TIUY
"RTN","TIULP",95,0)
 S TIUACT=$$USREVNT("ENTRY"),STATUS=2 ; untranscribed
"RTN","TIULP",96,0)
 S USRROLE=3 ; transcriber
"RTN","TIULP",97,0)
 S TIUY=$$CANDO^USRLA(TIUTYP,STATUS,+TIUACT,DUZ,USRROLE)
"RTN","TIULP",98,0)
 Q TIUY
"RTN","TIULP",99,0)
USRROLE(TIUDA,PERSON) ; Identify the user's role with respect to the document
"RTN","TIULP",100,0)
 ; 3/20/00 **100** Added role COMPLETER
"RTN","TIULP",101,0)
 ; 3/20/00 **100** Added PERSON param
"RTN","TIULP",102,0)
 N TIU0,TIU12,TIU13,TIUY,TIU15,COMPLTR,STATUS
"RTN","TIULP",103,0)
 S PERSON=$G(PERSON,DUZ)
"RTN","TIULP",104,0)
 S TIU0=$G(^TIU(8925,+TIUDA,0)),STATUS=$P(TIU0,U,5)
"RTN","TIULP",105,0)
 S TIU12=$G(^TIU(8925,+TIUDA,12))
"RTN","TIULP",106,0)
 S TIU13=$G(^TIU(8925,+TIUDA,13)),TIU15=$G(^TIU(8925,+TIUDA,15))
"RTN","TIULP",107,0)
 I PERSON=+$P(TIU13,U,2) S TIUY=+$O(^USR(8930.2,"B","TRANSCRIBER",0))_U
"RTN","TIULP",108,0)
 I PERSON=+$P(TIU12,U,2) S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","AUTHOR/DICTATOR",0))_U
"RTN","TIULP",109,0)
 I PERSON=+$P(TIU12,U,9) S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","ATTENDING PHYSICIAN",0))_U
"RTN","TIULP",110,0)
 I PERSON=+$P(TIU12,U,4) S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","EXPECTED SIGNER",0))_U
"RTN","TIULP",111,0)
 I PERSON=+$P(TIU12,U,8) S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","EXPECTED COSIGNER",0))_U
"RTN","TIULP",112,0)
 I $$ASURG^TIUADSIG(TIUDA) S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","SURROGATE",0))_U ;P157
"RTN","TIULP",113,0)
 ;Check if the person can be an Interpreter for this document via a Consult API
"RTN","TIULP",114,0)
 I $$CPINTERP^GMRCCP(+TIUDA,PERSON) S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","INTERPRETER",0))_U
"RTN","TIULP",115,0)
 I STATUS>6 D  I COMPLTR S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","COMPLETER",0))_U
"RTN","TIULP",116,0)
 . S COMPLTR=0
"RTN","TIULP",117,0)
 . I PERSON=+$P(TIU15,U,8) S COMPLTR=1 Q
"RTN","TIULP",118,0)
 . I '$P(TIU15,U,8),PERSON=+$P(TIU15,U,2) S COMPLTR=1
"RTN","TIULP",119,0)
 I +$O(^TIU(8925.7,"AE",+TIUDA,+PERSON,0)) D
"RTN","TIULP",120,0)
 . N TIUXTRA S TIUXTRA=+$O(^TIU(8925.7,"AE",+TIUDA,+PERSON,0))
"RTN","TIULP",121,0)
 . I +$P($G(^TIU(8925.7,+TIUXTRA,0)),U,4) Q
"RTN","TIULP",122,0)
 . S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","ADDITIONAL SIGNER",0))_U
"RTN","TIULP",123,0)
 Q $G(TIUY)
"RTN","TIULP",124,0)
USREVNT(EVENT) ; Given event name, return:
"RTN","TIULP",125,0)
 ;EVENT = event pointer^user verb^verb modifier
"RTN","TIULP",126,0)
 ; **100** added verb modifier piece (.07)
"RTN","TIULP",127,0)
 N TIUY,TIUDA,NODE0
"RTN","TIULP",128,0)
 S TIUDA=+$O(^USR(8930.8,"B",EVENT,0))
"RTN","TIULP",129,0)
 S NODE0=$G(^USR(8930.8,TIUDA,0))
"RTN","TIULP",130,0)
 S TIUY=TIUDA_U_$P(NODE0,U,5)_U_$P(NODE0,U,7)
"RTN","TIULP",131,0)
 Q TIUY
"RTN","TIULP",132,0)
CANPICK(TIUTYP) ; Screens selection of title by title status and
"RTN","TIULP",133,0)
 ;(for status TEST), by owner.
"RTN","TIULP",134,0)
 N TIUPOWN,TIUCOWN,TIUT0,TIUTSTAT,TIUY S TIUY=0
"RTN","TIULP",135,0)
 S TIUT0=$G(^TIU(8925.1,+TIUTYP,0)),TIUTSTAT=$P(TIUT0,U,7)
"RTN","TIULP",136,0)
 I TIUTSTAT']"" S TIUY=0 G CANPIX
"RTN","TIULP",137,0)
 I TIUTSTAT=13 S TIUY=0 G CANPIX
"RTN","TIULP",138,0)
 I TIUTSTAT=11 S TIUY=1 G CANPIX
"RTN","TIULP",139,0)
 S TIUPOWN=$P(TIUT0,U,5),TIUCOWN=+$P(TIUT0,U,6)
"RTN","TIULP",140,0)
 I TIUTSTAT=10 S TIUY=$S(TIUPOWN=DUZ:1,+$$ISA^USRLM(DUZ,TIUCOWN):1,1:0)
"RTN","TIULP",141,0)
CANPIX Q +$G(TIUY)
"RTN","TIULP",142,0)
REQCOSIG(TIUTYP,TIUDA,USER,TIUDT) ; Evaluate whether user requires cosignature
"RTN","TIULP",143,0)
 N TIUI,TIUY,TIUDPRM S USER=$S(+$G(USER):+$G(USER),1:+$G(DUZ))
"RTN","TIULP",144,0)
 D DOCPRM^TIULC1(TIUTYP,.TIUDPRM,+$G(TIUDA))
"RTN","TIULP",145,0)
 I $G(TIUDPRM(5))="" G REQCOSX
"RTN","TIULP",146,0)
 I +$G(TIUDT)'>0 S TIUDT=+$P($P(+$G(^TIU(8925,+$G(TIUDA),13)),U),".")
"RTN","TIULP",147,0)
 F TIUI=1:1:$L(TIUDPRM(5),U) D  Q:+TIUY>0
"RTN","TIULP",148,0)
 . S TIUY=+$$ISA^USRLM(+USER,+$P(TIUDPRM(5),U,TIUI),,+$G(TIUDT))
"RTN","TIULP",149,0)
REQCOSX Q +$G(TIUY)
"RTN","TIULP",150,0)
 ;
"RTN","TIULP",151,0)
REQCPF(TIUCDA) ;Check if clinical procedure fields are required
"RTN","TIULP",152,0)
 ; Input  -- TIUCDA   Request/Consult File (#123) IEN
"RTN","TIULP",153,0)
 ; Output -- 1=Required and 0=Not Required
"RTN","TIULP",154,0)
 N TIUCPACT,REQF
"RTN","TIULP",155,0)
 I '$G(TIUCDA) G REQCPFQ
"RTN","TIULP",156,0)
 S TIUCPACT=$$CPACTM^GMRCCP(TIUCDA)
"RTN","TIULP",157,0)
 I TIUCPACT=1!(TIUCPACT=3) S REQF=1
"RTN","TIULP",158,0)
REQCPFQ Q +$G(REQF)
"RTN","TIUPEVNT")
0^16^B40232009
"RTN","TIUPEVNT",1,0)
TIUPEVNT ; SLC/JER - Event logger for upload/filer ;3/30/05
"RTN","TIUPEVNT",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**3,21,81,131,113,184**;Jun 20, 1997
"RTN","TIUPEVNT",3,0)
MAIN(BUFDA,ETYPE,ECODE,TIUTYPE,FDA,MSG) ; ---- Controls branching
"RTN","TIUPEVNT",4,0)
 N EVNTDA
"RTN","TIUPEVNT",5,0)
 ; ---- ETYPE = 1: Filing error event
"RTN","TIUPEVNT",6,0)
 ; ---- ETYPE = 2: Missing/incorrect field error event
"RTN","TIUPEVNT",7,0)
 ; ---- ETYPE = 0: Other event (no errors)
"RTN","TIUPEVNT",8,0)
 D LOG(BUFDA,ETYPE,$G(ECODE),$G(TIUTYPE),.EVNTDA,.FDA,.MSG)
"RTN","TIUPEVNT",9,0)
 I ETYPE=2 D FIELDS^TIUPEVN1(EVNTDA,.MSG)
"RTN","TIUPEVNT",10,0)
 Q
"RTN","TIUPEVNT",11,0)
LOG(BUFDA,ETYPE,ECODE,TIUTYPE,EVNTDA,FDA,MSG) ; ---- Register event in 
"RTN","TIUPEVNT",12,0)
 ;                                              TIU UPLOAD LOG file
"RTN","TIUPEVNT",13,0)
 ;                                              (#8925.4)
"RTN","TIUPEVNT",14,0)
 N BUFREC,ERRMSG,NEWBUF,DIC,DLAYGO,DIE,DA,DR,TIUK,TIUL,X,Y
"RTN","TIUPEVNT",15,0)
 S BUFREC=$G(^TIU(8925.2,+BUFDA,0))
"RTN","TIUPEVNT",16,0)
 S (DIC,DLAYGO)=8925.4,DIC(0)="MLX",X=""""_$$NOW^TIULC_"""" D ^DIC
"RTN","TIUPEVNT",17,0)
 Q:+Y'>0
"RTN","TIUPEVNT",18,0)
 ; ---- File upload log record
"RTN","TIUPEVNT",19,0)
 S DIE=DIC,(EVNTDA,DA)=+Y,ERRMSG=$$ERRMSG(ETYPE,ECODE,TIUTYPE,.FDA,.MSG)
"RTN","TIUPEVNT",20,0)
 S DR=".02////"_$P(BUFREC,U,2)_";.03////"_TIUTYPE_";.04////"_ERRMSG_";.06////"_$S(+ETYPE:0,1:"")_";.08////"_ETYPE_";.09////"_$S($G(TIUINST):TIUINST,1:DUZ(2))
"RTN","TIUPEVNT",21,0)
 D ^DIE K DA
"RTN","TIUPEVNT",22,0)
 I ETYPE'=1 Q
"RTN","TIUPEVNT",23,0)
 ; ---- Store Header of failed record in log
"RTN","TIUPEVNT",24,0)
 S ^TIU(8925.4,+EVNTDA,"HEAD",0)="^^^^"_DT_"^"
"RTN","TIUPEVNT",25,0)
 S TIUL=0 F TIUK=TIUFRST:1:$S($P(TIUPRM0,U,16)="C":TIUI,1:TIUFRST+1) D
"RTN","TIUPEVNT",26,0)
 . S TIUL=TIUL+1,^TIU(8925.4,+EVNTDA,"HEAD",TIUL,0)=$G(^TIU(8925.2,+BUFDA,"TEXT",TIUK,0))
"RTN","TIUPEVNT",27,0)
 S $P(^TIU(8925.4,+EVNTDA,"HEAD",0),U,3,4)=TIUL_U_TIUL
"RTN","TIUPEVNT",28,0)
 ; ---- Create a new buffer entry w/ uploaded data
"RTN","TIUPEVNT",29,0)
 S NEWBUF=$$MAKEBUF^TIUUPLD
"RTN","TIUPEVNT",30,0)
 I +NEWBUF>0 D
"RTN","TIUPEVNT",31,0)
 . N TIUJ,TIUL,TIUBLIN
"RTN","TIUPEVNT",32,0)
 . S ^TIU(8925.2,+NEWBUF,"TEXT",0)="^^^^"_DT_"^"
"RTN","TIUPEVNT",33,0)
 . S TIUJ=TIUFRST,TIUL=1
"RTN","TIUPEVNT",34,0)
 . S ^TIU(8925.2,+NEWBUF,"TEXT",TIUL,0)=$G(^TIU(8925.2,+BUFDA,"TEXT",TIUJ,0)) K ^TIU(8925.2,+BUFDA,"TEXT",TIUJ,0)
"RTN","TIUPEVNT",35,0)
 . F  S TIUJ=$O(^TIU(8925.2,+BUFDA,"TEXT",TIUJ)) Q:$S(+TIUJ'>0:1,($G(^TIU(8925.2,+BUFDA,"TEXT",TIUJ,0))[TIUHSIG):1,1:0)  D
"RTN","TIUPEVNT",36,0)
 . . S TIUL=TIUL+1
"RTN","TIUPEVNT",37,0)
 . . S ^TIU(8925.2,+NEWBUF,"TEXT",TIUL,0)=$G(^TIU(8925.2,+BUFDA,"TEXT",TIUJ,0)),TIUI=TIUJ
"RTN","TIUPEVNT",38,0)
 . . K ^TIU(8925.2,+BUFDA,"TEXT",TIUJ,0)
"RTN","TIUPEVNT",39,0)
 . S $P(^TIU(8925.2,+NEWBUF,"TEXT",0),U,3,4)=TIUL_U_TIUL
"RTN","TIUPEVNT",40,0)
 . ; ---- Stuff new buffer entry pointer into event log file
"RTN","TIUPEVNT",41,0)
 . S DIE=8925.4,DA=+EVNTDA,DR=".05////"_+NEWBUF D ^DIE
"RTN","TIUPEVNT",42,0)
 . ; ---- File the error log pointer in buffer file
"RTN","TIUPEVNT",43,0)
 . S ^TIU(8925.2,+NEWBUF,"ERR",0)="^8925.22PA^^",DLAYGO=8925.22
"RTN","TIUPEVNT",44,0)
 . S DA(1)=+NEWBUF,DIC="^TIU(8925.2,"_+DA(1)_",""ERR"",",DIC(0)="L"
"RTN","TIUPEVNT",45,0)
 . S X="`"_EVNTDA
"RTN","TIUPEVNT",46,0)
 . D ^DIC
"RTN","TIUPEVNT",47,0)
 . K DIC,DLAYGO
"RTN","TIUPEVNT",48,0)
 . ; ---- Send filing error alerts
"RTN","TIUPEVNT",49,0)
 . D ALERT(+NEWBUF,.ERRMSG,.EVNTDA)
"RTN","TIUPEVNT",50,0)
 Q
"RTN","TIUPEVNT",51,0)
ERRMSG(ETYPE,ECODE,TIUTYPE,FDA,MSG) ; ---- Set error messages
"RTN","TIUPEVNT",52,0)
 N DIC,DIE,DA,X,Y
"RTN","TIUPEVNT",53,0)
 I +ETYPE'>0 S Y="" G ERRMSX
"RTN","TIUPEVNT",54,0)
 S TIUTYPE=$S($G(TIUTITLE)]"":$G(TIUTITLE),1:$G(TIUTYPE))
"RTN","TIUPEVNT",55,0)
 I +$G(TIUREC("FILE"))=8925,($G(TIUHDR(.09))="PRIORITY"),($G(TIUTYPE)]"") S TIUTYPE="STAT "_$G(TIUTYPE)
"RTN","TIUPEVNT",56,0)
 ; ---- Set filing error message
"RTN","TIUPEVNT",57,0)
 I +ETYPE=1,+ECODE D  G ERRMSX
"RTN","TIUPEVNT",58,0)
 . S DIC=8925.3,DIC(0)="MXZ",X="`"_ECODE D ^DIC
"RTN","TIUPEVNT",59,0)
 . S Y="FILING ERROR: "_$G(TIUTYPE)_" "_$P(Y(0),U,2)
"RTN","TIUPEVNT",60,0)
 ; ---- If target file is 8925, get info on entry & set missing fld msg
"RTN","TIUPEVNT",61,0)
 I $G(MSG("DIERR",1,"PARAM","FILE"))=8925 D  G ERRMSX
"RTN","TIUPEVNT",62,0)
 . N TIU,DA S DA=+$O(FDA(8925,"")) D GETTIU^TIULD(.TIU,DA)
"RTN","TIUPEVNT",63,0)
 . S Y=$$NAME^TIULS(TIU("PNM"),"LAST,FI MI ")
"RTN","TIUPEVNT",64,0)
 . S:$G(TIUHDR("TIUTITLE"))]"" TIUTYPE=TIUHDR("TIUTITLE")
"RTN","TIUPEVNT",65,0)
 . S Y=Y_TIU("PID")_": "_$$DATE^TIULS(+TIU("EDT"),"MM/DD/YY ")_$G(TIUTYPE)_" is missing fields."
"RTN","TIUPEVNT",66,0)
 ; ---- Otherwise get message from FM Filer error msg array
"RTN","TIUPEVNT",67,0)
 S Y=$G(MSG("DIERR",1,"TEXT",1))
"RTN","TIUPEVNT",68,0)
ERRMSX Q Y
"RTN","TIUPEVNT",69,0)
ALERT(BUFDA,ERRMSG,EVNTDA) ; ---- Send alerts for filing errors
"RTN","TIUPEVNT",70,0)
 N BUFREC,XQA,XQAID,XQADATA,XQAMSG,XQAKILL,XQAROU,TIUI,TIUSUB,TYPE
"RTN","TIUPEVNT",71,0)
 S BUFREC=$G(^TIU(8925.2,+BUFDA,0))
"RTN","TIUPEVNT",72,0)
 ; ---- TIU*1*81 TIUHDR is newed in MAIN+11^TIUPUTC, set in
"RTN","TIUPEVNT",73,0)
 ;      GETREC^TIUPUTC1, so it exists for file errs.
"RTN","TIUPEVNT",74,0)
 S TYPE=+$$WHATITLE^TIUPUTU($G(TIUHDR("TIUTITLE")))
"RTN","TIUPEVNT",75,0)
 I TYPE'>0 S TYPE=+$G(TIUREC("TYPE"))
"RTN","TIUPEVNT",76,0)
 I TYPE N TIUDAD D WHOGETS^TIUPEVN1(.XQA,TYPE) ;TIU*1*81 New TIUDAD here, not in WHOGETS
"RTN","TIUPEVNT",77,0)
 ;  ---- If no 8925.95 (Document Parameter) recipients, get 8925.99
"RTN","TIUPEVNT",78,0)
 ;       (Site Parameter) recipients
"RTN","TIUPEVNT",79,0)
 I $D(XQA)'>9 D
"RTN","TIUPEVNT",80,0)
 . S TIUI=$O(^TIU(8925.99,"B",+$G(DUZ(2)),0)) S:+TIUI'>0 TIUI=+$O(^TIU(8925.99,0))
"RTN","TIUPEVNT",81,0)
 . S TIUSUB=0 F  S TIUSUB=$O(^TIU(8925.99,+TIUI,2,TIUSUB)) Q:TIUSUB'>0  D
"RTN","TIUPEVNT",82,0)
 . . S XQA($G(^TIU(8925.99,+TIUI,2,TIUSUB,0)))=""
"RTN","TIUPEVNT",83,0)
 Q:$D(XQA)'>9
"RTN","TIUPEVNT",84,0)
 S XQAID="TIUERR"_+BUFDA
"RTN","TIUPEVNT",85,0)
 S XQAMSG=ERRMSG
"RTN","TIUPEVNT",86,0)
 W:'$D(ZTQUEUED) !!,XQAMSG,!
"RTN","TIUPEVNT",87,0)
 S XQADATA=BUFDA_";"_ERRMSG_";"_EVNTDA_";"_$G(TIUREC("TYPE"))
"RTN","TIUPEVNT",88,0)
 S XQAROU="DISPLAY^TIUPEVNT"
"RTN","TIUPEVNT",89,0)
 D SETUP^XQALERT
"RTN","TIUPEVNT",90,0)
 Q
"RTN","TIUPEVNT",91,0)
DISPLAY ; ---- Alert followup action for filing errors
"RTN","TIUPEVNT",92,0)
 N DIC,INQUIRE,RETRY,DWPK,EVNTDA,TIU K XQAKILL,RESCODE,TIUTYPE,TIUDONE
"RTN","TIUPEVNT",93,0)
 N TIUEVNT,TIUSKIP,TIUBUF,PRFILERR
"RTN","TIUPEVNT",94,0)
 I '$D(TIUPRM0)!'$D(TIUPRM1) D SETPARM^TIULE
"RTN","TIUPEVNT",95,0)
 ; Set EVNTDA for backward compatibility, TIUEVNT for PN resolve code
"RTN","TIUPEVNT",96,0)
 S (EVNTDA,TIUEVNT)=+$P(XQADATA,";",3)
"RTN","TIUPEVNT",97,0)
 ; Set TIUBUF for similarity w TIURE.  DON'T set BUFDA since
"RTN","TIUPEVNT",98,0)
 ; old code interprets that as set by TIURE only:
"RTN","TIUPEVNT",99,0)
 S TIUBUF=+XQADATA
"RTN","TIUPEVNT",100,0)
 I TIUEVNT D  I +$G(TIUDONE)!$G(TIUSKIP) G DISPX
"RTN","TIUPEVNT",101,0)
 . D WRITEHDR(TIUEVNT)
"RTN","TIUPEVNT",102,0)
 . S TIUTYPE=+$P(XQADATA,";",4)
"RTN","TIUPEVNT",103,0)
 . I TIUTYPE>0 S RESCODE=$$FIXCODE^TIULC1(TIUTYPE)
"RTN","TIUPEVNT",104,0)
 . ;E  S RESCODE="D GETPAT^TIUCHLP"
"RTN","TIUPEVNT",105,0)
 . I $G(RESCODE)]"" D  Q
"RTN","TIUPEVNT",106,0)
 . . W ! S INQUIRE=$$READ^TIUU("YO","Inquire to patient record","YES","^D INQRHELP^TIUPEVNT")
"RTN","TIUPEVNT",107,0)
 . . I $D(DIRUT) S TIUSKIP=1 Q
"RTN","TIUPEVNT",108,0)
 . . I +INQUIRE X RESCODE
"RTN","TIUPEVNT",109,0)
 . . ; Redundant if all RESCODEs do RESOLVE:
"RTN","TIUPEVNT",110,0)
 . . I +$G(TIUDONE),+$G(TIUEVNT) D RESOLVE(+$G(TIUEVNT))
"RTN","TIUPEVNT",111,0)
 . W !!,"Filing error resolution code could not be found for this document type.",!,"Please edit the buffered data directly and refile."
"RTN","TIUPEVNT",112,0)
 W !!,"You may now edit the buffered upload data in an attempt to resolve error:",!,$P(XQADATA,";",2),!
"RTN","TIUPEVNT",113,0)
 I '$$READ^TIUU("EA","Press RETURN to continue and edit the buffer or '^' to exit: ") G DISPX
"RTN","TIUPEVNT",114,0)
 S DIC="^TIU(8925.2,"_TIUBUF_",""TEXT"",",DWPK=1 D EN^DIWE
"RTN","TIUPEVNT",115,0)
 S RETRY=$$READ^TIUU("YO","Now would you like to retry the filer","YES","^D FIL^TIUDIRH")
"RTN","TIUPEVNT",116,0)
 ; -- If refiling, tell Patient Record Flag LOOKUP to ask for flag link:
"RTN","TIUPEVNT",117,0)
 I +RETRY S PRFILERR=1
"RTN","TIUPEVNT",118,0)
 ; -- Refile
"RTN","TIUPEVNT",119,0)
 I +RETRY D ALERTDEL(TIUBUF)
"RTN","TIUPEVNT",120,0)
 I +RETRY D RESOLVE(TIUEVNT,1)
"RTN","TIUPEVNT",121,0)
 I +RETRY D FILE^TIUUPLD(TIUBUF)
"RTN","TIUPEVNT",122,0)
DISPX K XQX1
"RTN","TIUPEVNT",123,0)
 Q
"RTN","TIUPEVNT",124,0)
WRITEHDR(EVNTDA) ; ---- Write header to screen
"RTN","TIUPEVNT",125,0)
 ;Write header, as stored in Upload Log event (NOT buffer record,
"RTN","TIUPEVNT",126,0)
 ;which can be edited w/o refiling)
"RTN","TIUPEVNT",127,0)
 N TIUI
"RTN","TIUPEVNT",128,0)
 S TIUI=0
"RTN","TIUPEVNT",129,0)
 W !!,"The header of the original, failed record looks like this:",!
"RTN","TIUPEVNT",130,0)
 F  S TIUI=$O(^TIU(8925.4,+EVNTDA,"HEAD",TIUI)) Q:+TIUI'>0  D
"RTN","TIUPEVNT",131,0)
 . W !,$G(^TIU(8925.4,+EVNTDA,"HEAD",TIUI,0))
"RTN","TIUPEVNT",132,0)
 Q
"RTN","TIUPEVNT",133,0)
ALERTDEL(DA) ; ---- Delete alerts associated with a given record
"RTN","TIUPEVNT",134,0)
 N XQA,XQAID,XQAKILL S XQAID="TIUERR"_+DA
"RTN","TIUPEVNT",135,0)
 F  D DELETEA^XQALERT S XQAID="TIUERR"_+DA Q:'$D(^VA(200,"AXQAN",XQAID))
"RTN","TIUPEVNT",136,0)
 Q
"RTN","TIUPEVNT",137,0)
RESOLVE(EVNTDA,ECHO) ; ---- Indicate resolution of error
"RTN","TIUPEVNT",138,0)
 N DA,DIE,DR,TIUI,RESTIME,X,Y
"RTN","TIUPEVNT",139,0)
 W:+$G(ECHO) !,"Filing Record/Resolving Error..."
"RTN","TIUPEVNT",140,0)
 S RESTIME=$$NOW^TIULC
"RTN","TIUPEVNT",141,0)
 S DIE="^TIU(8925.4,"
"RTN","TIUPEVNT",142,0)
 S DA=+$G(EVNTDA) Q:+DA'>0
"RTN","TIUPEVNT",143,0)
 ; ---- If already resolved, Quit. (Go on to next record)
"RTN","TIUPEVNT",144,0)
 I +$P(^TIU(8925.4,DA,0),U,6)>0 Q
"RTN","TIUPEVNT",145,0)
 ; ---- Mark error log record as resolved
"RTN","TIUPEVNT",146,0)
 S DR=".05///@;.06////1;.07////"_RESTIME_";1///@"
"RTN","TIUPEVNT",147,0)
 D ^DIE
"RTN","TIUPEVNT",148,0)
 Q
"RTN","TIUPEVNT",149,0)
INQRHELP ; Help for Upload Error Inquire to Patient Record prompt
"RTN","TIUPEVNT",150,0)
 W !,"Do you wish to be prompted for the data necessary to resolve the filing error?"
"RTN","TIUPEVNT",151,0)
 W !,"If not, answer NO to proceed and edit the buffered data directly without"
"RTN","TIUPEVNT",152,0)
 W !,"prompts, or enter '^' to come back and resolve the error later."
"RTN","TIUPEVNT",153,0)
 Q
"RTN","TIUPFFIX")
0^6^B6928359
"RTN","TIUPFFIX",1,0)
TIUPFFIX ; SLC/JMH - Resolve Upload Filing Errors for PRF Notes ;7/29/05
"RTN","TIUPFFIX",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**184**;Jun 20, 1997
"RTN","TIUPFFIX",3,0)
PFFIX ; PRF (Patient Record Flag) Note Filing Error Resolution Code - COPIED FROM TIUPNFIX
"RTN","TIUPFFIX",4,0)
 N TIUFLDS,TIUBUF,SUCCESS,OLDTYPE,DFN,TITLDA,TIU
"RTN","TIUPFFIX",5,0)
 S SUCCESS=0
"RTN","TIUPFFIX",6,0)
 I '$D(^TIU(8925.1,+$G(TIUTYPE),0)) S SUCCESS="0^Document type is missing or invalid." G PFFIXX
"RTN","TIUPFFIX",7,0)
 I '$D(^TIU(8925.4,+$G(TIUEVNT),0)) S SUCCESS="0^Upload Log event is missing or invalid." G PFFIXX
"RTN","TIUPFFIX",8,0)
 S TIUBUF=$$BUFFER^TIUFIX2(TIUEVNT) I +TIUBUF'>0 S SUCCESS=TIUBUF G PFFIXX
"RTN","TIUPFFIX",9,0)
 I '$D(TIUPRM0) D SETPARM^TIULE ; Sets TIUPRM0 with hdr signal, etc
"RTN","TIUPFFIX",10,0)
 ; -- Load hdr data from buffer into array TIUFLDS:
"RTN","TIUPFFIX",11,0)
 D LOADHDR^TIUFIX2(.TIUFLDS,TIUBUF,TIUPRM0,TIUTYPE)
"RTN","TIUPFFIX",12,0)
 ; -- Get from user all data needed to create a new document
"RTN","TIUPFFIX",13,0)
 ;    of the given type; Cross-check user data for consistency.
"RTN","TIUPFFIX",14,0)
 S OLDTYPE=TIUTYPE
"RTN","TIUPFFIX",15,0)
 D GETCHECK(.SUCCESS,.TIUTYPE,.TIUFLDS,.DFN,.TITLDA,.TIU)
"RTN","TIUPFFIX",16,0)
 I 'SUCCESS G PFFIXX
"RTN","TIUPFFIX",17,0)
 ; -- Create new document; file all TIUFLDS nodes which have
"RTN","TIUPFFIX",18,0)
 ;    not been killed, execute post-file code, etc.:
"RTN","TIUPFFIX",19,0)
 D MAKE^TIUFIX1(.SUCCESS,TIUEVNT,TIUBUF,.TIUTYPE,.TIUFLDS,.DFN,.TITLDA,.TIU,TIUPRM0)
"RTN","TIUPFFIX",20,0)
 K ^TMP("TIUPRFUP",$J) ;in case MAKE didn't call post-file code
"RTN","TIUPFFIX",21,0)
 ; -- If docmt filed successfully, set flag to stop - don't go
"RTN","TIUPFFIX",22,0)
 ;    on and try to resolve error by editing buffer and refiling. 
"RTN","TIUPFFIX",23,0)
PFFIXX I +SUCCESS S TIUDONE=1 Q
"RTN","TIUPFFIX",24,0)
 W !!,"Filing error could not be resolved."
"RTN","TIUPFFIX",25,0)
 I $P(SUCCESS,U,2)]"" W !,$P(SUCCESS,U,2)
"RTN","TIUPFFIX",26,0)
 W !,"If you wish to try a different approach, edit the buffered data directly",!,"and refile it, or simply exit and try again later.",!
"RTN","TIUPFFIX",27,0)
 Q
"RTN","TIUPFFIX",28,0)
 ;
"RTN","TIUPFFIX",29,0)
GETCHECK(SUCCESS,TIUTYPE,TIUFLDS,DFN,TITLDA,TIU) ; Get and
"RTN","TIUPFFIX",30,0)
 ;check data
"RTN","TIUPFFIX",31,0)
 ;
"RTN","TIUPFFIX",32,0)
 ;Since a filing error occurred when filer could not locate
"RTN","TIUPFFIX",33,0)
 ;or create a TIU document using data from buffer, we ask the
"RTN","TIUPFFIX",34,0)
 ;user for all data needed to locate/create a document, and
"RTN","TIUPFFIX",35,0)
 ;use that data, instead of the buffer data, to locate/create
"RTN","TIUPFFIX",36,0)
 ;the document.
"RTN","TIUPFFIX",37,0)
 ;Data are acquired from the user is such a way as to guarantee
"RTN","TIUPFFIX",38,0)
 ;that all data necessary to go ahead and create a PRF Note
"RTN","TIUPFFIX",39,0)
 ;are complete and consistent
"RTN","TIUPFFIX",40,0)
 ;
"RTN","TIUPFFIX",41,0)
 ; SUCCESS = 1 - Data are complete and consistent or
"RTN","TIUPFFIX",42,0)
 ;         = 0^Explanatory msg
"RTN","TIUPFFIX",43,0)
 ; TIUTYPE = Docmt Def whose methods are being invoked.  Users may
"RTN","TIUPFFIX",44,0)
 ;           select titles of type TIUTYPE.  If not ALL titles of
"RTN","TIUPFFIX",45,0)
 ;           type TIUTYPE should be selectable, screen them out
"RTN","TIUPFFIX",46,0)
 ;            with BADTYPES.
"RTN","TIUPFFIX",47,0)
 ; TIUFLDS     - array of fields to be filed later in FILE^TIUFIX1.
"RTN","TIUPFFIX",48,0)
 ;               See warning in MAKE^TIUFIX1 concerning possible
"RTN","TIUPFFIX",49,0)
 ;               need to kill nodes of TIUFLDS before calling MAKE.
"RTN","TIUPFFIX",50,0)
 ; DFN, TITLDA, TIU - Patient, Document title, Demographics
"RTN","TIUPFFIX",51,0)
 ;                    /visit array.
"RTN","TIUPFFIX",52,0)
 ;                    Must be gotten from user and passed back.
"RTN","TIUPFFIX",53,0)
 ;                    Used in GETRECNW to create docmt, in MERGTEXT
"RTN","TIUPFFIX",54,0)
 ;                    to create components.
"RTN","TIUPFFIX",55,0)
 K ^TMP("TIUPRFUP",$J)
"RTN","TIUPFFIX",56,0)
 N DEFAULT,BADTYPES,ASK,TIURET
"RTN","TIUPFFIX",57,0)
 ; -- Initialize SUCCESS to 0^Error msg:
"RTN","TIUPFFIX",58,0)
 S SUCCESS="0^Patient, visit, and title are required."
"RTN","TIUPFFIX",59,0)
 ; -- Get patient and visit, and title:
"RTN","TIUPFFIX",60,0)
 S DFN=+$$PATIENT^TIULA Q:DFN'>0
"RTN","TIUPFFIX",61,0)
 D ENPN^TIUVSIT(.TIU,+DFN,1)
"RTN","TIUPFFIX",62,0)
 I '$D(TIU) Q
"RTN","TIUPFFIX",63,0)
 I '$$CHEKPN^TIUCHLP(.TIU) K TIU Q
"RTN","TIUPFFIX",64,0)
 ; -- Don't screen out titles (we are already permitting only PRF titles and we don't need to further screen them; don't ask about changing type:
"RTN","TIUPFFIX",65,0)
 S BADTYPES="",ASK=0
"RTN","TIUPFFIX",66,0)
 D GETTITLE^TIUFIX(.SUCCESS,TIUTYPE,.TIUFLDS,.TITLDA,BADTYPES,ASK)
"RTN","TIUPFFIX",67,0)
 Q:TITLDA'>0
"RTN","TIUPFFIX",68,0)
 S TIURET=$$SELECT^TIUPRF1(+TITLDA,DFN)
"RTN","TIUPFFIX",69,0)
 I 'TIURET S SUCCESS="0^Patient Record Flag Action is Required." Q
"RTN","TIUPFFIX",70,0)
 S ^TMP("TIUPRFUP",$J)=TIURET
"RTN","TIUPFFIX",71,0)
 ; -- If consistent and complete, set SUCCESS=1: 
"RTN","TIUPFFIX",72,0)
 S SUCCESS=1
"RTN","TIUPFFIX",73,0)
GETX ;
"RTN","TIUPFFIX",74,0)
 Q
"RTN","TIUPNAPI")
0^28^B27434460
"RTN","TIUPNAPI",1,0)
TIUPNAPI ; SLC/JER - API to Replace GMRPAPI ; 8/8/05
"RTN","TIUPNAPI",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**57,140,175,180,184**;Jun 20, 1997
"RTN","TIUPNAPI",3,0)
 ;
"RTN","TIUPNAPI",4,0)
 ; ^DPT( IA #3101
"RTN","TIUPNAPI",5,0)
NEW(TIUIFN,DFN,TIUAUTH,TIURDT,TIUTITLE,TIULOC,TIUES,TIUPRT,TIUESBY,TIUASKVS,TIUADEL) ;
"RTN","TIUPNAPI",6,0)
 ; -- Create new note
"RTN","TIUPNAPI",7,0)
 ;****************
"RTN","TIUPNAPI",8,0)
 ; Return variable (must pass by reference):
"RTN","TIUPNAPI",9,0)
 ;      TIUIFN (pass by ref) = New note IFN in file 8925, -1 if error,
"RTN","TIUPNAPI",10,0)
 ;                           = IFN^-1 if note filed, w/o signature when
"RTN","TIUPNAPI",11,0)
 ;                              TIUES=1 (It has been IFN^-1 as far back
"RTN","TIUPNAPI",12,0)
 ;                              as patch 140. Noted on 8/4/05)
"RTN","TIUPNAPI",13,0)
 ;                           = -1 if user fails to enter valid cosig
"RTN","TIUPNAPI",14,0)
 ;                           = IFN^-1 if TIUESBY>0 & signature fails,
"RTN","TIUPNAPI",15,0)
 ;                             if TIUADEL not present
"RTN","TIUPNAPI",16,0)
 ;                           =  -1^-1 if TIUESBY>0 & signature fails,
"RTN","TIUPNAPI",17,0)
 ;                             if TIUADEL is present
"RTN","TIUPNAPI",18,0)
 ;                           = -1^-1 if TIUES=1 and user deletes note
"RTN","TIUPNAPI",19,0)
 ; Required Input parameters:
"RTN","TIUPNAPI",20,0)
 ;      DFN                  = Patient IFN in file #2
"RTN","TIUPNAPI",21,0)
 ;      TIUAUTH              = Author IFN in file #200
"RTN","TIUPNAPI",22,0)
 ;      TIURDT               = Date/time of note in FM format
"RTN","TIUPNAPI",23,0)
 ;      TIUTITLE             = Title IFN in file 8925.1
"RTN","TIUPNAPI",24,0)
 ; Required global variable:
"RTN","TIUPNAPI",25,0)
 ;      ^TMP("TIUP",$J)      = Array root for text in format compatible
"RTN","TIUPNAPI",26,0)
 ;                             w/FM Word-processing fields. e.g.,
"RTN","TIUPNAPI",27,0)
 ;                             ^TMP("TIUP",$J,0)=^^1^1^2961216^
"RTN","TIUPNAPI",28,0)
 ;                             ^TMP("TIUP",$J,1,0)=Testing the TIUPNAPI.
"RTN","TIUPNAPI",29,0)
 ; 
"RTN","TIUPNAPI",30,0)
 ;                             NOTE: you no longer need to use the
"RTN","TIUPNAPI",31,0)
 ;                             additional subscript to designate where
"RTN","TIUPNAPI",32,0)
 ;                             the text should go (e.g., 10 for Admission
"RTN","TIUPNAPI",33,0)
 ;                             Note).
"RTN","TIUPNAPI",34,0)
 ; Optional Input variables:
"RTN","TIUPNAPI",35,0)
 ;      TIULOC              = Patient Location IFN in file #44
"RTN","TIUPNAPI",36,0)
 ;      TIUES               = 1 if TIU should prompt/process E-SIG
"RTN","TIUPNAPI",37,0)
 ;      TIUPRT              = 1 if TIU should prompt user to print note
"RTN","TIUPNAPI",38,0)
 ;      TIUESBY             = Signer IFN in file #200:  Calling App is
"RTN","TIUPNAPI",39,0)
 ;                            resonsible for Electronic Signature
"RTN","TIUPNAPI",40,0)
 ;      TIUASKVS            = BOOLEAN flag indicating whether to ask for visit
"RTN","TIUPNAPI",41,0)
 ;      NOTE: If TIUESBY is passed, the document will be marked as
"RTN","TIUPNAPI",42,0)
 ;            signed at the time the encrypted signature block name
"RTN","TIUPNAPI",43,0)
 ;            and title are filed
"RTN","TIUPNAPI",44,0)
 ;      TIUADEL             = BOOLEAN flag for automatic delete if TIUESBY>0 and
"RTN","TIUPNAPI",45,0)
 ;                            signature fails instead of leaving UNSIGNED doc.
"RTN","TIUPNAPI",46,0)
 ;****************
"RTN","TIUPNAPI",47,0)
 ;
"RTN","TIUPNAPI",48,0)
 N TIUX,TIUCHNG,TIUHIT,TIUPRM0,TIUPRM1,TIUTYP,TIUOUT,TIUDPRM,TIUVSTR
"RTN","TIUPNAPI",49,0)
 N COSPROB,AUTHSIGN
"RTN","TIUPNAPI",50,0)
 S TIUIFN=-1,COSPROB=0
"RTN","TIUPNAPI",51,0)
 I $D(^TMP("TIUP",$J))'>9 Q  ; If no text, quit
"RTN","TIUPNAPI",52,0)
 I '$D(^DPT(+$G(DFN),0)) G EXIT ; if not valid patient, clean-up & quit
"RTN","TIUPNAPI",53,0)
 I $L($$GET1^DIQ(200,+$G(TIUAUTH),.01))'>0 G EXIT ; if not valid author, clean-up & quit
"RTN","TIUPNAPI",54,0)
 I '$D(^TIU(8925.1,+$G(TIUTITLE),0)) G EXIT ; if not valid title, clean-up & quit
"RTN","TIUPNAPI",55,0)
 I $S(+$G(TIURDT)'>0:1,+$G(TIURDT)>+$$NOW^XLFDT:1,+$$FMTH^XLFDT(TIURDT)'>0:1,1:0) G EXIT
"RTN","TIUPNAPI",56,0)
 I $S('($D(DUZ)#2):1,$L($$GET1^DIQ(200,DUZ,.01))'>0:1,1:0) G EXIT
"RTN","TIUPNAPI",57,0)
 S TIUASKVS=+$G(TIUASKVS)
"RTN","TIUPNAPI",58,0)
 ; -- Okay, create new note
"RTN","TIUPNAPI",59,0)
 S TIUX(1202)=TIUAUTH,TIUX(1301)=TIURDT
"RTN","TIUPNAPI",60,0)
 ; get doc parameters
"RTN","TIUPNAPI",61,0)
 D DOCPRM^TIULC1(TIUTITLE,.TIUDPRM)
"RTN","TIUPNAPI",62,0)
 I +TIUASKVS D  G:+$G(TIUOUT) EXIT
"RTN","TIUPNAPI",63,0)
 . N TIUBY,TIU,TIUY
"RTN","TIUPNAPI",64,0)
 . D ENPN^TIUVSIT(.TIU,DFN,1)
"RTN","TIUPNAPI",65,0)
 . I '$D(TIU) S TIUOUT=1,TIUIFN=-1 Q
"RTN","TIUPNAPI",66,0)
 . S TIUY=$$CHEKPN^TIULD(.TIU,.TIUBY)
"RTN","TIUPNAPI",67,0)
 . I '+TIUY S TIUOUT=1,TIUIFN=-1 Q
"RTN","TIUPNAPI",68,0)
 . I '$L($G(TIU("VSTR"))) S TIUOUT=1,TIUIFN=-1 Q
"RTN","TIUPNAPI",69,0)
 . S TIUVSTR=$G(TIU("VSTR")),TIULOC=+$G(TIU("LOC"))
"RTN","TIUPNAPI",70,0)
 . I +$G(TIU("STOP")),(+$P(TIUDPRM(0),U,14)'=1) S TIUX(.11)=1
"RTN","TIUPNAPI",71,0)
 M TIUX("TEXT")=^TMP("TIUP",$J)
"RTN","TIUPNAPI",72,0)
 D MAKE^TIUSRVP(.TIUIFN,DFN,TIUTITLE,TIURDT,$G(TIULOC),"",.TIUX,$G(TIUVSTR))
"RTN","TIUPNAPI",73,0)
 I +TIUIFN'>0 S TIUIFN=-1 G EXIT
"RTN","TIUPNAPI",74,0)
 ; -- If author requires cosig, then 
"RTN","TIUPNAPI",75,0)
 ;      If we're not interactive we can't get Exp Cos so we have
"RTN","TIUPNAPI",76,0)
 ;      a cosig problem:
"RTN","TIUPNAPI",77,0)
 S AUTHSIGN=$S($G(TIUESBY):TIUESBY,1:TIUAUTH)
"RTN","TIUPNAPI",78,0)
 I +$$REQCOSIG^TIULP(TIUTITLE,"",AUTHSIGN) D  G:+$G(TIUOUT) EXIT
"RTN","TIUPNAPI",79,0)
 . I $D(ZTQUEUED) S COSPROB=1 Q  ; called from a task
"RTN","TIUPNAPI",80,0)
 . I $D(XWBOS) S COSPROB=1 Q  ; called from RPCBroker app
"RTN","TIUPNAPI",81,0)
 . ; -- If we are interactive, get Exp Cos. Get it after note
"RTN","TIUPNAPI",82,0)
 . ;      is created since screen needs IFN:
"RTN","TIUPNAPI",83,0)
 . N DIE,DA,DR,X,Y,COSNEED,EXPCOS
"RTN","TIUPNAPI",84,0)
 . S COSNEED=1
"RTN","TIUPNAPI",85,0)
 . S EXPCOS=$$GETCOSNR(+TIUIFN)
"RTN","TIUPNAPI",86,0)
 . I EXPCOS'>0 D DELETE^TIUSRVP("",+TIUIFN,"",1) S TIUIFN=-1,TIUOUT=1 Q
"RTN","TIUPNAPI",87,0)
 . S DIE=8925,DR="1208////^S X=EXPCOS;1506////^S X=COSNEED",DA=+TIUIFN D ^DIE
"RTN","TIUPNAPI",88,0)
 I '+$G(TIUESBY),(+$G(TIUES)>0) D  I +$G(TIUOUT) G EXIT
"RTN","TIUPNAPI",89,0)
 . N VALMBCK
"RTN","TIUPNAPI",90,0)
 . ; -- Present Browse Screen so user can sign:
"RTN","TIUPNAPI",91,0)
 . D EXSTNOTE^TIUBR1(DFN,TIUIFN) I '$D(^TIU(8925,+TIUIFN,0)) S TIUIFN="-1^-1",TIUOUT=1 Q
"RTN","TIUPNAPI",92,0)
 . I +$P(^TIU(8925,+TIUIFN,0),U,5)<6 S TIUIFN=TIUIFN_"^-1"
"RTN","TIUPNAPI",93,0)
 ; -- If esig done by calling app:
"RTN","TIUPNAPI",94,0)
 ;      but there IS a cosig problem and caller doesn't want unsigned
"RTN","TIUPNAPI",95,0)
 ;        docmts left around, delete docmt:
"RTN","TIUPNAPI",96,0)
 I +$G(TIUESBY),COSPROB,$G(TIUADEL) D DELETE^TIUSRVP("",+TIUIFN,"",1) S TIUIFN="-1^-1" G EXIT
"RTN","TIUPNAPI",97,0)
 ;             but if unsigned is OK, leave it unsigned:
"RTN","TIUPNAPI",98,0)
 I +$G(TIUESBY),COSPROB S TIUIFN=TIUIFN_"^-1"
"RTN","TIUPNAPI",99,0)
 ; -- If esig done by calling app and no cosig problem,
"RTN","TIUPNAPI",100,0)
 ;    mark it signed. If sig fails and caller doesn't
"RTN","TIUPNAPI",101,0)
 ;      want unsigned docmts left around, delete docmt:
"RTN","TIUPNAPI",102,0)
 I +$G(TIUESBY),'COSPROB D MARKSIGN(.TIUIFN,+$G(TIUESBY)) I +$G(TIUADEL),+$P(^TIU(8925,+TIUIFN,0),U,5)<6 D DELETE^TIUSRVP("",+TIUIFN,"",1) S TIUIFN="-1^-1" G EXIT
"RTN","TIUPNAPI",103,0)
 D SEND^TIUALRT(+TIUIFN)
"RTN","TIUPNAPI",104,0)
EXIT K ^TMP("TIUP",$J)
"RTN","TIUPNAPI",105,0)
 Q
"RTN","TIUPNAPI",106,0)
WHATITLE(X) ; -- Given a freetext title, return pointer to file 8925.1
"RTN","TIUPNAPI",107,0)
 Q $$WHATITLE^TIUPUTU(X)
"RTN","TIUPNAPI",108,0)
 ;
"RTN","TIUPNAPI",109,0)
GETCOSNR(TIUIEN) ; Function Asks Expected Cosigner
"RTN","TIUPNAPI",110,0)
 N TIUY,HELP
"RTN","TIUPNAPI",111,0)
 S HELP="You may not select self, author, or others who require cosignature."
"RTN","TIUPNAPI",112,0)
 S TIUY=$$READ^TIUU("P^200:AEMQ","EXPECTED COSIGNER","",HELP,"I $$SCRCSNR^TIULA3(TIUIEN,+Y)")
"RTN","TIUPNAPI",113,0)
 Q +$G(TIUY)
"RTN","TIUPNAPI",114,0)
 ;
"RTN","TIUPNAPI",115,0)
MARKSIGN(TIUDA,TIUESBY) ; Mark note as electronically signed
"RTN","TIUPNAPI",116,0)
 N ESNAME,ESTITLE,ESBLOCK
"RTN","TIUPNAPI",117,0)
 I $S(+$G(TIUESBY)'>0:1,$L($$GET1^DIQ(200,+$G(TIUESBY),.01))'>0:1,+$$CANDO^TIULP(TIUDA,"SIGNATURE",$G(TIUESBY))'>0:1,1:0) S TIUDA=TIUDA_U_-1 Q
"RTN","TIUPNAPI",118,0)
 S ESNAME=$$GET1^DIQ(200,+TIUESBY,20.2),ESTITLE=$$GET1^DIQ(200,+TIUESBY,20.3)
"RTN","TIUPNAPI",119,0)
 S ESBLOCK="1^"_ESNAME_U_ESTITLE
"RTN","TIUPNAPI",120,0)
 D ES^TIURS(TIUDA,ESBLOCK)
"RTN","TIUPNAPI",121,0)
 I +$P(^TIU(8925,+TIUIFN,0),U,5)<6 S TIUDA=TIUDA_"^-1"
"RTN","TIUPNAPI",122,0)
 Q
"RTN","TIUPNAPI",123,0)
TEST ; Interactive Test
"RTN","TIUPNAPI",124,0)
 N DUOUT,DFN,TITLE,TIUTYP,TIURDT,TIUDA,DIC K ^TMP("TIUP",$J)
"RTN","TIUPNAPI",125,0)
 W !,"First, collect the data to pass to the API...",!
"RTN","TIUPNAPI",126,0)
 S DFN=+$$PATIENT^TIULA Q:+DFN'>0
"RTN","TIUPNAPI",127,0)
 D DOCSPICK^TIULA2(.TIUTYP,3,"1A","","","+$$CANPICK^TIULP(+Y),+$$CANENTR^TIULP(+Y)")
"RTN","TIUPNAPI",128,0)
 S TITLE=$P($G(TIUTYP(1)),U,2) Q:+TITLE'>0
"RTN","TIUPNAPI",129,0)
 S TIURDT=+$$NOW^XLFDT
"RTN","TIUPNAPI",130,0)
 S DIC="^TMP(""TIUP"",$J," D EN^DIWE
"RTN","TIUPNAPI",131,0)
 W !,"NOW, call the API!",!
"RTN","TIUPNAPI",132,0)
 D NEW(.TIUDA,DFN,DUZ,TIURDT,TITLE,"",1,1,"",1)
"RTN","TIUPNAPI",133,0)
 Q
"RTN","TIUPRF")
0^1^B5321260
"RTN","TIUPRF",1,0)
TIUPRF ; SLC/JMH - API's for Patient Record Flags ; 7/29/05
"RTN","TIUPRF",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**184**;Jun 20, 1997
"RTN","TIUPRF",3,0)
 ;
"RTN","TIUPRF",4,0)
ISPRFDOC(TIUDA) ;Function (called by PIMS) returns 1 if docmt is PRF,
"RTN","TIUPRF",5,0)
 ;otherwise 0
"RTN","TIUPRF",6,0)
 N TIUTTL
"RTN","TIUPRF",7,0)
 S TIUTTL=+$G(^TIU(8925,TIUDA,0))
"RTN","TIUPRF",8,0)
 I 'TIUTTL Q 0
"RTN","TIUPRF",9,0)
 Q $$ISPFTTL^TIUPRFL(TIUTTL)
"RTN","TIUPRF",10,0)
 ;
"RTN","TIUPRF",11,0)
GETTTL(TIUDA) ; API called by PIMS to retrieve the name of a
"RTN","TIUPRF",12,0)
 ;TIU Document
"RTN","TIUPRF",13,0)
 ; Input   TIUDA: The TIU DOCUMENT TITLE IEN
"RTN","TIUPRF",14,0)
 ; Output TIUTTL: The TIU DOCUMENT TITLE Name
"RTN","TIUPRF",15,0)
 N TIUTTL,TIUNODE
"RTN","TIUPRF",16,0)
 S TIUNODE=$G(^TIU(8925.1,TIUDA,0))
"RTN","TIUPRF",17,0)
 I $G(TIUNODE)="" Q -1
"RTN","TIUPRF",18,0)
 S TIUTTL=$P(TIUNODE,U,1)
"RTN","TIUPRF",19,0)
 I $G(TIUTTL)="" Q -2
"RTN","TIUPRF",20,0)
 Q TIUTTL
"RTN","TIUPRF",21,0)
CHKDOC(TIUDA) ; API called by PIMS to check the existence of a TIU
"RTN","TIUPRF",22,0)
 ;   Document before linking, deleting,...
"RTN","TIUPRF",23,0)
 ; Input   TIUDA: The TIU DOCUMENT IEN
"RTN","TIUPRF",24,0)
 ; Output TIURET: Return value 
"RTN","TIUPRF",25,0)
 ;              (0 if Document does not exist, 1 if it does exist)
"RTN","TIUPRF",26,0)
 N TIURET
"RTN","TIUPRF",27,0)
 S TIURET=$D(^TIU(8925,TIUDA,0))
"RTN","TIUPRF",28,0)
 I +TIURET S TIURET=1
"RTN","TIUPRF",29,0)
 I 'TIURET S TIURET=0
"RTN","TIUPRF",30,0)
 Q TIURET
"RTN","TIUPRF",31,0)
 ;
"RTN","TIUPRF",32,0)
GETLIST(PRFCAT,TARGET) ; API called by PIMS to retrieve a list of active
"RTN","TIUPRF",33,0)
 ;   Category I and/or Category II Progress Note Titles
"RTN","TIUPRF",34,0)
 ; Input  PRFCAT: PRF Category Flag [1,2 or 3]
"RTN","TIUPRF",35,0)
 ;    1:Category I
"RTN","TIUPRF",36,0)
 ;    2:Category II
"RTN","TIUPRF",37,0)
 ;    3:Both Category I and II
"RTN","TIUPRF",38,0)
 ; Input  TARGET: The array name to place the list of 
"RTN","TIUPRF",39,0)
 ;                  Titles and IENs
"RTN","TIUPRF",40,0)
 ; Output TIURET: Return value to pass back any error
"RTN","TIUPRF",41,0)
 ;                  codes if necessary
"RTN","TIUPRF",42,0)
 ;                 @TARGET@(CATEGORY,D0)=TITLE IEN^TITLE NAME
"RTN","TIUPRF",43,0)
 ;                If nothing to return in list, TIUCNT=0 and TARGET array is empty
"RTN","TIUPRF",44,0)
 N TIUCAT1,TIUCAT2,TIURET,TIUCNT,TIUNODE1,TIUNODE2,TIUDA
"RTN","TIUPRF",45,0)
 S TIUCNT=0
"RTN","TIUPRF",46,0)
 K @TARGET
"RTN","TIUPRF",47,0)
 I '$D(PRFCAT)!('$D(TARGET)) Q "-1^MISSING INPUT"
"RTN","TIUPRF",48,0)
 I PRFCAT=3!(PRFCAT=1) D
"RTN","TIUPRF",49,0)
 . S TIUNODE1=0
"RTN","TIUPRF",50,0)
 . S TIUCAT1=+$$DDEFIEN^TIUFLF7("PATIENT RECORD FLAG CAT I","DC")
"RTN","TIUPRF",51,0)
 . F  S TIUNODE1=$O(^TIU(8925.1,TIUCAT1,10,TIUNODE1)) Q:'TIUNODE1  D
"RTN","TIUPRF",52,0)
 . . S TIUDA=$P(^TIU(8925.1,TIUCAT1,10,TIUNODE1,0),U)
"RTN","TIUPRF",53,0)
 . . I $P(^TIU(8925.1,TIUDA,0),U,7)=11!($P(^TIU(8925.1,TIUDA,0),U,7)=10) D
"RTN","TIUPRF",54,0)
 . . . S TIUCNT=TIUCNT+1
"RTN","TIUPRF",55,0)
 . . . S @TARGET@("CAT I",TIUCNT)=TIUDA_"^"_$$GETTTL(TIUDA)
"RTN","TIUPRF",56,0)
 I PRFCAT=3!(PRFCAT=2) D
"RTN","TIUPRF",57,0)
 . S TIUNODE2=0
"RTN","TIUPRF",58,0)
 . S TIUCAT2=+$$DDEFIEN^TIUFLF7("PATIENT RECORD FLAG CAT II","DC")
"RTN","TIUPRF",59,0)
 . F  S TIUNODE2=$O(^TIU(8925.1,TIUCAT2,10,TIUNODE2)) Q:'TIUNODE2  D
"RTN","TIUPRF",60,0)
 . . S TIUDA=$P(^TIU(8925.1,TIUCAT2,10,TIUNODE2,0),U)
"RTN","TIUPRF",61,0)
 . . I $P(^TIU(8925.1,TIUDA,0),U,7)=11!($P(^TIU(8925.1,TIUDA,0),U,7)=10) D
"RTN","TIUPRF",62,0)
 . . . S TIUCNT=TIUCNT+1
"RTN","TIUPRF",63,0)
 . . . S @TARGET@("CAT II",TIUCNT)=TIUDA_"^"_$$GETTTL(TIUDA)
"RTN","TIUPRF",64,0)
 Q TIUCNT
"RTN","TIUPRF1")
0^2^B46123899
"RTN","TIUPRF1",1,0)
TIUPRF1 ; SLC/JMH - Modules for Patient Record Flags ; 1/9/06
"RTN","TIUPRF1",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**184**;Jun 20, 1997
"RTN","TIUPRF1",3,0)
 ;
"RTN","TIUPRF1",4,0)
SELECT(TIUTTL,DFN,TIUDA) ; Select flag action for VISTA
"RTN","TIUPRF1",5,0)
 ;Requires:
"RTN","TIUPRF1",6,0)
 ;   TIUTTL - 8925.1 IEN
"RTN","TIUPRF1",7,0)
 ;   DFN - Patient IEN
"RTN","TIUPRF1",8,0)
 ;Optional:
"RTN","TIUPRF1",9,0)
 ;   TIUDA - Note IEN: If user picks the link that TIUDA is already
"RTN","TIUPRF1",10,0)
 ;                     linked to, question the pick
"RTN","TIUPRF1",11,0)
 ;Returns:
"RTN","TIUPRF1",12,0)
 ;   PRFAssignmentIEN^PRFAssignmentHistoryIEN or
"RTN","TIUPRF1",13,0)
 ;   0^msg         ;
"RTN","TIUPRF1",14,0)
 ; LINEOK = Line of action selected by user
"RTN","TIUPRF1",15,0)
 ; TIUAGN = 2 if note TIUDA is already linked to selected action
"RTN","TIUPRF1",16,0)
 ; TIUAGN = 1 if Assignment History IEN selected by user already has
"RTN","TIUPRF1",17,0)
 ;              another note linked to it
"RTN","TIUPRF1",18,0)
 N TIUDG,TIUER,TIURET,TIUAGN,LKBLARR
"RTN","TIUPRF1",19,0)
 N FLAGNM,HASFLAG,AVAIL,LINKBL,UNLINKBL,TIUJ
"RTN","TIUPRF1",20,0)
 S TIUAGN=0,HASFLAG=1
"RTN","TIUPRF1",21,0)
 S FLAGNM=$$FNDFLAG^TIUPRFL(TIUTTL)
"RTN","TIUPRF1",22,0)
 I 'FLAGNM S HASFLAG=0
"RTN","TIUPRF1",23,0)
 S FLAGNM=$S(HASFLAG:$P(FLAGNM,U,2),1:"UNKNOWN")
"RTN","TIUPRF1",24,0)
 S TIUDG=$$GETHTIU^DGPFAPI1(DFN,+$G(TIUTTL),"^TMP(""TIUPRFH"",$J)")
"RTN","TIUPRF1",25,0)
 F  D  Q:'TIUAGN
"RTN","TIUPRF1",26,0)
 . I 'TIUAGN W !!,"This Note must be linked to Patient Record Flag:",!,"        ",FLAGNM,!,"  Checking for available Flag Actions...",!
"RTN","TIUPRF1",27,0)
 . I 'TIUDG S TIURET="0^"_$P(TIUDG,U,2) D  Q
"RTN","TIUPRF1",28,0)
 . . W !,$P(TIUDG,U,2),"!",!
"RTN","TIUPRF1",29,0)
 . . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIUPRF1",30,0)
 . S AVAIL=$$AVAILACT^TIUPRFL("^TMP(""TIUPRFH"",$J)",.LINKBL,.UNLINKBL)
"RTN","TIUPRF1",31,0)
 . I 'AVAIL D  Q
"RTN","TIUPRF1",32,0)
 . . S TIURET="0^All linked"
"RTN","TIUPRF1",33,0)
 . . W !,"All linkable Flag actions for this Patient and Title are already linked!",!
"RTN","TIUPRF1",34,0)
 . . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIUPRF1",35,0)
 . I TIUAGN=1 W "  ?? This action already has a note linked to it.",! S TIUAGN=0
"RTN","TIUPRF1",36,0)
 . I TIUAGN=2 W "  ?? The note is already linked to this action.",! S TIUAGN=0
"RTN","TIUPRF1",37,0)
 . ; -- If flag assgnmt array has unlinkable actions, omit them and set
"RTN","TIUPRF1",38,0)
 . ;    a new arr starting subscript at 1:
"RTN","TIUPRF1",39,0)
 . I UNLINKBL D  S LKBLARR="^TMP(""TIUPRFLKBL"",$J)"
"RTN","TIUPRF1",40,0)
 . . F TIUJ=1:1:LINKBL M ^TMP("TIUPRFLKBL",$J,"HISTORY",TIUJ)=^TMP("TIUPRFH",$J,"HISTORY",TIUJ+UNLINKBL)
"RTN","TIUPRF1",41,0)
 . I 'UNLINKBL S LKBLARR="^TMP(""TIUPRFH"",$J)"
"RTN","TIUPRF1",42,0)
 . ; Display all linkable actions and prompt user to select one:
"RTN","TIUPRF1",43,0)
 . W !,"Please select a Patient Record Flag Assignment Action: "
"RTN","TIUPRF1",44,0)
 . W !,?7,"Date",?27,"Action",?52,"Note"
"RTN","TIUPRF1",45,0)
 . S (TIUER,LINEOK)=0
"RTN","TIUPRF1",46,0)
 . ; -- Display the flag actions and ask for choice in BREAK
"RTN","TIUPRF1",47,0)
 . F LINENO=1:1:LINKBL D  Q:+TIUER!+LINEOK
"RTN","TIUPRF1",48,0)
 . . D WRITE(LINENO) I '(LINENO#5) D BREAK(LINENO,LINKBL,.TIUER,.LINEOK)
"RTN","TIUPRF1",49,0)
 . I LINENO#5 D BREAK(LINENO,LINKBL,.TIUER,.LINEOK)
"RTN","TIUPRF1",50,0)
 . ; -- Check if user ^ out
"RTN","TIUPRF1",51,0)
 . I TIUER S TIURET="0^USER EXITED" Q
"RTN","TIUPRF1",52,0)
 . S TIURET=+^TMP("TIUPRFH",$J,"ASSIGNIEN")_U_+@LKBLARR@("HISTORY",LINEOK,"HISTIEN")
"RTN","TIUPRF1",53,0)
 . ; -- If action already has a note linked to it, try again:
"RTN","TIUPRF1",54,0)
 . I +$G(TIUDA),+@LKBLARR@("HISTORY",LINEOK,"TIUIEN")=$G(TIUDA) S TIUAGN=2 Q
"RTN","TIUPRF1",55,0)
 . I @LKBLARR@("HISTORY",LINEOK,"TIUIEN") S TIUAGN=1 Q
"RTN","TIUPRF1",56,0)
SELECTQ K ^TMP("TIUPRFH",$J),^TMP("TIUPRFLKBL",$J)
"RTN","TIUPRF1",57,0)
 Q TIURET
"RTN","TIUPRF1",58,0)
 ;
"RTN","TIUPRF1",59,0)
BREAK(LINENO,LINKBL,TIUER,LINEOK) ; Handle prompting
"RTN","TIUPRF1",60,0)
 N TIUX,MORE
"RTN","TIUPRF1",61,0)
 S MORE=$S(LINKBL>LINENO:1,1:0)
"RTN","TIUPRF1",62,0)
BREAK1 ;
"RTN","TIUPRF1",63,0)
 W !,"CHOOSE 1-",LINENO
"RTN","TIUPRF1",64,0)
 I MORE W !,"<RETURN> TO CONTINUE",!,"OR '^' TO QUIT"
"RTN","TIUPRF1",65,0)
 W ": " R TIUX:DTIME
"RTN","TIUPRF1",66,0)
 I $S('$T!(TIUX["^"):1,TIUX=""&'MORE:1,1:0) S TIUER=1 Q
"RTN","TIUPRF1",67,0)
 I TIUX="" Q
"RTN","TIUPRF1",68,0)
 I TIUX'=+TIUX!'$D(@LKBLARR@("HISTORY",+TIUX)) W !!,$C(7),"INVALID RESPONSE",! G BREAK1
"RTN","TIUPRF1",69,0)
 S LINEOK=TIUX
"RTN","TIUPRF1",70,0)
 Q
"RTN","TIUPRF1",71,0)
 ;
"RTN","TIUPRF1",72,0)
WRITE(LINENO) ; write the selectable item
"RTN","TIUPRF1",73,0)
 ; Uses LKBLARR
"RTN","TIUPRF1",74,0)
 N TIUX,TIUIEN,TIUAHIST,REFDT
"RTN","TIUPRF1",75,0)
 S TIUX=$P($G(@LKBLARR@("HISTORY",LINENO,"DATETIME")),U)
"RTN","TIUPRF1",76,0)
 W !,?2,LINENO,">",?7,$$FMTE^XLFDT(TIUX,"2D")
"RTN","TIUPRF1",77,0)
 W ?27,$P(@LKBLARR@("HISTORY",LINENO,"ACTION"),U,2),?52
"RTN","TIUPRF1",78,0)
 S TIUIEN=+@LKBLARR@("HISTORY",LINENO,"TIUIEN")
"RTN","TIUPRF1",79,0)
 S TIUAHIST=+@LKBLARR@("HISTORY",LINENO,"HISTIEN")
"RTN","TIUPRF1",80,0)
 I TIUIEN S REFDT=+$G(^TIU(8925,TIUIEN,13)),REFDT=$$DATE^TIULS(REFDT,"MM/DD/YY HR:MIN") W REFDT
"RTN","TIUPRF1",81,0)
 Q
"RTN","TIUPRF1",82,0)
 ;
"RTN","TIUPRF1",83,0)
LINK(TIUDA,ASSGNDA,ACTDA,DFN) ;links a note to a flag assignment action
"RTN","TIUPRF1",84,0)
 ;for patient DFN.
"RTN","TIUPRF1",85,0)
 ; Returns 1 if successful otherwise 0^"error message"
"RTN","TIUPRF1",86,0)
 N TIUTTL
"RTN","TIUPRF1",87,0)
 S TIUTTL=+$G(^TIU(8925,TIUDA,0))
"RTN","TIUPRF1",88,0)
 I 'TIUTTL Q "0^Document does not exist"
"RTN","TIUPRF1",89,0)
 ; -- GUI doesn't link if we check if TIUDA is PRF note, so don't
"RTN","TIUPRF1",90,0)
 ;I '$$ISPFTTL^TIUPRFL(TIUTTL) Q "0^Can't link non-PRF notes"
"RTN","TIUPRF1",91,0)
 S TIURES=$$STOTIU^DGPFAPI2(DFN,ASSGNDA,ACTDA,TIUDA)
"RTN","TIUPRF1",92,0)
 I 'TIURES Q TIURES
"RTN","TIUPRF1",93,0)
 Q 1
"RTN","TIUPRF1",94,0)
UNLINK(TIUDA) ;removes any link the note TIUDA might have
"RTN","TIUPRF1",95,0)
 N TIUTTL
"RTN","TIUPRF1",96,0)
 S TIUTTL=+$G(^TIU(8925,TIUDA,0))
"RTN","TIUPRF1",97,0)
 I 'TIUTTL Q
"RTN","TIUPRF1",98,0)
 S TIURES=$$DELTIU^DGPFAPI2(TIUDA)
"RTN","TIUPRF1",99,0)
 Q
"RTN","TIUPRF1",100,0)
RELINK(TIUDA,DFN) ; removes old link for TIUDA and links to new PRF assignment for patient DFN
"RTN","TIUPRF1",101,0)
 ; returns 1 if successful otherwise 0^"error message"
"RTN","TIUPRF1",102,0)
 N TIUPRF,TIUTTL,TIUASS,TIUACT,TIURES
"RTN","TIUPRF1",103,0)
 S TIUTTL=+$G(^TIU(8925,TIUDA,0))
"RTN","TIUPRF1",104,0)
 S TIUPRF=$$SELECT(TIUTTL,DFN,TIUDA)
"RTN","TIUPRF1",105,0)
 I '+TIUPRF Q TIUPRF
"RTN","TIUPRF1",106,0)
 S TIUASS=+TIUPRF,TIUACT=$P(TIUPRF,U,2)
"RTN","TIUPRF1",107,0)
 D UNLINK(TIUDA)
"RTN","TIUPRF1",108,0)
 S TIURES=$$LINK^TIUPRF1(TIUDA,TIUASS,TIUACT,DFN)
"RTN","TIUPRF1",109,0)
 Q 1
"RTN","TIUPRF1",110,0)
 ;
"RTN","TIUPRF1",111,0)
CHANGE(TIUDA) ; removes old link for TIUDA and links to new PRF assignment for TIUDA's patient
"RTN","TIUPRF1",112,0)
 N DFN,TIUTTL,TIUPRF
"RTN","TIUPRF1",113,0)
 S DFN=$P($G(^TIU(8925,TIUDA,0)),U,2)
"RTN","TIUPRF1",114,0)
 S TIUTTL=+$G(^TIU(8925,TIUDA,0))
"RTN","TIUPRF1",115,0)
 S TIUPRF=$$SELECT(TIUTTL,DFN,TIUDA)
"RTN","TIUPRF1",116,0)
 I '+TIUPRF W !,"You must select an action ... Nothing (re)-linked." S TIUPOP=1 Q
"RTN","TIUPRF1",117,0)
 S TIUASS=+TIUPRF,TIUACT=$P(TIUPRF,U,2)
"RTN","TIUPRF1",118,0)
 D UNLINK(TIUDA)
"RTN","TIUPRF1",119,0)
 S TIUPRF=$$LINK(TIUDA,TIUASS,TIUACT,DFN)
"RTN","TIUPRF1",120,0)
 I '+TIUPRF S TIUPOP=1 Q
"RTN","TIUPRF1",121,0)
 Q
"RTN","TIUPRF1",122,0)
 ;
"RTN","TIUPRF1",123,0)
PRFCT(TIUOTTL,TIUNTTL,TIUDA) ; handles changing title situations for PRF notes in LM
"RTN","TIUPRF1",124,0)
 N NEWISPRF,DFN,TIULINK,TIULINKC,OLDISPRF
"RTN","TIUPRF1",125,0)
 S DFN=$P($G(^TIU(8925,TIUDA,0)),U,2)
"RTN","TIUPRF1",126,0)
 S NEWISPRF=$$ISPFTTL^TIUPRFL(TIUNTTL)
"RTN","TIUPRF1",127,0)
 S OLDISPRF=$$ISPFTTL^TIUPRFL(TIUOTTL)
"RTN","TIUPRF1",128,0)
 ;-- non PRF title to PRF title
"RTN","TIUPRF1",129,0)
 I NEWISPRF,'OLDISPRF D  Q
"RTN","TIUPRF1",130,0)
 . W !,"The Title you selected is a PRF Title."
"RTN","TIUPRF1",131,0)
 . W !,"  PRF Notes must be linked to Patient Record Flags.",!
"RTN","TIUPRF1",132,0)
 . W !,"Do you want to continue with this Change Title Action?"
"RTN","TIUPRF1",133,0)
 . I +$$READ^TIUU("YO",,"N")'>0 S TIUQUIT=1 W !,"Title not changed." Q
"RTN","TIUPRF1",134,0)
 . S TIULINK=$$SELECT^TIUPRF1(TIUNTTL,DFN)
"RTN","TIUPRF1",135,0)
 . I 'TIULINK S TIUQUIT=1 W !,"Title not changed." Q
"RTN","TIUPRF1",136,0)
 . ; -- get new link
"RTN","TIUPRF1",137,0)
 . S TIULINKC=$$LINK^TIUPRF1(TIUDA,+TIULINK,$P(TIULINK,U,2),DFN)
"RTN","TIUPRF1",138,0)
 ;-- PRF title to PRF title
"RTN","TIUPRF1",139,0)
 I NEWISPRF,OLDISPRF D  Q
"RTN","TIUPRF1",140,0)
 . W !,"This document is already attached to a Patient Record"
"RTN","TIUPRF1",141,0)
 . W !,"  Flag. It will be unlinked from the current flag"
"RTN","TIUPRF1",142,0)
 . W !,"  and linked to a new flag.",!
"RTN","TIUPRF1",143,0)
 . W !,"Do you want to continue with this Change Title Action?"
"RTN","TIUPRF1",144,0)
 . I +$$READ^TIUU("YO",,"N")'>0 S TIUQUIT=1 W !,"Title not changed." Q
"RTN","TIUPRF1",145,0)
 . ; -- get new PRF Assignment to link to
"RTN","TIUPRF1",146,0)
 . S TIULINK=$$SELECT^TIUPRF1(TIUNTTL,DFN)
"RTN","TIUPRF1",147,0)
 . I 'TIULINK S TIUQUIT=1 W !,"Title not changed." Q
"RTN","TIUPRF1",148,0)
 . D UNLINK^TIUPRF1(+TIUDA)
"RTN","TIUPRF1",149,0)
 . S TIULINKC=$$LINK^TIUPRF1(TIUDA,+TIULINK,$P(TIULINK,U,2),DFN)
"RTN","TIUPRF1",150,0)
 ; -- PRF title to non PRF title
"RTN","TIUPRF1",151,0)
 I 'NEWISPRF,OLDISPRF D  Q
"RTN","TIUPRF1",152,0)
 . W !,"The Title you selected is not a PRF Title."
"RTN","TIUPRF1",153,0)
 . W !,"  The note is currently linked to a Patient Record Flag,"
"RTN","TIUPRF1",154,0)
 . W !,"  but will be unlinked when the title is changed"
"RTN","TIUPRF1",155,0)
 . W !,"  to a non-PRF Title.",!
"RTN","TIUPRF1",156,0)
 . W !,"Do you want to continue with this Change Title Action?"
"RTN","TIUPRF1",157,0)
 . I +$$READ^TIUU("YO",,"N")'>0 S TIUQUIT=1 W !,"Title not changed." Q
"RTN","TIUPRF1",158,0)
 . D UNLINK^TIUPRF1(+TIUDA)
"RTN","TIUPRF1",159,0)
 Q
"RTN","TIUPRF1",160,0)
 ;
"RTN","TIUPRF1",161,0)
GETLINK(TIUTYP,DFN,TIUDA) ; Ask user for link for NEW note and link it. Return success or failure
"RTN","TIUPRF1",162,0)
 N TIUPRF,TIUPRFL
"RTN","TIUPRF1",163,0)
 S TIUPRF=$$SELECT^TIUPRF1(TIUTYP,DFN)
"RTN","TIUPRF1",164,0)
 I 'TIUPRF W !,"Patient Record Flag Notes must be linked to Flag Actions.",! Q 0
"RTN","TIUPRF1",165,0)
 S TIUPRFL=$$LINK^TIUPRF1(TIUDA,$P(TIUPRF,U,1),$P(TIUPRF,U,2),DFN)
"RTN","TIUPRF1",166,0)
 I 'TIUPRFL W !,$P(TIUPRFL,U,2),! Q 0
"RTN","TIUPRF1",167,0)
 Q 1
"RTN","TIUPRF2")
0^3^B23001960
"RTN","TIUPRF2",1,0)
TIUPRF2 ; SLC/JMH - RPCs for Patient Record Flags ; 11/3/05
"RTN","TIUPRF2",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**184**;Jun 20, 1997
"RTN","TIUPRF2",3,0)
 ;
"RTN","TIUPRF2",4,0)
 ; $$GETACT^DGPFAPI: IA# 3860
"RTN","TIUPRF2",5,0)
 ; $$GETHTIU^DGPFAPI1: IA# 4383
"RTN","TIUPRF2",6,0)
 ; $$STOTIU^DGPFAPI2: IA# 4384
"RTN","TIUPRF2",7,0)
 ; 
"RTN","TIUPRF2",8,0)
GETTITLE(TIUY,PTDFN,FLAGID) ; RPC Gets Note Title associated with FLAGID for PTDFN
"RTN","TIUPRF2",9,0)
 ;Receives TIUY by ref; passes back
"RTN","TIUPRF2",10,0)
 ; TIUY = TitleIEN^Title
"RTN","TIUPRF2",11,0)
 ;        0 if no title is associated or flg assignmt is not active
"RTN","TIUPRF2",12,0)
 ;Requires PTDFN
"RTN","TIUPRF2",13,0)
 ;Requires FLAGID - identifier for particular flag assignment
"RTN","TIUPRF2",14,0)
 ;   for patient PTDFN. Set as subscript in GETACT^DGPFAPI.
"RTN","TIUPRF2",15,0)
 ; See GETFLG^ORPRF.
"RTN","TIUPRF2",16,0)
 N PRFARR K TIUY S TIUY=0
"RTN","TIUPRF2",17,0)
 Q:'$G(PTDFN)  Q:'$G(FLAGID)
"RTN","TIUPRF2",18,0)
 S TIUY=$$GETACT^DGPFAPI(PTDFN,"PRFARR") ;Get ACTive flag info
"RTN","TIUPRF2",19,0)
 Q:'TIUY
"RTN","TIUPRF2",20,0)
 S TIUY=$G(PRFARR(FLAGID,"TIUTITLE"))
"RTN","TIUPRF2",21,0)
 I TIUY'>0 S TIUY=0
"RTN","TIUPRF2",22,0)
 Q
"RTN","TIUPRF2",23,0)
 ;
"RTN","TIUPRF2",24,0)
GETNOTES(TIUY,PTDFN,TIUTTL,REVERSE) ; RPC gets SIGNED, LINKED PRF
"RTN","TIUPRF2",25,0)
 ;notes titled TIUTTL for patient PTDFN
"RTN","TIUPRF2",26,0)
 ; Excludes Notes linked to Entered in Error (EIE) actions and
"RTN","TIUPRF2",27,0)
 ;notes linked to Erroneous actions (actions taken prior to
"RTN","TIUPRF2",28,0)
 ;EIE actions).
"RTN","TIUPRF2",29,0)
 ; Receives TIUY by ref; passes back
"RTN","TIUPRF2",30,0)
 ;  TIUY = # of notes
"RTN","TIUPRF2",31,0)
 ;  TIUY([Reverse][Incremented]InternalNoteDate) =
"RTN","TIUPRF2",32,0)
 ;      NoteIEN^ActionName^ExternalNoteDate^AuthorName
"RTN","TIUPRF2",33,0)
 ; Requires PTDFN,TIUTTL
"RTN","TIUPRF2",34,0)
 ; Includes status Uncosigned, Completed, & Amended only.
"RTN","TIUPRF2",35,0)
 ; Optional REVERSE - Boolean Flag:
"RTN","TIUPRF2",36,0)
 ;     1 - Sort notes by reverse chronological order
"RTN","TIUPRF2",37,0)
 ;     0 (default) - Sort notes by chronological order
"RTN","TIUPRF2",38,0)
 N TIUDG,ACTID,TIUIDATE,TIUEDATE,TIUIEN,TIUACT,STATUS
"RTN","TIUPRF2",39,0)
 N TIUAUTH,DTARRAY,HASERR,ARRAYNM
"RTN","TIUPRF2",40,0)
 K TIUY ; Initialize array in case caller hasn't done so.
"RTN","TIUPRF2",41,0)
 S (TIUY,ACTID)=0
"RTN","TIUPRF2",42,0)
 ; -- Get Assgn Hist info (GETHTIU initializes array
"RTN","TIUPRF2",43,0)
 ;    so we don't need to):
"RTN","TIUPRF2",44,0)
 S ARRAYNM="^TMP(""TIUPRFH"",$J)"
"RTN","TIUPRF2",45,0)
 S TIUDG=$$GETHTIU^DGPFAPI1(PTDFN,TIUTTL,ARRAYNM)
"RTN","TIUPRF2",46,0)
 G:'TIUDG GETNOTEX
"RTN","TIUPRF2",47,0)
 S HASERR=$$HASERR^TIUPRFL(ARRAYNM)
"RTN","TIUPRF2",48,0)
 F  S ACTID=$O(@ARRAYNM@("HISTORY",ACTID)) Q:'ACTID  D
"RTN","TIUPRF2",49,0)
 . I ACTID=+HASERR Q  ;Entered in Error
"RTN","TIUPRF2",50,0)
 . I HASERR>0,$$ISERR^TIUPRFL(ARRAYNM,ACTID,$P(HASERR,U,2)) Q  ;erroneous
"RTN","TIUPRF2",51,0)
 . S TIUIEN=+@ARRAYNM@("HISTORY",ACTID,"TIUIEN")
"RTN","TIUPRF2",52,0)
 . Q:TIUIEN'>0  ;TMP node may be just ^
"RTN","TIUPRF2",53,0)
 . ; -- Include only complete or amended or uncosigned notes:
"RTN","TIUPRF2",54,0)
 . S STATUS=$P($G(^TIU(8925,TIUIEN,0)),U,5) I '((STATUS=6)!(STATUS=7)!(STATUS=8)) Q
"RTN","TIUPRF2",55,0)
 . S TIUACT=$P(@ARRAYNM@("HISTORY",ACTID,"ACTION"),U,2)
"RTN","TIUPRF2",56,0)
 . N TIUFLDS,TIUERR D GETS^DIQ(8925,TIUIEN_",","1202;1301","IE","TIUFLDS","TIUERR")
"RTN","TIUPRF2",57,0)
 . S TIUIDATE=TIUFLDS(8925,TIUIEN_",",1301,"I")
"RTN","TIUPRF2",58,0)
 . ; -- Increment date if there are multiple notes w/ same exact date:
"RTN","TIUPRF2",59,0)
 . F  S:$D(DTARRAY(TIUIDATE)) TIUIDATE=TIUIDATE+.0000001 I '$D(DTARRAY(TIUIDATE)) S DTARRAY(TIUIDATE)="" Q
"RTN","TIUPRF2",60,0)
 . I $G(REVERSE) S TIUIDATE=9999999-TIUIDATE
"RTN","TIUPRF2",61,0)
 . S TIUEDATE=$E(TIUFLDS(8925,TIUIEN_",",1301,"E"),1,18)
"RTN","TIUPRF2",62,0)
 . I TIUEDATE="" S TIUEDATE="No Ref Date"
"RTN","TIUPRF2",63,0)
 . S TIUAUTH=TIUFLDS(8925,TIUIEN_",",1202,"E")
"RTN","TIUPRF2",64,0)
 . I TIUAUTH="" S TIUAUTH="No Author"
"RTN","TIUPRF2",65,0)
 . S TIUY=TIUY+1
"RTN","TIUPRF2",66,0)
 . S TIUY(TIUIDATE)=TIUIEN_U_TIUACT_U_TIUEDATE_U_TIUAUTH
"RTN","TIUPRF2",67,0)
GETNOTEX ;
"RTN","TIUPRF2",68,0)
 K ^TMP("TIUPRFH",$J)
"RTN","TIUPRF2",69,0)
 Q
"RTN","TIUPRF2",70,0)
 ;
"RTN","TIUPRF2",71,0)
GETACTS(TIUY,TIUTTL,DFN) ;RPC Gets PRF Action info
"RTN","TIUPRF2",72,0)
 ;"Action" is shorthand for Assignment History entry
"RTN","TIUPRF2",73,0)
 ;Returns data in the following format for each Action:
"RTN","TIUPRF2",74,0)
 ;TIUY(ACTID) =
"RTN","TIUPRF2",75,0)
 ; FLAGNAME^ASSGNIEN^ACTIONNAME^ACTIONIEN^ACTIONDATEI^ACTIONDATEE^TIUIEN
"RTN","TIUPRF2",76,0)
 ;  where Integer ACTID = subscript after "HISTORY" in array returned
"RTN","TIUPRF2",77,0)
 ;   by GETHTIU^DGPFAPI1
"RTN","TIUPRF2",78,0)
 ;Returns linkable actions (whether linked or not) for Patient DFN
"RTN","TIUPRF2",79,0)
 ; and flag assoc w/ TIUTTL.
"RTN","TIUPRF2",80,0)
 ;Excludes UNLINKABLE actions = Entered in Error actions (EIE) or
"RTN","TIUPRF2",81,0)
 ; actions taken prior to an EIE action.
"RTN","TIUPRF2",82,0)
 ;Erroneous and EIE actions may be for the wrong patient, etc.
"RTN","TIUPRF2",83,0)
 N TIUDG,ACTID,TIUFLAG,UNLINKBL,ARRAYNM
"RTN","TIUPRF2",84,0)
 S TIUY=1,ARRAYNM="^TMP(""TIUPRFH"",$J)"
"RTN","TIUPRF2",85,0)
 S TIUDG=$$GETHTIU^DGPFAPI1(DFN,TIUTTL,ARRAYNM)
"RTN","TIUPRF2",86,0)
 I 'TIUDG S TIUY="0^"_$P(TIUDG,U,2) G GETACTX
"RTN","TIUPRF2",87,0)
 ; -- If no unlinked, linkable actions exist, say so but go on:
"RTN","TIUPRF2",88,0)
 I '$$AVAILACT^TIUPRFL("^TMP(""TIUPRFH"",$J)",,.UNLINKBL) S TIUY="0^All linkable Flag actions are already linked"
"RTN","TIUPRF2",89,0)
 ; -- Return ALL linkable actions (linked or not):
"RTN","TIUPRF2",90,0)
 S TIUFLAG=$P(^TMP("TIUPRFH",$J,"FLAG"),U,2)_U_$P(^TMP("TIUPRFH",$J,"ASSIGNIEN"),U)
"RTN","TIUPRF2",91,0)
 S ACTID=0
"RTN","TIUPRF2",92,0)
 F  S ACTID=$O(^TMP("TIUPRFH",$J,"HISTORY",ACTID)) Q:'+ACTID  D
"RTN","TIUPRF2",93,0)
 . Q:$G(UNLINKBL(ACTID))
"RTN","TIUPRF2",94,0)
 . S TIUY(ACTID)=TIUFLAG
"RTN","TIUPRF2",95,0)
 . S TIUY(ACTID)=TIUY(ACTID)_U_$P(^TMP("TIUPRFH",$J,"HISTORY",ACTID,"ACTION"),U,2)
"RTN","TIUPRF2",96,0)
 . S TIUY(ACTID)=TIUY(ACTID)_U_$P(^TMP("TIUPRFH",$J,"HISTORY",ACTID,"HISTIEN"),U,1)
"RTN","TIUPRF2",97,0)
 . S TIUY(ACTID)=TIUY(ACTID)_U_$P(^TMP("TIUPRFH",$J,"HISTORY",ACTID,"DATETIME"),U,1)
"RTN","TIUPRF2",98,0)
 . S TIUY(ACTID)=TIUY(ACTID)_U_$P(^TMP("TIUPRFH",$J,"HISTORY",ACTID,"DATETIME"),U,2)
"RTN","TIUPRF2",99,0)
 . S TIUY(ACTID)=TIUY(ACTID)_U_$P(^TMP("TIUPRFH",$J,"HISTORY",ACTID,"TIUIEN"),U,1)
"RTN","TIUPRF2",100,0)
GETACTX ;
"RTN","TIUPRF2",101,0)
 K ^TMP("TIUPRFH",$J)
"RTN","TIUPRF2",102,0)
 Q
"RTN","TIUPRF2",103,0)
 ;
"RTN","TIUPRF2",104,0)
LINK(TIUY,TIUIEN,ASSGNDA,ACTIEN,DFN) ;RPC Link TIU Doc TIUIEN to
"RTN","TIUPRF2",105,0)
 ; the PRF action
"RTN","TIUPRF2",106,0)
 N TIUTTL
"RTN","TIUPRF2",107,0)
 S TIUTTL=+$G(^TIU(8925,TIUIEN,0))
"RTN","TIUPRF2",108,0)
 I 'TIUTTL S TIUY="0^Document does not exist" Q
"RTN","TIUPRF2",109,0)
 ; Remove any links before making new link
"RTN","TIUPRF2",110,0)
 D UNLINK^TIUPRF1(TIUIEN)
"RTN","TIUPRF2",111,0)
 S TIUY=$$STOTIU^DGPFAPI2(DFN,ASSGNDA,ACTIEN,TIUIEN)
"RTN","TIUPRF2",112,0)
 Q
"RTN","TIUPRF2",113,0)
GETSTAT(TIUY,TIUIEN) ;RPC Gets the status of TIU Doc TIUIEN
"RTN","TIUPRF2",114,0)
 ;Returns STATIEN^STATNAME
"RTN","TIUPRF2",115,0)
 N TIUTTL
"RTN","TIUPRF2",116,0)
 S TIUTTL=+$G(^TIU(8925,TIUIEN,0))
"RTN","TIUPRF2",117,0)
 I 'TIUTTL S TIUY="0^Document does not exist" Q
"RTN","TIUPRF2",118,0)
 S TIUY=$P(^TIU(8925,TIUIEN,0),U,5)
"RTN","TIUPRF2",119,0)
 S TIUY=TIUY_U_$P($G(^TIU(8925.6,TIUY,0)),U,1)
"RTN","TIUPRF2",120,0)
 Q
"RTN","TIUPRF2",121,0)
ISPRFTTL(TIUY,TIUDA) ;RPC Takes as input 8925.1 IEN
"RTN","TIUPRF2",122,0)
 ; and checks if it is a PRF title
"RTN","TIUPRF2",123,0)
 ; Cf ISPFTTL^TIUPRFL. which is a FUNCTION
"RTN","TIUPRF2",124,0)
 N TIUCAT1,TIUCAT2,TIUD1
"RTN","TIUPRF2",125,0)
 S TIUY=0,TIUD1=""
"RTN","TIUPRF2",126,0)
 S TIUCAT1=+$$DDEFIEN^TIUFLF7("PATIENT RECORD FLAG CAT I","DC")
"RTN","TIUPRF2",127,0)
 S TIUCAT2=+$$DDEFIEN^TIUFLF7("PATIENT RECORD FLAG CAT II","DC")
"RTN","TIUPRF2",128,0)
 S TIUD1=$O(^TIU(8925.1,"AD",TIUDA,TIUD1))
"RTN","TIUPRF2",129,0)
 I TIUD1=TIUCAT1!(TIUD1=TIUCAT2) S TIUY=1
"RTN","TIUPRF2",130,0)
 Q
"RTN","TIUPRF3")
0^18^B1863909
"RTN","TIUPRF3",1,0)
TIUPRF3 ; SLC/JMH - More Modules for Patient Record Flags ; 4/18/05
"RTN","TIUPRF3",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**184**;Jun 20, 1997
"RTN","TIUPRF3",3,0)
 ;
"RTN","TIUPRF3",4,0)
LKDETAIL(TIUDA,TIUL) ; Add note's PRF LINK info to Detail Disp array TIUL
"RTN","TIUPRF3",5,0)
 N TIUTTL,FLAGNM,LINE,TIULINK
"RTN","TIUPRF3",6,0)
 N HASFLAG
"RTN","TIUPRF3",7,0)
 S TIUL=TIUL+1 D BLANK^TIUSRV(TIUL) S TIUL=TIUL+1
"RTN","TIUPRF3",8,0)
 D SET^TIUSRV(TIUL,1,"Linked PRF Action ",$G(IORVON),$G(IORVOFF))
"RTN","TIUPRF3",9,0)
 S TIUTTL=$P(^TIU(8925,TIUDA,0),U),HASFLAG=1
"RTN","TIUPRF3",10,0)
 S LINE="Flag:  "
"RTN","TIUPRF3",11,0)
 S FLAGNM=$$FNDFLAG^TIUPRFL(TIUTTL)
"RTN","TIUPRF3",12,0)
 I 'FLAGNM S FLAGNM="This PRF Note Title is not associated with a Flag.",HASFLAG=0
"RTN","TIUPRF3",13,0)
 I HASFLAG S FLAGNM=$P(FLAGNM,U,2)
"RTN","TIUPRF3",14,0)
 S LINE=LINE_FLAGNM
"RTN","TIUPRF3",15,0)
 S TIUL=TIUL+1
"RTN","TIUPRF3",16,0)
 D SET^TIUSRV(TIUL,13,"Flag: "_FLAGNM) Q:'HASFLAG
"RTN","TIUPRF3",17,0)
 S LINE="Flag Action: "
"RTN","TIUPRF3",18,0)
 S TIULINK=$$GETLINK^DGPFAPI1(TIUDA)
"RTN","TIUPRF3",19,0)
 I 'TIULINK S LINE=LINE_"Note not linked." D SET^TIUSRV(TIUL+1,6,LINE) S TIUL=TIUL+1 Q
"RTN","TIUPRF3",20,0)
 S LINE=LINE_$$CFLDACT^TIUPRFL(TIUDA)
"RTN","TIUPRF3",21,0)
 D SET^TIUSRV(TIUL+1,6,LINE)
"RTN","TIUPRF3",22,0)
 S TIUL=TIUL+1
"RTN","TIUPRF3",23,0)
 Q
"RTN","TIUPRFL")
0^19^B24295402
"RTN","TIUPRFL",1,0)
TIUPRFL ; SLC/JMH - Library Functions for Patient Record Flags ;1/26/06
"RTN","TIUPRFL",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**184**;Jun 20, 1997
"RTN","TIUPRFL",3,0)
 ;
"RTN","TIUPRFL",4,0)
 ;External References
"RTN","TIUPRFL",5,0)
 ;IA #4383
"RTN","TIUPRFL",6,0)
 ;$$FNDTITLE^DGPFAPI1
"RTN","TIUPRFL",7,0)
 ;$$GETHTIU^DGPFAPI1
"RTN","TIUPRFL",8,0)
 ;$$GETLINK^DGPFAPI1
"RTN","TIUPRFL",9,0)
AVAILACT(ARRAYNM,LINKBL,UNLINKBL,ONEIEN) ;Returns the # of unlinked,
"RTN","TIUPRFL",10,0)
 ;linkable actions.
"RTN","TIUPRFL",11,0)
 ; Note: Entered in Error (EIE) actions are not linkable,
"RTN","TIUPRFL",12,0)
 ;nor actions taken BEFORE an EIE action.
"RTN","TIUPRFL",13,0)
 ; ARRAYNM - Requires that $$GETHTIU^DGPFAPI1(DFN,TIUTTL,ARRAYNM)
"RTN","TIUPRFL",14,0)
 ;           has just been called for given flag title
"RTN","TIUPRFL",15,0)
 ;           and given patient.
"RTN","TIUPRFL",16,0)
 ; LINKBL - optional, passed by ref, returns
"RTN","TIUPRFL",17,0)
 ;          # of linkable actions in array ARRAYNM
"RTN","TIUPRFL",18,0)
 ; UNLINKBL - optional array, passed by ref, returns
"RTN","TIUPRFL",19,0)
 ;    UNLINKBL - # of unlinkable actions in ARRAYNM
"RTN","TIUPRFL",20,0)
 ;    UNLINKBL(ActID)=1, for each unlinkable action,
"RTN","TIUPRFL",21,0)
 ;            where ActID is action subscript in ARRAYNM
"RTN","TIUPRFL",22,0)
 ; ONEIEN - optional, passed by ref, returns
"RTN","TIUPRFL",23,0)
 ;          the action IEN (NOT subscript) if there is
"RTN","TIUPRFL",24,0)
 ;          exactly one available action
"RTN","TIUPRFL",25,0)
 ; AVAIL - Return value of function, returns
"RTN","TIUPRFL",26,0)
 ;         # of unlinked, linkable actions in ARRAYNM
"RTN","TIUPRFL",27,0)
 N ACTID,AVAIL,HASERR,ACTIEN
"RTN","TIUPRFL",28,0)
 S (ACTID,AVAIL,ONEIEN,LINKBL,UNLINKBL)=0
"RTN","TIUPRFL",29,0)
 S HASERR=$$HASERR(ARRAYNM)
"RTN","TIUPRFL",30,0)
 F  S ACTID=$O(@ARRAYNM@("HISTORY",ACTID)) Q:'ACTID  D
"RTN","TIUPRFL",31,0)
 . ; -- Set UNLINKBL whether linked or not:
"RTN","TIUPRFL",32,0)
 . I ACTID=+HASERR S UNLINKBL(ACTID)=1,UNLINKBL=UNLINKBL+1 Q
"RTN","TIUPRFL",33,0)
 . I $G(HASERR),$$ISERR(ARRAYNM,ACTID,$P(HASERR,U,2)) S UNLINKBL(ACTID)=1,UNLINKBL=UNLINKBL+1 Q
"RTN","TIUPRFL",34,0)
 . ; -- If not unlinkable, set LINKBL & check if already linked:
"RTN","TIUPRFL",35,0)
 . S LINKBL=LINKBL+1
"RTN","TIUPRFL",36,0)
 . I $G(@ARRAYNM@("HISTORY",ACTID,"TIUIEN")) Q
"RTN","TIUPRFL",37,0)
 . S AVAIL=AVAIL+1
"RTN","TIUPRFL",38,0)
 . S ACTIEN=+$G(@ARRAYNM@("HISTORY",ACTID,"HISTIEN"))
"RTN","TIUPRFL",39,0)
 I AVAIL=1,$G(ACTIEN)>0 S ONEIEN=ACTIEN
"RTN","TIUPRFL",40,0)
 Q AVAIL
"RTN","TIUPRFL",41,0)
 ;
"RTN","TIUPRFL",42,0)
ISPFTTL(TITLEDA) ; FUNCTION returns 1 if TITLEDA
"RTN","TIUPRFL",43,0)
 ;is PRF Title, otherwise returns 0
"RTN","TIUPRFL",44,0)
 ;Note ISPFTTL is spelled with PF, NOT PRF
"RTN","TIUPRFL",45,0)
 ; Cf RPC ISPRFTTL^TIUPRF2  - spelled with PRF
"RTN","TIUPRFL",46,0)
 N TIUCAT1,TIUCAT2,TIUDADDA
"RTN","TIUPRFL",47,0)
 S TIUDADDA=""
"RTN","TIUPRFL",48,0)
 S TIUCAT1=+$$DDEFIEN^TIUFLF7("PATIENT RECORD FLAG CAT I","DC")
"RTN","TIUPRFL",49,0)
 S TIUCAT2=+$$DDEFIEN^TIUFLF7("PATIENT RECORD FLAG CAT II","DC")
"RTN","TIUPRFL",50,0)
 S TIUDADDA=$O(^TIU(8925.1,"AD",TITLEDA,TIUDADDA))
"RTN","TIUPRFL",51,0)
 I TIUDADDA=TIUCAT1!(TIUDADDA=TIUCAT2) Q 1
"RTN","TIUPRFL",52,0)
 Q 0
"RTN","TIUPRFL",53,0)
 ;
"RTN","TIUPRFL",54,0)
ISPFDC(DCLASSDA) ; FUNCTION returns 1 if DCLASSDA
"RTN","TIUPRFL",55,0)
 ;is PRF Document Class, otherwise returns 0
"RTN","TIUPRFL",56,0)
 ; Requires valid IEN in 8925.1
"RTN","TIUPRFL",57,0)
 N TIUCAT1,TIUCAT2
"RTN","TIUPRFL",58,0)
 S TIUCAT1=+$$DDEFIEN^TIUFLF7("PATIENT RECORD FLAG CAT I","DC")
"RTN","TIUPRFL",59,0)
 S TIUCAT2=+$$DDEFIEN^TIUFLF7("PATIENT RECORD FLAG CAT II","DC")
"RTN","TIUPRFL",60,0)
 I (DCLASSDA=TIUCAT1)!(DCLASSDA=TIUCAT2) Q 1
"RTN","TIUPRFL",61,0)
 Q 0
"RTN","TIUPRFL",62,0)
 ;
"RTN","TIUPRFL",63,0)
FNDACTIF(TIUDA) ;Find Action Info for Note TIUDA
"RTN","TIUPRFL",64,0)
 ;Returns AssignIEN^ActionIEN^ActionNumber or
"RTN","TIUPRFL",65,0)
 ;0^"error message" if not linked, where
"RTN","TIUPRFL",66,0)
 ; Action IEN is Assignment History IEN and
"RTN","TIUPRFL",67,0)
 ; Action ID is node from GETHTIU^DGPFAPI1 array
"RTN","TIUPRFL",68,0)
 ; Note: for Action IEN ONLY, use $$GETLINK^DGPFAPI1(TIUDA)
"RTN","TIUPRFL",69,0)
 N ACTID,TIUTTL,TIURET,DFN
"RTN","TIUPRFL",70,0)
 S ACTID=0,TIURET=0
"RTN","TIUPRFL",71,0)
 S DFN=$P($G(^TIU(8925,TIUDA,0)),U,2)
"RTN","TIUPRFL",72,0)
 S TIUTTL=+$G(^TIU(8925,TIUDA,0))
"RTN","TIUPRFL",73,0)
 S TIURET=$$GETHTIU^DGPFAPI1(DFN,TIUTTL,"^TMP(""TIUPRF"",$J)")
"RTN","TIUPRFL",74,0)
 I '+TIURET Q TIURET
"RTN","TIUPRFL",75,0)
 F  S ACTID=$O(^TMP("TIUPRF",$J,"HISTORY",ACTID)) Q:'ACTID  D
"RTN","TIUPRFL",76,0)
 . I +$G(^TMP("TIUPRF",$J,"HISTORY",ACTID,"TIUIEN"))=TIUDA D
"RTN","TIUPRFL",77,0)
 . . S TIURET=+^TMP("TIUPRF",$J,"ASSIGNIEN")_U_+^TMP("TIUPRF",$J,"HISTORY",ACTID,"HISTIEN")_U_ACTID
"RTN","TIUPRFL",78,0)
 K ^TMP("TIUPRF",$J)
"RTN","TIUPRFL",79,0)
 Q TIURET
"RTN","TIUPRFL",80,0)
 ;
"RTN","TIUPRFL",81,0)
FNDFLAG(TIUTITLE) ; Find Associated Flag IEN for Title
"RTN","TIUPRFL",82,0)
 ;Function returns VarPTRFlagIEN^FlagName or
"RTN","TIUPRFL",83,0)
 ;0^msg
"RTN","TIUPRFL",84,0)
 ;from Flag file 26.15 (National) or 26.11 (Local)
"RTN","TIUPRFL",85,0)
 ;Example: 1;DGPF(26.15,^BEHAVIORAL]
"RTN","TIUPRFL",86,0)
 I '$L($T(FNDTITLE^DGPFAPI1)) Q "?"
"RTN","TIUPRFL",87,0)
 Q $$FNDTITLE^DGPFAPI1(TIUTITLE)
"RTN","TIUPRFL",88,0)
 ;
"RTN","TIUPRFL",89,0)
CFLDFLAG(TIUTITLE) ; Code for computed field PRFFLAG in file 8925.1
"RTN","TIUPRFL",90,0)
 ; Returns FlagName from file 26.11 or 26.15 for flag associated
"RTN","TIUPRFL",91,0)
 ;with TIUTITLE
"RTN","TIUPRFL",92,0)
 ; Returns ? if no flag is assoc w/ title or flag cannot be found
"RTN","TIUPRFL",93,0)
 ; Returns NA if TIUTITLE is not a PRF title
"RTN","TIUPRFL",94,0)
 ; Requires TITTITLE = 8925.1 IEN
"RTN","TIUPRFL",95,0)
 N FLAGINFO
"RTN","TIUPRFL",96,0)
 I '$$ISPFTTL(TIUTITLE) Q "NA"
"RTN","TIUPRFL",97,0)
 S FLAGINFO=$$FNDFLAG(TIUTITLE)
"RTN","TIUPRFL",98,0)
 I 'FLAGINFO Q "?"
"RTN","TIUPRFL",99,0)
 Q $P(FLAGINFO,U,2)
"RTN","TIUPRFL",100,0)
 ;
"RTN","TIUPRFL",101,0)
CFLDACT(NOTEDA) ; Code for computed field PRF FLAG ACTION in file 8925
"RTN","TIUPRFL",102,0)
 ; Returns: Date of Linked Action[space]Name of Action
"RTN","TIUPRFL",103,0)
 ;for action NOTEDA is linked to.
"RTN","TIUPRFL",104,0)
 N TIUTTL,LINE,TIULINK,DFN,ACTINFO,TIUDG,ACTID,ACTDATE,ACTNAME,TIUNODE0
"RTN","TIUPRFL",105,0)
 S TIUNODE0=^TIU(8925,NOTEDA,0),TIUTTL=$P(TIUNODE0,U)
"RTN","TIUPRFL",106,0)
 S TIULINK=$$GETLINK^DGPFAPI1(NOTEDA)
"RTN","TIUPRFL",107,0)
 I 'TIULINK,'$$ISPFTTL(TIUTTL) Q "NA"
"RTN","TIUPRFL",108,0)
 I 'TIULINK Q "?"
"RTN","TIUPRFL",109,0)
 S DFN=$P(TIUNODE0,U,2)
"RTN","TIUPRFL",110,0)
 S ACTINFO=$$FNDACTIF^TIUPRFL(NOTEDA)
"RTN","TIUPRFL",111,0)
 S ACTID=+$P(ACTINFO,U,3)
"RTN","TIUPRFL",112,0)
 ; -- If not PRF note but has link by mistake, return ? instead of NA:
"RTN","TIUPRFL",113,0)
 I 'ACTID Q "?" ; Title not linked to flag
"RTN","TIUPRFL",114,0)
 S TIUDG=$$GETHTIU^DGPFAPI1(DFN,TIUTTL,"^TMP(""TIUPRF"",$J)")
"RTN","TIUPRFL",115,0)
 S ACTDATE=$P(^TMP("TIUPRF",$J,"HISTORY",ACTID,"DATETIME"),U)
"RTN","TIUPRFL",116,0)
 S ACTDATE=$$FMTE^XLFDT(ACTDATE,"2D")
"RTN","TIUPRFL",117,0)
 S ACTNAME=$P(^TMP("TIUPRF",$J,"HISTORY",ACTID,"ACTION"),U,2)
"RTN","TIUPRFL",118,0)
 S LINE=ACTDATE_" "_ACTNAME
"RTN","TIUPRFL",119,0)
 K ^TMP("TIUPRF",$J)
"RTN","TIUPRFL",120,0)
 Q LINE
"RTN","TIUPRFL",121,0)
 ;
"RTN","TIUPRFL",122,0)
ISERR(ARRAYNM,ACTID,REACTDTM) ; Is Flag Action erroneous?
"RTN","TIUPRFL",123,0)
 ; Actions that take place BEFORE an EIE action are ERRONEOUS
"RTN","TIUPRFL",124,0)
 ;An EIE action itself is NOT erroneous
"RTN","TIUPRFL",125,0)
 ; Should be called AFTER HASERR, & only if HASERR>0
"RTN","TIUPRFL",126,0)
 ; Returns: 1 if Action date/time of ACTID is strictly BEFORE
"RTN","TIUPRFL",127,0)
 ;            the Entered in Error date/time
"RTN","TIUPRFL",128,0)
 ;          0 if = or AFTER the Entered in Error date/time
"RTN","TIUPRFL",129,0)
 ;         -1^msg if error
"RTN","TIUPRFL",130,0)
 ; Requires that $$GETHTIU^DGPFAPI1(DFN,TIUTTL,ARRAYNM) has just been
"RTN","TIUPRFL",131,0)
 ;called, and array named ARRAYNM currently exists for title
"RTN","TIUPRFL",132,0)
 ;assoc w/ flag and for given patient.
"RTN","TIUPRFL",133,0)
 ;Requires ARRAYNM
"RTN","TIUPRFL",134,0)
 ;Requires ACTID - subscript preceding "ACTION" in above array
"RTN","TIUPRFL",135,0)
 ;Requires REACTDTM as set in HASERR.
"RTN","TIUPRFL",136,0)
 N ISERR,ACTDTM S ISERR=0
"RTN","TIUPRFL",137,0)
 S ACTDTM=$P($G(@ARRAYNM@("HISTORY",ACTID,"DATETIME")),U)
"RTN","TIUPRFL",138,0)
 I ACTDTM'>0 S ISERR="-1^Can't tell whether action is erroneous" G ISERRX
"RTN","TIUPRFL",139,0)
 I $G(REACTDTM)'>0 S ISERR="-1^Can't tell whether action is erroneous" G ISERRX
"RTN","TIUPRFL",140,0)
 I ACTDTM<REACTDTM S ISERR=1
"RTN","TIUPRFL",141,0)
ISERRX Q ISERR
"RTN","TIUPRFL",142,0)
 ;
"RTN","TIUPRFL",143,0)
HASERR(ARRAYNM) ; Function indicates that given flag assignmt
"RTN","TIUPRFL",144,0)
 ;for given patient has ERRONEOUS actions.
"RTN","TIUPRFL",145,0)
 ; ERRONEOUS ACTIONS: all actions taken BEFORE
"RTN","TIUPRFL",146,0)
 ;an ENTERED IN ERROR (EIE) action
"RTN","TIUPRFL",147,0)
 ; Note: HASERR is equivalent to Has an EIE Action (HASEIE):
"RTN","TIUPRFL",148,0)
 ;(HASERR implies HASEIE. and HASEIE implies HASERR since
"RTN","TIUPRFL",149,0)
 ;EIE action always has actions taken previously.)
"RTN","TIUPRFL",150,0)
 ; Returns: EIEActionID^EIEDateTime if flag assignmt has been
"RTN","TIUPRFL",151,0)
 ;            marked Entered in Error (EIE).  If there are multiple
"RTN","TIUPRFL",152,0)
 ;            EIE actions, returns the most RECENT.
"RTN","TIUPRFL",153,0)
 ;          0 if assignmt not marked EIE
"RTN","TIUPRFL",154,0)
 ;         -1^msg if error
"RTN","TIUPRFL",155,0)
 ; Actions and notes for Erroneous actions or EIE actions
"RTN","TIUPRFL",156,0)
 ;should not be displayed in OR/TIU flag-related displays.
"RTN","TIUPRFL",157,0)
 ; Requires that $$GETHTIU^DGPFAPI1(DFN,TIUTTL,ARRAYNM) has just been
"RTN","TIUPRFL",158,0)
 ;called, and array named ARRAYNM currently exists for title
"RTN","TIUPRFL",159,0)
 ;assoc w/ flag and for given patient.
"RTN","TIUPRFL",160,0)
 N ACTID,HASERR
"RTN","TIUPRFL",161,0)
 I '$D(@ARRAYNM@("HISTORY")) S HASERR="-1^Can't tell whether flag assignment has erroneous actions" G HASERRX
"RTN","TIUPRFL",162,0)
 S ACTID=1000000,HASERR=0
"RTN","TIUPRFL",163,0)
 F  S ACTID=$O(@ARRAYNM@("HISTORY",ACTID),-1) G:'+ACTID HASERRX D  G:HASERR HASERRX
"RTN","TIUPRFL",164,0)
 . I $P(@ARRAYNM@("HISTORY",ACTID,"ACTION"),U,2)="ENTERED IN ERROR" D
"RTN","TIUPRFL",165,0)
 . . S HASERR=ACTID_U_$P(@ARRAYNM@("HISTORY",ACTID,"DATETIME"),U)
"RTN","TIUPRFL",166,0)
HASERRX Q HASERR
"RTN","TIUPS184")
0^11^B2439016
"RTN","TIUPS184",1,0)
TIUPS184 ; SLC/JMH - Post-Install for Patient Record Flags II ;4/28/05
"RTN","TIUPS184",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**184**;Jun 20, 1997
"RTN","TIUPS184",3,0)
POST ;
"RTN","TIUPS184",4,0)
 N TIUCAT1,TIUCAT2
"RTN","TIUPS184",5,0)
 S TIUCAT1=+$$DDEFIEN^TIUFLF7("PATIENT RECORD FLAG CAT I","DC")
"RTN","TIUPS184",6,0)
 S TIUCAT2=+$$DDEFIEN^TIUFLF7("PATIENT RECORD FLAG CAT II","DC")
"RTN","TIUPS184",7,0)
 I +$G(TIUCAT1) D
"RTN","TIUPS184",8,0)
 . S ^TIU(8925.1,TIUCAT1,4)="D LOOKUP^TIUPUTPF"
"RTN","TIUPS184",9,0)
 . S ^TIU(8925.1,TIUCAT1,4.4)="D UNLINK^TIUPRF1(TIUDA)"
"RTN","TIUPS184",10,0)
 . S ^TIU(8925.1,TIUCAT1,4.45)="D CHANGE^TIUPRF1(TIUDA)"
"RTN","TIUPS184",11,0)
 . S ^TIU(8925.1,TIUCAT1,4.5)="D FOLLOWUP^TIUPUTPF(TIUREC(""#""))"
"RTN","TIUPS184",12,0)
 . S ^TIU(8925.1,TIUCAT1,4.8)="D PFFIX^TIUPFFIX"
"RTN","TIUPS184",13,0)
 . S ^TIU(8925.1,TIUCAT1,5)="[TIU ENTER/EDIT PRF]"
"RTN","TIUPS184",14,0)
 . S ^TIU(8925.1,TIUCAT1,6.51)="D UNLINK^TIUPRF1(TIUDA)"
"RTN","TIUPS184",15,0)
 I +$G(TIUCAT2) D
"RTN","TIUPS184",16,0)
 . S ^TIU(8925.1,TIUCAT2,4)="D LOOKUP^TIUPUTPF"
"RTN","TIUPS184",17,0)
 . S ^TIU(8925.1,TIUCAT2,4.4)="D UNLINK^TIUPRF1(TIUDA)"
"RTN","TIUPS184",18,0)
 . S ^TIU(8925.1,TIUCAT2,4.45)="D CHANGE^TIUPRF1(TIUDA)"
"RTN","TIUPS184",19,0)
 . S ^TIU(8925.1,TIUCAT2,4.5)="D FOLLOWUP^TIUPUTPF(TIUREC(""#""))"
"RTN","TIUPS184",20,0)
 . S ^TIU(8925.1,TIUCAT2,4.8)="D PFFIX^TIUPFFIX"
"RTN","TIUPS184",21,0)
 . S ^TIU(8925.1,TIUCAT2,5)="[TIU ENTER/EDIT PRF]"
"RTN","TIUPS184",22,0)
 . S ^TIU(8925.1,TIUCAT2,6.51)="D UNLINK^TIUPRF1(TIUDA)"
"RTN","TIUPS184",23,0)
 Q
"RTN","TIUPUTC")
0^25^B30729125
"RTN","TIUPUTC",1,0)
TIUPUTC ; SLC/JER - Document filer - captioned header ;5/20/05
"RTN","TIUPUTC",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**3,21,81,100,113,112,173,184**;Jun 20, 1997
"RTN","TIUPUTC",3,0)
 ;
"RTN","TIUPUTC",4,0)
MAIN ; ---- Controls branching.
"RTN","TIUPUTC",5,0)
 ;      Attempts to file upload documents in the target file.
"RTN","TIUPUTC",6,0)
 ;      Requires DA = IEN of 8925.2 upload buffer entry.
"RTN","TIUPUTC",7,0)
 N TIUDA,TIUBGN,TIUI,TIUHSIG,TIULIM,TIULCNT,TIULINE,TIUREC,TIUPOST
"RTN","TIUPUTC",8,0)
 N TIUTYPE,TIUINST K ^TMP("TIUPUTC",$J)
"RTN","TIUPUTC",9,0)
 I '$D(TIUPRM0)!'$D(TIUPRM1) D SETPARM^TIULE
"RTN","TIUPUTC",10,0)
 S TIUHSIG=$P(TIUPRM0,U,10),TIUBGN=$P(TIUPRM0,U,12)
"RTN","TIUPUTC",11,0)
 I TIUHSIG']"" D MAIN^TIUPEVNT(DA,1,1) Q
"RTN","TIUPUTC",12,0)
 I TIUBGN']"" D MAIN^TIUPEVNT(DA,1,7) Q
"RTN","TIUPUTC",13,0)
 ; ---- Strip controls when kermit:
"RTN","TIUPUTC",14,0)
 I $P(TIUPRM0,U,17)="k" D PREPROC(DA)
"RTN","TIUPUTC",15,0)
 S TIUI=0 F  S TIUI=$O(^TIU(8925.2,+DA,"TEXT",TIUI)) Q:+TIUI'>0  D
"RTN","TIUPUTC",16,0)
 . S TIULINE=$G(^TIU(8925.2,+DA,"TEXT",TIUI,0))
"RTN","TIUPUTC",17,0)
 . I TIULINE[TIUHSIG D  Q
"RTN","TIUPUTC",18,0)
 . . ; ---- Hdr signal line.  GETREC^TIUPUTC1 resets TIUI to $TXT line:
"RTN","TIUPUTC",19,0)
 . . N TIUHDR,TIUFRST,TIUJ S TIUFRST=TIUI
"RTN","TIUPUTC",20,0)
 . . ; ---- If after first hdr signal, finish previous docmt
"RTN","TIUPUTC",21,0)
 . . ;      before going on w/ current docmt:
"RTN","TIUPUTC",22,0)
 . . I +$G(TIULCNT),$D(TIUREC("TROOT")),$D(@(TIUREC("TROOT")_"0)")) D FINISH
"RTN","TIUPUTC",23,0)
 . . K TIUREC D GETREC^TIUPUTC1(TIULINE,.TIUREC,.TIUHDR)
"RTN","TIUPUTC",24,0)
 . . I +$G(TIUREC("#"))'>0!($G(TIUREC("ROOT"))']"") Q
"RTN","TIUPUTC",25,0)
 . . D STUFREC(.TIUHDR,.TIUREC)
"RTN","TIUPUTC",26,0)
 . . S TIUREC("TROOT")=TIUREC("ROOT")_TIUREC("#")_","_TIUREC("TEXT")_","
"RTN","TIUPUTC",27,0)
 . . S:'$D(@(TIUREC("TROOT")_"0)")) @(TIUREC("TROOT")_"0)")="^^^^^"
"RTN","TIUPUTC",28,0)
 . . S TIULCNT=+$P(@(TIUREC("TROOT")_"0)"),U,4)
"RTN","TIUPUTC",29,0)
 . . F TIUJ=TIUFRST:1:TIUI D
"RTN","TIUPUTC",30,0)
 . . . ; ---- Delete header lines from buffer once filed;
"RTN","TIUPUTC",31,0)
 . . . ;      (TIUI was reset in GETREC^TIUPUTC1 to $TXT line):
"RTN","TIUPUTC",32,0)
 . . . K ^TIU(8925.2,+DA,"TEXT",TIUJ,0)
"RTN","TIUPUTC",33,0)
 . . I TIUREC("FILE")=8925,+$G(TIUREC("#")),+$G(TIUREC("BOILON")) D BOILRPLT(.TIUREC)
"RTN","TIUPUTC",34,0)
 . I TIULINE'[TIUHSIG,(TIULINE'[TIUBGN),(+$G(TIUREC("FILE"))=8925),+$G(TIUREC("BOILON")) D
"RTN","TIUPUTC",35,0)
 . . I TIULINE]"",$D(^TIU(8925.1,"B",$P(TIULINE,":"))) D  I 1
"RTN","TIUPUTC",36,0)
 . . . S TIULCNT=$$LOCATE(TIULINE,TIUREC("#"))
"RTN","TIUPUTC",37,0)
 . . E  S TIULCNT=+$G(TIULCNT)+.01
"RTN","TIUPUTC",38,0)
 . . S ^TIU(8925,+TIUREC("#"),"TEMP",TIULCNT,0)=TIULINE
"RTN","TIUPUTC",39,0)
 . . ; ---- Delete text line from buffer once xferred:
"RTN","TIUPUTC",40,0)
 . . K ^TIU(8925.2,+DA,"TEXT",TIUI,0)
"RTN","TIUPUTC",41,0)
 . I TIULINE'[TIUHSIG,(TIULINE'[TIUBGN),$D(TIUREC("TROOT")),$D(@(TIUREC("TROOT")_"0)")),(+$G(TIUREC("BOILON"))'>0) D
"RTN","TIUPUTC",42,0)
 . . S TIULCNT=+$G(TIULCNT)+1,@(TIUREC("TROOT")_TIULCNT_",0)")=TIULINE
"RTN","TIUPUTC",43,0)
 . . ; ---- Delete text line once xferred:
"RTN","TIUPUTC",44,0)
 . . K ^TIU(8925.2,+DA,"TEXT",TIUI,0)
"RTN","TIUPUTC",45,0)
 . . ; ---- Remove leading buffer garbage
"RTN","TIUPUTC",46,0)
 . I TIULINE'[TIUHSIG,(TIULINE'[TIUBGN),'$D(TIUREC("TROOT")),($G(TIUREC("#"))'=-1) K ^TIU(8925.2,+DA,"TEXT",TIUI,0)
"RTN","TIUPUTC",47,0)
 . I TIULINE[TIUBGN K ^TIU(8925.2,+DA,"TEXT",TIUI,0)
"RTN","TIUPUTC",48,0)
 ; ---- Finish last docmt in buffer file:
"RTN","TIUPUTC",49,0)
 I +$G(TIULCNT),$D(TIUREC("TROOT")),$D(@(TIUREC("TROOT")_"0)")) D FINISH
"RTN","TIUPUTC",50,0)
 I '+$O(^TIU(8925.2,+DA,"TEXT",0)) D BUFPURGE(DA)
"RTN","TIUPUTC",51,0)
 ; ---- Write upload results:
"RTN","TIUPUTC",52,0)
 I '$D(ZTQUEUED),$D(^TMP("TIUPUTC",$J)) D
"RTN","TIUPUTC",53,0)
 . W !!,"TOTALS FOR CURRENT BATCH:",!
"RTN","TIUPUTC",54,0)
 . W !?14,"TOTAL Document(s) RECEIVED: ",$J((+$G(^TMP("TIUPUTC",$J,"SUCC"))+$G(^("MISS"))+$G(^("FAIL"))),5),!
"RTN","TIUPUTC",55,0)
 . W !?18," Document(s) NOT FILED: ",$J(+$G(^TMP("TIUPUTC",$J,"FAIL")),5)
"RTN","TIUPUTC",56,0)
 . W !?3,"Document(s) FILED with MISSING FIELDS: ",$J(+$G(^TMP("TIUPUTC",$J,"MISS")),5),!
"RTN","TIUPUTC",57,0)
 K ^TMP("TIUPUTC",$J)
"RTN","TIUPUTC",58,0)
 Q
"RTN","TIUPUTC",59,0)
LOCATE(LINE,REC) ; ---- Locate line in boilerplate text
"RTN","TIUPUTC",60,0)
 N TIUJ,HIT,BTXT S (TIUJ,HIT)=0
"RTN","TIUPUTC",61,0)
 F  Q:+HIT  S TIUJ=$O(^TIU(8925,+REC,"TEMP",TIUJ)) Q:+TIUJ'>0!HIT  D
"RTN","TIUPUTC",62,0)
 . S BTXT=$G(^TIU(8925,+REC,"TEMP",TIUJ,0))
"RTN","TIUPUTC",63,0)
 . I BTXT[$P(LINE,":")_":" S HIT=1
"RTN","TIUPUTC",64,0)
 Q +$G(TIUJ)
"RTN","TIUPUTC",65,0)
 ;
"RTN","TIUPUTC",66,0)
STUFREC(HEADER,RECORD) ; ---- Stuffs record with known fixed fields;
"RTN","TIUPUTC",67,0)
 ;                      Checks for missing fields.
"RTN","TIUPUTC",68,0)
 N FDA,FDARR,IENS,FLAGS,TIUI,TIUMSG,TIUPC
"RTN","TIUPUTC",69,0)
 S IENS=""""_+RECORD("#")_","""
"RTN","TIUPUTC",70,0)
 S FDARR="FDA("_+RECORD("FILE")_","_IENS_")",FLAGS="KE"
"RTN","TIUPUTC",71,0)
 ; ---- Set up FDA Array:
"RTN","TIUPUTC",72,0)
 S TIUI=0
"RTN","TIUPUTC",73,0)
 F  S TIUI=$O(HEADER(TIUI)) Q:+TIUI'>0  D
"RTN","TIUPUTC",74,0)
 . ; if field is Author/Dictator and title is OPERATION REPORT, ignore uploaded data *173
"RTN","TIUPUTC",75,0)
 . I (TIUI=1202!(TIUI=1209)),TIUREC("TYPE")=$$CHKFILE^TIUADCL(8925.1,"OPERATION REPORT","I $P(^(0),U,4)=""DOC""") S @FDARR@(1303)="U" Q
"RTN","TIUPUTC",76,0)
 . S:TIUI'=.001 @FDARR@(TIUI)=$$TRNSFRM^TIULX(.RECORD,TIUI,HEADER(TIUI))
"RTN","TIUPUTC",77,0)
 I $D(FDA) D FILE^DIE(FLAGS,"FDA","TIUMSG")
"RTN","TIUPUTC",78,0)
 I $D(TIUMSG) D
"RTN","TIUPUTC",79,0)
 . ; ---- If FILE^DIC fails, log 8925.4 error w/ hdr info.  Create new
"RTN","TIUPUTC",80,0)
 . ;      8925.2 buffer entry with hdr, text, & 8925.4 log #.
"RTN","TIUPUTC",81,0)
 . ;      Kill most of old buffer. Send missing field alerts:
"RTN","TIUPUTC",82,0)
 . D MAIN^TIUPEVNT(DA,2,"",$P($G(^TIU(8925.1,+RECORD("TYPE"),0)),U),.FDA,.TIUMSG)
"RTN","TIUPUTC",83,0)
 . S ^TMP("TIUPUTC",$J,"MISS")=+$G(^TMP("TIUPUTC",$J,"MISS"))+1
"RTN","TIUPUTC",84,0)
 I '$D(TIUMSG) D
"RTN","TIUPUTC",85,0)
 . S ^TMP("TIUPUTC",$J,"SUCC")=+$G(^TMP("TIUPUTC",$J,"SUCC"))+1
"RTN","TIUPUTC",86,0)
 Q
"RTN","TIUPUTC",87,0)
BOILRPLT(TIUREC) ; ---- Execute/Interleave Boilerplates w/uploaded text
"RTN","TIUPUTC",88,0)
 N TIU
"RTN","TIUPUTC",89,0)
 D GETTIU^TIULD(.TIU,TIUREC("#"))
"RTN","TIUPUTC",90,0)
 D LOADDFLT^TIUEDI4(TIUREC("#"),TIUREC("TYPE")) ;100
"RTN","TIUPUTC",91,0)
 Q
"RTN","TIUPUTC",92,0)
SETROOT(LINECNT,RECORD) ; ---- Sets root of WP field
"RTN","TIUPUTC",93,0)
 S @(RECORD("TROOT")_"0)")="^^"_LINECNT_"^"_LINECNT_"^"_DT_"^^"
"RTN","TIUPUTC",94,0)
 Q
"RTN","TIUPUTC",95,0)
BUFPURGE(DA) ; ---- Call ^DIK to purge buffer record when all's well
"RTN","TIUPUTC",96,0)
 N DIK S DIK="^TIU(8925.2," D ^DIK
"RTN","TIUPUTC",97,0)
 Q
"RTN","TIUPUTC",98,0)
PREPROC(DA) ; ---- Strip controls & white space from headers
"RTN","TIUPUTC",99,0)
 N TIUI,TIUHLIN,X S (TIUI,TIUHLIN)=0
"RTN","TIUPUTC",100,0)
 F  S TIUI=$O(^TIU(8925.2,+DA,"TEXT",TIUI)) Q:+TIUI'>0  D
"RTN","TIUPUTC",101,0)
 . S X=$G(^TIU(8925.2,+DA,"TEXT",TIUI,0))
"RTN","TIUPUTC",102,0)
 . S:X[TIUHSIG TIUHLIN=1 S:X[TIUBGN TIUHLIN=0
"RTN","TIUPUTC",103,0)
 . S:TIUHLIN ^TIU(8925.2,+DA,"TEXT",TIUI,0)=$$STRIP^TIUUPLD(X)
"RTN","TIUPUTC",104,0)
 Q
"RTN","TIUPUTC",105,0)
DADTYPE(DA) ; ---- Get type of original document for addenda
"RTN","TIUPUTC",106,0)
 N TIUDAD,Y
"RTN","TIUPUTC",107,0)
 S TIUDAD=$P($G(^TIU(8925,DA,0)),U,6)
"RTN","TIUPUTC",108,0)
 S Y=+$G(^TIU(8925,+TIUDAD,0))
"RTN","TIUPUTC",109,0)
 Q Y
"RTN","TIUPUTC",110,0)
 ;
"RTN","TIUPUTC",111,0)
FINISH ; ---- Finish document: feedback, postfile code, merge boil,
"RTN","TIUPUTC",112,0)
 ;      log file event
"RTN","TIUPUTC",113,0)
 N ISADDNDM S ISADDNDM=0
"RTN","TIUPUTC",114,0)
 D SETROOT(TIULCNT,.TIUREC)
"RTN","TIUPUTC",115,0)
 S ISADDNDM=+$$ISADDNDM^TIULC1(TIUREC("#"))
"RTN","TIUPUTC",116,0)
 S TIUTYPE=$S(ISADDNDM:+$$DADTYPE(TIUREC("#")),1:TIUREC("TYPE"))
"RTN","TIUPUTC",117,0)
 I '$D(ZTQUEUED) W !,">>> ",$S(ISADDNDM:"Addendum",1:"Document")," Filed Successfully.",! ;TIU*1*81
"RTN","TIUPUTC",118,0)
 ; ---- TIU*1*81 Tell error handler that retrying filer was successful:
"RTN","TIUPUTC",119,0)
 S TIUDONE=1
"RTN","TIUPUTC",120,0)
 S TIUTYPE=$S(+$$ISADDNDM^TIULC1(TIUREC("#")):+$$DADTYPE(TIUREC("#")),1:TIUREC("TYPE"))
"RTN","TIUPUTC",121,0)
 S TIUPOST=$$POSTFILE^TIULC1(TIUTYPE)
"RTN","TIUPUTC",122,0)
 I TIUPOST]"" X TIUPOST K ^TMP("TIUPRFUP",$J)
"RTN","TIUPUTC",123,0)
 I TIUREC("FILE")=8925,+$G(TIUREC("BOILON")) D
"RTN","TIUPUTC",124,0)
 . N TIU D GETTIU^TIULD(.TIU,TIUREC("#"))
"RTN","TIUPUTC",125,0)
 . D MERGTEXT^TIUEDI1(TIUREC("#"),.TIU)
"RTN","TIUPUTC",126,0)
 . K ^TIU(8925,+TIUREC("#"),"TEMP")
"RTN","TIUPUTC",127,0)
 D MAIN^TIUPEVNT(DA,0,"",$P($G(^TIU(8925.1,+TIUREC("TYPE"),0)),U))
"RTN","TIUPUTC",128,0)
 Q
"RTN","TIUPUTC",129,0)
 ;
"RTN","TIUPUTPF")
0^7^B35898028
"RTN","TIUPUTPF",1,0)
TIUPUTPF ; SLC/JER - PRF Look-up Method - ;10/9/05
"RTN","TIUPUTPF",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**184**;Jun 20, 1997
"RTN","TIUPUTPF",3,0)
 ; COPIED FROM TIUPUTPN AND THEN EDITED
"RTN","TIUPUTPF",4,0)
LOOKUP ; Look-up code used by router/filer
"RTN","TIUPUTPF",5,0)
 ; Required: TIUSSN, TIUVDT
"RTN","TIUPUTPF",6,0)
 ; -- Selected flag action is set in LOOKUP & in GETCHECK^TIUPFFIX;
"RTN","TIUPUTPF",7,0)
 ;    Action is used in post-file code to link note.
"RTN","TIUPUTPF",8,0)
 ;    Kill it before setting it:
"RTN","TIUPUTPF",9,0)
 K ^TMP("TIUPRFUP",$J)
"RTN","TIUPUTPF",10,0)
 N DA,DFN,TIU,TIUDAD,TIUEDIT,TIUEDT,TIULDT,TIUXCRP,TIUTYPE
"RTN","TIUPUTPF",11,0)
 N TIUNEW,TIUEXIST,TIUDPRM,TIUASACT
"RTN","TIUPUTPF",12,0)
 S TIUEXIST=1
"RTN","TIUPUTPF",13,0)
 I $S('$D(TIUSSN):1,'$D(TIUVDT):1,$G(TIUSSN)?4N:1,$G(TIUSSN)']"":1,1:0) S Y=-1 G LOOKUPX
"RTN","TIUPUTPF",14,0)
 I TIUSSN?3N1P2N1P4N.E S TIUSSN=$TR(TIUSSN,"-/","")
"RTN","TIUPUTPF",15,0)
 I TIUSSN["?" S Y=-1 G LOOKUPX
"RTN","TIUPUTPF",16,0)
 S TIULOC=+$$ILOC(TIULOC)
"RTN","TIUPUTPF",17,0)
 I '$D(^SC(+$G(TIULOC),0)) S Y=-1 G LOOKUPX
"RTN","TIUPUTPF",18,0)
 S TIUINST=+$$DIVISION^TIULC1(TIULOC)
"RTN","TIUPUTPF",19,0)
 S TIUEDT=$$IDATE^TIULC(TIUVDT),TIULDT=$$FMADD^XLFDT(TIUEDT,1)
"RTN","TIUPUTPF",20,0)
 I +TIUEDT'>0 S Y=-1 Q
"RTN","TIUPUTPF",21,0)
 S TIUTYPE=$$WHATITLE(TIUTITLE)
"RTN","TIUPUTPF",22,0)
 I +TIUTYPE'>0 S Y=-1 Q
"RTN","TIUPUTPF",23,0)
 ; -- Abort upload if title is not a PRF title:
"RTN","TIUPUTPF",24,0)
 I '$$ISPFTTL^TIUPRFL(+TIUTYPE) S Y=-1 Q
"RTN","TIUPUTPF",25,0)
 D DOCPRM^TIULC1(+TIUTYPE,.TIUDPRM)
"RTN","TIUPUTPF",26,0)
 I $P($G(^SC(+TIULOC,0)),U,3)="W" D  I 1
"RTN","TIUPUTPF",27,0)
 . D MAIN^TIUMOVE(.TIU,.DFN,TIUSSN,TIUEDT,TIULDT,1,"LAST",0,TIULOC)
"RTN","TIUPUTPF",28,0)
 E  D MAIN^TIUVSIT(.TIU,.DFN,TIUSSN,TIUEDT,TIULDT,"LAST",0,TIULOC)
"RTN","TIUPUTPF",29,0)
 I $S($D(TIU)'>9:1,+$G(DFN)'>0:1,1:0) S Y=-1 G LOOKUPX
"RTN","TIUPUTPF",30,0)
 I $P(+$G(TIU("EDT")),".")'=$P($$IDATE^TIULC(TIUVDT),".") S Y=-1 G LOOKUPX
"RTN","TIUPUTPF",31,0)
 I '+$$EXIST^TIUEDI3(DFN,+TIUTYPE,TIU("VSTR"),1,DUZ) S TIUEXIST=0 D
"RTN","TIUPUTPF",32,0)
 . ; -- If refiling after filing error, get flag assignment^action
"RTN","TIUPUTPF",33,0)
 . ;    from user:
"RTN","TIUPUTPF",34,0)
 . I $G(PRFILERR) S TIUASACT=$$SELECT^TIUPRF1(+TIUTYPE,DFN)
"RTN","TIUPUTPF",35,0)
 . ; -- If not, try for one available action:
"RTN","TIUPUTPF",36,0)
 . I '$G(PRFILERR) K ^TMP("TIUPRF",$J) S TIUASACT=$$ONEACT(DFN,+TIUTYPE) K ^TMP("TIUPRF",$J)
"RTN","TIUPUTPF",37,0)
 . I TIUASACT S ^TMP("TIUPRFUP",$J)=TIUASACT
"RTN","TIUPUTPF",38,0)
 I 'TIUEXIST,'$G(^TMP("TIUPRFUP",$J)) S Y=-1 G LOOKUPX
"RTN","TIUPUTPF",39,0)
 S TIUTYP(1)=1_U_TIUTYPE_U_$$PNAME^TIULC1(TIUTYPE)
"RTN","TIUPUTPF",40,0)
 S Y=$$GETRECNW^TIUEDI3(DFN,.TIU,TIUTYP(1),.TIUNEW,.TIUDPRM)
"RTN","TIUPUTPF",41,0)
 I +Y'>0 G LOOKUPX
"RTN","TIUPUTPF",42,0)
 ; If record is not new, has text and can be edited, then replace
"RTN","TIUPUTPF",43,0)
 ; existing text
"RTN","TIUPUTPF",44,0)
 I +$G(TIUNEW)'>0 D
"RTN","TIUPUTPF",45,0)
 . S TIUEDIT=$$CANEDIT(+Y)
"RTN","TIUPUTPF",46,0)
 . I +TIUEDIT>0,$D(^TIU(8925,+Y,"TEXT")) D DELTEXT(+Y)
"RTN","TIUPUTPF",47,0)
 . I +TIUEDIT'>0 S TIUDAD=+Y,Y=$$MAKEADD
"RTN","TIUPUTPF",48,0)
 I +Y'>0 Q
"RTN","TIUPUTPF",49,0)
 D STUFREC(Y,+$G(TIUDAD))
"RTN","TIUPUTPF",50,0)
 I +$G(TIUDAD) D SENDADD^TIUALRT(+Y)
"RTN","TIUPUTPF",51,0)
 K TIUHDR(.01),TIUHDR(.07),TIUHDR(1301)
"RTN","TIUPUTPF",52,0)
LOOKUPX Q
"RTN","TIUPUTPF",53,0)
 ;
"RTN","TIUPUTPF",54,0)
ONEACT(DFN,TIUTYPE) ; If there is exactly one Assigment History Action
"RTN","TIUPUTPF",55,0)
 ; available for pat DFN & Title TIUTYPE, return ASSGNIEN^ACTIEN;
"RTN","TIUPUTPF",56,0)
 ; else return 0
"RTN","TIUPUTPF",57,0)
 ;Count only unlinked, linkable actions
"RTN","TIUPUTPF",58,0)
 ;An action is LINKABLE if it is not ENTERED IN ERROR (EIE) and
"RTN","TIUPUTPF",59,0)
 ; is not taken prior to an EIE action.
"RTN","TIUPUTPF",60,0)
 N TIUDG,TIUASSGN,ONEIEN,RESULT,ARRAYNM
"RTN","TIUPUTPF",61,0)
 S RESULT=0,ARRAYNM="^TMP(""TIUPRFH"",$J)"
"RTN","TIUPUTPF",62,0)
 S TIUDG=$$GETHTIU^DGPFAPI1(DFN,+TIUTYPE,ARRAYNM)
"RTN","TIUPUTPF",63,0)
 I 'TIUDG G ONEACTX
"RTN","TIUPUTPF",64,0)
 S TIUASSGN=+$G(@ARRAYNM@("ASSIGNIEN"))
"RTN","TIUPUTPF",65,0)
 I $$AVAILACT^TIUPRFL(ARRAYNM,,,.ONEIEN)=1 S RESULT=TIUASSGN_U_ONEIEN
"RTN","TIUPUTPF",66,0)
ONEACTX ;
"RTN","TIUPUTPF",67,0)
 K ^TMP("TIUPRFH",$J)
"RTN","TIUPUTPF",68,0)
 Q RESULT
"RTN","TIUPUTPF",69,0)
 ;
"RTN","TIUPUTPF",70,0)
ILOC(LOCATION) ; Get pointer to file 44
"RTN","TIUPUTPF",71,0)
 N DIC,X,Y
"RTN","TIUPUTPF",72,0)
 S DIC=44,DIC(0)="M",X=LOCATION D ^DIC
"RTN","TIUPUTPF",73,0)
 Q Y
"RTN","TIUPUTPF",74,0)
CANEDIT(DA) ; Check whether or not document is released
"RTN","TIUPUTPF",75,0)
 Q $S(+$P($G(^TIU(8925,+DA,0)),U,5)<4:1,1:0)
"RTN","TIUPUTPF",76,0)
MAKEADD() ; Create an addendum record
"RTN","TIUPUTPF",77,0)
 N DIE,DR,DA,DIC,X,Y,DLAYGO,TIUATYP,TIUFPRIV S TIUFPRIV=1
"RTN","TIUPUTPF",78,0)
 S TIUATYP=+$$WHATITLE("ADDENDUM")
"RTN","TIUPUTPF",79,0)
 S (DIC,DLAYGO)=8925,DIC(0)="L",X=""""_"`"_TIUATYP_""""
"RTN","TIUPUTPF",80,0)
 D ^DIC
"RTN","TIUPUTPF",81,0)
 S DA=+Y
"RTN","TIUPUTPF",82,0)
 I +DA>0 S DIE=DIC,DR=".04////"_$$DOCCLASS^TIULC1(TIUATYP) D ^DIE
"RTN","TIUPUTPF",83,0)
 K TIUHDR(.01)
"RTN","TIUPUTPF",84,0)
 Q +DA
"RTN","TIUPUTPF",85,0)
STUFREC(DA,PARENT) ; Stuff fixed field data
"RTN","TIUPUTPF",86,0)
 N FDA,FDARR,IENS,FLAGS,TIUMSG
"RTN","TIUPUTPF",87,0)
 S IENS=""""_DA_",""",FDARR="FDA(8925,"_IENS_")",FLAGS="K"
"RTN","TIUPUTPF",88,0)
 I +$G(PARENT)'>0 D
"RTN","TIUPUTPF",89,0)
 . S @FDARR@(.02)=$G(DFN),@FDARR@(.03)=$P($G(TIU("VISIT")),U)
"RTN","TIUPUTPF",90,0)
 . S @FDARR@(.05)=3
"RTN","TIUPUTPF",91,0)
 . S @FDARR@(.07)=$P($G(TIU("EDT")),U)
"RTN","TIUPUTPF",92,0)
 . S @FDARR@(.08)=$P($G(TIU("LDT")),U)
"RTN","TIUPUTPF",93,0)
 . S @FDARR@(1201)=$$NOW^TIULC
"RTN","TIUPUTPF",94,0)
 . S @FDARR@(1205)=$S(+$P($G(TIU("LOC")),U):$P($G(TIU("LOC")),U),1:$P($G(TIU("VLOC")),U))
"RTN","TIUPUTPF",95,0)
 . ;S @FDARR@(1211)=$P($G(TIU("VLOC")),U)
"RTN","TIUPUTPF",96,0)
 . S @FDARR@(1404)=$P($G(TIU("SVC")),U)
"RTN","TIUPUTPF",97,0)
 I +$G(PARENT)>0 D
"RTN","TIUPUTPF",98,0)
 . S @FDARR@(.02)=+$P($G(^TIU(8925,+PARENT,0)),U,2)
"RTN","TIUPUTPF",99,0)
 . S @FDARR@(.03)=+$P($G(^TIU(8925,+PARENT,0)),U,3),@FDARR@(.05)=3
"RTN","TIUPUTPF",100,0)
 . S @FDARR@(.06)=PARENT
"RTN","TIUPUTPF",101,0)
 . S @FDARR@(.07)=$P($G(^TIU(8925,+PARENT,0)),U,7)
"RTN","TIUPUTPF",102,0)
 . S @FDARR@(.08)=$P($G(^TIU(8925,+PARENT,0)),U,8)
"RTN","TIUPUTPF",103,0)
 . S @FDARR@(1205)=$P($G(^TIU(8925,+PARENT,12)),U,5)
"RTN","TIUPUTPF",104,0)
 . S @FDARR@(1404)=$P($G(^TIU(8925,+PARENT,14)),U,4)
"RTN","TIUPUTPF",105,0)
 . S @FDARR@(1201)=$$NOW^TIULC
"RTN","TIUPUTPF",106,0)
 S @FDARR@(1205)=$P($G(TIU("LOC")),U)
"RTN","TIUPUTPF",107,0)
 S @FDARR@(1212)=$P($G(TIU("INST")),U)
"RTN","TIUPUTPF",108,0)
 S @FDARR@(1301)=$S($G(TIUDDT)]"":$$IDATE^TIULC($G(TIUDDT)),1:"")
"RTN","TIUPUTPF",109,0)
 I $S(@FDARR@(1301)'>0:1,$P(@FDARR@(1301),".",2)']"":1,1:0) D
"RTN","TIUPUTPF",110,0)
 . S @FDARR@(1301)=$S($P($G(TIU("VSTR")),";",3)="H":$$NOW^XLFDT,1:$G(@FDARR@(.07)))
"RTN","TIUPUTPF",111,0)
 S @FDARR@(1303)="U"
"RTN","TIUPUTPF",112,0)
 D FILE^DIE(FLAGS,"FDA","TIUMSG") ; File record
"RTN","TIUPUTPF",113,0)
 Q
"RTN","TIUPUTPF",114,0)
DELTEXT(DA) ; Delete existing text in preparation for replacement
"RTN","TIUPUTPF",115,0)
 N DIE,DR,X,Y
"RTN","TIUPUTPF",116,0)
 S DIE=8925,DR="2///@" D ^DIE
"RTN","TIUPUTPF",117,0)
 Q
"RTN","TIUPUTPF",118,0)
WHATYPE(X) ; Identify document type
"RTN","TIUPUTPF",119,0)
 ; Receives: X=Document Definition Name
"RTN","TIUPUTPF",120,0)
 ;  Returns: Y=Document Definition IFN
"RTN","TIUPUTPF",121,0)
 N DIC,Y,TIUFPRIV S TIUFPRIV=1
"RTN","TIUPUTPF",122,0)
 S DIC=8925.1,DIC(0)="M"
"RTN","TIUPUTPF",123,0)
 S DIC("S")="I $D(^TIU(8925.1,+Y,""HEAD""))!$D(^TIU(8295.1,+Y,""ITEM""))"
"RTN","TIUPUTPF",124,0)
 D ^DIC K DIC("S")
"RTN","TIUPUTPF",125,0)
WHATYPX Q Y
"RTN","TIUPUTPF",126,0)
WHATITLE(X) ; Identify document title
"RTN","TIUPUTPF",127,0)
 ; Receives: X=Document Definition Name
"RTN","TIUPUTPF",128,0)
 ;  Returns: Y=Document Definition IFN
"RTN","TIUPUTPF",129,0)
 N DIC,Y,TIUFPRIV S TIUFPRIV=1
"RTN","TIUPUTPF",130,0)
 S DIC=8925.1,DIC(0)="M"
"RTN","TIUPUTPF",131,0)
 S DIC("S")="I $P(^TIU(8925.1,+Y,0),U,4)=""DOC"""
"RTN","TIUPUTPF",132,0)
 D ^DIC K DIC("S")
"RTN","TIUPUTPF",133,0)
WHATITX Q Y
"RTN","TIUPUTPF",134,0)
FOLLOWUP(TIUDA) ; Post-filing code for PRF
"RTN","TIUPUTPF",135,0)
 N FDA,FDARR,IENS,FLAGS,TIUMSG,TIU,DFN,TIUTEMP
"RTN","TIUPUTPF",136,0)
 S IENS=""""_TIUDA_",""",FDARR="FDA(8925,"_IENS_")",FLAGS="K"
"RTN","TIUPUTPF",137,0)
 S @FDARR@(1204)=$$WHOSIGNS^TIULC1(TIUDA)
"RTN","TIUPUTPF",138,0)
 I +$P($G(^TIU(8925,TIUDA,12)),U,9),'+$P($G(^(12)),U,8) D
"RTN","TIUPUTPF",139,0)
 . S @FDARR@(1208)=$$WHOCOSIG^TIULC1(TIUDA)
"RTN","TIUPUTPF",140,0)
 D FILE^DIE(FLAGS,"FDA","TIUMSG")
"RTN","TIUPUTPF",141,0)
 I +$P($G(^TIU(8925,+TIUDA,12)),U,8),(+$P($G(^TIU(8925,+TIUDA,12)),U,4)'=+$P($G(^(12)),U,8)) D
"RTN","TIUPUTPF",142,0)
 . S @FDARR@(1506)=1 D FILE^DIE(FLAGS,"FDA","TIUMSG")
"RTN","TIUPUTPF",143,0)
 D RELEASE^TIUT(TIUDA,1)
"RTN","TIUPUTPF",144,0)
 D AUDIT^TIUEDI1(TIUDA,0,$$CHKSUM^TIULC("^TIU(8925,"_+TIUDA_",""TEXT"")"))
"RTN","TIUPUTPF",145,0)
 I $G(^TMP("TIUPRFUP",$J)) D
"RTN","TIUPUTPF",146,0)
 . N TIUDFN S TIUDFN=$P($G(^TIU(8925,TIUDA,0)),U,2)
"RTN","TIUPUTPF",147,0)
 . S TIUTEMP=$$LINK^TIUPRF1(TIUDA,$P($G(^TMP("TIUPRFUP",$J)),U),$P($G(^TMP("TIUPRFUP",$J)),U,2),TIUDFN)
"RTN","TIUPUTPF",148,0)
 . K ^TMP("TIUPRFUP",$J)
"RTN","TIUPUTPF",149,0)
 I '$D(TIU("VSTR")) D
"RTN","TIUPUTPF",150,0)
 . N TIUD0,TIUD12,TIUVLOC,TIUHLOC,TIUEDT,TIULDT
"RTN","TIUPUTPF",151,0)
 . S TIUD0=$G(^TIU(8925,+TIUDA,0)),TIUD12=$G(^(12))
"RTN","TIUPUTPF",152,0)
 . S DFN=+$P(TIUD0,U,2),TIUEDT=+$P(TIUD0,U,7)
"RTN","TIUPUTPF",153,0)
 . S TIULDT=$$FMADD^XLFDT(TIUEDT,1),TIUHLOC=+$P(TIUD12,U,5)
"RTN","TIUPUTPF",154,0)
 . S TIUVLOC=$S(+$P(TIUD12,U,11):+$P(TIUD12,U,11),1:+TIUHLOC)
"RTN","TIUPUTPF",155,0)
 . I $S(+DFN'>0:1,+TIUEDT'>0:1,+TIULDT'>0:1,+TIUVLOC'>0:1,1:0) Q
"RTN","TIUPUTPF",156,0)
 . D MAIN^TIUVSIT(.TIU,DFN,"",TIUEDT,TIULDT,"LAST",0,+TIUVLOC)
"RTN","TIUPUTPF",157,0)
 Q:'$D(TIU("VSTR"))
"RTN","TIUPUTPF",158,0)
 D ENQ^TIUPXAP1 ; Get/file VISIT
"RTN","TIUPUTPF",159,0)
 Q
"RTN","TIURB")
0^12^B44977489
"RTN","TIURB",1,0)
TIURB ; SLC/JER - More Review Screen Actions ;4/11/05
"RTN","TIURB",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**4,32,52,78,58,100,109,155,184**;Jun 20, 1997
"RTN","TIURB",3,0)
 ; **100** Moved DELETE, DEL, DELTEXT, DIK to new rtn TIURB2
"RTN","TIURB",4,0)
 ; DBIA 3576 TIU use of GMRCTIU
"RTN","TIURB",5,0)
AMEND ; Amendment action
"RTN","TIURB",6,0)
 N TIUDA,DFN,DIE,DR,TIU,TIUDATA,TIUI,TIUSIG,TIUY,X,X1,Y
"RTN","TIURB",7,0)
 N DIROUT,TIUCHNG,TIUDAARY,TIULST
"RTN","TIURB",8,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","TIURB",9,0)
 S TIUI=0
"RTN","TIURB",10,0)
 F  S TIUI=$O(VALMY(TIUI)) Q:+TIUI'>0  D  Q:$D(DIROUT)
"RTN","TIURB",11,0)
 . N RSTRCTD
"RTN","TIURB",12,0)
 . S TIUDATA=$G(^TMP("TIURIDX",$J,TIUI))
"RTN","TIURB",13,0)
 . S TIUDA=+$P(TIUDATA,U,2) S RSTRCTD=$$DOCRES^TIULRR(TIUDA)
"RTN","TIURB",14,0)
 . I RSTRCTD D  Q
"RTN","TIURB",15,0)
 . . W !!,$C(7),"Ok, no harm done...",! ; Echo denial message
"RTN","TIURB",16,0)
 . . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIURB",17,0)
 . W !!,"Amending #",+TIUDATA
"RTN","TIURB",18,0)
 . S TIUCHNG=0
"RTN","TIURB",19,0)
 . D AMEND1
"RTN","TIURB",20,0)
 . I $G(TIUDAARY(TIUI)) D
"RTN","TIURB",21,0)
 . . S TIULST=$G(TIULST)_$S($G(TIULST)]"":",",1:"")_TIUI
"RTN","TIURB",22,0)
 ; -- Update or Rebuild list, restore video:
"RTN","TIURB",23,0)
 D UPRBLD^TIURL(.TIUCHNG,.VALMY) K VALMY
"RTN","TIURB",24,0)
 S VALMBCK="R"
"RTN","TIURB",25,0)
 D VMSG^TIURS1($G(TIULST),.TIUDAARY,"amended")
"RTN","TIURB",26,0)
 Q
"RTN","TIURB",27,0)
AMEND1 ; Single record amend
"RTN","TIURB",28,0)
 N TIUCMT,TIUT0,TIUTYP,TIUAMND,TIUSNM,TIUSBLK,TIUCSNM,TIUCSBLK,DIE,DR
"RTN","TIURB",29,0)
 N DA,DFN,DIWESUB,TIU,TIUODA,TIUTITL,TIUCLSS,TIUCON,TIUCNSLT,TIUPRF,TIUFLAG
"RTN","TIURB",30,0)
 K ^TMP("TIURTRCT",$J)
"RTN","TIURB",31,0)
 ; TIU*155 Gets consult data if exists
"RTN","TIURB",32,0)
 S TIUTITL=$P($G(^TIU(8925,TIUDA,0)),U)
"RTN","TIURB",33,0)
 S TIUCLSS=$$CLASS^TIUCNSLT()
"RTN","TIURB",34,0)
 S TIUCON=+$$ISA^TIULX(TIUTITL,TIUCLSS)
"RTN","TIURB",35,0)
 S TIUCNSLT=+$P($G(^TIU(8925,TIUDA,14)),U,5)
"RTN","TIURB",36,0)
 S TIUPRF=0,TIUFLAG=0
"RTN","TIURB",37,0)
 D ISPRFTTL^TIUPRF2(.TIUPRF,TIUTITL)
"RTN","TIURB",38,0)
 I TIUPRF S TIUFLAG=$$FNDACTIF^TIUPRFL(TIUDA)
"RTN","TIURB",39,0)
 L +^TIU(8925,+TIUDA):1
"RTN","TIURB",40,0)
 E  D  Q
"RTN","TIURB",41,0)
 . W !?5,$C(7),"Another user is editing this entry." H 3
"RTN","TIURB",42,0)
 . S TIUCHNG("REFRESH")=1
"RTN","TIURB",43,0)
 I +$P($G(^TIU(8925,+TIUDA,0)),U,5)'>6 D  Q
"RTN","TIURB",44,0)
 . W !?5,$C(7),"Only SIGNED Documents may be amended."
"RTN","TIURB",45,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") ; pause
"RTN","TIURB",46,0)
 . S TIUCHNG("REFRESH")=1
"RTN","TIURB",47,0)
 I +$$HASIMG^TIURB2(TIUDA) D IMGNOTE^TIURB2 Q
"RTN","TIURB",48,0)
 S TIUAMND=$$CANDO^TIULP(TIUDA,"AMENDMENT")
"RTN","TIURB",49,0)
 I +TIUAMND'>0 D  Q
"RTN","TIURB",50,0)
 . W !!,$C(7),$C(7),$C(7),$P(TIUAMND,U,2),!
"RTN","TIURB",51,0)
 . S TIUCHNG("REFRESH")=1
"RTN","TIURB",52,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") ; pause
"RTN","TIURB",53,0)
 W !!,"Before proceeding, please enter your Electronic Signature Code..."
"RTN","TIURB",54,0)
 S TIUAMND=$$GETSIG^TIURD2
"RTN","TIURB",55,0)
 I +TIUAMND'>0 D  Q
"RTN","TIURB",56,0)
 . W !!,"  Ok, no harm done...",!
"RTN","TIURB",57,0)
 . S TIUCHNG("REFRESH")=1
"RTN","TIURB",58,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") ; pause
"RTN","TIURB",59,0)
 W !!,"The ORIGINAL document will be RETRACTED, and a copy will be amended...",!
"RTN","TIURB",60,0)
 S TIUODA=TIUDA
"RTN","TIURB",61,0)
 S TIUDA=+$$RETRACT^TIURD2(TIUDA,"",7)
"RTN","TIURB",62,0)
 I '+TIUDA D  Q
"RTN","TIURB",63,0)
 . W !!,$C(7),$C(7),$C(7),"Retraction of Original Document Failed.",!
"RTN","TIURB",64,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") ; pause
"RTN","TIURB",65,0)
 . S TIUDA=TIUODA,TIUCHNG("REFRESH")=1
"RTN","TIURB",66,0)
 L +^TIU(8925,TIUDA):1
"RTN","TIURB",67,0)
 E  D  Q
"RTN","TIURB",68,0)
 . W !?5,$C(7),"Another user is editing this entry."
"RTN","TIURB",69,0)
 . D RECOVER^TIURD4(TIUODA,TIUDA) H 3
"RTN","TIURB",70,0)
 . S TIUPRF=$$LINK^TIUPRF1(TIUODA,+TIUFLAG,$P(TIUFLAG,U,2),$P($G(^TIU(8925,TIUODA,0)),U,2))
"RTN","TIURB",71,0)
 . S TIUDA=TIUODA,TIUCHNG("REFRESH")=1
"RTN","TIURB",72,0)
 S TIUSNM=$$DECRYPT^TIULC1($P(^TIU(8925,TIUDA,15),U,3),1,$$CHKSUM^TIULC("^TIU(8925,"_TIUDA_",""TEXT"")"))
"RTN","TIURB",73,0)
 S TIUSBLK=$$DECRYPT^TIULC1($P($G(^TIU(8925,TIUDA,15)),U,4),1,$$CHKSUM^TIULC("^TIU(8925,"_TIUDA_",""TEXT"")"))
"RTN","TIURB",74,0)
 S TIUCSNM=$$DECRYPT^TIULC1($P(^TIU(8925,TIUDA,15),U,9),1,$$CHKSUM^TIULC("^TIU(8925,"_TIUDA_",""TEXT"")"))
"RTN","TIURB",75,0)
 S TIUCSBLK=$$DECRYPT^TIULC1($P($G(^TIU(8925,TIUDA,15)),U,10),1,$$CHKSUM^TIULC("^TIU(8925,"_TIUDA_",""TEXT"")"))
"RTN","TIURB",76,0)
 S TIUTYP=+$G(^TIU(8925,+TIUDA,0)),TIUT0=$G(^TIU(8925.1,+TIUTYP,0))
"RTN","TIURB",77,0)
 S TIUTYP(1)="1^"_+TIUTYP_U_$P(TIUT0,U,3)_U
"RTN","TIURB",78,0)
 S DFN=$P($G(^TIU(8925,+TIUDA,0)),U,2)
"RTN","TIURB",79,0)
 D GETTIU^TIULD(.TIU,TIUDA)
"RTN","TIURB",80,0)
 S DIWESUB="Patient: "_$G(TIU("PNM"))
"RTN","TIURB",81,0)
 S TIUCHNG=0 D FULL^VALM1,TEXTEDIT^TIUEDI4(TIUDA,.TIUCMT,.TIUCHNG)
"RTN","TIURB",82,0)
 I '+$G(TIUCHNG) D  Q
"RTN","TIURB",83,0)
 . L -^TIU(8925,TIUDA)
"RTN","TIURB",84,0)
 . D RECOVER^TIURD4(TIUODA,TIUDA)
"RTN","TIURB",85,0)
 . S TIUPRF=$$LINK^TIUPRF1(TIUODA,+TIUFLAG,$P(TIUFLAG,U,2),$P($G(^TIU(8925,TIUODA,0)),U,2))
"RTN","TIURB",86,0)
 . L -^TIU(8925,TIUODA) H 3
"RTN","TIURB",87,0)
 . S TIUDA=TIUODA,TIUCHNG("REFRESH")=1
"RTN","TIURB",88,0)
 I +$G(TIUCHNG) D
"RTN","TIURB",89,0)
 . S DR=".05///AMENDED;1601////"_$$NOW^XLFDT_";1602////"_DUZ,DA=TIUDA,TIUSIG=0
"RTN","TIURB",90,0)
 . S DR=DR_";1603////"_$$NOW^XLFDT_";1604///^S X=$$SIGNAME^TIULS(DUZ);1605///^S X=$$SIGTITL^TIULS(DUZ)",TIUSIG=1
"RTN","TIURB",91,0)
 . S DIE=8925 D ^DIE
"RTN","TIURB",92,0)
 . ; Refile /es/-block fields
"RTN","TIURB",93,0)
 . S DR="1503///^S X=TIUSNM;1504///^S X=TIUSBLK;1509///^S X=TIUCSNM;1510///^S X=TIUCSBLK"
"RTN","TIURB",94,0)
 . D ^DIE
"RTN","TIURB",95,0)
 ; Drop Locks on both documents
"RTN","TIURB",96,0)
 L -^TIU(8925,+TIUDA)
"RTN","TIURB",97,0)
 L -^TIU(8925,+TIUODA)
"RTN","TIURB",98,0)
 S TIUDAARY(TIUI)=TIUDA
"RTN","TIURB",99,0)
 S TIUCHNG("RBLD")=1
"RTN","TIURB",100,0)
 ; if note is associated with a patient record flag - clean up
"RTN","TIURB",101,0)
 I +TIUFLAG S TIUPRF=$$LINK^TIUPRF1(TIUDA,+TIUFLAG,$P(TIUFLAG,U,2),$P($G(^TIU(8925,TIUDA,0)),U,2))
"RTN","TIURB",102,0)
 ; TIU*155 If note is associated with a consult update ^GMR global
"RTN","TIURB",103,0)
 ; to include the amended note
"RTN","TIURB",104,0)
 ; Rollback retracted note from ^GMR(123 node 50
"RTN","TIURB",105,0)
 I $G(TIUCON)=1 D
"RTN","TIURB",106,0)
 . N STATUS,GMRCSTAT,TIUAUTH
"RTN","TIURB",107,0)
 . S STATUS=$P($G(^TIU(8925,TIUDA,0)),U,5)
"RTN","TIURB",108,0)
 . S GMRCSTAT=$S(STATUS>6:"COMPLETED",1:"INCOMPLETE")
"RTN","TIURB",109,0)
 . S TIUAUTH=$P($G(^TIU(8925,TIUDA,12)),U,2)
"RTN","TIURB",110,0)
 . D ROLLBACK^TIUCNSLT(TIUODA)
"RTN","TIURB",111,0)
 . D GET^GMRCTIU(TIUCNSLT,TIUDA,GMRCSTAT,TIUAUTH)
"RTN","TIURB",112,0)
 Q
"RTN","TIURB",113,0)
SENDBACK ; Send back a Document to transcription
"RTN","TIURB",114,0)
 N TIUDA,DFN,TIU,TIUDATA,TIUCHNG,TIUI,TIUY,Y,DIROUT,TIULST
"RTN","TIURB",115,0)
 N TIUDAARY
"RTN","TIURB",116,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","TIURB",117,0)
 S TIUI=0
"RTN","TIURB",118,0)
 I +$O(VALMY(0)) D CLEAR^VALM1
"RTN","TIURB",119,0)
 F  S TIUI=$O(VALMY(TIUI)) Q:+TIUI'>0  D  Q:$D(DIROUT)
"RTN","TIURB",120,0)
 . N TIU,RSTRCTD
"RTN","TIURB",121,0)
 . S TIUDATA=$G(^TMP("TIURIDX",$J,TIUI))
"RTN","TIURB",122,0)
 . S TIUDA=+$P(TIUDATA,U,2) S RSTRCTD=$$DOCRES^TIULRR(TIUDA)
"RTN","TIURB",123,0)
 . I RSTRCTD D  Q
"RTN","TIURB",124,0)
 . . W !!,$C(7),"Ok, no harm done...",! ; Echo denial message
"RTN","TIURB",125,0)
 . . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIURB",126,0)
 . S TIUDAARY(TIUI)=TIUDA
"RTN","TIURB",127,0)
 . S TIUCHNG=0
"RTN","TIURB",128,0)
 . D EN^VALM("TIU SEND BACK")
"RTN","TIURB",129,0)
 . I +$G(TIUCHNG) D
"RTN","TIURB",130,0)
 . . S TIULST=$G(TIULST)_$S($G(TIULST)]"":",",1:"")_TIUI
"RTN","TIURB",131,0)
SENDX ; Revise list and cycle back as appropriate
"RTN","TIURB",132,0)
 I $G(TIUCHNG("ADDM"))!$G(TIUCHNG("DELETE")) S TIUCHNG("RBLD")=1
"RTN","TIURB",133,0)
 E  S TIUCHNG("UPDATE")=1
"RTN","TIURB",134,0)
 D UPRBLD^TIURL(.TIUCHNG,.VALMY) K VALMY
"RTN","TIURB",135,0)
 S VALMBCK="R"
"RTN","TIURB",136,0)
 D VMSG^TIURS1($G(TIULST),.TIUDAARY,"sent back")
"RTN","TIURB",137,0)
 Q
"RTN","TIURB",138,0)
LINK ; Link to problem(s)
"RTN","TIURB",139,0)
 N TIUCHNG,TIUDA,DFN,TIU,TIUDATA,TIUEDIT,TIUI,TIUY,TIULST,Y,DIROUT
"RTN","TIURB",140,0)
 N TIUDAARY
"RTN","TIURB",141,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","TIURB",142,0)
 S TIUI=0
"RTN","TIURB",143,0)
 I +$O(VALMY(0)) D CLEAR^VALM1
"RTN","TIURB",144,0)
 F  S TIUI=$O(VALMY(TIUI)) Q:+TIUI'>0  D  Q:$D(DIROUT)
"RTN","TIURB",145,0)
 . N TIU,VALMY,XQORM,VA,VADM,GMPDFN,GMPLUSER,RSTRCTD
"RTN","TIURB",146,0)
 . S TIUDATA=$G(^TMP("TIURIDX",$J,TIUI))
"RTN","TIURB",147,0)
 . S TIUDA=+$P(TIUDATA,U,2),GMPLUSER=1
"RTN","TIURB",148,0)
 . I '$D(^TIU(8925,+TIUDA,0)) D  Q
"RTN","TIURB",149,0)
 . . W !,$C(7),"Document no longer exists.",!
"RTN","TIURB",150,0)
 . . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","TIURB",151,0)
 . S RSTRCTD=$$DOCRES^TIULRR(TIUDA)
"RTN","TIURB",152,0)
 . I RSTRCTD D  Q
"RTN","TIURB",153,0)
 . . W !!,$C(7),"Ok, no harm done...",! ; Echo denial message
"RTN","TIURB",154,0)
 . . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIURB",155,0)
 . S TIUDAARY(TIUI)=TIUDA
"RTN","TIURB",156,0)
 . S DFN=+$P($G(^TIU(8925,+TIUDA,0)),U,2)
"RTN","TIURB",157,0)
 . I +DFN D DEM^VADPT S GMPDFN=DFN_U_VADM(1)_U_$E(VADM(1))_VA("BID")
"RTN","TIURB",158,0)
 . S TIUCHNG=0
"RTN","TIURB",159,0)
 . D EN^VALM("TIU LINK TO PROBLEM")
"RTN","TIURB",160,0)
 . I +$G(TIUCHNG) S TIULST=$G(TIULST)_$S($G(TIULST)]"":",",1:"")_TIUI
"RTN","TIURB",161,0)
LINKX ; Revise list and cycle back as appropriate
"RTN","TIURB",162,0)
 S TIUCHNG("REFRESH")=1
"RTN","TIURB",163,0)
 D UPRBLD^TIURL(.TIUCHNG,.VALMY) K VALMY
"RTN","TIURB",164,0)
 S VALMBCK="R"
"RTN","TIURB",165,0)
 D VMSG^TIURS1($G(TIULST),.TIUDAARY,"linked to problems")
"RTN","TIURB",166,0)
 Q
"RTN","TIURB",167,0)
DEL(DA) ; -- Call to DEL for backward compatibility
"RTN","TIURB",168,0)
 G GODEL^TIURB2
"RTN","TIURB",169,0)
 Q
"RTN","TIURB2")
0^8^B37777164
"RTN","TIURB2",1,0)
TIURB2 ; SLC/JER,AJB - More Review Screen Actions ; 1/18/05
"RTN","TIURB2",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**100,109,154,112,184**;Jun 20, 1997
"RTN","TIURB2",3,0)
 ; 2/3: Update TEXTEDIT from TIUEDIT to TIUEDI4
"RTN","TIURB2",4,0)
 ; 9/28 Moved DELETE, DEL, DELTEXT, DIK to new rtn TIURB2
"RTN","TIURB2",5,0)
 ; 8/2/02 DELTEXT logic to bypass user-response if called by GUI TIU*1*154
"RTN","TIURB2",6,0)
 ;        GODEL+12, changed direct access of DPT global to FM
"RTN","TIURB2",7,0)
 Q
"RTN","TIURB2",8,0)
DELETE ; Delete action
"RTN","TIURB2",9,0)
 N TIUI,TIUY,TIUCHNG,Y,DIROUT,DTOUT,DUOUT
"RTN","TIURB2",10,0)
 N TIULNO,TIUJ,PRNTDA,LSTDA
"RTN","TIURB2",11,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","TIURB2",12,0)
 S TIUI=0
"RTN","TIURB2",13,0)
 F  S TIUI=$O(VALMY(TIUI)) Q:+TIUI'>0  D  Q:$D(DIROUT)
"RTN","TIURB2",14,0)
 . N TIUDATA,DA,RSTRCTD
"RTN","TIURB2",15,0)
 . S TIUDATA=$G(^TMP("TIURIDX",$J,TIUI))
"RTN","TIURB2",16,0)
 . S DA=+$P(TIUDATA,U,2)
"RTN","TIURB2",17,0)
 . W !!,"Processing Item #",TIUI
"RTN","TIURB2",18,0)
 . L +^TIU(8925,+DA):1
"RTN","TIURB2",19,0)
 . E  D  Q
"RTN","TIURB2",20,0)
 . . W !?5,$C(7),"Another user is editing this entry."
"RTN","TIURB2",21,0)
 . . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","TIURB2",22,0)
 . . D PICK^TIULM(TIUI)
"RTN","TIURB2",23,0)
 . S RSTRCTD=$$DOCRES^TIULRR(DA)
"RTN","TIURB2",24,0)
 . I RSTRCTD D  Q
"RTN","TIURB2",25,0)
 . . W !!,$C(7),"Ok, no harm done...",! ; Echo denial message
"RTN","TIURB2",26,0)
 . . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIURB2",27,0)
 . D DEL(DA)
"RTN","TIURB2",28,0)
 . L -^TIU(8925,+DA)
"RTN","TIURB2",29,0)
 ; -- Update or Rebuild list, restore video:
"RTN","TIURB2",30,0)
 S TIUCHNG("RBLD")=1
"RTN","TIURB2",31,0)
 D UPRBLD^TIURL(.TIUCHNG,.VALMY) K VALMY
"RTN","TIURB2",32,0)
 S VALMBCK="R"
"RTN","TIURB2",33,0)
 Q
"RTN","TIURB2",34,0)
DEL(DA) ; We don't hand out pencils, without erasers
"RTN","TIURB2",35,0)
GODEL ; -- Called from DEL^TIURB
"RTN","TIURB2",36,0)
 N CANDEL,TIUDA,TIUD0,TIUI,TIUDFLT,TIUPT,TIUVDT,TIUTYP,PROMPT,TIUAUDIT
"RTN","TIURB2",37,0)
 N TIUMSG,TIURSN,TIUVTYP,TIUABORT,ADDMPRNT,IDPRNT,TIUAUTH,TIUD12,STATUS
"RTN","TIURB2",38,0)
 L +^TIU(8925,+DA):1
"RTN","TIURB2",39,0)
 E  D  Q
"RTN","TIURB2",40,0)
 . W !?5,$C(7),"Another user is editing this entry."
"RTN","TIURB2",41,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","TIURB2",42,0)
 I +$$HASIMG(DA) D IMGNOTE Q
"RTN","TIURB2",43,0)
 S TIUD0=$G(^TIU(8925,+DA,0)),TIUD12=$G(^(12))
"RTN","TIURB2",44,0)
 S TIUTYP=$$UP^XLFSTR($$PNAME^TIULC1(+TIUD0)),TIUAUTH=$P(TIUD12,U,2)
"RTN","TIURB2",45,0)
 S STATUS=$P(TIUD0,U,5),ADDMPRNT=+$P(TIUD0,U,6)
"RTN","TIURB2",46,0)
 S IDPRNT=+$P($G(^TMP("TIUR",$J,"IDDATA",DA)),U,3)
"RTN","TIURB2",47,0)
 S TIUPT=$$NAME^TIULS($P($G(^DPT(+$P(TIUD0,U,2),0)),U),"FIRST LAST")
"RTN","TIURB2",48,0)
 S TIUVDT=+$P(TIUD0,U,7)
"RTN","TIURB2",49,0)
 S TIUVDT=$$DATE^TIULS(TIUVDT,"MM/DD/YY"_$S($L(TIUVDT,".")=2:" HR:MIN",1:""))
"RTN","TIURB2",50,0)
 S TIUVTYP=$S(+$$ISDS^TIULX(+TIUD0):" Admission",1:" Visit")
"RTN","TIURB2",51,0)
 S TIUMSG="DELETING "_TIUTYP_" For "_TIUPT_"'s "_TIUVDT_TIUVTYP_"."
"RTN","TIURB2",52,0)
 S CANDEL=$$CANDO^TIULP(DA,"DELETE RECORD")
"RTN","TIURB2",53,0)
 I 'CANDEL W !!,$C(7),$C(7),$C(7),$P(CANDEL,U,2),! H 2 G DELX
"RTN","TIURB2",54,0)
 I $$HASIDKID^TIUGBR(DA) W !!,"This interdisciplinary parent cannot be deleted; it's entries must first",!,"be detached.",! H 3 G DELX
"RTN","TIURB2",55,0)
 I $O(^TIU(8925,"DAD",+DA,0))>0,$$HASADDEN^TIULC1(DA) D
"RTN","TIURB2",56,0)
 . W !!,"This "_TIUTYP_" has ADDENDA."
"RTN","TIURB2",57,0)
 W !,$C(7) F TIUI=1:1:$L(TIUMSG,"|") W !,$P(TIUMSG,"|",TIUI)
"RTN","TIURB2",58,0)
 W ! S PROMPT="Are you SURE you want to DELETE"
"RTN","TIURB2",59,0)
 I '$$READ^TIUU("YO",PROMPT,"NO") W !,"Nothing DELETED.",! H 2 S TIUCHNG=0 G DELX
"RTN","TIURB2",60,0)
 S PROMPT="DELETE the TEXT ONLY, leaving audit trail information"
"RTN","TIURB2",61,0)
 S TIUDA=DA
"RTN","TIURB2",62,0)
 I STATUS'>5,$S(DUZ=TIUAUTH:1,+$$ISA^USRLM(DUZ,"MEDICAL INFORMATION SECTION")'>0:1,1:0) S TIUAUDIT=0 I 1
"RTN","TIURB2",63,0)
 E  D  G:$D(TIUABORT) DELX
"RTN","TIURB2",64,0)
 . I +$P($G(^TIU(8925,+TIUDA,0)),U,5)'<6 S TIUAUDIT=1
"RTN","TIURB2",65,0)
 . E  D
"RTN","TIURB2",66,0)
 . . S TIUAUDIT=+$$READ^TIUU("YO",PROMPT,"NO")
"RTN","TIURB2",67,0)
 . . I $D(DTOUT)!($D(DUOUT)) D
"RTN","TIURB2",68,0)
 . . . W !,"Nothing DELETED.",!
"RTN","TIURB2",69,0)
 . . . S TIUCHNG=0,TIUABORT=1
"RTN","TIURB2",70,0)
 . . . I $$READ^TIUU("EA","Press RETURN to continue...") ; pause
"RTN","TIURB2",71,0)
 K ^TIU(8925,"ASAVE",DUZ,TIUDA) ; Remove SAVE-flag
"RTN","TIURB2",72,0)
 I +TIUAUDIT'>0 D  G DELX
"RTN","TIURB2",73,0)
 . W !,"DELETING Entire "_TIUTYP_" record.",!
"RTN","TIURB2",74,0)
 . D DELIRT^TIUDIRT(TIUDA),DIK(TIUDA) H 2
"RTN","TIURB2",75,0)
 . S TIUCHNG=2,TIUCHNG("DELETE")=1
"RTN","TIURB2",76,0)
 . D ALERTDEL^TIUALRT(TIUDA),DELSGNR^TIURB1(TIUDA)
"RTN","TIURB2",77,0)
 S PROMPT="Reason for DELETION (Privacy Act or Administrative): "
"RTN","TIURB2",78,0)
 S TIURSN=$P($$READ^TIUU("SA^P:privacy act;A:administrative",PROMPT,"PRIVACY ACT"),U)
"RTN","TIURB2",79,0)
 I '$L(TIURSN) D  G DELX
"RTN","TIURB2",80,0)
 . W !,"Nothing DELETED.",!
"RTN","TIURB2",81,0)
 . S TIUCHNG=0,TIUABORT=1
"RTN","TIURB2",82,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") ; pause
"RTN","TIURB2",83,0)
 D ALERTDEL^TIUALRT(TIUDA),DELSGNR^TIURB1(TIUDA)
"RTN","TIURB2",84,0)
 D DELTEXT(TIUDA,TIURSN),AUDEL^TIURB1(TIUDA,TIURSN) S TIUCHNG=1
"RTN","TIURB2",85,0)
DELX L -^TIU(8925,+DA)
"RTN","TIURB2",86,0)
 Q
"RTN","TIURB2",87,0)
DELTEXT(DA,TIURSN) ; After signature, only retraction possible
"RTN","TIURB2",88,0)
 N DR,DIE,TIUDA,TIUY I '$D(ZTQUEUED) D FULL^VALM1
"RTN","TIURB2",89,0)
 S TIUDA=DA
"RTN","TIURB2",90,0)
 W !!?5,$C(7),"***********************************************************************"
"RTN","TIURB2",91,0)
 W !?5,"*  This document will now be RETRACTED. As such, it has been removed  *"
"RTN","TIURB2",92,0)
 W !?5,"*    from public view, and from typical Releases of Information,      *"
"RTN","TIURB2",93,0)
 W !?5,"*          but will remain indefinitely discoverable to HIMS.         *"
"RTN","TIURB2",94,0)
 W !?5,"***********************************************************************",!
"RTN","TIURB2",95,0)
 S DIE=8925
"RTN","TIURB2",96,0)
 S DR="1610////^S X=+DUZ;1611////^S X=+$$NOW^XLFDT;1612////^S X=TIURSN"
"RTN","TIURB2",97,0)
 D ^DIE
"RTN","TIURB2",98,0)
 S DA=$$RETRACT^TIURD2(DA,"",14)
"RTN","TIURB2",99,0)
 ; Unlink PRF titles when TIU changes require it TIU*1*184
"RTN","TIURB2",100,0)
 D ISPRFTTL^TIUPRF2(.TIUY,+$G(^TIU(8925,TIUDA,0))) I +TIUY D UNLINK^TIUPRF1(TIUDA)
"RTN","TIURB2",101,0)
 ; Roll back SURGICAL REPORT TITLES when TIU changes require it ; TIU*1*112
"RTN","TIURB2",102,0)
 D ISSURG^TIUSROI(.TIUY,+$G(^TIU(8925,TIUDA,0))) I +TIUY D RETRACT^TIUSROI1(TIUDA)
"RTN","TIURB2",103,0)
 ; Remove link to consult if a Consult Title
"RTN","TIURB2",104,0)
 D ISCNSLT^TIUCNSLT(.TIUY,+$G(^TIU(8925,TIUDA,0))) I +TIUY D REMCNSLT^TIUCNSLT(TIUDA)
"RTN","TIURB2",105,0)
 I '$$BROKER^XWBLIB D
"RTN","TIURB2",106,0)
 . I '$D(ZTQUEUED),$$READ^TIUU("EA","Press RETURN to continue...")
"RTN","TIURB2",107,0)
 Q
"RTN","TIURB2",108,0)
DIK(DA,SUPPACT) ; Call ^DIK to delete the record
"RTN","TIURB2",109,0)
 ; [SUPPACT] = Boolean to suppress delete action
"RTN","TIURB2",110,0)
 N DIK,TIUTYP,TIUTYPE,TIUDA,TIUVSIT,TIUVKILL,TIUDELX S TIUDA=0
"RTN","TIURB2",111,0)
 F  S TIUDA=+$O(^TIU(8925,"DAD",+DA,TIUDA)) Q:+TIUDA'>0  D DIK(TIUDA)
"RTN","TIURB2",112,0)
 S TIUTYPE=+$G(^TIU(8925,+DA,0)),SUPPACT=+$G(SUPPACT)
"RTN","TIURB2",113,0)
 S TIUTYP=$P($G(^TIU(8925.1,TIUTYPE,0)),U)
"RTN","TIURB2",114,0)
 S TIUVSIT=+$P($G(^TIU(8925,DA,0)),U,3),TIUDA=DA
"RTN","TIURB2",115,0)
 S TIUDELX=$$DELETE^TIULC1(TIUTYPE)
"RTN","TIURB2",116,0)
 I TIUDELX]"",'SUPPACT X TIUDELX
"RTN","TIURB2",117,0)
 S DIK="^TIU(8925,"
"RTN","TIURB2",118,0)
 D ^DIK ; W:'$D(ZTQUEUED) "."
"RTN","TIURB2",119,0)
 D DELAUDIT^TIUEDI1(DA)
"RTN","TIURB2",120,0)
 D DELPROB^TIURB1(DA)
"RTN","TIURB2",121,0)
 D DELSGNR^TIURB1(DA)
"RTN","TIURB2",122,0)
 D DELIMG(DA)
"RTN","TIURB2",123,0)
 D ALERTDEL^TIUALRT(DA)
"RTN","TIURB2",124,0)
 ; **52** Disable call to $$DELVFILE^PXAPI 'til further notice
"RTN","TIURB2",125,0)
 ; I +TIUVSIT,$D(^AUPNVSIT(+TIUVSIT)) S TIUVKILL=$$DELVFILE^PXAPI("ALL",TIUVSIT,"","TEXT INTEGRATION UTILITIES")
"RTN","TIURB2",126,0)
 Q
"RTN","TIURB2",127,0)
HASIMG(TIUDA) ; Evaluate whether images are linked
"RTN","TIURB2",128,0)
 Q +$O(^TIU(8925.91,"B",TIUDA,0))
"RTN","TIURB2",129,0)
IMGNOTE ; Present Notice of Linked Images
"RTN","TIURB2",130,0)
 D FULL^VALM1
"RTN","TIURB2",131,0)
 W !!?5,$C(7),"***********************************************************************"
"RTN","TIURB2",132,0)
 W !?5,"* This document has linked images. You must ""delete"" the Images using *"
"RTN","TIURB2",133,0)
 W !?5,"*        the Imaging Package before proceeding with this action.      *"
"RTN","TIURB2",134,0)
 W !?5,"*      The images will be hidden from public view, but will remain    *"
"RTN","TIURB2",135,0)
 W !?5,"*                   indefinitely discoverable to HIMS.                *"
"RTN","TIURB2",136,0)
 W !?5,"***********************************************************************",!
"RTN","TIURB2",137,0)
 I $$READ^TIUU("EA","Press RETURN to continue...") ; pause
"RTN","TIURB2",138,0)
 Q
"RTN","TIURB2",139,0)
DELIMG(TIUDA) ; Remove linked images, when document deleted
"RTN","TIURB2",140,0)
 N DA,DIK S DIK="^TIU(8925.91,",DA=0
"RTN","TIURB2",141,0)
 F  S DA=$O(^TIU(8925.91,"B",TIUDA,DA)) Q:+DA'>0  D ^DIK
"RTN","TIURB2",142,0)
 Q
"RTN","TIURC1")
0^9^B46965745
"RTN","TIURC1",1,0)
TIURC1 ; SLC/JER - Additional Review screen actions ;4/13/05
"RTN","TIURC1",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**100,113,184**;Jun 20, 1997
"RTN","TIURC1",3,0)
COPY ; Copy
"RTN","TIURC1",4,0)
 N DA,DIE,DR,TIU,TIUCHNG,TIUDATA,TIUI,TIUY,Y,DIROUT
"RTN","TIURC1",5,0)
 N TIUVIEW,TIULST,TIUNREC,TIUDAARY,OLDNREC
"RTN","TIURC1",6,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","TIURC1",7,0)
 S TIUI=0
"RTN","TIURC1",8,0)
 F  S TIUI=$O(VALMY(TIUI)) Q:+TIUI'>0  D  Q:$D(DIROUT)
"RTN","TIURC1",9,0)
 . N TIU,RSTRCTD
"RTN","TIURC1",10,0)
 . S TIUDATA=$G(^TMP("TIURIDX",$J,TIUI))
"RTN","TIURC1",11,0)
 . S TIUDA=+$P(TIUDATA,U,2) S RSTRCTD=$$DOCRES^TIULRR(TIUDA)
"RTN","TIURC1",12,0)
 . I RSTRCTD D  Q
"RTN","TIURC1",13,0)
 . . W !!,$C(7),"Ok, no harm done...",!
"RTN","TIURC1",14,0)
 . . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIURC1",15,0)
 . S TIUVIEW=$$CANDO^TIULP(TIUDA,"VIEW")
"RTN","TIURC1",16,0)
 . I +TIUVIEW'>0 D  Q
"RTN","TIURC1",17,0)
 . . W !!,$C(7),$P(TIUVIEW,U,2),!
"RTN","TIURC1",18,0)
 . . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIURC1",19,0)
 . S OLDNREC=$G(TIUNREC)
"RTN","TIURC1",20,0)
 . ; -- Single docmt copy.  Does COPY1.
"RTN","TIURC1",21,0)
 . ;    Generates list TIUNREC of new recs for feedback
"RTN","TIURC1",22,0)
 . D EN^VALM("TIU COPY DOCUMENT")
"RTN","TIURC1",23,0)
 . K ^TMP("TIUVIEW",$J)
"RTN","TIURC1",24,0)
 . I $G(TIUNREC)'=OLDNREC D
"RTN","TIURC1",25,0)
 . . S TIUDAARY(TIUI)=TIUDA
"RTN","TIURC1",26,0)
 . . S TIULST=$G(TIULST)_$S($G(TIULST)]"":",",1:"")_TIUI
"RTN","TIURC1",27,0)
 I +$G(TIUNREC) D
"RTN","TIURC1",28,0)
 . N TIUI,TIUNDA,TIUITEM
"RTN","TIURC1",29,0)
 . F TIUI=1:1:$L($G(TIUNREC),",") D
"RTN","TIURC1",30,0)
 . . S TIUNDA=$P(TIUNREC,",",TIUI),TIUITEM=+$G(^TMP("TIUR",$J,0))
"RTN","TIURC1",31,0)
 . . D ADDELMNT^TIUR2(TIUNDA,+TIUITEM,1)
"RTN","TIURC1",32,0)
 S TIUCHNG("REFRESH")=1
"RTN","TIURC1",33,0)
 D UPRBLD^TIURL(.TIUCHNG,.VALMY) K VALMY
"RTN","TIURC1",34,0)
 S VALMBCK="R"
"RTN","TIURC1",35,0)
 D VMSG^TIURS1($G(TIULST),.TIUDAARY,"copied")
"RTN","TIURC1",36,0)
 Q
"RTN","TIURC1",37,0)
COPY1 ; Copy a document
"RTN","TIURC1",38,0)
 N TIUOD0,TIUOD12,TIUD13,TIUOD14,TIUOD17,TIUI,TIUPAT,TIUTNM,TIUTYP
"RTN","TIURC1",39,0)
 N TIUDPRM,TIUPOP,TIUCOPY,TIUVSUPP,DUOUT,DIROUT,DTOUT,TIUASK
"RTN","TIURC1",40,0)
 S TIUPOP=0
"RTN","TIURC1",41,0)
 I +$$ISADDNDM^TIULC1(TIUDA) D  Q
"RTN","TIURC1",42,0)
 . W !,$C(7),"ADDENDA may not be copied."
"RTN","TIURC1",43,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","TIURC1",44,0)
 S TIUCOPY=$$CANDO^TIULP(TIUDA,"COPY RECORD")
"RTN","TIURC1",45,0)
 I +TIUCOPY'>0 D  Q
"RTN","TIURC1",46,0)
 . W !!,$C(7),$P(TIUCOPY,U,2),!
"RTN","TIURC1",47,0)
 . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIURC1",48,0)
 S TIUOD0=$G(^TIU(8925,+TIUDA,0)),TIUOD12=$G(^(12)),TIUD13=$G(^(13))
"RTN","TIURC1",49,0)
 S TIUOD14=$G(^TIU(8925,+TIUDA,14)),TIUOD17=$G(^TIU(8925,+TIUDA,17))
"RTN","TIURC1",50,0)
 S TIUTYP=+TIUOD0
"RTN","TIURC1",51,0)
 D FULL^VALM1
"RTN","TIURC1",52,0)
 I $$CHKTITLE(+TIUTYP) D  Q:$G(TIUOUT)=1
"RTN","TIURC1",53,0)
 . N TIUDOC0,TIUDCLS
"RTN","TIURC1",54,0)
 . S TIUDOC0=$G(^TIU(8925.1,TIUTYP,0))
"RTN","TIURC1",55,0)
 . W !
"RTN","TIURC1",56,0)
 . I $P(TIUDOC0,U,7)=13 D
"RTN","TIURC1",57,0)
 . . W !,$C(7),$P(TIUDOC0,U,3)," is an inactive title."
"RTN","TIURC1",58,0)
 . W !,"You must now select a new, active title BEFORE the note is copied:",!
"RTN","TIURC1",59,0)
 . S TIUDCLS=+$$CLINDOC^TIULC1(+TIUTYP,TIUDA),TIUTYP=0
"RTN","TIURC1",60,0)
 . D DOCSPICK^TIULA2(.TIUTYP,TIUDCLS,"1A","","","+$$CANPICK^TIULP(+Y),+$$CANENTR^TIULP(+Y)")
"RTN","TIURC1",61,0)
 . I TIUTYP'>0 S TIUOUT=1
"RTN","TIURC1",62,0)
 . E  D
"RTN","TIURC1",63,0)
 . . S TIUTYP=$P($G(TIUTYP(1)),U,2)
"RTN","TIURC1",64,0)
 . . I $$CHKTITLE(+TIUTYP) S TIUOUT=1
"RTN","TIURC1",65,0)
 D DOCPRM^TIULC1(TIUTYP,.TIUDPRM,TIUDA)
"RTN","TIURC1",66,0)
 S TIUTNM=$$PNAME^TIULC1(+TIUTYP)
"RTN","TIURC1",67,0)
 S TIUTYP(1)="1^"_+TIUTYP_U_TIUTNM_U
"RTN","TIURC1",68,0)
 W !!,"Please Choose One or More Patients for whom the document should be copied:",!
"RTN","TIURC1",69,0)
 F  D  Q:+TIUPOP
"RTN","TIURC1",70,0)
 . D PATIENT^ORU1(.TIUPAT,1)
"RTN","TIURC1",71,0)
 . I +TIUPAT'>0 D  Q
"RTN","TIURC1",72,0)
 . . W !,$C(7),"No patient(s) selected..."
"RTN","TIURC1",73,0)
 . . I $$READ^TIUU("EA","Press RETURN to continue...") W !
"RTN","TIURC1",74,0)
 . . S TIUCHNG=0,TIUPOP=1
"RTN","TIURC1",75,0)
 . S TIUI=0 F  S TIUI=$O(TIUPAT(TIUI)) Q:+TIUI'>0  D
"RTN","TIURC1",76,0)
 . . N DA,DR,DFN,TIU,TIULMETH,TIUVMETH,TIUPATNM
"RTN","TIURC1",77,0)
 . . S DFN=+TIUPAT(TIUI),TIUPATNM=$P(TIUPAT(TIUI),U,2)
"RTN","TIURC1",78,0)
 . . S TIUVSUPP=+$$SUPPVSIT^TIULC1(TIUTYP)
"RTN","TIURC1",79,0)
 . . I TIUVSUPP'>0 D  I 1
"RTN","TIURC1",80,0)
 . . . S TIULMETH=$$GETLMETH^TIUEDI1(TIUTYP)
"RTN","TIURC1",81,0)
 . . . I '$L(TIULMETH) D  S TIUOUT=1 Q
"RTN","TIURC1",82,0)
 . . . . W !,$C(7),"No Visit Linkage Method defined for "
"RTN","TIURC1",83,0)
 . . . . W $$PNAME^TIULC1(TIUTYP),".",!,"Please contact IRM..."
"RTN","TIURC1",84,0)
 . . . . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","TIURC1",85,0)
 . . . W !!,"For Patient ",TIUPATNM
"RTN","TIURC1",86,0)
 . . . X TIULMETH
"RTN","TIURC1",87,0)
 . . E  D EVENT^TIUSRVP1(.TIU,DFN)
"RTN","TIURC1",88,0)
 . . I '$D(TIU("VSTR")) W !,$C(7),"Patient & Visit required." H 2 Q
"RTN","TIURC1",89,0)
 . . S TIUVMETH=$$GETVMETH^TIUEDI1(TIUTYP)
"RTN","TIURC1",90,0)
 . . I '$L(TIUVMETH) D  S TIUOUT=1 Q
"RTN","TIURC1",91,0)
 . . . W !,$C(7),"No Validation Method defined for "
"RTN","TIURC1",92,0)
 . . . W $$PNAME^TIULC1(TIUTYP),".",!,"Please contact IRM..."
"RTN","TIURC1",93,0)
 . . X TIUVMETH
"RTN","TIURC1",94,0)
 . . I $D(TIU),+$G(TIUASK) D
"RTN","TIURC1",95,0)
 . . . N TIUNEW,TIUITEM,DA,DR,DIE
"RTN","TIURC1",96,0)
 . . . S DA=$$GETRECNW^TIUEDI3(DFN,.TIU,TIUTYP(1),.TIUNEW,.TIUDPRM) Q:+DA'>0
"RTN","TIURC1",97,0)
 . . . I '+$G(TIUNEW) D  Q
"RTN","TIURC1",98,0)
 . . . . W !!,$C(7),"A ",$P(TIUTYP(1),U,3)," already exists for this visit."
"RTN","TIURC1",99,0)
 . . . . W !,"You may not use the copy function to overwrite an existing ",!,$$UPPER^TIULS($$STATUS^TIULC(DA))," ",$P(TIUTYP(1),U,3),".",!
"RTN","TIURC1",100,0)
 . . . . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","TIURC1",101,0)
 . . . D COPY0(DA,TIUOD0,.TIU),COPY12(DA,TIUOD0,TIUOD12,.TIU),COPY13(DA,TIUD13)
"RTN","TIURC1",102,0)
 . . . D COPY14(DA,TIUOD14,.TIU),COPY17(DA,TIUOD17),COPYTEXT(TIUDA,DA)
"RTN","TIURC1",103,0)
 . . . I $D(^TIU(8925,DA,"TEMP")) D MERGTEXT^TIUEDI1(DA,.TIU) K ^TIU(8925,+DA,"TEMP")
"RTN","TIURC1",104,0)
 . . . S DR=".05///"_$$UPPER^TIULS($$STATUS^TIULC(DA)),DIE=8925 D ^DIE
"RTN","TIURC1",105,0)
 . . . I +$D(^TIU(8925,+DA,"TEXT"))>9!(+$O(^TIU(8925,"DAD",+DA,0))>0) D
"RTN","TIURC1",106,0)
 . . . . N TIUDA,TIUCPYNG S TIUDA=+DA,TIUCPYNG=1 D EDIT1^TIURA
"RTN","TIURC1",107,0)
 . . . I '$G(DA) Q  ;Docmt deleted in TIURA
"RTN","TIURC1",108,0)
 . . . S TIUCHNG=1,TIUNREC=$G(TIUNREC)_$S(+$G(TIUNREC):",",1:"")_DA
"RTN","TIURC1",109,0)
 . S TIUPOP='+$$AGAIN
"RTN","TIURC1",110,0)
 Q
"RTN","TIURC1",111,0)
CHKTITLE(TIUTYP) ; Title Status
"RTN","TIURC1",112,0)
 N TIUBAD S TIUBAD=0
"RTN","TIURC1",113,0)
 I +$$CANPICK^TIULP(+TIUTYP)'>0 S TIUBAD=1 I 1
"RTN","TIURC1",114,0)
 E  I +$$CANENTR^TIULP(+TIUTYP)'>0 S TIUBAD=1
"RTN","TIURC1",115,0)
 Q TIUBAD
"RTN","TIURC1",116,0)
AGAIN() ; Ask again?
"RTN","TIURC1",117,0)
 N TIUY W !
"RTN","TIURC1",118,0)
 S TIUY=$$READ^TIUU("Y","Copy this note again","No")
"RTN","TIURC1",119,0)
 Q TIUY
"RTN","TIURC1",120,0)
COPY0(DA,TIUD0,TIU) ; Copy 0-node
"RTN","TIURC1",121,0)
 N DR,DIE S DIE=8925
"RTN","TIURC1",122,0)
 S DR=".02////"_DFN_";.03////"_$P($G(TIU("VISIT")),U)_";.04////"_$P(TIUD0,U,4)_";.07////"_$P($G(TIU("EDT")),U)_";.08////"_$P($G(TIU("LDT")),U)_";.09////"_$P(TIUD0,U,9)
"RTN","TIURC1",123,0)
 I $P($G(TIUDPRM(0)),U,16),'$P($G(^TIU(8925,+DA,0)),U,11),$$WORKOK^TIUPXAP1(+DA) S DR=DR_";.11////1" ;set flag to collect workload
"RTN","TIURC1",124,0)
 D ^DIE
"RTN","TIURC1",125,0)
 Q
"RTN","TIURC1",126,0)
COPY12(DA,TIUD0,TIUD12,TIU) ; Copy 12-node
"RTN","TIURC1",127,0)
 N DR,DIE S DIE=8925
"RTN","TIURC1",128,0)
 S DR="1201////"_$$NOW^TIULC_";1202////"_+$G(DUZ)_";1203////"_$P(TIUD12,U,3)_";1204////"_$G(DUZ)_";1205////"_$P($G(TIU("LOC")),U)
"RTN","TIURC1",129,0)
 S DR=DR_";1206////"_$P(TIUD12,U,6)_";1207////"_$P(TIUD12,U,7)_";1209////"_$P(TIUD12,U,9)
"RTN","TIURC1",130,0)
 I +$$REQCOSIG^TIULP(+TIUD0,DA,+$G(DUZ)) S DR=DR_";1208////"_$P(TIUD12,U,8)
"RTN","TIURC1",131,0)
 S DR=DR_";1210////"_$P(TIUD12,U,10)_";1211////"_+$G(TIU("VLOC"))_";1212////"_$P($G(TIU("INST")),U)
"RTN","TIURC1",132,0)
 D ^DIE
"RTN","TIURC1",133,0)
 Q
"RTN","TIURC1",134,0)
COPY13(DA,TIUD13,TIU) ; Copy 13-node
"RTN","TIURC1",135,0)
 N DR,DIE S DIE=8925
"RTN","TIURC1",136,0)
 S DR="1301////"_$$NOW^TIULC_";1302////"_$G(DUZ)_";1303////O;1307////"_$P(TIUD13,U,7)
"RTN","TIURC1",137,0)
 D ^DIE
"RTN","TIURC1",138,0)
 Q
"RTN","TIURC1",139,0)
COPY14(DA,TIUD14,TIU) ; Copy 14-node
"RTN","TIURC1",140,0)
 N DR,DIE S DIE=8925
"RTN","TIURC1",141,0)
 S DR="1401////"_$P($G(TIU("AD#")),U)_";1402////"_$P($G(TIU("TS")),U)_";1403////"_$P(TIUD14,U,3)_";1404////"_$P(TIUD14,U,4)
"RTN","TIURC1",142,0)
 D ^DIE
"RTN","TIURC1",143,0)
 Q
"RTN","TIURC1",144,0)
COPY17(DA,TIUD17) ; Copy Subject
"RTN","TIURC1",145,0)
 N DR,DIE S DIE=8925
"RTN","TIURC1",146,0)
 I $G(TIUD17)']"" Q
"RTN","TIURC1",147,0)
 S DR="1701////^S X=$G(TIUD17)" D ^DIE
"RTN","TIURC1",148,0)
 Q
"RTN","TIURC1",149,0)
COPYTEXT(TIUDA,DA) ; Copy text
"RTN","TIURC1",150,0)
 N TIUC,TIUI,TIUJ,TIULINE
"RTN","TIURC1",151,0)
 I +$O(^TIU(8925,+TIUDA,"TEXT",0)) M ^TIU(8925,+DA,"TEMP")=^TIU(8925,+TIUDA,"TEXT")
"RTN","TIURC1",152,0)
 S (TIUC,TIULINE)=0,TIUJ=+$P($G(^TIU(8925,+DA,"TEMP",0)),U,3)
"RTN","TIURC1",153,0)
 F  S TIUC=$O(^TIU(8925,"DAD",TIUDA,TIUC)) Q:+TIUC'>0  D
"RTN","TIURC1",154,0)
 . I +$$ISADDNDM^TIULC1(TIUC) Q
"RTN","TIURC1",155,0)
 . S TIUI=0 F  S TIUI=$O(^TIU(8925,+TIUC,"TEXT",TIUI)) Q:+TIUI'>0  D
"RTN","TIURC1",156,0)
 . . S TIUJ=+$G(TIUJ)+1
"RTN","TIURC1",157,0)
 . . S ^TIU(8925,+DA,"TEMP",TIUJ,0)=$G(^TIU(8925,+TIUC,"TEXT",TIUI,0))
"RTN","TIURC1",158,0)
 . . S ^TIU(8925,+DA,"TEMP",0)="^^"_TIUJ_"^"_TIUJ_"^"_DT_"^^"
"RTN","TIURC1",159,0)
 Q
"RTN","TIURD")
0^14^B45915368
"RTN","TIURD",1,0)
TIURD ; SLC/JER - Reassign actions ;4/25/05
"RTN","TIURD",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**4,58,61,100,109,173,184**;Jun 20, 1997
"RTN","TIURD",3,0)
 ;
"RTN","TIURD",4,0)
 ; Call to $$TIUREAS^MDAPI covered by IA# 3378
"RTN","TIURD",5,0)
 ; $$TIUREAS^MDAPI went out with MD 1.0, which was not mandated, so
"RTN","TIURD",6,0)
 ;checks are made for its existence before it is called.
"RTN","TIURD",7,0)
REASSIGN ; Reassign selected Documents
"RTN","TIURD",8,0)
 N TIUCHNG,TIULST,TIUI,RSTRCTD,TIUDAARY
"RTN","TIURD",9,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","TIURD",10,0)
 S TIUI=0
"RTN","TIURD",11,0)
 F  S TIUI=$O(VALMY(TIUI)) Q:+TIUI'>0  D  Q:$D(DIROUT)
"RTN","TIURD",12,0)
 . N TIUDA,DFN,TIU,TIUDATA,TIUVIEW
"RTN","TIURD",13,0)
 . S TIUDATA=$G(^TMP("TIURIDX",$J,TIUI))
"RTN","TIURD",14,0)
 . S TIUDA=+$P(TIUDATA,U,2) S RSTRCTD=$$DOCRES^TIULRR(TIUDA)
"RTN","TIURD",15,0)
 . W !!,"Processing Item #",TIUI,"..."
"RTN","TIURD",16,0)
 . I $$CANTSURG(TIUDA) H 1 Q  ;not permitted for surgery reports
"RTN","TIURD",17,0)
 . I RSTRCTD D  Q
"RTN","TIURD",18,0)
 . . W !!,$C(7),"Ok, no harm done...",! ; Echo denial message
"RTN","TIURD",19,0)
 . . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIURD",20,0)
 . I +$$HASIMG^TIURB2(TIUDA) D IMGNOTE^TIURB2 Q
"RTN","TIURD",21,0)
 . S TIUVIEW=$$CANDO^TIULP(TIUDA,"VIEW")
"RTN","TIURD",22,0)
 . I '+TIUVIEW D  Q
"RTN","TIURD",23,0)
 . . W !!,$C(7),$C(7),$C(7),$P(TIUVIEW,U,2),!
"RTN","TIURD",24,0)
 . . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","TIURD",25,0)
 . S TIUDAARY(TIUI)=TIUDA
"RTN","TIURD",26,0)
 . S TIUCHNG=0
"RTN","TIURD",27,0)
 . D EN^VALM("TIU REASSIGN")
"RTN","TIURD",28,0)
 . I +$G(TIUCHNG) D
"RTN","TIURD",29,0)
 . . S TIULST=$G(TIULST)_$S($G(TIULST)]"":",",1:"")_TIUI
"RTN","TIURD",30,0)
 ; -- Rebuild list: --
"RTN","TIURD",31,0)
 S TIUCHNG("RBLD")=1
"RTN","TIURD",32,0)
 D UPRBLD^TIURL(.TIUCHNG) K VALMY
"RTN","TIURD",33,0)
 S VALMBCK="R"
"RTN","TIURD",34,0)
 D VMSG^TIURS1($G(TIULST),.TIUDAARY,"reassigned")
"RTN","TIURD",35,0)
 Q
"RTN","TIURD",36,0)
 ;
"RTN","TIURD",37,0)
REASSIG1 ; Single record reassign
"RTN","TIURD",38,0)
 N TIUAUTH,TIURSSG,TIUNAME,DA,DR,DIE,TIUTYPE,TIUEDIT,TIUADD,TIUPROMO,TIUY
"RTN","TIURD",39,0)
 N TIUD0,TIUD12,TIUD13,TIUD14,TIUODA,TIUOUT K ^TMP("TIURTRCT",$J)
"RTN","TIURD",40,0)
 D FULL^VALM1
"RTN","TIURD",41,0)
 I $$CANTSURG(TIUDA) H 3 Q  ;not permitted for surgery reports
"RTN","TIURD",42,0)
 L +^TIU(8925,+TIUDA):1
"RTN","TIURD",43,0)
 E  W !?5,$C(7),$C(7),$C(7),"Another user is editing this entry." S TIUY=$$READ^TIUU("EA","Press RETURN to continue...") Q
"RTN","TIURD",44,0)
 ; Authorized? NO: echo why not & quit
"RTN","TIURD",45,0)
 I +$$HASIMG^TIURB2(TIUDA) D IMGNOTE^TIURB2 Q
"RTN","TIURD",46,0)
 I +$$ISADDNDM^TIULC1(TIUDA) D  I 1
"RTN","TIURD",47,0)
 . N TIUDAD
"RTN","TIURD",48,0)
 . S TIUDAD=+$P(^TIU(8925,TIUDA,0),U,6)
"RTN","TIURD",49,0)
 . I +$$DADORKID^TIUGBR(TIUDAD) D
"RTN","TIURD",50,0)
 . . S TIURSSG="0^You must first detach the ORIGINAL interdisciplinary entry."
"RTN","TIURD",51,0)
 E  I $$DADORKID^TIUGBR(TIUDA) D  I 1
"RTN","TIURD",52,0)
 . S TIURSSG="0^You must first detach interdisciplinary entries."
"RTN","TIURD",53,0)
 I '$D(TIURSSG) S TIURSSG=$$CANDO^TIULP(+TIUDA,"REASSIGN")
"RTN","TIURD",54,0)
 I +$G(TIURSSG)'>0 D  G REASS1X
"RTN","TIURD",55,0)
 . W !!,$C(7),$C(7),$C(7),$P(TIURSSG,U,2),!
"RTN","TIURD",56,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","TIURD",57,0)
 S TIUD0(0)=$G(^TIU(8925,+TIUDA,0)),TIUD12(0)=$G(^(12))
"RTN","TIURD",58,0)
 S TIUD13(0)=$G(^TIU(8925,+TIUDA,13)),TIUD14(0)=$G(^(14))
"RTN","TIURD",59,0)
 S TIUTYPE=$P(TIUD0(0),U)
"RTN","TIURD",60,0)
 S TIUNAME=$$PNAME^TIULC1(+TIUTYPE)
"RTN","TIURD",61,0)
 S TIUAUTH=$P(TIUD12(0),U,2)
"RTN","TIURD",62,0)
 W !,$C(7)
"RTN","TIURD",63,0)
 S TIUY=$$READ^TIUU("YO","Are you sure you want to REASSIGN this "_TIUNAME,"NO","^D REAS1^TIUDIRH")
"RTN","TIURD",64,0)
 I +TIUY'>0 S TIUOUT=1 G REASS1X
"RTN","TIURD",65,0)
 I +$P(TIUD0(0),U,5)>5 D  G:+$G(TIUOUT) REASS1X
"RTN","TIURD",66,0)
 . W !!,$C(7),$C(7),"The status of this document is: ",$$UP^XLFSTR($$STATUS^TIULC(TIUDA))
"RTN","TIURD",67,0)
 . I +$$GETSIG^TIURD2'>0 S TIUOUT=1
"RTN","TIURD",68,0)
 . W !
"RTN","TIURD",69,0)
 ; Addendum? YES: Ask intended action is move, swap with original, or
"RTN","TIURD",70,0)
 ; replace original
"RTN","TIURD",71,0)
 S TIUADD=$$ISADDNDM^TIULC1(+TIUDA)
"RTN","TIURD",72,0)
 I +TIUADD D  G REASS1X
"RTN","TIURD",73,0)
 . D REASSIGA
"RTN","TIURD",74,0)
 D REASSIGO^TIURD3
"RTN","TIURD",75,0)
REASS1X L -^TIU(8925,+TIUDA):1
"RTN","TIURD",76,0)
 I +$G(TIUOUT),+$G(TIUODA),+$G(TIUDA),$D(TIUD0(0)) D RECOVER^TIURD4(TIUODA,TIUDA,.TIUD0) S TIUDA=TIUODA
"RTN","TIURD",77,0)
 ; Remove additional signers who haven't signed from retracted original
"RTN","TIURD",78,0)
 I '+$G(TIUOUT),+$G(TIUODA) D
"RTN","TIURD",79,0)
 . I +$O(^TIU(8925.7,"B",+$G(TIUODA),0)) D DELSGNRS^TIURD4(TIUODA,1)
"RTN","TIURD",80,0)
 . D ALERTDEL^TIUALRT(TIUODA)
"RTN","TIURD",81,0)
 I '+$G(TIUOUT),+$G(TIUODA),+$$ISA^TIULX(+$G(TIUD0(0)),+$$CLASS^TIUCP) D
"RTN","TIURD",82,0)
 . N TIUCPY,TIUNVSTR
"RTN","TIURD",83,0)
 . Q:'$L($T(TIUREAS^MDAPI))
"RTN","TIURD",84,0)
 . S TIUNVSTR=$P(TIUD12(1),U,11)_";"_$P(TIUD0(1),U,7)
"RTN","TIURD",85,0)
 . S TIUNVSTR=TIUNVSTR_";"_$P(TIUD0(1),U,13)
"RTN","TIURD",86,0)
 . S TIUCPY=$$TIUREAS^MDAPI(+$P(TIUD0(0),U,2),+$P(TIUD14(0),U,5),+TIUODA,+$P(TIUD0(1),U,2),+$P($G(^TIU(8925,TIUDA,14)),U,5),TIUNVSTR,TIUDA)
"RTN","TIURD",87,0)
 D SEND^TIUALRT(TIUDA)
"RTN","TIURD",88,0)
 S VALMBCK=$S(+$G(TIUCHNG):"Q",1:"R") K ^TMP("TIURTRCT",$J)
"RTN","TIURD",89,0)
 Q
"RTN","TIURD",90,0)
 ;
"RTN","TIURD",91,0)
REASSIGO ; Reassign an original Document
"RTN","TIURD",92,0)
 G REASSIGO^TIURD3
"RTN","TIURD",93,0)
 ;
"RTN","TIURD",94,0)
REASSIGA ;Reassign an Addendum to an original DS
"RTN","TIURD",95,0)
 N TIUACT,TIUSET S TIUCHNG=0
"RTN","TIURD",96,0)
 W !,"Please choose the appropriate action for this Addendum:"
"RTN","TIURD",97,0)
 S TIUSET="M:move addendum to a different document"
"RTN","TIURD",98,0)
 S TIUSET=TIUSET_";P:promote addendum as document for another visit"
"RTN","TIURD",99,0)
 S TIUSET=TIUSET_";R:replace parent document with this addendum"
"RTN","TIURD",100,0)
 S TIUSET=TIUSET_";S:swap this addendum with its parent document"
"RTN","TIURD",101,0)
 S TIUACT=$$READ^TIUU("S^"_TIUSET,"Select Reassign Action","move")
"RTN","TIURD",102,0)
 I $P(TIUACT,U)="M" D MOVEADD^TIURD1(TIUDA) Q
"RTN","TIURD",103,0)
 I $P(TIUACT,U)="P" D PROMOTE^TIURD1(TIUDA) Q
"RTN","TIURD",104,0)
 I $P(TIUACT,U)="R" D REPLACE^TIURD1(TIUDA) Q
"RTN","TIURD",105,0)
 I $P(TIUACT,U)="S" D SWAPADD^TIURD1(TIUDA)
"RTN","TIURD",106,0)
 Q
"RTN","TIURD",107,0)
 ;
"RTN","TIURD",108,0)
CLAPPLNK ; Re-link selected Documents to different Client Records
"RTN","TIURD",109,0)
 N TIUCHNG,TIULST,TIUDA,DFN,TIU,TIUDATA,TIUEDIT,TIUI,TIUY,Y,DIROUT,TIUPOP
"RTN","TIURD",110,0)
 N TIUDAARY
"RTN","TIURD",111,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","TIURD",112,0)
 S TIUI=0 D FULL^VALM1
"RTN","TIURD",113,0)
 F  S TIUI=$O(VALMY(TIUI)) Q:+TIUI'>0  D  Q:$D(DIROUT)
"RTN","TIURD",114,0)
 . S TIUDATA=$G(^TMP("TIURIDX",$J,TIUI))
"RTN","TIURD",115,0)
 . S TIUDA=+$P(TIUDATA,U,2),TIUDAARY(TIUI)=TIUDA
"RTN","TIURD",116,0)
 . S TIUCHNG=0
"RTN","TIURD",117,0)
 . W !!,"Processing Item #",TIUI,"..."
"RTN","TIURD",118,0)
 . D CLAPPLN1(TIUDA)
"RTN","TIURD",119,0)
 . I +$G(TIUCHNG)=1 D
"RTN","TIURD",120,0)
 . . S TIULST=$G(TIULST)_$S($G(TIULST)]"":", ",1:"")_TIUI
"RTN","TIURD",121,0)
 S TIUCHNG("REFRESH")=1
"RTN","TIURD",122,0)
 D UPRBLD^TIURL(.TIUCHNG,.VALMY) K VALMY
"RTN","TIURD",123,0)
 S VALMBCK="R"
"RTN","TIURD",124,0)
 D VMSG^TIURS1($G(TIULST),.TIUDAARY,"re-linked")
"RTN","TIURD",125,0)
 Q
"RTN","TIURD",126,0)
 ;
"RTN","TIURD",127,0)
CLAPPLN1(TIUDA) ; Re-link a single record to the client application
"RTN","TIURD",128,0)
 N TIUREASX,CANLNK,ACTION,ISPRF,OLDLINK
"RTN","TIURD",129,0)
 I '$D(^TIU(8925,TIUDA,0)) D  Q
"RTN","TIURD",130,0)
 . W !!,$C(7),"Document no longer exists.",!
"RTN","TIURD",131,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","TIURD",132,0)
 I $$CANTSURG(TIUDA) H 3 Q  ;not permitted for surgery reports
"RTN","TIURD",133,0)
 S ISPRF=$$ISPRFDOC^TIUPRF(TIUDA) ;Patient Record Flag
"RTN","TIURD",134,0)
 I ISPRF S ACTION="LINK TO FLAG",OLDLINK=$$GETLINK^DGPFAPI1(TIUDA)
"RTN","TIURD",135,0)
 I 'ISPRF S ACTION="LINK WITH REQUEST",OLDLINK=$P($G(^TIU(8925,TIUDA,14)),U,5)
"RTN","TIURD",136,0)
 I +$$ISADDNDM^TIULC1(TIUDA) D  Q
"RTN","TIURD",137,0)
 . W !!,$C(7),"Links for ADDENDA can't be independently changed.",!
"RTN","TIURD",138,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","TIURD",139,0)
 S TIUREASX=$$REASSIGN^TIULC1(+$G(^TIU(8925,TIUDA,0)))
"RTN","TIURD",140,0)
 I TIUREASX']"" D  Q
"RTN","TIURD",141,0)
 . W !!,$C(7),"No PACKAGE REASSIGNMENT ACTION Defined.",!
"RTN","TIURD",142,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","TIURD",143,0)
 I $$DADORKID^TIUGBR(TIUDA) D  Q  ;**100**
"RTN","TIURD",144,0)
 . S CANLNK="0^You must first detach interdisciplinary entries"
"RTN","TIURD",145,0)
 . W !!,$C(7),$C(7),"You must first detach interdisciplinary entries",!
"RTN","TIURD",146,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","TIURD",147,0)
 S CANLNK=$$CANDO^TIULP(+TIUDA,ACTION)
"RTN","TIURD",148,0)
 I +CANLNK'>0 D  Q
"RTN","TIURD",149,0)
 . W !!,$C(7),$C(7),$P(CANLNK,U,2),!
"RTN","TIURD",150,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","TIURD",151,0)
 X TIUREASX
"RTN","TIURD",152,0)
 I ISPRF,OLDLINK'=$$GETLINK^DGPFAPI1(TIUDA) S TIUCHNG=1
"RTN","TIURD",153,0)
 I 'ISPRF,$P($G(^TIU(8925,TIUDA,14)),U,5)'=OLDLINK S TIUCHNG=1
"RTN","TIURD",154,0)
 Q
"RTN","TIURD",155,0)
 ;
"RTN","TIURD",156,0)
CANTSURG(TIUDA) ; If TIUDA is surg docmt, write can't do this action and
"RTN","TIURD",157,0)
 ;return 1 for can't do it P184
"RTN","TIURD",158,0)
 N TIUY,CANT S CANT=0
"RTN","TIURD",159,0)
 D ISSURG^TIUSROI(.TIUY,+$G(^TIU(8925,TIUDA,0)))
"RTN","TIURD",160,0)
 I '+TIUY Q CANT
"RTN","TIURD",161,0)
 S CANT=1 W !,"This action is no longer permitted for SURGICAL REPORTS"
"RTN","TIURD",162,0)
 Q CANT
"RTN","TIURE")
0^17^B29422878
"RTN","TIURE",1,0)
TIURE ; SLC/JER - Error handler actions ;3/30/05
"RTN","TIURE",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**3,21,81,131,113,184**;Jun 20, 1997
"RTN","TIURE",3,0)
PRINT ; Print Buffer record associated w/unresolved filing error
"RTN","TIURE",4,0)
 N TIUDA,TIUDATA,TIUI,DIROUT
"RTN","TIURE",5,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","TIURE",6,0)
 S TIUI=0
"RTN","TIURE",7,0)
 F  S TIUI=$O(VALMY(TIUI)) Q:+TIUI'>0  D  Q:$D(DIROUT)
"RTN","TIURE",8,0)
 . S TIUDATA=$G(^TMP("TIUERRIDX",$J,TIUI))
"RTN","TIURE",9,0)
 . S (TIUDA,TIUDA(TIUI))=+$P(TIUDATA,U,3) D RESTORE^TIULM(+$O(@VALMAR@("PICK",TIUI,0)))
"RTN","TIURE",10,0)
 . I +TIUDA'>0!'$D(^TIU(8925.2,+TIUDA,0))!+$P(^TIU(8925.4,+$P(TIUDATA,U,2),0),U,6) W !!,"Item #",+TIUI," is already resolved." K TIUDA(TIUI) H 3 Q
"RTN","TIURE",11,0)
 I $D(TIUDA)'<9 D
"RTN","TIURE",12,0)
 . S ZTRTN="PRINT1^TIURE",ZTDESC="Print Report Buffer"
"RTN","TIURE",13,0)
 . D CLEAR^VALM1,DEVICE^TIUPRDS
"RTN","TIURE",14,0)
 . S TIUI=$$READ^TIUU("FOA","Press RETURN to continue...")
"RTN","TIURE",15,0)
 K VALMY S VALMBCK="R"
"RTN","TIURE",16,0)
 Q
"RTN","TIURE",17,0)
PRINT1 ; Print a single buffer record
"RTN","TIURE",18,0)
 N DIC,TIUI,FLDS,FR,TO,L,BY,IOP S TIUI=0
"RTN","TIURE",19,0)
 F  S TIUI=$O(TIUDA(TIUI)) Q:+TIUI'>0  D
"RTN","TIURE",20,0)
 . S IOP=$S($D(ZTIO):ZTIO,$D(ION):ION,1:"") Q:IOP']""
"RTN","TIURE",21,0)
 . S DIC="^TIU(8925.2,",FLDS="[TIU PRINT REPORT BUFFER]",L=0
"RTN","TIURE",22,0)
 . S BY=.01,(FR,TO)=+$G(^TIU(8925.2,+TIUDA(TIUI),0))
"RTN","TIURE",23,0)
 . D EN1^DIP
"RTN","TIURE",24,0)
 Q
"RTN","TIURE",25,0)
EDIT ; Edit Buffer record associated w/unresolved filing error
"RTN","TIURE",26,0)
 N TIUDA,BUFDA,TIUDATA,TIUI,DIROUT,TIUDI
"RTN","TIURE",27,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","TIURE",28,0)
 S TIUI=0
"RTN","TIURE",29,0)
 F  S TIUI=$O(VALMY(TIUI)) Q:+TIUI'>0  D  Q:$D(DIROUT)
"RTN","TIURE",30,0)
 . N VALMY
"RTN","TIURE",31,0)
 . S TIUDATA=$G(^TMP("TIUERRIDX",$J,TIUI))
"RTN","TIURE",32,0)
 . S BUFDA=+$P(TIUDATA,U,3)
"RTN","TIURE",33,0)
 . W !!,"Resolving Event #",TIUI
"RTN","TIURE",34,0)
 . S TIUDA=+$P(TIUDATA,U,2)
"RTN","TIURE",35,0)
 . D EN^VALM("TIU DISPLAY FILING EVENT")
"RTN","TIURE",36,0)
 . D RESTORE^TIULM(+$O(@VALMAR@("PICK",TIUI,0)))
"RTN","TIURE",37,0)
 W !,"Refreshing the list."
"RTN","TIURE",38,0)
 M TIUDI=^TMP("TIUERR",$J,"DIV")
"RTN","TIURE",39,0)
 D BUILD^TIUELST($P(^TMP("TIUERR",$J,0),U,2),$P(^(0),U,3),TIUEDT,TIULDT,.TIUDI)
"RTN","TIURE",40,0)
 K VALMY S:'$D(VALMBCK) VALMBCK="R"
"RTN","TIURE",41,0)
 Q
"RTN","TIURE",42,0)
EDIT1 ; Single record edit
"RTN","TIURE",43,0)
 ; Receives TIUDATA
"RTN","TIURE",44,0)
 N DIC,ERRDA,ERRTYPE,RETRY,DWPK K XQAKILL
"RTN","TIURE",45,0)
 D FULL^VALM1
"RTN","TIURE",46,0)
 I '$D(TIUPRM0)!'$D(TIUPRM1) D SETPARM^TIULE
"RTN","TIURE",47,0)
 S ERRDA=+$P(TIUDATA,U,2),ERRTYPE=$P(^TIU(8925.4,+ERRDA,0),U,8)
"RTN","TIURE",48,0)
 I +ERRTYPE=0 W !!,"Item #",+TIUDATA," was a successful filing event." H 3 Q
"RTN","TIURE",49,0)
 I +ERRTYPE=1 D FILERR(ERRDA)
"RTN","TIURE",50,0)
 I +ERRTYPE=2 D FLDERR(ERRDA)
"RTN","TIURE",51,0)
 Q
"RTN","TIURE",52,0)
FILERR(ERRDA) ; Resolve filing errors
"RTN","TIURE",53,0)
 N TIUI,INQUIRE,BUFDA,TIUTYPE,RESCODE,TIUDONE
"RTN","TIURE",54,0)
 N TIUEVNT,TIUSKIP,ERR0,STATUS,PRFILERR
"RTN","TIURE",55,0)
 ; Set TIUEVNT for PN resolve code:
"RTN","TIURE",56,0)
 S TIUEVNT=+ERRDA
"RTN","TIURE",57,0)
 S TIUI=0,ERR0=$G(^TIU(8925.4,TIUEVNT,0)),STATUS=$P(ERR0,U,6)
"RTN","TIURE",58,0)
 I STATUS=1 W !,"Error has already been resolved.",! Q
"RTN","TIURE",59,0)
 S BUFDA=+$P(ERR0,U,5) I +BUFDA'>0 Q
"RTN","TIURE",60,0)
 I TIUEVNT D  I +$G(TIUDONE)!$G(TIUSKIP) G FILEX
"RTN","TIURE",61,0)
 . D WRITEHDR^TIUPEVNT(TIUEVNT)
"RTN","TIURE",62,0)
 . S TIUTYPE=$P(ERR0,U,3)
"RTN","TIURE",63,0)
 . I $L(TIUTYPE) S TIUTYPE=+$$WHATYPE^TIUPUTPN(TIUTYPE)
"RTN","TIURE",64,0)
 . I TIUTYPE>0 S RESCODE=$$FIXCODE^TIULC1(+TIUTYPE)
"RTN","TIURE",65,0)
 . ;E  S RESCODE="D GETPAT^TIUCHLP"
"RTN","TIURE",66,0)
 . I $G(RESCODE)]"" D  Q
"RTN","TIURE",67,0)
 . . W ! S INQUIRE=$$READ^TIUU("YO","Inquire to patient record","YES","^D INQRHELP^TIUPEVNT")
"RTN","TIURE",68,0)
 . . I $D(DIRUT) S TIUSKIP=1 Q
"RTN","TIURE",69,0)
 . . I +INQUIRE X RESCODE
"RTN","TIURE",70,0)
 . W !!,"Filing error resolution code could not found for this document type.",!,"Please edit the buffered data directly and refile."
"RTN","TIURE",71,0)
 W !!,"You may now edit the buffered upload data in an attempt to resolve error:",!,$P(ERR0,U,4),!
"RTN","TIURE",72,0)
 I '$$READ^TIUU("EA","Press RETURN to continue and edit the buffer or '^' to exit: ") G FILEX
"RTN","TIURE",73,0)
 S DIC="^TIU(8925.2,"_+BUFDA_",""TEXT"",",DWPK=1 D EN^DIWE
"RTN","TIURE",74,0)
 S RETRY=$$READ^TIUU("YO","Now would you like to retry the filer","YES","^D FIL^TIUDIRH")
"RTN","TIURE",75,0)
 I +RETRY D
"RTN","TIURE",76,0)
 . S PRFILERR=1 ; Tell Patient Record Flag lookup to get flag link
"RTN","TIURE",77,0)
 . D ALERTDEL^TIUPEVNT(+BUFDA),RESOLVE^TIUPEVNT(TIUEVNT)
"RTN","TIURE",78,0)
 . K TIUDONE
"RTN","TIURE",79,0)
 . D FILE^TIUUPLD(+BUFDA)
"RTN","TIURE",80,0)
 . I '$G(TIUDONE) W !,"Old error marked resolved; new error created.  New error may take several more",!,"seconds to file, and may not be within current date/time range.",! H 5
"RTN","TIURE",81,0)
FILEX S VALMBCK="Q" ;TIU*1*81 resolving twice creates errors so don't permit.
"RTN","TIURE",82,0)
 Q
"RTN","TIURE",83,0)
FLDERR(EVNTDA) ; Resolve field errors
"RTN","TIURE",84,0)
 N DIE,DA,DR,ERRDESC,EVNTDA1,EVNTREC,TIUFIX,ERR0,STATUS
"RTN","TIURE",85,0)
 S EVNTDA1=0
"RTN","TIURE",86,0)
 S ERR0=^TIU(8925.4,+EVNTDA,0),STATUS=$P(ERR0,U,6)
"RTN","TIURE",87,0)
 I STATUS=1 W "Error has already been resolved",! Q  ;TIU*1*81
"RTN","TIURE",88,0)
 S ERRDESC=$P(ERR0,U,4)
"RTN","TIURE",89,0)
 W !!,"You may now enter the correct information:",!
"RTN","TIURE",90,0)
 W !,ERRDESC
"RTN","TIURE",91,0)
 F  S EVNTDA1=$O(^TIU(8925.4,EVNTDA,1,EVNTDA1)) Q:+EVNTDA1'>0  D
"RTN","TIURE",92,0)
 . S EVNTREC=$G(^TIU(8925.4,EVNTDA,1,EVNTDA1,0)) Q:+EVNTREC'>0
"RTN","TIURE",93,0)
 . S DIE=$P(EVNTREC,U),DA=$P(EVNTREC,U,2)
"RTN","TIURE",94,0)
 . S DR=$P(EVNTREC,U,3)_"//"_$P(EVNTREC,U,4)
"RTN","TIURE",95,0)
 . I $$FIXED^TIUPEVN1(DIE,+DA,+DR) Q  ;P81 don't ask if already fixed; moved from TIUPEVNT
"RTN","TIURE",96,0)
 . D ^DIE
"RTN","TIURE",97,0)
 . ; P81 If missing field was just corrected, delete alert for that field:
"RTN","TIURE",98,0)
 . S TIUFIX=$$FIXED^TIUPEVN1(DIE,+DA,+DR) ; TIU*1*81 moved from TIUPEVNT
"RTN","TIURE",99,0)
 . I +TIUFIX=1 N XQAKILL,XQAID S XQAKILL=0,XQAID="TIUERR,"_+EVNTDA_","_+EVNTDA1 D DELETEA^XQALERT
"RTN","TIURE",100,0)
 . ; If entry is a TIU Document, do Post-filing action and SEND^TIUALRT
"RTN","TIURE",101,0)
 . I DIE="^TIU(8925," D
"RTN","TIURE",102,0)
 . . N TIUPOST,TIUREC,DR,DIE
"RTN","TIURE",103,0)
 . . S TIUPOST=$$POSTFILE^TIULC1(+$G(^TIU(8925,DA,0)))
"RTN","TIURE",104,0)
 . . S TIUREC("#")=DA
"RTN","TIURE",105,0)
 . . I TIUPOST]"" X TIUPOST I 1
"RTN","TIURE",106,0)
 . . D SEND^TIUALRT(DA)
"RTN","TIURE",107,0)
 D FLDRSLV^TIUPEVN1(EVNTDA) ; TIU*1*81 moved from TIUPEVNT
"RTN","TIURE",108,0)
 Q
"RTN","TIURS1")
0^10^B72987985
"RTN","TIURS1",1,0)
TIURS1 ; SLC/JER - Additional /es/ actions ;1/18/05
"RTN","TIURS1",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**7,36,58,100,109,142,156,184**;Jun 20, 1997
"RTN","TIURS1",3,0)
 ;12/11/00 Moved ELSIG,MULTIPRN,LIST here from TIURS
"RTN","TIURS1",4,0)
ELSIG ; Sign rec
"RTN","TIURS1",5,0)
 N TIULST,TIUSLST,TIURJCT,TIUES,TIUI,X,X1,Y,TIUDAARY,TIUCHNG
"RTN","TIURS1",6,0)
 I '$D(TIUPRM0) D SETPARM^TIULE
"RTN","TIURS1",7,0)
 I $P(TIUPRM0,U,2)'>0 W !,"Electronic signature not yet enabled." H 3 G ELSIGX
"RTN","TIURS1",8,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","TIURS1",9,0)
 S TIUI=0 I $D(VALMY)>9 D CLEAR^VALM1
"RTN","TIURS1",10,0)
 F  S TIUI=$O(VALMY(TIUI)) Q:+TIUI'>0  D
"RTN","TIURS1",11,0)
 . N TIU0,TIU12,TIUSTAT,TIUEVNT,TIUTYPE,TIUPOP,TIU15,TIUDPRM
"RTN","TIURS1",12,0)
 . N ASK,SIGNER,COSIGNER,XTRASGNR,TIUDATA,TIUDA,RSTRCTD
"RTN","TIURS1",13,0)
 . S (ASK,TIUPOP)=0
"RTN","TIURS1",14,0)
 . S TIUDATA=$G(^TMP("TIURIDX",$J,TIUI))
"RTN","TIURS1",15,0)
 . S TIUDA=$P(TIUDATA,U,2) S RSTRCTD=$$DOCRES^TIULRR(TIUDA)
"RTN","TIURS1",16,0)
 . I RSTRCTD D  Q
"RTN","TIURS1",17,0)
 . . W !!,$C(7),"Ok, no harm done...",! ; Echo denial message
"RTN","TIURS1",18,0)
 . . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIURS1",19,0)
 . S TIU0=$G(^TIU(8925,+TIUDA,0)),TIU12=$G(^(12)),TIU15=$G(^(15))
"RTN","TIURS1",20,0)
 . S SIGNER=$S(+$P(TIU12,U,4):$P(TIU12,U,4),1:$P(TIU12,U,2))
"RTN","TIURS1",21,0)
 . S COSIGNER=$P(TIU12,U,8)
"RTN","TIURS1",22,0)
 . I (DUZ'=SIGNER),(DUZ'=COSIGNER) S XTRASGNR=+$O(^TIU(8925.7,"AE",+TIUDA,+DUZ,0))
"RTN","TIURS1",23,0)
 . S TIUSTAT=+$P(TIU0,U,5)
"RTN","TIURS1",24,0)
 . S TIUTYPE=$$PNAME^TIULC1(+TIU0)
"RTN","TIURS1",25,0)
 . S TIUEVNT=$S(TIUSTAT'>5:"SIGNATURE",+$G(XTRASGNR):"SIGNATURE",1:"COSIGNATURE")
"RTN","TIURS1",26,0)
 . D DOCPRM^TIULC1(+TIU0,.TIUDPRM,TIUDA)
"RTN","TIURS1",27,0)
 . S ASK=$$CANDO^TIULP(TIUDA,TIUEVNT)
"RTN","TIURS1",28,0)
 . I +ASK>0 D
"RTN","TIURS1",29,0)
 . . L +^TIU(8925,+TIUDA):1
"RTN","TIURS1",30,0)
 . . E  S ASK="0^ Another user is editing this entry."
"RTN","TIURS1",31,0)
 . I +ASK'>0,$P(ASK,U,2)]"" D  I 1
"RTN","TIURS1",32,0)
 . . D FULL^VALM1
"RTN","TIURS1",33,0)
 . . W !!,"Item #",TIUI,": ",$P(ASK,U,2),! K VALMY(TIUI)
"RTN","TIURS1",34,0)
 . . W !,"Removed from signature list.",!
"RTN","TIURS1",35,0)
 . . I $$READ^TIUU("FOA","Press RETURN to continue...")
"RTN","TIURS1",36,0)
 . E  D
"RTN","TIURS1",37,0)
 . . ;If document is a clinical procedures title AND (P184) this is not an additional signature, check if clinical
"RTN","TIURS1",38,0)
 . . ;procedure fields are required.  If the fields are required, prompt for
"RTN","TIURS1",39,0)
 . . ;them and don't permit the user to sign unless the fields are defined.
"RTN","TIURS1",40,0)
 . . I '$G(XTRASGNR),+$$ISA^TIULX(+TIU0,+$$CLASS^TIUCP),$$REQCPF^TIULP(+$P($G(^TIU(8925,+TIUDA,14)),U,5)) D  Q:+TIUPOP
"RTN","TIURS1",41,0)
 . . . N TIUCPFLD
"RTN","TIURS1",42,0)
 . . . W !!,"Item #",TIUI,": ",TIUTYPE," for "
"RTN","TIURS1",43,0)
 . . . W $$PTNAME^TIULC1($P(TIU0,U,2))," will need Procedure Summary Code and Date/Time Performed..."
"RTN","TIURS1",44,0)
 . . . I $G(^TIU(8925,+TIUDA,702)),$P(^(702),U)]"",$P(^(702),U,2)]"" S TIUCPFLD=1 Q
"RTN","TIURS1",45,0)
 . . . S TIUCPFLD=$$ASKCPF^TIURS(TIUDA)
"RTN","TIURS1",46,0)
 . . . I +TIUCPFLD'>0 D
"RTN","TIURS1",47,0)
 . . . . S TIUPOP=1
"RTN","TIURS1",48,0)
 . . . . W !!,"Item #",TIUI,": MUST have a Procedure Summary Code and Date/Time Performed",!,"before you may sign."
"RTN","TIURS1",49,0)
 . . . . W !!,"Removed from signature list.",!
"RTN","TIURS1",50,0)
 . . . . I $$READ^TIUU("FOA","Press RETURN to continue...")
"RTN","TIURS1",51,0)
 . . I $S(+$$REQCOSIG^TIULP(+TIU0,+TIUDA,DUZ):1,+$P(TIU15,U,6):1,1:0),(+$P(TIU12,U,8)'>0) D  Q:+TIUPOP
"RTN","TIURS1",52,0)
 . . . N COSIGNER
"RTN","TIURS1",53,0)
 . . . W !!,"Item #",TIUI,": ",TIUTYPE," for "
"RTN","TIURS1",54,0)
 . . . W $$PTNAME^TIULC1($P(TIU0,U,2))," will need cosignature..."
"RTN","TIURS1",55,0)
 . . . S COSIGNER=$$ASKCSNR^TIURS(TIUDA,DUZ)
"RTN","TIURS1",56,0)
 . . . I +COSIGNER'>0 D
"RTN","TIURS1",57,0)
 . . . . S TIUPOP=1
"RTN","TIURS1",58,0)
 . . . . W !!,"Item #",TIUI,": MUST have a cosigner, before you may sign."
"RTN","TIURS1",59,0)
 . . . . W !!,"Removed from signature list.",!
"RTN","TIURS1",60,0)
 . . . . I $$READ^TIUU("FOA","Press RETURN to continue...")
"RTN","TIURS1",61,0)
 . . N TIU,TIUY
"RTN","TIURS1",62,0)
 . . D EN^VALM("TIU SIGN/COSIGN")
"RTN","TIURS1",63,0)
 I $D(TIUSLST)'>9 D  G ELSIGX
"RTN","TIURS1",64,0)
 . S VALMSG="** Signature List Empty...Nothing signed. **"
"RTN","TIURS1",65,0)
 I $D(TIUSLST)>9 D
"RTN","TIURS1",66,0)
 . N TIUIO
"RTN","TIURS1",67,0)
 . S TIUES=$$ASKSIG^TIULA1
"RTN","TIURS1",68,0)
 . I '+TIUES S VALMSG="** Nothing Signed. **" D FIXLSTNW^TIULM Q
"RTN","TIURS1",69,0)
 . D FULL^VALM1
"RTN","TIURS1",70,0)
 . D MULTIPRN(.TIUSLST,.TIUIO)
"RTN","TIURS1",71,0)
 . S TIUI=0 F  S TIUI=$O(TIUSLST(TIUI)) Q:+TIUI'>0  D
"RTN","TIURS1",72,0)
 . . N TIUPY,XTRASGNR
"RTN","TIURS1",73,0)
 . . S TIUDATA=$G(^TMP("TIURIDX",$J,TIUI)),TIUDA=$P(TIUDATA,U,2)
"RTN","TIURS1",74,0)
 . . S TIUDAARY(TIUI)=TIUDA
"RTN","TIURS1",75,0)
 . . S TIULST=$G(TIULST)_$S($G(TIULST)]"":",",1:"")_TIUI
"RTN","TIURS1",76,0)
 . . S XTRASGNR=+$P(TIUSLST(TIUI),U,3)
"RTN","TIURS1",77,0)
 . . I +$G(XTRASGNR) D ADDSIG^TIURS1(TIUDA,XTRASGNR)
"RTN","TIURS1",78,0)
 . . I '+$G(XTRASGNR) D ES^TIURS(TIUDA,TIUES)
"RTN","TIURS1",79,0)
 . . I +TIUSLST(TIUI),(TIUIO]"") D RPC^TIUPD(.TIUPY,TIUDA,TIUIO,$P(TIUSLST(TIUI),U,2))
"RTN","TIURS1",80,0)
 . D FULL^VALM1
"RTN","TIURS1",81,0)
ELSIGX I $G(TIUCHNG("ADDM"))!$G(TIUCHNG("DELETE")) S TIUCHNG("RBLD")=1
"RTN","TIURS1",82,0)
 E  S TIUCHNG("UPDATE")=1
"RTN","TIURS1",83,0)
 D UPRBLD^TIURL(.TIUCHNG,.VALMY) K VALMY
"RTN","TIURS1",84,0)
 S VALMBCK="R"
"RTN","TIURS1",85,0)
 D VMSG($G(TIULST),.TIUDAARY,"signed")
"RTN","TIURS1",86,0)
 Q
"RTN","TIURS1",87,0)
VMSG(TIULST,TIUDAARY,ACTION) ; Set VALMSG for messagebar, bold changed items
"RTN","TIURS1",88,0)
 N TIUI,LINENO,ACTFIRST
"RTN","TIURS1",89,0)
 S ACTFIRST=$S(ACTION="Encounter Data Edited":1,ACTION="Signers identified/edited":1,ACTION="Title changed":1,1:0)
"RTN","TIURS1",90,0)
 I TIULST']"" D  Q
"RTN","TIURS1",91,0)
 . I ACTFIRST S VALMSG="** No changes made. **" Q
"RTN","TIURS1",92,0)
 . S VALMSG="** Nothing "_ACTION_". **"
"RTN","TIURS1",93,0)
 I ACTION="copied" S ACTION="copied; See end of list"
"RTN","TIURS1",94,0)
 S TIULST=$$NEWLST(TIULST,.TIUDAARY)
"RTN","TIURS1",95,0)
 I TIULST]"" D
"RTN","TIURS1",96,0)
 . I ACTFIRST D  Q
"RTN","TIURS1",97,0)
 . . S VALMSG="** "_ACTION_" for item"_$S($L(TIULST,",")>1:"s ",$L(TIULST,"-")>1:"s ",1:" ")_TIULST_". **"
"RTN","TIURS1",98,0)
 . S VALMSG="** Item"_$S($L(TIULST,",")>1:"s ",$L(TIULST,"-")>1:"s ",1:" ")_TIULST_" "_ACTION_". **"
"RTN","TIURS1",99,0)
 I TIULST']"" D
"RTN","TIURS1",100,0)
 . I ACTFIRST D  Q
"RTN","TIURS1",101,0)
 . . S VALMSG="** "_ACTION_"; item(s) no longer in list. **"
"RTN","TIURS1",102,0)
 . S VALMSG="** Item"_$S($L(TIULST,",")>1:"s ",$L(TIULST,"-")>1:"s ",1:" ")_TIULST_" "_ACTION_", no longer in list. **"
"RTN","TIURS1",103,0)
 . ;S VALMSG="** Item(s) "_ACTION_", no longer in list. **"
"RTN","TIURS1",104,0)
 Q:$G(^TMP("TIUR",$J,"RTN"))="TIUROR"
"RTN","TIURS1",105,0)
 F TIUI=1:1 S LINENO=$P(TIULST,", ",TIUI) Q:'LINENO  D
"RTN","TIURS1",106,0)
 . D CNTRL^VALM10(LINENO,1,$G(VALM("RM")),IOINHI,IOINORM)
"RTN","TIURS1",107,0)
 Q
"RTN","TIURS1",108,0)
NEWLST(TIULST,TIUDAARY) ; Return TIULST with updated item numbers
"RTN","TIURS1",109,0)
 N TIUI,TIULNO,TIUDA,TIUNLNO,TIUNLST
"RTN","TIURS1",110,0)
 S TIUNLST=""
"RTN","TIURS1",111,0)
 F TIUI=1:1 S TIULNO=$P(TIULST,",",TIUI) Q:'TIULNO  D
"RTN","TIURS1",112,0)
 . S TIUDA=TIUDAARY(TIULNO),TIUNLNO=$O(^TMP("TIUR",$J,"IEN",TIUDA,0))
"RTN","TIURS1",113,0)
 . I TIUNLNO S TIUNLST=$G(TIUNLST)_$S($G(TIUNLST)]"":", ",1:"")_TIUNLNO
"RTN","TIURS1",114,0)
 Q TIUNLST
"RTN","TIURS1",115,0)
 ;
"RTN","TIURS1",116,0)
MULTIPRN(TIUSLST,TIUIO) ; ask device
"RTN","TIURS1",117,0)
 N TIUI,TIUASK,TIUION,TIUPOK,IO,TIUPLIST,TIUSCRN S (TIUI,TIUPOK)=0
"RTN","TIURS1",118,0)
 F  S TIUI=$O(TIUSLST(TIUI)) Q:TIUI'>0!+TIUPOK  S:+TIUSLST(TIUI) TIUPOK=1
"RTN","TIURS1",119,0)
 I '+TIUPOK S TIUIO="" Q
"RTN","TIURS1",120,0)
 S TIUPLIST=$$LIST(.TIUSLST)
"RTN","TIURS1",121,0)
 W !!,"Please specify the device for printing item"
"RTN","TIURS1",122,0)
 W $S(TIUPLIST[",":"s",TIUPLIST["-":"s",1:""),": ",TIUPLIST,!!
"RTN","TIURS1",123,0)
 S TIUSCRN="I $L($G(^%ZIS(1,+Y,""TYPE""))),("";HFS;MT;BAR;VTRM;RES;CHAN;IMPC;""'[("";""_^(""TYPE"")_"";""))"
"RTN","TIURS1",124,0)
 S TIUION=$$DEVICE^TIUDEV(.TIUIO,"LAST","N",TIUSCRN,"Q")
"RTN","TIURS1",125,0)
 I '$L(TIUION) S TIUIO=""
"RTN","TIURS1",126,0)
 D ^%ZISC
"RTN","TIURS1",127,0)
 Q
"RTN","TIURS1",128,0)
LIST(LIST) ; build print list
"RTN","TIURS1",129,0)
 N TIUY,TIUI S TIUI=0
"RTN","TIURS1",130,0)
 F  S TIUI=$O(LIST(TIUI)) Q:+TIUI'>0  D
"RTN","TIURS1",131,0)
 . S:+LIST(TIUI) TIUY=$G(TIUY)_$S($G(TIUY)]"":", ",1:"")_TIUI
"RTN","TIURS1",132,0)
 Q $G(TIUY)
"RTN","TIURS1",133,0)
 ;
"RTN","TIURS1",134,0)
ADDSIG(TIUDA,DA) ; Apply extra signatures to a document
"RTN","TIURS1",135,0)
 N DIE,DR
"RTN","TIURS1",136,0)
 S DIE=8925.7
"RTN","TIURS1",137,0)
 S DR=".04////"_$$NOW^TIULC_";.05////"_DUZ_";.06///^S X=$$SIGNAME^TIULS("_DUZ_");.07///^S X=$$SIGTITL^TIULS("_DUZ_");.08////E"
"RTN","TIURS1",138,0)
 D ^DIE
"RTN","TIURS1",139,0)
 D SEND^TIUALRT(TIUDA)
"RTN","TIURS1",140,0)
 Q
"RTN","TIURS1",141,0)
CNVPOST ; Change Titles/Convert Postings
"RTN","TIURS1",142,0)
 N TIUI,TIULST,Y,TIUVIEW,TIUCHNG,TIUDAARY
"RTN","TIURS1",143,0)
 I $G(TIUGLINK) W !,"Please finish attaching the interdisciplinary note before changing title.",! H 3 Q
"RTN","TIURS1",144,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","TIURS1",145,0)
 S TIUI=0
"RTN","TIURS1",146,0)
 I +$O(VALMY(0)) D FULL^VALM1
"RTN","TIURS1",147,0)
 F  S TIUI=$O(VALMY(TIUI)) Q:+TIUI'>0  D  Q:$D(DIROUT)
"RTN","TIURS1",148,0)
 . N TIU,TIUDA,DFN,TIUDATA,VALMY,XQORM,TIUVIEW,RSTRCTD
"RTN","TIURS1",149,0)
 . S TIUDATA=$G(^TMP("TIURIDX",$J,TIUI))
"RTN","TIURS1",150,0)
 . S TIUDA=+$P(TIUDATA,U,2) S RSTRCTD=$$DOCRES^TIULRR(TIUDA)
"RTN","TIURS1",151,0)
 . I RSTRCTD D  Q
"RTN","TIURS1",152,0)
 . . W !!,$C(7),"Ok, no harm done...",! ; Echo denial message
"RTN","TIURS1",153,0)
 . . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIURS1",154,0)
 . S TIUVIEW=$$CANDO^TIULP(TIUDA,"VIEW")
"RTN","TIURS1",155,0)
 . I +TIUVIEW'>0 D  Q  ; Exclude records user can't view
"RTN","TIURS1",156,0)
 . . W !!,$C(7),$P(TIUVIEW,U,2),! ; Echo denial message
"RTN","TIURS1",157,0)
 . . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIURS1",158,0)
 . S TIUCHNG=0
"RTN","TIURS1",159,0)
 . D EN^VALM("TIU CHANGE TITLE")
"RTN","TIURS1",160,0)
 . S TIUDAARY(TIUI)=TIUDA
"RTN","TIURS1",161,0)
 . I +$G(TIUCHNG) S TIULST=$G(TIULST)_$S($G(TIULST)]"":",",1:"")_TIUI
"RTN","TIURS1",162,0)
 ; -- Update list: --
"RTN","TIURS1",163,0)
 S TIUCHNG("UPDATE")=1
"RTN","TIURS1",164,0)
 D UPRBLD^TIURL(.TIUCHNG,.VALMY) K VALMY
"RTN","TIURS1",165,0)
 S VALMBCK="R"
"RTN","TIURS1",166,0)
 D VMSG($G(TIULST),.TIUDAARY,"Title changed")
"RTN","TIURS1",167,0)
 Q
"RTN","TIURS1",168,0)
CNVPOST1 ; Convert Single Posting to another title
"RTN","TIURS1",169,0)
 N TIUD0,DIE,DR,TIUTITL,CHKSUM,TIUCHTTL,TIUCLSS,TIUCON,TIUQUIT
"RTN","TIURS1",170,0)
 N DA,X,Y
"RTN","TIURS1",171,0)
 ; Added TIUCON for **142
"RTN","TIURS1",172,0)
 S TIUD0=$G(^TIU(8925,TIUDA,0)),TIUCHNG=0
"RTN","TIURS1",173,0)
 ; Added TIUNOCS for **142
"RTN","TIURS1",174,0)
 D FULL^VALM1
"RTN","TIURS1",175,0)
 I +TIUD0=81 S TIUCHTTL="0^You may not change the TITLE of an ADDENDUM."
"RTN","TIURS1",176,0)
 I '$D(TIUCHTTL) S TIUCHTTL=$$CANDO^TIULP(TIUDA,"CHANGE TITLE")
"RTN","TIURS1",177,0)
 I +TIUCHTTL,$$DADORKID^TIUGBR(TIUDA) S TIUCHTTL="0^Interdisciplinary entries must be detached before changing titles." ;**100
"RTN","TIURS1",178,0)
 I +TIUCHTTL'>0 D  Q
"RTN","TIURS1",179,0)
 . W !!,$C(7),$P(TIUCHTTL,U,2),! ; Echo denial
"RTN","TIURS1",180,0)
 . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIURS1",181,0)
 L +^TIU(8925,TIUDA,0):1
"RTN","TIURS1",182,0)
 E  D  Q
"RTN","TIURS1",183,0)
 . W !!?5,$C(7),"Another user is editing this entry.",! ; Echo denial
"RTN","TIURS1",184,0)
 . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIURS1",185,0)
 S TIUTITL=$$ASKTITLE^TIULA3(+$$CLINDOC^TIULC1(+TIUD0,TIUDA),+TIUD0)
"RTN","TIURS1",186,0)
 S TIUCLSS=$$CLASS^TIUCNSLT()
"RTN","TIURS1",187,0)
 S TIUCON=+$$ISA^TIULX(TIUTITL,TIUCLSS)
"RTN","TIURS1",188,0)
 I TIUCON=1,+TIUD0'=TIUTITL D CHANGE^TIUCNSLT(TIUDA,"",.TIUNOCS)
"RTN","TIURS1",189,0)
 I $G(TIUNOCS)=-1 D  G POST1Q
"RTN","TIURS1",190,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...")  ; **142
"RTN","TIURS1",191,0)
 ;*184->
"RTN","TIURS1",192,0)
 D CONSCT^TIUCNSLT(TIUDA,+TIUD0,TIUTITL)
"RTN","TIURS1",193,0)
 D PRFCT^TIUPRF1(+TIUD0,TIUTITL,TIUDA)
"RTN","TIURS1",194,0)
 ;<-*184
"RTN","TIURS1",195,0)
 I $G(TIUQUIT)=1 G POST1Q
"RTN","TIURS1",196,0)
 S DIE=8925,DA=TIUDA
"RTN","TIURS1",197,0)
 S DR=".01////^S X="_TIUTITL_";.04////^S X="_$$DOCCLASS^TIULC1(TIUTITL)
"RTN","TIURS1",198,0)
 D ^DIE
"RTN","TIURS1",199,0)
 I +$G(^TIU(8925,+TIUDA,0))'=+TIUD0 S TIUCHNG=1
"RTN","TIURS1",200,0)
 S CHKSUM=+$$CHKSUM^TIULC("^TIU(8925,"_+TIUDA_",""TEXT"")")
"RTN","TIURS1",201,0)
 D AUDIT^TIUEDI1(TIUDA,CHKSUM,CHKSUM)
"RTN","TIURS1",202,0)
POST1Q ;clean up, linetag put in with *171
"RTN","TIURS1",203,0)
 L -^TIU(8925,TIUDA,0)
"RTN","TIURS1",204,0)
 K TIUNOCS
"RTN","TIURS1",205,0)
 Q
"RTN","TIUSRV")
0^15^B48467254
"RTN","TIUSRV",1,0)
TIUSRV ; SLC/JER - Silent server functions ;4/4/05
"RTN","TIUSRV",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**1,19,28,87,61,100,109,113,112,184**;Jun 20, 1997
"RTN","TIUSRV",3,0)
RPC(TIUY,TIUDA,REASSIGN) ; RPC for DT
"RTN","TIUSRV",4,0)
 N VALMAR,TIUGDATA,TIUGWHOL K ^TMP("TIUAUDIT",$J)
"RTN","TIUSRV",5,0)
 S TIUY=$NA(^TMP("TIUAUDIT",$J))
"RTN","TIUSRV",6,0)
 D GET(TIUDA,1,+$G(REASSIGN))
"RTN","TIUSRV",7,0)
 K ^TMP("VALM VIDEO",$J)
"RTN","TIUSRV",8,0)
 Q
"RTN","TIUSRV",9,0)
GET(TIUDA,HUSH,REASSIGN) ; Build List
"RTN","TIUSRV",10,0)
 N TIUI,TIUL,TIUREC,TIUDADD,X,TIUCPF,ONBROWSE
"RTN","TIUSRV",11,0)
 S (TIUDADD,TIUI,VALMCNT)=0,HUSH=+$G(HUSH)
"RTN","TIUSRV",12,0)
 N DA,DIC,DIQ,DR,TIUNAME K ^TMP("TIUAUDIT",$J)
"RTN","TIUSRV",13,0)
 I '$D(TIUPRM0) D SETPARM^TIULE
"RTN","TIUSRV",14,0)
 I '$D(IOINORM) S X="IOINORM;IOIHI;IORVON;IORVOFF;IOUON;IOUOFF;IOBON;IOBOFF" D ENDR^%ZISS
"RTN","TIUSRV",15,0)
 S:'$D(VALMAR) VALMAR="^TMP(""TIUAUDIT"",$J)"
"RTN","TIUSRV",16,0)
 S VALMEVL=+$G(VALMEVL)
"RTN","TIUSRV",17,0)
 I '$D(^TIU(8925,+TIUDA,0)) S VALMQUIT=1 Q
"RTN","TIUSRV",18,0)
 ; if the document has an OnBrowse Event, execute it
"RTN","TIUSRV",19,0)
 S ONBROWSE=$$ONBROWSE^TIULC1(+$G(^TIU(8925,+TIUDA,0)))
"RTN","TIUSRV",20,0)
 I $L(ONBROWSE) D LOADSUPP(ONBROWSE,TIUDA,.VALMCNT)
"RTN","TIUSRV",21,0)
 ;Set a flag to indicate whether or not a Title is a member of the
"RTN","TIUSRV",22,0)
 ;Clinical Procedures Class (1=Yes and 0=No)
"RTN","TIUSRV",23,0)
 S TIUCPF=+$$ISA^TIULX(+$G(^TIU(8925,TIUDA,0)),+$$CLASS^TIUCP)
"RTN","TIUSRV",24,0)
 S DIC=8925,DIQ="TIUREC(",DA=TIUDA
"RTN","TIUSRV",25,0)
 S DR=".01;.02;.05;.07:.1;1201;1202;1204;1208;1212;1301;1302;1305;1306;1501;1502;1505;1507;1508;1511;1601:1602;1610:1612;1701"
"RTN","TIUSRV",26,0)
 ;If the document is a member of the Clinical Procedures Class, include the
"RTN","TIUSRV",27,0)
 ;Procedure Summary Code field and the Date/Time Performed field
"RTN","TIUSRV",28,0)
 I TIUCPF S DR=DR_";70201;70202"
"RTN","TIUSRV",29,0)
 D EN^DIQ1
"RTN","TIUSRV",30,0)
 S TIUI="" F  S TIUI=$O(TIUREC(8925,+TIUDA,TIUI)) Q:+TIUI'>0  D
"RTN","TIUSRV",31,0)
 . I $G(TIUREC(8925,+TIUDA,TIUI))']"" S TIUREC(8925,+TIUDA,TIUI)="None"
"RTN","TIUSRV",32,0)
 . E  S TIUREC(8925,+TIUDA,TIUI)=$$UP^XLFSTR(TIUREC(8925,+TIUDA,TIUI))
"RTN","TIUSRV",33,0)
 I $D(TIUREC)>9 D
"RTN","TIUSRV",34,0)
 . D SOURCE(.TIUREC,HUSH,.VALMCNT,TIUCPF)
"RTN","TIUSRV",35,0)
 . I '+$G(REASSIGN) D PROBLEM(TIUDA,.VALMCNT) D:$$ISPRFDOC^TIUPRF(TIUDA) LKDETAIL^TIUPRF3(TIUDA,.VALMCNT) D EDIT(TIUDA,.VALMCNT)
"RTN","TIUSRV",36,0)
 . D REASSIGN^TIUSRV1(TIUDA,+$G(REASSIGN),.VALMCNT) Q:+$G(REASSIGN)
"RTN","TIUSRV",37,0)
 . D IDLINK^TIUSRV1(TIUDA,.VALMCNT)
"RTN","TIUSRV",38,0)
 . D SIGN(.TIUREC,.VALMCNT)
"RTN","TIUSRV",39,0)
 . I +$O(^TIU(8925.7,"B",TIUDA,0)) D XTRASIGN(TIUDA,.VALMCNT)
"RTN","TIUSRV",40,0)
 . I $D(^TIU(8925,+TIUDA,16)) D PRIVACY(.TIUREC,.VALMCNT)
"RTN","TIUSRV",41,0)
 . D BODY(TIUDA,.VALMCNT)
"RTN","TIUSRV",42,0)
 S:+$G(VALMCNT)<$G(VALM("LINES")) VALMCNT=$G(VALM("LINES"))
"RTN","TIUSRV",43,0)
 Q
"RTN","TIUSRV",44,0)
LOADSUPP(METHOD,TIUDA,TIUL)     ; Execute OnBrowse/Load Supplementary data
"RTN","TIUSRV",45,0)
 N TIUY,TIUI S TIUI=0
"RTN","TIUSRV",46,0)
 X METHOD I '$D(@TIUY) Q
"RTN","TIUSRV",47,0)
 S TIUL=TIUL+1
"RTN","TIUSRV",48,0)
 D SET(TIUL,1,"Requesting Package Information ",$G(IORVON),$G(IORVOFF))
"RTN","TIUSRV",49,0)
 S TIUL=TIUL+1 D BLANK(TIUL)
"RTN","TIUSRV",50,0)
 F  S TIUI=$O(@TIUY@(TIUI)) Q:+TIUI'>0  D
"RTN","TIUSRV",51,0)
 . S TIUL=+$G(TIUL)+1 D SET(TIUL,1,@TIUY@(TIUI))
"RTN","TIUSRV",52,0)
 S TIUL=TIUL+1 D BLANK(TIUL) S TIUL=TIUL+1
"RTN","TIUSRV",53,0)
 K @TIUY
"RTN","TIUSRV",54,0)
 Q
"RTN","TIUSRV",55,0)
SOURCE(TIUREC,HUSH,TIUL,TIUCPF) ; Source Info
"RTN","TIUSRV",56,0)
 ;S TIUL=TIUL+1 D BLANK(TIUL) S TIUL=TIUL+1
"RTN","TIUSRV",57,0)
 W:'+$G(HUSH) !!,"Opening "_TIUREC(8925,+TIUDA,.01)_" record for review..."
"RTN","TIUSRV",58,0)
 D SET(TIUL,1,"Source Information ",$G(IORVON),$G(IORVOFF))
"RTN","TIUSRV",59,0)
 D SET(TIUL+1,2," Reference Date: "_$G(TIUREC(8925,TIUDA,1301)))
"RTN","TIUSRV",60,0)
 D SET(TIUL+2,2,"     Entry Date: "_$G(TIUREC(8925,TIUDA,1201)))
"RTN","TIUSRV",61,0)
 D SET(TIUL+3,2,"Expected Signer: "_$G(TIUREC(8925,TIUDA,1204)))
"RTN","TIUSRV",62,0)
 D SET(TIUL+4,2,"        Urgency: "_$G(TIUREC(8925,TIUDA,.09)))
"RTN","TIUSRV",63,0)
 D SET(TIUL+5,2,"     Line Count: "_$G(TIUREC(8925,TIUDA,.1)))
"RTN","TIUSRV",64,0)
 D SET(TIUL+6,2,"       Division: "_$G(TIUREC(8925,TIUDA,1212)))
"RTN","TIUSRV",65,0)
 D SET(TIUL+7,2,"        Subject: "_$G(TIUREC(8925,TIUDA,1701)))
"RTN","TIUSRV",66,0)
 ;If the document is a member of the Clinical Procedures Class, include the
"RTN","TIUSRV",67,0)
 ;Procedure Summary Code field and the Date/Time Performed field
"RTN","TIUSRV",68,0)
 I $G(TIUCPF) D
"RTN","TIUSRV",69,0)
 . D BLANK(TIUL+8)
"RTN","TIUSRV",70,0)
 . D SET(TIUL+9,2,"Procedure Summary Code: "_$G(TIUREC(8925,TIUDA,70201)))
"RTN","TIUSRV",71,0)
 . D SET(TIUL+10,2,"   Date/Time Performed: "_$G(TIUREC(8925,TIUDA,70202)))
"RTN","TIUSRV",72,0)
 D SET(TIUL+1,40,"            Author: "_$G(TIUREC(8925,TIUDA,1202)))
"RTN","TIUSRV",73,0)
 D SET(TIUL+2,40,"        Entered By: "_$G(TIUREC(8925,TIUDA,1302)))
"RTN","TIUSRV",74,0)
 D SET(TIUL+3,40," Expected Cosigner: "_$G(TIUREC(8925,TIUDA,1208)))
"RTN","TIUSRV",75,0)
 D SET(TIUL+4,40,"   Document Status: "_$G(TIUREC(8925,TIUDA,.05)))
"RTN","TIUSRV",76,0)
 D SET(TIUL+5,40,"    TIU Document #: "_+$G(TIUDA))
"RTN","TIUSRV",77,0)
 S TIUL=$S(+$G(TIUCPF):TIUL+10,1:TIUL+6)
"RTN","TIUSRV",78,0)
 Q
"RTN","TIUSRV",79,0)
PROBLEM(TIUDA,TIUL) ; Problems
"RTN","TIUSRV",80,0)
 N TIUI,DR,DIC,DIQ,TIUPROB S TIUI=0
"RTN","TIUSRV",81,0)
 S TIUL=TIUL+1 D BLANK(TIUL) S TIUL=TIUL+1
"RTN","TIUSRV",82,0)
 D SET(TIUL,1,"Associated Problems ",$G(IORVON),$G(IORVOFF))
"RTN","TIUSRV",83,0)
 I '+$O(^TIU(8925.9,"B",+TIUDA,0)) D SET(TIUL,25,"No linked problems.")
"RTN","TIUSRV",84,0)
 F  S TIUI=$O(^TIU(8925.9,"B",TIUDA,TIUI)) Q:+TIUI'>0  D
"RTN","TIUSRV",85,0)
 . S DA=TIUI,DR=".02;.05",DIC="^TIU(8925.9,",DIQ="TIUPROB"
"RTN","TIUSRV",86,0)
 . D EN^DIQ1 Q:$D(TIUPROB)'>9
"RTN","TIUSRV",87,0)
 . S TIUL=TIUL+1
"RTN","TIUSRV",88,0)
 . D SET(TIUL,19,$$MIXED^TIULS($G(TIUPROB(8925.9,TIUI,.05))))
"RTN","TIUSRV",89,0)
 . D SET(TIUL,60,$G(TIUPROB(8925.9,TIUI,.02)))
"RTN","TIUSRV",90,0)
 Q
"RTN","TIUSRV",91,0)
EDIT(TIUDA,TIUL) ; Edits
"RTN","TIUSRV",92,0)
 N TIUI,DR,DIC,DIQ,TIUED S TIUI=0
"RTN","TIUSRV",93,0)
 S TIUL=TIUL+1 D BLANK(TIUL) S TIUL=TIUL+1
"RTN","TIUSRV",94,0)
 D SET(TIUL,1,"Edit Information ",$G(IORVON),$G(IORVOFF))
"RTN","TIUSRV",95,0)
 I '+$O(^TIU(8925.5,"B",+TIUDA,0)) D SET(TIUL,22,"No edits since entry.")
"RTN","TIUSRV",96,0)
 F  S TIUI=$O(^TIU(8925.5,"B",TIUDA,TIUI)) Q:+TIUI'>0  D
"RTN","TIUSRV",97,0)
 . S DA=TIUI,DR=".02:03",DIC="^TIU(8925.5,",DIQ="TIUED"
"RTN","TIUSRV",98,0)
 . D EN^DIQ1 Q:$D(TIUED)'>9!($G(TIUED(8925.5,TIUI,.02))']"")
"RTN","TIUSRV",99,0)
 . S TIUL=TIUL+1
"RTN","TIUSRV",100,0)
 . D SET(TIUL,2,"      Edit Date: "_$G(TIUED(8925.5,TIUI,.02)))
"RTN","TIUSRV",101,0)
 . D SET(TIUL,44,"     Edited By: "_$G(TIUED(8925.5,TIUI,.03)))
"RTN","TIUSRV",102,0)
 Q
"RTN","TIUSRV",103,0)
SIGN(TIUREC,TIUL) ; Signature
"RTN","TIUSRV",104,0)
 S TIUL=TIUL+1 D BLANK(TIUL) S TIUL=TIUL+1
"RTN","TIUSRV",105,0)
 D SET(TIUL,1,"Signature Information ",$G(IORVON),$G(IORVOFF))
"RTN","TIUSRV",106,0)
 D SET(TIUL+1,2,"    Signed Date: "_$G(TIUREC(8925,TIUDA,1501)))
"RTN","TIUSRV",107,0)
 D SET(TIUL+3,2,"  Cosigned Date: "_$G(TIUREC(8925,TIUDA,1507)))
"RTN","TIUSRV",108,0)
 D SET(TIUL+1,40,"         Signed By: "_$G(TIUREC(8925,TIUDA,1502)))
"RTN","TIUSRV",109,0)
 D SET(TIUL+2,40,"    Signature Mode: "_$G(TIUREC(8925,TIUDA,1505)))
"RTN","TIUSRV",110,0)
 D SET(TIUL+3,40,"       Cosigned By: "_$G(TIUREC(8925,TIUDA,1508)))
"RTN","TIUSRV",111,0)
 D SET(TIUL+4,40,"  Cosignature Mode: "_$G(TIUREC(8925,TIUDA,1511)))
"RTN","TIUSRV",112,0)
 S TIUL=TIUL+4
"RTN","TIUSRV",113,0)
 Q
"RTN","TIUSRV",114,0)
XTRASIGN(TIUDA,TIUL) ; Additional signers
"RTN","TIUSRV",115,0)
 N TIUI,DA,DR,DIC,DIQ,TIUXTRA
"RTN","TIUSRV",116,0)
 S TIUI=0
"RTN","TIUSRV",117,0)
 S TIUL=TIUL+1 D BLANK(TIUL) S TIUL=TIUL+1
"RTN","TIUSRV",118,0)
 D SET(TIUL,1,"Receipt Acknowledged By ",$G(IORVON),$G(IORVOFF))
"RTN","TIUSRV",119,0)
 F  S TIUI=$O(^TIU(8925.7,"B",TIUDA,TIUI)) Q:+TIUI'>0  D
"RTN","TIUSRV",120,0)
 . S DA=TIUI,DR=".03:.08",DIC="^TIU(8925.7,",DIQ="TIUXTRA"
"RTN","TIUSRV",121,0)
 . D EN^DIQ1 Q:$D(TIUXTRA)'>9
"RTN","TIUSRV",122,0)
 . S TIUL=TIUL+1
"RTN","TIUSRV",123,0)
 . D SET(TIUL,2,"    Signed Date: "_$G(TIUXTRA(8925.7,DA,.04)))
"RTN","TIUSRV",124,0)
 . D SET(TIUL,40,"         Signed By: "_$G(TIUXTRA(8925.7,DA,.06)))
"RTN","TIUSRV",125,0)
 . S TIUL=TIUL+1
"RTN","TIUSRV",126,0)
 . D SET(TIUL,2,"Expected Signer: "_$G(TIUXTRA(8925.7,DA,.03)))
"RTN","TIUSRV",127,0)
 . D SET(TIUL,40,"    Signature Mode: "_$G(TIUXTRA(8925.7,DA,.08)))
"RTN","TIUSRV",128,0)
 Q
"RTN","TIUSRV",129,0)
PRIVACY(TIUREC,TIUL) ; Privacy Act
"RTN","TIUSRV",130,0)
 S TIUL=TIUL+1 D BLANK(TIUL) S TIUL=TIUL+1
"RTN","TIUSRV",131,0)
 D SET(TIUL,1,"Privacy Act Information ",$G(IORVON),$G(IORVOFF))
"RTN","TIUSRV",132,0)
 S TIUL=TIUL+1
"RTN","TIUSRV",133,0)
 D SET(TIUL,2,"   Amended Date: "_$G(TIUREC(8925,TIUDA,1601)))
"RTN","TIUSRV",134,0)
 D SET(TIUL,40,"        Amended By: "_$G(TIUREC(8925,TIUDA,1602)))
"RTN","TIUSRV",135,0)
 S TIUL=TIUL+1
"RTN","TIUSRV",136,0)
 D SET(TIUL,2,"   Deleted Date: "_$G(TIUREC(8925,TIUDA,1611)))
"RTN","TIUSRV",137,0)
 D SET(TIUL,40,"        Deleted By: "_$G(TIUREC(8925,TIUDA,1610)))
"RTN","TIUSRV",138,0)
 S TIUL=TIUL+1
"RTN","TIUSRV",139,0)
 D SET(TIUL,2,"         Reason: "_$G(TIUREC(8925,TIUDA,1612)))
"RTN","TIUSRV",140,0)
 Q
"RTN","TIUSRV",141,0)
BODY(TIUDA,TIUL) ; body of document
"RTN","TIUSRV",142,0)
 N CANSEE
"RTN","TIUSRV",143,0)
 S TIUL=TIUL+1 D BLANK(TIUL) S TIUL=TIUL+1
"RTN","TIUSRV",144,0)
 D SET(TIUL,1,"Document Body ",$G(IORVON),$G(IORVOFF))
"RTN","TIUSRV",145,0)
 S TIUL=TIUL+1 D BLANK(TIUL)
"RTN","TIUSRV",146,0)
 S CANSEE=$$CANDO^TIULP(TIUDA,"VIEW")
"RTN","TIUSRV",147,0)
 I '+CANSEE D NOSEE(CANSEE,.TIUL) Q
"RTN","TIUSRV",148,0)
 I '$D(TIUGDATA) S TIUGDATA=$$IDDATA^TIURECL1(TIUDA)
"RTN","TIUSRV",149,0)
 D LOADREC^TIUBR1(TIUDA,.TIUL,TIUGDATA,$G(TIUGWHOL))
"RTN","TIUSRV",150,0)
 K ^TMP("TIU ADDENDUM",$J)
"RTN","TIUSRV",151,0)
 Q
"RTN","TIUSRV",152,0)
ISCOMP(DA) ; Evaluate whether a given record is a component
"RTN","TIUSRV",153,0)
 N TIUY,TIUTYP
"RTN","TIUSRV",154,0)
 S TIUTYP=+$G(^TIU(8925,DA,0))
"RTN","TIUSRV",155,0)
 S TIUY=$S($P($G(^TIU(8925.1,+TIUTYP,0)),U,4)="CO":1,1:0)
"RTN","TIUSRV",156,0)
 Q TIUY
"RTN","TIUSRV",157,0)
NOSEE(CANSEE,TIUJ) ; When the user shouldn't see the data...
"RTN","TIUSRV",158,0)
 S TIUJ=+$G(TIUJ)+1
"RTN","TIUSRV",159,0)
 D SET(TIUJ,2,$P(CANSEE,U,2))
"RTN","TIUSRV",160,0)
 Q
"RTN","TIUSRV",161,0)
SET(TIULINE,TIUCOL,TIUTEXT,ON,OFF) ; set display info in array
"RTN","TIUSRV",162,0)
 D:'$D(@VALMAR@(TIULINE,0)) BLANK(.TIULINE)
"RTN","TIUSRV",163,0)
 D SET^VALM10(.TIULINE,$$SETSTR^VALM1(.TIUTEXT,@VALMAR@(TIULINE,0),.TIUCOL,$L(TIUTEXT)))
"RTN","TIUSRV",164,0)
 D:$G(ON)]""!($G(OFF)]"") CNTRL^VALM10(.TIULINE,.TIUCOL,$L(TIUTEXT),$G(ON),$G(OFF))
"RTN","TIUSRV",165,0)
 W:'(TIULINE#5)&'+$G(HUSH) "."
"RTN","TIUSRV",166,0)
 Q
"RTN","TIUSRV",167,0)
 ;
"RTN","TIUSRV",168,0)
BLANK(TIULINE) ; blank line
"RTN","TIUSRV",169,0)
 D SET^VALM10(.TIULINE,$J("",80))
"RTN","TIUSRV",170,0)
 Q
"RTN","TIUSRVP")
0^29^B45548216
"RTN","TIUSRVP",1,0)
TIUSRVP ; SLC/JER - RPCs for CREATE & UPDATE ;8/16/05
"RTN","TIUSRVP",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**1,7,19,28,47,89,104,100,115,109,167,113,112,175,157,184**;Jun 20, 1997
"RTN","TIUSRVP",3,0)
MAKE(SUCCESS,DFN,TITLE,VDT,VLOC,VSIT,TIUX,VSTR,SUPPRESS,NOASF) ; New Document
"RTN","TIUSRVP",4,0)
 ; SUCCESS = (by ref) TIU DOCUMENT # (PTR to 8925)
"RTN","TIUSRVP",5,0)
 ;         = 0^Explanatory message if no SUCCESS
"RTN","TIUSRVP",6,0)
 ; DFN     = Patient (#2)
"RTN","TIUSRVP",7,0)
 ; TITLE   = TIU Document Definition (#8925.1)
"RTN","TIUSRVP",8,0)
 ; [VDT]   = Date(/Time) of Visit
"RTN","TIUSRVP",9,0)
 ; [VLOC]  = Visit Location (HOSPITAL LOCATION)
"RTN","TIUSRVP",10,0)
 ; [VSIT]  = Visit file ien (#9000010)
"RTN","TIUSRVP",11,0)
 ; [VSTR]  = Visit string (i.e., VLOC;VDT;VTYPE)
"RTN","TIUSRVP",12,0)
 ; [NOASF] = if 1=Do Not Set ASAVE cross-reference
"RTN","TIUSRVP",13,0)
 ; TIUX    = (by ref) array containing field data and document body
"RTN","TIUSRVP",14,0)
 ;
"RTN","TIUSRVP",15,0)
 N TIU,TIUDA,LDT,NEWREC
"RTN","TIUSRVP",16,0)
 S SUCCESS=0
"RTN","TIUSRVP",17,0)
 I +$G(VSIT) S VSTR=$$VSTRBLD(+VSIT)
"RTN","TIUSRVP",18,0)
 I $L($G(VSTR)) D
"RTN","TIUSRVP",19,0)
 . S VDT=$S(+$G(VDT):+$G(VDT),1:$P(VSTR,";",2))
"RTN","TIUSRVP",20,0)
 . S LDT=$S(+$G(VDT):$$FMADD^XLFDT(VDT,"","",1),1:"")
"RTN","TIUSRVP",21,0)
 . S VLOC=$S(+$G(VLOC):+$G(VLOC),1:$P(VSTR,";"))
"RTN","TIUSRVP",22,0)
 . ; If note is for Ward Location, call MAIN^TIUMOVE
"RTN","TIUSRVP",23,0)
 . I $P($G(^SC(+VLOC,0)),U,3)="W" D MAIN^TIUMOVE(.TIU,DFN,"",VDT,LDT,1,"LAST",0,+VLOC) Q
"RTN","TIUSRVP",24,0)
 . ; Otherwise, call PATVADPT^TIULV
"RTN","TIUSRVP",25,0)
 . D PATVADPT^TIULV(.TIU,DFN,"",VSTR)
"RTN","TIUSRVP",26,0)
 I '+$G(VSIT),'$L($G(VSTR)),+$G(VDT),+$G(VLOC) D
"RTN","TIUSRVP",27,0)
 . S VDT=$G(VDT),LDT=$S(+$G(VDT):$$FMADD^XLFDT(VDT,"","",1),1:"")
"RTN","TIUSRVP",28,0)
 . ; If note is for Ward Location, call MAIN^TIUMOVE
"RTN","TIUSRVP",29,0)
 . I $P($G(^SC(+VLOC,0)),U,3)="W" D MAIN^TIUMOVE(.TIU,DFN,"",VDT,LDT,1,"LAST",0,+VLOC) Q
"RTN","TIUSRVP",30,0)
 . ; Otherwise, call MAIN^TIUVSIT
"RTN","TIUSRVP",31,0)
 . D MAIN^TIUVSIT(.TIU,DFN,"",VDT,LDT,"LAST",0,VLOC)
"RTN","TIUSRVP",32,0)
 I '+$G(TIU("VSTR")) D
"RTN","TIUSRVP",33,0)
 . D EVENT^TIUSRVP1(.TIU,DFN)
"RTN","TIUSRVP",34,0)
 S TIU("INST")=$$DIVISION^TIULC1(+TIU("LOC"))
"RTN","TIUSRVP",35,0)
 I $S($D(TIU)'>9:1,+$G(DFN)'>0:1,1:0) S SUCCESS="0^"_$$EZBLD^DIALOG(89250001) Q
"RTN","TIUSRVP",36,0)
 ;
"RTN","TIUSRVP",37,0)
 S TIUDA=$$GETREC(DFN,.TIU,TITLE,.NEWREC)
"RTN","TIUSRVP",38,0)
 I +TIUDA'>0 S SUCCESS="0^"_$$EZBLD^DIALOG(89250002) Q
"RTN","TIUSRVP",39,0)
 S SUCCESS=+TIUDA
"RTN","TIUSRVP",40,0)
 D STUFREC^TIUSRVP1(+TIUDA,.TIUX,DFN,,TITLE,.TIU)
"RTN","TIUSRVP",41,0)
 S:'+$G(NOASF) ^TIU(8925,"ASAVE",DUZ,TIUDA)=""
"RTN","TIUSRVP",42,0)
 K ^TIU(8925,+TIUDA,"TEMP")
"RTN","TIUSRVP",43,0)
 M ^TIU(8925,+TIUDA,"TEMP")=TIUX("TEXT") K TIUX("TEXT")
"RTN","TIUSRVP",44,0)
 D SETXT0(TIUDA)
"RTN","TIUSRVP",45,0)
 D FILE(.SUCCESS,+TIUDA,.TIUX,+$G(SUPPRESS))
"RTN","TIUSRVP",46,0)
 I +SUCCESS'>0 D DIK^TIURB2(TIUDA) Q
"RTN","TIUSRVP",47,0)
 I +$O(^TIU(8925,+TIUDA,"TEMP",0)) D MERGTEXT^TIUEDI1(+TIUDA,.TIU)
"RTN","TIUSRVP",48,0)
 I +$G(TIU("STOP")) D DEFER^TIUVSIT(TIUDA,TIU("STOP")) I 1
"RTN","TIUSRVP",49,0)
 E  D QUE^TIUPXAP1
"RTN","TIUSRVP",50,0)
 I '+$G(SUPPRESS) D
"RTN","TIUSRVP",51,0)
 . D RELEASE^TIUT(TIUDA,1)
"RTN","TIUSRVP",52,0)
 . D UPDTIRT^TIUDIRT(.TIU,TIUDA)
"RTN","TIUSRVP",53,0)
 K ^TIU(8925,+TIUDA,"TEMP")
"RTN","TIUSRVP",54,0)
 Q
"RTN","TIUSRVP",55,0)
VSTRBLD(VSIT) ; Given Visit ien, build Visit-Descriptor String
"RTN","TIUSRVP",56,0)
 N TIUY,VSIT0,VLOC,VDT,VSVCAT
"RTN","TIUSRVP",57,0)
 S VSIT0=$G(^AUPNVSIT(+VSIT,0)),VDT=+$P(VSIT0,U),VLOC=+$P(VSIT0,U,22)
"RTN","TIUSRVP",58,0)
 S VSVCAT=$P(VSIT0,U,7)
"RTN","TIUSRVP",59,0)
 S TIUY=VLOC_";"_VDT_";"_VSVCAT
"RTN","TIUSRVP",60,0)
 Q TIUY
"RTN","TIUSRVP",61,0)
SETXT0(TIUDA) ; Set root node of "TEMP" WP-field
"RTN","TIUSRVP",62,0)
 N TIUC,TIUI S (TIUC,TIUI)=0
"RTN","TIUSRVP",63,0)
 F  S TIUI=$O(^TIU(8925,TIUDA,"TEMP",TIUI)) Q:+TIUI'>0  D
"RTN","TIUSRVP",64,0)
 . S:$D(^TIU(8925,TIUDA,"TEMP",TIUI,0)) TIUC=TIUC+1
"RTN","TIUSRVP",65,0)
 S ^TIU(8925,TIUDA,"TEMP",0)="^^"_TIUC_U_TIUC_U_DT_"^^"
"RTN","TIUSRVP",66,0)
 Q
"RTN","TIUSRVP",67,0)
MAKEADD(TIUDADD,TIUDA,TIUX,SUPPRESS) ; Create addendum
"RTN","TIUSRVP",68,0)
 ; For backward compatibility
"RTN","TIUSRVP",69,0)
 ; Use MAKEADD^TIUSRVP2 now, please
"RTN","TIUSRVP",70,0)
 D MAKEADD^TIUSRVP2(.TIUDADD,TIUDA,.TIUX,+$G(SUPPRESS))
"RTN","TIUSRVP",71,0)
 Q
"RTN","TIUSRVP",72,0)
UPDATE(SUCCESS,TIUDA,TIUX,SUPPRESS) ; Update existing Document
"RTN","TIUSRVP",73,0)
 N TIU,TIUI,TIUC,TIUD0,TIUD12,TIUD15,TIUCPF,TITLE,PRFUNLNK
"RTN","TIUSRVP",74,0)
 I $S(+$G(TIUDA)'>0:1,'$D(^TIU(8925,+TIUDA,0)):1,1:0) D  Q
"RTN","TIUSRVP",75,0)
 . S SUCCESS="0^ Cannot update a non-existent document..."
"RTN","TIUSRVP",76,0)
 I +$P($G(^TIU(8925,+TIUDA,0)),U,5)>6 D  Q
"RTN","TIUSRVP",77,0)
 . S SUCCESS="0^ TIU Document #"_TIUDA_" is already signed..."
"RTN","TIUSRVP",78,0)
 I $D(TIUX("TEXT")) D
"RTN","TIUSRVP",79,0)
 . K ^TIU(8925,+TIUDA,"TEMP")
"RTN","TIUSRVP",80,0)
 . M ^TIU(8925,+TIUDA,"TEMP")=TIUX("TEXT")
"RTN","TIUSRVP",81,0)
 . S (TIUC,TIUI)=0
"RTN","TIUSRVP",82,0)
 . F  S TIUI=$O(^TIU(8925,+TIUDA,"TEMP",TIUI)) Q:+TIUI'>0  D
"RTN","TIUSRVP",83,0)
 . . S TIUC=TIUC+1
"RTN","TIUSRVP",84,0)
 . I +TIUC>0 S ^TIU(8925,+TIUDA,"TEMP",0)="^^"_TIUC_U_TIUC_U_DT_"^^"
"RTN","TIUSRVP",85,0)
 . K TIUX("TEXT")
"RTN","TIUSRVP",86,0)
 I +$O(TIUX(""))'>0 S:+$G(SUPPRESS) SUCCESS=+TIUDA Q
"RTN","TIUSRVP",87,0)
 S TIUD0=$G(^TIU(8925,TIUDA,0)),TIUD12=$G(^(12)),TITLE=+TIUD0
"RTN","TIUSRVP",88,0)
 ;Set a flag to indicate whether or not a Title is a member of the
"RTN","TIUSRVP",89,0)
 ;Clinical Procedures Class (1=Yes and 0=No)
"RTN","TIUSRVP",90,0)
 S TIUCPF=+$$ISA^TIULX(TITLE,+$$CLASS^TIUCP)
"RTN","TIUSRVP",91,0)
 D SETCOS^TIUSRVP2(TIUDA,.TIUX,TIUD0,TIUD12)
"RTN","TIUSRVP",92,0)
 ; Title changed? Refile DC
"RTN","TIUSRVP",93,0)
 I +$G(TIUX(.01))>0,(+$G(TIUX(.01))'=+TIUD0) D
"RTN","TIUSRVP",94,0)
 . S TIUX(.04)=$$DOCCLASS^TIULC1(+$G(TIUX(.01)))
"RTN","TIUSRVP",95,0)
 . ; If change title from PRF to nonPRF, set flg to unlink note:
"RTN","TIUSRVP",96,0)
 . I $$ISPFTTL^TIUPRFL(TITLE),'$$ISPFTTL^TIUPRFL(+$G(TIUX(.01))) S PRFUNLNK=1
"RTN","TIUSRVP",97,0)
 D FILE(.SUCCESS,+TIUDA,.TIUX,+$G(SUPPRESS),TIUCPF)
"RTN","TIUSRVP",98,0)
 I +SUCCESS'>0 K ^TIU(8925,+TIUDA,"TEMP") Q
"RTN","TIUSRVP",99,0)
 I $G(PRFUNLNK) D UNLINK^TIUPRF1(TIUDA)
"RTN","TIUSRVP",100,0)
 D GETTIU^TIULD(.TIU,TIUDA)
"RTN","TIUSRVP",101,0)
 I $D(^TIU(8925,+TIUDA,"TEMP")) D
"RTN","TIUSRVP",102,0)
 . K ^TIU(8925,+TIUDA,"TEXT")
"RTN","TIUSRVP",103,0)
 . D MERGTEXT^TIUEDI1(+TIUDA,.TIU)
"RTN","TIUSRVP",104,0)
 . K ^TIU(8925,+TIUDA,"TEMP")
"RTN","TIUSRVP",105,0)
 . S:'+$G(SUCCESS) SUCCESS=+TIUDA
"RTN","TIUSRVP",106,0)
 ; If signed, re-file /ES/
"RTN","TIUSRVP",107,0)
 S TIUD15=$G(^TIU(8925,+TIUDA,15))
"RTN","TIUSRVP",108,0)
 I +TIUD15 D
"RTN","TIUSRVP",109,0)
 . N TIUBY,DR,DIE,DA,X,Y S TIUBY=$P(TIUD15,U,2) Q:+TIUBY'>0
"RTN","TIUSRVP",110,0)
 . S DR="1503///^S X=$$SIGNAME^TIULS("_TIUBY_");1504///^S X=$$SIGTITL^TIULS("_TIUBY_")"
"RTN","TIUSRVP",111,0)
 . S DA=TIUDA,DIE=8925 D ^DIE
"RTN","TIUSRVP",112,0)
 ; send alerts
"RTN","TIUSRVP",113,0)
 I '+$G(SUPPRESS) D
"RTN","TIUSRVP",114,0)
 . I +$P(TIUD0,U,5)<5,'$D(TIUX(.05)) D UPDSTAT(TIUDA,+$G(TIUD0))
"RTN","TIUSRVP",115,0)
 . D SEND^TIUALRT(TIUDA),SENDID^TIUALRT1(TIUDA):+$G(^TIU(8925,+TIUDA,21))
"RTN","TIUSRVP",116,0)
 . D UPDTIRT^TIUDIRT(.TIU,TIUDA)
"RTN","TIUSRVP",117,0)
 Q
"RTN","TIUSRVP",118,0)
SETCOS(TIUDA,TIUX,TIUD0,TIUD12) ; set cosig req
"RTN","TIUSRVP",119,0)
 ; For backward compatibility
"RTN","TIUSRVP",120,0)
 ; Use SETCOS^TIUSRVP2 now, please
"RTN","TIUSRVP",121,0)
 D SETCOS^TIUSRVP2(TIUDA,.TIUX,TIUD0,TIUD12)
"RTN","TIUSRVP",122,0)
 Q
"RTN","TIUSRVP",123,0)
UPDSTAT(DA,TITLE) ; Update status on commit
"RTN","TIUSRVP",124,0)
 N DR,DIE S DR=".05////"_$$STATUS^TIUSRVP1(DA,0,TITLE)
"RTN","TIUSRVP",125,0)
 I '+$P($G(^TIU(8925,DA,13)),U,4) S DR=DR_";1304////^S X=$$NOW^XLFDT"
"RTN","TIUSRVP",126,0)
 S DIE=8925
"RTN","TIUSRVP",127,0)
 D ^DIE
"RTN","TIUSRVP",128,0)
 Q
"RTN","TIUSRVP",129,0)
GETREC(DFN,TIU,TITLE,TIUNEW) ; Get/create document record
"RTN","TIUSRVP",130,0)
 N DA,DIC,DIE,DLAYGO,DR,X,Y,TIUDPRM,TIUFPRIV,TIUHIT,TIUSCAT
"RTN","TIUSRVP",131,0)
 S (TIUHIT,DA)=0,TIUFPRIV=1
"RTN","TIUSRVP",132,0)
 S (DIC,DLAYGO)=8925,DIC(0)="FL"
"RTN","TIUSRVP",133,0)
 S X=""""_"`"_+TITLE_"""" D ^DIC K DIC("S")
"RTN","TIUSRVP",134,0)
 I +Y'>0 Q Y_U_" Insufficient data to create a new record."
"RTN","TIUSRVP",135,0)
 S DA=+Y,TIUNEW=+$P(Y,U,3)
"RTN","TIUSRVP",136,0)
 N DIE,DR,TIUVISIT S DIE=8925
"RTN","TIUSRVP",137,0)
 S TIUVISIT=$S(+$G(TIU("VISIT")):+$G(TIU("VISIT")),1:"")
"RTN","TIUSRVP",138,0)
 S TIUSCAT=$S(+$L($P($G(TIU("CAT")),U)):$P($G(TIU("CAT")),U),+$L($P($G(TIU("VSTR")),";",3)):$P($G(TIU("VSTR")),";",3),1:"")
"RTN","TIUSRVP",139,0)
 S DR=".04////"_$$DOCCLASS^TIULC1(+$P(Y,U,2))_";.13////"_TIUSCAT_";1205////"_$P($G(TIU("LOC")),U)_";1211////"_$P($G(TIU("VLOC")),U)_";1212////"_$P($G(TIU("INST")),U)
"RTN","TIUSRVP",140,0)
 D ^DIE
"RTN","TIUSRVP",141,0)
 Q +$G(DA)
"RTN","TIUSRVP",142,0)
FILE(SUCCESS,TIUDA,TIUX,SUPPRESS,TIUCPF) ; Call FM Filer & commit
"RTN","TIUSRVP",143,0)
 N FDA,FDARR,IENS,FLAGS,TIUMSG,TIUCMMTX
"RTN","TIUSRVP",144,0)
 S IENS=""""_TIUDA_",""",FDARR="FDA(8925,"_IENS_")",FLAGS=""
"RTN","TIUSRVP",145,0)
 I +$G(TIUX(1202)) S TIUX(1204)=+$G(TIUX(1202))
"RTN","TIUSRVP",146,0)
 I +$G(TIUX(1209)) S TIUX(1208)=+$G(TIUX(1209))
"RTN","TIUSRVP",147,0)
 ;If the document is a member of the Clinical Procedures Class, set the
"RTN","TIUSRVP",148,0)
 ;Entered By field to the Author/Dictator field
"RTN","TIUSRVP",149,0)
 I $G(TIUCPF),+$G(TIUX(1202)) S TIUX(1302)=+$G(TIUX(1202))
"RTN","TIUSRVP",150,0)
 M @FDARR=TIUX
"RTN","TIUSRVP",151,0)
 D FILE^DIE(FLAGS,"FDA","TIUMSG") ; File record
"RTN","TIUSRVP",152,0)
 I $D(TIUMSG)>9 S SUCCESS=0_U_$G(TIUMSG("DIERR",1,"TEXT",1)) Q
"RTN","TIUSRVP",153,0)
 S SUCCESS=TIUDA
"RTN","TIUSRVP",154,0)
 I '+$G(SUPPRESS) D
"RTN","TIUSRVP",155,0)
 . N DA
"RTN","TIUSRVP",156,0)
 . S DA=TIUDA
"RTN","TIUSRVP",157,0)
 . S TIUCMMTX=$$COMMIT^TIULC1(+$G(^TIU(8925,+TIUDA,0)))
"RTN","TIUSRVP",158,0)
 . I TIUCMMTX]"" X TIUCMMTX
"RTN","TIUSRVP",159,0)
 . K ^TIU(8925,"ASAVE",DUZ,TIUDA)
"RTN","TIUSRVP",160,0)
 Q
"RTN","TIUSRVP",161,0)
SIGN(ERR,TIUDA,TIUX) ; API for /es/
"RTN","TIUSRVP",162,0)
 ; For backward compatibility
"RTN","TIUSRVP",163,0)
 ; Use SIGN^TIUSRVP2 now, please
"RTN","TIUSRVP",164,0)
 D SIGN^TIUSRVP2(.ERR,TIUDA,.TIUX)
"RTN","TIUSRVP",165,0)
 Q
"RTN","TIUSRVP",166,0)
DELETE(ERR,TIUDA,TIURSN,OVRRIDE) ; delete document
"RTN","TIUSRVP",167,0)
 N TIUDEL,TIUD0 S ERR=0
"RTN","TIUSRVP",168,0)
 I '+$G(OVRRIDE) D  Q:+$G(TIUDEL)'>0
"RTN","TIUSRVP",169,0)
 . S TIUDEL=$$CANDO^TIULP(TIUDA,"DELETE RECORD")
"RTN","TIUSRVP",170,0)
 . I TIUDEL'>0 S ERR="89250003^"_$$EZBLD^DIALOG(89250003)
"RTN","TIUSRVP",171,0)
 S TIUD0=$G(^TIU(8925,+TIUDA,0))
"RTN","TIUSRVP",172,0)
 I +$P(TIUD0,U,5)'<6 D  Q
"RTN","TIUSRVP",173,0)
 . S TIURSN=$G(TIURSN,"A")
"RTN","TIUSRVP",174,0)
 . D DELTEXT^TIURB2(TIUDA,TIURSN)
"RTN","TIUSRVP",175,0)
 D DIK^TIURB2(TIUDA)
"RTN","TIUSRVP",176,0)
 D DELAUDIT^TIUEDI1(TIUDA)
"RTN","TIUSRVP",177,0)
 Q
"RTN","TIUSRVP",178,0)
LOCK(ERR,TIUDA) ; Bid for lock on a TIU Document record
"RTN","TIUSRVP",179,0)
 L +^TIU(8925,+TIUDA):1 I  S ERR=0
"RTN","TIUSRVP",180,0)
 E  S ERR="1^ Another session has this record locked."
"RTN","TIUSRVP",181,0)
 Q
"RTN","TIUSRVP",182,0)
UNLOCK(ERR,TIUDA) ; Decrement Lock on a TIU Document record
"RTN","TIUSRVP",183,0)
 L -^TIU(8925,+TIUDA) S ERR=0
"RTN","TIUSRVP",184,0)
 Q
"RTN","TIUSRVP2")
0^30^B11052340
"RTN","TIUSRVP2",1,0)
TIUSRVP2 ; SLC/JER - More RPCs related to note actions ;8/15/05
"RTN","TIUSRVP2",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**184**;Jun 20, 1997
"RTN","TIUSRVP2",3,0)
MAKEADD(TIUDADD,TIUDA,TIUX,SUPPRESS) ; Create addendum
"RTN","TIUSRVP2",4,0)
 N DIE,DR,DA,DIC,X,Y,DLAYGO,TIUATYP,TIUCAN,TIUFPRIV,TIU S TIUFPRIV=1
"RTN","TIUSRVP2",5,0)
 N PTIEN,SUCCESS
"RTN","TIUSRVP2",6,0)
 S TIUCAN=$$CANDO^TIULP(TIUDA,"MAKE ADDENDUM")
"RTN","TIUSRVP2",7,0)
 I TIUCAN'>0 S TIUDADD="0^You may not MAKE AN ADDENDUM for this "_$$STATUS^TIULC(TIUDA)_" "_$$PNAME^TIULC1(+$G(^TIU(8925,+TIUDA,0))) Q
"RTN","TIUSRVP2",8,0)
 S TIUATYP=+$$WHATITLE^TIUPUTU("ADDENDUM")
"RTN","TIUSRVP2",9,0)
 S (DIC,DLAYGO)=8925,DIC(0)="L",X=""""_"`"_TIUATYP_""""
"RTN","TIUSRVP2",10,0)
 D ^DIC
"RTN","TIUSRVP2",11,0)
 S TIUDADD=+Y
"RTN","TIUSRVP2",12,0)
 I +Y'>0 S TIUDADD=TIUDADD_"^Could not create addendum." Q
"RTN","TIUSRVP2",13,0)
 D GETTIU^TIULD(.TIU,TIUDA)
"RTN","TIUSRVP2",14,0)
 S TIU("DOCTYP")=TIUATYP_U_$$PNAME^TIULC1(TIUATYP)
"RTN","TIUSRVP2",15,0)
 S PTIEN=$P(^TIU(8925,TIUDA,0),U,2)
"RTN","TIUSRVP2",16,0)
 D STUFREC^TIUSRVP1(+TIUDADD,.TIUX,PTIEN,+$G(TIUDA),TIUATYP,.TIU)
"RTN","TIUSRVP2",17,0)
 K ^TIU(8925,+TIUDADD,"TEMP")
"RTN","TIUSRVP2",18,0)
 M ^TIU(8925,+TIUDADD,"TEMP")=TIUX("TEXT") K TIUX("TEXT")
"RTN","TIUSRVP2",19,0)
 D SETXT0^TIUSRVP(+TIUDADD)
"RTN","TIUSRVP2",20,0)
 D FILE^TIUSRVP(.SUCCESS,+TIUDADD,.TIUX,+$G(SUPPRESS))
"RTN","TIUSRVP2",21,0)
 I +SUCCESS'>0 D DIK^TIURB2(TIUDADD) S TIUDADD="-1^Could not create addendum." Q
"RTN","TIUSRVP2",22,0)
 I +$O(^TIU(8925,+TIUDADD,"TEMP",0)) D MERGTEXT^TIUEDI1(+TIUDADD,.TIU)
"RTN","TIUSRVP2",23,0)
 I '+$G(SUPPRESS) D RELEASE^TIUT(+TIUDADD,1)
"RTN","TIUSRVP2",24,0)
 K ^TIU(8925,+TIUDADD,"TEMP")
"RTN","TIUSRVP2",25,0)
 Q
"RTN","TIUSRVP2",26,0)
SETCOS(TIUDA,TIUX,TIUD0,TIUD12) ; set cosig req
"RTN","TIUSRVP2",27,0)
 N TIUDAD,TIUEXS,TIUNCS,TIUEXCS,TIURCS,TIUATT,TIUTTL,TIUDAD0
"RTN","TIUSRVP2",28,0)
 S TIUEXS=$S(+$G(TIUX(1202)):+$G(TIUX(1202)),1:$P(TIUD12,U,4))
"RTN","TIUSRVP2",29,0)
 S TIUNCS=$S(+$G(TIUX(1208)):+$G(TIUX(1208)),+$G(TIUX(1209)):+$G(TIUX(1209)),1:0)
"RTN","TIUSRVP2",30,0)
 I TIUNCS S TIUX(1506)=$S(TIUNCS=TIUEXS:0,1:1) G SETCOSX
"RTN","TIUSRVP2",31,0)
 S TIUEXCS=$P(TIUD12,U,8),TIUATT=$P(TIUD12,U,9)
"RTN","TIUSRVP2",32,0)
 S TIUDAD=+$P(TIUD0,U,6),TIUDAD0=$G(^TIU(8925,+TIUDAD,0))
"RTN","TIUSRVP2",33,0)
 I +$$ISDS^TIULX($S(+TIUDAD:+TIUDAD0,1:+TIUD0)) D  G SETCOSX
"RTN","TIUSRVP2",34,0)
 . S TIUX(1506)=$S(TIUEXS=TIUEXCS:0,1:1)
"RTN","TIUSRVP2",35,0)
 S TIUTTL=$S(+$G(TIUX(.01)):+$G(TIUX(.01)),1:+TIUD0)
"RTN","TIUSRVP2",36,0)
 S TIUX(1506)=+$$REQCOSIG^TIULP(TIUTTL,TIUDA,TIUEXS)
"RTN","TIUSRVP2",37,0)
SETCOSX S:'TIUX(1506) TIUX(1208)="@"
"RTN","TIUSRVP2",38,0)
 Q
"RTN","TIUSRVP2",39,0)
SIGN(ERR,TIUDA,TIUX) ; API for /es/
"RTN","TIUSRVP2",40,0)
 N X,TIUACT,TIUSIGN,TIUD0,TIUD12,TIUSTAT,SIGNER,COSIGNER,VALID,XTRASGNR
"RTN","TIUSRVP2",41,0)
 N TIUES S ERR=0
"RTN","TIUSRVP2",42,0)
 S TIUD0=$G(^TIU(8925,+TIUDA,0)),TIUD12=$G(^TIU(8925,+TIUDA,12))
"RTN","TIUSRVP2",43,0)
 S SIGNER=$P(TIUD12,U,4),COSIGNER=$P(TIUD12,U,8)
"RTN","TIUSRVP2",44,0)
 I (DUZ'=SIGNER),(DUZ'=COSIGNER) S XTRASGNR=+$O(^TIU(8925.7,"AE",+TIUDA,+DUZ,0))
"RTN","TIUSRVP2",45,0)
 I $G(XTRASGNR),+$P($G(^TIU(8925.7,$G(XTRASGNR),0)),U,4) S XTRASGNR=""
"RTN","TIUSRVP2",46,0)
 I '$G(XTRASGNR) S XTRASGNR=$$ASURG^TIUADSIG(TIUDA)
"RTN","TIUSRVP2",47,0)
 S TIUSTAT=+$P(TIUD0,U,5)
"RTN","TIUSRVP2",48,0)
 S TIUACT=$S(TIUSTAT'>5:"SIGNATURE",+$G(XTRASGNR):"SIGNATURE",1:"COSIGNATURE")
"RTN","TIUSRVP2",49,0)
 S TIUSIGN=$$CANDO^TIULP(TIUDA,TIUACT)
"RTN","TIUSRVP2",50,0)
 I +TIUSIGN'>0 S ERR="89250004^"_$P(TIUSIGN,U,2) Q
"RTN","TIUSRVP2",51,0)
 S VALID=$$VALIDATE($$DECRYP^XUSRB1(TIUX))
"RTN","TIUSRVP2",52,0)
 I +VALID'>0 S ERR="89250005^"_$$EZBLD^DIALOG(89250005) Q
"RTN","TIUSRVP2",53,0)
 S TIUES=1_U_$$GET1^DIQ(200,+DUZ,20.2)_U_$$GET1^DIQ(200,+DUZ,20.3)
"RTN","TIUSRVP2",54,0)
 I '+$G(XTRASGNR) D ES^TIURS(TIUDA,TIUES)
"RTN","TIUSRVP2",55,0)
 I +$G(XTRASGNR) D ADDSIG^TIURS1(TIUDA,XTRASGNR)
"RTN","TIUSRVP2",56,0)
 I +$G(^TIU(8925,TIUDA,21)),(TIUACT="SIGNATURE") D AUDLINK^TIUGR1(TIUDA,"a",+$G(^TIU(8925,TIUDA,21)))
"RTN","TIUSRVP2",57,0)
 Q
"RTN","TIUSRVP2",58,0)
VALIDATE(X) ; Validate /es/-code
"RTN","TIUSRVP2",59,0)
 N TIUY S TIUY=0
"RTN","TIUSRVP2",60,0)
 D HASH^XUSHSHP I X]"",(X=$P($G(^VA(200,+DUZ,20)),U,4)) S TIUY=1
"RTN","TIUSRVP2",61,0)
 Q TIUY
"VER")
8.0^22.0
"^DD",8925,8925,1407,0)
PRF FLAG ACTION^CJ30^^ ; ^S X=$S($L($T(CFLDACT^TIUPRFL)):$$CFLDACT^TIUPRFL(D0),1:"?")
"^DD",8925,8925,1407,.1)
LINKED PATIENT RECORD FLAG ACTION
"^DD",8925,8925,1407,9)
^
"^DD",8925,8925,1407,9.01)

"^DD",8925,8925,1407,9.1)
S X=$S($L($T(CFLDACT^TIUPRFL)):$$CFLDACT^TIUPRFL(D0),1:"?")
"^DD",8925,8925,1407,21,0)
^^19^19^3050419^
"^DD",8925,8925,1407,21,1,0)
PRF FLAG ACTION applies only to Patient Record Flag (PRF) notes. When a
"^DD",8925,8925,1407,21,2,0)
new flag is assigned to a given patient, or, after review, another action
"^DD",8925,8925,1407,21,3,0)
such as CONTINUE is taken on an existing flag assignment, a note must be
"^DD",8925,8925,1407,21,4,0)
written to document the clinical reasons for the action.  Upon entry, the
"^DD",8925,8925,1407,21,5,0)
note is linked to the action it documents.  Field PRF FLAG ACTION refers
"^DD",8925,8925,1407,21,6,0)
to this linked action.
"^DD",8925,8925,1407,21,7,0)
 
"^DD",8925,8925,1407,21,8,0)
The field contains the Date of the Action followed by the Name of the 
"^DD",8925,8925,1407,21,9,0)
Action. Example:  3/3/05  CONTINUE
"^DD",8925,8925,1407,21,10,0)
 
"^DD",8925,8925,1407,21,11,0)
If the PRF note is not linked to a flag action or the linked action date 
"^DD",8925,8925,1407,21,12,0)
or name cannot be found, the field has value "?".  If the note is not a 
"^DD",8925,8925,1407,21,13,0)
PRF note (a note with a title under Document Class PATIENT RECORD FLAG 
"^DD",8925,8925,1407,21,14,0)
CAT I or PATIENT RECORD FLAG CAT II), the field has value NA for 
"^DD",8925,8925,1407,21,15,0)
non-applicable.
"^DD",8925,8925,1407,21,16,0)
 
"^DD",8925,8925,1407,21,17,0)
Technical Note: Flag Actions and their linked note entry numbers are 
"^DD",8925,8925,1407,21,18,0)
stored in the PRF ASSIGNMENT HISTORY FILE (#26.14).  The Date and Action
"^DD",8925,8925,1407,21,19,0)
are attributes of the Assignment History entry the note is linked to.
"^DD",8925,8925,1407,"DT")
3050419
"^DD",8925.1,8925.1,.15,0)
PRF FLAG^CJ30^^ ; ^S X=$S($L($T(CFLDFLAG^TIUPRFL)):$$CFLDFLAG^TIUPRFL(D0),1:"?")
"^DD",8925.1,8925.1,.15,.1)
ASSOCIATED PATIENT RECORD FLAG
"^DD",8925.1,8925.1,.15,9)
^
"^DD",8925.1,8925.1,.15,9.01)

"^DD",8925.1,8925.1,.15,9.1)
S X=$S($L($T(CFLDFLAG^TIUPRFL)):$$CFLDFLAG^TIUPRFL(D0),1:"?")
"^DD",8925.1,8925.1,.15,21,0)
^^14^14^3050405^
"^DD",8925.1,8925.1,.15,21,1,0)
PRF FLAG applies only to PRF titles. The PRF FLAG of a PRF title is the
"^DD",8925.1,8925.1,.15,21,2,0)
name of the Patient Record Flag associated with the title.  (Notes cannot
"^DD",8925.1,8925.1,.15,21,3,0)
be written using a PRF title unless the title is associated with a flag 
"^DD",8925.1,8925.1,.15,21,4,0)
and that flag is assigned to the given patient.)
"^DD",8925.1,8925.1,.15,21,5,0)
 
"^DD",8925.1,8925.1,.15,21,6,0)
If the title is not associated with a flag or the associated flag cannot
"^DD",8925.1,8925.1,.15,21,7,0)
be found, the field has value "?".  If the Document Definition is not a
"^DD",8925.1,8925.1,.15,21,8,0)
title under Document Class PATIENT RECORD FLAG CAT I or PATIENT RECORD
"^DD",8925.1,8925.1,.15,21,9,0)
FLAG CAT II, the field has value NA for non-applicable.
"^DD",8925.1,8925.1,.15,21,10,0)
 
"^DD",8925.1,8925.1,.15,21,11,0)
Technical Note: Flags and their associations with titles are stored in 
"^DD",8925.1,8925.1,.15,21,12,0)
file PRF LOCAL FLAG (#26.11) or in file PRF NATIONAL FLAG (#26.15).
"^DD",8925.1,8925.1,.15,21,13,0)
 
"^DD",8925.1,8925.1,.15,21,14,0)
PRF FLAG is a BASIC field.
"^DD",8925.1,8925.1,.15,"DT")
3050405
**INSTALL NAME**
USR*1.0*27
"BLD",5475,0)
USR*1.0*27^AUTHORIZATION/SUBSCRIPTION^0^3060320^y
"BLD",5475,1,0)
^^2^2^3050217^^
"BLD",5475,1,1,0)
The description for this build can be found in the National Patch Module 
"BLD",5475,1,2,0)
under USR*1*27.
"BLD",5475,4,0)
^9.64PA^8930.8^1
"BLD",5475,4,8930.8,0)
8930.8
"BLD",5475,4,8930.8,222)
n^y^f^^n^^y^o^n
"BLD",5475,4,8930.8,224)
I Y=26
"BLD",5475,4,"B",8930.8,8930.8)

"BLD",5475,"INID")
n
"BLD",5475,"KRN",0)
^9.67PA^8989.52^19
"BLD",5475,"KRN",.4,0)
.4
"BLD",5475,"KRN",.401,0)
.401
"BLD",5475,"KRN",.402,0)
.402
"BLD",5475,"KRN",.403,0)
.403
"BLD",5475,"KRN",.5,0)
.5
"BLD",5475,"KRN",.84,0)
.84
"BLD",5475,"KRN",3.6,0)
3.6
"BLD",5475,"KRN",3.8,0)
3.8
"BLD",5475,"KRN",9.2,0)
9.2
"BLD",5475,"KRN",9.8,0)
9.8
"BLD",5475,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",5475,"KRN",9.8,"NM",1,0)
USR27^^0^B2121458
"BLD",5475,"KRN",9.8,"NM","B","USR27",1)

"BLD",5475,"KRN",19,0)
19
"BLD",5475,"KRN",19.1,0)
19.1
"BLD",5475,"KRN",101,0)
101
"BLD",5475,"KRN",409.61,0)
409.61
"BLD",5475,"KRN",771,0)
771
"BLD",5475,"KRN",870,0)
870
"BLD",5475,"KRN",8989.51,0)
8989.51
"BLD",5475,"KRN",8989.52,0)
8989.52
"BLD",5475,"KRN",8994,0)
8994
"BLD",5475,"KRN","B",.4,.4)

"BLD",5475,"KRN","B",.401,.401)

"BLD",5475,"KRN","B",.402,.402)

"BLD",5475,"KRN","B",.403,.403)

"BLD",5475,"KRN","B",.5,.5)

"BLD",5475,"KRN","B",.84,.84)

"BLD",5475,"KRN","B",3.6,3.6)

"BLD",5475,"KRN","B",3.8,3.8)

"BLD",5475,"KRN","B",9.2,9.2)

"BLD",5475,"KRN","B",9.8,9.8)

"BLD",5475,"KRN","B",19,19)

"BLD",5475,"KRN","B",19.1,19.1)

"BLD",5475,"KRN","B",101,101)

"BLD",5475,"KRN","B",409.61,409.61)

"BLD",5475,"KRN","B",771,771)

"BLD",5475,"KRN","B",870,870)

"BLD",5475,"KRN","B",8989.51,8989.51)

"BLD",5475,"KRN","B",8989.52,8989.52)

"BLD",5475,"KRN","B",8994,8994)

"BLD",5475,"PRE")
USR27
"BLD",5475,"QUES",0)
^9.62^^
"BLD",5475,"REQB",0)
^9.611^^0
"DATA",8930.8,26,0)
LINK TO FLAG^A^DOC^^LINK^BE LINKED to a PRF flag^to a PRF flag
"DATA",8930.8,26,2,0)
^^13^13^3050217^
"DATA",8930.8,26,2,1,0)
This action involves linking (or re-linking) an EXISTING Patient Record 
"DATA",8930.8,26,2,2,0)
Flag (PRF) document to a Patient Record Flag.
"DATA",8930.8,26,2,3,0)
 
"DATA",8930.8,26,2,4,0)
(More accurately, a PRF document is linked to an Assignment History Action
"DATA",8930.8,26,2,5,0)
for a given patient, a given flag, and a given flag assignment.)
"DATA",8930.8,26,2,6,0)
 
"DATA",8930.8,26,2,7,0)
Users authorized to create NEW PRF documents are automatically authorized 
"DATA",8930.8,26,2,8,0)
(in fact, REQUIRED) to link the new documents when creating them. Explicit
"DATA",8930.8,26,2,9,0)
authorization for (re)-linking a PRF document to a flag is required only
"DATA",8930.8,26,2,10,0)
for documents which already exist.  Such documents may have been created
"DATA",8930.8,26,2,11,0)
before PRF Phase II introduced links and have NO links, or they may
"DATA",8930.8,26,2,12,0)
require re-linking to the correct Assignment History Action for the
"DATA",8930.8,26,2,13,0)
correct patient and flag assignment.
"FIA",8930.8)
USR ACTION
"FIA",8930.8,0)
^USR(8930.8,
"FIA",8930.8,0,0)
8930.8I
"FIA",8930.8,0,1)
n^y^f^^n^^y^o^n
"FIA",8930.8,0,10)

"FIA",8930.8,0,11)
I Y=26
"FIA",8930.8,0,"RLRO")

"FIA",8930.8,0,"VR")
1.0^USR
"FIA",8930.8,8930.8)
0
"FIA",8930.8,8930.81)
0
"FIA",8930.8,8930.82)
0
"MBREQ")
0
"PKG",194,-1)
1^1
"PKG",194,0)
AUTHORIZATION/SUBSCRIPTION^USR^User Authorization
"PKG",194,20,0)
^9.402P^^
"PKG",194,22,0)
^9.49I^1^1
"PKG",194,22,1,0)
1.0^2970620
"PKG",194,22,1,"PAH",1,0)
27^3060320
"PKG",194,22,1,"PAH",1,1,0)
^^2^2^3060320
"PKG",194,22,1,"PAH",1,1,1,0)
The description for this build can be found in the National Patch Module 
"PKG",194,22,1,"PAH",1,1,2,0)
under USR*1*27.
"PRE")
USR27
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","USR27")
0^1^B2121458
"RTN","USR27",1,0)
USR27 ; SLC/MAM - Environment check - new USR Action Link to Flag ;2/17/05
"RTN","USR27",2,0)
 ;;1.0;AUTHORIZATION/SUBSCRIPTION;**27**;Jun 20, 1997
"RTN","USR27",3,0)
 ;
"RTN","USR27",4,0)
ENVCK ;Environment check
"RTN","USR27",5,0)
 ; Check if already have 26=LINK TO FLAG:
"RTN","USR27",6,0)
 I $P(^USR(8930.8,0),U,3)=26,$P($G(^USR(8930.8,26,0)),U)="LINK TO FLAG" W !!,"You already have action LINK TO FLAG. I will overwrite it." Q
"RTN","USR27",7,0)
 ; Check if current file is correct:
"RTN","USR27",8,0)
 I ($P(^USR(8930.8,0),U,3)'=25)!($P($G(^USR(8930.8,25,0)),U)'="ATTACH ID ENTRY") S XPDQUIT=2 D  Q
"RTN","USR27",9,0)
 . W !!,"Your last USR ACTION FILE entry should be ATTACH ID ENTRY, IEN #25."
"RTN","USR27",10,0)
 . W !,"I cannot create new USR Action LINK TO FLAG unless your current"
"RTN","USR27",11,0)
 . W !,"file is correct. Please contact EVS. Aborting."
"RTN","USR27",12,0)
 W !!,"Current file looks OK; I will create new USR Action LINK TO FLAG."
"RTN","USR27",13,0)
 Q
"RTN","USR27",14,0)
 ;
"SEC","^DIC",8930.8,8930.8,0,"AUDIT")
@
"SEC","^DIC",8930.8,8930.8,0,"DD")
@
"SEC","^DIC",8930.8,8930.8,0,"DEL")
@
"SEC","^DIC",8930.8,8930.8,0,"LAYGO")
@
"SEC","^DIC",8930.8,8930.8,0,"RD")
@
"SEC","^DIC",8930.8,8930.8,0,"WR")
@
"VER")
8.0^22.0
"^DD",8930.8,8930.8,0)
FIELD^^2^10
"^DD",8930.8,8930.8,0,"DDA")
N
"^DD",8930.8,8930.8,0,"DT")
3010614
"^DD",8930.8,8930.8,0,"ID","PHRASE")
D EN^DDIOL("   "_$$GET1^DIQ(8930.8,+Y,.08),"","?0")
"^DD",8930.8,8930.8,0,"IX","B",8930.8,.01)

"^DD",8930.8,8930.8,0,"NM","USR ACTION")

"^DD",8930.8,8930.8,0,"PT",8925.113,.01)

"^DD",8930.8,8930.8,0,"PT",8925.951,.01)

"^DD",8930.8,8930.8,0,"PT",8930.1,.03)

"^DD",8930.8,8930.8,0,"PT",8930.81,.01)

"^DD",8930.8,8930.8,0,"VRPK")
AUTHORIZATION/SUBSCRIPTION
"^DD",8930.8,8930.8,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",8930.8,8930.8,.01,.1)
ACTION NAME
"^DD",8930.8,8930.8,.01,1,0)
^.1
"^DD",8930.8,8930.8,.01,1,1,0)
8930.8^B
"^DD",8930.8,8930.8,.01,1,1,1)
S ^USR(8930.8,"B",$E(X,1,30),DA)=""
"^DD",8930.8,8930.8,.01,1,1,2)
K ^USR(8930.8,"B",$E(X,1,30),DA)
"^DD",8930.8,8930.8,.01,3)
Please enter the name of the event.
"^DD",8930.8,8930.8,.01,21,0)
^.001^3^3^3001026^^^^
"^DD",8930.8,8930.8,.01,21,1,0)
These are names of events which occur in connection with clinical
"^DD",8930.8,8930.8,.01,21,2,0)
narrative documents.  These are referenced by the User
"^DD",8930.8,8930.8,.01,21,3,0)
Authorization/Subscription file to associate users with events.
"^DD",8930.8,8930.8,.01,23,0)
^^8^8^3001026^
"^DD",8930.8,8930.8,.01,23,1,0)
Warning about changing an action name:
"^DD",8930.8,8930.8,.01,23,2,0)
 
"^DD",8930.8,8930.8,.01,23,3,0)
Action NAMES are checked when evaluating permissions in CANDO^TIULP. In
"^DD",8930.8,8930.8,.01,23,4,0)
addition, action NAME: ATTACH ID ENTRY is checked in input template USR
"^DD",8930.8,8930.8,.01,23,5,0)
DEFINE AUTHORIZATIONS when action ATTACH ID ENTRY is entered.
"^DD",8930.8,8930.8,.01,23,6,0)
 
"^DD",8930.8,8930.8,.01,23,7,0)
These areas (and possibly other new areas) MUST be updated if the NAME of
"^DD",8930.8,8930.8,.01,23,8,0)
an action is changed.
"^DD",8930.8,8930.8,.01,"DT")
2970225
"^DD",8930.8,8930.8,.02,0)
EVENT TYPE^S^A:authorization;S:subscription;^0;2^Q
"^DD",8930.8,8930.8,.02,3)
Indicate the type of event you are defining.
"^DD",8930.8,8930.8,.02,21,0)
^^7^7^2950209^^
"^DD",8930.8,8930.8,.02,21,1,0)
This file contains two types of events: those a user is AUTHORIZED to
"^DD",8930.8,8930.8,.02,21,2,0)
perform and those a user SUBSCRIBES to.  For example, a user is authorized
"^DD",8930.8,8930.8,.02,21,3,0)
to perform the Signature event, but a user subscribes to ("signs up to
"^DD",8930.8,8930.8,.02,21,4,0)
receive") a Notification event.
"^DD",8930.8,8930.8,.02,21,6,0)
This field helps to define the meaning of an event and its relationship to
"^DD",8930.8,8930.8,.02,21,7,0)
a user.
"^DD",8930.8,8930.8,.02,"DT")
2950209
"^DD",8930.8,8930.8,.03,0)
APPLIES TO^S^DOC:document;DEF:definition;^0;3^Q
"^DD",8930.8,8930.8,.03,3)
Indicate whether event applies to documents or their definitions
"^DD",8930.8,8930.8,.03,"DT")
2950207
"^DD",8930.8,8930.8,.04,0)
ASSOCIATED PROTOCOL^P101'^ORD(101,^0;4^Q
"^DD",8930.8,8930.8,.04,1,0)
^.1^^0
"^DD",8930.8,8930.8,.04,3)
Indicate which Protocol corresponds to this event.
"^DD",8930.8,8930.8,.04,"DT")
2970109
"^DD",8930.8,8930.8,.05,0)
USER VERB^F^^0;5^K:$L(X)>50!($L(X)<3) X
"^DD",8930.8,8930.8,.05,3)
Example: In "You cannot SIGN this unsigned document", the user verb is "SIGN".  Uppercase, 3-50 characters.
"^DD",8930.8,8930.8,.05,21,0)
^^9^9^3010614^
"^DD",8930.8,8930.8,.05,21,1,0)
This word or phrase is displayed in explanatory messages when the user is
"^DD",8930.8,8930.8,.05,21,2,0)
denied authority to perform the given action.  Such a message might read,
"^DD",8930.8,8930.8,.05,21,3,0)
"You cannot SIGN this unsigned progress note", where the USER VERB is
"^DD",8930.8,8930.8,.05,21,4,0)
"SIGN".
"^DD",8930.8,8930.8,.05,21,5,0)
 
"^DD",8930.8,8930.8,.05,21,6,0)
The USER VERB must make grammatical sense inserted in a sentence of the
"^DD",8930.8,8930.8,.05,21,7,0)
form: "You cannot [     ] this unsigned progress note."
"^DD",8930.8,8930.8,.05,21,8,0)
 
"^DD",8930.8,8930.8,.05,21,9,0)
Please use uppercase, 3-50 characters.
"^DD",8930.8,8930.8,.05,"DT")
3010614
"^DD",8930.8,8930.8,.06,0)
DOCUMENT VERB^F^^0;6^K:$L(X)>40!($L(X)<3) X
"^DD",8930.8,8930.8,.06,3)
Example: In "An unsigned progress note can BE SIGNED by an author/dictator", the document verb is "BE SIGNED". Uppercase,3-40 characters.
"^DD",8930.8,8930.8,.06,21,0)
^.001^10^10^3001024^^
"^DD",8930.8,8930.8,.06,21,1,0)
This word or phrase is used in business rule options when displaying
"^DD",8930.8,8930.8,.06,21,2,0)
an authorization in sentence form.
"^DD",8930.8,8930.8,.06,21,3,0)
     
"^DD",8930.8,8930.8,.06,21,4,0)
A business rule might read: "An unsigned Progress Note can BE SIGNED by
"^DD",8930.8,8930.8,.06,21,5,0)
an author/dictator." The DOCUMENT VERB in this rule is "BE SIGNED".
"^DD",8930.8,8930.8,.06,21,6,0)
 
"^DD",8930.8,8930.8,.06,21,7,0)
The DOCUMENT VERB must make grammatical sense inserted in a sentence of
"^DD",8930.8,8930.8,.06,21,8,0)
the form: "An unsigned progress note can [      ] by an author/dictator."
"^DD",8930.8,8930.8,.06,21,9,0)
 
"^DD",8930.8,8930.8,.06,21,10,0)
Please use uppercase, 3-40 characters.
"^DD",8930.8,8930.8,.06,"DT")
3000215
"^DD",8930.8,8930.8,.07,0)
USER VERB MODIFIER^F^^0;7^K:$L(X)>30!($L(X)<3) X
"^DD",8930.8,8930.8,.07,3)
Example: In "You cannot LINK this unsigned note with a request", the user verb modifier is "with a request".  Lowercase, 3-30 characters.
"^DD",8930.8,8930.8,.07,21,0)
^.001^16^16^3010614^^
"^DD",8930.8,8930.8,.07,21,1,0)
Sometimes, in writing messages to the user denying a permission, the
"^DD",8930.8,8930.8,.07,21,2,0)
action must be split into two parts.  In such cases, the USER VERB
"^DD",8930.8,8930.8,.07,21,3,0)
MODIFIER is the second part.
"^DD",8930.8,8930.8,.07,21,4,0)
 
"^DD",8930.8,8930.8,.07,21,5,0)
Example: In "You cannot LINK this UNSIGNED PROGRESS NOTE with a request",
"^DD",8930.8,8930.8,.07,21,6,0)
the USER VERB is "LINK", and the USER VERB MODIFIER is "with a request".
"^DD",8930.8,8930.8,.07,21,7,0)
 
"^DD",8930.8,8930.8,.07,21,8,0)
The USER VERB MODIFIER must make grammatical sense when inserted in: 
"^DD",8930.8,8930.8,.07,21,9,0)
     "You cannot LINK this UNSIGNED PROGRESS NOTE [    ]."
"^DD",8930.8,8930.8,.07,21,10,0)
 
"^DD",8930.8,8930.8,.07,21,11,0)
Please use lowercase, 3-30 characters.
"^DD",8930.8,8930.8,.07,21,12,0)
 
"^DD",8930.8,8930.8,.07,21,13,0)
If an action has an IDENTIFYING PHRASE or a USER VERB MODIFIER, the
"^DD",8930.8,8930.8,.07,21,14,0)
business rule ADD or EDIT action presents the user with a clarifying note
"^DD",8930.8,8930.8,.07,21,15,0)
about the rule they are creating immediately after the user enters an
"^DD",8930.8,8930.8,.07,21,16,0)
action.
"^DD",8930.8,8930.8,.07,"DT")
3010614
"^DD",8930.8,8930.8,.08,0)
IDENTIFYING PHRASE^F^^3;1^K:$L(X)>50!($L(X)<3) X
"^DD",8930.8,8930.8,.08,3)
Enter a phrase to help the user distinguish this action from others. 3-50 characters.
"^DD",8930.8,8930.8,.08,21,0)
^.001^10^10^3001024^^
"^DD",8930.8,8930.8,.08,21,1,0)
This field is NOT required.  It is available for use in helping users
"^DD",8930.8,8930.8,.08,21,2,0)
identify the correct action when writing business rules.  It appears
"^DD",8930.8,8930.8,.08,21,3,0)
when selecting actions from a list.
"^DD",8930.8,8930.8,.08,21,4,0)
 
"^DD",8930.8,8930.8,.08,21,5,0)
For examples, see actions ATTACH TO ID NOTE, and ATTACH ID ENTRY.
"^DD",8930.8,8930.8,.08,21,6,0)
 
"^DD",8930.8,8930.8,.08,21,7,0)
If an action has an IDENTIFYING PHRASE or a USER VERB MODIFIER, the
"^DD",8930.8,8930.8,.08,21,8,0)
business rule ADD or EDIT action presents the user with a clarifying note
"^DD",8930.8,8930.8,.08,21,9,0)
about the rule they are creating immediately after the user enters an
"^DD",8930.8,8930.8,.08,21,10,0)
action.
"^DD",8930.8,8930.8,.08,"DT")
3000601
"^DD",8930.8,8930.8,1,0)
IMPLIED EVENT^8930.81P^^1;0
"^DD",8930.8,8930.8,1,21,0)
^^9^9^2941011^
"^DD",8930.8,8930.8,1,21,1,0)
Some events imply other events.  For example, the ability to Sign a
"^DD",8930.8,8930.8,1,21,2,0)
document implies the ability to View the document.  Thus, View is an
"^DD",8930.8,8930.8,1,21,3,0)
implied event for the Signature event.
"^DD",8930.8,8930.8,1,21,4,0)
 
"^DD",8930.8,8930.8,1,21,6,0)
Authorization/Subscription file, the user will be shown implied events for
"^DD",8930.8,8930.8,1,21,7,0)
the given event and asked if they wish to include implied events for the
"^DD",8930.8,8930.8,1,21,8,0)
current entry.  If so, a copy of the current entry will be created for each
"^DD",8930.8,8930.8,1,21,9,0)
implied event.
"^DD",8930.8,8930.8,1,"DT")
2941011
"^DD",8930.8,8930.8,2,0)
DESCRIPTION^8930.82^^2;0
"^DD",8930.8,8930.8,2,21,0)
^^17^17^2941011^
"^DD",8930.8,8930.8,2,21,1,0)
 
"^DD",8930.8,8930.8,2,21,2,0)
The event description will be used in conjunction with the
"^DD",8930.8,8930.8,2,21,3,0)
Authorization/Subscription field to define what it means to associate
"^DD",8930.8,8930.8,2,21,4,0)
users with the event.
"^DD",8930.8,8930.8,2,21,6,0)
In most cases, this event description will suffice to determine the
"^DD",8930.8,8930.8,2,21,7,0)
meaning of User Authorization/Subscription file entries.
"^DD",8930.8,8930.8,2,21,8,0)
 
"^DD",8930.8,8930.8,2,21,9,0)
In rare cases, further description of what an event means when associated
"^DD",8930.8,8930.8,2,21,10,0)
with users, document type and document status will be made in the
"^DD",8930.8,8930.8,2,21,11,0)
description field of the User Authorization/Subscription file.  For
"^DD",8930.8,8930.8,2,21,12,0)
example, a signature event associated with documents of status
"^DD",8930.8,8930.8,2,21,13,0)
completed means a walkup signature.
"^DD",8930.8,8930.8,2,21,14,0)
 
"^DD",8930.8,8930.8,2,21,15,0)
This information will be used by persons creating entries in the User
"^DD",8930.8,8930.8,2,21,16,0)
Authorization/Subscription file and by persons assigning users to user
"^DD",8930.8,8930.8,2,21,17,0)
classes, when checking what events those user classes are associated with.
"^DD",8930.8,8930.81,0)
IMPLIED EVENT SUB-FIELD^^.01^1
"^DD",8930.8,8930.81,0,"IX","B",8930.81,.01)

"^DD",8930.8,8930.81,0,"NM","IMPLIED EVENT")

"^DD",8930.8,8930.81,0,"UP")
8930.8
"^DD",8930.8,8930.81,.01,0)
IMPLIED EVENT^P8930.8'^USR(8930.8,^0;1^Q
"^DD",8930.8,8930.81,.01,1,0)
^.1
"^DD",8930.8,8930.81,.01,1,1,0)
8930.81^B
"^DD",8930.8,8930.81,.01,1,1,1)
S ^USR(8930.8,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",8930.8,8930.81,.01,1,1,2)
K ^USR(8930.8,DA(1),1,"B",$E(X,1,30),DA)
"^DD",8930.8,8930.81,.01,3)
If this event implies another event, enter the implied event, for example, signature implies view.
"^DD",8930.8,8930.81,.01,"DT")
2941011
"^DD",8930.8,8930.82,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",8930.8,8930.82,0,"NM","DESCRIPTION")

"^DD",8930.8,8930.82,0,"UP")
8930.8
"^DD",8930.8,8930.82,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",8930.8,8930.82,.01,3)
Enter a description of the event and what it means to associate users with this event.
"^DD",8930.8,8930.82,.01,"DT")
2940921
"^DIC",8930.8,8930.8,0)
USR ACTION^8930.8
"^DIC",8930.8,8930.8,0,"GL")
^USR(8930.8,
"^DIC",8930.8,8930.8,"%D",0)
^^10^10^2970203^^
"^DIC",8930.8,8930.8,"%D",1,0)
This file encodes actions which occur in connection with clinical
"^DIC",8930.8,8930.8,"%D",2,0)
narrative documents.
"^DIC",8930.8,8930.8,"%D",3,0)
 
"^DIC",8930.8,8930.8,"%D",4,0)
These actions are referenced by entries in the User
"^DIC",8930.8,8930.8,"%D",5,0)
Authorization/Subscription file to associate users with actions.
"^DIC",8930.8,8930.8,"%D",6,0)
 
"^DIC",8930.8,8930.8,"%D",7,0)
This file contains 2 kinds of actions: those a user is authorized to
"^DIC",8930.8,8930.8,"%D",8,0)
perform on a document, and those a user subscribes to for a document.  For
"^DIC",8930.8,8930.8,"%D",9,0)
example, a user is authorized to perform the Signature action, but a user
"^DIC",8930.8,8930.8,"%D",10,0)
subscribes to ("signs up to receive") a Notification action.
"^DIC",8930.8,"B","USR ACTION",8930.8)

**INSTALL NAME**
DG*5.3*554
"BLD",5015,0)
DG*5.3*554^REGISTRATION^0^3060320^y
"BLD",5015,1,0)
^^2^2^3031205^
"BLD",5015,1,1,0)
Please refer to patch DG*5.3*554 in the National Patch Module for a
"BLD",5015,1,2,0)
complete description of this patch.
"BLD",5015,4,0)
^9.64PA^26.18^4
"BLD",5015,4,26.11,0)
26.11
"BLD",5015,4,26.11,2,0)
^9.641^26.112^2
"BLD",5015,4,26.11,2,26.11,0)
PRF LOCAL FLAG  (File-top level)
"BLD",5015,4,26.11,2,26.11,1,0)
^9.6411^.07^1
"BLD",5015,4,26.11,2,26.11,1,.07,0)
TIU PN TITLE
"BLD",5015,4,26.11,2,26.112,0)
PRINCIPAL INVESTIGATOR(S)  (sub-file)
"BLD",5015,4,26.11,2,26.112,1,0)
^9.6411^.01^1
"BLD",5015,4,26.11,2,26.112,1,.01,0)
PRINCIPAL INVESTIGATOR(S)
"BLD",5015,4,26.11,222)
y^n^p^^^^n^^n
"BLD",5015,4,26.11,224)

"BLD",5015,4,26.14,0)
26.14
"BLD",5015,4,26.14,2,0)
^9.641^26.14^1
"BLD",5015,4,26.14,2,26.14,0)
PRF ASSIGNMENT HISTORY  (File-top level)
"BLD",5015,4,26.14,2,26.14,1,0)
^9.6411^.06^2
"BLD",5015,4,26.14,2,26.14,1,.03,0)
ACTION
"BLD",5015,4,26.14,2,26.14,1,.06,0)
TIU PN LINK IEN
"BLD",5015,4,26.14,222)
y^n^p^^^^n^^n
"BLD",5015,4,26.14,224)

"BLD",5015,4,26.15,0)
26.15
"BLD",5015,4,26.15,2,0)
^9.641^26.152^2
"BLD",5015,4,26.15,2,26.15,0)
PRF NATIONAL FLAG  (File-top level)
"BLD",5015,4,26.15,2,26.15,1,0)
^9.6411^.07^1
"BLD",5015,4,26.15,2,26.15,1,.07,0)
TIU PN TITLE
"BLD",5015,4,26.15,2,26.152,0)
PRINCIPAL INVESTIGATOR(S)  (sub-file)
"BLD",5015,4,26.15,2,26.152,1,0)
^9.6411^.01^1
"BLD",5015,4,26.15,2,26.152,1,.01,0)
PRINCIPAL INVESTIGATOR(S)
"BLD",5015,4,26.15,222)
y^n^p^^^^n^^n
"BLD",5015,4,26.15,224)

"BLD",5015,4,26.18,0)
26.18
"BLD",5015,4,26.18,2,0)
^9.641^26.18^1
"BLD",5015,4,26.18,2,26.18,0)
PRF PARAMETERS  (File-top level)
"BLD",5015,4,26.18,2,26.18,1,0)
^9.6411^6^1
"BLD",5015,4,26.18,2,26.18,1,6,0)
PRF PHASE 2 ACTIVATION
"BLD",5015,4,26.18,222)
y^n^p^^^^n^^n
"BLD",5015,4,26.18,224)

"BLD",5015,4,"APDD",26.11,26.11)

"BLD",5015,4,"APDD",26.11,26.11,.07)

"BLD",5015,4,"APDD",26.11,26.112)

"BLD",5015,4,"APDD",26.11,26.112,.01)

"BLD",5015,4,"APDD",26.14,26.14)

"BLD",5015,4,"APDD",26.14,26.14,.03)

"BLD",5015,4,"APDD",26.14,26.14,.06)

"BLD",5015,4,"APDD",26.15,26.15)

"BLD",5015,4,"APDD",26.15,26.15,.07)

"BLD",5015,4,"APDD",26.15,26.152)

"BLD",5015,4,"APDD",26.15,26.152,.01)

"BLD",5015,4,"APDD",26.18,26.18)

"BLD",5015,4,"APDD",26.18,26.18,6)

"BLD",5015,4,"B",26.11,26.11)

"BLD",5015,4,"B",26.14,26.14)

"BLD",5015,4,"B",26.15,26.15)

"BLD",5015,4,"B",26.18,26.18)

"BLD",5015,"INID")
n^n
"BLD",5015,"INIT")
POST^DG53P554
"BLD",5015,"KRN",0)
^9.67PA^8989.52^19
"BLD",5015,"KRN",.4,0)
.4
"BLD",5015,"KRN",.4,"NM",0)
^9.68A^^
"BLD",5015,"KRN",.401,0)
.401
"BLD",5015,"KRN",.402,0)
.402
"BLD",5015,"KRN",.403,0)
.403
"BLD",5015,"KRN",.5,0)
.5
"BLD",5015,"KRN",.84,0)
.84
"BLD",5015,"KRN",.84,"NM",0)
^9.68A^9^9
"BLD",5015,"KRN",.84,"NM",1,0)
261101^^0
"BLD",5015,"KRN",.84,"NM",2,0)
261102^^0
"BLD",5015,"KRN",.84,"NM",3,0)
261103^^0
"BLD",5015,"KRN",.84,"NM",4,0)
261104^^0
"BLD",5015,"KRN",.84,"NM",5,0)
261105^^0
"BLD",5015,"KRN",.84,"NM",6,0)
261106^^0
"BLD",5015,"KRN",.84,"NM",7,0)
261107^^0
"BLD",5015,"KRN",.84,"NM",8,0)
261108^^0
"BLD",5015,"KRN",.84,"NM",9,0)
261109^^0
"BLD",5015,"KRN",.84,"NM","B",261101,1)

"BLD",5015,"KRN",.84,"NM","B",261102,2)

"BLD",5015,"KRN",.84,"NM","B",261103,3)

"BLD",5015,"KRN",.84,"NM","B",261104,4)

"BLD",5015,"KRN",.84,"NM","B",261105,5)

"BLD",5015,"KRN",.84,"NM","B",261106,6)

"BLD",5015,"KRN",.84,"NM","B",261107,7)

"BLD",5015,"KRN",.84,"NM","B",261108,8)

"BLD",5015,"KRN",.84,"NM","B",261109,9)

"BLD",5015,"KRN",3.6,0)
3.6
"BLD",5015,"KRN",3.8,0)
3.8
"BLD",5015,"KRN",9.2,0)
9.2
"BLD",5015,"KRN",9.8,0)
9.8
"BLD",5015,"KRN",9.8,"NM",0)
^9.68A^54^38
"BLD",5015,"KRN",9.8,"NM",1,0)
DGPFAPI^^0^B32121180
"BLD",5015,"KRN",9.8,"NM",15,0)
DGPFAPI1^^0^B24151608
"BLD",5015,"KRN",9.8,"NM",16,0)
DGPFAPI2^^0^B18390437
"BLD",5015,"KRN",9.8,"NM",17,0)
DGPFAAH^^0^B32554418
"BLD",5015,"KRN",9.8,"NM",18,0)
DGPFAA2^^0^B47055667
"BLD",5015,"KRN",9.8,"NM",19,0)
DGPFALF^^0^B24023495
"BLD",5015,"KRN",9.8,"NM",20,0)
DGPFANF^^0^B7058990
"BLD",5015,"KRN",9.8,"NM",21,0)
DG53P554^^0^B21363644
"BLD",5015,"KRN",9.8,"NM",22,0)
DGPFLF3^^0^B51450229
"BLD",5015,"KRN",9.8,"NM",23,0)
DGPFLF4^^0^B29613889
"BLD",5015,"KRN",9.8,"NM",24,0)
DGPFLMA2^^0^B33213840
"BLD",5015,"KRN",9.8,"NM",25,0)
DGPFLMA3^^0^B75304468
"BLD",5015,"KRN",9.8,"NM",26,0)
DGPFLMA4^^0^B38033813
"BLD",5015,"KRN",9.8,"NM",30,0)
DGPFDD^^0^B17115421
"BLD",5015,"KRN",9.8,"NM",31,0)
DGPFLFD1^^0^B42648016
"BLD",5015,"KRN",9.8,"NM",32,0)
DGPFALF1^^0^B9747173
"BLD",5015,"KRN",9.8,"NM",33,0)
DGPFLF5^^0^B71981378
"BLD",5015,"KRN",9.8,"NM",34,0)
DGPFLF6^^0^B24356570
"BLD",5015,"KRN",9.8,"NM",35,0)
DGPFLMU1^^0^B44001072
"BLD",5015,"KRN",9.8,"NM",36,0)
DGPFLMD1^^0^B13946993
"BLD",5015,"KRN",9.8,"NM",37,0)
DGPFUT^^0^B25945716
"BLD",5015,"KRN",9.8,"NM",38,0)
DGPFUT2^^0^B35502181
"BLD",5015,"KRN",9.8,"NM",39,0)
DGPFUT3^^0^B35131526
"BLD",5015,"KRN",9.8,"NM",40,0)
DGPFUT4^^0^B36954590
"BLD",5015,"KRN",9.8,"NM",41,0)
DGPFUT5^^0^B21222419
"BLD",5015,"KRN",9.8,"NM",42,0)
DGPFRAL^^0^B10972020
"BLD",5015,"KRN",9.8,"NM",43,0)
DGPFRAL1^^0^B71927213
"BLD",5015,"KRN",9.8,"NM",44,0)
DGPFRPA^^0^B10216886
"BLD",5015,"KRN",9.8,"NM",45,0)
DGPFRPA1^^0^B35851329
"BLD",5015,"KRN",9.8,"NM",46,0)
DGPFRFA^^0^B17792002
"BLD",5015,"KRN",9.8,"NM",47,0)
DGPFRFA1^^0^B41214587
"BLD",5015,"KRN",9.8,"NM",48,0)
DGPFRAB^^0^B22179980
"BLD",5015,"KRN",9.8,"NM",49,0)
DGPFRAB1^^0^B63522463
"BLD",5015,"KRN",9.8,"NM",50,0)
DGPFRPI^^0^B19041361
"BLD",5015,"KRN",9.8,"NM",51,0)
DGPFRPI1^^0^B29056272
"BLD",5015,"KRN",9.8,"NM",52,0)
DGPFRPI2^^0^B22884103
"BLD",5015,"KRN",9.8,"NM",53,0)
DGPFPARM^^0^B3768728
"BLD",5015,"KRN",9.8,"NM",54,0)
DGPFHLU6^^0^B6742118
"BLD",5015,"KRN",9.8,"NM","B","DG53P554",21)

"BLD",5015,"KRN",9.8,"NM","B","DGPFAA2",18)

"BLD",5015,"KRN",9.8,"NM","B","DGPFAAH",17)

"BLD",5015,"KRN",9.8,"NM","B","DGPFALF",19)

"BLD",5015,"KRN",9.8,"NM","B","DGPFALF1",32)

"BLD",5015,"KRN",9.8,"NM","B","DGPFANF",20)

"BLD",5015,"KRN",9.8,"NM","B","DGPFAPI",1)

"BLD",5015,"KRN",9.8,"NM","B","DGPFAPI1",15)

"BLD",5015,"KRN",9.8,"NM","B","DGPFAPI2",16)

"BLD",5015,"KRN",9.8,"NM","B","DGPFDD",30)

"BLD",5015,"KRN",9.8,"NM","B","DGPFHLU6",54)

"BLD",5015,"KRN",9.8,"NM","B","DGPFLF3",22)

"BLD",5015,"KRN",9.8,"NM","B","DGPFLF4",23)

"BLD",5015,"KRN",9.8,"NM","B","DGPFLF5",33)

"BLD",5015,"KRN",9.8,"NM","B","DGPFLF6",34)

"BLD",5015,"KRN",9.8,"NM","B","DGPFLFD1",31)

"BLD",5015,"KRN",9.8,"NM","B","DGPFLMA2",24)

"BLD",5015,"KRN",9.8,"NM","B","DGPFLMA3",25)

"BLD",5015,"KRN",9.8,"NM","B","DGPFLMA4",26)

"BLD",5015,"KRN",9.8,"NM","B","DGPFLMD1",36)

"BLD",5015,"KRN",9.8,"NM","B","DGPFLMU1",35)

"BLD",5015,"KRN",9.8,"NM","B","DGPFPARM",53)

"BLD",5015,"KRN",9.8,"NM","B","DGPFRAB",48)

"BLD",5015,"KRN",9.8,"NM","B","DGPFRAB1",49)

"BLD",5015,"KRN",9.8,"NM","B","DGPFRAL",42)

"BLD",5015,"KRN",9.8,"NM","B","DGPFRAL1",43)

"BLD",5015,"KRN",9.8,"NM","B","DGPFRFA",46)

"BLD",5015,"KRN",9.8,"NM","B","DGPFRFA1",47)

"BLD",5015,"KRN",9.8,"NM","B","DGPFRPA",44)

"BLD",5015,"KRN",9.8,"NM","B","DGPFRPA1",45)

"BLD",5015,"KRN",9.8,"NM","B","DGPFRPI",50)

"BLD",5015,"KRN",9.8,"NM","B","DGPFRPI1",51)

"BLD",5015,"KRN",9.8,"NM","B","DGPFRPI2",52)

"BLD",5015,"KRN",9.8,"NM","B","DGPFUT",37)

"BLD",5015,"KRN",9.8,"NM","B","DGPFUT2",38)

"BLD",5015,"KRN",9.8,"NM","B","DGPFUT3",39)

"BLD",5015,"KRN",9.8,"NM","B","DGPFUT4",40)

"BLD",5015,"KRN",9.8,"NM","B","DGPFUT5",41)

"BLD",5015,"KRN",19,0)
19
"BLD",5015,"KRN",19,"NM",0)
^9.68A^5^5
"BLD",5015,"KRN",19,"NM",1,0)
DGPF RECORD FLAG REPORTS MENU^^2
"BLD",5015,"KRN",19,"NM",2,0)
DGPF ACTION NOT LINKED REPORT^^0
"BLD",5015,"KRN",19,"NM",3,0)
DGPF PATIENT ASSIGNMENT REPORT^^0
"BLD",5015,"KRN",19,"NM",4,0)
DGPF APPROVED BY REPORT^^0
"BLD",5015,"KRN",19,"NM",5,0)
DGPF PRINCIPAL INVEST REPORT^^0
"BLD",5015,"KRN",19,"NM","B","DGPF ACTION NOT LINKED REPORT",2)

"BLD",5015,"KRN",19,"NM","B","DGPF APPROVED BY REPORT",4)

"BLD",5015,"KRN",19,"NM","B","DGPF PATIENT ASSIGNMENT REPORT",3)

"BLD",5015,"KRN",19,"NM","B","DGPF PRINCIPAL INVEST REPORT",5)

"BLD",5015,"KRN",19,"NM","B","DGPF RECORD FLAG REPORTS MENU",1)

"BLD",5015,"KRN",19.1,0)
19.1
"BLD",5015,"KRN",101,0)
101
"BLD",5015,"KRN",409.61,0)
409.61
"BLD",5015,"KRN",771,0)
771
"BLD",5015,"KRN",870,0)
870
"BLD",5015,"KRN",8989.51,0)
8989.51
"BLD",5015,"KRN",8989.52,0)
8989.52
"BLD",5015,"KRN",8994,0)
8994
"BLD",5015,"KRN","B",.4,.4)

"BLD",5015,"KRN","B",.401,.401)

"BLD",5015,"KRN","B",.402,.402)

"BLD",5015,"KRN","B",.403,.403)

"BLD",5015,"KRN","B",.5,.5)

"BLD",5015,"KRN","B",.84,.84)

"BLD",5015,"KRN","B",3.6,3.6)

"BLD",5015,"KRN","B",3.8,3.8)

"BLD",5015,"KRN","B",9.2,9.2)

"BLD",5015,"KRN","B",9.8,9.8)

"BLD",5015,"KRN","B",19,19)

"BLD",5015,"KRN","B",19.1,19.1)

"BLD",5015,"KRN","B",101,101)

"BLD",5015,"KRN","B",409.61,409.61)

"BLD",5015,"KRN","B",771,771)

"BLD",5015,"KRN","B",870,870)

"BLD",5015,"KRN","B",8989.51,8989.51)

"BLD",5015,"KRN","B",8989.52,8989.52)

"BLD",5015,"KRN","B",8994,8994)

"BLD",5015,"PRE")
DG53P554
"BLD",5015,"QUES",0)
^9.62^^
"BLD",5015,"REQB",0)
^9.611^5^5
"BLD",5015,"REQB",1,0)
DG*5.3*425^2
"BLD",5015,"REQB",2,0)
DG*5.3*555^2
"BLD",5015,"REQB",3,0)
TIU*1.0*184^2
"BLD",5015,"REQB",4,0)
DG*5.3*623^2
"BLD",5015,"REQB",5,0)
USR*1.0*27^2
"BLD",5015,"REQB","B","DG*5.3*425",1)

"BLD",5015,"REQB","B","DG*5.3*555",2)

"BLD",5015,"REQB","B","DG*5.3*623",4)

"BLD",5015,"REQB","B","TIU*1.0*184",3)

"BLD",5015,"REQB","B","USR*1.0*27",5)

"FIA",26.11)
PRF LOCAL FLAG
"FIA",26.11,0)
^DGPF(26.11,
"FIA",26.11,0,0)
26.11I
"FIA",26.11,0,1)
y^n^p^^^^n^^n
"FIA",26.11,0,10)

"FIA",26.11,0,11)

"FIA",26.11,0,"RLRO")

"FIA",26.11,0,"VR")
5.3^DG
"FIA",26.11,26.11)
1
"FIA",26.11,26.11,.07)

"FIA",26.11,26.11,2)

"FIA",26.11,26.112)
1
"FIA",26.11,26.112,.01)

"FIA",26.14)
PRF ASSIGNMENT HISTORY
"FIA",26.14,0)
^DGPF(26.14,
"FIA",26.14,0,0)
26.14IP
"FIA",26.14,0,1)
y^n^p^^^^n^^n
"FIA",26.14,0,10)

"FIA",26.14,0,11)

"FIA",26.14,0,"RLRO")

"FIA",26.14,0,"VR")
5.3^DG
"FIA",26.14,26.14)
1
"FIA",26.14,26.14,.03)

"FIA",26.14,26.14,.06)

"FIA",26.15)
PRF NATIONAL FLAG
"FIA",26.15,0)
^DGPF(26.15,
"FIA",26.15,0,0)
26.15I
"FIA",26.15,0,1)
y^n^p^^^^n^^n
"FIA",26.15,0,10)

"FIA",26.15,0,11)

"FIA",26.15,0,"RLRO")

"FIA",26.15,0,"VR")
5.3^DG
"FIA",26.15,26.15)
1
"FIA",26.15,26.15,.07)

"FIA",26.15,26.15,2)

"FIA",26.15,26.152)
1
"FIA",26.15,26.152,.01)

"FIA",26.18)
PRF PARAMETERS
"FIA",26.18,0)
^DGPF(26.18,
"FIA",26.18,0,0)
26.18
"FIA",26.18,0,1)
y^n^p^^^^n^^n
"FIA",26.18,0,10)

"FIA",26.18,0,11)

"FIA",26.18,0,"RLRO")

"FIA",26.18,0,"VR")
5.3^DG
"FIA",26.18,26.18)
1
"FIA",26.18,26.18,6)

"INIT")
POST^DG53P554
"IX",26.11,26.11,"ATIU",0)
26.11^ATIU^This is a sort only index of the TIU PN TITLE and NAME fields.^R^^R^IR^I^26.11^^^^^S
"IX",26.11,26.11,"ATIU",.1,0)
^^2^2^3040308^
"IX",26.11,26.11,"ATIU",.1,1,0)
This cross reference will enable quick lookups to find associated TIU PN 
"IX",26.11,26.11,"ATIU",.1,2,0)
Titles that are linked with Patient Record Flag names.
"IX",26.11,26.11,"ATIU",1)
S ^DGPF(26.11,"ATIU",$E(X(1),1,99),$E(X(2),1,30),DA)=""
"IX",26.11,26.11,"ATIU",2)
K ^DGPF(26.11,"ATIU",$E(X(1),1,99),$E(X(2),1,30),DA)
"IX",26.11,26.11,"ATIU",2.5)
K ^DGPF(26.11,"ATIU")
"IX",26.11,26.11,"ATIU",11.1,0)
^.114IA^2^2
"IX",26.11,26.11,"ATIU",11.1,1,0)
1^F^26.11^.07^99^1^F
"IX",26.11,26.11,"ATIU",11.1,1,3)

"IX",26.11,26.11,"ATIU",11.1,2,0)
2^F^26.11^.01^30^2^F
"IX",26.11,26.11,"ATIU",11.1,2,3)

"IX",26.11,26.11,"C",0)
26.11^C^Lookup & Sort by PRINCIPAL INVESTIGATOR and NAME fields.^R^^F^IR^W^26.112^^^^^LS
"IX",26.11,26.11,"C",1)
S ^DGPF(26.11,"C",X,DA(1),DA)=""
"IX",26.11,26.11,"C",2)
K ^DGPF(26.11,"C",X,DA(1),DA)
"IX",26.11,26.11,"C",2.5)
K ^DGPF(26.11,"C")
"IX",26.11,26.11,"C",11.1,0)
^.114IA^1^1
"IX",26.11,26.11,"C",11.1,1,0)
1^F^26.112^.01^^1^F
"IX",26.14,26.14,"ATIUPN",0)
26.14^ATIUPN^This is a sort only index of the TIU PN LINK field.^R^^F^IR^I^26.14^^^^^S
"IX",26.14,26.14,"ATIUPN",1)
S ^DGPF(26.14,"ATIUPN",X,DA)=""
"IX",26.14,26.14,"ATIUPN",2)
K ^DGPF(26.14,"ATIUPN",X,DA)
"IX",26.14,26.14,"ATIUPN",2.5)
K ^DGPF(26.14,"ATIUPN")
"IX",26.14,26.14,"ATIUPN",11.1,0)
^.114IA^1^1
"IX",26.14,26.14,"ATIUPN",11.1,1,0)
1^F^26.14^.06^^1^F
"IX",26.15,26.15,"ATIU",0)
26.15^ATIU^This is a sort only index of the TIU PN TITLE and NAME fields.^R^^R^IR^I^26.15^^^^^S
"IX",26.15,26.15,"ATIU",.1,0)
^^2^2^3040308^
"IX",26.15,26.15,"ATIU",.1,1,0)
This cross reference will enable quick lookups to find associated TIU PN 
"IX",26.15,26.15,"ATIU",.1,2,0)
Titles that are linked with Patient Record Flag names.
"IX",26.15,26.15,"ATIU",1)
S ^DGPF(26.15,"ATIU",$E(X(1),1,99),$E(X(2),1,30),DA)=""
"IX",26.15,26.15,"ATIU",2)
K ^DGPF(26.15,"ATIU",$E(X(1),1,99),$E(X(2),1,30),DA)
"IX",26.15,26.15,"ATIU",2.5)
K ^DGPF(26.15,"ATIU")
"IX",26.15,26.15,"ATIU",11.1,0)
^.114IA^2^2
"IX",26.15,26.15,"ATIU",11.1,1,0)
1^F^26.15^.07^99^1^F
"IX",26.15,26.15,"ATIU",11.1,1,3)

"IX",26.15,26.15,"ATIU",11.1,2,0)
2^F^26.15^.01^30^2^F
"IX",26.15,26.15,"ATIU",11.1,2,3)

"IX",26.15,26.15,"C",0)
26.15^C^Lookup & Sort by PRINCIPAL INVESTIGATOR and NAME fields.^R^^F^IR^W^26.152^^^^^LS
"IX",26.15,26.15,"C",1)
S ^DGPF(26.15,"C",X,DA(1),DA)=""
"IX",26.15,26.15,"C",2)
K ^DGPF(26.15,"C",X,DA(1),DA)
"IX",26.15,26.15,"C",2.5)
K ^DGPF(26.15,"C")
"IX",26.15,26.15,"C",11.1,0)
^.114IA^1^1
"IX",26.15,26.15,"C",11.1,1,0)
1^F^26.152^.01^^1^F
"IX",26.15,26.15,"C",11.1,1,3)

"KRN",.84,261101,-1)
0^1
"KRN",.84,261101,0)
261101^1^^REGISTRATION^Assignment history not found
"KRN",.84,261101,1,0)
^.842^4^4^3050316^^^^
"KRN",.84,261101,1,1,0)
Patient Record Flag Error:
"KRN",.84,261101,1,2,0)
 
"KRN",.84,261101,1,3,0)
Error reported when a patient's record flag assignment history record can
"KRN",.84,261101,1,4,0)
not be retrieved.
"KRN",.84,261101,2,0)
^.844^1^1^3050316^^^^
"KRN",.84,261101,2,1,0)
The patient's flag assignment history record was not found
"KRN",.84,261101,5,0)
^.841^3^3
"KRN",.84,261101,5,1,0)
DGPFAPI1^GETHTIU
"KRN",.84,261101,5,2,0)
DGPFAPI2^STOTIU
"KRN",.84,261101,5,3,0)
DGPFAPI2^DELTIU
"KRN",.84,261101,5,"B","DGPFAPI1",1)

"KRN",.84,261101,5,"B","DGPFAPI2",2)

"KRN",.84,261101,5,"B","DGPFAPI2",3)

"KRN",.84,261102,-1)
0^2
"KRN",.84,261102,0)
261102^1^^REGISTRATION^Assignment not found
"KRN",.84,261102,1,0)
^.842^4^4^3050315^^^^
"KRN",.84,261102,1,1,0)
Patient Record Flag Error:
"KRN",.84,261102,1,2,0)
 
"KRN",.84,261102,1,3,0)
Error is reported when a patient's record flag assignment can not be 
"KRN",.84,261102,1,4,0)
retrieved.
"KRN",.84,261102,2,0)
^.844^1^1^3050315^^
"KRN",.84,261102,2,1,0)
The patient's flag assignment was not found
"KRN",.84,261102,5,0)
^.841^2^2
"KRN",.84,261102,5,1,0)
DGPFAPI1^GETHTIU
"KRN",.84,261102,5,2,0)
DGPFAPI2^STOTIU
"KRN",.84,261102,5,"B","DGPFAPI1",1)

"KRN",.84,261102,5,"B","DGPFAPI2",2)

"KRN",.84,261103,-1)
0^3
"KRN",.84,261103,0)
261103^1^^REGISTRATION^Not the owner site
"KRN",.84,261103,1,0)
^.842^4^4^3050315^^
"KRN",.84,261103,1,1,0)
Patient Record Flag Error:
"KRN",.84,261103,1,2,0)
 
"KRN",.84,261103,1,3,0)
Error reported when the current site is not the owner of the patient's 
"KRN",.84,261103,1,4,0)
assignment.
"KRN",.84,261103,2,0)
^.844^1^1^3050315^^
"KRN",.84,261103,2,1,0)
This site is not the Owner Site of the patient's flag assignment
"KRN",.84,261103,5,0)
^.841^2^2
"KRN",.84,261103,5,1,0)
DGPFAPI2^STOTIU
"KRN",.84,261103,5,2,0)
DGPFAPI1^GETHTIU
"KRN",.84,261103,5,"B","DGPFAPI1",2)

"KRN",.84,261103,5,"B","DGPFAPI2",1)

"KRN",.84,261104,-1)
0^4
"KRN",.84,261104,0)
261104^1^^REGISTRATION^TIU Document not found
"KRN",.84,261104,1,0)
^.842^3^3^3050315^^^^
"KRN",.84,261104,1,1,0)
Patient Record Flag Error:
"KRN",.84,261104,1,2,0)
 
"KRN",.84,261104,1,3,0)
Error reported when there is a problem retrieving a TIU Document.
"KRN",.84,261104,2,0)
^.844^1^1^3050315^^^^
"KRN",.84,261104,2,1,0)
Document does not exist
"KRN",.84,261104,5,0)
^.841^1^1
"KRN",.84,261104,5,1,0)
DGPFAPI2^STOTIU
"KRN",.84,261104,5,"B","DGPFAPI2",1)

"KRN",.84,261105,-1)
0^5
"KRN",.84,261105,0)
261105^1^^REGISTRATION^Progress note filer error
"KRN",.84,261105,1,0)
^.842^4^4^3050315^^
"KRN",.84,261105,1,1,0)
Patient Record Flag Error:
"KRN",.84,261105,1,2,0)
 
"KRN",.84,261105,1,3,0)
Error is reported when attempting to file a TIU progress note into an 
"KRN",.84,261105,1,4,0)
assignment history record.
"KRN",.84,261105,2,0)
^^1^1^3050315^
"KRN",.84,261105,2,1,0)
Note could not be linked
"KRN",.84,261105,5,0)
^.841^1^1
"KRN",.84,261105,5,1,0)
DGPFAPI2^STOHIST
"KRN",.84,261105,5,"B","DGPFAPI2",1)

"KRN",.84,261106,-1)
0^6
"KRN",.84,261106,0)
261106^1^^REGISTRATION^Progress note deletion error
"KRN",.84,261106,1,0)
^.842^4^4^3050315^^
"KRN",.84,261106,1,1,0)
Patient Record Flag Error:
"KRN",.84,261106,1,2,0)
 
"KRN",.84,261106,1,3,0)
Error reported when a TIU progress note can not be deleted from an 
"KRN",.84,261106,1,4,0)
assignment history record.
"KRN",.84,261106,2,0)
^^1^1^3050315^
"KRN",.84,261106,2,1,0)
Note could not be deleted
"KRN",.84,261106,5,0)
^.841^1^1
"KRN",.84,261106,5,1,0)
DGPFAPI2^DELTIU
"KRN",.84,261106,5,"B","DGPFAPI2",1)

"KRN",.84,261107,-1)
0^7
"KRN",.84,261107,0)
261107^1^^REGISTRATION^Progress note title not associated
"KRN",.84,261107,1,0)
^.842^4^4^3050315^^^
"KRN",.84,261107,1,1,0)
Patient Record Flag Error:
"KRN",.84,261107,1,2,0)
 
"KRN",.84,261107,1,3,0)
Error is reported when a progress note title is not associated with a 
"KRN",.84,261107,1,4,0)
patient record flag.
"KRN",.84,261107,2,0)
^.844^1^1^3050315^^^
"KRN",.84,261107,2,1,0)
This Patient Record Flag Note Title is not associated with a Flag
"KRN",.84,261107,5,0)
^.841^2^2
"KRN",.84,261107,5,1,0)
DGPFAPI1^FNDTITLE
"KRN",.84,261107,5,2,0)
DGPFAPI1^GETHTIU
"KRN",.84,261107,5,"B","DGPFAPI1",1)

"KRN",.84,261107,5,"B","DGPFAPI1",2)

"KRN",.84,261108,-1)
0^8
"KRN",.84,261108,0)
261108^1^^REGISTRATION^Flag assignment not assoc with title
"KRN",.84,261108,1,0)
^.842^4^4^3050316^^
"KRN",.84,261108,1,1,0)
Patient Record Flag Error:
"KRN",.84,261108,1,2,0)
 
"KRN",.84,261108,1,3,0)
Error is reported when a patient does not have a flag assignment 
"KRN",.84,261108,1,4,0)
that is associated with a specified Progress Note Title.
"KRN",.84,261108,2,0)
^^1^1^3050316^
"KRN",.84,261108,2,1,0)
The Patient Record Flag associated with Title is not assigned to patient
"KRN",.84,261108,5,0)
^.841^1^1
"KRN",.84,261108,5,1,0)
DGPFAPI1^GETHTIU
"KRN",.84,261108,5,"B","DGPFAPI1",1)

"KRN",.84,261109,-1)
0^9
"KRN",.84,261109,0)
261109^1^^REGISTRATION^Progress note already linked
"KRN",.84,261109,1,0)
^.842^4^4^3050315^^^^
"KRN",.84,261109,1,1,0)
Patient Record Flag Error:
"KRN",.84,261109,1,2,0)
 
"KRN",.84,261109,1,3,0)
Error reported when an attempt is made to link a progress note to a 
"KRN",.84,261109,1,4,0)
patient's assignment history record and a link already exists.
"KRN",.84,261109,2,0)
^.844^1^1^3050315^^^^
"KRN",.84,261109,2,1,0)
This assignment history action already has a note linked to it
"KRN",.84,261109,5,0)
^.841^2^2
"KRN",.84,261109,5,1,0)
DGPFAPI2^DELTIU
"KRN",.84,261109,5,2,0)
DGPFAPI2^STOTIU
"KRN",.84,261109,5,"B","DGPFAPI2",1)

"KRN",.84,261109,5,"B","DGPFAPI2",2)

"KRN",19,9262,-1)
2^1
"KRN",19,9262,0)
DGPF RECORD FLAG REPORTS MENU^Record Flag Reports Menu^^M^1119^DGPF PRF ACCESS^^^^^^6^^^
"KRN",19,9262,10,0)
^19.01IP^9^9
"KRN",19,9262,10,6,0)
9552^NLR^1
"KRN",19,9262,10,6,"^")
DGPF ACTION NOT LINKED REPORT
"KRN",19,9262,10,7,0)
9553^PAR^2
"KRN",19,9262,10,7,"^")
DGPF PATIENT ASSIGNMENT REPORT
"KRN",19,9262,10,8,0)
9554^BAR^5
"KRN",19,9262,10,8,"^")
DGPF APPROVED BY REPORT
"KRN",19,9262,10,9,0)
9555^IAR^6
"KRN",19,9262,10,9,"^")
DGPF PRINCIPAL INVEST REPORT
"KRN",19,9262,"U")
RECORD FLAG REPORTS MENU
"KRN",19,9552,-1)
0^2
"KRN",19,9552,0)
DGPF ACTION NOT LINKED REPORT^Assignment Action Not Linked Report^^R^^DGPF PRF ACCESS^^^^^y^REGISTRATION^
"KRN",19,9552,1,0)
^^2^2^3040618^
"KRN",19,9552,1,1,0)
This option will be used to display or print all of the PRF Assignment
"KRN",19,9552,1,2,0)
History actions that are not linked to a progress note.
"KRN",19,9552,25)
EN^DGPFRAL
"KRN",19,9552,200.9)
^y
"KRN",19,9552,"U")
ASSIGNMENT ACTION NOT LINKED R
"KRN",19,9553,-1)
0^3
"KRN",19,9553,0)
DGPF PATIENT ASSIGNMENT REPORT^Patient Assignments Report^^R^^DGPF PRF ACCESS^^^^^y^REGISTRATION
"KRN",19,9553,1,0)
^^2^2^3040617^
"KRN",19,9553,1,1,0)
This option will be used to display or print all PRF Assignments 
"KRN",19,9553,1,2,0)
of a patient for Category I or Category II Record Flags.
"KRN",19,9553,25)
EN^DGPFRPA
"KRN",19,9553,200.9)
^y
"KRN",19,9553,"U")
PATIENT ASSIGNMENTS REPORT
"KRN",19,9554,-1)
0^4
"KRN",19,9554,0)
DGPF APPROVED BY REPORT^Assignments Approved By Report^^R^^DGPF PRF ACCESS^^^^^y^REGISTRATION
"KRN",19,9554,1,0)
^^3^3^3040617^
"KRN",19,9554,1,1,0)
This option will be used to display or print all of the PRF Assignment
"KRN",19,9554,1,2,0)
History actions for the person who approved the assignment of the
"KRN",19,9554,1,3,0)
record flag to the patient.
"KRN",19,9554,25)
EN^DGPFRAB
"KRN",19,9554,200.9)
^y
"KRN",19,9554,"U")
ASSIGNMENTS APPROVED BY REPORT
"KRN",19,9555,-1)
0^5
"KRN",19,9555,0)
DGPF PRINCIPAL INVEST REPORT^Assignments by Principal Investigator Report^^R^^DGPF PRF ACCESS^^^^^y^REGISTRATION
"KRN",19,9555,1,0)
^^3^3^3040617^
"KRN",19,9555,1,1,0)
This option will be used to display or print all of the PRF Assignment 
"KRN",19,9555,1,2,0)
History actions for a Principal Investigator.  Only Research Type
"KRN",19,9555,1,3,0)
record flags will have a Principal Investigator assigned for that flag.
"KRN",19,9555,25)
EN^DGPFRPI
"KRN",19,9555,200.9)
^y
"KRN",19,9555,"U")
ASSIGNMENTS BY PRINCIPAL INVES
"MBREQ")
0
"ORD",9,.84)
.84;9;;;EDEOUT^DIFROMSO(.84,DA,"",XPDA);FPRE^DIFROMSI(.84,"",XPDA);EPRE^DIFROMSI(.84,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.84,DA,"",XPDA);DEL^DIFROMSK(.84,"",%)
"ORD",9,.84,0)
DIALOG
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",6,-1)
1^1
"PKG",6,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",6,22,0)
^9.49I^1^1
"PKG",6,22,1,0)
5.3^2930813^2931021
"PKG",6,22,1,"PAH",1,0)
554^3060320^17
"PKG",6,22,1,"PAH",1,1,0)
^^2^2^3060320
"PKG",6,22,1,"PAH",1,1,1,0)
Please refer to patch DG*5.3*554 in the National Patch Module for a
"PKG",6,22,1,"PAH",1,1,2,0)
complete description of this patch.
"PRE")
DG53P554
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
38
"RTN","DG53P554")
0^21^B21363644
"RTN","DG53P554",1,0)
DG53P554 ;ALB/RBS - PATCH DG*5.3*554 INSTALL UTILITIES ; 3/16/06 2:55pm
"RTN","DG53P554",2,0)
 ;;5.3;Registration;**554**;Aug 13, 1993
"RTN","DG53P554",3,0)
 ;
"RTN","DG53P554",4,0)
ENV ;Main entry point for Environment check point.
"RTN","DG53P554",5,0)
 ;
"RTN","DG53P554",6,0)
 S XPDABORT=""
"RTN","DG53P554",7,0)
 D PROGCHK(.XPDABORT)  ;checks programmer variables
"RTN","DG53P554",8,0)
 Q:$G(XPDABORT)
"RTN","DG53P554",9,0)
 ;
"RTN","DG53P554",10,0)
 I XPDABORT="" K XPDABORT
"RTN","DG53P554",11,0)
 ;
"RTN","DG53P554",12,0)
 ;Per KIDS documentation...XPDQUIT is used for multiple builds
"RTN","DG53P554",13,0)
 S XPDQUIT=""
"RTN","DG53P554",14,0)
 D TIUCHK(.XPDQUIT)   ;check for TIU Progress Note Title
"RTN","DG53P554",15,0)
 Q:$G(XPDQUIT)
"RTN","DG53P554",16,0)
 ;
"RTN","DG53P554",17,0)
 I XPDQUIT="" K XPDQUIT
"RTN","DG53P554",18,0)
 Q
"RTN","DG53P554",19,0)
 ;
"RTN","DG53P554",20,0)
 ;
"RTN","DG53P554",21,0)
PRE ;Main entry point for Pre-init items.
"RTN","DG53P554",22,0)
 ;
"RTN","DG53P554",23,0)
 Q
"RTN","DG53P554",24,0)
 ;
"RTN","DG53P554",25,0)
 ;
"RTN","DG53P554",26,0)
POST ;Main entry point for Post-init items.
"RTN","DG53P554",27,0)
 ;
"RTN","DG53P554",28,0)
 N DGACTDT  ;software activation date
"RTN","DG53P554",29,0)
 ;
"RTN","DG53P554",30,0)
 D POST1    ;link BEHAVIORAL Category I PRF to TIU PN
"RTN","DG53P554",31,0)
 ;
"RTN","DG53P554",32,0)
 D POST2    ;create new "C" index for Principal Investigator field
"RTN","DG53P554",33,0)
 ;           in the PRF Local Flag (#26.11) file.
"RTN","DG53P554",34,0)
 ;
"RTN","DG53P554",35,0)
 S DGACTDT="June 20, 2006"  ;PRF Phase 2 Software Activation date
"RTN","DG53P554",36,0)
 ;
"RTN","DG53P554",37,0)
 D POST3(DGACTDT)    ;create/update PRF PHASE 2 ACTIVATION (#6) field
"RTN","DG53P554",38,0)
 ;                    in the PRF PARAMETERS (#26.18) file.
"RTN","DG53P554",39,0)
 Q
"RTN","DG53P554",40,0)
 ;
"RTN","DG53P554",41,0)
 ;
"RTN","DG53P554",42,0)
PROGCHK(XPDABORT) ;checks for necessary programmer variables
"RTN","DG53P554",43,0)
 ;
"RTN","DG53P554",44,0)
 I '$G(DUZ)!($G(DUZ(0))'="@")!('$G(DT))!($G(U)'="^") DO
"RTN","DG53P554",45,0)
 .D BMES^XPDUTL("*****")
"RTN","DG53P554",46,0)
 .D MES^XPDUTL("Your programming variables are not set up properly.")
"RTN","DG53P554",47,0)
 .D MES^XPDUTL("Installation aborted.")
"RTN","DG53P554",48,0)
 .D MES^XPDUTL("*****")
"RTN","DG53P554",49,0)
 .S XPDABORT=2
"RTN","DG53P554",50,0)
 Q
"RTN","DG53P554",51,0)
 ;
"RTN","DG53P554",52,0)
 ;
"RTN","DG53P554",53,0)
TIUCHK(XPDQUIT) ;check for Category I (National) TIU Progress Note Title
"RTN","DG53P554",54,0)
 ;name setup in the TIU DOCUMENT DEFINITION file (#8925.1)
"RTN","DG53P554",55,0)
 ;Abort if not found.
"RTN","DG53P554",56,0)
 ;
"RTN","DG53P554",57,0)
 N DGTITLE
"RTN","DG53P554",58,0)
 S DGTITLE="PATIENT RECORD FLAG CATEGORY I"
"RTN","DG53P554",59,0)
 ;
"RTN","DG53P554",60,0)
 I '$$FIND1^DIC(8925.1,"","X",DGTITLE,"B") D
"RTN","DG53P554",61,0)
 . D BMES^XPDUTL("*****")
"RTN","DG53P554",62,0)
 . D MES^XPDUTL("The TIU Progress Note Title name 'PATIENT RECORD FLAG CATEGORY I' is not setup.")
"RTN","DG53P554",63,0)
 . D MES^XPDUTL("See patch TIU*1*165 for details.")
"RTN","DG53P554",64,0)
 . D MES^XPDUTL("Installation aborted.")
"RTN","DG53P554",65,0)
 . D MES^XPDUTL("*****")
"RTN","DG53P554",66,0)
 . S XPDQUIT=1
"RTN","DG53P554",67,0)
 ;
"RTN","DG53P554",68,0)
 Q
"RTN","DG53P554",69,0)
 ;
"RTN","DG53P554",70,0)
 ;
"RTN","DG53P554",71,0)
POST1 ;link associated TIU PROGRESS NOTE TITLE IEN to
"RTN","DG53P554",72,0)
 ;the Category I (National) PRF BEHAVIORAL Flag
"RTN","DG53P554",73,0)
 ;
"RTN","DG53P554",74,0)
 ;warn installer if flag not found
"RTN","DG53P554",75,0)
 I '$D(^DGPF(26.15,"B","BEHAVIORAL")) D  Q
"RTN","DG53P554",76,0)
 . D BMES^XPDUTL("*****")
"RTN","DG53P554",77,0)
 . D MES^XPDUTL("  'BEHAVIORAL' Category I (National) PRF Flag not defined...seek help!")
"RTN","DG53P554",78,0)
 . D MES^XPDUTL("*****")
"RTN","DG53P554",79,0)
 ;
"RTN","DG53P554",80,0)
 ;short circuit if flag TIU PN Title already exists
"RTN","DG53P554",81,0)
 I $D(^DGPF(26.15,"ATIU")) D  Q
"RTN","DG53P554",82,0)
 . D BMES^XPDUTL("*****")
"RTN","DG53P554",83,0)
 . D MES^XPDUTL("  'BEHAVIORAL' Category I (National) PRF Flag already associated with a TIU Progress Note Title...No action taken.")
"RTN","DG53P554",84,0)
 . D MES^XPDUTL("*****")
"RTN","DG53P554",85,0)
 ;
"RTN","DG53P554",86,0)
 N DGFLAG  ;Category I (National) PRF name
"RTN","DG53P554",87,0)
 N DGIEN   ;IEN of National Flag record
"RTN","DG53P554",88,0)
 N DGFDA   ;filer FDA array
"RTN","DG53P554",89,0)
 N DGIENS  ;filer record IEN value
"RTN","DG53P554",90,0)
 N DGERR   ;filer error array
"RTN","DG53P554",91,0)
 N DGTITLE ;Category I (National) TIU Progress Note Title name
"RTN","DG53P554",92,0)
 ;
"RTN","DG53P554",93,0)
 ;Category I (National) PRF flag IEN record value
"RTN","DG53P554",94,0)
 S DGFLAG="BEHAVIORAL"
"RTN","DG53P554",95,0)
 S DGIEN=$O(^DGPF(26.15,"B",DGFLAG,0))
"RTN","DG53P554",96,0)
 S DGIENS=DGIEN_","
"RTN","DG53P554",97,0)
 ;
"RTN","DG53P554",98,0)
 ;set name equal to the nationaly released Category I Title that
"RTN","DG53P554",99,0)
 ;is setup in the TIU DOCUMENT DEFINITION file (#8925.1)
"RTN","DG53P554",100,0)
 S DGTITLE="PATIENT RECORD FLAG CATEGORY I"
"RTN","DG53P554",101,0)
 ;
"RTN","DG53P554",102,0)
 ;build FDA array
"RTN","DG53P554",103,0)
 S DGFDA(26.15,DGIENS,.07)=DGTITLE
"RTN","DG53P554",104,0)
 ;
"RTN","DG53P554",105,0)
 ;file link in new field (#.07) TIU PN TITLE
"RTN","DG53P554",106,0)
 D FILE^DIE("E","DGFDA","DGERR")
"RTN","DG53P554",107,0)
 ;
"RTN","DG53P554",108,0)
 ;check for errors and inform the installer of update status
"RTN","DG53P554",109,0)
 D BMES^XPDUTL("*****")
"RTN","DG53P554",110,0)
 I '$D(DGERR) D
"RTN","DG53P554",111,0)
 . D MES^XPDUTL("  'BEHAVIORAL' Category I (National) PRF Flag linked to associated TIU Progress Note Title successfully.")
"RTN","DG53P554",112,0)
 E  D
"RTN","DG53P554",113,0)
 . D MES^XPDUTL("  'BEHAVIORAL' Category I (National) PRF Flag link to associated TIU Progress Note Title failed!")
"RTN","DG53P554",114,0)
 D MES^XPDUTL("*****")
"RTN","DG53P554",115,0)
 Q
"RTN","DG53P554",116,0)
 ;
"RTN","DG53P554",117,0)
 ;
"RTN","DG53P554",118,0)
POST2 ;create new 'C' index for Principal Investigator field (multiple)
"RTN","DG53P554",119,0)
 ;-- PRF LOCAL FLAG (#26.11) file
"RTN","DG53P554",120,0)
 ;-- SUB-FILE (2) PRINCIPAL INVESTIGATOR(S) (#26.112), field (.01)
"RTN","DG53P554",121,0)
 ;
"RTN","DG53P554",122,0)
 Q:$D(^DGPF(26.11,"C"))  ;already setup
"RTN","DG53P554",123,0)
 ;
"RTN","DG53P554",124,0)
 N DA,DIC,DIK,DGIEN,X
"RTN","DG53P554",125,0)
 ;
"RTN","DG53P554",126,0)
 S DGIEN=0
"RTN","DG53P554",127,0)
 F  S DGIEN=$O(^DGPF(26.11,DGIEN)) Q:'DGIEN  D
"RTN","DG53P554",128,0)
 . K DA,DIC,DIK,X
"RTN","DG53P554",129,0)
 . S DIK=$$ROOT^DILFD(26.112,","_DGIEN_",")
"RTN","DG53P554",130,0)
 . S DIK(1)=".01^C"
"RTN","DG53P554",131,0)
 . S DA(1)=DGIEN
"RTN","DG53P554",132,0)
 . D ENALL^DIK
"RTN","DG53P554",133,0)
 ;
"RTN","DG53P554",134,0)
 Q
"RTN","DG53P554",135,0)
 ;
"RTN","DG53P554",136,0)
 ;
"RTN","DG53P554",137,0)
POST3(DGACTDT) ;create/update PRF PHASE 2 ACTIVATION (#6) field of the
"RTN","DG53P554",138,0)
 ;PRF PARAMETERS (#26.18) file entry at IEN "1"
"RTN","DG53P554",139,0)
 ;
"RTN","DG53P554",140,0)
 ;  Input:
"RTN","DG53P554",141,0)
 ;    DGACTDT - (required) software activation date in external format
"RTN","DG53P554",142,0)
 ;
"RTN","DG53P554",143,0)
 ;  Output:
"RTN","DG53P554",144,0)
 ;    none
"RTN","DG53P554",145,0)
 ;
"RTN","DG53P554",146,0)
 N DGERR     ;error array
"RTN","DG53P554",147,0)
 N DGFDA     ;FDA array
"RTN","DG53P554",148,0)
 N DGRESULT  ;return var
"RTN","DG53P554",149,0)
 ;
"RTN","DG53P554",150,0)
 Q:($G(DGACTDT)="")
"RTN","DG53P554",151,0)
 ;
"RTN","DG53P554",152,0)
 ;existing file entry
"RTN","DG53P554",153,0)
 Q:'$D(^DGPF(26.18,1,0))
"RTN","DG53P554",154,0)
 ;
"RTN","DG53P554",155,0)
 ;convert external date to internal FM date
"RTN","DG53P554",156,0)
 D CHK^DIE(26.18,6,"",DGACTDT,.DGRESULT,"DGERR")
"RTN","DG53P554",157,0)
 Q:$D(DGERR)
"RTN","DG53P554",158,0)
 Q:'$G(DGRESULT)
"RTN","DG53P554",159,0)
 ;
"RTN","DG53P554",160,0)
 S DGACTDT=DGRESULT
"RTN","DG53P554",161,0)
 ;
"RTN","DG53P554",162,0)
 S DGFDA(26.18,"1,",6)=DGACTDT
"RTN","DG53P554",163,0)
 ;
"RTN","DG53P554",164,0)
 D FILE^DIE("","DGFDA","DGERR")
"RTN","DG53P554",165,0)
 ;
"RTN","DG53P554",166,0)
 Q
"RTN","DGPFAA2")
0^18^B47055667
"RTN","DGPFAA2",1,0)
DGPFAA2 ;ALB/KCL - PRF ASSIGNMENT API'S CONTINUED ; 2/22/05 2:36pm
"RTN","DGPFAA2",2,0)
 ;;5.3;Registration;**425,554**;Aug 13, 1993
"RTN","DGPFAA2",3,0)
 ;
"RTN","DGPFAA2",4,0)
 ;- no direct entry
"RTN","DGPFAA2",5,0)
 QUIT
"RTN","DGPFAA2",6,0)
 ;
"RTN","DGPFAA2",7,0)
ADDOK(DGDFN,DGFLG,DGREASON) ;This function will be used to determine if a flag may be added/assigned to a patient.
"RTN","DGPFAA2",8,0)
 ;
"RTN","DGPFAA2",9,0)
 ;  Input:
"RTN","DGPFAA2",10,0)
 ;   DGDFN - (required) IEN of patient in PATIENT (#2) file
"RTN","DGPFAA2",11,0)
 ;   DGFLG - (required) IEN of patient record flag in PRF NATIONAL
"RTN","DGPFAA2",12,0)
 ;           FLAG (#26.15) file or PRF LOCAL FLAG (#26.11) file.
"RTN","DGPFAA2",13,0)
 ;           [ex: "1;DGPF(26.15,"]
"RTN","DGPFAA2",14,0)
 ;
"RTN","DGPFAA2",15,0)
 ; Output:
"RTN","DGPFAA2",16,0)
 ;  Function Value - returns 1 on success (YES), 0 on failure (NO)
"RTN","DGPFAA2",17,0)
 ;        DGREASON - undefined on success, reason why flag can not
"RTN","DGPFAA2",18,0)
 ;                   be assigned to patient on failure
"RTN","DGPFAA2",19,0)
 ;
"RTN","DGPFAA2",20,0)
 N RESULT   ;function result
"RTN","DGPFAA2",21,0)
 N DGFARRY  ;contains flag array
"RTN","DGPFAA2",22,0)
 K DGFARRY
"RTN","DGPFAA2",23,0)
 ;
"RTN","DGPFAA2",24,0)
 S RESULT=0
"RTN","DGPFAA2",25,0)
 ;
"RTN","DGPFAA2",26,0)
 D  ;-drops out of block on failure
"RTN","DGPFAA2",27,0)
 . ;
"RTN","DGPFAA2",28,0)
 . ;-- quit if DFN invalid
"RTN","DGPFAA2",29,0)
 . I '(+$G(DGDFN)>0),'$D(^DPT(DGDFN)) S DGREASON="Patient is not valid" Q
"RTN","DGPFAA2",30,0)
 . ;
"RTN","DGPFAA2",31,0)
 . ;-- quit if flag ien invalid
"RTN","DGPFAA2",32,0)
 . I '$$TESTVAL^DGPFUT(26.13,.02,DGFLG) S DGREASON="Record flag is not valid" Q
"RTN","DGPFAA2",33,0)
 . ;
"RTN","DGPFAA2",34,0)
 . ;-- quit if flag already assigned to patient
"RTN","DGPFAA2",35,0)
 . I $$FNDASGN^DGPFAA(DGDFN,DGFLG) S DGREASON="Record flag is already assigned to patient" Q
"RTN","DGPFAA2",36,0)
 . ;
"RTN","DGPFAA2",37,0)
 . ;-- quit if flag STATUS is INACTIVE
"RTN","DGPFAA2",38,0)
 . I $$GETFLAG^DGPFUT1(DGFLG,.DGFARRY)
"RTN","DGPFAA2",39,0)
 . I '+$G(DGFARRY("STAT")) S DGREASON="Record flag status is 'Inactive'" Q
"RTN","DGPFAA2",40,0)
 . ;
"RTN","DGPFAA2",41,0)
 . ;-- quit if no TIU PN TITLE IEN is found for the record flag
"RTN","DGPFAA2",42,0)
 . I '+$P($G(DGFARRY("TIUTITLE")),U) S DGREASON="Record Flag is missing Progress Note Title" Q
"RTN","DGPFAA2",43,0)
 . ;
"RTN","DGPFAA2",44,0)
 . ;-- success
"RTN","DGPFAA2",45,0)
 . S RESULT=1
"RTN","DGPFAA2",46,0)
 ;
"RTN","DGPFAA2",47,0)
 Q RESULT
"RTN","DGPFAA2",48,0)
 ;
"RTN","DGPFAA2",49,0)
 ;
"RTN","DGPFAA2",50,0)
EDTOK(DGPFA,DGORIG,DGREASON) ;This function will be used to determine if an flag assignment may be edited.
"RTN","DGPFAA2",51,0)
 ;
"RTN","DGPFAA2",52,0)
 ;  Input:
"RTN","DGPFAA2",53,0)
 ;    DGPFA - (required) array containing the flag assignment values
"RTN","DGPFAA2",54,0)
 ;   DGORIG - (optional) originating site [default = +$$SITE^VASITE()] 
"RTN","DGPFAA2",55,0)
 ;
"RTN","DGPFAA2",56,0)
 ; Output:
"RTN","DGPFAA2",57,0)
 ;  Function Value - returns 1 on success (YES), 0 on failure (NO)
"RTN","DGPFAA2",58,0)
 ;        DGREASON - undefined on success, reason why assignment
"RTN","DGPFAA2",59,0)
 ;                   can not be edited on failure
"RTN","DGPFAA2",60,0)
 ;
"RTN","DGPFAA2",61,0)
 N RESULT   ;function result
"RTN","DGPFAA2",62,0)
 N DGFARRY  ;contains flag array
"RTN","DGPFAA2",63,0)
 K DGFARRY
"RTN","DGPFAA2",64,0)
 ;
"RTN","DGPFAA2",65,0)
 S RESULT=0
"RTN","DGPFAA2",66,0)
 ;
"RTN","DGPFAA2",67,0)
 D  ;-drops out of block on failure
"RTN","DGPFAA2",68,0)
 . ;
"RTN","DGPFAA2",69,0)
 . ;-- quit if current site is not the owner site
"RTN","DGPFAA2",70,0)
 . I +$G(DGORIG)'>0 S DGORIG=+$$SITE^VASITE()
"RTN","DGPFAA2",71,0)
 . I +$G(DGPFA("OWNER"))'=DGORIG S DGREASON="Not the owner site" Q
"RTN","DGPFAA2",72,0)
 . ;
"RTN","DGPFAA2",73,0)
 . ;-- quit if flag STATUS is INACTIVE
"RTN","DGPFAA2",74,0)
 . I $$GETFLAG^DGPFUT1($P($G(DGPFA("FLAG")),U),.DGFARRY)
"RTN","DGPFAA2",75,0)
 . I '+$G(DGFARRY("STAT")) S DGREASON="Record flag status is 'Inactive'" Q
"RTN","DGPFAA2",76,0)
 . ;
"RTN","DGPFAA2",77,0)
 . ;-- quit if no TIU PN TITLE IEN is found for the record flag
"RTN","DGPFAA2",78,0)
 . I '+$P($G(DGFARRY("TIUTITLE")),U) S DGREASON="Record Flag is missing Progress Note Title" Q
"RTN","DGPFAA2",79,0)
 . ;
"RTN","DGPFAA2",80,0)
 . ;-- success
"RTN","DGPFAA2",81,0)
 . S RESULT=1
"RTN","DGPFAA2",82,0)
 ;
"RTN","DGPFAA2",83,0)
 Q RESULT
"RTN","DGPFAA2",84,0)
 ;
"RTN","DGPFAA2",85,0)
ACTIONOK(DGPFA,DGACT) ;verify ACTION is appropriate for current STATUS
"RTN","DGPFAA2",86,0)
 ;
"RTN","DGPFAA2",87,0)
 ;  Input:
"RTN","DGPFAA2",88,0)
 ;    DGPFA - (required) assignment array data from current record
"RTN","DGPFAA2",89,0)
 ;    DGACT - Assignment edit action in internal format
"RTN","DGPFAA2",90,0)
 ;            [1:NEW ASSIGNMENT,2:CONTINUE,3:INACTIVATE,4:REACTIVATE,5:ENTERED IN ERROR]
"RTN","DGPFAA2",91,0)
 ;
"RTN","DGPFAA2",92,0)
 ;  Output:
"RTN","DGPFAA2",93,0)
 ;   Function value - 1 on success, 0 on failure
"RTN","DGPFAA2",94,0)
 ;
"RTN","DGPFAA2",95,0)
 N DGRSLT
"RTN","DGPFAA2",96,0)
 N DGSTAT
"RTN","DGPFAA2",97,0)
 ;
"RTN","DGPFAA2",98,0)
 S DGACT=+$G(DGACT)
"RTN","DGPFAA2",99,0)
 S DGSTAT=$P($G(DGPFA("STATUS")),U,1)
"RTN","DGPFAA2",100,0)
 S DGRSLT=0
"RTN","DGPFAA2",101,0)
 ;
"RTN","DGPFAA2",102,0)
 I $$TESTVAL^DGPFUT(26.14,.03,DGACT),DGSTAT?1N D
"RTN","DGPFAA2",103,0)
 . ;
"RTN","DGPFAA2",104,0)
 . ;Must not CONTINUE inactive assignments
"RTN","DGPFAA2",105,0)
 . I DGACT=2,DGSTAT=0 Q
"RTN","DGPFAA2",106,0)
 . ;
"RTN","DGPFAA2",107,0)
 . ;Must not INACTIVATE inactive assignments
"RTN","DGPFAA2",108,0)
 . I DGACT=3,DGSTAT=0 Q
"RTN","DGPFAA2",109,0)
 . ;
"RTN","DGPFAA2",110,0)
 . ;Must not ENTERED IN ERROR inactive assignments
"RTN","DGPFAA2",111,0)
 . I DGACT=5,DGSTAT=0 Q
"RTN","DGPFAA2",112,0)
 . ;
"RTN","DGPFAA2",113,0)
 . ;Must not REACTIVATE active assignments
"RTN","DGPFAA2",114,0)
 . I DGACT=4,DGSTAT=1 Q
"RTN","DGPFAA2",115,0)
 . ;
"RTN","DGPFAA2",116,0)
 . ;success
"RTN","DGPFAA2",117,0)
 . S DGRSLT=1
"RTN","DGPFAA2",118,0)
 ;
"RTN","DGPFAA2",119,0)
 Q DGRSLT
"RTN","DGPFAA2",120,0)
 ;
"RTN","DGPFAA2",121,0)
CHGOWN(DGPFA,DGORIG,DGREASON) ;Is site allowed to change ownership of a record flag assignment?
"RTN","DGPFAA2",122,0)
 ;
"RTN","DGPFAA2",123,0)
 ;  Input:
"RTN","DGPFAA2",124,0)
 ;    DGPFA - (required) array containing the flag assignment values
"RTN","DGPFAA2",125,0)
 ;   DGORIG - (optional) originating site [default = +$$SITE^VASITE()] 
"RTN","DGPFAA2",126,0)
 ;
"RTN","DGPFAA2",127,0)
 ; Output:
"RTN","DGPFAA2",128,0)
 ;  Function Value - returns 1 on success (YES), 0 on failure (NO)
"RTN","DGPFAA2",129,0)
 ;        DGREASON - undefined on success, reason why assignment
"RTN","DGPFAA2",130,0)
 ;                   ownership can not be edited on failure
"RTN","DGPFAA2",131,0)
 ;
"RTN","DGPFAA2",132,0)
 N DGRSLT   ;function result
"RTN","DGPFAA2",133,0)
 ;
"RTN","DGPFAA2",134,0)
 S:(+$G(DGORIG)'>0) DGORIG=(+$$SITE^VASITE())
"RTN","DGPFAA2",135,0)
 S DGRSLT=0
"RTN","DGPFAA2",136,0)
 ;
"RTN","DGPFAA2",137,0)
 D  ;drops out of block on failure
"RTN","DGPFAA2",138,0)
 . ;
"RTN","DGPFAA2",139,0)
 . ;ORIGINATING SITE must be OWNER and flag must be ACTIVE
"RTN","DGPFAA2",140,0)
 . Q:('$$EDTOK(.DGPFA,DGORIG,.DGREASON))
"RTN","DGPFAA2",141,0)
 . ;
"RTN","DGPFAA2",142,0)
 . ;can't CHANGE OWNERSHIP for an assignment to a LOCAL flag
"RTN","DGPFAA2",143,0)
 . I $P(DGPFA("FLAG"),U)["26.11" D  Q
"RTN","DGPFAA2",144,0)
 . .S DGREASON="Can't change ownership of assignments to Category II (Local) flags"
"RTN","DGPFAA2",145,0)
 . . Q
"RTN","DGPFAA2",146,0)
 . ;
"RTN","DGPFAA2",147,0)
 . ;can't CHANGE OWNERSHIP for an INACTIVE assignment
"RTN","DGPFAA2",148,0)
 . I '+$G(DGPFA("STATUS")) D  Q
"RTN","DGPFAA2",149,0)
 . . S DGREASON="Record flag assignment status is 'Inactive'"
"RTN","DGPFAA2",150,0)
 . . Q
"RTN","DGPFAA2",151,0)
 . ;
"RTN","DGPFAA2",152,0)
 . ;success
"RTN","DGPFAA2",153,0)
 . S DGRSLT=1
"RTN","DGPFAA2",154,0)
 ;
"RTN","DGPFAA2",155,0)
 Q DGRSLT
"RTN","DGPFAA2",156,0)
 ;
"RTN","DGPFAA2",157,0)
HL7EDTOK(DGDFN,DGFLG,DGORIG,DGACT) ;Is site allowed to edit assignment?
"RTN","DGPFAA2",158,0)
 ; This function acts as wrapper for $$EDTOK and $$ACTIONOK for edits
"RTN","DGPFAA2",159,0)
 ; that originate from PRF HL7 message processing.
"RTN","DGPFAA2",160,0)
 ;
"RTN","DGPFAA2",161,0)
 ;  Input:
"RTN","DGPFAA2",162,0)
 ;    DGDFN - IEN of patient in PATIENT (#2) file
"RTN","DGPFAA2",163,0)
 ;    DGFLG - IEN of patient record flag in PRF NATIONAL FLAG (#26.15)
"RTN","DGPFAA2",164,0)
 ;            file or PRF LOCAL FLAG (#26.11) file. [ex: "1;DGPF(26.15,"]
"RTN","DGPFAA2",165,0)
 ;   DGORIG - IEN of originating site in INSTITUTION (#4) file
"RTN","DGPFAA2",166,0)
 ;    DGACT - Assignment edit action in internal format
"RTN","DGPFAA2",167,0)
 ;            [1:NEW ASSIGNMENT,2:CONTINUE,3:INACTIVATE,4:REACTIVATE,5:ENTERED IN ERROR]
"RTN","DGPFAA2",168,0)
 ;
"RTN","DGPFAA2",169,0)
 ;  Output:
"RTN","DGPFAA2",170,0)
 ;   Function value - 1 if authorized, 0 if not authorized
"RTN","DGPFAA2",171,0)
 ;
"RTN","DGPFAA2",172,0)
 N DGIEN   ;pointer to PRF ASSIGNMENT (#26.13) file
"RTN","DGPFAA2",173,0)
 N DGPFA   ;assignment data array
"RTN","DGPFAA2",174,0)
 N DGRSLT  ;function value
"RTN","DGPFAA2",175,0)
 ;
"RTN","DGPFAA2",176,0)
 S DGACT=+$G(DGACT)
"RTN","DGPFAA2",177,0)
 S DGDFN=+$G(DGDFN)
"RTN","DGPFAA2",178,0)
 S DGFLG=$G(DGFLG)
"RTN","DGPFAA2",179,0)
 S DGORIG=+$G(DGORIG)
"RTN","DGPFAA2",180,0)
 S DGRSLT=0
"RTN","DGPFAA2",181,0)
 ;
"RTN","DGPFAA2",182,0)
 I DGACT>0,DGDFN>0,DGFLG]"",DGORIG>0 D
"RTN","DGPFAA2",183,0)
 . ;
"RTN","DGPFAA2",184,0)
 . ;retrieve existing assignment data
"RTN","DGPFAA2",185,0)
 . S DGIEN=$$FNDASGN^DGPFAA(DGDFN,DGFLG)
"RTN","DGPFAA2",186,0)
 . Q:('DGIEN)
"RTN","DGPFAA2",187,0)
 . Q:('$$GETASGN^DGPFAA(DGIEN,.DGPFA))
"RTN","DGPFAA2",188,0)
 . ;
"RTN","DGPFAA2",189,0)
 . ;ORIGINATING SITE must be OWNER and flag must be ACTIVE
"RTN","DGPFAA2",190,0)
 . Q:('$$EDTOK(.DGPFA,DGORIG))
"RTN","DGPFAA2",191,0)
 . ;
"RTN","DGPFAA2",192,0)
 . ;ACTION must be valid for current assignment STATUS
"RTN","DGPFAA2",193,0)
 . Q:('$$ACTIONOK(.DGPFA,DGACT))
"RTN","DGPFAA2",194,0)
 . ;
"RTN","DGPFAA2",195,0)
 . ;success
"RTN","DGPFAA2",196,0)
 . S DGRSLT=1
"RTN","DGPFAA2",197,0)
 ;
"RTN","DGPFAA2",198,0)
 Q DGRSLT
"RTN","DGPFAA2",199,0)
 ;
"RTN","DGPFAA2",200,0)
STOHL7(DGPFA,DGPFAH,DGERR) ;store a valid assignment from HL7 message
"RTN","DGPFAA2",201,0)
 ; This function files an assignment if the originating site is 
"RTN","DGPFAA2",202,0)
 ; authorized to update an existing record and if the action is valid for
"RTN","DGPFAA2",203,0)
 ; the status of an existing record. 
"RTN","DGPFAA2",204,0)
 ;
"RTN","DGPFAA2",205,0)
 ;  Input:
"RTN","DGPFAA2",206,0)
 ;    DGPFA - (required) array of assignment values to be filed (see
"RTN","DGPFAA2",207,0)
 ;            $$GETASGN^DGPFAA for valid array structure)
"RTN","DGPFAA2",208,0)
 ;   DGPFAH - (required) array of assignment history values to be filed
"RTN","DGPFAA2",209,0)
 ;            (see $$STOHIST^DGPFAAH for valid array structure)
"RTN","DGPFAA2",210,0)
 ;
"RTN","DGPFAA2",211,0)
 ;  Output:
"RTN","DGPFAA2",212,0)
 ;   Function Value - Returns 1 on sucess, 0 on failure
"RTN","DGPFAA2",213,0)
 ;          DGERR - Undefined on success, error code on failure
"RTN","DGPFAA2",214,0)
 ;
"RTN","DGPFAA2",215,0)
 N DGDFN
"RTN","DGPFAA2",216,0)
 N DGFLG
"RTN","DGPFAA2",217,0)
 N DGORIG
"RTN","DGPFAA2",218,0)
 N DGACT
"RTN","DGPFAA2",219,0)
 N DGSTOERR
"RTN","DGPFAA2",220,0)
 N DGRSLT
"RTN","DGPFAA2",221,0)
 ;
"RTN","DGPFAA2",222,0)
 S DGDFN=+$G(DGPFA("DFN"))
"RTN","DGPFAA2",223,0)
 S DGFLG=$G(DGPFA("FLAG"))
"RTN","DGPFAA2",224,0)
 S DGORIG=+$G(DGPFA("ORIGSITE"))
"RTN","DGPFAA2",225,0)
 S DGACT=+$G(DGPFAH("ACTION"))
"RTN","DGPFAA2",226,0)
 ;
"RTN","DGPFAA2",227,0)
 S DGRSLT=0
"RTN","DGPFAA2",228,0)
 I DGDFN,DGFLG,DGORIG]"",DGACT D
"RTN","DGPFAA2",229,0)
 . ;
"RTN","DGPFAA2",230,0)
 . ;new assignment action
"RTN","DGPFAA2",231,0)
 . I DGACT=1,'$$ADDOK(DGDFN,DGFLG) D  Q
"RTN","DGPFAA2",232,0)
 . . S DGERR="UU"      ;unauthorized update
"RTN","DGPFAA2",233,0)
 . ;
"RTN","DGPFAA2",234,0)
 . ;all other actions
"RTN","DGPFAA2",235,0)
 . I DGACT'=1,'$$HL7EDTOK(DGDFN,DGFLG,DGORIG,DGACT) D  Q
"RTN","DGPFAA2",236,0)
 . . S DGERR="UU"      ;unauthorized update
"RTN","DGPFAA2",237,0)
 . ;
"RTN","DGPFAA2",238,0)
 . ;file the assignment and history
"RTN","DGPFAA2",239,0)
 . I '$$STOALL^DGPFAA(.DGPFA,.DGPFAH,.DGSTOERR)!($D(DGSTOERR)) D  Q
"RTN","DGPFAA2",240,0)
 . . S DGERR="FE"      ;filer error
"RTN","DGPFAA2",241,0)
 . S DGRSLT=1
"RTN","DGPFAA2",242,0)
 Q DGRSLT
"RTN","DGPFAA2",243,0)
 ;
"RTN","DGPFAA2",244,0)
ROLLBACK(DGAIEN,DGPFOA) ;Roll back an assignment record
"RTN","DGPFAA2",245,0)
 ;
"RTN","DGPFAA2",246,0)
 ;  Input:
"RTN","DGPFAA2",247,0)
 ;    DGAIEN - IEN of assignment to roll back in the PRF ASSIGNMENT
"RTN","DGPFAA2",248,0)
 ;             (#26.13) file
"RTN","DGPFAA2",249,0)
 ;    DGPFOA - Assignment data array prior to record modification
"RTN","DGPFAA2",250,0)
 ;
"RTN","DGPFAA2",251,0)
 ;  Output:
"RTN","DGPFAA2",252,0)
 ;    Function value - 1 on successful rollback, 0 on failure
"RTN","DGPFAA2",253,0)
 ;
"RTN","DGPFAA2",254,0)
 N DGIENS
"RTN","DGPFAA2",255,0)
 N DGFDA
"RTN","DGPFAA2",256,0)
 N DGERR
"RTN","DGPFAA2",257,0)
 N DGRSLT   ;function result
"RTN","DGPFAA2",258,0)
 ;
"RTN","DGPFAA2",259,0)
 S DGRSLT=0
"RTN","DGPFAA2",260,0)
 I +$G(DGAIEN),$D(^DGPF(26.13,DGAIEN)),$D(DGPFOA) D
"RTN","DGPFAA2",261,0)
 . S DGIENS=DGAIEN_","
"RTN","DGPFAA2",262,0)
 . I $G(DGPFOA("DFN"))="@" D
"RTN","DGPFAA2",263,0)
 . . S DGFDA(26.13,DGIENS,.01)=DGPFOA("DFN")
"RTN","DGPFAA2",264,0)
 . . D FILE^DIE("","DGFDA","DGERR")
"RTN","DGPFAA2",265,0)
 . . I '$D(DGERR) S DGRSLT=1
"RTN","DGPFAA2",266,0)
 . E  D
"RTN","DGPFAA2",267,0)
 . . I $$STOASGN^DGPFAA(.DGPFOA,.DGERR),'$D(DGERR) S DGRSLT=1
"RTN","DGPFAA2",268,0)
 Q DGRSLT
"RTN","DGPFAAH")
0^17^B32554418
"RTN","DGPFAAH",1,0)
DGPFAAH ;ALB/RPM - PRF ASSIGNMENT HISTORY API'S ; 4/8/04 4:13pm
"RTN","DGPFAAH",2,0)
 ;;5.3;Registration;**425,554**;Aug 13, 1993
"RTN","DGPFAAH",3,0)
 Q  ;no direct entry
"RTN","DGPFAAH",4,0)
 ;
"RTN","DGPFAAH",5,0)
GETALL(DGPFIEN,DGPFIENS) ;retrieve list of history IENs for an assignment
"RTN","DGPFAAH",6,0)
 ;
"RTN","DGPFAAH",7,0)
 ;  Input:
"RTN","DGPFAAH",8,0)
 ;    DGPFIEN - (required) Pointer to PRF ASSIGNMENT (#26.13) file
"RTN","DGPFAAH",9,0)
 ;   DGPFIENS - (required) Result array passed by reference
"RTN","DGPFAAH",10,0)
 ;
"RTN","DGPFAAH",11,0)
 ;  Output:
"RTN","DGPFAAH",12,0)
 ;   Function Value - Count of returned IENs
"RTN","DGPFAAH",13,0)
 ;         DGPFIENS - Output array subscripted by assignment history IENs
"RTN","DGPFAAH",14,0)
 ;                    
"RTN","DGPFAAH",15,0)
 N DGCNT   ;number of returned values
"RTN","DGPFAAH",16,0)
 N DGHIEN  ;single history IEN
"RTN","DGPFAAH",17,0)
 ;
"RTN","DGPFAAH",18,0)
 S DGCNT=0
"RTN","DGPFAAH",19,0)
 I $G(DGPFIEN)>0,$D(^DGPF(26.14,"B",DGPFIEN)) D
"RTN","DGPFAAH",20,0)
 . S DGHIEN=0
"RTN","DGPFAAH",21,0)
 . F  S DGHIEN=$O(^DGPF(26.14,"B",DGPFIEN,DGHIEN)) Q:'DGHIEN  D
"RTN","DGPFAAH",22,0)
 . . S DGPFIENS(DGHIEN)=""
"RTN","DGPFAAH",23,0)
 . . S DGCNT=DGCNT+1
"RTN","DGPFAAH",24,0)
 Q DGCNT
"RTN","DGPFAAH",25,0)
 ;
"RTN","DGPFAAH",26,0)
GETALLDT(DGPFIEN,DGPFIENS) ;retrieve list of history IENs for an assignment
"RTN","DGPFAAH",27,0)
 ;
"RTN","DGPFAAH",28,0)
 ;  Input:
"RTN","DGPFAAH",29,0)
 ;    DGPFIEN - (required) Pointer to PRF ASSIGNMENT (#26.13) file
"RTN","DGPFAAH",30,0)
 ;   DGPFIENS - (required) Result array passed by reference
"RTN","DGPFAAH",31,0)
 ;
"RTN","DGPFAAH",32,0)
 ;  Output:
"RTN","DGPFAAH",33,0)
 ;   Function Value - Count of returned IENs
"RTN","DGPFAAH",34,0)
 ;         DGPFIENS - Output array subscripted by assignment history date
"RTN","DGPFAAH",35,0)
 ;
"RTN","DGPFAAH",36,0)
 N DGADT   ;assignment date
"RTN","DGPFAAH",37,0)
 N DGCNT   ;number of returned values
"RTN","DGPFAAH",38,0)
 N DGHIEN  ;single history IEN
"RTN","DGPFAAH",39,0)
 ;
"RTN","DGPFAAH",40,0)
 S DGCNT=0
"RTN","DGPFAAH",41,0)
 I $G(DGPFIEN)>0,$D(^DGPF(26.14,"C",DGPFIEN)) D
"RTN","DGPFAAH",42,0)
 . S DGADT=0
"RTN","DGPFAAH",43,0)
 . F  S DGADT=$O(^DGPF(26.14,"C",DGPFIEN,DGADT)) Q:'DGADT  D
"RTN","DGPFAAH",44,0)
 . . S DGHIEN=0
"RTN","DGPFAAH",45,0)
 . . F  S DGHIEN=$O(^DGPF(26.14,"C",DGPFIEN,DGADT,DGHIEN)) Q:'DGHIEN  D
"RTN","DGPFAAH",46,0)
 . . . S DGPFIENS(DGADT)=DGHIEN
"RTN","DGPFAAH",47,0)
 . . . S DGCNT=DGCNT+1
"RTN","DGPFAAH",48,0)
 Q DGCNT
"RTN","DGPFAAH",49,0)
 ;
"RTN","DGPFAAH",50,0)
GETHIST(DGPFIEN,DGPFAH) ;retrieve a single assignment history record
"RTN","DGPFAAH",51,0)
 ;
"RTN","DGPFAAH",52,0)
 ;  Input:
"RTN","DGPFAAH",53,0)
 ;   DGPFIEN - (required) IEN for record in PRF ASSIGNMENT HISTORY
"RTN","DGPFAAH",54,0)
 ;             (#26.14) file 
"RTN","DGPFAAH",55,0)
 ;    DGPFAH - (required) Result array passed by reference
"RTN","DGPFAAH",56,0)
 ;
"RTN","DGPFAAH",57,0)
 ;  Output:
"RTN","DGPFAAH",58,0)
 ;   Function Value - Return 1 on success, 0 on failure
"RTN","DGPFAAH",59,0)
 ;           DGPFAH - Output array containing the field values
"RTN","DGPFAAH",60,0)
 ;                    Subscript            Field#
"RTN","DGPFAAH",61,0)
 ;                    -----------------    ------
"RTN","DGPFAAH",62,0)
 ;                    "ASSIGN"             .01
"RTN","DGPFAAH",63,0)
 ;                    "ASSIGNDT"           .02
"RTN","DGPFAAH",64,0)
 ;                    "ACTION"             .03
"RTN","DGPFAAH",65,0)
 ;                    "ENTERBY"            .04
"RTN","DGPFAAH",66,0)
 ;                    "APPRVBY"            .05
"RTN","DGPFAAH",67,0)
 ;                    "TIULINK"            .06
"RTN","DGPFAAH",68,0)
 ;                    "COMMENT",line#,0    1
"RTN","DGPFAAH",69,0)
 ;
"RTN","DGPFAAH",70,0)
 N DGIENS  ;IEN string for DIQ
"RTN","DGPFAAH",71,0)
 N DGFLDS  ;results array for DIQ
"RTN","DGPFAAH",72,0)
 N DGERR  ;error array for DIQ
"RTN","DGPFAAH",73,0)
 N DGRSLT
"RTN","DGPFAAH",74,0)
 S DGRSLT=0
"RTN","DGPFAAH",75,0)
 I $G(DGPFIEN)>0,$D(^DGPF(26.14,DGPFIEN)) D
"RTN","DGPFAAH",76,0)
 . S DGIENS=DGPFIEN_","
"RTN","DGPFAAH",77,0)
 . D GETS^DIQ(26.14,DGIENS,"*","IEZ","DGFLDS","DGERR")
"RTN","DGPFAAH",78,0)
 . Q:$D(DGERR)
"RTN","DGPFAAH",79,0)
 . S DGRSLT=1
"RTN","DGPFAAH",80,0)
 . S DGPFAH("ASSIGN")=$G(DGFLDS(26.14,DGIENS,.01,"I"))_U_$G(DGFLDS(26.14,DGIENS,.01,"E"))
"RTN","DGPFAAH",81,0)
 . S DGPFAH("ASSIGNDT")=$G(DGFLDS(26.14,DGIENS,.02,"I"))_U_$G(DGFLDS(26.14,DGIENS,.02,"E"))
"RTN","DGPFAAH",82,0)
 . S DGPFAH("ACTION")=$G(DGFLDS(26.14,DGIENS,.03,"I"))_U_$G(DGFLDS(26.14,DGIENS,.03,"E"))
"RTN","DGPFAAH",83,0)
 . S DGPFAH("ENTERBY")=$G(DGFLDS(26.14,DGIENS,.04,"I"))_U_$G(DGFLDS(26.14,DGIENS,.04,"E"))
"RTN","DGPFAAH",84,0)
 . S DGPFAH("APPRVBY")=$G(DGFLDS(26.14,DGIENS,.05,"I"))_U_$G(DGFLDS(26.14,DGIENS,.05,"E"))
"RTN","DGPFAAH",85,0)
 . S DGPFAH("TIULINK")=$G(DGFLDS(26.14,DGIENS,.06,"I"))_U_$G(DGFLDS(26.14,DGIENS,.06,"E"))
"RTN","DGPFAAH",86,0)
 . ;build review comments word processing array
"RTN","DGPFAAH",87,0)
 . M DGPFAH("COMMENT")=DGFLDS(26.14,DGIENS,1)
"RTN","DGPFAAH",88,0)
 . K DGPFAH("COMMENT","E"),DGPFAH("COMMENT","I")
"RTN","DGPFAAH",89,0)
 . ;
"RTN","DGPFAAH",90,0)
 Q DGRSLT
"RTN","DGPFAAH",91,0)
 ;
"RTN","DGPFAAH",92,0)
GETFIRST(DGPFIEN) ;get IEN of the initial assignment
"RTN","DGPFAAH",93,0)
 ;This function returns the IEN of the initial history record for a
"RTN","DGPFAAH",94,0)
 ;given patient record flag assignment.
"RTN","DGPFAAH",95,0)
 ;
"RTN","DGPFAAH",96,0)
 ;  Input:
"RTN","DGPFAAH",97,0)
 ;   DGPFIEN - (required) IEN of record in PRF ASSIGNMENT (#26.13) file
"RTN","DGPFAAH",98,0)
 ;
"RTN","DGPFAAH",99,0)
 ;  Output:
"RTN","DGPFAAH",100,0)
 ;   Function Value - IEN of initial history record on success
"RTN","DGPFAAH",101,0)
 ;                    0 on failure
"RTN","DGPFAAH",102,0)
 ;
"RTN","DGPFAAH",103,0)
 N DGHIEN  ;history IEN
"RTN","DGPFAAH",104,0)
 N DGEDT   ;edit date
"RTN","DGPFAAH",105,0)
 N DGPFAH  ;history record data array
"RTN","DGPFAAH",106,0)
 ;
"RTN","DGPFAAH",107,0)
 S DGHIEN=0
"RTN","DGPFAAH",108,0)
 I $G(DGPFIEN)>0,$D(^DGPF(26.13,DGPFIEN)) D
"RTN","DGPFAAH",109,0)
 . S DGEDT=$O(^DGPF(26.14,"C",DGPFIEN,0))
"RTN","DGPFAAH",110,0)
 . I DGEDT>0 D
"RTN","DGPFAAH",111,0)
 . . S DGHIEN=$O(^DGPF(26.14,"C",DGPFIEN,DGEDT,0))
"RTN","DGPFAAH",112,0)
 Q $S($G(DGHIEN)>0:DGHIEN,1:0)
"RTN","DGPFAAH",113,0)
 ;
"RTN","DGPFAAH",114,0)
GETLAST(DGPFIEN) ;determine IEN of last assignment history record
"RTN","DGPFAAH",115,0)
 ;This function returns the IEN of the most recent history record for a
"RTN","DGPFAAH",116,0)
 ;given patient record flag assignment.
"RTN","DGPFAAH",117,0)
 ;
"RTN","DGPFAAH",118,0)
 ;  Input:
"RTN","DGPFAAH",119,0)
 ;   DGPFIEN - (required) IEN for record in PRF ASSIGNMENT (#26.13) file 
"RTN","DGPFAAH",120,0)
 ;
"RTN","DGPFAAH",121,0)
 ;  Output:
"RTN","DGPFAAH",122,0)
 ;   Function Value - IEN of last history record on success, 0 on failure
"RTN","DGPFAAH",123,0)
 ;
"RTN","DGPFAAH",124,0)
 N DGDAT
"RTN","DGPFAAH",125,0)
 N DGHIEN
"RTN","DGPFAAH",126,0)
 S DGHIEN=0
"RTN","DGPFAAH",127,0)
 I $G(DGPFIEN)>0,$D(^DGPF(26.13,DGPFIEN)) D
"RTN","DGPFAAH",128,0)
 . S DGDAT=$O(^DGPF(26.14,"C",DGPFIEN,""),-1)
"RTN","DGPFAAH",129,0)
 . I DGDAT>0 D
"RTN","DGPFAAH",130,0)
 . . S DGHIEN=$O(^DGPF(26.14,"C",DGPFIEN,DGDAT,0))
"RTN","DGPFAAH",131,0)
 Q $S($G(DGHIEN)>0:DGHIEN,1:0)
"RTN","DGPFAAH",132,0)
 ;
"RTN","DGPFAAH",133,0)
GETADT(DGPFIEN) ;get the initial assignment date
"RTN","DGPFAAH",134,0)
 ;This function returns the initial assignment date for a given patient
"RTN","DGPFAAH",135,0)
 ;record flag assignment.
"RTN","DGPFAAH",136,0)
 ;
"RTN","DGPFAAH",137,0)
 ;  Input:
"RTN","DGPFAAH",138,0)
 ;   DGPFIEN - (required) IEN for record in PRF ASSIGNMENT (#26.13) file
"RTN","DGPFAAH",139,0)
 ;
"RTN","DGPFAAH",140,0)
 ;  Output:
"RTN","DGPFAAH",141,0)
 ;   Function Value - assignment date in internal^external format on
"RTN","DGPFAAH",142,0)
 ;                    success, 0 on failure
"RTN","DGPFAAH",143,0)
 ;
"RTN","DGPFAAH",144,0)
 N DGHIEN  ;history IEN
"RTN","DGPFAAH",145,0)
 N DGEDT   ;edit date
"RTN","DGPFAAH",146,0)
 N DGADT   ;assignment date
"RTN","DGPFAAH",147,0)
 N DGPFAH  ;history record data array
"RTN","DGPFAAH",148,0)
 ;
"RTN","DGPFAAH",149,0)
 S DGADT=0
"RTN","DGPFAAH",150,0)
 S DGHIEN=0
"RTN","DGPFAAH",151,0)
 I $G(DGPFIEN)>0,$D(^DGPF(26.13,DGPFIEN)) D
"RTN","DGPFAAH",152,0)
 . S DGEDT=$O(^DGPF(26.14,"C",DGPFIEN,0))
"RTN","DGPFAAH",153,0)
 . I DGEDT>0 D
"RTN","DGPFAAH",154,0)
 . . S DGHIEN=$O(^DGPF(26.14,"C",DGPFIEN,DGEDT,0))
"RTN","DGPFAAH",155,0)
 . . I DGHIEN>0,$$GETHIST^DGPFAAH(DGHIEN,.DGPFAH) D
"RTN","DGPFAAH",156,0)
 . . . I $P($G(DGPFAH("ACTION")),U,2)="NEW ASSIGNMENT" D
"RTN","DGPFAAH",157,0)
 . . . . S DGADT=$G(DGPFAH("ASSIGNDT"))
"RTN","DGPFAAH",158,0)
 Q DGADT
"RTN","DGPFAAH",159,0)
 ;
"RTN","DGPFAAH",160,0)
FNDHIST(DGAIEN,DGADT) ;Find Assignment
"RTN","DGPFAAH",161,0)
 ;  This function finds a patient record flag assignment record.
"RTN","DGPFAAH",162,0)
 ;
"RTN","DGPFAAH",163,0)
 ;  Input:
"RTN","DGPFAAH",164,0)
 ;    DGAIEN - Pointer to assignment in the PRF ASSIGNMENT (#26.13) file
"RTN","DGPFAAH",165,0)
 ;     DGADT - Assignment date
"RTN","DGPFAAH",166,0)
 ;
"RTN","DGPFAAH",167,0)
 ;  Output:
"RTN","DGPFAAH",168,0)
 ;   Function Value - Returns IEN of existing record on success, 0 on
"RTN","DGPFAAH",169,0)
 ;                    failure
"RTN","DGPFAAH",170,0)
 ;
"RTN","DGPFAAH",171,0)
 N DGIEN
"RTN","DGPFAAH",172,0)
 ;
"RTN","DGPFAAH",173,0)
 I $G(DGAIEN)>0,($G(DGADT)>0) D
"RTN","DGPFAAH",174,0)
 . S DGIEN=$O(^DGPF(26.14,"C",DGAIEN,DGADT,0))
"RTN","DGPFAAH",175,0)
 Q $S($G(DGIEN)>0:DGIEN,1:0)
"RTN","DGPFAAH",176,0)
 ;
"RTN","DGPFAAH",177,0)
STOHIST(DGPFAH,DGPFERR) ;file a PRF ASSIGNMENT HISTORY (#26.14) file record
"RTN","DGPFAAH",178,0)
 ;
"RTN","DGPFAAH",179,0)
 ;  Input:
"RTN","DGPFAAH",180,0)
 ;    DGPFAH - (required) Array of values to be filed (see GETHIST tag
"RTN","DGPFAAH",181,0)
 ;             above for valid array structure)
"RTN","DGPFAAH",182,0)
 ;   DGPFERR - (optional) Passed by reference to contain error messages
"RTN","DGPFAAH",183,0)
 ;
"RTN","DGPFAAH",184,0)
 ;  Output:
"RTN","DGPFAAH",185,0)
 ;   Function Value - Returns IEN of record on success, 0 on failure
"RTN","DGPFAAH",186,0)
 ;          DGPFERR - Undefined on success, error message on failure
"RTN","DGPFAAH",187,0)
 ;
"RTN","DGPFAAH",188,0)
 N DGSUB
"RTN","DGPFAAH",189,0)
 N DGFLD
"RTN","DGPFAAH",190,0)
 N DGIEN
"RTN","DGPFAAH",191,0)
 N DGIENS
"RTN","DGPFAAH",192,0)
 N DGFDA
"RTN","DGPFAAH",193,0)
 N DGFDAIEN
"RTN","DGPFAAH",194,0)
 N DGERR
"RTN","DGPFAAH",195,0)
 F DGSUB="ASSIGN","ASSIGNDT","ACTION","ENTERBY","APPRVBY","TIULINK" D
"RTN","DGPFAAH",196,0)
 . S DGFLD(DGSUB)=$P($G(DGPFAH(DGSUB)),U)
"RTN","DGPFAAH",197,0)
 I $D(DGPFAH("COMMENT")) M DGFLD("COMMENT")=DGPFAH("COMMENT")
"RTN","DGPFAAH",198,0)
 I $$VALID^DGPFUT("DGPFAAH1",26.14,.DGFLD,.DGPFERR) D
"RTN","DGPFAAH",199,0)
 . S DGIEN=$$FNDHIST^DGPFAAH(DGFLD("ASSIGN"),DGFLD("ASSIGNDT"))
"RTN","DGPFAAH",200,0)
 . I DGIEN S DGIENS=DGIEN_","
"RTN","DGPFAAH",201,0)
 . E  S DGIENS="+1,"
"RTN","DGPFAAH",202,0)
 . S DGFDA(26.14,DGIENS,.01)=DGFLD("ASSIGN")
"RTN","DGPFAAH",203,0)
 . S DGFDA(26.14,DGIENS,.02)=DGFLD("ASSIGNDT")
"RTN","DGPFAAH",204,0)
 . S DGFDA(26.14,DGIENS,.03)=DGFLD("ACTION")
"RTN","DGPFAAH",205,0)
 . S DGFDA(26.14,DGIENS,.04)=DGFLD("ENTERBY")
"RTN","DGPFAAH",206,0)
 . S DGFDA(26.14,DGIENS,.05)=DGFLD("APPRVBY")
"RTN","DGPFAAH",207,0)
 . S DGFDA(26.14,DGIENS,.06)=DGFLD("TIULINK")
"RTN","DGPFAAH",208,0)
 . S DGFDA(26.14,DGIENS,1)="DGFLD(""COMMENT"")"
"RTN","DGPFAAH",209,0)
 . I DGIEN D
"RTN","DGPFAAH",210,0)
 . . D FILE^DIE("","DGFDA","DGERR")
"RTN","DGPFAAH",211,0)
 . . I $D(DGERR) S DGIEN=0
"RTN","DGPFAAH",212,0)
 . E  D
"RTN","DGPFAAH",213,0)
 . . D UPDATE^DIE("","DGFDA","DGFDAIEN","DGERR")
"RTN","DGPFAAH",214,0)
 . . I '$D(DGERR) S DGIEN=$G(DGFDAIEN(1))
"RTN","DGPFAAH",215,0)
 Q $S($G(DGIEN)>0:DGIEN,1:0)
"RTN","DGPFALF")
0^19^B24023495
"RTN","DGPFALF",1,0)
DGPFALF ;ALB/KCL,RBS - PRF LOCAL FLAG API'S ; 4/8/04 4:03pm
"RTN","DGPFALF",2,0)
 ;;5.3;Registration;**425,554**;Aug 13, 1993
"RTN","DGPFALF",3,0)
 ;
"RTN","DGPFALF",4,0)
 ;- no direct entry
"RTN","DGPFALF",5,0)
 QUIT
"RTN","DGPFALF",6,0)
 ;
"RTN","DGPFALF",7,0)
GETLF(DGPFIEN,DGPFLF) ;retrieve a single PRF LOCAL FLAG (#26.11) record
"RTN","DGPFALF",8,0)
 ;This function returns a single flag record from the PRF LOCAL FLAG
"RTN","DGPFALF",9,0)
 ;file and returns it in an array format.
"RTN","DGPFALF",10,0)
 ;
"RTN","DGPFALF",11,0)
 ;  Input:
"RTN","DGPFALF",12,0)
 ;   DGPFIEN - (required) pointer to local flag record in the
"RTN","DGPFALF",13,0)
 ;             PRF LOCAL FLAG (#26.11) file
"RTN","DGPFALF",14,0)
 ;    DGPFLF - (required) result array passed by reference
"RTN","DGPFALF",15,0)
 ;
"RTN","DGPFALF",16,0)
 ; Output:
"RTN","DGPFALF",17,0)
 ;   Function Value - returns 1 on success, 0 on failure
"RTN","DGPFALF",18,0)
 ;           DGPFLF - output array containing local flag record field
"RTN","DGPFALF",19,0)
 ;                    values.
"RTN","DGPFALF",20,0)
 ;                    Subscript          Field#   Data
"RTN","DGPFALF",21,0)
 ;                    --------------     -------  -------------------
"RTN","DGPFALF",22,0)
 ;                    "FLAG"              .01      internal^external
"RTN","DGPFALF",23,0)
 ;                    "STAT"              .02      internal^external
"RTN","DGPFALF",24,0)
 ;                    "TYPE"              .03      internal^external
"RTN","DGPFALF",25,0)
 ;                    "REVFREQ"           .04      internal^external
"RTN","DGPFALF",26,0)
 ;                    "NOTIDAYS"          .05      internal^external
"RTN","DGPFALF",27,0)
 ;                    "REVGRP"            .06      internal^external
"RTN","DGPFALF",28,0)
 ;                    "TIUTITLE"          .07      internal^external
"RTN","DGPFALF",29,0)
 ;                    "DESC",line#,0      1        character string
"RTN","DGPFALF",30,0)
 ;                    "PRININV",line#,0   2        character string
"RTN","DGPFALF",31,0)
 ;
"RTN","DGPFALF",32,0)
 N DGIENS  ;IEN string for DIQ
"RTN","DGPFALF",33,0)
 N DGFLDS  ;results array for DIQ
"RTN","DGPFALF",34,0)
 N DGERR   ;error arrary for DIQ
"RTN","DGPFALF",35,0)
 N DGSUB   ;pincipal investigator multiple subscript
"RTN","DGPFALF",36,0)
 N RESULT  ;return function value
"RTN","DGPFALF",37,0)
 ;
"RTN","DGPFALF",38,0)
 S RESULT=0
"RTN","DGPFALF",39,0)
 ;
"RTN","DGPFALF",40,0)
 I $G(DGPFIEN)>0,$D(^DGPF(26.11,DGPFIEN)) D
"RTN","DGPFALF",41,0)
 . S DGIENS=DGPFIEN_","
"RTN","DGPFALF",42,0)
 . D GETS^DIQ(26.11,DGIENS,"**","IEZ","DGFLDS","DGERR")
"RTN","DGPFALF",43,0)
 . Q:$D(DGERR)
"RTN","DGPFALF",44,0)
 . ;
"RTN","DGPFALF",45,0)
 . ;-- build local flag array
"RTN","DGPFALF",46,0)
 . S DGPFLF("FLAG")=$G(DGFLDS(26.11,DGIENS,.01,"I"))_U_$G(DGFLDS(26.11,DGIENS,.01,"E"))
"RTN","DGPFALF",47,0)
 . S DGPFLF("STAT")=$G(DGFLDS(26.11,DGIENS,.02,"I"))_U_$G(DGFLDS(26.11,DGIENS,.02,"E"))
"RTN","DGPFALF",48,0)
 . S DGPFLF("TYPE")=$G(DGFLDS(26.11,DGIENS,.03,"I"))_U_$G(DGFLDS(26.11,DGIENS,.03,"E"))
"RTN","DGPFALF",49,0)
 . S DGPFLF("REVFREQ")=$G(DGFLDS(26.11,DGIENS,.04,"I"))_U_$G(DGFLDS(26.11,DGIENS,.04,"E"))
"RTN","DGPFALF",50,0)
 . S DGPFLF("NOTIDAYS")=$G(DGFLDS(26.11,DGIENS,.05,"I"))_U_$G(DGFLDS(26.11,DGIENS,.05,"E"))
"RTN","DGPFALF",51,0)
 . S DGPFLF("REVGRP")=$G(DGFLDS(26.11,DGIENS,.06,"I"))_U_$G(DGFLDS(26.11,DGIENS,.06,"E"))
"RTN","DGPFALF",52,0)
 . S DGPFLF("TIUTITLE")=$G(DGFLDS(26.11,DGIENS,.07,"I"))_U_$G(DGFLDS(26.11,DGIENS,.07,"E"))
"RTN","DGPFALF",53,0)
 . ;-- flag description word processing array
"RTN","DGPFALF",54,0)
 . M DGPFLF("DESC")=DGFLDS(26.11,DGIENS,1)
"RTN","DGPFALF",55,0)
 . K DGPFLF("DESC","E"),DGPFLF("DESC","I")
"RTN","DGPFALF",56,0)
 . ;-- principal investigator(s) multiple
"RTN","DGPFALF",57,0)
 . S DGSUB="" F  S DGSUB=$O(DGFLDS(26.112,DGSUB)) Q:DGSUB=""  D
"RTN","DGPFALF",58,0)
 . . S DGPFLF("PRININV",+DGSUB,0)=$G(DGFLDS(26.112,DGSUB,.01,"I"))_U_$G(DGFLDS(26.112,DGSUB,.01,"E"))
"RTN","DGPFALF",59,0)
 . ;
"RTN","DGPFALF",60,0)
 . S RESULT=1
"RTN","DGPFALF",61,0)
 ;
"RTN","DGPFALF",62,0)
 Q RESULT
"RTN","DGPFALF",63,0)
 ;
"RTN","DGPFALF",64,0)
FNDFLAG(DGPFFLG) ;Find Flag Name IEN
"RTN","DGPFALF",65,0)
 ;  This function finds a flag record IEN using the name field.
"RTN","DGPFALF",66,0)
 ;  Input:
"RTN","DGPFALF",67,0)
 ;   DGPFFLG - Flag Name field (.01) value
"RTN","DGPFALF",68,0)
 ;
"RTN","DGPFALF",69,0)
 ;  Output:
"RTN","DGPFALF",70,0)
 ;   Function Value - Returns IEN of existing record on success, 0 on
"RTN","DGPFALF",71,0)
 ;                    failure
"RTN","DGPFALF",72,0)
 N DGIEN
"RTN","DGPFALF",73,0)
 I $G(DGPFFLG)["" D
"RTN","DGPFALF",74,0)
 . S DGIEN=$O(^DGPF(26.11,"B",DGPFFLG,0))
"RTN","DGPFALF",75,0)
 ;
"RTN","DGPFALF",76,0)
 Q $S($G(DGIEN)>0:DGIEN,1:0)
"RTN","DGPFALF",77,0)
 ;
"RTN","DGPFALF",78,0)
STOFLAG(DGPFLF,DGPFERR) ;store a single PRF LOCAL FLAG (#26.11) file record
"RTN","DGPFALF",79,0)
 ;
"RTN","DGPFALF",80,0)
 ;  Input:
"RTN","DGPFALF",81,0)
 ;   DGPFLF - (required) array of values to be filed (see GETLF tag
"RTN","DGPFALF",82,0)
 ;             above for valid array structure)
"RTN","DGPFALF",83,0)
 ;  DGPFERR - (optional) passed by reference to contain error messages
"RTN","DGPFALF",84,0)
 ;
"RTN","DGPFALF",85,0)
 ;  Output:
"RTN","DGPFALF",86,0)
 ;   Function Value - Returns IEN of record on success, 0 on failure
"RTN","DGPFALF",87,0)
 ;          DGPFERR - Undefined on success, error message on failure
"RTN","DGPFALF",88,0)
 ;
"RTN","DGPFALF",89,0)
 N DGSUB,DGFLD,DGIEN,DGIENS,DGFDA,DGFDAIEN,DGERR
"RTN","DGPFALF",90,0)
 ;
"RTN","DGPFALF",91,0)
 F DGSUB="FLAG","STAT","TYPE","REVFREQ","NOTIDAYS","REVGRP","TIUTITLE" D
"RTN","DGPFALF",92,0)
 . S DGFLD(DGSUB)=$P($G(DGPFLF(DGSUB)),U)
"RTN","DGPFALF",93,0)
 I $D(DGPFLF("DESC")) M DGFLD("DESC")=DGPFLF("DESC")
"RTN","DGPFALF",94,0)
 I $D(DGPFLF("PRININV")) M DGFLD("PRININV")=DGPFLF("PRININV")
"RTN","DGPFALF",95,0)
 I $$VALID^DGPFUT("DGPFALF1",26.11,.DGFLD,.DGPFERR) D
"RTN","DGPFALF",96,0)
 . ;
"RTN","DGPFALF",97,0)
 . ;if name change lookup on original name, otherwise lookup on new name
"RTN","DGPFALF",98,0)
 . S DGIEN=$$FNDFLAG^DGPFALF($S($G(DGPFLF("OLDFLAG"))]"":DGPFLF("OLDFLAG"),1:DGFLD("FLAG")))
"RTN","DGPFALF",99,0)
 . ;the "?+" on an existing record will do LAYGO to lookup and add new
"RTN","DGPFALF",100,0)
 . ; entries.  This was needed for adding another entry to the
"RTN","DGPFALF",101,0)
 . ;  Principal Investigator(s) multiple (#26.112)
"RTN","DGPFALF",102,0)
 . I DGIEN S DGIENS=DGIEN_","               ;EDIT existing record
"RTN","DGPFALF",103,0)
 . E  S DGIENS="+1,"                        ;ADD new record
"RTN","DGPFALF",104,0)
 . S DGFDA(26.11,DGIENS,.01)=DGFLD("FLAG")
"RTN","DGPFALF",105,0)
 . S DGFDA(26.11,DGIENS,.02)=DGFLD("STAT")
"RTN","DGPFALF",106,0)
 . S DGFDA(26.11,DGIENS,.03)=DGFLD("TYPE")
"RTN","DGPFALF",107,0)
 . S DGFDA(26.11,DGIENS,.04)=DGFLD("REVFREQ")
"RTN","DGPFALF",108,0)
 . S DGFDA(26.11,DGIENS,.05)=DGFLD("NOTIDAYS")
"RTN","DGPFALF",109,0)
 . S DGFDA(26.11,DGIENS,.06)=DGFLD("REVGRP")
"RTN","DGPFALF",110,0)
 . S DGFDA(26.11,DGIENS,.07)=DGFLD("TIUTITLE")
"RTN","DGPFALF",111,0)
 . S DGFDA(26.11,DGIENS,1)="DGFLD(""DESC"")"
"RTN","DGPFALF",112,0)
 . ;-- principal investigator(s) multiple
"RTN","DGPFALF",113,0)
 . I $D(DGFLD("PRININV")) D PRININV(+DGIEN,.DGFDA)
"RTN","DGPFALF",114,0)
 . ;
"RTN","DGPFALF",115,0)
 . D UPDATE^DIE("","DGFDA","DGFDAIEN","DGERR")
"RTN","DGPFALF",116,0)
 . I '$D(DGERR),'DGIEN S DGIEN=$G(DGFDAIEN(1))
"RTN","DGPFALF",117,0)
 ;
"RTN","DGPFALF",118,0)
 Q $S($G(DGIEN)>0:DGIEN,1:0)
"RTN","DGPFALF",119,0)
 ;
"RTN","DGPFALF",120,0)
PRININV(DGPFIEN,DGFDA) ; setup principal investigator(s) multiple (#26.112)
"RTN","DGPFALF",121,0)
 ;  Input:
"RTN","DGPFALF",122,0)
 ;   DGPFIEN - value will indicate to EDIT or ADD a New Record
"RTN","DGPFALF",123,0)
 ;            IEN# = IEN of existing entry - Edit to existing Record
"RTN","DGPFALF",124,0)
 ;               0 = Add New Record
"RTN","DGPFALF",125,0)
 ;  DGFDA - array used by FileMan (passed by reference)
"RTN","DGPFALF",126,0)
 ;
"RTN","DGPFALF",127,0)
 ;  Output:
"RTN","DGPFALF",128,0)
 ;   DGFDA array subscript entries for "PRININV"
"RTN","DGPFALF",129,0)
 ;
"RTN","DGPFALF",130,0)
 ; The DGFDA FDA_ROOT array needs the "?+" on an existing IEN so
"RTN","DGPFALF",131,0)
 ;  that FileMan will do LAYGO to lookup and add new entires.
"RTN","DGPFALF",132,0)
 ; This was needed for adding another entry to an existing
"RTN","DGPFALF",133,0)
 ;  Principal Investigator(s) multiple (#26.112) field.
"RTN","DGPFALF",134,0)
 ;
"RTN","DGPFALF",135,0)
 S DGPFIEN=+$G(DGPFIEN)
"RTN","DGPFALF",136,0)
 N DGSUB,DGIENS
"RTN","DGPFALF",137,0)
 ;
"RTN","DGPFALF",138,0)
 S DGSUB=0 F  S DGSUB=$O(DGFLD("PRININV",DGSUB)) Q:DGSUB=""  D
"RTN","DGPFALF",139,0)
 . I DGPFIEN D                       ;existing record
"RTN","DGPFALF",140,0)
 . . S DGIENS=DGSUB_","_DGPFIEN_","  ;delete
"RTN","DGPFALF",141,0)
 . . Q:DGFLD("PRININV",DGSUB,0)="@"
"RTN","DGPFALF",142,0)
 . . S DGIENS="?+"_DGIENS            ;non-delete uses LAYGO
"RTN","DGPFALF",143,0)
 . E  S DGIENS="+"_(DGSUB+1)_",+1,"  ;new record
"RTN","DGPFALF",144,0)
 . ;
"RTN","DGPFALF",145,0)
 . S DGFDA(26.112,DGIENS,.01)=$P(DGFLD("PRININV",DGSUB,0),U)
"RTN","DGPFALF",146,0)
 ;
"RTN","DGPFALF",147,0)
 Q
"RTN","DGPFALF1")
0^32^B9747173
"RTN","DGPFALF1",1,0)
DGPFALF1 ;ALB/KCL,RBS - PRF LOCAL FLAG API'S CONTINUED ; 4/20/04 12:02pm
"RTN","DGPFALF1",2,0)
 ;;5.3;Registration;**425,554**;Aug 13, 1993
"RTN","DGPFALF1",3,0)
 ;
"RTN","DGPFALF1",4,0)
 ;- no direct entry
"RTN","DGPFALF1",5,0)
 QUIT
"RTN","DGPFALF1",6,0)
 ;
"RTN","DGPFALF1",7,0)
STOALL(DGPFLF,DGPFLH,DGPFERR) ;File both LOCAL FLAG(#26.11) & HISTORY(#26.12)
"RTN","DGPFALF1",8,0)
 ;This function acts as a wrapper around the $$STOFLAG^DGPFALF
"RTN","DGPFALF1",9,0)
 ;and the $$STOHIST^DGPFALH filer calls.
"RTN","DGPFALF1",10,0)
 ;
"RTN","DGPFALF1",11,0)
 ;  Input:
"RTN","DGPFALF1",12,0)
 ;   DGPFLF - (required) array of Local Flag values to be filed
"RTN","DGPFALF1",13,0)
 ;            (see $$GETLF^DGPFALF for valid array structure)
"RTN","DGPFALF1",14,0)
 ;   DGPFLH - (required) array of Flag History values to be filed
"RTN","DGPFALF1",15,0)
 ;            (see $$GETHIST^DGPFALH for valid array structure)
"RTN","DGPFALF1",16,0)
 ;  DGPFERR - (optional) passed by reference to contain error messages
"RTN","DGPFALF1",17,0)
 ;
"RTN","DGPFALF1",18,0)
 ;  Output:
"RTN","DGPFALF1",19,0)
 ;   Function Value - Returns circumflex("^") delimited results of
"RTN","DGPFALF1",20,0)
 ;                    $$STOFLAG^DGPFALF and $$STOHIST^DGPFALH calls.
"RTN","DGPFALF1",21,0)
 ;                          Example:   "3^12"
"RTN","DGPFALF1",22,0)
 ;                    On Success - "IEN of (#26.11)^IEN of (#26.12)"
"RTN","DGPFALF1",23,0)
 ;                    On Failure - 0
"RTN","DGPFALF1",24,0)
 ;          DGPFERR - Undefined on success, error message on failure
"RTN","DGPFALF1",25,0)
 ;
"RTN","DGPFALF1",26,0)
 N DGOIEN    ;existing Local Flag file IEN used for "roll-back"
"RTN","DGPFALF1",27,0)
 N DGPFOLF   ;existing Local Flag data array used for "roll-back"
"RTN","DGPFALF1",28,0)
 N DGLIEN    ;Local Flag file IEN
"RTN","DGPFALF1",29,0)
 N DGLHIEN   ;Local Flag history file IEN
"RTN","DGPFALF1",30,0)
 N DGFLG     ;"FLAG" value
"RTN","DGPFALF1",31,0)
 ;
"RTN","DGPFALF1",32,0)
 S (DGLIEN,DGLHIEN)=0
"RTN","DGPFALF1",33,0)
 S DGFLG=$P($G(DGPFLF("FLAG")),U)
"RTN","DGPFALF1",34,0)
 S DGOIEN=$$FNDFLAG^DGPFALF(DGFLG)
"RTN","DGPFALF1",35,0)
 I 'DGOIEN!(DGOIEN&($$GETLF^DGPFALF(DGOIEN,.DGPFOLF))) D
"RTN","DGPFALF1",36,0)
 . S DGLIEN=$$STOFLAG^DGPFALF(.DGPFLF,.DGPFERR)
"RTN","DGPFALF1",37,0)
 . I $D(DGPFERR) S DGLIEN=0
"RTN","DGPFALF1",38,0)
 . I DGLIEN D
"RTN","DGPFALF1",39,0)
 . . S DGPFLH("FLAG")=DGLIEN
"RTN","DGPFALF1",40,0)
 . . S DGLHIEN=$$STOHIST^DGPFALH(.DGPFLH,.DGPFERR)
"RTN","DGPFALF1",41,0)
 . . I $D(DGPFERR) S DGLHIEN=0
"RTN","DGPFALF1",42,0)
 . . I DGLHIEN=0 D    ;roll back the Local Flag file setup
"RTN","DGPFALF1",43,0)
 . . . I 'DGOIEN,'$D(DGPFOLF) S DGPFOLF("FLAG")="@"
"RTN","DGPFALF1",44,0)
 . . . I $$ROLLBACK^DGPFALF1(26.11,DGLIEN,.DGPFOLF,"FLAG") S DGLIEN=0
"RTN","DGPFALF1",45,0)
 Q $S(DGLHIEN=0:0,1:DGLIEN_"^"_DGLHIEN)
"RTN","DGPFALF1",46,0)
 ;
"RTN","DGPFALF1",47,0)
ROLLBACK(DGFILE,DGFIEN,DGPFOA,DGKEY) ;Rollback a FILE record
"RTN","DGPFALF1",48,0)
 ;  Input:
"RTN","DGPFALF1",49,0)
 ;    DGFILE - File reference that will be used for rollback
"RTN","DGPFALF1",50,0)
 ;    DGFIEN - IEN of record to rollback in DGFILE
"RTN","DGPFALF1",51,0)
 ;    DGPFOA - Original array of data prior to record modification
"RTN","DGPFALF1",52,0)
 ;    DGKEY  - .01 Field Name reference to DELETE whole record
"RTN","DGPFALF1",53,0)
 ;  Output:
"RTN","DGPFALF1",54,0)
 ;    Function value - 1 on successful Rollback
"RTN","DGPFALF1",55,0)
 ;                     0 on failure
"RTN","DGPFALF1",56,0)
 ;
"RTN","DGPFALF1",57,0)
 N DGIENS,DGFDA,DGERR,DGRSLT
"RTN","DGPFALF1",58,0)
 S DGRSLT=0
"RTN","DGPFALF1",59,0)
 I $D(DGFILE),+$G(DGFIEN),$D(DGPFOA),$D(DGKEY) D
"RTN","DGPFALF1",60,0)
 . Q:'$D(^DGPF(DGFILE))
"RTN","DGPFALF1",61,0)
 . Q:'$D(^DGPF(DGFILE,DGFIEN))
"RTN","DGPFALF1",62,0)
 . S DGIENS=DGFIEN_","
"RTN","DGPFALF1",63,0)
 . I $G(DGPFOA(DGKEY))="@" D
"RTN","DGPFALF1",64,0)
 . . S DGFDA(DGFILE,DGIENS,.01)="@"
"RTN","DGPFALF1",65,0)
 . . D FILE^DIE("","DGFDA","DGERR")
"RTN","DGPFALF1",66,0)
 . . I '$D(DGERR) S DGRSLT=1
"RTN","DGPFALF1",67,0)
 . E  D
"RTN","DGPFALF1",68,0)
 . . I $$STOFLAG^DGPFALF(.DGPFOA,.DGERR),'$D(DGERR) S DGRSLT=1
"RTN","DGPFALF1",69,0)
 Q DGRSLT
"RTN","DGPFALF1",70,0)
 ;
"RTN","DGPFALF1",71,0)
LOCKLF(DGPFLIEN) ; Lock Flag ien
"RTN","DGPFALF1",72,0)
 ;  Input:
"RTN","DGPFALF1",73,0)
 ;   DGPFLIEN - IEN of record
"RTN","DGPFALF1",74,0)
 ;  Output:
"RTN","DGPFALF1",75,0)
 ;   Function Value - Returns 1 on success
"RTN","DGPFALF1",76,0)
 ;                            0 on failure
"RTN","DGPFALF1",77,0)
 L +^DGPF(26.11,DGPFLIEN):10 I '$T Q 0
"RTN","DGPFALF1",78,0)
 Q 1
"RTN","DGPFALF1",79,0)
 ;
"RTN","DGPFALF1",80,0)
UNLOCK(DGPFLIEN) ; Un-Lock Flag ien
"RTN","DGPFALF1",81,0)
 ;  Input:
"RTN","DGPFALF1",82,0)
 ;   DGPFLIEN - IEN of record
"RTN","DGPFALF1",83,0)
 ;  Output:
"RTN","DGPFALF1",84,0)
 ;   Function Value - Returns 1 on success
"RTN","DGPFALF1",85,0)
 ;                            0 on failure
"RTN","DGPFALF1",86,0)
 L -^DGPF(26.11,DGPFLIEN):2 I '$T Q 0
"RTN","DGPFALF1",87,0)
 Q 1
"RTN","DGPFALF1",88,0)
 ;
"RTN","DGPFALF1",89,0)
 ;
"RTN","DGPFALF1",90,0)
 ; PRF LOCAL FLAG FILE (#26.11) Field VALIDATION data
"RTN","DGPFALF1",91,0)
 ;  don't do the Principal Investigator(s) multiple fields...
"RTN","DGPFALF1",92,0)
 ;  they're pointers anyway and won't be Validated.
"RTN","DGPFALF1",93,0)
 ; PRININV;2;0;0;principal investigator(s) (if Research Flag)(pointer)
"RTN","DGPFALF1",94,0)
 ;
"RTN","DGPFALF1",95,0)
 ; *** Only Validate the following fields...
"RTN","DGPFALF1",96,0)
XREF ;;array node name;field#;required param;word processing?;description
"RTN","DGPFALF1",97,0)
 ;;FLAG;.01;1;0;flag name
"RTN","DGPFALF1",98,0)
 ;;STAT;.02;1;0;active/inactive
"RTN","DGPFALF1",99,0)
 ;;TYPE;.03;1;0;pointer to PRF TYPE FILE (#26.16)
"RTN","DGPFALF1",100,0)
 ;;REVFREQ;.04;1;0;review frequency
"RTN","DGPFALF1",101,0)
 ;;NOTIDAYS;.05;1;0;notification days
"RTN","DGPFALF1",102,0)
 ;;REVGRP;.06;0;0;pointer to MAIL GROUP FILE (#3.8)
"RTN","DGPFALF1",103,0)
 ;;TIUTITLE;.07;1;0;pointer to TIU DOCUMENT (#8925.1) file
"RTN","DGPFALF1",104,0)
 ;;DESC;1;1;1;description of flag
"RTN","DGPFANF")
0^20^B7058990
"RTN","DGPFANF",1,0)
DGPFANF ;ALB/KCL - PRF NATIONAL FLAG API'S ; 4/7/04 2:09pm
"RTN","DGPFANF",2,0)
 ;;5.3;Registration;**425,554**;Aug 13, 1993
"RTN","DGPFANF",3,0)
 ;
"RTN","DGPFANF",4,0)
 ;- no direct entry
"RTN","DGPFANF",5,0)
 QUIT
"RTN","DGPFANF",6,0)
 ;
"RTN","DGPFANF",7,0)
GETNF(DGPFIEN,DGPFNF) ;retrieve a single NATIONAL FLAG record
"RTN","DGPFANF",8,0)
 ;This function returns a single flag record from the PRF NATIONAL FLAG
"RTN","DGPFANF",9,0)
 ;file and returns it in an array format.
"RTN","DGPFANF",10,0)
 ;
"RTN","DGPFANF",11,0)
 ;  Input:
"RTN","DGPFANF",12,0)
 ;   DGPFIEN - (required) pointer to national flag record in the
"RTN","DGPFANF",13,0)
 ;             PRF NATIONAL FLAG (#26.15) file
"RTN","DGPFANF",14,0)
 ;    DGPFNF - (required) result array passed by reference
"RTN","DGPFANF",15,0)
 ;
"RTN","DGPFANF",16,0)
 ; Output:
"RTN","DGPFANF",17,0)
 ;   Function Value - returns 1 on success, 0 on failure
"RTN","DGPFANF",18,0)
 ;           DGPFNF - output array containing national flag record field
"RTN","DGPFANF",19,0)
 ;                    values.
"RTN","DGPFANF",20,0)
 ;                    Subscript          Field#   Data
"RTN","DGPFANF",21,0)
 ;                    --------------     -------  ---------------------
"RTN","DGPFANF",22,0)
 ;                    "FLAG"              .01      internal^external
"RTN","DGPFANF",23,0)
 ;                    "STAT"              .02      internal^external
"RTN","DGPFANF",24,0)
 ;                    "TYPE"              .03      internal^external
"RTN","DGPFANF",25,0)
 ;                    "REVFREQ"           .04      internal^external
"RTN","DGPFANF",26,0)
 ;                    "NOTIDAYS"          .05      internal^external
"RTN","DGPFANF",27,0)
 ;                    "REVGRP"            .06      internal^external
"RTN","DGPFANF",28,0)
 ;                    "TIUTITLE"          .07      internal^external
"RTN","DGPFANF",29,0)
 ;                    "DESC",line#,0      1        character string
"RTN","DGPFANF",30,0)
 ;                    "PRININV",line#,0   2        character string
"RTN","DGPFANF",31,0)
 ;
"RTN","DGPFANF",32,0)
 N DGIENS  ;IEN string for DIQ
"RTN","DGPFANF",33,0)
 N DGFLDS  ;results array for DIQ
"RTN","DGPFANF",34,0)
 N DGERR   ;error arrary for DIQ
"RTN","DGPFANF",35,0)
 N DGSUB   ;pincipal investigator multiple subscript
"RTN","DGPFANF",36,0)
 N RESULT  ;return function value
"RTN","DGPFANF",37,0)
 ;
"RTN","DGPFANF",38,0)
 S RESULT=0
"RTN","DGPFANF",39,0)
 ;
"RTN","DGPFANF",40,0)
 I $G(DGPFIEN)>0,$D(^DGPF(26.15,DGPFIEN)) D
"RTN","DGPFANF",41,0)
 . S DGIENS=DGPFIEN_","
"RTN","DGPFANF",42,0)
 . D GETS^DIQ(26.15,DGIENS,"**","IEZ","DGFLDS","DGERR")
"RTN","DGPFANF",43,0)
 . Q:$D(DGERR)
"RTN","DGPFANF",44,0)
 . ;
"RTN","DGPFANF",45,0)
 . ;-- build national flag array
"RTN","DGPFANF",46,0)
 . S DGPFNF("FLAG")=$G(DGFLDS(26.15,DGIENS,.01,"I"))_U_$G(DGFLDS(26.15,DGIENS,.01,"E"))
"RTN","DGPFANF",47,0)
 . S DGPFNF("STAT")=$G(DGFLDS(26.15,DGIENS,.02,"I"))_U_$G(DGFLDS(26.15,DGIENS,.02,"E"))
"RTN","DGPFANF",48,0)
 . S DGPFNF("TYPE")=$G(DGFLDS(26.15,DGIENS,.03,"I"))_U_$G(DGFLDS(26.15,DGIENS,.03,"E"))
"RTN","DGPFANF",49,0)
 . S DGPFNF("REVFREQ")=$G(DGFLDS(26.15,DGIENS,.04,"I"))_U_$G(DGFLDS(26.15,DGIENS,.04,"E"))
"RTN","DGPFANF",50,0)
 . S DGPFNF("NOTIDAYS")=$G(DGFLDS(26.15,DGIENS,.05,"I"))_U_$G(DGFLDS(26.15,DGIENS,.05,"E"))
"RTN","DGPFANF",51,0)
 . S DGPFNF("REVGRP")=$G(DGFLDS(26.15,DGIENS,.06,"I"))_U_$G(DGFLDS(26.15,DGIENS,.06,"E"))
"RTN","DGPFANF",52,0)
 . S DGPFNF("TIUTITLE")=$G(DGFLDS(26.15,DGIENS,.07,"I"))_U_$G(DGFLDS(26.15,DGIENS,.07,"E"))
"RTN","DGPFANF",53,0)
 . ;-- flag description word processing array
"RTN","DGPFANF",54,0)
 . M DGPFNF("DESC")=DGFLDS(26.15,DGIENS,1)
"RTN","DGPFANF",55,0)
 . K DGPFNF("DESC","E"),DGPFNF("DESC","I")
"RTN","DGPFANF",56,0)
 . ;-- principal investigator(s) multiple
"RTN","DGPFANF",57,0)
 . S DGSUB="" F  S DGSUB=$O(DGFLDS(26.152,DGSUB)) Q:DGSUB=""  D
"RTN","DGPFANF",58,0)
 . . S DGPFNF("PRININV",+DGSUB,0)=$G(DGFLDS(26.152,DGSUB,.01,"I"))_U_$G(DGFLDS(26.152,DGSUB,.01,"E"))
"RTN","DGPFANF",59,0)
 . ;
"RTN","DGPFANF",60,0)
 . S RESULT=1
"RTN","DGPFANF",61,0)
 ;
"RTN","DGPFANF",62,0)
 Q RESULT
"RTN","DGPFAPI")
0^1^B32121180
"RTN","DGPFAPI",1,0)
DGPFAPI ;ALB/RBS - PRF EXTERNAL API'S ; 2/28/05 11:21am
"RTN","DGPFAPI",2,0)
 ;;5.3;Registration;**425,554**;Aug 13, 1993
"RTN","DGPFAPI",3,0)
 ;
"RTN","DGPFAPI",4,0)
 Q  ;no direct entry
"RTN","DGPFAPI",5,0)
 ;
"RTN","DGPFAPI",6,0)
GETACT(DGDFN,DGPRF) ;Retrieve all ACTIVE Patient record flag assignments
"RTN","DGPFAPI",7,0)
 ;The purpose of this API is to facilitate the retrieval of specific
"RTN","DGPFAPI",8,0)
 ;data that can be used for the displaying of or the reporting of
"RTN","DGPFAPI",9,0)
 ;only ACTIVE Patient Record Flag (PRF) Assignment information for
"RTN","DGPFAPI",10,0)
 ;a patient.
"RTN","DGPFAPI",11,0)
 ;
"RTN","DGPFAPI",12,0)
 ; Associated DBIA:  #3860 - DGPF PATIENT RECORD FLAG
"RTN","DGPFAPI",13,0)
 ;
"RTN","DGPFAPI",14,0)
 ;  Input:
"RTN","DGPFAPI",15,0)
 ;   DGDFN - IEN of patient in the PATIENT (#2) file
"RTN","DGPFAPI",16,0)
 ;   DGPRF - Closed Root array of return values
"RTN","DGPFAPI",17,0)
 ;           [Optional-default DGPFAPI]
"RTN","DGPFAPI",18,0)
 ;
"RTN","DGPFAPI",19,0)
 ;  Output:
"RTN","DGPFAPI",20,0)
 ;   Function result - "0"  = No Active record flags for the patient
"RTN","DGPFAPI",21,0)
 ;                   - "nn" = Total number of flags returned in array
"RTN","DGPFAPI",22,0)
 ;     DGPRF() - Array, passed by closed root reference
"RTN","DGPFAPI",23,0)
 ;             - Multiple subscripted array of Active flag information
"RTN","DGPFAPI",24,0)
 ;               If the function call is successful, this array will
"RTN","DGPFAPI",25,0)
 ;               contain each of the Active flag records.
"RTN","DGPFAPI",26,0)
 ;             - Subscript field value = internal value^external value
"RTN","DGPFAPI",27,0)
 ;               2 piece string caret(^) delimited
"RTN","DGPFAPI",28,0)
 ;   DGPFAPI() - Default array name if no name passed
"RTN","DGPFAPI",29,0)
 ;
"RTN","DGPFAPI",30,0)
 ;  Subscript   Field Name                Field #/File #
"RTN","DGPFAPI",31,0)
 ;  ---------   ----------                --------------
"RTN","DGPFAPI",32,0)
 ;  "APPRVBY"   APPROVED BY               (.05)/(#26.14)
"RTN","DGPFAPI",33,0)
 ;              (Note: The .5 (POSTMASTER) internal field value
"RTN","DGPFAPI",34,0)
 ;               triggers an output transform that converts the
"RTN","DGPFAPI",35,0)
 ;               external value of "POSTMASTER" to "CHIEF OF STAFF".
"RTN","DGPFAPI",36,0)
 ;  "ASSIGNDT"  DATE/TIME                 (.02)/(#26.14)
"RTN","DGPFAPI",37,0)
 ;  "REVIEWDT"  REVIEW DATE               (.06)/(#26.13)
"RTN","DGPFAPI",38,0)
 ;  "FLAG"      FLAG NAME                 (.02)/(#26.13)
"RTN","DGPFAPI",39,0)
 ;  "FLAGTYPE"  TYPE                      (.03)/(#26.11 or #26.15)
"RTN","DGPFAPI",40,0)
 ;  "CATEGORY"  National or Local Flag    (#26.15) or (#26.11)
"RTN","DGPFAPI",41,0)
 ;  "OWNER"     OWNER SITE                (.04)/(#26.13)
"RTN","DGPFAPI",42,0)
 ;  "ORIGSITE"  ORIGINATING SITE          (.05)/(#26.13)
"RTN","DGPFAPI",43,0)
 ;  "TIUTITLE"  TIU PN TITLE              (.07)/(#26.11) or (#26.15)
"RTN","DGPFAPI",44,0)
 ;  "TIULINK"   TIU PN LINK               (.06)/(#26.14)
"RTN","DGPFAPI",45,0)
 ;  "NARR"      ASSIGNMENT NARRATIVE      (1)/(#26.13)
"RTN","DGPFAPI",46,0)
 ;              (word-processing, multiple nodes)
"RTN","DGPFAPI",47,0)
 ;              The format is in a word-processing value that may
"RTN","DGPFAPI",48,0)
 ;              contain multiple nodes of text.  Each node of text
"RTN","DGPFAPI",49,0)
 ;              will be less than 80 characters in length.
"RTN","DGPFAPI",50,0)
 ;              The format is as follows:
"RTN","DGPFAPI",51,0)
 ;   TARGET_ROOT(nn,"NARR",line#,0)=text
"RTN","DGPFAPI",52,0)
 ;      where:
"RTN","DGPFAPI",53,0)
 ;          nn = a unique number for each Flag
"RTN","DGPFAPI",54,0)
 ;       line# = a unique number starting at 1 for each wp line
"RTN","DGPFAPI",55,0)
 ;               of narrative text
"RTN","DGPFAPI",56,0)
 ;           0 = standard subscript format for the nodes of a
"RTN","DGPFAPI",57,0)
 ;               FileMan Word Processing field
"RTN","DGPFAPI",58,0)
 ;
"RTN","DGPFAPI",59,0)
 N DGPFTCNT  ;return results, "0"=no flags, "nn"=number of flags
"RTN","DGPFAPI",60,0)
 N DGPFIENS  ;array of all active flag assignment IEN's
"RTN","DGPFAPI",61,0)
 N DGPFIEN   ;ien of record flag assignment in (#26.13) file
"RTN","DGPFAPI",62,0)
 N DGPFA     ;flag assignment array
"RTN","DGPFAPI",63,0)
 N DGPFAH    ;flag assignment history array
"RTN","DGPFAPI",64,0)
 N DGPFLAG   ;flag record array
"RTN","DGPFAPI",65,0)
 N DGCAT     ;flag category
"RTN","DGPFAPI",66,0)
 ;
"RTN","DGPFAPI",67,0)
 Q:'$G(DGDFN) 0                            ;Quit, null parameter
"RTN","DGPFAPI",68,0)
 Q:'$$GETALL^DGPFAA(DGDFN,.DGPFIENS,1) 0   ;Quit, no Active assign's
"RTN","DGPFAPI",69,0)
 ;
"RTN","DGPFAPI",70,0)
 S DGPRF=$G(DGPRF)
"RTN","DGPFAPI",71,0)
 I DGPRF']"" S DGPRF="DGPFAPI"             ;setup default array name
"RTN","DGPFAPI",72,0)
 ;
"RTN","DGPFAPI",73,0)
 K @DGPRF                                  ;Kill/initialize work array
"RTN","DGPFAPI",74,0)
 ;
"RTN","DGPFAPI",75,0)
 S (DGPFIEN,DGCAT)="",DGPFTCNT=0
"RTN","DGPFAPI",76,0)
 ;
"RTN","DGPFAPI",77,0)
 ; loop all returned Active Record Flag Assignment ien's
"RTN","DGPFAPI",78,0)
 F  S DGPFIEN=$O(DGPFIENS(DGPFIEN)) Q:DGPFIEN=""  D
"RTN","DGPFAPI",79,0)
 . K DGPFA,DGPFAH,DGPFLAG
"RTN","DGPFAPI",80,0)
 . ;
"RTN","DGPFAPI",81,0)
 . ; retrieve single assignment record fields
"RTN","DGPFAPI",82,0)
 . Q:'$$GETASGN^DGPFAA(DGPFIEN,.DGPFA)
"RTN","DGPFAPI",83,0)
 . ;
"RTN","DGPFAPI",84,0)
 . ; no patient DFN match
"RTN","DGPFAPI",85,0)
 . I DGDFN'=$P(DGPFA("DFN"),U) Q
"RTN","DGPFAPI",86,0)
 . ;
"RTN","DGPFAPI",87,0)
 . ; get initial assignment history
"RTN","DGPFAPI",88,0)
 . Q:'$$GETHIST^DGPFAAH($$GETFIRST^DGPFAAH(DGPFIEN),.DGPFAH)
"RTN","DGPFAPI",89,0)
 . ;
"RTN","DGPFAPI",90,0)
 . ; get record flag record
"RTN","DGPFAPI",91,0)
 . Q:'$$GETFLAG^DGPFUT1($P($G(DGPFA("FLAG")),U),.DGPFLAG)
"RTN","DGPFAPI",92,0)
 . ;
"RTN","DGPFAPI",93,0)
 . S DGPFTCNT=DGPFTCNT+1
"RTN","DGPFAPI",94,0)
 . ;
"RTN","DGPFAPI",95,0)
 . ; approved by user
"RTN","DGPFAPI",96,0)
 . S @DGPRF@(DGPFTCNT,"APPRVBY")=$G(DGPFAH("APPRVBY"))
"RTN","DGPFAPI",97,0)
 . ;
"RTN","DGPFAPI",98,0)
 . ; initial assignment date/time
"RTN","DGPFAPI",99,0)
 . S @DGPRF@(DGPFTCNT,"ASSIGNDT")=$G(DGPFAH("ASSIGNDT"))
"RTN","DGPFAPI",100,0)
 . ;
"RTN","DGPFAPI",101,0)
 . ; next review due date
"RTN","DGPFAPI",102,0)
 . S @DGPRF@(DGPFTCNT,"REVIEWDT")=$G(DGPFA("REVIEWDT"))
"RTN","DGPFAPI",103,0)
 . ;
"RTN","DGPFAPI",104,0)
 . ; record flag name
"RTN","DGPFAPI",105,0)
 . S @DGPRF@(DGPFTCNT,"FLAG")=$G(DGPFA("FLAG"))
"RTN","DGPFAPI",106,0)
 . ;
"RTN","DGPFAPI",107,0)
 . ; record flag type
"RTN","DGPFAPI",108,0)
 . S @DGPRF@(DGPFTCNT,"FLAGTYPE")=$G(DGPFLAG("TYPE"))
"RTN","DGPFAPI",109,0)
 . ;
"RTN","DGPFAPI",110,0)
 . ; category of flag - I (NATIONAL) or II (LOCAL)
"RTN","DGPFAPI",111,0)
 . S DGCAT=$S($G(DGPFA("FLAG"))["26.15":"I (NATIONAL)",1:"II (LOCAL)")
"RTN","DGPFAPI",112,0)
 . S @DGPRF@(DGPFTCNT,"CATEGORY")=DGCAT_U_DGCAT
"RTN","DGPFAPI",113,0)
 . ;
"RTN","DGPFAPI",114,0)
 . ; owner site
"RTN","DGPFAPI",115,0)
 . S @DGPRF@(DGPFTCNT,"OWNER")=$G(DGPFA("OWNER"))
"RTN","DGPFAPI",116,0)
 . ;
"RTN","DGPFAPI",117,0)
 . ; originating site
"RTN","DGPFAPI",118,0)
 . S @DGPRF@(DGPFTCNT,"ORIGSITE")=$G(DGPFA("ORIGSITE"))
"RTN","DGPFAPI",119,0)
 . ;
"RTN","DGPFAPI",120,0)
 . ; only add TIU Progress Note subscripts if owner site of assignment
"RTN","DGPFAPI",121,0)
 . I $P($$SITE^VASITE,U)=$P(DGPFA("OWNER"),U) D
"RTN","DGPFAPI",122,0)
 . . ; get last history record (most current)
"RTN","DGPFAPI",123,0)
 . . K DGPFAH
"RTN","DGPFAPI",124,0)
 . . Q:'$$GETHIST^DGPFAAH($$GETLAST^DGPFAAH(DGPFIEN),.DGPFAH)
"RTN","DGPFAPI",125,0)
 . . ;
"RTN","DGPFAPI",126,0)
 . . ; flag associated TIU PN Title
"RTN","DGPFAPI",127,0)
 . . S @DGPRF@(DGPFTCNT,"TIUTITLE")=$G(DGPFLAG("TIUTITLE"))
"RTN","DGPFAPI",128,0)
 . . ;
"RTN","DGPFAPI",129,0)
 . . ; assignment history TIU PN Link
"RTN","DGPFAPI",130,0)
 . . S @DGPRF@(DGPFTCNT,"TIULINK")=$G(DGPFAH("TIULINK"))
"RTN","DGPFAPI",131,0)
 . ;
"RTN","DGPFAPI",132,0)
 . ; narrative
"RTN","DGPFAPI",133,0)
 . I '$D(DGPFA("NARR",1,0)) D  Q  ;should never happen - but -
"RTN","DGPFAPI",134,0)
 . . S @DGPRF@(DGPFTCNT,"NARR",1,0)="No Narrative Text"
"RTN","DGPFAPI",135,0)
 . ;
"RTN","DGPFAPI",136,0)
 . M @DGPRF@(DGPFTCNT,"NARR")=DGPFA("NARR")
"RTN","DGPFAPI",137,0)
 ;
"RTN","DGPFAPI",138,0)
 ; Re-Sort Active flags by category & alpha flag name
"RTN","DGPFAPI",139,0)
 I +$G(DGPFTCNT)>1 D
"RTN","DGPFAPI",140,0)
 . I $$SORT^DGPFUT2(DGPRF)  ;naked IF to just do resort
"RTN","DGPFAPI",141,0)
 ;
"RTN","DGPFAPI",142,0)
 Q DGPFTCNT
"RTN","DGPFAPI",143,0)
 ;
"RTN","DGPFAPI",144,0)
PRFQRY(DGDFN) ;query the CMOR for all patient record flag assignments
"RTN","DGPFAPI",145,0)
 ;This function queries a given patient's Coordinated Master of Record
"RTN","DGPFAPI",146,0)
 ;(CMOR) site to retrieve all patient record flag assignments for the
"RTN","DGPFAPI",147,0)
 ;patient.  The function will only succeed when the QRY HL7 interface
"RTN","DGPFAPI",148,0)
 ;is enabled, the patient has a national Integrated Control Number
"RTN","DGPFAPI",149,0)
 ;(ICN), the patient's CMOR is not the local site and the HL7 query
"RTN","DGPFAPI",150,0)
 ;receives an ACK from the CMOR site.
"RTN","DGPFAPI",151,0)
 ;
"RTN","DGPFAPI",152,0)
 ;  Input:
"RTN","DGPFAPI",153,0)
 ;    DGDFN - pointer to patient in PATIENT (#2) file
"RTN","DGPFAPI",154,0)
 ;
"RTN","DGPFAPI",155,0)
 ;  Output:
"RTN","DGPFAPI",156,0)
 ;   Function value - 1 on success, 0 on failure
"RTN","DGPFAPI",157,0)
 ;
"RTN","DGPFAPI",158,0)
 N DGRSLT
"RTN","DGPFAPI",159,0)
 N DGQRY
"RTN","DGPFAPI",160,0)
 ;
"RTN","DGPFAPI",161,0)
 S DGRSLT=0
"RTN","DGPFAPI",162,0)
 ;
"RTN","DGPFAPI",163,0)
 S DGQRY=+$$QRYON^DGPFPARM()
"RTN","DGPFAPI",164,0)
 I DGQRY D
"RTN","DGPFAPI",165,0)
 . S DGRSLT=$$SNDQRY^DGPFHLS(DGDFN,DGQRY)
"RTN","DGPFAPI",166,0)
 ;
"RTN","DGPFAPI",167,0)
 Q DGRSLT
"RTN","DGPFAPI",168,0)
 ;
"RTN","DGPFAPI",169,0)
DISPPRF(DGDFN) ;display active patient record flag assignments
"RTN","DGPFAPI",170,0)
 ;This procedure performs a lookup for active patient record flag
"RTN","DGPFAPI",171,0)
 ;assignments for a given patient and formats the assignment data for
"RTN","DGPFAPI",172,0)
 ;roll-and-scroll display.
"RTN","DGPFAPI",173,0)
 ;
"RTN","DGPFAPI",174,0)
 ;  Input:
"RTN","DGPFAPI",175,0)
 ;    DGDFN - pointer to patient in PATIENT (#2) file
"RTN","DGPFAPI",176,0)
 ;
"RTN","DGPFAPI",177,0)
 ;  Output:
"RTN","DGPFAPI",178,0)
 ;    none
"RTN","DGPFAPI",179,0)
 ;
"RTN","DGPFAPI",180,0)
 Q:'$D(XQY0)
"RTN","DGPFAPI",181,0)
 Q:$P(XQY0,U)="DGPF RECORD FLAG ASSIGNMENT"
"RTN","DGPFAPI",182,0)
 ;
"RTN","DGPFAPI",183,0)
 ;protect Kernel IO variables
"RTN","DGPFAPI",184,0)
 N IOBM,IOBOFF,IOBON,IOEDEOP,IOINHI,IOINORM,IORC,IORVOFF,IORVON
"RTN","DGPFAPI",185,0)
 N IOSC,IOSGRO,IOSTBM,IOTM,IOUOFF,IOUON
"RTN","DGPFAPI",186,0)
 ;
"RTN","DGPFAPI",187,0)
 ;protect ListMan variables
"RTN","DGPFAPI",188,0)
 N VALM,VALMAR,VALMBCK,VALMBG,VALMCAP,VALMCC,VALMCNT,VALMCOFF,VALMCON
"RTN","DGPFAPI",189,0)
 N VALMDDF,VALMDN,VALMEVL,VALMHDR,VALMIOXY,VALMKEY,VALMLFT,VALMLST
"RTN","DGPFAPI",190,0)
 N VALMMENU,VALMPGE,VALMSGR,VALMUP,VALMWD
"RTN","DGPFAPI",191,0)
 ;
"RTN","DGPFAPI",192,0)
 ;protect Unwinder variables
"RTN","DGPFAPI",193,0)
 N ORU,ORUDA,ORUER,ORUFD,ORUFG,ORUSB,ORUSQ,ORUSV,ORUT,ORUW,ORUX
"RTN","DGPFAPI",194,0)
 N XQORM
"RTN","DGPFAPI",195,0)
 ;
"RTN","DGPFAPI",196,0)
 ; protect original Listman VALM DATA global
"RTN","DGPFAPI",197,0)
 K ^TMP($J,"DGPFVALM DATA")
"RTN","DGPFAPI",198,0)
 M ^TMP($J,"DGPFVALM DATA")=^TMP("VALM DATA",$J)
"RTN","DGPFAPI",199,0)
 ;
"RTN","DGPFAPI",200,0)
 D DISPPRF^DGPFUT1(DGDFN)
"RTN","DGPFAPI",201,0)
 ;
"RTN","DGPFAPI",202,0)
 ; restore original Listman VALM DATA global
"RTN","DGPFAPI",203,0)
 M ^TMP("VALM DATA",$J)=^TMP($J,"DGPFVALM DATA")
"RTN","DGPFAPI",204,0)
 ;
"RTN","DGPFAPI",205,0)
 K ^TMP($J,"DGPFVALM DATA")
"RTN","DGPFAPI",206,0)
 Q
"RTN","DGPFAPI1")
0^15^B24151608
"RTN","DGPFAPI1",1,0)
DGPFAPI1 ;ALB/RBS - PRF EXTERNAL API'S ; 3/17/05 12:59pm
"RTN","DGPFAPI1",2,0)
 ;;5.3;Registration;**554**;Aug 13, 1993
"RTN","DGPFAPI1",3,0)
 ;
"RTN","DGPFAPI1",4,0)
 Q  ;no direct entry
"RTN","DGPFAPI1",5,0)
 ;
"RTN","DGPFAPI1",6,0)
GETHTIU(DGDFN,DGTITLE,DGHTIU) ;retrieve PRF/TIU PN link Assignment data
"RTN","DGPFAPI1",7,0)
 ;This function is used to return a patient's ASSIGNMENT (active or
"RTN","DGPFAPI1",8,0)
 ;inactive) based on the TIU PN title.  If an ASSIGNMENT is found
"RTN","DGPFAPI1",9,0)
 ;then all ASSIGNMENT HISTORY records will be returned.
"RTN","DGPFAPI1",10,0)
 ;If the request is not from the Owner Site of the PRF Assignment,
"RTN","DGPFAPI1",11,0)
 ;no data is returned.
"RTN","DGPFAPI1",12,0)
 ;The TIU Progress Note Title IEN will be used to search for the
"RTN","DGPFAPI1",13,0)
 ;patient assignment that is linked to the associated record flag.
"RTN","DGPFAPI1",14,0)
 ;
"RTN","DGPFAPI1",15,0)
 ;  Associated DBIA:  #4383 - DGPF ASSIGNMENT LINK TIU PN
"RTN","DGPFAPI1",16,0)
 ;
"RTN","DGPFAPI1",17,0)
 ;  Input:
"RTN","DGPFAPI1",18,0)
 ;     DGDFN - [Required] IEN of PATIENT (#2) file
"RTN","DGPFAPI1",19,0)
 ;   DGTITLE - [Required] IEN of TIU DOCUMENT DEFINITION (#8925.1) file
"RTN","DGPFAPI1",20,0)
 ;    DGHTIU - [Optional] - default name is "DGPFHTIU"
"RTN","DGPFAPI1",21,0)
 ;             (Closed Root (local or global) array of return values)
"RTN","DGPFAPI1",22,0)
 ;
"RTN","DGPFAPI1",23,0)
 ;  Output:
"RTN","DGPFAPI1",24,0)
 ;   Function result - returns 1 on success
"RTN","DGPFAPI1",25,0)
 ;                   - returns two piece string on failure
"RTN","DGPFAPI1",26,0)
 ;                      Format: 0^error text generated from EZBLD^DIALOG
"RTN","DGPFAPI1",27,0)
 ;
"RTN","DGPFAPI1",28,0)
 ;    DGHTIU() - Array, passed by closed root reference.
"RTN","DGPFAPI1",29,0)
 ;               If this function is successful, this array will
"RTN","DGPFAPI1",30,0)
 ;               contain the PRF/TIU PN link Assignment data where
"RTN","DGPFAPI1",31,0)
 ;               the Subscript field value equals:
"RTN","DGPFAPI1",32,0)
 ;                   Internal Value^External Value
"RTN","DGPFAPI1",33,0)
 ;               Note: The "HISTORY" subscript level will contain a
"RTN","DGPFAPI1",34,0)
 ;               unique node for each PRF Assignment History record
"RTN","DGPFAPI1",35,0)
 ;               associated with the Assignment where nn = a unique
"RTN","DGPFAPI1",36,0)
 ;               number for each History record.
"RTN","DGPFAPI1",37,0)
 ;
"RTN","DGPFAPI1",38,0)
 ; Subscript                 Field Name      Field #/File #
"RTN","DGPFAPI1",39,0)
 ; -----------------------   -----------     ------------
"RTN","DGPFAPI1",40,0)
 ; "ASSIGNIEN"               NUMBER          (.001)/(#26.13)
"RTN","DGPFAPI1",41,0)
 ; "FLAG"                    FLAG NAME       (.02)/(#26.13)
"RTN","DGPFAPI1",42,0)
 ; "HISTORY"                 # OF HISTORY RECORDS    N/A
"RTN","DGPFAPI1",43,0)
 ; "HISTORY",nn,"ACTION"     ACTION          (.03)/(#26.14)
"RTN","DGPFAPI1",44,0)
 ; "HISTORY",nn,"DATETIME")  DATE/TIME       (.02)/(#26.14)
"RTN","DGPFAPI1",45,0)
 ; "HISTORY",nn,"HISTIEN")   NUMBER          (.001)/(#26.14)
"RTN","DGPFAPI1",46,0)
 ; "HISTORY",nn,"TIUIEN")    TIU PN LINK     (.06)/(#26.14)
"RTN","DGPFAPI1",47,0)
 ;
"RTN","DGPFAPI1",48,0)
 N DGAIEN    ;ien of record flag assignment in (#26.13) file
"RTN","DGPFAPI1",49,0)
 N DGDIALOG  ;failure reason generated from EZBLD^DIALOG
"RTN","DGPFAPI1",50,0)
 N DGFIEN    ;variable pointer to #26.11 or #26.15 ie. "1;DGPF(26.15,"
"RTN","DGPFAPI1",51,0)
 N DGFLAG    ;flag name
"RTN","DGPFAPI1",52,0)
 N DGHIEN    ;ien of history record in (#26.14) file
"RTN","DGPFAPI1",53,0)
 N DGHIENS   ;array of all assignment history IEN's
"RTN","DGPFAPI1",54,0)
 N DGPFA     ;flag assignment array
"RTN","DGPFAPI1",55,0)
 N DGPFAH    ;flag assignment history array
"RTN","DGPFAPI1",56,0)
 N DGRSLT    ;function result
"RTN","DGPFAPI1",57,0)
 N DGTHCNT   ;"nn"=number of history records returned
"RTN","DGPFAPI1",58,0)
 ;
"RTN","DGPFAPI1",59,0)
 S DGDFN=+$G(DGDFN)
"RTN","DGPFAPI1",60,0)
 S DGTITLE=+$G(DGTITLE)
"RTN","DGPFAPI1",61,0)
 ;
"RTN","DGPFAPI1",62,0)
 ;setup return array
"RTN","DGPFAPI1",63,0)
 S DGHTIU=$G(DGHTIU)
"RTN","DGPFAPI1",64,0)
 I DGHTIU']"" S DGHTIU="DGPFHTIU"       ;setup default array name
"RTN","DGPFAPI1",65,0)
 K @DGHTIU                              ;Kill/initialize work array
"RTN","DGPFAPI1",66,0)
 ;
"RTN","DGPFAPI1",67,0)
 S DGRSLT=0
"RTN","DGPFAPI1",68,0)
 ;
"RTN","DGPFAPI1",69,0)
 ;get IEN variable pointer of National or Local flag
"RTN","DGPFAPI1",70,0)
 S DGFIEN=$P($$FNDTITLE(DGTITLE),U,1)  ;strip off flag name
"RTN","DGPFAPI1",71,0)
 ;
"RTN","DGPFAPI1",72,0)
 I '$G(DGFIEN) S DGDIALOG=$$EZBLD^DIALOG(261107)  ;no flag link
"RTN","DGPFAPI1",73,0)
 ;
"RTN","DGPFAPI1",74,0)
 ;if flag is assoc with TIU Progres Note Title (quit on failure)
"RTN","DGPFAPI1",75,0)
 I $G(DGFIEN) D
"RTN","DGPFAPI1",76,0)
 . ;
"RTN","DGPFAPI1",77,0)
 . ;get IEN of assignment linked to flag linked to TIU PN Title
"RTN","DGPFAPI1",78,0)
 . S DGAIEN=$$FNDASGN^DGPFAA(DGDFN,DGFIEN)
"RTN","DGPFAPI1",79,0)
 . I '$G(DGAIEN) S DGDIALOG=$$EZBLD^DIALOG(261108) Q
"RTN","DGPFAPI1",80,0)
 . ;
"RTN","DGPFAPI1",81,0)
 . ;get all assignment data for patient
"RTN","DGPFAPI1",82,0)
 . I '$$GETASGN^DGPFAA(DGAIEN,.DGPFA) S DGDIALOG=$$EZBLD^DIALOG(261102) Q
"RTN","DGPFAPI1",83,0)
 . ;
"RTN","DGPFAPI1",84,0)
 . ;check for owner site of assignment
"RTN","DGPFAPI1",85,0)
 . I $P($$SITE^VASITE,U)'=$P(DGPFA("OWNER"),U) S DGDIALOG=$$EZBLD^DIALOG(261103) Q
"RTN","DGPFAPI1",86,0)
 . ;
"RTN","DGPFAPI1",87,0)
 . ;get all history ien's
"RTN","DGPFAPI1",88,0)
 . I '$$GETALL^DGPFAAH(DGAIEN,.DGHIENS) S DGDIALOG=$$EZBLD^DIALOG(261101) Q
"RTN","DGPFAPI1",89,0)
 . ;
"RTN","DGPFAPI1",90,0)
 . S DGHIEN="",DGTHCNT=0
"RTN","DGPFAPI1",91,0)
 . ;
"RTN","DGPFAPI1",92,0)
 . ;loop all assignment history ien's
"RTN","DGPFAPI1",93,0)
 . F  S DGHIEN=$O(DGHIENS(DGHIEN)) Q:DGHIEN=""  D  Q:$D(DGDIALOG)
"RTN","DGPFAPI1",94,0)
 . . K DGPFAH
"RTN","DGPFAPI1",95,0)
 . . ;get assignment history record
"RTN","DGPFAPI1",96,0)
 . . I '$$GETHIST^DGPFAAH(DGHIEN,.DGPFAH) S DGDIALOG=$$EZBLD^DIALOG(261101),DGTHCNT=0 Q
"RTN","DGPFAPI1",97,0)
 . . ;
"RTN","DGPFAPI1",98,0)
 . . S DGTHCNT=DGTHCNT+1
"RTN","DGPFAPI1",99,0)
 . . S @DGHTIU@("HISTORY",DGTHCNT,"ACTION")=$G(DGPFAH("ACTION"))
"RTN","DGPFAPI1",100,0)
 . . S @DGHTIU@("HISTORY",DGTHCNT,"DATETIME")=$G(DGPFAH("ASSIGNDT"))
"RTN","DGPFAPI1",101,0)
 . . S @DGHTIU@("HISTORY",DGTHCNT,"HISTIEN")=DGHIEN_U_DGHIEN
"RTN","DGPFAPI1",102,0)
 . . S @DGHTIU@("HISTORY",DGTHCNT,"TIUIEN")=$G(DGPFAH("TIULINK"))
"RTN","DGPFAPI1",103,0)
 . ;
"RTN","DGPFAPI1",104,0)
 . I DGTHCNT D
"RTN","DGPFAPI1",105,0)
 . . S @DGHTIU@("ASSIGNIEN")=DGAIEN_U_$P($G(DGPFA("DFN")),U,2)
"RTN","DGPFAPI1",106,0)
 . . S @DGHTIU@("FLAG")=$G(DGPFA("FLAG"))
"RTN","DGPFAPI1",107,0)
 . . S @DGHTIU@("HISTORY")=DGTHCNT
"RTN","DGPFAPI1",108,0)
 . ;
"RTN","DGPFAPI1",109,0)
 . S DGRSLT=1  ;success
"RTN","DGPFAPI1",110,0)
 ;
"RTN","DGPFAPI1",111,0)
 ;if failure delete return array
"RTN","DGPFAPI1",112,0)
 I $D(DGDIALOG) K @DGHTIU
"RTN","DGPFAPI1",113,0)
 ;
"RTN","DGPFAPI1",114,0)
 Q $S(DGRSLT:1,1:DGRSLT_"^"_$G(DGDIALOG))
"RTN","DGPFAPI1",115,0)
 ;
"RTN","DGPFAPI1",116,0)
FNDTITLE(DGTITLE) ;retrieve IEN of associated PRF (National or Local) Flag
"RTN","DGPFAPI1",117,0)
 ;This function returns the IEN and Name of the National or Local flag
"RTN","DGPFAPI1",118,0)
 ;that is associated with the TIU Progress Note Title.
"RTN","DGPFAPI1",119,0)
 ;
"RTN","DGPFAPI1",120,0)
 ;  Input:
"RTN","DGPFAPI1",121,0)
 ;   DGTITLE - [Required] IEN of TIU DOCUMENT DEFINITION (#8925.1) file
"RTN","DGPFAPI1",122,0)
 ;
"RTN","DGPFAPI1",123,0)
 ;  Output:
"RTN","DGPFAPI1",124,0)
 ;   Function Value - returns two piece ^ string on failure or success
"RTN","DGPFAPI1",125,0)
 ;                  On Failure - 0^error text generated from EZBLD^DIALOG
"RTN","DGPFAPI1",126,0)
 ;                  On Success - IEN^External Flag Name
"RTN","DGPFAPI1",127,0)
 ;                    [example:  1;DGPF(26.15,^BEHAVIORAL]
"RTN","DGPFAPI1",128,0)
 ;                    [Note:    "1;DGPF(26.15," is a variable pointer]
"RTN","DGPFAPI1",129,0)
 ;
"RTN","DGPFAPI1",130,0)
 S DGTITLE=+$G(DGTITLE)
"RTN","DGPFAPI1",131,0)
 ;
"RTN","DGPFAPI1",132,0)
 N DGDIALOG ;failure reason
"RTN","DGPFAPI1",133,0)
 N DGFLAG   ;flag name
"RTN","DGPFAPI1",134,0)
 N DGIEN    ;ien of flag
"RTN","DGPFAPI1",135,0)
 ;
"RTN","DGPFAPI1",136,0)
 ; search for Local Flag
"RTN","DGPFAPI1",137,0)
 I $D(^DGPF(26.11,"ATIU",DGTITLE)) D
"RTN","DGPFAPI1",138,0)
 . S DGFLAG=$O(^DGPF(26.11,"ATIU",DGTITLE,""))
"RTN","DGPFAPI1",139,0)
 . I DGFLAG]"" D
"RTN","DGPFAPI1",140,0)
 . . S DGIEN=$O(^DGPF(26.11,"ATIU",DGTITLE,DGFLAG,0))
"RTN","DGPFAPI1",141,0)
 . . I '$D(^DGPF(26.11,DGIEN,0)) K DGIEN Q
"RTN","DGPFAPI1",142,0)
 . . S:$G(DGIEN) DGIEN=DGIEN_";DGPF(26.11,^"_DGFLAG  ;add flag name
"RTN","DGPFAPI1",143,0)
 ;
"RTN","DGPFAPI1",144,0)
 ; search for National Flag - (if Title not found in Local Flag file)
"RTN","DGPFAPI1",145,0)
 I '$G(DGIEN),$D(^DGPF(26.15,"ATIU",DGTITLE)) D
"RTN","DGPFAPI1",146,0)
 . S DGFLAG=$O(^DGPF(26.15,"ATIU",DGTITLE,""))
"RTN","DGPFAPI1",147,0)
 . I DGFLAG]"" D
"RTN","DGPFAPI1",148,0)
 . . S DGIEN=$O(^DGPF(26.15,"ATIU",DGTITLE,DGFLAG,0))
"RTN","DGPFAPI1",149,0)
 . . I '$D(^DGPF(26.15,DGIEN,0)) K DGIEN Q
"RTN","DGPFAPI1",150,0)
 . . S:$G(DGIEN) DGIEN=DGIEN_";DGPF(26.15,^"_DGFLAG  ;add flag name
"RTN","DGPFAPI1",151,0)
 ;
"RTN","DGPFAPI1",152,0)
 I '$G(DGIEN) S DGDIALOG=$$EZBLD^DIALOG(261107)
"RTN","DGPFAPI1",153,0)
 ;
"RTN","DGPFAPI1",154,0)
 Q $S($G(DGIEN)>0:DGIEN,1:"0^"_$G(DGDIALOG))
"RTN","DGPFAPI1",155,0)
 ;
"RTN","DGPFAPI1",156,0)
GETLINK(DGTIUIEN) ;get linked assignment history ien
"RTN","DGPFAPI1",157,0)
 ;This function returns the IEN of a patient's record flag assignment
"RTN","DGPFAPI1",158,0)
 ;history record that is linked to a specific TIU Progress Note.
"RTN","DGPFAPI1",159,0)
 ;
"RTN","DGPFAPI1",160,0)
 ; Associated DBIA:  #4383 - DGPF ASSIGNMENT LINK TIU PN
"RTN","DGPFAPI1",161,0)
 ;
"RTN","DGPFAPI1",162,0)
 ;  Input:
"RTN","DGPFAPI1",163,0)
 ;   DGTIUIEN - [Required] IEN of TIU DOCUMENT (#8925) file
"RTN","DGPFAPI1",164,0)
 ;
"RTN","DGPFAPI1",165,0)
 ;  Output:
"RTN","DGPFAPI1",166,0)
 ;   Function result - returns IEN of linked history record on success
"RTN","DGPFAPI1",167,0)
 ;                   - "0" if no link found
"RTN","DGPFAPI1",168,0)
 ;
"RTN","DGPFAPI1",169,0)
 Q +$O(^DGPF(26.14,"ATIUPN",+$G(DGTIUIEN),0))
"RTN","DGPFAPI2")
0^16^B18390437
"RTN","DGPFAPI2",1,0)
DGPFAPI2 ;ALB/RBS - PRF EXTERNAL API'S ; 3/16/05 9:47am
"RTN","DGPFAPI2",2,0)
 ;;5.3;Registration;**554**;Aug 13, 1993
"RTN","DGPFAPI2",3,0)
 ;
"RTN","DGPFAPI2",4,0)
 Q  ;no direct entry
"RTN","DGPFAPI2",5,0)
 ;
"RTN","DGPFAPI2",6,0)
STOTIU(DGDFN,DGAIEN,DGHIEN,DGTIUIEN) ;store TIU Progress Note link
"RTN","DGPFAPI2",7,0)
 ;This function is used to update the TIU PN LINK (#.06) field of
"RTN","DGPFAPI2",8,0)
 ;the PRF ASSIGNMENT HISTORY (#26.14) file with the IEN of the
"RTN","DGPFAPI2",9,0)
 ;TIU Progress Note in the TIU DOCUMENT (#8925) file.
"RTN","DGPFAPI2",10,0)
 ;
"RTN","DGPFAPI2",11,0)
 ; Associated DBIA:  #4384 - DGPF FILE/DELETE TIU PN LINK
"RTN","DGPFAPI2",12,0)
 ;  Supported DBIA:  #4380 - $$CHKDOC^TIUPRF - TIU API's for PRF
"RTN","DGPFAPI2",13,0)
 ;
"RTN","DGPFAPI2",14,0)
 ;  Input:
"RTN","DGPFAPI2",15,0)
 ;     DGDFN - [Required] IEN of PATIENT (#2) file
"RTN","DGPFAPI2",16,0)
 ;    DGAIEN - [Required] IEN of PRF ASSIGNMENT (#26.13) file
"RTN","DGPFAPI2",17,0)
 ;    DGHIEN - [Required] IEN of PRF ASSIGNMENT HISTORY (#26.14) file
"RTN","DGPFAPI2",18,0)
 ;  DGTIUIEN - [Required] IEN of TIU DOCUMENT (#8925) file
"RTN","DGPFAPI2",19,0)
 ;
"RTN","DGPFAPI2",20,0)
 ;  Output:
"RTN","DGPFAPI2",21,0)
 ;   Function result - returns 1 on success
"RTN","DGPFAPI2",22,0)
 ;                   - returns two piece string on failure
"RTN","DGPFAPI2",23,0)
 ;                      Format: 0^error text generated from EZBLD^DIALOG
"RTN","DGPFAPI2",24,0)
 ;
"RTN","DGPFAPI2",25,0)
 N DGDIALOG  ;failure reason generated from EZBLD^DIALOG
"RTN","DGPFAPI2",26,0)
 N DGPFA     ;flag assignment array
"RTN","DGPFAPI2",27,0)
 N DGPFAH    ;flag assignment history array
"RTN","DGPFAPI2",28,0)
 N DGRSLT    ;function result
"RTN","DGPFAPI2",29,0)
 ;
"RTN","DGPFAPI2",30,0)
 S DGDFN=+$G(DGDFN)
"RTN","DGPFAPI2",31,0)
 S DGAIEN=+$G(DGAIEN)
"RTN","DGPFAPI2",32,0)
 S DGHIEN=+$G(DGHIEN)
"RTN","DGPFAPI2",33,0)
 S DGTIUIEN=+$G(DGTIUIEN)
"RTN","DGPFAPI2",34,0)
 ;
"RTN","DGPFAPI2",35,0)
 S DGRSLT=0
"RTN","DGPFAPI2",36,0)
 ;
"RTN","DGPFAPI2",37,0)
 D  ;drops out on error condition
"RTN","DGPFAPI2",38,0)
 . ;
"RTN","DGPFAPI2",39,0)
 . I '$$CHKDOC^TIUPRF(DGTIUIEN) S DGDIALOG=$$EZBLD^DIALOG(261104) Q
"RTN","DGPFAPI2",40,0)
 . ;
"RTN","DGPFAPI2",41,0)
 . ;check if progress note already setup (x-ref "ATIUPN")
"RTN","DGPFAPI2",42,0)
 . I $D(^DGPF(26.14,"ATIUPN",DGTIUIEN)) S DGDIALOG=$$EZBLD^DIALOG(261109) Q
"RTN","DGPFAPI2",43,0)
 . ;
"RTN","DGPFAPI2",44,0)
 . ;get history record that is being updated
"RTN","DGPFAPI2",45,0)
 . I '$$GETHIST^DGPFAAH(DGHIEN,.DGPFAH) S DGDIALOG=$$EZBLD^DIALOG(261101) Q
"RTN","DGPFAPI2",46,0)
 . ;
"RTN","DGPFAPI2",47,0)
 . ;check if correct history record of the patient assignment
"RTN","DGPFAPI2",48,0)
 . I $P($G(DGPFAH("ASSIGN")),U)'=DGAIEN S DGDIALOG=$$EZBLD^DIALOG(261101) Q
"RTN","DGPFAPI2",49,0)
 . ;
"RTN","DGPFAPI2",50,0)
 . ;check for existing entry
"RTN","DGPFAPI2",51,0)
 . I +$P($G(DGPFAH("TIULINK")),U) S DGDIALOG=$$EZBLD^DIALOG(261109) Q
"RTN","DGPFAPI2",52,0)
 . ;
"RTN","DGPFAPI2",53,0)
 . ;get assignment record
"RTN","DGPFAPI2",54,0)
 . I '$$GETASGN^DGPFAA(DGAIEN,.DGPFA) S DGDIALOG=$$EZBLD^DIALOG(261102) Q
"RTN","DGPFAPI2",55,0)
 . ;
"RTN","DGPFAPI2",56,0)
 . ;check if current site is Owner Site
"RTN","DGPFAPI2",57,0)
 . I $P($$SITE^VASITE,U)'=$P($G(DGPFA("OWNER")),U) S DGDIALOG=$$EZBLD^DIALOG(261103) Q
"RTN","DGPFAPI2",58,0)
 . ;
"RTN","DGPFAPI2",59,0)
 . ;file the TIU PN LINK
"RTN","DGPFAPI2",60,0)
 . S DGRSLT=$$STOHIST(DGHIEN,DGTIUIEN)
"RTN","DGPFAPI2",61,0)
 . I 'DGRSLT S DGDIALOG=$P($G(DGRSLT),"^",2) Q
"RTN","DGPFAPI2",62,0)
 . ;
"RTN","DGPFAPI2",63,0)
 . S DGRSLT=1
"RTN","DGPFAPI2",64,0)
 ;
"RTN","DGPFAPI2",65,0)
 Q $S(DGRSLT:1,1:DGRSLT_"^"_$G(DGDIALOG))
"RTN","DGPFAPI2",66,0)
 ;
"RTN","DGPFAPI2",67,0)
STOHIST(DGHIEN,DGTIUIEN) ;update TIU Progress Note link
"RTN","DGPFAPI2",68,0)
 ;This function is used to update the TIU PN LINK (#.06) field of
"RTN","DGPFAPI2",69,0)
 ;the PRF ASSIGNMENT HISTORY (#26.14) file.
"RTN","DGPFAPI2",70,0)
 ;
"RTN","DGPFAPI2",71,0)
 ;  Input:
"RTN","DGPFAPI2",72,0)
 ;    DGHIEN - [Required] IEN of PRF ASSIGNMENT HISTORY (#26.14) file
"RTN","DGPFAPI2",73,0)
 ;  DGTIUIEN - [Required] IEN of TIU DOCUMENT (#8925) file
"RTN","DGPFAPI2",74,0)
 ;
"RTN","DGPFAPI2",75,0)
 ;  Output:
"RTN","DGPFAPI2",76,0)
 ;   Function result - returns 1 on success
"RTN","DGPFAPI2",77,0)
 ;                   - returns two piece string on failure
"RTN","DGPFAPI2",78,0)
 ;                      Format: 0^error text generated from EZBLD^DIALOG
"RTN","DGPFAPI2",79,0)
 ;
"RTN","DGPFAPI2",80,0)
 N DGDIALOG ;failure reason generated from EZBLD^DIALOG
"RTN","DGPFAPI2",81,0)
 N DGERR    ;FILE^DIE error array (undefined on filing success)
"RTN","DGPFAPI2",82,0)
 N DGFDA    ;FILE^DIE formatted array containing field ien and data
"RTN","DGPFAPI2",83,0)
 N DGFIL    ;file number to file data
"RTN","DGPFAPI2",84,0)
 N DGRSLT   ;function result
"RTN","DGPFAPI2",85,0)
 ;
"RTN","DGPFAPI2",86,0)
 S DGHIEN=+$G(DGHIEN)
"RTN","DGPFAPI2",87,0)
 S DGTIUIEN=+$G(DGTIUIEN)
"RTN","DGPFAPI2",88,0)
 ;
"RTN","DGPFAPI2",89,0)
 S DGRSLT=0
"RTN","DGPFAPI2",90,0)
 S DGFIL=26.14
"RTN","DGPFAPI2",91,0)
 ;
"RTN","DGPFAPI2",92,0)
 D  ;drops out on error condition
"RTN","DGPFAPI2",93,0)
 . S DGFDA(DGFIL,DGHIEN_",",.06)=DGTIUIEN
"RTN","DGPFAPI2",94,0)
 . D FILE^DIE("","DGFDA","DGERR")
"RTN","DGPFAPI2",95,0)
 . I $D(DGERR) S DGDIALOG=$$EZBLD^DIALOG(261105) Q
"RTN","DGPFAPI2",96,0)
 . ;
"RTN","DGPFAPI2",97,0)
 . S DGRSLT=1
"RTN","DGPFAPI2",98,0)
 ;
"RTN","DGPFAPI2",99,0)
 Q $S(DGRSLT:1,1:DGRSLT_"^"_$G(DGDIALOG))
"RTN","DGPFAPI2",100,0)
 ;
"RTN","DGPFAPI2",101,0)
DELTIU(DGTIUIEN) ;delete TIU Progress Note link
"RTN","DGPFAPI2",102,0)
 ;This function is used to delete the TIU PN LINK (#.06) field of
"RTN","DGPFAPI2",103,0)
 ;the PRF ASSIGNMENT HISTORY (#26.14) file.
"RTN","DGPFAPI2",104,0)
 ;
"RTN","DGPFAPI2",105,0)
 ; Associated DBIA:  #4384 - DGPF FILE/DELETE TIU PN LINK
"RTN","DGPFAPI2",106,0)
 ;  Supported DBIA:  #4380 - $$CHKDOC^TIUPRF - TIU API's for PRF
"RTN","DGPFAPI2",107,0)
 ;
"RTN","DGPFAPI2",108,0)
 ;  Input:
"RTN","DGPFAPI2",109,0)
 ;  DGTIUIEN - [Required] IEN of record in TIU DOCUMENT (#8925) file
"RTN","DGPFAPI2",110,0)
 ;
"RTN","DGPFAPI2",111,0)
 ;  Output:
"RTN","DGPFAPI2",112,0)
 ;   Function result - returns 1 on success
"RTN","DGPFAPI2",113,0)
 ;                   - returns two piece string on failure
"RTN","DGPFAPI2",114,0)
 ;                      Format: 0^error text generated from EZBLD^DIALOG
"RTN","DGPFAPI2",115,0)
 ;
"RTN","DGPFAPI2",116,0)
 N DGDIALOG ;failure reason generated from EZBLD^DIALOG
"RTN","DGPFAPI2",117,0)
 N DGERR    ;FILE^DIE error array (undefined on filing success)
"RTN","DGPFAPI2",118,0)
 N DGFDA    ;FILE^DIE formatted array containing field ien and data
"RTN","DGPFAPI2",119,0)
 N DGFIL    ;file number to file data
"RTN","DGPFAPI2",120,0)
 N DGHIEN   ;IEN of history record
"RTN","DGPFAPI2",121,0)
 N DGRSLT   ;function result
"RTN","DGPFAPI2",122,0)
 ;
"RTN","DGPFAPI2",123,0)
 S DGTIUIEN=+$G(DGTIUIEN)
"RTN","DGPFAPI2",124,0)
 S (DGRSLT,DGHIEN)=0
"RTN","DGPFAPI2",125,0)
 S DGFIL=26.14
"RTN","DGPFAPI2",126,0)
 ;
"RTN","DGPFAPI2",127,0)
 D  ;drops out on error condition
"RTN","DGPFAPI2",128,0)
 . ;
"RTN","DGPFAPI2",129,0)
 . S DGHIEN=+$O(^DGPF(DGFIL,"ATIUPN",DGTIUIEN,DGHIEN))
"RTN","DGPFAPI2",130,0)
 . I '$D(^DGPF(DGFIL,DGHIEN,0)) S DGDIALOG=$$EZBLD^DIALOG(261101) Q
"RTN","DGPFAPI2",131,0)
 . S DGFDA(DGFIL,DGHIEN_",",.06)="@"
"RTN","DGPFAPI2",132,0)
 . D FILE^DIE("","DGFDA","DGERR")
"RTN","DGPFAPI2",133,0)
 . I $D(DGERR) S DGDIALOG=$$EZBLD^DIALOG(261106) Q
"RTN","DGPFAPI2",134,0)
 . ;
"RTN","DGPFAPI2",135,0)
 . S DGRSLT=1
"RTN","DGPFAPI2",136,0)
 ;
"RTN","DGPFAPI2",137,0)
 Q $S(DGRSLT:1,1:DGRSLT_"^"_$G(DGDIALOG))
"RTN","DGPFDD")
0^30^B17115421
"RTN","DGPFDD",1,0)
DGPFDD ;ALB/RPM - PRF DATA DICTIONARY UTILITIES ; 2/28/05 12:02pm
"RTN","DGPFDD",2,0)
 ;;5.3;Registration;**425,554**;Aug 13, 1993
"RTN","DGPFDD",3,0)
 ;
"RTN","DGPFDD",4,0)
 Q  ;No direct entry
"RTN","DGPFDD",5,0)
 ;
"RTN","DGPFDD",6,0)
INACT(DGIEN,DGSTAT,DGFILE,DGUSER) ;Inactivate flag trigger
"RTN","DGPFDD",7,0)
 ; This procedure is used as a trigger that is fired when the
"RTN","DGPFDD",8,0)
 ; STATUS (#.02) field of a record in either the PRF LOCAL FLAG (#26.11)
"RTN","DGPFDD",9,0)
 ; file or PRF NATIONAL FLAG (#26.15) file is changed from Active to
"RTN","DGPFDD",10,0)
 ; Inactive.  The trigger will inactivate all Patient Record
"RTN","DGPFDD",11,0)
 ; Flag assignments associated with the inactivated Flag.
"RTN","DGPFDD",12,0)
 ;
"RTN","DGPFDD",13,0)
 ; Input:
"RTN","DGPFDD",14,0)
 ;   DGIEN  - IEN of entry in PRF LOCAL FLAG file or PRF NATIONAL 
"RTN","DGPFDD",15,0)
 ;            FLAG file
"RTN","DGPFDD",16,0)
 ;   DGSTAT - Flag Status
"RTN","DGPFDD",17,0)
 ;   DGFILE - PRF LOCAL FLAG file number (26.11) or PRF NATIONAL
"RTN","DGPFDD",18,0)
 ;            FLAG file number (26.15)
"RTN","DGPFDD",19,0)
 ;   DGUSER - IEN of user in NEW PERSON file
"RTN","DGPFDD",20,0)
 ;
"RTN","DGPFDD",21,0)
 ; Output:  none
"RTN","DGPFDD",22,0)
 ;
"RTN","DGPFDD",23,0)
 N DGAIEN  ;assignment record IEN
"RTN","DGPFDD",24,0)
 N DGSUB   ;variable ptr index subscript
"RTN","DGPFDD",25,0)
 ;
"RTN","DGPFDD",26,0)
 Q:('$G(DGIEN))
"RTN","DGPFDD",27,0)
 Q:($G(DGSTAT)'=0)
"RTN","DGPFDD",28,0)
 Q:(($G(DGFILE)'=26.11)&($G(DGFILE)'=26.15))
"RTN","DGPFDD",29,0)
 Q:('$G(DGUSER))
"RTN","DGPFDD",30,0)
 ;
"RTN","DGPFDD",31,0)
 S DGSUB=DGIEN_";DGPF("_DGFILE_","
"RTN","DGPFDD",32,0)
 S DGAIEN=0
"RTN","DGPFDD",33,0)
 F  S DGAIEN=$O(^DGPF(26.13,"ASTAT",1,DGSUB,DGAIEN)) Q:'DGAIEN  D
"RTN","DGPFDD",34,0)
 . N DGPFA     ;assignment data array
"RTN","DGPFDD",35,0)
 . N DGPFAH    ;assignment history data array
"RTN","DGPFDD",36,0)
 . I $$GETASGN^DGPFAA(DGAIEN,.DGPFA) D
"RTN","DGPFDD",37,0)
 . . Q:($P($G(DGPFA("STATUS")),U,1)=0)
"RTN","DGPFDD",38,0)
 . . S DGPFA("STATUS")=0
"RTN","DGPFDD",39,0)
 . . S DGPFA("REVIEWDT")=""
"RTN","DGPFDD",40,0)
 . . S DGPFAH("ACTION")=3
"RTN","DGPFDD",41,0)
 . . S DGPFAH("ASSIGNDT")=$$NOW^XLFDT()
"RTN","DGPFDD",42,0)
 . . S DGPFAH("ENTERBY")=DGUSER
"RTN","DGPFDD",43,0)
 . . S DGPFAH("APPRVBY")=DGUSER
"RTN","DGPFDD",44,0)
 . . S DGPFAH("COMMENT",1,0)="Assignment Inactivated automatically due to Flag Inactivation."
"RTN","DGPFDD",45,0)
 . . I $$STOALL^DGPFAA(.DGPFA,.DGPFAH)
"RTN","DGPFDD",46,0)
 Q
"RTN","DGPFDD",47,0)
 ;
"RTN","DGPFDD",48,0)
PIHELP ;Executable help for PRINCIPAL INVESTIGATOR(S) (#.01) sub-field of
"RTN","DGPFDD",49,0)
 ;PRINCIPLE INVESTIGATOR(S) (#2) multiple field of PRF LOCAL FLAG
"RTN","DGPFDD",50,0)
 ;(#26.11) file.
"RTN","DGPFDD",51,0)
 ;
"RTN","DGPFDD",52,0)
 ;This sub-routine displays individuals selected as a principal
"RTN","DGPFDD",53,0)
 ;investigator for a research type patient record flag.
"RTN","DGPFDD",54,0)
 ;
"RTN","DGPFDD",55,0)
 ;  Input:
"RTN","DGPFDD",56,0)
 ;    DGLKUP - (required) array of principal investigators subscripted
"RTN","DGPFDD",57,0)
 ;             by the pointer to the NEW PERSON (#200) file and the
"RTN","DGPFDD",58,0)
 ;             pointer to the PRF LOCAL FLAG (#26.11) file.
"RTN","DGPFDD",59,0)
 ;             Example:  DGLKUP(11744,6)=""
"RTN","DGPFDD",60,0)
 ;
"RTN","DGPFDD",61,0)
 ;  Output:
"RTN","DGPFDD",62,0)
 ;    none
"RTN","DGPFDD",63,0)
 ;
"RTN","DGPFDD",64,0)
 Q:'$D(DGLKUP)
"RTN","DGPFDD",65,0)
 ;
"RTN","DGPFDD",66,0)
 N DGCNT
"RTN","DGPFDD",67,0)
 N DGIEN
"RTN","DGPFDD",68,0)
 N DGNAMES
"RTN","DGPFDD",69,0)
 ;
"RTN","DGPFDD",70,0)
 S DGIEN=0,DGCNT=0
"RTN","DGPFDD",71,0)
 F  S DGIEN=$O(DGLKUP(DGIEN)) Q:'DGIEN  D
"RTN","DGPFDD",72,0)
 . S DGCNT=DGCNT+1
"RTN","DGPFDD",73,0)
 . S DGNAMES(DGCNT)=$$EXTERNAL^DILFD(26.112,.01,"F",DGIEN)
"RTN","DGPFDD",74,0)
 S DGNAMES(DGCNT+1)=""  ;add a blank line
"RTN","DGPFDD",75,0)
 D EN^DDIOL(.DGNAMES)
"RTN","DGPFDD",76,0)
 Q
"RTN","DGPFDD",77,0)
 ;
"RTN","DGPFDD",78,0)
COS(DGAPRV) ;transform POSTMASTER to CHIEF OF STAFF
"RTN","DGPFDD",79,0)
 ;This output transform converts the internal field value of .5
"RTN","DGPFDD",80,0)
 ;(POSTMASTER) to CHIEF OF STAFF.
"RTN","DGPFDD",81,0)
 ;
"RTN","DGPFDD",82,0)
 ;  Supported DBIA #10060 - This supported DBIA permits FileMan reads
"RTN","DGPFDD",83,0)
 ;                          on all fields of the NEW PERSON (#200) file.
"RTN","DGPFDD",84,0)
 ;
"RTN","DGPFDD",85,0)
 ;  Input:
"RTN","DGPFDD",86,0)
 ;    DGAPRV - internal value of PRF ASSIGNMENT HISTORY (#26.14) file
"RTN","DGPFDD",87,0)
 ;             APPROVED BY (#.05) field
"RTN","DGPFDD",88,0)
 ;
"RTN","DGPFDD",89,0)
 ;  Output:
"RTN","DGPFDD",90,0)
 ;   Function Value - Returns "CHIEF OF STAFF" when input value is .5 or
"RTN","DGPFDD",91,0)
 ;                    external value from NAME (.01) field of the NEW
"RTN","DGPFDD",92,0)
 ;                    PERSON (#200) file on success.
"RTN","DGPFDD",93,0)
 ;                    Returns null ("") on failure.
"RTN","DGPFDD",94,0)
 ;
"RTN","DGPFDD",95,0)
 N DGERR
"RTN","DGPFDD",96,0)
 ;
"RTN","DGPFDD",97,0)
 Q:(+$G(DGAPRV)'>0) ""
"RTN","DGPFDD",98,0)
 ;
"RTN","DGPFDD",99,0)
 Q $S(DGAPRV=.5:"CHIEF OF STAFF",1:$$GET1^DIQ(200,DGAPRV_",",.01,"","","DGERR"))
"RTN","DGPFDD",100,0)
 ;
"RTN","DGPFDD",101,0)
TIULIST(DGTIUIEN) ;DD lookup screen for (#26.11) file (#.07) field
"RTN","DGPFDD",102,0)
 ;Get list of TIU Progress Note Titles for Category II (Local) Flags.
"RTN","DGPFDD",103,0)
 ;This function will assist the DIC("S") lookup screen of allowable
"RTN","DGPFDD",104,0)
 ;TIU Progress Note Titles the user can see and select from.
"RTN","DGPFDD",105,0)
 ;
"RTN","DGPFDD",106,0)
 ; Supported DBIA:  #4380 - $$CHKDOC^TIUPRF - TIU API's for PRF
"RTN","DGPFDD",107,0)
 ;                  #4383 - $$FNDTITLE^DGPFAPI1
"RTN","DGPFDD",108,0)
 ;
"RTN","DGPFDD",109,0)
 ;  Input:
"RTN","DGPFDD",110,0)
 ;    DGTIUIEN - [Required] IEN of (#8925.1) entry being screened
"RTN","DGPFDD",111,0)
 ;
"RTN","DGPFDD",112,0)
 ;  Output:
"RTN","DGPFDD",113,0)
 ;    Function Value - Returns 1 on success, 0 on failure
"RTN","DGPFDD",114,0)
 ;
"RTN","DGPFDD",115,0)
 N DGPNLIST  ;temporary file name to hold list of titles
"RTN","DGPFDD",116,0)
 N DGRSLT    ;function return value
"RTN","DGPFDD",117,0)
 N DGX       ;loop var
"RTN","DGPFDD",118,0)
 N DGY       ;loop var
"RTN","DGPFDD",119,0)
 ;
"RTN","DGPFDD",120,0)
 Q:DGTIUIEN']"" 0
"RTN","DGPFDD",121,0)
 ;
"RTN","DGPFDD",122,0)
 S DGRSLT=0
"RTN","DGPFDD",123,0)
 ;
"RTN","DGPFDD",124,0)
 ; get list from TIU Progress Note Title API call IA #4380
"RTN","DGPFDD",125,0)
 S DGPNLIST=$NA(^TMP("DGPNLIST",$J))
"RTN","DGPFDD",126,0)
 K @DGPNLIST
"RTN","DGPFDD",127,0)
 ;
"RTN","DGPFDD",128,0)
 ; only get Category II (Local) TIU PN Titles (pass a 2)
"RTN","DGPFDD",129,0)
 I $$GETLIST(2,DGPNLIST) D
"RTN","DGPFDD",130,0)
 . S (DGX,DGY)="" F  S DGX=$O(@DGPNLIST@("CAT II",DGX)) Q:DGX=""  D
"RTN","DGPFDD",131,0)
 . . S DGY=$G(@DGPNLIST@("CAT II",DGX))
"RTN","DGPFDD",132,0)
 . . ; Need to setup the current assigned progress note title as a
"RTN","DGPFDD",133,0)
 . . ;  selectable entry or the ^DIR call won't accept the default
"RTN","DGPFDD",134,0)
 . . ;   entry when the user hits the retrun key to go to next prompt.
"RTN","DGPFDD",135,0)
 . . ; Only setup if called by PRF action protocol DGPF EDIT FLAG
"RTN","DGPFDD",136,0)
 . . I $P($G(XQORNOD(0)),U,3)="Edit Record Flag",+DGY=$P($G(DGPFORIG("TIUTITLE")),U) D  Q
"RTN","DGPFDD",137,0)
 . . . S @DGPNLIST@(+DGY)=""
"RTN","DGPFDD",138,0)
 . . Q:'DGY
"RTN","DGPFDD",139,0)
 . . I '$$FNDTITLE^DGPFAPI1($P(DGY,U,1)) S @DGPNLIST@(+DGY)=""
"RTN","DGPFDD",140,0)
 ;
"RTN","DGPFDD",141,0)
 I $D(@DGPNLIST@(DGTIUIEN)) S DGRSLT=1
"RTN","DGPFDD",142,0)
 K @DGPNLIST
"RTN","DGPFDD",143,0)
 ;
"RTN","DGPFDD",144,0)
 Q DGRSLT
"RTN","DGPFDD",145,0)
 ;
"RTN","DGPFDD",146,0)
GETLIST(DGCAT,DGLIST) ;Get list of TIU Progress Note Titles
"RTN","DGPFDD",147,0)
 ; This function is used to retrieve a list of active TIU Progress
"RTN","DGPFDD",148,0)
 ; Note Titles that can be associated with Category I or Category II
"RTN","DGPFDD",149,0)
 ; Record Flags.
"RTN","DGPFDD",150,0)
 ;
"RTN","DGPFDD",151,0)
 ;  Supported DBIA:  #4380 - $$CHKDOC^TIUPRF - TIU API's for PRF
"RTN","DGPFDD",152,0)
 ;
"RTN","DGPFDD",153,0)
 ;  Input: [Required]
"RTN","DGPFDD",154,0)
 ;     DGCAT - Category of TIU Progress Note Titles to look for
"RTN","DGPFDD",155,0)
 ;             1:Category I
"RTN","DGPFDD",156,0)
 ;             2:Category II
"RTN","DGPFDD",157,0)
 ;             3:Both Category I and II
"RTN","DGPFDD",158,0)
 ;    DGLIST - Closed root reference array name to return values
"RTN","DGPFDD",159,0)
 ;
"RTN","DGPFDD",160,0)
 ;  Output:
"RTN","DGPFDD",161,0)
 ;    Function Value - returns 1 on success, 0 on failure
"RTN","DGPFDD",162,0)
 ;          DGLIST() - Closed Root reference name of returned data
"RTN","DGPFDD",163,0)
 ;
"RTN","DGPFDD",164,0)
 N DGRSLT  ;function value
"RTN","DGPFDD",165,0)
 S DGRSLT=0
"RTN","DGPFDD",166,0)
 ;
"RTN","DGPFDD",167,0)
 I $G(DGCAT)>0,DGLIST]"",$$GETLIST^TIUPRF(DGCAT,DGLIST) S DGRSLT=1
"RTN","DGPFDD",168,0)
 ;
"RTN","DGPFDD",169,0)
 Q DGRSLT
"RTN","DGPFHLU6")
0^54^B6742118
"RTN","DGPFHLU6",1,0)
DGPFHLU6 ;ALB/RPM - PRF HL7 ORU~R01 UTILITIES ; 8/31/05 1:09pm
"RTN","DGPFHLU6",2,0)
 ;;5.3;Registration;**425,554**;Aug 13, 1993
"RTN","DGPFHLU6",3,0)
 ;
"RTN","DGPFHLU6",4,0)
 Q  ;no direct entry
"RTN","DGPFHLU6",5,0)
 ;
"RTN","DGPFHLU6",6,0)
XMIT(DGPFHIEN,DGHLEID,DGFAC,DGHLROOT,DGHL) ;transmit ORU messages
"RTN","DGPFHLU6",7,0)
 ;This function loops through an array of treating facilities.  For
"RTN","DGPFHLU6",8,0)
 ;each treating facility: the HL7 logical link is determined, the ORU
"RTN","DGPFHLU6",9,0)
 ;message contained in the DGHLROOT input parameter is transmitted and
"RTN","DGPFHLU6",10,0)
 ;an entry is created in the PRF HL7 TRANSMISSION LOG (#26.17) file.
"RTN","DGPFHLU6",11,0)
 ;
"RTN","DGPFHLU6",12,0)
 ;  Supported DBIA #2171:  This supported DBIA is used to access the
"RTN","DGPFHLU6",13,0)
 ;                         Kernel API to convert a station number
"RTN","DGPFHLU6",14,0)
 ;                         to an INSTITUTION (#4) file IEN.
"RTN","DGPFHLU6",15,0)
 ;
"RTN","DGPFHLU6",16,0)
 ;  Input:
"RTN","DGPFHLU6",17,0)
 ; DGPFHIEN - pointer to PRF ASSIGNMENT HISTORY (#26.14) file
"RTN","DGPFHLU6",18,0)
 ;  DGHLEID - event protocol ID
"RTN","DGPFHLU6",19,0)
 ;    DGFAC - treating facilities array
"RTN","DGPFHLU6",20,0)
 ; DGHLROOT - name of array containing formatted ORU message
"RTN","DGPFHLU6",21,0)
 ;     DGHL - VistA HL7 environment array
"RTN","DGPFHLU6",22,0)
 ;
"RTN","DGPFHLU6",23,0)
 ;  Output:
"RTN","DGPFHLU6",24,0)
 ;   Function value - returns 1 on sucess, 0 on failure
"RTN","DGPFHLU6",25,0)
 ;
"RTN","DGPFHLU6",26,0)
 N DGHLLNK   ;single logical link
"RTN","DGPFHLU6",27,0)
 N DGHLS     ;name of HL7 "HLS" array
"RTN","DGPFHLU6",28,0)
 N DGI       ;generic counter
"RTN","DGPFHLU6",29,0)
 N DGINST    ;pointer to INSTITUTION (#4) file
"RTN","DGPFHLU6",30,0)
 N DGLOGERR  ;error array from transmit log filer
"RTN","DGPFHLU6",31,0)
 N DGLINST   ;pointer to INSTITUTION (#4) file for local site
"RTN","DGPFHLU6",32,0)
 N DGRSLT    ;function value
"RTN","DGPFHLU6",33,0)
 N HLL       ;logical links array
"RTN","DGPFHLU6",34,0)
 N DGHLRSLT    ;message IEN on successful transmit
"RTN","DGPFHLU6",35,0)
 ;
"RTN","DGPFHLU6",36,0)
 S DGHLS=$NA(^TMP("HLS",$J))
"RTN","DGPFHLU6",37,0)
 S DGLINST=$P($$SITE^VASITE(),U,1)
"RTN","DGPFHLU6",38,0)
 S DGRSLT=0
"RTN","DGPFHLU6",39,0)
 ;
"RTN","DGPFHLU6",40,0)
 S DGI=0
"RTN","DGPFHLU6",41,0)
 F  S DGI=$O(DGFAC(DGI)) Q:'DGI  D
"RTN","DGPFHLU6",42,0)
 . N DGHLRSLT
"RTN","DGPFHLU6",43,0)
 . N DGLOGERR
"RTN","DGPFHLU6",44,0)
 . ;
"RTN","DGPFHLU6",45,0)
 . ;convert the station number to INSTITUTION (#4) file IEN
"RTN","DGPFHLU6",46,0)
 . S DGINST=+$$IEN^XUAF4($P(DGFAC(DGI),U,1))
"RTN","DGPFHLU6",47,0)
 . Q:'DGINST!(DGINST=DGLINST)
"RTN","DGPFHLU6",48,0)
 . ;
"RTN","DGPFHLU6",49,0)
 . ;must be a medical treating facility
"RTN","DGPFHLU6",50,0)
 . Q:'$$TF^XUAF4(DGINST)
"RTN","DGPFHLU6",51,0)
 . ;
"RTN","DGPFHLU6",52,0)
 . ;get the HL7 LOGICAL LINK associated with the institution
"RTN","DGPFHLU6",53,0)
 . S DGHLLNK=$$GETLINK^DGPFHLUT(DGINST)
"RTN","DGPFHLU6",54,0)
 . Q:DGHLLNK=0
"RTN","DGPFHLU6",55,0)
 . ;
"RTN","DGPFHLU6",56,0)
 . ;copy formatted message to HL7 "HLS" array
"RTN","DGPFHLU6",57,0)
 . K @DGHLS
"RTN","DGPFHLU6",58,0)
 . M @DGHLS=@DGHLROOT
"RTN","DGPFHLU6",59,0)
 . ;
"RTN","DGPFHLU6",60,0)
 . ;build HLL logical link
"RTN","DGPFHLU6",61,0)
 . S HLL("LINKS",1)="DGPF PRF ORU/R01 SUBSC"_U_DGHLLNK
"RTN","DGPFHLU6",62,0)
 . ;
"RTN","DGPFHLU6",63,0)
 . ;generate the message
"RTN","DGPFHLU6",64,0)
 . D GENERATE^HLMA(DGHLEID,"GM",1,.DGHLRSLT,"","")
"RTN","DGPFHLU6",65,0)
 . Q:$P(DGHLRSLT,U,2)]""
"RTN","DGPFHLU6",66,0)
 . ;
"RTN","DGPFHLU6",67,0)
 . ;store the message ID and destination site in the HL7 transmission log
"RTN","DGPFHLU6",68,0)
 . D STOXMIT^DGPFHLL(DGPFHIEN,$P(DGHLRSLT,U),DGINST,.DGLOGERR)
"RTN","DGPFHLU6",69,0)
 . Q:$D(DGLOGERR)
"RTN","DGPFHLU6",70,0)
 . ;
"RTN","DGPFHLU6",71,0)
 . ;success
"RTN","DGPFHLU6",72,0)
 . S DGRSLT=1
"RTN","DGPFHLU6",73,0)
 ;
"RTN","DGPFHLU6",74,0)
 Q DGRSLT
"RTN","DGPFLF3")
0^22^B51450229
"RTN","DGPFLF3",1,0)
DGPFLF3 ;ALB/RBS - PRF FLAG MANAGEMENT LM PROTOCOL ACTIONS CONT. ; 6/9/04 2:05pm
"RTN","DGPFLF3",2,0)
 ;;5.3;Registration;**425,554**;Aug 13, 1993 
"RTN","DGPFLF3",3,0)
 ;
"RTN","DGPFLF3",4,0)
 ;no direct entry
"RTN","DGPFLF3",5,0)
 QUIT
"RTN","DGPFLF3",6,0)
 ;
"RTN","DGPFLF3",7,0)
 ;
"RTN","DGPFLF3",8,0)
AF ;Entry point for DGPF ADD FLAG action protocol.
"RTN","DGPFLF3",9,0)
 ;
"RTN","DGPFLF3",10,0)
 ;  Input: DGCAT - flag category (1=National, 2=Local)
"RTN","DGPFLF3",11,0)
 ;
"RTN","DGPFLF3",12,0)
 ; Output: New File entry in PRF LOCAL FLAG FILE (#26.11)
"RTN","DGPFLF3",13,0)
 ;         New File entry in PRF LOCAL FLAG HISTORY FILE (#26.12)
"RTN","DGPFLF3",14,0)
 ;         Set variable VALMBCK to 'R' = refresh screen
"RTN","DGPFLF3",15,0)
 ;
"RTN","DGPFLF3",16,0)
 N DIC,DGWPROOT,DIWETXT,DIWESUB,DWLW,DWPK ;input vars for EN^DIWE call
"RTN","DGPFLF3",17,0)
 N DGASK    ;return value from call to ^DIR - $$ANSWER^DGPFUT call
"RTN","DGPFLF3",18,0)
 N DGCKWP   ;check if word-processing is OK
"RTN","DGPFLF3",19,0)
 N DGPFLF   ;array containing flag record field values
"RTN","DGPFLF3",20,0)
 N DGPFLH   ;array containing flag history record field values
"RTN","DGPFLF3",21,0)
 N DGABORT  ;abort flag
"RTN","DGPFLF3",22,0)
 N DGRESULT ;result of $$STOALL^DGPFALF1 api call
"RTN","DGPFLF3",23,0)
 N DGRDAY   ;review frequency var
"RTN","DGPFLF3",24,0)
 N DGNDAY   ;notification days var
"RTN","DGPFLF3",25,0)
 N DGERR    ;if error returned from $$STOALL^DGPFALF1 api call
"RTN","DGPFLF3",26,0)
 N DGOK     ;ok flag to enter record flag entry & flag description
"RTN","DGPFLF3",27,0)
 N DGMSG    ;user message
"RTN","DGPFLF3",28,0)
 N DGQ      ;quit flag
"RTN","DGPFLF3",29,0)
 ;
"RTN","DGPFLF3",30,0)
 S DGOK=1,(DGQ,DGABORT)=0
"RTN","DGPFLF3",31,0)
 S DGMSG="W !?2,"">>> '""_$P($G(XQORNOD(0)),U,3)_""' action not allowed for Category II (Local) Flags."",*7"
"RTN","DGPFLF3",32,0)
 ;
"RTN","DGPFLF3",33,0)
 ;set screen to full scrolling region
"RTN","DGPFLF3",34,0)
 D FULL^VALM1
"RTN","DGPFLF3",35,0)
 W !
"RTN","DGPFLF3",36,0)
 ;check of Category var - Only Local Flags can be created
"RTN","DGPFLF3",37,0)
 I DGCAT=1 D
"RTN","DGPFLF3",38,0)
 . W !?2,">>> '",$P($G(XQORNOD(0)),U,3),"' action not allowed for Category I (National) Flags.",*7
"RTN","DGPFLF3",39,0)
 . W !?7,"Only Category II (Local) Flags may be created at the local site.",*7
"RTN","DGPFLF3",40,0)
 . S DGOK=0
"RTN","DGPFLF3",41,0)
 . D PAUSE^VALM1
"RTN","DGPFLF3",42,0)
 ;
"RTN","DGPFLF3",43,0)
 ;check of security key
"RTN","DGPFLF3",44,0)
 I DGOK,'$D(^XUSEC("DGPF LOCAL FLAG EDIT",DUZ)) D
"RTN","DGPFLF3",45,0)
 . X DGMSG
"RTN","DGPFLF3",46,0)
 . W !?7,"You do not have the appropriate Security Key.",*7
"RTN","DGPFLF3",47,0)
 . S DGOK=0
"RTN","DGPFLF3",48,0)
 . D PAUSE^VALM1
"RTN","DGPFLF3",49,0)
 ;
"RTN","DGPFLF3",50,0)
 ;user prompts
"RTN","DGPFLF3",51,0)
 D:DGOK
"RTN","DGPFLF3",52,0)
 . ;-- init flag record and history arrays
"RTN","DGPFLF3",53,0)
 . ;   The DGPFLF array will contain 2 "^" pieces (internal^external)
"RTN","DGPFLF3",54,0)
 . ;   for a final full screen display before filing.
"RTN","DGPFLF3",55,0)
 . K DGPFLF,DGPFLH
"RTN","DGPFLF3",56,0)
 . ;
"RTN","DGPFLF3",57,0)
 . ;-- prompt for flag name, quit if one not entered
"RTN","DGPFLF3",58,0)
 . S DGASK=$$ANSWER^DGPFUT("Enter the Record Flag Name","","26.11,.01^^I $D(^DGPF(26.11,""B"",X)) K X W "" *** Flag name already on file""")
"RTN","DGPFLF3",59,0)
 . I DGASK=-1!(DGASK=0) S DGABORT=1 Q
"RTN","DGPFLF3",60,0)
 . S DGPFLF("FLAG")=DGASK_U_DGASK
"RTN","DGPFLF3",61,0)
 . ;
"RTN","DGPFLF3",62,0)
 . ;-- prompt for status of the flag, quit if one not entered
"RTN","DGPFLF3",63,0)
 . S DGASK=$$ANSWER^DGPFUT("Enter the Status of the Flag","ACTIVE","26.11,.02")
"RTN","DGPFLF3",64,0)
 . I DGASK<0 S DGABORT=1 Q
"RTN","DGPFLF3",65,0)
 . S DGPFLF("STAT")=DGASK_U_$$EXTERNAL^DILFD(26.11,.02,"F",DGASK)
"RTN","DGPFLF3",66,0)
 . ;
"RTN","DGPFLF3",67,0)
 . ;-- prompt for flag type, quit if one not entered
"RTN","DGPFLF3",68,0)
 . S DGASK=$$ANSWER^DGPFUT("Enter the Type of the Flag","","26.11,.03")
"RTN","DGPFLF3",69,0)
 . I DGASK'>0 S DGABORT=1 Q
"RTN","DGPFLF3",70,0)
 . S DGPFLF("TYPE")=DGASK_U_$$EXTERNAL^DILFD(26.11,.03,"F",DGASK)
"RTN","DGPFLF3",71,0)
 . ;
"RTN","DGPFLF3",72,0)
 . ;-- prompt for principal investigator(s) name for RESEARCH flag type 
"RTN","DGPFLF3",73,0)
 . I +DGPFLF("TYPE")=2,'$$PRININV^DGPFLF6(0,.DGPFLF) D  Q:DGABORT
"RTN","DGPFLF3",74,0)
 . . I $$ANSWER^DGPFUT("Enter RETURN to continue or '^' to exit","","E")=-1 S DGABORT=1
"RTN","DGPFLF3",75,0)
 . ;
"RTN","DGPFLF3",76,0)
 . ;-- prompt for review frequency, quit if user aborts
"RTN","DGPFLF3",77,0)
 . S DGASK=$$ANSWER^DGPFUT("Enter the Review Frequency Days","","26.11,.04^^K:$L(X)>4!(X[""."") X")
"RTN","DGPFLF3",78,0)
 . I DGASK<0 S DGABORT=1 Q
"RTN","DGPFLF3",79,0)
 . S DGPFLF("REVFREQ")=DGASK_U_DGASK
"RTN","DGPFLF3",80,0)
 . S DGRDAY=DGASK
"RTN","DGPFLF3",81,0)
 . I DGASK=0 D
"RTN","DGPFLF3",82,0)
 . . ;-- if review frequency=0, don't ask notification/review group
"RTN","DGPFLF3",83,0)
 . . ;   reset both fields
"RTN","DGPFLF3",84,0)
 . . S DGPFLF("NOTIDAYS")=0_U_0
"RTN","DGPFLF3",85,0)
 . . S DGPFLF("REVGRP")=""_U_""
"RTN","DGPFLF3",86,0)
 . . ;
"RTN","DGPFLF3",87,0)
 . E  D  Q:DGABORT    ;continue to prompt user and check abort logic
"RTN","DGPFLF3",88,0)
 . . ;
"RTN","DGPFLF3",89,0)
 . . ;-- prompt for notification days
"RTN","DGPFLF3",90,0)
 . . S DGASK=$$ANSWER^DGPFUT("Enter the Notification Days","","26.11,.05^^K:$L(X)>4!(X[""."")!(X>DGRDAY) X")
"RTN","DGPFLF3",91,0)
 . . I DGASK<0 S DGABORT=1 Q
"RTN","DGPFLF3",92,0)
 . . S DGPFLF("NOTIDAYS")=DGASK_U_DGASK
"RTN","DGPFLF3",93,0)
 . . ;
"RTN","DGPFLF3",94,0)
 . . S DGQ=0
"RTN","DGPFLF3",95,0)
 . . F  D  Q:(DGQ!DGABORT)
"RTN","DGPFLF3",96,0)
 . . . ;-- prompt for review mail group name, optional entry
"RTN","DGPFLF3",97,0)
 . . . S DGASK=$$ANSWER^DGPFUT("Enter the Review Mail Group","","26.11,.06")
"RTN","DGPFLF3",98,0)
 . . . I DGASK<0 S DGABORT=1 Q
"RTN","DGPFLF3",99,0)
 . . . I DGASK'>0 D  Q
"RTN","DGPFLF3",100,0)
 . . . . W !,"   >>> You've entered the Review Frequency and Notification Days,"
"RTN","DGPFLF3",101,0)
 . . . . W !,"       now enter a Review Mail Group or abort this process.",*7
"RTN","DGPFLF3",102,0)
 . . . . I '$$CONTINUE^DGPFUT() S DGABORT=1
"RTN","DGPFLF3",103,0)
 . . . ;
"RTN","DGPFLF3",104,0)
 . . . S DGPFLF("REVGRP")=DGASK_U_$$EXTERNAL^DILFD(26.11,.06,"F",DGASK)
"RTN","DGPFLF3",105,0)
 . . . S DGQ=1  ;set entry, quit
"RTN","DGPFLF3",106,0)
 . ;
"RTN","DGPFLF3",107,0)
 . ;-- prompt for associated TIU PN Title, quit if one not entered
"RTN","DGPFLF3",108,0)
 . ; There is a DD screen on the (#.07) field - using IA #4380
"RTN","DGPFLF3",109,0)
 . ; to only display Category II PN Titles not already associated
"RTN","DGPFLF3",110,0)
 . ; with a Category II (Local) Record Flag name.
"RTN","DGPFLF3",111,0)
 . ;
"RTN","DGPFLF3",112,0)
 . S DGASK=$$ANSWER^DGPFUT("Enter the Progress Note Title","","26.11,.07")
"RTN","DGPFLF3",113,0)
 . I DGASK<0 S DGABORT=1 Q
"RTN","DGPFLF3",114,0)
 . S DGPFLF("TIUTITLE")=DGASK_U_$$EXTERNAL^DILFD(26.11,.07,"F",DGASK)
"RTN","DGPFLF3",115,0)
 . ;
"RTN","DGPFLF3",116,0)
 . ;-- have user enter flag description text (required)
"RTN","DGPFLF3",117,0)
 . S DGCKWP=0
"RTN","DGPFLF3",118,0)
 . S DGWPROOT=$NA(^TMP($J,"DGPFDESC"))
"RTN","DGPFLF3",119,0)
 . K @DGWPROOT
"RTN","DGPFLF3",120,0)
 . F  D  Q:(DGCKWP!DGABORT)
"RTN","DGPFLF3",121,0)
 . . W !,"Enter the description for this new record flag:"  ;needed for line editor
"RTN","DGPFLF3",122,0)
 . . S DIC=$$OREF^DILF(DGWPROOT)
"RTN","DGPFLF3",123,0)
 . . S DIWETXT="Patient Record Flag - Flag Description Text"
"RTN","DGPFLF3",124,0)
 . . S DIWESUB="Flag Description Text"
"RTN","DGPFLF3",125,0)
 . . S DWLW=75 ;max # of chars allowed to be stored on WP global node
"RTN","DGPFLF3",126,0)
 . . S DWPK=1  ;if line editor, don't join line
"RTN","DGPFLF3",127,0)
 . . D EN^DIWE
"RTN","DGPFLF3",128,0)
 . . I $$CKWP^DGPFUT(DGWPROOT) S DGCKWP=1 Q
"RTN","DGPFLF3",129,0)
 . . W !,"Flag Description Text is required!",!,*7
"RTN","DGPFLF3",130,0)
 . . I '$$CONTINUE^DGPFUT() S DGABORT=1
"RTN","DGPFLF3",131,0)
 . ;
"RTN","DGPFLF3",132,0)
 . ;-- quit if required flag description not entered
"RTN","DGPFLF3",133,0)
 . Q:DGABORT
"RTN","DGPFLF3",134,0)
 . ;
"RTN","DGPFLF3",135,0)
 . ;-- place flag description text into assignment array
"RTN","DGPFLF3",136,0)
 . M DGPFLF("DESC")=@DGWPROOT K @DGWPROOT
"RTN","DGPFLF3",137,0)
 . ;
"RTN","DGPFLF3",138,0)
 . ;-- setup remaining flag history array nodes for filing
"RTN","DGPFLF3",139,0)
 . ;   note, the DGPFLH("FLAG") will be setup in $$STOALL^DGPFALF1
"RTN","DGPFLF3",140,0)
 . S DGPFLH("ENTERDT")=$$NOW^XLFDT()   ;current date/time
"RTN","DGPFLF3",141,0)
 . S DGPFLH("ENTERBY")=DUZ             ;current user
"RTN","DGPFLF3",142,0)
 . S DGPFLH("REASON",1,0)="New Local Patient Record Flag entered."
"RTN","DGPFLF3",143,0)
 . ;
"RTN","DGPFLF3",144,0)
 . ;-- re-display user's answers on full screen
"RTN","DGPFLF3",145,0)
 . D REVIEW^DGPFUT3(.DGPFLF,.DGPFLH,"",XQY0,XQORNOD(0))
"RTN","DGPFLF3",146,0)
 . ;
"RTN","DGPFLF3",147,0)
 . W !,*7
"RTN","DGPFLF3",148,0)
 . I $$ANSWER^DGPFUT("Would you like to file this new local record flag","YES","Y")'>0 S DGABORT=1 Q
"RTN","DGPFLF3",149,0)
 . ;
"RTN","DGPFLF3",150,0)
 . W !,"Filing the new local record flag..."
"RTN","DGPFLF3",151,0)
 . ;
"RTN","DGPFLF3",152,0)
 . ;-- file both the (#26.11) & (#26.12) entries
"RTN","DGPFLF3",153,0)
 . S DGRESULT=$$STOALL^DGPFALF1(.DGPFLF,.DGPFLH,.DGERR)
"RTN","DGPFLF3",154,0)
 . ;
"RTN","DGPFLF3",155,0)
 . W !!,"   >>> Local record flag was "_$S(+DGRESULT:"filed successfully.",1:"not filed successfully."),*7
"RTN","DGPFLF3",156,0)
 . ;
"RTN","DGPFLF3",157,0)
 . D PAUSE^VALM1
"RTN","DGPFLF3",158,0)
 ;
"RTN","DGPFLF3",159,0)
 I DGABORT D
"RTN","DGPFLF3",160,0)
 . W !,"   >>> The '"_$P($G(XQORNOD(0)),U,3)_"' action is aborting, nothing has been filed.",*7
"RTN","DGPFLF3",161,0)
 . I $$ANSWER^DGPFUT("Enter RETURN to continue","","E")  ;pause
"RTN","DGPFLF3",162,0)
 ;
"RTN","DGPFLF3",163,0)
 ;re-build list of local record flags
"RTN","DGPFLF3",164,0)
 D BLD^DGPFLF
"RTN","DGPFLF3",165,0)
 ;
"RTN","DGPFLF3",166,0)
 ;return to LM (refresh screen)
"RTN","DGPFLF3",167,0)
 S VALMBCK="R"
"RTN","DGPFLF3",168,0)
 Q
"RTN","DGPFLF4")
0^23^B29613889
"RTN","DGPFLF4",1,0)
DGPFLF4 ;ALB/RBS - PRF FLAG MANAGEMENT LM PROTOCOL ACTIONS CONT. ; 4/15/04 12:15pm
"RTN","DGPFLF4",2,0)
 ;;5.3;Registration;**425,554**;Aug 13, 1993 
"RTN","DGPFLF4",3,0)
 ;
"RTN","DGPFLF4",4,0)
 ;no direct entry
"RTN","DGPFLF4",5,0)
 QUIT
"RTN","DGPFLF4",6,0)
 ;
"RTN","DGPFLF4",7,0)
EF ;Entry point for DGPF EDIT FLAG action protocol.
"RTN","DGPFLF4",8,0)
 ;
"RTN","DGPFLF4",9,0)
 ;  Input: DGCAT - flag category (1=National, 2=Local)
"RTN","DGPFLF4",10,0)
 ;
"RTN","DGPFLF4",11,0)
 ; Output: Edit File entry in PRF LOCAL FLAG FILE (#26.11)
"RTN","DGPFLF4",12,0)
 ;         New File entry in PRF LOCAL FLAG HISTORY FILE (#26.12)
"RTN","DGPFLF4",13,0)
 ;         Set variable VALMBCK to 'R' = refresh screen
"RTN","DGPFLF4",14,0)
 ;
"RTN","DGPFLF4",15,0)
 N X,Y,DIRUT,DTOUT,DUOUT,DIROUT       ;input/output vars for ^DIR
"RTN","DGPFLF4",16,0)
 N DGIDXIEN ;ien of flag record from the "IDX" 
"RTN","DGPFLF4",17,0)
 N DGPFLF   ;array containing flag record field values
"RTN","DGPFLF4",18,0)
 N DGPFLH   ;array containing flag history record field values
"RTN","DGPFLF4",19,0)
 N DGPFORIG ;save original array containing flag record field values
"RTN","DGPFLF4",20,0)
 N DGABORT  ;abort flag
"RTN","DGPFLF4",21,0)
 N DGRESULT ;result of $$STOALL^DGPFALF1 api call
"RTN","DGPFLF4",22,0)
 N DGERR    ;if error returned from $$STOALL^DGPFALF1 api call
"RTN","DGPFLF4",23,0)
 N DGOK     ;ok flag to enter record flag entry & flag description
"RTN","DGPFLF4",24,0)
 N DGLOCK   ;lock var for flag file edit
"RTN","DGPFLF4",25,0)
 N DGSEL    ;user selection (list item)
"RTN","DGPFLF4",26,0)
 N VALMY    ;output of EN^VALM2 call, array of user selected entries
"RTN","DGPFLF4",27,0)
 N DGMSG    ;user message
"RTN","DGPFLF4",28,0)
 N DGQ,DGSUB ;counters and quit flag
"RTN","DGPFLF4",29,0)
 ;
"RTN","DGPFLF4",30,0)
 S (DGABORT,DGLOCK,DGRESULT,DGQ,DGSUB)=0
"RTN","DGPFLF4",31,0)
 S DGOK=1,(DGSEL,DGIDXIEN)=""
"RTN","DGPFLF4",32,0)
 ;
"RTN","DGPFLF4",33,0)
 S DGMSG="W !?2,"">>> '""_$P($G(XQORNOD(0)),U,3)_""' action not allowed for Category II (Local) Flags."",*7"
"RTN","DGPFLF4",34,0)
 ;
"RTN","DGPFLF4",35,0)
 ;- set screen to full scrolling region
"RTN","DGPFLF4",36,0)
 D FULL^VALM1
"RTN","DGPFLF4",37,0)
 W !
"RTN","DGPFLF4",38,0)
 ;- check of Category var - Only Local Flags can be created
"RTN","DGPFLF4",39,0)
 I DGCAT=1 D
"RTN","DGPFLF4",40,0)
 . W !?2,">>> '",$P($G(XQORNOD(0)),U,3),"' action not allowed for Category I (National) Flags.",*7
"RTN","DGPFLF4",41,0)
 . W !?7,"Only Category II (Local) Flags may be edited.",*7
"RTN","DGPFLF4",42,0)
 . S DGOK=0
"RTN","DGPFLF4",43,0)
 . D PAUSE^VALM1
"RTN","DGPFLF4",44,0)
 ;
"RTN","DGPFLF4",45,0)
 ;- check of security key
"RTN","DGPFLF4",46,0)
 I DGOK,'$D(^XUSEC("DGPF LOCAL FLAG EDIT",DUZ)) D
"RTN","DGPFLF4",47,0)
 . X DGMSG
"RTN","DGPFLF4",48,0)
 . W !?7,"You do not have the appropriate Security Key.",*7
"RTN","DGPFLF4",49,0)
 . S DGOK=0
"RTN","DGPFLF4",50,0)
 . D PAUSE^VALM1
"RTN","DGPFLF4",51,0)
 ;
"RTN","DGPFLF4",52,0)
 ;-- init flag record and history arrays
"RTN","DGPFLF4",53,0)
 ;   The DGPFLF array will contain 2 "^" pieces (internal^external)
"RTN","DGPFLF4",54,0)
 ;   for a final full screen display before filing.
"RTN","DGPFLF4",55,0)
 K DGPFLF,DGPFLH,DGPFORIG
"RTN","DGPFLF4",56,0)
 ;
"RTN","DGPFLF4",57,0)
 ;- allow user to select a single flag for editing
"RTN","DGPFLF4",58,0)
 D:DGOK
"RTN","DGPFLF4",59,0)
 . S DGOK=0,VALMBCK=""
"RTN","DGPFLF4",60,0)
 . D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","DGPFLF4",61,0)
 . Q:'$D(VALMY)
"RTN","DGPFLF4",62,0)
 . S DGSEL=$O(VALMY(""))
"RTN","DGPFLF4",63,0)
 . Q:DGSEL']""
"RTN","DGPFLF4",64,0)
 . Q:'$D(@VALMAR@("IDX",DGSEL))
"RTN","DGPFLF4",65,0)
 . S DGIDXIEN=$G(@VALMAR@("IDX",DGSEL))
"RTN","DGPFLF4",66,0)
 . ; lock flag record
"RTN","DGPFLF4",67,0)
 . S DGLOCK=$$LOCKLF^DGPFALF1(DGIDXIEN)
"RTN","DGPFLF4",68,0)
 . I 'DGLOCK D  Q
"RTN","DGPFLF4",69,0)
 . . X DGMSG
"RTN","DGPFLF4",70,0)
 . . W !?7,"Unable to Lock Flag, another User is Editing this Flag.",*7
"RTN","DGPFLF4",71,0)
 . . D PAUSE^VALM1
"RTN","DGPFLF4",72,0)
 . ;
"RTN","DGPFLF4",73,0)
 . ; call api to get record back in array DGPFLF
"RTN","DGPFLF4",74,0)
 . I '$$GETLF^DGPFALF($P(DGIDXIEN,";"),.DGPFLF) D  Q
"RTN","DGPFLF4",75,0)
 . . X DGMSG
"RTN","DGPFLF4",76,0)
 . . W !?7,"No Local Flag record data found.  Please check your selection.",*7
"RTN","DGPFLF4",77,0)
 . . D PAUSE^VALM1
"RTN","DGPFLF4",78,0)
 . ;
"RTN","DGPFLF4",79,0)
 . M DGPFORIG=DGPFLF  ;save original array to compare for edits later
"RTN","DGPFLF4",80,0)
 . S DGOK=1
"RTN","DGPFLF4",81,0)
 ;
"RTN","DGPFLF4",82,0)
 ;-- Call DGPFLF5 for user prompts to edit fields
"RTN","DGPFLF4",83,0)
 ;   - split from this one due to size
"RTN","DGPFLF4",84,0)
 I DGOK D
"RTN","DGPFLF4",85,0)
 . D EFCONT^DGPFLF5(.DGPFLF,.DGPFLH,.DGPFORIG,.DGABORT,DGIDXIEN)
"RTN","DGPFLF4",86,0)
 . Q:DGABORT
"RTN","DGPFLF4",87,0)
 . ;
"RTN","DGPFLF4",88,0)
 . ;-- check to see if user changed anything
"RTN","DGPFLF4",89,0)
 . S DGSUB="",DGQ=0
"RTN","DGPFLF4",90,0)
 . I $G(DGPFLF("OLDFLAG"))]""  S DGQ=1  ;flag name has changed
"RTN","DGPFLF4",91,0)
 . I 'DGQ D
"RTN","DGPFLF4",92,0)
 . . F DGSUB="STAT","TYPE","REVFREQ","NOTIDAYS","REVGRP","TIUTITLE" D  Q:DGQ
"RTN","DGPFLF4",93,0)
 . . . I DGPFLF(DGSUB)'=DGPFORIG(DGSUB) S DGQ=1
"RTN","DGPFLF4",94,0)
 . . Q:DGQ
"RTN","DGPFLF4",95,0)
 . . ;
"RTN","DGPFLF4",96,0)
 . . ;was description modified?
"RTN","DGPFLF4",97,0)
 . . I $O(DGPFLF("DESC",""),-1)'=$O(DGPFORIG("DESC",""),-1) S DGQ=1
"RTN","DGPFLF4",98,0)
 . . Q:DGQ
"RTN","DGPFLF4",99,0)
 . . ;
"RTN","DGPFLF4",100,0)
 . . S DGSUB=0
"RTN","DGPFLF4",101,0)
 . . F  S DGSUB=$O(DGPFLF("DESC",DGSUB)) Q:DGSUB=""  D  Q:DGQ
"RTN","DGPFLF4",102,0)
 . . . I DGPFLF("DESC",DGSUB,0)'=$G(DGPFORIG("DESC",DGSUB,0)) S DGQ=1
"RTN","DGPFLF4",103,0)
 . . Q:DGQ
"RTN","DGPFLF4",104,0)
 . . ;
"RTN","DGPFLF4",105,0)
 . . S DGSUB=0
"RTN","DGPFLF4",106,0)
 . . F  S DGSUB=$O(DGPFLF("PRININV",DGSUB)) Q:DGSUB=""  D  Q:DGQ
"RTN","DGPFLF4",107,0)
 . . . I DGPFLF("PRININV",DGSUB,0)'=$G(DGPFORIG("PRININV",DGSUB,0)) S DGQ=1
"RTN","DGPFLF4",108,0)
 . ;
"RTN","DGPFLF4",109,0)
 . I 'DGQ D  Q
"RTN","DGPFLF4",110,0)
 . . W !!,"   >>> No edits to "_$P(DGPFLF("FLAG"),U,2)_" were found."
"RTN","DGPFLF4",111,0)
 . . S DGABORT=1
"RTN","DGPFLF4",112,0)
 . ;
"RTN","DGPFLF4",113,0)
 . K DGPFORIG  ;kill array - no longer needed
"RTN","DGPFLF4",114,0)
 . ;
"RTN","DGPFLF4",115,0)
 . ;-- re-display user's answers on full screen
"RTN","DGPFLF4",116,0)
 . D REVIEW^DGPFUT3(.DGPFLF,.DGPFLH,"",XQY0,XQORNOD(0))
"RTN","DGPFLF4",117,0)
 . ;
"RTN","DGPFLF4",118,0)
 . ; -- file the edits
"RTN","DGPFLF4",119,0)
 . W !,*7
"RTN","DGPFLF4",120,0)
 . I $$ANSWER^DGPFUT("Would you like to file the local record flag changes","YES","Y")'>0 S DGABORT=1 Q
"RTN","DGPFLF4",121,0)
 . ;
"RTN","DGPFLF4",122,0)
 . W !,"Updating the local record flag..."
"RTN","DGPFLF4",123,0)
 . ;
"RTN","DGPFLF4",124,0)
 . ;-- setup remaining flag history array nodes for filing
"RTN","DGPFLF4",125,0)
 . ;   note, the DGPFLH("FLAG") will be setup in $$STOALL^DGPFALF1
"RTN","DGPFLF4",126,0)
 . S DGPFLH("ENTERDT")=$$NOW^XLFDT()   ;current date/time
"RTN","DGPFLF4",127,0)
 . S DGPFLH("ENTERBY")=DUZ             ;current user
"RTN","DGPFLF4",128,0)
 . ;
"RTN","DGPFLF4",129,0)
 . ;-- file both the (#26.11) & (#26.12) entries
"RTN","DGPFLF4",130,0)
 . S DGRESULT=$$STOALL^DGPFALF1(.DGPFLF,.DGPFLH,.DGERR)
"RTN","DGPFLF4",131,0)
 . ;
"RTN","DGPFLF4",132,0)
 . W !!,"   >>> Local record flag was "_$S(+DGRESULT:"filed successfully.",1:"not filed successfully."),*7
"RTN","DGPFLF4",133,0)
 . ;
"RTN","DGPFLF4",134,0)
 . D PAUSE^VALM1
"RTN","DGPFLF4",135,0)
 ;
"RTN","DGPFLF4",136,0)
 I DGLOCK,$$UNLOCK^DGPFALF1(DGIDXIEN)
"RTN","DGPFLF4",137,0)
 ;
"RTN","DGPFLF4",138,0)
 I DGABORT D
"RTN","DGPFLF4",139,0)
 . W !!,"   >>> The '"_$P($G(XQORNOD(0)),U,3)_"' action is aborting, nothing has been filed.",*7
"RTN","DGPFLF4",140,0)
 . I $$ANSWER^DGPFUT("Enter RETURN to continue","","E")  ;pause
"RTN","DGPFLF4",141,0)
 ;
"RTN","DGPFLF4",142,0)
 ;-- re-build list of local record flags
"RTN","DGPFLF4",143,0)
 D BLD^DGPFLF
"RTN","DGPFLF4",144,0)
 ;
"RTN","DGPFLF4",145,0)
 ;- return to LM (refresh screen)
"RTN","DGPFLF4",146,0)
 S VALMBCK="R"
"RTN","DGPFLF4",147,0)
 Q
"RTN","DGPFLF4",148,0)
 ;
"RTN","DGPFLF5")
0^33^B71981378
"RTN","DGPFLF5",1,0)
DGPFLF5 ;ALB/RBS - PRF FLAG MANAGEMENT LM PROTOCOL ACTIONS CONT. ; 3/23/05 1:01pm
"RTN","DGPFLF5",2,0)
 ;;5.3;Registration;**425,554**;Aug 13, 1993 
"RTN","DGPFLF5",3,0)
 ;
"RTN","DGPFLF5",4,0)
 ;no direct entry
"RTN","DGPFLF5",5,0)
 QUIT
"RTN","DGPFLF5",6,0)
 ;
"RTN","DGPFLF5",7,0)
EFCONT(DGPFLF,DGPFLH,DGPFORIG,DGABORT,DGIDXIEN) ; EF  Edit Flag action
"RTN","DGPFLF5",8,0)
 ;-- Continue entry point for DGPF EDIT FLAG action protocol.
"RTN","DGPFLF5",9,0)
 ;
"RTN","DGPFLF5",10,0)
 ;  Input:
"RTN","DGPFLF5",11,0)
 ;      DGPFLF  - array of flag record fields (passed by reference)
"RTN","DGPFLF5",12,0)
 ;      DGPFLH  - array for REASON field (passed by reference)
"RTN","DGPFLF5",13,0)
 ;    DGPFORIG  - DGPFLF copy of original values (passed by reference)
"RTN","DGPFLF5",14,0)
 ;     DGABORT  - abort flag - value passed in = 0
"RTN","DGPFLF5",15,0)
 ;    DGIDXIEN  - ien of flag record from the "IDX"
"RTN","DGPFLF5",16,0)
 ;
"RTN","DGPFLF5",17,0)
 ; Output:
"RTN","DGPFLF5",18,0)
 ;      DGPFLF  - Edited array of flag record fields
"RTN","DGPFLF5",19,0)
 ;     DGABORT  - 1 if user wishes to abort, 0 otherwise
"RTN","DGPFLF5",20,0)
 ;
"RTN","DGPFLF5",21,0)
 N DIC,DGWPROOT,DIWETXT,DIWESUB,DWLW,DWPK ;input vars for EN^DIWE call
"RTN","DGPFLF5",22,0)
 N DIR,X,Y,DIRUT,DTOUT,DUOUT,DIROUT       ;input/output vars for ^DIR
"RTN","DGPFLF5",23,0)
 N DGDA       ;default answer
"RTN","DGPFLF5",24,0)
 N DGCKWP     ;check if word-processing is OK
"RTN","DGPFLF5",25,0)
 N DGASK      ;return value from $$ANSWER^DGPFUT call
"RTN","DGPFLF5",26,0)
 N DGRDAY     ;review frequency
"RTN","DGPFLF5",27,0)
 N DGQ,DGSUB  ;counters and quit flag
"RTN","DGPFLF5",28,0)
 N DGACNT     ;count of existing assignments assigned to flag
"RTN","DGPFLF5",29,0)
 N DGDFNLST   ;array of DFN's when existing assignments are found
"RTN","DGPFLF5",30,0)
 N DGTITLE    ;pointer of the progress note title
"RTN","DGPFLF5",31,0)
 N DGARRAY    ;array of assignment history data
"RTN","DGPFLF5",32,0)
 ;
"RTN","DGPFLF5",33,0)
 S (DGACNT,DGQ,DGSUB)=0
"RTN","DGPFLF5",34,0)
 S DGARRAY=$NA(^TMP("DGPFLF5",$J)) K @DGARRAY
"RTN","DGPFLF5",35,0)
 ;
"RTN","DGPFLF5",36,0)
 ; check for assignments to the flag and load the array with the DFN's
"RTN","DGPFLF5",37,0)
 S DGACNT=$$ASGNCNT^DGPFLF6(DGIDXIEN,.DGDFNLST)
"RTN","DGPFLF5",38,0)
 I DGACNT M @DGARRAY=DGDFNLST K DGDFNLST
"RTN","DGPFLF5",39,0)
 ;
"RTN","DGPFLF5",40,0)
 ;-- user prompts
"RTN","DGPFLF5",41,0)
 D
"RTN","DGPFLF5",42,0)
 . ;-- prompt for flag name, quit if one not entered
"RTN","DGPFLF5",43,0)
 . S DGDA=$P($G(DGPFLF("FLAG")),U,2)
"RTN","DGPFLF5",44,0)
 . S DGASK=$$ANSWER^DGPFUT("Enter the Record Flag Name",DGDA,"26.11,.01^^I X'=DGDA,$D(^DGPF(26.11,""B"",X)) K X W "" *** Flag name already on file""")
"RTN","DGPFLF5",45,0)
 . I DGASK=-1!(DGASK=0) S DGABORT=1 Q
"RTN","DGPFLF5",46,0)
 . I DGASK'=DGDA D
"RTN","DGPFLF5",47,0)
 . . I DGACNT D  Q
"RTN","DGPFLF5",48,0)
 . . . W !,"   >>> Name change not allowed ... "_DGACNT_" patients are assigned to this flag."
"RTN","DGPFLF5",49,0)
 . . . S DGABORT=1
"RTN","DGPFLF5",50,0)
 . . ;
"RTN","DGPFLF5",51,0)
 . . S DGPFLF("OLDFLAG")=DGDA      ;save for name change lookup
"RTN","DGPFLF5",52,0)
 . . S DGPFLF("FLAG")=DGASK_U_DGASK
"RTN","DGPFLF5",53,0)
 . ;
"RTN","DGPFLF5",54,0)
 . Q:DGABORT
"RTN","DGPFLF5",55,0)
 . ;
"RTN","DGPFLF5",56,0)
 . ;-- prompt for status of the flag, quit if one not entered
"RTN","DGPFLF5",57,0)
 . S DGDA=$P($G(DGPFLF("STAT")),U,2)
"RTN","DGPFLF5",58,0)
 . S DGASK=$$ANSWER^DGPFUT("Enter the Status of the Flag",DGDA,"26.11,.02")
"RTN","DGPFLF5",59,0)
 . I DGASK<0 S DGABORT=1 Q
"RTN","DGPFLF5",60,0)
 . S:DGASK'=$P($G(DGPFLF("STAT")),U) DGPFLF("STAT")=DGASK_U_$$EXTERNAL^DILFD(26.11,.02,"F",DGASK)
"RTN","DGPFLF5",61,0)
 . ;
"RTN","DGPFLF5",62,0)
 . ; check for any Active Patient Assignments and give warning
"RTN","DGPFLF5",63,0)
 . ;  that all patients will be inactivated when this edit is filed
"RTN","DGPFLF5",64,0)
 . I DGASK=0,$D(^DGPF(26.13,"ASTAT",1,DGIDXIEN)) D
"RTN","DGPFLF5",65,0)
 . . W *7,!,"   >>> WARNING - All Patient's assigned to this flag will be"
"RTN","DGPFLF5",66,0)
 . . W !?17,"Inactivated automatically after filing this edit."
"RTN","DGPFLF5",67,0)
 . . ;
"RTN","DGPFLF5",68,0)
 . . I $$ANSWER^DGPFUT("Enter RETURN to continue or '^' to exit","","E")=-1 S DGABORT=1
"RTN","DGPFLF5",69,0)
 . ;
"RTN","DGPFLF5",70,0)
 . Q:DGABORT
"RTN","DGPFLF5",71,0)
 . ;
"RTN","DGPFLF5",72,0)
 . ;-- prompt for flag type, quit if one not entered
"RTN","DGPFLF5",73,0)
 . S DGDA=$P($G(DGPFLF("TYPE")),U,2)
"RTN","DGPFLF5",74,0)
 . S DGASK=$$ANSWER^DGPFUT("Enter the Type of the Flag",DGDA,"26.11,.03")
"RTN","DGPFLF5",75,0)
 . I DGASK'>0 S DGABORT=1 Q
"RTN","DGPFLF5",76,0)
 . I DGASK'=$P($G(DGPFLF("TYPE")),U) D
"RTN","DGPFLF5",77,0)
 . . I DGACNT D  Q
"RTN","DGPFLF5",78,0)
 . . . W !,"   >>> Flag Type change not allowed ... "_DGACNT_" patients are assigned to this flag."
"RTN","DGPFLF5",79,0)
 . . . S DGABORT=1
"RTN","DGPFLF5",80,0)
 . . S DGPFLF("TYPE")=DGASK_U_$$EXTERNAL^DILFD(26.11,.03,"F",DGASK)
"RTN","DGPFLF5",81,0)
 . Q:DGABORT
"RTN","DGPFLF5",82,0)
 . ;
"RTN","DGPFLF5",83,0)
 . ;-- delete all principal investigator(s) if flag type not RESEARCH
"RTN","DGPFLF5",84,0)
 . I +DGPFLF("TYPE")'=2,$D(DGPFLF("PRININV")) D
"RTN","DGPFLF5",85,0)
 . . S DGSUB=0
"RTN","DGPFLF5",86,0)
 . . F  S DGSUB=$O(DGPFLF("PRININV",DGSUB)) Q:DGSUB=""  D
"RTN","DGPFLF5",87,0)
 . . . S DGPFLF("PRININV",DGSUB,0)="@"
"RTN","DGPFLF5",88,0)
 . ;
"RTN","DGPFLF5",89,0)
 . ;-- prompt for principal investigator(s) name for RESEARCH type flag
"RTN","DGPFLF5",90,0)
 . I +DGPFLF("TYPE")=2,'$$PRININV^DGPFLF6(+DGIDXIEN,.DGPFLF) D  Q:DGABORT
"RTN","DGPFLF5",91,0)
 . . I $$ANSWER^DGPFUT("Enter RETURN to continue or '^' to exit","","E")=-1 S DGABORT=1
"RTN","DGPFLF5",92,0)
 . ;
"RTN","DGPFLF5",93,0)
 . ;-- prompt for review frequency, quit if one not entered
"RTN","DGPFLF5",94,0)
 . S DGDA=$P($G(DGPFLF("REVFREQ")),U,2)
"RTN","DGPFLF5",95,0)
 . S DGASK=$$ANSWER^DGPFUT("Enter the Review Frequency Days",DGDA,"26.11,.04^^K:$L(X)>4!(X[""."") X")
"RTN","DGPFLF5",96,0)
 . I DGASK<0 S DGABORT=1 Q
"RTN","DGPFLF5",97,0)
 . S:DGASK'=$P($G(DGPFLF("REVFREQ")),U) DGPFLF("REVFREQ")=DGASK_U_DGASK
"RTN","DGPFLF5",98,0)
 . S DGRDAY=DGASK
"RTN","DGPFLF5",99,0)
 . I DGASK=0 D  ;don't ask notification/review group when review freq = 0
"RTN","DGPFLF5",100,0)
 . . S DGPFLF("NOTIDAYS")=0_U_0
"RTN","DGPFLF5",101,0)
 . . S DGPFLF("REVGRP")=""_U_""
"RTN","DGPFLF5",102,0)
 . . ;
"RTN","DGPFLF5",103,0)
 . E  D  Q:DGABORT
"RTN","DGPFLF5",104,0)
 . . ;
"RTN","DGPFLF5",105,0)
 . . ;-- prompt for notification days
"RTN","DGPFLF5",106,0)
 . . S DGDA=$P($G(DGPFLF("NOTIDAYS")),U,2)
"RTN","DGPFLF5",107,0)
 . . S DGASK=$$ANSWER^DGPFUT("Enter the Notification Days",DGDA,"26.11,.05^^K:$L(X)>4!(X[""."")!(X>DGRDAY) X")
"RTN","DGPFLF5",108,0)
 . . I DGASK<0 S DGABORT=1 Q
"RTN","DGPFLF5",109,0)
 . . S DGPFLF("NOTIDAYS")=DGASK_U_DGASK
"RTN","DGPFLF5",110,0)
 . . ;
"RTN","DGPFLF5",111,0)
 . . S DGQ=0
"RTN","DGPFLF5",112,0)
 . . F  D  Q:(DGQ!DGABORT)
"RTN","DGPFLF5",113,0)
 . . . ;-- prompt for review mail group name, optional entry
"RTN","DGPFLF5",114,0)
 . . . S DGDA=$P($G(DGPFLF("REVGRP")),U,2)
"RTN","DGPFLF5",115,0)
 . . . S DGASK=$$ANSWER^DGPFUT("Enter the Review Mail Group",DGDA,"26.11,.06r")
"RTN","DGPFLF5",116,0)
 . . . I DGASK<0 S DGABORT=1 Q
"RTN","DGPFLF5",117,0)
 . . . I DGASK'>0 D  Q
"RTN","DGPFLF5",118,0)
 . . . . W !,"   >>> You've entered the Review Frequency and Notification Days,"
"RTN","DGPFLF5",119,0)
 . . . . W !,"       now enter a Review Mail Group or abort this process.",*7
"RTN","DGPFLF5",120,0)
 . . . . I '$$CONTINUE^DGPFUT() S DGABORT=1
"RTN","DGPFLF5",121,0)
 . . . ;
"RTN","DGPFLF5",122,0)
 . . . S DGPFLF("REVGRP")=DGASK_U_$$EXTERNAL^DILFD(26.11,.06,"F",DGASK)
"RTN","DGPFLF5",123,0)
 . . . S DGQ=1  ;set entry, quit
"RTN","DGPFLF5",124,0)
 . ;
"RTN","DGPFLF5",125,0)
 . ;-- prompt for associated TIU PN Title
"RTN","DGPFLF5",126,0)
 . S DGDA=$P($G(DGPFLF("TIUTITLE")),U,2),DGQ=0
"RTN","DGPFLF5",127,0)
 . S DGTITLE=$P($G(DGPFLF("TIUTITLE")),U)
"RTN","DGPFLF5",128,0)
 . S DGASK=$$ANSWER^DGPFUT("Enter the Progress Note Title",DGDA,"26.11,.07r")
"RTN","DGPFLF5",129,0)
 . I DGASK<0 S DGABORT=1 Q
"RTN","DGPFLF5",130,0)
 . ;
"RTN","DGPFLF5",131,0)
 . ; Do not allow the title to change using the following logic:
"RTN","DGPFLF5",132,0)
 . ; - if the existing progress note title changes,
"RTN","DGPFLF5",133,0)
 . ;    and there are patients assigned to the record flag name,
"RTN","DGPFLF5",134,0)
 . ;     and there are any linked TIU progress notes on any patients
"RTN","DGPFLF5",135,0)
 . ;      assignment history record
"RTN","DGPFLF5",136,0)
 . ;
"RTN","DGPFLF5",137,0)
 . I DGASK'=DGTITLE D
"RTN","DGPFLF5",138,0)
 . . I $$FNDTITLE^DGPFAPI1(DGASK) S DGQ=1  ;should never happen...but
"RTN","DGPFLF5",139,0)
 . . I 'DGQ,DGTITLE,DGACNT D
"RTN","DGPFLF5",140,0)
 . . . ; check all DFN's assigned to the record flag
"RTN","DGPFLF5",141,0)
 . . . I $$CKTIUPN^DGPFLF6(DGTITLE,DGARRAY) S DGQ=1
"RTN","DGPFLF5",142,0)
 . . I DGQ D  Q
"RTN","DGPFLF5",143,0)
 . . . W !!,"   >>> Unable to edit, there are Progress Note(s) associated with a",!,"       patient's PRF Assignment action.",!,*7
"RTN","DGPFLF5",144,0)
 . . ;
"RTN","DGPFLF5",145,0)
 . . ; ok to add or change the TIU Progress Note Title
"RTN","DGPFLF5",146,0)
 . . S DGPFLF("TIUTITLE")=DGASK_U_$$EXTERNAL^DILFD(26.11,.07,"F",DGASK)
"RTN","DGPFLF5",147,0)
 . ;
"RTN","DGPFLF5",148,0)
 . Q:DGABORT
"RTN","DGPFLF5",149,0)
 . ;
"RTN","DGPFLF5",150,0)
 . ;-- ask user if they want to edit the flag description text
"RTN","DGPFLF5",151,0)
 . I $$ANSWER^DGPFUT("Would you like to edit the description of this record flag","NO","Y")>0 D  Q:DGABORT
"RTN","DGPFLF5",152,0)
 . . S DGCKWP=0 K DGERR
"RTN","DGPFLF5",153,0)
 . . S DGWPROOT=$NA(^TMP($J,"DGPFDESC"))
"RTN","DGPFLF5",154,0)
 . . K @DGWPROOT
"RTN","DGPFLF5",155,0)
 . . S DGDA=$$GET1^DIQ(26.11,$P(DGIDXIEN,";"),"1","Z",DGWPROOT,"DGERR")
"RTN","DGPFLF5",156,0)
 . . I $D(DGERR)!(DGDA="") S DGABORT=1 D  Q
"RTN","DGPFLF5",157,0)
 . . . W !,"An error has occurred while trying to retrieve the Flag Description Text.",*7
"RTN","DGPFLF5",158,0)
 . . F  D  Q:(DGCKWP!DGABORT)
"RTN","DGPFLF5",159,0)
 . . . S DIC=$$OREF^DILF(DGWPROOT)
"RTN","DGPFLF5",160,0)
 . . . S DIWETXT="Patient Record Flag - Flag Description Text"
"RTN","DGPFLF5",161,0)
 . . . S DIWESUB="Flag Description Text"
"RTN","DGPFLF5",162,0)
 . . . S DWLW=75 ;max # chars allowed to be stored on WP global node
"RTN","DGPFLF5",163,0)
 . . . S DWPK=1  ;if line editor, don't join line
"RTN","DGPFLF5",164,0)
 . . . D EN^DIWE
"RTN","DGPFLF5",165,0)
 . . . I $$CKWP^DGPFUT(DGWPROOT) S DGCKWP=1 Q
"RTN","DGPFLF5",166,0)
 . . . W !,"Flag Description Text is required!",!,*7
"RTN","DGPFLF5",167,0)
 . . . I '$$CONTINUE^DGPFUT() S DGABORT=1 K @DGWPROOT
"RTN","DGPFLF5",168,0)
 . . ;
"RTN","DGPFLF5",169,0)
 . . ;-- quit if required flag description not entered
"RTN","DGPFLF5",170,0)
 . . Q:DGABORT
"RTN","DGPFLF5",171,0)
 . . ;
"RTN","DGPFLF5",172,0)
 . . ;-- place flag description text into assignment array
"RTN","DGPFLF5",173,0)
 . . I DGCKWP D
"RTN","DGPFLF5",174,0)
 . . . K DGPFLF("DESC")
"RTN","DGPFLF5",175,0)
 . . . M DGPFLF("DESC")=@DGWPROOT
"RTN","DGPFLF5",176,0)
 . . . K @DGWPROOT
"RTN","DGPFLF5",177,0)
 . ;
"RTN","DGPFLF5",178,0)
 . Q:DGABORT
"RTN","DGPFLF5",179,0)
 . ;
"RTN","DGPFLF5",180,0)
 . ;-- have user enter edit reason (required)
"RTN","DGPFLF5",181,0)
 . S DGCKWP=0
"RTN","DGPFLF5",182,0)
 . S DGWPROOT=$NA(^TMP($J,"DGPFREASON"))
"RTN","DGPFLF5",183,0)
 . K @DGWPROOT
"RTN","DGPFLF5",184,0)
 . F  D  Q:(DGCKWP!DGABORT)
"RTN","DGPFLF5",185,0)
 . . W !!,"Enter the reason for editing this record flag:"  ;needed for line editor
"RTN","DGPFLF5",186,0)
 . . S DIC=$$OREF^DILF(DGWPROOT)
"RTN","DGPFLF5",187,0)
 . . S DIWETXT="Patient Record Flag - Edit Reason Text"
"RTN","DGPFLF5",188,0)
 . . S DIWESUB="Edit Reason Text"
"RTN","DGPFLF5",189,0)
 . . S DWLW=75 ;max # chars allowed to be stored on WP global node
"RTN","DGPFLF5",190,0)
 . . S DWPK=1  ;if line editor, don't join line
"RTN","DGPFLF5",191,0)
 . . D EN^DIWE
"RTN","DGPFLF5",192,0)
 . . I $$CKWP^DGPFUT(DGWPROOT) S DGCKWP=1 Q
"RTN","DGPFLF5",193,0)
 . . W !,"Edit Reason Text is required!",!,*7
"RTN","DGPFLF5",194,0)
 . . I '$$CONTINUE^DGPFUT() S DGABORT=1 K @DGWPROOT
"RTN","DGPFLF5",195,0)
 . ;
"RTN","DGPFLF5",196,0)
 . Q:DGABORT
"RTN","DGPFLF5",197,0)
 . I DGCKWP M DGPFLH("REASON")=@DGWPROOT K @DGWPROOT
"RTN","DGPFLF5",198,0)
 . ;
"RTN","DGPFLF5",199,0)
 . S:'DGCKWP DGABORT=1
"RTN","DGPFLF5",200,0)
 ;
"RTN","DGPFLF5",201,0)
 I DGACNT K @DGARRAY
"RTN","DGPFLF5",202,0)
 Q
"RTN","DGPFLF6")
0^34^B24356570
"RTN","DGPFLF6",1,0)
DGPFLF6 ;ALB/RPM - PRF FLAG MANAGEMENT LM SUB-ROUTINE ; 4/19/04 4:25pm
"RTN","DGPFLF6",2,0)
 ;;5.3;Registration;**425,554**;Aug 23, 1993
"RTN","DGPFLF6",3,0)
 ;
"RTN","DGPFLF6",4,0)
 Q
"RTN","DGPFLF6",5,0)
 ;
"RTN","DGPFLF6",6,0)
PRININV(DGFIEN,DGPFLF) ;Prompt for principle investigators
"RTN","DGPFLF6",7,0)
 ;
"RTN","DGPFLF6",8,0)
 ;  Input:
"RTN","DGPFLF6",9,0)
 ;    DGFIEN - (optional) Pointer to PRF LOCAL FLAG (#26.11) file.
"RTN","DGPFLF6",10,0)
 ;                        [default=0]
"RTN","DGPFLF6",11,0)
 ;    DGPFLF - Flag data array
"RTN","DGPFLF6",12,0)
 ;
"RTN","DGPFLF6",13,0)
 ;  Output:
"RTN","DGPFLF6",14,0)
 ;    Function Value - 1 on success, 0 when user enters "^"
"RTN","DGPFLF6",15,0)
 ;    DGPFLF("PRININV") - Array of principal investigators
"RTN","DGPFLF6",16,0)
 ;
"RTN","DGPFLF6",17,0)
 N DGASK   ;answer from prompt as a pointer to NEW PERSON (#200) file 
"RTN","DGPFLF6",18,0)
 N DGCNT   ;place holder for new entries
"RTN","DGPFLF6",19,0)
 N DGDA    ;default answer for prompt
"RTN","DGPFLF6",20,0)
 N DGLAST  ;last entry in field entry array
"RTN","DGPFLF6",21,0)
 N DGLKUP  ;principle investigator dynamic "B" index
"RTN","DGPFLF6",22,0)
 N DGNEWPI  ;principal investigator in FM external form
"RTN","DGPFLF6",23,0)
 N DGORIG  ;principle investigator unmodified "B" index
"RTN","DGPFLF6",24,0)
 N DGPREV  ;next to last entry in field entry array
"RTN","DGPFLF6",25,0)
 N DGQUIT  ;loop termination flag
"RTN","DGPFLF6",26,0)
 N DGRSLT  ;function value
"RTN","DGPFLF6",27,0)
 ;
"RTN","DGPFLF6",28,0)
 S DGFIEN=+$G(DGFIEN)  ;will be zero for 'Add Flag'
"RTN","DGPFLF6",29,0)
 ;
"RTN","DGPFLF6",30,0)
 ;build lookup and "on-file" array
"RTN","DGPFLF6",31,0)
 M DGORIG=^DGPF(26.11,DGFIEN,2,"B")
"RTN","DGPFLF6",32,0)
 M DGLKUP=DGORIG
"RTN","DGPFLF6",33,0)
 ;
"RTN","DGPFLF6",34,0)
 S DGRSLT=1
"RTN","DGPFLF6",35,0)
 S DGQUIT=0
"RTN","DGPFLF6",36,0)
 S (DGLAST,DGCNT)=+$O(DGPFLF("PRININV",""),-1)
"RTN","DGPFLF6",37,0)
 ;
"RTN","DGPFLF6",38,0)
 ;set default answer
"RTN","DGPFLF6",39,0)
 S DGDA=$P($G(DGPFLF("PRININV",DGLAST,0)),U,2)
"RTN","DGPFLF6",40,0)
 ;
"RTN","DGPFLF6",41,0)
 F  D  Q:DGQUIT
"RTN","DGPFLF6",42,0)
 . S DGASK=$$ANSWER^DGPFUT("Enter the Principal Investigator(s)",DGDA,"26.112,.01")
"RTN","DGPFLF6",43,0)
 . ;
"RTN","DGPFLF6",44,0)
 . ;stop prompting if user enters "^" or times out
"RTN","DGPFLF6",45,0)
 . I DGASK=-1 S DGQUIT=1,DGRSLT=0 Q
"RTN","DGPFLF6",46,0)
 . ;
"RTN","DGPFLF6",47,0)
 . ;stop prompting if user accepts default entry
"RTN","DGPFLF6",48,0)
 . I DGASK=$P($G(DGPFLF("PRININV",DGLAST,0)),U,1)!(DGASK="") S DGQUIT=1 Q
"RTN","DGPFLF6",49,0)
 . ;
"RTN","DGPFLF6",50,0)
 . ;perform lookup - re-prompt with new selection when entry exists 
"RTN","DGPFLF6",51,0)
 . I $D(DGLKUP(DGASK)) D  Q
"RTN","DGPFLF6",52,0)
 . . S DGLAST=+$O(DGLKUP(DGASK,0))
"RTN","DGPFLF6",53,0)
 . . S DGDA=$P(DGPFLF("PRININV",DGLAST,0),U,2)
"RTN","DGPFLF6",54,0)
 . ;
"RTN","DGPFLF6",55,0)
 . ;process delete - remove entry from lookup array and move last pointer
"RTN","DGPFLF6",56,0)
 . ;                 to previous entry in list.  Set the field entry
"RTN","DGPFLF6",57,0)
 . ;                 array value to "@" when the entry is "on-file",
"RTN","DGPFLF6",58,0)
 . ;                 otherwise, remove the field entry array node.
"RTN","DGPFLF6",59,0)
 . I DGASK="@" D  Q
"RTN","DGPFLF6",60,0)
 . . Q:'$D(DGPFLF("PRININV",DGLAST,0))
"RTN","DGPFLF6",61,0)
 . . Q:'$$ANSWER^DGPFUT("Sure you want to delete '"_$P(DGPFLF("PRININV",DGLAST,0),U,2)_"' as a PRINCIPAL INVESTIGATOR","Yes","Y")
"RTN","DGPFLF6",62,0)
 . . K DGLKUP($P(DGPFLF("PRININV",DGLAST,0),U,1))
"RTN","DGPFLF6",63,0)
 . . S DGPREV=+$O(DGPFLF("PRININV",DGLAST),-1)
"RTN","DGPFLF6",64,0)
 . . I $D(DGORIG($P(DGPFLF("PRININV",DGLAST,0),U,1))) D
"RTN","DGPFLF6",65,0)
 . . . S DGPFLF("PRININV",DGLAST,0)="@"
"RTN","DGPFLF6",66,0)
 . . E  D
"RTN","DGPFLF6",67,0)
 . . . K DGPFLF("PRININV",DGLAST,0)
"RTN","DGPFLF6",68,0)
 . . S DGLAST=DGPREV
"RTN","DGPFLF6",69,0)
 . . S DGDA=$P($G(DGPFLF("PRININV",DGLAST,0)),U,2)
"RTN","DGPFLF6",70,0)
 . ;
"RTN","DGPFLF6",71,0)
 . ;process new entry - if we make it here, then the entry is not the
"RTN","DGPFLF6",72,0)
 . ;                    default, does not already exist in the field
"RTN","DGPFLF6",73,0)
 . ;                    entry array and is not a delete.  Add entry
"RTN","DGPFLF6",74,0)
 . ;                    to the lookup array and the field entry array.
"RTN","DGPFLF6",75,0)
 . I DGDA=""!(DGASK'=$P($G(DGPFLF("PRININV",DGLAST,0)),U)) D
"RTN","DGPFLF6",76,0)
 . . S DGNEWPI=$$EXTERNAL^DILFD(26.112,.01,"F",DGASK)
"RTN","DGPFLF6",77,0)
 . . Q:'$$ANSWER^DGPFUT("Are you adding '"_DGNEWPI_"' as a new PRINCIPAL INVESTIGATOR","No","Y")
"RTN","DGPFLF6",78,0)
 . . S DGCNT=DGCNT+1
"RTN","DGPFLF6",79,0)
 . . S DGLKUP(DGASK,DGCNT)=""
"RTN","DGPFLF6",80,0)
 . . S DGPFLF("PRININV",DGCNT,0)=DGASK_U_DGNEWPI
"RTN","DGPFLF6",81,0)
 . . S DGDA=""
"RTN","DGPFLF6",82,0)
 ;
"RTN","DGPFLF6",83,0)
 Q DGRSLT
"RTN","DGPFLF6",84,0)
 ;
"RTN","DGPFLF6",85,0)
ASGNCNT(DGFIEN,DGDFNLST) ;counts existing assignments for a given flag
"RTN","DGPFLF6",86,0)
 ;This function searches for assignments for a given flag IEN and
"RTN","DGPFLF6",87,0)
 ;returns the count of assignments.  An optional array parameter will
"RTN","DGPFLF6",88,0)
 ;be loaded with the DFNs assigned to the flag.
"RTN","DGPFLF6",89,0)
 ;
"RTN","DGPFLF6",90,0)
 ;  Input:
"RTN","DGPFLF6",91,0)
 ;    DGFIEN - (required) Pointer to PRF LOCAL FLAG (#26.11) file or
"RTN","DGPFLF6",92,0)
 ;                        PRF NATIONAL FLAG (#26.15) file.
"RTN","DGPFLF6",93,0)
 ;  DGDFNLST - (optional) Array name to contain list of DFNs
"RTN","DGPFLF6",94,0)
 ;
"RTN","DGPFLF6",95,0)
 ;  Output:
"RTN","DGPFLF6",96,0)
 ;    Function Value - count of existing assignments
"RTN","DGPFLF6",97,0)
 ;  DGDFNLST - Defined only when existing assignments are found.
"RTN","DGPFLF6",98,0)
 ;             Array of DFNs from existing assignments.
"RTN","DGPFLF6",99,0)
 ;             Example:  DGDFNLST(7172421)=assignment IEN
"RTN","DGPFLF6",100,0)
 ;
"RTN","DGPFLF6",101,0)
 N DGCNT  ;function value
"RTN","DGPFLF6",102,0)
 N DGDFN   ;pointer to PATIENT (#2) file
"RTN","DGPFLF6",103,0)
 ;
"RTN","DGPFLF6",104,0)
 S DGCNT=0
"RTN","DGPFLF6",105,0)
 ;
"RTN","DGPFLF6",106,0)
 I $G(DGFIEN)]"",$D(^DGPF(26.13,"AFLAG",DGFIEN)) D
"RTN","DGPFLF6",107,0)
 . ;
"RTN","DGPFLF6",108,0)
 . ;count the assignments
"RTN","DGPFLF6",109,0)
 . S DGDFN=0
"RTN","DGPFLF6",110,0)
 . F  S DGDFN=$O(^DGPF(26.13,"AFLAG",DGFIEN,DGDFN)) Q:'DGDFN  D
"RTN","DGPFLF6",111,0)
 . . S DGCNT=DGCNT+1
"RTN","DGPFLF6",112,0)
 . . S DGDFNLST(DGDFN)=+$O(^DGPF(26.13,"AFLAG",DGFIEN,DGDFN,0))
"RTN","DGPFLF6",113,0)
 ;
"RTN","DGPFLF6",114,0)
 Q DGCNT
"RTN","DGPFLF6",115,0)
 ;
"RTN","DGPFLF6",116,0)
 ;
"RTN","DGPFLF6",117,0)
CKTIUPN(DGTITLE,DGARRAY) ;check for progress notes linked to a record flag
"RTN","DGPFLF6",118,0)
 ;This function is used to check all assignment history records of
"RTN","DGPFLF6",119,0)
 ;patients that are assigned to a given Record Flag for any existing
"RTN","DGPFLF6",120,0)
 ;associated Progress Note ien values setup.
"RTN","DGPFLF6",121,0)
 ;
"RTN","DGPFLF6",122,0)
 ;If any associated Progress Notes are found, the given Record Flag's
"RTN","DGPFLF6",123,0)
 ;Progress Note Title should not be edited until all the assignment
"RTN","DGPFLF6",124,0)
 ;history records are un-linked from that given record flag.
"RTN","DGPFLF6",125,0)
 ;
"RTN","DGPFLF6",126,0)
 ;  Input:
"RTN","DGPFLF6",127,0)
 ;    DGTITLE - IEN pointer to the TIU DOCUMENT (#8925.1) file
"RTN","DGPFLF6",128,0)
 ;    DGARRAY - Name of temp global closed root reference that
"RTN","DGPFLF6",129,0)
 ;              contains the list of DFNs assigned to record flag
"RTN","DGPFLF6",130,0)
 ;  i.e.  ^TMP("DGPHTIU",564715668,7172421)=assignment IEN of (#26.13)
"RTN","DGPFLF6",131,0)
 ;
"RTN","DGPFLF6",132,0)
 ;  Output:
"RTN","DGPFLF6",133,0)
 ;    Function result - "1" = if any linked Progress Notes are found
"RTN","DGPFLF6",134,0)
 ;                    - "0" = if none found
"RTN","DGPFLF6",135,0)
 ;
"RTN","DGPFLF6",136,0)
 N DGRSLT  ;function output - 0 or 1
"RTN","DGPFLF6",137,0)
 N DGDFN   ;pointer to PATIENT (#2) file
"RTN","DGPFLF6",138,0)
 N DGHTIU  ;array of return values for each assignment history record
"RTN","DGPFLF6",139,0)
 N DGI     ;for loop var
"RTN","DGPFLF6",140,0)
 ;
"RTN","DGPFLF6",141,0)
 S DGRSLT=0
"RTN","DGPFLF6",142,0)
 ;
"RTN","DGPFLF6",143,0)
 I $G(DGTITLE),$G(DGARRAY)]"" D
"RTN","DGPFLF6",144,0)
 . ;
"RTN","DGPFLF6",145,0)
 . S DGHTIU=$NA(^TMP("DGHTIU",$J))
"RTN","DGPFLF6",146,0)
 . S DGDFN=0
"RTN","DGPFLF6",147,0)
 . F  S DGDFN=$O(@DGARRAY@(DGDFN)) Q:DGDFN=""  D  Q:DGRSLT
"RTN","DGPFLF6",148,0)
 . . K @DGHTIU
"RTN","DGPFLF6",149,0)
 . . I $$GETHTIU^DGPFAPI1(DGDFN,DGTITLE,DGHTIU) D
"RTN","DGPFLF6",150,0)
 . . . S DGI=""
"RTN","DGPFLF6",151,0)
 . . . F  S DGI=$O(@DGHTIU@("HISTORY",DGI)) Q:DGI=""  D  Q:DGRSLT
"RTN","DGPFLF6",152,0)
 . . . . I $P($G(@DGHTIU@("HISTORY",DGI,"TIUIEN")),U)]"" S DGRSLT=1
"RTN","DGPFLF6",153,0)
 . ;
"RTN","DGPFLF6",154,0)
 . K @DGHTIU
"RTN","DGPFLF6",155,0)
 ;
"RTN","DGPFLF6",156,0)
 Q DGRSLT
"RTN","DGPFLFD1")
0^31^B42648016
"RTN","DGPFLFD1",1,0)
DGPFLFD1 ;ALB/KCL - PRF DISPLAY FLAG DETAIL BUILD LIST AREA ; 6/9/04 2:49pm
"RTN","DGPFLFD1",2,0)
 ;;5.3;Registration;**425,554**;Aug 13, 1993
"RTN","DGPFLFD1",3,0)
 ;
"RTN","DGPFLFD1",4,0)
 ;no direct entry
"RTN","DGPFLFD1",5,0)
 QUIT
"RTN","DGPFLFD1",6,0)
 ;
"RTN","DGPFLFD1",7,0)
EN(DGARY,DGPFIEN,DGCNT) ;Entry point to build flag detail list area.
"RTN","DGPFLFD1",8,0)
 ;
"RTN","DGPFLFD1",9,0)
 ;  Input:
"RTN","DGPFLFD1",10,0)
 ;     DGARY - global array subscript
"RTN","DGPFLFD1",11,0)
 ;   DGPFIEN - IEN of record in PRF NATIONAL FLAG or PRF LOCAL
"RTN","DGPFLFD1",12,0)
 ;             FLAG file [ex: "1;DGPF(26.15,"]
"RTN","DGPFLFD1",13,0)
 ;
"RTN","DGPFLFD1",14,0)
 ; Output:
"RTN","DGPFLFD1",15,0)
 ;    DGCNT - number of lines in the list, pass by reference
"RTN","DGPFLFD1",16,0)
 ;
"RTN","DGPFLFD1",17,0)
 N DGPFF    ;flag array
"RTN","DGPFLFD1",18,0)
 N DGPFFH   ;flag history array
"RTN","DGPFLFD1",19,0)
 N DGFHIENS ;contains flag history ien's
"RTN","DGPFLFD1",20,0)
 N DGFHIEN  ;flag history ien
"RTN","DGPFLFD1",21,0)
 N DGHISCNT ;history record counter
"RTN","DGPFLFD1",22,0)
 N DGLINE   ;line counter
"RTN","DGPFLFD1",23,0)
 N DGSUB    ;subscript of flag history ien's
"RTN","DGPFLFD1",24,0)
 ;
"RTN","DGPFLFD1",25,0)
 ;quit if required input paramater not passed
"RTN","DGPFLFD1",26,0)
 Q:'$G(DGPFIEN)
"RTN","DGPFLFD1",27,0)
 ;
"RTN","DGPFLFD1",28,0)
 ;init variables
"RTN","DGPFLFD1",29,0)
 S (DGCNT,DGLINE,DGHISCNT)=0
"RTN","DGPFLFD1",30,0)
 K DGPFF
"RTN","DGPFLFD1",31,0)
 ;
"RTN","DGPFLFD1",32,0)
 ;get flag into DGPFF array
"RTN","DGPFLFD1",33,0)
 Q:'$$GETFLAG^DGPFUT1(DGPFIEN,.DGPFF)
"RTN","DGPFLFD1",34,0)
 S DGPFF("PTR")=DGPFIEN
"RTN","DGPFLFD1",35,0)
 ;
"RTN","DGPFLFD1",36,0)
 ;build 'Flag Details' list area
"RTN","DGPFLFD1",37,0)
 D FLAGDET(DGARY,.DGPFF,.DGLINE,.DGCNT)
"RTN","DGPFLFD1",38,0)
 ;
"RTN","DGPFLFD1",39,0)
 ;quit if NATIONAL flag, they don't have a history
"RTN","DGPFLFD1",40,0)
 Q:DGPFF("PTR")'["26.11"
"RTN","DGPFLFD1",41,0)
 ;
"RTN","DGPFLFD1",42,0)
 ;set history heading into list area
"RTN","DGPFLFD1",43,0)
 D HISTHDR(DGARY,.DGLINE,.DGCNT)
"RTN","DGPFLFD1",44,0)
 ;
"RTN","DGPFLFD1",45,0)
 ;get all history ien's associated with the flag
"RTN","DGPFLFD1",46,0)
 K DGFHIENS
"RTN","DGPFLFD1",47,0)
 Q:'$$GETALLDT^DGPFALH(+DGPFF("PTR"),.DGFHIENS)
"RTN","DGPFLFD1",48,0)
 ;
"RTN","DGPFLFD1",49,0)
 ;reverse loop through each flag history ien
"RTN","DGPFLFD1",50,0)
 S DGSUB=9999999.999999
"RTN","DGPFLFD1",51,0)
 F  S DGSUB=$O(DGFHIENS(DGSUB),-1) Q:DGSUB=""  D
"RTN","DGPFLFD1",52,0)
 . S DGFHIEN=$G(DGFHIENS(DGSUB))
"RTN","DGPFLFD1",53,0)
 . K DGPFFH
"RTN","DGPFLFD1",54,0)
 . ;- for each ien, get flag history into DGPFFH array
"RTN","DGPFLFD1",55,0)
 . I $$GETHIST^DGPFALH(DGFHIEN,.DGPFFH) D
"RTN","DGPFLFD1",56,0)
 . . ;
"RTN","DGPFLFD1",57,0)
 . . ;-- count of history records
"RTN","DGPFLFD1",58,0)
 . . S DGHISCNT=DGHISCNT+1
"RTN","DGPFLFD1",59,0)
 . . ;
"RTN","DGPFLFD1",60,0)
 . . ;-- build flag history details list area
"RTN","DGPFLFD1",61,0)
 . . D HISTDET(DGARY,.DGPFFH,.DGLINE,DGHISCNT,.DGCNT)
"RTN","DGPFLFD1",62,0)
 ;
"RTN","DGPFLFD1",63,0)
 Q
"RTN","DGPFLFD1",64,0)
 ;
"RTN","DGPFLFD1",65,0)
 ;
"RTN","DGPFLFD1",66,0)
FLAGDET(DGARY,DGPFF,DGLINE,DGCNT) ;This procedure will build the lines of FLAG details in the list area.
"RTN","DGPFLFD1",67,0)
 ;
"RTN","DGPFLFD1",68,0)
 ;  Input:
"RTN","DGPFLFD1",69,0)
 ;    DGARY - global array subscript
"RTN","DGPFLFD1",70,0)
 ;    DGPFF - flag array, pass by reference
"RTN","DGPFLFD1",71,0)
 ;   DGLINE - line counter
"RTN","DGPFLFD1",72,0)
 ;
"RTN","DGPFLFD1",73,0)
 ; Output:
"RTN","DGPFLFD1",74,0)
 ;    DGCNT - number of lines in the list, pass by reference
"RTN","DGPFLFD1",75,0)
 ;
"RTN","DGPFLFD1",76,0)
 ;temp vars used
"RTN","DGPFLFD1",77,0)
 N DGSUB   ;array subscript
"RTN","DGPFLFD1",78,0)
 N DGTEMP  ;temp text holder
"RTN","DGPFLFD1",79,0)
 N DGCOUNT ;principal investigator count
"RTN","DGPFLFD1",80,0)
 ;
"RTN","DGPFLFD1",81,0)
 ;set flag name
"RTN","DGPFLFD1",82,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLFD1",83,0)
 D SET^DGPFLF1(DGARY,DGLINE,"Flag Name: "_$P($G(DGPFF("FLAG")),U,2),11,,,,,.DGCNT)
"RTN","DGPFLFD1",84,0)
 ;
"RTN","DGPFLFD1",85,0)
 ;set flag category
"RTN","DGPFLFD1",86,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLFD1",87,0)
 S DGTEMP=$S(DGPFF("PTR")["26.11":"II (LOCAL)",DGPFF("PTR")["26.15":"I (NATIONAL)",1:"UNKNOWN")
"RTN","DGPFLFD1",88,0)
 D SET^DGPFLF1(DGARY,DGLINE,"Flag Category: "_DGTEMP,7,,,,,.DGCNT)
"RTN","DGPFLFD1",89,0)
 ;
"RTN","DGPFLFD1",90,0)
 ;set flag type
"RTN","DGPFLFD1",91,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLFD1",92,0)
 D SET^DGPFLF1(DGARY,DGLINE,"Flag Type: "_$P($G(DGPFF("TYPE")),U,2),11,,,,,.DGCNT)
"RTN","DGPFLFD1",93,0)
 ;
"RTN","DGPFLFD1",94,0)
 ;set flag status
"RTN","DGPFLFD1",95,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLFD1",96,0)
 D SET^DGPFLF1(DGARY,DGLINE,"Flag Status: "_$P($G(DGPFF("STAT")),U,2),9,,,,,.DGCNT)
"RTN","DGPFLFD1",97,0)
 ;
"RTN","DGPFLFD1",98,0)
 ;set flag review frequency
"RTN","DGPFLFD1",99,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLFD1",100,0)
 D SET^DGPFLF1(DGARY,DGLINE,"Review Freq Days: "_$P($G(DGPFF("REVFREQ")),U,2),4,,,,,.DGCNT)
"RTN","DGPFLFD1",101,0)
 ;
"RTN","DGPFLFD1",102,0)
 ;set notification days
"RTN","DGPFLFD1",103,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLFD1",104,0)
 D SET^DGPFLF1(DGARY,DGLINE,"Notification Days: "_$P($G(DGPFF("NOTIDAYS")),U,2),3,,,,,.DGCNT)
"RTN","DGPFLFD1",105,0)
 ;
"RTN","DGPFLFD1",106,0)
 ;set flag review mail group
"RTN","DGPFLFD1",107,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLFD1",108,0)
 D SET^DGPFLF1(DGARY,DGLINE,"Review Mail Group: "_$P($G(DGPFF("REVGRP")),U,2),3,,,,,.DGCNT)
"RTN","DGPFLFD1",109,0)
 ;
"RTN","DGPFLFD1",110,0)
 ;set associated progress note title
"RTN","DGPFLFD1",111,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLFD1",112,0)
 D SET^DGPFLF1(DGARY,DGLINE,"Progress Note Title: "_$E($P($G(DGPFF("TIUTITLE")),U,2),1,59),1,,,,,.DGCNT)
"RTN","DGPFLFD1",113,0)
 ;
"RTN","DGPFLFD1",114,0)
 ;set if principal investigator(s)
"RTN","DGPFLFD1",115,0)
 I $D(DGPFF("PRININV")) D
"RTN","DGPFLFD1",116,0)
 . S (DGSUB,DGTEMP)=""
"RTN","DGPFLFD1",117,0)
 . S DGCOUNT=1
"RTN","DGPFLFD1",118,0)
 . F  S DGSUB=$O(DGPFF("PRININV",DGSUB)) Q:'DGSUB  D
"RTN","DGPFLFD1",119,0)
 . . Q:$G(DGPFF("PRININV",DGSUB,0))="@"
"RTN","DGPFLFD1",120,0)
 . . I DGCOUNT=1 D
"RTN","DGPFLFD1",121,0)
 . . . S DGLINE=DGLINE+1
"RTN","DGPFLFD1",122,0)
 . . . S DGTEMP="Principal"
"RTN","DGPFLFD1",123,0)
 . . . D SET^DGPFLF1(DGARY,DGLINE,DGTEMP,5,,,,,.DGCNT)
"RTN","DGPFLFD1",124,0)
 . . . S DGLINE=DGLINE+1
"RTN","DGPFLFD1",125,0)
 . . . S DGTEMP="Investigator(s): "_$P($G(DGPFF("PRININV",DGSUB,0)),U,2)
"RTN","DGPFLFD1",126,0)
 . . . D SET^DGPFLF1(DGARY,DGLINE,DGTEMP,5,,,,,.DGCNT)
"RTN","DGPFLFD1",127,0)
 . . I DGCOUNT>1 D
"RTN","DGPFLFD1",128,0)
 . . . S DGTEMP=$P($G(DGPFF("PRININV",DGSUB,0)),U,2)
"RTN","DGPFLFD1",129,0)
 . . . S DGLINE=DGLINE+1
"RTN","DGPFLFD1",130,0)
 . . . D SET^DGPFLF1(DGARY,DGLINE,DGTEMP,22,,,,,.DGCNT)
"RTN","DGPFLFD1",131,0)
 . . S DGCOUNT=DGCOUNT+1
"RTN","DGPFLFD1",132,0)
 ;
"RTN","DGPFLFD1",133,0)
 ;set flag description
"RTN","DGPFLFD1",134,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLFD1",135,0)
 D SET^DGPFLF1(DGARY,DGLINE,"",1,,,,,.DGCNT)
"RTN","DGPFLFD1",136,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLFD1",137,0)
 D SET^DGPFLF1(DGARY,DGLINE,"Flag Description:",1,IORVON,IORVOFF,,,.DGCNT)
"RTN","DGPFLFD1",138,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLFD1",139,0)
 D SET^DGPFLF1(DGARY,DGLINE,"-----------------",1,,,,,.DGCNT)
"RTN","DGPFLFD1",140,0)
 I '$D(DGPFF("DESC",1,0)) D  Q
"RTN","DGPFLFD1",141,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLFD1",142,0)
 . D SET^DGPFLF1(DGARY,DGLINE,"Unknown",1,,,,,.DGCNT)
"RTN","DGPFLFD1",143,0)
 S DGSUB=0,DGTEMP=""
"RTN","DGPFLFD1",144,0)
 F  S DGSUB=$O(DGPFF("DESC",DGSUB)) Q:'DGSUB  D
"RTN","DGPFLFD1",145,0)
 . S DGTEMP=$G(DGPFF("DESC",DGSUB,0))
"RTN","DGPFLFD1",146,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLFD1",147,0)
 . D SET^DGPFLF1(DGARY,DGLINE,DGTEMP,1,,,,,.DGCNT)
"RTN","DGPFLFD1",148,0)
 ;
"RTN","DGPFLFD1",149,0)
 Q
"RTN","DGPFLFD1",150,0)
 ;
"RTN","DGPFLFD1",151,0)
 ;
"RTN","DGPFLFD1",152,0)
HISTDET(DGARY,DGPFFH,DGLINE,DGHISCNT,DGCNT) ;This procedure will build the lines of FLAG HISTORY details in the list area.
"RTN","DGPFLFD1",153,0)
 ;
"RTN","DGPFLFD1",154,0)
 ;  Input:
"RTN","DGPFLFD1",155,0)
 ;     DGARY - global array subscript
"RTN","DGPFLFD1",156,0)
 ;    DGPFFH - flag history array, pass by reference
"RTN","DGPFLFD1",157,0)
 ;    DGLINE - line counter
"RTN","DGPFLFD1",158,0)
 ;  DGHISCNT - history record counter
"RTN","DGPFLFD1",159,0)
 ;
"RTN","DGPFLFD1",160,0)
 ; Output:
"RTN","DGPFLFD1",161,0)
 ;    DGCNT - number of lines in the list, pass by reference
"RTN","DGPFLFD1",162,0)
 ;
"RTN","DGPFLFD1",163,0)
 ;temporary variables used
"RTN","DGPFLFD1",164,0)
 N DGTEMP
"RTN","DGPFLFD1",165,0)
 N DGSUB
"RTN","DGPFLFD1",166,0)
 S DGTEMP=""
"RTN","DGPFLFD1",167,0)
 ;
"RTN","DGPFLFD1",168,0)
 ;set blank line
"RTN","DGPFLFD1",169,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLFD1",170,0)
 D SET^DGPFLF1(DGARY,DGLINE,"",1,,,,,.DGCNT)
"RTN","DGPFLFD1",171,0)
 ;
"RTN","DGPFLFD1",172,0)
 ;add an additional blank line except on the first history
"RTN","DGPFLFD1",173,0)
 I DGHISCNT>1 D
"RTN","DGPFLFD1",174,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLFD1",175,0)
 . D SET^DGPFLF1(DGARY,DGLINE,"",1,,,,,.DGCNT)
"RTN","DGPFLFD1",176,0)
 ;
"RTN","DGPFLFD1",177,0)
 ;set history counter
"RTN","DGPFLFD1",178,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLFD1",179,0)
 S DGTEMP=DGHISCNT_"."
"RTN","DGPFLFD1",180,0)
 D SET^DGPFLF1(DGARY,DGLINE,DGTEMP,1,IORVON,IORVOFF,,,.DGCNT)
"RTN","DGPFLFD1",181,0)
 ;
"RTN","DGPFLFD1",182,0)
 ;set edit date/time
"RTN","DGPFLFD1",183,0)
 D SET^DGPFLF1(DGARY,DGLINE,"Enter/Edit On: "_$$FDTTM^VALM1($P($G(DGPFFH("ENTERDT")),U)),14,IORVON,IORVOFF,,,.DGCNT)
"RTN","DGPFLFD1",184,0)
 ;
"RTN","DGPFLFD1",185,0)
 ;set entered by
"RTN","DGPFLFD1",186,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLFD1",187,0)
 D SET^DGPFLF1(DGARY,DGLINE,"Enter/Edit By: "_$P($G(DGPFFH("ENTERBY")),U,2),14,,,,,.DGCNT)
"RTN","DGPFLFD1",188,0)
 ;
"RTN","DGPFLFD1",189,0)
 ;set blank line
"RTN","DGPFLFD1",190,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLFD1",191,0)
 D SET^DGPFLF1(DGARY,DGLINE,"",1,,,,,.DGCNT)
"RTN","DGPFLFD1",192,0)
 ;
"RTN","DGPFLFD1",193,0)
 ;set edit reason text
"RTN","DGPFLFD1",194,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLFD1",195,0)
 D SET^DGPFLF1(DGARY,DGLINE,"Reason For Flag Enter/Edit:",1,,,,,.DGCNT)
"RTN","DGPFLFD1",196,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLFD1",197,0)
 D SET^DGPFLF1(DGARY,DGLINE,"---------------------------",1,,,,,.DGCNT)
"RTN","DGPFLFD1",198,0)
 I $D(DGPFFH("REASON",1,0)) D
"RTN","DGPFLFD1",199,0)
 . S DGSUB=0,DGTEMP=""
"RTN","DGPFLFD1",200,0)
 . F  S DGSUB=$O(DGPFFH("REASON",DGSUB)) Q:'DGSUB  D
"RTN","DGPFLFD1",201,0)
 .. S DGTEMP=$G(DGPFFH("REASON",DGSUB,0))
"RTN","DGPFLFD1",202,0)
 .. S DGLINE=DGLINE+1
"RTN","DGPFLFD1",203,0)
 .. D SET^DGPFLF1(DGARY,DGLINE,DGTEMP,1,,,,,.DGCNT)
"RTN","DGPFLFD1",204,0)
 E  D
"RTN","DGPFLFD1",205,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLFD1",206,0)
 . D SET^DGPFLF1(DGARY,DGLINE,"Unknown",1,,,,,.DGCNT)
"RTN","DGPFLFD1",207,0)
 ;
"RTN","DGPFLFD1",208,0)
 Q
"RTN","DGPFLFD1",209,0)
 ;
"RTN","DGPFLFD1",210,0)
 ;
"RTN","DGPFLFD1",211,0)
HISTHDR(DGARY,DGLINE,DGCNT) ;Set history heading into list area.
"RTN","DGPFLFD1",212,0)
 ;
"RTN","DGPFLFD1",213,0)
 ;  Input:
"RTN","DGPFLFD1",214,0)
 ;    DGARY - global array subscript
"RTN","DGPFLFD1",215,0)
 ;   DGLINE - line counter
"RTN","DGPFLFD1",216,0)
 ;
"RTN","DGPFLFD1",217,0)
 ; Output:
"RTN","DGPFLFD1",218,0)
 ;    DGCNT - number of lines in the list, pass by reference
"RTN","DGPFLFD1",219,0)
 ;
"RTN","DGPFLFD1",220,0)
 ;set blank line
"RTN","DGPFLFD1",221,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLFD1",222,0)
 D SET^DGPFLF1(DGARY,DGLINE,"",1,,,,,.DGCNT)
"RTN","DGPFLFD1",223,0)
 ;
"RTN","DGPFLFD1",224,0)
 ;set hist heading
"RTN","DGPFLFD1",225,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLFD1",226,0)
 D SET^DGPFLF1(DGARY,DGLINE,$TR($J("",80)," ","="),1,,,,,.DGCNT)
"RTN","DGPFLFD1",227,0)
 D SET^DGPFLF1(DGARY,DGLINE,"<Flag Enter/Edit History>",28,IORVON,IORVOFF,,,.DGCNT)
"RTN","DGPFLFD1",228,0)
 ;
"RTN","DGPFLFD1",229,0)
 Q
"RTN","DGPFLMA2")
0^24^B33213840
"RTN","DGPFLMA2",1,0)
DGPFLMA2 ;ALB/KCL - PRF ASSIGNMENT LM PROTOCOL ACTIONS CONT. ; 1/13/05 1:21pm
"RTN","DGPFLMA2",2,0)
 ;;5.3;Registration;**425,623,554**;Aug 13, 1993
"RTN","DGPFLMA2",3,0)
 ;
"RTN","DGPFLMA2",4,0)
 ;no direct entry
"RTN","DGPFLMA2",5,0)
 QUIT
"RTN","DGPFLMA2",6,0)
 ;
"RTN","DGPFLMA2",7,0)
AF ;Entry point for DGPF ASSIGN FLAG action protocol.
"RTN","DGPFLMA2",8,0)
 ;
"RTN","DGPFLMA2",9,0)
 ;  Input:
"RTN","DGPFLMA2",10,0)
 ;     DGDFN - pointer to patient in PATIENT (#2) file
"RTN","DGPFLMA2",11,0)
 ;
"RTN","DGPFLMA2",12,0)
 ; Output:
"RTN","DGPFLMA2",13,0)
 ;   VALMBCK - 'R' = refresh screen
"RTN","DGPFLMA2",14,0)
 ;
"RTN","DGPFLMA2",15,0)
 N DIC,DGWPROOT,DIWETXT,DIWESUB,DWLW,DWPK  ;input vars for EN^DIWE call
"RTN","DGPFLMA2",16,0)
 N DGABORT   ;abort flag for entering assignment narrative
"RTN","DGPFLMA2",17,0)
 N DGOK      ;ok flag for entering assignment narrative
"RTN","DGPFLMA2",18,0)
 N DGPFA     ;assignment array
"RTN","DGPFLMA2",19,0)
 N DGPFAH    ;assignment history array
"RTN","DGPFLMA2",20,0)
 N DGRDAT    ;results of review date calculation
"RTN","DGPFLMA2",21,0)
 N DGRESULT  ;result of STOALL api call
"RTN","DGPFLMA2",22,0)
 N DGREASON  ;reason if unable to add new assignment
"RTN","DGPFLMA2",23,0)
 N DGPFERR   ;if error returned from STOALL api call
"RTN","DGPFLMA2",24,0)
 ;
"RTN","DGPFLMA2",25,0)
 ;set screen to full scrolling region
"RTN","DGPFLMA2",26,0)
 D FULL^VALM1
"RTN","DGPFLMA2",27,0)
 ;
"RTN","DGPFLMA2",28,0)
 D  ;drop out of do block on failure
"RTN","DGPFLMA2",29,0)
 . ;
"RTN","DGPFLMA2",30,0)
 . ;-security key check
"RTN","DGPFLMA2",31,0)
 . I '$D(^XUSEC("DGPF RECORD FLAG ASSIGNMENT",DUZ)) D  Q
"RTN","DGPFLMA2",32,0)
 . . W !!?2,">>> '"_$P($G(XQORNOD(0)),U,3)_"' action not allowed at this point.",*7
"RTN","DGPFLMA2",33,0)
 . . W !?6,"You do not have the appropriate Security Key."
"RTN","DGPFLMA2",34,0)
 . . D PAUSE^VALM1
"RTN","DGPFLMA2",35,0)
 . ;
"RTN","DGPFLMA2",36,0)
 . ;-is action selection allowed?
"RTN","DGPFLMA2",37,0)
 . I '$G(DGDFN) D  Q
"RTN","DGPFLMA2",38,0)
 . . W !!?2,">>> '"_$P($G(XQORNOD(0)),U,3)_"' action not allowed at this point.",*7
"RTN","DGPFLMA2",39,0)
 . . W !?6,"A patient has not been selected."
"RTN","DGPFLMA2",40,0)
 . . D PAUSE^VALM1
"RTN","DGPFLMA2",41,0)
 . ;
"RTN","DGPFLMA2",42,0)
 . ;-init assignment and history arrays
"RTN","DGPFLMA2",43,0)
 . K DGPFA,DGPFAH
"RTN","DGPFLMA2",44,0)
 . ;
"RTN","DGPFLMA2",45,0)
 . ;-get patient DFN into assignment array
"RTN","DGPFLMA2",46,0)
 . S DGPFA("DFN")=$G(DGDFN)
"RTN","DGPFLMA2",47,0)
 . Q:'DGPFA("DFN")
"RTN","DGPFLMA2",48,0)
 . ;
"RTN","DGPFLMA2",49,0)
 . ;-select flag for assignment, quit if not selected
"RTN","DGPFLMA2",50,0)
 . S DGPFA("FLAG")=$$ANSWER^DGPFUT("Select a flag for this assignment","","26.13,.02")
"RTN","DGPFLMA2",51,0)
 . Q:(DGPFA("FLAG")'>0)
"RTN","DGPFLMA2",52,0)
 . ;
"RTN","DGPFLMA2",53,0)
 . ;-check if ok to add new assignment
"RTN","DGPFLMA2",54,0)
 . K DGREASON
"RTN","DGPFLMA2",55,0)
 . I '$$ADDOK^DGPFAA2(DGPFA("DFN"),$P(DGPFA("FLAG"),U),.DGREASON) D  Q
"RTN","DGPFLMA2",56,0)
 . . W !!,"Unable to add new assignment..."_$$LOW^XLFSTR($G(DGREASON))
"RTN","DGPFLMA2",57,0)
 . . D PAUSE^VALM1
"RTN","DGPFLMA2",58,0)
 . ;
"RTN","DGPFLMA2",59,0)
 . ;-if local flag assignment, owner site = current site
"RTN","DGPFLMA2",60,0)
 . ;-else if nat'l flag assignment, prompt for owner site
"RTN","DGPFLMA2",61,0)
 . I DGPFA("FLAG")["26.11" S DGPFA("OWNER")=$P($$SITE^VASITE,U)
"RTN","DGPFLMA2",62,0)
 . E  S DGPFA("OWNER")=$$ANSWER^DGPFUT("Enter Owner Site",$P($$SITE^VASITE,U,2),"P^4:EMZ")
"RTN","DGPFLMA2",63,0)
 . Q:(DGPFA("OWNER")'>0)
"RTN","DGPFLMA2",64,0)
 . ;
"RTN","DGPFLMA2",65,0)
 . ;-prompt user for approved by person, quit if not selected
"RTN","DGPFLMA2",66,0)
 . S DGPFAH("APPRVBY")=$$ANSWER^DGPFUT("Approved By","","P^200:EMZ")
"RTN","DGPFLMA2",67,0)
 . Q:(DGPFAH("APPRVBY")'>0)
"RTN","DGPFLMA2",68,0)
 . ;
"RTN","DGPFLMA2",69,0)
 . ;-have user enter assignment narrative text (required)
"RTN","DGPFLMA2",70,0)
 . S (DGABORT,DGOK)=0
"RTN","DGPFLMA2",71,0)
 . S DGWPROOT=$NA(^TMP($J,"DGPFNARR"))
"RTN","DGPFLMA2",72,0)
 . K @DGWPROOT
"RTN","DGPFLMA2",73,0)
 . F  D  Q:(DGOK!DGABORT)
"RTN","DGPFLMA2",74,0)
 . . W !!,"Enter Narrative Text for this record flag assignment:" ;needed for line editor
"RTN","DGPFLMA2",75,0)
 . . S DIC=$$OREF^DILF(DGWPROOT)
"RTN","DGPFLMA2",76,0)
 . . S DIWETXT="Patient Record Flag - Assignment Narrative Text"
"RTN","DGPFLMA2",77,0)
 . . S DIWESUB="Assignment Narrative Text"
"RTN","DGPFLMA2",78,0)
 . . S DWLW=75 ;max # of chars allowed to be stored on WP global node
"RTN","DGPFLMA2",79,0)
 . . S DWPK=1  ;if line editor, don't join lines
"RTN","DGPFLMA2",80,0)
 . . D EN^DIWE
"RTN","DGPFLMA2",81,0)
 . . I $$CKWP^DGPFUT(DGWPROOT) S DGOK=1 Q
"RTN","DGPFLMA2",82,0)
 . . W !,"Assignment Narrative Text is required!",*7
"RTN","DGPFLMA2",83,0)
 . . I '$$CONTINUE^DGPFUT() S DGABORT=1
"RTN","DGPFLMA2",84,0)
 . . ;
"RTN","DGPFLMA2",85,0)
 . ;-quit if required assignment narrative not entered
"RTN","DGPFLMA2",86,0)
 . Q:$G(DGABORT)
"RTN","DGPFLMA2",87,0)
 . ;
"RTN","DGPFLMA2",88,0)
 . ;-place assignment narrative text into assignment array
"RTN","DGPFLMA2",89,0)
 . M DGPFA("NARR")=@DGWPROOT K @DGWPROOT
"RTN","DGPFLMA2",90,0)
 . ;
"RTN","DGPFLMA2",91,0)
 . ;-setup remaining assignment and history array nodes for filing
"RTN","DGPFLMA2",92,0)
 . S DGPFA("STATUS")=1  ;active
"RTN","DGPFLMA2",93,0)
 . S DGPFA("ORIGSITE")=$P($$SITE^VASITE(),U)  ;current site
"RTN","DGPFLMA2",94,0)
 . S DGPFAH("ASSIGNDT")=$$NOW^XLFDT()  ;current date/time
"RTN","DGPFLMA2",95,0)
 . S DGPFAH("ACTION")=1  ;new assignment
"RTN","DGPFLMA2",96,0)
 . S DGPFAH("ENTERBY")=DUZ  ;current user
"RTN","DGPFLMA2",97,0)
 . S DGPFAH("COMMENT",1,0)="New record flag assignment."
"RTN","DGPFLMA2",98,0)
 . ;
"RTN","DGPFLMA2",99,0)
 . ;-calculate the default review date
"RTN","DGPFLMA2",100,0)
 . S DGRDAT=$$GETRDT^DGPFAA3($P(DGPFA("FLAG"),U),DGPFAH("ASSIGNDT"))
"RTN","DGPFLMA2",101,0)
 . ;
"RTN","DGPFLMA2",102,0)
 . ;-prompt for review date on valid default review date, otherwise null
"RTN","DGPFLMA2",103,0)
 . I DGRDAT>0 D
"RTN","DGPFLMA2",104,0)
 . . S DGPFA("REVIEWDT")=$$ANSWER^DGPFUT("Enter Review Date",$$FMTE^XLFDT(DGRDAT,"5D"),"D^"_DT_":"_DGRDAT_":EX")
"RTN","DGPFLMA2",105,0)
 . E  S DGPFA("REVIEWDT")=""
"RTN","DGPFLMA2",106,0)
 . Q:DGPFA("REVIEWDT")<0
"RTN","DGPFLMA2",107,0)
 . ;
"RTN","DGPFLMA2",108,0)
 . ;-display flag assignment review screen to user
"RTN","DGPFLMA2",109,0)
 . D REVIEW^DGPFUT3(.DGPFA,.DGPFAH,"",XQY0,XQORNOD(0))
"RTN","DGPFLMA2",110,0)
 . ;
"RTN","DGPFLMA2",111,0)
 . Q:$$ANSWER^DGPFUT("Would you like to file this new record flag assignment","YES","Y")'>0
"RTN","DGPFLMA2",112,0)
 . ;
"RTN","DGPFLMA2",113,0)
 . ;-file the assignment and history using STOALL api
"RTN","DGPFLMA2",114,0)
 . W !,"Filing the patient's new record flag assignment..."
"RTN","DGPFLMA2",115,0)
 . S DGRESULT=$$STOALL^DGPFAA(.DGPFA,.DGPFAH,.DGPFERR)
"RTN","DGPFLMA2",116,0)
 . W !,"   >>> Assignment was "_$S(+$G(DGRESULT):"filed successfully.",1:"not filed successfully.")
"RTN","DGPFLMA2",117,0)
 . ;
"RTN","DGPFLMA2",118,0)
 . ;-- send HL7 message if adding an assignment to a NATIONAL flag
"RTN","DGPFLMA2",119,0)
 . I $G(DGRESULT),DGPFA("FLAG")["26.15",$$SNDORU^DGPFHLS(+DGRESULT) D
"RTN","DGPFLMA2",120,0)
 . . W !,"   >>> HL7 message sent...updating patient's sites of record."
"RTN","DGPFLMA2",121,0)
 . ;
"RTN","DGPFLMA2",122,0)
 . D PAUSE^VALM1
"RTN","DGPFLMA2",123,0)
 . ;
"RTN","DGPFLMA2",124,0)
 . ;-re-build list of flag assignments for patient
"RTN","DGPFLMA2",125,0)
 . D BLDLIST^DGPFLMU(DGDFN)
"RTN","DGPFLMA2",126,0)
 ;
"RTN","DGPFLMA2",127,0)
 ;return to LM (refresh screen)
"RTN","DGPFLMA2",128,0)
 S VALMBCK="R"
"RTN","DGPFLMA2",129,0)
 ;
"RTN","DGPFLMA2",130,0)
 Q
"RTN","DGPFLMA3")
0^25^B75304468
"RTN","DGPFLMA3",1,0)
DGPFLMA3 ;ALB/KCL - PRF ASSIGNMENT LM PROTOCOL ACTIONS CONT. ; 5/5/05 12:39pm
"RTN","DGPFLMA3",2,0)
 ;;5.3;Registration;**425,623,554**;Aug 13, 1993
"RTN","DGPFLMA3",3,0)
 ;
"RTN","DGPFLMA3",4,0)
 ;no direct entry
"RTN","DGPFLMA3",5,0)
 QUIT
"RTN","DGPFLMA3",6,0)
 ;
"RTN","DGPFLMA3",7,0)
EF ;Entry point for DGPF EDIT FLAG ASSIGNMENT action protocol.
"RTN","DGPFLMA3",8,0)
 ;
"RTN","DGPFLMA3",9,0)
 ;  Input: None
"RTN","DGPFLMA3",10,0)
 ;
"RTN","DGPFLMA3",11,0)
 ; Output:
"RTN","DGPFLMA3",12,0)
 ;   VALMBCK - 'R' = refresh screen
"RTN","DGPFLMA3",13,0)
 ;
"RTN","DGPFLMA3",14,0)
 ;input vars for EN^DIWE call
"RTN","DGPFLMA3",15,0)
 N DIC,DGWPROOT,DIWETXT,DIWESUB,DWLW,DWPK
"RTN","DGPFLMA3",16,0)
 N DGAROOT   ;assignment narrative word processing root
"RTN","DGPFLMA3",17,0)
 N DGCROOT   ;assignment history comment word processing root
"RTN","DGPFLMA3",18,0)
 N DGABORT   ;abort flag for entering assignment narrative
"RTN","DGPFLMA3",19,0)
 N DGASK     ;return value from $$ANSWER^DGPFUT call
"RTN","DGPFLMA3",20,0)
 N DGOK      ;ok flag for entering assignment narrative
"RTN","DGPFLMA3",21,0)
 N DGCODE    ;action code
"RTN","DGPFLMA3",22,0)
 N DGDFN     ;pointer to patient in PATIENT (#2) file
"RTN","DGPFLMA3",23,0)
 N DGIEN     ;assignment ien
"RTN","DGPFLMA3",24,0)
 N DGPFA     ;assignment array
"RTN","DGPFLMA3",25,0)
 N DGPFAH    ;assignment history array
"RTN","DGPFLMA3",26,0)
 N DGPFERR   ;if error returned from STOALL api call
"RTN","DGPFLMA3",27,0)
 N DGQ       ;quit var for narrative edit
"RTN","DGPFLMA3",28,0)
 N DGRDAT    ;review date
"RTN","DGPFLMA3",29,0)
 N DGRESULT  ;result of STOALL api call
"RTN","DGPFLMA3",30,0)
 N DGREASON  ;reason if unable to edit assignment
"RTN","DGPFLMA3",31,0)
 N DGSUB     ;for loop var
"RTN","DGPFLMA3",32,0)
 N SEL       ;user selection (list item)
"RTN","DGPFLMA3",33,0)
 N VALMY     ;output of EN^VALM2 call, array of user selected entries
"RTN","DGPFLMA3",34,0)
 ;
"RTN","DGPFLMA3",35,0)
 ;set screen to full scroll region
"RTN","DGPFLMA3",36,0)
 D FULL^VALM1
"RTN","DGPFLMA3",37,0)
 ;
"RTN","DGPFLMA3",38,0)
 ;security key check
"RTN","DGPFLMA3",39,0)
 I '$D(^XUSEC("DGPF RECORD FLAG ASSIGNMENT",DUZ)) D  Q
"RTN","DGPFLMA3",40,0)
 . W !!?2,">>> '"_$P($G(XQORNOD(0)),U,3)_"' action not allowed at this point.",*7
"RTN","DGPFLMA3",41,0)
 . W !?6,"You do not have the appropriate Security Key."
"RTN","DGPFLMA3",42,0)
 . D PAUSE^VALM1
"RTN","DGPFLMA3",43,0)
 . S VALMBCK="R"
"RTN","DGPFLMA3",44,0)
 ;
"RTN","DGPFLMA3",45,0)
 ;is action selection allowed?
"RTN","DGPFLMA3",46,0)
 I '$D(@VALMAR@("IDX")) D  Q
"RTN","DGPFLMA3",47,0)
 . W !!?2,">>> '"_$P($G(XQORNOD(0)),U,3)_"' action not allowed at this point.",*7
"RTN","DGPFLMA3",48,0)
 . I '$G(DGDFN) W !?6,"A patient has not been selected."
"RTN","DGPFLMA3",49,0)
 . E  W !?6,"There are no record flag assignments for this patient."
"RTN","DGPFLMA3",50,0)
 . D PAUSE^VALM1
"RTN","DGPFLMA3",51,0)
 . S VALMBCK="R"
"RTN","DGPFLMA3",52,0)
 ;
"RTN","DGPFLMA3",53,0)
 ;allow user to select a SINGLE flag assignment for editing
"RTN","DGPFLMA3",54,0)
 S (DGIEN,VALMBCK)=""
"RTN","DGPFLMA3",55,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","DGPFLMA3",56,0)
 ;
"RTN","DGPFLMA3",57,0)
 ;process user selection
"RTN","DGPFLMA3",58,0)
 S SEL=$O(VALMY(""))
"RTN","DGPFLMA3",59,0)
 I SEL,$D(@VALMAR@("IDX",SEL,SEL)) D
"RTN","DGPFLMA3",60,0)
 . S DGIEN=$P($G(@VALMAR@("IDX",SEL,SEL)),U)
"RTN","DGPFLMA3",61,0)
 . S DGDFN=$P($G(@VALMAR@("IDX",SEL,SEL)),U,2)
"RTN","DGPFLMA3",62,0)
 . ;
"RTN","DGPFLMA3",63,0)
 . ;-attempt to obtain lock on assignment record
"RTN","DGPFLMA3",64,0)
 . I '$$LOCK^DGPFAA3(DGIEN) D  Q
"RTN","DGPFLMA3",65,0)
 . . W !!,"Record flag assignment currently in use, can not be edited!"
"RTN","DGPFLMA3",66,0)
 . . D PAUSE^VALM1
"RTN","DGPFLMA3",67,0)
 . ;
"RTN","DGPFLMA3",68,0)
 . ;-init word processing arrays 
"RTN","DGPFLMA3",69,0)
 . S DGAROOT=$NA(^TMP($J,"DGPFNARR"))
"RTN","DGPFLMA3",70,0)
 . S DGCROOT=$NA(^TMP($J,"DGPFCMNT"))
"RTN","DGPFLMA3",71,0)
 . K @DGAROOT,@DGCROOT
"RTN","DGPFLMA3",72,0)
 . ;
"RTN","DGPFLMA3",73,0)
 . ;-get PRF assignment into DGPFA array
"RTN","DGPFLMA3",74,0)
 . I '$$GETASGN^DGPFAA(DGIEN,.DGPFA) D  Q
"RTN","DGPFLMA3",75,0)
 . . W !!,"Unable to retrieve the record flag assignment selected."
"RTN","DGPFLMA3",76,0)
 . . D PAUSE^VALM1
"RTN","DGPFLMA3",77,0)
 . ;
"RTN","DGPFLMA3",78,0)
 . ;-is editing of assignment allowed?, quit if not allowed
"RTN","DGPFLMA3",79,0)
 . K DGREASON
"RTN","DGPFLMA3",80,0)
 . I '$$EDTOK^DGPFAA2(.DGPFA,"",.DGREASON) D  Q
"RTN","DGPFLMA3",81,0)
 . . W !!,"Assignment can not be edited..."_$$LOW^XLFSTR($G(DGREASON))
"RTN","DGPFLMA3",82,0)
 . . D PAUSE^VALM1
"RTN","DGPFLMA3",83,0)
 . ;
"RTN","DGPFLMA3",84,0)
 . ;-if assigment is active, set available action codes to Continue
"RTN","DGPFLMA3",85,0)
 . ; and Inactivate; else set code to Reactivate
"RTN","DGPFLMA3",86,0)
 . ;-if Local Flag or PRF Phase 2 active, add Entered in Error code
"RTN","DGPFLMA3",87,0)
 . I +DGPFA("STATUS")=1 D
"RTN","DGPFLMA3",88,0)
 . . S DGCODE="S^C:Continue Assignment;I:Inactivate Assignment"
"RTN","DGPFLMA3",89,0)
 . . I $$P2ON^DGPFPARM()!(DGPFA("FLAG")[26.11) S DGCODE=DGCODE_";E:Entered in Error"
"RTN","DGPFLMA3",90,0)
 . E  S DGCODE="S^R:Reactivate Assignment"
"RTN","DGPFLMA3",91,0)
 . ;
"RTN","DGPFLMA3",92,0)
 . ;-prompt user for assignment action, quit if no action selected
"RTN","DGPFLMA3",93,0)
 . S DGPFAH("ACTION")=$$ANSWER^DGPFUT("Select an assignment action","",DGCODE)
"RTN","DGPFLMA3",94,0)
 . Q:(DGPFAH("ACTION")=-1)
"RTN","DGPFLMA3",95,0)
 . S DGPFAH("ACTION")=$S(DGPFAH("ACTION")="C":2,DGPFAH("ACTION")="I":3,DGPFAH("ACTION")="R":4,DGPFAH("ACTION")="E":5)
"RTN","DGPFLMA3",96,0)
 . ;
"RTN","DGPFLMA3",97,0)
 . ;-if assignment action is 'Inactivate' or 'Entered in Error',
"RTN","DGPFLMA3",98,0)
 . ;    - set status to 'Inactive'
"RTN","DGPFLMA3",99,0)
 . ;- default set to 'Active'.
"RTN","DGPFLMA3",100,0)
 . S DGPFA("STATUS")=$S(DGPFAH("ACTION")=3:0,DGPFAH("ACTION")=5:0,1:1)
"RTN","DGPFLMA3",101,0)
 . ;
"RTN","DGPFLMA3",102,0)
 . ;-if action is not 'Inactivate', then prompt user to edit the narr
"RTN","DGPFLMA3",103,0)
 . S (DGABORT,DGOK,DGQ)=0
"RTN","DGPFLMA3",104,0)
 . I (DGPFAH("ACTION")'=3) D
"RTN","DGPFLMA3",105,0)
 . . F  D  Q:(DGOK!DGABORT!DGQ)
"RTN","DGPFLMA3",106,0)
 . . . ; if action code not 'Entered in Error', can't force edit
"RTN","DGPFLMA3",107,0)
 . . . I DGPFAH("ACTION")'=5 D  Q:(DGQ!DGABORT)
"RTN","DGPFLMA3",108,0)
 . . . . S DGASK=$$ANSWER^DGPFUT("Would you like to edit the assignment narrative","YES","Y")
"RTN","DGPFLMA3",109,0)
 . . . . I DGASK<0 S DGABORT=1 Q  ;abort edit action
"RTN","DGPFLMA3",110,0)
 . . . . I DGASK'=1 S DGQ=1 Q
"RTN","DGPFLMA3",111,0)
 . . . ;
"RTN","DGPFLMA3",112,0)
 . . . ;--edit narrative - only '5;Entered in Error' Required
"RTN","DGPFLMA3",113,0)
 . . . ;--edit the assignment narrative
"RTN","DGPFLMA3",114,0)
 . . . S DGAROOT=$$GET1^DIQ(26.13,DGIEN,"1","Z",DGAROOT)
"RTN","DGPFLMA3",115,0)
 . . . S DIC=$$OREF^DILF(DGAROOT)
"RTN","DGPFLMA3",116,0)
 . . . S DIWETXT="Patient Record Flag - Assignment Narrative Text"
"RTN","DGPFLMA3",117,0)
 . . . S DIWESUB="Assignment Narrative Text"
"RTN","DGPFLMA3",118,0)
 . . . S DWLW=75 ;max # of chars allowed to be stored on WP global node
"RTN","DGPFLMA3",119,0)
 . . . S DWPK=1  ;if line editor, don't join lines
"RTN","DGPFLMA3",120,0)
 . . . D EN^DIWE
"RTN","DGPFLMA3",121,0)
 . . . I '$$CKWP^DGPFUT(DGAROOT) D  Q
"RTN","DGPFLMA3",122,0)
 . . . . W !,"Assignment Narrative Text is required!",*7
"RTN","DGPFLMA3",123,0)
 . . . . I '$$CONTINUE^DGPFUT() S DGABORT=1
"RTN","DGPFLMA3",124,0)
 . . . ;- if number of text lines not the same, a change was made
"RTN","DGPFLMA3",125,0)
 . . . I $O(DGPFA("NARR",""),-1)'=$O(@DGAROOT@(""),-1) S DGOK=1 Q
"RTN","DGPFLMA3",126,0)
 . . . ;- now check for a difference in text line content
"RTN","DGPFLMA3",127,0)
 . . . S DGSUB=0
"RTN","DGPFLMA3",128,0)
 . . . F  S DGSUB=$O(DGPFA("NARR",DGSUB)) Q:DGSUB=""  D  Q:DGOK
"RTN","DGPFLMA3",129,0)
 . . . . I DGPFA("NARR",DGSUB,0)'=@DGAROOT@(DGSUB,0) S DGOK=1
"RTN","DGPFLMA3",130,0)
 . . . Q:DGOK
"RTN","DGPFLMA3",131,0)
 . . . I 'DGOK,(DGPFAH("ACTION")=5) D  Q  ;required edit
"RTN","DGPFLMA3",132,0)
 . . . . W !!,"No editing was found to the Narrative text."
"RTN","DGPFLMA3",133,0)
 . . . . W !,"For 'Entered in Error' Action, you must edit the Assignment Narrative Text.",*7,!
"RTN","DGPFLMA3",134,0)
 . . . . I '$$CONTINUE^DGPFUT() S DGABORT=1
"RTN","DGPFLMA3",135,0)
 . . . S DGOK=1
"RTN","DGPFLMA3",136,0)
 . ;
"RTN","DGPFLMA3",137,0)
 . Q:$G(DGABORT)
"RTN","DGPFLMA3",138,0)
 . ;
"RTN","DGPFLMA3",139,0)
 . ;-if narrative edited, place new narrative into DGPFA array
"RTN","DGPFLMA3",140,0)
 . I $G(DGOK) D
"RTN","DGPFLMA3",141,0)
 . . K DGPFA("NARR")  ;remove old narrative text
"RTN","DGPFLMA3",142,0)
 . . M DGPFA("NARR")=@DGAROOT K @DGAROOT
"RTN","DGPFLMA3",143,0)
 . ;
"RTN","DGPFLMA3",144,0)
 . ;-prompt user for 'Approved By' person, quit if not selected
"RTN","DGPFLMA3",145,0)
 . S DGPFAH("APPRVBY")=$$ANSWER^DGPFUT("Approved By","","P^200:EMZ")
"RTN","DGPFLMA3",146,0)
 . Q:(DGPFAH("APPRVBY")'>0)
"RTN","DGPFLMA3",147,0)
 . ;
"RTN","DGPFLMA3",148,0)
 . ;-have user enter the edit reason/history comments (required)
"RTN","DGPFLMA3",149,0)
 . S (DGABORT,DGOK)=0
"RTN","DGPFLMA3",150,0)
 . F  D  Q:(DGOK!DGABORT)
"RTN","DGPFLMA3",151,0)
 . . W !!,"Enter the reason for editing this assignment:"  ;needed for line editor
"RTN","DGPFLMA3",152,0)
 . . S DIC=$$OREF^DILF(DGCROOT)
"RTN","DGPFLMA3",153,0)
 . . S DIWETXT="Patient Record Flag - Edit Reason Text"
"RTN","DGPFLMA3",154,0)
 . . S DIWESUB="Edit Reason Text"
"RTN","DGPFLMA3",155,0)
 . . S DWLW=75 ;max # of chars allowed to be stored on WP global node
"RTN","DGPFLMA3",156,0)
 . . S DWPK=1  ;if line editor, don't join lines
"RTN","DGPFLMA3",157,0)
 . . D EN^DIWE
"RTN","DGPFLMA3",158,0)
 . . I $$CKWP^DGPFUT(DGCROOT) S DGOK=1 Q
"RTN","DGPFLMA3",159,0)
 . . W !,"Edit Reason is required!",*7
"RTN","DGPFLMA3",160,0)
 . . I '$$CONTINUE^DGPFUT() S DGABORT=1
"RTN","DGPFLMA3",161,0)
 . ;
"RTN","DGPFLMA3",162,0)
 . ;-quit if required edit reason/history comments not entered
"RTN","DGPFLMA3",163,0)
 . Q:$G(DGABORT)
"RTN","DGPFLMA3",164,0)
 . ;
"RTN","DGPFLMA3",165,0)
 . ;-place comments into history array
"RTN","DGPFLMA3",166,0)
 . M DGPFAH("COMMENT")=@DGCROOT K @DGCROOT
"RTN","DGPFLMA3",167,0)
 . ;
"RTN","DGPFLMA3",168,0)
 . ;-setup remaining assignment history nodes for filing
"RTN","DGPFLMA3",169,0)
 . S DGPFAH("ASSIGNDT")=$$NOW^XLFDT()  ;current date/time
"RTN","DGPFLMA3",170,0)
 . S DGPFAH("ENTERBY")=DUZ             ;current user
"RTN","DGPFLMA3",171,0)
 . ;
"RTN","DGPFLMA3",172,0)
 . ;-calculate the default review date
"RTN","DGPFLMA3",173,0)
 . S DGRDAT=$$GETRDT^DGPFAA3($P(DGPFA("FLAG"),U),DGPFAH("ASSIGNDT"))
"RTN","DGPFLMA3",174,0)
 . ;
"RTN","DGPFLMA3",175,0)
 . ;-prompt for review date when valid default review date and ACTIVE
"RTN","DGPFLMA3",176,0)
 . ; status, otherwise null
"RTN","DGPFLMA3",177,0)
 . I DGRDAT>0,DGPFA("STATUS")=1 D
"RTN","DGPFLMA3",178,0)
 . . S DGPFA("REVIEWDT")=$$ANSWER^DGPFUT("Enter Review Date",$$FMTE^XLFDT(DGRDAT,"5D"),"D^"_DT_":"_DGRDAT_":EX")
"RTN","DGPFLMA3",179,0)
 . E  S DGPFA("REVIEWDT")=""
"RTN","DGPFLMA3",180,0)
 . Q:DGPFA("REVIEWDT")<0
"RTN","DGPFLMA3",181,0)
 . ;
"RTN","DGPFLMA3",182,0)
 . ;-display flag assignment review screen to user
"RTN","DGPFLMA3",183,0)
 . D REVIEW^DGPFUT3(.DGPFA,.DGPFAH,DGIEN,XQY0,XQORNOD(0))
"RTN","DGPFLMA3",184,0)
 . ;
"RTN","DGPFLMA3",185,0)
 . Q:$$ANSWER^DGPFUT("Would you like to file the assignment changes","YES","Y")'>0
"RTN","DGPFLMA3",186,0)
 . ;
"RTN","DGPFLMA3",187,0)
 . ;-file the assignment and history using STOALL api
"RTN","DGPFLMA3",188,0)
 . W !,"Updating the patient's record flag assignment..."
"RTN","DGPFLMA3",189,0)
 . S DGRESULT=$$STOALL^DGPFAA(.DGPFA,.DGPFAH,.DGPFERR)
"RTN","DGPFLMA3",190,0)
 . W !,"   >>> Assignment was "_$S(+$G(DGRESULT):"filed successfully.",1:"not filed successfully.")
"RTN","DGPFLMA3",191,0)
 . ;
"RTN","DGPFLMA3",192,0)
 . ;-- send HL7 message if editing assignment to a NATIONAL flag
"RTN","DGPFLMA3",193,0)
 . I $G(DGRESULT),DGPFA("FLAG")["26.15",$$SNDORU^DGPFHLS(+DGRESULT) D
"RTN","DGPFLMA3",194,0)
 . . W !,"   >>> HL7 message sent...updating patient's sites of record."
"RTN","DGPFLMA3",195,0)
 . ;
"RTN","DGPFLMA3",196,0)
 . D PAUSE^VALM1
"RTN","DGPFLMA3",197,0)
 . ;
"RTN","DGPFLMA3",198,0)
 . ;-re-build list of flag assignments for patient
"RTN","DGPFLMA3",199,0)
 . D BLDLIST^DGPFLMU(DGDFN)
"RTN","DGPFLMA3",200,0)
 ;
"RTN","DGPFLMA3",201,0)
 ;-release lock after edit
"RTN","DGPFLMA3",202,0)
 D UNLOCK^DGPFAA3(DGIEN)
"RTN","DGPFLMA3",203,0)
 ;
"RTN","DGPFLMA3",204,0)
 ;return to LM (refresh screen)
"RTN","DGPFLMA3",205,0)
 S VALMBCK="R"
"RTN","DGPFLMA3",206,0)
 ;
"RTN","DGPFLMA3",207,0)
 Q
"RTN","DGPFLMA4")
0^26^B38033813
"RTN","DGPFLMA4",1,0)
DGPFLMA4 ;ALB/KCL - PRF ASSIGNMENT LM PROTOCOL ACTIONS CONT. ; 4/27/04 3:49pm
"RTN","DGPFLMA4",2,0)
 ;;5.3;Registration;**425,554**;Aug 13, 1993
"RTN","DGPFLMA4",3,0)
 ;
"RTN","DGPFLMA4",4,0)
 ;no direct entry
"RTN","DGPFLMA4",5,0)
 QUIT
"RTN","DGPFLMA4",6,0)
 ;
"RTN","DGPFLMA4",7,0)
 ;
"RTN","DGPFLMA4",8,0)
CO ;Entry point for DGPF CHANGE ASSIGNMENT OWNERSHIP action protocol.
"RTN","DGPFLMA4",9,0)
 ;
"RTN","DGPFLMA4",10,0)
 ;  Input: None
"RTN","DGPFLMA4",11,0)
 ;
"RTN","DGPFLMA4",12,0)
 ; Output:
"RTN","DGPFLMA4",13,0)
 ;   VALMBCK - 'R' = refresh screen
"RTN","DGPFLMA4",14,0)
 ;
"RTN","DGPFLMA4",15,0)
 N DIC,DGWPROOT,DIWETXT,DIWESUB,DWLW,DDWC,DWPK  ;input vars for EN^DIWE 
"RTN","DGPFLMA4",16,0)
 N DGCROOT  ;assignment history comment word processing root
"RTN","DGPFLMA4",17,0)
 N DGABORT  ;abort flag for entering assignment narrative
"RTN","DGPFLMA4",18,0)
 N DGOK     ;ok flag for entering assignment narrative
"RTN","DGPFLMA4",19,0)
 N DGIEN    ;assignment ien
"RTN","DGPFLMA4",20,0)
 N DGPFA    ;assignment array
"RTN","DGPFLMA4",21,0)
 N DGPFAH   ;assignment history array
"RTN","DGPFLMA4",22,0)
 N DGRESULT ;result of STOALL api call
"RTN","DGPFLMA4",23,0)
 N DGREASON ;reason if unable to edit assignment
"RTN","DGPFLMA4",24,0)
 N DGPFERR  ;if error returned from STOALL api call
"RTN","DGPFLMA4",25,0)
 N SEL      ;user selection (list item)
"RTN","DGPFLMA4",26,0)
 N VALMY    ;output of EN^VALM2 call, array of user selected entries
"RTN","DGPFLMA4",27,0)
 ;
"RTN","DGPFLMA4",28,0)
 ;set screen to full scroll region
"RTN","DGPFLMA4",29,0)
 D FULL^VALM1
"RTN","DGPFLMA4",30,0)
 ;
"RTN","DGPFLMA4",31,0)
 ;security key check
"RTN","DGPFLMA4",32,0)
 I '$D(^XUSEC("DGPF RECORD FLAG ASSIGNMENT",DUZ)) D  Q
"RTN","DGPFLMA4",33,0)
 . W !!?2,">>> '"_$P($G(XQORNOD(0)),U,3)_"' action not allowed at this point.",*7
"RTN","DGPFLMA4",34,0)
 . W !?6,"You do not have the appropriate Security Key."
"RTN","DGPFLMA4",35,0)
 . D PAUSE^VALM1
"RTN","DGPFLMA4",36,0)
 . S VALMBCK="R"
"RTN","DGPFLMA4",37,0)
 ;
"RTN","DGPFLMA4",38,0)
 ;is action selection allowed?
"RTN","DGPFLMA4",39,0)
 I '$D(@VALMAR@("IDX")) D  Q
"RTN","DGPFLMA4",40,0)
 . W !!?2,">>> '"_$P($G(XQORNOD(0)),U,3)_"' action not allowed at this point.",*7
"RTN","DGPFLMA4",41,0)
 . I '$G(DGDFN) W !?6,"A patient has not been selected."
"RTN","DGPFLMA4",42,0)
 . E  W !?6,"There are no record flag assignments for this patient."
"RTN","DGPFLMA4",43,0)
 . D PAUSE^VALM1
"RTN","DGPFLMA4",44,0)
 . S VALMBCK="R"
"RTN","DGPFLMA4",45,0)
 ;
"RTN","DGPFLMA4",46,0)
 ;allow user to select a SINGLE flag assignment for ownership change
"RTN","DGPFLMA4",47,0)
 S (DGIEN,VALMBCK)=""
"RTN","DGPFLMA4",48,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","DGPFLMA4",49,0)
 ;
"RTN","DGPFLMA4",50,0)
 ;process user selection
"RTN","DGPFLMA4",51,0)
 S SEL=$O(VALMY(""))
"RTN","DGPFLMA4",52,0)
 I SEL,$D(@VALMAR@("IDX",SEL,SEL)) D
"RTN","DGPFLMA4",53,0)
 . S DGIEN=$P($G(@VALMAR@("IDX",SEL,SEL)),U)
"RTN","DGPFLMA4",54,0)
 . S DGDFN=$P($G(@VALMAR@("IDX",SEL,SEL)),U,2)
"RTN","DGPFLMA4",55,0)
 . ;
"RTN","DGPFLMA4",56,0)
 . ;-attempt to obtain lock on assignment record
"RTN","DGPFLMA4",57,0)
 . I '$$LOCK^DGPFAA3(DGIEN) D  Q
"RTN","DGPFLMA4",58,0)
 . . W !!,"Record flag assignment currently in use, can not be edited!",*7
"RTN","DGPFLMA4",59,0)
 . . D PAUSE^VALM1
"RTN","DGPFLMA4",60,0)
 . ;
"RTN","DGPFLMA4",61,0)
 . ;-get assignment into DGPFA array
"RTN","DGPFLMA4",62,0)
 . I '$$GETASGN^DGPFAA(DGIEN,.DGPFA) D  Q
"RTN","DGPFLMA4",63,0)
 . . W !!,"Unable to retrieve the record flag assignment selected.",*7
"RTN","DGPFLMA4",64,0)
 . . D PAUSE^VALM1
"RTN","DGPFLMA4",65,0)
 . ;
"RTN","DGPFLMA4",66,0)
 . ;-can site change ownership of the assignment?
"RTN","DGPFLMA4",67,0)
 . I '$$CHGOWN^DGPFAA2(.DGPFA,,.DGREASON) D  Q
"RTN","DGPFLMA4",68,0)
 . . W !!,"Changing the ownership of this record flag assignment not allowed.",*7
"RTN","DGPFLMA4",69,0)
 . . W !,"  >>> "_$G(DGREASON)_"."
"RTN","DGPFLMA4",70,0)
 . . D PAUSE^VALM1
"RTN","DGPFLMA4",71,0)
 . ;
"RTN","DGPFLMA4",72,0)
 . ;-prompt for new OWNER SITE of the assignment
"RTN","DGPFLMA4",73,0)
 . S DGPFA("OWNER")=$$ANSWER^DGPFUT("Select new owner site for this record flag assignment","","P^4:EMZ")
"RTN","DGPFLMA4",74,0)
 . I DGPFA("OWNER")=$P($$SITE^VASITE(),U) D
"RTN","DGPFLMA4",75,0)
 . . W !!,"Ownership of this record flag assignment has not been changed!",*7
"RTN","DGPFLMA4",76,0)
 . . S DGPFA("OWNER")=0
"RTN","DGPFLMA4",77,0)
 . . D PAUSE^VALM1
"RTN","DGPFLMA4",78,0)
 . Q:(DGPFA("OWNER")'>0)
"RTN","DGPFLMA4",79,0)
 . ;
"RTN","DGPFLMA4",80,0)
 . ;-prompt for APPROVED BY person
"RTN","DGPFLMA4",81,0)
 . S DGPFAH("APPRVBY")=$$ANSWER^DGPFUT("Approved By","","P^200:EMZ")
"RTN","DGPFLMA4",82,0)
 . Q:(DGPFAH("APPRVBY")'>0)
"RTN","DGPFLMA4",83,0)
 . ;
"RTN","DGPFLMA4",84,0)
 . ;-allow user to enter HISTORY COMMENTS (edit reason)
"RTN","DGPFLMA4",85,0)
 . S DGCROOT=$NA(^TMP($J,"DGPFCMNT"))  ;init WP array for hist comments
"RTN","DGPFLMA4",86,0)
 . K @DGCROOT
"RTN","DGPFLMA4",87,0)
 . S (DGABORT,DGOK)=0
"RTN","DGPFLMA4",88,0)
 . F  D  Q:(DGOK!DGABORT)
"RTN","DGPFLMA4",89,0)
 . . W !!,"Enter the reason for editing this assignment:"  ;needed for line editor
"RTN","DGPFLMA4",90,0)
 . . S @DGCROOT@(1,0)="Change of flag assignment ownership.  "
"RTN","DGPFLMA4",91,0)
 . . S DIC=$$OREF^DILF(DGCROOT)
"RTN","DGPFLMA4",92,0)
 . . S DIWETXT="Enter the reason for record flag assignment ownership change:"
"RTN","DGPFLMA4",93,0)
 . . ;S DIWETXT="Enter Record Flag Assignment - Edit Reason Text"
"RTN","DGPFLMA4",94,0)
 . . S DIWESUB="Change of Ownership Reason"
"RTN","DGPFLMA4",95,0)
 . . S DWLW=75   ;max # of chars allowed to be stored on WP global node
"RTN","DGPFLMA4",96,0)
 . . S DWPK=1    ;if line editor, don't join lines
"RTN","DGPFLMA4",97,0)
 . . S DDWC="E"  ;initially place cursor at end of line 1
"RTN","DGPFLMA4",98,0)
 . . D EN^DIWE
"RTN","DGPFLMA4",99,0)
 . . I $$CKWP^DGPFUT(DGCROOT) S DGOK=1 Q
"RTN","DGPFLMA4",100,0)
 . . W !,"The reason for editing this record flag assignment is required!",*7
"RTN","DGPFLMA4",101,0)
 . . I '$$CONTINUE^DGPFUT() S DGABORT=1
"RTN","DGPFLMA4",102,0)
 . ;
"RTN","DGPFLMA4",103,0)
 . ;-quit if required HISTORY COMMENTS not entered
"RTN","DGPFLMA4",104,0)
 . Q:$G(DGABORT)
"RTN","DGPFLMA4",105,0)
 . ;
"RTN","DGPFLMA4",106,0)
 . ;-place HISTORY COMMENTS into history array
"RTN","DGPFLMA4",107,0)
 . M DGPFAH("COMMENT")=@DGCROOT K @DGCROOT
"RTN","DGPFLMA4",108,0)
 . ;
"RTN","DGPFLMA4",109,0)
 . ;-setup remaining assignment history array nodes for filing
"RTN","DGPFLMA4",110,0)
 . S DGPFAH("ACTION")=2                ;continue
"RTN","DGPFLMA4",111,0)
 . S DGPFAH("ASSIGNDT")=$$NOW^XLFDT()  ;current date/time
"RTN","DGPFLMA4",112,0)
 . S DGPFAH("ENTERBY")=DUZ             ;current user
"RTN","DGPFLMA4",113,0)
 . ;
"RTN","DGPFLMA4",114,0)
 . ;-relinquishing ownership should remove existing review date
"RTN","DGPFLMA4",115,0)
 . S DGPFA("REVIEWDT")=""
"RTN","DGPFLMA4",116,0)
 . ;
"RTN","DGPFLMA4",117,0)
 . ;-display flag assignment review screen to user
"RTN","DGPFLMA4",118,0)
 . D REVIEW^DGPFUT3(.DGPFA,.DGPFAH,DGIEN,XQY0,XQORNOD(0))
"RTN","DGPFLMA4",119,0)
 . ;
"RTN","DGPFLMA4",120,0)
 . ;-ask user if ok to file ownership change 
"RTN","DGPFLMA4",121,0)
 . Q:$$ANSWER^DGPFUT("Would you like to file the assignment ownership change","YES","Y")'>0
"RTN","DGPFLMA4",122,0)
 . ;
"RTN","DGPFLMA4",123,0)
 . ;-file the assignment and history using STOALL api
"RTN","DGPFLMA4",124,0)
 . W !!,"Updating the ownership of this patient's record flag assignment..."
"RTN","DGPFLMA4",125,0)
 . S DGRESULT=$$STOALL^DGPFAA(.DGPFA,.DGPFAH,.DGPFERR)
"RTN","DGPFLMA4",126,0)
 . W !,"   >>> Update was "_$S(+$G(DGRESULT):"successful",1:"not successful")_"."
"RTN","DGPFLMA4",127,0)
 . ;
"RTN","DGPFLMA4",128,0)
 . ;-- send HL7 ORU msg if editing assignment to a Cat I (NATIONAL) flag
"RTN","DGPFLMA4",129,0)
 . I +$G(DGRESULT),$$SNDORU^DGPFHLS(+DGRESULT) D
"RTN","DGPFLMA4",130,0)
 . . W !,"   >>> HL7 message sent...updating patient's sites of record."
"RTN","DGPFLMA4",131,0)
 . ;
"RTN","DGPFLMA4",132,0)
 . D PAUSE^VALM1
"RTN","DGPFLMA4",133,0)
 . ;
"RTN","DGPFLMA4",134,0)
 . ;-rebuild list of flag assignments for patient
"RTN","DGPFLMA4",135,0)
 . D BLDLIST^DGPFLMU(DGDFN)
"RTN","DGPFLMA4",136,0)
 . ;
"RTN","DGPFLMA4",137,0)
 . ;-release lock after CO edit
"RTN","DGPFLMA4",138,0)
 . D UNLOCK^DGPFAA3(DGIEN)
"RTN","DGPFLMA4",139,0)
 ;
"RTN","DGPFLMA4",140,0)
 ;return to LM (refresh screen)
"RTN","DGPFLMA4",141,0)
 S VALMBCK="R"
"RTN","DGPFLMA4",142,0)
 ;
"RTN","DGPFLMA4",143,0)
 Q
"RTN","DGPFLMD1")
0^36^B13946993
"RTN","DGPFLMD1",1,0)
DGPFLMD1 ;ALB/RPM - PRF DISPLAY ACTIVE FLAG ASSIGNMENTS LM ; 5/18/04 9:33am
"RTN","DGPFLMD1",2,0)
 ;;5.3;Registration;**425,554**;Aug 13, 1993
"RTN","DGPFLMD1",3,0)
 ;
"RTN","DGPFLMD1",4,0)
EN(DGARRY,DGPFAPI,DGCNT) ;
"RTN","DGPFLMD1",5,0)
 ;
"RTN","DGPFLMD1",6,0)
 N DGFLG
"RTN","DGPFLMD1",7,0)
 N DGI
"RTN","DGPFLMD1",8,0)
 N DGLINE
"RTN","DGPFLMD1",9,0)
 N DGNARR
"RTN","DGPFLMD1",10,0)
 N DGNUM
"RTN","DGPFLMD1",11,0)
 N DGTEXT
"RTN","DGPFLMD1",12,0)
 ;
"RTN","DGPFLMD1",13,0)
 S (DGNUM,DGFLG,DGLINE)=0
"RTN","DGPFLMD1",14,0)
 F  S DGFLG=$O(DGPFAPI(DGFLG)) Q:'DGFLG  D
"RTN","DGPFLMD1",15,0)
 . S DGNUM=DGNUM+1
"RTN","DGPFLMD1",16,0)
 . ;
"RTN","DGPFLMD1",17,0)
 . ;blank line(s)
"RTN","DGPFLMD1",18,0)
 . F DGI=1:1:$S(DGNUM>1:2,1:1) D
"RTN","DGPFLMD1",19,0)
 . . S DGLINE=DGLINE+1
"RTN","DGPFLMD1",20,0)
 . . D SET^DGPFLMU1(DGARRY,DGLINE," ",1,,,.DGCNT)
"RTN","DGPFLMD1",21,0)
 . ;
"RTN","DGPFLMD1",22,0)
 . ;Flag Name
"RTN","DGPFLMD1",23,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMD1",24,0)
 . S DGTEXT=DGNUM_"."
"RTN","DGPFLMD1",25,0)
 . D SET^DGPFLMU1(DGARRY,DGLINE,DGTEXT,1,IORVON,IORVOFF,.DGCNT)
"RTN","DGPFLMD1",26,0)
 . S DGTEXT="Flag Name: "
"RTN","DGPFLMD1",27,0)
 . D SET^DGPFLMU1(DGARRY,DGLINE,DGTEXT,5,,,.DGCNT)
"RTN","DGPFLMD1",28,0)
 . S DGTEXT="<"_$P(DGPFAPI(DGFLG,"FLAG"),U,2)_">"
"RTN","DGPFLMD1",29,0)
 . D SET^DGPFLMU1(DGARRY,DGLINE,DGTEXT,16,IORVON,IORVOFF,.DGCNT)
"RTN","DGPFLMD1",30,0)
 . ;
"RTN","DGPFLMD1",31,0)
 . ;Category
"RTN","DGPFLMD1",32,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMD1",33,0)
 . S DGTEXT="Category: "_$P(DGPFAPI(DGFLG,"CATEGORY"),U,2)
"RTN","DGPFLMD1",34,0)
 . D SET^DGPFLMU1(DGARRY,DGLINE,DGTEXT,6,,,.DGCNT)
"RTN","DGPFLMD1",35,0)
 . ;
"RTN","DGPFLMD1",36,0)
 . ;Flag Type
"RTN","DGPFLMD1",37,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMD1",38,0)
 . S DGTEXT="Type: "_$P(DGPFAPI(DGFLG,"FLAGTYPE"),U,2)
"RTN","DGPFLMD1",39,0)
 . D SET^DGPFLMU1(DGARRY,DGLINE,DGTEXT,10,,,.DGCNT)
"RTN","DGPFLMD1",40,0)
 . ;
"RTN","DGPFLMD1",41,0)
 . ;Assignment Narrative
"RTN","DGPFLMD1",42,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMD1",43,0)
 . D SET^DGPFLMU1(DGARRY,DGLINE," ",1,,,.DGCNT)
"RTN","DGPFLMD1",44,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMD1",45,0)
 . S DGTEXT="Assignment Narrative:"
"RTN","DGPFLMD1",46,0)
 . D SET^DGPFLMU1(DGARRY,DGLINE,DGTEXT,1,IORVON,IORVOFF,.DGCNT)
"RTN","DGPFLMD1",47,0)
 . S DGNARR=0
"RTN","DGPFLMD1",48,0)
 . F  S DGNARR=$O(DGPFAPI(DGFLG,"NARR",DGNARR)) Q:'DGNARR  D
"RTN","DGPFLMD1",49,0)
 . . S DGLINE=DGLINE+1
"RTN","DGPFLMD1",50,0)
 . . S DGTEXT=$G(DGPFAPI(DGFLG,"NARR",DGNARR,0))
"RTN","DGPFLMD1",51,0)
 . . D SET^DGPFLMU1(DGARRY,DGLINE,DGTEXT,1,,,.DGCNT)
"RTN","DGPFLMD1",52,0)
 . ;
"RTN","DGPFLMD1",53,0)
 . ;blank line
"RTN","DGPFLMD1",54,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMD1",55,0)
 . D SET^DGPFLMU1(DGARRY,DGLINE," ",1,,,.DGCNT)
"RTN","DGPFLMD1",56,0)
 . ;
"RTN","DGPFLMD1",57,0)
 . ;assignment details header
"RTN","DGPFLMD1",58,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMD1",59,0)
 . S DGTEXT="Assignment Details:"
"RTN","DGPFLMD1",60,0)
 . D SET^DGPFLMU1(DGARRY,DGLINE,DGTEXT,1,IORVON,IORVOFF,.DGCNT)
"RTN","DGPFLMD1",61,0)
 . ;
"RTN","DGPFLMD1",62,0)
 . ;Assignment Date
"RTN","DGPFLMD1",63,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMD1",64,0)
 . S DGTEXT="Initial Assignment: "_$$FMTE^XLFDT($P(DGPFAPI(DGFLG,"ASSIGNDT"),U),"D")
"RTN","DGPFLMD1",65,0)
 . D SET^DGPFLMU1(DGARRY,DGLINE,DGTEXT,3,,,.DGCNT)
"RTN","DGPFLMD1",66,0)
 . ;
"RTN","DGPFLMD1",67,0)
 . ;Approved By
"RTN","DGPFLMD1",68,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMD1",69,0)
 . S DGTEXT="Approved By: "_$P(DGPFAPI(DGFLG,"APPRVBY"),U,2)
"RTN","DGPFLMD1",70,0)
 . D SET^DGPFLMU1(DGARRY,DGLINE,DGTEXT,10,,,.DGCNT)
"RTN","DGPFLMD1",71,0)
 . ;
"RTN","DGPFLMD1",72,0)
 . ;Review Date
"RTN","DGPFLMD1",73,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMD1",74,0)
 . S DGTEXT="Next Review Date: "_$S($P(DGPFAPI(DGFLG,"REVIEWDT"),U)>0:$$FMTE^XLFDT($P(DGPFAPI(DGFLG,"REVIEWDT"),U),"D"),1:"N/A")
"RTN","DGPFLMD1",75,0)
 . D SET^DGPFLMU1(DGARRY,DGLINE,DGTEXT,5,,,.DGCNT)
"RTN","DGPFLMD1",76,0)
 . ;
"RTN","DGPFLMD1",77,0)
 . ;Owner Site
"RTN","DGPFLMD1",78,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMD1",79,0)
 . S DGTEXT="Owner Site: "_$P(DGPFAPI(DGFLG,"OWNER"),U,2)
"RTN","DGPFLMD1",80,0)
 . D SET^DGPFLMU1(DGARRY,DGLINE,DGTEXT,11,,,.DGCNT)
"RTN","DGPFLMD1",81,0)
 . ;
"RTN","DGPFLMD1",82,0)
 . ;Originating Site
"RTN","DGPFLMD1",83,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMD1",84,0)
 . S DGTEXT="Originating Site: "_$P(DGPFAPI(DGFLG,"ORIGSITE"),U,2)
"RTN","DGPFLMD1",85,0)
 . D SET^DGPFLMU1(DGARRY,DGLINE,DGTEXT,5,,,.DGCNT)
"RTN","DGPFLMD1",86,0)
 . ;
"RTN","DGPFLMD1",87,0)
 . ;Progress Note Linked - only defined if Owner of assignment
"RTN","DGPFLMD1",88,0)
 . I $D(DGPFAPI(DGFLG,"TIULINK")) D
"RTN","DGPFLMD1",89,0)
 . . S DGLINE=DGLINE+1
"RTN","DGPFLMD1",90,0)
 . . S DGTEXT="Progress Note Linked: "_$S(+$P(DGPFAPI(DGFLG,"TIULINK"),U):"YES",1:"NO")
"RTN","DGPFLMD1",91,0)
 . . D SET^DGPFLMU1(DGARRY,DGLINE,DGTEXT,1,,,.DGCNT)
"RTN","DGPFLMD1",92,0)
 ; 
"RTN","DGPFLMD1",93,0)
 Q
"RTN","DGPFLMU1")
0^35^B44001072
"RTN","DGPFLMU1",1,0)
DGPFLMU1 ;ALB/KCL - PRF DISPLAY FLAG DETAIL LM UTILITIES CONT ; 10/11/05 1:53pm
"RTN","DGPFLMU1",2,0)
 ;;5.3;Registration;**425,554**;Aug 13, 1993
"RTN","DGPFLMU1",3,0)
 ;
"RTN","DGPFLMU1",4,0)
 ;no direct entry
"RTN","DGPFLMU1",5,0)
 QUIT
"RTN","DGPFLMU1",6,0)
 ;
"RTN","DGPFLMU1",7,0)
EN(DGARY,DGIEN,DGDFN,DGCNT) ;Entry point to build flag assignment detail list area.
"RTN","DGPFLMU1",8,0)
 ;
"RTN","DGPFLMU1",9,0)
 ;  Input:
"RTN","DGPFLMU1",10,0)
 ;    DGARY - global array subscript
"RTN","DGPFLMU1",11,0)
 ;    DGIEN - ien of PATIENT ASSIGNMENT (#26.13) file
"RTN","DGPFLMU1",12,0)
 ;    DGDFN - ien of PATIENT (#2) file
"RTN","DGPFLMU1",13,0)
 ;
"RTN","DGPFLMU1",14,0)
 ; Output:
"RTN","DGPFLMU1",15,0)
 ;    DGCNT - number of lines in the list, pass by reference
"RTN","DGPFLMU1",16,0)
 ;
"RTN","DGPFLMU1",17,0)
 N DGHIEN   ;assignment history ien
"RTN","DGPFLMU1",18,0)
 N DGHIENS  ;contains assignment history ien's 
"RTN","DGPFLMU1",19,0)
 N DGHISCNT ;count of history records
"RTN","DGPFLMU1",20,0)
 N DGLINE   ;line counter
"RTN","DGPFLMU1",21,0)
 N DGPFA    ;assignment array
"RTN","DGPFLMU1",22,0)
 N DGPFAH   ;assignment history array
"RTN","DGPFLMU1",23,0)
 N DGPFF    ;flag array
"RTN","DGPFLMU1",24,0)
 N DGSUB    ;subscript of history ien's array
"RTN","DGPFLMU1",25,0)
 ;
"RTN","DGPFLMU1",26,0)
 ;init variables
"RTN","DGPFLMU1",27,0)
 S DGCNT=0
"RTN","DGPFLMU1",28,0)
 S (DGLINE,VALMBEG)=1
"RTN","DGPFLMU1",29,0)
 K DGPFA
"RTN","DGPFLMU1",30,0)
 K DGPFAH
"RTN","DGPFLMU1",31,0)
 K DGPFF
"RTN","DGPFLMU1",32,0)
 K DGHIENS
"RTN","DGPFLMU1",33,0)
 ;
"RTN","DGPFLMU1",34,0)
 Q:'$G(DGIEN)
"RTN","DGPFLMU1",35,0)
 ;
"RTN","DGPFLMU1",36,0)
 ;get assignment into DGPFA array
"RTN","DGPFLMU1",37,0)
 Q:'$$GETASGN^DGPFAA(DGIEN,.DGPFA)
"RTN","DGPFLMU1",38,0)
 S DGPFA("INITASSIGN")=$$GETADT^DGPFAAH(DGIEN)  ;initial assign date
"RTN","DGPFLMU1",39,0)
 ;
"RTN","DGPFLMU1",40,0)
 ;get most recent assignment history and place in DGPFAH array
"RTN","DGPFLMU1",41,0)
 Q:'$$GETHIST^DGPFAAH($$GETLAST^DGPFAAH(DGIEN),.DGPFAH)
"RTN","DGPFLMU1",42,0)
 ;
"RTN","DGPFLMU1",43,0)
 ;get record flag into DGPFF array
"RTN","DGPFLMU1",44,0)
 Q:'$$GETFLAG^DGPFUT1($P($G(DGPFA("FLAG")),U),.DGPFF)
"RTN","DGPFLMU1",45,0)
 ;
"RTN","DGPFLMU1",46,0)
 ;build Assignment Details area
"RTN","DGPFLMU1",47,0)
 D ASGN(DGARY,.DGPFA,.DGPFAH,.DGPFF,.DGLINE,.DGCNT)
"RTN","DGPFLMU1",48,0)
 ;
"RTN","DGPFLMU1",49,0)
 ;build Assignment History heading
"RTN","DGPFLMU1",50,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",51,0)
 D SET(DGARY,DGLINE,$TR($J("",80)," ","="),1,,,.DGCNT)
"RTN","DGPFLMU1",52,0)
 D SET(DGARY,DGLINE,"<Assignment History>",30,IORVON,IORVOFF,.DGCNT)
"RTN","DGPFLMU1",53,0)
 ;
"RTN","DGPFLMU1",54,0)
 ;get all history ien's associated with the assignment
"RTN","DGPFLMU1",55,0)
 Q:'$$GETALLDT^DGPFAAH(DGIEN,.DGHIENS)
"RTN","DGPFLMU1",56,0)
 ;
"RTN","DGPFLMU1",57,0)
 ;reverse loop through each assignment history ien
"RTN","DGPFLMU1",58,0)
 ;and get record into DGPFAH array
"RTN","DGPFLMU1",59,0)
 S DGHISCNT=0,DGSUB=9999999.999999
"RTN","DGPFLMU1",60,0)
 F  S DGSUB=$O(DGHIENS(DGSUB),-1) Q:DGSUB=""  D
"RTN","DGPFLMU1",61,0)
 . S DGHIEN=+$G(DGHIENS(DGSUB))
"RTN","DGPFLMU1",62,0)
 . K DGPFAH
"RTN","DGPFLMU1",63,0)
 . I $$GETHIST^DGPFAAH(DGHIEN,.DGPFAH) D
"RTN","DGPFLMU1",64,0)
 . . ;
"RTN","DGPFLMU1",65,0)
 . . ;-history record counter
"RTN","DGPFLMU1",66,0)
 . . S DGHISCNT=DGHISCNT+1
"RTN","DGPFLMU1",67,0)
 . . ;
"RTN","DGPFLMU1",68,0)
 . . ;-build assignment history area
"RTN","DGPFLMU1",69,0)
 . . D HIST(DGARY,.DGPFAH,.DGPFA,.DGLINE,DGHISCNT,.DGCNT)
"RTN","DGPFLMU1",70,0)
 Q
"RTN","DGPFLMU1",71,0)
 ;
"RTN","DGPFLMU1",72,0)
 ;
"RTN","DGPFLMU1",73,0)
ASGN(DGARY,DGPFA,DGPFAH,DGPFF,DGLINE,DGCNT) ;This procedure will build the lines of FLAG ASSIGNMENT details.
"RTN","DGPFLMU1",74,0)
 ;
"RTN","DGPFLMU1",75,0)
 ;  Input:
"RTN","DGPFLMU1",76,0)
 ;    DGARY - global array subscript
"RTN","DGPFLMU1",77,0)
 ;    DGPFF - flag array, pass by reference
"RTN","DGPFLMU1",78,0)
 ;    DGPFA - assignment array, pass by reference
"RTN","DGPFLMU1",79,0)
 ;   DGPFAH - assignment history array, pass by reference
"RTN","DGPFLMU1",80,0)
 ;   DGLINE - line counter
"RTN","DGPFLMU1",81,0)
 ;
"RTN","DGPFLMU1",82,0)
 ; Output:
"RTN","DGPFLMU1",83,0)
 ;    DGCNT - number of lines in the list, pass by reference
"RTN","DGPFLMU1",84,0)
 ;
"RTN","DGPFLMU1",85,0)
 ;temporary variables used
"RTN","DGPFLMU1",86,0)
 N DGSUB
"RTN","DGPFLMU1",87,0)
 N DGTMP
"RTN","DGPFLMU1",88,0)
 ;
"RTN","DGPFLMU1",89,0)
 ;set flag name
"RTN","DGPFLMU1",90,0)
 D SET(DGARY,DGLINE,"Flag Name: "_$P($G(DGPFA("FLAG")),U,2),12,,,.DGCNT)
"RTN","DGPFLMU1",91,0)
 ;
"RTN","DGPFLMU1",92,0)
 ;set flag type
"RTN","DGPFLMU1",93,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",94,0)
 D SET(DGARY,DGLINE,"Flag Type: "_$P($G(DGPFF("TYPE")),U,2),12,,,.DGCNT)
"RTN","DGPFLMU1",95,0)
 ;
"RTN","DGPFLMU1",96,0)
 ;set flag category
"RTN","DGPFLMU1",97,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",98,0)
 S DGTMP=$S($P($G(DGPFA("FLAG")),U)["26.11":"II (LOCAL)",1:"I (NATIONAL)")
"RTN","DGPFLMU1",99,0)
 D SET(DGARY,DGLINE,"Flag Category: "_DGTMP,8,,,.DGCNT)
"RTN","DGPFLMU1",100,0)
 ;
"RTN","DGPFLMU1",101,0)
 ;set flag assignment status
"RTN","DGPFLMU1",102,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",103,0)
 D SET(DGARY,DGLINE,"Assignment Status: "_$P($G(DGPFA("STATUS")),U,2),4,,,.DGCNT)
"RTN","DGPFLMU1",104,0)
 ;
"RTN","DGPFLMU1",105,0)
 ;set initial assignment date
"RTN","DGPFLMU1",106,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",107,0)
 D SET(DGARY,DGLINE,"Initial Assignment: "_$$FDTTM^VALM1($P(+$G(DGPFA("INITASSIGN")),U)),3,,,.DGCNT)
"RTN","DGPFLMU1",108,0)
 ;
"RTN","DGPFLMU1",109,0)
 ;set last review date (do not set if only initial assignment)
"RTN","DGPFLMU1",110,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",111,0)
 I (+$G(DGPFAH("ASSIGNDT")))=(+$G(DGPFA("INITASSIGN"))) D
"RTN","DGPFLMU1",112,0)
 . S DGTMP="N/A"
"RTN","DGPFLMU1",113,0)
 E  S DGTMP=$$FDATE^VALM1(+$G(DGPFAH("ASSIGNDT")))
"RTN","DGPFLMU1",114,0)
 D SET(DGARY,DGLINE,"Last Review Date: "_DGTMP,5,,,.DGCNT)
"RTN","DGPFLMU1",115,0)
 ;
"RTN","DGPFLMU1",116,0)
 ;set next review date
"RTN","DGPFLMU1",117,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",118,0)
 S DGTMP=+$G(DGPFA("REVIEWDT"))
"RTN","DGPFLMU1",119,0)
 S DGTMP=$S(DGTMP:$$FDATE^VALM1(DGTMP),1:"N/A")
"RTN","DGPFLMU1",120,0)
 D SET(DGARY,DGLINE,"Next Review Date: "_DGTMP,5,,,.DGCNT)
"RTN","DGPFLMU1",121,0)
 ;
"RTN","DGPFLMU1",122,0)
 ;set owner site
"RTN","DGPFLMU1",123,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",124,0)
 D SET(DGARY,DGLINE,"Owner Site: "_$P($G(DGPFA("OWNER")),U,2),11,,,.DGCNT)
"RTN","DGPFLMU1",125,0)
 ;
"RTN","DGPFLMU1",126,0)
 ;set originating site
"RTN","DGPFLMU1",127,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",128,0)
 D SET(DGARY,DGLINE,"Originating Site: "_$P($G(DGPFA("ORIGSITE")),U,2),5,,,.DGCNT)
"RTN","DGPFLMU1",129,0)
 ;
"RTN","DGPFLMU1",130,0)
 ;set assignment narrative
"RTN","DGPFLMU1",131,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",132,0)
 D SET(DGARY,DGLINE,"",1,,,.DGCNT)
"RTN","DGPFLMU1",133,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",134,0)
 D SET(DGARY,DGLINE,"Record Flag Assignment Narrative:",1,IORVON,IORVOFF,.DGCNT)
"RTN","DGPFLMU1",135,0)
 I '$D(DGPFA("NARR",1,0)) D  Q
"RTN","DGPFLMU1",136,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMU1",137,0)
 . D SET(DGARY,DGLINE,"No Narrative Text",1,,,.DGCNT)
"RTN","DGPFLMU1",138,0)
 S (DGSUB,DGTMP)=""
"RTN","DGPFLMU1",139,0)
 F  S DGSUB=$O(DGPFA("NARR",DGSUB)) Q:'DGSUB  D
"RTN","DGPFLMU1",140,0)
 . S DGTMP=$G(DGPFA("NARR",DGSUB,0))
"RTN","DGPFLMU1",141,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMU1",142,0)
 . D SET(DGARY,DGLINE,DGTMP,1,,,.DGCNT)
"RTN","DGPFLMU1",143,0)
 ;
"RTN","DGPFLMU1",144,0)
 ;set blank lines
"RTN","DGPFLMU1",145,0)
 S DGLINE=DGLINE+2
"RTN","DGPFLMU1",146,0)
 D SET(DGARY,DGLINE,"",1,,,.DGCNT)
"RTN","DGPFLMU1",147,0)
 ;
"RTN","DGPFLMU1",148,0)
 Q
"RTN","DGPFLMU1",149,0)
 ;
"RTN","DGPFLMU1",150,0)
 ;
"RTN","DGPFLMU1",151,0)
HIST(DGARY,DGPFAH,DGPFA,DGLINE,DGHISCNT,DGCNT) ;This procedure will build the lines of FLAG ASSIGNMENT HISTORY details.
"RTN","DGPFLMU1",152,0)
 ;
"RTN","DGPFLMU1",153,0)
 ;  Input:
"RTN","DGPFLMU1",154,0)
 ;    DGARY - global array subscript
"RTN","DGPFLMU1",155,0)
 ;   DGPFAH - assignment history array, pass by reference
"RTN","DGPFLMU1",156,0)
 ;    DGPFA - assignment array, pass by reference
"RTN","DGPFLMU1",157,0)
 ;   DGLINE - line counter
"RTN","DGPFLMU1",158,0)
 ; DGHISCNT - counter of history record
"RTN","DGPFLMU1",159,0)
 ;
"RTN","DGPFLMU1",160,0)
 ; Output:
"RTN","DGPFLMU1",161,0)
 ;    DGCNT - number of lines in the list, pass by reference
"RTN","DGPFLMU1",162,0)
 ;
"RTN","DGPFLMU1",163,0)
 ;temporary variables used
"RTN","DGPFLMU1",164,0)
 N DGTMP
"RTN","DGPFLMU1",165,0)
 N DGSUB
"RTN","DGPFLMU1",166,0)
 ;
"RTN","DGPFLMU1",167,0)
 ;set blank line
"RTN","DGPFLMU1",168,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",169,0)
 D SET(DGARY,DGLINE,"",1,,,.DGCNT)
"RTN","DGPFLMU1",170,0)
 ;
"RTN","DGPFLMU1",171,0)
 ;add an additional blank line except on the first history
"RTN","DGPFLMU1",172,0)
 I DGHISCNT>1 D
"RTN","DGPFLMU1",173,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMU1",174,0)
 . D SET(DGARY,DGLINE,"",1,,,.DGCNT)
"RTN","DGPFLMU1",175,0)
 ;
"RTN","DGPFLMU1",176,0)
 ;set action
"RTN","DGPFLMU1",177,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",178,0)
 S DGTMP=DGHISCNT_"."
"RTN","DGPFLMU1",179,0)
 D SET(DGARY,DGLINE,DGTMP,1,IORVON,IORVOFF,.DGCNT)
"RTN","DGPFLMU1",180,0)
 D SET(DGARY,DGLINE,"Action: "_$P($G(DGPFAH("ACTION")),U,2),10,IORVON,IORVOFF,.DGCNT)
"RTN","DGPFLMU1",181,0)
 ;
"RTN","DGPFLMU1",182,0)
 ;set assignment date
"RTN","DGPFLMU1",183,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",184,0)
 D SET(DGARY,DGLINE,"Action Date: "_$$FDTTM^VALM1($P($G(DGPFAH("ASSIGNDT")),U)),5,,,.DGCNT)
"RTN","DGPFLMU1",185,0)
 ;
"RTN","DGPFLMU1",186,0)
 ;set entered by
"RTN","DGPFLMU1",187,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",188,0)
 D SET(DGARY,DGLINE,"Entered By: "_$P($G(DGPFAH("ENTERBY")),U,2),6,,,.DGCNT)
"RTN","DGPFLMU1",189,0)
 ;
"RTN","DGPFLMU1",190,0)
 ;set approved by
"RTN","DGPFLMU1",191,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",192,0)
 D SET(DGARY,DGLINE,"Approved By: "_$P($G(DGPFAH("APPRVBY")),U,2),5,,,.DGCNT)
"RTN","DGPFLMU1",193,0)
 ;
"RTN","DGPFLMU1",194,0)
 ;set progress note linked
"RTN","DGPFLMU1",195,0)
 I $P($G(DGPFA("OWNER")),U)=$P($$SITE^VASITE(),U) D
"RTN","DGPFLMU1",196,0)
 . Q:+$G(DGPFAH("ACTION"))=5  ;don't display ENTERED IN ERROR action
"RTN","DGPFLMU1",197,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMU1",198,0)
 . D SET(DGARY,DGLINE,"Progress Note: "_$P($G(DGPFAH("TIULINK")),U,2),3,,,.DGCNT)
"RTN","DGPFLMU1",199,0)
 ;
"RTN","DGPFLMU1",200,0)
 ;set history comments
"RTN","DGPFLMU1",201,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",202,0)
 D SET(DGARY,DGLINE,"Action Comments:",1,,,.DGCNT)
"RTN","DGPFLMU1",203,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",204,0)
 D SET(DGARY,DGLINE,"----------------",1,,,.DGCNT)
"RTN","DGPFLMU1",205,0)
 I $D(DGPFAH("COMMENT",1,0)) D
"RTN","DGPFLMU1",206,0)
 . S (DGSUB,DGTMP)=""
"RTN","DGPFLMU1",207,0)
 . F  S DGSUB=$O(DGPFAH("COMMENT",DGSUB)) Q:'DGSUB  D
"RTN","DGPFLMU1",208,0)
 .. S DGTMP=$G(DGPFAH("COMMENT",DGSUB,0))
"RTN","DGPFLMU1",209,0)
 .. S DGLINE=DGLINE+1
"RTN","DGPFLMU1",210,0)
 .. D SET(DGARY,DGLINE,DGTMP,1,,,.DGCNT)
"RTN","DGPFLMU1",211,0)
 E  D
"RTN","DGPFLMU1",212,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMU1",213,0)
 . D SET(DGARY,DGLINE,"No Comments on file.",1,,,.DGCNT)
"RTN","DGPFLMU1",214,0)
 ;
"RTN","DGPFLMU1",215,0)
 Q
"RTN","DGPFLMU1",216,0)
 ;
"RTN","DGPFLMU1",217,0)
 ;
"RTN","DGPFLMU1",218,0)
SET(DGARY,DGLINE,DGTEXT,DGCOL,DGON,DGOFF,DGCNT) ;This procedure will set the lines of flag assignment details into the LM display area.
"RTN","DGPFLMU1",219,0)
 ;
"RTN","DGPFLMU1",220,0)
 ;  Input:
"RTN","DGPFLMU1",221,0)
 ;    DGARY - global array subscript
"RTN","DGPFLMU1",222,0)
 ;   DGLINE - line number
"RTN","DGPFLMU1",223,0)
 ;   DGTEXT - text
"RTN","DGPFLMU1",224,0)
 ;    DGCOL - starting column
"RTN","DGPFLMU1",225,0)
 ;     DGON - highlighting on
"RTN","DGPFLMU1",226,0)
 ;    DGOFF - highlighting off
"RTN","DGPFLMU1",227,0)
 ;
"RTN","DGPFLMU1",228,0)
 ; Output:
"RTN","DGPFLMU1",229,0)
 ;    DGCNT - number of lines in the list, pass by reference
"RTN","DGPFLMU1",230,0)
 ;
"RTN","DGPFLMU1",231,0)
 N DGX  ;temp variable for line of display text
"RTN","DGPFLMU1",232,0)
 ;
"RTN","DGPFLMU1",233,0)
 S DGCNT=DGLINE
"RTN","DGPFLMU1",234,0)
 S DGX=$S($D(^TMP(DGARY,$J,DGLINE,0)):^(0),1:"")
"RTN","DGPFLMU1",235,0)
 S ^TMP(DGARY,$J,DGLINE,0)=$$SETSTR^VALM1(DGTEXT,DGX,DGCOL,$L(DGTEXT))
"RTN","DGPFLMU1",236,0)
 D:$G(DGON)]""!($G(DGOFF)]"") CNTRL^VALM10(DGLINE,DGCOL,$L(DGTEXT),$G(DGON),$G(DGOFF))
"RTN","DGPFLMU1",237,0)
 Q
"RTN","DGPFPARM")
0^53^B3768728
"RTN","DGPFPARM",1,0)
DGPFPARM ;ALB/RPM - PRF PARAMETER FILE EDIT ; 5/5/05 12:27pm
"RTN","DGPFPARM",2,0)
 ;;5.3;Registration;**425,554**;Aug 13, 1993
"RTN","DGPFPARM",3,0)
 ;
"RTN","DGPFPARM",4,0)
 Q  ;no direct entry
"RTN","DGPFPARM",5,0)
 ;
"RTN","DGPFPARM",6,0)
EN ;
"RTN","DGPFPARM",7,0)
 N DA,DD,DO,DIC,DIE,DINUM,DR,X,Y
"RTN","DGPFPARM",8,0)
 ;
"RTN","DGPFPARM",9,0)
 W !!,"Patient Record Flag Parameter Enter/Edit"
"RTN","DGPFPARM",10,0)
 I '$D(^DGPF(26.18,1,0)) D
"RTN","DGPFPARM",11,0)
 .W !,"You do not have an entry in your parameter file!!"
"RTN","DGPFPARM",12,0)
 .W !,"Creating a new entry in the PRF PARAMETER (#26.18) file... ",!
"RTN","DGPFPARM",13,0)
 .S DIC="^DGPF(26.18,",DIC(0)="",X=1,DINUM=1
"RTN","DGPFPARM",14,0)
 .K DD,DO D FILE^DICN W " done."
"RTN","DGPFPARM",15,0)
 .K %,DA,DIC,DIE,X,Y
"RTN","DGPFPARM",16,0)
 ;
"RTN","DGPFPARM",17,0)
 S DIE="^DGPF(26.18,",DA=1,DR="2;3" D ^DIE
"RTN","DGPFPARM",18,0)
 K DIE,DR,DA
"RTN","DGPFPARM",19,0)
 Q
"RTN","DGPFPARM",20,0)
 ;
"RTN","DGPFPARM",21,0)
ON() ;Used to determine if the PRF software is 'active'.
"RTN","DGPFPARM",22,0)
 ;
"RTN","DGPFPARM",23,0)
 ; Input: None
"RTN","DGPFPARM",24,0)
 ;
"RTN","DGPFPARM",25,0)
 ;Output:
"RTN","DGPFPARM",26,0)
 ;  Function Value - 1 = 'Active', 0 = 'Not Active'
"RTN","DGPFPARM",27,0)
 ;
"RTN","DGPFPARM",28,0)
 ; - init variables
"RTN","DGPFPARM",29,0)
 N DGACT,RESULT
"RTN","DGPFPARM",30,0)
 S RESULT=0
"RTN","DGPFPARM",31,0)
 ;
"RTN","DGPFPARM",32,0)
 ;- get software activation date from PRF PARAMETERS (#26.18) file
"RTN","DGPFPARM",33,0)
 S DGACT=+$P($G(^DGPF(26.18,1,0)),U,2)
"RTN","DGPFPARM",34,0)
 ;
"RTN","DGPFPARM",35,0)
 ; - check if activation is past current date
"RTN","DGPFPARM",36,0)
 D
"RTN","DGPFPARM",37,0)
 .Q:('DGACT)!(DT<DGACT)
"RTN","DGPFPARM",38,0)
 .S RESULT=1
"RTN","DGPFPARM",39,0)
 ;
"RTN","DGPFPARM",40,0)
 Q RESULT
"RTN","DGPFPARM",41,0)
 ;
"RTN","DGPFPARM",42,0)
ORUON() ;Used to determine if ORU~R01 HL7 interface is 'enabled'.
"RTN","DGPFPARM",43,0)
 ;
"RTN","DGPFPARM",44,0)
 ;This function verifies that the PRF software is active and  then
"RTN","DGPFPARM",45,0)
 ;returns the state of the Unsolicited Observation Update HL7 inteface
"RTN","DGPFPARM",46,0)
 ;in the PRF PARAMETERS (#26.18) file.
"RTN","DGPFPARM",47,0)
 ;
"RTN","DGPFPARM",48,0)
 ;  Input:
"RTN","DGPFPARM",49,0)
 ;    none
"RTN","DGPFPARM",50,0)
 ;
"RTN","DGPFPARM",51,0)
 ;  Output:
"RTN","DGPFPARM",52,0)
 ;    Function value - 1 if interface is enabled, 0 if interface is
"RTN","DGPFPARM",53,0)
 ;                     disabled
"RTN","DGPFPARM",54,0)
 ;
"RTN","DGPFPARM",55,0)
 Q:'$$ON() 0
"RTN","DGPFPARM",56,0)
 Q +$P($G(^DGPF(26.18,1,0)),U,3)
"RTN","DGPFPARM",57,0)
 ;
"RTN","DGPFPARM",58,0)
QRYON() ;Used to determine if QRY~R02 HL7 interface is 'enabled'.
"RTN","DGPFPARM",59,0)
 ;
"RTN","DGPFPARM",60,0)
 ;This function verifies that the PRF software is active and then
"RTN","DGPFPARM",61,0)
 ;returns the state of the QRY HL7 inteface in the PRF PARAMETERS
"RTN","DGPFPARM",62,0)
 ;(#26.18) file.
"RTN","DGPFPARM",63,0)
 ;
"RTN","DGPFPARM",64,0)
 ;  Input:
"RTN","DGPFPARM",65,0)
 ;    none
"RTN","DGPFPARM",66,0)
 ;
"RTN","DGPFPARM",67,0)
 ;  Output:
"RTN","DGPFPARM",68,0)
 ;   Function value - 0 if interface is disabled, 1 if interface is
"RTN","DGPFPARM",69,0)
 ;                    enabled in 'direct' mode, 2 if interface is 
"RTN","DGPFPARM",70,0)
 ;                    enabled in 'deferred' mode.
"RTN","DGPFPARM",71,0)
 ;
"RTN","DGPFPARM",72,0)
 Q:'$$ON() 0
"RTN","DGPFPARM",73,0)
 Q +$P($G(^DGPF(26.18,1,0)),U,4)
"RTN","DGPFPARM",74,0)
 ;
"RTN","DGPFPARM",75,0)
P2ON() ;Used to determine if the PRF Phase 2 software is 'active'.
"RTN","DGPFPARM",76,0)
 ;
"RTN","DGPFPARM",77,0)
 ; Supported References:
"RTN","DGPFPARM",78,0)
 ;   DBIA #4440 KERNEL SYSTEM PARAMETERS (PROD^XUPROD())
"RTN","DGPFPARM",79,0)
 ;
"RTN","DGPFPARM",80,0)
 ;  Input: None
"RTN","DGPFPARM",81,0)
 ;
"RTN","DGPFPARM",82,0)
 ;  Output:
"RTN","DGPFPARM",83,0)
 ;   Function Value - 1 = 'Active', 0 = 'Not Active'
"RTN","DGPFPARM",84,0)
 ;
"RTN","DGPFPARM",85,0)
 N DGACT   ;activation date
"RTN","DGPFPARM",86,0)
 N DGRESULT  ;function value
"RTN","DGPFPARM",87,0)
 ;
"RTN","DGPFPARM",88,0)
 S DGRESULT=0
"RTN","DGPFPARM",89,0)
 ;
"RTN","DGPFPARM",90,0)
 ;- get software activation date from PRF PARAMETERS (#26.18) file
"RTN","DGPFPARM",91,0)
 S DGACT=+$P($G(^DGPF(26.18,1,0)),U,7)
"RTN","DGPFPARM",92,0)
 ;
"RTN","DGPFPARM",93,0)
 ;- check if activation is past current date in production
"RTN","DGPFPARM",94,0)
 I $$PROD^XUPROD() D     ;production account
"RTN","DGPFPARM",95,0)
 . Q:('DGACT)!(DT<DGACT)
"RTN","DGPFPARM",96,0)
 . S DGRESULT=1
"RTN","DGPFPARM",97,0)
 E  S DGRESULT=1           ;test account: always 'active'
"RTN","DGPFPARM",98,0)
 ;
"RTN","DGPFPARM",99,0)
 Q DGRESULT
"RTN","DGPFRAB")
0^48^B22179980
"RTN","DGPFRAB",1,0)
DGPFRAB ;ALB/RBS - PRF APPROVED BY REPORT ; 7/26/05 3:22pm
"RTN","DGPFRAB",2,0)
 ;;5.3;Registration;**554**;Aug 13, 1993
"RTN","DGPFRAB",3,0)
 ;
"RTN","DGPFRAB",4,0)
 ;This routine will be used for selecting sort parameters to produce
"RTN","DGPFRAB",5,0)
 ;the DGPF APPROVED BY REPORT for Patient Record Flags.
"RTN","DGPFRAB",6,0)
 ;
"RTN","DGPFRAB",7,0)
 ; Selection options will provide the ability to report by:
"RTN","DGPFRAB",8,0)
 ;  APPROVED BY PERSON
"RTN","DGPFRAB",9,0)
 ;  CATEGORY
"RTN","DGPFRAB",10,0)
 ;  STATUS (ASSIGNMENTS)
"RTN","DGPFRAB",11,0)
 ;  BEGINNING DATE
"RTN","DGPFRAB",12,0)
 ;  ENDING DATE
"RTN","DGPFRAB",13,0)
 ;
"RTN","DGPFRAB",14,0)
 ; The following reporting sort array will be built by user prompts:
"RTN","DGPFRAB",15,0)
 ;  DGSORT("DGAPROV") = pointer to NEW PERSON (#200) file^Person Name
"RTN","DGPFRAB",16,0)
 ;                      or
"RTN","DGPFRAB",17,0)
 ;                    = "A" = All approved by persons
"RTN","DGPFRAB",18,0)
 ;  DGSORT("DGCAT") = CATEGORY
"RTN","DGPFRAB",19,0)
 ;                      1^Category I (National)
"RTN","DGPFRAB",20,0)
 ;                      2^Category II (Local)
"RTN","DGPFRAB",21,0)
 ;                      3^Both
"RTN","DGPFRAB",22,0)
 ;  DGSORT("DGSTATUS") = Assignment Status to report on
"RTN","DGPFRAB",23,0)
 ;                         1^Active
"RTN","DGPFRAB",24,0)
 ;                         2^Inactive
"RTN","DGPFRAB",25,0)
 ;                         3^Both
"RTN","DGPFRAB",26,0)
 ;  DGSORT("DGBEG") = BEGINNING DATE  (internal FileMan date)
"RTN","DGPFRAB",27,0)
 ;  DGSORT("DGEND") = ENDING DATE     (internal FileMan date)
"RTN","DGPFRAB",28,0)
 ;
"RTN","DGPFRAB",29,0)
 ;-- no direct entry
"RTN","DGPFRAB",30,0)
 QUIT
"RTN","DGPFRAB",31,0)
 ;
"RTN","DGPFRAB",32,0)
EN ;Entry point
"RTN","DGPFRAB",33,0)
 ;-- user prompts for report selection sorts
"RTN","DGPFRAB",34,0)
 ;  Input: none
"RTN","DGPFRAB",35,0)
 ; Output: Report generated using user selected parameters
"RTN","DGPFRAB",36,0)
 ;
"RTN","DGPFRAB",37,0)
 N DGABORT ;abort flag
"RTN","DGPFRAB",38,0)
 N DGASK   ;return value from $$ANSWER^DGPFUT call
"RTN","DGPFRAB",39,0)
 N DGCAT   ;flag category to report on
"RTN","DGPFRAB",40,0)
 N DGDIRA  ;DGDIRA - DIR("A") string
"RTN","DGPFRAB",41,0)
 N DGDIRB  ;DGDIRB - DIR("B") string
"RTN","DGPFRAB",42,0)
 N DGDIRH  ;DGDIRH - DIR("?") string
"RTN","DGPFRAB",43,0)
 N DGDIRO  ;DGDIR0 - DIR(0) string
"RTN","DGPFRAB",44,0)
 N DGFIRST ;first assignment date
"RTN","DGPFRAB",45,0)
 N DGQ     ;quit flag
"RTN","DGPFRAB",46,0)
 N DGSEL   ;help text var
"RTN","DGPFRAB",47,0)
 N DGSORT  ;array or report parameters
"RTN","DGPFRAB",48,0)
 N ZTSAVE  ;open array reference of input parameters used by tasking
"RTN","DGPFRAB",49,0)
 ;
"RTN","DGPFRAB",50,0)
 ;check for database
"RTN","DGPFRAB",51,0)
 S DGFIRST=$P(+$O(^DGPF(26.14,"D","")),".")    ;first assignment date
"RTN","DGPFRAB",52,0)
 I 'DGFIRST D  Q
"RTN","DGPFRAB",53,0)
 . W !?2,">>> No Patient Record Flag Assignments have been found.",*7
"RTN","DGPFRAB",54,0)
 . I $$ANSWER^DGPFUT("Enter RETURN to continue","","E")  ;pause
"RTN","DGPFRAB",55,0)
 ;
"RTN","DGPFRAB",56,0)
 ;-- prompt for selection of an approved by person
"RTN","DGPFRAB",57,0)
 S DGDIRA="Select to report on a (S)ingle Approved By Person or (A)ll"
"RTN","DGPFRAB",58,0)
 S DGDIRB="Single"
"RTN","DGPFRAB",59,0)
 S DGDIRH="Enter one of the selections to report on"
"RTN","DGPFRAB",60,0)
 S DGDIRO="S^S:Single Approved By Person;A:All Approved By Persons"
"RTN","DGPFRAB",61,0)
 S DGASK=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO,DGDIRH)
"RTN","DGPFRAB",62,0)
 Q:DGASK=-1!(DGASK=0)
"RTN","DGPFRAB",63,0)
 ;
"RTN","DGPFRAB",64,0)
 S:DGASK="A" DGSORT("DGAPROV")="A"
"RTN","DGPFRAB",65,0)
 ;
"RTN","DGPFRAB",66,0)
 D:DGASK="S"
"RTN","DGPFRAB",67,0)
 . S (DGQ,DGABORT)=0
"RTN","DGPFRAB",68,0)
 . F  D  Q:(DGQ!DGABORT)
"RTN","DGPFRAB",69,0)
 . . S DGASK=$$ANSWER^DGPFUT("Select Approved By Person","","P^200:EMZ","Enter the person approving the record flag assignment","I $D(^DGPF(26.14,""APPRO"",+Y))")
"RTN","DGPFRAB",70,0)
 . . I DGASK<1 S DGABORT=1 Q
"RTN","DGPFRAB",71,0)
 . . S DGSORT("DGAPROV")=DGASK_U_$$EXTERNAL^DILFD(26.14,.05,"F",DGASK)
"RTN","DGPFRAB",72,0)
 . . S DGQ=1
"RTN","DGPFRAB",73,0)
 ;
"RTN","DGPFRAB",74,0)
 Q:$G(DGABORT)
"RTN","DGPFRAB",75,0)
 ;
"RTN","DGPFRAB",76,0)
 ;-- prompt for selection of a flag category
"RTN","DGPFRAB",77,0)
 S DGDIRA="Select Flag Category"
"RTN","DGPFRAB",78,0)
 S DGDIRB="Both"
"RTN","DGPFRAB",79,0)
 S DGDIRH="Enter one of the category selections to report on"
"RTN","DGPFRAB",80,0)
 S DGDIRO="S^1:Category I (National);2:Category II (Local);3:Both"
"RTN","DGPFRAB",81,0)
 S DGASK=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO,DGDIRH)
"RTN","DGPFRAB",82,0)
 Q:(DGASK<1)
"RTN","DGPFRAB",83,0)
 S DGCAT=DGASK,DGSORT("DGCAT")=DGASK_U_$S(DGCAT=1:"Category I (National)",DGCAT=2:"Category II (Local)",DGCAT=3:"Both",1:"")
"RTN","DGPFRAB",84,0)
 ;
"RTN","DGPFRAB",85,0)
 ;-- prompt for selection of the assignment status to report on
"RTN","DGPFRAB",86,0)
 S DGDIRA="Select Assignment Status to report on"
"RTN","DGPFRAB",87,0)
 S DGDIRB="Both"
"RTN","DGPFRAB",88,0)
 S DGDIRH="Enter one of the status selections to report on"
"RTN","DGPFRAB",89,0)
 S DGDIRO="S^1:Active;2:Inactive;3:Both"
"RTN","DGPFRAB",90,0)
 S DGASK=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO,DGDIRH)
"RTN","DGPFRAB",91,0)
 Q:(DGASK<1)
"RTN","DGPFRAB",92,0)
 S DGSORT("DGSTATUS")=DGASK_U_$S(DGASK=1:"Active",DGASK=2:"Inactive",DGASK=3:"Both",1:3)
"RTN","DGPFRAB",93,0)
 ;
"RTN","DGPFRAB",94,0)
 ;-- prompt for beginning date
"RTN","DGPFRAB",95,0)
 S DGDIRA="Select Beginning Date"
"RTN","DGPFRAB",96,0)
 S DGDIRB=""
"RTN","DGPFRAB",97,0)
 S DGDIRH="^D HELP^DGPFRAB(1)"
"RTN","DGPFRAB",98,0)
 S DGDIRO="D^"_DGFIRST_":DT:EX"
"RTN","DGPFRAB",99,0)
 S DGASK=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO,DGDIRH)
"RTN","DGPFRAB",100,0)
 Q:(DGASK=-1)
"RTN","DGPFRAB",101,0)
 S DGSORT("DGBEG")=DGASK
"RTN","DGPFRAB",102,0)
 ;
"RTN","DGPFRAB",103,0)
 ;-- prompt for ending date
"RTN","DGPFRAB",104,0)
 S DGDIRA="Select Ending Date"
"RTN","DGPFRAB",105,0)
 S DGDIRB=""
"RTN","DGPFRAB",106,0)
 S DGDIRH="^D HELP^DGPFRAB(2)"
"RTN","DGPFRAB",107,0)
 S DGDIRO="D^"_DGSORT("DGBEG")_":DT:EX"
"RTN","DGPFRAB",108,0)
 S DGASK=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO,DGDIRH)
"RTN","DGPFRAB",109,0)
 Q:(DGASK=-1)
"RTN","DGPFRAB",110,0)
 S DGSORT("DGEND")=DGASK
"RTN","DGPFRAB",111,0)
 ;
"RTN","DGPFRAB",112,0)
 K DGCAT,DGDIRA,DGDIRB,DGDIRO,DGDIRH,DGASK,DGQ,DGABORT
"RTN","DGPFRAB",113,0)
 ;
"RTN","DGPFRAB",114,0)
 ;-- prompt for device
"RTN","DGPFRAB",115,0)
 S ZTSAVE("DGSORT(")=""
"RTN","DGPFRAB",116,0)
 D EN^XUTMDEVQ("START^DGPFRAB1","Assignments Approved By Report",.ZTSAVE)
"RTN","DGPFRAB",117,0)
 D HOME^%ZIS
"RTN","DGPFRAB",118,0)
 Q
"RTN","DGPFRAB",119,0)
 ;
"RTN","DGPFRAB",120,0)
HELP(DGSEL) ;provide extended DIR("?") help text.
"RTN","DGPFRAB",121,0)
 ;
"RTN","DGPFRAB",122,0)
 ;  Input: DGSEL - prompt var for help text word selection
"RTN","DGPFRAB",123,0)
 ; Output: none
"RTN","DGPFRAB",124,0)
 ;
"RTN","DGPFRAB",125,0)
 W !,"  Enter the "_$S(DGSEL=1:"earliest",1:"latest")_" Assignment Date to include in the report."
"RTN","DGPFRAB",126,0)
 W !,"  Please enter a date from the specified date range displayed."
"RTN","DGPFRAB",127,0)
 Q
"RTN","DGPFRAB1")
0^49^B63522463
"RTN","DGPFRAB1",1,0)
DGPFRAB1 ;ALB/RBS - PRF APPROVED BY REPORT CONT. ; 6/4/04 11:17am
"RTN","DGPFRAB1",2,0)
 ;;5.3;Registration;**554**;Aug 13, 1993
"RTN","DGPFRAB1",3,0)
 ;
"RTN","DGPFRAB1",4,0)
 ;This routine will be used to display or print all Patient Record
"RTN","DGPFRAB1",5,0)
 ;Flag Assignment History Actions for the Approved By Person who
"RTN","DGPFRAB1",6,0)
 ;authorized the new entry or edit of an assignment to the patient.
"RTN","DGPFRAB1",7,0)
 ;
"RTN","DGPFRAB1",8,0)
 ; Input: The following sort array contains the report parameters:
"RTN","DGPFRAB1",9,0)
 ;  DGSORT("DGAPROV") = pointer to NEW PERSON (#200) file^Person Name
"RTN","DGPFRAB1",10,0)
 ;                      or
"RTN","DGPFRAB1",11,0)
 ;                    = "A" = All approved by persons
"RTN","DGPFRAB1",12,0)
 ;  DGSORT("DGCAT") = CATEGORY
"RTN","DGPFRAB1",13,0)
 ;                      1^Category I (National)
"RTN","DGPFRAB1",14,0)
 ;                      2^Category II (Local)
"RTN","DGPFRAB1",15,0)
 ;                      3^Both
"RTN","DGPFRAB1",16,0)
 ;  DGSORT("DGSTATUS") = Assignment Status to report on
"RTN","DGPFRAB1",17,0)
 ;                         1^Active
"RTN","DGPFRAB1",18,0)
 ;                         2^Inactive
"RTN","DGPFRAB1",19,0)
 ;                         3^Both
"RTN","DGPFRAB1",20,0)
 ;  DGSORT("DGBEG") = BEGINNING DATE  (internal FileMan date)
"RTN","DGPFRAB1",21,0)
 ;  DGSORT("DGEND") = ENDING DATE     (internal FileMan date)
"RTN","DGPFRAB1",22,0)
 ;
"RTN","DGPFRAB1",23,0)
 ; Output:  A formatted report of the Approved By person's assignments
"RTN","DGPFRAB1",24,0)
 ;          that they have authorized to be assigned to a patient.
"RTN","DGPFRAB1",25,0)
 ;
"RTN","DGPFRAB1",26,0)
 ;- no direct entry
"RTN","DGPFRAB1",27,0)
 QUIT
"RTN","DGPFRAB1",28,0)
 ;
"RTN","DGPFRAB1",29,0)
START ; compile and print report
"RTN","DGPFRAB1",30,0)
 I $E(IOST)="C" D WAIT^DICD
"RTN","DGPFRAB1",31,0)
 N DGLIST ;temp global name used for report list
"RTN","DGPFRAB1",32,0)
 S DGLIST=$NA(^TMP("DGPFRAB1",$J))
"RTN","DGPFRAB1",33,0)
 K @DGLIST
"RTN","DGPFRAB1",34,0)
 D LOOP(.DGSORT,DGLIST)
"RTN","DGPFRAB1",35,0)
 D PRINT(.DGSORT,DGLIST)
"RTN","DGPFRAB1",36,0)
 K @DGLIST
"RTN","DGPFRAB1",37,0)
 D EXIT
"RTN","DGPFRAB1",38,0)
 Q
"RTN","DGPFRAB1",39,0)
 ;
"RTN","DGPFRAB1",40,0)
LOOP(DGSORT,DGLIST) ;use sort var's for record searching to build list
"RTN","DGPFRAB1",41,0)
 ;  Input:
"RTN","DGPFRAB1",42,0)
 ;      DGSORT - array of user selected report parameters
"RTN","DGPFRAB1",43,0)
 ;      DGLIST - temp global name
"RTN","DGPFRAB1",44,0)
 ;
"RTN","DGPFRAB1",45,0)
 ; Output:
"RTN","DGPFRAB1",46,0)
 ;      ^TMP("DGPFRAB1",$J) - temp global containing report output
"RTN","DGPFRAB1",47,0)
 ;
"RTN","DGPFRAB1",48,0)
 N DGABIEN  ;approved by person ien
"RTN","DGPFRAB1",49,0)
 N DGAIEN   ;approved by history assignment ien
"RTN","DGPFRAB1",50,0)
 N DGAPROV  ;approved by sort
"RTN","DGPFRAB1",51,0)
 N DGBEG    ;sort beginning date
"RTN","DGPFRAB1",52,0)
 N DGC      ;var used to check which category is being reported on
"RTN","DGPFRAB1",53,0)
 N DGCAT    ;sort flag category
"RTN","DGPFRAB1",54,0)
 N DGCATG   ;category 1 or 2
"RTN","DGPFRAB1",55,0)
 N DGEND    ;sort ending date
"RTN","DGPFRAB1",56,0)
 N DGHIEN   ;history assignment ien
"RTN","DGPFRAB1",57,0)
 N DGPFA    ;assignment data array
"RTN","DGPFRAB1",58,0)
 N DGPFAH   ;assignment history data array
"RTN","DGPFRAB1",59,0)
 N DGQ      ;quit var
"RTN","DGPFRAB1",60,0)
 N DGSTAT   ;status of assignment
"RTN","DGPFRAB1",61,0)
 N DGSTATUS ;sort status
"RTN","DGPFRAB1",62,0)
 N DGSUB    ;loop flag
"RTN","DGPFRAB1",63,0)
 N DGX      ;loop var
"RTN","DGPFRAB1",64,0)
 ;
"RTN","DGPFRAB1",65,0)
 ; setup variables equal to user input parameter subscripts
"RTN","DGPFRAB1",66,0)
 ;   "DGAPROV", "DGCAT", "DGSTATUS", "DGBEG", "DGEND"
"RTN","DGPFRAB1",67,0)
 S DGX="" F  S DGX=$O(DGSORT(DGX)) Q:DGX=""  S @DGX=DGSORT(DGX)
"RTN","DGPFRAB1",68,0)
 ;
"RTN","DGPFRAB1",69,0)
 S DGABIEN=+DGAPROV  ; if 0, then All Approved By sort
"RTN","DGPFRAB1",70,0)
 S DGC=$S(+DGCAT=3:0,1:+DGCAT)  ; 0=Both categories sort
"RTN","DGPFRAB1",71,0)
 S:DGC DGC=$S(DGC=1:26.15,1:26.11)  ; specific file
"RTN","DGPFRAB1",72,0)
 S DGSTAT=+DGSTATUS   ; assignments status to report on
"RTN","DGPFRAB1",73,0)
 S:DGSTAT=2 DGSTAT=0  ; inactive status value is '0'
"RTN","DGPFRAB1",74,0)
 ;
"RTN","DGPFRAB1",75,0)
 ; seed var to start at user selected values
"RTN","DGPFRAB1",76,0)
 S (DGQ,DGSUB)=0
"RTN","DGPFRAB1",77,0)
 S DGSUB=DGBEG-1
"RTN","DGPFRAB1",78,0)
 ;
"RTN","DGPFRAB1",79,0)
 ; loop history assignment d/t & approve by x-ref file
"RTN","DGPFRAB1",80,0)
 F  S DGSUB=$O(^DGPF(26.14,"D",DGSUB)) Q:DGSUB=""  D  Q:DGQ
"RTN","DGPFRAB1",81,0)
 . I DGSUB>(DGEND+.999999999) S DGQ=1 Q
"RTN","DGPFRAB1",82,0)
 . S DGAIEN=""
"RTN","DGPFRAB1",83,0)
 . S:DGABIEN DGAIEN=DGABIEN-1  ;seed var to start before selection
"RTN","DGPFRAB1",84,0)
 . F  S DGAIEN=$O(^DGPF(26.14,"D",DGSUB,DGAIEN)) Q:DGAIEN=""  D
"RTN","DGPFRAB1",85,0)
 .. I DGABIEN,(DGAIEN>DGABIEN) Q
"RTN","DGPFRAB1",86,0)
 .. S DGHIEN=""
"RTN","DGPFRAB1",87,0)
 .. F  S DGHIEN=$O(^DGPF(26.14,"D",DGSUB,DGAIEN,DGHIEN)) Q:DGHIEN=""  D
"RTN","DGPFRAB1",88,0)
 ...K DGPFAH
"RTN","DGPFRAB1",89,0)
 ...Q:'$$GETHIST^DGPFAAH(DGHIEN,.DGPFAH)
"RTN","DGPFRAB1",90,0)
 ...I DGABIEN,(+DGPFAH("APPRVBY")'=DGABIEN) Q
"RTN","DGPFRAB1",91,0)
 ...K DGPFA
"RTN","DGPFRAB1",92,0)
 ...Q:'$$GETASGN^DGPFAA(+DGPFAH("ASSIGN"),.DGPFA)
"RTN","DGPFRAB1",93,0)
 ...I DGC,DGPFA("FLAG")'[DGC Q  ;not correct category
"RTN","DGPFRAB1",94,0)
 ...I DGSTAT'=3,+DGPFA("STATUS")'=DGSTAT Q  ;not correct status
"RTN","DGPFRAB1",95,0)
 ...S DGCATG=$S(DGPFA("FLAG")[26.15:1,1:2)
"RTN","DGPFRAB1",96,0)
 ...D BLDTMP(.DGPFA,.DGPFAH,DGHIEN,DGCATG,DGLIST)
"RTN","DGPFRAB1",97,0)
 Q
"RTN","DGPFRAB1",98,0)
 ;
"RTN","DGPFRAB1",99,0)
BLDTMP(DGPFA,DGPFAH,DGHIEN,DGCATG,DGLIST) ; list global builder
"RTN","DGPFRAB1",100,0)
 ;  Input:
"RTN","DGPFRAB1",101,0)
 ;      DGPFA  - array of assignment record data
"RTN","DGPFRAB1",102,0)
 ;      DGPFAH - array of assignment history record data
"RTN","DGPFRAB1",103,0)
 ;      DGHIEN - ien to PRF ASSIGNMENT HISTORY (#26.14) file record
"RTN","DGPFRAB1",104,0)
 ;      DGCATG - category of flag 1=National, 2=Local
"RTN","DGPFRAB1",105,0)
 ;      DGLIST - temp global name used for report list
"RTN","DGPFRAB1",106,0)
 ;
"RTN","DGPFRAB1",107,0)
 ; Output:
"RTN","DGPFRAB1",108,0)
 ;      ^TMP("DGPFRFA1",$J) - temp global containing report output
"RTN","DGPFRAB1",109,0)
 ;
"RTN","DGPFRAB1",110,0)
 N DG1,DG2 ;subscript var's
"RTN","DGPFRAB1",111,0)
 N DGACTDT ;initial entry date
"RTN","DGPFRAB1",112,0)
 N DGDFN   ;pointer to patient being reported on
"RTN","DGPFRAB1",113,0)
 N DGFGNM  ;flag name
"RTN","DGPFRAB1",114,0)
 N DGLINE  ;report detail line
"RTN","DGPFRAB1",115,0)
 N DGPAT   ;array of patient demographics
"RTN","DGPFRAB1",116,0)
 N DGPNM   ;patient name
"RTN","DGPFRAB1",117,0)
 N DGREV   ;review date
"RTN","DGPFRAB1",118,0)
 ;
"RTN","DGPFRAB1",119,0)
 ; get patient demographics
"RTN","DGPFRAB1",120,0)
 S DGDFN=$P(DGPFA("DFN"),U)
"RTN","DGPFRAB1",121,0)
 K DGPAT
"RTN","DGPFRAB1",122,0)
 Q:'$$GETPAT^DGPFUT2(DGDFN,.DGPAT)
"RTN","DGPFRAB1",123,0)
 S DGPNM=DGPAT("NAME")
"RTN","DGPFRAB1",124,0)
 S:DGPNM']"" DGPNM="MISSING PATIENT NAME"
"RTN","DGPFRAB1",125,0)
 S DGFGNM=$P(DGPFA("FLAG"),U,2)
"RTN","DGPFRAB1",126,0)
 S:DGFGNM']"" DGFGNM="MISSING FLAG NAME"
"RTN","DGPFRAB1",127,0)
 S DGACTDT=$$FDATE^VALM1(+DGPFAH("ASSIGNDT"))
"RTN","DGPFRAB1",128,0)
 I +DGPFA("REVIEWDT") D
"RTN","DGPFRAB1",129,0)
 .S DGREV=$$FDATE^VALM1(+DGPFA("REVIEWDT"))
"RTN","DGPFRAB1",130,0)
 E  S DGREV="N/A"
"RTN","DGPFRAB1",131,0)
 S DGLINE=DGPAT("SSN")_U_$P(DGPFAH("ACTION"),U,2)_U_DGACTDT_U_DGREV_U_$P(DGPFA("STATUS"),U,2)
"RTN","DGPFRAB1",132,0)
 ; setup subscripts -
"RTN","DGPFRAB1",133,0)
 ; - Approved By Name, IEN, Cat, Flag Name, Pat Name, DFN, History IEN
"RTN","DGPFRAB1",134,0)
 S DG1=$P(DGPFAH("APPRVBY"),U,2),DG2=$P(DGPFAH("APPRVBY"),U)
"RTN","DGPFRAB1",135,0)
 S @DGLIST@(DG1,DG2,DGCATG,DGFGNM,DGPNM,DGDFN,DGHIEN)=DGLINE
"RTN","DGPFRAB1",136,0)
 Q
"RTN","DGPFRAB1",137,0)
 ;
"RTN","DGPFRAB1",138,0)
PRINT(DGSORT,DGLIST) ;output report
"RTN","DGPFRAB1",139,0)
 ;  Input:
"RTN","DGPFRAB1",140,0)
 ;      DGSORT - array of user selected report parameters
"RTN","DGPFRAB1",141,0)
 ;      DGLIST - temp global name used for report list
"RTN","DGPFRAB1",142,0)
 ;
"RTN","DGPFRAB1",143,0)
 ; Output: Formatted report to user selected device
"RTN","DGPFRAB1",144,0)
 ;
"RTN","DGPFRAB1",145,0)
 N DGAPNM  ;approved by name
"RTN","DGPFRAB1",146,0)
 N DGCAT   ;flag category
"RTN","DGPFRAB1",147,0)
 N DGCNT   ;counter of detail lines
"RTN","DGPFRAB1",148,0)
 N DGDFN   ;ien of patient
"RTN","DGPFRAB1",149,0)
 N DGDT    ;date time report printed
"RTN","DGPFRAB1",150,0)
 N DGFG    ;flag name
"RTN","DGPFRAB1",151,0)
 N DGIEN   ;approved by ien
"RTN","DGPFRAB1",152,0)
 N DGLINE  ;string of hyphens (80) for report header format
"RTN","DGPFRAB1",153,0)
 N DGLN    ;loop var
"RTN","DGPFRAB1",154,0)
 N DGNAM   ;patient name
"RTN","DGPFRAB1",155,0)
 N DGOCAT  ;category switch flag
"RTN","DGPFRAB1",156,0)
 N DGODFN  ;loop var flag
"RTN","DGPFRAB1",157,0)
 N DGOFG   ;name switch flag
"RTN","DGPFRAB1",158,0)
 N DGOIEN  ;ien switch flag
"RTN","DGPFRAB1",159,0)
 N DGPAGE  ;page counter
"RTN","DGPFRAB1",160,0)
 N DGQ     ;quit flag
"RTN","DGPFRAB1",161,0)
 N DGSTR   ;string of detail line to display
"RTN","DGPFRAB1",162,0)
 N X,Y
"RTN","DGPFRAB1",163,0)
 ;
"RTN","DGPFRAB1",164,0)
 S (DGCNT,DGQ,DGPAGE)=0,$P(DGLINE,"-",81)=""
"RTN","DGPFRAB1",165,0)
 S DGDT=$P($$FMTE^XLFDT($$NOW^XLFDT,"T"),":",1,2)
"RTN","DGPFRAB1",166,0)
 ;
"RTN","DGPFRAB1",167,0)
 I $O(@DGLIST@(""))="" D  Q
"RTN","DGPFRAB1",168,0)
 . D HEAD
"RTN","DGPFRAB1",169,0)
 . W !!,"   >>> No Record Flag Assignments were found using the report criteria.",!
"RTN","DGPFRAB1",170,0)
 ;
"RTN","DGPFRAB1",171,0)
 ; loop and print report
"RTN","DGPFRAB1",172,0)
 S (DGIEN,DGOIEN,DGAPNM,DGCAT,DGOCAT,DGFG,DGOFG,DGNAM,DGDFN,DGODFN,DGLN,DGSTR)=""
"RTN","DGPFRAB1",173,0)
 D HEAD
"RTN","DGPFRAB1",174,0)
 F  S DGAPNM=$O(@DGLIST@(DGAPNM)) Q:DGAPNM=""  D  Q:DGQ
"RTN","DGPFRAB1",175,0)
 . F  S DGIEN=$O(@DGLIST@(DGAPNM,DGIEN)) Q:DGIEN=""  D  Q:DGQ
"RTN","DGPFRAB1",176,0)
 . . I $Y>(IOSL-8) D PAUSE(.DGQ) Q:DGQ  D HEAD,HEAD1 S DGOIEN=DGIEN
"RTN","DGPFRAB1",177,0)
 . . I DGOIEN'=DGIEN S DGOIEN=DGIEN W:DGCNT ! D HEAD1
"RTN","DGPFRAB1",178,0)
 . . F  S DGCAT=$O(@DGLIST@(DGAPNM,DGIEN,DGCAT)) Q:DGCAT=""  D  Q:DGQ
"RTN","DGPFRAB1",179,0)
 . . . F  S DGFG=$O(@DGLIST@(DGAPNM,DGIEN,DGCAT,DGFG)) Q:DGFG=""  D  Q:DGQ
"RTN","DGPFRAB1",180,0)
 . . . . I $Y>(IOSL-8) D PAUSE(.DGQ) Q:DGQ  D HEAD,HEAD1,HEAD2 S DGOFG=DGFG
"RTN","DGPFRAB1",181,0)
 . . . . I DGOFG'=DGFG W:DGOFG]"" !! D HEAD2 S DGOFG=DGFG
"RTN","DGPFRAB1",182,0)
 . . . . ; print patient detail line
"RTN","DGPFRAB1",183,0)
 . . . . D PRNTPAT
"RTN","DGPFRAB1",184,0)
 . ; reset var's to pop header's
"RTN","DGPFRAB1",185,0)
 . S (DGOIEN,DGOCAT,DGOFG)=""
"RTN","DGPFRAB1",186,0)
 ;
"RTN","DGPFRAB1",187,0)
 ;Shutdown if stop task requested
"RTN","DGPFRAB1",188,0)
 I DGQ W:$D(ZTQUEUED) !!,"REPORT STOPPED AT USER REQUEST" Q
"RTN","DGPFRAB1",189,0)
 ;
"RTN","DGPFRAB1",190,0)
 W !!,"<End of Report>"
"RTN","DGPFRAB1",191,0)
 Q
"RTN","DGPFRAB1",192,0)
 ;
"RTN","DGPFRAB1",193,0)
PRNTPAT ; loop and print all patients for flag
"RTN","DGPFRAB1",194,0)
 ;
"RTN","DGPFRAB1",195,0)
 S DGODFN=""
"RTN","DGPFRAB1",196,0)
 F  S DGNAM=$O(@DGLIST@(DGAPNM,DGIEN,DGCAT,DGFG,DGNAM)) Q:DGNAM=""  D  Q:DGQ
"RTN","DGPFRAB1",197,0)
 . F  S DGDFN=$O(@DGLIST@(DGAPNM,DGIEN,DGCAT,DGFG,DGNAM,DGDFN)) Q:DGDFN=""  D  Q:DGQ
"RTN","DGPFRAB1",198,0)
 . . F  S DGLN=$O(@DGLIST@(DGAPNM,DGIEN,DGCAT,DGFG,DGNAM,DGDFN,DGLN)) Q:DGLN=""  D  Q:DGQ
"RTN","DGPFRAB1",199,0)
 . . . I $Y>(IOSL-3) D PAUSE(.DGQ) Q:DGQ  D HEAD,HEAD1,HEAD2 S DGODFN=""
"RTN","DGPFRAB1",200,0)
 . . . S DGSTR=$G(@DGLIST@(DGAPNM,DGIEN,DGCAT,DGFG,DGNAM,DGDFN,DGLN))
"RTN","DGPFRAB1",201,0)
 . . . W !
"RTN","DGPFRAB1",202,0)
 . . . I DGODFN'=DGDFN S DGODFN=DGDFN D  ;only print name once
"RTN","DGPFRAB1",203,0)
 . . . . W $E(DGNAM,1,16),?18,$P(DGSTR,U)
"RTN","DGPFRAB1",204,0)
 . . . W ?30,$P(DGSTR,U,2),?48,$P(DGSTR,U,3),?60,$P(DGSTR,U,4),?71,$P(DGSTR,U,5)
"RTN","DGPFRAB1",205,0)
 . . . S DGCNT=DGCNT+1
"RTN","DGPFRAB1",206,0)
 Q
"RTN","DGPFRAB1",207,0)
 ;
"RTN","DGPFRAB1",208,0)
PAUSE(DGQ) ; pause screen display
"RTN","DGPFRAB1",209,0)
 ;  Input: 
"RTN","DGPFRAB1",210,0)
 ;      DGQ - var used to quit report processing to user CRT
"RTN","DGPFRAB1",211,0)
 ; Output:
"RTN","DGPFRAB1",212,0)
 ;      DGQ - passed by reference - 0 = Continue, 1 = Quit
"RTN","DGPFRAB1",213,0)
 ;
"RTN","DGPFRAB1",214,0)
 I $G(DGPAGE)>0,$E(IOST,1,2)="C-" K DIR S DIR(0)="E" D ^DIR K DIR S:+Y=0 DGQ=1
"RTN","DGPFRAB1",215,0)
 Q
"RTN","DGPFRAB1",216,0)
 ;
"RTN","DGPFRAB1",217,0)
HEAD ;Print/Display page header
"RTN","DGPFRAB1",218,0)
 ;
"RTN","DGPFRAB1",219,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S (ZTSTOP,DGQ)=1 Q
"RTN","DGPFRAB1",220,0)
 W:'($E(IOST,1,2)'="C-"&'DGPAGE) @IOF
"RTN","DGPFRAB1",221,0)
 ;
"RTN","DGPFRAB1",222,0)
 S DGPAGE=$G(DGPAGE)+1
"RTN","DGPFRAB1",223,0)
 W !?25,"PATIENT RECORD FLAGS"
"RTN","DGPFRAB1",224,0)
 W !?20,"ASSIGNMENTS APPROVED BY REPORT",?68,"Page: ",$G(DGPAGE)
"RTN","DGPFRAB1",225,0)
 W !,"Date Range: ",$$FDATE^VALM1(DGSORT("DGBEG"))_" to "_$$FDATE^VALM1(DGSORT("DGEND"))
"RTN","DGPFRAB1",226,0)
 W ?50,"Printed: ",DGDT
"RTN","DGPFRAB1",227,0)
 W !,DGLINE
"RTN","DGPFRAB1",228,0)
 Q
"RTN","DGPFRAB1",229,0)
 ;
"RTN","DGPFRAB1",230,0)
HEAD1 W !!,"Approved By: ",DGAPNM
"RTN","DGPFRAB1",231,0)
 Q
"RTN","DGPFRAB1",232,0)
 ;
"RTN","DGPFRAB1",233,0)
HEAD2 W !,"Flag Name: ",$G(DGFG)," - ",$S(+DGCAT=1:"Category I (National)",1:"Category II (Local)")
"RTN","DGPFRAB1",234,0)
 ;
"RTN","DGPFRAB1",235,0)
 W !!,"PATIENT",?18,"SSN",?30,"ACTION",?48,"ACTION DT",?60,"REVIEW DT",?71,"STATUS"
"RTN","DGPFRAB1",236,0)
 W !,"================",?18,"==========",?30,"================",?48,"=========",?60,"=========",?71,"========="
"RTN","DGPFRAB1",237,0)
 Q
"RTN","DGPFRAB1",238,0)
 ;
"RTN","DGPFRAB1",239,0)
EXIT ;
"RTN","DGPFRAB1",240,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","DGPFRAB1",241,0)
 I '$D(ZTQUEUED) D
"RTN","DGPFRAB1",242,0)
 . K %ZIS,POP
"RTN","DGPFRAB1",243,0)
 . D ^%ZISC,HOME^%ZIS
"RTN","DGPFRAB1",244,0)
 Q
"RTN","DGPFRAL")
0^42^B10972020
"RTN","DGPFRAL",1,0)
DGPFRAL ;ALB/RBS - PRF ACTION NOT LINKED REPORT ; 7/26/05 3:18pm
"RTN","DGPFRAL",2,0)
 ;;5.3;Registration;**554**;Aug 13, 1993
"RTN","DGPFRAL",3,0)
 ;
"RTN","DGPFRAL",4,0)
 ;This routine will be used for selecting sort parameters to produce
"RTN","DGPFRAL",5,0)
 ;the DGPF ACTION NOT LINKED REPORT for Patient Record Flags.
"RTN","DGPFRAL",6,0)
 ;
"RTN","DGPFRAL",7,0)
 ; Selection options will provide the ability to report by:
"RTN","DGPFRAL",8,0)
 ;  CATEGORY
"RTN","DGPFRAL",9,0)
 ;  BEGINNING DATE
"RTN","DGPFRAL",10,0)
 ;  ENDING DATE
"RTN","DGPFRAL",11,0)
 ;
"RTN","DGPFRAL",12,0)
 ; The following reporting sort array will be built by user prompts:
"RTN","DGPFRAL",13,0)
 ;  DGSORT("DGCAT") = CATEGORY
"RTN","DGPFRAL",14,0)
 ;                      1^Category I (National)
"RTN","DGPFRAL",15,0)
 ;                      2^Category II (Local)
"RTN","DGPFRAL",16,0)
 ;                      3^Both
"RTN","DGPFRAL",17,0)
 ;  DGSORT("DGBEG") = BEGINNING DATE  (internal FileMan date)
"RTN","DGPFRAL",18,0)
 ;  DGSORT("DGEND") = ENDING DATE     (internal FileMan date)
"RTN","DGPFRAL",19,0)
 ;
"RTN","DGPFRAL",20,0)
 ;-- no direct entry
"RTN","DGPFRAL",21,0)
 QUIT
"RTN","DGPFRAL",22,0)
 ;
"RTN","DGPFRAL",23,0)
EN ;Entry point
"RTN","DGPFRAL",24,0)
 ;-- user prompts for report selection sorts
"RTN","DGPFRAL",25,0)
 ;  Input: none
"RTN","DGPFRAL",26,0)
 ; Output: Report generated using user selected parameters
"RTN","DGPFRAL",27,0)
 ;
"RTN","DGPFRAL",28,0)
 N DGASK   ;return value from $$ANSWER^DGPFUT call
"RTN","DGPFRAL",29,0)
 N DGCAT   ;flag category to report on
"RTN","DGPFRAL",30,0)
 N DGDIRA  ;DGDIRA - DIR("A") string
"RTN","DGPFRAL",31,0)
 N DGDIRB  ;DGDIRB - DIR("B") string
"RTN","DGPFRAL",32,0)
 N DGDIRH  ;DGDIRH - DIR("?") string
"RTN","DGPFRAL",33,0)
 N DGDIRO  ;DGDIR0 - DIR(0) string
"RTN","DGPFRAL",34,0)
 N DGFIRST ;first assignment date
"RTN","DGPFRAL",35,0)
 N DGSEL   ;help text var
"RTN","DGPFRAL",36,0)
 N DGSORT  ;array or report parameters
"RTN","DGPFRAL",37,0)
 N ZTSAVE  ;open array reference of input parameters used by tasking
"RTN","DGPFRAL",38,0)
 ;
"RTN","DGPFRAL",39,0)
 S DGFIRST=$P(+$O(^DGPF(26.14,"D","")),".")    ;first assignment date
"RTN","DGPFRAL",40,0)
 I 'DGFIRST D  Q
"RTN","DGPFRAL",41,0)
 . W !?2,">>> No Patient Record Flag Assignments have been found.",*7
"RTN","DGPFRAL",42,0)
 . I $$ANSWER^DGPFUT("Enter RETURN to continue","","E")  ;pause
"RTN","DGPFRAL",43,0)
 ;
"RTN","DGPFRAL",44,0)
 ;-- prompt for selection of a flag category
"RTN","DGPFRAL",45,0)
 S DGDIRA="Select Flag Category"
"RTN","DGPFRAL",46,0)
 S DGDIRB=""
"RTN","DGPFRAL",47,0)
 S DGDIRH="Enter one of the category selections to report on"
"RTN","DGPFRAL",48,0)
 S DGDIRO="S^1:Category I (National);2:Category II (Local);3:Both"
"RTN","DGPFRAL",49,0)
 S DGASK=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO,DGDIRH)
"RTN","DGPFRAL",50,0)
 Q:(DGASK<1)
"RTN","DGPFRAL",51,0)
 S DGCAT=DGASK,DGSORT("DGCAT")=DGASK_U_$S(DGCAT=1:"Category I (National)",DGCAT=2:"Category II (Local)",DGCAT=3:"Both",1:"")
"RTN","DGPFRAL",52,0)
 ;
"RTN","DGPFRAL",53,0)
 ;-- prompt for beginning date
"RTN","DGPFRAL",54,0)
 S DGDIRA="Select Beginning Date"
"RTN","DGPFRAL",55,0)
 S DGDIRB=""
"RTN","DGPFRAL",56,0)
 S DGDIRH="^D HELP^DGPFRAL(1)"
"RTN","DGPFRAL",57,0)
 S DGDIRO="D^"_DGFIRST_":DT:EX"
"RTN","DGPFRAL",58,0)
 S DGASK=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO,DGDIRH)
"RTN","DGPFRAL",59,0)
 Q:(DGASK=-1)
"RTN","DGPFRAL",60,0)
 S DGSORT("DGBEG")=DGASK
"RTN","DGPFRAL",61,0)
 ;
"RTN","DGPFRAL",62,0)
 ;-- prompt for ending date
"RTN","DGPFRAL",63,0)
 S DGDIRA="Select Ending Date"
"RTN","DGPFRAL",64,0)
 S DGDIRB=""
"RTN","DGPFRAL",65,0)
 S DGDIRH="^D HELP^DGPFRAL(2)"
"RTN","DGPFRAL",66,0)
 S DGDIRO="D^"_DGSORT("DGBEG")_":DT:EX"
"RTN","DGPFRAL",67,0)
 S DGASK=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO,DGDIRH)
"RTN","DGPFRAL",68,0)
 Q:(DGASK=-1)
"RTN","DGPFRAL",69,0)
 S DGSORT("DGEND")=DGASK
"RTN","DGPFRAL",70,0)
 ;
"RTN","DGPFRAL",71,0)
 K DGCAT,DGDIRA,DGDIRB,DGDIRO,DGDIRH,DGASK,DGFIRST
"RTN","DGPFRAL",72,0)
 ;
"RTN","DGPFRAL",73,0)
 ;-- prompt for device
"RTN","DGPFRAL",74,0)
 S ZTSAVE("DGSORT(")=""
"RTN","DGPFRAL",75,0)
 D EN^XUTMDEVQ("START^DGPFRAL1","Assignment Action Not Linked to a Progress Note Report",.ZTSAVE)
"RTN","DGPFRAL",76,0)
 D HOME^%ZIS
"RTN","DGPFRAL",77,0)
 Q
"RTN","DGPFRAL",78,0)
 ;
"RTN","DGPFRAL",79,0)
HELP(DGSEL) ;provide extended DIR("?") help text.
"RTN","DGPFRAL",80,0)
 ;
"RTN","DGPFRAL",81,0)
 ;  Input: DGSEL - prompt var for help text word selection
"RTN","DGPFRAL",82,0)
 ; Output: none
"RTN","DGPFRAL",83,0)
 ;
"RTN","DGPFRAL",84,0)
 W !,"  Enter the "_$S(DGSEL=1:"earliest",1:"latest")_" Assignment Action Date to include in the report."
"RTN","DGPFRAL",85,0)
 W !,"  Please enter a date from the specified date range displayed."
"RTN","DGPFRAL",86,0)
 Q
"RTN","DGPFRAL1")
0^43^B71927213
"RTN","DGPFRAL1",1,0)
DGPFRAL1 ;ALB/RBS - PRF ACTION NOT LINKED REPORT CONT. ; 10/12/05 1:24pm
"RTN","DGPFRAL1",2,0)
 ;;5.3;Registration;**554**;Aug 13, 1993
"RTN","DGPFRAL1",3,0)
 ;
"RTN","DGPFRAL1",4,0)
 ;This routine will be used to display or print all of the patient
"RTN","DGPFRAL1",5,0)
 ;assignment history records that are not linked to a progress note.
"RTN","DGPFRAL1",6,0)
 ;
"RTN","DGPFRAL1",7,0)
 ; Input: The following sort array contains the report parameters:
"RTN","DGPFRAL1",8,0)
 ;   DGSORT("DGCAT") = Flag Category to report on
"RTN","DGPFRAL1",9,0)
 ;                   = 1:National, 2:Local, 3:Both
"RTN","DGPFRAL1",10,0)
 ;   DGSORT("DGBEG") = Beginning date to report on
"RTN","DGPFRAL1",11,0)
 ;   DGSORT("DGEND") = Ending date to report on
"RTN","DGPFRAL1",12,0)
 ;
"RTN","DGPFRAL1",13,0)
 ; Output:  A formatted report of patient Assignment History Actions
"RTN","DGPFRAL1",14,0)
 ;          that are not linked to a TIU Progress Note.
"RTN","DGPFRAL1",15,0)
 ;
"RTN","DGPFRAL1",16,0)
 ;- no direct entry
"RTN","DGPFRAL1",17,0)
 QUIT
"RTN","DGPFRAL1",18,0)
 ;
"RTN","DGPFRAL1",19,0)
START ; compile and print report
"RTN","DGPFRAL1",20,0)
 I $E(IOST)="C" D WAIT^DICD
"RTN","DGPFRAL1",21,0)
 N DGLIST ;temp global name used for report list
"RTN","DGPFRAL1",22,0)
 S DGLIST=$NA(^TMP("DGPFRAL1",$J))
"RTN","DGPFRAL1",23,0)
 K @DGLIST
"RTN","DGPFRAL1",24,0)
 D LOOP(.DGSORT,DGLIST)
"RTN","DGPFRAL1",25,0)
 D PRINT(.DGSORT,DGLIST)
"RTN","DGPFRAL1",26,0)
 K @DGLIST
"RTN","DGPFRAL1",27,0)
 D EXIT
"RTN","DGPFRAL1",28,0)
 Q
"RTN","DGPFRAL1",29,0)
 ;
"RTN","DGPFRAL1",30,0)
LOOP(DGSORT,DGLIST) ;use sort var's for record searching to build list
"RTN","DGPFRAL1",31,0)
 ;  Input:
"RTN","DGPFRAL1",32,0)
 ;      DGSORT - array of user selected report parameters
"RTN","DGPFRAL1",33,0)
 ;      DGLIST - temp global name
"RTN","DGPFRAL1",34,0)
 ;
"RTN","DGPFRAL1",35,0)
 ; Output:
"RTN","DGPFRAL1",36,0)
 ;      ^TMP("DGPFRAL1",$J) - temp global containing report output
"RTN","DGPFRAL1",37,0)
 ;
"RTN","DGPFRAL1",38,0)
 N DGBEG    ;beginning date
"RTN","DGPFRAL1",39,0)
 N DGC      ;var used to check which category is being reported on
"RTN","DGPFRAL1",40,0)
 N DGCAT    ;flag category
"RTN","DGPFRAL1",41,0)
 N DGCATG   ;category 1 or 2
"RTN","DGPFRAL1",42,0)
 N DGCNT    ;flag counter
"RTN","DGPFRAL1",43,0)
 N DGDFN    ;pointer to patient being reported on
"RTN","DGPFRAL1",44,0)
 N DGDFNLST ;array of dfn's assigned to the flag
"RTN","DGPFRAL1",45,0)
 N DGEND    ;ending date
"RTN","DGPFRAL1",46,0)
 N DGHIENS  ;array subscripted by assignment history date
"RTN","DGPFRAL1",47,0)
 N DGIEN    ;assignment ien
"RTN","DGPFRAL1",48,0)
 N DGPAT    ;patient data array
"RTN","DGPFRAL1",49,0)
 N DGPFA    ;assignment data array
"RTN","DGPFRAL1",50,0)
 N DGQ      ;quit var
"RTN","DGPFRAL1",51,0)
 N DGSUB    ;loop flag
"RTN","DGPFRAL1",52,0)
 N DGX      ;loop var
"RTN","DGPFRAL1",53,0)
 ;
"RTN","DGPFRAL1",54,0)
 ; setup variables equal to user input parameter subscripts
"RTN","DGPFRAL1",55,0)
 ;   "DGCAT", "DGBEG", "DGEND"
"RTN","DGPFRAL1",56,0)
 S DGX="" F  S DGX=$O(DGSORT(DGX)) Q:DGX=""  S @DGX=DGSORT(DGX)
"RTN","DGPFRAL1",57,0)
 S DGC=$S(+DGCAT=3:0,1:+DGCAT)
"RTN","DGPFRAL1",58,0)
 S:DGC DGC=$S(DGC=1:26.15,1:26.11)
"RTN","DGPFRAL1",59,0)
 ;
"RTN","DGPFRAL1",60,0)
 ; loop assignment variable pointer flag x-ref file to run report
"RTN","DGPFRAL1",61,0)
 S (DGDFN,DGIEN)="",(DGQ,DGSUB,DGCNT)=0
"RTN","DGPFRAL1",62,0)
 F  S DGSUB=$O(^DGPF(26.13,"AFLAG",DGSUB)) Q:DGSUB=""  D  Q:DGQ
"RTN","DGPFRAL1",63,0)
 . I DGC,DGSUB'[DGC Q  ;not correct file based on category
"RTN","DGPFRAL1",64,0)
 . S DGCATG=$S(DGSUB[26.15:1,1:2)
"RTN","DGPFRAL1",65,0)
 . K DGDFNLST
"RTN","DGPFRAL1",66,0)
 . S DGCNT=$$ASGNCNT^DGPFLF6(DGSUB,.DGDFNLST)
"RTN","DGPFRAL1",67,0)
 . Q:'DGCNT
"RTN","DGPFRAL1",68,0)
 . S DGDFN=""
"RTN","DGPFRAL1",69,0)
 . F  S DGDFN=$O(DGDFNLST(DGDFN)) Q:DGDFN=""  D
"RTN","DGPFRAL1",70,0)
 . . S DGIEN=$G(DGDFNLST(DGDFN)) Q:DGIEN=""
"RTN","DGPFRAL1",71,0)
 . . ; get assignment record
"RTN","DGPFRAL1",72,0)
 . . K DGPFA
"RTN","DGPFRAL1",73,0)
 . . Q:'$$GETASGN^DGPFAA(DGIEN,.DGPFA)
"RTN","DGPFRAL1",74,0)
 . . ; check if calling site is owner site
"RTN","DGPFRAL1",75,0)
 . . Q:$P($$SITE^VASITE(),U)'=$P($G(DGPFA("OWNER")),U)
"RTN","DGPFRAL1",76,0)
 . . ;
"RTN","DGPFRAL1",77,0)
 . . ;filter patient when last action is ENTERED IN ERROR
"RTN","DGPFRAL1",78,0)
 . . Q:$$ENTINERR(DGIEN)
"RTN","DGPFRAL1",79,0)
 . . ;
"RTN","DGPFRAL1",80,0)
 . . ;action ien array subscripted by assignment history date
"RTN","DGPFRAL1",81,0)
 . . K DGHIENS
"RTN","DGPFRAL1",82,0)
 . . Q:'$$GETALLDT^DGPFAAH(DGIEN,.DGHIENS)
"RTN","DGPFRAL1",83,0)
 . . ; check if any Action's fall within the Begin and End dates
"RTN","DGPFRAL1",84,0)
 . . I $P($O(DGHIENS("")),".")'>DGEND&($P($O(DGHIENS(""),-1),".")'<DGBEG) D
"RTN","DGPFRAL1",85,0)
 . . . ;delete any action that is not within Begin and End dates
"RTN","DGPFRAL1",86,0)
 . . . S DGX=0 F  S DGX=$O(DGHIENS(DGX)) Q:DGX=""  D
"RTN","DGPFRAL1",87,0)
 . . . . I $P(DGX,".")<DGBEG!($P(DGX,".")>DGEND) K DGHIENS(DGX)
"RTN","DGPFRAL1",88,0)
 . . . Q:'$O(DGHIENS(""))
"RTN","DGPFRAL1",89,0)
 . . . ;
"RTN","DGPFRAL1",90,0)
 . . . ; get patient demographics
"RTN","DGPFRAL1",91,0)
 . . . K DGPAT
"RTN","DGPFRAL1",92,0)
 . . . Q:'$$GETPAT^DGPFUT2(DGDFN,.DGPAT)
"RTN","DGPFRAL1",93,0)
 . . . ;
"RTN","DGPFRAL1",94,0)
 . . . ; call to build temp global
"RTN","DGPFRAL1",95,0)
 . . . D BLDTMP(.DGPFA,.DGPAT,.DGHIENS,DGCATG,DGLIST)
"RTN","DGPFRAL1",96,0)
 ;
"RTN","DGPFRAL1",97,0)
 Q
"RTN","DGPFRAL1",98,0)
 ;
"RTN","DGPFRAL1",99,0)
BLDTMP(DGPFA,DGPAT,DGHIENS,DGCATG,DGLIST) ; list global builder
"RTN","DGPFRAL1",100,0)
 ;  Input:
"RTN","DGPFRAL1",101,0)
 ;      DGPFA  - array of assignment record data
"RTN","DGPFRAL1",102,0)
 ;      DGPAT  - array of patient demographics
"RTN","DGPFRAL1",103,0)
 ;      DGHIENS - array of history action IEN's sorted by d/t
"RTN","DGPFRAL1",104,0)
 ;      DGCATG - category of flag 1=National, 2=Local
"RTN","DGPFRAL1",105,0)
 ;      DGLIST - temp global name used for report list
"RTN","DGPFRAL1",106,0)
 ;
"RTN","DGPFRAL1",107,0)
 ; Output:
"RTN","DGPFRAL1",108,0)
 ;      ^TMP("DGPFRFA1",$J) - temp global containing report output
"RTN","DGPFRAL1",109,0)
 ;
"RTN","DGPFRAL1",110,0)
 N DGACTDT ;initial entry date
"RTN","DGPFRAL1",111,0)
 N DGFGNM  ;flag name
"RTN","DGPFRAL1",112,0)
 N DGHIEN  ;assignment ien
"RTN","DGPFRAL1",113,0)
 N DGLINE  ;report detail line
"RTN","DGPFRAL1",114,0)
 N DGLNCNT ;unique subscript counter
"RTN","DGPFRAL1",115,0)
 N DGPDFN  ;pointer to patient
"RTN","DGPFRAL1",116,0)
 N DGPFAH  ;assignment history record data
"RTN","DGPFRAL1",117,0)
 N DGPNM   ;patient name
"RTN","DGPFRAL1",118,0)
 ;
"RTN","DGPFRAL1",119,0)
 ; loop all assignment history ien's
"RTN","DGPFRAL1",120,0)
 S DGHIEN="",DGLNCNT=0
"RTN","DGPFRAL1",121,0)
 F  S DGHIEN=$O(DGHIENS(DGHIEN)) Q:DGHIEN=""  D
"RTN","DGPFRAL1",122,0)
 . ; get assignment history record
"RTN","DGPFRAL1",123,0)
 . K DGPFAH
"RTN","DGPFRAL1",124,0)
 . Q:'$$GETHIST^DGPFAAH(DGHIENS(DGHIEN),.DGPFAH)
"RTN","DGPFRAL1",125,0)
 . Q:+$G(DGPFAH("TIULINK"))   ;progress note pointer is setup
"RTN","DGPFRAL1",126,0)
 . Q:+$G(DGPFAH("ACTION"))=5  ;don't report on ENTERED IN ERROR action
"RTN","DGPFRAL1",127,0)
 . S DGACTDT=$$FDATE^VALM1(+DGPFAH("ASSIGNDT"))
"RTN","DGPFRAL1",128,0)
 . S DGPNM=DGPAT("NAME")
"RTN","DGPFRAL1",129,0)
 . S:DGPNM']"" DGPNM="MISSING PATIENT NAME"
"RTN","DGPFRAL1",130,0)
 . S DGPDFN=$P(DGPFA("DFN"),U)
"RTN","DGPFRAL1",131,0)
 . S DGFGNM=$P(DGPFA("FLAG"),U,2)
"RTN","DGPFRAL1",132,0)
 . S:DGFGNM']"" DGFGNM="MISSING FLAG NAME"
"RTN","DGPFRAL1",133,0)
 . S DGLINE=DGPAT("SSN")_U_$E(DGFGNM,1,17)_U_$P(DGPFAH("ACTION"),U,2)_U_DGACTDT
"RTN","DGPFRAL1",134,0)
 . S DGLNCNT=DGLNCNT+1
"RTN","DGPFRAL1",135,0)
 . S @DGLIST@(DGCATG,DGFGNM,DGPNM,DGPDFN,DGLNCNT)=DGLINE
"RTN","DGPFRAL1",136,0)
 ;
"RTN","DGPFRAL1",137,0)
 Q
"RTN","DGPFRAL1",138,0)
 ;
"RTN","DGPFRAL1",139,0)
PRINT(DGSORT,DGLIST) ;output report
"RTN","DGPFRAL1",140,0)
 ;  Input:
"RTN","DGPFRAL1",141,0)
 ;      DGSORT - array of user selected report parameters
"RTN","DGPFRAL1",142,0)
 ;      DGLIST - temp global name used for report list
"RTN","DGPFRAL1",143,0)
 ;
"RTN","DGPFRAL1",144,0)
 ; Output: Formatted report to user selected device
"RTN","DGPFRAL1",145,0)
 ;
"RTN","DGPFRAL1",146,0)
 N DGCAT   ;flag category
"RTN","DGPFRAL1",147,0)
 N DGCNT   ;counter of detail lines
"RTN","DGPFRAL1",148,0)
 N DGDFN   ;ien of patient
"RTN","DGPFRAL1",149,0)
 N DGDT    ;date time report printed
"RTN","DGPFRAL1",150,0)
 N DGFG    ;flag name
"RTN","DGPFRAL1",151,0)
 N DGGRAND ;flag to print grand totals
"RTN","DGPFRAL1",152,0)
 N DGLINE  ;string of hyphens (80) for report header format
"RTN","DGPFRAL1",153,0)
 N DGLN    ;loop var
"RTN","DGPFRAL1",154,0)
 N DGNAM   ;patient name
"RTN","DGPFRAL1",155,0)
 N DGODFN  ;print loop var flag
"RTN","DGPFRAL1",156,0)
 N DGOFG   ;print loop var flag
"RTN","DGPFRAL1",157,0)
 N DGPCAT  ;print form of category
"RTN","DGPFRAL1",158,0)
 N DGPAGE  ;page counter
"RTN","DGPFRAL1",159,0)
 N DGQ     ;quit flag
"RTN","DGPFRAL1",160,0)
 N DGSTR   ;string of detail line to display
"RTN","DGPFRAL1",161,0)
 N X,Y
"RTN","DGPFRAL1",162,0)
 ;
"RTN","DGPFRAL1",163,0)
 S (DGCNT,DGQ,DGPAGE,DGGRAND)=0,$P(DGLINE,"-",81)=""
"RTN","DGPFRAL1",164,0)
 S DGDT=$P($$FMTE^XLFDT($$NOW^XLFDT,"T"),":",1,2)
"RTN","DGPFRAL1",165,0)
 S (DGCAT,DGPCAT)=+DGSORT("DGCAT")
"RTN","DGPFRAL1",166,0)
 ;
"RTN","DGPFRAL1",167,0)
 I $O(@DGLIST@(""))="" D  Q
"RTN","DGPFRAL1",168,0)
 . D HEAD
"RTN","DGPFRAL1",169,0)
 . W !!,"   >>> No Record Flag Assignments were found using the report criteria.",!
"RTN","DGPFRAL1",170,0)
 ;
"RTN","DGPFRAL1",171,0)
 ; loop and print report
"RTN","DGPFRAL1",172,0)
 S (DGCAT,DGFG,DGNAM,DGDFN,DGODFN,DGOFG,DGLN,DGSTR)=""
"RTN","DGPFRAL1",173,0)
 F  S DGCAT=$O(@DGLIST@(DGCAT)) Q:DGCAT=""  D  Q:DGQ
"RTN","DGPFRAL1",174,0)
 . D HEAD S DGCNT=0
"RTN","DGPFRAL1",175,0)
 . F  S DGFG=$O(@DGLIST@(DGCAT,DGFG)) Q:DGFG=""  D  Q:DGQ
"RTN","DGPFRAL1",176,0)
 .. F  S DGNAM=$O(@DGLIST@(DGCAT,DGFG,DGNAM)) Q:DGNAM=""  D  Q:DGQ
"RTN","DGPFRAL1",177,0)
 ... F  S DGDFN=$O(@DGLIST@(DGCAT,DGFG,DGNAM,DGDFN)) Q:DGDFN=""  D  Q:DGQ
"RTN","DGPFRAL1",178,0)
 .... F  S DGLN=$O(@DGLIST@(DGCAT,DGFG,DGNAM,DGDFN,DGLN)) Q:DGLN=""  D  Q:DGQ
"RTN","DGPFRAL1",179,0)
 ..... S DGSTR=$G(@DGLIST@(DGCAT,DGFG,DGNAM,DGDFN,DGLN))
"RTN","DGPFRAL1",180,0)
 ..... W !
"RTN","DGPFRAL1",181,0)
 ..... I $Y>(IOSL-4) D PAUSE(.DGQ) Q:DGQ  D HEAD S DGODFN="" W !
"RTN","DGPFRAL1",182,0)
 ..... ; - write name and ssn once
"RTN","DGPFRAL1",183,0)
 ..... I DGODFN'=DGDFN S DGODFN=DGDFN,DGOFG=DGFG D
"RTN","DGPFRAL1",184,0)
 ...... W $E(DGNAM,1,18),?20,$P(DGSTR,U),?32,$E($P(DGSTR,U,2),1,17)
"RTN","DGPFRAL1",185,0)
 ..... ; - write new flag name
"RTN","DGPFRAL1",186,0)
 ..... I DGOFG'=DGFG S DGOFG=DGFG W ?32,$E($P(DGSTR,U,2),1,17)
"RTN","DGPFRAL1",187,0)
 ..... ; - write action detail
"RTN","DGPFRAL1",188,0)
 ..... W ?51,$P(DGSTR,U,3),?69,$P(DGSTR,U,4)
"RTN","DGPFRAL1",189,0)
 ..... S DGCNT=DGCNT+1,DGCNT(DGCAT)=$G(DGCNT(DGCAT))+1
"RTN","DGPFRAL1",190,0)
 . Q:DGQ
"RTN","DGPFRAL1",191,0)
 . I DGCNT D
"RTN","DGPFRAL1",192,0)
 .. W !!,"Total Actions not Linked for Category "_$S(DGCAT=1:"I",1:"II")_":  ",?46,$J(+$G(DGCNT(DGCAT)),6)
"RTN","DGPFRAL1",193,0)
 .. S DGCNT=0,DGODFN=""
"RTN","DGPFRAL1",194,0)
 .. D:DGPCAT=3 PAUSE(.DGQ)
"RTN","DGPFRAL1",195,0)
 ;
"RTN","DGPFRAL1",196,0)
 ;Shutdown if stop task requested
"RTN","DGPFRAL1",197,0)
 I DGQ W:$D(ZTQUEUED) !!,"REPORT STOPPED AT USER REQUEST" Q
"RTN","DGPFRAL1",198,0)
 ;
"RTN","DGPFRAL1",199,0)
 I +DGSORT("DGCAT")=3 D  ; Grand totals (B)oth Categories
"RTN","DGPFRAL1",200,0)
 . S DGCAT=3,DGGRAND=1
"RTN","DGPFRAL1",201,0)
 . D HEAD
"RTN","DGPFRAL1",202,0)
 . W !!,"REPORT SUMMARY:",!,"---------------"
"RTN","DGPFRAL1",203,0)
 . F DGCAT=1,2,3 D
"RTN","DGPFRAL1",204,0)
 .. S:DGCAT'=3 DGCNT(3)=$G(DGCNT(3))+$G(DGCNT(DGCAT))
"RTN","DGPFRAL1",205,0)
 .. W:DGCAT=3 !?48,"-------"
"RTN","DGPFRAL1",206,0)
 .. W !,"Total Actions not Linked for Category "
"RTN","DGPFRAL1",207,0)
 .. W $S(DGCAT=1:"I",DGCAT=2:"II",1:"I & II"),":"
"RTN","DGPFRAL1",208,0)
 .. W ?49,$J(+$G(DGCNT(DGCAT)),6)
"RTN","DGPFRAL1",209,0)
 ;
"RTN","DGPFRAL1",210,0)
 W !!,"<End of Report>"
"RTN","DGPFRAL1",211,0)
 Q
"RTN","DGPFRAL1",212,0)
 ;
"RTN","DGPFRAL1",213,0)
PAUSE(DGQ) ; pause screen display
"RTN","DGPFRAL1",214,0)
 ;  Input: 
"RTN","DGPFRAL1",215,0)
 ;      DGQ - var used to quit report processing to user CRT
"RTN","DGPFRAL1",216,0)
 ; Output:
"RTN","DGPFRAL1",217,0)
 ;      DGQ - passed by reference - 0 = Continue, 1 = Quit
"RTN","DGPFRAL1",218,0)
 ;
"RTN","DGPFRAL1",219,0)
 I $G(DGPAGE)>0,$E(IOST,1,2)="C-" K DIR S DIR(0)="E" D ^DIR K DIR S:+Y=0 DGQ=1
"RTN","DGPFRAL1",220,0)
 Q
"RTN","DGPFRAL1",221,0)
 ;
"RTN","DGPFRAL1",222,0)
HEAD ;Print/Display page header
"RTN","DGPFRAL1",223,0)
 ;
"RTN","DGPFRAL1",224,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S (ZTSTOP,DGQ)=1 Q
"RTN","DGPFRAL1",225,0)
 ;
"RTN","DGPFRAL1",226,0)
 W:'($E(IOST,1,2)'="C-"&'DGPAGE) @IOF
"RTN","DGPFRAL1",227,0)
 ;
"RTN","DGPFRAL1",228,0)
 S DGPAGE=$G(DGPAGE)+1
"RTN","DGPFRAL1",229,0)
 W !?25,"PATIENT RECORD FLAGS"
"RTN","DGPFRAL1",230,0)
 W !?8,"ASSIGNMENT ACTION NOT LINKED TO A PROGRESS NOTE REPORT",?68,"Page: ",$G(DGPAGE)
"RTN","DGPFRAL1",231,0)
 W !,"Report Selected: "_$S($G(DGPCAT)=1:"Category I (National)",$G(DGPCAT)=2:"Category II (Local)",1:"Both (Category I & II)")
"RTN","DGPFRAL1",232,0)
 W !?5,"DATE RANGE: ",$$FDATE^VALM1($G(DGSORT("DGBEG")))_" TO "_$$FDATE^VALM1($G(DGSORT("DGEND")))
"RTN","DGPFRAL1",233,0)
 W ?50,"Printed: ",DGDT
"RTN","DGPFRAL1",234,0)
 W !,DGLINE
"RTN","DGPFRAL1",235,0)
 ;
"RTN","DGPFRAL1",236,0)
 Q:DGGRAND
"RTN","DGPFRAL1",237,0)
 ;
"RTN","DGPFRAL1",238,0)
 W !!,"CATEGORY: "_$S($G(DGCAT)=1:"Category I (National)",$G(DGCAT)=2:"Category II (Local)",1:"Both (Category I & II)")
"RTN","DGPFRAL1",239,0)
 W !!,"PATIENT",?20,"SSN",?32,"FLAG NAME",?51,"ACTION",?69,"ACTION DATE"
"RTN","DGPFRAL1",240,0)
 W !,"------------------",?20,"----------",?32,"-----------------",?51,"----------------",?69,"-----------"
"RTN","DGPFRAL1",241,0)
 Q
"RTN","DGPFRAL1",242,0)
 ;
"RTN","DGPFRAL1",243,0)
EXIT ;
"RTN","DGPFRAL1",244,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","DGPFRAL1",245,0)
 I '$D(ZTQUEUED) D
"RTN","DGPFRAL1",246,0)
 . K %ZIS,POP
"RTN","DGPFRAL1",247,0)
 . D ^%ZISC,HOME^%ZIS
"RTN","DGPFRAL1",248,0)
 Q
"RTN","DGPFRAL1",249,0)
 ;
"RTN","DGPFRAL1",250,0)
ENTINERR(DGIEN) ;is last action ENTERED IN ERROR
"RTN","DGPFRAL1",251,0)
 ;  Input:
"RTN","DGPFRAL1",252,0)
 ;    DGIEN - (required) Pointer to PRF ASSIGNMENT (#26.13) file
"RTN","DGPFRAL1",253,0)
 ;
"RTN","DGPFRAL1",254,0)
 ;  Output:
"RTN","DGPFRAL1",255,0)
 ;   Function Value - Return 1 on success, 0 on failure
"RTN","DGPFRAL1",256,0)
 ;
"RTN","DGPFRAL1",257,0)
 N DGPFAH
"RTN","DGPFRAL1",258,0)
 ;
"RTN","DGPFRAL1",259,0)
 I $$GETHIST^DGPFAAH($$GETLAST^DGPFAAH(DGIEN),.DGPFAH)
"RTN","DGPFRAL1",260,0)
 Q +$G(DGPFAH("ACTION"))=5
"RTN","DGPFRFA")
0^46^B17792002
"RTN","DGPFRFA",1,0)
DGPFRFA ;ALB/RBS - PRF FLAG ASSIGNMENT REPORT ; 7/26/05 3:41pm
"RTN","DGPFRFA",2,0)
 ;;5.3;Registration;**425,555,554**;Aug 13, 1993
"RTN","DGPFRFA",3,0)
 ;
"RTN","DGPFRFA",4,0)
 ;This routine will be used for selecting sort parameters to produce
"RTN","DGPFRFA",5,0)
 ; the FLAG ASSIGNMENT REPORT for Patient Record Flags.
"RTN","DGPFRFA",6,0)
 ;
"RTN","DGPFRFA",7,0)
 ;Selection options will provide the user with the ability to report
"RTN","DGPFRFA",8,0)
 ; by:
"RTN","DGPFRFA",9,0)
 ;  CATEGORY:
"RTN","DGPFRFA",10,0)
 ;    1  Category I (National)
"RTN","DGPFRFA",11,0)
 ;    2  Category II (Local)
"RTN","DGPFRFA",12,0)
 ;    3  BOTH
"RTN","DGPFRFA",13,0)
 ;  FLAG:
"RTN","DGPFRFA",14,0)
 ;    S  Single Flag
"RTN","DGPFRFA",15,0)
 ;    A  All Flags
"RTN","DGPFRFA",16,0)
 ;  BEGINING DATE:  FileMan date
"RTN","DGPFRFA",17,0)
 ;  ENDING DATE:    FileMan date
"RTN","DGPFRFA",18,0)
 ;
"RTN","DGPFRFA",19,0)
 ;-- no direct entry
"RTN","DGPFRFA",20,0)
 QUIT
"RTN","DGPFRFA",21,0)
 ;
"RTN","DGPFRFA",22,0)
EN ;Entry point
"RTN","DGPFRFA",23,0)
 ;-- user prompts for report selection sorts
"RTN","DGPFRFA",24,0)
 ;  Input: none
"RTN","DGPFRFA",25,0)
 ; Output: Report generated using user selected parameters
"RTN","DGPFRFA",26,0)
 ;
"RTN","DGPFRFA",27,0)
 N DGASK,DGRSLT,DGDIRA,DGDIRB,DGDIRO,DGDIRH
"RTN","DGPFRFA",28,0)
 N DGSORT,DGCAT,DGFIL,DGSEL,DGFIRST
"RTN","DGPFRFA",29,0)
 N ZTSAVE,DGQ
"RTN","DGPFRFA",30,0)
 ;
"RTN","DGPFRFA",31,0)
 ;check for database
"RTN","DGPFRFA",32,0)
 S DGFIRST=$P(+$O(^DGPF(26.14,"D","")),".")    ;first assignment date
"RTN","DGPFRFA",33,0)
 I 'DGFIRST D  Q
"RTN","DGPFRFA",34,0)
 . W !?2,">>> No Patient Record Flag Assignments have been found.",*7
"RTN","DGPFRFA",35,0)
 . I $$ANSWER^DGPFUT("Enter RETURN to continue","","E")  ;pause
"RTN","DGPFRFA",36,0)
 ;
"RTN","DGPFRFA",37,0)
 ;-- prompt for selection of a flag category
"RTN","DGPFRFA",38,0)
 S DGDIRA="Select Flag Category"
"RTN","DGPFRFA",39,0)
 S DGDIRB=""
"RTN","DGPFRFA",40,0)
 S DGDIRH="Enter one of the category selections to report on"
"RTN","DGPFRFA",41,0)
 S DGDIRO="S^1:Category I (National);2:Category II (Local);3:Both"
"RTN","DGPFRFA",42,0)
 S DGASK=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO,DGDIRH)
"RTN","DGPFRFA",43,0)
 Q:(DGASK<1)
"RTN","DGPFRFA",44,0)
 S DGCAT=DGASK,DGSORT("DGCAT")=DGASK_U_$S(DGCAT=1:"Category I (National)",DGCAT=2:"Category II (Local)",DGCAT=3:"Both",1:"")
"RTN","DGPFRFA",45,0)
 ;
"RTN","DGPFRFA",46,0)
 ;-- prompt for selection of a single flag or all flags
"RTN","DGPFRFA",47,0)
 S DGSEL=""
"RTN","DGPFRFA",48,0)
 ;list (A)ll flags if user selects Both Category's
"RTN","DGPFRFA",49,0)
 I DGCAT=3 D
"RTN","DGPFRFA",50,0)
 . S DGSORT("DGFLAG")="A"
"RTN","DGPFRFA",51,0)
 ;
"RTN","DGPFRFA",52,0)
 D:DGCAT'=3  ;only prompt if user selects a Category I or II
"RTN","DGPFRFA",53,0)
 . S DGDIRA="Select to report on a (S)ingle flag or (A)ll flags"
"RTN","DGPFRFA",54,0)
 . S DGDIRB="Single Flag"
"RTN","DGPFRFA",55,0)
 . S DGDIRO="S^S:Single Flag;A:All Flags"
"RTN","DGPFRFA",56,0)
 . S DGDIRH="Enter one of the flag selections to report on"
"RTN","DGPFRFA",57,0)
 . S DGASK=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO,DGDIRH)
"RTN","DGPFRFA",58,0)
 . Q:(DGASK=-1)
"RTN","DGPFRFA",59,0)
 . S DGSEL=DGASK
"RTN","DGPFRFA",60,0)
 . S DGSORT("DGFLAG")=DGASK
"RTN","DGPFRFA",61,0)
 Q:(DGASK=-1)
"RTN","DGPFRFA",62,0)
 ;
"RTN","DGPFRFA",63,0)
 ;-- prompt for selection of a record flag name - only if (S)ingle
"RTN","DGPFRFA",64,0)
 D:DGSEL="S"
"RTN","DGPFRFA",65,0)
 . S DGQ=0
"RTN","DGPFRFA",66,0)
 . S DGDIRA="Select Record Flag Name",DGDIRB=""
"RTN","DGPFRFA",67,0)
 . S DGDIRO=$S(DGCAT=1:"P^26.15,.01:EMZ",1:"P^26.11,.01:EMZ")
"RTN","DGPFRFA",68,0)
 . F  D  Q:DGQ
"RTN","DGPFRFA",69,0)
 . . S DGASK=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO)
"RTN","DGPFRFA",70,0)
 . . I DGASK=-1 S DGQ=1 Q
"RTN","DGPFRFA",71,0)
 . . ;set data string = pointer value (5;DGPF(26.11,) ^ external name
"RTN","DGPFRFA",72,0)
 . . S DGFIL=DGASK_$S(DGCAT=1:";DGPF(26.15,",1:";DGPF(26.11,")
"RTN","DGPFRFA",73,0)
 . . ;if (S)ingle flag selected, check for any flag assignments
"RTN","DGPFRFA",74,0)
 . . I '$$ASGNCNT^DGPFLF6(DGFIL) D  Q
"RTN","DGPFRFA",75,0)
 . . . W !?2,">>> No Patient Record Flag Assignments have been found.  Select another flag.",*7
"RTN","DGPFRFA",76,0)
 . . ;a good one to report on
"RTN","DGPFRFA",77,0)
 . . S DGSORT("DGFLAG")=DGFIL_U_$$EXTERNAL^DILFD(26.13,.02,"F",DGFIL)
"RTN","DGPFRFA",78,0)
 . . S DGQ=1
"RTN","DGPFRFA",79,0)
 ;
"RTN","DGPFRFA",80,0)
 Q:(DGASK=-1)
"RTN","DGPFRFA",81,0)
 ;
"RTN","DGPFRFA",82,0)
 ;-- prompt for beginning date
"RTN","DGPFRFA",83,0)
 S DGDIRA="Select Beginning Date"
"RTN","DGPFRFA",84,0)
 S DGDIRB=""
"RTN","DGPFRFA",85,0)
 S DGDIRH="^D HELP^DGPFRFA(1)"
"RTN","DGPFRFA",86,0)
 S DGDIRO="D^"_DGFIRST_":DT:EX"
"RTN","DGPFRFA",87,0)
 S DGASK=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO,DGDIRH)
"RTN","DGPFRFA",88,0)
 Q:(DGASK=-1)
"RTN","DGPFRFA",89,0)
 S DGSORT("DGBEG")=DGASK
"RTN","DGPFRFA",90,0)
 ;
"RTN","DGPFRFA",91,0)
 ;-- prompt for ending date
"RTN","DGPFRFA",92,0)
 S DGDIRA="Select Ending Date"
"RTN","DGPFRFA",93,0)
 S DGDIRB=""
"RTN","DGPFRFA",94,0)
 S DGDIRH="^D HELP^DGPFRFA(2)"
"RTN","DGPFRFA",95,0)
 S DGDIRO="D^"_DGSORT("DGBEG")_":DT:EX"
"RTN","DGPFRFA",96,0)
 S DGASK=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO,DGDIRH)
"RTN","DGPFRFA",97,0)
 Q:(DGASK=-1)
"RTN","DGPFRFA",98,0)
 S DGSORT("DGEND")=DGASK
"RTN","DGPFRFA",99,0)
 ;
"RTN","DGPFRFA",100,0)
 K DGCAT,DGFIL,DGSEL,DGDIRA,DGDIRB,DGDIRO,DGDIRH
"RTN","DGPFRFA",101,0)
 K DGASK,DGRSLT,DGFIRST
"RTN","DGPFRFA",102,0)
 ;
"RTN","DGPFRFA",103,0)
 ;-- prompt for device
"RTN","DGPFRFA",104,0)
 S ZTSAVE("DGSORT(")=""
"RTN","DGPFRFA",105,0)
 D EN^XUTMDEVQ("START^DGPFRFA1","Patient Record Flag Assignment Report",.ZTSAVE)
"RTN","DGPFRFA",106,0)
 D HOME^%ZIS
"RTN","DGPFRFA",107,0)
 Q
"RTN","DGPFRFA",108,0)
 ;
"RTN","DGPFRFA",109,0)
HELP(DGSEL) ;provide extended DIR("?") help text.
"RTN","DGPFRFA",110,0)
 ;
"RTN","DGPFRFA",111,0)
 ;  Input: DGSEL - prompt var for help text word selection
"RTN","DGPFRFA",112,0)
 ; Output: none
"RTN","DGPFRFA",113,0)
 ;
"RTN","DGPFRFA",114,0)
 W !,"  Enter the "_$S(DGSEL=1:"earliest",1:"latest")_" Assignment Date to include in the report."
"RTN","DGPFRFA",115,0)
 W !,"  Please enter a date from the specified date range displayed."
"RTN","DGPFRFA",116,0)
 Q
"RTN","DGPFRFA1")
0^47^B41214587
"RTN","DGPFRFA1",1,0)
DGPFRFA1 ;ALB/RBS - PRF FLAG ASSIGNMENT REPORT CONT. ; 1/21/04 5:14pm
"RTN","DGPFRFA1",2,0)
 ;;5.3;Registration;**425,554**;Aug 13, 1993
"RTN","DGPFRFA1",3,0)
 ;
"RTN","DGPFRFA1",4,0)
 ;This routine will compile and produce the FLAG ASSIGNMENT REPORT.
"RTN","DGPFRFA1",5,0)
 ;This routine will be used to display or print all of the patient
"RTN","DGPFRFA1",6,0)
 ; assignments for Category I and Category II Patient Record Flags.
"RTN","DGPFRFA1",7,0)
 ;
"RTN","DGPFRFA1",8,0)
 ;All sort input was created in routine DGPFRFA.
"RTN","DGPFRFA1",9,0)
 ; Input: The following array contains the sort var's:
"RTN","DGPFRFA1",10,0)
 ;   DGSORT("DGCAT")  = category reporting on (I, II, or (B)oth)
"RTN","DGPFRFA1",11,0)
 ;   DGSORT("DGFLAG") = "A" = (A)ll Flags will be reported on
"RTN","DGPFRFA1",12,0)
 ;                    = IEN of a (S)ingle Flag (#26.11)/(#26.15)
"RTN","DGPFRFA1",13,0)
 ;                        example:  "1;DGPF(26.15,"
"RTN","DGPFRFA1",14,0)
 ;   DGSORT("DGBEG")  = Beginning date to report on
"RTN","DGPFRFA1",15,0)
 ;   DGSORT("DGEND")  = Ending date to report on
"RTN","DGPFRFA1",16,0)
 ;
"RTN","DGPFRFA1",17,0)
 ; Output: A formatted report of Record Flag Assignments to patients.
"RTN","DGPFRFA1",18,0)
 ;
"RTN","DGPFRFA1",19,0)
 ;- no direct entry
"RTN","DGPFRFA1",20,0)
 QUIT
"RTN","DGPFRFA1",21,0)
 ;
"RTN","DGPFRFA1",22,0)
START ; compile and print report
"RTN","DGPFRFA1",23,0)
 I $E(IOST)="C" D WAIT^DICD
"RTN","DGPFRFA1",24,0)
 N DGLIST
"RTN","DGPFRFA1",25,0)
 S DGLIST=$NA(^TMP("DGPFRFA1",$J))
"RTN","DGPFRFA1",26,0)
 K @DGLIST
"RTN","DGPFRFA1",27,0)
 D LOOP(.DGSORT)
"RTN","DGPFRFA1",28,0)
 D PRINT(.DGSORT,DGLIST)
"RTN","DGPFRFA1",29,0)
 D EXIT
"RTN","DGPFRFA1",30,0)
 Q
"RTN","DGPFRFA1",31,0)
 ;
"RTN","DGPFRFA1",32,0)
LOOP(DGSORT) ;use sort var's for record searching to build list
"RTN","DGPFRFA1",33,0)
 ;  Input:
"RTN","DGPFRFA1",34,0)
 ;      DGSORT - array of user selected report parameters
"RTN","DGPFRFA1",35,0)
 ;
"RTN","DGPFRFA1",36,0)
 ; Output:
"RTN","DGPFRFA1",37,0)
 ;      ^TMP("DGPFRFA1",$J) - temp global containing report output
"RTN","DGPFRFA1",38,0)
 ;
"RTN","DGPFRFA1",39,0)
 N DGCAT,DGFLAG,DGBEG,DGEND,DGIEN,DGDFN,DGDFNLST
"RTN","DGPFRFA1",40,0)
 N DGC,DGF,DGX,DGQ,DGFG,DGSUB,DGCNT
"RTN","DGPFRFA1",41,0)
 S (DGQ,DGFG,DGSUB,DGCNT)=0
"RTN","DGPFRFA1",42,0)
 S DGX="" F  S DGX=$O(DGSORT(DGX)) Q:DGX=""  S @DGX=DGSORT(DGX)
"RTN","DGPFRFA1",43,0)
 S DGC=$S(+DGCAT=3:0,1:+DGCAT) ;0 = both categories (National & Local)
"RTN","DGPFRFA1",44,0)
 S:DGC DGC=$S(DGC=1:26.15,1:26.11)
"RTN","DGPFRFA1",45,0)
 S DGF=$P(DGFLAG,U) ;"A"=all flags - "5;DGPF(26.11," is selection
"RTN","DGPFRFA1",46,0)
 ; re-seed var to start looping before actual selection
"RTN","DGPFRFA1",47,0)
 D:+DGF
"RTN","DGPFRFA1",48,0)
 . S DGSUB=$O(^DGPF(26.13,"AFLAG",DGF),-1)  ;previous value or NULL
"RTN","DGPFRFA1",49,0)
 ; ex. DGSUB="5;DGPF(26.11," to loop ^DGPF(26.13,"AFLAG",DGSUB,dfn,ien
"RTN","DGPFRFA1",50,0)
 ;
"RTN","DGPFRFA1",51,0)
 S (DGDFN,DGIEN)=""
"RTN","DGPFRFA1",52,0)
 F  S DGSUB=$O(^DGPF(26.13,"AFLAG",DGSUB)) Q:DGSUB=""  D  Q:DGQ
"RTN","DGPFRFA1",53,0)
 . I DGC,DGSUB'[DGC Q          ;not correct file based on category
"RTN","DGPFRFA1",54,0)
 . I +DGF,DGSUB'[DGF S:DGSUB>DGF DGQ=1 Q  ;don't setup or quit loop
"RTN","DGPFRFA1",55,0)
 . K DGDFNLST
"RTN","DGPFRFA1",56,0)
 . S DGCNT=$$ASGNCNT^DGPFLF6(DGSUB,.DGDFNLST)  ;get list of dfn's
"RTN","DGPFRFA1",57,0)
 . Q:'DGCNT
"RTN","DGPFRFA1",58,0)
 . F  S DGDFN=$O(DGDFNLST(DGDFN)) Q:DGDFN=""  D
"RTN","DGPFRFA1",59,0)
 . . S DGIEN=$G(DGDFNLST(DGDFN)) Q:DGIEN=""
"RTN","DGPFRFA1",60,0)
 . . D BLDTMP(.DGSORT,DGDFN,DGIEN,DGLIST)
"RTN","DGPFRFA1",61,0)
 K DGDFNLST
"RTN","DGPFRFA1",62,0)
 Q
"RTN","DGPFRFA1",63,0)
 ;
"RTN","DGPFRFA1",64,0)
BLDTMP(DGSORT,DGDFN,DGIEN,DGLIST) ; list global builder
"RTN","DGPFRFA1",65,0)
 ;  Input:
"RTN","DGPFRFA1",66,0)
 ;      DGSORT - array of user selected report parameters
"RTN","DGPFRFA1",67,0)
 ;      DGDFN  - ien of patient in PATIENT (#2) file
"RTN","DGPFRFA1",68,0)
 ;      DGIEN  - ien pointer to PRF ASSIGNMENT (#26.13) file record
"RTN","DGPFRFA1",69,0)
 ;      DGLIST - temp global name used for report list
"RTN","DGPFRFA1",70,0)
 ;
"RTN","DGPFRFA1",71,0)
 ; Output:
"RTN","DGPFRFA1",72,0)
 ;      ^TMP("DGPFRFA1",$J) - temp global containing report output
"RTN","DGPFRFA1",73,0)
 ;
"RTN","DGPFRFA1",74,0)
 N DGPFA,DGPFAH,DGPFPAT,DGPTR,DGINIT,DGCATG,DGLINE,DGNAME,DGREV,DGFG
"RTN","DGPFRFA1",75,0)
 S (DGPTR,DGINIT,DGCATG,DGLINE,DGNAME,DGREV)=""
"RTN","DGPFRFA1",76,0)
 K DGPFA,DGPFAH,DGPFPAT
"RTN","DGPFRFA1",77,0)
 ;retrieve a single assign record
"RTN","DGPFRFA1",78,0)
 Q:'$$GETASGN^DGPFAA(DGIEN,.DGPFA)
"RTN","DGPFRFA1",79,0)
 ;retrieve initial history assign record
"RTN","DGPFRFA1",80,0)
 Q:'$$GETHIST^DGPFAAH($$GETFIRST^DGPFAAH(DGIEN),.DGPFAH)
"RTN","DGPFRFA1",81,0)
 ;-- get 'initial assignment' date
"RTN","DGPFRFA1",82,0)
 S DGPFAH("INITASSIGN")=$G(DGPFAH("ASSIGNDT"))
"RTN","DGPFRFA1",83,0)
 Q:'DGPFAH("INITASSIGN")
"RTN","DGPFRFA1",84,0)
 S DGINIT=+DGPFAH("INITASSIGN")
"RTN","DGPFRFA1",85,0)
 I DGINIT>DGBEG&($P(DGINIT,".")'>DGEND) D
"RTN","DGPFRFA1",86,0)
 . Q:'$$GETPAT^DGPFUT2(DGDFN,.DGPFPAT)
"RTN","DGPFRFA1",87,0)
 . S DGCATG=$S(DGSUB[26.15:1,1:2)
"RTN","DGPFRFA1",88,0)
 . S DGFG=$P(DGPFA("FLAG"),U,2)
"RTN","DGPFRFA1",89,0)
 . S DGNAME=DGPFPAT("NAME")
"RTN","DGPFRFA1",90,0)
 . S DGINIT=$$FDATE^VALM1(+DGPFAH("INITASSIGN"))
"RTN","DGPFRFA1",91,0)
 . I +DGPFA("REVIEWDT") D
"RTN","DGPFRFA1",92,0)
 .. S DGREV=$$FDATE^VALM1(+DGPFA("REVIEWDT"))
"RTN","DGPFRFA1",93,0)
 . E  S DGREV="N/A"
"RTN","DGPFRFA1",94,0)
 . S DGLINE=DGPFPAT("SSN")_U_DGINIT_U_DGREV_U_$P(DGPFA("STATUS"),U,2)
"RTN","DGPFRFA1",95,0)
 . S DGLINE=DGLINE_U_$P(DGPFA("OWNER"),U,2)
"RTN","DGPFRFA1",96,0)
 . S @DGLIST@(DGCATG,DGFG,DGNAME,DGDFN)=DGLINE
"RTN","DGPFRFA1",97,0)
 K DGPFA,DGPFAH,DGPFPAT
"RTN","DGPFRFA1",98,0)
 Q
"RTN","DGPFRFA1",99,0)
 ;
"RTN","DGPFRFA1",100,0)
PRINT(DGSORT,DGLIST) ;output report
"RTN","DGPFRFA1",101,0)
 ;  Input:
"RTN","DGPFRFA1",102,0)
 ;      DGSORT - array of user selected report parameters
"RTN","DGPFRFA1",103,0)
 ;      DGLIST - temp global name used for report list
"RTN","DGPFRFA1",104,0)
 ;
"RTN","DGPFRFA1",105,0)
 ; Output: Formated report to user selected device
"RTN","DGPFRFA1",106,0)
 ;
"RTN","DGPFRFA1",107,0)
 N DGCAT,DGFG,DGNAM,DGDFN,DGSTR,DGQ,X,Y,DGPAGE,DGDT,DGCNT,DGOFG,DGGRAND,DGLINE
"RTN","DGPFRFA1",108,0)
 S (DGCNT,DGQ,DGPAGE,DGGRAND)=0,$P(DGLINE,"-",80)=""
"RTN","DGPFRFA1",109,0)
 S DGDT=$P($$FMTE^XLFDT($$NOW^XLFDT,"T"),":",1,2)
"RTN","DGPFRFA1",110,0)
 I $O(@DGLIST@(""))="" D  Q
"RTN","DGPFRFA1",111,0)
 . S DGCAT=+DGSORT("DGCAT")
"RTN","DGPFRFA1",112,0)
 . S DGFG=$S(DGSORT("DGFLAG")="A":"(A)ll Flags",1:$P(DGSORT("DGFLAG"),U,2))
"RTN","DGPFRFA1",113,0)
 . D HEAD
"RTN","DGPFRFA1",114,0)
 . W !!,"   >>> No Record Flag Assignments were found using the report criteria."
"RTN","DGPFRFA1",115,0)
 ; loop and print report
"RTN","DGPFRFA1",116,0)
 S (DGCAT,DGFG,DGNAM,DGDFN,DGSTR,DGOFG)=""
"RTN","DGPFRFA1",117,0)
 F  S DGCAT=$O(@DGLIST@(DGCAT)) Q:DGCAT=""  D  Q:DGQ
"RTN","DGPFRFA1",118,0)
 . F  S DGFG=$O(@DGLIST@(DGCAT,DGFG)) Q:DGFG=""  D  Q:DGQ
"RTN","DGPFRFA1",119,0)
 .. I DGFG'=DGOFG D
"RTN","DGPFRFA1",120,0)
 ... D:DGCNT SUB(.DGCNT,1)
"RTN","DGPFRFA1",121,0)
 ... D HEAD
"RTN","DGPFRFA1",122,0)
 ... S DGOFG=DGFG,DGCNT=0
"RTN","DGPFRFA1",123,0)
 .. F  S DGNAM=$O(@DGLIST@(DGCAT,DGFG,DGNAM)) Q:DGNAM=""  D  Q:DGQ
"RTN","DGPFRFA1",124,0)
 ... F  S DGDFN=$O(@DGLIST@(DGCAT,DGFG,DGNAM,DGDFN)) Q:DGDFN=""  D  Q:DGQ
"RTN","DGPFRFA1",125,0)
 .... S DGCNT=DGCNT+1,DGCNT(DGCAT)=$G(DGCNT(DGCAT))+1
"RTN","DGPFRFA1",126,0)
 .... D:$Y>(IOSL-4) HEAD
"RTN","DGPFRFA1",127,0)
 .... Q:DGQ
"RTN","DGPFRFA1",128,0)
 .... S DGSTR=$G(@DGLIST@(DGCAT,DGFG,DGNAM,DGDFN))
"RTN","DGPFRFA1",129,0)
 .... W !,$E(DGNAM,1,20),?22,$P(DGSTR,U),?33,$P(DGSTR,U,2),?43,$P(DGSTR,U,3),?53,$P(DGSTR,U,4),?63,$E($P(DGSTR,U,5),1,17)
"RTN","DGPFRFA1",130,0)
 . Q:DGQ
"RTN","DGPFRFA1",131,0)
 . I DGCNT D
"RTN","DGPFRFA1",132,0)
 .. D SUB(.DGCNT,1)
"RTN","DGPFRFA1",133,0)
 .. D:DGSORT("DGFLAG")="A" SUB(.DGCNT,2)  ;only if (A)ll flags
"RTN","DGPFRFA1",134,0)
 .. S DGOFG="",DGCNT=0
"RTN","DGPFRFA1",135,0)
 ;
"RTN","DGPFRFA1",136,0)
 ;Shutdown if stop task requested
"RTN","DGPFRFA1",137,0)
 I DGQ W:$D(ZTQUEUED) !!,"REPORT STOPPED AT USER REQUEST" Q
"RTN","DGPFRFA1",138,0)
 ;
"RTN","DGPFRFA1",139,0)
 I +DGSORT("DGCAT")=3 D  ; Grand totals (B)oth Categories
"RTN","DGPFRFA1",140,0)
 . S DGCAT=3,DGFG="All Flags",DGGRAND=1
"RTN","DGPFRFA1",141,0)
 . D HEAD
"RTN","DGPFRFA1",142,0)
 . W !!,"REPORT SUMMARY:",!,"---------------"
"RTN","DGPFRFA1",143,0)
 . F DGCAT=1,2,3 D
"RTN","DGPFRFA1",144,0)
 .. S:DGCAT'=3 DGCNT(3)=$G(DGCNT(3))+$G(DGCNT(DGCAT))
"RTN","DGPFRFA1",145,0)
 .. W:DGCAT=3 !?39,"-------"
"RTN","DGPFRFA1",146,0)
 .. W !,"Total Assignments for Category "
"RTN","DGPFRFA1",147,0)
 .. W $S(DGCAT=1:"I",DGCAT=2:"II",1:"I & II"),":"
"RTN","DGPFRFA1",148,0)
 .. W ?40,$J(+$G(DGCNT(DGCAT)),6)
"RTN","DGPFRFA1",149,0)
 ;
"RTN","DGPFRFA1",150,0)
 W !!,"<End of Report>"
"RTN","DGPFRFA1",151,0)
 Q
"RTN","DGPFRFA1",152,0)
 ;
"RTN","DGPFRFA1",153,0)
PAUSE(DGQ) ; pause screen display
"RTN","DGPFRFA1",154,0)
 ;  Input: 
"RTN","DGPFRFA1",155,0)
 ;      DGQ - var used to quit report processing to user CRT
"RTN","DGPFRFA1",156,0)
 ; Output:
"RTN","DGPFRFA1",157,0)
 ;      DGQ - passed by reference - 0 = Continue, 1 = Quit
"RTN","DGPFRFA1",158,0)
 ;
"RTN","DGPFRFA1",159,0)
 I $G(DGPAGE)>0,$E(IOST,1,2)="C-" K DIR S DIR(0)="E" D ^DIR K DIR S:+Y=0 DGQ=1
"RTN","DGPFRFA1",160,0)
 Q
"RTN","DGPFRFA1",161,0)
 ;
"RTN","DGPFRFA1",162,0)
SUB(CNT,TYP) ; print sub-totals
"RTN","DGPFRFA1",163,0)
 ;  Input:
"RTN","DGPFRFA1",164,0)
 ;      CNT - count of records printed
"RTN","DGPFRFA1",165,0)
 ;      TYP - indicator of which total count is being printed
"RTN","DGPFRFA1",166,0)
 ; Output: Write lines of Sub-Totals and Totals per Flag and Category
"RTN","DGPFRFA1",167,0)
 ;
"RTN","DGPFRFA1",168,0)
 N DGTYPE,DGCOUNT
"RTN","DGPFRFA1",169,0)
 S DGTYPE=$S(TYP=1:"Flag",2:"Category "_$S(DGCAT=1:"I",1:"II"))
"RTN","DGPFRFA1",170,0)
 S DGCOUNT=$S(TYP=1:CNT,1:DGCNT(DGCAT))
"RTN","DGPFRFA1",171,0)
 W:TYP=1 !
"RTN","DGPFRFA1",172,0)
 W !,"Total Assignments for "_DGTYPE_":  ",DGCOUNT
"RTN","DGPFRFA1",173,0)
 Q
"RTN","DGPFRFA1",174,0)
 ;
"RTN","DGPFRFA1",175,0)
HEAD ;Print/Display page header
"RTN","DGPFRFA1",176,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S (ZTSTOP,DGQ)=1 Q
"RTN","DGPFRFA1",177,0)
 D PAUSE(.DGQ)
"RTN","DGPFRFA1",178,0)
 Q:DGQ
"RTN","DGPFRFA1",179,0)
 W:'($E(IOST,1,2)'="C-"&'DGPAGE) @IOF
"RTN","DGPFRFA1",180,0)
 S DGPAGE=$G(DGPAGE)+1
"RTN","DGPFRFA1",181,0)
 W !?25,"PATIENT RECORD FLAGS"
"RTN","DGPFRFA1",182,0)
 W !?24,"FLAG ASSIGNMENT REPORT",?70,"Page: ",$G(DGPAGE)
"RTN","DGPFRFA1",183,0)
 W !?24,"----------------------",?48,"Printed: ",DGDT
"RTN","DGPFRFA1",184,0)
 W !?2,"CATEGORY: "_$S($G(DGCAT)=1:"Category I (National)",$G(DGCAT)=2:"Category II (Local)",1:"Both (Category I & II)")
"RTN","DGPFRFA1",185,0)
 W !,"DATE RANGE: ",$$FDATE^VALM1($G(DGSORT("DGBEG")))_" TO "_$$FDATE^VALM1($G(DGSORT("DGEND")))
"RTN","DGPFRFA1",186,0)
 W !?1,"FLAG NAME: ",$G(DGFG),!
"RTN","DGPFRFA1",187,0)
 I DGGRAND W DGLINE Q
"RTN","DGPFRFA1",188,0)
 W !,"PATIENT NAME",?22,"SSN",?33,"ASSIGNED",?43,"REVIEW DT",?53,"STATUS",?63,"OWNING SITE"
"RTN","DGPFRFA1",189,0)
 W !,"--------------------",?22,"---------",?33,"--------",?43,"--------",?53,"--------",?63,"-----------------"
"RTN","DGPFRFA1",190,0)
 Q
"RTN","DGPFRFA1",191,0)
 ;
"RTN","DGPFRFA1",192,0)
EXIT ;
"RTN","DGPFRFA1",193,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","DGPFRFA1",194,0)
 K @DGLIST
"RTN","DGPFRFA1",195,0)
 I '$D(ZTQUEUED) D
"RTN","DGPFRFA1",196,0)
 . K %ZIS,POP
"RTN","DGPFRFA1",197,0)
 . D ^%ZISC,HOME^%ZIS
"RTN","DGPFRFA1",198,0)
 Q
"RTN","DGPFRPA")
0^44^B10216886
"RTN","DGPFRPA",1,0)
DGPFRPA ;ALB/RBS - PRF PATIENT ASSIGNMENTS REPORT ; 5/11/04 3:35pm
"RTN","DGPFRPA",2,0)
 ;;5.3;Registration;**554**;Aug 13, 1993
"RTN","DGPFRPA",3,0)
 ;
"RTN","DGPFRPA",4,0)
 ;This routine will be used for selecting sort parameters to produce
"RTN","DGPFRPA",5,0)
 ; the DGPF PATIENT ASSIGNMENTS REPORT for Patient Record Flags.
"RTN","DGPFRPA",6,0)
 ;
"RTN","DGPFRPA",7,0)
 ; Selection options will provide the ability to report by:
"RTN","DGPFRPA",8,0)
 ;  PATIENT
"RTN","DGPFRPA",9,0)
 ;  STATUS (ASSIGNMENTS)
"RTN","DGPFRPA",10,0)
 ;
"RTN","DGPFRPA",11,0)
 ; The following reporting sort array will be built by user prompts:
"RTN","DGPFRPA",12,0)
 ;     DGSORT("DGDFN") = Patient IEN of (#2) file to report on
"RTN","DGPFRPA",13,0)
 ;  DGSORT("DGSTATUS") = Assignment Status to report on
"RTN","DGPFRPA",14,0)
 ;                         1^Active
"RTN","DGPFRPA",15,0)
 ;                         2^Inactive
"RTN","DGPFRPA",16,0)
 ;                         3^Both
"RTN","DGPFRPA",17,0)
 ;-- no direct entry
"RTN","DGPFRPA",18,0)
 QUIT
"RTN","DGPFRPA",19,0)
 ;
"RTN","DGPFRPA",20,0)
EN ;Entry point
"RTN","DGPFRPA",21,0)
 ;-- user prompts for report selection sorts
"RTN","DGPFRPA",22,0)
 ;  Input: none
"RTN","DGPFRPA",23,0)
 ; Output: Report generated using user selected parameters
"RTN","DGPFRPA",24,0)
 ;
"RTN","DGPFRPA",25,0)
 N DGASK    ;return value from $$ANSWER^DGPFUT call
"RTN","DGPFRPA",26,0)
 N DGDIRA   ;DGDIRA - DIR("A") string
"RTN","DGPFRPA",27,0)
 N DGDIRB   ;DGDIRB - DIR("B") string
"RTN","DGPFRPA",28,0)
 N DGDIRH   ;DGDIRH - DIR("?") string
"RTN","DGPFRPA",29,0)
 N DGDIRO   ;DGDIR0 - DIR(0) string
"RTN","DGPFRPA",30,0)
 N DGIEN    ;assignment ien
"RTN","DGPFRPA",31,0)
 N DGIENS   ;array of ien's of the patients assignment records
"RTN","DGPFRPA",32,0)
 N DGOK     ;ok flag for finding assignments to report on
"RTN","DGPFRPA",33,0)
 N DGPFA    ;assignment array
"RTN","DGPFRPA",34,0)
 N DGQ      ;quit flag
"RTN","DGPFRPA",35,0)
 N DGSORT   ;array or report parameters
"RTN","DGPFRPA",36,0)
 N SAVEXQY0 ;temp save var
"RTN","DGPFRPA",37,0)
 N ZTSAVE   ;open array reference of input parameters used by tasking
"RTN","DGPFRPA",38,0)
 ;
"RTN","DGPFRPA",39,0)
 ;-- prompt for patient to report on
"RTN","DGPFRPA",40,0)
 ; suppress display of Active Record Flags in DISPPRF^DGPFAPI
"RTN","DGPFRPA",41,0)
 ; save variable before temporarily deleting it so that the 
"RTN","DGPFRPA",42,0)
 ; code, Q:'$D(XQY0), in DISPPRF^DGPFAPI will suppress the display
"RTN","DGPFRPA",43,0)
 ;
"RTN","DGPFRPA",44,0)
 K SAVEXQY0
"RTN","DGPFRPA",45,0)
 I $D(XQY0) S SAVEXQY0=XQY0 K XQY0  ;save original
"RTN","DGPFRPA",46,0)
 ;
"RTN","DGPFRPA",47,0)
 D SELPAT^DGPFUT1(.DGASK)
"RTN","DGPFRPA",48,0)
 ;
"RTN","DGPFRPA",49,0)
 I $D(SAVEXQY0) S XQY0=SAVEXQY0 K SAVEXQY0  ;restore original
"RTN","DGPFRPA",50,0)
 ;
"RTN","DGPFRPA",51,0)
 Q:(DGASK<1)
"RTN","DGPFRPA",52,0)
 ; get all assignment ien's for the patient
"RTN","DGPFRPA",53,0)
 I '$$GETALL^DGPFAA(DGASK,.DGIENS) D  Q
"RTN","DGPFRPA",54,0)
 . W !?2,">>> Selected patient has no record flag assignments on file.",*7
"RTN","DGPFRPA",55,0)
 ;
"RTN","DGPFRPA",56,0)
 S DGSORT("DGDFN")=DGASK
"RTN","DGPFRPA",57,0)
 ;
"RTN","DGPFRPA",58,0)
 ;-- prompt for selection of the assignment status to report on
"RTN","DGPFRPA",59,0)
 S DGDIRA="Select Assignment Status to report on"
"RTN","DGPFRPA",60,0)
 S DGDIRB="Both"
"RTN","DGPFRPA",61,0)
 S DGDIRH="Enter one of the status selections to report on"
"RTN","DGPFRPA",62,0)
 S DGDIRO="S^1:Active;2:Inactive;3:Both"
"RTN","DGPFRPA",63,0)
 S DGASK=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO,DGDIRH)
"RTN","DGPFRPA",64,0)
 Q:(DGASK<1)
"RTN","DGPFRPA",65,0)
 S DGQ=0
"RTN","DGPFRPA",66,0)
 I DGASK'=3 D
"RTN","DGPFRPA",67,0)
 . S (DGIEN,DGOK)=0
"RTN","DGPFRPA",68,0)
 . F  S DGIEN=$O(DGIENS(DGIEN)) Q:'DGIEN  D  Q:(DGOK!DGQ)
"RTN","DGPFRPA",69,0)
 . . ;-get assignment
"RTN","DGPFRPA",70,0)
 . . K DGPFA
"RTN","DGPFRPA",71,0)
 . . I $$GETASGN^DGPFAA(DGIEN,.DGPFA),$P(DGPFA("STATUS"),U)=DGASK S DGOK=1 Q
"RTN","DGPFRPA",72,0)
 . Q:DGOK
"RTN","DGPFRPA",73,0)
 . S DGQ=1
"RTN","DGPFRPA",74,0)
 . W !?2,">>> Selected patient has no '"_$S(DGASK=1:"Active",1:"Inactive")_"' record flag assignments on file.",*7
"RTN","DGPFRPA",75,0)
 ;
"RTN","DGPFRPA",76,0)
 Q:DGQ
"RTN","DGPFRPA",77,0)
 S DGSORT("DGSTATUS")=DGASK_U_$S(DGASK=1:"Active",DGASK=2:"Inactive",DGASK=3:"Both",1:3)
"RTN","DGPFRPA",78,0)
 ;
"RTN","DGPFRPA",79,0)
 K DGASK,DGOK,DGQ,DGIEN,DGIENS,DGDIRA,DGDIRB,DGDIRO,DGDIRH
"RTN","DGPFRPA",80,0)
 ;
"RTN","DGPFRPA",81,0)
 ;-- prompt for device
"RTN","DGPFRPA",82,0)
 S ZTSAVE("DGSORT(")=""
"RTN","DGPFRPA",83,0)
 D EN^XUTMDEVQ("START^DGPFRPA1","Patient Assignments Report",.ZTSAVE)
"RTN","DGPFRPA",84,0)
 D HOME^%ZIS
"RTN","DGPFRPA",85,0)
 Q
"RTN","DGPFRPA1")
0^45^B35851329
"RTN","DGPFRPA1",1,0)
DGPFRPA1 ;ALB/RBS - PRF PATIENT ASSIGNMENTS REPORT CONT. ; 5/21/04 12:53pm
"RTN","DGPFRPA1",2,0)
 ;;5.3;Registration;**554**;Aug 13, 1993
"RTN","DGPFRPA1",3,0)
 ;
"RTN","DGPFRPA1",4,0)
 ;This routine will be used to display or print all the record flag
"RTN","DGPFRPA1",5,0)
 ;assignments of a patient.
"RTN","DGPFRPA1",6,0)
 ;
"RTN","DGPFRPA1",7,0)
 ; Input: The following sort array contains the report parameters:
"RTN","DGPFRPA1",8,0)
 ;      DGSORT("DGDFN") = Patient IEN of (#2) file to report on
"RTN","DGPFRPA1",9,0)
 ;   DGSORT("DGSTATUS") = Assignment Status to report on
"RTN","DGPFRPA1",10,0)
 ;                      = 1;Active, 2:Inactive, 3:Both
"RTN","DGPFRPA1",11,0)
 ;
"RTN","DGPFRPA1",12,0)
 ; Output:
"RTN","DGPFRPA1",13,0)
 ;    A formatted report of Record Flag Assignments for a patient.
"RTN","DGPFRPA1",14,0)
 ;
"RTN","DGPFRPA1",15,0)
 ;- no direct entry
"RTN","DGPFRPA1",16,0)
 QUIT
"RTN","DGPFRPA1",17,0)
 ;
"RTN","DGPFRPA1",18,0)
START ; compile and print report
"RTN","DGPFRPA1",19,0)
 I $E(IOST)="C" D WAIT^DICD
"RTN","DGPFRPA1",20,0)
 N DGLIST ;temp global name used for report list
"RTN","DGPFRPA1",21,0)
 S DGLIST=$NA(^TMP("DGPFRPA1",$J))
"RTN","DGPFRPA1",22,0)
 K @DGLIST
"RTN","DGPFRPA1",23,0)
 D LOOP(.DGSORT,DGLIST)
"RTN","DGPFRPA1",24,0)
 D PRINT(.DGSORT,DGLIST)
"RTN","DGPFRPA1",25,0)
 K @DGLIST
"RTN","DGPFRPA1",26,0)
 D EXIT
"RTN","DGPFRPA1",27,0)
 Q
"RTN","DGPFRPA1",28,0)
 ;
"RTN","DGPFRPA1",29,0)
LOOP(DGSORT,DGLIST) ;use sort var's for record searching to build list
"RTN","DGPFRPA1",30,0)
 ;  Input:
"RTN","DGPFRPA1",31,0)
 ;      DGSORT - array of user selected report parameters
"RTN","DGPFRPA1",32,0)
 ;      DGLIST - temp global name
"RTN","DGPFRPA1",33,0)
 ;
"RTN","DGPFRPA1",34,0)
 ; Output:
"RTN","DGPFRPA1",35,0)
 ;      ^TMP("DGPFRPA1",$J) - temp global used for report output
"RTN","DGPFRPA1",36,0)
 ;
"RTN","DGPFRPA1",37,0)
 N DGDFN    ;pointer to patient being reported on
"RTN","DGPFRPA1",38,0)
 N DGIEN    ;ien of assignment record
"RTN","DGPFRPA1",39,0)
 N DGIENS   ;array of ien's of the patients assignments records
"RTN","DGPFRPA1",40,0)
 N DGPAT    ;patient data array
"RTN","DGPFRPA1",41,0)
 N DGPFA    ;assignment data array
"RTN","DGPFRPA1",42,0)
 N DGSSN    ;patient ssn
"RTN","DGPFRPA1",43,0)
 N DGSTAT   ;status of assignment
"RTN","DGPFRPA1",44,0)
 N DGSTATUS ;assignment status to report on
"RTN","DGPFRPA1",45,0)
 N DGX      ;loop var
"RTN","DGPFRPA1",46,0)
 ;
"RTN","DGPFRPA1",47,0)
 ; setup variables equal to user input parameter subscripts
"RTN","DGPFRPA1",48,0)
 ;   "DGDFN", "DGSTATUS"
"RTN","DGPFRPA1",49,0)
 S DGX="" F  S DGX=$O(DGSORT(DGX)) Q:DGX=""  S @DGX=DGSORT(DGX)
"RTN","DGPFRPA1",50,0)
 ;
"RTN","DGPFRPA1",51,0)
 S DGSTAT=+DGSTATUS   ; assignments status to report on
"RTN","DGPFRPA1",52,0)
 S:DGSTAT=2 DGSTAT=0  ; inactive status value is '0'
"RTN","DGPFRPA1",53,0)
 ;
"RTN","DGPFRPA1",54,0)
 ; get patient demographics to setup patient name & ssn
"RTN","DGPFRPA1",55,0)
 K DGPAT
"RTN","DGPFRPA1",56,0)
 Q:'$$GETPAT^DGPFUT2(DGDFN,.DGPAT)
"RTN","DGPFRPA1",57,0)
 ; add patient name & ssn to DGSORT for printing
"RTN","DGPFRPA1",58,0)
 S DGSSN=$E(DGPAT("SSN"),1,3)_"-"_$E(DGPAT("SSN"),4,5)_"-"_$E(DGPAT("SSN"),6,10)
"RTN","DGPFRPA1",59,0)
 S DGSORT("DGDFN")=DGSORT("DGDFN")_U_DGPAT("NAME")_U_DGSSN
"RTN","DGPFRPA1",60,0)
 ; get list of all assignments for patient
"RTN","DGPFRPA1",61,0)
 Q:'$$GETALL^DGPFAA(DGDFN,.DGIENS)
"RTN","DGPFRPA1",62,0)
 S DGIEN=0
"RTN","DGPFRPA1",63,0)
 F  S DGIEN=$O(DGIENS(DGIEN)) Q:'DGIEN  D
"RTN","DGPFRPA1",64,0)
 . ; get assignment record fields
"RTN","DGPFRPA1",65,0)
 . K DGPFA
"RTN","DGPFRPA1",66,0)
 . Q:'$$GETASGN^DGPFAA(DGIEN,.DGPFA)
"RTN","DGPFRPA1",67,0)
 . I +DGSTATUS'=3,($P(DGPFA("STATUS"),U)'=DGSTAT) Q
"RTN","DGPFRPA1",68,0)
 . ; call to build temp global
"RTN","DGPFRPA1",69,0)
 . D BLDTMP(.DGPFA,DGIEN,DGLIST)
"RTN","DGPFRPA1",70,0)
 ;
"RTN","DGPFRPA1",71,0)
 Q
"RTN","DGPFRPA1",72,0)
 ;
"RTN","DGPFRPA1",73,0)
BLDTMP(DGPFA,DGIEN,DGLIST) ; list global builder
"RTN","DGPFRPA1",74,0)
 ;  Input:
"RTN","DGPFRPA1",75,0)
 ;      DGPFA  - array of assignment record data
"RTN","DGPFRPA1",76,0)
 ;      DGIEN  - ien pointer to PRF ASSIGNMENT (#26.13) file record
"RTN","DGPFRPA1",77,0)
 ;      DGLIST - temp global name used for report list
"RTN","DGPFRPA1",78,0)
 ;
"RTN","DGPFRPA1",79,0)
 ; Output:
"RTN","DGPFRPA1",80,0)
 ;      ^TMP("DGPFRPA1",$J) - temp global containing report output
"RTN","DGPFRPA1",81,0)
 ;
"RTN","DGPFRPA1",82,0)
 N DGACTDT  ;initial entry date
"RTN","DGPFRPA1",83,0)
 N DGAPRVBY ;approved by person name
"RTN","DGPFRPA1",84,0)
 N DGCATG   ;category of flag
"RTN","DGPFRPA1",85,0)
 N DGFGNM   ;flag name
"RTN","DGPFRPA1",86,0)
 N DGLINE   ;report detail display line
"RTN","DGPFRPA1",87,0)
 N DGPCAT   ;print output of category
"RTN","DGPFRPA1",88,0)
 N DGPFAH   ;array of assignment history data
"RTN","DGPFRPA1",89,0)
 N DGREVDT  ;review date
"RTN","DGPFRPA1",90,0)
 ;
"RTN","DGPFRPA1",91,0)
 ; get initial assignment history
"RTN","DGPFRPA1",92,0)
 Q:'$$GETHIST^DGPFAAH($$GETFIRST^DGPFAAH(DGIEN),.DGPFAH)
"RTN","DGPFRPA1",93,0)
 Q:'$G(DGPFAH("ASSIGNDT"))
"RTN","DGPFRPA1",94,0)
 S DGACTDT=$$FDATE^VALM1(+DGPFAH("ASSIGNDT"))
"RTN","DGPFRPA1",95,0)
 S DGREVDT=+DGPFA("REVIEWDT")
"RTN","DGPFRPA1",96,0)
 S DGREVDT=$S(DGREVDT:$$FDATE^VALM1(DGREVDT),1:"N/A")
"RTN","DGPFRPA1",97,0)
 S DGFGNM=$P(DGPFA("FLAG"),U,2)
"RTN","DGPFRPA1",98,0)
 S:DGFGNM']"" DGFGNM="MISSING FLAG NAME"
"RTN","DGPFRPA1",99,0)
 S DGAPRVBY=$P(DGPFAH("APPRVBY"),U,2)
"RTN","DGPFRPA1",100,0)
 S:DGAPRVBY']"" DGAPRVBY="Missing Name"
"RTN","DGPFRPA1",101,0)
 S DGCATG=$S(DGPFA("FLAG")[26.15:1,1:2)  ;category
"RTN","DGPFRPA1",102,0)
 S DGPCAT=$S(DGCATG=1:"I",1:"II")
"RTN","DGPFRPA1",103,0)
 S DGLINE=$E(DGFGNM,1,15)_U_DGPCAT_U_$E(DGAPRVBY,1,15)_U_DGACTDT_U_DGREVDT_U_$P(DGPFA("STATUS"),U,2)_U_$E($P(DGPFA("OWNER"),U,2),1,15)
"RTN","DGPFRPA1",104,0)
 S @DGLIST@(DGCATG,+DGPFAH("ASSIGNDT"))=DGLINE
"RTN","DGPFRPA1",105,0)
 Q
"RTN","DGPFRPA1",106,0)
 ;
"RTN","DGPFRPA1",107,0)
PRINT(DGSORT,DGLIST) ;output report
"RTN","DGPFRPA1",108,0)
 ;  Input:
"RTN","DGPFRPA1",109,0)
 ;      DGSORT - array of user selected report parameters
"RTN","DGPFRPA1",110,0)
 ;      DGLIST - temp global name used for report list
"RTN","DGPFRPA1",111,0)
 ;
"RTN","DGPFRPA1",112,0)
 ; Output: Formatted report to user selected device
"RTN","DGPFRPA1",113,0)
 ;
"RTN","DGPFRPA1",114,0)
 N DGCAT  ;flag category
"RTN","DGPFRPA1",115,0)
 N DGCNT  ;flag counter
"RTN","DGPFRPA1",116,0)
 N DGDFN  ;ien of patient
"RTN","DGPFRPA1",117,0)
 N DGDT   ;date time report printed
"RTN","DGPFRPA1",118,0)
 N DGFG   ;flag name
"RTN","DGPFRPA1",119,0)
 N DGLINE ;string of hyphens (80) for report header format
"RTN","DGPFRPA1",120,0)
 N DGNAM  ;patient name
"RTN","DGPFRPA1",121,0)
 N DGPAGE ;page counter
"RTN","DGPFRPA1",122,0)
 N DGQ    ;quit flag
"RTN","DGPFRPA1",123,0)
 N DGSTAT ;status report is run for
"RTN","DGPFRPA1",124,0)
 N DGSTR  ;string of detail line to display
"RTN","DGPFRPA1",125,0)
 N X,Y
"RTN","DGPFRPA1",126,0)
 ;
"RTN","DGPFRPA1",127,0)
 S (DGCNT,DGQ,DGPAGE)=0,$P(DGLINE,"-",81)=""
"RTN","DGPFRPA1",128,0)
 S DGDT=$P($$FMTE^XLFDT($$NOW^XLFDT,"T"),":",1,2)
"RTN","DGPFRPA1",129,0)
 S DGSTAT=+DGSORT("DGSTATUS")
"RTN","DGPFRPA1",130,0)
 ;
"RTN","DGPFRPA1",131,0)
 I $O(@DGLIST@(""))="" D  Q
"RTN","DGPFRPA1",132,0)
 . D HEAD
"RTN","DGPFRPA1",133,0)
 . W !!,"   >>> No Record Flag Assignments were found using the report criteria.",!
"RTN","DGPFRPA1",134,0)
 ;
"RTN","DGPFRPA1",135,0)
 ; loop and print report
"RTN","DGPFRPA1",136,0)
 S (DGCAT,DGFG,DGNAM,DGDFN,DGSTR)="",DGCNT=0
"RTN","DGPFRPA1",137,0)
 D HEAD
"RTN","DGPFRPA1",138,0)
 F  S DGCAT=$O(@DGLIST@(DGCAT)) Q:DGCAT=""  D  Q:DGQ
"RTN","DGPFRPA1",139,0)
 . F  S DGFG=$O(@DGLIST@(DGCAT,DGFG)) Q:DGFG=""  D  Q:DGQ
"RTN","DGPFRPA1",140,0)
 .. I $Y>(IOSL-4) D PAUSE(.DGQ) Q:DGQ  D HEAD
"RTN","DGPFRPA1",141,0)
 .. S DGSTR=$G(@DGLIST@(DGCAT,DGFG))
"RTN","DGPFRPA1",142,0)
 .. S DGCNT=DGCNT+1
"RTN","DGPFRPA1",143,0)
 .. W !,DGCNT,?3,$E($P(DGSTR,U),1,17),?21,$P(DGSTR,U,2),?25,$E($P(DGSTR,U,3),1,11),?38,$P(DGSTR,U,4),?48,$P(DGSTR,U,5),?59,$P(DGSTR,U,6),?69,$E($P(DGSTR,U,7),1,11)
"RTN","DGPFRPA1",144,0)
 . Q:DGQ
"RTN","DGPFRPA1",145,0)
 ;
"RTN","DGPFRPA1",146,0)
 ;Shutdown if stop task requested
"RTN","DGPFRPA1",147,0)
 I DGQ W:$D(ZTQUEUED) !!,"REPORT STOPPED AT USER REQUEST" Q
"RTN","DGPFRPA1",148,0)
 ;
"RTN","DGPFRPA1",149,0)
 W !!,"<End of Report>"
"RTN","DGPFRPA1",150,0)
 Q
"RTN","DGPFRPA1",151,0)
 ;
"RTN","DGPFRPA1",152,0)
PAUSE(DGQ) ; pause screen display
"RTN","DGPFRPA1",153,0)
 ;  Input: 
"RTN","DGPFRPA1",154,0)
 ;      DGQ - var used to quit report processing to user CRT
"RTN","DGPFRPA1",155,0)
 ; Output:
"RTN","DGPFRPA1",156,0)
 ;      DGQ - passed by reference - 0 = Continue, 1 = Quit
"RTN","DGPFRPA1",157,0)
 ;
"RTN","DGPFRPA1",158,0)
 I $G(DGPAGE)>0,$E(IOST,1,2)="C-" K DIR S DIR(0)="E" D ^DIR K DIR S:+Y=0 DGQ=1
"RTN","DGPFRPA1",159,0)
 Q
"RTN","DGPFRPA1",160,0)
 ;
"RTN","DGPFRPA1",161,0)
HEAD ;Print/Display page header
"RTN","DGPFRPA1",162,0)
 ;
"RTN","DGPFRPA1",163,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S (ZTSTOP,DGQ)=1 Q
"RTN","DGPFRPA1",164,0)
 ;
"RTN","DGPFRPA1",165,0)
 W:'($E(IOST,1,2)'="C-"&'DGPAGE) @IOF
"RTN","DGPFRPA1",166,0)
 ;
"RTN","DGPFRPA1",167,0)
 S DGPAGE=$G(DGPAGE)+1
"RTN","DGPFRPA1",168,0)
 W !?25,"PATIENT RECORD FLAGS"
"RTN","DGPFRPA1",169,0)
 W !?22,"PATIENT ASSIGNMENTS REPORT",?68,"Page: ",$G(DGPAGE)
"RTN","DGPFRPA1",170,0)
 W !,"Report Selected: "_$S(DGSTAT=1:"ACTIVE",DGSTAT=2:"INACTIVE",1:"Both (ACTIVE & INACTIVE)")
"RTN","DGPFRPA1",171,0)
 W ?50,"Printed: ",DGDT
"RTN","DGPFRPA1",172,0)
 W !,DGLINE
"RTN","DGPFRPA1",173,0)
 W !!,"Patient: ",$P(DGSORT("DGDFN"),U,2),"  ",$P(DGSORT("DGDFN"),U,3)
"RTN","DGPFRPA1",174,0)
 W !!?3,"FLAG NAME",?15,"CATEGORY",?25,"APPROVED BY",?38,"ENTERED",?48,"REVIEW DT",?59,"STATUS",?69,"OWNING SITE"
"RTN","DGPFRPA1",175,0)
 W !,"------------------",?20,"---",?25,"-----------",?38,"--------",?48,"---------",?59,"--------",?69,"-----------"
"RTN","DGPFRPA1",176,0)
 Q
"RTN","DGPFRPA1",177,0)
 ;
"RTN","DGPFRPA1",178,0)
EXIT ;
"RTN","DGPFRPA1",179,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","DGPFRPA1",180,0)
 I '$D(ZTQUEUED) D
"RTN","DGPFRPA1",181,0)
 . K %ZIS,POP
"RTN","DGPFRPA1",182,0)
 . D ^%ZISC,HOME^%ZIS
"RTN","DGPFRPA1",183,0)
 Q
"RTN","DGPFRPI")
0^50^B19041361
"RTN","DGPFRPI",1,0)
DGPFRPI ;ALB/RBS - PRF PRINCIPAL INVEST REPORT ; 7/26/05 3:39pm
"RTN","DGPFRPI",2,0)
 ;;5.3;Registration;**554**;Aug 13, 1993
"RTN","DGPFRPI",3,0)
 ;
"RTN","DGPFRPI",4,0)
 ;This routine will be used for selecting sort parameters to produce
"RTN","DGPFRPI",5,0)
 ;the DGPF PRINCIPAL INVEST REPORT for Patient Record Flags.
"RTN","DGPFRPI",6,0)
 ;
"RTN","DGPFRPI",7,0)
 ; Selection options will provide the ability to report by:
"RTN","DGPFRPI",8,0)
 ;  PRINCIPAL INVESTIGATOR
"RTN","DGPFRPI",9,0)
 ;  CATEGORY
"RTN","DGPFRPI",10,0)
 ;  STATUS (ASSIGNMENTS)
"RTN","DGPFRPI",11,0)
 ;  BEGINNING DATE
"RTN","DGPFRPI",12,0)
 ;  ENDING DATE
"RTN","DGPFRPI",13,0)
 ;
"RTN","DGPFRPI",14,0)
 ; The following reporting sort array will be built by user prompts:
"RTN","DGPFRPI",15,0)
 ;  DGSORT("DGPRINC") = pointer to NEW PERSON (#200) file^Person Name
"RTN","DGPFRPI",16,0)
 ;                      or
"RTN","DGPFRPI",17,0)
 ;                    = "A" = All Principal Investigator's
"RTN","DGPFRPI",18,0)
 ;  DGSORT("DGCAT") = CATEGORY
"RTN","DGPFRPI",19,0)
 ;                      2^Category II (Local)
"RTN","DGPFRPI",20,0)
 ;  DGSORT("DGSTATUS") = Assignment Status to report on
"RTN","DGPFRPI",21,0)
 ;                         1^Active
"RTN","DGPFRPI",22,0)
 ;                         2^Inactive
"RTN","DGPFRPI",23,0)
 ;                         3^Both
"RTN","DGPFRPI",24,0)
 ;  DGSORT("DGBEG") = BEGINNING DATE  (internal FileMan date)
"RTN","DGPFRPI",25,0)
 ;  DGSORT("DGEND") = ENDING DATE     (internal FileMan date)
"RTN","DGPFRPI",26,0)
 ;
"RTN","DGPFRPI",27,0)
 ;-- no direct entry
"RTN","DGPFRPI",28,0)
 QUIT
"RTN","DGPFRPI",29,0)
 ;
"RTN","DGPFRPI",30,0)
EN ;Entry point
"RTN","DGPFRPI",31,0)
 ;-- user prompts for report selection sorts
"RTN","DGPFRPI",32,0)
 ;  Input: none
"RTN","DGPFRPI",33,0)
 ; Output: Report generated using user selected parameters
"RTN","DGPFRPI",34,0)
 ;
"RTN","DGPFRPI",35,0)
 N DGABORT ;abort flag
"RTN","DGPFRPI",36,0)
 N DGASK   ;return value from $$ANSWER^DGPFUT call
"RTN","DGPFRPI",37,0)
 N DGDIRA  ;DGDIRA - DIR("A") string
"RTN","DGPFRPI",38,0)
 N DGDIRB  ;DGDIRB - DIR("B") string
"RTN","DGPFRPI",39,0)
 N DGDIRH  ;DGDIRH - DIR("?") string
"RTN","DGPFRPI",40,0)
 N DGDIRO  ;DGDIR0 - DIR(0) string
"RTN","DGPFRPI",41,0)
 N DGDIRS  ;DGDIRS - DIR("S") string
"RTN","DGPFRPI",42,0)
 N DGFIRST ;first assignment date
"RTN","DGPFRPI",43,0)
 N DGQ     ;quit flag
"RTN","DGPFRPI",44,0)
 N DGSEL   ;help text var
"RTN","DGPFRPI",45,0)
 N DGSORT  ;array or report parameters
"RTN","DGPFRPI",46,0)
 N ZTSAVE  ;open array reference of input parameters used by tasking
"RTN","DGPFRPI",47,0)
 ;
"RTN","DGPFRPI",48,0)
 ;check for database
"RTN","DGPFRPI",49,0)
 S DGFIRST=$P(+$O(^DGPF(26.14,"D","")),".")    ;first assignment date
"RTN","DGPFRPI",50,0)
 I 'DGFIRST D  Q
"RTN","DGPFRPI",51,0)
 . W !?2,">>> No Patient Record Flag Assignments have been found.",*7
"RTN","DGPFRPI",52,0)
 . I $$ANSWER^DGPFUT("Enter RETURN to continue","","E")  ;pause
"RTN","DGPFRPI",53,0)
 ;
"RTN","DGPFRPI",54,0)
 ;-- prompt for selection of an approved by person
"RTN","DGPFRPI",55,0)
 S DGDIRA="Select to report on a (S)ingle Principal Investigator or (A)ll"
"RTN","DGPFRPI",56,0)
 S DGDIRB="Single"
"RTN","DGPFRPI",57,0)
 S DGDIRH="Enter one of the selections to report on"
"RTN","DGPFRPI",58,0)
 S DGDIRO="S^S:Single Principal Investigator;A:All Principal Investigators"
"RTN","DGPFRPI",59,0)
 S DGASK=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO,DGDIRH)
"RTN","DGPFRPI",60,0)
 Q:DGASK=-1!(DGASK=0)
"RTN","DGPFRPI",61,0)
 ;
"RTN","DGPFRPI",62,0)
 S:DGASK="A" DGSORT("DGPRINC")="A"
"RTN","DGPFRPI",63,0)
 ;
"RTN","DGPFRPI",64,0)
 D:DGASK="S"
"RTN","DGPFRPI",65,0)
 . S (DGQ,DGABORT)=0
"RTN","DGPFRPI",66,0)
 . S DGDIRA="Select Principal Investigator",DGDIRB=""
"RTN","DGPFRPI",67,0)
 . S DGDIRH="Enter the Principal Investigator name"
"RTN","DGPFRPI",68,0)
 . S DGDIRO="P^200:EMZ"
"RTN","DGPFRPI",69,0)
 . S DGDIRS="I $D(^DGPF(26.11,""C"",+Y))"
"RTN","DGPFRPI",70,0)
 . F  D  Q:(DGQ!DGABORT)
"RTN","DGPFRPI",71,0)
 . . S DGASK=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO,DGDIRH,DGDIRS)
"RTN","DGPFRPI",72,0)
 . . I DGASK<1 S DGABORT=1 Q
"RTN","DGPFRPI",73,0)
 . . S DGSORT("DGPRINC")=DGASK_U_$$EXTERNAL^DILFD(26.112,.01,"F",DGASK)
"RTN","DGPFRPI",74,0)
 . . S DGQ=1
"RTN","DGPFRPI",75,0)
 ;
"RTN","DGPFRPI",76,0)
 Q:$G(DGABORT)
"RTN","DGPFRPI",77,0)
 ;
"RTN","DGPFRPI",78,0)
 ;-- prompt for selection of a flag category
"RTN","DGPFRPI",79,0)
 ; only Cat II (Local) file (#26.11) has Research Flags
"RTN","DGPFRPI",80,0)
 S DGSORT("DGCAT")=2_U_"Category II (Local)"
"RTN","DGPFRPI",81,0)
 ;
"RTN","DGPFRPI",82,0)
 ;-- prompt for selection of the assignment status to report on
"RTN","DGPFRPI",83,0)
 S DGDIRA="Select Assignment Status to report on"
"RTN","DGPFRPI",84,0)
 S DGDIRB="Both"
"RTN","DGPFRPI",85,0)
 S DGDIRH="Enter one of the status selections to report on"
"RTN","DGPFRPI",86,0)
 S DGDIRO="S^1:Active;2:Inactive;3:Both"
"RTN","DGPFRPI",87,0)
 S DGASK=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO,DGDIRH)
"RTN","DGPFRPI",88,0)
 Q:(DGASK<1)
"RTN","DGPFRPI",89,0)
 S DGSORT("DGSTATUS")=DGASK_U_$S(DGASK=1:"Active",DGASK=2:"Inactive",DGASK=3:"Both",1:3)
"RTN","DGPFRPI",90,0)
 ;
"RTN","DGPFRPI",91,0)
 ;-- prompt for beginning date
"RTN","DGPFRPI",92,0)
 S DGDIRA="Select Beginning Date"
"RTN","DGPFRPI",93,0)
 S DGDIRB=""
"RTN","DGPFRPI",94,0)
 S DGDIRH="^D HELP^DGPFRPI(1)"
"RTN","DGPFRPI",95,0)
 S DGDIRO="D^"_DGFIRST_":DT:EX"
"RTN","DGPFRPI",96,0)
 S DGASK=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO,DGDIRH)
"RTN","DGPFRPI",97,0)
 Q:(DGASK=-1)
"RTN","DGPFRPI",98,0)
 S DGSORT("DGBEG")=DGASK
"RTN","DGPFRPI",99,0)
 ;
"RTN","DGPFRPI",100,0)
 ;-- prompt for ending date
"RTN","DGPFRPI",101,0)
 S DGDIRA="Select Ending Date"
"RTN","DGPFRPI",102,0)
 S DGDIRB=""
"RTN","DGPFRPI",103,0)
 S DGDIRH="^D HELP^DGPFRPI(2)"
"RTN","DGPFRPI",104,0)
 S DGDIRO="D^"_DGSORT("DGBEG")_":DT:EX"
"RTN","DGPFRPI",105,0)
 S DGASK=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO,DGDIRH)
"RTN","DGPFRPI",106,0)
 Q:(DGASK=-1)
"RTN","DGPFRPI",107,0)
 S DGSORT("DGEND")=DGASK
"RTN","DGPFRPI",108,0)
 ;
"RTN","DGPFRPI",109,0)
 K DGDIRA,DGDIRB,DGDIRO,DGDIRH,DGDIRS,DGASK,DGQ,DGABORT
"RTN","DGPFRPI",110,0)
 ;
"RTN","DGPFRPI",111,0)
 ;-- prompt for device
"RTN","DGPFRPI",112,0)
 S ZTSAVE("DGSORT(")=""
"RTN","DGPFRPI",113,0)
 D EN^XUTMDEVQ("START^DGPFRPI1","Assignments By Principle Investigator Report",.ZTSAVE)
"RTN","DGPFRPI",114,0)
 D HOME^%ZIS
"RTN","DGPFRPI",115,0)
 Q
"RTN","DGPFRPI",116,0)
 ;
"RTN","DGPFRPI",117,0)
HELP(DGSEL) ;provide extended DIR("?") help text.
"RTN","DGPFRPI",118,0)
 ;
"RTN","DGPFRPI",119,0)
 ;  Input: DGSEL - prompt var for help text word selection
"RTN","DGPFRPI",120,0)
 ; Output: none
"RTN","DGPFRPI",121,0)
 ;
"RTN","DGPFRPI",122,0)
 W !,"  Enter the "_$S(DGSEL=1:"earliest",1:"latest")_" Assignment Date to include in the report."
"RTN","DGPFRPI",123,0)
 W !,"  Please enter a date from the specified date range displayed."
"RTN","DGPFRPI",124,0)
 Q
"RTN","DGPFRPI1")
0^51^B29056272
"RTN","DGPFRPI1",1,0)
DGPFRPI1 ;ALB/RBS - PRF PRINCIPAL INVEST REPORT CONT. ; 6/8/04 5:07pm
"RTN","DGPFRPI1",2,0)
 ;;5.3;Registration;**554**;Aug 13, 1993
"RTN","DGPFRPI1",3,0)
 ;
"RTN","DGPFRPI1",4,0)
 ;This routine will be used to display/print all patient assignments
"RTN","DGPFRPI1",5,0)
 ;for a Principal Investigator assigned to the Research record flag.
"RTN","DGPFRPI1",6,0)
 ;
"RTN","DGPFRPI1",7,0)
 ; Input:   DGSORT() - Array containing user report parameters.
"RTN","DGPFRPI1",8,0)
 ;
"RTN","DGPFRPI1",9,0)
 ; Output:  A formatted report of the Principal Investigator person's
"RTN","DGPFRPI1",10,0)
 ;          associated patient record flag assignments.
"RTN","DGPFRPI1",11,0)
 ;
"RTN","DGPFRPI1",12,0)
 ;- no direct entry
"RTN","DGPFRPI1",13,0)
 QUIT
"RTN","DGPFRPI1",14,0)
 ;
"RTN","DGPFRPI1",15,0)
START ; compile and print report
"RTN","DGPFRPI1",16,0)
 ;
"RTN","DGPFRPI1",17,0)
 I $E(IOST)="C" D WAIT^DICD
"RTN","DGPFRPI1",18,0)
 N DGLIST ;temp global name used for report list
"RTN","DGPFRPI1",19,0)
 S DGLIST=$NA(^TMP("DGPFRPI1",$J))
"RTN","DGPFRPI1",20,0)
 K @DGLIST
"RTN","DGPFRPI1",21,0)
 D LOOP(.DGSORT,DGLIST)
"RTN","DGPFRPI1",22,0)
 D PRINT^DGPFRPI2(.DGSORT,DGLIST)
"RTN","DGPFRPI1",23,0)
 K @DGLIST
"RTN","DGPFRPI1",24,0)
 D EXIT
"RTN","DGPFRPI1",25,0)
 Q
"RTN","DGPFRPI1",26,0)
 ;
"RTN","DGPFRPI1",27,0)
LOOP(DGSORT,DGLIST) ;use sort var's for record searching to build list
"RTN","DGPFRPI1",28,0)
 ;  Input:
"RTN","DGPFRPI1",29,0)
 ;      DGSORT - array of user selected report parameters
"RTN","DGPFRPI1",30,0)
 ;      DGLIST - temp global name
"RTN","DGPFRPI1",31,0)
 ;
"RTN","DGPFRPI1",32,0)
 ; Output:
"RTN","DGPFRPI1",33,0)
 ;      ^TMP("DGPFRPI1",$J) - temp global containing report output
"RTN","DGPFRPI1",34,0)
 ;
"RTN","DGPFRPI1",35,0)
 N DGAIEN   ;patient assignment ien
"RTN","DGPFRPI1",36,0)
 N DGBEG    ;sort beginning date
"RTN","DGPFRPI1",37,0)
 N DGCNT    ;flag counter
"RTN","DGPFRPI1",38,0)
 N DGDFNLST ;array of patient dfn's assigned to the flag
"RTN","DGPFRPI1",39,0)
 N DGEND    ;sort ending date
"RTN","DGPFRPI1",40,0)
 N DGFIEN   ;flag ien
"RTN","DGPFRPI1",41,0)
 N DGFLAG   ;local array used to hold flag record
"RTN","DGPFRPI1",42,0)
 N DGPI     ;principal investigator person ien
"RTN","DGPFRPI1",43,0)
 N DGPIIEN  ;sort selection var
"RTN","DGPFRPI1",44,0)
 N DGPINAME ;name of principal investigator
"RTN","DGPFRPI1",45,0)
 N DGPINUM  ;subscript number for principal investigator
"RTN","DGPFRPI1",46,0)
 N DGPRINC  ;principal investigator sort
"RTN","DGPFRPI1",47,0)
 N DGSTAT   ;status of assignment
"RTN","DGPFRPI1",48,0)
 N DGSTATUS ;sort status
"RTN","DGPFRPI1",49,0)
 N DGSUB    ;loop flag name var
"RTN","DGPFRPI1",50,0)
 N DGVPTR   ;variable pointer of flag record (i.e.) "25;DGPF(26.11,"
"RTN","DGPFRPI1",51,0)
 N DGX      ;loop var
"RTN","DGPFRPI1",52,0)
 ;
"RTN","DGPFRPI1",53,0)
 ; setup variables equal to user input parameter subscripts
"RTN","DGPFRPI1",54,0)
 ; Only Category II (Local) ^DGPF(26.11) file for Research Flags
"RTN","DGPFRPI1",55,0)
 ;   "DGPRINC", "DGSTATUS", "DGBEG", "DGEND"
"RTN","DGPFRPI1",56,0)
 S DGX="" F  S DGX=$O(DGSORT(DGX)) Q:DGX=""  S @DGX=DGSORT(DGX)
"RTN","DGPFRPI1",57,0)
 ;
"RTN","DGPFRPI1",58,0)
 S DGPIIEN=+DGPRINC  ; if 0, then 'A'll PI sort was selected
"RTN","DGPFRPI1",59,0)
 S DGSTAT=+DGSTATUS
"RTN","DGPFRPI1",60,0)
 S:DGSTAT=2 DGSTAT=0  ; inactive assignment status value is '0'
"RTN","DGPFRPI1",61,0)
 ;
"RTN","DGPFRPI1",62,0)
 ; loop research type (2) record flag x-ref
"RTN","DGPFRPI1",63,0)
 S DGSUB="",DGCNT=0
"RTN","DGPFRPI1",64,0)
 F  S DGSUB=$O(^DGPF(26.11,"ATYP",2,DGSUB)) Q:DGSUB=""  D
"RTN","DGPFRPI1",65,0)
 . S DGFIEN=""
"RTN","DGPFRPI1",66,0)
 . F  S DGFIEN=$O(^DGPF(26.11,"ATYP",2,DGSUB,DGFIEN)) Q:DGFIEN=""  D
"RTN","DGPFRPI1",67,0)
 . . K DGFLAG
"RTN","DGPFRPI1",68,0)
 . . Q:'$$GETLF^DGPFALF(DGFIEN,.DGFLAG)  ;local flag record data
"RTN","DGPFRPI1",69,0)
 . . Q:DGPIIEN&'$D(^DGPF(26.11,DGFIEN,2,"B",DGPIIEN))
"RTN","DGPFRPI1",70,0)
 . . S (DGPINUM,DGPI)=""
"RTN","DGPFRPI1",71,0)
 . . F  S DGPINUM=$O(DGFLAG("PRININV",DGPINUM)) Q:DGPINUM=""  D
"RTN","DGPFRPI1",72,0)
 . . . S DGPI=$P($G(DGFLAG("PRININV",DGPINUM,0)),U)
"RTN","DGPFRPI1",73,0)
 . . . S DGPINAME=$P($G(DGFLAG("PRININV",DGPINUM,0)),U,2)
"RTN","DGPFRPI1",74,0)
 . . . S:DGPINAME']"" DGPINAME="Missing Name"
"RTN","DGPFRPI1",75,0)
 . . . S DGVPTR=DGFIEN_";DGPF(26.11,"  ; flag variable pointer setup
"RTN","DGPFRPI1",76,0)
 . . . K DGDFNLST
"RTN","DGPFRPI1",77,0)
 . . . S DGCNT=$$ASGNCNT^DGPFLF6(DGVPTR,.DGDFNLST)  ;patient dfn list
"RTN","DGPFRPI1",78,0)
 . . . Q:'DGCNT
"RTN","DGPFRPI1",79,0)
 . . . D BLDTMP(DGBEG,DGEND,DGSTAT,DGPI,DGPINAME,.DGDFNLST,DGLIST)
"RTN","DGPFRPI1",80,0)
 Q
"RTN","DGPFRPI1",81,0)
 ;
"RTN","DGPFRPI1",82,0)
BLDTMP(DGBEG,DGEND,DGSTAT,DGPI,DGPINAME,DGDFNLST,DGLIST) ; list global builder
"RTN","DGPFRPI1",83,0)
 ;  Input:
"RTN","DGPFRPI1",84,0)
 ;      DGBEG    - sort beginning date
"RTN","DGPFRPI1",85,0)
 ;      DGEND    - sort ending date
"RTN","DGPFRPI1",86,0)
 ;      DGSTAT   - status of assignment
"RTN","DGPFRPI1",87,0)
 ;      DGPI     - principal investigator person ien
"RTN","DGPFRPI1",88,0)
 ;      DGPINAME - name of principal investigator
"RTN","DGPFRPI1",89,0)
 ;      DGDFNLST - array of patient dfn's assigned to the flag
"RTN","DGPFRPI1",90,0)
 ;      DGLIST   - temp global name used for report list
"RTN","DGPFRPI1",91,0)
 ;
"RTN","DGPFRPI1",92,0)
 ; Output:
"RTN","DGPFRPI1",93,0)
 ;      ^TMP("DGPFRPI1",$J) - temp global containing report output
"RTN","DGPFRPI1",94,0)
 ;
"RTN","DGPFRPI1",95,0)
 N DGACTDT ;initial entry date
"RTN","DGPFRPI1",96,0)
 N DGAIEN  ;patient assignment ien
"RTN","DGPFRPI1",97,0)
 N DGDFN   ;pointer to patient being reported on
"RTN","DGPFRPI1",98,0)
 N DGFGNM  ;flag name
"RTN","DGPFRPI1",99,0)
 N DGHIEN  ;history assignment ien
"RTN","DGPFRPI1",100,0)
 N DGINIT  ;initial assignment date
"RTN","DGPFRPI1",101,0)
 N DGPFA   ;assignment data array
"RTN","DGPFRPI1",102,0)
 N DGPFAH  ;assignment history data array
"RTN","DGPFRPI1",103,0)
 N DGLINE  ;report detail line
"RTN","DGPFRPI1",104,0)
 N DGPAT   ;array of patient demographics
"RTN","DGPFRPI1",105,0)
 N DGPNM   ;patient name
"RTN","DGPFRPI1",106,0)
 N DGREV   ;review date
"RTN","DGPFRPI1",107,0)
 ;
"RTN","DGPFRPI1",108,0)
 S DGDFN=""
"RTN","DGPFRPI1",109,0)
 F  S DGDFN=$O(DGDFNLST(DGDFN)) Q:DGDFN=""  D
"RTN","DGPFRPI1",110,0)
 . S DGAIEN=$G(DGDFNLST(DGDFN))
"RTN","DGPFRPI1",111,0)
 . Q:DGAIEN=""
"RTN","DGPFRPI1",112,0)
 . K DGPFA
"RTN","DGPFRPI1",113,0)
 . Q:'$$GETASGN^DGPFAA(DGAIEN,.DGPFA)  ;get assignment data
"RTN","DGPFRPI1",114,0)
 . Q:DGDFN'=$P(DGPFA("DFN"),U)
"RTN","DGPFRPI1",115,0)
 . I DGSTAT'=3,+DGPFA("STATUS")'=DGSTAT Q  ;not correct status
"RTN","DGPFRPI1",116,0)
 . ; get last history record (most current)
"RTN","DGPFRPI1",117,0)
 . K DGPFAH
"RTN","DGPFRPI1",118,0)
 . S DGHIEN=$$GETLAST^DGPFAAH(DGAIEN)
"RTN","DGPFRPI1",119,0)
 . Q:'DGHIEN
"RTN","DGPFRPI1",120,0)
 . Q:'$$GETHIST^DGPFAAH(DGHIEN,.DGPFAH)
"RTN","DGPFRPI1",121,0)
 . S DGINIT=+$$GETADT^DGPFAAH(DGAIEN)  ;initial assignment date
"RTN","DGPFRPI1",122,0)
 . Q:'DGINIT
"RTN","DGPFRPI1",123,0)
 . ; check if assignment falls within the Begin and End dates
"RTN","DGPFRPI1",124,0)
 . I DGINIT>DGBEG&($P(DGINIT,".")'>DGEND) D
"RTN","DGPFRPI1",125,0)
 . . ; get patient demographics
"RTN","DGPFRPI1",126,0)
 . . K DGPAT
"RTN","DGPFRPI1",127,0)
 . . Q:'$$GETPAT^DGPFUT2(DGDFN,.DGPAT)
"RTN","DGPFRPI1",128,0)
 . . S DGPNM=DGPAT("NAME")
"RTN","DGPFRPI1",129,0)
 . . S:DGPNM']"" DGPNM="Missing Patient Name"
"RTN","DGPFRPI1",130,0)
 . . S DGFGNM=$P(DGPFA("FLAG"),U,2)
"RTN","DGPFRPI1",131,0)
 . . S:DGFGNM']"" DGFGNM="Missing Flag Name"
"RTN","DGPFRPI1",132,0)
 . . S DGACTDT=$$FDATE^VALM1(+DGPFAH("ASSIGNDT"))
"RTN","DGPFRPI1",133,0)
 . . S DGAIEN=+DGPFAH("ASSIGN")
"RTN","DGPFRPI1",134,0)
 . . I +DGPFA("REVIEWDT") S DGREV=$$FDATE^VALM1(+DGPFA("REVIEWDT"))
"RTN","DGPFRPI1",135,0)
 . . E  S DGREV="N/A"
"RTN","DGPFRPI1",136,0)
 . . S DGLINE=DGPAT("SSN")_U_$P(DGPFAH("ACTION"),U,2)_U_DGACTDT_U_DGREV_U_$P(DGPFA("STATUS"),U,2)
"RTN","DGPFRPI1",137,0)
 . . ; - Flag Name, 0 node, IEN of Principal Investigator = PI Name
"RTN","DGPFRPI1",138,0)
 . . S @DGLIST@(DGFGNM,0,DGPI)=DGPINAME
"RTN","DGPFRPI1",139,0)
 . . ; - Flag Name, Pat Name, DFN, Asignment IEN
"RTN","DGPFRPI1",140,0)
 . . S @DGLIST@(DGFGNM,DGPNM,DGDFN,DGAIEN)=DGLINE
"RTN","DGPFRPI1",141,0)
 Q
"RTN","DGPFRPI1",142,0)
 ;
"RTN","DGPFRPI1",143,0)
EXIT ;
"RTN","DGPFRPI1",144,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","DGPFRPI1",145,0)
 I '$D(ZTQUEUED) D
"RTN","DGPFRPI1",146,0)
 . K %ZIS,POP
"RTN","DGPFRPI1",147,0)
 . D ^%ZISC,HOME^%ZIS
"RTN","DGPFRPI1",148,0)
 Q
"RTN","DGPFRPI2")
0^52^B22884103
"RTN","DGPFRPI2",1,0)
DGPFRPI2 ;ALB/RBS - PRF PRINCIPAL INVEST REPORT CONT. ; 6/14/04 10:39am
"RTN","DGPFRPI2",2,0)
 ;;5.3;Registration;**554**;Aug 13, 1993
"RTN","DGPFRPI2",3,0)
 ;
"RTN","DGPFRPI2",4,0)
 ;This routine will be used to display/print all patient assignments
"RTN","DGPFRPI2",5,0)
 ;for a Principal Investigator assigned to the Research record flag.
"RTN","DGPFRPI2",6,0)
 ;
"RTN","DGPFRPI2",7,0)
 ;- no direct entry
"RTN","DGPFRPI2",8,0)
 QUIT
"RTN","DGPFRPI2",9,0)
 ;
"RTN","DGPFRPI2",10,0)
PRINT(DGSORT,DGLIST) ;output report
"RTN","DGPFRPI2",11,0)
 ;  Input:
"RTN","DGPFRPI2",12,0)
 ;      DGSORT - array of user selected report parameters
"RTN","DGPFRPI2",13,0)
 ;      DGLIST - temp global name used for report list
"RTN","DGPFRPI2",14,0)
 ;               ^TMP("DGPFRPI1",$J)
"RTN","DGPFRPI2",15,0)
 ;
"RTN","DGPFRPI2",16,0)
 ; Output: Formatted report to user selected device
"RTN","DGPFRPI2",17,0)
 ;
"RTN","DGPFRPI2",18,0)
 N DGBEG    ;sort beginning date
"RTN","DGPFRPI2",19,0)
 N DGDFN    ;ien of patient
"RTN","DGPFRPI2",20,0)
 N DGDT     ;date time report printed
"RTN","DGPFRPI2",21,0)
 N DGFG     ;flag name
"RTN","DGPFRPI2",22,0)
 N DGEND    ;sort ending date
"RTN","DGPFRPI2",23,0)
 N DGHSTR   ;header string var
"RTN","DGPFRPI2",24,0)
 N DGHSTR1  ;header string var
"RTN","DGPFRPI2",25,0)
 N DGHSTR2  ;header string var
"RTN","DGPFRPI2",26,0)
 N DGLINE   ;string of hyphens (80) for report header format
"RTN","DGPFRPI2",27,0)
 N DGLN     ;loop var
"RTN","DGPFRPI2",28,0)
 N DGPNAM   ;patient name
"RTN","DGPFRPI2",29,0)
 N DGODFN   ;loop var flag
"RTN","DGPFRPI2",30,0)
 N DGOFG    ;name switch flag
"RTN","DGPFRPI2",31,0)
 N DGOPISTR ;pi name switch flag
"RTN","DGPFRPI2",32,0)
 N DGPAGE   ;page counter
"RTN","DGPFRPI2",33,0)
 N DGPISTR  ;pi name string for sub-header display
"RTN","DGPFRPI2",34,0)
 N DGQ      ;quit flag
"RTN","DGPFRPI2",35,0)
 N DGSTR    ;string of detail line to display
"RTN","DGPFRPI2",36,0)
 N X,Y
"RTN","DGPFRPI2",37,0)
 ;
"RTN","DGPFRPI2",38,0)
 S DGHSTR="PATIENT RECORD FLAGS"
"RTN","DGPFRPI2",39,0)
 S DGHSTR1="ASSIGNMENTS BY PRINCIPAL INVESTIGATOR REPORT"
"RTN","DGPFRPI2",40,0)
 I DGSORT("DGPRINC")="A" S DGHSTR2="(A)ll Principal Investigators"
"RTN","DGPFRPI2",41,0)
 E  S DGHSTR2="(S)ingle Principal Investigator: "_$P(DGSORT("DGPRINC"),U,2)
"RTN","DGPFRPI2",42,0)
 S DGDT=$P($$FMTE^XLFDT($$NOW^XLFDT,"T"),":",1,2)
"RTN","DGPFRPI2",43,0)
 S DGBEG=$$FDATE^VALM1(DGSORT("DGBEG"))
"RTN","DGPFRPI2",44,0)
 S DGEND=$$FDATE^VALM1(DGSORT("DGEND"))
"RTN","DGPFRPI2",45,0)
 S (DGQ,DGPAGE)=0,$P(DGLINE,"-",81)=""
"RTN","DGPFRPI2",46,0)
 ;
"RTN","DGPFRPI2",47,0)
 I $O(@DGLIST@(""))="" D  Q
"RTN","DGPFRPI2",48,0)
 . D HEAD
"RTN","DGPFRPI2",49,0)
 . W !!,"   >>> No Record Flag Assignments were found using the report criteria.",!
"RTN","DGPFRPI2",50,0)
 ;
"RTN","DGPFRPI2",51,0)
 ; loop and print report
"RTN","DGPFRPI2",52,0)
 S (DGDFN,DGFG,DGLN,DGPISTR,DGPNAM,DGODFN,DGOFG,DGOPISTR,DGSTR)=""
"RTN","DGPFRPI2",53,0)
 ;
"RTN","DGPFRPI2",54,0)
 D HEAD
"RTN","DGPFRPI2",55,0)
 F  S DGFG=$O(@DGLIST@(DGFG)) Q:DGFG=""  D  Q:DGQ
"RTN","DGPFRPI2",56,0)
 . S DGPISTR=$$PISTR(DGFG)
"RTN","DGPFRPI2",57,0)
 . I $Y>(IOSL-10) D PAUSE(.DGQ) Q:DGQ  D HEAD,HEAD1,HEAD2,HEAD3 S DGOFG=DGFG,DGOPISTR=DGPISTR
"RTN","DGPFRPI2",58,0)
 . I DGOFG'=DGFG D
"RTN","DGPFRPI2",59,0)
 . . W:DGOPISTR]"" !! D HEAD1,HEAD2,HEAD3 S DGOFG=DGFG,DGOPISTR=DGPISTR
"RTN","DGPFRPI2",60,0)
 . S DGPNAM=0  ;starts looping after "0" princ invest node
"RTN","DGPFRPI2",61,0)
 . F  S DGPNAM=$O(@DGLIST@(DGFG,DGPNAM)) Q:DGPNAM=""  D  Q:DGQ
"RTN","DGPFRPI2",62,0)
 . . ; print patient detail line
"RTN","DGPFRPI2",63,0)
 . . S DGODFN=""
"RTN","DGPFRPI2",64,0)
 . . F  S DGDFN=$O(@DGLIST@(DGFG,DGPNAM,DGDFN)) Q:DGDFN=""  D  Q:DGQ
"RTN","DGPFRPI2",65,0)
 . . . S DGLN=""
"RTN","DGPFRPI2",66,0)
 . . . F  S DGLN=$O(@DGLIST@(DGFG,DGPNAM,DGDFN,DGLN)) Q:DGLN=""  D  Q:DGQ
"RTN","DGPFRPI2",67,0)
 . . . . I $Y>(IOSL-3) D PAUSE(.DGQ) Q:DGQ  D HEAD,HEAD1,HEAD2,HEAD3 S DGODFN=""
"RTN","DGPFRPI2",68,0)
 . . . . S DGSTR=$G(@DGLIST@(DGFG,DGPNAM,DGDFN,DGLN))
"RTN","DGPFRPI2",69,0)
 . . . . W !
"RTN","DGPFRPI2",70,0)
 . . . . I DGODFN'=DGDFN S DGODFN=DGDFN D  ;only print name once
"RTN","DGPFRPI2",71,0)
 . . . . . W $E(DGPNAM,1,16),?18,$P(DGSTR,U)
"RTN","DGPFRPI2",72,0)
 . . . . W ?30,$P(DGSTR,U,2),?48,$P(DGSTR,U,3),?60,$P(DGSTR,U,4),?71,$P(DGSTR,U,5)
"RTN","DGPFRPI2",73,0)
 ;
"RTN","DGPFRPI2",74,0)
 ;Shutdown if stop task requested
"RTN","DGPFRPI2",75,0)
 I DGQ W:$D(ZTQUEUED) !!,"REPORT STOPPED AT USER REQUEST" Q
"RTN","DGPFRPI2",76,0)
 ;
"RTN","DGPFRPI2",77,0)
 W !!,"<End of Report>"
"RTN","DGPFRPI2",78,0)
 Q
"RTN","DGPFRPI2",79,0)
 ;
"RTN","DGPFRPI2",80,0)
PAUSE(DGQ) ; pause screen display
"RTN","DGPFRPI2",81,0)
 ;  Input: 
"RTN","DGPFRPI2",82,0)
 ;      DGQ - var used to quit report processing to user CRT
"RTN","DGPFRPI2",83,0)
 ; Output:
"RTN","DGPFRPI2",84,0)
 ;      DGQ - passed by reference - 0 = Continue, 1 = Quit
"RTN","DGPFRPI2",85,0)
 ;
"RTN","DGPFRPI2",86,0)
 I $G(DGPAGE)>0,$E(IOST,1,2)="C-" K DIR S DIR(0)="E" D ^DIR K DIR S:+Y=0 DGQ=1
"RTN","DGPFRPI2",87,0)
 Q
"RTN","DGPFRPI2",88,0)
 ;
"RTN","DGPFRPI2",89,0)
HEAD ;Print/Display page header
"RTN","DGPFRPI2",90,0)
 ;
"RTN","DGPFRPI2",91,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S (ZTSTOP,DGQ)=1 Q
"RTN","DGPFRPI2",92,0)
 W:'($E(IOST,1,2)'="C-"&'DGPAGE) @IOF
"RTN","DGPFRPI2",93,0)
 ;
"RTN","DGPFRPI2",94,0)
 S DGPAGE=$G(DGPAGE)+1
"RTN","DGPFRPI2",95,0)
 W !?(IOM/2)-($L(DGHSTR)/2),DGHSTR
"RTN","DGPFRPI2",96,0)
 W !?(IOM/2)-($L(DGHSTR1)/2),DGHSTR1
"RTN","DGPFRPI2",97,0)
 W ?68,"Page: ",$G(DGPAGE)
"RTN","DGPFRPI2",98,0)
 W !,"Date Range: ",DGBEG_" to "_DGEND
"RTN","DGPFRPI2",99,0)
 W ?50,"Printed: ",DGDT
"RTN","DGPFRPI2",100,0)
 W !,"Sorted By: ",DGHSTR2
"RTN","DGPFRPI2",101,0)
 W !,DGLINE,!
"RTN","DGPFRPI2",102,0)
 Q
"RTN","DGPFRPI2",103,0)
 ;
"RTN","DGPFRPI2",104,0)
HEAD1 W !,"Flag Name: ",$G(DGFG)," - Category II (Local)"
"RTN","DGPFRPI2",105,0)
 Q
"RTN","DGPFRPI2",106,0)
 ;
"RTN","DGPFRPI2",107,0)
HEAD2 W !,"Principal Investigator: "
"RTN","DGPFRPI2",108,0)
 ;    <---- length = 24 ----->
"RTN","DGPFRPI2",109,0)
 ; check string length so we don't wrap on screen/printer (80) max
"RTN","DGPFRPI2",110,0)
 I $L(DGPISTR)'>55 W ?24,DGPISTR
"RTN","DGPFRPI2",111,0)
 E  D
"RTN","DGPFRPI2",112,0)
 . N X,Y
"RTN","DGPFRPI2",113,0)
 . S X=""
"RTN","DGPFRPI2",114,0)
 . F Y=1:1:$L(DGPISTR,"; ") D
"RTN","DGPFRPI2",115,0)
 . . I $L(X_$P(DGPISTR,"; ",Y))>53 W ?24,X,";" S X="" W !
"RTN","DGPFRPI2",116,0)
 . . S:X]"" X=X_"; "
"RTN","DGPFRPI2",117,0)
 . . S X=X_$P(DGPISTR,"; ",Y)
"RTN","DGPFRPI2",118,0)
 . W ?24,X
"RTN","DGPFRPI2",119,0)
 Q
"RTN","DGPFRPI2",120,0)
 ;
"RTN","DGPFRPI2",121,0)
HEAD3 W !!,"PATIENT",?18,"SSN",?30,"ACTION",?48,"ACTION DT",?60,"REVIEW DT",?71,"STATUS"
"RTN","DGPFRPI2",122,0)
 W !,"================",?18,"==========",?30,"================",?48,"=========",?60,"=========",?71,"========="
"RTN","DGPFRPI2",123,0)
 Q
"RTN","DGPFRPI2",124,0)
 ;
"RTN","DGPFRPI2",125,0)
PISTR(DGFG) ;string Principal Investigators together for sub-header display
"RTN","DGPFRPI2",126,0)
 ;
"RTN","DGPFRPI2",127,0)
 ;  Input:
"RTN","DGPFRPI2",128,0)
 ;      DGFG - flag name subscript
"RTN","DGPFRPI2",129,0)
 ;
"RTN","DGPFRPI2",130,0)
 ; Output:
"RTN","DGPFRPI2",131,0)
 ;  Function Value - string of Principal Investigator names
"RTN","DGPFRPI2",132,0)
 ;     i.e. -  "Johnny Cash; Bob Smith; Pete Best; ect..."
"RTN","DGPFRPI2",133,0)
 ;
"RTN","DGPFRPI2",134,0)
 N DGRSLT   ;returned function value
"RTN","DGPFRPI2",135,0)
 N DGPI     ;principal investigator person ien
"RTN","DGPFRPI2",136,0)
 S DGRSLT=""
"RTN","DGPFRPI2",137,0)
 ;
"RTN","DGPFRPI2",138,0)
 I $O(@DGLIST@(DGFG,0,""))="" D
"RTN","DGPFRPI2",139,0)
 . S DGRSLT="No Principal Investigator names on file"
"RTN","DGPFRPI2",140,0)
 ;
"RTN","DGPFRPI2",141,0)
 I $O(@DGLIST@(DGFG,0,"")) D
"RTN","DGPFRPI2",142,0)
 . S DGPI=""
"RTN","DGPFRPI2",143,0)
 . F  S DGPI=$O(@DGLIST@(DGFG,0,DGPI)) Q:DGPI=""  D  Q:$L(DGRSLT)>450
"RTN","DGPFRPI2",144,0)
 . . S:DGRSLT]"" DGRSLT=DGRSLT_"; "
"RTN","DGPFRPI2",145,0)
 . . S DGRSLT=DGRSLT_$G(@DGLIST@(DGFG,0,DGPI))
"RTN","DGPFRPI2",146,0)
 Q DGRSLT
"RTN","DGPFUT")
0^37^B25945716
"RTN","DGPFUT",1,0)
DGPFUT ;ALB/RPM - PRF UTILITIES ; 5/20/04 1:26pm
"RTN","DGPFUT",2,0)
 ;;5.3;Registration;**425,554**;Aug 13, 1993
"RTN","DGPFUT",3,0)
 ;
"RTN","DGPFUT",4,0)
 Q   ;no direct entry
"RTN","DGPFUT",5,0)
 ;
"RTN","DGPFUT",6,0)
ANSWER(DGDIRA,DGDIRB,DGDIR0,DGDIRH,DGDIRS)   ;wrap FileMan Classic Reader call
"RTN","DGPFUT",7,0)
 ;
"RTN","DGPFUT",8,0)
 ;  Input
"RTN","DGPFUT",9,0)
 ;    DGDIR0 - DIR(0) string
"RTN","DGPFUT",10,0)
 ;    DGDIRA - DIR("A") string
"RTN","DGPFUT",11,0)
 ;    DGDIRB - DIR("B") string
"RTN","DGPFUT",12,0)
 ;    DGDIRH - DIR("?") string
"RTN","DGPFUT",13,0)
 ;    DGDIRS - DIR("S") string
"RTN","DGPFUT",14,0)
 ;
"RTN","DGPFUT",15,0)
 ;  Output
"RTN","DGPFUT",16,0)
 ;   Function Value - Internal value returned from ^DIR or -1 if user
"RTN","DGPFUT",17,0)
 ;                    up-arrows, double up-arrows or the read times out.
"RTN","DGPFUT",18,0)
 ;
"RTN","DGPFUT",19,0)
 ;          DIR(0) type      Results
"RTN","DGPFUT",20,0)
 ;          ------------     -------------------------------
"RTN","DGPFUT",21,0)
 ;          DD               IEN of selected entry
"RTN","DGPFUT",22,0)
 ;          Pointer          IEN of selected entry
"RTN","DGPFUT",23,0)
 ;          Set of Codes     Internal value of code
"RTN","DGPFUT",24,0)
 ;          Yes/No           0 for No, 1 for Yes
"RTN","DGPFUT",25,0)
 ;
"RTN","DGPFUT",26,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y  ;^DIR variables
"RTN","DGPFUT",27,0)
 ;
"RTN","DGPFUT",28,0)
 S DIR(0)=DGDIR0
"RTN","DGPFUT",29,0)
 S DIR("A")=$G(DGDIRA)
"RTN","DGPFUT",30,0)
 I $G(DGDIRB)]"" S DIR("B")=DGDIRB
"RTN","DGPFUT",31,0)
 I $D(DGDIRH) S DIR("?")=DGDIRH
"RTN","DGPFUT",32,0)
 I $G(DGDIRS)]"" S DIR("S")=DGDIRS
"RTN","DGPFUT",33,0)
 D ^DIR
"RTN","DGPFUT",34,0)
 Q $S($D(DUOUT):-1,$D(DTOUT):-1,$D(DIROUT):-1,X="@":"@",1:$P(Y,U))
"RTN","DGPFUT",35,0)
 ;
"RTN","DGPFUT",36,0)
CONTINUE() ;pause display
"RTN","DGPFUT",37,0)
 ;
"RTN","DGPFUT",38,0)
 ;  Input:  none
"RTN","DGPFUT",39,0)
 ;
"RTN","DGPFUT",40,0)
 ;  Output:  1 - continue
"RTN","DGPFUT",41,0)
 ;           0 - quit
"RTN","DGPFUT",42,0)
 ;
"RTN","DGPFUT",43,0)
 N DIR,Y
"RTN","DGPFUT",44,0)
 S DIR(0)="E" D ^DIR
"RTN","DGPFUT",45,0)
 Q $S(Y'=1:0,1:1)
"RTN","DGPFUT",46,0)
 ;
"RTN","DGPFUT",47,0)
VALID(DGRTN,DGFILE,DGIP,DGERR) ;validate input values before filing
"RTN","DGPFUT",48,0)
 ;
"RTN","DGPFUT",49,0)
 ;  Input:
"RTN","DGPFUT",50,0)
 ;    DGRTN - (required) Routine name that contains $TEXT table
"RTN","DGPFUT",51,0)
 ;   DGFILE - (required) File number for input values
"RTN","DGPFUT",52,0)
 ;     DGIP - (required) Input value array
"RTN","DGPFUT",53,0)
 ;    DGERR - (optional) Returns error message passed by reference
"RTN","DGPFUT",54,0)
 ;
"RTN","DGPFUT",55,0)
 ;  Output:
"RTN","DGPFUT",56,0)
 ;   Function Value - Returns 1 on all values valid, 0 on failure
"RTN","DGPFUT",57,0)
 ;
"RTN","DGPFUT",58,0)
 I $G(DGRTN)=""!('$G(DGFILE)) Q 0
"RTN","DGPFUT",59,0)
 N DGVLD   ;function return value
"RTN","DGPFUT",60,0)
 N DGFXR   ;node name to field xref array
"RTN","DGPFUT",61,0)
 N DGREQ   ;array of required fields
"RTN","DGPFUT",62,0)
 N DGWP    ;word processing flag
"RTN","DGPFUT",63,0)
 N DGN     ;array node name
"RTN","DGPFUT",64,0)
 ;
"RTN","DGPFUT",65,0)
 S DGVLD=1
"RTN","DGPFUT",66,0)
 S DGN=""
"RTN","DGPFUT",67,0)
 D BLDXR(DGRTN,.DGFXR)
"RTN","DGPFUT",68,0)
 ;
"RTN","DGPFUT",69,0)
 F  S DGN=$O(DGFXR(DGN)) Q:DGN=""  D  Q:'DGVLD
"RTN","DGPFUT",70,0)
 . S DGREQ=$P(DGFXR(DGN),U,2)
"RTN","DGPFUT",71,0)
 . S DGWP=$P(DGFXR(DGN),U,3)
"RTN","DGPFUT",72,0)
 . I DGREQ D   ;required field check
"RTN","DGPFUT",73,0)
 . . I DGWP,'$$CKWP("DGIP(DGN)") S DGVLD=0 Q
"RTN","DGPFUT",74,0)
 . . I 'DGWP,$G(DGIP(DGN))']"" S DGVLD=0 Q
"RTN","DGPFUT",75,0)
 . I 'DGVLD D  Q
"RTN","DGPFUT",76,0)
 . . S DGERR=$$GET1^DID(DGFILE,+DGFXR(DGN),,"LABEL")_" REQUIRED"
"RTN","DGPFUT",77,0)
 . Q:DGWP  ;don't check word processing fields for invalid values
"RTN","DGPFUT",78,0)
 . ;check for invalid values
"RTN","DGPFUT",79,0)
 . I '$$TESTVAL(DGFILE,+DGFXR(DGN),$P($G(DGIP(DGN)),U)) D  Q
"RTN","DGPFUT",80,0)
 . . S DGVLD=0,DGERR=$$GET1^DID(DGFILE,+DGFXR(DGN),,"LABEL")_" NOT VALID"
"RTN","DGPFUT",81,0)
 Q DGVLD
"RTN","DGPFUT",82,0)
 ;
"RTN","DGPFUT",83,0)
BLDXR(DGRTN,DGFLDA) ;build name/field xref array
"RTN","DGPFUT",84,0)
 ;This procedure reads in the text from the XREF line tag of the DGRTN
"RTN","DGPFUT",85,0)
 ;input parameter and loads name/field xref array with parsed line data.
"RTN","DGPFUT",86,0)
 ;
"RTN","DGPFUT",87,0)
 ;  Input:
"RTN","DGPFUT",88,0)
 ;    DGRTN - (required) Routine name that contains the XREF line tag
"RTN","DGPFUT",89,0)
 ;   DGFLDA - (required) Array name for name/field xref passed by
"RTN","DGPFUT",90,0)
 ;            reference
"RTN","DGPFUT",91,0)
 ;
"RTN","DGPFUT",92,0)
 ;  Output:
"RTN","DGPFUT",93,0)
 ;   Function Value - Returns 1 on success, 0 on failure
"RTN","DGPFUT",94,0)
 ;           DGFLDA - Name/field xref array
"RTN","DGPFUT",95,0)
 ;                  format: DGFLDA(subscript)=field#^required?^word proc?
"RTN","DGPFUT",96,0)
 ;
"RTN","DGPFUT",97,0)
 S DGRTN=$G(DGRTN)
"RTN","DGPFUT",98,0)
 Q:DGRTN=""
"RTN","DGPFUT",99,0)
 I $E(DGRTN,1)'="^" S DGRTN="^"_DGRTN
"RTN","DGPFUT",100,0)
 Q:($T(@DGRTN)="")
"RTN","DGPFUT",101,0)
 N DGTAG
"RTN","DGPFUT",102,0)
 N DGOFF
"RTN","DGPFUT",103,0)
 N DGLINE
"RTN","DGPFUT",104,0)
 ;
"RTN","DGPFUT",105,0)
 F DGOFF=1:1 S DGTAG="XREF+"_DGOFF_DGRTN,DGLINE=$T(@DGTAG) Q:DGLINE=""  D
"RTN","DGPFUT",106,0)
 . S DGFLDA($P(DGLINE,";",3))=$P(DGLINE,";",4)_U_+$P(DGLINE,";",5)_U_+$P(DGLINE,";",6)
"RTN","DGPFUT",107,0)
 Q
"RTN","DGPFUT",108,0)
 ;
"RTN","DGPFUT",109,0)
CKWP(DGROOT) ;ck word processing required fields
"RTN","DGPFUT",110,0)
 ;This function verifies that at least one line in the word processing
"RTN","DGPFUT",111,0)
 ;array contains text more than one space long.
"RTN","DGPFUT",112,0)
 ;
"RTN","DGPFUT",113,0)
 ;  Input:
"RTN","DGPFUT",114,0)
 ;    DGROOT - (required) Word processing root
"RTN","DGPFUT",115,0)
 ;
"RTN","DGPFUT",116,0)
 ;  Output:
"RTN","DGPFUT",117,0)
 ;   Function Value - Returns 1 on success, 0 on failure
"RTN","DGPFUT",118,0)
 ;
"RTN","DGPFUT",119,0)
 N DGLIN
"RTN","DGPFUT",120,0)
 N DGRSLT
"RTN","DGPFUT",121,0)
 S DGRSLT=0
"RTN","DGPFUT",122,0)
 I $D(@DGROOT) D
"RTN","DGPFUT",123,0)
 . S DGLIN=""
"RTN","DGPFUT",124,0)
 . F  S DGLIN=$O(@DGROOT@(DGLIN)) Q:DGLIN=""  D  Q:DGRSLT
"RTN","DGPFUT",125,0)
 . . I $G(@DGROOT@(DGLIN,0))]"",@DGROOT@(DGLIN,0)'=" " S DGRSLT=1
"RTN","DGPFUT",126,0)
 Q DGRSLT
"RTN","DGPFUT",127,0)
 ;
"RTN","DGPFUT",128,0)
TESTVAL(DGFIL,DGFLD,DGVAL) ;validate individual value against field def
"RTN","DGPFUT",129,0)
 ;
"RTN","DGPFUT",130,0)
 ;  Input:
"RTN","DGPFUT",131,0)
 ;    DGFIL - (required) File number
"RTN","DGPFUT",132,0)
 ;    DGFLD - (required) Field number
"RTN","DGPFUT",133,0)
 ;    DGVAL - (required) Field value to be validated
"RTN","DGPFUT",134,0)
 ;
"RTN","DGPFUT",135,0)
 ;  Output:
"RTN","DGPFUT",136,0)
 ;   Function Value - Returns 1 if value is valid, 0 if value is invalid
"RTN","DGPFUT",137,0)
 ;
"RTN","DGPFUT",138,0)
 N DGVALEX  ;external value after conversion
"RTN","DGPFUT",139,0)
 N DGTYP    ;field type
"RTN","DGPFUT",140,0)
 N DGRSLT   ;results of CHK^DIE
"RTN","DGPFUT",141,0)
 N VALID    ;function results
"RTN","DGPFUT",142,0)
 ;
"RTN","DGPFUT",143,0)
 S VALID=1
"RTN","DGPFUT",144,0)
 I $G(DGFIL)>0,($G(DGFLD)>0),($G(DGVAL)'="") D
"RTN","DGPFUT",145,0)
 . S DGVALEX=$$EXTERNAL^DILFD(DGFIL,DGFLD,"F",DGVAL)
"RTN","DGPFUT",146,0)
 . I DGVALEX="" S VALID=0 Q
"RTN","DGPFUT",147,0)
 . I $$GET1^DID(DGFIL,DGFLD,"","TYPE")'["POINTER" D
"RTN","DGPFUT",148,0)
 . . D CHK^DIE(DGFIL,DGFLD,,DGVALEX,.DGRSLT) I DGRSLT="^" S VALID=0 Q
"RTN","DGPFUT",149,0)
 Q VALID
"RTN","DGPFUT",150,0)
 ;
"RTN","DGPFUT",151,0)
STATUS(DGACT) ;calculate the assignment STATUS given an ACTION code
"RTN","DGPFUT",152,0)
 ;
"RTN","DGPFUT",153,0)
 ;  Input:
"RTN","DGPFUT",154,0)
 ;    DGACT - (required) Action (.03) field value for PRF ASSIGNMENT
"RTN","DGPFUT",155,0)
 ;            HISTORY (#26.14) file in internal or external format
"RTN","DGPFUT",156,0)
 ;
"RTN","DGPFUT",157,0)
 ;  Output:
"RTN","DGPFUT",158,0)
 ;   Function Value - Status value on success, -1 on failure
"RTN","DGPFUT",159,0)
 ;
"RTN","DGPFUT",160,0)
 N DGERR   ;FM message root
"RTN","DGPFUT",161,0)
 N DGRSLT  ;CHK^DIE result array
"RTN","DGPFUT",162,0)
 N DGSTAT  ;calculated status value
"RTN","DGPFUT",163,0)
 ;
"RTN","DGPFUT",164,0)
 S DGSTAT=-1
"RTN","DGPFUT",165,0)
 I $G(DGACT)]"" D
"RTN","DGPFUT",166,0)
 . I DGACT?1.N S DGACT=$$EXTERNAL^DILFD(26.14,.03,"F",DGACT,"DGERR")
"RTN","DGPFUT",167,0)
 . Q:$D(DGERR)
"RTN","DGPFUT",168,0)
 . D CHK^DIE(26.14,.03,"E",DGACT,.DGRSLT,"DGERR")
"RTN","DGPFUT",169,0)
 . Q:$D(DGERR)
"RTN","DGPFUT",170,0)
 . I DGRSLT(0)="INACTIVATE"!(DGRSLT(0)="ENTERED IN ERROR") S DGSTAT=0
"RTN","DGPFUT",171,0)
 . E  S DGSTAT=1
"RTN","DGPFUT",172,0)
 Q DGSTAT
"RTN","DGPFUT",173,0)
 ;
"RTN","DGPFUT",174,0)
MPIOK(DGDFN,DGICN,DGCMOR) ;return non-local CMOR and ICN
"RTN","DGPFUT",175,0)
 ;This function retrieves an ICN given a pointer to the PATIENT (#2) file
"RTN","DGPFUT",176,0)
 ;for a patient.  When the ICN is not local and the local site is not the
"RTN","DGPFUT",177,0)
 ;Coordinating Master of Record (CMOR), the CMOR is retrieved as a
"RTN","DGPFUT",178,0)
 ;pointer to the INSTITUTION (#4) file.
"RTN","DGPFUT",179,0)
 ; 
"RTN","DGPFUT",180,0)
 ;  Supported DBIA #2701:  The supported DBIA is used to access MPI
"RTN","DGPFUT",181,0)
 ;                         APIs to retrieve ICN, determine if ICN
"RTN","DGPFUT",182,0)
 ;                         is local and if site is CMOR.
"RTN","DGPFUT",183,0)
 ;  Supported DBIA #2702:  The supported DBIA is used to retrieve the
"RTN","DGPFUT",184,0)
 ;                         MPI node from the PATIENT (#2) file.
"RTN","DGPFUT",185,0)
 ;
"RTN","DGPFUT",186,0)
 ;  Input:
"RTN","DGPFUT",187,0)
 ;    DGDFN - IEN of patient in PATIENT (#2) file
"RTN","DGPFUT",188,0)
 ;    DGICN - passed by reference to contain national ICN
"RTN","DGPFUT",189,0)
 ;   DGCMOR - passed by reference to contain CMOR
"RTN","DGPFUT",190,0)
 ;
"RTN","DGPFUT",191,0)
 ;  Output:
"RTN","DGPFUT",192,0)
 ;   Function Value - 1 on national ICN and non-local CMOR, 0 on failure
"RTN","DGPFUT",193,0)
 ;            DGICN - Patient's Integrated Control Number
"RTN","DGPFUT",194,0)
 ;           DGCMOR - Pointer to INSTITUTION (#4) file for CMOR if CMOR
"RTN","DGPFUT",195,0)
 ;                    is not local, undefined otherwise.
"RTN","DGPFUT",196,0)
 ;
"RTN","DGPFUT",197,0)
 N DGRSLT
"RTN","DGPFUT",198,0)
 S DGRSLT=0
"RTN","DGPFUT",199,0)
 I $G(DGDFN)>0,$D(^DPT(DGDFN,"MPI")) D
"RTN","DGPFUT",200,0)
 . S DGICN=$$GETICN^MPIF001(DGDFN)
"RTN","DGPFUT",201,0)
 . ;
"RTN","DGPFUT",202,0)
 . ;ICN must be valid
"RTN","DGPFUT",203,0)
 . Q:(DGICN'>0)
"RTN","DGPFUT",204,0)
 . ;
"RTN","DGPFUT",205,0)
 . ;ICN must not be local
"RTN","DGPFUT",206,0)
 . Q:$$IFLOCAL^MPIF001(DGDFN)
"RTN","DGPFUT",207,0)
 . ;
"RTN","DGPFUT",208,0)
 . ;local site must not be CMOR site
"RTN","DGPFUT",209,0)
 . Q:($$IFVCCI^MPIF001(DGDFN)=1)
"RTN","DGPFUT",210,0)
 . ;
"RTN","DGPFUT",211,0)
 . ;get CMOR institution number
"RTN","DGPFUT",212,0)
 . S DGCMOR=$P($$MPINODE^MPIFAPI(DGDFN),U,3)
"RTN","DGPFUT",213,0)
 . Q:(DGCMOR'>0)
"RTN","DGPFUT",214,0)
 . ;
"RTN","DGPFUT",215,0)
 . S DGRSLT=1
"RTN","DGPFUT",216,0)
 Q DGRSLT
"RTN","DGPFUT2")
0^38^B35502181
"RTN","DGPFUT2",1,0)
DGPFUT2 ;ALB/KCL - PRF UTILITIES CONTINUED ; 12/17/03 2:56pm
"RTN","DGPFUT2",2,0)
 ;;5.3;Registration;**425,554**;Aug 13, 1993
"RTN","DGPFUT2",3,0)
 ;
"RTN","DGPFUT2",4,0)
 ; This routine contains generic calls for use throughout DGPF*.
"RTN","DGPFUT2",5,0)
 ;
"RTN","DGPFUT2",6,0)
 ;- no direct entry
"RTN","DGPFUT2",7,0)
 QUIT
"RTN","DGPFUT2",8,0)
 ;
"RTN","DGPFUT2",9,0)
 ;
"RTN","DGPFUT2",10,0)
GETPAT(DGDFN,DGPAT) ;retrieve patient identifying information
"RTN","DGPFUT2",11,0)
 ; Used to obtain identifying information for a patient
"RTN","DGPFUT2",12,0)
 ; in the PATIENT (#2) file and place it in an array format.
"RTN","DGPFUT2",13,0)
 ;
"RTN","DGPFUT2",14,0)
 ; NOTE: Direct global reference of patient's zero node in the
"RTN","DGPFUT2",15,0)
 ;       PATIENT (#2) file is supported by DBIA #10035
"RTN","DGPFUT2",16,0)
 ;
"RTN","DGPFUT2",17,0)
 ;  Input:
"RTN","DGPFUT2",18,0)
 ;   DGDFN - (required) ien of patient in PATIENT (#2) file
"RTN","DGPFUT2",19,0)
 ;
"RTN","DGPFUT2",20,0)
 ; Output:
"RTN","DGPFUT2",21,0)
 ;  Function Value - returns 1 on success, 0 on failure
"RTN","DGPFUT2",22,0)
 ;   DGPAT - output array containing the patient identifying information,
"RTN","DGPFUT2",23,0)
 ;           on success, pass by reference.
"RTN","DGPFUT2",24,0)
 ;             Array subscripts are:
"RTN","DGPFUT2",25,0)
 ;             "DFN"  - ien PATIENT (#2) file
"RTN","DGPFUT2",26,0)
 ;             "NAME" - patient name
"RTN","DGPFUT2",27,0)
 ;             "SSN"  - patient Social Security Number
"RTN","DGPFUT2",28,0)
 ;             "DOB"  - patient date of birth (FM format)
"RTN","DGPFUT2",29,0)
 ;             "SEX"  - patient sex
"RTN","DGPFUT2",30,0)
 ;
"RTN","DGPFUT2",31,0)
 N DGNODE
"RTN","DGPFUT2",32,0)
 N RESULT
"RTN","DGPFUT2",33,0)
 ;
"RTN","DGPFUT2",34,0)
 S RESULT=0
"RTN","DGPFUT2",35,0)
 ;
"RTN","DGPFUT2",36,0)
 I $G(DGDFN)>0,$D(^DPT(DGDFN,0)) D
"RTN","DGPFUT2",37,0)
 .
"RTN","DGPFUT2",38,0)
 . ;-- obtain zero node of patient record (supported by DBIA #10035)
"RTN","DGPFUT2",39,0)
 . S DGNODE=$G(^DPT(DGDFN,0))
"RTN","DGPFUT2",40,0)
 . ;
"RTN","DGPFUT2",41,0)
 . S DGPAT("DFN")=DGDFN
"RTN","DGPFUT2",42,0)
 . S DGPAT("NAME")=$P(DGNODE,"^")
"RTN","DGPFUT2",43,0)
 . S DGPAT("SEX")=$P(DGNODE,"^",2)
"RTN","DGPFUT2",44,0)
 . S DGPAT("DOB")=$P(DGNODE,"^",3)
"RTN","DGPFUT2",45,0)
 . S DGPAT("SSN")=$P(DGNODE,"^",9)
"RTN","DGPFUT2",46,0)
 . S RESULT=1  ;success
"RTN","DGPFUT2",47,0)
 ;
"RTN","DGPFUT2",48,0)
 Q RESULT
"RTN","DGPFUT2",49,0)
 ;
"RTN","DGPFUT2",50,0)
GETDFN(DGICN,DGDOB,DGSSN) ;Convert ICN to DFN after verifying DOB and SSN
"RTN","DGPFUT2",51,0)
 ;
"RTN","DGPFUT2",52,0)
 ;  Supported DBIA #2701:  The supported DBIA is used to retrieve the
"RTN","DGPFUT2",53,0)
 ;                         pointer (DFN) to the PATIENT (#2) file for a
"RTN","DGPFUT2",54,0)
 ;                         given ICN.
"RTN","DGPFUT2",55,0)
 ;
"RTN","DGPFUT2",56,0)
 ;  Input:
"RTN","DGPFUT2",57,0)
 ;    DGICN - Integrated Control Number with or without checksum
"RTN","DGPFUT2",58,0)
 ;    DGDOB - Date of Birth in FileMan format
"RTN","DGPFUT2",59,0)
 ;    DGSSN - Social Security Number with no delimiters
"RTN","DGPFUT2",60,0)
 ;
"RTN","DGPFUT2",61,0)
 ;  Output:
"RTN","DGPFUT2",62,0)
 ;   Function Value - DFN on success, 0 on failure
"RTN","DGPFUT2",63,0)
 ;
"RTN","DGPFUT2",64,0)
 N DGDFN   ;pointer to patient
"RTN","DGPFUT2",65,0)
 N DGDPT   ;patient data array
"RTN","DGPFUT2",66,0)
 N DGRSLT  ;function value
"RTN","DGPFUT2",67,0)
 ;
"RTN","DGPFUT2",68,0)
 S DGRSLT=0
"RTN","DGPFUT2",69,0)
 S DGICN=+$G(DGICN)
"RTN","DGPFUT2",70,0)
 S DGDOB=+$G(DGDOB)
"RTN","DGPFUT2",71,0)
 S DGSSN=+$G(DGSSN)
"RTN","DGPFUT2",72,0)
 I DGICN,DGDOB,DGSSN D  ;drops out of block on first failure
"RTN","DGPFUT2",73,0)
 . S DGDFN=+$$GETDFN^MPIF001(DGICN)
"RTN","DGPFUT2",74,0)
 . Q:(DGDFN'>0)
"RTN","DGPFUT2",75,0)
 . Q:('$$GETPAT^DGPFUT2(DGDFN,.DGDPT))
"RTN","DGPFUT2",76,0)
 . Q:(DGDOB'=+DGDPT("DOB"))
"RTN","DGPFUT2",77,0)
 . Q:(DGSSN'=+DGDPT("SSN"))
"RTN","DGPFUT2",78,0)
 . S DGRSLT=DGDFN
"RTN","DGPFUT2",79,0)
 Q DGRSLT
"RTN","DGPFUT2",80,0)
 ;
"RTN","DGPFUT2",81,0)
SORT(DGPFARR) ;Re-sort of active record assignments by category then flag name
"RTN","DGPFUT2",82,0)
 ; This function re-sorts the active record flag assignment list for a
"RTN","DGPFUT2",83,0)
 ; patient by category (Cat I or Cat II) and then by flag name.
"RTN","DGPFUT2",84,0)
 ;
"RTN","DGPFUT2",85,0)
 ;  Input: [Required]
"RTN","DGPFUT2",86,0)
 ;    DGPFARR - Closed root reference array name of active assignments
"RTN","DGPFUT2",87,0)
 ;              to be sorted
"RTN","DGPFUT2",88,0)
 ;
"RTN","DGPFUT2",89,0)
 ;  Output:
"RTN","DGPFUT2",90,0)
 ;    Function Value - returns 1 on success, 0 on failure
"RTN","DGPFUT2",91,0)
 ;
"RTN","DGPFUT2",92,0)
 ;    DGPFARR() - Closed Root reference name of re-sorted assignments
"RTN","DGPFUT2",93,0)
 ;              - Category I's will sort first in the returned array.
"RTN","DGPFUT2",94,0)
 ;              - Category II's will sort second.
"RTN","DGPFUT2",95,0)
 ;
"RTN","DGPFUT2",96,0)
 N DGCAT   ;category
"RTN","DGPFUT2",97,0)
 N DGINDX  ;index array
"RTN","DGPFUT2",98,0)
 N DGNAME  ;flag name
"RTN","DGPFUT2",99,0)
 N DGSORT  ;re-sorted data array
"RTN","DGPFUT2",100,0)
 N DGX     ;generic counter
"RTN","DGPFUT2",101,0)
 ;
"RTN","DGPFUT2",102,0)
 ; check for input value - Quit if none found
"RTN","DGPFUT2",103,0)
 Q:DGPFARR']"" 0
"RTN","DGPFUT2",104,0)
 Q:'$O(@DGPFARR@("")) 0
"RTN","DGPFUT2",105,0)
 ;
"RTN","DGPFUT2",106,0)
 S DGSORT=$NA(^TMP("DGPFUT2",$J))
"RTN","DGPFUT2",107,0)
 K @DGSORT
"RTN","DGPFUT2",108,0)
 ;
"RTN","DGPFUT2",109,0)
 ;build index - ARRAY(Category (I or II),Flag Name)=sort number
"RTN","DGPFUT2",110,0)
 S DGX=0
"RTN","DGPFUT2",111,0)
 F  S DGX=$O(@DGPFARR@(DGX)) Q:'DGX  D
"RTN","DGPFUT2",112,0)
 . S DGCAT=$S($P(@DGPFARR@(DGX,"FLAG"),U)[26.11:2,1:1)
"RTN","DGPFUT2",113,0)
 . S DGINDX(DGCAT,$P(@DGPFARR@(DGX,"FLAG"),U,2))=DGX
"RTN","DGPFUT2",114,0)
 ;
"RTN","DGPFUT2",115,0)
 ;build sorted data array - 
"RTN","DGPFUT2",116,0)
 S (DGCAT,DGX)=0
"RTN","DGPFUT2",117,0)
 F  S DGCAT=$O(DGINDX(DGCAT)) Q:'DGCAT  D
"RTN","DGPFUT2",118,0)
 . S DGNAME=""
"RTN","DGPFUT2",119,0)
 . F  S DGNAME=$O(DGINDX(DGCAT,DGNAME)) Q:DGNAME=""  D
"RTN","DGPFUT2",120,0)
 . . S DGX=DGX+1
"RTN","DGPFUT2",121,0)
 . . M @DGSORT@(DGX)=@DGPFARR@(DGINDX(DGCAT,DGNAME))
"RTN","DGPFUT2",122,0)
 ;
"RTN","DGPFUT2",123,0)
 ;remove input array and replace with sorted array, kill sort array
"RTN","DGPFUT2",124,0)
 K @DGPFARR
"RTN","DGPFUT2",125,0)
 M @DGPFARR=@DGSORT
"RTN","DGPFUT2",126,0)
 K @DGSORT
"RTN","DGPFUT2",127,0)
 ;
"RTN","DGPFUT2",128,0)
 Q 1
"RTN","DGPFUT2",129,0)
 ;
"RTN","DGPFUT2",130,0)
ACTDT ; update PRF Software Activation Date field in (#26.18)
"RTN","DGPFUT2",131,0)
 ; This utility should only be run at the Alpha and Beta test sites
"RTN","DGPFUT2",132,0)
 ; of the Patient Record Flags Project, Patch DG*5.3*425.
"RTN","DGPFUT2",133,0)
 ; If necessary, this entry point will change the date that the
"RTN","DGPFUT2",134,0)
 ; Patient Record Flags (PRF) System became active.
"RTN","DGPFUT2",135,0)
 ; The (#1) PRF SOFTWARE ACTIVATION DATE field of the (#26.18) PRF
"RTN","DGPFUT2",136,0)
 ; PARAMETERS file, will be changed to:  SEP 25, 2003
"RTN","DGPFUT2",137,0)
 ;
"RTN","DGPFUT2",138,0)
 ;  Input:  none
"RTN","DGPFUT2",139,0)
 ;
"RTN","DGPFUT2",140,0)
 ; Output:  User message on successful or failure of file update
"RTN","DGPFUT2",141,0)
 ;
"RTN","DGPFUT2",142,0)
 N DGACTDT   ; Nationally Released Software Activation Date value
"RTN","DGPFUT2",143,0)
 N DGIENS    ; IEN - internal entry # OF (#26.18) FILE
"RTN","DGPFUT2",144,0)
 N DGFLD     ; PRF Software Activation Date field #
"RTN","DGPFUT2",145,0)
 N DGFDA     ; FDA data array for filer
"RTN","DGPFUT2",146,0)
 N DGERR     ; error message array returned from filer
"RTN","DGPFUT2",147,0)
 N DGERRMSG  ; error message for display
"RTN","DGPFUT2",148,0)
 N DGPARM    ; current internal/external values of field
"RTN","DGPFUT2",149,0)
 ;
"RTN","DGPFUT2",150,0)
 S DGACTDT="SEP 25, 2003"
"RTN","DGPFUT2",151,0)
 S DGIENS="1,"
"RTN","DGPFUT2",152,0)
 S DGFLD=1
"RTN","DGPFUT2",153,0)
 ;
"RTN","DGPFUT2",154,0)
 ; display user message
"RTN","DGPFUT2",155,0)
 W !!,"Updating the PRF SOFTWARE ACTIVATION DATE (#1) field in the PRF PARAMETERS FILE (#26.18) to the value of SEP 25, 2003..."
"RTN","DGPFUT2",156,0)
 ;
"RTN","DGPFUT2",157,0)
 ; checks for necessary programmer variables
"RTN","DGPFUT2",158,0)
 I '$G(DUZ)!($G(DUZ(0))'="@")!('$G(DT))!($G(U)'="^") D
"RTN","DGPFUT2",159,0)
 . S DGERRMSG="Your programming variables are not set up properly."
"RTN","DGPFUT2",160,0)
 ;
"RTN","DGPFUT2",161,0)
 ; check if activation is not less than the current date
"RTN","DGPFUT2",162,0)
 I '$D(DGERRMSG),DT<3030925 D
"RTN","DGPFUT2",163,0)
 . S DGERRMSG="This file/field update can't be run before the date of SEP 25, 2003 is reached."
"RTN","DGPFUT2",164,0)
 ;
"RTN","DGPFUT2",165,0)
 ; get current activation date from PRF PARAMETERS (#26.18) file
"RTN","DGPFUT2",166,0)
 I '$D(DGERRMSG) D
"RTN","DGPFUT2",167,0)
 . D GETS^DIQ(26.18,"1,",1,"IE","DGPARM","DGERR")
"RTN","DGPFUT2",168,0)
 . ;
"RTN","DGPFUT2",169,0)
 . ; check for errors and inform the user
"RTN","DGPFUT2",170,0)
 . I $D(DGERR) D  Q
"RTN","DGPFUT2",171,0)
 . . S DGERRMSG=$G(DGERR("DIERR",1,"TEXT",1))
"RTN","DGPFUT2",172,0)
 . ;
"RTN","DGPFUT2",173,0)
 . ; check to make sure field is not set already
"RTN","DGPFUT2",174,0)
 . I $G(DGPARM(26.18,"1,",1,"I"))=3030925 D
"RTN","DGPFUT2",175,0)
 . . S DGERRMSG="The date value is already set to SEP 25, 2003."
"RTN","DGPFUT2",176,0)
 ;
"RTN","DGPFUT2",177,0)
 ; now start the (#26.18) filing process
"RTN","DGPFUT2",178,0)
 I '$D(DGERRMSG) D
"RTN","DGPFUT2",179,0)
 . ;
"RTN","DGPFUT2",180,0)
 . ; DELETE activation date before filing since field is uneditable
"RTN","DGPFUT2",181,0)
 . S DGFDA(26.18,DGIENS,1)="@"
"RTN","DGPFUT2",182,0)
 . D FILE^DIE("","DGFDA","DGERR")
"RTN","DGPFUT2",183,0)
 . ;
"RTN","DGPFUT2",184,0)
 . ; check for errors and inform the user
"RTN","DGPFUT2",185,0)
 . I $D(DGERR) D  Q
"RTN","DGPFUT2",186,0)
 . . S DGERRMSG=$G(DGERR("DIERR",1,"TEXT",1))
"RTN","DGPFUT2",187,0)
 . ;
"RTN","DGPFUT2",188,0)
 . ; setup and file the new activation date value (external)
"RTN","DGPFUT2",189,0)
 . S DGFDA(26.18,DGIENS,1)=DGACTDT
"RTN","DGPFUT2",190,0)
 . D FILE^DIE("SE","DGFDA","DGERR")
"RTN","DGPFUT2",191,0)
 . ;
"RTN","DGPFUT2",192,0)
 . ; check for success or errors and inform the user of update status
"RTN","DGPFUT2",193,0)
 . I $D(DGERR) D  Q
"RTN","DGPFUT2",194,0)
 . . S DGERRMSG=$G(DGERR("DIERR",1,"TEXT",1))
"RTN","DGPFUT2",195,0)
 ;
"RTN","DGPFUT2",196,0)
 ; display successful/failure file update - updated field and value
"RTN","DGPFUT2",197,0)
 W !!,$C(7)
"RTN","DGPFUT2",198,0)
 I $D(DGERRMSG) D
"RTN","DGPFUT2",199,0)
 . W "Field could not be updated...",DGERRMSG
"RTN","DGPFUT2",200,0)
 E  D
"RTN","DGPFUT2",201,0)
 . W "Field was successfully changed from ",$G(DGPARM(26.18,"1,",1,"E"))," to ",$G(DGFDA(26.18,DGIENS,DGFLD)),"."
"RTN","DGPFUT2",202,0)
 ;
"RTN","DGPFUT2",203,0)
 Q
"RTN","DGPFUT3")
0^39^B35131526
"RTN","DGPFUT3",1,0)
DGPFUT3 ;ALB/SAE - PRF UTILITIES CONTINUED ; 6/9/04 5:06pm
"RTN","DGPFUT3",2,0)
 ;;5.3;Registration;**554**;Aug 13, 1993
"RTN","DGPFUT3",3,0)
 ;
"RTN","DGPFUT3",4,0)
 Q  ; no direct entry
"RTN","DGPFUT3",5,0)
 ;
"RTN","DGPFUT3",6,0)
REVIEW(DGPFDA,DGPFHX,DGPFIEN,DGPFOPT,DGPFACT) ; Entry point for review display
"RTN","DGPFUT3",7,0)
 ;
"RTN","DGPFUT3",8,0)
 ; This is the driver routine for redisplaying entry detail to the user
"RTN","DGPFUT3",9,0)
 ; for their review before filing a new or edited PRF Flag or PRF Flag
"RTN","DGPFUT3",10,0)
 ; Assignment record.
"RTN","DGPFUT3",11,0)
 ;
"RTN","DGPFUT3",12,0)
 ; This routine builds the temporary array which is then used to
"RTN","DGPFUT3",13,0)
 ; create the temporary global for review by the user.
"RTN","DGPFUT3",14,0)
 ;
"RTN","DGPFUT3",15,0)
 ; Called from the following options and actions:
"RTN","DGPFUT3",16,0)
 ; Option                    Action                       Calling Routine
"RTN","DGPFUT3",17,0)
 ; RECORD FLAG ASSIGNMENT    ASSIGN FLAG                  AF^DGPFLMA2
"RTN","DGPFUT3",18,0)
 ; RECORD FLAG ASSIGNMENT    EDIT FLAG ASSIGNMENT         EF^DGPFLMA3
"RTN","DGPFUT3",19,0)
 ; RECORD FLAG ASSIGNMENT    CHANGE ASSIGNMENT OWNERSHIP  CO^DGPFLMA4
"RTN","DGPFUT3",20,0)
 ; RECORD FLAG MANAGEMENT    ADD NEW RECORD FLAG          AF^DGPFLF3
"RTN","DGPFUT3",21,0)
 ; RECORD FLAG MANAGEMENT    EDIT RECORD FLAG             EF^DGPFLF5
"RTN","DGPFUT3",22,0)
 ;
"RTN","DGPFUT3",23,0)
 ; Input:
"RTN","DGPFUT3",24,0)
 ;   DGPFDA - data array
"RTN","DGPFUT3",25,0)
 ;        - derived from DGPFA  if called by Flag Assignment transaction
"RTN","DGPFUT3",26,0)
 ;        - derived from DGPFLF if called by Flag Management transaction
"RTN","DGPFUT3",27,0)
 ;   DGPFHX - history array
"RTN","DGPFUT3",28,0)
 ;        - derived from DGPFAH if called by Flag Assignment transaction
"RTN","DGPFUT3",29,0)
 ;        - derived from DGPFLH if called by Flag Management transaction
"RTN","DGPFUT3",30,0)
 ;   DGPFIEN - IEN of the Flag Assignment for EF and CO
"RTN","DGPFUT3",31,0)
 ;           - this will be null for all other calls to this routine
"RTN","DGPFUT3",32,0)
 ;   DGPFOPT - XQY0 variable for option name - used for headers
"RTN","DGPFUT3",33,0)
 ;   DGPFACT - XQORNOD(0) variable for action name - used for headers
"RTN","DGPFUT3",34,0)
 ;
"RTN","DGPFUT3",35,0)
 ; Output:
"RTN","DGPFUT3",36,0)
 ;   none - A temporary global is built and displayed.
"RTN","DGPFUT3",37,0)
 ;
"RTN","DGPFUT3",38,0)
 ; Temporary variables:
"RTN","DGPFUT3",39,0)
 N TXN  ; transaction - one of the following:
"RTN","DGPFUT3",40,0)
 ;        FA - FLAG ASSIGNMENT - Assign Flag
"RTN","DGPFUT3",41,0)
 ;        FA - FLAG ASSIGNMENT - Edit Flag Assignment
"RTN","DGPFUT3",42,0)
 ;        FA - FLAG ASSIGNMENT - Change Assignment Ownership
"RTN","DGPFUT3",43,0)
 ;        FM - FLAG MANAGEMENT - Add New Record Flag
"RTN","DGPFUT3",44,0)
 ;        FM - FLAG MANAGEMENT - Edit Record Flag
"RTN","DGPFUT3",45,0)
 ;
"RTN","DGPFUT3",46,0)
 N DGPFLOUT  ; (L)ocal(OUT)put array with values needed to setup global
"RTN","DGPFUT3",47,0)
 N DGPFGOUT  ; (G)lobal (OUT)put array name.  Contains assignment detail
"RTN","DGPFUT3",48,0)
 ;
"RTN","DGPFUT3",49,0)
 S TXN=$S($P(DGPFOPT,U)["FLAG ASSIGNMENT":"FA",1:"FM")
"RTN","DGPFUT3",50,0)
 S TXN=TXN_U_$P($P(DGPFOPT,U),"DGPF ",2)
"RTN","DGPFUT3",51,0)
 S TXN=TXN_U_$P(DGPFACT,U,3,4)
"RTN","DGPFUT3",52,0)
 ;
"RTN","DGPFUT3",53,0)
 S DGPFGOUT=$NA(^TMP("DGPFARY",$J)) K @DGPFGOUT
"RTN","DGPFUT3",54,0)
 S DGPFLOUT("ASGMNTIEN")=DGPFIEN
"RTN","DGPFUT3",55,0)
 ;
"RTN","DGPFUT3",56,0)
 D BLDLOCAL(.DGPFDA,.DGPFHX,TXN,.DGPFLOUT)
"RTN","DGPFUT3",57,0)
 D BLDGLOB^DGPFUT4(.DGPFDA,.DGPFHX,TXN,.DGPFLOUT,DGPFGOUT)
"RTN","DGPFUT3",58,0)
 D DISPLAY^DGPFUT5(TXN,DGPFGOUT) ; order thru global, display to user
"RTN","DGPFUT3",59,0)
 ;
"RTN","DGPFUT3",60,0)
 K @DGPFGOUT ; remove temporary global array
"RTN","DGPFUT3",61,0)
 Q
"RTN","DGPFUT3",62,0)
 ;
"RTN","DGPFUT3",63,0)
BLDLOCAL(DGPFDA,DGPFHX,TXN,DGPFLOUT) ;
"RTN","DGPFUT3",64,0)
 ; This procedure builds a local array (DPGFLOUT) of all fields
"RTN","DGPFUT3",65,0)
 ;
"RTN","DGPFUT3",66,0)
 ; Input:
"RTN","DGPFUT3",67,0)
 ;   DGPFDA - flag assignment data array
"RTN","DGPFUT3",68,0)
 ;   DGPFHX - flag assignment history array
"RTN","DGPFUT3",69,0)
 ;   TXN - transaction containing current option and action
"RTN","DGPFUT3",70,0)
 ;   DGPFLOUT - Local Output array
"RTN","DGPFUT3",71,0)
 ;
"RTN","DGPFUT3",72,0)
 ; Output:
"RTN","DGPFUT3",73,0)
 ;   none
"RTN","DGPFUT3",74,0)
 ;
"RTN","DGPFUT3",75,0)
 I $P(TXN,U)="FA" D BLDLOCFA(.DGPFDA,.DGPFHX,.DGPFLOUT) ; bld local array
"RTN","DGPFUT3",76,0)
 I $P(TXN,U)="FM" D BLDLOCFM(.DGPFDA,.DGPFHX,.DGPFLOUT) ; bld local array
"RTN","DGPFUT3",77,0)
 Q
"RTN","DGPFUT3",78,0)
 ;
"RTN","DGPFUT3",79,0)
BLDLOCFA(DGPFDA,DGPFHX,DGPFLOUT) ; build (L)ocal (OUT)put array
"RTN","DGPFUT3",80,0)
 ;
"RTN","DGPFUT3",81,0)
 ; This procedure builds a local array (DPGFLOUT) of all
"RTN","DGPFUT3",82,0)
 ; FLAG ASSIGNMENT fields to be presented to the user.
"RTN","DGPFUT3",83,0)
 ;
"RTN","DGPFUT3",84,0)
 ; Input:
"RTN","DGPFUT3",85,0)
 ;   DGPFDA - flag assignment data array
"RTN","DGPFUT3",86,0)
 ;   DGPFHX - flag assignment history array
"RTN","DGPFUT3",87,0)
 ;   DGPFLOUT - Local Output array
"RTN","DGPFUT3",88,0)
 ;
"RTN","DGPFUT3",89,0)
 ; Output:
"RTN","DGPFUT3",90,0)
 ;   DGPFLOUT - (L)ocal (OUT)put array
"RTN","DGPFUT3",91,0)
 ;
"RTN","DGPFUT3",92,0)
 ; Temporary variables:
"RTN","DGPFUT3",93,0)
 N DGPFIEN  ; Internal Entry Number
"RTN","DGPFUT3",94,0)
 N DGPFPAT  ; patient data array
"RTN","DGPFUT3",95,0)
 N DGPFFLG  ; flag data array
"RTN","DGPFUT3",96,0)
 N DGPFAHX  ; temporary array for holding last assignment
"RTN","DGPFUT3",97,0)
 N DGPFIA   ; initial assignment internal value
"RTN","DGPFUT3",98,0)
 N DGPFLAST ; last assignment
"RTN","DGPFUT3",99,0)
 ;
"RTN","DGPFUT3",100,0)
 Q:'$$GETPAT^DGPFUT2($P(DGPFDA("DFN"),U),.DGPFPAT)
"RTN","DGPFUT3",101,0)
 Q:'$$GETFLAG^DGPFUT1($P($G(DGPFDA("FLAG")),U),.DGPFFLG)
"RTN","DGPFUT3",102,0)
 ;
"RTN","DGPFUT3",103,0)
 S DGPFLOUT("PATIENT")=$G(DGPFPAT("NAME"))
"RTN","DGPFUT3",104,0)
 S DGPFLOUT("FLAGNAME")=$P($G(DGPFFLG("FLAG")),U)
"RTN","DGPFUT3",105,0)
 S DGPFLOUT("FLAGTYPE")=$P($G(DGPFFLG("TYPE")),U,2)
"RTN","DGPFUT3",106,0)
 S DGPFLOUT("CATEGORY")=$S(DGPFDA("FLAG")["26.11":"II (LOCAL)",DGPFDA("FLAG")["26.15":"I (NATIONAL)",1:"")
"RTN","DGPFUT3",107,0)
 ;
"RTN","DGPFUT3",108,0)
 S DGPFIEN=+$G(DGPFDA("STATUS"))
"RTN","DGPFUT3",109,0)
 S DGPFLOUT("STATUS")=$$EXTERNAL^DILFD(26.13,.03,"F",DGPFIEN)
"RTN","DGPFUT3",110,0)
 ;
"RTN","DGPFUT3",111,0)
 ; set initial assignment
"RTN","DGPFUT3",112,0)
 S DGPFLOUT("INITASSIGN")=$$FMTE^XLFDT(+$G(DGPFHX("ASSIGNDT")),"5")  ; AF
"RTN","DGPFUT3",113,0)
 I $G(DGPFLOUT("ASGMNTIEN"))]"" D  ; EF and CO actions
"RTN","DGPFUT3",114,0)
 . S DGPFIA=$$GETADT^DGPFAAH(DGPFLOUT("ASGMNTIEN"))
"RTN","DGPFUT3",115,0)
 . S DGPFLOUT("INITASSIGN")=$$FMTE^XLFDT(+$G(DGPFIA),"5")
"RTN","DGPFUT3",116,0)
 ;
"RTN","DGPFUT3",117,0)
 ; set last review date
"RTN","DGPFUT3",118,0)
 S DGPFLOUT("LASTREVIEW")="N/A"  ; AF action
"RTN","DGPFUT3",119,0)
 I $G(DGPFLOUT("ASGMNTIEN"))]"" D  ; EF and CO actions
"RTN","DGPFUT3",120,0)
 . S DGPFLAST=$$GETLAST^DGPFAAH(DGPFLOUT("ASGMNTIEN"))
"RTN","DGPFUT3",121,0)
 . S DGPFAHX=$$GETHIST^DGPFAAH(DGPFLAST,.DGPFAHX)
"RTN","DGPFUT3",122,0)
 . Q:+$G(DGPFAHX("ASSIGNDT"))=+$G(DGPFIA)  ; do not set if = init asgn
"RTN","DGPFUT3",123,0)
 . S DGPFLOUT("LASTREVIEW")=$$FMTE^XLFDT(+$G(DGPFAHX("ASSIGNDT")),"5D")
"RTN","DGPFUT3",124,0)
 ;
"RTN","DGPFUT3",125,0)
 ; set next review date
"RTN","DGPFUT3",126,0)
 S DGPFLOUT("REVIEWDT")="N/A"
"RTN","DGPFUT3",127,0)
 I $G(DGPFDA("REVIEWDT"))]"" D
"RTN","DGPFUT3",128,0)
 . S DGPFLOUT("REVIEWDT")=$$FMTE^XLFDT(+$G(DGPFDA("REVIEWDT")),"5D")
"RTN","DGPFUT3",129,0)
 ;
"RTN","DGPFUT3",130,0)
 S DGPFIEN=+$G(DGPFDA("OWNER"))_","
"RTN","DGPFUT3",131,0)
 S DGPFLOUT("OWNER")=$$GET1^DIQ(4,DGPFIEN,.01,"","","DGERR")
"RTN","DGPFUT3",132,0)
 ;
"RTN","DGPFUT3",133,0)
 S DGPFIEN=+$G(DGPFDA("ORIGSITE"))_","
"RTN","DGPFUT3",134,0)
 S DGPFLOUT("ORIGSITE")=$$GET1^DIQ(4,DGPFIEN,.01,"","","DGERR")
"RTN","DGPFUT3",135,0)
 ;
"RTN","DGPFUT3",136,0)
 S DGPFIEN=$G(DGPFHX("ACTION"))
"RTN","DGPFUT3",137,0)
 S DGPFLOUT("ACTION")=$$EXTERNAL^DILFD(26.14,.03,"F",DGPFIEN)
"RTN","DGPFUT3",138,0)
 ;
"RTN","DGPFUT3",139,0)
 S DGPFLOUT("ACTIONDT")=$$FMTE^XLFDT($$NOW^XLFDT,"5T")
"RTN","DGPFUT3",140,0)
 ;
"RTN","DGPFUT3",141,0)
 S DGPFIEN=DUZ_","
"RTN","DGPFUT3",142,0)
 S DGPFLOUT("ENTERBY")=$$GET1^DIQ(200,DGPFIEN,.01,"","","DGERR")
"RTN","DGPFUT3",143,0)
 ;
"RTN","DGPFUT3",144,0)
 ; word processing fields
"RTN","DGPFUT3",145,0)
 S DGPFIEN=+$G(DGPFHX("APPRVBY"))_","
"RTN","DGPFUT3",146,0)
 S DGPFLOUT("APPRVBY")=$$GET1^DIQ(200,DGPFIEN,.01,"","","DGERR")
"RTN","DGPFUT3",147,0)
 ;
"RTN","DGPFUT3",148,0)
 M DGPFLOUT("NARR")=DGPFDA("NARR")
"RTN","DGPFUT3",149,0)
 M DGPFLOUT("COMMENT")=DGPFHX("COMMENT")
"RTN","DGPFUT3",150,0)
 ;
"RTN","DGPFUT3",151,0)
 Q
"RTN","DGPFUT3",152,0)
 ;
"RTN","DGPFUT3",153,0)
BLDLOCFM(DGPFDA,DGPFHX,DGPFLOUT) ; build (L)ocal (OUT)put array
"RTN","DGPFUT3",154,0)
 ;
"RTN","DGPFUT3",155,0)
 ; This procedure builds a local array (DPGFLOUT) of all
"RTN","DGPFUT3",156,0)
 ; FLAG MANAGEMENT fields to be presented to the user.
"RTN","DGPFUT3",157,0)
 ;
"RTN","DGPFUT3",158,0)
 ; Input:
"RTN","DGPFUT3",159,0)
 ;   DGPFDA - flag management data array
"RTN","DGPFUT3",160,0)
 ;   DGPFHX - flag management history array
"RTN","DGPFUT3",161,0)
 ;   DGPFLOUT - (L)ocal (OUT)put array
"RTN","DGPFUT3",162,0)
 ;
"RTN","DGPFUT3",163,0)
 ; Output:
"RTN","DGPFUT3",164,0)
 ;   DGPFLOUT - (L)ocal (OUT)put array
"RTN","DGPFUT3",165,0)
 ;
"RTN","DGPFUT3",166,0)
 ; Temporary variables:
"RTN","DGPFUT3",167,0)
 N DGPFSUB  ; loop control variable
"RTN","DGPFUT3",168,0)
 ;
"RTN","DGPFUT3",169,0)
 S DGPFLOUT("FLAGNAME")=$P($G(DGPFDA("FLAG")),U,2)
"RTN","DGPFUT3",170,0)
 S DGPFLOUT("CATEGORY")="II (LOCAL)"
"RTN","DGPFUT3",171,0)
 S DGPFLOUT("FLAGTYPE")=$P($G(DGPFDA("TYPE")),U,2)
"RTN","DGPFUT3",172,0)
 S DGPFLOUT("STATUS")=$P($G(DGPFDA("STAT")),U,2)
"RTN","DGPFUT3",173,0)
 S DGPFLOUT("REVFREQ")=$P(DGPFDA("REVFREQ"),U)
"RTN","DGPFUT3",174,0)
 S DGPFLOUT("NOTIDAYS")=$P(DGPFDA("NOTIDAYS"),U)
"RTN","DGPFUT3",175,0)
 S DGPFLOUT("REVGRP")=$P(DGPFDA("REVGRP"),U,2)
"RTN","DGPFUT3",176,0)
 S DGPFLOUT("TIUTITLE")=$E($P(DGPFDA("TIUTITLE"),U,2),1,51)
"RTN","DGPFUT3",177,0)
 S DGPFLOUT("ENTERDT")=$$FMTE^XLFDT($$NOW^XLFDT,"5T")
"RTN","DGPFUT3",178,0)
 S DGPFIEN=DUZ_","
"RTN","DGPFUT3",179,0)
 S DGPFLOUT("ENTERBY")=$$GET1^DIQ(200,DGPFIEN,.01,"","","DGERR")
"RTN","DGPFUT3",180,0)
 ;
"RTN","DGPFUT3",181,0)
 ; principal investigator(s)
"RTN","DGPFUT3",182,0)
 S DGPFSUB=""
"RTN","DGPFUT3",183,0)
 F  S DGPFSUB=$O(DGPFDA("PRININV",DGPFSUB)) Q:DGPFSUB=""  D
"RTN","DGPFUT3",184,0)
 . Q:$G(DGPFDA("PRININV",DGPFSUB,0))="@"
"RTN","DGPFUT3",185,0)
 . S DGPFLOUT("PRININV",DGPFSUB,0)=$P($G(DGPFDA("PRININV",DGPFSUB,0)),U,2)
"RTN","DGPFUT3",186,0)
 ;
"RTN","DGPFUT3",187,0)
 ; word processing fields
"RTN","DGPFUT3",188,0)
 M DGPFLOUT("DESC")=DGPFDA("DESC")
"RTN","DGPFUT3",189,0)
 M DGPFLOUT("REASON")=DGPFHX("REASON")
"RTN","DGPFUT3",190,0)
 ;
"RTN","DGPFUT3",191,0)
 Q
"RTN","DGPFUT4")
0^40^B36954590
"RTN","DGPFUT4",1,0)
DGPFUT4 ;ALB/SAE - PRF UTILITIES CONTINUED ; 6/9/04 1:33pm
"RTN","DGPFUT4",2,0)
 ;;5.3;Registration;**554**;Aug 13, 1993
"RTN","DGPFUT4",3,0)
 ;
"RTN","DGPFUT4",4,0)
 Q  ; no direct entry
"RTN","DGPFUT4",5,0)
 ;
"RTN","DGPFUT4",6,0)
BLDGLOB(DGPFDA,DGPFHX,TXN,DGPFLOUT,DGPFGOUT) ; build global
"RTN","DGPFUT4",7,0)
 ;
"RTN","DGPFUT4",8,0)
 ; This procedure builds the temporary global for display.
"RTN","DGPFUT4",9,0)
 ; It first determines the longest label, then it steps thru the $TEXT
"RTN","DGPFUT4",10,0)
 ; list of labels of fields, which control the order of nodes created.
"RTN","DGPFUT4",11,0)
 ; For each label it appends the field value then adds the resulting
"RTN","DGPFUT4",12,0)
 ; value to the temporary global ^TMP("DGPFARY",$J).
"RTN","DGPFUT4",13,0)
 ;
"RTN","DGPFUT4",14,0)
 ; Input:
"RTN","DGPFUT4",15,0)
 ;   DGPFDA - data array
"RTN","DGPFUT4",16,0)
 ;        - derived from DGPFA  if called by Flag Assignment transaction
"RTN","DGPFUT4",17,0)
 ;        - derived from DGPFLF if called by Flag Management transaction
"RTN","DGPFUT4",18,0)
 ;   DGPFHX - history array
"RTN","DGPFUT4",19,0)
 ;        - derived from DGPFAH if called by Flag Assignment transaction
"RTN","DGPFUT4",20,0)
 ;        - derived from DGPFLH if called by Flag Management transaction
"RTN","DGPFUT4",21,0)
 ;   TXN - transaction - one of the following:
"RTN","DGPFUT4",22,0)
 ;         FA - FLAG ASSIGNMENT - Assign Flag
"RTN","DGPFUT4",23,0)
 ;         FA - FLAG ASSIGNMENT - Edit Flag Assignment
"RTN","DGPFUT4",24,0)
 ;         FA - FLAG ASSIGNMENT - Change Assignment Ownership
"RTN","DGPFUT4",25,0)
 ;         FM - FLAG MANAGEMENT - Add New Record Flag
"RTN","DGPFUT4",26,0)
 ;         FM - FLAG MANAGEMENT - Edit Record Flag
"RTN","DGPFUT4",27,0)
 ;   DGPFLOUT - (L)ocal (OUT)put array, containing non-WP fields
"RTN","DGPFUT4",28,0)
 ;   DGPFGOUT - (G)lobal (OUT)put array name to be built.
"RTN","DGPFUT4",29,0)
 ;
"RTN","DGPFUT4",30,0)
 ; Output:
"RTN","DGPFUT4",31,0)
 ;   DGPFGOUT - (G)lobal (OUT)put - name of ^TMP global built
"RTN","DGPFUT4",32,0)
 ;              Contains assignment detail
"RTN","DGPFUT4",33,0)
 ;              This global is displayed to screen for user.
"RTN","DGPFUT4",34,0)
 ;
"RTN","DGPFUT4",35,0)
 ; Temporary variables:
"RTN","DGPFUT4",36,0)
 N DGPFROOT  ; Array root subscript
"RTN","DGPFUT4",37,0)
 N DGPFCOL   ; Column value for each display field, stored in text block
"RTN","DGPFUT4",38,0)
 N DGPFLABL  ; Label of DGPFROOT for display
"RTN","DGPFUT4",39,0)
 N DGPFVAL   ; Value from DGPFROOT array node
"RTN","DGPFUT4",40,0)
 N DGPFPAD   ; Holds padded spaces for display alignment
"RTN","DGPFUT4",41,0)
 N DGPFOFST  ; Offset of text line in text subroutine
"RTN","DGPFUT4",42,0)
 N DGPFLONG  ; Longest label for later display
"RTN","DGPFUT4",43,0)
 N DGPFLINE  ; Line number incremented during final global build in SET
"RTN","DGPFUT4",44,0)
 N DGPFRTN   ; Routine that contains the TEXT from which to read
"RTN","DGPFUT4",45,0)
 N DGPFTEXT  ; value of text line retrieved from TEXT
"RTN","DGPFUT4",46,0)
 N DGPFTAG   ; tag at offset of TEXT
"RTN","DGPFUT4",47,0)
 N DGPFSR    ; TEXT subroutine to use to acquire data
"RTN","DGPFUT4",48,0)
 N DGPFPICT  ; count of number of times PRININV array has been read
"RTN","DGPFUT4",49,0)
 ;
"RTN","DGPFUT4",50,0)
 S DGPFLINE=0
"RTN","DGPFUT4",51,0)
 S DGPFRTN=$P(TXN,U)_"TXT"
"RTN","DGPFUT4",52,0)
 S DGPFPICT=0
"RTN","DGPFUT4",53,0)
 ;
"RTN","DGPFUT4",54,0)
 ; determine longest label - set this value into the variable DGPFLONG:
"RTN","DGPFUT4",55,0)
 S DGPFLONG=1
"RTN","DGPFUT4",56,0)
 F DGPFOFST=2:1 D  Q:DGPFROOT=""!(DGPFROOT="QUIT")
"RTN","DGPFUT4",57,0)
 . S DGPFTAG=DGPFRTN_"+"_DGPFOFST,DGPFTEXT=$T(@DGPFTAG)
"RTN","DGPFUT4",58,0)
 . S DGPFROOT=$P(DGPFTEXT,";",3)
"RTN","DGPFUT4",59,0)
 . Q:DGPFROOT=""!(";DESC;NARR;COMMENT;REASON;QUIT;"[(";"_DGPFROOT_";"))
"RTN","DGPFUT4",60,0)
 . I DGPFROOT="PRININV",'$D(DGPFLOUT(DGPFROOT)) Q
"RTN","DGPFUT4",61,0)
 . S DGPFLABL=$P(DGPFTEXT,";",5)
"RTN","DGPFUT4",62,0)
 . S DGPFLONG=$S($L(DGPFLABL)+1>DGPFLONG:$L(DGPFLABL)+1,1:DGPFLONG)
"RTN","DGPFUT4",63,0)
 ;
"RTN","DGPFUT4",64,0)
 ; step thru the text - this controls the order of display
"RTN","DGPFUT4",65,0)
 F DGPFOFST=2:1 D  Q:DGPFROOT=""!(DGPFROOT="QUIT")
"RTN","DGPFUT4",66,0)
 . S DGPFTAG=DGPFRTN_"+"_DGPFOFST,DGPFTEXT=$T(@DGPFTAG)
"RTN","DGPFUT4",67,0)
 . S DGPFROOT=$P(DGPFTEXT,";",3)
"RTN","DGPFUT4",68,0)
 . S DGPFLABL=$P(DGPFTEXT,";",5)
"RTN","DGPFUT4",69,0)
 . Q:DGPFROOT=""!(DGPFROOT="QUIT")
"RTN","DGPFUT4",70,0)
 . ;
"RTN","DGPFUT4",71,0)
 . ; build array from Principal Investigator multiple
"RTN","DGPFUT4",72,0)
 . I DGPFROOT="PRININV" D  Q
"RTN","DGPFUT4",73,0)
 . . D BLDPI(DGPFROOT,DGPFLABL,DGPFLONG,.DGPFLINE,.DGPFLOUT,DGPFGOUT)
"RTN","DGPFUT4",74,0)
 . ;
"RTN","DGPFUT4",75,0)
 . ; build array from word-processing multiple:
"RTN","DGPFUT4",76,0)
 . I ";DESC;NARR;COMMENT;REASON;"[(";"_DGPFROOT_";") D  Q
"RTN","DGPFUT4",77,0)
 . . D BLDWP(DGPFROOT,DGPFLABL,.DGPFLINE,.DGPFLOUT,DGPFGOUT)
"RTN","DGPFUT4",78,0)
 . ;
"RTN","DGPFUT4",79,0)
 . S DGPFCOL=DGPFLONG-$L(DGPFLABL)
"RTN","DGPFUT4",80,0)
 . S DGPFPAD=$E($J("",DGPFCOL),1,DGPFCOL)
"RTN","DGPFUT4",81,0)
 . S DGPFVAL=DGPFPAD_DGPFLABL_DGPFLOUT(DGPFROOT)
"RTN","DGPFUT4",82,0)
 . ;
"RTN","DGPFUT4",83,0)
 . S DGPFLINE=DGPFLINE+1
"RTN","DGPFUT4",84,0)
 . S @DGPFGOUT@(DGPFLINE,0)=DGPFVAL
"RTN","DGPFUT4",85,0)
 Q
"RTN","DGPFUT4",86,0)
 ;
"RTN","DGPFUT4",87,0)
BLDPI(DGPFROOT,DGPFLABL,DGPFLONG,DGPFLINE,DGPFLOUT,DGPFGOUT) ;
"RTN","DGPFUT4",88,0)
 ;
"RTN","DGPFUT4",89,0)
 ; Add each of the nodes from the PRININV array multiple to temp global.
"RTN","DGPFUT4",90,0)
 ;
"RTN","DGPFUT4",91,0)
 ; Input:
"RTN","DGPFUT4",92,0)
 ;   DGPFROOT - Name of the field derived from the $TEXT segment below
"RTN","DGPFUT4",93,0)
 ;   DGPFLABL - Label
"RTN","DGPFUT4",94,0)
 ;   DGPFLONG - Contains length of longest label
"RTN","DGPFUT4",95,0)
 ;   DGPFLINE - Line number for incrementing of global array nodes
"RTN","DGPFUT4",96,0)
 ;   DGPFLOUT - Local array of WP text
"RTN","DGPFUT4",97,0)
 ;   DGPFGOUT - (G)lobal (OUT)put - name of ^TMP global built
"RTN","DGPFUT4",98,0)
 ;
"RTN","DGPFUT4",99,0)
 ; Output:
"RTN","DGPFUT4",100,0)
 ;   none - build DGPFGOUT - (G)lobal (OUT)put ^TMP global
"RTN","DGPFUT4",101,0)
 ;
"RTN","DGPFUT4",102,0)
 ; Temporary variables:
"RTN","DGPFUT4",103,0)
 N DGPFSUB ; subscript
"RTN","DGPFUT4",104,0)
 N DGPFPAD ; padding for leading spaces for display
"RTN","DGPFUT4",105,0)
 N DGPFCOL ; column value for Principal Investigator label
"RTN","DGPFUT4",106,0)
 N DGPFVAL ; value from DGPFROOT array node
"RTN","DGPFUT4",107,0)
 ;
"RTN","DGPFUT4",108,0)
 S DGPFCOL=DGPFLONG-$L(DGPFLABL)
"RTN","DGPFUT4",109,0)
 S DGPFPAD=$E($J("",DGPFCOL),1,DGPFCOL)
"RTN","DGPFUT4",110,0)
 ;
"RTN","DGPFUT4",111,0)
 S DGPFSUB=""
"RTN","DGPFUT4",112,0)
 F  S DGPFSUB=$O(DGPFLOUT(DGPFROOT,DGPFSUB)) Q:'DGPFSUB  D
"RTN","DGPFUT4",113,0)
 . S DGPFVAL=DGPFPAD_DGPFLABL_$G(DGPFLOUT(DGPFROOT,DGPFSUB,0))
"RTN","DGPFUT4",114,0)
 . ;
"RTN","DGPFUT4",115,0)
 . S DGPFLINE=DGPFLINE+1
"RTN","DGPFUT4",116,0)
 . S @DGPFGOUT@(DGPFLINE,0)=DGPFVAL
"RTN","DGPFUT4",117,0)
 Q
"RTN","DGPFUT4",118,0)
 ;
"RTN","DGPFUT4",119,0)
BLDWP(DGPFROOT,DGPFLABL,DGPFLINE,DGPFLOUT,DGPFGOUT) ;build WP array
"RTN","DGPFUT4",120,0)
 ;
"RTN","DGPFUT4",121,0)
 ; This procedure adds each of the nodes from the word-processing
"RTN","DGPFUT4",122,0)
 ; multiple to the temp global (^TMP).
"RTN","DGPFUT4",123,0)
 ;
"RTN","DGPFUT4",124,0)
 ; Input:
"RTN","DGPFUT4",125,0)
 ;   DGPFROOT - Name of the field derived from the $TEXT segment below
"RTN","DGPFUT4",126,0)
 ;   DGPFLABL - label
"RTN","DGPFUT4",127,0)
 ;   DGPFLINE - Line number for incrementing of global array nodes
"RTN","DGPFUT4",128,0)
 ;   DGPFLOUT - Local array of WP text to be added to the global array
"RTN","DGPFUT4",129,0)
 ;   DGPFGOUT - (G)lobal (OUT)put - name of ^TMP global built
"RTN","DGPFUT4",130,0)
 ;
"RTN","DGPFUT4",131,0)
 ; Output:
"RTN","DGPFUT4",132,0)
 ;   none - build DGPFGOUT - (G)lobal (OUT)put ^TMP global
"RTN","DGPFUT4",133,0)
 ;
"RTN","DGPFUT4",134,0)
 ; Temporary variables:
"RTN","DGPFUT4",135,0)
 N DGSUB ; subscript value in word processing fields
"RTN","DGPFUT4",136,0)
 N DGPFPAD ; Padding as spaces for alignment of headers
"RTN","DGPFUT4",137,0)
 N DGPFVAL ; value from DGPFROOT array node
"RTN","DGPFUT4",138,0)
 ;
"RTN","DGPFUT4",139,0)
 S DGPFPAD=" "
"RTN","DGPFUT4",140,0)
 ;
"RTN","DGPFUT4",141,0)
 ; insert header for narrative:
"RTN","DGPFUT4",142,0)
 S DGPFVAL=DGPFPAD_DGPFLABL
"RTN","DGPFUT4",143,0)
 ;
"RTN","DGPFUT4",144,0)
 S DGPFLINE=DGPFLINE+1
"RTN","DGPFUT4",145,0)
 S @DGPFGOUT@(DGPFLINE,0)=DGPFVAL
"RTN","DGPFUT4",146,0)
 ;
"RTN","DGPFUT4",147,0)
 ; set each word processing line
"RTN","DGPFUT4",148,0)
 S DGSUB=0
"RTN","DGPFUT4",149,0)
 F  S DGSUB=$O(DGPFLOUT(DGPFROOT,DGSUB)) Q:'DGSUB  D
"RTN","DGPFUT4",150,0)
 . S DGPFVAL=DGPFPAD_$G(DGPFLOUT(DGPFROOT,DGSUB,0))
"RTN","DGPFUT4",151,0)
 . ;
"RTN","DGPFUT4",152,0)
 . S DGPFLINE=DGPFLINE+1
"RTN","DGPFUT4",153,0)
 . S @DGPFGOUT@(DGPFLINE,0)=DGPFVAL
"RTN","DGPFUT4",154,0)
 Q
"RTN","DGPFUT4",155,0)
 ;
"RTN","DGPFUT4",156,0)
FATXT ; ordered list of fields to be presented to user for Flag Assignment
"RTN","DGPFUT4",157,0)
 ;;ROOT;       ;LABEL;
"RTN","DGPFUT4",158,0)
 ;;PATIENT;    ;Patient Name: ;
"RTN","DGPFUT4",159,0)
 ;;FLAGNAME;   ;Flag Name: ;
"RTN","DGPFUT4",160,0)
 ;;FLAGTYPE;   ;Flag Type: ;
"RTN","DGPFUT4",161,0)
 ;;CATEGORY;   ;Flag Category: ;
"RTN","DGPFUT4",162,0)
 ;;STATUS;     ;Assignment Status: ;
"RTN","DGPFUT4",163,0)
 ;;INITASSIGN; ;Initial Assignment: ;
"RTN","DGPFUT4",164,0)
 ;;LASTREVIEW; ;Last Review Date: ;
"RTN","DGPFUT4",165,0)
 ;;REVIEWDT;   ;Next Review Date: ;
"RTN","DGPFUT4",166,0)
 ;;OWNER;      ;Owner Site: ;
"RTN","DGPFUT4",167,0)
 ;;ORIGSITE;   ;Originating Site: ;
"RTN","DGPFUT4",168,0)
 ;;ACTION;     ;Assignment Action: ;
"RTN","DGPFUT4",169,0)
 ;;ACTIONDT;   ;Action Date: ;
"RTN","DGPFUT4",170,0)
 ;;ENTERBY;    ;Entered By: ;
"RTN","DGPFUT4",171,0)
 ;;APPRVBY;    ;Approved By: ;
"RTN","DGPFUT4",172,0)
 ;;NARR;       ;Record Flag Assignment Narrative: ;
"RTN","DGPFUT4",173,0)
 ;;COMMENT;    ;Action Comments: ;
"RTN","DGPFUT4",174,0)
 ;;QUIT;
"RTN","DGPFUT4",175,0)
 Q
"RTN","DGPFUT4",176,0)
 ;
"RTN","DGPFUT4",177,0)
FMTXT ; ordered list of fields to be presented to user for Flag Management
"RTN","DGPFUT4",178,0)
 ;;ROOT;       ;LABEL;
"RTN","DGPFUT4",179,0)
 ;;FLAGNAME;   ;Flag Name: ;
"RTN","DGPFUT4",180,0)
 ;;CATEGORY;   ;Flag Category: ;
"RTN","DGPFUT4",181,0)
 ;;FLAGTYPE;   ;Flag Type: ;
"RTN","DGPFUT4",182,0)
 ;;STATUS;     ;Flag Status: ;
"RTN","DGPFUT4",183,0)
 ;;REVFREQ;    ;Review Frequency Days: ;
"RTN","DGPFUT4",184,0)
 ;;NOTIDAYS;   ;Notification Days: ;
"RTN","DGPFUT4",185,0)
 ;;REVGRP;     ;Review Mail Group: ;
"RTN","DGPFUT4",186,0)
 ;;TIUTITLE;   ;Progress Note Title: ;
"RTN","DGPFUT4",187,0)
 ;;ENTERDT;    ;Enter/Edit On: ;
"RTN","DGPFUT4",188,0)
 ;;ENTERBY;    ;Enter/Edit By: ;
"RTN","DGPFUT4",189,0)
 ;;PRININV;    ;Principal Investigator(s): ;
"RTN","DGPFUT4",190,0)
 ;;DESC;       ;Flag Description: ;
"RTN","DGPFUT4",191,0)
 ;;REASON;     ;Reason For Flag Enter/Edit: ;
"RTN","DGPFUT4",192,0)
 ;;QUIT;
"RTN","DGPFUT4",193,0)
 Q
"RTN","DGPFUT5")
0^41^B21222419
"RTN","DGPFUT5",1,0)
DGPFUT5 ;ALB/SAE - PRF UTILITIES CONTINUED ; 12/18/03 09:00pm
"RTN","DGPFUT5",2,0)
 ;;5.3;Registration;**554**;Aug 13, 1993
"RTN","DGPFUT5",3,0)
 ;
"RTN","DGPFUT5",4,0)
 Q  ; no direct entry
"RTN","DGPFUT5",5,0)
 ;
"RTN","DGPFUT5",6,0)
DISPLAY(TXN,DGPFGOUT) ; entry point for user-review screen
"RTN","DGPFUT5",7,0)
 ;
"RTN","DGPFUT5",8,0)
 ; This routine completes the re-display process.
"RTN","DGPFUT5",9,0)
 ; It re-displays information about the Flag, or Flag Assignment,
"RTN","DGPFUT5",10,0)
 ; being created or modified by the user, prior to the 'file' question.
"RTN","DGPFUT5",11,0)
 ;
"RTN","DGPFUT5",12,0)
 ; Input:
"RTN","DGPFUT5",13,0)
 ;   TXN - transaction - has several '^' pieces starting with:
"RTN","DGPFUT5",14,0)
 ;         FA - FLAG ASSIGNMENT - Assign Flag
"RTN","DGPFUT5",15,0)
 ;         FA - FLAG ASSIGNMENT - Edit Flag Assignment
"RTN","DGPFUT5",16,0)
 ;         FA - FLAG ASSIGNMENT - Change Assignment Ownership
"RTN","DGPFUT5",17,0)
 ;         FM - FLAG MANAGEMENT - Add New Record Flag
"RTN","DGPFUT5",18,0)
 ;         FM - FLAG MANAGEMENT - Edit Record Flag
"RTN","DGPFUT5",19,0)
 ;   DGPFGOUT - name of global ^TMP global used to display
"RTN","DGPFUT5",20,0)
 ;
"RTN","DGPFUT5",21,0)
 ; Output:
"RTN","DGPFUT5",22,0)
 ;   none - display to user only
"RTN","DGPFUT5",23,0)
 ; 
"RTN","DGPFUT5",24,0)
 ; Temporary variables:
"RTN","DGPFUT5",25,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y ; DIR Reader variables
"RTN","DGPFUT5",26,0)
 ;
"RTN","DGPFUT5",27,0)
 F  D  I Y=0!$D(DUOUT)!$D(DTOUT) W ! Q
"RTN","DGPFUT5",28,0)
 . D DISP(TXN,DGPFGOUT)
"RTN","DGPFUT5",29,0)
 . W ! S DIR(0)="Y",DIR("A")="Do you want to review again"
"RTN","DGPFUT5",30,0)
 . S DIR("B")="NO" D ^DIR K DIR
"RTN","DGPFUT5",31,0)
 ;
"RTN","DGPFUT5",32,0)
 Q
"RTN","DGPFUT5",33,0)
 ;
"RTN","DGPFUT5",34,0)
DISP(TXN,DGPFGOUT) ; display user review screen(s):
"RTN","DGPFUT5",35,0)
 ; 
"RTN","DGPFUT5",36,0)
 ; Re-displays information about the Flag or Flag Assignment being
"RTN","DGPFUT5",37,0)
 ; created or modified.
"RTN","DGPFUT5",38,0)
 ;
"RTN","DGPFUT5",39,0)
 ; Input:
"RTN","DGPFUT5",40,0)
 ;   TXN - transaction - has several pieces starting with:
"RTN","DGPFUT5",41,0)
 ;         FA - FLAG ASSIGNMENT - Assign Flag
"RTN","DGPFUT5",42,0)
 ;         FA - FLAG ASSIGNMENT - Edit Flag Assignment
"RTN","DGPFUT5",43,0)
 ;         FA - FLAG ASSIGNMENT - Change Assignment Ownership
"RTN","DGPFUT5",44,0)
 ;         FM - FLAG MANAGEMENT - Add New Record Flag
"RTN","DGPFUT5",45,0)
 ;         FM - FLAG MANAGEMENT - Edit Record Flag
"RTN","DGPFUT5",46,0)
 ;   DGPFGOUT - name of global ^TMP global used to display
"RTN","DGPFUT5",47,0)
 ;
"RTN","DGPFUT5",48,0)
 ; Output:
"RTN","DGPFUT5",49,0)
 ;   none - display to user only
"RTN","DGPFUT5",50,0)
 ;
"RTN","DGPFUT5",51,0)
 ; Temporary variables:
"RTN","DGPFUT5",52,0)
 N DGPFQUIT ; quit variable for loop
"RTN","DGPFUT5",53,0)
 N DGPFCT   ; counter variable for loop
"RTN","DGPFUT5",54,0)
 N DGPFNEW    ; new page indicator
"RTN","DGPFUT5",55,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y ; DIR Reader variables
"RTN","DGPFUT5",56,0)
 N DGPFHDR  ; used for new screens of word processing displays
"RTN","DGPFUT5",57,0)
 N DGPFTHIS ; value of current node
"RTN","DGPFUT5",58,0)
 ; DGPFTHIS("HEADER") ; this node in global array is a header
"RTN","DGPFUT5",59,0)
 N DGPFNEXT ; next node in global array
"RTN","DGPFUT5",60,0)
 N DGPFLAST ; prevents page feed and display of headers with no body
"RTN","DGPFUT5",61,0)
 N DGPFLINE ; line for underlining headers
"RTN","DGPFUT5",62,0)
 N DGPFPINV ; counter to control display of principal investigator label
"RTN","DGPFUT5",63,0)
 N DGPFPAD  ; pad for leading spaces
"RTN","DGPFUT5",64,0)
 N DGPFACT  ; ACTION as upper case
"RTN","DGPFUT5",65,0)
 ;
"RTN","DGPFUT5",66,0)
 S DGPFCT=0
"RTN","DGPFUT5",67,0)
 S DGPFACT=$TR($P(TXN,U,3),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","DGPFUT5",68,0)
 S DGPFHDR("TOP")="REVIEW OF "_DGPFACT_" DATA INPUT BEFORE FILING"
"RTN","DGPFUT5",69,0)
 ;
"RTN","DGPFUT5",70,0)
 S DGPFLINE="",$P(DGPFLINE,"-",($L(DGPFHDR("TOP"))+1))=""
"RTN","DGPFUT5",71,0)
 S DGPFHDR("TOPLINE")=DGPFLINE
"RTN","DGPFUT5",72,0)
 S DGPFPINV=0
"RTN","DGPFUT5",73,0)
 ;
"RTN","DGPFUT5",74,0)
 W:$E(IOST,1,2)="C-" @IOF
"RTN","DGPFUT5",75,0)
 W DGPFHDR("TOP"),!,DGPFHDR("TOPLINE")
"RTN","DGPFUT5",76,0)
 F  S DGPFCT=$O(@DGPFGOUT@(DGPFCT)) Q:DGPFCT=""  D  Q:$D(DGPFQUIT)
"RTN","DGPFUT5",77,0)
 . K DGPFTHIS,DGPFNEXT
"RTN","DGPFUT5",78,0)
 . S DGPFTHIS=@DGPFGOUT@(DGPFCT,0)
"RTN","DGPFUT5",79,0)
 . S DGPFNEXT=$O(@DGPFGOUT@(DGPFCT))
"RTN","DGPFUT5",80,0)
 . S DGPFNEXT=$S(DGPFNEXT="":"",1:@DGPFGOUT@(DGPFNEXT,0))
"RTN","DGPFUT5",81,0)
 . S:$O(@DGPFGOUT@(DGPFCT))="" DGPFLAST=1
"RTN","DGPFUT5",82,0)
 . ;
"RTN","DGPFUT5",83,0)
 . I DGPFTHIS["Principal Investigator(s):" S DGPFPINV=DGPFPINV+1
"RTN","DGPFUT5",84,0)
 . I DGPFTHIS["Action Comments:" S DGPFTHIS("HEADER")=1
"RTN","DGPFUT5",85,0)
 . I DGPFTHIS["Flag Description:" S DGPFTHIS("HEADER")=1
"RTN","DGPFUT5",86,0)
 . I DGPFTHIS["Reason For Flag Enter/Edit:" S DGPFTHIS("HEADER")=1
"RTN","DGPFUT5",87,0)
 . I DGPFTHIS["Record Flag Assignment Narrative:" S DGPFTHIS("HEADER")=1
"RTN","DGPFUT5",88,0)
 . I DGPFNEXT["Action Comments:" S DGPFNEXT("HEADER")=1
"RTN","DGPFUT5",89,0)
 . I DGPFNEXT["Flag Description:" S DGPFNEXT("HEADER")=1
"RTN","DGPFUT5",90,0)
 . I DGPFNEXT["Reason For Flag Enter/Edit:" S DGPFNEXT("HEADER")=1
"RTN","DGPFUT5",91,0)
 . I DGPFNEXT["Record Flag Assignment Narrative:" S DGPFNEXT("HEADER")=1
"RTN","DGPFUT5",92,0)
 . I $D(DGPFTHIS("HEADER")) S DGPFHDR(1)=DGPFTHIS D
"RTN","DGPFUT5",93,0)
 . . S DGPFLINE=" ",$P(DGPFLINE,"-",($L(DGPFHDR(1))-1))=""
"RTN","DGPFUT5",94,0)
 . ;
"RTN","DGPFUT5",95,0)
 . ; if near the bottom, set new screen variable DGPFNEW
"RTN","DGPFUT5",96,0)
 . I $Y+9>IOSL I $D(DGPFTHIS("HEADER"))!($Y+6>IOSL) S DGPFNEW=1
"RTN","DGPFUT5",97,0)
 . I $D(DGPFNEW),'$D(DGPFLAST) D  Q
"RTN","DGPFUT5",98,0)
 . . K DGPFNEW W ! S DIR(0)="E" D ^DIR K DIR
"RTN","DGPFUT5",99,0)
 . . I $D(DUOUT)!$D(DTOUT) S DGPFQUIT=1 Q
"RTN","DGPFUT5",100,0)
 . . W:$E(IOST,1,2)="C-" @IOF
"RTN","DGPFUT5",101,0)
 . . W DGPFHDR("TOP"),!,DGPFHDR("TOPLINE")
"RTN","DGPFUT5",102,0)
 . . I $D(DGPFHDR(1)) D
"RTN","DGPFUT5",103,0)
 . . . I DGPFTHIS?1." ",$D(DGPFNEXT("HEADER")) Q
"RTN","DGPFUT5",104,0)
 . . . W !,DGPFHDR(1),!,DGPFLINE
"RTN","DGPFUT5",105,0)
 . . W:'$D(DGPFTHIS("HEADER")) !,DGPFTHIS
"RTN","DGPFUT5",106,0)
 . . I DGPFTHIS["Principal Investigator(s):" S DGPFPINV=1
"RTN","DGPFUT5",107,0)
 . W:$D(DGPFTHIS("HEADER")) !
"RTN","DGPFUT5",108,0)
 . ; remove label from Principal Investigator line if not first node
"RTN","DGPFUT5",109,0)
 . I DGPFTHIS["Principal Investigator(s):",DGPFPINV>1 D
"RTN","DGPFUT5",110,0)
 . . S DGPFPAD=$E($J("",27),1,27)
"RTN","DGPFUT5",111,0)
 . . S DGPFTHIS=DGPFPAD_$P(DGPFTHIS,":",2)
"RTN","DGPFUT5",112,0)
 . W !,DGPFTHIS
"RTN","DGPFUT5",113,0)
 . W:$D(DGPFTHIS("HEADER")) !,DGPFLINE
"RTN","DGPFUT5",114,0)
 W !
"RTN","DGPFUT5",115,0)
 ;
"RTN","DGPFUT5",116,0)
 Q
"UP",26.11,26.112,-1)
26.11^2
"UP",26.11,26.112,0)
26.112
"UP",26.15,26.152,-1)
26.15^2
"UP",26.15,26.152,0)
26.152
"VER")
8.0^22.0
"^DD",26.11,26.11,.07,0)
TIU PN TITLE^R*P8925.1'XI^TIU(8925.1,^0;7^S DIC("S")="I $$TIULIST^DGPFDD(Y)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",26.11,26.11,.07,3)
Enter the associated Category II Progress Note Title.
"^DD",26.11,26.11,.07,12)
Allows only Category II Progress Note Titles to be displayed.
"^DD",26.11,26.11,.07,12.1)
S DIC("S")="I $$TIULIST^DGPFDD(Y)"
"^DD",26.11,26.11,.07,21,0)
^^2^2^3040511^
"^DD",26.11,26.11,.07,21,1,0)
This field contains the Category II Progress Note Title that is associated
"^DD",26.11,26.11,.07,21,2,0)
with this Patient Record Flag.
"^DD",26.11,26.11,.07,23,0)
^^3^3^3040511^
"^DD",26.11,26.11,.07,23,1,0)
This field contains the pointer to the TIU DOCUMENT DEFINITION file 
"^DD",26.11,26.11,.07,23,2,0)
(#8925.1).  This field is used to link a Progress Note Title to the 
"^DD",26.11,26.11,.07,23,3,0)
Patient Record Flag.  DBIA Reference: (#4386)
"^DD",26.11,26.11,.07,"DT")
3040607
"^DD",26.11,26.11,2,0)
PRINCIPAL INVESTIGATOR(S)^26.112PA^^2;0
"^DD",26.11,26.11,2,21,0)
^^2^2^3030418^
"^DD",26.11,26.11,2,21,1,0)
This multiple field contains the principal investigator(s) names when the
"^DD",26.11,26.11,2,21,2,0)
Flag TYPE is RESEARCH.
"^DD",26.11,26.11,2,23,0)
^.001^3^3^3030418^^
"^DD",26.11,26.11,2,23,1,0)
This multiple field contains the principal investigator(s) names as a
"^DD",26.11,26.11,2,23,2,0)
pointer to the NEW PERSON file (#200).  This field is only used when the
"^DD",26.11,26.11,2,23,3,0)
Flag TYPE is RESEARCH.
"^DD",26.11,26.112,0)
PRINCIPAL INVESTIGATOR(S) SUB-FIELD^^.01^1
"^DD",26.11,26.112,0,"NM","PRINCIPAL INVESTIGATOR(S)")

"^DD",26.11,26.112,.01,0)
PRINCIPAL INVESTIGATOR(S)^MP200'I^VA(200,^0;1^Q
"^DD",26.11,26.112,.01,1,0)
^.1
"^DD",26.11,26.112,.01,1,1,0)
26.112^B
"^DD",26.11,26.112,.01,1,1,1)
S ^DGPF(26.11,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",26.11,26.112,.01,1,1,2)
K ^DGPF(26.11,DA(1),2,"B",$E(X,1,30),DA)
"^DD",26.11,26.112,.01,3)
Enter the Principal Investigator name.
"^DD",26.11,26.112,.01,4)
I $D(DGLKUP) D PIHELP^DGPFDD
"^DD",26.11,26.112,.01,21,0)
^^2^2^3030418^
"^DD",26.11,26.112,.01,21,1,0)
This field contains the name of the Principal Investigator associated 
"^DD",26.11,26.112,.01,21,2,0)
with the Research Type of this Patient Record Flag.
"^DD",26.11,26.112,.01,"DT")
3040308
"^DD",26.14,26.14,.03,0)
ACTION^RSI^1:NEW ASSIGNMENT;2:CONTINUE;3:INACTIVATE;4:REACTIVATE;5:ENTERED IN ERROR;^0;3^Q
"^DD",26.14,26.14,.03,3)
Enter the action associated with the assignment history.
"^DD",26.14,26.14,.03,21,0)
^^3^3^3040318^
"^DD",26.14,26.14,.03,21,1,0)
This field contains the event that occurred to create this PRF ASSIGNMENT
"^DD",26.14,26.14,.03,21,2,0)
HISTORY record.  Sample events are NEW ASSIGNMENT, CONTINUE, INACTIVATE, 
"^DD",26.14,26.14,.03,21,3,0)
REACTIVATE and ENTERED IN ERROR.
"^DD",26.14,26.14,.03,"DT")
3050119
"^DD",26.14,26.14,.06,0)
TIU PN LINK^RP8925'I^TIU(8925,^0;6^Q
"^DD",26.14,26.14,.06,3)
Enter the Progress Note IEN that will be linked to this assignment history record.
"^DD",26.14,26.14,.06,21,0)
^^3^3^3040331^
"^DD",26.14,26.14,.06,21,1,0)
This field contains the IEN of the TIU Progress Note that is linked to
"^DD",26.14,26.14,.06,21,2,0)
this PRF Assignment History record.
"^DD",26.14,26.14,.06,21,3,0)
Integration Agreement #4387.
"^DD",26.14,26.14,.06,23,0)
^^2^2^3040331^^
"^DD",26.14,26.14,.06,23,1,0)
This field contains the pointer to the TIU DOCUMENT file (#8925) of
"^DD",26.14,26.14,.06,23,2,0)
the Progress Note that is linked to this PRF Assignment History record.
"^DD",26.14,26.14,.06,"DT")
3040420
"^DD",26.15,26.15,.07,0)
TIU PN TITLE^RP8925.1'I^TIU(8925.1,^0;7^Q
"^DD",26.15,26.15,.07,3)
Enter the associated Category I Progress Note Title.
"^DD",26.15,26.15,.07,21,0)
^^2^2^3040511^
"^DD",26.15,26.15,.07,21,1,0)
This field contains the Category I Progress Note Title that is associated
"^DD",26.15,26.15,.07,21,2,0)
with this Patient Record Flag.
"^DD",26.15,26.15,.07,23,0)
^^3^3^3040511^
"^DD",26.15,26.15,.07,23,1,0)
This field contains the pointer to the TIU DOCUMENT DEFINITION file
"^DD",26.15,26.15,.07,23,2,0)
(#8925.1).  This field is used to link a Progress Note Title to the
"^DD",26.15,26.15,.07,23,3,0)
Patient Record Flag.  DBIA Reference: (#4386)
"^DD",26.15,26.15,.07,"DT")
3040511
"^DD",26.15,26.15,2,0)
PRINCIPAL INVESTIGATOR(S)^26.152PA^^2;0
"^DD",26.15,26.15,2,21,0)
^^2^2^3030421^
"^DD",26.15,26.15,2,21,1,0)
This multiple field contains the principal investigator(s) names when the
"^DD",26.15,26.15,2,21,2,0)
Flag TYPE is RESEARCH.
"^DD",26.15,26.15,2,23,0)
^.001^3^3^3030421^^
"^DD",26.15,26.15,2,23,1,0)
This multiple field contains the principal investigator(s) names as a
"^DD",26.15,26.15,2,23,2,0)
pointer to the NEW PERSON file (#200).  This field is used when the Flag
"^DD",26.15,26.15,2,23,3,0)
TYPE is RESEARCH.
"^DD",26.15,26.152,0)
PRINCIPAL INVESTIGATOR(S) SUB-FIELD^^.01^1
"^DD",26.15,26.152,0,"NM","PRINCIPAL INVESTIGATOR(S)")

"^DD",26.15,26.152,.01,0)
PRINCIPAL INVESTIGATOR(S)^P200'I^VA(200,^0;1^Q
"^DD",26.15,26.152,.01,1,0)
^.1
"^DD",26.15,26.152,.01,1,1,0)
26.152^B
"^DD",26.15,26.152,.01,1,1,1)
S ^DGPF(26.15,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",26.15,26.152,.01,1,1,2)
K ^DGPF(26.15,DA(1),2,"B",$E(X,1,30),DA)
"^DD",26.15,26.152,.01,3)
Enter the Principal Investigator name
"^DD",26.15,26.152,.01,21,0)
^^2^2^3030421^
"^DD",26.15,26.152,.01,21,1,0)
This field contains the name of the Principal Investigator associated
"^DD",26.15,26.152,.01,21,2,0)
with the Research Type of this Patient Record Flag.
"^DD",26.15,26.152,.01,"DT")
3050301
"^DD",26.18,26.18,6,0)
PRF PHASE 2 ACTIVATION^DI^^0;7^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",26.18,26.18,6,3)
Enter the date that the PRF Phase 2 software is active.
"^DD",26.18,26.18,6,21,0)
^^3^3^3050505^
"^DD",26.18,26.18,6,21,1,0)
This field contains the date that is used to restrict access to specific
"^DD",26.18,26.18,6,21,2,0)
Patient Record Flags functionality in production environments until all
"^DD",26.18,26.18,6,21,3,0)
sites have installed the PRF Phase II software.
"^DD",26.18,26.18,6,"DT")
3050504
**END**
**END**
