Released IB*2*347 SEQ #335
Extracted from mail message
**KIDS**:IB*2.0*347^

**INSTALL NAME**
IB*2.0*347
"BLD",7077,0)
IB*2.0*347^INTEGRATED BILLING^0^3070709^y
"BLD",7077,1,0)
^^5^5^3070123^
"BLD",7077,1,1,0)
This patch is being released in conjunction with the Pharmacy 
"BLD",7077,1,2,0)
Reengineering Encapsulation effort. While no new functionality for 
"BLD",7077,1,3,0)
Integrated Billing package is released with this patch all direct global 
"BLD",7077,1,4,0)
references to the Outpatient Pharmacy files have been replaced by this 
"BLD",7077,1,5,0)
effort.
"BLD",7077,4,0)
^9.64PA^^
"BLD",7077,6.3)
24
"BLD",7077,"INID")
^y
"BLD",7077,"INIT")
IB20P347
"BLD",7077,"KRN",0)
^9.67PA^8989.52^19
"BLD",7077,"KRN",.4,0)
.4
"BLD",7077,"KRN",.4,"NM",0)
^9.68A^^
"BLD",7077,"KRN",.401,0)
.401
"BLD",7077,"KRN",.402,0)
.402
"BLD",7077,"KRN",.403,0)
.403
"BLD",7077,"KRN",.5,0)
.5
"BLD",7077,"KRN",.84,0)
.84
"BLD",7077,"KRN",3.6,0)
3.6
"BLD",7077,"KRN",3.8,0)
3.8
"BLD",7077,"KRN",9.2,0)
9.2
"BLD",7077,"KRN",9.8,0)
9.8
"BLD",7077,"KRN",9.8,"NM",0)
^9.68A^50^50
"BLD",7077,"KRN",9.8,"NM",1,0)
IBACUS1^^0^B5344535
"BLD",7077,"KRN",9.8,"NM",2,0)
IBACUS2^^0^B33412371
"BLD",7077,"KRN",9.8,"NM",3,0)
IBACV^^0^B35440815
"BLD",7077,"KRN",9.8,"NM",4,0)
IBAERR^^0^B35584421
"BLD",7077,"KRN",9.8,"NM",5,0)
IBATRX^^0^B4331034
"BLD",7077,"KRN",9.8,"NM",6,0)
IBATUTL^^0^B29162710
"BLD",7077,"KRN",9.8,"NM",7,0)
IBAUTL^^0^B18186387
"BLD",7077,"KRN",9.8,"NM",8,0)
IBCC1^^0^B14938424
"BLD",7077,"KRN",9.8,"NM",9,0)
IBCD4^^0^B18076054
"BLD",7077,"KRN",9.8,"NM",10,0)
IBCRCC^^0^B18670863
"BLD",7077,"KRN",9.8,"NM",11,0)
IBCSC5A^^0^B42023841
"BLD",7077,"KRN",9.8,"NM",12,0)
IBCSC5C^^0^B44689087
"BLD",7077,"KRN",9.8,"NM",13,0)
IBCU1^^0^B43690980
"BLD",7077,"KRN",9.8,"NM",14,0)
IBCU81^^0^B13964944
"BLD",7077,"KRN",9.8,"NM",15,0)
IBCU82^^0^B21673527
"BLD",7077,"KRN",9.8,"NM",16,0)
IBCU83^^0^B8679037
"BLD",7077,"KRN",9.8,"NM",17,0)
IBECUS2^^0^B33331721
"BLD",7077,"KRN",9.8,"NM",18,0)
IBECUSM^^0^B34547174
"BLD",7077,"KRN",9.8,"NM",19,0)
IBECUSMU^^0^B15736742
"BLD",7077,"KRN",9.8,"NM",20,0)
IBECUSO^^0^B42704619
"BLD",7077,"KRN",9.8,"NM",21,0)
IBEFURF^^0^B18456992
"BLD",7077,"KRN",9.8,"NM",22,0)
IBJTRA1^^0^B11035559
"BLD",7077,"KRN",9.8,"NM",23,0)
IBOA32^^0^B6461221
"BLD",7077,"KRN",9.8,"NM",24,0)
IBOCHK^^0^B15514184
"BLD",7077,"KRN",9.8,"NM",25,0)
IBOHCT^^0^B17631548
"BLD",7077,"KRN",9.8,"NM",26,0)
IBOHDT^^0^B23197059
"BLD",7077,"KRN",9.8,"NM",27,0)
IBOHDT1^^0^B16207159
"BLD",7077,"KRN",9.8,"NM",28,0)
IBOHLD1^^0^B18906739
"BLD",7077,"KRN",9.8,"NM",29,0)
IBOHLD2^^0^B28331010
"BLD",7077,"KRN",9.8,"NM",30,0)
IBOHPT1^^0^B25044145
"BLD",7077,"KRN",9.8,"NM",31,0)
IBOHPT2^^0^B16246897
"BLD",7077,"KRN",9.8,"NM",32,0)
IBOHRAR^^0^B26572706
"BLD",7077,"KRN",9.8,"NM",33,0)
IBPF1^^0^B7560506
"BLD",7077,"KRN",9.8,"NM",34,0)
IBRBUL^^0^B33342361
"BLD",7077,"KRN",9.8,"NM",35,0)
IBRFN^^0^B49715724
"BLD",7077,"KRN",9.8,"NM",36,0)
IBRREL^^0^B25137354
"BLD",7077,"KRN",9.8,"NM",37,0)
IBTRKR3^^0^B49526056
"BLD",7077,"KRN",9.8,"NM",38,0)
IBTUBO2^^0^B26175280
"BLD",7077,"KRN",9.8,"NM",39,0)
IBNCPBB^^0^B97718741
"BLD",7077,"KRN",9.8,"NM",40,0)
IBNCPDP2^^0^B33215225
"BLD",7077,"KRN",9.8,"NM",41,0)
IBNCPDPE^^0^B15505281
"BLD",7077,"KRN",9.8,"NM",42,0)
IBNCPDPH^^0^B26701868
"BLD",7077,"KRN",9.8,"NM",43,0)
IBNCPDPR^^0^B27008499
"BLD",7077,"KRN",9.8,"NM",44,0)
IBNCPDPU^^0^B59313586
"BLD",7077,"KRN",9.8,"NM",45,0)
IBNCPEB^^0^B28185262
"BLD",7077,"KRN",9.8,"NM",46,0)
IBNCPRR^^0^B97669056
"BLD",7077,"KRN",9.8,"NM",47,0)
IBRXUTL^^0^B74287218
"BLD",7077,"KRN",9.8,"NM",48,0)
IBRXUTL1^^0^B4282694
"BLD",7077,"KRN",9.8,"NM",49,0)
IBTRKR31^^0^B9498520
"BLD",7077,"KRN",9.8,"NM",50,0)
IBNCPRR1^^0^B3295873
"BLD",7077,"KRN",9.8,"NM","B","IBACUS1",1)

"BLD",7077,"KRN",9.8,"NM","B","IBACUS2",2)

"BLD",7077,"KRN",9.8,"NM","B","IBACV",3)

"BLD",7077,"KRN",9.8,"NM","B","IBAERR",4)

"BLD",7077,"KRN",9.8,"NM","B","IBATRX",5)

"BLD",7077,"KRN",9.8,"NM","B","IBATUTL",6)

"BLD",7077,"KRN",9.8,"NM","B","IBAUTL",7)

"BLD",7077,"KRN",9.8,"NM","B","IBCC1",8)

"BLD",7077,"KRN",9.8,"NM","B","IBCD4",9)

"BLD",7077,"KRN",9.8,"NM","B","IBCRCC",10)

"BLD",7077,"KRN",9.8,"NM","B","IBCSC5A",11)

"BLD",7077,"KRN",9.8,"NM","B","IBCSC5C",12)

"BLD",7077,"KRN",9.8,"NM","B","IBCU1",13)

"BLD",7077,"KRN",9.8,"NM","B","IBCU81",14)

"BLD",7077,"KRN",9.8,"NM","B","IBCU82",15)

"BLD",7077,"KRN",9.8,"NM","B","IBCU83",16)

"BLD",7077,"KRN",9.8,"NM","B","IBECUS2",17)

"BLD",7077,"KRN",9.8,"NM","B","IBECUSM",18)

"BLD",7077,"KRN",9.8,"NM","B","IBECUSMU",19)

"BLD",7077,"KRN",9.8,"NM","B","IBECUSO",20)

"BLD",7077,"KRN",9.8,"NM","B","IBEFURF",21)

"BLD",7077,"KRN",9.8,"NM","B","IBJTRA1",22)

"BLD",7077,"KRN",9.8,"NM","B","IBNCPBB",39)

"BLD",7077,"KRN",9.8,"NM","B","IBNCPDP2",40)

"BLD",7077,"KRN",9.8,"NM","B","IBNCPDPE",41)

"BLD",7077,"KRN",9.8,"NM","B","IBNCPDPH",42)

"BLD",7077,"KRN",9.8,"NM","B","IBNCPDPR",43)

"BLD",7077,"KRN",9.8,"NM","B","IBNCPDPU",44)

"BLD",7077,"KRN",9.8,"NM","B","IBNCPEB",45)

"BLD",7077,"KRN",9.8,"NM","B","IBNCPRR",46)

"BLD",7077,"KRN",9.8,"NM","B","IBNCPRR1",50)

"BLD",7077,"KRN",9.8,"NM","B","IBOA32",23)

"BLD",7077,"KRN",9.8,"NM","B","IBOCHK",24)

"BLD",7077,"KRN",9.8,"NM","B","IBOHCT",25)

"BLD",7077,"KRN",9.8,"NM","B","IBOHDT",26)

"BLD",7077,"KRN",9.8,"NM","B","IBOHDT1",27)

"BLD",7077,"KRN",9.8,"NM","B","IBOHLD1",28)

"BLD",7077,"KRN",9.8,"NM","B","IBOHLD2",29)

"BLD",7077,"KRN",9.8,"NM","B","IBOHPT1",30)

"BLD",7077,"KRN",9.8,"NM","B","IBOHPT2",31)

"BLD",7077,"KRN",9.8,"NM","B","IBOHRAR",32)

"BLD",7077,"KRN",9.8,"NM","B","IBPF1",33)

"BLD",7077,"KRN",9.8,"NM","B","IBRBUL",34)

"BLD",7077,"KRN",9.8,"NM","B","IBRFN",35)

"BLD",7077,"KRN",9.8,"NM","B","IBRREL",36)

"BLD",7077,"KRN",9.8,"NM","B","IBRXUTL",47)

"BLD",7077,"KRN",9.8,"NM","B","IBRXUTL1",48)

"BLD",7077,"KRN",9.8,"NM","B","IBTRKR3",37)

"BLD",7077,"KRN",9.8,"NM","B","IBTRKR31",49)

"BLD",7077,"KRN",9.8,"NM","B","IBTUBO2",38)

"BLD",7077,"KRN",19,0)
19
"BLD",7077,"KRN",19.1,0)
19.1
"BLD",7077,"KRN",101,0)
101
"BLD",7077,"KRN",409.61,0)
409.61
"BLD",7077,"KRN",771,0)
771
"BLD",7077,"KRN",870,0)
870
"BLD",7077,"KRN",8989.51,0)
8989.51
"BLD",7077,"KRN",8989.52,0)
8989.52
"BLD",7077,"KRN",8994,0)
8994
"BLD",7077,"KRN","B",.4,.4)

"BLD",7077,"KRN","B",.401,.401)

"BLD",7077,"KRN","B",.402,.402)

"BLD",7077,"KRN","B",.403,.403)

"BLD",7077,"KRN","B",.5,.5)

"BLD",7077,"KRN","B",.84,.84)

"BLD",7077,"KRN","B",3.6,3.6)

"BLD",7077,"KRN","B",3.8,3.8)

"BLD",7077,"KRN","B",9.2,9.2)

"BLD",7077,"KRN","B",9.8,9.8)

"BLD",7077,"KRN","B",19,19)

"BLD",7077,"KRN","B",19.1,19.1)

"BLD",7077,"KRN","B",101,101)

"BLD",7077,"KRN","B",409.61,409.61)

"BLD",7077,"KRN","B",771,771)

"BLD",7077,"KRN","B",870,870)

"BLD",7077,"KRN","B",8989.51,8989.51)

"BLD",7077,"KRN","B",8989.52,8989.52)

"BLD",7077,"KRN","B",8994,8994)

"BLD",7077,"QUES",0)
^9.62^^
"BLD",7077,"REQB",0)
^9.611^10^7
"BLD",7077,"REQB",3,0)
IB*2.0*195^1
"BLD",7077,"REQB",4,0)
IB*2.0*274^1
"BLD",7077,"REQB",5,0)
IB*2.0*304^1
"BLD",7077,"REQB",6,0)
IB*2.0*320^1
"BLD",7077,"REQB",8,0)
IB*2.0*356^1
"BLD",7077,"REQB",9,0)
PSO*7.0*267^1
"BLD",7077,"REQB",10,0)
IB*2.0*339^1
"BLD",7077,"REQB","B","IB*2.0*195",3)

"BLD",7077,"REQB","B","IB*2.0*274",4)

"BLD",7077,"REQB","B","IB*2.0*304",5)

"BLD",7077,"REQB","B","IB*2.0*320",6)

"BLD",7077,"REQB","B","IB*2.0*339",10)

"BLD",7077,"REQB","B","IB*2.0*356",8)

"BLD",7077,"REQB","B","PSO*7.0*267",9)

"INIT")
IB20P347
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
347^3070709
"PKG",200,22,1,"PAH",1,1,0)
^^5^5^3070709
"PKG",200,22,1,"PAH",1,1,1,0)
This patch is being released in conjunction with the Pharmacy 
"PKG",200,22,1,"PAH",1,1,2,0)
Reengineering Encapsulation effort. While no new functionality for 
"PKG",200,22,1,"PAH",1,1,3,0)
Integrated Billing package is released with this patch all direct global 
"PKG",200,22,1,"PAH",1,1,4,0)
references to the Outpatient Pharmacy files have been replaced by this 
"PKG",200,22,1,"PAH",1,1,5,0)
effort.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
51
"RTN","IB20P347")
0^^B3041428^n/a
"RTN","IB20P347",1,0)
IB20P347 ;BP/BDM - PHARMACY API CALLS POST-INSTALL ROUTINE; DECEMBER 20, 2006
"RTN","IB20P347",2,0)
 ;;2.0;INTEGRATED BILLING;**347**;21-MAR-94;Build 24
"RTN","IB20P347",3,0)
 ;
"RTN","IB20P347",4,0)
 ;This is a post-install routine
"RTN","IB20P347",5,0)
 ;
"RTN","IB20P347",6,0)
 ;The purpose of this routine is to modify six entries in file ^IBE(350.1 to comply with
"RTN","IB20P347",7,0)
 ;new pharmacy APIs.
"RTN","IB20P347",8,0)
 ;
"RTN","IB20P347",9,0)
 N CNT,CNT2,CODE,IBN,IBSUB
"RTN","IB20P347",10,0)
 F CNT=1:1 S IBSUB=$P($T(ENTRIES+CNT),";;",2) Q:IBSUB="END"  S IBN=$O(^IBE(350.1,"B",IBSUB,0)) I IBN D
"RTN","IB20P347",11,0)
 .F CNT2=1:1 S CODE=$P($T(ENTRIES+CNT2),";;",2) Q:CODE="END"  D
"RTN","IB20P347",12,0)
 .S ^IBE(350.1,IBN,20)=$P($T(CODE+1),";;",2)
"RTN","IB20P347",13,0)
 Q
"RTN","IB20P347",14,0)
ENTRIES ;Entries for file 350.1
"RTN","IB20P347",15,0)
 ;;PSO NSC RX COPAY CANCEL
"RTN","IB20P347",16,0)
 ;;PSO NSC RX COPAY NEW
"RTN","IB20P347",17,0)
 ;;PSO NSC RX COPAY UPDATE
"RTN","IB20P347",18,0)
 ;;PSO SC RX COPAY CANCEL
"RTN","IB20P347",19,0)
 ;;PSO SC RX COPAY NEW
"RTN","IB20P347",20,0)
 ;;PSO SC RX COPAY UPDATE
"RTN","IB20P347",21,0)
 ;;END
"RTN","IB20P347",22,0)
CODE ;
"RTN","IB20P347",23,0)
 ;;S:'$D(^(10)) X="" I $D(^(10)) X ^(10) S X=$S($D(Y(0)):$P(Y(0),U),1:"UNK") I $D(Y(0)) S X=X_"-"_$S($$DRUG^IBRXUTL1(+$P(Y(0),U,6))'="":$$DRUG^IBRXUTL1(+$P(Y(0),U,6)),1:"UNK DRUG"),X=$E(X,1,18)_"-"_$S($D(IBUNIT):IBUNIT,$D(IBX):$P(IBX,U,2),1:"")
"RTN","IB20P347",24,0)
 ;;END
"RTN","IBACUS1")
0^1^B5344535^B5336207
"RTN","IBACUS1",1,0)
IBACUS1 ;ALB/CPM - TRICARE PATIENT RX COPAY CHARGES ; 02-AUG-96
"RTN","IBACUS1",2,0)
 ;;2.0;INTEGRATED BILLING;**52,240,347**;21-MAR-94;Build 24
"RTN","IBACUS1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBACUS1",4,0)
 ;
"RTN","IBACUS1",5,0)
BILL(IBKEY,IBCHTRN) ; Create the TRICARE Rx copay charge.
"RTN","IBACUS1",6,0)
 ;  Input:    IBKEY  --  1 ; 2, where
"RTN","IBACUS1",7,0)
 ;                         1 = Pointer to the prescription in file #52
"RTN","IBACUS1",8,0)
 ;                         2 = Pointer to the refill in file #52.1, or
"RTN","IBACUS1",9,0)
 ;                             0 for the original fill
"RTN","IBACUS1",10,0)
 ;          IBCHTRN  --  Pointer to the transaction entry in file #351.5
"RTN","IBACUS1",11,0)
 ;
"RTN","IBACUS1",12,0)
 S IBY=1
"RTN","IBACUS1",13,0)
 I '$G(IBKEY) G BILLQ
"RTN","IBACUS1",14,0)
 I $$FILE^IBRXUTL(+IBKEY,.01)="" G BILLQ
"RTN","IBACUS1",15,0)
 ;
"RTN","IBACUS1",16,0)
 ; - need patient
"RTN","IBACUS1",17,0)
 S DFN=$$FILE^IBRXUTL(+IBKEY,2)
"RTN","IBACUS1",18,0)
 I 'DFN S IBY="-1^IB002" G BILLQ
"RTN","IBACUS1",19,0)
 ;
"RTN","IBACUS1",20,0)
 ; - need action type
"RTN","IBACUS1",21,0)
 S IBATYP=$O(^IBE(350.1,"E","TRICARE RX COPAY",0))
"RTN","IBACUS1",22,0)
 I 'IBATYP S IBY="-1^IB008" G BILLQ
"RTN","IBACUS1",23,0)
 ;
"RTN","IBACUS1",24,0)
 ; - need facility number
"RTN","IBACUS1",25,0)
 I '$$CHECK^IBECEAU(0) S IBY="-1^IB009" G BILLQ
"RTN","IBACUS1",26,0)
 ;
"RTN","IBACUS1",27,0)
 ; - need the Pharmacy service pointer; get from #350.1 and check it
"RTN","IBACUS1",28,0)
 S IBSERV=$P($G(^IBE(350.1,1,0)),"^",4)
"RTN","IBACUS1",29,0)
 I '$$SERV^IBARX1(IBSERV) S IBY="-1^IB003" G BILLQ
"RTN","IBACUS1",30,0)
 ;
"RTN","IBACUS1",31,0)
 ; - need a charge amount (from file #351.5)
"RTN","IBACUS1",32,0)
 S IBCHG=+$G(^IBA(351.5,IBCHTRN,2))
"RTN","IBACUS1",33,0)
 I 'IBCHG S IBY="-1^IB029" G BILLQ
"RTN","IBACUS1",34,0)
 ;
"RTN","IBACUS1",35,0)
 ; - set remaining variables
"RTN","IBACUS1",36,0)
 S IBDESC="TRICARE RX COPAY",IBUNIT=1
"RTN","IBACUS1",37,0)
 S IBSL="52:"_+IBKEY S:$P(IBKEY,";",2) IBSL=IBSL_";1:"_$P(IBKEY,";",2)
"RTN","IBACUS1",38,0)
 S IBFR=DT
"RTN","IBACUS1",39,0)
 ;
"RTN","IBACUS1",40,0)
 ; - add the charge to file #350
"RTN","IBACUS1",41,0)
 D ADD^IBECEAU3 I IBY<0 G BILLQ
"RTN","IBACUS1",42,0)
 ;
"RTN","IBACUS1",43,0)
 ; - release the charge to AR
"RTN","IBACUS1",44,0)
 D AR^IBR
"RTN","IBACUS1",45,0)
 ;
"RTN","IBACUS1",46,0)
 ; - update the rx transaction file (#351.5)
"RTN","IBACUS1",47,0)
 S DA=IBCHTRN,DIE="^IBA(351.5,",DR=".08////"_IBN D ^DIE K DA,DIE,DR
"RTN","IBACUS1",48,0)
 ;
"RTN","IBACUS1",49,0)
BILLQ I IBY<0 D ERRMSG^IBACVA2(1,2)
"RTN","IBACUS1",50,0)
 K IBY,IBATYP,IBSERV,IBCHG,IBDESC,IBUNIT,IBSL,IBFR
"RTN","IBACUS1",51,0)
 Q
"RTN","IBACUS1",52,0)
 ;
"RTN","IBACUS1",53,0)
 ;
"RTN","IBACUS1",54,0)
 ;
"RTN","IBACUS1",55,0)
CANC(IBCHTRN) ; Cancel the TRICARE Rx copay charge.
"RTN","IBACUS1",56,0)
 ;  Input:  IBCHTRN  --  Pointer to the transaction entry in file #351.5
"RTN","IBACUS1",57,0)
 ;
"RTN","IBACUS1",58,0)
 S IBY=1,IBDUZ=DUZ
"RTN","IBACUS1",59,0)
 S IBCHTRND=$G(^IBA(351.5,IBCHTRN,0)),DFN=+$P(IBCHTRND,"^",2)
"RTN","IBACUS1",60,0)
 S IBN=+$P(IBCHTRND,"^",8) I 'IBN G CANCQ
"RTN","IBACUS1",61,0)
 I '$$CHECK^IBECEAU(0) S IBY="-1^IB009" G CANCQ
"RTN","IBACUS1",62,0)
 S IBCRES=$O(^IBE(350.3,"B","RX CANCELLED",0)) S:'IBCRES IBCRES=5
"RTN","IBACUS1",63,0)
 ;
"RTN","IBACUS1",64,0)
 ; - cancel the charge
"RTN","IBACUS1",65,0)
 D CED^IBECEAU4(IBN) I IBY<0 G CANCQ
"RTN","IBACUS1",66,0)
 D CANC^IBECEAU4(IBN,IBCRES,1)
"RTN","IBACUS1",67,0)
 ;
"RTN","IBACUS1",68,0)
CANCQ I IBY<0 D ERRMSG^IBACVA2(0,2)
"RTN","IBACUS1",69,0)
 K IBCHTRND,IBDUZ,IBN,IBCRES,DFN,IBSITE,IBFAC,IBND,IBPARNT,IBCANC,IBH
"RTN","IBACUS1",70,0)
 K IBCANTR,IBXA,IBATYP,IBSEQNO,IBIL,IBUNIT,IBCHG,IBFR
"RTN","IBACUS1",71,0)
 Q
"RTN","IBACUS2")
0^2^B33412371^B33456496
"RTN","IBACUS2",1,0)
IBACUS2 ;ALB/CPM - TRICARE FISCAL INTERMEDIARY RX CLAIMS ;02-AUG-96
"RTN","IBACUS2",2,0)
 ;;2.0;INTEGRATED BILLING;**52,91,51,240,341,347**;21-MAR-94;Build 24
"RTN","IBACUS2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBACUS2",4,0)
 ;
"RTN","IBACUS2",5,0)
BILL(IBKEY,IBCHTRN) ; Create the TRICARE claim for the Fiscal Intermediary.
"RTN","IBACUS2",6,0)
 ;  Input:    IBKEY  --  1 ; 2, where
"RTN","IBACUS2",7,0)
 ;                         1 = Pointer to the prescription in file #52
"RTN","IBACUS2",8,0)
 ;                         2 = Pointer to the refill in file #52.1, or
"RTN","IBACUS2",9,0)
 ;                             0 for the original fill
"RTN","IBACUS2",10,0)
 ;          IBCHTRN  --  Pointer to the transaction entry in file #351.5
"RTN","IBACUS2",11,0)
 ;
"RTN","IBACUS2",12,0)
 N IBQUERY
"RTN","IBACUS2",13,0)
 S IBY=1 K IBDRX
"RTN","IBACUS2",14,0)
 I '$G(IBKEY) G BILLQ
"RTN","IBACUS2",15,0)
 I $$FILE^IBRXUTL(+IBKEY,.01)="" G BILLQ
"RTN","IBACUS2",16,0)
 S IBAMT=$P($G(^IBA(351.5,+IBCHTRN,2)),"^",5) ;  FI portion of charge
"RTN","IBACUS2",17,0)
 I 'IBAMT G BILLQ
"RTN","IBACUS2",18,0)
 ;
"RTN","IBACUS2",19,0)
 ; - derive minimal variables
"RTN","IBACUS2",20,0)
 I '$$CHECK^IBECEAU(0) S IBY="-1^IB009" G BILLQ
"RTN","IBACUS2",21,0)
 S IBSERV=$P($G(^IBE(350.1,1,0)),"^",4)
"RTN","IBACUS2",22,0)
 I '$$SERV^IBARX1(IBSERV) S IBY="-1^IB003" G BILLQ
"RTN","IBACUS2",23,0)
 ;
"RTN","IBACUS2",24,0)
 ; - establish a stub claim/receivable
"RTN","IBACUS2",25,0)
 D SET^IBR I IBY<0 G BILLQ
"RTN","IBACUS2",26,0)
 ;
"RTN","IBACUS2",27,0)
 ; - set up the following variables for claim establishment:
"RTN","IBACUS2",28,0)
 ;      .01  BILL #
"RTN","IBACUS2",29,0)
 ;      .17  ORIG CLAIM
"RTN","IBACUS2",30,0)
 ;      .2   AUTO?
"RTN","IBACUS2",31,0)
 ;      .02  DFN
"RTN","IBACUS2",32,0)
 ;      .06  TIMEFRAME
"RTN","IBACUS2",33,0)
 ;      .07  RATE TYPE
"RTN","IBACUS2",34,0)
 ;      .18  SC AT TIME?
"RTN","IBACUS2",35,0)
 ;      .04  LOCATION (WILL NEED DIVISION THAT DISPENSED)
"RTN","IBACUS2",36,0)
 ;      .05  BILL CLASSIF  (3)
"RTN","IBACUS2",37,0)
 ;      .03  EVT DATE (FILL DATE)
"RTN","IBACUS2",38,0)
 ;      151  BILL FROM
"RTN","IBACUS2",39,0)
 ;      152  BILL TO
"RTN","IBACUS2",40,0)
 K IB
"RTN","IBACUS2",41,0)
 S (IB(.02),DFN,IBDFN)=$$FILE^IBRXUTL(+IBKEY,2)
"RTN","IBACUS2",42,0)
 I 'DFN S IBY="-1^IB002" G BILLQ
"RTN","IBACUS2",43,0)
 S IB(.07)=$O(^DGCR(399.3,"B","TRICARE",0))
"RTN","IBACUS2",44,0)
 I 'IB(.07) S IBY="-1^IB059" G BILLQ
"RTN","IBACUS2",45,0)
 I $$TRANS^PSOCPTRI(+IBKEY,+$P(IBKEY,";",2),.IBDRX)<0 S IBY="-1^IB010" G BILLQ
"RTN","IBACUS2",46,0)
 ;
"RTN","IBACUS2",47,0)
 S IBIFN=PRCASV("ARREC")
"RTN","IBACUS2",48,0)
 S IB(.01)=$P(PRCASV("ARBIL"),"-",2)
"RTN","IBACUS2",49,0)
 S IB(.17)=""
"RTN","IBACUS2",50,0)
 S IB(.2)=0
"RTN","IBACUS2",51,0)
 S IB(.06)=1
"RTN","IBACUS2",52,0)
 S IB(.18)=$$SC^IBCU3(DFN)
"RTN","IBACUS2",53,0)
 S IB(.04)=1 ;  how can I get Division?  RON...
"RTN","IBACUS2",54,0)
 S IB(.05)=3
"RTN","IBACUS2",55,0)
 S (IB(.03),IB(151),IB(152))=IBDRX("FDT")
"RTN","IBACUS2",56,0)
 ;
"RTN","IBACUS2",57,0)
 ; - set 362.4 node to rx#^p50^days sup^fill date^qty^ndc
"RTN","IBACUS2",58,0)
 S IB(362.4,+IBKEY,1)=IBDRX("RX#")_"^"_$$FILE^IBRXUTL(+IBKEY,6)_"^"_IBDRX("SUP")_"^"_IBDRX("FDT")_"^"_IBDRX("QTY")_"^"_IBDRX("NDC")
"RTN","IBACUS2",59,0)
 ;
"RTN","IBACUS2",60,0)
 ; - call the autobiller module to create the claim with a default
"RTN","IBACUS2",61,0)
 ;   diagnosis and procedure for prescriptions
"RTN","IBACUS2",62,0)
 D EN^IBCD3(.IBQUERY)
"RTN","IBACUS2",63,0)
 D CLOSE^IBSDU(.IBQUERY)
"RTN","IBACUS2",64,0)
 ;
"RTN","IBACUS2",65,0)
 ; - add the payor (fiscal intermediary) to the claim
"RTN","IBACUS2",66,0)
 S IBCDFN=$$CUS^IBACUS(DFN)
"RTN","IBACUS2",67,0)
 I 'IBCDFN S IBY="-1^IB054" G BILLQ
"RTN","IBACUS2",68,0)
 S IBINS=+$G(^DPT(DFN,.312,IBCDFN,0))
"RTN","IBACUS2",69,0)
 S DIE="^DGCR(399,",DA=IBIFN,DR="112////"_IBCDFN
"RTN","IBACUS2",70,0)
 D ^DIE K DA,DR,DIE,DGRVRCAL
"RTN","IBACUS2",71,0)
 ;
"RTN","IBACUS2",72,0)
 ; - add charge to the claim
"RTN","IBACUS2",73,0)
 S IBRVCD=$P($G(^DIC(36,IBINS,0)),"^",15) ;                                      rx refill rev code
"RTN","IBACUS2",74,0)
 I IBRVCD="" S IBRVCD=$P($G(^IBE(363.1,+$P($G(^IBE(350.9,1,9)),U,12),0)),U,5) ;  CS def rev code
"RTN","IBACUS2",75,0)
 I IBRVCD="" S X=250 ;                                                           gen'l rx rev code
"RTN","IBACUS2",76,0)
 ;
"RTN","IBACUS2",77,0)
 S IBBS=$P($G(^IBE(363.1,+$P($G(^IBE(350.9,1,9)),U,12),0)),U,6) ;                CS def bedsection
"RTN","IBACUS2",78,0)
 S IBUNITS=1 ;                                    one unit
"RTN","IBACUS2",79,0)
 S IBCPT=$P($G(^IBE(350.9,1,1)),"^",30) ;         def rx refill cpt
"RTN","IBACUS2",80,0)
 S IBDIV="" ;                                     division
"RTN","IBACUS2",81,0)
 S IBAA=0 ;                                       not auto calc charges
"RTN","IBACUS2",82,0)
 S IBTYPE=3 ;                                     rx type
"RTN","IBACUS2",83,0)
 S IBITEM="" ;                                    charge item link
"RTN","IBACUS2",84,0)
 ;
"RTN","IBACUS2",85,0)
 ;
"RTN","IBACUS2",86,0)
 S X=$$ADDRC^IBCRBF(IBIFN,IBRVCD,IBBS,IBAMT,IBUNITS,IBCPT,IBDIV,IBAA,IBTYPE,IBITEM)
"RTN","IBACUS2",87,0)
 I X<0 S IBY="-1^^Unable to add Revenue Code charge to claim." G BILLQ
"RTN","IBACUS2",88,0)
 ;
"RTN","IBACUS2",89,0)
 ; - update the authorize/print fields
"RTN","IBACUS2",90,0)
 S DIE="^DGCR(399,",DA=IBIFN,DR="9////1" D ^DIE K DA,DR,DIE
"RTN","IBACUS2",91,0)
 S DIE="^DGCR(399,",DA=IBIFN,DR="12////"_DT D ^DIE K DA,DR,DIE
"RTN","IBACUS2",92,0)
 ;
"RTN","IBACUS2",93,0)
 ; - pass the claim to AR
"RTN","IBACUS2",94,0)
 D GVAR^IBCBB,ARRAY^IBCBB1,^PRCASVC6,REL^PRCASVC:PRCASV("OKAY")
"RTN","IBACUS2",95,0)
 I 'PRCASV("OKAY") S IBY="-1^^Unable to establish receivable in AR." G BILLQ
"RTN","IBACUS2",96,0)
 ;
"RTN","IBACUS2",97,0)
 ; - update the rx transaction file (#351.5)
"RTN","IBACUS2",98,0)
 S DA=IBCHTRN,DIE="^IBA(351.5,",DR=".09////"_IBIFN D ^DIE K DA,DIE,DR
"RTN","IBACUS2",99,0)
 ;
"RTN","IBACUS2",100,0)
 ; - update the AR status to Active
"RTN","IBACUS2",101,0)
 S PRCASV("STATUS")=16
"RTN","IBACUS2",102,0)
 D STATUS^PRCASVC1
"RTN","IBACUS2",103,0)
 ;
"RTN","IBACUS2",104,0)
BILLQ I IBY<0 D ERRMSG^IBACVA2(1,2)
"RTN","IBACUS2",105,0)
 K IBRVCD,IBBS,IBUNITS,IBCPT,IBDIV,IBAA,IBTYPE,IBITEM,IBAMT
"RTN","IBACUS2",106,0)
 K IBSERV,IBFAC,IBSITE,IBDRX,IB,IBCDFN,IBINS,IBIDS,IBIFN,IBDFN
"RTN","IBACUS2",107,0)
 K PRCASV,PRCAERR
"RTN","IBACUS2",108,0)
 Q
"RTN","IBACUS2",109,0)
 ;
"RTN","IBACUS2",110,0)
 ;
"RTN","IBACUS2",111,0)
CANC(IBCHTRN) ; Cancel the claim to the Fiscal Intermediary.
"RTN","IBACUS2",112,0)
 ;  Input:  IBCHTRN  --  Pointer to the transaction entry in file #351.5
"RTN","IBACUS2",113,0)
 ;
"RTN","IBACUS2",114,0)
 S IBIFN=+$P($G(^IBA(351.5,IBCHTRN,0)),"^",9)
"RTN","IBACUS2",115,0)
 I 'IBIFN G CANCQ
"RTN","IBACUS2",116,0)
 F I=0,"S" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBACUS2",117,0)
 I IB(0)="" G CANCQ
"RTN","IBACUS2",118,0)
 I +$P(IB("S"),U,16),$P(IB("S"),U,17)]"" G CANCQ
"RTN","IBACUS2",119,0)
 ;
"RTN","IBACUS2",120,0)
 S DA=IBIFN,DR="16////1;19////PRESCRIPTION REVERSED",DIE="^DGCR(399,"
"RTN","IBACUS2",121,0)
 D ^DIE K DA,DIE,DR
"RTN","IBACUS2",122,0)
 ;
"RTN","IBACUS2",123,0)
 ; - decrease out the receivable in AR
"RTN","IBACUS2",124,0)
 S DFN=+$P(IB(0),"^",2)
"RTN","IBACUS2",125,0)
 S IB("U1")=$G(^DGCR(399,IBIFN,"U1"))
"RTN","IBACUS2",126,0)
 S IBIL=$P($G(^PRCA(430,IBIFN,0)),"^")
"RTN","IBACUS2",127,0)
 S IBCHG=$S(IB("U1")']"":0,$P(IB("U1"),"^",1)]"":$P(IB("U1"),"^",1),1:0)
"RTN","IBACUS2",128,0)
 S IBCRES="TRICARE PRESCRIPTION REVERSED"
"RTN","IBACUS2",129,0)
 ;
"RTN","IBACUS2",130,0)
 S X="21^"_IBCHG_"^"_IBIL_"^"_$S('DUZ:.5,1:DUZ)_"^"_DT_"^"_IBCRES ; *341
"RTN","IBACUS2",131,0)
 D ^PRCASER1
"RTN","IBACUS2",132,0)
 I Y<0 S IBY=Y D BULL
"RTN","IBACUS2",133,0)
 ;
"RTN","IBACUS2",134,0)
CANCQ K DFN,IBIFN,IB,IBIL,IBCHG,IBCRES,IBY,X,Y
"RTN","IBACUS2",135,0)
 Q
"RTN","IBACUS2",136,0)
 ;
"RTN","IBACUS2",137,0)
 ;
"RTN","IBACUS2",138,0)
BULL ; Generate a bulletin if there is an error in canceling the claim.
"RTN","IBACUS2",139,0)
 K IBT S IBPT=$$PT^IBEFUNC(DFN)
"RTN","IBACUS2",140,0)
 S XMSUB=$E($P(IBPT,"^"),1,14)_"  "_$P(IBPT,"^",3)_" - ERROR ENCOUNTERED"
"RTN","IBACUS2",141,0)
 S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
"RTN","IBACUS2",142,0)
 S XMY(DUZ)=""
"RTN","IBACUS2",143,0)
 S IBGRP=$P($G(^XMB(3.8,+$P($G(^IBE(350.9,1,1)),"^",7),0)),"^")
"RTN","IBACUS2",144,0)
 I IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
"RTN","IBACUS2",145,0)
 ;
"RTN","IBACUS2",146,0)
 S IBT(1)="An error occurred while cancelling the Pharmacy claim to the TRICARE"
"RTN","IBACUS2",147,0)
 S IBT(2)="fiscal intermediary for the following patient:"
"RTN","IBACUS2",148,0)
 S IBT(3)=" " S IBC=3
"RTN","IBACUS2",149,0)
 S IBDUZ=DUZ D PAT^IBAERR1
"RTN","IBACUS2",150,0)
 S IBC=IBC+1,IBT(IBC)="   Bill #: "_IBIL
"RTN","IBACUS2",151,0)
 S IBC=IBC+1,IBT(IBC)=" "
"RTN","IBACUS2",152,0)
 S IBC=IBC+1,IBT(IBC)="The following error was encountered:"
"RTN","IBACUS2",153,0)
 S IBC=IBC+1,IBT(IBC)=" "
"RTN","IBACUS2",154,0)
 D ERR^IBAERR1
"RTN","IBACUS2",155,0)
 S IBC=IBC+1,IBT(IBC)=" "
"RTN","IBACUS2",156,0)
 S IBC=IBC+1,IBT(IBC)="Please review the circumstances surrounding this error and decrease"
"RTN","IBACUS2",157,0)
 S IBC=IBC+1,IBT(IBC)="out this receivable in Accounts Receivable if necessary."
"RTN","IBACUS2",158,0)
 ;
"RTN","IBACUS2",159,0)
 D ^XMD
"RTN","IBACUS2",160,0)
 K IBC,IBDUZ,IBT,IBPT,IBGRP,XMDUZ,XMTEXT,XMSUB,XMY
"RTN","IBACUS2",161,0)
 Q
"RTN","IBACV")
0^3^B35440815^B35472344
"RTN","IBACV",1,0)
IBACV ;WOIFO/SS-COMBAT VET UTILITIES ;7-AUG-03
"RTN","IBACV",2,0)
 ;;2.0;INTEGRATED BILLING;**234,247,275,339,347** ;21-MAR-94;Build 24
"RTN","IBACV",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBACV",4,0)
 ;
"RTN","IBACV",5,0)
 ;To replace CL^SDCO21 with CL^IBACV that wraps out both CL^SDCO21 and $$CVEDT^DGCV
"RTN","IBACV",6,0)
CL(IBDFN,IBSDDT,IBSDOE,IBSDCLY) ;Build Classification Array
"RTN","IBACV",7,0)
 ; Input -- DFN Patient file IEN 
"RTN","IBACV",8,0)
 ; SDDT Date/Time [Optional]
"RTN","IBACV",9,0)
 ; SDOE Outpatient Encounter file IEN [Optional]
"RTN","IBACV",10,0)
 ; Output -- SDCLY Classification Array
"RTN","IBACV",11,0)
 ; Subscripted by Class. Type file (#409.41) IEN
"RTN","IBACV",12,0)
 ;
"RTN","IBACV",13,0)
 D CL^SDCO21(IBDFN,$G(IBSDDT),$G(IBSDOE),.IBSDCLY)
"RTN","IBACV",14,0)
 Q
"RTN","IBACV",15,0)
 ;
"RTN","IBACV",16,0)
 ;returns CV status as:
"RTN","IBACV",17,0)
 ; current_CV_status^end_date^if_ever_had_CV_status
"RTN","IBACV",18,0)
CVEDT(IBDFN,IBDT) ;
"RTN","IBACV",19,0)
 N IBRET S IBRET=$$CVEDT^DGCV($G(IBDFN),$G(IBDT))
"RTN","IBACV",20,0)
 Q (+$P(IBRET,"^",3))_"^"_(+$P(IBRET,"^",2))_"^"_(+$P(IBRET,"^",1)) ;swop
"RTN","IBACV",21,0)
 ;
"RTN","IBACV",22,0)
 ;/**
"RTN","IBACV",23,0)
 ;Return the classification description of code sets for #.03 in #351.2.
"RTN","IBACV",24,0)
 ; Input:
"RTN","IBACV",25,0)
 ; X -- Patient class [1-ao|2-ir|3-swa|4-sc|5-mst|6-hnc|7-cv|8-SHAD]
"RTN","IBACV",26,0)
 ; IBCASE -- "M" - mixed case (the first letter is uppercase and others-lowercase)
"RTN","IBACV",27,0)
PATTYPE(X,IBCASE) ; */
"RTN","IBACV",28,0)
 N IBZ
"RTN","IBACV",29,0)
 S IBZ=$S(X=1:"AGENT ORANGE",X=2:"IONIZING RADIATION",X=3:"SOUTHWEST ASIA",X=4:"SERVICE CONNECTED",X=5:"MILITARY SEXUAL TRAUMA",X=6:"HEAD/NECK CANCER",X=7:"COMBAT VETERAN",X=8:"PROJECT 112/SHAD",1:"SPECIAL")
"RTN","IBACV",30,0)
 Q:$G(IBCASE)="M" $$LOWER^VALM1(IBZ)
"RTN","IBACV",31,0)
 Q IBZ
"RTN","IBACV",32,0)
 ;
"RTN","IBACV",33,0)
PATTYAB(X) ; Return External Abbreviation of Special Inpatient Billing Case Patient Type (#351.2,.03)
"RTN","IBACV",34,0)
 ; Input: 351.2, .03 internal value
"RTN","IBACV",35,0)
 N IBZ S X=$G(X)
"RTN","IBACV",36,0)
 S IBZ=$S(X=1:"AO",X=2:"IR",X=3:"SWA",X=4:"SC",X=5:"MST",X=6:"HNC",X=7:"CV",X=8:"SHAD",1:"UNK")
"RTN","IBACV",37,0)
 Q IBZ
"RTN","IBACV",38,0)
 ;
"RTN","IBACV",39,0)
 ;if Combat Vet sends e-mail to mailgroup "IB COMBAT VET RX COPAY"
"RTN","IBACV",40,0)
 ;IBDFN-patient IEN, IBDT - date, IBRXPTR - pointer to #52 file to get prescription #
"RTN","IBACV",41,0)
RXALRT(IBDFN,IBDT,IBRXPTR) ;
"RTN","IBACV",42,0)
 N IB1
"RTN","IBACV",43,0)
 S IB1=$$CVEDT(IBDFN,$G(IBDT))
"RTN","IBACV",44,0)
 I +IB1 D EMAIL(IBDFN,$G(IBDT),$P(IB1,"^",2),$G(IBRXPTR))
"RTN","IBACV",45,0)
 Q
"RTN","IBACV",46,0)
 ;sends e-mail to mail group IB COMBAT VET RX COPAY
"RTN","IBACV",47,0)
EMAIL(DFN,IBEFDT,IBEXPDT,IBRX) ;
"RTN","IBACV",48,0)
 N IBTODAY,IBPAT,IBT,IBSSN
"RTN","IBACV",49,0)
 N XMSUB,XMY,XMTEXT,XMDUZ
"RTN","IBACV",50,0)
 N Y D NOW^%DTC S Y=%\1 X ^DD("DD") S IBTODAY=Y
"RTN","IBACV",51,0)
 I +$G(DFN)>0 D
"RTN","IBACV",52,0)
 . N VADM,VA,VAERR
"RTN","IBACV",53,0)
 . D DEM^VADPT
"RTN","IBACV",54,0)
 . S IBPAT=$G(VADM(1))
"RTN","IBACV",55,0)
 . S IBSSN=$P($G(VADM(2)),"^",2)
"RTN","IBACV",56,0)
 I $G(IBRX) S IBRX=$$FILE^IBRXUTL(IBRX,.01) ;get RX number
"RTN","IBACV",57,0)
 S:IBPAT="" IBPAT="Unknown"
"RTN","IBACV",58,0)
 S XMSUB="COMBAT VET RX COPAY REVIEW NEEDED"
"RTN","IBACV",59,0)
 S XMY("G.IB COMBAT VET RX COPAY")=""
"RTN","IBACV",60,0)
 S XMTEXT="IBT(",XMDUZ="INTEGRATED BILLING PACKAGE"
"RTN","IBACV",61,0)
 S IBT(1,0)="PATIENT: "_IBPAT
"RTN","IBACV",62,0)
 I $G(IBEXPDT)>0 S Y=IBEXPDT X ^DD("DD") S IBT(1,0)=IBT(1,0)_" COMBAT VET until: "_Y
"RTN","IBACV",63,0)
 S IBT(2,0)="SSN: "_IBSSN
"RTN","IBACV",64,0)
 S IBT(3,0)=""
"RTN","IBACV",65,0)
 S IBT(4,0)=$S($G(IBRX)'="":"RX#: "_$G(IBRX),1:"")
"RTN","IBACV",66,0)
 S IBT(5,0)="RX RELEASE DATE: "_IBTODAY
"RTN","IBACV",67,0)
 S IBT(6,0)=""
"RTN","IBACV",68,0)
 S IBT(7,0)="The above patient has a Combat Veteran status. Please review this"
"RTN","IBACV",69,0)
 S IBT(8,0)="prescription to determine if the RX Copay charge should be cancelled."
"RTN","IBACV",70,0)
 S IBT(9,0)=""
"RTN","IBACV",71,0)
 D ^XMD
"RTN","IBACV",72,0)
 Q
"RTN","IBACV",73,0)
 ;
"RTN","IBACV",74,0)
 ;--------------------------------------------------------------------
"RTN","IBACV",75,0)
 ;is called from PROC^IBAMTC for each active inpatient
"RTN","IBACV",76,0)
IFCVEXP(IBDFN,IBNJDT,IB405) ;
"RTN","IBACV",77,0)
 ;Input:IBDFN1 - patient's ien in PATIENT file
"RTN","IBACV",78,0)
 ; IBNJDT - Nightly Job date 
"RTN","IBACV",79,0)
 ; IB405 - ptr to #405
"RTN","IBACV",80,0)
 N IBTSTDT,IBPAT,IBZ,IBEXPIR,IBADM
"RTN","IBACV",81,0)
 S IBPAT=$$PT^IBEFUNC(IBDFN)
"RTN","IBACV",82,0)
 S (IBZ,IBEXPIR)=0
"RTN","IBACV",83,0)
 S IBZ=$$CVEDT^IBACV(IBDFN,IBNJDT)
"RTN","IBACV",84,0)
 I $P(IBZ,"^",3)=0 Q  ;patient has never been CV
"RTN","IBACV",85,0)
 S IBEXPIR=+$P(IBZ,"^",2)\1
"RTN","IBACV",86,0)
 I IBEXPIR>IBNJDT Q  ;expires in the future
"RTN","IBACV",87,0)
 ;get last date when Nightly job checked CV status for inpatients
"RTN","IBACV",88,0)
 S IBTSTDT=$$XTMPLST()
"RTN","IBACV",89,0)
 ;if ^XTMP is not there then make the last CV check date as TODAY-7
"RTN","IBACV",90,0)
 I IBTSTDT=0 S IBTSTDT=$$CHNGDATE^IBAHVE3(IBNJDT,-7) D SETXTMP0(IBTSTDT)
"RTN","IBACV",91,0)
  S IBADM=+$G(^DGPM(IB405,0))\1 ;admission/movement date
"RTN","IBACV",92,0)
 I IBTSTDT'<IBNJDT Q
"RTN","IBACV",93,0)
 ;check for all the days since the last check date thru today
"RTN","IBACV",94,0)
 F  D  Q:(IBTSTDT'<IBNJDT)!(IBTSTDT=IBEXPIR)
"RTN","IBACV",95,0)
 . S IBTSTDT=$$CHNGDATE^IBAHVE3(IBTSTDT,+1) ;next date
"RTN","IBACV",96,0)
 . ;quit if the date is before the admission
"RTN","IBACV",97,0)
 . I IBTSTDT<IBADM Q
"RTN","IBACV",98,0)
 . ;send alert if CV expires this day
"RTN","IBACV",99,0)
 . I IBEXPIR=IBTSTDT D SETXTPM(IBDFN,IBTSTDT,IBEXPIR,IBADM,IBPAT)
"RTN","IBACV",100,0)
 Q
"RTN","IBACV",101,0)
 ;
"RTN","IBACV",102,0)
XTMPLST() ;get the last CV check date in ^XTMP
"RTN","IBACV",103,0)
 Q +$P($G(^XTMP("IBCVEXPDT",0)),"^",2)
"RTN","IBACV",104,0)
 ;
"RTN","IBACV",105,0)
SETXTPM(IBDFN,IBCHKDT,IBEXP,IBADMIS,IBPT) ;save info in ^XTMP
"RTN","IBACV",106,0)
 ;Input:IBDFN - patient's ien in PATIENT file
"RTN","IBACV",107,0)
 ; IBEXP - CV expiration date
"RTN","IBACV",108,0)
 ; IBADMIS - admission/movement date
"RTN","IBACV",109,0)
 ; IBPT - patient's info
"RTN","IBACV",110,0)
 S ^XTMP("IBCVEXPDT",IBDFN)=IBDFN_"^"_IBCHKDT_"^"_IBEXP_"^"_IBADMIS_"^"_$P(IBPT,"^",1,2)
"RTN","IBACV",111,0)
 Q
"RTN","IBACV",112,0)
 ;
"RTN","IBACV",113,0)
 ;is called from IBAMTC after PROC^IBAMTC and sends e-mail alert 
"RTN","IBACV",114,0)
 ;with the list of inpatient's with CV expired
"RTN","IBACV",115,0)
CVEXMAIL(IBDT) ;send all e-mails
"RTN","IBACV",116,0)
 N Y,IBT,IBZ1,IBZ2,IBC,IBT,IBTOTAL
"RTN","IBACV",117,0)
 S IBC=0,IBTOTAL=0
"RTN","IBACV",118,0)
 ;loop thru ^XTMP
"RTN","IBACV",119,0)
 S IBZ1=0 F  S IBZ1=$O(^XTMP("IBCVEXPDT",IBZ1)) Q:+IBZ1=0  D
"RTN","IBACV",120,0)
 . D HEADER
"RTN","IBACV",121,0)
 . S IBZ2=$G(^XTMP("IBCVEXPDT",IBZ1))
"RTN","IBACV",122,0)
 . I IBZ2'="" S IBTOTAL=IBTOTAL+1 D MKEMAIL($P(IBZ2,U,3),$P(IBZ2,U,4),$P(IBZ2,U,5),$P(IBZ2,U,6))
"RTN","IBACV",123,0)
 I IBC>0 D
"RTN","IBACV",124,0)
 . D FOOTER(IBTOTAL)
"RTN","IBACV",125,0)
 . D SEND^IBACVA2
"RTN","IBACV",126,0)
 D SETXTMP0(IBDT)
"RTN","IBACV",127,0)
 Q
"RTN","IBACV",128,0)
 ;
"RTN","IBACV",129,0)
HEADER ;prints a header for the e-mail
"RTN","IBACV",130,0)
 I IBC>0 Q
"RTN","IBACV",131,0)
 S XMSUB="INPATIENTS' COMBAT VET STATUS EXPIRED"
"RTN","IBACV",132,0)
 N IBX S IBX="",$P(IBX,"=",70)=""
"RTN","IBACV",133,0)
 S IBC=IBC+1,IBT(IBC)="The following patients whose records indicate that they had CV status, were"
"RTN","IBACV",134,0)
 S IBC=IBC+1,IBT(IBC)="admitted for inpatient care with CV status, and their CV status has expired"
"RTN","IBACV",135,0)
 S IBC=IBC+1,IBT(IBC)="during their stays. Please check their CV exp date again before adjusting"
"RTN","IBACV",136,0)
 S IBC=IBC+1,IBT(IBC)="their billings accordingly."
"RTN","IBACV",137,0)
 S IBC=IBC+1,IBT(IBC)=""
"RTN","IBACV",138,0)
 S IBC=IBC+1,IBT(IBC)=$$LRJ("Patient NAME",23)_$$LRJ("SSN",14)_$$LRJ("CV exp. date",20)_$$LRJ("Date of admission",20)
"RTN","IBACV",139,0)
 S IBC=IBC+1,IBT(IBC)=IBX
"RTN","IBACV",140,0)
 Q
"RTN","IBACV",141,0)
FOOTER(IBTOTAL) ;
"RTN","IBACV",142,0)
 S IBC=IBC+1,IBT(IBC)=""
"RTN","IBACV",143,0)
 S IBC=IBC+1,IBT(IBC)="Total: "_IBTOTAL_" patient(s)"
"RTN","IBACV",144,0)
 Q
"RTN","IBACV",145,0)
 ;
"RTN","IBACV",146,0)
MKEMAIL(IBEXP,IBADM,IBNAME,IBSSN) ;
"RTN","IBACV",147,0)
 ;send e-mail alert if CV does expire today
"RTN","IBACV",148,0)
 N Y
"RTN","IBACV",149,0)
 S Y=IBEXP D DD^%DT S IBEXP=Y
"RTN","IBACV",150,0)
 S Y=IBADM D DD^%DT S IBADM=Y
"RTN","IBACV",151,0)
 S IBC=IBC+1,IBT(IBC)=$$LRJ($E(IBNAME,1,21),23)_$$LRJ(IBSSN,14)_$$LRJ(IBEXP,20)_$$LRJ(IBADM,20)
"RTN","IBACV",152,0)
 Q
"RTN","IBACV",153,0)
 ;
"RTN","IBACV",154,0)
SETXTMP0(IBDT) ;set the new "last CV check date" in ^XTMP
"RTN","IBACV",155,0)
 N IBPURGDT S IBPURGDT=+$$CHNGDATE^IBAHVE3(IBDT,+7)
"RTN","IBACV",156,0)
 K ^XTMP("IBCVEXPDT")
"RTN","IBACV",157,0)
 S ^XTMP("IBCVEXPDT",0)=IBPURGDT_"^"_IBDT_"^LAST DATE NIGHTLY JOB CHECKED COMBAT VET EXPIRATION FOR INPATIENTS"
"RTN","IBACV",158,0)
 Q
"RTN","IBACV",159,0)
 ;
"RTN","IBACV",160,0)
 ;---
"RTN","IBACV",161,0)
 ;adds spaces on right/left or truncates to make return string IBLEN characters long
"RTN","IBACV",162,0)
 ;IBST- original string
"RTN","IBACV",163,0)
 ;IBLEN - desired length
"RTN","IBACV",164,0)
 ;IBCHR -character (default = SPACE)
"RTN","IBACV",165,0)
 ;IBSIDE - on which side to add characters (default = RIGHT)
"RTN","IBACV",166,0)
LRJ(IBST,IBLEN,IBCHR,IBSIDE) ;
"RTN","IBACV",167,0)
 N Y S $P(Y,$S($L($G(IBCHR)):IBCHR,1:" "),$S(IBLEN-$L(IBST)<0:1,1:IBLEN-$L(IBST)+1))=""
"RTN","IBACV",168,0)
 Q $E($S($G(IBSIDE)="L":Y_IBST,1:IBST_Y),1,IBLEN)
"RTN","IBACV",169,0)
 ;---
"RTN","IBACV",170,0)
 ;
"RTN","IBAERR")
0^4^B35584421^B35583470
"RTN","IBAERR",1,0)
IBAERR ;ALB/AAS - INTEGRATED BILLING ERROR PROCESSING ROUTINE ; 14-FEB-91
"RTN","IBAERR",2,0)
 ;;2.0; INTEGRATED BILLING ;**7,70,347**; 21-MAR-94;Build 24
"RTN","IBAERR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBAERR",4,0)
% ;  -error processor
"RTN","IBAERR",5,0)
 ;
"RTN","IBAERR",6,0)
 ; Quit if the Means Test Nightly Compilation or Discharge job called
"RTN","IBAERR",7,0)
 ; routine IBR directly.
"RTN","IBAERR",8,0)
 Q:$G(IBJOB)=1!($G(IBJOB)=2)
"RTN","IBAERR",9,0)
 ;
"RTN","IBAERR",10,0)
 ; If Means Test charge, divert control to routine IBAERR1.
"RTN","IBAERR",11,0)
 I $D(IBNOS),$P($G(^IB(+IBNOS,0)),"^",16) S IBY=Y G ^IBAERR1
"RTN","IBAERR",12,0)
 ;
"RTN","IBAERR",13,0)
 ; -- If copay exemption divert control to routine IBAERR2
"RTN","IBAERR",14,0)
 I $D(IBEXERR) G ^IBAERR2
"RTN","IBAERR",15,0)
 ;
"RTN","IBAERR",16,0)
 I $D(ZTQUEUED) D BULL G END
"RTN","IBAERR",17,0)
 G:+Y>0 END
"RTN","IBAERR",18,0)
 S X2=$P(Y,"^",2) F K=1:1 S X=$P(X2,";",K) Q:X=""  S X1=$O(^IBE(350.8,"AC",X,0)) I $D(^IBE(350.8,+X1,0)) S X3="E"_$P(^(0),"^",5) D @X3
"RTN","IBAERR",19,0)
 I $P(Y,"^",3)]"" W !,$P(Y,"^",3)
"RTN","IBAERR",20,0)
END K VA,VADM,VAERR
"RTN","IBAERR",21,0)
 Q
"RTN","IBAERR",22,0)
 ;
"RTN","IBAERR",23,0)
E1 W !,$P(^IBE(350.8,+X1,0),"^",2)
"RTN","IBAERR",24,0)
 Q
"RTN","IBAERR",25,0)
 ;
"RTN","IBAERR",26,0)
E2 ;
"RTN","IBAERR",27,0)
 Q
"RTN","IBAERR",28,0)
E3 ; -- Send no service bulletin
"RTN","IBAERR",29,0)
 K XMY,IBTXT
"RTN","IBAERR",30,0)
 S XMSUB="INTEGRATED BILLING BACKGROUND ERROR",XMDUZ="INTEGRATED BILLING PACKAGE"
"RTN","IBAERR",31,0)
 S IBTXT(1)="Processing of Pharmacy co-pay entries in Integrated Billing has"
"RTN","IBAERR",32,0)
 S IBTXT(2)="Stopped.",IBTXT(3)=" "
"RTN","IBAERR",33,0)
 S IBTXT(4)="The Pharmacy Service Pointer does not match any entries in the "
"RTN","IBAERR",34,0)
 S IBTXT(5)="IB ACTION TYPE file."
"RTN","IBAERR",35,0)
 S IBTXT(6)=" "
"RTN","IBAERR",36,0)
 S IBTXT(7)="Immediate action required."
"RTN","IBAERR",37,0)
 S IBTXT(8)="Check the IB SERVICE/SECTION in File #59."
"RTN","IBAERR",38,0)
 S IBTXT(9)="It must match the SERVICE field for pharmacy action types in the "
"RTN","IBAERR",39,0)
 S IBTXT(10)="IB ACTION TYPE file.  (internal entry number 1 is checked)"
"RTN","IBAERR",40,0)
 D SEND
"RTN","IBAERR",41,0)
 Q
"RTN","IBAERR",42,0)
 ;
"RTN","IBAERR",43,0)
E4 ; -- send missing number of days charges held bulletin
"RTN","IBAERR",44,0)
 K XMY,IBTXT
"RTN","IBAERR",45,0)
 S XMSUB="INTEGRATED BILLING BACKGROUND ERROR",XMDUZ="INTEGRATED BILLING PACKAGE"
"RTN","IBAERR",46,0)
 S IBTXT(1)="The nightly job to auto-release patient charges on hold did not run."
"RTN","IBAERR",47,0)
 S IBTXT(2)="The NUMBER OF DAYS PT CHARGES HELD field of the IB SITE PARAMETERS"
"RTN","IBAERR",48,0)
 S IBTXT(3)="file is blank."
"RTN","IBAERR",49,0)
 S IBTXT(4)=" "
"RTN","IBAERR",50,0)
 S IBTXT(5)="Immediate action required.  Select the option 'MCCR Site Parameter"
"RTN","IBAERR",51,0)
 S IBTXT(6)="Display/Edit' to enter the required information."
"RTN","IBAERR",52,0)
 D SEND
"RTN","IBAERR",53,0)
 Q
"RTN","IBAERR",54,0)
 ;
"RTN","IBAERR",55,0)
BULL ;  -send error bulletin to group when error occurs in background
"RTN","IBAERR",56,0)
 ;
"RTN","IBAERR",57,0)
 K XMY,IBTXT
"RTN","IBAERR",58,0)
 S XMSUB="INTEGRATED BILLING BACKGROUND ERROR",XMDUZ="INTEGRATED BILLING PACKAGE"
"RTN","IBAERR",59,0)
 S IBTXT(1)="Processing of entries in Integrated Billing has"
"RTN","IBAERR",60,0)
 S IBTXT(2)="been suspended "_$S('$D(IBTAG):"while passing to AR the following",IBTAG=2:"while processing new/renew Rxs: ",IBTAG=3:"while canceling: ",1:"while updating:"),IBTXT(3)=" ",IBC=3
"RTN","IBAERR",61,0)
 I $D(IBSAVX)!($D(IBSAVXU)),'$D(IBNOS) D SAVX
"RTN","IBAERR",62,0)
 I $D(IBNOS) F IBI=1:1 S IBNOS1=$P(IBNOS,"^",IBI) Q:'IBNOS1  I $D(^IB(IBNOS1,0)) S IBNOD=^(0) D BD
"RTN","IBAERR",63,0)
 S IBC=IBC+1,IBTXT(IBC)=""
"RTN","IBAERR",64,0)
 S IBC=IBC+1,IBTXT(IBC)="You should determine if these co-payments have been passed to"
"RTN","IBAERR",65,0)
 S IBC=IBC+1,IBTXT(IBC)="Accounts Receivable."
"RTN","IBAERR",66,0)
 S IBC=IBC+1,IBTXT(IBC)="The following error(s) was encountered:",IBC=IBC+1,IBTXT(IBC)=""
"RTN","IBAERR",67,0)
 D ERRTXT
"RTN","IBAERR",68,0)
 S IBC=IBC+1,IBTXT(IBC)=""
"RTN","IBAERR",69,0)
 I $D(IBWHER) S IBC=IBC+1,IBTXT(IBC)=$P($T(IBWHER+IBWHER),";;",2,99)
"RTN","IBAERR",70,0)
 ;
"RTN","IBAERR",71,0)
SEND S XMTEXT="IBTXT(",XMY(DUZ)=""
"RTN","IBAERR",72,0)
 ;
"RTN","IBAERR",73,0)
 S IBGRP=$S($D(^IBE(350.9,1,0)):$P(^(0),"^",9),1:"") F IBI=0:0 S IBI=$O(^XMB(3.8,+IBGRP,1,"B",IBI)) Q:'IBI  S XMY(IBI)=""
"RTN","IBAERR",74,0)
 D ^XMD K XMSUB,XMY,XMDUZ,XMTEXT,IBTXT,IBC,IBNOD,IBNOS1,IBI
"RTN","IBAERR",75,0)
 Q
"RTN","IBAERR",76,0)
 ;
"RTN","IBAERR",77,0)
ERRTXT S X2=$P(Y,"^",2) F K=1:1 S X=$P(X2,";",K) Q:X=""  S X1=$O(^IBE(350.8,"AC",X,0)),IBC=IBC+1,IBTXT(IBC)="    "_$S($D(^IBE(350.8,+X1,0)):$P(^(0),"^",2),1:"Unknown Error")
"RTN","IBAERR",78,0)
 I $P(Y,"^",3)]"" S IBC=IBC+1,IBTXT(IBC)="    "_$P(Y,"^",3)
"RTN","IBAERR",79,0)
 Q
"RTN","IBAERR",80,0)
 ;
"RTN","IBAERR",81,0)
BD I IBI=1 S DFN=$P(IBNOD,"^",2),IBATYPN=$S($D(^IBE(350.1,$P(IBNOD,"^",3),0)):$P(^(0),"^"),1:"") D DEM
"RTN","IBAERR",82,0)
 S IBC=IBC+1,IBTXT(IBC)="   "_$E($P(IBNOD,"^")_"           ",1,14)_$E($P(IBNOD,"^",8)_"                      ",1,24)_$E($P(IBNOD,"^",11)_"            ",1,12)_"  $"_$P(IBNOD,"^",7)
"RTN","IBAERR",83,0)
 Q
"RTN","IBAERR",84,0)
DEM N X,Y D DEM^VADPT
"RTN","IBAERR",85,0)
 S IBC=IBC+1,IBTXT(IBC)=" Patient: "_VADM(1)_"   Pt. Id: "_VA("PID")_"  Type: "_IBATYPN
"RTN","IBAERR",86,0)
 Q
"RTN","IBAERR",87,0)
 ;
"RTN","IBAERR",88,0)
SAVX S IBAX=$S($D(IBSAVXU):IBSAVXU,$D(IBSAVX):IBSAVX,1:"") Q:IBAX=""
"RTN","IBAERR",89,0)
 S IBATYPN=$S('$P(IBAX,"^",3):"",$D(^IBE(350.1,$P(IBAX,"^",3),0)):$P(^(0),"^",1),1:""),DFN=$P(IBAX,"^",2) D DEM
"RTN","IBAERR",90,0)
 S IBC=IBC+1,IBTXT(IBC)=" Service: "_$S($D(^DIC(49,+IBAX,0)):$P(^(0),"^"),1:"")
"RTN","IBAERR",91,0)
 S IBC=IBC+1,IBTXT(IBC)="    User: "_$S($D(^VA(200,+$P(IBAX,"^",4),0)):$P(^(0),"^"),$D(^VA(200,+DUZ,0)):$P(^(0),"^"),1:"")
"RTN","IBAERR",92,0)
 S IB="" F  S IB=$O(IBSAVX(IB)) Q:IB=""  D
"RTN","IBAERR",93,0)
 .K IBARXN I +$P(IBSAVX(IB),"^",1)=52 S IBARXN="Rx# "_$$FILE^IBRXUTL(+$P($P(IBSAVX(IB),"^"),":",2),.01) I $P($P(IBSAVX(IB),"^"),";",2)'="" S IBARXN=IBARXN_"/Refill# "_$P($P($P(IBSAVX(IB),"^"),";",2),":",2)
"RTN","IBAERR",94,0)
 .S IBC=IBC+1,IBTXT(IBC)="   Entry: "_$S($D(IBARXN):IBARXN,1:$P(IBSAVX(IB),"^",1)) K IBARXN
"RTN","IBAERR",95,0)
 S IB="" F  S IB=$O(IBSAVXU(IB)) Q:IB=""  S IBC=IBC+1,IBTXT(IBC)="  Ref No: "_$S($D(^IB(+IB,0)):$P(^(0),"^"),1:"")
"RTN","IBAERR",96,0)
 Q
"RTN","IBAERR",97,0)
 ;
"RTN","IBAERR",98,0)
1 S Y="-1^IB001" Q  ;patient eligibility data not calculated
"RTN","IBAERR",99,0)
 Q
"RTN","IBAERR",100,0)
IBWHER ;
"RTN","IBAERR",101,0)
 ;;Error occurred before Integrated Billing entry created, Reprint labels or       recancel after correcting error.
"RTN","IBAERR",102,0)
 ;;Error occurred after Integrated Billing entry created but Accounts Receivable   not updated.
"RTN","IBAERR",103,0)
 ;;Error occurred during posting to Accounts Receivable.  Check to see if amount  passed!
"RTN","IBAERR",104,0)
 ;;Error occurred after successful passing of charges to AR, IB entry may not be   properly updated.
"RTN","IBAERR",105,0)
 ;;Error occurred during eligibility determination for Co-pay.
"RTN","IBATRX")
0^5^B4331034^B3695019
"RTN","IBATRX",1,0)
IBATRX ;LL/ELZ - TRANSFER PRICING RX ROUTINE ; 24-FEB-99
"RTN","IBATRX",2,0)
 ;;2.0;INTEGRATED BILLING;**115,309,347**;21-MAR-94;Build 24
"RTN","IBATRX",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBATRX",4,0)
 ;
"RTN","IBATRX",5,0)
RX(DFN,DT1,DT2,ARRAY) ; look up all rxs for a patient and date range
"RTN","IBATRX",6,0)
 ;
"RTN","IBATRX",7,0)
 N PIFN,RIFN,IBX,IBY,DTE,DTR,RX,IBCNT,IBRX0,IBRX2,IBS,IBRF,LIST,LIST2,NODE,RFNUM,IBRX K ARRAY,POARR S POARR=0
"RTN","IBATRX",8,0)
 S IBCNT=0,DT1=$G(DT1)-.0001,DT2=$G(DT2) S:'DT2 DT2=9999999 Q:'$G(DFN)
"RTN","IBATRX",9,0)
 S LIST="IBRXARR"
"RTN","IBATRX",10,0)
 D PROF^PSO52API(DFN,LIST,DT1,DT2)
"RTN","IBATRX",11,0)
 S DTE=0 F  S DTE=$O(^TMP($J,LIST,"B",DTE)) Q:'DTE  D
"RTN","IBATRX",12,0)
 . S IBRX=0 F  S IBRX=$O(^TMP($J,LIST,"B",DTE,IBRX)) Q:'IBRX  D
"RTN","IBATRX",13,0)
 .. S IBRX(0)=$$RXZERO^IBRXUTL(DFN,IBRX)
"RTN","IBATRX",14,0)
 .. S IBRX(2)=$$RXSEC^IBRXUTL(DFN,IBRX)
"RTN","IBATRX",15,0)
 .. D ZERO^IBRXUTL(+$P(IBRX(0),"^",6))
"RTN","IBATRX",16,0)
 .. ; original fill
"RTN","IBATRX",17,0)
 .. S DTR=$P(IBRX(2),"^",2) I DTR'<DT1,DTR'>DT2 D
"RTN","IBATRX",18,0)
 ... S ARRAY(IBRX,+DTR)=$P(IBRX(0),"^")_"^"_0_"^"_$P(IBRX(0),"^",6)_"^"_$G(^TMP($J,"IBDRUG",+$P(IBRX(0),"^",6),.01))_"^"_$P(IBRX(0),"^",7)_"^"_$P(IBRX(0),"^",17)
"RTN","IBATRX",19,0)
 .. ; refills
"RTN","IBATRX",20,0)
 .. S NODE="R"
"RTN","IBATRX",21,0)
 .. S LIST2="IBRXARR2"
"RTN","IBATRX",22,0)
 .. D RX^PSO52API(DFN,LIST2,IBRX,,NODE,,)
"RTN","IBATRX",23,0)
 .. S IBRF=0 F  S IBRF=$O(^TMP($J,LIST2,DFN,IBRX,"RF",IBRF)) Q:IBRF'>0  D
"RTN","IBATRX",24,0)
 ... S IBY=$$ZEROSUB^IBRXUTL(DFN,IBRX,IBRF) Q:IBY=""
"RTN","IBATRX",25,0)
 ... S ARRAY(IBRX,+IBY)=$P(IBRX(0),"^")_"^"_IBRF_"^"_$P(IBRX(0),"^",6)_"^"_$G(^TMP($J,"IBDRUG",+$P(IBRX(0),"^",6),.01))_"^"_$P(IBY,"^",4)_"^"_$P(IBY,"^",11)
"RTN","IBATRX",26,0)
 .. K ^TMP($J,LIST2)
"RTN","IBATRX",27,0)
 K ^TMP($J,"IBDRUG"),^TMP($J,LIST)
"RTN","IBATRX",28,0)
 Q
"RTN","IBATUTL")
0^6^B29162710^B29255099
"RTN","IBATUTL",1,0)
IBATUTL ;LL/ELZ - TRANSFER PRICING UTILITES ; 3-SEP-1998
"RTN","IBATUTL",2,0)
 ;;2.0;INTEGRATED BILLING;**115,266,347**;21-MAR-94;Build 24
"RTN","IBATUTL",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBATUTL",4,0)
 ;
"RTN","IBATUTL",5,0)
SL() ; -- called to select a patient or enrolled facility
"RTN","IBATUTL",6,0)
 N X,Y,DTOUT,DUOUT,DIRUT,DIROUT,DIR
"RTN","IBATUTL",7,0)
 S DIR(0)="350.9,10.01",DIR("A")="Select Patient or Enrolled Facility"
"RTN","IBATUTL",8,0)
 D ^DIR
"RTN","IBATUTL",9,0)
 Q Y
"RTN","IBATUTL",10,0)
SLPT() ; -- called to select a patient, returns 0 or patient dfn
"RTN","IBATUTL",11,0)
 N X,Y,DIC,DTOUT,DUOUT
"RTN","IBATUTL",12,0)
 S DIC="^IBAT(351.6,",DIC(0)="AEMQ" D ^DIC
"RTN","IBATUTL",13,0)
 Q $S(+Y>0:+Y,1:0)
"RTN","IBATUTL",14,0)
 ;
"RTN","IBATUTL",15,0)
SLDR(Q) ; -- called to select a date range
"RTN","IBATUTL",16,0)
 ; defaults are from=T-365, to=TODAY
"RTN","IBATUTL",17,0)
 ; output IBBDT, IBEDT, quit returns 0 if not valid
"RTN","IBATUTL",18,0)
 ;
"RTN","IBATUTL",19,0)
 N DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y,IBDT
"RTN","IBATUTL",20,0)
 S DIR(0)="DA^:NOW:EX",DIR("A")="Select FROM DATE: "
"RTN","IBATUTL",21,0)
 S:$D(Q) DIR("?")=Q
"RTN","IBATUTL",22,0)
 D ^DIR G:'Y SLDRQ S IBDT=+Y
"RTN","IBATUTL",23,0)
 S DIR(0)="DA^"_+Y_":NOW:EX",DIR("A")="              TO: "
"RTN","IBATUTL",24,0)
 D ^DIR
"RTN","IBATUTL",25,0)
 S:Y IBEDT=+Y+.999999,IBBDT=IBDT G SLDRQ
"RTN","IBATUTL",26,0)
SLDR1Y() ; -- called to select a date range w/1y past default
"RTN","IBATUTL",27,0)
 ; defaults are from=T-365, to=TODAY
"RTN","IBATUTL",28,0)
 ; output IBBDT, IBEDT, quit returns 0 if not valid
"RTN","IBATUTL",29,0)
 ;
"RTN","IBATUTL",30,0)
 N DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y,IBDT
"RTN","IBATUTL",31,0)
 S DIR(0)="DA^:NOW:EX",DIR("A")="Select FROM DATE: "
"RTN","IBATUTL",32,0)
 S DIR("B")=$$DAT2^IBOUTL($$FMADD^XLFDT(DT,-365)) D ^DIR
"RTN","IBATUTL",33,0)
 G:'Y SLDRQ S IBDT=+Y
"RTN","IBATUTL",34,0)
 S DIR(0)="DA^"_+Y_":NOW:EX",DIR("A")="              to: "
"RTN","IBATUTL",35,0)
 S DIR("B")=$$DAT2^IBOUTL($$FMADD^XLFDT(IBDT,365)) D ^DIR
"RTN","IBATUTL",36,0)
 G:'Y SLDRQ S IBEDT=+Y+.999999,IBBDT=IBDT
"RTN","IBATUTL",37,0)
SLDRQ Q $D(DIRUT)!($D(DUOUT))
"RTN","IBATUTL",38,0)
 ;
"RTN","IBATUTL",39,0)
PTTRAN(IBFILE,IBARRAY,IBXREF) ; builds a list of patient transactions by date
"RTN","IBATUTL",40,0)
 ; assumes DFN, IBBDT, IBEDT
"RTN","IBATUTL",41,0)
 ; input IBARRAY - where to store info
"RTN","IBATUTL",42,0)
 ;       IBXREF  - which date x-ref to use
"RTN","IBATUTL",43,0)
 ; output 0,6 node of file IBFILE in array specified
"RTN","IBATUTL",44,0)
 ;
"RTN","IBATUTL",45,0)
 N IBIEN,IBDT,IBNODE
"RTN","IBATUTL",46,0)
 K @IBARRAY
"RTN","IBATUTL",47,0)
 S IBDT=IBBDT-.999999
"RTN","IBATUTL",48,0)
 F  S IBDT=$O(^IBAT(IBFILE,IBXREF,DFN,IBDT)) Q:IBDT<1!(IBDT>IBEDT)  D
"RTN","IBATUTL",49,0)
 . S IBIEN=0
"RTN","IBATUTL",50,0)
 . F  S IBIEN=$O(^IBAT(IBFILE,IBXREF,DFN,IBDT,IBIEN)) Q:IBIEN<1  D
"RTN","IBATUTL",51,0)
 .. F IBNODE=0,6 S @IBARRAY@(IBDT,IBIEN,IBNODE)=$G(^IBAT(IBFILE,IBIEN,IBNODE))
"RTN","IBATUTL",52,0)
 Q
"RTN","IBATUTL",53,0)
LMOPT ; -- called to do standard listmanager option calling
"RTN","IBATUTL",54,0)
 D FULL^VALM1
"RTN","IBATUTL",55,0)
 S VALMBCK="R"
"RTN","IBATUTL",56,0)
 Q
"RTN","IBATUTL",57,0)
 ;
"RTN","IBATUTL",58,0)
SETVALM(LINE,TEXT,IEN,ON,OFF) ; -- sets up listmanager lines
"RTN","IBATUTL",59,0)
 S LINE=LINE+1
"RTN","IBATUTL",60,0)
 D SET^VALM10(LINE,TEXT,LINE)
"RTN","IBATUTL",61,0)
 S:$G(IEN) @VALMAR@("INDEX",LINE,IEN)=""
"RTN","IBATUTL",62,0)
 D:$G(ON)]""!($G(OFF)]"") CNTRL^VALM10(LINE,1,$L(TEXT),$G(ON),$G(OFF))
"RTN","IBATUTL",63,0)
 W:'(LINE#5) "."
"RTN","IBATUTL",64,0)
 Q LINE
"RTN","IBATUTL",65,0)
 ;
"RTN","IBATUTL",66,0)
VISN(STATION) ; -- looks up ien & name of VISN from ien of station
"RTN","IBATUTL",67,0)
 N IBAT
"RTN","IBATUTL",68,0)
 D PARENT^XUAF4("IBAT","`"_STATION,"VISN")
"RTN","IBATUTL",69,0)
 S IBAT=0,IBAT=$O(IBAT("P",IBAT))
"RTN","IBATUTL",70,0)
 Q $S(IBAT:IBAT_"^"_$P(IBAT("P",IBAT),"^"),1:"")
"RTN","IBATUTL",71,0)
 ;
"RTN","IBATUTL",72,0)
ONEFAC() ; returns one facility only, no visns allowed
"RTN","IBATUTL",73,0)
 N DIC,DTOUT,DUOUT,X,Y
"RTN","IBATUTL",74,0)
 S DIC="^DIC(4,",DIC(0)="AEMNQ"
"RTN","IBATUTL",75,0)
 S DIC("S")="I $$SCR^IBATUTL(Y),$$INST^IBATUTL(Y)'[""VISN"""
"RTN","IBATUTL",76,0)
 D ^DIC
"RTN","IBATUTL",77,0)
 Q Y
"RTN","IBATUTL",78,0)
FAC() ; -- facility/visn or all selection
"RTN","IBATUTL",79,0)
 N DIC,X,Y,DTOUT,DUOUT K IBFAC
"RTN","IBATUTL",80,0)
 S DIC="^DIC(4,",DIC(0)="EQMNZ"
"RTN","IBATUTL",81,0)
 S DIC("S")="I $$SCR^IBATUTL(Y)"
"RTN","IBATUTL",82,0)
REDO W !,"Select FACILITY/VISN: ALL// " R X:DTIME Q:(X["^")!'$T 1
"RTN","IBATUTL",83,0)
 I X="?" W !,"Select a Facility (Name or Number), VISN (VISN XX), or press RETURN for ALL" G REDO
"RTN","IBATUTL",84,0)
 I X=""!($$UP^XLFSTR(X)="ALL") Q 0
"RTN","IBATUTL",85,0)
 D ^DIC G:Y<1 REDO D SET(Y)
"RTN","IBATUTL",86,0)
 S DIC("A")="Select another FACILITY/VISN: ",DIC(0)="AEQMNZ"
"RTN","IBATUTL",87,0)
 F  D ^DIC Q:X=""!(Y<1)  D SET(Y)
"RTN","IBATUTL",88,0)
 Q 0
"RTN","IBATUTL",89,0)
SET(Y) I Y'["VISN" N IBVISN D PARENT^XUAF4("IBVISN","`"_+Y,"VISN") D
"RTN","IBATUTL",90,0)
 . S IBVISN=0,IBVISN=$O(IBVISN("P",IBVISN))
"RTN","IBATUTL",91,0)
 . S IBFAC(IBVISN,"C",+Y)=$$INST(+Y)
"RTN","IBATUTL",92,0)
 E  S IBFAC(+Y)="" D CHILDREN^XUAF4("IBFAC(+Y)","`"_+Y,"VISN")
"RTN","IBATUTL",93,0)
 Q
"RTN","IBATUTL",94,0)
SCR(X) ; screens invalid institution file entries
"RTN","IBATUTL",95,0)
 N IBVISN
"RTN","IBATUTL",96,0)
 ;Q:$P(X,".",2) 0
"RTN","IBATUTL",97,0)
 D PARENT^XUAF4("IBVISN","`"_X,"VISN")
"RTN","IBATUTL",98,0)
 S IBVISN=0,IBVISN=$O(IBVISN("P",IBVISN)) I IBVISN Q 1
"RTN","IBATUTL",99,0)
 D CHILDREN^XUAF4("IBVISN","`"_X,"VISN")
"RTN","IBATUTL",100,0)
 S IBVISN=0,IBVISN=$O(IBVISN("C",IBVISN)) I IBVISN Q 1
"RTN","IBATUTL",101,0)
 Q 0
"RTN","IBATUTL",102,0)
PPF(DFN) ; returns patient's enrolled/preferred facility
"RTN","IBATUTL",103,0)
 N IBPPF
"RTN","IBATUTL",104,0)
 ; first find current enrolment
"RTN","IBATUTL",105,0)
 S IBPPF=+$$PREF^DGENPTA(DFN) ; dbia #2919
"RTN","IBATUTL",106,0)
 ; now if they are already tp update if necessary
"RTN","IBATUTL",107,0)
 I $D(^IBAT(351.6,DFN)),$P(^(DFN,0),"^",3)'=IBPPF D UPPPF^IBATFILE(DFN,IBPPF)
"RTN","IBATUTL",108,0)
 ; now if they have an over ride facility use that
"RTN","IBATUTL",109,0)
 Q $S($P($G(^IBAT(351.6,DFN,0)),"^",10):$P(^(0),"^",10),IBPPF=$$SITE:0,1:IBPPF)
"RTN","IBATUTL",110,0)
TPP(DFN) ; returns dfn and files patient if a valid tp patient
"RTN","IBATUTL",111,0)
 N IBSITE,IBPPF
"RTN","IBATUTL",112,0)
 S IBSITE=$$SITE
"RTN","IBATUTL",113,0)
 S IBPPF=$$PPF(DFN)
"RTN","IBATUTL",114,0)
 I IBPPF,IBSITE'=IBPPF  S DFN=+$$PAT^IBATFILE(DFN,IBPPF)
"RTN","IBATUTL",115,0)
 I DFN,$P($G(^IBAT(351.6,DFN,0)),"^",4) Q DFN
"RTN","IBATUTL",116,0)
 Q 0
"RTN","IBATUTL",117,0)
SITE() ; returns ien of current va site (this way I have only one outside call
"RTN","IBATUTL",118,0)
 Q +$$SITE^VASITE
"RTN","IBATUTL",119,0)
 ;
"RTN","IBATUTL",120,0)
INST(DA) ; returns institution file info
"RTN","IBATUTL",121,0)
 ; This will return the station name ^ station number ^ station type
"RTN","IBATUTL",122,0)
 ; DA - The pointer value into file 4.
"RTN","IBATUTL",123,0)
 I '$D(^DIC(4,DA,0)) Q 0
"RTN","IBATUTL",124,0)
 Q $$NNT^XUAF4(DA)
"RTN","IBATUTL",125,0)
IPT(X) ; returns institution file pointer from name
"RTN","IBATUTL",126,0)
 Q $$LKUP^XUAF4(X)
"RTN","IBATUTL",127,0)
PROC(X,IBDATE) ; -- returns CPT and descriptive name for cpts
"RTN","IBATUTL",128,0)
 S X=$$CPT^ICPTCOD(X,$G(IBDATE))
"RTN","IBATUTL",129,0)
 Q $P(X,"^",2,3)
"RTN","IBATUTL",130,0)
COPAY(DFN,IBFROM,IBBDT,IBEDT) ; -- returns copay amount if any
"RTN","IBATUTL",131,0)
 ; dfn=patient's dfn, from=what event the bill is from
"RTN","IBATUTL",132,0)
 ; ibbdt & ibedt are date ranges (n/a for rx)
"RTN","IBATUTL",133,0)
 N IBAMT,Y,Y1,IBDA,IBX S IBAMT=0
"RTN","IBATUTL",134,0)
 I IBFROM["PSRX(" D  Q IBAMT
"RTN","IBATUTL",135,0)
 . I $P(IBFROM,";",3)>0 D  Q
"RTN","IBATUTL",136,0)
 .. ; refills
"RTN","IBATUTL",137,0)
 .. S IBFROM=$$SUBFILE^IBRXUTL(+IBFROM,$P(IBFROM,";",3),52,9) I 'IBFROM Q
"RTN","IBATUTL",138,0)
 .. S IBAMT=$P($G(^IB(IBFROM,0)),"^",7)
"RTN","IBATUTL",139,0)
 . E  D  Q
"RTN","IBATUTL",140,0)
 .. ; initial fill 
"RTN","IBATUTL",141,0)
 .. S IBFROM=$$FILE^IBRXUTL(+IBFROM,106) I 'IBFROM Q
"RTN","IBATUTL",142,0)
 .. S IBAMT=$P($G(^IB(IBFROM,0)),"^",7)
"RTN","IBATUTL",143,0)
 ; now on to scheduling and admissions
"RTN","IBATUTL",144,0)
 S Y="" F  S Y=$O(^IB("AFDT",DFN,Y)) Q:'Y  I -Y'>IBEDT S Y1=0 F  S Y1=$O(^IB("AFDT",DFN,Y,Y1)) Q:'Y1  D
"RTN","IBATUTL",145,0)
 . S IBDA=0 F  S IBDA=$O(^IB("AF",Y1,IBDA)) Q:'IBDA  D
"RTN","IBATUTL",146,0)
 .. Q:'$D(^IB(IBDA,0))  S IBX=^(0)
"RTN","IBATUTL",147,0)
 .. Q:$P(IBX,"^",8)["ADMISSION"
"RTN","IBATUTL",148,0)
 .. ;
"RTN","IBATUTL",149,0)
 .. ; quit if not correct type (inpatient vs outpatient)
"RTN","IBATUTL",150,0)
 .. Q:$S(IBFROM["SCE("&($P($P(IBX,"^",4),":")'=409.68):1,IBFROM["DGPM("&($P($P(IBX,"^",4),":")=409.68):1,1:0)
"RTN","IBATUTL",151,0)
 .. ;
"RTN","IBATUTL",152,0)
 .. I $P(IBX,"^",15)<IBBDT!($P(IBX,"^",14)>IBEDT) Q
"RTN","IBATUTL",153,0)
 .. S IBAMT=IBAMT+$P(IBX,"^",7)
"RTN","IBATUTL",154,0)
 Q IBAMT
"RTN","IBATUTL",155,0)
FINDT(X) ; -- looks up transactions for source in X
"RTN","IBATUTL",156,0)
 ; returns ien of 351.61 if not cancelled
"RTN","IBATUTL",157,0)
 Q:$G(X)="" 0
"RTN","IBATUTL",158,0)
 N Y,Z S (Y,Z)=0
"RTN","IBATUTL",159,0)
 F  S Y=$O(^IBAT(351.61,"AD",X,Y)) Q:Y<1!(Z)  D
"RTN","IBATUTL",160,0)
 . I $G(^IBAT(351.61,Y,0)),$P(^(0),"^",5)'="X" S Z=Y
"RTN","IBATUTL",161,0)
 Q Z
"RTN","IBATUTL",162,0)
 ;
"RTN","IBATUTL",163,0)
EX(FILE,FIELD,VALUE) ; -- return external value
"RTN","IBATUTL",164,0)
 N Y,C S Y=$G(VALUE)
"RTN","IBATUTL",165,0)
 I +$G(FILE),+$G(FIELD),Y'="" S C=$P(^DD(FILE,FIELD,0),"^",2) D Y^DIQ
"RTN","IBATUTL",166,0)
 Q Y
"RTN","IBATUTL",167,0)
 ;
"RTN","IBAUTL")
0^7^B18186387^B14526482
"RTN","IBAUTL",1,0)
IBAUTL ;ALB/AAS - INTEGRATED BILLING APPLICATION UTILITIES ; 14-FEB-91
"RTN","IBAUTL",2,0)
V ;;2.0;INTEGRATED BILLING;**93,156,347**;21-MAR-94;Build 24
"RTN","IBAUTL",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBAUTL",4,0)
 ;
"RTN","IBAUTL",5,0)
 ;
"RTN","IBAUTL",6,0)
COST ;  - find charges for transaction type, when only one
"RTN","IBAUTL",7,0)
 N IBD,IBN,IB K X1
"RTN","IBAUTL",8,0)
 S IBD=-(DT+.9) F  S IBD=$O(^IBE(350.2,"AIVDT",DA,IBD)) Q:'IBD  S IBN=0 F  S IBN=$O(^IBE(350.2,"AIVDT",DA,IBD,IBN)) Q:'IBN  S IB=$G(^IBE(350.2,IBN,0)) I IB]"",'$P(IB,"^",5)!($P(IB,"^",5)>DT) S X1=$P(IB,"^",4) G COSTQ
"RTN","IBAUTL",9,0)
COSTQ S X1=+$G(X1)
"RTN","IBAUTL",10,0)
 Q
"RTN","IBAUTL",11,0)
 ;
"RTN","IBAUTL",12,0)
FY I $D(X) S IBAFY=$$FY^IBOUTL(X)
"RTN","IBAUTL",13,0)
 Q
"RTN","IBAUTL",14,0)
 ;
"RTN","IBAUTL",15,0)
PTL ;  - parent trace logic
"RTN","IBAUTL",16,0)
 ;  - input in x resulting from field from file 350
"RTN","IBAUTL",17,0)
 ;  - output in y=1 if found, -1^error message if not found
"RTN","IBAUTL",18,0)
 ;  -           y(0) = zeroth node of top level
"RTN","IBAUTL",19,0)
 ;  -           y(1) = zeroth node of second level
"RTN","IBAUTL",20,0)
 ;  -           y(n) = zeroth node of nth level
"RTN","IBAUTL",21,0)
 ;
"RTN","IBAUTL",22,0)
 K Y
"RTN","IBAUTL",23,0)
 S Y=1 I '+X!'($D(^DIC(+X,0,"GL"))) S Y="-1^IB004" G PTLQ
"RTN","IBAUTL",24,0)
 I +X=52 G PHAPI
"RTN","IBAUTL",25,0)
 S IBAGL=^DIC(+X,0,"GL")
"RTN","IBAUTL",26,0)
 I '$D(@(IBAGL_$P($P(X,";",1),":",2)_",0)")) S Y="-1^IB005" G PTLQ
"RTN","IBAUTL",27,0)
 ;
"RTN","IBAUTL",28,0)
 ; This naked reference should be set to the original data source that
"RTN","IBAUTL",29,0)
 ; is causing this charge to be created.  The data source will be one of
"RTN","IBAUTL",30,0)
 ; many different data sources that will generate patient charges.
"RTN","IBAUTL",31,0)
 S Y(0)=^(0)
"RTN","IBAUTL",32,0)
 ;
"RTN","IBAUTL",33,0)
 F IBJJ=2:1 S IBII=$P(X,";",IBJJ) Q:IBII=""  D PTL1
"RTN","IBAUTL",34,0)
PTLQ K IBAGL,IBII,IBJJ,IBMIN
"RTN","IBAUTL",35,0)
 Q
"RTN","IBAUTL",36,0)
 ;
"RTN","IBAUTL",37,0)
PTL1 ;  - find y(n) of sublevels
"RTN","IBAUTL",38,0)
 ; Call in here with a FOR loop to go each level deeper.  This will
"RTN","IBAUTL",39,0)
 ; setup the subsripts in Y for all the data elements that go into
"RTN","IBAUTL",40,0)
 ; causing this charge to be created.  It looks in the original data
"RTN","IBAUTL",41,0)
 ; source file as approprite to obtain the information.  The naked
"RTN","IBAUTL",42,0)
 ; reference should be the last data level in the data source appropriate
"RTN","IBAUTL",43,0)
 ; data source file last looked up.
"RTN","IBAUTL",44,0)
 ;
"RTN","IBAUTL",45,0)
 S IBMIN=$P(IBII,":") I IBMIN="" S Y="-1^IB006" Q
"RTN","IBAUTL",46,0)
 I '$D(^(IBMIN,$P(IBII,":",2),0)) S Y="-1^IB006" Q
"RTN","IBAUTL",47,0)
 ;I '$D(^(+IBII,$P(IBII,":",2),0)) S Y="-1^IB006" Q
"RTN","IBAUTL",48,0)
 S Y(IBJJ-1)=^(0)
"RTN","IBAUTL",49,0)
 Q
"RTN","IBAUTL",50,0)
 ;
"RTN","IBAUTL",51,0)
CHKX ;  - check input x
"RTN","IBAUTL",52,0)
 ;  -  piece 1 = service and exists
"RTN","IBAUTL",53,0)
 ;  -  peice 2 = patient and exists
"RTN","IBAUTL",54,0)
 ;  -  piece 3 = action type
"RTN","IBAUTL",55,0)
 ;  -  piece 4 = user duz
"RTN","IBAUTL",56,0)
 S DFN=$P(X,"^",2),IBSERV=+IBSAVX
"RTN","IBAUTL",57,0)
 I $S('DFN:1,'$D(^DPT(DFN,0)):1,1:0) S Y="-1^IB002" G CHKXQ ;patient pointer bad
"RTN","IBAUTL",58,0)
 I $S('IBSERV:1,'$D(^DIC(49,IBSERV,0)):1,1:0) S Y="-1^IB003" G CHKXQ ;service pointer bad
"RTN","IBAUTL",59,0)
 I IBTAG=1 G CHKXQ
"RTN","IBAUTL",60,0)
 S IBDUZ=$P(IBSAVX,"^",4) I $S('IBDUZ:1,'$D(^VA(200,IBDUZ,0)):1,1:0) S Y="-1^IB007" G CHKXQ
"RTN","IBAUTL",61,0)
 I IBTAG=3 G CHKXQ
"RTN","IBAUTL",62,0)
 S IBATYP=$P(IBSAVX,"^",3) I $S('IBATYP:1,'$D(^IBE(350.1,IBATYP,0)):1,1:0) S Y="-1^IB008"
"RTN","IBAUTL",63,0)
CHKXQ Q
"RTN","IBAUTL",64,0)
 ;
"RTN","IBAUTL",65,0)
SITE ;  - calculate site from site parameters
"RTN","IBAUTL",66,0)
 ;  -  output ibsite = station number
"RTN","IBAUTL",67,0)
 ;  =         ibfac  = pointer to institution file
"RTN","IBAUTL",68,0)
 I '$D(^IBE(350.9,1,0)) S Y="-1^IB016" Q
"RTN","IBAUTL",69,0)
 S IBFAC=$P(^IBE(350.9,1,0),"^",2),IBSITE=$S('$D(^DIC(4,IBFAC,99)):"",1:+^(99)) I IBSITE<1 S Y="-1^IB009"
"RTN","IBAUTL",70,0)
 Q
"RTN","IBAUTL",71,0)
 ;
"RTN","IBAUTL",72,0)
ADD ;  - add new entry to ^ib
"RTN","IBAUTL",73,0)
 ;
"RTN","IBAUTL",74,0)
 N %DT,IBYCHK
"RTN","IBAUTL",75,0)
 L +^IB(0):10 I '$T S Y="-1^IB014" G ADDQ
"RTN","IBAUTL",76,0)
 S X=$P($S($D(^IB(0)):^(0),1:"^^-1"),"^",3)+1 L -^IB(0) I 'X S Y="-1^IB015" G ADDQ
"RTN","IBAUTL",77,0)
 K DD,DO,DIC,DR S DIC="^IB(",DIC(0)="L",DLAYGO=350
"RTN","IBAUTL",78,0)
 F X=X:1 L:$D(IBN1) -^IB(IBN1) I X>0,'$D(^IB(X)) S IBN1=X L +^IB(IBN1):1 I $T,'$D(^IB(X)) S DINUM=X,X=+IBSITE_X D FILE^DICN I +Y>0 Q
"RTN","IBAUTL",79,0)
 S IBN=+Y,DIE="^IB(",DA=IBN,DR=".02////"_$S($D(DFN):DFN,1:"")_";.03////"_$S($D(IBATYP):IBATYP,1:"")_";.05////1;12///NOW" D
"RTN","IBAUTL",80,0)
 . N Y D ^DIE K DA,DR,DIE I $D(Y) S IBYCHK=Y
"RTN","IBAUTL",81,0)
 L -^IB(IBN1)
"RTN","IBAUTL",82,0)
 S Y=$S('$D(IBYCHK):1,1:"-1^IB028")
"RTN","IBAUTL",83,0)
 ;
"RTN","IBAUTL",84,0)
ADDQ K DO,DD,DINUM,DIC,IBN1 Q
"RTN","IBAUTL",85,0)
 ;
"RTN","IBAUTL",86,0)
ARPARM N X S X=DT
"RTN","IBAUTL",87,0)
 D SITE,FY,NOW^%DTC S IBNOW=%
"RTN","IBAUTL",88,0)
 Q
"RTN","IBAUTL",89,0)
BILLNO ;  -get open bill number
"RTN","IBAUTL",90,0)
 I '$G(IBTOTL) S (IBIL,IBTRAN)="" G BILLQ
"RTN","IBAUTL",91,0)
 S IBARTYP=$S($D(^IBE(350.1,+IBATYP,0)):$P(^(0),"^",3),1:"")
"RTN","IBAUTL",92,0)
 S X=IBSITE_"^"_IBSERV_"^"_IBARTYP_"^"_DFN_";DPT("_"^"_IBAFY_"^"_$S($D(IBTOTL):IBTOTL,1:0)_"^"_$S($D(IBDUZ):IBDUZ,$D(DUZ):DUZ,1:0)_"^"_$P(IBNOW,".",1) D ^PRCASER I +Y<1 G BILLQ
"RTN","IBAUTL",93,0)
 S IBIL=$P(Y,"^",2),IBTRAN=$P(Y,"^",3) I IBIL="" S Y="-1^IB011" G BILLQ
"RTN","IBAUTL",94,0)
 S IBTRAN=$S(IBTRAN>0:IBTRAN,1:"")
"RTN","IBAUTL",95,0)
BILLQ Q
"RTN","IBAUTL",96,0)
 ;
"RTN","IBAUTL",97,0)
PHAPI ;
"RTN","IBAUTL",98,0)
 ;This is alternate code for Parent Trace Logic
"RTN","IBAUTL",99,0)
 ; to deal with the Pharmacy Encapsulation of Prescription File (#52)
"RTN","IBAUTL",100,0)
 ;
"RTN","IBAUTL",101,0)
 N IBRFL,IBXX,IBPT,IBRX,IBY
"RTN","IBAUTL",102,0)
 S IBXX=X,IBY=1
"RTN","IBAUTL",103,0)
 S IBRX=$P($P(IBXX,";"),":",2)
"RTN","IBAUTL",104,0)
 S IBPT=$$FILE^IBRXUTL(IBRX,2),IBY(0)=$$RXZERO^IBRXUTL(IBPT,IBRX) I IBY(0)="" S IBY="-1^IB005" G PHAPIQ
"RTN","IBAUTL",105,0)
 I $P(IBXX,";",2)="" G PHAPIQ ; original fill being billed
"RTN","IBAUTL",106,0)
 S IBRFL=$P($P(IBXX,";",2),":",2),IBY(1)=$$ZEROSUB^IBRXUTL(IBPT,IBRX,IBRFL)
"RTN","IBAUTL",107,0)
 I IBY(1)="" S IBY="-1^IB006" G PHAPIQ
"RTN","IBAUTL",108,0)
 ;
"RTN","IBAUTL",109,0)
PHAPIQ ;
"RTN","IBAUTL",110,0)
 S:$G(IBY)]"" Y=IBY
"RTN","IBAUTL",111,0)
 S:$G(IBY(0))]"" Y(0)=IBY(0)
"RTN","IBAUTL",112,0)
 S:$G(IBY(1))]"" Y(1)=IBY(1)
"RTN","IBAUTL",113,0)
 Q
"RTN","IBAUTL",114,0)
 ;
"RTN","IBCC1")
0^8^B14938424^B14613581
"RTN","IBCC1",1,0)
IBCC1 ;ALB/MJB - CANCEL UB-82 THIRD PARTY BILL ;10-OCT-94
"RTN","IBCC1",2,0)
 ;;2.0;INTEGRATED BILLING;**19,95,160,159,320,347**;21-MAR-94;Build 24
"RTN","IBCC1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCC1",4,0)
 ;
"RTN","IBCC1",5,0)
RNB ; -- Add a reason not billable to claims tracking
"RTN","IBCC1",6,0)
 N X,Y,DIC,DIE,I,J,DA,DR,IBTYP,IBTRE,IB,IBAPPT,IBDT,IBTALK,IBCODE,IBTRED,IBTSAV,FILL,IBRX,IBDATA,IBD,IBDT,IBQUIT,IBPRO,IBDD
"RTN","IBCC1",7,0)
 Q:'$G(IBIFN)
"RTN","IBCC1",8,0)
 S IB(0)=$G(^DGCR(399,IBIFN,0)),IBTYP=$P(IB(0),"^",5),IBQUIT=0
"RTN","IBCC1",9,0)
 I '$D(DFN) S DFN=$P(IB(0),"^",2)
"RTN","IBCC1",10,0)
 ;
"RTN","IBCC1",11,0)
 ; -- is inpt find entry in dgpm, then in ibt(356, s da=ibtre then edit
"RTN","IBCC1",12,0)
INPT I IBTYP<3 D
"RTN","IBCC1",13,0)
 .S DATE=$P(IB(0),"^",3),DFN=$P(IB(0),"^",2)
"RTN","IBCC1",14,0)
 .S DGPM=$O(^DGPM("APTT1",DFN,DATE,0)) ; double check for asih
"RTN","IBCC1",15,0)
 .I DGPM S (IBTRE,IBTSAV)=$O(^IBT(356,"AD",DGPM,0))
"RTN","IBCC1",16,0)
 .I $G(IBTRE) D RNBEDIT
"RTN","IBCC1",17,0)
 .Q:IBQUIT
"RTN","IBCC1",18,0)
 .;
"RTN","IBCC1",19,0)
 .; -- alternate inpt method
"RTN","IBCC1",20,0)
 .S IBCODE=$O(^IBE(356.6,"ACODE",1,0))
"RTN","IBCC1",21,0)
 .S DATE=$P(IB(0),"^",3),DFN=$P(IB(0),"^",2)
"RTN","IBCC1",22,0)
 .S IBDT=(DATE-.25) F  S IBDT=$O(^IBT(356,"APTY",DFN,IBCODE,IBDT)) Q:'IBDT!(IBDT>(DATE+.24))  D
"RTN","IBCC1",23,0)
 ..S IBTRE=0 F  S IBTRE=$O(^IBT(356,"APTY",DFN,IBCODE,IBDT,IBTRE)) Q:IBTRE=""!(IBQUIT)  D:$G(IBTSAV)'=IBTRE RNBEDIT
"RTN","IBCC1",24,0)
 .Q
"RTN","IBCC1",25,0)
 ;
"RTN","IBCC1",26,0)
OPT ; -- is opt-find entries in IBT(356, for opt dates and then edit
"RTN","IBCC1",27,0)
 I IBTYP>2 S IBCODE=$O(^IBE(356.6,"ACODE",2,0)) D
"RTN","IBCC1",28,0)
 .S IBAPPT=0 F  S IBAPPT=$O(^DGCR(399,IBIFN,"OP",IBAPPT)) Q:'IBAPPT!(IBQUIT)  D
"RTN","IBCC1",29,0)
 ..S IBDT=(IBAPPT-.01) F  S IBDT=$O(^IBT(356,"APTY",DFN,IBCODE,IBDT)) Q:'IBDT!(IBDT>(IBAPPT+.24))  D
"RTN","IBCC1",30,0)
 ...S IBTRE=0 F  S IBTRE=$O(^IBT(356,"APTY",DFN,IBCODE,IBDT,IBTRE)) Q:IBTRE=""!(IBQUIT)  D RNBEDIT
"RTN","IBCC1",31,0)
 .Q
"RTN","IBCC1",32,0)
 ;
"RTN","IBCC1",33,0)
RX ; -- find rx's on bill
"RTN","IBCC1",34,0)
 S IBDD=0 F  S IBDD=$O(^IBA(362.4,"AIFN"_IBIFN,IBDD)) Q:'IBDD  S IBD=0 F  S IBD=$O(^IBA(362.4,"AIFN"_IBIFN,IBDD,IBD)) Q:'IBD!(IBQUIT)  D
"RTN","IBCC1",35,0)
 .S IBDATA=$G(^IBA(362.4,IBD,0)),IBRX=$P(IBDATA,"^",5),IBDT=$P(IBDATA,"^",3)
"RTN","IBCC1",36,0)
 .I '$G(IBRX) S DIC=52,DIC(0)="BO",X=$P(IBDATA,"^",1) D DIC^PSODI(52,.DIC,X) S IBRX=+Y K DIC,X,Y Q:IBRX=-1
"RTN","IBCC1",37,0)
 .S FILL="" F  S FILL=$O(^IBT(356,"ARXFL",IBRX,FILL)) Q:FILL=""!(IBQUIT)  D
"RTN","IBCC1",38,0)
 ..S IBTRE=0 F  S IBTRE=$O(^IBT(356,"ARXFL",IBRX,FILL,IBTRE)) Q:'IBTRE!(IBQUIT)  I $P(^IBT(356,+IBTRE,0),"^",6)=IBDT D RNBEDIT
"RTN","IBCC1",39,0)
 ;
"RTN","IBCC1",40,0)
PRO ; -- find prosthetics on bill
"RTN","IBCC1",41,0)
 S IBDD=0 F  S IBDD=$O(^IBA(362.5,"AIFN"_IBIFN,IBDD)) Q:'IBDD  S IBD=0 F  S IBD=$O(^IBA(362.5,"AIFN"_IBIFN,IBDD,IBD)) Q:'IBD!(IBQUIT)  D
"RTN","IBCC1",42,0)
 .S IBDATA=$G(^IBA(362.5,IBD,0)),IBPRO=$P(IBDATA,"^",4)
"RTN","IBCC1",43,0)
 .Q:'$G(IBPRO)
"RTN","IBCC1",44,0)
 .S IBTRE=0 F  S IBTRE=$O(^IBT(356,"APRO",+IBPRO,IBTRE)) Q:'IBTRE!(IBQUIT)  D RNBEDIT
"RTN","IBCC1",45,0)
 Q
"RTN","IBCC1",46,0)
 ;
"RTN","IBCC1",47,0)
RNBEDIT ;
"RTN","IBCC1",48,0)
 Q:IBQUIT
"RTN","IBCC1",49,0)
 W:'$D(IBTALK) !!,"Since you have canceled this bill, you may enter a Reason Not Billable",!,"into Claims Tracking.  This will take the care off of the UNBILLED lists"
"RTN","IBCC1",50,0)
 S IBTALK=1
"RTN","IBCC1",51,0)
 ;
"RTN","IBCC1",52,0)
 N %,IBTRED S IBTRED=$G(^IBT(356,IBTRE,0))
"RTN","IBCC1",53,0)
 W !!,"Claims Tracking entry: ",+IBTRED,"  ",$$EXPAND^IBTRE(356,.18,$P(IBTRED,"^",18)),"  ",$$FMTE^XLFDT($P(IBTRED,"^",6))
"RTN","IBCC1",54,0)
 I $G(IBMCSRNB)'="",$P(IBTRED,U,19) W !," Note:  A Reason Not Billable has been previously entered",!?8,"for this Claims Tracking record."
"RTN","IBCC1",55,0)
 S DA=IBTRE,DIE="^IBT(356,",DR=".19"
"RTN","IBCC1",56,0)
 I $G(IBMCSRNB)'="" S DR=".19//"_$P(IBMCSRNB,U,2)    ; IB*320 MCS cancel
"RTN","IBCC1",57,0)
 D ^DIE
"RTN","IBCC1",58,0)
 ;
"RTN","IBCC1",59,0)
 ; - if the RNB changed, update the user and date/time last edited
"RTN","IBCC1",60,0)
 I $P(IBTRED,"^",19)'=$P($G(^IBT(356,IBTRE,0)),"^",19) D NOW^%DTC S DR="1.03///"_%_";1.04////"_DUZ D ^DIE
"RTN","IBCC1",61,0)
 ;
"RTN","IBCC1",62,0)
 ; $D(Y) indicates an up-arrow exit from the DIE call (??)
"RTN","IBCC1",63,0)
 I $D(Y) S DFN=+$P(^IBT(356,IBTRE,0),"^",2) D FIND^IBOHCT(DFN,IBTRE) S IBQUIT=1
"RTN","IBCC1",64,0)
 Q
"RTN","IBCD4")
0^9^B18076054^B16336305
"RTN","IBCD4",1,0)
IBCD4 ;ALB/ARH - AUTOMATED BILLER (ADD NEW BILL - GATHER DX AND PROCEDURES)  ;9/5/93
"RTN","IBCD4",2,0)
 ;;2.0;INTEGRATED BILLING;**14,80,106,160,309,276,347**;21-MAR-94;Build 24
"RTN","IBCD4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCD4",4,0)
 ;
"RTN","IBCD4",5,0)
 ;
"RTN","IBCD4",6,0)
IDX(PTF,DT1,DT2) ; find 501 movement Diagnosis and 701 Discharge Diagnosisfor a PTF record within bill range
"RTN","IBCD4",7,0)
 ; check for billable bedsection and SC treatement and duplicates
"RTN","IBCD4",8,0)
 ; results: IBT = number of billable movements within date range
"RTN","IBCD4",9,0)
 ;          IBMSG(X)=" error message " if any errors found
"RTN","IBCD4",10,0)
 ;         ^TMP("IBDX",$J)= PTF IFN
"RTN","IBCD4",11,0)
 ;         ^TMP("IBDX",$J,DX)=""
"RTN","IBCD4",12,0)
 ;         ^TMP("IBDX",$J,-MOVE DATE, x) = Dx
"RTN","IBCD4",13,0)
 N IBMVT,IBN,IBDT,IBCNT,IBBS,IBSC,IBMV,IBDX,IBI,IBX K IBMSG,IBT,^TMP("IBDX",$J)
"RTN","IBCD4",14,0)
 ;
"RTN","IBCD4",15,0)
 D PTFDXDT^IBCSC4F(PTF,DT1,DT2) S IBMVT="M" I +$P($G(^TMP($J,"IBDX","D")),U,3) S IBMVT="D"
"RTN","IBCD4",16,0)
 ;
"RTN","IBCD4",17,0)
 S ^TMP("IBDX",$J)=+PTF S (IBT,IBBS,IBSC)=0,IBCNT=1
"RTN","IBCD4",18,0)
 F IBN="D","M" S IBDT="" F  S IBDT=$O(^TMP($J,"IBDX",IBN,IBDT)) Q:'IBDT  D
"RTN","IBCD4",19,0)
 . S IBMV=$G(^TMP($J,"IBDX",IBN,IBDT)) Q:IBMV=""
"RTN","IBCD4",20,0)
 . ;
"RTN","IBCD4",21,0)
 . I IBN="M" S IBT=IBT+1,IBX="" D  Q:+IBX
"RTN","IBCD4",22,0)
 .. I $P(IBMV,U,3)=1 S IBSC=IBSC+1,IBMSG(IBCNT)=$$FMTE^XLFDT(IBDT)_" movement related to an SC condition.",IBCNT=IBCNT+1,IBX=1
"RTN","IBCD4",23,0)
 .. I $P($G(^DIC(42.4,+$P(IBMV,U,2),0)),U,5)="" S IBBS=IBBS+1,IBMSG(IBCNT)=$$FMTE^XLFDT(IBDT)_" movement is for a non-billable bedsection.",IBCNT=IBCNT+1,IBX=1
"RTN","IBCD4",24,0)
 .. I '$P(IBMV,U,4) S IBMSG(IBCNT)=$$FMTE^XLFDT(IBDT)_" movement does not have a DRG as required for Reasonable Charges.",IBCNT=IBCNT+1
"RTN","IBCD4",25,0)
 . I IBN'=IBMVT Q
"RTN","IBCD4",26,0)
 . ;
"RTN","IBCD4",27,0)
 . S IBI="" F  S IBI=$O(^TMP($J,"IBDX",IBN,IBDT,IBI)) Q:'IBI  D
"RTN","IBCD4",28,0)
 .. S IBDX=$G(^TMP($J,"IBDX",IBN,IBDT,IBI)) Q:'IBDX
"RTN","IBCD4",29,0)
 .. I '$P(IBDX,U,2),IBDT>+$G(^TMP("IBDX",$J,"DX",+IBDX)) S ^TMP("IBDX",$J,"DX",+IBDX)=IBDT_U_IBI
"RTN","IBCD4",30,0)
 ;
"RTN","IBCD4",31,0)
 S IBDX="" F  S IBDX=$O(^TMP("IBDX",$J,"DX",IBDX)) Q:'IBDX  D
"RTN","IBCD4",32,0)
 . S IBX=^TMP("IBDX",$J,"DX",IBDX) I +IBX S ^TMP("IBDX",$J,-IBX,+$P(IBX,U,2))=IBDX
"RTN","IBCD4",33,0)
 K ^TMP($J,"IBDX")
"RTN","IBCD4",34,0)
 ;
"RTN","IBCD4",35,0)
 I +IBSC S IBMSG(IBCNT)="PTF record indicates "_+IBSC_" of "_IBT_" movements are for Service Connected Care.",IBCNT=IBCNT+1
"RTN","IBCD4",36,0)
 I +IBBS S IBMSG(IBCNT)="PTF record indicates "_+IBBS_" of "_IBT_" movements are for a non-billable bedsection.",IBCNT=IBCNT+1
"RTN","IBCD4",37,0)
 S IBT=IBT-IBSC-IBBS I 'IBT S IBMSG(IBCNT)="0 movements are billable."
"RTN","IBCD4",38,0)
IDXE Q
"RTN","IBCD4",39,0)
 ;
"RTN","IBCD4",40,0)
IPRC(PTF,DT1,DT2) ;find 401 and 601 procedures for a PTF record
"RTN","IBCD4",41,0)
 ;results: ^TMP("IBIPRC",$J,PROC DATE)=PROC1^ ... ^PROC5
"RTN","IBCD4",42,0)
 ;where PROC DATE = (45.01,45.01,.01) and (45,45.05,.01) and PROC = (45,45.01,8-12) and (45,45.05,4-8)
"RTN","IBCD4",43,0)
 N IBX,IBY,IBZ,IBI K ^TMP("IBIPRC",$J) I '$D(^DGPT(+$G(PTF),0)) G IPRCE
"RTN","IBCD4",44,0)
 S DT1=$S(+$G(DT1):+DT1,1:0),DT2=$S(+$G(DT2):+DT2,1:9999999),^TMP("IBIPRC",$J)=+PTF
"RTN","IBCD4",45,0)
 S IBX=0 F  S IBX=$O(^DGPT(+PTF,"S",IBX)) Q:'IBX  S IBY=$G(^DGPT(+PTF,"S",IBX,0)) I +IBY'<DT1,+IBY'>DT2 D
"RTN","IBCD4",46,0)
 . S IBZ="" F IBI=8:1:12 I +$P(IBY,U,IBI) S IBZ=IBZ_+$P(IBY,U,IBI)_U
"RTN","IBCD4",47,0)
 . I +IBZ S ^TMP("IBIPRC",$J,+IBY)=$G(^TMP("IBIPRC",$J,+IBY))_IBZ
"RTN","IBCD4",48,0)
 S IBX=0 F  S IBX=$O(^DGPT(+PTF,"P",IBX)) Q:'IBX  S IBY=$G(^DGPT(+PTF,"P",IBX,0)) I +IBY'<DT1,+IBY'>DT2 D
"RTN","IBCD4",49,0)
 . S IBZ="" F IBI=5:1:9 I +$P(IBY,U,IBI) S IBZ=IBZ_+$P(IBY,U,IBI)_U
"RTN","IBCD4",50,0)
 . I +IBZ S ^TMP("IBIPRC",$J,+IBY)=$G(^TMP("IBIPRC",$J,+IBY))_IBZ
"RTN","IBCD4",51,0)
IPRCE Q
"RTN","IBCD4",52,0)
 ;
"RTN","IBCD4",53,0)
RXRF(PIFN,RIFN,IBDT) ; returns data on fill on date for rx (RX # ^ DRUG ^ DAYS SUPPLY ^ FILL DATE ^ QTY ^ NDC #)
"RTN","IBCD4",54,0)
 N X,Y,PLN,RLN,IBFILL,PDFN,LIST,NODE
"RTN","IBCD4",55,0)
 S X=""
"RTN","IBCD4",56,0)
 S PDFN=$$FILE^IBRXUTL(PIFN,2)
"RTN","IBCD4",57,0)
 S LIST="IBRXARR"
"RTN","IBCD4",58,0)
 S NODE="R^^"
"RTN","IBCD4",59,0)
 I +$G(PIFN) S PLN=$$RXZERO^IBRXUTL(PDFN,PIFN) I PLN'="" D
"RTN","IBCD4",60,0)
 . D RX^PSO52API(PDFN,LIST,PIFN,,NODE,,)
"RTN","IBCD4",61,0)
 . I $G(IBDT) D REF^PSO52EX($G(IBDT),$G(IBDT),LIST) S RIFN=$O(^TMP($J,LIST,"AD",IBDT,PIFN,""))
"RTN","IBCD4",62,0)
 . S RLN="",IBFILL="^^" I $G(RIFN)="" S X="" Q
"RTN","IBCD4",63,0)
 . I (RIFN=0)!(RIFN=-1) S RLN=$$RXSEC^IBRXUTL(PDFN,PIFN) Q:RLN=""  S IBFILL=$P(PLN,U,8)_"^"_$P(RLN,U,2)_"^"_$P(PLN,U,7)
"RTN","IBCD4",64,0)
 . I RIFN>0 S RLN=$$ZEROSUB^IBRXUTL(PDFN,PIFN,RIFN) Q:RLN=""  S IBFILL=$P(RLN,U,10)_"^"_$P(RLN,U,1)_"^"_$P(RLN,U,4)
"RTN","IBCD4",65,0)
 . S X=$P(PLN,U,1)_"^"_$P(PLN,U,6)_"^"_IBFILL_"^"_$$GETNDC^PSONDCUT(+PIFN,+RIFN)
"RTN","IBCD4",66,0)
 E  S X=""
"RTN","IBCD4",67,0)
 K ^TMP($J,LIST)
"RTN","IBCD4",68,0)
 Q X
"RTN","IBCD4",69,0)
 ;
"RTN","IBCD4",70,0)
CHK() ;other checks
"RTN","IBCD4",71,0)
 N X S X=1 I $G(^DPT(+$G(IBDFN),0))="" S X="0^Patient information lacking."
"RTN","IBCD4",72,0)
 Q X
"RTN","IBCD4",73,0)
 ;
"RTN","IBCD4",74,0)
CHKSYS() ;various checks to determine if bill can be created, returns true if passes   XXXXXX
"RTN","IBCD4",75,0)
 ;if fails then returns "0^error message"
"RTN","IBCD4",76,0)
 ;requires nothing
"RTN","IBCD4",77,0)
 N X,Y,I S X=1
"RTN","IBCD4",78,0)
 I '$P($G(^IBE(350.9,1,1)),U,14) S X="0^MAS SERVICE PARAMETER UNKNOWN" G CHKSYSE
"RTN","IBCD4",79,0)
 I +$P($$SITE^VASITE,U,3)<1 S X="0^ACILITY UNDEFINED" G CHKSYSE
"RTN","IBCD4",80,0)
 ;G:$D(IBB) CHKSYSE
"RTN","IBCD4",81,0)
 ;I '$D(DUZ(0)) S X="0^FILEMAN ACCESS UNDEFINED" G CHKSYSE
"RTN","IBCD4",82,0)
 ;I $S($D(DLAYGO):2\1-(DLAYGO\1),1:1),DUZ(0)'="@",$D(^DIC(399,0,"LAYGO"))  S DLAYGO=399
"RTN","IBCD4",83,0)
CHKSYSE Q X
"RTN","IBCD4",84,0)
 ;
"RTN","IBCD4",85,0)
 ;GVARS(IFN) ;get data on bill IFN  (commented out patch 80, does not appear to be used)
"RTN","IBCD4",86,0)
 ;N I S X=1 I '$G(^DGCR(399,+$G(IFN),0)) S X=0 G GVARSE
"RTN","IBCD4",87,0)
 ;F I=0,"M" S IB(I)=$G(^DGCR(399,+IFN,I))
"RTN","IBCD4",88,0)
 ;S DGINPAR=$P($G(^DIC(36,+IB("MP"),0)),U,6,10)
"RTN","IBCD4",89,0)
 ;GVARSE Q X
"RTN","IBCRCC")
0^10^B18670863^B18876800
"RTN","IBCRCC",1,0)
IBCRCC ;ALB/ARH - RATES: CALCULATION OF ITEM CHARGE ;22-MAY-1996
"RTN","IBCRCC",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,138,245,223,309,347**;21-MAR-94;Build 24
"RTN","IBCRCC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCRCC",4,0)
 ;
"RTN","IBCRCC",5,0)
 ; ITMCHG and RATECHG are basic item/set/rate charge functions, IBCRCI contains more standard callable functions
"RTN","IBCRCC",6,0)
 ;
"RTN","IBCRCC",7,0)
ITMCHG(CS,ITEM,EVDT,MOD,ARR) ; get the base unit charges for a specific item, given a charge set, item and date
"RTN","IBCRCC",8,0)
 ; this is the primary function to get an item charge and works for all Charge Methods, given an Item
"RTN","IBCRCC",9,0)
 ; returns ARR = count of items in array ^ total charge for item ^ total base charge
"RTN","IBCRCC",10,0)
 ;         ARR(x) = charge item IFN (if any) ^ rev code (if any) ^ $ charge ^ $ base charge
"RTN","IBCRCC",11,0)
 ; checks Item effective and inactive dates, modifier match, and only sets array if the charge is non-zero
"RTN","IBCRCC",12,0)
 ; each item will be passed back separately in the array, no combination of charges
"RTN","IBCRCC",13,0)
 ;
"RTN","IBCRCC",14,0)
 N IBCSBR,IBEVDT,IBEFDT,IBXREF,IBITEM,IBDA,IBLN,IBCHRG,IBITMFND K ARR S ARR=0
"RTN","IBCRCC",15,0)
 S CS=+$G(CS),IBEVDT=$S(+$G(EVDT):+EVDT,1:DT),IBITEM=+$G(ITEM),MOD=$G(MOD) I 'CS!'IBITEM Q
"RTN","IBCRCC",16,0)
 S IBCSBR=$$CSBR^IBCRU3(CS)
"RTN","IBCRCC",17,0)
 ;
"RTN","IBCRCC",18,0)
 ; va cost
"RTN","IBCRCC",19,0)
 I $P(IBCSBR,U,5)=2 D  Q  ; va cost
"RTN","IBCRCC",20,0)
 . I $P(IBCSBR,U,1)["PROSTHETICS" S IBCHRG=$$PICOST(IBITEM)  I +IBCHRG D SETARR(0,0,+IBCHRG,.ARR) Q
"RTN","IBCRCC",21,0)
 . I $P(IBCSBR,U,1)["PRESCRIPTION" S IBCHRG=$$RXCOST(IBITEM) I +IBCHRG D SETARR(0,0,+IBCHRG,.ARR) Q
"RTN","IBCRCC",22,0)
 ;
"RTN","IBCRCC",23,0)
 ; all others - have Charge Item entries
"RTN","IBCRCC",24,0)
 ;
"RTN","IBCRCC",25,0)
 ; find most recent Charge Item for the item, search until modifiers match (only BI=CPT should have mods defined)
"RTN","IBCRCC",26,0)
 S IBXREF="AIVDTS"_CS,IBITMFND=0
"RTN","IBCRCC",27,0)
 S IBEFDT=-(IBEVDT+.01) F  S IBEFDT=$O(^IBA(363.2,IBXREF,IBITEM,IBEFDT)) Q:'IBEFDT  D  Q:IBITMFND
"RTN","IBCRCC",28,0)
 . S IBDA=0 F  S IBDA=$O(^IBA(363.2,IBXREF,IBITEM,IBEFDT,IBDA)) Q:'IBDA  D
"RTN","IBCRCC",29,0)
 .. S IBLN=$G(^IBA(363.2,IBDA,0))
"RTN","IBCRCC",30,0)
 .. I +$P(IBLN,U,7)'=+MOD Q  ; charge item modifier does not match modifier passed in
"RTN","IBCRCC",31,0)
 .. S IBITMFND=1 ; item found
"RTN","IBCRCC",32,0)
 .. I +$P(IBLN,U,4),+$P(IBLN,U,4)<IBEVDT Q  ; charge is inactive on event date
"RTN","IBCRCC",33,0)
 .. I +$P(IBLN,U,5) D SETARR(IBDA,+$P(IBLN,U,6),+$P(IBLN,U,5),.ARR,$P(IBLN,U,8))
"RTN","IBCRCC",34,0)
 Q
"RTN","IBCRCC",35,0)
 ;
"RTN","IBCRCC",36,0)
SETARR(CI,RVCD,CHRG,ARR,CHRGB) ; set charges into an array, does not allow zero charge, a new entry is created each time,
"RTN","IBCRCC",37,0)
 ; no attempt to combine like items, the new item charge is added to any that may already be in the array 
"RTN","IBCRCC",38,0)
 ; returns ARR = count of items in array ^ total charge for item
"RTN","IBCRCC",39,0)
 ;         ARR(x) = charge item IFN (if any) ^ item rev code (if any) ^ $ charge
"RTN","IBCRCC",40,0)
 ;
"RTN","IBCRCC",41,0)
 N CNT,TCHRG,TCHRGB
"RTN","IBCRCC",42,0)
 S CNT=+$G(ARR)+1,TCHRG=$P($G(ARR),U,2)+$G(CHRG) I +$G(CHRGB) S TCHRGB=+$P($G(ARR),U,3)+CHRGB
"RTN","IBCRCC",43,0)
 I +$G(CHRG) S ARR=CNT_U_+TCHRG_U_$G(TCHRGB),ARR(CNT)=$G(CI)_U_+$G(RVCD)_U_+CHRG_U_$G(TCHRGB)
"RTN","IBCRCC",44,0)
 Q
"RTN","IBCRCC",45,0)
 ;
"RTN","IBCRCC",46,0)
PICOST(PI) ; returns (PI=ptr 362.5): total VA cost of an item (660,14) ^ quantity (660,5) from prosthetics ^ bill IFN
"RTN","IBCRCC",47,0)
 ;
"RTN","IBCRCC",48,0)
 N IBPIP,IBLN,IBX,IBIFN S (IBPIP,IBX)=0
"RTN","IBCRCC",49,0)
 I +$G(PI) S IBLN=$G(^IBA(362.5,+PI,0)),IBPIP=$P(IBLN,U,4),IBIFN=$P(IBLN,U,2)
"RTN","IBCRCC",50,0)
 I +IBPIP S IBLN=$G(^RMPR(660,+IBPIP,0)) I IBLN'="" S IBX=$P(IBLN,U,16)_U_$P(IBLN,U,7)_U_IBIFN
"RTN","IBCRCC",51,0)
 Q IBX
"RTN","IBCRCC",52,0)
 ;
"RTN","IBCRCC",53,0)
RATECHG(RS,CHG,EVDT,FEE) ; returns modifed item charge based on rate schedule:  check effective dates, apply adjustment
"RTN","IBCRCC",54,0)
 ; adjusted amount ^ comment (if there is an adjustment)
"RTN","IBCRCC",55,0)
 ; if FEE passed by reference, returns disp fee^admin fee
"RTN","IBCRCC",56,0)
 ;
"RTN","IBCRCC",57,0)
 N IBX,IBRS0,IBRS10,IBEFDT,IBINADT,IBRTY,X S IBRTY=""
"RTN","IBCRCC",58,0)
 S IBX=+$G(CHG),IBRS0=$G(^IBE(363,+$G(RS),0)),IBRS10=$G(^IBE(363,+$G(RS),10))
"RTN","IBCRCC",59,0)
 S EVDT=$S(+$G(EVDT):EVDT,1:DT),IBEFDT=$P(IBRS0,U,5),IBINADT=$P(IBRS0,U,6)
"RTN","IBCRCC",60,0)
 I +IBEFDT>EVDT!(+IBINADT&(IBINADT<EVDT)) S IBX=0
"RTN","IBCRCC",61,0)
 I +IBX,IBRS10'="" S X=IBX X IBRS10 S IBX=X,IBRTY="^Rate Schedule Adjustment ("_$J(CHG,"",2)_")"
"RTN","IBCRCC",62,0)
 S FEE=$P($G(^IBE(363,+$G(RS),1)),"^",1,2)
"RTN","IBCRCC",63,0)
 Q IBX_IBRTY
"RTN","IBCRCC",64,0)
 ;
"RTN","IBCRCC",65,0)
RXCOST(RX) ; returns (RX=ptr 362.4): VA Cost of an Rx - Per Unit Cost ^ bill IFN
"RTN","IBCRCC",66,0)
 ; w/ Per Unit Cost = RX (Unit Price of Drug - 52,17) or Drug (Price Per Dispense Unit 50,16) cost
"RTN","IBCRCC",67,0)
 ;
"RTN","IBCRCC",68,0)
 N IBRXP,IBDGP,IBLN,IBX,IBIFN S (IBRXP,IBX)=0
"RTN","IBCRCC",69,0)
 I +$G(RX) S IBLN=$G(^IBA(362.4,+RX,0)),IBRXP=$P(IBLN,U,5),IBDGP=$P(IBLN,U,4),IBIFN=$P(IBLN,U,2)
"RTN","IBCRCC",70,0)
 I +IBRXP S IBX=$$FILE^IBRXUTL(IBRXP,17)_U_IBIFN
"RTN","IBCRCC",71,0)
 I 'IBRXP,+IBDGP D DATA^IBRXUTL(+IBDGP) S IBLN=$G(^TMP($J,"IBDRUG",0)) I IBLN'="" S IBX=$G(^TMP($J,"IBDRUG",+IBDGP,16))_U_IBIFN
"RTN","IBCRCC",72,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBCRCC",73,0)
 Q IBX
"RTN","IBCRCC",74,0)
 ;
"RTN","IBCRCC",75,0)
PRVCHG(CS,CHG,PRV,EVDT,ITEM) ; return discounted amount, based on total charge for a the care, the provider and Charge Set (BR)
"RTN","IBCRCC",76,0)
 ; if no discount record found for the Charge Set or the provider then returns original amount
"RTN","IBCRCC",77,0)
 ; no provider discount for Lab charges (80000-89999)
"RTN","IBCRCC",78,0)
 ;   discounted amount ^ comment (if discounted) ^ percent discount
"RTN","IBCRCC",79,0)
 ;
"RTN","IBCRCC",80,0)
 N IBPC,IBSGFN,IBSG,IBPDFN,IBPD0,IBPDTY,IBI,IBX,IBY S IBX=+$G(CHG),(IBSGFN,IBPDTY)="" I '$G(EVDT) S EVDT=DT
"RTN","IBCRCC",81,0)
 I +$G(ITEM),ITEM>79999,ITEM<90000 S (CS,PRV)=""
"RTN","IBCRCC",82,0)
 I +$G(CS) S IBSGFN=+$$CSSG^IBCRU6(+CS,"",2,.IBSG)
"RTN","IBCRCC",83,0)
 I +$G(PRV),+IBSGFN S IBPC=$$GET^XUA4A72(PRV,EVDT)
"RTN","IBCRCC",84,0)
 ;
"RTN","IBCRCC",85,0)
 S IBI=0 F  S IBI=$O(IBSG(IBI)) Q:'IBI  S IBSGFN=+IBSG(IBI) I +IBSGFN D
"RTN","IBCRCC",86,0)
 . S IBPDFN=0 F  S IBPDFN=$O(^IBE(363.34,"C",+IBSGFN,IBPDFN)) Q:'IBPDFN  D  Q:IBPDTY'=""
"RTN","IBCRCC",87,0)
 .. I '$O(^IBE(363.34,+IBPDFN,11,"B",+IBPC,0)) Q
"RTN","IBCRCC",88,0)
 .. S IBPD0=$G(^IBE(363.34,+IBPDFN,0)),IBY=$P(IBPD0,U,3) Q:IBY=""
"RTN","IBCRCC",89,0)
 .. S IBY=+IBY/100,IBX=IBY*IBX
"RTN","IBCRCC",90,0)
 .. S IBPDTY=U_$P($G(^VA(200,+PRV,0)),U,1)_" - "_$P(IBPD0,U,1)_" "_$P(IBPD0,U,3)_"% of "_$J(CHG,0,2)_U_+IBY
"RTN","IBCRCC",91,0)
 Q IBX_IBPDTY
"RTN","IBCRCC",92,0)
 ;
"RTN","IBCRCC",93,0)
HRUNIT(HRS) ; returns Hour Units based on the Hours passed in
"RTN","IBCRCC",94,0)
 ; Hour Units are the hours rounded to the nearest whole hour (less than 30 minutes is 0 units)
"RTN","IBCRCC",95,0)
 N IBX S IBX=0 I +$G(HRS) S IBX=$J(HRS,0,0)
"RTN","IBCRCC",96,0)
 Q IBX
"RTN","IBCRCC",97,0)
 ;
"RTN","IBCRCC",98,0)
MLUNIT(MLS) ; returns Miles Units based on the Miles passed in
"RTN","IBCRCC",99,0)
 ; Mile Units are the miles rounded to the nearest whole mile
"RTN","IBCRCC",100,0)
 N IBX S IBX=0 I +$G(MLS) S IBX=$J(MLS,0,0) I 'IBX S IBX=1
"RTN","IBCRCC",101,0)
 Q IBX
"RTN","IBCRCC",102,0)
 ;
"RTN","IBCRCC",103,0)
MNUNIT(MNS) ; return Minute Units based on the Minutes passed in
"RTN","IBCRCC",104,0)
 ; Minute Units are 15 minute intervals, rounded down for less than 5 minutes
"RTN","IBCRCC",105,0)
 N IBX S IBX=0 I +$G(MNS) S IBX=(MNS\15) S:(MNS#15)>4 IBX=IBX+1 I 'IBX S IBX=1
"RTN","IBCRCC",106,0)
 Q IBX
"RTN","IBCSC5A")
0^11^B42023841^B42043599
"RTN","IBCSC5A",1,0)
IBCSC5A ;ALB/ARH - ADD/ENTER PRESCRIPTION FILLS ; 12/27/93
"RTN","IBCSC5A",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,106,51,160,137,245,309,347**;21-MAR-94;Build 24
"RTN","IBCSC5A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC5A",4,0)
 ;
"RTN","IBCSC5A",5,0)
EN ;add/edit prescription fills for a bill, IBIFN required
"RTN","IBCSC5A",6,0)
 S IBX=$$BILL(IBIFN) Q:'IBIFN  S DFN=+IBX,IBDT1=$P(IBX,U,2),IBDT2=$P(IBX,U,3),IBRXALL=$P(IBX,U,4)
"RTN","IBCSC5A",7,0)
 D SET(IBIFN,.IBRXA,"")
"RTN","IBCSC5A",8,0)
 D RXDISP^IBCSC5C(DFN,IBDT1,IBDT2,.IBPR,.IBPRO,.IBRXA,IBRXALL) I +$P($G(IBPRO),U,2) D NEWRX^IBCSC5C(+IBPRO) I +$G(IBLIST) D ADDNEW^IBCSC5C(IBIFN,IBLIST,.IBPR,.IBPRO) S DGRVRCAL=1
"RTN","IBCSC5A",9,0)
 S IBRXAP=+$G(IBPRO) D SET(IBIFN,.IBRXA,.IBRXAP),DISP(.IBRXA,.IBRXAP)
"RTN","IBCSC5A",10,0)
E1 S IBPIFN=0,IBRX=$$ASKRX(.IBRXAP,.IBPRO) G:IBRX="" EXIT S IBDT=$P(IBRX,U,2),IBRX=$P(IBRX,U,1),DGRVRCAL=1
"RTN","IBCSC5A",11,0)
 I 'IBDT S IBDT=$O(IBRXA(IBRX,0)) S:'IBDT IBDT=$O(IBPR(IBRX,0)) S IBDT=$$ASKDT(IBDT1,IBDT2,IBDT) G:'IBDT E1
"RTN","IBCSC5A",12,0)
 I +$$RXDUP^IBCU3(IBRX,IBDT,IBIFN,1),'$D(IBRXA(IBRX,IBDT)) G E1
"RTN","IBCSC5A",13,0)
 I '$D(IBPR(IBRX,IBDT)) W !,"This rx fill does not exist in Pharmacy for this patient!",!
"RTN","IBCSC5A",14,0)
 S IBPIFN=$G(IBRXA(IBRX,IBDT)),IBDRG=$P(IBPIFN,U,2)
"RTN","IBCSC5A",15,0)
 I 'IBPIFN S IBX=$G(IBPR(IBRX,IBDT)),IBPIFN=$$ADD(IBRX,IBIFN,IBDT,$P(IBX,U,3),$P(IBX,U,1),$P(IBX,U,4,6)) D  G:'IBPIFN E1
"RTN","IBCSC5A",16,0)
 . I 'IBPIFN W " ??" Q
"RTN","IBCSC5A",17,0)
 . W "  ... ADDED"
"RTN","IBCSC5A",18,0)
 D EDIT(+IBPIFN,$P(IBPIFN,U,7)) S IBRXAP=+$G(IBPRO) D SET(IBIFN,.IBRXA,.IBRXAP) G E1
"RTN","IBCSC5A",19,0)
 ;
"RTN","IBCSC5A",20,0)
EXIT ;
"RTN","IBCSC5A",21,0)
 K IBPIFN,IBRX,IBDRG,IBX,IBDT1,IBDT2,IBRXA,IBPR,IBDT,IBLIST,IBPRO,IBRXAP,IBRXALL
"RTN","IBCSC5A",22,0)
 Q
"RTN","IBCSC5A",23,0)
 ;
"RTN","IBCSC5A",24,0)
ASKRX(IBRXAP,IBPRO) ;
"RTN","IBCSC5A",25,0)
 N X,Y,IBY,IBX W ! S IBX=""
"RTN","IBCSC5A",26,0)
 I +$G(IBIFN) S DIR("?")="The prescription number for the fill.  "_$$HTEXT^IBCSC5C,DIR("??")="^D HELP^IBCSC5A("_IBIFN_")"
"RTN","IBCSC5A",27,0)
 S DIR("A")="Select RX FILL",DIR(0)="FO^1:11^K:X'?.UN X" D ^DIR I $D(DIRUT)!(Y'?.AN) S Y="" K DIR,DIRUT G ARX1E
"RTN","IBCSC5A",28,0)
 S IBX=Y I $D(IBRXAP)<10,$D(IBPRO)<10 G ARX1E
"RTN","IBCSC5A",29,0)
 ;
"RTN","IBCSC5A",30,0)
 S IBY=$G(IBRXAP(IBX)) S:IBY="" IBY=$G(IBPRO(IBX)) I IBY="" G ARX1E
"RTN","IBCSC5A",31,0)
 W ! S DIR(0)="YO",DIR("A")="ADD/EDIT RX FILL "_$P(IBY,U,1)_" FOR "_$$FMTE^XLFDT($P(IBY,U,2))_" CORRECT",DIR("B")="YES"
"RTN","IBCSC5A",32,0)
 D ^DIR K DIR I Y=1,'$D(DIRUT) S IBX=IBY
"RTN","IBCSC5A",33,0)
ARX1E Q IBX
"RTN","IBCSC5A",34,0)
 ;
"RTN","IBCSC5A",35,0)
ASKDT(IBDT1,IBDT2,IBDT) ;
"RTN","IBCSC5A",36,0)
 S DIR("A")="Select RX FILL DATE",DIR(0)="DO^"_IBDT1_":"_IBDT2_":EX",DIR("B")=$$FMTE^XLFDT(IBDT) D ^DIR K DIR,DTOUT,DIRUT
"RTN","IBCSC5A",37,0)
 Q $S(Y?7N:Y,1:0)
"RTN","IBCSC5A",38,0)
 ;
"RTN","IBCSC5A",39,0)
ADD(RX,IFN,IBDT,DRUG,PIFN,OTHER) ;
"RTN","IBCSC5A",40,0)
 N IBX,X,Y,DD,DO,DA,DIC,DLAYGO
"RTN","IBCSC5A",41,0)
 S IBX=0 S DRUG=$$DRUG($G(DRUG)) G:'DRUG ADDE
"RTN","IBCSC5A",42,0)
 S DIC="^IBA(362.4,",DIC(0)="AQL",X=RX,DLAYGO=362.4 D FILE^DICN
"RTN","IBCSC5A",43,0)
 I Y>0 D
"RTN","IBCSC5A",44,0)
 . S DIE=DIC,(IBX,DA)=+Y,DR=".02////"_IFN_";.03////"_IBDT_";.04////"_DRUG_";.05////"_+PIFN_";.06////"_$P(OTHER,U,1)_";.07////"_$P(OTHER,U,2)_";.08////"_$P(OTHER,U,3) D ^DIE K DIE,DIC,DA,DR
"RTN","IBCSC5A",45,0)
 . S DGRVRCAL=1
"RTN","IBCSC5A",46,0)
ADDE Q IBX
"RTN","IBCSC5A",47,0)
 ;
"RTN","IBCSC5A",48,0)
EDIT(PIFN,REVIEN) ;
"RTN","IBCSC5A",49,0)
 N IBCHG,DIE,DR,DA,DIC,DIDEL
"RTN","IBCSC5A",50,0)
 S DIDEL=362.4,DIE="^IBA(362.4,"
"RTN","IBCSC5A",51,0)
 S DR=".01;.03;.04;.06;.07;.08;.09"
"RTN","IBCSC5A",52,0)
 S DA=PIFN D ^DIE
"RTN","IBCSC5A",53,0)
 I '$D(^IBA(362.4,PIFN,0)),$G(REVIEN) D  ; Deleted RX - delete related rev code/CPT code
"RTN","IBCSC5A",54,0)
 . I $P($G(^DGCR(399,IBIFN,"RC",REVIEN,0)),U,15) S DA(1)=IBIFN,DA=$P(^(0),U,15),DIK="^DGCR(399,"_DA(1)_",""CP""," D ^DIK
"RTN","IBCSC5A",55,0)
 . S DA=REVIEN,DA(1)=IBIFN,DIK="^DGCR(399,"_DA(1)_",""RC""," D ^DIK
"RTN","IBCSC5A",56,0)
 . S DGRVRCAL=1
"RTN","IBCSC5A",57,0)
 Q
"RTN","IBCSC5A",58,0)
 ;
"RTN","IBCSC5A",59,0)
SET(IFN,RXARR,RXARRP) ;setup array of all rx fills for bill, array name should be passed by reference
"RTN","IBCSC5A",60,0)
 ;returns: RXARR(RX #, FILL DT)=RX IFN (362.4) ^ DRUG ^ DAYS SUPPLY ^ QTY ^ NDC # ^ Charge if known ^ ien of associated rev code multiple, if known ^ NDC FORMAT INDICATOR (1-4)
"RTN","IBCSC5A",61,0)
 ;         RXARR=BILL IFN ^ RX count
"RTN","IBCSC5A",62,0)
 N CNT,IBX,IBY,IBZ,PIFN,IBC,IBCNT,IBRC S IBCNT=+$G(RXARRP),IBC="AIFN"_$G(IFN) K RXARR,RXARRP
"RTN","IBCSC5A",63,0)
 ;
"RTN","IBCSC5A",64,0)
 D RCITEM(IFN,"IBRC",3)
"RTN","IBCSC5A",65,0)
 S (CNT,IBX)=0 F  S IBX=$O(^IBA(362.4,IBC,IBX)) Q:IBX=""  S PIFN=0 F  S PIFN=$O(^IBA(362.4,IBC,IBX,PIFN)) Q:'PIFN  D
"RTN","IBCSC5A",66,0)
 .S IBY=$G(^IBA(362.4,PIFN,0)) Q:IBY=""  S CNT=CNT+1,RXARR($P(IBY,U,1),+$P(IBY,U,3))=PIFN_U_$P(IBY,U,4)_U_$P(IBY,U,6,8),$P(RXARR($P(IBY,U),+$P(IBY,U,3)),U,6)=$$CHG^IBCF4(PIFN,3,.IBRC)
"RTN","IBCSC5A",67,0)
 . I $G(IFN) S $P(RXARR($P(IBY,U),+$P(IBY,U,3)),U,7)=$$FINDREV(IFN,3,PIFN)
"RTN","IBCSC5A",68,0)
 . S $P(RXARR($P(IBY,U),+$P(IBY,U,3)),U,8)=$P(IBY,U,9)
"RTN","IBCSC5A",69,0)
 ;
"RTN","IBCSC5A",70,0)
 S RXARR=$G(IFN)_"^"_CNT
"RTN","IBCSC5A",71,0)
 S IBX=0 F  S IBX=$O(RXARR(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(RXARR(IBX,IBY)) Q:'IBY  S IBCNT=IBCNT+1,RXARRP(IBCNT)=IBX_"^"_IBY_"^"_$P(RXARR(IBX,IBY),U,7)
"RTN","IBCSC5A",72,0)
 Q
"RTN","IBCSC5A",73,0)
 ;
"RTN","IBCSC5A",74,0)
DISP(RXARR,RXARRP) ;screen display of existing fills for a bill: input should be print order array returned by SET^IBCSC5A: RXARR(RX,DT)=RX IFN (362.4) ^ DRUG, passed by reference
"RTN","IBCSC5A",75,0)
 N IBX,IBY,IBZ,IBS,IBP,IBIFN
"RTN","IBCSC5A",76,0)
 W !!,?5,"-----------------  Existing Prescriptions on Bill  -----------------",!
"RTN","IBCSC5A",77,0)
 S IBIFN=+$G(RXARR)
"RTN","IBCSC5A",78,0)
 S IBI=0 F  S IBI=$O(RXARRP(IBI)) Q:IBI=""  S IBX=$P(RXARRP(IBI),U,1),IBY=$P(RXARRP(IBI),U,2) I $D(RXARR(IBX,IBY)) D
"RTN","IBCSC5A",79,0)
 . S IBS=$$RXSTAT^IBCU1(+$P(RXARR(IBX,IBY),U,2),+$P($G(^IBA(362.4,+RXARR(IBX,IBY),0)),U,5),IBY)
"RTN","IBCSC5A",80,0)
 . D ZERO^IBRXUTL(+$P(RXARR(IBX,IBY),U,2))
"RTN","IBCSC5A",81,0)
 . S IBZ=$G(^TMP($J,"IBDRUG",+$P(RXARR(IBX,IBY),U,2),.01)),IBP=$$PRVNM(+RXARR(IBX,IBY))
"RTN","IBCSC5A",82,0)
 . K ^TMP($J,"IBDRUG")
"RTN","IBCSC5A",83,0)
 . W !,$J(IBI,2),")",?5,IBX,?19,$E(IBZ,1,25),?46,$$DATE^IBCSC5C(IBY),?56,$P(IBS,U,1),?61,$P(IBS,U,2),?69,$P(IBS,U,3)
"RTN","IBCSC5A",84,0)
 . S IBZ=$$RXDUP^IBCU3(IBX,IBY,IBIFN) I +IBZ W ?73,$P($G(^DGCR(399,+IBZ,0)),U,1)
"RTN","IBCSC5A",85,0)
 . S IBZ=$G(^DGCR(399,IBIFN,"RC",+$P(RXARR(IBX,IBY),U,7),0))
"RTN","IBCSC5A",86,0)
 . W !,?5,$E(IBP,1,25),?35,"(Rx Procedure ",$S($P(IBZ,U,15):"#"_$P(IBZ,U,15)_" "_$$CPTNM^IBCRBH1(IBIFN,4,$P(IBZ,U,15)),1:"Missing"),"  Rev Code ",$S(IBZ:"#"_+$P(RXARR(IBX,IBY),U,7)_" "_$P($G(^DGCR(399.2,+IBZ,0)),U),1:"Missing"),")"
"RTN","IBCSC5A",87,0)
 W !
"RTN","IBCSC5A",88,0)
 Q
"RTN","IBCSC5A",89,0)
 ;
"RTN","IBCSC5A",90,0)
HELP(IFN) ;called for help from rx enter to display existing rx, displays rx' from 52 and 399
"RTN","IBCSC5A",91,0)
 I +$G(IFN) N IBX,IBRXA S IBX=$$BILL(IFN) I +IBX D SET(IFN,.IBRXA,""),RXDISP^IBCSC5C($P(IBX,U,1),$P(IBX,U,2),$P(IBX,U,3),.IBPR,.IBPRO,.IBRXA,$P(IBX,U,4)) S IBRXAP=+IBPRO D SET(IFN,.IBRXA,.IBRXAP),DISP(.IBRXA,.IBRXAP)
"RTN","IBCSC5A",92,0)
 Q
"RTN","IBCSC5A",93,0)
BILL(IBIFN) ; return data on a bill 'patient ifn ^ from dt ^ to dt ^ true if add original rx'
"RTN","IBCSC5A",94,0)
 N IBX,IBY
"RTN","IBCSC5A",95,0)
 S IBX=$G(^DGCR(399,+$G(IBIFN),0)),IBY=$P(IBX,U,2)
"RTN","IBCSC5A",96,0)
 I '$$PERDIEM^IBCRU3(+$P(IBX,U,7),+$P(IBX,U,5),+$P(IBX,U,3)) S $P(IBY,U,4)=1
"RTN","IBCSC5A",97,0)
 S IBX=$G(^DGCR(399,+IBIFN,"U")),$P(IBY,U,2)=+IBX,$P(IBY,U,3)=+$P(IBX,U,2)
"RTN","IBCSC5A",98,0)
 Q IBY
"RTN","IBCSC5A",99,0)
DRUG(IBD) ; get drug
"RTN","IBCSC5A",100,0)
 N X,Y S IBD=+$G(IBD) S DIC(0)="VQ",DIC="^PSDRUG(" D DIC^PSSDI(50,"PS",.DIC,IBD,) I +Y<0  S IBD=0,DIC="^PSDRUG(",DIC(0)="AEQ" D DIC^PSSDI(50,"PS",.DIC,,) K DIC I +Y>0 S IBD=+Y
"RTN","IBCSC5A",101,0)
 Q IBD
"RTN","IBCSC5A",102,0)
 ;
"RTN","IBCSC5A",103,0)
RCITEM(IBIFN,ARRAY,TYPE) ; Pull off all item charges from RC multiple 
"RTN","IBCSC5A",104,0)
 ;  for item TYPE on bill IBIFN, return array ARRAY
"RTN","IBCSC5A",105,0)
 ; If type = "ALL", pull off all types
"RTN","IBCSC5A",106,0)
 ;Set up @ARRAY@(type,item reference,ct)=# units^unit charge
"RTN","IBCSC5A",107,0)
 ; If no pointer to an item, this was a manually entered charge and
"RTN","IBCSC5A",108,0)
 ;  will only 'associate' with the items found in the appropriate
"RTN","IBCSC5A",109,0)
 ;  item source file that are not referenced by an item in the revenue
"RTN","IBCSC5A",110,0)
 ;  code multiple in a sequential fashion (first unassociated 'RC' will
"RTN","IBCSC5A",111,0)
 ;  correlate to the first unassociated entry found for the bill in source file)
"RTN","IBCSC5A",112,0)
 N Z,Z0,Z1
"RTN","IBCSC5A",113,0)
 S Z=0
"RTN","IBCSC5A",114,0)
 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) I $S(TYPE="ALL":1,1:$P(Z0,U,10)=TYPE) I $P(Z0,U,10)'="" S Z1=$S($P(Z0,U,11)="":0,1:$P(Z0,U,11)),@ARRAY@($P(Z0,U,10),Z1,Z)=$P(Z0,U,3)_U_$P(Z0,U,2)
"RTN","IBCSC5A",115,0)
 Q
"RTN","IBCSC5A",116,0)
 ;
"RTN","IBCSC5A",117,0)
FINDREV(IBIFN,TYP,PTR) ; Finds the first revenue code that matches the
"RTN","IBCSC5A",118,0)
 ; same item type and item pointer
"RTN","IBCSC5A",119,0)
 ;
"RTN","IBCSC5A",120,0)
 N REVIEN,Z,Z0
"RTN","IBCSC5A",121,0)
 S Z=0
"RTN","IBCSC5A",122,0)
 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) I $P(Z0,U,10)=TYP,$P(Z0,U,11)=PTR S REVIEN=Z Q
"RTN","IBCSC5A",123,0)
 Q $G(REVIEN)
"RTN","IBCSC5A",124,0)
 ;
"RTN","IBCSC5A",125,0)
NDCNUM(IBNDC) ; Returns the format of the NDC # IBNDC, if possible
"RTN","IBCSC5A",126,0)
 N Z
"RTN","IBCSC5A",127,0)
 S Z=$TR(IBNDC,"-")
"RTN","IBCSC5A",128,0)
 Q $S(IBNDC?4N1"-"4N1"-"2N:1,IBNDC?5N1"-"3N1"-"2N:2,IBNDC?5N1"-"4N1"-"1N:3,IBNDC?5N1"-"4N1"-"2N!($L(Z)=11):4,IBNDC'="":1,1:"")
"RTN","IBCSC5A",129,0)
 ;
"RTN","IBCSC5A",130,0)
PRVNM(PIFN) ; return provider name for an rx, if one defined or null
"RTN","IBCSC5A",131,0)
 N IBX,IBPRV,IBRXIFN S IBPRV=""
"RTN","IBCSC5A",132,0)
 S IBRXIFN=$P($G(^IBA(362.4,+$G(PIFN),0)),U,5) I +IBRXIFN S IBX=$$FILE^IBRXUTL(IBRXIFN,4) I +IBX S IBPRV=$P($G(^VA(200,+IBX,0)),U,1)
"RTN","IBCSC5A",133,0)
 Q IBPRV
"RTN","IBCSC5C")
0^12^B44689087^B37694343
"RTN","IBCSC5C",1,0)
IBCSC5C ;ALB/ARH - ADD/EDIT PRESCRIPTION FILLS (CONTINUED) ;3/4/94
"RTN","IBCSC5C",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,130,51,160,260,309,315,339,347**;21-MAR-94;Build 24
"RTN","IBCSC5C",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC5C",4,0)
 ;
"RTN","IBCSC5C",5,0)
 ;
"RTN","IBCSC5C",6,0)
DEFAULT(IFN,IBRX) ; add default DX and CPT to a prescription bill
"RTN","IBCSC5C",7,0)
 ; if one is not in PSO. If there is, use it instead.
"RTN","IBCSC5C",8,0)
 ; IFN = ien of bill entry
"RTN","IBCSC5C",9,0)
 N IBX,IBPAR1,IBDX,IBCPT,IBDT,IBBIL,IBDXIFN,IBCPTIFN,IBY,IB52,IBC,PDFN,LIST,NODE
"RTN","IBCSC5C",10,0)
 S IBDXIFN=0
"RTN","IBCSC5C",11,0)
 S IBPAR1=$G(^IBE(350.9,1,1)),IBDX=$P(IBPAR1,U,29),IBCPT=$P(IBPAR1,U,30)
"RTN","IBCSC5C",12,0)
 S IBBIL=$G(^DGCR(399,+$G(IFN),0)) Q:IBBIL=""
"RTN","IBCSC5C",13,0)
 S IBX=$S($G(IBRX):$P($G(^DGCR(399,IFN,"RC",+IBRX,0)),U,11),1:$O(^IBA(362.4,"C",IFN,0))) Q:'IBX
"RTN","IBCSC5C",14,0)
 S IB52=+$P($G(^IBA(362.4,IBX,0)),"^",5),IBY=0
"RTN","IBCSC5C",15,0)
 S PDFN=$$FILE^IBRXUTL(IB52,2)
"RTN","IBCSC5C",16,0)
 S LIST="IBCSC5CARR"
"RTN","IBCSC5C",17,0)
 S NODE="ICD"
"RTN","IBCSC5C",18,0)
 D RX^PSO52API(PDFN,LIST,IB52,,NODE,,)
"RTN","IBCSC5C",19,0)
 I ^TMP($J,LIST,PDFN,IB52,"ICD",0)>0 D
"RTN","IBCSC5C",20,0)
 .S IBY=0 F  S IBY=$O(^TMP($J,LIST,PDFN,IB52,"ICD",IBY)) Q:IBY'>0  D
"RTN","IBCSC5C",21,0)
 ..S IBDX(IBY)=$$ICD^IBRXUTL1(PDFN,IB52,IBY,LIST)
"RTN","IBCSC5C",22,0)
 ..I 'IBDX(IBY) K IBDX(IBY)
"RTN","IBCSC5C",23,0)
 K ^TMP($J,LIST)
"RTN","IBCSC5C",24,0)
 I 'IBDX,'IBCPT,$D(IBDX)<10 Q
"RTN","IBCSC5C",25,0)
 S IBDT=$P($G(^IBA(362.4,+IBX,0)),U,3) Q:'IBDT
"RTN","IBCSC5C",26,0)
 ; add dx associated with rx if they are there.
"RTN","IBCSC5C",27,0)
 I $D(IBDX)>9 S (IBC,IBDX,IBY)=0 F  S IBY=$O(IBDX(IBY)) Q:'IBY  D
"RTN","IBCSC5C",28,0)
 . I $D(^IBA(362.3,"AIFN"_IFN,+IBDX(IBY))) Q
"RTN","IBCSC5C",29,0)
 . S IBC=IBC+1
"RTN","IBCSC5C",30,0)
 . S DIC="^IBA(362.3,",DIC(0)="L",DIC("DR")=".02////"_IFN_";.03////"_IBC,X=+IBDX(IBY),DLAYGO=362.3
"RTN","IBCSC5C",31,0)
 . K DD,DO D FILE^DICN K DIC,DA,DR,DD,DO,DLAYGO
"RTN","IBCSC5C",32,0)
 . S IBDXIFN(IBC)=+Y
"RTN","IBCSC5C",33,0)
 ; add default dx if none found on actual rx.
"RTN","IBCSC5C",34,0)
 I +IBDX,'$D(^IBA(362.3,"AIFN"_IFN,+IBDX)) S DIC="^IBA(362.3,",DIC(0)="L",DIC("DR")=".02////"_IFN,X=IBDX,DLAYGO=362.3 K DD,DO D FILE^DICN K DIC,DA,DR,DD,DO,DLAYGO S IBDXIFN=+Y
"RTN","IBCSC5C",35,0)
 I +IBCPT D  ;Check if the procedure is already present for the Rx
"RTN","IBCSC5C",36,0)
 . N Z,Z0,DUP
"RTN","IBCSC5C",37,0)
 . S (DUP,Z)=0 F  S Z=$O(^DGCR(399,IFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) D  Q:DUP
"RTN","IBCSC5C",38,0)
 .. I $P(Z0,U,10)=3,$P(Z0,U,15),$P(Z0,U,11)=IBX S DUP=1
"RTN","IBCSC5C",39,0)
 . Q:DUP
"RTN","IBCSC5C",40,0)
 . I $P($G(^DGCR(399,IFN,0)),U,9)="" S DIE="^DGCR(399,",DA=IFN,DR=".09////5" D ^DIE K DIE,DIC,DA,DR
"RTN","IBCSC5C",41,0)
 . I '$D(^DGCR(399,IFN,"CP",0)) S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCSC5C",42,0)
 . S DLAYGO=399,DIC("DR")="1////"_IBDT D
"RTN","IBCSC5C",43,0)
 . . I +IBDXIFN>0 S DIC("DR")=DIC("DR")_";10////"_IBDXIFN Q
"RTN","IBCSC5C",44,0)
 . . I $D(IBDXIFN)>9 F IBY=1:1:4 I $D(IBDXIFN(IBY)) S DIC("DR")=DIC("DR")_";"_(IBY+9)_"////"_IBDXIFN(IBY)
"RTN","IBCSC5C",45,0)
 . S DIC="^DGCR(399,"_IFN_",""CP"",",DIC(0)="L",DA(1)=IFN,X=IBCPT_";ICPT(" K DD,DO D FILE^DICN K DIC,DA,DD,DO,DR,DLAYGO
"RTN","IBCSC5C",46,0)
 . I +Y D
"RTN","IBCSC5C",47,0)
 .. N Z,IBZ
"RTN","IBCSC5C",48,0)
 .. S IBZ=+Y,Z=$S($G(IBREV):IBREV,1:$$FINDREV^IBCSC5A(IFN,3,+IBX))
"RTN","IBCSC5C",49,0)
 .. I Z S DR=".15////"_IBZ_";.06////"_IBCPT,DA=+Z,DA(1)=IFN,DIE="^DGCR(399,"_DA(1)_",""RC""," D ^DIE
"RTN","IBCSC5C",50,0)
  Q
"RTN","IBCSC5C",51,0)
 ;
"RTN","IBCSC5C",52,0)
RXDISP(DFN,DT1,DT2,ARRAY,POARR,RXARR,IBRXALL,NODISP) ; display all rx fills for a patient and date range
"RTN","IBCSC5C",53,0)
 ;RXARR (as defined by SET^IBCSC5A) passed by ref. only to check if rx-fill is on the bill, not necessary not changed
"RTN","IBCSC5C",54,0)
 ;returns: ARRAY(RX #, FILL DT) = RX IFN (52) ^ FILL IFN ^ DRUG ^ DAYS SUPPLY ^ QTY ^ NDC, pass by reference if desired
"RTN","IBCSC5C",55,0)
 ; POARR(CNT)=RX # ^ FILL DT
"RTN","IBCSC5C",56,0)
 N PIFN,RIFN,IBX,IBY,DTE,DTR,RX,IBCNT,IBRX0,IBRX2,IBS,LIST,LIST2 K ARRAY,POARR S POARR=0,NODISP=+$G(NODISP)
"RTN","IBCSC5C",57,0)
 S IBCNT=0,DT1=$G(DT1)-.0001,DT2=$G(DT2) S:'DT2 DT2=9999999 Q:'$G(DFN)
"RTN","IBCSC5C",58,0)
 ;^PS(55,DFN,"P","A",EXPIRATION DATE, RX) is the best xref available for finding patient fills in a date range
"RTN","IBCSC5C",59,0)
 ;if RX expires/cancelled before start of bill then should not be applicable to bill
"RTN","IBCSC5C",60,0)
 S LIST="IBRXDISPARR"
"RTN","IBCSC5C",61,0)
 D PROF^PSO52API(DFN,LIST,DT1)
"RTN","IBCSC5C",62,0)
 S DTE=0 F  S DTE=$O(^TMP($J,LIST,"B",DTE)) Q:'DTE  D
"RTN","IBCSC5C",63,0)
 . S PIFN=0 F  S PIFN=$O(^TMP($J,LIST,"B",DTE,PIFN)) Q:'PIFN  D
"RTN","IBCSC5C",64,0)
 .. S IBRX0=$$RXZERO^IBRXUTL(DFN,PIFN),IBRX2=$$RXSEC^IBRXUTL(DFN,PIFN)
"RTN","IBCSC5C",65,0)
 .. ; original fill
"RTN","IBCSC5C",66,0)
 .. I +$G(IBRXALL) S DTR=$P(IBRX2,U,2) I DTR'<DT1,DTR'>DT2 D
"RTN","IBCSC5C",67,0)
 ... D DATA^IBRXUTL(+$P(IBRX0,U,6))
"RTN","IBCSC5C",68,0)
 ... S ARRAY($P(IBRX0,U,1),+DTR)=PIFN_U_0_U_$P(IBRX0,U,6)_U_$P(IBRX0,U,8)_U_$P(IBRX0,U,7)_U_$G(^TMP($J,"IBDRUG",+$P(IBRX0,U,6),31))
"RTN","IBCSC5C",69,0)
 ... K ^TMP($J,"IBDRUG")
"RTN","IBCSC5C",70,0)
 ... Q
"RTN","IBCSC5C",71,0)
 .. ; refills
"RTN","IBCSC5C",72,0)
 .. S LIST2="IBDISPSUB"
"RTN","IBCSC5C",73,0)
 .. S NODE="R"
"RTN","IBCSC5C",74,0)
 .. D RX^PSO52API(DFN,LIST2,PIFN,,NODE,,)
"RTN","IBCSC5C",75,0)
 .. S RIFN=0 F  S RIFN=$O(^TMP($J,LIST2,DFN,PIFN,"RF",RIFN)) Q:RIFN'>0  D
"RTN","IBCSC5C",76,0)
 ... S IBY=$$ZEROSUB^IBRXUTL(DFN,PIFN,RIFN) Q:IBY=""
"RTN","IBCSC5C",77,0)
 ... Q:+IBY<DT1!(+IBY>DT2)
"RTN","IBCSC5C",78,0)
 ... D DATA^IBRXUTL(+$P(IBRX0,U,6))
"RTN","IBCSC5C",79,0)
 ... S ARRAY($P(IBRX0,U,1),+IBY)=PIFN_U_RIFN_U_$P(IBRX0,U,6)_U_$P(IBRX0,U,8)_U_$P(IBY,U,4)_U_$G(^TMP($J,"IBDRUG",+$P(IBRX0,U,6),31))
"RTN","IBCSC5C",80,0)
 ... K ^TMP($J,"IBDRUG")
"RTN","IBCSC5C",81,0)
 ... Q
"RTN","IBCSC5C",82,0)
 .. K ^TMP($J,LIST2)
"RTN","IBCSC5C",83,0)
 K ^TMP($J,LIST)
"RTN","IBCSC5C",84,0)
 ;
"RTN","IBCSC5C",85,0)
 S IBX="",IBS=0 F  S IBX=$O(ARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(ARRAY(IBX,IBY)) Q:'IBY  D
"RTN","IBCSC5C",86,0)
 . S IBCNT=IBCNT+1,POARR(IBCNT)=$P(IBX,U,1)_"^"_+IBY,POARR=IBCNT I $D(RXARR(IBX,IBY)) S IBS=IBS+1
"RTN","IBCSC5C",87,0)
 S $P(POARR,U,2)=IBCNT-IBS
"RTN","IBCSC5C",88,0)
 ;
"RTN","IBCSC5C",89,0)
 Q:+NODISP
"RTN","IBCSC5C",90,0)
 W @IOF,?33,"PRESCRIPTIONS IN DATE RANGE",!,"===============================================================================",!
"RTN","IBCSC5C",91,0)
 S IBCNT=0 F  S IBCNT=$O(POARR(IBCNT)) Q:IBCNT=""  S RX=$P(POARR(IBCNT),U,1),DTR=$P(POARR(IBCNT),U,2) I RX'="",DTR'="" D
"RTN","IBCSC5C",92,0)
 . S IBS=$$RXSTAT^IBCU1($P(ARRAY(RX,DTR),U,3),$P(ARRAY(RX,DTR),U,1),DTR)
"RTN","IBCSC5C",93,0)
 . S IBY="" I $D(RXARR(RX,+DTR)) S IBY="*"
"RTN","IBCSC5C",94,0)
 . D ZERO^IBRXUTL(+$P(ARRAY(RX,DTR),U,3))
"RTN","IBCSC5C",95,0)
 . W !,$J(IBCNT,2),")",?5,IBY,?6,RX,?19,$E($G(^TMP($J,"IBDRUG",+$P(ARRAY(RX,DTR),U,3),.01)),1,25),?46,$$DATE(+DTR),?56,$P(IBS,U,1),?61,$P(IBS,U,2),?69,$P(IBS,U,3),?75,$$EXEMPT(+ARRAY(RX,DTR))
"RTN","IBCSC5C",96,0)
 . S IBY=$$RXDUP^IBCU3(RX,DTR,IBIFN) I +IBY W ?73,$P($G(^DGCR(399,+IBY,0)),U,1)
"RTN","IBCSC5C",97,0)
 . K ^TMP($J,"IBDRUG")
"RTN","IBCSC5C",98,0)
 Q
"RTN","IBCSC5C",99,0)
DATE(X) Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCSC5C",100,0)
 ;
"RTN","IBCSC5C",101,0)
NEWRX(IBX) ;
"RTN","IBCSC5C",102,0)
 Q:'$G(IBX)  N X,Y K IBLIST W !
"RTN","IBCSC5C",103,0)
NEWRX1 S DIR("?")="Enter the number preceding the RX Fills you want added to the bill. "_$$HTEXT
"RTN","IBCSC5C",104,0)
 S DIR("A")="SELECT NEW RX FILLS TO ADD THE BILL"
"RTN","IBCSC5C",105,0)
 S DIR(0)="LO^1:"_+IBX D ^DIR K DIR G:'Y!$D(DIRUT) NEWRXE
"RTN","IBCSC5C",106,0)
 S IBLIST=Y
"RTN","IBCSC5C",107,0)
 ;
"RTN","IBCSC5C",108,0)
 S DIR("A")="YOU HAVE SELECTED "_IBLIST_" TO BE ADDED TO THE BILL IS THIS CORRECT",DIR("B")="YES"
"RTN","IBCSC5C",109,0)
 S DIR(0)="YO" D ^DIR K DIR I $D(DIRUT) K IBLIST G NEWRXE
"RTN","IBCSC5C",110,0)
 I 'Y K IBLIST G NEWRX1
"RTN","IBCSC5C",111,0)
NEWRXE Q
"RTN","IBCSC5C",112,0)
 ;
"RTN","IBCSC5C",113,0)
ADDNEW(IBIFN,LIST,IBPR,IBPRO) ;
"RTN","IBCSC5C",114,0)
 Q:'LIST  N IBI,IBX,IBRX,IBDT,IBQ,IBY,IBPIFN,IBZ
"RTN","IBCSC5C",115,0)
 F IBI=1:1 S IBX=$P(LIST,",",IBI) Q:'IBX  I $D(IBPRO(IBX)) D
"RTN","IBCSC5C",116,0)
 . S IBRX=$P(IBPRO(IBX),U,1),IBDT=$P(IBPRO(IBX),U,2) Q:IBRX=""
"RTN","IBCSC5C",117,0)
 . S IBQ=0,IBY=$G(IBPR(IBRX,+IBDT)) Q:'IBY
"RTN","IBCSC5C",118,0)
 . S IBPIFN=0 F  S IBPIFN=$O(^IBA(362.4,"AIFN"_IBIFN,IBRX,IBPIFN)) Q:'IBPIFN  I $P($G(^IBA(362.4,IBPIFN,0)),U,3)=IBDT S IBQ=1 Q
"RTN","IBCSC5C",119,0)
 . I 'IBQ S IBZ=$G(IBPR(IBRX,IBDT)) I $$ADD^IBCSC5A(IBRX,IBIFN,IBDT,$P(IBZ,U,3),$P(IBZ,U,1),$P(IBZ,U,4,6)) W "."
"RTN","IBCSC5C",120,0)
 Q
"RTN","IBCSC5C",121,0)
 ;
"RTN","IBCSC5C",122,0)
HTEXT() ;
"RTN","IBCSC5C",123,0)
 N X S X="If an Rx fill has been assigned to another bill it will be displayed in the last column. [ORG=Original Fill, NR=Not Released, RTS=Returned to Stock, OTC=Over-the-Counter, INV=Investigational, SUP=Supply Item]"
"RTN","IBCSC5C",124,0)
 Q X
"RTN","IBCSC5C",125,0)
 ;
"RTN","IBCSC5C",126,0)
RXLINK(IBIFN,CPIEN) ; Function returns the ien of the Rx rev code the proc
"RTN","IBCSC5C",127,0)
 ; code is linked to or 0 if no link found.
"RTN","IBCSC5C",128,0)
 Q +$O(^DGCR(399,IBIFN,"RC","ACP",+CPIEN,0))
"RTN","IBCSC5C",129,0)
 ;
"RTN","IBCSC5C",130,0)
EXEMPT(RX) ; Used to look up exemption if any on rx, the return value
"RTN","IBCSC5C",131,0)
 ; will be only the first exemption reason found.
"RTN","IBCSC5C",132,0)
 N IBX,IBZ,IBS,IBR,PDFN,LIST,NODE,ICDCT
"RTN","IBCSC5C",133,0)
 S PDFN=$$FILE^IBRXUTL(RX,2)
"RTN","IBCSC5C",134,0)
 S LIST="IBRXARREX"
"RTN","IBCSC5C",135,0)
 S NODE="ICD"
"RTN","IBCSC5C",136,0)
 D RX^PSO52API(PDFN,LIST,RX,,NODE,,)
"RTN","IBCSC5C",137,0)
 S ICDCT=$G(^TMP($J,LIST,PDFN,RX,"ICD",0))
"RTN","IBCSC5C",138,0)
 S IBR="",(IBS,IBX)=0
"RTN","IBCSC5C",139,0)
 I ICDCT>0 D
"RTN","IBCSC5C",140,0)
 .S IBX=0 F  S IBX=$O(^TMP($J,LIST,PDFN,RX,"ICD",IBX)) Q:IBX'>0!(IBS)  D
"RTN","IBCSC5C",141,0)
 ..S IBZ=$$ICD^IBRXUTL1(PDFN,RX,IBX,LIST) F IBP=2:1:8 Q:IBS  I $P(IBZ,"^",IBP) S IBR=$P($T(EREASON+(IBP-1)),";",3),IBS=1
"RTN","IBCSC5C",142,0)
 K ^TMP($J,LIST)
"RTN","IBCSC5C",143,0)
 Q IBR
"RTN","IBCSC5C",144,0)
EREASON ;
"RTN","IBCSC5C",145,0)
 ;;AO
"RTN","IBCSC5C",146,0)
 ;;IR
"RTN","IBCSC5C",147,0)
 ;;SC
"RTN","IBCSC5C",148,0)
 ;;SWA
"RTN","IBCSC5C",149,0)
 ;;MST
"RTN","IBCSC5C",150,0)
 ;;HNC
"RTN","IBCSC5C",151,0)
 ;;CV
"RTN","IBCSC5C",152,0)
 ;;SHAD
"RTN","IBCSC5C",153,0)
 ;
"RTN","IBCU1")
0^13^B43690980^B42846592
"RTN","IBCU1",1,0)
IBCU1 ;ALB/MRL - BILLING UTILITY ROUTINE (CONTINUED) ;01 JUN 88 12:00
"RTN","IBCU1",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,106,138,51,182,210,266,309,320,347**;21-MAR-94;Build 24
"RTN","IBCU1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCU1",4,0)
 ;
"RTN","IBCU1",5,0)
 ;MAP TO DGCRU1
"RTN","IBCU1",6,0)
 ;
"RTN","IBCU1",7,0)
 ;procedure doesn't appear to be used (6/4/93), if it is used, what for??
"RTN","IBCU1",8,0)
 ;where would multiple provider numbers comde from?  ARH
"RTN","IBCU1",9,0)
 ;BCH    ;Blue Cross/Shield Help
"RTN","IBCU1",10,0)
 W ! S IB01=$P($G(^IBE(350.9,1,1)),"^",6)
"RTN","IBCU1",11,0)
 I IB01]"" W "CHOOSE FROM",!!?4,"1 - ",$P(IB01,"^",6) F IB00=2,3 I $P(IB01,"^",$S(IB00=2:14,1:15))]"" W !?4,IB00," - ",$P(IB01,"^",$S(IB00=2:14,1:15))
"RTN","IBCU1",12,0)
 W:IB01']"" "NO BLUE CROSS/SHIELD PROVIDER NUMBERS IDENTIFIED TO SELECT FROM!" W ! W:IB01]"" !,"OR " W "ENTER BLUE CROSS/SHIELD PROVIDER # (BETWEEN 3-13 CHARACTERS)",! K IB00,IB01 Q
"RTN","IBCU1",13,0)
 ;
"RTN","IBCU1",14,0)
RCD ;Revenue Code Display
"RTN","IBCU1",15,0)
 Q:'$D(^DGCR(399,IBIFN,"RC"))
"RTN","IBCU1",16,0)
 W @IOF,!,"Revenue Code Listing",?34,"Units",?45,"Charge" W:$$FT^IBCEF(IBIFN)=3 ?56,"Non-Cov"
"RTN","IBCU1",17,0)
 S DGIFN=0 F IBI=0:0 S DGIFN=$O(^DGCR(399,IBIFN,"RC",DGIFN)) Q:'DGIFN  I $D(^DGCR(399,IBIFN,"RC",DGIFN,0)) S Z=^(0) D DISRC
"RTN","IBCU1",18,0)
 W !
"RTN","IBCU1",19,0)
 I $D(DIC(0)) S DIC(0)=DIC(0)_"N"
"RTN","IBCU1",20,0)
 Q
"RTN","IBCU1",21,0)
DISRC N Z0 W !?1,DGIFN,?4,$P(^DGCR(399.2,+Z,0),"^"),"-",$E($P(^DGCR(399.2,+Z,0),"^",2),1,19)
"RTN","IBCU1",22,0)
 I +$P(Z,U,6) W ?28,$P($$CPT^ICPTCOD(+$P(Z,U,6)),U,2)
"RTN","IBCU1",23,0)
 W ?36,$P(Z,"^",3),?40 S X=$P(Z,"^",2),X2="2$" D COMMA^%DTC W X
"RTN","IBCU1",24,0)
 I $$FT^IBCEF(IBIFN)=3,$P(Z,U,9)'="" S X=$P(Z,U,9),X2="2$" D COMMA^%DTC W ?51,X
"RTN","IBCU1",25,0)
 I $D(^DGCR(399.1,+$P(Z,"^",5),0)) W ?64,$E($P(^(0),"^"),1,15)
"RTN","IBCU1",26,0)
 I $S($P(Z,U,15):1,1:$P(Z,U,10)=3) D
"RTN","IBCU1",27,0)
 . W !,?5,"(Rx: ",$S($P(Z,U,11):$P($G(^IBA(362.4,$P(Z,U,11),0)),U),1:"Link Missing"),"  Procedure "_$S($P(Z,U,15):"#"_$P(Z,U,15)_" "_$$CPTNM^IBCRBH1(IBIFN,4,$P(Z,U,15)),1:"Link Missing"),")"
"RTN","IBCU1",28,0)
 Q
"RTN","IBCU1",29,0)
 ;
"RTN","IBCU1",30,0)
RVCPRC(IBIFN,IBD0) ; returns 1 if CHAMPVA rate type + 2 if CMS-1500, 0 otherwise
"RTN","IBCU1",31,0)
 ; IBD0 - zero node of bill if available, not required
"RTN","IBCU1",32,0)
 N X S X=0
"RTN","IBCU1",33,0)
 I $G(IBD0)="" S IBD0=$G(^DGCR(399,+$G(IBIFN),0))
"RTN","IBCU1",34,0)
 I $P($G(^DGCR(399.3,+$P(IBD0,U,7),0)),U,1)="CHAMPVA" S X=X+1
"RTN","IBCU1",35,0)
 I $P(IBD0,U,19)=2 S X=X+2
"RTN","IBCU1",36,0)
 Q X
"RTN","IBCU1",37,0)
 ;
"RTN","IBCU1",38,0)
ORDNXT(IFN) ;CALLED BY TRIGGER ON (362.3,.02) THAT SETS DX PRINT ORDER (362.3,.03),
"RTN","IBCU1",39,0)
 ;returns the highest print order used on the bill plus 3, returns 3 if no existing print order
"RTN","IBCU1",40,0)
 ;used for the default print order so that dx's can be printed in order of entry without any input by the user,
"RTN","IBCU1",41,0)
 ;3 is added to allow spaces for additions, changes, moves
"RTN","IBCU1",42,0)
 N X,Y S X="" I $D(^DGCR(399,+$G(IFN),0)) S X=3,Y=0 F  S Y=$O(^IBA(362.3,"AO",+IFN,Y)) Q:'Y  S X=Y+3
"RTN","IBCU1",43,0)
 Q X
"RTN","IBCU1",44,0)
 ;
"RTN","IBCU1",45,0)
ORDDUP(ORD,DIFN) ;returns true if print order ORD is already defined for a bill (not same entry)
"RTN","IBCU1",46,0)
 N IBX,IBY S IBY=0
"RTN","IBCU1",47,0)
 I +$G(ORD) S IBX=$G(^IBA(362.3,+$G(DIFN),0)) I +IBX,+$P(IBX,U,3)'=ORD,$D(^IBA(362.3,"AO",+$P(IBX,U,2),+ORD)) S IBY=1
"RTN","IBCU1",48,0)
 Q IBY
"RTN","IBCU1",49,0)
 ;
"RTN","IBCU1",50,0)
DXDUP(DX,DIFN,IFN) ;returns true if DX is already defined for a bill (not same entry)
"RTN","IBCU1",51,0)
 ;either DIFN or IFN can be passed, both are not needed, DIFN is needed during edit so can reenter the same dx
"RTN","IBCU1",52,0)
 N IBX,IBY S IBY=0 I +$G(DX),'$G(IFN) S IBX=$G(^IBA(362.3,+$G(DIFN),0)),IFN=+$P(IBX,U,2)
"RTN","IBCU1",53,0)
 I +$G(DX),$D(^IBA(362.3,"AIFN"_+IFN,+DX)),$O(^IBA(362.3,"AIFN"_+IFN,+DX,0))'=+$G(DIFN) S IBY=1
"RTN","IBCU1",54,0)
 Q IBY
"RTN","IBCU1",55,0)
 ;
"RTN","IBCU1",56,0)
DXBSTAT(DIFN,IFN) ;returns a diagnosis' bill status (either DIFN or IFN can be passed, both are not needed)
"RTN","IBCU1",57,0)
 N IBX,IBY I '$G(IFN) S IBX=$G(^IBA(362.3,+$G(DIFN),0)),IFN=+$P(IBX,U,2)
"RTN","IBCU1",58,0)
 S IBY=+$P($G(^DGCR(399,+IFN,0)),U,13)
"RTN","IBCU1",59,0)
 Q IBY
"RTN","IBCU1",60,0)
 ;
"RTN","IBCU1",61,0)
RXSTAT(DRUG,PIFN,FILLDT) ; returns status/definition of rx
"RTN","IBCU1",62,0)
 ; returns: ORIGINAL ^ RELEASED/RETURNED TO STOCK ^ DRUG DEA
"RTN","IBCU1",63,0)
 N IBX,IBY,IBZ,IBLN,IBNUM S IBLN="",DRUG=+$G(DRUG),PIFN=+$G(PIFN),FILLDT=+$G(FILLDT)
"RTN","IBCU1",64,0)
 ;
"RTN","IBCU1",65,0)
 S IBX=$$RXSEC^IBRXUTL($$FILE^IBRXUTL(PIFN,2),PIFN),IBZ="" I IBX'="",$P(IBX,U,2)=$G(FILLDT) D  I IBZ'="" S $P(IBLN,U,2)=IBZ
"RTN","IBCU1",66,0)
 . S IBLN="ORG"
"RTN","IBCU1",67,0)
 . ;I +$G(^PS(59.7,1,49.99))<6 Q
"RTN","IBCU1",68,0)
 . I '$P(IBX,U,13) S IBZ="NR"
"RTN","IBCU1",69,0)
 . I +$P(IBX,U,15) S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"RTS"
"RTN","IBCU1",70,0)
 ;
"RTN","IBCU1",71,0)
 I IBLN="" S IBNUM=$$RFLNUM^IBRXUTL(PIFN,FILLDT,1),IBX=$$ZEROSUB^IBRXUTL($$FILE^IBRXUTL(PIFN,2),PIFN,IBNUM),IBZ="" I IBX'="" D  I IBZ'="" S $P(IBLN,U,2)=IBZ
"RTN","IBCU1",72,0)
 . ;I +$G(^PS(59.7,1,49.99))<6 Q
"RTN","IBCU1",73,0)
 . I '$P(IBX,U,18) S IBZ="NR"
"RTN","IBCU1",74,0)
 . I +$P(IBX,U,16) S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"RTS"
"RTN","IBCU1",75,0)
 ;
"RTN","IBCU1",76,0)
 D ZERO^IBRXUTL(DRUG)
"RTN","IBCU1",77,0)
 S IBX=$G(^TMP($J,"IBDRUG",0)) I IBX'="" S IBY=$G(^TMP($J,"IBDRUG",DRUG,3)),IBZ="" D  I IBZ'="" S $P(IBLN,U,3)=IBZ
"RTN","IBCU1",78,0)
 . I IBY["9" S IBZ="OTC"
"RTN","IBCU1",79,0)
 . I IBY["I" S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"INV"
"RTN","IBCU1",80,0)
 . I IBY["S" S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"SUP"
"RTN","IBCU1",81,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBCU1",82,0)
 Q IBLN
"RTN","IBCU1",83,0)
 ;
"RTN","IBCU1",84,0)
PRVLIC(NPIFN,IBDT,ARR,STIFN) ; returns the Provider License data from the New Person file active on a date
"RTN","IBCU1",85,0)
 ; Input:   NPIFN = pointer to file 200,              IBDT = date to check (if none passed then all returned)
"RTN","IBCU1",86,0)
 ;          ARR = array pass by reference (optional), STIFN = state to return as value of function (optional)
"RTN","IBCU1",87,0)
 ; Output:  ARR(X) = license state (ifn) ^ license ^ expiration date (200,541)
"RTN","IBCU1",88,0)
 ;          return value = license data of state requested or if no state passed in then count found
"RTN","IBCU1",89,0)
 N IBX,IBY,IBLN,IBCNT S IBX=0,IBCNT=0 K ARR
"RTN","IBCU1",90,0)
 I +$G(NPIFN) S IBY=0 F  S IBY=$O(^VA(200,NPIFN,"PS1",IBY)) Q:'IBY  D
"RTN","IBCU1",91,0)
 . S IBLN=$G(^VA(200,NPIFN,"PS1",IBY,0))
"RTN","IBCU1",92,0)
 . I +$G(IBDT),+$P(IBLN,U,3),$P(IBLN,U,3)<IBDT Q
"RTN","IBCU1",93,0)
 . I +$G(STIFN),+STIFN=+IBLN S IBX=IBLN
"RTN","IBCU1",94,0)
 . S IBCNT=IBCNT+1,ARR(IBCNT)=IBLN
"RTN","IBCU1",95,0)
 S ARR=IBCNT I '$G(STIFN) S IBX=IBCNT
"RTN","IBCU1",96,0)
 Q IBX
"RTN","IBCU1",97,0)
 ;
"RTN","IBCU1",98,0)
DELPR(IB,IBX) ; Deletes the corresponding RX proc when the RX pointer is
"RTN","IBCU1",99,0)
 ; deleted
"RTN","IBCU1",100,0)
 ; IB = the ien of the bill in file 399
"RTN","IBCU1",101,0)
 ; IBX = the ien of the entry in the procedure multiple to be deleted
"RTN","IBCU1",102,0)
 ;
"RTN","IBCU1",103,0)
 N DA,DIK,X,Y
"RTN","IBCU1",104,0)
 S DA(1)=IB,DA=IBX
"RTN","IBCU1",105,0)
 I $D(^DGCR(399,DA(1),"CP",DA,0)) S DIK="^DGCR(399,"_DA(1)_",""CP""," D ^DIK
"RTN","IBCU1",106,0)
 Q
"RTN","IBCU1",107,0)
 ;
"RTN","IBCU1",108,0)
MODHLP(DA) ; Executable modifier help 399.042  .14
"RTN","IBCU1",109,0)
 ; DA = iens of the current entry DA(1) = file 399 ien
"RTN","IBCU1",110,0)
 ;                                DA    = file 399.042 ien
"RTN","IBCU1",111,0)
 N Z,IBZ,DIC,IBDATE
"RTN","IBCU1",112,0)
 S IBDATE=$$BDATE^IBACSV(+$G(DA(1))) ; The date of service
"RTN","IBCU1",113,0)
 I $P($G(^DGCR(399,+$G(DA(1)),"RC",+$G(DA),0)),U,14)'="" S Z=$P(^(0),U,14) D
"RTN","IBCU1",114,0)
 . N Q
"RTN","IBCU1",115,0)
 . S Q=1
"RTN","IBCU1",116,0)
 . S IBZ(1)="Current modifier"_$S($P(Z,";",2)'="":"s are:",1:"is:")
"RTN","IBCU1",117,0)
 . I $P(Z,";")'="" S Q=Q+1,IBZ(Q)="  "_$P(Z,";")_"  "_$P($$MOD^ICPTMOD($P(Z,";"),"E",IBDATE),U,3)
"RTN","IBCU1",118,0)
 . I $P(Z,";",2)'="" S Q=Q+1,IBZ(Q)="  "_$P(Z,";",2)_"  "_$P($$MOD^ICPTMOD($P(Z,";",2),"E",IBDATE),U,3)
"RTN","IBCU1",119,0)
 . S Q=Q+1,IBZ(Q)=" "
"RTN","IBCU1",120,0)
 . D EN^DDIOL(.IBZ)
"RTN","IBCU1",121,0)
 ;
"RTN","IBCU1",122,0)
 S DIC="^DIC(81.3,",DIC(0)="E"
"RTN","IBCU1",123,0)
 S DIC("S")="I $$MODP^ICPTMOD($P($G(^DGCR(399,DA(1),""RC"",DA,0)),U,6),Y,""I"",IBDATE)>0"
"RTN","IBCU1",124,0)
 S DIC("W")="W ?14,$P($$MOD^ICPTMOD(Y,""I"",IBDATE),U,3)"
"RTN","IBCU1",125,0)
 D ^DIC
"RTN","IBCU1",126,0)
 Q
"RTN","IBCU1",127,0)
 ;
"RTN","IBCU1",128,0)
QMED(IBRTN,IBIFN) ; DSS QuadraMed Interface: DSS/QuadraMed Available
"RTN","IBCU1",129,0)
 ; return 1 if QuadraMed Interface is On and available for the type of bill
"RTN","IBCU1",130,0)
 ; - routine must exist on the system (interface is 'On')
"RTN","IBCU1",131,0)
 ; Input: IBRTN = tag^routine, if it exists then Interface is 'On'
"RTN","IBCU1",132,0)
 ;        IBIFN = Bill IFN, bill to check if appropriate for sending to QuadraMed
"RTN","IBCU1",133,0)
 ;
"RTN","IBCU1",134,0)
 N IBON S IBON=0
"RTN","IBCU1",135,0)
 I +$G(IBIFN),$G(IBRTN)'="",$T(@IBRTN)'="" S IBON=1
"RTN","IBCU1",136,0)
 Q IBON
"RTN","IBCU1",137,0)
 ;
"RTN","IBCU1",138,0)
ATTREND(IBIFN,IBIFN1,FIELD) ; This function is called from Mumps Cross References in the claim file 399 and 
"RTN","IBCU1",139,0)
 ; also the PROVIDER subfile 399.0222.
"RTN","IBCU1",140,0)
 ;
"RTN","IBCU1",141,0)
 ; IBIFN = IEN to claim file
"RTN","IBCU1",142,0)
 ; IBIFN1 = IEN to provider sub-file in claim file
"RTN","IBCU1",143,0)
 ; FIELD = Field in sub-file being modified (the triggering event).  If field has no value, all 6 fields are
"RTN","IBCU1",144,0)
 ; possibly updated
"RTN","IBCU1",145,0)
 ;  
"RTN","IBCU1",146,0)
 ; The following fields are the "triggering" events
"RTN","IBCU1",147,0)
 ; File 399
"RTN","IBCU1",148,0)
 ; #19 FORM TYPE - This triggers all 6 fields (122, 123, 124, 128, 129, 130).
"RTN","IBCU1",149,0)
 ; 
"RTN","IBCU1",150,0)
 ; Sub-File 399.0222
"RTN","IBCU1",151,0)
 ; #.05 PRIMARY INS CO ID NUMBER triggers 122
"RTN","IBCU1",152,0)
 ; #.06 SECONDARY INS CO ID NUMBER triggers 123
"RTN","IBCU1",153,0)
 ; #.07 TERTIARY INS CO ID NUMBER triggers 124
"RTN","IBCU1",154,0)
 ; #.12 PRIM INS PROVIDER ID TYPE triggers 128
"RTN","IBCU1",155,0)
 ; #.13 SEC INS PROVIDER ID TYPE triggers 129
"RTN","IBCU1",156,0)
 ; #.14 TERT INS PROVIDER ID TYPE triggers 130
"RTN","IBCU1",157,0)
 ; 
"RTN","IBCU1",158,0)
 ; The following fields are the ones being "triggered"
"RTN","IBCU1",159,0)
 ; #122 PRIMARY PROVIDER #
"RTN","IBCU1",160,0)
 ; #123 SECONDARY PROVIDER #
"RTN","IBCU1",161,0)
 ; #124 TERTIARY PROVIDER #
"RTN","IBCU1",162,0)
 ; #128 PRIMARY ID QUALIFER
"RTN","IBCU1",163,0)
 ; #129 SECONDARY ID QUALIFIER
"RTN","IBCU1",164,0)
 ; #130 TERTIARY ID QUALIFIER
"RTN","IBCU1",165,0)
 ;
"RTN","IBCU1",166,0)
 Q:$G(IBPRCOB)  ; this is set when creating an MRA scondary claim.  Don't want to be changing the data on
"RTN","IBCU1",167,0)
 ; a secondary claim
"RTN","IBCU1",168,0)
 ;
"RTN","IBCU1",169,0)
 N FT,DATA,I,PC,INS,IFUNC,ATTRENDD,IBDR
"RTN","IBCU1",170,0)
 S FT=$$FT^IBCEF(IBIFN)
"RTN","IBCU1",171,0)
 Q:'FT
"RTN","IBCU1",172,0)
 ;
"RTN","IBCU1",173,0)
 S IFUNC=$O(^DGCR(399,IBIFN,"PRV","B",$S(FT=3:4,1:3),""))
"RTN","IBCU1",174,0)
 I $G(IBIFN1),$G(IFUNC)'=IBIFN1 Q   ; if called from subfile, quits if att/rend provider was not the one being modified
"RTN","IBCU1",175,0)
 S ATTRENDD=$S('$G(IFUNC):"",1:$G(^DGCR(399,IBIFN,"PRV",IFUNC,0)))
"RTN","IBCU1",176,0)
 ;
"RTN","IBCU1",177,0)
 S PC=$S(FT=2:6,FT=3:8,1:"")  ; get the correct piece from the ins co dictionary
"RTN","IBCU1",178,0)
 Q:'+PC
"RTN","IBCU1",179,0)
 ;
"RTN","IBCU1",180,0)
 F I="I1","I2","I3" D
"RTN","IBCU1",181,0)
 . S INS=$P($G(^DGCR(399,IBIFN,I)),U)
"RTN","IBCU1",182,0)
 . Q:'+INS
"RTN","IBCU1",183,0)
 . Q:'$P($G(^DIC(36,INS,4)),U,PC)
"RTN","IBCU1",184,0)
 . D:I="I1"
"RTN","IBCU1",185,0)
 .. S:".05"[FIELD IBDR(399,IBIFN_",",122)=$S($P(ATTRENDD,U,5)]"":$P(ATTRENDD,U,5),1:"@")
"RTN","IBCU1",186,0)
 .. S:".12"[FIELD IBDR(399,IBIFN_",",128)=$S($P(ATTRENDD,U,12)]"":$P(ATTRENDD,U,12),1:"@")
"RTN","IBCU1",187,0)
 . D:I="I2"
"RTN","IBCU1",188,0)
 .. S:".06"[FIELD IBDR(399,IBIFN_",",123)=$S($P(ATTRENDD,U,6)]"":$P(ATTRENDD,U,6),1:"@")
"RTN","IBCU1",189,0)
 .. S:".13"[FIELD IBDR(399,IBIFN_",",129)=$S($P(ATTRENDD,U,13)]"":$P(ATTRENDD,U,13),1:"@")
"RTN","IBCU1",190,0)
 . D:I="I3"
"RTN","IBCU1",191,0)
 .. S:".07"[FIELD IBDR(399,IBIFN_",",124)=$S($P(ATTRENDD,U,7)]"":$P(ATTRENDD,U,7),1:"@")
"RTN","IBCU1",192,0)
 .. S:".14"[FIELD IBDR(399,IBIFN_",",130)=$S($P(ATTRENDD,U,14)]"":$P(ATTRENDD,U,14),1:"@")
"RTN","IBCU1",193,0)
 ;
"RTN","IBCU1",194,0)
 I $O(IBDR(0)) D FILE^DIE("","IBDR")
"RTN","IBCU1",195,0)
 Q
"RTN","IBCU81")
0^14^B13964944^B13771358
"RTN","IBCU81",1,0)
IBCU81 ;ALB/ARH - THIRD PARTY BILLING UTILITIES (AUTOMATED BILLER) ;02 JUL 93
"RTN","IBCU81",2,0)
 ;;2.0;INTEGRATED BILLING;**55,91,106,124,160,174,260,347**;21-MAR-94;Build 24
"RTN","IBCU81",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCU81",4,0)
 ;
"RTN","IBCU81",5,0)
EABD(IBETYP,IBTDT) ; -- compute earliest auto bill date: date entered plus days delay for event type
"RTN","IBCU81",6,0)
 ;the difference betwieen this and EABD^IBTUTL is that the autobill of the event type may be turned off
"RTN","IBCU81",7,0)
 ;and this procedure will still return a date
"RTN","IBCU81",8,0)
 ; -- input   IBETYPE = pointer to type of entry file
"RTN","IBCU81",9,0)
 ;            IBTDT   = episode date, if not passed in uses DT
"RTN","IBCU81",10,0)
 ;
"RTN","IBCU81",11,0)
 N X,X1,X2,Y,IBETYPD S Y="" I '$G(IBETYP) G EABDQ
"RTN","IBCU81",12,0)
 S IBETYPD=$G(^IBE(356.6,+IBETYP,0)) I '$G(IBTDT) S IBTDT=DT
"RTN","IBCU81",13,0)
 S X2=+$P(IBETYPD,"^",6) ;set earliest autobill date to entered date plus days delay
"RTN","IBCU81",14,0)
 S X1=IBTDT D C^%DTC S Y=X\1
"RTN","IBCU81",15,0)
EABDQ Q Y
"RTN","IBCU81",16,0)
 ;
"RTN","IBCU81",17,0)
EVBILL(IBTRN) ;check if event is auto billable, return EABD if it is, the difference between this and BILL^IBTUTL is that
"RTN","IBCU81",18,0)
 ;this procedure will return a date if the auto biller is turned off for this event type
"RTN","IBCU81",19,0)
 ;returns "^error message" if it is not billable
"RTN","IBCU81",20,0)
 N X,Y,Z,E,IBTRND S (X,Y,E)="" S IBTRND=$G(^IBT(356,+$G(IBTRN),0)) I IBTRND="" G BILLQ
"RTN","IBCU81",21,0)
 ;
"RTN","IBCU81",22,0)
 ; -- billed and bill not cancelled and not inpt interim first or continuous
"RTN","IBCU81",23,0)
 S Z=$$BILLED^IBCU8(IBTRN),Y=$P(Z,U,2) I +Z,'Y S E="^Event already billed on "_$P($G(^DGCR(399,+Z,0)),U,1)_"." G BILLQ
"RTN","IBCU81",24,0)
 ;
"RTN","IBCU81",25,0)
 ; -- special type (not riem. ins), not billable, inactive
"RTN","IBCU81",26,0)
 I +$P(IBTRND,U,12) S E="^Bill may not be Reimbursable Insurance, possibly "_$$EXSET^IBEFUNC(+$P(IBTRND,U,12),356,.12)_"." G BILLQ
"RTN","IBCU81",27,0)
 I +$P(IBTRND,U,19) S E="^Event has a Reason Not Billable: "_$P($G(^IBE(356.8,+$P(IBTRND,U,19),0)),U,1)_"." G BILLQ
"RTN","IBCU81",28,0)
 I '$P(IBTRND,U,20) S E="^Event is Inactive." G BILLQ
"RTN","IBCU81",29,0)
 I 'Y S Y=+$G(^IBT(356,+$G(IBTRN),1)) I 'Y S Y=DT
"RTN","IBCU81",30,0)
 S X=$$EABD(+$P(IBTRND,U,18),Y)
"RTN","IBCU81",31,0)
BILLQ Q X_E
"RTN","IBCU81",32,0)
 ;
"RTN","IBCU81",33,0)
RXRF(IBTRN) ; returns rx # and fill date for given claims tracking rx entry
"RTN","IBCU81",34,0)
 N IBX,IBY,IBZ,X S (X,IBY)=""
"RTN","IBCU81",35,0)
 S IBX=$G(^IBT(356,+$G(IBTRN),0)) I IBX'="" S IBY=$$FILE^IBRXUTL(+$P(IBX,U,8),.01)
"RTN","IBCU81",36,0)
 I IBY'="",$P(IBX,U,10)=0 S IBZ=$$FILE^IBRXUTL(+$P(IBX,U,8),"22","I") I +IBZ S X=IBY_"^"_IBZ
"RTN","IBCU81",37,0)
 I IBY'="",+$P(IBX,U,10) S IBZ=+$$ZEROSUB^IBRXUTL(+$P(IBX,U,2),+$P(IBX,U,8),+$P(IBX,U,10)) I +IBZ S X=IBY_"^"_IBZ
"RTN","IBCU81",38,0)
 Q X
"RTN","IBCU81",39,0)
 ;
"RTN","IBCU81",40,0)
NABSCT(IBTRN) ; -- true if CT outpatient visit should NOT be auto billed, based only on stop (1) and clinic (2) auto billable
"RTN","IBCU81",41,0)
 ; returns true only for those stops (352.3) and clinics (352.4) specifically flagged as not auto billable
"RTN","IBCU81",42,0)
 N IBX,IBY,IBTRND S IBX=0,IBTRND="" I +$G(IBTRN) S IBTRND=$G(^IBT(356,+IBTRN,0))
"RTN","IBCU81",43,0)
 I +$P(IBTRND,U,4) S IBY=$$SCE^IBSDU(+$P(IBTRND,U,4)) I +IBY D
"RTN","IBCU81",44,0)
 . I +$P(IBY,U,3),$$NABST^IBEFUNC($P(IBY,U,3),DT) S IBX=1 Q
"RTN","IBCU81",45,0)
 . I +$P(IBY,U,4),$$NABCT^IBEFUNC($P(IBY,U,4),DT) S IBX=2
"RTN","IBCU81",46,0)
 Q IBX
"RTN","IBCU81",47,0)
 ;
"RTN","IBCU81",48,0)
NBOE(IBOE,IBOE0) ; returns true if outpatient encounter is non-billable, "" otherwise
"RTN","IBCU81",49,0)
 ; input:  IBOE - pointer to encounter (409.68)
"RTN","IBCU81",50,0)
 ;         IBOE0 - 0-node of the encounter (optional)
"RTN","IBCU81",51,0)
 ; output: "" or x^message, where x=1 if SC, x=2 if NB Stop code, x=3 if NB Clinic, x=4 if NB Appt Status
"RTN","IBCU81",52,0)
 N IBOED,IBOEP,IBX,IBCK,IBZ,IBPB,IBAPST,IBDT,DFN
"RTN","IBCU81",53,0)
 S IBX=""
"RTN","IBCU81",54,0)
 I $G(IBOE0)="" S IBOE0=$$SCE^IBSDU(IBOE)
"RTN","IBCU81",55,0)
 I 'IBOE0 G NBOEQ
"RTN","IBCU81",56,0)
 S DFN=$P(IBOE0,"^",2),IBDT=+IBOE0
"RTN","IBCU81",57,0)
 F IBZ=7,12,13 S IBCK(IBZ)=""
"RTN","IBCU81",58,0)
 S IBZ=$$BILLCK^IBAMTEDU(IBOE,IBOE0,.IBCK,.IBPB)
"RTN","IBCU81",59,0)
 S IBAPST="" I $G(IBPB)=13 S IBAPST=$E($$EXPAND^IBTRE(409.68,.12,$P(IBOE0,U,12)),1,10)
"RTN","IBCU81",60,0)
 ; check out sc and other questions
"RTN","IBCU81",61,0)
 I $G(IBPB)="" S IBAPST=$$CL^IBTRKR41(IBOE0) I $L(IBAPST) S IBPB=$S(IBAPST="SC TREATMENT":11,1:13)
"RTN","IBCU81",62,0)
 S:$G(IBPB)'="" IBX=$S(IBPB=11:"1^SC VISIT",IBPB=7:"2^NB STOP CODE",IBPB=12:"3^NB CLINIC",IBPB=13:"4^"_IBAPST,1:"")
"RTN","IBCU81",63,0)
NBOEQ Q IBX
"RTN","IBCU81",64,0)
 ;
"RTN","IBCU81",65,0)
OEDX(IBOE,IBDXA,IBDXB) ; returns arrays containing encounters diagnosis (includes duplicates)
"RTN","IBCU81",66,0)
 ; IBDXA(ORDER,DATE/TIME,IBOE,DX IFN)=DX ^ PCE ORDER ^ IBOE ^ DATE/TIME ^  TRUE IF NON-BILLABLE ^ NB MES ^ CLINIC
"RTN","IBCU81",67,0)
 ; IBDXB(IBDX) = 1 for each billable dx found
"RTN","IBCU81",68,0)
 ;
"RTN","IBCU81",69,0)
 N IBNBOE,X,IBPOV,IBDXN,IBPCE,IBPCEI,IBDT,IBOE0,IBZERR
"RTN","IBCU81",70,0)
 Q:'$G(IBOE)
"RTN","IBCU81",71,0)
 S IBOE0=$$SCE^IBSDU(+IBOE),IBDT=+IBOE0 Q:'IBDT
"RTN","IBCU81",72,0)
 I '$$BDSRC^IBEFUNC3($P(IBOE0,U,5)) Q  ; non-billable visit data source
"RTN","IBCU81",73,0)
 S IBNBOE=$$NBOE(IBOE,IBOE0)
"RTN","IBCU81",74,0)
 ;
"RTN","IBCU81",75,0)
 D GETDX^SDOE(IBOE,"IBPOV","IBZERR")
"RTN","IBCU81",76,0)
 S IBDXN=0 F  S IBDXN=$O(IBPOV(IBDXN)) Q:'IBDXN  D
"RTN","IBCU81",77,0)
 . S IBPCE=IBPOV(IBDXN),IBPCEI=$P(IBPCE,U,12)
"RTN","IBCU81",78,0)
 . S IBDXA($S(IBPCEI="P":1,IBPCEI="S":2,1:999),IBDT,IBOE,IBDXN)=+IBPCE_U_IBPCEI_U_IBOE_U_IBDT_U_$P(IBNBOE,U,1)_U_$P(IBNBOE,U,2)_U_+$P(IBOE0,U,4)
"RTN","IBCU81",79,0)
 . I 'IBNBOE S IBDXB(+IBPCE)=1
"RTN","IBCU81",80,0)
 ;
"RTN","IBCU81",81,0)
 Q
"RTN","IBCU81",82,0)
 ;
"RTN","IBCU82")
0^15^B21673527^B21183634
"RTN","IBCU82",1,0)
IBCU82 ;ALB/ARH - THIRD PARTY BILLING UTILITIES (AUTOMATED BILLER) ;02 JUL 93
"RTN","IBCU82",2,0)
 ;;2.0;INTEGRATED BILLING;**43,55,91,124,160,304,347**;21-MAR-94;Build 24
"RTN","IBCU82",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCU82",4,0)
 ;
"RTN","IBCU82",5,0)
 ;
"RTN","IBCU82",6,0)
EVNTCHK(IBTRN) ;special checks to determine if event should be auto billed
"RTN","IBCU82",7,0)
 ;checks for INS, non-veteran patient, possible workers comp and tort feasor, admitted for sc cond., outp dental stop, optv while inpt, category covered by ins, non-billable stop or clinic
"RTN","IBCU82",8,0)
 ;(assumes that Claims Tracking does the SC check for Outpatients)
"RTN","IBCU82",9,0)
 ;input: IBTRN - claims tracking event
"RTN","IBCU82",10,0)
 ;       DISP - if true then any error message will be displayed on exit.
"RTN","IBCU82",11,0)
 ;output: returns "1^error message" if one of the checks failed, 0 otherwise
"RTN","IBCU82",12,0)
 ;
"RTN","IBCU82",13,0)
 N X,IBX,IBY,IBZ,IBTRND,IBCAT,IBCOV,DFN,IBEVDT,VAEL,VADMVT,VAINDT S X=0,IBTRND=$G(^IBT(356,+$G(IBTRN),0)) G:IBTRND="" EVNTCQ
"RTN","IBCU82",14,0)
 I +$P(IBTRND,U,18)=1,'+$P(IBTRND,U,5) S X="1^Claims Tracking event does not have an associated Inpatient Admission." G EVNTCQ
"RTN","IBCU82",15,0)
 I +$P(IBTRND,U,18)=2,'+$P(IBTRND,U,4) S X="1^Claims Tracking event does not have an associated Outpatient Visit." G EVNTCQ
"RTN","IBCU82",16,0)
 I +$P(IBTRND,U,18)=4,'+$P(IBTRND,U,8) S X="1^Claims Tracking event does not have an associated prescription in Pharmacy." G EVNTCQ
"RTN","IBCU82",17,0)
 I +$P(IBTRND,U,18)=4,$P(IBTRND,U,10)="" S X="1^Claims Tracking event does not have an associated prescription refill in Pharmacy." G EVNTCQ
"RTN","IBCU82",18,0)
 ;
"RTN","IBCU82",19,0)
 S DFN=+$P(IBTRND,U,2),IBEVDT=$P(IBTRND,U,6) I '$$INSURED^IBCNS1(DFN,IBEVDT) S X="1^Patient not insured for event date." G EVNTCQ
"RTN","IBCU82",20,0)
 S IBCAT=$S($P(IBTRND,U,18)=1!($P(IBTRND,U,18)=5):"INPATIENT",$P(IBTRND,U,18)=2:"OUTPATIENT",$P(IBTRND,U,18)=4:"PHARMACY",1:"")
"RTN","IBCU82",21,0)
 I IBCAT'="",'$$PTCOV^IBCNSU3(DFN,IBEVDT,IBCAT) S X="1^Patient insurance does not cover "_IBCAT_"." G EVNTCQ
"RTN","IBCU82",22,0)
 D ELIG^VADPT S X=0 I 'VAEL(4) S X="1^Patient is not a veteran." G EVNTCQ
"RTN","IBCU82",23,0)
 ;
"RTN","IBCU82",24,0)
 ;check the last disposition before the episode to see if maybe workers comp or tort feasor
"RTN","IBCU82",25,0)
 S IBX=9999999-(IBEVDT\1+1),IBX=$O(^DPT(+DFN,"DIS",IBX)) I +IBX S IBY=$$DT(IBX),IBX=$G(^DPT(DFN,"DIS",IBX,2)) D  G:+X EVNTCQ
"RTN","IBCU82",26,0)
 . I $P(IBX,U,1)="Y" S X="1^Need may be related to occupation, check "_IBY_" disposition." Q
"RTN","IBCU82",27,0)
 . I $P(IBX,U,4)="Y" S X="1^Need may be related to an accident, check "_IBY_" disposition." Q
"RTN","IBCU82",28,0)
 ;
"RTN","IBCU82",29,0)
 I +$P(IBTRND,U,5) S IBX=$G(^DGPM(+$P(IBTRND,U,5),0)) D  G EVNTCQ ; inpatient specific
"RTN","IBCU82",30,0)
 . I IBX="" S X="1^Inpatient admission movement not found." Q
"RTN","IBCU82",31,0)
 . I +$P(IBX,U,11) S X="1^Admitted for an SC condition." Q
"RTN","IBCU82",32,0)
 ;
"RTN","IBCU82",33,0)
 I +$P(IBTRND,U,4) S IBX=$$SCE^IBSDU(+$P(IBTRND,U,4)) D  G EVNTCQ ; outpatient specific
"RTN","IBCU82",34,0)
 . I IBX="" S X="1^Outpatient Encounter not found." Q
"RTN","IBCU82",35,0)
 . S IBY=$$NBOE^IBCU81(+$P(IBTRND,U,4),IBX) I +IBY D  Q:+X
"RTN","IBCU82",36,0)
 .. ;I +IBY=1 S X="1^Service Connected visit." Q
"RTN","IBCU82",37,0)
 .. I +IBY=2 S X="1^Non-billable Stop Code." Q
"RTN","IBCU82",38,0)
 .. I +IBY=3 S X="1^Non-billable Clinic." Q
"RTN","IBCU82",39,0)
 .. I +IBY=4 S X="1^Non-billable Status: "_$P(IBY,U,2) Q
"RTN","IBCU82",40,0)
 . ; dental is generally billed differently
"RTN","IBCU82",41,0)
 . I $P($G(^DIC(40.7,+$P(IBX,U,3),0)),U,1)["DENTAL" S X="1^Outpatient visit contains a dental stop code." Q
"RTN","IBCU82",42,0)
 . ;outpatient visit was a disposition:  application without exam is not billable
"RTN","IBCU82",43,0)
 . I $P(IBX,U,8)=3 D  Q:X
"RTN","IBCU82",44,0)
 .. S IBY=$$DISND^IBSDU(+$P(IBTRND,U,4),IBX) ; 0-node of "DIS"
"RTN","IBCU82",45,0)
 .. I $P(IBY,U,2)=2 S X="1^Disposition was Application Without Exam." Q
"RTN","IBCU82",46,0)
 .. I $P($G(^DIC(37,+$P(IBY,U,7),0)),U,1)="CANCEL WITHOUT EXAM" S X="1^Disposition was Cancel Without Exam." Q
"RTN","IBCU82",47,0)
 . ;can not bill twice for same day so ignore outpatient visits if patient was an inpatient at end of day (this means that outpatient visits on the date of discharge will be billed)
"RTN","IBCU82",48,0)
 . I $$ADM^IBCU64(DFN,IBEVDT) S X="1^Not Billable: Patient was an inpatient on this visit date."
"RTN","IBCU82",49,0)
 ;
"RTN","IBCU82",50,0)
 I +$P(IBTRND,U,8) S IBX=$$RXZERO^IBRXUTL(+$P(IBTRND,U,2),+$P(IBTRND,U,8)) D  G EVNTCQ ; rx refills
"RTN","IBCU82",51,0)
 . I IBX="" S X="1^Prescription not found in Pharmacy." Q
"RTN","IBCU82",52,0)
 . I +$P(IBTRND,U,10)>0 S IBY=$$ZEROSUB^IBRXUTL(+$P(IBTRND,U,2),+$P(IBTRND,U,8),+$P(IBTRND,U,10)) I IBY="" S X="1^Prescription refill not found in Pharmacy." Q
"RTN","IBCU82",53,0)
 . S IBZ=$$DBLCHK^IBTRKR31(IBTRN) I 'IBZ S X="1^Can not auto bill this refill, check Claims Tracking." Q
"RTN","IBCU82",54,0)
EVNTCQ Q X
"RTN","IBCU82",55,0)
 ;
"RTN","IBCU82",56,0)
DT(X) ;convert disposition type date/time to external format (9999999-date)
"RTN","IBCU82",57,0)
 N Y S Y=0 I +X S Y=9999999-X X ^DD("DD")
"RTN","IBCU82",58,0)
 Q Y
"RTN","IBCU83")
0^16^B8679037^B8356808
"RTN","IBCU83",1,0)
IBCU83 ;ALB/ARH - THIRD PARTY BILLING UTILITES (BILL-CT) ; 3/10/96
"RTN","IBCU83",2,0)
 ;;2.0;INTEGRATED BILLING;**48,347**;21-MAR-94;Build 24
"RTN","IBCU83",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCU83",4,0)
 ;
"RTN","IBCU83",5,0)
IFNTRN(IBIFN,ARRAY,ARR2) ; find CT records for events on a bill: sched adm, inpt adm, outpt vsts, rx refills, prosthetics
"RTN","IBCU83",6,0)
 ; sets ARRAY=COUNT, ARRAY(IBTRN)=EV TYPE, if bill passed in defined
"RTN","IBCU83",7,0)
 ;                   ARR2(DATE,TRN)=TRN                (based on IBCC1 and IBJTU5)
"RTN","IBCU83",8,0)
 ;
"RTN","IBCU83",9,0)
 N IBI,IBX,IBD0,DFN,IBTYP,IBTRN,IBDT,IBBDT,IBEDT,IBRX,IBRXN,IBPR,IBPRN,IBBILL,IBN K ARRAY,ARR2
"RTN","IBCU83",10,0)
 S ARRAY=0,IBD0=$G(^DGCR(399,+$G(IBIFN),0)) I IBD0="" G IFNQ
"RTN","IBCU83",11,0)
 S DFN=$P(IBD0,U,2)
"RTN","IBCU83",12,0)
 ;
"RTN","IBCU83",13,0)
 ; -- directly linked through 356.399  (not always correct)
"RTN","IBCU83",14,0)
 ;S IBI=0 F  S IBI=$O(^IBT(356.399,"C",IBIFN,IBI)) Q:'IBI  S IBX=+$G(^IBT(356.399,IBI,0)) I +IBX S ARRAY(+IBX)=""
"RTN","IBCU83",15,0)
 ;
"RTN","IBCU83",16,0)
SCH ; -- scheduled admissions (all on event date of inpatient bills)
"RTN","IBCU83",17,0)
 S IBTYP=5,IBDT=$P(IBD0,U,3),IBBDT=$E(IBDT,1,7)-.00001,IBEDT=$E(IBDT,1,7)+.7
"RTN","IBCU83",18,0)
  F  S IBBDT=$O(^IBT(356,"APTY",DFN,IBTYP,IBBDT)) Q:'IBBDT!(IBBDT>IBEDT)  D
"RTN","IBCU83",19,0)
 . S IBTRN=0 F  S IBTRN=$O(^IBT(356,"APTY",DFN,IBTYP,IBBDT,IBTRN)) Q:'IBTRN  D
"RTN","IBCU83",20,0)
 .. S ARRAY(IBTRN)=IBTYP,ARR2(IBBDT,IBTRN)=IBTRN
"RTN","IBCU83",21,0)
 ;
"RTN","IBCU83",22,0)
INPT ; -- inpt admission (matches event date and episode date, does not check patient admission movement or PTF)
"RTN","IBCU83",23,0)
 S IBTYP=1,IBDT=$P(IBD0,U,3),IBBDT=$E(IBDT,1,7)-.00001,IBEDT=$E(IBDT,1,7)+.7
"RTN","IBCU83",24,0)
 F  S IBBDT=$O(^IBT(356,"APTY",DFN,IBTYP,IBBDT)) Q:'IBBDT!(IBBDT>IBEDT)  D
"RTN","IBCU83",25,0)
 . S IBTRN=0 F  S IBTRN=$O(^IBT(356,"APTY",DFN,IBTYP,IBBDT,IBTRN)) Q:'IBTRN  D
"RTN","IBCU83",26,0)
 .. S IBBILL=$P(^IBT(356,IBTRN,0),U,11) I +IBBILL,IBBILL'=IBIFN Q
"RTN","IBCU83",27,0)
 .. S ARRAY(IBTRN)=IBTYP,ARR2(IBBDT,IBTRN)=IBTRN
"RTN","IBCU83",28,0)
 ;
"RTN","IBCU83",29,0)
OPT ; -- outpatient visits (all CT visits on bills's opt visit dates)
"RTN","IBCU83",30,0)
 S IBTYP=2,IBDT=0 F  S IBDT=$O(^DGCR(399,IBIFN,"OP",IBDT)) Q:'IBDT  D
"RTN","IBCU83",31,0)
 . S IBBDT=$E(IBDT,1,7)-.00001,IBEDT=$E(IBDT,1,7)+.7
"RTN","IBCU83",32,0)
 . F  S IBBDT=$O(^IBT(356,"APTY",DFN,IBTYP,IBBDT)) Q:'IBBDT!(IBBDT>IBEDT)  D
"RTN","IBCU83",33,0)
 .. S IBTRN=0 F  S IBTRN=$O(^IBT(356,"APTY",DFN,IBTYP,IBBDT,IBTRN)) Q:'IBTRN  D
"RTN","IBCU83",34,0)
 ... S ARRAY(IBTRN)=IBTYP,ARR2(IBBDT,IBTRN)=IBTRN
"RTN","IBCU83",35,0)
 ;
"RTN","IBCU83",36,0)
RX ; -- rx refills (matches rx's (52: (362.4,.05)=(356,.08)) for refill dates on bill)
"RTN","IBCU83",37,0)
 S IBTYP=4,IBI=0 F  S IBI=$O(^IBA(362.4,"C",IBIFN,IBI)) Q:'IBI  D
"RTN","IBCU83",38,0)
 . S IBRX=$G(^IBA(362.4,IBI,0)),IBDT=$P(IBRX,U,3),IBRXN=$P(IBRX,U,5)
"RTN","IBCU83",39,0)
 . I 'IBRXN S DIC=52,DIC(0)="BO",X=$P(IBRX,"^") D DIC^PSODI(52,.DIC,X) S IBRXN=+Y K DIC,X,Y Q:IBRXN=-1
"RTN","IBCU83",40,0)
 . S IBBDT=$E(IBDT,1,7)-.00001,IBEDT=$E(IBDT,1,7)+.7
"RTN","IBCU83",41,0)
 . F  S IBBDT=$O(^IBT(356,"APTY",DFN,IBTYP,IBBDT)) Q:'IBBDT!(IBBDT>IBEDT)  D
"RTN","IBCU83",42,0)
 .. S IBTRN=0 F  S IBTRN=$O(^IBT(356,"APTY",DFN,IBTYP,IBBDT,IBTRN)) Q:'IBTRN  D
"RTN","IBCU83",43,0)
 ... I $P($G(^IBT(356,IBTRN,0)),U,8)=IBRXN S ARRAY(IBTRN)=IBTYP,ARR2(IBBDT,IBTRN)=IBTRN
"RTN","IBCU83",44,0)
 ;
"RTN","IBCU83",45,0)
PRO ; -- prosthetics (does not match delivery dates)
"RTN","IBCU83",46,0)
 S IBTYP=3,IBX="AIFN"_IBIFN,IBDT=0 F  S IBDT=$O(^IBA(362.5,IBX,IBDT)) Q:'IBDT  D
"RTN","IBCU83",47,0)
 . S IBI=0 F  S IBI=$O(^IBA(362.5,IBX,IBDT,IBI)) Q:'IBI  D
"RTN","IBCU83",48,0)
 .. S IBPR=$G(^IBA(362.5,IBI,0)),IBPRN=$P(IBPR,U,4) Q:'IBPRN
"RTN","IBCU83",49,0)
 .. S IBTRN=$O(^IBT(356,"APRO",IBPRN,0))
"RTN","IBCU83",50,0)
 .. I +IBTRN S ARRAY(IBTRN)=IBTYP,ARR2(IBDT,IBTRN)=IBTRN
"RTN","IBCU83",51,0)
 ;
"RTN","IBCU83",52,0)
 S IBI=0 F  S IBI=$O(ARRAY(IBI)) Q:'IBI  S ARRAY=ARRAY+1
"RTN","IBCU83",53,0)
IFNQ Q
"RTN","IBECUS2")
0^17^B33331721^B33042601
"RTN","IBECUS2",1,0)
IBECUS2 ;DVAMC/RLM - TRICARE PHARMACY BILL TRANSACTION ;14-AUG-96
"RTN","IBECUS2",2,0)
 ;;2.0;INTEGRATED BILLING;**52,89,143,162,240,274,347**;21-MAR-94;Build 24
"RTN","IBECUS2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBECUS2",4,0)
 ;
"RTN","IBECUS2",5,0)
EN ; Attempt to bill a prescription directly to the FI.
"RTN","IBECUS2",6,0)
 ;  Input:    IBKEY  --  1 ; 2, where
"RTN","IBECUS2",7,0)
 ;                         1 = Pointer to the prescription in file #52
"RTN","IBECUS2",8,0)
 ;                         2 = Pointer to the refill in file #52.1, or
"RTN","IBECUS2",9,0)
 ;                             0 for the original fill
"RTN","IBECUS2",10,0)
 ;           IBKEYD  --  1 ^ 2 ^ 3 ^ 4 ^ 5, where
"RTN","IBECUS2",11,0)
 ;                         1 = Rx label printing device
"RTN","IBECUS2",12,0)
 ;                         2 = Pointer to the Pharmacy in file #59
"RTN","IBECUS2",13,0)
 ;                         3 = Pointer to the Pharmacy user in file #200
"RTN","IBECUS2",14,0)
 ;                         4 = Pointer to the billing transaction
"RTN","IBECUS2",15,0)
 ;                             in file #351.5 (cancellations only)
"RTN","IBECUS2",16,0)
 ;                         5 = Product Selection Reason 
"RTN","IBECUS2",17,0)
 ;                                  (Resubmissions only)
"RTN","IBECUS2",18,0)
 ;          IBCHSET  --  Pointer to the Charge Set in file #363.1
"RTN","IBECUS2",19,0)
 ;         IBPRESCR  --  Facility Prescriber ID number
"RTN","IBECUS2",20,0)
 ;
"RTN","IBECUS2",21,0)
 ; - get rx data; make sure there is an NDC
"RTN","IBECUS2",22,0)
 K IBDRX,IBERR,IBAWPV,IBRESP
"RTN","IBECUS2",23,0)
 N DFN,IBRX,IBITEM,IBAWP
"RTN","IBECUS2",24,0)
 N DIQUIET S DIQUIET=1 D DT^DICRW
"RTN","IBECUS2",25,0)
 S IBRX=+IBKEY,IBREF=+$P(IBKEY,";",2)
"RTN","IBECUS2",26,0)
 I $$TRANS^PSOCPTRI(IBRX,IBREF,.IBDRX)<0 S IBERR=1 G ENQ
"RTN","IBECUS2",27,0)
 ;
"RTN","IBECUS2",28,0)
 ; - make sure the AWP is available
"RTN","IBECUS2",29,0)
 S IBDRX("NDC")=$$NDC(IBDRX("NDC"))
"RTN","IBECUS2",30,0)
 S IBITEM=+$$FNDBI^IBCRU2("NDC",IBDRX("NDC"))
"RTN","IBECUS2",31,0)
 I 'IBITEM S IBERR=9 G ENQ ;                     NDC is not in CM
"RTN","IBECUS2",32,0)
 D ITMCHG^IBCRCC(IBCHSET,IBITEM,DT,"",.IBAWPV)
"RTN","IBECUS2",33,0)
 I +IBAWPV'=1 S IBERR=10 G ENQ ;                  Not 1 rate for NDC
"RTN","IBECUS2",34,0)
 S IBAWP=$P(IBAWPV(+$O(IBAWPV(0))),"^",3)
"RTN","IBECUS2",35,0)
 I 'IBAWP S IBERR=11 G ENQ ;                     NDC has a zero charge
"RTN","IBECUS2",36,0)
 ;
"RTN","IBECUS2",37,0)
 ; - is patient data intact?
"RTN","IBECUS2",38,0)
 S DFN=+$$FILE^IBRXUTL(+IBRX,2)
"RTN","IBECUS2",39,0)
 S IBDPT(0)=$G(^DPT(DFN,0)),IBDPT(.11)=$G(^(.11)),IBDPT(.13)=$G(^(.13))
"RTN","IBECUS2",40,0)
 I IBDPT(0)="" S IBERR=4 G ENQ
"RTN","IBECUS2",41,0)
 ;
"RTN","IBECUS2",42,0)
 ; - is patient covered by TRICARE?
"RTN","IBECUS2",43,0)
 S IBCDFN=$$CUS^IBACUS(DFN,DT)
"RTN","IBECUS2",44,0)
 I 'IBCDFN S IBERR=2 G ENQ
"RTN","IBECUS2",45,0)
 ;
"RTN","IBECUS2",46,0)
 ; - get the BIN Number for the insurance company
"RTN","IBECUS2",47,0)
 S IBCDFND=$G(^DPT(DFN,.312,IBCDFN,0))
"RTN","IBECUS2",48,0)
 S IBBIN=$P($G(^DIC(36,+IBCDFND,3)),"^",3)
"RTN","IBECUS2",49,0)
 I $L(IBBIN)'=6 S IBERR=5 G ENQ
"RTN","IBECUS2",50,0)
 ;
"RTN","IBECUS2",51,0)
 ; - build line1:
"RTN","IBECUS2",52,0)
 ;      o pharmacy division
"RTN","IBECUS2",53,0)
 ;      o FI identifier (bin number)
"RTN","IBECUS2",54,0)
 ;      o commercial software package version (32)
"RTN","IBECUS2",55,0)
 ;      o billing transaction code  (01)
"RTN","IBECUS2",56,0)
 ;      o control #_pharmacy #_group (37 spaces)
"RTN","IBECUS2",57,0)
 ;      o insured person's ssn
"RTN","IBECUS2",58,0)
 ;      o person code (3 spaces)
"RTN","IBECUS2",59,0)
 ;
"RTN","IBECUS2",60,0)
 S IBFS=$C(28),IBGS=$C(29)
"RTN","IBECUS2",61,0)
 S IBLINE(1)=$$FILL(IBDRX("DIV"),2)_IBBIN_3201_$J("",37)
"RTN","IBECUS2",62,0)
 S IBLINE(1)=IBLINE(1)_$$LJUST($P(IBCDFND,"^",2),18)_$J("",3)
"RTN","IBECUS2",63,0)
 ;
"RTN","IBECUS2",64,0)
 ; - build line2:
"RTN","IBECUS2",65,0)
 ;      o patient dob
"RTN","IBECUS2",66,0)
 ;      o patient sex
"RTN","IBECUS2",67,0)
 ;      o patient rel. to insured
"RTN","IBECUS2",68,0)
 ;      o other coverage indicator (0)
"RTN","IBECUS2",69,0)
 ;      o rx fill date
"RTN","IBECUS2",70,0)
 ;
"RTN","IBECUS2",71,0)
 S IBLINE(2)=$$DATE($P(IBDPT(0),"^",3))_$P(IBDPT(0),"^",2)
"RTN","IBECUS2",72,0)
 S IBLINE(2)=IBLINE(2)_$S($P(IBCDFND,"^",16)>3:4,1:+$P(IBCDFND,"^",16))
"RTN","IBECUS2",73,0)
 S IBLINE(2)=IBLINE(2)_"0"_$$DATE(IBDRX("FDT"))
"RTN","IBECUS2",74,0)
 ;
"RTN","IBECUS2",75,0)
 ; - build line3:
"RTN","IBECUS2",76,0)
 ;      o patient first name
"RTN","IBECUS2",77,0)
 ;      o patient last name
"RTN","IBECUS2",78,0)
 ;      o insured's first name
"RTN","IBECUS2",79,0)
 ;      o insured's last name
"RTN","IBECUS2",80,0)
 ;      o address line 1, city, state, zip, phone
"RTN","IBECUS2",81,0)
 ;      
"RTN","IBECUS2",82,0)
 S IBLINE(3)=IBFS_"C700"_IBFS_"C90"
"RTN","IBECUS2",83,0)
 S IBLINE(3)=IBLINE(3)_IBFS_"CA"_$$LJUST($P($P(IBDPT(0),"^"),",",2),12)
"RTN","IBECUS2",84,0)
 S IBLINE(3)=IBLINE(3)_IBFS_"CB"_$$LJUST($P($P(IBDPT(0),"^"),","),15)
"RTN","IBECUS2",85,0)
 S IBLINE(3)=IBLINE(3)_IBFS_"CC"_$$LJUST($P($P(IBCDFND,"^",17),",",2),12)
"RTN","IBECUS2",86,0)
 S IBLINE(3)=IBLINE(3)_IBFS_"CD"_$$LJUST($P($P(IBCDFND,"^",17),","),15)
"RTN","IBECUS2",87,0)
 S IBLINE(3)=IBLINE(3)_IBFS_"CM"_$$LJUST($P(IBDPT(.11),"^"),30)
"RTN","IBECUS2",88,0)
 S IBLINE(3)=IBLINE(3)_IBFS_"CN"_$$LJUST($P(IBDPT(.11),"^",4),20)
"RTN","IBECUS2",89,0)
 S IBLINE(3)=IBLINE(3)_IBFS_"CO"_$$LJUST($P($G(^DIC(5,+$P(IBDPT(.11),"^",5),0)),"^",2),2)
"RTN","IBECUS2",90,0)
 S IBLINE(3)=IBLINE(3)_IBFS_"CP"_$$LJUST($P(IBDPT(.11),"^",6),9)
"RTN","IBECUS2",91,0)
 S IBLINE(3)=IBLINE(3)_IBFS_"CQ"_$$FILL($TR($P(IBDPT(.13),"^"),"-",""),10)
"RTN","IBECUS2",92,0)
 ;
"RTN","IBECUS2",93,0)
 ; - build line4:
"RTN","IBECUS2",94,0)
 ;      o prescription number
"RTN","IBECUS2",95,0)
 ;      o new/refill code
"RTN","IBECUS2",96,0)
 ;      o quantity
"RTN","IBECUS2",97,0)
 ;      o days supply
"RTN","IBECUS2",98,0)
 ;      o compound code (0) or if site param IBDRX("COMP")
"RTN","IBECUS2",99,0)
 ;      o drug NDC #
"RTN","IBECUS2",100,0)
 ;      o dispense as written? (0) or if resubmit look at IBKEYD
"RTN","IBECUS2",101,0)
 ;      o ingredient cost
"RTN","IBECUS2",102,0)
 ;      o Prescriber ID
"RTN","IBECUS2",103,0)
 ;      o date prescription written
"RTN","IBECUS2",104,0)
 ;      o # refills authorized
"RTN","IBECUS2",105,0)
 ;      o rx origin code (1)
"RTN","IBECUS2",106,0)
 ;      o rx denial clarification (00)
"RTN","IBECUS2",107,0)
 ;      o usual and customary charge (currently ingr cost * 5)
"RTN","IBECUS2",108,0)
 ;
"RTN","IBECUS2",109,0)
 ; - but first, strip trailing alpha characters from the rx number
"RTN","IBECUS2",110,0)
 S:$E(IBDRX("RX#"),$L(IBDRX("RX#")))]9 IBDRX("RX#")=$E(IBDRX("RX#"),1,$L(IBDRX("RX#"))-1)
"RTN","IBECUS2",111,0)
 S IBLINE(4)=IBGS_$$FILL(IBDRX("RX#"),7)
"RTN","IBECUS2",112,0)
 S IBLINE(4)=IBLINE(4)_$$FILL(IBREF,2)
"RTN","IBECUS2",113,0)
 S IBLINE(4)=IBLINE(4)_$$FILL($P(IBDRX("QTY"),"."),5)
"RTN","IBECUS2",114,0)
 S IBLINE(4)=IBLINE(4)_$$FILL(IBDRX("SUP"),3)
"RTN","IBECUS2",115,0)
 S IBLINE(4)=IBLINE(4)_$S(+$P($G(^IBE(350.9,1,9)),"^",15):IBDRX("COMP"),1:0)
"RTN","IBECUS2",116,0)
 S IBLINE(4)=IBLINE(4)_$$FILL($TR(IBDRX("NDC"),"-",""),11)
"RTN","IBECUS2",117,0)
 S IBLINE(4)=IBLINE(4)_$S($P($G(^IBA(351.53,+$P(IBKEYD,"^",5),0)),"^"):$P(^(0),"^"),1:0)
"RTN","IBECUS2",118,0)
 ;
"RTN","IBECUS2",119,0)
 S IBUAC=$$FILL(+($E($TR($J(IBAWP,0,2),".",""),1,5))*IBDRX("QTY"),6)
"RTN","IBECUS2",120,0)
 S IBLINE(4)=IBLINE(4)_IBUAC_$$LJUST($S(+$P($G(^IBE(350.9,1,9)),"^",14)&($L(IBDRX("DEA"))):IBDRX("DEA"),1:IBPRESCR),10)
"RTN","IBECUS2",121,0)
 S IBLINE(4)=IBLINE(4)_$$DATE(IBDRX("ISS"))
"RTN","IBECUS2",122,0)
 S IBLINE(4)=IBLINE(4)_$$FILL(IBDRX("#REF"),2)
"RTN","IBECUS2",123,0)
 S IBLINE(4)=IBLINE(4)_"100"_$$FILL(IBUAC*5,6)
"RTN","IBECUS2",124,0)
 ;
"RTN","IBECUS2",125,0)
 ; - build line5:  (not currently used, though must be submitted)
"RTN","IBECUS2",126,0)
 S IBLINE(5)=IBFS_"DA000000"_IBFS_"DC000200"_IBFS_"DG000000000000"_IBFS_"DI00"_IBFS_"DL"_$J("",10)
"RTN","IBECUS2",127,0)
 S IBLINE(5)=IBLINE(5)_IBFS_"DM00000"_IBFS_"DN01"_IBFS_"DO"_$J("",6)_IBFS_"DU000000"_IBFS_"DX000000"
"RTN","IBECUS2",128,0)
 S IBLINE(5)=IBLINE(5)_IBFS_"E4  "_IBFS_"E5  "_IBFS_"E6  "_IBFS_"E700000000"
"RTN","IBECUS2",129,0)
 ;
"RTN","IBECUS2",130,0)
OUT ; - send transaction to the commercial pos package
"RTN","IBECUS2",131,0)
 W $C(2)
"RTN","IBECUS2",132,0)
 F I=1:1:5 W IBLINE(I)
"RTN","IBECUS2",133,0)
 W $C(3)
"RTN","IBECUS2",134,0)
 W !
"RTN","IBECUS2",135,0)
 ;
"RTN","IBECUS2",136,0)
 ; - receive response
"RTN","IBECUS2",137,0)
 R IBRESP(1)#220:120 I '$T S IBERR=6 G ENQ
"RTN","IBECUS2",138,0)
 R IBRESP(2)#220:60,IBRESP(3):60 I '$L(IBRESP(3)) S IBERR=7 G ENQ
"RTN","IBECUS2",139,0)
 ;
"RTN","IBECUS2",140,0)
 S IBRESP(1)=$E(IBRESP(1),2,999)
"RTN","IBECUS2",141,0)
 ;
"RTN","IBECUS2",142,0)
 S XMCHAN=""
"RTN","IBECUS2",143,0)
 I $E(IBRESP(1),1,3)="   " D ERROR^IBECUS22 G ENQ
"RTN","IBECUS2",144,0)
 I $E(IBRESP(1),17)="D" D DUP^IBECUS22 G ENQ
"RTN","IBECUS2",145,0)
 ;
"RTN","IBECUS2",146,0)
 ; - file the billing transaction in file #351.51
"RTN","IBECUS2",147,0)
 D ^IBECUS21
"RTN","IBECUS2",148,0)
 ;
"RTN","IBECUS2",149,0)
 ; - quit if a reject
"RTN","IBECUS2",150,0)
 I $E(IBRESP(1),17)="R" G ENQ
"RTN","IBECUS2",151,0)
 ;
"RTN","IBECUS2",152,0)
 ; - if there was an error, file it and quit
"RTN","IBECUS2",153,0)
 I $E(IBRESP(1),1,3) D ERROR^IBECUS22 G ENQ
"RTN","IBECUS2",154,0)
 ;
"RTN","IBECUS2",155,0)
 ; - Queue tasks to print the label and create charges
"RTN","IBECUS2",156,0)
 F IBI="RXLAB;Rx Label print","RXBIL;Rx Billing" D TASK(IBI)
"RTN","IBECUS2",157,0)
 ;
"RTN","IBECUS2",158,0)
 ; - delete rx from billing queue
"RTN","IBECUS2",159,0)
 K ^IBA(351.5,"APOST",IBKEY)
"RTN","IBECUS2",160,0)
 ;
"RTN","IBECUS2",161,0)
ENQ I $G(IBERR) D ERROR^IBECUS22
"RTN","IBECUS2",162,0)
 Q
"RTN","IBECUS2",163,0)
 ;
"RTN","IBECUS2",164,0)
 ;
"RTN","IBECUS2",165,0)
TASK(IBDESC) ; Queue off label print, charge creation and cancellation jobs
"RTN","IBECUS2",166,0)
 ;  Input:  IBDESC  --  1 ; 2 , where
"RTN","IBECUS2",167,0)
 ;                        1 = routine label to execute
"RTN","IBECUS2",168,0)
 ;                        2 = task description
"RTN","IBECUS2",169,0)
 K ZTSAVE,ZTCPU,ZTSK
"RTN","IBECUS2",170,0)
 S ZTRTN=$P(IBDESC,";")_"^IBACUS",ZTDTH=$H,ZTIO=""
"RTN","IBECUS2",171,0)
 S ZTDESC="IB - "_$P(IBDESC,";",2)
"RTN","IBECUS2",172,0)
 F I="IBKEYD","IBCHTRN" S ZTSAVE(I)=""
"RTN","IBECUS2",173,0)
 D ^%ZTLOAD
"RTN","IBECUS2",174,0)
 Q
"RTN","IBECUS2",175,0)
 ;
"RTN","IBECUS2",176,0)
 ;
"RTN","IBECUS2",177,0)
DATE(X) ; Set date in the format yyyymmdd, or 8 spaces.
"RTN","IBECUS2",178,0)
 N Y
"RTN","IBECUS2",179,0)
 S Y=($E($G(X))+17)_$E($G(X),2,7)
"RTN","IBECUS2",180,0)
 Q $S($L(Y)=8:Y,1:$J("",8))
"RTN","IBECUS2",181,0)
 ;
"RTN","IBECUS2",182,0)
FILL(X,LEN) ; Zero-fill, right justified.
"RTN","IBECUS2",183,0)
 N Y
"RTN","IBECUS2",184,0)
 S:'$G(LEN) LEN=1
"RTN","IBECUS2",185,0)
 S Y=$E($G(X),1,LEN)
"RTN","IBECUS2",186,0)
 F  Q:$L(Y)>(LEN-1)  S Y="0"_Y
"RTN","IBECUS2",187,0)
 Q Y
"RTN","IBECUS2",188,0)
 ;
"RTN","IBECUS2",189,0)
LJUST(X,LEN) ; Space-fill, left justified.
"RTN","IBECUS2",190,0)
 N Y
"RTN","IBECUS2",191,0)
 S:'$G(LEN) LEN=1
"RTN","IBECUS2",192,0)
 S Y=$E($G(X),1,LEN)
"RTN","IBECUS2",193,0)
 F  Q:$L(Y)>(LEN-1)  S Y=Y_" "
"RTN","IBECUS2",194,0)
 Q Y
"RTN","IBECUS2",195,0)
 ;
"RTN","IBECUS2",196,0)
STRIPL(X) ; Strip leading spaces.
"RTN","IBECUS2",197,0)
 N Y S Y=$G(X)
"RTN","IBECUS2",198,0)
 F  Q:$E(Y)'=" "  S Y=$E(Y,2,999)
"RTN","IBECUS2",199,0)
 Q Y
"RTN","IBECUS2",200,0)
 ;
"RTN","IBECUS2",201,0)
NDC(X) ; Massage the NDC as it is stored in Pharmacy
"RTN","IBECUS2",202,0)
 ;  Input:  X  --  The NDC as it is stored in Pharmacy
"RTN","IBECUS2",203,0)
 ; Output:  X  --  The NDC in the format 5N 1"-" 4N 1"-" 2N
"RTN","IBECUS2",204,0)
 ;
"RTN","IBECUS2",205,0)
 I $G(X)="" S X="" G NDCQ
"RTN","IBECUS2",206,0)
 ;
"RTN","IBECUS2",207,0)
 N LEN,PCE,Y,Z
"RTN","IBECUS2",208,0)
 ;
"RTN","IBECUS2",209,0)
 S Z(1)=5,Z(2)=4,Z(3)=2
"RTN","IBECUS2",210,0)
 S PCE=0 F  S PCE=$O(Z(PCE)) Q:'PCE  S LEN=Z(PCE) D
"RTN","IBECUS2",211,0)
 .S Y=$P(X,"-",PCE)
"RTN","IBECUS2",212,0)
 .I $L(Y)>LEN S Y=$E(Y,2,LEN+1)
"RTN","IBECUS2",213,0)
 .I $L(+Y)<LEN S Y=$$FILL(Y,LEN)
"RTN","IBECUS2",214,0)
 .S $P(X,"-",PCE)=Y
"RTN","IBECUS2",215,0)
 ;
"RTN","IBECUS2",216,0)
NDCQ Q X
"RTN","IBECUSM")
0^18^B34547174^B34135929
"RTN","IBECUSM",1,0)
IBECUSM ;DVAMC/RLM - TRICARE PHARMACY BILLING OPTIONS; 20-AUG-96
"RTN","IBECUSM",2,0)
 ;;2.0;INTEGRATED BILLING;**52,162,240,347**;21-MAR-94;Build 24
"RTN","IBECUSM",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBECUSM",4,0)
 ;
"RTN","IBECUSM",5,0)
 ;
"RTN","IBECUSM",6,0)
REV ; Reverse a claim already submitted to the Fiscal Intermediary.
"RTN","IBECUSM",7,0)
 I '$P($G(^IBE(350.9,1,9)),"^",4) W !!,"Please note that your TRICARE Pharmacy billing interface is not running!",!
"RTN","IBECUSM",8,0)
REVA N X K DIC S DIC=52,DIC("A")="Enter the RX# you wish to reverse: ",DIC(0)="AEQMN"
"RTN","IBECUSM",9,0)
 W ! D DIC^PSODI(52,.DIC) S IBRX=+Y K DIC
"RTN","IBECUSM",10,0)
 I Y<1!($D(DUOUT))!($D(DIRUT)) G REVQ
"RTN","IBECUSM",11,0)
 W !!,"Prescription: ",$P(Y,"^",2),!,"     Patient: ",$$FILE^IBRXUTL(+Y,2,"E")
"RTN","IBECUSM",12,0)
 ;
"RTN","IBECUSM",13,0)
 ; - has this prescription been billed?
"RTN","IBECUSM",14,0)
 K IBARR,IBCAN S (IBKEY,IBKEYS)=IBRX_";"
"RTN","IBECUSM",15,0)
 F  S IBKEY=$O(^IBA(351.5,"B",IBKEY)) Q:$E(IBKEY,1,$L(IBKEYS))'=IBKEYS  S IBARR(IBKEY)=+$O(^(IBKEY,0))
"RTN","IBECUSM",16,0)
 I '$D(IBARR) W !!,"This prescription has not yet been billed." G REVA
"RTN","IBECUSM",17,0)
 ;
"RTN","IBECUSM",18,0)
 ; - find all potential transactions
"RTN","IBECUSM",19,0)
 D FINDC^IBECUSMU(.IBARR,1,.IBCAN)
"RTN","IBECUSM",20,0)
 S IBKEY=$O(IBCAN("")) I IBKEY="" G REVA
"RTN","IBECUSM",21,0)
 ;
"RTN","IBECUSM",22,0)
 ; - there's just one
"RTN","IBECUSM",23,0)
 I $O(IBCAN(IBKEY))="" S IBCHTRN=IBCAN(IBKEY) W !!,$S($P(IBKEY,";",2):"Refill #"_$P(IBKEY,";",2),1:"The original fill")," for this prescription can be cancelled." G OKAYC
"RTN","IBECUSM",24,0)
 ;
"RTN","IBECUSM",25,0)
 ; - more than 1; must select from the list
"RTN","IBECUSM",26,0)
 W !!,"More than one fill for rx# ",$$FILE^IBRXUTL(IBRX,.01)," may be cancelled."
"RTN","IBECUSM",27,0)
 S IBREF=$$SEL^IBECUSMU(.IBCAN)
"RTN","IBECUSM",28,0)
 I IBREF<0 G REVQ
"RTN","IBECUSM",29,0)
 ;
"RTN","IBECUSM",30,0)
 S IBKEY=IBRX_";"_IBREF,IBCHTRN=IBCAN(IBKEY)
"RTN","IBECUSM",31,0)
 ;
"RTN","IBECUSM",32,0)
OKAYC ; - okay to cancel?
"RTN","IBECUSM",33,0)
 S DIR("A")="Is it okay to cancel this prescription"
"RTN","IBECUSM",34,0)
 S DIR(0)="Y" D ^DIR K DIR
"RTN","IBECUSM",35,0)
 I 'Y!($D(DUOUT))!($D(DIRUT)) W !,"The claim reversal was NOT submitted." G REVQ
"RTN","IBECUSM",36,0)
 ;
"RTN","IBECUSM",37,0)
 ; - queue cancellation for submittal
"RTN","IBECUSM",38,0)
 S ^IBA(351.5,"APOST",IBKEY)="REVERSE^^"_DUZ_"^"_IBCHTRN
"RTN","IBECUSM",39,0)
 W !,"The claim reversal has been submitted."
"RTN","IBECUSM",40,0)
REVQ K DIROUT,DIRUT,DTOUR,DUOUT,IBRX,IBARR,IBCAN,IBKEY,IBKEYS,IBCHTRN,IBREF
"RTN","IBECUSM",41,0)
 Q
"RTN","IBECUSM",42,0)
 ;
"RTN","IBECUSM",43,0)
 ;
"RTN","IBECUSM",44,0)
 ;
"RTN","IBECUSM",45,0)
RESUB ; Resubmit a claim to the Fiscal Intermediary.
"RTN","IBECUSM",46,0)
 I '$P($G(^IBE(350.9,1,9)),"^",4) W !!,"Please note that your TRICARE Pharmacy billing interface is not running!",!
"RTN","IBECUSM",47,0)
RESUBA N X K DIC S DIC=52 S DIC(0)="AEQMN",DIC("A")="Enter the RX# you wish to resubmit: "
"RTN","IBECUSM",48,0)
 W ! D DIC^PSODI(52,.DIC) S IBRX=+Y K DIC
"RTN","IBECUSM",49,0)
 I Y<1!($D(DUOUT))!($D(DIRUT)) G RESUBQ
"RTN","IBECUSM",50,0)
 S DFN=$$FILE^IBRXUTL(+Y,2)
"RTN","IBECUSM",51,0)
 W !!,"Prescription: ",$$FILE^IBRXUTL(IBRX,.01),!,"     Patient: ",$P($G(^DPT(DFN,0)),"^")
"RTN","IBECUSM",52,0)
 ;
"RTN","IBECUSM",53,0)
 ; - find all potential transactions
"RTN","IBECUSM",54,0)
 K IBBIL D FINDB^IBECUSMU(IBRX,1,.IBBIL)
"RTN","IBECUSM",55,0)
 S IBKEY=$O(IBBIL("")) I IBKEY="" G RESUBA
"RTN","IBECUSM",56,0)
 ;
"RTN","IBECUSM",57,0)
 ; - there's just one
"RTN","IBECUSM",58,0)
 I $O(IBBIL(IBKEY))="" W !!,$S($P(IBKEY,";",2):"Refill #"_$P(IBKEY,";",2),1:"The original fill")," for this prescription can be billed." G IBPSR
"RTN","IBECUSM",59,0)
 ;
"RTN","IBECUSM",60,0)
 ; - more than 1; must select from the list
"RTN","IBECUSM",61,0)
 W !!,"More than one fill for rx# ",$$FILE^IBRXUTL(IBRX,.01)," may be billed."
"RTN","IBECUSM",62,0)
 S IBREF=$$SEL^IBECUSMU(.IBBIL)
"RTN","IBECUSM",63,0)
 I IBREF<0 G RESUBQ
"RTN","IBECUSM",64,0)
 ;
"RTN","IBECUSM",65,0)
 S IBKEY=IBRX_";"_IBREF
"RTN","IBECUSM",66,0)
 ;
"RTN","IBECUSM",67,0)
IBPSR ;Ask for the Product Selection Reason
"RTN","IBECUSM",68,0)
 N DIR,DIE,DR,X,Y,DA
"RTN","IBECUSM",69,0)
 S DIR("B")=$S($P($G(^IBA(351.5,+IBBIL(IBKEY),0)),"^",10):$P(^IBA(351.53,$P(^(0),"^",10),0),"^"),1:0)
"RTN","IBECUSM",70,0)
 S DIR(0)="PO^351.53" D ^DIR I Y=-1 W !,"The prescription was NOT submitted for billing." G RESUBQ
"RTN","IBECUSM",71,0)
 S DA=+$G(IBBIL(IBKEY)),DIE="^IBA(351.5,",DR=".10////"_(+Y) D ^DIE
"RTN","IBECUSM",72,0)
 K DIR
"RTN","IBECUSM",73,0)
OKAYB ; - okay to bill?
"RTN","IBECUSM",74,0)
 S DIR("A")="Is it okay to bill this prescription"
"RTN","IBECUSM",75,0)
 S DIR(0)="Y" D ^DIR
"RTN","IBECUSM",76,0)
 I 'Y!($D(DUOUT))!($D(DIRUT)) W !,"The prescription was NOT submitted for billing." G RESUBQ
"RTN","IBECUSM",77,0)
 ;
"RTN","IBECUSM",78,0)
 D:'$D(PSOPAR) ^PSOLSET
"RTN","IBECUSM",79,0)
 I '$D(PSOLAP) W !!,*7,"The label printer is not defined!",!,"The prescription has NOT been submitted for billing." G RESUBQ
"RTN","IBECUSM",80,0)
 S ^IBA(351.5,"APOST",IBKEY)=PSOLAP_"^"_PSOSITE_"^"_DUZ_"^^"_$P($G(^IBA(351.5,+IBBIL(IBKEY),0)),"^",10)
"RTN","IBECUSM",81,0)
 W !,"The prescription has been submitted for billing."
"RTN","IBECUSM",82,0)
 ;
"RTN","IBECUSM",83,0)
RESUBQ K DIROUT,DIRUT,DTOUR,DUOUT,IBRX,DFN,IBBIL,IBKEY,IBREF
"RTN","IBECUSM",84,0)
 K PSOBAR0,PSOBAR1,PSOBARS,PSOCLC,PSOCNT,PSODIV,PSODTCUT
"RTN","IBECUSM",85,0)
 K PSOLAP,PSOPAR,PSOPAR7,PSOPRPAS,PSOSITE
"RTN","IBECUSM",86,0)
 Q
"RTN","IBECUSM",87,0)
 ;
"RTN","IBECUSM",88,0)
 ;
"RTN","IBECUSM",89,0)
 ;
"RTN","IBECUSM",90,0)
DREJ ; Delete an entry from the Reject (#351.52) file.
"RTN","IBECUSM",91,0)
 I '$P($G(^IBE(350.9,1,9)),"^",4) W !!,"Please note that your TRICARE Pharmacy billing interface is not running!",!
"RTN","IBECUSM",92,0)
DREJA N X K DIC S DIC=52 S DIC(0)="AEQMN",DIC("A")="Enter the RX# of the rejected transmission: "
"RTN","IBECUSM",93,0)
 W ! D DIC^PSODI(52,.DIC) S IBRX=+Y K DIC
"RTN","IBECUSM",94,0)
 I Y<1!($D(DUOUT))!($D(DIRUT)) G DREJQ
"RTN","IBECUSM",95,0)
 W !!,"Prescription: ",$P(Y,"^",2),!,"     Patient: ",$$FILE^IBRXUTL(+Y,2,"E")
"RTN","IBECUSM",96,0)
 ;
"RTN","IBECUSM",97,0)
 ; - is there a reject entry for this prescription?
"RTN","IBECUSM",98,0)
 K IBARR S (IBKEY,IBKEYS)=IBRX_";"
"RTN","IBECUSM",99,0)
 F  S IBKEY=$O(^IBA(351.52,"B",IBKEY)) Q:$E(IBKEY,1,$L(IBKEYS))'=IBKEYS  S IBARR(IBKEY)=+$O(^(IBKEY,0))
"RTN","IBECUSM",100,0)
 I '$D(IBARR) W !!,"There is no reject entry for this prescription." G DREJA
"RTN","IBECUSM",101,0)
 ;
"RTN","IBECUSM",102,0)
 ; - select the reject entry to delete
"RTN","IBECUSM",103,0)
 S IBKEY=$O(IBARR("")) I IBKEY="" G DREJA
"RTN","IBECUSM",104,0)
 I $O(IBARR(IBKEY))="" S IBCHREF=+IBARR(IBKEY) W !!,$S($P(IBKEY,";",2):"Refill #"_$P(IBKEY,";",2),1:"The original fill")," for this prescription has been rejected." G OKAYD
"RTN","IBECUSM",105,0)
 ;
"RTN","IBECUSM",106,0)
 ; - more than 1; must select from the list
"RTN","IBECUSM",107,0)
 W !!,"More than one fill for rx# ",$$FILE^IBRXUTL(IBRX,.01)," has a reject entry."
"RTN","IBECUSM",108,0)
 S IBREF=$$SEL^IBECUSMU(.IBARR)
"RTN","IBECUSM",109,0)
 I IBREF<0 G DREJQ
"RTN","IBECUSM",110,0)
 ;
"RTN","IBECUSM",111,0)
 S IBKEY=IBRX_";"_IBREF,IBCHREF=+$G(IBARR(IBKEY))
"RTN","IBECUSM",112,0)
 ;
"RTN","IBECUSM",113,0)
OKAYD ; - okay to delete the reject?
"RTN","IBECUSM",114,0)
 I '$D(^IBA(351.52,IBCHREF,0)) K ^IBA(351.52,"B",IBKEY) W !!,"Sorry, can't find a reject for this prescription!" G DREJQ
"RTN","IBECUSM",115,0)
 S DIR("A")="Is it okay to delete this reject entry"
"RTN","IBECUSM",116,0)
 S DIR(0)="Y" D ^DIR K DIR
"RTN","IBECUSM",117,0)
 I 'Y!($D(DUOUT))!($D(DIRUT)) W !,"The reject entry was NOT deleted." G DREJQ
"RTN","IBECUSM",118,0)
 ;
"RTN","IBECUSM",119,0)
 ; - delete the entry
"RTN","IBECUSM",120,0)
 S DA=IBCHREF,DIK="^IBA(351.52," D ^DIK K DA,DIK
"RTN","IBECUSM",121,0)
 W !,"The reject entry has been deleted."
"RTN","IBECUSM",122,0)
DREJQ K DIROUT,DIRUT,DTOUR,DUOUT,IBRX,IBARR,IBKEY,IBKEYS,IBCHREF,IBREF
"RTN","IBECUSM",123,0)
 Q
"RTN","IBECUSMU")
0^19^B15736742^B14433400
"RTN","IBECUSMU",1,0)
IBECUSMU ;ALB/CPM - PHARMACY BILLING OPTION UTILITIES ; 12-DEC-96
"RTN","IBECUSMU",2,0)
 ;;2.0;INTEGRATED BILLING;**52,347**;21-MAR-94;Build 24
"RTN","IBECUSMU",3,0)
 ;
"RTN","IBECUSMU",4,0)
 ;
"RTN","IBECUSMU",5,0)
FINDC(IBIN,IBW,IBOUT) ; Find transactions which can be cancelled.
"RTN","IBECUSMU",6,0)
 ;  Input:     IBIN  --  Array of transactions, passed by reference
"RTN","IBECUSMU",7,0)
 ;              IBW  --  1 => Write reject statements
"RTN","IBECUSMU",8,0)
 ;                       2 => No writes
"RTN","IBECUSMU",9,0)
 ; Output:    IBOUT  --  Array of transactions which can be cancelled
"RTN","IBECUSMU",10,0)
 ;
"RTN","IBECUSMU",11,0)
 N IBKEY,IBCHTRN,IBCHTRN5,IBCHTRN6
"RTN","IBECUSMU",12,0)
 S IBKEY="" F  S IBKEY=$O(IBIN(IBKEY)) Q:IBKEY=""  D
"RTN","IBECUSMU",13,0)
 .S IBCHTRN=IBIN(IBKEY)
"RTN","IBECUSMU",14,0)
 .S IBCHTRN5=$G(^IBA(351.5,IBCHTRN,5)),IBCHTRN6=$G(^(6))
"RTN","IBECUSMU",15,0)
 .;
"RTN","IBECUSMU",16,0)
 .; - can cancel if original transmission was billed
"RTN","IBECUSMU",17,0)
 .;   (no billing rejects) without trying to cancel
"RTN","IBECUSMU",18,0)
 .;   (no cancel auth) or if the cancel was rejected
"RTN","IBECUSMU",19,0)
 .I IBCHTRN5="",IBCHTRN6=""!($P(IBCHTRN6,"^",3)'="") S IBOUT(IBKEY)=IBCHTRN Q
"RTN","IBECUSMU",20,0)
 .;
"RTN","IBECUSMU",21,0)
 .; - write error messages
"RTN","IBECUSMU",22,0)
 .Q:'$G(IBW)
"RTN","IBECUSMU",23,0)
 .;
"RTN","IBECUSMU",24,0)
 .; - billing transaction was rejected
"RTN","IBECUSMU",25,0)
 .I IBCHTRN5]"" W !," The claim for ",$S($P(IBKEY,";",2):"refill #"_$P(IBKEY,";",2),1:"the original fill")," for this prescription was rejected." Q
"RTN","IBECUSMU",26,0)
 .;
"RTN","IBECUSMU",27,0)
 .; - transaction was cancelled
"RTN","IBECUSMU",28,0)
 .W !?1,$S($P(IBKEY,";",2):"Refill #"_$P(IBKEY,";",2),1:"The original fill")," for this prescription has already been reversed."
"RTN","IBECUSMU",29,0)
 ;
"RTN","IBECUSMU",30,0)
 Q
"RTN","IBECUSMU",31,0)
 ;
"RTN","IBECUSMU",32,0)
 ;
"RTN","IBECUSMU",33,0)
FINDB(IBRX,IBW,IBOUT) ; Find prescriptions which can be billed.
"RTN","IBECUSMU",34,0)
 ;  Input:     IBRX  --  Pointer to the prescription in file #52
"RTN","IBECUSMU",35,0)
 ;              IBW  --  1 => Write reject statements
"RTN","IBECUSMU",36,0)
 ;                       2 => No writes
"RTN","IBECUSMU",37,0)
 ; Output:    IBOUT  --  Array of transactions which can be billed
"RTN","IBECUSMU",38,0)
 ;
"RTN","IBECUSMU",39,0)
 N IBARR,IBREF,IBKEY,IBCHTRN,IBCHTRN5,IBCHTRN6,IBREF1,LIST
"RTN","IBECUSMU",40,0)
 S LIST="FINDBLIST"
"RTN","IBECUSMU",41,0)
 ;
"RTN","IBECUSMU",42,0)
 ; - build potential array from prescription (#52) file
"RTN","IBECUSMU",43,0)
 S IBARR(IBRX_";0")=$O(^IBA(351.5,"B",IBRX_";0",0))
"RTN","IBECUSMU",44,0)
 S IBREF=0
"RTN","IBECUSMU",45,0)
 D RX^PSO52API($$FILE^IBRXUTL(IBRX,2),LIST,IBRX,,"R^^",,)
"RTN","IBECUSMU",46,0)
 S IBREF=0 F  S IBREF=$O(^TMP($J,LIST,$$FILE^IBRXUTL(IBRX,2),IBRX,"RF",IBREF)) Q:IBREF'>0  D
"RTN","IBECUSMU",47,0)
 .Q:'IBREF
"RTN","IBECUSMU",48,0)
 .S IBARR(IBRX_";"_IBREF)=$O(^IBA(351.5,"B",IBRX_";"_IBREF,0))
"RTN","IBECUSMU",49,0)
 ;
"RTN","IBECUSMU",50,0)
 K ^TMP($J,LIST)
"RTN","IBECUSMU",51,0)
 S IBKEY="" F  S IBKEY=$O(IBARR(IBKEY)) Q:IBKEY=""  D
"RTN","IBECUSMU",52,0)
 .S IBCHTRN=IBARR(IBKEY)
"RTN","IBECUSMU",53,0)
 .I 'IBCHTRN S IBOUT(IBKEY)=IBCHTRN Q
"RTN","IBECUSMU",54,0)
 .;
"RTN","IBECUSMU",55,0)
 .S IBCHTRN5=$G(^IBA(351.5,IBCHTRN,5)),IBCHTRN6=$G(^(6))
"RTN","IBECUSMU",56,0)
 .;
"RTN","IBECUSMU",57,0)
 .; - can bill if original transmission was rejected,
"RTN","IBECUSMU",58,0)
 .;   or if that transmission was cancelled (re-submit)
"RTN","IBECUSMU",59,0)
 .I IBCHTRN5]""!(IBCHTRN5=""&($P(IBCHTRN6,"^")'="")) S IBOUT(IBKEY)=IBCHTRN Q
"RTN","IBECUSMU",60,0)
 .;
"RTN","IBECUSMU",61,0)
 .; - write messages
"RTN","IBECUSMU",62,0)
 .Q:'$G(IBW)
"RTN","IBECUSMU",63,0)
 .;
"RTN","IBECUSMU",64,0)
 .; - already billed (previous cancellation was rejected)
"RTN","IBECUSMU",65,0)
 .I $P(IBCHTRN6,"^",3)'="" W !!," The previous cancellation for ",$S($P(IBKEY,";",2):"refill #"_$P(IBKEY,";",2),1:"the original fill")," was rejected." Q
"RTN","IBECUSMU",66,0)
 .;
"RTN","IBECUSMU",67,0)
 .; - never tried to cancel
"RTN","IBECUSMU",68,0)
 .W !!?1,$S($P(IBKEY,";",2):"Refill #"_$P(IBKEY,";",2),1:"The original fill")," for this prescription has already been billed."
"RTN","IBECUSMU",69,0)
 ;
"RTN","IBECUSMU",70,0)
 Q
"RTN","IBECUSMU",71,0)
 ;
"RTN","IBECUSMU",72,0)
 ;
"RTN","IBECUSMU",73,0)
SEL(IBARR) ; Select a fill for a prescription.
"RTN","IBECUSMU",74,0)
 ;  Input:   IBARR  --  Array of prescriptions passed by reference.
"RTN","IBECUSMU",75,0)
 ; Output:   IBNUM  --  One of the fill numbers, or -1 (none selected)
"RTN","IBECUSMU",76,0)
 ;
"RTN","IBECUSMU",77,0)
 N DIR,DIRUT,DIROUT,DTOUT,DUOUT,IBSTR,IBKEY,IBRX,IBREF,IBFILL,IBNUM
"RTN","IBECUSMU",78,0)
 ;
"RTN","IBECUSMU",79,0)
 ; - build string for DIR(0)
"RTN","IBECUSMU",80,0)
 S (IBSTR,IBKEY)="",IBNUM=-1
"RTN","IBECUSMU",81,0)
 F  S IBKEY=$O(IBARR(IBKEY)) Q:IBKEY=""  D
"RTN","IBECUSMU",82,0)
 .S IBRX=+IBKEY,IBREF=+$P(IBKEY,";",2)
"RTN","IBECUSMU",83,0)
 .S IBFILL=$S(IBREF:+$$SUBFILE^IBRXUTL(IBRX,IBREF,52,.01),1:+$$FILE^IBRXUTL(IBRX,22))
"RTN","IBECUSMU",84,0)
 .S IBSTR=IBSTR_IBREF_":"_$S(IBREF:"Refill #"_IBREF,1:"Original Fill")_" (filled "_$$DAT1^IBOUTL(IBFILL)_");"
"RTN","IBECUSMU",85,0)
 ;
"RTN","IBECUSMU",86,0)
 I IBSTR="" G SELQ
"RTN","IBECUSMU",87,0)
 ;
"RTN","IBECUSMU",88,0)
 S DIR("A")="Select one of the fills by number",DIR(0)="S^"_IBSTR
"RTN","IBECUSMU",89,0)
 D ^DIR I $D(DUOUT)!$D(DIROUT)!$D(DTOUT) G SELQ
"RTN","IBECUSMU",90,0)
 ;
"RTN","IBECUSMU",91,0)
 S IBNUM=Y
"RTN","IBECUSMU",92,0)
 ;
"RTN","IBECUSMU",93,0)
SELQ Q IBNUM
"RTN","IBECUSO")
0^20^B42704619^B41082188
"RTN","IBECUSO",1,0)
IBECUSO ;RLM/DVAMC - TRICARE PHARMACY BILLING OUTPUTS ; 21-AUG-96
"RTN","IBECUSO",2,0)
 ;;2.0;INTEGRATED BILLING;**52,240,309,347**;21-MAR-94;Build 24
"RTN","IBECUSO",3,0)
 ;
"RTN","IBECUSO",4,0)
REJ ; Generate the Pharmacy Billing Reject report.
"RTN","IBECUSO",5,0)
 ;
"RTN","IBECUSO",6,0)
 ; - quit if there are no rejects
"RTN","IBECUSO",7,0)
 I '$O(^IBA(351.52,0)) W !!,"There are no rejects to be printed." G REJQ
"RTN","IBECUSO",8,0)
 ;
"RTN","IBECUSO",9,0)
 ; - select a device
"RTN","IBECUSO",10,0)
 S %ZIS="QM" D ^%ZIS G:POP REJQ
"RTN","IBECUSO",11,0)
 I $D(IO("Q")) D  G REJQ
"RTN","IBECUSO",12,0)
 .S ZTRTN="REJDQ^IBECUSO",ZTDESC="IB - LIST TRICARE PHARMACY BILLING REJECTS"
"RTN","IBECUSO",13,0)
 .D ^%ZTLOAD W !!,$S($D(ZTSK):"This job has been queued.  The task number is "_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBECUSO",14,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBECUSO",15,0)
 ;
"RTN","IBECUSO",16,0)
 U IO
"RTN","IBECUSO",17,0)
 ;
"RTN","IBECUSO",18,0)
REJDQ ; Tasked entry point.
"RTN","IBECUSO",19,0)
 ;
"RTN","IBECUSO",20,0)
 S (IBPAG,IBQ)=0 D REJHDR
"RTN","IBECUSO",21,0)
 ;
"RTN","IBECUSO",22,0)
 ; - print rejects
"RTN","IBECUSO",23,0)
 S IBR=0 F  S IBR=$O(^IBA(351.52,IBR)) Q:'IBR  D  Q:IBQ
"RTN","IBECUSO",24,0)
 .S IBR0=$G(^IBA(351.52,IBR,0)),IBR1=$G(^(1))
"RTN","IBECUSO",25,0)
 .Q:'IBR0
"RTN","IBECUSO",26,0)
 .;
"RTN","IBECUSO",27,0)
 .S DFN=$$FILE^IBRXUTL(+IBR0,2),IBRXD=$$RXZERO^IBRXUTL(DFN,+IBR0)
"RTN","IBECUSO",28,0)
 .Q:IBRXD=""
"RTN","IBECUSO",29,0)
 .S IBFDT=$$FDT($P(IBR0,"^"))
"RTN","IBECUSO",30,0)
 .;
"RTN","IBECUSO",31,0)
 .; - display the prescription
"RTN","IBECUSO",32,0)
 .I $Y>(IOSL-4) D PAUSE Q:IBQ  D REJHDR
"RTN","IBECUSO",33,0)
 .D REJERR
"RTN","IBECUSO",34,0)
 .;
"RTN","IBECUSO",35,0)
 .; - display errors
"RTN","IBECUSO",36,0)
 .F I=1:1 Q:$P(IBR1,",",I)=""  S IBERRP=$P(IBR1,",",I) Q:IBERRP=""  D  Q:IBQ
"RTN","IBECUSO",37,0)
 ..I $Y>(IOSL-2) D PAUSE Q:IBQ  D REJHDR,REJERR
"RTN","IBECUSO",38,0)
 ..S IBTXT=$$ERRTXT^IBECUS22(IBERRP)
"RTN","IBECUSO",39,0)
 ..I IBTXT]"" W !?4,IBTXT
"RTN","IBECUSO",40,0)
 ;
"RTN","IBECUSO",41,0)
 ; - end-of-report pause
"RTN","IBECUSO",42,0)
 D:'IBQ PAUSE
"RTN","IBECUSO",43,0)
 ;
"RTN","IBECUSO",44,0)
REJQ I '$D(ZTQUEUED) D ^%ZISC
"RTN","IBECUSO",45,0)
 K IBFDT,IBPAG,IBQ,IBR,IBR0,IBR1,IBRXD,DFN,IBERRP,IBTXT
"RTN","IBECUSO",46,0)
 Q
"RTN","IBECUSO",47,0)
 ;
"RTN","IBECUSO",48,0)
 ;
"RTN","IBECUSO",49,0)
REJHDR ; Print the Reject report header.
"RTN","IBECUSO",50,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF,*13
"RTN","IBECUSO",51,0)
 S IBPAG=IBPAG+1
"RTN","IBECUSO",52,0)
 W !,$$DASH(),!,"Date: ",$$DAT1^IBOUTL(DT),?(IOM/2)-14,"IPS Unresolved Reject Report"
"RTN","IBECUSO",53,0)
 W ?(IOM-10),"Page: ",IBPAG,!,$$DASH()
"RTN","IBECUSO",54,0)
 Q
"RTN","IBECUSO",55,0)
 ;
"RTN","IBECUSO",56,0)
REJERR ; Write the prescription and name.
"RTN","IBECUSO",57,0)
 W !!,"RX# ",$P(IBRXD,"^"),", filled on ",$$DAT1^IBOUTL(IBFDT)
"RTN","IBECUSO",58,0)
 W " (",$E($P($G(^DPT(DFN,0)),"^"),1,17)," ",$P($G(^(0)),"^",9),")"
"RTN","IBECUSO",59,0)
 W " rejected because:"
"RTN","IBECUSO",60,0)
 Q
"RTN","IBECUSO",61,0)
 ;
"RTN","IBECUSO",62,0)
DASH() ; Return a dashed line.
"RTN","IBECUSO",63,0)
 Q $TR($J("",IOM)," ","=")
"RTN","IBECUSO",64,0)
 ;
"RTN","IBECUSO",65,0)
PAUSE ; Page break
"RTN","IBECUSO",66,0)
 Q:$E(IOST,1,2)'="C-"
"RTN","IBECUSO",67,0)
 N IBX,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","IBECUSO",68,0)
 F IBX=$Y:1:(IOSL-3) W !
"RTN","IBECUSO",69,0)
 S DIR(0)="E" D ^DIR I $D(DIRUT)!($D(DUOUT)) S IBQ=1
"RTN","IBECUSO",70,0)
 Q
"RTN","IBECUSO",71,0)
 ;
"RTN","IBECUSO",72,0)
 ;
"RTN","IBECUSO",73,0)
 ;
"RTN","IBECUSO",74,0)
TRN ; Generate the Pharmacy Billing Transmission Report
"RTN","IBECUSO",75,0)
 ;
"RTN","IBECUSO",76,0)
 ; - select dates
"RTN","IBECUSO",77,0)
 K DIR S DIR(0)="D^2960101:"_DT,DIR("A")="Beginning Date:" D ^DIR G:$D(DIRUT) TRNQ S IBBEG=Y
"RTN","IBECUSO",78,0)
 K DIR S DIR(0)="D^"_IBBEG_":"_DT,DIR("A")="Ending Date:" D ^DIR G:$D(DIRUT) TRNQ S IBEND=Y
"RTN","IBECUSO",79,0)
 I IBBEG>IBEND W !,"Beginning data must be before ending date.",! G TRN
"RTN","IBECUSO",80,0)
 ;
"RTN","IBECUSO",81,0)
 ; - select a device
"RTN","IBECUSO",82,0)
 S %ZIS="QM" D ^%ZIS G:POP TRNQ
"RTN","IBECUSO",83,0)
 I $D(IO("Q")) D  G TRNQ
"RTN","IBECUSO",84,0)
 .S ZTRTN="TRNDQ^IBECUSO",ZTDESC="IB - LIST TRICARE PHARMACY BILLING TRANSMISSIONS"
"RTN","IBECUSO",85,0)
 .F I="IBBEG","IBEND" S ZTSAVE(I)=""
"RTN","IBECUSO",86,0)
 .D ^%ZTLOAD W !!,$S($D(ZTSK):"This job has been queued.  The task number is "_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBECUSO",87,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBECUSO",88,0)
 ;
"RTN","IBECUSO",89,0)
 U IO
"RTN","IBECUSO",90,0)
 ;
"RTN","IBECUSO",91,0)
TRNDQ ; Tasked entry point.
"RTN","IBECUSO",92,0)
 ;
"RTN","IBECUSO",93,0)
 S (IBPAG,IBQ)=0 D TRNHDR
"RTN","IBECUSO",94,0)
 ;
"RTN","IBECUSO",95,0)
 ; - print transactions
"RTN","IBECUSO",96,0)
 S IBC=0 F  S IBC=$O(^IBA(351.5,IBC)) Q:'IBC  D  Q:IBQ
"RTN","IBECUSO",97,0)
 .S IBCD=$G(^IBA(351.5,IBC,0)),IBCD2=$G(^(2)),IBCD5=$G(^(5)),IBCD6=$G(^(6))
"RTN","IBECUSO",98,0)
 .Q:'IBCD
"RTN","IBECUSO",99,0)
 .S IBD=$$FILE^IBRXUTL(+IBCD,101) I IBD="" S IBD=$$FILE^IBRXUTL(+IBCD,22)
"RTN","IBECUSO",100,0)
 .I IBD<IBBEG Q
"RTN","IBECUSO",101,0)
 .I IBD>IBEND Q
"RTN","IBECUSO",102,0)
 .;
"RTN","IBECUSO",103,0)
 .S IBDPT(0)=$G(^DPT($P(IBCD,"^",2),0)),IBRXD=$$RXZERO^IBRXUTL($P(IBCD,"^",2),+IBCD)
"RTN","IBECUSO",104,0)
 .S IBFDT=$$FDT($P(IBCD,"^"))
"RTN","IBECUSO",105,0)
 .;
"RTN","IBECUSO",106,0)
 .I $Y>(IOSL-5) D PAUSE Q:IBQ  D TRNHDR
"RTN","IBECUSO",107,0)
 .D TRNDAT
"RTN","IBECUSO",108,0)
 .D ZERO^IBRXUTL(+$P(IBRXD,"^",6))
"RTN","IBECUSO",109,0)
 .W !,"  Drug Name: ",$G(^TMP($J,"IBDRUG",+$P(IBRXD,"^",6),.01))
"RTN","IBECUSO",110,0)
 .K ^TMP($J,"IBDRUG")
"RTN","IBECUSO",111,0)
 .;
"RTN","IBECUSO",112,0)
 .W !?5,"Status: ",$S($P(IBCD6,"^")]"":"Reversed",IBCD5]"":"Rejected",1:"Accepted")
"RTN","IBECUSO",113,0)
 .;
"RTN","IBECUSO",114,0)
 .; - display errors
"RTN","IBECUSO",115,0)
 .I IBCD5]"" F I=1:1 S IBERRP=$P(IBCD5,",",I) Q:IBERRP=""  D  Q:IBQ
"RTN","IBECUSO",116,0)
 ..I $Y>(IOSL-2) D PAUSE Q:IBQ  D TRNHDR,TRNDAT
"RTN","IBECUSO",117,0)
 ..S IBTXT=$$ERRTXT^IBECUS22(IBERRP)
"RTN","IBECUSO",118,0)
 ..I IBTXT]"" W !?4,IBTXT
"RTN","IBECUSO",119,0)
 .Q:IBCD5]""
"RTN","IBECUSO",120,0)
 .;
"RTN","IBECUSO",121,0)
 .I $Y>(IOSL-3) D PAUSE Q:IBQ  D TRNHDR,TRNDAT
"RTN","IBECUSO",122,0)
 .W !,$P(IBCD,"^",4),?15,$J($P(IBCD,"^",5),6),?25,$J($P(IBCD2,"^"),6),?35,$J($P(IBCD2,"^",2),6),?45,$J($P(IBCD2,"^",3),6),?55,$J($P(IBCD2,"^",5),6)
"RTN","IBECUSO",123,0)
 .W !?15,$P(IBCD2,"^",6),?39,$P(IBCD2,"^",7)
"RTN","IBECUSO",124,0)
 .;
"RTN","IBECUSO",125,0)
 .I $P(IBCD6,"^",3)]"" F I=1:1 S IBERRP=$P($P(IBCD6,"^",3),",",I) Q:IBERRP=""  D  Q:IBQ
"RTN","IBECUSO",126,0)
 ..I $Y>(IOSL-2) D PAUSE Q:IBQ  D TRNHDR,TRNDAT
"RTN","IBECUSO",127,0)
 ..S IBTXT=$$ERRTXT^IBECUS22(IBERRP)
"RTN","IBECUSO",128,0)
 ..I IBTXT]"" W !?4,IBTXT
"RTN","IBECUSO",129,0)
 .;
"RTN","IBECUSO",130,0)
 .I $P(IBCD6,"^")]"" D
"RTN","IBECUSO",131,0)
 ..I $Y>(IOSL-1) D PAUSE Q:IBQ  D TRNHDR,TRNDAT
"RTN","IBECUSO",132,0)
 ..W !,"Reversal Authorization # ",$P(IBCD6,"^"),?40,"Reversed by: ",$P($G(^VA(200,+$P(IBCD6,"^",2),0)),"^")
"RTN","IBECUSO",133,0)
 ;
"RTN","IBECUSO",134,0)
 ; - end-of-report pause
"RTN","IBECUSO",135,0)
 D:'IBQ PAUSE
"RTN","IBECUSO",136,0)
 ;
"RTN","IBECUSO",137,0)
TRNQ I '$D(ZTQUEUED) D ^%ZISC
"RTN","IBECUSO",138,0)
 K IBPAG,IBQ,IBR,IBR0,IBR1,IBRXD,DFN,IBERRP,IBTXT,IBBEG,IBEND
"RTN","IBECUSO",139,0)
 K IBC,IBCD,IBCD2,IBCD5,IBCD6,IBDPT,IBD,IBFDT
"RTN","IBECUSO",140,0)
 Q
"RTN","IBECUSO",141,0)
 ;
"RTN","IBECUSO",142,0)
TRNHDR ; Print the Transmission Report header.
"RTN","IBECUSO",143,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF,*13
"RTN","IBECUSO",144,0)
 S IBPAG=IBPAG+1
"RTN","IBECUSO",145,0)
 W !,$$DASH(),!,"Date: ",$$DAT1^IBOUTL(DT),?(IOM/2)-16,"IPS Prescription Status Report"
"RTN","IBECUSO",146,0)
 W ?(IOM-10),"Page: ",IBPAG
"RTN","IBECUSO",147,0)
 W !?(IOM/2)-17 S Y=IBBEG X ^DD("DD") W Y," through " S Y=IBEND X ^DD("DD") W Y
"RTN","IBECUSO",148,0)
 W !,"RX#",?15,"Fill Date",?27,"Patient Name",?62,"Patient SSN"
"RTN","IBECUSO",149,0)
 W !,"NDC",?15,"AWP",?25,"Copay",?35,"Ing Cost",?45,"Fee Paid",?55,"Total PD"
"RTN","IBECUSO",150,0)
 W !?15,"Auth. #",?39,"Message"
"RTN","IBECUSO",151,0)
 W !,"Reject Failure Codes"
"RTN","IBECUSO",152,0)
 W !,$$DASH(),!
"RTN","IBECUSO",153,0)
 Q
"RTN","IBECUSO",154,0)
 ;
"RTN","IBECUSO",155,0)
TRNDAT ; Display basic description information.
"RTN","IBECUSO",156,0)
 W !!,$P(IBRXD,"^"),?15,$$DAT1^IBOUTL(IBFDT)
"RTN","IBECUSO",157,0)
 W ?27,$P(IBDPT(0),"^"),?62,$P(IBDPT(0),"^",9)
"RTN","IBECUSO",158,0)
 Q
"RTN","IBECUSO",159,0)
 ;
"RTN","IBECUSO",160,0)
FDT(X) ; Find the Fill Date for the prescription.
"RTN","IBECUSO",161,0)
 ;  Input:  X  --  1;2   where 1 :> pointer to the rx in file #52, and
"RTN","IBECUSO",162,0)
 ;                             2 :> pointer to the re-fill in #52.1, or
"RTN","IBECUSO",163,0)
 ;                                  0 if this is the original fill.
"RTN","IBECUSO",164,0)
 N IBRXN,Y,DFN S Y=""
"RTN","IBECUSO",165,0)
 I $G(X)="" G FDTQ
"RTN","IBECUSO",166,0)
 S IBRXN=+X
"RTN","IBECUSO",167,0)
 I $P(X,";",2) S Y=$$SUBFILE^IBRXUTL(IBRXN,$P(X,";",2),52,.01) G FDTQ
"RTN","IBECUSO",168,0)
 S DFN=$$FILE^IBRXUTL(IBRXN,2),Z2=$$RXSEC^IBRXUTL(DFN,IBRXN),Z3=$$RX3^IBRXUTL(DFN,IBRXN)
"RTN","IBECUSO",169,0)
 S Y=$S($P(Z2,"^",2):$P(Z2,"^",2),+Z3:+Z3,$P(Z2,"^",5):$P(Z2,"^",5),1:"")
"RTN","IBECUSO",170,0)
FDTQ Q Y
"RTN","IBECUSO",171,0)
 ;
"RTN","IBECUSO",172,0)
AWP ;
"RTN","IBECUSO",173,0)
 I '$D(^JADUTIL("AWP UPDATE")) W !,"No updates on file" Q
"RTN","IBECUSO",174,0)
 W !,"Date         Quantity"
"RTN","IBECUSO",175,0)
 S A="" F  S A=$O(^JADUTIL("AWP UPDATE",A)) Q:'A  D
"RTN","IBECUSO",176,0)
 .I A<($P($H,",")-52) K ^JADUTIL("AWP UPDATE",A) Q
"RTN","IBECUSO",177,0)
 .S %H=A D YMD^%DTC S Y=X X ^DD("DD")
"RTN","IBECUSO",178,0)
 .W !,Y,"  ",^JADUTIL("AWP UPDATE",A)
"RTN","IBECUSO",179,0)
 Q
"RTN","IBECUSO",180,0)
 ;
"RTN","IBECUSO",181,0)
 ;
"RTN","IBECUSO",182,0)
 ;
"RTN","IBECUSO",183,0)
REM ; Delete rejects.
"RTN","IBECUSO",184,0)
 W !!,"Delete entry from IPS error file"
"RTN","IBECUSO",185,0)
 W !,"Delete RX#: " R JADTA:DTIME Q:JADTA=""!(JADTA="^")
"RTN","IBECUSO",186,0)
 I '$D(^JADREJ(JADTA)) W !,JADTA," is not in the error file." G REM
"RTN","IBECUSO",187,0)
 K ^JADREJ(JADTA) W !,JADTA," has been deleted." G REM
"RTN","IBECUSO",188,0)
 Q
"RTN","IBEFURF")
0^21^B18456992^B17354863
"RTN","IBEFURF",1,0)
IBEFURF ;ALB/ARH - UTILITY: FIND RELATED FIRST PARTY BILLS ; 3/7/00
"RTN","IBEFURF",2,0)
 ;;2.0;INTEGRATED BILLING;**130,347**;21-MAR-94;Build 24
"RTN","IBEFURF",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBEFURF",4,0)
 ;
"RTN","IBEFURF",5,0)
 ; the following procedures search for First Party charges for specific events, matchs are returned in TMP
"RTN","IBEFURF",6,0)
 ; only a single record of a charge event is returned, defining the charges current status, although there may 
"RTN","IBEFURF",7,0)
 ; have been cancellations or updates to the original charge
"RTN","IBEFURF",8,0)
 ;    o Inpatient Events may have multiple charge events (Copay and Per Diem)
"RTN","IBEFURF",9,0)
 ;    o Opt and Rx Events have only a single charge event (Copay)
"RTN","IBEFURF",10,0)
 ; 
"RTN","IBEFURF",11,0)
 ; ^TMP("IBRBF",$J, XRF, charge ifn) = 
"RTN","IBEFURF",12,0)
 ; BILL FROM ^ BILL TO ^ CANCELLED? (1/0)^ AR BILL NUMBER ^ TOTAL CHARGE ^ ACTION TYPE (SHORT) ^ # DAYS ON HOLD
"RTN","IBEFURF",13,0)
 ;
"RTN","IBEFURF",14,0)
FPINPT(DFN,ADMDT,XRF) ; given a patient and admission date, find any Inpatient Charges
"RTN","IBEFURF",15,0)
 ; find the record of the Event (based on Event Date) then find all charges with that Event as the Parent Event
"RTN","IBEFURF",16,0)
 N IBFPIFN,IBEVDT,IBEVIFN,IB0 S ADMDT=+$G(ADMDT)\1
"RTN","IBEFURF",17,0)
 I +$G(DFN),+$G(ADMDT) S IBEVDT=-(ADMDT+.01) F  S IBEVDT=$O(^IB("AFDT",DFN,IBEVDT)) Q:'IBEVDT!(-IBEVDT<ADMDT)  D
"RTN","IBEFURF",18,0)
 . S IBEVIFN=0 F  S IBEVIFN=$O(^IB("AFDT",DFN,IBEVDT,IBEVIFN)) Q:'IBEVIFN  D
"RTN","IBEFURF",19,0)
 .. S IBFPIFN=0 F  S IBFPIFN=$O(^IB("AF",IBEVIFN,IBFPIFN)) Q:'IBFPIFN  D
"RTN","IBEFURF",20,0)
 ... S IB0=$G(^IB(IBFPIFN,0)) Q:IB0=""  I $P($G(^IBE(350.1,+$P(IB0,U,3),0)),U,1)["OPT" Q
"RTN","IBEFURF",21,0)
 ... D FPONE(IBFPIFN,$G(XRF))
"RTN","IBEFURF",22,0)
 Q
"RTN","IBEFURF",23,0)
 ;
"RTN","IBEFURF",24,0)
FPOPV(DFN,DT1,DT2,XRF) ; given a patient and date range, find any Outpatient Charges
"RTN","IBEFURF",25,0)
 ; find all records where the Event Date is within the selected date range and the charge is Outpatient
"RTN","IBEFURF",26,0)
 N IBFPIFN,IBEVDT,IB0 I '$G(DT2) S DT2=+$G(DT1)
"RTN","IBEFURF",27,0)
 I +$G(DFN),+$G(DT1) S IBEVDT=-(DT2+.01) F  S IBEVDT=$O(^IB("AFDT",DFN,IBEVDT)) Q:'IBEVDT!(-IBEVDT<DT1)  D
"RTN","IBEFURF",28,0)
 . S IBFPIFN=0 F  S IBFPIFN=$O(^IB("AFDT",DFN,IBEVDT,IBFPIFN)) Q:'IBFPIFN  D
"RTN","IBEFURF",29,0)
 .. S IB0=$G(^IB(IBFPIFN,0)) Q:IB0=""  I $P($G(^IBE(350.1,+$P(IB0,U,3),0)),U,1)'["OPT" Q
"RTN","IBEFURF",30,0)
 .. D FPONE(IBFPIFN,$G(XRF))
"RTN","IBEFURF",31,0)
 Q
"RTN","IBEFURF",32,0)
 ;
"RTN","IBEFURF",33,0)
FPRX(RXIFN,FILLDT,XRF) ; given the prescription ifn (52) and the fill date, find any First Party charges
"RTN","IBEFURF",34,0)
 ; get specific charge entry for an Rx from the Prescription file (52,106 and 52,52,9)
"RTN","IBEFURF",35,0)
 N IBFPIFN,IBFILLN,DFN S IBFPIFN=""
"RTN","IBEFURF",36,0)
 I '+$G(RXIFN) Q
"RTN","IBEFURF",37,0)
 I '+$G(FILLDT) Q
"RTN","IBEFURF",38,0)
 S DFN=$$FILE^IBRXUTL(RXIFN,2) Q:'DFN
"RTN","IBEFURF",39,0)
 I $$FILE^IBRXUTL(RXIFN,22)=$G(FILLDT) D
"RTN","IBEFURF",40,0)
 . S IBFPIFN=+$P($$IBND^IBRXUTL(DFN,RXIFN),"^",2)
"RTN","IBEFURF",41,0)
 . D FPONE(IBFPIFN,$G(XRF))
"RTN","IBEFURF",42,0)
 E  D
"RTN","IBEFURF",43,0)
 . S IBFILLN=$$RFLNUM^IBRXUTL(RXIFN,FILLDT)
"RTN","IBEFURF",44,0)
 . S IBFPIFN=+$$IBNDFL^IBRXUTL(DFN,RXIFN,IBFILLN)
"RTN","IBEFURF",45,0)
 . D FPONE(IBFPIFN,$G(XRF))
"RTN","IBEFURF",46,0)
 Q
"RTN","IBEFURF",47,0)
 ;
"RTN","IBEFURF",48,0)
FPONE(FPIFN,XRF) ; for a FP charge entry get the one line item that defines the entire events charge(s)
"RTN","IBEFURF",49,0)
 ; get the Parent Charge then use the last charge entry as the current record for the event
"RTN","IBEFURF",50,0)
 N IBPARENT,IBLAST,IBDATA Q:'$G(FPIFN)
"RTN","IBEFURF",51,0)
 ;
"RTN","IBEFURF",52,0)
 S IBPARENT=+$P($G(^IB(+FPIFN,0)),U,9) Q:'IBPARENT
"RTN","IBEFURF",53,0)
 S IBLAST=+$$LAST^IBECEAU(IBPARENT) Q:'IBLAST
"RTN","IBEFURF",54,0)
 ;
"RTN","IBEFURF",55,0)
 I '$$DONE(IBLAST,$G(XRF)) S IBDATA=$$LN2(IBLAST) D SAVELN2(IBLAST,IBDATA,$G(XRF))
"RTN","IBEFURF",56,0)
 Q
"RTN","IBEFURF",57,0)
 ;
"RTN","IBEFURF",58,0)
 ; ========================================================================================
"RTN","IBEFURF",59,0)
 ;
"RTN","IBEFURF",60,0)
DONE(FPIFN,XRF) ; return true if item charge (last) is already included
"RTN","IBEFURF",61,0)
 N IBX S IBX="" S XRF=$S($G(XRF)="":"FP",1:XRF) I +$G(FPIFN),$D(^TMP("IBRBF",$J,XRF,+FPIFN)) S IBX=1
"RTN","IBEFURF",62,0)
 Q IBX
"RTN","IBEFURF",63,0)
 ;
"RTN","IBEFURF",64,0)
SAVELN1(XRF,DATA) ; set charges found into array, ^TMP("IBRBF",$J,XRF) = DATA
"RTN","IBEFURF",65,0)
 S XRF=$S($G(XRF)="":"FP",1:XRF),^TMP("IBRBF",$J,XRF)=$G(DATA)
"RTN","IBEFURF",66,0)
 Q
"RTN","IBEFURF",67,0)
 ;
"RTN","IBEFURF",68,0)
SAVELN2(FPIFN,DATA,XRF) ; set charges found into array, ^TMP("IBRBF",$J,XRF,charge ifn) = DATA (from $$LN2)
"RTN","IBEFURF",69,0)
 I +$G(FPIFN),$D(^IB(+FPIFN,0)) S XRF=$S($G(XRF)="":"FP",1:XRF),^TMP("IBRBF",$J,XRF,+FPIFN)=$G(DATA)
"RTN","IBEFURF",70,0)
 Q
"RTN","IBEFURF",71,0)
 ;
"RTN","IBEFURF",72,0)
LN2(FPIFN) ; return data for a specific First Party Bill:
"RTN","IBEFURF",73,0)
 ; BILL FROM ^ BILL TO ^ CANCELLED? (1/0)^ AR BILL NUMBER ^ TOTAL CHARGE ^ ACTION TYPE (SHORT) ^ # DAYS ON HOLD
"RTN","IBEFURF",74,0)
 ; for rx's: FROM date is the (re)fill date in 52 and TO is the date entry added (release date)
"RTN","IBEFURF",75,0)
 ; also set # Days On Hold only if the bill is currently in On Hold status
"RTN","IBEFURF",76,0)
 N IBX,IB0,IB1 S IBX="",IB0=$G(^IB(+$G(FPIFN),0)) I IB0="" G LN2Q
"RTN","IBEFURF",77,0)
 S IB1=$G(^IB(+FPIFN,1))
"RTN","IBEFURF",78,0)
 ;
"RTN","IBEFURF",79,0)
 S $P(IBX,U,1)=$S(+$P(IB0,U,4)=52:$$RXDT(+FPIFN),+$P(IB0,U,14):+$P(IB0,U,14),1:+$P(IB1,U,2))\1
"RTN","IBEFURF",80,0)
 S $P(IBX,U,2)=$S(+$P(IB0,U,15):+$P(IB0,U,15),1:+$P(IB1,U,2))\1
"RTN","IBEFURF",81,0)
 S $P(IBX,U,3)=$$CANC(+FPIFN)
"RTN","IBEFURF",82,0)
 S $P(IBX,U,4)=$P(IB0,U,11)
"RTN","IBEFURF",83,0)
 S $P(IBX,U,5)=$P(IB0,U,7)
"RTN","IBEFURF",84,0)
 S $P(IBX,U,6)=$$ATAB($P(IB0,U,3))
"RTN","IBEFURF",85,0)
 S $P(IBX,U,7)=$$OHDT(+FPIFN)
"RTN","IBEFURF",86,0)
LN2Q Q IBX
"RTN","IBEFURF",87,0)
 ;
"RTN","IBEFURF",88,0)
 ; ========================================================================================
"RTN","IBEFURF",89,0)
 ; 
"RTN","IBEFURF",90,0)
 ; these procedures return First Party charge specific data and status
"RTN","IBEFURF",91,0)
 ;
"RTN","IBEFURF",92,0)
ATAB(AT) ; given an Action Type (ptr to 350.1), return a shortened/abbreviated form of Action Type (350.1,.01)
"RTN","IBEFURF",93,0)
 N IBX,IBY S IBX="",IBY=$P($G(^IBE(350.1,+$G(AT),0)),U,1) I IBY="" G ATABQ
"RTN","IBEFURF",94,0)
 I "IB DG PSO"'[$E(IBY,1,3) S IBX=IBY
"RTN","IBEFURF",95,0)
 I IBX="" S IBY=$P(IBY," ",2,999),IBY=$P(IBY," ",1,$L(IBY," ")-1) S IBX=IBY
"RTN","IBEFURF",96,0)
ATABQ Q IBX
"RTN","IBEFURF",97,0)
 ;
"RTN","IBEFURF",98,0)
CANC(FPIFN) ; given a First Party Charge (ptr to 350), return 1 if charge is Cancelled, "" otherwise
"RTN","IBEFURF",99,0)
 ; is cancelled if the Action Type (350,.03) Sequence Number (350.1,.05) is Cancel
"RTN","IBEFURF",100,0)
 ; or is cancelled if the Status (350,.05) is Cancelled (350.21,.05) (never passed to AR)
"RTN","IBEFURF",101,0)
 N IBX,IBY,IB0 S IBX="",IB0=$G(^IB(+$G(FPIFN),0)) I IB0="" G CANCQ
"RTN","IBEFURF",102,0)
 S IBY=$P($G(^IBE(350.1,+$P(IB0,U,3),0)),U,5) I +IBY=2 S IBX=1 ;  action is cancel
"RTN","IBEFURF",103,0)
 I 'IBX S IBY=$P($G(^IBE(350.21,+$P(IB0,U,5),0)),U,5) I +IBY S IBX=1 ;  status is cancel
"RTN","IBEFURF",104,0)
CANCQ Q IBX
"RTN","IBEFURF",105,0)
 ;
"RTN","IBEFURF",106,0)
RXDT(FPIFN) ; return fill date of rx being billed, Resulting From must be 52
"RTN","IBEFURF",107,0)
 ; fill date for Original = (52,22), for Refill = (52,52,.01)
"RTN","IBEFURF",108,0)
 N IBX,IBY,IB0,IBRX,IBRXN S IBX="",IB0=$G(^IB(+$G(FPIFN),0)) I IB0="" G RXDTQ
"RTN","IBEFURF",109,0)
 S IBY=$P(IB0,U,4) I +IBY=52 S IBRX=+$P(IBY,":",2),IBRXN=+$P(IBY,":",3) D  I +IBY S IBX=IBY\1
"RTN","IBEFURF",110,0)
 . S IBY=$S('IBRXN:$$FILE^IBRXUTL(IBRX,22),1:+$$SUBFILE^IBRXUTL(IBRX,IBRXN,52,.01))
"RTN","IBEFURF",111,0)
RXDTQ Q IBX
"RTN","IBEFURF",112,0)
 ;
"RTN","IBEFURF",113,0)
OHDT(FPIFN) ; return the bills # DAYS ON HOLD, if the bill is currently in the On Hold Status
"RTN","IBEFURF",114,0)
 N IBX,IBY,IB0 S IBX="",IB0=$G(^IB(+$G(FPIFN),0)) I IB0="" G OHDQ
"RTN","IBEFURF",115,0)
 S IBY=$P($G(^IBE(350.21,+$P(IB0,U,5),0)),U,6)
"RTN","IBEFURF",116,0)
 I +IBY S IBY=$P($G(^IB(+FPIFN,1)),U,6) I +IBY S IBX=$$FMDIFF^XLFDT(DT,IBY)
"RTN","IBEFURF",117,0)
OHDQ Q IBX
"RTN","IBJTRA1")
0^22^B11035559^B11034893
"RTN","IBJTRA1",1,0)
IBJTRA1 ;ALB/AAS,ARH - TPI CT INSURANCE COMMUNICATIONS BUILD ; 4/1/95
"RTN","IBJTRA1",2,0)
 ;;2.0;INTEGRATED BILLING;**39,91,347**;21-MAR-94;Build 24
"RTN","IBJTRA1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJTRA1",4,0)
 ;
"RTN","IBJTRA1",5,0)
 ; copyed from IBTRC with modifications to show reviews for multiple events
"RTN","IBJTRA1",6,0)
 ;
"RTN","IBJTRA1",7,0)
 ;
"RTN","IBJTRA1",8,0)
BLD ; -- Build list of Insurance contacts, including reviews, appeals, and denials
"RTN","IBJTRA1",9,0)
 K ^TMP("IBJTRA",$J),^TMP("IBJTRADX",$J),IBJTA1,IBJTA2
"RTN","IBJTRA1",10,0)
 N X,IBI,IBJ,J,IBTRC,IBTRCD,IBTRCD1,IBJTEVNT,IBCNT,IBTRN,IBTRND,IBETYP,IBBEG
"RTN","IBJTRA1",11,0)
 S VALMSG=$$MSG^IBTUTL3(DFN)
"RTN","IBJTRA1",12,0)
 S (IBTRC,IBCNT,VALMCNT)=0,IBI=""
"RTN","IBJTRA1",13,0)
 D IFNTRN^IBJTU5(IBIFN,.IBJTA1,.IBJTA2)
"RTN","IBJTRA1",14,0)
 I 'IBJTA1 S IBCNT=1 D SET1(" ") S IBCNT=2 D SET1("No Claims Tracking Entries.") G BLDQ
"RTN","IBJTRA1",15,0)
 S IBJ=0 F  S IBJ=$O(IBJTA2(IBJ)) Q:'IBJ  S IBTRN=IBJTA2(IBJ) D
"RTN","IBJTRA1",16,0)
 .S IBTRND=$G(^IBT(356,IBTRN,0))
"RTN","IBJTRA1",17,0)
 .S IBJTEVNT="    "_$$EVNT(IBTRND)
"RTN","IBJTRA1",18,0)
 .F  S IBI=$O(^IBT(356.2,"ATIDT",IBTRN,IBI)) Q:'IBI  S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"ATIDT",IBTRN,IBI,IBTRC)) Q:'IBTRC  D
"RTN","IBJTRA1",19,0)
 ..S IBTRCD=$G(^IBT(356.2,+IBTRC,0))
"RTN","IBJTRA1",20,0)
 ..S IBTRCD1=$G(^IBT(356.2,+IBTRC,1))
"RTN","IBJTRA1",21,0)
 ..Q:'+$P(IBTRCD,"^",19)  ;quit if inactive
"RTN","IBJTRA1",22,0)
 ..S IBCNT=IBCNT+1
"RTN","IBJTRA1",23,0)
 ..I IBJTEVNT'="" D SET(" ",0),SET(IBJTEVNT,0) S IBJTEVNT=""
"RTN","IBJTRA1",24,0)
 ..S IBETYP=$G(^IBE(356.11,+$P(IBTRCD,"^",4),0))
"RTN","IBJTRA1",25,0)
 ..W "."
"RTN","IBJTRA1",26,0)
 ..S X=""
"RTN","IBJTRA1",27,0)
 ..S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
"RTN","IBJTRA1",28,0)
 ..S X=$$SETFLD^VALM1($P($$DAT1^IBOUTL(+IBTRCD,"2P")," "),X,"DATE")
"RTN","IBJTRA1",29,0)
 ..S X=$$SETFLD^VALM1($P($G(^DIC(36,+$P(IBTRCD,"^",8),0)),"^"),X,"INS CO")
"RTN","IBJTRA1",30,0)
 ..S X=$$SETFLD^VALM1($$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11)),X,"ACTION")
"RTN","IBJTRA1",31,0)
 ..;
"RTN","IBJTRA1",32,0)
 ..S X=$$SETFLD^VALM1($P(IBETYP,"^",3),X,"TYPE")
"RTN","IBJTRA1",33,0)
 ..S X=$$SETFLD^VALM1($P(IBTRCD,"^",28),X,"PRE-CERT")
"RTN","IBJTRA1",34,0)
 ..I $P(IBTRCD,"^",13) S X=$$SETFLD^VALM1($J($$DAY^IBTUTL3($P(IBTRCD,"^",12),$P(IBTRCD,"^",13),IBTRN),3),X,"DAYS")
"RTN","IBJTRA1",35,0)
 ..I $P($G(^IBE(356.7,+$P(IBTRCD,"^",11),0)),"^",3)=20 S X=$$SETFLD^VALM1($J($$DAY^IBTUTL3($P(IBTRCD,"^",15),$P(IBTRCD,"^",16),IBTRN),3),X,"DAYS")
"RTN","IBJTRA1",36,0)
 ..I $P(IBTRCD1,"^",7)!($P(IBTRCD1,"^",8)) S X=$$SETFLD^VALM1("ALL",X,"DAYS")
"RTN","IBJTRA1",37,0)
 ..S X=$$SETFLD^VALM1($P(IBTRCD,"^",6),X,"CONTACT")
"RTN","IBJTRA1",38,0)
 ..S X=$$SETFLD^VALM1($P(IBTRCD,"^",7),X,"PHONE")
"RTN","IBJTRA1",39,0)
 ..S X=$$SETFLD^VALM1($P(IBTRCD,"^",9),X,"REF NO")
"RTN","IBJTRA1",40,0)
 ..I $P(IBETYP,"^",2)=60!($P(IBETYP,"^",2)=65) D APPEAL^IBTRC3
"RTN","IBJTRA1",41,0)
 ..D SET(X,1)
"RTN","IBJTRA1",42,0)
 I 'IBCNT S IBCNT=1 D SET1(" ") S IBCNT=2 D SET1("No Insurance Reviews for Episodes on this Bill.") G BLDQ
"RTN","IBJTRA1",43,0)
BLDQ K IBJTA1,IBJTA2
"RTN","IBJTRA1",44,0)
 Q
"RTN","IBJTRA1",45,0)
 ;
"RTN","IBJTRA1",46,0)
SET1(X) ; set array (no selection)
"RTN","IBJTRA1",47,0)
 S VALMCNT=VALMCNT+1
"RTN","IBJTRA1",48,0)
 S ^TMP("IBJTRA",$J,VALMCNT,0)=X
"RTN","IBJTRA1",49,0)
 Q
"RTN","IBJTRA1",50,0)
 ;
"RTN","IBJTRA1",51,0)
SET(X,Y) ; -- set arrays
"RTN","IBJTRA1",52,0)
 S VALMCNT=VALMCNT+1
"RTN","IBJTRA1",53,0)
 S ^TMP("IBJTRA",$J,VALMCNT,0)=X
"RTN","IBJTRA1",54,0)
 S ^TMP("IBJTRA",$J,"IDX",VALMCNT,IBCNT)=""
"RTN","IBJTRA1",55,0)
 I +$G(Y) S ^TMP("IBJTRADX",$J,IBCNT)=VALMCNT_"^"_IBTRC
"RTN","IBJTRA1",56,0)
 Q
"RTN","IBJTRA1",57,0)
 ;
"RTN","IBJTRA1",58,0)
EVNT(IBTRND) ; return line for display on event
"RTN","IBJTRA1",59,0)
 N X,Y,IBTYP S X="" I $G(IBTRND)="" G EVNTQ
"RTN","IBJTRA1",60,0)
 S IBTYP=+$P(IBTRND,U,18)
"RTN","IBJTRA1",61,0)
 S X=$$EXSET^IBJU1(IBTYP,356,.18)
"RTN","IBJTRA1",62,0)
 I IBTYP=2 S X=X_" of "_$P($G(^DIC(40.7,+$$SCE^IBSDU(+$P(IBTRND,U,4),3),0)),U,1)
"RTN","IBJTRA1",63,0)
 I IBTYP=3 S Y=+$P($G(^RMPR(660,+$P(IBTRND,U,9),0)),U,6),X=X_" of "_$$EXSET^IBJU1(Y,660,4)
"RTN","IBJTRA1",64,0)
 I IBTYP=4 S X=X_" of "_$$FILE^IBRXUTL(+$P(IBTRND,U,8),.01)
"RTN","IBJTRA1",65,0)
 S X=X_" on "_$$DAT1^IBOUTL($P(IBTRND,U,6),"2P")
"RTN","IBJTRA1",66,0)
EVNTQ Q X
"RTN","IBNCPBB")
0^39^B97718741^B87290144
"RTN","IBNCPBB",1,0)
IBNCPBB ;DALOI/AAT - ECME BACKBILLING ;24-JUN-2003
"RTN","IBNCPBB",2,0)
 ;;2.0;INTEGRATED BILLING;**276,347**;21-MAR-94;Build 24
"RTN","IBNCPBB",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBNCPBB",4,0)
 ;
"RTN","IBNCPBB",5,0)
 ;
"RTN","IBNCPBB",6,0)
 Q
"RTN","IBNCPBB",7,0)
EN ;[IB GENERATE ECME RX BILLS] entry
"RTN","IBNCPBB",8,0)
 N IBMOD1,IBMOD3,IBPAT,IBRX,IBBDT,IBEDT,IBSEL,IBREF,IBPAUSE
"RTN","IBNCPBB",9,0)
 S IBREF=$NA(^TMP($J,"IBNCPBB"))
"RTN","IBNCPBB",10,0)
 S IBPAUSE=1
"RTN","IBNCPBB",11,0)
 K @IBREF D
"RTN","IBNCPBB",12,0)
 . N IBEXIT
"RTN","IBNCPBB",13,0)
 . S IBEXIT=0
"RTN","IBNCPBB",14,0)
 . D MODE I IBEXIT Q
"RTN","IBNCPBB",15,0)
 . I IBMOD1="P" D SELECT I IBEXIT Q
"RTN","IBNCPBB",16,0)
 . I IBMOD1="R" D SELECT2 I IBEXIT Q
"RTN","IBNCPBB",17,0)
 . D CONFIRM I IBEXIT Q
"RTN","IBNCPBB",18,0)
 . D PROCESS I IBEXIT Q
"RTN","IBNCPBB",19,0)
 I IBPAUSE W ! D PAUSE()
"RTN","IBNCPBB",20,0)
 K @IBREF
"RTN","IBNCPBB",21,0)
 Q
"RTN","IBNCPBB",22,0)
 ;
"RTN","IBNCPBB",23,0)
CT(IBTRN) ;CT ENTRY
"RTN","IBNCPBB",24,0)
 N IBZ,IBRX,IBRXN,IBFL,IBEXIT,IBPAT,IBRDT,IBFDT,IBRES,IBBIL,IBBN,IBQ,IBSCRES
"RTN","IBNCPBB",25,0)
 S IBQ=0
"RTN","IBNCPBB",26,0)
 D FULL^VALM1
"RTN","IBNCPBB",27,0)
 W !!,"This option sends electronic Pharmacy Claims to the Payer"
"RTN","IBNCPBB",28,0)
 S VALMBCK="R"
"RTN","IBNCPBB",29,0)
 S IBZ=$G(^IBT(356,IBTRN,0)) Q:IBZ=""
"RTN","IBNCPBB",30,0)
 S IBRX=$P(IBZ,U,8),IBFL=$P(IBZ,U,10)
"RTN","IBNCPBB",31,0)
 I 'IBRX D  Q
"RTN","IBNCPBB",32,0)
 . W !!,"This is not a Pharmacy Claims Tracking record",*7,!
"RTN","IBNCPBB",33,0)
 . D PAUSE("Cannot submit to ECME")
"RTN","IBNCPBB",34,0)
 ;
"RTN","IBNCPBB",35,0)
 ;Release date:
"RTN","IBNCPBB",36,0)
 I IBFL=0 S IBRDT=$$FILE^IBRXUTL(IBRX,31)
"RTN","IBNCPBB",37,0)
 E  S IBRDT=$$SUBFILE^IBRXUTL(IBRX,IBFL,52,17)
"RTN","IBNCPBB",38,0)
 I 'IBRDT D  Q
"RTN","IBNCPBB",39,0)
 . W !!,"The Prescription is not released.",!
"RTN","IBNCPBB",40,0)
 . D PAUSE("Cannot submit to ECME")
"RTN","IBNCPBB",41,0)
 ;
"RTN","IBNCPBB",42,0)
 S IBPAT=$P(IBZ,U,2)
"RTN","IBNCPBB",43,0)
 I $$SC($P(IBZ,U,19)) D  Q:IBQ
"RTN","IBNCPBB",44,0)
 . N DIR,DIE,DA,DR,Y
"RTN","IBNCPBB",45,0)
 . W !!,"The Rx is marked 'non-billable' in CT: ",$P($G(^IBE(356.8,+$P(IBZ,U,19),0)),U)
"RTN","IBNCPBB",46,0)
 . W !,"If you continue, the NON-BILLABLE REASON will be deleted.",!
"RTN","IBNCPBB",47,0)
 . S DIR(0)="Y",DIR("A")="Are you sure you want to bill this episode"
"RTN","IBNCPBB",48,0)
 . S DIR("B")="NO"
"RTN","IBNCPBB",49,0)
 . S DIR("?")="If you want to bill this Rx, enter 'Yes' - otherwise, enter 'No'"
"RTN","IBNCPBB",50,0)
 . W ! D ^DIR K DIR
"RTN","IBNCPBB",51,0)
 . I 'Y S IBQ=1 Q
"RTN","IBNCPBB",52,0)
 . S DIE="^IBT(356,",DA=IBTRN,DR=".19///@" D ^DIE ;clean NB reason
"RTN","IBNCPBB",53,0)
 . S IBSCRES(IBRX,IBFL)=1 ; sc resolved flag
"RTN","IBNCPBB",54,0)
 ;
"RTN","IBNCPBB",55,0)
 S IBZ=$G(^IBT(356,IBTRN,0)) ; refresh
"RTN","IBNCPBB",56,0)
 I $P(IBZ,U,19) D  Q
"RTN","IBNCPBB",57,0)
 . W !!,"The Prescription is marked 'non-billable' in Claims Tracking",*7
"RTN","IBNCPBB",58,0)
 . W !,"Reason non-billable: ",$P($G(^IBE(356.8,+$P(IBZ,U,19),0),"Unknown"),U),!
"RTN","IBNCPBB",59,0)
 . D PAUSE("Cannot submit to ECME")
"RTN","IBNCPBB",60,0)
 ; Fill/Refill Date:
"RTN","IBNCPBB",61,0)
 S IBFDT=$S('IBFL:$$FILE^IBRXUTL(IBRX,22),1:$$SUBFILE^IBRXUTL(IBRX,IBFL,52,.01))
"RTN","IBNCPBB",62,0)
 ; Is the patient billable at the released date?
"RTN","IBNCPBB",63,0)
 S IBRES=$$ECMEBIL^IBNCPDPU(IBPAT,IBFDT)
"RTN","IBNCPBB",64,0)
 I 'IBRES D  Q
"RTN","IBNCPBB",65,0)
 . W !!,"The patient is not ECME Billable at the ",$S(IBFL:"re",1:""),"fill date."
"RTN","IBNCPBB",66,0)
 . W !,"Reason: ",$P(IBRES,U,2,255),!
"RTN","IBNCPBB",67,0)
 . D PAUSE("Cannot submit to ECME")
"RTN","IBNCPBB",68,0)
 ;
"RTN","IBNCPBB",69,0)
 S IBRXN=$$FILE^IBRXUTL(IBRX,.01)
"RTN","IBNCPBB",70,0)
 S IBBIL=$$BILL(IBRXN,IBRDT)
"RTN","IBNCPBB",71,0)
 I IBBIL,'$P($G(^DGCR(399,IBBIL,"S")),U,16) D  Q
"RTN","IBNCPBB",72,0)
 . W !!,"Rx# ",IBRXN," was previously billed."
"RTN","IBNCPBB",73,0)
 . W !,"Please manually cancel the bill# ",$P($G(^DGCR(399,IBBIL,0)),U)," before submitting claim to ECME.",!
"RTN","IBNCPBB",74,0)
 . D PAUSE("Cannot submit to ECME")
"RTN","IBNCPBB",75,0)
 I IBBIL W !,"The bill# ",$P($G(^DGCR(399,IBBIL,0)),U)," has been cancelled.",!
"RTN","IBNCPBB",76,0)
 ;
"RTN","IBNCPBB",77,0)
 D CONFRX(IBRXN) Q:$G(IBEXIT)
"RTN","IBNCPBB",78,0)
 ;
"RTN","IBNCPBB",79,0)
 W !!,"Submitting Rx# ",IBRXN W:IBFL ", Refill# ",IBFL W " ..."
"RTN","IBNCPBB",80,0)
 S IBRES=$$SUBMIT^IBNCPDPU(IBRX,IBFL) W !,"  ",$S(+IBRES=0:"S",1:"Not s")_"ent through ECME."
"RTN","IBNCPBB",81,0)
 I +IBRES'=0 W !,"  *** ECME returned status: ",$$STAT(IBRES),!
"RTN","IBNCPBB",82,0)
 I +IBRES=0 W !!,"The Rx have been submitted to ECME for electronic billing",!
"RTN","IBNCPBB",83,0)
 D PAUSE()
"RTN","IBNCPBB",84,0)
 Q
"RTN","IBNCPBB",85,0)
 ;
"RTN","IBNCPBB",86,0)
MODE ;
"RTN","IBNCPBB",87,0)
 ; IBMOD1: "P"-Single Patient, "R"-Single Rx
"RTN","IBNCPBB",88,0)
 ; IBMOD3 (if IBMOD1="P"): "U"-Unbilled, "A"-All Rx
"RTN","IBNCPBB",89,0)
 ; IBPAT (if IBMOD1="P"): Patient's DFN
"RTN","IBNCPBB",90,0)
 ; IBBDT,IBEDT (if IBMOD1="P"): From/To dates inclusive
"RTN","IBNCPBB",91,0)
 N DIR,DIC,DIRUT,DUOUT,Y,PSOFILE
"RTN","IBNCPBB",92,0)
 S (IBMOD1,IBMOD3)=""
"RTN","IBNCPBB",93,0)
 S DIR(0)="S^P:SINGLE (P)ATIENT;R:SINGLE (R)X"
"RTN","IBNCPBB",94,0)
 S DIR("A")="SINGLE (P)ATIENT, SINGLE (R)X"
"RTN","IBNCPBB",95,0)
 S DIR("B")="P"
"RTN","IBNCPBB",96,0)
 D ^DIR K DIR I $D(DIRUT) S IBEXIT=1,IBPAUSE=0 Q
"RTN","IBNCPBB",97,0)
 S IBMOD1=Y
"RTN","IBNCPBB",98,0)
 ; Enter Rx
"RTN","IBNCPBB",99,0)
 I IBMOD1="R" W ! S PSOFILE=52,DIC="^PSRX(",DIC(0)="AEQMN" D DIC^PSODI(PSOFILE,.DIC) S:$D(DUOUT) IBEXIT=1 S IBRX=$S(Y>0:+Y,1:0) S:'IBRX IBEXIT=1,IBPAUSE=0
"RTN","IBNCPBB",100,0)
 K PSODIY
"RTN","IBNCPBB",101,0)
 I IBMOD1="R" Q
"RTN","IBNCPBB",102,0)
 ;
"RTN","IBNCPBB",103,0)
 I IBMOD1'="P" W !,"???" S IBEXIT=1 Q  ; Invalid mode
"RTN","IBNCPBB",104,0)
 ;Enter Patient
"RTN","IBNCPBB",105,0)
 S DIC="^DPT(",DIC(0)="AEQMN" D ^DIC S:$D(DUOUT) IBEXIT=1 S IBPAT=$S(Y>0:+Y,1:0) S:'IBPAT IBEXIT=1,IBPAUSE=0
"RTN","IBNCPBB",106,0)
 Q:IBEXIT
"RTN","IBNCPBB",107,0)
 I '$$ECMEBIL^IBNCPDPU(IBPAT,DT) W *7,!!,"Warning! The patient is currently not ECME billable!"
"RTN","IBNCPBB",108,0)
 ;
"RTN","IBNCPBB",109,0)
 D DATE I IBEXIT S IBPAUSE=0 Q
"RTN","IBNCPBB",110,0)
 ;
"RTN","IBNCPBB",111,0)
 S DIR(0)="S^U:UNBILLED;A:ALL RX"
"RTN","IBNCPBB",112,0)
 S DIR("A")="(U)NBILLED, (A)LL RX"
"RTN","IBNCPBB",113,0)
 S DIR("B")="U"
"RTN","IBNCPBB",114,0)
 D ^DIR K DIR I $D(DIRUT) S IBEXIT=1,IBPAUSE=0 Q
"RTN","IBNCPBB",115,0)
 S IBMOD3=Y
"RTN","IBNCPBB",116,0)
 Q
"RTN","IBNCPBB",117,0)
 ;
"RTN","IBNCPBB",118,0)
 ;begin/end date
"RTN","IBNCPBB",119,0)
DATE ;
"RTN","IBNCPBB",120,0)
 N Y,%DT
"RTN","IBNCPBB",121,0)
 S (IBBDT,IBEDT)=DT
"RTN","IBNCPBB",122,0)
 W !
"RTN","IBNCPBB",123,0)
 S %DT="AEX"
"RTN","IBNCPBB",124,0)
 S %DT("A")="START WITH DATE: ",%DT("B")="TODAY"
"RTN","IBNCPBB",125,0)
 D ^%DT K %DT
"RTN","IBNCPBB",126,0)
 I Y'>0 S IBEXIT=1 Q
"RTN","IBNCPBB",127,0)
 S IBBDT=+Y
"RTN","IBNCPBB",128,0)
 S %DT="AEX"
"RTN","IBNCPBB",129,0)
 S %DT("A")="GO TO DATE: ",%DT("B")="TODAY" ;$$DAT2^IBOUTL(IBBDT)
"RTN","IBNCPBB",130,0)
 D ^%DT K %DT
"RTN","IBNCPBB",131,0)
 I Y'>0 S IBEXIT=1 Q
"RTN","IBNCPBB",132,0)
 S IBEDT=+Y
"RTN","IBNCPBB",133,0)
 Q
"RTN","IBNCPBB",134,0)
 ;
"RTN","IBNCPBB",135,0)
SELECT ;Select from patient's list
"RTN","IBNCPBB",136,0)
 ; (IBPAT,IBBDT,IBEDT,IBMOD3)
"RTN","IBNCPBB",137,0)
 N IBD,IBRX,IBZ,IBDATA,IBCNT,Y,PDFN,LIST,LIST2,NODE,RXNUMEXT,LIST,IBDATE,CNT1,CNT2,RFNUM
"RTN","IBNCPBB",138,0)
 S CNT1=0,CNT2=0,IBCNT=0
"RTN","IBNCPBB",139,0)
 S LIST="IBRXSELARR"
"RTN","IBNCPBB",140,0)
 S NODE=2
"RTN","IBNCPBB",141,0)
 D RX^PSO52API(IBPAT,LIST,,,NODE,,)
"RTN","IBNCPBB",142,0)
 S RXNUMEXT=0 F  S RXNUMEXT=$O(^TMP($J,LIST,"B",RXNUMEXT)) Q:'RXNUMEXT  D
"RTN","IBNCPBB",143,0)
 . S IBRX=0 F  S IBRX=$O(^TMP($J,LIST,"B",RXNUMEXT,IBRX)) Q:'IBRX  D
"RTN","IBNCPBB",144,0)
 .. S IBDATE=$P(^TMP($J,LIST,IBPAT,IBRX,31),"^",1)
"RTN","IBNCPBB",145,0)
 .. I (IBDATE>IBBDT)&(IBDATE<IBEDT) D
"RTN","IBNCPBB",146,0)
 ... S IBZ=$$RXZERO^IBRXUTL(IBPAT,IBRX) Q:IBZ=""
"RTN","IBNCPBB",147,0)
 ... I $P(IBZ,U,2)'=IBPAT Q
"RTN","IBNCPBB",148,0)
 ... I '$$FILE^IBRXUTL(IBRX,31) Q  ; not released
"RTN","IBNCPBB",149,0)
 ... S IBDATA=$$RXDATA(IBRX,0)
"RTN","IBNCPBB",150,0)
 ... I ('$P(IBDATA,U,6))!(IBMOD3="A") S IBCNT=IBCNT+1,@IBREF@(IBCNT)=IBDATA
"RTN","IBNCPBB",151,0)
 ... S LIST2="IBCPBBRF"
"RTN","IBNCPBB",152,0)
 ... S NODE="R"
"RTN","IBNCPBB",153,0)
 ... D RX^PSO52API(IBPAT,LIST2,IBRX,,NODE,,)
"RTN","IBNCPBB",154,0)
 ... S RFNUM=0 F  S RFNUM=$O(^TMP($J,LIST2,IBPAT,IBRX,"RF",RFNUM)) Q:RFNUM'>0  D:$$SUBFILE^IBRXUTL(IBRX,RFNUM,52,17)
"RTN","IBNCPBB",155,0)
 .... S IBDATA=$$RXDATA(IBRX,RFNUM)
"RTN","IBNCPBB",156,0)
 .... I $P(IBDATA,U,6),IBMOD3'="A" Q  ; unbilled only
"RTN","IBNCPBB",157,0)
 .... S IBCNT=IBCNT+1,@IBREF@(IBCNT)=IBDATA
"RTN","IBNCPBB",158,0)
 ... K ^TMP($J,LIST2)
"RTN","IBNCPBB",159,0)
 K ^TMP($J,LIST)
"RTN","IBNCPBB",160,0)
 D MKCHOICE
"RTN","IBNCPBB",161,0)
 Q
"RTN","IBNCPBB",162,0)
SELECT2 ;Select from Rx list
"RTN","IBNCPBB",163,0)
 ; (IBRX)
"RTN","IBNCPBB",164,0)
 N IBCNT,Y,PDFN,RIFN,LST
"RTN","IBNCPBB",165,0)
 S RIFN=0
"RTN","IBNCPBB",166,0)
 W ! S IBPAUSE=1
"RTN","IBNCPBB",167,0)
 S PDFN=$$FILE^IBRXUTL(IBRX,2)
"RTN","IBNCPBB",168,0)
 S LST="SEL2LST"
"RTN","IBNCPBB",169,0)
 I $$RXZERO^IBRXUTL(PDFN,IBRX)="" W !,"The Rx does not exist. Please try again." S IBEXIT=1 Q
"RTN","IBNCPBB",170,0)
 I $$FILE^IBRXUTL(IBRX,31)="" W !,"The Rx has not been released. Please try again." S IBEXIT=1 Q
"RTN","IBNCPBB",171,0)
 S IBCNT=1,@IBREF@(IBCNT)=$$RXDATA(IBRX,0)
"RTN","IBNCPBB",172,0)
 D RX^PSO52API(PDFN,LST,IBRX,,"R",,)
"RTN","IBNCPBB",173,0)
 S RIFN=0 F  S RIFN=$O(^TMP($J,LST,PDFN,IBRX,"RF",RIFN)) Q:RIFN'>0  D:$$SUBFILE^IBRXUTL(IBRX,RIFN,52,17)
"RTN","IBNCPBB",174,0)
 .S IBCNT=IBCNT+1,@IBREF@(IBCNT)=$$RXDATA(IBRX,RIFN)
"RTN","IBNCPBB",175,0)
 K ^TMP($J,LST)
"RTN","IBNCPBB",176,0)
 D MKCHOICE
"RTN","IBNCPBB",177,0)
 Q
"RTN","IBNCPBB",178,0)
 ;
"RTN","IBNCPBB",179,0)
MKCHOICE ;
"RTN","IBNCPBB",180,0)
 N Y
"RTN","IBNCPBB",181,0)
 W !
"RTN","IBNCPBB",182,0)
 S Y=0 F  S Y=$O(@IBREF@(Y)) Q:'Y  D DISP(Y)
"RTN","IBNCPBB",183,0)
 ;
"RTN","IBNCPBB",184,0)
 I $O(@IBREF@(0))="" S IBEXIT=1 W !!," No Rxs meet the entered criteria. Please try again." Q
"RTN","IBNCPBB",185,0)
 I $O(@IBREF@(""),-1)=1 S IBSEL(1)="" Q  ; one item only
"RTN","IBNCPBB",186,0)
 F  W !!,"Enter Line Item(s) to submit to ECME or (A)LL :" R IBSEL:DTIME S:'$T IBEXIT=1 Q:IBEXIT  Q:IBSEL'["?"  D
"RTN","IBNCPBB",187,0)
 . W !?10,"Enter number(s) or item range(s) separated by comma."
"RTN","IBNCPBB",188,0)
 . W !?10,"Example: 1,3,7-11"
"RTN","IBNCPBB",189,0)
 Q:IBEXIT
"RTN","IBNCPBB",190,0)
 I IBSEL'="",$TR(IBSEL,"al","AL")=$E("ALL",1,$L(IBSEL)),$L(IBSEL)<3 W $E("ALL",$L(IBSEL)+1,3) S IBSEL="ALL"
"RTN","IBNCPBB",191,0)
 I IBSEL="" S IBEXIT=1 W " Nothing selected" Q
"RTN","IBNCPBB",192,0)
 I IBSEL="^" S IBEXIT=1 W " Cancelled" Q
"RTN","IBNCPBB",193,0)
 ;Collect the required into the IBSEL(i) local array
"RTN","IBNCPBB",194,0)
 D PARSE(.IBSEL)
"RTN","IBNCPBB",195,0)
 I $O(IBSEL(0))="" S IBEXIT=1 W !!,"No item(s) match the selection." Q
"RTN","IBNCPBB",196,0)
 Q
"RTN","IBNCPBB",197,0)
 ;
"RTN","IBNCPBB",198,0)
CONFIRM ;
"RTN","IBNCPBB",199,0)
 N DIR,Y
"RTN","IBNCPBB",200,0)
 W !
"RTN","IBNCPBB",201,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Submit the selected RX(s) to ECME for electronic billing"
"RTN","IBNCPBB",202,0)
 D ^DIR I Y'=1 S IBEXIT=1
"RTN","IBNCPBB",203,0)
 Q
"RTN","IBNCPBB",204,0)
 ;
"RTN","IBNCPBB",205,0)
CONFRX(IBRX) ;
"RTN","IBNCPBB",206,0)
 N DIR,Y
"RTN","IBNCPBB",207,0)
 W !
"RTN","IBNCPBB",208,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Submit the Rx# "_IBRX_" to ECME for electronic billing"
"RTN","IBNCPBB",209,0)
 D ^DIR I Y'=1 S IBEXIT=1
"RTN","IBNCPBB",210,0)
 Q
"RTN","IBNCPBB",211,0)
 ;
"RTN","IBNCPBB",212,0)
STAT(X) ;
"RTN","IBNCPBB",213,0)
 I +X<6 Q $P(X,"^",2)
"RTN","IBNCPBB",214,0)
 Q "Unknown Status"
"RTN","IBNCPBB",215,0)
 ;
"RTN","IBNCPBB",216,0)
PROCESS ;
"RTN","IBNCPBB",217,0)
 N RES,IBY,IBD,IBRX,IBFIL,IBERR,IBBIL
"RTN","IBNCPBB",218,0)
 S IBERR=0
"RTN","IBNCPBB",219,0)
 S IBY=0 F  S IBY=$O(IBSEL(IBY)) Q:'IBY  D
"RTN","IBNCPBB",220,0)
 . S IBD=$G(@IBREF@(IBY)) Q:IBD=""
"RTN","IBNCPBB",221,0)
 . S IBRX=$P(IBD,U),IBFIL=+$P(IBD,U,3),IBBIL=$P(IBD,U,6)
"RTN","IBNCPBB",222,0)
 . W !,"Submitting Rx# ",$P(IBD,U,2) W:IBFIL "Refill# ",IBFIL W:'IBFIL " (original fill)" W " ..."
"RTN","IBNCPBB",223,0)
 . I IBBIL,'$P($G(^DGCR(399,IBBIL,"S")),U,16) D  S IBERR=IBERR+1 Q
"RTN","IBNCPBB",224,0)
 .. W !," *** Rx# ",$P(IBD,U,2)," was previously billed."
"RTN","IBNCPBB",225,0)
 .. W !," Please cancel the Bill No ",$P($G(^DGCR(399,IBBIL,0)),U)," before submitting the claim"
"RTN","IBNCPBB",226,0)
 . S RES=$$SUBMIT^IBNCPDPU(IBRX,IBFIL) W "  ",$S(+RES=0:"Sent through ECME",1:"Not sent")
"RTN","IBNCPBB",227,0)
 . I +RES'=0 W !?5,"*** ECME returned status: ",$$STAT(RES) S IBERR=IBERR+1
"RTN","IBNCPBB",228,0)
 I 'IBERR W !!,"The selected Rx(s) have been submitted to ECME",!,"for electronic billing"
"RTN","IBNCPBB",229,0)
 Q
"RTN","IBNCPBB",230,0)
 ;
"RTN","IBNCPBB",231,0)
BILL(IBRXN,IBDT) ;Bill IEN (if any) or null
"RTN","IBNCPBB",232,0)
 N RES,X,IBZ
"RTN","IBNCPBB",233,0)
 S IBDT=$P(IBDT,".")
"RTN","IBNCPBB",234,0)
 S RES=""
"RTN","IBNCPBB",235,0)
 S X="" F  S X=$O(^IBA(362.4,"B",IBRXN,X),-1) Q:X=""  D:X  Q:RES
"RTN","IBNCPBB",236,0)
 . S IBZ=$G(^IBA(362.4,X,0))
"RTN","IBNCPBB",237,0)
 . I $P($P(IBZ,U,3),".")=IBDT,$P(IBZ,U,2) S RES=+$P(IBZ,U,2)
"RTN","IBNCPBB",238,0)
 Q RES
"RTN","IBNCPBB",239,0)
 ;
"RTN","IBNCPBB",240,0)
 ;
"RTN","IBNCPBB",241,0)
RXDATA(IBRX,IBFIL) ;
"RTN","IBNCPBB",242,0)
 ;RxIEN^Rx#^Fill#^RelDate^DrugIEN^BillIEN
"RTN","IBNCPBB",243,0)
 N IBRXN,IBDT,IBDRUG,IBBIL,DATRET
"RTN","IBNCPBB",244,0)
 S IBRXN=$$FILE^IBRXUTL(IBRX,.01)
"RTN","IBNCPBB",245,0)
 I IBFIL=0 S IBDT=$$FILE^IBRXUTL(IBRX,22)
"RTN","IBNCPBB",246,0)
 E  S IBDT=$$SUBFILE^IBRXUTL(IBRX,IBFIL,52,.01)
"RTN","IBNCPBB",247,0)
 S IBDT=$P(IBDT,".")
"RTN","IBNCPBB",248,0)
 S IBDRUG=$$FILE^IBRXUTL(IBRX,6)
"RTN","IBNCPBB",249,0)
 S IBBIL=$$BILL(IBRXN,IBDT)
"RTN","IBNCPBB",250,0)
 S DATRET=IBRX_"^"_IBRXN_"^"_IBFIL_"^"_IBDT_"^"_IBDRUG_"^"_IBBIL
"RTN","IBNCPBB",251,0)
 Q DATRET
"RTN","IBNCPBB",252,0)
 ;
"RTN","IBNCPBB",253,0)
DISP(IBITEM) ;
"RTN","IBNCPBB",254,0)
 N IBD,IBBILN,IBDRUG,IBBIL
"RTN","IBNCPBB",255,0)
 S IBD=$G(@IBREF@(IBITEM)) Q:IBD=""
"RTN","IBNCPBB",256,0)
 W !,IBITEM," ",?4,$P(IBD,U,2)," ",?15,$P(IBD,U,3)," ",?20,$$DAT2^IBOUTL($P(IBD,U,4))," "
"RTN","IBNCPBB",257,0)
 W ?32,$E($$DRUG^IBRXUTL1(+$P(IBD,U,5)),1,30)
"RTN","IBNCPBB",258,0)
 S IBBIL=$P(IBD,U,6)
"RTN","IBNCPBB",259,0)
 I IBBIL W ?64,$P($G(^DGCR(399,+IBBIL,0)),U) I $P($G(^DGCR(399,IBBIL,"S")),U,16) W "(canc)"
"RTN","IBNCPBB",260,0)
 Q
"RTN","IBNCPBB",261,0)
 ;
"RTN","IBNCPBB",262,0)
PARSE(X) ;
"RTN","IBNCPBB",263,0)
 N I,J,N
"RTN","IBNCPBB",264,0)
 S X=$TR(X," ")
"RTN","IBNCPBB",265,0)
 S X=$TR(X,";",",")
"RTN","IBNCPBB",266,0)
 I $TR(IBSEL,"al","AL")="ALL" D  Q
"RTN","IBNCPBB",267,0)
 . F I=1:1 Q:'$D(@IBREF@(I))  S IBSEL(I)=""
"RTN","IBNCPBB",268,0)
 F I=1:1:$L(X,",") S N=$P(X,",",I) D:N'=""
"RTN","IBNCPBB",269,0)
 . I N'["-" D:N  Q
"RTN","IBNCPBB",270,0)
 . . I $D(@IBREF@(N)) S X(N)=""
"RTN","IBNCPBB",271,0)
 . ; Processing range
"RTN","IBNCPBB",272,0)
 . N N1,N2
"RTN","IBNCPBB",273,0)
 . S N1=+$P(N,"-",1),N2=+$P(N,"-",2)
"RTN","IBNCPBB",274,0)
 . F J=N1:$S(N2<N1:-1,1:1):N2 I $D(@IBREF@(J)) S X(J)=""
"RTN","IBNCPBB",275,0)
 Q
"RTN","IBNCPBB",276,0)
 ;
"RTN","IBNCPBB",277,0)
PAUSE(MESSAGE) ;
"RTN","IBNCPBB",278,0)
 W !
"RTN","IBNCPBB",279,0)
 I $G(MESSAGE)'="" W MESSAGE,". "
"RTN","IBNCPBB",280,0)
 W "Press RETURN to continue: "
"RTN","IBNCPBB",281,0)
 R %:DTIME
"RTN","IBNCPBB",282,0)
 Q
"RTN","IBNCPBB",283,0)
 ;
"RTN","IBNCPBB",284,0)
SC(IEN) ;Service connected
"RTN","IBNCPBB",285,0)
 N IBT
"RTN","IBNCPBB",286,0)
 I 'IEN Q 0
"RTN","IBNCPBB",287,0)
 S IBT=$P($G(^IBE(356.8,IEN,0)),U)
"RTN","IBNCPBB",288,0)
 I IBT="NEEDS SC DETERMINATION" Q 1
"RTN","IBNCPBB",289,0)
 I IBT="OTHER" Q 1
"RTN","IBNCPBB",290,0)
 ;
"RTN","IBNCPBB",291,0)
 Q 0
"RTN","IBNCPDP2")
0^40^B33215225^B33216469
"RTN","IBNCPDP2",1,0)
IBNCPDP2 ;OAK/ELZ - PROCESSING FOR ECME RESP ;20-JUN-2003
"RTN","IBNCPDP2",2,0)
 ;;2.0;INTEGRATED BILLING;**223,276,342,347**;21-MAR-94;Build 24
"RTN","IBNCPDP2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBNCPDP2",4,0)
 ;
"RTN","IBNCPDP2",5,0)
 ;NCPDP PHASE III
"RTN","IBNCPDP2",6,0)
 Q
"RTN","IBNCPDP2",7,0)
 ;
"RTN","IBNCPDP2",8,0)
ECME(DFN,IBD) ; function called by STORESP^IBNCPDP
"RTN","IBNCPDP2",9,0)
 ; input - DFN - patient IEN for the prescription
"RTN","IBNCPDP2",10,0)
 ;         IBD array passed in by reference
"RTN","IBNCPDP2",11,0)
 ;      The IBD array is passed to various subroutines depending
"RTN","IBNCPDP2",12,0)
 ;      on the ePharmacy event as evaluated by IBD("STATUS")
"RTN","IBNCPDP2",13,0)
 I IBD("STATUS")="PAID" Q $$BILL(DFN,.IBD)
"RTN","IBNCPDP2",14,0)
 I IBD("STATUS")="REVERSED" Q $$REVERSE^IBNCPDP3(DFN,.IBD)
"RTN","IBNCPDP2",15,0)
 I IBD("STATUS")="CLOSED" Q $$CLOSE^IBNCPDP4(DFN,.IBD)
"RTN","IBNCPDP2",16,0)
 I IBD("STATUS")="RELEASED" Q $$RELEASE^IBNCPDP4(DFN,.IBD)
"RTN","IBNCPDP2",17,0)
 I IBD("STATUS")="SUBMITTED" Q $$SUBMIT^IBNCPDP4(DFN,.IBD)
"RTN","IBNCPDP2",18,0)
 I IBD("STATUS")="REOPEN" Q $$REOPEN^IBNCPDP4(DFN,.IBD)
"RTN","IBNCPDP2",19,0)
 D LOG("UNKNOWN")
"RTN","IBNCPDP2",20,0)
 Q "0^Cannot determine ECME event status"
"RTN","IBNCPDP2",21,0)
 ;
"RTN","IBNCPDP2",22,0)
MATCH(BCID) ;
"RTN","IBNCPDP2",23,0)
 N IBX,IBHAVE
"RTN","IBNCPDP2",24,0)
 S IBX=0,IBHAVE=0 F  S IBX=$O(^DGCR(399,"AG",BCID,IBX)) Q:'IBX  S IBHAVE=1 I '$P($G(^DGCR(399,IBX,"S")),U,16) Q
"RTN","IBNCPDP2",25,0)
 I 'IBX,IBHAVE Q ""
"RTN","IBNCPDP2",26,0)
 Q +IBX
"RTN","IBNCPDP2",27,0)
 ;
"RTN","IBNCPDP2",28,0)
 ;
"RTN","IBNCPDP2",29,0)
BILL(DFN,IBD) ; create fi bill
"RTN","IBNCPDP2",30,0)
 N IBRVCD,IBBS,IBUNITS,IBCPT,IBDIV,IBAA,IBTYPE,IBITEM,IBAMT,IBY,IBSERV,IBFAC,IBSITE,IBDRX,IB,IBCDFN,IBINS,IBIDS,IBIFN,IBDFN,PRCASV,PRCAERR,IBADT,IBRXN,IBFIL,IBTRKRN,DIE,DA,DR,IBRES,IBLOCK,IBLDT,IBNOW,IBDUZ,RCDUZ,IBPREV,IBQUERY,IBPAID,IBACT
"RTN","IBNCPDP2",31,0)
 ;
"RTN","IBNCPDP2",32,0)
 S IBDUZ=.5 ;POSTMASTER
"RTN","IBNCPDP2",33,0)
 ;I $G(IBD("FILLED BY")),$D(^VA(200,+IBD("FILLED BY"))) S IBDUZ=+IBD("FILLED BY")
"RTN","IBNCPDP2",34,0)
 S RCDUZ=IBDUZ
"RTN","IBNCPDP2",35,0)
 ;
"RTN","IBNCPDP2",36,0)
 S IBY=1,IBLOCK=0
"RTN","IBNCPDP2",37,0)
 I 'DFN S IBY="0^Missing DFN" G BILLQ
"RTN","IBNCPDP2",38,0)
 S IBAMT=+$G(IBD("BILLED")) ;FI portion of charge
"RTN","IBNCPDP2",39,0)
 I 'IBAMT S IBY="-1^Zero amount billed" G BILLQ
"RTN","IBNCPDP2",40,0)
 S IBADT=+$G(IBD("FILL DATE"),DT)
"RTN","IBNCPDP2",41,0)
 S IBRXN=+$G(IBD("PRESCRIPTION")) I 'IBRXN S IBY="0^Missing Rx IEN" G BILLQ
"RTN","IBNCPDP2",42,0)
 S IBFIL=+$G(IBD("FILL NUMBER"),-1) I IBFIL<0 S IBY="0^No fill number" G BILLQ
"RTN","IBNCPDP2",43,0)
 S IBDIV=+$G(IBD("DIVISION"))
"RTN","IBNCPDP2",44,0)
 I '$L($G(IBD("CLAIMID"))) S IBY="-1^Missing ECME Number" G BILLQ
"RTN","IBNCPDP2",45,0)
 S IBD("BCID")=(+IBD("CLAIMID"))_";"_IBADT ; The BCID#
"RTN","IBNCPDP2",46,0)
 L +^DGCR(399,"AG",IBD("BCID")):15 E  S IBY="0^Cannot lock ECME number." G BILLQ
"RTN","IBNCPDP2",47,0)
 S IBLOCK=1
"RTN","IBNCPDP2",48,0)
 S IBLDT=$G(^DGCR(399,"AG",IBD("BCID"))) ;Last time called
"RTN","IBNCPDP2",49,0)
 D NOW^%DTC S IBNOW=%
"RTN","IBNCPDP2",50,0)
 ; 2 calls in 45 sec
"RTN","IBNCPDP2",51,0)
 I $P(IBLDT,"^",2)="B" I $$FMDIFF^XLFDT(IBNOW,+IBLDT,2)<45 S IBY="0^Duplicate billing call" G BILLQ
"RTN","IBNCPDP2",52,0)
 ;
"RTN","IBNCPDP2",53,0)
 I $$MATCH(IBD("BCID")) D   ;cancel the previous bill
"RTN","IBNCPDP2",54,0)
 . N IBARR M IBARR=IBD I $$REVERSE^IBNCPDP3(DFN,.IBARR,2)
"RTN","IBNCPDP2",55,0)
 ;
"RTN","IBNCPDP2",56,0)
 ; derive minimal variables
"RTN","IBNCPDP2",57,0)
 I '$$CHECK^IBECEAU(0) S IBY="-1^IB SITE" G BILLQ
"RTN","IBNCPDP2",58,0)
 S IBSERV=$P($G(^IBE(350.1,1,0)),"^",4)
"RTN","IBNCPDP2",59,0)
 I '$$SERV^IBARX1(IBSERV) S IBY="-1^IB SERVICE" G BILLQ
"RTN","IBNCPDP2",60,0)
 I 'IBDIV S IBDIV=+$P($G(^SC(+$$FILE^IBRXUTL(IBRXN,5),0)),"^",15)
"RTN","IBNCPDP2",61,0)
 I 'IBDIV S IBDIV=+$P($G(^IBE(350.9,1,1)),U,25) ;dflt
"RTN","IBNCPDP2",62,0)
 ; - establish a stub claim/receivable
"RTN","IBNCPDP2",63,0)
 D SET^IBR I IBY<0 G BILLQ
"RTN","IBNCPDP2",64,0)
 ;
"RTN","IBNCPDP2",65,0)
 ; set up the following variables for claim establishment:
"RTN","IBNCPDP2",66,0)
 ; .01 BILL #
"RTN","IBNCPDP2",67,0)
 ; .17 ORIG CLAIM
"RTN","IBNCPDP2",68,0)
 ; .2  AUTO?
"RTN","IBNCPDP2",69,0)
 ; .02 DFN
"RTN","IBNCPDP2",70,0)
 ; .06 TIMEFRAME
"RTN","IBNCPDP2",71,0)
 ; .07 RATE TYPE
"RTN","IBNCPDP2",72,0)
 ; .18 SC AT TIME?
"RTN","IBNCPDP2",73,0)
 ; .04 LOCATION
"RTN","IBNCPDP2",74,0)
 ; .22 DIVISION
"RTN","IBNCPDP2",75,0)
 ; .05 BILL CLASSIF  (3)
"RTN","IBNCPDP2",76,0)
 ; .03 EVT DATE (FILL DATE)
"RTN","IBNCPDP2",77,0)
 ; 151 BILL FROM
"RTN","IBNCPDP2",78,0)
 ; 152 BILL TO
"RTN","IBNCPDP2",79,0)
 ; 101 PRIMARY INS CARRIER
"RTN","IBNCPDP2",80,0)
 K IB
"RTN","IBNCPDP2",81,0)
 S (IB(.02),IBDFN)=DFN
"RTN","IBNCPDP2",82,0)
 S IB(.07)=+$$RT^IBNCPDPU(DFN)
"RTN","IBNCPDP2",83,0)
 I 'IB(.07) S IBY="-1^IB RATE TYPE" G BILLQ
"RTN","IBNCPDP2",84,0)
 ;
"RTN","IBNCPDP2",85,0)
 S IBIFN=PRCASV("ARREC")
"RTN","IBNCPDP2",86,0)
 S IB(.01)=$P(PRCASV("ARBIL"),"-",2)
"RTN","IBNCPDP2",87,0)
 S IB(.17)=""
"RTN","IBNCPDP2",88,0)
 S IB(.2)=0
"RTN","IBNCPDP2",89,0)
 S IB(.06)=1
"RTN","IBNCPDP2",90,0)
 S IB(.18)=$$SC^IBCU3(DFN)
"RTN","IBNCPDP2",91,0)
 S IB(.04)=$S(+$P($G(^DG(40.8,+IBDIV,0)),U,3):7,1:1)
"RTN","IBNCPDP2",92,0)
 S:IBDIV IB(.22)=+IBDIV
"RTN","IBNCPDP2",93,0)
 S IB(.05)=3
"RTN","IBNCPDP2",94,0)
 S (IB(.03),IB(151),IB(152))=IBADT
"RTN","IBNCPDP2",95,0)
 S IBINS=$P($G(^IBA(355.3,+$G(IBD("PLAN")),0)),"^") I IBINS S IB(101)=IBINS
"RTN","IBNCPDP2",96,0)
 ;
"RTN","IBNCPDP2",97,0)
 ; set 362.4 node to rx#^p50^days sup^fill date^qty^ndc
"RTN","IBNCPDP2",98,0)
 S IB(362.4,IBRXN,1)=IBD("RX NO")_"^"_IBD("DRUG")_"^"_IBD("DAYS SUPPLY")_"^"_IBD("FILL DATE")_"^"_IBD("QTY")_"^"_IBD("NDC")
"RTN","IBNCPDP2",99,0)
 ;
"RTN","IBNCPDP2",100,0)
 ; call the autobiller module to create the claim with a default
"RTN","IBNCPDP2",101,0)
 ; diagnosis and procedure for prescriptions
"RTN","IBNCPDP2",102,0)
 D EN^IBCD3(.IBQUERY)
"RTN","IBNCPDP2",103,0)
 D CLOSE^IBSDU(.IBQUERY)
"RTN","IBNCPDP2",104,0)
 ;
"RTN","IBNCPDP2",105,0)
 S ^DGCR(399,"AG",IBD("BCID"))=IBNOW_"^B"
"RTN","IBNCPDP2",106,0)
 S DIE="^DGCR(399,",DA=IBIFN
"RTN","IBNCPDP2",107,0)
 ; update the ECME fields
"RTN","IBNCPDP2",108,0)
 S DR="460////^S X=IBD(""BCID"")" S:$L($G(IBD("AUTH #"))) DR=DR_";461////^S X=IBD(""AUTH #"")"
"RTN","IBNCPDP2",109,0)
 D ^DIE K DA,DR,DIE
"RTN","IBNCPDP2",110,0)
 D SETCT ; Set Claims Tracking record
"RTN","IBNCPDP2",111,0)
 ;
"RTN","IBNCPDP2",112,0)
 ; IEN to 2.3121
"RTN","IBNCPDP2",113,0)
 S IBCDFN=$$PLANN^IBNCPDPU(DFN,IBD("PLAN"),IBADT)
"RTN","IBNCPDP2",114,0)
 I 'IBCDFN S IBY="-1^Plan not found in Patient's Profile." G BILLQ
"RTN","IBNCPDP2",115,0)
 ;
"RTN","IBNCPDP2",116,0)
 ; add the payer (fiscal intermediary) to the claim
"RTN","IBNCPDP2",117,0)
 S IBINS=+IBCDFN,IBCDFN=$P(IBCDFN,"^",2)
"RTN","IBNCPDP2",118,0)
 S DIE="^DGCR(399,",DA=IBIFN,DR="112////"_IBCDFN
"RTN","IBNCPDP2",119,0)
 D ^DIE K DA,DR,DIE,DGRVRCAL
"RTN","IBNCPDP2",120,0)
 ;
"RTN","IBNCPDP2",121,0)
 ; need to make sure we have computed charges.
"RTN","IBNCPDP2",122,0)
 D BILL^IBCRBC(IBIFN)
"RTN","IBNCPDP2",123,0)
 ;
"RTN","IBNCPDP2",124,0)
 ; update the authorize/print fields
"RTN","IBNCPDP2",125,0)
 S DIE="^DGCR(399,",DA=IBIFN
"RTN","IBNCPDP2",126,0)
 S DR="9////1;12////"_DT D ^DIE
"RTN","IBNCPDP2",127,0)
 K DA,DR,DIE
"RTN","IBNCPDP2",128,0)
 ;
"RTN","IBNCPDP2",129,0)
 ; pass the claim to AR
"RTN","IBNCPDP2",130,0)
 D GVAR^IBCBB,ARRAY^IBCBB1 S PRCASV("APR")=IBDUZ D ^PRCASVC6
"RTN","IBNCPDP2",131,0)
 I 'PRCASV("OKAY") S IBY="-1^Cannot establish receivable in AR." G BILLQ
"RTN","IBNCPDP2",132,0)
 D REL^PRCASVC
"RTN","IBNCPDP2",133,0)
 ;
"RTN","IBNCPDP2",134,0)
 ; update the AR status to Active
"RTN","IBNCPDP2",135,0)
 ;  D AUDITX^PRCAUDT(PRCASV("ARREC"))
"RTN","IBNCPDP2",136,0)
 S PRCASV("STATUS")=16
"RTN","IBNCPDP2",137,0)
 D STATUS^PRCASVC1
"RTN","IBNCPDP2",138,0)
 ;
"RTN","IBNCPDP2",139,0)
 ; decrease adjust bill
"RTN","IBNCPDP2",140,0)
 ; Auto decrease from service Bill#,Tran amt,person,reason,Tran date
"RTN","IBNCPDP2",141,0)
 S IBAMT=$G(^DGCR(399,IBIFN,"U1"))
"RTN","IBNCPDP2",142,0)
 S IBPAID=IBD("PAID")
"RTN","IBNCPDP2",143,0)
 D:IBAMT-IBPAID>.01
"RTN","IBNCPDP2",144,0)
 . D DEC^PRCASER1(PRCASV("ARREC"),IBAMT-IBPAID,IBDUZ,"Adjust based on ECME amount paid.",IBADT)
"RTN","IBNCPDP2",145,0)
 . I 'IBPAID S PRCASV("STATUS")=22 D STATUS^PRCASVC1 ; collected/closed
"RTN","IBNCPDP2",146,0)
 ; release copay off hold
"RTN","IBNCPDP2",147,0)
 I 'IBPAID,'$$MOREINS^IBNCPNB(DFN,IBADT) D
"RTN","IBNCPDP2",148,0)
 . S IBACT=$$RELCOPAY^IBNCPNB(DFN,IBRXN,IBFIL,0,IBADT,IBIFN)
"RTN","IBNCPDP2",149,0)
 ;if returned value IBACT=0 - we will have two attempts scheduled inside RELCOPAY
"RTN","IBNCPDP2",150,0)
 ;and if all attempts fail then e-mail will be send from RCTASK
"RTN","IBNCPDP2",151,0)
 ;if IBACT=-2 (patient exempt from RX copay) then do nothing
"RTN","IBNCPDP2",152,0)
 ;IBACT cannot be >0 or -1 if 4th parameter=0
"RTN","IBNCPDP2",153,0)
 ;
"RTN","IBNCPDP2",154,0)
 D  ; set the user in 399
"RTN","IBNCPDP2",155,0)
 . N IBI,IBT F IBI=2,5,11,13,15 S IBT(399,IBIFN_",",IBI)=IBDUZ
"RTN","IBNCPDP2",156,0)
 . D FILE^DIE("","IBT")
"RTN","IBNCPDP2",157,0)
 ;
"RTN","IBNCPDP2",158,0)
BILLQ S IBRES=$S(IBY<0:"0^"_$S($L($P(IBY,"^",2)):$P(IBY,"^",2),1:$P(IBY,"^",3)),$G(IBIFN):+IBIFN,1:IBY)
"RTN","IBNCPDP2",159,0)
 I $G(IBIFN) S IBD("BILL")=IBIFN
"RTN","IBNCPDP2",160,0)
 D LOG("BILL",IBRES)
"RTN","IBNCPDP2",161,0)
 I IBY<0 D BULL^IBNCPEB($G(DFN),.IBD,IBRES,$G(IBIFN))
"RTN","IBNCPDP2",162,0)
 I IBLOCK L -^DGCR(399,"AG",IBD("BCID"))
"RTN","IBNCPDP2",163,0)
 Q IBRES
"RTN","IBNCPDP2",164,0)
 ;
"RTN","IBNCPDP2",165,0)
 ; update claims tracking saying bill has been billed
"RTN","IBNCPDP2",166,0)
SETCT ;
"RTN","IBNCPDP2",167,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRXN,IBFIL,0))
"RTN","IBNCPDP2",168,0)
 I IBTRKRN S DIE="^IBT(356,",DA=IBTRKRN,DR=".11////^S X=IBIFN;.17///@" D ^DIE
"RTN","IBNCPDP2",169,0)
 I IBTRKRN,IBIFN D CTB^IBCDC(IBTRKRN,IBIFN)
"RTN","IBNCPDP2",170,0)
 Q
"RTN","IBNCPDP2",171,0)
 ;
"RTN","IBNCPDP2",172,0)
 ;/**
"RTN","IBNCPDP2",173,0)
 ;Log values passed into IB by outside applications
"RTN","IBNCPDP2",174,0)
 ;
"RTN","IBNCPDP2",175,0)
 ;implicit input variables/arrays :
"RTN","IBNCPDP2",176,0)
 ; IBD array with values sent to IB (see calling subroutines)
"RTN","IBNCPDP2",177,0)
 ; DFN - patient's IEN (file #2)
"RTN","IBNCPDP2",178,0)
 ; DUZ - user's IEN(file #200)
"RTN","IBNCPDP2",179,0)
 ;explicit parameters:
"RTN","IBNCPDP2",180,0)
 ; PROC - type of event as string, i.e. BILL, REJECT and so on
"RTN","IBNCPDP2",181,0)
 ; RESULT - result of the event processing, format: return_code^message
"RTN","IBNCPDP2",182,0)
LOG(PROC,RESULT) ;Store the data
"RTN","IBNCPDP2",183,0)
 D LOG^IBNCPLOG(.IBD,DFN,PROC,RESULT,$J,$$NOW^XLFDT(),+DUZ)
"RTN","IBNCPDP2",184,0)
 Q
"RTN","IBNCPDP2",185,0)
 ;
"RTN","IBNCPDP2",186,0)
 ;IBNCPDP2
"RTN","IBNCPDPE")
0^41^B15505281^B15029269
"RTN","IBNCPDPE",1,0)
IBNCPDPE ;DALOI/AAT - NCPDP BILLING EVENTS REPORT ;10-JUN-2003
"RTN","IBNCPDPE",2,0)
 ;;2.0;INTEGRATED BILLING;**276,342,347**;21-MAR-94;Build 24
"RTN","IBNCPDPE",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBNCPDPE",4,0)
 ;
"RTN","IBNCPDPE",5,0)
DATE ;
"RTN","IBNCPDPE",6,0)
 S (IBBDT,IBEDT)=DT
"RTN","IBNCPDPE",7,0)
 S %DT="AEX"
"RTN","IBNCPDPE",8,0)
 S %DT("A")="START WITH DATE: ",%DT("B")="TODAY"
"RTN","IBNCPDPE",9,0)
 D ^%DT K %DT
"RTN","IBNCPDPE",10,0)
 I Y<0 S IBQ=1 Q
"RTN","IBNCPDPE",11,0)
 S IBBDT=+Y
"RTN","IBNCPDPE",12,0)
 S %DT="AEX"
"RTN","IBNCPDPE",13,0)
 S %DT("A")="GO TO DATE: ",%DT("B")="TODAY"
"RTN","IBNCPDPE",14,0)
 D ^%DT K %DT
"RTN","IBNCPDPE",15,0)
 I Y<0 S IBQ=1 Q
"RTN","IBNCPDPE",16,0)
 S IBEDT=+Y
"RTN","IBNCPDPE",17,0)
 Q
"RTN","IBNCPDPE",18,0)
 ;
"RTN","IBNCPDPE",19,0)
MODE ;
"RTN","IBNCPDPE",20,0)
 N DIR,DIC,DIRUT,DUOUT,PSOFILE
"RTN","IBNCPDPE",21,0)
 S (IBM1,IBM2,IBM3)="A"
"RTN","IBNCPDPE",22,0)
 S DIR(0)="S^P:SINGLE PATIENT;R:SINGLE RX;E:SINGLE ECME #;A:ALL ACTIVITY"
"RTN","IBNCPDPE",23,0)
 S DIR("A")="SINGLE (P)ATIENT, SINGLE (R)X, SINGLE (E)CME #, (A)LL ACTIVITY"
"RTN","IBNCPDPE",24,0)
 S DIR("B")="ALL"
"RTN","IBNCPDPE",25,0)
 D ^DIR K DIR I $D(DIRUT) S IBQ=1 Q
"RTN","IBNCPDPE",26,0)
 S IBM1=Y
"RTN","IBNCPDPE",27,0)
 I IBM1="P" S DIC="^DPT(",DIC(0)="AEQMN" D ^DIC Q:$D(DUOUT)  S IBPAT=$S(Y>0:+Y,1:0) I 'IBPAT W "   ALL" S IBM1="A"
"RTN","IBNCPDPE",28,0)
 I IBM1="R" S PSOFILE=52,DIC="^PSRX(",DIC(0)="AEQMN" D DIC^PSODI(PSOFILE,.DIC) Q:$D(DUOUT)  S IBRX=$S(Y>0:+Y,1:0) I 'IBRX W "   ALL" S IBM1="A"
"RTN","IBNCPDPE",29,0)
 K PSODIY
"RTN","IBNCPDPE",30,0)
 I IBM1="E" S DIR(0)="FO^7:7^I X'?1.7N W !!,""Cannot contain alpha characters"" K X",DIR("A")="Enter ECME #" D ^DIR Q:$D(DUOUT)  S IBECME=$S(+Y>0:Y,1:0) I 'IBECME W "   ALL" S IBM1="A"
"RTN","IBNCPDPE",31,0)
 S IBM2="B"
"RTN","IBNCPDPE",32,0)
 ; if "All"
"RTN","IBNCPDPE",33,0)
 I IBM1="A" D  Q:$G(IBQ)
"RTN","IBNCPDPE",34,0)
 .S DIR(0)="S^E:ECME BILLABLE;N:NON ECME BILLABLE;B:BOTH"
"RTN","IBNCPDPE",35,0)
 .S DIR("A")="(E)CME BILLABLE;(N)ON ECME BILLABLE;(B)OTH"
"RTN","IBNCPDPE",36,0)
 .S DIR("B")="BOTH"
"RTN","IBNCPDPE",37,0)
 .D ^DIR K DIR I $D(DIRUT) S IBQ=1 Q
"RTN","IBNCPDPE",38,0)
 .S IBM2=Y
"RTN","IBNCPDPE",39,0)
 ;
"RTN","IBNCPDPE",40,0)
 ;Mail/Window/CMOP?
"RTN","IBNCPDPE",41,0)
 S DIR(0)="S^M:MAIL;W:WINDOW;C:CMOP;A:ALL"
"RTN","IBNCPDPE",42,0)
 S DIR("A")="(M)AIL, (W)INDOW, (C)CMOP, (A)LL"
"RTN","IBNCPDPE",43,0)
 S DIR("B")="ALL"
"RTN","IBNCPDPE",44,0)
 D ^DIR K DIR I $D(DIRUT) S IBQ=1 Q
"RTN","IBNCPDPE",45,0)
 S IBM3=Y
"RTN","IBNCPDPE",46,0)
 ;
"RTN","IBNCPDPE",47,0)
 S DIR(0)="S^S:SUMMARY REPORT;D:DETAILED REPORT"
"RTN","IBNCPDPE",48,0)
 S DIR("A")="(S)UMMARY REPORT, (D)ETAILED REPORT"
"RTN","IBNCPDPE",49,0)
 S DIR("B")="SUMMARY REPORT"
"RTN","IBNCPDPE",50,0)
 D ^DIR K DIR I $D(DIRUT) S IBQ=1 Q
"RTN","IBNCPDPE",51,0)
 S IBDTL=($E(Y)="D")
"RTN","IBNCPDPE",52,0)
 Q
"RTN","IBNCPDPE",53,0)
 ;
"RTN","IBNCPDPE",54,0)
TESTDATA() ;
"RTN","IBNCPDPE",55,0)
 N Y
"RTN","IBNCPDPE",56,0)
 S Y=$$HAVEDATA()
"RTN","IBNCPDPE",57,0)
 I 'Y W !!,"No data found in the specified period.",!
"RTN","IBNCPDPE",58,0)
 Q Y
"RTN","IBNCPDPE",59,0)
 ;
"RTN","IBNCPDPE",60,0)
HAVEDATA() ;
"RTN","IBNCPDPE",61,0)
 N Z
"RTN","IBNCPDPE",62,0)
 I $D(^IBCNR(366.14,"B",IBBDT)) Q 1
"RTN","IBNCPDPE",63,0)
 S Z=+$O(^IBCNR(366.14,"B",IBBDT))
"RTN","IBNCPDPE",64,0)
 I Z=0 Q 0
"RTN","IBNCPDPE",65,0)
 I Z>IBEDT Q 0
"RTN","IBNCPDPE",66,0)
 Q 1
"RTN","IBNCPDPE",67,0)
 ;
"RTN","IBNCPDPE",68,0)
DEVICE ;
"RTN","IBNCPDPE",69,0)
 N DIR,DIRUT,POP,ZTRTN,ZTIO,ZTSAVE,ZTDESC,%ZIS,ZTSK
"RTN","IBNCPDPE",70,0)
 S %ZIS="QM"
"RTN","IBNCPDPE",71,0)
 W ! D ^%ZIS
"RTN","IBNCPDPE",72,0)
 I POP S IBQ=1 Q
"RTN","IBNCPDPE",73,0)
 S IBSCR=$S($E($G(IOST),1,2)="C-":1,1:0)
"RTN","IBNCPDPE",74,0)
 ;
"RTN","IBNCPDPE",75,0)
 I $D(IO("Q")) D  S IBQ=1
"RTN","IBNCPDPE",76,0)
 . S ZTRTN="START^IBNCPEV"
"RTN","IBNCPDPE",77,0)
 . S ZTIO=ION
"RTN","IBNCPDPE",78,0)
 . S ZTSAVE("IB*")=""
"RTN","IBNCPDPE",79,0)
 . S ZTDESC="IB ECME BILLING EVENTS REPORT"
"RTN","IBNCPDPE",80,0)
 . D ^%ZTLOAD
"RTN","IBNCPDPE",81,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","IBNCPDPE",82,0)
 . D HOME^%ZIS
"RTN","IBNCPDPE",83,0)
 U IO
"RTN","IBNCPDPE",84,0)
 Q
"RTN","IBNCPDPE",85,0)
 ;------ added for the User screen --------
"RTN","IBNCPDPE",86,0)
 ;User Screen Entry point (to call from ECME User Screen)
"RTN","IBNCPDPE",87,0)
 ;IBMODE:
"RTN","IBNCPDPE",88,0)
 ; P-patient
"RTN","IBNCPDPE",89,0)
 ; R-Rx
"RTN","IBNCPDPE",90,0)
 ;IBVAL - patient DFN or RX ien (#52)
"RTN","IBNCPDPE",91,0)
 ;
"RTN","IBNCPDPE",92,0)
USRSCREN(IBMODE,IBVAL) ;
"RTN","IBNCPDPE",93,0)
 Q:$$PFSSON^IBNCPDPI()  ;quit if PFSS is ON
"RTN","IBNCPDPE",94,0)
 N IBPAT,IBRX,IBBDT,IBEDT,Y,IBM1,IBM2,IBM3,IBQ,IBSCR,IBPAGE,IBDTL
"RTN","IBNCPDPE",95,0)
 S (IBPAT,IBRX,IBQ,IBSCR,IBPAGE,IBDTL)=0
"RTN","IBNCPDPE",96,0)
 S IBM1=IBMODE
"RTN","IBNCPDPE",97,0)
 I IBM1="P" S IBPAT=+IBVAL
"RTN","IBNCPDPE",98,0)
 I IBM1="R" S IBRX=+IBVAL
"RTN","IBNCPDPE",99,0)
 ;date
"RTN","IBNCPDPE",100,0)
 F  D DATE Q:IBQ  Q:$$TESTDATA
"RTN","IBNCPDPE",101,0)
 Q:IBQ
"RTN","IBNCPDPE",102,0)
 D MODE2 Q:IBQ
"RTN","IBNCPDPE",103,0)
 D DEVICE Q:IBQ
"RTN","IBNCPDPE",104,0)
 ;D START^IBNCPER
"RTN","IBNCPDPE",105,0)
 D START^IBNCPEV
"RTN","IBNCPDPE",106,0)
 D ^%ZISC
"RTN","IBNCPDPE",107,0)
 I IBQ W !,"Cancelled"
"RTN","IBNCPDPE",108,0)
 Q
"RTN","IBNCPDPE",109,0)
 ;
"RTN","IBNCPDPE",110,0)
MODE2 ;
"RTN","IBNCPDPE",111,0)
 N DIR,DIC,DIRUT,DUOUT
"RTN","IBNCPDPE",112,0)
 S (IBM1,IBM2,IBM3)="A"
"RTN","IBNCPDPE",113,0)
 S IBM2="B"
"RTN","IBNCPDPE",114,0)
 ;
"RTN","IBNCPDPE",115,0)
 ;Mail/Window/CMOP?
"RTN","IBNCPDPE",116,0)
 S DIR(0)="S^M:MAIL;W:WINDOW;C:CMOP;A:ALL"
"RTN","IBNCPDPE",117,0)
 S DIR("A")="(M)AIL, (W)INDOW, (C)CMOP, (A)LL"
"RTN","IBNCPDPE",118,0)
 S DIR("B")="ALL"
"RTN","IBNCPDPE",119,0)
 D ^DIR K DIR I $D(DIRUT) S IBQ=1 Q
"RTN","IBNCPDPE",120,0)
 S IBM3=Y
"RTN","IBNCPDPE",121,0)
 ;
"RTN","IBNCPDPE",122,0)
 S DIR(0)="S^S:SUMMARY REPORT;D:DETAILED REPORT"
"RTN","IBNCPDPE",123,0)
 S DIR("A")="(S)UMMARY REPORT, (D)ETAILED REPORT"
"RTN","IBNCPDPE",124,0)
 S DIR("B")="SUMMARY REPORT"
"RTN","IBNCPDPE",125,0)
 D ^DIR K DIR I $D(DIRUT) S IBQ=1 Q
"RTN","IBNCPDPE",126,0)
 S IBDTL=($E(Y)="D")
"RTN","IBNCPDPE",127,0)
 Q
"RTN","IBNCPDPE",128,0)
 ;IBNCPDPE
"RTN","IBNCPDPH")
0^42^B26701868^B27130556
"RTN","IBNCPDPH",1,0)
IBNCPDPH ;DALOI/SS - ECME REPORT OF ON HOLD CHARGES FOR A PATIENT ;JUNE 08 2005
"RTN","IBNCPDPH",2,0)
 ;;2.0;INTEGRATED BILLING;**276,347**;21-MAR-94;Build 24
"RTN","IBNCPDPH",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBNCPDPH",4,0)
 Q
"RTN","IBNCPDPH",5,0)
 ;
"RTN","IBNCPDPH",6,0)
 ;made after IBOHPT1 to use with ECME User Screen
"RTN","IBNCPDPH",7,0)
 ;see IA# with ECME
"RTN","IBNCPDPH",8,0)
 ;
"RTN","IBNCPDPH",9,0)
ONHOLD(DFN) ;
"RTN","IBNCPDPH",10,0)
 Q:$$PFSSON^IBNCPDPI()  ;quit if PFSS is ON
"RTN","IBNCPDPH",11,0)
 N IBQUIT,IBII,DIRUT,DUOUT,DTOUT,ZTIO,Y S IBQUIT=0
"RTN","IBNCPDPH",12,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBNCPDPH",13,0)
 ;
"RTN","IBNCPDPH",14,0)
 S DIR(0)="DA^::EX",DIR("A")="Start with DATE: "
"RTN","IBNCPDPH",15,0)
 S DIR("?")="Enter the starting date for this report."
"RTN","IBNCPDPH",16,0)
 D ^DIR K DIR G:$D(DIRUT) EXIT S IBSDT=+Y
"RTN","IBNCPDPH",17,0)
 S DIR(0)="DA^"_+Y_":NOW:EX",DIR("A")="     Go to DATE: "
"RTN","IBNCPDPH",18,0)
 S DIR("?")="Enter the ending date for this report."
"RTN","IBNCPDPH",19,0)
 D ^DIR K DIR G:$D(DIRUT) EXIT S IBEDT=+Y
"RTN","IBNCPDPH",20,0)
 ;
"RTN","IBNCPDPH",21,0)
 S DIR(0)="Y",DIR("A")="Include Pharmacy Co-pay charges on this report",DIR("B")="NO"
"RTN","IBNCPDPH",22,0)
 S DIR("?",1)="   Enter:  'Y' - to include Pharmacy Co-pay charges on this report"
"RTN","IBNCPDPH",23,0)
 S DIR("?",2)="           'N' - to exclude Pharmacy Co-pay charges on this report"
"RTN","IBNCPDPH",24,0)
 S DIR("?")="             '^' - to select a new patient"
"RTN","IBNCPDPH",25,0)
 D ^DIR K DIR G:$D(DIRUT) EXIT S IBIBRX=Y
"RTN","IBNCPDPH",26,0)
 ;
"RTN","IBNCPDPH",27,0)
QUEUED ; entry point if queued
"RTN","IBNCPDPH",28,0)
 ;***
"RTN","IBNCPDPH",29,0)
 K ^TMP($J,"IB")
"RTN","IBNCPDPH",30,0)
 D:'$G(IBQUIT) DEVICE D:'$G(IBQUIT) CHRGS,REPORT^IBOHPT2
"RTN","IBNCPDPH",31,0)
 D EXIT
"RTN","IBNCPDPH",32,0)
 ;***
"RTN","IBNCPDPH",33,0)
 Q
"RTN","IBNCPDPH",34,0)
EXIT ;
"RTN","IBNCPDPH",35,0)
 K ^TMP($J,"IB")
"RTN","IBNCPDPH",36,0)
 K DFN,IBEND,IBSDT,IBEDT,IBIBRX,IBCN,IBDT,IBIFN,X
"RTN","IBNCPDPH",37,0)
 K IBRDT,IBRF,IBRX,IBRXN
"RTN","IBNCPDPH",38,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBNCPDPH",39,0)
 D ^%ZISC
"RTN","IBNCPDPH",40,0)
 Q
"RTN","IBNCPDPH",41,0)
DEVICE ;
"RTN","IBNCPDPH",42,0)
 I $D(ZTQUEUED) Q
"RTN","IBNCPDPH",43,0)
 W !!,*7,"*** Margin width of this output is 132 ***"
"RTN","IBNCPDPH",44,0)
 W !,"*** This output should be queued ***"
"RTN","IBNCPDPH",45,0)
 N %ZIS
"RTN","IBNCPDPH",46,0)
 S %ZIS="QM" D ^%ZIS I POP S IBQUIT=1 Q
"RTN","IBNCPDPH",47,0)
 N ZTRTN,ZTIO,ZTDES,ZTSAVE
"RTN","IBNCPDPH",48,0)
 I $D(IO("Q")) S ZTRTN="QUEUED^IBOHPT1",ZTIO=ION,ZTDESC="ON HOLD CHARGE INFO/PT",ZTSAVE("IB*")="",ZTSAVE("DFN")="" D ^%ZTLOAD W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED") D HOME^%ZIS K ZTSK S IBQUIT=1 Q
"RTN","IBNCPDPH",49,0)
 U IO
"RTN","IBNCPDPH",50,0)
 Q
"RTN","IBNCPDPH",51,0)
 ; indexes records that should be included in report
"RTN","IBNCPDPH",52,0)
 ;
"RTN","IBNCPDPH",53,0)
CHRGS ; charges on hold
"RTN","IBNCPDPH",54,0)
 N DATE,IBN,IBND,A,B,C,D,E,IBNX
"RTN","IBNCPDPH",55,0)
 S IBN=0 F  S IBN=$O(^IB("C",DFN,IBN)) Q:'IBN  S IBND=$G(^IB(IBN,0)) D:IBND
"RTN","IBNCPDPH",56,0)
 .I 'IBIBRX,$E($G(^IBE(350.1,+$P(IBND,"^",3),0)),1,3)="PSO" Q
"RTN","IBNCPDPH",57,0)
 .Q:$P(IBND,"^",8)["ADMISSION"
"RTN","IBNCPDPH",58,0)
 .Q:'$P($G(^IB(IBN,1)),"^",6)
"RTN","IBNCPDPH",59,0)
 .Q:'$D(^IB("APDT",IBN))
"RTN","IBNCPDPH",60,0)
 .S (C,D)="",C=$O(^IB("APDT",IBN,C)),D=$O(^IB("APDT",IBN,C,D))
"RTN","IBNCPDPH",61,0)
 .S E=$P($G(^IB(D,0)),U,3)
"RTN","IBNCPDPH",62,0)
 .S A=$P($G(^IBE(350.1,E,0)),U,5)
"RTN","IBNCPDPH",63,0)
 .S IBNX=$S(A=2:$P($Q(^IB("APDT",IBN,C,D)),")",1),A=3:$P($Q(^IB("APDT",IBN,C,D)),")",1),1:IBN)
"RTN","IBNCPDPH",64,0)
 .I (A=2)!(A=3) D
"RTN","IBNCPDPH",65,0)
 ..I IBNX["[""" S IBNX="^"_$P(IBNX,"]",2)
"RTN","IBNCPDPH",66,0)
 .I $P(IBNX,",",4)>0 S IBNX=$P(IBNX,",",4)
"RTN","IBNCPDPH",67,0)
 .S DATE=$P($G(^IB(+$P(IBND,"^",1),0)),"^",17)
"RTN","IBNCPDPH",68,0)
 .S:'DATE DATE=$P($G(^IB(IBNX,1)),"^",5)
"RTN","IBNCPDPH",69,0)
 .S:'DATE DATE=$P($G(^IB(IBNX,1)),"^",2)\1
"RTN","IBNCPDPH",70,0)
 .I (DATE>(IBSDT-.0001))&(DATE<(IBEDT+.9999)) S ^TMP($J,"IB",-DATE,IBNX)="" D BILLS
"RTN","IBNCPDPH",71,0)
 Q
"RTN","IBNCPDPH",72,0)
 ;
"RTN","IBNCPDPH",73,0)
BILLS ; find bills for charges on hold
"RTN","IBNCPDPH",74,0)
 N IBFR,IBT,IBATYPE,IBTO
"RTN","IBNCPDPH",75,0)
 S IBATYPE=$S($P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^")["OPT":"O",$P($G(^IBE(350.1,+IBND,"^",3,0)),"^")["PSO":"RX",1:"I")
"RTN","IBNCPDPH",76,0)
 S IBFR=$P(IBND,"^",14),IBTO=$P(IBND,"^",15)
"RTN","IBNCPDPH",77,0)
 I IBATYPE="I" D INP
"RTN","IBNCPDPH",78,0)
 I IBATYPE="O" D OPT
"RTN","IBNCPDPH",79,0)
 E  D RX
"RTN","IBNCPDPH",80,0)
 Q
"RTN","IBNCPDPH",81,0)
INP ; inpatient bills
"RTN","IBNCPDPH",82,0)
 N IBEV,IBBILL,IBT,X,X1,X2,IBEND,IBOK
"RTN","IBNCPDPH",83,0)
 S IBEV=$P(IBND,"^",16) Q:'IBEV  ; parent event
"RTN","IBNCPDPH",84,0)
 S IBEV=($P($G(^IB(IBEV,0)),"^",17)\1) Q:'IBEV  ; date of parent event
"RTN","IBNCPDPH",85,0)
 S X1=IBEV,X2=1 D C^%DTC S IBEND=X
"RTN","IBNCPDPH",86,0)
 S IBT=(IBEV-.0001) F  S IBT=$O(^DGCR(399,"D",IBT)) Q:'IBT!(IBT'<IBEND)  S IBBILL=0 F  S IBBILL=$O(^DGCR(399,"D",IBT,IBBILL)) Q:IBBILL=""  D
"RTN","IBNCPDPH",87,0)
 .D INPTCK
"RTN","IBNCPDPH",88,0)
 .I IBOK S ^TMP($J,"IB",-DATE,IBNX,IBBILL)=""
"RTN","IBNCPDPH",89,0)
 Q
"RTN","IBNCPDPH",90,0)
 ;
"RTN","IBNCPDPH",91,0)
INPTCK ; does bill belong to charge? returns IBOK=0 if no
"RTN","IBNCPDPH",92,0)
 N IBBILL0,IBBILLU
"RTN","IBNCPDPH",93,0)
 S IBBILL0=$G(^DGCR(399,IBBILL,0)),IBBILLU=$G(^("U"))
"RTN","IBNCPDPH",94,0)
 S IBOK=1
"RTN","IBNCPDPH",95,0)
CK1 ; for same patient?
"RTN","IBNCPDPH",96,0)
 I DFN=$P(IBBILL0,"^",2)
"RTN","IBNCPDPH",97,0)
 S IBOK=$T
"RTN","IBNCPDPH",98,0)
 Q:'IBOK
"RTN","IBNCPDPH",99,0)
CK2 ; same type- inp or opt?
"RTN","IBNCPDPH",100,0)
 N B S B=$S(+$P(IBBILL0,"^",5)<3:"I",1:"O")
"RTN","IBNCPDPH",101,0)
 I B=IBATYPE
"RTN","IBNCPDPH",102,0)
 S IBOK=$T
"RTN","IBNCPDPH",103,0)
 Q:'IBOK
"RTN","IBNCPDPH",104,0)
CK3 ; overlap in date range?
"RTN","IBNCPDPH",105,0)
 N F,T
"RTN","IBNCPDPH",106,0)
 S F=+IBBILLU,T=$P(IBBILLU,"^",2)
"RTN","IBNCPDPH",107,0)
 I (IBTO<F)!(IBFR>T)
"RTN","IBNCPDPH",108,0)
 S IBOK='$T
"RTN","IBNCPDPH",109,0)
 Q:'IBOK
"RTN","IBNCPDPH",110,0)
CK4 ; insurance bill?
"RTN","IBNCPDPH",111,0)
 I $P(IBBILL0,"^",11)="i"
"RTN","IBNCPDPH",112,0)
 S IBOK=$T
"RTN","IBNCPDPH",113,0)
 Q
"RTN","IBNCPDPH",114,0)
OPT ; outpatient bills
"RTN","IBNCPDPH",115,0)
 N X,IBV,IBBILL,IBOK,IBBILL0
"RTN","IBNCPDPH",116,0)
 S IBV=(IBFR\1)-.0001 F  S IBV=$O(^DGCR(399,"AOPV",DFN,IBV)) Q:'IBV!(IBV>IBTO)  S IBBILL=0 D
"RTN","IBNCPDPH",117,0)
 .F  S IBBILL=$O(^DGCR(399,"AOPV",DFN,IBV,IBBILL)) Q:('IBBILL)  D
"RTN","IBNCPDPH",118,0)
 ..Q:$D(^TMP($J,"IB",-DATE,IBNX,IBBILL))
"RTN","IBNCPDPH",119,0)
 ..S IBBILL0=$G(^DGCR(399,IBBILL,0)) D CK4 Q:'IBOK
"RTN","IBNCPDPH",120,0)
 ..S ^TMP($J,"IB",-DATE,IBNX,IBBILL)=""
"RTN","IBNCPDPH",121,0)
 Q
"RTN","IBNCPDPH",122,0)
RX ; rx refill bills
"RTN","IBNCPDPH",123,0)
 Q:'IBIBRX
"RTN","IBNCPDPH",124,0)
 S (IBRX,IBRXN,IBRF,IBRDT)=0
"RTN","IBNCPDPH",125,0)
 I $P(IBND,"^",4)'["52:" Q
"RTN","IBNCPDPH",126,0)
 ;
"RTN","IBNCPDPH",127,0)
 S IBRXN=$P($P(IBND,"^",4),":",2),IBRX=$P($P(IBND,"^",8),"-"),IBRF=$P($P(IBND,"^",4),":",3)
"RTN","IBNCPDPH",128,0)
 ;
"RTN","IBNCPDPH",129,0)
 I +IBRF>0 S IBRDT=$$SUBFILE^IBRXUTL(+IBRXN,IBRF,52,.01)
"RTN","IBNCPDPH",130,0)
 I +IBRF=0 S IBRDT=$$FILE^IBRXUTL(+IBRXN,22)
"RTN","IBNCPDPH",131,0)
 ;
"RTN","IBNCPDPH",132,0)
 Q:(IBRX="")!('IBRDT)
"RTN","IBNCPDPH",133,0)
 N X,IBBILL,IBBILL0,IBFILL,IBFILL0,IBOK S IBBILL=0
"RTN","IBNCPDPH",134,0)
 S IBFILL=0 F  S IBFILL=$O(^IBA(362.4,"B",IBRX,IBFILL)) Q:IBFILL=""  D
"RTN","IBNCPDPH",135,0)
 .S IBFILL0=$G(^IBA(362.4,IBFILL,0)) I $P(IBFILL0,"^",3)'=IBRDT Q
"RTN","IBNCPDPH",136,0)
 .S IBBILL=+$P(IBFILL0,"^",2) I 'IBBILL Q
"RTN","IBNCPDPH",137,0)
 .S IBBILL0=$G(^DGCR(399,IBBILL,0)) D CK4 I 'IBOK Q
"RTN","IBNCPDPH",138,0)
 .S ^TMP($J,"IB",-DATE,IBNX,IBBILL)=""
"RTN","IBNCPDPH",139,0)
 Q
"RTN","IBNCPDPR")
0^43^B27008499^B26832098
"RTN","IBNCPDPR",1,0)
IBNCPDPR ;WOIFO/SS - ECME RELEASE CHARGES ON HOLD ;JUNE 08 2005
"RTN","IBNCPDPR",2,0)
 ;;2.0;INTEGRATED BILLING;**276,347**;21-MAR-94;Build 24
"RTN","IBNCPDPR",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBNCPDPR",4,0)
 Q
"RTN","IBNCPDPR",5,0)
 ;==========
"RTN","IBNCPDPR",6,0)
 ;version of "IB MT RELEASE CHARGES" option (^IBREL) without PATIENT prompt
"RTN","IBNCPDPR",7,0)
 ;(patient is selected from the User Screen)
"RTN","IBNCPDPR",8,0)
 ;designed to use from ECME User Screen (IA #) in order to access Release 
"RTN","IBNCPDPR",9,0)
 ;copay functionality from ECME
"RTN","IBNCPDPR",10,0)
 ;
"RTN","IBNCPDPR",11,0)
RELH(DFN,IBRXIEN,IBREFL,IBMODE) ;
"RTN","IBNCPDPR",12,0)
 Q:$$PFSSON^IBNCPDPI()  ;quit if PFSS is ON
"RTN","IBNCPDPR",13,0)
 K IBA,PRCABN,BPX,IBI,IBCNT,IB350
"RTN","IBNCPDPR",14,0)
 S IB350=0
"RTN","IBNCPDPR",15,0)
 S IBI=0 F IBNUM=1:1 S IBI=$O(^IB("AH",DFN,IBI)) Q:'IBI  S IBA(IBNUM)=IBI
"RTN","IBNCPDPR",16,0)
 I '$D(IBA) W !!,"This patient does not have any charges 'on hold.'",! G ASK
"RTN","IBNCPDPR",17,0)
 ;
"RTN","IBNCPDPR",18,0)
 S IBPT=$$PT^IBEFUNC(DFN) W @IOF,$P(IBPT,"^"),"      Pt ID: ",$P(IBPT,"^",2),! S I="",$P(I,"-",80)="" W I K I
"RTN","IBNCPDPR",19,0)
 ;if the user selected specific RX/refill
"RTN","IBNCPDPR",20,0)
 I IBMODE="C" D  S:IB350>0 DIR("B")=$P(IB350,U,2)
"RTN","IBNCPDPR",21,0)
 . ;find item that matches selected RX/refill
"RTN","IBNCPDPR",22,0)
 . S IBCNT=0
"RTN","IBNCPDPR",23,0)
 . F  S IBCNT=$O(IBA(IBCNT)) Q:+IBCNT=0  D  Q:IB350>0
"RTN","IBNCPDPR",24,0)
 . . S BPX=$P($G(^IB(IBA(IBCNT),0)),U,4)
"RTN","IBNCPDPR",25,0)
 . . I $P(BPX,":")'=52 Q  ;if not RX type
"RTN","IBNCPDPR",26,0)
 . . I $P($P(BPX,";"),":",2)'=IBRXIEN Q  ;if not given RX#
"RTN","IBNCPDPR",27,0)
 . . I IBREFL>0 I $P($P(BPX,";",2),":",2)'=IBREFL Q  ;if not given refill #
"RTN","IBNCPDPR",28,0)
 . . S IB350=IBA(IBCNT)_"^"_IBCNT
"RTN","IBNCPDPR",29,0)
 ;
"RTN","IBNCPDPR",30,0)
 I IBMODE="C",IB350=0 D  G ASK
"RTN","IBNCPDPR",31,0)
 . W !!,"There is no copay charge 'on hold' for this Rx.",!
"RTN","IBNCPDPR",32,0)
 . D PAUSE^VALM1
"RTN","IBNCPDPR",33,0)
 D RESUME
"RTN","IBNCPDPR",34,0)
 Q
"RTN","IBNCPDPR",35,0)
 ;
"RTN","IBNCPDPR",36,0)
 ;
"RTN","IBNCPDPR",37,0)
ASK ;stub for  ASK
"RTN","IBNCPDPR",38,0)
 Q
"RTN","IBNCPDPR",39,0)
 ;
"RTN","IBNCPDPR",40,0)
 ;the following code was borrowed from IBRREL without changes.
"RTN","IBNCPDPR",41,0)
 ;This was done to avoid code changes in the original code and 
"RTN","IBNCPDPR",42,0)
 ;re-testing it in IB package
"RTN","IBNCPDPR",43,0)
 ; - display header and list charges
"RTN","IBNCPDPR",44,0)
RESUME W !!,"The following IB Actions ",$S($D(PRCABN):"associated with this bill",1:"for this patient")," are ON HOLD:" D HDR
"RTN","IBNCPDPR",45,0)
 S IBQ=0 F IBNUM=1:1 Q:'$D(IBA(IBNUM))  D:'(IBNUM#15)  Q:IBQ  S IBN=IBA(IBNUM) D LST
"RTN","IBNCPDPR",46,0)
 . R !,"Enter RETURN to continue or '^' to stop: ",X:DTIME S:X["^"!('$T) IBQ=1 Q
"RTN","IBNCPDPR",47,0)
 ;
"RTN","IBNCPDPR",48,0)
 ; - prompt user to select IB Actions
"RTN","IBNCPDPR",49,0)
 S DIR(0)="LA^1:"_(IBNUM-1)_"^K:X[""."" X",DIR("A")="Select IB Action"_$E("s",IBNUM>2)_" (REF #) to release (or '^' to exit): ",DIR("?")="^D HELP^IBRREL"
"RTN","IBNCPDPR",50,0)
 W ! D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) G END:$D(PRCABN) D END W ! G ASK
"RTN","IBNCPDPR",51,0)
 ;
"RTN","IBNCPDPR",52,0)
 S IBRANGE=Y,IBSEQNO=1,IBDUZ=DUZ
"RTN","IBNCPDPR",53,0)
 ;
"RTN","IBNCPDPR",54,0)
 S DIR(0)="Y",DIR("A")="OK to pass "_$S($P(Y,",",2):"these charges",1:"this charge")_" to Accounts Receivable"
"RTN","IBNCPDPR",55,0)
 D ^DIR K DIR I 'Y!($D(DIRUT))!($D(DUOUT)) G END:$D(PRCABN) D END W ! G ASK
"RTN","IBNCPDPR",56,0)
 ;
"RTN","IBNCPDPR",57,0)
 ; - pass charges to Accounts Receivable
"RTN","IBNCPDPR",58,0)
 W !!,"Passing charges to Accounts Receivable...",! D HDR
"RTN","IBNCPDPR",59,0)
 F IBCTR=1:1 S IBNUM=$P(IBRANGE,",",IBCTR) Q:'IBNUM  I $D(IBA(IBNUM)) S IBNOS=IBA(IBNUM) D ^IBR,ERR:Y<1 I Y>0 S IBN=IBA(IBNUM) D LST
"RTN","IBNCPDPR",60,0)
 W !!,"The charge"_$E("s",$P(IBRANGE,",",2)>0)_" listed above "_$S($P(IBRANGE,",",2):"have",1:"has")_" been passed to Accounts Receivable.",!
"RTN","IBNCPDPR",61,0)
 ;
"RTN","IBNCPDPR",62,0)
 I '$D(PRCABN) W !! S DIR(0)="E" D ^DIR K DIR D END W ! G ASK
"RTN","IBNCPDPR",63,0)
 ;
"RTN","IBNCPDPR",64,0)
END K DIC,DIRUT,DUOUT,DTOUT,IBA,IBAFY,IBARTYP,IBATYP,IBCTR,IBN,IBDA,IBDUZ
"RTN","IBNCPDPR",65,0)
 K IBFAC,IBI,IBIL,IBRANGE,IBNOS,IBNUM,IBPT,IBQ,IBSEQNO,IBSERV,IBSITE
"RTN","IBNCPDPR",66,0)
 K IBTOTL,IBTRAN,IBWHER,VA,VAERR,VADM
"RTN","IBNCPDPR",67,0)
 K:'$D(PRCABN) DFN
"RTN","IBNCPDPR",68,0)
 ;***
"RTN","IBNCPDPR",69,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBRREL" D T1^%ZOSV ;stop rt clock
"RTN","IBNCPDPR",70,0)
 Q
"RTN","IBNCPDPR",71,0)
 ;
"RTN","IBNCPDPR",72,0)
 ;
"RTN","IBNCPDPR",73,0)
HDR ; Display charge header.
"RTN","IBNCPDPR",74,0)
 N IBLINE S $P(IBLINE,"=",81)=""
"RTN","IBNCPDPR",75,0)
 W !,IBLINE,!," REF   Action ID  Bill Type",?42,"Bill #",?51,"Fr/Fl Dt",?61,"To/Rls Dt",?73,"Charge"
"RTN","IBNCPDPR",76,0)
 W !,IBLINE Q
"RTN","IBNCPDPR",77,0)
 ;
"RTN","IBNCPDPR",78,0)
LST ; Display individual IB Action.
"RTN","IBNCPDPR",79,0)
 N IBND,IBND1,IBRXN,IBRX,IBRF,IBRDT,IENS
"RTN","IBNCPDPR",80,0)
 S IBND=$G(^IB(IBN,0)),IBND1=$G(^IB(IBN,1)),(IBRXN,IBRX,IBRF,IBRDT)=0
"RTN","IBNCPDPR",81,0)
 I $P(IBND,"^",4)["52:" S IBRXN=$P($P(IBND,"^",4),":",2),IBRX=$P($P(IBND,"^",8),"-"),IBRF=$P($P(IBND,"^",4),":",3)
"RTN","IBNCPDPR",82,0)
 I $P(IBND,"^",4)["52:"  D
"RTN","IBNCPDPR",83,0)
 .I IBRF>0 S IENS=+IBRF,IBRDT=$$SUBFILE^IBRXUTL(+IBRXN,+IENS,52,.01)
"RTN","IBNCPDPR",84,0)
 .E  S IENS=+IBRXN,IBRDT=$$FILE^IBRXUTL(+IENS,22)
"RTN","IBNCPDPR",85,0)
 W !?1,$J(IBNUM,2),?7,$J(+IBND,9)
"RTN","IBNCPDPR",86,0)
 W ?18,$S(IBRXN>0:"Rx #: "_IBRX_$S(IBRF>0:"("_IBRF_")",1:""),1:$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^",8))
"RTN","IBNCPDPR",87,0)
 W ?42,$P($P(IBND,"^",11),"-",2)
"RTN","IBNCPDPR",88,0)
 W ?51,$$DAT1^IBOUTL($S(IBRXN>0:IBRDT,1:$P(IBND,"^",14)))
"RTN","IBNCPDPR",89,0)
 W ?61,$$DAT1^IBOUTL($S($P(IBND,"^",15)'="":($P(IBND,"^",15)),1:$P(IBND1,"^",2)))
"RTN","IBNCPDPR",90,0)
 W ?70,$J(+$P(IBND,"^",7),9,2)
"RTN","IBNCPDPR",91,0)
 Q
"RTN","IBNCPDPR",92,0)
 ;
"RTN","IBNCPDPR",93,0)
ERR ; Display error message.
"RTN","IBNCPDPR",94,0)
 W !?1,$J(IBNUM,2),?7,"Error encountered - a separate bulletin has been posted"
"RTN","IBNCPDPR",95,0)
 Q
"RTN","IBNCPDPR",96,0)
 ;
"RTN","IBNCPDPR",97,0)
HLP ; Display basic help message.
"RTN","IBNCPDPR",98,0)
 W !!,"Enter:    the name of a patient with charges 'on hold,' or"
"RTN","IBNCPDPR",99,0)
 W !?10,"'??' --  to see all patients with charges 'on hold,' or"
"RTN","IBNCPDPR",100,0)
 W !?10,"'^'  --  to quit this option.",!
"RTN","IBNCPDPR",101,0)
 Q
"RTN","IBNCPDPR",102,0)
 ;
"RTN","IBNCPDPR",103,0)
HLP1 ; Display all patients with charges 'on hold.'
"RTN","IBNCPDPR",104,0)
 N DFN,I,IBQ,PID
"RTN","IBNCPDPR",105,0)
 W !!,"The following patients have charges 'on hold:'"
"RTN","IBNCPDPR",106,0)
 S (DFN,IBQ)=0 F I=1:1 S DFN=$O(^IB("AH",DFN)) Q:'DFN  D:'(I#15)  Q:IBQ  S PID=$$PT^IBEFUNC(DFN) W !?3,$P(PID,"^"),$J("",10),$P(PID,"^",2)
"RTN","IBNCPDPR",107,0)
 . R !,"Enter RETURN to continue or '^' to stop: ",X:DTIME S:X["^"!('$T) IBQ=1 Q
"RTN","IBNCPDPR",108,0)
 W ! Q
"RTN","IBNCPDPR",109,0)
 ;
"RTN","IBNCPDPR",110,0)
HELP ; Help for the 'Select' prompt.
"RTN","IBNCPDPR",111,0)
 W !!?4,"Please enter a list or range of IB Actions (i.e. 1,3,5 or 2-4,8), none"
"RTN","IBNCPDPR",112,0)
 W !?4,"greater than ",IBNUM-1,", to be passed to Accounts Receivable, or '^' to quit."
"RTN","IBNCPDPR",113,0)
 Q
"RTN","IBNCPDPR",114,0)
 ;
"RTN","IBNCPDPR",115,0)
 ;
"RTN","IBNCPDPR",116,0)
AR ; Accounts Receivable entry point to release charges.
"RTN","IBNCPDPR",117,0)
 ;   Input: PRCABN -- ien of Bill/Accounts Receivable
"RTN","IBNCPDPR",118,0)
 Q:$D(PRCABN)[0  Q:'$$IB^IBRUTL(PRCABN,1)  G RESUME
"RTN","IBNCPDPR",119,0)
 ;
"RTN","IBNCPDPU")
0^44^B59313586^B59250332
"RTN","IBNCPDPU",1,0)
IBNCPDPU ;OAK/ELZ - UTILITIES FOR NCPCP ;24-JUN-2003
"RTN","IBNCPDPU",2,0)
 ;;2.0;INTEGRATED BILLING;**223,276,347**;21-MAR-94;Build 24
"RTN","IBNCPDPU",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBNCPDPU",4,0)
 ;
"RTN","IBNCPDPU",5,0)
 ;NCPDP PHASE III
"RTN","IBNCPDPU",6,0)
 Q
"RTN","IBNCPDPU",7,0)
 ;IA 4702
"RTN","IBNCPDPU",8,0)
 ;
"RTN","IBNCPDPU",9,0)
 ;
"RTN","IBNCPDPU",10,0)
CT(DFN,IBRXN,IBFIL,IBADT,IBRMARK) ; files in claims tracking
"RTN","IBNCPDPU",11,0)
 ; Input:
"RTN","IBNCPDPU",12,0)
 ;  DFN - Patient IEN
"RTN","IBNCPDPU",13,0)
 ;  IBRXN - Rx IEN
"RTN","IBNCPDPU",14,0)
 ;  IBFIL - Fill#
"RTN","IBNCPDPU",15,0)
 ;  IBADT - Fill Date
"RTN","IBNCPDPU",16,0)
 ;  IBRMARK - Non-billable Reason (.01 from 356.8)
"RTN","IBNCPDPU",17,0)
 ;
"RTN","IBNCPDPU",18,0)
 N DIE,DR,DA,IBRXTYP,IBEABD
"RTN","IBNCPDPU",19,0)
 I IBTRKRN D:$D(IBRMARK)  Q
"RTN","IBNCPDPU",20,0)
 . S DIE="^IBT(356,",DA=IBTRKRN,DR=".19///"_IBRMARK D ^DIE
"RTN","IBNCPDPU",21,0)
 ; event type pointer for rx billing
"RTN","IBNCPDPU",22,0)
 S IBRXTYP=$O(^IBE(356.6,"AC",4,0))
"RTN","IBNCPDPU",23,0)
 ; earliest auto-billing date
"RTN","IBNCPDPU",24,0)
 S IBEABD=$$EABD^IBTUTL(IBRXTYP,$$FMADD^XLFDT(IBADT,60))
"RTN","IBNCPDPU",25,0)
 ; space out earliest auto bill date
"RTN","IBNCPDPU",26,0)
 D REFILL^IBTUTL1(DFN,IBRXTYP,IBADT,IBRXN,IBFIL,$G(IBRMARK),IBEABD)
"RTN","IBNCPDPU",27,0)
 Q
"RTN","IBNCPDPU",28,0)
 ;
"RTN","IBNCPDPU",29,0)
NDC(X) ; Massage the NDC as it is stored in Pharmacy
"RTN","IBNCPDPU",30,0)
 ;  Input:  X  --  The NDC as it is stored in Pharmacy
"RTN","IBNCPDPU",31,0)
 ; Output:  X  --  The NDC in the format 5N 1"-" 4N 1"-" 2N
"RTN","IBNCPDPU",32,0)
 ;
"RTN","IBNCPDPU",33,0)
 I $G(X)="" S X="" G NDCQ
"RTN","IBNCPDPU",34,0)
 ;
"RTN","IBNCPDPU",35,0)
 N LEN,PCE,Y,Z
"RTN","IBNCPDPU",36,0)
 ;
"RTN","IBNCPDPU",37,0)
 S Z(1)=5,Z(2)=4,Z(3)=2
"RTN","IBNCPDPU",38,0)
 S PCE=0 F  S PCE=$O(Z(PCE)) Q:'PCE  S LEN=Z(PCE) D
"RTN","IBNCPDPU",39,0)
 .S Y=$P(X,"-",PCE)
"RTN","IBNCPDPU",40,0)
 .I $L(Y)>LEN S Y=$E(Y,2,LEN+1)
"RTN","IBNCPDPU",41,0)
 .I $L(+Y)<LEN S Y=$$FILL(Y,LEN)
"RTN","IBNCPDPU",42,0)
 .S $P(X,"-",PCE)=Y
"RTN","IBNCPDPU",43,0)
 ;
"RTN","IBNCPDPU",44,0)
NDCQ Q X
"RTN","IBNCPDPU",45,0)
 ;
"RTN","IBNCPDPU",46,0)
FILL(X,LEN) ; Zero-fill, right justified.
"RTN","IBNCPDPU",47,0)
 N Y
"RTN","IBNCPDPU",48,0)
 S:'$G(LEN) LEN=1
"RTN","IBNCPDPU",49,0)
 S Y=$E($G(X),1,LEN)
"RTN","IBNCPDPU",50,0)
 F  Q:$L(Y)>(LEN-1)  S Y="0"_Y
"RTN","IBNCPDPU",51,0)
 Q Y
"RTN","IBNCPDPU",52,0)
 ;
"RTN","IBNCPDPU",53,0)
PLANN(DFN,IBX,IBADT) ; returns the ien in the insurance multiple for the given plan
"RTN","IBNCPDPU",54,0)
 ; /patient privided.
"RTN","IBNCPDPU",55,0)
 ;   ien in multiple^insurance co ien
"RTN","IBNCPDPU",56,0)
 N IBPOL,IBY,IBR
"RTN","IBNCPDPU",57,0)
 S IBR=""
"RTN","IBNCPDPU",58,0)
 D ALL^IBCNS1(DFN,"IBPOL",3,IBADT)
"RTN","IBNCPDPU",59,0)
 S IBY=0 F  S IBY=$O(IBPOL(IBY)) Q:IBY<1!(IBR)  I $P(IBPOL(IBY,0),"^",18)=IBX S IBR=$P(IBPOL(IBY,0),"^")_"^"_IBY
"RTN","IBNCPDPU",60,0)
 Q IBR
"RTN","IBNCPDPU",61,0)
 ;
"RTN","IBNCPDPU",62,0)
RT(DFN,IBINS,IBN) ; returns rate type to use for bill
"RTN","IBNCPDPU",63,0)
 ; pass in insurance by ref and which insurance entry to use
"RTN","IBNCPDPU",64,0)
 ; if '$d(ibn) then it loops through to find the first one
"RTN","IBNCPDPU",65,0)
 ; format is RT (ien) ^ Rate Type (Tort or Awp or Cost)
"RTN","IBNCPDPU",66,0)
 N VAEL,VAERR,IBPT,IBRT,IBX
"RTN","IBNCPDPU",67,0)
 D ELIG^VADPT
"RTN","IBNCPDPU",68,0)
 ;
"RTN","IBNCPDPU",69,0)
 ; if primary elig is vet type, use reimbursable
"RTN","IBNCPDPU",70,0)
 S IBPT=$P($G(^DIC(8,+VAEL(1),0)),"^",5) ; = N:NON-VETERAN;Y:VETERAN
"RTN","IBNCPDPU",71,0)
 I IBPT="Y" S IBRT=$O(^DGCR(399.3,"B","REIMBURSABLE INS.",0)) Q $S(IBRT:IBRT,1:8)_"^T"
"RTN","IBNCPDPU",72,0)
 ;
"RTN","IBNCPDPU",73,0)
 ;**** temp for initial testing only, we are not doing Tricare or Champva
"RTN","IBNCPDPU",74,0)
 Q $S($D(IBRT):IBRT,1:"0^unable to determine rate type")
"RTN","IBNCPDPU",75,0)
 ;
"RTN","IBNCPDPU",76,0)
 ; if primary elig is TRICARE/CHAMPUS use one of the champus', depending
"RTN","IBNCPDPU",77,0)
 ; on insurance coverage
"RTN","IBNCPDPU",78,0)
 I $P($G(^DIC(8.1,+$P($G(^DIC(8,+VAEL(3),0)),"^",9),0)),"^")="TRICARE/CHAMPUS" S IBRT=$$UINS("CHAMPUS",.IBINS,.IBN)
"RTN","IBNCPDPU",79,0)
 ;
"RTN","IBNCPDPU",80,0)
 ; if primary elig is CHAMPVA use one of the champva's, depending
"RTN","IBNCPDPU",81,0)
 ; on insurance coverage
"RTN","IBNCPDPU",82,0)
 I $P($G(^DIC(8.1,+$P($G(^DIC(8,+VAEL(3),0)),"^",9),0)),"^")="CHAMPVA" S IBRT=$$UINS("CHAMPVA",.IBINS,.IBN)
"RTN","IBNCPDPU",83,0)
 ;
"RTN","IBNCPDPU",84,0)
 Q $S($D(IBRT):IBRT,1:"0^unable to determine rate type")
"RTN","IBNCPDPU",85,0)
 ;
"RTN","IBNCPDPU",86,0)
 ;
"RTN","IBNCPDPU",87,0)
UINS(IBT,IBINS,IBN) ; in the case of tricare or champva you may have to use
"RTN","IBNCPDPU",88,0)
 ; insurance different rate types insted of the actual tricare or champva
"RTN","IBNCPDPU",89,0)
 N IBRT
"RTN","IBNCPDPU",90,0)
 S IBN=+$G(IBN,$O(IBINS("S",+$O(IBINS("S",0)),0)))
"RTN","IBNCPDPU",91,0)
 I $P($G(^IBE(355.1,+$P($G(IBINS(IBN,355.3)),"^",9),0)),"^")=IBT S IBRT=$O(^DGCR(399.3,"B",IBT,0)),IBRT=$S(IBRT:IBRT_"^"_$S(IBT="CHAMPUS":"A",1:"C"),1:"0^"_IBT_" Rate type not found")
"RTN","IBNCPDPU",92,0)
 I '$D(IBRT) S IBRT=$O(^DGCR(399.3,"B",IBT_" REIMB. INS.",0)),IBRT=$S(IBRT:IBRT_"^"_$S(IBT="CHAMPUS":"A",1:"C"),1:"0^"_IBT_" REIMB. INS. Rate type not found")
"RTN","IBNCPDPU",93,0)
 Q IBRT
"RTN","IBNCPDPU",94,0)
 ;
"RTN","IBNCPDPU",95,0)
BS() ; returns the mccr utility to use
"RTN","IBNCPDPU",96,0)
 N IBX
"RTN","IBNCPDPU",97,0)
 S IBX=0 F  S IBX=$O(^DGCR(399.1,"B","PRESCRIPTION",IBX)) Q:IBX<1  I $P($G(^DGCR(399.1,+$G(IBX),0)),U,5) Q
"RTN","IBNCPDPU",98,0)
 Q IBX
"RTN","IBNCPDPU",99,0)
 ;
"RTN","IBNCPDPU",100,0)
 ; Match IB Bill by the 7-digit ECME number
"RTN","IBNCPDPU",101,0)
RXBIL(IBINP,IBERR) ; Matching NCPDP payments
"RTN","IBNCPDPU",102,0)
 ;Input:
"RTN","IBNCPDPU",103,0)
 ;   IBINP("ECME") - the 7-digit ECME number (Reference Number)
"RTN","IBNCPDPU",104,0)
 ;   IBINP("FILLDT")  - the Rx fill date, YYYYMMDD or FileMan format
"RTN","IBNCPDPU",105,0)
 ;   IBINP("PNM") (optional) - the patient's last name
"RTN","IBNCPDPU",106,0)
 ;Returns:
"RTN","IBNCPDPU",107,0)
 ;   IBERR (by ref) - the error code, or null string if found
"RTN","IBNCPDPU",108,0)
 ;   $$RXBIL - IB Bill IEN, or 0 if not matched
"RTN","IBNCPDPU",109,0)
 N IBKEY,IBECME,BILLDA,IBFOUND,IBMATCH,IBDAT,IBPNAME
"RTN","IBNCPDPU",110,0)
 S IBERR=""
"RTN","IBNCPDPU",111,0)
 S IBECME=$G(IBINP("ECME"))
"RTN","IBNCPDPU",112,0)
 I IBECME'?1.7N S IBERR="Invalid ECME number" Q 0
"RTN","IBNCPDPU",113,0)
 S IBDAT=$G(IBINP("FILLDT")) ; Rx fill date
"RTN","IBNCPDPU",114,0)
 I IBDAT?8N S IBDAT=($E(IBDAT,1,4)-1700)_$E(IBDAT,5,8) ; conv date to FM format
"RTN","IBNCPDPU",115,0)
 I IBDAT'?7N Q $$RXBILND(IBECME)  ; date is not correct or null
"RTN","IBNCPDPU",116,0)
 S IBPNAME=$G(IBINP("PNM")) ; patient's name (optional)
"RTN","IBNCPDPU",117,0)
 S IBKEY=+IBECME_";"_IBDAT ; The ECME Number (BC ID)
"RTN","IBNCPDPU",118,0)
 S BILLDA="",IBFOUND=0,IBMATCH=0
"RTN","IBNCPDPU",119,0)
 ; Search backward
"RTN","IBNCPDPU",120,0)
 F  S BILLDA=$O(^DGCR(399,"AG",IBKEY,BILLDA),-1) Q:BILLDA=""  D  Q:IBFOUND
"RTN","IBNCPDPU",121,0)
 . I 'BILLDA Q  ; IEN must be numeric
"RTN","IBNCPDPU",122,0)
 . I '$D(^DGCR(399,BILLDA,0)) Q  ; Corrupted index
"RTN","IBNCPDPU",123,0)
 . S IBMATCH=1
"RTN","IBNCPDPU",124,0)
 . I IBPNAME'="" I '$$TXMATCH($P(IBPNAME,","),$P($G(^DPT(+$P(^DGCR(399,BILLDA,0),U,2),0)),","),8) Q  ; Patient name doesn't match
"RTN","IBNCPDPU",125,0)
 . S IBFOUND=1
"RTN","IBNCPDPU",126,0)
 I 'BILLDA S IBERR=$S(IBMATCH:"Patient's name does not match",1:"Matching bill not found") ; not matched
"RTN","IBNCPDPU",127,0)
 Q +BILLDA
"RTN","IBNCPDPU",128,0)
 ;
"RTN","IBNCPDPU",129,0)
RXBILND(IBECME) ;Match the bill with no date
"RTN","IBNCPDPU",130,0)
 N IBKEY,IBBC,BILLDA,IBY,IBCUT
"RTN","IBNCPDPU",131,0)
 S IBKEY=+IBECME_";"
"RTN","IBNCPDPU",132,0)
 S IBCUT=$$FMADD^XLFDT(DT,-180) ; only 180 days in the past
"RTN","IBNCPDPU",133,0)
 S BILLDA=0
"RTN","IBNCPDPU",134,0)
 ; Search PRNT/TX forward
"RTN","IBNCPDPU",135,0)
 S IBBC=IBKEY_IBCUT
"RTN","IBNCPDPU",136,0)
 F  S IBBC=$O(^DGCR(399,"AG",IBBC)) Q:IBBC'[IBKEY  D  Q:BILLDA
"RTN","IBNCPDPU",137,0)
 . S IBY="" F  S IBY=$O(^DGCR(399,"AG",IBBC,IBY)) Q:'IBY  D  Q:BILLDA
"RTN","IBNCPDPU",138,0)
 .. I $P($G(^DGCR(399,+IBY,0)),U,13)'=4 Q  ; not PRNT/TX
"RTN","IBNCPDPU",139,0)
 .. S BILLDA=+IBY
"RTN","IBNCPDPU",140,0)
 I BILLDA Q BILLDA
"RTN","IBNCPDPU",141,0)
 ; Search ANY backward
"RTN","IBNCPDPU",142,0)
 S IBBC=IBKEY_"8000000"
"RTN","IBNCPDPU",143,0)
 F  S IBBC=$O(^DGCR(399,"AG",IBBC),-1) Q:IBBC'[IBKEY  Q:$P(IBBC,";",2)<IBCUT  D  Q:BILLDA
"RTN","IBNCPDPU",144,0)
 . S IBY="" F  S IBY=$O(^DGCR(399,"AG",IBBC,IBY),-1) Q:IBY=""  D  Q:BILLDA
"RTN","IBNCPDPU",145,0)
 .. ;I $P($G(^DGCR(399,+IBY,0)),U,13)'=7 Q  ; not CANCELLED
"RTN","IBNCPDPU",146,0)
 .. S BILLDA=+IBY
"RTN","IBNCPDPU",147,0)
 Q BILLDA
"RTN","IBNCPDPU",148,0)
 ;
"RTN","IBNCPDPU",149,0)
 ;Check matching of two strings - case insensitive, no spaces etc.
"RTN","IBNCPDPU",150,0)
TXMATCH(IBTXT1,IBTXT2,IBMAX) ;
"RTN","IBNCPDPU",151,0)
 N IBTR1,IBTR2,IBT1,IBT2
"RTN","IBNCPDPU",152,0)
 ;Checking only first IBMAX characters (long names may be trancated
"RTN","IBNCPDPU",153,0)
 S IBTR1="ABCDEFGHIJKLMNOPQRSTUVWXYZ:;"",'._()<>/\|@#$%&*-=!`~ "
"RTN","IBNCPDPU",154,0)
 S IBTR2="abcdefghijklmnopqrstuvwxyz"
"RTN","IBNCPDPU",155,0)
 S IBT1=$E($TR(IBTXT1,IBTR1,IBTR2),1,IBMAX)
"RTN","IBNCPDPU",156,0)
 S IBT2=$E($TR(IBTXT2,IBTR1,IBTR2),1,IBMAX)
"RTN","IBNCPDPU",157,0)
 Q IBT1=IBT2
"RTN","IBNCPDPU",158,0)
 ;
"RTN","IBNCPDPU",159,0)
ECMEBIL(DFN,IBADT) ; Is the pat ECME Billable (pharmacy coverage only)
"RTN","IBNCPDPU",160,0)
 ; DFN - ptr to the patient
"RTN","IBNCPDPU",161,0)
 ; IBADT  - the date
"RTN","IBNCPDPU",162,0)
 N IBANY,IBERMSG,IBX,IBINS,IBT,IBZ,IBRES,IBCAT,IBCOV,IBPCOV
"RTN","IBNCPDPU",163,0)
 S IBRES=0 ; Not ECME Billable by default
"RTN","IBNCPDPU",164,0)
 S (IBCOV,IBPCOV)=0
"RTN","IBNCPDPU",165,0)
 ; -- look up ins with Rx 
"RTN","IBNCPDPU",166,0)
 D ALL^IBCNS1(DFN,"IBINS",1,IBADT,1)
"RTN","IBNCPDPU",167,0)
 S IBERMSG="" ; Error message
"RTN","IBNCPDPU",168,0)
 S IBCAT=$O(^IBE(355.31,"B","PHARMACY",0))
"RTN","IBNCPDPU",169,0)
 S IBX=0 F  S IBX=$O(IBINS("S",IBX)) Q:'IBX  D  Q:IBRES
"RTN","IBNCPDPU",170,0)
 . S IBT=0 F  S IBT=$O(IBINS("S",IBX,IBT)) Q:'IBT  D  Q:IBRES
"RTN","IBNCPDPU",171,0)
 . . N IBZ,IBPIEN,IBY,IBPL
"RTN","IBNCPDPU",172,0)
 . . S IBZ=$G(IBINS(IBT,0))
"RTN","IBNCPDPU",173,0)
 . . S IBPL=+$P(IBZ,U,18) Q:'IBPL
"RTN","IBNCPDPU",174,0)
 . . S IBCOV=1 ; covered
"RTN","IBNCPDPU",175,0)
 . . I '$$PLCOV^IBCNSU3(IBPL,IBADT,IBCAT) Q
"RTN","IBNCPDPU",176,0)
 . . S IBPCOV=1
"RTN","IBNCPDPU",177,0)
 . . S IBPIEN=+$G(^IBA(355.3,IBPL,6))
"RTN","IBNCPDPU",178,0)
 . . I 'IBPIEN S IBERMSG="Plan not linked to the Payer" Q  ; Not linked
"RTN","IBNCPDPU",179,0)
 . . D STCHK^IBCNRU1(IBPIEN,.IBY)
"RTN","IBNCPDPU",180,0)
 . . I $E($G(IBY(1)))'="A" S:IBERMSG="" IBERMSG=$$ERMSG^IBNCPDP1($P($G(IBY(6)),",")) Q
"RTN","IBNCPDPU",181,0)
 . . S IBRES=1
"RTN","IBNCPDPU",182,0)
 I 'IBCOV Q "0^Not Insured"
"RTN","IBNCPDPU",183,0)
 I 'IBPCOV Q "0^No Pharmacy Coverage"
"RTN","IBNCPDPU",184,0)
 I 'IBRES,IBERMSG'="" Q "0^"_IBERMSG
"RTN","IBNCPDPU",185,0)
 I 'IBRES Q "0^No Insurance ECME billable"
"RTN","IBNCPDPU",186,0)
 ;
"RTN","IBNCPDPU",187,0)
 Q IBRES
"RTN","IBNCPDPU",188,0)
 ;
"RTN","IBNCPDPU",189,0)
SUBMIT(IBRX,IBFIL) ; Submit the Rx claim through ECME
"RTN","IBNCPDPU",190,0)
 ; IBRX - RX ien in file #52
"RTN","IBNCPDPU",191,0)
 ; IBFIL - Fill No (0 for orig fill)
"RTN","IBNCPDPU",192,0)
 N IBDT,IBNDC,IBX
"RTN","IBNCPDPU",193,0)
 I '$G(IBRX)!('$D(IBFIL)) Q "0^Invalid parameters."
"RTN","IBNCPDPU",194,0)
 S IBDT=$S('IBFIL:$$FILE^IBRXUTL(IBRX,22),1:$$SUBFILE^IBRXUTL(IBRX,IBFIL,52,.01))
"RTN","IBNCPDPU",195,0)
 S IBX=$$EN^BPSNCPDP(+IBRX,+IBFIL,IBDT,"BB")
"RTN","IBNCPDPU",196,0)
 I +IBX=0 D ECMEACT^PSOBPSU1(+IBRX,+IBFIL,"Claim submitted to 3rd party payer: IB BACK BILLING")
"RTN","IBNCPDPU",197,0)
 Q IBX
"RTN","IBNCPDPU",198,0)
 ;
"RTN","IBNCPDPU",199,0)
REASON(IBX,EXACT) ; Close Claim Reasons
"RTN","IBNCPDPU",200,0)
 Q $P($G(^IBE(356.8,+IBX,0)),U) ; non-billable reason
"RTN","IBNCPDPU",201,0)
 ;
"RTN","IBNCPDPU",202,0)
NABP(IBIFN) ;NABP Number
"RTN","IBNCPDPU",203,0)
 N IBY,IBTRKN,IBRX,IBFIL,IBZ,IBNABP
"RTN","IBNCPDPU",204,0)
 S IBY=+$O(^IBT(356.399,"C",IBIFN,0)) I 'IBY Q ""
"RTN","IBNCPDPU",205,0)
 S IBTRKN=$P($G(^IBT(356.399,IBY,0)),U) I 'IBTRKN Q ""
"RTN","IBNCPDPU",206,0)
 S IBZ=$G(^IBT(356,IBTRKN,0)) I IBZ="" Q ""
"RTN","IBNCPDPU",207,0)
 S IBRX=$P(IBZ,U,8)
"RTN","IBNCPDPU",208,0)
 S IBFIL=$P(IBZ,U,10)
"RTN","IBNCPDPU",209,0)
 S IBNABP=$$NABP^BPSBUTL(IBRX,IBFIL)
"RTN","IBNCPDPU",210,0)
 Q $S(IBNABP=0:"",1:IBNABP)
"RTN","IBNCPDPU",211,0)
 ;
"RTN","IBNCPDPU",212,0)
 ; Get the K-bill# from CT
"RTN","IBNCPDPU",213,0)
BILL(IBRX,IBFIL) ;
"RTN","IBNCPDPU",214,0)
 N IBTRKN,IBIFN
"RTN","IBNCPDPU",215,0)
 S IBTRKN=+$O(^IBT(356,"ARXFL",+$G(IBRX),+$G(IBFIL),""))
"RTN","IBNCPDPU",216,0)
 S IBIFN=+$P($G(^IBT(356,IBTRKN,0)),U,11)
"RTN","IBNCPDPU",217,0)
 Q $P($G(^DGCR(399,IBIFN,0)),U)
"RTN","IBNCPDPU",218,0)
 ;
"RTN","IBNCPDPU",219,0)
REJECT(IBECME,IBDATE) ; Is the e-claim rejected?
"RTN","IBNCPDPU",220,0)
 N IBINP,IBTRKRN,IBY
"RTN","IBNCPDPU",221,0)
 I IBECME'?1.7N Q 0
"RTN","IBNCPDPU",222,0)
 ;S IBINP("ECME")=IBECME
"RTN","IBNCPDPU",223,0)
 ;S IBINP("FILLDT")=IBDATE
"RTN","IBNCPDPU",224,0)
 ;I $$RXBIL(.IBINP) Q 0  ; bill exists
"RTN","IBNCPDPU",225,0)
 S IBTRKRN=+$O(^IBT(356,"AE",IBECME,0)) I 'IBTRKRN Q 0
"RTN","IBNCPDPU",226,0)
 S IBY=$G(^IBT(356,IBTRKRN,1))
"RTN","IBNCPDPU",227,0)
 I $P(IBY,U,11)>0 Q 1  ; Rejected or closed
"RTN","IBNCPDPU",228,0)
 Q 0
"RTN","IBNCPDPU",229,0)
 ;
"RTN","IBNCPDPU",230,0)
 ;
"RTN","IBNCPDPU",231,0)
 ;IBNCPDPU
"RTN","IBNCPEB")
0^45^B28185262^B25550057
"RTN","IBNCPEB",1,0)
IBNCPEB ;WOIFO/AAT - BULLETINS FOR NCPDP ;05-NOV-04
"RTN","IBNCPEB",2,0)
 ;;2.0;INTEGRATED BILLING;**276,342,347**;21-MAR-94;Build 24
"RTN","IBNCPEB",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBNCPEB",4,0)
 Q
"RTN","IBNCPEB",5,0)
 ;
"RTN","IBNCPEB",6,0)
BULL(DFN,IBD,IBERR,IBIFN) ;Process NCPDP Error Messages.
"RTN","IBNCPEB",7,0)
 N IBC,IBT,IBPT,XMSUB,XMY,XMTEXT,XMDUZ,IBMSGT,IBI,IBGRP,IBDUZ,IBRXNO,DRGNM
"RTN","IBNCPEB",8,0)
 ; Input: same as RX^IBNCPDP2()
"RTN","IBNCPEB",9,0)
 ;
"RTN","IBNCPEB",10,0)
 S IBDUZ=$G(IBD("FILLED BY"))
"RTN","IBNCPEB",11,0)
 S IBRXNO=$G(IBD("RX NO"),"UNKNOWN")
"RTN","IBNCPEB",12,0)
 S IBPT=$$PT^IBEFUNC(DFN)
"RTN","IBNCPEB",13,0)
 S XMSUB="NCPDP BILLING ERROR - RX #"_IBRXNO
"RTN","IBNCPEB",14,0)
 S IBC=0
"RTN","IBNCPEB",15,0)
 D T("An error occurred while creating IB Third Party Bill for RX #"_IBRXNO)
"RTN","IBNCPEB",16,0)
 I $G(IBIFN) D T("IB Bill #"_$P($G(^DGCR(399,+IBIFN,0)),U)_" created with errors.")
"RTN","IBNCPEB",17,0)
 D T()
"RTN","IBNCPEB",18,0)
 D T("The following error was encountered: "_$P(IBERR,U,2))
"RTN","IBNCPEB",19,0)
 D T()
"RTN","IBNCPEB",20,0)
 D T("      Patient: "_$S($L(IBPT):$P(IBPT,U)_"       Pt. ID: "_$P(IBPT,U,2),1:"Not Defined"))
"RTN","IBNCPEB",21,0)
 D T(" Rx filled by: "_$P($G(^VA(200,+IBDUZ,0)),U))
"RTN","IBNCPEB",22,0)
 D T(" Prescription: "_IBRXNO)
"RTN","IBNCPEB",23,0)
 D T("  Fill Number: "_$G(IBD("FILL NUMBER")))
"RTN","IBNCPEB",24,0)
 D T("    Fill Date: "_$G(IBD("FILL DATE")))
"RTN","IBNCPEB",25,0)
 D T("   Group Plan: "_$P($G(^IBA(355.3,+$G(IBD("PLAN")),0)),U)_"  (IEN="_+$G(IBD("PLAN"))_")")
"RTN","IBNCPEB",26,0)
 D ZERO^IBRXUTL(+$G(IBD("DRUG"))) S DRGNM=^TMP($J,"IBDRUG",+$G(IBD("DRUG")),.01)
"RTN","IBNCPEB",27,0)
 D T("         Drug: "_DRGNM)
"RTN","IBNCPEB",28,0)
 D T("Amount Billed: "_$J($G(IBD("BILLED")),5,2))
"RTN","IBNCPEB",29,0)
 D T("  Amount Paid: "_$J($G(IBD("PAID")),5,2))
"RTN","IBNCPEB",30,0)
 D T()
"RTN","IBNCPEB",31,0)
 D T("Please review the circumstances surrounding this error and make necessary")
"RTN","IBNCPEB",32,0)
 D T("corrections.")
"RTN","IBNCPEB",33,0)
 S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
"RTN","IBNCPEB",34,0)
 S XMY("G.IB ERROR")=""
"RTN","IBNCPEB",35,0)
 D ZXMD
"RTN","IBNCPEB",36,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBNCPEB",37,0)
 Q
"RTN","IBNCPEB",38,0)
 ;
"RTN","IBNCPEB",39,0)
 ;call mailman in background (using taskman)
"RTN","IBNCPEB",40,0)
ZXMD ;
"RTN","IBNCPEB",41,0)
 N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC
"RTN","IBNCPEB",42,0)
 N %,%H,%I,X
"RTN","IBNCPEB",43,0)
 D NOW^%DTC
"RTN","IBNCPEB",44,0)
 S ZTIO="",ZTDTH=%,ZTDESC="NCPDP BILLING ERROR BULLETIN"
"RTN","IBNCPEB",45,0)
 S ZTSAVE("IBT*")="",ZTSAVE("XM*")=""
"RTN","IBNCPEB",46,0)
 S ZTRTN="^XMD"
"RTN","IBNCPEB",47,0)
 D ^%ZTLOAD
"RTN","IBNCPEB",48,0)
 Q
"RTN","IBNCPEB",49,0)
 ;
"RTN","IBNCPEB",50,0)
T(IBTXT) ; Add text to the message
"RTN","IBNCPEB",51,0)
 S IBC=IBC+1,IBT(IBC)=$G(IBTXT," ")
"RTN","IBNCPEB",52,0)
 Q
"RTN","IBNCPEB",53,0)
 ;
"RTN","IBNCPEB",54,0)
 ;-------------------------
"RTN","IBNCPEB",55,0)
 ;Release charges off hold bulletin
"RTN","IBNCPEB",56,0)
RELBUL(DFN,IBRX,IBFIL,IBADT,IBACT,IBCR,IBCC,IBIFN,IBRETR) ;
"RTN","IBNCPEB",57,0)
 ; Input:
"RTN","IBNCPEB",58,0)
 ;   DFN - Patient
"RTN","IBNCPEB",59,0)
 ;   IBRX - Rx IEN
"RTN","IBNCPEB",60,0)
 ;   IBFIL - Refill#
"RTN","IBNCPEB",61,0)
 ;   IBADT - Fill date
"RTN","IBNCPEB",62,0)
 ;   IBACT
"RTN","IBNCPEB",63,0)
 ;    -1  if ^IBR error - when the charge was sent to AR
"RTN","IBNCPEB",64,0)
 ;    0   == charge was not found 
"RTN","IBNCPEB",65,0)
 ;   IBCR - Close Reason code (.01 of BPS CLOSE REASON)
"RTN","IBNCPEB",66,0)
 ;   IBCC - Close Reason Comment
"RTN","IBNCPEB",67,0)
 ;   IBIFN - 3rd party bill IEN
"RTN","IBNCPEB",68,0)
 ;   IBRETR - attempt # after which a bulletion was sent
"RTN","IBNCPEB",69,0)
 N IBT,IBC,IBGRP,XMSUB,XMDUZ,XMY,XMTEXT,VAERR,VADM,X,VA
"RTN","IBNCPEB",70,0)
 N IBNAME,IBAGE,IBPID,IBBID,IBRXN
"RTN","IBNCPEB",71,0)
 D DEM^VADPT ; get patient demographic data
"RTN","IBNCPEB",72,0)
 I VAERR K VADM
"RTN","IBNCPEB",73,0)
 S IBNAME=$$PR($G(VADM(1)),26)
"RTN","IBNCPEB",74,0)
 S IBAGE=$$PR($G(VADM(4)),3)
"RTN","IBNCPEB",75,0)
 S IBPID=$G(VA("PID"))
"RTN","IBNCPEB",76,0)
 S IBBID=$G(VA("BID"))
"RTN","IBNCPEB",77,0)
 S XMSUB=$E(IBNAME,1,8)_"("_IBBID_")"_" PATIENT CHRG NOT RELEASED"_"-"_$E($$MCDIV(IBRX,IBFIL),1,11)
"RTN","IBNCPEB",78,0)
 ;
"RTN","IBNCPEB",79,0)
 S IBC=0
"RTN","IBNCPEB",80,0)
 ;include a standard CHRG NOT RELEASED text
"RTN","IBNCPEB",81,0)
 D T("The following charge has not been released from HOLD. Copay was not released")
"RTN","IBNCPEB",82,0)
 D T("due to technical problems"_$S($G(IBACT)=-1:" with passing the payment to AR.",1:"."))
"RTN","IBNCPEB",83,0)
 D T("Please review manually and release if necessary.")
"RTN","IBNCPEB",84,0)
 ;if release of copay attempt was due to claim closing process - include a close reason
"RTN","IBNCPEB",85,0)
 I IBCR D T("Note: the e-pharmacy claim was closed by OPECC as '"_$$REASON^IBNCPDPU(IBCR)_"'")
"RTN","IBNCPEB",86,0)
 I $G(IBCC)'="" D T("Additional comment: "_IBCC)
"RTN","IBNCPEB",87,0)
 D T()
"RTN","IBNCPEB",88,0)
 D T("Name: "_IBNAME_"   Age    : "_IBAGE_"       Pt. ID: "_IBPID)
"RTN","IBNCPEB",89,0)
 S IBRXN=$$FILE^IBRXUTL(IBRX,.01)
"RTN","IBNCPEB",90,0)
 D T("Rx #: "_$$PR(IBRXN_$S(IBFIL:" ("_IBFIL_")",1:""),28)_" Fill Dt: "_$$DAT1^IBOUTL(IBADT))
"RTN","IBNCPEB",91,0)
 D T()
"RTN","IBNCPEB",92,0)
 D:$G(IBRETR)>0 T("Attempts to release a copay from hold: "_$G(IBRETR))
"RTN","IBNCPEB",93,0)
 ;D CHRG
"RTN","IBNCPEB",94,0)
 ; Transmit mail
"RTN","IBNCPEB",95,0)
 S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
"RTN","IBNCPEB",96,0)
 S IBGRP=$P($G(^XMB(3.8,+$P($G(^IBE(350.9,1,0)),U,11),0)),U)
"RTN","IBNCPEB",97,0)
 I IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
"RTN","IBNCPEB",98,0)
 D ^XMD
"RTN","IBNCPEB",99,0)
 Q
"RTN","IBNCPEB",100,0)
 ;
"RTN","IBNCPEB",101,0)
CHRG ; gets charge data and sets up charge lines
"RTN","IBNCPEB",102,0)
 N IBTYP,IBFR,IBTO,IBX,IBX1,IBRXN,IBRF,IENS
"RTN","IBNCPEB",103,0)
 S IBX=$G(^IB(IBACT,0))
"RTN","IBNCPEB",104,0)
 S IBX1=$G(^IB(IBACT,1))
"RTN","IBNCPEB",105,0)
 S IBFR=$$DAT1^IBOUTL($S($P(IBX,U,14)'="":($P(IBX,U,14)),1:$P(IBX1,U,2)))
"RTN","IBNCPEB",106,0)
 S IBTO=$$DAT1^IBOUTL($S($P(IBX,U,15)'="":($P(IBX,U,15)),1:$P(IBX1,U,2)))
"RTN","IBNCPEB",107,0)
 S IBRXN=$$FILE^IBRXUTL(IBRX,.01) ;$P($P(IBX,U,8),"-")
"RTN","IBNCPEB",108,0)
 S IBTYP=$P(IBX,U,3)
"RTN","IBNCPEB",109,0)
 S:IBTYP IBTYP=$P($G(^IBE(350.1,IBTYP,0)),U,3)
"RTN","IBNCPEB",110,0)
 S:IBTYP IBTYP=$P($$CATN^PRCAFN(IBTYP),U,2)
"RTN","IBNCPEB",111,0)
 D T("Type: "_$$PR(IBTYP,28)_" Amount : $"_$J(+$P(IBX,U,7),0,2))
"RTN","IBNCPEB",112,0)
 D T("From: "_$$PR(IBFR,28)_" To     : "_IBTO)
"RTN","IBNCPEB",113,0)
 D T("Rx #: "_$$PR(IBRXN_$S(IBFIL:" ("_IBFIL_")",1:""),28)_" Fill Dt: "_$$DAT1^IBOUTL(IBADT))
"RTN","IBNCPEB",114,0)
 D T()
"RTN","IBNCPEB",115,0)
 D T("REFERENCE NUMBER : "_$P(IBX,U))
"RTN","IBNCPEB",116,0)
 D T("FIRST PARTY BILL : "_$P(IBX,U,11))
"RTN","IBNCPEB",117,0)
 I $G(IBIFN) D T("THIRD PARTY BILL : "_$P($G(^PRCA(430,+IBIFN,0)),U))
"RTN","IBNCPEB",118,0)
 Q
"RTN","IBNCPEB",119,0)
 ;
"RTN","IBNCPEB",120,0)
PR(STR,LEN) ; pad right
"RTN","IBNCPEB",121,0)
 N B S STR=$E(STR,1,LEN),$P(B," ",LEN-$L(STR))=" "
"RTN","IBNCPEB",122,0)
 Q STR_$G(B)
"RTN","IBNCPEB",123,0)
 ;
"RTN","IBNCPEB",124,0)
 ;MC Division for the IB
"RTN","IBNCPEB",125,0)
MCDIV(IBRX,IBFIL) ; Get MC DIVISION name from the Rx/Fill
"RTN","IBNCPEB",126,0)
 N IBDIV,IBINST,IBMCDIV,IBNAM,IBUNK,PSOFILE,DIR,DIQ,DA,DR,DFN,DIC
"RTN","IBNCPEB",127,0)
 S IBUNK="DIV UNKNWN"
"RTN","IBNCPEB",128,0)
 ; outpatient division
"RTN","IBNCPEB",129,0)
 S DFN=$$FILE^IBRXUTL(IBRX,2)
"RTN","IBNCPEB",130,0)
 I '$G(IBFIL) S IBDIV=$$FILE^IBRXUTL(IBRX,20)
"RTN","IBNCPEB",131,0)
 E  S IBDIV=+$P($$ZEROSUB^IBRXUTL(DFN,IBRX,IBFIL),U,9)
"RTN","IBNCPEB",132,0)
 I 'IBDIV Q IBUNK
"RTN","IBNCPEB",133,0)
 ; related institution
"RTN","IBNCPEB",134,0)
 S PSOFILE=59,DIC=59,DIQ="IBRXARR",DIQ(0)="I",DA=IBDIV,DR=100
"RTN","IBNCPEB",135,0)
 D DIQ^PSODI(PSOFILE,DIC,DR,DA,.DIQ)
"RTN","IBNCPEB",136,0)
 S IBINST=$G(IBRXARR(59,DA,100,"I")) Q:'IBINST IBUNK
"RTN","IBNCPEB",137,0)
 S IBMCDIV=+$O(^DG(40.8,"AD",IBINST,0)) ; medical center division
"RTN","IBNCPEB",138,0)
 I 'IBMCDIV Q IBUNK
"RTN","IBNCPEB",139,0)
 S IBNAM=$P($G(^DG(40.8,IBMCDIV,0)),U)
"RTN","IBNCPEB",140,0)
 K IBRXARR,PSODIY
"RTN","IBNCPEB",141,0)
 Q $S(IBNAM="":IBUNK,1:IBNAM)
"RTN","IBNCPEB",142,0)
 ;
"RTN","IBNCPEB",143,0)
 ;IBNCPEB
"RTN","IBNCPRR")
0^46^B97669056^B91643429
"RTN","IBNCPRR",1,0)
IBNCPRR ;DALOI/AAT - Prescription Report for 3rd Party Billing cross check ;07/21/04
"RTN","IBNCPRR",2,0)
 ;;2.0;INTEGRATED BILLING;**276,347**;21-MAR-94;Build 24
"RTN","IBNCPRR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBNCPRR",4,0)
 ;
"RTN","IBNCPRR",5,0)
EN ;
"RTN","IBNCPRR",6,0)
 N IBQ,IBSITE,IBWMC,IBENB,IBBDT,IBEDT,IBINS,IBSDE,IBSCR
"RTN","IBNCPRR",7,0)
 S IBQ=0 ; quit flag
"RTN","IBNCPRR",8,0)
 ; Prompts to the user:
"RTN","IBNCPRR",9,0)
 D DIV Q:IBQ  ; Division
"RTN","IBNCPRR",10,0)
 D WMC Q:IBQ  ; W/M/C criteria
"RTN","IBNCPRR",11,0)
 D ENB Q:IBQ  ; ECME/NON-ECME/BOTH criteria
"RTN","IBNCPRR",12,0)
 D DATE Q:IBQ  ; From-To date range
"RTN","IBNCPRR",13,0)
 D INS Q:IBQ  ; Insurance company
"RTN","IBNCPRR",14,0)
 D SDE Q:IBQ  ; Summary/Detailed/Excel criteria
"RTN","IBNCPRR",15,0)
 D DEVICE Q:IBQ
"RTN","IBNCPRR",16,0)
 D RUN
"RTN","IBNCPRR",17,0)
 I IBQ'=2 D PAUSE2
"RTN","IBNCPRR",18,0)
 Q
"RTN","IBNCPRR",19,0)
 ;
"RTN","IBNCPRR",20,0)
DIV N DIC,DIRUT
"RTN","IBNCPRR",21,0)
 W ! S DIC("A")="Division: ",DIC=59,DIC(0)="AEQM" D DIC^PSODI(59,.DIC,) S IBSITE=+Y K Y
"RTN","IBNCPRR",22,0)
 I $D(DIRUT) S IBQ=1 Q
"RTN","IBNCPRR",23,0)
 I IBSITE'>0 S IBQ=1 Q
"RTN","IBNCPRR",24,0)
 I $G(PSODIY) K PSODIY
"RTN","IBNCPRR",25,0)
 Q
"RTN","IBNCPRR",26,0)
 ;
"RTN","IBNCPRR",27,0)
WMC N DIR,DIRUT,Y
"RTN","IBNCPRR",28,0)
 W ! S DIR("B")="CMOP",DIR("A")="(W)INDOW/(M)AIL/(C)MOP: "
"RTN","IBNCPRR",29,0)
 S DIR(0)="SA^W:WINDOW;M:MAIL;C:CMOP" D ^DIR
"RTN","IBNCPRR",30,0)
 I $D(DIRUT) S IBQ=1 Q
"RTN","IBNCPRR",31,0)
 S IBWMC=Y
"RTN","IBNCPRR",32,0)
 Q
"RTN","IBNCPRR",33,0)
 ;
"RTN","IBNCPRR",34,0)
ENB N DIR,DIRUT,Y
"RTN","IBNCPRR",35,0)
 W ! S DIR("B")="ECME BILLABLE",DIR("A")="(E)CME Billable/(N)on-ECME Billable/(B)OTH: "
"RTN","IBNCPRR",36,0)
 S DIR(0)="SA^E:ECME BILLABLE;N:NON-ECME BILLABLE;B:BOTH" D ^DIR
"RTN","IBNCPRR",37,0)
 I $D(DIRUT) S IBQ=1 Q
"RTN","IBNCPRR",38,0)
 S IBENB=Y
"RTN","IBNCPRR",39,0)
 Q
"RTN","IBNCPRR",40,0)
 ;
"RTN","IBNCPRR",41,0)
DATE ;
"RTN","IBNCPRR",42,0)
 N %DT,Y
"RTN","IBNCPRR",43,0)
 S (IBBDT,IBEDT)=DT
"RTN","IBNCPRR",44,0)
 S %DT="AEX"
"RTN","IBNCPRR",45,0)
 S %DT("A")="FROM RELEASE DATE: ",%DT("B")="TODAY"
"RTN","IBNCPRR",46,0)
 W ! D ^%DT K %DT
"RTN","IBNCPRR",47,0)
 I Y<0 S IBQ=1 Q
"RTN","IBNCPRR",48,0)
 S IBBDT=+Y
"RTN","IBNCPRR",49,0)
 S %DT="AEX"
"RTN","IBNCPRR",50,0)
 S %DT("A")="TO RELEASE DATE: ",%DT("B")="TODAY" ;$$DAT2^IBOUTL(IBBDT)
"RTN","IBNCPRR",51,0)
 D ^%DT K %DT
"RTN","IBNCPRR",52,0)
 I Y<0 S IBQ=1 Q
"RTN","IBNCPRR",53,0)
 S IBEDT=+Y
"RTN","IBNCPRR",54,0)
 Q
"RTN","IBNCPRR",55,0)
 ;
"RTN","IBNCPRR",56,0)
INS N DIR,DIC,DIRUT,Y
"RTN","IBNCPRR",57,0)
 W ! S DIR("B")="ALL",DIR("A")="(S)INGLE Insurance Company /(A)LL Insurance Companies: "
"RTN","IBNCPRR",58,0)
 S DIR(0)="SA^S:SINGLE INSURANCE COMPANY;A:ALL" D ^DIR
"RTN","IBNCPRR",59,0)
 I $D(DIRUT) S IBQ=1 Q
"RTN","IBNCPRR",60,0)
 I Y="A" S IBINS=0 Q
"RTN","IBNCPRR",61,0)
 ;
"RTN","IBNCPRR",62,0)
 S DIC(0)="AEQM",DIC=36
"RTN","IBNCPRR",63,0)
 W ! D ^DIC
"RTN","IBNCPRR",64,0)
 I $D(DIRUT) S IBQ=1 Q
"RTN","IBNCPRR",65,0)
 I Y'>0 S IBQ=1 Q
"RTN","IBNCPRR",66,0)
 S IBINS=+Y
"RTN","IBNCPRR",67,0)
 Q
"RTN","IBNCPRR",68,0)
 ;
"RTN","IBNCPRR",69,0)
SDE N DIR,DIRUT
"RTN","IBNCPRR",70,0)
 S DIR("B")="SUMMARY",DIR("A")="(S)UMMARY/(D)ETAILED/(E)XCEL: "
"RTN","IBNCPRR",71,0)
 S DIR(0)="SA^S:SUMMARY;D:DETAILED;E:EXCEL"
"RTN","IBNCPRR",72,0)
 W ! D ^DIR
"RTN","IBNCPRR",73,0)
 I $D(DIRUT) S IBQ=1 Q
"RTN","IBNCPRR",74,0)
 S IBSDE=Y
"RTN","IBNCPRR",75,0)
 Q
"RTN","IBNCPRR",76,0)
 ;
"RTN","IBNCPRR",77,0)
DEVICE ;
"RTN","IBNCPRR",78,0)
 N %ZIS,ZTSK,ZTRTN,ZTIO,ZTDESC,POP,ZTSAVE
"RTN","IBNCPRR",79,0)
 S %ZIS="QM"
"RTN","IBNCPRR",80,0)
 W ! D ^%ZIS
"RTN","IBNCPRR",81,0)
 I POP S IBQ=1 Q
"RTN","IBNCPRR",82,0)
 S IBSCR=$S($E($G(IOST),1,2)="C-":1,1:0)
"RTN","IBNCPRR",83,0)
 ;
"RTN","IBNCPRR",84,0)
 I $D(IO("Q")) D  S IBQ=1
"RTN","IBNCPRR",85,0)
 . S ZTRTN="RUN^IBNCPRR"
"RTN","IBNCPRR",86,0)
 . S ZTIO=ION
"RTN","IBNCPRR",87,0)
 . S ZTSAVE("IB*")=""
"RTN","IBNCPRR",88,0)
 . S ZTDESC="IB ECME CMOP REPORT"
"RTN","IBNCPRR",89,0)
 . D ^%ZTLOAD
"RTN","IBNCPRR",90,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","IBNCPRR",91,0)
 . D HOME^%ZIS
"RTN","IBNCPRR",92,0)
 U IO
"RTN","IBNCPRR",93,0)
 Q
"RTN","IBNCPRR",94,0)
 ;
"RTN","IBNCPRR",95,0)
RUN ;
"RTN","IBNCPRR",96,0)
 N IBPAGE,REF
"RTN","IBNCPRR",97,0)
 S REF=$NA(^TMP($J,"IBNCPRR"))
"RTN","IBNCPRR",98,0)
 K @REF
"RTN","IBNCPRR",99,0)
 S IBPAGE=0
"RTN","IBNCPRR",100,0)
 D COLLECT  ; Collect the data in ^TMP
"RTN","IBNCPRR",101,0)
 U IO
"RTN","IBNCPRR",102,0)
 D REPORT
"RTN","IBNCPRR",103,0)
 I 'IBSCR W !,@IOF
"RTN","IBNCPRR",104,0)
 D ^%ZISC
"RTN","IBNCPRR",105,0)
 K @REF
"RTN","IBNCPRR",106,0)
 Q
"RTN","IBNCPRR",107,0)
 ;
"RTN","IBNCPRR",108,0)
REPORT ;
"RTN","IBNCPRR",109,0)
 N IBDT,IBRX,IBFL,IBPN,DFN,IBD
"RTN","IBNCPRR",110,0)
 D HDR
"RTN","IBNCPRR",111,0)
 I '$D(@REF) W !,"No data meet the criteria."
"RTN","IBNCPRR",112,0)
 S IBDT="" F  S IBDT=$O(@REF@(IBDT)) Q:IBDT=""  D  Q:IBQ
"RTN","IBNCPRR",113,0)
 . S IBPN="" F  S IBPN=$O(@REF@(IBDT,IBPN)) Q:IBPN=""  D  Q:IBQ
"RTN","IBNCPRR",114,0)
 .. S IBRX="" F  S IBRX=$O(@REF@(IBDT,IBPN,IBRX)) Q:IBRX=""  D  Q:IBQ
"RTN","IBNCPRR",115,0)
 ... S IBFL="" F  S IBFL=$O(@REF@(IBDT,IBPN,IBRX,IBFL)) Q:IBFL=""  D  Q:IBQ
"RTN","IBNCPRR",116,0)
 .... S IBD=$G(@REF@(IBDT,IBPN,IBRX,IBFL)) Q:IBD=""
"RTN","IBNCPRR",117,0)
 .... I IBSDE="S" D WRLINE Q
"RTN","IBNCPRR",118,0)
 .... I IBSDE="D" D WRLINE2 Q
"RTN","IBNCPRR",119,0)
 .... I IBSDE="E" D WRLINE3 Q
"RTN","IBNCPRR",120,0)
 ;
"RTN","IBNCPRR",121,0)
 Q
"RTN","IBNCPRR",122,0)
 ;
"RTN","IBNCPRR",123,0)
WRLINE ; Write the summary report line
"RTN","IBNCPRR",124,0)
 D CHKP Q:IBQ
"RTN","IBNCPRR",125,0)
 W !,$$DAT3^IBOUTL(IBDT)," ",?12,$E(IBPN,1,23)," "
"RTN","IBNCPRR",126,0)
 W ?36,$E($$FILE^IBRXUTL(IBRX,.01),1,11)," ",?48,IBFL
"RTN","IBNCPRR",127,0)
 W ?51,$P(IBD,U,3)," " ; ECME number
"RTN","IBNCPRR",128,0)
 W ?59,$P($G(^DGCR(399,+$P(IBD,U,4),0)),U)," " ; Bill #
"RTN","IBNCPRR",129,0)
 W ?67,$E($P($G(^DIC(36,+$P(IBD,U,5),0)),U),1,13) ; Insurance
"RTN","IBNCPRR",130,0)
 Q
"RTN","IBNCPRR",131,0)
 ;
"RTN","IBNCPRR",132,0)
WRLINE2 ; Write the detailed report line
"RTN","IBNCPRR",133,0)
 N IBRXARR
"RTN","IBNCPRR",134,0)
 D CHKP Q:IBQ
"RTN","IBNCPRR",135,0)
 W !,$$DAT^IBNCPRR1(IBDT)," ",?10,$E(IBPN,1,18)," "
"RTN","IBNCPRR",136,0)
 W ?29,$$SSN4^IBNCPRR1(+IBD)
"RTN","IBNCPRR",137,0)
 W ?34,$E($$FILE^IBRXUTL(IBRX,.01),1,10)," "
"RTN","IBNCPRR",138,0)
 W ?45,IBFL," "
"RTN","IBNCPRR",139,0)
 W ?49,$$DAT^IBNCPRR1($P(IBD,U,2))," "
"RTN","IBNCPRR",140,0)
 N DRGIFN,DRUGNM,SEQNUM
"RTN","IBNCPRR",141,0)
 S DRGIFN=$$FILE^IBRXUTL(IBRX,6) D ZERO^IBRXUTL(DRGIFN) S DRUGNM=^TMP($J,"IBDRUG",DRGIFN,.01)
"RTN","IBNCPRR",142,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBNCPRR",143,0)
 W ?60,$E(DRUGNM,1,20)
"RTN","IBNCPRR",144,0)
 ; ECME#/Rx Status/Copay
"RTN","IBNCPRR",145,0)
 D CHKP Q:IBQ
"RTN","IBNCPRR",146,0)
 W !?5,"ECME#: ",$P(IBD,U,3),", Rx Status: ",$$FILE^IBRXUTL(IBRX,100,"E"),", Rx Copay: ",$$COPAY^IBNCPRR1(IBRX,IBFL)
"RTN","IBNCPRR",147,0)
 ; Bill Number/Insurance/Group
"RTN","IBNCPRR",148,0)
 I $P(IBD,U,4) D CHKP Q:IBQ  D
"RTN","IBNCPRR",149,0)
 . W !?5,"Bill#: ",$P($G(^DGCR(399,+$P(IBD,U,4),0)),U)
"RTN","IBNCPRR",150,0)
 . W ", Insurance: ",$E($P($G(^DIC(36,+$P(IBD,U,5),0)),U),1,20)
"RTN","IBNCPRR",151,0)
 . ;W ", Group Ins.Plan: ?"
"RTN","IBNCPRR",152,0)
 ; CMOP Transactions
"RTN","IBNCPRR",153,0)
 I IBWMC="C" D  Q:IBQ
"RTN","IBNCPRR",154,0)
 . N IBCMOP,IBZ,IBANY
"RTN","IBNCPRR",155,0)
 . S IBANY=0
"RTN","IBNCPRR",156,0)
 . S IBCMOP=0
"RTN","IBNCPRR",157,0)
 . S DFN=$$FILE^IBRXUTL(IBRX,2)
"RTN","IBNCPRR",158,0)
 . D RX^PSO52API(DFN,"IBRX",IBRX,,"C",,)
"RTN","IBNCPRR",159,0)
 . F  S IBCMOP=$O(^TMP($J,"IBRX",DFN,IBRX,"C",IBCMOP)) Q:'IBCMOP  D  Q:IBQ
"RTN","IBNCPRR",160,0)
 .. S IBZ=$O(^TMP($J,"IBRX",DFN,IBRX,"C",IBCMOP,0)) Q:IBZ=""
"RTN","IBNCPRR",161,0)
 .. I +$P(^TMP($J,"IBRX",DFN,IBRX,"C",IBCMOP,2),"^",1)'=IBFL Q  ; different refill
"RTN","IBNCPRR",162,0)
 .. D CHKP Q:IBQ
"RTN","IBNCPRR",163,0)
 .. N DR,DA,DIQ,DIC
"RTN","IBNCPRR",164,0)
 .. S DR=400,DR(52.01)="1"
"RTN","IBNCPRR",165,0)
 .. S DA=IBRX,DA(52.01)=IBCMOP
"RTN","IBNCPRR",166,0)
 .. S DIQ="IBRXARR",DIQ(0)="E"
"RTN","IBNCPRR",167,0)
 .. D DIQ^PSODI(52,52,.DR,.DA,.DIQ) S SEQNUM=$G(IBRXARR(52.01,DA(52.01),DR(52.01),DIQ(0)))
"RTN","IBNCPRR",168,0)
 .. W !?5,"CMOP SEQUENCE# ",SEQNUM
"RTN","IBNCPRR",169,0)
 .. W ", STATUS: ",$P(^TMP($J,"IBRX",DFN,IBRX,"C",IBCMOP,3),"^",2)
"RTN","IBNCPRR",170,0)
 .. W ", NDC: ",$P(^TMP($J,"IBRX",DFN,IBRX,"C",IBCMOP,4),"^",1) S IBANY=1
"RTN","IBNCPRR",171,0)
 .K ^TMP($J,"IBRX")
"RTN","IBNCPRR",172,0)
 . I 'IBANY D CHKP Q:IBQ  W !?5,"NO CMOP TRANSACTIONS FOUND"
"RTN","IBNCPRR",173,0)
 ;
"RTN","IBNCPRR",174,0)
 ; Write activity log
"RTN","IBNCPRR",175,0)
 N IBACT,IBFROM,IBTO,IBTMP
"RTN","IBNCPRR",176,0)
 S IBFROM=IBDT,IBTO=$$NXTREFDT^IBNCPRR1(IBRX,IBFL)
"RTN","IBNCPRR",177,0)
 I IBTO<IBFROM S IBTO=IBFROM
"RTN","IBNCPRR",178,0)
 S DFN=$$FILE^IBRXUTL(IBRX,2),LIST="IBTMPARR",NODE="A"
"RTN","IBNCPRR",179,0)
 D RX^PSO52API(DFN,LIST,IBRX,,NODE,,) Q:$P(^TMP($J,LIST,DFN,IBRX,"A",.01),"^",1)<0
"RTN","IBNCPRR",180,0)
 S IBTMP=0
"RTN","IBNCPRR",181,0)
 F  S IBTMP=$O(^TMP($J,LIST,DFN,IBRX,"A",IBTMP)) Q:IBTMP=""  D  Q:IBQ
"RTN","IBNCPRR",182,0)
 . N IBZ,IBTXT
"RTN","IBNCPRR",183,0)
 . I $P(^TMP($J,LIST,DFN,IBRX,"A",IBTMP,.02),"^",1)'="B",$P(^TMP($J,LIST,DFN,IBRX,"A",IBTMP,.02),"^",1)'="M" Q
"RTN","IBNCPRR",184,0)
 . S IBZ=$P(^TMP($J,LIST,DFN,IBRX,"A",IBTMP,.01),"^",1)
"RTN","IBNCPRR",185,0)
 . I IBZ<IBFROM Q
"RTN","IBNCPRR",186,0)
 . I IBZ>IBTO Q
"RTN","IBNCPRR",187,0)
 . D CHKP Q:IBQ
"RTN","IBNCPRR",188,0)
 . S IBTXT=$P(^TMP($J,LIST,DFN,IBRX,"A",IBTMP,.05),"^",1)
"RTN","IBNCPRR",189,0)
 . S:$TR(IBTXT," ")="" IBTXT=$$EXTERNAL^DILFD(52.3,.02,,$P(IBZ,U,2))
"RTN","IBNCPRR",190,0)
 . W !?5,$$DATTIM^IBNCPRR1(+IBZ),?21,$E(IBTXT,1,59)
"RTN","IBNCPRR",191,0)
 K ^TMP($J,LIST)
"RTN","IBNCPRR",192,0)
 D CHKP Q:IBQ
"RTN","IBNCPRR",193,0)
 W !?5,"-------------------------------"
"RTN","IBNCPRR",194,0)
 Q
"RTN","IBNCPRR",195,0)
 ;
"RTN","IBNCPRR",196,0)
WRLINE3 ; Write the Excel report line
"RTN","IBNCPRR",197,0)
 W !,$$DAT^IBNCPRR1(IBDT),U,$E(IBPN,1,23),U
"RTN","IBNCPRR",198,0)
 W $E($$FILE^IBRXUTL(IBRX,.01),1,11),U,IBFL,U
"RTN","IBNCPRR",199,0)
 W $$DAT^IBNCPRR1($P(IBD,U,2)),U
"RTN","IBNCPRR",200,0)
 W $P(IBD,U,3),U ; ECME number
"RTN","IBNCPRR",201,0)
 W $P($G(^DGCR(399,+$P(IBD,U,4),0)),U),U ; Bill #
"RTN","IBNCPRR",202,0)
 W $E($P($G(^DIC(36,+$P(IBD,U,5),0)),U),1,13) ; Insurance
"RTN","IBNCPRR",203,0)
 Q
"RTN","IBNCPRR",204,0)
 ;
"RTN","IBNCPRR",205,0)
HDR ;
"RTN","IBNCPRR",206,0)
 N LIST,IBSNAME
"RTN","IBNCPRR",207,0)
 S LIST="HDRLIST"
"RTN","IBNCPRR",208,0)
 S IBSNAME=""
"RTN","IBNCPRR",209,0)
 D PSS^PSO59(IBSITE,,LIST)
"RTN","IBNCPRR",210,0)
 I $G(^TMP($J,LIST,IBSITE,0))>0 S IBSNAME=^TMP($J,LIST,IBSITE,.01)
"RTN","IBNCPRR",211,0)
 K ^TMP($J,LIST)
"RTN","IBNCPRR",212,0)
 S IBPAGE=IBPAGE+1
"RTN","IBNCPRR",213,0)
 W @IOF,?10,"IB THIRD PARTY BILLING PHARMACY CROSS-CHECK REPORT for "_IBSNAME,!
"RTN","IBNCPRR",214,0)
 W ?10,$S(IBWMC="C":"CMOP",IBWMC="M":"MAIL",1:"WINDOW")," PRESCRIPTIONS" W ", ",$S(IBSDE="S":"SUMMARY",1:"DETAILED")
"RTN","IBNCPRR",215,0)
 W !?10,"Released ",$$DAT3^IBOUTL(IBBDT)_" to "_$$DAT3^IBOUTL(IBEDT),?70,"Page: "_IBPAGE
"RTN","IBNCPRR",216,0)
 I IBSDE="S" D
"RTN","IBNCPRR",217,0)
 . W !!,"Rel.Date    Patient Name            Rx No   Fill#  ECME#   Bill    Insurance"
"RTN","IBNCPRR",218,0)
 I IBSDE="D" D
"RTN","IBNCPRR",219,0)
 . W !!,"Rel.Date  Patient Name       SSN  Rx No   Fill#  Fil.Date   Drug"
"RTN","IBNCPRR",220,0)
 I IBSDE="E" D
"RTN","IBNCPRR",221,0)
 . W !!,"Rel.Date^Patient Name^SSN^Rx No^Fill#^Fil.Date^ECME#^Bill"
"RTN","IBNCPRR",222,0)
 I IBSDE'="E" D ULINE("=")
"RTN","IBNCPRR",223,0)
 Q
"RTN","IBNCPRR",224,0)
 ;
"RTN","IBNCPRR",225,0)
 ;
"RTN","IBNCPRR",226,0)
COLLECT ;
"RTN","IBNCPRR",227,0)
 N IBDT,IBRX,IBFL,IBP,DFN,IBRXINS,IBZ,IBRXN,IBFLDT,IBPN,IBECN,IBECMBIL,IBRXSITE,IBBIL,IBFILD,LIST,CNT
"RTN","IBNCPRR",228,0)
 S IBDT=IBBDT-.0001
"RTN","IBNCPRR",229,0)
 ; Released Prescriptions/Refills
"RTN","IBNCPRR",230,0)
 S LIST="IBRXARR"
"RTN","IBNCPRR",231,0)
 D EXTRACT^PSO52EX(IBBDT,IBEDT,LIST)
"RTN","IBNCPRR",232,0)
 S DTE=0,CNT=0
"RTN","IBNCPRR",233,0)
 F  S DTE=$O(^TMP($J,LIST,"AL",DTE)) Q:'DTE  D
"RTN","IBNCPRR",234,0)
 .S IBRX="" F  S IBRX=$O(^TMP($J,LIST,"AL",DTE,IBRX)) Q:'IBRX  D
"RTN","IBNCPRR",235,0)
 ..S IBFIL="" F  S IBFIL=$O(^TMP($J,LIST,"AL",DTE,IBRX,IBFIL)) Q:IBFIL=""  D
"RTN","IBNCPRR",236,0)
 ...S DFN=$$FILE^IBRXUTL(IBRX,2) ;Patient
"RTN","IBNCPRR",237,0)
 ...S IBZ=$$RXZERO^IBRXUTL(DFN,IBRX)
"RTN","IBNCPRR",238,0)
 ...S IBPN=$$FILE^IBRXUTL(IBRX,2,"E")
"RTN","IBNCPRR",239,0)
 ...S IBRXSITE=$$FILE^IBRXUTL(IBRX,20)
"RTN","IBNCPRR",240,0)
 ...I IBSITE'=IBRXSITE Q
"RTN","IBNCPRR",241,0)
 ...I IBFIL=0 S IBFLDT=$$FILE^IBRXUTL(IBRX,22)
"RTN","IBNCPRR",242,0)
 ...I IBFIL>0 S IBFLDT=$$SUBFILE^IBRXUTL(IBRX,IBFL,52,.01)
"RTN","IBNCPRR",243,0)
 ...S:'IBFLDT IBFLDT=IBDT
"RTN","IBNCPRR",244,0)
 ... S IBBIL=$$BILL^IBNCPBB(IBRXN,IBFLDT) ; IB Bill
"RTN","IBNCPRR",245,0)
 ... S IBRXINS=$$BILLINS^IBNCPRR1(IBBIL)
"RTN","IBNCPRR",246,0)
 ... I 'IBRXINS S IBRXINS=$$RXINS^IBNCPRR1(IBRX,IBFL)
"RTN","IBNCPRR",247,0)
 ... S IBECMBIL=$$ECMEBIL^IBNCPDPU(DFN,IBFLDT) ; ECME Billable?
"RTN","IBNCPRR",248,0)
 ... ; Apply filters:
"RTN","IBNCPRR",249,0)
 ... I IBENB="E",'IBECMBIL Q
"RTN","IBNCPRR",250,0)
 ... I IBENB="N",IBECMBIL Q
"RTN","IBNCPRR",251,0)
 ... I IBINS,IBRXINS'=IBINS Q
"RTN","IBNCPRR",252,0)
 ... ; Mail/Window/CMOP
"RTN","IBNCPRR",253,0)
 ... I IBWMC'=$$RXWMC(IBRX) Q
"RTN","IBNCPRR",254,0)
 ... S IBECN=$S(IBECMBIL:$$ECMENO^IBNCPRR1(IBRX),1:"")
"RTN","IBNCPRR",255,0)
 ... S @REF@($P(IBDT,"."),IBPN,IBRX,IBFL)=DFN_U_IBFLDT_U_IBECN_U_IBBIL_U_IBRXINS
"RTN","IBNCPRR",256,0)
 K ^TMP($J,LIST)
"RTN","IBNCPRR",257,0)
 ;
"RTN","IBNCPRR",258,0)
 ;;Partial Prescriptions
"RTN","IBNCPRR",259,0)
 ;S IBRXN=0
"RTN","IBNCPRR",260,0)
 ;S IBDT=IBBDT-.001 F  S IBDT=$O(^PSRX("ADP",IBDT)) Q:'IBDT!($P(IBDT,".")>IBEDT)  D
"RTN","IBNCPRR",261,0)
 ;. F  S IBRX=$O(^PSRX("ADP",IBDT,IBRX)) Q:'IBRX  D
"RTN","IBNCPRR",262,0)
 ;.. S IBP=0 F  S IBP=$O(^PSRX("ADP",IBDT,IBRX,IBP)) Q:'IBP  D
"RTN","IBNCPRR",263,0)
 ;... I $G(^PSRX(IBRX,0))="" Q
"RTN","IBNCPRR",264,0)
 ;... S IBPAR=1 D REF
"RTN","IBNCPRR",265,0)
 Q
"RTN","IBNCPRR",266,0)
 ;
"RTN","IBNCPRR",267,0)
 ;
"RTN","IBNCPRR",268,0)
RXWMC(IBRX) ;WMC
"RTN","IBNCPRR",269,0)
 N IBZ,IBWM,DFN
"RTN","IBNCPRR",270,0)
 S DFN=$$FILE^IBRXUTL(IBRX,2),NODE="C",LIST="IBCMOP"
"RTN","IBNCPRR",271,0)
 D RX^PSO52API(DFN,LIST,IBRX,,NODE,,)
"RTN","IBNCPRR",272,0)
 I ^TMP($J,LIST,DFN,IBRX,"C",0)'=-1 Q "C"
"RTN","IBNCPRR",273,0)
 S IBZ=$$RXZERO^IBRXUTL($$FILE^IBRXUTL(IBRX,2),IBRX)
"RTN","IBNCPRR",274,0)
 S IBWM=$P(IBZ,U,11)
"RTN","IBNCPRR",275,0)
 I IBWM="" S IBWM="W" ;default
"RTN","IBNCPRR",276,0)
 K ^TMP($J,LIST)
"RTN","IBNCPRR",277,0)
 Q IBWM
"RTN","IBNCPRR",278,0)
 ;
"RTN","IBNCPRR",279,0)
CHKP ;Check for EOP
"RTN","IBNCPRR",280,0)
 I $Y>(IOSL-4) D:IBSCR PAUSE Q:IBQ  D HDR
"RTN","IBNCPRR",281,0)
 Q
"RTN","IBNCPRR",282,0)
 ;
"RTN","IBNCPRR",283,0)
PAUSE ;
"RTN","IBNCPRR",284,0)
 N X U IO(0) W !!,"Press RETURN to continue, '^' to exit:" R X:DTIME S:'$T X="^" S:X["^" IBQ=2
"RTN","IBNCPRR",285,0)
 U IO
"RTN","IBNCPRR",286,0)
 Q
"RTN","IBNCPRR",287,0)
 ;
"RTN","IBNCPRR",288,0)
PAUSE2 ;
"RTN","IBNCPRR",289,0)
 N X U IO(0) W !!,"Press RETURN to continue:" R X:DTIME S:'$T X="^" S:X["^" IBQ=2
"RTN","IBNCPRR",290,0)
 U IO
"RTN","IBNCPRR",291,0)
 Q
"RTN","IBNCPRR",292,0)
 ;
"RTN","IBNCPRR",293,0)
ULINE(X) ;line
"RTN","IBNCPRR",294,0)
 D CHKP Q:IBQ
"RTN","IBNCPRR",295,0)
 N I W ! F I=1:1:80 W $G(X,"-")
"RTN","IBNCPRR",296,0)
 Q
"RTN","IBNCPRR",297,0)
 ;
"RTN","IBNCPRR",298,0)
RXSTAT(IBDFN,IBRX) ;
"RTN","IBNCPRR",299,0)
 N IBS
"RTN","IBNCPRR",300,0)
 ;instead of: S IBS=$P($G(^PSRX(IBRX,"STA")),U)
"RTN","IBNCPRR",301,0)
 S IBS=$$RXSTATUS(IBDFN,IBRX)
"RTN","IBNCPRR",302,0)
 Q $$EXTERNAL^DILFD(52,100,,IBS)
"RTN","IBNCPRR",303,0)
 ;
"RTN","IBNCPRR",304,0)
RXSTATUS(IBDFN,IBRX) ;
"RTN","IBNCPRR",305,0)
 N X
"RTN","IBNCPRR",306,0)
 K ^TMP($J,"IBNCPDP52")
"RTN","IBNCPRR",307,0)
 D RX^PSO52API(IBDFN,"IBNCPDP52",IBRX,"","ST")
"RTN","IBNCPRR",308,0)
 S X=+$G(^TMP($J,"IBNCPDP52",IBDFN,IBRX,100))
"RTN","IBNCPRR",309,0)
 K ^TMP($J,"IBNCPDP52")
"RTN","IBNCPRR",310,0)
 Q X
"RTN","IBNCPRR",311,0)
         ;
"RTN","IBNCPRR1")
0^50^B3295873^n/a
"RTN","IBNCPRR1",1,0)
IBNCPRR1 ;ALB/OEC - Prescription Report for 3rd Party Billing (Extrinsic Functions) ;01/11/06
"RTN","IBNCPRR1",2,0)
 ;;2.0;INTEGRATED BILLING;**347**;21-MAR-94;Build 24
"RTN","IBNCPRR1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBNCPRR1",4,0)
 ;This routine contains extrinsic function used by IBNCPRR
"RTN","IBNCPRR1",5,0)
RXINS(IBRX,IBFL) ; Determine insurance by the RX
"RTN","IBNCPRR1",6,0)
 Q 0
"RTN","IBNCPRR1",7,0)
 ;
"RTN","IBNCPRR1",8,0)
ECMENO(IBRX) ;
"RTN","IBNCPRR1",9,0)
 Q $E(IBRX,$L(IBRX)-6,$L(IBRX))
"RTN","IBNCPRR1",10,0)
 ;
"RTN","IBNCPRR1",11,0)
BILLINS(IBIFN) ; Insurance from the Bill#
"RTN","IBNCPRR1",12,0)
 I 'IBIFN Q 0
"RTN","IBNCPRR1",13,0)
 Q +$P($G(^DGCR(399,+IBIFN,"M")),U)
"RTN","IBNCPRR1",14,0)
 ;
"RTN","IBNCPRR1",15,0)
DAT(X) ;Convert FM date to displayable (mm/dd/yy) format.
"RTN","IBNCPRR1",16,0)
 N DATE,YR
"RTN","IBNCPRR1",17,0)
 I $G(X) S YR=$E(X,2,3)
"RTN","IBNCPRR1",18,0)
 I $G(X) S DATE=$S(X:$E(X,4,5)_"/"_$E(X,6,7)_"/"_YR,1:"")
"RTN","IBNCPRR1",19,0)
 Q $G(DATE)
"RTN","IBNCPRR1",20,0)
 ;
"RTN","IBNCPRR1",21,0)
DATTIM(X) ;Convert FM date to displayable (mm/dd/yy HH:MM) format.
"RTN","IBNCPRR1",22,0)
 N DATE,YR,IBT,IBM,IBH,IBAP
"RTN","IBNCPRR1",23,0)
 I $G(X) S YR=$E(X,2,3)
"RTN","IBNCPRR1",24,0)
 I $G(X) S DATE=$S(X:$E(X,4,5)_"/"_$E(X,6,7)_"/"_YR,1:"")
"RTN","IBNCPRR1",25,0)
 S IBT=$P(X,".",2) S:$L(IBT)<4 IBT=IBT_$E("0000",1,4-$L(IBT))
"RTN","IBNCPRR1",26,0)
 S IBH=$E(IBT,1,2),IBM=$E(IBT,3,4)
"RTN","IBNCPRR1",27,0)
 S IBAP="a" I IBH>12 S IBH=IBH-12,IBAP="p" S:$L(IBH)<2 IBH="0"_IBH
"RTN","IBNCPRR1",28,0)
 I IBT S:'IBH IBH=12 S DATE=DATE_" "_IBH_":"_IBM_IBAP
"RTN","IBNCPRR1",29,0)
 Q $G(DATE)
"RTN","IBNCPRR1",30,0)
 ;
"RTN","IBNCPRR1",31,0)
SSN4(DFN) ;last 4 SSN
"RTN","IBNCPRR1",32,0)
 N X
"RTN","IBNCPRR1",33,0)
 S X=$P($G(^DPT(DFN,0)),U,9)
"RTN","IBNCPRR1",34,0)
 Q $E(X,$L(X)-3,$L(X))
"RTN","IBNCPRR1",35,0)
 ;
"RTN","IBNCPRR1",36,0)
COPAY(IBRX,IBFL) ;
"RTN","IBNCPRR1",37,0)
 N IBACT,IBCOP
"RTN","IBNCPRR1",38,0)
 S IBACT=$S('IBFL:$P($$IBND^IBRXUTL($$FILE^IBRXUTL(IBRX,2),IBRX),U,2),1:$P($$IBNDFL^IBRXUTL($$FILE^IBRXUTL(IBRX,2),IBRX,IBFL),U))
"RTN","IBNCPRR1",39,0)
 S IBCOP=$P($G(^IB(+IBACT,0)),U,7)
"RTN","IBNCPRR1",40,0)
 Q $J(IBCOP,5,2)
"RTN","IBNCPRR1",41,0)
 ;
"RTN","IBNCPRR1",42,0)
 ; Next refill date (in not exist - DT)
"RTN","IBNCPRR1",43,0)
NXTREFDT(IBRX,IBFL) ;
"RTN","IBNCPRR1",44,0)
 N IBDT
"RTN","IBNCPRR1",45,0)
 S IBDT=$P($$SUBFILE^IBRXUTL(IBRX,IBFL+1,52,.01),".")
"RTN","IBNCPRR1",46,0)
 S:'IBDT IBDT=DT
"RTN","IBNCPRR1",47,0)
 Q IBDT
"RTN","IBNCPRR1",48,0)
 ;
"RTN","IBOA32")
0^23^B6461221^B6553812
"RTN","IBOA32",1,0)
IBOA32 ;ALB/CPM - PRINT ALL BILLS FOR A PATIENT (CON'T) ; 28-JAN-92
"RTN","IBOA32",2,0)
 ;;2.0; INTEGRATED BILLING ;**7,95,347**; 21-MAR-94;Build 24
"RTN","IBOA32",3,0)
 ;
"RTN","IBOA32",4,0)
 ;MAP TO DGCRA32
"RTN","IBOA32",5,0)
 ;
"RTN","IBOA32",6,0)
 ; Print out IB Actions onto the list.
"RTN","IBOA32",7,0)
 D:($Y>(IOSL-5)) HDR^IBOA31 Q:IBQUIT
"RTN","IBOA32",8,0)
 N IBND,IBND1,X,IBX,IENS,IBRXN,IBRX,IBRF,IBRDT
"RTN","IBOA32",9,0)
 S IBND=$G(^IB($E(IBIFN,1,$L(IBIFN)-1),0)),IBND1=$G(^(1))
"RTN","IBOA32",10,0)
 S (IBRXN,IBRX,IBRF,IBRDT,IBX)=0
"RTN","IBOA32",11,0)
 I $P(IBND,"^",4)["52:" S IBRXN=$P($P(IBND,"^",4),":",2),IBRX=$P($P(IBND,"^",8),"-"),IBRF=$P($P(IBND,"^",4),":",3)
"RTN","IBOA32",12,0)
 I IBRF>0 S IBRDT=$$SUBFILE^IBRXUTL(+IBRXN,IBRF,52,.01)
"RTN","IBOA32",13,0)
 E  S IBRDT=$$FILE^IBRXUTL(+IBRXN,22),IBX=$$APPT^IBCU3(IBRDT,DFN)
"RTN","IBOA32",14,0)
 W !,$S($P(IBND,"^",11)]"":$P($P(IBND,"^",11),"-",2),$P(IBND,"^",5)=99:"",$P(IBND,"^",5)=10:"",1:"Pending")
"RTN","IBOA32",15,0)
 W ?8,$$DAT1^IBOUTL($S($P(IBND,"^",11)="":"",$P(IBND,"^",5)>2&($P(IBND,"^",5)'=99):$P(IBND1,"^",4)\1,1:""))
"RTN","IBOA32",16,0)
 S X=$P($P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^")," ",2,99)
"RTN","IBOA32",17,0)
 W ?18,$E($P(X," ",1,$L(X," ")-1),1,17)
"RTN","IBOA32",18,0)
 W ?37,$S($P(IBND,"^",4)["350:":$E($P(IBND,"^",8),1,14),$P(IBND,"^",3)<7:"Rx:"_IBRX_$S(IBRF>0:"("_IBRF_")",1:""),$P(IBND1,"^",5):"CHAMPVA SUBSIST",1:"AUT MEANS TEST")
"RTN","IBOA32",19,0)
 W:IBX=1 ?53,"*"
"RTN","IBOA32",20,0)
 W ?54,$$DAT1^IBOUTL(-IBDT)
"RTN","IBOA32",21,0)
 W ?64,$$DAT1^IBOUTL($S(IBRXN>0:IBRDT,$P(IBND,"^",14):$P(IBND,"^",14),1:$P(IBND1,"^",2)\1))
"RTN","IBOA32",22,0)
 W ?74,$$DAT1^IBOUTL($S($P(IBND,"^",15):$P(IBND,"^",15),1:$P(IBND1,"^",2)\1))
"RTN","IBOA32",23,0)
 W ?89,"N/A",?94,$E($P($G(^IBE(350.21,+$P(IBND,"^",5),0)),"^",2),1,17)
"RTN","IBOA32",24,0)
 Q
"RTN","IBOA32",25,0)
 ;
"RTN","IBOA32",26,0)
UTIL ; Gather all IB Actions for a patient.
"RTN","IBOA32",27,0)
 N DATE,IBN,X,A,B,C,D,E,IBNX
"RTN","IBOA32",28,0)
 S IBN=0 F  S IBN=$O(^IB("C",DFN,IBN)) Q:'IBN  S X=$G(^IB(IBN,0)) D:X
"RTN","IBOA32",29,0)
 . I 'IBIBRX,$E($G(^IBE(350.1,+$P(X,"^",3),0)),1,3)="PSO" Q
"RTN","IBOA32",30,0)
 . Q:$P(X,"^",8)["ADMISSION"
"RTN","IBOA32",31,0)
 . Q:'$D(^IB("APDT",IBN))
"RTN","IBOA32",32,0)
 . S (C,D)="",C=$O(^IB("APDT",IBN,C)),D=$O(^IB("APDT",IBN,C,D))
"RTN","IBOA32",33,0)
 . S E=$P($G(^IB(D,0)),U,3)
"RTN","IBOA32",34,0)
 . S A=$P($G(^IBE(350.1,E,0)),U,5)
"RTN","IBOA32",35,0)
 . S IBNX=$S(A=2:$P($Q(^IB("APDT",IBN,C,D)),")",1),A=3:$P($Q(^IB("APDT",IBN,C,D)),")",1),1:IBN)
"RTN","IBOA32",36,0)
 . I (A=2)!(A=3) D
"RTN","IBOA32",37,0)
 .. I IBNX["[""" S IBNX="^"_$P(IBNX,"]",2)
"RTN","IBOA32",38,0)
 . I $P(IBNX,",",4)>0 S IBNX=$P(IBNX,",",4)
"RTN","IBOA32",39,0)
 . S DATE=$P($G(^IB(+$P(X,"^",16),0)),"^",17)
"RTN","IBOA32",40,0)
 . S:'DATE DATE=$P($G(^IB(IBNX,1)),"^",5)
"RTN","IBOA32",41,0)
 . S:'DATE DATE=$P($G(^IB(IBNX,1)),"^",2)\1
"RTN","IBOA32",42,0)
 . S:DATE ^UTILITY($J,-DATE,IBNX_"X")=""
"RTN","IBOA32",43,0)
 Q
"RTN","IBOCHK")
0^24^B15514184^B14751001
"RTN","IBOCHK",1,0)
IBOCHK ;ALB/AAS - INTEGRATED BILLING - RX COPAY LINK CHECK ; 2-APR-91
"RTN","IBOCHK",2,0)
 ;;2.0;INTEGRATED BILLING;**347**; 21-MAR-94;Build 24
"RTN","IBOCHK",3,0)
 ;
"RTN","IBOCHK",4,0)
 ;  -loop through range of IB reference numbers and verify
"RTN","IBOCHK",5,0)
 ;   soft link exists and has link back to IB.
"RTN","IBOCHK",6,0)
 ;
"RTN","IBOCHK",7,0)
% ;
"RTN","IBOCHK",8,0)
 ;***
"RTN","IBOCHK",9,0)
 ;S XRTL=$ZU(0),XRTN="IBOCHK-1" D T0^%ZOSV ;start rt clock
"RTN","IBOCHK",10,0)
 ;
"RTN","IBOCHK",11,0)
 D HOME^%ZIS W @IOF,?24,"Verify IB - Pharmacy Co-Pay links",!!
"RTN","IBOCHK",12,0)
 ;
"RTN","IBOCHK",13,0)
ST S DIC="^IB(",DIC(0)="AEQMN",DIC("A")="START WITH REFERENCE NUMBER:",DIC("B")="" D ^DIC K DIC G:+Y<1 END S IBSTART=$P(Y,"^",2)
"RTN","IBOCHK",14,0)
 ;
"RTN","IBOCHK",15,0)
TO S DIC="^IB(",DIC(0)="AEQMN",DIC("A")="GO TO REFERENCE NUMBER: ",DIC("B")="" D ^DIC K DIC G:+Y<1 END S IBEND=$P(Y,"^",2)
"RTN","IBOCHK",16,0)
 I IBSTART>IBEND W *7,!!,"End must not be less than beginning number",! G ST
"RTN","IBOCHK",17,0)
 ;
"RTN","IBOCHK",18,0)
DEV W !!,"*** Margin width of this output is 132 ***"
"RTN","IBOCHK",19,0)
 W ! S %ZIS="QM",%ZIS("A")="Output Device: " D ^%ZIS G:POP END
"RTN","IBOCHK",20,0)
 I $D(IO("Q")) S ZTRTN="DQ^IBOCHK",ZTDESC="IB Check Pharmacy Links",ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q") W ! G END
"RTN","IBOCHK",21,0)
 ;
"RTN","IBOCHK",22,0)
 U IO
"RTN","IBOCHK",23,0)
 ;***
"RTN","IBOCHK",24,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCHK" D T1^%ZOSV ;stop rt clock
"RTN","IBOCHK",25,0)
 ;
"RTN","IBOCHK",26,0)
DQ ;  -entry point from queing
"RTN","IBOCHK",27,0)
 ;S XRTL=$ZU(0),XRTN="IBOCHK-2" D T0^%ZOSV ;start rt clock
"RTN","IBOCHK",28,0)
 ;
"RTN","IBOCHK",29,0)
 S (IBCNT,IBECNT)=0,IBPAG=0,IBQUIT=0 S Y=DT D D^DIQ S IBHDT=Y D HDR
"RTN","IBOCHK",30,0)
 S IBRNUM=IBSTART-1
"RTN","IBOCHK",31,0)
 F  S IBRNUM=$O(^IB("B",IBRNUM)) Q:'IBRNUM!(IBRNUM>IBEND)!(IBQUIT)  S IBN="" F  S IBN=$O(^IB("B",IBRNUM,IBN)) Q:'IBN!(IBQUIT)  D CHK
"RTN","IBOCHK",32,0)
 G END
"RTN","IBOCHK",33,0)
 ;
"RTN","IBOCHK",34,0)
CHK S IBCNT=IBCNT+1
"RTN","IBOCHK",35,0)
 N DFN,IBNODE
"RTN","IBOCHK",36,0)
 I '$D(^IB(IBN,0))!('$D(^IB(IBN,1))) S IBOERR=1,IBND=IBN G LINE ;xref to no entry
"RTN","IBOCHK",37,0)
 S IBND=$S($D(^IB(IBN,0)):^(0),1:"")
"RTN","IBOCHK",38,0)
 S IBSL=$P(^IB(IBN,0),"^",4) I 'IBSL S IBOERR=2 G LINE ;no softlink
"RTN","IBOCHK",39,0)
 I +IBSL'=52 Q  ;not a pharmacy rx entry
"RTN","IBOCHK",40,0)
 S IBRXN=$P($P(IBSL,";"),":",2),IBRXN1=$P($P(IBSL,";",2),":",2)
"RTN","IBOCHK",41,0)
 S DFN=$P(^IB(IBN,0),"^",2)
"RTN","IBOCHK",42,0)
 I $$FILE^IBRXUTL(IBRXN,.01)="" S IBOERR=3 G LINE ;rx deleted
"RTN","IBOCHK",43,0)
 S IBNODE=$$IBND^IBRXUTL(DFN,IBRXN)
"RTN","IBOCHK",44,0)
 I IBNODE'["^" S IBOERR=4 G LINE ;IB node missing
"RTN","IBOCHK",45,0)
 I +IBNODE,'$P(IBNODE,"^",2) S IBOERR=5 G LINE ;pointer back to IB missing
"RTN","IBOCHK",46,0)
 Q:'IBRXN1
"RTN","IBOCHK",47,0)
 I +$$SUBFILE^IBRXUTL(IBRXN,IBRXN1,52,.01)=0 S IBOERR=6 G LINE ;refill deleted
"RTN","IBOCHK",48,0)
 I $$IBNDFL^IBRXUTL(DFN,IBRXN,IBRXN1)'["^" S IBOERR=7 G LINE ;ib node on refill missing
"RTN","IBOCHK",49,0)
 I +$$IBNDFL^IBRXUTL(DFN,IBRXN,IBRXN1)=0 S IBOERR=8 G LINE ;no data on node
"RTN","IBOCHK",50,0)
 Q  ;pharmacy links okay.
"RTN","IBOCHK",51,0)
 ;
"RTN","IBOCHK",52,0)
HDR ;
"RTN","IBOCHK",53,0)
 S IBPAG=IBPAG+1
"RTN","IBOCHK",54,0)
 W:$E(IOST,1,2)["C-"!(IBPAG>1) @IOF
"RTN","IBOCHK",55,0)
 W "Verify Integrated Billing links to Pharmacy",?IOM-22,IBHDT,"  Page:",IBPAG
"RTN","IBOCHK",56,0)
 W !,"Verify IB Reference Number ",IBSTART," to ",IBEND
"RTN","IBOCHK",57,0)
 W !,"REF. NO.",?12,"PATIENT",?34,"SSN",?40,"RX#",?50,"REFILL",?58,"IB LINK",?80,"CHARGE ID",?91,"TRANS",?97,"ERROR MESSAGE"
"RTN","IBOCHK",58,0)
 S $P(IBLINE,"-",IOM)="" W !,IBLINE K IBLINE
"RTN","IBOCHK",59,0)
 Q
"RTN","IBOCHK",60,0)
LINE ;
"RTN","IBOCHK",61,0)
 I $Y>(IOSL-5) D PAUSE^IBOUTL Q:IBQUIT  D HDR
"RTN","IBOCHK",62,0)
 S IBECNT=IBECNT+1
"RTN","IBOCHK",63,0)
 W !,$P(IBND,"^") S DFN=$P(IBND,"^",2)
"RTN","IBOCHK",64,0)
 I $D(^DPT(+DFN,0)) D PID^VADPT W ?12,$E($P(^DPT(DFN,0),"^"),1,20),?34,VA("BID"),?40,$P($P(IBND,"^",8),"-"),?50,$P($P(IBSL,";",2),":",2),?58,IBSL,?80,$P(IBND,"^",11),?91,$P(IBND,"^",12)
"RTN","IBOCHK",65,0)
 W ?97,$P($T(IBOERR+IBOERR),";;",2,99)
"RTN","IBOCHK",66,0)
 Q
"RTN","IBOCHK",67,0)
 ;
"RTN","IBOCHK",68,0)
END ;
"RTN","IBOCHK",69,0)
 ;***
"RTN","IBOCHK",70,0)
 I $D(XRT0) S:'$D(XRTN) XRTN="IBOCHK" D T1^%ZOSV ;stop rt clock
"RTN","IBOCHK",71,0)
 ;
"RTN","IBOCHK",72,0)
 Q:$D(ZTQUEUED)  K IBCNT,IBECNT,IBEND,IHDT,IBN,IBND,IBPAG,IBQUIT,IBRNUM,IBRXN,IBRXN1,IBSL,IBSTART
"RTN","IBOCHK",73,0)
 D ^%ZISC
"RTN","IBOCHK",74,0)
 Q
"RTN","IBOCHK",75,0)
IBOERR ;error messages
"RTN","IBOCHK",76,0)
 ;;IB CROSS-REFERENCE BUT NO ENTRY
"RTN","IBOCHK",77,0)
 ;;IB ENTRY MISSING SOFTLINK
"RTN","IBOCHK",78,0)
 ;;RX ENTRY DELETED OR ARCHIVED
"RTN","IBOCHK",79,0)
 ;;RX ENTRY MISSING IB NODE
"RTN","IBOCHK",80,0)
 ;;RX ENTRY MISSING IB POINTER
"RTN","IBOCHK",81,0)
 ;;RX REFILL DELETED
"RTN","IBOCHK",82,0)
 ;;RX REFILL MISSING IB NODE
"RTN","IBOCHK",83,0)
 ;;RX REFILL MISSING IB LINK
"RTN","IBOHCT")
0^25^B17631548^B17499892
"RTN","IBOHCT",1,0)
IBOHCT ;ALB/EMG - CHECK FOR IB CHARGES ON HOLD ; MAY 2 1997
"RTN","IBOHCT",2,0)
 ;;2.0; INTEGRATED BILLING ;**70,95,347**; 21-MAR-94;Build 24
"RTN","IBOHCT",3,0)
 ;
"RTN","IBOHCT",4,0)
FIND(DFN,IBTRN) ;  find all related IB charges on hold for episodes of care
"RTN","IBOHCT",5,0)
 ;  for this Claims Tracking entry with Reason Not Billable
"RTN","IBOHCT",6,0)
 ;  once IB Charge is found, release Charge On Hold to AR
"RTN","IBOHCT",7,0)
 ;  so patient can be billed.
"RTN","IBOHCT",8,0)
 ;
"RTN","IBOHCT",9,0)
 ;  Input:  DFN -- pointer to the patient in file #2
"RTN","IBOHCT",10,0)
 ;          IBTRN -- ien of Claims Tracking entry
"RTN","IBOHCT",11,0)
 ;
"RTN","IBOHCT",12,0)
 I '$G(DFN)!('$G(IBTRN)) G ALLQ
"RTN","IBOHCT",13,0)
 D HOME^%ZIS
"RTN","IBOHCT",14,0)
 ;
"RTN","IBOHCT",15,0)
 N X,Y,Y1,IBA,IBX,IBCTR,IBEDT,IBEND,IBNOS,IBSEQNO,IBDUZ,DP,DL
"RTN","IBOHCT",16,0)
 ;
"RTN","IBOHCT",17,0)
 S IBCT=$G(^IBT(356,IBTRN,0)),IBEDT=$P($P(IBCT,"^",6),"."),IBI=0
"RTN","IBOHCT",18,0)
 I $P(IBCT,"^",18)=4 D RXCHG,REL G ALLQ
"RTN","IBOHCT",19,0)
 ;
"RTN","IBOHCT",20,0)
 ;
"RTN","IBOHCT",21,0)
 ; - find related inpatient/outpatient patient charges on hold
"RTN","IBOHCT",22,0)
 S (IBNUM,Y)=0 F  S Y=$O(^IB("AFDT",DFN,-IBEDT,Y)) Q:'Y  D
"RTN","IBOHCT",23,0)
 .S Y1=0 F  S Y1=$O(^IB("AF",Y,Y1)) Q:'Y1  D
"RTN","IBOHCT",24,0)
 ..Q:'$D(^IB(Y1,0))  S IBX=^(0)
"RTN","IBOHCT",25,0)
 ..I $P(IBX,"^",5)'=8 Q
"RTN","IBOHCT",26,0)
 ..S IBNUM=IBNUM+1,IBA(IBNUM)=Y1
"RTN","IBOHCT",27,0)
 ..Q
"RTN","IBOHCT",28,0)
 .Q
"RTN","IBOHCT",29,0)
 ;
"RTN","IBOHCT",30,0)
REL ; allow user to select IB charges to pass to Accounts Receivable
"RTN","IBOHCT",31,0)
 ;
"RTN","IBOHCT",32,0)
 I '$G(IBNUM) G ALLQ
"RTN","IBOHCT",33,0)
 W !!,"The following IB Action"_$S(IBNUM>2:"s",1:"")_", related to this CT entry, ",$S(IBNUM>2:"are",1:"is")," ON HOLD:" D HDR
"RTN","IBOHCT",34,0)
 S IBQ=0 F IBNUM=1:1 Q:'$D(IBA(IBNUM))  D:'(IBNUM#15)  Q:IBQ  S IBN=IBA(IBNUM) D LST
"RTN","IBOHCT",35,0)
 . R !,"Enter RETURN to continue or '^' to stop: ",X:DTIME S:X["^"!('$T) IBQ=1 Q
"RTN","IBOHCT",36,0)
 ;
"RTN","IBOHCT",37,0)
 ; prompt user to select IB Actions
"RTN","IBOHCT",38,0)
 S DIR(0)="LA^1:"_(IBNUM-1)_"^",DIR("A")="Select IB Action"_$E("s",IBNUM>2)_" (REF #) to release to Accounts Receivable (or '^' to exit): ",DIR("?")="^D HELP^IBRREL"
"RTN","IBOHCT",39,0)
 W ! D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) Q
"RTN","IBOHCT",40,0)
 ;
"RTN","IBOHCT",41,0)
 S IBRANGE=Y,IBSEQNO=1,IBDUZ=DUZ
"RTN","IBOHCT",42,0)
 S DIR(0)="Y",DIR("A")="OK to pass "_$S($P(Y,",",2):"these charges",1:"this charge")_" to Accounts Receivable"
"RTN","IBOHCT",43,0)
 D ^DIR K DIR I 'Y!($D(DIRUT))!($D(DUOUT)) G ALLQ
"RTN","IBOHCT",44,0)
 ;
"RTN","IBOHCT",45,0)
 ; pass charges to Accounts Receivable
"RTN","IBOHCT",46,0)
 W !!,"Passing charges to Accounts Receivable...",! D HDR
"RTN","IBOHCT",47,0)
 F IBCTR=1:1 S IBNUM=$P(IBRANGE,",",IBCTR) Q:'IBNUM  I $D(IBA(IBNUM)) S IBNOS=IBA(IBNUM) D ^IBR,ERR:Y<1 I Y>0 S IBN=IBA(IBNUM) D LST
"RTN","IBOHCT",48,0)
 W !!,"The charge"_$E("s",$P(IBRANGE,",",2)>0)_" listed above "_$S($P(IBRANGE,",",2):"have",1:"has")_" been passed to Accounts Receivable.",!
"RTN","IBOHCT",49,0)
 ;
"RTN","IBOHCT",50,0)
 W ! S DIR(0)="E" D ^DIR K DIR G ALLQ
"RTN","IBOHCT",51,0)
 ;
"RTN","IBOHCT",52,0)
ALLQ K IBC,IBCRG,IBCT,IBCTR,IBEDT,IBEND,IBI,IBLINE,IBN,IBND
"RTN","IBOHCT",53,0)
 K IBNOS,IBNUM,IBOHD,IBQ,IBRANGE,IBRXN,IBRXDT,IBRXEND,IBSEQNO
"RTN","IBOHCT",54,0)
 K DIRUT,DUOUT
"RTN","IBOHCT",55,0)
 Q
"RTN","IBOHCT",56,0)
 ;
"RTN","IBOHCT",57,0)
 ;
"RTN","IBOHCT",58,0)
HDR ; Display charge header.
"RTN","IBOHCT",59,0)
 N IBLINE S $P(IBLINE,"=",81)=""
"RTN","IBOHCT",60,0)
 W !,IBLINE,!," REF   Action ID  Bill Type",?42,"Bill #",?51,"Fr/Fl Dt",?61,"To/Rls Dt",?73,"Charge"
"RTN","IBOHCT",61,0)
 W !,IBLINE Q
"RTN","IBOHCT",62,0)
 ;
"RTN","IBOHCT",63,0)
LST ; Display individual IB Action.
"RTN","IBOHCT",64,0)
 N IBND,IBND1,IBRXN,IBRX,IBRF,IBRDT,IENS
"RTN","IBOHCT",65,0)
 S IBND=$G(^IB(IBN,0)),IBND1=$G(^IB(IBN,1)),(IBRXN,IBRX,IBRF,IBRDT)=0
"RTN","IBOHCT",66,0)
 I $P(IBND,"^",4)["52:" S IBRXN=$P($P(IBND,"^",4),":",2),IBRX=$P($P(IBND,"^",8),"-"),IBRF=$P($P(IBND,"^",4),":",3)
"RTN","IBOHCT",67,0)
 I $P(IBND,"^",4)["52:"  D
"RTN","IBOHCT",68,0)
 .I IBRF>0 S IENS=+IBRF,IBRDT=$$SUBFILE^IBRXUTL(+IBRXN,+IENS,52,.01)
"RTN","IBOHCT",69,0)
 .E  S IENS=+IBRXN,IBRDT=$$FILE^IBRXUTL(+IENS,22)
"RTN","IBOHCT",70,0)
 W !?1,$J(IBNUM,2),?7,$J(+IBND,9)
"RTN","IBOHCT",71,0)
 W ?18,$S(IBRXN>0:"Rx #: "_IBRX_$S(IBRF>0:"("_IBRF_")",1:""),1:$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^",8))
"RTN","IBOHCT",72,0)
 W ?42,$P($P(IBND,"^",11),"-",2)
"RTN","IBOHCT",73,0)
 W ?51,$$DAT1^IBOUTL($S(IBRXN>0:IBRDT,1:$P(IBND,"^",14)))
"RTN","IBOHCT",74,0)
 W ?61,$$DAT1^IBOUTL($S($P(IBND,"^",15)'="":($P(IBND,"^",15)),1:$P(IBND1,"^",2)))
"RTN","IBOHCT",75,0)
 W ?70,$J(+$P(IBND,"^",7),9,2)
"RTN","IBOHCT",76,0)
 Q
"RTN","IBOHCT",77,0)
 ;
"RTN","IBOHCT",78,0)
RXCHG ; - find related rx copay's on hold in file 350
"RTN","IBOHCT",79,0)
 N IBRXN,IBRXBN,IBRXEND,IBRXDT,IBCRG,IBC
"RTN","IBOHCT",80,0)
 S IBNUM=0
"RTN","IBOHCT",81,0)
 S IBRXEND=+IBEDT+.999999 F  S IBEDT=$O(^IB("APTDT",DFN,IBEDT)) Q:'IBEDT!(IBEDT>IBRXEND)  S Y1=0 F  S Y1=$O(^IB("APTDT",DFN,IBEDT,Y1)) Q:'Y1  S IBX=^IB(Y1,0),IBOHD=$P($G(^IB(Y1,1)),"^",6) D
"RTN","IBOHCT",82,0)
 .I $P(IBX,"^",5)'=8 Q
"RTN","IBOHCT",83,0)
 .S IBNUM=IBNUM+1,IBA(IBNUM)=Y1 Q
"RTN","IBOHCT",84,0)
 Q
"RTN","IBOHCT",85,0)
 ;
"RTN","IBOHCT",86,0)
ERR ; display error message
"RTN","IBOHCT",87,0)
 W !,?5,"Error encountered - a separate bulletin has been posted"
"RTN","IBOHCT",88,0)
 Q
"RTN","IBOHDT")
0^26^B23197059^B23505246
"RTN","IBOHDT",1,0)
IBOHDT ;ALB/EMG -  REPORT OF CHARGES ON HOLD > 60 DAYS ;FEB 14 1997
"RTN","IBOHDT",2,0)
 ;;2.0;INTEGRATED BILLING;**70,95,142,347**;21-MAR-94;Build 24
"RTN","IBOHDT",3,0)
 ;
"RTN","IBOHDT",4,0)
 ; 
"RTN","IBOHDT",5,0)
MAIN ;
"RTN","IBOHDT",6,0)
 N DIRUT,DTOUT,DUOUT,IBNUM,IBQUIT,POP,VA,ZTIO,Y S (IBQUIT,IBNUM)=0
"RTN","IBOHDT",7,0)
 W !!
"RTN","IBOHDT",8,0)
 S DIR(0)="NO",DIR("B")=60,DIR("A")="Enter number of days",DIR("A",1)="This report is used to follow-up on charges that have been on hold for an"
"RTN","IBOHDT",9,0)
 S DIR("A",2)="extended period of time.  Press return to print a list of charges on hold",DIR("A",3)="for longer than 60 days.  You may limit your search to older charges"
"RTN","IBOHDT",10,0)
 S DIR("A",4)="by typing a higher number.  (For example, type 80 to see charges on hold",DIR("A",5)="for longer than 80 days.)",DIR("A",6)=""
"RTN","IBOHDT",11,0)
 D ^DIR K DIR S IBNUM=+Y Q:$D(DIRUT)
"RTN","IBOHDT",12,0)
QUEUED ; entry point if queued
"RTN","IBOHDT",13,0)
 ;***
"RTN","IBOHDT",14,0)
 K ^TMP($J)
"RTN","IBOHDT",15,0)
 D:'$G(IBQUIT) DEVICE D:'$G(IBQUIT) CHRGS,REPORT^IBOHDT1
"RTN","IBOHDT",16,0)
 D EXIT
"RTN","IBOHDT",17,0)
 ;***
"RTN","IBOHDT",18,0)
 Q
"RTN","IBOHDT",19,0)
EXIT ;
"RTN","IBOHDT",20,0)
 K ^TMP($J)
"RTN","IBOHDT",21,0)
 K IBRDT,IBRF,IBRX,IBRXN
"RTN","IBOHDT",22,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBOHDT",23,0)
 D ^%ZISC
"RTN","IBOHDT",24,0)
 Q
"RTN","IBOHDT",25,0)
DEVICE ;
"RTN","IBOHDT",26,0)
 I $D(ZTQUEUED) Q
"RTN","IBOHDT",27,0)
 W !!,*7,"*** Margin width of this output is 132 ***"
"RTN","IBOHDT",28,0)
 W !,"*** This output should be queued ***"
"RTN","IBOHDT",29,0)
 S %ZIS="QM" D ^%ZIS I POP S IBQUIT=1 Q
"RTN","IBOHDT",30,0)
 I $D(IO("Q")) S ZTRTN="QUEUED^IBOHDT",ZTIO=ION,ZTDESC="HELD CHARGES REPORT",ZTSAVE("IB*")="" D ^%ZTLOAD W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED") D HOME^%ZIS K ZTSK S IBQUIT=1 Q
"RTN","IBOHDT",31,0)
 U IO
"RTN","IBOHDT",32,0)
 Q
"RTN","IBOHDT",33,0)
 ; indexes records that should be included in report
"RTN","IBOHDT",34,0)
 ;
"RTN","IBOHDT",35,0)
CHRGS ; charges on hold
"RTN","IBOHDT",36,0)
 N DFN,IBDT,IBN,IBNAME,IBND,IBTYPE,X1,X2
"RTN","IBOHDT",37,0)
 S X1=DT,X2=(-IBNUM) D C^%DTC S IBTO=X
"RTN","IBOHDT",38,0)
 S DFN=0 F  S DFN=$O(^IB("AHDT",DFN)) Q:'DFN  S IBDT=0 F  S IBDT=$O(^IB("AHDT",DFN,8,IBDT)) Q:'IBDT!(IBDT>IBTO)  S IBN=0 F  S IBN=$O(^IB("AHDT",DFN,8,IBDT,IBN)) Q:IBN=""  D
"RTN","IBOHDT",39,0)
 .S IBND=$G(^IB(IBN,0)) Q:'IBND
"RTN","IBOHDT",40,0)
 .S DFN=$P(IBND,"^",2) D  ;fetch patient name
"RTN","IBOHDT",41,0)
 ..N VAERR,VADM D DEM^VADPT I VAERR K VADM
"RTN","IBOHDT",42,0)
 ..S IBNAME=$G(VADM(1))
"RTN","IBOHDT",43,0)
 ..Q
"RTN","IBOHDT",44,0)
 .S IBTYPE=$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^"),IBATYPE=$S(IBTYPE["OPT":"O",IBTYPE["PSO":"RX",1:"I")
"RTN","IBOHDT",45,0)
 .S ^TMP($J,"HOLD",IBNAME,DFN,IBATYPE,IBN)=""
"RTN","IBOHDT",46,0)
 .D BILLS
"RTN","IBOHDT",47,0)
 Q
"RTN","IBOHDT",48,0)
PAT ; patient name
"RTN","IBOHDT",49,0)
 N VAERR,VADM D DEM^VADPT I VAERR K VADM
"RTN","IBOHDT",50,0)
 S IBNAME=$G(VADM(1)) S:IBNAME="" IBNAME=" "
"RTN","IBOHDT",51,0)
 Q
"RTN","IBOHDT",52,0)
BILLS ; find bills for charges on hold
"RTN","IBOHDT",53,0)
 N IBFR,IBT,IBATYPE,IBTO
"RTN","IBOHDT",54,0)
 S IBATYPE=$S($P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^")["OPT":"O",$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^")["PSO":"RX",1:"I")
"RTN","IBOHDT",55,0)
 S IBFR=$P(IBND,"^",14),IBTO=$P(IBND,"^",15)
"RTN","IBOHDT",56,0)
 I IBATYPE="I" D INP
"RTN","IBOHDT",57,0)
 I IBATYPE="O" D OPT
"RTN","IBOHDT",58,0)
 E  D RX,OPT
"RTN","IBOHDT",59,0)
 Q
"RTN","IBOHDT",60,0)
INP ; inpatient bills
"RTN","IBOHDT",61,0)
 N IBEV,IBBILL,IBT,X,IBEND,IBOK
"RTN","IBOHDT",62,0)
 S IBEV=$P(IBND,"^",16) Q:'IBEV  ; parent event
"RTN","IBOHDT",63,0)
 S IBEV=($P($G(^IB(IBEV,0)),"^",17)\1) Q:'IBEV  ; date of parent event
"RTN","IBOHDT",64,0)
 S X1=IBEV,X2=1 D C^%DTC S IBEND=X
"RTN","IBOHDT",65,0)
 S IBT=(IBEV-.0001) F  S IBT=$O(^DGCR(399,"D",IBT)) Q:'IBT!(IBT'<IBEND)  S IBBILL=0 F  S IBBILL=$O(^DGCR(399,"D",IBT,IBBILL)) Q:IBBILL=""  D
"RTN","IBOHDT",66,0)
 .D INPTCK
"RTN","IBOHDT",67,0)
 .I IBOK S ^TMP($J,"HOLD",IBNAME,DFN,IBATYPE,IBN,IBBILL)=""
"RTN","IBOHDT",68,0)
 Q
"RTN","IBOHDT",69,0)
 ;
"RTN","IBOHDT",70,0)
INPTCK ; does bill belong to charge? returns IBOK=0 if no
"RTN","IBOHDT",71,0)
 N IBBILL0,IBBILLU
"RTN","IBOHDT",72,0)
 S IBBILL0=$G(^DGCR(399,IBBILL,0)),IBBILLU=$G(^("U"))
"RTN","IBOHDT",73,0)
 S IBOK=1
"RTN","IBOHDT",74,0)
CK1 ; for same patient?
"RTN","IBOHDT",75,0)
 I DFN=$P(IBBILL0,"^",2)
"RTN","IBOHDT",76,0)
 S IBOK=$T
"RTN","IBOHDT",77,0)
 Q:'IBOK
"RTN","IBOHDT",78,0)
CK2 ; same type- inp or opt?
"RTN","IBOHDT",79,0)
 N B S B=$S(+$P(IBBILL0,"^",5)<3:"I",1:"O")
"RTN","IBOHDT",80,0)
 I B=IBATYPE
"RTN","IBOHDT",81,0)
 S IBOK=$T
"RTN","IBOHDT",82,0)
 Q:'IBOK
"RTN","IBOHDT",83,0)
CK3 ; overlap in date range?
"RTN","IBOHDT",84,0)
 N F,T
"RTN","IBOHDT",85,0)
 S F=+IBBILLU,T=$P(IBBILLU,"^",2)
"RTN","IBOHDT",86,0)
 I (IBTO<F)!(IBFR>T)
"RTN","IBOHDT",87,0)
 S IBOK='$T
"RTN","IBOHDT",88,0)
 Q:'IBOK
"RTN","IBOHDT",89,0)
CK4 ; insurance bill?
"RTN","IBOHDT",90,0)
 I $P(IBBILL0,"^",11)="i"
"RTN","IBOHDT",91,0)
 S IBOK=$T
"RTN","IBOHDT",92,0)
 Q
"RTN","IBOHDT",93,0)
OPT ; outpatient bills
"RTN","IBOHDT",94,0)
 N X,IBV,IBBILL,IBOK,IBBILL0
"RTN","IBOHDT",95,0)
 S IBV=(IBFR\1)-.0001 F  S IBV=$O(^DGCR(399,"AOPV",DFN,IBV)) Q:'IBV!(IBV>IBTO)  S IBBILL=0 D
"RTN","IBOHDT",96,0)
 .F  S IBBILL=$O(^DGCR(399,"AOPV",DFN,IBV,IBBILL)) Q:('IBBILL)  D
"RTN","IBOHDT",97,0)
 ..Q:$D(^TMP($J,"HOLD",IBNAME,DFN,IBATYPE,IBN,IBBILL))
"RTN","IBOHDT",98,0)
 ..S IBBILL0=$G(^DGCR(399,IBBILL,0)) D CK4 Q:'IBOK
"RTN","IBOHDT",99,0)
 ..S ^TMP($J,"HOLD",IBNAME,DFN,IBATYPE,IBN,IBBILL)=""
"RTN","IBOHDT",100,0)
 Q
"RTN","IBOHDT",101,0)
RX ; rx refill bills
"RTN","IBOHDT",102,0)
 S (IBRX,IBRXN,IBRF,IBRDT)=0 N IENS
"RTN","IBOHDT",103,0)
 I $P(IBND,"^",4)'["52:" Q
"RTN","IBOHDT",104,0)
 ;
"RTN","IBOHDT",105,0)
 S IBRXN=$P($P(IBND,"^",4),":",2),IBRX=$P($P(IBND,"^",8),"-"),IBRF=$P($P(IBND,"^",4),":",3)
"RTN","IBOHDT",106,0)
 ;
"RTN","IBOHDT",107,0)
 I +IBRF>0 S IBRDT=$$SUBFILE^IBRXUTL(+IBRXN,IBRF,52,.01)
"RTN","IBOHDT",108,0)
 I +IBRF=0 S IBRDT=$$FILE^IBRXUTL(+IBRXN,22)
"RTN","IBOHDT",109,0)
 ;
"RTN","IBOHDT",110,0)
 Q:(IBRX="")!('IBRDT)
"RTN","IBOHDT",111,0)
 N X,IBBILL,IBBILL0,IBFILL,IBFILL0,IBOK S IBBILL=0
"RTN","IBOHDT",112,0)
 S IBFILL=0 F  S IBFILL=$O(^IBA(362.4,"B",IBRX,IBFILL)) Q:IBFILL=""  D
"RTN","IBOHDT",113,0)
 .S IBFILL0=$G(^IBA(362.4,IBFILL,0)) I $P(IBFILL0,"^",3)'=IBRDT Q
"RTN","IBOHDT",114,0)
 .S IBBILL=+$P(IBFILL0,"^",2) I 'IBBILL Q
"RTN","IBOHDT",115,0)
 .S IBBILL0=$G(^DGCR(399,IBBILL,0)) D CK4 I 'IBOK Q
"RTN","IBOHDT",116,0)
 .S ^TMP($J,"HOLD",IBNAME,DFN,IBATYPE,IBN,IBBILL)=""
"RTN","IBOHDT",117,0)
 Q
"RTN","IBOHDT1")
0^27^B16207159^B15937490
"RTN","IBOHDT1",1,0)
IBOHDT1 ;ALB/EMG  -  REPORT OF CHARGES ON HOLD > 60 DAYS-CONT ;FEB 18 1997
"RTN","IBOHDT1",2,0)
 ;;2.0; INTEGRATED BILLING ;**70,95,347**; 21-MAR-94;Build 24
"RTN","IBOHDT1",3,0)
 ;
"RTN","IBOHDT1",4,0)
REPORT ;
"RTN","IBOHDT1",5,0)
 N IBQUIT,IBPAGE,IBNOW,IBLINE,IBCRT,IBBOT,DFN,IBNAME,IBATYPE,IBN,X
"RTN","IBOHDT1",6,0)
 S IBCRT=0,IBBOT=6,IBQUIT=0 I $E(IOST,1,2)="C-" S IBCRT=1,IBBOT=4
"RTN","IBOHDT1",7,0)
 S IBLINE="",$P(IBLINE,"=",96)="||",IBLINE=IBLINE_$E(IBLINE,1,32)
"RTN","IBOHDT1",8,0)
 S IBNOW=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","IBOHDT1",9,0)
 I IBCRT W @IOF
"RTN","IBOHDT1",10,0)
LOOP ;
"RTN","IBOHDT1",11,0)
 S IBPAGE=1 D HEADER Q:IBQUIT
"RTN","IBOHDT1",12,0)
 S IBNAME="" F  S IBNAME=$O(^TMP($J,"HOLD",IBNAME)) Q:IBNAME=""  S DFN=0 F  S DFN=$O(^TMP($J,"HOLD",IBNAME,DFN)) Q:DFN=""  D PRNTPAT Q:IBQUIT  S IBATYPE="" F  S IBATYPE=$O(^TMP($J,"HOLD",IBNAME,DFN,IBATYPE)) Q:IBATYPE=""  D
"RTN","IBOHDT1",13,0)
 .S IBN=0 F  S IBN=$O(^TMP($J,"HOLD",IBNAME,DFN,IBATYPE,IBN)) Q:'IBN!(IBQUIT)  D
"RTN","IBOHDT1",14,0)
 ..D PRNTCHG,PRNTBILL:'IBQUIT
"RTN","IBOHDT1",15,0)
 Q
"RTN","IBOHDT1",16,0)
PRNTBILL ; prints bills for a charge
"RTN","IBOHDT1",17,0)
 N IB,IB0,IBSTAT,IBCHG,IBPD,Y,I,IBT
"RTN","IBOHDT1",18,0)
 D:$Y-IBBOT+1>IOSL HEADER Q:IBQUIT
"RTN","IBOHDT1",19,0)
 S IB="" F I=1:1 S IB=$O(^TMP($J,"HOLD",IBNAME,DFN,IBATYPE,IBN,IB)) W:'IB&(I<2) ?90,"||",! D:$Y+IBBOT>IOSL HEADER Q:'IB!(IBQUIT)  D
"RTN","IBOHDT1",20,0)
 .W ?95,"||"
"RTN","IBOHDT1",21,0)
 .S IB0=$G(^DGCR(399,IB,0)) Q:IB0=""
"RTN","IBOHDT1",22,0)
 .W ?98,$P(IB0,"^",1) ; bill #
"RTN","IBOHDT1",23,0)
 .S IBSTAT=$$STA^PRCAFN(IB)
"RTN","IBOHDT1",24,0)
 .W:+IBSTAT>0 ?106,$E($P(IBSTAT,"^",2),1,3)
"RTN","IBOHDT1",25,0)
 .S IBT=$J((+^DGCR(399,IB,"U1")-$P(^("U1"),"^",2)),9,2)
"RTN","IBOHDT1",26,0)
 .W ?113,IBT ; total charges
"RTN","IBOHDT1",27,0)
 .S IBPD=$$TPR^PRCAFN(IB) S:IBPD<0 IBPD="" S IBPD=$J(IBPD,9,2) W ?122,IBPD,! D:$Y+IBBOT>IOSL HEADER
"RTN","IBOHDT1",28,0)
 Q
"RTN","IBOHDT1",29,0)
PRNTPAT ; prints patient data
"RTN","IBOHDT1",30,0)
 N VAERR,VADM,IBSSN D DEM^VADPT S:'VAERR IBNAME=$G(VADM(1)),IBSSN=VA("BID") ; pt id,brief
"RTN","IBOHDT1",31,0)
 D:$Y+IBBOT>IOSL HEADER Q:IBQUIT
"RTN","IBOHDT1",32,0)
 W $E(IBNAME,1,20),?22,IBSSN
"RTN","IBOHDT1",33,0)
 Q
"RTN","IBOHDT1",34,0)
PRNTCHG ; prints a charge
"RTN","IBOHDT1",35,0)
 N IBACT,IBTYPE,IBBILL,IBFR,IBTO,IBCHG,IBND,IBND1,IBDAY,IBOHDT,X1,X2
"RTN","IBOHDT1",36,0)
 N IBRX,IBRXN,IBRF,IBRDT,IBX,IENS
"RTN","IBOHDT1",37,0)
 S IBND=$G(^IB(IBN,0))
"RTN","IBOHDT1",38,0)
 S IBND1=$G(^IB(IBN,1))
"RTN","IBOHDT1",39,0)
 S (IBRX,IBRXN,IBRF,IBRDT,IBX)=0
"RTN","IBOHDT1",40,0)
 ; action id
"RTN","IBOHDT1",41,0)
 S IBACT=+IBND
"RTN","IBOHDT1",42,0)
 ; type
"RTN","IBOHDT1",43,0)
 S IBTYPE=$P(IBND,"^",3),IBTYPE=$P($G(^IBE(350.1,IBTYPE,0)),"^",1),IBTYPE=$S(IBTYPE["PSO NSC":"RXNSC",IBTYPE["PSO SC":"RX SC",1:$E(IBTYPE,4,7))
"RTN","IBOHDT1",44,0)
 ; bill #
"RTN","IBOHDT1",45,0)
 ; S IBBILL=$P($P(IBND,"^",11),"-",2)
"RTN","IBOHDT1",46,0)
 ; rx info
"RTN","IBOHDT1",47,0)
 I $P(IBND,"^",4)["52:" S IBRXN=$P($P(IBND,"^",4),":",2),IBRX=$P($P(IBND,"^",8),"-"),IBRF=$P($P(IBND,"^",4),":",3)
"RTN","IBOHDT1",48,0)
 I $P(IBND,"^",4)["52:"  D
"RTN","IBOHDT1",49,0)
 .I IBRF>0 S IENS=+IBRF,IBRDT=$$SUBFILE^IBRXUTL(+IBRXN,+IENS,52,.01)
"RTN","IBOHDT1",50,0)
 .E  D
"RTN","IBOHDT1",51,0)
 ..S IENS=+IBRXN
"RTN","IBOHDT1",52,0)
 ..S IBRDT=$$FILE^IBRXUTL(IENS,22)
"RTN","IBOHDT1",53,0)
 S IBX=$$APPT^IBCU3(IBRDT,DFN)
"RTN","IBOHDT1",54,0)
 ; from/fill date
"RTN","IBOHDT1",55,0)
 S IBFR=$$DAT1^IBOUTL($S(+IBRXN>0:IBRDT,1:$P(IBND,"^",14)))
"RTN","IBOHDT1",56,0)
 ; to date
"RTN","IBOHDT1",57,0)
 S IBTO=$$DAT1^IBOUTL($S($P(IBND,"^",15)'="":$P(IBND,"^",15),1:$P(IBND1,"^",2)))
"RTN","IBOHDT1",58,0)
 ; on hold date
"RTN","IBOHDT1",59,0)
 S IBOHDT=$$DAT1^IBOUTL($P(IBND1,"^",6))
"RTN","IBOHDT1",60,0)
 ; number of days on hold
"RTN","IBOHDT1",61,0)
 S X1=DT,X2=$P(IBND1,"^",6) D ^%DTC S IBDAY=$J(X,7)
"RTN","IBOHDT1",62,0)
 ; charge$
"RTN","IBOHDT1",63,0)
 S IBCHG=$J(+$P(IBND,"^",7),9,2)
"RTN","IBOHDT1",64,0)
 W ?29,IBACT,?39,IBTYPE W:IBRX>0 ?46,"Rx #: "_IBRX_$S(IBRF>0:"("_IBRF_")",1:""),?95,"||",!
"RTN","IBOHDT1",65,0)
 W:IBX=1 ?45,"*"
"RTN","IBOHDT1",66,0)
 W ?46,IBFR,?55,IBTO,?66,IBOHDT,?77,IBDAY,?86,IBCHG
"RTN","IBOHDT1",67,0)
 Q
"RTN","IBOHDT1",68,0)
HEADER ; writes the report header
"RTN","IBOHDT1",69,0)
 Q:IBQUIT
"RTN","IBOHDT1",70,0)
 I IBCRT,$Y>1 D  Q:IBQUIT
"RTN","IBOHDT1",71,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","IBOHDT1",72,0)
 .N T R "    Press RETURN to continue",T:DTIME I '$T!(T["^") S IBQUIT=1 Q
"RTN","IBOHDT1",73,0)
 I IBPAGE>1 W !,@IOF
"RTN","IBOHDT1",74,0)
 W ?53,"CHARGES ON HOLD LONGER THAN "_IBNUM_" DAYS",?110,IBNOW,"  PAGE ",IBPAGE,!,"HELD CHARGES",?98,"CORRESPONDING THIRD PARTY BILLS",!,IBLINE
"RTN","IBOHDT1",75,0)
 W !,?46,"From/",?55,"To/",?66,"On Hold",?77,"# Days",?95,"||",?105,"AR"
"RTN","IBOHDT1",76,0)
 W !,"Name",?22,"Pt.ID",?29,"Act.ID",?39,"Type",?46,"Fill Dt",?55,"Rls Dt",?66,"Date",?77,"On Hold",?89,"Charge",?95,"||",?98,"Bill#",?105,"Status",?113,"Charge",?125,"Paid"
"RTN","IBOHDT1",77,0)
 W !,IBLINE,!
"RTN","IBOHDT1",78,0)
 W ?44,"'*' = outpt visit on same day as Rx fill date",?95,"||",!,IBLINE,!
"RTN","IBOHDT1",79,0)
 S IBPAGE=IBPAGE+1
"RTN","IBOHDT1",80,0)
 Q
"RTN","IBOHLD1")
0^28^B18906739^B19222210
"RTN","IBOHLD1",1,0)
IBOHLD1 ;ALB/CJM -  REPORT OF CHARGES ON HOLD W/INS INFO ;MARCH 3 1992
"RTN","IBOHLD1",2,0)
 ;;2.0;INTEGRATED BILLING;**70,95,133,356,347**;21-MAR-94;Build 24
"RTN","IBOHLD1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBOHLD1",4,0)
 ;
"RTN","IBOHLD1",5,0)
 ; modified HELD CHARGES REPORT - includes INS info
"RTN","IBOHLD1",6,0)
 ;
"RTN","IBOHLD1",7,0)
MAIN ;
"RTN","IBOHLD1",8,0)
 N IBQUIT,IBII,DIRUT,DUOUT,DTOUT,ZTIO,Y S IBQUIT=0
"RTN","IBOHLD1",9,0)
 S DIR(0)="Y",DIR("A")="Include Insurance information on this report",DIR("B")="NO"
"RTN","IBOHLD1",10,0)
 S DIR("?",1)="     Enter:  'Y'  -  to include patient insurance information on this report"
"RTN","IBOHLD1",11,0)
 S DIR("?",2)="             'N'  -  to exclude patient insurance information on this report"
"RTN","IBOHLD1",12,0)
 S DIR("?",3)="             '^'  -  to exit this option"
"RTN","IBOHLD1",13,0)
 D ^DIR K DIR G:$D(DIRUT) EXIT S IBII=+Y
"RTN","IBOHLD1",14,0)
 ;
"RTN","IBOHLD1",15,0)
QUEUED ; entry point if queued
"RTN","IBOHLD1",16,0)
 ;***
"RTN","IBOHLD1",17,0)
 K ^TMP($J)
"RTN","IBOHLD1",18,0)
 D:'$G(IBQUIT) DEVICE D:'$G(IBQUIT) CHRGS,REPORT^IBOHLD2
"RTN","IBOHLD1",19,0)
 D EXIT
"RTN","IBOHLD1",20,0)
 ;***
"RTN","IBOHLD1",21,0)
 Q
"RTN","IBOHLD1",22,0)
EXIT ;
"RTN","IBOHLD1",23,0)
 K ^TMP($J)
"RTN","IBOHLD1",24,0)
 K IBRDT,IBRF,IBRX,IBRXN
"RTN","IBOHLD1",25,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBOHLD1",26,0)
 D ^%ZISC
"RTN","IBOHLD1",27,0)
 Q
"RTN","IBOHLD1",28,0)
DEVICE ;
"RTN","IBOHLD1",29,0)
 I $D(ZTQUEUED) Q
"RTN","IBOHLD1",30,0)
 W !!,*7,"*** Margin width of this output is 132 ***"
"RTN","IBOHLD1",31,0)
 W !,"*** This output should be queued ***"
"RTN","IBOHLD1",32,0)
 S %ZIS="QM" D ^%ZIS I POP S IBQUIT=1 Q
"RTN","IBOHLD1",33,0)
 I $D(IO("Q")) D  Q
"RTN","IBOHLD1",34,0)
 . S ZTRTN="QUEUED^IBOHLD1"
"RTN","IBOHLD1",35,0)
 . S ZTIO=ION_";"_IOST_";"_IOM_";"_IOSL
"RTN","IBOHLD1",36,0)
 . S ZTDESC="HELD CHARGES RPT W/INS"
"RTN","IBOHLD1",37,0)
 . S ZTSAVE("IB*")=""
"RTN","IBOHLD1",38,0)
 . D ^%ZTLOAD
"RTN","IBOHLD1",39,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","IBOHLD1",40,0)
 . D HOME^%ZIS K ZTSK S IBQUIT=1
"RTN","IBOHLD1",41,0)
 U IO
"RTN","IBOHLD1",42,0)
 Q
"RTN","IBOHLD1",43,0)
 ; indexes records that should be included in report
"RTN","IBOHLD1",44,0)
 ;
"RTN","IBOHLD1",45,0)
CHRGS ; charges on hold
"RTN","IBOHLD1",46,0)
 N IBN,DFN,IBNAME,IBND
"RTN","IBOHLD1",47,0)
 S DFN=0 F  S DFN=$O(^IB("AH",DFN)) Q:'DFN  D PAT S IBN=0 F  S IBN=$O(^IB("AH",DFN,IBN)) Q:'IBN  D
"RTN","IBOHLD1",48,0)
 .S IBND=$G(^IB(IBN,0)) Q:'IBND
"RTN","IBOHLD1",49,0)
 .S ^TMP($J,"HOLD",IBNAME,DFN,IBN)=""
"RTN","IBOHLD1",50,0)
 .D BILLS
"RTN","IBOHLD1",51,0)
 Q
"RTN","IBOHLD1",52,0)
PAT ; patient name
"RTN","IBOHLD1",53,0)
 N VAERR,VADM D DEM^VADPT I VAERR K VADM
"RTN","IBOHLD1",54,0)
 S IBNAME=$G(VADM(1)) S:IBNAME="" IBNAME=" "
"RTN","IBOHLD1",55,0)
 Q
"RTN","IBOHLD1",56,0)
BILLS ; find bills for charges on hold
"RTN","IBOHLD1",57,0)
 N IBFR,IBT,IBATYPE,IBTO
"RTN","IBOHLD1",58,0)
 S IBATYPE=$S($P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^")["OPT":"O",$P($G(^IBE(350.1,+IBND,"^",3,0)),"^")["PSO":"RX",1:"I")
"RTN","IBOHLD1",59,0)
 S IBFR=$P(IBND,"^",14),IBTO=$P(IBND,"^",15)
"RTN","IBOHLD1",60,0)
 I IBATYPE="I" D INP
"RTN","IBOHLD1",61,0)
 I IBATYPE="O" D OTP
"RTN","IBOHLD1",62,0)
 E  D RX
"RTN","IBOHLD1",63,0)
 Q
"RTN","IBOHLD1",64,0)
INP ; inpatient bills
"RTN","IBOHLD1",65,0)
 N IBEV,IBBILL,IBT,X,X1,X2,IBEND,IBOK
"RTN","IBOHLD1",66,0)
 S IBEV=$P(IBND,"^",16) Q:'IBEV  ; parent event
"RTN","IBOHLD1",67,0)
 S IBEV=($P($G(^IB(IBEV,0)),"^",17)\1) Q:'IBEV  ; date of parent event
"RTN","IBOHLD1",68,0)
 S X1=IBEV,X2=1 D C^%DTC S IBEND=X
"RTN","IBOHLD1",69,0)
 S IBT=(IBEV-.0001) F  S IBT=$O(^DGCR(399,"D",IBT)) Q:'IBT!(IBT'<IBEND)  S IBBILL=0 F  S IBBILL=$O(^DGCR(399,"D",IBT,IBBILL)) Q:IBBILL=""  D
"RTN","IBOHLD1",70,0)
 .D INPTCK
"RTN","IBOHLD1",71,0)
 .I IBOK S ^TMP($J,"HOLD",IBNAME,DFN,IBN,IBBILL)=""
"RTN","IBOHLD1",72,0)
 Q
"RTN","IBOHLD1",73,0)
 ;
"RTN","IBOHLD1",74,0)
INPTCK ; does bill belong to charge? returns IBOK=0 if no
"RTN","IBOHLD1",75,0)
 N IBBILL0,IBBILLU
"RTN","IBOHLD1",76,0)
 S IBBILL0=$G(^DGCR(399,IBBILL,0)),IBBILLU=$G(^("U"))
"RTN","IBOHLD1",77,0)
 S IBOK=1
"RTN","IBOHLD1",78,0)
CK1 ; for same patient?
"RTN","IBOHLD1",79,0)
 I DFN=$P(IBBILL0,"^",2)
"RTN","IBOHLD1",80,0)
 S IBOK=$T
"RTN","IBOHLD1",81,0)
 Q:'IBOK
"RTN","IBOHLD1",82,0)
CK2 ; same type- inp or opt?
"RTN","IBOHLD1",83,0)
 N B S B=$S(+$P(IBBILL0,"^",5)<3:"I",1:"O")
"RTN","IBOHLD1",84,0)
 I B=IBATYPE
"RTN","IBOHLD1",85,0)
 S IBOK=$T
"RTN","IBOHLD1",86,0)
 Q:'IBOK
"RTN","IBOHLD1",87,0)
CK3 ; overlap in date range?
"RTN","IBOHLD1",88,0)
 N F,T
"RTN","IBOHLD1",89,0)
 S F=+IBBILLU,T=$P(IBBILLU,"^",2)
"RTN","IBOHLD1",90,0)
 I (IBTO<F)!(IBFR>T)
"RTN","IBOHLD1",91,0)
 S IBOK='$T
"RTN","IBOHLD1",92,0)
 Q:'IBOK
"RTN","IBOHLD1",93,0)
CK4 ; insurance bill?
"RTN","IBOHLD1",94,0)
 I $P(IBBILL0,"^",11)="i"
"RTN","IBOHLD1",95,0)
 S IBOK=$T
"RTN","IBOHLD1",96,0)
 Q
"RTN","IBOHLD1",97,0)
OTP ; outpatient bills
"RTN","IBOHLD1",98,0)
 N X,IBV,IBBILL,IBOK,IBBILL0
"RTN","IBOHLD1",99,0)
 S IBV=(IBFR\1)-.0001 F  S IBV=$O(^DGCR(399,"AOPV",DFN,IBV)) Q:'IBV!(IBV>IBTO)  S IBBILL=0 D
"RTN","IBOHLD1",100,0)
 .F  S IBBILL=$O(^DGCR(399,"AOPV",DFN,IBV,IBBILL)) Q:('IBBILL)  D
"RTN","IBOHLD1",101,0)
 ..Q:$D(^TMP($J,"HOLD",IBNAME,DFN,IBN,IBBILL))
"RTN","IBOHLD1",102,0)
 ..S IBBILL0=$G(^DGCR(399,IBBILL,0)) D CK4 Q:'IBOK
"RTN","IBOHLD1",103,0)
 ..S ^TMP($J,"HOLD",IBNAME,DFN,IBN,IBBILL)=""
"RTN","IBOHLD1",104,0)
 Q
"RTN","IBOHLD1",105,0)
RX ; rx refill bills
"RTN","IBOHLD1",106,0)
 S (IBRX,IBRXN,IBRF,IBRDT)=0 N IENS
"RTN","IBOHLD1",107,0)
 I $P(IBND,"^",4)'["52:" Q
"RTN","IBOHLD1",108,0)
 ;
"RTN","IBOHLD1",109,0)
 S IBRXN=$P($P(IBND,"^",4),":",2),IBRX=$P($P(IBND,"^",8),"-"),IBRF=$P($P(IBND,"^",4),":",3)
"RTN","IBOHLD1",110,0)
 ;
"RTN","IBOHLD1",111,0)
 I +IBRF>0 S IBRDT=$$SUBFILE^IBRXUTL(+IBRXN,IBRF,52,.01)
"RTN","IBOHLD1",112,0)
 I +IBRF=0 S IBRDT=$$FILE^IBRXUTL(+IBRXN,22)
"RTN","IBOHLD1",113,0)
 ;
"RTN","IBOHLD1",114,0)
 Q:(IBRX="")!('IBRDT)
"RTN","IBOHLD1",115,0)
 N X,IBBILL,IBBILL0,IBFILL,IBFILL0,IBOK S IBBILL=0
"RTN","IBOHLD1",116,0)
 S IBFILL=0 F  S IBFILL=$O(^IBA(362.4,"B",IBRX,IBFILL)) Q:IBFILL=""  D
"RTN","IBOHLD1",117,0)
 .S IBFILL0=$G(^IBA(362.4,IBFILL,0)) I $P(IBFILL0,"^",3)'=IBRDT Q
"RTN","IBOHLD1",118,0)
 .S IBBILL=+$P(IBFILL0,"^",2) I 'IBBILL Q
"RTN","IBOHLD1",119,0)
 .S IBBILL0=$G(^DGCR(399,IBBILL,0)) D CK4 I 'IBOK Q
"RTN","IBOHLD1",120,0)
 .S ^TMP($J,"HOLD",IBNAME,DFN,IBN,IBBILL)=""
"RTN","IBOHLD1",121,0)
 Q
"RTN","IBOHLD2")
0^29^B28331010^B27952774
"RTN","IBOHLD2",1,0)
IBOHLD2 ;ALB/CJM  -  REPORT OF CHARGES ON HOLD W/INS ;MAR 6,1991
"RTN","IBOHLD2",2,0)
 ;;2.0;INTEGRATED BILLING;**70,95,133,153,347**;21-MAR-94;Build 24
"RTN","IBOHLD2",3,0)
REPORT ;
"RTN","IBOHLD2",4,0)
 N IBQUIT,IBPAGE,IBNOW,IBLINE,IBLINE2,IBCRT,IBBOT,DFN,IBNAME,IBN
"RTN","IBOHLD2",5,0)
 S IBCRT=0,IBBOT=7,IBQUIT=0 I $E(IOST,1,2)="C-" S IBCRT=1,IBBOT=7
"RTN","IBOHLD2",6,0)
 S IBLINE="",$P(IBLINE,"=",86)="||",IBLINE=IBLINE_$E(IBLINE,1,45)
"RTN","IBOHLD2",7,0)
 S IBLINE2="",$P(IBLINE2,"-",75)="--"
"RTN","IBOHLD2",8,0)
 D NOW^%DTC S Y=X X ^DD("DD") S IBNOW=Y
"RTN","IBOHLD2",9,0)
 I IBCRT W @IOF
"RTN","IBOHLD2",10,0)
LOOP ;
"RTN","IBOHLD2",11,0)
 S IBPAGE=1 D HEADER Q:IBQUIT
"RTN","IBOHLD2",12,0)
 S IBNAME="" F  S IBNAME=$O(^TMP($J,"HOLD",IBNAME)) Q:IBNAME=""!(IBQUIT)  S DFN=0 F  S DFN=$O(^TMP($J,"HOLD",IBNAME,DFN)) Q:'DFN!(IBQUIT)  D
"RTN","IBOHLD2",13,0)
 .D PRNTPAT,PRNTINS W:IBII ?35,IBLINE2,! Q:IBQUIT  S IBN=0 F  S IBN=$O(^TMP($J,"HOLD",IBNAME,DFN,IBN)) Q:'IBN!(IBQUIT)  D
"RTN","IBOHLD2",14,0)
 ..D PRNTCHG,PRNTBILL:'IBQUIT
"RTN","IBOHLD2",15,0)
 Q
"RTN","IBOHLD2",16,0)
PRNTBILL ; prints bills for a charge
"RTN","IBOHLD2",17,0)
 N IB,IB0,IBSTAT,IBCHG,IBPD,C,Y,I,IBT
"RTN","IBOHLD2",18,0)
 D:$Y+IBBOT>IOSL HEADER Q:IBQUIT
"RTN","IBOHLD2",19,0)
 S IB="" F I=1:1 S IB=$O(^TMP($J,"HOLD",IBNAME,DFN,IBN,IB)) W:'IB&(I<2) ?85,"||",! Q:'IB!(IBQUIT)  D
"RTN","IBOHLD2",20,0)
 .W ?85,"||"
"RTN","IBOHLD2",21,0)
 .S IB0=$G(^DGCR(399,IB,0)) Q:IB0=""
"RTN","IBOHLD2",22,0)
 .W ?88,$P(IB0,"^",1) ; bill #
"RTN","IBOHLD2",23,0)
 .S IBSTAT=$$STA^PRCAFN(IB)
"RTN","IBOHLD2",24,0)
 .W:+IBSTAT>0 ?97,$E($P(IBSTAT,"^",2),1,14)
"RTN","IBOHLD2",25,0)
 .S IBT=$J((+^DGCR(399,IB,"U1")-$P(^("U1"),"^",2)),9,2)
"RTN","IBOHLD2",26,0)
 .W ?112,IBT ; total charges
"RTN","IBOHLD2",27,0)
 .S IBPD=$$TPR^PRCAFN(IB) S:IBPD<0 IBPD="" S IBPD=$J(IBPD,9,2) W ?123,IBPD,! D:$Y+IBBOT>IOSL HEADER
"RTN","IBOHLD2",28,0)
 Q
"RTN","IBOHLD2",29,0)
PRNTPAT ; prints patient data
"RTN","IBOHLD2",30,0)
 N VAERR,VADM,IBSSN D DEM^VADPT S:'VAERR IBSSN=VA("BID") ; pt id,brief
"RTN","IBOHLD2",31,0)
 D:$Y+IBBOT>IOSL HEADER Q:IBQUIT
"RTN","IBOHLD2",32,0)
 W IBLINE,!
"RTN","IBOHLD2",33,0)
 W $E(IBNAME,1,20),?22,IBSSN
"RTN","IBOHLD2",34,0)
 W:IBII ?35,"Insurance Co.",?53,"Subscriber ID",?71,"Group",?88,"Eff Dt",?102,"Exp Dt",!
"RTN","IBOHLD2",35,0)
 Q
"RTN","IBOHLD2",36,0)
PRNTINS ; prints insurance information
"RTN","IBOHLD2",37,0)
 Q:'$D(DFN)!(IBII=0)
"RTN","IBOHLD2",38,0)
 N X,IBINS,IBX
"RTN","IBOHLD2",39,0)
 D ALL^IBCNS1(DFN,"IBINS")
"RTN","IBOHLD2",40,0)
 D:$Y+IBBOT>IOSL HEADER Q:IBQUIT
"RTN","IBOHLD2",41,0)
 W IBLINE,!
"RTN","IBOHLD2",42,0)
 I '$D(IBINS) W ?35,"No Insurance Information"
"RTN","IBOHLD2",43,0)
 S X=0 F  S X=$O(IBINS(X)) Q:'X  S IBINS=IBINS(X,0) D
"RTN","IBOHLD2",44,0)
 .D:$Y+IBBOT>IOSL HEADER Q:IBQUIT
"RTN","IBOHLD2",45,0)
 .N COV,COVD,COVFN,IBCNT,LEDT,LIM,PLN,SP,X,X1,X2,Z0 Q:'$D(IBINS)
"RTN","IBOHLD2",46,0)
 .W ?36,$S($D(^DIC(36,+IBINS,0)):$E($P(^(0),"^",1),1,16),1:"UNKNOWN")
"RTN","IBOHLD2",47,0)
 .W ?54,$E($P(IBINS,"^",2),1,16)
"RTN","IBOHLD2",48,0)
 .W ?72,$E($$GRP($P(IBINS,"^",18)),1,10) S PLN=$P(IBINS,"^",18)
"RTN","IBOHLD2",49,0)
 .W ?88,$$DAT1^IBOUTL($P(IBINS,"^",8)),?102,$$DAT1^IBOUTL($P(IBINS,"^",4))
"RTN","IBOHLD2",50,0)
 .I PLN="" W !,?38,"* No Group Plan Information for this Patient - Verify Insurance Info!",! Q
"RTN","IBOHLD2",51,0)
 .W !,?40,"Plan Coverage   Effective Date   Covered?     Limit Comments",!
"RTN","IBOHLD2",52,0)
 .W ?40,"-------------   --------------   --------     --------------",!
"RTN","IBOHLD2",53,0)
 .S LIM=0 F  S LIM=$O(^IBE(355.31,LIM)) Q:'LIM  S COV=$P($G(^(LIM,0)),U),IBCNT=0,LEDT="" F  S LEDT=$O(^IBA(355.32,"APCD",PLN,LIM,LEDT)) Q:$S(LEDT="":IBCNT,1:0)  D  Q:LEDT=""
"RTN","IBOHLD2",54,0)
 ..D:$Y+IBBOT>IOSL HEADER Q:IBQUIT
"RTN","IBOHLD2",55,0)
 ..S COVFN=+$O(^IBA(355.32,"APCD",PLN,LIM,+LEDT,"")),COVD=$G(^IBA(355.32,+COVFN,0))
"RTN","IBOHLD2",56,0)
 ..I COVD="" W ?40,COV,?86,"BY DEFAULT",! Q
"RTN","IBOHLD2",57,0)
 ..S IBCNT=IBCNT+1
"RTN","IBOHLD2",58,0)
 ..S X1="  "_$S(IBCNT=1:COV,1:"") ;Don't duplicate category
"RTN","IBOHLD2",59,0)
 ..S X2=$$PR(X1,18)_$$PR($$DAT1^IBOUTL($P(LEDT,"-",2)),16)_$$PR($S($P(COVD,U,4):$S($P(COVD,U,4)<2:"YES",$P(COVD,U,4)=2:"CONDITIONAL",1:"UNKNOWN"),1:"NO"),14)
"RTN","IBOHLD2",60,0)
 ..I '$O(^IBA(355.32,COVFN,2,0)) W ?40,X2,! Q
"RTN","IBOHLD2",61,0)
 ..S Z0=0 F  S Z0=$O(^IBA(355.32,COVFN,2,Z0)) Q:'Z0  S SP="" W ?40,$S(Z0=1:X2_$G(^IBA(355.32,COVFN,2,Z0,0)),1:$$PR(SP,48)_$G(^IBA(355.32,COVFN,2,Z0,0))),!
"RTN","IBOHLD2",62,0)
 Q
"RTN","IBOHLD2",63,0)
GRP(IBCPOL) ; get group name/group policy
"RTN","IBOHLD2",64,0)
 N X,Y S X=""
"RTN","IBOHLD2",65,0)
 S X=$G(^IBA(355.3,+$G(IBCPOL),0))
"RTN","IBOHLD2",66,0)
 S Y=$S($P(X,"^",4)'="":$P(X,"^",4),1:$P(X,"^",3))
"RTN","IBOHLD2",67,0)
 I $P(X,"^",10) S Y="Ind Plan "_Y
"RTN","IBOHLD2",68,0)
GRPQ Q Y
"RTN","IBOHLD2",69,0)
PR(STR,LEN) ; pad right
"RTN","IBOHLD2",70,0)
 N B S STR=$E(STR,1,LEN),$P(B," ",LEN-$L(STR))=" "
"RTN","IBOHLD2",71,0)
 Q STR_$G(B)
"RTN","IBOHLD2",72,0)
PRNTCHG ; prints a charge
"RTN","IBOHLD2",73,0)
 N IBACT,IBTYPE,IBBILL,IBFR,IBTO,IBCHG,IBND,IBND1
"RTN","IBOHLD2",74,0)
 N IBRX,IBRXN,IBRF,IBRDT,IBX,IENS
"RTN","IBOHLD2",75,0)
 S IBND=$G(^IB(IBN,0))
"RTN","IBOHLD2",76,0)
 S IBND1=$G(^IB(IBN,1))
"RTN","IBOHLD2",77,0)
 S (IBRX,IBRXN,IBRF,IBRDT,IBX)=0
"RTN","IBOHLD2",78,0)
 ; action id
"RTN","IBOHLD2",79,0)
 S IBACT=+IBND
"RTN","IBOHLD2",80,0)
 ; type
"RTN","IBOHLD2",81,0)
 S IBTYPE=$P(IBND,"^",3),IBTYPE=$P($G(^IBE(350.1,IBTYPE,0)),"^",1),IBTYPE=$S(IBTYPE["PSO NSC":"RXNSC",IBTYPE["PSO SC":"RX SC",1:$E(IBTYPE,4,7))
"RTN","IBOHLD2",82,0)
 ; bill #
"RTN","IBOHLD2",83,0)
 S IBBILL=$P($P(IBND,"^",11),"-",2)
"RTN","IBOHLD2",84,0)
 ; rx info
"RTN","IBOHLD2",85,0)
 I $P(IBND,"^",4)["52:" S IBRXN=$P($P(IBND,"^",4),":",2),IBRX=$P($P(IBND,"^",8),"-"),IBRF=$P($P(IBND,"^",4),":",3)
"RTN","IBOHLD2",86,0)
 I $P(IBND,"^",4)["52:"  D
"RTN","IBOHLD2",87,0)
 .I +IBRF>0  D
"RTN","IBOHLD2",88,0)
 ..S IENS=+IBRF
"RTN","IBOHLD2",89,0)
 ..S IBRDT=$$SUBFILE^IBRXUTL(+IBRXN,+IENS,52,.01)
"RTN","IBOHLD2",90,0)
 .I +IBRF=0  D
"RTN","IBOHLD2",91,0)
 ..S IENS=+IBRXN
"RTN","IBOHLD2",92,0)
 ..S IBRDT=$$FILE^IBRXUTL(+IENS,22)
"RTN","IBOHLD2",93,0)
 S IBX=$$APPT^IBCU3(IBRDT,DFN)
"RTN","IBOHLD2",94,0)
 ; from/rx fill date
"RTN","IBOHLD2",95,0)
 S IBFR=$$DAT1^IBOUTL($S(IBRXN>0:IBRDT,1:$P(IBND,"^",15)))
"RTN","IBOHLD2",96,0)
 ; to date
"RTN","IBOHLD2",97,0)
 S IBTO=$$DAT1^IBOUTL($S($P(IBND,"^",15)'="":($P(IBND,"^",15)),1:$P(IBND1,"^",2)))
"RTN","IBOHLD2",98,0)
 ; charge$
"RTN","IBOHLD2",99,0)
 S IBCHG=$J(+$P(IBND,"^",7),9,2)
"RTN","IBOHLD2",100,0)
 W ?29,IBACT,?39,IBTYPE,?46,IBBILL W:IBRX>0 ?55,"Rx #: "_IBRX_$S(IBRF>0:"("_IBRF_")",1:""),?85,"||",!
"RTN","IBOHLD2",101,0)
 W:IBX=1 ?54,"*"
"RTN","IBOHLD2",102,0)
 W ?55,IBFR,?66,IBTO,?75,IBCHG
"RTN","IBOHLD2",103,0)
 Q
"RTN","IBOHLD2",104,0)
HEADER ; writes the report header
"RTN","IBOHLD2",105,0)
 Q:IBQUIT
"RTN","IBOHLD2",106,0)
 I IBCRT,$Y>1 D  Q:IBQUIT  ;F  Q:$Y>(IOSL-1)  W !
"RTN","IBOHLD2",107,0)
 .W ! N T R "    Press RETURN to continue",T:DTIME I '$T!(T["^") S IBQUIT=1 Q
"RTN","IBOHLD2",108,0)
 I IBPAGE>1 W !,@IOF
"RTN","IBOHLD2",109,0)
 W ?53,"MEANS TEST CHARGES ON HOLD",?110,IBNOW,"  PAGE ",IBPAGE,!,"HELD CHARGES",?87,"CORRESPONDING THIRD PARTY BILLS",!,IBLINE
"RTN","IBOHLD2",110,0)
 W !,"Name",?22,"Pt.ID",?29,"Act.ID",?39,"Type",?46,"Bill#",?55,"Fr/Fl Dt",?66,"To/Rls Dt",?78,"Charge",?85,"||",?88,"Bill#",?97,"AR-Status",?115,"Charge",?128,"Paid"
"RTN","IBOHLD2",111,0)
 W !,IBLINE,!
"RTN","IBOHLD2",112,0)
 W ?20,"'*' = outpt visit on same day as Rx fill date",?85,"||",!,IBLINE,!
"RTN","IBOHLD2",113,0)
 S IBPAGE=IBPAGE+1
"RTN","IBOHLD2",114,0)
 Q
"RTN","IBOHPT1")
0^30^B25044145^B25381468
"RTN","IBOHPT1",1,0)
IBOHPT1 ;ALB/EMG -  REPORT OF ON HOLD CHARGES FOR A PATIENT ;JULY 22 1997
"RTN","IBOHPT1",2,0)
 ;;2.0;INTEGRATED BILLING;**70,95,142,199,347**;21-MAR-94;Build 24
"RTN","IBOHPT1",3,0)
 ;
"RTN","IBOHPT1",4,0)
 ;
"RTN","IBOHPT1",5,0)
MAIN ;
"RTN","IBOHPT1",6,0)
 N IBQUIT,IBII,DIRUT,DUOUT,DTOUT,ZTIO,Y S IBQUIT=0
"RTN","IBOHPT1",7,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBOHPT1",8,0)
 S DIC="^DPT(",DIC(0)="AEQMN" D ^DIC K DIC Q:Y<1  S DFN=+Y
"RTN","IBOHPT1",9,0)
 ;
"RTN","IBOHPT1",10,0)
 S DIR(0)="DA^::EX",DIR("A")="Start with DATE: "
"RTN","IBOHPT1",11,0)
 S DIR("?")="Enter the starting date for this report."
"RTN","IBOHPT1",12,0)
 D ^DIR K DIR G:$D(DIRUT) EXIT S IBSDT=+Y
"RTN","IBOHPT1",13,0)
 S DIR(0)="DA^"_+Y_":NOW:EX",DIR("A")="     Go to DATE: "
"RTN","IBOHPT1",14,0)
 S DIR("?")="Enter the ending date for this report."
"RTN","IBOHPT1",15,0)
 D ^DIR K DIR G:$D(DIRUT) EXIT S IBEDT=+Y
"RTN","IBOHPT1",16,0)
 ;
"RTN","IBOHPT1",17,0)
 S DIR(0)="Y",DIR("A")="Include Pharmacy Co-pay charges on this report",DIR("B")="NO"
"RTN","IBOHPT1",18,0)
 S DIR("?",1)="   Enter:  'Y' - to include Pharmacy Co-pay charges on this report"
"RTN","IBOHPT1",19,0)
 S DIR("?",2)="           'N' - to exclude Pharmacy Co-pay charges on this report"
"RTN","IBOHPT1",20,0)
 S DIR("?")="             '^' - to select a new patient"
"RTN","IBOHPT1",21,0)
 D ^DIR K DIR G:$D(DIRUT) EXIT S IBIBRX=Y
"RTN","IBOHPT1",22,0)
 ;
"RTN","IBOHPT1",23,0)
QUEUED ; entry point if queued
"RTN","IBOHPT1",24,0)
 ;***
"RTN","IBOHPT1",25,0)
 K ^TMP($J)
"RTN","IBOHPT1",26,0)
 D:'$G(IBQUIT) DEVICE D:'$G(IBQUIT) CHRGS,REPORT^IBOHPT2
"RTN","IBOHPT1",27,0)
 D EXIT
"RTN","IBOHPT1",28,0)
 ;***
"RTN","IBOHPT1",29,0)
 Q
"RTN","IBOHPT1",30,0)
EXIT ;
"RTN","IBOHPT1",31,0)
 K ^TMP($J)
"RTN","IBOHPT1",32,0)
 K DFN,IBEND,IBSDT,IBEDT,IBIBRX,IBCN,IBDT,IBIFN,X
"RTN","IBOHPT1",33,0)
 K IBRDT,IBRF,IBRX,IBRXN
"RTN","IBOHPT1",34,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBOHPT1",35,0)
 D ^%ZISC
"RTN","IBOHPT1",36,0)
 Q
"RTN","IBOHPT1",37,0)
DEVICE ;
"RTN","IBOHPT1",38,0)
 I $D(ZTQUEUED) Q
"RTN","IBOHPT1",39,0)
 W !!,*7,"*** Margin width of this output is 132 ***"
"RTN","IBOHPT1",40,0)
 W !,"*** This output should be queued ***"
"RTN","IBOHPT1",41,0)
 S %ZIS="QM" D ^%ZIS I POP S IBQUIT=1 Q
"RTN","IBOHPT1",42,0)
 I $D(IO("Q")) S ZTRTN="QUEUED^IBOHPT1",ZTIO=ION,ZTDESC="ON HOLD CHARGE INFO/PT",ZTSAVE("IB*")="",ZTSAVE("DFN")="" D ^%ZTLOAD W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED") D HOME^%ZIS K ZTSK S IBQUIT=1 Q
"RTN","IBOHPT1",43,0)
 U IO
"RTN","IBOHPT1",44,0)
 Q
"RTN","IBOHPT1",45,0)
 ; indexes records that should be included in report
"RTN","IBOHPT1",46,0)
 ;
"RTN","IBOHPT1",47,0)
CHRGS ; charges on hold
"RTN","IBOHPT1",48,0)
 N DATE,IBN,IBND,A,B,C,D,E,IBNX
"RTN","IBOHPT1",49,0)
 S IBN=0 F  S IBN=$O(^IB("C",DFN,IBN)) Q:'IBN  S IBND=$G(^IB(IBN,0)) D:IBND
"RTN","IBOHPT1",50,0)
 .I 'IBIBRX,$E($G(^IBE(350.1,+$P(IBND,"^",3),0)),1,3)="PSO" Q
"RTN","IBOHPT1",51,0)
 .Q:$P(IBND,"^",8)["ADMISSION"
"RTN","IBOHPT1",52,0)
 .Q:'$P($G(^IB(IBN,1)),"^",6)
"RTN","IBOHPT1",53,0)
 .Q:'$D(^IB("APDT",IBN))
"RTN","IBOHPT1",54,0)
 .S (C,D)="",C=$O(^IB("APDT",IBN,C)),D=$O(^IB("APDT",IBN,C,D))
"RTN","IBOHPT1",55,0)
 .S E=$P($G(^IB(D,0)),U,3)
"RTN","IBOHPT1",56,0)
 .S A=$P($G(^IBE(350.1,E,0)),U,5)
"RTN","IBOHPT1",57,0)
 .S IBNX=$S(A=2:$P($Q(^IB("APDT",IBN,C,D)),")",1),A=3:$P($Q(^IB("APDT",IBN,C,D)),")",1),1:IBN)
"RTN","IBOHPT1",58,0)
 .I (A=2)!(A=3) D
"RTN","IBOHPT1",59,0)
 ..I IBNX["[""" S IBNX="^"_$P(IBNX,"]",2)
"RTN","IBOHPT1",60,0)
 .I $P(IBNX,",",4)>0 S IBNX=$P(IBNX,",",4)
"RTN","IBOHPT1",61,0)
 .S DATE=$P($G(^IB(+$P(IBND,"^",1),0)),"^",17)
"RTN","IBOHPT1",62,0)
 .S:'DATE DATE=$P($G(^IB(IBNX,1)),"^",5)
"RTN","IBOHPT1",63,0)
 .S:'DATE DATE=$P($G(^IB(IBNX,1)),"^",2)\1
"RTN","IBOHPT1",64,0)
 .I (DATE>(IBSDT-.0001))&(DATE<(IBEDT+.9999)) S ^TMP($J,"IB",-DATE,IBNX)="" D BILLS
"RTN","IBOHPT1",65,0)
 Q
"RTN","IBOHPT1",66,0)
 ;
"RTN","IBOHPT1",67,0)
BILLS ; find bills for charges on hold
"RTN","IBOHPT1",68,0)
 N IBFR,IBT,IBATYPE,IBTO
"RTN","IBOHPT1",69,0)
 S IBATYPE=$S($P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^")["OPT":"O",$P($G(^IBE(350.1,+IBND,"^",3,0)),"^")["PSO":"RX",1:"I")
"RTN","IBOHPT1",70,0)
 S IBFR=$P(IBND,"^",14),IBTO=$P(IBND,"^",15)
"RTN","IBOHPT1",71,0)
 I IBATYPE="I" D INP
"RTN","IBOHPT1",72,0)
 I IBATYPE="O" D OPT
"RTN","IBOHPT1",73,0)
 E  D RX
"RTN","IBOHPT1",74,0)
 Q
"RTN","IBOHPT1",75,0)
INP ; inpatient bills
"RTN","IBOHPT1",76,0)
 N IBEV,IBBILL,IBT,X,X1,X2,IBEND,IBOK
"RTN","IBOHPT1",77,0)
 S IBEV=$P(IBND,"^",16) Q:'IBEV  ; parent event
"RTN","IBOHPT1",78,0)
 S IBEV=($P($G(^IB(IBEV,0)),"^",17)\1) Q:'IBEV  ; date of parent event
"RTN","IBOHPT1",79,0)
 S X1=IBEV,X2=1 D C^%DTC S IBEND=X
"RTN","IBOHPT1",80,0)
 S IBT=(IBEV-.0001) F  S IBT=$O(^DGCR(399,"D",IBT)) Q:'IBT!(IBT'<IBEND)  S IBBILL=0 F  S IBBILL=$O(^DGCR(399,"D",IBT,IBBILL)) Q:IBBILL=""  D
"RTN","IBOHPT1",81,0)
 .D INPTCK
"RTN","IBOHPT1",82,0)
 .I IBOK S ^TMP($J,"IB",-DATE,IBNX,IBBILL)=""
"RTN","IBOHPT1",83,0)
 Q
"RTN","IBOHPT1",84,0)
 ;
"RTN","IBOHPT1",85,0)
INPTCK ; does bill belong to charge? returns IBOK=0 if no
"RTN","IBOHPT1",86,0)
 N IBBILL0,IBBILLU
"RTN","IBOHPT1",87,0)
 S IBBILL0=$G(^DGCR(399,IBBILL,0)),IBBILLU=$G(^("U"))
"RTN","IBOHPT1",88,0)
 S IBOK=1
"RTN","IBOHPT1",89,0)
CK1 ; for same patient?
"RTN","IBOHPT1",90,0)
 I DFN=$P(IBBILL0,"^",2)
"RTN","IBOHPT1",91,0)
 S IBOK=$T
"RTN","IBOHPT1",92,0)
 Q:'IBOK
"RTN","IBOHPT1",93,0)
CK2 ; same type- inp or opt?
"RTN","IBOHPT1",94,0)
 N B S B=$S(+$P(IBBILL0,"^",5)<3:"I",1:"O")
"RTN","IBOHPT1",95,0)
 I B=IBATYPE
"RTN","IBOHPT1",96,0)
 S IBOK=$T
"RTN","IBOHPT1",97,0)
 Q:'IBOK
"RTN","IBOHPT1",98,0)
CK3 ; overlap in date range?
"RTN","IBOHPT1",99,0)
 N F,T
"RTN","IBOHPT1",100,0)
 S F=+IBBILLU,T=$P(IBBILLU,"^",2)
"RTN","IBOHPT1",101,0)
 I (IBTO<F)!(IBFR>T)
"RTN","IBOHPT1",102,0)
 S IBOK='$T
"RTN","IBOHPT1",103,0)
 Q:'IBOK
"RTN","IBOHPT1",104,0)
CK4 ; insurance bill?
"RTN","IBOHPT1",105,0)
 I $P(IBBILL0,"^",11)="i"
"RTN","IBOHPT1",106,0)
 S IBOK=$T
"RTN","IBOHPT1",107,0)
 Q
"RTN","IBOHPT1",108,0)
OPT ; outpatient bills
"RTN","IBOHPT1",109,0)
 N X,IBV,IBBILL,IBOK,IBBILL0
"RTN","IBOHPT1",110,0)
 S IBV=(IBFR\1)-.0001 F  S IBV=$O(^DGCR(399,"AOPV",DFN,IBV)) Q:'IBV!(IBV>IBTO)  S IBBILL=0 D
"RTN","IBOHPT1",111,0)
 .F  S IBBILL=$O(^DGCR(399,"AOPV",DFN,IBV,IBBILL)) Q:('IBBILL)  D
"RTN","IBOHPT1",112,0)
 ..Q:$D(^TMP($J,"IB",-DATE,IBNX,IBBILL))
"RTN","IBOHPT1",113,0)
 ..S IBBILL0=$G(^DGCR(399,IBBILL,0)) D CK4 Q:'IBOK
"RTN","IBOHPT1",114,0)
 ..S ^TMP($J,"IB",-DATE,IBNX,IBBILL)=""
"RTN","IBOHPT1",115,0)
 Q
"RTN","IBOHPT1",116,0)
RX ; rx refill bills
"RTN","IBOHPT1",117,0)
 Q:'IBIBRX
"RTN","IBOHPT1",118,0)
 S (IBRX,IBRXN,IBRF,IBRDT)=0 N IENS
"RTN","IBOHPT1",119,0)
 I $P(IBND,"^",4)'["52:" Q
"RTN","IBOHPT1",120,0)
 ;
"RTN","IBOHPT1",121,0)
 S IBRXN=$P($P(IBND,"^",4),":",2),IBRX=$P($P(IBND,"^",8),"-"),IBRF=$P($P(IBND,"^",4),":",3)
"RTN","IBOHPT1",122,0)
 ;
"RTN","IBOHPT1",123,0)
 I +IBRF>0 S IBRDT=$$SUBFILE^IBRXUTL(+IBRXN,IBRF,52,.01)
"RTN","IBOHPT1",124,0)
 I +IBRF=0 S IBRDT=$$FILE^IBRXUTL(+IBRXN,22)
"RTN","IBOHPT1",125,0)
 ;
"RTN","IBOHPT1",126,0)
 Q:(IBRX="")!('IBRDT)
"RTN","IBOHPT1",127,0)
 N X,IBBILL,IBBILL0,IBFILL,IBFILL0,IBOK S IBBILL=0
"RTN","IBOHPT1",128,0)
 S IBFILL=0 F  S IBFILL=$O(^IBA(362.4,"B",IBRX,IBFILL)) Q:IBFILL=""  D
"RTN","IBOHPT1",129,0)
 .S IBFILL0=$G(^IBA(362.4,IBFILL,0)) I $P(IBFILL0,"^",3)'=IBRDT Q
"RTN","IBOHPT1",130,0)
 .S IBBILL=+$P(IBFILL0,"^",2) I 'IBBILL Q
"RTN","IBOHPT1",131,0)
 .S IBBILL0=$G(^DGCR(399,IBBILL,0)) D CK4 I 'IBOK Q
"RTN","IBOHPT1",132,0)
 .S ^TMP($J,"IB",-DATE,IBNX,IBBILL)=""
"RTN","IBOHPT1",133,0)
 Q
"RTN","IBOHPT2")
0^31^B16246897^B16044486
"RTN","IBOHPT2",1,0)
IBOHPT2 ;ALB/EMG  -  ON HOLD CHARGE INFO/PT CONT. ;JULY 22,1997
"RTN","IBOHPT2",2,0)
 ;;2.0; INTEGRATED BILLING ;**70,95,347**; 21-MAR-94;Build 24
"RTN","IBOHPT2",3,0)
REPORT ;
"RTN","IBOHPT2",4,0)
 N IBQUIT,IBPAGE,IBNOW,IBLINE,IBLINE2,IBCRT,IBBOT,IBNAME,IBN,IBDT,IBIFN
"RTN","IBOHPT2",5,0)
 S IBCRT=0,IBBOT=6,IBQUIT=0 I $E(IOST,1,2)="C-" S IBCRT=1,IBBOT=4
"RTN","IBOHPT2",6,0)
 S IBLINE="",$P(IBLINE,"=",86)="||",IBLINE=IBLINE_$E(IBLINE,1,45)
"RTN","IBOHPT2",7,0)
 S IBLINE2="",$P(IBLINE2,"-",75)="--"
"RTN","IBOHPT2",8,0)
 D NOW^%DTC S Y=X X ^DD("DD") S IBNOW=Y
"RTN","IBOHPT2",9,0)
 S IBNAME=$$PT^IBEFUNC(DFN)
"RTN","IBOHPT2",10,0)
 I IBCRT W @IOF
"RTN","IBOHPT2",11,0)
LOOP ;
"RTN","IBOHPT2",12,0)
 ;
"RTN","IBOHPT2",13,0)
 S IBPAGE=1 D HEADER Q:IBQUIT
"RTN","IBOHPT2",14,0)
 S IBDT="" F  S IBDT=$O(^TMP($J,"IB",IBDT)) Q:IBDT=""!(IBDT>0)!(IBQUIT)  D
"RTN","IBOHPT2",15,0)
 .S IBIFN=0 F  S IBIFN=$O(^TMP($J,"IB",IBDT,IBIFN)) Q:'IBIFN!(IBQUIT)  D
"RTN","IBOHPT2",16,0)
 ..D PRNTCHG,PRNTBILL:'IBQUIT
"RTN","IBOHPT2",17,0)
 Q
"RTN","IBOHPT2",18,0)
PRNTBILL ; prints bills for a charge
"RTN","IBOHPT2",19,0)
 N IB,IB0,IBSTAT,IBCHG,IBPD,C,Y,I,IBT,IBPCT
"RTN","IBOHPT2",20,0)
 D:$Y-IBBOT+1>IOSL HEADER Q:IBQUIT
"RTN","IBOHPT2",21,0)
 S IB="" F I=1:1 S IB=$O(^TMP($J,"IB",IBDT,IBIFN,IB)) W:'IB&(I=1) ?85,$S(IBCN:"",1:"||"),! D:$Y+IBBOT>IOSL HEADER Q:'IB!(IBQUIT)  D
"RTN","IBOHPT2",22,0)
 .W ?85,"||"
"RTN","IBOHPT2",23,0)
 .S IB0=$G(^DGCR(399,IB,0)) Q:IB0=""
"RTN","IBOHPT2",24,0)
 .W ?88,$P(IB0,"^",1) ; bill #
"RTN","IBOHPT2",25,0)
 .W ?97,$$BCHGTYPE^IBCU(+IB)
"RTN","IBOHPT2",26,0)
 .S IBSTAT=$P($$ARSTATA^IBJTU4(+IB),U,2)
"RTN","IBOHPT2",27,0)
 .W ?110,IBSTAT
"RTN","IBOHPT2",28,0)
 .S IBT=$J((+^DGCR(399,IB,"U1")-$P(^("U1"),"^",2)),9,2)
"RTN","IBOHPT2",29,0)
 .W ?113,IBT ; total charges
"RTN","IBOHPT2",30,0)
 .S IBPCT=$P($$BILL^RCJIBFN2(IB),"^",5) W ?128,$J(IBPCT,3,0)_"%",! D:$Y+IBBOT>IOSL HEADER
"RTN","IBOHPT2",31,0)
 Q
"RTN","IBOHPT2",32,0)
 ;
"RTN","IBOHPT2",33,0)
PRNTCHG ; prints a charge
"RTN","IBOHPT2",34,0)
 N IBACT,IBAR,IBARIFN,IBARST,IBARTR,IBTYPE,IBBILL,IBFR,IBTO,IBCHG,IBND,IBND1,IBST,IBARBN,IBAREN
"RTN","IBOHPT2",35,0)
 N IBRX,IBRXN,IBRF,IBRDT,IBX,IENS
"RTN","IBOHPT2",36,0)
 S IBND=$G(^IB(IBIFN,0)),IBND1=$G(^IB(IBIFN,1)),(IBCN,IBX)=0
"RTN","IBOHPT2",37,0)
 S (IBRX,IBRXN,IBRF,IBRDT)=0
"RTN","IBOHPT2",38,0)
 ; action id
"RTN","IBOHPT2",39,0)
 S IBACT=+IBND
"RTN","IBOHPT2",40,0)
 ; type
"RTN","IBOHPT2",41,0)
 S X=$P($P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^")," ",2,99)
"RTN","IBOHPT2",42,0)
 S IBTYPE=$E($P(X," ",1,$L(X," ")-1),1,6)
"RTN","IBOHPT2",43,0)
 ; bill #
"RTN","IBOHPT2",44,0)
 S IBBILL=$P($P(IBND,"^",11),"-",2)
"RTN","IBOHPT2",45,0)
 S IBARBN=$P(IBND,"^",11)
"RTN","IBOHPT2",46,0)
 ; rx info
"RTN","IBOHPT2",47,0)
 I $P(IBND,"^",4)["52:" S IBRXN=$P($P(IBND,"^",4),":",2),IBRX=$P($P(IBND,"^",8),"-"),IBRF=$P($P(IBND,"^",4),":",3)
"RTN","IBOHPT2",48,0)
 I $P(IBND,"^",4)["52:"  D
"RTN","IBOHPT2",49,0)
 .I IBRF>0 S IENS=+IBRF,IBRDT=$$SUBFILE^IBRXUTL(+IBRXN,+IENS,52,.01)
"RTN","IBOHPT2",50,0)
 .E  S IENS=+IBRXN,IBRDT=$$FILE^IBRXUTL(+IENS,22)
"RTN","IBOHPT2",51,0)
 S IBX=$$APPT^IBCU3(IBRDT,DFN)
"RTN","IBOHPT2",52,0)
 ; service date
"RTN","IBOHPT2",53,0)
 S IBFR=$$DAT1^IBOUTL($S(IBRXN>0:IBRDT,1:$P(IBND,"^",15)))
"RTN","IBOHPT2",54,0)
 ; release to ar date
"RTN","IBOHPT2",55,0)
 ;S IBAR=$$DAT1^IBOUTL($S($P(IBND,"^",14)'="":$P(IBND,"^",14),1:$P(IBND1,"^",4)))
"RTN","IBOHPT2",56,0)
 S IBAR=$S($P(IBND,"^",11):$$DAT1^IBOUTL($P(IBND1,"^",4)),1:"")
"RTN","IBOHPT2",57,0)
 ; ib status
"RTN","IBOHPT2",58,0)
 S IBST=$E($P($G(^IBE(350.21,+$P(IBND,"^",5),0)),"^",2),1,6)
"RTN","IBOHPT2",59,0)
 ; charge$
"RTN","IBOHPT2",60,0)
 S IBCHG=$J(+$P(IBND,"^",7),9,2)
"RTN","IBOHPT2",61,0)
 S IBARTR=$S($P(IBND,"^",12):$P(IBND,"^",12),1:"")
"RTN","IBOHPT2",62,0)
 ; ar status
"RTN","IBOHPT2",63,0)
 ;S IBARST=$S(IBARTR]"":$E($P($$STNO^RCJIBFN2($$STAT^RCJIBFN2(IBIFN)),"^"),1,6),1:"")
"RTN","IBOHPT2",64,0)
 S IBAREN=$S(IBARTR]"":$O(^PRCA(430,"B",IBARBN,0)),1:"")
"RTN","IBOHPT2",65,0)
 S IBARST=$S(IBAREN]"":$E($P($$STNO^RCJIBFN2($$STAT^RCJIBFN2(IBAREN)),"^"),1,6),1:"")
"RTN","IBOHPT2",66,0)
 ;
"RTN","IBOHPT2",67,0)
 ; write data
"RTN","IBOHPT2",68,0)
 W IBACT,?15,IBTYPE,?28,IBBILL W:IBRX>0 ?38,"Rx #: "_IBRX_$S(IBRF>0:"("_IBRF_")",1:""),?85,"||",!
"RTN","IBOHPT2",69,0)
 W:IBX=1 ?37,"*"
"RTN","IBOHPT2",70,0)
 W ?38,IBFR,?48,IBAR,?58,IBCHG,?70,IBARST,?79,IBST
"RTN","IBOHPT2",71,0)
 I $P(IBND,"^",5)=10 S IBCN=1 W ?85,"|| REASON: ",$P($G(^IBE(350.3,+$P(IBND,"^",10),0)),"^"),!
"RTN","IBOHPT2",72,0)
 Q
"RTN","IBOHPT2",73,0)
HEADER ; writes the report header
"RTN","IBOHPT2",74,0)
 Q:IBQUIT
"RTN","IBOHPT2",75,0)
 I IBCRT,$Y>1 D  Q:IBQUIT
"RTN","IBOHPT2",76,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","IBOHPT2",77,0)
 .N T R "    Press RETURN to continue",T:DTIME I '$T!(T["^") S IBQUIT=1 Q
"RTN","IBOHPT2",78,0)
 I IBPAGE>1 W !,@IOF
"RTN","IBOHPT2",79,0)
 W "List of all HELD bills for ",$P(IBNAME,"^"),"  SSN: ",$P(IBNAME,"^",2),?110,IBNOW,"  PAGE ",IBPAGE,!,"PATIENT CHARGES",?87,"CORRESPONDING THIRD PARTY BILLS",!,IBLINE
"RTN","IBOHPT2",80,0)
 W !,?38,"From/",?48,"Date",?70,"AR",?79,"IB",?85,"||",?110,"AR"
"RTN","IBOHPT2",81,0)
 W !,"Action ID",?15,"Type",?28,"Bill#",?38,"Fill Dt",?48,"to AR",?61,"Charge",?70,"Status",?79,"Status",?85,"||",?88,"Bill#",?97,"Classf($Typ)",?110,"ST",?116,"Charge",?126,"% Paid"
"RTN","IBOHPT2",82,0)
 W !,IBLINE,!
"RTN","IBOHPT2",83,0)
 W:IBIBRX ?36,"'*' = outpt visit on same day as Rx fill date",?85,"||",!,IBLINE,!
"RTN","IBOHPT2",84,0)
 S IBPAGE=IBPAGE+1
"RTN","IBOHPT2",85,0)
 Q
"RTN","IBOHRAR")
0^32^B26572706^B26839066
"RTN","IBOHRAR",1,0)
IBOHRAR ;ALB/EMG-RELEASED CHARGES REPORT;APR 11 1997
"RTN","IBOHRAR",2,0)
 ;;2.0;INTEGRATED BILLING;**70,95,215,347**;21-MAR-94;Build 24
"RTN","IBOHRAR",3,0)
 ;
"RTN","IBOHRAR",4,0)
EN ; - Option entry point.
"RTN","IBOHRAR",5,0)
 N X,Y,ZTIO
"RTN","IBOHRAR",6,0)
 S (IBCRT,IBQUIT)=0,IBLINE="",$P(IBLINE,"-",IOM)=""
"RTN","IBOHRAR",7,0)
 D NOW^%DTC S Y=X X ^DD("DD") S IBNOW=Y D HOME^%ZIS
"RTN","IBOHRAR",8,0)
 W @IOF,!,"List of On Hold/Hold-Review Charges Released to AR"
"RTN","IBOHRAR",9,0)
 W !!?5,"This report will list all charges that were previously on"
"RTN","IBOHRAR",10,0)
 W !?5,"ON HOLD or HOLD-REVIEW status and currently have a status"
"RTN","IBOHRAR",11,0)
 W !?5,"of BILLED and the DATE LAST UPDATED is within the date range"
"RTN","IBOHRAR",12,0)
 W !?5,"you specify."
"RTN","IBOHRAR",13,0)
 ;
"RTN","IBOHRAR",14,0)
SELECT W !!,"Print former (O)N HOLD charges,"
"RTN","IBOHRAR",15,0)
 R !?13,"(H)OLD-REVIEW charges, or (B)OTH: BOTH// ",X:DTIME
"RTN","IBOHRAR",16,0)
 G:'$T!(X["^") END S:X="" X="B" S X=$E(X)
"RTN","IBOHRAR",17,0)
 I "BHObho"'[X D HELP G SELECT
"RTN","IBOHRAR",18,0)
 W "  ",$S("Hh"[X:"HOLD-REVIEW","Oo"[X:"ON HOLD",1:"BOTH")
"RTN","IBOHRAR",19,0)
 S IBSEL=$S("Hh"[X:"H","Oo"[X:"O",1:"HO")
"RTN","IBOHRAR",20,0)
 ;
"RTN","IBOHRAR",21,0)
RANGE S DIR(0)="DA^:NOW:EX",DIR("A")="Start with DATE: "
"RTN","IBOHRAR",22,0)
 S DIR("?")="Enter the starting date for this report."
"RTN","IBOHRAR",23,0)
 W ! D ^DIR K DIR G:$D(DIRUT) END S IBSDT=+Y
"RTN","IBOHRAR",24,0)
 S DIR(0)="DA^+Y:NOW:EX",DIR("A")="     Go to DATE: "
"RTN","IBOHRAR",25,0)
 S DIR("?")="Enter the ending date for this report."
"RTN","IBOHRAR",26,0)
 D ^DIR K DIR G:$D(DIRUT) END S IBEDT=+Y
"RTN","IBOHRAR",27,0)
 ;
"RTN","IBOHRAR",28,0)
QUEUED ; - Entry point if queued.
"RTN","IBOHRAR",29,0)
 K ^TMP($J)
"RTN","IBOHRAR",30,0)
 I '$G(IBQUIT) D DEVICE
"RTN","IBOHRAR",31,0)
 I '$G(IBQUIT) D CHRGS,PRINT
"RTN","IBOHRAR",32,0)
 ;
"RTN","IBOHRAR",33,0)
END D ^%ZISC
"RTN","IBOHRAR",34,0)
 K DFN,DIRUT,DUOUT,I,IBACT,IBATYPE,IBBILL,IBCHG,IBCNT,IBCRT,IBDT,IBFR
"RTN","IBOHRAR",35,0)
 K IBGBL,IBHDR,IBHR,IBLINE,IBN,IBNAME,IBND,IBND1,IBNOW,IBOH,IBPAGE,IBQUIT
"RTN","IBOHRAR",36,0)
 K IBRDT,IBRF,IBRX,IBRXN,IBSEL,IBSDT,IBSSN,IBTO,IBTYPE,POP,VA,X,^TMP($J)
"RTN","IBOHRAR",37,0)
 Q
"RTN","IBOHRAR",38,0)
 ;
"RTN","IBOHRAR",39,0)
DEVICE I $D(ZTQUEUED) Q
"RTN","IBOHRAR",40,0)
 W !!,"*** This output should be queued ***"
"RTN","IBOHRAR",41,0)
 S %ZIS="QM" D ^%ZIS I POP S IBQUIT=1 Q
"RTN","IBOHRAR",42,0)
 I $D(IO("Q")) D  Q
"RTN","IBOHRAR",43,0)
 .S ZTRTN="QUEUED^IBOHRAR",ZTIO=ION,ZTDESC="CHARGES RELEASED TO AR"
"RTN","IBOHRAR",44,0)
 .S ZTSAVE("IB*")="" D ^%ZTLOAD
"RTN","IBOHRAR",45,0)
 .W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","IBOHRAR",46,0)
 .D HOME^%ZIS K ZTSK S IBQUIT=1
"RTN","IBOHRAR",47,0)
 ;
"RTN","IBOHRAR",48,0)
 U IO
"RTN","IBOHRAR",49,0)
 Q
"RTN","IBOHRAR",50,0)
 ;
"RTN","IBOHRAR",51,0)
CHRGS ; - Indexes charges released to AR within date range.
"RTN","IBOHRAR",52,0)
 S IBSDT=IBSDT+.000001,IBEDT=IBEDT+.24 Q:IBQUIT
"RTN","IBOHRAR",53,0)
 I $E(IOST,1,2)="C-" S IBCRT=1
"RTN","IBOHRAR",54,0)
 S IBN=0 F  S IBN=$O(^IB("AC",3,IBN)) Q:'IBN  D
"RTN","IBOHRAR",55,0)
 .S IBND=$G(^IB(IBN,0)),IBND1=$G(^IB(IBN,1)) Q:'IBND!('IBND1)
"RTN","IBOHRAR",56,0)
 .S IBOH=$P(IBND1,U,6),IBHR=$P(IBND1,U,7)
"RTN","IBOHRAR",57,0)
 .I IBOH,IBSEL["O" S IBGBL="IBOH" D CHRGS1 Q
"RTN","IBOHRAR",58,0)
 .I IBHR,IBSEL["H" S IBGBL="IBHR" D CHRGS1
"RTN","IBOHRAR",59,0)
 ;
"RTN","IBOHRAR",60,0)
 Q
"RTN","IBOHRAR",61,0)
 ;
"RTN","IBOHRAR",62,0)
CHRGS1 ; - Set global for report.
"RTN","IBOHRAR",63,0)
 S IBDT=$P(IBND1,U,4) Q:'IBDT!(IBDT<IBSDT)!(IBDT>IBEDT)
"RTN","IBOHRAR",64,0)
 S DFN=$P(IBND,U,2) Q:'DFN
"RTN","IBOHRAR",65,0)
 D PAT S ^TMP($J,IBGBL,IBNAME,DFN,IBN)=""
"RTN","IBOHRAR",66,0)
 Q
"RTN","IBOHRAR",67,0)
 ;
"RTN","IBOHRAR",68,0)
PRINT ; - Print charges released to AR.
"RTN","IBOHRAR",69,0)
 N IENS Q:IBQUIT
"RTN","IBOHRAR",70,0)
 I IBCRT=1 W @IOF
"RTN","IBOHRAR",71,0)
 S IBGBL="" F  S IBGBL=$O(^TMP($J,IBGBL)) Q:IBGBL=""  D  Q:IBQUIT
"RTN","IBOHRAR",72,0)
 .S (IBCNT,IBPAGE)=0 D HEADER Q:IBQUIT
"RTN","IBOHRAR",73,0)
 .S IBNAME="" F  S IBNAME=$O(^TMP($J,IBGBL,IBNAME)) Q:IBNAME=""  S (DFN,IBFL)=0 F  S DFN=$O(^TMP($J,IBGBL,IBNAME,DFN)) Q:'DFN  D  Q:IBQUIT
"RTN","IBOHRAR",74,0)
 ..D PRNTPAT Q:IBQUIT
"RTN","IBOHRAR",75,0)
 ..S IBN=0 F  S IBN=$O(^TMP($J,IBGBL,IBNAME,DFN,IBN)) Q:IBN=""  D
"RTN","IBOHRAR",76,0)
 ...S IBND=$G(^IB(IBN,0)),IBND1=$G(^IB(IBN,1))
"RTN","IBOHRAR",77,0)
 ...S (IBRX,IBRXN,IBRF,IBRDT)=0,IBACT=+IBND
"RTN","IBOHRAR",78,0)
 ...S IBTYPE=$P(IBND,U,3),IBTYPE=$P($G(^IBE(350.1,IBTYPE,0)),U)
"RTN","IBOHRAR",79,0)
 ...S IBTYPE=$S(IBTYPE["PSO NSC":"RXNSC",IBTYPE["PSO SC":"RX SC",1:$E(IBTYPE,4,7))
"RTN","IBOHRAR",80,0)
 ...S IBBILL=$P($P(IBND,U,11),"-",2)
"RTN","IBOHRAR",81,0)
 ...I $P(IBND,U,4)["52:" S IBRXN=$P($P(IBND,U,4),":",2),IBRX=$P($P(IBND,U,8),"-"),IBRF=$P($P(IBND,U,4),":",3)
"RTN","IBOHRAR",82,0)
 ...I IBRF>0 S IBRDT=$$SUBFILE^IBRXUTL(+IBRXN,IBRF,52,.01)
"RTN","IBOHRAR",83,0)
 ...E  S IBRDT=$$FILE^IBRXUTL(IBRXN,22)
"RTN","IBOHRAR",84,0)
 ...S IBFR=$$DAT1^IBOUTL($S(IBRXN>0:IBRDT,1:$P(IBND,U,14)))
"RTN","IBOHRAR",85,0)
 ...S IBTO=$$DAT1^IBOUTL($S($P(IBND,U,15)'="":$P(IBND,U,15),1:$P(IBND1,U,2)))
"RTN","IBOHRAR",86,0)
 ...S IBCHG=$J(+$P(IBND,U,7),9,2)
"RTN","IBOHRAR",87,0)
 ...I IBQUIT Q
"RTN","IBOHRAR",88,0)
 ...W ?27,IBACT,?37,IBBILL,?46,IBTYPE W:IBRX>0 ?52,"Rx #: "_IBRX_$S(IBRF>0:"("_IBRF_")",1:""),!
"RTN","IBOHRAR",89,0)
 ...W ?52,IBFR,?62,IBTO,?70,IBCHG,!
"RTN","IBOHRAR",90,0)
 ...S IBCNT=IBCNT+1
"RTN","IBOHRAR",91,0)
 ...I ($Y+4)>IOSL,$O(^TMP($J,IBGBL,IBNAME,DFN,IBN)) D PRNTPAT
"RTN","IBOHRAR",92,0)
 .;
"RTN","IBOHRAR",93,0)
 .I IBCNT=0 W !?10,"No charges were released in this time period.",!!
"RTN","IBOHRAR",94,0)
 ;
"RTN","IBOHRAR",95,0)
 Q
"RTN","IBOHRAR",96,0)
 ;
"RTN","IBOHRAR",97,0)
PAT ; - Print patient data during processing.
"RTN","IBOHRAR",98,0)
 N VADM,VAERR D DEM^VADPT K:VAERR VADM
"RTN","IBOHRAR",99,0)
 S IBNAME=$G(VADM(1)) S:IBNAME="" IBNAME=""
"RTN","IBOHRAR",100,0)
 Q
"RTN","IBOHRAR",101,0)
 ;
"RTN","IBOHRAR",102,0)
PRNTPAT ; - Print patient data on report.
"RTN","IBOHRAR",103,0)
 N VADM,VAERR
"RTN","IBOHRAR",104,0)
 D DEM^VADPT S IBSSN=$S('VAERR:VA("BID"),1:"")
"RTN","IBOHRAR",105,0)
 I ($Y+4)>IOSL D HEADER Q:IBQUIT
"RTN","IBOHRAR",106,0)
 W $E(IBNAME,1,20),?21,IBSSN
"RTN","IBOHRAR",107,0)
 Q
"RTN","IBOHRAR",108,0)
 ;
"RTN","IBOHRAR",109,0)
HEADER ; - Report header.
"RTN","IBOHRAR",110,0)
 I IBQUIT Q
"RTN","IBOHRAR",111,0)
 I IBCRT,$Y>1 D PAUSE Q:IBQUIT
"RTN","IBOHRAR",112,0)
 S IBHDR=$S(IBGBL="IBHR":"HOLD-REVIEW",1:"ON HOLD"),IBPAGE=IBPAGE+1
"RTN","IBOHRAR",113,0)
 W !,@IOF
"RTN","IBOHRAR",114,0)
 W "List of ",IBHDR," charges released to AR from ",$P($$DAT2^IBOUTL(IBSDT),"@")," to ",$P($$DAT2^IBOUTL(IBEDT),"@")
"RTN","IBOHRAR",115,0)
 W !,"Date Printed: ",IBNOW,?72,"Page ",IBPAGE,!,IBLINE
"RTN","IBOHRAR",116,0)
 W !,"Name",?20,"Pt.ID",?27,"Act.ID",?37,"Bill #",?46,"Type",?52,"Fr/Fl Dt",?62,"To/Rls Dt",?73,"Charge"
"RTN","IBOHRAR",117,0)
 W !,IBLINE,!
"RTN","IBOHRAR",118,0)
 Q
"RTN","IBOHRAR",119,0)
 ;
"RTN","IBOHRAR",120,0)
PAUSE ; - Pause for screen output.
"RTN","IBOHRAR",121,0)
 I $E(IOST,1,2)'="C-" Q
"RTN","IBOHRAR",122,0)
 F I=$Y:1:(IOSL-5) W !
"RTN","IBOHRAR",123,0)
 S DIR(0)="E" D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1
"RTN","IBOHRAR",124,0)
 Q
"RTN","IBOHRAR",125,0)
 ;
"RTN","IBOHRAR",126,0)
HELP ; - 'Print former (O)N HOLD...' prompt help text.
"RTN","IBOHRAR",127,0)
 W !!?5,"Enter: '<CR>' - To select both On Hold and Hold-Review charges"
"RTN","IBOHRAR",128,0)
 W !?15,"'O' - To select only On Hold charges"
"RTN","IBOHRAR",129,0)
 W !?15,"'H' - To select only Hold-Review charges"
"RTN","IBOHRAR",130,0)
 W !?15,"'^' - To quit this option",!
"RTN","IBOHRAR",131,0)
 Q
"RTN","IBPF1")
0^33^B7560506^B7357281
"RTN","IBPF1",1,0)
IBPF1 ;ALB/CPM - FIND BILLING DATA TO ARCHIVE (CON'T.) ; 20-APR-92
"RTN","IBPF1",2,0)
 ;;2.0;INTEGRATED BILLING;**45,347**;21-MAR-94;Build 24
"RTN","IBPF1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBPF1",4,0)
 ;
"RTN","IBPF1",5,0)
BILL ; Find all UB-82's which may be archived.  Check only those bills
"RTN","IBPF1",6,0)
 ; whose First Printed Date is prior to the last date on which a
"RTN","IBPF1",7,0)
 ; bill must have been closed out in Accounts Receivable.
"RTN","IBPF1",8,0)
 ;
"RTN","IBPF1",9,0)
 ;  Input:  IBEDT  --  last valid date on which a bill may be closed out
"RTN","IBPF1",10,0)
 ;         IBTMPL  --  search template in which to store entries
"RTN","IBPF1",11,0)
 ;  Output: IBCNT  --  number of IB Actions which may be archived.
"RTN","IBPF1",12,0)
 ;
"RTN","IBPF1",13,0)
 S (IBDT,IBN)="",IBCNT=0
"RTN","IBPF1",14,0)
 F  S IBDT=$O(^DGCR(399,"AP",IBDT)) Q:'IBDT!(IBDT>IBEDT)  F  S IBN=$O(^DGCR(399,"AP",IBDT,IBN)) Q:'IBN  I $$ALL(IBN,IBEDT) S IBCNT=IBCNT+1,^DIBT(IBTMPL,1,IBN)=""
"RTN","IBPF1",15,0)
 K IBCLO,IBDT,IBN
"RTN","IBPF1",16,0)
 Q
"RTN","IBPF1",17,0)
 ;
"RTN","IBPF1",18,0)
 ;
"RTN","IBPF1",19,0)
IB ; Find Pharmacy Co-pay IB Actions which may be archived.  Check
"RTN","IBPF1",20,0)
 ; only those Pharmacy Co-pay IB Actions which have been added to the
"RTN","IBPF1",21,0)
 ; database prior to the last date on which a bill must have been
"RTN","IBPF1",22,0)
 ; closed out in Accounts Receivable.  Only "parent actions" will
"RTN","IBPF1",23,0)
 ; be checked, and if the parent action may be archived, the parent
"RTN","IBPF1",24,0)
 ; and its "children" will all be marked for archiving.
"RTN","IBPF1",25,0)
 ;
"RTN","IBPF1",26,0)
 ;  Input:  IBEDT  --  last valid date on which a bill may be closed out
"RTN","IBPF1",27,0)
 ;         IBTMPL  --  search template in which to store entries
"RTN","IBPF1",28,0)
 ;  Output: IBCNT  --  number of IB Actions which may be archived.
"RTN","IBPF1",29,0)
 ;
"RTN","IBPF1",30,0)
 ; - first find all Pharmacy action types.
"RTN","IBPF1",31,0)
 K IBA F I=1:1 S IBATYPN=$P($T(PSO+I),";;",2,99) Q:IBATYPN=""  S IBATYP=$O(^IBE(350.1,"B",IBATYPN,0)) I IBATYP S IBA(IBATYP)=""
"RTN","IBPF1",32,0)
 ;
"RTN","IBPF1",33,0)
 ; - locate all Pharmacy Co-pay actions which may be archived.
"RTN","IBPF1",34,0)
 S (IBDT,IBN)="",IBCNT=0
"RTN","IBPF1",35,0)
 F  S IBDT=$O(^IB("D",IBDT)) Q:'IBDT!(IBDT>(IBEDT+.3))  D
"RTN","IBPF1",36,0)
 . F  S IBN=$O(^IB("D",IBDT,IBN)) Q:'IBN  D:$D(^IB("AD",IBN))
"RTN","IBPF1",37,0)
 ..  S IBND=$G(^IB(IBN,0)) Q:IBND=""  ; 0th node missing
"RTN","IBPF1",38,0)
 ..  Q:'$D(IBA(+$P(IBND,"^",3)))  ; not a Pharmacy co-pay action
"RTN","IBPF1",39,0)
 ..  Q:$$RXFILE(IBND)  ; billed prescription has not been archived
"RTN","IBPF1",40,0)
 ..  S IBAR=$P(IBND,"^",11) Q:IBAR=""
"RTN","IBPF1",41,0)
 ..  S X="RCFN03" X ^%ZOSF("TEST")
"RTN","IBPF1",42,0)
 ..  S IBAR=$S($T:$$BIEN^RCFN03(IBAR),1:$O(^PRCA(430,"B",IBAR,0)))
"RTN","IBPF1",43,0)
 ..  I IBAR,$$CLO(IBAR,IBEDT) F DA=0:0 S DA=$O(^IB("AD",IBN,DA)) Q:'DA  S IBCNT=IBCNT+1,^DIBT(IBTMPL,1,DA)=""
"RTN","IBPF1",44,0)
 ;
"RTN","IBPF1",45,0)
 ; - kill variables and quit.
"RTN","IBPF1",46,0)
 K DA,IBA,IBAR,IBATYP,IBATYPN,IBCLO,IBDT,IBN,IBND,X
"RTN","IBPF1",47,0)
 Q
"RTN","IBPF1",48,0)
 ;
"RTN","IBPF1",49,0)
 ;
"RTN","IBPF1",50,0)
RXFILE(IBND) ; Is the prescription still resident on-line?
"RTN","IBPF1",51,0)
 ;         Input:    IBND  --  zeroth node of IB Action
"RTN","IBPF1",52,0)
 ;         Output:     1   --  the rx is still on file
"RTN","IBPF1",53,0)
 ;                     0   --  the rx is no longer on file (archived)
"RTN","IBPF1",54,0)
 N IBSL,RXCHK
"RTN","IBPF1",55,0)
 S IBSL=$P(IBND,"^",4) I +IBSL'=52 Q 0
"RTN","IBPF1",56,0)
 S IBSL=$P(IBSL,":",2)
"RTN","IBPF1",57,0)
 S RXCHK=$$FILE^IBRXUTL(+IBSL,.01)
"RTN","IBPF1",58,0)
 I RXCHK'="" Q 1
"RTN","IBPF1",59,0)
 Q 0
"RTN","IBPF1",60,0)
 ;
"RTN","IBPF1",61,0)
ALL(IBN,DATE) ; Are all bills for an episode of care closed before DATE?
"RTN","IBPF1",62,0)
 ;         Input:     IBN  --  ien of bill in file #399
"RTN","IBPF1",63,0)
 ;                   DATE  --  the date by which the bills must be closed
"RTN","IBPF1",64,0)
 ;         Output:     1   --  all bills are closed
"RTN","IBPF1",65,0)
 ;                     0   --  at least one bill is not closed
"RTN","IBPF1",66,0)
 N I,X
"RTN","IBPF1",67,0)
 S X=$$CLO(IBN,DATE)
"RTN","IBPF1",68,0)
 I X S I=0 F  S I=$O(^DGCR(399,"AC",IBN,I)) Q:'I  I I'=IBN,'$$CLO(I,DATE) S X=0 Q
"RTN","IBPF1",69,0)
 Q X
"RTN","IBPF1",70,0)
 ;
"RTN","IBPF1",71,0)
CLO(IBN,DATE) ; Is the bill closed before DATE?
"RTN","IBPF1",72,0)
 ;         Input:     IBN  --  ien of bill in file #399
"RTN","IBPF1",73,0)
 ;                   DATE  --  the date by which the bill must be closed
"RTN","IBPF1",74,0)
 ;         Output:     1   --  the bill is closed
"RTN","IBPF1",75,0)
 ;                     0   --  the bill is not closed
"RTN","IBPF1",76,0)
 N CLO S CLO=$$PUR^PRCAFN(IBN)
"RTN","IBPF1",77,0)
 Q $S(CLO=-2:1,CLO=-1:0,1:CLO'>DATE)
"RTN","IBPF1",78,0)
 ;
"RTN","IBPF1",79,0)
 ;
"RTN","IBPF1",80,0)
PSO ; Pharmacy Co-pay Action Types
"RTN","IBPF1",81,0)
 ;;PSO NSC RX COPAY CANCEL
"RTN","IBPF1",82,0)
 ;;PSO NSC RX COPAY NEW
"RTN","IBPF1",83,0)
 ;;PSO NSC RX COPAY UPDATE
"RTN","IBPF1",84,0)
 ;;PSO SC RX COPAY CANCEL
"RTN","IBPF1",85,0)
 ;;PSO SC RX COPAY NEW
"RTN","IBPF1",86,0)
 ;;PSO SC RX COPAY UPDATE
"RTN","IBPF1",87,0)
 ;
"RTN","IBRBUL")
0^34^B33342361^B33104627
"RTN","IBRBUL",1,0)
IBRBUL ;ALB/CJM-MEANS TEST HOLD CHARGE BULLETIN ;02-MAR-92
"RTN","IBRBUL",2,0)
 ;;2.0;INTEGRATED BILLING;**70,95,121,153,195,347**;21-MAR-94;Build 24
"RTN","IBRBUL",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBRBUL",4,0)
 ; This bulletin is sent even if the local site has chosen not to hold
"RTN","IBRBUL",5,0)
 ; Means Test charges. In that case, IBHOLDP should be set = 0.
"RTN","IBRBUL",6,0)
 ; requires: IBDD() = internal node in patient file of valid ins.
"RTN","IBRBUL",7,0)
 ;           DUZ
"RTN","IBRBUL",8,0)
 ;           X = 0 node of IB BILLING ACTION
"RTN","IBRBUL",9,0)
 ;           IBHOLDP = 1 if charge on hold, = 0 otherwise
"RTN","IBRBUL",10,0)
 ;           IBSEQNO = 1 if the charges are new, 3 if updated
"RTN","IBRBUL",11,0)
BULL N XMSUB,XMY,XMDUZ,XMTEXT,IBX,IBDUZ,IBNAME,IBPID,IBBID,IBAGE,DFN
"RTN","IBRBUL",12,0)
 S IBX=X,IBDUZ=DUZ
"RTN","IBRBUL",13,0)
 K ^TMP($J,"IBRBUL")
"RTN","IBRBUL",14,0)
 D PAT,HDR,PATLINE,CHRG,INS,BUF,MAIL
"RTN","IBRBUL",15,0)
 K ^TMP($J,"IBRBUL")
"RTN","IBRBUL",16,0)
 Q
"RTN","IBRBUL",17,0)
MAIL ; Transmit mail
"RTN","IBRBUL",18,0)
 N IBGRP S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="^TMP($J,""IBRBUL"","
"RTN","IBRBUL",19,0)
 K XMY
"RTN","IBRBUL",20,0)
 S IBGRP=$P($G(^XMB(3.8,+$P($G(^IBE(350.9,1,0)),U,11),0)),U)
"RTN","IBRBUL",21,0)
 I IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
"RTN","IBRBUL",22,0)
 D ^XMD
"RTN","IBRBUL",23,0)
 Q
"RTN","IBRBUL",24,0)
 ;Add a line to the text array
"RTN","IBRBUL",25,0)
ADDLN(IBTXT) N IBC
"RTN","IBRBUL",26,0)
 S IBC=$O(^TMP($J,"IBRBUL",""),-1)+1
"RTN","IBRBUL",27,0)
 S ^TMP($J,"IBRBUL",IBC)=$G(IBTXT," ")
"RTN","IBRBUL",28,0)
 Q
"RTN","IBRBUL",29,0)
 ;
"RTN","IBRBUL",30,0)
MAILTST ; for testing
"RTN","IBRBUL",31,0)
 ;N IBC
"RTN","IBRBUL",32,0)
 ;W !,XMSUB
"RTN","IBRBUL",33,0)
 ;F IBC=1:1 Q:'$D(^TMP($J,"IBRBUL",IBC))  W !,^(IBC)
"RTN","IBRBUL",34,0)
 Q
"RTN","IBRBUL",35,0)
HDR ; formated for held charges
"RTN","IBRBUL",36,0)
 N IBW,IBU,IBV,SL S IBW=$S('IBHOLDP:"NOT ON HOLD",1:"ON HOLD"),IBU=$S(IBSEQNO=1:"NEW ",IBSEQNO=3:"UPDATED ",1:""),IBV=$S(+$O(IBDD(0)):"active",1:"may have")
"RTN","IBRBUL",37,0)
 ; if the parent event should have the soft-link that is needed to find
"RTN","IBRBUL",38,0)
 ; the division
"RTN","IBRBUL",39,0)
 S SL=$P(X,"^",16) S:SL SL=$G(^IB(SL,0)) S:'SL SL=X S SL=$P(SL,"^",4)
"RTN","IBRBUL",40,0)
 S XMSUB=$E(IBNAME,1,8)_"("_IBBID_")"_" PATIENT CHRG W/INS"_"-"_$E($$DIV(SL),1,11)
"RTN","IBRBUL",41,0)
 D ADDLN("The following patient has "_IBU_"charges "_IBW_" and "_IBV_" insurance.")
"RTN","IBRBUL",42,0)
 D ADDLN("You need to immediately process the charges to the insurance company.")
"RTN","IBRBUL",43,0)
 I +$$BUFFER^IBCNBU1(+$P(X,"^",2)) D
"RTN","IBRBUL",44,0)
 . D ADDLN()
"RTN","IBRBUL",45,0)
 . D ADDLN("This patient has entries in the Insurance Buffer that should be processed")
"RTN","IBRBUL",46,0)
 . D ADDLN("before the charges.")
"RTN","IBRBUL",47,0)
 Q
"RTN","IBRBUL",48,0)
PAT ; gets patient demographic data
"RTN","IBRBUL",49,0)
 N VAERR,VADM,X,VA
"RTN","IBRBUL",50,0)
 S DFN=+$P(IBX,"^",2) D DEM^VADPT I VAERR K VADM
"RTN","IBRBUL",51,0)
 S IBNAME=$$PR($G(VADM(1)),26),IBAGE=$$PR($G(VADM(4)),3),IBPID=$G(VA("PID")),IBBID=$G(VA("BID"))
"RTN","IBRBUL",52,0)
 Q
"RTN","IBRBUL",53,0)
PATLINE ; sets up lines with patient data 
"RTN","IBRBUL",54,0)
 D ADDLN(),ADDLN("Name: "_IBNAME_"   Age    : "_IBAGE_"       Pt. ID: "_IBPID)
"RTN","IBRBUL",55,0)
 Q
"RTN","IBRBUL",56,0)
CHRG ; gets charge data and sets up charge lines
"RTN","IBRBUL",57,0)
 N TP,FR,TO,IBND1,IBRXN,IBRX,IBRDT,IBRF,IENS
"RTN","IBRBUL",58,0)
 S IBND1=$G(^IB(+$G(IBN),1)),(IBRX,IBRXN,IBRF,IBRDT)=0
"RTN","IBRBUL",59,0)
 S FR=$$DAT1^IBOUTL($S($P(IBX,"^",14)'="":($P(IBX,"^",14)),1:$P(IBND1,"^",2)))
"RTN","IBRBUL",60,0)
 S TO=$$DAT1^IBOUTL($S($P(IBX,"^",15)'="":($P(IBX,"^",15)),1:$P(IBND1,"^",2)))
"RTN","IBRBUL",61,0)
 I $P(IBX,"^",4)["52:" S IBRXN=$P($P(IBX,"^",4),":",2),IBRX=$P($P(IBX,"^",8),"-"),IBRF=$P($P(IBX,"^",4),":",3)
"RTN","IBRBUL",62,0)
 I $P(IBX,"^",4)["52:"  D
"RTN","IBRBUL",63,0)
 .I IBRF>0 S IENS=+IBRF,IBRDT=$$SUBFILE^IBRXUTL(+IBRXN,IENS,52,.01)
"RTN","IBRBUL",64,0)
 .E  S IENS=+IBRXN,IBRDT=$$FILE^IBRXUTL(IENS,22)
"RTN","IBRBUL",65,0)
 S TP=$P(IBX,"^",3) S:TP TP=$P($G(^IBE(350.1,TP,0)),"^",3) S:TP TP=$P($$CATN^PRCAFN(TP),"^",2)
"RTN","IBRBUL",66,0)
 D ADDLN("Type: "_$$PR(TP,28)_" Amount : $"_+$P(IBX,"^",7))
"RTN","IBRBUL",67,0)
 D ADDLN("From: "_$$PR(FR,28)_" To     : "_TO)
"RTN","IBRBUL",68,0)
 I IBRXN D ADDLN("Rx #: "_$$PR(IBRX_$S(IBRF'="":" ("_IBRF_")",1:""),28)_" Fill Dt: "_$$DAT1^IBOUTL(IBRDT)_"  Rls Dt: "_TO)
"RTN","IBRBUL",69,0)
 Q
"RTN","IBRBUL",70,0)
INS ; gets insurance data and sets up insurance lines
"RTN","IBRBUL",71,0)
 N I,CO,P,G,GNB,W,E,Y,C,COV,COVD,COVFN,LEDT,LIM,PLN,X1,X2,Z0,IBCNT,P1,P2,P3,P4
"RTN","IBRBUL",72,0)
 ;S IBDTIN=$P(IBX,"^",14)
"RTN","IBRBUL",73,0)
 D ADDLN(),ADDLN("INSURANCE INFORMATION:")
"RTN","IBRBUL",74,0)
 S I="" F  S I=$O(IBDD(I)) Q:'I  D
"RTN","IBRBUL",75,0)
 .S LIM=0
"RTN","IBRBUL",76,0)
 .S CO=$P(IBDD(I),"^",1),CO=$P(^DIC(36,CO,0),"^",1),CO=$$PR(CO,25)
"RTN","IBRBUL",77,0)
 .S P=$$PR($P(IBDD(I),"^",2),21)
"RTN","IBRBUL",78,0)
 .S P1=2.312,P2=6,P3=$P($G(IBDD(I)),"^",6) S P4=$$EXPAND^IBTRE(P1,P2,P3) S W=$$PR(P4,25)
"RTN","IBRBUL",79,0)
 .S Y=$P(IBDD(I),"^",4) D:Y DD^%DT S E=Y
"RTN","IBRBUL",80,0)
 .S G=$$PR($P(IBDD(I),"^",15),25)
"RTN","IBRBUL",81,0)
 .S GNB=$P(IBDD(I),"^",3)
"RTN","IBRBUL",82,0)
 .S PLN=$P(IBDD(I),"^",18)
"RTN","IBRBUL",83,0)
 .D ADDLN(),ADDLN("Company: "_CO_" Policy#: "_P)
"RTN","IBRBUL",84,0)
 .D ADDLN("Whose  : "_W_" Expires: "_E)
"RTN","IBRBUL",85,0)
 .D ADDLN("Group  : "_G_" Group# : "_GNB)
"RTN","IBRBUL",86,0)
 .Q:'PLN
"RTN","IBRBUL",87,0)
 .D ADDLN(" Plan Coverage   Effective Date   Covered?      Limit Comments")
"RTN","IBRBUL",88,0)
 .D ADDLN(" -------------   --------------   --------      --------------")
"RTN","IBRBUL",89,0)
 .F  S LIM=$O(^IBE(355.31,LIM)) Q:'LIM  S COV=$P($G(^(LIM,0)),U),IBCNT=0,LEDT="" F  S LEDT=$O(^IBA(355.32,"APCD",PLN,LIM,LEDT)) Q:$S(LEDT="":IBCNT,1:0)  D  Q:LEDT=""
"RTN","IBRBUL",90,0)
 ..S COVFN=+$O(^IBA(355.32,"APCD",PLN,LIM,+LEDT,"")),COVD=$G(^IBA(355.32,+COVFN,0))
"RTN","IBRBUL",91,0)
 ..I COVD="" D ADDLN("  "_$$PR(COV,32)_"BY DEFAULT") Q
"RTN","IBRBUL",92,0)
 ..S IBCNT=IBCNT+1
"RTN","IBRBUL",93,0)
 ..S X1="  "_$S(IBCNT=1:COV,1:"") ;Don't duplicate category
"RTN","IBRBUL",94,0)
 ..S X2=$$PR(X1,18)_$$PR($$DAT1^IBOUTL($P(LEDT,"-",2)),16)_$$PR($S($P(COVD,U,4):$S($P(COVD,U,4)<2:"YES",$P(COVD,U,4)=2:"CONDITIONAL",1:"UNKNOWN"),1:"NO"),14)
"RTN","IBRBUL",95,0)
 ..I '$O(^IBA(355.32,COVFN,2,0)) D ADDLN(X2) Q
"RTN","IBRBUL",96,0)
 ..S Z0=0 F  S Z0=$O(^IBA(355.32,COVFN,2,Z0)) Q:'Z0  D ADDLN($S(Z0=1:X2_$G(^IBA(355.32,COVFN,2,Z0,0)),1:$$PR("",48)_$G(^IBA(355.32,COVFN,2,Z0,0))))
"RTN","IBRBUL",97,0)
 Q
"RTN","IBRBUL",98,0)
PR(STR,LEN) ; pad right
"RTN","IBRBUL",99,0)
 N B S STR=$E(STR,1,LEN),$P(B," ",LEN-$L(STR))=" "
"RTN","IBRBUL",100,0)
 Q STR_$G(B)
"RTN","IBRBUL",101,0)
DIV(SL) ; returns the division with the softlink as input
"RTN","IBRBUL",102,0)
 N IBDIV,IBWARD,IBFILE,IBIEN
"RTN","IBRBUL",103,0)
 S:SL[";" SL=$P(SL,";",1)
"RTN","IBRBUL",104,0)
 S IBFILE=$P(SL,":",1),IBIEN=$P(SL,":",2)
"RTN","IBRBUL",105,0)
 S IBDIV=""
"RTN","IBRBUL",106,0)
 I IBFILE=409.68,IBIEN S IBDIV=$$SCE^IBSDU(IBIEN,11)
"RTN","IBRBUL",107,0)
 I IBFILE=44,IBIEN S IBDIV=$P($G(^SC(IBIEN,0)),"^",15)
"RTN","IBRBUL",108,0)
 I IBFILE=405,IBIEN S IBWARD=$P($G(^DGPM(IBIEN,0)),"^",6) I IBWARD S IBDIV=$P($G(^DIC(42,IBWARD,0)),"^",11)
"RTN","IBRBUL",109,0)
 I IBDIV S IBDIV=$P($G(^DG(40.8,IBDIV,0)),"^",1)
"RTN","IBRBUL",110,0)
 I IBDIV="" S IBDIV="DIV UNKNWN"
"RTN","IBRBUL",111,0)
 Q IBDIV
"RTN","IBRBUL",112,0)
 ;
"RTN","IBRBUL",113,0)
BUF ;  gets insurance buffer entries and sets up lines to add to bulletin
"RTN","IBRBUL",114,0)
 N DFN,IBBDA,IBB40,IBB60,IBX1,IBX2 S DFN=$P(IBX,U,2) Q:'DFN
"RTN","IBRBUL",115,0)
 I '$$BUFFER^IBCNBU1(DFN) Q
"RTN","IBRBUL",116,0)
 ;
"RTN","IBRBUL",117,0)
 D ADDLN()
"RTN","IBRBUL",118,0)
 D ADDLN("INSURANCE BUFFER:")
"RTN","IBRBUL",119,0)
 S IBBDA=0 F  S IBBDA=$O(^IBA(355.33,"C",DFN,IBBDA)) Q:'IBBDA  D
"RTN","IBRBUL",120,0)
 . S IBB40=$G(^IBA(355.33,IBBDA,40)),IBB60=$G(^IBA(355.33,IBBDA,60))
"RTN","IBRBUL",121,0)
 . ;
"RTN","IBRBUL",122,0)
 . D ADDLN()
"RTN","IBRBUL",123,0)
 . S IBX1=$P($G(^IBA(355.33,IBBDA,20)),U,1),IBX2=$P(IBB60,U,4)
"RTN","IBRBUL",124,0)
 . D ADDLN("Company: "_$$PR(IBX1,25)_"Policy#: "_$$PR(IBX2,21))
"RTN","IBRBUL",125,0)
 . S IBX1=$$EXPAND^IBTRE(355.33,60.05,$P(IBB60,U,5)),IBX2=$$FMTE^XLFDT($P(IBB60,U,3))
"RTN","IBRBUL",126,0)
 . D ADDLN("Whose  : "_$$PR(IBX1,25)_"Expires: "_IBX2)
"RTN","IBRBUL",127,0)
 . S IBX1=$P(IBB40,U,2),IBX2=$P(IBB40,U,3)
"RTN","IBRBUL",128,0)
 . D ADDLN("Group  : "_$$PR(IBX1,25)_"Group# : "_IBX2)
"RTN","IBRBUL",129,0)
 Q
"RTN","IBRFN")
0^35^B49715724^B49341340
"RTN","IBRFN",1,0)
IBRFN ;ALB/AAS - Supported functions for AR ;5-MAY-1992
"RTN","IBRFN",2,0)
 ;;2.0;INTEGRATED BILLING;**52,130,183,223,309,276,347**;21-MAR-94;Build 24
"RTN","IBRFN",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBRFN",4,0)
 ;
"RTN","IBRFN",5,0)
ERR(Y) ; Input Y = -1^error code[;error code...]^literal message
"RTN","IBRFN",6,0)
 ; Output IBRERR = error message 1
"RTN","IBRFN",7,0)
 ;        if more than one code then
"RTN","IBRFN",8,0)
 ;        IBRERR(n)=error code n
"RTN","IBRFN",9,0)
 N N,X,X1,X2 K IBRERR S IBRERR=""
"RTN","IBRFN",10,0)
 G:+Y>0 ERRQ
"RTN","IBRFN",11,0)
 S X2=$P(Y,U,2) F N=1:1 S X=$P(X2,";",N) Q:X=""  S X1=$P($G(^IBE(350.8,+$O(^IBE(350.8,"AC",X,0)),0)),U,2) D
"RTN","IBRFN",12,0)
 .I N=1 S IBRERR=X1
"RTN","IBRFN",13,0)
 .I $P(Y,U,3)]""!($P(X2,";",2,99)]"") S IBRERR(N)=X1
"RTN","IBRFN",14,0)
 I $P(Y,U,3)]"" S N=N+1,IBRERR(N)=$P(Y,U,3)
"RTN","IBRFN",15,0)
ERRQ Q IBRERR
"RTN","IBRFN",16,0)
 ;
"RTN","IBRFN",17,0)
MESS(Y) ;  -input y=error code - from file 350.8 (piece 3)
"RTN","IBRFN",18,0)
 ;   output error message
"RTN","IBRFN",19,0)
 Q $P($G(^IBE(350.8,+$O(^IBE(350.8,"AC",Y,0)),0)),U,2)
"RTN","IBRFN",20,0)
 ;
"RTN","IBRFN",21,0)
SVDT(BN,VDT) ;returns service dates for a specific bill
"RTN","IBRFN",22,0)
 ;  Input:  BN bill number (external form)
"RTN","IBRFN",23,0)
 ;          VDT name of array to hold outpatient visit dates, pass by value (if needed)
"RTN","IBRFN",24,0)
 ; Output:  X function value, string, = 0 if bill not found
"RTN","IBRFN",25,0)
 ;          = 1 (Inpt) or 2 (Outpt)^event date^stmt from date^stmt to date^LOS (I)^Number of visit dates (O)
"RTN","IBRFN",26,0)
 ;          all are internal form, any piece may be null if not defined for the bill
"RTN","IBRFN",27,0)
 ;          array containing outpatient visit dates as subscripts/no data, if VDT passed by value
"RTN","IBRFN",28,0)
 N X,Y,IFN S X=0,BN=$G(BN)
"RTN","IBRFN",29,0)
 I BN'="" S IFN=+$O(^DGCR(399,"B",BN,0)),Y=$G(^DGCR(399,IFN,0)) I Y'="" D
"RTN","IBRFN",30,0)
 . S X=$S(+$P(Y,U,5)<1:"",+$P(Y,U,5)<3:1,+$P(Y,U,5)<5:2,1:"")_U_$P(Y,U,3),Y=$G(^DGCR(399,IFN,"U"))
"RTN","IBRFN",31,0)
 . S X=X_U_$P(Y,U,1)_U_$P(Y,U,2)_U_$P(Y,U,15)_U_$P($G(^DGCR(399,IFN,"OP",0)),U,4)
"RTN","IBRFN",32,0)
 . S Y=0 F  S Y=$O(^DGCR(399,IFN,"OP",Y)) Q:'Y  S VDT(Y)=""
"RTN","IBRFN",33,0)
 Q X
"RTN","IBRFN",34,0)
 ;
"RTN","IBRFN",35,0)
 ;
"RTN","IBRFN",36,0)
REC(IBSTR,IBTYPE) ; Find the AR for an Authorization or Rx number
"RTN","IBRFN",37,0)
 ;   Input: IBSTR - FI Authorization Number or Rx Number
"RTN","IBRFN",38,0)
 ;  Output: IBAR  >0 => ptr to claim/AR in files 399/430
"RTN","IBRFN",39,0)
 ;                -1 => No receivable found
"RTN","IBRFN",40,0)
 ;          IBTYPE (by ref) - how the IBSTR was recognized: 1-Auth,2-ECME,3-Rx#,0-Unknown
"RTN","IBRFN",41,0)
 ;
"RTN","IBRFN",42,0)
 N IBAR,IBARR,IBRX,IBKEY,IBKEYS,IBREF,IBPREF
"RTN","IBRFN",43,0)
 S IBTYPE=0
"RTN","IBRFN",44,0)
 S IBAR=-1
"RTN","IBRFN",45,0)
 I $G(IBSTR)="" G RECQ
"RTN","IBRFN",46,0)
 ;
"RTN","IBRFN",47,0)
 ; extended syntax to indicate the type:
"RTN","IBRFN",48,0)
 ; T.000000 for TRICARE, E.7000000 for ECME, R.50000000 for Rx
"RTN","IBRFN",49,0)
 I $L($P(IBSTR,"."))=1,$P(IBSTR,".",2)'="" D
"RTN","IBRFN",50,0)
 . S IBPREF=$TR($P(IBSTR,"."),"ter","TER")
"RTN","IBRFN",51,0)
 . S IBSTR=$P(IBSTR,".",2,255)
"RTN","IBRFN",52,0)
 . I $E(IBPREF)="T" S IBTYPE=1 ; TRICARE Auth#
"RTN","IBRFN",53,0)
 . I $E(IBPREF)="E" S IBTYPE=2 ; ECME #
"RTN","IBRFN",54,0)
 . I $E(IBPREF)="R" S IBTYPE=3 ; Rx #
"RTN","IBRFN",55,0)
 ;
"RTN","IBRFN",56,0)
 ; look for TRICARE number
"RTN","IBRFN",57,0)
 I (IBTYPE=0)!(IBTYPE=1) S IBAR=$$AREC(IBSTR) I IBAR>0 S IBTYPE=1 G RECQ
"RTN","IBRFN",58,0)
 ;
"RTN","IBRFN",59,0)
 ; - look for ecme number
"RTN","IBRFN",60,0)
 I (IBTYPE=0)!(IBTYPE=2) S IBAR=$$EREC(IBSTR) I IBAR>0 S IBTYPE=2 G RECQ
"RTN","IBRFN",61,0)
 ;
"RTN","IBRFN",62,0)
 I IBTYPE,IBTYPE'=3 G RECQ
"RTN","IBRFN",63,0)
 ;
"RTN","IBRFN",64,0)
 ; - treat as an rx number
"RTN","IBRFN",65,0)
 S IBAR=$$RXREC(IBSTR) I IBAR>0 S IBTYPE=3
"RTN","IBRFN",66,0)
 ;
"RTN","IBRFN",67,0)
RECQ Q IBAR
"RTN","IBRFN",68,0)
 ;
"RTN","IBRFN",69,0)
RXREC(IBRXN) ; Search the Rx
"RTN","IBRFN",70,0)
 N IBR,IBX,IBARR,IBY,IBBIL,IBTRKN,IBFIL,IBRX
"RTN","IBRFN",71,0)
 I $L(IBRXN)<5,'$D(^IBA(362.4,"B",IBRXN)) Q -1
"RTN","IBRFN",72,0)
 ; Scan 362.4
"RTN","IBRFN",73,0)
 ; 1) check the exact match:
"RTN","IBRFN",74,0)
 S IBX=0 F  S IBX=$O(^IBA(362.4,"B",IBRXN,IBX)) Q:'IBX  D
"RTN","IBRFN",75,0)
 . S IBBIL=$P($G(^IBA(362.4,IBX,0)),U,2) Q:'IBBIL
"RTN","IBRFN",76,0)
 . I $P($G(^DGCR(399,IBBIL,0)),U,13)=7 Q  ; ignore cancld
"RTN","IBRFN",77,0)
 . S IBARR(IBBIL)=""
"RTN","IBRFN",78,0)
 ; 2) check Rx with postfixes like "A","B" etc
"RTN","IBRFN",79,0)
 S IBR=IBRXN_" " F  S IBR=$O(^IBA(362.4,"B",IBR)) Q:$E(IBR,1,$L(IBRXN))'=IBRXN  D
"RTN","IBRFN",80,0)
 . I $E(IBR,$L(IBRXN)+1)'?1A Q  ; only letters in postfx
"RTN","IBRFN",81,0)
 . S IBX=0 F  S IBX=$O(^IBA(362.4,"B",IBR,IBX)) Q:'IBX  D
"RTN","IBRFN",82,0)
 . . S IBBIL=$P($G(^IBA(362.4,IBX,0)),U,2) Q:'IBBIL
"RTN","IBRFN",83,0)
 . . I $P($G(^DGCR(399,IBBIL,0)),U,13)=7 Q  ; ignore cancld
"RTN","IBRFN",84,0)
 . . S IBARR(IBBIL)=""
"RTN","IBRFN",85,0)
 ; 3) Now scan CT (356):
"RTN","IBRFN",86,0)
 S DIC=52,DIC(0)="BO",X=IBSTR D DIC^PSODI(52,.DIC,X) S IBRX=+Y K DIC,X,Y
"RTN","IBRFN",87,0)
 I IBRX S IBFIL="" F  S IBFIL=$O(^IBT(356,"ARXFL",IBRX,IBFIL)) Q:IBFIL=""  D
"RTN","IBRFN",88,0)
 . S IBTRKN="" F  S IBTRKN=$O(^IBT(356,"ARXFL",IBRX,IBFIL,IBTRKN)) Q:IBTRKN=""  D
"RTN","IBRFN",89,0)
 .. S IBBIL=$P($G(^IBT(356,IBTRKN,0)),U,11) Q:'IBBIL
"RTN","IBRFN",90,0)
 .. I $P($G(^DGCR(399,IBBIL,0)),U,13)=7 Q  ; ignore cancld
"RTN","IBRFN",91,0)
 .. S IBARR(IBBIL)=""
"RTN","IBRFN",92,0)
 ;
"RTN","IBRFN",93,0)
 S IBY=$O(IBARR("")) I IBY'>0 Q -1  ;not found
"RTN","IBRFN",94,0)
 I '$O(IBARR(IBY)) D DTL(+IBY,"Rx#",IBRXN) Q +IBY  ;one only
"RTN","IBRFN",95,0)
 W !!,"More than one fill for Rx# ",IBSTR," has been billed."
"RTN","IBRFN",96,0)
 S IBY=$$SEL(.IBARR)
"RTN","IBRFN",97,0)
 D DTL(IBY,"Rx#",IBRXN)
"RTN","IBRFN",98,0)
 Q IBY
"RTN","IBRFN",99,0)
 ;
"RTN","IBRFN",100,0)
AREC(AUTH) ; Find the Receivable for a TRICARE FI Authorization Number
"RTN","IBRFN",101,0)
 ;   Input: AUTH - Fiscal Intermediary Authorization Number
"RTN","IBRFN",102,0)
 ;  Output: IBIFN  >0 => ptr to claim/AR in files 399/430
"RTN","IBRFN",103,0)
 ;                 -1 => No receivable found
"RTN","IBRFN",104,0)
 N IBIFN
"RTN","IBRFN",105,0)
 S IBIFN=-1
"RTN","IBRFN",106,0)
 I $G(AUTH)="" G ARECQ
"RTN","IBRFN",107,0)
 S IBIFN=$P($G(^IBA(351.5,+$O(^IBA(351.5,"AUTH",AUTH,0)),0)),U,9)
"RTN","IBRFN",108,0)
 S:'IBIFN IBIFN=-1
"RTN","IBRFN",109,0)
ARECQ ;
"RTN","IBRFN",110,0)
 D DTL(IBIFN,"TRICARE#",AUTH)
"RTN","IBRFN",111,0)
 Q IBIFN
"RTN","IBRFN",112,0)
 ;
"RTN","IBRFN",113,0)
 ;
"RTN","IBRFN",114,0)
EREC(AUTH) ; Find the Receivable for an ECME FI Number
"RTN","IBRFN",115,0)
 ;   Input: AUTH  - Fiscal Intermediary ECME Number
"RTN","IBRFN",116,0)
 ;  Output: IBIFN  >0 => ptr to claim/AR in files 399/430
"RTN","IBRFN",117,0)
 ;                 -1 => No receivable found
"RTN","IBRFN",118,0)
 ;
"RTN","IBRFN",119,0)
 N IBIFN,IBC,IBX,IBA,IBE,IBES
"RTN","IBRFN",120,0)
 S IBIFN=-1,IBC=0
"RTN","IBRFN",121,0)
 I $G(AUTH)="" G ARECQ
"RTN","IBRFN",122,0)
 S (IBE,IBES)=+AUTH_";"
"RTN","IBRFN",123,0)
 F  S IBE=$O(^DGCR(399,"AG",IBE)) Q:IBE'[IBES  D
"RTN","IBRFN",124,0)
 . S IBX=0 F  S IBX=$O(^DGCR(399,"AG",IBE,IBX)) Q:'IBX  D
"RTN","IBRFN",125,0)
 .. I $P($G(^DGCR(399,IBX,0)),U,13)=7 Q  ;exclude cancld
"RTN","IBRFN",126,0)
 .. S IBA(IBX)="",IBC=IBC+1
"RTN","IBRFN",127,0)
 I IBC'>1 S IBIFN=$O(IBA(0)) G ERECQ  ; only one found
"RTN","IBRFN",128,0)
 W !!,"More than one fill for ECME# ",AUTH," has been billed."
"RTN","IBRFN",129,0)
 S IBIFN=$$SEL(.IBA)
"RTN","IBRFN",130,0)
ERECQ S:'IBIFN IBIFN=-1
"RTN","IBRFN",131,0)
 D DTL(IBIFN,"ECME#",AUTH) ;details
"RTN","IBRFN",132,0)
 Q IBIFN
"RTN","IBRFN",133,0)
 ;
"RTN","IBRFN",134,0)
DTL(IBIFN,TYPE,AUTH) ;Details
"RTN","IBRFN",135,0)
 Q:IBIFN'>0  Q:AUTH=""
"RTN","IBRFN",136,0)
 N IBZ,IBBIL,IBPAT,IBPATN,IBRX,IB3624,IBDRUG,IBQTY,IBDAT,DIR
"RTN","IBRFN",137,0)
 S IBZ=$G(^DGCR(399,IBIFN,0))
"RTN","IBRFN",138,0)
 S IBBIL=$P(IBZ,U),IBPAT=$P(IBZ,U,2),IBDAT=$P(IBZ,U,3)
"RTN","IBRFN",139,0)
 S IBPATN=$P($G(^DPT(+IBPAT,0)),U)
"RTN","IBRFN",140,0)
 S IB3624=$G(^IBA(362.4,+$O(^IBA(362.4,"C",IBIFN,"")),0))
"RTN","IBRFN",141,0)
 D ZERO^IBRXUTL(+$P(IB3624,U,4))
"RTN","IBRFN",142,0)
 S IBDRUG=$G(^TMP($J,"IBDRUG",+$P(IB3624,U,4),.01))
"RTN","IBRFN",143,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBRFN",144,0)
 S IBRX=$$FILE^IBRXUTL(+$P(IB3624,U,5),.01)
"RTN","IBRFN",145,0)
 S IBQTY=+$P(IB3624,U,7)
"RTN","IBRFN",146,0)
 W !!,"Found IB Bill ",IBBIL," matching to "_TYPE_" '",AUTH,"':"
"RTN","IBRFN",147,0)
 W !,"Rx#",IBRX," ",$$DAT3^IBOUTL(IBDAT),", ",IBPATN,", ",IBDRUG I IBQTY W " (",IBQTY,")"
"RTN","IBRFN",148,0)
 Q
"RTN","IBRFN",149,0)
 ;
"RTN","IBRFN",150,0)
AUD(IBIFN) ; Does the Accounts Receivable need to be audited?
"RTN","IBRFN",151,0)
 ;   Input: IBIFN  - ptr to claim/AR in files 399/430
"RTN","IBRFN",152,0)
 ;  Output: 0 => Claim does not have to be audited
"RTN","IBRFN",153,0)
 ;               (claim was set up automatically)
"RTN","IBRFN",154,0)
 ;          1 => Claim must be audited
"RTN","IBRFN",155,0)
 ;               (claim was established manually)
"RTN","IBRFN",156,0)
 ;
"RTN","IBRFN",157,0)
AUDQ Q $O(^IBA(351.5,"ACL",+$G(IBIFN),0))'>0
"RTN","IBRFN",158,0)
 ;
"RTN","IBRFN",159,0)
 ;
"RTN","IBRFN",160,0)
TYP(IBIFN) ; Determine the bill type for an Accounts Receivable.
"RTN","IBRFN",161,0)
 ;  Input:  IBIFN - ptr to claim/AR in files 399/430
"RTN","IBRFN",162,0)
 ; Output:  I => Inpatient bill
"RTN","IBRFN",163,0)
 ;          O => Outpatient bill
"RTN","IBRFN",164,0)
 ;          PH => Pharmacy bill
"RTN","IBRFN",165,0)
 ;          PR => Prosthetics bill
"RTN","IBRFN",166,0)
 ;
"RTN","IBRFN",167,0)
 ;          or -1 if the bill type can't be determined.
"RTN","IBRFN",168,0)
 ;
"RTN","IBRFN",169,0)
 N IBATYP,IBATYPN,IBBG,IBN,IBND,IBTYP,IBX
"RTN","IBRFN",170,0)
 S IBTYP=-1
"RTN","IBRFN",171,0)
 I '$G(IBIFN) G TYPQ
"RTN","IBRFN",172,0)
 ;
"RTN","IBRFN",173,0)
 ; - see if AR originated from file #399
"RTN","IBRFN",174,0)
 S IBX=$G(^DGCR(399,IBIFN,0))
"RTN","IBRFN",175,0)
 I IBX]"" D  G TYPQ
"RTN","IBRFN",176,0)
 .S IBTYP=$$BTYP^IBCOIVM1(IBIFN,IBX)
"RTN","IBRFN",177,0)
 .S IBTYP=$S(IBTYP="":-1,IBTYP="P":"PR",IBTYP="R":"PH",1:IBTYP)
"RTN","IBRFN",178,0)
 ;
"RTN","IBRFN",179,0)
 ; - get the bill number
"RTN","IBRFN",180,0)
 S IBX=$P($G(^PRCA(430,IBIFN,0)),U)
"RTN","IBRFN",181,0)
 I IBX="" G TYPQ
"RTN","IBRFN",182,0)
 ;
"RTN","IBRFN",183,0)
 ; - AR must have originated from file #350
"RTN","IBRFN",184,0)
 S IBN=$O(^IB("ABIL",IBX,0))
"RTN","IBRFN",185,0)
 I 'IBN G TYPQ
"RTN","IBRFN",186,0)
 S IBND=$G(^IB(IBN,0))
"RTN","IBRFN",187,0)
 I 'IBND G TYPQ
"RTN","IBRFN",188,0)
 S IBATYP=$G(^IBE(350.1,+$P(IBND,U,3),0)),IBBG=$P(IBATYP,U,11)
"RTN","IBRFN",189,0)
 ;
"RTN","IBRFN",190,0)
 ; - handle TRICARE charges first
"RTN","IBRFN",191,0)
 I IBBG=7 D  G TYPQ
"RTN","IBRFN",192,0)
 .S IBATYPN=$P(IBATYP,U)
"RTN","IBRFN",193,0)
 .S IBTYP=$S(IBATYPN["INPT":"I",IBATYPN["OPT":"O",1:"PH")
"RTN","IBRFN",194,0)
 ;
"RTN","IBRFN",195,0)
 S IBTYP=$S(IBBG=4:"O",IBBG=5:"PH",IBBG=8:"O",1:"I")
"RTN","IBRFN",196,0)
TYPQ Q IBTYP
"RTN","IBRFN",197,0)
 ;
"RTN","IBRFN",198,0)
RELBILL(IBIFN) ; given a Third Party Bill, find all related Third Party bills,
"RTN","IBRFN",199,0)
 ; then find all First Party bills related to any of the Third Party bills
"RTN","IBRFN",200,0)
 ; Input:  IBIFN = internal file number of a Third Party bill
"RTN","IBRFN",201,0)
 ; Output: Third Party Bills (#399)
"RTN","IBRFN",202,0)
 ;    ^TMP("IBRBT", $J, selected bill ifn) = PATIENT HAS ANY RX COVERAGE ON FROM DATE OF BILL?
"RTN","IBRFN",203,0)
 ;    ^TMP("IBRBT", $J, selected bill ifn, matching bill ifn) =
"RTN","IBRFN",204,0)
 ;                                        BILL FROM ^ BILL TO ^ CANCELLED? ^ AR BILL NUMBER ^
"RTN","IBRFN",205,0)
 ;                                        PAYER SEQUENCE ^ PAYER IS MEDICARE SUPPLEMENTAL (0/1) ^ PAYER NAME
"RTN","IBRFN",206,0)
 ; Output:  First Party Bills (#350)
"RTN","IBRFN",207,0)
 ;    ^TMP("IBRBF", $J , selected bill ifn ) = ""
"RTN","IBRFN",208,0)
 ;    ^TMP("IBRBF", $J , selected bill ifn , charge ifn) = 
"RTN","IBRFN",209,0)
 ;                                        BILL FROM ^ BILL TO ^ CANCELLED? ^ AR BILL NUMBER ^
"RTN","IBRFN",210,0)
 ;                                        TOTAL CHARGE ^ ACTION TYPE (SHORT) ^ # DAYS ON HOLD
"RTN","IBRFN",211,0)
 ;
"RTN","IBRFN",212,0)
 N IBIFN1 I '$D(^DGCR(399,+$G(IBIFN),0)) Q
"RTN","IBRFN",213,0)
 D TPTP^IBEFUR(IBIFN)
"RTN","IBRFN",214,0)
 S IBIFN1=0 F  S IBIFN1=$O(^TMP("IBRBT",$J,IBIFN,IBIFN1)) Q:'IBIFN1  D TPFP^IBEFUR(IBIFN1)
"RTN","IBRFN",215,0)
 Q
"RTN","IBRFN",216,0)
 ;
"RTN","IBRFN",217,0)
SEL(IBARR) ; Select an rx bill
"RTN","IBRFN",218,0)
 ;  Input: IBARR - Array of IBIFN
"RTN","IBRFN",219,0)
 ; Output: IBNUM - One of the bill iens, or -1
"RTN","IBRFN",220,0)
 ;
"RTN","IBRFN",221,0)
 N DIR,IBIFN,IBRXN,IBDT,IBZ,IBY,IBC,IBBIL,IBLNK,DFN,IBPT,I
"RTN","IBRFN",222,0)
 ;
"RTN","IBRFN",223,0)
 S IBIFN=$O(IBARR(""))
"RTN","IBRFN",224,0)
 I 'IBIFN Q -1
"RTN","IBRFN",225,0)
 I '$O(IBARR(IBIFN)) Q IBIFN  ; no choice
"RTN","IBRFN",226,0)
 ;
"RTN","IBRFN",227,0)
 W !!?4,"Select one of the following:",!
"RTN","IBRFN",228,0)
 W !?11,"BILL",?23,"RX",?33,"DATE",?46,"PATIENT"
"RTN","IBRFN",229,0)
 W !?6 F I=1:1:60 W "-"
"RTN","IBRFN",230,0)
 ;
"RTN","IBRFN",231,0)
 S (IBIFN,IBC)=0
"RTN","IBRFN",232,0)
 F  S IBIFN=$O(IBARR(IBIFN)) Q:'IBIFN  D
"RTN","IBRFN",233,0)
 . S IBZ=$G(^DGCR(399,IBIFN,0)) Q:IBZ=""
"RTN","IBRFN",234,0)
 . S DFN=+$P(IBZ,U,2),IBPT=$P($G(^DPT(DFN,0)),U)
"RTN","IBRFN",235,0)
 . S IBBIL=$P(IBZ,U)
"RTN","IBRFN",236,0)
 . S IBDT=$P(IBZ,U,3)
"RTN","IBRFN",237,0)
 . S IBY=$G(^IBA(362.4,+$O(^IBA(362.4,"C",IBIFN,0)),0))
"RTN","IBRFN",238,0)
 . S IBRXN=$P(IBY,U)
"RTN","IBRFN",239,0)
 . S IBC=IBC+1
"RTN","IBRFN",240,0)
 . S IBLNK(IBC)=IBIFN
"RTN","IBRFN",241,0)
 . W !?6,IBC,?10,IBBIL," ",?20,IBRXN," ",?32,$$DAT1^IBOUTL(IBDT)," ",?45,IBPT
"RTN","IBRFN",242,0)
 ;
"RTN","IBRFN",243,0)
 ;
"RTN","IBRFN",244,0)
 F  R !!?4,"Select one of the bills by number: ",IBY:DTIME  Q:'$T  Q:"^"[IBY  Q:$D(IBLNK(+IBY))  W:(IBY'="")&(IBY'["?") "  ??"  D
"RTN","IBRFN",245,0)
 . W !!?8,"Enter numeric value from 1 to ",IBC
"RTN","IBRFN",246,0)
 ;
"RTN","IBRFN",247,0)
 S IBIFN=$G(IBLNK(+IBY),-1)
"RTN","IBRFN",248,0)
 Q IBIFN
"RTN","IBRREL")
0^36^B25137354^B24689660
"RTN","IBRREL",1,0)
IBRREL ;ALB/CPM - RELEASE MEANS TEST CHARGES 'ON HOLD' ; 03-MAR-92
"RTN","IBRREL",2,0)
 ;;2.0;INTEGRATED BILLING;**95,153,199,347**;21-MAR-94;Build 24
"RTN","IBRREL",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBRREL",4,0)
 ;
"RTN","IBRREL",5,0)
EN ; Entry point for stand-alone 'release' option
"RTN","IBRREL",6,0)
 I '$D(^IB("AH")) W !!,"There are no patients with charges 'on hold' at this time.",! Q
"RTN","IBRREL",7,0)
 ;
"RTN","IBRREL",8,0)
 D HOME^%ZIS
"RTN","IBRREL",9,0)
 W !!,"This option is used to release Means Test charges which have been"
"RTN","IBRREL",10,0)
 W !,"placed 'on hold.'  Please enter a patient with charges 'on hold,' and these"
"RTN","IBRREL",11,0)
 W !,"charges will be displayed and may be selected to be released to Accounts",!,"Receivable.",!
"RTN","IBRREL",12,0)
 ;
"RTN","IBRREL",13,0)
ASK ;
"RTN","IBRREL",14,0)
 ;***
"RTN","IBRREL",15,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBRREL" D T1^%ZOSV ;stop rt clock
"RTN","IBRREL",16,0)
 ;S XRTL=$ZU(0),XRTN="IBRREL-1" D T0^%ZOSV ;start rt clock
"RTN","IBRREL",17,0)
 ;
"RTN","IBRREL",18,0)
 R !,"Select PATIENT NAME: ",X:DTIME G END:"^"[$E(X)
"RTN","IBRREL",19,0)
 I $E(X,1,2)="??" D HLP1 G ASK
"RTN","IBRREL",20,0)
 I $E(X)="?" D HLP G ASK
"RTN","IBRREL",21,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBRREL",22,0)
 S DIC="^DPT(",DIC(0)="QME" D ^DIC K DIC G ASK:Y<1 S DFN=+Y
"RTN","IBRREL",23,0)
 ;
"RTN","IBRREL",24,0)
 K IBA,PRCABN
"RTN","IBRREL",25,0)
 S IBI=0 F IBNUM=1:1 S IBI=$O(^IB("AH",DFN,IBI)) Q:'IBI  S IBA(IBNUM)=IBI
"RTN","IBRREL",26,0)
 I '$D(IBA) W !!,"This patient does not have any charges 'on hold.'",! G ASK
"RTN","IBRREL",27,0)
 ;
"RTN","IBRREL",28,0)
 S IBPT=$$PT^IBEFUNC(DFN) W @IOF,$P(IBPT,"^"),"      Pt ID: ",$P(IBPT,"^",2),! S I="",$P(I,"-",80)="" W I K I
"RTN","IBRREL",29,0)
 ;
"RTN","IBRREL",30,0)
 ; - display header and list charges
"RTN","IBRREL",31,0)
RESUME W !!,"The following IB Actions ",$S($D(PRCABN):"associated with this bill",1:"for this patient")," are ON HOLD:" D HDR
"RTN","IBRREL",32,0)
 S IBQ=0 F IBNUM=1:1 Q:'$D(IBA(IBNUM))  D:'(IBNUM#15)  Q:IBQ  S IBN=IBA(IBNUM) D LST
"RTN","IBRREL",33,0)
 . R !,"Enter RETURN to continue or '^' to stop: ",X:DTIME S:X["^"!('$T) IBQ=1 Q
"RTN","IBRREL",34,0)
 ;
"RTN","IBRREL",35,0)
 ; - prompt user to select IB Actions
"RTN","IBRREL",36,0)
 S DIR(0)="LA^1:"_(IBNUM-1)_"^K:X[""."" X",DIR("A")="Select IB Action"_$E("s",IBNUM>2)_" (REF #) to release (or '^' to exit): ",DIR("?")="^D HELP^IBRREL"
"RTN","IBRREL",37,0)
 W ! D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) G END:$D(PRCABN) D END W ! G ASK
"RTN","IBRREL",38,0)
 ;
"RTN","IBRREL",39,0)
 S IBRANGE=Y,IBSEQNO=1,IBDUZ=DUZ
"RTN","IBRREL",40,0)
 ;
"RTN","IBRREL",41,0)
 S DIR(0)="Y",DIR("A")="OK to pass "_$S($P(Y,",",2):"these charges",1:"this charge")_" to Accounts Receivable"
"RTN","IBRREL",42,0)
 D ^DIR K DIR I 'Y!($D(DIRUT))!($D(DUOUT)) G END:$D(PRCABN) D END W ! G ASK
"RTN","IBRREL",43,0)
 ;
"RTN","IBRREL",44,0)
 ; - pass charges to Accounts Receivable
"RTN","IBRREL",45,0)
 W !!,"Passing charges to Accounts Receivable...",! D HDR
"RTN","IBRREL",46,0)
 F IBCTR=1:1 S IBNUM=$P(IBRANGE,",",IBCTR) Q:'IBNUM  I $D(IBA(IBNUM)) S IBNOS=IBA(IBNUM) D ^IBR,ERR:Y<1 I Y>0 S IBN=IBA(IBNUM) D LST
"RTN","IBRREL",47,0)
 W !!,"The charge"_$E("s",$P(IBRANGE,",",2)>0)_" listed above "_$S($P(IBRANGE,",",2):"have",1:"has")_" been passed to Accounts Receivable.",!
"RTN","IBRREL",48,0)
 ;
"RTN","IBRREL",49,0)
 I '$D(PRCABN) W !! S DIR(0)="E" D ^DIR K DIR D END W ! G ASK
"RTN","IBRREL",50,0)
 ;
"RTN","IBRREL",51,0)
END K DIC,DIRUT,DUOUT,DTOUT,IBA,IBAFY,IBARTYP,IBATYP,IBCTR,IBN,IBDA,IBDUZ
"RTN","IBRREL",52,0)
 K IBFAC,IBI,IBIL,IBRANGE,IBNOS,IBNUM,IBPT,IBQ,IBSEQNO,IBSERV,IBSITE
"RTN","IBRREL",53,0)
 K IBTOTL,IBTRAN,IBWHER,VA,VAERR,VADM
"RTN","IBRREL",54,0)
 K:'$D(PRCABN) DFN
"RTN","IBRREL",55,0)
 ;***
"RTN","IBRREL",56,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBRREL" D T1^%ZOSV ;stop rt clock
"RTN","IBRREL",57,0)
 Q
"RTN","IBRREL",58,0)
 ;
"RTN","IBRREL",59,0)
 ;
"RTN","IBRREL",60,0)
HDR ; Display charge header.
"RTN","IBRREL",61,0)
 N IBLINE S $P(IBLINE,"=",81)=""
"RTN","IBRREL",62,0)
 W !,IBLINE,!," REF   Action ID  Bill Type",?42,"Bill #",?51,"Fr/Fl Dt",?61,"To/Rls Dt",?73,"Charge"
"RTN","IBRREL",63,0)
 W !,IBLINE Q
"RTN","IBRREL",64,0)
 ;
"RTN","IBRREL",65,0)
LST ; Display individual IB Action.
"RTN","IBRREL",66,0)
 N IBND,IBND1,IBRXN,IBRX,IBRF,IBRDT,IENS
"RTN","IBRREL",67,0)
 S IBND=$G(^IB(IBN,0)),IBND1=$G(^IB(IBN,1)),(IBRXN,IBRX,IBRF,IBRDT)=0
"RTN","IBRREL",68,0)
 I $P(IBND,"^",4)["52:" S IBRXN=$P($P(IBND,"^",4),":",2),IBRX=$P($P(IBND,"^",8),"-"),IBRF=$P($P(IBND,"^",4),":",3)
"RTN","IBRREL",69,0)
 I $P(IBND,"^",4)["52:"  D
"RTN","IBRREL",70,0)
 .I IBRF>0 D
"RTN","IBRREL",71,0)
 ..S IENS=+IBRF
"RTN","IBRREL",72,0)
 ..S IBRDT=$$SUBFILE^IBRXUTL(+IBRXN,+IENS,52,.01)
"RTN","IBRREL",73,0)
 .E  D
"RTN","IBRREL",74,0)
 ..S IENS=+IBRXN
"RTN","IBRREL",75,0)
 ..S IBRDT=$$FILE^IBRXUTL(+IENS,22)
"RTN","IBRREL",76,0)
 W !?1,$J(IBNUM,2),?7,$J(+IBND,9)
"RTN","IBRREL",77,0)
 W ?18,$S(IBRXN>0:"Rx #: "_IBRX_$S(IBRF>0:"("_IBRF_")",1:""),1:$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^",8))
"RTN","IBRREL",78,0)
 W ?42,$P($P(IBND,"^",11),"-",2)
"RTN","IBRREL",79,0)
 W ?51,$$DAT1^IBOUTL($S(IBRXN>0:IBRDT,1:$P(IBND,"^",14)))
"RTN","IBRREL",80,0)
 W ?61,$$DAT1^IBOUTL($S($P(IBND,"^",15)'="":($P(IBND,"^",15)),1:$P(IBND1,"^",2)))
"RTN","IBRREL",81,0)
 W ?70,$J(+$P(IBND,"^",7),9,2)
"RTN","IBRREL",82,0)
 Q
"RTN","IBRREL",83,0)
 ;
"RTN","IBRREL",84,0)
ERR ; Display error message.
"RTN","IBRREL",85,0)
 W !?1,$J(IBNUM,2),?7,"Error encountered - a separate bulletin has been posted"
"RTN","IBRREL",86,0)
 Q
"RTN","IBRREL",87,0)
 ;
"RTN","IBRREL",88,0)
HLP ; Display basic help message.
"RTN","IBRREL",89,0)
 W !!,"Enter:    the name of a patient with charges 'on hold,' or"
"RTN","IBRREL",90,0)
 W !?10,"'??' --  to see all patients with charges 'on hold,' or"
"RTN","IBRREL",91,0)
 W !?10,"'^'  --  to quit this option.",!
"RTN","IBRREL",92,0)
 Q
"RTN","IBRREL",93,0)
 ;
"RTN","IBRREL",94,0)
HLP1 ; Display all patients with charges 'on hold.'
"RTN","IBRREL",95,0)
 N DFN,I,IBQ,PID
"RTN","IBRREL",96,0)
 W !!,"The following patients have charges 'on hold:'"
"RTN","IBRREL",97,0)
 S (DFN,IBQ)=0 F I=1:1 S DFN=$O(^IB("AH",DFN)) Q:'DFN  D:'(I#15)  Q:IBQ  S PID=$$PT^IBEFUNC(DFN) W !?3,$P(PID,"^"),$J("",10),$P(PID,"^",2)
"RTN","IBRREL",98,0)
 . R !,"Enter RETURN to continue or '^' to stop: ",X:DTIME S:X["^"!('$T) IBQ=1 Q
"RTN","IBRREL",99,0)
 W ! Q
"RTN","IBRREL",100,0)
 ;
"RTN","IBRREL",101,0)
HELP ; Help for the 'Select' prompt.
"RTN","IBRREL",102,0)
 W !!?4,"Please enter a list or range of IB Actions (i.e. 1,3,5 or 2-4,8), none"
"RTN","IBRREL",103,0)
 W !?4,"greater than ",IBNUM-1,", to be passed to Accounts Receivable, or '^' to quit."
"RTN","IBRREL",104,0)
 Q
"RTN","IBRREL",105,0)
 ;
"RTN","IBRREL",106,0)
 ;
"RTN","IBRREL",107,0)
AR ; Accounts Receivable entry point to release charges.
"RTN","IBRREL",108,0)
 ;   Input: PRCABN -- ien of Bill/Accounts Receivable
"RTN","IBRREL",109,0)
 Q:$D(PRCABN)[0  Q:'$$IB^IBRUTL(PRCABN,1)  G RESUME
"RTN","IBRXUTL")
0^47^B74287218^B356749
"RTN","IBRXUTL",1,0)
IBRXUTL ;ALB/MAF - PHARMACY API CALLS ; MAY 25, 2005
"RTN","IBRXUTL",2,0)
 ;;2.0;INTEGRATED BILLING;**309,347**;21-MAR-94;Build 24
"RTN","IBRXUTL",3,0)
 ;
"RTN","IBRXUTL",4,0)
ZERO(IBDRV) ;
"RTN","IBRXUTL",5,0)
 N X
"RTN","IBRXUTL",6,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBRXUTL",7,0)
 S X="IBDRUG" D ZERO^PSS50(IBDRV,,,,,X)
"RTN","IBRXUTL",8,0)
 Q
"RTN","IBRXUTL",9,0)
DATA(IBDRV) ;
"RTN","IBRXUTL",10,0)
 N X
"RTN","IBRXUTL",11,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBRXUTL",12,0)
 S X="IBDRUG" D DATA^PSS50(IBDRV,,,,,X)
"RTN","IBRXUTL",13,0)
 Q
"RTN","IBRXUTL",14,0)
FILE(DA,DR,INTEXT) ;Returns single field from file 52
"RTN","IBRXUTL",15,0)
 N RETURN,PSOFILE
"RTN","IBRXUTL",16,0)
 I '$G(DA) S RETURN="" Q RETURN
"RTN","IBRXUTL",17,0)
 I '$G(DR) S RETURN="" Q RETURN
"RTN","IBRXUTL",18,0)
 S PSOFILE=52
"RTN","IBRXUTL",19,0)
 S DA=+DA
"RTN","IBRXUTL",20,0)
 I $G(INTEXT)="" S INTEXT="I"
"RTN","IBRXUTL",21,0)
 S RETURN=$$GET1^PSODI(PSOFILE,DA,DR,INTEXT)
"RTN","IBRXUTL",22,0)
 I $P($G(RETURN),"^",1)=0 S RETURN="" Q RETURN
"RTN","IBRXUTL",23,0)
 Q $P(RETURN,"^",2)
"RTN","IBRXUTL",24,0)
SUBFILE(DA,DASUB,DR,DRSUB,INTEXT) ;Returns single field from subfile 52.1
"RTN","IBRXUTL",25,0)
 ;The DR variable isn't being used because Pharmacy API changed after IB*2.0*347 went 
"RTN","IBRXUTL",26,0)
 ;to test site. Rather than changing all the routines that call this API this 
"RTN","IBRXUTL",27,0)
 ;input variable is now not used.
"RTN","IBRXUTL",28,0)
 N RETSUB,PSOFILE,IENS
"RTN","IBRXUTL",29,0)
 I '$G(DA) S RETSUB="" Q RETSUB
"RTN","IBRXUTL",30,0)
 I '$G(DASUB) S RETSUB="" Q RETSUB
"RTN","IBRXUTL",31,0)
 I '$G(DRSUB) S RETSUB="" Q RETSUB
"RTN","IBRXUTL",32,0)
 S PSOFILE=52.1
"RTN","IBRXUTL",33,0)
 S IENS=+DASUB_","_+DA
"RTN","IBRXUTL",34,0)
 I $G(INTEXT)="" S INTEXT="I"
"RTN","IBRXUTL",35,0)
 S RETSUB=$$GET1^PSODI(PSOFILE,IENS,DRSUB,INTEXT)
"RTN","IBRXUTL",36,0)
 I $P($G(RETSUB),"^",1)=0 S RETSUB="" Q RETSUB
"RTN","IBRXUTL",37,0)
 Q $P(RETSUB,"^",2)
"RTN","IBRXUTL",38,0)
RXZERO(PDFN,RXIEN) ;Returns zero node of file 52
"RTN","IBRXUTL",39,0)
 N ZEROOUT,LIST,IBTMPARR,NODE
"RTN","IBRXUTL",40,0)
 I '$G(PDFN) S ZEROOUT="" Q ZEROOUT
"RTN","IBRXUTL",41,0)
 I '$G(RXIEN) S ZEROOUT="" Q ZEROOUT
"RTN","IBRXUTL",42,0)
 S NODE=0
"RTN","IBRXUTL",43,0)
 S LIST="IBZEROARR"
"RTN","IBRXUTL",44,0)
 S IBTMPARR="IBTMPZERO"
"RTN","IBRXUTL",45,0)
 D RX^PSO52API(PDFN,LIST,RXIEN,,NODE,,)
"RTN","IBRXUTL",46,0)
 I $P(^TMP($J,LIST,PDFN,0),"^",1)>0  D
"RTN","IBRXUTL",47,0)
 .S $P(^TMP($J,IBTMPARR),"^",1)=$G(^TMP($J,LIST,PDFN,RXIEN,.01))
"RTN","IBRXUTL",48,0)
 .S $P(^TMP($J,IBTMPARR),"^",2)=$P($G(^TMP($J,LIST,PDFN,RXIEN,2)),"^",1)
"RTN","IBRXUTL",49,0)
 .S $P(^TMP($J,IBTMPARR),"^",3)=$P($G(^TMP($J,LIST,PDFN,RXIEN,3)),"^",1)
"RTN","IBRXUTL",50,0)
 .S $P(^TMP($J,IBTMPARR),"^",4)=$P($G(^TMP($J,LIST,PDFN,RXIEN,4)),"^",1)
"RTN","IBRXUTL",51,0)
 .S $P(^TMP($J,IBTMPARR),"^",5)=$P($G(^TMP($J,LIST,PDFN,RXIEN,5)),"^",1)
"RTN","IBRXUTL",52,0)
 .S $P(^TMP($J,IBTMPARR),"^",6)=$P($G(^TMP($J,LIST,PDFN,RXIEN,6)),"^",1)
"RTN","IBRXUTL",53,0)
 .S $P(^TMP($J,IBTMPARR),"^",7)=$G(^TMP($J,LIST,PDFN,RXIEN,7))
"RTN","IBRXUTL",54,0)
 .S $P(^TMP($J,IBTMPARR),"^",8)=$G(^TMP($J,LIST,PDFN,RXIEN,8))
"RTN","IBRXUTL",55,0)
 .S $P(^TMP($J,IBTMPARR),"^",9)=$G(^TMP($J,LIST,PDFN,RXIEN,9))
"RTN","IBRXUTL",56,0)
 .S $P(^TMP($J,IBTMPARR),"^",10)=""
"RTN","IBRXUTL",57,0)
 .S $P(^TMP($J,IBTMPARR),"^",11)=$P($G(^TMP($J,LIST,PDFN,RXIEN,11)),"^",1)
"RTN","IBRXUTL",58,0)
 .S $P(^TMP($J,IBTMPARR),"^",12)=""
"RTN","IBRXUTL",59,0)
 .S $P(^TMP($J,IBTMPARR),"^",13)=$P($G(^TMP($J,LIST,PDFN,RXIEN,1)),"^",1)
"RTN","IBRXUTL",60,0)
 .S $P(^TMP($J,IBTMPARR),"^",14)=""
"RTN","IBRXUTL",61,0)
 .S $P(^TMP($J,IBTMPARR),"^",15)=""
"RTN","IBRXUTL",62,0)
 .S $P(^TMP($J,IBTMPARR),"^",16)=$P($G(^TMP($J,LIST,PDFN,RXIEN,16)),"^",1)
"RTN","IBRXUTL",63,0)
 .S $P(^TMP($J,IBTMPARR),"^",17)=$G(^TMP($J,LIST,PDFN,RXIEN,17))
"RTN","IBRXUTL",64,0)
 .S $P(^TMP($J,IBTMPARR),"^",18)=$G(^TMP($J,LIST,PDFN,RXIEN,10.6))
"RTN","IBRXUTL",65,0)
 .S $P(^TMP($J,IBTMPARR),"^",19)=$P($G(^TMP($J,LIST,PDFN,RXIEN,10.3)),"^",1)
"RTN","IBRXUTL",66,0)
 .S ZEROOUT=^TMP($J,IBTMPARR)
"RTN","IBRXUTL",67,0)
 .K ^TMP($J,IBTMPARR)
"RTN","IBRXUTL",68,0)
 E  S ZEROOUT=""
"RTN","IBRXUTL",69,0)
 K ^TMP($J,LIST)
"RTN","IBRXUTL",70,0)
 Q ZEROOUT
"RTN","IBRXUTL",71,0)
RXSEC(PDFN,RXIEN) ;Returns second node of file 52
"RTN","IBRXUTL",72,0)
 N SECOUT,LIST,IBTMPARR,NODE
"RTN","IBRXUTL",73,0)
 I '$G(PDFN) S SECOUT="" Q SECOUT
"RTN","IBRXUTL",74,0)
 I '$G(RXIEN) S SECOUT="" Q SECOUT
"RTN","IBRXUTL",75,0)
 S NODE=2
"RTN","IBRXUTL",76,0)
 S LIST="IBSECARR"
"RTN","IBRXUTL",77,0)
 S IBTMPARR="IBTMPSEC"
"RTN","IBRXUTL",78,0)
 D RX^PSO52API(PDFN,LIST,RXIEN,,NODE,,)
"RTN","IBRXUTL",79,0)
 I $P(^TMP($J,LIST,PDFN,0),"^",1)>0  D
"RTN","IBRXUTL",80,0)
 .S $P(^TMP($J,IBTMPARR),"^",1)=$P($G(^TMP($J,LIST,PDFN,RXIEN,21)),"^",1)
"RTN","IBRXUTL",81,0)
 .S $P(^TMP($J,IBTMPARR),"^",2)=$P($G(^TMP($J,LIST,PDFN,RXIEN,22)),"^",1)
"RTN","IBRXUTL",82,0)
 .S $P(^TMP($J,IBTMPARR),"^",3)=$P($G(^TMP($J,LIST,PDFN,RXIEN,23)),"^",1)
"RTN","IBRXUTL",83,0)
 .S $P(^TMP($J,IBTMPARR),"^",4)=$G(^TMP($J,LIST,PDFN,RXIEN,24))
"RTN","IBRXUTL",84,0)
 .S $P(^TMP($J,IBTMPARR),"^",5)=$P($G(^TMP($J,LIST,PDFN,RXIEN,25)),"^",1)
"RTN","IBRXUTL",85,0)
 .S $P(^TMP($J,IBTMPARR),"^",6)=$P($G(^TMP($J,LIST,PDFN,RXIEN,26)),"^",1)
"RTN","IBRXUTL",86,0)
 .S $P(^TMP($J,IBTMPARR),"^",7)=$G(^TMP($J,LIST,PDFN,RXIEN,27))
"RTN","IBRXUTL",87,0)
 .S $P(^TMP($J,IBTMPARR),"^",8)=$G(^TMP($J,LIST,PDFN,RXIEN,28))
"RTN","IBRXUTL",88,0)
 .S $P(^TMP($J,IBTMPARR),"^",9)=$P($G(^TMP($J,LIST,PDFN,RXIEN,20)),"^",1)
"RTN","IBRXUTL",89,0)
 .S $P(^TMP($J,IBTMPARR),"^",10)=$P($G(^TMP($J,LIST,PDFN,RXIEN,104)),"^",1)
"RTN","IBRXUTL",90,0)
 .S $P(^TMP($J,IBTMPARR),"^",11)=$P($G(^TMP($J,LIST,PDFN,RXIEN,29)),"^",1)
"RTN","IBRXUTL",91,0)
 .S $P(^TMP($J,IBTMPARR),"^",12)=$G(^TMP($J,LIST,PDFN,RXIEN,30))
"RTN","IBRXUTL",92,0)
 .S $P(^TMP($J,IBTMPARR),"^",13)=$P($G(^TMP($J,LIST,PDFN,RXIEN,31)),"^",1)
"RTN","IBRXUTL",93,0)
 .S $P(^TMP($J,IBTMPARR),"^",14)=$P($G(^TMP($J,LIST,PDFN,RXIEN,32.2)),"^",1)
"RTN","IBRXUTL",94,0)
 .S $P(^TMP($J,IBTMPARR),"^",15)=$P($G(^TMP($J,LIST,PDFN,RXIEN,32.1)),"^",1)
"RTN","IBRXUTL",95,0)
 .S $P(^TMP($J,IBTMPARR),"^",16)=$G(^TMP($J,LIST,PDFN,RXIEN,32.3))
"RTN","IBRXUTL",96,0)
 .S SECOUT=^TMP($J,IBTMPARR)
"RTN","IBRXUTL",97,0)
 .K ^TMP($J,IBTMPARR)
"RTN","IBRXUTL",98,0)
 E  S SECOUT=""
"RTN","IBRXUTL",99,0)
 K ^TMP($J,LIST)
"RTN","IBRXUTL",100,0)
 Q SECOUT
"RTN","IBRXUTL",101,0)
RX3(PDFN,RXIEN) ;Returns third node of file 52
"RTN","IBRXUTL",102,0)
 N THRDOUT,LIST,IBTMPARR,NODE
"RTN","IBRXUTL",103,0)
 I '$G(PDFN) S THRDOUT="" Q THRDOUT
"RTN","IBRXUTL",104,0)
 I '$G(RXIEN) S THRDOUT="" Q THRDOUT
"RTN","IBRXUTL",105,0)
 S NODE=3
"RTN","IBRXUTL",106,0)
 S LIST="IBARRTHRD"
"RTN","IBRXUTL",107,0)
 S IBTMPARR="IBTMP3"
"RTN","IBRXUTL",108,0)
 D RX^PSO52API(PDFN,LIST,RXIEN,,NODE,,)
"RTN","IBRXUTL",109,0)
 I $P(^TMP($J,LIST,PDFN,0),"^",1)>0  D
"RTN","IBRXUTL",110,0)
 .S $P(^TMP($J,IBTMPARR),"^",1)=$P($G(^TMP($J,LIST,PDFN,RXIEN,101)),"^",1)
"RTN","IBRXUTL",111,0)
 .S $P(^TMP($J,IBTMPARR),"^",2)=$P($G(^TMP($J,LIST,PDFN,RXIEN,102)),"^",1)
"RTN","IBRXUTL",112,0)
 .S $P(^TMP($J,IBTMPARR),"^",3)=$P($G(^TMP($J,LIST,PDFN,RXIEN,109)),"^",1)
"RTN","IBRXUTL",113,0)
 .S $P(^TMP($J,IBTMPARR),"^",4)=$P($G(^TMP($J,LIST,PDFN,RXIEN,102.1)),"^",1)
"RTN","IBRXUTL",114,0)
 .S $P(^TMP($J,IBTMPARR),"^",5)=$P($G(^TMP($J,LIST,PDFN,RXIEN,26.1)),"^",1)
"RTN","IBRXUTL",115,0)
 .S $P(^TMP($J,IBTMPARR),"^",6)=$P($G(^TMP($J,LIST,PDFN,RXIEN,34.1)),"^",1)
"RTN","IBRXUTL",116,0)
 .S $P(^TMP($J,IBTMPARR),"^",7)=$G(^TMP($J,LIST,PDFN,RXIEN,12))
"RTN","IBRXUTL",117,0)
 .S $P(^TMP($J,IBTMPARR),"^",8)=$G(^TMP($J,LIST,PDFN,RXIEN,102.2))
"RTN","IBRXUTL",118,0)
 .S $P(^TMP($J,IBTMPARR),"^",9)=$G(^TMP($J,LIST,PDFN,RXIEN,112))
"RTN","IBRXUTL",119,0)
 .S THRDOUT=^TMP($J,IBTMPARR)
"RTN","IBRXUTL",120,0)
 .K ^TMP($J,IBTMPARR)
"RTN","IBRXUTL",121,0)
 E  S THRDOUT=""
"RTN","IBRXUTL",122,0)
 K ^TMP($J,LIST)
"RTN","IBRXUTL",123,0)
 Q THRDOUT
"RTN","IBRXUTL",124,0)
ZEROSUB(PDFN,RXIEN,RXSUB) ;Returns zero node of subfile 52.1
"RTN","IBRXUTL",125,0)
 N ZSUBOUT,LIST,IBTMPARR,NODE
"RTN","IBRXUTL",126,0)
 I '$G(PDFN) S ZSUBOUT="" Q ZSUBOUT
"RTN","IBRXUTL",127,0)
 I '$G(RXIEN) S ZSUBOUT="" Q ZSUBOUT
"RTN","IBRXUTL",128,0)
 I '$G(RXSUB) S ZSUBOUT="" Q ZSUBOUT
"RTN","IBRXUTL",129,0)
 S NODE="R^^"_RXSUB
"RTN","IBRXUTL",130,0)
 S LIST="IBSUBARR"
"RTN","IBRXUTL",131,0)
 S IBTMPARR="IBTMPSUB"
"RTN","IBRXUTL",132,0)
 D RX^PSO52API(PDFN,LIST,RXIEN,,NODE,,)
"RTN","IBRXUTL",133,0)
 I $P(^TMP($J,LIST,PDFN,RXIEN,"RF",0),"^",1)>0  D
"RTN","IBRXUTL",134,0)
 .S $P(^TMP($J,IBTMPARR),"^",1)=$P($G(^TMP($J,LIST,PDFN,RXIEN,"RF",RXSUB,.01)),"^",1)
"RTN","IBRXUTL",135,0)
 .S $P(^TMP($J,IBTMPARR),"^",2)=$P($G(^TMP($J,LIST,PDFN,RXIEN,"RF",RXSUB,2)),"^",1)
"RTN","IBRXUTL",136,0)
 .S $P(^TMP($J,IBTMPARR),"^",3)=$G(^TMP($J,LIST,PDFN,RXIEN,"RF",RXSUB,3))
"RTN","IBRXUTL",137,0)
 .S $P(^TMP($J,IBTMPARR),"^",4)=$G(^TMP($J,LIST,PDFN,RXIEN,"RF",RXSUB,1))
"RTN","IBRXUTL",138,0)
 .S $P(^TMP($J,IBTMPARR),"^",5)=$P($G(^TMP($J,LIST,PDFN,RXIEN,"RF",RXSUB,4)),"^",1)
"RTN","IBRXUTL",139,0)
 .S $P(^TMP($J,IBTMPARR),"^",6)=$G(^TMP($J,LIST,PDFN,RXIEN,"RF",RXSUB,5))
"RTN","IBRXUTL",140,0)
 .S $P(^TMP($J,IBTMPARR),"^",7)=$P($G(^TMP($J,LIST,PDFN,RXIEN,"RF",RXSUB,6)),"^",1)
"RTN","IBRXUTL",141,0)
 .S $P(^TMP($J,IBTMPARR),"^",8)=$P($G(^TMP($J,LIST,PDFN,RXIEN,"RF",RXSUB,7)),"^",1)
"RTN","IBRXUTL",142,0)
 .S $P(^TMP($J,IBTMPARR),"^",9)=$P($G(^TMP($J,LIST,PDFN,RXIEN,"RF",RXSUB,8)),"^",1)
"RTN","IBRXUTL",143,0)
 .S $P(^TMP($J,IBTMPARR),"^",10)=$G(^TMP($J,LIST,PDFN,RXIEN,"RF",RXSUB,1.1))
"RTN","IBRXUTL",144,0)
 .S $P(^TMP($J,IBTMPARR),"^",11)=$G(^TMP($J,LIST,PDFN,RXIEN,"RF",RXSUB,1.2))
"RTN","IBRXUTL",145,0)
 .S $P(^TMP($J,IBTMPARR),"^",12)=""
"RTN","IBRXUTL",146,0)
 .S $P(^TMP($J,IBTMPARR),"^",13)=""
"RTN","IBRXUTL",147,0)
 .S $P(^TMP($J,IBTMPARR),"^",14)=$G(^TMP($J,LIST,PDFN,RXIEN,"RF",RXSUB,12))
"RTN","IBRXUTL",148,0)
 .S $P(^TMP($J,IBTMPARR),"^",15)=$P($G(^TMP($J,LIST,PDFN,RXIEN,"RF",RXSUB,13)),"^",1)
"RTN","IBRXUTL",149,0)
 .S $P(^TMP($J,IBTMPARR),"^",16)=$P($G(^TMP($J,LIST,PDFN,RXIEN,"RF",RXSUB,14)),"^",1)
"RTN","IBRXUTL",150,0)
 .S $P(^TMP($J,IBTMPARR),"^",17)=$P($G(^TMP($J,LIST,PDFN,RXIEN,"RF",RXSUB,15)),"^",1)
"RTN","IBRXUTL",151,0)
 .S $P(^TMP($J,IBTMPARR),"^",18)=$P($G(^TMP($J,LIST,PDFN,RXIEN,"RF",RXSUB,17)),"^",1)
"RTN","IBRXUTL",152,0)
 .S $P(^TMP($J,IBTMPARR),"^",19)=$P($G(^TMP($J,LIST,PDFN,RXIEN,"RF",RXSUB,10.1)),"^",1)
"RTN","IBRXUTL",153,0)
 .S ZSUBOUT=^TMP($J,IBTMPARR)
"RTN","IBRXUTL",154,0)
 .K ^TMP($J,IBTMPARR)
"RTN","IBRXUTL",155,0)
 E  S ZSUBOUT=""
"RTN","IBRXUTL",156,0)
 K ^TMP($J,LIST)
"RTN","IBRXUTL",157,0)
 Q ZSUBOUT
"RTN","IBRXUTL",158,0)
RFNUM(RXIEN) ;
"RTN","IBRXUTL",159,0)
 N PDFN,RXSUB,LIST,IBTMPARR,NODE
"RTN","IBRXUTL",160,0)
 I '$G(RXIEN) S RXSUB="" Q RXSUB
"RTN","IBRXUTL",161,0)
 S PDFN=$$FILE^IBRXUTL(RXIEN,2)
"RTN","IBRXUTL",162,0)
 S LIST="IBRFNARR"
"RTN","IBRXUTL",163,0)
 S IBTMPARR="IBTMPRFN"
"RTN","IBRXUTL",164,0)
 S NODE="R"
"RTN","IBRXUTL",165,0)
 D RX^PSO52API(PDFN,LIST,RXIEN,,NODE,,)
"RTN","IBRXUTL",166,0)
 I $P(^TMP($J,LIST,PDFN,RXIEN,"RF",0),"^",1)>0  D
"RTN","IBRXUTL",167,0)
 .S RXSUB=^TMP($J,LIST,PDFN,RXIEN,"RF",0)
"RTN","IBRXUTL",168,0)
 E  S RXSUB=""
"RTN","IBRXUTL",169,0)
 K ^TMP($J,LIST)
"RTN","IBRXUTL",170,0)
 Q RXSUB
"RTN","IBRXUTL",171,0)
IBND(DFN,RXIEN) ;Returns IB node
"RTN","IBRXUTL",172,0)
 N IBNDOUT,LIST,NODE,IBTMPARR
"RTN","IBRXUTL",173,0)
 I '$G(DFN) S IBNDOUT="" Q IBNDOUT
"RTN","IBRXUTL",174,0)
 I '$G(RXIEN) S IBNDOUT="" Q IBNDOUT
"RTN","IBRXUTL",175,0)
 S LIST="IBIBNDARR"
"RTN","IBRXUTL",176,0)
 S NODE="I^O"
"RTN","IBRXUTL",177,0)
 S IBTMPARR="IBTMPIBND"
"RTN","IBRXUTL",178,0)
 D RX^PSO52API(DFN,LIST,RXIEN,,NODE,,)
"RTN","IBRXUTL",179,0)
 I $P(^TMP($J,LIST,DFN,0),"^",1)>0  D
"RTN","IBRXUTL",180,0)
 .S $P(^TMP($J,IBTMPARR),"^",1)=$P($G(^TMP($J,LIST,DFN,RXIEN,105)),"^",1)
"RTN","IBRXUTL",181,0)
 .S $P(^TMP($J,IBTMPARR),"^",2)=$P($G(^TMP($J,LIST,DFN,RXIEN,106)),"^",1)
"RTN","IBRXUTL",182,0)
 .S $P(^TMP($J,IBTMPARR),"^",3)=$G(^TMP($J,LIST,DFN,RXIEN,106.5))
"RTN","IBRXUTL",183,0)
 .S $P(^TMP($J,IBTMPARR),"^",4)=$G(^TMP($J,LIST,DFN,RXIEN,106.6))
"RTN","IBRXUTL",184,0)
 .S IBNDOUT=^TMP($J,IBTMPARR)
"RTN","IBRXUTL",185,0)
 .S:IBNDOUT="^^^" IBNDOUT=""
"RTN","IBRXUTL",186,0)
 .K ^TMP($J,IBTMPARR)
"RTN","IBRXUTL",187,0)
 E  S IBNDOUT=""
"RTN","IBRXUTL",188,0)
 K ^TMP($J,LIST)
"RTN","IBRXUTL",189,0)
 Q IBNDOUT
"RTN","IBRXUTL",190,0)
IBNDFL(DFN,RXIEN,RXRFL) ;
"RTN","IBRXUTL",191,0)
 N IBNDFL,LIST,NODE,IBTMPARR
"RTN","IBRXUTL",192,0)
 I '$G(DFN) S IBNDFL="" Q IBNDFL
"RTN","IBRXUTL",193,0)
 I '$G(RXIEN) S IBNDFL="" Q IBNDFL
"RTN","IBRXUTL",194,0)
 I '$G(RXRFL) S IBNDFL="" Q IBNDFL
"RTN","IBRXUTL",195,0)
 S LIST="IBIBNDFLARR"
"RTN","IBRXUTL",196,0)
 S NODE="I^R^"_RXRFL
"RTN","IBRXUTL",197,0)
 S IBTMPARR="IBTMPIBNDFL"
"RTN","IBRXUTL",198,0)
 D RX^PSO52API(DFN,LIST,RXIEN,,NODE,,)
"RTN","IBRXUTL",199,0)
 I ^TMP($J,LIST,DFN,RXIEN,"IB",0)>0  D
"RTN","IBRXUTL",200,0)
 .S $P(^TMP($J,IBTMPARR),"^",1)=$G(^TMP($J,LIST,DFN,RXIEN,"IB",RXRFL,9))
"RTN","IBRXUTL",201,0)
 .S $P(^TMP($J,IBTMPARR),"^",2)=$G(^TMP($J,LIST,DFN,RXIEN,"IB",RXRFL,9.1))
"RTN","IBRXUTL",202,0)
 .S IBNDFL=^TMP($J,IBTMPARR)
"RTN","IBRXUTL",203,0)
 .K ^TMP($J,IBTMPARR)
"RTN","IBRXUTL",204,0)
 E  S IBNDFL=""
"RTN","IBRXUTL",205,0)
 K ^TMP($J,LIST)
"RTN","IBRXUTL",206,0)
 Q IBNDFL
"RTN","IBRXUTL",207,0)
RFLNUM(IBRXN,FLDT,IBFLG) ;
"RTN","IBRXUTL",208,0)
 N NUMOUT,NUM,DFN,LIST,NODE
"RTN","IBRXUTL",209,0)
 I '$G(IBRXN) S NUMOUT="" Q NUMOUT
"RTN","IBRXUTL",210,0)
 I '$G(FLDT) S NUMOUT="" Q NUMOUT
"RTN","IBRXUTL",211,0)
 K ^TMP($J),NUM
"RTN","IBRXUTL",212,0)
 S NUM=0
"RTN","IBRXUTL",213,0)
 S DFN=$$FILE^IBRXUTL(IBRXN,2)
"RTN","IBRXUTL",214,0)
 S LIST="IBRTMP"
"RTN","IBRXUTL",215,0)
 S NODE="R^^"
"RTN","IBRXUTL",216,0)
 D RX^PSO52API(DFN,LIST,IBRXN,,NODE,,)
"RTN","IBRXUTL",217,0)
 F  S NUM=$O(^TMP($J,LIST,DFN,IBRXN,"RF",NUM)) Q:'NUM  D
"RTN","IBRXUTL",218,0)
 .I $P(^TMP($J,LIST,DFN,IBRXN,"RF",NUM,.01),"^",1)=FLDT S NUMOUT=NUM
"RTN","IBRXUTL",219,0)
 K ^TMP($J,LIST)
"RTN","IBRXUTL",220,0)
 S:'$G(NUMOUT) NUMOUT=""
"RTN","IBRXUTL",221,0)
 Q NUMOUT
"RTN","IBRXUTL1")
0^48^B4282694^n/a
"RTN","IBRXUTL1",1,0)
IBRXUTL1 ;BP/BDM - PHARMACY API CALLS ; DECEMBER 20, 2006
"RTN","IBRXUTL1",2,0)
 ;;2.0;INTEGRATED BILLING;**347**;21-MAR-94;Build 24
"RTN","IBRXUTL1",3,0)
 ;
"RTN","IBRXUTL1",4,0)
 ;THIS ROUTINE IS A UTILITY FUNCTION FOR PHARMACY API'S
"RTN","IBRXUTL1",5,0)
 ;
"RTN","IBRXUTL1",6,0)
DATA(IBDRV) ;
"RTN","IBRXUTL1",7,0)
 N LIST,RXRET,RETURN
"RTN","IBRXUTL1",8,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBRXUTL1",9,0)
 S LIST="IBDRUG" D ZERO^PSS50(IBDRV,,,,,LIST)
"RTN","IBRXUTL1",10,0)
 S RXRET=$G(^TMP($J,LIST,0))
"RTN","IBRXUTL1",11,0)
 I RXRET>0 S RETURN=1
"RTN","IBRXUTL1",12,0)
 E  S RETURN=0
"RTN","IBRXUTL1",13,0)
 K ^TMP($J,LIST)
"RTN","IBRXUTL1",14,0)
 Q RETURN
"RTN","IBRXUTL1",15,0)
 ;
"RTN","IBRXUTL1",16,0)
DRUG(IBIEN) ;
"RTN","IBRXUTL1",17,0)
 N LIST
"RTN","IBRXUTL1",18,0)
 S LIST="DRUGTMP"
"RTN","IBRXUTL1",19,0)
 D DATA^PSS50(IBIEN,,,,,LIST)
"RTN","IBRXUTL1",20,0)
 S RETURN=$G(^TMP($J,LIST,IBIEN,.01))
"RTN","IBRXUTL1",21,0)
 K ^TMP($J,LIST)
"RTN","IBRXUTL1",22,0)
 Q RETURN
"RTN","IBRXUTL1",23,0)
 ;
"RTN","IBRXUTL1",24,0)
ICD(DFN,RXIEN,ICDCT,LIST) ;
"RTN","IBRXUTL1",25,0)
 N ICDOUT,NODE,IBTMPARR
"RTN","IBRXUTL1",26,0)
 I '$G(DFN) S ICDOUT="" Q ICDOUT
"RTN","IBRXUTL1",27,0)
 I '$G(RXIEN) S ICDOUT="" Q ICDOUT
"RTN","IBRXUTL1",28,0)
 I '$G(ICDCT) S ICDOUT="" Q ICDOUT
"RTN","IBRXUTL1",29,0)
 I $G(LIST)="" S ICDOUT="" Q ICDOUT
"RTN","IBRXUTL1",30,0)
 S IBTMPARR="ICDARR"
"RTN","IBRXUTL1",31,0)
 S $P(^TMP($J,IBTMPARR),"^",1)=$P($G(^TMP($J,LIST,DFN,RXIEN,"ICD",ICDCT,.01)),"^",1)
"RTN","IBRXUTL1",32,0)
 S $P(^TMP($J,IBTMPARR),"^",2)=$P($G(^TMP($J,LIST,DFN,RXIEN,"ICD",ICDCT,1)),"^",1)
"RTN","IBRXUTL1",33,0)
 S $P(^TMP($J,IBTMPARR),"^",3)=$P($G(^TMP($J,LIST,DFN,RXIEN,"ICD",ICDCT,2)),"^",1)
"RTN","IBRXUTL1",34,0)
 S $P(^TMP($J,IBTMPARR),"^",4)=$P($G(^TMP($J,LIST,DFN,RXIEN,"ICD",ICDCT,3)),"^",1)
"RTN","IBRXUTL1",35,0)
 S $P(^TMP($J,IBTMPARR),"^",5)=$P($G(^TMP($J,LIST,DFN,RXIEN,"ICD",ICDCT,4)),"^",1)
"RTN","IBRXUTL1",36,0)
 S $P(^TMP($J,IBTMPARR),"^",6)=$P($G(^TMP($J,LIST,DFN,RXIEN,"ICD",ICDCT,5)),"^",1)
"RTN","IBRXUTL1",37,0)
 S $P(^TMP($J,IBTMPARR),"^",7)=$P($G(^TMP($J,LIST,DFN,RXIEN,"ICD",ICDCT,6)),"^",1)
"RTN","IBRXUTL1",38,0)
 S $P(^TMP($J,IBTMPARR),"^",8)=$P($G(^TMP($J,LIST,DFN,RXIEN,"ICD",ICDCT,7)),"^",1)
"RTN","IBRXUTL1",39,0)
 S ICDOUT=^TMP($J,IBTMPARR)
"RTN","IBRXUTL1",40,0)
 K ^TMP($J,IBTMPARR)
"RTN","IBRXUTL1",41,0)
 Q ICDOUT
"RTN","IBTRKR3")
0^37^B49526056^B44657681
"RTN","IBTRKR3",1,0)
IBTRKR3 ;ALB/AAS - CLAIMS TRACKING - ADD/TRACK RX FILLS ;13-AUG-93
"RTN","IBTRKR3",2,0)
 ;;2.0;INTEGRATED BILLING;**13,43,121,160,247,275,260,309,336,312,339,347**;21-MAR-94;Build 24
"RTN","IBTRKR3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRKR3",4,0)
 ;
"RTN","IBTRKR3",5,0)
% ; -- entry point for nightly background job
"RTN","IBTRKR3",6,0)
 N IBTSBDT,IBTSEDT
"RTN","IBTRKR3",7,0)
 S IBTSBDT=$$FMADD^XLFDT(DT,-14)-.1
"RTN","IBTRKR3",8,0)
 S IBTSEDT=$$FMADD^XLFDT(DT,-7)+.9
"RTN","IBTRKR3",9,0)
 D EN1
"RTN","IBTRKR3",10,0)
 Q
"RTN","IBTRKR3",11,0)
 ;
"RTN","IBTRKR3",12,0)
EN ; -- entry point to ask date range
"RTN","IBTRKR3",13,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI() ;IB*2.0*312
"RTN","IBTRKR3",14,0)
 N IBBDT,IBEDT,IBTSBDT,IBTSEDT,IBTALK,IBMESS
"RTN","IBTRKR3",15,0)
 S IBTALK=1
"RTN","IBTRKR3",16,0)
 I '$P($G(^IBE(350.9,1,6)),"^",4) W !!,"I'm sorry, Tracking of Prescription Refills is currently turned off." G ENQ
"RTN","IBTRKR3",17,0)
 W !!!,"Select the Date Range of Rx Refills to Add to Claims Tracking.",!
"RTN","IBTRKR3",18,0)
 D DATE^IBOUTL
"RTN","IBTRKR3",19,0)
 I IBBDT<1!(IBEDT<1) G ENQ
"RTN","IBTRKR3",20,0)
 S IBTSBDT=IBBDT,IBTSEDT=IBEDT
"RTN","IBTRKR3",21,0)
 ;
"RTN","IBTRKR3",22,0)
 ; Do NOT PROCESS on VistA if Start or End>=Switch Eff Date ;IB*2.0*312
"RTN","IBTRKR3",23,0)
 I +IBSWINFO,((IBTSBDT+1)>$P(IBSWINFO,"^",2))!((IBTSEDT+1)>$P(IBSWINFO,"^",2)) D  G EN
"RTN","IBTRKR3",24,0)
 .W !!,"The Begin OR End Date CANNOT be on or after"
"RTN","IBTRKR3",25,0)
 .W !,"the PFSS Effective Date: ",$$FMTE^XLFDT($P(IBSWINFO,"^",2))
"RTN","IBTRKR3",26,0)
 ;
"RTN","IBTRKR3",27,0)
 ; -- check selected dates
"RTN","IBTRKR3",28,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR3",29,0)
 ; start date can't be before parameters
"RTN","IBTRKR3",30,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR W !!,"Begin date is before Claims Tracking Start Date, changed to ",$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR3",31,0)
 ; -- end date into future
"RTN","IBTRKR3",32,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-3) W !!,"I'll automatically change the end date to 3 days prior to the date queued to run."
"RTN","IBTRKR3",33,0)
 ;
"RTN","IBTRKR3",34,0)
 W !!!,"I'm going to automatically queue this off and send you a"
"RTN","IBTRKR3",35,0)
 W !,"mail message when complete.",!
"RTN","IBTRKR3",36,0)
 S ZTIO="",ZTRTN="EN1^IBTRKR3",ZTSAVE("IB*")="",ZTDESC="IB - Add Rx Refills to Claims Tracking"
"RTN","IBTRKR3",37,0)
 D ^%ZTLOAD I $G(ZTSK) K ZTSK W !,"Request Queued"
"RTN","IBTRKR3",38,0)
ENQ K ZTSK,ZTIO,ZTSAVE,ZTDESC,ZTRTN
"RTN","IBTRKR3",39,0)
 D HOME^%ZIS
"RTN","IBTRKR3",40,0)
 Q
"RTN","IBTRKR3",41,0)
 ;
"RTN","IBTRKR3",42,0)
EN1 ; -- add rx refills to claims tracking file
"RTN","IBTRKR3",43,0)
 N I,J,X,Y,IBTRKR,IBDT,IBRXN,IBFILL,DFN,IBDATA,IBCNT,IBCNT1,IBCNT2,LIST1
"RTN","IBTRKR3",44,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI() ;IB*2.0*312
"RTN","IBTRKR3",45,0)
 N IBICD,IBCOPAY
"RTN","IBTRKR3",46,0)
 ;
"RTN","IBTRKR3",47,0)
 ; -- check parameters
"RTN","IBTRKR3",48,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR3",49,0)
 G:'$P(IBTRKR,"^",4) EN1Q ; quit if rx tracking off
"RTN","IBTRKR3",50,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR ; start date can't be before parameters
"RTN","IBTRKR3",51,0)
 ;
"RTN","IBTRKR3",52,0)
 ; -- users can queue into future, make sure dates not after date run
"RTN","IBTRKR3",53,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-3) S IBMESS="(Selected end date of "_$$DAT1^IBOUTL(IBTSEDT)_" automatically changed to "_$$DAT1^IBOUTL($$FMADD^XLFDT(DT,-3))_".)",IBTSEDT=$$FMADD^XLFDT(DT,-3)
"RTN","IBTRKR3",54,0)
 ;
"RTN","IBTRKR3",55,0)
 S IBRXTYP=$O(^IBE(356.6,"AC",4,0)) ; event type pointer for rx billing
"RTN","IBTRKR3",56,0)
 ;
"RTN","IBTRKR3",57,0)
 ; -- cnt= total count, cnt1=count added nsc, cnt2=count of pending
"RTN","IBTRKR3",58,0)
 S (IBCNT,IBCNT1,IBCNT2)=0
"RTN","IBTRKR3",59,0)
 S IBDT=IBTSBDT-.0001
"RTN","IBTRKR3",60,0)
 S LIST1="IBTRKAD"
"RTN","IBTRKR3",61,0)
 D REF^PSO52EX(IBDT,IBTSEDT,LIST1)
"RTN","IBTRKR3",62,0)
 S IBDT=0
"RTN","IBTRKR3",63,0)
 F  S IBDT=$O(^TMP($J,LIST1,"AD",IBDT)) Q:'IBDT!(IBDT>IBTSEDT)  D
"RTN","IBTRKR3",64,0)
 .S IBRXN=0
"RTN","IBTRKR3",65,0)
 .I +IBSWINFO,(IBDT+1)>$P(IBSWINFO,"^",2) Q
"RTN","IBTRKR3",66,0)
 .F  S IBRXN=$O(^TMP($J,LIST1,"AD",IBDT,IBRXN)) Q:'IBRXN  D
"RTN","IBTRKR3",67,0)
 ..S IBFILL=""
"RTN","IBTRKR3",68,0)
 ..F  S IBFILL=$O(^TMP($J,LIST1,"AD",IBDT,IBRXN,IBFILL)) Q:IBFILL=""  D RXCHK
"RTN","IBTRKR3",69,0)
 K ^TMP($J,LIST1)
"RTN","IBTRKR3",70,0)
 ;
"RTN","IBTRKR3",71,0)
 I $G(IBTALK) D BULL^IBTRKR31
"RTN","IBTRKR3",72,0)
EN1Q I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBTRKR3",73,0)
 Q
"RTN","IBTRKR3",74,0)
 ;
"RTN","IBTRKR3",75,0)
RXCHK ; -- check and add rx
"RTN","IBTRKR3",76,0)
 N IBND,LIST,NODE
"RTN","IBTRKR3",77,0)
 S IBCNT=IBCNT+1
"RTN","IBTRKR3",78,0)
 ;I IBFILL<1 G RXCHKQ ; original fill
"RTN","IBTRKR3",79,0)
 I IBDT>(DT+.24) G RXCHKQ ; future fill
"RTN","IBTRKR3",80,0)
 I '$D(ZTQUEUED),($G(IBTALK)) W "."
"RTN","IBTRKR3",81,0)
 ;
"RTN","IBTRKR3",82,0)
 S DFN=$$FILE^IBRXUTL(IBRXN,2)
"RTN","IBTRKR3",83,0)
 S IBRXDATA=$$RXZERO^IBRXUTL(DFN,IBRXN),IBRXSTAT=$$FILE^IBRXUTL(IBRXN,100,"I")
"RTN","IBTRKR3",84,0)
 ;I IBDT=$P($O(^DPT(DFN,"S",(IBDT-.00001))),".") G RXCHKQ ;scheduled appointment on same day as fill date
"RTN","IBTRKR3",85,0)
 ;I $$BABCSC^IBEFUNC(DFN,$P(IBDT,".",1)) G RXCHKQ ; is billable clinic stop in encounter file for data (allows telephone stops on same day, but not others) (P121 - RC, can now bill Rx if on same day as opt visit)
"RTN","IBTRKR3",86,0)
 ;
"RTN","IBTRKR3",87,0)
 ; -- not already in claims tracking
"RTN","IBTRKR3",88,0)
 I $O(^IBT(356,"ARXFL",IBRXN,IBFILL,"")) G RXCHKQ ; already in claims tracking
"RTN","IBTRKR3",89,0)
 ;
"RTN","IBTRKR3",90,0)
 ; -- see if tracking only insured and pt is insured
"RTN","IBTRKR3",91,0)
 I $P(IBTRKR,"^",4)=1,'$$INSURED^IBCNS1(DFN,IBDT) G RXCHKQ ; patient not insure
"RTN","IBTRKR3",92,0)
 ;
"RTN","IBTRKR3",93,0)
 ; -- check rx status (not deleted)
"RTN","IBTRKR3",94,0)
 I IBRXSTAT=13 G RXCHKQ
"RTN","IBTRKR3",95,0)
 ;
"RTN","IBTRKR3",96,0)
 ; -- Don't PROCESS IF there is already a PFSS ACCT REF# -- ;IB*2.0*312
"RTN","IBTRKR3",97,0)
 I 'IBFILL,+$$FILE^IBRXUTL(IBRXN,125) G RXCHKQ
"RTN","IBTRKR3",98,0)
 I +IBFILL,+$$SUBFILE^IBRXUTL(IBRXN,IBFILL,52,21) G RXCHKQ
"RTN","IBTRKR3",99,0)
 ;
"RTN","IBTRKR3",100,0)
 ; -- original fill not released or returned to stock
"RTN","IBTRKR3",101,0)
 I 'IBFILL,'$$FILE^IBRXUTL(IBRXN,31) G RXCHKQ
"RTN","IBTRKR3",102,0)
 I 'IBFILL,$$FILE^IBRXUTL(IBRXN,32.1) G RXCHKQ
"RTN","IBTRKR3",103,0)
 ;
"RTN","IBTRKR3",104,0)
 ; -- refill not released or returned to stock
"RTN","IBTRKR3",105,0)
 I +IBFILL,'$$SUBFILE^IBRXUTL(IBRXN,IBFILL,52,17) G RXCHKQ
"RTN","IBTRKR3",106,0)
 I +IBFILL,$$SUBFILE^IBRXUTL(IBRXN,IBFILL,52,14) G RXCHKQ
"RTN","IBTRKR3",107,0)
 ;
"RTN","IBTRKR3",108,0)
 ; -- check drug (not investigational, supply, or over the counter drug
"RTN","IBTRKR3",109,0)
 S IBDRUG=$P(IBRXDATA,"^",6)
"RTN","IBTRKR3",110,0)
 D ZERO^IBRXUTL(IBDRUG)
"RTN","IBTRKR3",111,0)
 S IBDEA=$G(^TMP($J,"IBDRUG",+IBDRUG,3))
"RTN","IBTRKR3",112,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBTRKR3",113,0)
 I IBDEA["I"!(IBDEA["S")!(IBDEA["9") G RXCHKQ ; investigational drug, supply or otc
"RTN","IBTRKR3",114,0)
 ;
"RTN","IBTRKR3",115,0)
 ; -- see if insured for prescriptions
"RTN","IBTRKR3",116,0)
 I '$$PTCOV^IBCNSU3(DFN,IBDT,"PHARMACY",.IBANY) S IBRMARK=$S($G(IBANY):"SERVICE NOT COVERED",1:"NOT INSURED")
"RTN","IBTRKR3",117,0)
 ;
"RTN","IBTRKR3",118,0)
 ; -- check sc status and others
"RTN","IBTRKR3",119,0)
 ; -- new ICD node in PSO with CIDC, if it exists use this for determination
"RTN","IBTRKR3",120,0)
 S LIST="IBTRKRLST"
"RTN","IBTRKR3",121,0)
 S NODE="ICD"
"RTN","IBTRKR3",122,0)
 S IBICD=0,IBCOPAY=0
"RTN","IBTRKR3",123,0)
 D RX^PSO52API(DFN,LIST,IBRXN,,NODE,,)
"RTN","IBTRKR3",124,0)
 I +$G(^TMP($J,LIST,DFN,IBRXN,"ICD",0))>0 S IBICD=1 ;Setup ICD Flag
"RTN","IBTRKR3",125,0)
 I +$$IBND^IBRXUTL(DFN,IBRXN)>0 S IBCOPAY=1 ;Setup Copay Flag
"RTN","IBTRKR3",126,0)
 I $G(IBRMARK)="",IBICD D CL^SDCO21(DFN,IBDT,"",.IBARR) I $D(IBARR) D
"RTN","IBTRKR3",127,0)
 .S IBM=0
"RTN","IBTRKR3",128,0)
 .F  S IBM=$O(^TMP($J,LIST,DFN,IBRXN,"ICD",IBM)) Q:'IBM!($G(IBRMARK)'="")  D
"RTN","IBTRKR3",129,0)
 ..S IBZ=$$ICD^IBRXUTL1(DFN,IBRXN,IBM,LIST) F IBP=1:1:7 Q:$G(IBRMARK)'=""  I $D(IBARR(IBP)) D
"RTN","IBTRKR3",130,0)
 ... S IBRMARK=$S($P(IBZ,"^",IBP+1):$P($T(EXEMPT+IBP),";",3),$P(IBZ,"^",IBP+1)=0:"",1:"NEEDS SC DETERMINATION")
"RTN","IBTRKR3",131,0)
 ;
"RTN","IBTRKR3",132,0)
 ; -- no new ICD node in PSO, use old method of determining status
"RTN","IBTRKR3",133,0)
 I $G(IBRMARK)="",'IBICD D
"RTN","IBTRKR3",134,0)
 . D ELIG^VADPT
"RTN","IBTRKR3",135,0)
 . ;if the patient is covered by insurance for pharmacy ($G(IBRMARK)="")
"RTN","IBTRKR3",136,0)
 . ;AND if no copay in #350
"RTN","IBTRKR3",137,0)
 . ;then we need to determine the non billable reason and set IBRMARK
"RTN","IBTRKR3",138,0)
 . ;
"RTN","IBTRKR3",139,0)
 . ;IF VAEL(3) -- if this is a veteran with SC(service connection) status
"RTN","IBTRKR3",140,0)
 . I VAEL(3),'IBCOPAY D
"RTN","IBTRKR3",141,0)
 . . I $P(VAEL(3),"^",2)>49 S IBRMARK="NEEDS SC DETERMINATION"
"RTN","IBTRKR3",142,0)
 . . ;in case of POW and Unempl.vet we cannot decide if the 3rd party should be exempt
"RTN","IBTRKR3",143,0)
 . . N IBPOWUNV,IBAUTRET S IBAUTRET=$$AUTOINFO^DGMTCOU1(DFN),IBPOWUNV=$S($P(IBAUTRET,U,8):1,$P(IBAUTRET,U,9):1,1:0)
"RTN","IBTRKR3",144,0)
 . . I $P(VAEL(3),"^",2)<50 S IBRMARK=$S(IBPOWUNV:"NEEDS SC DETERMINATION",1:"SC TREATMENT")
"RTN","IBTRKR3",145,0)
 . . I $$RXST^IBARXEU(DFN,$P(IBRXDATA,U,13))>0 S IBRMARK="NEEDS SC DETERMINATION"
"RTN","IBTRKR3",146,0)
 . ;
"RTN","IBTRKR3",147,0)
 . ;IF +VAEL(3)=0 if the veteran doesn't have SC status, but
"RTN","IBTRKR3",148,0)
 . ;the veteran still may have CV status active
"RTN","IBTRKR3",149,0)
 . I $G(IBRMARK)="",+VAEL(3)=0,'IBCOPAY D
"RTN","IBTRKR3",150,0)
 . . I $$CVEDT^IBACV(DFN,IBDT) S IBRMARK="NEEDS SC DETERMINATION" ;SC-because IB staff usually is using this reason to search for cases that need to be reviewed. COMBAT VETERAN reason will be used after review if this was a case
"RTN","IBTRKR3",151,0)
 K ^TMP($J,LIST)
"RTN","IBTRKR3",152,0)
 ;
"RTN","IBTRKR3",153,0)
 ;
"RTN","IBTRKR3",154,0)
 ; -- ok to add to tracking module
"RTN","IBTRKR3",155,0)
 D REFILL^IBTUTL1(DFN,IBRXTYP,IBDT,IBRXN,IBFILL,$G(IBRMARK)) I '$D(ZTQUEUED),$G(IBTALK) W "+"
"RTN","IBTRKR3",156,0)
 I $G(IBRMARK)'="" S IBCNT2=IBCNT2+1
"RTN","IBTRKR3",157,0)
 I $G(IBRMARK)="" S IBCNT1=IBCNT1+1
"RTN","IBTRKR3",158,0)
 K IBANY,IBRMARK,VAEL,VA,IBDEA,IBDRUG,IBRXSTAT,IBRXDATA,DFN,X,Y
"RTN","IBTRKR3",159,0)
 K IBARR,IBM,IBZ,IBP
"RTN","IBTRKR3",160,0)
RXCHKQ Q
"RTN","IBTRKR3",161,0)
 ;
"RTN","IBTRKR3",162,0)
EXEMPT ; exemption reasons
"RTN","IBTRKR3",163,0)
 ;;AGENT ORANGE
"RTN","IBTRKR3",164,0)
 ;;IONIZING RADIATION
"RTN","IBTRKR3",165,0)
 ;;SC TREATMENT
"RTN","IBTRKR3",166,0)
 ;;SOUTHWEST ASIA
"RTN","IBTRKR3",167,0)
 ;;MILITARY SEXUAL TRAUMA
"RTN","IBTRKR3",168,0)
 ;;HEAD/NECK CANCER
"RTN","IBTRKR3",169,0)
 ;;COMBAT VETERAN
"RTN","IBTRKR3",170,0)
 ;;PROJECT 112/SHAD
"RTN","IBTRKR3",171,0)
 ;;
"RTN","IBTRKR31")
0^49^B9498520^B9080810
"RTN","IBTRKR31",1,0)
IBTRKR31 ;ALB/AAS - CLAIMS TRACKING - DBLCHK RX FILLS ; 13-AUG-93
"RTN","IBTRKR31",2,0)
 ;;2.0;INTEGRATED BILLING;**33,121,160,309,347**;21-MAR-94;Build 24
"RTN","IBTRKR31",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRKR31",4,0)
 ;
"RTN","IBTRKR31",5,0)
% ; -- Double check rx data routine
"RTN","IBTRKR31",6,0)
DBLCHK(IBTRN) ; -- double check rx before billing, input tracking id
"RTN","IBTRKR31",7,0)
 N IBX,IBFILL,IBFILLD,IBRXN,IBTRND,IBRMARK,IBRXSTAT,IBDEA,IBDRUG,IBRXDATA,X,Y,IBY,IBDFN
"RTN","IBTRKR31",8,0)
 S IBX=0
"RTN","IBTRKR31",9,0)
 S IBTRND=$G(^IBT(356,+IBTRN,0)) I IBTRND="" G DBLCHKQ
"RTN","IBTRKR31",10,0)
 S IBRXN=$P(IBTRND,"^",8),IBFILL=$P(IBTRND,"^",10),IBFILLD=""
"RTN","IBTRKR31",11,0)
 ;
"RTN","IBTRKR31",12,0)
 S IBDFN=$$FILE^IBRXUTL(IBRXN,2)
"RTN","IBTRKR31",13,0)
 I IBFILL=0 S IBY=$$RXSEC^IBRXUTL(IBDFN,IBRXN),IBFILLD=$P(IBY,U,2)_U_$P(IBY,U,13)_U_$P(IBY,U,15)
"RTN","IBTRKR31",14,0)
 I IBFILL>0 S IBY=$$ZEROSUB^IBRXUTL(IBDFN,IBRXN,IBFILL),IBFILLD=$P(IBY,U,1)_U_$P(IBY,U,18)_U_$P(IBY,U,16)
"RTN","IBTRKR31",15,0)
 ;
"RTN","IBTRKR31",16,0)
 I (IBFILL'>0&(IBFILL'=0))!(IBRXN<1) S IBRMARK="INVALID PRESCRIPTION ENTRY" G DBLCHKQ
"RTN","IBTRKR31",17,0)
 ;
"RTN","IBTRKR31",18,0)
 S IBRXDATA=$$RXZERO^IBRXUTL(IBDFN,IBRXN),IBRXSTAT=$P(IBRXDATA,"^",15)
"RTN","IBTRKR31",19,0)
 ;S DFN=+$P(IBRXDATA,"^",2),IBDT=+IBFILLD
"RTN","IBTRKR31",20,0)
 ;I IBDT=$P($O(^DPT(DFN,"S",(IBDT-.00001))),".") S IBRMARK="REFILL ON VISIT DATE" G DBLCHKQ
"RTN","IBTRKR31",21,0)
 ;
"RTN","IBTRKR31",22,0)
 ; -- check rx status (not  deleted)
"RTN","IBTRKR31",23,0)
 I IBRXSTAT=13 S IBRMARK="PRESCRIPTION DELETED" G DBLCHKQ
"RTN","IBTRKR31",24,0)
 ;
"RTN","IBTRKR31",25,0)
 ; -- refill not released or returned to stock
"RTN","IBTRKR31",26,0)
 I '$P(IBFILLD,"^",2) S IBRMARK="PRESCRIPTION NOT RELEASED" G DBLCHKQ
"RTN","IBTRKR31",27,0)
 I $P(IBFILLD,"^",3) S IBRMARK="PRESCRIPTION NOT RELEASED" G DBLCHKQ
"RTN","IBTRKR31",28,0)
 ;
"RTN","IBTRKR31",29,0)
 ; -- check drug (not investigational, supply, or over the counter drug
"RTN","IBTRKR31",30,0)
 S IBDRUG=$P(IBRXDATA,"^",6)
"RTN","IBTRKR31",31,0)
 D ZERO^IBRXUTL(IBDRUG)
"RTN","IBTRKR31",32,0)
 S IBDEA=$G(^TMP($J,"IBDRUG",+IBDRUG,3))
"RTN","IBTRKR31",33,0)
 I IBDEA["I"!(IBDEA["S")!(IBDEA["9") S IBRMARK="DRUG NOT BILLABLE" G DBLCHKQ ; investigational drug, supply or otc
"RTN","IBTRKR31",34,0)
 ;
"RTN","IBTRKR31",35,0)
 S IBX=1
"RTN","IBTRKR31",36,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBTRKR31",37,0)
 ;
"RTN","IBTRKR31",38,0)
DBLCHKQ I $G(IBRMARK)]"" D
"RTN","IBTRKR31",39,0)
 .S IBRMARK=$O(^IBE(356.8,"B",IBRMARK,0)) I 'IBRMARK S IBRMARK=999
"RTN","IBTRKR31",40,0)
 .N DA,DR,DIC,DIE
"RTN","IBTRKR31",41,0)
 .L +^IBT(356,+IBTRN):5 I '$T Q
"RTN","IBTRKR31",42,0)
 .S DA=IBTRN,DIE="^IBT(356,",DR=".19////"_IBRMARK
"RTN","IBTRKR31",43,0)
 .D ^DIE
"RTN","IBTRKR31",44,0)
 .L -^IBT(356,+IBTRN)
"RTN","IBTRKR31",45,0)
 Q IBX
"RTN","IBTRKR31",46,0)
 ;
"RTN","IBTRKR31",47,0)
 ;
"RTN","IBTRKR31",48,0)
BULL ; -- send bulletin
"RTN","IBTRKR31",49,0)
 ;
"RTN","IBTRKR31",50,0)
 S XMSUB="Rx Refills added to Claims Tracking Complete"
"RTN","IBTRKR31",51,0)
 S IBT(1)="The process to automatically add Rx Refills has successfully completed."
"RTN","IBTRKR31",52,0)
 S IBT(1.1)=""
"RTN","IBTRKR31",53,0)
 S IBT(2)="              Start Date: "_$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR31",54,0)
 S IBT(3)="                End Date: "_$$DAT1^IBOUTL(IBTSEDT)
"RTN","IBTRKR31",55,0)
 I $D(IBMESS) S IBT(3.1)=IBMESS
"RTN","IBTRKR31",56,0)
 S IBT(4)=""
"RTN","IBTRKR31",57,0)
 S IBT(5)="  Total Rx fills checked: "_$G(IBCNT)
"RTN","IBTRKR31",58,0)
 S IBT(6)="Total NSC Rx fills Added: "_$G(IBCNT1)
"RTN","IBTRKR31",59,0)
 S IBT(7)=" Total SC Rx fills Added: "_$G(IBCNT2)
"RTN","IBTRKR31",60,0)
 S IBT(8)=""
"RTN","IBTRKR31",61,0)
 S IBT(9)="*The fills added as SC require determination and editing to be billed"
"RTN","IBTRKR31",62,0)
 D SEND
"RTN","IBTRKR31",63,0)
BULLQ Q
"RTN","IBTRKR31",64,0)
 ;
"RTN","IBTRKR31",65,0)
SEND S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
"RTN","IBTRKR31",66,0)
 K XMY S XMN=0
"RTN","IBTRKR31",67,0)
 S XMY(DUZ)=""
"RTN","IBTRKR31",68,0)
 D ^XMD
"RTN","IBTRKR31",69,0)
 K X,Y,IBI,IBT,IBGRP,XMDUZ,XMTEXT,XMY,XMSUB
"RTN","IBTRKR31",70,0)
 Q
"RTN","IBTUBO2")
0^38^B26175280^B26096597
"RTN","IBTUBO2",1,0)
IBTUBO2 ;ALB/AAS - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;03 Aug 2004  8:21 AM
"RTN","IBTUBO2",2,0)
 ;;2.0;INTEGRATED BILLING;**19,31,32,91,123,159,192,155,309,347**;21-MAR-94;Build 24
"RTN","IBTUBO2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTUBO2",4,0)
 ;
"RTN","IBTUBO2",5,0)
INPT(DGPM) ; - Check if inpatient episode has bills or final bill; if not,
"RTN","IBTUBO2",6,0)
 ;   ^TMP($J,"IBTUB-INPT",NAME@@DFN,DATE,IBX)=bill status
"RTN","IBTUBO2",7,0)
 ;   ^TMP($J,"IBTUB-INPT_MRA",NAME@@DFN,DATE,IBX)=1 if MRA request
"RTN","IBTUBO2",8,0)
 ;   *Pre-set variables: DFN=patient IEN, DGPM=pointer to file #405,
"RTN","IBTUBO2",9,0)
 ;                       IBDT=event date, IBRT=bill rate,
"RTN","IBTUBO2",10,0)
 ;                       IBEDT=reporting period date
"RTN","IBTUBO2",11,0)
 I '$G(DFN)!('$G(DGPM))!('$G(IBDT))!('$G(IBRT)) G INPTQ
"RTN","IBTUBO2",12,0)
 N IBIP,IBDATA,IBNAME,IBNCF,IBXX,X,Y,IBMRA
"RTN","IBTUBO2",13,0)
 S IBNAME=$P($G(^DPT(DFN,0)),U)
"RTN","IBTUBO2",14,0)
 I $D(^TMP($J,"IBTUB-INPT",IBNAME_"@@"_DFN,IBDT)) G INPTQ
"RTN","IBTUBO2",15,0)
 I $P($G(^DGPM(DGPM,0)),U,11) G INPTQ ;      Admitted for SC condition.
"RTN","IBTUBO2",16,0)
 I $$SC^IBTUBOU($P($G(^DGPM(DGPM,0)),U,16)) G INPTQ ; Check PTF for SC.
"RTN","IBTUBO2",17,0)
 S (IBIP(1),IBIP(2))=0 ; Set claim flags.
"RTN","IBTUBO2",18,0)
 ;
"RTN","IBTUBO2",19,0)
 ; - Check patient's claims.
"RTN","IBTUBO2",20,0)
 S (IBNCF,X)=0
"RTN","IBTUBO2",21,0)
 F  S X=$O(^DGCR(399,"C",DFN,X)) Q:'X  D  Q:IBIP(1)&(IBIP(2))
"RTN","IBTUBO2",22,0)
 . S IBDATA=$$CKBIL^IBTUBOU(X,1) Q:IBDATA=""
"RTN","IBTUBO2",23,0)
 . ;
"RTN","IBTUBO2",24,0)
 . ; The admission date on the bill is different from the Event date.
"RTN","IBTUBO2",25,0)
 . I $P(IBDATA,U,5)'=$P(IBDT,".") Q
"RTN","IBTUBO2",26,0)
 . S IBNCF=IBNCF+1 ; Increment the number of bills on file for episode
"RTN","IBTUBO2",27,0)
 . ;
"RTN","IBTUBO2",28,0)
 . ; If Compile/Store & Not authorized before reporting period - Quit.
"RTN","IBTUBO2",29,0)
 . I $G(IBCOMP),$S($P(IBDATA,U,2)'=2:$P(IBDATA,U,3),1:$P(IBDATA,U,6))>IBEDT Q
"RTN","IBTUBO2",30,0)
 . ;
"RTN","IBTUBO2",31,0)
 . S IBIP($P(IBDATA,U,4))=$S($P(IBDATA,U,2)'=2:1,1:2) ;   Episode billed for inst/prof bill type
"RTN","IBTUBO2",32,0)
 ;
"RTN","IBTUBO2",33,0)
 I IBIP(1)=1 G:IBIP(2)=1!(IBDT<2990901) INPTQ ; Episode is billed.
"RTN","IBTUBO2",34,0)
 ;
"RTN","IBTUBO2",35,0)
 ; - Add to episodes missing inst./prof. bills.
"RTN","IBTUBO2",36,0)
 S (IBXX,IBMRA)=""
"RTN","IBTUBO2",37,0)
 ;
"RTN","IBTUBO2",38,0)
 I IBIP(1)'=1 D
"RTN","IBTUBO2",39,0)
 . I 'IBIP(1) S IBUNB("EPISM-I")=IBUNB("EPISM-I")+1 S:IBDET IBXX="I"
"RTN","IBTUBO2",40,0)
 . I $G(IBXTRACT) S IB(1)=IB(1)+1 ; For DM extract.
"RTN","IBTUBO2",41,0)
 . I IBIP(1)=2 S IBUNB("EPISM-I-MRA")=IBUNB("EPISM-I-MRA")+1 S:IBDET IBMRA="I"
"RTN","IBTUBO2",42,0)
 ;
"RTN","IBTUBO2",43,0)
 I IBIP(2)'=1,IBDT'<2990901 D
"RTN","IBTUBO2",44,0)
 . I 'IBIP(2) S IBUNB("EPISM-P")=IBUNB("EPISM-P")+1 S:IBDET IBXX=$S(IBXX="I":"I,P",1:"P")
"RTN","IBTUBO2",45,0)
 . I $G(IBXTRACT) S IB(3)=IB(3)+1 ; For DM extract.
"RTN","IBTUBO2",46,0)
 . I IBIP(2)=2 S IBUNB("EPISM-P-MRA")=IBUNB("EPISM-P-MRA")+1 S:IBDET IBMRA=$S(IBMRA="I":"I,P",1:"P")
"RTN","IBTUBO2",47,0)
 ;
"RTN","IBTUBO2",48,0)
 I $S('IBIP(1):1,'IBIP(2):1,1:0) S IBUNB("EPISM-A")=IBUNB("EPISM-A")+1  ; Number of Admissions missing claims
"RTN","IBTUBO2",49,0)
 S:IBIP(1)=2!(IBIP(2)=2) IBUNB("EPISM-A-MRA")=IBUNB("EPISM-A-MRA")+1
"RTN","IBTUBO2",50,0)
 I $G(IBXTRACT) S IB(5)=IB(5)+1 ; For DM extract.
"RTN","IBTUBO2",51,0)
 ;
"RTN","IBTUBO2",52,0)
 I '$G(IBINMRA),IBIP(1)=2 G:IBIP(2)=1 INPTQ
"RTN","IBTUBO2",53,0)
 I '$G(IBINMRA),IBIP(2)=2 G:IBIP(1)=1 INPTQ
"RTN","IBTUBO2",54,0)
 ;
"RTN","IBTUBO2",55,0)
 ; - Set global for report.
"RTN","IBTUBO2",56,0)
 I $S($G(IBINMRA):1,1:IBXX'="") S ^TMP($J,"IBTUB-INPT",IBNAME_"@@"_DFN,IBDT,IBX)=IBNCF_U_IBXX_U_U_U_$$HOSP^IBTUBOU(DGPM)
"RTN","IBTUBO2",57,0)
 I IBMRA'="",$G(IBINMRA) S ^TMP($J,"IBTUB-INPT_MRA",IBNAME_"@@"_DFN,IBDT,IBX)=1_U_IBMRA
"RTN","IBTUBO2",58,0)
 ;
"RTN","IBTUBO2",59,0)
INPTQ Q
"RTN","IBTUBO2",60,0)
 ;
"RTN","IBTUBO2",61,0)
RX(IBRX) ; - Check if prescription has been billed; if not,
"RTN","IBTUBO2",62,0)
 ;   ^TMP($J,"IBTUB-RX",NAME@@DFN,DATE@RX#,IBX)=bill status^drug name^
"RTN","IBTUBO2",63,0)
 ;                                            original fill date
"RTN","IBTUBO2",64,0)
 ;   ^TMP($J,"IBTUB-RX_MRA",NAME@@DFN,DATE@RX#,IBX)=1 if req MRA
"RTN","IBTUBO2",65,0)
 ;
"RTN","IBTUBO2",66,0)
 ;   *Pre-set variables: DFN=patient IEN, IBDT=refill date,
"RTN","IBTUBO2",67,0)
 ;                       IBRT=bill rate, IBRX=pointer to file #52,
"RTN","IBTUBO2",68,0)
 ;                       IBEDT=reporting period date
"RTN","IBTUBO2",69,0)
 I '$G(DFN)!('$G(IBDT))!('$G(IBRT))!('$G(IBRX)) G RXQ
"RTN","IBTUBO2",70,0)
 N IBDATA,IBDAY,IBDRX,IBFL,IBFLG,IBOFD,IBNAME,IBND,IBNO,IBNCF,RX,X,RXDT,IBMRA,IBCO
"RTN","IBTUBO2",71,0)
 ;
"RTN","IBTUBO2",72,0)
 ; - Be sure prescription has an RX#.
"RTN","IBTUBO2",73,0)
 S IBND=$$RXZERO^IBRXUTL(DFN,IBRX),IBNO=$P(IBND,U) G:IBNO="" RXQ
"RTN","IBTUBO2",74,0)
 ;
"RTN","IBTUBO2",75,0)
 ; - Retrieve the Prescription Original Fill Date
"RTN","IBTUBO2",76,0)
 S IBOFD=$$FILE^IBRXUTL(IBRX,22)\1
"RTN","IBTUBO2",77,0)
 ;
"RTN","IBTUBO2",78,0)
 S IBDAY=$E(IBDT,1,7),IBDRX=IBDAY_"@@"_IBNO,IBNAME=$P($G(^DPT(DFN,0)),U)
"RTN","IBTUBO2",79,0)
 ;
"RTN","IBTUBO2",80,0)
 ; - Be sure that this fill was not already marked as unbilled.
"RTN","IBTUBO2",81,0)
 I $D(^TMP($J,"IBTUB-RX",IBNAME_"@@"_DFN,IBDRX,IBX)) G RXQ
"RTN","IBTUBO2",82,0)
 ;
"RTN","IBTUBO2",83,0)
 ; - Look at all fills of the prescription that are on a claim.
"RTN","IBTUBO2",84,0)
 S (IBFL,X)="",(IBFLG,IBNCF,IBNCF(0),IBMRA)=0
"RTN","IBTUBO2",85,0)
 F  S X=$O(^IBA(362.4,"B",IBNO,X)) Q:'X  D  Q:IBFL
"RTN","IBTUBO2",86,0)
 . S RX=$G(^IBA(362.4,X,0)),RXDT=$P(RX,U,3)\1
"RTN","IBTUBO2",87,0)
 . I RXDT=IBOFD S IBFLG=1  ; Original Fill Date Billed?
"RTN","IBTUBO2",88,0)
 . I RXDT'=IBDAY Q  ; RX refill and claim refill dates not the same.
"RTN","IBTUBO2",89,0)
 . ;
"RTN","IBTUBO2",90,0)
 . ; - Skip bill if not authorized (and not meeting other criteria).
"RTN","IBTUBO2",91,0)
 . S IBDATA=$$CKBIL^IBTUBOU($P(RX,U,2)) Q:IBDATA=""
"RTN","IBTUBO2",92,0)
 . S IBNCF=IBNCF+1 ; Increment the number of bills on file for the episode
"RTN","IBTUBO2",93,0)
 . ; If Compile/Store & Not authorized before reporting period - Quit.
"RTN","IBTUBO2",94,0)
 . I $G(IBCOMP),$S($P(IBDATA,U,2)'=2:$P(IBDATA,U,3),1:$P(IBDATA,U,6))>IBEDT S IBNONMRA=0 Q
"RTN","IBTUBO2",95,0)
 . S:$P(IBDATA,U,2)'=2 IBFL=1,IBMRA=0 ; at least 1 non-MRA bill exists
"RTN","IBTUBO2",96,0)
 . S:$P(IBDATA,U,2)=2 IBMRA=1 ; at least 1 MRA bill exists
"RTN","IBTUBO2",97,0)
 . ;
"RTN","IBTUBO2",98,0)
 ;
"RTN","IBTUBO2",99,0)
 I IBFL G RXQ ; Refill has been billed.
"RTN","IBTUBO2",100,0)
 ;
"RTN","IBTUBO2",101,0)
RX1 ; - Calculate unbilled amounts.
"RTN","IBTUBO2",102,0)
 S:'IBMRA IBUNB("PRESCRP")=IBUNB("PRESCRP")+1
"RTN","IBTUBO2",103,0)
 I IBMRA S IBUNB("PRESCRP-MRA")=IBUNB("PRESCRP-MRA")+1
"RTN","IBTUBO2",104,0)
 S IBCO=$$BICOST^IBCRCI(IBRT,3,IBDAY,"PRESCRIPTION FILL")
"RTN","IBTUBO2",105,0)
 S:'IBMRA IBUNB("UNBILRX")=IBUNB("UNBILRX")+IBCO
"RTN","IBTUBO2",106,0)
 I IBMRA S IBUNB("UNBILRX-MRA")=IBUNB("UNBILRX-MRA")+IBCO
"RTN","IBTUBO2",107,0)
 I $G(IBXTRACT) D  ; For DM extract.
"RTN","IBTUBO2",108,0)
 . S IB(17)=IB(17)+1
"RTN","IBTUBO2",109,0)
 . S IB(18)=IB(18)+IBCO
"RTN","IBTUBO2",110,0)
 ;
"RTN","IBTUBO2",111,0)
 ; - Set global for report.
"RTN","IBTUBO2",112,0)
 D ZERO^IBRXUTL(+$P(IBND,U,6))
"RTN","IBTUBO2",113,0)
 I $S($G(IBINMRA):1,1:'IBMRA) S ^TMP($J,"IBTUB-RX",IBNAME_"@@"_DFN,IBDRX,IBX)=IBNCF_U_$P($G(^VA(200,+$P(IBND,U,4),0)),U)_U_$$FILE^IBRXUTL(IBRX,22)_U_U_IBFLG_U_$G(^TMP($J,"IBDRUG",+$P(IBND,U,6),.01))
"RTN","IBTUBO2",114,0)
 I IBMRA,$G(IBINMRA) S ^TMP($J,"IBTUB-RX_MRA",IBNAME_"@@"_DFN,IBDRX,IBX)=1
"RTN","IBTUBO2",115,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBTUBO2",116,0)
 ;
"RTN","IBTUBO2",117,0)
RXQ Q
"VER")
8.0^22.0
"BLD",7077,6)
^335
**END**
**END**
