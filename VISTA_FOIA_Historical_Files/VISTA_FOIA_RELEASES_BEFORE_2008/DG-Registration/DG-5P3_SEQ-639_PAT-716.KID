Released DG*5.3*716 SEQ #639
Extracted from mail message
**KIDS**:DG*5.3*716^

**INSTALL NAME**
DG*5.3*716
"BLD",6641,0)
DG*5.3*716^REGISTRATION^0^3060925^y
"BLD",6641,1,0)
^^1^1^3060612^^
"BLD",6641,1,1,0)
See the Patch Description in the Forum Patch Module for DG*5.3*716.
"BLD",6641,4,0)
^9.64PA^^
"BLD",6641,"KRN",0)
^9.67PA^8989.52^19
"BLD",6641,"KRN",.4,0)
.4
"BLD",6641,"KRN",.401,0)
.401
"BLD",6641,"KRN",.402,0)
.402
"BLD",6641,"KRN",.403,0)
.403
"BLD",6641,"KRN",.5,0)
.5
"BLD",6641,"KRN",.84,0)
.84
"BLD",6641,"KRN",3.6,0)
3.6
"BLD",6641,"KRN",3.8,0)
3.8
"BLD",6641,"KRN",9.2,0)
9.2
"BLD",6641,"KRN",9.8,0)
9.8
"BLD",6641,"KRN",9.8,"NM",0)
^9.68A^3^2
"BLD",6641,"KRN",9.8,"NM",2,0)
DGRPV^^0^B16930489
"BLD",6641,"KRN",9.8,"NM",3,0)
DGENUPL2^^0^B67231252
"BLD",6641,"KRN",9.8,"NM","B","DGENUPL2",3)

"BLD",6641,"KRN",9.8,"NM","B","DGRPV",2)

"BLD",6641,"KRN",19,0)
19
"BLD",6641,"KRN",19.1,0)
19.1
"BLD",6641,"KRN",101,0)
101
"BLD",6641,"KRN",409.61,0)
409.61
"BLD",6641,"KRN",771,0)
771
"BLD",6641,"KRN",870,0)
870
"BLD",6641,"KRN",8989.51,0)
8989.51
"BLD",6641,"KRN",8989.52,0)
8989.52
"BLD",6641,"KRN",8994,0)
8994
"BLD",6641,"KRN","B",.4,.4)

"BLD",6641,"KRN","B",.401,.401)

"BLD",6641,"KRN","B",.402,.402)

"BLD",6641,"KRN","B",.403,.403)

"BLD",6641,"KRN","B",.5,.5)

"BLD",6641,"KRN","B",.84,.84)

"BLD",6641,"KRN","B",3.6,3.6)

"BLD",6641,"KRN","B",3.8,3.8)

"BLD",6641,"KRN","B",9.2,9.2)

"BLD",6641,"KRN","B",9.8,9.8)

"BLD",6641,"KRN","B",19,19)

"BLD",6641,"KRN","B",19.1,19.1)

"BLD",6641,"KRN","B",101,101)

"BLD",6641,"KRN","B",409.61,409.61)

"BLD",6641,"KRN","B",771,771)

"BLD",6641,"KRN","B",870,870)

"BLD",6641,"KRN","B",8989.51,8989.51)

"BLD",6641,"KRN","B",8989.52,8989.52)

"BLD",6641,"KRN","B",8994,8994)

"BLD",6641,"QUES",0)
^9.62^^
"BLD",6641,"REQB",0)
^9.611^2^2
"BLD",6641,"REQB",1,0)
DG*5.3*673^2
"BLD",6641,"REQB",2,0)
DG*5.3*689^2
"BLD",6641,"REQB","B","DG*5.3*673",1)

"BLD",6641,"REQB","B","DG*5.3*689",2)

"MBREQ")
0
"PKG",47,-1)
1^1
"PKG",47,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",47,20,0)
^9.402P^^
"PKG",47,22,0)
^9.49I^1^1
"PKG",47,22,1,0)
5.3^2930813^2960613
"PKG",47,22,1,"PAH",1,0)
716^3060925
"PKG",47,22,1,"PAH",1,1,0)
^^1^1^3060925
"PKG",47,22,1,"PAH",1,1,1,0)
See the Patch Description in the Forum Patch Module for DG*5.3*716.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","DGENUPL2")
0^3^B67231252^B66821493
"RTN","DGENUPL2",1,0)
DGENUPL2 ;ALB/CJM,RTK,TMK,ISA/KWP/RMM/CKN,EG,ERC - PROCESS INCOMING (Z11 EVENT TYPE) HL7 MESSAGES ; 10/19/05
"RTN","DGENUPL2",2,0)
 ;;5.3;REGISTRATION;**147,222,232,310,314,367,397,677,631,675,672,673,716**;Aug 13,1993
"RTN","DGENUPL2",3,0)
 ;
"RTN","DGENUPL2",4,0)
 ;**************************************************************
"RTN","DGENUPL2",5,0)
 ;The following procedures parse particular segment types.
"RTN","DGENUPL2",6,0)
 ;Input:SEG(),MSGID
"RTN","DGENUPL2",7,0)
 ;Output:DGPAT(),DGELG(),DGENR(),DGCDIS(),DGNTR(),DGOEIF(),ERROR
"RTN","DGENUPL2",8,0)
 ;**************************************************************
"RTN","DGENUPL2",9,0)
 ;
"RTN","DGENUPL2",10,0)
PID ;
"RTN","DGENUPL2",11,0)
 S DGPAT("SSN")=SEG(19)
"RTN","DGENUPL2",12,0)
 Q
"RTN","DGENUPL2",13,0)
 ;
"RTN","DGENUPL2",14,0)
ZPD ;
"RTN","DGENUPL2",15,0)
 S DGELG("RATEINC")=$$CONVERT^DGENUPL1(SEG(8))
"RTN","DGENUPL2",16,0)
 S DGPAT("DEATH")=$$CONVERT^DGENUPL1(SEG(9),"TS",.ERROR)
"RTN","DGENUPL2",17,0)
 I ERROR D  Q
"RTN","DGENUPL2",18,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZPD SEGMENT, SEQ 9",.ERRCOUNT)
"RTN","DGENUPL2",19,0)
 S DGELG("MEDICAID")=$$CONVERT^DGENUPL1(SEG(12))
"RTN","DGENUPL2",20,0)
 S DGELG("POW")=$$CONVERT^DGENUPL1(SEG(17))
"RTN","DGENUPL2",21,0)
 S DGPAT("EMGRES")=$$CONVERT^DGENUPL1(SEG(40)) ;DG*5.3*677
"RTN","DGENUPL2",22,0)
 Q
"RTN","DGENUPL2",23,0)
 ;
"RTN","DGENUPL2",24,0)
ZIE ;
"RTN","DGENUPL2",25,0)
 S DGPAT("INELDATE")=$$CONVERT^DGENUPL1(SEG(2),"DATE",.ERROR)
"RTN","DGENUPL2",26,0)
 I ERROR D  Q
"RTN","DGENUPL2",27,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZIE SEGMENT, SEQ 2",.ERRCOUNT)
"RTN","DGENUPL2",28,0)
 S DGPAT("INELREA")=$$CONVERT^DGENUPL1(SEG(3))
"RTN","DGENUPL2",29,0)
 S DGPAT("INELDEC")=$$CONVERT^DGENUPL1(SEG(4))
"RTN","DGENUPL2",30,0)
 Q
"RTN","DGENUPL2",31,0)
 ;
"RTN","DGENUPL2",32,0)
ZEL(COUNT) ;
"RTN","DGENUPL2",33,0)
 D ZEL^DGENUPLA(COUNT)  ;code for ZEL segment has moved to DGENUPLA
"RTN","DGENUPL2",34,0)
 Q
"RTN","DGENUPL2",35,0)
 ;
"RTN","DGENUPL2",36,0)
ZEN ;
"RTN","DGENUPL2",37,0)
 N SUB
"RTN","DGENUPL2",38,0)
 S DGENR("DATE")=$$CONVERT^DGENUPL1(SEG(2),"DATE",.ERROR)
"RTN","DGENUPL2",39,0)
 I ERROR D  Q
"RTN","DGENUPL2",40,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEN SEGMENT, SEQ 2",.ERRCOUNT)
"RTN","DGENUPL2",41,0)
 S DGENR("SOURCE")=$$CONVERT^DGENUPL1(SEG(3))
"RTN","DGENUPL2",42,0)
 S DGENR("STATUS")=$$CONVERT^DGENUPL1(SEG(4))
"RTN","DGENUPL2",43,0)
 S ERROR=$$PEND(DFN,DGENR("STATUS"))
"RTN","DGENUPL2",44,0)
 I ERROR D  Q
"RTN","DGENUPL2",45,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"ENROLLMENT STATUS PENDING-ELIGIBILITY IS VERIFIED",.ERRCOUNT)
"RTN","DGENUPL2",46,0)
 S DGENR("REASON")=$$CONVERT^DGENUPL1(SEG(5))
"RTN","DGENUPL2",47,0)
 S DGENR("REMARKS")=$$CONVERT^DGENUPL1(SEG(6))
"RTN","DGENUPL2",48,0)
 S DGENR("FACREC")=$$CONVERT^DGENUPL1(SEG(7),"INSTITUTION",.ERROR)
"RTN","DGENUPL2",49,0)
 I ERROR D  Q
"RTN","DGENUPL2",50,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"FACILITY RECEIVED "_SEG(7)_" NOT FOUND IN THE INSTITUTION FILE",.ERRCOUNT)
"RTN","DGENUPL2",51,0)
 S DGPAT("PREFAC")=$$CONVERT^DGENUPL1(SEG(8),"INSTITUTION",.ERROR)
"RTN","DGENUPL2",52,0)
 I ERROR D  Q
"RTN","DGENUPL2",53,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"PREFERRED FACILITY "_SEG(8)_" NOT FOUND IN THE INSTITUTION FILE",.ERRCOUNT)
"RTN","DGENUPL2",54,0)
 ;
"RTN","DGENUPL2",55,0)
 S DGENR("PRIORITY")=$$CONVERT^DGENUPL1(SEG(9))
"RTN","DGENUPL2",56,0)
 S DGENR("EFFDATE")=$$CONVERT^DGENUPL1(SEG(10),"DATE",.ERROR)
"RTN","DGENUPL2",57,0)
 I ERROR D  Q
"RTN","DGENUPL2",58,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEN SEGMENT, SEQ 10",.ERRCOUNT)
"RTN","DGENUPL2",59,0)
 S DGENR("APP")=$$CONVERT^DGENUPL1(SEG(11),"DATE",.ERROR)
"RTN","DGENUPL2",60,0)
 I ERROR D  Q
"RTN","DGENUPL2",61,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEN SEGMENT, SEQ 11",.ERRCOUNT)
"RTN","DGENUPL2",62,0)
 ;
"RTN","DGENUPL2",63,0)
 ;!!!!!! take next line out when HEC begins transmitting application dt
"RTN","DGENUPL2",64,0)
 I DGENR("APP")="" S DGENR("APP")=DGENR("DATE")
"RTN","DGENUPL2",65,0)
 I DGENR("APP")="" S DGENR("APP")=DGENR("EFFDATE")
"RTN","DGENUPL2",66,0)
 ;
"RTN","DGENUPL2",67,0)
 S DGENR("END")=$$CONVERT^DGENUPL1(SEG(12),"DATE",.ERROR)
"RTN","DGENUPL2",68,0)
 I ERROR D  Q
"RTN","DGENUPL2",69,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEN SEGMENT, SEQ 12",.ERRCOUNT)
"RTN","DGENUPL2",70,0)
 ;Phase II Parse out Sub-Group (SRS 6.4)
"RTN","DGENUPL2",71,0)
 S DGENR("SUBGRP")=$$CONVERT^DGENUPL1(SEG(13))
"RTN","DGENUPL2",72,0)
 ;
"RTN","DGENUPL2",73,0)
 ;want to ignore double quotes sent for enrollment fields
"RTN","DGENUPL2",74,0)
 S SUB=""
"RTN","DGENUPL2",75,0)
 F  S SUB=$O(DGENR(SUB)) Q:SUB=""  I DGENR(SUB)="@" S DGENR(SUB)=""
"RTN","DGENUPL2",76,0)
 ;
"RTN","DGENUPL2",77,0)
 Q
"RTN","DGENUPL2",78,0)
 ;
"RTN","DGENUPL2",79,0)
ZMT ;
"RTN","DGENUPL2",80,0)
 I SEG(1)>1 D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"ZMT SEGMENT, SEQ 1, SHOULD SPECIFY MEANS TEST",.ERRCOUNT) S ERROR=1 Q
"RTN","DGENUPL2",81,0)
 S DGELG("MTSTA")=$$CONVERT^DGENUPL1(SEG(3),"MT",.ERROR)
"RTN","DGENUPL2",82,0)
 I ERROR D  Q
"RTN","DGENUPL2",83,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZMT SEGMENT, SEQ 3",.ERRCOUNT)
"RTN","DGENUPL2",84,0)
 Q
"RTN","DGENUPL2",85,0)
 ;
"RTN","DGENUPL2",86,0)
ZCD ;
"RTN","DGENUPL2",87,0)
 ;Phase II for multiple ZCD's
"RTN","DGENUPL2",88,0)
 I SEG(1)>1 G SKIP
"RTN","DGENUPL2",89,0)
 S DGCDIS("BY")=$$CONVERT^DGENUPL1(SEG(3))
"RTN","DGENUPL2",90,0)
 S DGCDIS("DATE")=$$CONVERT^DGENUPL1(SEG(5),"DATE",.ERROR)
"RTN","DGENUPL2",91,0)
 I ERROR D  Q
"RTN","DGENUPL2",92,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZCD SEGMENT, SEQ 5",.ERRCOUNT)
"RTN","DGENUPL2",93,0)
 S DGCDIS("FACDET")=$$CONVERT^DGENUPL1(SEG(4),"INSTITUTION",.ERROR)
"RTN","DGENUPL2",94,0)
 I ERROR D  Q
"RTN","DGENUPL2",95,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"FACILITY "_SEG(4)_" MAKING CATASTROPHIC DISABILITY DETERMINATION NOT FOUND IN THE INSTITUTION FILE",.ERRCOUNT)
"RTN","DGENUPL2",96,0)
 S DGCDIS("REVDTE")=$$CONVERT^DGENUPL1(SEG(2),"DATE",.ERROR)
"RTN","DGENUPL2",97,0)
 I ERROR D  Q
"RTN","DGENUPL2",98,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZCD SEGMENT, SEQ 2",.ERRCOUNT)
"RTN","DGENUPL2",99,0)
 S DGCDIS("METDET")=$$CONVERT^DGENUPL1($P(SEG(6),$E(HLECH)))
"RTN","DGENUPL2",100,0)
 S DGCDIS("VCD")=$$CONVERT^DGENUPL1(SEG(12))
"RTN","DGENUPL2",101,0)
SKIP ;
"RTN","DGENUPL2",102,0)
 ;Phase II Parse out additional fields.  CONVERT type of RSN converts the code to IEN for diagnosis,procedure and condition (HL7TORSN^DGENA5).
"RTN","DGENUPL2",103,0)
 S DGCDIS("DIAG",SEG(1))=$$CONVERT^DGENUPL1(SEG(7),"CDRSN")
"RTN","DGENUPL2",104,0)
 S DGCDIS("PROC",SEG(1))=$$CONVERT^DGENUPL1(SEG(8),"CDRSN")
"RTN","DGENUPL2",105,0)
 S DGCDIS("EXT",SEG(1),1)=$$CONVERT^DGENUPL1($P(SEG(9),$E(HLECH)),"EXT")
"RTN","DGENUPL2",106,0)
 S DGCDIS("COND",SEG(1))=$$CONVERT^DGENUPL1(SEG(10),"CDRSN")
"RTN","DGENUPL2",107,0)
 S DGCDIS("SCORE",SEG(1))=$$CONVERT^DGENUPL1($P(SEG(11),$E(HLECH)))
"RTN","DGENUPL2",108,0)
 S DGCDIS("PERM",SEG(1))=$$CONVERT^DGENUPL1($P(SEG(13),$E(HLECH)))
"RTN","DGENUPL2",109,0)
 I DGCDIS("VCD")="Y",'DGCDIS("DIAG",SEG(1)),'DGCDIS("PROC",SEG(1)),'DGCDIS("COND",SEG(1)) D  Q
"RTN","DGENUPL2",110,0)
 .S ERROR=1 D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"NO VALID DIAGNOSIS,PROCEDURE, OR CONDITION IN THE ZCD SEGMENT",.ERRCOUNT)
"RTN","DGENUPL2",111,0)
 Q
"RTN","DGENUPL2",112,0)
 ;
"RTN","DGENUPL2",113,0)
ZSP ;
"RTN","DGENUPL2",114,0)
 S DGELG("SC")=$$CONVERT^DGENUPL1(SEG(2),"Y/N",.ERROR)
"RTN","DGENUPL2",115,0)
 I ERROR D  Q
"RTN","DGENUPL2",116,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 2",.ERRCOUNT)
"RTN","DGENUPL2",117,0)
 S DGELG("SCPER")=$$CONVERT^DGENUPL1(SEG(3))
"RTN","DGENUPL2",118,0)
 S DGELG("EFFDT")=$$CONVERT^DGENUPL1(SEG(11),"DATE",.ERROR)
"RTN","DGENUPL2",119,0)
 I ERROR D  Q
"RTN","DGENUPL2",120,0)
 . D ADDERROR^DGENUPL(MSGID,$G(DGELG("EFFDT")),"BAD VALUE, ZSP SEGMENT, SEQ 11",.ERRCOUNT)
"RTN","DGENUPL2",121,0)
 ;if effective date is null, set update value to "@" (delete)
"RTN","DGENUPL2",122,0)
 I DGELG("EFFDT")="" S DGELG("EFFDT")="@"
"RTN","DGENUPL2",123,0)
 ;
"RTN","DGENUPL2",124,0)
 ;added 8/3/98 to reduce #rejects
"RTN","DGENUPL2",125,0)
 ;if HEC sends SC=NO, SC% not sent, and site has value for SC% then delete it
"RTN","DGENUPL2",126,0)
 I DGELG("SC")="N",DGELG("SCPER")="" S DGELG("SCPER")="@"
"RTN","DGENUPL2",127,0)
 ;
"RTN","DGENUPL2",128,0)
 S DGELG("P&T")=$$CONVERT^DGENUPL1(SEG(6),"Y/N",.ERROR)
"RTN","DGENUPL2",129,0)
 I ERROR D  Q
"RTN","DGENUPL2",130,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 6",.ERRCOUNT)
"RTN","DGENUPL2",131,0)
 S DGELG("UNEMPLOY")=$$CONVERT^DGENUPL1(SEG(7),"Y/N",.ERROR)
"RTN","DGENUPL2",132,0)
 I ERROR D  Q
"RTN","DGENUPL2",133,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 7",.ERRCOUNT)
"RTN","DGENUPL2",134,0)
 S DGELG("SCAWDATE")=$$CONVERT^DGENUPL1(SEG(8),"DATE",.ERROR)
"RTN","DGENUPL2",135,0)
 I ERROR D  Q
"RTN","DGENUPL2",136,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 8",.ERRCOUNT)
"RTN","DGENUPL2",137,0)
 Q
"RTN","DGENUPL2",138,0)
 ;
"RTN","DGENUPL2",139,0)
ZMH ; Purple Heart, OEF/OIF Conflict Loc
"RTN","DGENUPL2",140,0)
 ;ONLY PROCESS PH & OEF/OIF FROM ZMH
"RTN","DGENUPL2",141,0)
 Q:$S(SEG(2)="PH":0,SEG(2)="OEIF":0,1:1)
"RTN","DGENUPL2",142,0)
 I SEG(2)="PH" D  Q
"RTN","DGENUPL2",143,0)
 . S DGPAT("PHI")=$P(SEG(3),$E(HLECH))
"RTN","DGENUPL2",144,0)
 . S DGELG("PH")=$$CONVERT^DGENUPL1($P(SEG(3),$E(HLECH)))
"RTN","DGENUPL2",145,0)
 . S DGPAT("PHST")=$P(SEG(3),$E(HLECH),2)
"RTN","DGENUPL2",146,0)
 . S DGPAT("PHRR")=$P(SEG(3),$E(HLECH),3)
"RTN","DGENUPL2",147,0)
 ;
"RTN","DGENUPL2",148,0)
 I SEG(2)="OEIF" D  Q
"RTN","DGENUPL2",149,0)
 . S DGOEIF("COUNT")=$G(DGOEIF("COUNT"))+1
"RTN","DGENUPL2",150,0)
 . S DGOEIF("LOC",DGOEIF("COUNT"))=$E($P(SEG(3),$E(HLECH)),1,3)
"RTN","DGENUPL2",151,0)
 . S DGOEIF("SITE",DGOEIF("COUNT"))=$$CONVERT^DGENUPL1($P(SEG(3),$E(HLECH),2),"INSTITUTION")
"RTN","DGENUPL2",152,0)
 . S DGOEIF("FR",DGOEIF("COUNT"))=$$CONVERT^DGENUPL1($P(SEG(4),$E(HLECH)),"DATE")
"RTN","DGENUPL2",153,0)
 . S DGOEIF("TO",DGOEIF("COUNT"))=$$CONVERT^DGENUPL1($P(SEG(4),$E(HLECH),2),"DATE")
"RTN","DGENUPL2",154,0)
 . S DGOEIF("LOCK")=1
"RTN","DGENUPL2",155,0)
 Q
"RTN","DGENUPL2",156,0)
 ;
"RTN","DGENUPL2",157,0)
ZRD ;
"RTN","DGENUPL2",158,0)
 N COUNT,DXCODE,NAME,COND
"RTN","DGENUPL2",159,0)
 S DXCODE=$P(SEG(2),$E(HLECH))
"RTN","DGENUPL2",160,0)
 I DXCODE="""""" S DXCODE=""
"RTN","DGENUPL2",161,0)
 S NAME=$P(SEG(2),$E(HLECH),2)
"RTN","DGENUPL2",162,0)
 Q:DXCODE=""  ;segment does not contain a disability condition
"RTN","DGENUPL2",163,0)
 ;
"RTN","DGENUPL2",164,0)
 S COUNT=1+(+$G(DGELG("RATEDIS")))
"RTN","DGENUPL2",165,0)
 S (COND,DGELG("RATEDIS",COUNT,"RD"))=$$DCLOOKUP(DXCODE,NAME)
"RTN","DGENUPL2",166,0)
 S DGELG("RATEDIS",COUNT,"PER")=SEG(3),DGELG("RATEDIS")=COUNT
"RTN","DGENUPL2",167,0)
 S DGELG("RATEDIS",COUNT,"RDEXT")=SEG(12)
"RTN","DGENUPL2",168,0)
 S DGELG("RATEDIS",COUNT,"RDORIG")=$$CONVERT^DGENUPL1(SEG(13),"DATE",.ERROR)
"RTN","DGENUPL2",169,0)
 I ERROR D  Q
"RTN","DGENUPL2",170,0)
 . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZRD SEGMENT, S 13",.ERRCOUNT)
"RTN","DGENUPL2",171,0)
 S DGELG("RATEDIS",COUNT,"RDCURR")=$$CONVERT^DGENUPL1(SEG(14),"DATE",.ERROR)
"RTN","DGENUPL2",172,0)
 I ERROR D  Q
"RTN","DGENUPL2",173,0)
 . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZRD SEGMENT, S 14",.ERRCOUNT)
"RTN","DGENUPL2",174,0)
 I 'COND D  Q
"RTN","DGENUPL2",175,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZRD SEGMENT, SEQ 2 - DISABILTY CONDITION LOOKUP FAILED",.ERRCOUNT)
"RTN","DGENUPL2",176,0)
 .S ERROR=1
"RTN","DGENUPL2",177,0)
 Q
"RTN","DGENUPL2",178,0)
OBX ;
"RTN","DGENUPL2",179,0)
 D OBX^DGENUPLA  ;code for OBX segment moved to DGENUPLA
"RTN","DGENUPL2",180,0)
 Q
"RTN","DGENUPL2",181,0)
 ;
"RTN","DGENUPL2",182,0)
 ;*********** end of segment parsers ****
"RTN","DGENUPL2",183,0)
 ;
"RTN","DGENUPL2",184,0)
DCLOOKUP(DGCODE,DGNAME) ;
"RTN","DGENUPL2",185,0)
 ;Description: Returns the ien of a Disability Condition (file #31) based on the DGCODE and DGNAME
"RTN","DGENUPL2",186,0)
 ;
"RTN","DGENUPL2",187,0)
 ;Input:
"RTN","DGENUPL2",188,0)
 ;  DGCODE - DX Code of the Disability Condition
"RTN","DGENUPL2",189,0)
 ;  DGNAME - name of the Disability Condition
"RTN","DGENUPL2",190,0)
 ;Output:
"RTN","DGENUPL2",191,0)
 ;  Function Value: ien of the entry found, or 0 otherwise
"RTN","DGENUPL2",192,0)
 ;
"RTN","DGENUPL2",193,0)
 Q:(DGCODE="") 0
"RTN","DGENUPL2",194,0)
 N NODE,IEN,FOUND
"RTN","DGENUPL2",195,0)
 S (FOUND,IEN)=0
"RTN","DGENUPL2",196,0)
 F  S IEN=$O(^DIC(31,"C",DGCODE,IEN)) Q:'IEN  D  Q:FOUND
"RTN","DGENUPL2",197,0)
 .S NODE=$G(^DIC(31,IEN,0))
"RTN","DGENUPL2",198,0)
 .I DGNAME=$P(NODE,"^"),DGCODE=$P(NODE,"^",3) S FOUND=1
"RTN","DGENUPL2",199,0)
 I 'FOUND S IEN=$O(^DIC(31,"C",DGCODE,0))
"RTN","DGENUPL2",200,0)
 Q +IEN
"RTN","DGENUPL2",201,0)
 ;
"RTN","DGENUPL2",202,0)
REGCHECK(DFN) ;
"RTN","DGENUPL2",203,0)
 ;Description: passes patient through the registration consistency checker
"RTN","DGENUPL2",204,0)
 ;Input -
"RTN","DGENUPL2",205,0)
 ;  DFN - is a pointer to the Patient File
"RTN","DGENUPL2",206,0)
 ;
"RTN","DGENUPL2",207,0)
 N DGCD,DGCHK,DGDAY,DGEDCN,DGER,DGLST,DGNCK,DGRPCOLD,DGSC,DGTYPE,DGVT,VA,X
"RTN","DGENUPL2",208,0)
 ;
"RTN","DGENUPL2",209,0)
 S DGEDCN=0
"RTN","DGENUPL2",210,0)
 D ^DGRPC
"RTN","DGENUPL2",211,0)
 Q
"RTN","DGENUPL2",212,0)
PEND(DFN,DGSTAT) ;
"RTN","DGENUPL2",213,0)
 N DGARR,DGEC,DGERR,DGX
"RTN","DGENUPL2",214,0)
 I $P($G(^DPT(DFN,.361)),U)'="V" Q 0
"RTN","DGENUPL2",215,0)
 I $G(DGSTAT)']"" Q 0
"RTN","DGENUPL2",216,0)
 S DGSTAT="^"_DGSTAT_"^"
"RTN","DGENUPL2",217,0)
 Q:"^15^17^"'[DGSTAT 0
"RTN","DGENUPL2",218,0)
 D GETS^DIQ(2,DFN_",",".301;.302;.361;.36295","IE","DGARR","DGERR")
"RTN","DGENUPL2",219,0)
 I $D(DGERR) Q 0
"RTN","DGENUPL2",220,0)
 S DGEC=$G(DGARR(2,DFN_",",.361,"I"))
"RTN","DGENUPL2",221,0)
 I $G(DGEC)']"" Q 0
"RTN","DGENUPL2",222,0)
 S DGEC=$P($G(^DIC(8,DGEC,0)),U,9)
"RTN","DGENUPL2",223,0)
 I $G(DGEC)']"" Q 0
"RTN","DGENUPL2",224,0)
 I DGEC=5 Q 1
"RTN","DGENUPL2",225,0)
 I DGEC=3 D  Q DGX
"RTN","DGENUPL2",226,0)
 . S DGX=1
"RTN","DGENUPL2",227,0)
 . I $G(DGARR(2,DFN_",",.301,"I"))'="Y" S DGX=0 Q
"RTN","DGENUPL2",228,0)
 . I +$G(DGARR(2,DFN_",",.302,"I"))>0 S DGX=0 Q
"RTN","DGENUPL2",229,0)
 . I +$G(DGARR(2,DFN_",",.36295,"I"))>0 S DGX=0 Q
"RTN","DGENUPL2",230,0)
 Q 0
"RTN","DGRPV")
0^2^B16930489^B16870639
"RTN","DGRPV",1,0)
DGRPV ;ALB/MRL,RTK,PJR,BRM,TMK,AMA - REGISTRATION DEFINE VARIABLES ON ENTRY ; 8/11/05 12:56pm
"RTN","DGRPV",2,0)
 ;;5.3;Registration;**109,114,247,190,327,365,343,397,415,489,546,545,451,624,677,672,689,716**;Aug 13, 1993
"RTN","DGRPV",3,0)
 ;
"RTN","DGRPV",4,0)
 ;
"RTN","DGRPV",5,0)
 ;set up variables for registration screen processing
"RTN","DGRPV",6,0)
 ;
"RTN","DGRPV",7,0)
 ;DGRPVV   :string of 15 ones and zeros each character corresponding to
"RTN","DGRPV",8,0)
 ;          a particular screen (0 means allow edit, 1 means don't)
"RTN","DGRPV",9,0)
 ;
"RTN","DGRPV",10,0)
 ;DGRPVV(n):where n=screen number.  String of x ones and zeros where
"RTN","DGRPV",11,0)
 ;          x is the number of elements on screen n (0=edit, 1=don't)
"RTN","DGRPV",12,0)
 ;
"RTN","DGRPV",13,0)
 ;DGVI     :Turn on high intensity
"RTN","DGRPV",14,0)
 ;DGVO     :Turn off high intensity
"RTN","DGRPV",15,0)
 ;
"RTN","DGRPV",16,0)
EN D DT^DICRW I '$D(DVBGUI) D HOME^%ZIS
"RTN","DGRPV",17,0)
 S (DGVI,DGVO)="""""" I $S('$D(IOST(0)):1,'$D(^DG(43,1,0)):1,'$P(^DG(43,1,0),"^",36):1,$D(^DG(43,1,"TERM",IOST(0))):1,1:0) G M ;goto M if not high intensity
"RTN","DGRPV",18,0)
 I $D(^%ZIS(2,IOST(0),7)) S I=^(7),X=$S($P(I,"^",3)]"":3,1:2) I $L($P(I,"^",1)),$L($P(I,"^",X)) S DGVI=$P(I,"^",1),DGVO=$P(I,"^",X)
"RTN","DGRPV",19,0)
M I $L(DGVI_DGVO)>4 S X=132 X ^%ZOSF("RM")
"RTN","DGRPV",20,0)
 S DGRPW=1,DGRPCM=0,DGRPU="UNANSWERED",DGRPNA="NOT APPLICABLE",DGRPV=$S($D(DGRPV):DGRPV,1:1)
"RTN","DGRPV",21,0)
SC7 S X=$S('$D(^DPT(DFN,"TYPE")):0,1:+^("TYPE")) S:'$D(DGELVER) DGELVER=0
"RTN","DGRPV",22,0)
 S DGRPTYPE=$S($D(^DG(391,+X,0)):^(0),1:""),(DGRPSC,DGRPSCE,DGRPSCE1)="" S:'$D(DGELVER) DGELVER=0
"RTN","DGRPV",23,0)
 I DGRPTYPE'="" S DGRPSC=$G(^DG(391,+X,"S")),DGRPSCE=$G(^("E")),DGRPSCE1=$G(^("E10"))
"RTN","DGRPV",24,0)
 ;
"RTN","DGRPV",25,0)
 S DGPH=$P($G(^DPT(DFN,.53)),U)  ;Purple Heart Indicator
"RTN","DGRPV",26,0)
 I $G(DGPRFLG)=1 D
"RTN","DGRPV",27,0)
 . S DGRPVV="000001111111111"
"RTN","DGRPV",28,0)
 E  D
"RTN","DGRPV",29,0)
 . S DGRPVV="000000000000000"
"RTN","DGRPV",30,0)
 S X="5^3^5^2^3^8^4^2^10^2^4^5^5^2^1"
"RTN","DGRPV",31,0)
 F I=1:1:15 S J=+$P(X,"^",I),DGRPVV(I)=$S((I<12)!(I=15):$E("00000000000000000",1,J),1:$E("11111111111111111",1,J))
"RTN","DGRPV",32,0)
 S DGRPVV(1.1)="00"
"RTN","DGRPV",33,0)
 S DGRPVV(2)="00010"
"RTN","DGRPV",34,0)
 I $G(DGPH)]"" S $E(DGRPVV(6),8)=1
"RTN","DGRPV",35,0)
 ;
"RTN","DGRPV",36,0)
 F I=3,6,8,9,10,11 S J=+$P(DGRPSC,"^",I) I 'J S DGRPVV=$E(DGRPVV,0,I-1)_1_$E(DGRPVV,I+1,99)
"RTN","DGRPV",37,0)
 ;
"RTN","DGRPV",38,0)
 ;-- if patient type is TRICARE then turn off screens 2,4
"RTN","DGRPV",39,0)
 ;
"RTN","DGRPV",40,0)
 ;-- modified 08/20/2003 for NOIS Calls MAC-0400-61574 & AMA-0700-71769 
"RTN","DGRPV",41,0)
 ;-- commented the line to allow screens 2 & 4 to display for Tricare
"RTN","DGRPV",42,0)
 ;I DGRPTYPE["TRICARE" F I=2,4 S J=+$P(DGRPSC,"^",I) I 'J S DGRPVV=$E(DGRPVV,0,I-1)_1_$E(DGRPVV,I+1,99)
"RTN","DGRPV",43,0)
 ;
"RTN","DGRPV",44,0)
 F I=31:0 S I=$O(^DD(391,I)) Q:I=""!(I>99)  I $D(^(I,0)),($E(^(0),1)'="*"),'+$P(DGRPSCE,"^",I) S X1=$E(I),X2=$E(I,2) I +X1 S DGRPVV(X1)=$E(DGRPVV(X1),0,X2-1)_1_$E(DGRPVV(X1),X2+1,99)
"RTN","DGRPV",45,0)
 I $G(^DPT(DFN,.35)),(^(.35)<+($E(DT,1,3)_"0000")) S DGRPVV=$E(DGRPVV,0,7)_11_$E(DGRPVV,10,99)
"RTN","DGRPV",46,0)
 K DIRUT,DUOUT,DTOUT
"RTN","DGRPV",47,0)
 ;
"RTN","DGRPV",48,0)
 ;Fields are numbered screen_item and put in that piece position.
"RTN","DGRPV",49,0)
 ;Because FM does not allow more than 100 pieces on a node, it was
"RTN","DGRPV",50,0)
 ;necessary to start a new node E10 for fields on screens 10 or higher.
"RTN","DGRPV",51,0)
 ;In these instances, the piece position will be screen_item-100 so,
"RTN","DGRPV",52,0)
 ;for example, screen 11, item 2 would be field 112, but piece 12.
"RTN","DGRPV",53,0)
 ;Items on screens <10 will be found on node E.
"RTN","DGRPV",54,0)
 ;
"RTN","DGRPV",55,0)
 F I=100:0 S I=$O(^DD(391,I)) Q:I=""!(I>150)  I $D(^(I,0)),($E(^(0),1)'="*"),'+$P(DGRPSCE1,"^",I-100) S X1=$E(I,1,2),X2=$E(I,3) I +X1 S DGRPVV(X1)=$E(DGRPVV(X1),0,X2-1)_1_$E(DGRPVV(X1),X2+1,99)
"RTN","DGRPV",56,0)
 ;
"RTN","DGRPV",57,0)
 I $S('($D(DUZ)#2):0,'$D(^XUSEC("DG ELIGIBILITY",DUZ)):0,1:1) G ELVER ;if user holds eligibility key, skip
"RTN","DGRPV",58,0)
 F I=.3,.32,.361 S DGRP(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","DGRPV",59,0)
 S DGRPVV(10)=11 I $P(DGRP(.361),"^",1)="V" S DGRPVV(7)=111,DGRPVV(1)=1_$E(DGRPVV(1),2,99) ;if elig verified, can't edit elig data, name, ssn, or dob
"RTN","DGRPV",60,0)
 I $P(DGRP(.3),"^",6)]"" S DGRPVV(8)=11 ;if monetary ben. verified, can't edit income screening data
"RTN","DGRPV",61,0)
 I $P(DGRP(.32),"^",2)]"" S DGRPVV(6)=111111111 ;if service data verified, can't edit service screen
"RTN","DGRPV",62,0)
 ;
"RTN","DGRPV",63,0)
ELVER ;set up variables for eligibility verification
"RTN","DGRPV",64,0)
 ;if elig ver option, only edit screens 1, 2, and 7 (and 6, 8, 9, 10,
"RTN","DGRPV",65,0)
 ;   and 11 if they're turned on).
"RTN","DGRPV",66,0)
 ;
"RTN","DGRPV",67,0)
 S DGRP(.361)=$G(^DPT(DFN,.361))
"RTN","DGRPV",68,0)
 I $P(DGRP(.361),U,3)="H" S DGRPVV(10)=10
"RTN","DGRPV",69,0)
 I $P($G(DGRP(.361)),U)="V",($P(DGRP(.361),U,3)="H") S DGRPVV(6)=$E(DGRPVV(6),1,5)_1_$E(DGRPVV(6),7,99),DGRPVV(11)=1000
"RTN","DGRPV",70,0)
 S:'DGELVER DGRPLAST=$S($G(DGPRFLG)=1:5,1:15)
"RTN","DGRPV",71,0)
 I DGELVER S DGRPVV="00111"_$E(DGRPVV,6,11)_"1111" F I=1:1:11 S J=$E(DGRPVV,I) I 'J S DGRPLAST=I
"RTN","DGRPV",72,0)
Q K DGRPSC,DGRPSCE
"RTN","DGRPV",73,0)
 Q
"RTN","DGRPV",74,0)
 ;
"RTN","DGRPV",75,0)
WW ;Write number on screens for display and/or edit (Z=number)
"RTN","DGRPV",76,0)
 W:DGRPW ! S Z=$S(DGRPCM:Z,DGRPV:"<"_Z_">",$E(DGRPVV(DGRPS),Z):"<"_Z_">",1:"["_Z_"]")
"RTN","DGRPV",77,0)
 I DGRPCM!($E(Z)="[") W @DGVI,Z,@DGVO
"RTN","DGRPV",78,0)
 I 'DGRPCM&($E(Z)'="[") W Z
"RTN","DGRPV",79,0)
 Q
"RTN","DGRPV",80,0)
 ;
"RTN","DGRPV",81,0)
WW1 ;spacing for screen display (Z=item to print)
"RTN","DGRPV",82,0)
 F Z2=1:1:(Z1-$L(Z)) S Z=Z_" "
"RTN","DGRPV",83,0)
 W Z K Z2
"RTN","DGRPV",84,0)
 Q
"RTN","DGRPV",85,0)
 ;
"RTN","DGRPV",86,0)
WW2 ; Write number on screen for fields always selectable
"RTN","DGRPV",87,0)
 W:DGRPW ! S Z="["_Z_"]"
"RTN","DGRPV",88,0)
 I DGRPCM!($E(Z)="[") W @DGVI,Z,@DGVO
"RTN","DGRPV",89,0)
 Q
"VER")
8.0^22.0
"BLD",6641,6)
^639
**END**
**END**
