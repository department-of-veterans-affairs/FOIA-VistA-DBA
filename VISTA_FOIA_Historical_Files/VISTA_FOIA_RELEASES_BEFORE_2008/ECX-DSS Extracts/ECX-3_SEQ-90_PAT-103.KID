Released ECX*3*103 SEQ #90
Extracted from mail message
**KIDS**:ECX*3.0*103^

**INSTALL NAME**
ECX*3.0*103
"BLD",7087,0)
ECX*3.0*103^DSS EXTRACTS^0^3070122^y
"BLD",7087,1,0)
^^1^1^3070118^
"BLD",7087,1,1,0)
This patch provides a fix to the IVP DETAIL EXTRACT
"BLD",7087,4,0)
^9.64PA^^
"BLD",7087,6.3)
1
"BLD",7087,"KRN",0)
^9.67PA^8989.52^19
"BLD",7087,"KRN",.4,0)
.4
"BLD",7087,"KRN",.401,0)
.401
"BLD",7087,"KRN",.402,0)
.402
"BLD",7087,"KRN",.403,0)
.403
"BLD",7087,"KRN",.5,0)
.5
"BLD",7087,"KRN",.84,0)
.84
"BLD",7087,"KRN",3.6,0)
3.6
"BLD",7087,"KRN",3.8,0)
3.8
"BLD",7087,"KRN",9.2,0)
9.2
"BLD",7087,"KRN",9.8,0)
9.8
"BLD",7087,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",7087,"KRN",9.8,"NM",1,0)
ECXUTL5^^0^B30156456
"BLD",7087,"KRN",9.8,"NM","B","ECXUTL5",1)

"BLD",7087,"KRN",19,0)
19
"BLD",7087,"KRN",19.1,0)
19.1
"BLD",7087,"KRN",101,0)
101
"BLD",7087,"KRN",409.61,0)
409.61
"BLD",7087,"KRN",771,0)
771
"BLD",7087,"KRN",870,0)
870
"BLD",7087,"KRN",8989.51,0)
8989.51
"BLD",7087,"KRN",8989.52,0)
8989.52
"BLD",7087,"KRN",8994,0)
8994
"BLD",7087,"KRN","B",.4,.4)

"BLD",7087,"KRN","B",.401,.401)

"BLD",7087,"KRN","B",.402,.402)

"BLD",7087,"KRN","B",.403,.403)

"BLD",7087,"KRN","B",.5,.5)

"BLD",7087,"KRN","B",.84,.84)

"BLD",7087,"KRN","B",3.6,3.6)

"BLD",7087,"KRN","B",3.8,3.8)

"BLD",7087,"KRN","B",9.2,9.2)

"BLD",7087,"KRN","B",9.8,9.8)

"BLD",7087,"KRN","B",19,19)

"BLD",7087,"KRN","B",19.1,19.1)

"BLD",7087,"KRN","B",101,101)

"BLD",7087,"KRN","B",409.61,409.61)

"BLD",7087,"KRN","B",771,771)

"BLD",7087,"KRN","B",870,870)

"BLD",7087,"KRN","B",8989.51,8989.51)

"BLD",7087,"KRN","B",8989.52,8989.52)

"BLD",7087,"KRN","B",8994,8994)

"BLD",7087,"QUES",0)
^9.62^^
"BLD",7087,"REQB",0)
^9.611^1^1
"BLD",7087,"REQB",1,0)
ECX*3.0*92^2
"BLD",7087,"REQB","B","ECX*3.0*92",1)

"MBREQ")
0
"PKG",535,-1)
1^1
"PKG",535,0)
DSS EXTRACTS^ECX
"PKG",535,20,0)
^9.402P^^
"PKG",535,22,0)
^9.49I^1^1
"PKG",535,22,1,0)
3.0^2971222^3000224^66481
"PKG",535,22,1,"PAH",1,0)
103^3070122
"PKG",535,22,1,"PAH",1,1,0)
^^1^1^3070122
"PKG",535,22,1,"PAH",1,1,1,0)
This patch provides a fix to the IVP DETAIL EXTRACT
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","ECXUTL5")
0^1^B30156456^B30147564
"RTN","ECXUTL5",1,0)
ECXUTL5 ;ALB/JRC - Utilities for DSS Extracts ; 01/18/07 9:04am
"RTN","ECXUTL5",2,0)
 ;;3.0;DSS EXTRACTS;**71,84,92,103**;Dec 22, 1997;Build 1
"RTN","ECXUTL5",3,0)
 ;
"RTN","ECXUTL5",4,0)
REPEAT(CHAR,TIMES) ;REPEAT A STRING
"RTN","ECXUTL5",5,0)
 ;INPUT  : CHAR - Character to repeat
"RTN","ECXUTL5",6,0)
 ;         TIMES - Number of times to repeat CHAR
"RTN","ECXUTL5",7,0)
 ;OUTPUT : s - String of CHAR that is TIMES long
"RTN","ECXUTL5",8,0)
 ;         "" - Error (bad input)
"RTN","ECXUTL5",9,0)
 ;
"RTN","ECXUTL5",10,0)
 ;CHECK INPUT
"RTN","ECXUTL5",11,0)
 Q:($G(CHAR)="") ""
"RTN","ECXUTL5",12,0)
 Q:((+$G(TIMES))=0) ""
"RTN","ECXUTL5",13,0)
 ;RETURN STRING
"RTN","ECXUTL5",14,0)
 Q $TR($J("",TIMES)," ",CHAR)
"RTN","ECXUTL5",15,0)
INSERT(INSTR,OUTSTR,COLUMN,LENGTH) ;INSERT A STRING INTO ANOTHER
"RTN","ECXUTL5",16,0)
 ;INPUT  : INSTR - String to insert
"RTN","ECXUTL5",17,0)
 ;         OUTSTR - String to insert into
"RTN","ECXUTL5",18,0)
 ;         COLUMN - Where to begin insertion (defaults to end of OUTSTR)
"RTN","ECXUTL5",19,0)
 ;         LENGTH - Number of characters to clear from OUTSTR
"RTN","ECXUTL5",20,0)
 ;                  (defaults to length of INSTR)
"RTN","ECXUTL5",21,0)
 ;OUTPUT : s - INSTR will be placed into OUTSTR starting at COLUMN
"RTN","ECXUTL5",22,0)
 ;             using LENGTH characters
"RTN","ECXUTL5",23,0)
 ;         "" - Error (bad input)
"RTN","ECXUTL5",24,0)
 ;
"RTN","ECXUTL5",25,0)
 ;NOTE : This module is based on $$SETSTR^VALM1
"RTN","ECXUTL5",26,0)
 ;
"RTN","ECXUTL5",27,0)
 ;CHECK INPUT
"RTN","ECXUTL5",28,0)
 Q:('$D(INSTR)) ""
"RTN","ECXUTL5",29,0)
 Q:('$D(OUTSTR)) ""
"RTN","ECXUTL5",30,0)
 S:('$D(COLUMN)) COLUMN=$L(OUTSTR)+1
"RTN","ECXUTL5",31,0)
 S:('$D(LENGTH)) LENGTH=$L(INSTR)
"RTN","ECXUTL5",32,0)
 ;DECLARE VARIABLES
"RTN","ECXUTL5",33,0)
 N FRONT,END
"RTN","ECXUTL5",34,0)
 S FRONT=$E((OUTSTR_$J("",COLUMN-1)),1,(COLUMN-1))
"RTN","ECXUTL5",35,0)
 S END=$E(OUTSTR,(COLUMN+LENGTH),$L(OUTSTR))
"RTN","ECXUTL5",36,0)
 ;INSERT STRING
"RTN","ECXUTL5",37,0)
 Q FRONT_$E((INSTR_$J("",LENGTH)),1,LENGTH)_END
"RTN","ECXUTL5",38,0)
TYPE(DFN) ;Determine patient type DBIA #2511
"RTN","ECXUTL5",39,0)
 ;   input 
"RTN","ECXUTL5",40,0)
 ;   DFN = patient ien
"RTN","ECXUTL5",41,0)
 ;
"RTN","ECXUTL5",42,0)
 ;   output
"RTN","ECXUTL5",43,0)
 ;   ECXPTYPE = patient type external value from fle 391
"RTN","ECXUTL5",44,0)
 ;
"RTN","ECXUTL5",45,0)
 ;          AC = ACTIVE DUTY        MI = MILITARY RETIREE
"RTN","ECXUTL5",46,0)
 ;          AL = ALLIED VETERAN     NO = NON-VETERAN (OTHER)
"RTN","ECXUTL5",47,0)
 ;          CO = COLLATERAL         NS = NSC VETERAN
"RTN","ECXUTL5",48,0)
 ;          EM = EMPLOYEE           SC = SC VETERAN
"RTN","ECXUTL5",49,0)
 ;          IN = INELIGIBLE         TR = TRICARE
"RTN","ECXUTL5",50,0)
 ;          return value 0 if no data found, 1 if data found
"RTN","ECXUTL5",51,0)
 ;
"RTN","ECXUTL5",52,0)
 N TYPE,ECXPTYPE
"RTN","ECXUTL5",53,0)
 ;Check input
"RTN","ECXUTL5",54,0)
 Q:'$D(DFN) ""
"RTN","ECXUTL5",55,0)
 S (TYPE,ECXPTYPE)=""
"RTN","ECXUTL5",56,0)
 S TYPE=$G(^DPT(DFN,"TYPE"))
"RTN","ECXUTL5",57,0)
 I 'TYPE Q ECXPTYPE
"RTN","ECXUTL5",58,0)
 S ECXPTYPE=$P($G(^DG(391,TYPE,0)),U,1)
"RTN","ECXUTL5",59,0)
 S ECXPTYPE=$E(ECXPTYPE,1,2)
"RTN","ECXUTL5",60,0)
 Q ECXPTYPE
"RTN","ECXUTL5",61,0)
CVEDT(DFN,DATE) ;Determine patient CV status DBIA #4156
"RTN","ECXUTL5",62,0)
 ;   input
"RTN","ECXUTL5",63,0)
 ;   DFN = patient ien
"RTN","ECXUTL5",64,0)
 ;
"RTN","ECXUTL5",65,0)
 ;   output
"RTN","ECXUTL5",66,0)
 ;   ECXCVE = combat veteran status eligibility
"RTN","ECXUTL5",67,0)
 ;   ECXCVEDT = combat veteran eligibility end date
"RTN","ECXUTL5",68,0)
 ;   ECXCVENC = combat veteran encounter
"RTN","ECXUTL5",69,0)
 ;Initialize variables
"RTN","ECXUTL5",70,0)
 N CVSTAT
"RTN","ECXUTL5",71,0)
 S (CVSTAT,ECXCVE,ECXCVEDT,ECXCVENC)=""
"RTN","ECXUTL5",72,0)
 ;Check input
"RTN","ECXUTL5",73,0)
 Q:'$D(DFN) 0
"RTN","ECXUTL5",74,0)
 ;Call CV API
"RTN","ECXUTL5",75,0)
 S CVSTAT=$$CVEDT^DGCV(DFN,DATE)
"RTN","ECXUTL5",76,0)
 I CVSTAT<1 Q 0
"RTN","ECXUTL5",77,0)
 ;Veteran been given CV eligibility
"RTN","ECXUTL5",78,0)
 S ECXCVE=$S($P(CVSTAT,U,3)=1:"Y",$P(CVSTAT,U,3)=0:"E",1:"")
"RTN","ECXUTL5",79,0)
 ;Save CV eligibility end date and convert from FM to HL7 format
"RTN","ECXUTL5",80,0)
 S ECXCVEDT=$P(CVSTAT,U,2)
"RTN","ECXUTL5",81,0)
 S ECXCVEDT=$$FMTHL7^XLFDT(ECXCVEDT)
"RTN","ECXUTL5",82,0)
 ;Is the veteran eligible for CV in the date of encounter
"RTN","ECXUTL5",83,0)
 S ECXCVENC=$S($P(CVSTAT,U,3)=1:"Y",1:"")
"RTN","ECXUTL5",84,0)
 Q 1
"RTN","ECXUTL5",85,0)
NPRF ;National patient record flags DBIA #3860
"RTN","ECXUTL5",86,0)
 N ECXARR,FLG
"RTN","ECXUTL5",87,0)
 S ECXNPRFI="",CNT=$$GETACT^DGPFAPI(ECXDFN,"ECXARR"),FLG=""
"RTN","ECXUTL5",88,0)
 I 'CNT Q
"RTN","ECXUTL5",89,0)
 F I=1:1:CNT D  Q:FLG
"RTN","ECXUTL5",90,0)
 .I ECXARR(I,"CATEGORY")["NATIONAL" S ECXNPRFI="Y",FLG=1
"RTN","ECXUTL5",91,0)
 Q
"RTN","ECXUTL5",92,0)
RXPTST(K) ;Rx patient status DBIA #2511
"RTN","ECXUTL5",93,0)
 N ECXDIC,STAT
"RTN","ECXUTL5",94,0)
 S (ECXDIC,STAT)=""
"RTN","ECXUTL5",95,0)
 ;Check input
"RTN","ECXUTL5",96,0)
 Q:'$D(K) STAT
"RTN","ECXUTL5",97,0)
 S DA=K,DIC="^PS(53,",DIQ(0)="I",DIQ="ECXDIC",DR="6"
"RTN","ECXUTL5",98,0)
 D EN^DIQ1
"RTN","ECXUTL5",99,0)
 S STAT=$G(ECXDIC(53,K,6,"I"))
"RTN","ECXUTL5",100,0)
 S STAT=$S(STAT=1:"SC",STAT=2:"AA",STAT=3:"OTH",STAT=4:"INP",STAT=5:"NON",1:"")
"RTN","ECXUTL5",101,0)
 Q STAT
"RTN","ECXUTL5",102,0)
NONVAP(K) ;Non-va prescriber DBIA #10060
"RTN","ECXUTL5",103,0)
 N ECXDIC,NONVAP
"RTN","ECXUTL5",104,0)
 S (ECXDIC,NONVAP)=""
"RTN","ECXUTL5",105,0)
 Q:'$D(K) NONVAP
"RTN","ECXUTL5",106,0)
 S DA=K,DIC="^VA(200,",DIQ(0)="I",DIQ="ECXDIC",DR="53.91"
"RTN","ECXUTL5",107,0)
 D EN^DIQ1
"RTN","ECXUTL5",108,0)
 S NONVAP=$G(ECXDIC(200,K,53.91,"I"))
"RTN","ECXUTL5",109,0)
 I NONVAP S NONVAP="Y"
"RTN","ECXUTL5",110,0)
 Q NONVAP
"RTN","ECXUTL5",111,0)
DOIVPO(K,L) ;Add destination for outpatient ivp orders
"RTN","ECXUTL5",112,0)
 ;     Input     K - DFN
"RTN","ECXUTL5",113,0)
 ;               L - Order # from Pharmacy Patient File (#55)
"RTN","ECXUTL5",114,0)
 ;
"RTN","ECXUTL5",115,0)
 ;     Output     ordering stop code
"RTN","ECXUTL5",116,0)
 ;
"RTN","ECXUTL5",117,0)
 N ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE,DIC,DIQ,DR,DA
"RTN","ECXUTL5",118,0)
 S (ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE)=""
"RTN","ECXUTL5",119,0)
 ;Check input
"RTN","ECXUTL5",120,0)
 Q:'K!'(L) SCODE
"RTN","ECXUTL5",121,0)
 ;Check treating specialty
"RTN","ECXUTL5",122,0)
 S SCODE=$$TSSC($G(ECXTS)) I SCODE>0 Q SCODE
"RTN","ECXUTL5",123,0)
 ;Go to pharmacy patient file (#55) and return value of field (#136)
"RTN","ECXUTL5",124,0)
 S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="100",DR(55.01)="136",DA=K,DA(55.01)=L
"RTN","ECXUTL5",125,0)
 D EN^DIQ1
"RTN","ECXUTL5",126,0)
 S CLINIC=$G(ECXDIC(55.01,L,136,"I"))
"RTN","ECXUTL5",127,0)
 I 'CLINIC Q SCODE
"RTN","ECXUTL5",128,0)
 ;Get stop code pointer to file 40.7 from file 44
"RTN","ECXUTL5",129,0)
 S DIC="^SC(",DIQ(0)="I",DIQ="ECXDICA",DR="8",DA=CLINIC D EN^DIQ1
"RTN","ECXUTL5",130,0)
 S SCODE=ECXDICA(44,CLINIC,8,"I")
"RTN","ECXUTL5",131,0)
 ;Get stop code external value
"RTN","ECXUTL5",132,0)
 S DIC="^DIC(40.7,",DIQ(0)="E",DIQ="ECXDICB",DR="1",DA=SCODE D EN^DIQ1
"RTN","ECXUTL5",133,0)
 S SCODE=$G(ECXDICB(40.7,SCODE,1,"E"))
"RTN","ECXUTL5",134,0)
 Q SCODE
"RTN","ECXUTL5",135,0)
 ;
"RTN","ECXUTL5",136,0)
DOUDO(K,L) ;Add destination for outpatient udp orders
"RTN","ECXUTL5",137,0)
 ;     Input     K - DFN
"RTN","ECXUTL5",138,0)
 ;               L - Order # from Pharmacy Patient File (#55)
"RTN","ECXUTL5",139,0)
 ;
"RTN","ECXUTL5",140,0)
 ;     Output     ordering stop code
"RTN","ECXUTL5",141,0)
 ;
"RTN","ECXUTL5",142,0)
 N ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE,DIC,DIQ,DR,DA
"RTN","ECXUTL5",143,0)
 S (ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE)=""
"RTN","ECXUTL5",144,0)
 ;Check treating specialty
"RTN","ECXUTL5",145,0)
 S SCODE=$$TSSC($G(ECXTS)) I SCODE>0 Q SCODE
"RTN","ECXUTL5",146,0)
 ;Check input
"RTN","ECXUTL5",147,0)
 Q:'K!'(L) SCODE
"RTN","ECXUTL5",148,0)
 S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="62",DR(55.06)="130",DA=K,DA(55.06)=L
"RTN","ECXUTL5",149,0)
 D EN^DIQ1
"RTN","ECXUTL5",150,0)
 S CLINIC=$G(ECXDIC(55.06,L,130,"I"))
"RTN","ECXUTL5",151,0)
 I 'CLINIC Q SCODE
"RTN","ECXUTL5",152,0)
 ;Get stop code pointer to file 40.7 from file 44
"RTN","ECXUTL5",153,0)
 S DIC="^SC(",DIQ(0)="I",DIQ="ECXDICA",DR="8",DA=CLINIC D EN^DIQ1
"RTN","ECXUTL5",154,0)
 S SCODE=ECXDICA(44,CLINIC,8,"I")
"RTN","ECXUTL5",155,0)
 ;Get stop code external value
"RTN","ECXUTL5",156,0)
 S DIC="^DIC(40.7,",DIQ(0)="E",DIQ="ECXDICB",DR="1",DA=SCODE D EN^DIQ1
"RTN","ECXUTL5",157,0)
 S SCODE=$G(ECXDICB(40.7,SCODE,1,"E"))
"RTN","ECXUTL5",158,0)
 Q SCODE
"RTN","ECXUTL5",159,0)
 ;
"RTN","ECXUTL5",160,0)
PHAAPI(DRUG) ;Call Pharmacy drug file API dbia 4483
"RTN","ECXUTL5",161,0)
 ;   Input: drug file (#50) ien
"RTN","ECXUTL5",162,0)
 ;
"RTN","ECXUTL5",163,0)
 ;   Output: generic name ^ classification ^ ndc ^ dea hand
"RTN","ECXUTL5",164,0)
 ;            ^ ndf file entry # ^ psndf va product entry ^
"RTN","ECXUTL5",165,0)
 ;            price per disp unit ^ dispense unit
"RTN","ECXUTL5",166,0)
 ;
"RTN","ECXUTL5",167,0)
 ;Initialize variables and scratch global
"RTN","ECXUTL5",168,0)
 N NAME,CLASS,NDC,INV,NDF,P1,P3,PPDU,UNIT,ARRAY,DATA
"RTN","ECXUTL5",169,0)
 S (NAME,CLASS,NDC,INV,NDF,P1,P3,PPDU,ARRAY,DATA)=""
"RTN","ECXUTL5",170,0)
 S ARRAY="^TMP($J,""ECXLIST"")"
"RTN","ECXUTL5",171,0)
 K @ARRAY
"RTN","ECXUTL5",172,0)
 D DATA^PSS50(DRUG,,,,,"ECXLIST")
"RTN","ECXUTL5",173,0)
 I @ARRAY@(0)'>0 Q "^^^^^^"
"RTN","ECXUTL5",174,0)
 S NAME=@ARRAY@(DRUG,.01),CLASS=@ARRAY@(DRUG,2),NDC=@ARRAY@(DRUG,31)
"RTN","ECXUTL5",175,0)
 S INV=@ARRAY@(DRUG,3),P1=$P(@ARRAY@(DRUG,20),U),P3=$P(@ARRAY@(DRUG,22),U),PPDU=@ARRAY@(DRUG,16),UNIT=@ARRAY@(DRUG,14.5)
"RTN","ECXUTL5",176,0)
 K @ARRAY
"RTN","ECXUTL5",177,0)
 Q NAME_U_CLASS_U_NDC_U_INV_U_P1_U_P3_U_PPDU_U_UNIT
"RTN","ECXUTL5",178,0)
 ;
"RTN","ECXUTL5",179,0)
TSSC(X) ;Check treating specialty (ts) and if ts equals any of the following
"RTN","ECXUTL5",180,0)
 ;18,23,24,36,41,65,94 then assign predefined code and return value
"RTN","ECXUTL5",181,0)
 ;
"RTN","ECXUTL5",182,0)
 ;    Input: treating specialty
"RTN","ECXUTL5",183,0)
 ;    Output: Ordering stop code
"RTN","ECXUTL5",184,0)
 ;
"RTN","ECXUTL5",185,0)
 S CODE=$S(X=18:293,X=23:295,X=24:290,X=36:294,X=41:296,X=65:291,X=94:292,1:"")
"RTN","ECXUTL5",186,0)
 Q CODE
"RTN","ECXUTL5",187,0)
 ;
"RTN","ECXUTL5",188,0)
PSJ59P5(X) ;Get iv room division
"RTN","ECXUTL5",189,0)
 ;   Input  X - iv room ien
"RTN","ECXUTL5",190,0)
 ;
"RTN","ECXUTL5",191,0)
 ;   Output - field .02 division
"RTN","ECXUTL5",192,0)
 ;Init variables
"RTN","ECXUTL5",193,0)
 N DIV S DIV=""
"RTN","ECXUTL5",194,0)
 ;Check input
"RTN","ECXUTL5",195,0)
 I 'X  Q DIV
"RTN","ECXUTL5",196,0)
 D ALL^PSJ59P5(X,,"ECXDIV")
"RTN","ECXUTL5",197,0)
 S DIV=$P($G(^TMP($J,"ECXDIV",X,.02)),U)
"RTN","ECXUTL5",198,0)
 K ^TMP($J,"ECXDIV")
"RTN","ECXUTL5",199,0)
 Q DIV
"RTN","ECXUTL5",200,0)
 ;
"RTN","ECXUTL5",201,0)
SCRX(IEN) ;Service connected prescription
"RTN","ECXUTL5",202,0)
 ;Init variables
"RTN","ECXUTL5",203,0)
 N DIC,DR,DA,ECXDIQ
"RTN","ECXUTL5",204,0)
 ;Check input
"RTN","ECXUTL5",205,0)
 I '$G(IEN) Q ""
"RTN","ECXUTL5",206,0)
 S DIC=52,DR="116",DA=IEN,DIQ="ECXDIQ"
"RTN","ECXUTL5",207,0)
 D DIQ^PSODI(DIC,DIC,DR,DA,DIQ)
"RTN","ECXUTL5",208,0)
 Q $S($G(ECXDIQ(52,DA,116))="YES":"Y",$G(ECXDIQ(52,DA,116))="NO":"N",1:"")
"VER")
8.0^22.0
"BLD",7087,6)
^90
**END**
**END**
