KIDS Distribution saved on Dec 27, 2005@12:07:41
SD 394 &IB 318
**KIDS**:SD*5.3*394^IB*2.0*318^

**INSTALL NAME**
SD*5.3*394
"BLD",5967,0)
SD*5.3*394^SCHEDULING^0^3051227^y
"BLD",5967,1,0)
^^2^2^3041216^
"BLD",5967,1,1,0)
This patch addresses the Service Connection Priority assignment and 
"BLD",5967,1,2,0)
verifies priority in a VA Taskman nightly batch job.
"BLD",5967,4,0)
^9.64PA^409.1^2
"BLD",5967,4,409.1,0)
409.1
"BLD",5967,4,409.1,222)
n^n^f^^n^SDP394^y^m^n
"BLD",5967,4,409.3,0)
409.3
"BLD",5967,4,409.3,2,0)
^9.641^409.3^1
"BLD",5967,4,409.3,2,409.3,0)
SD WAIT LIST  (File-top level)
"BLD",5967,4,409.3,2,409.3,1,0)
^9.6411^15^2
"BLD",5967,4,409.3,2,409.3,1,14,0)
SERVICE CONNECTED PERCENTAGE
"BLD",5967,4,409.3,2,409.3,1,15,0)
SERVICE CONNECTED PRIORITY
"BLD",5967,4,409.3,222)
y^n^p^^^^n^^n
"BLD",5967,4,409.3,224)

"BLD",5967,4,"APDD",409.3,409.3)

"BLD",5967,4,"APDD",409.3,409.3,14)

"BLD",5967,4,"APDD",409.3,409.3,15)

"BLD",5967,4,"B",409.1,409.1)

"BLD",5967,4,"B",409.3,409.3)

"BLD",5967,"ABPKG")
n
"BLD",5967,"INID")
^y
"BLD",5967,"INIT")
EN^SDWLP394
"BLD",5967,"KRN",0)
^9.67PA^8989.52^19
"BLD",5967,"KRN",.4,0)
.4
"BLD",5967,"KRN",.4,"NM",0)
^9.68A^^
"BLD",5967,"KRN",.401,0)
.401
"BLD",5967,"KRN",.401,"NM",0)
^9.68A^1^1
"BLD",5967,"KRN",.401,"NM",1,0)
SDP394    FILE #409.1^409.1^0
"BLD",5967,"KRN",.401,"NM","B","SDP394    FILE #409.1",1)

"BLD",5967,"KRN",.402,0)
.402
"BLD",5967,"KRN",.403,0)
.403
"BLD",5967,"KRN",.5,0)
.5
"BLD",5967,"KRN",.84,0)
.84
"BLD",5967,"KRN",3.6,0)
3.6
"BLD",5967,"KRN",3.8,0)
3.8
"BLD",5967,"KRN",3.8,"NM",0)
^9.68A^^0
"BLD",5967,"KRN",9.2,0)
9.2
"BLD",5967,"KRN",9.8,0)
9.8
"BLD",5967,"KRN",9.8,"NM",0)
^9.68A^15^14
"BLD",5967,"KRN",9.8,"NM",1,0)
SDWLQSC^^0^B73044330
"BLD",5967,"KRN",9.8,"NM",2,0)
SDM4^^0^B31128100
"BLD",5967,"KRN",9.8,"NM",3,0)
SDWLE113^^0^B7911045
"BLD",5967,"KRN",9.8,"NM",4,0)
SDWLSC^^0^B8811789
"BLD",5967,"KRN",9.8,"NM",5,0)
SDWLE111^^0^B21954594
"BLD",5967,"KRN",9.8,"NM",6,0)
SDWLRPT1^^0^B43599634
"BLD",5967,"KRN",9.8,"NM",8,0)
SDWLSCPE^^0^B24572837
"BLD",5967,"KRN",9.8,"NM",9,0)
SDWLP394^^0^B9500337
"BLD",5967,"KRN",9.8,"NM",10,0)
SCMSVUT1^^0^B67824096
"BLD",5967,"KRN",9.8,"NM",11,0)
SDWLI^^0^B52231226
"BLD",5967,"KRN",9.8,"NM",12,0)
SDWLPL^^0^B30342220
"BLD",5967,"KRN",9.8,"NM",13,0)
SDWLMSG^^0^B36616948
"BLD",5967,"KRN",9.8,"NM",14,0)
SDCO22^^0^B8621069
"BLD",5967,"KRN",9.8,"NM",15,0)
SDAMVSC^^0^B5938600
"BLD",5967,"KRN",9.8,"NM","B","SCMSVUT1",10)

"BLD",5967,"KRN",9.8,"NM","B","SDAMVSC",15)

"BLD",5967,"KRN",9.8,"NM","B","SDCO22",14)

"BLD",5967,"KRN",9.8,"NM","B","SDM4",2)

"BLD",5967,"KRN",9.8,"NM","B","SDWLE111",5)

"BLD",5967,"KRN",9.8,"NM","B","SDWLE113",3)

"BLD",5967,"KRN",9.8,"NM","B","SDWLI",11)

"BLD",5967,"KRN",9.8,"NM","B","SDWLMSG",13)

"BLD",5967,"KRN",9.8,"NM","B","SDWLP394",9)

"BLD",5967,"KRN",9.8,"NM","B","SDWLPL",12)

"BLD",5967,"KRN",9.8,"NM","B","SDWLQSC",1)

"BLD",5967,"KRN",9.8,"NM","B","SDWLRPT1",6)

"BLD",5967,"KRN",9.8,"NM","B","SDWLSC",4)

"BLD",5967,"KRN",9.8,"NM","B","SDWLSCPE",8)

"BLD",5967,"KRN",19,0)
19
"BLD",5967,"KRN",19,"NM",0)
^9.68A^3^2
"BLD",5967,"KRN",19,"NM",2,0)
SD WAIT LIST SC PRIORITY EDIT^^0
"BLD",5967,"KRN",19,"NM",3,0)
SD EWL BACKGROUND JOB^^0
"BLD",5967,"KRN",19,"NM","B","SD EWL BACKGROUND JOB",3)

"BLD",5967,"KRN",19,"NM","B","SD WAIT LIST SC PRIORITY EDIT",2)

"BLD",5967,"KRN",19.1,0)
19.1
"BLD",5967,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",5967,"KRN",101,0)
101
"BLD",5967,"KRN",101,"NM",0)
^9.68A^1^1
"BLD",5967,"KRN",101,"NM",1,0)
SDAM APPT TYPE VALIDATION^^0
"BLD",5967,"KRN",101,"NM","B","SDAM APPT TYPE VALIDATION",1)

"BLD",5967,"KRN",409.61,0)
409.61
"BLD",5967,"KRN",771,0)
771
"BLD",5967,"KRN",870,0)
870
"BLD",5967,"KRN",8989.51,0)
8989.51
"BLD",5967,"KRN",8989.52,0)
8989.52
"BLD",5967,"KRN",8994,0)
8994
"BLD",5967,"KRN","B",.4,.4)

"BLD",5967,"KRN","B",.401,.401)

"BLD",5967,"KRN","B",.402,.402)

"BLD",5967,"KRN","B",.403,.403)

"BLD",5967,"KRN","B",.5,.5)

"BLD",5967,"KRN","B",.84,.84)

"BLD",5967,"KRN","B",3.6,3.6)

"BLD",5967,"KRN","B",3.8,3.8)

"BLD",5967,"KRN","B",9.2,9.2)

"BLD",5967,"KRN","B",9.8,9.8)

"BLD",5967,"KRN","B",19,19)

"BLD",5967,"KRN","B",19.1,19.1)

"BLD",5967,"KRN","B",101,101)

"BLD",5967,"KRN","B",409.61,409.61)

"BLD",5967,"KRN","B",771,771)

"BLD",5967,"KRN","B",870,870)

"BLD",5967,"KRN","B",8989.51,8989.51)

"BLD",5967,"KRN","B",8989.52,8989.52)

"BLD",5967,"KRN","B",8994,8994)

"BLD",5967,"QUES",0)
^9.62^^
"BLD",5967,"REQB",0)
^9.611^6^6
"BLD",5967,"REQB",1,0)
SD*5.3*263^1
"BLD",5967,"REQB",2,0)
SD*5.3*273^1
"BLD",5967,"REQB",3,0)
SD*5.3*280^1
"BLD",5967,"REQB",4,0)
SD*5.3*327^1
"BLD",5967,"REQB",5,0)
SD*5.3*399^1
"BLD",5967,"REQB",6,0)
SD*5.3*459^1
"BLD",5967,"REQB","B","SD*5.3*263",1)

"BLD",5967,"REQB","B","SD*5.3*273",2)

"BLD",5967,"REQB","B","SD*5.3*280",3)

"BLD",5967,"REQB","B","SD*5.3*327",4)

"BLD",5967,"REQB","B","SD*5.3*399",5)

"BLD",5967,"REQB","B","SD*5.3*459",6)

"DATA",409.1,1,0)
COMPENSATION & PENSION^1^^CP^1
"DATA",409.1,1,1,0)
^409.11^4^4^3040917^^
"DATA",409.1,1,1,1,0)
An exam requested by the local VA Regional Office to determine
"DATA",409.1,1,1,2,0)
the extent of a veteran's disability for either service connected
"DATA",409.1,1,1,3,0)
or non-service connected condition.  Adjudication is performed by
"DATA",409.1,1,1,4,0)
the RO and the Medical Center only conducts requested exam.
"DATA",409.1,2,0)
CLASS II DENTAL^1^^DENTL
"DATA",409.1,2,1,0)
^409.11^1^1^2920211^
"DATA",409.1,2,1,1,0)
A dental examination based on a veteran's service related condition.
"DATA",409.1,3,0)
ORGAN DONORS^1^^ORGAN^1
"DATA",409.1,3,1,0)
^409.11^2^2^2920211^
"DATA",409.1,3,1,1,0)
Exam of a veteran who wishes to be an organ donor to determine if
"DATA",409.1,3,1,2,0)
organ designated will be useable.
"DATA",409.1,4,0)
EMPLOYEE^1^^EMP^1^13
"DATA",409.1,4,1,0)
^409.11^2^2^3050926^^^
"DATA",409.1,4,1,1,0)
A person employed by the Department of Veterans Affairs who applies
"DATA",409.1,4,1,2,0)
or receives medical care/treatment at a VA facility.
"DATA",409.1,5,0)
PRIMA FACIA^1^^PF
"DATA",409.1,5,1,0)
^^3^3^2990401^^^
"DATA",409.1,5,1,1,0)
Dental exam for a first time, a veteran
"DATA",409.1,5,1,2,0)
applying for evaluation/care as authorized prior to termination of
"DATA",409.1,5,1,3,0)
ninety days of discharge from active duty.
"DATA",409.1,6,0)
RESEARCH^1^^RES^1
"DATA",409.1,6,1,0)
^^1^1^2920211^
"DATA",409.1,6,1,1,0)
Exam scheduled in a VA-approved research program.
"DATA",409.1,7,0)
COLLATERAL OF VET.^1^^COV^1^12
"DATA",409.1,7,1,0)
^^2^2^2931129^^
"DATA",409.1,7,1,1,0)
Person receiving instructions on the care of a veteran at home.
"DATA",409.1,7,1,2,0)
Person must be providing care as prescribed by physician.
"DATA",409.1,8,0)
SHARING AGREEMENT^1^^SA^1^9
"DATA",409.1,8,1,0)
^^4^4^2920211^
"DATA",409.1,8,1,1,0)
Appointment being conducted at VA facility due to lack of resources
"DATA",409.1,8,1,2,0)
at nearby military/private facility and exams performed at nearby
"DATA",409.1,8,1,3,0)
military/private facility in turn due to lack of resources at VA
"DATA",409.1,8,1,4,0)
facility.
"DATA",409.1,9,0)
REGULAR^^^REG^1
"DATA",409.1,9,1,0)
^409.11^2^2^3050525^^^^
"DATA",409.1,9,1,1,0)
Regular appointment, no special eligibility or type of care being
"DATA",409.1,9,1,2,0)
provided.  Routine appointment.
"DATA",409.1,10,0)
COMPUTER GENERATED^1^1^CG
"DATA",409.1,10,1,0)
^^2^2^2901020^
"DATA",409.1,10,1,1,0)
This appointment type is used by those packages calling the routine
"DATA",409.1,10,1,2,0)
SDACS to add stop codes and CPT codes to the Scheduling Visit file.
"DATA",409.1,11,0)
SERVICE CONNECTED^^^SC
"DATA",409.1,11,1,0)
^409.11^1^1^3050926^^^^
"DATA",409.1,11,1,1,0)
Used for veterans with a service connected % of 50% and greater, or veterans being seen for a service connected condition.
"FIA",409.1)
APPOINTMENT TYPE
"FIA",409.1,0)
^SD(409.1,
"FIA",409.1,0,0)
409.1
"FIA",409.1,0,1)
n^n^f^^n^SDP394^y^m^n
"FIA",409.1,0,10)

"FIA",409.1,0,11)

"FIA",409.1,0,"RLRO")

"FIA",409.1,0,"VR")
5.3^SD
"FIA",409.1,409.1)
0
"FIA",409.1,409.11)
0
"FIA",409.3)
SD WAIT LIST
"FIA",409.3,0)
^SDWL(409.3,
"FIA",409.3,0,0)
409.3IP
"FIA",409.3,0,1)
y^n^p^^^^n^^n
"FIA",409.3,0,10)

"FIA",409.3,0,11)

"FIA",409.3,0,"RLRO")

"FIA",409.3,0,"VR")
5.3^SD
"FIA",409.3,409.3)
1
"FIA",409.3,409.3,14)

"FIA",409.3,409.3,15)

"INIT")
EN^SDWLP394
"KRN",.401,449447,-1)
0^1
"KRN",.401,449447,0)
SDP394^3041005.1308^@^409.1^^@^3041005
"KRN",.401,449447,"%D",0)
^.4012^1^1^3041005^^
"KRN",.401,449447,"%D",1,0)
Input of new entry for patch SD*5.3*394.
"KRN",.401,449447,"DC",1)
.01^="SERVICE CONNECTED"
"KRN",.401,449447,"DIS",0)
I $$UP^DILIBF($P($G(^SD(409.1,D0,0)),U,1))="SERVICE CONNECTED"
"KRN",.401,449447,"DIS","XFORM",1)
$$UP^DILIBF(;)
"KRN",.401,449447,"DL")
1
"KRN",.401,449447,"DL",0)
^1^
"KRN",.401,449447,"O",0)
^.4011^1^1^3041005^
"KRN",.401,449447,"O",1,0)
NAME EQUALS (case-insensitive) "SERVICE CONNECTED"
"KRN",.401,449447,"QR")
3041005.130952^1
"KRN",19,2920042,-1)
0^3
"KRN",19,2920042,0)
SD EWL BACKGROUND JOB^SD EWL BACKGROUND JOB^^R^^^^^^^^
"KRN",19,2920042,1,0)
^19.06^2^2^3050708^^^^
"KRN",19,2920042,1,1,0)
Displays changes in SD WAIT LIST types using mail group SD EWL BACKGROUND
"KRN",19,2920042,1,2,0)
UPDATE.  
"KRN",19,2920042,25)
EN^SDWLQSC
"KRN",19,2920042,200.9)
y
"KRN",19,2920042,"U")
SD EWL BACKGROUND JOB
"KRN",19,2920043,-1)
0^2
"KRN",19,2920043,0)
SD WAIT LIST SC PRIORITY EDIT^Service Connected Wait List (Sch/PCMM) Edit^^R^^^^^^^^
"KRN",19,2920043,25)
EN^SDWLSCPE
"KRN",19,2920043,"U")
SERVICE CONNECTED WAIT LIST (S
"KRN",101,6963,-1)
0^1
"KRN",101,6963,0)
SDAM APPT TYPE VALIDATION^SDAM APPT TYPE VALIDATION^^A^^^^^^^^
"KRN",101,6963,20)
D EN^SDAMVSC
"KRN",101,6963,99)
60225,39312
"MBREQ")
0
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813^2930930
"PKG",16,22,1,"PAH",1,0)
394^3051227^.5
"PKG",16,22,1,"PAH",1,1,0)
^^2^2^3051227
"PKG",16,22,1,"PAH",1,1,1,0)
This patch addresses the Service Connection Priority assignment and 
"PKG",16,22,1,"PAH",1,1,2,0)
verifies priority in a VA Taskman nightly batch job.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
14
"RTN","SCMSVUT1")
0^10^B67824096
"RTN","SCMSVUT1",1,0)
SCMSVUT1 ;ALB/JLU;validation utility routine;06/19/99 ; 4/30/03 11:58am
"RTN","SCMSVUT1",2,0)
 ;;5.3;Scheduling;**66,143,180,239,247,258,296,295,321,341,387,459,394**;AUG 13,1993
"RTN","SCMSVUT1",3,0)
 ;06/19/99 ACS - Added CPT Modifier API calls to PROCCOD(DATA)
"RTN","SCMSVUT1",4,0)
 ;
"RTN","SCMSVUT1",5,0)
SEGERR(DATA,HLFS) ;
"RTN","SCMSVUT1",6,0)
 ;INPUT DATA - This is a check for the segment errors of null
"RTN","SCMSVUT1",7,0)
 ;      HLFS - The string separator character
"RTN","SCMSVUT1",8,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",9,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",10,0)
 I $L(DATA,HLFS)'>2 Q 0
"RTN","SCMSVUT1",11,0)
 Q 1
"RTN","SCMSVUT1",12,0)
 ;
"RTN","SCMSVUT1",13,0)
DODA(DATA) ;
"RTN","SCMSVUT1",14,0)
 ;INPUT   DATA - The FM date of death.
"RTN","SCMSVUT1",15,0)
 ;
"RTN","SCMSVUT1",16,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",17,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",18,0)
 N %DT,X,Y
"RTN","SCMSVUT1",19,0)
 S %DT="T",%DT(0)="-NOW",X=DATA
"RTN","SCMSVUT1",20,0)
 D ^%DT
"RTN","SCMSVUT1",21,0)
 Q $S(Y=-1:0,1:1)
"RTN","SCMSVUT1",22,0)
 ;
"RTN","SCMSVUT1",23,0)
DODB(DATA,ENCDT) ;
"RTN","SCMSVUT1",24,0)
 ;INPUT   DATA - The FM date of death
"RTN","SCMSVUT1",25,0)
 ;       ENCDT - The FM date of encounter
"RTN","SCMSVUT1",26,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",27,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",28,0)
 N %DT,X,Y
"RTN","SCMSVUT1",29,0)
 S %DT="T",%DT(0)=ENCDT,X=DATA
"RTN","SCMSVUT1",30,0)
 D ^%DT
"RTN","SCMSVUT1",31,0)
 Q $S(Y=-1:0,1:1)
"RTN","SCMSVUT1",32,0)
 ;
"RTN","SCMSVUT1",33,0)
DODL(DATA,ENCDT) ;
"RTN","SCMSVUT1",34,0)
 ;INPUT  DATA - The FM date of death
"RTN","SCMSVUT1",35,0)
 ;      ENCDT - The FM date of the encounter
"RTN","SCMSVUT1",36,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",37,0)
 I '$D(ENCDT) Q 0
"RTN","SCMSVUT1",38,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",39,0)
 I ENCDT<DATA Q 1
"RTN","SCMSVUT1",40,0)
 I ENCDT=DATA Q 1
"RTN","SCMSVUT1",41,0)
 N X1,X2,X
"RTN","SCMSVUT1",42,0)
 S X1=ENCDT,X2=DATA
"RTN","SCMSVUT1",43,0)
 D ^%DTC
"RTN","SCMSVUT1",44,0)
 I X>14 Q 0
"RTN","SCMSVUT1",45,0)
 Q 1
"RTN","SCMSVUT1",46,0)
 ;
"RTN","SCMSVUT1",47,0)
HOME(DATA) ;
"RTN","SCMSVUT1",48,0)
 ;INPUT   DATA - THe homeless indicator to be validated.
"RTN","SCMSVUT1",49,0)
 ;
"RTN","SCMSVUT1",50,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",51,0)
 I DATA'=1,DATA'=0 Q 0
"RTN","SCMSVUT1",52,0)
 Q 1
"RTN","SCMSVUT1",53,0)
 ;
"RTN","SCMSVUT1",54,0)
POW(DATA) ;
"RTN","SCMSVUT1",55,0)
 ;INPUT  DATA - The POW indicatort to be validated.
"RTN","SCMSVUT1",56,0)
 ;
"RTN","SCMSVUT1",57,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",58,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",59,0)
 I DATA'="N",DATA'="U",DATA'="Y" Q 0
"RTN","SCMSVUT1",60,0)
 Q 1
"RTN","SCMSVUT1",61,0)
 ;
"RTN","SCMSVUT1",62,0)
TYPINS(DATA) ;
"RTN","SCMSVUT1",63,0)
 ;INPUT  DATA - Type if insurance indicator to be validated.
"RTN","SCMSVUT1",64,0)
 ;
"RTN","SCMSVUT1",65,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",66,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",67,0)
 I DATA?.A Q 0
"RTN","SCMSVUT1",68,0)
 I DATA>-1,(DATA<13) Q 1
"RTN","SCMSVUT1",69,0)
 Q 0
"RTN","SCMSVUT1",70,0)
 ;
"RTN","SCMSVUT1",71,0)
PATCLSS(DATA) ;
"RTN","SCMSVUT1",72,0)
 ;INPUT  DATA - the patient's class
"RTN","SCMSVUT1",73,0)
 ;
"RTN","SCMSVUT1",74,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",75,0)
 I ("^O^I^")'[("^"_DATA_"^") Q 0
"RTN","SCMSVUT1",76,0)
 Q 1
"RTN","SCMSVUT1",77,0)
 ;
"RTN","SCMSVUT1",78,0)
POV(DATA) ;
"RTN","SCMSVUT1",79,0)
 ;
"RTN","SCMSVUT1",80,0)
 ;INPUT DATA - the purpose of visit.
"RTN","SCMSVUT1",81,0)
 ;SD*5.3*394 - Correction for addition POV.
"RTN","SCMSVUT1",82,0)
 ;
"RTN","SCMSVUT1",83,0)
 N VAR
"RTN","SCMSVUT1",84,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",85,0)
 I $L(DATA)'=4 Q 0
"RTN","SCMSVUT1",86,0)
 I DATA?.A Q 0
"RTN","SCMSVUT1",87,0)
 S VAR=$E(DATA,1,2)
"RTN","SCMSVUT1",88,0)
 I VAR<1!(VAR>4) Q 0
"RTN","SCMSVUT1",89,0)
 S VAR=$E(DATA,3,4)
"RTN","SCMSVUT1",90,0)
 I VAR<1!(VAR=10) Q 0
"RTN","SCMSVUT1",91,0)
 Q 1
"RTN","SCMSVUT1",92,0)
 ;
"RTN","SCMSVUT1",93,0)
COMPGEN(DATA) ;
"RTN","SCMSVUT1",94,0)
 ;INPUT DATA - checking computer generated.
"RTN","SCMSVUT1",95,0)
 ;
"RTN","SCMSVUT1",96,0)
 N VAR
"RTN","SCMSVUT1",97,0)
 S VAR=$E(DATA,3,4)
"RTN","SCMSVUT1",98,0)
 I VAR=10 Q 0
"RTN","SCMSVUT1",99,0)
 Q 1
"RTN","SCMSVUT1",100,0)
 ;
"RTN","SCMSVUT1",101,0)
LOCVIS(DATA) ;
"RTN","SCMSVUT1",102,0)
 ;INPUT DATA - Location of visit
"RTN","SCMSVUT1",103,0)
 ;
"RTN","SCMSVUT1",104,0)
 I DATA'=1,DATA'=6 Q 0
"RTN","SCMSVUT1",105,0)
 Q 1
"RTN","SCMSVUT1",106,0)
 ;
"RTN","SCMSVUT1",107,0)
FACNMBR(DATA) ;
"RTN","SCMSVUT1",108,0)
 ;INPUT DATA - The facility number
"RTN","SCMSVUT1",109,0)
 ;
"RTN","SCMSVUT1",110,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",111,0)
 I DATA'?3N.AN Q 0
"RTN","SCMSVUT1",112,0)
 I '$D(^DIC(4,"D",DATA)) Q 0
"RTN","SCMSVUT1",113,0)
 Q 1
"RTN","SCMSVUT1",114,0)
 ;
"RTN","SCMSVUT1",115,0)
FACACT(DATA,ENCDT,DIV) ;
"RTN","SCMSVUT1",116,0)
 ;INPUT DATA - The active flag of the facility number.
"RTN","SCMSVUT1",117,0)
 ;
"RTN","SCMSVUT1",118,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",119,0)
 I '$D(ENCDT) Q 0
"RTN","SCMSVUT1",120,0)
 I '$D(DIV) Q 0
"RTN","SCMSVUT1",121,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",122,0)
 N SITE
"RTN","SCMSVUT1",123,0)
 I DIV]"" S SITE=$$SITE^VASITE(ENCDT,DIV)
"RTN","SCMSVUT1",124,0)
 I DIV']"" S SITE=$$SITE^VASITE(ENCDT)
"RTN","SCMSVUT1",125,0)
 I DATA'=$P(SITE,U,3) Q 0
"RTN","SCMSVUT1",126,0)
 Q 1
"RTN","SCMSVUT1",127,0)
 ;
"RTN","SCMSVUT1",128,0)
ENCDT(DATA,XMTFLG) ;
"RTN","SCMSVUT1",129,0)
 ;INPUT DATA - The date/time of the encounter
"RTN","SCMSVUT1",130,0)
 ;    XMTFLG - Flag to check $$OKTOXMIT^SCDXFU04(DATA)
"RTN","SCMSVUT1",131,0)
 ;
"RTN","SCMSVUT1",132,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",133,0)
 S XMTFLG=$G(XMTFLG,0)
"RTN","SCMSVUT1",134,0)
 N %DT,X,Y
"RTN","SCMSVUT1",135,0)
 S %DT="T"
"RTN","SCMSVUT1",136,0)
 S X=DATA
"RTN","SCMSVUT1",137,0)
 D ^%DT
"RTN","SCMSVUT1",138,0)
 I Y=-1 Q 0
"RTN","SCMSVUT1",139,0)
 I XMTFLG Q 1
"RTN","SCMSVUT1",140,0)
 N VAR
"RTN","SCMSVUT1",141,0)
 S VAR=$$OKTOXMIT^SCDXFU04(DATA)
"RTN","SCMSVUT1",142,0)
 ;I +VAR=1 Q 1
"RTN","SCMSVUT1",143,0)
 I +VAR<4&(VAR'<0) Q 1  ;SD*5.3*247
"RTN","SCMSVUT1",144,0)
 Q 0
"RTN","SCMSVUT1",145,0)
 ;
"RTN","SCMSVUT1",146,0)
UNIQNMBR(DATA) ;
"RTN","SCMSVUT1",147,0)
 ;INPUT DATA - The unique number from PCE for the encounter
"RTN","SCMSVUT1",148,0)
 ;
"RTN","SCMSVUT1",149,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",150,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",151,0)
 I DATA=-1 Q 0
"RTN","SCMSVUT1",152,0)
 I DATA=0 Q 0
"RTN","SCMSVUT1",153,0)
 Q 1
"RTN","SCMSVUT1",154,0)
 ;
"RTN","SCMSVUT1",155,0)
SEGCHK(DATA,HLFS) ;
"RTN","SCMSVUT1",156,0)
 ;INPUT DATA - The segment to be checked.
"RTN","SCMSVUT1",157,0)
 ;      HLFS - The HL7 field separator
"RTN","SCMSVUT1",158,0)
 ;
"RTN","SCMSVUT1",159,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",160,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",161,0)
 I $L(DATA,HLFS)'>2 Q 0
"RTN","SCMSVUT1",162,0)
 Q 1
"RTN","SCMSVUT1",163,0)
 ;
"RTN","SCMSVUT1",164,0)
SEQNBR(DATA,SEQNBR) ;
"RTN","SCMSVUT1",165,0)
 ;INPUT DATA - The sequence number to be checked.
"RTN","SCMSVUT1",166,0)
 ;     SEQNBR - This is the previous seq number to compare to
"RTN","SCMSVUT1",167,0)
 ;
"RTN","SCMSVUT1",168,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",169,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",170,0)
 I +DATA'=+SEQNBR Q 0
"RTN","SCMSVUT1",171,0)
 S SEQNBR=SEQNBR+1
"RTN","SCMSVUT1",172,0)
 Q 1
"RTN","SCMSVUT1",173,0)
 ;
"RTN","SCMSVUT1",174,0)
DCODMTHD(DATA) ;
"RTN","SCMSVUT1",175,0)
 ;INPUT DATA - This is the coding method to be checked.
"RTN","SCMSVUT1",176,0)
 ;
"RTN","SCMSVUT1",177,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",178,0)
 I DATA'="I9" Q 0
"RTN","SCMSVUT1",179,0)
 Q 1
"RTN","SCMSVUT1",180,0)
 ;
"RTN","SCMSVUT1",181,0)
DIAGCOD(DATA,ENCDT) ;
"RTN","SCMSVUT1",182,0)
 ;INPUT DATA - This is the diagnosis code
"RTN","SCMSVUT1",183,0)
 ;     ENCDT - This is the encounter date
"RTN","SCMSVUT1",184,0)
 ;
"RTN","SCMSVUT1",185,0)
 N VAR
"RTN","SCMSVUT1",186,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",187,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",188,0)
 ;
"RTN","SCMSVUT1",189,0)
 ; CSV - change to use API
"RTN","SCMSVUT1",190,0)
 ;S VAR=$O(^ICD9("BA",DATA_" ",""))
"RTN","SCMSVUT1",191,0)
 ;I 'VAR Q 0
"RTN","SCMSVUT1",192,0)
 ;S VAR=$G(^ICD9(VAR,0))
"RTN","SCMSVUT1",193,0)
 ;I VAR']"" Q 0
"RTN","SCMSVUT1",194,0)
 ;this is the inactive flag
"RTN","SCMSVUT1",195,0)
 ;I $P(VAR,U,9)'=1 Q 1
"RTN","SCMSVUT1",196,0)
 ;S VAR=$P(VAR,U,11)
"RTN","SCMSVUT1",197,0)
 ;N %DT,X,Y
"RTN","SCMSVUT1",198,0)
 ;S %DT="ST",%DT(0)=-VAR,X=ENCDT
"RTN","SCMSVUT1",199,0)
 ;D ^%DT
"RTN","SCMSVUT1",200,0)
 ;Q $S(Y=-1:0,1:1)
"RTN","SCMSVUT1",201,0)
 Q $P($$ICDDX^ICDCODE(DATA,ENCDT),"^",10)
"RTN","SCMSVUT1",202,0)
 ;
"RTN","SCMSVUT1",203,0)
PRIOR(DATA) ;
"RTN","SCMSVUT1",204,0)
 ;INPUT DATA - The priority of the diagnosis found
"RTN","SCMSVUT1",205,0)
 ;
"RTN","SCMSVUT1",206,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",207,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",208,0)
 I DATA=1 Q 1
"RTN","SCMSVUT1",209,0)
 Q 0
"RTN","SCMSVUT1",210,0)
 ;
"RTN","SCMSVUT1",211,0)
ELIGCODM(DATA) ;
"RTN","SCMSVUT1",212,0)
 ;INPUT DATA - The eligibility code
"RTN","SCMSVUT1",213,0)
 ;A CHECK FOR MISSING
"RTN","SCMSVUT1",214,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",215,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",216,0)
 I '$D(^DIC(8.1,DATA,0)) Q 0
"RTN","SCMSVUT1",217,0)
 Q 1
"RTN","SCMSVUT1",218,0)
 ;
"RTN","SCMSVUT1",219,0)
ELIGINCV(DATA) ;
"RTN","SCMSVUT1",220,0)
 ;INPUT DATA - Contains the eligibility code in the first piece and
"RTN","SCMSVUT1",221,0)
 ;the veteran status in the second.
"RTN","SCMSVUT1",222,0)
 ;
"RTN","SCMSVUT1",223,0)
 ;the following quit is to stop this edit check.
"RTN","SCMSVUT1",224,0)
 ;Per Austin 9/97 this is not needed.
"RTN","SCMSVUT1",225,0)
 Q 1
"RTN","SCMSVUT1",226,0)
 N VET,ELIG
"RTN","SCMSVUT1",227,0)
 S VET=$P(DATA,U,2)
"RTN","SCMSVUT1",228,0)
 S ELIG=$P(DATA,U,1)
"RTN","SCMSVUT1",229,0)
 I VET=1&((ELIG<1)!(ELIG>18)) Q 0
"RTN","SCMSVUT1",230,0)
 I VET=1,ELIG>5,ELIG<15 Q 0
"RTN","SCMSVUT1",231,0)
 I VET=0,ELIG<6 Q 0
"RTN","SCMSVUT1",232,0)
 I VET=0,ELIG=11 Q 0
"RTN","SCMSVUT1",233,0)
 I VET=0,ELIG>14,ELIG'=19 Q 0
"RTN","SCMSVUT1",234,0)
 Q 1
"RTN","SCMSVUT1",235,0)
 ;
"RTN","SCMSVUT1",236,0)
ELIGINCS(DATA) ;
"RTN","SCMSVUT1",237,0)
 ;INPUT DATA - Eligibility code
"RTN","SCMSVUT1",238,0)
 ;
"RTN","SCMSVUT1",239,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",240,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",241,0)
 I '$D(^DIC(8.1,DATA,0)) Q 0
"RTN","SCMSVUT1",242,0)
 I +$P(^DIC(8.1,DATA,0),U,7) Q 0
"RTN","SCMSVUT1",243,0)
 Q 1
"RTN","SCMSVUT1",244,0)
 ;
"RTN","SCMSVUT1",245,0)
VETSTAT(DATA) ;
"RTN","SCMSVUT1",246,0)
 ;INPUT DATA - The veteran status indicator
"RTN","SCMSVUT1",247,0)
 ;
"RTN","SCMSVUT1",248,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",249,0)
 I DATA'=0,DATA'=1 Q 0
"RTN","SCMSVUT1",250,0)
 Q 1
"RTN","SCMSVUT1",251,0)
 ;
"RTN","SCMSVUT1",252,0)
VETPOW(DATA,DFN) ;
"RTN","SCMSVUT1",253,0)
 ;INPUT DATA - veteran status to check with POW status.
"RTN","SCMSVUT1",254,0)
 ;       DFN - The DFN of the patient.
"RTN","SCMSVUT1",255,0)
 ;
"RTN","SCMSVUT1",256,0)
 N VAR,POW
"RTN","SCMSVUT1",257,0)
 I DATA=0 Q 1
"RTN","SCMSVUT1",258,0)
 S VAR=$G(^DPT(DFN,.52))
"RTN","SCMSVUT1",259,0)
 S POW=$S(VAR]"":$P(VAR,U,5),1:VAR)
"RTN","SCMSVUT1",260,0)
 I POW="" Q 1
"RTN","SCMSVUT1",261,0)
 I POW="Y"!(POW="N")!(POW="U") Q 1
"RTN","SCMSVUT1",262,0)
 Q 0
"RTN","SCMSVUT1",263,0)
 ;
"RTN","SCMSVUT1",264,0)
NMBRDEP(DATA) ;
"RTN","SCMSVUT1",265,0)
 ;INPUT DATA - the number of dependents
"RTN","SCMSVUT1",266,0)
 ;
"RTN","SCMSVUT1",267,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",268,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",269,0)
 I DATA="XX" Q 1
"RTN","SCMSVUT1",270,0)
 I DATA'?1.2N Q 0
"RTN","SCMSVUT1",271,0)
 I +DATA>99!(+DATA<0) Q 0
"RTN","SCMSVUT1",272,0)
 Q 1
"RTN","SCMSVUT1",273,0)
 ;
"RTN","SCMSVUT1",274,0)
PATINC(DATA) ;
"RTN","SCMSVUT1",275,0)
 ;INPUT DATA - The patient's income
"RTN","SCMSVUT1",276,0)
 ;
"RTN","SCMSVUT1",277,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",278,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",279,0)
 I DATA<0 Q 0
"RTN","SCMSVUT1",280,0)
 I DATA'?.N.1".".N Q 0
"RTN","SCMSVUT1",281,0)
 Q 1
"RTN","SCMSVUT1",282,0)
 ;
"RTN","SCMSVUT1",283,0)
MEANSTST(DATA) ;
"RTN","SCMSVUT1",284,0)
 ;INPUT DATA - The means test indicator
"RTN","SCMSVUT1",285,0)
 ;
"RTN","SCMSVUT1",286,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",287,0)
 S DATA=","_DATA_","
"RTN","SCMSVUT1",288,0)
 ; ** SD*296, added 'U' means test indicator to allowed list.
"RTN","SCMSVUT1",289,0)
 I ",AS,AN,N,X,C,G,U,"'[DATA Q 0
"RTN","SCMSVUT1",290,0)
 Q 1
"RTN","SCMSVUT1",291,0)
 ;
"RTN","SCMSVUT1",292,0)
DEPMEANS(DATA) ;
"RTN","SCMSVUT1",293,0)
 ;INPUT DATA - This variable contains the number of dependents in the
"RTN","SCMSVUT1",294,0)
 ;             first peice and the means test indicator in the second.
"RTN","SCMSVUT1",295,0)
 ;
"RTN","SCMSVUT1",296,0)
 N MT,DEP
"RTN","SCMSVUT1",297,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",298,0)
 S DEP=$P(DATA,U,1)
"RTN","SCMSVUT1",299,0)
 S MT=","_$P(DATA,U,2)_","
"RTN","SCMSVUT1",300,0)
 I DEP="XX",(",AS,N,X,U,"'[MT) Q 0
"RTN","SCMSVUT1",301,0)
 Q 1
"RTN","SCMSVUT1",302,0)
 ;
"RTN","SCMSVUT1",303,0)
CLASSQUE(DATA) ;
"RTN","SCMSVUT1",304,0)
 ;INPUT DATA - Classification question value.
"RTN","SCMSVUT1",305,0)
 ;
"RTN","SCMSVUT1",306,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",307,0)
 I DATA'=1,DATA'=0,DATA'="" Q 0
"RTN","SCMSVUT1",308,0)
 Q 1
"RTN","SCMSVUT1",309,0)
 ;
"RTN","SCMSVUT1",310,0)
CLAQUETY(DATA) ;
"RTN","SCMSVUT1",311,0)
 ;INPUT DATA - Outpatient classification type to be checked.
"RTN","SCMSVUT1",312,0)
 ;
"RTN","SCMSVUT1",313,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",314,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",315,0)
 I '$D(^SD(409.41,DATA,0)) Q 0
"RTN","SCMSVUT1",316,0)
 Q 1
"RTN","SCMSVUT1",317,0)
 ;
"RTN","SCMSVUT1",318,0)
CLAVET(DATA,DFN,TYPE,ENCPTR) ; SD*5.3*341 added parameter ENCPTR
"RTN","SCMSVUT1",319,0)
 ;INPUT DATA - Classification question information to compare to VET
"RTN","SCMSVUT1",320,0)
 ;             status
"RTN","SCMSVUT1",321,0)
 ;       DFN - The patient to compare this info to.
"RTN","SCMSVUT1",322,0)
 ;      TYPE - The classification type.
"RTN","SCMSVUT1",323,0)
 ;    ENCPTR - Pointer to Outpatient Encounter
"RTN","SCMSVUT1",324,0)
 ;
"RTN","SCMSVUT1",325,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",326,0)
 I '$D(DFN) Q 0
"RTN","SCMSVUT1",327,0)
 I '$D(TYPE) Q 0  ; SD*5.3*341
"RTN","SCMSVUT1",328,0)
 N VET,SDELG0,SDDT  ; SD*5.3*341 added 2 new variables
"RTN","SCMSVUT1",329,0)
 S ENCPTR=$G(ENCPTR)  ; SD*5.3*341 added this plus next 3 lines
"RTN","SCMSVUT1",330,0)
 S SDDT=+$G(^SCE(ENCPTR,0)) S:'SDDT SDDT=$$DT^XLFDT()
"RTN","SCMSVUT1",331,0)
 S SDELG0=$$EL^SDCO22(DFN,ENCPTR)
"RTN","SCMSVUT1",332,0)
 S VET=$P(SDELG0,U,5)
"RTN","SCMSVUT1",333,0)
 I VET="Y",DATA'=1,DATA'=0,DATA'="" Q 0
"RTN","SCMSVUT1",334,0)
 ;This edit check is per a mail message from austin
"RTN","SCMSVUT1",335,0)
 I TYPE=4,VET'="Y",DATA'="","^A^B^C^D^"'[("^"_($P($G(^DIC(21,+$P($G(^DPT(DFN,.32)),"^",3),0)),"^",3))_"^") Q 0
"RTN","SCMSVUT1",336,0)
 I VET'="Y",DATA'="" Q $$SCR^SDCO21(TYPE,DFN,SDDT,ENCPTR)  ; SD*5.3*341
"RTN","SCMSVUT1",337,0)
 Q 1
"RTN","SCMSVUT1",338,0)
 ;
"RTN","SCMSVUT1",339,0)
STPCOD(DATA) ;
"RTN","SCMSVUT1",340,0)
 ;INPUT DATA - stop code data to be checked
"RTN","SCMSVUT1",341,0)
 ;
"RTN","SCMSVUT1",342,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",343,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",344,0)
 I '$D(^DIC(40.7,"C",DATA)) Q 0
"RTN","SCMSVUT1",345,0)
 Q 1
"RTN","SCMSVUT1",346,0)
 ;
"RTN","SCMSVUT1",347,0)
ACTSTP(DATA,ENCDT) ;
"RTN","SCMSVUT1",348,0)
 ;INPUT  DATA - IEN of the stop code to be checked.
"RTN","SCMSVUT1",349,0)
 ;      ENCDT - the encounter date in question
"RTN","SCMSVUT1",350,0)
 ;
"RTN","SCMSVUT1",351,0)
 N STPCOD,%DT,X,Y
"RTN","SCMSVUT1",352,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",353,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",354,0)
 S STPCOD=$G(^DIC(40.7,DATA,0))
"RTN","SCMSVUT1",355,0)
 I STPCOD="" Q 0
"RTN","SCMSVUT1",356,0)
 I '$P(STPCOD,U,3) Q 1
"RTN","SCMSVUT1",357,0)
 S %DT(0)="-"_$P(STPCOD,U,3),%DT="T",X=ENCDT
"RTN","SCMSVUT1",358,0)
 D ^%DT
"RTN","SCMSVUT1",359,0)
 Q $S(Y=-1:0,1:1)
"RTN","SCMSVUT1",360,0)
 ;
"RTN","SCMSVUT1",361,0)
SERCON(DATA) ;
"RTN","SCMSVUT1",362,0)
 ;INPUT DATA - Service connection to be checked, missing or invalid
"RTN","SCMSVUT1",363,0)
 ;
"RTN","SCMSVUT1",364,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",365,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",366,0)
 I DATA'=1,DATA'=0 Q 0
"RTN","SCMSVUT1",367,0)
 Q 1
"RTN","SCMSVUT1",368,0)
 ;
"RTN","SCMSVUT1",369,0)
SCPER(DATA) ;
"RTN","SCMSVUT1",370,0)
 ;INPUT DATA - Service connected % to be tested
"RTN","SCMSVUT1",371,0)
 ;
"RTN","SCMSVUT1",372,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",373,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",374,0)
 I DATA'?.N.1".".N Q 0
"RTN","SCMSVUT1",375,0)
 Q 1
"RTN","SCMSVUT1",376,0)
 ;
"RTN","SCMSVUT1",377,0)
PRDSER(DATA) ;
"RTN","SCMSVUT1",378,0)
 ;INPUT DATA - period of service to be tested.
"RTN","SCMSVUT1",379,0)
 ;
"RTN","SCMSVUT1",380,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",381,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",382,0)
 I '$D(^DIC(21,"D",DATA)) Q 0
"RTN","SCMSVUT1",383,0)
 Q 1
"RTN","SCMSVUT1",384,0)
 ;
"RTN","SCMSVUT1",385,0)
VIETSER1(DATA) ;
"RTN","SCMSVUT1",386,0)
 ;INPUT DATA - Vietnam service to be checked
"RTN","SCMSVUT1",387,0)
 ;
"RTN","SCMSVUT1",388,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",389,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",390,0)
 I DATA'="Y",DATA'="N",DATA'="U" Q 0
"RTN","SCMSVUT1",391,0)
 Q 1
"RTN","SCMSVUT1",392,0)
 ;
"RTN","SCMSVUT1",393,0)
VIETSER2(DATA,DFN) ;
"RTN","SCMSVUT1",394,0)
 ;INPUT DATA - Vietnam service to be checked against vet status
"RTN","SCMSVUT1",395,0)
 ;
"RTN","SCMSVUT1",396,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",397,0)
 N VAR
"RTN","SCMSVUT1",398,0)
 S VAR=$G(^DPT(DFN,"VET"))
"RTN","SCMSVUT1",399,0)
 I DATA="",VAR'="Y" Q 1
"RTN","SCMSVUT1",400,0)
 I (DATA="Y"!(DATA="N")!(DATA="U")),VAR="Y" Q 1
"RTN","SCMSVUT1",401,0)
 Q 0
"RTN","SCMSVUT1",402,0)
 ;
"RTN","SCMSVUT1",403,0)
ACTPRD(DATA) ;
"RTN","SCMSVUT1",404,0)
 ;INPUT DATA - period of serivce indicator to be check to ensure active
"RTN","SCMSVUT1",405,0)
 ;
"RTN","SCMSVUT1",406,0)
 N VAR
"RTN","SCMSVUT1",407,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",408,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",409,0)
 S VAR=+$O(^DIC(21,"D",DATA,0))
"RTN","SCMSVUT1",410,0)
 S VAR=$P($G(^DIC(21,VAR,0)),U,8)
"RTN","SCMSVUT1",411,0)
 I VAR Q 0
"RTN","SCMSVUT1",412,0)
 Q 1
"RTN","SCMSVUT1",413,0)
 ;
"RTN","SCMSVUT1",414,0)
PCODMTHD(DATA) ;
"RTN","SCMSVUT1",415,0)
 ;INPUT DATA - The coding method to be checked.
"RTN","SCMSVUT1",416,0)
 ;
"RTN","SCMSVUT1",417,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",418,0)
 I DATA'="C4" Q 0
"RTN","SCMSVUT1",419,0)
 Q 1
"RTN","SCMSVUT1",420,0)
 ;
"RTN","SCMSVUT1",421,0)
PROCCOD(DATA,ENCDT) ;
"RTN","SCMSVUT1",422,0)
 ;INPUT DATA - The procedure code to be checked.
"RTN","SCMSVUT1",423,0)
 ;This call makes the assumption that leading zeros are intact in the 
"RTN","SCMSVUT1",424,0)
 ;input.
"RTN","SCMSVUT1",425,0)
 ;
"RTN","SCMSVUT1",426,0)
 N VAR
"RTN","SCMSVUT1",427,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",428,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",429,0)
 ;S VAR=+$O(^ICPT("B",DATA,""))
"RTN","SCMSVUT1",430,0)
 ;I '$D(^ICPT(VAR,0)) Q 0
"RTN","SCMSVUT1",431,0)
 ;
"RTN","SCMSVUT1",432,0)
 ; CSV - pass encounter date to API
"RTN","SCMSVUT1",433,0)
 ;I $$CPT^ICPTCOD(DATA,,1)'>0 Q 0
"RTN","SCMSVUT1",434,0)
 I $$CPT^ICPTCOD(DATA,ENCDT,1)'>0 Q 0
"RTN","SCMSVUT1",435,0)
 Q 1
"RTN","SCMSVUT1",436,0)
 ;
"RTN","SCMSVUT1",437,0)
PROVCLS(DATA) ;
"RTN","SCMSVUT1",438,0)
 ;INPUT DATA - The practitioner class to be checked.
"RTN","SCMSVUT1",439,0)
 ;
"RTN","SCMSVUT1",440,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",441,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",442,0)
 I $$CODE2TXT^XUA4A72(DATA)']"" Q 0
"RTN","SCMSVUT1",443,0)
 Q 1
"RTN","SCMSVUT1",444,0)
 ;
"RTN","SCMSVUT1",445,0)
ERI(DATA) ;
"RTN","SCMSVUT1",446,0)
 ;INPUT  DATA - The Emergency Response indicator to be validated.
"RTN","SCMSVUT1",447,0)
 ;
"RTN","SCMSVUT1",448,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",449,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",450,0)
 I DATA'="K" Q 0
"RTN","SCMSVUT1",451,0)
 Q 1
"RTN","SCMSVUT1",452,0)
 ;
"RTN","SDAMVSC")
0^15^B5938600
"RTN","SDAMVSC",1,0)
SDAMVSC ;;OIFO-BAY PINES/TEH - Appt Event Driver Utilities-Validate SC Appt type ; 12/1/91 [ 09/19/96  1:39 PM ]
"RTN","SDAMVSC",2,0)
 ;;5.3;Scheduling;**394**;Aug 13, 1993
"RTN","SDAMVSC",3,0)
 ;
"RTN","SDAMVSC",4,0)
 ;***************************************************************************************************************************
"RTN","SDAMVSC",5,0)
 ;
"RTN","SDAMVSC",6,0)
 ;                                                   ***** NOTE *****
"RTN","SDAMVSC",7,0)
 ;                                                   
"RTN","SDAMVSC",8,0)
 ;This software was created to be used with the SCHEDULING V5.3 appointment management package. The SRA API (SDAMA301)
"RTN","SDAMVSC",9,0)
 ;was employed to retrieve data from the PATIENT APPOINTMENT file (2.98) due inpart to VA Fileman non-compliance.
"RTN","SDAMVSC",10,0)
 ;
"RTN","SDAMVSC",11,0)
 ;DBIA #4433 SUBSCRIPTION 
"RTN","SDAMVSC",12,0)
 ;
"RTN","SDAMVSC",13,0)
 ;Entry Point EN. This routine requires the OUTPATIENT ENOUNTER IEN (variable SDOE)
"RTN","SDAMVSC",14,0)
 ;
"RTN","SDAMVSC",15,0)
 ;GLOBALS: ^SCE(IEN,0) (#.1) APPOINTMENT TYPE [10P:409.1]
"RTN","SDAMVSC",16,0)
 ;         ^DPT(IEN,"S",DATE,0)  ^ (#9.5) APPOINTMENT TYPE [16P:409.1]
"RTN","SDAMVSC",17,0)
 ;         ^SD(409.41,0)=OUTPATIENT CLASSIFCATION TYPE "Was treatment for SC Condition? " QUESTION FOR CHECKOUT.
"RTN","SDAMVSC",18,0)
 ;
"RTN","SDAMVSC",19,0)
 ;PROTOCOLS: This routine is called from the SDAM APPOINTMENT EVENTS.
"RTN","SDAMVSC",20,0)
 ;         
"RTN","SDAMVSC",21,0)
 ;This validates that both the OUTPATIENT ENCOUNTER and the PATIENT SCHEDULING NODES for APPOINTMENT TYPE are (pointer to
"RTN","SDAMVSC",22,0)
 ;409.1 APPOINTMENT TYPE) are set to the "SERVICE CONNECTED" appointment type when the response to the CLASSIFICATION TYPE
"RTN","SDAMVSC",23,0)
 ;"Was treatment for SC Condition?" question is answered "YES". If the question is answered "NO" and the APPOINTMENT TYPE
"RTN","SDAMVSC",24,0)
 ;is SERVICE CONNECTED, then the APPOINTMENT TYPE is reverted to REGULAR.
"RTN","SDAMVSC",25,0)
 ;
"RTN","SDAMVSC",26,0)
 ;
"RTN","SDAMVSC",27,0)
 ;****************************************************************************************************************************
"RTN","SDAMVSC",28,0)
 Q
"RTN","SDAMVSC",29,0)
EN ;Entry Point
"RTN","SDAMVSC",30,0)
 G END:'$D(SDOE),END:'$G(SDOE),END:SDOE=""
"RTN","SDAMVSC",31,0)
 N SDVSCL,SDVSTD,SDAPDF,SDDPTYP,SDOED,SDVSTD,SDVDPTD,SDVSCD,SDSCV,SDAPPTY,SDAPDT,SDDFN,SDVSTD,SDIENS,SDARRAY,SDAPDF
"RTN","SDAMVSC",32,0)
 S SDOED=$G(^SCE(SDOE,0)) G END:SDOED=""
"RTN","SDAMVSC",33,0)
 S SDDFN=$P(SDOED,U,2),SDAPDT=$P(SDOED,U) I '$D(^DPT(SDDFN,"S",SDAPDT,0)) Q
"RTN","SDAMVSC",34,0)
 S SDVSCL=$P(SDOED,U,4)
"RTN","SDAMVSC",35,0)
 S SDVSTD=$P(SDOED,U,5),SDSCV=$$GET1^DIQ(9000010,SDVSTD_",",80001,"I")
"RTN","SDAMVSC",36,0)
 S SDAPDF=$$GET1^DIQ(44,SDVSCL_",",2507,"I")
"RTN","SDAMVSC",37,0)
 S SDAPPTY=$S(SDSCV=1:11,SDAPDF'="":SDAPDF,1:9) D
"RTN","SDAMVSC",38,0)
 .;Set FDA for SCE(ien,0) OUTPATIENT ENCOUNTER
"RTN","SDAMVSC",39,0)
 .S SDIENS=SDOE_"," K ^TMP("SDAMSCE",$J)
"RTN","SDAMVSC",40,0)
 .D FDA^DILF(409.68,SDIENS,.1,,SDAPPTY,"^TMP(""SDAMSCE"",$J)","^TMP(""SDAMSCE"",$J)")
"RTN","SDAMVSC",41,0)
 .I $D(^TMP("SDAMSCE",$J,"DIERR")) D
"RTN","SDAMVSC",42,0)
 ..W !,"Processing Error ",^TMP("SDAMSCE",$J,"DIERR",1) Q
"RTN","SDAMVSC",43,0)
 .D FILE^DIE(,"^TMP(""SDAMSCE"",$J)","^TMP(""SDAMSCE"",$J)")
"RTN","SDAMVSC",44,0)
 .;Set FDA for ^DPT(ien,"S") PATIENT APPOINTMENT.
"RTN","SDAMVSC",45,0)
 .K ^TMP($J,"SDAMA301")
"RTN","SDAMVSC",46,0)
 .N SDAMVSCX S SDARRAY(1)=SDAPDT_";"_SDAPDT,SDARRAY(4)=SDDFN,SDARRAY("FLDS")=10,SDAMVSCX=$$SDAPI^SDAMA301(.SDARRAY)
"RTN","SDAMVSC",47,0)
 .I 'SDAMVSCX D  Q
"RTN","SDAMVSC",48,0)
 ..W !,"Processing Error "
"RTN","SDAMVSC",49,0)
 .S SDDPTYP=+$P($G(^TMP($J,"SDAMA301",SDDFN,SDVSCL,SDAPDT)),U,10) I SDDPTYP'=SDAPPTY D
"RTN","SDAMVSC",50,0)
 ..S $P(^DPT(SDDFN,"S",SDAPDT,0),U,16)=SDAPPTY
"RTN","SDAMVSC",51,0)
END Q
"RTN","SDCO22")
0^14^B8621069
"RTN","SDCO22",1,0)
SDCO22 ;ALB/RMO/MRY - Classification Cont. - Screen - Check Out;21 JUL 2000  11:15 PM ; 8/30/01 11:19am [6/28/05 2:02pm]
"RTN","SDCO22",2,0)
 ;;5.3;Scheduling;**150,222,244,325,394**;Aug 13, 1993
"RTN","SDCO22",3,0)
 ;
"RTN","SDCO22",4,0)
AO(DFN,SDOE) ;Ask Agent Orange Exposure Classification
"RTN","SDCO22",5,0)
 ; Input  -- DFN      Patient file IEN
"RTN","SDCO22",6,0)
 ;           SDOE     Outpatient Encounter file IEN  [Optional]
"RTN","SDCO22",7,0)
 ; Output -- 1=Yes and 0=No
"RTN","SDCO22",8,0)
 N SDELG0,Y
"RTN","SDCO22",9,0)
 I $P($G(^DPT(DFN,.321)),"^",2)'="Y" G AOQ
"RTN","SDCO22",10,0)
 S SDELG0=$$EL(DFN,$G(SDOE))
"RTN","SDCO22",11,0)
 I $P(SDELG0,"^",5)="Y","^1^2^3^4^5^"[("^"_$P(SDELG0,"^",4)_"^") S Y=1
"RTN","SDCO22",12,0)
 I $G(Y),$G(SDOE) D
"RTN","SDCO22",13,0)
 .I '$$AP(SDOE,1) S Y=0 Q
"RTN","SDCO22",14,0)
 .I $P(SDELG0,"^",4)=3!($P(SDELG0,"^",4)=1),$P($G(^SDD(409.42,+$O(^SDD(409.42,"AO",+SDOE,3,0)),0)),"^",3) S Y=0
"RTN","SDCO22",15,0)
AOQ Q +$G(Y)
"RTN","SDCO22",16,0)
 ;
"RTN","SDCO22",17,0)
IR(DFN,SDOE) ;Ask Ionizing Radiation Exposure Classification
"RTN","SDCO22",18,0)
 ; Input  -- DFN      Patient file IEN
"RTN","SDCO22",19,0)
 ;           SDOE     Outpatient Encounter file IEN  [Optional]
"RTN","SDCO22",20,0)
 ; Output -- 1=Yes and 0=No
"RTN","SDCO22",21,0)
 N SDELG0,Y
"RTN","SDCO22",22,0)
 I $P($G(^DPT(DFN,.321)),"^",3)'="Y" G IRQ
"RTN","SDCO22",23,0)
 S SDELG0=$$EL(DFN,$G(SDOE))
"RTN","SDCO22",24,0)
 I $P(SDELG0,"^",5)="Y","^1^2^3^4^5^"[("^"_$P(SDELG0,"^",4)_"^") S Y=1
"RTN","SDCO22",25,0)
 I $G(Y),$G(SDOE) D
"RTN","SDCO22",26,0)
 .I '$$AP(SDOE,2) S Y=0 Q
"RTN","SDCO22",27,0)
 .I $P(SDELG0,"^",4)=3!($P(SDELG0,"^",4)=1),$P($G(^SDD(409.42,+$O(^SDD(409.42,"AO",+SDOE,3,0)),0)),"^",3) S Y=0
"RTN","SDCO22",28,0)
IRQ Q +$G(Y)
"RTN","SDCO22",29,0)
 ;
"RTN","SDCO22",30,0)
SC(DFN,SDOE) ;Ask Service Connected Condition Classification
"RTN","SDCO22",31,0)
 ; Input  -- DFN      Patient file IEN
"RTN","SDCO22",32,0)
 ;           SDOE     Outpatient Encounter file IEN  [Optional]
"RTN","SDCO22",33,0)
 ; Output -- 1=Yes and 0=No
"RTN","SDCO22",34,0)
 N SDELG0,Y
"RTN","SDCO22",35,0)
 S SDELG0=$$EL(DFN,$G(SDOE))
"RTN","SDCO22",36,0)
 I $P(SDELG0,"^",5)="Y","^1^3^"[("^"_$P(SDELG0,"^",4)_"^") S Y=1
"RTN","SDCO22",37,0)
 I $G(Y),$G(SDOE) D
"RTN","SDCO22",38,0)
 .I '$$AP(SDOE,3) S Y=0 Q
"RTN","SDCO22",39,0)
SCQ Q +$G(Y)
"RTN","SDCO22",40,0)
 ;
"RTN","SDCO22",41,0)
EC(DFN,SDOE) ;Ask Environmental Contaminant Exposure Classification
"RTN","SDCO22",42,0)
 ; Input  -- DFN      Patient file IEN
"RTN","SDCO22",43,0)
 ;           SDOE     Outpatient Encounter file IEN  [Optional]
"RTN","SDCO22",44,0)
 ; Output -- 1=Yes and 0=No
"RTN","SDCO22",45,0)
 N SDELG0,Y
"RTN","SDCO22",46,0)
 S SDELG0=$$EL(DFN,$G(SDOE))
"RTN","SDCO22",47,0)
 I $P($G(^DPT(DFN,.322)),"^",13)'="Y" D  G ECQ
"RTN","SDCO22",48,0)
 .I $P(SDELG0,"^",5)="N","^4^"[("^"_$P(SDELG0,"^",4)_"^"),"^A^B^C^D^6^"[("^"_($P($G(^DIC(21,+$P($G(^DPT(DFN,.32)),"^",3),0)),"^",3))_"^") S Y=1
"RTN","SDCO22",49,0)
 I $P(SDELG0,"^",5)="Y","^1^2^3^4^5^"[("^"_$P(SDELG0,"^",4)_"^") S Y=1
"RTN","SDCO22",50,0)
 I $G(Y),$G(SDOE) D
"RTN","SDCO22",51,0)
 .I '$$AP(SDOE,4) S Y=0 Q
"RTN","SDCO22",52,0)
 .I $P(SDELG0,"^",4)=3!($P(SDELG0,"^",4)=1),$P($G(^SDD(409.42,+$O(^SDD(409.42,"AO",+SDOE,3,0)),0)),"^",3) S Y=0
"RTN","SDCO22",53,0)
ECQ Q +$G(Y)
"RTN","SDCO22",54,0)
 ;
"RTN","SDCO22",55,0)
EL(DFN,SDOE) ;Eligibility
"RTN","SDCO22",56,0)
 Q $G(^DIC(8.1,+$P($G(^DIC(8,+$S($P($G(^SCE(+$G(SDOE),0)),"^",13):+$P(^(0),"^",13),1:+$G(^DPT(DFN,.36))),0)),"^",9),0))
"RTN","SDCO22",57,0)
 ;
"RTN","SDCO22",58,0)
AP(SDOE,SDCTI) ;Classification Appointment Type Screen
"RTN","SDCO22",59,0)
 N SDAPTY,Y
"RTN","SDCO22",60,0)
 S SDAPTY=+$P($G(^SCE(+SDOE,0)),"^",10)
"RTN","SDCO22",61,0)
 I SDAPTY=9 S Y=1
"RTN","SDCO22",62,0)
 I SDAPTY=11 S Y=1
"RTN","SDCO22",63,0)
 I SDAPTY=2,SDCTI=3 S Y=1
"RTN","SDCO22",64,0)
APQ Q +$G(Y)
"RTN","SDCO22",65,0)
 ;
"RTN","SDCO22",66,0)
MST(DFN,SDOE) ;Ask Military Sexual Trauma Classification
"RTN","SDCO22",67,0)
 ;Input - DFN  Patient file IEN
"RTN","SDCO22",68,0)
 ;        SDOE  Outpatient Encounter file IEN
"RTN","SDCO22",69,0)
 ;Output - 1=Yes, 0=No
"RTN","SDCO22",70,0)
 N DGMST
"RTN","SDCO22",71,0)
 S DGMST=$$GETSTAT^DGMSTAPI(DFN)
"RTN","SDCO22",72,0)
 Q +($P(DGMST,U,2)="Y")
"RTN","SDCO22",73,0)
 ;
"RTN","SDCO22",74,0)
HNC(DFN,SDOE) ;Ask Head & Neck Classification
"RTN","SDCO22",75,0)
 ;Input - DFN  Patient file IEN
"RTN","SDCO22",76,0)
 ;        SDOE  Outpatient Encounter file IEN
"RTN","SDCO22",77,0)
 ;Output - 1=Yes, 0=No
"RTN","SDCO22",78,0)
 N DGARR,SDELG0,Y
"RTN","SDCO22",79,0)
 S SDELG0=$$GETCUR^DGNTAPI(DFN,"DGARR")
"RTN","SDCO22",80,0)
 S SDELG0=+$G(DGARR("STAT"))
"RTN","SDCO22",81,0)
 ;Only a status of 3, 4 or 5 is accepted for the question to be asked
"RTN","SDCO22",82,0)
 S Y=$S((".3.4.5."[("."_SDELG0_".")):1,1:0)
"RTN","SDCO22",83,0)
HNCQ Q +$G(Y)
"RTN","SDCO22",84,0)
 ;
"RTN","SDCO22",85,0)
CV(DFN,SDOE,SDDT) ;Ask Combat Veteran Classification
"RTN","SDCO22",86,0)
 ;Input : DFN - Pointer to PATIENT file (#2)
"RTN","SDCO22",87,0)
 ;        SDOE - Pointer to OUTPATIENT ENCOUNTER file (#409.68)
"RTN","SDCO22",88,0)
 ;        SDDT - Date (FileMan format) (optional - SDOE overrides)
"RTN","SDCO22",89,0)
 ;Output: 1 = Yes / 0 = No
"RTN","SDCO22",90,0)
 N SDCV
"RTN","SDCO22",91,0)
 S SDDT=$G(SDDT)
"RTN","SDCO22",92,0)
 S:$G(SDOE) SDDT=+$G(^SCE(+$G(SDOE),0))
"RTN","SDCO22",93,0)
 S:'SDDT SDDT=$$DT^XLFDT()
"RTN","SDCO22",94,0)
 S SDCV=$$CVEDT^DGCV(DFN,SDDT)
"RTN","SDCO22",95,0)
 Q $P(SDCV,"^",3)
"RTN","SDM4")
0^2^B31128100
"RTN","SDM4",1,0)
SDM4 ;ALB/BOK - MAKE APPOINTMENT ; 12 APR 1988 1100
"RTN","SDM4",2,0)
 ;;5.3;Scheduling;**263,273,327,394**;Aug 13, 1993
"RTN","SDM4",3,0)
 ;
"RTN","SDM4",4,0)
 ;09/15/2002 $N FUNCTION REMOVED AND REPLACED WITH $O - IOFO - BAY PINES - TEH
"RTN","SDM4",5,0)
 ;
"RTN","SDM4",6,0)
 ;DBIA - 1476 For reference to PRIMARY ELIG. ^DPT(IEN,.372).
"RTN","SDM4",7,0)
 ;DBIA - 427  For reference to ^DIC(8).
"RTN","SDM4",8,0)
 ;
"RTN","SDM4",9,0)
TYPE ;
"RTN","SDM4",10,0)
 D SC
"RTN","SDM4",11,0)
RAT ;Display rated service connected disabilities patch SD*5.3*394
"RTN","SDM4",12,0)
 D 2^VADPT S SDSCFLG=0
"RTN","SDM4",13,0)
 I $$GET1^DIQ(2,DFN_",",.301,"E")'="YES" D  G APT
"RTN","SDM4",14,0)
 .S SDATD=$S($D(SDAPTYP):SDAPTYP,$D(^SC(+SC,"AT")):$S($D(^SD(409.1,+^("AT"),0)):$P(^(0),U),1:"REGULAR"),1:"REGULAR")
"RTN","SDM4",15,0)
 I $P(VAEL(1),"^",2)'["50%" D  G APT
"RTN","SDM4",16,0)
 .S SDATD=$S($D(SDAPTYP):SDAPTYP,$D(^SC(+SC,"AT")):$S($D(^SD(409.1,+^("AT"),0)):$P(^(0),U),1:"REGULAR"),1:"REGULAR")
"RTN","SDM4",17,0)
 W !!,"PATIENT'S SERVICE CONNECTION AND RATED DISABILITIES:"
"RTN","SDM4",18,0)
 IF $$GET1^DIQ(2,DFN_",",.301,"E")="YES"&($P(VAEL(3),"^",2)'="") D
"RTN","SDM4",19,0)
 .W !,"SC Percent: "_$P(VAEL(3),"^",2)_"%"
"RTN","SDM4",20,0)
 ;Rated Disabilities
"RTN","SDM4",21,0)
 N SDSER,SDRAT,SDPER,SDREC,NN,NUM,ANS,SDELIG,SDATD,SDSCFLG S (ANS,NN,NUM)=0
"RTN","SDM4",22,0)
 F  S NN=$O(^DPT(DFN,.372,NN)) Q:'NN  D
"RTN","SDM4",23,0)
 .S SDREC=$G(^DPT(DFN,.372,NN,0)) IF SDREC'="" D
"RTN","SDM4",24,0)
 ..S SDRAT="" S NUM=$P($G(SDREC),"^",1) IF NUM>0 S SDRAT=$$GET1^DIQ(31,NUM_",",.01)
"RTN","SDM4",25,0)
 ..S SDSER="" S SDSER=$S($P(SDREC,"^",3)="1":"SC",1:"NSC")
"RTN","SDM4",26,0)
 ..W !,"    "_SDRAT_"  ("_SDSER_" - "_$P(SDREC,"^",2)_"%)"
"RTN","SDM4",27,0)
 ..Q
"RTN","SDM4",28,0)
 W !,"Primary Eligibility Code: "_$P(VAEL(1),"^",2)
"RTN","SDM4",29,0)
 IF $P($G(^DPT(DFN,.372,0)),"^",4)<1 W !,"No Service Connected Disabilities Listed"
"RTN","SDM4",30,0)
 W !
"RTN","SDM4",31,0)
 S SDELIG=$$GET1^DIQ(2,DFN_",",.301,"E"),SDSCFLG=0
"RTN","SDM4",32,0)
 IF $P(VAEL(1),U,2)="" W !,"'PRIMARY ELIGIBILITY CODE' field is blank please update patient record." S SDSCFLG=1
"RTN","SDM4",33,0)
 IF SDELIG="YES",($P(VAEL(3),"^",2)<50),($P(VAEL(1),"^",2)'="SC LESS THAN 50%") D
"RTN","SDM4",34,0)
 .W !,"The 'SC Percent','Service Connected' and 'Primary Eligibility Codes' are OUT OF SYNC, Please CORRECT the problem." S SDSCFLG=1
"RTN","SDM4",35,0)
 IF SDELIG="YES",($P(VAEL(3),"^",2)>49),($P(VAEL(1),"^",2)'="SERVICE CONNECTED 50% to 100%") D
"RTN","SDM4",36,0)
 .W !,"The 'SC Percent','Service Connected' and 'Primary Eligibility Codes' are OUT OF SYNC, Please CORRECT the problem." S SDSCFLG=1
"RTN","SDM4",37,0)
 W !
"RTN","SDM4",38,0)
 ;Ask about service connected appointment
"RTN","SDM4",39,0)
 N STOP,SIEN S SDATD=99999999999 S (ACT,IENACT)="" S STOP=$$GET1^DIQ(44,+SC_",",8,"I"),IENACT=$O(^SD(409.45,"B",STOP,IENACT))
"RTN","SDM4",40,0)
 IF IENACT'="" S SDATD=$O(^SD(409.45,IENACT,"E",SDATD),-1) IF SDATD>0 S ACT=$P(^SD(409.45,IENACT,"E",SDATD,0),"^",2)
"RTN","SDM4",41,0)
 IF ACT=1 S SDATD=$$GET1^DIQ(44,+SC_",",2507) GOTO APT
"RTN","SDM4",42,0)
 S SDATD="",SDATD=$$GET1^DIQ(44,+SC_",",2502) IF SDATD="YES" S SDATD=$$GET1^DIQ(44,+SC_",",2507) W "          ***NON-COUNT CLINIC***" GOTO APT
"RTN","SDM4",43,0)
 S SDATD="",SDATD=$$INP^SDAM2(DFN,DT) IF SDATD="I" S SDATD=$$GET1^DIQ(44,+SC_",",2507) W "          ***PATIENT IS CURRENTLY AN INPATIENT***" GOTO APT
"RTN","SDM4",44,0)
 S SDATD="",SDATD=$P(VAEL(1),"^",2)
"RTN","SDM4",45,0)
 IF SDATD'="SC LESS THAN 50%"&(SDATD'="SERVICE CONNECTED 50% to 100%") S SDATD="" S SDATD=$S($D(SDAPTYP):SDAPTYP,$D(^SC(+SC,"AT")):$S($D(^SD(409.1,+^("AT"),0)):$P(^(0),U),1:"REGULAR"),1:"REGULAR") D
"RTN","SDM4",46,0)
 .IF SDSCFLG&(SDATD="SERVICE CONNECTED") S SDATD="REGULAR"
"RTN","SDM4",47,0)
 IF SDATD="SC LESS THAN 50%"!(SDATD="SERVICE CONNECTED 50% to 100%") D
"RTN","SDM4",48,0)
 .D SBR K SDANS
"RTN","SDM4",49,0)
 .IF ANS="N" S SDATD=$S($D(SDAPTYP):SDAPTYP,$D(^SC(+SC,"AT")):$S($D(^SD(409.1,+^("AT"),0)):$P(^(0),U),1:"REGULAR"),1:"REGULAR")
"RTN","SDM4",50,0)
 .IF ANS="Y" D
"RTN","SDM4",51,0)
 ..S ANS="" S ANS=$$GET1^DIQ(44,+SC_",",2507) IF ANS="REGULAR"!(ANS="") D
"RTN","SDM4",52,0)
 ...S NN=$O(^SD(409.1,"B","SERVICE CONNECTED",NN)),SDATD=$$GET1^DIQ(409.1,NN_",",.01)
"RTN","SDM4",53,0)
 ..IF ANS'="REGULAR"&(ANS'="") S SDATD=ANS
"RTN","SDM4",54,0)
APT W !,"APPOINTMENT TYPE: "_SDATD_"//" R X:DTIME I X']"" S X=SDATD
"RTN","SDM4",55,0)
 I X["^" W !,"APPOINTMENT TYPE IS REQUIRED" G APT
"RTN","SDM4",56,0)
 I X="S" W !,"PLEASE ENTER MORE THAN ONE CHARACTER" G APT
"RTN","SDM4",57,0)
 I SDSCFLG D
"RTN","SDM4",58,0)
 .S DIC("S")="I $D(X),$E(X,1,2)'[""SE"""
"RTN","SDM4",59,0)
 .S DIC(0)="QEMNZ",DIC=409.1 D ^DIC I Y<0 Q
"RTN","SDM4",60,0)
 .S SDSCFLG=0
"RTN","SDM4",61,0)
 G APT:SDSCFLG
"RTN","SDM4",62,0)
 S SDEC=$S($D(^DIC(8,+VAEL(1),0)):$P(^(0),U,5),1:"")
"RTN","SDM4",63,0)
 S DIC("S")="I '$P(^(0),U,3),$S(SDEC[""Y"":1,1:$P(^(0),U,5)),$S('$P(^(0),U,6):1,$D(VAEL(1,+$P(^(0),U,6))):1,+VAEL(1)=$P(^(0),U,6):1,1:0)",DIC="^SD(409.1,",DIC(0)="EQMZ" D ^DIC K DIC
"RTN","SDM4",64,0)
 I X["^"!(Y'>0) W !,"Appointment type is required",!,"Patient must have the eligibility code EMPLOYEE, COLLATERAL or SHARING AGREEMENT",!,"to choose those types of appointments." G TYPE
"RTN","SDM4",65,0)
 S COLLAT=$S(+Y=1:1,+Y=7:7,1:0),SDAPTYP=+Y,SDDECOD=$P(^SD(409.1,+Y,0),U,6) I COLLAT W !!,"** Note - You are making a ",$P(^SD(409.1,+COLLAT,0),U)," appt.",!
"RTN","SDM4",66,0)
 Q:$D(SDAMBAE)
"RTN","SDM4",67,0)
 I COLLAT=7 S SDCOL=$P(^SD(409.1,SDAPTYP,0),U,6) I '$D(SDMLT)&'$D(SDD) D ^SDM0,END^SDM
"RTN","SDM4",68,0)
 Q
"RTN","SDM4",69,0)
ELIG S SDALLE="",SDEMP=$P(VAEL(1),U,2) W !,"THIS PATIENT HAS OTHER ENTITLED ELIGIBILITIES:" F SDOEL=0:0 S SDOEL=$O(VAEL(1,SDOEL)) Q:SDOEL=""  W !?5,$P(VAEL(1,SDOEL),U,2) S SDALLE=SDALLE_"^"_$P(VAEL(1,SDOEL),U,2)
"RTN","SDM4",70,0)
1 W !,"ENTER THE ELIGIBILITY FOR THIS APPOINTMENT: "_SDEMP_"// " R X:DTIME Q:"^"[X  S X=$$UPPER^VALM1(X) G ELIG:X["?",1:SDALLE'[("^"_X)
"RTN","SDM4",71,0)
 S SDEMP=X_$P($P(SDALLE,"^"_X,2),"^") W $P($P(SDALLE,"^"_X,2),"^")
"RTN","SDM4",72,0)
 F SDOEL=0:0 S SDOEL=$O(VAEL(1,SDOEL)) Q:SDOEL=""  I $P(VAEL(1,SDOEL),U,2)=SDEMP S SDEMP=SDOEL_"^"_SDEMP Q
"RTN","SDM4",73,0)
 Q
"RTN","SDM4",74,0)
SC ;SERVICE CONNECTED MESSAGE/IOFO - BAY PINES/TEH
"RTN","SDM4",75,0)
 I $D(^DPT(DFN,.3)) S SDAMSCN=+$P(^(.3),U,2) I SDAMSCN>49 D
"RTN","SDM4",76,0)
 .W !,?7,"********** THIS PATIENT IS 50% OR GREATER SERVICE-CONNECTED **********",!
"RTN","SDM4",77,0)
 Q
"RTN","SDM4",78,0)
SBR S (ANS,SDANS)=""
"RTN","SDM4",79,0)
 IF SDSCFLG S ANS="N" Q
"RTN","SDM4",80,0)
 IF $D(^DPT(DFN,.3)) S SDANS=$$GET1^DIQ(2,DFN_",",.302) IF SDANS>49 S ANS="Y" Q
"RTN","SDM4",81,0)
 R !,"IS THIS APPOINTMENT FOR A SERVICE CONNECTED CONDITION? (Y OR N): ",ANS:DTIME IF ANS'="Y"&(ANS'="N") W !,*7,"ENTER (Y or N) PLEASE!" G SBR
"RTN","SDM4",82,0)
 Q
"RTN","SDWLE111")
0^5^B21954594
"RTN","SDWLE111",1,0)
SDWLE111 ;IOFO BAY PINES/TEH - WAITING LIST-ENTER/EDIT - WAIT LIST TYPE/INSTUTITION ;20 Aug 2002
"RTN","SDWLE111",2,0)
 ;;5.3;scheduling;**263,273,280,394**;AUG 13 1993
"RTN","SDWLE111",3,0)
 ;
"RTN","SDWLE111",4,0)
 ;
"RTN","SDWLE111",5,0)
 ;******************************************************************
"RTN","SDWLE111",6,0)
 ;                             CHANGE LOG
"RTN","SDWLE111",7,0)
 ;                                               
"RTN","SDWLE111",8,0)
 ;   DATE                        PATCH                   DESCRIPTION
"RTN","SDWLE111",9,0)
 ;   ----                        -----                   -----------
"RTN","SDWLE111",10,0)
 ;10/01/2002                                             263                                             Logical Order Change   
"RTN","SDWLE111",11,0)
 ;12/02/2002                      273                    line EN2+19 add '/' 
"RTN","SDWLE111",12,0)
 ;12/10/2004                                             SD*5.3*394                              Add Service Connection prompts   
"RTN","SDWLE111",13,0)
 ;      
"RTN","SDWLE111",14,0)
 ;
"RTN","SDWLE111",15,0)
 ;ASK WAIT LIST TYPE
"RTN","SDWLE111",16,0)
 ;
"RTN","SDWLE111",17,0)
EN ;
"RTN","SDWLE111",18,0)
 S SDWLFLG=0
"RTN","SDWLE111",19,0)
 I $D(SDWLTY) W !,"Wait List Type: ",$$EXTERNAL^DILFD(409.3,4,,SDWLTY) W "//  (No Editing)" S SDWLTYE=SDWLTY G EN2
"RTN","SDWLE111",20,0)
 ;10/01/2002 - TEH
"RTN","SDWLE111",21,0)
 G ENS:$D(SDWLOPT)
"RTN","SDWLE111",22,0)
 G EN0:SDWLTEM
"RTN","SDWLE111",23,0)
 S DIR(0)="SO^1:PCMM TEAM ASSIGMENT;2:PCMM POSITION ASSIGNMENT;3:SERVICE/SPECIALTY;4:SPECIFIC CLINIC"
"RTN","SDWLE111",24,0)
 I SDWLCP5'="" S DIR(0)="SO^1:PCMM TEAM ASSIGMENT;2:SERVICE/SPECIALTY;3:SPECIFIC CLINIC" D 
"RTN","SDWLE111",25,0)
 .S DIR("L",1)="      Select Wait List Type: ",DIR("L",2)="",DIR("L",3)="          1. PCMM TEAM ASSIGMENT"
"RTN","SDWLE111",26,0)
 .S DIR("L",4)="             2. SERVICE/SPECIALTY",DIR("L",5)="             3. SPECIFIC CLINIC",SDWLFLG=1
"RTN","SDWLE111",27,0)
 G EN0:SDWLFLG
"RTN","SDWLE111",28,0)
ENS I $D(SDWLOPT),SDWLOPT S DIR(0)="SO^;1:SERVICE/SPECIALTY;2:SPECIFIC CLINIC" D 
"RTN","SDWLE111",29,0)
 .S DIR("L",1)="      Select Wait List Type: ",DIR("L",2)=""
"RTN","SDWLE111",30,0)
 .S DIR("L",3)="             1. SERVICE/SPECIALTY",DIR("L")="             2. SPECIFIC CLINIC",SDWLFLG=1
"RTN","SDWLE111",31,0)
 G EN1:SDWLFLG
"RTN","SDWLE111",32,0)
EN0 I SDWLTEM,SDWLPOS D 
"RTN","SDWLE111",33,0)
 .S DIR(0)="SO^;1:SERVICE/SPECIALTY;2:SPECIFIC CLINIC" D 
"RTN","SDWLE111",34,0)
 .S DIR("L",1)="      Select Wait List Type: ",DIR("L",2)=""
"RTN","SDWLE111",35,0)
 .S DIR("L",3)="             1. SERVICE/SPECIALTY",DIR("L")="             2. SPECIFIC CLINIC",SDWLFLG=1
"RTN","SDWLE111",36,0)
 G EN1:SDWLFLG
"RTN","SDWLE111",37,0)
 I SDWLWTE D 
"RTN","SDWLE111",38,0)
 .S DIR(0)="SO^;1:SERVICE/SPECIALTY;2:SPECIFIC CLINIC" D 
"RTN","SDWLE111",39,0)
 .S DIR("L",1)="      Select Wait List Type: ",DIR("L",2)=""
"RTN","SDWLE111",40,0)
 .S DIR("L",3)="             1. SERVICE/SPECIALTY",DIR("L")="             2. SPECIFIC CLINIC",SDWLFLG=1
"RTN","SDWLE111",41,0)
 G EN1:SDWLFLG
"RTN","SDWLE111",42,0)
 I 'SDWLTEM D 
"RTN","SDWLE111",43,0)
 .S DIR(0)="SO^1:PCMM TEAM ASSIGNMENT;2:SERVICE/SPECIALTY;3:SPECIFIC CLINIC" D 
"RTN","SDWLE111",44,0)
 .S DIR("L",1)="      Select Wait List Type: ",DIR("L",2)=""
"RTN","SDWLE111",45,0)
 .S DIR("L",2)=""
"RTN","SDWLE111",46,0)
 .S DIR("L",3)="             1. PCMM TEAM ASSIGNMENT"
"RTN","SDWLE111",47,0)
 .S DIR("L",4)="             2. SERVICE/SPECIALTY"
"RTN","SDWLE111",48,0)
 .S DIR("L")="             3. SPECIFIC CLINIC",SDWLFLG=1
"RTN","SDWLE111",49,0)
 G EN1:SDWLFLG
"RTN","SDWLE111",50,0)
 I SDWLTEM D
"RTN","SDWLE111",51,0)
 .S DIR(0)="SO^1:PCMM POSITION ASSIGNMENT;2:SERVICE/SPECIALTY;3:SPECIFIC CLINIC"
"RTN","SDWLE111",52,0)
 .S DIR("L",1)="     Select Wait List Type: "
"RTN","SDWLE111",53,0)
 .S DIR("L",2)=""
"RTN","SDWLE111",54,0)
 .S DIR("L",3)="           1. PCMM POSITION ASSIGNMENT"
"RTN","SDWLE111",55,0)
 .S DIR("L",4)="           2. SERVICE/SPECIALTY"
"RTN","SDWLE111",56,0)
 .S DIR("L")="           3. SPECIFIC CLINIC",SDWLFLG=1
"RTN","SDWLE111",57,0)
 G EN1:SDWLFLG
"RTN","SDWLE111",58,0)
 S DIR("L",1)="     Select Wait List Type: "
"RTN","SDWLE111",59,0)
 S DIR("L",2)=""
"RTN","SDWLE111",60,0)
 S DIR("L",3)="           1. PCMM TEAM ASSIGMENT"
"RTN","SDWLE111",61,0)
 S DIR("L",4)="           2. PCMM POSITION ASSIGNMENT"
"RTN","SDWLE111",62,0)
 S DIR("L",5)="           3. SERVICE/SPECIALTY"
"RTN","SDWLE111",63,0)
 S DIR("L")="           4. SPECIFIC CLINIC"
"RTN","SDWLE111",64,0)
EN1 D ^DIR I X="" W " Required or '^' to Quit" G EN
"RTN","SDWLE111",65,0)
 I $D(DUOUT) S SDWLERR=1 G END
"RTN","SDWLE111",66,0)
 I 'SDWLTEM,'SDWLWTE S SDWLTYE=$S(Y=1:1,Y=2:3,Y=3:4)
"RTN","SDWLE111",67,0)
 I SDWLPOS S SDWLTYE=$S(Y=1:1,Y=2:3,Y=3:4)
"RTN","SDWLE111",68,0)
 I SDWLTEM S SDWLTYE=$S(Y=1:2,Y=2:3,Y=3:4)
"RTN","SDWLE111",69,0)
 I SDWLPOS,SDWLTEM S SDWLTYE=$S(Y=1:3,Y=2:4)
"RTN","SDWLE111",70,0)
 I SDWLWTE S SDWLTYE=$S(Y=1:3,Y=2:4)
"RTN","SDWLE111",71,0)
 I $D(SDWLOPT),SDWLOPT S SDWLTYE=$S(Y=1:3,Y=2:4)
"RTN","SDWLE111",72,0)
 S DIE="^SDWL(409.3,",DR="4///^S X=SDWLTYE" D ^DIE
"RTN","SDWLE111",73,0)
 ;
"RTN","SDWLE111",74,0)
EN2 ;SERVICE CONNECTION - SD*5.3*394
"RTN","SDWLE111",75,0)
 ;
"RTN","SDWLE111",76,0)
 D ^SDWLSC
"RTN","SDWLE111",77,0)
 ;
"RTN","SDWLE111",78,0)
 ;ASK INSTITUTION (FILE 4)
"RTN","SDWLE111",79,0)
 ;
"RTN","SDWLE111",80,0)
 I SDWLTYE=2,$D(SDWLCPT),SDWLCPT S (SDWLINE,SDWLIN)=$P($G(^SCTM(404.51,+SDWLCPT,0)),U,7) G END
"RTN","SDWLE111",81,0)
 I SDWLTYE=2,'SDWLCP3 S SDWLI=0 F  S SDWLI=$O(^SCTM(404.57,SDWLI)) Q:SDWLI<1  D
"RTN","SDWLE111",82,0)
 .S SDWLL=+$P($G(^SCTM(404.57,SDWLI,0)),U,2),SDWLINL=+$P($G(^SCTM(404.51,+SDWLL,0)),U,7),SDWLINL(+SDWLINL)=""
"RTN","SDWLE111",83,0)
 K DUOUT S SDWLERR=0 W !
"RTN","SDWLE111",84,0)
 I $D(SDWLIN) D
"RTN","SDWLE111",85,0)
 .S X=$S($D(SDWLIN):$$EXTERNAL^DILFD(409.32,.02,,SDWLIN),1:""),DIC(0)="Q",DIC=4,SDWLINE=SDWLIN D ^DIC D
"RTN","SDWLE111",86,0)
 ..W !,"Select Institution: ",$P(Y,U,2)," //  (No Editing)" S SDWLERR=1
"RTN","SDWLE111",87,0)
 I SDWLERR S SDWLERR=0 G END
"RTN","SDWLE111",88,0)
 I SDWLTYE=1 S DIC("S")="I $D(^SCTM(404.51,""AINST"",+Y))"
"RTN","SDWLE111",89,0)
 I SDWLTYE=2 S DIC("S")="I $D(SDWLINL(+Y))"
"RTN","SDWLE111",90,0)
 I SDWLTYE=4 S DIC("S")="I $D(^SDWL(409.32,""ACT"",+Y))"
"RTN","SDWLE111",91,0)
 I SDWLTYE=3 S DIC("S")="I $D(^SDWL(409.31,""E"",+Y))"
"RTN","SDWLE111",92,0)
 S DIC("S")=DIC("S")_",$$GET1^DIQ(4,+Y_"","",11,""I"")=""N"",$$TF^XUAF4(+Y)"
"RTN","SDWLE111",93,0)
 S DIC(0)="AEQNM",DIC="4",DIC("A")="Select Institution: " D ^DIC I Y<0,'$D(DUOUT) S SDWLERR=1 W "Required or '^' to Quit."
"RTN","SDWLE111",94,0)
 I $D(DUOUT) S SDWLERR=1 Q
"RTN","SDWLE111",95,0)
 G EN2:SDWLERR
"RTN","SDWLE111",96,0)
 I Y>0 D 
"RTN","SDWLE111",97,0)
 .K DIC,DIC("A"),DIC("S"),DIC(0),DIC("B") S (SDWLIN,SDWLINE)=+Y,DIE="^SDWL(409.3,"
"RTN","SDWLE111",98,0)
 .I '$D(DUOUT),Y>0 S DR="2////^S X=SDWLIN",DIE="^SDWL(409.3,",DA=SDWLDA D ^DIE
"RTN","SDWLE111",99,0)
 I $D(DUOUT) S SDWLERR=1
"RTN","SDWLE111",100,0)
END Q
"RTN","SDWLE113")
0^3^B7911045
"RTN","SDWLE113",1,0)
SDWLE113 ;IOFO BAY PINES/TEH - WAITING LIST-ENTER/EDIT ;20 Aug 2002  2:10 PM
"RTN","SDWLE113",2,0)
 ;;5.3;scheduling;**263,273,394**;AUG 13 1993
"RTN","SDWLE113",3,0)
 ;
"RTN","SDWLE113",4,0)
 ;
"RTN","SDWLE113",5,0)
 ;******************************************************************
"RTN","SDWLE113",6,0)
 ;                             CHANGE LOG
"RTN","SDWLE113",7,0)
 ;                                               
"RTN","SDWLE113",8,0)
 ;   DATE                        PATCH                   DESCRIPTION
"RTN","SDWLE113",9,0)
 ;   ----                        -----                   -----------
"RTN","SDWLE113",10,0)
 ; 11/27/02                      SD*5.3*273              Add "/" to line EN1+2  
"RTN","SDWLE113",11,0)
 ; 12/10/04                      SD*5.3*394              Sets SERVICE CONNECTED PRIORITY in WAIT LIST (409.3)
"RTN","SDWLE113",12,0)
 ;   
"RTN","SDWLE113",13,0)
 ;
"RTN","SDWLE113",14,0)
EN ;Set record status to 'OPEN'
"RTN","SDWLE113",15,0)
 ;
"RTN","SDWLE113",16,0)
 N SDWLERR S DR="23////^S X=""O""",DIE="^SDWL(409.3," D ^DIE
"RTN","SDWLE113",17,0)
 ;
"RTN","SDWLE113",18,0)
 ;Ask comments
"RTN","SDWLE113",19,0)
 ;
"RTN","SDWLE113",20,0)
 I $D(^SDWL(409.3,SDWLDA,0)) I $P(^(0),U,18)'="" S DIR("B")=$P(^(0),U,18)
"RTN","SDWLE113",21,0)
 S DIR(0)="FAOU^^",DIR("A")="Comments: " D ^DIR
"RTN","SDWLE113",22,0)
 I Y["^" S SDWLERR=2 Q
"RTN","SDWLE113",23,0)
 I X="@" S DR="25///@",DIE="^SDWL(409.3,",DA=SDWLDA D ^DIE G EN0
"RTN","SDWLE113",24,0)
 S SDWLCOM=Y
"RTN","SDWLE113",25,0)
 S DR="25////^S X=SDWLCOM",DIE="^SDWL(409.3,",DA=SDWLDA D ^DIE
"RTN","SDWLE113",26,0)
 ;
"RTN","SDWLE113",27,0)
 ;SET SERVICE CONNECTION PRIORITY
"RTN","SDWLE113",28,0)
 ;
"RTN","SDWLE113",29,0)
EN0 I $D(SDWLNSC),$D(^SDWL(409.3,SDWLDA)) D
"RTN","SDWLE113",30,0)
 .S SDWLNSCP=$$GET1^DIQ(2,SDWLDFN_",",.302)
"RTN","SDWLE113",31,0)
 .S DIE="^SDWL(409.3,",DA=SDWLDA,DR="14////^S X=SDWLNSCP" D ^DIE
"RTN","SDWLE113",32,0)
 .S DR="15////^S X=SDWLNSC" D ^DIE
"RTN","SDWLE113",33,0)
 K SDWLNSC,SDWLNSCP
"RTN","SDWLE113",34,0)
 ;
"RTN","SDWLE113",35,0)
EN1 ;Set Editing User
"RTN","SDWLE113",36,0)
 ;
"RTN","SDWLE113",37,0)
 S DR="28////^S X=DUZ",DIE="^SDWL(409.3," D ^DIE
"RTN","SDWLE113",38,0)
 ;
"RTN","SDWLE113",39,0)
 S SDWLERR=0 Q
"RTN","SDWLE113",40,0)
 Q
"RTN","SDWLE113",41,0)
 ;
"RTN","SDWLE113",42,0)
END K SDWLCN,SDWLCN,SDWLY,SDWLNEW,SDWLSSN,SDWLNAM,SDWLDATA,SDWLIN,SDWLCL,SDWLTY,SDWLST,SDWLSP,SDWLSS
"RTN","SDWLE113",43,0)
 K SDWLSC,SDWLPRI,SDWLRB,SDWLPROV,SDWLDAPT,SDWLST,SDWLCOM,SDWLDUZ,SDWLEDT,SDCL,SDWLTYE,SDWLINE,SDWLS,SDWLX,SDWLPRIE,SDWLPRVE
"RTN","SDWLE113",44,0)
 K SDWLDAPE,SDWLRBE,SDWL,VA,VADM,VAIN,D0,DA,DI,DIC,DIE,DQ,DR,SDWLCLN,SDWLCNT,SDWLDIS,SDWLDISN,SDWLDT
"RTN","SDWLE113",45,0)
 K SDWLDTP,SDWLINN,SDWLPRIN,SDWLTYN,SDWLB,SDWLCPT,SDWLFLG,SDWLPS,SDWLRNE,SDWLSCO,SDWLSCR,SDWLSPO,SDWLSCR,SDWLSPO,SDWLSSO
"RTN","SDWLE113",46,0)
 K SDWLWR,VAERR,YY,MM,DD,SDWLSCP,SDWLVAR,SDWLF,SDWLSX,SDWLCP1,SCWLCP2,SDSWLTAG,SDWLTT,SDWLVBR,SDWLYN,X,Y
"RTN","SDWLE113",47,0)
 K SDWLCP2,SDWLCP3,SDWLCP4,SDWLCP5,SDWLCP6,E,SDWLCOME,SDWLDFN,SDWLPCMM
"RTN","SDWLE113",48,0)
 K DIR,SDWLSTO,SDWLINA,SDWLPOS,SDWLTEM,SDWLOPT,DUOUT
"RTN","SDWLE113",49,0)
 I $D(SDWLDA),SDWLDA'="",$D(^SDWL(409.3,SDWLDA,0)),$P(^SDWL(409.3,SDWLDA,0),U,17)'["O" D
"RTN","SDWLE113",50,0)
 .W !!,?15,"***  Patient being Removed from Wait List  ***" S DIK="^SDWL(409.3,",DA=SDWLDA D ^DIK S DUOUT=1
"RTN","SDWLE113",51,0)
 K SDWLDA
"RTN","SDWLE113",52,0)
 Q
"RTN","SDWLI")
0^11^B52231226
"RTN","SDWLI",1,0)
SDWLI ;IOFO BAY PINES/TEH - DISPLAY PENDING APPOINTMENTS ; 6/1/05 12:56pm
"RTN","SDWLI",2,0)
 ;;5.3;scheduling;**263,327,394**;AUG 13 1993
"RTN","SDWLI",3,0)
 ;
"RTN","SDWLI",4,0)
 ;
"RTN","SDWLI",5,0)
 ;******************************************************************
"RTN","SDWLI",6,0)
 ;                             CHANGE LOG
"RTN","SDWLI",7,0)
 ;                                               
"RTN","SDWLI",8,0)
 ;   DATE               PATCH          DESCRIPTION
"RTN","SDWLI",9,0)
 ;   ----             -----             -----------
"RTN","SDWLI",10,0)
 ;   04/22/2005      SD*5.3*327  DISPLAY APPOINTMENT INFORMATION
"RTN","SDWLI",11,0)
 ;   04/22/2005      SD*5.3*327  UNDEFINED ERROR HD+1
"RTN","SDWLI",12,0)
 ;
"RTN","SDWLI",13,0)
 ;
"RTN","SDWLI",14,0)
 ;
"RTN","SDWLI",15,0)
EN ;NEW AND INITIALIZE VARIABLES
"RTN","SDWLI",16,0)
 S SDWLERR=0 I $D(SDWLLIST),SDWLLIST D
"RTN","SDWLI",17,0)
 .I '$D(DFN) S SDWLERR=1 Q
"RTN","SDWLI",18,0)
 .I $D(DFN),DFN'="",'$D(^SDWL(409.3,"B",DFN)) D HD W *7,!,"This Patient has NO entries on the Electronic Wait List." S DIR(0)="E" D ^DIR S DUOUT=1 Q
"RTN","SDWLI",19,0)
 I $D(DUOUT) G END
"RTN","SDWLI",20,0)
 I 'SDWLERR,$D(SDWLLIST),SDWLLIST D 1^VADPT,DEM^VADPT S SDWLDFN=DFN D HD K DIR,DIC,DR,DIE,VADM S (SDWLBDT,SDWLEDT)="" K ^TMP("SDWLI",$J) G EN1
"RTN","SDWLI",21,0)
 K DIR,DIC,DR,DIE,VADM
"RTN","SDWLI",22,0)
 S (SDWLBDT,SDWLEDT)="" K ^TMP("SDWLI",$J)
"RTN","SDWLI",23,0)
 ;
"RTN","SDWLI",24,0)
 ;OPTION HEADER
"RTN","SDWLI",25,0)
 ;
"RTN","SDWLI",26,0)
 D HD
"RTN","SDWLI",27,0)
 ;
"RTN","SDWLI",28,0)
 ;PATIENT LOOK-UP FROM WAIT LIST PATIENT FILE (^SDWL(409.3,IEN,0).
"RTN","SDWLI",29,0)
 ;
"RTN","SDWLI",30,0)
 D PAT Q:'$D(SDWLDFN)
"RTN","SDWLI",31,0)
 G END:SDWLDFN<0,END:SDWLDFN=""
"RTN","SDWLI",32,0)
 Q:$D(DUOUT)
"RTN","SDWLI",33,0)
EN1 K DIR,DIC,DR,DIE,SDWLDRG
"RTN","SDWLI",34,0)
 D SEL G EN:$D(DUOUT)
"RTN","SDWLI",35,0)
 D GETFILE
"RTN","SDWLI",36,0)
 D DISP G EN:'$D(DUOUT)
"RTN","SDWLI",37,0)
 D END
"RTN","SDWLI",38,0)
 Q
"RTN","SDWLI",39,0)
PAT ;PATIENT LOOK-UP
"RTN","SDWLI",40,0)
 S DIC(0)="EMNQA",DIC=409.3 D ^DIC S (SDWLDFN,DFN)=$P(Y,U,2)
"RTN","SDWLI",41,0)
 G PATEND:SDWLDFN=""
"RTN","SDWLI",42,0)
 Q:Y<0
"RTN","SDWLI",43,0)
 Q:$D(DUOUT)
"RTN","SDWLI",44,0)
 D 1^VADPT
"RTN","SDWLI",45,0)
PATEND Q
"RTN","SDWLI",46,0)
 ;
"RTN","SDWLI",47,0)
 ;PROMPT FOR DISPLAY 'OPEN' WAITING LIST ONLY OR PROMPT FOR BEGINNING AND ENDING DATES
"RTN","SDWLI",48,0)
 ;
"RTN","SDWLI",49,0)
SEL K SDWLDRG S DIR(0)="YAO^^" S DIR("A")="Do You Want to View Only 'OPEN' Wait Lists? Yes// "
"RTN","SDWLI",50,0)
 S DIR("?")="'Yes' for 'Open' and these Patient Record have not been dispositioned and 'No' for all Records."
"RTN","SDWLI",51,0)
 W ! D ^DIR S SDWLY=Y W !
"RTN","SDWLI",52,0)
 I X["^" S DUOUT=1
"RTN","SDWLI",53,0)
 I SDWLY=0 D SEL1
"RTN","SDWLI",54,0)
 Q
"RTN","SDWLI",55,0)
SEL1 K DIR,%DT(0) S SDWLDISC="",%DT="AE",%DT("A")="Start with Date Entered: " D ^%DT G SEL:Y<1 S SDWLBDT=Y
"RTN","SDWLI",56,0)
 S %DT(0)=SDWLBDT,%DT("A")="End with Date Entered: " D ^%DT G SEL1:Y<1 S SDWLEDT=Y,SDWLDRG="" K %DT(0),%DT("A")
"RTN","SDWLI",57,0)
 Q
"RTN","SDWLI",58,0)
 ;
"RTN","SDWLI",59,0)
GETFILE ;GET DATA - OPTIONAL DATE RANGE IF SDWLDBT AND SDWLEDT VALID DATE RANGE
"RTN","SDWLI",60,0)
 ;
"RTN","SDWLI",61,0)
 K ^TMP("SDWLI",$J),SDWLDISX S SDWLDA=0,SDWLCNT=0 F  S SDWLDA=$O(^SDWL(409.3,"B",SDWLDFN,SDWLDA)) Q:SDWLDA=""  D
"RTN","SDWLI",62,0)
 .S SDWLDATA=$G(^SDWL(409.3,SDWLDA,0)) I '$D(SDWLDRG),$P(SDWLDATA,U,17)["C" Q
"RTN","SDWLI",63,0)
 .I '$P(SDWLDATA,U,3) Q
"RTN","SDWLI",64,0)
 .N SDWLAPP S SDWLAPP="" I $D(^SDWL(409.3,SDWLDA,"SDAPT")) S SDWLAPP=^("SDAPT") D  ;app data
"RTN","SDWLI",65,0)
 ..S SDWLAPP=SDWLAPP_"~"_$P(SDWLDATA,U,23)
"RTN","SDWLI",66,0)
 .N SDOP,SDOP1 S SDOP="" I $D(^SDWL(409.3,SDWLDA,1)) S SDOP=^(1),SDOP1=$$GET1^DIQ(409.3,SDWLDA_",",29),$P(SDOP,U)=SDOP1
"RTN","SDWLI",67,0)
 .I $D(^SDWL(409.3,SDWLDA,"DIS")) D
"RTN","SDWLI",68,0)
 ..S SDWLDISX=$G(^SDWL(409.3,SDWLDA,"DIS")),SDWLDIS=$P(SDWLDISX,U,3),SDWLDDUZ=$P(SDWLDISX,U,2)
"RTN","SDWLI",69,0)
 ..S SDWLDDT=$P(^SDWL(409.3,SDWLDA,"DIS"),U,1)
"RTN","SDWLI",70,0)
 ..S SDWLDIDT="" I SDWLDDT'="" S SDWLDIDT=$E(SDWLDDT,4,5)_"/"_$E(SDWLDDT,6,7)_"/"_$E(SDWLDDT,2,3)
"RTN","SDWLI",71,0)
 .S SDWLST=$P(SDWLDATA,U,6),SDWLSP=$P(SDWLDATA,U,7),SDWLSS=$P(SDWLDATA,U,8),SDWLSC=$P(SDWLDATA,U,9),SDWLDT=$P(SDWLDATA,U,2)
"RTN","SDWLI",72,0)
 .S SDWLPROV=$P(SDWLDATA,U,13) I $D(SDWLDRG) D  I SDNOK Q
"RTN","SDWLI",73,0)
 ..S SDNOK=0
"RTN","SDWLI",74,0)
 ..I SDWLDT<SDWLBDT!(SDWLDT>SDWLEDT) S SDNOK=1 Q
"RTN","SDWLI",75,0)
 .;
"RTN","SDWLI",76,0)
 .;IF STATUS IS CLOSED DO NOT DISPLAY RECORD
"RTN","SDWLI",77,0)
 .;
"RTN","SDWLI",78,0)
 .S SDWLCNT=SDWLCNT+1,^TMP("SDWLI",$J,SDWLCNT)=SDWLDATA_"~"_SDWLDA I $D(SDWLDISX) D 
"RTN","SDWLI",79,0)
 ..S ^TMP("SDWLI",$J,SDWLCNT,"DIS")=SDWLDIS_"^"_SDWLDDUZ_"^"_SDWLDIDT
"RTN","SDWLI",80,0)
 ..I SDWLAPP>0 S ^TMP("SDWLI",$J,SDWLCNT,"SDAPT")=SDWLAPP
"RTN","SDWLI",81,0)
 ..I SDOP'="" S ^TMP("SDWLI",$J,SDWLCNT,"SDOP")=SDOP
"RTN","SDWLI",82,0)
 .S ^TMP("SDWLI",$J)=SDWLCNT
"RTN","SDWLI",83,0)
 .K SDWLDISX
"RTN","SDWLI",84,0)
 Q
"RTN","SDWLI",85,0)
 ;
"RTN","SDWLI",86,0)
DISP ;Display Wait List Data
"RTN","SDWLI",87,0)
 S (SDWLDT,SDWLCNT,SDWLCN)="",SDWLCT=$G(^TMP("SDWLI",$J)) I 'SDWLCT W !!,"No 'OPEN' Wait List Records to Display.",!! K DIR S DIR(0)="E" D ^DIR S DUOUT="" Q
"RTN","SDWLI",88,0)
 F  S SDWLCNT=$O(^TMP("SDWLI",$J,SDWLCNT)) Q:SDWLCNT=""  D  I $D(DUOUT) Q
"RTN","SDWLI",89,0)
 .I $D(^TMP("SDWLI",$J,SDWLCNT,"DIS")) S SDWLDISX=$G(^TMP("SDWLI",$J,SDWLCNT,"DIS"))
"RTN","SDWLI",90,0)
 .S X=$G(^TMP("SDWLI",$J,SDWLCNT)),SDWLDA=$P(X,"~",2),SDWLIN=$P(X,U,3),SDWLCL=$P(X,U,4),SDWLTY=$P(X,U,5),SDWLPRI=$P(X,U,11)
"RTN","SDWLI",91,0)
 .S SDWLTYP=$S(SDWLTY=1:$P(X,U,6),SDWLTY=2:$P(X,U,7),SDWLTY=3:$P(X,U,8),SDWLTY=4:$P(X,U,9))
"RTN","SDWLI",92,0)
 .S SDWLTYN=$S(SDWLTY=1:5,SDWLTY=2:6,SDWLTY=3:7,SDWLTY=4:8),SDWLCOM=$P($P(X,U,18),"~",1)
"RTN","SDWLI",93,0)
 .S SDWLDUZ=$P(X,U,10),SDWLPRV=$P(X,U,12),SDWLPROV=$P(X,U,13),SDWLX=$P(X,"~",3) D
"RTN","SDWLI",94,0)
 ..I $D(SDWLDISX) S SDWLDIS=$P(SDWLDISX,U,1),SDWLDDUZ=$P(SDWLDISX,U,2),SDWLDIDT=$P(SDWLDISX,U,3)
"RTN","SDWLI",95,0)
 .S SDWLDT=$P(X,U,2),YY=$E(SDWLDT,1,3)+1700,YY=$E(YY,3,4),MM=$E(SDWLDT,4,5),DD=$E(SDWLDT,6,7),SDWLDTP=MM_"/"_DD_"/"_YY
"RTN","SDWLI",96,0)
 .S SDWLDTD=$P(X,U,16),YY=$E(SDWLDTD,1,3)+1700,YY=$E(YY,3,4),MM=$E(SDWLDTD,4,5),DD=$E(SDWLDTD,6,7),SDWLDTD=MM_"/"_DD_"/"_YY
"RTN","SDWLI",97,0)
 .;PATCH SD*5.3*394 See Note.
"RTN","SDWLI",98,0)
 .N SDWLSCP
"RTN","SDWLI",99,0)
 .S SDWLSCP=+$P($G(^SDWL(409.3,SDWLDA,"SC")),U,2)
"RTN","SDWLI",100,0)
 .W !,"# ",$J(SDWLCNT,3),!
"RTN","SDWLI",101,0)
 .W !,"Wait List - ",$$EXTERNAL^DILFD(409.3,4,,SDWLTY),?55,"Date Entered - ",SDWLDTP
"RTN","SDWLI",102,0)
 .W !,?15 S X=$$EXTERNAL^DILFD(409.3,SDWLTYN,,SDWLTYP) W X
"RTN","SDWLI",103,0)
 .S SDWLP=0 I SDWLPRI W !,"Priority - ",$$EXTERNAL^DILFD(409.3,10,,SDWLPRI) S SDWLP=1
"RTN","SDWLI",104,0)
 .I $D(SDWLSCP) W !,"Service Connected Priority - ",$$EXTERNAL^DILFD(409.3,15,,SDWLSCP)
"RTN","SDWLI",105,0)
 .W:SDWLP ?15 W:'SDWLP ! W "Institution - ",$$EXTERNAL^DILFD(409.3,2,,SDWLIN)
"RTN","SDWLI",106,0)
 .W !,"Entered by - " S X=$$EXTERNAL^DILFD(409.3,9,,SDWLDUZ) W X
"RTN","SDWLI",107,0)
 .S SDWRB=0 I SDWLPRV W !,"Requested By - ",$$EXTERNAL^DILFD(409.3,11,,SDWLPRV),?55,"Date Desired - ",SDWLDTD
"RTN","SDWLI",108,0)
 .I SDWLPRV=1 W !,"Provider - ",$$EXTERNAL^DILFD(409.3,12,,SDWLPROV)
"RTN","SDWLI",109,0)
 .I $D(SDWLCOM),SDWLCOM'="" W !,"Comments - ",SDWLCOM
"RTN","SDWLI",110,0)
 .I $D(^TMP("SDWLI",$J,SDWLCNT,"SDOP")) N SDOP S SDOP=^("SDOP") W !,"Reopen Reason: ",$P(SDOP,U) D
"RTN","SDWLI",111,0)
 ..I $P(SDOP,U,2)'="" W !,"Reopen comment: ",$P(SDOP,U,2)
"RTN","SDWLI",112,0)
 .I $D(SDWLDISX) W !,"Disposition - ",$$EXTERNAL^DILFD(409.3,21,,SDWLDIS),?51,"Disposition Date - ",SDWLDIDT D 
"RTN","SDWLI",113,0)
 ..W !,"Dispositioned by - ",$$EXTERNAL^DILFD(409.3,20,,SDWLDDUZ)
"RTN","SDWLI",114,0)
 .I $D(^TMP("SDWLI",$J,SDWLCNT,"SDAPT")) N SDAP S SDAP=^("SDAPT") D
"RTN","SDWLI",115,0)
 ..W !,"Appointment scheduled for " S Y=$P(SDAP,"~",2) D DD^%DT W Y
"RTN","SDWLI",116,0)
 ..W !?3,"Made on: " S Y=+SDAP D DD^%DT W Y,?30,"For clinic: " N SDC S SDC=$P(SDAP,U,2) S SDC=$$GET1^DIQ(44,SDC_",",.01) W SDC
"RTN","SDWLI",117,0)
 ..N SDAIN S SDAIN=$P(SDAP,U,3),SDAIN=$$GET1^DIQ(4,SDAIN_",",.01)
"RTN","SDWLI",118,0)
 ..W !?3,"Appt Institution: ",SDAIN
"RTN","SDWLI",119,0)
 ..N SDCR S SDCR=$P(SDAP,U,4),SDCR=$$GET1^DIQ(40.7,SDCR_",",.01)
"RTN","SDWLI",120,0)
 ..W ?40,"Appt Specialty: ",SDCR
"RTN","SDWLI",121,0)
 ..N SAPS S SAPS=$P(SDAP,U,8),SAPS=$P(SAPS,"~") I SAPS="CC" W !,"Appointment Status: Canceled by Clinic"
"RTN","SDWLI",122,0)
 .K SDWLIN,SDWLCL,SDWLTY,SDWLPRI,SDWLDUZ,SDWLPRV,SDWLDT,SDWLDTD,SDWLDIS,SDWLDIDT,SDWLTYN,SDWLCOM,SDWLPROV,SDWLDISX,DIR,DIE,DR
"RTN","SDWLI",123,0)
 .W !,"*****",! K DIR S DIR(0)="E" D ^DIR  D
"RTN","SDWLI",124,0)
 ..I X["^" S DUOUT=1 Q
"RTN","SDWLI",125,0)
 ..I 'Y S DUOUT=1 Q
"RTN","SDWLI",126,0)
 ..D HD
"RTN","SDWLI",127,0)
 Q
"RTN","SDWLI",128,0)
HD ;Header
"RTN","SDWLI",129,0)
 W:$D(IOF) @IOF W !!,?80-$L("Wait List - Inquiry")\2,"Wait List - Inquiry ",!
"RTN","SDWLI",130,0)
 ;SD*5.3*327 - Correct undefined.
"RTN","SDWLI",131,0)
 I '$D(SDWLDFN) W !! Q 
"RTN","SDWLI",132,0)
 N DFN S DFN=SDWLDFN D DEM^VADPT
"RTN","SDWLI",133,0)
 W:$D(VADM) !,VADM(1),?40 I $D(VA("PID")) W VA("PID")
"RTN","SDWLI",134,0)
 W !!
"RTN","SDWLI",135,0)
 K DUOUT
"RTN","SDWLI",136,0)
 Q
"RTN","SDWLI",137,0)
END ;
"RTN","SDWLI",138,0)
 K DIR,DIC,DR,DIE,SDWLDFN,DUOUT
"RTN","SDWLI",139,0)
 K SDNOK,SDWLBDT,SDWLCL,SDWLCN,SDWLCNT,SDWLCOM,SDWLCT,SDWLDA,SDWLDATA,SDWLDDT,SDWLDDUZ,SDWLDFN,SDWLDIDT,SDWLDIS,SDWLDISX
"RTN","SDWLI",140,0)
 K SDWLDRG,SDWLDT,SDWLDTD,SDWLDTP,SDWLDUZ,SDLWEDT,SDWLIN,SDLWP,SDWLPRI,SDWLPROV,SDLWPRV,SDWLSC,SDWLSP,SDWLSS,SDLWST,SDWLTY
"RTN","SDWLI",141,0)
 K SDWLTYN,SDSWLTYP,SDLWX,SDWLY,SDWRB,SDWLBDT,SDWLDISC,SDWLERR,SDWLPRON,SDXSCAT,SDWLP,SDWLTYP
"RTN","SDWLI",142,0)
 Q
"RTN","SDWLMSG")
0^13^B36616948
"RTN","SDWLMSG",1,0)
SDWLMSG ;IOFO BAY PINES/DMR - EWL-SC PRIORITY BACKGROUND MESSAGES;09/02/2004 2:10 PM [5/12/05 2:58pm]
"RTN","SDWLMSG",2,0)
 ;;5.3;scheduling;**327,394**;AUG 13, 1993
"RTN","SDWLMSG",3,0)
 ;
"RTN","SDWLMSG",4,0)
MESS ;Send message 1
"RTN","SDWLMSG",5,0)
 S ^TMP("SDWLQSC1",$J,.01)="Patient Name                    SSN   OLD-EWL/SC %  NEW-EWL/SC %  PRIORITY"
"RTN","SDWLMSG",6,0)
 S ^TMP("SDWLQSC1",$J,.02)="------------                    ---   ------------  ------------  --------"
"RTN","SDWLMSG",7,0)
 S ^TMP("SDWLQSC1",$J,.03)=""
"RTN","SDWLMSG",8,0)
 N XMSUB,XMY,XMTEXT,XMDUZ
"RTN","SDWLMSG",9,0)
 S XMSUB="EWL SC Patient Update with SC Priority"
"RTN","SDWLMSG",10,0)
 S XMY("G.SD EWL BACKGROUND UPDATE")=""
"RTN","SDWLMSG",11,0)
 S XMTEXT="^TMP(""SDWLQSC1"",$J,"
"RTN","SDWLMSG",12,0)
 S XMDUZ="POSTMASTER"
"RTN","SDWLMSG",13,0)
 D ^XMD K ^TMP("SDWLQSC1",$J)
"RTN","SDWLMSG",14,0)
 Q
"RTN","SDWLMSG",15,0)
MESS1 ;Send message 2    
"RTN","SDWLMSG",16,0)
 S ^TMP("SDWLQSC2",$J,.01)="Patient Name                    SSN   OLD-EWL/SC %  NEW-EWL/SC % MULTI-ENTRIES"
"RTN","SDWLMSG",17,0)
 S ^TMP("SDWLQSC2",$J,.02)="------------                    ---   ------------  ------------ -------------"
"RTN","SDWLMSG",18,0)
 S ^TMP("SDWLQSC2",$J,.03)=""
"RTN","SDWLMSG",19,0)
 S ^TMP("SDWLQSC2",$J,.04)="** NOTE: EWL SC PRIORITY MAY REQUIRE MANUAL UPDATE. PLEASE REVIEW **"
"RTN","SDWLMSG",20,0)
 S ^TMP("SDWLQSC2",$J,.05)=""
"RTN","SDWLMSG",21,0)
 N XMSUB,XMY,XMTEXT,XMDUZ
"RTN","SDWLMSG",22,0)
 S XMSUB="EWL SC Patient Update with SC Percentage Change"
"RTN","SDWLMSG",23,0)
 S XMY("G.SD EWL BACKGROUND UPDATE")=""
"RTN","SDWLMSG",24,0)
 S XMTEXT="^TMP(""SDWLQSC2"",$J,"
"RTN","SDWLMSG",25,0)
 S XMDUZ="POSTMASTER"
"RTN","SDWLMSG",26,0)
 D ^XMD K ^TMP("SDWLQSC2",$J)
"RTN","SDWLMSG",27,0)
 Q
"RTN","SDWLMSG",28,0)
MESS2 ;
"RTN","SDWLMSG",29,0)
 S ^TMP("SDWLQSC3",$J,.01)="This message displays any pending appointments in the EWL file which have"
"RTN","SDWLMSG",30,0)
 S ^TMP("SDWLQSC3",$J,.02)="a status of 'CANCELED BY CLINIC', there may be further action required if"
"RTN","SDWLMSG",31,0)
 S ^TMP("SDWLQSC3",$J,.03)="the patient still needs an appointment."
"RTN","SDWLMSG",32,0)
 S ^TMP("SDWLQSC3",$J,.04)=""
"RTN","SDWLMSG",33,0)
 N SDFORM S SDFORM=$$FORM^SDFORM("PATIENT NAME",32,"CLINIC",27,"DATE/TIME of APPT",21) D  ;added
"RTN","SDWLMSG",34,0)
 .S ^TMP("SDWLQSC3",$J,.05)=SDFORM
"RTN","SDWLMSG",35,0)
 S ^TMP("SDWLQSC3",$J,.06)="-------------------------------------------------------------------------------"
"RTN","SDWLMSG",36,0)
 S ^TMP("SDWLQSC3",$J,.07)=""
"RTN","SDWLMSG",37,0)
 N XMSUB,XMY,XMTEXT,XMDUZ
"RTN","SDWLMSG",38,0)
 S XMSUB="EWL appointment entries with a status of 'CANCELED BY CLINIC'."
"RTN","SDWLMSG",39,0)
 S XMY("G.SD EWL BACKGROUND UPDATE")=""
"RTN","SDWLMSG",40,0)
 S XMTEXT="^TMP(""SDWLQSC3"",$J,"
"RTN","SDWLMSG",41,0)
 S XMDUZ="POSTMASTER"
"RTN","SDWLMSG",42,0)
 D ^XMD K ^TMP("SDWLQSC3",$J)
"RTN","SDWLMSG",43,0)
 Q
"RTN","SDWLMSG",44,0)
MESS3 ;
"RTN","SDWLMSG",45,0)
 S ^TMP("SDWLQSC4",$J,.01)="This message displays the number of open Wait List entries that are tied to"
"RTN","SDWLMSG",46,0)
 S ^TMP("SDWLQSC4",$J,.02)="an Inactive Clinic. These Wait List entries may require further action,"
"RTN","SDWLMSG",47,0)
 S ^TMP("SDWLQSC4",$J,.03)="please review."
"RTN","SDWLMSG",48,0)
 S ^TMP("SDWLQSC4",$J,.04)=""
"RTN","SDWLMSG",49,0)
 S ^TMP("SDWLQSC4",$J,.05)="CLINIC and NUMBER of WAIT LIST entries"
"RTN","SDWLMSG",50,0)
 S ^TMP("SDWLQSC4",$J,.06)=""
"RTN","SDWLMSG",51,0)
 N XMSUB,XMY,XMTEXT,XMDUZ
"RTN","SDWLMSG",52,0)
 S XMSUB="INACTIVE CLINICS with OPEN WAIT LIST entries."
"RTN","SDWLMSG",53,0)
 S XMY("G.SD EWL BACKGROUND UPDATE")=""
"RTN","SDWLMSG",54,0)
 S XMTEXT="^TMP(""SDWLQSC4"",$J,"
"RTN","SDWLMSG",55,0)
 S XMDUZ="POSTMASTER"
"RTN","SDWLMSG",56,0)
 D ^XMD K ^TMP("SDWLQSC4",$J)
"RTN","SDWLMSG",57,0)
 Q
"RTN","SDWLMSG",58,0)
MESS4 ;PCMM Inactivative Team Report
"RTN","SDWLMSG",59,0)
 S ^TMP("SDWLQSC5",$J,.01)="This message displays any PCMM Teams that have been inactivated"
"RTN","SDWLMSG",60,0)
 S ^TMP("SDWLQSC5",$J,.02)="and have patients waiting on the Wait List.  The PCMM Teams"
"RTN","SDWLMSG",61,0)
 S ^TMP("SDWLQSC5",$J,.03)="are displayed along with the number of open Wait List entries."
"RTN","SDWLMSG",62,0)
 S ^TMP("SDWLQSC5",$J,.04)=""
"RTN","SDWLMSG",63,0)
 N XMSUB,XMY,XMTEXT,XMDUZ
"RTN","SDWLMSG",64,0)
 S XMSUB="Wait List PCMM Inactive Team Report"
"RTN","SDWLMSG",65,0)
 S XMY("G.SD EWL BACKGROUND UPDATE")=""
"RTN","SDWLMSG",66,0)
 S XMTEXT="^TMP(""SDWLQSC5"",$J,"
"RTN","SDWLMSG",67,0)
 S XMDUZ="POSTMASTER"
"RTN","SDWLMSG",68,0)
 D ^XMD K ^TMP("SDWLQSC5",$J)
"RTN","SDWLMSG",69,0)
 Q
"RTN","SDWLMSG",70,0)
MESS5 ;PCMM Position Inactivation Report
"RTN","SDWLMSG",71,0)
 S ^TMP("SDWLQSC6",$J,.01)="This message displays any PCMM Positions that have been inactivated"
"RTN","SDWLMSG",72,0)
 S ^TMP("SDWLQSC6",$J,.02)="and have patients waiting on the Wait List.  The PCMM Positions"
"RTN","SDWLMSG",73,0)
 S ^TMP("SDWLQSC6",$J,.03)="are displayed along with the number of open Wait List entries."
"RTN","SDWLMSG",74,0)
 S ^TMP("SDWLQSC6",$J,.04)=""
"RTN","SDWLMSG",75,0)
 S ^TMP("SDWLQSC6",$J,.05)="Team Position                  Team                      Open EWL Entries"
"RTN","SDWLMSG",76,0)
 S ^TMP("SDWLQSC6",$J,.06)=""
"RTN","SDWLMSG",77,0)
 N XMSUB,XMY,XMTEXT,XMDUZ
"RTN","SDWLMSG",78,0)
 S XMSUB="Wait List PCMM Inactive Position Report"
"RTN","SDWLMSG",79,0)
 S XMY("G.SD EWL BACKGROUND UPDATE")=""
"RTN","SDWLMSG",80,0)
 S XMTEXT="^TMP(""SDWLQSC6"",$J,"
"RTN","SDWLMSG",81,0)
 S XMDUZ="POSTMASTER"
"RTN","SDWLMSG",82,0)
 D ^XMD K ^TMP("SDWLQSC6",$J)
"RTN","SDWLMSG",83,0)
 Q
"RTN","SDWLMSG",84,0)
MESS6 ;Date of Death error message
"RTN","SDWLMSG",85,0)
 S ^TMP("SDWLQSC7",$J,.01)="This message displays any patient on the Wait List who had "
"RTN","SDWLMSG",86,0)
 S ^TMP("SDWLQSC7",$J,.02)="a Date of Death entered in error.  The Wait List entry is"
"RTN","SDWLMSG",87,0)
 S ^TMP("SDWLQSC7",$J,.03)="reopened and may require additional follow-up."
"RTN","SDWLMSG",88,0)
 S ^TMP("SDWLQSC7",$J,.04)=""
"RTN","SDWLMSG",89,0)
 N XMSUB,XMY,XMTEXT,XMDUZ
"RTN","SDWLMSG",90,0)
 S XMSUB="Wait List Date of Death Error Report"
"RTN","SDWLMSG",91,0)
 S XMY("G.SD EWL BACKGROUND UPDATE")=""
"RTN","SDWLMSG",92,0)
 S XMTEXT="^TMP(""SDWLQSC7"",$J,"
"RTN","SDWLMSG",93,0)
 S XMDUZ="POSTMASTER"
"RTN","SDWLMSG",94,0)
 D ^XMD K ^TMP("SDWLQSC7",$J)
"RTN","SDWLMSG",95,0)
 Q
"RTN","SDWLMSG",96,0)
MESS7 ;PCMM Team available slots
"RTN","SDWLMSG",97,0)
 S ^TMP("SDWLQSC8",$J,.01)="This message displays any PCMM Teams that have open EWL entries"
"RTN","SDWLMSG",98,0)
 S ^TMP("SDWLQSC8",$J,.02)="waiting - and now have open slots available.  Message displays"
"RTN","SDWLMSG",99,0)
 S ^TMP("SDWLQSC8",$J,.03)="PCMM Team and number of open slots and number of EWL entries waiting"
"RTN","SDWLMSG",100,0)
 S ^TMP("SDWLQSC8",$J,.04)="for that PCMM Team."
"RTN","SDWLMSG",101,0)
 S ^TMP("SDWLQSC8",$J,.05)=""
"RTN","SDWLMSG",102,0)
 S ^TMP("SDWLQSC8",$J,.07)=""
"RTN","SDWLMSG",103,0)
 N XMSUB,XMY,XMTEXT,XMDUZ
"RTN","SDWLMSG",104,0)
 S XMSUB="PCMM Team Report of Available Slots"
"RTN","SDWLMSG",105,0)
 S XMY("G.SD EWL BACKGROUND UPDATE")=""
"RTN","SDWLMSG",106,0)
 S XMTEXT="^TMP(""SDWLQSC8"",$J,"
"RTN","SDWLMSG",107,0)
 S XMDUZ="POSTMASTER"
"RTN","SDWLMSG",108,0)
 D ^XMD K ^TMP("SDWLQSC8",$J)
"RTN","SDWLMSG",109,0)
 Q
"RTN","SDWLMSG",110,0)
MESS8 ;PCMM Position available open slots
"RTN","SDWLMSG",111,0)
 S ^TMP("SDWLQSC9",$J,.01)="This message displays any PCMM Positions that have open EWL entries"
"RTN","SDWLMSG",112,0)
 S ^TMP("SDWLQSC9",$J,.02)="waiting - and now have open slots available.  Message displays"
"RTN","SDWLMSG",113,0)
 S ^TMP("SDWLQSC9",$J,.03)="PCMM Position and number of open slots and number of EWL entries waiting"
"RTN","SDWLMSG",114,0)
 S ^TMP("SDWLQSC9",$J,.04)="for that PCMM Position."
"RTN","SDWLMSG",115,0)
 S ^TMP("SDWLQSC9",$J,.05)=""
"RTN","SDWLMSG",116,0)
 S ^TMP("SDWLQSC9",$J,.07)=""
"RTN","SDWLMSG",117,0)
 N XMSUB,XMY,XMTEXT,XMDUZ
"RTN","SDWLMSG",118,0)
 S XMSUB="PCMM Positions Report of Available Slots"
"RTN","SDWLMSG",119,0)
 S XMY("G.SD EWL BACKGROUND UPDATE")=""
"RTN","SDWLMSG",120,0)
 S XMTEXT="^TMP(""SDWLQSC9"",$J,"
"RTN","SDWLMSG",121,0)
 S XMDUZ="POSTMASTER"
"RTN","SDWLMSG",122,0)
 D ^XMD K ^TMP("SDWLQSC9",$J)
"RTN","SDWLMSG",123,0)
 Q
"RTN","SDWLP394")
0^9^B9500337
"RTN","SDWLP394",1,0)
SDWLP394 ;IOFO BAY PINES/TEH - WAITING LIST-SC PRIORITY SEEDING POST INIT. ;09/02/2004 2:10 PM
"RTN","SDWLP394",2,0)
 ;;5.3;scheduling;**394**;SEP 02 2004
"RTN","SDWLP394",3,0)
 ;
"RTN","SDWLP394",4,0)
 ;
"RTN","SDWLP394",5,0)
 ;=============================================================================================
"RTN","SDWLP394",6,0)
 ;                                        CHANGE LOG
"RTN","SDWLP394",7,0)
 ;                                                                               
"RTN","SDWLP394",8,0)
 ;       DATE                    PATCH                         DESCRIPTION
"RTN","SDWLP394",9,0)
 ;       ----                    -----                         -----------
"RTN","SDWLP394",10,0)
 ;       12/10/2005              SD*5.3*394                    New Routine for POST INIT.
"RTN","SDWLP394",11,0)
 ;
"RTN","SDWLP394",12,0)
 ;Description: This routine is to seed the SD WAIT list file (409.3) fields #14 and #15 and places
"RTN","SDWLP394",13,0)
 ;             'SDAM APPT TYPE VALIDATION' on the 'SDAM APPOINTMENT EVENTS' menu. 
"RTN","SDWLP394",14,0)
 ;
"RTN","SDWLP394",15,0)
 ;Variables:
"RTN","SDWLP394",16,0)
 ;
"RTN","SDWLP394",17,0)
 ;       SDWLDFN=EWL IEN
"RTN","SDWLP394",18,0)
 ;       SDWLSC1=EWL RECORDED SERVICE CONNECTION PERCENTAGE
"RTN","SDWLP394",19,0)
 ;       SDWLSC2=PATIENT FILE (2) CURRENT SERVICE CONNECTION PERCENTAGE
"RTN","SDWLP394",20,0)
 ;       
"RTN","SDWLP394",21,0)
 ;IA Agreements:
"RTN","SDWLP394",22,0)
 ;
"RTN","SDWLP394",23,0)
 ;DBIA - 1476 For reference to PRIMARY ELIG. ^DPT(IEN,.372).
"RTN","SDWLP394",24,0)
 ;DBIA - 427  For reference to ^DIC(8).)
"RTN","SDWLP394",25,0)
 Q
"RTN","SDWLP394",26,0)
EN ;Use SDWL(409.3) Wait List Patient file to determine SC changes and priority.
"RTN","SDWLP394",27,0)
 S SDWLDFN=0 F  S SDWLDFN=$O(^SDWL(409.3,"B",SDWLDFN)) Q:SDWLDFN<1  D
"RTN","SDWLP394",28,0)
 .S SDWLDA=0 F  S SDWLDA=$O(^SDWL(409.3,"B",SDWLDFN,SDWLDA)) Q:SDWLDA=""  D
"RTN","SDWLP394",29,0)
 ..I $P($G(^SDWL(409.3,SDWLDA,0)),U,17)["C" Q  ;I EWL entry has been 'CLOSED' don't process.
"RTN","SDWLP394",30,0)
 ..S SDWLSC1=+$P($G(^SDWL(409.3,SDWLDA,"SC")),U,1)
"RTN","SDWLP394",31,0)
 ..S SDWLSC2=+$$GET1^DIQ(2,SDWLDFN_",",.302,,"SDWLX","")
"RTN","SDWLP394",32,0)
 ..S SDWLSCX=0,SDWLSC3=0,SDWLSC4=0
"RTN","SDWLP394",33,0)
 ..I SDWLSC2<50,SDWLSC1>49 D
"RTN","SDWLP394",34,0)
 ...S SDWLSC3=1,DA=SDWLDA,DR="14////^S X=SDWLSC2",DIE=409.3 D ^DIE
"RTN","SDWLP394",35,0)
 ..I SDWLSC2>49,SDWLSC1>49 S SDWLSC4=1,DA=SDWLDA,DR="14////^S X=SDWLSC2",DIE=409.3 D ^DIE Q
"RTN","SDWLP394",36,0)
 ..I SDWLSC2>49,SDWLSC1<50 S SDWLSCX=SDWLSC2 D SET0 Q
"RTN","SDWLP394",37,0)
 ..I SDWLSC2<50,SDWLSC1<50 S SDWLSC3=1,SDWLSC4=1,SDWLSCX=SDWLSC2 D SET0 Q
"RTN","SDWLP394",38,0)
 ..I '$D(^SDWL(409.3,SDWLDA,"SC")) D
"RTN","SDWLP394",39,0)
 ...I SDWLSC2>49 S SDWLSCX=SDWLSC2 D SET0 Q  ;Set "SC" node if not defined.
"RTN","SDWLP394",40,0)
 ...I SDWLSC2<50 S SDWLSC3=1,SDWLSC4=1,DA=SDWLDA,DR="14////^S X=SDWLSC2",DIE=409.3 D ^DIE
"RTN","SDWLP394",41,0)
 ..K SDWLSSN,SDWLSC2,SDWLSC1,SDWLSC3,SDWLSCP,SDWLX,SDWLI,SDWLSCX
"RTN","SDWLP394",42,0)
 ..L  Q
"RTN","SDWLP394",43,0)
 K SDWLDA,SDWLDFN,SDWLSC1,SDWLSC2,SDWLSC3,SDWLSC4,DA,DR,DIC,DIE,X,SDWLX,SDWLNAM,SDWLSSN,SDWLSCX,SDWLWRT
"RTN","SDWLP394",44,0)
 N SDWLX,SDWLY,DA
"RTN","SDWLP394",45,0)
 S SDWLX=0,SDWLY=0,DUZ=.5,DUZ(0)="@"
"RTN","SDWLP394",46,0)
 S SDWLY=$O(^ORD(101,"B","SDAM APPOINTMENT EVENTS",SDWLY)) G ABORT:'SDWLY S SDIENS=SDWLY_","
"RTN","SDWLP394",47,0)
 S SDWLX=$O(^ORD(101,"B","SDAM APPT TYPE VALIDATION",SDWLX)) G ABORT:'SDWLX
"RTN","SDWLP394",48,0)
 I $D(^ORD(101,SDWLY,10,"B",SDWLX)) Q
"RTN","SDWLP394",49,0)
 K DO S X=SDWLX,DIC(0)="LM",DIC("DR")="10////^S X=SDWLX",DA(1)=SDWLY,DIC="^ORD(101,"_SDIENS_10_"," D FILE^DICN G ABORT:'Y
"RTN","SDWLP394",50,0)
 W !,"SDAM APPT TYPE VALIDATION event has been successfully placed on the SDAM APPOINTMENT EVENTS menu."
"RTN","SDWLP394",51,0)
 K DIC,SDIENS,SDWLX,SDWLY,DA
"RTN","SDWLP394",52,0)
 Q
"RTN","SDWLP394",53,0)
ABORT ;
"RTN","SDWLP394",54,0)
 W !,"Error in processing SDAM APPT TYPE VALIDATION event. Call Bay PineField Office."
"RTN","SDWLP394",55,0)
 Q
"RTN","SDWLP394",56,0)
SET0 ;Set EWL file with current service connection percentage.
"RTN","SDWLP394",57,0)
 S DA=SDWLDA,DR="14////^S X=SDWLSCX",DIE=409.3 D ^DIE
"RTN","SDWLP394",58,0)
 I SDWLSC2=50!(SDWLSC2>50) S DR="15////^S X=1" D ^DIE
"RTN","SDWLP394",59,0)
 K DA,DR,X,DIE
"RTN","SDWLP394",60,0)
 Q
"RTN","SDWLPL")
0^12^B30342220
"RTN","SDWLPL",1,0)
SDWLPL ;IOFO BAY PINES/DMR,esw - WAIT LIST PICK LIST ; 6/1/05 1:05pm
"RTN","SDWLPL",2,0)
 ;;5.3;scheduling;**327,394**;AUG 13, 1993
"RTN","SDWLPL",3,0)
 ;
"RTN","SDWLPL",4,0)
 I '$D(^SDWL(409.3,"B",DFN)) Q
"RTN","SDWLPL",5,0)
 S (ANS1,ANS2,NN)="",DTIME=60
"RTN","SDWLPL",6,0)
 W !,"This patient is currently on the Wait List."
"RTN","SDWLPL",7,0)
 ;
"RTN","SDWLPL",8,0)
ANS1 ;
"RTN","SDWLPL",9,0)
 R !,"Do you want to display open Wait list entries? (Y or N): ",ANS1:DTIME
"RTN","SDWLPL",10,0)
 IF ANS1'="Y"&(ANS1'="N") W !,*7,"ENTER (Y or N) PLEASE!)" G ANS1
"RTN","SDWLPL",11,0)
 Q:ANS1="N"
"RTN","SDWLPL",12,0)
 ;
"RTN","SDWLPL",13,0)
ANS2(DFN,ANS2) ;
"RTN","SDWLPL",14,0)
 N STR S ANS2=" ",STR=",A,S,C,"
"RTN","SDWLPL",15,0)
 F  Q:STR[ANS2!(ANS2="^")  D
"RTN","SDWLPL",16,0)
 .W !!,"Display Open Wait List entries selection:"
"RTN","SDWLPL",17,0)
 .W !?5,"'A' for ALL entries",!?5,"'C' for matching Appointment CLINIC",!?5,"'S' for matching Appointment SPECIALTY",!?5,"'^' to Quit",!
"RTN","SDWLPL",18,0)
 .W "SELECT: " R ANS2:120 Q:'$T
"RTN","SDWLPL",19,0)
 .IF ANS2'="A"&(ANS2'="S")&(ANS2'="C")&(ANS2'="^") W !!,"PLEASE ENTER 'A' for All entries, 'C' for clinic or 'S' for current specialty/stop code or '^' to quit."
"RTN","SDWLPL",20,0)
 Q:ANS2="^"
"RTN","SDWLPL",21,0)
 D INIT(DFN,ANS2) I '$D(^TMP($J,"SDWLPL")) W !!,"No selected open EWL entry has been found!" Q
"RTN","SDWLPL",22,0)
DISPLAY ;
"RTN","SDWLPL",23,0)
 D LIST(ANS2,DFN)
"RTN","SDWLPL",24,0)
 Q
"RTN","SDWLPL",25,0)
 ;
"RTN","SDWLPL",26,0)
INIT(DFN,ANS2) ;
"RTN","SDWLPL",27,0)
 S (INST,SCODE,CLINIC,DENTER,REQBY,DESIRD,SCPRI,IEN,SSN)="" K ^TMP("SDWLPL",$J),^TMP($J,"SDWLPL")
"RTN","SDWLPL",28,0)
 F  S IEN=$O(^SDWL(409.3,"B",DFN,IEN)) Q:IEN=""  D
"RTN","SDWLPL",29,0)
 .Q:$$GET1^DIQ(409.3,IEN_",",23,"I")="C"
"RTN","SDWLPL",30,0)
 .S ^TMP("SDWLPL",$J,IEN)=$G(^SDWL(409.3,IEN,0)) S DENTER="",DENTER=$P($G(^TMP("SDWLPL",$J,IEN)),"^",2)
"RTN","SDWLPL",31,0)
 .S (WLTYPE,TYPE,WLTN,NUM)="",TYPE=$P($G(^TMP("SDWLPL",$J,IEN)),"^",5)
"RTN","SDWLPL",32,0)
 .IF DENTER'=""&(TYPE'="") D
"RTN","SDWLPL",33,0)
 ..IF ANS2="A" D ARAY1
"RTN","SDWLPL",34,0)
 ..IF ANS2="S" D ARAY2
"RTN","SDWLPL",35,0)
 ..IF ANS2="C" D ARAY3
"RTN","SDWLPL",36,0)
 ;
"RTN","SDWLPL",37,0)
 K ANS1,NN,INST,SCODE,CLINIC,DENTER,REQBY,DESIRD,SCPRI
"RTN","SDWLPL",38,0)
 K CLINIC,WLTYPE,TYPE,WLTN,NUM,REC
"RTN","SDWLPL",39,0)
 Q
"RTN","SDWLPL",40,0)
 ;
"RTN","SDWLPL",41,0)
ARAY1 ;
"RTN","SDWLPL",42,0)
 IF TYPE=1 S WLTYPE="PCMM TEAM",NUM=$P($G(^TMP("SDWLPL",$J,IEN)),"^",6),WLTNI=$$GET1^DIQ(404.51,NUM_",",.01,"I"),WLTN=$$GET1^DIQ(404.51,NUM_",",.01)
"RTN","SDWLPL",43,0)
 IF TYPE=2 S WLTYPE="PCMM POSITION",NUM=$P($G(^TMP("SDWLPL",$J,IEN)),"^",7),WLTNI=$$GET1^DIQ(404.57,NUM_",",.01,"I"),WLTN=$$GET1^DIQ(404.57,NUM_",",.01)
"RTN","SDWLPL",44,0)
 IF TYPE=3 S WLTYPE="SERV/SPECIALTY",NUM=$P($G(^TMP("SDWLPL",$J,IEN)),"^",8),WLTNI=$$GET1^DIQ(409.31,NUM_",",.01,"I"),WLTN=$$GET1^DIQ(409.31,NUM_",",.01)
"RTN","SDWLPL",45,0)
 IF TYPE=4 S WLTYPE="CLINIC",NUM=$P($G(^TMP("SDWLPL",$J,IEN)),"^",9),WLTNI=$$GET1^DIQ(409.32,NUM_",",.01,"I"),WLTN=$$GET1^DIQ(409.32,NUM_",",.01)
"RTN","SDWLPL",46,0)
 D SAVE(TYPE,WLTNI,IEN)
"RTN","SDWLPL",47,0)
 Q
"RTN","SDWLPL",48,0)
 ;
"RTN","SDWLPL",49,0)
ARAY2 ;
"RTN","SDWLPL",50,0)
 IF TYPE=3 D
"RTN","SDWLPL",51,0)
 .S SCODE=+$P($G(^TMP($J,"APPT",1)),U,13),NUM=$P($G(^TMP("SDWLPL",$J,IEN)),"^",8),WLTNI=$$GET1^DIQ(409.31,NUM_",",.01,"I"),WLTN=$$GET1^DIQ(409.31,NUM_",",.01)
"RTN","SDWLPL",52,0)
 .Q:SCODE'=WLTNI
"RTN","SDWLPL",53,0)
 .S WLTYPE="SERV/SPECIAL"
"RTN","SDWLPL",54,0)
 .D SAVE(TYPE,WLTNI,IEN)
"RTN","SDWLPL",55,0)
 Q
"RTN","SDWLPL",56,0)
 ;
"RTN","SDWLPL",57,0)
ARAY3 ;
"RTN","SDWLPL",58,0)
 IF TYPE=4 D
"RTN","SDWLPL",59,0)
 .S CLINIC=+$P($G(^TMP($J,"APPT",1)),U,2),NUM=$P($G(^TMP("SDWLPL",$J,IEN)),"^",9),WLTNI=$$GET1^DIQ(409.32,NUM_",",.01,"I"),WLTN=$$GET1^DIQ(409.32,NUM_",",.01)
"RTN","SDWLPL",60,0)
 .Q:CLINIC'=WLTNI
"RTN","SDWLPL",61,0)
 .S WLTYPE="CLINIC"
"RTN","SDWLPL",62,0)
 .D SAVE(TYPE,WLTNI,IEN)
"RTN","SDWLPL",63,0)
 Q
"RTN","SDWLPL",64,0)
 ;
"RTN","SDWLPL",65,0)
SAVE(TYPE,WLTNI,IEN) ;
"RTN","SDWLPL",66,0)
 S REQBY=$P($G(^TMP("SDWLPL",$J,IEN)),"^",12)
"RTN","SDWLPL",67,0)
 S INST=$P($G(^TMP("SDWLPL",$J,IEN)),"^",3)
"RTN","SDWLPL",68,0)
 N DESIRED S DESIRED=$P($G(^TMP("SDWLPL",$J,IEN)),"^",16)
"RTN","SDWLPL",69,0)
 S SCPRI=$E($$GET1^DIQ(409.3,IEN_",",15)) ;SC priority
"RTN","SDWLPL",70,0)
 N NAME,SSN S NAME=$$GET1^DIQ(2,DFN_",",.01),SSN=$$GET1^DIQ(2,DFN_",",.09)
"RTN","SDWLPL",71,0)
 N SDBY S SDBY=$$GET1^DIQ(409.3,IEN_",",11),SDBY=$E(SDBY,1,3)
"RTN","SDWLPL",72,0)
 S NN=$O(^TMP($J,"SDWLPL",""),-1)+1
"RTN","SDWLPL",73,0)
 S ^TMP($J,"SDWLPL",NN)=IEN_U_WLTYPE_U_SCPRI_U_WLTN_U_INST_U_DENTER_U_SDBY_U_DESIRED
"RTN","SDWLPL",74,0)
 ;
"RTN","SDWLPL",75,0)
 N SPIEC S SPIEC=$S(TYPE=4:9,TYPE=3:10,TYPE=2:11,TYPE=1:12)
"RTN","SDWLPL",76,0)
 S $P(^TMP($J,"SDWLPL",NN),U,SPIEC)=WLTNI
"RTN","SDWLPL",77,0)
 K ^TMP("SDWLPL",$J,IEN)
"RTN","SDWLPL",78,0)
 Q
"RTN","SDWLPL",79,0)
 ;
"RTN","SDWLPL",80,0)
LIST(ANS2,DFN) ;
"RTN","SDWLPL",81,0)
 W:$D(IOF) @IOF
"RTN","SDWLPL",82,0)
 D APPTD^SDWLEVAL ;display appointment(s) again
"RTN","SDWLPL",83,0)
 W !,"=========================================================================="
"RTN","SDWLPL",84,0)
 N NAME,SSN S NAME=$$GET1^DIQ(2,DFN_",",.01),SSN=$$GET1^DIQ(2,DFN_",",.09)
"RTN","SDWLPL",85,0)
 W !!,$S(ANS2="A":" All",ANS2="C":" Clinic matched",ANS2="S":" Specialty matched",1:" All") W " Open Wait List Entries for: ",NAME_"  "_$E(SSN,1,3)_"-"_$E(SSN,4,5)_"-"_$E(SSN,6,9)
"RTN","SDWLPL",86,0)
 W !,"------------------------------" I ANS2'="A" W "-----------"
"RTN","SDWLPL",87,0)
 W !,"  EW List Type   SC/P  Waiting for Institution  Orig Date   By  Des. Date Reopen"
"RTN","SDWLPL",88,0)
 W !,"--------------------------------------------------------------------------"
"RTN","SDWLPL",89,0)
 S (REC,NUM)=""
"RTN","SDWLPL",90,0)
 F  S NUM=$O(^TMP($J,"SDWLPL",NUM)) Q:NUM=""  S REC=^TMP($J,"SDWLPL",NUM) D
"RTN","SDWLPL",91,0)
 .;I $P(REC,U,3)="" S $P(REC,U,3)="N"
"RTN","SDWLPL",92,0)
 .S IEN=+REC N SDP,SDR D
"RTN","SDWLPL",93,0)
 ..S SDP=$E($$GET1^DIQ(409.3,IEN_",",10)) ;priority
"RTN","SDWLPL",94,0)
 ..S SDR=$$GET1^DIQ(409.3,IEN_",",29,"I") ;reopen reason
"RTN","SDWLPL",95,0)
 .N SDINS,SDIN S SDINS=$P(REC,"^",5) S SDIN=$$GET1^DIQ(4,SDINS_",",.01,"I")
"RTN","SDWLPL",96,0)
 .W !,NUM_". ",$E($P(REC,"^",2),1,12),?16,$P(REC,"^",2)_"/"_SDP,?21,$E($P(REC,U,4),1,13),?35,SDIN,?47,$$FMTE^XLFDT($P(REC,"^",6),8),?59,$P(REC,"^",7),?63,$$FMTE^XLFDT($P(REC,"^",8),8),?77,SDR
"RTN","SDWLPL",97,0)
 .N SDUP,SDLO
"RTN","SDWLPL",98,0)
 .S SDUP="ABCDEFGHIJKLMNOPRSTUWQXYzv",SDLO="abcdefghijklmnoprstuwqxyzv"
"RTN","SDWLPL",99,0)
 .N SMT S SMT=$$GET1^DIQ(409.3,IEN_",",25) I SMT'="" S SMT=$TR(SMT,SDUP,SDLO) W !?2,"Comment: ",SMT
"RTN","SDWLPL",100,0)
 .N SMO S SMO=$$GET1^DIQ(409.3,IEN_",",30) I SMO'="" S SMO=$TR(SMO,SDUP,SDLO) W !?2,"Reopen: ",SMO
"RTN","SDWLPL",101,0)
 Q
"RTN","SDWLQSC")
0^1^B73044330
"RTN","SDWLQSC",1,0)
SDWLQSC        ;IOFO BAY PINES/TEH,DMR - WAITING LIST-SC PRIORITY BACKGROUND ;09/02/2004 2:10 PM [4/21/05 8:04pm]
"RTN","SDWLQSC",2,0)
 ;;5.3;scheduling;**327,394**;AUG 13, 1993
"RTN","SDWLQSC",3,0)
 ;
"RTN","SDWLQSC",4,0)
 ;SD*5.3*327       EWL Updates Phase II - Addition of EWL notification messages.
"RTN","SDWLQSC",5,0)
 ;SD*5.3*394       New Routine for background update of SDWL(409.3) SC priorities.
"RTN","SDWLQSC",6,0)
 ;               
"RTN","SDWLQSC",7,0)
 ;This routine will run as a nightly background job to determine changes in service connected disabilities and update
"RTN","SDWLQSC",8,0)
 ;the priority of the wait list visit, if appropriate. A mailman message will then be sent to the EWL mail group.
"RTN","SDWLQSC",9,0)
 ;
"RTN","SDWLQSC",10,0)
 ;Variables:  SDWLDFN=EWL IEN
"RTN","SDWLQSC",11,0)
 ;            SDWLSC1=EWL RECORDED SERVICE CONNECTION PERCENTAGE
"RTN","SDWLQSC",12,0)
 ;            SDWLSC2=PATIENT FILE (2) CURRENT SERVICE CONNECTION PERCENTAGE          
"RTN","SDWLQSC",13,0)
 ;IA Agreements:  DBIA 1476 reference to PRIMARY ELIG. ^DPT(IEN,.372)
"RTN","SDWLQSC",14,0)
 ;                DBIA 427 reference to ^DIC(8)
"RTN","SDWLQSC",15,0)
 ;                               
"RTN","SDWLQSC",16,0)
 Q
"RTN","SDWLQSC",17,0)
EN ;Use SDWL(409.3) to determine SC changes and priority.
"RTN","SDWLQSC",18,0)
 S SDWLDFN=0 F  S SDWLDFN=$O(^SDWL(409.3,"B",SDWLDFN)) Q:SDWLDFN<1  D
"RTN","SDWLQSC",19,0)
 .S SDWLDA=0,SDWLME=0 F  S SDWLDA=$O(^SDWL(409.3,"B",SDWLDFN,SDWLDA)) Q:SDWLDA=""  D
"RTN","SDWLQSC",20,0)
 ..L ^SDWL(409.3,SDWLDA):5 I '$T Q
"RTN","SDWLQSC",21,0)
 ..I $P($G(^SDWL(409.3,SDWLDA,0)),U,17)["C" Q  ;I EWL entry has been 'CLOSED' don't process.
"RTN","SDWLQSC",22,0)
 ..S SDWLME=SDWLME+1
"RTN","SDWLQSC",23,0)
 ..S SDWLSC1=+$P($G(^SDWL(409.3,SDWLDA,"SC")),U,1)
"RTN","SDWLQSC",24,0)
 ..S SDWLSC2=+$$GET1^DIQ(2,SDWLDFN_",",.302,,"SDWLX","")
"RTN","SDWLQSC",25,0)
 ..I SDWLSC1=SDWLSC2 S SDWLSC4=1 Q
"RTN","SDWLQSC",26,0)
 ..S SDWLSCX=0,SDWLSC3=0,SDWLSC4=0
"RTN","SDWLQSC",27,0)
 ..I SDWLSC2<50,SDWLSC1>49 D
"RTN","SDWLQSC",28,0)
 ...S SDWLSC3=1,SDWLSC4=1,DA=SDWLDA,DR="14////^S X=SDWLSC2",DIE=409.3 D ^DIE,SET1
"RTN","SDWLQSC",29,0)
 ..I SDWLSC2>49,SDWLSC1>49 S SDWLSCX=SDWLSC2 D SET0 Q
"RTN","SDWLQSC",30,0)
 ..I SDWLSC2>49,SDWLSC1<50 S SDWLSCX=SDWLSC2 D SET0,SET1 Q
"RTN","SDWLQSC",31,0)
 ..I SDWLSC2<50,SDWLSC1<50 S SDWLSC3=1,SDWLSC4=1,SDWLSCX=SDWLSC2 D SET0,SET1 Q
"RTN","SDWLQSC",32,0)
 ..I '$D(^SDWL(409.3,SDWLDA,"SC")) D
"RTN","SDWLQSC",33,0)
 ...I SDWLSC2>49 S SDWLSCX=SDWLSC2 D SET0,SET1 Q  ;Set "SC" node if not defined.
"RTN","SDWLQSC",34,0)
 ...I SDWLSC2<50 S SDWLSC3=1,SDWLSC4=1,DA=SDWLDA,DR="14////^S X=SDWLSC2",DIE=409.3 D ^DIE,SET1
"RTN","SDWLQSC",35,0)
 ..K SDWLSSN,SDWLSC2,SDWLSC1,SDWLSC3,SDWLSCP,SDWLX,SDWLI,SDWLSCX
"RTN","SDWLQSC",36,0)
 ..L  Q
"RTN","SDWLQSC",37,0)
 I $D(SDWLSC4),SDWLSC4 D
"RTN","SDWLQSC",38,0)
 .I $D(^TMP("SDWLQSC2",$J)) D MESS1^SDWLMSG
"RTN","SDWLQSC",39,0)
 I $D(^TMP("SDWLQSC1",$J)) D MESS^SDWLMSG
"RTN","SDWLQSC",40,0)
 K SDWLDA,SDWLDFN,SDWLSC1,SDWLSC2,SDWLSC3,SDWLSC4,DA,DR,DIC,DIE,X,SDWLX,SDWLNAM,SDWLSSN,SDWLSCX,SDWLWRT,SDWLME
"RTN","SDWLQSC",41,0)
 D EN2
"RTN","SDWLQSC",42,0)
 K IEN,DFN,APPT,WLAPPT,STOP,WLSTAT,STATUS,NN,SDREC,SDARRAY,SDAPPT,CL,CLINIC,SDC,SDDFN,SDNAME,SDAPPST,CIEN,SDWL
"RTN","SDWLQSC",43,0)
 K SDCL,SDIEN,CC,SDREACT,SDINACT,CLINICS,TEAM,TEAMN,WLOPEN,PIEN,POS,POSN,SDWLPOS,EDATE,DOD,DIS,NAME,MAX,AVAL,SDFORM
"RTN","SDWLQSC",44,0)
 Q
"RTN","SDWLQSC",45,0)
SET0 ;Set EWL file with current SC percentage.
"RTN","SDWLQSC",46,0)
 S DA=SDWLDA,DR="14////^S X=SDWLSCX",DIE=409.3 D ^DIE
"RTN","SDWLQSC",47,0)
 I SDWLSC2=50!(SDWLSC2>50) S DR="15////^S X=1" D ^DIE
"RTN","SDWLQSC",48,0)
 K DA,DR,X,DIE
"RTN","SDWLQSC",49,0)
 Q
"RTN","SDWLQSC",50,0)
SET1 ;Set temporary file for message.
"RTN","SDWLQSC",51,0)
 F SDWLI=.01,.09 S SDWLX(SDWLI)=$$GET1^DIQ(2,SDWLDFN_",",SDWLI,,"SDWLX","")
"RTN","SDWLQSC",52,0)
 S SDWLNAM=$E($G(SDWLX(.01)),1,27),SDWLSSN=$E($G(SDWLX(.09)),6,99)
"RTN","SDWLQSC",53,0)
 S SDWLSCP=$$GET1^DIQ(409.3,SDWLDA_",",15,,"SDWLSCP","")
"RTN","SDWLQSC",54,0)
 S SDWLWRT=SDWLNAM,SDWLWRT=SDWLWRT_$J(SDWLSSN,(35-$L(SDWLNAM)))
"RTN","SDWLQSC",55,0)
 S SDWLWRT=SDWLWRT_$J(SDWLSC1,8),SDWLWRT=SDWLWRT_$J(SDWLSC2,16-$L(SDWLSC1))
"RTN","SDWLQSC",56,0)
 I 'SDWLSC3 S SDWLWRT=SDWLWRT_$J(SDWLSCP,15)
"RTN","SDWLQSC",57,0)
 I SDWLSC3 S SDWLWRT=SDWLWRT_$J($S(SDWLME>1:"YES",1:"NO"),15)
"RTN","SDWLQSC",58,0)
 I SDWLSC3 S ^TMP("SDWLQSC2",$J,SDWLDFN)=SDWLWRT Q
"RTN","SDWLQSC",59,0)
 S ^TMP("SDWLQSC1",$J,SDWLDFN)=SDWLWRT
"RTN","SDWLQSC",60,0)
 Q
"RTN","SDWLQSC",61,0)
EN2 ;Part 2 - checks status of appts linked to closed EWL entries.
"RTN","SDWLQSC",62,0)
 S (IEN,DFN,APPT,WLAPPT,CLINIC,SDAPPT,WLSTAT,STATUS,NN,SDFORM)=""
"RTN","SDWLQSC",63,0)
 F  S DFN=$O(^SDWL(409.3,"B",DFN)) Q:DFN<1  D
"RTN","SDWLQSC",64,0)
 .S IEN="" F  S IEN=$O(^SDWL(409.3,"B",DFN,IEN)) Q:IEN<1  D
"RTN","SDWLQSC",65,0)
 ..S STATUS="" S STATUS=$$GET1^DIQ(409.3,IEN_",",23,"I") IF STATUS="C" D
"RTN","SDWLQSC",66,0)
 ...IF $G(^SDWL(409.3,IEN,"SDAPT")) D
"RTN","SDWLQSC",67,0)
 ....S CLINIC=$$GET1^DIQ(409.3,IEN_",",13.2,"I") IF CLINIC>0 D
"RTN","SDWLQSC",68,0)
 .....S WLAPPT=$$GET1^DIQ(409.3,IEN_",",13,"I"),WLSTAT=$$GET1^DIQ(409.3,IEN_",",21,"I") IF WLSTAT="SA" D APPT(CLINIC,IEN)
"RTN","SDWLQSC",69,0)
 IF $D(^TMP("SDWLQSC3",$J)) D MESS2^SDWLMSG
"RTN","SDWLQSC",70,0)
 D EN3
"RTN","SDWLQSC",71,0)
 Q
"RTN","SDWLQSC",72,0)
APPT(CLINIC,IEN) ;
"RTN","SDWLQSC",73,0)
 S (SDREC,SDARRAY)=""
"RTN","SDWLQSC",74,0)
 S SDARRAY(1)=WLAPPT_";"_WLAPPT
"RTN","SDWLQSC",75,0)
 S SDARRAY(4)=DFN
"RTN","SDWLQSC",76,0)
 S SDARRAY("FLDS")="3;2;4;1"
"RTN","SDWLQSC",77,0)
 S SDREC=$$SDAPI^SDAMA301(.SDARRAY)
"RTN","SDWLQSC",78,0)
 IF SDREC>0 D
"RTN","SDWLQSC",79,0)
 .S (CL,SDC,SDDFN,SDNAM,SDAPPT,SDAPPST,NN)=""
"RTN","SDWLQSC",80,0)
 .S CL=$O(^TMP($J,"SDAMA301",DFN,"")) Q:CL=""  ;Current Clinic
"RTN","SDWLQSC",81,0)
 .S SDAPPST=$P($G(^TMP($J,"SDAMA301",DFN,CL,WLAPPT)),"^",3),SDAPPST=$P(SDAPPST,";")  ;Appt Status
"RTN","SDWLQSC",82,0)
 .I CL'=CLINIC!(SDAPPST="CC") D
"RTN","SDWLQSC",83,0)
 ..S SDDFN=$P($G(^TMP($J,"SDAMA301",DFN,CL,WLAPPT)),"^",4) IF SDDFN'="" S SDNAM=$P($G(SDDFN),";",2),SDNAM=$E(SDNAM,1,30)
"RTN","SDWLQSC",84,0)
 ..S SDC=$P($G(^TMP($J,"SDAMA301",DFN,CL,WLAPPT)),"^",2)
"RTN","SDWLQSC",85,0)
 ..S SDC=$$GET1^DIQ(44,CL_",",.01),SDC=$E(SDC,1,25)
"RTN","SDWLQSC",86,0)
 ..S Y=WLAPPT D DD^%DT S SDAPPT=Y
"RTN","SDWLQSC",87,0)
 ..IF CL'=CLINIC S SDC=SDC_"(new)"  ;to distinguish another clinic"
"RTN","SDWLQSC",88,0)
 ..S SDFORM=$$FORM^SDFORM(SDNAM,32,SDC,27,SDAPPT,21)
"RTN","SDWLQSC",89,0)
 ..S NN=NN+1,^TMP("SDWLQSC3",$J,NN)=SDFORM
"RTN","SDWLQSC",90,0)
 ..S DIE="^SDWL(409.3,",DA=IEN,DR="23////^S X=""O""" D ^DIE
"RTN","SDWLQSC",91,0)
 ..S DR="13.8////^S X=""CC""" D ^DIE
"RTN","SDWLQSC",92,0)
 ..S DR="29////^S X=""CA""" D ^DIE
"RTN","SDWLQSC",93,0)
 ..S DR="19///@" D ^DIE
"RTN","SDWLQSC",94,0)
 ..S DR="20///@" D ^DIE
"RTN","SDWLQSC",95,0)
 ..S DR="21///@" D ^DIE
"RTN","SDWLQSC",96,0)
 Q
"RTN","SDWLQSC",97,0)
EN3 ;Inactive clinics
"RTN","SDWLQSC",98,0)
 S (CIEN,IEN,APPT,DFN,WLSTAT,SDCL,SDIEN,CC,SDREACT,SDINACT,CLINICS,SDFORM)=""
"RTN","SDWLQSC",99,0)
 F  S CIEN=$O(^SDWL(409.3,"SC",CIEN)) Q:CIEN<1  S CC=0 D
"RTN","SDWLQSC",100,0)
 .S SDINACT=$$GET1^DIQ(44,CIEN_",",2505,"I"),SDREACT=$$GET1^DIQ(44,CIEN_",",2506,"I")
"RTN","SDWLQSC",101,0)
 .Q:SDINACT=""&(SDREACT="")  D 
"RTN","SDWLQSC",102,0)
 ..S IEN="" F  S IEN=$O(^SDWL(409.3,"SC",CIEN,IEN)) Q:IEN<1  S WLSTAT=$$GET1^DIQ(409.3,IEN_",",23,"I") D
"RTN","SDWLQSC",103,0)
 ...Q:WLSTAT'="O"
"RTN","SDWLQSC",104,0)
 ...Q:SDINACT<SDREACT&((SDREACT+.01)>DT)
"RTN","SDWLQSC",105,0)
 ...Q:SDINACT<DT&(SDREACT>SDINACT)
"RTN","SDWLQSC",106,0)
 ...Q:SDINACT>(DT+.01)
"RTN","SDWLQSC",107,0)
 ...S CC=CC+1
"RTN","SDWLQSC",108,0)
 .IF CC>0 D
"RTN","SDWLQSC",109,0)
 ..S CLINIC=$$GET1^DIQ(44,CIEN_",",.01),CLINIC=$E(CLINIC,1,30)
"RTN","SDWLQSC",110,0)
 ..S SDFORM=$$FORM^SDFORM(CLINIC,40,CC,20),^TMP("SDWLQSC4",$J,CIEN)=SDFORM
"RTN","SDWLQSC",111,0)
 ..S REC="",REC=$O(^SDWL(409.32,"B",CIEN,REC),-1)
"RTN","SDWLQSC",112,0)
 ..IF REC'="" D
"RTN","SDWLQSC",113,0)
 ...S SDINACT=$$GET1^DIQ(44,CIEN_",",2505,"I")
"RTN","SDWLQSC",114,0)
 ...S DIE="^SDWL(409.32,",DA=REC,DR="3////^S X=SDINACT" D ^DIE
"RTN","SDWLQSC",115,0)
 ...S DR="4////^S X=.5" D ^DIE
"RTN","SDWLQSC",116,0)
 IF $D(^TMP("SDWLQSC4",$J)) D MESS3^SDWLMSG
"RTN","SDWLQSC",117,0)
 D EN4
"RTN","SDWLQSC",118,0)
 Q
"RTN","SDWLQSC",119,0)
EN4 ;PCMM Team inactivated
"RTN","SDWLQSC",120,0)
 S (IEN,TIEN,TEAM,TEAMN,DFN,CC,STATUS,WLOPEN,SDFORM)="" S CC="0"
"RTN","SDWLQSC",121,0)
 F  S TEAM=$O(^SDWL(409.3,"D",TEAM)) Q:TEAM<1  S CC=0 D
"RTN","SDWLQSC",122,0)
 .S IEN="" F  S IEN=$O(^SDWL(409.3,"D",TEAM,IEN)) Q:IEN<1  S WLOPEN=$$GET1^DIQ(409.3,IEN_",",23,"I") D
"RTN","SDWLQSC",123,0)
 ..Q:WLOPEN="C"  S TIEN="",TIEN=$O(^SCTM(404.58,"B",TEAM,TIEN),-1) IF TIEN'="" D
"RTN","SDWLQSC",124,0)
 ...S STATUS=$$GET1^DIQ(404.58,TIEN_",",.03,"I")
"RTN","SDWLQSC",125,0)
 ...Q:STATUS="1"
"RTN","SDWLQSC",126,0)
 ...IF STATUS="0" S CC=CC+1
"RTN","SDWLQSC",127,0)
 .IF CC>0 D 
"RTN","SDWLQSC",128,0)
 ..S TEAMN=$$GET1^DIQ(404.51,TEAM_",",.01) S TEAMN=$E(TEAMN,1,30)
"RTN","SDWLQSC",129,0)
 ..S SDFORM=$$FORM^SDFORM(TEAMN,40,CC,20),^TMP("SDWLQSC5",$J,TEAM)=SDFORM
"RTN","SDWLQSC",130,0)
 IF $D(^TMP("SDWLQSC5",$J)) D MESS4^SDWLMSG
"RTN","SDWLQSC",131,0)
 D EN5
"RTN","SDWLQSC",132,0)
 Q
"RTN","SDWLQSC",133,0)
EN5 ;PCMM Position inactivated
"RTN","SDWLQSC",134,0)
 S (IEN,PIEN,POS,POSN,STATUS,WLOPEN,SDWLPOS,SDFORM,TEAM)=""
"RTN","SDWLQSC",135,0)
 S SDWLPOS="" F  S IEN=$O(^SDWL(409.3,"SP",IEN)) Q:IEN<1  D
"RTN","SDWLQSC",136,0)
 .S POS="" F  S POS=$O(^SDWL(409.3,"SP",IEN,POS)) Q:POS<1  D
"RTN","SDWLQSC",137,0)
 ..S WLOPEN=$$GET1^DIQ(409.3,IEN_",",23,"I")
"RTN","SDWLQSC",138,0)
 ..Q:WLOPEN="C"
"RTN","SDWLQSC",139,0)
 ..S PIEN="",PIEN=$O(^SCTM(404.59,"B",POS,PIEN),-1) IF PIEN'="" D
"RTN","SDWLQSC",140,0)
 ... S POSN=$$GET1^DIQ(404.57,POS_",",.01)
"RTN","SDWLQSC",141,0)
 ...IF PIEN'="" S STATUS=$$GET1^DIQ(404.59,PIEN_",",.03,"I")
"RTN","SDWLQSC",142,0)
 ...Q:STATUS="1"
"RTN","SDWLQSC",143,0)
 ...IF STATUS="0" D
"RTN","SDWLQSC",144,0)
 ....S:'$D(SDWLPOS(POS)) SDWLPOS(POS)=0 S SDWLPOS(POS)=SDWLPOS(POS)+1,POSN=$E(POSN,1,30)
"RTN","SDWLQSC",145,0)
 ....S TEAM=$$GET1^DIQ(404.57,POS_",",.02),TEAM=$E(TEAM,1,25)
"RTN","SDWLQSC",146,0)
 ....S SDFORM=$$FORM^SDFORM(POSN,32,TEAM,27,SDWLPOS(POS),21)
"RTN","SDWLQSC",147,0)
 ....S ^TMP("SDWLQSC6",$J,POS)=SDFORM
"RTN","SDWLQSC",148,0)
 IF $D(^TMP("SDWLQSC6",$J)) D MESS5^SDWLMSG
"RTN","SDWLQSC",149,0)
 D EN6
"RTN","SDWLQSC",150,0)
 Q
"RTN","SDWLQSC",151,0)
EN6 ;Date of Death
"RTN","SDWLQSC",152,0)
 S (IEN,SDDFN,DIS,DOD,NAME)=""
"RTN","SDWLQSC",153,0)
 F  S SDDFN=$O(^SDWL(409.3,"B",SDDFN)) Q:SDDFN<1  D
"RTN","SDWLQSC",154,0)
 .S IEN="" F  S IEN=$O(^SDWL(409.3,"B",SDDFN,IEN)) Q:IEN<1  D
"RTN","SDWLQSC",155,0)
 ..S DIS=$$GET1^DIQ(409.3,IEN_",",21,"I") IF DIS="D" D
"RTN","SDWLQSC",156,0)
 ...S DOD=$$GET1^DIQ(2,SDDFN_",",.351) Q:DOD'=""  D
"RTN","SDWLQSC",157,0)
 ....S DIE="^SDWL(409.3,",DA=IEN,DR="23////^S X=""O""" D ^DIE
"RTN","SDWLQSC",158,0)
 ....S DR="19///@" D ^DIE
"RTN","SDWLQSC",159,0)
 ....S DR="20///@" D ^DIE
"RTN","SDWLQSC",160,0)
 ....S DR="21///@" D ^DIE
"RTN","SDWLQSC",161,0)
 ....S DR="29////^S X=""DE""" D ^DIE
"RTN","SDWLQSC",162,0)
 ....S NAME=$$GET1^DIQ(2,SDDFN_",",.01) S ^TMP("SDWLQSC7",$J,SDDFN)=NAME
"RTN","SDWLQSC",163,0)
 IF $D(^TMP("SDWLQSC7",$J)) D MESS6^SDWLMSG
"RTN","SDWLQSC",164,0)
 D EN7
"RTN","SDWLQSC",165,0)
 Q
"RTN","SDWLQSC",166,0)
EN7 ;PCMM Team open slots
"RTN","SDWLQSC",167,0)
 S (IEN,TIEN,TEAMN,CC,WLOPEN,MAX,AVAL,SDFORM,TEAM,STATUS)=""
"RTN","SDWLQSC",168,0)
 F  S TEAM=$O(^SDWL(409.3,"D",TEAM)) Q:TEAM<1  S CC=0 D
"RTN","SDWLQSC",169,0)
 .S IEN="" F  S IEN=$O(^SDWL(409.3,"D",TEAM,IEN)) Q:IEN<1  S WLOPEN=$$GET1^DIQ(409.3,IEN_",",23,"I") D
"RTN","SDWLQSC",170,0)
 ..Q:WLOPEN="C"  S CC=CC+1
"RTN","SDWLQSC",171,0)
 .IF CC>0 D
"RTN","SDWLQSC",172,0)
 ..S TIEN="",TIEN=$O(^SCTM(404.58,"B",TEAM,TIEN),-1) IF TIEN'="" D
"RTN","SDWLQSC",173,0)
 ...S STATUS=$$GET1^DIQ(404.58,TIEN_",",.03,"I")
"RTN","SDWLQSC",174,0)
 ...Q:STATUS="0"
"RTN","SDWLQSC",175,0)
 ...S MAX=$$GET1^DIQ(404.51,TEAM_",",.08)
"RTN","SDWLQSC",176,0)
 ...S TEAMC=$$TEAMCNT^SCAPMCU1(TEAM,DT)
"RTN","SDWLQSC",177,0)
 ...Q:(TEAMC+.01)>MAX  S AVAL=MAX-TEAMC,TEAMN=$$GET1^DIQ(404.51,TEAM_",",.01)
"RTN","SDWLQSC",178,0)
 ...S TEAMN=$E(TEAMN,1,30),SDFORM=$$FORM^SDFORM(TEAMN,35,AVAL,22,CC,12)
"RTN","SDWLQSC",179,0)
 ...S ^TMP("SDWLQSC8",$J,TIEN)=SDFORM
"RTN","SDWLQSC",180,0)
 ...Q
"RTN","SDWLQSC",181,0)
 IF $D(^TMP("SDWLQSC8",$J)) D
"RTN","SDWLQSC",182,0)
 .S SDFORM=$$FORM^SDFORM("TEAM",35,"SLOTS AVAILIABLE",22,"EWL ENTRIES",12)
"RTN","SDWLQSC",183,0)
 .S ^TMP("SDWLQSC8",$J,.06)=SDFORM
"RTN","SDWLQSC",184,0)
 .D MESS7^SDWLMSG
"RTN","SDWLQSC",185,0)
 D EN8
"RTN","SDWLQSC",186,0)
 Q
"RTN","SDWLQSC",187,0)
EN8 ;PCMM Position open slots
"RTN","SDWLQSC",188,0)
 S (IEN,PIEN,POS,POSN,STATUS,WLOPEN,EDATE,SDWLPOS,SDWL,SDFORM)="" K SDWLPOS
"RTN","SDWLQSC",189,0)
 S SDWLPOS="" F  S IEN=$O(^SDWL(409.3,"SP",IEN)) Q:IEN<1  D
"RTN","SDWLQSC",190,0)
 .S POS="" F  S POS=$O(^SDWL(409.3,"SP",IEN,POS)) Q:POS<1  D
"RTN","SDWLQSC",191,0)
 ..S PIEN="",PIEN=$O(^SCTM(404.59,"B",POS,PIEN),-1) IF PIEN'="" D
"RTN","SDWLQSC",192,0)
 ...S STATUS=$$GET1^DIQ(404.59,PIEN_",",.03,"I")
"RTN","SDWLQSC",193,0)
 ...S WLOPEN=$$GET1^DIQ(409.3,IEN_",",23,"I"),EDATE=$$GET1^DIQ(404.59,PIEN_",",.02,"I")
"RTN","SDWLQSC",194,0)
 ...Q:WLOPEN="C"
"RTN","SDWLQSC",195,0)
 ...Q:((EDATE+.01)<DT&(STATUS="0"))
"RTN","SDWLQSC",196,0)
 ...S:'$D(SDWLPOS(POS)) SDWLPOS(POS)=0 S SDWLPOS(POS)=SDWLPOS(POS)+1
"RTN","SDWLQSC",197,0)
 ...Q
"RTN","SDWLQSC",198,0)
 S (IEN,POS,POSN,MAX,AVAL,CC,TEAM)=""
"RTN","SDWLQSC",199,0)
 F  S POS=$O(SDWLPOS(POS)) Q:POS<1  D
"RTN","SDWLQSC",200,0)
 .S MAX=$$GET1^DIQ(404.57,POS_",",.08),SDWL=$$PCPOSCNT^SCAPMCU1(POS,DT)
"RTN","SDWLQSC",201,0)
 .Q:(SDWL+.01)>MAX
"RTN","SDWLQSC",202,0)
 .S TEAM=$$GET1^DIQ(404.57,POS_",",.02),TEAM=$E(TEAM,1,23)
"RTN","SDWLQSC",203,0)
 .S AVAL=MAX-SDWL,POSN=$$GET1^DIQ(404.57,POS_",",.01)
"RTN","SDWLQSC",204,0)
 .S POSN=$E(POSN,1,23),SDFORM=$$FORM^SDFORM(POSN,25,TEAM,25,AVAL,14,SDWLPOS(POS),11)
"RTN","SDWLQSC",205,0)
 .S ^TMP("SDWLQSC9",$J,POS)=SDFORM
"RTN","SDWLQSC",206,0)
 IF $D(^TMP("SDWLQSC9",$J)) D
"RTN","SDWLQSC",207,0)
 .S SDFORM=$$FORM^SDFORM("POSITION",25,"TEAM",25,"SLOTS AVAIL",14,"EWL ENTRIES",11)
"RTN","SDWLQSC",208,0)
 .S ^TMP("SDWLQSC9",$J,.06)=SDFORM
"RTN","SDWLQSC",209,0)
 .D MESS8^SDWLMSG
"RTN","SDWLQSC",210,0)
 Q
"RTN","SDWLRPT1")
0^6^B43599634
"RTN","SDWLRPT1",1,0)
SDWLRPT1 ;;IOFO BAY PINES/TEH - WAIT LIST REPORT FORMAT 1;06/12/2002 ; 29 Aug 2002  2:54 PM
"RTN","SDWLRPT1",2,0)
 ;;5.3;scheduling;**263,399,394**;AUG 13 1993
"RTN","SDWLRPT1",3,0)
 ;
"RTN","SDWLRPT1",4,0)
 ;
"RTN","SDWLRPT1",5,0)
 ;******************************************************************
"RTN","SDWLRPT1",6,0)
 ;                             CHANGE LOG
"RTN","SDWLRPT1",7,0)
 ;                                               
"RTN","SDWLRPT1",8,0)
 ;   DATE                        PATCH                   DESCRIPTION
"RTN","SDWLRPT1",9,0)
 ;   ----                        -----                   -----------
"RTN","SDWLRPT1",10,0)
 ;   
"RTN","SDWLRPT1",11,0)
 ;   
"RTN","SDWLRPT1",12,0)
 ;   
"RTN","SDWLRPT1",13,0)
 ;
"RTN","SDWLRPT1",14,0)
EN D INIT
"RTN","SDWLRPT1",15,0)
 I $$S^%ZTLOAD G END
"RTN","SDWLRPT1",16,0)
 D SORT
"RTN","SDWLRPT1",17,0)
 I $$S^%ZTLOAD G END
"RTN","SDWLRPT1",18,0)
 D PRINT
"RTN","SDWLRPT1",19,0)
 I $$S^%ZTLOAD G END
"RTN","SDWLRPT1",20,0)
 K ^TMP("SDWLRPT1",$J),^TMP("SDWLRQ1",$J)
"RTN","SDWLRPT1",21,0)
 Q
"RTN","SDWLRPT1",22,0)
INIT ;Initialize variables
"RTN","SDWLRPT1",23,0)
 ;
"RTN","SDWLRPT1",24,0)
 I $D(CT1) S SDWLCT1=CT1
"RTN","SDWLRPT1",25,0)
 I $D(CT2) S SDWLCT2=CT2
"RTN","SDWLRPT1",26,0)
 I $D(DATE) S SDWLDATE=DATE
"RTN","SDWLRPT1",27,0)
 I $D(FORM) S SDWLFORM=FORM
"RTN","SDWLRPT1",28,0)
 I $D(INS) S SDWLINS=INS
"RTN","SDWLRPT1",29,0)
 I $D(OPEN) S SDWLOPEN=OPEN
"RTN","SDWLRPT1",30,0)
 S SDWLPG=0
"RTN","SDWLRPT1",31,0)
 I $D(ZTSAVE) D
"RTN","SDWLRPT1",32,0)
 .F SDWLI="CT1","CT2","DATE","FORM","INS","OPEN" S SDWL="SDWL"_SDWLI,@SDWL=$G(ZTSAVE(SDWLI))
"RTN","SDWLRPT1",33,0)
 I SDWLINS="ALL" S SDWLIN("ALL")=""
"RTN","SDWLRPT1",34,0)
 S SDWLTXP=$P(SDWLCT1,U,3)
"RTN","SDWLRPT1",35,0)
 S SDWLOPEN=$S(SDWLOPEN=1:"O",1:"C")
"RTN","SDWLRPT1",36,0)
 I SDWLINS'="ALL" F SDWLI=1:1 S SDWLIN=$P($P(SDWLINS,";",SDWLI),U,1) Q:SDWLIN=""  S SDWLIN(SDWLIN)="",^TMP("SDWLRPT1",$J,$P(^DIC(4,SDWLIN,0),U,1))=0
"RTN","SDWLRPT1",37,0)
 I SDWLCT2'="ALL" F SDWLI=1:1 S SDWLCT=$P($P(SDWLCT2,";",SDWLI),U,1) Q:SDWLCT=""  S SDWLCT2(SDWLCT)=""
"RTN","SDWLRPT1",38,0)
 I SDWLDATE="ALL" S SDWLBD=0,SDWLED=9999999 G INIT1
"RTN","SDWLRPT1",39,0)
 S SDWLBD=$P(SDWLDATE,U,1),SDWLED=$P(SDWLDATE,U,2)
"RTN","SDWLRPT1",40,0)
INIT1 D NOW^%DTC S Y=% D DD^%DT S SDWLDTP=$P(Y,":",1,2)
"RTN","SDWLRPT1",41,0)
 Q
"RTN","SDWLRPT1",42,0)
SORT ;Sort Records
"RTN","SDWLRPT1",43,0)
 S SDWLDA=0,SDWLCNT=0 F  S SDWLDA=$O(^SDWL(409.3,SDWLDA)) Q:SDWLDA<1  D
"RTN","SDWLRPT1",44,0)
 .S SDWLX=$G(^SDWL(409.3,SDWLDA,0)),SDWLERR=0,SDWLDFN=+SDWLX
"RTN","SDWLRPT1",45,0)
 .;-Check for Institution Sort
"RTN","SDWLRPT1",46,0)
 .I SDWLINS'="ALL" D
"RTN","SDWLRPT1",47,0)
 ..I '$D(SDWLIN(+$P(SDWLX,U,3))) S SDWLERR=1 Q
"RTN","SDWLRPT1",48,0)
 .;-Check for Date Range Compliance
"RTN","SDWLRPT1",49,0)
 .I $P(SDWLX,U,16)<SDWLBD!($P(SDWLX,U,16)>SDWLED) S SDWLERR=2 Q
"RTN","SDWLRPT1",50,0)
 .S SDWLTYP=$P(SDWLCT1,U,1),SDWLTYPE=$S(SDWLTYP="C":$P(SDWLX,U,9),1:$P(SDWLX,U,8)) I SDWLTYPE="" S SDWLERR=7 Q
"RTN","SDWLRPT1",51,0)
 .I SDWLCT2'="ALL" D
"RTN","SDWLRPT1",52,0)
 ..I '$D(SDWLCT2(SDWLTYPE)) S SDWLERR=3
"RTN","SDWLRPT1",53,0)
 .I SDWLTYP="" S SDWLERR=4 Q
"RTN","SDWLRPT1",54,0)
 .I $P(SDWLX,U,3)=""!($P(SDWLX,U,16)="") S SDWLERR=5 Q
"RTN","SDWLRPT1",55,0)
 .I SDWLOPEN'["C",$P(SDWLX,U,17)'[SDWLOPEN S SDWLERR=6 Q
"RTN","SDWLRPT1",56,0)
 .Q:SDWLERR  D
"RTN","SDWLRPT1",57,0)
 ..S SDWLSCC=2,DFN=SDWLDFN D ELIG^VADPT I $D(VAEL(3)) S SDWLSCN=$P(VAEL(3),U,2) I SDWLSCN>49 S SDWLSCC=1
"RTN","SDWLRPT1",58,0)
 ..S SDWLF=$P(SDWLCT1,U,2)
"RTN","SDWLRPT1",59,0)
 ..S SDWLIENS=$P(SDWLX,U,3)_",",X=$$GET1^DIQ(4,SDWLIENS,".01")
"RTN","SDWLRPT1",60,0)
 ..S SDWLSIEN=SDWLTYPE_",",Y=$$GET1^DIQ(SDWLF,SDWLSIEN,".01")
"RTN","SDWLRPT1",61,0)
 ..S ^TMP("SDWLRPT1",$J,X,Y,SDWLSCC,+$P(SDWLX,U,16),SDWLDA)=""
"RTN","SDWLRPT1",62,0)
 ..S SDWLCNT=SDWLCNT+1,^TMP("SDWLRPT1",$J,$P(^DIC(4,+$P(SDWLX,U,3),0),U,1))=SDWLCNT
"RTN","SDWLRPT1",63,0)
 Q
"RTN","SDWLRPT1",64,0)
PRINT ;Print Report
"RTN","SDWLRPT1",65,0)
 N DFN
"RTN","SDWLRPT1",66,0)
 D HD S SDWLCNT=0 I '$D(^TMP("SDWLRPT1",$J)) W !!,?80-$L("*** No Patient Records to Report ***")\2,"*** No Patient Records to Report ***" Q
"RTN","SDWLRPT1",67,0)
 S SDWLA="" F  S SDWLA=$O(^TMP("SDWLRPT1",$J,SDWLA)) G END:$$S^%ZTLOAD Q:SDWLA=""  D  Q:$D(DUOUT)
"RTN","SDWLRPT1",68,0)
 .D LINE W !!,"Institution: " S X=SDWLA W X I '$G(^TMP("SDWLRPT1",$J,SDWLA)) W !!,"*** No Patient Records to Report ***"
"RTN","SDWLRPT1",69,0)
 .S SDWLB="" F  S SDWLB=$O(^TMP("SDWLRPT1",$J,SDWLA,SDWLB)) Q:SDWLB=""  D  Q:$D(DUOUT)
"RTN","SDWLRPT1",70,0)
 ..W !!,"Clinic/Service: " S X=SDWLB W X,! Q:$D(DUOUT)
"RTN","SDWLRPT1",71,0)
 ..S SDWLC="" F  S SDWLC=$O(^TMP("SDWLRPT1",$J,SDWLA,SDWLB,SDWLC)) Q:SDWLC=""  D  Q:$D(DUOUT)
"RTN","SDWLRPT1",72,0)
 ...S SDWLD="" F  S SDWLD=$O(^TMP("SDWLRPT1",$J,SDWLA,SDWLB,SDWLC,SDWLD)) Q:SDWLD=""  D  Q:$D(DUOUT)
"RTN","SDWLRPT1",73,0)
 ....S SDWLE="" F  S SDWLE=$O(^TMP("SDWLRPT1",$J,SDWLA,SDWLB,SDWLC,SDWLD,SDWLE)) Q:SDWLE=""  D  Q:$D(DUOUT)
"RTN","SDWLRPT1",74,0)
 .....S SDWLDFN=$P($G(^SDWL(409.3,SDWLE,0)),U,1),DFN=SDWLDFN D DEM^VADPT,ELIG^VADPT,ADD^VADPT
"RTN","SDWLRPT1",75,0)
 .....S SDWLNAM=VADM(1),SDWLELIG=VAEL(1) I SDWLELIG="" S SDWLELIG=0
"RTN","SDWLRPT1",76,0)
 .....I SDWLELIG=0 S SDWLELIG="No Eligibility Status found"
"RTN","SDWLRPT1",77,0)
 .....S SDWLDEAD=1
"RTN","SDWLRPT1",78,0)
 .....S SDWLSSN=VA("BID"),SDWLAPTD=$P(^SDWL(409.3,SDWLE,0),U,16),SDWLCOM=$P(^SDWL(409.3,SDWLE,0),U,18)
"RTN","SDWLRPT1",79,0)
 .....S SDWLRBY=$P(^SDWL(409.3,SDWLE,0),U,12),SDWLRPV=$P(^SDWL(409.3,SDWLE,0),U,13)
"RTN","SDWLRPT1",80,0)
 .....S SDWLPH=$G(VAPA(8)) I SDWLAPTD'="" S Y=SDWLAPTD D DD^%DT S SDWLAPTD=Y
"RTN","SDWLRPT1",81,0)
 .....W !!,SDWLNAM
"RTN","SDWLRPT1",82,0)
 .....W ?35,SDWLSSN I SDWLAPTD'="" W ?50,"Desired Date: ",SDWLAPTD
"RTN","SDWLRPT1",83,0)
 .....W !,"Primary Eligibility: ",$P(SDWLELIG,U,2)
"RTN","SDWLRPT1",84,0)
 .....;PATCH SD*5.3*394 See Note.
"RTN","SDWLRPT1",85,0)
 .....N SDWLSCP
"RTN","SDWLRPT1",86,0)
 .....W !,"Service Connected Priority: " S SDWLSCP=$$GET1^DIQ(409.3,SDWLE_",",15,"I") W $S(SDWLSCP=1:"YES",1:"NO")
"RTN","SDWLRPT1",87,0)
 .....W !,"Comments: ",SDWLCOM,!
"RTN","SDWLRPT1",88,0)
 .....I SDWLRBY W !,"Requested by: ",$$EXTERNAL^DILFD(409.3,11,,SDWLRBY)
"RTN","SDWLRPT1",89,0)
 .....I SDWLRPV W ?35,"Requesting Provider: " S X=$$EXTERNAL^DILFD(409.3,12,,SDWLRPV) W X
"RTN","SDWLRPT1",90,0)
 .....W !,"Telephone (Home): ",$P(SDWLPH,U,1) I $P(SDWLPH,U,2) W !,?10,"(Work): ",$P(SDWLPH,U,2)
"RTN","SDWLRPT1",91,0)
 .....I $D(^SDWL(409.3,SDWLE,"DIS")) D
"RTN","SDWLRPT1",92,0)
 ......S SDWLDISX=$G(^SDWL(409.3,SDWLE,"DIS")),SDWLDIS=$P(SDWLDISX,U,3),SDWLDDUZ=$P(SDWLDISX,U,2)
"RTN","SDWLRPT1",93,0)
 ......S SDWLDDT=$P(^SDWL(409.3,SDWLE,"DIS"),U,1),SDWLDIDT=$E(SDWLDDT,4,5)_"/"_$E(SDWLDDT,6,7)_"/"_$E(SDWLDDT,2,3)
"RTN","SDWLRPT1",94,0)
 .....I $D(SDWLDISX) W !,"Disposition: ",$P(SDWLDISX,U,3)," (",SDWLDIDT,")" K SDWLDISX,SDWLDIS,SDWLDDUZ,SDWLDIDT
"RTN","SDWLRPT1",95,0)
 .....W !,"*****"
"RTN","SDWLRPT1",96,0)
 .....I $D(SDWLSPT),$Y>IOSL S DIR(0)="E" D ^DIR I X["^" S DUOUT=1 Q
"RTN","SDWLRPT1",97,0)
 .....I '$D(SDWLSPT),'$D(DUOUT),$Y>(IOSL-5) D HD
"RTN","SDWLRPT1",98,0)
 W !!,"** End of Report **"
"RTN","SDWLRPT1",99,0)
 Q
"RTN","SDWLRPT1",100,0)
LINE ;Draw Line
"RTN","SDWLRPT1",101,0)
 W !,"_______________________________________________________________________________"
"RTN","SDWLRPT1",102,0)
 Q
"RTN","SDWLRPT1",103,0)
HD ;Header
"RTN","SDWLRPT1",104,0)
 W:$D(IOF) @IOF W !,SDWLDTP,?80-$L("Appointment Wait List Report")\2,"Appointment Wait List Report"
"RTN","SDWLRPT1",105,0)
 S SDWLPG=SDWLPG+1 W ?72,"Page: ",SDWLPG
"RTN","SDWLRPT1",106,0)
 W !!,?30,"Institution: " I SDWLINS="ALL" D
"RTN","SDWLRPT1",107,0)
 .W ?45,SDWLINS
"RTN","SDWLRPT1",108,0)
 F I=1:1 S X=$P($P(SDWLINS,";",I),"^",2) Q:X=""  W:I>1 ! W ?45,X
"RTN","SDWLRPT1",109,0)
 S Y=$P(SDWLDATE,U,1) D DD^%DT S SDWLBDT=Y S Y=$P(SDWLDATE,U,2) D DD^%DT S SDWLEDT=Y
"RTN","SDWLRPT1",110,0)
 W !,?23,"Date Desired Range: ",SDWLBDT
"RTN","SDWLRPT1",111,0)
 I SDWLEDT'="" W " to ",SDWLEDT
"RTN","SDWLRPT1",112,0)
 S X=$P(SDWLCT2,U,2)
"RTN","SDWLRPT1",113,0)
 W !?26,"Report Category: ",$S($P(SDWLCT1,U,1)="C":"CLINIC",1:"SPECIALTY") I X="ALL" W " ALL"
"RTN","SDWLRPT1",114,0)
 S SDWLF=$P(SDWLCT1,U,1)
"RTN","SDWLRPT1",115,0)
 I X'="ALL" D
"RTN","SDWLRPT1",116,0)
 .F I=1:1 S X=$P($P(SDWLCT2,";",I),"^",2) Q:X=""  W !,?45,$S(SDWLF="C":$P(^SC(X,0),U,1),1:$P(^DIC(40.7,X,0),U,1))
"RTN","SDWLRPT1",117,0)
 S X=$G(SDWLOPEN) W !,?35,"Status: ",$S(SDWLOPEN="O":"Open",1:"All")
"RTN","SDWLRPT1",118,0)
 S X=$G(SDWLFORM) W !,?28,"Output Format: ",$S(SDWLFORM="S":"Summary",1:"Detailed")
"RTN","SDWLRPT1",119,0)
 Q
"RTN","SDWLRPT1",120,0)
END K SDWL,SDWLA,SDWLAPTD,SDWLB,SDWLBD,SDWLBDT,SDWLC,SDWLCAT,SDWLCNT,SDWLCOM,SDWLCT1,SDWLCT2,SDWLCTX,SDWLD
"RTN","SDWLRPT1",121,0)
 K SDLWDA,SDLWDEAD,SDWLDFN,SDWLE,SDWLEDT,SDWLELIG,SDWLERR,SDWLF,SDWLFD,SDWLI,SDWLIN,SDWLINS,SDWLINST
"RTN","SDWLRPT1",122,0)
 K SDWLNAM,SDWLPD,SDWLPG,SDWLPH,SDWLPROM,SDWLRBY,SDWLPRV,SDWLSCC,SDWLSPT,SDWLSSN,SDWLTAG,SDLTK,SDWLTXP
"RTN","SDWLRPT1",123,0)
 K SDWLTYP,SDWLTYPE,SDWLX,VDAM,VAPA,SDWLIENS,CT1,CT2,DATE,I,INS,OPEN,FORM,SDWLSIEN
"RTN","SDWLRPT1",124,0)
 D EN^SDWLKIL
"RTN","SDWLRPT1",125,0)
 Q
"RTN","SDWLSC")
0^4^B8811789
"RTN","SDWLSC",1,0)
SDWLSC ;IOFO BAY PINES/DMR - WAITING LIST-RATED DISABILITY ;09/02/2004 2:10 PM
"RTN","SDWLSC",2,0)
 ;;5.3;scheduling;**394**;SEP 02 2004
"RTN","SDWLSC",3,0)
 ;
"RTN","SDWLSC",4,0)
 ;
"RTN","SDWLSC",5,0)
 ;***********************************************************************************************************
"RTN","SDWLSC",6,0)
 ;                                       CHANGE LOG
"RTN","SDWLSC",7,0)
 ;                                                                                               
"RTN","SDWLSC",8,0)
 ;       DATE           PATCH           DESCRIPTION
"RTN","SDWLSC",9,0)
 ;       ----           -----           -----------
"RTN","SDWLSC",10,0)
 ;       12/09/2005     SD*5.3*394      New Routine for SC disabilities prompt                                                                                          
"RTN","SDWLSC",11,0)
 ;
"RTN","SDWLSC",12,0)
 ;IA Agreements:
"RTN","SDWLSC",13,0)
 ;
"RTN","SDWLSC",14,0)
 ;DBIA - 1476 For reference to PRIMARY ELIG. ^DPT(IEN,.372).
"RTN","SDWLSC",15,0)
 ;DBIA - 427  For reference to ^DIC(8).
"RTN","SDWLSC",16,0)
 ;
"RTN","SDWLSC",17,0)
 ;Variable: SDWLNSC killed in routine SDWLE113 - Routine SDWLSC called from SDWLE111.
"RTN","SDWLSC",18,0)
 ;          SDWLDFN NOT killed - referenced only. 
"RTN","SDWLSC",19,0)
 ;
"RTN","SDWLSC",20,0)
 D 2^VADPT S SDWLNSC=0
"RTN","SDWLSC",21,0)
 Q:$$GET1^DIQ(2,SDWLDFN_",",.301,"E")'="YES"
"RTN","SDWLSC",22,0)
 Q:$P(VAEL(1),"^",2)'["50%"
"RTN","SDWLSC",23,0)
 S SDWLNSC=$P($G(^SDWL(409.3,SDWLDA,"SC")),U,2)
"RTN","SDWLSC",24,0)
 W !!,"PATIENT'S SERVICE CONNECTION AND RATED DISABILITIES:"
"RTN","SDWLSC",25,0)
 IF $D(^DPT(SDWLDFN,.3)) D
"RTN","SDWLSC",26,0)
 .W !,$S($P($G(^DPT(SDWLDFN,.3)),"^",1)="Y":"SC Percent: "_$P(^(.3),"^",2)_"%",1:"Service Connected: No")
"RTN","SDWLSC",27,0)
 .W !,"Primary Eligibility Code: "_$P(VAEL(1),"^",2)
"RTN","SDWLSC",28,0)
 ;Rated Disabilities
"RTN","SDWLSC",29,0)
 N SDSER,SDRAT,SDPER,SDREC,NN,NUM,ANS S (NN,NUM)=0
"RTN","SDWLSC",30,0)
 F  S NN=$O(^DPT(SDWLDFN,.372,NN)) Q:'NN  D
"RTN","SDWLSC",31,0)
 .S SDREC=$G(^DPT(SDWLDFN,.372,NN,0)) IF SDREC'="" D
"RTN","SDWLSC",32,0)
 ..S SDRAT="" S NUM=$P($G(SDREC),"^",1) IF NUM>0 S SDRAT=$$GET1^DIQ(31,NUM_",",.01)
"RTN","SDWLSC",33,0)
 ..S SDSER="" S SDSER=$S($P(SDREC,"^",3)="1":"SC",1:"NSC")
"RTN","SDWLSC",34,0)
 ..W !,"    "_SDRAT_"  ("_SDSER_" - "_$P(SDREC,"^",2)_"%)"
"RTN","SDWLSC",35,0)
 ..Q
"RTN","SDWLSC",36,0)
 W !
"RTN","SDWLSC",37,0)
 N SDSCFLD,SDELIG S SDSCFLD=0
"RTN","SDWLSC",38,0)
 S SDELIG=$$GET1^DIQ(2,SDWLDFN_",",.301,"E")
"RTN","SDWLSC",39,0)
 IF $P(VAEL(1),U,2)="" W !,"'PRIMARY ELIGIBILITY CODE' field is blank please update patient record." S SDSCFLG=1
"RTN","SDWLSC",40,0)
 IF SDELIG="YES",($P(VAEL(3),"^",2)<50),($P(VAEL(1),"^",2)'="SC LESS THAN 50%") D
"RTN","SDWLSC",41,0)
 .W !,"The 'SC Percent','Service Connected' and 'Primary Eligibility Codes' are OUT OF SYNC, Please CORRECT the problem." S SDSCFLD=1
"RTN","SDWLSC",42,0)
 IF SDELIG="YES",($P(VAEL(3),"^",2)>49),($P(VAEL(1),"^",2)'="SERVICE CONNECTED 50% to 100%") D
"RTN","SDWLSC",43,0)
 .W !,"The 'SC Percent','Service Connected' and 'Primary Eligibility Codes' are OUT OF SYNC, Please CORRECT the problem." S SDSCFLD=1
"RTN","SDWLSC",44,0)
 IF $P($G(^DPT(SDWLDFN,.372,0)),"^",4)<1 W !,"NO SERVICE CONNECTED DISABILITIES LISTED" W !
"RTN","SDWLSC",45,0)
 D SBR
"RTN","SDWLSC",46,0)
 K SDSCFLD Q
"RTN","SDWLSC",47,0)
SBR IF $D(SDWLEDIT) Q
"RTN","SDWLSC",48,0)
 S ANS="" N X
"RTN","SDWLSC",49,0)
 S X=$$GET1^DIQ(2,SDWLDFN_",",.302) IF X>49 S SDWLNSC=1 Q
"RTN","SDWLSC",50,0)
 IF SDSCFLD=1 Q
"RTN","SDWLSC",51,0)
 R !,"IS THIS APPOINTMENT FOR A SERVICE CONNECTED CONDITION? (Y OR N): ",ANS:DTIME
"RTN","SDWLSC",52,0)
 IF ANS'="Y"&(ANS'="N") W !,*7,"ENTER (Y or N) PLEASE!" G SBR
"RTN","SDWLSC",53,0)
 I ANS["Y" S SDWLNSC=1
"RTN","SDWLSC",54,0)
 Q
"RTN","SDWLSCPE")
0^8^B24572837
"RTN","SDWLSCPE",1,0)
SDWLSCPE ;IOFO BAY PINES/TEH - EWL - EDIT SC PRIORITY ;20 Aug 2002  2:10 PM
"RTN","SDWLSCPE",2,0)
 ;;5.3;scheduling;**394**;AUG 13 1993
"RTN","SDWLSCPE",3,0)
 ;
"RTN","SDWLSCPE",4,0)
 ;
"RTN","SDWLSCPE",5,0)
 ;******************************************************************
"RTN","SDWLSCPE",6,0)
 ;                             CHANGE LOG
"RTN","SDWLSCPE",7,0)
 ;                                               
"RTN","SDWLSCPE",8,0)
 ;   DATE                        PATCH                   DESCRIPTION
"RTN","SDWLSCPE",9,0)
 ;   ----                        -----                   -----------
"RTN","SDWLSCPE",10,0)
 ;
"RTN","SDWLSCPE",11,0)
 ;12/09/2004                     SD*5.3*394              New routine to edit SC PRIORITY in SDWL(409.3,DA,"SC") Field 15
"RTN","SDWLSCPE",12,0)
 ; 
"RTN","SDWLSCPE",13,0)
 ;Variables: DFN not kill - referenced only.
"RTN","SDWLSCPE",14,0)
 ;
"RTN","SDWLSCPE",15,0)
 ;
"RTN","SDWLSCPE",16,0)
 ;
"RTN","SDWLSCPE",17,0)
EN ;Called from option file.
"RTN","SDWLSCPE",18,0)
 S SDWLERR=0 I $D(SDWLLIST),SDWLLIST D
"RTN","SDWLSCPE",19,0)
 .I '$D(DFN) S SDWLERR=1 Q
"RTN","SDWLSCPE",20,0)
 .I $D(DFN),'$D(^SDWL(409.3,"B",DFN)) D HD,1^VADPT,DEM^VADPT W !,VADM(1),?40,VA("PID"),*7,!,"This Patient has NO entries on the Electronic Wait List." S DIR(0)="E" D ^DIR S DUOUT=1 Q
"RTN","SDWLSCPE",21,0)
 I $D(DUOUT) Q
"RTN","SDWLSCPE",22,0)
 I 'SDWLERR,$D(SDWLLIST),SDWLLIST D HD S SDWLDFN=DFN K DIR,DIC,DR,DIE,VADM D 1^VADPT,DEM^VADPT W !,VADM(1),?40,VA("PID") N SDWLBDT S (SDWLBDT,SDWLEDT)="" D DIS G EN1
"RTN","SDWLSCPE",23,0)
 K DIR,DIC,DR,DIE
"RTN","SDWLSCPE",24,0)
 ;OPTION HEADER
"RTN","SDWLSCPE",25,0)
 ;
"RTN","SDWLSCPE",26,0)
 S SDWLOP=" - Edit SC Priority Patient" D HD
"RTN","SDWLSCPE",27,0)
 ;
"RTN","SDWLSCPE",28,0)
 ;PATIENT LOOK-UP FROM WAIT LIST PATIENT FILE (^SDWL(409.3,IEN,0).
"RTN","SDWLSCPE",29,0)
 ;
"RTN","SDWLSCPE",30,0)
 D PAT G END:'$D(SDWLDFN),END:SDWLDFN<0,END:SDWLDFN=""
"RTN","SDWLSCPE",31,0)
 ;
"RTN","SDWLSCPE",32,0)
 ;DISPLAY PATIENT DATA FROM ^SDWL(409.3,IEN,0).
"RTN","SDWLSCPE",33,0)
 ;
"RTN","SDWLSCPE",34,0)
 D DIS
"RTN","SDWLSCPE",35,0)
 ;PROMPT USER FOR RECORD.
"RTN","SDWLSCPE",36,0)
 ;
"RTN","SDWLSCPE",37,0)
EN1 K DIR,DIC,DIE,DR,X,Y,SDWLERR S SDWLPS=$S(SDWLCN>1:1,SDWLCN=1:2,1:0),SDWLERR=0
"RTN","SDWLSCPE",38,0)
 I SDWLPS=0 W !!,"Patient has no Wait List Entries to edit." S DIR(0)="E" D ^DIR G END
"RTN","SDWLSCPE",39,0)
 I SDWLPS=1 S DIR(0)="FOA^^" S DIR("A")="Select Wait List (1-"_SDWLCN_") or '^' to Quit? "
"RTN","SDWLSCPE",40,0)
 I SDWLPS=2 S DIR(0)="FOA^^" S DIR("A")="Edit This 'ENTRY' or '^' to Quit? Yes // "
"RTN","SDWLSCPE",41,0)
 W ! D ^DIR G END:X["^" S SDWLY=Y W !
"RTN","SDWLSCPE",42,0)
 I SDWLPS=1 D
"RTN","SDWLSCPE",43,0)
 .S SDWLERR=$S(X?1N.N:0,X?1"N".E:1,X?1"n".E:1,X="":1,X?1"Y".E:0,X?1"y".E:0,$D(DUOUT):1,X["^":1,1:2)
"RTN","SDWLSCPE",44,0)
 I $D(SDWLERR),SDWLERR=2 W *7," Invalid Entry" G EN1
"RTN","SDWLSCPE",45,0)
 I SDWLPS=2 D
"RTN","SDWLSCPE",46,0)
 .S SDWLERR=$S(X="":0,X?1"Y".E:0,X?1"y":0,X?1"N".E:1,X?1"n".E:1,X["^":1,1:2)
"RTN","SDWLSCPE",47,0)
 I SDWLERR=2 W *7," Invalid Entry" G EN1
"RTN","SDWLSCPE",48,0)
 G END:SDWLERR
"RTN","SDWLSCPE",49,0)
 I SDWLPS=2,'SDWLY S SDWLY=1
"RTN","SDWLSCPE",50,0)
 S SDWLERR=0 I SDWLY?1N.N D  G EN1:SDWLERR
"RTN","SDWLSCPE",51,0)
 .K DIR,DIC,DR
"RTN","SDWLSCPE",52,0)
 .;
"RTN","SDWLSCPE",53,0)
 .;CHECK FOR VALID ENTRY
"RTN","SDWLSCPE",54,0)
 .;
"RTN","SDWLSCPE",55,0)
 .I '$D(^TMP("SDWLD",$J,SDWLDFN,+SDWLY)) W " Invalid Entry " S SDWLERR=1 Q
"RTN","SDWLSCPE",56,0)
 .S SDWLDA=$P($G(^TMP("SDWLD",$J,SDWLDFN,+SDWLY)),"~",2)
"RTN","SDWLSCPE",57,0)
 .;
"RTN","SDWLSCPE",58,0)
 .;LOCK DATA FILE
"RTN","SDWLSCPE",59,0)
 .;
"RTN","SDWLSCPE",60,0)
 .L ^SDWL(409.3,SDWLDA):5 I '$T W !,"Another User is Editing this Entry. Try Later." S DUOUT=1
"RTN","SDWLSCPE",61,0)
 I $D(DUOUT) G END
"RTN","SDWLSCPE",62,0)
 ;
"RTN","SDWLSCPE",63,0)
 ;GET PATIENT DATA FROM ^SDWL(409.3,IEN,0).
"RTN","SDWLSCPE",64,0)
 ;
"RTN","SDWLSCPE",65,0)
 D GETDATA
"RTN","SDWLSCPE",66,0)
 ;
"RTN","SDWLSCPE",67,0)
 ;ENTER SERVICE CONNECTED PRIORITY
"RTN","SDWLSCPE",68,0)
 ;  
"RTN","SDWLSCPE",69,0)
 D EDIT G END:$D(DUOUT)
"RTN","SDWLSCPE",70,0)
 K DIR,DIE,DR,DIC
"RTN","SDWLSCPE",71,0)
 S DIR(0)="E" D ^DIR I $D(DUOUT) G END
"RTN","SDWLSCPE",72,0)
 D END G EN
"RTN","SDWLSCPE",73,0)
 ;
"RTN","SDWLSCPE",74,0)
 Q
"RTN","SDWLSCPE",75,0)
PAT ;PATIENT LOOK-UP
"RTN","SDWLSCPE",76,0)
 ;
"RTN","SDWLSCPE",77,0)
 S DIC(0)="EMNAQ",DIC=409.3 D ^DIC S (SDWLDFN,DFN)=$P(Y,U,2) G PAT1:DFN<0
"RTN","SDWLSCPE",78,0)
 G PAT1:DFN=""
"RTN","SDWLSCPE",79,0)
 S SDWLNAM=$$GET1^DIQ(2,DFN_",",.01)
"RTN","SDWLSCPE",80,0)
 S X=$$GET1^DIQ(2,DFN_",",".351") I X'="" W !,*7,"PATIENT'S DATE OF DEATH HAS BEEN RECORDED" G PAT
"RTN","SDWLSCPE",81,0)
 D 1^VADPT
"RTN","SDWLSCPE",82,0)
PAT1 Q
"RTN","SDWLSCPE",83,0)
 ;
"RTN","SDWLSCPE",84,0)
DIS ;DISPLAY DATA FOR PATIENT
"RTN","SDWLSCPE",85,0)
 ;
"RTN","SDWLSCPE",86,0)
 S SDWLDISC="",SDWLCN=0,SDWLHDR="Wait List Service Connected Priority Edit"
"RTN","SDWLSCPE",87,0)
 D EN^SDWLD(SDWLDFN,VA("PID"),VADM(1))
"RTN","SDWLSCPE",88,0)
 K VADM,VAIN,VA,SDWLDISC
"RTN","SDWLSCPE",89,0)
 Q
"RTN","SDWLSCPE",90,0)
GETDATA ;PATIENT DATA RETRIEVAL
"RTN","SDWLSCPE",91,0)
 ;
"RTN","SDWLSCPE",92,0)
 S SDWLDATA=$G(^SDWL(409.3,SDWLDA,0))
"RTN","SDWLSCPE",93,0)
 S SDWLIN=$P(SDWLDATA,U,3),SDWLCL=+$P(SDWLDATA,U,4),SDWLTY=$P(SDWLDATA,U,5),SDWLST=$P(SDWLDATA,U,6)
"RTN","SDWLSCPE",94,0)
 S SDWLSP=$P(SDWLDATA,U,7),SDWLSS=$P(SDWLDATA,U,8),SDWLSC=$P(SDWLDATA,U,9),SDWLPRI=$P(SDWLDATA,U,10),SDWLRB=$P(SDWLDATA,U,11)
"RTN","SDWLSCPE",95,0)
 S SDWLPROV=$P(SDWLDATA,U,12),SDWLDAPT=$P(SDWLDATA,U,16),SDWLST=$P(SDWLDATA,U,17),SDWLDUZ=DUZ,SDWLEDT=DT
"RTN","SDWLSCPE",96,0)
 S SDWLSCP=$P($G(^SDWL(409.3,SDWLDA,"SC")),U,2)
"RTN","SDWLSCPE",97,0)
 Q
"RTN","SDWLSCPE",98,0)
EDIT ;EDIT PRIORITY
"RTN","SDWLSCPE",99,0)
 ;
"RTN","SDWLSCPE",100,0)
 S SDWLDUZ=DUZ,SDWLERR=0 K DIR,DR,DIE,DIC
"RTN","SDWLSCPE",101,0)
 S DIR("A")="Service Connected Priority"
"RTN","SDWLSCPE",102,0)
 S DIR("B")=$$EXTERNAL^DILFD(409.3,15,,SDWLSCP)
"RTN","SDWLSCPE",103,0)
 S DIR(0)="Y"
"RTN","SDWLSCPE",104,0)
 D ^DIR
"RTN","SDWLSCPE",105,0)
 I SDWLSCP>49,X?1."N",X?1"n" W !,"Invalid Entry. Service Connected Percentage greater than 49%" G EDIT
"RTN","SDWLSCPE",106,0)
 I X="" S DUOUT=1 Q
"RTN","SDWLSCPE",107,0)
 I X="^" S DUOUT=1 Q
"RTN","SDWLSCPE",108,0)
 S SDWLSCPX=$S(X?1"Y".E:1,X?1"y".E:1,1:0)
"RTN","SDWLSCPE",109,0)
 D DIE(SDWLDA,SDWLSCPX)
"RTN","SDWLSCPE",110,0)
 Q
"RTN","SDWLSCPE",111,0)
 ;
"RTN","SDWLSCPE",112,0)
DIE(DA,SDWLDIS) ; Update file 409.3 with SERVICE CONNECTED PRIORITY data.
"RTN","SDWLSCPE",113,0)
 S DIE="^SDWL(409.3,"
"RTN","SDWLSCPE",114,0)
 S DR="15///^S X=SDWLSCPX"
"RTN","SDWLSCPE",115,0)
 D ^DIE
"RTN","SDWLSCPE",116,0)
 Q
"RTN","SDWLSCPE",117,0)
HD ;HEADER
"RTN","SDWLSCPE",118,0)
 ;
"RTN","SDWLSCPE",119,0)
 W:$D(IOF) @IOF W !!,?80-$L("Wait List - SERVICE CONNECTED PRIORITY")\2,"Wait List - SERVICE CONNECTED PRIORITY",!!
"RTN","SDWLSCPE",120,0)
 ;
"RTN","SDWLSCPE",121,0)
END ;QUIT OPTION
"RTN","SDWLSCPE",122,0)
 K DIC,DIR,DR,DIE,SDWLDFN,DUOUT,SDWLSCP,SDWLSCPX,SDWLLIST,SDWLCN
"RTN","SDWLSCPE",123,0)
 K SDWLCL,SDWSLCN,SDWLDA,SDWLDAPT,SDWLDATA,SDWLDFN,SDWLDISP,SDWLDUZ,SDWLEDT,SDWLERR,SDWLIN,SDWLNAM,SDWLOP,SDWLPRI
"RTN","SDWLSCPE",124,0)
 K SDWLPROV,SDWLPS,SDWLRB,SDWLSC,SDWLSP,SDWLSS,SDWLST,SDWLTY,SDWLY,X,Y,SDWLHDR
"RTN","SDWLSCPE",125,0)
 L  Q
"VER")
8.0^22.0
"^DD",409.1,409.1,0)
FIELD^^10^8
"^DD",409.1,409.1,0,"IX","B",409.1,.01)

"^DD",409.1,409.1,0,"NM","APPOINTMENT TYPE")

"^DD",409.1,409.1,0,"PT",2.98,9.5)

"^DD",409.1,409.1,0,"PT",35.1,.01)

"^DD",409.1,409.1,0,"PT",40.11,15)

"^DD",409.1,409.1,0,"PT",44,2507)

"^DD",409.1,409.1,0,"PT",195.1165,.01)

"^DD",409.1,409.1,0,"PT",352.1,.02)

"^DD",409.1,409.1,0,"PT",409.51,5)

"^DD",409.1,409.1,0,"PT",409.68,.1)

"^DD",409.1,409.1,0,"PT",506693.03,4)

"^DD",409.1,409.1,.001,0)
NUMBER^NJ2,0^^ ^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",409.1,409.1,.001,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",409.1,409.1,.001,21,0)
^^2^2^2920211^
"^DD",409.1,409.1,.001,21,1,0)
Internal reference number assigned automatically as each new entry
"^DD",409.1,409.1,.001,21,2,0)
is placed in the file.
"^DD",409.1,409.1,.01,0)
NAME^RFI^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",409.1,409.1,.01,1,0)
^.1
"^DD",409.1,409.1,.01,1,1,0)
409.1^B
"^DD",409.1,409.1,.01,1,1,1)
S ^SD(409.1,"B",$E(X,1,30),DA)=""
"^DD",409.1,409.1,.01,1,1,2)
K ^SD(409.1,"B",$E(X,1,30),DA)
"^DD",409.1,409.1,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",409.1,409.1,.01,21,0)
^^3^3^2920211^
"^DD",409.1,409.1,.01,21,1,0)
Name of the appointment type, i.e. Class II Dental is designated for
"^DD",409.1,409.1,.01,21,2,0)
veterans who are scheduling an appointment to be treated for a 
"^DD",409.1,409.1,.01,21,3,0)
dental condition that was related to active duty.
"^DD",409.1,409.1,.01,"DEL",1,0)
I 1 W !,"Appointment Types can not be deleted.  They can be",!," inactivated by setting the INACTIVE field to 1",*7
"^DD",409.1,409.1,.01,"DT")
2880607
"^DD",409.1,409.1,2,0)
IGNORE MEANS TEST BILLING^S^1:IGNORE;^0;2^Q
"^DD",409.1,409.1,2,21,0)
^^3^3^2920211^
"^DD",409.1,409.1,2,21,1,0)
A '1' placed in this field denotes that any veteran who is categorized
"^DD",409.1,409.1,2,21,2,0)
by this particular appointment type will be exempt for having to
"^DD",409.1,409.1,2,21,3,0)
complete and Means Test and from any form of billing for care received.
"^DD",409.1,409.1,3,0)
INACTIVE^S^1:INACTIVE;^0;3^Q
"^DD",409.1,409.1,3,21,0)
^^2^2^2920211^
"^DD",409.1,409.1,3,21,1,0)
A '1' indicates that this particular appointment type is inactive and
"^DD",409.1,409.1,3,21,2,0)
no longer used per instructions from VA Central Office.
"^DD",409.1,409.1,4,0)
SYNONYM^F^^0;4^K:$L(X)>5!($L(X)<1) X
"^DD",409.1,409.1,4,3)
ANSWER MUST BE 1-5 CHARACTERS IN LENGTH
"^DD",409.1,409.1,4,21,0)
^^1^1^2920211^
"^DD",409.1,409.1,4,21,1,0)
A similar name or abbreviation to identify this appointment type.
"^DD",409.1,409.1,5,0)
DUAL ELIGIBILITY ALLOWED^S^1:YES;^0;5^Q
"^DD",409.1,409.1,5,3)
Enter YES if appt type can be used by both vet and nonvet and used for dual elig.  If appt type is for vet use only, leave blank.
"^DD",409.1,409.1,5,21,0)
^^4^4^2920211^
"^DD",409.1,409.1,5,21,1,0)
If an appointment type will allow dual eligibility for this particular
"^DD",409.1,409.1,5,21,2,0)
appointment type.  Dual eligibility is when a veteran has a primary
"^DD",409.1,409.1,5,21,3,0)
eligibility, i.e. NSC VETERAN, but is also a VA employee and will
"^DD",409.1,409.1,5,21,4,0)
have a second or dual eligibility of EMPLOYEE.
"^DD",409.1,409.1,5,"DT")
2880412
"^DD",409.1,409.1,6,0)
DEFAULT ELIGIBILITY^P8'^DIC(8,^0;6^Q
"^DD",409.1,409.1,6,3)
This eligibility will be used if the patient has dual eligibility status defined.
"^DD",409.1,409.1,6,21,0)
^^5^5^2920211^
"^DD",409.1,409.1,6,21,1,0)
A specific eligibility code can be entered in this field as the
"^DD",409.1,409.1,6,21,2,0)
default eligibility allowed for this appointment type.  If a veteran
"^DD",409.1,409.1,6,21,3,0)
is for example WWII and the default eligibility for appointment type
"^DD",409.1,409.1,6,21,4,0)
is WWI, user will be unable to schedule this visit utilizing this
"^DD",409.1,409.1,6,21,5,0)
appointment type.
"^DD",409.1,409.1,6,"DT")
2880531
"^DD",409.1,409.1,10,0)
DESCRIPTION^409.11^^1;0
"^DD",409.1,409.1,10,21,0)
^^2^2^2920318^^
"^DD",409.1,409.1,10,21,1,0)
A word-processing field describing the definition and/or use of
"^DD",409.1,409.1,10,21,2,0)
each appointment type in this file.
"^DD",409.1,409.11,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",409.1,409.11,0,"NM","DESCRIPTION")

"^DD",409.1,409.11,0,"UP")
409.1
"^DD",409.1,409.11,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",409.1,409.11,.01,21,0)
^^2^2^2920211^
"^DD",409.1,409.11,.01,21,1,0)
A word-processing filed describing the definition and/or use of each
"^DD",409.1,409.11,.01,21,2,0)
appointment type in this file.  Can be seen through 'help prompts'.
"^DD",409.1,409.11,.01,"DT")
2901004
"^DD",409.3,409.3,14,0)
SERVICE CONNECTED PERCENTAGE^NJ3,0^^SC;1^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X
"^DD",409.3,409.3,14,3)
Type a Number between 0 and 100, 0 Decimal Digits
"^DD",409.3,409.3,14,"DT")
3050627
"^DD",409.3,409.3,15,0)
SERVICE CONNECTED PRIORITY^S^0:NO;1:YES;^SC;2^Q
"^DD",409.3,409.3,15,"DT")
3050627
"^DIC",409.1,409.1,0)
APPOINTMENT TYPE^409.1
"^DIC",409.1,409.1,0,"GL")
^SD(409.1,
"^DIC",409.1,409.1,"%D",0)
^^1^1^2880607^^^
"^DIC",409.1,409.1,"%D",1,0)
These are the valid appointment types to be used in Scheduling as determined by the MAS SIUG.  This file should not be altered in ANY fashion unless so directed by the ISC.
"^DIC",409.1,"B","APPOINTMENT TYPE",409.1)

**INSTALL NAME**
IB*2.0*318
"BLD",5968,0)
IB*2.0*318^INTEGRATED BILLING^0^3051227^y
"BLD",5968,1,0)
^^3^3^3050706^
"BLD",5968,1,1,0)
Add SERVICE CONNECTED BILLABLE APPOINTMENT TYPE (#352.1) to correspond 
"BLD",5968,1,2,0)
to the new SERVICE CONNECTED APPOINTMENT TYPE (#409.1) released by 
"BLD",5968,1,3,0)
SD*5.3*394.
"BLD",5968,4,0)
^9.64PA^^
"BLD",5968,6)
1^
"BLD",5968,"INIT")
POST^IB20P318
"BLD",5968,"KRN",0)
^9.67PA^8989.52^19
"BLD",5968,"KRN",.4,0)
.4
"BLD",5968,"KRN",.401,0)
.401
"BLD",5968,"KRN",.402,0)
.402
"BLD",5968,"KRN",.403,0)
.403
"BLD",5968,"KRN",.5,0)
.5
"BLD",5968,"KRN",.84,0)
.84
"BLD",5968,"KRN",3.6,0)
3.6
"BLD",5968,"KRN",3.8,0)
3.8
"BLD",5968,"KRN",9.2,0)
9.2
"BLD",5968,"KRN",9.8,0)
9.8
"BLD",5968,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",5968,"KRN",9.8,"NM",1,0)
IB20P318^^0^B6245734
"BLD",5968,"KRN",9.8,"NM","B","IB20P318",1)

"BLD",5968,"KRN",19,0)
19
"BLD",5968,"KRN",19.1,0)
19.1
"BLD",5968,"KRN",101,0)
101
"BLD",5968,"KRN",409.61,0)
409.61
"BLD",5968,"KRN",771,0)
771
"BLD",5968,"KRN",870,0)
870
"BLD",5968,"KRN",8989.51,0)
8989.51
"BLD",5968,"KRN",8989.52,0)
8989.52
"BLD",5968,"KRN",8994,0)
8994
"BLD",5968,"KRN","B",.4,.4)

"BLD",5968,"KRN","B",.401,.401)

"BLD",5968,"KRN","B",.402,.402)

"BLD",5968,"KRN","B",.403,.403)

"BLD",5968,"KRN","B",.5,.5)

"BLD",5968,"KRN","B",.84,.84)

"BLD",5968,"KRN","B",3.6,3.6)

"BLD",5968,"KRN","B",3.8,3.8)

"BLD",5968,"KRN","B",9.2,9.2)

"BLD",5968,"KRN","B",9.8,9.8)

"BLD",5968,"KRN","B",19,19)

"BLD",5968,"KRN","B",19.1,19.1)

"BLD",5968,"KRN","B",101,101)

"BLD",5968,"KRN","B",409.61,409.61)

"BLD",5968,"KRN","B",771,771)

"BLD",5968,"KRN","B",870,870)

"BLD",5968,"KRN","B",8989.51,8989.51)

"BLD",5968,"KRN","B",8989.52,8989.52)

"BLD",5968,"KRN","B",8994,8994)

"BLD",5968,"QUES",0)
^9.62^^
"BLD",5968,"REQB",0)
^9.611^1^1
"BLD",5968,"REQB",1,0)
SD*5.3*394^1
"BLD",5968,"REQB","B","SD*5.3*394",1)

"INIT")
POST^IB20P318
"MBREQ")
0
"PKG",230,-1)
1^1
"PKG",230,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",230,20,0)
^9.402P^1^1
"PKG",230,20,1,0)
2^^IBAXDR
"PKG",230,20,1,1)

"PKG",230,20,"B",2,1)

"PKG",230,22,0)
^9.49I^1^1
"PKG",230,22,1,0)
2.0^2940321^2940525
"PKG",230,22,1,"PAH",1,0)
318^3051227^.5
"PKG",230,22,1,"PAH",1,1,0)
^^3^3^3051227
"PKG",230,22,1,"PAH",1,1,1,0)
Add SERVICE CONNECTED BILLABLE APPOINTMENT TYPE (#352.1) to correspond 
"PKG",230,22,1,"PAH",1,1,2,0)
to the new SERVICE CONNECTED APPOINTMENT TYPE (#409.1) released by 
"PKG",230,22,1,"PAH",1,1,3,0)
SD*5.3*394.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","IB20P318")
0^1^B6245734
"RTN","IB20P318",1,0)
IB20P318 ;ALB/ARH - IB*2.0*318 POST INIT: ADD BILLABLE APPT TYPE ; 23-JUN-2005
"RTN","IB20P318",2,0)
 ;;2.0;INTEGRATED BILLING;**318**;21-MAR-94
"RTN","IB20P318",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IB20P318",4,0)
 ;
"RTN","IB20P318",5,0)
 ;
"RTN","IB20P318",6,0)
 Q
"RTN","IB20P318",7,0)
 ;
"RTN","IB20P318",8,0)
POST ;
"RTN","IB20P318",9,0)
 N IBA
"RTN","IB20P318",10,0)
 S IBA(1)="",IBA(2)="    IB*2*318 Post-Install .....",IBA(3)="" D MES^XPDUTL(.IBA) K IBA
"RTN","IB20P318",11,0)
 ;
"RTN","IB20P318",12,0)
 D ATADD ; Add New Billable Appointment Type
"RTN","IB20P318",13,0)
 ;
"RTN","IB20P318",14,0)
 S IBA(1)="",IBA(2)="    IB*2*318 Post-Install Complete",IBA(3)="" D MES^XPDUTL(.IBA) K IBA
"RTN","IB20P318",15,0)
 ;
"RTN","IB20P318",16,0)
 Q
"RTN","IB20P318",17,0)
 ;
"RTN","IB20P318",18,0)
 ;
"RTN","IB20P318",19,0)
 ;
"RTN","IB20P318",20,0)
ATADD ; New Billable Appointment Type (352.1) to correspond to the New 'SERVICE CONNECTED' Appointment Type (409.1)
"RTN","IB20P318",21,0)
 N DD,DO,DLAYGO,DINUM,DIC,DIE,DA,DR,X,Y,IBA,IBFOUND,IBATFN,IBNUM,IBAT,IBFN
"RTN","IB20P318",22,0)
 ;
"RTN","IB20P318",23,0)
 S IBA(1)="      >> Adding 'Service Connected' Billable Appointment Type (#352.1)"
"RTN","IB20P318",24,0)
 ;
"RTN","IB20P318",25,0)
 S (IBATFN,IBNUM)=11,IBAT="SERVICE CONNECTED"
"RTN","IB20P318",26,0)
 ;
"RTN","IB20P318",27,0)
 S IBFOUND=$G(^IBE(352.1,IBATFN,0))
"RTN","IB20P318",28,0)
 ;
"RTN","IB20P318",29,0)
 I $P(IBFOUND,U,1,3)="11^11^2880101" D MSG("         Done.  Billable Appointment Type Already Exists") G ATADDQ
"RTN","IB20P318",30,0)
 I IBFOUND'="" D MSG(" "),MSG("     *** ERROR: Entry already Exists, could not add") G ATADDQ
"RTN","IB20P318",31,0)
 I +$O(^IBE(352.1,"B",IBNUM,0)) D MSG(" "),MSG("     *** ERROR: Number already Exists, could not add") G ATADDQ
"RTN","IB20P318",32,0)
 ; 
"RTN","IB20P318",33,0)
 K DD,DO S DINUM=IBATFN,DLAYGO=352.1,DIC="^IBE(352.1,",DIC(0)="L",X=IBATFN D FILE^DICN K DIC S IBFN=+Y
"RTN","IB20P318",34,0)
 I Y<1 K X,Y D MSG(" "),MSG("     *** ERROR: New Entry could not be added") G ATADDQ
"RTN","IB20P318",35,0)
 ;
"RTN","IB20P318",36,0)
 S DR=".02///"_IBAT_";.03////2880101;.04///NO;.05///YES;.06///YES"
"RTN","IB20P318",37,0)
 S DIE="^IBE(352.1,",DA=+IBFN D ^DIE K DIE,DA,DR,X,Y
"RTN","IB20P318",38,0)
 ;
"RTN","IB20P318",39,0)
 D MSG("         Done. Service Connected Billable Appointment Type Added")
"RTN","IB20P318",40,0)
 ;
"RTN","IB20P318",41,0)
ATADDQ D MES^XPDUTL(.IBA) K IBA
"RTN","IB20P318",42,0)
 Q
"RTN","IB20P318",43,0)
 ;
"RTN","IB20P318",44,0)
 ;
"RTN","IB20P318",45,0)
MSG(X) ;
"RTN","IB20P318",46,0)
 N IBX S IBX=$O(IBA(999999),-1) S:'IBX IBX=1 S IBX=IBX+1
"RTN","IB20P318",47,0)
 S IBA(IBX)=$G(X)
"RTN","IB20P318",48,0)
 Q
"VER")
8.0^22.0
**END**
**END**
