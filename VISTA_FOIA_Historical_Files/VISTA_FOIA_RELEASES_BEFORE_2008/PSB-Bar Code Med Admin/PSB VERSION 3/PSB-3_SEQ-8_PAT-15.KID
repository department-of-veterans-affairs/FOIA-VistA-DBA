Released PSB*3*15 SEQ #8
Extracted from mail message
**KIDS**:PSB*3.0*15^

**INSTALL NAME**
PSB*3.0*15
"BLD",5204,0)
PSB*3.0*15^BAR CODE MED ADMIN^0^3050405^y
"BLD",5204,1,0)
^^18^18^3050405^
"BLD",5204,1,1,0)
 
"BLD",5204,1,2,0)
 
"BLD",5204,1,3,0)
 1.  Problem: HD000000088329
"BLD",5204,1,4,0)
     The Medication Order Button (MOB) within the Graphical User
"BLD",5204,1,5,0)
     Interface, Bar Code Medication Administration system (BCMA)
"BLD",5204,1,6,0)
     malfunctions after the Installation of patch PSB*3*9.  When the
"BLD",5204,1,7,0)
     BCMA MOB is used to administer medications and create orders, 
"BLD",5204,1,8,0)
     all data is stored and maintained properly.  The malfunction
"BLD",5204,1,9,0)
     occurs when the post PSB*3*9, BCMA system frees memory after
"BLD",5204,1,10,0)
     all administration and order processing has occurred and BCMA
"BLD",5204,1,11,0)
     begins to free memory per MOB activity.  Because a variable
"BLD",5204,1,12,0)
     needed by BCMA MOB exit activities has been cleared, BCMA generates
"BLD",5204,1,13,0)
     the "<UNDEFINED>MOBR+25^PSBAPIPM" before processing has completed.
"BLD",5204,1,14,0)
 
"BLD",5204,1,15,0)
 
"BLD",5204,1,16,0)
     Corrective Action:
"BLD",5204,1,17,0)
     PSB*3*15 will allow BCMA MOB exiting processing to complete
"BLD",5204,1,18,0)
     without error.
"BLD",5204,4,0)
^9.64PA^^
"BLD",5204,"ABPKG")
n
"BLD",5204,"KRN",0)
^9.67PA^8989.52^19
"BLD",5204,"KRN",.4,0)
.4
"BLD",5204,"KRN",.401,0)
.401
"BLD",5204,"KRN",.402,0)
.402
"BLD",5204,"KRN",.403,0)
.403
"BLD",5204,"KRN",.5,0)
.5
"BLD",5204,"KRN",.84,0)
.84
"BLD",5204,"KRN",3.6,0)
3.6
"BLD",5204,"KRN",3.8,0)
3.8
"BLD",5204,"KRN",9.2,0)
9.2
"BLD",5204,"KRN",9.8,0)
9.8
"BLD",5204,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",5204,"KRN",9.8,"NM",1,0)
PSBAPIPM^^0^B17284583
"BLD",5204,"KRN",9.8,"NM","B","PSBAPIPM",1)

"BLD",5204,"KRN",19,0)
19
"BLD",5204,"KRN",19.1,0)
19.1
"BLD",5204,"KRN",101,0)
101
"BLD",5204,"KRN",409.61,0)
409.61
"BLD",5204,"KRN",771,0)
771
"BLD",5204,"KRN",870,0)
870
"BLD",5204,"KRN",8989.51,0)
8989.51
"BLD",5204,"KRN",8989.52,0)
8989.52
"BLD",5204,"KRN",8994,0)
8994
"BLD",5204,"KRN","B",.4,.4)

"BLD",5204,"KRN","B",.401,.401)

"BLD",5204,"KRN","B",.402,.402)

"BLD",5204,"KRN","B",.403,.403)

"BLD",5204,"KRN","B",.5,.5)

"BLD",5204,"KRN","B",.84,.84)

"BLD",5204,"KRN","B",3.6,3.6)

"BLD",5204,"KRN","B",3.8,3.8)

"BLD",5204,"KRN","B",9.2,9.2)

"BLD",5204,"KRN","B",9.8,9.8)

"BLD",5204,"KRN","B",19,19)

"BLD",5204,"KRN","B",19.1,19.1)

"BLD",5204,"KRN","B",101,101)

"BLD",5204,"KRN","B",409.61,409.61)

"BLD",5204,"KRN","B",771,771)

"BLD",5204,"KRN","B",870,870)

"BLD",5204,"KRN","B",8989.51,8989.51)

"BLD",5204,"KRN","B",8989.52,8989.52)

"BLD",5204,"KRN","B",8994,8994)

"BLD",5204,"QUES",0)
^9.62^^
"BLD",5204,"REQB",0)
^9.611^1^1
"BLD",5204,"REQB",1,0)
PSB*3.0*9^2
"BLD",5204,"REQB","B","PSB*3.0*9",1)

"MBREQ")
0
"PKG",536,-1)
1^1
"PKG",536,0)
BAR CODE MED ADMIN^PSB^BAR CODE MEDICATION ADMINISTRATION
"PKG",536,20,0)
^9.402P^^0
"PKG",536,22,0)
^9.49I^1^1
"PKG",536,22,1,0)
3.0^3040224^3040318^11874
"PKG",536,22,1,"PAH",1,0)
15^3050405
"PKG",536,22,1,"PAH",1,1,0)
^^18^18^3050405
"PKG",536,22,1,"PAH",1,1,1,0)
 
"PKG",536,22,1,"PAH",1,1,2,0)
 
"PKG",536,22,1,"PAH",1,1,3,0)
 1.  Problem: HD000000088329
"PKG",536,22,1,"PAH",1,1,4,0)
     The Medication Order Button (MOB) within the Graphical User
"PKG",536,22,1,"PAH",1,1,5,0)
     Interface, Bar Code Medication Administration system (BCMA)
"PKG",536,22,1,"PAH",1,1,6,0)
     malfunctions after the Installation of patch PSB*3*9.  When the
"PKG",536,22,1,"PAH",1,1,7,0)
     BCMA MOB is used to administer medications and create orders, 
"PKG",536,22,1,"PAH",1,1,8,0)
     all data is stored and maintained properly.  The malfunction
"PKG",536,22,1,"PAH",1,1,9,0)
     occurs when the post PSB*3*9, BCMA system frees memory after
"PKG",536,22,1,"PAH",1,1,10,0)
     all administration and order processing has occurred and BCMA
"PKG",536,22,1,"PAH",1,1,11,0)
     begins to free memory per MOB activity.  Because a variable
"PKG",536,22,1,"PAH",1,1,12,0)
     needed by BCMA MOB exit activities has been cleared, BCMA generates
"PKG",536,22,1,"PAH",1,1,13,0)
     the "<UNDEFINED>MOBR+25^PSBAPIPM" before processing has completed.
"PKG",536,22,1,"PAH",1,1,14,0)
 
"PKG",536,22,1,"PAH",1,1,15,0)
 
"PKG",536,22,1,"PAH",1,1,16,0)
     Corrective Action:
"PKG",536,22,1,"PAH",1,1,17,0)
     PSB*3*15 will allow BCMA MOB exiting processing to complete
"PKG",536,22,1,"PAH",1,1,18,0)
     without error.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","PSBAPIPM")
0^1^B17284583
"RTN","PSBAPIPM",1,0)
PSBAPIPM ;BIRMINGHAM/EFC-BCMA API TO IPM FOR ORDER RENEWAL ;Mar 2004
"RTN","PSBAPIPM",2,0)
 ;;3.0;BAR CODE MED ADMIN;**6,15**;Mar 2004
"RTN","PSBAPIPM",3,0)
 ;
"RTN","PSBAPIPM",4,0)
 ;
"RTN","PSBAPIPM",5,0)
EN(PSBDFN,PSBORDX) ;
"RTN","PSBAPIPM",6,0)
 ;
"RTN","PSBAPIPM",7,0)
 ; PSBLADT=date/time of the last action
"RTN","PSBAPIPM",8,0)
 ; PSBADMDT=scheduled time of the last action
"RTN","PSBAPIPM",9,0)
 ; PSBSTUS=last action (given, held, refused, etc.)
"RTN","PSBAPIPM",10,0)
 ;
"RTN","PSBAPIPM",11,0)
 ;
"RTN","PSBAPIPM",12,0)
 S (PSBCNT,PSBFLAG)=0,Y=""
"RTN","PSBAPIPM",13,0)
 S PSBSTR=""
"RTN","PSBAPIPM",14,0)
 I '$D(^PSB(53.79,"AORDX",PSBDFN,PSBORDX)) Q ""
"RTN","PSBAPIPM",15,0)
 F  S Y=$O(^PSB(53.79,"AORDX",PSBDFN,PSBORDX,Y),-1) Q:Y=""  Q:PSBFLAG=1  D
"RTN","PSBAPIPM",16,0)
 .S PSBLADT=$S(Y:Y,1:"")
"RTN","PSBAPIPM",17,0)
 .S X="" F  S X=$O(^PSB(53.79,"AORDX",PSBDFN,PSBORDX,Y,X),-1) Q:X=""  D
"RTN","PSBAPIPM",18,0)
 ..S PSBSTUS=$P(^PSB(53.79,X,0),U,9) I PSBSTUS'="N" S PSBFLAG=1
"RTN","PSBAPIPM",19,0)
 ..S PSBADMDT=$P(^PSB(53.79,X,.1),U,3)
"RTN","PSBAPIPM",20,0)
 ..D:PSBSTUS="N"
"RTN","PSBAPIPM",21,0)
 ...S (PSBLADT,PSBSTUS,PSBADMDT)=""
"RTN","PSBAPIPM",22,0)
 ...S Z="" F  S Z=$O(^PSB(53.79,X,.9,Z),-1) Q:'Z  Q:PSBFLAG=1  S PSBDATA=$G(^(Z,0)) D
"RTN","PSBAPIPM",23,0)
 ....I (PSBDATA["Set to 'NOT GIVEN'")!(PSBDATA["Set to 'GIVEN'")!(PSBDATA["Set to 'REFUSED'")!(PSBDATA["Set to 'HELD'")!(PSBDATA["Set to 'MISSING DOSE'")!(PSBDATA["Set to 'REMOVED'") S PSBCNT=PSBCNT+1
"RTN","PSBAPIPM",24,0)
 ....I (PSBDATA["STATUS 'HELD'")!(PSBDATA["STATUS 'GIVEN'")!(PSBDATA["STATUS 'REFUSED'")!(PSBDATA["STATUS 'MISSING DOSE'")!(PSBDATA["STATUS 'REMOVED'") S PSBCNT=PSBCNT+1
"RTN","PSBAPIPM",25,0)
 ....I PSBCNT#2=0,PSBDATA["'REFUSED'" S PSBSTUS="R",PSBADMDT=$P(^PSB(53.79,X,.1),U,3) D LAST
"RTN","PSBAPIPM",26,0)
 ....I PSBCNT#2=0,PSBDATA["'HELD'" S PSBSTUS="H",PSBADMDT=$P(^PSB(53.79,X,.1),U,3) D LAST
"RTN","PSBAPIPM",27,0)
 ....I PSBCNT#2=0,PSBDATA["'MISSING DOSE'" S PSBSTUS="M",PSBADMDT=$P(^PSB(53.79,X,.1),U,3) D LAST
"RTN","PSBAPIPM",28,0)
 ....I PSBCNT#2=0,PSBDATA["'REMOVED'" S PSBSTUS="RM",PSBADMDT=$P(^PSB(53.79,X,.1),U,3) D LAST
"RTN","PSBAPIPM",29,0)
 I PSBSTUS'="" S PSBSTR=PSBADMDT_U_PSBLADT_U_PSBSTUS
"RTN","PSBAPIPM",30,0)
 Q PSBSTR
"RTN","PSBAPIPM",31,0)
 ;
"RTN","PSBAPIPM",32,0)
LAST ;
"RTN","PSBAPIPM",33,0)
 S PSBCC=0
"RTN","PSBAPIPM",34,0)
 S ZZ="" F  S ZZ=$O(^PSB(53.79,X,.3,ZZ),-1) Q:'ZZ  Q:PSBFLAG=1  S PSBDATA2=$G(^(ZZ,0)) D
"RTN","PSBAPIPM",35,0)
 .S PSBCC=PSBCC+1
"RTN","PSBAPIPM",36,0)
 .I PSBCC=2 S PSBLADT=$P(PSBDATA2,U,3),PSBFLAG=1
"RTN","PSBAPIPM",37,0)
 Q
"RTN","PSBAPIPM",38,0)
MOB(PSBDFN,PSBCORN) ;
"RTN","PSBAPIPM",39,0)
 I '$D(^TMP("PSBMO",$J,PSBDFN,PSBCORN)) S ^TMP("PSB",$J,0)=-1 Q
"RTN","PSBAPIPM",40,0)
 M ^TMP("PSB",$J)=^TMP("PSBMO",$J,PSBDFN,PSBCORN)
"RTN","PSBAPIPM",41,0)
 K ^TMP("PSB",$J,"PSB")
"RTN","PSBAPIPM",42,0)
 Q
"RTN","PSBAPIPM",43,0)
 ;
"RTN","PSBAPIPM",44,0)
MOBR(PSBDFN,PSBCORN,PSBORDN) ;
"RTN","PSBAPIPM",45,0)
 I $G(PSBORDN)="" K ^TMP("PSB",$J) Q
"RTN","PSBAPIPM",46,0)
 S PSBDUZ=DUZ,PSBDUZ(2)=DUZ(2),DFN=PSBDFN
"RTN","PSBAPIPM",47,0)
 S DUZ=$P(^TMP("PSBMO",$J,PSBDFN,PSBCORN,"PSB"),U,1),DUZ(2)=$P(^TMP("PSBMO",$J,PSBDFN,PSBCORN,"PSB"),U,2),PSBISITE=$P(^TMP("PSBMO",$J,PSBDFN,PSBCORN,"PSB"),U,3)
"RTN","PSBAPIPM",48,0)
 D PSJ1^PSBVT(PSBDFN,PSBORDN)
"RTN","PSBAPIPM",49,0)
 S PSBREC(0)=PSBDFN
"RTN","PSBAPIPM",50,0)
 S PSBREC(1)=PSBONX
"RTN","PSBAPIPM",51,0)
 S PSBREC(2)=PSBSCHT
"RTN","PSBAPIPM",52,0)
 S PSBREC(4)=PSBOIT
"RTN","PSBAPIPM",53,0)
 S PSBREC(5)=$P(^TMP("PSBMO",$J,PSBDFN,PSBCORN,0),U,5)
"RTN","PSBAPIPM",54,0)
 S PSBREC(6)=""
"RTN","PSBAPIPM",55,0)
 S PSBREC(7)="BCMA/CPRS Interface Entry."
"RTN","PSBAPIPM",56,0)
 S PSBREC(8)=PSBISITE
"RTN","PSBAPIPM",57,0)
 I PSBONX["U" S PSBREC(9)="UDTAB^",PSBREC(3)="G"
"RTN","PSBAPIPM",58,0)
 I PSBONX["V" D
"RTN","PSBAPIPM",59,0)
 .I "PCS"'[PSBIVT S PSBREC(9)="IVTAB"_U_$$GETWSID^PSBVDLU2(PSBDFN,PSBORDN),PSBREC(3)="I" Q
"RTN","PSBAPIPM",60,0)
 .I PSBIVT["S",PSBISYR=0 S PSBREC(9)="IVTAB"_U_$$GETWSID^PSBVDLU2(PSBDFN,PSBORDN),PSBREC(3)="I" Q
"RTN","PSBAPIPM",61,0)
 .I PSBIVT["C",PSBISYR=0 S PSBREC(9)="IVTAB"_U_$$GETWSID^PSBVDLU2(PSBDFN,PSBORDN),PSBREC(3)="I" Q
"RTN","PSBAPIPM",62,0)
 .S PSBREC(9)="PBTAB"_U_$$GETWSID^PSBVDLU2(PSBDFN,PSBORDN),PSBREC(3)="G" Q
"RTN","PSBAPIPM",63,0)
 S PSBIMV="^"_$P($G(^TMP("PSBMO",$J,PSBDFN,PSBCORN,"PSB")),U,4)
"RTN","PSBAPIPM",64,0)
 S PSBINDX=10
"RTN","PSBAPIPM",65,0)
 S X="" F  S X=$O(PSBDDA(X)) Q:X=""  S PSBREC(PSBINDX)=$P(PSBDDA(X),U,1,2)_U_$P(PSBDDA(X),U,4)_U_$P(PSBDDA(X),U,4)_U_PSBDOSEF,PSBINDX=PSBINDX+1
"RTN","PSBAPIPM",66,0)
 S X="" F  S X=$O(PSBADA(X)) Q:X=""  S PSBREC(PSBINDX)=PSBADA(X),PSBINDX=PSBINDX+1
"RTN","PSBAPIPM",67,0)
 S X="" F  S X=$O(PSBSOLA(X)) Q:X=""  S PSBREC(PSBINDX)=PSBSOLA(X),PSBINDX=PSBINDX+1
"RTN","PSBAPIPM",68,0)
 D RPC^PSBML(.PSB,"+1^MEDPASS"_$G(PSBIMV),.PSBREC)
"RTN","PSBAPIPM",69,0)
 S DUZ=PSBDUZ,DUZ(2)=PSBDUZ(2)  K PSBDUZ,PSBDUZ(2),^TMP("PSBMO",$J,PSBREC(0),PSBCORN),^TMP("PSB",$J) D CLEAN^PSBVT
"RTN","PSBAPIPM",70,0)
 Q
"VER")
8.0^22.0
**END**
**END**
