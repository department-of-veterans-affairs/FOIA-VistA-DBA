Released MPIF*1*48 SEQ #47
Extracted from mail message
**KIDS**:MPIF*1.0*48^

**INSTALL NAME**
MPIF*1.0*48
"BLD",2525,0)
MPIF*1.0*48^MASTER PATIENT INDEX VISTA^0^3070821^y
"BLD",2525,1,0)
^^3^3^3070821^
"BLD",2525,1,1,0)
CAPTURE DATE/TIME AND WHO MARKED EXCEPTION PROCESSED
"BLD",2525,1,2,0)
Refer to patch MPIF*1*48 in the FORUM Patch Module for a complete
"BLD",2525,1,3,0)
description.
"BLD",2525,4,0)
^9.64PA^984.1^1
"BLD",2525,4,984.1,0)
984.1
"BLD",2525,4,984.1,2,0)
^9.641^984.1^1
"BLD",2525,4,984.1,2,984.1,0)
MASTER PATIENT INDEX (LOCAL NUMBERS)  (File-top level)
"BLD",2525,4,984.1,2,984.1,1,0)
^9.6411^3^2
"BLD",2525,4,984.1,2,984.1,1,1,0)
LAST NUMBER USED
"BLD",2525,4,984.1,2,984.1,1,3,0)
NEXT NUMBER TO USE
"BLD",2525,4,984.1,222)
y^n^p^^^^n^^n
"BLD",2525,4,984.1,224)

"BLD",2525,4,"APDD",984.1,984.1)

"BLD",2525,4,"APDD",984.1,984.1,1)

"BLD",2525,4,"APDD",984.1,984.1,3)

"BLD",2525,4,"B",984.1,984.1)

"BLD",2525,6.3)
6
"BLD",2525,"ABNS",0)
^9.66A^^
"BLD",2525,"ABPKG")
^^
"BLD",2525,"INID")
^y
"BLD",2525,"INIT")
MPIFP48
"BLD",2525,"KRN",0)
^9.67PA^8989.52^19
"BLD",2525,"KRN",.4,0)
.4
"BLD",2525,"KRN",.401,0)
.401
"BLD",2525,"KRN",.402,0)
.402
"BLD",2525,"KRN",.403,0)
.403
"BLD",2525,"KRN",.5,0)
.5
"BLD",2525,"KRN",.84,0)
.84
"BLD",2525,"KRN",3.6,0)
3.6
"BLD",2525,"KRN",3.8,0)
3.8
"BLD",2525,"KRN",9.2,0)
9.2
"BLD",2525,"KRN",9.8,0)
9.8
"BLD",2525,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",2525,"KRN",9.8,"NM",1,0)
MPIFDUP^^0^B64880592
"BLD",2525,"KRN",9.8,"NM",2,0)
MPIFP48^^0^B1808998
"BLD",2525,"KRN",9.8,"NM",3,0)
MPIFD1^^0^B52740520
"BLD",2525,"KRN",9.8,"NM",4,0)
MPIFA24^^0^B21971494
"BLD",2525,"KRN",9.8,"NM",5,0)
MPIF001^^0^B53763903
"BLD",2525,"KRN",9.8,"NM",6,0)
MPIFAPI^^0^B49088587
"BLD",2525,"KRN",9.8,"NM",7,0)
MPIFSPC^^0^B1433923
"BLD",2525,"KRN",9.8,"NM","B","MPIF001",5)

"BLD",2525,"KRN",9.8,"NM","B","MPIFA24",4)

"BLD",2525,"KRN",9.8,"NM","B","MPIFAPI",6)

"BLD",2525,"KRN",9.8,"NM","B","MPIFD1",3)

"BLD",2525,"KRN",9.8,"NM","B","MPIFDUP",1)

"BLD",2525,"KRN",9.8,"NM","B","MPIFP48",2)

"BLD",2525,"KRN",9.8,"NM","B","MPIFSPC",7)

"BLD",2525,"KRN",19,0)
19
"BLD",2525,"KRN",19.1,0)
19.1
"BLD",2525,"KRN",101,0)
101
"BLD",2525,"KRN",101,"NM",0)
^9.68A^^0
"BLD",2525,"KRN",409.61,0)
409.61
"BLD",2525,"KRN",771,0)
771
"BLD",2525,"KRN",771,"NM",0)
^9.68A^^0
"BLD",2525,"KRN",870,0)
870
"BLD",2525,"KRN",8989.51,0)
8989.51
"BLD",2525,"KRN",8989.52,0)
8989.52
"BLD",2525,"KRN",8994,0)
8994
"BLD",2525,"KRN","B",.4,.4)

"BLD",2525,"KRN","B",.401,.401)

"BLD",2525,"KRN","B",.402,.402)

"BLD",2525,"KRN","B",.403,.403)

"BLD",2525,"KRN","B",.5,.5)

"BLD",2525,"KRN","B",.84,.84)

"BLD",2525,"KRN","B",3.6,3.6)

"BLD",2525,"KRN","B",3.8,3.8)

"BLD",2525,"KRN","B",9.2,9.2)

"BLD",2525,"KRN","B",9.8,9.8)

"BLD",2525,"KRN","B",19,19)

"BLD",2525,"KRN","B",19.1,19.1)

"BLD",2525,"KRN","B",101,101)

"BLD",2525,"KRN","B",409.61,409.61)

"BLD",2525,"KRN","B",771,771)

"BLD",2525,"KRN","B",870,870)

"BLD",2525,"KRN","B",8989.51,8989.51)

"BLD",2525,"KRN","B",8989.52,8989.52)

"BLD",2525,"KRN","B",8994,8994)

"BLD",2525,"QUES",0)
^9.62^^
"BLD",2525,"REQB",0)
^9.611^4^4
"BLD",2525,"REQB",1,0)
MPIF*1.0*46^2
"BLD",2525,"REQB",2,0)
RG*1.0*48^2
"BLD",2525,"REQB",3,0)
MPIF*1.0*39^2
"BLD",2525,"REQB",4,0)
MPIF*1.0*45^2
"BLD",2525,"REQB","B","MPIF*1.0*39",3)

"BLD",2525,"REQB","B","MPIF*1.0*45",4)

"BLD",2525,"REQB","B","MPIF*1.0*46",1)

"BLD",2525,"REQB","B","RG*1.0*48",2)

"FIA",984.1)
MASTER PATIENT INDEX (LOCAL NUMBERS)
"FIA",984.1,0)
^MPIF(984.1,
"FIA",984.1,0,0)
984.1
"FIA",984.1,0,1)
y^n^p^^^^n^^n
"FIA",984.1,0,10)

"FIA",984.1,0,11)

"FIA",984.1,0,"RLRO")

"FIA",984.1,0,"VR")
1.0^MPIF
"FIA",984.1,984.1)
1
"FIA",984.1,984.1,1)

"FIA",984.1,984.1,3)

"INIT")
MPIFP48
"MBREQ")
0
"PKG",282,-1)
1^1
"PKG",282,0)
MASTER PATIENT INDEX VISTA^MPIF^Master Patient Index VistA side
"PKG",282,20,0)
^9.402P^^
"PKG",282,22,0)
^9.49I^1^1
"PKG",282,22,1,0)
1.0^2990428
"PKG",282,22,1,"PAH",1,0)
48^3070821
"PKG",282,22,1,"PAH",1,1,0)
^^3^3^3070821
"PKG",282,22,1,"PAH",1,1,1,0)
CAPTURE DATE/TIME AND WHO MARKED EXCEPTION PROCESSED
"PKG",282,22,1,"PAH",1,1,2,0)
Refer to patch MPIF*1*48 in the FORUM Patch Module for a complete
"PKG",282,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","MPIF001")
0^5^B53763903^B53646904
"RTN","MPIF001",1,0)
MPIF001 ;ALB/RJS/CMC-UTILITY ROUTINE OF APIS ;JUL 12, 1996
"RTN","MPIF001",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,9,16,18,21,27,33,35,41,45,48**;30 Apr 99;Build 6
"RTN","MPIF001",3,0)
 ;
"RTN","MPIF001",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIF001",5,0)
 ;  ^DPT( - #2070
"RTN","MPIF001",6,0)
 ; ^DPT("AICN" - #2070
"RTN","MPIF001",7,0)
 ; ^DPT("AMPIMIS" - #2070
"RTN","MPIF001",8,0)
 ; EXC^RGHLLOG - #2796
"RTN","MPIF001",9,0)
 ; START^RGHLLOG - #2796
"RTN","MPIF001",10,0)
 ; STOP^RGHLLOG - #2796
"RTN","MPIF001",11,0)
 ;
"RTN","MPIF001",12,0)
GETICN(DFN) ; This function returns the ICN, including checksum for a given
"RTN","MPIF001",13,0)
 ; DFN or -1^error message
"RTN","MPIF001",14,0)
 ; INPUT: DFN - ien in Patient file
"RTN","MPIF001",15,0)
 ;
"RTN","MPIF001",16,0)
 N RETURN,NODE
"RTN","MPIF001",17,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN" G EXIT1
"RTN","MPIF001",18,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT1
"RTN","MPIF001",19,0)
 I '$D(^DPT(DFN,"MPI")) S RETURN="-1^NO MPI NODE" G EXIT1
"RTN","MPIF001",20,0)
 S NODE=$G(^DPT(DFN,"MPI"))
"RTN","MPIF001",21,0)
 I $P(NODE,"^",1)'>0 S RETURN="-1^NO ICN" G EXIT1
"RTN","MPIF001",22,0)
 S RETURN=$P(NODE,"^",1)_"V"_$$CHECKDG^MPIFSPC($P(NODE,"^",1)) ;**48
"RTN","MPIF001",23,0)
 I '$D(^DPT("AICN",$P(NODE,"^"),DFN)) S ^DPT("AICN",$P(NODE,"^"),DFN)=""
"RTN","MPIF001",24,0)
 ; ^ set AICN x-ref if missing one
"RTN","MPIF001",25,0)
EXIT1 ;
"RTN","MPIF001",26,0)
 Q RETURN
"RTN","MPIF001",27,0)
 ;
"RTN","MPIF001",28,0)
GETDFN(ICN) ; Returns DFN (ien Patient file) or -1^error message for a given ICN
"RTN","MPIF001",29,0)
 ; ICN - ICN for a given Patient in the Patient file
"RTN","MPIF001",30,0)
 N RETURN,DFN
"RTN","MPIF001",31,0)
 I $G(ICN)'>0 S RETURN="-1^NO ICN" G EXIT2
"RTN","MPIF001",32,0)
 I ICN["V" S ICN=+ICN
"RTN","MPIF001",33,0)
 I '$D(^DPT("AICN",ICN)) S RETURN="-1^ICN NOT IN DATABASE" G EXIT2
"RTN","MPIF001",34,0)
 S DFN=$O(^DPT("AICN",ICN,0))
"RTN","MPIF001",35,0)
 I $G(DFN)'>0 S RETURN="-1^BAD ICN CROSS-REFERENCE" G EXIT2
"RTN","MPIF001",36,0)
 I '$D(^DPT(DFN)) K ^DPT("AICN",ICN) S RETURN="-1^ICN NOT IN DATABASE" G EXIT2
"RTN","MPIF001",37,0)
 ;^ **41 - CHECK IF THE DFN HOLDING THIS ICN IS RELATED TO BOGUS XREF
"RTN","MPIF001",38,0)
 S RETURN=DFN
"RTN","MPIF001",39,0)
EXIT2 ;
"RTN","MPIF001",40,0)
 Q RETURN
"RTN","MPIF001",41,0)
 ;
"RTN","MPIF001",42,0)
ICNLC(DFN) ;This API will return an ICN if one exists or create and return
"RTN","MPIF001",43,0)
 ; a Local ICN and update the appropriate fields if a Local was created
"RTN","MPIF001",44,0)
 ; DFN= Patient IEN
"RTN","MPIF001",45,0)
 ; Returns ICN (local or National including checksum) or -1^error msg
"RTN","MPIF001",46,0)
 N ICN,TMP,CHKSUM,ICNX
"RTN","MPIF001",47,0)
 I $G(DFN)'>0 Q "-1^No DFN Passed"
"RTN","MPIF001",48,0)
 D LOCK
"RTN","MPIF001",49,0)
 S ICN=$$GETICN(DFN)
"RTN","MPIF001",50,0)
 I +ICN=-1 D
"RTN","MPIF001",51,0)
 .;no icn create a Local ICN
"RTN","MPIF001",52,0)
 .S ICN=$$EN2^MPIFAPI()
"RTN","MPIF001",53,0)
 .S CHKSUM=$P(ICN,"V",2),ICNX=$P(ICN,"V")
"RTN","MPIF001",54,0)
 .S NOLOCK=""
"RTN","MPIF001",55,0)
 .I ICNX="" K NOLOCK S ICN="-1^PROBLEM CREATING LOCAL ICN" Q
"RTN","MPIF001",56,0)
 .S TMP=$$SETICN(DFN,ICNX,CHKSUM)
"RTN","MPIF001",57,0)
 .I +TMP=-1 K NOLOCK Q
"RTN","MPIF001",58,0)
 .S TMP=$$SETLOC(DFN,1)
"RTN","MPIF001",59,0)
 .S TMP=$$CHANGE(DFN,$P($$SITE^VASITE(),"^"))
"RTN","MPIF001",60,0)
 .K NOLOCK
"RTN","MPIF001",61,0)
 D UNLOCK
"RTN","MPIF001",62,0)
 Q ICN
"RTN","MPIF001",63,0)
 ;
"RTN","MPIF001",64,0)
CMOR2(DFN) ; Returns CMOR Site Name or -1^error message
"RTN","MPIF001",65,0)
 ; DFN = Patient IEN
"RTN","MPIF001",66,0)
 I $G(DFN)'>0 Q "-1^No DFN Passed"
"RTN","MPIF001",67,0)
 N NODE
"RTN","MPIF001",68,0)
 S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIF001",69,0)
 Q:$P(NODE,"^",3)="" "-1^No CMOR"
"RTN","MPIF001",70,0)
 Q $$CMORNAME($P(NODE,"^",3))
"RTN","MPIF001",71,0)
 ;
"RTN","MPIF001",72,0)
CMORNAME(CIEN) ; Returns CMOR site name or -1^error message
"RTN","MPIF001",73,0)
 ; CIEN - ien from Institution file
"RTN","MPIF001",74,0)
 ;
"RTN","MPIF001",75,0)
 Q:CIEN="" "-1^No Institution parameter"
"RTN","MPIF001",76,0)
 N INST
"RTN","MPIF001",77,0)
 S INST=$$NNT^XUAF4(CIEN)
"RTN","MPIF001",78,0)
 Q:INST="" "-1^No Institution for that IEN"
"RTN","MPIF001",79,0)
 Q:$P(INST,"^")="" "-1^No Name for this Institution"
"RTN","MPIF001",80,0)
 Q $P(INST,"^")
"RTN","MPIF001",81,0)
 ;
"RTN","MPIF001",82,0)
GETVCCI(DFN) ; Returns CMOR or -1^error message for a given patient
"RTN","MPIF001",83,0)
 ; DFN - ien of patient in Patient file
"RTN","MPIF001",84,0)
 N RETURN,NODE,PTR,STANUM
"RTN","MPIF001",85,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN" G EXIT3
"RTN","MPIF001",86,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT3
"RTN","MPIF001",87,0)
 I '$D(^DPT(DFN,"MPI")) S RETURN="-1^NO MPI NODE" G EXIT3
"RTN","MPIF001",88,0)
 S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIF001",89,0)
 S PTR=$P(NODE,"^",3)
"RTN","MPIF001",90,0)
 I PTR'>0 S RETURN="-1^NO CMOR DEFINED FOR PT" G EXIT3
"RTN","MPIF001",91,0)
 S STANUM=$P($$NNT^XUAF4(PTR),"^",2)
"RTN","MPIF001",92,0)
 I STANUM'>0 S RETURN="-1^PTS CMOR IS DANGLING PTR" G EXIT3
"RTN","MPIF001",93,0)
 S RETURN=STANUM
"RTN","MPIF001",94,0)
EXIT3 ;
"RTN","MPIF001",95,0)
 Q RETURN
"RTN","MPIF001",96,0)
 ;
"RTN","MPIF001",97,0)
CHANGE(DFN,VCCI) ;
"RTN","MPIF001",98,0)
 ; ** This function is only to be used by approved packages **
"RTN","MPIF001",99,0)
 ;
"RTN","MPIF001",100,0)
 ; This function updates the CMOR field in the Patient file
"RTN","MPIF001",101,0)
 ; DFN = ien in Patient file
"RTN","MPIF001",102,0)
 ; VCCI = CMOR ien from the institution file
"RTN","MPIF001",103,0)
 ; returned:  -1^error message - problem
"RTN","MPIF001",104,0)
 ;             1 - successful
"RTN","MPIF001",105,0)
 ; Exception will be generated if Update to File Fails only
"RTN","MPIF001",106,0)
 N RETURN,DIQUIET,DIE,DA,DR,Y,X,DIC
"RTN","MPIF001",107,0)
 S (RETURN,DIQUIET)=1
"RTN","MPIF001",108,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN PASSED" G EXIT4
"RTN","MPIF001",109,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT4
"RTN","MPIF001",110,0)
 I $G(VCCI)="" S RETURN="-1^NO CMOR PASSED" G EXIT4
"RTN","MPIF001",111,0)
 N CNT,TIEN S DIQUIET=1,CNT=0
"RTN","MPIF001",112,0)
 I '$D(NOLOCK) D LOCK
"RTN","MPIF001",113,0)
 ; moved to here to fix problem with timing
"RTN","MPIF001",114,0)
 I $E($$GETICN(DFN),1,3)=$P($$SITE^VASITE(),"^",3) S VCCI=$P($$SITE^VASITE(),"^")
"RTN","MPIF001",115,0)
 ; ^ to be sure site is self for a local icn
"RTN","MPIF001",116,0)
 S VCCI="`"_VCCI
"RTN","MPIF001",117,0)
 ; ^ Have ien stuff added to use ien instead of station number
"RTN","MPIF001",118,0)
REP S DIE="^DPT(",DA=DFN,DR="991.03///^S X=VCCI"
"RTN","MPIF001",119,0)
 D ^DIE
"RTN","MPIF001",120,0)
 S CNT=CNT+1
"RTN","MPIF001",121,0)
 S TIEN=$P($$MPINODE^MPIFAPI(DFN),"^",3)
"RTN","MPIF001",122,0)
 I "`"_TIEN'=VCCI&(CNT<4) G REP
"RTN","MPIF001",123,0)
 I "`"_TIEN'=VCCI&(CNT>3) D
"RTN","MPIF001",124,0)
 .S RETURN="-1^Couldn't Update CMOR"
"RTN","MPIF001",125,0)
 .D START^RGHLLOG(0)
"RTN","MPIF001",126,0)
 .D EXC^RGHLLOG(221,"Unable to update CMOR to "_$$STA^XUAF4(TIEN)_" for patient DFN= "_DFN,DFN)
"RTN","MPIF001",127,0)
 .D STOP^RGHLLOG(0)
"RTN","MPIF001",128,0)
 I '$D(NOLOCK) D UNLOCK
"RTN","MPIF001",129,0)
EXIT4 ;
"RTN","MPIF001",130,0)
 Q RETURN
"RTN","MPIF001",131,0)
 ;
"RTN","MPIF001",132,0)
SETICN(DFN,ICN,CHKSUM) ;
"RTN","MPIF001",133,0)
 ; ** this function is to only be used by approved packages **
"RTN","MPIF001",134,0)
 ;
"RTN","MPIF001",135,0)
 ; This function updates the ICN and ICN Checksum fields in the Patient 
"RTN","MPIF001",136,0)
 ; file for a given patient.
"RTN","MPIF001",137,0)
 ; DFN - ien in the Patient file to be updated
"RTN","MPIF001",138,0)
 ; ICN - ICN (without checksum) to be updated
"RTN","MPIF001",139,0)
 ; CHKSUM - ICN checksum
"RTN","MPIF001",140,0)
 ; return:  -1^error message - problem
"RTN","MPIF001",141,0)
 ;          1 - successful
"RTN","MPIF001",142,0)
 N RETURN,DIQUIET,DIE,DA,DR,RGRSICN,Y,ERR
"RTN","MPIF001",143,0)
 S (RETURN,DIQUIET,RGRSICN)=1
"RTN","MPIF001",144,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN PASSED" G EXIT5
"RTN","MPIF001",145,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT5
"RTN","MPIF001",146,0)
 I $G(ICN)="" S RETURN="-1^NO ICN PASSED" G EXIT5
"RTN","MPIF001",147,0)
 I $G(CHKSUM)="" S RETURN="-1^NO CHKSUM PASSED" G EXIT5
"RTN","MPIF001",148,0)
 I +$$GETICN(DFN)>0 I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3),$E($$GETICN(DFN),1,3)'=$E(ICN,1,3) S RETURN="-1^Don't overwrite national with local" G EXIT5
"RTN","MPIF001",149,0)
 ; ^ stop local from overwriting a national ICN
"RTN","MPIF001",150,0)
 I +$$GETICN(DFN)>0 I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3),$E($$GETICN(DFN),1,3)=$P($$SITE^VASITE(),"^",3) S RETURN="-1^Don't overwrite local ICN with another Local ICN" G EXIT5
"RTN","MPIF001",151,0)
 ; ^ STOP LOCAL FROM OVERWRITING ANOTHER LOCAL ICN
"RTN","MPIF001",152,0)
 I $D(^DPT("AICN",ICN)) D
"RTN","MPIF001",153,0)
 .Q:DFN=$O(^DPT("AICN",ICN,""))
"RTN","MPIF001",154,0)
 .I DFN'=($O(^DPT("AICN",ICN,""))) D
"RTN","MPIF001",155,0)
 ..N DFN2 S DFN2=$O(^DPT("AICN",ICN,""))
"RTN","MPIF001",156,0)
 ..I '$D(TWODFN) D TWODFNS^MPIF002(DFN2,DFN,ICN)
"RTN","MPIF001",157,0)
 .S RETURN="-1^ICN ALREADY IN USE"
"RTN","MPIF001",158,0)
 G:+RETURN=-1 EXIT5
"RTN","MPIF001",159,0)
 I '$D(NOLOCK) D LOCK
"RTN","MPIF001",160,0)
 S DIQUIET=1
"RTN","MPIF001",161,0)
 S CHKSUM=$$CHECKDG^MPIFSPC(ICN) ;**45 calculate checksum based upon what's passed for ICN and use that to update 991.02
"RTN","MPIF001",162,0)
 S DIE="^DPT(",DA=DFN,DR="991.01///^S X=ICN;991.02///^S X=CHKSUM"
"RTN","MPIF001",163,0)
 D ^DIE
"RTN","MPIF001",164,0)
 I +$G(Y)=-1 S RETURN="-1^UNSUCCESSFUL DIE CALL"
"RTN","MPIF001",165,0)
 I +RETURN>0 D
"RTN","MPIF001",166,0)
 .K ^DPT("AMPIMIS",DFN)
"RTN","MPIF001",167,0)
 .I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3) S ERR=$$SETLOC(DFN,1)
"RTN","MPIF001",168,0)
 .I $E(ICN,1,3)'=$P($$SITE^VASITE(),"^",3) S ERR=$$SETLOC(DFN,0)
"RTN","MPIF001",169,0)
 I '$D(NOLOCK) D UNLOCK
"RTN","MPIF001",170,0)
EXIT5 ;
"RTN","MPIF001",171,0)
 Q RETURN
"RTN","MPIF001",172,0)
 ;
"RTN","MPIF001",173,0)
SETLOC(DFN,DELFLAG) ;
"RTN","MPIF001",174,0)
 ; ** This function should be only used by approved packages **
"RTN","MPIF001",175,0)
 ;
"RTN","MPIF001",176,0)
 ; This function updates the LOCALLY ASSIGNED ICN field in the Patient
"RTN","MPIF001",177,0)
 ; for the given patient
"RTN","MPIF001",178,0)
 ;DFN - ien from Patient file of patient to be updated
"RTN","MPIF001",179,0)
 ;DELFLAG - 1 is to turn the flag on
"RTN","MPIF001",180,0)
 ;        - 0 is to turn off the flag
"RTN","MPIF001",181,0)
 ;
"RTN","MPIF001",182,0)
 N RETURN,DIQUIET,DIE,DA,DR,VALUE,Y
"RTN","MPIF001",183,0)
 S (RETURN,DIQUIET)=1
"RTN","MPIF001",184,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN PASSED" G EXIT6
"RTN","MPIF001",185,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT6
"RTN","MPIF001",186,0)
 I '$D(NOLOCK) D LOCK
"RTN","MPIF001",187,0)
 S DIQUIET=1,VALUE=$S($G(DELFLAG)=0:"@",1:1)
"RTN","MPIF001",188,0)
 S DIE="^DPT(",DA=DFN,DR="991.04///^S X=VALUE"
"RTN","MPIF001",189,0)
 D ^DIE
"RTN","MPIF001",190,0)
 I +$G(Y)=-1 S RETURN="-1^UNSUCCESSFUL DIE CALL"
"RTN","MPIF001",191,0)
 I +RETURN>0 K ^DPT("AMPIMIS",DFN)
"RTN","MPIF001",192,0)
 I '$D(NOLOCK) D UNLOCK
"RTN","MPIF001",193,0)
EXIT6 ;
"RTN","MPIF001",194,0)
 Q RETURN
"RTN","MPIF001",195,0)
 ;
"RTN","MPIF001",196,0)
IFLOCAL(DFN) ; This function is used to see if a patient has a local ICN
"RTN","MPIF001",197,0)
 ; DFN - ien of patient in Patient file
"RTN","MPIF001",198,0)
 ; returned:  0 = patient does not exist, dfn is not defined or no MPI node OR Patient does not have a local ICN
"RTN","MPIF001",199,0)
 ;            1 = patient has a Local ICN assigned
"RTN","MPIF001",200,0)
 Q:$G(DFN)="" 0
"RTN","MPIF001",201,0)
 Q:$G(^DPT(DFN,0))="" 0
"RTN","MPIF001",202,0)
 Q:'$D(^DPT(DFN,"MPI")) 0
"RTN","MPIF001",203,0)
 Q:$E($$GETICN(DFN),1,3)=$P($$SITE^VASITE,"^",3) 1
"RTN","MPIF001",204,0)
 Q 0
"RTN","MPIF001",205,0)
 ;
"RTN","MPIF001",206,0)
IFVCCI(DFN) ; this function returns 1 if your facility is the CMOR for the given pt
"RTN","MPIF001",207,0)
 ; DFN - ien of patient in Patient file
"RTN","MPIF001",208,0)
 ; returns: 1 = your site in the CMOR for this patient
"RTN","MPIF001",209,0)
 ;          -1 = your site is not the CMOR for this patient
"RTN","MPIF001",210,0)
 ;          0^ERROR MSG
"RTN","MPIF001",211,0)
 N VCCI,SITE
"RTN","MPIF001",212,0)
 I $G(DFN)'>0 Q "0^No DFN Passed"
"RTN","MPIF001",213,0)
 S VCCI=$P($$GETVCCI(DFN),"^",1)
"RTN","MPIF001",214,0)
 S SITE=$P($$SITE^VASITE,"^",3)\1
"RTN","MPIF001",215,0)
 I $P(VCCI,"^",1)=-1 Q -1
"RTN","MPIF001",216,0)
 I VCCI'=SITE Q -1
"RTN","MPIF001",217,0)
 Q 1
"RTN","MPIF001",218,0)
 ;
"RTN","MPIF001",219,0)
HL7CMOR(DFN,SEP) ; This function returns the CMOR station number and institution name for
"RTN","MPIF001",220,0)
 ; the given patient.
"RTN","MPIF001",221,0)
 ; DFN = ien for patient in Patient file
"RTN","MPIF001",222,0)
 ; SEP = delimiter to separate station number and name
"RTN","MPIF001",223,0)
 ; returned:  Station Number <sep> Institution name
"RTN","MPIF001",224,0)
 ;            -1^error message
"RTN","MPIF001",225,0)
 N RETURN,NODE,PTR,STAT
"RTN","MPIF001",226,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN" G EXIT7
"RTN","MPIF001",227,0)
 I $G(SEP)="" S RETURN="-1^NO FIELD SEPERATOR" G EXIT7
"RTN","MPIF001",228,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT7
"RTN","MPIF001",229,0)
 I $$MPINODE^MPIFAPI(DFN)<1 S RETURN="-1^NO MPI NODE" G EXIT7
"RTN","MPIF001",230,0)
 S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIF001",231,0)
 S PTR=$P(NODE,"^",3)
"RTN","MPIF001",232,0)
 I PTR'>0 S RETURN="-1^NO CMOR DEFINED FOR PT" G EXIT7
"RTN","MPIF001",233,0)
 S STAT=$$NNT^XUAF4(PTR)
"RTN","MPIF001",234,0)
 I STAT="" S RETURN="-1^PTS CMOR IS DANGLING PTR" G EXIT7
"RTN","MPIF001",235,0)
 I $P(STAT,"^")="" S RETURN="-1^NO INSTITUTION NAME" G EXIT7
"RTN","MPIF001",236,0)
 S RETURN=$P(STAT,"^",2)_SEP_$P(STAT,"^")
"RTN","MPIF001",237,0)
EXIT7 ;
"RTN","MPIF001",238,0)
 Q RETURN
"RTN","MPIF001",239,0)
 ;
"RTN","MPIF001",240,0)
LOCK ;
"RTN","MPIF001",241,0)
 F  L +^DPT(DFN,"MPI"):10 Q:$T
"RTN","MPIF001",242,0)
 Q
"RTN","MPIF001",243,0)
 ;
"RTN","MPIF001",244,0)
UNLOCK ;
"RTN","MPIF001",245,0)
 L -^DPT(DFN,"MPI")
"RTN","MPIF001",246,0)
 Q
"RTN","MPIFA24")
0^4^B21971494^B21542595
"RTN","MPIFA24",1,0)
MPIFA24 ;BPOFO/CMC-A24 PROCESSING ROUTINE ;18 Mar 02
"RTN","MPIFA24",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**22,24,27,31,25,41,39,48**;30 Apr 99;Build 6
"RTN","MPIFA24",3,0)
 ;
"RTN","MPIFA24",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFA24",5,0)
 ;  START, EXC, STOP^RGHLLOG - #2796
"RTN","MPIFA24",6,0)
 ;  BLDEVN, BLDPD1, BLDPID^VAFCQRY - #3630
"RTN","MPIFA24",7,0)
 ;  ^DPT("AICN" - #2070
"RTN","MPIFA24",8,0)
 ;  DELETETF^VAFCTFU, FILE^VAFCTFU - #2988
"RTN","MPIFA24",9,0)
 ;
"RTN","MPIFA24",10,0)
 ;PROCESS A24 RESULTING FROM A28 ADD TO MPI MESSAGE OR FROM A40 MERGE
"RTN","MPIFA24",11,0)
A24 ;
"RTN","MPIFA24",12,0)
 N MPII,MPIJ,ARRY,SEG,CNT,ERR,SITE,MSG,DFN,IEN,LIST,RARRY
"RTN","MPIFA24",13,0)
 S (CNT,ERR,FIRST)=1
"RTN","MPIFA24",14,0)
 F MPII=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE D
"RTN","MPIFA24",15,0)
 .S MPIJ=0 F  S MPIJ=$O(HLNODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=HLNODE(MPIJ)
"RTN","MPIFA24",16,0)
 .S SEG=$E(HLNODE,1,3)
"RTN","MPIFA24",17,0)
 .I SEG="MSH" D MSH(.ARRY,.MSG) Q
"RTN","MPIFA24",18,0)
 .I SEG="EVN" D EVN(.ARRY,.MSG) Q
"RTN","MPIFA24",19,0)
 .I SEG="PID" D PID(.ARRY,.MSG,FIRST) D:FIRST=1  S FIRST=2 Q
"RTN","MPIFA24",20,0)
 ..;preserve the retained ICN values 991.01 and 991.02
"RTN","MPIFA24",21,0)
 .. S RARRY(991.01)=ARRY(991.01),RARRY(991.02)=ARRY(991.02)
"RTN","MPIFA24",22,0)
 .I SEG="PD1" D PD1(.ARRY,.MSG) Q
"RTN","MPIFA24",23,0)
 ;
"RTN","MPIFA24",24,0)
 ;restore the retained ICN values
"RTN","MPIFA24",25,0)
 S ARRY(991.01)=RARRY(991.01),ARRY(991.02)=RARRY(991.02)
"RTN","MPIFA24",26,0)
 ;UPDATE 991.01, 991.02, 991.03
"RTN","MPIFA24",27,0)
 ;**41 first check for DFN, if this DFN location is here
"RTN","MPIFA24",28,0)
 I $G(ARRY("DFN",2))'=""&($G(ARRY("DFNLOC"))=$P($$SITE^VASITE,"^",3)) S DFN=ARRY("DFN",2)
"RTN","MPIFA24",29,0)
 ;**41 if dfn is not passed set DFN from ICN
"RTN","MPIFA24",30,0)
 I $G(DFN)="" D
"RTN","MPIFA24",31,0)
 . I $G(ARRY("ICN",2))'="" S DFN=$$GETDFN^MPIF001(ARRY("ICN",2))
"RTN","MPIFA24",32,0)
 . I $G(ARRY("ICN",2))=""!(+$G(DFN)'>0) D
"RTN","MPIFA24",33,0)
 .. I $G(ARRY("DFN",2))'="" S DFN=ARRY("DFN",2)
"RTN","MPIFA24",34,0)
 .. I $G(ARRY("DFN",2))="" S DFN=ARRY("DFN",1)
"RTN","MPIFA24",35,0)
 S ARRY(991.03)=$$LKUP^XUAF4(ARRY(991.03))
"RTN","MPIFA24",36,0)
 I +$G(DFN)'>0 S ERR="-1^Unknown Identifier(s) ICN#"_$G(ARRY("ICN",2))_" and DFN#"_$G(ARRY("DFN",2))
"RTN","MPIFA24",37,0)
 I +$G(DFN)>0 S ERR=$$UPDATE^MPIFAPI(DFN,"ARRY",0) D
"RTN","MPIFA24",38,0)
 .;remove ALL Treating Facilities except your sites and add the CMOR
"RTN","MPIFA24",39,0)
 .D TFL^VAFCTFU1(.LIST,DFN) I $O(LIST(0)) D
"RTN","MPIFA24",40,0)
 .. N LOC,MPINODE,LOCIEN,CMOR,MPIFX,ERROR
"RTN","MPIFA24",41,0)
 .. S (CMOR,MPIFX)=0 F  S MPIFX=$O(LIST(MPIFX)) Q:'MPIFX  I $P(LIST(MPIFX),"^",5)="VAMC" D
"RTN","MPIFA24",42,0)
 ... ;get MPI node
"RTN","MPIFA24",43,0)
 ... S MPINODE=$$MPINODE^MPIFAPI(DFN),LOC=$P(LIST(MPIFX),"^"),LOCIEN=$$IEN^XUAF4(LOC)
"RTN","MPIFA24",44,0)
 ... I LOC=$P($$SITE^VASITE,"^",3) Q  ;do not delete own site
"RTN","MPIFA24",45,0)
 ... I LOCIEN=$P(MPINODE,"^",3) S CMOR=LOCIEN Q  ;do not delete CMOR site
"RTN","MPIFA24",46,0)
 ... S ERROR=$$DELETETF^VAFCTFU($P(MPINODE,"^",1),LOCIEN)
"RTN","MPIFA24",47,0)
 .. ;add CMOR site to TF list if it did not already exist
"RTN","MPIFA24",48,0)
 .. I CMOR'=0 D FILE^VAFCTFU(DFN,CMOR,1)
"RTN","MPIFA24",49,0)
 .; trigger A31 to MPI incase there have been edits since the ICN was created -- tasked off
"RTN","MPIFA24",50,0)
 .; **39 DON'T TASK OFF A31 IF MOVING FROM ONE NATIONAL ICN TO A DIFFERENT NATIONAL ICN
"RTN","MPIFA24",51,0)
 .I ARRY("ICN",1)=ARRY("ICN",2) D
"RTN","MPIFA24",52,0)
 ..S ZTRTN="TA31^MPIFA31B",ZTDESC="A31 triggered from A24 for DFN "_DFN ;**39 added DFN to text
"RTN","MPIFA24",53,0)
 ..S ZTSAVE("DFN")=DFN,ZTIO="",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,1,0)
"RTN","MPIFA24",54,0)
 ..D ^%ZTLOAD
"RTN","MPIFA24",55,0)
 .I ARRY("ICN",1)'=ARRY("ICN",2) D RESEX^MPIFDUP(DFN,2) ;**48
"RTN","MPIFA24",56,0)
 .K ZTRTN,ZTDESC,ZTIO,ZTSAVE,ZTDTH,ZTREQ
"RTN","MPIFA24",57,0)
 ;
"RTN","MPIFA24",58,0)
 S HLA("HLA",1)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS")_$S(+$G(ERR)'>0:$P(ERR,"^",2),1:"")
"RTN","MPIFA24",59,0)
 S $P(HLA("HLA",1),HL("FS"),7)="ICN="_ARRY("ICN",1)
"RTN","MPIFA24",60,0)
 D LINK^HLUTIL3(ARRY("SITE"),.LINK) S IEN=$O(LINK(0)),HLL("LINKS",1)="^"_LINK(IEN)
"RTN","MPIFA24",61,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.MPIFRSLT,"",.HL)
"RTN","MPIFA24",62,0)
 K LINK,MPIFRSLT
"RTN","MPIFA24",63,0)
 ;PATCH 25
"RTN","MPIFA24",64,0)
 I ARRY("ICN",1)'=ARRY("ICN",2),ARRY("ICN",2)'="" D
"RTN","MPIFA24",65,0)
 .; ^ checking if this is a result of a "merge" of ICNs from the MPI
"RTN","MPIFA24",66,0)
 .; to trigger if this is station 200 the MERGE for the FHIE Framework
"RTN","MPIFA24",67,0)
 .Q:$P($$SITE^VASITE,"^",3)'=200
"RTN","MPIFA24",68,0)
 .N FHIE S FHIE=$$MERGE^OMGPIDMI(ARRY("ICN",2),ARRY("ICN",1))
"RTN","MPIFA24",69,0)
 .;       ^^ THIS API IS ONLY AVAILABLE ON THE FHIE HOST SYSTEM
"RTN","MPIFA24",70,0)
 .I +FHIE=-1 D START^RGHLLOG(),EXC^RGHLLOG(208,$P(FHIE,"^",2),DFN),STOP^RGHLLOG()
"RTN","MPIFA24",71,0)
 Q
"RTN","MPIFA24",72,0)
 ;
"RTN","MPIFA24",73,0)
MSH(ARY,MSG) ;processing MSH fields
"RTN","MPIFA24",74,0)
 N COMP
"RTN","MPIFA24",75,0)
 S COMP=$E(HL("ECH"),1)
"RTN","MPIFA24",76,0)
 S ARY("SITE")=$$LKUP^XUAF4($P($P(MSG,HL("FS"),4),COMP))
"RTN","MPIFA24",77,0)
 Q
"RTN","MPIFA24",78,0)
 ;
"RTN","MPIFA24",79,0)
EVN(ARY,MSG) ;processing EVN fields
"RTN","MPIFA24",80,0)
 S ARY("EVTR")=$P(MSG,HL("FS"),2) ;not currently used
"RTN","MPIFA24",81,0)
 S ARY("DLT")=$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","MPIFA24",82,0)
 Q
"RTN","MPIFA24",83,0)
 ;
"RTN","MPIFA24",84,0)
PID(ARY,MSG,FIRST) ;processing PID fields
"RTN","MPIFA24",85,0)
 N REP,PID,COMP,SUBCOMP,MPIDFN,MPISSN,ICN
"RTN","MPIFA24",86,0)
 S REP=$E(HL("ECH"),2),COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIFA24",87,0)
 S MPISSN="",MPIDFN=""
"RTN","MPIFA24",88,0)
 ;**41 replaced with line below D PIDPROC^MPIFA43(.ICN,.MPISSN,.MPIDFN,.PID)
"RTN","MPIFA24",89,0)
 D PIDP^RGADTP1(.MSG,.ARY,.HL)
"RTN","MPIFA24",90,0)
 I FIRST=1 S ARY(991.01)=+ARY("ICN"),ARY(991.02)=$P(ARY("ICN"),"V",2)
"RTN","MPIFA24",91,0)
 S ARY("ICN",FIRST)=ARY("ICN")
"RTN","MPIFA24",92,0)
 S ARY("SSN",FIRST)=ARY("SSN")
"RTN","MPIFA24",93,0)
 S ARY("DFN",FIRST)=ARY("DFN")
"RTN","MPIFA24",94,0)
 Q
"RTN","MPIFA24",95,0)
 ;
"RTN","MPIFA24",96,0)
PD1(ARY,MSG) ;processing PD1 fields
"RTN","MPIFA24",97,0)
 N COMP
"RTN","MPIFA24",98,0)
 S COMP=$E(HL("ECH"),1)
"RTN","MPIFA24",99,0)
 S ARY(991.03)=$P($P(HLNODE,HL("FS"),4),COMP,3)
"RTN","MPIFA24",100,0)
 Q
"RTN","MPIFA24",101,0)
 ;
"RTN","MPIFA24",102,0)
PROC ;
"RTN","MPIFA24",103,0)
 N NXT,DFN
"RTN","MPIFA24",104,0)
 F NXT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIFA24",105,0)
 .I $E(HLNODE,1,3)="MSA" S DFN=$P($P(HLNODE,HL("FS"),7),"=",2)
"RTN","MPIFA24",106,0)
 .I $E(HLNODE,1,3)="MSA"&($P(HLNODE,HL("FS"),4)'="") D
"RTN","MPIFA24",107,0)
 ..; ERROR RETURNED IN MSA - LOG EXCEPTION
"RTN","MPIFA24",108,0)
 ..D START^RGHLLOG(HLMTIEN,"","")
"RTN","MPIFA24",109,0)
 ..D EXC^RGHLLOG(208,$P(HLNODE,HL("FS"),4)_" for HL msg# "_HLMTIEN,DFN)
"RTN","MPIFA24",110,0)
 ..D STOP^RGHLLOG(0)
"RTN","MPIFA24",111,0)
 K ^XTMP("MPIFA24%"_DFN)
"RTN","MPIFA24",112,0)
 Q
"RTN","MPIFAPI")
0^6^B49088587^B47315880
"RTN","MPIFAPI",1,0)
MPIFAPI ;CMC/BP-APIS FOR MPI ;DEC 21, 1998
"RTN","MPIFAPI",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,14,16,17,21,27,28,33,35,37,43,45,44,46,48**;30 Apr 99;Build 6
"RTN","MPIFAPI",3,0)
 ; Integration Agreements Utilized:
"RTN","MPIFAPI",4,0)
 ;   ^DPT( - #2070 and #4079
"RTN","MPIFAPI",5,0)
 ;   ^DPT("AICN", ^DPT("AMPIMIS", ^DPT("ASCN2" - #2070
"RTN","MPIFAPI",6,0)
 ;   EXC, START, STOP^RGHLLOG - #2796
"RTN","MPIFAPI",7,0)
 ;
"RTN","MPIFAPI",8,0)
EN2() ;NEW ENTRY POINT FOR LOCALS
"RTN","MPIFAPI",9,0)
 N MPIOUT,DIC,MPICHK,MPINCK,MPINNM,MPINUM1,DA,MPINUM
"RTN","MPIFAPI",10,0)
 I $O(^MPIF(984.1,0))="" G SETUP
"RTN","MPIFAPI",11,0)
AGN2 L +^MPIF(984.1):1 E  H 3 G AGN2
"RTN","MPIFAPI",12,0)
 S MPINUM=0,X=$$SITE^VASITE,X=$P(X,"^",3),X=X\1
"RTN","MPIFAPI",13,0)
 S DIC="^MPIF(984.1,",DIC(0)="XZ" D ^DIC
"RTN","MPIFAPI",14,0)
 S MPINUM1=$P(Y(0),"^",4),MPICHK=$P(Y(0),"^",5),MPINNM=MPINUM1+1
"RTN","MPIFAPI",15,0)
 S MPINUM=MPINUM1_"V"_MPICHK,MPINCK=$$CHECKDG^MPIFSPC(MPINNM)
"RTN","MPIFAPI",16,0)
 S DA=1,DIE="^MPIF(984.1,",DR="1////^S X=MPINUM1;2////^S X=MPICHK;3////^S X=MPINNM;5////"_MPINCK
"RTN","MPIFAPI",17,0)
 D ^DIE
"RTN","MPIFAPI",18,0)
 K DIE,DR,X,Y
"RTN","MPIFAPI",19,0)
 L -^MPIF(984.1)
"RTN","MPIFAPI",20,0)
 Q MPINUM
"RTN","MPIFAPI",21,0)
SETUP ;
"RTN","MPIFAPI",22,0)
 N CHK,NUM,NXTCHK,NXTNUM,SITE,DA
"RTN","MPIFAPI",23,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1
"RTN","MPIFAPI",24,0)
 S DIC="^MPIF(984.1,",DA=1,DIC(0)="",X=SITE
"RTN","MPIFAPI",25,0)
 S NUM=SITE_"0000000",CHK=$$CHECKDG^MPIFSPC(NUM),MPINUM=NUM_"V"_CHK
"RTN","MPIFAPI",26,0)
 S NXTNUM=NUM+1,NXTCHK=$$CHECKDG^MPIFSPC(NXTNUM)
"RTN","MPIFAPI",27,0)
 S DIC("DR")="1////^S X=NUM;2////^S X=CHK;3////^S X=NXTNUM;5////"_NXTCHK
"RTN","MPIFAPI",28,0)
 K DD,D0
"RTN","MPIFAPI",29,0)
 D FILE^DICN
"RTN","MPIFAPI",30,0)
 K DIC,X,Y
"RTN","MPIFAPI",31,0)
 Q MPINUM
"RTN","MPIFAPI",32,0)
 ;
"RTN","MPIFAPI",33,0)
MPILINK() ;returns MPI logical Link
"RTN","MPIFAPI",34,0)
 N MPIL,MPILINK
"RTN","MPIFAPI",35,0)
 D LINK^HLUTIL3("MPI",.MPIL)
"RTN","MPIFAPI",36,0)
 I '$D(MPIL) Q "-1^NOT DEFINED"
"RTN","MPIFAPI",37,0)
 S MPILINK=$O(MPIL(0))
"RTN","MPIFAPI",38,0)
 I MPILINK="" Q "-1^NOT DEFINED"
"RTN","MPIFAPI",39,0)
 S MPILINK=$G(MPIL(MPILINK))
"RTN","MPIFAPI",40,0)
 Q MPILINK
"RTN","MPIFAPI",41,0)
 ;
"RTN","MPIFAPI",42,0)
SUBNUM(DFN) ; returns SCN from MPI node for given DFN
"RTN","MPIFAPI",43,0)
 ; DFN - ien of patient file
"RTN","MPIFAPI",44,0)
 ; returns:  -1^error message << always returns.
"RTN","MPIFAPI",45,0)
 ;*** Subscription control numbers no longer exist
"RTN","MPIFAPI",46,0)
 Q "-1^No Subscription Control Number for DFN "_DFN
"RTN","MPIFAPI",47,0)
 ;
"RTN","MPIFAPI",48,0)
MPINODE(DFN) ; returns MPI node for given DFN
"RTN","MPIFAPI",49,0)
 ; DFN - patient file ien
"RTN","MPIFAPI",50,0)
 ; returns:  -1^error message or MPI node from patient file
"RTN","MPIFAPI",51,0)
 N TMP
"RTN","MPIFAPI",52,0)
 I '$D(DFN) Q "-1^DFN not defined"
"RTN","MPIFAPI",53,0)
 I '$D(^DPT(DFN)) Q "-1^DFN doesn't exist"
"RTN","MPIFAPI",54,0)
 I '$D(^DPT(DFN,"MPI")) Q "-1^No MPI node for DFN "_DFN
"RTN","MPIFAPI",55,0)
 L +^DPT("MPI",DFN):10 ;**45 added lock check for getting ICN data back
"RTN","MPIFAPI",56,0)
 N NODE S NODE=$G(^DPT(DFN,"MPI"))
"RTN","MPIFAPI",57,0)
 I NODE=""!(NODE?."^") S NODE="-1^No MPI data for DFN "_DFN
"RTN","MPIFAPI",58,0)
 I +NODE>0 D
"RTN","MPIFAPI",59,0)
 .;**45 checking if checksum for ICN is correct, if not update the 991.02 field
"RTN","MPIFAPI",60,0)
 .; and include new value in NODE returned.
"RTN","MPIFAPI",61,0)
 .N CHK S CHK=$$CHECKDG^MPIFSPC($P(NODE,"^"))
"RTN","MPIFAPI",62,0)
 .I CHK'=$P(NODE,"^",2) S TMP=$$SETICN^MPIF001(DFN,$P(NODE,"^"),CHK) S $P(NODE,"^",2)=CHK
"RTN","MPIFAPI",63,0)
 L -^DPT("MPI",DFN)
"RTN","MPIFAPI",64,0)
 Q NODE
"RTN","MPIFAPI",65,0)
 ;
"RTN","MPIFAPI",66,0)
GETADFN(ICN) ; return DFN ONLY if ICN is the active ICN
"RTN","MPIFAPI",67,0)
 ; ICN - Integration Control Number for patient to be returned
"RTN","MPIFAPI",68,0)
 ; returns:  -1^error message
"RTN","MPIFAPI",69,0)
 ;           DFN - IEN for the patient entry in the Patient file (#2)
"RTN","MPIFAPI",70,0)
 N RETURN,DFN
"RTN","MPIFAPI",71,0)
 I $G(ICN)'>0 Q "-1^NO ICN"
"RTN","MPIFAPI",72,0)
 I '$D(^DPT("AICN",ICN)) Q "-1^ICN NOT IN DATABASE"
"RTN","MPIFAPI",73,0)
 S DFN=$O(^DPT("AICN",ICN,0))
"RTN","MPIFAPI",74,0)
 I $G(DFN)'>0 Q "-1^BAD AICN CROSS-REFERENCE"
"RTN","MPIFAPI",75,0)
 I $P($G(^DPT(DFN,"MPI")),"^")'=ICN Q "-1^ICN is not Active one"
"RTN","MPIFAPI",76,0)
 Q DFN
"RTN","MPIFAPI",77,0)
 ;
"RTN","MPIFAPI",78,0)
UPDATE(DFN,ARR,MPISILNT,REMOVE) ;api to edit 'mpi','mpifhis' and 'mpicmor' nodes
"RTN","MPIFAPI",79,0)
 ;**37 UPDATE module moved 3/30/05 from MPIFAPI into MPIFAPI1.
"RTN","MPIFAPI",80,0)
 ;Linetag must remain due to DBIA #2706.
"RTN","MPIFAPI",81,0)
 Q $$UPDATE^MPIFAPI1(DFN,ARR,.MPISILNT,.REMOVE)
"RTN","MPIFAPI",82,0)
 ;
"RTN","MPIFAPI",83,0)
MPIQ(DFN) ;MPI QUERY
"RTN","MPIFAPI",84,0)
 N MPIFARR
"RTN","MPIFAPI",85,0)
 L +^DPT(DFN):2 I '$T,'$D(MPIFS) W $C(7),!!,"Patient is being edited. No attempt will be made to connect to the MPI." H 2 Q
"RTN","MPIFAPI",86,0)
 I '$D(MPIFS) D  ;Not from SmartCard background job
"RTN","MPIFAPI",87,0)
 .;**37 mods to L -^DPT
"RTN","MPIFAPI",88,0)
 .I $G(DGNEW)=1 D  ;New patient, fields always blank, ask
"RTN","MPIFAPI",89,0)
 ..D WRTLN
"RTN","MPIFAPI",90,0)
 ..; **44 Adding Pseudo SSN Reason to the list of prompted fields if SSN is a pseudo and there isn't already a reason stored
"RTN","MPIFAPI",91,0)
 ..N MPIFP S MPIFP="" S DA=DFN,DIQ(0)="EI",DIC=2,DR=".09;.0906",DIQ="MPIFARR" D EN^DIQ1 K DA,DR,DIC,DQ,DR
"RTN","MPIFAPI",92,0)
 ..I $D(MPIFARR(2,DFN,.0906,"I")) D
"RTN","MPIFAPI",93,0)
 ...I MPIFARR(2,DFN,.09,"E")["P",("S"[MPIFARR(2,DFN,.0906,"I")) S MPIFP=".0906;"
"RTN","MPIFAPI",94,0)
 ..S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",95,0)
 ..S DR=MPIFP_".2403;.092;.093;1",DR(2,2.01)=".01" D ^DIE K DA,DIE,DR Q
"RTN","MPIFAPI",96,0)
 .I $G(DGNEW)="" D  ;Existing patient, get current values
"RTN","MPIFAPI",97,0)
 ..N MPIDOB,IMPRS,MPIMMN,MPICTY,MPIST
"RTN","MPIFAPI",98,0)
 ..S DIC=2,DR=".02;.03;.09;.0906;.092;.093;.2403;994;1",DR(2.01)=".01" ;**44 include pseudo ssn reason to list
"RTN","MPIFAPI",99,0)
 ..S DA=DFN,DA(2.01)=1,DIQ(0)="EI",DIQ="MPIFARR"
"RTN","MPIFAPI",100,0)
 ..D EN^DIQ1 K DA,DIC,DIQ,DR
"RTN","MPIFAPI",101,0)
 ..;build DR from blank fields / imprecise DOB / pseudo SSN
"RTN","MPIFAPI",102,0)
 ..S DR=""
"RTN","MPIFAPI",103,0)
 ..S MPIDOB=$G(MPIFARR(2,DFN,.03,"I")) ;DATE OF BIRTH
"RTN","MPIFAPI",104,0)
 ..I MPIDOB="" S DR=DR_".03;" ;DOB null
"RTN","MPIFAPI",105,0)
 ..;Is DOB imprecise?
"RTN","MPIFAPI",106,0)
 ..I MPIDOB'="" S IMPRS=0 D
"RTN","MPIFAPI",107,0)
 ...I $E(MPIDOB,4,7)="0000" S IMPRS=1 ;Year only; no month/day
"RTN","MPIFAPI",108,0)
 ...I ($E(MPIDOB,6,7)="00")&($E(MPIDOB,4,5)'="00") S IMPRS=1 ;Year/month only; no day
"RTN","MPIFAPI",109,0)
 ...I IMPRS=1 S DR=DR_".03;" ;DOB imprecise
"RTN","MPIFAPI",110,0)
 ..I $G(MPIFARR(2,DFN,.02,"I"))="" S DR=DR_".02;" ;SEX
"RTN","MPIFAPI",111,0)
 ..;if the SSN is null, add to prompted fields
"RTN","MPIFAPI",112,0)
 ..N SSNP S SSNP=0
"RTN","MPIFAPI",113,0)
 ..I ($G(MPIFARR(2,DFN,.09,"E"))="") S DR=DR_".09;",SSNP=1 ;SSN
"RTN","MPIFAPI",114,0)
 ..I DR'="" D
"RTN","MPIFAPI",115,0)
 ...D WRTLN
"RTN","MPIFAPI",116,0)
 ...S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",117,0)
 ...D ^DIE K DA,DIE,DR,DIC,DIQ
"RTN","MPIFAPI",118,0)
 ...;if SSN was prompted then reinitialize SSN ARRAY variable
"RTN","MPIFAPI",119,0)
 ...I SSNP=1 S MPIFARR(2,DFN,.09,"E")="" S DIC=2,DR=".09" S DA=DFN,DA(2.01)=1,DIQ(0)="E",DIQ="MPIFARR" D EN^DIQ1 K DA,DIC,DIQ,DR
"RTN","MPIFAPI",120,0)
 ...;**44 if the PSEUDO SSN REASON field exist
"RTN","MPIFAPI",121,0)
 ..S DR="" ;reset DR to null to be able to concatenate the fields together since DR was just killed above
"RTN","MPIFAPI",122,0)
 ..I $D(MPIFARR(2,DFN,.0906,"I")) D
"RTN","MPIFAPI",123,0)
 ...;check to see if the SSN is a PSEUDO and the PSEUDO SSN REASON is null or "S" (FOLLOW-UP REQUIRED), if so add PSEUDO SSN REASON to the prompted fields
"RTN","MPIFAPI",124,0)
 ...I MPIFARR(2,DFN,.09,"E")["P",(MPIFARR(2,DFN,.0906,"I")="") S DR=DR_".0906;" ;**48 correct when SSN is prompted
"RTN","MPIFAPI",125,0)
 ...I MPIFARR(2,DFN,.09,"E")["P",(MPIFARR(2,DFN,.0906,"I")="S") S DR=DR_".09;" ;**48 correct when SSN is prompted
"RTN","MPIFAPI",126,0)
 ..I $G(MPIFARR(2,DFN,994,"I"))="" S DR=DR_"994;" ;MULTIPLE BIRTH INDICATOR
"RTN","MPIFAPI",127,0)
 ..S MPIMMN=$G(MPIFARR(2,DFN,.2403,"E")) ;MOTHER'S MAIDEN NAME
"RTN","MPIFAPI",128,0)
 ..I $$VALDT(MPIMMN) S DR=DR_".2403;" ;Validate MMN value
"RTN","MPIFAPI",129,0)
 ..S MPICTY=$G(MPIFARR(2,DFN,.092,"E")) ;PLACE OF BIRTH [CITY]
"RTN","MPIFAPI",130,0)
 ..S MPIST=$G(MPIFARR(2,DFN,.093,"E")) ;PLACE OF BIRTH [STATE]
"RTN","MPIFAPI",131,0)
 ..I $S($$VALDT(MPICTY):1,$$VALDT(MPIST):1,1:0) S DR=DR_".092;.093;" ;Validate POB [CITY] & [STATE] value
"RTN","MPIFAPI",132,0)
 ..I $G(MPIFARR(2.01,1,.01,"E"))="" S DR=DR_"1",DR(2,2.01)=".01;1" ;ALIAS **44 ADDING ALIAS SSN TO FIELDS
"RTN","MPIFAPI",133,0)
 ..I DR'="" D
"RTN","MPIFAPI",134,0)
 ...D WRTLN
"RTN","MPIFAPI",135,0)
 ...S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",136,0)
 ...D ^DIE K DA,DIE,DR,DIC,DIQ
"RTN","MPIFAPI",137,0)
 L -^DPT(DFN)
"RTN","MPIFAPI",138,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","MPIFAPI",139,0)
 K MPIFRTN D VTQ^MPIFQ0
"RTN","MPIFAPI",140,0)
 ;**43 No longer get list of potential matches to pick from
"RTN","MPIFAPI",141,0)
 ;I $G(MPIFRTN)="" D
"RTN","MPIFAPI",142,0)
 ;. ^ Quit at LM screen when presented with a list of possible matches
"RTN","MPIFAPI",143,0)
 ;. \/ setup Local ICN and proceed
"RTN","MPIFAPI",144,0)
 ;.N ICN,ERR
"RTN","MPIFAPI",145,0)
 ;.S ICN=$$EN2^MPIFAPI()
"RTN","MPIFAPI",146,0)
 ;.Q:ICN=""!(+ICN=-1)
"RTN","MPIFAPI",147,0)
 ;.S ERR=$$SETICN^MPIF001(DFN,+ICN,$P(ICN,"V",2))
"RTN","MPIFAPI",148,0)
 ;.Q:+ERR=-1
"RTN","MPIFAPI",149,0)
 ;. ^ couldn't set ICN don't set other fields
"RTN","MPIFAPI",150,0)
 ;.S ERR=$$SETLOC^MPIF001(DFN,1),ERR=$$CHANGE^MPIF001(DFN,$P($$SITE^VASITE,"^"))
"RTN","MPIFAPI",151,0)
 K MPIFRTN,ZTREQ
"RTN","MPIFAPI",152,0)
 Q
"RTN","MPIFAPI",153,0)
 ;
"RTN","MPIFAPI",154,0)
MPIQQ(PDFN) ; Entry point for queuing d/c
"RTN","MPIFAPI",155,0)
 ; Returned is -1^error message OR Task #
"RTN","MPIFAPI",156,0)
 Q:'$D(PDFN) "-1^No DFN passed"
"RTN","MPIFAPI",157,0)
 S ZTRTN="MPIQ^MPIFAPI(PDFN)"
"RTN","MPIFAPI",158,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","MPIFAPI",159,0)
 S ZTSAVE("PDFN")=PDFN,ZTSAVE("MPIFS")=1
"RTN","MPIFAPI",160,0)
 ; ^ silent flag
"RTN","MPIFAPI",161,0)
 S ZTIO="",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,1,0)
"RTN","MPIFAPI",162,0)
 D ^%ZTLOAD
"RTN","MPIFAPI",163,0)
 D HOME^%ZIS K IO("Q")
"RTN","MPIFAPI",164,0)
 N TSK S TSK=ZTSK
"RTN","MPIFAPI",165,0)
 K ZTSAVE,ZTRTN,ZTIO,ZTDTH,ZTSK
"RTN","MPIFAPI",166,0)
 Q TSK
"RTN","MPIFAPI",167,0)
 ;
"RTN","MPIFAPI",168,0)
WRTLN ;**37 Write intro text ONLY if there are fields to ask
"RTN","MPIFAPI",169,0)
 W !!,"Please verify or update the following information:",!
"RTN","MPIFAPI",170,0)
 Q
"RTN","MPIFAPI",171,0)
 ;
"RTN","MPIFAPI",172,0)
VALDT(VAL) ;**37 Validate value passed in.
"RTN","MPIFAPI",173,0)
 ;Prompt if field contains invalid data (e.g., UNKNOWN, NOT KNOWN, etc.)
"RTN","MPIFAPI",174,0)
 ;Returns 0 if not found
"RTN","MPIFAPI",175,0)
 ;Returns 1 if found
"RTN","MPIFAPI",176,0)
 I VAL="" Q 1
"RTN","MPIFAPI",177,0)
 I $E($$UP^XLFSTR(VAL),1,3)="UNK" Q 1
"RTN","MPIFAPI",178,0)
 I $E($$UP^XLFSTR(VAL),1,4)="NONE" Q 1
"RTN","MPIFAPI",179,0)
 I $E($$UP^XLFSTR(VAL),1,4)="NOT " Q 1
"RTN","MPIFAPI",180,0)
 I $$UP^XLFSTR(VAL)["UNAVAILABLE" Q 1
"RTN","MPIFAPI",181,0)
 I $$UP^XLFSTR(VAL)["DECEASED" Q 1
"RTN","MPIFAPI",182,0)
 I $E($$UP^XLFSTR(VAL),1,2)="DC" Q 1
"RTN","MPIFAPI",183,0)
 Q 0
"RTN","MPIFAPI",184,0)
 ;
"RTN","MPIFD1")
0^3^B52740520^B49972281
"RTN","MPIFD1",1,0)
MPIFD1 ;BIRM/CMC-POTENTIAL DUP ON MPI ;DEC 2, 2005
"RTN","MPIFD1",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**43,48**;30 Apr 99;Build 6
"RTN","MPIFD1",3,0)
 ;
"RTN","MPIFD1",4,0)
INIT ;Entry point for List Manager Template - MPIF POTENTIAL DUP
"RTN","MPIFD1",5,0)
 Q
"RTN","MPIFD1",6,0)
HDR ;Header code for List Manager Template - MPIF POTENTIAL DUP (CLONED FROM HDR^MPIFQ1)
"RTN","MPIFD1",7,0)
 N SSN,DOB,MPIFQ1,NAME1,SEX
"RTN","MPIFD1",8,0)
 D GETDATA^MPIFQ0("^DPT(",DFN,"MPIFQ1",".01;.03;.09;.02","EI")
"RTN","MPIFD1",9,0)
 S NAME1=$G(MPIFQ1(2,DFN,.01,"E")),SSN=$G(MPIFQ1(2,DFN,.09,"E"))
"RTN","MPIFD1",10,0)
 S DOB=$G(MPIFQ1(2,DFN,.03,"I")),SEX=$G(MPIFQ1(2,DFN,.02,"E"))
"RTN","MPIFD1",11,0)
 I DOB]"" S DOB=$TR($$FMTE^XLFDT(DOB,"5D"),"/","-")
"RTN","MPIFD1",12,0)
 S VALMHDR(1)=" Possible MPI Matches for Patient: "_IOINHI_NAME1_IOINORM
"RTN","MPIFD1",13,0)
 S VALMHDR(2)="                              SSN: "_IOINHI_SSN_IOINORM
"RTN","MPIFD1",14,0)
 S VALMHDR(3)="                              DOB: "_IOINHI_DOB_IOINORM
"RTN","MPIFD1",15,0)
 S VALMHDR(4)="                              SEX: "_IOINHI_SEX_IOINORM,VALMHDR(5)=" "
"RTN","MPIFD1",16,0)
 Q
"RTN","MPIFD1",17,0)
START(INDEX) ;Starting entry point for envoking the List Manager Template MPIF MPIF POTENTIAL DUP
"RTN","MPIFD1",18,0)
 S VALMCNT=INDEX
"RTN","MPIFD1",19,0)
 D EN^VALM("MPIF POTENTIAL DUP")
"RTN","MPIFD1",20,0)
 Q
"RTN","MPIFD1",21,0)
SELECT N VALMY
"RTN","MPIFD1",22,0)
 D EN^VALM2(XQORNOD(0),"OS")
"RTN","MPIFD1",23,0)
 I '$D(VALMY) Q
"RTN","MPIFD1",24,0)
 N DATA,INDEX,ICN,CHKSUM,NODE2
"RTN","MPIFD1",25,0)
 S INDEX=$O(VALMY(0)),DATA=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFD1",26,0)
 S NODE2=$G(^TMP("MPIFVQQ",$J,INDEX,"INDICATOR"))
"RTN","MPIFD1",27,0)
 S DATA(.01)=$P(DATA,"^",1) I $E(DATA(.01),$L(DATA(.01)))=" " S DATA(.01)=$E(DATA(.01),1,$L(DATA(.01))-1) ;NAME
"RTN","MPIFD1",28,0)
 S DATA(.03)=$P(DATA,"^",4),DATA(.09)=$P(DATA,"^",3),DATA(.02)=$P(DATA,"^",11) ;DOB, SSN, SEX
"RTN","MPIFD1",29,0)
 S ICN=$P(DATA,"^",6),CHKSUM=$P(ICN,"V",2),ICN=$P(ICN,"V",1),DATA(991.01)=ICN,DATA(991.02)=CHKSUM,DATA(991.03)=$$LKUP^XUAF4($P(DATA,"^",5))
"RTN","MPIFD1",30,0)
 ;If NODE2["*" we have a pt in our list whose ICN is already at this site
"RTN","MPIFD1",31,0)
 I NODE2["*",$O(^DPT("AICN",ICN,""))'=DFN D  Q
"RTN","MPIFD1",32,0)
 .D CLEAR^VALM1,MSG1^MPIFQ3
"RTN","MPIFD1",33,0)
 .N DFN2 S DFN2=$O(^DPT("AICN",ICN,""))
"RTN","MPIFD1",34,0)
 .D TWODFNS^MPIF002(DFN2,DFN,ICN)
"RTN","MPIFD1",35,0)
 .S MPIFRTN="CONTINUE"
"RTN","MPIFD1",36,0)
 ;Does your patient have other VISTA systems sharing this ICN?  If so, can't match -- message to IMDQ?
"RTN","MPIFD1",37,0)
 ;Are there other sites in common (VISTA)?  If so matching isn't allowed - message to IMDQ
"RTN","MPIFD1",38,0)
 S (MORE,COMMON)=0
"RTN","MPIFD1",39,0)
 D COMPARE^MPIF002(DFN,INDEX,.COMMON,.MORE)
"RTN","MPIFD1",40,0)
 I COMMON S MSG="Site attempted to resolve MPI duplicate for ICNs "_ICN_" and "_$$GETICN^MPIF001(DFN)_" - they have TFs in common."
"RTN","MPIFD1",41,0)
 I MORE S MSG="Site attempted to resolve MPI duplicate for ICNs "_ICN_" and "_$$GETICN^MPIF001(DFN)_" - the site patient is now shared."
"RTN","MPIFD1",42,0)
 I COMMON!(MORE) D MIMDQ^MPIF002(ICN,$$GETICN^MPIF001(DFN),DFN,MSG) S PROCESS=1 K COMMON,MORE S MPIFRTN="CONTINUE" Q
"RTN","MPIFD1",43,0)
 ;User selected from list, does SSN & Name match?  no-ask if sure
"RTN","MPIFD1",44,0)
 N SSN,NAME,SEX,BIR K COMMON
"RTN","MPIFD1",45,0)
 D GETDATA^MPIFQ0("^DPT(",DFN,"MPIFQ1",".01;.09;.02;.03","EI")
"RTN","MPIFD1",46,0)
 S SSN=$G(MPIFQ1(2,DFN,.09,"E")),NAME=$G(MPIFQ1(2,DFN,.01,"E")),SEX=$G(MPIFQ1(2,DFN,.02,"I"))
"RTN","MPIFD1",47,0)
 S BIR=$G(MPIFQ1(2,DFN,.03,"I")) I BIR]"" S BIR=$TR($$FMTE^XLFDT(BIR,"5D"),"/","-")
"RTN","MPIFD1",48,0)
 ; if sex doesn't match -- not allowed to update ICN
"RTN","MPIFD1",49,0)
 I DATA(.02)'=SEX W !!,"Sex for these two patients doesn't match -- Can't select this patient until",!,"Sex matches between the MPI and your site.  No action will be taken." D PROMPT^MPIFQ3 S VALMBCK="R" Q
"RTN","MPIFD1",50,0)
 I SSN["P" S SSN=""
"RTN","MPIFD1",51,0)
 I DATA(.09)'=SSN W !!,"SSN for these two patients doesn't match -- Can't select this patient until",!,"SSN matches between the MPI and your site.  No action will be taken." D PROMPT^MPIFQ3 S VALMBCK="R" Q
"RTN","MPIFD1",52,0)
 D NAME^VAFCPID2(0,.NAME,0) ;reformat name into DG 149 format
"RTN","MPIFD1",53,0)
 N NAME3 S NAME3=DATA(.01) D NAME^VAFCPID2(0,.NAME3,0) S DATA(.01)=NAME3 ;reformat name into DG 149 format
"RTN","MPIFD1",54,0)
 N EXACT
"RTN","MPIFD1",55,0)
 ; check if Last, First MATCH if so is it a middle name vs middle initial
"RTN","MPIFD1",56,0)
 I $P(DATA(.01),",")=$P(NAME,",")&($P($P(NAME,",",2)," ")=$P($P(DATA(.01),",",2)," ")) D
"RTN","MPIFD1",57,0)
 .N MPIMID,NMMN S MPIMID=$P($P(DATA(.01),",",2)," ",2)
"RTN","MPIFD1",58,0)
 .S NMMN=$P($P(NAME,",",2)," ",2)
"RTN","MPIFD1",59,0)
 .I $L(NMMN)>1&($L(MPIMID)=1),($E(NMMN,1)=MPIMID) S EXACT=1
"RTN","MPIFD1",60,0)
 .I $L(MPIMID)>1&($L(NMMN)=1),($E(MPIMID,1)=NMMN) S EXACT=1
"RTN","MPIFD1",61,0)
 .I $D(EXACT),BIR'=DATA(.03) K EXACT
"RTN","MPIFD1",62,0)
 I DATA(.01)=NAME!($D(EXACT)) I BIR=DATA(.03) D  Q
"RTN","MPIFD1",63,0)
 .N PID2,ERR
"RTN","MPIFD1",64,0)
 .K DATA(.09),DATA(.01),DATA(.03)
"RTN","MPIFD1",65,0)
 .D INIT^HLFNC2("MPIF ADT-A24 SERVER",.HL)
"RTN","MPIFD1",66,0)
 .D BLDPID^VAFCQRY(DFN,2,"ALL",.PID2,.HL,.ERR)
"RTN","MPIFD1",67,0)
 .;**48 want to resolve an reject exceptions for "current" ICN
"RTN","MPIFD1",68,0)
 .D RESEX^MPIFDUP(DFN)
"RTN","MPIFD1",69,0)
 .D EDIT^MPIFQED(DFN,"DATA"),MSG3^MPIFQ3,PROMPT^MPIFQ3
"RTN","MPIFD1",70,0)
 .S RESLT=$$A24^MPIFA24B(DFN,.PID2) ;send a24 link icns
"RTN","MPIFD1",71,0)
 .S PROCESS=1 Q
"RTN","MPIFD1",72,0)
 ; \/ Name doesn't match exactly - ask if sure
"RTN","MPIFD1",73,0)
 D CLEAR^VALM1,MSG2^MPIFQ3,MSG^MPIFQ3(SSN,NAME,DATA(.09),DATA(.01),DATA(.03),BIR)
"RTN","MPIFD1",74,0)
 N ANS S ANS=$$PROMPT1^MPIFQ3()
"RTN","MPIFD1",75,0)
 I ANS K DATA(.09),DATA(.01),DATA(.03) D  Q
"RTN","MPIFD1",76,0)
 .;build PID segment to be the "from" value
"RTN","MPIFD1",77,0)
 .N PID2,ERR
"RTN","MPIFD1",78,0)
 .D INIT^HLFNC2("MPIF ADT-A24 SERVER",.HL)
"RTN","MPIFD1",79,0)
 .D BLDPID^VAFCQRY(DFN,2,"ALL",.PID2,.HL,.ERR)
"RTN","MPIFD1",80,0)
 .;**48 want to resolve an reject exceptions for "current" ICN
"RTN","MPIFD1",81,0)
 .D RESEX^MPIFDUP(DFN)
"RTN","MPIFD1",82,0)
 .D EDIT^MPIFQED(DFN,"DATA") S MPIFRTN="CONTINUE" ;UPDATE ICN
"RTN","MPIFD1",83,0)
 .W !!,"ICN and CMOR Updated" D PROMPT^MPIFQ3
"RTN","MPIFD1",84,0)
 .S PROCESS=1 N RESLT
"RTN","MPIFD1",85,0)
 .;TRIGGER A24 TO MPI TO LINK ICNs together
"RTN","MPIFD1",86,0)
 .S RESLT=$$A24^MPIFA24B(DFN,.PID2) ;SEND A24 LINKING ICNS
"RTN","MPIFD1",87,0)
 D MSG5^MPIFQ3,PROMPT^MPIFQ3 S VALMBCK="R"
"RTN","MPIFD1",88,0)
 Q
"RTN","MPIFD1",89,0)
MPIPD ; MPI PDAT CALL (CLONED FROM MPIPD^MPIFQ1)
"RTN","MPIFD1",90,0)
 N VALMY,CNT,Y
"RTN","MPIFD1",91,0)
 D EN^VALM2(XQORNOD(0),"OS")
"RTN","MPIFD1",92,0)
 I '$D(VALMY) Q
"RTN","MPIFD1",93,0)
 N DATA,INDEX,ICN,CHKSUM,CMOR,CASE,CMOR3,TTF,ALIAS,POW,TAL,TMP
"RTN","MPIFD1",94,0)
 S INDEX=$O(VALMY(0)),Y="" D CLEAR^VALM1
"RTN","MPIFD1",95,0)
 S DATA=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFD1",96,0)
 S CMOR=$P(DATA,"^",5),CMOR3=CMOR,CMOR=$P($$NS^XUAF4($$LKUP^XUAF4(CMOR)),"^")
"RTN","MPIFD1",97,0)
 W !,"MPI Data:",!!!,?3,"ICN: ",+$P(DATA,"^",6) ; **48 REMOVE CMOR FROM DISPLAY ,?30,"CMOR: ",CMOR," (",CMOR3,")"
"RTN","MPIFD1",98,0)
 W !,?2,"NAME: ",$P(DATA,"^")
"RTN","MPIFD1",99,0)
 W !,?3,"SSN: ",$P(DATA,"^",3),?30,"SEX: ",$P(DATA,"^",11)
"RTN","MPIFD1",100,0)
 W !,?3,"DOB: ",$P(DATA,"^",4)
"RTN","MPIFD1",101,0)
 W ?30,"DOD: ",$P(DATA,"^",9)
"RTN","MPIFD1",102,0)
 I $P(DATA,"^",20)="Y" W !?3,"Multiple Birth Indicator:  Yes"
"RTN","MPIFD1",103,0)
 I ($P(DATA,"^",12)='"")&($P(DATA,"^",13)'="") W !,?2,"PLACE OF BIRTH: ",$P(DATA,"^",12),", ",$P(DATA,"^",13)
"RTN","MPIFD1",104,0)
 I $P(DATA,"^",12)=""!($P(DATA,"^",13)="") W !,?2,"PLACE OF BIRTH: ",$P(DATA,"^",12)," ",$P(DATA,"^",13)
"RTN","MPIFD1",105,0)
 W !,?2,"MOTHER'S MAIDEN NAME: ",$P(DATA,"^",16)
"RTN","MPIFD1",106,0)
 W !,?2,"CLAIM NUMBER: ",$P(DATA,"^",17)
"RTN","MPIFD1",107,0)
 S POW=$P(DATA,"^",19) I POW'="" W !,?2,"POW STATUS: ",POW
"RTN","MPIFD1",108,0)
 S CASE=$P(DATA,"^",18)
"RTN","MPIFD1",109,0)
 I CASE'="" W !,?2,"Open Data Management Case",!,?5,"CASE#: ",$P(CASE,"/")_"   REMEDY/NOIS#: ",$P(CASE,"/",2),!,?5,"CASE WORKER: ",$P(CASE,"/",3)
"RTN","MPIFD1",110,0)
 I $D(^TMP("MPIFVQQ",$J,INDEX,"ALIAS")) W !,?2,"Alias(es): " D
"RTN","MPIFD1",111,0)
 .N XX S XX=0 F  S XX=$O(^TMP("MPIFVQQ",$J,INDEX,"ALIAS",XX)) Q:'XX  W !?10,^(XX)
"RTN","MPIFD1",112,0)
 I $D(^TMP("MPIFVQQ",$J,INDEX,"TF"))&($O(^TMP("MPIFVQQ",$J,INDEX,"TF",1))'="") D
"RTN","MPIFD1",113,0)
 .W !,?2,"TREATING FACILITY LIST:"
"RTN","MPIFD1",114,0)
 .N XX S XX=0 F  S XX=$O(^TMP("MPIFVQQ",$J,INDEX,"TF",XX)) Q:'XX  S TMP=$P($G(^(XX)),MPICOMP) I TMP'=CMOR3 W !?10,"Treating Facility: ",$P($$NS^XUAF4($$LKUP^XUAF4(TMP)),"^")," (",TMP,")"
"RTN","MPIFD1",115,0)
 D PROMPT^MPIFQ3
"RTN","MPIFD1",116,0)
 S VALMBCK="R"
"RTN","MPIFD1",117,0)
 Q
"RTN","MPIFD1",118,0)
CMOR ; CMOR PDAT CALL (CLONED FROM CMOR^MPIFQ1)
"RTN","MPIFD1",119,0)
 N VALMY,DATA,INDEX,ICN,CHKSUM,CMOR
"RTN","MPIFD1",120,0)
 D EN^VALM2(XQORNOD(0),"OS")
"RTN","MPIFD1",121,0)
 I '$D(VALMY) Q
"RTN","MPIFD1",122,0)
 S INDEX=$O(VALMY(0)),DATA=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFD1",123,0)
 S ICN=$P(DATA,"^",6),CHKSUM=$P(ICN,"V",2),ICN=$P(ICN,"V",1),CMOR=$P(DATA,"^",5)
"RTN","MPIFD1",124,0)
 I CMOR=$P($$SITE^VASITE(),"^",3) W !!,"CMOR is your site" G END
"RTN","MPIFD1",125,0)
 W !,"Please be patient while the data is being retrieved from the CMOR."
"RTN","MPIFD1",126,0)
 D EN1^XWB2HL7(.RETURN,CMOR,"VAFC REMOTE PDAT",1,ICN,"")  ; Request 
"RTN","MPIFD1",127,0)
 S ^XTMP("MPIFPDAT"_ICN,0)=$$FMADD^XLFDT(DT,2)_"^"_DT_"^"_"REMOTE PDAT QUERY",^XTMP("MPIFPDAT"_ICN,1)=RETURN(0)_"^"_$$NOW^XLFDT
"RTN","MPIFD1",128,0)
 S CNT=0
"RTN","MPIFD1",129,0)
AGAIN1 H 2 K RES1 D RTNDATA^XWBDRPC(.RES1,RETURN(0)) S CNT=CNT+1
"RTN","MPIFD1",130,0)
 I +RES1(0)=-1&(RES1(0)["Not DONE") I CNT<11 G AGAIN1
"RTN","MPIFD1",131,0)
 I +RES1(0)=-1&(RES1(0)["Not DONE") I CNT>10 W !,"Unable to get data" G END
"RTN","MPIFD1",132,0)
 I RES1(0)="0^New" I CNT<11 G AGAIN1
"RTN","MPIFD1",133,0)
 I RES1(0)="0^New" I CNT>10 W !,"Unable to get data" G END
"RTN","MPIFD1",134,0)
 I +RES1(0)=-1 W !!,$P(RES1(0),"^",2) G END
"RTN","MPIFD1",135,0)
 I RES1'="" I CNT<11 G AGAIN1
"RTN","MPIFD1",136,0)
 I RES1'="" I CNT>10 W !,"Unable to get data" Q
"RTN","MPIFD1",137,0)
 D CLEAR^VALM1
"RTN","MPIFD1",138,0)
 N NUM S NUM="",CNT=0
"RTN","MPIFD1",139,0)
 F  S NUM=$O(RES1(NUM)) Q:NUM=""  D
"RTN","MPIFD1",140,0)
 .I CNT>20 D PROMPT^MPIFQ3,CLEAR^VALM1 S CNT=0
"RTN","MPIFD1",141,0)
 .I RES1(NUM)["Additional" W !! S CNT=CNT+2
"RTN","MPIFD1",142,0)
 .I CNT<21 W !,RES1(NUM) S CNT=CNT+1
"RTN","MPIFD1",143,0)
END D PROMPT^MPIFQ3 S VALMBCK="R" K CNT,RETURN,RES1
"RTN","MPIFD1",144,0)
 Q
"RTN","MPIFD1",145,0)
HELP ; Help List Manager Action (MPIF POTENTIAL DUP (HELP))
"RTN","MPIFD1",146,0)
 D CLEAR^VALM1
"RTN","MPIFD1",147,0)
 K MPIFDUP S MPIFDUP=1 D MSG4^MPIFQ3,PROMPT^MPIFQ3 S VALMBCK="R" K MPIFDUP
"RTN","MPIFD1",148,0)
 Q
"RTN","MPIFD1",149,0)
EXIT ;Exit for List Manager Template MPIF MPIF POTENTIAL DUP
"RTN","MPIFD1",150,0)
 K VALMBCK,VALMCNT,VALMHDR
"RTN","MPIFD1",151,0)
 Q
"RTN","MPIFDUP")
0^1^B64880592^B52134006
"RTN","MPIFDUP",1,0)
MPIFDUP ;BIRM/CMC-RESOLVE DUP ACTION ;DEC 2, 2005
"RTN","MPIFDUP",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**43,46,48**;30 Apr 99;Build 6
"RTN","MPIFDUP",3,0)
 ;
"RTN","MPIFDUP",4,0)
POT ;EXCEPTION HANDLER CALLS HERE
"RTN","MPIFDUP",5,0)
 ;Potential Match on MPI, Query MPI, resolve duplicate if needed. **43 Added this entry point
"RTN","MPIFDUP",6,0)
 ; Only available when Exception Being Reviewed is Potential Match
"RTN","MPIFDUP",7,0)
 N PELV,PTEN
"RTN","MPIFDUP",8,0)
 ;S PTEN=$P(DATA,"^",10)
"RTN","MPIFDUP",9,0)
 ;I '$D(^RGHL7(991.1,"ADFN",218,DFN)) W !,"Potential Match Review Option is Only Available for Potential Match Exceptions" H 5 S VALMBCK="R" Q
"RTN","MPIFDUP",10,0)
 ;I $D(^RGHL7(991.1,"ADFN",218,DFN,PTEN)) S SUB=$O(^RGHL7(991.1,"ADFN",218,DFN,PTEN,"")) I $P($G(^RGHL7(991.1,PTEN,SUB,1,0)),"^",5)=1 W !,"Potential Match Review is Only Available for Exceptions still pending." H 5 S VALMBCK="R" Q
"RTN","MPIFDUP",11,0)
 S PTEN=$P(DATA,"^",10) ;IEN IN 991.1
"RTN","MPIFDUP",12,0)
 S PELV=$P(DATA,"^",11) ;IEN IN 991.12
"RTN","MPIFDUP",13,0)
 I $P($G(^RGHL7(991.1,PTEN,1,PELV,0)),"^",3)'=218 S VALMSG="Action is ONLY for POTENTIAL MATCH exceptions!",VALMBCK="R" Q
"RTN","MPIFDUP",14,0)
 ; ^**46 changed check to ensure exception is Potential Match exception
"RTN","MPIFDUP",15,0)
 I $E($$GETICN^MPIF001(DFN),1,3)=$P($$SITE^VASITE,"^",3) W !,"Messaging outstanding please try again in a few minutes." H 5 Q
"RTN","MPIFDUP",16,0)
 S VALMBCK="",MPIFRES="",MPIFINT=""
"RTN","MPIFDUP",17,0)
 D FULL^VALM1
"RTN","MPIFDUP",18,0)
 D EXC
"RTN","MPIFDUP",19,0)
 D PAUSE^VALM1
"RTN","MPIFDUP",20,0)
 K MPIFRES,MPIFINT
"RTN","MPIFDUP",21,0)
 N X,Y,DIR,DIE,DA,DR,IEN,IEN2,PROCDT,%,X,%I,%H
"RTN","MPIFDUP",22,0)
 I '$D(PROCESS) D
"RTN","MPIFDUP",23,0)
 .S DIR("A")="Do you want to mark this exception as processed? ",DIR(0)="YA",DIR("B")="NO" D ^DIR K DIR(0),DIR("A")
"RTN","MPIFDUP",24,0)
 .I Y S PROCESS=1 K X,Y
"RTN","MPIFDUP",25,0)
 I $D(PROCESS) D
"RTN","MPIFDUP",26,0)
 .;**48 CAPTURE DATE/TIME AND WHO MARKED AS PROCESSED
"RTN","MPIFDUP",27,0)
 .D NOW^%DTC S PROCDT=%
"RTN","MPIFDUP",28,0)
 .S IEN="",IEN2="",IEN=$P(DATA,"^",10),IEN2=$P(DATA,"^",11)
"RTN","MPIFDUP",29,0)
 .L +^RGHL7(991.1,IEN):10
"RTN","MPIFDUP",30,0)
 .S DA(1)=IEN,DA=IEN2,DR="6///"_1_";7///"_PROCDT_";8///"_$G(DUZ),DIE="^RGHL7(991.1,"_DA(1)_",1," D ^DIE K DIE,DA,DR
"RTN","MPIFDUP",31,0)
 .L -^RGHL7(991.1,IEN)
"RTN","MPIFDUP",32,0)
 .S $P(DATA,"^",9)=1
"RTN","MPIFDUP",33,0)
 K PROCESS
"RTN","MPIFDUP",34,0)
 Q
"RTN","MPIFDUP",35,0)
EXC ; Exception Entry Point
"RTN","MPIFDUP",36,0)
 N LOCDATA ;Data Returned from GETDATA in ICN array
"RTN","MPIFDUP",37,0)
 D GETDATA("^DPT(",DFN,"LOCDATA",".01;.02;.03;.09;.301;391;1901")
"RTN","MPIFDUP",38,0)
 S LOCDATA(2,DFN,991.01)=$P($$MPINODE^MPIFAPI(DFN),"^"),TSSN=LOCDATA(2,DFN,.09)
"RTN","MPIFDUP",39,0)
 S HLP("ACKTIME")=300,MPIQRYNM="POTENTIAL_DUP_RES"
"RTN","MPIFDUP",40,0)
 N TIME,% D NOW^%DTC S TIME=%
"RTN","MPIFDUP",41,0)
 N HL,MPIINM,MPIOUT,MPIIN,MPIMCNT,MPICNT,MPICS,HEADER,TEST,SITE,MPIDC,SSN
"RTN","MPIFDUP",42,0)
 S HL("ECH")="^~\&",HL("FS")="|"
"RTN","MPIFDUP",43,0)
 S MPIIN="",MPIMCNT=DFN,MPICNT=1,MPICS=$E(HL("ECH"),1),MPIFRES=1
"RTN","MPIFDUP",44,0)
 D VTQ1^MPIFVTQ(DFN,.MPIOUT,.HL,.MPIQRYNM)
"RTN","MPIFDUP",45,0)
 I +MPIOUT(0)=-1 D  G EXIT
"RTN","MPIFDUP",46,0)
 .S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)=$G(MPIOUT(0)),MPIFRTN="CONTINUE"
"RTN","MPIFDUP",47,0)
 ;Create MSH
"RTN","MPIFDUP",48,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1,HEADER="MSH"_HL("FS")_HL("ECH")_HL("FS")_"MPI_LOAD"_HL("FS")_SITE_HL("FS")
"RTN","MPIFDUP",49,0)
 S HEADER=HEADER_"MPI-ICN"_HL("FS")_HL("FS")_HL("FS")_HL("FS")_"VQQ"_MPICS_"Q02"_HL("FS")_MPIMCNT_"-"_MPICNT_HL("FS") ;**38 changed VTQ to VQQ
"RTN","MPIFDUP",50,0)
 S MPIOUT(1)=HEADER K MPIOUT(0)
"RTN","MPIFDUP",51,0)
 W !!,"Attempting to connect to the Master Patient Index in Austin...",!,"If no SSN or inexact DOB or common name, this request",!,"may take some time, please be patient...",!
"RTN","MPIFDUP",52,0)
 S TEST=$$EN^HLCSAC("MPIVA DIR","MPIOUT","MPIDC")
"RTN","MPIFDUP",53,0)
 K HLP("ACKTIME") ;kill the HLP array set for the ack timeout
"RTN","MPIFDUP",54,0)
 I +TEST=-1 D  G EXIT
"RTN","MPIFDUP",55,0)
 .S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)=TEST
"RTN","MPIFDUP",56,0)
 .I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Could not connect to MPI or Timed Out.  Try again later."
"RTN","MPIFDUP",57,0)
 K ^TMP("MPIFVQQ",$J),^TMP("MPIFQ0",$J) ;array data is parsed into for display in LM
"RTN","MPIFDUP",58,0)
INIPARS ;
"RTN","MPIFDUP",59,0)
 N SEG,INDEX,SKIP,CHECK,AL,TTF2,TFLL,TF,TF2,MPIREP,MPICOMP
"RTN","MPIFDUP",60,0)
 S INDEX=0 K CHECK
"RTN","MPIFDUP",61,0)
LOOP1 ;
"RTN","MPIFDUP",62,0)
 ;process in ADT type messages
"RTN","MPIFDUP",63,0)
 N MPIX S MPIX=0 N REP,SG,MSG,MPIQUIT,MPINODE
"RTN","MPIFDUP",64,0)
 K TWODFN S MPIQUIT=0
"RTN","MPIFDUP",65,0)
 F MPIX=0:1 X "D LOOP2" D  K MPINODE,MSG Q:MPIQUIT'>0
"RTN","MPIFDUP",66,0)
 . I $D(MPINODE(1)) S SG=$E(MPINODE(1),1,3) S MSG(1)=MPINODE(1) D
"RTN","MPIFDUP",67,0)
 .. S MPIJ=1 F  S MPIJ=$O(MPINODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=MPINODE(MPIJ)
"RTN","MPIFDUP",68,0)
 .. D:SG?2A1(1A,1N) @SG
"RTN","MPIFDUP",69,0)
DECIDE ;If no data in ^TMP that means the patient was not found in the MPI w/VTQ Query. So we go to A28 to add the patient to the MPI.
"RTN","MPIFDUP",70,0)
 N EXC,TEXT,EXACT,EXACT2,DATA,NODE2,ICN,CHKSUM,MORE,COMMON
"RTN","MPIFDUP",71,0)
 I '$D(^TMP("MPIFVQQ",$J)) W !,"No Potential Matches Found.",!!,"Exception has been marked automatically as processed." S PROCESS=1 G EXIT
"RTN","MPIFDUP",72,0)
 I INDEX=1 D
"RTN","MPIFDUP",73,0)
 .;need to check if exact match was returned.
"RTN","MPIFDUP",74,0)
 .S DATA=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFDUP",75,0)
 .S NODE2=$G(^TMP("MPIFVQQ",$J,INDEX,"INDICATOR"))
"RTN","MPIFDUP",76,0)
 .S DATA(.01)=$P(DATA,"^",1) I $E(DATA(.01),$L(DATA(.01)))=" " S DATA(.01)=$E(DATA(.01),1,$L(DATA(.01))-1) ;NAME
"RTN","MPIFDUP",77,0)
 .S DATA(.03)=$P(DATA,"^",4),DATA(.09)=$P(DATA,"^",3),DATA(.02)=$P(DATA,"^",11) ;DOB, SSN, SEX
"RTN","MPIFDUP",78,0)
 .S ICN=$P(DATA,"^",6),CHKSUM=$P(ICN,"V",2),ICN=$P(ICN,"V",1),DATA(991.01)=ICN,DATA(991.02)=CHKSUM,DATA(991.03)=$$LKUP^XUAF4($P(DATA,"^",5))
"RTN","MPIFDUP",79,0)
 .Q:NODE2["*"
"RTN","MPIFDUP",80,0)
 .;^ ICN is already known at this site
"RTN","MPIFDUP",81,0)
 .;check if this patient has another VISTA site now OR tfs in common
"RTN","MPIFDUP",82,0)
 .S (MORE,COMMON)=0
"RTN","MPIFDUP",83,0)
 .D COMPARE^MPIF002(DFN,INDEX,.COMMON,.MORE)
"RTN","MPIFDUP",84,0)
 .Q:COMMON!(MORE)
"RTN","MPIFDUP",85,0)
 .; check that now have an exact match returned
"RTN","MPIFDUP",86,0)
 .N MPIFD,SSN,NAME,SEX,NAME3,BIR K COMMON,MORE
"RTN","MPIFDUP",87,0)
 .D GETDATA^MPIFQ0("^DPT(",DFN,"MPIFD",".01;.09;.02;.03","EI")
"RTN","MPIFDUP",88,0)
 .S SSN=$G(MPIFD(2,DFN,.09,"E")),NAME=$G(MPIFD(2,DFN,.01,"E")),SEX=$G(MPIFD(2,DFN,.02,"I"))
"RTN","MPIFDUP",89,0)
 .S BIR=$G(MPIFD(2,DFN,.03,"I")) I BIR]"" S BIR=$TR($$FMTE^XLFDT(BIR,"5D"),"/","-")
"RTN","MPIFDUP",90,0)
 .; if dob doesn't match -- not allowed to update ICN automatically
"RTN","MPIFDUP",91,0)
 .Q:DATA(.03)'=BIR
"RTN","MPIFDUP",92,0)
 .; if sex doesn't match -- not allowed to update ICN automatically
"RTN","MPIFDUP",93,0)
 .Q:DATA(.02)'=SEX
"RTN","MPIFDUP",94,0)
 .;if dob doesn't match -- not allowed to update ICN automatically
"RTN","MPIFDUP",95,0)
 .I SSN["P" S SSN=""
"RTN","MPIFDUP",96,0)
 .Q:DATA(.09)'=SSN
"RTN","MPIFDUP",97,0)
 .D NAME^VAFCPID2(0,.NAME,0) ;reformat name into DG 149 format
"RTN","MPIFDUP",98,0)
 .S NAME3=DATA(.01) D NAME^VAFCPID2(0,.NAME3,0) S DATA(.01)=NAME3 ;reformat name into DG 149 format
"RTN","MPIFDUP",99,0)
 .; check if Last, First MATCH if so is it a middle name vs middle initial
"RTN","MPIFDUP",100,0)
 .I $P(DATA(.01),",")=$P(NAME,",")&($P($P(NAME,",",2)," ")=$P($P(DATA(.01),",",2)," ")) D
"RTN","MPIFDUP",101,0)
 ..N MPIMID,NMMN S MPIMID=$P($P(DATA(.01),",",2)," ",2)
"RTN","MPIFDUP",102,0)
 ..S NMMN=$P($P(NAME,",",2)," ",2)
"RTN","MPIFDUP",103,0)
 ..I $L(NMMN)>1&($L(MPIMID)=1),($E(NMMN,1)=MPIMID) S EXACT=1
"RTN","MPIFDUP",104,0)
 ..I $L(MPIMID)>1&($L(NMMN)=1),($E(MPIMID,1)=NMMN) S EXACT=1
"RTN","MPIFDUP",105,0)
 .I DATA(.01)=NAME!($D(EXACT)) K DATA(.09),DATA(.01),DATA(.03) D  Q
"RTN","MPIFDUP",106,0)
 ..N PID2,ERR
"RTN","MPIFDUP",107,0)
 ..D INIT^HLFNC2("MPIF ADT-A24 SERVER",.HL)
"RTN","MPIFDUP",108,0)
 ..D BLDPID^VAFCQRY(DFN,2,"ALL",.PID2,.HL,.ERR)
"RTN","MPIFDUP",109,0)
 ..;**48 want to resolve an reject exceptions for "current" ICN
"RTN","MPIFDUP",110,0)
 ..D RESEX(DFN)
"RTN","MPIFDUP",111,0)
 ..D EDIT^MPIFQED(DFN,"DATA"),MSG3^MPIFQ3,PROMPT^MPIFQ3
"RTN","MPIFDUP",112,0)
 ..S RESLT=$$A24^MPIFA24B(DFN,.PID2) ;send a24 link icns
"RTN","MPIFDUP",113,0)
 ..S PROCESS=1
"RTN","MPIFDUP",114,0)
 I $G(PROCESS)=1 G END
"RTN","MPIFDUP",115,0)
 D START^MPIFD1(INDEX) G END
"RTN","MPIFDUP",116,0)
EXIT I $D(MPIFINT) K MPIFINT,MPIFRES,MPIQRYNM,TSSN,TWODFN,SDFN
"RTN","MPIFDUP",117,0)
 K VALMCNT,VALMLST,CCMOR,FICN H 3 W:'$D(MPIFRPC) !!
"RTN","MPIFDUP",118,0)
END K ^TMP("MPIFVQQ",$J),^TMP("MPIFQ0",$J) Q
"RTN","MPIFDUP",119,0)
 ;
"RTN","MPIFDUP",120,0)
GETDATA(DIC,DA,MPIFAR,DR,EI) ;
"RTN","MPIFDUP",121,0)
 ;This function returns the values stored in the fields via FM call DIQ1
"RTN","MPIFDUP",122,0)
 ;DIC=file reference, DA=IEN in file, ARRAY=array for the values to be stored in, DR=fields requested, EI=external/internal values
"RTN","MPIFDUP",123,0)
 N DIQ S DIQ=MPIFAR
"RTN","MPIFDUP",124,0)
 I $G(EI)]"" S DIQ(0)=EI
"RTN","MPIFDUP",125,0)
 D EN^DIQ1
"RTN","MPIFDUP",126,0)
 Q
"RTN","MPIFDUP",127,0)
LOOP2 ;
"RTN","MPIFDUP",128,0)
 N MPIDONE,MPII,MPIJ
"RTN","MPIFDUP",129,0)
 S MPII=0,MPIDONE=0
"RTN","MPIFDUP",130,0)
 F  S MPIQUIT=$O(MPIDC(MPIQUIT)) Q:'MPIQUIT  D  Q:MPIDONE
"RTN","MPIFDUP",131,0)
 . I MPIDC(MPIQUIT)="" S MPIDONE=1 Q
"RTN","MPIFDUP",132,0)
 . S MPII=MPII+1,MPINODE(MPII)=$G(MPIDC(MPIQUIT)) Q
"RTN","MPIFDUP",133,0)
 Q
"RTN","MPIFDUP",134,0)
MSH ;
"RTN","MPIFDUP",135,0)
 S MPIREP=$E(HL("ECH"),2),MPICOMP=$E(HL("ECH"),1)
"RTN","MPIFDUP",136,0)
 Q
"RTN","MPIFDUP",137,0)
MSA ;
"RTN","MPIFDUP",138,0)
 Q
"RTN","MPIFDUP",139,0)
RDF ;
"RTN","MPIFDUP",140,0)
 Q
"RTN","MPIFDUP",141,0)
QAK ;**43 added check for potential matches
"RTN","MPIFDUP",142,0)
 K MPIPOT S MPIPOT=0
"RTN","MPIFDUP",143,0)
 I MSG(1)["POTENTIAL MATCHES" S MPIPOT=1
"RTN","MPIFDUP",144,0)
 S SDFN=$P(MSG(1),HL("FS"),2)
"RTN","MPIFDUP",145,0)
 Q
"RTN","MPIFDUP",146,0)
RDT ;
"RTN","MPIFDUP",147,0)
 N NAME,ICN,BIRTHDAY,CMOR,IEN,SEG,HEREICN,STRING,LASTNAME,FRSTNAME,MIDDLE,SUFF,SEX,THISGUY
"RTN","MPIFDUP",148,0)
 S STRING="",INDEX=$G(INDEX)+1
"RTN","MPIFDUP",149,0)
 D RDT^MPIFSA3(.INDEX,.HL,.MSG)
"RTN","MPIFDUP",150,0)
 S SEG=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFDUP",151,0)
 S FRSTNAME=$P(SEG,"^",7),LASTNAME=$P(SEG,"^",2),MIDDLE=$P(SEG,"^",10),SUFF=$P(SEG,"^",15)
"RTN","MPIFDUP",152,0)
 S SSN=$P(SEG,"^",3),NAME=LASTNAME_","_FRSTNAME
"RTN","MPIFDUP",153,0)
 I MIDDLE'="" S NAME=NAME_" "_MIDDLE
"RTN","MPIFDUP",154,0)
 I SUFF'="" S NAME=NAME_" "_SUFF
"RTN","MPIFDUP",155,0)
 S SEX=$P(SEG,"^",11)
"RTN","MPIFDUP",156,0)
 S ICN=$P(SEG,"^",6)
"RTN","MPIFDUP",157,0)
 S THISGUY=$$GETDFN^MPIF001(+ICN) I THISGUY=DFN Q
"RTN","MPIFDUP",158,0)
 S BIRTHDAY=$P(SEG,"^",4)
"RTN","MPIFDUP",159,0)
 S CMOR=$P(SEG,"^",5),IEN=$$IEN^XUAF4(CMOR)
"RTN","MPIFDUP",160,0)
 S CMOR=$P($$NS^XUAF4(IEN),"^")
"RTN","MPIFDUP",161,0)
 S HEREICN=$$HEREICN^MPIFQ3($P(ICN,"V",1))
"RTN","MPIFDUP",162,0)
 I HEREICN S STRING=$$SETSTR^VALM1("*",STRING,1,1),^TMP("MPIFVQQ",$J,INDEX,"INDICATOR")="*"_"^"_HEREICN
"RTN","MPIFDUP",163,0)
 S STRING=$$SETSTR^VALM1(INDEX,STRING,2,4),STRING=$$SETSTR^VALM1($E(NAME,1,23),STRING,6,23)
"RTN","MPIFDUP",164,0)
 S STRING=$$SETSTR^VALM1(SSN,STRING,30,9),STRING=$$SETSTR^VALM1(BIRTHDAY,STRING,41,10)
"RTN","MPIFDUP",165,0)
 S STRING=$$SETSTR^VALM1(CMOR,STRING,54,20)
"RTN","MPIFDUP",166,0)
 S ^TMP("MPIFVQQ",$J,INDEX,0)=STRING,^TMP("MPIFVQQ",$J,"IDX",INDEX,INDEX)=""
"RTN","MPIFDUP",167,0)
 Q
"RTN","MPIFDUP",168,0)
RESEX(DFN,POT) ;look for any pv reject (234) exceptions and resolve them for this DFN
"RTN","MPIFDUP",169,0)
 ;IF POT IS SET TO 2 LOOK FOR ANY POTENTIAL MATCH (218) EXCEPTIONS AND RESOLVE THEM FOR THIS DFN
"RTN","MPIFDUP",170,0)
 ;**48 CREATED THIS API
"RTN","MPIFDUP",171,0)
 N IEN,DA,DR,PROCDT,DIE,IEN2
"RTN","MPIFDUP",172,0)
 S IEN=0
"RTN","MPIFDUP",173,0)
 F  S IEN=$O(^RGHL7(991.1,"ADFN",234,DFN,IEN)) Q:IEN=""  D
"RTN","MPIFDUP",174,0)
 .S IEN2=$O(^RGHL7(991.1,"ADFN",234,DFN,IEN,""))
"RTN","MPIFDUP",175,0)
 .Q:$P(^RGHL7(991.1,IEN,1,IEN2,0),"^",5)=1  ;**ALREADY MARKED AS PROCESSED
"RTN","MPIFDUP",176,0)
 .D NOW^%DTC S PROCDT=%
"RTN","MPIFDUP",177,0)
 .L +^RGHL7(991.1,IEN):10
"RTN","MPIFDUP",178,0)
 .S DA(1)=IEN,DA=IEN2,DR="6///"_1_";7///"_PROCDT_";8///"_$G(DUZ),DIE="^RGHL7(991.1,"_DA(1)_",1," D ^DIE K DIE,DA,DR
"RTN","MPIFDUP",179,0)
 .L -^RGHL7(991.1,IEN)
"RTN","MPIFDUP",180,0)
 ;
"RTN","MPIFDUP",181,0)
 I $G(POT)=2 D
"RTN","MPIFDUP",182,0)
 .S IEN=0
"RTN","MPIFDUP",183,0)
 .F  S IEN=$O(^RGHL7(991.1,"ADFN",218,DFN,IEN)) Q:IEN=""  D
"RTN","MPIFDUP",184,0)
 ..S IEN2=$O(^RGHL7(991.1,"ADFN",218,DFN,IEN,""))
"RTN","MPIFDUP",185,0)
 ..Q:$P(^RGHL7(991.1,IEN,1,IEN2,0),"^",5)=1  ;**ALREADY MARKED AS PROCESSED
"RTN","MPIFDUP",186,0)
 ..D NOW^%DTC S PROCDT=%
"RTN","MPIFDUP",187,0)
 ..L +^RGHL7(991.1,IEN):10
"RTN","MPIFDUP",188,0)
 ..S DA(1)=IEN,DA=IEN2,DR="6///"_1_";7///"_PROCDT_";8///"_$G(DUZ),DIE="^RGHL7(991.1,"_DA(1)_",1," D ^DIE K DIE,DA,DR
"RTN","MPIFDUP",189,0)
 ..L -^RGHL7(991.1,IEN)
"RTN","MPIFDUP",190,0)
 Q
"RTN","MPIFP48")
0^2^B1808998^n/a
"RTN","MPIFP48",1,0)
MPIFP48 ;BIRM/CMC-POST INT FOR MPIF*1*48 ;MAY 24, 2007
"RTN","MPIFP48",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**48**;30 Apr 99;Build 6
"RTN","MPIFP48",3,0)
 ;
"RTN","MPIFP48",4,0)
POST ;This post init will correct the values in fields
"RTN","MPIFP48",5,0)
 ;LAST NUMBER USED (#1) and NEXT NUMBER TO USE (#3) in the 
"RTN","MPIFP48",6,0)
 ;MASTER PATIENT INDEX (LOCAL NUMBERS) FILE (#984.1)
"RTN","MPIFP48",7,0)
 ;
"RTN","MPIFP48",8,0)
 N NODE,F1,F3,IEN,ICN
"RTN","MPIFP48",9,0)
 S IEN=$O(^MPIF(984.1,0))
"RTN","MPIFP48",10,0)
 S NODE=$G(^MPIF(984.1,IEN,0))
"RTN","MPIFP48",11,0)
 S F1=$P(NODE,"^",2)
"RTN","MPIFP48",12,0)
 S F3=$P(NODE,"^",4)
"RTN","MPIFP48",13,0)
 I $L(F1)=10&($L(F3)=10) D BMES^XPDUTL("Local ICNs in file #984.1 were 10 digits already.") Q
"RTN","MPIFP48",14,0)
 ;
"RTN","MPIFP48",15,0)
 D SETUP(IEN)
"RTN","MPIFP48",16,0)
 D BMES^XPDUTL("Local ICNs in file #984.1 are now 10 digits")
"RTN","MPIFP48",17,0)
 Q
"RTN","MPIFP48",18,0)
SETUP(IEN) ;
"RTN","MPIFP48",19,0)
 N CHK,NUM,NXTCHK,NXTNUM,SITE,DA,DIE,DR
"RTN","MPIFP48",20,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1
"RTN","MPIFP48",21,0)
 S DIE="^MPIF(984.1,",DA=IEN
"RTN","MPIFP48",22,0)
 S NUM=SITE_"0000000",CHK=$$CHECKDG^MPIFSPC(NUM),MPINUM=NUM_"V"_CHK
"RTN","MPIFP48",23,0)
 S NXTNUM=NUM+1,NXTCHK=$$CHECKDG^MPIFSPC(NXTNUM)
"RTN","MPIFP48",24,0)
 S DR="1////"_NUM_";2////"_CHK_";3////"_NXTNUM_";5////"_NXTCHK
"RTN","MPIFP48",25,0)
 D ^DIE
"RTN","MPIFP48",26,0)
 K X,Y
"RTN","MPIFP48",27,0)
 Q
"RTN","MPIFSPC")
0^7^B1433923^B1359691
"RTN","MPIFSPC",1,0)
MPIFSPC ;SLC/ARS-MASTER PATIENT INDEX SYSTEM CHECK SUM RTN ;SEP 4, 1996
"RTN","MPIFSPC",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**48**;30 Apr 99;Build 6
"RTN","MPIFSPC",3,0)
 ;MPICHECK
"RTN","MPIFSPC",4,0)
CHECKDG(NUM) ;Check Digit Calculation
"RTN","MPIFSPC",5,0)
 ;change to local array of MPI global.
"RTN","MPIFSPC",6,0)
 ;D EXIN **48 CHANGE TO FUNCTION CALL
"RTN","MPIFSPC",7,0)
 ;K I,J,LTH,MPID,MPIMAP,MPIT,TAB,VAL
"RTN","MPIFSPC",8,0)
 N TMP
"RTN","MPIFSPC",9,0)
 S TMP=$$EXIN(NUM)
"RTN","MPIFSPC",10,0)
 Q TMP
"RTN","MPIFSPC",11,0)
READ ;
"RTN","MPIFSPC",12,0)
 ;
"RTN","MPIFSPC",13,0)
EXIN(NUM) ;**48 MADE THIS A FUNCTION CALL
"RTN","MPIFSPC",14,0)
 N SUM,I,J,LTH,MPID,MPIMAP,MPIT,TAB,VAL
"RTN","MPIFSPC",15,0)
 I $L(NUM)'=16 D
"RTN","MPIFSPC",16,0)
 .; W !,"I WILL PAD TO 16!"
"RTN","MPIFSPC",17,0)
 .S LTH=($L(NUM)+1) F I=LTH:1:16 S NUM="0"_NUM
"RTN","MPIFSPC",18,0)
 F MPIT=1:1:6  D
"RTN","MPIFSPC",19,0)
 .; For each check digit, compute a value
"RTN","MPIFSPC",20,0)
 .F MPID=1:1:16  D
"RTN","MPIFSPC",21,0)
 ..S MPIMAP(MPIT,0,"MAP")=0
"RTN","MPIFSPC",22,0)
 ..S MPIMAP(MPIT,MPID)=$E(NUM,MPID),VAL=MPIMAP(MPIT,MPID)
"RTN","MPIFSPC",23,0)
 ..S SUM=(MPIMAP(MPIT,MPID)+(MPIMAP(MPIT,MPID-1,"MAP")))#10
"RTN","MPIFSPC",24,0)
 ..S MPIMAP(MPIT,MPID,"MAP")=$P($P(^MPIF(984.5,MPIT,SUM),"^",2),";",MPID)
"RTN","MPIFSPC",25,0)
 .S TAB(MPIT)=MPIMAP(MPIT,16,"MAP")
"RTN","MPIFSPC",26,0)
 .;Q
"RTN","MPIFSPC",27,0)
 S SUM=""
"RTN","MPIFSPC",28,0)
 F J=1:1:6  D
"RTN","MPIFSPC",29,0)
 .S SUM=SUM_TAB(J)
"RTN","MPIFSPC",30,0)
 Q SUM
"RTN","MPIFSPC",31,0)
 ;
"RTN","MPIFSPC",32,0)
 ;Before calculation of check digits the number must be
"RTN","MPIFSPC",33,0)
 ;expanded to sixteen digits by padding zeros to the
"RTN","MPIFSPC",34,0)
 ;left of the number.
"VER")
8.0^22.0
"^DD",984.1,984.1,1,0)
LAST NUMBER USED^RNJ10,0^^0;2^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1.N) X
"^DD",984.1,984.1,1,3)
Type a number between 0 and 9999999999, 0 Decimal Digits
"^DD",984.1,984.1,1,21,0)
^^1^1^2981221^
"^DD",984.1,984.1,1,21,1,0)
This keeps the last number used (not the next number to use).
"^DD",984.1,984.1,1,"DT")
3070524
"^DD",984.1,984.1,3,0)
NEXT NUMBER TO USE^NJ10,0^^0;4^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1.N) X
"^DD",984.1,984.1,3,3)
Type a number between 0 and 9999999999, 0 Decimal Digits
"^DD",984.1,984.1,3,21,0)
^^1^1^2970207^
"^DD",984.1,984.1,3,21,1,0)
When used move to last number used and generate a new entry.
"^DD",984.1,984.1,3,"DT")
3070524
"BLD",2525,6)
^47
**END**
**END**
