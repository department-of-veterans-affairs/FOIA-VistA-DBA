Released XU*8*15 SEQ #13
Extracted from mail message
**KIDS**:XU*8.0*15^

**INSTALL NAME**
XU*8.0*15
"BLD",81,0)
XU*8.0*15^KERNEL^0^2960125^n
"BLD",81,1,0)
^^100^100^2960126^^^^
"BLD",81,1,1,0)
This patch contains the following:
"BLD",81,1,2,0)
 - Updates Menu Manger and KIDS in order to support the Kernel RPC Broker.
"BLD",81,1,3,0)
   Includes a new multiple, RPC (#320), in OPTION File (#19).
"BLD",81,1,4,0)
 - A new prompt, 'Want to RUN the Environment Check Routine', will be asked
"BLD",81,1,5,0)
   when Loading a KIDS Distribution.
"BLD",81,1,6,0)
 - New file identifiers for the Build file (#9.6) and the Install file
"BLD",81,1,7,0)
   (#9.7),  E3R #7587
"BLD",81,1,8,0)
 - Corrections for an unrelated error in Menu Manager that caused
"BLD",81,1,9,0)
   screen-type options to be built improperly from the Option File
"BLD",81,1,10,0)
   as reported in NOIS CLE-1295-41576.
"BLD",81,1,11,0)
 - A KIDS install will now list all routines that were created during the
"BLD",81,1,12,0)
   install process.
"BLD",81,1,13,0)

"BLD",81,1,14,0)
===========================================================================
"BLD",81,1,15,0)
  
"BLD",81,1,16,0)
This patch contains the routine XQ1.  All users should be OFF the system and
"BLD",81,1,17,0)
Taskman should be put in a Wait State while installing this patch.
"BLD",81,1,18,0)
  
"BLD",81,1,19,0)
===========================================================================
"BLD",81,1,20,0)
  
"BLD",81,1,21,0)
INSTALLATION:
"BLD",81,1,22,0)
  1.  These routines are usually mapped on systems that allow mapping,
"BLD",81,1,23,0)
      so you will need to disable mapping for the effected routines.
"BLD",81,1,24,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"BLD",81,1,25,0)
      option will load the KIDS package onto your system.
"BLD",81,1,26,0)
  3.  Answer NO to the question:
"BLD",81,1,27,0)
      'Shall I preserve what is on disk in a separate back-up message ?'.
"BLD",81,1,28,0)
  4.  The patch has now been loaded into a Transport global on your
"BLD",81,1,29,0)
      system. You now need to use KIDS to install the Transport global.
"BLD",81,1,30,0)
  5.  In Programmer Mode, run the routine XPDKRN and use the option
"BLD",81,1,31,0)
      'Verify Checksum in Transport Global' and verify that all routines
"BLD",81,1,32,0)
      have the correct checksums.
"BLD",81,1,33,0)
  6.  Logoff the users and put Taskman in a Wait State.
"BLD",81,1,34,0)
  7.  In Programmer Mode, run the routine XPDKRN and use the option
"BLD",81,1,35,0)
      'Install Package(s)'. Select the package 'XU*8.0*15' and proceed
"BLD",81,1,36,0)
      with install.
"BLD",81,1,37,0)
  8.  If you are a MSM site move the routine to the other servers.
"BLD",81,1,38,0)
  9.  On a mapped system, rebuild your map set.
"BLD",81,1,39,0)
 10.  Allow users back on the system and remove Taskman from its Wait State.
"BLD",81,1,40,0)
 ====================================================================  
"BLD",81,1,41,0)
  
"BLD",81,1,42,0)
 ROUTINES:
"BLD",81,1,43,0)
   The second line of the routine now looks like:
"BLD",81,1,44,0)
       ;;8.0;KERNEL;**[patch list]**;Jul 10, 1995
"BLD",81,1,45,0)
 
"BLD",81,1,46,0)
 Name           Before          After           Patch List
"BLD",81,1,47,0)
 ----------------------------------------------------------
"BLD",81,1,48,0)
 XPDE           13070811        13070807        2,15
"BLD",81,1,49,0)
 XPDET          3688528         4405222         15
"BLD",81,1,50,0)
 XPDIA          7058872         8474060         10,15
"BLD",81,1,51,0)
 XPDIP          7105579         7565730         15
"BLD",81,1,52,0)
 XPDIK          10629573        10192795        15
"BLD",81,1,53,0)
 XPDIL          10081002        10483234        15
"BLD",81,1,54,0)
 XPDIL1         6278390         6287869         15,17
"BLD",81,1,55,0)
 XPDIU          5987197         5981701         15
"BLD",81,1,56,0)
 XPDTA          5532717         6086560         15
"BLD",81,1,57,0)
 XPDTC          9603838         9635781         10,15
"BLD",81,1,58,0)
 XQ1            10992484        11134292        1,15
"BLD",81,1,59,0)
 XQCS           new             8509197         15
"BLD",81,1,60,0)
 XUINPRE1       new             413082          15
"BLD",81,1,61,0)

"BLD",81,1,62,0)
 =====================================================================
"BLD",81,1,63,0)
 DATA DICTIONARY:
"BLD",81,1,64,0)

"BLD",81,1,65,0)
   FILE:  OPTION (#19)     (Partial DD)
"BLD",81,1,66,0)
   FIELD: RPC    (#320)
"BLD",81,1,67,0)
   SUBDD: 19.05
"BLD",81,1,68,0)

"BLD",81,1,69,0)
 ======================================================================
"BLD",81,1,70,0)
 DOCUMENTATION:
"BLD",81,1,71,0)

"BLD",81,1,72,0)
 A new prompt has been added to the Loading process of the Kernel
"BLD",81,1,73,0)
 Installation and Distribution System. When using the option, 'Load
"BLD",81,1,74,0)
 a Distribution', the new prompt will be:
"BLD",81,1,75,0)
 'Want to RUN the Environment Check Routine: YES// '.
"BLD",81,1,76,0)
 NO means you want to skip the Environment Check routine and continue
"BLD",81,1,77,0)
 with the load.  YES means you want to execute the Environment Check
"BLD",81,1,78,0)
 routine.
"BLD",81,1,79,0)

"BLD",81,1,80,0)
 This will allow a site to Load a Distribution into a system that
"BLD",81,1,81,0)
 contains only FileMan 21 and Kernel 8.0.  Once a Distribution is loaded
"BLD",81,1,82,0)
 then a site can do any of the following options with the Transport Global:
"BLD",81,1,83,0)
          Convert Loaded Package for Redistribution
"BLD",81,1,84,0)
          Print Transport Global
"BLD",81,1,85,0)
          Compare Transport Global to Current System
"BLD",81,1,86,0)
          Verify Checksums in Transport Global
"BLD",81,1,87,0)
          Backup a Transport Global
"BLD",81,1,88,0)

"BLD",81,1,89,0)
 If your system is a PC, you can also move the Transport Global to a new
"BLD",81,1,90,0)
 medium,  (i.e. to multiple floppy disks so you can install on other PCs)
"BLD",81,1,91,0)
 1. Load the Distribution, DO NOT run the Environment Check routine.
"BLD",81,1,92,0)
 2. Under the Utilities Menu, Convert Loaded Package for Redistribution.
"BLD",81,1,93,0)
 3. Under the Edits and Distribution Menu, Transport a Distribution
"BLD",81,1,94,0)
 4. When you are prompted for Host File, enter the floppy drive and file name.
"BLD",81,1,95,0)
    i.e.  Enter a Host File: A:\KRN8.KID
"BLD",81,1,96,0)

"BLD",81,1,97,0)
 During a KIDS install, routines can be created for compiled cross-references,
"BLD",81,1,98,0)
 input templates, and print templates.  KIDS will now list these new routines
"BLD",81,1,99,0)
 during the install process.
"BLD",81,1,100,0)

"BLD",81,4,0)
^9.64PA^19^1
"BLD",81,4,19,0)
19
"BLD",81,4,19,2,0)
^9.641^19.05^1
"BLD",81,4,19,2,19.05,0)
RPC  (sub-file)
"BLD",81,4,19,2,19.05,1,0)
^9.6411^^
"BLD",81,4,19,222)
y^n^p^^^^n
"BLD",81,4,"APDD",19,19.05)

"BLD",81,4,"B",19,19)

"BLD",81,"ABNS",0)
^9.66A^^
"BLD",81,"ABPKG")
n
"BLD",81,"INI")
XUINPRE1
"BLD",81,"KRN",0)
^9.67PA^8994^15
"BLD",81,"KRN",.4,0)
.4
"BLD",81,"KRN",.401,0)
.401
"BLD",81,"KRN",.402,0)
.402
"BLD",81,"KRN",.403,0)
.403
"BLD",81,"KRN",.5,0)
.5
"BLD",81,"KRN",.84,0)
.84
"BLD",81,"KRN",3.6,0)
3.6
"BLD",81,"KRN",9.2,0)
9.2
"BLD",81,"KRN",9.8,0)
9.8
"BLD",81,"KRN",9.8,"NM",0)
^9.68A^12^12
"BLD",81,"KRN",9.8,"NM",1,0)
XPDE^^0^B30440629
"BLD",81,"KRN",9.8,"NM",2,0)
XPDTA^^0^B10434478
"BLD",81,"KRN",9.8,"NM",3,0)
XPDIA^^0^B22426171
"BLD",81,"KRN",9.8,"NM",4,0)
XPDTC^^0^B21910767
"BLD",81,"KRN",9.8,"NM",5,0)
XPDIK^^0^B21478463
"BLD",81,"KRN",9.8,"NM",6,0)
XPDET^^0^B17604701
"BLD",81,"KRN",9.8,"NM",7,0)
XQ1^^0^B28103108
"BLD",81,"KRN",9.8,"NM",8,0)
XQCS^^0^B19148327
"BLD",81,"KRN",9.8,"NM",9,0)
XPDIL^^0^B21060540
"BLD",81,"KRN",9.8,"NM",10,0)
XPDIL1^^0^B12738772
"BLD",81,"KRN",9.8,"NM",11,0)
XPDIP^^0^B19647525
"BLD",81,"KRN",9.8,"NM",12,0)
XPDIU^^0^B8445750
"BLD",81,"KRN",9.8,"NM","B","XPDE",1)

"BLD",81,"KRN",9.8,"NM","B","XPDET",6)

"BLD",81,"KRN",9.8,"NM","B","XPDIA",3)

"BLD",81,"KRN",9.8,"NM","B","XPDIK",5)

"BLD",81,"KRN",9.8,"NM","B","XPDIL",9)

"BLD",81,"KRN",9.8,"NM","B","XPDIL1",10)

"BLD",81,"KRN",9.8,"NM","B","XPDIP",11)

"BLD",81,"KRN",9.8,"NM","B","XPDIU",12)

"BLD",81,"KRN",9.8,"NM","B","XPDTA",2)

"BLD",81,"KRN",9.8,"NM","B","XPDTC",4)

"BLD",81,"KRN",9.8,"NM","B","XQ1",7)

"BLD",81,"KRN",9.8,"NM","B","XQCS",8)

"BLD",81,"KRN",19,0)
19
"BLD",81,"KRN",19.1,0)
19.1
"BLD",81,"KRN",101,0)
101
"BLD",81,"KRN",409.61,0)
409.61
"BLD",81,"KRN",8994,0)
8994
"BLD",81,"KRN",8995,0)
8995
"BLD",81,"KRN","B",.4,.4)

"BLD",81,"KRN","B",.401,.401)

"BLD",81,"KRN","B",.402,.402)

"BLD",81,"KRN","B",.403,.403)

"BLD",81,"KRN","B",.5,.5)

"BLD",81,"KRN","B",.84,.84)

"BLD",81,"KRN","B",3.6,3.6)

"BLD",81,"KRN","B",9.2,9.2)

"BLD",81,"KRN","B",9.8,9.8)

"BLD",81,"KRN","B",19,19)

"BLD",81,"KRN","B",19.1,19.1)

"BLD",81,"KRN","B",101,101)

"BLD",81,"KRN","B",409.61,409.61)

"BLD",81,"KRN","B",8994,8994)

"BLD",81,"KRN","B",8995,8995)

"BLD",81,"QUES",0)
^9.62^^
"FIA",19)
OPTION
"FIA",19,0)
^DIC(19,
"FIA",19,0,0)
19I
"FIA",19,0,1)
y^n^p^^^^n
"FIA",19,0,10)

"FIA",19,0,11)

"FIA",19,0,"RLRO")

"FIA",19,0,"VR")
8.0^XU
"FIA",19,19)
1
"FIA",19,19,320)

"FIA",19,19.05)
0
"INI")
XUINPRE1
"PKG",283,-1)
1^1
"PKG",283,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",283,22,0)
^9.49I^1^1
"PKG",283,22,1,0)
8.0^2950729^2950729^6
"PKG",283,22,1,"PAH",1,0)
15^2960125
"PKG",283,22,1,"PAH",1,1,0)
^^100^100^2960126
"PKG",283,22,1,"PAH",1,1,1,0)
This patch contains the following:
"PKG",283,22,1,"PAH",1,1,2,0)
 - Updates Menu Manger and KIDS in order to support the Kernel RPC Broker.
"PKG",283,22,1,"PAH",1,1,3,0)
   Includes a new multiple, RPC (#320), in OPTION File (#19).
"PKG",283,22,1,"PAH",1,1,4,0)
 - A new prompt, 'Want to RUN the Environment Check Routine', will be asked
"PKG",283,22,1,"PAH",1,1,5,0)
   when Loading a KIDS Distribution.
"PKG",283,22,1,"PAH",1,1,6,0)
 - New file identifiers for the Build file (#9.6) and the Install file
"PKG",283,22,1,"PAH",1,1,7,0)
   (#9.7),  E3R #7587
"PKG",283,22,1,"PAH",1,1,8,0)
 - Corrections for an unrelated error in Menu Manager that caused
"PKG",283,22,1,"PAH",1,1,9,0)
   screen-type options to be built improperly from the Option File
"PKG",283,22,1,"PAH",1,1,10,0)
   as reported in NOIS CLE-1295-41576.
"PKG",283,22,1,"PAH",1,1,11,0)
 - A KIDS install will now list all routines that were created during the
"PKG",283,22,1,"PAH",1,1,12,0)
   install process.
"PKG",283,22,1,"PAH",1,1,13,0)

"PKG",283,22,1,"PAH",1,1,14,0)
===========================================================================
"PKG",283,22,1,"PAH",1,1,15,0)
  
"PKG",283,22,1,"PAH",1,1,16,0)
This patch contains the routine XQ1.  All users should be OFF the system and
"PKG",283,22,1,"PAH",1,1,17,0)
Taskman should be put in a Wait State while installing this patch.
"PKG",283,22,1,"PAH",1,1,18,0)
  
"PKG",283,22,1,"PAH",1,1,19,0)
===========================================================================
"PKG",283,22,1,"PAH",1,1,20,0)
  
"PKG",283,22,1,"PAH",1,1,21,0)
INSTALLATION:
"PKG",283,22,1,"PAH",1,1,22,0)
  1.  These routines are usually mapped on systems that allow mapping,
"PKG",283,22,1,"PAH",1,1,23,0)
      so you will need to disable mapping for the effected routines.
"PKG",283,22,1,"PAH",1,1,24,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",283,22,1,"PAH",1,1,25,0)
      option will load the KIDS package onto your system.
"PKG",283,22,1,"PAH",1,1,26,0)
  3.  Answer NO to the question:
"PKG",283,22,1,"PAH",1,1,27,0)
      'Shall I preserve what is on disk in a separate back-up message ?'.
"PKG",283,22,1,"PAH",1,1,28,0)
  4.  The patch has now been loaded into a Transport global on your
"PKG",283,22,1,"PAH",1,1,29,0)
      system. You now need to use KIDS to install the Transport global.
"PKG",283,22,1,"PAH",1,1,30,0)
  5.  In Programmer Mode, run the routine XPDKRN and use the option
"PKG",283,22,1,"PAH",1,1,31,0)
      'Verify Checksum in Transport Global' and verify that all routines
"PKG",283,22,1,"PAH",1,1,32,0)
      have the correct checksums.
"PKG",283,22,1,"PAH",1,1,33,0)
  6.  Logoff the users and put Taskman in a Wait State.
"PKG",283,22,1,"PAH",1,1,34,0)
  7.  In Programmer Mode, run the routine XPDKRN and use the option
"PKG",283,22,1,"PAH",1,1,35,0)
      'Install Package(s)'. Select the package 'XU*8.0*15' and proceed
"PKG",283,22,1,"PAH",1,1,36,0)
      with install.
"PKG",283,22,1,"PAH",1,1,37,0)
  8.  If you are a MSM site move the routine to the other servers.
"PKG",283,22,1,"PAH",1,1,38,0)
  9.  On a mapped system, rebuild your map set.
"PKG",283,22,1,"PAH",1,1,39,0)
 10.  Allow users back on the system and remove Taskman from its Wait State.
"PKG",283,22,1,"PAH",1,1,40,0)
 ====================================================================  
"PKG",283,22,1,"PAH",1,1,41,0)
  
"PKG",283,22,1,"PAH",1,1,42,0)
 ROUTINES:
"PKG",283,22,1,"PAH",1,1,43,0)
   The second line of the routine now looks like:
"PKG",283,22,1,"PAH",1,1,44,0)
       ;;8.0;KERNEL;**[patch list]**;Jul 10, 1995
"PKG",283,22,1,"PAH",1,1,45,0)
 
"PKG",283,22,1,"PAH",1,1,46,0)
 Name           Before          After           Patch List
"PKG",283,22,1,"PAH",1,1,47,0)
 ----------------------------------------------------------
"PKG",283,22,1,"PAH",1,1,48,0)
 XPDE           13070811        13070807        2,15
"PKG",283,22,1,"PAH",1,1,49,0)
 XPDET          3688528         4405222         15
"PKG",283,22,1,"PAH",1,1,50,0)
 XPDIA          7058872         8474060         10,15
"PKG",283,22,1,"PAH",1,1,51,0)
 XPDIP          7105579         7565730         15
"PKG",283,22,1,"PAH",1,1,52,0)
 XPDIK          10629573        10192795        15
"PKG",283,22,1,"PAH",1,1,53,0)
 XPDIL          10081002        10483234        15
"PKG",283,22,1,"PAH",1,1,54,0)
 XPDIL1         6278390         6287869         15,17
"PKG",283,22,1,"PAH",1,1,55,0)
 XPDIU          5987197         5981701         15
"PKG",283,22,1,"PAH",1,1,56,0)
 XPDTA          5532717         6086560         15
"PKG",283,22,1,"PAH",1,1,57,0)
 XPDTC          9603838         9635781         10,15
"PKG",283,22,1,"PAH",1,1,58,0)
 XQ1            10992484        11134292        1,15
"PKG",283,22,1,"PAH",1,1,59,0)
 XQCS           new             8509197         15
"PKG",283,22,1,"PAH",1,1,60,0)
 XUINPRE1       new             413082          15
"PKG",283,22,1,"PAH",1,1,61,0)

"PKG",283,22,1,"PAH",1,1,62,0)
 =====================================================================
"PKG",283,22,1,"PAH",1,1,63,0)
 DATA DICTIONARY:
"PKG",283,22,1,"PAH",1,1,64,0)

"PKG",283,22,1,"PAH",1,1,65,0)
   FILE:  OPTION (#19)     (Partial DD)
"PKG",283,22,1,"PAH",1,1,66,0)
   FIELD: RPC    (#320)
"PKG",283,22,1,"PAH",1,1,67,0)
   SUBDD: 19.05
"PKG",283,22,1,"PAH",1,1,68,0)

"PKG",283,22,1,"PAH",1,1,69,0)
 ======================================================================
"PKG",283,22,1,"PAH",1,1,70,0)
 DOCUMENTATION:
"PKG",283,22,1,"PAH",1,1,71,0)

"PKG",283,22,1,"PAH",1,1,72,0)
 A new prompt has been added to the Loading process of the Kernel
"PKG",283,22,1,"PAH",1,1,73,0)
 Installation and Distribution System. When using the option, 'Load
"PKG",283,22,1,"PAH",1,1,74,0)
 a Distribution', the new prompt will be:
"PKG",283,22,1,"PAH",1,1,75,0)
 'Want to RUN the Environment Check Routine: YES// '.
"PKG",283,22,1,"PAH",1,1,76,0)
 NO means you want to skip the Environment Check routine and continue
"PKG",283,22,1,"PAH",1,1,77,0)
 with the load.  YES means you want to execute the Environment Check
"PKG",283,22,1,"PAH",1,1,78,0)
 routine.
"PKG",283,22,1,"PAH",1,1,79,0)

"PKG",283,22,1,"PAH",1,1,80,0)
 This will allow a site to Load a Distribution into a system that
"PKG",283,22,1,"PAH",1,1,81,0)
 contains only FileMan 21 and Kernel 8.0.  Once a Distribution is loaded
"PKG",283,22,1,"PAH",1,1,82,0)
 then a site can do any of the following options with the Transport Global:
"PKG",283,22,1,"PAH",1,1,83,0)
          Convert Loaded Package for Redistribution
"PKG",283,22,1,"PAH",1,1,84,0)
          Print Transport Global
"PKG",283,22,1,"PAH",1,1,85,0)
          Compare Transport Global to Current System
"PKG",283,22,1,"PAH",1,1,86,0)
          Verify Checksums in Transport Global
"PKG",283,22,1,"PAH",1,1,87,0)
          Backup a Transport Global
"PKG",283,22,1,"PAH",1,1,88,0)

"PKG",283,22,1,"PAH",1,1,89,0)
 If your system is a PC, you can also move the Transport Global to a new
"PKG",283,22,1,"PAH",1,1,90,0)
 medium,  (i.e. to multiple floppy disks so you can install on other PCs)
"PKG",283,22,1,"PAH",1,1,91,0)
 1. Load the Distribution, DO NOT run the Environment Check routine.
"PKG",283,22,1,"PAH",1,1,92,0)
 2. Under the Utilities Menu, Convert Loaded Package for Redistribution.
"PKG",283,22,1,"PAH",1,1,93,0)
 3. Under the Edits and Distribution Menu, Transport a Distribution
"PKG",283,22,1,"PAH",1,1,94,0)
 4. When you are prompted for Host File, enter the floppy drive and file name.
"PKG",283,22,1,"PAH",1,1,95,0)
    i.e.  Enter a Host File: A:\KRN8.KID
"PKG",283,22,1,"PAH",1,1,96,0)

"PKG",283,22,1,"PAH",1,1,97,0)
 During a KIDS install, routines can be created for compiled cross-references,
"PKG",283,22,1,"PAH",1,1,98,0)
 input templates, and print templates.  KIDS will now list these new routines
"PKG",283,22,1,"PAH",1,1,99,0)
 during the install process.
"PKG",283,22,1,"PAH",1,1,100,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options and Menu Options
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
13
"RTN","XPDE")
0^1^B30440629
"RTN","XPDE",1,0)
XPDE ;SFISC/RSD - Package Edit ; 25 Jan 96 09:14
"RTN","XPDE",2,0)
 ;;8.0;KERNEL;**2,15**;Jul 10, 1995
"RTN","XPDE",3,0)
 Q
"RTN","XPDE",4,0)
EDIT ;edit Build file package
"RTN","XPDE",5,0)
 N DA,DIR,DDSFILE,DR,Y,Z
"RTN","XPDE",6,0)
 Q:'$$DIC("AEMQLZ","",1)  S DA=+Y
"RTN","XPDE",7,0)
 I $P(Y,U,3) D NEW(DA)
"RTN","XPDE",8,0)
 ;need code to start editing
"RTN","XPDE",9,0)
 S DR="[XPD EDIT BUILD]",DDSFILE="^XPD(9.6,"
"RTN","XPDE",10,0)
 D ^DDS Q:'$G(DA)
"RTN","XPDE",11,0)
 S Y=0 F  S Y=$O(^XPD(9.6,DA,4,Y)) Q:'Y  S Z=$G(^(Y,222)) D
"RTN","XPDE",12,0)
 .K:$P(Z,U,3)="f" ^XPD(9.6,DA,4,Y,2),^XPD(9.6,DA,4,"APDD",Y)
"RTN","XPDE",13,0)
 D QUIT(DA)
"RTN","XPDE",14,0)
 Q
"RTN","XPDE",15,0)
COPY ;copy a Build file package
"RTN","XPDE",16,0)
 N DA,DIK,DIR,FR,FR0,TO,TO0,X,Y,Z W !
"RTN","XPDE",17,0)
 Q:'$$DIC("QEAMZ","Copy FROM what Package: ")
"RTN","XPDE",18,0)
 S FR=+Y,FR0=Y(0),Z="QEAMZL",Z("S")="I Y'="_FR
"RTN","XPDE",19,0)
 I '$$DIC(.Z,"Copy TO what Package: ") D QUIT(FR) Q
"RTN","XPDE",20,0)
 S TO=Y,TO0=Y(0)
"RTN","XPDE",21,0)
 I '$P(Y,U,3) W !,$P(TO0,U)," package will be PURGED before the copy."
"RTN","XPDE",22,0)
 W ! S DIR(0)="Y",DIR("A")="OK to continue",DIR("B")="YES" D ^DIR
"RTN","XPDE",23,0)
 S DIK="^XPD(9.6,",DA=+TO
"RTN","XPDE",24,0)
 I 'Y!$D(DIRUT) D  W ! Q
"RTN","XPDE",25,0)
 .I $P(TO,U,3) D ^DIK W $P(TO0,U)," being deleted!"
"RTN","XPDE",26,0)
 .D QUIT(FR),QUIT(TO)
"RTN","XPDE",27,0)
 D WAIT^DICD
"RTN","XPDE",28,0)
 K ^XPD(9.6,DA) M ^(DA)=^(FR) S $P(^(DA,0),U)=$P(TO0,U)
"RTN","XPDE",29,0)
 I $P(TO0,U,2)]"",$P(FR0,U,2)'=$P(TO0,U,2) K ^XPD(9.6,"C",$E($P(TO0,U,2),1,30),DA) S DIK(1)=1 D EN1^DIK
"RTN","XPDE",30,0)
 D QUIT(FR),QUIT(TO)
"RTN","XPDE",31,0)
 W "    ...Done.",! Q
"RTN","XPDE",32,0)
BUILD ;build package from a namespace
"RTN","XPDE",33,0)
 N DA,D0,D1,DIR,XPDA,XPDI,XPDIC,XPDF,XPDN,X,X1,Y,Y1 W !
"RTN","XPDE",34,0)
 Q:'$$DIC("QEAML")
"RTN","XPDE",35,0)
 S XPDA=+Y W !
"RTN","XPDE",36,0)
 I '$P(Y,U,3) D  I $D(DIRUT) D QUIT(XPDA) Q
"RTN","XPDE",37,0)
 .S DIR(0)="Y",DIR("A")="Package already exists, Want to PURGE the existing data",DIR("B")="NO",DIR("?")="YES will delete all the KERNEL FILE information for this package in the BUILD file."
"RTN","XPDE",38,0)
 .D ^DIR K DIR Q:'Y
"RTN","XPDE",39,0)
 .S Y=0 F  S Y=$O(^XPD(9.6,XPDA,"KRN",Y)) Q:'Y  K ^(Y,"NM")
"RTN","XPDE",40,0)
 E  D NEW(XPDA)
"RTN","XPDE",41,0)
 W ! S DIR(0)="FO^1:15^K:X'?.1""-""1U.15UNP X",DIR("A")="Namespace",DIR("?")="Enter 1 to 15 characters, preceed with ""-"" to exclude namespace"
"RTN","XPDE",42,0)
 F  D ^DIR Q:$D(DIRUT)  S X=$E(Y,$L(Y))="*",%=$E(Y)="-",XPDN('%,$E(Y,%+1,$L(Y)-X))=""
"RTN","XPDE",43,0)
 I '$D(XPDN)!$D(DTOUT)!$D(DUOUT) D QUIT(XPDA) Q
"RTN","XPDE",44,0)
 W !!,"NAMESPACE  INCLUDE",?35,"EXCLUDE",!,?11,"-------",?35,"-------"
"RTN","XPDE",45,0)
 S (X,Y)="",(X1,Y1)=1
"RTN","XPDE",46,0)
 F  D  W !?11,X,?35,Y Q:'X1&'Y1
"RTN","XPDE",47,0)
 .S:X1 X=$O(XPDN(1,X)),X1=X]"" S:Y1 Y=$O(XPDN(0,Y)),Y1=Y]""
"RTN","XPDE",48,0)
 S DIR(0)="Y",DIR("A")="OK to continue",DIR("B")="YES" D ^DIR
"RTN","XPDE",49,0)
 I 'Y!$D(DIRUT) D QUIT(XPDA) Q
"RTN","XPDE",50,0)
 D WAIT^DICD S (DA(2),D0)=XPDA,Y=""
"RTN","XPDE",51,0)
 F  S Y=$O(XPDN(1,Y)),D1=0 Q:Y=""  D
"RTN","XPDE",52,0)
 .F  S D1=$O(^XPD(9.6,D0,"KRN",D1)) Q:'D1  D
"RTN","XPDE",53,0)
 ..S (XPDF,DA(1))=D1,X=Y,XPDIC="^XPD(9.6,"_D0_",""KRN"","_D1_",""NM"",",XPDI("IEN")=0
"RTN","XPDE",54,0)
 ..N %,DD,DO,Y,XPD
"RTN","XPDE",55,0)
 ..D LIST^DIC(D1,"","","","*",.XPDI,X,"","I $$SCR1^XPDET(Y)")
"RTN","XPDE",56,0)
 ..F XPDI=1:1 S X=$G(^TMP("DILIST",$J,1,XPDI)) Q:X=""  D
"RTN","XPDE",57,0)
 ...S:D1<.404 %=^TMP("DILIST",$J,2,XPDI)_",",X=$$TX^XPDET(X,$$GET1^DIQ(D1,%,$$TF^XPDET(D1),"I"))
"RTN","XPDE",58,0)
 ...S Y="+1,"_D1_","_D0_",",XPD(9.68,Y,.01)=X,XPD(9.68,Y,.03)=0
"RTN","XPDE",59,0)
 ...S:'$D(^XPD(9.6,D0,"KRN",D1,"NM",0)) ^XPD(9.6,D0,"KRN",D1,"NM",0)=U_$P(^DD(9.67,10,0),U,2)
"RTN","XPDE",60,0)
 ...D UPDATE^DIE("","XPD")
"RTN","XPDE",61,0)
 D QUIT(XPDA)
"RTN","XPDE",62,0)
 W "    ...Done.",! Q
"RTN","XPDE",63,0)
VER ;verify a Build file package
"RTN","XPDE",64,0)
 N XPDA,Y
"RTN","XPDE",65,0)
 Q:'$$DIC("AEMQLZ")  S XPDA=+Y
"RTN","XPDE",66,0)
 D EN^XPDV Q
"RTN","XPDE",67,0)
DIC(DIC,A,XPDL) ;DIC lookup to Build file, 9.6
"RTN","XPDE",68,0)
 N DLAYGO
"RTN","XPDE",69,0)
 S DIC(0)=$G(DIC),DIC="^XPD(9.6," S:$G(A)]"" DIC("A")=A
"RTN","XPDE",70,0)
 S:DIC(0)["L" DLAYGO=9.6
"RTN","XPDE",71,0)
 D ^DIC Q:Y<0 0
"RTN","XPDE",72,0)
 I '$G(XPDL) L +^XPD(9.6,+Y):0 E  W !,"Being accessed by another user" Q 0
"RTN","XPDE",73,0)
 Q +Y
"RTN","XPDE",74,0)
 ;
"RTN","XPDE",75,0)
NEW(DA) ;create Kernel Files multiple for package DA
"RTN","XPDE",76,0)
 N I,J,X,XPDNEWF,XPD,XPDI
"RTN","XPDE",77,0)
 S:'$D(^XPD(9.6,DA,"KRN",0)) ^XPD(9.6,DA,"KRN",0)=U_$P(^DD(9.6,7,0),U,2)
"RTN","XPDE",78,0)
 S I=0
"RTN","XPDE",79,0)
 F J=1:1 S X=+$P($T(FILES+J),";;",2) Q:'X  S:$D(^DD(X)) I=I+1,(XPDI(I),XPD(9.67,"+"_I_","_DA_",",.01))=X
"RTN","XPDE",80,0)
 S XPD(9.6,DA_",",2)=0,XPDNEWF=1
"RTN","XPDE",81,0)
 D UPDATE^DIE("","XPD","XPDI")
"RTN","XPDE",82,0)
 Q
"RTN","XPDE",83,0)
QUIT(Y) ;unlock Y
"RTN","XPDE",84,0)
 L -^XPD(9.6,Y)
"RTN","XPDE",85,0)
 Q
"RTN","XPDE",86,0)
 ;
"RTN","XPDE",87,0)
FILES ;kernel files for field 7 in file 9.6
"RTN","XPDE",88,0)
 ;;101;11;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"RTN","XPDE",89,0)
 ;;8995;10;;GUIF^XPDTA1;GUIE^XPDTA1;GUIF1^XPDIA1;GUIE1^XPDIA1;GUIF2^XPDIA1;;EN^XPDGCDEL(%)
"RTN","XPDE",90,0)
 ;;19;14;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"RTN","XPDE",91,0)
 ;;409.61;13;1;;;;;;;LMDEL^XPDIA1
"RTN","XPDE",92,0)
 ;;19.1;3;1;;KEY^XPDTA1;;;;;KEYDEL^XPDIA1
"RTN","XPDE",93,0)
 ;;9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"RTN","XPDE",94,0)
 ;;9.2;1;;;HELP^XPDTA1;HLPF1^XPDIA1;HLPE1^XPDIA1;HLPF2^XPDIA1;;HLPDEL^XPDIA1
"RTN","XPDE",95,0)
 ;;3.6;2;1;;BUL^XPDTA1;;BULE1^XPDIA1;;;BULDEL^XPDIA1
"RTN","XPDE",96,0)
 ;;.5;4;;;EDEOUT^DIFROMSO(.5,DA,"",XPDA);FPRE^DIFROMSI(.5,"",XPDA);EPRE^DIFROMSI(.5,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.5,DA,"",XPDA)
"RTN","XPDE",97,0)
 ;;.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"RTN","XPDE",98,0)
 ;;.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"RTN","XPDE",99,0)
 ;;.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"RTN","XPDE",100,0)
 ;;.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"RTN","XPDE",101,0)
 ;;.84;9;;;EDEOUT^DIFROMSO(.84,DA,"",XPDA);FPRE^DIFROMSI(.84,"",XPDA);EPRE^DIFROMSI(.84,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.84,DA,"",XPDA);DEL^DIFROMSK(.84,"",%)
"RTN","XPDE",102,0)
 ;;8994;12;1;;;;;;;RPCDEL^XPDIA1
"RTN","XPDET")
0^6^B17604701
"RTN","XPDET",1,0)
XPDET ;SFISC/RSD - Input tranforms & help for file 9.6 ; 25 Jan 96 09:15
"RTN","XPDET",2,0)
 ;;8.0;KERNEL;**15**;Jul 10, 1995
"RTN","XPDET",3,0)
 Q
"RTN","XPDET",4,0)
INPUTB(X) ;input tranfrom for NAME in BUILD file
"RTN","XPDET",5,0)
 ;X=user input
"RTN","XPDET",6,0)
 I $L(X)>50!($L(X)<3)!$D(^XPD(9.6,"B",X)) K X Q
"RTN","XPDET",7,0)
 I X["*" K:$P(X,"*",2,3)'?1.2N1"."1.2N.1(1"V",1"T").2N1"*"1.3N X Q
"RTN","XPDET",8,0)
 S %=$L(X," ") I %<2 K X Q
"RTN","XPDET",9,0)
 S %=$P(X," ",%) K:%'?1.2N1"."1.2N.1(1"V",1"T").2N X
"RTN","XPDET",10,0)
 Q
"RTN","XPDET",11,0)
INPUTE(X) ;input transform for ENTRIES in KERNEL FILES multiple
"RTN","XPDET",12,0)
 ;X=user input
"RTN","XPDET",13,0)
 N D,DD,DIC,DICR,DIX,DIY,DS,DO,XPDLK,Y
"RTN","XPDET",14,0)
 S XPDLK=$$GR(D1)
"RTN","XPDET",15,0)
 I XPDLK=""!X["*" K X Q
"RTN","XPDET",16,0)
 S DIC(0)="QEMZ",DIC=XPDLK
"RTN","XPDET",17,0)
 S:D1=9.8 DIC("S")="I $T(^@$P(^(0),U))]"""""
"RTN","XPDET",18,0)
 D ^DIC K:Y<0 X Q:'$D(X)
"RTN","XPDET",19,0)
 S X=Y(0,0)
"RTN","XPDET",20,0)
 I $D(^XPD(9.6,D0,"KRN",D1,"NM","B",X)) K X Q
"RTN","XPDET",21,0)
 I D1<.404 S X=$$TX(X,$P(Y(0),U,$S(D1=.403:8,1:4)))
"RTN","XPDET",22,0)
 Q
"RTN","XPDET",23,0)
GLOBALE(X) ;input transform for GLOBAL multiple .01 field in file 9.6
"RTN","XPDET",24,0)
 I $L(X)>30!($L(X)<2) K X Q
"RTN","XPDET",25,0)
 I X["(",X'[")" K X Q
"RTN","XPDET",26,0)
 S X=$TR(X,"'","""")
"RTN","XPDET",27,0)
 I '$D(@("^"_X)) K X
"RTN","XPDET",28,0)
 Q
"RTN","XPDET",29,0)
LOOKE(X) ;special lookup for ENTRIES in KERNEL FILES multiple
"RTN","XPDET",30,0)
 Q:X'?1.E1"*"
"RTN","XPDET",31,0)
 N %,XPD,XPDI,XPDIC,XPDF,XPDLK,XPDX,Y
"RTN","XPDET",32,0)
 S XPDLK=$$GR(D1),XPDIC=DIC,XPDF=D1
"RTN","XPDET",33,0)
 I XPDLK="" K X Q
"RTN","XPDET",34,0)
 G:$E(X)="-" DEL
"RTN","XPDET",35,0)
 S XPDX=$P(X,"*"),XPDI("IEN")=0
"RTN","XPDET",36,0)
 D LIST^DIC(D1,"","","","*",.XPDI,XPDX,"","I $$SCR^XPDET(Y)")
"RTN","XPDET",37,0)
 I '$G(^TMP("DILIST",$J,0)) K X Q
"RTN","XPDET",38,0)
 K ^TMP("XPDX",$J)
"RTN","XPDET",39,0)
 F XPDI=1:1 S X=$G(^TMP("DILIST",$J,1,XPDI)) Q:X=""  D
"RTN","XPDET",40,0)
 .S:D1<.404 %=^TMP("DILIST",$J,2,XPDI)_",",X=$$TX(X,$$GET1^DIQ(D1,%,$$TF(D1),"I"))
"RTN","XPDET",41,0)
 .S Y="+"_XPDI_","_D1_","_D0_",",^TMP("XPDX",$J,9.68,Y,.01)=X,^(.03)=0
"RTN","XPDET",42,0)
 I $D(^TMP("XPDX",$J)) D UPDATE^DIE("","^TMP(""XPDX"",$J)","^TMP(""XPD"",$J)")
"RTN","XPDET",43,0)
 I $D(DDS),$D(^TMP("XPD",$J)) D MLOAD^DDSUTL("^TMP(""XPD"",$J)")
"RTN","XPDET",44,0)
 S X=""
"RTN","XPDET",45,0)
 K ^TMP("XPDX",$J),^TMP("XPD",$J)
"RTN","XPDET",46,0)
 Q
"RTN","XPDET",47,0)
DEL ;delete using wild card
"RTN","XPDET",48,0)
 I X'?1"-"1.E1"*" K X Q
"RTN","XPDET",49,0)
 S X=$E(X,2,$L(X)-1),XPDX=X S:$L(X) XPDI("IEN")=0
"RTN","XPDET",50,0)
 D LIST^DIC(9.68,","_D1_","_D0_",","","","*",.XPDI,XPDX)
"RTN","XPDET",51,0)
 I '$G(^TMP("DILIST",$J,0)) K X Q
"RTN","XPDET",52,0)
 N DIK,DA,D2
"RTN","XPDET",53,0)
 S DIK=XPDIC,DA(1)=D1,DA(2)=D0
"RTN","XPDET",54,0)
 F XPDI=1:1 S (DA,D2)=$G(^TMP("DILIST",$J,2,XPDI)) Q:'DA  D
"RTN","XPDET",55,0)
 .D ^DIK
"RTN","XPDET",56,0)
 I $D(DDS) D MDEL^DDSUTL("^TMP(""DILIST"",$J,2)")
"RTN","XPDET",57,0)
 S X=""
"RTN","XPDET",58,0)
 K ^TMP("DILIST",$J)
"RTN","XPDET",59,0)
 Q
"RTN","XPDET",60,0)
HELP ;executable help of ENTRIES in KERNEL FILE multiple
"RTN","XPDET",61,0)
 N D,DIC,DIE,DIX,DIY,DO,DZ,DS,X,Y
"RTN","XPDET",62,0)
 S DIC=$$GR(D1),DIC(0)="M",X="??" Q:DIC=""  S:D1=9.8 DIC("S")="I $T(^@$P(^(0),U))]"""""
"RTN","XPDET",63,0)
 D ^DIC Q
"RTN","XPDET",64,0)
HELPO ;executable help of INSTALL ORDER in KERNEL FILES multiple
"RTN","XPDET",65,0)
 N Y
"RTN","XPDET",66,0)
 W !,"Numbers in use:  ORDER     FILE#" S Y=0
"RTN","XPDET",67,0)
 F  S Y=$O(^XPD(9.6,D0,"KRN","AC",Y)) Q:'Y  W !,?18,$J(Y,2),?28,$O(^(Y,0))
"RTN","XPDET",68,0)
 W ! Q
"RTN","XPDET",69,0)
 ;
"RTN","XPDET",70,0)
SCRA(Y) ;screen of ACTION field in ENTRIES multiple in KERNEL FILES multiple, Y=action
"RTN","XPDET",71,0)
 Q:'Y 1
"RTN","XPDET",72,0)
 I Y=1 Q (D1'=.5)
"RTN","XPDET",73,0)
 Q:D1'=19&(D1'=101) 0
"RTN","XPDET",74,0)
 N FGR,X
"RTN","XPDET",75,0)
 S X=$P(^XPD(9.6,D0,"KRN",D1,"NM",D2,0),U),FGR=$$FILE^XPDV(D1)
"RTN","XPDET",76,0)
 Q:X="" 0
"RTN","XPDET",77,0)
 S X=+$O(@FGR@("B",X,0))
"RTN","XPDET",78,0)
 I $O(@FGR@(X,10,0)) Q 1
"RTN","XPDET",79,0)
 I "MOQLXZ"[$P($G(@FGR@(X,0)),U,4) Q 1
"RTN","XPDET",80,0)
 Q 0
"RTN","XPDET",81,0)
 ;
"RTN","XPDET",82,0)
TX(X,Y) ;X=template name, Y=file #
"RTN","XPDET",83,0)
 Q X_"    FILE #"_Y
"RTN","XPDET",84,0)
 ;
"RTN","XPDET",85,0)
TF(F) ;F=file, return field of file# for templates
"RTN","XPDET",86,0)
 Q $S(F>.403:"",F<.403:4,1:7)
"RTN","XPDET",87,0)
 ;
"RTN","XPDET",88,0)
GR(X) Q $G(^DIC(X,0,"GL"))
"RTN","XPDET",89,0)
 ;
"RTN","XPDET",90,0)
SCR(Y) ;screen logic for ENTRIES multiple in file 9.6
"RTN","XPDET",91,0)
 N %,X,Z
"RTN","XPDET",92,0)
 S Z=^(0),X=$P(Z,U)
"RTN","XPDET",93,0)
 I XPDF<.44 D  Q:X="" 0
"RTN","XPDET",94,0)
 .S %=$S(XPDF=.403:$P(Z,U,8),1:$P(Z,U,4)),X=X_"    FILE #"_%
"RTN","XPDET",95,0)
 .S:XPDF'=.403&($P(Z,U,8)>2) %=0 S:'% X=""
"RTN","XPDET",96,0)
 I XPDF=9.8 Q:$T(^@X)=""!($P(Z,U,2)'="R") 0
"RTN","XPDET",97,0)
 Q '$D(@(XPDIC_"""B"",X)"))
"RTN","XPDET",98,0)
 ;
"RTN","XPDET",99,0)
SCR1(Y) ;screen logic for exclude list
"RTN","XPDET",100,0)
 N %,X
"RTN","XPDET",101,0)
 S Y(0)=^(0),X=$P(Y(0),U) Q:$D(XPDN(0,X)) 0
"RTN","XPDET",102,0)
 S %=$O(XPDN(0,X),-1) I $L(%) Q:$P(X,%)="" 0
"RTN","XPDET",103,0)
 Q $$SCR(.Y)
"RTN","XPDET",104,0)
 ;
"RTN","XPDET",105,0)
 ;screen on PACKAGE LINK field in file 9.6,
"RTN","XPDET",106,0)
PCK(Y) ;check Package File name, Y=ien in package file
"RTN","XPDET",107,0)
 Q:'$D(DA) 1
"RTN","XPDET",108,0)
 N %,Z
"RTN","XPDET",109,0)
 S Z=^(0),%=$P(^XPD(9.6,DA,0),U),%=$$PKG^XPDUTL(%)
"RTN","XPDET",110,0)
 Q $P(Z,U)=%!($P(Z,U,2)=%)
"RTN","XPDET",111,0)
VOLE(X) ;input transform for VOLUME SET multiple in INSTALL file
"RTN","XPDET",112,0)
 ;X=user input
"RTN","XPDET",113,0)
 N D,DD,DIC,DICR,DIX,DIY,DO,DS,XPD,Y,%
"RTN","XPDET",114,0)
 S DIC(0)="QEMZ",DIC="^%ZIS(14.5,",DIC("S")="I ""CP""[$P(^(0),U,10)"
"RTN","XPDET",115,0)
 D ^DIC K:Y<0 X Q:'$D(X)
"RTN","XPDET",116,0)
 S X=Y(0,0)
"RTN","XPDET",117,0)
 Q
"RTN","XPDET",118,0)
VOLH ;executable help for VOLUME SET multiple in INSTALL file
"RTN","XPDET",119,0)
 N D,DD,DIC,DIE,DIX,DIY,DO,DS,DZ,X,Y,%
"RTN","XPDET",120,0)
 S X="??",DIC(0)="QEMZ",DIC="^%ZIS(14.5,",DIC("S")="I ""CP""[$P(^(0),U,10)"
"RTN","XPDET",121,0)
 D ^DIC
"RTN","XPDET",122,0)
 Q
"RTN","XPDET",123,0)
ID97 ;identifier for Install file
"RTN","XPDET",124,0)
 N XPDET,XPD,XPD0,XPD1,XPD2,XPD9
"RTN","XPDET",125,0)
 S XPD0=$G(^(0)),XPD1=$G(^(1)),XPD2=$G(^(2)),XPD9=$P(XPD0,U,9),XPD="" Q:XPD9=""
"RTN","XPDET",126,0)
 D
"RTN","XPDET",127,0)
 .I 'XPD9 S XPD=$$FMTE^XLFDT($P(XPD0,U,3),2) Q
"RTN","XPDET",128,0)
 .Q:XPD9>3
"RTN","XPDET",129,0)
 .I XPD9=2 S XPD=$$FMTE^XLFDT($P(XPD1,U),2) Q
"RTN","XPDET",130,0)
 .I XPD9=3 S XPD=$$FMTE^XLFDT($P(XPD1,U,3),2) Q
"RTN","XPDET",131,0)
 .I XPD9=1 S XPD="#"_$P(XPD0,U,6) Q
"RTN","XPDET",132,0)
 S XPDET(1)="   "_$$EXTERNAL^DILFD(9.7,.02,"",XPD9)_"  "_XPD,XPDET(1,"F")="?0"
"RTN","XPDET",133,0)
 S:XPD2]"" XPDET(2)="=> "_XPD2,XPDET(2,"F")="!?5"
"RTN","XPDET",134,0)
 D EN^DDIOL(.XPDET)
"RTN","XPDET",135,0)
 Q
"RTN","XPDIA")
0^3^B22426171
"RTN","XPDIA",1,0)
XPDIA ;SFISC/RSD - Install Pre/Post Actions for Kernel Files ; 25 Jan 96 09:14
"RTN","XPDIA",2,0)
 ;;8.0;KERNEL;**10,15**;Jul 10, 1995
"RTN","XPDIA",3,0)
 Q
"RTN","XPDIA",4,0)
OPTF1 ;options file pre
"RTN","XPDIA",5,0)
 K ^TMP($J,"XPD")
"RTN","XPDIA",6,0)
 Q
"RTN","XPDIA",7,0)
OPTE1 ;options entry pre
"RTN","XPDIA",8,0)
 N %,I
"RTN","XPDIA",9,0)
 S ^TMP($J,"XPD",DA)=""
"RTN","XPDIA",10,0)
 I XPDFL>1 M ^TMP($J,"XPD",DA,10)=^XTMP("XPDI",XPDA,"KRN",19,OLDA,10) K ^XTMP("XPDI",XPDA,"KRN",19,OLDA,10)
"RTN","XPDIA",11,0)
 I XPDFL=2 S XPDQUIT=1 Q
"RTN","XPDIA",12,0)
 I $P(Y,U,3) D:$D(XPDSET)  Q
"RTN","XPDIA",13,0)
 .S $P(^XTMP("XPDI",XPDA,"KRN",19,OLDA,0),U,3)=$P(XPDSET,U,2)
"RTN","XPDIA",14,0)
 .D ADD^XQOO1($P(XPDSET,U),19,DA)
"RTN","XPDIA",15,0)
 S I=^XTMP("XPDI",XPDA,"KRN",19,OLDA,0),%=^DIC(19,DA,0)
"RTN","XPDIA",16,0)
 S $P(I,U,3)=$P(%,U,3)
"RTN","XPDIA",17,0)
 S:$P(I,U,6)="" $P(I,U,6)=$P(%,U,6)
"RTN","XPDIA",18,0)
 I $P($G(^XTMP("XPDI",XPDA,"KRN",19,OLDA,3)),U)="",$L($P($G(^DIC(19,DA,3)),U)) S $P(I,U,16)=$P(%,U,16),$P(^XTMP("XPDI",XPDA,"KRN",19,OLDA,3),U)=$P(^(3),U)
"RTN","XPDIA",19,0)
 S ^XTMP("XPDI",XPDA,"KRN",19,OLDA,0)=I
"RTN","XPDIA",20,0)
 K:$O(^XTMP("XPDI",XPDA,"KRN",19,OLDA,1,0)) ^DIC(19,DA,1)
"RTN","XPDIA",21,0)
 S I=$G(^DIC(19,DA,"U")) I I]"",I'=$G(^XTMP("XPDI",XPDA,"KRN",19,OLDA,"U")) K ^DIC(19,"C",I)
"RTN","XPDIA",22,0)
 S I=0
"RTN","XPDIA",23,0)
 Q:XPDFL=3
"RTN","XPDIA",24,0)
 F  S I=$O(^DIC(19,DA,10,I)) Q:'I  S %=+$G(^(I,0)) K:% ^DIC(19,"AD",%,DA,I)
"RTN","XPDIA",25,0)
 K ^DIC(19,DA,10) Q
"RTN","XPDIA",26,0)
OPTF2 ;options file post
"RTN","XPDIA",27,0)
 N DA,DIK,I,X,Y,Y0
"RTN","XPDIA",28,0)
 S DA=0,DIK=DIC F  S DA=$O(^TMP($J,"XPD",DA)) Q:'DA  D
"RTN","XPDIA",29,0)
 .S Y0=$G(^DIC(19,DA,220)) I Y0]"" S $P(Y0,U)=$$LK("^XMB(3.6)",$P(Y0,U)),$P(Y0,U,3)=$$LK("^XMB(3.8)",$P(Y0,U,3)),^DIC(19,DA,220)=Y0
"RTN","XPDIA",30,0)
 .S Y0=$G(^DIC(19,DA,24)) I Y0]"" S $P(Y0,U)=$$LK("^XTV(8995)",$P(Y0,U)),^DIC(19,DA,220)=Y0
"RTN","XPDIA",31,0)
 .S (I,X)=0 F  S I=$O(^DIC(19,DA,"RPC",I)) Q:'I  S Y0=$G(^(I,0)) D
"RTN","XPDIA",32,0)
 ..S Y=$$LK("^XWB(8994)",$P(Y0,U))
"RTN","XPDIA",33,0)
 ..I 'Y K ^DIC(19,DA,"RPC",I) D BMES^XPDUTL(" RPC "_$P(Y0,U)_" in Option "_$P(^DIC(19,DA,0),U)_" **NOT FOUND**") Q
"RTN","XPDIA",34,0)
 ..S X=(X+1)_U_I,$P(^DIC(19,DA,"RPC",I,0),U)=Y
"RTN","XPDIA",35,0)
 .S:X $P(^DIC(19,DA,"RPC",0),U,3,4)=$P(X,U,2)_U_+X
"RTN","XPDIA",36,0)
 .S Y0=^DIC(19,DA,0),$P(Y0,U,12)=$$LK("^DIC(9.4)",$P(Y0,U,12)),$P(Y0,U,7)=$$LK("^DIC(9.2)",$P(Y0,U,7)),^DIC(19,DA,0)=Y0
"RTN","XPDIA",37,0)
 .S I=0 F  S I=$O(^TMP($J,"XPD",DA,10,I)) Q:'I  S Y0=$G(^(I,0)),X=$G(^(U)) D:X]"" MENU(DA,X,Y0)
"RTN","XPDIA",38,0)
 .S (I,X)=0 F  S I=$O(^DIC(19,DA,10,I)) Q:'I  S Y0=$G(^(I,U)) D
"RTN","XPDIA",39,0)
 ..I $L(Y0) D  Q:'Y
"RTN","XPDIA",40,0)
 ...S Y=$$LK("^DIC(19)",Y0)
"RTN","XPDIA",41,0)
 ...K ^DIC(19,DA,10,I,U) S:Y $P(^(0),U)=Y
"RTN","XPDIA",42,0)
 ...K:'Y ^DIC(19,DA,10,I)
"RTN","XPDIA",43,0)
 ..S X=(X+1)_U_I
"RTN","XPDIA",44,0)
 .S:X $P(^DIC(19,DA,10,0),U,3,4)=$P(X,U,2)_U_+X
"RTN","XPDIA",45,0)
 .D IX1^DIK
"RTN","XPDIA",46,0)
 K ^TMP($J,"XPD")
"RTN","XPDIA",47,0)
 Q
"RTN","XPDIA",48,0)
OPTDEL ;option delete
"RTN","XPDIA",49,0)
 D DEL("^DIC(19,",DUZ)
"RTN","XPDIA",50,0)
 D OPT^XPDIA2
"RTN","XPDIA",51,0)
 Q
"RTN","XPDIA",52,0)
PROF1 ;protocols file pre
"RTN","XPDIA",53,0)
 K ^TMP($J,"XPD")
"RTN","XPDIA",54,0)
 Q
"RTN","XPDIA",55,0)
PROE1 ;protocols entry pre
"RTN","XPDIA",56,0)
 N %,I
"RTN","XPDIA",57,0)
 S ^TMP($J,"XPD",DA)=""
"RTN","XPDIA",58,0)
 I XPDFL>1 M ^TMP($J,"XPD",DA,10)=^XTMP("XPDI",XPDA,"KRN",101,OLDA,10) K ^XTMP("XPDI",XPDA,"KRN",101,OLDA,10)
"RTN","XPDIA",59,0)
 I XPDFL=2 S XPDQUIT=1 Q
"RTN","XPDIA",60,0)
 I $P(Y,U,3) Q  D:$D(XPDSET)  Q  ;patch 10, don't disable protocols
"RTN","XPDIA",61,0)
 .S $P(^XTMP("XPDI",XPDA,"KRN",101,OLDA,0),U,3)=$P(XPDSET,U,2)
"RTN","XPDIA",62,0)
 .D ADD^XQOO1($P(XPDSET,U),101,DA)
"RTN","XPDIA",63,0)
 S I=^XTMP("XPDI",XPDA,"KRN",101,OLDA,0),%=^ORD(101,DA,0)
"RTN","XPDIA",64,0)
 S $P(I,U,3)=$P(%,U,3)
"RTN","XPDIA",65,0)
 S:$P(I,U,6)="" $P(I,U,6)=$P(%,U,6)
"RTN","XPDIA",66,0)
 S ^XTMP("XPDI",XPDA,"KRN",101,OLDA,0)=I
"RTN","XPDIA",67,0)
 K:$O(^XTMP("XPDI",XPDA,"KRN",101,OLDA,1,0)) ^ORD(101,DA,1)
"RTN","XPDIA",68,0)
 K ^ORD(101,DA,3) S I=0
"RTN","XPDIA",69,0)
 Q:XPDFL=3
"RTN","XPDIA",70,0)
 F  S I=$O(^ORD(101,DA,10,I)) Q:'I  S %=+$G(^(I,0)) K:% ^ORD(101,"AD",%,DA,I)
"RTN","XPDIA",71,0)
 K ^ORD(101,DA,10) Q
"RTN","XPDIA",72,0)
PROF2 ;protocols file post
"RTN","XPDIA",73,0)
 N DA,DIK,I,X,Y,Y0
"RTN","XPDIA",74,0)
 S DA=0,DIK=DIC F  S DA=$O(^TMP($J,"XPD",DA)) Q:'DA  D
"RTN","XPDIA",75,0)
 .S Y0=^ORD(101,DA,0) S:$L($P(Y0,U,12)) $P(Y0,U,12)=$$LK("^DIC(9.4)",$P(Y0,U,12)),^ORD(101,DA,0)=Y0
"RTN","XPDIA",76,0)
 .S Y0=$P($G(^ORD(101,DA,5)),U),Y=$P(Y0,";",2),Y0=$P(Y0,";")
"RTN","XPDIA",77,0)
 .I $L(Y0) S Y0=$O(@("^"_Y_"""B"","""_Y0_""",0)")),$P(^ORD(101,DA,5),U)=$S(Y0:Y0_";"_Y,1:"")
"RTN","XPDIA",78,0)
 .S I=0 F  S I=$O(^TMP($J,"XPD",DA,10,I)) Q:'I  S Y0=$G(^(I,0)),X=$G(^(U)) D:X]"" MENU(DA,X,Y0)
"RTN","XPDIA",79,0)
 .S (I,X)=0 F  S I=$O(^ORD(101,DA,10,I)) Q:'I  S Y0=$G(^(I,U)) D
"RTN","XPDIA",80,0)
 ..I $L(Y0) D  Q:'Y
"RTN","XPDIA",81,0)
 ...S Y=$$LK("^ORD(101)",Y0)
"RTN","XPDIA",82,0)
 ...K ^ORD(101,DA,10,I,U) S:Y $P(^(0),U)=Y
"RTN","XPDIA",83,0)
 ...K:'Y ^ORD(101,DA,10,I)
"RTN","XPDIA",84,0)
 ..S X=X+1_U_I
"RTN","XPDIA",85,0)
 .S:X $P(^ORD(101,DA,10,0),U,3,4)=$P(X,U,2)_U_+X
"RTN","XPDIA",86,0)
 .S (I,X)=0 F  S I=$O(^ORD(101,DA,3,I)) Q:'I  S Y0=$G(^(I,0)) D
"RTN","XPDIA",87,0)
 ..S Y0=$$LK("^DIC(19.1)",Y0)
"RTN","XPDIA",88,0)
 ..S:Y0 ^ORD(101,DA,3,I,0)=Y0,X=X+1_Y0
"RTN","XPDIA",89,0)
 ..K:'Y0 ^ORD(101,DA,3,I)
"RTN","XPDIA",90,0)
 .D IX1^DIK
"RTN","XPDIA",91,0)
 K ^TMP($J,"XPD")
"RTN","XPDIA",92,0)
 Q
"RTN","XPDIA",93,0)
PRODEL ;option delete
"RTN","XPDIA",94,0)
 D DEL("^ORD(101,",DUZ)
"RTN","XPDIA",95,0)
 Q
"RTN","XPDIA",96,0)
LK(GR,X) ;lookup, GR=global root, X=lookup value
"RTN","XPDIA",97,0)
 Q:$G(X)="" ""
"RTN","XPDIA",98,0)
 N I S I=$O(@GR@("B",X,0))
"RTN","XPDIA",99,0)
 I I,$D(@GR@(I,0))#2 Q I
"RTN","XPDIA",100,0)
 Q ""
"RTN","XPDIA",101,0)
 ;
"RTN","XPDIA",102,0)
MENU(DA,X,X0) ;DA=ien of option/protocol, X=Menu item, X0=0 node of menu item
"RTN","XPDIA",103,0)
 N DIC,DLAYGO,DIK,D0,D1,I,Y,Y0
"RTN","XPDIA",104,0)
 S DIC=$S(XPDFIL=19:"^DIC(19,",1:"^ORD(101,")_DA_",10,",DIC(0)="L",DLAYGO=XPDFIL,(D0,DA(1))=DA
"RTN","XPDIA",105,0)
 S:'$D(@(DIC_"0)")) @(DIC_"0)")=U_$P(^DD(XPDFIL,10,0),U,2)
"RTN","XPDIA",106,0)
 S:$L($G(X0)) DIC("DR")="2///"_$P(X0,U,2)_";3///"_$P(X0,U,3)_$S($L($P(X0,U,4)):";4///"_$P(X0,U,4)_";5///"_$P(X0,U,5)_";6///"_$P(X0,U,6),1:"")
"RTN","XPDIA",107,0)
 D ^DIC
"RTN","XPDIA",108,0)
 Q
"RTN","XPDIA",109,0)
DEL(DIK,DUZ) ;delete
"RTN","XPDIA",110,0)
 N DA,XPDI,XPDF
"RTN","XPDIA",111,0)
 S XPDI=0,DUZ(0)="@",XPDF=+$P(DIK,"(",2)
"RTN","XPDIA",112,0)
 F  S XPDI=$O(^TMP($J,"XPDEL",XPDI)) Q:'XPDI  D
"RTN","XPDIA",113,0)
 .K ^TMP("DIFIXPT",$J) S DA=XPDI
"RTN","XPDIA",114,0)
 .D ^DIK ;FIXPT^DIA3("D",XPDF,XPDI)
"RTN","XPDIA",115,0)
 .I $D(^TMP("DIFIXPT",$J))  D WP^XPDUTL("^TMP(""DIFIXPT"",$J)")
"RTN","XPDIA",116,0)
 Q
"RTN","XPDIK")
0^5^B21478463
"RTN","XPDIK",1,0)
XPDIK ;SFISC/RSD - Install Kernel Files & FM Files; 25 Jan 96 09:15
"RTN","XPDIK",2,0)
 ;;8.0;KERNEL;**15**;Jul 10, 1995
"RTN","XPDIK",3,0)
 Q
"RTN","XPDIK",4,0)
KRN ;
"RTN","XPDIK",5,0)
 N DA,DIC,DIOVRD,EPOS,EPRE,FDEL,FPOS,FPRE,OLDA,ORD,X,XGCEDITR,XPDFIL,XPDFILNM,XPDFL,XPDNEW,XREF,Y,%
"RTN","XPDIK",6,0)
 S ORD=0,XPDCP="KRN",(DIOVRD,XGCEDITR)=1
"RTN","XPDIK",7,0)
 F  S ORD=$O(^XTMP("XPDI",XPDA,"ORD",ORD)) Q:'ORD  S XPDFIL=+$O(^(ORD,0)),XREF=$G(^(XPDFIL)),XPDFILNM=$G(^(XPDFIL,0)) D:XPDFIL
"RTN","XPDIK",8,0)
 .F DA=1:1:5 S @$P("FPRE^EPRE^FPOS^EPOS^FDEL",U,DA)=$P(XREF,";",DA+5)
"RTN","XPDIK",9,0)
 .K DIC,^TMP($J,"XPDEL")
"RTN","XPDIK",10,0)
 .S DIC=$G(^DIC(XPDFIL,0,"GL")),XREF=+$P(XREF,";",3)
"RTN","XPDIK",11,0)
 .I $P($G(^DIC(XPDFIL,0)),U)'=XPDFILNM D BMES^XPDUTL(" File "_XPDFIL_" is not "_XPDFILNM_", nothing installed.") Q
"RTN","XPDIK",12,0)
 .I $P(^XPD(9.7,XPDA,"KRN",XPDFIL,0),U,2) D BMES^XPDUTL(" "_XPDFILNM_" already installed.") Q
"RTN","XPDIK",13,0)
 .D BMES^XPDUTL(" Installing "_XPDFILNM),SETTOT^XPDID(XPDFIL)
"RTN","XPDIK",14,0)
 .I '$$ACT(FPRE) S OLDA=0 F  S OLDA=$O(^XTMP("XPDI",XPDA,"KRN",XPDFIL,OLDA)) Q:'OLDA  S XPDFL=+$G(^(OLDA,-1)),OLDA(0)=^(0) D
"RTN","XPDIK",15,0)
 ..I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+1 D:'(XPDIDCNT#XPDIDMOD) UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIK",16,0)
 ..I XPDFIL<.44 S %=$S(XPDFIL'=.403:4,1:8),DIC("S")="I $P(^(0),U,"_%_")="_$P(OLDA(0),U,%)
"RTN","XPDIK",17,0)
 ..I XPDFL=1,XPDFIL<.44 S %=$P(OLDA(0),U),$P(OLDA(0),U)=$P(%,"    FILE #"),DIC("S")="I $P(^(0),U,"_$S(XPDFIL'=.403:4,1:8)_")="_+$P(%,"    FILE #",2)
"RTN","XPDIK",18,0)
 ..S X=$P(OLDA(0),U),Y=$$DIC(XPDFIL,X,$G(DIC("S")),XPDFL) Q:'Y  S DA=+Y,XPDNEW=$P(Y,U,3)
"RTN","XPDIK",19,0)
 ..I XPDFL=1 S ^TMP($J,"XPDEL",DA)="" Q
"RTN","XPDIK",20,0)
 ..Q:$$ACT(EPRE)
"RTN","XPDIK",21,0)
 ..M @(DIC_DA_")")=^XTMP("XPDI",XPDA,"KRN",XPDFIL,OLDA)
"RTN","XPDIK",22,0)
 ..K @(DIC_DA_",-1)") Q:$$ACT(EPOS)
"RTN","XPDIK",23,0)
 ..I XREF N DIK S DIK=DIC D IX1^DIK
"RTN","XPDIK",24,0)
 .S %=$$ACT(FPOS)
"RTN","XPDIK",25,0)
 .I $L(FDEL),$D(^TMP($J,"XPDEL")) S %="^TMP($J,""XPDEL"")" D @FDEL
"RTN","XPDIK",26,0)
 .S %=$$XPCOM(XPDFIL)
"RTN","XPDIK",27,0)
 .K ^TMP($J,"XPDEL")
"RTN","XPDIK",28,0)
 .I $D(XPDIDVT) D UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIK",29,0)
 Q
"RTN","XPDIK",30,0)
FIA ;
"RTN","XPDIK",31,0)
 N XPGR,XPFIL,XPFILO,XPFIL2,Z
"RTN","XPDIK",32,0)
 S XPFIL=0,XPGR=$NA(^XTMP("XPDI",XPDA))
"RTN","XPDIK",33,0)
 F  S XPFIL=$O(^XTMP("XPDI",XPDA,"FIA",XPFIL)) Q:'XPFIL  S XPFILO=^(XPFIL,0,1),XPFIL2=^(2) D
"RTN","XPDIK",34,0)
 .I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+1 D:'(XPDIDCNT#XPDIDMOD) UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIK",35,0)
 .I $P(XPFIL2,U,2)!($P(XPFILO,U)'="y"&'XPFIL2) D  Q
"RTN","XPDIK",36,0)
 ..N XPD
"RTN","XPDIK",37,0)
 ..S XPD(1)=" ",XPD(2)="Data Dictionary for File #"_XPFIL_" not installed"_$S($P(XPFIL2,U,2):", failed DD screen.",1:".")
"RTN","XPDIK",38,0)
 ..D MES^XPDUTL(.XPD) S %=$$XPCOM(XPFIL)
"RTN","XPDIK",39,0)
 .Q:$P(^XPD(9.7,XPDA,4,XPFIL,0),U,2)
"RTN","XPDIK",40,0)
 .I $P(XPFIL2,U,4) D
"RTN","XPDIK",41,0)
 ..N DIE,DR,DA
"RTN","XPDIK",42,0)
 ..S DR=".01////"_^XTMP("XPDI",XPDA,"FIA",XPFIL),DA=XPFIL,DIE=1
"RTN","XPDIK",43,0)
 ..D ^DIE
"RTN","XPDIK",44,0)
 .D DDIN^DIFROMS(XPFIL,"","",XPGR),DIERR("** ERROR IN DATA DICTIONARY FOR FILE # "_XPFIL_" **"):$D(DIERR)
"RTN","XPDIK",45,0)
 .S %=$$XPCOM(XPFIL)
"RTN","XPDIK",46,0)
 I $D(XPDIDVT) D UPDATE^XPDID(XPDIDTOT)
"RTN","XPDIK",47,0)
 Q
"RTN","XPDIK",48,0)
DAT ;
"RTN","XPDIK",49,0)
 N XPGR,XPFIL,XPFILO,XPFIL2,Z
"RTN","XPDIK",50,0)
 S XPFIL=0,XPGR=$NA(^XTMP("XPDI",XPDA))
"RTN","XPDIK",51,0)
 F  S XPFIL=$O(^XTMP("XPDI",XPDA,"FIA",XPFIL)) Q:'XPFIL  S XPFILO=^(XPFIL,0,1),XPFIL2=^(2) D:$P(XPFILO,U,7)="y"
"RTN","XPDIK",52,0)
 .I $P(XPFIL2,U,2)!$P(XPFIL2,U,5)!($P(XPFILO,U,8)="a"&$P(XPFIL2,U,3)) S %=$$XPCOM(XPFIL,1) Q
"RTN","XPDIK",53,0)
 .Q:$P(^XPD(9.7,XPDA,4,XPFIL,0),U,3)!('$D(^XTMP("XPDI",XPDA,"DATA",XPFIL)))
"RTN","XPDIK",54,0)
 .D DATAIN^DIFROMS(XPFIL,"","",XPGR),DIERR("** ERROR IN DATA FOR FILE # "_XPFIL_" **"):$D(DIERR)
"RTN","XPDIK",55,0)
 .S %=$$XPCOM(XPFIL,1)
"RTN","XPDIK",56,0)
 D RP^DIFROMSR("","",XPGR),DIERR("** ERROR IN POINTER RESOLUTION OF DATA **"):$D(DIERR)
"RTN","XPDIK",57,0)
 Q
"RTN","XPDIK",58,0)
DIERR(XPDI) N XPD
"RTN","XPDIK",59,0)
 D MSG^DIALOG("AE",.XPD) Q:'$D(XPD)
"RTN","XPDIK",60,0)
 D BMES^XPDUTL(XPDI),MES^XPDUTL(.XPD)
"RTN","XPDIK",61,0)
 Q
"RTN","XPDIK",62,0)
 ;
"RTN","XPDIK",63,0)
DIC(XPDF,XPDX,XPDS,XPDACT) ;
"RTN","XPDIK",64,0)
 N DIC,DIERR,XPD,XPDN
"RTN","XPDIK",65,0)
 S DIC=$G(^DIC(XPDF,0,"GL"))
"RTN","XPDIK",66,0)
 D FIND^DIC(XPDF,"","","XQf",XPDX,5,"",$G(XPDS),"","XPD")
"RTN","XPDIK",67,0)
 I $G(XPD(0)) D:XPD(0)>1  Q XPD(1)
"RTN","XPDIK",68,0)
 .N %
"RTN","XPDIK",69,0)
 .S %(1)=$P($G(^DIC(XPDF,0)),U)_"  "_XPDX_"  is Duplicated,",%(2)=" only ien #"_XPD(1)_" was updated."
"RTN","XPDIK",70,0)
 .D MES^XPDUTL(.%)
"RTN","XPDIK",71,0)
 I $G(XPDACT),XPDACT<3 D:XPDACT=2 BMES^XPDUTL(" "_$P($G(^DIC(XPDF,0)),U)_" "_XPDX_" Lookup failed, NO Action Taken.") Q 0
"RTN","XPDIK",72,0)
 N DLAYGO,X,Y
"RTN","XPDIK",73,0)
 S X=XPDX,DIC(0)="LX",DLAYGO=XPDF D ^DIC
"RTN","XPDIK",74,0)
 I Y<0 D BMES^XPDUTL(" "_$P($G(^DIC(XPDF,0)),U)_" "_XPDX_" **Couldn't Add to file**") Q 0
"RTN","XPDIK",75,0)
 Q Y
"RTN","XPDIK",76,0)
 ;K XPD S XPD(XPDF,"+1,",.01)=XPDX
"RTN","XPDIK",77,0)
 ;D UPDATE^DIE("","XPD","XPDN")
"RTN","XPDIK",78,0)
 ;I '$G(XPDN(1)) D BMES^XPDUTL(" "_$P($G(^DIC(XPDF,0)),U)_" "_XPDX_" **Couldn't Add to file**") Q 0
"RTN","XPDIK",79,0)
 ;Q XPDN(1)
"RTN","XPDIK",80,0)
 ;
"RTN","XPDIK",81,0)
ACT(%) ;execute action, returns 0 to continue, 1 to quit
"RTN","XPDIK",82,0)
 Q:%="" 0
"RTN","XPDIK",83,0)
 N %1,%2,%3 S %1=$G(DIC),%2=$G(DA),%3=$G(OLDA)
"RTN","XPDIK",84,0)
 N DA,DIC,DIOVRD,OLDA,EPOS,EPRE,FPOS,FPRE,ORD,XREF,XPDQUIT
"RTN","XPDIK",85,0)
 S DIC=%1,DA=%2,OLDA=%3
"RTN","XPDIK",86,0)
 S:%'["^" %="^"_%
"RTN","XPDIK",87,0)
 D @% Q $D(XPDQUIT)
"RTN","XPDIK",88,0)
 Q
"RTN","XPDIK",89,0)
 ;
"RTN","XPDIK",90,0)
XPCOM(XPDF,XPDJ) ;complete checkpoint for file XPDF
"RTN","XPDIK",91,0)
 N XPD,%,Z
"RTN","XPDIK",92,0)
 S %=$$NOW^XLFDT,Z=$S(XPDCP="KRN":9.715,1:9.714),XPD(Z,XPDF_","_XPDA_",",$G(XPDJ)+1)=%
"RTN","XPDIK",93,0)
 S:Z=9.715 XPD(Z,XPDF_","_XPDA_",",2)=ORD
"RTN","XPDIK",94,0)
 D FILE^DIE("","XPD")
"RTN","XPDIK",95,0)
 Q 1
"RTN","XPDIK",96,0)
 ;
"RTN","XPDIK",97,0)
XPCK(XPDI) ;setup check points for file type XPDI
"RTN","XPDIK",98,0)
 N %,XPD,XPDF,XPDJ,XPDK
"RTN","XPDIK",99,0)
 S XPDK=$S(XPDI="KRN":9.715,1:9.714),XPDF=0
"RTN","XPDIK",100,0)
 F %=1:1 S XPDF=$O(^XTMP("XPDI",XPDA,XPDI,XPDF)) Q:'XPDF  S (XPDJ(%),XPD(XPDK,"+"_%_","_XPDA_",",.01))=XPDF
"RTN","XPDIK",101,0)
 D:$D(XPD)>9 UPDATE^DIE("","XPD","XPDJ")
"RTN","XPDIK",102,0)
 Q
"RTN","XPDIL")
0^9^B21060540
"RTN","XPDIL",1,0)
XPDIL ;SFISC/RSD - load Distribution Global; 25 Jan 96 09:16
"RTN","XPDIL",2,0)
 ;;8.0;KERNEL;**15**;Jul 10, 1995
"RTN","XPDIL",3,0)
EN1 N POP,XPDA,XPDST,XPDIT,XPDT,XPDGP,XPDQUIT,XPDSKPE
"RTN","XPDIL",4,0)
 S:'$D(DT) DT=$$DT^XLFDT S:'$D(U) U="^"
"RTN","XPDIL",5,0)
 S XPDST=0
"RTN","XPDIL",6,0)
 D ST I $G(XPDQUIT) D ABRTALL^XPDI(1) G NONE
"RTN","XPDIL",7,0)
 D  I $G(XPDQUIT) D ABRTALL^XPDI(1) G NONE
"RTN","XPDIL",8,0)
 .N DIR,DIRUT
"RTN","XPDIL",9,0)
 .S DIR(0)="Y",DIR("A")="Want to RUN the Environment Check Routine",DIR("B")="YES"
"RTN","XPDIL",10,0)
 .D ^DIR I $D(DIRUT) S XPDQUIT=1 Q
"RTN","XPDIL",11,0)
 .S:'Y XPDSKPE=1
"RTN","XPDIL",12,0)
 S XPDIT=0
"RTN","XPDIL",13,0)
 F  S XPDIT=$O(XPDT(XPDIT)) Q:'XPDIT  S XPDA=+XPDT(XPDIT) D  I '$D(XPDT) Q
"RTN","XPDIL",14,0)
 .D PKG^XPDIL1(XPDA)
"RTN","XPDIL",15,0)
 G:$D(XPDGP) ^XPDIGP
"RTN","XPDIL",16,0)
 I $D(XPDT),$D(^XPD(9.7,+XPDST,0)) W !,"Use ",$P(^(0),U)," to install this Distribution.",!
"RTN","XPDIL",17,0)
 Q
"RTN","XPDIL",18,0)
ST ;global input
"RTN","XPDIL",19,0)
 N DIR,DIRUT,GR,IOP,X,Y,Z,%ZIS
"RTN","XPDIL",20,0)
 G:'$D(^DD(3.5,0)) OPEN
"RTN","XPDIL",21,0)
 I '$D(^%ZIS(1,"B","HFS")) W !!,"You must have a device called 'HFS' in order to load a distribution!",*7 S XPDQUIT=1 Q
"RTN","XPDIL",22,0)
 D HOME^%ZIS
"RTN","XPDIL",23,0)
 S DIR(0)="F^3:45",DIR("A")="Enter a Host File",DIR("?")="Enter a filename and/or path to input Distribution."
"RTN","XPDIL",24,0)
 D ^DIR I $D(DIRUT) S XPDQUIT=1 Q
"RTN","XPDIL",25,0)
 S %ZIS="",%ZIS("HFSNAME")=Y,%ZIS("HFSMODE")="R",IOP="HFS"
"RTN","XPDIL",26,0)
 D ^%ZIS I POP W !,"Couldn't open file or HFS device!!",*7 S XPDQUIT=1 Q
"RTN","XPDIL",27,0)
 D GI,^%ZISC:'$D(XPDGP)!$G(XPDQUIT)
"RTN","XPDIL",28,0)
 Q
"RTN","XPDIL",29,0)
 ;
"RTN","XPDIL",30,0)
OPEN ;use open command
"RTN","XPDIL",31,0)
 N IO,IOPAR,DIR,DIRUT
"RTN","XPDIL",32,0)
 S DIR(0)="F^1:79",DIR("A")="Device Name"
"RTN","XPDIL",33,0)
 S DIR("?",1)="Device Name is either the name of the HFS file or the name of the HFS Device.",DIR("?",2)="i.e.  for MSM enter  51",DIR("?")="      for DSM enter  DISK$USER::[ANONYMOUS]:KRN8.KID"
"RTN","XPDIL",34,0)
 D ^DIR I $D(DIRUT) S POP=1 Q
"RTN","XPDIL",35,0)
 S IO=Y,DIR(0)="FO^1:79",DIR("A")="Device Parameters"
"RTN","XPDIL",36,0)
 S DIR("?",1)="Device Parameter is the Open parameter this M operating system needs to",DIR("?",2)="open the Device Name.",DIR("?",3)="i.e. for MSM enter  (""B:\KRN8.KID"":""R"")",DIR("?")="     for DSM enter  READONLY"
"RTN","XPDIL",37,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) S POP=1 Q
"RTN","XPDIL",38,0)
 S IOPAR=Y
"RTN","XPDIL",39,0)
 X "O IO:"_IOPAR_":10" E  U $P W !,"Couldn't open ",IO S POP=1 Q
"RTN","XPDIL",40,0)
 S IO(0)=$P
"RTN","XPDIL",41,0)
 D GI C IO
"RTN","XPDIL",42,0)
 S IO=IO(0)
"RTN","XPDIL",43,0)
 Q
"RTN","XPDIL",44,0)
 ;
"RTN","XPDIL",45,0)
GI N X,XPDSEQ,Y,Z
"RTN","XPDIL",46,0)
 U IO R X:1,Y:1
"RTN","XPDIL",47,0)
 U IO(0) W !!,X,!,"Comment: ",Y
"RTN","XPDIL",48,0)
 S XPDST("H")=Y,XPDST("H1")=Y_"  ;Created on "_$P(X,"KIDS Distribution saved on ",2)
"RTN","XPDIL",49,0)
 U IO F X=1:1 R Z:1 S Z=$P(Z,"**KIDS**",2,99) Q:Z=""  S X(X)=Z
"RTN","XPDIL",50,0)
 U IO(0) I $G(X(1))="" W !!,"This is not a Distribution HFS File!" S XPDQUIT=1 Q
"RTN","XPDIL",51,0)
 I $P(X(1),":")="GLOBALS" S XPDGP=$P(X(1),U,2,99),X(1)=$P(X(1),U)
"RTN","XPDIL",52,0)
 S XPDIT=0,X(1)=$P(X(1),":",2,99)
"RTN","XPDIL",53,0)
 W !!,"This Distribution contains Transport Globals for the following Package(s):"
"RTN","XPDIL",54,0)
 F X=1:1:X-1 F Z=1:1 S Y=$P(X(X),U,Z) Q:Y=""  D  Q:$G(XPDQUIT)
"RTN","XPDIL",55,0)
 .W !?5,Y S XPDIT=XPDIT+1 I '$$INST^XPDIL1(Y) S XPDQUIT=1 Q
"RTN","XPDIL",56,0)
 Q:$G(XPDQUIT)
"RTN","XPDIL",57,0)
 W !
"RTN","XPDIL",58,0)
 D:$D(XPDGP) DISP^XPDIGP
"RTN","XPDIL",59,0)
 S DIR(0)="Y",DIR("A")="Want to Continue with Load",DIR("B")="YES"
"RTN","XPDIL",60,0)
 D ^DIR I $D(DIRUT)!'Y S XPDQUIT=1 Q
"RTN","XPDIL",61,0)
 W !,"Loading Distribution...",!
"RTN","XPDIL",62,0)
 S ^XTMP("XPDI",0)=$$FMADD^XLFDT(DT,7)_U_DT
"RTN","XPDIL",63,0)
 U IO R X:0,Y:0
"RTN","XPDIL",64,0)
 I X'="**INSTALL NAME**"!'$D(XPDT("NM",Y)) U IO(0) W !!,"ERROR in HFS file format!" S XPDQUIT=1 Q
"RTN","XPDIL",65,0)
 S %=XPDT("NM",Y),GR="^XTMP(""XPDI"","_+XPDT(%)_",",XPDSEQ=1
"RTN","XPDIL",66,0)
 F  R X:0,Y:0 Q:X="**END**"  D  I $D(DIRUT) S XPDQUIT=1 Q
"RTN","XPDIL",67,0)
 .I X="**INSTALL NAME**" D  Q
"RTN","XPDIL",68,0)
 ..S %=+$G(XPDT("NM",Y)) I '% S DIRUT=1 Q
"RTN","XPDIL",69,0)
 ..S GR="^XTMP(""XPDI"","_+XPDT(%)_","
"RTN","XPDIL",70,0)
 .I X="**CONTINUE**" D NEXTD Q
"RTN","XPDIL",71,0)
 .S @(GR_X)=Y
"RTN","XPDIL",72,0)
 U IO(0)
"RTN","XPDIL",73,0)
 Q
"RTN","XPDIL",74,0)
 ;
"RTN","XPDIL",75,0)
NEXTD I ^%ZOSF("OS")'["MSM" U IO(0) W !!,"Error in disk, ABORTING load!!" S XPDQUIT=1 Q
"RTN","XPDIL",76,0)
 N DIR
"RTN","XPDIL",77,0)
 C IO U IO(0)
"RTN","XPDIL",78,0)
 S XPDSEQ=XPDSEQ+1,DIR(0)="E",DIR("A")="Insert the next diskette, #"_XPDSEQ_", and Press the return key",DIR("?")="This distribution is continued on another diskette"
"RTN","XPDIL",79,0)
 D ^DIR Q:$D(DIRUT)
"RTN","XPDIL",80,0)
 W "  OK",!
"RTN","XPDIL",81,0)
 ;MSM specific code to open HFS
"RTN","XPDIL",82,0)
 O @(""""_IO_""":"_IOPAR) U IO
"RTN","XPDIL",83,0)
 R X:0,Y:0
"RTN","XPDIL",84,0)
 G:Y'=XPDST("H") NEXTQ
"RTN","XPDIL",85,0)
 R Y:0,Z:0 G:Y'=("**SEQ**:"_XPDSEQ) NEXTQ
"RTN","XPDIL",86,0)
 Q
"RTN","XPDIL",87,0)
NEXTQ U IO(0) W !!,"This is NOT the correct diskette!!  The comment on this diskette is:",!,X,!!
"RTN","XPDIL",88,0)
 S XPDSEQ=XPDSEQ-1
"RTN","XPDIL",89,0)
 G NEXTD
"RTN","XPDIL",90,0)
 ;
"RTN","XPDIL",91,0)
NONE W !!,"**NOTHING LOADED**",!
"RTN","XPDIL",92,0)
 Q
"RTN","XPDIL1")
0^10^B12738772
"RTN","XPDIL1",1,0)
XPDIL1 ;SFISC/RSD - cont. of load Distribution Global; 25 Jan 96 09:17
"RTN","XPDIL1",2,0)
 ;;8.0;KERNEL;**15,17**;Jul 10, 1995
"RTN","XPDIL1",3,0)
 ;
"RTN","XPDIL1",4,0)
PKG(XPDA) ;check Package file
"RTN","XPDIL1",5,0)
 N D,DIC,XPD,XPDCP,XPDNM,XPDNOQUE,XPDPKG,X,Y,%
"RTN","XPDIL1",6,0)
 S XPDNM=$P(XPDT(XPDIT),U,2)
"RTN","XPDIL1",7,0)
 I $$PKG^XPDUTL(XPDNM)'["KERNEL" D  I $D(XPDQUIT) D ABORT^XPDI(XPDA,1)
"RTN","XPDIL1",8,0)
 .Q:$O(XPDT("NM","KERNEL"))["KERNEL"
"RTN","XPDIL1",9,0)
 .S Y=$G(^XTMP("XPDI",XPDA,"VER"))
"RTN","XPDIL1",10,0)
 .I $$VERSION^XPDUTL("XU")<Y W !!,"BUT I NEED VERSION ",+Y," OF KERNEL!"  S XPDQUIT=1
"RTN","XPDIL1",11,0)
 .I $$VERSION^XPDUTL("VA FILEMAN")<$P(Y,U,2) W !,"BUT I NEED VERSION ",+$P(Y,U,2)," OF VA FILEMAN!" S XPDQUIT=1
"RTN","XPDIL1",12,0)
 S %=$O(^XTMP("XPDI",XPDA,"PKG",0)),XPDPKG(0)=$G(^(+%,0)),XPDPKG=%
"RTN","XPDIL1",13,0)
 I XPDPKG S DIC="^DIC(9.4," D  S XPDPKG=+Y_U_XPDPKG
"RTN","XPDIL1",14,0)
 .S DIC(0)="X",X=$P(XPDPKG(0),U) D ^DIC Q:Y>0
"RTN","XPDIL1",15,0)
 .S X=$P(XPDPKG(0),U,2),D="C" D IX^DIC
"RTN","XPDIL1",16,0)
 I XPDPKG>0 S XPD(9.7,XPDA_",",1)=+XPDPKG D FILE^DIE("","XPD")
"RTN","XPDIL1",17,0)
 I '$G(XPDSKPE),$$ENV(0)=1 Q
"RTN","XPDIL1",18,0)
 Q:$D(XPDGP)
"RTN","XPDIL1",19,0)
 S XPDCP="INI" I '$$NEWCP^XPDUTL("XPD PREINSTALL COMPLETED") D ABORT^XPDI(XPDA,1) Q
"RTN","XPDIL1",20,0)
 S %=$$INRTN("INI")
"RTN","XPDIL1",21,0)
 I $L(%),'$$NEWCP^XPDUTL("XPD PREINSTALL STARTED",%) D ABORT^XPDI(XPDA,1) Q
"RTN","XPDIL1",22,0)
 S XPDCP="INIT" I '$$NEWCP^XPDUTL("XPD POSTINSTALL COMPLETED") D ABORT^XPDI(XPDA,1) Q
"RTN","XPDIL1",23,0)
 S %=$$INRTN("INIT")
"RTN","XPDIL1",24,0)
 I $L(%),'$$NEWCP^XPDUTL("XPD POSTINSTALL STARTED",%) D ABORT^XPDI(XPDA,1) Q
"RTN","XPDIL1",25,0)
 D XPCK^XPDIK("FIA"),XPCK^XPDIK("KRN")
"RTN","XPDIL1",26,0)
 Q
"RTN","XPDIL1",27,0)
INST(XPDNM) ;add to Install file
"RTN","XPDIL1",28,0)
 N DIC,DIR,DIRUT,DLAYGO,X,XPD,XPDA,XPDIE,XPDDIQ,Y
"RTN","XPDIL1",29,0)
 I $D(^XPD(9.7,"B",XPDNM)) S Y=0 D  Q:$D(XPD) XPD
"RTN","XPDIL1",30,0)
 .W !,"The following Entries already exist in the INSTALL file: ",!
"RTN","XPDIL1",31,0)
 .F  S Y=$O(^XPD(9.7,"B",XPDNM,Y)) Q:'Y  D
"RTN","XPDIL1",32,0)
 ..Q:'$D(^XPD(9.7,Y,0))  S %=^(0)
"RTN","XPDIL1",33,0)
 ..W !,$P(%,U),"   "
"RTN","XPDIL1",34,0)
 ..I $P(%,U,9)<3,$D(^XTMP("XPDI",Y)) W "**Transport Global already exists**",*7 S XPD=0 Q
"RTN","XPDIL1",35,0)
 ..W $$EXTERNAL^DILFD(9.7,.02,"",$P(%,U,9)),!,"was loaded on ",$$FMTE^XLFDT($P($G(^XPD(9.7,Y,1)),U))
"RTN","XPDIL1",36,0)
 .Q:$D(XPD)
"RTN","XPDIL1",37,0)
 .S DIR(0)="Y",DIR("A")="OK to continue",DIR("B")="NO"
"RTN","XPDIL1",38,0)
 .D ^DIR I $D(DIRUT)!'Y S XPD=0 Q
"RTN","XPDIL1",39,0)
 S DIC="^XPD(9.7,",DIC(0)="XL",DLAYGO=9.7,X=""""_XPDNM_""""
"RTN","XPDIL1",40,0)
 D ^DIC
"RTN","XPDIL1",41,0)
 I Y<0 W !,"Can't add Build ",XPDNM," to Install File" Q 0
"RTN","XPDIL1",42,0)
 S:'XPDST XPDST=+Y
"RTN","XPDIL1",43,0)
 S XPDA=+Y,XPDT(XPDIT)=XPDA_U_XPDNM,(XPDT("DA",XPDA),XPDT("NM",XPDNM))=XPDIT
"RTN","XPDIL1",44,0)
 S %="XPDIE(9.7,"""_XPDA_","")",@%@(.02)=0,@%@(2)=$$NOW^XLFDT,@%@(3)=XPDST,@%@(4)=XPDIT,@%@(5)="",@%@(6)=XPDST("H1")
"RTN","XPDIL1",45,0)
 D FILE^DIE("","XPDIE")
"RTN","XPDIL1",46,0)
 Q XPDA
"RTN","XPDIL1",47,0)
 ;
"RTN","XPDIL1",48,0)
ENV(XPDENV) ;enviroment check & version check
"RTN","XPDIL1",49,0)
 N %,XPDI,XPDABORT
"RTN","XPDIL1",50,0)
 I XPDPKG>0 S %=$$VER^XPDUTL(XPDNM) I %<$G(^DIC(9.4,+XPDPKG,"VERSION")) W !,"You have a Version greater than mine!",! D ABORT^XPDI(XPDA,1) Q 1
"RTN","XPDIL1",51,0)
 S %=$G(^XTMP("XPDI",XPDA,"PRE")) D:%]""
"RTN","XPDIL1",52,0)
 .W !,"Will first run the Environment Check Routine, ",%,!
"RTN","XPDIL1",53,0)
 .D SAVE^XPDIJ(%),@("^"_%)
"RTN","XPDIL1",54,0)
 I XPDENV S %=$G(^XTMP("XPDI",XPDA,"PATCH")) D:%]""
"RTN","XPDIL1",55,0)
 .N X S X=% X ^%ZOSF("TEST") E  Q
"RTN","XPDIL1",56,0)
 .W !,"Will run Patch Routine, ",X,!
"RTN","XPDIL1",57,0)
 .D @("^"_X)
"RTN","XPDIL1",58,0)
 I $G(XPDABORT) Q:XPDABORT=2&'XPDENV 0 D ABRTALL^XPDI(XPDABORT) Q 1
"RTN","XPDIL1",59,0)
 Q:'$D(XPDQUIT) 0
"RTN","XPDIL1",60,0)
 I $G(XPDQUIT) D:'(XPDQUIT=2&'XPDENV) ABORT^XPDI(XPDA,XPDQUIT)
"RTN","XPDIL1",61,0)
 S XPDI=""
"RTN","XPDIL1",62,0)
 F  S XPDI=$O(XPDQUIT(XPDI)) Q:XPDI=""  D:'(XPDQUIT(XPDI)=2&'XPDENV)
"RTN","XPDIL1",63,0)
 .S %=$G(XPDT("NM",XPDI)) D:% ABORT^XPDI(+XPDT(%),XPDQUIT(XPDI))
"RTN","XPDIL1",64,0)
 S XPDQUIT=$S('$D(XPDT("NM",XPDNM)):1,$G(XPDQUIT):XPDQUIT,1:0)
"RTN","XPDIL1",65,0)
 Q XPDQUIT
"RTN","XPDIL1",66,0)
 ;
"RTN","XPDIL1",67,0)
INRTN(X) N Y
"RTN","XPDIL1",68,0)
 S Y=$G(^XTMP("XPDI",XPDA,X)) Q:Y="" ""
"RTN","XPDIL1",69,0)
 S Y=$S(Y["^":Y,1:"^"_Y)
"RTN","XPDIL1",70,0)
 Q Y
"RTN","XPDIP")
0^11^B19647525
"RTN","XPDIP",1,0)
XPDIP ;SFISC/RSD - Install Package & Routine file; 26 Jan 96 09:01
"RTN","XPDIP",2,0)
 ;;8.0;KERNEL;**15**;Jul 10, 1995
"RTN","XPDIP",3,0)
 Q
"RTN","XPDIP",4,0)
PKG ;
"RTN","XPDIP",5,0)
 N %,OLDA,DA,DIK,XPDFIL,XPDPKG,XPDBLDA,Y
"RTN","XPDIP",6,0)
 I $D(XPDIDVT) S XPDIDTOT=10,XPDIDMOD=1,XPDIDCNT=0 D:XPDIDVT UPDATE^XPDID(0)
"RTN","XPDIP",7,0)
 S XPDPKG=+$P(^XPD(9.7,XPDA,0),U,2),OLDA=+$O(^XTMP("XPDI",XPDA,"PKG",0)),Y=$G(^(OLDA,0))
"RTN","XPDIP",8,0)
 G:'OLDA PKGEND
"RTN","XPDIP",9,0)
 I XPDPKG,$D(^DIC(9.4,XPDPKG,0)) S DA=XPDPKG D PKGV G PKGH
"RTN","XPDIP",10,0)
 D  G:'XPDPKG PKGEND
"RTN","XPDIP",11,0)
 .Q:'$L(Y)
"RTN","XPDIP",12,0)
 .S Y=$P(Y,U),XPDFIL=9.4,Y=$$DIC^XPDIK(9.4,Y) Q:'Y
"RTN","XPDIP",13,0)
 .S (DA,XPDPKG)=+Y
"RTN","XPDIP",14,0)
 .I $P(Y,U,3) D
"RTN","XPDIP",15,0)
 ..M ^DIC(9.4,XPDPKG)=^XTMP("XPDI",XPDA,"PKG",OLDA)
"RTN","XPDIP",16,0)
 ..K ^DIC(9.4,XPDPKG,-1)
"RTN","XPDIP",17,0)
 ..S DIK="^DIC(9.4," D IX1^DIK
"RTN","XPDIP",18,0)
 .I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+2 D UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIP",19,0)
 .D PKGV
"RTN","XPDIP",20,0)
PKGH I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+2 D UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIP",21,0)
 S %=$P(^DIC(9.4,XPDPKG,0),U,4)
"RTN","XPDIP",22,0)
 I $L(%),'% S $P(^DIC(9.4,XPDPKG,0),U,4)=$$LK^XPDIA("^DIC(9.2)",%),DIK="^DIC(9.4," D IX1^DIK
"RTN","XPDIP",23,0)
 D:$D(^ORD(100.99))&$D(^XTMP("XPDI",XPDA,"OER",OLDA))
"RTN","XPDIP",24,0)
 .S DA(1)=1,DIK="^ORD(100.99,1,5," D:$D(^ORD(100.99,1,5,DA)) ^DIK
"RTN","XPDIP",25,0)
 .S:'$D(^ORD(100.99,1,5,0)) ^ORD(100.99,1,5,0)=U_$P(^DD(100.99,5,0),U,2) S $P(^(0),U,3,4)=DA_U_($P(^(0),U,3)+1)
"RTN","XPDIP",26,0)
 .M ^ORD(100.99,1,5,DA)=^XTMP("XPDI",XPDA,"OER",OLDA) S $P(^(DA,0),U)=DA,%=$P(^(0),U,4)
"RTN","XPDIP",27,0)
 .S:$L(%) $P(^ORD(100.99,1,5,DA,0),U,4)=$$LK^XPDIA("^ORD(100.98)",%)
"RTN","XPDIP",28,0)
 .D IX1^DIK
"RTN","XPDIP",29,0)
PKGEND S XPDBLDA=$$BLD(XPDBLD) Q:'XPDBLDA
"RTN","XPDIP",30,0)
 I XPDPKG S %=$G(^XPD(9.6,XPDBLDA,"ABPKG")) D:$P(%,U)="y"
"RTN","XPDIP",31,0)
 .S:$P(%,U,2)="y"&$L($P(%,U,3)) $P(XPDIST,U,2)=$P(%,U,3)
"RTN","XPDIP",32,0)
 .D EN^XQABLOAD(XPDBLDA)
"RTN","XPDIP",33,0)
 Q
"RTN","XPDIP",34,0)
BLD(XPDBLD) ;add Build entry, XPDBLD=Build ien in ^XTMP("XPDI",XPDA,"BLD",
"RTN","XPDIP",35,0)
 N DA,DIK,XPDFIL,Y
"RTN","XPDIP",36,0)
 I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+4 D UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIP",37,0)
 S XPDFIL=9.6,Y=$$DIC^XPDIK(9.6,XPDNM) Q:'Y ""
"RTN","XPDIP",38,0)
 S DA=+Y
"RTN","XPDIP",39,0)
 K:'$P(Y,U,3) ^XPD(9.6,DA),^XPD(9.6,"C",XPDPKG,DA)
"RTN","XPDIP",40,0)
 M ^XPD(9.6,DA)=^XTMP("XPDI",XPDA,"BLD",XPDBLD)
"RTN","XPDIP",41,0)
 S $P(^XPD(9.6,DA,0),U,2)=$S(XPDPKG:XPDPKG,1:"") S:$P(^(0),U,5)="y" XPDIST=1
"RTN","XPDIP",42,0)
 S DIK="^XPD(9.6," F Y=.01,1 S DIK(1)=Y D EN1^DIK
"RTN","XPDIP",43,0)
 I $D(XPDIDVT) D UPDATE^XPDID(XPDIDTOT)
"RTN","XPDIP",44,0)
 Q DA
"RTN","XPDIP",45,0)
 ;
"RTN","XPDIP",46,0)
PKGV N %
"RTN","XPDIP",47,0)
 I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+2 D UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIP",48,0)
 S %=$G(^XTMP("XPDI",XPDA,"PKG",OLDA,-1))
"RTN","XPDIP",49,0)
 I XPDNM'["*" D  Q
"RTN","XPDIP",50,0)
 .S %=+% Q:'$D(^XTMP("XPDI",XPDA,"PKG",OLDA,22,%,0))  S %=^(0) S:$D(^(1)) %(1)=$NA(^(1))
"RTN","XPDIP",51,0)
 .S $P(%,U,3,4)=DT_U_DUZ,%=$$PKGVER(DA,.%)
"RTN","XPDIP",52,0)
 Q:'$D(^XTMP("XPDI",XPDA,"PKG",OLDA,22,+%,"PAH",+$P(%,U,2),0))  S %=^(0) S:$D(^(1)) %(1)=$NA(^(1))
"RTN","XPDIP",53,0)
 S $P(%,U,2,3)=DT_U_DUZ,%=$$PKGPAT(DA,$$VER^XPDUTL(XPDNM),.%)
"RTN","XPDIP",54,0)
 Q
"RTN","XPDIP",55,0)
 ;
"RTN","XPDIP",56,0)
PKGVER(XPDA,XPDI) ;update version in package file, XPDA=ien, return ien
"RTN","XPDIP",57,0)
 ;XPDI=version^date distr.^date installed^install by
"RTN","XPDIP",58,0)
 ;XPDI(1)=root of description field
"RTN","XPDIP",59,0)
 N I,X,XPD,XPDJ
"RTN","XPDIP",60,0)
 S XPD(9.4,XPDA_",",13)=$P(XPDI,U),X="XPD(9.49,""?+1,"_XPDA_","")",@X@(.01)=$P(XPDI,U)
"RTN","XPDIP",61,0)
 F I=1:1:3 S:$P(XPDI,U,I+1)]"" @X@(I)=$P(XPDI,U,I+1)
"RTN","XPDIP",62,0)
 S:$D(XPDI(1)) @X@(41)=XPDI(1)
"RTN","XPDIP",63,0)
 D UPDATE^DIE("","XPD","XPDJ")
"RTN","XPDIP",64,0)
 Q $G(XPDJ(1))
"RTN","XPDIP",65,0)
 ;
"RTN","XPDIP",66,0)
PKGPAT(XPDA,XPDV,XPDI) ;update patch history, XPDA=ien, XPDV=version
"RTN","XPDIP",67,0)
 N I,X,XPD,XPDJ
"RTN","XPDIP",68,0)
 S XPDV=$$FIND1^DIC(9.49,","_XPDA_",","X",XPDV) Q:'XPDV 0
"RTN","XPDIP",69,0)
 S X="XPD(9.4901,""?+1,"_XPDV_","_XPDA_","")",@X@(.01)=$P(XPDI,U)
"RTN","XPDIP",70,0)
 F I=.01:.01:.03 S:$P(XPDI,U,I*100)]"" @X@(I)=$P(XPDI,U,I*100)
"RTN","XPDIP",71,0)
 S:$D(XPDI(1)) @X@(1)=XPDI(1)
"RTN","XPDIP",72,0)
 D UPDATE^DIE("","XPD","XPDJ")
"RTN","XPDIP",73,0)
 Q XPDV_U_$G(XPDJ(1))
"RTN","XPDIP",74,0)
 ;
"RTN","XPDIP",75,0)
RTN ;move rtns to install file
"RTN","XPDIP",76,0)
 N XPD,XPDC,XPDCR,XPDI,XPDJ,XPDK,XPDL,XPDM,XPDR,XPDRH,X
"RTN","XPDIP",77,0)
 K ^XPD(9.7,XPDA,"RTN"),^TMP($J)
"RTN","XPDIP",78,0)
 S (XPDC,XPDCR,XPDRH)=0,XPDJ=""
"RTN","XPDIP",79,0)
 F  S XPDJ=$O(^XTMP("XPDI",XPDA,"RTN",XPDJ)) Q:XPDJ=""  S XPDM=^(XPDJ) D:'XPDM
"RTN","XPDIP",80,0)
 .S XPDC=XPDC+1,^TMP($J,"XPDL",XPDC)=XPDC,^TMP($J,"XPD",9.704,"+"_XPDC_","_XPDA_",",.01)=XPDJ
"RTN","XPDIP",81,0)
 .S:'$D(^DIC(9.8,"B",XPDJ)) XPDCR=XPDCR+1,^TMP($J,"XPDR",9.8,"?+"_XPDCR_",",.01)=XPDJ,^(1)="R"
"RTN","XPDIP",82,0)
 I $D(XPDIDVT) S XPDIDCNT=XPDIDTOT*.4 D UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIP",83,0)
 F XPDK="DIKZ","DIEZ","DIPZ" D
"RTN","XPDIP",84,0)
 .S XPDI=0
"RTN","XPDIP",85,0)
 .F  S XPDI=$O(^XTMP("XPDI",XPDA,XPDK,XPDI)),XPDJ="" Q:'XPDI  D
"RTN","XPDIP",86,0)
 ..I 'XPDRH D BMES^XPDUTL(" The following Routines were created during this install:") S XPDRH=1
"RTN","XPDIP",87,0)
 ..F  S XPDJ=$O(^XTMP("XPDI",XPDA,XPDK,XPDI,XPDJ)) Q:XPDJ=""  D:'$D(^XTMP("XPDI",XPDA,"RTN",XPDJ))
"RTN","XPDIP",88,0)
 ...S XPDC=XPDC+1,^TMP($J,"XPDL",XPDC)=XPDC,^TMP($J,"XPD",9.704,"+"_XPDC_","_XPDA_",",.01)=XPDJ
"RTN","XPDIP",89,0)
 ...D MES^XPDUTL("     "_XPDJ)
"RTN","XPDIP",90,0)
 I $D(^TMP($J,"XPD"))>9 D
"RTN","XPDIP",91,0)
 .D UPDATE^DIE("","^TMP($J,""XPD"")","^TMP($J,""XPDL"")")
"RTN","XPDIP",92,0)
 .I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+(XPDIDTOT*.40) D UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIP",93,0)
 D:$D(^TMP($J,"XPDR"))>9 UPDATE^DIE("","^TMP($J,""XPDR"")")
"RTN","XPDIP",94,0)
 I $D(XPDIDVT) D UPDATE^XPDID(XPDIDTOT)
"RTN","XPDIP",95,0)
 Q
"RTN","XPDIU")
0^12^B8445750
"RTN","XPDIU",1,0)
XPDIU ;SFISC/RSD - UNload/Convert Distribution Global; 26 Jan 96 09:01
"RTN","XPDIU",2,0)
 ;;8.0;KERNEL;**15**;Jul 10, 1995
"RTN","XPDIU",3,0)
EN1 ;unload
"RTN","XPDIU",4,0)
 N %,DA,DIK,DIR,DIRUT,X,XPD,XPDT,XPDQ,XPDQUIT,Y
"RTN","XPDIU",5,0)
 S DA=0 F  S DA=$O(^XTMP("XPDI",DA)) Q:'DA  I '$D(^XPD(9.7,DA)) K ^XTMP("XPDI",DA)
"RTN","XPDIU",6,0)
 S DA=$$LOOK^XPDI("I $P(^(0),U,9)<2") Q:'DA
"RTN","XPDIU",7,0)
 S XPDQ=^XPD(9.7,DA,0),DIR(0)="Y",DIR("A")="Want to continue with the Unload of this Distribution",DIR("B")="NO"
"RTN","XPDIU",8,0)
 S DIR("?")="YES will delete the Transport Global and the entry in the Install file for these Packages."
"RTN","XPDIU",9,0)
 I $P(XPDQ,U,9)=1,$P(XPDQ,U,6) W !,"This Distribution is Queued for Install with task number ",$P(XPDQ,U,6),!,"Don't forget to delete Taskman Task."
"RTN","XPDIU",10,0)
 D ^DIR Q:'Y!$D(DIRUT)
"RTN","XPDIU",11,0)
 S XPD=0,DIK="^XPD(9.7,"
"RTN","XPDIU",12,0)
 F  S XPD=$O(XPDT(XPD)) Q:'XPD  S DA=+XPDT(XPD) D ^DIK K ^XTMP("XPDI",DA)
"RTN","XPDIU",13,0)
 I $D(^XTMP("XQOO",$P(XPDQ,U))) K ^($P(XPDQ,U))
"RTN","XPDIU",14,0)
 Q
"RTN","XPDIU",15,0)
EN2 ;convert
"RTN","XPDIU",16,0)
 N %,DA,DIK,DIR,DIRUT,X,XPD,XPDBLD,XPDI,XPDNM,XPDPKG,XPDT,XPDQUIT,Y
"RTN","XPDIU",17,0)
 S XPDI=$$LOOK^XPDI("I '$P(^(0),U,9),$D(^XPD(9.7,""ASP"",Y,1,Y))") Q:'XPDI
"RTN","XPDIU",18,0)
 K XPDT("DA"),XPDT("NM")
"RTN","XPDIU",19,0)
 S XPDT=0 F  S XPDT=$O(XPDT(XPDT)) Q:'XPDT  D
"RTN","XPDIU",20,0)
 .S Y=+XPDT(XPDT) Q:$D(^XTMP("XPDI",Y))
"RTN","XPDIU",21,0)
 .W !,$P(XPDT(XPDT),U,2),"   ** Transport Global doesn't exist **",$C(7)
"RTN","XPDIU",22,0)
 .K XPDT(XPDT) S XPDQUIT=1
"RTN","XPDIU",23,0)
 Q:$D(XPDT)'>9!$D(XPDQUIT)
"RTN","XPDIU",24,0)
 S DIR(0)="Y",DIR("A")="Want to continue with the Conversion of the Package(s)",DIR("B")="NO"
"RTN","XPDIU",25,0)
 S DIR("?",1)="YES will convert the Packages to globals that can be transported.",DIR("?")="An entry will be added to the Build file and the entry in the Install file will be deleted."
"RTN","XPDIU",26,0)
 D ^DIR Q:'Y!$D(DIRUT)
"RTN","XPDIU",27,0)
 S (XPDT,XPDPKG)=0,DIK="^XPD(9.7,"
"RTN","XPDIU",28,0)
 F  S XPDT=$O(XPDT(XPDT)) Q:'XPDT  D
"RTN","XPDIU",29,0)
 .S XPDA=+XPDT(XPDT),XPDNM=$P(XPDT(XPDT),U,2),XPDBLD=$O(^XTMP("XPDI",XPDA,"BLD",0)),DA=""
"RTN","XPDIU",30,0)
 .I '$D(XPDQUIT) S DA=$$BLD^XPDIP(XPDBLD) D:DA
"RTN","XPDIU",31,0)
 ..M ^XPD(9.6,DA)=^XTMP("XPDI",XPDA,"BLD",XPDBLD),^XTMP("XPDT",DA)=^XTMP("XPDI",XPDA)
"RTN","XPDIU",32,0)
 .I 'DA W !,XPDNM,"   ** Couldn't add to Build file **" S XPDQUIT=1
"RTN","XPDIU",33,0)
 .S DA=XPDA D ^DIK
"RTN","XPDIU",34,0)
 .K ^XTMP("XPDI",XPDA)
"RTN","XPDIU",35,0)
 W !,"  ** DONE **",!
"RTN","XPDIU",36,0)
 Q
"RTN","XPDIU",37,0)
DEL(Y) ;delete access to file 9.7, 0-can't delete, 1-can
"RTN","XPDIU",38,0)
 N %
"RTN","XPDIU",39,0)
 S %=$P(^XPD(9.7,Y,0),U,9)
"RTN","XPDIU",40,0)
 Q $S(%=3:1,%=2:0,$D(^XPD(9.7,"ASP",Y,1,Y)):1,1:0)
"RTN","XPDTA")
0^2^B10434478
"RTN","XPDTA",1,0)
XPDTA ;SFISC/RSD - Build Actions for Kernel Files ; 25 Jan 96 09:14
"RTN","XPDTA",2,0)
 ;;8.0;KERNEL;**15**;Jul 10, 1995
"RTN","XPDTA",3,0)
 Q
"RTN","XPDTA",4,0)
OPT ;options
"RTN","XPDTA",5,0)
 S %=^XTMP("XPDT",XPDA,"KRN",19,DA,0),$P(%,U,12)=$$PT("^DIC(9.4)",$P(%,U,12)),$P(%,U,5)=""
"RTN","XPDTA",6,0)
 S $P(%,U,7)=$$PT("^DIC(9.2)",$P(%,U,7)),^XTMP("XPDT",XPDA,"KRN",19,DA,0)=% K ^(3.96),^(200)
"RTN","XPDTA",7,0)
 I $D(^XTMP("XPDT",XPDA,"KRN",19,DA,220)) S %=^(220),$P(%,U)=$$PT("^XMB(3.6)",+%),$P(%,U,3)=$$PT("^XMB(3.8)",$P(%,U,3)),^XTMP("XPDT",XPDA,"KRN",19,DA,220)=%
"RTN","XPDTA",8,0)
 I $D(^XTMP("XPDT",XPDA,"KRN",19,DA,24)) S %=^(24),$P(%,U)=$$PT("^XTV(8995)",+%),^XTMP("XPDT",XPDA,"KRN",19,DA,24)=%
"RTN","XPDTA",9,0)
 I $D(^XTMP("XPDT",XPDA,"KRN",19,DA,"RPC")) K:$P(^(0),U,4)'="B" ^("RPC") D
"RTN","XPDTA",10,0)
 .K ^XTMP("XPDT",XPDA,"KRN",19,DA,"RPC","B")
"RTN","XPDTA",11,0)
 .S %=0 F  S %=$O(^XTMP("XPDT",XPDA,"KRN",19,DA,"RPC",%)) Q:'%  S %1=$G(^(%,0)) D
"RTN","XPDTA",12,0)
 ..S %2=$$PT("^XWB(8994)",+%1)
"RTN","XPDTA",13,0)
 ..I %2="" K ^XTMP("XPDT",XPDA,"KRN",19,DA,"RPC",%,0) Q
"RTN","XPDTA",14,0)
 ..S $P(^XTMP("XPDT",XPDA,"KRN",19,DA,"RPC",%,0),U)=%2
"RTN","XPDTA",15,0)
 .Q
"RTN","XPDTA",16,0)
 I "LMOQXZ"'[$P(^XTMP("XPDT",XPDA,"KRN",19,DA,0),U,4) K ^(10) Q
"RTN","XPDTA",17,0)
 K ^XTMP("XPDT",XPDA,"KRN",19,DA,10,"B"),^("C")
"RTN","XPDTA",18,0)
 S %=0 F  S %=$O(^XTMP("XPDT",XPDA,"KRN",19,DA,10,%)) Q:'%  S %1=$G(^(%,0)) D
"RTN","XPDTA",19,0)
 .S %2=$$PT("^DIC(19)",+%1)
"RTN","XPDTA",20,0)
 .I $L(%2),$D(^XPD(9.6,XPDA,"KRN",19,"NM","B",%2)) S ^XTMP("XPDT",XPDA,"KRN",19,DA,10,%,U)=%2 Q
"RTN","XPDTA",21,0)
 .K ^XTMP("XPDT",XPDA,"KRN",19,DA,10,%)
"RTN","XPDTA",22,0)
 Q
"RTN","XPDTA",23,0)
PRO ;protocols
"RTN","XPDTA",24,0)
 S %=^XTMP("XPDT",XPDA,"KRN",101,DA,0),$P(%,U,12)=$$PT("^DIC(9.4)",$P(%,U,12)),$P(%,U,5)=""
"RTN","XPDTA",25,0)
 S ^XTMP("XPDT",XPDA,"KRN",101,DA,0)=% I $D(^(10,0)) K ^("B"),^("C")
"RTN","XPDTA",26,0)
 S %=$P($G(^XTMP("XPDT",XPDA,"KRN",101,DA,5)),U),%1=$P(%,";",2)
"RTN","XPDTA",27,0)
 I %,$D(@("^"_%1_+%_",0)")) S $P(^XTMP("XPDT",XPDA,"KRN",101,DA,5),U)=$P(^(0),U)_";"_%1
"RTN","XPDTA",28,0)
 S %=0 F  S %=$O(^XTMP("XPDT",XPDA,"KRN",101,DA,10,%)) Q:'%  S %1=$G(^(%,0)) D
"RTN","XPDTA",29,0)
 .S %2=$$PT("^ORD(101)",+%1)
"RTN","XPDTA",30,0)
 .I $L(%2),$D(^XPD(9.6,XPDA,"KRN",101,"NM","B",%2)) S ^XTMP("XPDT",XPDA,"KRN",101,DA,10,%,U)=%2,$P(^XTMP("XPDT",XPDA,"KRN",101,DA,10,%,0),U,4)=$$PT("^ORD(101)",$P(%1,U,4)) Q
"RTN","XPDTA",31,0)
 .K ^XTMP("XPDT",XPDA,"KRN",101,DA,10,%)
"RTN","XPDTA",32,0)
 Q:'$D(^XTMP("XPDT",XPDA,"KRN",101,DA,3,0))  K ^("B")
"RTN","XPDTA",33,0)
 S %=0 F  S %=$O(^XTMP("XPDT",XPDA,"KRN",101,DA,3,%)) Q:'%  S %1=$G(^(%,0)) D
"RTN","XPDTA",34,0)
 .S %2=$$PT("^DIC(19.1)",+%1)
"RTN","XPDTA",35,0)
 .I $L(%2) S ^XTMP("XPDT",XPDA,"KRN",101,DA,3,%,0)=%2 Q
"RTN","XPDTA",36,0)
 .K ^XTMP("XPDT",XPDA,"KRN",101,DA,3,%)
"RTN","XPDTA",37,0)
 Q
"RTN","XPDTA",38,0)
RTNE ;routine entry build action
"RTN","XPDTA",39,0)
 N %,X,XPD
"RTN","XPDTA",40,0)
 S X=$P(^XTMP("XPDT",XPDA,"KRN",9.8,DA,0),U),XPD=^(-1)
"RTN","XPDTA",41,0)
 Q:X=""  S %=$$LOAD(X,XPD),$P(^XPD(9.6,XPDA,"KRN",9.8,"NM",+$P(XPD,U,2),0),U,4)=%
"RTN","XPDTA",42,0)
 K ^XTMP("XPDT",XPDA,"KRN",9.8,DA)
"RTN","XPDTA",43,0)
 Q
"RTN","XPDTA",44,0)
RTNF ;routine file build action
"RTN","XPDTA",45,0)
 N X,Y,% S Y=0
"RTN","XPDTA",46,0)
 F  S Y=$O(^XTMP("XPDT",XPDA,"KRN",9.8,Y)) Q:'Y  S %=^(Y,-1),X=^(0) D
"RTN","XPDTA",47,0)
 .I +%=1 S ^XTMP("XPDT",XPDA,"RTN",X)=%,^("RTN")=$G(^XTMP("XPDT",XPDA,"RTN"))+1
"RTN","XPDTA",48,0)
 K ^XTMP("XPDT",XPDA,"KRN",9.8)
"RTN","XPDTA",49,0)
 Q
"RTN","XPDTA",50,0)
PT(GR,DA) ;GR=file global ref, DA=ien, return .01 value
"RTN","XPDTA",51,0)
 I $D(@GR@(+DA,0))#2 Q $P(^(0),U)
"RTN","XPDTA",52,0)
 Q ""
"RTN","XPDTA",53,0)
 ;
"RTN","XPDTA",54,0)
LOAD(X,XPD) ;load routine X, XPD=action^ien in Build file
"RTN","XPDTA",55,0)
 Q:$D(^XTMP("XPDT",XPDA,"RTN",X)) $P(^(X),U,3)
"RTN","XPDTA",56,0)
 N DIF,XCNP,%N
"RTN","XPDTA",57,0)
 S DIF="^XTMP(""XPDT"",XPDA,""RTN"",X,",XCNP=0
"RTN","XPDTA",58,0)
 X ^%ZOSF("LOAD")
"RTN","XPDTA",59,0)
 S %N=$$SUMB^XPDRSUM($NA(^XTMP("XPDT",XPDA,"RTN",X))),^XTMP("XPDT",XPDA,"RTN",X)=XPD_U_"B"_%N
"RTN","XPDTA",60,0)
 S ^("RTN")=$G(^XTMP("XPDT",XPDA,"RTN"))+1
"RTN","XPDTA",61,0)
 Q "B"_%N
"RTN","XPDTC")
0^4^B21910767
"RTN","XPDTC",1,0)
XPDTC ;SFISC/RSD - Transport calls ; 25 Jan 96 09:15
"RTN","XPDTC",2,0)
 ;;8.0;KERNEL;**10,15**;Jul 10, 1995
"RTN","XPDTC",3,0)
 Q
"RTN","XPDTC",4,0)
 ;^XTMP("XPDT",XPDA,data type,file #,
"RTN","XPDTC",5,0)
 ;XPDA=ien of File 9.6, XPDNM=.01 field
"RTN","XPDTC",6,0)
DD ;build DD
"RTN","XPDTC",7,0)
 N FILE,FGR,FNAM,Z2,Z3,Z4
"RTN","XPDTC",8,0)
 S FILE=0,FGR="^XTMP(""XPDT"",XPDA)",FNAM=$NA(^XPD(9.6,XPDA,4,"APDD"))
"RTN","XPDTC",9,0)
 F  S FILE=$O(^XPD(9.6,XPDA,4,FILE)) Q:'FILE  D
"RTN","XPDTC",10,0)
 .S Z2=$G(^XPD(9.6,XPDA,4,FILE,222)),Z3=$G(^(223)),Z4=$G(^(224))
"RTN","XPDTC",11,0)
 .Q:$$DATA^XPDV(FILE,Z2)
"RTN","XPDTC",12,0)
 .D FIA^DIFROMSU(FILE,"",FNAM,FGR,Z2,Z3,Z4,XPDVER),DIERR:$D(DIERR)
"RTN","XPDTC",13,0)
 Q:'$D(^XTMP("XPDT",XPDA,"FIA"))
"RTN","XPDTC",14,0)
 D DDOUT^DIFROMS("","","",FGR),DIERR:$D(DIERR),DATAOUT^DIFROMS("","","",FGR),DIERR:$D(DIERR)
"RTN","XPDTC",15,0)
 Q
"RTN","XPDTC",16,0)
DIERR ;record error
"RTN","XPDTC",17,0)
 D MSG^DIALOG("EW",.XPD) S XPDERR=1
"RTN","XPDTC",18,0)
 Q
"RTN","XPDTC",19,0)
KRN ;build Kernel Files
"RTN","XPDTC",20,0)
 N %,%1,%2,DA,EACT,FACT,FGR,XPDFILE,XPDOLDA,XPDI,Y0
"RTN","XPDTC",21,0)
 F XPDFILE=1:1 S Y0=$P($T(FILES+XPDFILE^XPDE),";;",2,99) Q:Y0=""  S XPDI(+Y0)=Y0
"RTN","XPDTC",22,0)
 S XPDFILE=0
"RTN","XPDTC",23,0)
 F  S XPDFILE=$O(^XPD(9.6,XPDA,"KRN",XPDFILE)) Q:'XPDFILE  S XPDI=$G(XPDI(XPDFILE)),FACT=$P(XPDI,";",4),EACT=$P(XPDI,";",5) D  Q:$D(XPDERR)  D:FACT]"" ACT(FACT)
"RTN","XPDTC",24,0)
 .S XPDOLDA=0,FGR=$$FILE^XPDV(XPDFILE) I FGR="" S XPDERR=1 Q
"RTN","XPDTC",25,0)
 .K ^TMP($J,"XPD")
"RTN","XPDTC",26,0)
 .F  S XPDOLDA=$O(^XPD(9.6,XPDA,"KRN",XPDFILE,"NM",XPDOLDA)) Q:'XPDOLDA  S Y0=$G(^(XPDOLDA,0)) D
"RTN","XPDTC",27,0)
 ..I $P(Y0,U,3)=1 S DA=$O(@FGR@(" "),-1)+1 F DA=DA:1 Q:'$D(^XTMP("XPDT",XPDA,"KRN",XPDFILE,DA))
"RTN","XPDTC",28,0)
 ..E  S:$P(Y0,U,2) $P(Y0,U)=$P(Y0,"    FILE #") S DA=$$ENTRY^XPDV(Y0)
"RTN","XPDTC",29,0)
 ..I 'DA S XPDERR=1 Q
"RTN","XPDTC",30,0)
 ..S ^XTMP("XPDT",XPDA,"KRN",XPDFILE,DA,-1)=+$P(Y0,U,3)_"^"_XPDOLDA
"RTN","XPDTC",31,0)
 ..I $P(Y0,U,3)=1 S ^XTMP("XPDT",XPDA,"KRN",XPDFILE,DA,0)=$P(Y0,U),$P(^XPD(9.6,XPDA,"KRN",XPDFILE,"NM",XPDOLDA),U,4)="" Q
"RTN","XPDTC",32,0)
 ..M ^XTMP("XPDT",XPDA,"KRN",XPDFILE,DA)=@FGR@(DA)
"RTN","XPDTC",33,0)
 ..D:EACT]"" ACT(EACT)
"RTN","XPDTC",34,0)
 .Q:'$O(^XTMP("XPDT",XPDA,"KRN",XPDFILE,0))
"RTN","XPDTC",35,0)
 .S %=$P(^DIC(XPDFILE,0),U),^XTMP("XPDT",XPDA,"ORD",+$P(XPDI,";",2),XPDFILE)=XPDI,^(XPDFILE,0)=%
"RTN","XPDTC",36,0)
 .Q
"RTN","XPDTC",37,0)
 Q
"RTN","XPDTC",38,0)
QUES ;build from Install Questions multiple
"RTN","XPDTC",39,0)
 N I,J,X,%
"RTN","XPDTC",40,0)
 S X=""
"RTN","XPDTC",41,0)
 F  S X=$O(^XPD(9.6,XPDA,"QUES","B",X)) Q:X=""  S I=$$QUES^XPDV(X) S:'I XPDERR=1 D:I
"RTN","XPDTC",42,0)
 .S J=0 F  S J=$O(^XPD(9.6,XPDA,"QUES",I,J)) Q:J=""  D
"RTN","XPDTC",43,0)
 ..I $L(J)=1!(J="QQ") S ^XTMP("XPDT",XPDA,"QUES",X,$TR(J,"1ABQ","0AB?"))=^(J) Q  ;^(J) ref to ^XPD(9.6,XPDA,"QUES",I,J)
"RTN","XPDTC",44,0)
 ..F %=1:1 Q:'$D(^XPD(9.6,XPDA,"QUES",I,J,%,0))  S ^XTMP("XPDT",XPDA,"QUES",X,$TR(J,"AQ10","A?"),%)=^(0)
"RTN","XPDTC",45,0)
 F I=1:2 S X=$P($T(QUESTION+I),";;",2) Q:X=""  S Y=$P($T(QUESTION+I+1),";;",2) D
"RTN","XPDTC",46,0)
 .S ^XTMP("XPDT",XPDA,"QUES",$P(X,";"),0)=$P(X,";",2),^("A")=$P(X,";",3),^("B")=$P(X,";",4),^("??")=$P(X,";",5) S:Y]"" ^("M")=Y
"RTN","XPDTC",47,0)
 Q
"RTN","XPDTC",48,0)
INT ;build pre,post, & enviroment init routines
"RTN","XPDTC",49,0)
 N %,I,X
"RTN","XPDTC",50,0)
 F I="PRE","INI","INIT" I $G(^XPD(9.6,XPDA,I))]"" S X=^(I) D
"RTN","XPDTC",51,0)
 .S ^XTMP("XPDT",XPDA,I)=X,X=$P(X,U,$L(X,U)) Q:$D(^("RTN",X))
"RTN","XPDTC",52,0)
 .I '$$RTN^XPDV(X) W !,"Routine ",X," **NOT FOUND**" S XPDERR=1 Q
"RTN","XPDTC",53,0)
 .S %=$$LOAD^XPDTA(X,"0^")
"RTN","XPDTC",54,0)
 Q
"RTN","XPDTC",55,0)
BLD ;build Build file, Package file and Order Parameter file
"RTN","XPDTC",56,0)
 N %,DIC,X,XPD,XPDI,XPDV,Y
"RTN","XPDTC",57,0)
 S ^XTMP("XPDT",XPDA,"VER")=$$VERSION^XPDUTL("XU")_U_$$VERSION^XPDUTL("VA FILEMAN")
"RTN","XPDTC",58,0)
 M ^XTMP("XPDT",XPDA,"BLD",XPDA)=^XPD(9.6,XPDA)
"RTN","XPDTC",59,0)
 S XPDI=+$P(^XPD(9.6,XPDA,0),U,2) Q:'XPDI
"RTN","XPDTC",60,0)
 S $P(^XTMP("XPDT",XPDA,"BLD",XPDA,0),U,2)=$$PT^XPDTA("^DIC(9.4)",XPDI)
"RTN","XPDTC",61,0)
 Q:'$D(^DIC(9.4,XPDI))
"RTN","XPDTC",62,0)
 S XPD=$$VER^XPDUTL(XPDNM)_U_$P(^XTMP("XPDT",XPDA,"BLD",XPDA,0),U,4)
"RTN","XPDTC",63,0)
 S:$D(^XTMP("XPDT",XPDA,"BLD",XPDA,1)) XPD(1)=$NA(^(1))
"RTN","XPDTC",64,0)
 S ^XTMP("XPDT",XPDA,"PKG",XPDI,0)=^DIC(9.4,XPDI,0),^XTMP("XPDT",XPDA,"PKG",XPDI,22,0)=$P(^DIC(9.4,XPDI,22,0),"^",1,2)_"^1^1"
"RTN","XPDTC",65,0)
 I XPDNM'["*" D
"RTN","XPDTC",66,0)
 .S XPDV=$$PKGVER^XPDIP(XPDI,.XPD)
"RTN","XPDTC",67,0)
 .F %=1,5,7,20,"DEV","VERSION" M ^XTMP("XPDT",XPDA,"PKG",XPDI,%)=^DIC(9.4,XPDI,%)
"RTN","XPDTC",68,0)
 .M ^XTMP("XPDT",XPDA,"PKG",XPDI,22,1)=^DIC(9.4,XPDI,22,XPDV)
"RTN","XPDTC",69,0)
 E  D
"RTN","XPDTC",70,0)
 .S %=$P(XPD,U),$P(XPD,U)=$P(XPDNM,"*",3),XPDV=$$PKGPAT^XPDIP(XPDI,%,.XPD)
"RTN","XPDTC",71,0)
 .S ^XTMP("XPDT",XPDA,"PKG",XPDI,22,1,0)=^DIC(9.4,XPDI,22,+XPDV,0)
"RTN","XPDTC",72,0)
 .M ^XTMP("XPDT",XPDA,"PKG",XPDI,22,1,"PAH",1)=^DIC(9.4,XPDI,22,+XPDV,"PAH",+$P(XPDV,U,2))
"RTN","XPDTC",73,0)
 ;M ^XTMP("XPDT",XPDA,"PKG",XPDI)=^DIC(9.4,XPDI)
"RTN","XPDTC",74,0)
 S ^XTMP("XPDT",XPDA,"PKG",XPDI,-1)="1^1"
"RTN","XPDTC",75,0)
 S %=+$P(^DIC(9.4,XPDI,0),U,4) S:% $P(^XTMP("XPDT",XPDA,"PKG",XPDI,0),U,4)=$$PT^XPDTA("^DIC(9.2)",%)
"RTN","XPDTC",76,0)
 Q:'$D(^ORD(100.99,1,5,XPDI,0))!$D(XPDGP)
"RTN","XPDTC",77,0)
 M ^XTMP("XPDT",XPDA,"OER",XPDI)=^ORD(100.99,1,5,XPDI)
"RTN","XPDTC",78,0)
 S %=+$P(^ORD(100.99,1,5,XPDI,0),U,4) S:% $P(^XTMP("XPDT",XPDA,"OER",XPDI,0),U,4)=$$PT^XPDTA("^ORD(100.98)",%)
"RTN","XPDTC",79,0)
 Q
"RTN","XPDTC",80,0)
 ;
"RTN","XPDTC",81,0)
ACT(%) ;execute action
"RTN","XPDTC",82,0)
 N EACT,FACT,FGR,K0,Y0
"RTN","XPDTC",83,0)
 S:%'["^" %="^"_%
"RTN","XPDTC",84,0)
 D @% Q
"RTN","XPDTC",85,0)
 ;
"RTN","XPDTC",86,0)
QUESTION ;package install questions
"RTN","XPDTC",87,0)
 ;;XPF1;Y;Shall I write over your |FLAG| File;YES;^D REP^XPDH
"RTN","XPDTC",88,0)
 ;;D XPF1^XPDIQ
"RTN","XPDTC",89,0)
 ;;XPF2;Y;Want my data |FLAG| yours;YES;^D DTA^XPDH
"RTN","XPDTC",90,0)
 ;;D XPF2^XPDIQ
"RTN","XPDTC",91,0)
 ;;XPZ1;Y;Want to DISABLE Scheduled Options and Menu Options;YES;^D OPT^XPDH
"RTN","XPDTC",92,0)
 ;;D XPZ1^XPDIQ
"RTN","XPDTC",93,0)
 ;;XPZ2;Y;Want to MOVE routines to other CPUs;NO;^D RTN^XPDH
"RTN","XPDTC",94,0)
 ;;D XPZ2^XPDIQ
"RTN","XQ1")
0^7^B28103108
"RTN","XQ1",1,0)
XQ1 ; SEA/MJM - DRIVER FOR MENUMAN (PART 2) ;01/25/96  09:06
"RTN","XQ1",2,0)
 ;;8.0;KERNEL;**1,15**;Jul 10, 1995
"RTN","XQ1",3,0)
 S DIC=19,DIC(0)="AEQM" D ^DIC Q:Y<0  S (XQDIC,XQY)=+Y K DIC,XQUR,Y,^VA(200,DUZ,202.1) ;G ^XQ
"RTN","XQ1",4,0)
 D INIT^XQ12
"RTN","XQ1",5,0)
 G M^XQ
"RTN","XQ1",6,0)
 ;
"RTN","XQ1",7,0)
KILL K D,D0,D1,DA,DIC,DIE,DIR,DIS,DR,XQI,XQV,XQW,XQZ
"RTN","XQ1",8,0)
 D CLEAN^DILF
"RTN","XQ1",9,0)
 ;
"RTN","XQ1",10,0)
OUT ;Exit point for all option types
"RTN","XQ1",11,0)
 L  ;Clear the lock table
"RTN","XQ1",12,0)
 S U="^" I $D(ZTQUEUED) S XQF=$S('$D(^DIC(19,XQY,15)):0,'$L(^(15)):0,1:1) X:XQF ^(15) Q  ;Quit here if it's a Taskman job
"RTN","XQ1",13,0)
 I '$D(DT)!('$D(DTIME))!('$D(DUZ))!('$D(DUZ(0)))!('$D(DUZ("AG")))!('$D(DUZ("AUTO"))) D DVARS^XQ12
"RTN","XQ1",14,0)
 I $D(DUZ("AUTO")),DUZ("AUTO"),$D(XQY),$D(^DIC(19,+XQY,0))#2,$P(^(0),"^",11)["y" W !!,*7,"Press RETURN to continue..." R %:DTIME
"RTN","XQ1",15,0)
 I $D(^XUTL("XQ",$J,"RBX")) G RBX^XQ73
"RTN","XQ1",16,0)
 I $D(^XUTL("XQ",$J,"T")) S XQY=+^(^("T")),XQT="" S:$D(^DIC(19,+XQY,0)) XQT=$P(^(0),U,4) I '$D(XQUIT),("LOQX"'[XQT),$D(^DIC(19,XQY,15)),$L(^(15)) X ^(15) ;W "  ==> OUT^XQ1"
"RTN","XQ1",17,0)
 Q:'$D(^XUTL("XQ",$J,"T"))
"RTN","XQ1",18,0)
 I $D(^XUTL("XQ",$J,"T")) S XQTT=$S($D(XQUIT):^XUTL("XQ",$J,"T"),1:^XUTL("XQ",$J,"T")-1) K XQUIT
"RTN","XQ1",19,0)
 I XQTT'<1 S ^XUTL("XQ",$J,"T")=XQTT,XQY=^(XQTT),XQY0=$P(XQY,U,2,999),XQPSM=$P(XQY,U,1),XQY=+XQPSM,XQPSM=$P(XQPSM,XQY,2,99),XQABOLD=1
"RTN","XQ1",20,0)
 I XQTT=0 S XQY=-1
"RTN","XQ1",21,0)
 I $P(XQY0,U,4)="M" S XQAA=$P(XQY0,U,2) I $P(XQY0,U,17),$D(^DIC(19,+XQY,26)),$L(^(26)) X ^(26) ;W "  ==> OUT^XQ1"
"RTN","XQ1",22,0)
 K X,XQF,XQJS,XQOK,XQTT,XQZ,Y,Z
"RTN","XQ1",23,0)
 G M1^XQ
"RTN","XQ1",24,0)
 ;
"RTN","XQ1",25,0)
A ;ACTION type option entry point
"RTN","XQ1",26,0)
 X:$D(^DIC(19,+XQY,20)) ^(20) ;W "  ==> A^XQ1"
"RTN","XQ1",27,0)
 I $D(XQUIT) K XQUIT G OUT
"RTN","XQ1",28,0)
 I $P(XQY0,U,17),$D(^DIC(19,XQY,26)),$L(^(26)) X ^(26) ;W "  ==> A^XQ1"
"RTN","XQ1",29,0)
 G OUT
"RTN","XQ1",30,0)
 ;
"RTN","XQ1",31,0)
C ;ScreenMan type options
"RTN","XQ1",32,0)
 D DIC G:DA=-1 KILL S XQZ="DR,DDSFILE,DDSFILE(1)",XQW=39 D SET
"RTN","XQ1",33,0)
 S DDSPAGE=$P($G(^DIC(19,+XQY,43)),U) K:DDSPAGE="" DDSPAGE
"RTN","XQ1",34,0)
 S DDSPARM=$P($G(^DIC(19,+XQY,43)),U,2) K:DDSPARM="" DDSPARM
"RTN","XQ1",35,0)
 I DDSFILE["(",DDSFILE'[U S DDSFILE=U_DDSFILE
"RTN","XQ1",36,0)
 I $D(DDSFILE(1)),DDSFILE(1)["(",DDSFILE(1)'[U S DDSFILE(1)=U_DDSFILE(1)
"RTN","XQ1",37,0)
 D ^DDS K DDSFILE G C
"RTN","XQ1",38,0)
 ;
"RTN","XQ1",39,0)
P ;PRINT type option
"RTN","XQ1",40,0)
 S XQZ="DIC,PG,L,FLDS,BY,FR,TO,DHD,DCOPIES,DIS(0),IOP,DHIT,DIOBEG,DIOEND",XQW=59 D SET
"RTN","XQ1",41,0)
 I $D(DIS(0))#2 F XQI=1:1:3 Q:'$D(^DIC(19,+XQY,69+(XQI/10)))  Q:^(69+(XQI/10))=""  S DIS(XQI)=^(69+(XQI/10))
"RTN","XQ1",42,0)
 S:$D(XQIOP) IOP=XQIOP
"RTN","XQ1",43,0)
 I $D(^DIC(19,XQY,79)),^(79)=1 S DIASKHD=""
"RTN","XQ1",44,0)
 S DISUPNO=$G(^DIC(19,XQY,77)),DIPCRIT=$G(^DIC(19,XQY,78))
"RTN","XQ1",45,0)
 D D1,EN1^DIP K IOP,DIOBEG,DIS,DP G OUT
"RTN","XQ1",46,0)
 ;
"RTN","XQ1",47,0)
I ;INQUIRE type option
"RTN","XQ1",48,0)
I1 D DIC G KILL:DA=-1 S DI=DIC,XQZ="DIC,DR,DIQ(0)",XQW=79 D SET,D1 S:$D(DIC)[0 DIC=DI
"RTN","XQ1",49,0)
 I $D(^DIC(19,+XQY,63)),$L(^(63)) S FLDS=^(63) ;G I2
"RTN","XQ1",50,0)
 E  S FLDS="[CAPTIONED]" ;G I2
"RTN","XQ1",51,0)
I2 ;
"RTN","XQ1",52,0)
 W ! S XQZ="DHD",XQW=66 D SET K ^UTILITY($J),^(U,$J) S ^($J,1,DA)="",@("L=+$P("_DI_"0),U,2)"),DPP(1)=L_"^^^@",L=0,C=",",Q="""",DPP=1,DPP(1,"IX")="^UTILITY(U,$J,"_DI_"^2" D N^DIP1 S Y=XQY G I1
"RTN","XQ1",53,0)
 ;
"RTN","XQ1",54,0)
E ;EDIT type option entry point
"RTN","XQ1",55,0)
E1 D DIC G KILL:DA=-1 K DIE,DIC S XQZ="DIE,DR",XQW=49 D SET S XQZ="DIE(""W"")",XQW=53 D SET
"RTN","XQ1",56,0)
 I $D(^DIC(19,XQY,53)),$L(^(53)) S %=^(53),DIE("NO^")=$S(%="N":"",1:%)
"RTN","XQ1",57,0)
 S:DIE["(" DIE=U_DIE D ^DIE S Y=XQY G E1
"RTN","XQ1",58,0)
 ;
"RTN","XQ1",59,0)
DIC ;Get FileMan parameters from Option File and do look up
"RTN","XQ1",60,0)
 ;S XQSV=XQY
"RTN","XQ1",61,0)
 W ! K DIC S XQZ="DIC,DIC(0),DIC(""A""),DIC(""B""),DIC(""S""),DIC(""W""),D",XQW=29 D SET,D1
"RTN","XQ1",62,0)
 ;D:'$D(D) ^DIC
"RTN","XQ1",63,0)
 I '$D(D) D ^DIC
"RTN","XQ1",64,0)
 I $D(D) S:D="" D="B" D IX^DIC
"RTN","XQ1",65,0)
 S DA=+Y,Y=XQY
"RTN","XQ1",66,0)
 Q
"RTN","XQ1",67,0)
 ;
"RTN","XQ1",68,0)
D1 S:DIC["(" DIC=U_DIC Q
"RTN","XQ1",69,0)
 ;
"RTN","XQ1",70,0)
SET F XQI=1:1 S XQV=$P(XQZ,",",XQI) Q:XQV=""  K @XQV I $D(^DIC(19,+XQY,XQW+XQI)),^(XQW+XQI)]"" S @XQV=^(XQW+XQI)
"RTN","XQ1",71,0)
 I $D(DIC("A")),DIC("A")]"" S DIC("A")=DIC("A")_" "
"RTN","XQ1",72,0)
 K XQI,J
"RTN","XQ1",73,0)
 Q
"RTN","XQ1",74,0)
 ;
"RTN","XQ1",75,0)
R ;RUN ROUTINE type option entry point
"RTN","XQ1",76,0)
 G:'$D(^DIC(19,XQY,25)) OUT:$D(ZTQUEUED),M1^XQ S XQZ=^(25) G:'$L(XQZ) M1^XQ S:XQZ'[U XQZ=U_XQZ I XQZ["[" D DO^%XUCI G OUT
"RTN","XQ1",77,0)
 D @XQZ G OUT
"RTN","XQ1",78,0)
 ;
"RTN","XQ1",79,0)
W ;Window type option entry point
"RTN","XQ1",80,0)
 S XQOK=1
"RTN","XQ1",81,0)
 I $D(^DIC(19,XQY,25)),$L(^(25)) D  G OUT ;Routine type
"RTN","XQ1",82,0)
 .S XQZ=^DIC(19,XQY,25)
"RTN","XQ1",83,0)
 .S:XQZ'[U XQZ=U_XQZ
"RTN","XQ1",84,0)
 .I XQZ["[" D DO^%XUCI Q
"RTN","XQ1",85,0)
 .D @XQZ
"RTN","XQ1",86,0)
 .Q
"RTN","XQ1",87,0)
 ;
"RTN","XQ1",88,0)
 I $D(^DIC(19,XQY,24)),$L(^(24)) D  G:XQOK OUT ;Pointer type
"RTN","XQ1",89,0)
 .S XQZ=^DIC(19,XQY,24)
"RTN","XQ1",90,0)
 .S XQZ=$P($G(^XTV(8995,XQZ,0)),U) I XQZ="" S XQOK=0 Q
"RTN","XQ1",91,0)
 .D PREP^XG
"RTN","XQ1",92,0)
 .S XQWIN=$$NEXTNM^XGCLOAD("XQWIN")
"RTN","XQ1",93,0)
 .;D GET^XGCLOAD(XQZ,XQWIN,"^TMP($J)")
"RTN","XQ1",94,0)
 .D GET^XGCLOAD(XQZ,$NA(^TMP($J,XQWIN)))
"RTN","XQ1",95,0)
 .D M^XG(XQWIN,$NA(^TMP($J,XQWIN)))
"RTN","XQ1",96,0)
 .D ESTA^XG() ;Send it off to window land
"RTN","XQ1",97,0)
 .; 
"RTN","XQ1",98,0)
 .D K^XG(XQWIN) ;Return here after the ESTOP
"RTN","XQ1",99,0)
 .;I $D(^%ZOSF("OS")),^%ZOSF("OS")["MSM" ZSTOP
"RTN","XQ1",100,0)
 .Q
"RTN","XQ1",101,0)
 ;
"RTN","XQ1",102,0)
 G M1^XQ ;Window failed
"RTN","XQ1",103,0)
 ;
"RTN","XQ1",104,0)
Z ;Window suite option       
"RTN","XQ1",105,0)
 G EN^XQSUITE
"RTN","XQ1",106,0)
 ;
"RTN","XQ1",107,0)
S ;Server-type option pseudo entry-point can't be invoked from Meun System
"RTN","XQ1",108,0)
 G OUT
"RTN","XQ1",109,0)
 ;
"RTN","XQ1",110,0)
B ;Client/Server option can't be run from menu system
"RTN","XQ1",111,0)
 G OUT
"RTN","XQ1",112,0)
 ;
"RTN","XQ1",113,0)
L ;OE/RR Limited option
"RTN","XQ1",114,0)
O ;OE/RR Protocol (orderables) type option entry point
"RTN","XQ1",115,0)
X ;OE/RR Extended Action type option (Subset of Protocol type)
"RTN","XQ1",116,0)
Q ;OE/RR Protocol Menu type option entry point
"RTN","XQ1",117,0)
 S XQOR=+XQY,XQOR(1)=XQT D XQ^XQOR K XQOR G OUT
"RTN","XQ1",118,0)
 ;
"RTN","XQ1",119,0)
ZTSK ;Task Manager entry point
"RTN","XQ1",120,0)
 G:$G(XQSCH)'>0 ZTSK2 S U="^",XQ=$G(^DIC(19.2,XQSCH,0)),XQY=+XQ Q:XQY'>0
"RTN","XQ1",121,0)
 S X1=$P(XQ,U,2),X2=$P(XQ,U,6)
"RTN","XQ1",122,0)
REQ S DA=XQSCH,DIE="^DIC(19.2,",DR=$S(X2="":".01///@",1:"2////"_$$SCH^XLFDT(X2,+X1,1))
"RTN","XQ1",123,0)
 L +^%ZTSK(ZTSK,0) D ^DIE L -^%ZTSK(ZTSK,0)
"RTN","XQ1",124,0)
 K DA,DIE,DR,X1,X2,XQ,ZTQPARAM
"RTN","XQ1",125,0)
 I $D(^DIC(19.2,XQSCH,3)),$L(^(3)) S ZTQPARAM=^(3)
"RTN","XQ1",126,0)
 I $D(^DIC(19.2,XQSCH,2)) D  ;Build other symbols
"RTN","XQ1",127,0)
 . S X2=XQSCH N XQSCH,XQY
"RTN","XQ1",128,0)
 . F X1=0:0 S X1=$O(^DIC(19.2,X2,2,X1)) Q:X1'>0  S X=^(X1,0),@($P(X,U)_"="_$P(X,U,2))
"RTN","XQ1",129,0)
 . Q
"RTN","XQ1",130,0)
ZTSK2 S ZTREQ="@" Q:'$D(XQY)  D UI^XQ12
"RTN","XQ1",131,0)
 Q:'$D(^DIC(19,XQY,0))  S XQY0=^(0),XQT=$P(XQY0,U,4) Q:XQT'="A"&(XQT'="P")&(XQT'="R")
"RTN","XQ1",132,0)
 S X=$P(XQY0,U,8) I X>0,X<11 X ^%ZOSF("PRIORITY")
"RTN","XQ1",133,0)
 I $P(XQY0,U,3)]""!($D(XQUIT)) S XQT="KILL"
"RTN","XQ1",134,0)
 ;
"RTN","XQ1",135,0)
RUN S:XQT="P"&$L(IO) XQIOP=ION_";"_IOST_";"_IOM_";"_IOSL G @XQT
"RTN","XQ1",136,0)
 Q
"RTN","XQCS")
0^8^B19148327
"RTN","XQCS",1,0)
XQCS ;Luke/SEA - Client/Server Utilities ;01/25/96  09:16
"RTN","XQCS",2,0)
 ;;8.0;KERNEL;**15**;Jul 10, 1995
"RTN","XQCS",3,0)
 ;
"RTN","XQCS",4,0)
CHK(XQUSR,XQOPT,XQRPC) ;Check to see if this user can run this RPC from
"RTN","XQCS",5,0)
 ;this option.
"RTN","XQCS",6,0)
 ;
"RTN","XQCS",7,0)
 ;Input: XQUSR-DUZ of user
"RTN","XQCS",8,0)
 ;       XQOPT - name or IEN of the option
"RTN","XQCS",9,0)
 ;       XQRPC - name or IEN of the remote procedure.
"RTN","XQCS",10,0)
 ;
"RTN","XQCS",11,0)
 ;Output: XQMES - returned as 1 if the user is allowed to use RPC
"RTN","XQCS",12,0)
 ;        from this option, or as a message string explaining why
"RTN","XQCS",13,0)
 ;        the RPC is not allowed.
"RTN","XQCS",14,0)
 ;
"RTN","XQCS",15,0)
 ;Rules: If M code exsists in ^DIC(19,option#,"RPC",rpc#,1) the
"RTN","XQCS",16,0)
 ;       RULES field for a corresponding RPC, the software sets
"RTN","XQCS",17,0)
 ;       the flag XQRPCOK to 1 and executes the field's code.
"RTN","XQCS",18,0)
 ;       If the flag is returned as less than 1, the request for
"RTN","XQCS",19,0)
 ;       use of that RPC is denied.  Rules are written by the
"RTN","XQCS",20,0)
 ;       package developer and are not required.
"RTN","XQCS",21,0)
 ;
"RTN","XQCS",22,0)
 ;
"RTN","XQCS",23,0)
 N %,XQKEY,XQMES,XQRPCOK
"RTN","XQCS",24,0)
 S XQMES=1
"RTN","XQCS",25,0)
 ;
"RTN","XQCS",26,0)
OPT ;See if the option is there and the RPC is registered
"RTN","XQCS",27,0)
 I XQOPT'=+XQOPT S XQOPT=$O(^DIC(19,"B",XQOPT,0)) I XQOPT'>0 S XQMES="No such option in the ""B"" cross reference of the Option File." Q XQMES
"RTN","XQCS",28,0)
 I '$D(^DIC(19,XQOPT,0)) S XQMES="No such option in the Option File." Q XQMES
"RTN","XQCS",29,0)
 I $P(^DIC(19,XQOPT,0),U,4)'="B" S XQMES="This option is not a Client/Server-type option." Q XQMES
"RTN","XQCS",30,0)
 I '$D(^DIC(19,XQOPT,"RPC",0)) S XQMES="No RPC subfile defined for the option "_$P(^DIC(19,XQOPT,0),U)_"." Q XQMES
"RTN","XQCS",31,0)
 I $P(^DIC(19,XQOPT,"RPC",0),U,4)<1 S XQMES="No remote procedure calls registered for the option "_$P(^DIC(19,XQOPT,0),U)_"." Q XQMES
"RTN","XQCS",32,0)
 ;
"RTN","XQCS",33,0)
RPC ;See if rpc exsists, is registered, is locked, etc.
"RTN","XQCS",34,0)
 I XQRPC'=+XQRPC S XQRPC=$O(^XWB(8994,"B",XQRPC,0)) I XQRPC'>0 S XQMES="No RPC by that name in the ""B"" cross-reference of the Remote Procedure File." Q XQMES
"RTN","XQCS",35,0)
 I '$D(^XWB(8994,XQRPC,0)) S XQMES="No such procedure in the Remote Procedure File." Q XQMES
"RTN","XQCS",36,0)
 I '$D(^DIC(19,XQOPT,"RPC","B",XQRPC)) S XQMES="The remote procedure "_$P(^XWB(8994,XQRPC,0),U)_" is not registered to the option "_$P(^DIC(19,XQOPT,0),U)_"." Q XQMES
"RTN","XQCS",37,0)
 S %=$O(^DIC(19,XQOPT,"RPC","B",XQRPC,0)),XQKEY=$P(^DIC(19,XQOPT,"RPC",%,0),U,2)
"RTN","XQCS",38,0)
 I $L(XQKEY) I '$D(^XUSEC(XQKEY,DUZ)) S XQMES="Remote procedure is locked." Q XQMES
"RTN","XQCS",39,0)
 ;
"RTN","XQCS",40,0)
RULES ;Check the rules for this RPC
"RTN","XQCS",41,0)
 S %=$O(^DIC(19,XQOPT,"RPC","B",XQRPC,0))
"RTN","XQCS",42,0)
 I $D(^DIC(19,XQOPT,"RPC",%,1)),$L(^(1)) D
"RTN","XQCS",43,0)
 .S XQRPCOK=1
"RTN","XQCS",44,0)
 .X ^DIC(19,XQOPT,"RPC",%,1)
"RTN","XQCS",45,0)
 .I XQRPCOK<1 S XQMES="Remote procedure request failed rules test."
"RTN","XQCS",46,0)
 .Q
"RTN","XQCS",47,0)
 ;
"RTN","XQCS",48,0)
 Q XQMES
"RTN","XQCS",49,0)
 ;
"RTN","XQCS",50,0)
 ;
"RTN","XQCS",51,0)
 ;
"RTN","XQCS",52,0)
USER(XQUSR,XQOPT) ;See if a user can access this option or not
"RTN","XQCS",53,0)
 ;
"RTN","XQCS",54,0)
 ;Input: XQUSR - DUZ of the user in question
"RTN","XQCS",55,0)
 ;     XQOPT - Name or IEN of the option being accessed
"RTN","XQCS",56,0)
 ;
"RTN","XQCS",57,0)
 ;Output: XQRTN - returns a 0 (zero) if the option is not
"RTN","XQCS",58,0)
 ;      found in the user's menu trees, and a 1 if it is.
"RTN","XQCS",59,0)
 ;
"RTN","XQCS",60,0)
 N %,XQCOM,XQDIC,XQPM,XQSM,XQSMY,XQPW
"RTN","XQCS",61,0)
 ;
"RTN","XQCS",62,0)
 S XQRTN=1,(XQSMY,%)=0
"RTN","XQCS",63,0)
 I XQOPT'=+XQOPT D
"RTN","XQCS",64,0)
 .I '$D(^DIC(19,"B",XQOPT)) S XQRTN=0 Q
"RTN","XQCS",65,0)
 .S XQOPT=$O(^DIC(19,"B",XQOPT,0))
"RTN","XQCS",66,0)
 .Q
"RTN","XQCS",67,0)
 I 'XQRTN Q XQRTN
"RTN","XQCS",68,0)
 ;
"RTN","XQCS",69,0)
TOP ;See if XQOPT is on top level of a tree: primary, secondary, or common
"RTN","XQCS",70,0)
 S XQPM=+^VA(200,DUZ,201) I XQOPT=XQPM Q XQRTN
"RTN","XQCS",71,0)
 ;
"RTN","XQCS",72,0)
 I $D(^VA(200,DUZ,203,0)),$P(^(0),U,4)>0 S XQSMY=1 D
"RTN","XQCS",73,0)
 .S XQDIC="U"_DUZ I $S('$D(^XUTL("XQO",XQDIC,0)):1,'$D(^VA(200,DUZ,203.1)):1,1:^VA(200,DUZ,203.1)'=$P(^XUTL("XQO",XQDIC,0),U,2)) D ^XQSET
"RTN","XQCS",74,0)
 .S (XQSM,%)=0
"RTN","XQCS",75,0)
 .F  Q:%  S XQSM=$O(^XUTL("XQO",XQDIC,"^",XQSM)) Q:XQSM=""  I XQSM=XQOPT S %=1 Q
"RTN","XQCS",76,0)
 .Q
"RTN","XQCS",77,0)
 I % Q XQRTN
"RTN","XQCS",78,0)
 ;
"RTN","XQCS",79,0)
 I $D(^DIC(19,"B","XUCOMMAND")) D
"RTN","XQCS",80,0)
 .S XQCOM=$O(^DIC(19,"B","XUCOMMAND",0))
"RTN","XQCS",81,0)
 .S XQDIC=XQCOM I $S('$D(^XUTL("XQO",XQDIC,0)):1,'$D(^VA(200,DUZ,203.1)):1,1:^VA(200,DUZ,203.1)'=$P(^XUTL("XQO",XQDIC,0),U,2)) D ^XQSET
"RTN","XQCS",82,0)
 .S %=0
"RTN","XQCS",83,0)
 .I $D(^XUTL("XQO",XQCOM,"^",XQOPT)) S %=1
"RTN","XQCS",84,0)
 .Q
"RTN","XQCS",85,0)
 I % Q XQRTN
"RTN","XQCS",86,0)
 ;
"RTN","XQCS",87,0)
DEEP ;See if it's under the top somewhere - start with primary tree
"RTN","XQCS",88,0)
 S XQDIC="P"_XQPM
"RTN","XQCS",89,0)
 I $P(^DIC(19,XQPM,0),U,4)="M",'$D(^XUTL("XQO",XQDIC,0)) D BUILD
"RTN","XQCS",90,0)
 I $D(^XUTL("XQO",XQDIC,"^",XQOPT)) Q XQRTN
"RTN","XQCS",91,0)
 ;
"RTN","XQCS",92,0)
 ;Check secondary trees
"RTN","XQCS",93,0)
 S (XQSM,%)=0
"RTN","XQCS",94,0)
 I XQSMY F  Q:%  S XQSM=$O(^XUTL("XQO","U"_DUZ,"^",XQSM)) Q:XQSM=""  D
"RTN","XQCS",95,0)
 .S XQDIC="P"_XQSM
"RTN","XQCS",96,0)
 .I $P(^DIC(19,XQSM,0),U,4)="M",'$D(^XUTL("XQO",XQDIC,0)) D BUILD
"RTN","XQCS",97,0)
 .I $D(^XUTL("XQO",XQDIC,"^",XQOPT)) S %=1 Q
"RTN","XQCS",98,0)
 .Q
"RTN","XQCS",99,0)
 I % Q XQRTN
"RTN","XQCS",100,0)
 S XQRTN=0 Q XQRTN
"RTN","XQCS",101,0)
 ;
"RTN","XQCS",102,0)
 ;End of main program
"RTN","XQCS",103,0)
 ;
"RTN","XQCS",104,0)
BUILD ;Build a single menu tree (XQDIC e.g. "P"_nnn) on the fly
"RTN","XQCS",105,0)
 Q:'$D(XQDIC)
"RTN","XQCS",106,0)
 K ^XUTL("XQO",XQDIC)
"RTN","XQCS",107,0)
 N %,%H,%TG,%Y,D,I,J,K,L,UU,V,X,Y,Z
"RTN","XQCS",108,0)
 N XQL,XQN,XQRE,XQK,XQI,XQPX,XQSAV,XQXUF,XQDATE,XQP,XQR,XQJ
"RTN","XQCS",109,0)
 N XQA,XQD,XQE,XQF,XQFL,XQSAVE ;From PMOK^XQ8
"RTN","XQCS",110,0)
 S XQXUF=1 D REBLD^XQ8
"RTN","XQCS",111,0)
 Q
"RTN","XUINPRE1")
0^^B473884
"RTN","XUINPRE1",1,0)
XUINPRE1 ;SF/RSD - KERNEL 8.0 Patch  PRE-INITIALIZATION ; 25 Jan 96 09:16
"RTN","XUINPRE1",2,0)
 ;;8.0;KERNEL;**15**;Jul 10, 1995
"RTN","XUINPRE1",3,0)
 ;Remove old identifiers
"RTN","XUINPRE1",4,0)
 K ^DD(9.6,0,"ID",1),^DD(9.7,0,"ID",.02)
"RTN","XUINPRE1",5,0)
 ;set new identifiers
"RTN","XUINPRE1",6,0)
 S ^DD(9.6,0,"ID","W1")="D:$P(^(0),U,2) EN^DDIOL(""   ""_$$EXTERNAL^DILFD(9.6,1,"""",$P(^(0),U,2)),"""",""?0"")"
"RTN","XUINPRE1",7,0)
 S ^DD(9.7,0,"ID","W1")="D ID97^XPDET"
"RTN","XUINPRE1",8,0)
 Q
"UP",19,19.05,0)
19.05
"VER")
8.0^21.0
"^DD",19,19,320,0)
RPC^19.05P^^RPC;0
"^DD",19,19,320,23,0)
^^2^2^2960108^^^
"^DD",19,19,320,23,1,0)
This field contains a pointer to the Remote Procedure file for an RPC
"^DD",19,19,320,23,2,0)
registered to this option.
"^DD",19,19.05,0)
RPC SUB-FIELD^^2^3
"^DD",19,19.05,0,"DT")
2960108
"^DD",19,19.05,0,"IX","B",19.05,.01)

"^DD",19,19.05,0,"NM","RPC")

"^DD",19,19.05,0,"UP")
19
"^DD",19,19.05,.01,0)
RPC^MP8994^XWB(8994,^0;1^Q
"^DD",19,19.05,.01,1,0)
^.1
"^DD",19,19.05,.01,1,1,0)
19.05^B
"^DD",19,19.05,.01,1,1,1)
S ^DIC(19,DA(1),"RPC","B",$E(X,1,30),DA)=""
"^DD",19,19.05,.01,1,1,2)
K ^DIC(19,DA(1),"RPC","B",$E(X,1,30),DA)
"^DD",19,19.05,.01,3)
Enter a Remote Procedure registered to this option.
"^DD",19,19.05,.01,21,0)
^^3^3^2951212^
"^DD",19,19.05,.01,21,1,0)
This subfile is used to register the Remote Procedures registered
"^DD",19,19.05,.01,21,2,0)
to a particular Broker-type option.  It is a pointer to the
"^DD",19,19.05,.01,21,3,0)
Remote Procedure File.
"^DD",19,19.05,.01,"DT")
2951212
"^DD",19,19.05,1,0)
RPCKEY^FX^^0;2^K:$L(X)>30!($L(X)<1) X I $D(X) Q:$D(^DIC(19.1,"B",X))  W !,*7,"Key name must match exactly with a key in the Security Key File." K X
"^DD",19,19.05,1,3)
Answer must be the name of an existing key 1-30 characters in length.
"^DD",19,19.05,1,21,0)
^^3^3^2960108^^^
"^DD",19,19.05,1,21,1,0)
This field is the free-text name from the Security Key File that will be
"^DD",19,19.05,1,21,2,0)
checked when this remote procedure call is requested to the broker.
"^DD",19,19.05,1,21,3,0)
If the user does not hold this key then the request will be denied.
"^DD",19,19.05,1,"DT")
2960108
"^DD",19,19.05,2,0)
RULES^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19,19.05,2,3)
This is Standard MUMPS code.
"^DD",19,19.05,2,9)
@
"^DD",19,19.05,2,21,0)
^^4^4^2951212^
"^DD",19,19.05,2,21,1,0)
This field contains standard M code that will be executed when this
"^DD",19,19.05,2,21,2,0)
remote procedure call is requested from the broker.  The variable
"^DD",19,19.05,2,21,3,0)
XQRPCOK is set to 1 and the code is executed. If the value of that
"^DD",19,19.05,2,21,4,0)
variable is reset to 0 by the RULES code, then the request is denied.
"^DD",19,19.05,2,"DT")
2951212
**END**
**END**
