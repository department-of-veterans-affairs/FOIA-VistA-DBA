Released DI*22*130 SEQ #126
Extracted from mail message
**KIDS**:DI*22.0*130^

**INSTALL NAME**
DI*22.0*130
"BLD",497,0)
DI*22.0*130^VA FILEMAN^0^3041230^y
"BLD",497,1,0)
^^2^2^3040827^
"BLD",497,1,1,0)
See patch DI*22*130 in the National Patch Module on FORUM for complete
"BLD",497,1,2,0)
information on this patch.
"BLD",497,4,0)
^9.64PA^^
"BLD",497,"KRN",0)
^9.67PA^8989.52^19
"BLD",497,"KRN",.4,0)
.4
"BLD",497,"KRN",.401,0)
.401
"BLD",497,"KRN",.402,0)
.402
"BLD",497,"KRN",.403,0)
.403
"BLD",497,"KRN",.5,0)
.5
"BLD",497,"KRN",.84,0)
.84
"BLD",497,"KRN",3.6,0)
3.6
"BLD",497,"KRN",3.8,0)
3.8
"BLD",497,"KRN",9.2,0)
9.2
"BLD",497,"KRN",9.8,0)
9.8
"BLD",497,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",497,"KRN",9.8,"NM",1,0)
DDUCHK2^^0^B24582136
"BLD",497,"KRN",9.8,"NM",2,0)
DDUCHK^^0^B21651338
"BLD",497,"KRN",9.8,"NM",3,0)
DDUCHK4^^0^B46185101
"BLD",497,"KRN",9.8,"NM",4,0)
DDUCHK5^^0^B47635403
"BLD",497,"KRN",9.8,"NM",5,0)
DDUCHK1^^0^B16127954
"BLD",497,"KRN",9.8,"NM",6,0)
DDUCHK3^^0^B14287511
"BLD",497,"KRN",9.8,"NM","B","DDUCHK",2)

"BLD",497,"KRN",9.8,"NM","B","DDUCHK1",5)

"BLD",497,"KRN",9.8,"NM","B","DDUCHK2",1)

"BLD",497,"KRN",9.8,"NM","B","DDUCHK3",6)

"BLD",497,"KRN",9.8,"NM","B","DDUCHK4",3)

"BLD",497,"KRN",9.8,"NM","B","DDUCHK5",4)

"BLD",497,"KRN",19,0)
19
"BLD",497,"KRN",19.1,0)
19.1
"BLD",497,"KRN",101,0)
101
"BLD",497,"KRN",409.61,0)
409.61
"BLD",497,"KRN",771,0)
771
"BLD",497,"KRN",870,0)
870
"BLD",497,"KRN",8989.51,0)
8989.51
"BLD",497,"KRN",8989.52,0)
8989.52
"BLD",497,"KRN",8994,0)
8994
"BLD",497,"KRN","B",.4,.4)

"BLD",497,"KRN","B",.401,.401)

"BLD",497,"KRN","B",.402,.402)

"BLD",497,"KRN","B",.403,.403)

"BLD",497,"KRN","B",.5,.5)

"BLD",497,"KRN","B",.84,.84)

"BLD",497,"KRN","B",3.6,3.6)

"BLD",497,"KRN","B",3.8,3.8)

"BLD",497,"KRN","B",9.2,9.2)

"BLD",497,"KRN","B",9.8,9.8)

"BLD",497,"KRN","B",19,19)

"BLD",497,"KRN","B",19.1,19.1)

"BLD",497,"KRN","B",101,101)

"BLD",497,"KRN","B",409.61,409.61)

"BLD",497,"KRN","B",771,771)

"BLD",497,"KRN","B",870,870)

"BLD",497,"KRN","B",8989.51,8989.51)

"BLD",497,"KRN","B",8989.52,8989.52)

"BLD",497,"KRN","B",8994,8994)

"BLD",497,"QUES",0)
^9.62^^
"BLD",497,"REQB",0)
^9.611^1^1
"BLD",497,"REQB",1,0)
DI*22.0*100^2
"BLD",497,"REQB","B","DI*22.0*100",1)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
VA FILEMAN^DI^FM INIT
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
22.0^2990330^3030110^41
"PKG",5,22,1,"PAH",1,0)
130^3041230
"PKG",5,22,1,"PAH",1,1,0)
^^2^2^3041230
"PKG",5,22,1,"PAH",1,1,1,0)
See patch DI*22*130 in the National Patch Module on FORUM for complete
"PKG",5,22,1,"PAH",1,1,2,0)
information on this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","DDUCHK")
0^2^B21651338
"RTN","DDUCHK",1,0)
DDUCHK ;SFISC/RWF-CHECK DD ;11:25 AM  30 Dec 2004
"RTN","DDUCHK",2,0)
 ;;22.0;VA FileMan;**130**;Mar 30, 1999
"RTN","DDUCHK",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DDUCHK",4,0)
 ; DDUCFI=home file, DDUCFE=home field, DDUCFIX=flag to fix DD
"RTN","DDUCHK",5,0)
 ; DDUCRFI=referenced file, DDUCRFE=referenced field.
"RTN","DDUCHK",6,0)
A W !!,"Check the Data Dictionary." D
"RTN","DDUCHK",7,0)
 . W !,"Note: Messages that begin with an asterisk(*) can NOT be corrected and"
"RTN","DDUCHK",8,0)
 . W !,"will need careful evaluation by software development!"
"RTN","DDUCHK",9,0)
 S DDUC=""
"RTN","DDUCHK",10,0)
 D DT^DICRW
"RTN","DDUCHK",11,0)
 D L^DICRW1
"RTN","DDUCHK",12,0)
 I X'>0 D  G EXIT
"RTN","DDUCHK",13,0)
 . I X'="" Q
"RTN","DDUCHK",14,0)
 . W !?5,"*The file: "_$P($G(Y),U,2)_"(#"_$P($G(Y),U)_") is missing its ""GL"" (Global Location) node."
"RTN","DDUCHK",15,0)
 . W !?6,"No further checking for this file can occur!"
"RTN","DDUCHK",16,0)
 S DDUCFIS=+X-.000001,DDUCFIE=DIB(1)
"RTN","DDUCHK",17,0)
 S DIR(0)="Y",DIR("A")="Remove erroneous nodes",DIR("B")="NO",DIR("?",1)="This routine will try to fix certain nodes that are erroneous and may set some nodes to a file referenced by the selected file."
"RTN","DDUCHK",18,0)
 S DIR("?")="Say 'NO' here to leave the DD untouched.  It will only flag the ones it finds erroneous."
"RTN","DDUCHK",19,0)
 D ^DIR G EXIT:$D(DIRUT) S DDUCFIX=+Y K DIR
"RTN","DDUCHK",20,0)
ZIS S %ZIS="Q" D ^%ZIS G EXIT:POP
"RTN","DDUCHK",21,0)
 I $D(IO("Q")) S ZTRTN="DQ^DDUCHK",ZTSAVE("DDUCFIX")="",ZTSAVE("DDUCFIS")="",ZTSAVE("DDUCFIE")="" D ^%ZTLOAD G EXIT
"RTN","DDUCHK",22,0)
DQ U IO K DDUCSTK,^TMP("DDUCHK",$J) S DDUCSTK=0,DDUCFX=DDUCFIX
"RTN","DDUCHK",23,0)
 F DDUCFILE=DDUCFIS:0:DDUCFIE S DDUCFILE=$O(^DIC(DDUCFILE)) Q:DDUCFILE'>0!(DDUCFILE>DDUCFIE)  D PAGE Q:$D(DIRUT)  D
"RTN","DDUCHK",24,0)
 . N DDUERR S DDUERR=0
"RTN","DDUCHK",25,0)
 . W !!,"Checking file ",DDUCFILE
"RTN","DDUCHK",26,0)
 . S (DDUCFI,DIFILE)=+DDUCFILE
"RTN","DDUCHK",27,0)
 . D DDAC
"RTN","DDUCHK",28,0)
 . D CHKHDR
"RTN","DDUCHK",29,0)
 . I DDUERR Q
"RTN","DDUCHK",30,0)
 . D CHK
"RTN","DDUCHK",31,0)
EXIT ;
"RTN","DDUCHK",32,0)
 I $G(DUZ(0))="@",$D(^TMP("DDUCHK",$J)) D
"RTN","DDUCHK",33,0)
 . W:$G(IOF)]"" @IOF
"RTN","DDUCHK",34,0)
 . W !!,"List of ;;<file#>^<field #>^<cross reference#> that contain $Next"
"RTN","DDUCHK",35,0)
 . N DDFIL S DDFIL=0 N I S I=1 N DDSP S DDSP="        "
"RTN","DDUCHK",36,0)
 . F  S DDFIL=$O(^TMP("DDUCHK",$J,DDFIL)) Q:'DDFIL  D
"RTN","DDUCHK",37,0)
 .. N DDFLD S DDFLD=0
"RTN","DDUCHK",38,0)
 .. F  S DDFLD=$O(^TMP("DDUCHK",$J,DDFIL,DDFLD)) Q:'DDFLD  D
"RTN","DDUCHK",39,0)
 ... N DDXRN S DDXRN=0
"RTN","DDUCHK",40,0)
 ... F  S DDXRN=$O(^TMP("DDUCHK",$J,DDFIL,DDFLD,DDXRN)) Q:'DDXRN  D
"RTN","DDUCHK",41,0)
 .... W !,I_$E(DDSP,1,(8-$L(I)))_";;"_DDFIL_U_DDFLD_U_DDXRN
"RTN","DDUCHK",42,0)
 .... S I=I+1
"RTN","DDUCHK",43,0)
 . S I=9999 W !,I_$E(DDSP,1,(8-$L(I)))_";;LAST LINE"
"RTN","DDUCHK",44,0)
 K ^TMP("DDUCHK",$J)
"RTN","DDUCHK",45,0)
 D ^%ZISC
"RTN","DDUCHK",46,0)
 K DDUCFI,DDUCFIX,DDUCFILE,DDUCFIS,DDUCFIE,DDUCFE,DDUCX,DDUCX1,DDUCX2,DDUCX4,DDUCRFI
"RTN","DDUCHK",47,0)
 K DDUCRFE,DDUCSTK,DDUCSTK,DDUCDNAM,DDUCNAME,DDUCXX,DDUCY,DDUCUP,DDUCXN
"RTN","DDUCHK",48,0)
 K DDUCF,DDUCXREF,DDUCZ,DDUC5,DDUCYY,DDUCYY1,DDUCOK,DDUCYYX,DIB,DDUC,DDUCFX,DIAC,DIFILE
"RTN","DDUCHK",49,0)
 Q
"RTN","DDUCHK",50,0)
 ;
"RTN","DDUCHK",51,0)
PAGE I $Y+3>IOSL S DIR(0)="E" D:IOST["C-" ^DIR W @IOF
"RTN","DDUCHK",52,0)
 Q
"RTN","DDUCHK",53,0)
 ;
"RTN","DDUCHK",54,0)
DDAC I DUZ(0)'="@" S DIAC="DD" D ^DIAC S DDUCFIX=DDUCFX I 'DIAC,DDUCFX W !,"You don't have DD access to this file.  No fixing will be done on this file." S DDUCFIX=0 Q
"RTN","DDUCHK",55,0)
 Q
"RTN","DDUCHK",56,0)
CHK I $G(^DIC(DDUCFI,0))]"",'$P(^(0),U,2) S:DDUCFIX $P(^(0),U,2)=DDUCFI
"RTN","DDUCHK",57,0)
 I $D(^DD(DDUCFI,0))[0 S DDUCRFI=DDUCFI W !?5,"*File: "_DDUCRFI_", is missing its file header node."
"RTN","DDUCHK",58,0)
 I $D(^DD(DDUCFI,0,"ID")) D ID^DDUCHK1
"RTN","DDUCHK",59,0)
 I $D(^DD(DDUCFI,0,"IX")) D IX^DDUCHK1
"RTN","DDUCHK",60,0)
 I $D(^DD(DDUCFI,0,"PT")) D PT^DDUCHK1
"RTN","DDUCHK",61,0)
 D CHKGL^DDUCHK2
"RTN","DDUCHK",62,0)
 D CHKSB^DDUCHK2
"RTN","DDUCHK",63,0)
 S DDUCNAME=$O(^DD(DDUCFI,0,"NM","")),DDUCDNAM=$O(^(DDUCNAME)),DDUCRFI=DDUCFI I DDUCDNAM]"" D WFI W "has duplicate 'NM' nodes." I DDUCFIX D NM^DDUCHK1
"RTN","DDUCHK",64,0)
 I $D(^DD("ACOMP",DDUCFI)) D AC^DDUCHK1
"RTN","DDUCHK",65,0)
 D INDEX^DDUCHK4(DDUCFI,DDUCFIX),KEY^DDUCHK5(DDUCFI,DDUCFIX)
"RTN","DDUCHK",66,0)
 G ^DDUCHK2
"RTN","DDUCHK",67,0)
WFI W !?8,"File: ",DDUCRFI," " Q
"RTN","DDUCHK",68,0)
 ;
"RTN","DDUCHK",69,0)
EN ;
"RTN","DDUCHK",70,0)
 Q:'$D(DDUCFI)!'$D(DDUCFIX)  S U="^"
"RTN","DDUCHK",71,0)
 I DDUCFI Q:'$D(^DIC(DDUCFI,0,"GL"))  G EN1
"RTN","DDUCHK",72,0)
 Q:'$D(@(DDUCFI_"0)"))  S DDUCFI=+$P(^(0),U,2)
"RTN","DDUCHK",73,0)
EN1 S DDUCFIS=+DDUCFI-.000001,DDUCFIE=+DDUCFI
"RTN","DDUCHK",74,0)
 G ZIS
"RTN","DDUCHK",75,0)
 ;
"RTN","DDUCHK",76,0)
CHKHDR ; Check for Missing or Incorrect File Header Node ;22*130
"RTN","DDUCHK",77,0)
 ;W !?5,"File: ",DDUCFI," Checking File Header Node."
"RTN","DDUCHK",78,0)
 N DDUCGL,DDUCNA,DDUCHDR
"RTN","DDUCHK",79,0)
 S DDUCGL=$G(^DIC(DDUCFI,0,"GL"))
"RTN","DDUCHK",80,0)
 I DDUCGL="" W !?5,"*File: "_DDUCFI_", is missing file's ""GL"" (Global Location) node.",!?6,"No further checking can occur!" S DDUERR=1 Q
"RTN","DDUCHK",81,0)
 S DDUCHDR=DDUCGL_"0)",DDUCHDR=$G(@DDUCHDR)
"RTN","DDUCHK",82,0)
 S DDUCNA=$P(^DIC(DDUCFI,0),U)
"RTN","DDUCHK",83,0)
 I DDUCHDR="" W !?5,"*File: "_DDUCFI_", is missing the File header node." Q
"RTN","DDUCHK",84,0)
 I $P(DDUCHDR,U)'=DDUCNA W !?5,"*File: "_DDUCFI_", header name is incorrect." Q
"RTN","DDUCHK",85,0)
 I +$P(DDUCHDR,U,2)'=DDUCFI W !?5,"*File: "_DDUCFI_" File header number is incorrect." Q
"RTN","DDUCHK",86,0)
 Q
"RTN","DDUCHK1")
0^5^B16127954
"RTN","DDUCHK1",1,0)
DDUCHK1 ;SFISC/RWF-CHECK DD part 2 ;7:08 AM  1 Oct 2003
"RTN","DDUCHK1",2,0)
 ;;22.0;VA FileMan;**130**;Mar 30, 1999
"RTN","DDUCHK1",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DDUCHK1",4,0)
ID S DDUCRFE="" F DDUCZ=0:0 S DDUCRFE=$O(^DD(DDUCFI,0,"ID",DDUCRFE)) Q:DDUCRFE=""  S DDUCX=$S($D(^DD(DDUCFI,0,"ID",DDUCRFE))#2:^(DDUCRFE),1:"") I DDUCX="Q" W !?5,"'ID' node for field ",DDUCRFE," = 'Q'" D:DDUCFIX ID1
"RTN","DDUCHK1",5,0)
 Q
"RTN","DDUCHK1",6,0)
ID1 K ^DD(DDUCFI,0,"ID",DDUCRFE) D M1 W """ID"",",DDUCRFE D M2
"RTN","DDUCHK1",7,0)
 Q
"RTN","DDUCHK1",8,0)
IX S DDUCXREF="" F DDUCZ=0:0 S DDUCXREF=$O(^DD(DDUCFI,0,"IX",DDUCXREF)) Q:DDUCXREF=""  F DDUCRFI=0:0 S DDUCRFI=$O(^DD(DDUCFI,0,"IX",DDUCXREF,DDUCRFI)) Q:DDUCRFI'>0  D IX1
"RTN","DDUCHK1",9,0)
 Q
"RTN","DDUCHK1",10,0)
IX1 D IXDUP ;22*130
"RTN","DDUCHK1",11,0)
 F DDUCRFE=0:0 S DDUCRFE=$O(^DD(DDUCFI,0,"IX",DDUCXREF,DDUCRFI,DDUCRFE)) Q:DDUCRFE'>0  D
"RTN","DDUCHK1",12,0)
 . I $D(^DD(DDUCRFI,DDUCRFE,0))[0 D WFI W """IX"" Subscript: "_DDUCXREF_"  " D WFE,WMS D:DDUCFIX IX2 Q
"RTN","DDUCHK1",13,0)
 . I $D(^DD(DDUCRFI,DDUCRFE,1,0))=0,$D(^DD(DDUCRFI,DDUCRFE,1))=10 S:DDUCFIX ^DD(DDUCRFI,DDUCRFE,1,0)="^.1"
"RTN","DDUCHK1",14,0)
 . S DDUCRFE1=0,DDUCRFEX="" F  S DDUCRFE1=$O(^DD(DDUCRFI,DDUCRFE,1,DDUCRFE1)) Q:DDUCRFE1'>0  S DDUCRFEX=$G(^(DDUCRFE1,0)) I $P(DDUCRFEX,U,2)=DDUCXREF K DDUCRFEX Q
"RTN","DDUCHK1",15,0)
 . I $D(DDUCRFEX) W !?5,"Cross-reference logic is missing for """,DDUCXREF,""" x-ref" D:DDUCFIX IX2 Q
"RTN","DDUCHK1",16,0)
 K DDUCRFE1 Q
"RTN","DDUCHK1",17,0)
IX2 K ^DD(DDUCFI,0,"IX",DDUCXREF,DDUCRFI,DDUCRFE) D M1 W """IX"",",DDUCXREF_","_DDUCRFI_","_DDUCRFE D M2
"RTN","DDUCHK1",18,0)
 Q
"RTN","DDUCHK1",19,0)
PT F DDUCRFI=0:0 S DDUCRFI=$O(^DD(DDUCFI,0,"PT",DDUCRFI)) Q:DDUCRFI'>0  F DDUCRFE=0:0 S DDUCRFE=$O(^DD(DDUCFI,0,"PT",DDUCRFI,DDUCRFE)) Q:DDUCRFE'>0  D PT1
"RTN","DDUCHK1",20,0)
 Q
"RTN","DDUCHK1",21,0)
PT1 I $D(^DD(DDUCRFI,0))[0 D WFI,WMS I DDUCFIX K ^DD(DDUCFI,0,"PT",DDUCRFI) D M1 W """PT"",",DDUCRFI D M2 Q
"RTN","DDUCHK1",22,0)
 I $D(^DD(DDUCRFI,DDUCRFE,0))[0 D WFI W """PT"" Subscript " D WFE,WMS D:DDUCFIX PTM Q
"RTN","DDUCHK1",23,0)
 I ($P(^(0),U,2)'["P")&($P(^(0),U,2)'["V") D WFI,WFE W "is not a pointer." D:DDUCFIX PTM Q
"RTN","DDUCHK1",24,0)
 I $P(^(0),U,2)["P",+$P($P(^(0),U,2),"P",2)'=DDUCFI D WFI,WFE W "is not a pointer to file ",DDUCFI D:DDUCFIX PTM
"RTN","DDUCHK1",25,0)
 Q
"RTN","DDUCHK1",26,0)
PTM K ^DD(DDUCFI,0,"PT",DDUCRFI,DDUCRFE)
"RTN","DDUCHK1",27,0)
 D M1 W """PT"",",DDUCRFI,",",DDUCRFE D M2
"RTN","DDUCHK1",28,0)
 Q
"RTN","DDUCHK1",29,0)
AC F DDUCFE=0:0 S DDUCFE=$O(^DD("ACOMP",DDUCFI,DDUCFE)) Q:DDUCFE'>0  D AC1
"RTN","DDUCHK1",30,0)
 Q
"RTN","DDUCHK1",31,0)
AC1 F DDUCRFI=0:0 S DDUCRFI=$O(^DD("ACOMP",DDUCFI,DDUCFE,DDUCRFI)) Q:DDUCRFI'>0  F DDUCRFE=0:0 S DDUCRFE=$O(^DD("ACOMP",DDUCFI,DDUCFE,DDUCRFI,DDUCRFE)) Q:DDUCRFE'>0  D AC2
"RTN","DDUCHK1",32,0)
 Q
"RTN","DDUCHK1",33,0)
AC2 I $D(^DD(DDUCRFI,DDUCRFE,0))[0 D:DDUCFIX ACM Q
"RTN","DDUCHK1",34,0)
 S DDUCX=^(0) I $P(DDUCX,U,2)'["C" D:DDUCFIX ACM Q
"RTN","DDUCHK1",35,0)
 I $P(DDUCX,U,2)["C" S DDUCX1=$S($D(^(9.01)):^(9.01),1:""),DDUCF=0 D AC3
"RTN","DDUCHK1",36,0)
 Q
"RTN","DDUCHK1",37,0)
AC3 F DDUCZ=1:1 S DDUCX2=$P(DDUCX1,";",DDUCZ) Q:DDUCX2=""  I DDUCX2=DDUCFI_U_DDUCFE S DDUCF=1 Q
"RTN","DDUCHK1",38,0)
 I 'DDUCF D:DDUCFIX ACM
"RTN","DDUCHK1",39,0)
 Q
"RTN","DDUCHK1",40,0)
ACM K ^DD("ACOMP",DDUCFI,DDUCFE,DDUCRFI,DDUCRFE)
"RTN","DDUCHK1",41,0)
 Q
"RTN","DDUCHK1",42,0)
NM S DDUCRFI(1)=$S($D(^DIC(DDUCFI,0))#2:$P(^(0),U),1:$P(^DD(DDUCFI,0)," SUB-FIELD"))
"RTN","DDUCHK1",43,0)
 Q:DDUCRFI(1)']""  K ^DD(DDUCFI,0,"NM") S ^DD(DDUCFI,0,"NM",DDUCRFI(1))="" W !?10,"Duplicate ""NM"" node was deleted."
"RTN","DDUCHK1",44,0)
 Q
"RTN","DDUCHK1",45,0)
WHO W !?5,"Field: ",DDUCFE," (",$P(DDUCX,U),") " Q
"RTN","DDUCHK1",46,0)
WFI W !?5,"File: ",DDUCRFI," " Q
"RTN","DDUCHK1",47,0)
WFE W ?5,"Field: ",DDUCRFE," " Q
"RTN","DDUCHK1",48,0)
WMS W "is missing." Q
"RTN","DDUCHK1",49,0)
M1 W !?10,"^DD(",DDUCFI,",0," Q
"RTN","DDUCHK1",50,0)
M2 W ") was killed." Q
"RTN","DDUCHK1",51,0)
 Q
"RTN","DDUCHK1",52,0)
 ;
"RTN","DDUCHK1",53,0)
IXDUP ;Check for duplicate fields for same xref ;22*130
"RTN","DDUCHK1",54,0)
 N DDUCRFE,DDUCRFEP
"RTN","DDUCHK1",55,0)
 S (DDUCRFE,DDUCRFEP)=0
"RTN","DDUCHK1",56,0)
 S DDUCRFE=$O(^DD(DDUCFI,0,"IX",DDUCRFI,DDUCRFE))
"RTN","DDUCHK1",57,0)
 D
"RTN","DDUCHK1",58,0)
 . F  S DDUCRFE=$O(^DD(DDUCFI,0,"IX",DDUCXREF,DDUCRFI,DDUCRFE)) Q:'DDUCRFE  D
"RTN","DDUCHK1",59,0)
 .. I 'DDUCRFEP S DDUCRFEP=DDUCRFE Q
"RTN","DDUCHK1",60,0)
 .. I DDUCRFE'=DDUCRFEP D
"RTN","DDUCHK1",61,0)
 ... W !?5,"*File: ",DDUCRFI," Index: """_DDUCXREF_""" has duplicate Fields."
"RTN","DDUCHK1",62,0)
 ... W !?21,"Field: ",DDUCRFEP,"  Field: ",DDUCRFE
"RTN","DDUCHK1",63,0)
 .. S DDUCRFEP=DDUCRFE
"RTN","DDUCHK1",64,0)
 .. Q
"RTN","DDUCHK1",65,0)
 . S DDUCRFEP=0
"RTN","DDUCHK1",66,0)
 . Q
"RTN","DDUCHK2")
0^1^B24582136
"RTN","DDUCHK2",1,0)
DDUCHK2 ;SFISC/RWF/SO-CHECK DD (FIELDS) ;11:46 AM  5 Mar 2004
"RTN","DDUCHK2",2,0)
 ;;22.0;VA FileMan;**100,130**;Mar 30, 1999
"RTN","DDUCHK2",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DDUCHK2",4,0)
CHK6 ;W !?5,"Checking FIELDs"
"RTN","DDUCHK2",5,0)
 F DDUCFE=0:0 S DDUCFE=+$O(^DD(DDUCFI,DDUCFE)) Q:DDUCFE'>0  D FIELD Q:$D(DIRUT)  D FIVE,DXREF^DDUCHK3,XREF^DDUCHK3,COMP^DDUCHK3
"RTN","DDUCHK2",6,0)
 ;D CHKSB,CHKGL
"RTN","DDUCHK2",7,0)
 Q
"RTN","DDUCHK2",8,0)
FIELD ;W "."
"RTN","DDUCHK2",9,0)
 I $D(^DD(DDUCFI,DDUCFE,0))[0 W !?5,"*Field: ",DDUCFE," is missing its zero node." Q  ;22*100,22*130
"RTN","DDUCHK2",10,0)
 S DDUCX=^DD(DDUCFI,DDUCFE,0),DDUCX2=$P(DDUCX,U,2),DDUCX4=$P(DDUCX,U,4),DDUCXN=$P(DDUCX,U)
"RTN","DDUCHK2",11,0)
 I $P(DDUCX,U,5,999)["$N(",$P(DDUCX,U,5,999)'["$$N(" W !?5,"*Field: ",DDUCFE,"'s Input Transform contains $Next."
"RTN","DDUCHK2",12,0)
 ;I DDUCX2["F",DDUCX4[";E1",$S($D(^DD(DDUCFI,DDUCFE,9)):^(9),1:"")'="@" D WHO W "doesn't have the correct protection for a field with executable code." I DDUCFIX S ^DD(DDUCFI,DDUCFE,9)="@" W !?10,"^DD(",DDUCFI,",",DDUCFE,",9) = ""@"" was set."
"RTN","DDUCHK2",13,0)
 D @$S(+DDUCX2:"MULT",DDUCX2["P":"PT",DDUCX2["V":"VP",1:"Q") Q
"RTN","DDUCHK2",14,0)
 Q
"RTN","DDUCHK2",15,0)
FIVE K DDUCXX F DDUCY=0:0 S DDUCY=$O(^DD(DDUCFI,DDUCFE,5,DDUCY)) Q:DDUCY'>0  S DDUCX=^(DDUCY,0) I $D(^DD(+DDUCX,+$P(DDUCX,U,2),1,+$P(DDUCX,U,3),0))#2 S DDUCXX(DDUCX)=""
"RTN","DDUCHK2",16,0)
 Q:'DDUCFIX
"RTN","DDUCHK2",17,0)
 K ^DD(DDUCFI,DDUCFE,5)
"RTN","DDUCHK2",18,0)
 S DDUCX="" F DDUCY=1:1 S DDUCX=$O(DDUCXX(DDUCX)) Q:DDUCX=""  S ^DD(DDUCFI,DDUCFE,5,DDUCY,0)=DDUCX
"RTN","DDUCHK2",19,0)
 Q
"RTN","DDUCHK2",20,0)
VP F DDUCY=0:0 S DDUCY=$O(^DD(DDUCFI,DDUCFE,"V",DDUCY)) Q:DDUCY'>0  S DDUCRFI=$S($D(^DD(DDUCFI,DDUCFE,"V",DDUCY,0)):^(0),1:"") I DDUCRFI D PT1
"RTN","DDUCHK2",21,0)
 Q
"RTN","DDUCHK2",22,0)
PT N DDUERR S DDUCRFI=+$P(DDUCX2,"P",2),DDUERR=0 D  Q:DDUERR
"RTN","DDUCHK2",23,0)
 . I $D(^DD(DDUCRFI,0))[0 W !?5,"*Field: ",DDUCFE," (",DDUCXN,") points to missing file: ",DDUCRFI S DDUERR=1 Q
"RTN","DDUCHK2",24,0)
 . N DDUCGL,DDUCNA,DDUCHDR
"RTN","DDUCHK2",25,0)
 . S DDUCGL=$G(^DIC(DDUCRFI,0,"GL"))
"RTN","DDUCHK2",26,0)
 . I DDUCGL="" W !?5,"*Field: ",DDUCFE," (",DDUCXN,") points to File: "_DDUCRFI_", is missing file's ""GL"" (Global Location) node." S DDUERR=1 Q
"RTN","DDUCHK2",27,0)
 . S DDUCHDR=DDUCGL_"0)",DDUCHDR=$G(@DDUCHDR)
"RTN","DDUCHK2",28,0)
 . I DDUCHDR="" W !?5,"*Field: ",DDUCFE," (",DDUCXN,") points to File: "_DDUCRFI_", missing File header node." S DDUERR=1
"RTN","DDUCHK2",29,0)
 . Q
"RTN","DDUCHK2",30,0)
PT1 I $D(^DD(+DDUCRFI,0,"PT",DDUCFI,DDUCFE))[0 D WHO W "is missing its 'PT' node in the pointed-to-file." I DDUCFIX S ^DD(+DDUCRFI,0,"PT",DDUCFI,DDUCFE)="" W !?10,"^DD(",+DDUCRFI,",0,""PT"",",DDUCFI,",",DDUCFE,") = """" was set."
"RTN","DDUCHK2",31,0)
Q Q  ;QUIT TAG
"RTN","DDUCHK2",32,0)
MULT ;Work subfile
"RTN","DDUCHK2",33,0)
 D PAGE^DDUCHK Q:$D(DIRUT)
"RTN","DDUCHK2",34,0)
 I $D(^DD(+DDUCX2,0))[0 W !?5,"*Field: ",DDUCFE," (",DDUCXN,") missing subfile: ",+DDUCX2 Q
"RTN","DDUCHK2",35,0)
 S DDUCUP=$S($D(^DD(+DDUCX2,0,"UP")):^("UP"),1:"") I DDUCUP'=DDUCFI D WHO W "Bad 'UP' pointer in subfile #",+DDUCX2 I DDUCFIX S ^DD(+DDUCX2,0,"UP")=DDUCFI W !?10,"^DD(",+DDUCX2,",0,""UP"") = ",DDUCFI," was set."
"RTN","DDUCHK2",36,0)
 D PUSH S DDUCFI=+DDUCX2 W !?3,"Checking subfile ",DDUCFI D CHK^DDUCHK,POP W !?3,"Returning to ",$S('DDUCSTK:"main ",1:"sub"),"file",$S('DDUCSTK:" "_DDUCFILE_".",1:" "_DDUCFI)
"RTN","DDUCHK2",37,0)
 Q
"RTN","DDUCHK2",38,0)
PUSH S DDUCSTK=DDUCSTK+1,DDUCSTK(DDUCSTK,1)=DDUCFI,DDUCSTK(DDUCSTK,2)=DDUCFE Q
"RTN","DDUCHK2",39,0)
POP S DDUCFI=DDUCSTK(DDUCSTK,1),DDUCFE=DDUCSTK(DDUCSTK,2),DDUCSTK=DDUCSTK-1 Q
"RTN","DDUCHK2",40,0)
WHO W !?8,"Field: ",DDUCFE," (",DDUCXN,") " Q
"RTN","DDUCHK2",41,0)
 ;
"RTN","DDUCHK2",42,0)
CHKSB ;Check for duplicate "SB" x-refs ;22*130
"RTN","DDUCHK2",43,0)
 N DDUCSB
"RTN","DDUCHK2",44,0)
 S DDUCSB=0
"RTN","DDUCHK2",45,0)
 F  S DDUCSB=+$O(^DD(DDUCFI,"SB",DDUCSB)) Q:'DDUCSB  D
"RTN","DDUCHK2",46,0)
 . N DDUCFE,DDUCSAV,DDUNFE
"RTN","DDUCHK2",47,0)
 . S DDUCFE=0
"RTN","DDUCHK2",48,0)
 . F  S DDUCFE=+$O(^DD(DDUCFI,"SB",DDUCSB,DDUCFE)) Q:'DDUCFE  D CHKSBA I '$D(DDUNFE),$O(^DD(DDUCFI,"SB",DDUCSB,DDUCFE)) D
"RTN","DDUCHK2",49,0)
 .. N DDUCFE1,DDUCX
"RTN","DDUCHK2",50,0)
 .. ;Is the TYPE "WP"?
"RTN","DDUCHK2",51,0)
 .. S DDUCX=$O(^DD(DDUCFI,"SB",DDUCSB,DDUCFE)) I $D(^DD(DDUCFI,DDUCX,0)),$P(^DD(DDUCFI,DDUCX,0),U,4)["WP" Q
"RTN","DDUCHK2",52,0)
 .. S DDUCSAV(DDUCFE)=""
"RTN","DDUCHK2",53,0)
 .. S DDUCFE1=DDUCFE
"RTN","DDUCHK2",54,0)
 .. F  S DDUCFE1=+$O(^DD(DDUCFI,"SB",DDUCSB,DDUCFE1)) Q:'DDUCFE1  S DDUCSAV(DDUCFE1)=""
"RTN","DDUCHK2",55,0)
 . N X1,X2
"RTN","DDUCHK2",56,0)
 . S X1=0
"RTN","DDUCHK2",57,0)
 . F  S X1=$O(DDUCSAV(X1)) Q:'X1  D
"RTN","DDUCHK2",58,0)
 .. I '$D(X2) W !?5,"*Duplicate Fields represent Sub-file: "_DDUCSB,!?7 S X2=1
"RTN","DDUCHK2",59,0)
 .. W "field: "_X1_"; "
"RTN","DDUCHK2",60,0)
 Q
"RTN","DDUCHK2",61,0)
 ;
"RTN","DDUCHK2",62,0)
CHKSBA ;Check if Feidl exists
"RTN","DDUCHK2",63,0)
 I '$D(^DD(DDUCFI,DDUCFE,0))#2 W !?7,"*Field: "_DDUCFE_", File: "_DDUCFI_", ""SB"" subscript for subfile: "_DDUCSB_" is missing." S DDUNFE=1 Q
"RTN","DDUCHK2",64,0)
 Q
"RTN","DDUCHK2",65,0)
 ;
"RTN","DDUCHK2",66,0)
CHKGL ;Check for duplicate "GL" nodes ;22*130
"RTN","DDUCHK2",67,0)
 N DDUCN
"RTN","DDUCHK2",68,0)
 S DDUCN=""
"RTN","DDUCHK2",69,0)
 F  S DDUCN=$O(^DD(DDUCFI,"GL",DDUCN)) Q:DDUCN=""  D
"RTN","DDUCHK2",70,0)
 . N DDUCP
"RTN","DDUCHK2",71,0)
 . S DDUCP=0
"RTN","DDUCHK2",72,0)
 . F  S DDUCP=+$O(^DD(DDUCFI,"GL",DDUCN,DDUCP)) Q:'DDUCP  D
"RTN","DDUCHK2",73,0)
 .. N DDUCFE2,DDUCSAV
"RTN","DDUCHK2",74,0)
 .. S DDUCFE2=0
"RTN","DDUCHK2",75,0)
 .. F  S DDUCFE2=+$O(^DD(DDUCFI,"GL",DDUCN,DDUCP,DDUCFE2)) Q:'DDUCFE2  I $O(^DD(DDUCFI,"GL",DDUCN,DDUCP,DDUCFE2)) D
"RTN","DDUCHK2",76,0)
 ... S DDUCSAV(DDUCN_";"_DDUCP,DDUCFE2)=""
"RTN","DDUCHK2",77,0)
 ... N X
"RTN","DDUCHK2",78,0)
 ... S X=0
"RTN","DDUCHK2",79,0)
 ... S X=$O(^DD(DDUCFI,"GL",DDUCN,DDUCP,DDUCFE2)) Q:'X  S DDUCSAV(DDUCN_";"_DDUCP,X)=""
"RTN","DDUCHK2",80,0)
 .. N X1,X2
"RTN","DDUCHK2",81,0)
 .. S X1="" ;Global Location
"RTN","DDUCHK2",82,0)
 .. F  S X1=$O(DDUCSAV(X1)) Q:X1=""  D
"RTN","DDUCHK2",83,0)
 ... I '$D(X2) W !?5,"*Duplication at global location subscript: "_$P(X1,";")_", piece: "_$P(X1,";",2),!?9 S X2=1
"RTN","DDUCHK2",84,0)
 ... N X3
"RTN","DDUCHK2",85,0)
 ... S X3=0 ;Field #
"RTN","DDUCHK2",86,0)
 ... F  S X3=$O(DDUCSAV(X1,X3)) Q:'X3  W "field: "_X3_"; "
"RTN","DDUCHK2",87,0)
 Q
"RTN","DDUCHK3")
0^6^B14287511
"RTN","DDUCHK3",1,0)
DDUCHK3 ;SFISC/RWF-CHECK DD (XREF,COMPUTED) ;12:40 PM  4 Mar 2004
"RTN","DDUCHK3",2,0)
 ;;22.0;VA FileMan;**130**;Mar 30, 1999
"RTN","DDUCHK3",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DDUCHK3",4,0)
XREF F DDUCY=0:0 S DDUCY=$O(^DD(DDUCFI,DDUCFE,1,DDUCY)) Q:DDUCY'>0  S DDUCX=^(DDUCY,0),DDUCRFI=+DDUCX,DDUCX1=$P(DDUCX,U,2) D XREF1
"RTN","DDUCHK3",5,0)
 Q
"RTN","DDUCHK3",6,0)
XREF1 ;
"RTN","DDUCHK3",7,0)
 I DDUCRFI,$D(^DD(DDUCRFI,0)),$D(^DD(DDUCRFI,0,"IX",DDUCX1,DDUCFI,DDUCFE))[0 D WHO,WFI W "missing 'IX' node." D:DDUCFIX XREFM Q
"RTN","DDUCHK3",8,0)
 I DDUCX["TRIGGER" S DDUCRFI=+$P(DDUCX,U,4),DDUCRFE=+$P(DDUCX,U,5),DDUC5=DDUCFI_U_DDUCFE_U_DDUCY D TRIG
"RTN","DDUCHK3",9,0)
 Q
"RTN","DDUCHK3",10,0)
XREFM S ^DD(DDUCRFI,0,"IX",DDUCX1,DDUCFI,DDUCFE)="" W !?10,"^DD(",DDUCRFI,",0,""IX"",""",DDUCX1,""",",DDUCFI,",",DDUCFE,") = """" was set."
"RTN","DDUCHK3",11,0)
 Q
"RTN","DDUCHK3",12,0)
TRIG I $D(^DD(DDUCRFI,0))[0 W !?5,"Field: ",DDUCFE," (",DDUCXN,") triggers missing file ",DDUCRFI Q
"RTN","DDUCHK3",13,0)
 I $D(^DD(DDUCRFI,DDUCRFE,0))[0 W !?5,"*Field: ",DDUCFE," (",DDUCXN,") triggers missing field ",DDUCRFE," in file ",DDUCRFI Q
"RTN","DDUCHK3",14,0)
 I '$D(^DD(DDUCRFI,DDUCRFE,5)) D WHO,WFI,WFE W " 5 node is missing." I DDUCFIX S ^DD(DDUCRFI,DDUCRFE,5,1,0)=DDUC5 W !?10,"^DD(",DDUCRFI,",",DDUCRFE,",5,1,0) = ",DDUC5," was set." Q
"RTN","DDUCHK3",15,0)
 Q:'DDUCFIX  S (DDUCYY1,DDUCOK)=0
"RTN","DDUCHK3",16,0)
 F DDUCYY=0:0 S DDUCYY=$O(^DD(DDUCRFI,DDUCRFE,5,DDUCYY)) Q:DDUCYY'>0  S DDUCYY1=DDUCYY,DDUCYYX=^(DDUCYY,0) I DDUCYYX=DDUC5 S DDUCOK=1 Q
"RTN","DDUCHK3",17,0)
 I 'DDUCOK D WHO,WFI,WFE W " 5 node is missing." D:DDUCFIX TRIGM Q
"RTN","DDUCHK3",18,0)
 Q
"RTN","DDUCHK3",19,0)
TRIGM S ^DD(DDUCRFI,DDUCRFE,5,(DDUCYY1+1),0)=DDUC5
"RTN","DDUCHK3",20,0)
 I DDUCRFI'=DDUCFE W !?10,"^DD(",DDUCRFI,",",DDUCRFE,",5,",DDUCYY1+1,",0) = ",DDUC5," was set."
"RTN","DDUCHK3",21,0)
 Q
"RTN","DDUCHK3",22,0)
COMP Q:DDUCX2'["C"  S DDUCX=$S($D(^DD(DDUCFI,DDUCFE,9.01)):^(9.01),1:"")
"RTN","DDUCHK3",23,0)
 F DDUCX1=1:1 Q:$P(DDUCX,";",DDUCX1)=""  S DDUCRFI=+$P(DDUCX,";",DDUCX1),DDUCRFE=+$P($P(DDUCX,";",DDUCX1),U,2) I $D(^DD("ACOMP",DDUCRFI,DDUCRFE,DDUCFI,DDUCFE))[0 S:DDUCFIX ^DD("ACOMP",DDUCRFI,DDUCRFE,DDUCFI,DDUCFE)=""
"RTN","DDUCHK3",24,0)
 Q
"RTN","DDUCHK3",25,0)
WHO W !?8,"Field: ",DDUCFE," (",DDUCXN,") " Q
"RTN","DDUCHK3",26,0)
WFI W !?8,"File: ",DDUCRFI," " Q
"RTN","DDUCHK3",27,0)
WFE W ?8,"Field: ",DDUCRFE," " Q
"RTN","DDUCHK3",28,0)
 ;
"RTN","DDUCHK3",29,0)
DXREF ; Check for $Next usage; 22*130
"RTN","DDUCHK3",30,0)
 ; DDUCFI = File #
"RTN","DDUCHK3",31,0)
 ; DDUCFE = Field #
"RTN","DDUCHK3",32,0)
 ; XRN = Cross Reference #
"RTN","DDUCHK3",33,0)
 N XRN S XRN=0
"RTN","DDUCHK3",34,0)
 F  S XRN=$O(^DD(DDUCFI,DDUCFE,1,XRN)) Q:'XRN  D
"RTN","DDUCHK3",35,0)
 . ; XRN1 = Cross Reference Node Data
"RTN","DDUCHK3",36,0)
 . N XRN1 S XRN1=""
"RTN","DDUCHK3",37,0)
 . ; XRNW = 0 Have Not written warning, 1 have written warning
"RTN","DDUCHK3",38,0)
 . N XRNW S XRNW=0
"RTN","DDUCHK3",39,0)
 . F  S XRN1=$O(^DD(DDUCFI,DDUCFE,1,XRN,XRN1)) Q:XRN1=""  D
"RTN","DDUCHK3",40,0)
 .. N GMSG S GMSG=0 ;1 equals use general message
"RTN","DDUCHK3",41,0)
 .. I XRN1="%D" Q
"RTN","DDUCHK3",42,0)
 .. I XRN1="DT" Q
"RTN","DDUCHK3",43,0)
 .. ; Check for $Next any cross reference code
"RTN","DDUCHK3",44,0)
 .. I ^DD(DDUCFI,DDUCFE,1,XRN,XRN1)["$N(",^DD(DDUCFI,DDUCFE,1,XRN,XRN1)'["$$N(" D  I GMSG W !?5,"*Field: ",DDUCFE,", Cross Reference #: ",XRN,", Sub-Script: ",XRN1,", contains $Next."
"RTN","DDUCHK3",45,0)
 ... I $P(^DD(DDUCFI,DDUCFE,1,XRN,0),U,3)'="TRIGGER" S GMSG=1 Q
"RTN","DDUCHK3",46,0)
 ... ; Display/Fix known old FileMan TRIGGER Code:
"RTN","DDUCHK3",47,0)
 ... ; "D ^DICR:$N(^DD(DIH,DIG,1,0))>0"
"RTN","DDUCHK3",48,0)
 ... N DICRVAL
"RTN","DDUCHK3",49,0)
 ... S DICRVAL=$G(^DD(DDUCFI,DDUCFE,1,XRN,XRN1))
"RTN","DDUCHK3",50,0)
 ... I DICRVAL'["D ^DICR:$N(^DD(DIH,DIG,1,0))>0" S GMSG=1 Q
"RTN","DDUCHK3",51,0)
 ... I 'XRNW D
"RTN","DDUCHK3",52,0)
 .... W !?5,"*File: "_DDUCFI_", Field: "_DDUCFE_", XREF: "_XRN_" contains $Next in TRIGGER code."
"RTN","DDUCHK3",53,0)
 .... S ^TMP("DDUCHK",$J,DDUCFI,DDUCFE,XRN)=""
"RTN","DDUCHK3",54,0)
 .... S XRNW=1
"RTN","DDUCHK3",55,0)
 Q
"RTN","DDUCHK4")
0^3^B46185101
"RTN","DDUCHK4",1,0)
DDUCHK4 ;SFISC/MKO-CHECK INDEXES ON FILE ;6:36 AM  28 Dec 2004
"RTN","DDUCHK4",2,0)
 ;;22.0;VA FileMan;*130*;Mar 30, 1999
"RTN","DDUCHK4",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DDUCHK4",4,0)
 ;
"RTN","DDUCHK4",5,0)
INDEX(DDUCFI,DDUCFIX) ;Check and optionally fix structure of Index file entry
"RTN","DDUCHK4",6,0)
 N DDUCIX
"RTN","DDUCHK4",7,0)
 Q:'$G(DDUCFI)  S DDUCFIX=$G(DDUCFIX)
"RTN","DDUCHK4",8,0)
 ;
"RTN","DDUCHK4",9,0)
 ;Loop through "B" index to find INDEXes that reside on this file
"RTN","DDUCHK4",10,0)
 D WCHK
"RTN","DDUCHK4",11,0)
 S DDUCIX=""
"RTN","DDUCHK4",12,0)
 F  S DDUCIX=$O(^DD("IX","B",DDUCFI,DDUCIX)) Q:DDUCIX=""  D CHKIX
"RTN","DDUCHK4",13,0)
 ;
"RTN","DDUCHK4",14,0)
 ;Check "AC","BB", and "F" indexes
"RTN","DDUCHK4",15,0)
 D CHKAC,CHKBB,CHKF
"RTN","DDUCHK4",16,0)
 Q
"RTN","DDUCHK4",17,0)
 ;
"RTN","DDUCHK4",18,0)
CHKIX ;Check Index DDUCIX found in "B" index
"RTN","DDUCHK4",19,0)
 ;In:
"RTN","DDUCHK4",20,0)
 ; DDUCIX  = index #
"RTN","DDUCHK4",21,0)
 ; DDUCFI  = file #
"RTN","DDUCHK4",22,0)
 ; DDUCFIX = flag to fix
"RTN","DDUCHK4",23,0)
 N DDUCIX0,DDUCIXID,DDUCNM,DDUCRF,DDUCRV
"RTN","DDUCHK4",24,0)
 S DDUCIXID=$$IXID(DDUCIX,"")
"RTN","DDUCHK4",25,0)
 ;
"RTN","DDUCHK4",26,0)
 ;Check that Index exists
"RTN","DDUCHK4",27,0)
 I '$D(^DD("IX",DDUCIX)) D  Q
"RTN","DDUCHK4",28,0)
 . D WNOIX
"RTN","DDUCHK4",29,0)
 . D:DDUCFIX KILL($NA(^DD("IX","B",DDUCFI,DDUCIX)))
"RTN","DDUCHK4",30,0)
 ;
"RTN","DDUCHK4",31,0)
 ;Check that index has a FILE
"RTN","DDUCHK4",32,0)
 S DDUCIX0=$G(^DD("IX",DDUCIX,0))
"RTN","DDUCHK4",33,0)
 I $P(DDUCIX0,U)="" D
"RTN","DDUCHK4",34,0)
 . D WMS("FILE (#.01) for "_DDUCIXID)
"RTN","DDUCHK4",35,0)
 . D:DDUCFIX FFILE
"RTN","DDUCHK4",36,0)
 ;
"RTN","DDUCHK4",37,0)
 ;Get Name
"RTN","DDUCHK4",38,0)
 S DDUCNM=$P(DDUCIX0,U,2)
"RTN","DDUCHK4",39,0)
 I DDUCNM]"" S DDUCIXID=$$IXID(DDUCIX,DDUCNM)
"RTN","DDUCHK4",40,0)
 E  D WMS("NAME for "_DDUCIXID)
"RTN","DDUCHK4",41,0)
 ;
"RTN","DDUCHK4",42,0)
 ;Check Root File not null, and "AC" index exists
"RTN","DDUCHK4",43,0)
 S DDUCRF=$P(DDUCIX0,U,9)
"RTN","DDUCHK4",44,0)
 I 'DDUCRF D
"RTN","DDUCHK4",45,0)
 . D WMS("ROOT FILE for "_DDUCIXID)
"RTN","DDUCHK4",46,0)
 . D:DDUCFIX FRF
"RTN","DDUCHK4",47,0)
 ;
"RTN","DDUCHK4",48,0)
 ;Check Cross-Reference Values multiple
"RTN","DDUCHK4",49,0)
 S DDUCRV=0
"RTN","DDUCHK4",50,0)
 F  S DDUCRV=$O(^DD("IX",DDUCIX,11.1,DDUCRV)) Q:'DDUCRV  D CRV
"RTN","DDUCHK4",51,0)
 ;
"RTN","DDUCHK4",52,0)
 ;Reindex Index file entry
"RTN","DDUCHK4",53,0)
 I DDUCFIX D
"RTN","DDUCHK4",54,0)
 . N DIC,DIK,DA,X
"RTN","DDUCHK4",55,0)
 . S DIK="^DD(""IX"",",DA=DDUCIX
"RTN","DDUCHK4",56,0)
 . D IX^DIK
"RTN","DDUCHK4",57,0)
 Q
"RTN","DDUCHK4",58,0)
 ;
"RTN","DDUCHK4",59,0)
CRV ;Check a Cross-Reference Value
"RTN","DDUCHK4",60,0)
 ;In:
"RTN","DDUCHK4",61,0)
 ; DDUCIX   = Index #
"RTN","DDUCHK4",62,0)
 ; DDUCRV   = CRV #
"RTN","DDUCHK4",63,0)
 ; DDUCFIX  = Flag to fix
"RTN","DDUCHK4",64,0)
 ; DDUCRF   = Root file #
"RTN","DDUCHK4",65,0)
 ; DDUCIXID = String that identifies Index
"RTN","DDUCHK4",66,0)
 N DDUCFIL,DDUCFLD,DDUCGL,DDUCOID,DDUCORD,DDUCRV0
"RTN","DDUCHK4",67,0)
 ;
"RTN","DDUCHK4",68,0)
 S DDUCRV0=$G(^DD("IX",DDUCIX,11.1,DDUCRV,0))
"RTN","DDUCHK4",69,0)
 Q:$P(DDUCRV0,U,2)="C"
"RTN","DDUCHK4",70,0)
 S DDUCORD=$P(DDUCRV0,U),DDUCFIL=$P(DDUCRV0,U,3),DDUCFLD=$P(DDUCRV0,U,4)
"RTN","DDUCHK4",71,0)
 ;
"RTN","DDUCHK4",72,0)
 ;Check .01 of CRV
"RTN","DDUCHK4",73,0)
 I DDUCORD="" D
"RTN","DDUCHK4",74,0)
 . D WMS("ORDER NUMBER of Cross-Reference Value #"_DDUCRV_" of "_DDUCIXID)
"RTN","DDUCHK4",75,0)
 . D:DDUCFIX FON
"RTN","DDUCHK4",76,0)
 S DDUCOID=$$OID(DDUCORD,"","",DDUCIXID)
"RTN","DDUCHK4",77,0)
 ;
"RTN","DDUCHK4",78,0)
 ;Make sure FILE is not null
"RTN","DDUCHK4",79,0)
 I 'DDUCFIL D
"RTN","DDUCHK4",80,0)
 . D WMS("FILE for "_DDUCOID,1)
"RTN","DDUCHK4",81,0)
 ;
"RTN","DDUCHK4",82,0)
 ;If there's a File, make sure it is equal to Root File
"RTN","DDUCHK4",83,0)
 ;and that referenced field exists.
"RTN","DDUCHK4",84,0)
 E  D
"RTN","DDUCHK4",85,0)
 . D:DDUCFIL'=DDUCRF WNE
"RTN","DDUCHK4",86,0)
 . D:$D(^DD(DDUCFIL,DDUCFLD,0))[0 WFMS
"RTN","DDUCHK4",87,0)
 . I $D(^DD("IX","F",DDUCFIL,DDUCFLD,DDUCIX,DDUCRV))[0 S DDUCGL=$NA(^(DDUCRV)) D
"RTN","DDUCHK4",88,0)
 .. D WMS(DDUCGL)
"RTN","DDUCHK4",89,0)
 .. D:DDUCFIX SET(DDUCGL)
"RTN","DDUCHK4",90,0)
 Q
"RTN","DDUCHK4",91,0)
 ;
"RTN","DDUCHK4",92,0)
CHKAC ;Check "AC index (In: DDUCFI = file; DDUCFIX = flag to fix)
"RTN","DDUCHK4",93,0)
 N DDUCGL,DDUCIX
"RTN","DDUCHK4",94,0)
 S DDUCIX=0 F  S DDUCIX=$O(^DD("IX","AC",DDUCFI,DDUCIX)) Q:'DDUCIX  D
"RTN","DDUCHK4",95,0)
 . I $P($G(^DD("IX",DDUCIX,0)),U,9)]"",$P(^(0),U,9)'=DDUCFI D
"RTN","DDUCHK4",96,0)
 .. S DDUCGL=$NA(^DD("IX","AC",DDUCFI,DDUCIX))
"RTN","DDUCHK4",97,0)
 .. D WEN(DDUCGL)
"RTN","DDUCHK4",98,0)
 .. D:DDUCFIX KILL(DDUCGL)
"RTN","DDUCHK4",99,0)
 Q
"RTN","DDUCHK4",100,0)
 ;
"RTN","DDUCHK4",101,0)
CHKBB ;Check "BB" index (In: DDUCFI = file; DDUCFIX = flag to fix)
"RTN","DDUCHK4",102,0)
 N DDUCGL,DDUCIX,DDUCIX0,DDUCIXID,DDUCNM,DDUCNML
"RTN","DDUCHK4",103,0)
 S DDUCNM=""
"RTN","DDUCHK4",104,0)
 F  S DDUCNM=$O(^DD("IX","BB",DDUCFI,DDUCNM)) Q:DDUCNM=""  D
"RTN","DDUCHK4",105,0)
 . S DDUCIX=0
"RTN","DDUCHK4",106,0)
 . F DDUCIX=$O(^DD("IX","BB",DDUCFI,DDUCNM,DDUCIX)) Q:'DDUCIX  D
"RTN","DDUCHK4",107,0)
 .. S DDUCIX0=$G(^DD("IX",DDUCIX,0))
"RTN","DDUCHK4",108,0)
 .. I $D(^DD("IX",DDUCIX)),$P(DDUCIX0,U,2)="" S DDUCNML(DDUCIX,DDUCNM)=""
"RTN","DDUCHK4",109,0)
 .. E  I $P(DDUCIX0,U)'=DDUCFI!($P(DDUCIX0,U,2)'=DDUCNM) D
"RTN","DDUCHK4",110,0)
 ... S DDUCGL=$NA(^DD("IX","BB",DDUCFI,DDUCNM,DDUCIX))
"RTN","DDUCHK4",111,0)
 ... D WEN(DDUCGL)
"RTN","DDUCHK4",112,0)
 ... D:DDUCFIX KILL(DDUCGL)
"RTN","DDUCHK4",113,0)
 ;
"RTN","DDUCHK4",114,0)
 ;If any of the Indexes have null Names, check whether a single name
"RTN","DDUCHK4",115,0)
 ;for it was found in the "BB" index.
"RTN","DDUCHK4",116,0)
 I $D(DDUCNML) S DDUCIX=0 F  S DDUCIX=$O(DDUCNML(DDUCIX)) Q:'DDUCIX  D
"RTN","DDUCHK4",117,0)
 . S DDUCNM=$O(DDUCNML(DDUCIX,""))
"RTN","DDUCHK4",118,0)
 . I $O(DDUCNML(DDUCIX,DDUCNM))="" D
"RTN","DDUCHK4",119,0)
 .. S DDUCIXID=$$IXID(DDUCIX,"")
"RTN","DDUCHK4",120,0)
 .. D WNM
"RTN","DDUCHK4",121,0)
 .. D:DDUCFIX FNM
"RTN","DDUCHK4",122,0)
 . E  F  D  S DDUCNM=$O(DDUCNML(DDUCIX,DDUCNM)) Q:DDUCNM=""
"RTN","DDUCHK4",123,0)
 .. S DDUCGL=$NA(^DD("IX","BB",DDUCFI,DDUCNM,DDUCIX))
"RTN","DDUCHK4",124,0)
 .. D WEN(DDUCGL)
"RTN","DDUCHK4",125,0)
 .. D:DDUCFIX KILL(DDUCGL)
"RTN","DDUCHK4",126,0)
 Q
"RTN","DDUCHK4",127,0)
 ;
"RTN","DDUCHK4",128,0)
CHKF ;Check "F" index (In: DDUCFI = file; DDUCFIX = flag to fix)
"RTN","DDUCHK4",129,0)
 N DDUCFLD,DDUCGL,DDUCIX,DDUCRV
"RTN","DDUCHK4",130,0)
 S DDUCFLD=0
"RTN","DDUCHK4",131,0)
 F  S DDUCFLD=$O(^DD("IX","F",DDUCFI,DDUCFLD)) Q:'DDUCFLD  D
"RTN","DDUCHK4",132,0)
 . S DDUCIX=0
"RTN","DDUCHK4",133,0)
 . F  S DDUCIX=$O(^DD("IX","F",DDUCFI,DDUCFLD,DDUCIX)) Q:'DDUCIX  D
"RTN","DDUCHK4",134,0)
 .. S DDUCRV=0
"RTN","DDUCHK4",135,0)
 .. F  S DDUCRV=$O(^DD("IX","F",DDUCFI,DDUCFLD,DDUCIX,DDUCRV)) Q:'DDUCRV  D
"RTN","DDUCHK4",136,0)
 ... I $P($G(^DD("IX",DDUCIX,11.1,DDUCRV,0)),U,3)'=DDUCFI!($P($G(^(0)),U,4)'=DDUCFLD) D
"RTN","DDUCHK4",137,0)
 .... S DDUCGL=$NA(^DD("IX","F",DDUCFI,DDUCFLD,DDUCIX,DDUCRV))
"RTN","DDUCHK4",138,0)
 .... D WEN(DDUCGL)
"RTN","DDUCHK4",139,0)
 .... D:DDUCFIX KILL(DDUCGL)
"RTN","DDUCHK4",140,0)
 Q
"RTN","DDUCHK4",141,0)
 ;
"RTN","DDUCHK4",142,0)
 ;---------------
"RTN","DDUCHK4",143,0)
FFILE ;Set the .01 of index to DDUCFI
"RTN","DDUCHK4",144,0)
 S $P(^DD("IX",DDUCIX,0),U)=DDUCFI
"RTN","DDUCHK4",145,0)
 D WRITE("FILE (#.01) for "_DDUCIXID_" set to "_DDUCFI_".",10)
"RTN","DDUCHK4",146,0)
 Q
"RTN","DDUCHK4",147,0)
 ;
"RTN","DDUCHK4",148,0)
FRF ;Set Root File equal to File and Root Type to 'INDEX FILE'
"RTN","DDUCHK4",149,0)
 S $P(^DD("IX",DDUCIX,0),U,8)="I"
"RTN","DDUCHK4",150,0)
 S $P(^DD("IX",DDUCIX,0),U,9)=DDUCFI
"RTN","DDUCHK4",151,0)
 S DDUCRF=DDUCFI
"RTN","DDUCHK4",152,0)
 D WRITE("ROOT FILE for "_DDUCIXID_" set to "_DDUCFI_".",10)
"RTN","DDUCHK4",153,0)
 D WRITE("ROOT TYPE for "_DDUCIXID_" set to 'INDEX FILE'.",10)
"RTN","DDUCHK4",154,0)
 Q
"RTN","DDUCHK4",155,0)
 ;
"RTN","DDUCHK4",156,0)
FON ;Determine Order Number
"RTN","DDUCHK4",157,0)
 N DDUCI,DDUCO
"RTN","DDUCHK4",158,0)
 ;
"RTN","DDUCHK4",159,0)
 ;Look for Order Number in "B" index
"RTN","DDUCHK4",160,0)
 S DDUCORD=0
"RTN","DDUCHK4",161,0)
 F  S DDUCORD=$O(^DD("IX",DDUCIX,11.1,"B",DDUCORD)) Q:'DDUCORD  Q:$O(^DD("IX",DDUCIX,11.1,"B",DDUCORD,0))=DDUCRV
"RTN","DDUCHK4",162,0)
 ;
"RTN","DDUCHK4",163,0)
 ;If not found, just pick an unused Order Number
"RTN","DDUCHK4",164,0)
 I 'DDUCORD D
"RTN","DDUCHK4",165,0)
 . S DDUCI=0
"RTN","DDUCHK4",166,0)
 . F  S DDUCI=$O(^DD("IX",DDUCIX,11.1,DDUCI)) Q:'DDUCI  S:$P($G(^(DDUCI,0)),U)]"" DDUCO($P(^(0),U))=""
"RTN","DDUCHK4",167,0)
 . S DDUCORD=$O(DDUCO(""),-1)
"RTN","DDUCHK4",168,0)
 . S:'DDUCORD DDUCORD=1
"RTN","DDUCHK4",169,0)
 ;
"RTN","DDUCHK4",170,0)
 S $P(^DD("IX",DDUCIX,11.1,DDUCRV,0),U)=DDUCORD
"RTN","DDUCHK4",171,0)
 D WRITE("ORDER NUMBER for Cross-Reference Value #"_DDUCRV_" of "_DDUCIXID_" set to "_DDUCORD_".",10)
"RTN","DDUCHK4",172,0)
 Q
"RTN","DDUCHK4",173,0)
 ;
"RTN","DDUCHK4",174,0)
FNM ;Set the NAME for the Index
"RTN","DDUCHK4",175,0)
 S $P(^DD("IX",DDUCIX,0),U,2)=DDUCNM
"RTN","DDUCHK4",176,0)
 D WRITE("NAME for "_DDUCIXID_" set to '"_DDUCNM_"'.",10)
"RTN","DDUCHK4",177,0)
 Q
"RTN","DDUCHK4",178,0)
 ;
"RTN","DDUCHK4",179,0)
KILL(GL) ;Kill a global and print a message
"RTN","DDUCHK4",180,0)
 Q:'$D(@GL)
"RTN","DDUCHK4",181,0)
 K @GL
"RTN","DDUCHK4",182,0)
 W !?10,GL_" was killed."
"RTN","DDUCHK4",183,0)
 Q
"RTN","DDUCHK4",184,0)
 ;
"RTN","DDUCHK4",185,0)
SET(GL,VAL) ;Set a global and print a message
"RTN","DDUCHK4",186,0)
 Q:$D(@GL)
"RTN","DDUCHK4",187,0)
 S VAL=$G(VAL),@GL=VAL
"RTN","DDUCHK4",188,0)
 W !?10,GL_" was set"_$S(VAL]"":" to "_VAL,1:"")_"."
"RTN","DDUCHK4",189,0)
 Q
"RTN","DDUCHK4",190,0)
 ;
"RTN","DDUCHK4",191,0)
 ;Write messages
"RTN","DDUCHK4",192,0)
WCHK Q  ;D WRITE("Checking Indexes.",5) Q
"RTN","DDUCHK4",193,0)
WNOIX D WRITE(DDUCIXID_" does not exist.",7) Q
"RTN","DDUCHK4",194,0)
WMS(S,N) D WRITE("*"_S_" is missing."_$S($G(N):" ",1:""),7) Q
"RTN","DDUCHK4",195,0)
WNE D WRITE("*FILE does not equal ROOT FILE in "_DDUCOID_".",7) Q  ;22*130
"RTN","DDUCHK4",196,0)
WFMS D WRITE("*File/Sub-file #"_$S($G(FIL)'="":FIL,1:DDUCFIL)_", Field #"_$S($G(FLD)'="":FLD,1:DDUCFLD)_" referenced in "_DDUCOID_" is missing.",7) Q  ;22*130
"RTN","DDUCHK4",197,0)
WEN(GL) D WRITE("Erroneous node "_GL_" is set.",7) Q
"RTN","DDUCHK4",198,0)
WNM D WRITE("NAME for "_DDUCIXID_" looks like it should be '"_DDUCNM_"'.",7) Q
"RTN","DDUCHK4",199,0)
 ;
"RTN","DDUCHK4",200,0)
WRITE(TXT,TAB) ;Write text, wrap at word boundaries.
"RTN","DDUCHK4",201,0)
 N I
"RTN","DDUCHK4",202,0)
 D WRAP^DIKCU2(.TXT,-TAB-2,-TAB)
"RTN","DDUCHK4",203,0)
 W !?TAB,$G(TXT,$G(TXT(0))) F I=1:1 Q:'$D(TXT(I))  W !?TAB+2,TXT(I)
"RTN","DDUCHK4",204,0)
 Q
"RTN","DDUCHK4",205,0)
 ;
"RTN","DDUCHK4",206,0)
IXID(IX,NM) ;Return string that identifies an Index
"RTN","DDUCHK4",207,0)
 S:'$D(NM) NM=$P($G(^DD("IX",IX,0)),U,2)
"RTN","DDUCHK4",208,0)
 Q $S(NM]"":"'"_NM_"' Index (#"_IX_")",1:"Index #"_IX)
"RTN","DDUCHK4",209,0)
 ;
"RTN","DDUCHK4",210,0)
OID(ORD,IX,NM,IXID) ;Return string that identifies Cross-Reference Value
"RTN","DDUCHK4",211,0)
 I '$D(IXID),$G(IX) S IXID=$S($D(NM)#2:$$IXID(IX,NM),1:$$IXID(IX))
"RTN","DDUCHK4",212,0)
 Q "Order #"_ORD_" of "_$S($G(IXID)]"":IXID,1:"")
"RTN","DDUCHK5")
0^4^B47635403
"RTN","DDUCHK5",1,0)
DDUCHK5 ;SFISC/MKO-CHECK KEYS ON FILE ;8/8/03  06:26
"RTN","DDUCHK5",2,0)
 ;;22.0;VA FileMan;*130*;Mar 30, 1999
"RTN","DDUCHK5",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DDUCHK5",4,0)
 ;
"RTN","DDUCHK5",5,0)
KEY(DDUCFI,DDUCFIX) ;Check and optionally fix structure of Key file entry
"RTN","DDUCHK5",6,0)
 N DDUCKEY
"RTN","DDUCHK5",7,0)
 Q:'$G(DDUCFI)  S DDUCFIX=$G(DDUCFIX)
"RTN","DDUCHK5",8,0)
 ;
"RTN","DDUCHK5",9,0)
 ;Loop through "B" index to find KEYs that reside on this file
"RTN","DDUCHK5",10,0)
 D WCHK
"RTN","DDUCHK5",11,0)
 S DDUCKEY=""
"RTN","DDUCHK5",12,0)
 F  S DDUCKEY=$O(^DD("KEY","B",DDUCFI,DDUCKEY)) Q:DDUCKEY=""  D CHKKEY
"RTN","DDUCHK5",13,0)
 ;
"RTN","DDUCHK5",14,0)
 ;Check "AP","BB", and "F" indexes
"RTN","DDUCHK5",15,0)
 D CHKAP,CHKBB,CHKF
"RTN","DDUCHK5",16,0)
 Q
"RTN","DDUCHK5",17,0)
 ;
"RTN","DDUCHK5",18,0)
CHKKEY ;Check Key DDUCKEY found in "B" index
"RTN","DDUCHK5",19,0)
 ;In:
"RTN","DDUCHK5",20,0)
 ; DDUCKEY  = Key #
"RTN","DDUCHK5",21,0)
 ; DDUCFI   = File #
"RTN","DDUCHK5",22,0)
 ; DDUCFIX  = Flag to fix
"RTN","DDUCHK5",23,0)
 N DDUCIEN,DDUCKEY0,DDUCKID,DDUCNM,DDUCUI
"RTN","DDUCHK5",24,0)
 S DDUCKID=$$KEYID(DDUCKEY,"")
"RTN","DDUCHK5",25,0)
 ;
"RTN","DDUCHK5",26,0)
 ;Check that Key exists
"RTN","DDUCHK5",27,0)
 I '$D(^DD("KEY",DDUCKEY)) D  Q
"RTN","DDUCHK5",28,0)
 . D WNOKEY
"RTN","DDUCHK5",29,0)
 . D:DDUCFIX KILL($NA(^DD("KEY","B",DDUCFI,DDUCKEY)))
"RTN","DDUCHK5",30,0)
 ;
"RTN","DDUCHK5",31,0)
 ;Check that Key has a FILE
"RTN","DDUCHK5",32,0)
 S DDUCKEY0=$G(^DD("KEY",DDUCKEY,0))
"RTN","DDUCHK5",33,0)
 I $P(DDUCKEY0,U)="" D
"RTN","DDUCHK5",34,0)
 . D WMS("FILE (#.01) for "_DDUCKID)
"RTN","DDUCHK5",35,0)
 . D:DDUCFIX FFILE
"RTN","DDUCHK5",36,0)
 ;
"RTN","DDUCHK5",37,0)
 ;Get Name
"RTN","DDUCHK5",38,0)
 S DDUCNM=$P(DDUCKEY0,U,2)
"RTN","DDUCHK5",39,0)
 I DDUCNM]"" S DDUCKID=$$KEYID(DDUCKEY,DDUCNM)
"RTN","DDUCHK5",40,0)
 E  D WMS("NAME for "_DDUCKID)
"RTN","DDUCHK5",41,0)
 ;
"RTN","DDUCHK5",42,0)
 ;Check Priority
"RTN","DDUCHK5",43,0)
 S DDUCPRI=$P(DDUCKEY0,U,3)
"RTN","DDUCHK5",44,0)
 D:DDUCPRI="" WMS("PRIORITY for "_DDUCKID)
"RTN","DDUCHK5",45,0)
 ;
"RTN","DDUCHK5",46,0)
 ;Check Uniqueness Index
"RTN","DDUCHK5",47,0)
 S DDUCUI=$P(DDUCKEY0,U,4)
"RTN","DDUCHK5",48,0)
 I 'DDUCUI D
"RTN","DDUCHK5",49,0)
 . D WMS("Uniqueness Index for "_DDUCKID,1)
"RTN","DDUCHK5",50,0)
 E  D
"RTN","DDUCHK5",51,0)
 . I '$D(^DD("IX",DDUCUI,0)) D  Q
"RTN","DDUCHK5",52,0)
 .. D WMS("Dangling pointer. Uniqueness Index #"_DDUCUI_" pointed to by "_DDUCKID,1)
"RTN","DDUCHK5",53,0)
 . D GETFLD^DIKKUTL2(DDUCKEY,DDUCUI,.DDUCKFLD,.DDUCUFLD)
"RTN","DDUCHK5",54,0)
 . D:'$$GCMP^DIKCU2("DDUCKFLD","DDUCUFLD") WNE
"RTN","DDUCHK5",55,0)
 ;
"RTN","DDUCHK5",56,0)
 ;Check Field multiple
"RTN","DDUCHK5",57,0)
 S DDUCIEN=0
"RTN","DDUCHK5",58,0)
 F  S DDUCIEN=$O(^DD("KEY",DDUCKEY,2,DDUCIEN)) Q:'DDUCIEN  D FLD
"RTN","DDUCHK5",59,0)
 ;
"RTN","DDUCHK5",60,0)
 ;Reindex Key file entry
"RTN","DDUCHK5",61,0)
 I DDUCFIX D
"RTN","DDUCHK5",62,0)
 . N DIC,DIK,DA,X
"RTN","DDUCHK5",63,0)
 . S DIK="^DD(""KEY"",",DA=DDUCKEY
"RTN","DDUCHK5",64,0)
 . D IX^DIK
"RTN","DDUCHK5",65,0)
 Q
"RTN","DDUCHK5",66,0)
 ;
"RTN","DDUCHK5",67,0)
FLD ;Check a Cross-Reference Value
"RTN","DDUCHK5",68,0)
 ;In:
"RTN","DDUCHK5",69,0)
 ; DDUCKEY = Key #
"RTN","DDUCHK5",70,0)
 ; DDUCIEN = IEN in FIELD multiple
"RTN","DDUCHK5",71,0)
 ; DDUCFIX = Flag to fix
"RTN","DDUCHK5",72,0)
 ; DDUCKID = String that identifies Key
"RTN","DDUCHK5",73,0)
 ; DDUCUI  = Uniqueness index #
"RTN","DDUCHK5",74,0)
 N DDUCFIL,DDUCFLD,DDUCFLD0,DDUCKFLD,DDUCSEQ,DDUCUFLD
"RTN","DDUCHK5",75,0)
 ;
"RTN","DDUCHK5",76,0)
 S DDUCFLD0=$G(^DD("KEY",DDUCKEY,2,DDUCIEN,0))
"RTN","DDUCHK5",77,0)
 S DDUCFLD=$P(DDUCFLD0,U),DDUCFIL=$P(DDUCFLD0,U,2)
"RTN","DDUCHK5",78,0)
 S DDUCSEQ=$P(DDUCFLD0,U,3)
"RTN","DDUCHK5",79,0)
 ;
"RTN","DDUCHK5",80,0)
 ;Check that field, file, and sequence are filled in
"RTN","DDUCHK5",81,0)
 D:'DDUCFLD!'DDUCFIL!'DDUCSEQ WINC
"RTN","DDUCHK5",82,0)
 ;
"RTN","DDUCHK5",83,0)
 ;Make sure file/field exists and is in the "F" index
"RTN","DDUCHK5",84,0)
 I DDUCFLD,DDUCFIL D
"RTN","DDUCHK5",85,0)
 . D:$D(^DD(DDUCFIL,DDUCFLD,0))[0 WFMS
"RTN","DDUCHK5",86,0)
 . I $D(^DD("KEY","F",DDUCFIL,DDUCFLD,DDUCKEY,DDUCIEN))[0 S DDUCGL=$NA(^(DDUCIEN)) D
"RTN","DDUCHK5",87,0)
 .. D WMS(DDUCGL)
"RTN","DDUCHK5",88,0)
 .. D:DDUCFIX SET(DDUCGL)
"RTN","DDUCHK5",89,0)
 Q
"RTN","DDUCHK5",90,0)
 ;
"RTN","DDUCHK5",91,0)
CHKAP ;Check "AP" index (In: DDUCFI = file; DDUCFIX = flag to fix)
"RTN","DDUCHK5",92,0)
 N DDUCGL,DDUCKEY,DDUCKEY0,DDUCPRI,DDUCPRIL
"RTN","DDUCHK5",93,0)
 ;
"RTN","DDUCHK5",94,0)
 S DDUCPRI=""
"RTN","DDUCHK5",95,0)
 F  S DDUCPRI=$O(^DD("KEY","AP",DDUCFI,DDUCPRI)) Q:DDUCPRI=""  D
"RTN","DDUCHK5",96,0)
 . S DDUCKEY=0
"RTN","DDUCHK5",97,0)
 . F  S DDUCKEY=$O(^DD("KEY","AP",DDUCFI,DDUCPRI,DDUCKEY)) Q:'DDUCKEY  D
"RTN","DDUCHK5",98,0)
 .. S DDUCKEY0=$G(^DD("KEY",DDUCKEY,0))
"RTN","DDUCHK5",99,0)
 .. I $D(^DD("KEY",DDUCKEY)),$P(DDUCKEY0,U,3)="" S DDUCPRIL(DDUCKEY,DDUCPRI)=""
"RTN","DDUCHK5",100,0)
 .. E  I $P(DDUCKEY0,U)'=DDUCFI!($P(DDUCKEY0,U,3)'=DDUCPRI) D
"RTN","DDUCHK5",101,0)
 ... S DDUCGL=$NA(^DD("KEY","AP",DDUCFI,DDUCPRI,DDUCKEY))
"RTN","DDUCHK5",102,0)
 ... D WEN(DDUCGL)
"RTN","DDUCHK5",103,0)
 ... D:DDUCFIX KILL(DDUCGL)
"RTN","DDUCHK5",104,0)
 ;
"RTN","DDUCHK5",105,0)
 ;If any of the Keys have null Priorities, check whether a single
"RTN","DDUCHK5",106,0)
 ;priority for it was found in the "AP" index.
"RTN","DDUCHK5",107,0)
 I $D(DDUCPRIL) S DDUCKEY=0 F  S DDUCKEY=$O(DDUCPRIL(DDUCKEY)) Q:'DDUCKEY  D
"RTN","DDUCHK5",108,0)
 . S DDUCPRI=$O(DDUCPRIL(DDUCKEY,""))
"RTN","DDUCHK5",109,0)
 . I $O(DDUCPRIL(DDUCKEY,DDUCPRI))="" D
"RTN","DDUCHK5",110,0)
 .. S DDUCKID=$$KEYID(DDUCKEY)
"RTN","DDUCHK5",111,0)
 .. D WPRI
"RTN","DDUCHK5",112,0)
 .. D:DDUCFIX FPRI
"RTN","DDUCHK5",113,0)
 . E  F  D  S DDUCPRI=$O(DDUCPRIL(DDUCKEY,DDUCPRI)) Q:DDUCPRI=""
"RTN","DDUCHK5",114,0)
 .. S DDUCGL=$NA(^DD("KEY","AP",DDUCFI,DDUCPRI,DDUCKEY))
"RTN","DDUCHK5",115,0)
 .. D WEN(DDUCGL)
"RTN","DDUCHK5",116,0)
 .. D:DDUCFIX KILL(DDUCGL)
"RTN","DDUCHK5",117,0)
 Q
"RTN","DDUCHK5",118,0)
 ;
"RTN","DDUCHK5",119,0)
CHKBB ;Check "BB" index (In: DDUCFI = file; DDUCFIX = flag to fix)
"RTN","DDUCHK5",120,0)
 N DDUCGL,DDUCKEY,DDUCKEY0,DDUCKID,DDUCNM,DDUCNML
"RTN","DDUCHK5",121,0)
 S DDUCNM=""
"RTN","DDUCHK5",122,0)
 F  S DDUCNM=$O(^DD("KEY","BB",DDUCFI,DDUCNM)) Q:DDUCNM=""  D
"RTN","DDUCHK5",123,0)
 . S DDUCKEY=0
"RTN","DDUCHK5",124,0)
 . F DDUCKEY=$O(^DD("KEY","BB",DDUCFI,DDUCNM,DDUCKEY)) Q:'DDUCKEY  D
"RTN","DDUCHK5",125,0)
 .. S DDUCKEY0=$G(^DD("KEY",DDUCKEY,0))
"RTN","DDUCHK5",126,0)
 .. I $D(^DD("KEY",DDUCKEY)),$P(DDUCKEY0,U,2)="" S DDUCNML(DDUCKEY,DDUCNM)=""
"RTN","DDUCHK5",127,0)
 .. E  I $P(DDUCKEY0,U)'=DDUCFI!($P(DDUCKEY0,U,2)'=DDUCNM) D
"RTN","DDUCHK5",128,0)
 ... S DDUCGL=$NA(^DD("KEY","BB",DDUCFI,DDUCNM,DDUCKEY))
"RTN","DDUCHK5",129,0)
 ... D WEN(DDUCGL)
"RTN","DDUCHK5",130,0)
 ... D:DDUCFIX KILL(DDUCGL)
"RTN","DDUCHK5",131,0)
 ;
"RTN","DDUCHK5",132,0)
 ;If any of the Keys have null Names, check whether a single name
"RTN","DDUCHK5",133,0)
 ;for it was found in the "BB" index.
"RTN","DDUCHK5",134,0)
 I $D(DDUCNML) S DDUCKEY=0 F  S DDUCKEY=$O(DDUCNML(DDUCKEY)) Q:'DDUCKEY  D
"RTN","DDUCHK5",135,0)
 . S DDUCNM=$O(DDUCNML(DDUCKEY,""))
"RTN","DDUCHK5",136,0)
 . I $O(DDUCNML(DDUCKEY,DDUCNM))="" D
"RTN","DDUCHK5",137,0)
 .. S DDUCKID=$$KEYID(DDUCKEY,"")
"RTN","DDUCHK5",138,0)
 .. D WNM
"RTN","DDUCHK5",139,0)
 .. D:DDUCFIX FNM
"RTN","DDUCHK5",140,0)
 . E  F  D  S DDUCNM=$O(DDUCNML(DDUCKEY,DDUCNM)) Q:DDUCNM=""
"RTN","DDUCHK5",141,0)
 .. S DDUCGL=$NA(^DD("KEY","BB",DDUCFI,DDUCNM,DDUCKEY))
"RTN","DDUCHK5",142,0)
 .. D WEN(DDUCGL)
"RTN","DDUCHK5",143,0)
 .. D:DDUCFIX KILL(DDUCGL)
"RTN","DDUCHK5",144,0)
 Q
"RTN","DDUCHK5",145,0)
 ;
"RTN","DDUCHK5",146,0)
CHKF ;Check "F" index (In: DDUCFI = file; DDUCFIX = flag to fix)
"RTN","DDUCHK5",147,0)
 N DDUCFLD,DDUCGL,DDUCKEY,DDUCIEN
"RTN","DDUCHK5",148,0)
 S DDUCFLD=0
"RTN","DDUCHK5",149,0)
 F  S DDUCFLD=$O(^DD("KEY","F",DDUCFI,DDUCFLD)) Q:'DDUCFLD  D
"RTN","DDUCHK5",150,0)
 . S DDUCKEY=0
"RTN","DDUCHK5",151,0)
 . F  S DDUCKEY=$O(^DD("KEY","F",DDUCFI,DDUCFLD,DDUCKEY)) Q:'DDUCKEY  D
"RTN","DDUCHK5",152,0)
 .. S DDUCIEN=0
"RTN","DDUCHK5",153,0)
 .. F  S DDUCIEN=$O(^DD("KEY","F",DDUCFI,DDUCFLD,DDUCKEY,DDUCIEN)) Q:'DDUCIEN  D
"RTN","DDUCHK5",154,0)
 ... I $P($G(^DD("KEY",DDUCKEY,2,DDUCIEN,0)),U,2)'=DDUCFI!($P($G(^(0)),U)'=DDUCFLD) D
"RTN","DDUCHK5",155,0)
 .... S DDUCGL=$NA(^DD("KEY","F",DDUCFI,DDUCFLD,DDUCKEY,DDUCIEN))
"RTN","DDUCHK5",156,0)
 .... D WEN(DDUCGL)
"RTN","DDUCHK5",157,0)
 .... D:DDUCFIX KILL(DDUCGL)
"RTN","DDUCHK5",158,0)
 Q
"RTN","DDUCHK5",159,0)
 ;
"RTN","DDUCHK5",160,0)
 ;---------------
"RTN","DDUCHK5",161,0)
FFILE ;Set the .01 of Key to DDUCFI
"RTN","DDUCHK5",162,0)
 S $P(^DD("KEY",DDUCKEY,0),U)=DDUCFI
"RTN","DDUCHK5",163,0)
 D WRITE("FILE (#.01) for "_DDUCKID_" set to "_DDUCFI_".",10)
"RTN","DDUCHK5",164,0)
 Q
"RTN","DDUCHK5",165,0)
 ;
"RTN","DDUCHK5",166,0)
FNM ;Set the NAME for the Key
"RTN","DDUCHK5",167,0)
 S $P(^DD("KEY",DDUCKEY,0),U,2)=DDUCNM
"RTN","DDUCHK5",168,0)
 D WRITE("NAME for "_DDUCKID_" set to '"_DDUCNM_"'.",10)
"RTN","DDUCHK5",169,0)
 Q
"RTN","DDUCHK5",170,0)
 ;
"RTN","DDUCHK5",171,0)
FPRI ;Set the PRIORITY for the Key
"RTN","DDUCHK5",172,0)
 S $P(^DD("KEY",DDUCKEY,0),U,3)=DDUCPRI
"RTN","DDUCHK5",173,0)
 D WRITE("PRIORITY for "_DDUCKID_" set to '"_DDUCPRI_"'.",10)
"RTN","DDUCHK5",174,0)
 Q
"RTN","DDUCHK5",175,0)
 ;
"RTN","DDUCHK5",176,0)
KILL(GL) ;Kill a global and print a message
"RTN","DDUCHK5",177,0)
 Q:'$D(@GL)
"RTN","DDUCHK5",178,0)
 K @GL
"RTN","DDUCHK5",179,0)
 W !?10,GL_" was killed."
"RTN","DDUCHK5",180,0)
 Q
"RTN","DDUCHK5",181,0)
 ;
"RTN","DDUCHK5",182,0)
SET(GL,VAL) ;Set a global and print a message
"RTN","DDUCHK5",183,0)
 Q:$D(@GL)
"RTN","DDUCHK5",184,0)
 S VAL=$G(VAL),@GL=VAL
"RTN","DDUCHK5",185,0)
 W !?10,GL_" was set"_$S(VAL]"":" to "_VAL,1:"")_"."
"RTN","DDUCHK5",186,0)
 Q
"RTN","DDUCHK5",187,0)
 ;
"RTN","DDUCHK5",188,0)
 ;Write messages
"RTN","DDUCHK5",189,0)
WCHK Q  ;D WRITE("Checking Keys.",5) Q
"RTN","DDUCHK5",190,0)
WNOKEY D WRITE(DDUCKID_" does not exist.",7) Q
"RTN","DDUCHK5",191,0)
WMS(S,N) D WRITE(S_" is missing."_$S($G(N):" Nothing done.",1:""),7) Q
"RTN","DDUCHK5",192,0)
WINC D WRITE("Field information in "_DDUCKEY_" is incomplete. Nothing done.",7) Q
"RTN","DDUCHK5",193,0)
WFMS D WRITE("*File #"_DDUCFIL_", Field #"_DDUCFLD_" referenced in "_DDUCKEY_" is missing.",7) Q  ;22*130
"RTN","DDUCHK5",194,0)
WNE D WRITE("*Fields in "_DDUCKID_" don't match fields in Uniqueness Index.",7) Q  ;22*130
"RTN","DDUCHK5",195,0)
WEN(GL) D WRITE("Erroneous node "_GL_" is set.",7) Q
"RTN","DDUCHK5",196,0)
WNM D WRITE("NAME for "_DDUCKID_" looks like it should be '"_DDUCNM_"'.",7) Q
"RTN","DDUCHK5",197,0)
WPRI D WRITE("PRIORITY for "_DDUCKID_" looks like it should be '"_DDUCPRI_"'.",7) Q
"RTN","DDUCHK5",198,0)
 ;
"RTN","DDUCHK5",199,0)
WRITE(TXT,TAB) ;Write text, wrap at word boundaries.
"RTN","DDUCHK5",200,0)
 N I
"RTN","DDUCHK5",201,0)
 D WRAP^DIKCU2(.TXT,-TAB-2,-TAB)
"RTN","DDUCHK5",202,0)
 W !?TAB,$G(TXT,$G(TXT(0))) F I=1:1 Q:'$D(TXT(I))  W !?TAB+2,TXT(I)
"RTN","DDUCHK5",203,0)
 Q
"RTN","DDUCHK5",204,0)
 ;
"RTN","DDUCHK5",205,0)
KEYID(KEY,NM) ;Return string that identifies a Key
"RTN","DDUCHK5",206,0)
 S:'$D(NM) NM=$P($G(^DD("KEY",KEY,0)),U,2)
"RTN","DDUCHK5",207,0)
 Q $S(NM]"":"Key '"_NM_"' (#"_KEY_")",1:"Key #"_KEY)
"VER")
8^22.0
**END**
**END**
