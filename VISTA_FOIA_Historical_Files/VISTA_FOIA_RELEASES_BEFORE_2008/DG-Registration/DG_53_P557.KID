KIDS Distribution saved on Oct 20, 2005@12:35:07
DG*5.3*557
**KIDS**:DG*5.3*557^

**INSTALL NAME**
DG*5.3*557
"BLD",4124,0)
DG*5.3*557^REGISTRATION^0^3051020^y
"BLD",4124,4,0)
^9.64PA^^
"BLD",4124,"ABPKG")
n
"BLD",4124,"INI")

"BLD",4124,"INIT")

"BLD",4124,"KRN",0)
^9.67PA^8989.52^19
"BLD",4124,"KRN",.4,0)
.4
"BLD",4124,"KRN",.401,0)
.401
"BLD",4124,"KRN",.402,0)
.402
"BLD",4124,"KRN",.403,0)
.403
"BLD",4124,"KRN",.5,0)
.5
"BLD",4124,"KRN",.84,0)
.84
"BLD",4124,"KRN",3.6,0)
3.6
"BLD",4124,"KRN",3.8,0)
3.8
"BLD",4124,"KRN",3.8,"NM",0)
^9.68A^^0
"BLD",4124,"KRN",9.2,0)
9.2
"BLD",4124,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",4124,"KRN",9.8,0)
9.8
"BLD",4124,"KRN",9.8,"NM",0)
^9.68A^111^17
"BLD",4124,"KRN",9.8,"NM",7,0)
DGRRPSAC^^0^B14768700
"BLD",4124,"KRN",9.8,"NM",8,0)
DGRRPSAM^^0^B7822716
"BLD",4124,"KRN",9.8,"NM",9,0)
DGRRPSAT^^0^B6432723
"BLD",4124,"KRN",9.8,"NM",10,0)
DGRRPSD1^^0^B4517565
"BLD",4124,"KRN",9.8,"NM",11,0)
DGRRPSD2^^0^B15816572
"BLD",4124,"KRN",9.8,"NM",12,0)
DGRRPSD3^^0^B14769514
"BLD",4124,"KRN",9.8,"NM",13,0)
DGRRPSGT^^0^B40084058
"BLD",4124,"KRN",9.8,"NM",14,0)
DGRRPSID^^0^B2238073
"BLD",4124,"KRN",9.8,"NM",15,0)
DGRRPSIN^^0^B1115728
"BLD",4124,"KRN",9.8,"NM",20,0)
DGRRPSAD^^0^B46488983
"BLD",4124,"KRN",9.8,"NM",21,0)
DGRRPSEE^^0^B75411765
"BLD",4124,"KRN",9.8,"NM",22,0)
DGRRPSIC^^0^B8301317
"BLD",4124,"KRN",9.8,"NM",23,0)
DGRRPSKN^^0^B10519494
"BLD",4124,"KRN",9.8,"NM",68,0)
DGRRPSXX^^0^B11679252
"BLD",4124,"KRN",9.8,"NM",109,0)
DGRRPSA1^^0^B19753
"BLD",4124,"KRN",9.8,"NM",110,0)
DGRRPSA2^^0^B23518
"BLD",4124,"KRN",9.8,"NM",111,0)
DGRR557U^^0^B4045100
"BLD",4124,"KRN",9.8,"NM","B","DGRR557U",111)

"BLD",4124,"KRN",9.8,"NM","B","DGRRPSA1",109)

"BLD",4124,"KRN",9.8,"NM","B","DGRRPSA2",110)

"BLD",4124,"KRN",9.8,"NM","B","DGRRPSAC",7)

"BLD",4124,"KRN",9.8,"NM","B","DGRRPSAD",20)

"BLD",4124,"KRN",9.8,"NM","B","DGRRPSAM",8)

"BLD",4124,"KRN",9.8,"NM","B","DGRRPSAT",9)

"BLD",4124,"KRN",9.8,"NM","B","DGRRPSD1",10)

"BLD",4124,"KRN",9.8,"NM","B","DGRRPSD2",11)

"BLD",4124,"KRN",9.8,"NM","B","DGRRPSD3",12)

"BLD",4124,"KRN",9.8,"NM","B","DGRRPSEE",21)

"BLD",4124,"KRN",9.8,"NM","B","DGRRPSGT",13)

"BLD",4124,"KRN",9.8,"NM","B","DGRRPSIC",22)

"BLD",4124,"KRN",9.8,"NM","B","DGRRPSID",14)

"BLD",4124,"KRN",9.8,"NM","B","DGRRPSIN",15)

"BLD",4124,"KRN",9.8,"NM","B","DGRRPSKN",23)

"BLD",4124,"KRN",9.8,"NM","B","DGRRPSXX",68)

"BLD",4124,"KRN",19,0)
19
"BLD",4124,"KRN",19,"NM",0)
^9.68A^2^1
"BLD",4124,"KRN",19,"NM",2,0)
DGRR PATIENT SERVICE QUERY^^0
"BLD",4124,"KRN",19,"NM","B","DGRR PATIENT SERVICE QUERY",2)

"BLD",4124,"KRN",19.1,0)
19.1
"BLD",4124,"KRN",19.1,"NM",0)
^9.68A^^0
"BLD",4124,"KRN",101,0)
101
"BLD",4124,"KRN",101,"NM",0)
^9.68A^^0
"BLD",4124,"KRN",409.61,0)
409.61
"BLD",4124,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",4124,"KRN",771,0)
771
"BLD",4124,"KRN",771,"NM",0)
^9.68A^^0
"BLD",4124,"KRN",870,0)
870
"BLD",4124,"KRN",870,"NM",0)
^9.68A^^0
"BLD",4124,"KRN",8989.51,0)
8989.51
"BLD",4124,"KRN",8989.51,"NM",0)
^9.68A^^
"BLD",4124,"KRN",8989.52,0)
8989.52
"BLD",4124,"KRN",8994,0)
8994
"BLD",4124,"KRN",8994,"NM",0)
^9.68A^1^1
"BLD",4124,"KRN",8994,"NM",1,0)
DGRR GET PATIENT SERVICES DATA^^0
"BLD",4124,"KRN",8994,"NM","B","DGRR GET PATIENT SERVICES DATA",1)

"BLD",4124,"KRN","B",.4,.4)

"BLD",4124,"KRN","B",.401,.401)

"BLD",4124,"KRN","B",.402,.402)

"BLD",4124,"KRN","B",.403,.403)

"BLD",4124,"KRN","B",.5,.5)

"BLD",4124,"KRN","B",.84,.84)

"BLD",4124,"KRN","B",3.6,3.6)

"BLD",4124,"KRN","B",3.8,3.8)

"BLD",4124,"KRN","B",9.2,9.2)

"BLD",4124,"KRN","B",9.8,9.8)

"BLD",4124,"KRN","B",19,19)

"BLD",4124,"KRN","B",19.1,19.1)

"BLD",4124,"KRN","B",101,101)

"BLD",4124,"KRN","B",409.61,409.61)

"BLD",4124,"KRN","B",771,771)

"BLD",4124,"KRN","B",870,870)

"BLD",4124,"KRN","B",8989.51,8989.51)

"BLD",4124,"KRN","B",8989.52,8989.52)

"BLD",4124,"KRN","B",8994,8994)

"BLD",4124,"PRE")

"BLD",4124,"QUES",0)
^9.62^^0
"BLD",4124,"REQB",0)
^9.611^^0
"KRN",19,12423,-1)
0^2
"KRN",19,12423,0)
DGRR PATIENT SERVICE QUERY^Patient Service Query^^B^^^^^^^^REGISTRATION
"KRN",19,12423,99.1)
59967,33982
"KRN",19,12423,"RPC",0)
^19.05P^1^1
"KRN",19,12423,"RPC",1,0)
DGRR GET PATIENT SERVICES DATA
"KRN",19,12423,"U")
PATIENT SERVICE QUERY
"KRN",8994,1443,-1)
0^1
"KRN",8994,1443,0)
DGRR GET PATIENT SERVICES DATA^PATIENT^DGRRPSGT^4^P^^^0^.001^^1
"KRN",8994,1443,1,0)
^8994.01^2^2^3050616^^^^
"KRN",8994,1443,1,1,0)
This RPC will return an XML via VistaLink containing Patient Service
"KRN",8994,1443,1,2,0)
Demographic information for any given Patient ICN
"KRN",8994,1443,2,0)
^8994.02A^1^1
"KRN",8994,1443,2,1,0)
PARAM^2^999^1
"KRN",8994,1443,2,1,1,0)
^^21^21^3050616^
"KRN",8994,1443,2,1,1,1,0)
Input Parameters:   (Rq) Required parameter  (Op) Optional parameter
"KRN",8994,1443,2,1,1,2,0)
 
"KRN",8994,1443,2,1,1,3,0)
     (Rq) PARAMS("PatientId_Type") = the three letters "DFN" or "ICN"
"KRN",8994,1443,2,1,1,4,0)
     (Rq) PARAMS("PatientId") = the actual value of the patient DFN or ICN
"KRN",8994,1443,2,1,1,5,0)
     (Op) PARAMS(REQUESTED_DATE) = Date to be used for ADT Movement
"KRN",8994,1443,2,1,1,6,0)
                                   List - defaults to DT 
"KRN",8994,1443,2,1,1,7,0)
     (Op) PARAMS("PrimaryDemo") = 0 or 1 to request Primary Demographic
"KRN",8994,1443,2,1,1,8,0)
                                  Info 
"KRN",8994,1443,2,1,1,9,0)
     (Op) PARAMS("SecondaryDemo") = 0 or 1 to request Secondary
"KRN",8994,1443,2,1,1,10,0)
                                    Demographic Info 
"KRN",8994,1443,2,1,1,11,0)
     (Op) PARAMS("TertiaryDemo") = 0 or 1 to request Tertiary Demographic
"KRN",8994,1443,2,1,1,12,0)
                                   Info 
"KRN",8994,1443,2,1,1,13,0)
     (Op) PARAMS("MainAddress") = 0 or 1 to request Main Address Info 
"KRN",8994,1443,2,1,1,14,0)
     (Op) PARAMS("TemporaryAddress") = 0 or 1 to request Temporary
"KRN",8994,1443,2,1,1,15,0)
                                       Address Info 
"KRN",8994,1443,2,1,1,16,0)
     (Op) PARAMS("ConfidentialAddress") = 0 or 1 to request
"KRN",8994,1443,2,1,1,17,0)
                                          Confidential Address Info 
"KRN",8994,1443,2,1,1,18,0)
     (Op) PARAMS("ContactInfo") = 0 or 1 to request Contact Information
"KRN",8994,1443,2,1,1,19,0)
     (Op) PARAMS("ADTInfo") = 0 or 1 to request ADT Information 
"KRN",8994,1443,2,1,1,20,0)
     (Op) PARAMS("EnrollEligibility") = 0 or 1 to request Enrollment/
"KRN",8994,1443,2,1,1,21,0)
                                        Eligibility Information
"KRN",8994,1443,2,"B","PARAM",1)

"KRN",8994,1443,3,0)
^8994.03^1^1^3050616^^^^
"KRN",8994,1443,3,1,0)
<XML schema doc>
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",114,-1)
1^1
"PKG",114,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",114,20,0)
^9.402P^^
"PKG",114,22,0)
^9.49I^1^1
"PKG",114,22,1,0)
5.3^2930813^2930821
"PKG",114,22,1,"PAH",1,0)
557^3051020
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
17
"RTN","DGRR557U")
0^111^B4045100
"RTN","DGRR557U",1,0)
DGRR557U ; ALB/SGG - PersonServiceDemographic HL7 Build and Send ;08/16/04  ; Compiled August 16, 2004 12:41:01
"RTN","DGRR557U",2,0)
 ;;5.3;Registration;**557**;Aug 13, 1993
"RTN","DGRR557U",3,0)
 ;
"RTN","DGRR557U",4,0)
 QUIT
"RTN","DGRR557U",5,0)
 ;
"RTN","DGRR557U",6,0)
ADD(STR) ; -- add string to array
"RTN","DGRR557U",7,0)
 SET DGRRLINE=DGRRLINE+1
"RTN","DGRR557U",8,0)
 SET @DGRRESLT@(DGRRLINE)=STR
"RTN","DGRR557U",9,0)
 QUIT
"RTN","DGRR557U",10,0)
 ;
"RTN","DGRR557U",11,0)
CHARCHK(STR) ; -- replace xml character limits with entities
"RTN","DGRR557U",12,0)
 NEW A,I,X,Y,Z,NEWSTR
"RTN","DGRR557U",13,0)
 SET (Y,Z)=""
"RTN","DGRR557U",14,0)
 IF STR["&" SET NEWSTR=STR DO  SET STR=Y_Z
"RTN","DGRR557U",15,0)
 . FOR X=1:1  SET Y=Y_$PIECE(NEWSTR,"&",X)_"&amp;",Z=$PIECE(STR,"&",X+1,999) QUIT:Z'["&"
"RTN","DGRR557U",16,0)
 IF STR["<" FOR  SET STR=$PIECE(STR,"<",1)_"&lt;"_$PIECE(STR,"<",2,99) Q:STR'["<"
"RTN","DGRR557U",17,0)
 IF STR[">" FOR  SET STR=$PIECE(STR,">",1)_"&gt;"_$PIECE(STR,">",2,99) Q:STR'[">"
"RTN","DGRR557U",18,0)
 IF STR["'" FOR  SET STR=$PIECE(STR,"'",1)_"&apos;"_$PIECE(STR,"'",2,99) Q:STR'["'"
"RTN","DGRR557U",19,0)
 IF STR["""" FOR  SET STR=$PIECE(STR,"""",1)_"&quot;"_$PIECE(STR,"""",2,99) QUIT:STR'[""""
"RTN","DGRR557U",20,0)
 ;
"RTN","DGRR557U",21,0)
 FOR I=1:1:$LENGTH(STR) DO
"RTN","DGRR557U",22,0)
 . SET X=$EXTRACT(STR,I)
"RTN","DGRR557U",23,0)
 . SET A=$ASCII(X)
"RTN","DGRR557U",24,0)
 . IF A<31 S STR=$P(STR,X,1)_$P(STR,X,2,99)
"RTN","DGRR557U",25,0)
 QUIT STR
"RTN","DGRR557U",26,0)
 ;
"RTN","DGRR557U",27,0)
SITENO() ; institution number, including suffix, from vasite.
"RTN","DGRR557U",28,0)
 Q $P($$SITE^VASITE(),"^",3)
"RTN","DGRR557U",29,0)
 ;
"RTN","DGRR557U",30,0)
SITENAM() ; - Institution name, from vasite
"RTN","DGRR557U",31,0)
 Q $P($$SITE^VASITE(),"^",2)
"RTN","DGRR557U",32,0)
 ;
"RTN","DGRR557U",33,0)
PRODST1() ; Production account status check 1
"RTN","DGRR557U",34,0)
 ; -- Returns 1 if production, 0 if not
"RTN","DGRR557U",35,0)
 N X S X=$G(^XMB("NETNAME"))
"RTN","DGRR557U",36,0)
 Q $L(X,".")=3!($L(X,".")=4&(X[".MED."))
"RTN","DGRR557U",37,0)
 ;
"RTN","DGRR557U",38,0)
PRODST2() ; Production account status check 2
"RTN","DGRR557U",39,0)
 ; -- returns 1 if Default Processing Id from HL COMMUNICATION SERVER PARAMETERS file is Production, 0 if not
"RTN","DGRR557U",40,0)
 Q ($P($$PARAM^HLCS2,"^",3)="P")
"RTN","DGRR557U",41,0)
 ;
"RTN","DGRR557U",42,0)
DOMAIN() ; -- get the default domain
"RTN","DGRR557U",43,0)
 QUIT $$KSP^XUPARAM("WHERE")
"RTN","DGRR557U",44,0)
 ;
"RTN","DGRR557U",45,0)
XMLHDR() ; -- provides current XML standard header 
"RTN","DGRR557U",46,0)
 QUIT "<?xml version=""1.0"" encoding=""utf-8"" ?>"
"RTN","DGRR557U",47,0)
 ;
"RTN","DGRR557U",48,0)
CHKSUM(ARRAY) ;
"RTN","DGRR557U",49,0)
 NEW VAL,ITEM,DATA,CHAR
"RTN","DGRR557U",50,0)
 SET VAL=0
"RTN","DGRR557U",51,0)
 SET ITEM=0
"RTN","DGRR557U",52,0)
 FOR  S ITEM=$ORDER(ARRAY(ITEM)) QUIT:ITEM=""  SET DATA=ARRAY(ITEM) DO
"RTN","DGRR557U",53,0)
 .  FOR CHAR=1:1:$L(DATA) S VAL=($ASCII(DATA,CHAR)*CHAR*ITEM)+VAL
"RTN","DGRR557U",54,0)
 QUIT VAL
"RTN","DGRRPSA1")
0^109^B19753
"RTN","DGRRPSA1",1,0)
DGRRPSA1 ; ALB/SGG - DG R&R PatientServices GET data - return XML ; 09/30/03
"RTN","DGRRPSA1",2,0)
 ;;5.3;Registration;**557**;Aug 13, 1993
"RTN","DGRRPSA1",3,0)
 ;
"RTN","DGRRPSA1",4,0)
DOC ;
"RTN","DGRRPSA1",5,0)
 ; Person Service Demogr
"RTN","DGRRPSA1",6,0)
 ;
"RTN","DGRRPSA1",7,0)
 ;
"RTN","DGRRPSA1",8,0)
 ;
"RTN","DGRRPSA1",9,0)
 ; Call: DO PATIENT^DGRRPSGT(.RESULT,.PARAMS)
"RTN","DGRRPSA1",10,0)
 ; 
"RTN","DGRRPSA1",11,0)
 ; Input Parameters:   (Rq) Required parameter  (Op) Optional parameter
"RTN","DGRRPSA1",12,0)
 ;   
"RTN","DGRRPSA1",13,0)
 ; (Rq) PARAMS("PatientId_Type") =      the three letters "DFN" or "ICN"
"RTN","DGRRPSA1",14,0)
 ; (Rq) PARAMS("PatientId") =           the actual value of the patient DFN or ICN
"RTN","DGRRPSA1",15,0)
 ; (Op) PARAMS(REQUESTED_DATE)=         Date to be used for ADT Movement List - defaults to DT
"RTN","DGRRPSA1",16,0)
 ; (Op) PARAMS("PrimaryDemo") =         0 or 1 to request Primary Demographic Info
"RTN","DGRRPSA1",17,0)
 ; (Op) PARAMS("SecondaryDemo") =       0 or 1 to request Secondary Demographic Info
"RTN","DGRRPSA1",18,0)
 ; (Op) PARAMS("TertiaryDemo") =        0 or 1 to request Tertiary Demographic Info
"RTN","DGRRPSA1",19,0)
 ; (Op) PARAMS("MainAddress") =         0 or 1 to request Main Address Info
"RTN","DGRRPSA1",20,0)
 ; (Op) PARAMS("TemporaryAddress") =    0 or 1 to request Temporary Address Info
"RTN","DGRRPSA1",21,0)
 ; (Op) PARAMS("ConfidentialAddress") = 0 or 1 to request Confidential Address Info
"RTN","DGRRPSA1",22,0)
 ; (Op) PARAMS("ContactInfo") =         0 or 1 to request Contact Information
"RTN","DGRRPSA1",23,0)
 ; (Op) PARAMS("ADTInfo") =             0 or 1 to request ADT Information
"RTN","DGRRPSA1",24,0)
 ; (Op) PARAMS("EnrollEligibility") =   0 or 1 to request Enrollment/Eligibility Information
"RTN","DGRRPSA1",25,0)
 ;           
"RTN","DGRRPSA1",26,0)
 ; -- returns result array that contains XML document containing data for 
"RTN","DGRRPSA1",27,0)
 ;    information requested by input parameters, Plus Identifier, Institution
"RTN","DGRRPSA1",28,0)
 ;    and any Error information.
"RTN","DGRRPSA1",29,0)
 ;
"RTN","DGRRPSA1",30,0)
 ;
"RTN","DGRRPSA1",31,0)
 ; The Primary routine of DGRRPS* is DGRRPSGT (GeT)
"RTN","DGRRPSA1",32,0)
 ;
"RTN","DGRRPSA1",33,0)
 ;
"RTN","DGRRPSA1",34,0)
 ;--------------------------------------------------------------------------------------
"RTN","DGRRPSA1",35,0)
 ;
"RTN","DGRRPSA1",36,0)
 ;note that the DGRRPS* routines have been released as a sub patch to Mark Enfinger's team
"RTN","DGRRPSA1",37,0)
 ;this includes the routines and 'DGRR PATIENT SERVICE QUERY'
"RTN","DGRRPSA1",38,0)
 ;
"RTN","DGRRPSA1",39,0)
 ;
"RTN","DGRRPSA1",40,0)
 QUIT
"RTN","DGRRPSA2")
0^110^B23518
"RTN","DGRRPSA2",1,0)
DGRRPSA2 ; ALB/SGG - DG R&R PatientServices GET data - return XML ; 09/30/03
"RTN","DGRRPSA2",2,0)
 ;;5.3;Registration;**557**;Aug 13, 1993
"RTN","DGRRPSA2",3,0)
 ;
"RTN","DGRRPSA2",4,0)
 ;
"RTN","DGRRPSA2",5,0)
RTNLIST ;
"RTN","DGRRPSA2",6,0)
 ;
"RTN","DGRRPSA2",7,0)
 ; DGRRPSAA  DGRRPSAC  DGRRPSAD  DGRRPSAM  DGRRPSAT  DGRRPSD1  DGRRPSD2  DGRRPSD3
"RTN","DGRRPSA2",8,0)
 ; DGRRPSEE  DGRRPSGT  DGRRPSIC  DGRRPSID  DGRRPSIN  DGRRPSKN  DGRRPSXX
"RTN","DGRRPSA2",9,0)
 ;
"RTN","DGRRPSA2",10,0)
 ;
"RTN","DGRRPSA2",11,0)
 ; PRIMARY PROCESS ROUTINE:
"RTN","DGRRPSA2",12,0)
 ; DGRRPSGT  -  DGRRPSGT receives a request for patient info through vista link
"RTN","DGRRPSA2",13,0)
 ;              This routine then call out to the individual dataset get routines
"RTN","DGRRPSA2",14,0)
 ;              The final XML to be returned is then built in this routine
"RTN","DGRRPSA2",15,0)
 ;              
"RTN","DGRRPSA2",16,0)
 ; DOCUMENTATION:
"RTN","DGRRPSA2",17,0)
 ; DGRRPSA1  -
"RTN","DGRRPSA2",18,0)
 ; DGRRPSA2  -
"RTN","DGRRPSA2",19,0)
 ; 
"RTN","DGRRPSA2",20,0)
 ; INDIVIDUAL DATASET GETTERS:
"RTN","DGRRPSA2",21,0)
 ; 
"RTN","DGRRPSA2",22,0)
 ; DGRRPSAC  - PS Address CONFIDENTIAL DATA SET
"RTN","DGRRPSA2",23,0)
 ; DGRRPSAM  - PS Address MAIN DATA SET
"RTN","DGRRPSA2",24,0)
 ; DGRRPSAT  - PS Address TEMPORARY DATA SET
"RTN","DGRRPSA2",25,0)
 ; 
"RTN","DGRRPSA2",26,0)
 ; DGRRPSD1  - DEMOGRAPHIC DATA SET 1
"RTN","DGRRPSA2",27,0)
 ; DGRRPSD2  - DEMOGRAPHIC DATA SET 2
"RTN","DGRRPSA2",28,0)
 ; DGRRPSD3  - DEMOGRAPHIC DATA SET 3
"RTN","DGRRPSA2",29,0)
 ; 
"RTN","DGRRPSA2",30,0)
 ; DGRRPSAD  - PS ADT DATA SET
"RTN","DGRRPSA2",31,0)
 ; DGRRPSEE  - ENROLLMENT AND ELIGABILITY DATA SET
"RTN","DGRRPSA2",32,0)
 ; DGRRPSIC  - INCOMPETENT DATA SET
"RTN","DGRRPSA2",33,0)
 ; DGRRPSID  - IDENTIFICATION DATA SET
"RTN","DGRRPSA2",34,0)
 ; DGRRPSIN  - INSTITUTION DATA SET
"RTN","DGRRPSA2",35,0)
 ; DGRRPSKN  - Next of Kin DATA SET
"RTN","DGRRPSA2",36,0)
 ; 
"RTN","DGRRPSA2",37,0)
 ; DEVELOPER TEST INFO:
"RTN","DGRRPSA2",38,0)
 ; DGRRPSXX  -
"RTN","DGRRPSA2",39,0)
 ;
"RTN","DGRRPSA2",40,0)
 QUIT
"RTN","DGRRPSAC")
0^7^B14768700
"RTN","DGRRPSAC",1,0)
DGRRPSAC() ; ALB/SGG rtnDGRR PatientServices Address Confidential ; 09/30/03  ; Compiled October 2, 2003 12:40:53
"RTN","DGRRPSAC",2,0)
 ;;5.3;Registration;**557**;Aug 13, 1993
"RTN","DGRRPSAC",3,0)
 ;
"RTN","DGRRPSAC",4,0)
DOC ;<DataSet Name='ConfidentialAddress'
"RTN","DGRRPSAC",5,0)
 ;.1411     CONFIDENTIAL STREET [LINE 1] (FX),               [.141;1]
"RTN","DGRRPSAC",6,0)
 ;.1412     CONFIDENTIAL STREET [LINE 2] (FX)                [.141;2]
"RTN","DGRRPSAC",7,0)
 ;.1413     CONFIDENTIAL STREET [LINE 3] (FX)                [.141;3]
"RTN","DGRRPSAC",8,0)
 ;.1414     CONFIDENTIAL ADDRESS CITY (FX)                   [.141;4]
"RTN","DGRRPSAC",9,0)
 ;.1415     CONFIDENTIAL ADDRESS STATE (P5'X)                [.141;5]
"RTN","DGRRPSAC",10,0)
 ;.1416     CONFIDENTIAL ADDRESS ZIP CODE (FXO)              [.141;6]
"RTN","DGRRPSAC",11,0)
 ;.14111    CONFIDENTIAL ADDRESS COUNTY (NJ3,0OX)            [.141;11]
"RTN","DGRRPSAC",12,0)
 ;.1417     CONFIDENTIAL START DATE (DX)                     [.141;7]
"RTN","DGRRPSAC",13,0)
 ;.1418     CONFIDENTIAL END DATE (DX)                       [.141;8]
"RTN","DGRRPSAC",14,0)
 ;.141      CONFIDENTIAL ADDRESS CATEGORY (Multiple-2.141)   [.14;0]
"RTN","DGRRPSAC",15,0)
 ;     .01  CONFIDENTIAL ADDRESS CATEGORY (MS), [0;1]
"RTN","DGRRPSAC",16,0)
 ;    1     CONFIDENTIAL CATEGORY ACTIVE (S), [0;2]
"RTN","DGRRPSAC",17,0)
 ;          1    CONFIDENTIAL CATEGORY ACTIVE (S)            [0;2]
"RTN","DGRRPSAC",18,0)
 ;               'Y' FOR YES; 
"RTN","DGRRPSAC",19,0)
 ;               'N' FOR NO;
"RTN","DGRRPSAC",20,0)
 ;          .01  CONFIDENTIAL ADDRESS CATEGORY (MS)          [0;1]
"RTN","DGRRPSAC",21,0)
 ;               '1' FOR ELIGIBILITY/ENROLLMENT
"RTN","DGRRPSAC",22,0)
 ;               '2' FOR APPOINTMENT/SCHEDULING
"RTN","DGRRPSAC",23,0)
 ;               '3' FOR COPAYMENTS/VETERAN BILLING
"RTN","DGRRPSAC",24,0)
 ;               '4' FOR MEDICAL RECORDS
"RTN","DGRRPSAC",25,0)
 ;               '5' FOR ALL OTHERS
"RTN","DGRRPSAC",26,0)
 ;
"RTN","DGRRPSAC",27,0)
GETPSARY(PSARRAY) ;
"RTN","DGRRPSAC",28,0)
 NEW CNT
"RTN","DGRRPSAC",29,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="<DataSet Name='ConfidentialAddress'"
"RTN","DGRRPSAC",30,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Street1^"_$$ACSTRE1()
"RTN","DGRRPSAC",31,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Street2^"_$$ACSTRE2()
"RTN","DGRRPSAC",32,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Street3^"_$$ACSTRE3()
"RTN","DGRRPSAC",33,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^City^"_$$ACCITY()
"RTN","DGRRPSAC",34,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^State^"_$$ACSTATE()
"RTN","DGRRPSAC",35,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Zip^"_$$ACZIP()
"RTN","DGRRPSAC",36,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^County^"_$$ACCOUNTY()
"RTN","DGRRPSAC",37,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^StartDate^"_$$ACSTDATE()
"RTN","DGRRPSAC",38,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^EndDate^"_$$ACENDATE()
"RTN","DGRRPSAC",39,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^BadAddressIndicator^"
"RTN","DGRRPSAC",40,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^ConfidentialAddressActive^"
"RTN","DGRRPSAC",41,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^PhoneNumber^"
"RTN","DGRRPSAC",42,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^HomePhoneNumber^"
"RTN","DGRRPSAC",43,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^WorkPhoneNumber^"
"RTN","DGRRPSAC",44,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)=">"
"RTN","DGRRPSAC",45,0)
 DO ACCAC
"RTN","DGRRPSAC",46,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="</DataSet>"_"^^^1"
"RTN","DGRRPSAC",47,0)
 QUIT
"RTN","DGRRPSAC",48,0)
 ;
"RTN","DGRRPSAC",49,0)
ACSTRE1() ;
"RTN","DGRRPSAC",50,0)
 QUIT $P(GLOB(.141),"^",1)
"RTN","DGRRPSAC",51,0)
 ;
"RTN","DGRRPSAC",52,0)
ACSTRE2() ;
"RTN","DGRRPSAC",53,0)
 QUIT $P(GLOB(.141),"^",2)
"RTN","DGRRPSAC",54,0)
 ;
"RTN","DGRRPSAC",55,0)
ACSTRE3() ;
"RTN","DGRRPSAC",56,0)
 QUIT $P(GLOB(.141),"^",3)
"RTN","DGRRPSAC",57,0)
 ;
"RTN","DGRRPSAC",58,0)
ACCITY() ;
"RTN","DGRRPSAC",59,0)
 QUIT $P(GLOB(.141),"^",4)
"RTN","DGRRPSAC",60,0)
 ;
"RTN","DGRRPSAC",61,0)
ACSTATE() ;
"RTN","DGRRPSAC",62,0)
 NEW DATA
"RTN","DGRRPSAC",63,0)
 SET DATA=$P(GLOB(.141),"^",5)
"RTN","DGRRPSAC",64,0)
 QUIT $S(DATA="":"",1:$P($G(^DIC(5,DATA,0)),"^",2))
"RTN","DGRRPSAC",65,0)
 ;
"RTN","DGRRPSAC",66,0)
ACZIP() ;
"RTN","DGRRPSAC",67,0)
 QUIT $P(GLOB(.141),"^",6)
"RTN","DGRRPSAC",68,0)
 ;
"RTN","DGRRPSAC",69,0)
ACCOUNTY() ;
"RTN","DGRRPSAC",70,0)
 N DATA,STATE
"RTN","DGRRPSAC",71,0)
 SET STATE=$P(GLOB(.141),"^",5)
"RTN","DGRRPSAC",72,0)
 SET DATA=$P(GLOB(.141),"^",11)
"RTN","DGRRPSAC",73,0)
 IF DATA'="",STATE'="" SET DATA=$P($G(^DIC(5,STATE,1,DATA,0)),"^",1)
"RTN","DGRRPSAC",74,0)
 QUIT DATA
"RTN","DGRRPSAC",75,0)
 ;
"RTN","DGRRPSAC",76,0)
ACSTDATE() ;
"RTN","DGRRPSAC",77,0)
 QUIT $P(GLOB(.141),"^",7)
"RTN","DGRRPSAC",78,0)
 ;
"RTN","DGRRPSAC",79,0)
ACENDATE() ;
"RTN","DGRRPSAC",80,0)
 QUIT $P(GLOB(.141),"^",8)
"RTN","DGRRPSAC",81,0)
 ;
"RTN","DGRRPSAC",82,0)
ACCAC ;
"RTN","DGRRPSAC",83,0)
 NEW CACCNT,ROWCNT,CAC,CACACT,DATA
"RTN","DGRRPSAC",84,0)
 SET CACCNT=0,ROWCNT=0
"RTN","DGRRPSAC",85,0)
 FOR  SET CACCNT=$O(GLOB(.14,CACCNT)) QUIT:'+CACCNT  DO
"RTN","DGRRPSAC",86,0)
 .SET DATA=$P($G(GLOB(.14,CACCNT,0)),"^",1)
"RTN","DGRRPSAC",87,0)
 .SET CAC=$S(DATA=1:"ELIGIBILITY/ENROLLMENT",DATA=2:"APPOINTMENT/SCHEDULING",DATA=3:"COPAYMENTS/VETERAN BILLING",DATA=4:"MEDICAL RECORDS",DATA=5:"ALL OTHERS",1:"")
"RTN","DGRRPSAC",88,0)
 .SET CACACT=$S($P($G(GLOB(.14,CACCNT,0)),"^",2)="Y":"TRUE",$P($G(GLOB(.14,CACCNT,0)),"^",2)="N":"FALSE",1:"")
"RTN","DGRRPSAC",89,0)
 .SET ROWCNT=ROWCNT+1
"RTN","DGRRPSAC",90,0)
 .SET CNT=$G(CNT)+1,PSARRAY(CNT)="<ConfidentialAddressCategory Row='"_ROWCNT_"'"
"RTN","DGRRPSAC",91,0)
 .SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Category^"_CAC
"RTN","DGRRPSAC",92,0)
 .SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Active^"_CACACT
"RTN","DGRRPSAC",93,0)
 .SET CNT=$G(CNT)+1,PSARRAY(CNT)="></ConfidentialAddressCategory>"
"RTN","DGRRPSAC",94,0)
 IF ROWCNT=0 DO
"RTN","DGRRPSAC",95,0)
 .SET CNT=$G(CNT)+1,PSARRAY(CNT)="<ConfidentialAddressCategory Row='1' Category='' Active=''></ConfidentialAddressCategory>"
"RTN","DGRRPSAC",96,0)
 QUIT
"RTN","DGRRPSAD")
0^20^B46488983
"RTN","DGRRPSAD",1,0)
DGRRPSAD ; ALB/SGG - rtnDGRR PatientServices ADT Information ;09/30/03  ; Compiled December 9, 2003 15:22:22
"RTN","DGRRPSAD",2,0)
 ;;5.3;Registration;**557**;Aug 13, 1993
"RTN","DGRRPSAD",3,0)
 ;
"RTN","DGRRPSAD",4,0)
DOC ;<DataSet Name='ADT'
"RTN","DGRRPSAD",5,0)
 ;
"RTN","DGRRPSAD",6,0)
 ;.102      CURRENT MOVEMENT (*P405'), [.102;1]
"RTN","DGRRPSAD",7,0)
 ;           FILE (#405) PATIENT MOVEMENT STORED IN: ^DGPM(
"RTN","DGRRPSAD",8,0)
 ;                 .01       DATE/TIME (RDX), [0;1]
"RTN","DGRRPSAD",9,0)
 ;                 
"RTN","DGRRPSAD",10,0)
 ;.1        WARD LOCATION (FX), [.1;E1,30]
"RTN","DGRRPSAD",11,0)
 ;.101      ROOM-BED (F), [.101;1]    
"RTN","DGRRPSAD",12,0)
 ;.103      TREATING SPECIALTY (P45.7'), [.103;1]
"RTN","DGRRPSAD",13,0)
 ;.104      PROVIDER (*P200'), [.104;1]
"RTN","DGRRPSAD",14,0)
 ;.1041     ATTENDING PHYSICIAN (*P200'), [.1041;1]
"RTN","DGRRPSAD",15,0)
 ;.105      CURRENT ADMISSION (*P405'), [.105;1]   
"RTN","DGRRPSAD",16,0)
 ;.107      LODGER WARD LOCATION (F), [.107;1]     ; LODGER ONLY
"RTN","DGRRPSAD",17,0)
 ;.108      CURRENT ROOM (P405.4'), [.108;1]       ; LODGER ONLY
"RTN","DGRRPSAD",18,0)
 ;          ^DG(405.4
"RTN","DGRRPSAD",19,0)
 ;          PREVIOUS DISCHARGE DATE                ; NON CURRENT NON LODGER
"RTN","DGRRPSAD",20,0)
 ;
"RTN","DGRRPSAD",21,0)
 ;
"RTN","DGRRPSAD",22,0)
 ;A DIFFERENT LOGIC HAS BEEN ADOPTED FOR THE ADT DATASET
"RTN","DGRRPSAD",23,0)
 ;
"RTN","DGRRPSAD",24,0)
 ;USING IN5^VADPT:
"RTN","DGRRPSAD",25,0)
 ;   first CALL IN5^VADPT for CURRENT INFO based on the requested
"RTN","DGRRPSAD",26,0)
 ;   date passed to RPC.  If no date sent, defaults to current date.
"RTN","DGRRPSAD",27,0)
 ;   if no CURRENT CALL IN5^VADPT for LODGER INFO
"RTN","DGRRPSAD",28,0)
 ;   if no LODGER INFO CALL IN5^VADPT for LAST DISCHARGE DATE
"RTN","DGRRPSAD",29,0)
 ;
"RTN","DGRRPSAD",30,0)
 ;Rows of ADT movements associated with the admission are also returned.
"RTN","DGRRPSAD",31,0)
 ;See BLD for list of data elements returned for each movement.
"RTN","DGRRPSAD",32,0)
 ;   
"RTN","DGRRPSAD",33,0)
GETPSARY(PSARRAY,REQDT) ;
"RTN","DGRRPSAD",34,0)
 ;
"RTN","DGRRPSAD",35,0)
 ; GET CURRENT MOVEMENT DATA FROM IN5^VADPT
"RTN","DGRRPSAD",36,0)
 NEW INDATA,VAIP,VAINDT,DFN,VAROOT,VAHOW,ADTTYPE
"RTN","DGRRPSAD",37,0)
 SET DFN=PTID
"RTN","DGRRPSAD",38,0)
CURRENT K INDATA,VAIP,VAINDT
"RTN","DGRRPSAD",39,0)
 SET VAROOT="INDATA",VAHOW=2
"RTN","DGRRPSAD",40,0)
 DO IN5^VADPT SET ADTTYPE="CURRENT"
"RTN","DGRRPSAD",41,0)
LODGER IF $P($G(INDATA(1)),"^",1)="" DO  ; NO CURRENT DO LODGER
"RTN","DGRRPSAD",42,0)
 .KILL INDATA,VAIP,VAINDT
"RTN","DGRRPSAD",43,0)
 .SET VAROOT="INDATA",VAHOW=2,VAIP("L")=""
"RTN","DGRRPSAD",44,0)
 .DO IN5^VADPT SET ADTTYPE="LODGER"
"RTN","DGRRPSAD",45,0)
LAST IF $P($G(INDATA(1)),"^",1)="" DO  ; NO CURRENT AND NO LODGER DO PREVIOUS
"RTN","DGRRPSAD",46,0)
 .K INDATA,VAIP,VAINDT
"RTN","DGRRPSAD",47,0)
 .SET VAROOT="INDATA",VAHOW=2,VAIP("D")="LAST"
"RTN","DGRRPSAD",48,0)
 .DO IN5^VADPT SET ADTTYPE="DISCHARGE"
"RTN","DGRRPSAD",49,0)
 ;
"RTN","DGRRPSAD",50,0)
 NEW CNT
"RTN","DGRRPSAD",51,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="<DataSet Name='ADT'"
"RTN","DGRRPSAD",52,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^RequestDate^"_DT
"RTN","DGRRPSAD",53,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^CurrentMovement^"_$$CURMOVE()
"RTN","DGRRPSAD",54,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^WardLocation^"_$$WARDLOC()
"RTN","DGRRPSAD",55,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Service^"_$$SERVICE()
"RTN","DGRRPSAD",56,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^RoomBed^"_$$ROOMBED()
"RTN","DGRRPSAD",57,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^TreatingSpecialty^"_$$TRETSPC()
"RTN","DGRRPSAD",58,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Provider^"_$$PROVIDE()
"RTN","DGRRPSAD",59,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^AttendingPhysician^"_$$ATTPHY()
"RTN","DGRRPSAD",60,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^CurrentAdmission^"_$$CURADM()
"RTN","DGRRPSAD",61,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^TransactionType^"_$$TRANSTYP()
"RTN","DGRRPSAD",62,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^MovementType^"_$$MVTTYP()
"RTN","DGRRPSAD",63,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^LastAdmissionDate^"_$$LASTADM()
"RTN","DGRRPSAD",64,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^LodgerWardLocation^"_$$LODWLOC()
"RTN","DGRRPSAD",65,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^LodgerRoom^"_$$LODROOM()
"RTN","DGRRPSAD",66,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^DischargeDate^"_$$DISDATE()
"RTN","DGRRPSAD",67,0)
 D ADTC(REQDT,.CNT)
"RTN","DGRRPSAD",68,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="></DataSet>"_"^^^1"
"RTN","DGRRPSAD",69,0)
 QUIT
"RTN","DGRRPSAD",70,0)
 ;
"RTN","DGRRPSAD",71,0)
ADTC(ADTDT,CNT) ;ADT Collection of all movements associated with a specifed date
"RTN","DGRRPSAD",72,0)
 NEW ROWCNT
"RTN","DGRRPSAD",73,0)
 K VAIP,VAROOT,INDATA,VAHOW
"RTN","DGRRPSAD",74,0)
 SET ADTDT=$S($G(ADTDT)'="":ADTDT\1,1:DT)
"RTN","DGRRPSAD",75,0)
 SET ROWCNT=0
"RTN","DGRRPSAD",76,0)
 SET VAIP("D")=ADTDT
"RTN","DGRRPSAD",77,0)
 SET VAIP("M")=0
"RTN","DGRRPSAD",78,0)
 SET VAIP("L")=""
"RTN","DGRRPSAD",79,0)
 DO IN5^VADPT
"RTN","DGRRPSAD",80,0)
 IF VAIP(1)'="" DO
"RTN","DGRRPSAD",81,0)
 . NEW DGRRMIEN,DGRRCA,DGRRMVDT
"RTN","DGRRPSAD",82,0)
 . SET DGRRCA=VAIP(1)
"RTN","DGRRPSAD",83,0)
 . K ^TMP($J,"DGRRMVTS")
"RTN","DGRRPSAD",84,0)
 . SET DGRRMIEN=""
"RTN","DGRRPSAD",85,0)
 . F  SET DGRRMIEN=$O(^DGPM("CA",+DGRRCA,DGRRMIEN)) Q:DGRRMIEN=""  D
"RTN","DGRRPSAD",86,0)
 ..; Set up TMP global to assure movements are in date/time order
"RTN","DGRRPSAD",87,0)
 ..S DGRRMVDT=+$P($G(^DGPM(+DGRRMIEN,0)),"^")
"RTN","DGRRPSAD",88,0)
 ..I DGRRMVDT>0 S ^TMP($J,"DGRRMVTS",DGRRMVDT,DGRRMIEN)=""
"RTN","DGRRPSAD",89,0)
 . ;Loop through TMP global
"RTN","DGRRPSAD",90,0)
 .N DGRRMDT,DGRRIEN
"RTN","DGRRPSAD",91,0)
 .S DGRRMDT=""
"RTN","DGRRPSAD",92,0)
 .F  S DGRRMDT=$O(^TMP($J,"DGRRMVTS",DGRRMDT)) Q:DGRRMDT=""  D
"RTN","DGRRPSAD",93,0)
 .. S DGRRIEN=""
"RTN","DGRRPSAD",94,0)
 .. F  S DGRRIEN=$O(^TMP($J,"DGRRMVTS",DGRRMDT,DGRRIEN)) Q:DGRRIEN=""  D
"RTN","DGRRPSAD",95,0)
 ... K INDATA,VAROOT,VAIP
"RTN","DGRRPSAD",96,0)
 ... SET ROWCNT=$G(ROWCNT)+1
"RTN","DGRRPSAD",97,0)
 ... SET VAIP("E")=DGRRIEN
"RTN","DGRRPSAD",98,0)
 ... SET VAROOT="INDATA"
"RTN","DGRRPSAD",99,0)
 ... DO IN5^VADPT
"RTN","DGRRPSAD",100,0)
 ... S ADTTYPE=$S(+$G(INDATA(2))=4!(+$G(INDATA(2))=5):"LODGER",+$G(INDATA(2))=3:"DISCHARGE",1:"CURRENT")
"RTN","DGRRPSAD",101,0)
 ... DO BLD
"RTN","DGRRPSAD",102,0)
 .K ^TMP($J,"DGRRMVTS")
"RTN","DGRRPSAD",103,0)
 IF ROWCNT=0 D
"RTN","DGRRPSAD",104,0)
 .SET ROWCNT=ROWCNT+1
"RTN","DGRRPSAD",105,0)
 .DO BLD
"RTN","DGRRPSAD",106,0)
 Q
"RTN","DGRRPSAD",107,0)
 ;
"RTN","DGRRPSAD",108,0)
BLD ;Build array of data elements for each movement.  Similar to elements
"RTN","DGRRPSAD",109,0)
 ;defined for current inpatient and lodger activity.  The word 'current'
"RTN","DGRRPSAD",110,0)
 ;removed from element names. 
"RTN","DGRRPSAD",111,0)
 ;
"RTN","DGRRPSAD",112,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="><ADTMovements Row='"_ROWCNT_"'"
"RTN","DGRRPSAD",113,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^RequestDate^"_ADTDT
"RTN","DGRRPSAD",114,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^MovementDate^"_$$CURMOVE()
"RTN","DGRRPSAD",115,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^WardLocation^"_$$WARDLOC()
"RTN","DGRRPSAD",116,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Service^"_$$SERVICE()
"RTN","DGRRPSAD",117,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^RoomBed^"_$$ROOMBED()
"RTN","DGRRPSAD",118,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^TreatingSpecialty^"_$$TRETSPC()
"RTN","DGRRPSAD",119,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Provider^"_$$PROVIDE()
"RTN","DGRRPSAD",120,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^AttendingPhysician^"_$$ATTPHY()
"RTN","DGRRPSAD",121,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^AdmissionDate^"_$$CURADM()
"RTN","DGRRPSAD",122,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^TransactionType^"_$$TRANSTYP()
"RTN","DGRRPSAD",123,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^MovementType^"_$$MVTTYP()
"RTN","DGRRPSAD",124,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^LodgerWardLocation^"_$$LODWLOC()
"RTN","DGRRPSAD",125,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^LodgerRoom^"_$$LODROOM()
"RTN","DGRRPSAD",126,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^DischargeDate^"_$$DISDATE()
"RTN","DGRRPSAD",127,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="></ADTMovements"
"RTN","DGRRPSAD",128,0)
 Q
"RTN","DGRRPSAD",129,0)
CURMOVE() ;
"RTN","DGRRPSAD",130,0)
 NEW DATA
"RTN","DGRRPSAD",131,0)
 SET DATA=""
"RTN","DGRRPSAD",132,0)
 IF ADTTYPE'="DISCHARGE" SET DATA=$P($G(INDATA(3)),"^",1)
"RTN","DGRRPSAD",133,0)
 QUIT DATA
"RTN","DGRRPSAD",134,0)
 ;
"RTN","DGRRPSAD",135,0)
WARDLOC() ;
"RTN","DGRRPSAD",136,0)
 NEW DATA
"RTN","DGRRPSAD",137,0)
 SET DATA=""
"RTN","DGRRPSAD",138,0)
 IF ADTTYPE="CURRENT" SET DATA=$P($G(INDATA(5)),"^",2)
"RTN","DGRRPSAD",139,0)
 QUIT DATA
"RTN","DGRRPSAD",140,0)
 ;
"RTN","DGRRPSAD",141,0)
SERVICE() ;
"RTN","DGRRPSAD",142,0)
 NEW DATA
"RTN","DGRRPSAD",143,0)
 SET DATA=""
"RTN","DGRRPSAD",144,0)
 IF ADTTYPE="CURRENT" SET DATA=$P($G(INDATA(5)),"^",1)
"RTN","DGRRPSAD",145,0)
 IF ADTTYPE="CURRENT" SET DATA=$P($G(^DIC(42,+DATA,0)),"^",3)
"RTN","DGRRPSAD",146,0)
 IF ADTTYPE="DISCHARGE" SET DATA=$P($G(INDATA(17,4)),"^",1)
"RTN","DGRRPSAD",147,0)
 IF ADTTYPE="DISCHARGE" SET DATA=$P($G(^DIC(42,+DATA,0)),"^",3)
"RTN","DGRRPSAD",148,0)
 QUIT DATA
"RTN","DGRRPSAD",149,0)
 ;
"RTN","DGRRPSAD",150,0)
ROOMBED() ;
"RTN","DGRRPSAD",151,0)
 NEW DATA
"RTN","DGRRPSAD",152,0)
 SET DATA=""
"RTN","DGRRPSAD",153,0)
 IF ADTTYPE="CURRENT" SET DATA=$P($G(INDATA(6)),"^",2)
"RTN","DGRRPSAD",154,0)
 QUIT DATA
"RTN","DGRRPSAD",155,0)
 ;
"RTN","DGRRPSAD",156,0)
TRETSPC() ;
"RTN","DGRRPSAD",157,0)
 NEW DATA
"RTN","DGRRPSAD",158,0)
 SET DATA=""
"RTN","DGRRPSAD",159,0)
 IF ADTTYPE'="DISCHARGE" SET DATA=$P($G(INDATA(8)),"^",2)
"RTN","DGRRPSAD",160,0)
 QUIT DATA
"RTN","DGRRPSAD",161,0)
 ;
"RTN","DGRRPSAD",162,0)
PROVIDE() ;
"RTN","DGRRPSAD",163,0)
 NEW DATA
"RTN","DGRRPSAD",164,0)
 SET DATA=""
"RTN","DGRRPSAD",165,0)
 IF ADTTYPE'="DISCHARGE" SET DATA=$P($G(INDATA(7)),"^",2)
"RTN","DGRRPSAD",166,0)
 QUIT DATA
"RTN","DGRRPSAD",167,0)
 ;
"RTN","DGRRPSAD",168,0)
ATTPHY() ;
"RTN","DGRRPSAD",169,0)
 NEW DATA
"RTN","DGRRPSAD",170,0)
 SET DATA=""
"RTN","DGRRPSAD",171,0)
 IF ADTTYPE'="DISCHARGE" SET DATA=$P($G(INDATA(18)),"^",2)
"RTN","DGRRPSAD",172,0)
 QUIT DATA
"RTN","DGRRPSAD",173,0)
 ;
"RTN","DGRRPSAD",174,0)
CURADM() ;
"RTN","DGRRPSAD",175,0)
 NEW DATA
"RTN","DGRRPSAD",176,0)
 SET DATA=""
"RTN","DGRRPSAD",177,0)
 IF ADTTYPE'="DISCHARGE" SET DATA=$P($G(INDATA(13,1)),"^",1)
"RTN","DGRRPSAD",178,0)
 QUIT DATA
"RTN","DGRRPSAD",179,0)
 ;
"RTN","DGRRPSAD",180,0)
TRANSTYP() ;
"RTN","DGRRPSAD",181,0)
 NEW DATA
"RTN","DGRRPSAD",182,0)
 SET DATA=""
"RTN","DGRRPSAD",183,0)
 I ADTTYPE'="DISCHARGE" SET DATA=$P($G(INDATA(2)),"^",2)
"RTN","DGRRPSAD",184,0)
 I ADTTYPE="DISCHARGE" SET DATA=$P($G(INDATA(17,2)),"^",2)
"RTN","DGRRPSAD",185,0)
 QUIT DATA
"RTN","DGRRPSAD",186,0)
 ;
"RTN","DGRRPSAD",187,0)
MVTTYP() ;
"RTN","DGRRPSAD",188,0)
 NEW DATA
"RTN","DGRRPSAD",189,0)
 SET DATA=""
"RTN","DGRRPSAD",190,0)
 I ADTTYPE'="DISCHARGE" SET DATA=$P($G(INDATA(4)),"^",2)
"RTN","DGRRPSAD",191,0)
 I ADTTYPE="DISCHARGE" SET DATA=$P($G(INDATA(17,3)),"^",2)
"RTN","DGRRPSAD",192,0)
 QUIT DATA
"RTN","DGRRPSAD",193,0)
 ;
"RTN","DGRRPSAD",194,0)
LASTADM() ;
"RTN","DGRRPSAD",195,0)
 NEW DATA
"RTN","DGRRPSAD",196,0)
 SET DATA=""
"RTN","DGRRPSAD",197,0)
 IF ADTTYPE="DISCHARGE" SET DATA=$P($G(INDATA(13,1)),"^",1)
"RTN","DGRRPSAD",198,0)
 QUIT DATA
"RTN","DGRRPSAD",199,0)
 ;
"RTN","DGRRPSAD",200,0)
LODWLOC() ;
"RTN","DGRRPSAD",201,0)
 NEW DATA
"RTN","DGRRPSAD",202,0)
 SET DATA=""
"RTN","DGRRPSAD",203,0)
 IF ADTTYPE="LODGER" SET DATA=$P($G(INDATA(5)),"^",2)
"RTN","DGRRPSAD",204,0)
 QUIT DATA
"RTN","DGRRPSAD",205,0)
 ;
"RTN","DGRRPSAD",206,0)
LODROOM() ;
"RTN","DGRRPSAD",207,0)
 NEW DATA
"RTN","DGRRPSAD",208,0)
 SET DATA=""
"RTN","DGRRPSAD",209,0)
 IF ADTTYPE="LODGER" SET DATA=$P($G(INDATA(6)),"^",2)
"RTN","DGRRPSAD",210,0)
 QUIT DATA
"RTN","DGRRPSAD",211,0)
 ;
"RTN","DGRRPSAD",212,0)
DISDATE() ;
"RTN","DGRRPSAD",213,0)
 NEW DATA
"RTN","DGRRPSAD",214,0)
 SET DATA=""
"RTN","DGRRPSAD",215,0)
 IF ADTTYPE="DISCHARGE" SET DATA=$P($G(INDATA(17,1)),"^",1)
"RTN","DGRRPSAD",216,0)
 QUIT DATA
"RTN","DGRRPSAM")
0^8^B7822716
"RTN","DGRRPSAM",1,0)
DGRRPSAM ; ALB/SGG - rtnDGRR PatientServices Address Main ; 09/30/03  ; Compiled October 2, 2003 16:00:54
"RTN","DGRRPSAM",2,0)
 ;;5.3;Registration;**557**;Aug 13, 1993
"RTN","DGRRPSAM",3,0)
 ;
"RTN","DGRRPSAM",4,0)
DOC ;<DataSet Name='MainAddress'
"RTN","DGRRPSAM",5,0)
 ;.111      STREET ADDRESS [LINE 1] (Fa), [.11;1]
"RTN","DGRRPSAM",6,0)
 ;.112      STREET ADDRESS [LINE 2] (Fa), [.11;2]
"RTN","DGRRPSAM",7,0)
 ;.113      STREET ADDRESS [LINE 3] (Fa), [.11;3]
"RTN","DGRRPSAM",8,0)
 ;.114      CITY (Fa), [.11;4]
"RTN","DGRRPSAM",9,0)
 ;.115      STATE (P5'a), [.11;5]
"RTN","DGRRPSAM",10,0)
 ;.116      ZIP CODE (F), [.11;6]
"RTN","DGRRPSAM",11,0)
 ;     .1112     ZIP+4 (FXOa), [.11;12]
"RTN","DGRRPSAM",12,0)
 ;.117      COUNTY (NJ3,0XOa), [.11;7]
"RTN","DGRRPSAM",13,0)
 ;.121      BAD ADDRESS INDICATOR (S), [.11;16]
"RTN","DGRRPSAM",14,0)
 ;           '1' FOR UNDELIVERABLE;
"RTN","DGRRPSAM",15,0)
 ;           '2' FOR HOMELESS; 
"RTN","DGRRPSAM",16,0)
 ;           '3' FOR OTHER;
"RTN","DGRRPSAM",17,0)
 ;.14105    CONFIDENTIAL ADDRESS ACTIVE? (RSX), [.141;9]
"RTN","DGRRPSAM",18,0)
 ;.131      PHONE NUMBER [RESIDENCE] (Fa), [.13;1]
"RTN","DGRRPSAM",19,0)
 ;.132      PHONE NUMBER [WORK] (Fa), [.13;2]
"RTN","DGRRPSAM",20,0)
 ;
"RTN","DGRRPSAM",21,0)
GETPSARY(PSARRAY) ;
"RTN","DGRRPSAM",22,0)
 NEW CNT
"RTN","DGRRPSAM",23,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="<DataSet Name='MainAddress'"
"RTN","DGRRPSAM",24,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Street1^"_$$AMSTRE1()
"RTN","DGRRPSAM",25,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Street2^"_$$AMSTRE2()
"RTN","DGRRPSAM",26,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Street3^"_$$AMSTRE3()
"RTN","DGRRPSAM",27,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^City^"_$$AMCITY()
"RTN","DGRRPSAM",28,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^State^"_$$AMSTATE()
"RTN","DGRRPSAM",29,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Zip^"_$$AMZIP()
"RTN","DGRRPSAM",30,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^County^"_$$AMCOUNTY()
"RTN","DGRRPSAM",31,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^StartDate^"
"RTN","DGRRPSAM",32,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^EndDate^"
"RTN","DGRRPSAM",33,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^BadAddressIndicator^"_$$AMBADIND()
"RTN","DGRRPSAM",34,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^ConfidentialAddressActive^"_$$AMCNFAC()
"RTN","DGRRPSAM",35,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^PhoneNumber^"
"RTN","DGRRPSAM",36,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^HomePhoneNumber^"_$$AMPHNHM()
"RTN","DGRRPSAM",37,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^WorkPhoneNumber^"_$$AMPHNWK()
"RTN","DGRRPSAM",38,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="></DataSet>"_"^^^1"
"RTN","DGRRPSAM",39,0)
 QUIT
"RTN","DGRRPSAM",40,0)
 ;
"RTN","DGRRPSAM",41,0)
AMSTRE1() ;
"RTN","DGRRPSAM",42,0)
 QUIT $P(GLOB(.11),"^",1)
"RTN","DGRRPSAM",43,0)
 ;
"RTN","DGRRPSAM",44,0)
AMSTRE2() ;
"RTN","DGRRPSAM",45,0)
 QUIT $P(GLOB(.11),"^",2)
"RTN","DGRRPSAM",46,0)
 ;
"RTN","DGRRPSAM",47,0)
AMSTRE3() ;
"RTN","DGRRPSAM",48,0)
 QUIT $P(GLOB(.11),"^",3)
"RTN","DGRRPSAM",49,0)
 ;
"RTN","DGRRPSAM",50,0)
AMCITY() ;
"RTN","DGRRPSAM",51,0)
 QUIT $P(GLOB(.11),"^",4)
"RTN","DGRRPSAM",52,0)
 ;
"RTN","DGRRPSAM",53,0)
AMSTATE() ;
"RTN","DGRRPSAM",54,0)
 NEW DATA
"RTN","DGRRPSAM",55,0)
 SET DATA=$P(GLOB(.11),"^",5)
"RTN","DGRRPSAM",56,0)
 IF DATA'="" SET DATA=$P($G(^DIC(5,DATA,0)),"^",2)
"RTN","DGRRPSAM",57,0)
 QUIT DATA
"RTN","DGRRPSAM",58,0)
 ;
"RTN","DGRRPSAM",59,0)
AMZIP() ;
"RTN","DGRRPSAM",60,0)
 NEW DATA
"RTN","DGRRPSAM",61,0)
 SET DATA=$P(GLOB(.11),"^",12)
"RTN","DGRRPSAM",62,0)
 IF DATA="" SET DATA=$P(GLOB(.11),"^",6)
"RTN","DGRRPSAM",63,0)
 QUIT DATA
"RTN","DGRRPSAM",64,0)
 ;
"RTN","DGRRPSAM",65,0)
AMCOUNTY() ;
"RTN","DGRRPSAM",66,0)
 NEW DATA,STATE
"RTN","DGRRPSAM",67,0)
 SET STATE=$P(GLOB(.11),"^",5)
"RTN","DGRRPSAM",68,0)
 SET DATA=$P(GLOB(.11),"^",7)
"RTN","DGRRPSAM",69,0)
 IF DATA'="",STATE'="" SET DATA=$P($G(^DIC(5,STATE,1,DATA,0)),"^",1)
"RTN","DGRRPSAM",70,0)
 QUIT DATA
"RTN","DGRRPSAM",71,0)
 ;
"RTN","DGRRPSAM",72,0)
AMBADIND() ;
"RTN","DGRRPSAM",73,0)
 NEW DATA
"RTN","DGRRPSAM",74,0)
 SET DATA=$P(GLOB(.11),"^",16)
"RTN","DGRRPSAM",75,0)
 SET DATA=$S(DATA=1:"UNDELIVERABLE",DATA=2:"HOMELESS",DATA=3:"OTHER",1:"")
"RTN","DGRRPSAM",76,0)
 QUIT DATA
"RTN","DGRRPSAM",77,0)
 ;
"RTN","DGRRPSAM",78,0)
AMCNFAC() ;
"RTN","DGRRPSAM",79,0)
 NEW DATA
"RTN","DGRRPSAM",80,0)
 SET DATA=$P(GLOB(.141),"^",9)
"RTN","DGRRPSAM",81,0)
 SET DATA=$S(DATA="Y":"YES",1:"NO")
"RTN","DGRRPSAM",82,0)
 QUIT DATA
"RTN","DGRRPSAM",83,0)
 ;
"RTN","DGRRPSAM",84,0)
AMPHNHM() ;
"RTN","DGRRPSAM",85,0)
 QUIT $P(GLOB(.13),"^",1)
"RTN","DGRRPSAM",86,0)
 ;
"RTN","DGRRPSAM",87,0)
AMPHNWK() ;
"RTN","DGRRPSAM",88,0)
 QUIT $P(GLOB(.13),"^",2)
"RTN","DGRRPSAT")
0^9^B6432723
"RTN","DGRRPSAT",1,0)
DGRRPSAT ; ALB/SGG rtnDGRR PatientServices Address Temporary ; 09/30/03  ; Compiled October 2, 2003 12:40:44
"RTN","DGRRPSAT",2,0)
 ;;5.3;Registration;**557**;Aug 13, 1993
"RTN","DGRRPSAT",3,0)
 ;
"RTN","DGRRPSAT",4,0)
DOC ;<DataSet Name='TempAddress'
"RTN","DGRRPSAT",5,0)
 ;.1211     TEMPORARY STREET [LINE 1] (FX), [.121;1]
"RTN","DGRRPSAT",6,0)
 ;.1212     TEMPORARY STREET [LINE 2] (FX), [.121;2]
"RTN","DGRRPSAT",7,0)
 ;.1213     TEMPORARY STREET [LINE 3] (FX), [.121;3]
"RTN","DGRRPSAT",8,0)
 ;.1214     TEMPORARY CITY (FX), [.121;4]
"RTN","DGRRPSAT",9,0)
 ;.1215     TEMPORARY STATE (P5'X), [.121;5]
"RTN","DGRRPSAT",10,0)
 ;.1216     TEMPORARY ZIP CODE (FX), [.121;6]
"RTN","DGRRPSAT",11,0)
 ;          .12112    TEMPORARY ZIP+4 (FOX), [.121;12]
"RTN","DGRRPSAT",12,0)
 ;.12111    TEMPORARY ADDRESS COUNTY (NJ3,0XO), [.121;11]
"RTN","DGRRPSAT",13,0)
 ;.1217     TEMPORARY ADDRESS START DATE (DX), [.121;7]
"RTN","DGRRPSAT",14,0)
 ;.1218     TEMPORARY ADDRESS END DATE (DX), [.121;8]
"RTN","DGRRPSAT",15,0)
 ;.1219     TEMPORARY PHONE NUMBER (FX), [.121;10]
"RTN","DGRRPSAT",16,0)
 ;
"RTN","DGRRPSAT",17,0)
 ;
"RTN","DGRRPSAT",18,0)
 ;
"RTN","DGRRPSAT",19,0)
GETPSARY(PSARRAY) ;
"RTN","DGRRPSAT",20,0)
 NEW CNT
"RTN","DGRRPSAT",21,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="<DataSet Name='TemporaryAddress'"
"RTN","DGRRPSAT",22,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Street1^"_$$ATSTRE1()
"RTN","DGRRPSAT",23,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Street2^"_$$ATSTRE2()
"RTN","DGRRPSAT",24,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Street3^"_$$ATSTRE3()
"RTN","DGRRPSAT",25,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^City^"_$$ATCITY()
"RTN","DGRRPSAT",26,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^State^"_$$ATSTATE()
"RTN","DGRRPSAT",27,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Zip^"_$$ATZIP()
"RTN","DGRRPSAT",28,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^County^"_$$ATCOUNTY()
"RTN","DGRRPSAT",29,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^StartDate^"_$$ATSTDATE()
"RTN","DGRRPSAT",30,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^EndDate^"_$$ATENDATE()
"RTN","DGRRPSAT",31,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^BadAddressIndicator^"
"RTN","DGRRPSAT",32,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^ConfidentialAddressActive^"
"RTN","DGRRPSAT",33,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^PhoneNumber^"_$$ATPHN()
"RTN","DGRRPSAT",34,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^HomePhoneNumber^"
"RTN","DGRRPSAT",35,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^WorkPhoneNumber^"
"RTN","DGRRPSAT",36,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="></DataSet>"_"^^^1"
"RTN","DGRRPSAT",37,0)
 Q
"RTN","DGRRPSAT",38,0)
 ;
"RTN","DGRRPSAT",39,0)
ATSTRE1() ;
"RTN","DGRRPSAT",40,0)
 QUIT $P(GLOB(.121),"^",1)
"RTN","DGRRPSAT",41,0)
 ;
"RTN","DGRRPSAT",42,0)
ATSTRE2() ;
"RTN","DGRRPSAT",43,0)
 QUIT $P(GLOB(.121),"^",2)
"RTN","DGRRPSAT",44,0)
 ;
"RTN","DGRRPSAT",45,0)
ATSTRE3() ;
"RTN","DGRRPSAT",46,0)
 QUIT $P(GLOB(.121),"^",3)
"RTN","DGRRPSAT",47,0)
 ;
"RTN","DGRRPSAT",48,0)
ATCITY() ;
"RTN","DGRRPSAT",49,0)
 QUIT $P(GLOB(.121),"^",4)
"RTN","DGRRPSAT",50,0)
 ;
"RTN","DGRRPSAT",51,0)
ATSTATE() ;
"RTN","DGRRPSAT",52,0)
 NEW DATA
"RTN","DGRRPSAT",53,0)
 SET DATA=$P(GLOB(.121),"^",5)
"RTN","DGRRPSAT",54,0)
 SET DATA=$S(DATA="":"",1:$P($G(^DIC(5,DATA,0)),"^",2))
"RTN","DGRRPSAT",55,0)
 QUIT DATA
"RTN","DGRRPSAT",56,0)
 ;
"RTN","DGRRPSAT",57,0)
ATZIP() ;
"RTN","DGRRPSAT",58,0)
 NEW DATA
"RTN","DGRRPSAT",59,0)
 SET DATA=$P(GLOB(.121),"^",12)
"RTN","DGRRPSAT",60,0)
 IF DATA="" SET DATA=$P(GLOB(.121),"^",6)
"RTN","DGRRPSAT",61,0)
 QUIT DATA
"RTN","DGRRPSAT",62,0)
 ;
"RTN","DGRRPSAT",63,0)
ATCOUNTY() ;
"RTN","DGRRPSAT",64,0)
 NEW STATE,DATA
"RTN","DGRRPSAT",65,0)
 SET STATE=$P(GLOB(.121),"^",5)
"RTN","DGRRPSAT",66,0)
 SET DATA=$P(GLOB(.121),"^",11)
"RTN","DGRRPSAT",67,0)
 IF DATA'="",STATE'="" SET DATA=$P($G(^DIC(5,STATE,1,DATA,0)),"^",1)
"RTN","DGRRPSAT",68,0)
 QUIT DATA
"RTN","DGRRPSAT",69,0)
 ;
"RTN","DGRRPSAT",70,0)
ATSTDATE() ;
"RTN","DGRRPSAT",71,0)
 QUIT $P(GLOB(.121),"^",7)
"RTN","DGRRPSAT",72,0)
 ;
"RTN","DGRRPSAT",73,0)
ATENDATE() ;
"RTN","DGRRPSAT",74,0)
 QUIT $P(GLOB(.121),"^",8)
"RTN","DGRRPSAT",75,0)
 ;
"RTN","DGRRPSAT",76,0)
ATPHN() ;
"RTN","DGRRPSAT",77,0)
 QUIT $P(GLOB(.121),"^",10)
"RTN","DGRRPSD1")
0^10^B4517565
"RTN","DGRRPSD1",1,0)
DGRRPSD1 ; ALB/SGG - rtnDGRR PatientServices Demographics Primary ;09/30/03  ; Compiled February 3, 2004 17:14:03
"RTN","DGRRPSD1",2,0)
 ;;5.3;Registration;**557**;Aug 13, 1993
"RTN","DGRRPSD1",3,0)
 ;
"RTN","DGRRPSD1",4,0)
DOC ;<DataSet Name='PrimaryDemographics'
"RTN","DGRRPSD1",5,0)
 ;[2]     .02       SEX (RSa), [0;2]
"RTN","DGRRPSD1",6,0)
 ;[2]     .05       MARITAL STATUS (RP11'a), [0;5]
"RTN","DGRRPSD1",7,0)
 ;[2]     .351      DATE OF DEATH (DXa), [.35;1]
"RTN","DGRRPSD1",8,0)
 ;[2]     .352      DEATH ENTERED BY (P200'), [.35;2]
"RTN","DGRRPSD1",9,0)
 ;[38.1]  2         SECURITY LEVEL (RSX), [0;2]
"RTN","DGRRPSD1",10,0)
 ;[2]     .08       RELIGIOUS PREFERENCE (P13'a), [0;8]
"RTN","DGRRPSD1",11,0)
 ;[2]     .091      REMARKS (F), [0;10]
"RTN","DGRRPSD1",12,0)
 ;
"RTN","DGRRPSD1",13,0)
GETPSARY(PSARRAY) ;
"RTN","DGRRPSD1",14,0)
 NEW CNT
"RTN","DGRRPSD1",15,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="<DataSet Name='PrimaryDemographics'"
"RTN","DGRRPSD1",16,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Gender^"_$$GENDER()
"RTN","DGRRPSD1",17,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^MaritalStatus^"_$$MARISTAT()
"RTN","DGRRPSD1",18,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^DateOfDeath^"_$$PATDOD()
"RTN","DGRRPSD1",19,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^DeathEnteredBy^"_$$DODENTBY()
"RTN","DGRRPSD1",20,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^DeathEnteredByVPID^"_$$DODVPID()
"RTN","DGRRPSD1",21,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^SecurityLevel^"_$$SECURLVL()
"RTN","DGRRPSD1",22,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^ReligiousPreference^"_$$RELIPREF()
"RTN","DGRRPSD1",23,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Remarks^"_$$REMARKS()
"RTN","DGRRPSD1",24,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="></DataSet>"_"^^^1"
"RTN","DGRRPSD1",25,0)
 QUIT
"RTN","DGRRPSD1",26,0)
 ;
"RTN","DGRRPSD1",27,0)
GENDER() ;
"RTN","DGRRPSD1",28,0)
 NEW DATA
"RTN","DGRRPSD1",29,0)
 SET DATA=$P(GLOB(0),"^",2)
"RTN","DGRRPSD1",30,0)
 QUIT $S(DATA="M":"MALE",DATA="F":"FEMALE",1:"")
"RTN","DGRRPSD1",31,0)
 ;
"RTN","DGRRPSD1",32,0)
MARISTAT() ;
"RTN","DGRRPSD1",33,0)
 NEW DATA
"RTN","DGRRPSD1",34,0)
 SET DATA=$P(GLOB(0),"^",5)
"RTN","DGRRPSD1",35,0)
 QUIT $S(DATA="":"",1:$P($G(^DIC(11,DATA,0)),"^",1))
"RTN","DGRRPSD1",36,0)
 ;
"RTN","DGRRPSD1",37,0)
PATDOD() ;
"RTN","DGRRPSD1",38,0)
 QUIT $P(GLOB(.35),"^",1)
"RTN","DGRRPSD1",39,0)
 ;
"RTN","DGRRPSD1",40,0)
DODENTBY() ;
"RTN","DGRRPSD1",41,0)
 NEW DATA
"RTN","DGRRPSD1",42,0)
 SET DATA=$P(GLOB(.35),"^",2)
"RTN","DGRRPSD1",43,0)
 IF DATA'="" SET DATA=$P($G(^VA(200,DATA,0)),"^",1)
"RTN","DGRRPSD1",44,0)
 QUIT DATA
"RTN","DGRRPSD1",45,0)
 ;
"RTN","DGRRPSD1",46,0)
DODVPID() ;
"RTN","DGRRPSD1",47,0)
 QUIT $$VPID^XUPS($P(GLOB(.35),"^",2))
"RTN","DGRRPSD1",48,0)
 ;
"RTN","DGRRPSD1",49,0)
SECURLVL() ;
"RTN","DGRRPSD1",50,0)
 QUIT $S($P($G(^DGSL(38.1,PTID,0)),"^",2)=1:"SENSITIVE",1:"NON-SENSITIVE")
"RTN","DGRRPSD1",51,0)
 ;
"RTN","DGRRPSD1",52,0)
RELIPREF() ;
"RTN","DGRRPSD1",53,0)
 NEW DATA
"RTN","DGRRPSD1",54,0)
 SET DATA=$P(GLOB(0),"^",8)
"RTN","DGRRPSD1",55,0)
 QUIT $S(DATA="":"",1:$P($G(^DIC(13,DATA,0)),"^",1))
"RTN","DGRRPSD1",56,0)
 ;
"RTN","DGRRPSD1",57,0)
REMARKS() ;
"RTN","DGRRPSD1",58,0)
 QUIT $P(GLOB(0),"^",10)
"RTN","DGRRPSD2")
0^11^B15816572
"RTN","DGRRPSD2",1,0)
DGRRPSD2 ; ALB/SGG - rtnDGRR PatientServices Demographics Secondary ;09/30/03  ; Compiled December 9, 2003 15:23:28
"RTN","DGRRPSD2",2,0)
 ;;5.3;Registration;**557**;Aug 13, 1993
"RTN","DGRRPSD2",3,0)
 ;
"RTN","DGRRPSD2",4,0)
DOC ;<DataSet Name='SecondaryDemographics'
"RTN","DGRRPSD2",5,0)
 ;
"RTN","DGRRPSD2",6,0)
 ;FROM: ^DGSL(38.1,
"RTN","DGRRPSD2",7,0)
 ;3         SECURITY ASSIGNED BY (RP200'), [0;3]
"RTN","DGRRPSD2",8,0)
 ;4         DATE/TIME SECURITY ASSIGNED (RD), [0;4]
"RTN","DGRRPSD2",9,0)
 ;5         SECURITY SOURCE (F), [0;5]
"RTN","DGRRPSD2",10,0)
 ;
"RTN","DGRRPSD2",11,0)
 ;FROM: ^DPT(PTID
"RTN","DGRRPSD2",12,0)
 ;          RACE INFORMATION (Multiple-2.02), [.02;0]
"RTN","DGRRPSD2",13,0)
 ;          .01  RACE INFORMATION (M*P10'X), [0;1]
"RTN","DGRRPSD2",14,0)
 ;          .02  METHOD OF COLLECTION (RP10.3'), [0;2]
"RTN","DGRRPSD2",15,0)
 ;
"RTN","DGRRPSD2",16,0)
 ;.352      DEATH ENTERED BY (P200'), [.35;2]
"RTN","DGRRPSD2",17,0)
 ;
"RTN","DGRRPSD2",18,0)
 ;6         ETHNICITY INFORMATION (Multiple-2.06), [.06;0]
"RTN","DGRRPSD2",19,0)
 ;          .01  ETHNICITY INFORMATION (*P10.2'X), [0;1]
"RTN","DGRRPSD2",20,0)
 ;          .02  METHOD OF COLLECTION (RP10.3'), [0;2]
"RTN","DGRRPSD2",21,0)
 ;          
"RTN","DGRRPSD2",22,0)
 ;Primary Care Provider - Use $$NMPCPR^SCAPMCU2(PTID,DT,1) API to
"RTN","DGRRPSD2",23,0)
 ;          retrieve Primary Care Provider.  Call VPID^XUPS API to
"RTN","DGRRPSD2",24,0)
 ;          convert DUZ to VPID.                    
"RTN","DGRRPSD2",25,0)
 ;
"RTN","DGRRPSD2",26,0)
GETPSARY(PSARRAY) ;
"RTN","DGRRPSD2",27,0)
 NEW CNT
"RTN","DGRRPSD2",28,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="<DataSet Name='SecondaryDemographics'"
"RTN","DGRRPSD2",29,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^SecurityAssignedBy^"_$$SECASGBY()
"RTN","DGRRPSD2",30,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^DateTimeSecurityAssigned^"_$$DTSECASG()
"RTN","DGRRPSD2",31,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^SecuritySource^"_$$SECSOURC()
"RTN","DGRRPSD2",32,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^PrimaryCareProvider^"_$$PCP()
"RTN","DGRRPSD2",33,0)
 DO ETHNINFO
"RTN","DGRRPSD2",34,0)
 DO RACEINFO
"RTN","DGRRPSD2",35,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="</DataSet>"_"^^^1"
"RTN","DGRRPSD2",36,0)
 QUIT
"RTN","DGRRPSD2",37,0)
 ;
"RTN","DGRRPSD2",38,0)
SECASGBY() ;
"RTN","DGRRPSD2",39,0)
 NEW DATA
"RTN","DGRRPSD2",40,0)
 SET DATA=$P(GLOB(38.1),"^",3)
"RTN","DGRRPSD2",41,0)
 IF DATA'="" S DATA=$P($G(^VA(200,DATA,0)),"^",1)
"RTN","DGRRPSD2",42,0)
 QUIT DATA
"RTN","DGRRPSD2",43,0)
 ;
"RTN","DGRRPSD2",44,0)
DTSECASG() ;
"RTN","DGRRPSD2",45,0)
 QUIT $P(GLOB(38.1),"^",4)
"RTN","DGRRPSD2",46,0)
 ;
"RTN","DGRRPSD2",47,0)
SECSOURC() ;
"RTN","DGRRPSD2",48,0)
 QUIT $P(GLOB(38.1),"^",5)
"RTN","DGRRPSD2",49,0)
 ;
"RTN","DGRRPSD2",50,0)
DODENTBY() ;
"RTN","DGRRPSD2",51,0)
 NEW DATA
"RTN","DGRRPSD2",52,0)
 SET DATA=$P(GLOB(.35),"^",2)
"RTN","DGRRPSD2",53,0)
 IF DATA'="" SET DATA=$P($G(^VA(200,DATA,0)),"^",1)
"RTN","DGRRPSD2",54,0)
 QUIT DATA
"RTN","DGRRPSD2",55,0)
 ;
"RTN","DGRRPSD2",56,0)
DODVPID() ;
"RTN","DGRRPSD2",57,0)
 ;QUIT "200#ROOT"_$P(GLOB(.35),"^",2)
"RTN","DGRRPSD2",58,0)
 QUIT $$VPID^XUPS($P(GLOB(.35),"^",2))
"RTN","DGRRPSD2",59,0)
 ;
"RTN","DGRRPSD2",60,0)
PCP() ;Primary Care Provider
"RTN","DGRRPSD2",61,0)
 ; get the PCP's IEN and convert to VPID (primary care physician)
"RTN","DGRRPSD2",62,0)
 ; 
"RTN","DGRRPSD2",63,0)
 N PATSPCP,PCPIEN,PCPVPID
"RTN","DGRRPSD2",64,0)
 SET PATSPCP=$$NMPCPR^SCAPMCU2(PTID,DT,1)
"RTN","DGRRPSD2",65,0)
 SET PCPIEN=$P(PATSPCP,"^",1)
"RTN","DGRRPSD2",66,0)
 SET PCPVPID=$$VPID^XUPS(+PCPIEN)
"RTN","DGRRPSD2",67,0)
 QUIT PCPVPID
"RTN","DGRRPSD2",68,0)
 ;
"RTN","DGRRPSD2",69,0)
ETHNINFO ;
"RTN","DGRRPSD2",70,0)
 NEW ETHCNT,ROWCNT,ETHNIC,METHOD
"RTN","DGRRPSD2",71,0)
 SET ETHCNT=0,ROWCNT=0
"RTN","DGRRPSD2",72,0)
 FOR  SET ETHCNT=$O(^DPT(PTID,.06,ETHCNT)) QUIT:(ETHCNT<1)  DO
"RTN","DGRRPSD2",73,0)
 .SET ETHNIC=$P($G(^DPT(PTID,.06,ETHCNT,0)),"^",1)
"RTN","DGRRPSD2",74,0)
 .SET METHOD=$P($G(^DPT(PTID,.06,ETHCNT,0)),"^",2)
"RTN","DGRRPSD2",75,0)
 .IF ETHNIC'="" DO
"RTN","DGRRPSD2",76,0)
 ..SET ROWCNT=ROWCNT+1
"RTN","DGRRPSD2",77,0)
 ..SET ETHNIC=$P($G(^DIC(10.2,ETHNIC,0)),"^",1)
"RTN","DGRRPSD2",78,0)
 ..IF METHOD'="" SET METHOD=$P(^DIC(10.3,METHOD,0),"^",1)
"RTN","DGRRPSD2",79,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="><Ethnicity Row='"_ROWCNT_"'"
"RTN","DGRRPSD2",80,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Ethnicity^"_ETHNIC_"^^ETHNIC^"_ROWCNT
"RTN","DGRRPSD2",81,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="^MethodOfCollection^"_METHOD_"^^ETHNIC^"_ROWCNT
"RTN","DGRRPSD2",82,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="></Ethnicity>"
"RTN","DGRRPSD2",83,0)
 IF ROWCNT=0 DO
"RTN","DGRRPSD2",84,0)
 .SET CNT=$G(CNT)+1,PSARRAY(CNT)="><Ethnicity Row='1' Ethnicity='' MethodOfCollection=''></Ethnicity>"
"RTN","DGRRPSD2",85,0)
 QUIT
"RTN","DGRRPSD2",86,0)
 ;
"RTN","DGRRPSD2",87,0)
RACEINFO ;
"RTN","DGRRPSD2",88,0)
 NEW RACECNT,ROWCNT,RACE,METHOD
"RTN","DGRRPSD2",89,0)
 SET RACECNT=0,ROWCNT=0
"RTN","DGRRPSD2",90,0)
 FOR  SET RACECNT=$O(^DPT(PTID,.02,RACECNT)) QUIT:(RACECNT<1)  DO
"RTN","DGRRPSD2",91,0)
 .SET RACE=$P($G(^DPT(PTID,.02,RACECNT,0)),"^",1)
"RTN","DGRRPSD2",92,0)
 .SET METHOD=$P($G(^DPT(PTID,.02,RACECNT,0)),"^",2)
"RTN","DGRRPSD2",93,0)
 .IF RACE'="" DO
"RTN","DGRRPSD2",94,0)
 ..SET ROWCNT=ROWCNT+1
"RTN","DGRRPSD2",95,0)
 ..SET RACE=$P($G(^DIC(10,RACE,0)),"^",1)
"RTN","DGRRPSD2",96,0)
 ..IF METHOD'="" SET METHOD=$P(^DIC(10.3,METHOD,0),"^",1)
"RTN","DGRRPSD2",97,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="<Race Row='"_ROWCNT_"'"
"RTN","DGRRPSD2",98,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Race^"_RACE_"^^RACE^"_ROWCNT
"RTN","DGRRPSD2",99,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="^MethodOfCollection^"_METHOD_"^^RACE^"_ROWCNT
"RTN","DGRRPSD2",100,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="></Race>"
"RTN","DGRRPSD2",101,0)
 IF ROWCNT=0 DO
"RTN","DGRRPSD2",102,0)
 .SET CNT=$G(CNT)+1,PSARRAY(CNT)="<Race Row='1' Race='' MethodOfCollection=''></Race>"
"RTN","DGRRPSD2",103,0)
 QUIT
"RTN","DGRRPSD3")
0^12^B14769514
"RTN","DGRRPSD3",1,0)
DGRRPSD3 ; ALB/SGG - rtnDGRR PatientServices Demographics Tertiary ;09/30/03  ; Compiled November 4, 2003 12:01:00
"RTN","DGRRPSD3",2,0)
 ;;5.3;Registration;**557**;Aug 13, 1993
"RTN","DGRRPSD3",3,0)
 ;
"RTN","DGRRPSD3",4,0)
 ;
"RTN","DGRRPSD3",5,0)
DOC ;<DataSet Name='TertiaryDemographics'
"RTN","DGRRPSD3",6,0)
 ;
"RTN","DGRRPSD3",7,0)
 ;
"RTN","DGRRPSD3",8,0)
 ;
"RTN","DGRRPSD3",9,0)
 ;          NAME COMPONENTS
"RTN","DGRRPSD3",10,0)
 ;.092      PLACE OF BIRTH [CITY] (F), [0;11]
"RTN","DGRRPSD3",11,0)
 ;.093      PLACE OF BIRTH [STATE] (P5'), [0;12]
"RTN","DGRRPSD3",12,0)
 ;.096      WHO ENTERED PATIENT (P200'I), [0;15]
"RTN","DGRRPSD3",13,0)
 ;          WHO ENTERED PATIENT VPID FROM #200
"RTN","DGRRPSD3",14,0)
 ;.097      DATE ENTERED INTO FILE (D), [0;16]
"RTN","DGRRPSD3",15,0)
 ;.2401     FATHER'S NAME (FX), [.24;1]
"RTN","DGRRPSD3",16,0)
 ;.2402     MOTHER'S NAME (FX), [.24;2]
"RTN","DGRRPSD3",17,0)
 ;.2403     MOTHER'S MAIDEN NAME (FaX), [.24;3]      
"RTN","DGRRPSD3",18,0)
 ;.07       OCCUPATION (F), [0;7]
"RTN","DGRRPSD3",19,0)
 ; MULTIPLE BIRTH INDICATOR NEEDS SORTED $P(^DPT(PTID,"MPIMB"),"^").
"RTN","DGRRPSD3",20,0)
 ;
"RTN","DGRRPSD3",21,0)
 ;1         ALIAS (Multiple-2.01), [.01;0]
"RTN","DGRRPSD3",22,0)
 ;          .01  ALIAS (MFX), [0;1]
"RTN","DGRRPSD3",23,0)
 ;          1    ALIAS SSN (F), [0;2]
"RTN","DGRRPSD3",24,0)
 ;          
"RTN","DGRRPSD3",25,0)
GETPSARY(PSARRAY) ;
"RTN","DGRRPSD3",26,0)
 NEW CNT
"RTN","DGRRPSD3",27,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="<DataSet Name='TertiaryDemographics'"
"RTN","DGRRPSD3",28,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Last^"_$$LAST()
"RTN","DGRRPSD3",29,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^First^"_$$FIRST()
"RTN","DGRRPSD3",30,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Middle^"_$$MIDDLE()
"RTN","DGRRPSD3",31,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Prefix^"_$$PREFIX()
"RTN","DGRRPSD3",32,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Suffix^"_$$SUFFIX()
"RTN","DGRRPSD3",33,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Degree^"_$$DEGREE()
"RTN","DGRRPSD3",34,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^CityOfBirth^"_$$CITYOB()
"RTN","DGRRPSD3",35,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^StateOfBirth^"_$$STATEOB()
"RTN","DGRRPSD3",36,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^WhoEnteredPatientVPID^"_$$WHOVPID()
"RTN","DGRRPSD3",37,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^WhoEnteredPatient^"_$$ENTBYWHO()
"RTN","DGRRPSD3",38,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^DatePatientEntered^"_$$ENTDATE()
"RTN","DGRRPSD3",39,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^FathersName^"_$$DADNAME()
"RTN","DGRRPSD3",40,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^MothersName^"_$$MOMNAME()
"RTN","DGRRPSD3",41,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^MothersMaidenName^"_$$MADNAME()
"RTN","DGRRPSD3",42,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Occupation^"_$$OCCUPAT()
"RTN","DGRRPSD3",43,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^MultipleBirthIndicator^"_$$MULTIBI()
"RTN","DGRRPSD3",44,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)=">"
"RTN","DGRRPSD3",45,0)
 DO ALISINFO
"RTN","DGRRPSD3",46,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="</DataSet>"_"^^^1"
"RTN","DGRRPSD3",47,0)
 QUIT
"RTN","DGRRPSD3",48,0)
 ;
"RTN","DGRRPSD3",49,0)
LAST() QUIT $P(GLOB("NAME"),"^",1)
"RTN","DGRRPSD3",50,0)
 ;
"RTN","DGRRPSD3",51,0)
FIRST() QUIT $P(GLOB("NAME"),"^",2)
"RTN","DGRRPSD3",52,0)
 ;
"RTN","DGRRPSD3",53,0)
MIDDLE() QUIT $P(GLOB("NAME"),"^",3)
"RTN","DGRRPSD3",54,0)
 ;
"RTN","DGRRPSD3",55,0)
PREFIX() QUIT $P(GLOB("NAME"),"^",5)
"RTN","DGRRPSD3",56,0)
 ;
"RTN","DGRRPSD3",57,0)
SUFFIX() QUIT $P(GLOB("NAME"),"^",4)
"RTN","DGRRPSD3",58,0)
 ;
"RTN","DGRRPSD3",59,0)
DEGREE() QUIT $P(GLOB("NAME"),"^",6)
"RTN","DGRRPSD3",60,0)
 ;
"RTN","DGRRPSD3",61,0)
CITYOB() QUIT $P(GLOB(0),"^",11)
"RTN","DGRRPSD3",62,0)
 ;
"RTN","DGRRPSD3",63,0)
STATEOB() ;
"RTN","DGRRPSD3",64,0)
 NEW DATA
"RTN","DGRRPSD3",65,0)
 SET DATA=$P(GLOB(0),"^",12)
"RTN","DGRRPSD3",66,0)
 IF DATA'="" SET DATA=$P($G(^DIC(5,DATA,0)),"^",2)
"RTN","DGRRPSD3",67,0)
 QUIT DATA
"RTN","DGRRPSD3",68,0)
 ;
"RTN","DGRRPSD3",69,0)
ENTBYWHO() ;
"RTN","DGRRPSD3",70,0)
 NEW DATA
"RTN","DGRRPSD3",71,0)
 SET DATA=$P(GLOB(0),"^",15)
"RTN","DGRRPSD3",72,0)
 IF DATA'="" SET DATA=$P($G(^VA(200,DATA,0)),"^",1)
"RTN","DGRRPSD3",73,0)
 QUIT DATA
"RTN","DGRRPSD3",74,0)
 ;
"RTN","DGRRPSD3",75,0)
WHOVPID() ;
"RTN","DGRRPSD3",76,0)
 QUIT $$VPID^XUPS($P(GLOB(0),"^",15))
"RTN","DGRRPSD3",77,0)
 ;
"RTN","DGRRPSD3",78,0)
ENTDATE() QUIT $P(GLOB(0),"^",16)
"RTN","DGRRPSD3",79,0)
 ;
"RTN","DGRRPSD3",80,0)
DADNAME() QUIT $P(GLOB(.24),"^",1)
"RTN","DGRRPSD3",81,0)
 ;
"RTN","DGRRPSD3",82,0)
MOMNAME() QUIT $P(GLOB(.24),"^",2)
"RTN","DGRRPSD3",83,0)
 ;
"RTN","DGRRPSD3",84,0)
MADNAME() QUIT $P(GLOB(.24),"^",3)
"RTN","DGRRPSD3",85,0)
 ;
"RTN","DGRRPSD3",86,0)
OCCUPAT() QUIT $P(GLOB(0),"^",7)
"RTN","DGRRPSD3",87,0)
 ;
"RTN","DGRRPSD3",88,0)
MULTIBI() ;
"RTN","DGRRPSD3",89,0)
 NEW DATA
"RTN","DGRRPSD3",90,0)
 SET DATA=$P($G(^DPT(PTID,"MPIMB")),"^",1)
"RTN","DGRRPSD3",91,0)
 SET DATA=$S(DATA="Y":"YES",DATA="N":"NO",1:"")
"RTN","DGRRPSD3",92,0)
 QUIT DATA
"RTN","DGRRPSD3",93,0)
 ;
"RTN","DGRRPSD3",94,0)
ALISINFO ;
"RTN","DGRRPSD3",95,0)
 NEW ALISCNT,ROWCNT,ALIS,ALISSSN
"RTN","DGRRPSD3",96,0)
 SET ALISCNT=0,ROWCNT=0
"RTN","DGRRPSD3",97,0)
 FOR  SET ALISCNT=$O(^DPT(PTID,.01,ALISCNT)) QUIT:(ALISCNT<1)  DO
"RTN","DGRRPSD3",98,0)
 .SET ALIS=$P($G(^DPT(PTID,.01,ALISCNT,0)),"^",1)
"RTN","DGRRPSD3",99,0)
 .SET ALISSSN=$P($G(^DPT(PTID,.01,ALISCNT,0)),"^",2)
"RTN","DGRRPSD3",100,0)
 .IF +$L(ALIS_ALISSSN) DO
"RTN","DGRRPSD3",101,0)
 ..SET ROWCNT=ROWCNT+1
"RTN","DGRRPSD3",102,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="<Alias Row='"_ROWCNT_"'"
"RTN","DGRRPSD3",103,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Alias^"_ALIS_"^^ALIAS^"_ROWCNT
"RTN","DGRRPSD3",104,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="^SSN^"_ALISSSN_"^^ALIAS^"_ROWCNT
"RTN","DGRRPSD3",105,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="></Alias>"
"RTN","DGRRPSD3",106,0)
 IF ROWCNT=0 DO
"RTN","DGRRPSD3",107,0)
 .SET CNT=$G(CNT)+1,PSARRAY(CNT)="<Alias Row='1' Alias='' SSN=''></Alias>"
"RTN","DGRRPSD3",108,0)
 QUIT
"RTN","DGRRPSEE")
0^21^B75411765
"RTN","DGRRPSEE",1,0)
DGRRPSEE ; ALB/SGG - rtnDGRR PatientServices Enrollment and Eligibility ;09/30/03  ; Compiled November 24, 2003 11:54:30
"RTN","DGRRPSEE",2,0)
 ;;5.3;Registration;**557**;Aug 13, 1993
"RTN","DGRRPSEE",3,0)
 ;
"RTN","DGRRPSEE",4,0)
 ;
"RTN","DGRRPSEE",5,0)
DOC ;<DataSet Name='EnrollmentEligibility'
"RTN","DGRRPSEE",6,0)
 ;
"RTN","DGRRPSEE",7,0)
 ;.04       ENROLLMENT STATUS (RP27.15'IX), [0;4]
"RTN","DGRRPSEE",8,0)
 ;          27.01     CURRENT ENROLLMENT (P27.11'I), [ENR;1]
"RTN","DGRRPSEE",9,0)
 ;          .04       ENROLLMENT STATUS (RP27.15'IX), [0;4]
"RTN","DGRRPSEE",10,0)
 ;          .01       NAME (RF), [0;1]
"RTN","DGRRPSEE",11,0)
 ;  
"RTN","DGRRPSEE",12,0)
 ;.07       ENROLLMENT PRIORITY (SXI), [0;7]
"RTN","DGRRPSEE",13,0)
 ;
"RTN","DGRRPSEE",14,0)
 ;.3721     RATED DISABILITIES (VA) (Multiple-2.04), [.372;0]
"RTN","DGRRPSEE",15,0)
 ;          .01  RATED DISABILITIES (VA) (MP31'X), [0;1]
"RTN","DGRRPSEE",16,0)
 ;          2    DISABILITY % (RNJ3,0X), [0;2]
"RTN","DGRRPSEE",17,0)
 ;          3    SERVICE CONNECTED (SX), [0;3]
"RTN","DGRRPSEE",18,0)
 ;               '0' FOR NO; 
"RTN","DGRRPSEE",19,0)
 ;               '1' FOR YES;
"RTN","DGRRPSEE",20,0)
 ;
"RTN","DGRRPSEE",21,0)
 ;361       PATIENT ELIGIBILITIES (Multiple-2.0361), [E;0]
"RTN","DGRRPSEE",22,0)
 ;          .01  ELIGIBILITY (M*P8'X), [0;1]   MAS ELIGIBILITY CODE (R*P8.1'), [0;9]
"RTN","DGRRPSEE",23,0)
 ;          .03  LONG ID (FX), [0;3]
"RTN","DGRRPSEE",24,0)
 ;          .04  SHORT ID (F), [0;4]
"RTN","DGRRPSEE",25,0)
 ;
"RTN","DGRRPSEE",26,0)
 ;.14       CURRENT MEANS TEST STATUS (P408.32'I), [0;14]
"RTN","DGRRPSEE",27,0)
 ;          .01       NAME (RFI), [0;1]
"RTN","DGRRPSEE",28,0)
 ;
"RTN","DGRRPSEE",29,0)
 ;.152      INELIGIBLE DATE (DX), [.15;2]
"RTN","DGRRPSEE",30,0)
 ;.301      SERVICE CONNECTED? (RSXa), [.3;1]
"RTN","DGRRPSEE",31,0)
 ;.302      SERVICE CONNECTED PERCENTAGE (NJ3,0Xa), [.3;2]
"RTN","DGRRPSEE",32,0)
 ;.305      UNEMPLOYABLE (S), [.3;5]
"RTN","DGRRPSEE",33,0)
 ;.307      INELIGIBLE REASON (FX), [.3;7]
"RTN","DGRRPSEE",34,0)
 ;.313      CLAIM NUMBER (FXO), [.31;3]
"RTN","DGRRPSEE",35,0)
 ;.323      PERIOD OF SERVICE (*P21'Xa), [.32;3]
"RTN","DGRRPSEE",36,0)
 ;.361      PRIMARY ELIGIBILITY CODE (*P8'Xa), [.36;1]   MAS ELIGIBILITY CODE (R*P8.1'), [0;9]
"RTN","DGRRPSEE",37,0)
 ;27.11 .12       ENROLLMENT SUBGROUP (S), [0;12]
"RTN","DGRRPSEE",38,0)
 ;
"RTN","DGRRPSEE",39,0)
 ;.3611     ELIGIBILITY STATUS (SX), [.361;1]
"RTN","DGRRPSEE",40,0)
 ;          'P' FOR PENDING VERIFICATION; 
"RTN","DGRRPSEE",41,0)
 ;          'R' FOR PENDING RE-VERIFICATION; 
"RTN","DGRRPSEE",42,0)
 ;          'V' FOR PENDING VERIFICATION;          
"RTN","DGRRPSEE",43,0)
 ;                       
"RTN","DGRRPSEE",44,0)
 ;391       TYPE (RP391'a), [TYPE;1]                
"RTN","DGRRPSEE",45,0)
 ;1901      VETERAN (Y/N)? (RSXa), [VET;1]
"RTN","DGRRPSEE",46,0)
 ;.32102    AGENT ORANGE EXPOS. INDICATED? (RSX), [.321;2]
"RTN","DGRRPSEE",47,0)
 ;.32103    RADIATION EXPOSURE INDICATED?  (RSX), [.321;3]
"RTN","DGRRPSEE",48,0)
 ;.322013   ENVIRONMENTAL CONTAMINANTS?  (RSX),   [.322;13]
"RTN","DGRRPSEE",49,0)
 ;.5291     COMBAT SERVICE INDICATED? (RSX)       [.52;11]
"RTN","DGRRPSEE",50,0)
 ;          MILITARY SEXUAL TRAUMA (MST) $$GETSTAT^DGMSTAPI 
"RTN","DGRRPSEE",51,0)
 ;          HEAD/NECK CANCER (CNV)       $$GETCUR^DGNTAPI 
"RTN","DGRRPSEE",52,0)
 ;57.4      SPINAL CORD INJURY (S), [57;4]
"RTN","DGRRPSEE",53,0)
 ;
"RTN","DGRRPSEE",54,0)
GETPSARY(PSARRAY) ;
"RTN","DGRRPSEE",55,0)
 NEW CNT,DGAO,DGIR,DGENV,DGCS,DGHNC,DGMST
"RTN","DGRRPSEE",56,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="<DataSet Name='EnrollmentEligibility'"
"RTN","DGRRPSEE",57,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^EnrollmentDate^"_$$ENRLDATE()
"RTN","DGRRPSEE",58,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^EnrollmentStatus^"_$$ENRLSTAT()
"RTN","DGRRPSEE",59,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^EnrollmentPriority^"_$$ENRLPRIO()
"RTN","DGRRPSEE",60,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^EnrollmentSubgroup^"_$$ENRLSUBG()
"RTN","DGRRPSEE",61,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^CurrentMeansTestStatus^"_$$CMEANTST()
"RTN","DGRRPSEE",62,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^IneligibleDate^"_$$INELDATE()
"RTN","DGRRPSEE",63,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^ServiceConnected^"_$$SERVCONC()
"RTN","DGRRPSEE",64,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^ServiceConnectedPercentage^"_$$SERVCPER()
"RTN","DGRRPSEE",65,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Unemployable^"_$$UNEMPLOY()
"RTN","DGRRPSEE",66,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^IneligibleReason^"_$$INELIGRS()
"RTN","DGRRPSEE",67,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^ClaimNumber^"_$$CLAIMNUM()
"RTN","DGRRPSEE",68,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^PeriodOfService^"_$$PEROFSRV()
"RTN","DGRRPSEE",69,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^PrimaryEligibilityCode^"_$$ELIGPRIM()
"RTN","DGRRPSEE",70,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^EligibilityStatus^"_$$ELIGSTAT()
"RTN","DGRRPSEE",71,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Type^"_$$PATNTYPE()
"RTN","DGRRPSEE",72,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Veteran^"_$$VETERAN()
"RTN","DGRRPSEE",73,0)
 D CLASS(PTID)
"RTN","DGRRPSEE",74,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^AgentOrangeExposure^"_$G(DGAO)
"RTN","DGRRPSEE",75,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^IonizingRadiationExposure^"_$G(DGIR)
"RTN","DGRRPSEE",76,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^EnvironmentalContaminantExposure^"_$G(DGENV)
"RTN","DGRRPSEE",77,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^CombatServiceIndicated^"_$G(DGCS)
"RTN","DGRRPSEE",78,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^MilitarySexualTrauma^"_$G(DGMST)
"RTN","DGRRPSEE",79,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^HeadNeckCancer^"_$G(DGHNC)
"RTN","DGRRPSEE",80,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^SpinalCordInjuryStatus^"_$$SPINALCI()
"RTN","DGRRPSEE",81,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)=">"
"RTN","DGRRPSEE",82,0)
 DO ELIGIBLE
"RTN","DGRRPSEE",83,0)
 DO DISABLED
"RTN","DGRRPSEE",84,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="</DataSet>"_"^^^1"
"RTN","DGRRPSEE",85,0)
 QUIT
"RTN","DGRRPSEE",86,0)
 ;
"RTN","DGRRPSEE",87,0)
 ;
"RTN","DGRRPSEE",88,0)
ENRLDATE() ;
"RTN","DGRRPSEE",89,0)
 NEW DATA
"RTN","DGRRPSEE",90,0)
 SET DATA=$P($G(^DPT(PTID,"ENR")),"^",1)
"RTN","DGRRPSEE",91,0)
 IF DATA'="" SET DATA=$P($G(^DGEN(27.11,DATA,0)),"^",10)
"RTN","DGRRPSEE",92,0)
 QUIT DATA
"RTN","DGRRPSEE",93,0)
 ;
"RTN","DGRRPSEE",94,0)
ENRLSTAT() ;
"RTN","DGRRPSEE",95,0)
 NEW DATA
"RTN","DGRRPSEE",96,0)
 SET DATA=$P($G(^DPT(PTID,"ENR")),"^",1)
"RTN","DGRRPSEE",97,0)
 IF DATA'="" SET DATA=$P($G(^DGEN(27.11,DATA,0)),"^",4)
"RTN","DGRRPSEE",98,0)
 IF DATA'="" SET DATA=$P($G(^DGEN(27.15,DATA,0)),"^",1)
"RTN","DGRRPSEE",99,0)
 QUIT DATA
"RTN","DGRRPSEE",100,0)
 ;
"RTN","DGRRPSEE",101,0)
ENRLPRIO() ;
"RTN","DGRRPSEE",102,0)
 NEW DATA
"RTN","DGRRPSEE",103,0)
 SET DATA=$P($G(^DPT(PTID,"ENR")),"^",1)
"RTN","DGRRPSEE",104,0)
 IF DATA'="" SET DATA=$P($G(^DGEN(27.11,DATA,0)),"^",7)
"RTN","DGRRPSEE",105,0)
 SET DATA=$S(DATA=1:"GROUP 1",DATA=2:"GROUP 2",DATA=3:"GROUP 3",DATA=4:"GROUP 4",DATA=5:"GROUP 5",DATA=6:"GROUP 6",DATA=7:"GROUP 7",DATA=8:"GROUP 8",1:"")
"RTN","DGRRPSEE",106,0)
 QUIT DATA
"RTN","DGRRPSEE",107,0)
 ;
"RTN","DGRRPSEE",108,0)
ENRLSUBG() ;
"RTN","DGRRPSEE",109,0)
 NEW DATA
"RTN","DGRRPSEE",110,0)
 SET DATA=$P($G(^DPT(PTID,"ENR")),"^",1)
"RTN","DGRRPSEE",111,0)
 IF DATA'="" SET DATA=$P($G(^DGEN(27.11,DATA,0)),"^",12)
"RTN","DGRRPSEE",112,0)
 SET DATA=$S(DATA=1:"a",DATA=3:"c",DATA=5:"e",DATA=7:"g",1:"")
"RTN","DGRRPSEE",113,0)
 QUIT DATA
"RTN","DGRRPSEE",114,0)
 ;
"RTN","DGRRPSEE",115,0)
CMEANTST() ;
"RTN","DGRRPSEE",116,0)
 NEW DATA
"RTN","DGRRPSEE",117,0)
 SET DATA=$P(GLOB(0),"^",14)
"RTN","DGRRPSEE",118,0)
 IF DATA'="" SET DATA=$P($G(^DG(408.32,DATA,0)),"^",1)
"RTN","DGRRPSEE",119,0)
 QUIT DATA
"RTN","DGRRPSEE",120,0)
 ;
"RTN","DGRRPSEE",121,0)
INELDATE() ;
"RTN","DGRRPSEE",122,0)
 QUIT $P(GLOB(.15),"^",2)
"RTN","DGRRPSEE",123,0)
 ;
"RTN","DGRRPSEE",124,0)
SERVCONC() ;
"RTN","DGRRPSEE",125,0)
 NEW DATA
"RTN","DGRRPSEE",126,0)
 SET DATA=$P(GLOB(.3),"^",1)
"RTN","DGRRPSEE",127,0)
 SET DATA=$S(DATA="Y":"YES",DATA="N":"NO",1:"")
"RTN","DGRRPSEE",128,0)
 QUIT DATA
"RTN","DGRRPSEE",129,0)
 ;
"RTN","DGRRPSEE",130,0)
SERVCPER() ;
"RTN","DGRRPSEE",131,0)
 QUIT $P(GLOB(.3),"^",2)
"RTN","DGRRPSEE",132,0)
 ;
"RTN","DGRRPSEE",133,0)
UNEMPLOY() ;
"RTN","DGRRPSEE",134,0)
 N DATA
"RTN","DGRRPSEE",135,0)
 SET DATA=$P(GLOB(.3),"^",5)
"RTN","DGRRPSEE",136,0)
 SET DATA=$S(DATA="Y":"YES",DATA="N":"NO",1:"")
"RTN","DGRRPSEE",137,0)
 QUIT DATA
"RTN","DGRRPSEE",138,0)
 ;
"RTN","DGRRPSEE",139,0)
INELIGRS() ;
"RTN","DGRRPSEE",140,0)
 QUIT $P(GLOB(.3),"^",7)
"RTN","DGRRPSEE",141,0)
 ;
"RTN","DGRRPSEE",142,0)
CLAIMNUM() ;
"RTN","DGRRPSEE",143,0)
 QUIT $P(GLOB(.31),"^",3)
"RTN","DGRRPSEE",144,0)
 ;
"RTN","DGRRPSEE",145,0)
PEROFSRV() ;
"RTN","DGRRPSEE",146,0)
 NEW DATA
"RTN","DGRRPSEE",147,0)
 SET DATA=$P(GLOB(.32),"^",3)
"RTN","DGRRPSEE",148,0)
 IF DATA'="" SET DATA=$P($G(^DIC(21,DATA,0)),"^",1)
"RTN","DGRRPSEE",149,0)
 QUIT DATA
"RTN","DGRRPSEE",150,0)
 ;
"RTN","DGRRPSEE",151,0)
ELIGPRIM() ;
"RTN","DGRRPSEE",152,0)
 NEW DATA
"RTN","DGRRPSEE",153,0)
 SET DATA=$P(GLOB(.36),"^",1)
"RTN","DGRRPSEE",154,0)
 IF DATA'="" SET DATA=$P($G(^DIC(8,DATA,0)),"^",9)
"RTN","DGRRPSEE",155,0)
 IF DATA'="" SET DATA=$P($G(^DIC(8.1,DATA,0)),"^",1)
"RTN","DGRRPSEE",156,0)
 QUIT DATA
"RTN","DGRRPSEE",157,0)
 ;
"RTN","DGRRPSEE",158,0)
ELIGSTAT() ;
"RTN","DGRRPSEE",159,0)
 NEW DATA
"RTN","DGRRPSEE",160,0)
 SET DATA=$P(GLOB(.361),"^",1)
"RTN","DGRRPSEE",161,0)
 SET DATA=$S(DATA="P":"PENDING VERIFICATION",DATA="R":"PENDING RE-VERIFICATION",DATA="V":"PENDING VERIFICATION",1:"")
"RTN","DGRRPSEE",162,0)
 QUIT DATA
"RTN","DGRRPSEE",163,0)
 ;
"RTN","DGRRPSEE",164,0)
PATNTYPE() ;
"RTN","DGRRPSEE",165,0)
 NEW DATA
"RTN","DGRRPSEE",166,0)
 SET DATA=$P($G(^DPT(PTID,"TYPE")),"^",1)
"RTN","DGRRPSEE",167,0)
 I DATA'="" SET DATA=$P($G(^DG(391,DATA,0)),"^",1)
"RTN","DGRRPSEE",168,0)
 QUIT DATA
"RTN","DGRRPSEE",169,0)
 ;
"RTN","DGRRPSEE",170,0)
VETERAN() ;
"RTN","DGRRPSEE",171,0)
 NEW DATA
"RTN","DGRRPSEE",172,0)
 SET DATA=$P($G(^DPT(PTID,"VET")),"^",1)
"RTN","DGRRPSEE",173,0)
 SET DATA=$S(DATA="Y":"YES",DATA="N":"NO",1:"")
"RTN","DGRRPSEE",174,0)
 QUIT DATA
"RTN","DGRRPSEE",175,0)
 ;
"RTN","DGRRPSEE",176,0)
CLASS(PTID) ;Get A/O, Ion. Rad., Env. Cont., Combat Svc, MST, HNC
"RTN","DGRRPSEE",177,0)
 I $G(PTID)="" Q
"RTN","DGRRPSEE",178,0)
 N DGARRY,DGERR,DGIENS,DGNTAPI
"RTN","DGRRPSEE",179,0)
 S DGIENS=$$IENS^DILF(PTID)
"RTN","DGRRPSEE",180,0)
 D GETS^DIQ(2,DGIENS,".32102;.32103;.322013;.5291","E","DGARRY","DGERR")
"RTN","DGRRPSEE",181,0)
 I '$D(DGERR) D
"RTN","DGRRPSEE",182,0)
 .S DGAO=$G(DGARRY(2,DGIENS,.32102,"E"))
"RTN","DGRRPSEE",183,0)
 .S DGIR=$G(DGARRY(2,DGIENS,.32103,"E"))
"RTN","DGRRPSEE",184,0)
 .S DGENV=$G(DGARRY(2,DGIENS,.322013,"E"))
"RTN","DGRRPSEE",185,0)
 .S DGCS=$G(DGARRY(2,DGIENS,.5291,"E"))
"RTN","DGRRPSEE",186,0)
 ; Get MST information
"RTN","DGRRPSEE",187,0)
 S DGMST=$$GETSTAT^DGMSTAPI(PTID)
"RTN","DGRRPSEE",188,0)
 ;MST Status (#3) field from MST History (#29.11) file
"RTN","DGRRPSEE",189,0)
 S DGMST=$P($G(DGMST),U,6)
"RTN","DGRRPSEE",190,0)
 ; Get Head/Neck Cancer information
"RTN","DGRRPSEE",191,0)
 S DGNTAPI=$$GETCUR^DGNTAPI(PTID,"DGNTAPI")
"RTN","DGRRPSEE",192,0)
 ; NTR Indicator (#.02) field from Nose and Throad Radium History (#28.11) file
"RTN","DGRRPSEE",193,0)
 S DGHNC=$P($G(DGNTAPI("IND")),U,2)
"RTN","DGRRPSEE",194,0)
 Q
"RTN","DGRRPSEE",195,0)
 ;
"RTN","DGRRPSEE",196,0)
SPINALCI() ;
"RTN","DGRRPSEE",197,0)
 NEW DATA
"RTN","DGRRPSEE",198,0)
 SET DATA=$P(GLOB(57),"^",4)
"RTN","DGRRPSEE",199,0)
 IF DATA=1 S DATA="PARAPLEGIA-TRAUMATIC"
"RTN","DGRRPSEE",200,0)
 IF DATA=2 S DATA="QUADRIPLEGIA-TRAUMATIC"
"RTN","DGRRPSEE",201,0)
 IF DATA=3 S DATA="PARAPLEGIA-NONTRAUMATIC"
"RTN","DGRRPSEE",202,0)
 IF DATA=4 S DATA="QUADRIPLEGIA-NONTRAUMATIC"
"RTN","DGRRPSEE",203,0)
 IF DATA="X" S DATA="NOT APPLICABLE"
"RTN","DGRRPSEE",204,0)
 QUIT DATA
"RTN","DGRRPSEE",205,0)
 ;
"RTN","DGRRPSEE",206,0)
DISABLED ;
"RTN","DGRRPSEE",207,0)
 NEW DABLECNT,ROWCNT,DABLERTD,DABLEPER,DABLECON
"RTN","DGRRPSEE",208,0)
 SET DABLECNT=0,ROWCNT=0
"RTN","DGRRPSEE",209,0)
 FOR  SET DABLECNT=$O(^DPT(PTID,.372,DABLECNT)) QUIT:(DABLECNT<1)  DO
"RTN","DGRRPSEE",210,0)
 .SET GLOB(.372)=$G(^DPT(PTID,.372,DABLECNT,0))
"RTN","DGRRPSEE",211,0)
 .SET DABLERTD=$P(GLOB(.372),"^",1)
"RTN","DGRRPSEE",212,0)
 .SET DABLERTD=$P($G(^DIC(31,+DABLERTD,0)),"^",1)
"RTN","DGRRPSEE",213,0)
 .Q:DABLERTD=""
"RTN","DGRRPSEE",214,0)
 .SET DABLEPER=$P(GLOB(.372),"^",2)
"RTN","DGRRPSEE",215,0)
 .SET DABLECON=$S($P(GLOB(.372),"^",3)=0:"NO",$P(GLOB(.372),"^",3)=1:"YES",1:"")
"RTN","DGRRPSEE",216,0)
 .IF +$L(DABLERTD_DABLEPER_DABLECON) DO
"RTN","DGRRPSEE",217,0)
 ..SET ROWCNT=ROWCNT+1
"RTN","DGRRPSEE",218,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="<RatedDisability Row='"_ROWCNT_"'"
"RTN","DGRRPSEE",219,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Disability^"_DABLERTD_"^^DISABLED^"_ROWCNT
"RTN","DGRRPSEE",220,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Percent^"_DABLEPER_"^^DISABLED^"_ROWCNT
"RTN","DGRRPSEE",221,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Connected^"_DABLECON_"^^DISABLED^"_ROWCNT
"RTN","DGRRPSEE",222,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="></RatedDisability>"
"RTN","DGRRPSEE",223,0)
 IF ROWCNT=0 DO
"RTN","DGRRPSEE",224,0)
 .SET CNT=$G(CNT)+1,PSARRAY(CNT)="<RatedDisability Row='1' Disability='' Percent='' Connected=''></RatedDisability>"
"RTN","DGRRPSEE",225,0)
 QUIT
"RTN","DGRRPSEE",226,0)
 ;
"RTN","DGRRPSEE",227,0)
ELIGIBLE ;
"RTN","DGRRPSEE",228,0)
 NEW ELIGCNT,ROWCNT,ELIGIBLE,ELIGLONG,ELIGSHRT
"RTN","DGRRPSEE",229,0)
 SET ELIGCNT=0,ROWCNT=0
"RTN","DGRRPSEE",230,0)
 FOR  SET ELIGCNT=$O(^DPT(PTID,"E",ELIGCNT)) QUIT:(ELIGCNT<1)  DO
"RTN","DGRRPSEE",231,0)
 .SET GLOB("E")=$G(^DPT(PTID,"E",ELIGCNT,0))
"RTN","DGRRPSEE",232,0)
 .SET ELIGIBLE=$P(GLOB("E"),"^",1)
"RTN","DGRRPSEE",233,0)
 .IF ELIGIBLE'="" SET ELIGIBLE=$P($G(^DIC(8,ELIGIBLE,0)),"^",9)
"RTN","DGRRPSEE",234,0)
 .IF ELIGIBLE'="" SET ELIGIBLE=$P($G(^DIC(8.1,ELIGIBLE,0)),"^",1)
"RTN","DGRRPSEE",235,0)
 .SET ELIGLONG=$P(GLOB("E"),"^",3)
"RTN","DGRRPSEE",236,0)
 .SET ELIGSHRT=$P(GLOB("E"),"^",4)
"RTN","DGRRPSEE",237,0)
 .IF +$L(ELIGIBLE_ELIGLONG_ELIGSHRT) DO
"RTN","DGRRPSEE",238,0)
 ..SET ROWCNT=ROWCNT+1
"RTN","DGRRPSEE",239,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="<PatientEligibility Row='"_ROWCNT_"'"
"RTN","DGRRPSEE",240,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Eligibility^"_ELIGIBLE_"^^ELIGIBLE^"_ROWCNT
"RTN","DGRRPSEE",241,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="^LongID^"_ELIGLONG_"^^ELIGIBLE^"_ROWCNT
"RTN","DGRRPSEE",242,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="^ShortID^"_ELIGSHRT_"^^ELIGIBLE^"_ROWCNT
"RTN","DGRRPSEE",243,0)
 ..SET CNT=$G(CNT)+1,PSARRAY(CNT)="></PatientEligibility>"
"RTN","DGRRPSEE",244,0)
 IF ROWCNT=0 DO
"RTN","DGRRPSEE",245,0)
 .SET CNT=$G(CNT)+1,PSARRAY(CNT)="<PatientEligibility Row='1' Eligibility='' LongID='' ShortID=''></PatientEligibility>"
"RTN","DGRRPSEE",246,0)
 QUIT
"RTN","DGRRPSGT")
0^13^B40084058
"RTN","DGRRPSGT",1,0)
DGRRPSGT ; ALB/SGG - DG R&R PatientServices GET data - return XML ; 09/30/03
"RTN","DGRRPSGT",2,0)
 ;;5.3;Registration;**557**;Aug 13, 1993
"RTN","DGRRPSGT",3,0)
 ;
"RTN","DGRRPSGT",4,0)
DOC ;
"RTN","DGRRPSGT",5,0)
 ; ==================================================================
"RTN","DGRRPSGT",6,0)
 ;      Documentation for the DGRRPS* routines is in DGRRPSAA.
"RTN","DGRRPSGT",7,0)
 ; ==================================================================
"RTN","DGRRPSGT",8,0)
 ; This routine is called from the RPC DGRR GET PATIENT SERVICES DATA
"RTN","DGRRPSGT",9,0)
 ; ==================================================================
"RTN","DGRRPSGT",10,0)
 ;
"RTN","DGRRPSGT",11,0)
 ;
"RTN","DGRRPSGT",12,0)
PATIENT(RESULT,PARAMS) ;
"RTN","DGRRPSGT",13,0)
 ;
"RTN","DGRRPSGT",14,0)
 NEW CURLINE,ICN,PTID,ERRMESS,PSARRAY,PSGLBCNT,DGRRPS,GLOB,TRACECNT,TRACENO,REQDT
"RTN","DGRRPSGT",15,0)
 ;
"RTN","DGRRPSGT",16,0)
 DO INITIZE
"RTN","DGRRPSGT",17,0)
 ;Call to INTRACE commented out to prevent to building of the XTMP global.
"RTN","DGRRPSGT",18,0)
 ;DO INTRACE
"RTN","DGRRPSGT",19,0)
 DO GETPATID(.ICN,.PTID,.ERRMESS) IF $G(ERRMESS)'="" GOTO ERROR
"RTN","DGRRPSGT",20,0)
 S REQDT=$G(PARAMS("REQUESTED_DATE"))
"RTN","DGRRPSGT",21,0)
 DO GETGLOBS
"RTN","DGRRPSGT",22,0)
 ;
"RTN","DGRRPSGT",23,0)
BUILD ; BUILD THE PATIENT XML
"RTN","DGRRPSGT",24,0)
 SET PSARRAY(1)=$$XMLHDR^DGRR557U_"^^^1" DO APPEND(.PSARRAY)
"RTN","DGRRPSGT",25,0)
 SET PSARRAY(1)="<Patient>" DO APPEND(.PSARRAY)
"RTN","DGRRPSGT",26,0)
 DO GETPSARY^DGRRPSID(.PSARRAY) DO APPEND(.PSARRAY)
"RTN","DGRRPSGT",27,0)
 IF +$G(PARAMS("PrimaryDemo")) DO GETPSARY^DGRRPSD1(.PSARRAY) DO APPEND(.PSARRAY)
"RTN","DGRRPSGT",28,0)
 IF +$G(PARAMS("SecondaryDemo")) DO GETPSARY^DGRRPSD2(.PSARRAY) DO APPEND(.PSARRAY)
"RTN","DGRRPSGT",29,0)
 IF +$G(PARAMS("TertiaryDemo")) DO GETPSARY^DGRRPSD3(.PSARRAY) DO APPEND(.PSARRAY)
"RTN","DGRRPSGT",30,0)
 IF +$G(PARAMS("MainAddress")) DO GETPSARY^DGRRPSAM(.PSARRAY) DO APPEND(.PSARRAY)
"RTN","DGRRPSGT",31,0)
 IF +$G(PARAMS("TemporaryAddress")) DO GETPSARY^DGRRPSAT(.PSARRAY) DO APPEND(.PSARRAY)
"RTN","DGRRPSGT",32,0)
 IF +$G(PARAMS("ConfidentialAddress")) DO GETPSARY^DGRRPSAC(.PSARRAY) DO APPEND(.PSARRAY)
"RTN","DGRRPSGT",33,0)
 IF +$G(PARAMS("ContactInfo")) DO GETPSARY^DGRRPSKN(.PSARRAY) DO APPEND(.PSARRAY)
"RTN","DGRRPSGT",34,0)
 IF +$G(PARAMS("ADTInfo")) DO GETPSARY^DGRRPSAD(.PSARRAY,REQDT) DO APPEND(.PSARRAY)
"RTN","DGRRPSGT",35,0)
 IF +$G(PARAMS("EnrollEligibility")) DO GETPSARY^DGRRPSEE(.PSARRAY) DO APPEND(.PSARRAY)
"RTN","DGRRPSGT",36,0)
 IF +$G(PARAMS("Incompetent")) DO GETPSARY^DGRRPSIC(.PSARRAY) DO APPEND(.PSARRAY)
"RTN","DGRRPSGT",37,0)
 DO GETPSARY^DGRRPSIN(.PSARRAY) DO APPEND(.PSARRAY)
"RTN","DGRRPSGT",38,0)
 SET PSARRAY(1)="<Error Message=''></Error>" DO APPEND(.PSARRAY)
"RTN","DGRRPSGT",39,0)
 SET PSARRAY(1)="</Patient>"_"^^^1" DO APPEND(.PSARRAY)
"RTN","DGRRPSGT",40,0)
 ;Call to OUTTRACE commented out preventing the building/purging of the
"RTN","DGRRPSGT",41,0)
 ;XTMP global.
"RTN","DGRRPSGT",42,0)
 ;DO OUTTRACE
"RTN","DGRRPSGT",43,0)
EXIT QUIT
"RTN","DGRRPSGT",44,0)
 ;
"RTN","DGRRPSGT",45,0)
APPEND(PSARRAY) ; 
"RTN","DGRRPSGT",46,0)
 ; Append PSARRAY(1...n)= TextOnly ^ XML_attribute ^ ValueOfAttribute ^ FileNowFlag
"RTN","DGRRPSGT",47,0)
 ; In some code there are 5th and 6th pieces to this,,  they are not used,, it was the start of a receiver/parser that was never needed
"RTN","DGRRPSGT",48,0)
 NEW MAXGL,TEXT,ATTRIB,VALUE,CLOSEOUT,NEWLINE
"RTN","DGRRPSGT",49,0)
 SET MAXGL=240 ; maximum global length
"RTN","DGRRPSGT",50,0)
 SET PSARRAY="" FOR  SET PSARRAY=$O(PSARRAY(PSARRAY)) QUIT:PSARRAY=""  DO
"RTN","DGRRPSGT",51,0)
 .SET TEXT=$P(PSARRAY(PSARRAY),"^",1)
"RTN","DGRRPSGT",52,0)
 .SET ATTRIB=$P(PSARRAY(PSARRAY),"^",2)
"RTN","DGRRPSGT",53,0)
 .SET VALUE=$P(PSARRAY(PSARRAY),"^",3)
"RTN","DGRRPSGT",54,0)
 .SET CLOSEOUT=$P(PSARRAY(PSARRAY),"^",4)
"RTN","DGRRPSGT",55,0)
 .SET CURLINE=$G(CURLINE)
"RTN","DGRRPSGT",56,0)
 .SET NEWLINE=TEXT
"RTN","DGRRPSGT",57,0)
 .IF ATTRIB'="" SET NEWLINE=NEWLINE_" "_ATTRIB_"='"_$S(VALUE'="":$$CHARCHK^DGRR557U(VALUE),1:"")_"'"
"RTN","DGRRPSGT",58,0)
 .IF ($L(CURLINE)+$L(NEWLINE))>MAXGL DO
"RTN","DGRRPSGT",59,0)
 ..SET ^TMP($J,"PS-DATA",PSGLBCNT)=$E(CURLINE_NEWLINE,1,MAXGL)
"RTN","DGRRPSGT",60,0)
 ..SET PSGLBCNT=PSGLBCNT+1
"RTN","DGRRPSGT",61,0)
 ..SET CURLINE=$E(CURLINE_NEWLINE,MAXGL+1,999),NEWLINE=""
"RTN","DGRRPSGT",62,0)
 .SET CURLINE=CURLINE_NEWLINE
"RTN","DGRRPSGT",63,0)
 .IF +$G(CLOSEOUT),+$L(CURLINE) DO
"RTN","DGRRPSGT",64,0)
 ..SET ^TMP($J,"PS-DATA",PSGLBCNT)=CURLINE
"RTN","DGRRPSGT",65,0)
 ..SET PSGLBCNT=PSGLBCNT+1
"RTN","DGRRPSGT",66,0)
 ..SET CURLINE=""
"RTN","DGRRPSGT",67,0)
 .QUIT
"RTN","DGRRPSGT",68,0)
 KILL PSARRAY
"RTN","DGRRPSGT",69,0)
 QUIT
"RTN","DGRRPSGT",70,0)
 ;
"RTN","DGRRPSGT",71,0)
INITIZE ; Initialize variables
"RTN","DGRRPSGT",72,0)
 KILL RESULT
"RTN","DGRRPSGT",73,0)
 KILL ^TMP($J,"PS-DATA")
"RTN","DGRRPSGT",74,0)
 SET PSGLBCNT=1
"RTN","DGRRPSGT",75,0)
 SET DGRRPS="^TMP($J,""PS-DATA"")"
"RTN","DGRRPSGT",76,0)
 SET RESULT=$NA(@DGRRPS)
"RTN","DGRRPSGT",77,0)
 IF '$D(DT) D DTNOLF^DICRW
"RTN","DGRRPSGT",78,0)
 KILL PSARRAY
"RTN","DGRRPSGT",79,0)
 QUIT
"RTN","DGRRPSGT",80,0)
 ;
"RTN","DGRRPSGT",81,0)
INTRACE ; Keep a record of what has been requested
"RTN","DGRRPSGT",82,0)
 N PURGDT
"RTN","DGRRPSGT",83,0)
 S PURGDT=$$FMADD^XLFDT(DT,31)
"RTN","DGRRPSGT",84,0)
 IF '$D(^XTMP("DGRRPS",0)) SET ^XTMP("DGRRPS",0)=PURGDT_"^"_DT_"^"_"LAST 30 DAYS OF PATIENT SERVICES ACTIVITY - CREATED IN RTN DGRRPSGT - THIS GLOBAL IS SELF PURGING ON >10,000 RECORDS OR >31 DAYS - email:VHA OI SDD CS Person Demographic"
"RTN","DGRRPSGT",85,0)
 SET $P(^XTMP("DGRRPS",0),"^",1)=PURGDT
"RTN","DGRRPSGT",86,0)
 SET TRACECNT=$G(^XTMP("DGRRPS","COUNT"))+1,^XTMP("DGRRPS","COUNT")=TRACECNT
"RTN","DGRRPSGT",87,0)
 SET ^XTMP("DGRRPS","TRACE",TRACECNT,"DATE",DT)=$$NOW^XLFDT
"RTN","DGRRPSGT",88,0)
 MERGE ^XTMP("DGRRPS","TRACE",TRACECNT,"PARAMS")=PARAMS
"RTN","DGRRPSGT",89,0)
 QUIT
"RTN","DGRRPSGT",90,0)
 ;
"RTN","DGRRPSGT",91,0)
GETPATID(ICN,PTID,ERRMESS) ; Get patient PTID and ICN
"RTN","DGRRPSGT",92,0)
 IF $G(PARAMS("PatientId_Type"))="ICN" DO
"RTN","DGRRPSGT",93,0)
 .SET ICN=$G(PARAMS("PatientId"))
"RTN","DGRRPSGT",94,0)
 .IF $E(ICN,1,6)=" ICN: " SET ICN=$E(ICN,7,99)
"RTN","DGRRPSGT",95,0)
 .SET ICN=$P(ICN,"^",1)
"RTN","DGRRPSGT",96,0)
 .SET PTID=$$GETDFN^MPIF001(ICN)
"RTN","DGRRPSGT",97,0)
 .; Call MPI API to be sure ICN is returned in ICN_V_checksum format
"RTN","DGRRPSGT",98,0)
 .SET ICN=$$GETICN^MPIF001(PTID)
"RTN","DGRRPSGT",99,0)
 .IF $G(PTID)<1 SET ERRMESS=$P(PTID,"^",2)
"RTN","DGRRPSGT",100,0)
 IF $G(PARAMS("PatientId_Type"))="DFN" DO
"RTN","DGRRPSGT",101,0)
 .SET PTID=+$G(PARAMS("PatientId"))
"RTN","DGRRPSGT",102,0)
 .SET ICN=$$GETICN^MPIF001(PTID)
"RTN","DGRRPSGT",103,0)
 .;IF +ICN<1 SET ERRMESS=$P(ICN,"^",2)
"RTN","DGRRPSGT",104,0)
 .IF ICN<1 SET ICN=""
"RTN","DGRRPSGT",105,0)
 IF ($G(PARAMS("PatientId_Type"))'="DFN"),($G(PARAMS("PatientId_Type"))'="ICN") SET ERRMESS="Unknown PatientId_Type"
"RTN","DGRRPSGT",106,0)
 QUIT
"RTN","DGRRPSGT",107,0)
 ;
"RTN","DGRRPSGT",108,0)
GETGLOBS ; Get required DPT globals
"RTN","DGRRPSGT",109,0)
 SET GLOB(0)=$G(^DPT(PTID,0))
"RTN","DGRRPSGT",110,0)
 SET GLOB(.11)=$G(^DPT(PTID,.11))
"RTN","DGRRPSGT",111,0)
 SET GLOB(.121)=$G(^DPT(PTID,.121))
"RTN","DGRRPSGT",112,0)
 SET GLOB(.13)=$G(^DPT(PTID,.13))
"RTN","DGRRPSGT",113,0)
 KILL GLOB(.14) MERGE GLOB(.14)=^DPT(PTID,.14)
"RTN","DGRRPSGT",114,0)
 SET GLOB(.141)=$G(^DPT(PTID,.141))
"RTN","DGRRPSGT",115,0)
 SET GLOB(.15)=$G(^DPT(PTID,.15))
"RTN","DGRRPSGT",116,0)
 SET GLOB(.22)=$G(^DPT(PTID,.22))
"RTN","DGRRPSGT",117,0)
 SET GLOB(.24)=$G(^DPT(PTID,.24))
"RTN","DGRRPSGT",118,0)
 SET GLOB(.29)=$G(^DPT(PTID,.29))
"RTN","DGRRPSGT",119,0)
 SET GLOB(.291)=$G(^DPT(PTID,.291))
"RTN","DGRRPSGT",120,0)
 SET GLOB(.3)=$G(^DPT(PTID,.3))
"RTN","DGRRPSGT",121,0)
 SET GLOB(.31)=$G(^DPT(PTID,.31))
"RTN","DGRRPSGT",122,0)
 SET GLOB(.32)=$G(^DPT(PTID,.32))
"RTN","DGRRPSGT",123,0)
 SET GLOB(.35)=$G(^DPT(PTID,.35))
"RTN","DGRRPSGT",124,0)
 SET GLOB(.36)=$G(^DPT(PTID,.36))
"RTN","DGRRPSGT",125,0)
 SET GLOB(.361)=$G(^DPT(PTID,.361))
"RTN","DGRRPSGT",126,0)
 SET GLOB(38.1)=$G(^DGSL(38.1,PTID,0))
"RTN","DGRRPSGT",127,0)
 SET GLOB(57)=$G(^DPT(PTID,57))
"RTN","DGRRPSGT",128,0)
 SET GLOB("NAME")=$$GETNME(PTID)
"RTN","DGRRPSGT",129,0)
 QUIT
"RTN","DGRRPSGT",130,0)
 ;
"RTN","DGRRPSGT",131,0)
GETNME(PTID) ; return patient name components
"RTN","DGRRPSGT",132,0)
 NEW RE,DGRRN
"RTN","DGRRPSGT",133,0)
 S DGRRN("FILE")=2
"RTN","DGRRPSGT",134,0)
 S DGRRN("FIELD")=.01
"RTN","DGRRPSGT",135,0)
 S DGRRN("IENS")=$$IENS^DILF(+PTID)
"RTN","DGRRPSGT",136,0)
 S RE=$$HLNAME^XLFNAME(.DGRRN)
"RTN","DGRRPSGT",137,0)
 Q RE
"RTN","DGRRPSGT",138,0)
 ;
"RTN","DGRRPSGT",139,0)
OUTTRACE ; Keep a record of what has been put out
"RTN","DGRRPSGT",140,0)
 MERGE ^XTMP("DGRRPS","TRACE",+$G(TRACECNT),"DATA")=^TMP($J,"PS-DATA")
"RTN","DGRRPSGT",141,0)
PURGE ; Purge trace > 31 days and >10,000 records
"RTN","DGRRPSGT",142,0)
 SET TRACENO="" FOR  SET TRACENO=$O(^XTMP("DGRRPS","TRACE",TRACENO)) QUIT:TRACENO=""  QUIT:($O(^XTMP("DGRRPS","TRACE",TRACENO,"DATE",""))>($$FMADD^XLFDT(DT,-31)))  KILL ^XTMP("DGRRPS","TRACE",TRACENO)
"RTN","DGRRPSGT",143,0)
 SET TRACENO="" FOR  SET TRACENO=$O(^XTMP("DGRRPS","TRACE",TRACENO)) QUIT:TRACENO=""  QUIT:(TRACENO>($O(^XTMP("DGRRPS","TRACE",""),-1)-10000))  KILL ^XTMP("DGRRPS","TRACE",TRACENO)
"RTN","DGRRPSGT",144,0)
 QUIT
"RTN","DGRRPSGT",145,0)
 ;
"RTN","DGRRPSGT",146,0)
ERROR ; Build an Error XML and quit
"RTN","DGRRPSGT",147,0)
 DO INITIZE
"RTN","DGRRPSGT",148,0)
 SET PSARRAY(1)=$$XMLHDR^DGRR557U_"^^^1"
"RTN","DGRRPSGT",149,0)
 SET PSARRAY(2)="<Patient>"_"^^^1"
"RTN","DGRRPSGT",150,0)
 SET PSARRAY(3)="<Error"
"RTN","DGRRPSGT",151,0)
 SET PSARRAY(4)="^Message^"_ERRMESS
"RTN","DGRRPSGT",152,0)
 SET PSARRAY(5)="^PatientId^"_$G(PARAMS("PatientId"))
"RTN","DGRRPSGT",153,0)
 SET PSARRAY(6)="></Error>"_"^^^1"
"RTN","DGRRPSGT",154,0)
 SET PSARRAY(7)="</Patient>"_"^^^1" DO APPEND(.PSARRAY)
"RTN","DGRRPSGT",155,0)
 ;DO OUTTRACE
"RTN","DGRRPSGT",156,0)
 QUIT
"RTN","DGRRPSIC")
0^22^B8301317
"RTN","DGRRPSIC",1,0)
DGRRPSIC ; ALB/SGG - rtnDGRR PatientServices Incompetent ;09/30/03  ; Compiled October 21, 2003 15:06:51
"RTN","DGRRPSIC",2,0)
 ;;5.3;Registration;**557**;Aug 13, 1993
"RTN","DGRRPSIC",3,0)
 ;
"RTN","DGRRPSIC",4,0)
DOC ;<DataSet Name='Incompetent'
"RTN","DGRRPSIC",5,0)
 ;
"RTN","DGRRPSIC",6,0)
 ;.293      RATED INCOMPETENT? (S), [.29;12]
"RTN","DGRRPSIC",7,0)
 ;          '0' FOR NO
"RTN","DGRRPSIC",8,0)
 ;          '1' FOR YES
"RTN","DGRRPSIC",9,0)
 ;
"RTN","DGRRPSIC",10,0)
 ;.291      DATE RULED INCOMPETENT (VA) (D), [.29;1]
"RTN","DGRRPSIC",11,0)
 ;.2911     INSTITUTION (VA) (P4'), [.29;3]
"RTN","DGRRPSIC",12,0)
 ;.2912     GUARDIAN (VA) (F), [.29;4]
"RTN","DGRRPSIC",13,0)
 ;.2913     RELATIONSHIP (VA) (F), [.29;5]
"RTN","DGRRPSIC",14,0)
 ;.2914     STREET ADDRESS 1 (VA) (F), [.29;6]
"RTN","DGRRPSIC",15,0)
 ;.2915     STREET ADDRESS 2 (VA) (F), [.29;7]
"RTN","DGRRPSIC",16,0)
 ;.2916     CITY (VA) (F), [.29;8]
"RTN","DGRRPSIC",17,0)
 ;.2917     STATE (VA) (P5'), [.29;9]
"RTN","DGRRPSIC",18,0)
 ;.2918     ZIP (VA) (F), [.29;10]
"RTN","DGRRPSIC",19,0)
 ;.29013    ZIP+4 (VA) (FOX), [.29;13]
"RTN","DGRRPSIC",20,0)
 ;.2919     PHONE (VA) (F), [.29;11]
"RTN","DGRRPSIC",21,0)
 ;
"RTN","DGRRPSIC",22,0)
 ;.292      DATE RULED INCOMPETENT (CIVIL) (D), [.29;2]
"RTN","DGRRPSIC",23,0)
 ;.2921     INSTITUTION (CIVIL) (F), [.291;3]
"RTN","DGRRPSIC",24,0)
 ;.2922     GUARDIAN (CIVIL) (F), [.291;4]
"RTN","DGRRPSIC",25,0)
 ;.2923     RELATIONSHIP (CIVIL) (F), [.291;5]
"RTN","DGRRPSIC",26,0)
 ;.2924     STREET ADDRESS 1 (CIVIL) (F), [.291;6]
"RTN","DGRRPSIC",27,0)
 ;.2925     STREET ADDRESS 2 (CIVIL) (F), [.291;7]
"RTN","DGRRPSIC",28,0)
 ;.2926     CITY (CIVIL) (F), [.291;8]
"RTN","DGRRPSIC",29,0)
 ;.2927     STATE (CIVIL) (P5'), [.291;9]
"RTN","DGRRPSIC",30,0)
 ;.2928     ZIP (CIVIL) (F), [.291;10]
"RTN","DGRRPSIC",31,0)
 ;.290012   ZIP+4 (CIVIL) (FOX), [.291;12]
"RTN","DGRRPSIC",32,0)
 ;.2929     PHONE (CIVIL) (F), [.291;11]
"RTN","DGRRPSIC",33,0)
 ;
"RTN","DGRRPSIC",34,0)
GETPSARY(PSARRAY) ;
"RTN","DGRRPSIC",35,0)
 NEW CNT
"RTN","DGRRPSIC",36,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="<DataSet Name='Incompetent'"
"RTN","DGRRPSIC",37,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^RatedIncompetent^"_$$RATEDIC()
"RTN","DGRRPSIC",38,0)
 DO INCOMP("VETERAN",GLOB(.29),1,13)  ;  VA
"RTN","DGRRPSIC",39,0)
 DO INCOMP("CIVIL",GLOB(.291),2,12)  ; Civil
"RTN","DGRRPSIC",40,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="></DataSet>"_"^^^1"
"RTN","DGRRPSIC",41,0)
 QUIT
"RTN","DGRRPSIC",42,0)
 ;
"RTN","DGRRPSIC",43,0)
INCOMP(ICTYPE,ADGLOB,DTPIECE,ZIP4) ;
"RTN","DGRRPSIC",44,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^DateRuledIncompetent"_$E(ICTYPE,1)_"^"_$P(GLOB(.29),"^",DTPIECE)
"RTN","DGRRPSIC",45,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Institution"_$E(ICTYPE,1)_"^"_$$ADINST()
"RTN","DGRRPSIC",46,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Guardian"_$E(ICTYPE,1)_"^"_$P(ADGLOB,"^",4)
"RTN","DGRRPSIC",47,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^RelationshipToPatient"_$E(ICTYPE,1)_"^"_$P(ADGLOB,"^",5)
"RTN","DGRRPSIC",48,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Street1"_$E(ICTYPE,1)_"^"_$P(ADGLOB,"^",6)
"RTN","DGRRPSIC",49,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Street2"_$E(ICTYPE,1)_"^"_$P(ADGLOB,"^",7)
"RTN","DGRRPSIC",50,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^City"_$E(ICTYPE,1)_"^"_$P(ADGLOB,"^",8)
"RTN","DGRRPSIC",51,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^State"_$E(ICTYPE,1)_"^"_$$ADSTATE()
"RTN","DGRRPSIC",52,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Zip"_$E(ICTYPE,1)_"^"_$$ADZIP()
"RTN","DGRRPSIC",53,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^PhoneNumber"_$E(ICTYPE,1)_"^"_$P(ADGLOB,"^",11)
"RTN","DGRRPSIC",54,0)
 QUIT
"RTN","DGRRPSIC",55,0)
 ;
"RTN","DGRRPSIC",56,0)
RATEDIC() ;
"RTN","DGRRPSIC",57,0)
 NEW DATA
"RTN","DGRRPSIC",58,0)
 SET DATA=$P(GLOB(.29),"^",12)
"RTN","DGRRPSIC",59,0)
 SET DATA=$S(DATA=1:"YES",DATA=0:"NO",1:"")
"RTN","DGRRPSIC",60,0)
 QUIT DATA
"RTN","DGRRPSIC",61,0)
 ;
"RTN","DGRRPSIC",62,0)
 ;
"RTN","DGRRPSIC",63,0)
ADINST() ;
"RTN","DGRRPSIC",64,0)
 NEW DATA
"RTN","DGRRPSIC",65,0)
 SET DATA=$P(ADGLOB,"^",3)
"RTN","DGRRPSIC",66,0)
 IF ICTYPE="VETERAN",DATA'="" SET DATA=$P($$NS^XUAF4(+DATA),"^",1)
"RTN","DGRRPSIC",67,0)
 QUIT DATA
"RTN","DGRRPSIC",68,0)
 ;
"RTN","DGRRPSIC",69,0)
ADSTATE() ;
"RTN","DGRRPSIC",70,0)
 NEW DATA
"RTN","DGRRPSIC",71,0)
 SET DATA=$P(ADGLOB,"^",9)
"RTN","DGRRPSIC",72,0)
 IF DATA'="" SET DATA=$P($G(^DIC(5,DATA,0)),"^",2)
"RTN","DGRRPSIC",73,0)
 QUIT DATA
"RTN","DGRRPSIC",74,0)
 ;
"RTN","DGRRPSIC",75,0)
 Q
"RTN","DGRRPSIC",76,0)
ADZIP() ;
"RTN","DGRRPSIC",77,0)
 NEW DATA
"RTN","DGRRPSIC",78,0)
 SET DATA=$P(ADGLOB,"^",ZIP4)
"RTN","DGRRPSIC",79,0)
 IF DATA="" SET DATA=$P(ADGLOB,"^",10)
"RTN","DGRRPSIC",80,0)
 QUIT DATA
"RTN","DGRRPSIC",81,0)
 Q
"RTN","DGRRPSID")
0^14^B2238073
"RTN","DGRRPSID",1,0)
DGRRPSID ; ALB/SGG - rtnDGRR PatientServices Identifier ;09/30/03  ; Compiled October 2, 2003 12:41:01
"RTN","DGRRPSID",2,0)
 ;;5.3;Registration;**557**;Aug 13, 1993
"RTN","DGRRPSID",3,0)
 ;
"RTN","DGRRPSID",4,0)
DOC ;<Identifier>
"RTN","DGRRPSID",5,0)
 ;PatientICN - patient's ICN is set from initial PARAMS()
"RTN","DGRRPSID",6,0)
 ;PatientDFN - patient's DFN is set up as PTID from initial PARAMS()
"RTN","DGRRPSID",7,0)
 ;.01       NAME (RFXa), [0;1]
"RTN","DGRRPSID",8,0)
 ;.09       SOCIAL SECURITY NUMBER (RFXa), [0;9]
"RTN","DGRRPSID",9,0)
 ;.03       DATE OF BIRTH (RDXOa), [0;3]
"RTN","DGRRPSID",10,0)
 ;.363      PRIMARY LONG ID (F), [.36;3]
"RTN","DGRRPSID",11,0)
 ;.364      PRIMARY SHORT ID (F), [.36;4]
"RTN","DGRRPSID",12,0)
 ;
"RTN","DGRRPSID",13,0)
GETPSARY(PSARRAY) ;
"RTN","DGRRPSID",14,0)
 NEW CNT
"RTN","DGRRPSID",15,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="<Identifier"
"RTN","DGRRPSID",16,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^ICN^"_$$PATICN()
"RTN","DGRRPSID",17,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^DFN^"_$$PATDFN()
"RTN","DGRRPSID",18,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^FullName^"_$$FULLNAME()
"RTN","DGRRPSID",19,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^SSN^"_$$PATSSN()
"RTN","DGRRPSID",20,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^DateOfBirth^"_$$PATDOB()
"RTN","DGRRPSID",21,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^PrimaryLongID^"_$$PRMLNID()
"RTN","DGRRPSID",22,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^PrimaryShortID^"_$$PRMSHID()
"RTN","DGRRPSID",23,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="></Identifier>"_"^^^1"
"RTN","DGRRPSID",24,0)
 QUIT
"RTN","DGRRPSID",25,0)
 ;
"RTN","DGRRPSID",26,0)
PATICN() ;
"RTN","DGRRPSID",27,0)
 QUIT $G(ICN)
"RTN","DGRRPSID",28,0)
 ;
"RTN","DGRRPSID",29,0)
PATDFN() ;
"RTN","DGRRPSID",30,0)
 QUIT $G(PTID)
"RTN","DGRRPSID",31,0)
 ;
"RTN","DGRRPSID",32,0)
FULLNAME() ;
"RTN","DGRRPSID",33,0)
 QUIT $P(GLOB(0),"^",1)
"RTN","DGRRPSID",34,0)
 ;
"RTN","DGRRPSID",35,0)
PATSSN() ;
"RTN","DGRRPSID",36,0)
 QUIT $P(GLOB(0),"^",9)
"RTN","DGRRPSID",37,0)
 ;
"RTN","DGRRPSID",38,0)
PATDOB() ;
"RTN","DGRRPSID",39,0)
 QUIT $P(GLOB(0),"^",3)
"RTN","DGRRPSID",40,0)
 ;
"RTN","DGRRPSID",41,0)
PRMLNID() ;
"RTN","DGRRPSID",42,0)
 QUIT $P(GLOB(.36),"^",3)
"RTN","DGRRPSID",43,0)
 ;
"RTN","DGRRPSID",44,0)
PRMSHID() ;
"RTN","DGRRPSID",45,0)
 QUIT $P(GLOB(.36),"^",4)
"RTN","DGRRPSIN")
0^15^B1115728
"RTN","DGRRPSIN",1,0)
DGRRPSIN ;ALB/SGG - rtnDGRR PatientServices DataSet=Institution ;09/30/03  ; Compiled October 2, 2003 12:40:56
"RTN","DGRRPSIN",2,0)
 ;;5.3;Registration;**557**;Aug 13, 1993
"RTN","DGRRPSIN",3,0)
 ;
"RTN","DGRRPSIN",4,0)
DOC ;
"RTN","DGRRPSIN",5,0)
 ;
"RTN","DGRRPSIN",6,0)
GETPSARY(PSARRAY) ;
"RTN","DGRRPSIN",7,0)
 NEW CNT
"RTN","DGRRPSIN",8,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="<Institution"
"RTN","DGRRPSIN",9,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Name^"_$$INSTNAM()
"RTN","DGRRPSIN",10,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Number^"_$$INSTNUM()
"RTN","DGRRPSIN",11,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^IsProductionDatabase^"_$$ISPRODDB()
"RTN","DGRRPSIN",12,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="></Institution>"_"^^^1"
"RTN","DGRRPSIN",13,0)
 QUIT
"RTN","DGRRPSIN",14,0)
 ;
"RTN","DGRRPSIN",15,0)
INSTNAM() ;
"RTN","DGRRPSIN",16,0)
 QUIT $$SITENAM^DGRR557U()
"RTN","DGRRPSIN",17,0)
INSTNUM() ;
"RTN","DGRRPSIN",18,0)
 QUIT $$SITENO^DGRR557U()
"RTN","DGRRPSIN",19,0)
ISPRODDB() ;
"RTN","DGRRPSIN",20,0)
 QUIT $$PRODST1^DGRR557U()+$$PRODST2^DGRR557U()
"RTN","DGRRPSKN")
0^23^B10519494
"RTN","DGRRPSKN",1,0)
DGRRPSKN ; ALB/SGG - rtnDGRR PatientServices Contact Information ;09/30/03  ; Compiled October 21, 2003 14:54:28
"RTN","DGRRPSKN",2,0)
 ;;5.3;Registration;**557**;Aug 13, 1993
"RTN","DGRRPSKN",3,0)
 ;
"RTN","DGRRPSKN",4,0)
DOC ;<DataSet Name='NextOfKinAddress'
"RTN","DGRRPSKN",5,0)
 ;
"RTN","DGRRPSKN",6,0)
 ;
"RTN","DGRRPSKN",7,0)
 ;=======================================================
"RTN","DGRRPSKN",8,0)
 ; PRIMARY NEXT OF KIN
"RTN","DGRRPSKN",9,0)
 ;.211      K-NAME OF PRIMARY NOK (FaX),         [.21;1]
"RTN","DGRRPSKN",10,0)
 ;.212      K-RELATIONSHIP TO PATIENT (FX),      [.21;2]
"RTN","DGRRPSKN",11,0)
 ;.213      K-STREET ADDRESS [LINE 1] (FX),      [.21;3]
"RTN","DGRRPSKN",12,0)
 ;.214      K-STREET ADDRESS [LINE 2] (FX),      [.21;4]
"RTN","DGRRPSKN",13,0)
 ;.215      K-STREET ADDRESS [LINE 3] (FX),      [.21;5]
"RTN","DGRRPSKN",14,0)
 ;.216      K-CITY (FX),                         [.21;6]
"RTN","DGRRPSKN",15,0)
 ;.217      K-STATE (P5'X),                      [.21;7]
"RTN","DGRRPSKN",16,0)
 ;       .2207     K-ZIP+4 (FOX),        [.22;7]
"RTN","DGRRPSKN",17,0)
 ;.218      K-ZIP CODE (FX),                     [.21;8]
"RTN","DGRRPSKN",18,0)
 ;.219      K-PHONE NUMBER (FXa),                [.21;9]
"RTN","DGRRPSKN",19,0)
 ;.21011    K-WORK PHONE NUMBER (F),             [.21;11]
"RTN","DGRRPSKN",20,0)
 ;
"RTN","DGRRPSKN",21,0)
 ;=======================================================
"RTN","DGRRPSKN",22,0)
 ;SECONDARY NEXT OF KIN
"RTN","DGRRPSKN",23,0)
 ;.2191     K2-NAME OF SECONDARY NOK (FX),       [.211;1]
"RTN","DGRRPSKN",24,0)
 ;.2192     K2-RELATIONSHIP TO PATIENT (FX),     [.211;2]
"RTN","DGRRPSKN",25,0)
 ;.2193     K2-STREET ADDRESS [LINE 1] (FX),     [.211;3]
"RTN","DGRRPSKN",26,0)
 ;.2194     K2-STREET ADDRESS [LINE 2] (FX),     [.211;4]
"RTN","DGRRPSKN",27,0)
 ;.2195     K2-STREET ADDRESS [LINE 3] (FX),     [.211;5]
"RTN","DGRRPSKN",28,0)
 ;.2196     K2-CITY (FX),                        [.211;6]
"RTN","DGRRPSKN",29,0)
 ;.2197     K2-STATE (P5'X),                     [.211;7]
"RTN","DGRRPSKN",30,0)
 ;.2198     K2-ZIP CODE (FX),                    [.211;8]
"RTN","DGRRPSKN",31,0)
 ;       .2203     K2-ZIP+4 (FOX),        [.22;3]
"RTN","DGRRPSKN",32,0)
 ;.2199     K2-PHONE NUMBER (FX),                [.211;9]
"RTN","DGRRPSKN",33,0)
 ;.211011   K2-WORK PHONE NUMBER (F),            [.211;11]
"RTN","DGRRPSKN",34,0)
 ;
"RTN","DGRRPSKN",35,0)
 ;=======================================================
"RTN","DGRRPSKN",36,0)
 ; DESIGNEE
"RTN","DGRRPSKN",37,0)
 ;.341      D-NAME OF DESIGNEE (FX),             [.34;1]
"RTN","DGRRPSKN",38,0)
 ;.342      D-RELATIONSHIP TO PATIENT (FX),      [.34;2]
"RTN","DGRRPSKN",39,0)
 ;.343      D-STREET ADDRESS [LINE 1] (FX),      [.34;3]
"RTN","DGRRPSKN",40,0)
 ;.344      D-STREET ADDRESS [LINE 2] (FX),      [.34;4]
"RTN","DGRRPSKN",41,0)
 ;.345      D-STREET ADDRESS [LINE 3] (FX),      [.34;5]
"RTN","DGRRPSKN",42,0)
 ;.346      D-CITY (FX),                         [.34;6]
"RTN","DGRRPSKN",43,0)
 ;.347      D-STATE (P5'X),                      [.34;7]
"RTN","DGRRPSKN",44,0)
 ;.348      D-ZIP CODE (FX),                     [.34;8]
"RTN","DGRRPSKN",45,0)
 ;       .2202     D-ZIP+4 (FOX),        [.22;2]
"RTN","DGRRPSKN",46,0)
 ;.349      D-PHONE NUMBER (FX),                 [.34;9]
"RTN","DGRRPSKN",47,0)
 ;.34011    D-WORK PHONE NUMBER (F),             [.34;11]
"RTN","DGRRPSKN",48,0)
 ;
"RTN","DGRRPSKN",49,0)
 ;=======================================================
"RTN","DGRRPSKN",50,0)
 ; EMERGENCY CONTACT
"RTN","DGRRPSKN",51,0)
 ;.331      E-NAME (FX),                         [.33;1]
"RTN","DGRRPSKN",52,0)
 ;.332      E-RELATIONSHIP TO PATIENT (FX),      [.33;2]
"RTN","DGRRPSKN",53,0)
 ;.333      E-STREET ADDRESS [LINE 1] (FX),      [.33;3]
"RTN","DGRRPSKN",54,0)
 ;.334      E-STREET ADDRESS [LINE 2] (FX),      [.33;4]
"RTN","DGRRPSKN",55,0)
 ;.335      E-STREET ADDRESS [LINE 3] (FX),      [.33;5]
"RTN","DGRRPSKN",56,0)
 ;.336      E-CITY (FX),                         [.33;6]
"RTN","DGRRPSKN",57,0)
 ;.337      E-STATE (P5'X),                      [.33;7]
"RTN","DGRRPSKN",58,0)
 ;.338      E-ZIP CODE (FX),                     [.33;8]
"RTN","DGRRPSKN",59,0)
 ;       .2201     E-ZIP+4 (FOX),        [.22;1]
"RTN","DGRRPSKN",60,0)
 ;.339      E-PHONE NUMBER (FX),                 [.33;9]
"RTN","DGRRPSKN",61,0)
 ;.33011    E-WORK PHONE NUMBER (F),             [.33;11]
"RTN","DGRRPSKN",62,0)
 ;
"RTN","DGRRPSKN",63,0)
 ;=======================================================
"RTN","DGRRPSKN",64,0)
 ; SECONDARY EMERGENCY CONTACT
"RTN","DGRRPSKN",65,0)
 ;.3311     E2-NAME OF SECONDARY CONTACT (FX),   [.331;1]
"RTN","DGRRPSKN",66,0)
 ;.3312     E2-RELATIONSHIP TO PATIENT (FX),     [.331;2]
"RTN","DGRRPSKN",67,0)
 ;.3313     E2-STREET ADDRESS [LINE 1] (FX),     [.331;3]
"RTN","DGRRPSKN",68,0)
 ;.3314     E2-STREET ADDRESS [LINE 2] (FX),     [.331;4]
"RTN","DGRRPSKN",69,0)
 ;.3315     E2-STREET ADDRESS [LINE 3] (FX),     [.331;5]
"RTN","DGRRPSKN",70,0)
 ;.3316     E2-CITY (FX),                        [.331;6]
"RTN","DGRRPSKN",71,0)
 ;.3317     E2-STATE (P5'X),                     [.331;7]
"RTN","DGRRPSKN",72,0)
 ;.3318     E2-ZIP CODE (FX),                    [.331;8]
"RTN","DGRRPSKN",73,0)
 ;       .2204     E2-ZIP+4 (FOX),        [.22;4]
"RTN","DGRRPSKN",74,0)
 ;.3319     E2-PHONE NUMBER (FX),                [.331;9]
"RTN","DGRRPSKN",75,0)
 ;.331011   E2-WORK PHONE NUMBER (F),            [.331;11]
"RTN","DGRRPSKN",76,0)
 ;
"RTN","DGRRPSKN",77,0)
 ;=======================================================
"RTN","DGRRPSKN",78,0)
 ;
"RTN","DGRRPSKN",79,0)
GETPSARY(PSARRAY) ;
"RTN","DGRRPSKN",80,0)
 NEW CNT
"RTN","DGRRPSKN",81,0)
 DO ADDRESS("NextOfKinAddress",$G(^DPT(PTID,.21)),7)
"RTN","DGRRPSKN",82,0)
 DO ADDRESS("AltNextOfKinAddress",$G(^DPT(PTID,.211)),3)
"RTN","DGRRPSKN",83,0)
 DO ADDRESS("DesigneeAddress",$G(^DPT(PTID,.34)),2)
"RTN","DGRRPSKN",84,0)
 DO ADDRESS("EmergencyContactAddress",$G(^DPT(PTID,.33)),1)
"RTN","DGRRPSKN",85,0)
 DO ADDRESS("AltEmergencyContactAddress",$G(^DPT(PTID,.331)),4)
"RTN","DGRRPSKN",86,0)
 QUIT
"RTN","DGRRPSKN",87,0)
 ;
"RTN","DGRRPSKN",88,0)
ADDRESS(DATASET,ADGLOB,ZIP4) ;
"RTN","DGRRPSKN",89,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="<DataSet Name='"_DATASET_"'"
"RTN","DGRRPSKN",90,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Street1^"_$P(ADGLOB,"^",3)
"RTN","DGRRPSKN",91,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Street2^"_$P(ADGLOB,"^",4)
"RTN","DGRRPSKN",92,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Street3^"_$P(ADGLOB,"^",5)
"RTN","DGRRPSKN",93,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^City^"_$P(ADGLOB,"^",6)
"RTN","DGRRPSKN",94,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^State^"_$$ADSTATE()
"RTN","DGRRPSKN",95,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^Zip^"_$$ADZIP()
"RTN","DGRRPSKN",96,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^PhoneNumber^"_$P(ADGLOB,"^",9)
"RTN","DGRRPSKN",97,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^NameOfContact^"_$P(ADGLOB,"^",1)
"RTN","DGRRPSKN",98,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^RelationshipToPatient^"_$P(ADGLOB,"^",2)
"RTN","DGRRPSKN",99,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="^WorkPhoneNumber^"_$P(ADGLOB,"^",11)
"RTN","DGRRPSKN",100,0)
 SET CNT=$G(CNT)+1,PSARRAY(CNT)="></DataSet>"_"^^^1"
"RTN","DGRRPSKN",101,0)
 QUIT
"RTN","DGRRPSKN",102,0)
 ;
"RTN","DGRRPSKN",103,0)
ADSTATE() ;
"RTN","DGRRPSKN",104,0)
 NEW DATA
"RTN","DGRRPSKN",105,0)
 SET DATA=$P(ADGLOB,"^",7)
"RTN","DGRRPSKN",106,0)
 IF DATA'="" SET DATA=$P($G(^DIC(5,DATA,0)),"^",2)
"RTN","DGRRPSKN",107,0)
 QUIT DATA
"RTN","DGRRPSKN",108,0)
 ;
"RTN","DGRRPSKN",109,0)
 Q
"RTN","DGRRPSKN",110,0)
ADZIP() ;
"RTN","DGRRPSKN",111,0)
 NEW DATA
"RTN","DGRRPSKN",112,0)
 SET DATA=$P(GLOB(.22),"^",ZIP4)
"RTN","DGRRPSKN",113,0)
 IF DATA="" SET DATA=$P(ADGLOB,"^",8)
"RTN","DGRRPSKN",114,0)
 QUIT DATA
"RTN","DGRRPSKN",115,0)
 Q
"RTN","DGRRPSXX")
0^68^B11679252
"RTN","DGRRPSXX",1,0)
DGRRPSXX ; ALB/SGG - DGRR patient services - TEST MUMPS SIDE COMPONENTS  ; Compiled December 9, 2003 15:38:25
"RTN","DGRRPSXX",2,0)
 ;;5.3;Registration;**557**;Aug 13, 1993
"RTN","DGRRPSXX",3,0)
 ;
"RTN","DGRRPSXX",4,0)
DOC ; This routine is ======== FOR TESTING PURPOSES ONLY =========
"RTN","DGRRPSXX",5,0)
 ; 
"RTN","DGRRPSXX",6,0)
 ;      It can be called to print out an XML doc from the mumps database
"RTN","DGRRPSXX",7,0)
 ;      for one patient record by inputing that patients DFN
"RTN","DGRRPSXX",8,0)
 ; eg D TEST^DGRRPSXX("DFN",dfn#,,)
"RTN","DGRRPSXX",9,0)
 ;      or to get the XML from a patient ICN
"RTN","DGRRPSXX",10,0)
 ; eg D TEST^DGRRPSXX("ICN",icn#,,)
"RTN","DGRRPSXX",11,0)
 ;
"RTN","DGRRPSXX",12,0)
 ; it can also be used to run the mumps software against every patient DFN
"RTN","DGRRPSXX",13,0)
 ; in the database, NOT RECOMMENDED  eg TEST^DGRRPSXX(,,1,)
"RTN","DGRRPSXX",14,0)
 ; or against every patient ICN in the database, 
"RTN","DGRRPSXX",15,0)
 ; NOT RECOMMENDED EITHER eg TEST^DGRRPSXX(,,1,)
"RTN","DGRRPSXX",16,0)
 ; 
"RTN","DGRRPSXX",17,0)
 ; 
"RTN","DGRRPSXX",18,0)
 ; NOTE:  INTRACE and OUTTRACE line tags have been commented out in DGRRPSGT
"RTN","DGRRPSXX",19,0)
 ; to prevent the building of the XTMP global.  If this routine is 
"RTN","DGRRPSXX",20,0)
 ; needed for testing these comments will need to be removed from DGRRPSGT
"RTN","DGRRPSXX",21,0)
 ; for TEST^DGRRPSXX to work correctly.
"RTN","DGRRPSXX",22,0)
 ; 
"RTN","DGRRPSXX",23,0)
 ; 
"RTN","DGRRPSXX",24,0)
TEST(TYPE,NUM,ALLICN,ALLDFN,REQDT) ;
"RTN","DGRRPSXX",25,0)
 ; TYPE DFN OR ICN
"RTN","DGRRPSXX",26,0)
 ; NUM DFN# OR ICN#
"RTN","DGRRPSXX",27,0)
 ;
"RTN","DGRRPSXX",28,0)
 ;
"RTN","DGRRPSXX",29,0)
 ;
"RTN","DGRRPSXX",30,0)
 NEW ICNALL,DFNALL,PTID,PARAMS
"RTN","DGRRPSXX",31,0)
 ;
"RTN","DGRRPSXX",32,0)
 I ($G(ALLICN)_$G(ALLDFN))="" D  Q
"RTN","DGRRPSXX",33,0)
 .SET PARAMS("PatientId_Type")=$G(TYPE)
"RTN","DGRRPSXX",34,0)
 .SET PARAMS("PatientId")=$G(NUM)
"RTN","DGRRPSXX",35,0)
 .SET PARAMS("REQUESTED_DATE")=$G(REQDT)
"RTN","DGRRPSXX",36,0)
 .I ($G(TYPE)="")!($G(NUM)="") DO
"RTN","DGRRPSXX",37,0)
 ..; default parameters if not defined
"RTN","DGRRPSXX",38,0)
 ..SET PARAMS("PatientId_Type")="ICN"
"RTN","DGRRPSXX",39,0)
 ..SET PARAMS("PatientId")="5000000199"
"RTN","DGRRPSXX",40,0)
 .DO APPLY
"RTN","DGRRPSXX",41,0)
 ;
"RTN","DGRRPSXX",42,0)
 I $G(ALLICN)'="" N ICN SET ICN="" FOR  SET ICN=$O(^DPT("AICN",ICN)) QUIT:ICN=""  DO
"RTN","DGRRPSXX",43,0)
 .SET PARAMS("PatientId")=ICN
"RTN","DGRRPSXX",44,0)
 .SET PARAMS("PatientId_Type")="ICN"
"RTN","DGRRPSXX",45,0)
 .DO APPLY
"RTN","DGRRPSXX",46,0)
 ;
"RTN","DGRRPSXX",47,0)
 I $G(ALLDFN)'="" N DFN SET DFN=0 FOR  SET DFN=$O(^DPT(DFN)) QUIT:'+DFN  DO
"RTN","DGRRPSXX",48,0)
 .SET PARAMS("PatientId")=DFN
"RTN","DGRRPSXX",49,0)
 .SET PARAMS("PatientId_Type")="DFN"
"RTN","DGRRPSXX",50,0)
 .DO APPLY
"RTN","DGRRPSXX",51,0)
 QUIT
"RTN","DGRRPSXX",52,0)
APPLY ;
"RTN","DGRRPSXX",53,0)
 SET PARAMS("UserId")="User ID supplied?"
"RTN","DGRRPSXX",54,0)
 SET PARAMS("UserInstitution")="User Institution Supplied?"
"RTN","DGRRPSXX",55,0)
 SET PARAMS("PrimaryDemo")=1
"RTN","DGRRPSXX",56,0)
 SET PARAMS("SecondaryDemo")=1
"RTN","DGRRPSXX",57,0)
 SET PARAMS("TertiaryDemo")=1
"RTN","DGRRPSXX",58,0)
 SET PARAMS("MainAddress")=1
"RTN","DGRRPSXX",59,0)
 SET PARAMS("TemporaryAddress")=1
"RTN","DGRRPSXX",60,0)
 SET PARAMS("ConfidentialAddress")=1
"RTN","DGRRPSXX",61,0)
 SET PARAMS("ContactInfo")=1
"RTN","DGRRPSXX",62,0)
 SET PARAMS("ADTInfo")=1
"RTN","DGRRPSXX",63,0)
 SET PARAMS("EnrollEligibility")=1
"RTN","DGRRPSXX",64,0)
 SET PARAMS("Incompetent")=1
"RTN","DGRRPSXX",65,0)
 N RESULT
"RTN","DGRRPSXX",66,0)
 DO PATIENT^DGRRPSGT(.RESULT,.PARAMS)
"RTN","DGRRPSXX",67,0)
 WRITE !! DO VIEWLAST() WRITE !!
"RTN","DGRRPSXX",68,0)
 QUIT
"RTN","DGRRPSXX",69,0)
 ;
"RTN","DGRRPSXX",70,0)
VIEWLAST(TRACENO) ; ENTER(-1) TO GET THE ONE BEFORE LAST
"RTN","DGRRPSXX",71,0)
 NEW I
"RTN","DGRRPSXX",72,0)
 IF $G(TRACENO)<0 SET TRACENO=($O(^XTMP("DGRRPS","TRACE",""),-1))+TRACENO
"RTN","DGRRPSXX",73,0)
 IF $G(TRACENO)="" SET TRACENO=($O(^XTMP("DGRRPS","TRACE",""),-1))
"RTN","DGRRPSXX",74,0)
 WRITE !!,"<< RESULT DATA FOR TRACENO: ",TRACENO," >>"
"RTN","DGRRPSXX",75,0)
 WRITE !!,"data:",!,"=====",!
"RTN","DGRRPSXX",76,0)
 SET I="" FOR  SET I=$O(^XTMP("DGRRPS","TRACE",TRACENO,"DATA",I)) QUIT:I=""  DO
"RTN","DGRRPSXX",77,0)
 .WRITE !,^XTMP("DGRRPS","TRACE",TRACENO,"DATA",I)
"RTN","DGRRPSXX",78,0)
 WRITE !!,"parameters:",!,"===========",!
"RTN","DGRRPSXX",79,0)
 SET I="" FOR  SET I=$O(^XTMP("DGRRPS","TRACE",TRACENO,"PARAMS",I)) QUIT:I=""  DO
"RTN","DGRRPSXX",80,0)
 .WRITE !,I,?30,^XTMP("DGRRPS","TRACE",TRACENO,"PARAMS",I)
"RTN","DGRRPSXX",81,0)
 WRITE !!,"<< END OF DATA FOR TRACENO: ",TRACENO," >>",!
"RTN","DGRRPSXX",82,0)
 QUIT
"RTN","DGRRPSXX",83,0)
 ;
"RTN","DGRRPSXX",84,0)
TESTERR ; test error
"RTN","DGRRPSXX",85,0)
 SET PARAMS("PatientId_Type")="XZZZICN"
"RTN","DGRRPSXX",86,0)
 SET PARAMS("PatientId")=" ICN: 5000000199^852098"
"RTN","DGRRPSXX",87,0)
 SET PARAMS("TemporaryAddress")=1
"RTN","DGRRPSXX",88,0)
 SET PARAMS("ConfidentialAddress")=1
"RTN","DGRRPSXX",89,0)
 DO PATIENT^DGRRPSGT(.RESULT,.PARAMS)
"RTN","DGRRPSXX",90,0)
 WRITE !! DO VIEWLAST() WRITE !!
"RTN","DGRRPSXX",91,0)
 QUIT
"VER")
8.0^22.0
**END**
**END**
