Released RA*5*82 SEQ #67
Extracted from mail message
**KIDS**:RA*5.0*82^

**INSTALL NAME**
RA*5.0*82
"BLD",6345,0)
RA*5.0*82^RADIOLOGY/NUCLEAR MEDICINE^0^3070117^y
"BLD",6345,1,0)
^^3^3^3061226^
"BLD",6345,1,1,0)
Patch eighty-two for the Radiology/Nuclear Medicine 5.0 software. Please
"BLD",6345,1,2,0)
review the Description and Installation Instructions for RA*5.0*82 before
"BLD",6345,1,3,0)
installing this patch.
"BLD",6345,4,0)
^9.64PA^^
"BLD",6345,6.3)
8
"BLD",6345,"KRN",0)
^9.67PA^8989.52^19
"BLD",6345,"KRN",.4,0)
.4
"BLD",6345,"KRN",.401,0)
.401
"BLD",6345,"KRN",.402,0)
.402
"BLD",6345,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",6345,"KRN",.402,"NM",1,0)
RA STATUS ENTRY    FILE #72^72^0
"BLD",6345,"KRN",.402,"NM","B","RA STATUS ENTRY    FILE #72",1)

"BLD",6345,"KRN",.403,0)
.403
"BLD",6345,"KRN",.5,0)
.5
"BLD",6345,"KRN",.84,0)
.84
"BLD",6345,"KRN",3.6,0)
3.6
"BLD",6345,"KRN",3.8,0)
3.8
"BLD",6345,"KRN",9.2,0)
9.2
"BLD",6345,"KRN",9.8,0)
9.8
"BLD",6345,"KRN",9.8,"NM",0)
^9.68A^12^10
"BLD",6345,"KRN",9.8,"NM",1,0)
RART^^0^B21656995
"BLD",6345,"KRN",9.8,"NM",2,0)
RARTVER^^0^B43178310
"BLD",6345,"KRN",9.8,"NM",3,0)
RARTE4^^0^B25247672
"BLD",6345,"KRN",9.8,"NM",4,0)
RASTED^^0^B47049414
"BLD",6345,"KRN",9.8,"NM",7,0)
RAO7XX^^0^B61483197
"BLD",6345,"KRN",9.8,"NM",8,0)
RAUTL1^^0^B44121957
"BLD",6345,"KRN",9.8,"NM",9,0)
RAHLR^^0^B49413163
"BLD",6345,"KRN",9.8,"NM",10,0)
RAHLRS^^0^B11498651
"BLD",6345,"KRN",9.8,"NM",11,0)
RAHLRPC^^0^B16016942
"BLD",6345,"KRN",9.8,"NM",12,0)
RAO7UTL^^0^B35860324
"BLD",6345,"KRN",9.8,"NM","B","RAHLR",9)

"BLD",6345,"KRN",9.8,"NM","B","RAHLRPC",11)

"BLD",6345,"KRN",9.8,"NM","B","RAHLRS",10)

"BLD",6345,"KRN",9.8,"NM","B","RAO7UTL",12)

"BLD",6345,"KRN",9.8,"NM","B","RAO7XX",7)

"BLD",6345,"KRN",9.8,"NM","B","RART",1)

"BLD",6345,"KRN",9.8,"NM","B","RARTE4",3)

"BLD",6345,"KRN",9.8,"NM","B","RARTVER",2)

"BLD",6345,"KRN",9.8,"NM","B","RASTED",4)

"BLD",6345,"KRN",9.8,"NM","B","RAUTL1",8)

"BLD",6345,"KRN",19,0)
19
"BLD",6345,"KRN",19.1,0)
19.1
"BLD",6345,"KRN",101,0)
101
"BLD",6345,"KRN",409.61,0)
409.61
"BLD",6345,"KRN",771,0)
771
"BLD",6345,"KRN",870,0)
870
"BLD",6345,"KRN",8989.51,0)
8989.51
"BLD",6345,"KRN",8989.52,0)
8989.52
"BLD",6345,"KRN",8994,0)
8994
"BLD",6345,"KRN","B",.4,.4)

"BLD",6345,"KRN","B",.401,.401)

"BLD",6345,"KRN","B",.402,.402)

"BLD",6345,"KRN","B",.403,.403)

"BLD",6345,"KRN","B",.5,.5)

"BLD",6345,"KRN","B",.84,.84)

"BLD",6345,"KRN","B",3.6,3.6)

"BLD",6345,"KRN","B",3.8,3.8)

"BLD",6345,"KRN","B",9.2,9.2)

"BLD",6345,"KRN","B",9.8,9.8)

"BLD",6345,"KRN","B",19,19)

"BLD",6345,"KRN","B",19.1,19.1)

"BLD",6345,"KRN","B",101,101)

"BLD",6345,"KRN","B",409.61,409.61)

"BLD",6345,"KRN","B",771,771)

"BLD",6345,"KRN","B",870,870)

"BLD",6345,"KRN","B",8989.51,8989.51)

"BLD",6345,"KRN","B",8989.52,8989.52)

"BLD",6345,"KRN","B",8994,8994)

"BLD",6345,"QUES",0)
^9.62^^
"BLD",6345,"REQB",0)
^9.611^5^5
"BLD",6345,"REQB",1,0)
RA*5.0*32^2
"BLD",6345,"REQB",2,0)
RA*5.0*41^2
"BLD",6345,"REQB",3,0)
RA*5.0*43^2
"BLD",6345,"REQB",4,0)
RA*5.0*71^2
"BLD",6345,"REQB",5,0)
RA*5.0*57^2
"BLD",6345,"REQB","B","RA*5.0*32",1)

"BLD",6345,"REQB","B","RA*5.0*41",2)

"BLD",6345,"REQB","B","RA*5.0*43",3)

"BLD",6345,"REQB","B","RA*5.0*57",5)

"BLD",6345,"REQB","B","RA*5.0*71",4)

"KRN",.402,229,-1)
0^1
"KRN",.402,229,0)
RA STATUS ENTRY^3061213.0954^^72^^^3070116
"KRN",.402,229,"DIAB",1,0,72,3)
PROCEDURE MODIFIERS REQUIRED?//NO;T
"KRN",.402,229,"DIAB",1,0,72,6)
ASK PROCEDURE MODIFIERS?//NO;T
"KRN",.402,229,"DIAB",1,0,72,8)
RESIDENT REPORT?;T
"KRN",.402,229,"DIAB",2,0,72,1)
APPEAR ON STATUS TRACKING?;T
"KRN",.402,229,"DIAB",2,0,72,3)
CPT MODIFIERS REQUIRED?//NO;T
"KRN",.402,229,"DIAB",2,0,72,4)
REPORT ENTERED REQUIRED?//NO;T
"KRN",.402,229,"DIAB",2,0,72,5)
ASK FOR TECHNOLOGIST?//NO;T
"KRN",.402,229,"DIAB",2,0,72,6)
ASK CPT MODIFIERS?//NO;T
"KRN",.402,229,"DIAB",2,0,72,8)
STAFF REPORT?;T
"KRN",.402,229,"DIAB",3,0,72,1)
USER KEY NEEDED;T
"KRN",.402,229,"DIAB",3,0,72,2)
TECHNOLOGIST REQUIRED?//NO;T
"KRN",.402,229,"DIAB",3,0,72,4)
IMPRESSION REQUIRED?//Y;T
"KRN",.402,229,"DIAB",3,0,72,5)
ASK FOR INTERPRETING PHYS?//NO;T
"KRN",.402,229,"DIAB",3,0,72,6)
ASK FOR USER CODE?//NO;T
"KRN",.402,229,"DIAB",3,0,72,7)
CLINIC REPORT?;T
"KRN",.402,229,"DIAB",3,0,72,8)
DELINQUENT STATUS REPORT?;T
"KRN",.402,229,"DIAB",4,0,72,2)
RESIDENT OR STAFF REQUIRED?//NO;T
"KRN",.402,229,"DIAB",4,0,72,4)
VERIFIED REPORT REQUIRED?//NO;T
"KRN",.402,229,"DIAB",4,0,72,5)
ASK FOR PROCEDURE?//NO;T
"KRN",.402,229,"DIAB",4,0,72,6)
ASK MEDICATIONS & DOSAGES?//NO;T
"KRN",.402,229,"DIAB",4,0,72,7)
PTF BEDSECTION REPORT?;T
"KRN",.402,229,"DIAB",5,0,72,0)
STATUS;T
"KRN",.402,229,"DIAB",5,0,72,1)
DEFAULT NEXT STATUS;T
"KRN",.402,229,"DIAB",5,0,72,2)
DETAILED PROCEDURE REQUIRED?//NO;T
"KRN",.402,229,"DIAB",5,0,72,3)
RADIOPHARMS/DOSAGES REQUIRED?//NO;T
"KRN",.402,229,"DIAB",5,0,72,5)
ASK FOR FILM DATA?//NO;T
"KRN",.402,229,"DIAB",5,0,72,6)
ASK MED ADM DT/TIME/PERSON?//NO;T
"KRN",.402,229,"DIAB",5,0,72,7)
SERVICE REPORT?;T
"KRN",.402,229,"DIAB",6,0,72,2)
FILM ENTRY REQUIRED?//NO;T
"KRN",.402,229,"DIAB",6,0,72,3)
ACTIVITY DRAWN REQUIRED?//NO;T
"KRN",.402,229,"DIAB",6,0,72,5)
ASK FOR DIAGNOSTIC CODE?//NO;T
"KRN",.402,229,"DIAB",6,0,72,7)
SHARING/CONTRACT REPORT?;T
"KRN",.402,229,"DIAB",6,0,72,8)
PRINT DOSAGE TICKET?//NO;T
"KRN",.402,229,"DIAB",7,0,72,0)
ORDER;T
"KRN",.402,229,"DIAB",7,0,72,1)
ALLOW CANCELLING?//NO;T
"KRN",.402,229,"DIAB",7,0,72,2)
DIAGNOSTIC CODE REQUIRED?//NO;T
"KRN",.402,229,"DIAB",7,0,72,3)
DRAWN DT/TIME/PERSON REQUIRED?//NO;T
"KRN",.402,229,"DIAB",7,0,72,5)
ASK FOR CAMERA/EQUIP/RM?//NO;T
"KRN",.402,229,"DIAB",7,0,72,7)
WARD REPORT?;T
"KRN",.402,229,"DIAB",8,0,72,1)
GENERATE EXAM ALERT?;T
"KRN",.402,229,"DIAB",8,0,72,2)
CAMERA/EQUIP/RM REQUIRED?//NO;T
"KRN",.402,229,"DIAB",8,0,72,3)
ADM DT/TIME/PERSON REQUIRED?//NO;T
"KRN",.402,229,"DIAB",8,0,72,6)
ASK RADIOPHARMS AND DOSAGES?//NO;T
"KRN",.402,229,"DIAB",8,0,72,7)
FILM USAGE REPORT?;T
"KRN",.402,229,"DIAB",9,0,72,1)
GENERATE EXAMINED HL7 MESSAGE;T
"KRN",.402,229,"DIAB",9,0,72,3)
ROUTE/SITE REQUIRED?//NO;T
"KRN",.402,229,"DIAB",9,0,72,6)
ASK ACTIVITY DRAWN?//NO;T
"KRN",.402,229,"DIAB",9,0,72,7)
TECHNOLOGIST REPORT?;T
"KRN",.402,229,"DIAB",10,0,72,3)
LOT NO. REQUIRED?//NO;T
"KRN",.402,229,"DIAB",10,0,72,6)
ASK DRAWN DT/TIME/PERSON?//NO;T
"KRN",.402,229,"DIAB",10,0,72,7)
AMIS REPORT?;T
"KRN",.402,229,"DIAB",11,0,72,1)
VISTARAD CATEGORY;T
"KRN",.402,229,"DIAB",11,0,72,3)
VOLUME/FORM REQUIRED?//NO;T
"KRN",.402,229,"DIAB",11,0,72,6)
ASK ADM DT/TIME/PERSON?//NO;T
"KRN",.402,229,"DIAB",11,0,72,7)
DETAILED PROCEDURE REPORT?;T
"KRN",.402,229,"DIAB",12,0,72,6)
ASK ROUTE/SITE OF ADM?//NO;T
"KRN",.402,229,"DIAB",12,0,72,7)
CAMERA/EQUIP/RM REPORT?;T
"KRN",.402,229,"DIAB",13,0,72,6)
ASK LOT NO.?//NO;T
"KRN",.402,229,"DIAB",13,0,72,7)
PHYSICIAN REPORT?;T
"KRN",.402,229,"DIAB",14,0,72,6)
ASK VOLUME/FORM?//NO;T
"KRN",.402,229,"DR",1,72)
K RAEXST,RANMFLG;S RAEXST(0)=$G(^RA(72,DA,0));S RAEXST(1)=$P(RAEXST(0),"^");S RAEXST(3)=$P(RAEXST(0),"^",3);.01T~;S:$P($G(^RA(79.2,+$G(RAIMGTYI),0)),"^",5)="Y" RANMFLG="";3T~;S X=X;S RAEXST(31)=$P(^RA(72,DA,0),"^",3);
"KRN",.402,229,"DR",1,72,1)
D ORDEL^RAUTL4:RAEXST(31)']""&($D(^RADPT("AS",DA)));5T~;4T~;S DIC("W")="W ?34,""Order: "",$P(^(0),""^"",3)";2T~;K DIC("W");6T~//NO;1T~;8T~;S:'$$IMAGE^RARIC1() Y="@11";9T~;@11;W !!?5,"Status Change Requirements";
"KRN",.402,229,"DR",1,72,2)
W !?5,"--------------------------";W !?5,"Please indicate which of the following is required",!?5,"in order to place an exam into the '",RAEXST(1),"' status:",!;.11T~//NO;.12T~//NO;.13T~//NO;.14T~//NO;.15T~//NO;.16T~//NO;
"KRN",.402,229,"DR",1,72,3)
.113T~//NO;.114T~//NO;S:'$D(RANMFLG) Y="@10";W !!?5,"(Radiopharmaceutical requirements)",!;.51T~//NO;.53T~//NO;.54T~//NO;.55T~//NO;.57T~//NO;.58T~//NO;.59T~//NO;@10;
"KRN",.402,229,"DR",1,72,4)
W !!?3,"WARNING: You must use the reporting feature of the system as",!?12,"a prerequisite for the following requirements:";.111T~//NO;.116T~//Y;.112T~//NO;W !!?5,"Status Tracking Functions";W !?5,"-------------------------";
"KRN",.402,229,"DR",1,72,5)
W !?5,"Please indicate which of the following should be asked when",!?5,"changing an exam's status to '",RAEXST(1),"' while using",!?5,"the 'status tracking' feature: ",!;.21T~//NO;.22T~//NO;.23T~//NO;.24T~//NO;.25T~//NO;.26T~//NO;
"KRN",.402,229,"DR",1,72,6)
.213T~//NO;.214T~//NO;.211T~//NO;.27T~//NO;.28T~//NO;S:'$D(RANMFLG) Y="@20";W !!?5,"(Radiopharmaceutical functions)",!;.61T~//NO;.63T~//NO;.64T~//NO;.65T~//NO;.67T~//NO;.68T~//NO;.69T~//NO;@20;W !!?5,"Management Report Criteria";
"KRN",.402,229,"DR",1,72,7)
W !?5,"--------------------------";W !?5,"Please indicate which of the following workload reports should",!?5,"include exams with the '",RAEXST(1),"' status: ",!;.31T~;.32T~;.33T~;.34T~;.35T~;.36T~;.37T~;.38T~;.39T~;.311T~;.312T~;
"KRN",.402,229,"DR",1,72,8)
.313T~;.314T~;.315T~;I '$D(RANMFLG) S Y="@99";W !!?5,"Radiopharmaceutical Dosage Ticket Print Control",!?5,$$REPEAT^XLFSTR("-",$L("Radiopharmaceutical Dosage Ticket Print Control")),!;.611T~//NO;@99;K RANMFLG;
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"PKG",18,-1)
1^1
"PKG",18,0)
RADIOLOGY/NUCLEAR MEDICINE^RA^REGISTERS PATIENTS,RECORDS EXAMS,PROFILES,AMIS REPORTS
"PKG",18,20,0)
^9.402P^^
"PKG",18,22,0)
^9.49I^1^1
"PKG",18,22,1,0)
5.0^3051109^2980407^50
"PKG",18,22,1,"PAH",1,0)
82^3070117
"PKG",18,22,1,"PAH",1,1,0)
^^3^3^3070117
"PKG",18,22,1,"PAH",1,1,1,0)
Patch eighty-two for the Radiology/Nuclear Medicine 5.0 software. Please
"PKG",18,22,1,"PAH",1,1,2,0)
review the Description and Installation Instructions for RA*5.0*82 before
"PKG",18,22,1,"PAH",1,1,3,0)
installing this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","RAHLR")
0^9^B49413163^B43467962
"RTN","RAHLR",1,0)
RAHLR ;HISC/CAH/BNT - Generate Common Order (ORM) Message ;11/10/99  10:42
"RTN","RAHLR",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**2,12,10,25,47,71,82**;Mar 16, 1998;Build 8
"RTN","RAHLR",3,0)
 ;Generates msg whenever a case is registered or cancelled or examined
"RTN","RAHLR",4,0)
 ;              registered        cancelled        examined
"RTN","RAHLR",5,0)
 ; Order control : NW                CA               XO
"RTN","RAHLR",6,0)
 ; Order status  : IP                CA               CM
"RTN","RAHLR",7,0)
 ;02/14/2006 BAY/KAM RA*5*71 Add ability to update exam data to V/R
"RTN","RAHLR",8,0)
 S:$D(HLNDAP) ZTSAVE("HLNDAP")="" S:$D(HLDAP) ZTSAVE("HLDAP")="" S:$D(RAEXMDUN) ZTSAVE("RAEXMDUN")=""
"RTN","RAHLR",9,0)
 S:$D(RAEXEDT) ZTSAVE("RAEXEDT")=""
"RTN","RAHLR",10,0)
 S ZTSAVE("RADFN")="",ZTSAVE("RADTI")="",ZTSAVE("RACNI")="",ZTIO="",ZTDTH=$H,ZTDESC="Rad/Nuc Med Compiling HL7 Common Order",ZTRTN="EN^RAHLR" D ^%ZTLOAD
"RTN","RAHLR",11,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE Q
"RTN","RAHLR",12,0)
EN ; Called from the RA REG & RA CANCEL & RA EXAMINED protocols
"RTN","RAHLR",13,0)
 ; Input Variables:
"RTN","RAHLR",14,0)
 ;   RADFN=file 2 IEN (DFN)
"RTN","RAHLR",15,0)
 ;   RADTI=file 70 Exam subrec IEN (reverse date/time of exam)
"RTN","RAHLR",16,0)
 ;   RACNI=file 70 Case subrecord IEN
"RTN","RAHLR",17,0)
 ;   RAEID=ien of the event driver protocol (defined in RAHLRPC)
"RTN","RAHLR",18,0)
 ; Output Variables:
"RTN","RAHLR",19,0)
 ;   HLA("HLS") array containing HL7 msg
"RTN","RAHLR",20,0)
 ;
"RTN","RAHLR",21,0)
 N EID,HL,INT,HLQ,HLFS,HLECH,HLA,HLCS,HLSCS,HLREP,HLECH
"RTN","RAHLR",22,0)
 N DFN,DIWF,DIWL,DIWR,GMRAL,PI,RACANC,RACN0,RACPT,RACPTNDE,RADTE,RAI,RAN,RAOBR4,RAPRCNDE,RAPROC,RAPROCIT,RAPRV,RAX0,VA,VADM,VAERR,X,X0,Y,X1,OBR36
"RTN","RAHLR",23,0)
 ;
"RTN","RAHLR",24,0)
 D INIT ; initialize some HL7 variables
"RTN","RAHLR",25,0)
 ;RAEXMDUN passed from EXM^RAHLRPC if conditions are met
"RTN","RAHLR",26,0)
 Q:+$G(HL)=15  ;no known client(item) linked to the event driver protocol
"RTN","RAHLR",27,0)
 Q:$O(HL(""))=""  ;disabled server appl, or no server appl
"RTN","RAHLR",28,0)
 S RACN0=$S($D(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)):^(0),1:"") Q:RACN0']""
"RTN","RAHLR",29,0)
 ;Generate Message Text
"RTN","RAHLR",30,0)
 ;**patch RA*5.0*47 branch to new HL7 logic when the HL7 version surpasses 2.3 **
"RTN","RAHLR",31,0)
 ;I HL("VER")]"2.3" D EN^RAHLR1(RADFN,RADTI,RACNI,RAEID) Q
"RTN","RAHLR",32,0)
 ;** branch to new HL7 logic when the HL7 version surpasses 2.3 **
"RTN","RAHLR",33,0)
 S RAPROC=+$P(RACN0,U,2) I 'RAPROC Q  ;If case entered via 'Enter Last Past Visit before DHCP option, and procedure 'OTHER' is inactive, RAPROC will be null and will cause bomb-out unless we quit here
"RTN","RAHLR",34,0)
 S RAPROCIT=+$P($G(^RAMIS(71,RAPROC,0)),U,12),RAPROCIT=$P(^RA(79.2,RAPROCIT,0),U,1)
"RTN","RAHLR",35,0)
 S (RADTE,OBR36)=9999999.9999-RADTI,RADTE=$E(RADTE,4,7)_$E(RADTE,2,3)_"-"_+RACN0,RACANC=$S($D(^RA(72,"AA",RAPROCIT,0,+$P(RACN0,"^",3))):1,1:0)
"RTN","RAHLR",36,0)
 S RAPRCNDE=$G(^RAMIS(71,+RAPROC,0)),RACPT=+$P(RAPRCNDE,U,9),RACPTNDE=$$NAMCODE^RACPTMSC(RACPT,DT)
"RTN","RAHLR",37,0)
 ;RA*5*82 RAEXEDT= Override the EXM conditions if Case edited
"RTN","RAHLR",38,0)
 I $G(RAEXMDUN)=1,'$G(RAEXEDT),$P(RACN0,U,30)'="" Q  ;last chance to stop exm'd msg if it's already been sent
"RTN","RAHLR",39,0)
 ;Compile 'PID' Segment
"RTN","RAHLR",40,0)
 K VA,VADM,VAERR,RAVADM S DFN=RADFN D DEM^VADPT I VADM(1)']"" S HLP("ERRTEXT")="Invalid Patient Identifier" G EXIT
"RTN","RAHLR",41,0)
 S RAVADM(3)=$S($E(+VADM(3),6,7)="00":"",1:+VADM(3)) ; NOTE: Check
"RTN","RAHLR",42,0)
 ; for an inexact date of birth.  If inexact, pass null for DOB in
"RTN","RAHLR",43,0)
 ; the 'PID' segment.  Some COTS systems can't handle inexact DOB's.
"RTN","RAHLR",44,0)
 I HL("VER")']"2.2" D
"RTN","RAHLR",45,0)
 .S HLA("HLS",1)="PID"_HLFS_HLFS_$G(VA("PID"))_HLFS_$$M11^HLFNC(RADFN)_HLFS_HLFS_$$HLNAME^HLFNC(VADM(1))_HLFS_HLFS_$$HLDATE^HLFNC(RAVADM(3))_HLFS_$S(VADM(5)]"":$S("MF"[$P(VADM(5),"^"):$P(VADM(5),"^"),1:"O"),1:"U")
"RTN","RAHLR",46,0)
 .S:$P(VADM(2),"^")]"" $P(HLA("HLS",1),HLFS,20)=$P(VADM(2),"^")
"RTN","RAHLR",47,0)
 I HL("VER")]"2.2" S HLA("HLS",1)=$$EN^VAFHLPID(DFN,"2,3,5,7,8,19,20")
"RTN","RAHLR",48,0)
 K RAVADM
"RTN","RAHLR",49,0)
 ;Compile 'ORC' Segment
"RTN","RAHLR",50,0)
 S X0="" ;if exam-set or print-set, store parent name if order exists
"RTN","RAHLR",51,0)
 I $P(RACN0,U,25) S X0=$P(RACN0,U,11),X0=$P($G(^RAO(75.1,+X0,0)),U,2),X0=$P($G(^RAMIS(71,+X0,0)),U),X0=$S(X0="":"ORIGINAL ORDER PURGED",1:X0),X0=$S($P(RACN0,U,25)=1:"EXAM",1:"PRINT")_"SET: "_X0
"RTN","RAHLR",52,0)
 ; BNT - Added ORC4 Placer Group Number for Printset identification.
"RTN","RAHLR",53,0)
 ; ORC4 is a combination of SSN with the order inverted date/time.
"RTN","RAHLR",54,0)
 S RAORC4="" I $P($G(RACN0),U,25)=2 D
"RTN","RAHLR",55,0)
 . S:$P(VADM(2),"^")]"" RAORC4=$P(VADM(2),"^")
"RTN","RAHLR",56,0)
 . S RAORC4=$G(RAORC4)_RADTI
"RTN","RAHLR",57,0)
 S HLA("HLS",2)="ORC"_HLFS_$S(RACANC:"CA",$G(RAEXMDUN)=1:"XO",1:"NW")_HLFS_HLFS_HLFS_RAORC4_HLFS_$S(RACANC:"CA",$G(RAEXMDUN)=1:"CM",1:"IP")_HLFS_HLFS_HLFS_X0_HLFS_HLDT1
"RTN","RAHLR",58,0)
 ;Compile 'OBR' Segment
"RTN","RAHLR",59,0)
 S RAOBR4=$P(RACPTNDE,U)_$E(HLECH)_$P(RACPTNDE,U,2)_$E(HLECH)_"C4"_$E(HLECH)_+RAPROC_$E(HLECH)_$P(RAPRCNDE,U)_$E(HLECH)_"99RAP"
"RTN","RAHLR",60,0)
 ; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLR",61,0)
 ; S RAOBR4=$P(RACPTNDE,U)_$E(HLECH)_$$ESCAPE^RAHLRU($P(RACPTNDE,U,2))_$E(HLECH)_"C4"_$E(HLECH)_+RAPROC_$E(HLECH)_$$ESCAPE^RAHLRU($P(RAPRCNDE,U))_$E(HLECH)_"99RAP"
"RTN","RAHLR",62,0)
 I $P(RACPTNDE,U)']"" S $P(RAOBR4,$E(HLECH),1,3)=$P(RAOBR4,$E(HLECH),4,5)_$E(HLECH)_"LOCAL"
"RTN","RAHLR",63,0)
 S HLA("HLS",3)="OBR"_HLFS_HLFS_RADTE_HLFS_RADTI_"-"_RACNI_$E(HLECH)_RADTE_$E(HLECH)_"L"_HLFS_RAOBR4_HLFS_HLFS_HLFS_HLDT1
"RTN","RAHLR",64,0)
 S HLA("HLS",3)=HLA("HLS",3)_HLFS_HLQ_HLFS_HLQ_HLFS_HLFS_HLFS_HLFS_HLFS_HLQ_HLFS_HLFS
"RTN","RAHLR",65,0)
 S RAPRV=$$GET1^DIQ(200,+$P(RACN0,"^",14),.01)
"RTN","RAHLR",66,0)
 S HLA("HLS",3)=HLA("HLS",3)_$S(RAPRV]"":+$P(RACN0,"^",14)_$E(HLECH)_$$HLNAME^HLFNC(RAPRV),1:"")
"RTN","RAHLR",67,0)
 ;
"RTN","RAHLR",68,0)
 N RACN00,RA20 S RACN00=$G(^RADPT(RADFN,"DT",RADTI,0))
"RTN","RAHLR",69,0)
 ;Seg's fld 20 = pce 21 --> ien file #79.1~name of img loc~stn #~stn name
"RTN","RAHLR",70,0)
 S RA20=+$G(^RA(79.1,+$P(RACN00,U,4),0))
"RTN","RAHLR",71,0)
 S $P(HLA("HLS",3),HLFS,21)=$P(RACN00,U,4)_$E(HLECH)_$P($G(^SC(RA20,0)),U)_$E(HLECH)_$P(RACN00,U,3)_$E(HLECH)_$P($G(^DIC(4,+$P(RACN00,U,3),0)),U)
"RTN","RAHLR",72,0)
 S $P(HLA("HLS",3),HLFS,21)=$P(HLA("HLS",3),HLFS,21)
"RTN","RAHLR",73,0)
 ; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLR",74,0)
 ; S $P(HLA("HLS",3),HLFS,21)=$$ESCAPE^RAHLRU($P(HLA("HLS",3),HLFS,21))
"RTN","RAHLR",75,0)
 ;Seg's fld 21 = pce 22 --> abbrv I-type~Img type name
"RTN","RAHLR",76,0)
 S RA20=$G(^RA(79.2,+$P(RACN00,U,2),0))
"RTN","RAHLR",77,0)
 S $P(HLA("HLS",3),HLFS,22)=$P(RA20,U,3)_$E(HLECH)_$P(RA20,U)
"RTN","RAHLR",78,0)
 S $P(HLA("HLS",3),HLFS,22)=$P(HLA("HLS",3),HLFS,22)
"RTN","RAHLR",79,0)
 ; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLR",80,0)
 ; S $P(HLA("HLS",3),HLFS,22)=$$ESCAPE^RAHLRU($P(HLA("HLS",3),HLFS,22))
"RTN","RAHLR",81,0)
 ;
"RTN","RAHLR",82,0)
 S $P(HLA("HLS",3),HLFS,23)=HLDT1,$P(HLA("HLS",3),HLFS,19)=$S($D(^DIC(42,+$P(RACN0,"^",6),0)):$P(^(0),"^"),$D(^SC(+$P(RACN0,"^",8),0)):$P(^(0),"^"),1:"Unknown")
"RTN","RAHLR",83,0)
 ;
"RTN","RAHLR",84,0)
 I $$PATCH^XPDUTL("RA*5.0*75") D  ;prevents errors @ P75 test sites
"RTN","RAHLR",85,0)
 .; OBR-31.2 = Reason for Study P75
"RTN","RAHLR",86,0)
 .S $P(HLA("HLS",3),HLFS,32)=$E(HLECH)_$$ESCAPE^RAHLRU($P($G(^RAO(75.1,+$P(RACN0,"^",11),.1)),U))
"RTN","RAHLR",87,0)
 .Q
"RTN","RAHLR",88,0)
 ;
"RTN","RAHLR",89,0)
 ; OBR-36 = Exam Date/Time
"RTN","RAHLR",90,0)
 S $P(HLA("HLS",3),HLFS,37)=$$FMTHL7^XLFDT(OBR36)
"RTN","RAHLR",91,0)
 ;
"RTN","RAHLR",92,0)
 I 'RACANC S X=$P($G(^RAO(75.1,+$P(RACN0,"^",11),0)),"^",6),$P(HLA("HLS",3),HLFS,28)=$E(HLECH)_$E(HLECH)_$E(HLECH)_$E(HLECH)_$E(HLECH)_$TR(X,"129","SAR")
"RTN","RAHLR",93,0)
 ; if long str, break so 2nd str begins with separator to avoid abend
"RTN","RAHLR",94,0)
 I $L(HLA("HLS",3))>245 N RAPART,RA1 S RA1=HLA("HLS",3) F RAPART=5:1:15 S RAPART(1)=$P(RA1,HLFS,1,RAPART),RAPART(2)=$P(RA1,HLFS,RAPART+1,99) Q:$L(RAPART(1))<245&($L(RAPART(2))<245)&($P(RAPART(2),HLFS)="")
"RTN","RAHLR",95,0)
 I $D(RAPART) K:RAPART=15 RAPART ;if RAPART reaches 15, then something's wrong so kill RAPART to allow abend due "string too long"
"RTN","RAHLR",96,0)
 I $D(RAPART) S HLA("HLS",3)=$P(RAPART(1),HLFS)_HLFS,HLA("HLS",3,1)=$P(RAPART(1),HLFS,2,99)_HLFS,HLA("HLS",3,2)=RAPART(2) K RAPART,RA1
"RTN","RAHLR",97,0)
OBXPRC ;Compile 'OBX' Segment for Procedure
"RTN","RAHLR",98,0)
 S RAN=4 D OBXPRC^RAHLRU
"RTN","RAHLR",99,0)
OBXMOD ;Compile 'OBX' Segment for two types of Modifiers
"RTN","RAHLR",100,0)
 S RAN=5 D OBXMOD^RAHLRU
"RTN","RAHLR",101,0)
OBXHIST ;Compile 'OBX' Segment for Clinical History
"RTN","RAHLR",102,0)
 I '$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"H",0)) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"H"_$E(HLECH)_"HISTORY"_$E(HLECH)_"L"_HLFS_HLFS_"None Entered" D OBX11^RAHLRU G ALLER
"RTN","RAHLR",103,0)
 K ^UTILITY($J,"W") S DIWF="",DIWR=80,DIWL=1 F RAI=0:0 S RAI=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"H",RAI)) Q:'RAI  I $D(^(RAI,0)) S X=^(0) D ^DIWP
"RTN","RAHLR",104,0)
 F RAI=0:0 S RAI=$O(^UTILITY($J,"W",DIWL,RAI)) Q:'RAI  I $D(^(RAI,0)) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"H"_$E(HLECH)_"HISTORY"_$E(HLECH)_"L"_HLFS_HLFS_^(0) D OBX11^RAHLRU
"RTN","RAHLR",105,0)
ALLER ;Compile 'OBX' Segment for Allergies
"RTN","RAHLR",106,0)
 S DFN=RADFN D ALLERGY^RADEM S X="" I $D(GMRAL) S RAI=0 F  S RAI=$O(PI(RAI)) Q:RAI'>0  S X0=PI(RAI) I X0]"" Q:($L(X)+$L(X0))>200  S X=X_X0_", "
"RTN","RAHLR",107,0)
 I $L(X) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"A"_$E(HLECH)_"ALLERGIES"_$E(HLECH)_"L"_HLFS_HLFS_X D OBX11^RAHLRU
"RTN","RAHLR",108,0)
OBXTCM ;Compile 'OBX' Segment for Tech Comment
"RTN","RAHLR",109,0)
 D OBXTCM^RAHLRU
"RTN","RAHLR",110,0)
EXIT ; set HL7 message type & return to protocol
"RTN","RAHLR",111,0)
 K ^UTILITY($J,"W")
"RTN","RAHLR",112,0)
 S HL("MTN")="ORM"
"RTN","RAHLR",113,0)
 N HLEID,HLARYTYP,HLFORMAT,HLMTIEN,HLP
"RTN","RAHLR",114,0)
 S HLEID=EID,HLARYTYP="LM",HLFORMAT=1,HLMTIEN="",HLP("PRIORITY")="I"
"RTN","RAHLR",115,0)
 D GENERATE^HLMA(HLEID,HLARYTYP,HLFORMAT,.HLRESLT,HLMTIEN,.HLP)
"RTN","RAHLR",116,0)
 Q
"RTN","RAHLR",117,0)
Q ;Entry Point to Process an ORR Message (Just a Quit Since No Processing is Required)
"RTN","RAHLR",118,0)
 Q
"RTN","RAHLR",119,0)
INIT ; initialize HL7 variables
"RTN","RAHLR",120,0)
 D NOW^%DTC S HLDT=%,HLDT1=$$HLDATE^HLFNC(%)
"RTN","RAHLR",121,0)
 Q:'$G(RAEID)  S EID=RAEID
"RTN","RAHLR",122,0)
 S HL="HLS(""HLS"")",INT=1
"RTN","RAHLR",123,0)
 D INIT^HLFNC2(EID,.HL,INT)
"RTN","RAHLR",124,0)
 Q:'$D(HL("Q"))  ;no server application defined
"RTN","RAHLR",125,0)
 S HLQ=HL("Q"),HLFS=HL("FS")
"RTN","RAHLR",126,0)
 S HLECH=HL("ECH")
"RTN","RAHLR",127,0)
 S HLFS=HL("FS")
"RTN","RAHLR",128,0)
 S HLCS=$E(HL("ECH"))
"RTN","RAHLR",129,0)
 S HLSCS=$E(HL("ECH"),4)
"RTN","RAHLR",130,0)
 S HLREP=$E(HL("ECH"),2)
"RTN","RAHLR",131,0)
 Q
"RTN","RAHLRPC")
0^11^B16016942^B2725117
"RTN","RAHLRPC",1,0)
RAHLRPC ;HIRMFO/BNT-Rad/NM HL7 Protocol calls ;05/21/99   14:50
"RTN","RAHLRPC",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**12,25,54,71,82**;Mar 16, 1998;Build 8
"RTN","RAHLRPC",3,0)
 ; 03/16/2006 *71 Rem Call 124379 allow exam updates to create HL7 msg
"RTN","RAHLRPC",4,0)
REG ; register exam
"RTN","RAHLRPC",5,0)
 N X,RAPID,RAEID
"RTN","RAHLRPC",6,0)
 S RAPID="RA REF" ; get all protocols beginning RA REG
"RTN","RAHLRPC",7,0)
 F  S RAPID=$O(^ORD(101,"B",RAPID)) Q:RAPID'["RA REG"  D
"RTN","RAHLRPC",8,0)
 .S RAEID=$O(^ORD(101,"B",RAPID,0))
"RTN","RAHLRPC",9,0)
 .I RAEID,'$L($P(^ORD(101,RAEID,0),"^",3)) D EN^RAHLR
"RTN","RAHLRPC",10,0)
 Q
"RTN","RAHLRPC",11,0)
CANCEL ; cancel exam
"RTN","RAHLRPC",12,0)
 N X,RAPID,RAEID
"RTN","RAHLRPC",13,0)
 S RAPID="RA CANCEK" ; get all protocols beginning RA CANCEL
"RTN","RAHLRPC",14,0)
 F  S RAPID=$O(^ORD(101,"B",RAPID)) Q:RAPID'["RA CANCEL"  D
"RTN","RAHLRPC",15,0)
 .S RAEID=$O(^ORD(101,"B",RAPID,0))
"RTN","RAHLRPC",16,0)
 .I RAEID,'$L($P(^ORD(101,RAEID,0),"^",3)) D EN^RAHLR
"RTN","RAHLRPC",17,0)
 Q
"RTN","RAHLRPC",18,0)
 ;
"RTN","RAHLRPC",19,0)
RPT ; report verified or released/not verified
"RTN","RAHLRPC",20,0)
 N X,RAPID,RAEID,RASSS ; RASSS subcriber array to be passed to HLL for GENERATE^HLMA
"RTN","RAHLRPC",21,0)
 S X="^%ET",@^%ZOSF("TRAP")
"RTN","RAHLRPC",22,0)
 S RAPID="RA RPS" ; get all protocols beginning RA RPT
"RTN","RAHLRPC",23,0)
 F  S RAPID=$O(^ORD(101,"B",RAPID)) Q:RAPID'["RA RPT"  D
"RTN","RAHLRPC",24,0)
 .S RAEID=$O(^ORD(101,"B",RAPID,0)) K RASSS  ; RA*5*81
"RTN","RAHLRPC",25,0)
 .S:$L($G(RANOSEND)) RAEID=$$GETEID(RAEID,RANOSEND,.RASSS) ;RA*5*81
"RTN","RAHLRPC",26,0)
 .I RAEID,'$L($P(^ORD(101,RAEID,0),"^",3)) D EN^RAHLRPT
"RTN","RAHLRPC",27,0)
 K RANOSEND
"RTN","RAHLRPC",28,0)
 Q
"RTN","RAHLRPC",29,0)
 ;
"RTN","RAHLRPC",30,0)
EXM ;Examined case; called from RAUTL1 and RASTED after a case has been edited.
"RTN","RAHLRPC",31,0)
 ;
"RTN","RAHLRPC",32,0)
 ;Called from RAUTL1 and RASTED after a case's status is upgraded
"RTN","RAHLRPC",33,0)
 ; and case's 30th piece is null
"RTN","RAHLRPC",34,0)
 ;
"RTN","RAHLRPC",35,0)
 ;If this new status is :
"RTN","RAHLRPC",36,0)
 ; at a status (or higher than a status) where
"RTN","RAHLRPC",37,0)
 ; GENERATE EXAMINED HL7 MSG = Y,
"RTN","RAHLRPC",38,0)
 ; then :
"RTN","RAHLRPC",39,0)
 ; 1. send an HL7 msg re this case having reached EXAMINED status
"RTN","RAHLRPC",40,0)
 ; 2. set subfile 70.03's HL7 EXAMINED MSG SENT  to  Y
"RTN","RAHLRPC",41,0)
 ;
"RTN","RAHLRPC",42,0)
 ; RALOWER = next lower status
"RTN","RAHLRPC",43,0)
 ; RANEWST = new status ien
"RTN","RAHLRPC",44,0)
 ; RAEXEDT = Indication of editing of: proc, proc mod, req phys, CPT mod, Tech comm...
"RTN","RAHLRPC",45,0)
 ; RAGENHL7 = Indication that sending ORU is due...
"RTN","RAHLRPC",46,0)
 ; 
"RTN","RAHLRPC",47,0)
 N RAIMGTYI,RAIMGTYJ,RALOWER,RANEWST,RAEXMDUN,RAGENHL7
"RTN","RAHLRPC",48,0)
 S RAIMGTYI=$P($G(^RADPT(RADFN,"DT",RADTI,0)),U,2),RAIMGTYJ=$P(^RA(79.2,RAIMGTYI,0),U),RANEWST=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)),U,3)
"RTN","RAHLRPC",49,0)
 S:$P(^RA(72,RANEWST,0),U,8)="Y" RAGENHL7=1 ;this status has GEN HL7 marked Y
"RTN","RAHLRPC",50,0)
 ; look thru lower statuses for GEN HL7 marked Y
"RTN","RAHLRPC",51,0)
DOWN S RALOWER=$P($G(^RA(72,+RANEWST,0)),U,3)
"RTN","RAHLRPC",52,0)
 I '$G(RAGENHL7) F  S RALOWER=$O(^RA(72,"AA",RAIMGTYJ,RALOWER),-1) Q:RALOWER<1  S:$P(^RA(72,+$O(^RA(72,"AA",RAIMGTYJ,RALOWER,0)),0),U,8)="Y" RAGENHL7=1
"RTN","RAHLRPC",53,0)
 ;?? none of the lower status levels have GEN HL7 marked Y
"RTN","RAHLRPC",54,0)
 K:$P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),U,30)="Y" RAGENHL7 ;already sent
"RTN","RAHLRPC",55,0)
 Q:'$G(RAEXEDT)&'$G(RAGENHL7)
"RTN","RAHLRPC",56,0)
 ;
"RTN","RAHLRPC",57,0)
1 N RAEXMDUN
"RTN","RAHLRPC",58,0)
 S RAEXMDUN=1
"RTN","RAHLRPC",59,0)
A1 N X,RAPID,RAEID
"RTN","RAHLRPC",60,0)
 S RAPID="RA EXAMINEC" ; get all protocols beginning RA EXAMINED
"RTN","RAHLRPC",61,0)
 F  S RAPID=$O(^ORD(101,"B",RAPID)) Q:RAPID'["RA EXAMINED"  D
"RTN","RAHLRPC",62,0)
 .N RAGENHL7 S RAEID=$O(^ORD(101,"B",RAPID,0))
"RTN","RAHLRPC",63,0)
 .I RAEID,'$L($P(^ORD(101,RAEID,0),"^",3)) D EN^RAHLR
"RTN","RAHLRPC",64,0)
 S:$G(RAGENHL7) $P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),U,30)="Y"
"RTN","RAHLRPC",65,0)
 Q
"RTN","RAHLRPC",66,0)
 ;
"RTN","RAHLRPC",67,0)
GETEID(RAEID,RANOSEND,RASSS) ; RA*5*81   Return RAEID or 0 (zero)  = for future use.
"RTN","RAHLRPC",68,0)
 ; RAEID = IEN of regular Event driver
"RTN","RAHLRPC",69,0)
 ; RANOSEND Application name or IEN from 771 file..  don't send message to Subcr. with this application.
"RTN","RAHLRPC",70,0)
 ; RASSS Array of subcribers (IENs) associated with RANOSEND application
"RTN","RAHLRPC",71,0)
 ; 0 (zero) returned if No subscriber exist or all subscribers associated with RANOSEND application.
"RTN","RAHLRPC",72,0)
 S RAEID=$G(RAEID) Q:'RAEID!'$L($G(RANOSEND))!'$D(^ORD(101,+RAEID,0)) RAEID
"RTN","RAHLRPC",73,0)
 N RAXX,ERR,X1,Y1,YY,RAPL,RANEW,RAPIDS,RAIEDS
"RTN","RAHLRPC",74,0)
 S RAPL=$S(+RANOSEND:+RANOSEND,1:$O(^HL(771,"B",RANOSEND,0))) Q:'RAPL RAEID
"RTN","RAHLRPC",75,0)
 D GETS^DIQ(101,RAEID_",","**","I","RAXX","ERR")
"RTN","RAHLRPC",76,0)
 Q:$D(ERR) RAEID ; Was not able get Event driver info... so just pass event driver...
"RTN","RAHLRPC",77,0)
 Q:'$D(RAXX(101.0775)) 0  ;No subcribers exist for Event driver
"RTN","RAHLRPC",78,0)
 S X1="",RANEW=0,Y1=0 F  S X1=$O(RAXX(101.0775,X1)) Q:'$L(X1)  D
"RTN","RAHLRPC",79,0)
 .S YY=$G(RAXX(101.0775,X1,.01,"I"))
"RTN","RAHLRPC",80,0)
 .I $P($G(^ORD(101,+YY,770)),U,2)=RAPL D  Q
"RTN","RAHLRPC",81,0)
 ..;S Y1=Y1+1,RASSS("SUBSCRIBER",Y1)=YY_"^^^^^KILL^RAHLRPC"
"RTN","RAHLRPC",82,0)
 ..S Y1=Y1+1,RASSS("EXCLUDE SUBSCRIBER",Y1)=YY ;Y1= 1,2,3...
"RTN","RAHLRPC",83,0)
 .S RANEW=1
"RTN","RAHLRPC",84,0)
 Q:'RANEW 0  ;All subscribers are associated with application RANOSEND..  Don't send the message.
"RTN","RAHLRPC",85,0)
 Q RAEID
"RTN","RAHLRPC",86,0)
 ;
"RTN","RAHLRPC",87,0)
KILL ;RA*5*81 Remove entry from 773 and set entry from 772 for purge after calling GENERATE^HLMA = for future use.
"RTN","RAHLRPC",88,0)
 N DA,DIK,DIC,DIE,X,Y,DI,D0
"RTN","RAHLRPC",89,0)
 I $G(HLMSH773) S DA=HLMSH773,DIK="^HLMA(" D ^DIK S HLERROR="QUIT"
"RTN","RAHLRPC",90,0)
 S:$G(HLMSH772) ^TMP("RA-772-OUT",$J,HLMSH772)="" ;Set 772 IEN to ^TMP to be purged on the end.
"RTN","RAHLRPC",91,0)
 Q
"RTN","RAHLRS")
0^10^B11498651^B11033463
"RTN","RAHLRS",1,0)
RAHLRS ;HIRMFO/CRT/PDW - Resend HL7 messages for selected cases ;Mar 16, 1998
"RTN","RAHLRS",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**25,54,60,71,82**;Mar 16, 1998;Build 8
"RTN","RAHLRS",3,0)
 ;
"RTN","RAHLRS",4,0)
 ; Utility to RESEND HL7 messages
"RTN","RAHLRS",5,0)
 ;
"RTN","RAHLRS",6,0)
 ;;02/14/2006 BAY/KAM RA*5*71 Add ability to update exam data to V/R
"RTN","RAHLRS",7,0)
 N RACNI,RADFN,RADTI,RARPT,X
"RTN","RAHLRS",8,0)
 ;
"RTN","RAHLRS",9,0)
 D SETVARS Q:$G(RAIMGTY)=""
"RTN","RAHLRS",10,0)
 ;
"RTN","RAHLRS",11,0)
 F  S X=$$RACNLU(.RADFN,.RADTI,.RACNI) Q:+X'>0  D  Q:QUIT<0
"RTN","RAHLRS",12,0)
 .D RESEND(RADFN,RADTI,RACNI,.QUIT)
"RTN","RAHLRS",13,0)
 Q
"RTN","RAHLRS",14,0)
 ;
"RTN","RAHLRS",15,0)
RACNLU(RADFN,RADTI,RACNI) ; Select Case Number
"RTN","RAHLRS",16,0)
 ;
"RTN","RAHLRS",17,0)
 N RANOSCRN S RANOSCRN="" ; Don't limit cases to current Imaging Type
"RTN","RAHLRS",18,0)
 S (RADFN,RADTI,RADFN)=""
"RTN","RAHLRS",19,0)
 D ^RACNLU
"RTN","RAHLRS",20,0)
 Q X
"RTN","RAHLRS",21,0)
 ;
"RTN","RAHLRS",22,0)
RESEND(RADFN,RADTI,RACNI,QUIT) ; re-send exam message(s) to HL7 subscribers
"RTN","RAHLRS",23,0)
 ;
"RTN","RAHLRS",24,0)
 N RAED
"RTN","RAHLRS",25,0)
 ;
"RTN","RAHLRS",26,0)
 S QUIT=0
"RTN","RAHLRS",27,0)
 I '$D(DT) D ^%DT S DT=Y
"RTN","RAHLRS",28,0)
 ;
"RTN","RAHLRS",29,0)
 S RAED=$$RAED(RADFN,RADTI,RACNI)
"RTN","RAHLRS",30,0)
 S QUIT=$$OK(RADFN,RADTI,RACNI)
"RTN","RAHLRS",31,0)
 I QUIT>0 D
"RTN","RAHLRS",32,0)
 .I RAED[",REG," D
"RTN","RAHLRS",33,0)
 ..D EN^DDIOL("Re-sending 'EXAM REGISTERD' HL7 message...",,"!!,?6")
"RTN","RAHLRS",34,0)
 ..D REG^RAHLRPC
"RTN","RAHLRS",35,0)
 .I RAED[",CANCEL," D
"RTN","RAHLRS",36,0)
 ..D EN^DDIOL("Re-sending 'EXAM CANCELLED' HL7 message...",,"!,?6")
"RTN","RAHLRS",37,0)
 ..D CANCEL^RAHLRPC
"RTN","RAHLRS",38,0)
 .I RAED[",EXAM," D
"RTN","RAHLRS",39,0)
 ..S $P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),"^",30)="" ;Reset sent flag
"RTN","RAHLRS",40,0)
 ..D EN^DDIOL("Re-sending 'EXAMINED' HL7 message...",,"!,?6")
"RTN","RAHLRS",41,0)
 ..N RAEXMDUN D 1^RAHLRPC ;*60 Newed RAEXMDUN to prevent variable leak
"RTN","RAHLRS",42,0)
 .I RAED[",RPT," D
"RTN","RAHLRS",43,0)
 ..D EN^DDIOL("Re-sending 'REPORT VERIFIED' HL7 message...",,"!,?6")
"RTN","RAHLRS",44,0)
 ..D RPT^RAHLRPC
"RTN","RAHLRS",45,0)
 Q
"RTN","RAHLRS",46,0)
 ;
"RTN","RAHLRS",47,0)
RAED(RADFN,RADTI,RACNI) ; identify correct ^RAHLRPC entry point(s)
"RTN","RAHLRS",48,0)
 ;
"RTN","RAHLRS",49,0)
 N RASTAT,RAIMTYP,RAORD,RETURN,RARPST
"RTN","RAHLRS",50,0)
 S (RARPST,RASTAT)=""
"RTN","RAHLRS",51,0)
 ;
"RTN","RAHLRS",52,0)
 S RETURN=",REG,"
"RTN","RAHLRS",53,0)
 ;
"RTN","RAHLRS",54,0)
 S RASTAT=$$GET1^DIQ(70.03,RACNI_","_RADTI_","_RADFN,3,"I")
"RTN","RAHLRS",55,0)
 ;
"RTN","RAHLRS",56,0)
 S RAIMTYP=$$GET1^DIQ(72,+RASTAT,7)
"RTN","RAHLRS",57,0)
 S RAORD=$$GET1^DIQ(72,+RASTAT,3)
"RTN","RAHLRS",58,0)
 ;
"RTN","RAHLRS",59,0)
 S:RAORD=0 RETURN=RETURN_"CANCEL,"
"RTN","RAHLRS",60,0)
 ;
"RTN","RAHLRS",61,0)
 I $$GET1^DIQ(72,+RASTAT,8)="YES" D  ; Generate Examined HL7 Message
"RTN","RAHLRS",62,0)
 .S RETURN=RETURN_"EXAM,"
"RTN","RAHLRS",63,0)
 ;
"RTN","RAHLRS",64,0)
 I RETURN'[",EXAM," D
"RTN","RAHLRS",65,0)
 .; also check previous statuses for 'Generate Examined HL7 Message'
"RTN","RAHLRS",66,0)
 .F  S RAORD=$O(^RA(72,"AA",RAIMTYP,RAORD),-1) Q:+RAORD<1  D  Q:RETURN[",EXAM,"
"RTN","RAHLRS",67,0)
 ..S RASTAT=$O(^RA(72,"AA",RAIMTYP,RAORD,0))
"RTN","RAHLRS",68,0)
 ..I $$GET1^DIQ(72,+RASTAT,8)="YES" S RETURN=RETURN_"EXAM,"
"RTN","RAHLRS",69,0)
 ;
"RTN","RAHLRS",70,0)
 I RARPT]"" D  ; Check if Verified Report exists
"RTN","RAHLRS",71,0)
 .S RARPST=$$GET1^DIQ(74,RARPT,5,"I")
"RTN","RAHLRS",72,0)
 .I RARPST="V" S RETURN=RETURN_"RPT,"
"RTN","RAHLRS",73,0)
 ;
"RTN","RAHLRS",74,0)
 Q RETURN
"RTN","RAHLRS",75,0)
 ;
"RTN","RAHLRS",76,0)
OK(RADFN,RADTI,RACNI) ; Get User to confirm continue
"RTN","RAHLRS",77,0)
 ;
"RTN","RAHLRS",78,0)
 N X,RAEXST
"RTN","RAHLRS",79,0)
 ;
"RTN","RAHLRS",80,0)
 S RAEXST=$$GET1^DIQ(70.03,RACNI_","_RADTI_","_RADFN,3)
"RTN","RAHLRS",81,0)
 ;
"RTN","RAHLRS",82,0)
 S X="",$P(X,"=",70)=""
"RTN","RAHLRS",83,0)
 D EN^DDIOL(X,"","!?5")
"RTN","RAHLRS",84,0)
 S DIR("A")="Re-send all HL7 messages for this '"_RAEXST_"' case?"
"RTN","RAHLRS",85,0)
 S DIR(0)="Y",DIR("B")="YES" D ^DIR
"RTN","RAHLRS",86,0)
 I Y="^" Q -1
"RTN","RAHLRS",87,0)
 Q Y
"RTN","RAHLRS",88,0)
 ;
"RTN","RAHLRS",89,0)
SETVARS ; Setup key Rad/Nuc Med variables
"RTN","RAHLRS",90,0)
 ;
"RTN","RAHLRS",91,0)
 I $O(RACCESS(DUZ,""))="" D SETVARS^RAPSET1(0)
"RTN","RAHLRS",92,0)
 Q:'($D(RACCESS(DUZ))\10)  ; user does not have location access
"RTN","RAHLRS",93,0)
 I $G(RAIMGTY)="" D SETVARS^RAPSET1(1) K:$G(RAIMGTY)="" XQUIT
"RTN","RAHLRS",94,0)
 Q
"RTN","RAO7UTL")
0^12^B35860324^B26579249
"RTN","RAO7UTL",1,0)
RAO7UTL ;HISC/GJC,SS-Utilities for HL7 messages. ;9/5/97  08:55
"RTN","RAO7UTL",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**18,45,57,82**;Mar 16, 1998;Build 8
"RTN","RAO7UTL",3,0)
 ;modified by SS JUN 19,2000 for P18
"RTN","RAO7UTL",4,0)
EN1 ; Entry point to define some basic HL7 variables
"RTN","RAO7UTL",5,0)
 N I S RAHLFS="|",RAECH="^~\&"
"RTN","RAO7UTL",6,0)
 S $P(RAHLFS(0),RAHLFS,51)=""
"RTN","RAO7UTL",7,0)
 F I=1:1:$L(RAECH) S RAECH(I)=$E(RAECH,I)
"RTN","RAO7UTL",8,0)
 Q
"RTN","RAO7UTL",9,0)
 ;
"RTN","RAO7UTL",10,0)
CMEDIA(IEN,RAPTYPE) ;Called from RAO7MFN when a procedure is updated
"RTN","RAO7UTL",11,0)
 ;Input: IEN=ien of proc. in file 71
"RTN","RAO7UTL",12,0)
 ;   RAPTYPE=procedure type; broad, parent, series, or detailed.
"RTN","RAO7UTL",13,0)
 ;Return: J=a string with some combination of the following indicators:
"RTN","RAO7UTL",14,0)
 ;I for Iodinated ionic, N for Iodinated non-ionic, L for Gadolinium
"RTN","RAO7UTL",15,0)
 ;C for Oral Cholecystographic, G for Gastrografin, B for Barium or
"RTN","RAO7UTL",16,0)
 ;NULL if none of the indicators apply to this procedure.
"RTN","RAO7UTL",17,0)
 ;
"RTN","RAO7UTL",18,0)
 ;'Broad' procedures have no contrast media definition, return null
"RTN","RAO7UTL",19,0)
 Q:RAPTYPE="B" ""
"RTN","RAO7UTL",20,0)
 ;if 'detailed' or 'series' & no contrast media data return null
"RTN","RAO7UTL",21,0)
 I RAPTYPE'="P",'($O(^RAMIS(71,IEN,"CM",0))) Q ""
"RTN","RAO7UTL",22,0)
 NEW I,INA,J S J=""
"RTN","RAO7UTL",23,0)
 I RAPTYPE="P" D
"RTN","RAO7UTL",24,0)
 .S I=0 F  S I=$O(^RAMIS(71,IEN,4,I)) Q:'I  D
"RTN","RAO7UTL",25,0)
 ..S I(0)=+$G(^RAMIS(71,IEN,4,I,0)) Q:'I(0)
"RTN","RAO7UTL",26,0)
 ..S INA=$P($G(^RAMIS(71,I(0),"I")),"^")
"RTN","RAO7UTL",27,0)
 ..S INA=$S(INA="":1,INA>DT:1,1:0)
"RTN","RAO7UTL",28,0)
 ..D:INA NONPAR(I(0))
"RTN","RAO7UTL",29,0)
 ..Q
"RTN","RAO7UTL",30,0)
 .Q
"RTN","RAO7UTL",31,0)
 E  D NONPAR(IEN)
"RTN","RAO7UTL",32,0)
 Q J
"RTN","RAO7UTL",33,0)
 ;
"RTN","RAO7UTL",34,0)
NONPAR(IEN) ;obtain contrast media data for a 'detailed' or 'series' proc
"RTN","RAO7UTL",35,0)
 ; Input: IEN=ien of the non-parent, non-broad procedure
"RTN","RAO7UTL",36,0)
 ;Return: J=data string (return)
"RTN","RAO7UTL",37,0)
 ;variable definition: I=ien of sub-file rec
"RTN","RAO7UTL",38,0)
 NEW H,I S I=0
"RTN","RAO7UTL",39,0)
 F  S I=$O(^RAMIS(71,IEN,"CM",I)) Q:I'>0  D
"RTN","RAO7UTL",40,0)
 .S H=$P($G(^RAMIS(71,IEN,"CM",I,0)),U) Q:H=""
"RTN","RAO7UTL",41,0)
 .S:J'[H J=J_H
"RTN","RAO7UTL",42,0)
 .Q
"RTN","RAO7UTL",43,0)
 Q
"RTN","RAO7UTL",44,0)
 ;
"RTN","RAO7UTL",45,0)
MSH(X) ; Set up the 'MSH' segment.
"RTN","RAO7UTL",46,0)
 ; 'X' is passed in and identifies the message type.
"RTN","RAO7UTL",47,0)
 S:X']"" X="Message Type Error"
"RTN","RAO7UTL",48,0)
 Q "MSH"_RAHLFS_RAECH_RAHLFS_"RADIOLOGY"_RAHLFS_$P($G(^DIC(4,+$G(DUZ(2)),99)),"^")_$$STR(3)_$$HLDATE^HLFNC($$NOW^XLFDT(),"TS")_$$STR(2)_X
"RTN","RAO7UTL",49,0)
 ;
"RTN","RAO7UTL",50,0)
MSA(X,Y) ; Set up the 'MSA' segment. P18 
"RTN","RAO7UTL",51,0)
 ; 'X' is passed in and identifies the message ID.
"RTN","RAO7UTL",52,0)
 ; 'Y' is acknowledgement code
"RTN","RAO7UTL",53,0)
 S:X']"" X="Message ID Error"
"RTN","RAO7UTL",54,0)
 Q "MSA"_RAHLFS_Y_RAHLFS_$E(X,1,20)_$$STR(4)
"RTN","RAO7UTL",55,0)
MFI(X) ; Set up the 'MFI' segment
"RTN","RAO7UTL",56,0)
 S @(RAVAR_RACNT_")")="MFI"_RAHLFS_RAFNUM
"RTN","RAO7UTL",57,0)
 S @(RAVAR_RACNT_")")=@(RAVAR_RACNT_")")_RAECH(1)_RAFNAME_RAECH(1)
"RTN","RAO7UTL",58,0)
 S @(RAVAR_RACNT_")")=@(RAVAR_RACNT_")")_"99DD"_RAHLFS_RAHLFS_X ;P18
"RTN","RAO7UTL",59,0)
 S @(RAVAR_RACNT_")")=@(RAVAR_RACNT_")")_RAHLFS_RAHLFS_RAHLFS_"ER"
"RTN","RAO7UTL",60,0)
 X RAINCR ; increment counter
"RTN","RAO7UTL",61,0)
 Q
"RTN","RAO7UTL",62,0)
PID(Y) ; Create 'pid' segment
"RTN","RAO7UTL",63,0)
 Q "PID"_$$STR(3)_+$P(Y,"^")_$$STR(2)_$P($G(^DPT(+$P(Y,"^"),0)),"^")
"RTN","RAO7UTL",64,0)
 ;
"RTN","RAO7UTL",65,0)
PV1(Y) ; Create 'pv1' segment
"RTN","RAO7UTL",66,0)
 ;Input: Y=zero node of the RAD/NUC MED ORDERS (#75.1) file
"RTN","RAO7UTL",67,0)
 N DFN,RA,RARMBED,RAWARD,VAIP,RAPF
"RTN","RAO7UTL",68,0)
 S DFN=+$P(Y,"^"),VAIP("D")=$P(Y,"^",21)
"RTN","RAO7UTL",69,0)
 S RA("PV1",2)="O",RA("PV1",3)=+$P(Y,"^",22)
"RTN","RAO7UTL",70,0)
 D IN5^VADPT S RAWARD=$G(VAIP(5)),RARMBED=$G(VAIP(6))
"RTN","RAO7UTL",71,0)
 I RAWARD]"" D
"RTN","RAO7UTL",72,0)
 . S RA("PV1",2)="I",RAWARD(44)=$P($G(^DIC(42,+RAWARD,44)),"^")
"RTN","RAO7UTL",73,0)
 . S RA("PV1",3)=+RAWARD(44)_U_$P(RARMBED,"^",2)
"RTN","RAO7UTL",74,0)
 . Q
"RTN","RAO7UTL",75,0)
 S RAPF="PV1"_$$STR(2)_RA("PV1",2)_RAHLFS_RA("PV1",3)_$$STR(16) ;_"Visit #" was truncated for P18   ? Req 4
"RTN","RAO7UTL",76,0)
 D PV1^RABWIBB
"RTN","RAO7UTL",77,0)
 ; pv1^RABWIBB will redefine RAPF if the PFSS switch is on and there's a valid PFSS Account Reference
"RTN","RAO7UTL",78,0)
 ; Otherwise, RAPF won't be changed
"RTN","RAO7UTL",79,0)
 K RACCOUNT ; this variable was set earlier in FB^RABWIBB
"RTN","RAO7UTL",80,0)
 Q RAPF
"RTN","RAO7UTL",81,0)
 ;
"RTN","RAO7UTL",82,0)
PURGE K RAHLFS,RACNT,RAECH,RAFNAME,RAFNUM,RAINCR,RASUB,RATSTMP,RAVAR,RAXIT
"RTN","RAO7UTL",83,0)
PURGE1 ; kill only whole file update variables
"RTN","RAO7UTL",84,0)
 K RA71,RA713,RACMCODE,RACMNOR,RACOST,RACPT,RAIEN71,RAIMGAB,RAMFE,RAMULT
"RTN","RAO7UTL",85,0)
 K RAPHYAP,RAPRCTY,RAXT71
"RTN","RAO7UTL",86,0)
 Q
"RTN","RAO7UTL",87,0)
DIAG(X,Y,Z) ; Pass back an "A" if any Dx code has 'Yes' in the 'Generate
"RTN","RAO7UTL",88,0)
 ;         Abnormal Alert' field.
"RTN","RAO7UTL",89,0)
 N A,AAH,RA7003,RA783 S AAH=""
"RTN","RAO7UTL",90,0)
 S RA7003=$G(^RADPT(X,"DT",Y,"P",Z,0)),RA7003(13)=+$P(RA7003,"^",13)
"RTN","RAO7UTL",91,0)
 S RA783(0)=$G(^RA(78.3,RA7003(13),0))
"RTN","RAO7UTL",92,0)
 S RA783(4)=$$UP^XLFSTR($P(RA783(0),"^",4))
"RTN","RAO7UTL",93,0)
 S:RA783(4)="Y" AAH="A"
"RTN","RAO7UTL",94,0)
 Q:AAH]"" AAH
"RTN","RAO7UTL",95,0)
 S A=0 F  S A=$O(^RADPT(X,"DT",Y,"P",Z,"DX",A)) Q:A'>0  D  Q:AAH]""
"RTN","RAO7UTL",96,0)
 . S RA783=+$G(^RADPT(X,"DT",Y,"P",Z,"DX",A,0))
"RTN","RAO7UTL",97,0)
 . S RA783(0)=$G(^RA(78.3,RA783,0))
"RTN","RAO7UTL",98,0)
 . S RA783(4)=$$UP^XLFSTR($P(RA783(0),"^",4))
"RTN","RAO7UTL",99,0)
 . I RA783(4)="Y" S AAH="A"
"RTN","RAO7UTL",100,0)
 . Q
"RTN","RAO7UTL",101,0)
 Q AAH
"RTN","RAO7UTL",102,0)
PROCNDE(X) ; Check if the procedure has both an I-Type & Proc. Type
"RTN","RAO7UTL",103,0)
 ;         assigned. Pass back '1' if either the I-Type -or- Proc. Type
"RTN","RAO7UTL",104,0)
 ;         data is missing.  '0' if everything is ok.
"RTN","RAO7UTL",105,0)
 I $P(X(0),U,6)]"",($P(X(0),U,12)]"") Q 0
"RTN","RAO7UTL",106,0)
 Q 1
"RTN","RAO7UTL",107,0)
STR(X) ; Pass back a predetermined # of '|' or other field separator
"RTN","RAO7UTL",108,0)
 Q:$G(RAHLFS(0))']""!(+X=0) "" ; Quit if parent string i.e, 'RAHLFS(0)'
"RTN","RAO7UTL",109,0)
 ;                               does not exist or +X evaluates to null.
"RTN","RAO7UTL",110,0)
 ;
"RTN","RAO7UTL",111,0)
 S:X<0 X=$$ABS^XLFMTH(X) ;       If passed in negative, take absolute
"RTN","RAO7UTL",112,0)
 ;                               value.  Quit if 'X' is greater than the
"RTN","RAO7UTL",113,0)
 ;                               length of our parent string.
"RTN","RAO7UTL",114,0)
 ;
"RTN","RAO7UTL",115,0)
 S:X["." X=X\1 ;                 If a non-integer, remove mantissa.
"RTN","RAO7UTL",116,0)
 ;
"RTN","RAO7UTL",117,0)
 Q:X>($L(RAHLFS(0))) "" ;        If parameter greater than length of
"RTN","RAO7UTL",118,0)
 ;                               string, pass back null.
"RTN","RAO7UTL",119,0)
 Q $E(RAHLFS(0),1,X)
"RTN","RAO7UTL",120,0)
 ;
"RTN","RAO7UTL",121,0)
CHKUSR(RADUZ) ; Check user status to 'DC' an order.
"RTN","RAO7UTL",122,0)
 ; pass back '0' if non-active Rad/Nuc Med user
"RTN","RAO7UTL",123,0)
 ; pass back '1' if active Rad/Nuc Med user
"RTN","RAO7UTL",124,0)
 N RAINADT S RAINADT=+$P($G(^VA(200,RADUZ,"PS")),"^",4) ;inactivation DT
"RTN","RAO7UTL",125,0)
 Q $S('($D(RADUZ)#2):0,'$D(^VA(200,RADUZ,0)):0,'$D(^("RAC")):0,'RAINADT:1,'$D(DT):0,DT'>RAINADT:1,1:0)
"RTN","RAO7UTL",126,0)
 ;
"RTN","RAO7UTL",127,0)
ERR(RATXT,RAMSG,RAVAR) ; Call CPRS utility to log 'soft' errors.
"RTN","RAO7UTL",128,0)
 ; Input: RATXT-text description of the error
"RTN","RAO7UTL",129,0)
 ;        RAMSG-HL7 message array
"RTN","RAO7UTL",130,0)
 ;        RAVAR-variables to be saved off
"RTN","RAO7UTL",131,0)
 D EN^ORERR(RATXT,.RAMSG,.RAVAR)
"RTN","RAO7UTL",132,0)
 Q
"RTN","RAO7UTL",133,0)
 ;
"RTN","RAO7UTL",134,0)
MSG(RAPROTO,RAMSG) ; ship HL7 messages to CPRS from this entry point
"RTN","RAO7UTL",135,0)
 ; input: RAPROTO - protocol to execute
"RTN","RAO7UTL",136,0)
 ;          RAMSG - message (in HL7 format)
"RTN","RAO7UTL",137,0)
 D MSG^XQOR(RAPROTO,.RAMSG)
"RTN","RAO7UTL",138,0)
 Q
"RTN","RAO7UTL",139,0)
 ;
"RTN","RAO7UTL",140,0)
UPDATP(RAY) ;update the parent procedure when a descendent is
"RTN","RAO7UTL",141,0)
 ;updated. Called from RAMAIN2 (procedure entry/edit)
"RTN","RAO7UTL",142,0)
 ;input: RAY=ien of desc.^name of desc. (if existing record)
"RTN","RAO7UTL",143,0)
 ;       RAY=ien of desc.^name of desc.^1 (if new record)
"RTN","RAO7UTL",144,0)
 W !!,$P(RAY,U,2)_" is a descendent procedure, updating parent(s)..."
"RTN","RAO7UTL",145,0)
 N RAPIEN,RAQUIT S (RAPIEN,RAQUIT)=0
"RTN","RAO7UTL",146,0)
 F  S RAPIEN=$O(^RAMIS(71,"ADESC",+RAY,RAPIEN)) Q:'RAPIEN  D  Q:RAQUIT
"RTN","RAO7UTL",147,0)
 .S RAPIEN(0)=$G(^RAMIS(71,RAPIEN,0))
"RTN","RAO7UTL",148,0)
 .W !?2,"Updating parent: "_$E($P(RAPIEN(0),U),1,50)
"RTN","RAO7UTL",149,0)
 .S RAPIEN("I")=$P($G(^RAMIS(71,RAPIEN,"I")),"^")
"RTN","RAO7UTL",150,0)
 .S RAPIEN("S")=$S(RAPIEN("I")="":1,RAPIEN("I")>DT:1,1:0)
"RTN","RAO7UTL",151,0)
 .L +^RAMIS(71,RAPIEN):300
"RTN","RAO7UTL",152,0)
 .I '$T S RAQUIT=1 D  Q
"RTN","RAO7UTL",153,0)
 ..W !?2,"Parent Procedure: "_$E($P(RAPIEN(0),U),1,50)
"RTN","RAO7UTL",154,0)
 ..W !?2,"being edited by another user, try again later!",$C(7)
"RTN","RAO7UTL",155,0)
 ..Q
"RTN","RAO7UTL",156,0)
 .D PROC^RAO7MFN(0,71,RAPIEN("S")_"^"_RAPIEN("S"),RAPIEN)
"RTN","RAO7UTL",157,0)
 .L -^RAMIS(71,RAPIEN)
"RTN","RAO7UTL",158,0)
 .Q
"RTN","RAO7UTL",159,0)
 Q
"RTN","RAO7UTL",160,0)
 ;----------------------------
"RTN","RAO7UTL",161,0)
 ;called from 
"RTN","RAO7UTL",162,0)
 ;-Case # edit  START1+16^RAEDCN
"RTN","RAO7UTL",163,0)
 ;-Edit by patient
"RTN","RAO7UTL",164,0)
 ;-Tracking
"RTN","RAO7UTL",165,0)
 ;Saves proc ien before editing, locate the exam by patient, datetime and caseN 
"RTN","RAO7UTL",166,0)
SVBEFOR(RAPATN,RAINVDT,RACIEN) ;P18;send radfn,radti,racni (instead of racn and new sequencing of params
"RTN","RAO7UTL",167,0)
 ; RAPRIEN() holds "before" values
"RTN","RAO7UTL",168,0)
 N RADATA,RAX,RA0,RA1,RA2,RA3
"RTN","RAO7UTL",169,0)
 S RADATA=$G(^RADPT(RAPATN,"DT",RAINVDT,"P",RACIEN,0))
"RTN","RAO7UTL",170,0)
 Q:RADATA=""  ;failure
"RTN","RAO7UTL",171,0)
 ; don't check parent here, since still need compare Req Phys & Proc Mods
"RTN","RAO7UTL",172,0)
 S RAPRIEN=$P(RADATA,"^",2) ; procedure ien
"RTN","RAO7UTL",173,0)
 S RAPRIEN(1)=RAPATN ; dfn
"RTN","RAO7UTL",174,0)
 S RAPRIEN(2)=RAINVDT ; inverse date exm
"RTN","RAO7UTL",175,0)
 S RAPRIEN(3)=RACIEN ; case ien
"RTN","RAO7UTL",176,0)
 S RAPRIEN(4)=$P(RADATA,"^",14) ; req phy
"RTN","RAO7UTL",177,0)
 D STR70^RAUTL10(.RAX,RAPATN,RAINVDT,RACIEN)
"RTN","RAO7UTL",178,0)
 S RAPRIEN(5)=RAX ; string of proc mods
"RTN","RAO7UTL",179,0)
 ; send "XX" if diffcs in Req.Phy &/or Proc Mods
"RTN","RAO7UTL",180,0)
 ; Next lines are for RA*5*82
"RTN","RAO7UTL",181,0)
 ; Save CPT modifiers before editing
"RTN","RAO7UTL",182,0)
 S RAX=0 K RAPRIEN("CMOD")
"RTN","RAO7UTL",183,0)
 F  S RAX=$O(^RADPT(RAPATN,"DT",RAINVDT,"P",RACIEN,"CMOD",RAX)) Q:'RAX  S RAPRIEN("CMOD",RAX)=+$G(^(RAX,0))
"RTN","RAO7UTL",184,0)
 ; Save Tech comments before editing
"RTN","RAO7UTL",185,0)
 S RAX=0 K RAPRIEN("TCOM")
"RTN","RAO7UTL",186,0)
 F  S RAX=$O(^RADPT(RAPATN,"DT",RAINVDT,"P",RACIEN,"L",RAX)) Q:'RAX  S RAPRIEN("TCOM",RAX)=$G(^(RAX,"TCOM"))
"RTN","RAO7UTL",187,0)
 Q  ;OK
"RTN","RAO7XX")
0^7^B61483197^B61404589
"RTN","RAO7XX",1,0)
RAO7XX ;HISC/SS-Sending XX HL7 message to CPRS ;11/19/01  09:07
"RTN","RAO7XX",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**18,26,28,32,82**;Mar 16, 1998;Build 8
"RTN","RAO7XX",3,0)
 ;Check if requested and registered procedures differ in:
"RTN","RAO7XX",4,0)
 ;  proc, requesting physician, proc mod(s)
"RTN","RAO7XX",5,0)
 ;if there are changes - send XX message and return 1, otherwise 0
"RTN","RAO7XX",6,0)
 ; called from RAREG2 
"RTN","RAO7XX",7,0)
EN1(RAOIFN1) ;P18  entry point for "Register exams" and "Add to last visit" options
"RTN","RAO7XX",8,0)
 K RAREGMOD
"RTN","RAO7XX",9,0)
 Q:'$D(^RAO(75.1,RAOIFN1,0)) 0
"RTN","RAO7XX",10,0)
 Q:'$D(^RAMIS(71,$P(^RAO(75.1,RAOIFN1,0),"^",2),0)) 0
"RTN","RAO7XX",11,0)
 N RAPRTYPE S RAPRTYPE=$P(^RAMIS(71,$P(^RAO(75.1,RAOIFN1,0),"^",2),0),"^",6)
"RTN","RAO7XX",12,0)
 Q:RAPRTYPE="P" 0 ;quit processing if parent proc, since RAREG2 treats an order, not each descendent of an order, thus no "XX" and no Alert
"RTN","RAO7XX",13,0)
 I $$ISCHNGD(RAOIFN1,1)=0 Q 0  ;no changes or no OR*3*92
"RTN","RAO7XX",14,0)
CHCK N RAREGMOD S RAREGMOD="R" ;as a flag for registering mode
"RTN","RAO7XX",15,0)
 I $$ORVR^RAORDU()'<3 D EN1^RAO7NEW(RAOIFN1) ;sends HL7 message
"RTN","RAO7XX",16,0)
 Q 1  ;proc/reqphys/pmod was changed
"RTN","RAO7XX",17,0)
 ;
"RTN","RAO7XX",18,0)
 ;Can be used only for EXAMS that DO NOT contain Parent procedures
"RTN","RAO7XX",19,0)
 ;ISSCHNGD Checks: Was original procedure changed? 
"RTN","RAO7XX",20,0)
 ;if proc/prc mod/rqstr changed, return 1 to syncrhonize with CPRS
"RTN","RAO7XX",21,0)
 ;Usage:  RAIEN751 recNo in 75.1 (like RAOIFN)
"RTN","RAO7XX",22,0)
 ;if SNDALERT=1 sends alert to provider requested the order 
"RTN","RAO7XX",23,0)
 ;----------------
"RTN","RAO7XX",24,0)
ISCHNGD(RAIEN751,SNDALERT) ;P18
"RTN","RAO7XX",25,0)
 N RACHANGE,RAX751,RAX70,RASTRING
"RTN","RAO7XX",26,0)
 N RAD751 S RAD751=$G(^RAO(75.1,RAIEN751,0),-1),RASTRING=""
"RTN","RAO7XX",27,0)
 Q:RAD751=-1 0
"RTN","RAO7XX",28,0)
 N RAPAT S RAPAT=$P(RAD751,"^",1)
"RTN","RAO7XX",29,0)
 N RAD70 S RAD70=$$FNDIN70(RAPAT,RAIEN751,"V")
"RTN","RAO7XX",30,0)
 N RAD70SB S RAD70SB=$$FNDIN70(RAPAT,RAIEN751,"T")
"RTN","RAO7XX",31,0)
 Q:RAD70=0 0
"RTN","RAO7XX",32,0)
 N RAPR751 S RAPR751=$P(RAD751,"^",2) ;ien proc from order
"RTN","RAO7XX",33,0)
 N RAPHYSID S RAPHYSID=$P(RAD751,"^",14) ;ien req phys
"RTN","RAO7XX",34,0)
 S RAPR70=$P(RAD70,"^",2) ;ien proc from exam
"RTN","RAO7XX",35,0)
 S RACHANGE=0
"RTN","RAO7XX",36,0)
 I RAPR751'=RAPR70,(RAPRTYPE'="P") S RACHANGE=1,$P(RASTRING,"/",4,5)=RAPR751_"/"_RAPR70 ; nonparent,proc changed
"RTN","RAO7XX",37,0)
 I RAPR751=RAPR70,(RAPRTYPE'="P") S $P(RASTRING,"/",4)=RAPR751 ;save unchanged proc name
"RTN","RAO7XX",38,0)
 I RAPHYSID'=$P(RAD70,"^",14) S RACHANGE=1,$P(RASTRING,"/",6,7)=RAPHYSID_"/"_$P(RAD70,"^",14) ;req phy changed
"RTN","RAO7XX",39,0)
 D STR751^RAUTL10(.RAX751,RAIEN751)
"RTN","RAO7XX",40,0)
 D STR70^RAUTL10(.RAX70,RAPAT,$P(RAD70SB,"^"),$P(RAD70SB,"^",2))
"RTN","RAO7XX",41,0)
 I RAX751'=RAX70 S RACHANGE=1,$P(RASTRING,"/",8,9)=RAX751_"/"_RAX70 ;proc mods changed
"RTN","RAO7XX",42,0)
 Q:'RACHANGE 0
"RTN","RAO7XX",43,0)
 S $P(RASTRING,"/",1,3)=RAPAT_"/"_$P(RAD70SB,"^")_"/"_$P(RAD70SB,"^",2) ;dfn,invdt,case ien
"RTN","RAO7XX",44,0)
 S:$P(RASTRING,"/",6)="" $P(RASTRING,"/",6)=RAPHYSID ;recipient of msg
"RTN","RAO7XX",45,0)
 I $G(SNDALERT,0)=1 D
"RTN","RAO7XX",46,0)
 . I $$PATCH^XPDUTL("OR*3.0*112") D SETNOTIF^RAO7PC4(RAIEN751) Q
"RTN","RAO7XX",47,0)
 . D SETALERT^RAO7PC4
"RTN","RAO7XX",48,0)
B1P18 Q:'$$PATCH^XPDUTL("OR*3.0*92") 0  ;CPRS patch not installed yet-return zero (do not send XX message).Alert has been sent above,because it should be sent anyway
"RTN","RAO7XX",49,0)
 Q 1  ;one or more changes from orig order AND OR*3*92
"RTN","RAO7XX",50,0)
 ;
"RTN","RAO7XX",51,0)
 ;RAPT like RADFN
"RTN","RAO7XX",52,0)
 ;RADT like RADTI
"RTN","RAO7XX",53,0)
 ;RACSN like RACN
"RTN","RAO7XX",54,0)
 ;If RARET="V" returns string value, otherwise - $Q of the node 
"RTN","RAO7XX",55,0)
 ;if failure returns "0"
"RTN","RAO7XX",56,0)
FNDIN70M(RAPT,RADT,RACSN,RARET)      ;P18
"RTN","RAO7XX",57,0)
 N RALV,RALFL
"RTN","RAO7XX",58,0)
 S (RALV,RALFL)=0
"RTN","RAO7XX",59,0)
 N RALVAR2,RAVAL2
"RTN","RAO7XX",60,0)
 S RALV=$O(^RADPT(RAPT,"DT",RADT,"P","B",RACSN,0))
"RTN","RAO7XX",61,0)
 Q:+RALV=0 0
"RTN","RAO7XX",62,0)
 Q:RARET="V" $G(^RADPT(RAPT,"DT",RADT,"P",RALV,0),0)
"RTN","RAO7XX",63,0)
 Q:RARET="T" RADT_"^"_RALV
"RTN","RAO7XX",64,0)
 Q $Q(^RADPT(RAPT,"DT",RADT,"P",RALV))
"RTN","RAO7XX",65,0)
 ;
"RTN","RAO7XX",66,0)
 ;search for #70 entry using PATIEN and Order No from 75.1
"RTN","RAO7XX",67,0)
 ;works correctly ONLY FOR ORDERS that do NOT contain PARENT PROCEDURE
"RTN","RAO7XX",68,0)
 ;RETRN="V" returns value
"RTN","RAO7XX",69,0)
 ;RETRN="T" returns D1^D2 of #70
"RTN","RAO7XX",70,0)
 ;otherwise - $Q
"RTN","RAO7XX",71,0)
FNDIN70(RAPATN,RAORDN,RETRN) ;
"RTN","RAO7XX",72,0)
 N RA18A,RA18B
"RTN","RAO7XX",73,0)
 S RA18A=$O(^RADPT("AO",RAORDN,RAPATN,0))
"RTN","RAO7XX",74,0)
 Q:RA18A="" 0
"RTN","RAO7XX",75,0)
 S RA18B=$O(^RADPT("AO",RAORDN,RAPATN,RA18A,0))
"RTN","RAO7XX",76,0)
 Q:RA18B="" 0
"RTN","RAO7XX",77,0)
 Q:RETRN="V" $G(^RADPT(RAPATN,"DT",RA18A,"P",RA18B,0),0)
"RTN","RAO7XX",78,0)
 Q:RETRN="T" RA18A_"^"_RA18B
"RTN","RAO7XX",79,0)
 Q $Q(^RADPT(RAPATN,"DT",RA18A,"P",RA18B))
"RTN","RAO7XX",80,0)
 Q
"RTN","RAO7XX",81,0)
 ;
"RTN","RAO7XX",82,0)
 ;
"RTN","RAO7XX",83,0)
UPDTRA0 ;P18 updates var RAO with data from file #70 and sets RAD70SB variable (D2^D3 of #70), called from RAO7NEW
"RTN","RAO7XX",84,0)
 N RAD70
"RTN","RAO7XX",85,0)
 S RAD70=0
"RTN","RAO7XX",86,0)
 ;if registering mode (should not be parent procedure, so we can locate the exam in #70 by OrderN) - data and D2^D3 in #70 for the Order No 
"RTN","RAO7XX",87,0)
 S:RAREGMOD="R" RAD70=$$FNDIN70(+RA0,RAOIFN,"V"),RAD70SB=$$FNDIN70(+RA0,RAOIFN,"T")
"RTN","RAO7XX",88,0)
 ;editing exam had called SVBEFOR, and thus RAPRIEN()s are defined
"RTN","RAO7XX",89,0)
 S:RAREGMOD="E" RAD70=$G(^RADPT(RAPRIEN(1),"DT",RAPRIEN(2),"P",RAPRIEN(3),0)),RAD70SB=RAPRIEN(2)_"^"_RAPRIEN(3) S:+RAD70SB=0 RAD70SB=0 S:+RAD70=0 RAD70=0 ;041801 convert null to 0
"RTN","RAO7XX",90,0)
 ; updating info
"RTN","RAO7XX",91,0)
 I RAD70=0 S $P(RA0,"^",26)="" G ORCSET ; nature of new order activity
"RTN","RAO7XX",92,0)
 S:$P(^RAMIS(71,+$P(RA0,"^",2),0),"^",6)'="P" $P(RA0,"^",2)=$P(RAD70,"^",2) ;OBR(4) reset prc only if not parent typ
"RTN","RAO7XX",93,0)
 S $P(RA0,"^",9)=$P(RAD70,"^",9) ;Contract/Sharing Source
"RTN","RAO7XX",94,0)
 S $P(RA0,"^",14)=$P(RAD70,"^",14) ; req phys ORC(12)
"RTN","RAO7XX",95,0)
ORCSET S $P(RA0,"^",15)=DUZ ;ORC(10)
"RTN","RAO7XX",96,0)
 Q
"RTN","RAO7XX",97,0)
 ;
"RTN","RAO7XX",98,0)
MODIF70(RA18D1,RA18D2) ;P18 uses data of Modifiers from #70 for OBR(18)
"RTN","RAO7XX",99,0)
 I $O(^RADPT(+RA0,"DT",RA18D1,"P",RA18D2,"M",0)) D
"RTN","RAO7XX",100,0)
 . S (A,RAXIT)=0
"RTN","RAO7XX",101,0)
 . F  S A=$O(^RADPT(+RA0,"DT",RA18D1,"P",RA18D2,"M",A)) Q:A'>0  D  Q:RAXIT
"RTN","RAO7XX",102,0)
 .. S B(0)=$G(^RADPT(+RA0,"DT",RA18D1,"P",RA18D2,"M",A,0))
"RTN","RAO7XX",103,0)
 .. S B(1)=$P($G(^RAMIS(71.2,+B(0),0)),U)
"RTN","RAO7XX",104,0)
 .. I $L(RA("OBR",18))+$L(B(1))>60 S RAXIT=1 Q
"RTN","RAO7XX",105,0)
 .. S RA("OBR",18)=$G(RA("OBR",18))_B(1)_RAECH(2)
"RTN","RAO7XX",106,0)
 .. Q
"RTN","RAO7XX",107,0)
 . S RA("OBR",18)=$P(RA("OBR",18),RAECH(2),1,$L(RA("OBR",18),RAECH(2))-1)
"RTN","RAO7XX",108,0)
 . Q
"RTN","RAO7XX",109,0)
 Q
"RTN","RAO7XX",110,0)
SVBEFOR(RAPATN,RAINVDT,RACIEN) ;P18;send radfn,radti,racni (instead of racn and new sequencing of params
"RTN","RAO7XX",111,0)
 D SVBEFOR^RAO7UTL(RAPATN,RAINVDT,RACIEN) Q
"RTN","RAO7XX",112,0)
 ;Compare proc ien after editing
"RTN","RAO7XX",113,0)
CMPAFTR(SNDALERT) ;P18
"RTN","RAO7XX",114,0)
 K RAREGMOD
"RTN","RAO7XX",115,0)
 I $D(I) N I
"RTN","RAO7XX",116,0)
 I $D(J) N J
"RTN","RAO7XX",117,0)
 I $D(Y) N Y
"RTN","RAO7XX",118,0)
 Q:'$D(RAPRIEN) 0 ;RAPRIEN must be defined by calling SVBEFOR
"RTN","RAO7XX",119,0)
 N RADATA,RACHANGE,RAX,RA0,RA1,RA2,RA3,RASTRING,RAPRTYPE
"RTN","RAO7XX",120,0)
 S RASTRING=""
"RTN","RAO7XX",121,0)
 S RACHANGE=0 ;=1 if changed any of : proc, proc mod, req phys
"RTN","RAO7XX",122,0)
 S RADATA=$G(^RADPT(RAPRIEN(1),"DT",RAPRIEN(2),"P",RAPRIEN(3),0))
"RTN","RAO7XX",123,0)
 I RADATA="" G CMPEXIT
"RTN","RAO7XX",124,0)
 I $P(RADATA,"^",11)="" G CMPEXIT ;can't process unknown proc type
"RTN","RAO7XX",125,0)
 S RAPRTYPE=$P($G(^RAMIS(71,+$P($G(^RAO(75.1,+$P(RADATA,"^",11),0)),"^",2),0)),"^",6)
"RTN","RAO7XX",126,0)
 I RAPRTYPE="P" G CMPEXIT ; if parent-type, skip both "XX" and Alert
"RTN","RAO7XX",127,0)
 ; compare procedure if it's nonparent
"RTN","RAO7XX",128,0)
 I $P(RADATA,"^",11),RAPRTYPE'="P",$P(RADATA,"^",2)'=RAPRIEN S RACHANGE=1,$P(RASTRING,"/",4,5)=RAPRIEN_"/"_$P(RADATA,"^",2) ;nonparent proc--changed
"RTN","RAO7XX",129,0)
 I $P(RADATA,"^",11),RAPRTYPE'="P",$P(RADATA,"^",2)=RAPRIEN S $P(RASTRING,"/",4)=RAPRIEN ;save unchanged proc name
"RTN","RAO7XX",130,0)
 ; compare req phys
"RTN","RAO7XX",131,0)
 I $P(RADATA,"^",14)'=RAPRIEN(4) S RACHANGE=1,$P(RASTRING,"/",6,7)=RAPRIEN(4)_"/"_$P(RADATA,"^",14) ;req phy--changed
"RTN","RAO7XX",132,0)
 ; compare proc mods
"RTN","RAO7XX",133,0)
 D STR70^RAUTL10(.RAX,RAPRIEN(1),RAPRIEN(2),RAPRIEN(3))
"RTN","RAO7XX",134,0)
 I RAPRIEN(5)'=RAX S RACHANGE=1,$P(RASTRING,"/",8,9)=RAPRIEN(5)_"/"_RAX ;proc mods-- changed
"RTN","RAO7XX",135,0)
 I 'RACHANGE G CMPEXIT
"RTN","RAO7XX",136,0)
 S $P(RASTRING,"/",1,3)=RAPRIEN(1)_"/"_RAPRIEN(2)_"/"_RAPRIEN(3)
"RTN","RAO7XX",137,0)
 S:$P(RASTRING,"/",6)="" $P(RASTRING,"/",6)=RAPRIEN(4)
"RTN","RAO7XX",138,0)
 ; set up of vars for call to XQALERT or to ORB3
"RTN","RAO7XX",139,0)
 I $G(SNDALERT,0)=1 D
"RTN","RAO7XX",140,0)
 . I $$PATCH^XPDUTL("OR*3.0*112") D SETNOTIF^RAO7PC4($P(RADATA,"^",11)) Q
"RTN","RAO7XX",141,0)
 . D SETALERT^RAO7PC4
"RTN","RAO7XX",142,0)
B2P18 G:'$$PATCH^XPDUTL("OR*3.0*92") CMPEXIT
"RTN","RAO7XX",143,0)
 ;if CPRS patch not installed-don't send any XX message.Checkpoint for all modes except registration,for registration mode see ISCHNGD.Alert has been sent above,because it should be sent anyway
"RTN","RAO7XX",144,0)
 N RAREGMOD S RAREGMOD="E" ;edit mode
"RTN","RAO7XX",145,0)
 I $$ORVR^RAORDU()'<3 D EN1^RAO7NEW($P(RADATA,"^",11))
"RTN","RAO7XX",146,0)
CMPEXIT ;
"RTN","RAO7XX",147,0)
 ;Next lines are for RA*5*82
"RTN","RAO7XX",148,0)
 G:$G(RACHANGE) QQQ ;If proc, proc mod, req phys changed quit 1
"RTN","RAO7XX",149,0)
 S RAX=0 ;Quit 1 if CPT modifier changed or Tech comments changed
"RTN","RAO7XX",150,0)
 F  S RAX=$O(^RADPT(RAPRIEN(1),"DT",RAPRIEN(2),"P",RAPRIEN(3),"CMOD",RAX)) Q:'RAX  I $G(RAPRIEN("CMOD",RAX))'=+$G(^(RAX,0)) S RACHANGE=1 Q
"RTN","RAO7XX",151,0)
 G:$G(RACHANGE) QQQ ;
"RTN","RAO7XX",152,0)
 S RAX=0
"RTN","RAO7XX",153,0)
 F  S RAX=$O(^RADPT(RAPRIEN(1),"DT",RAPRIEN(2),"P",RAPRIEN(3),"L",RAX)) Q:'RAX  I $G(RAPRIEN("TCOM",RAX))'=$G(^(RAX,"TCOM")) S RACHANGE=1 Q
"RTN","RAO7XX",154,0)
QQQ K RAPRIEN Q RACHANGE
"RTN","RAO7XX",155,0)
 ;End of RA*5*82 change
"RTN","RAO7XX",156,0)
 Q  ;OK
"RTN","RAO7XX",157,0)
 ;In input templates the TECH COMMENT prompt should follow 
"RTN","RAO7XX",158,0)
 ;TECHNOILOGIST prompt but on the other hand it must be saved 
"RTN","RAO7XX",159,0)
 ;ONLY with other Activity log fields. That is why we call TCPROMPT 
"RTN","RAO7XX",160,0)
 ;from template after TECHNOLOGIST prompt and put the content of 
"RTN","RAO7XX",161,0)
 ;RA18TCOM in the file 70 only in the very end of editing
"RTN","RAO7XX",162,0)
TCPROMPT() ;called from input templates to immitate prompt
"RTN","RAO7XX",163,0)
 N RA18A,RA18B,RA18C,DIR,Y,X,DA,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","RAO7XX",164,0)
 S RA18A="DESCRIPTION;HELP-PROMPT;INPUT TRANSFORM"
"RTN","RAO7XX",165,0)
 D FIELD^DID(70.07,4,"",RA18A,"RA18B") ;field's parameters
"RTN","RAO7XX",166,0)
 S DIR(0)="FO^3:255^"_RA18B("INPUT TRANSFORM")
"RTN","RAO7XX",167,0)
 S DIR("?")=RA18B("HELP-PROMPT")
"RTN","RAO7XX",168,0)
 S DIR("??")="^D DSCRP^RAO7XX"
"RTN","RAO7XX",169,0)
 S DIR("A")="    TECHNOLOGIST COMMENT"
"RTN","RAO7XX",170,0)
 S RA18C=$$GETTCOM^RAUTL11(RADFN,RADTI,RACNI)
"RTN","RAO7XX",171,0)
 S:RA18C'="" DIR("B")=RA18C
"RTN","RAO7XX",172,0)
 D ^DIR
"RTN","RAO7XX",173,0)
 Q:Y=""!(Y=RA18C) ""
"RTN","RAO7XX",174,0)
 Q Y
"RTN","RAO7XX",175,0)
 ;
"RTN","RAO7XX",176,0)
DSCRP ;get field description
"RTN","RAO7XX",177,0)
 N RA18D S RA18D=0
"RTN","RAO7XX",178,0)
 F  S RA18D=$O(RA18B("DESCRIPTION",RA18D)) Q:RA18D=""  W !,RA18B("DESCRIPTION",RA18D)
"RTN","RAO7XX",179,0)
 Q
"RTN","RAO7XX",180,0)
ZZ(RAPTID,RAPFIEN,RAPTIEN) ; Additional text for display when processing alert.
"RTN","RAO7XX",181,0)
 ;
"RTN","RAO7XX",182,0)
 S RAPTID=$G(RAPTID)   ; IEN of Patient
"RTN","RAO7XX",183,0)
 S RAPFIEN=$G(RAPFIEN) ; IEN of Procedure changed FROM
"RTN","RAO7XX",184,0)
 S RAPTIEN=$G(RAPTIEN) ; IEN of Procedure changed TO
"RTN","RAO7XX",185,0)
 ;
"RTN","RAO7XX",186,0)
 N RAPNAM,RAPSSN,RAPRFR,RAPRTO
"RTN","RAO7XX",187,0)
 ;
"RTN","RAO7XX",188,0)
 S RAPNAM=$$GET1^DIQ(70,+RAPTID,.01) S:RAPNAM="" RAPNAM="UNKNOWN"
"RTN","RAO7XX",189,0)
 S RAPSSN=$$GET1^DIQ(70,+RAPTID,.09) S:RAPSSN="" RAPSSN="UNKNOWN"
"RTN","RAO7XX",190,0)
 S RAPRFR=$$GET1^DIQ(71,+RAPFIEN,.01) S:RAPRFR="" RAPRFR="UNKNOWN"
"RTN","RAO7XX",191,0)
 S RAPRTO=$$GET1^DIQ(71,+RAPTIEN,.01) S:RAPRTO="" RAPRTO="UNKNOWN"
"RTN","RAO7XX",192,0)
 ;
"RTN","RAO7XX",193,0)
 D EN^DDIOL("Imaging Exam For "_$E(RAPNAM,1,30)_" ("_RAPSSN_") Changed:",,"!!?4")
"RTN","RAO7XX",194,0)
 D EN^DDIOL("From: "_RAPRFR,,"!?8")
"RTN","RAO7XX",195,0)
 D EN^DDIOL("To:   "_RAPRTO,,"!?8")
"RTN","RAO7XX",196,0)
 Q
"RTN","RAO7XX",197,0)
 ;
"RTN","RART")
0^1^B21656995^B21428021
"RTN","RART",1,0)
RART ;HISC/CAH,FPT,GJC AISC/MJK,TMP,RMO-Reporting Menu ;11/16/98  15:02
"RTN","RART",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**2,5,15,18,43,82**;Mar 16, 1998;Build 8
"RTN","RART",3,0)
 ;;last modification by SS for P18 June 15, 2000
"RTN","RART",4,0)
3 ;;Verify a Report
"RTN","RART",5,0)
 D SET^RAPSET1 I $D(XQUIT) K XQUIT Q
"RTN","RART",6,0)
 I $D(RANOSCRN) S X=$$DIVLOC^RAUTL7() I X D Q QUIT
"RTN","RART",7,0)
 G:$D(^VA(200,"ARC","S",DUZ))!($D(^XUSEC("RA VERIFY",DUZ))) 30
"RTN","RART",8,0)
 G:$P(RAMDV,"^",18)=1 30
"RTN","RART",9,0)
 G:'$D(^VA(200,"ARC","R",DUZ)) 30
"RTN","RART",10,0)
 I $P(RAMDV,"^",18)'=1 W !!,$C(7),"Interpreting Residents are not allowed to verify reports." G Q
"RTN","RART",11,0)
30 K RAUP S RAPGM=30,RAREPORT=1 D ^RACNLU G Q:X="^" I '$D(^RARPT(+RARPT,0)) W !!?2,$C(7),"No report available!" G 30
"RTN","RART",12,0)
 I $P(^RARPT(+RARPT,0),"^",5)="V" W !!?2,$C(7),"Report already verified!" G 30
"RTN","RART",13,0)
SS1 Q:$$VERONLY^RAUTL11=-1  ;P18 case info 
"RTN","RART",14,0)
31 S DIE("NO^")="",DA=RARPT,DR="[RA VERIFY REPORT ONLY]",DIE="^RARPT("
"RTN","RART",15,0)
 S RAIMGTYI=$P($G(^RADPT(RADFN,"DT",RADTI,0)),U,2),RAIMGTYJ=$P($G(^RA(79.2,+RAIMGTYI,0)),U)
"RTN","RART",16,0)
 I RAIMGTYJ']"" W !,"Error: Cannot determine imaging type of exam.",! K RAIMGTYI,RAIMGTYJ G @RAPGM
"RTN","RART",17,0)
 ; must lock both report AND case together, so to ensure 
"RTN","RART",18,0)
 ; that a verified report has the correct diagnostic codes
"RTN","RART",19,0)
 S RAXIT=$$LOCK^RAUTL12(DIE,DA) ; lock Report
"RTN","RART",20,0)
 I RAXIT K RAXIT G @RAPGM
"RTN","RART",21,0)
 S RASAVDIE="^RADPT("_RADFN_",""DT"","_RADTI_",""P"",",RASAVDA(2)=RADFN,RASAVDA(1)=RADTI,RASAVDA=RACNI
"RTN","RART",22,0)
 ; rpt exists & locked, thus no need to lock at "DT" level because users
"RTN","RART",23,0)
 ; can only use 'report entry/edit' option to enter dx's for printsets
"RTN","RART",24,0)
 S RAXIT=$$LOCK^RAUTL12(RASAVDIE,.RASAVDA) ; lock case before asking REPORT STATUS
"RTN","RART",25,0)
 I RAXIT K RAXIT G @RAPGM
"RTN","RART",26,0)
 D ^DIE K DE,DQ,DR D UNLOCK^RAUTL12(DIE,DA) ; unlock Report
"RTN","RART",27,0)
 K DIE,RAXIT
"RTN","RART",28,0)
 S X=+$O(^RA(72,"AA",RAIMGTYJ,9,0)),DA(2)=RADFN,DA(1)=RADTI,DA=RACNI,DIE="^RADPT("_DA(2)_",""DT"","_DA(1)_",""P"","
"RTN","RART",29,0)
 S DR=13_$S(RACT'="V":"",'$D(^RA(72,X,.1)):"",$P(^(.1),"^",5)'="Y":"",1:"R")_";I $D(^RA(78.3,+X,0)),$P(^(0),""^"",4)=""y"" S RAAB=1 "
"RTN","RART",30,0)
 I RACT="V",($P($G(^RA(72,+X,.1)),"^",5)="Y") S DIE("NO^")="BACK"
"RTN","RART",31,0)
 D ^DIE
"RTN","RART",32,0)
 K DA,DE,DQ,DIE,DR
"RTN","RART",33,0)
 I $P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),U,13)="" G UNL31
"RTN","RART",34,0)
 S DR="50///"_RACN
"RTN","RART",35,0)
 S DR(2,70.03)=13.1
"RTN","RART",36,0)
 S DR(3,70.14)=.01_";I $D(^RA(78.3,+X,0)),$P(^(0),""^"",4)=""y"" S RAAB=1"
"RTN","RART",37,0)
 S DA(1)=RADFN,DA=RADTI,DIE="^RADPT("_DA(1)_",""DT"","
"RTN","RART",38,0)
 D ^DIE
"RTN","RART",39,0)
UNL31 ; copy then unlock
"RTN","RART",40,0)
 N:'$D(RAPRTSET) RAPRTSET N:'$D(RAMEMARR) RAMEMARR
"RTN","RART",41,0)
 D EN2^RAUTL20(.RAMEMARR)
"RTN","RART",42,0)
 I RAPRTSET S RADRS=1,RAXIT=0 D COPY^RARTE2 ; copy diagnoses
"RTN","RART",43,0)
 D UNLOCK^RAUTL12(RASAVDIE,.RASAVDA) ; use params from PrimDiag's lock
"RTN","RART",44,0)
 K RASAVDIE,RASAVDA
"RTN","RART",45,0)
 K DA,DE,DQ,DIE,DR
"RTN","RART",46,0)
32 K RAXIT
"RTN","RART",47,0)
 I $G(RAPGM)="GETRPT^RARTVER" I $E(RACT'="V"),($P(^RARPT(RARPT,0),U,14)]"") D RETURN^RARTVER2
"RTN","RART",48,0)
PACS I (RACT="V")!(RACT="R") D TASK^RAHLO4
"RTN","RART",49,0)
 I RACT="V",$T(CREATE^WVRALINK)]"" D CREATE^WVRALINK(RADFN,RADTI,RACNI) ;women's health
"RTN","RART",50,0)
 ;
"RTN","RART",51,0)
 I RAPGM="NXT^RABTCH1" G @RAPGM
"RTN","RART",52,0)
TIME D:RACT="V"
"RTN","RART",53,0)
 .N RAHLTCPB S RAHLTCPB=1 D UPSTAT^RAUTL0 K RAAB
"RTN","RART",54,0)
 I $G(RARDX)="S" D
"RTN","RART",55,0)
 . D SAVE^RARTVER2
"RTN","RART",56,0)
 . I $G(RAPGM)="GETRPT^RARTVER" D
"RTN","RART",57,0)
 .. ; for 'On-line Verifying of Reports' default device selection is the
"RTN","RART",58,0)
 .. ; "REPORT PRINTER NAME"
"RTN","RART",59,0)
 .. S %ZIS("B")=$P($G(RAMLC),"^",10) K:%ZIS("B")']"" %ZIS("B")
"RTN","RART",60,0)
 .. Q
"RTN","RART",61,0)
 . D Q^RARTR,RESTORE^RARTVER2
"RTN","RART",62,0)
 . K:$D(%ZIS("B")) %ZIS("B")
"RTN","RART",63,0)
 . Q
"RTN","RART",64,0)
 G @RAPGM
"RTN","RART",65,0)
Q K %,%DT,%X,C,D,D0,D1,DA,DIC,RACN,RACNI,RACT,RADATE,RADFN,RADTE,RADTI,RADUZ,RAHEAD,RAI,RAIMGTYI,RAIMGTYJ,RANME,RANUM,RAOR,RAPGM,RAPRC,RAQUIT,RAREPORT,RARPT,RASET,RASN,RASSN,RAST,RASTI,RAUP,RAVER,X,Y,^TMP($J,"RAEX")
"RTN","RART",66,0)
 K %W,%Y,%Y1,DDER,DI,DIROUT,DIRUT,DLAYGO,DTOUT,DUOUT,RACI,ZTSK,POP,DDH
"RTN","RART",67,0)
 Q
"RTN","RART",68,0)
OERR1 ; Jump to 'OERR1^RART1' This is necessary to support the reference to
"RTN","RART",69,0)
 ; this line label in the OE/RR Notifications file.
"RTN","RART",70,0)
 G OERR1^RART1 Q
"RTN","RART",71,0)
 ;
"RTN","RART",72,0)
PRTDX ; print dx codes on report display (called from RART1)
"RTN","RART",73,0)
 K RAFLG D WAIT^RART1:($Y+6)>IOSL&('$D(RARTVERF))
"RTN","RART",74,0)
 Q:X="^"!(X="T")!(X="P")
"RTN","RART",75,0)
 S RADXCODE=$P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),U,13)
"RTN","RART",76,0)
 W !?3,"Primary Diagnostic Code: ",!?2,$S($D(^RA(78.3,+RADXCODE,0)):$P(^(0),U,1),1:"") K RAFLG
"RTN","RART",77,0)
 D WAIT^RART1:($Y+6)>IOSL&('$D(RARTVERF)) Q:X="^"!(X="T")!(X="P")
"RTN","RART",78,0)
 I '$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",0)) W ! Q
"RTN","RART",79,0)
 W !!?3,"Secondary Diagnostic Codes: "
"RTN","RART",80,0)
 S RADXCODE=0
"RTN","RART",81,0)
 F  S RADXCODE=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX","B",RADXCODE)) Q:RADXCODE'>0!('$D(^RA(78.3,+RADXCODE,0)))!($D(RAOOUT))  K RAFLG D WAIT^RART1:($Y+6)>IOSL&('$D(RARTVERF)) Q:X="^"!(X="T")!(X="P")  W !?2,$P(^RA(78.3,RADXCODE,0),U,1)
"RTN","RART",82,0)
 W !
"RTN","RART",83,0)
 Q
"RTN","RART",84,0)
EXIT ; Kill variables created when user prints 'Abnormal Rad/Nuc Med Report
"RTN","RART",85,0)
 ; Alert'.  Variables are created when 'PRT^RARTR' is called.
"RTN","RART",86,0)
 K %X,%XX,%Y,%YY,A,DDER,DFN,DI,DIR,DIW,DIWI,DIWT,DIWTC,DIWX,DLAYGO
"RTN","RART",87,0)
 K DN,RACI,RACN0,RACPT,RACPTNDE,RADTE0,RADTV,RAN,RAOBR4,RAPRCNDE
"RTN","RART",88,0)
 K RAPROC,RAPROCIT,RAPRV,RARPT0,VA,VADM,VAERR,X2,ZTSK
"RTN","RART",89,0)
 Q
"RTN","RARTE4")
0^3^B25247672^B24962657
"RTN","RARTE4",1,0)
RARTE4 ;HISC/GJC - Edit/Delete Reports (cont) ;11/4/97  08:02
"RTN","RARTE4",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**15,27,41,82**;Mar 16, 1998;Build 8
"RTN","RARTE4",3,0)
LOCK ;Try to lock next avail IEN, if locked - fail, if used - increment again
"RTN","RARTE4",4,0)
 S I=I+1 S RAXIT=$$LOCK^RAUTL12("^RARPT(",I) I RAXIT D UNLOCK2 D INCRPT G START^RARTE
"RTN","RARTE4",5,0)
 I $D(^RARPT(I))!($D(^RARPT("B",I))) D UNLOCK^RAUTL12("^RARPT(",I) G LOCK
"RTN","RARTE4",6,0)
 S ^RARPT(I,0)=RARPTN,RARPT=I,^(0)=$P(^RARPT(0),"^",1,2)_"^"_I_"^"_($P(^(0),"^",4)+1),^DISV($S($D(DUZ)#2:DUZ,1:0),"^RARPT(")=I S:'$D(^RARPT(RARPT,"T")) ^("T")=""
"RTN","RARTE4",7,0)
 S ^RARPT(RARPT,0)=RARPTN_"^"_RADFN_"^"_RADTE_"^"_RACN_"^D",DIK="^RARPT(",DA=RARPT D IX1^DIK
"RTN","RARTE4",8,0)
 K %,D,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RARTE4",9,0)
 S DA(2)=RADFN,DA(1)=RADTI,DA=RACNI
"RTN","RARTE4",10,0)
 S DIE="^RADPT("_RADFN_",""DT"","_RADTI_",""P"","
"RTN","RARTE4",11,0)
 S DR="17////"_RARPT D ^DIE
"RTN","RARTE4",12,0)
 K %,D,D0,DA,DI,DIC,DIE,DQ,DR,RAY1,X,Y
"RTN","RARTE4",13,0)
 I RAPRTSET D PTR^RARTE2
"RTN","RARTE4",14,0)
 I RAXIT D UNLOCK2,UNLOCK^RAUTL12("^RARPT(",RARPT) Q
"RTN","RARTE4",15,0)
 G IN0
"RTN","RARTE4",16,0)
IN ;lock rpt for the 1st time if editing existing rpt
"RTN","RARTE4",17,0)
 S RAXIT=$$LOCK^RAUTL12("^RARPT(",RARPT) I RAXIT D UNLOCK2,Q Q
"RTN","RARTE4",18,0)
IN0 ;skip to here if rpt created in this session and already locked
"RTN","RARTE4",19,0)
 G IN1:'$P(RAMDV,"^",14) K RACOPY S DIC("S")="I RARPT'=+Y",DIC("A")="Select Report to Copy: ",DIC(0)="AMEQ",DIC="^RARPT(" D DICW,^DIC K DIC("S"),DIC("A") S RAY1=Y
"RTN","RARTE4",20,0)
 I X="^" D UNLOCK^RAUTL12("^RARPT(",RARPT),UNLOCK2 S RAXIT=$$EN3^RAUTL15(RARPT) D INCRPT G START^RARTE
"RTN","RARTE4",21,0)
 G IN1:RAY1<0
"RTN","RARTE4",22,0)
 F J="H","R","I" K ^RARPT(RARPT,J)
"RTN","RARTE4",23,0)
 F J="R","I" F I=1:1 Q:'$D(^RARPT(+Y,J,I,0))  S ^RARPT(RARPT,J,I,0)=^(0)
"RTN","RARTE4",24,0)
 ;F I=1:1 Q:'$D(^RADPT(RADFN,"DT",RADTI,"P",1,"H",I,0))  S ^RARPT(RARPT,"H",I,0)=^RADPT(RADFN,"DT",RADTI,"P",1,"H",I,0)
"RTN","RARTE4",25,0)
 S RACOPY=""
"RTN","RARTE4",26,0)
IN1 ;skip to here if div param disallows rpt copying
"RTN","RARTE4",27,0)
 I $P(RAMDV,"^",14) W !,RAI
"RTN","RARTE4",28,0)
 K RAFIN
"RTN","RARTE4",29,0)
 S DR="50///"_RACN
"RTN","RARTE4",30,0)
 S DR(2,70.03)="12//^S X=$S($D(RARES)&($D(RABTCH)):RARES,1:"""");S:$D(^VA(200,+X,0)) RARES=$P(^(0),U);I X'>0 S Y=""@15"";70;@15;15"
"RTN","RARTE4",31,0)
 I $P(RAMDV,"^",28) S DR(2,70.03)=DR(2,70.03)_"R" ; req'd for DIVISION
"RTN","RARTE4",32,0)
 S DR(2,70.03)=DR(2,70.03)_"//^S X=$S($D(RASTFF)&($D(RABTCH)):RASTFF,1:"""");S:$D(^VA(200,+X,0)) RASTFF=$P(^(0),U);I X'>0 S Y=""@1"";60;@1;S RAFIN="""""
"RTN","RARTE4",33,0)
 S DA(1)=RADFN,DA=RADTI,DIE="^RADPT("_DA(1)_",""DT""," D ^DIE K DE,DQ
"RTN","RARTE4",34,0)
 D ELOC^RABWRTE ; Billing Aware -- ask Inter. Img Loc
"RTN","RARTE4",35,0)
 I RAPRTSET S RADRS=2 D COPY^RARTE2 ; copy resid and staff
"RTN","RARTE4",36,0)
 G PRT:'$D(RAFIN) W !,RAI
"RTN","RARTE4",37,0)
 ;
"RTN","RARTE4",38,0)
 ; **BNT - Commented out to stop copying history from file 70 to 74
"RTN","RARTE4",39,0)
 ; in patch RA*5*27.  The history is now referenced directly from file 70.
"RTN","RARTE4",40,0)
 ; I $D(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"H")),'$D(^RARPT(RARPT,"H")) F I=1:1 Q:'$D(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"H",I,0))  S ^RARPT(RARPT,"H",I,0)=^(0)
"RTN","RARTE4",41,0)
 ; **
"RTN","RARTE4",42,0)
 I '$D(RACOPY),$P(RAMDV,"^",12) D STD^RARTE1 I X="^" G PRT
"RTN","RARTE4",43,0)
 W !,RAI D EDTRPT^RARTE1
"RTN","RARTE4",44,0)
PRT D UNLOCK^RAUTL12(RAPNODE,RACNI)
"RTN","RARTE4",45,0)
 ; --- copy diags to other cases of print set
"RTN","RARTE4",46,0)
 I RAPRTSET S RADRS=1,RAXIT=0 D COPY^RARTE2 L -^RADPT(RADFN,"DT",RADTI) ;unlock dt level only after copying is done
"RTN","RARTE4",47,0)
 ; wait til report has been checked for completeness before unlocking it
"RTN","RARTE4",48,0)
 S RAXIT=$$EN3^RAUTL15(RARPT) D UNLOCK^RAUTL12("^RARPT(",RARPT)
"RTN","RARTE4",49,0)
 I RAXIT S RAXIT=0 D UNLOCK2 D INCRPT G START^RARTE
"RTN","RARTE4",50,0)
 ; ---
"RTN","RARTE4",51,0)
 D  K RAAB G PRT1:'$D(RABTCH),PRT1:'$D(^RABTCH(74.2,+RABTCH,0))
"RTN","RARTE4",52,0)
 .; RAHLTCPB flag is inactive
"RTN","RARTE4",53,0)
 .N RAHLTCPB S RAHLTCPB=1 D:$S('$D(RACT):0,RACT="V":1,1:0) UPSTAT^RAUTL0
"RTN","RARTE4",54,0)
 .D:$S('$D(RACT):1,RACT'="V":1,1:0) UP1^RAUTL1
"RTN","RARTE4",55,0)
ASKREP W !!,"Do you want to place this report in the batch ",RABTCHN,"? Yes// " R X:DTIME S:'$T!(X["^") X="N" S:X="" X="Y" G PRT1:"Nn"[$E(X)
"RTN","RARTE4",56,0)
 I "Yy"'[$E(X) W:X'["?" *7 W !!?3,"Enter 'YES' to place this report in the batch, or 'NO' not to." G ASKREP
"RTN","RARTE4",57,0)
 I $D(^RABTCH(74.2,"D",RARPT,RABTCH)) W !?5,"...report is already part of the '",RABTCHN,"' batch" D INCRPT G START^RARTE
"RTN","RARTE4",58,0)
 W !?5,"...will now place report in the '",RABTCHN,"' batch" S DIE="^RABTCH(74.2,",DA=RABTCH,DR="25///"_$E(RADTE,4,7)_$E(RADTE,2,3)_"-"_RACN,DR(2,74.21)="2////N" D ^DIE K DQ,DE D INCRPT G START^RARTE
"RTN","RARTE4",59,0)
PRT1 R !!,"Do you wish to print this report? No// ",X:DTIME S:'$T!(X["^") X="N" S:X="" X="N" ;030497
"RTN","RARTE4",60,0)
 I "Nn"[$E(X) D INCRPT G START^RARTE
"RTN","RARTE4",61,0)
 I "Yy"'[$E(X) W:X'["?" *7 W !!?3,"Enter 'YES' to print this report, or 'NO' not to." G PRT1
"RTN","RARTE4",62,0)
 S ION=$P(RAMLC,"^",10),IOP=$S(ION]"":"Q;"_ION,1:"Q")
"RTN","RARTE4",63,0)
 S RAMES="W !!?3,""Report has been queued for printing on device "",ION,""."""
"RTN","RARTE4",64,0)
 D Q^RARTR D INCRPT G START^RARTE
"RTN","RARTE4",65,0)
 ;
"RTN","RARTE4",66,0)
Q I $D(RABTCH),$D(^RABTCH(74.2,+RABTCH,"R",0)) D ASKPRT^RARTE1,BTCH^RABTCH:"Yy"[$E(X)
"RTN","RARTE4",67,0)
Q1 K %,%DT,%W,%Y,%Y1,C,D0,D1,DA,DIC,DIE,DR,OREND,RABTCH,RABTCHN,RACN,RACNI,RACOPY,RACS,RACT,RADATE,RADFN,RADTE,RADTI,RADUZ,RAELESIG,RAFIN,RAHEAD,RAI,RAJ1
"RTN","RARTE4",68,0)
 K RALI,RALR,RANME,RANUM,RAOR,RAORDIFN,RAPNODE,RAPRC,RAPRIT,RAQUIT,RAREPORT,RARES,RARPDT,RARPT,RARPTN,RARPTZ,RARTPN,RASET,RASI,RASIG,RASN,RASSN,RAST,RAST1,RASTI,RASTFF,RAVW,XQUIT,W,X,Y
"RTN","RARTE4",69,0)
 K D,D2,DDER,DI,DIPGM,DLAYGO,J,RAEND,RAF5,RAFL,RAFST,RAIX,RAPOP,RAY1
"RTN","RARTE4",70,0)
 K ^TMP($J,"RAEX")
"RTN","RARTE4",71,0)
 K POP,DUOUT
"RTN","RARTE4",72,0)
 Q
"RTN","RARTE4",73,0)
DICW ; Build DIC("W") string
"RTN","RARTE4",74,0)
 N DO D DO^DIC1
"RTN","RARTE4",75,0)
 S DIC("W")=$S($G(DIC("W"))]"":DIC("W")_" ",1:"")_"W ""   "",$$FLD^RARTFLDS(+Y,""PROC"")"
"RTN","RARTE4",76,0)
 Q
"RTN","RARTE4",77,0)
INCRPT ; Kill extraneous variables to avoid collisions.
"RTN","RARTE4",78,0)
 ; Incomplete report information, select another case #.
"RTN","RARTE4",79,0)
 K %,%DT,D,D0,D1,D2,DI,DIC,DIWT,DN,I,J,RACN,RACNI,RACT,RADATE,RADTE
"RTN","RARTE4",80,0)
 K RADTI,RAFIN,RAI,RALI,RALR,RANME,RAPRC,RARPT,RARPTN,RASSN,RAST,RAVW,X
"RTN","RARTE4",81,0)
 Q
"RTN","RARTE4",82,0)
UNLOCK2 D UNLOCK^RAUTL12(RAPNODE,RACNI) L -^RADPT(RADFN,"DT",RADTI)
"RTN","RARTE4",83,0)
 Q
"RTN","RARTVER")
0^2^B43178310^B42943472
"RTN","RARTVER",1,0)
RARTVER ;HISC/FPT,CAH AISC/MJK,RMO-On-line Verify Reports ;11/19/97  13:52
"RTN","RARTVER",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**8,23,26,82**;Mar 16, 1998;Build 8
"RTN","RARTVER",3,0)
 D SET^RAPSET1 I $D(XQUIT) K XQUIT Q
"RTN","RARTVER",4,0)
 N RAVFIED,RAXIT S RAXIT=0
"RTN","RARTVER",5,0)
 K RAVER S:$D(^VA(200,DUZ,0)) RAVER=$P(^(0),"^") I '$D(RAVER) W !!,*7,"Your name must be defined in the NEW PERSON File to continue." G Q
"RTN","RARTVER",6,0)
 I '$D(^VA(200,"ARC","R",DUZ)),'$D(^VA(200,"ARC","S",DUZ)) W !!,*7,"This option is only available for Rad/Nuc Med Interpreting Physicians." G Q
"RTN","RARTVER",7,0)
 I '$$CHKUSR^RAO7UTL(DUZ) D ERR^RARTVER2(DUZ) D Q QUIT
"RTN","RARTVER",8,0)
 I $D(^VA(200,"ARC","S",DUZ)) S RASTAFF=1 G 1
"RTN","RARTVER",9,0)
 I $P(RAMDV,"^",18)'=1 W !!,*7,"Interpreting Residents are not allowed to verify reports.",!! G Q
"RTN","RARTVER",10,0)
1 S RAONLINE="" W ! D ES^RASIGU G Q:'%
"RTN","RARTVER",11,0)
 I $D(RASTAFF),$P($G(^VA(200,DUZ,"RA")),U,2)'="y" S RARAD=DUZ,RAD="ASTF",RARESFLG="" G SRTRPT ;selected USER does NOT have ALLOW VERIFYING OF OTHERS
"RTN","RARTVER",12,0)
 I '$D(^VA(200,"ARC","S",DUZ)),$S('$P(RAMDV,"^",18):1,'$D(^VA(200,"ARC","R",DUZ)):1,'$D(^VA(200,DUZ,"RA")):1,$P(^VA(200,DUZ,"RA"),"^",2)'="y":1,1:0) S RARAD=DUZ,RAD="ARES",RARESFLG="" G SRTRPT
"RTN","RARTVER",13,0)
ASKRAD W ! S DIC("B")=RAVER,DIC("S")="I $D(^VA(200,""ARC"",""R"",Y))!($D(^VA(200,""ARC"",""S"",Y)))",DIC("A")="Select Interpreting Physician: ",DIC="^VA(200,",DIC(0)="AEMQ" D ^DIC K DIC G Q:Y<0 S RARAD=+Y
"RTN","RARTVER",14,0)
 S RAD=$S($D(^VA(200,"ARC","R",RARAD)):"ARES",1:"ASTF")
"RTN","RARTVER",15,0)
 ;
"RTN","RARTVER",16,0)
SRTRPT K ^TMP($J,"RA"),RA,RARPTX
"RTN","RARTVER",17,0)
 S RARADHLD=RARAD,RATOT=0,RARPT=0
"RTN","RARTVER",18,0)
 ;tmp($j,"ra","dt",-,-) =
"RTN","RARTVER",19,0)
 ;^rpt status at start of selection^/long CN^Pat.ien^Proc.ien
"RTN","RARTVER",20,0)
 F  S RARPT=$O(^RARPT(RAD,RARAD,RARPT)) Q:'RARPT  I $D(^RARPT(RARPT,0)) S RARTDT=$S($P(^(0),"^",6)="":9999999.9999,1:$P(^(0),"^",6)) D
"RTN","RARTVER",21,0)
 .Q:$$STUB^RAEDCN1(RARPT)  ;skip stub report 081500
"RTN","RARTVER",22,0)
 .Q:$P($G(^RARPT(+RARPT,0)),"^",5)="V"  ; skip if already verified
"RTN","RARTVER",23,0)
 .S Y=RARPT D RASET^RAUTL2 ;returns Y=radpt(radfn,"dt",radti,"p",-,0)
"RTN","RARTVER",24,0)
 .Q:'Y  ;record must be corrupt no zero node for ADC x-ref!!
"RTN","RARTVER",25,0)
 .S ^TMP($J,"RA","DT",RARTDT,RARPT)="^"_$P($G(^RARPT(+RARPT,0)),"^",5)_"^/"_$P(^(0),"^",1,2)_"^"_+$P(Y,U,2)
"RTN","RARTVER",26,0)
 .S RATOT=RATOT+1
"RTN","RARTVER",27,0)
 .Q
"RTN","RARTVER",28,0)
 I 'RATOT S RANM=$S($D(^VA(200,RARAD,0)):$P(^(0),"^"),1:"UNKNOWN"),RANM=$S(RANM=RAVER:"You have",1:"Interpreting Physician "_RANM_" has") W !!,RANM," no Unverified Reports." G Q:$D(RARESFLG),ASKRAD
"RTN","RARTVER",29,0)
 N RATOTORI S RATOTORI=RATOT ; save original value of RATOT
"RTN","RARTVER",30,0)
 ;
"RTN","RARTVER",31,0)
SELRPT I RATOT=1 D ONERPT^RARTVER1 G:'$D(^TMP($J,"RA")) Q S RACHOICE=5,RACHOICE("1RPT")="" G RPTLP
"RTN","RARTVER",32,0)
 D TALLY^RARTVER1,SELRPT^RARTVER1 G Q:Y=0 S RACHOICE=+Y
"RTN","RARTVER",33,0)
 I Y=1 D PV^RARTVER1 G:RATOT'>0 SRTRPT G RPTLP
"RTN","RARTVER",34,0)
 I Y=2 S RASTATUS="R" D DPDRNV^RARTVER1 G:RATOT'>0 SRTRPT G RPTLP
"RTN","RARTVER",35,0)
 I Y=3 S RASTATUS="D" D DPDRNV^RARTVER1 G:RATOT'>0 SRTRPT G RPTLP
"RTN","RARTVER",36,0)
 I Y=4 S RASTATUS="PD" D DPDRNV^RARTVER1 G:RATOT'>0 SRTRPT G RPTLP
"RTN","RARTVER",37,0)
 I Y=5 G RPTLP
"RTN","RARTVER",38,0)
 I Y=7 D STAT^RARTVER1 G:RATOT'>0 SRTRPT G RPTLP
"RTN","RARTVER",39,0)
 ; if none of the above, then defaults to Y=6 SELECTED 
"RTN","RARTVER",40,0)
 S RASTATFG="" D ^RARTVER1 K RASTATFG G Q:$D(RAOUT)!('$D(RARPTX))
"RTN","RARTVER",41,0)
 ;
"RTN","RARTVER",42,0)
RPTLP S DIR(0)="S^P:PAGE AT A TIME;E:ENTIRE REPORT",DIR("B")="P",DIR("A")="How would you like to view the reports?"
"RTN","RARTVER",43,0)
 S DIR("?",1)="If you would like to pause after each page of the report enter 'P'.",DIR("?")="Otherwise enter 'E' to view an entire report at one time."
"RTN","RARTVER",44,0)
 D ^DIR K DIR G Q:$D(DIRUT) I Y="E" S RARTVERF=1
"RTN","RARTVER",45,0)
 S RACHOICE("NAME")=$S(RACHOICE=6:"SELECTED",RACHOICE=5:"ALL",RACHOICE=4:"PROBLEM DRAFT",RACHOICE=3:"DRAFT",RACHOICE=2:"RELEASED/NOT VERIFIED",1:"PREVERIFIED")
"RTN","RARTVER",46,0)
RPTLP1 I $D(^TMP($J,"RA","DT")) S RARPT=0,RARTDT=0 F  S RARTDT=$O(^TMP($J,"RA","DT",RARTDT)) Q:'RARTDT  S RARDX="" D GETRPT Q:RARDX="^"  I $D(RARLTV),$G(RARLTV)=0 D ADDLRPT^RARTVER2 Q:RATOT=0  S RARLTV=RATOT G RPTLP1
"RTN","RARTVER",47,0)
 I $D(^TMP($J,"RA","XREF")) S (RPTX,RARPT)=0 D GETRPT
"RTN","RARTVER",48,0)
 ; RARESFLG  is used to flag that  VERIFYING OF OTHERS  is allowed
"RTN","RARTVER",49,0)
 ; Before looping back, RARESFLG is set, so that if there are no reports,
"RTN","RARTVER",50,0)
 ; the logic will goto Q instead of to ASKRAD
"RTN","RARTVER",51,0)
 I RATOTORI>1 S RARAD=RARADHLD,RARESFLG="" K RARLTV,RARTVERF G SRTRPT ; go another round
"RTN","RARTVER",52,0)
 ; also dis-allow re-asking another USER when all reports
"RTN","RARTVER",53,0)
 ; become verified by current USER
"RTN","RARTVER",54,0)
 ;
"RTN","RARTVER",55,0)
Q D CU^RARTVER2
"RTN","RARTVER",56,0)
 Q
"RTN","RARTVER",57,0)
 ;
"RTN","RARTVER",58,0)
GETRPT I $G(RARPT) L -^RARPT(RARPT)
"RTN","RARTVER",59,0)
 S:$D(^TMP($J,"RA","XREF")) RPTX=RPTX+1 S RARPT=$S($D(^TMP($J,"RA","DT")):$O(^TMP($J,"RA","DT",RARTDT,RARPT)),$D(^TMP($J,"RA","XREF")):+$G(RARPTX(RPTX)),1:0) Q:'RARPT
"RTN","RARTVER",60,0)
 I $D(^TMP($J,"RA","DT")) G:$P(^TMP($J,"RA","DT",RARTDT,RARPT),"^")="V" GETRPT S $P(^TMP($J,"RA","DT",RARTDT,RARPT),"^")="V" ;here, V = viewed already
"RTN","RARTVER",61,0)
 I '$D(^RARPT(RARPT)) D MSG1 G GETRPT ;rpt disappeared
"RTN","RARTVER",62,0)
 L +^RARPT(RARPT):2 I '$T G LOCK^RARTVER2
"RTN","RARTVER",63,0)
 S RAXIT=0 D DISRPT^RARTVER2 I $G(X)="^" S RARDX="^" Q  ;display whole report
"RTN","RARTVER",64,0)
 I +$G(RAVFIED) S RAVFIED=0 G GETRPT
"RTN","RARTVER",65,0)
 N RASTBEF S RASTBEF=$S($D(^TMP($J,"RA","DT",+$G(RARTDT),+$G(RARPT))):$P(^(RARPT),"^",2),$D(^TMP($J,"RA","XREF")):$P($G(RARPTX(RPTX)),U,2),1:"")
"RTN","RARTVER",66,0)
ASK Q:RAXIT  W ! S I="",$P(I,"=",80)="" W I K I
"RTN","RARTVER",67,0)
 I "12345"[$E(RACHOICE) D:'$D(RARLTVFL) RLTV^RARTVER1 D:$D(RARLTVFL) RLTV1^RARTVER1
"RTN","RARTVER",68,0)
 S RARD("A")="",RARD(1)="Print^print this report for editing",RARD(2)="Edit^edit this report",RARD(3)="Top^display the report from the beginning",RARD(4)="continue^continue normal processing"
"RTN","RARTVER",69,0)
 S RARD(5)="Status & Print^edit Status, then print report",RARD(0)="S",RARD("B")=4
"RTN","RARTVER",70,0)
 S:$G(RARLTV) RARLTV=RARLTV-1
"RTN","RARTVER",71,0)
 I $G(RARLTV)>0 S RARD("A")="("_$G(RARLTV)_" left to review) "
"RTN","RARTVER",72,0)
 I $G(RARLTV)=0 I '$D(RACHOICE("1RPT")) S RARD("A")="(No more "_RACHOICE("NAME")_") " S:RACHOICE=5 RARD("A")="(ALL gone) "
"RTN","RARTVER",73,0)
 S RARD("A")=RARD("A")_"Type '?' for action list, 'Enter' to " ;12/30/96
"RTN","RARTVER",74,0)
 I RASTBEF'=$P(^RARPT(RARPT,0),U,5) D MSG2
"RTN","RARTVER",75,0)
 D SET^RARD K RARD S RARDX=$E(X) I RARDX="^" L -^RARPT(RARPT) Q
"RTN","RARTVER",76,0)
 ; if user chose "T"op, the report will be displayed again from the top
"RTN","RARTVER",77,0)
 I "PT"[RARDX D PRTRPT^RARTVER2:RARDX="P",DISRPT^RARTVER2:RARDX="T" G ASK
"RTN","RARTVER",78,0)
 I RARDX="E" D EDTCHK^RARTVER2 I RARDX="E" W !!,"EDITING REPORT",!,"--------------",! D EDTRPT^RARTE1 D  K RAAB G ASK
"RTN","RARTVER",79,0)
 .; RAHLTCPB flag is inactive
"RTN","RARTVER",80,0)
 .N RAHLTCPB S RAHLTCPB=1 D:RACT="V" UPSTAT^RAUTL0 D:RACT'="V" UP1^RAUTL1
"RTN","RARTVER",81,0)
 S RAPGM="GETRPT^RARTVER" G 31^RART ;goto Verify Report Only template
"RTN","RARTVER",82,0)
 ;
"RTN","RARTVER",83,0)
MSG1 N I,J1,J2,J3 S I=$S($D(^TMP($J,"RA","DT",+$G(RARTDT),+$G(RARPT))):^(RARPT),$D(^TMP($J,"RA","XREF")):$G(RARPTX(RPTX)),1:"")
"RTN","RARTVER",84,0)
 S J1=$P(I,"/",2),J2=$P(J1,"^",2),J3=$P(J1,"^",3),J1=$P(J1,"^")
"RTN","RARTVER",85,0)
 W !!!?15,*7,"Since the time you selected this group of reports,",!?15,"another user has deleted this report for",!?15,$P($G(^DPT(J2,0)),"^"),"   case ",J1,!?15,"Procedure ",$P($G(^RAMIS(71,+J3,0)),U),".",!! G CONT Q
"RTN","RARTVER",86,0)
MSG2 N I,J S I=";"_$P(^RARPT(RARPT,0),"^",5)_":"
"RTN","RARTVER",87,0)
 S J=";"_$P(^DD(74,5,0),U,3)
"RTN","RARTVER",88,0)
 W !!!?15,*7,"Since the time you selected this group of reports,",!?15,"another user has changed this report's status to '",$P($P(J,I,2),";"),"'.",!! Q
"RTN","RARTVER",89,0)
CONT W !! S DIR(0)="FO",DIR("A")="Press return key to continue " D ^DIR
"RTN","RARTVER",90,0)
 Q
"RTN","RASTED")
0^4^B47049414^B46056660
"RTN","RASTED",1,0)
RASTED ;HISC/CAH,FPT,GJC,SS AISC/TMP,TAC,RMO-Edits for status tracking ;6/2/98  15:43
"RTN","RASTED",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**1,10,18,28,45,71,82**;Mar 16, 1998;Build 8
"RTN","RASTED",3,0)
 ;last modif by SS for P18 JUN 19,2000
"RTN","RASTED",4,0)
 ;02/10/2006 BAY/KAM RA*5*71 Add ability to update exam data to V/R
"RTN","RASTED",5,0)
 ; *** 'RASTED' is called from the routine; 'CASE^RASTEXT1'. ***
"RTN","RASTED",6,0)
 ;last modification by SS May 12,2000
"RTN","RASTED",7,0)
 S RAL=X F I2=1:1 S X=$P(RAL,",",I2) Q:X=""  S RAVW="" W !!,"Case # being tracked: ",X D SEL^RACNLU D:'RACNT KEY D START:RACNT&((X'="^")&(X'=""))
"RTN","RASTED",8,0)
 K RAL,RAI,RAPRI,I2,I3,RAVW,RAEND,RANME,RAPRC,RARPT,RADTE,RADT0,RANEXT,RANXT72,RASK,RACN,RACN0,RADFN,RADUZ,RAPOP,RAST,RAST0,RAFL,RAFST,RAIX,RASSN,RACOMP,X Q
"RTN","RASTED",9,0)
 ;RACOMP defined if [RA STATUS CHANGE] was processed completely
"RTN","RASTED",10,0)
START F I3=1:1:11 S @$P("RADFN^RADTI^RACNI^RANME^RASSN^RADATE^RADTE^RACN^RAPRC^RARPT^RAST","^",I3)=$P(Y,"^",I3)
"RTN","RASTED",11,0)
 I '$D(^RA(72,+RAST,0)) W $C(7),"Invalid status for case #: ",RACN R X:3 Q
"RTN","RASTED",12,0)
 S RAST0=^RA(72,+RAST,0) I $P(RAST0,"^",3)=9 W $C(7),!,"Exam is already complete!!" R X:3 Q
"RTN","RASTED",13,0)
 S X1=""
"RTN","RASTED",14,0)
 I $D(^RA(72,+$P(RAST0,"^",2),0)) S RANEXT=^(0),RASK=$S($D(^(.2)):^(.2),1:""),RANXT72=+$P(RAST0,"^",2)
"RTN","RASTED",15,0)
NEXT I '$D(RANEXT) S DIC("A")="Enter Next Status: ",DIC="^RA(72,",DIC(0)="AEFQZ",DIC("S")="I $P(^(0),U,3),$P(^(0),U,7)=$O(^RA(79.2,""B"",RAIMGTY,0))" D ^DIC K DIC Q:Y'>0  S RANEXT=Y(0),RASK=$S($D(^RA(72,+Y,.2)):^(.2),1:""),RANXT72=+Y
"RTN","RASTED",16,0)
 I $P(RANEXT,"^")=$P(RAST0,"^") W $C(7),!,"Status has already been set to ",$P(RANEXT,"^") R X:3 Q
"RTN","RASTED",17,0)
 I $$LKUP^XPDKEY(+$P(RANEXT,"^",4))]"",'$D(^XUSEC($$LKUP^XPDKEY(+$P(RANEXT,"^",4)),DUZ)) W $C(7),!,"You are not authorized to change to this status" R X:3 Q
"RTN","RASTED",18,0)
 ; check if next status has order field filled in
"RTN","RASTED",19,0)
 G:$P(RANEXT,U,3)]"" OK2
"RTN","RASTED",20,0)
 N RANXTIEN,RALINE S RANXTIEN=$P(RAST0,U,2),$P(RALINE,"_",50)=""
"RTN","RASTED",21,0)
 W !!?15,$C(7),RALINE
"RTN","RASTED",22,0)
 W !!?15,$C(7),"Default Next Status (",$P(RANEXT,U),") is *NOT* active.",!?15,$C(7),RALINE,!
"RTN","RASTED",23,0)
NXT S RANXTIEN=$P(^RA(72,RANXTIEN,0),U,2)
"RTN","RASTED",24,0)
 G:$P($G(^RA(72,+RANXTIEN,0)),U,3)=9 OK0 ;next default status is COMPLETE
"RTN","RASTED",25,0)
 G:RANXTIEN="" BAD ;no next default status pointer
"RTN","RASTED",26,0)
 G:'$D(^RA(72,RANXTIEN,0)) BAD ;no next default status record
"RTN","RASTED",27,0)
 G:$P($G(^RA(72,RANXTIEN,0)),U,3)="" NXT ;no order data, so loop back
"RTN","RASTED",28,0)
 G OK0
"RTN","RASTED",29,0)
BAD W !?15,$C(7),RALINE
"RTN","RASTED",30,0)
 W !!?18,$C(7),"There is no valid higher status to advance to.",!?15,$C(7),RALINE
"RTN","RASTED",31,0)
KEY W !! K DIR S DIR(0)="E",DIR("A")="Press Return key to continue " D ^DIR
"RTN","RASTED",32,0)
 K DIR,DIRUT,DUOUT Q
"RTN","RASTED",33,0)
OK0 S RANEXT=$G(^RA(72,RANXTIEN,0)),RANXT72=RANXTIEN
"RTN","RASTED",34,0)
OK1 W !?15,$C(7),RALINE,!!?18,"Next valid status is : ",$P(RANEXT,U),!?15,$C(7),RALINE
"RTN","RASTED",35,0)
OK2 S RADT0=^RADPT(RADFN,"DT",RADTI,0),RACN0=^("P",RACNI,0),RACS=$P(RACN0,"^",24),RAPRIT=$P(RACN0,"^",2)
"RTN","RASTED",36,0)
CHANGE W !!,"Name: ",RANME,?40,"Case #  : ",RACN,!,"Division : ",$S($D(^DIC(4,+$P(RADT0,"^",3),0)):$P(^(0),"^"),1:"")
"RTN","RASTED",37,0)
 W ?40,"Location: ",$S('$D(^RA(79.1,+$P(RADT0,"^",4),0)):"",$D(^SC(+^(0),0)):$P(^(0),"^"),1:"")
"RTN","RASTED",38,0)
 W !,"Procedure: ",RAPRC
"RTN","RASTED",39,0)
 D PRCCPT^RAPROD
"RTN","RASTED",40,0)
 W !,"   ***** Old Status: ",$P(RAST0,"^"),!,"   ***** New Status: ",$P(RANEXT,"^")
"RTN","RASTED",41,0)
 I RAPRC="Unknown" W !!?5,$C(7),"This record is corrupted -- the procedure is missing,",!?5,"please contact your ADPAC or IRM",! K DIR S DIR(0)="E",DIR("A")="Press RETURN to Continue" D ^DIR K DIR,DIROUT,DIRUT,DTOUT,DUOUT Q
"RTN","RASTED",42,0)
ASK R !,"Do you wish to continue? YES// ",X1:DTIME S:X1="" X1="Y" Q:'$T!(X1["^")!("nN"[X1)
"RTN","RASTED",43,0)
 I X1["?" W !!,"Answer 'Yes' or 'No'.",! G ASK
"RTN","RASTED",44,0)
 S RADUZ=DUZ I '$P(RAMDV,"^",6)!($P(RASK,"^",11)["Y") S RAPOP=0 D USER Q:RAPOP
"RTN","RASTED",45,0)
 N RAPRTSET,RAMEMARR D EN2^RAUTL20(.RAMEMARR) ;is this a print set ?
"RTN","RASTED",46,0)
 N RAWHICH,RAREM,RABEFORE,RAAFTER
"RTN","RASTED",47,0)
 S DIE("NO^")="BACKOUTOK",DR="[RA STATUS CHANGE]"
"RTN","RASTED",48,0)
 S DA=RADFN,RADADA=RADTI,DIE="^RADPT(",RADIE="^RADPT("_RADFN_",""DT"","
"RTN","RASTED",49,0)
 S RAXIT=$$LOCK^RAUTL12(RADIE,RADADA) Q:RAXIT
"RTN","RASTED",50,0)
 ;
"RTN","RASTED",51,0)
 ;save 'before' CM data value to compare against the possible 'after'
"RTN","RASTED",52,0)
 ;value
"RTN","RASTED",53,0)
 D TRK70CMB^RAMAINU(RADFN,RADTI,RACNI,.RATRKCMB) ;RA*5*45
"RTN","RASTED",54,0)
 ;
"RTN","RASTED",55,0)
 D SVBEFOR^RAO7XX(RADFN,RADTI,RACNI) ;P18 save before edit to compare later
"RTN","RASTED",56,0)
 K RACOMP D ^DIE
"RTN","RASTED",57,0)
 ;P18. $D(RABEFORE)=0 means that RASTREQ was not run - the user has interrupted input or timeout happened. So we must call it, then check result (is status changed) and if so - update 70.03 #3 and set RA70033=X
"RTN","RASTED",58,0)
 I '$D(RABEFORE) K DA S X=RANXT72 D:X ^RASTREQ  I $D(X)#2 S RA70033=X D U70033^RADD3(RADFN,RADTI,RACNI,X)
"RTN","RASTED",59,0)
 ;
"RTN","RASTED",60,0)
 ;1) check data consistency between 'CONTRAST MEDIA USED' & 'CONTRAST
"RTN","RASTED",61,0)
 ;MEDIA'
"RTN","RASTED",62,0)
 ;2) check 'before' CM data against 'after' CM data, file in audit log
"RTN","RASTED",63,0)
 ;if necessary. Remember, contrast media asked when in input template:
"RTN","RASTED",64,0)
 ;RA EXAM EDIT (RA*5*45)
"RTN","RASTED",65,0)
 S RACMDA=RACNI,RACMDA(1)=RADTI,RACMDA(2)=RADFN
"RTN","RASTED",66,0)
 D XCMINTEG^RAMAINU1(.RACMDA) ;1
"RTN","RASTED",67,0)
 D TRK70CMA^RAMAINU(RADFN,RADTI,RACNI,RATRKCMB) ;2
"RTN","RASTED",68,0)
 K RACMDA,RAOPRC
"RTN","RASTED",69,0)
 ;
"RTN","RASTED",70,0)
 K DIE("NO^"),DQ,DE,RATRKCMB,RAZCM
"RTN","RASTED",71,0)
 K RANM702,RADIOPH,RADOSE,RAIEN702,RAHI,RALOW,RAPRI,RAMIS,RAI,RAPSDRUG,RAR1
"RTN","RASTED",72,0)
 ;
"RTN","RASTED",73,0)
 ; if EXAM STATUS didn't process, still go thru status-change-logic
"RTN","RASTED",74,0)
 ; variables
"RTN","RASTED",75,0)
 ; ---------
"RTN","RASTED",76,0)
 ;   RA70033: is set in the RA STATUS CHANGE input template after the
"RTN","RASTED",77,0)
 ;             update to the EXAMINATION STATUS field (70.03;3)
"RTN","RASTED",78,0)
 ;    RATCXX: are technologist comments (if any) input by the user
"RTN","RASTED",79,0)
 ;     RAMDV: division parameters, piece 10; store the date/time
"RTN","RASTED",80,0)
 ;            of an exam status change (1 for yes, 0 for no)
"RTN","RASTED",81,0)
 ;
"RTN","RASTED",82,0)
 D:$D(RA70033)&($P(RAMDV,"^",10)) X7005^RADD3(RADFN,RADTI,RACNI,RAMDV,"",RA70033,$S($D(RADUZ):RADUZ,1:DUZ))
"RTN","RASTED",83,0)
 D A7007^RADD3(RADFN,RADTI,RACNI,$S($D(RADUZ):RADUZ,1:DUZ),$G(RATCXX))
"RTN","RASTED",84,0)
 D UNLOCK^RAUTL12(RADIE,RADADA) K RADADA,RADIE
"RTN","RASTED",85,0)
 K RA70033,RADUZ,RATCXX
"RTN","RASTED",86,0)
 N RACN0A ; updated version of the exam node after status updates
"RTN","RASTED",87,0)
 W !,"...Status ",$S($D(RAAFTER)&($G(RABEFORE)=$G(RAAFTER)):"unchanged",$G(RABEFORE)>$G(RAAFTER):"backed down",1:"successfully changed")," for case #: ",RACN
"RTN","RASTED",88,0)
 ;
"RTN","RASTED",89,0)
 ;02/10/2006 BAY/KAM RA*5*71 ,modified in RA*5*82...
"RTN","RASTED",90,0)
 I $D(RAAFTER),$G(RABEFORE)=$G(RAAFTER) R X:3 D  Q  ;exit if no change
"RTN","RASTED",91,0)
 .;Modified for RA*5*82
"RTN","RASTED",92,0)
 .N RAEXEDT S RAEXEDT=$$CMPAFTR^RAO7XX(1) ;;P18 compares if procedure was changed sends XX message
"RTN","RASTED",93,0)
 .D:RAEXEDT EXM^RAHLRPC ;P18 compares if procedure was changed sends XX message
"RTN","RASTED",94,0)
 ;
"RTN","RASTED",95,0)
 ; if status got backed down, RANEXT is re-defined inside rtn RASTREQ
"RTN","RASTED",96,0)
 ; when the above edit template gets to the EXAM STATUS field
"RTN","RASTED",97,0)
 ;
"RTN","RASTED",98,0)
 D ^RAORDC I +$P(RANEXT,"^",3)>1,RACS'="Y",$S($P(RACN0,"^",6)']"":1,$P(^DIC(42,+$P(RACN0,"^",6),0),U,3)="D":1,1:0) D EN^RAUTL0
"RTN","RASTED",99,0)
 S RACN0A=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)) ; updated 0 node!
"RTN","RASTED",100,0)
 ; Do we need to 'Generate Exam Alert' based on the exam status?
"RTN","RASTED",101,0)
 I $D(^RA(72,+$P(RACN0A,"^",3),"ALERT")),($P(^("ALERT"),"^")="y") D
"RTN","RASTED",102,0)
 . ; fire off the 'Rad Patient Examined' alert.
"RTN","RASTED",103,0)
 . N RAPRIT,RAORDIFN
"RTN","RASTED",104,0)
 . S RAPRIT=+$P(RACN0A,"^",2) ; possible call to OERR3^RAORDU1
"RTN","RASTED",105,0)
 . S RAORDIFN=+$P(RACN0A,"^",11) ; possible call to OERR^RAORDU1
"RTN","RASTED",106,0)
 . D:$$ORVR^RAORDU()=2.5 OERR^RAUTL1
"RTN","RASTED",107,0)
 . D:$$ORVR^RAORDU()'<3 OERR3^RAUTL1
"RTN","RASTED",108,0)
 . Q
"RTN","RASTED",109,0)
 ;
"RTN","RASTED",110,0)
 R X:3 D
"RTN","RASTED",111,0)
 .N RAEXEDT S RAEXEDT=$$CMPAFTR^RAO7XX(1)
"RTN","RASTED",112,0)
 .D EXM^RAHLRPC
"RTN","RASTED",113,0)
 ;P18 compares -if procedure was changed - sends XX message
"RTN","RASTED",114,0)
 Q
"RTN","RASTED",115,0)
USER S %="A",%DUZ=DUZ W ! D ^XUVERIFY G USERQ:%=-1 I %'=1 W $C(7)," ??" G USER
"RTN","RASTED",116,0)
 Q
"RTN","RASTED",117,0)
USERQ K RADUZ S RAPOP=1 Q
"RTN","RASTED",118,0)
WHY1 ;explain why prim/sec resid/staff, diagnoses prompts are skipped
"RTN","RASTED",119,0)
 Q:$G(DA)<1!($G(DA(1))<1)!($G(DA(2))<1)
"RTN","RASTED",120,0)
 N RA0,RA1,RA2,RA5 N:'$D(RA3)#2 RA3 N:'$D(RA4)#2 RA4
"RTN","RASTED",121,0)
 S RA0=$G(^RADPT(DA(2),"DT",DA(1),"P",DA,0)) Q:'RA0  S RA2=0
"RTN","RASTED",122,0)
 I $G(RA3)=13 D WHY11 G WHYMSG ;diagnoses
"RTN","RASTED",123,0)
 S RA3=12,RA4=70 D WHY11 ;residents
"RTN","RASTED",124,0)
 S RA3=15,RA4=60 D WHY11 ;staff
"RTN","RASTED",125,0)
WHYMSG W:'RA2 !!?12,"No data have been entered for ",$S(RA3'=13:"residents/staff",1:"diagnoses")," yet.",!
"RTN","RASTED",126,0)
WHYMSG2 W !?12,$C(7),"The selected case belongs to a print set,",!?12,"Please use the 'Report Enter/Edit' option",!?12,"to enter data for ",$S(RA3=99:"residents/staff/diagnoses",RA3'=13:"residents/staff",1:"diagnoses"),".",!!
"RTN","RASTED",127,0)
 Q
"RTN","RASTED",128,0)
WHY11 Q:'+$P(RA0,"^",RA3)
"RTN","RASTED",129,0)
 S RA2=1 W !!?2,$P(^DD(70.03,RA3,0),"^")," :",?35
"RTN","RASTED",130,0)
 W:RA3'=13 $P(^VA(200,+$P(RA0,"^",RA3),0),"^") W:RA3=13 $P(^RA(78.3,+$P(RA0,"^",RA3),0),"^") W !
"RTN","RASTED",131,0)
 S RA5=$P($P(^DD(70.03,RA4,0),"^",4),";") Q:'$O(^RADPT(DA(2),"DT",DA(1),"P",DA,RA5,0))
"RTN","RASTED",132,0)
 S RA1=0 W !?4,$P(^DD(70.03,RA4,0),"^")," :"
"RTN","RASTED",133,0)
 F  S RA1=$O(^RADPT(DA(2),"DT",DA(1),"P",DA,RA5,RA1)) Q:'RA1  I +^(RA1,0) W ?37 W:RA3'=13 $P($G(^VA(200,+^(0),0)),"^") W:RA3=13 $P($G(^RA(78.3,+^(0),0)),"^") W !
"RTN","RASTED",134,0)
 Q
"RTN","RASTED",135,0)
WHY2 ;explain why diags prompts are skipped
"RTN","RASTED",136,0)
 N RA3 S RA3=13,RA4=13.1 G WHY1
"RTN","RAUTL1")
0^8^B44121957^B42756218
"RTN","RAUTL1",1,0)
RAUTL1 ;HISC/CAH,FPT,GJC AISC/MJK,RMO-Utility Routine ;10/22/97  13:54
"RTN","RAUTL1",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**5,9,18,71,82**;Mar 16, 1998;Build 8
"RTN","RAUTL1",3,0)
 ;last modification by SS for P18 June 19,00
"RTN","RAUTL1",4,0)
 ;02/10/2006 BAY/KAM RA*5*71 Add ability to update exam data to V/R
"RTN","RAUTL1",5,0)
 I "IOSCR"'[X!(X="") S X="Unknown" Q
"RTN","RAUTL1",6,0)
 G @($E(X))
"RTN","RAUTL1",7,0)
 ;Set X=Inpatient Location
"RTN","RAUTL1",8,0)
I S X=$S($D(^DIC(42,+$P(^RADPT(D0,"DT",D1,"P",D2,0),"^",6),0)):$P(^(0),"^"),1:"Unknown")
"RTN","RAUTL1",9,0)
 Q
"RTN","RAUTL1",10,0)
 ;
"RTN","RAUTL1",11,0)
 ;Set X=Outpatient Location
"RTN","RAUTL1",12,0)
O S X=$S($D(^SC(+$P(^RADPT(D0,"DT",D1,"P",D2,0),"^",8),0)):$P(^(0),"^"),1:"Unknown")
"RTN","RAUTL1",13,0)
 Q
"RTN","RAUTL1",14,0)
 ;
"RTN","RAUTL1",15,0)
 ;Set X=Contract/Sharing Agreement patient location
"RTN","RAUTL1",16,0)
S ;
"RTN","RAUTL1",17,0)
C S X=$S($D(^DIC(34,+$P(^RADPT(D0,"DT",D1,"P",D2,0),"^",9),0)):$P(^(0),"^"),1:"Unknown")
"RTN","RAUTL1",18,0)
 Q
"RTN","RAUTL1",19,0)
 ;
"RTN","RAUTL1",20,0)
 ;Set X=Research patient location
"RTN","RAUTL1",21,0)
R S X=$S($D(^RADPT(D0,"DT",D1,"P",D2,"R")):$P(^("R"),"^"),1:"Unknown") Q
"RTN","RAUTL1",22,0)
 ;
"RTN","RAUTL1",23,0)
 ;Set X=time of day in external format (ex: 2:28 PM)
"RTN","RAUTL1",24,0)
NOW S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100) D TIME
"RTN","RAUTL1",25,0)
 Q
"RTN","RAUTL1",26,0)
 ;Input X=FM date/time, Output X=time (external format)
"RTN","RAUTL1",27,0)
TIME S X=$E($P(X,".",2)_"0000",1,4),%=X>1159 S:X>1259 X=X-1200 S X=X\100_":"_$E(X#100+100,2,3)_" "_$E("AP",%+1)_"M" S:$P(X,":")=0 X=12_":"_$P(X,":",2)
"RTN","RAUTL1",28,0)
 Q
"RTN","RAUTL1",29,0)
 ;
"RTN","RAUTL1",30,0)
ELAPSED ;Pass parameters X (from date) and X1 (to date)
"RTN","RAUTL1",31,0)
 ;Variable Y is returned as either an elapsed time in the form DD:HH:MM where DD=days, HH=hours, MM=minutes or as the string 'Neg. Time' indicating a negative elapsed time
"RTN","RAUTL1",32,0)
 ;Variable Y1 is returned as the # of minutes of elapsed time
"RTN","RAUTL1",33,0)
 I '$D(RAMTIME) S DIC="^DD(""FUNC"",",DIC(0)="FX",RAX=X,X="MINUTES" D ^DIC K DIC S X=RAX S:$D(^DD("FUNC",+Y,1)) RAMTIME=^(1) I '$D(RAMTIME) W *7,!!,"Can't continue --- No 'MINUTES' function found in File Manager" K Y,Y1 G Q
"RTN","RAUTL1",34,0)
 X RAMTIME S Y1=X I X<0 S Y="Neg. Time" G Q
"RTN","RAUTL1",35,0)
MINUTS S X(1)=X\1440,X=X-(1440*X(1)),X(2)=X\60,X(3)=X-(60*X(2)),Y=$E(100+X(1),2,3)_":"_$E(100+X(2),2,3)_":"_$E(100+X(3),2,3)
"RTN","RAUTL1",36,0)
Q K RAX,X Q
"RTN","RAUTL1",37,0)
 ;
"RTN","RAUTL1",38,0)
UPDATE ;Entry point for Update Rad/Nuc Med Exam Status option
"RTN","RAUTL1",39,0)
 I $O(RACCESS(DUZ,""))="" D SETVARS^RAPSET1(0)
"RTN","RAUTL1",40,0)
 I $G(RAIMGTY)="" D SETVARS^RAPSET1(1)
"RTN","RAUTL1",41,0)
 I $G(RAIMGTY)="" K XQUIT Q  ; didn't sign-on to an imaging location
"RTN","RAUTL1",42,0)
 D ^RACNLU G UPQ:"^"[X
"RTN","RAUTL1",43,0)
 I $D(^RA(72,"AA",RAIMGTY,9,+RAST)),'$D(^XUSEC("RA MGR",DUZ)) W !!?3,*7,"You do not have the appropriate access privileges to act on completed exams." G UPDATE
"RTN","RAUTL1",44,0)
 I $D(^RA(72,"AA",RAIMGTY,0,+RAST)) W !!?3,*7,"Exam has been 'cancelled' therefore the status cannot be changed." G UPDATE
"RTN","RAUTL1",45,0)
 ;D UP1 I RAOR>0 S DA(2)=RADFN,DA(1)=RADTI,DA=RACNI,DIE="^RADPT("_DA(2)_",""DT"","_DA(1)_",""P"",",DR="100///""NOW""",DR(2,70.07)="2///U;3////"_$S($G(RADUZ):RADUZ,1:DUZ) D ^DIE
"RTN","RAUTL1",46,0)
 D UP1 I RAOR>0 D
"RTN","RAUTL1",47,0)
 .L +^RADPT(RADFN,"DT",RADTI,"P",RACNI)
"RTN","RAUTL1",48,0)
 .N RAIEN
"RTN","RAUTL1",49,0)
 .S RAIENS="+1,"_RACNI_","_RADTI_","_RADFN_","
"RTN","RAUTL1",50,0)
 .S RAFDA(70.07,RAIENS,.01)="NOW"
"RTN","RAUTL1",51,0)
 .K RAERR D UPDATE^DIE("E","RAFDA","RAIEN","RAERR")
"RTN","RAUTL1",52,0)
 .K RAFDA,RAIENS
"RTN","RAUTL1",53,0)
 .I $D(RAERR) L -^RADPT(RADFN,"DT",RADTI,"P",RACNI) K RAIEN Q
"RTN","RAUTL1",54,0)
 .S RAIENS=RAIEN(1)_","_RACNI_","_RADTI_","_RADFN_","
"RTN","RAUTL1",55,0)
 .S RAFDA(70.07,RAIENS,2)="U"
"RTN","RAUTL1",56,0)
 .S RAFDA(70.07,RAIENS,3)=$S($G(RADUZ):RADUZ,1:DUZ)
"RTN","RAUTL1",57,0)
 .D FILE^DIE(,"RAFDA")
"RTN","RAUTL1",58,0)
 .L -^RADPT(RADFN,"DT",RADTI,"P",RACNI)
"RTN","RAUTL1",59,0)
UPQ K RAFDA,RAIENS
"RTN","RAUTL1",60,0)
 K %,D,DA,DE,DIC,DIE,DQ,DR,I,J,POP,RACS,RAEND,RAF5,RAFL,RAFST,RAI,RAIX,RAJ1,RAORDIFN,RAPRIT,RAHEAD,RASN,RAOR,RASTI,RASSN,RADATE,RAST,RACN,RACNI,RADFN,RADTE,RADTI,RANME,RAPRC,RARPT,X,Y,Z,^TMP($J,"RAEX"),C,DIPGM Q
"RTN","RAUTL1",61,0)
 ;
"RTN","RAUTL1",62,0)
 ;Exam status updating and accompanying updates to status log, oe/rr
"RTN","RAUTL1",63,0)
UP1 N RA8,RAEXEDT S RA8=0 ;use this to flag when one alert has been sent
"RTN","RAUTL1",64,0)
 ;Line change for RA*5*82
"RTN","RAUTL1",65,0)
 S RAEXEDT=$$CMPAFTR^RAO7XX(1) ;P18 if procedure changed in RAEDCN or RAEDPT sends XX message to CPRS if needed
"RTN","RAUTL1",66,0)
 ; RA EDITCN and RA EDITPT should process this case only
"RTN","RAUTL1",67,0)
 I $D(RAOPT("EDITCN"))!($D(RAOPT("EDITPT"))) D UP2,UPK Q
"RTN","RAUTL1",68,0)
 ; see if this case belongs to a printset
"RTN","RAUTL1",69,0)
 N:'$D(RAPRTSET) RAPRTSET N:'$D(RAMEMARR) RAMEMARR
"RTN","RAUTL1",70,0)
 D EN2^RAUTL20(.RAMEMARR) ;043099 always recalculate RAPRTSET
"RTN","RAUTL1",71,0)
 ; if not print set, then just process this case only
"RTN","RAUTL1",72,0)
 I 'RAPRTSET D UP2,UPK Q
"RTN","RAUTL1",73,0)
 ;case belongs to print set, so process all members of same print set
"RTN","RAUTL1",74,0)
 N RACNISAV,RA7
"RTN","RAUTL1",75,0)
 S RACNISAV=RACNI,RA7=0
"RTN","RAUTL1",76,0)
 F  S RA7=$O(RAMEMARR(RA7)) Q:RA7=""  S RACNI=RA7 D UP2
"RTN","RAUTL1",77,0)
 S RACNI=RACNISAV
"RTN","RAUTL1",78,0)
 G UPK
"RTN","RAUTL1",79,0)
UP2 ;Remedy Call 124379 Patch *71 BAY/KAM Added next line
"RTN","RAUTL1",80,0)
 ;Patch RA*5*82 next line commented out
"RTN","RAUTL1",81,0)
 ;D:$G(RAHLTCPB)'=1 EXM^RAHLRPC
"RTN","RAUTL1",82,0)
 ;
"RTN","RAUTL1",83,0)
 S DA(2)=RADFN,DA(1)=RADTI,DA=RACNI,DIE="^RADPT("_DA(2)_",""DT"","_DA(1)_",""P"","
"RTN","RAUTL1",84,0)
 N RAAFTER,RABEFORE
"RTN","RAUTL1",85,0)
 D STUFF^RASTREQ1 I RAOR<0,$D(RASN) W:'$D(RAONLINE)&('$D(ZTQUEUED)) !?5,"...exam status remains '",RASN,"'." K DIE,RACS,RAPRIT D  Q
"RTN","RAUTL1",86,0)
 .D:$G(RAEXEDT) EXM^RAHLRPC ; DO statement added by RA*5*82
"RTN","RAUTL1",87,0)
 W:'$D(RAONLINE)&('$D(ZTQUEUED)) !?3,"...will now designate exam status as '",RASN,"'... for case no. ",$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)),U)
"RTN","RAUTL1",88,0)
 ; S DR="3////"_RASTI_$S($P(RAMDV,"^",10):";75///^S X=$$MIDNGHT^RAUTL5($$NOW^XLFDT())",1:"")
"RTN","RAUTL1",89,0)
 ; user duz could be in RADUZ, if session is from the Voice recognition
"RTN","RAUTL1",90,0)
 ;S DR(2,70.05)=$S($P(RAMDV,"^",11)&('$D(ZTQUEUED)):".01;",1:"")_"2////"_RASTI_";3////"_$S($G(RADUZ):RADUZ,1:DUZ)
"RTN","RAUTL1",91,0)
 ;D ^DIE
"RTN","RAUTL1",92,0)
 L +^RADPT(RADFN,"DT",RADTI,"P",RACNI)
"RTN","RAUTL1",93,0)
 N RAIEN
"RTN","RAUTL1",94,0)
 S RAIENS=RACNI_","_RADTI_","_RADFN_","
"RTN","RAUTL1",95,0)
 S RAFDA(70.03,RAIENS,3)=RASTI
"RTN","RAUTL1",96,0)
 K RAERR D FILE^DIE(,"RAFDA","RAERR")
"RTN","RAUTL1",97,0)
 I $D(RAERR) L -^RADPT(RADFN,"DT",RADTI,"P",RACNI) G UP2K ;L - P18
"RTN","RAUTL1",98,0)
 I $P(RAMDV,"^",10) D
"RTN","RAUTL1",99,0)
 .S RAIENS="+1,"_RACNI_","_RADTI_","_RADFN_","
"RTN","RAUTL1",100,0)
 .S RAFDA(70.05,RAIENS,.01)=$$MIDNGHT^RAUTL5($$NOW^XLFDT())
"RTN","RAUTL1",101,0)
 .D UPDATE^DIE(,"RAFDA","RAIEN")
"RTN","RAUTL1",102,0)
 .K RAFDA,RAIENS
"RTN","RAUTL1",103,0)
 .Q:'$D(RAIEN(1))
"RTN","RAUTL1",104,0)
 .I $P(RAMDV,"^",11),('$D(ZTQUEUED)) D
"RTN","RAUTL1",105,0)
 ..S DIE=DIE_RACNI_",""T"",",DA=RAIEN(1)
"RTN","RAUTL1",106,0)
 ..S DR=".01"
"RTN","RAUTL1",107,0)
 ..D ^DIE
"RTN","RAUTL1",108,0)
 .S RAIENS=RAIEN(1)_","_RACNI_","_RADTI_","_RADFN_","
"RTN","RAUTL1",109,0)
 .S RAFDA(70.05,RAIENS,2)=RASTI
"RTN","RAUTL1",110,0)
 .S RAFDA(70.05,RAIENS,3)=$S($G(RADUZ):RADUZ,1:DUZ)
"RTN","RAUTL1",111,0)
 .K RAERR2 D FILE^DIE(,"RAFDA")
"RTN","RAUTL1",112,0)
 ;Patch RA*5*82 added next line send EXM message after status update, not before the update
"RTN","RAUTL1",113,0)
 D EXM^RAHLRPC
"RTN","RAUTL1",114,0)
 L -^RADPT(RADFN,"DT",RADTI,"P",RACNI)
"RTN","RAUTL1",115,0)
 ;
"RTN","RAUTL1",116,0)
UP2K K DE,DQ,DIE,DR,RAFDA,RAIENS K:$D(RAERR) RACS,RAPRIT Q:$D(RAERR)  W:'$D(RAONLINE)&('$D(ZTQUEUED)) !?10,"...exam status ",$S($G(RABEFORE)>$G(RAAFTER):"backed down",1:"successfully updated"),"." D ^RAORDC
"RTN","RAUTL1",117,0)
 I RA8=0,$D(^RA(72,RASTI,"ALERT")),$P(^("ALERT"),"^")="y" D:$$ORVR^RAORDU()=2.5 OERR D:$$ORVR^RAORDU()'<3 OERR3 S RA8=1
"RTN","RAUTL1",118,0)
 I $D(^RA(72,RASTI,0)),$P(^(0),"^",3)>1,RACS'="Y",$S('$D(RAF5):1,$P(^DIC(42,+RAF5,0),U,3)="D":1,1:0) D EN^RAUTL0
"RTN","RAUTL1",119,0)
 K RACS,RAORDIFN,RAPRIT,RAF5
"RTN","RAUTL1",120,0)
 Q
"RTN","RAUTL1",121,0)
UPK K ORIFN,ORVP,ORNOTE,ORBPMSG,RACS,RAORDIFN,RAPRIT,RAF5
"RTN","RAUTL1",122,0)
 Q
"RTN","RAUTL1",123,0)
OERR ;Send Alert to OERR after pt examined
"RTN","RAUTL1",124,0)
 S ORVP=RADFN_";DPT(",ORBPMSG="Rad Pt Examined - "_$S($D(^RAMIS(71,RAPRIT,0)):$E($P(^(0),"^"),1,24),1:"Unknown") S:$D(^RAO(75.1,+RAORDIFN,0)) ORIFN=+$P(^(0),"^",7) S ORNOTE(21)=$S($D(ORIFN):1,1:"") D NOTE^ORX3
"RTN","RAUTL1",125,0)
 Q
"RTN","RAUTL1",126,0)
OERR3 ; Send RADIOLOGY PATIENT EXAMINED notification via oe/rr v3
"RTN","RAUTL1",127,0)
 ; Called from UP1
"RTN","RAUTL1",128,0)
 ;
"RTN","RAUTL1",129,0)
 ; RADFN,RADTI,RACNI,RAPRIT must be defined
"RTN","RAUTL1",130,0)
 Q:'$D(RADFN)!('$D(RADTI))!('$D(RACNI))!('$D(RAPRIT))
"RTN","RAUTL1",131,0)
 ;
"RTN","RAUTL1",132,0)
 N RAIENS,RAMSG,RAOIFN,RAOSTS,RAONODE,RADPTNDE,RAREQPHY
"RTN","RAUTL1",133,0)
 S RADPTNDE=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","RAUTL1",134,0)
 S RAOIFN=$P(RADPTNDE,U,11) Q:'RAOIFN  ;file 75.1 ien
"RTN","RAUTL1",135,0)
 S RAONODE=$G(^RAO(75.1,+RAOIFN,0))
"RTN","RAUTL1",136,0)
 S RAOSTS=$P(RAONODE,U,5) Q:RAOSTS'=6  ;active exams only
"RTN","RAUTL1",137,0)
 S RAOIFN=$P(RAONODE,U,7) ;file 100 ien
"RTN","RAUTL1",138,0)
 S RAREQPHY=+$P(RADPTNDE,U,14) ;ordering provider
"RTN","RAUTL1",139,0)
 S RAREQPHY(RAREQPHY)=""
"RTN","RAUTL1",140,0)
 S RAMSG="Imaging Pt Examined - "_$S($D(^RAMIS(71,RAPRIT,0)):$E($P(^(0),U),1,24),1:"Unknown"),RAMSG=$E(RAMSG,1,51)
"RTN","RAUTL1",141,0)
 S RAIENS=RADTI_"~"_RACNI
"RTN","RAUTL1",142,0)
 ;
"RTN","RAUTL1",143,0)
 ; oe parameters:
"RTN","RAUTL1",144,0)
 ;         ORN: notification id (#100.9 ien)
"RTN","RAUTL1",145,0)
 ;         |     ORBDFN: patient id (#2 ien)
"RTN","RAUTL1",146,0)
 ;         |     |     ORNUM: order number (#100 ien)
"RTN","RAUTL1",147,0)
 ;         |     |     |        ORBADUZ: recipient array
"RTN","RAUTL1",148,0)
 ;         |     |     |        |     ORBPMSG: message text
"RTN","RAUTL1",149,0)
 ;         |     |     |        |     |      ORBPDATA exam dt~case iens
"RTN","RAUTL1",150,0)
 ;         |     |     |        |     |      |
"RTN","RAUTL1",151,0)
 D EN^ORB3(21,RADFN,RAOIFN,.RAREQPHY,RAMSG,RAIENS)
"RTN","RAUTL1",152,0)
 Q
"RTN","RAUTL1",153,0)
 ;
"RTN","RAUTL1",154,0)
 ;Called by many report programs. Sets RACRT() array containing all
"RTN","RAUTL1",155,0)
 ;exam statuses that are to be included on the report.  RACRT is set
"RTN","RAUTL1",156,0)
 ;to the piece of the Exam Status File #72 record that corresponds
"RTN","RAUTL1",157,0)
 ;to the report being generated.
"RTN","RAUTL1",158,0)
CRIT F I=0:0 S I=$O(^RA(72,I)) Q:'I  I $D(^(I,.3)),$P(^(.3),"^",RACRT)="y" S RACRT(I)=""
"RTN","RAUTL1",159,0)
 Q
"VER")
8.0^22.0
"BLD",6345,6)
^67
**END**
**END**
