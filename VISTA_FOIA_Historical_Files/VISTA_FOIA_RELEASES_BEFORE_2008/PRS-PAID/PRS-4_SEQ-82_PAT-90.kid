EMERGENCY Released PRS*4*90 SEQ #82
Extracted from mail message
**KIDS**:PRS*4.0*90^

**INSTALL NAME**
PRS*4.0*90
"BLD",5348,0)
PRS*4.0*90^PAID^0^3040122^y
"BLD",5348,1,0)
^^1^1^3040122^
"BLD",5348,1,1,0)
See the patch description on Forum for complete description of this patch.
"BLD",5348,4,0)
^9.64PA^457.5^1
"BLD",5348,4,457.5,0)
457.5
"BLD",5348,4,457.5,222)
n^n^f^^n^^y^o^n
"BLD",5348,4,"B",457.5,457.5)

"BLD",5348,"KRN",0)
^9.67PA^8989.52^19
"BLD",5348,"KRN",.4,0)
.4
"BLD",5348,"KRN",.401,0)
.401
"BLD",5348,"KRN",.402,0)
.402
"BLD",5348,"KRN",.403,0)
.403
"BLD",5348,"KRN",.5,0)
.5
"BLD",5348,"KRN",.84,0)
.84
"BLD",5348,"KRN",3.6,0)
3.6
"BLD",5348,"KRN",3.8,0)
3.8
"BLD",5348,"KRN",9.2,0)
9.2
"BLD",5348,"KRN",9.8,0)
9.8
"BLD",5348,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",5348,"KRN",9.8,"NM",1,0)
PRSAENT^^0^B44402499
"BLD",5348,"KRN",9.8,"NM",2,0)
PRS8DR^^0^B10594635
"BLD",5348,"KRN",9.8,"NM",3,0)
PRS8AC^^0^B42984766
"BLD",5348,"KRN",9.8,"NM",4,0)
PRS8WE^^0^B42280047
"BLD",5348,"KRN",9.8,"NM",5,0)
PRS8WE2^^0^B14824286
"BLD",5348,"KRN",9.8,"NM","B","PRS8AC",3)

"BLD",5348,"KRN",9.8,"NM","B","PRS8DR",2)

"BLD",5348,"KRN",9.8,"NM","B","PRS8WE",4)

"BLD",5348,"KRN",9.8,"NM","B","PRS8WE2",5)

"BLD",5348,"KRN",9.8,"NM","B","PRSAENT",1)

"BLD",5348,"KRN",19,0)
19
"BLD",5348,"KRN",19.1,0)
19.1
"BLD",5348,"KRN",101,0)
101
"BLD",5348,"KRN",409.61,0)
409.61
"BLD",5348,"KRN",771,0)
771
"BLD",5348,"KRN",870,0)
870
"BLD",5348,"KRN",8989.51,0)
8989.51
"BLD",5348,"KRN",8989.52,0)
8989.52
"BLD",5348,"KRN",8994,0)
8994
"BLD",5348,"KRN","B",.4,.4)

"BLD",5348,"KRN","B",.401,.401)

"BLD",5348,"KRN","B",.402,.402)

"BLD",5348,"KRN","B",.403,.403)

"BLD",5348,"KRN","B",.5,.5)

"BLD",5348,"KRN","B",.84,.84)

"BLD",5348,"KRN","B",3.6,3.6)

"BLD",5348,"KRN","B",3.8,3.8)

"BLD",5348,"KRN","B",9.2,9.2)

"BLD",5348,"KRN","B",9.8,9.8)

"BLD",5348,"KRN","B",19,19)

"BLD",5348,"KRN","B",19.1,19.1)

"BLD",5348,"KRN","B",101,101)

"BLD",5348,"KRN","B",409.61,409.61)

"BLD",5348,"KRN","B",771,771)

"BLD",5348,"KRN","B",870,870)

"BLD",5348,"KRN","B",8989.51,8989.51)

"BLD",5348,"KRN","B",8989.52,8989.52)

"BLD",5348,"KRN","B",8994,8994)

"BLD",5348,"QUES",0)
^9.62^^
"BLD",5348,"REQB",0)
^9.611^3^3
"BLD",5348,"REQB",1,0)
PRS*4.0*56^1
"BLD",5348,"REQB",2,0)
PRS*4.0*75^1
"BLD",5348,"REQB",3,0)
PRS*4.0*76^1
"BLD",5348,"REQB","B","PRS*4.0*56",1)

"BLD",5348,"REQB","B","PRS*4.0*75",2)

"BLD",5348,"REQB","B","PRS*4.0*76",3)

"DATA",457.5,1,0)
0 1 E^01E
"DATA",457.5,1,1)
H01111101111110100000111000101101111100
"DATA",457.5,6,0)
0 1 N^01N
"DATA",457.5,6,1)
H00001101111110101111111000101101111100
"DATA",457.5,7,0)
0 2 E^02E
"DATA",457.5,7,1)
HH1111100001110100000111000101101111100
"DATA",457.5,12,0)
0 2 N^02N
"DATA",457.5,12,1)
HH0001100001110101111111000101101111100
"DATA",457.5,13,0)
0 3 N^03N
"DATA",457.5,13,1)
0H0000000001110100111000000000000000100
"DATA",457.5,14,0)
0 3 E^03E
"DATA",457.5,14,1)
0H1110000001110100000000000000000000100
"DATA",457.5,15,0)
A 1 E^A1E
"DATA",457.5,15,1)
H01001001001001000000100000101101111100
"DATA",457.5,16,0)
A 1 N PPI=X^A1NX
"DATA",457.5,16,1)
H00001001001001001100100010101101111100
"DATA",457.5,17,0)
A 1 E PPI=X^A1EX
"DATA",457.5,17,1)
H01001001001001000000100010101101111100
"DATA",457.5,18,0)
A 1 E PPI=E,F^A1EE
"DATA",457.5,18,1)
H01001011001001000000100110101101111100
"DATA",457.5,19,0)
A 1 N PPI=Y^A1NY
"DATA",457.5,19,1)
H00000000001001001100000001111101111100
"DATA",457.5,20,0)
A 1 N PPI=W^A1NW
"DATA",457.5,20,1)
H00001001001001011100100011111101111100
"DATA",457.5,21,0)
A 1 N NH>80^A1N*
"DATA",457.5,21,1)
H00000000001001001100000000101101111101
"DATA",457.5,22,0)
A 1 N^A1N
"DATA",457.5,22,1)
H00001001001001001100100000101101111100
"DATA",457.5,23,0)
A 2 E PPI=E,F^A2EE
"DATA",457.5,23,1)
HH1001011001001000000100110101101111100
"DATA",457.5,24,0)
A 2 E^A2E
"DATA",457.5,24,1)
HH1001000001001000000100000101101111100
"DATA",457.5,25,0)
A 2 E PPI=X^A2EX
"DATA",457.5,25,1)
HH1001000001001000000100010101101111100
"DATA",457.5,26,0)
A 2 N PPI=X^A2NX
"DATA",457.5,26,1)
HH0001000001001001100100010101101111100
"DATA",457.5,27,0)
A 2 N PPI=W^A2NW
"DATA",457.5,27,1)
HH0001000001001011100100011111101111100
"DATA",457.5,28,0)
A 2 N PPI=Y^A2NY
"DATA",457.5,28,1)
HH0000000001001001100100001111101111100
"DATA",457.5,29,0)
A 2 N^A2N
"DATA",457.5,29,1)
HH0001000001001001100100000101101111100
"DATA",457.5,30,0)
A 3 E PPI=E,F^A3EE
"DATA",457.5,30,1)
0H1001011001001000000100110000000000100
"DATA",457.5,31,0)
A 3 E^A3E
"DATA",457.5,31,1)
0H1000000001001000000000000000000000100
"DATA",457.5,32,0)
A 3 N^A3N
"DATA",457.5,32,1)
0H0000000001001000100000000000000000100
"DATA",457.5,36,0)
E 1 E^E1E
"DATA",457.5,36,1)
H00000000000000000000000000001101111100
"DATA",457.5,37,0)
E 2 E^E2E
"DATA",457.5,37,1)
HH0000000000000000000000000001101111100
"DATA",457.5,38,0)
E 3 E^E3E
"DATA",457.5,38,1)
0H0000000000000000000000000000000000100
"DATA",457.5,39,0)
G 1 N^G1N
"DATA",457.5,39,1)
H00001001001001001100100000001101011100
"DATA",457.5,40,0)
G 2 N^G2N
"DATA",457.5,40,1)
HH0001000001001001100100000001101011100
"DATA",457.5,41,0)
G 3 N TYP-APPT=8^G3N8
"DATA",457.5,41,1)
0H0000000001000100111000000000000000100
"DATA",457.5,42,0)
G 3 N^G3N
"DATA",457.5,42,1)
0H0000000001001000100000000000000000100
"DATA",457.5,43,0)
J 1 E^J1E
"DATA",457.5,43,1)
D00000000000000000000000000001101111100
"DATA",457.5,44,0)
K 1 E^K1E
"DATA",457.5,44,1)
H01001011001000000000100110101101111100
"DATA",457.5,45,0)
K 1 E NH=48^K1EB
"DATA",457.5,45,1)
H00001000001000000000100100101101111100
"DATA",457.5,46,0)
L 1 E LVG=5^L1E*
"DATA",457.5,46,1)
D00000000000000000000000000001111011100
"DATA",457.5,47,0)
L 1 E^L1E
"DATA",457.5,47,1)
D00000000000000000000000000001101111100
"DATA",457.5,48,0)
L 2 E PAY BASIS=0^L2E*
"DATA",457.5,48,1)
0D0000000000000000000000000000000000100
"DATA",457.5,49,0)
L 2 E^L2E
"DATA",457.5,49,1)
HH0000000000000000000000000001101111100
"DATA",457.5,50,0)
L 3 E^L3E
"DATA",457.5,50,1)
0H0000000000000000000000000000000000100
"DATA",457.5,51,0)
M 1 E^M1E
"DATA",457.5,51,1)
H01001011001000000000100110101101111100
"DATA",457.5,52,0)
M 1 E NH=48^M1EB
"DATA",457.5,52,1)
H00001000001000000000100100101101111100
"DATA",457.5,53,0)
M 1 E OCC=Trainee^M1ET
"DATA",457.5,53,1)
H00000000000000000000000000001101011100
"DATA",457.5,54,0)
M 2 E^M2E
"DATA",457.5,54,1)
HH1001011001000000000100110101101111100
"DATA",457.5,55,0)
M 2 E OCC=Trainee^M2ET
"DATA",457.5,55,1)
HH0000000000000000000000000001101011100
"DATA",457.5,56,0)
M 3 E^M3E
"DATA",457.5,56,1)
0H1001011001000000000100110000000000100
"DATA",457.5,57,0)
M 3 E OCC=Trainee^M3ET
"DATA",457.5,57,1)
0H0000000000000000000000000000000000100
"DATA",457.5,58,0)
N 1 E^N1E
"DATA",457.5,58,1)
H01001001001001000000100000101101111100
"DATA",457.5,59,0)
N 1 N^N1N
"DATA",457.5,59,1)
H00001001001001000100100000101101111100
"DATA",457.5,60,0)
N 1 N ASSGN=TR-Tn-An^N1NT
"DATA",457.5,60,1)
H00000000000000000000000000001101011100
"DATA",457.5,61,0)
N 2 N ASSGN=TR-Tn-An^N2NT
"DATA",457.5,61,1)
HH0000000000000000000000000001101011100
"DATA",457.5,62,0)
N 2 E^N2E
"DATA",457.5,62,1)
HH1001000001001000000100000101101111100
"DATA",457.5,63,0)
N 2 N^N2N
"DATA",457.5,63,1)
HH0001000001001000100100000101101111100
"DATA",457.5,64,0)
N 3 E PAY BASIS=$^N3E$
"DATA",457.5,64,1)
000000000000000000000000000000000000100
"DATA",457.5,65,0)
N 3 N ASSGN=TR-Tn-An^N3NT
"DATA",457.5,65,1)
0H0000000000000000000000000000000000100
"DATA",457.5,66,0)
N 3 E^N3E
"DATA",457.5,66,1)
0H1000000001001000000000000000000000100
"DATA",457.5,67,0)
N 3 N^N3N
"DATA",457.5,67,1)
0H0000000001001000100000000000000000100
"DATA",457.5,68,0)
P 1 E^P1E
"DATA",457.5,68,1)
D00000000000000000000000000001101111100
"DATA",457.5,69,0)
Q 1 E^Q1E
"DATA",457.5,69,1)
D00000000000000000000000000001101111100
"DATA",457.5,70,0)
Q 2 E^Q2E
"DATA",457.5,70,1)
HH0000000000000000000000000001101111100
"DATA",457.5,71,0)
Q 2 E PAY BASIS=0^Q2E0
"DATA",457.5,71,1)
0D0000000000000000000000000000000000100
"DATA",457.5,72,0)
Q 3 E^Q3E
"DATA",457.5,72,1)
0H0000000000000000000000000000000000100
"DATA",457.5,73,0)
R 1 E^R1E
"DATA",457.5,73,1)
H00000000000000000000000000001101011100
"DATA",457.5,74,0)
R 2 E^R2E
"DATA",457.5,74,1)
HH0000000000000000000000000001101011100
"DATA",457.5,75,0)
R 3 E^R3E
"DATA",457.5,75,1)
0H0000000000000000000000000000000000100
"DATA",457.5,76,0)
S 1 E^S1E
"DATA",457.5,76,1)
000000000000000000000000000000000000000
"DATA",457.5,77,0)
T 1 E^T1E
"DATA",457.5,77,1)
H00000000000000000000000000001101011100
"DATA",457.5,78,0)
T 2 E^T2E
"DATA",457.5,78,1)
HH0000000000000000000000000001101011100
"DATA",457.5,79,0)
T 3 E PAY BASIS=9^T3E9
"DATA",457.5,79,1)
0D0000000000000000000000000000000000100
"DATA",457.5,80,0)
T 3 E^T3E
"DATA",457.5,80,1)
0H0000000000000000000000000000000000100
"DATA",457.5,81,0)
U 1 E PAY BASIS=H13^U1E
"DATA",457.5,81,1)
H01001001001000000000100000101101111100
"DATA",457.5,82,0)
U 1 N PAY BASIS=ETX27^U1N
"DATA",457.5,82,1)
H00001101111110001111111000101101111100
"DATA",457.5,83,0)
U 1 N PAY BASIS=P^U1NP
"DATA",457.5,83,1)
H00000000000000000000000000001101111110
"DATA",457.5,85,0)
U 2 E PAY BASIS=H13^U2E
"DATA",457.5,85,1)
HH1001000001000000000100000101101111100
"DATA",457.5,87,0)
U 2 N PAY BASIS=P^U2NP
"DATA",457.5,87,1)
HH0000000000000000000000000001101111110
"DATA",457.5,88,0)
U 2 N PAY BASIS=ETX27^U2N
"DATA",457.5,88,1)
HH0001100001110001111111000101101111100
"DATA",457.5,89,0)
U 3 E PAY BASIS=H13^U3E
"DATA",457.5,89,1)
0H1000000001000000000000000000000000100
"DATA",457.5,90,0)
U 3 N PAY BASIS=P^U3NP
"DATA",457.5,90,1)
0H0000000000000000000000000000000000110
"DATA",457.5,91,0)
U 3 N PAY BASIS=ETX27^U3N
"DATA",457.5,91,1)
0H0001000001110000111000000000000000100
"DATA",457.5,92,0)
W 1 E^W1E
"DATA",457.5,92,1)
H00000000000000000000000000001101111100
"DATA",457.5,93,0)
X 1 E^X1E
"DATA",457.5,93,1)
H00000000000000000000000000001101111100
"DATA",457.5,94,0)
X 1 E NH=00^X1E0
"DATA",457.5,94,1)
D00000000000000000000000000001101111100
"DATA",457.5,95,0)
Y 1 E^Y1E
"DATA",457.5,95,1)
D00000000000000000000000000001101111100
"DATA",457.5,96,0)
A 1 E NH>80^A1E*
"DATA",457.5,96,1)
H00000000001001000000000000101101111101
"DATA",457.5,97,0)
A 1 E PPI=Y^A1EY
"DATA",457.5,97,1)
H01000000001001000000000001111101111100
"DATA",457.5,98,0)
A 1 E PPI=W^A1EW
"DATA",457.5,98,1)
H01001001001001010000100011111101111100
"DATA",457.5,99,0)
A 2 E PPI=Y^A2EY
"DATA",457.5,99,1)
HH1000000001001000000100001111101111100
"DATA",457.5,100,0)
A 2 E PPI=W^A2EW
"DATA",457.5,100,1)
HH1001000001001010000100011111101111100
"DATA",457.5,101,0)
M 2 E PAY BASIS=0^M2E0
"DATA",457.5,101,1)
0D0000000000000000000000000000000000100
"DATA",457.5,102,0)
N 2 E PAY BASIS=0^N2E0
"DATA",457.5,102,1)
0D0000000000000000000000000000000000100
"DATA",457.5,103,0)
N 1 E ASSGN=TR-Tn-An^N1ET
"DATA",457.5,103,1)
H00000000000000000000000000001101011100
"DATA",457.5,104,0)
N 2 E ASSGN=TR-Tn-An^N2ET
"DATA",457.5,104,1)
HH0000000000000000000000000001101011100
"DATA",457.5,105,0)
N 3 E ASSGN=TR-Tn-An^N3ET
"DATA",457.5,105,1)
0H0000000000000000000000000000000000100
"DATA",457.5,106,0)
N 3 N PAY BASIS=$^N3N$
"DATA",457.5,106,1)
000000000000000000000000000000000000100
"DATA",457.5,107,0)
M 3 E PB=2^M3E2
"DATA",457.5,107,1)
0H0000000000000000000000000000000000100
"DATA",457.5,108,0)
L 3 E RESIDENT^L3E*
"DATA",457.5,108,1)
0D0000000000000000000000000000000000100
"DATA",457.5,109,0)
F 3 E^F3E
"DATA",457.5,109,1)
000000000000000000000000000000000000100
"DATA",457.5,110,0)
A Q E PPI=O^A1EO
"DATA",457.5,110,1)
H01000000001000000000000000101101111101
"DATA",457.5,111,0)
A 1 E PPI=R^A1ER
"DATA",457.5,111,1)
HH1000000001000000000000000101101111101
"DATA",457.5,112,0)
A 1 N PPI=R^A1NR
"DATA",457.5,112,1)
HH1000000001000001000000000101101111101
"DATA",457.5,113,0)
A 1 E PPI=C^A1EC
"DATA",457.5,113,1)
HH1000000001000000000000000101101111101
"DATA",457.5,114,0)
A 1 N PPI=C^A1NC
"DATA",457.5,114,1)
HH1000000001000001000000000101101111101
"DATA",457.5,115,0)
A 1 E PPI=S^A1ES
"DATA",457.5,115,1)
H01001011001001000000100000101101111100
"DATA",457.5,116,0)
A 1 E PPI=V^A1EV
"DATA",457.5,116,1)
H01001011001001010000100011111101111100
"DATA",457.5,117,0)
A 1 E PPI=T^A1ET
"DATA",457.5,117,1)
H01001011001001000000100010101101111100
"DATA",457.5,118,0)
A 1 E PPI=U^A1EU
"DATA",457.5,118,1)
H01000010001001000000000001111101111100
"DATA",457.5,119,0)
A 1 N PPI=S^A1NS
"DATA",457.5,119,1)
H00001011001001001100100000101101111100
"DATA",457.5,120,0)
A 1 N PPI=V^A1NV
"DATA",457.5,120,1)
H00001011001001011100100011111101111100
"DATA",457.5,121,0)
A 1 N PPI=T^A1NT
"DATA",457.5,121,1)
H00001011001001001100100010101101111100
"DATA",457.5,122,0)
A 1 N PPI=U^A1NU
"DATA",457.5,122,1)
H00000010001001001100000001111101111100
"DATA",457.5,123,0)
A 2 E PPI=S^A2ES
"DATA",457.5,123,1)
HH1001010001001000000100000101101111100
"DATA",457.5,124,0)
A 2 E PPI=V^A2EV
"DATA",457.5,124,1)
HH1001010001001010000100011111101111100
"DATA",457.5,125,0)
A 2 E PPI=T^A2ET
"DATA",457.5,125,1)
HH1001010001001000000100010101101111100
"DATA",457.5,126,0)
A 2 E PPI=U^A2EU
"DATA",457.5,126,1)
HH1000010001001000000100001111101111100
"DATA",457.5,127,0)
A 2 N PPI=S^A2NS
"DATA",457.5,127,1)
HH0001010001001001100100000101101111100
"DATA",457.5,128,0)
A 2 N PPI=V^A2NV
"DATA",457.5,128,1)
HH0001010001001011100100011111101111100
"DATA",457.5,129,0)
A 2 N PPI=T^A2NT
"DATA",457.5,129,1)
HH0001010001001001100100010101101111100
"DATA",457.5,130,0)
A 2 N PPI=U^A2NU
"DATA",457.5,130,1)
HH0000010001001001100100001111101111100
"DATA",457.5,131,0)
N 1 E PPI=S^N1ES
"DATA",457.5,131,1)
H01001011001001000000100000101101111100
"DATA",457.5,132,0)
N 1 N PPI=S^N1NS
"DATA",457.5,132,1)
H00001011001001000100100000101101111100
"DATA",457.5,133,0)
N 2 E PPI=S^N2ES
"DATA",457.5,133,1)
HH1001010001001000000100000101101111100
"DATA",457.5,134,0)
N 2 N PPI=S^N2NS
"DATA",457.5,134,1)
HH1001010001001000000100000101101111100
"DATA",457.5,135,0)
N 3 E PPI=S^N3ES
"DATA",457.5,135,1)
0H1000010001001000000000000000000000100
"DATA",457.5,136,0)
N 3 N PPI=S^N3NS
"DATA",457.5,136,1)
0H0000010001001000100000000000000000100
"DATA",457.5,137,0)
A 3 E PPI=S^A3ES
"DATA",457.5,137,1)
0H1000010001001000000000000000000000100
"DATA",457.5,138,0)
A 3 N PPI=S^A3NS
"DATA",457.5,138,1)
0H0000010001001000100000000000000000100
"FIA",457.5)
PAY ENTITLEMENT
"FIA",457.5,0)
^PRST(457.5,
"FIA",457.5,0,0)
457.5
"FIA",457.5,0,1)
n^n^f^^n^^y^o^n
"FIA",457.5,0,10)

"FIA",457.5,0,11)

"FIA",457.5,0,"RLRO")

"FIA",457.5,0,"VR")
4.0^PRS
"FIA",457.5,457.5)
0
"MBREQ")
0
"PKG",408,-1)
1^1
"PKG",408,0)
PAID^PRS^PAID
"PKG",408,20,0)
^9.402P^^
"PKG",408,22,0)
^9.49I^1^1
"PKG",408,22,1,0)
4.0^2950912^2960130
"PKG",408,22,1,"PAH",1,0)
90^3040122^100831
"PKG",408,22,1,"PAH",1,1,0)
^^1^1^3040122
"PKG",408,22,1,"PAH",1,1,1,0)
See the patch description on Forum for complete description of this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","PRS8AC")
0^3^B42984766
"RTN","PRS8AC",1,0)
PRS8AC ;HISC/MRL-DECOMPOSITION, ACTIVITY STRING ;01/22/04
"RTN","PRS8AC",2,0)
 ;;4.0;PAID;**40,45,54,52,69,75,90**;Sep 21, 1995
"RTN","PRS8AC",3,0)
 ;
"RTN","PRS8AC",4,0)
 ;The primary purpose of this routine is to create the activity
"RTN","PRS8AC",5,0)
 ;string [the "W" node] for each day of activity.  While creating
"RTN","PRS8AC",6,0)
 ;this string certain counts will also be tallied.  These include
"RTN","PRS8AC",7,0)
 ;Standby, On-Call and the various absence categories.  Actual
"RTN","PRS8AC",8,0)
 ;Call Back hrs are also counted in this routine for the purpose
"RTN","PRS8AC",9,0)
 ;of reducing the OC later on in the process.
"RTN","PRS8AC",10,0)
 ;
"RTN","PRS8AC",11,0)
 ;Called by Routines:  PRS8EX, PRS8ST.
"RTN","PRS8AC",12,0)
 ;
"RTN","PRS8AC",13,0)
 Q:VAR=""
"RTN","PRS8AC",14,0)
 I $S($P(V,"^",1)="":1,$P(V,"^",2)="":1,1:0) Q  ;no times
"RTN","PRS8AC",15,0)
 S Q=0
"RTN","PRS8AC",16,0)
 I DY>0,DY<15 D  G END:Q
"RTN","PRS8AC",17,0)
 .I DAY(DY,"OFF"),"LSWARUHFGD"[VAR S Q=1 ;exc invalid day off VAR
"RTN","PRS8AC",18,0)
 K OC,FLAG
"RTN","PRS8AC",19,0)
 ;
"RTN","PRS8AC",20,0)
 S DAYZ=DAY(DY,"W")_$G(DAY(DY,"N")),MTM=0
"RTN","PRS8AC",21,0)
 S DAYH=$G(DAY(DY,"HOL"))_$G(DAY(DY+1,"HOL")) ;holiday node
"RTN","PRS8AC",22,0)
 ;
"RTN","PRS8AC",23,0)
 ;P 45 FIREFIGHTERS F NODE TO TRACK ADDITIONAL FF HRS
"RTN","PRS8AC",24,0)
 S DAYF=$G(DAY(DY,"F"))
"RTN","PRS8AC",25,0)
 ;
"RTN","PRS8AC",26,0)
 F T=+V:1:+$P(V,"^",2) D
"RTN","PRS8AC",27,0)
 .I +VAR,$E(DAYH,T),$E(DAYZ,T)?1A Q  ;no override holiday
"RTN","PRS8AC",28,0)
 .I VAR="A"&(JURY=1) S VAR="J"
"RTN","PRS8AC",29,0)
 .S VAR1=VAR Q:VAR1=""  S DAYZ(1)=$E(DAYZ,T)
"RTN","PRS8AC",30,0)
 .I "HhJLSARWMNUnVXYTFGD"[VAR1,$E(DAYZ,T)="m" Q
"RTN","PRS8AC",31,0)
 .I T=+V,"12345E"[VAR1 S DAY(DY,"DWK")=1 ;count days worked
"RTN","PRS8AC",32,0)
 .I T=+V,"Vh"[VAR1,TYP["I" S DAY(DY,"DWK")=1 ;count days worked for cop
"RTN","PRS8AC",33,0)
 .I "JLSWNnARUXYFGD"[VAR1,T'>96,'$E(DAYZ,T) Q  ;invalid outside tour
"RTN","PRS8AC",34,0)
 .I "EOPQT4"[VAR1,T'>96,$E(DAYZ,T) Q  ;can't earn ct/use ot during work
"RTN","PRS8AC",35,0)
 .I "OE"[VAR1,"BC"[DAYZ(1),$L(DAYZ(1)) D  ; Change OT or CT to CB/SB OT
"RTN","PRS8AC",36,0)
 ..S VAR1=$C($A($E(DAYZ,T))+32)
"RTN","PRS8AC",37,0)
 ..I $E(DAYZ,T)="C",VAR="E" S VAR1="t" ; Comp time on on-call = "t"
"RTN","PRS8AC",38,0)
 .I "BC"[VAR1,DAYZ(1)="O",$L(DAYZ(1)) D  ; Change CB/SB to CB/SB OT
"RTN","PRS8AC",39,0)
 ..S VAR1=$C($A($E(VAR1))+32)
"RTN","PRS8AC",40,0)
 .I "Hh"[VAR1 D  Q:VAR1="H"
"RTN","PRS8AC",41,0)
 ..S DAYH=$E(DAYH,0,T-1)_$S(VAR1="H":1,$E(DAYZ,T)&($E(DAYZ,T)'=4)!(TYP["I")!(TYP["P"&(TYP["N"!(TYP["H")))!(VAR1="h"):2,1:0)_$E(DAYH,T+1,999) ;holiday node
"RTN","PRS8AC",42,0)
 ..I VAR1="h" S VAR1="O" ;convert HW to OT
"RTN","PRS8AC",43,0)
 ..I VAR="h",$E(DAYZ,T)=5 S FLAG=5
"RTN","PRS8AC",44,0)
 .I $E(DAYZ,T)=5,"ALSRUFGD"[VAR1 S VAR1=$E(DAYZ,T)
"RTN","PRS8AC",45,0)
 .I $E(DAYZ,T)="-","BbCctes"[VAR1 Q  ;unavail for oc/sb or sch ot/ct
"RTN","PRS8AC",46,0)
 .S DAYZ=$E(DAYZ,0,T-1)_VAR1_$E(DAYZ,T+1,999) I $E($G(DAY(DY-1,"N")),T)'="",VAR1'=$E($G(DAY(DY-1,"N")),T) S DAY(DY-1,"N")=$E(DAY(DY-1,"N"),0,T-1)_VAR1_$E(DAY(DY-1,"N"),T+1,999) ;save VAR
"RTN","PRS8AC",47,0)
 .I VAR1="J" S Y=5 D SET ;set authorized absence for jury duty
"RTN","PRS8AC",48,0)
 .I VAR1="M" S Y=5 D SET ; authorized absence for ML
"RTN","PRS8AC",49,0)
 .;ot on non-premium T&L
"RTN","PRS8AC",50,0)
 .I ("Eocb"[VAR1!(VAR1="O"&'$E(DAYH,T)))&("^^10^11^12^13^15^16^"[("^"_$P(V,"^",4)_"^"))!(VAR1=5&("ALSRUFGD"[VAR))!(VAR1=4&(TYP["P"!(TYP["I"&(TYP["N"!(TYP["H"!($$HYBRID^PRSAENT($G(DFN)))))))&("^7^9^11^12^14^"[("^"_$P(V,"^",4)_"^"))) D
"RTN","PRS8AC",51,0)
 ..Q:$E(DAY(DY,"P"),T)=5&("ALSRUFGD"'[VAR)
"RTN","PRS8AC",52,0)
 ..I $D(FLAG) S FLAG=VAR1,VAR1=5
"RTN","PRS8AC",53,0)
 ..N CODE D
"RTN","PRS8AC",54,0)
 ...I "^7^8^12^"[("^"_$P(V,"^",4)_"^")&(TYP["N"!(TYP["H")!($$HYBRID^PRSAENT($G(DFN)))) S CODE="N" Q
"RTN","PRS8AC",55,0)
 ...I "^7^8^12^"[("^"_$P(V,"^",4)_"^")&(PMP'="")&("^S^T^U^V^"[(U_PMP_U)) S CODE="N" Q
"RTN","PRS8AC",56,0)
 ...I $P(V,"^",4)=11,($$HYBRID^PRSAENT($G(DFN))) S CODE="N" Q
"RTN","PRS8AC",57,0)
 ...I $P(V,"^",4)=11&(PMP'="")&("^S^T^U^V^"[(U_PMP_U)) S CODE="N" Q
"RTN","PRS8AC",58,0)
 ...I "^7^8^9^11^"[("^"_$P(V,"^",4)_"^")&(TYP'["N")&(TYP'["H")&('$$HYBRID^PRSAENT($G(DFN))) S CODE="n" Q
"RTN","PRS8AC",59,0)
 ...I "^7^8^9^11^"[("^"_$P(V,"^",4)_"^")&("^S^T^U^V^"'[(U_PMP_U)) S CODE="n" Q
"RTN","PRS8AC",60,0)
 ...I VAR1=5 S CODE=VAR Q
"RTN","PRS8AC",61,0)
 ...S CODE=1
"RTN","PRS8AC",62,0)
 ..S DAY(DY,"P")=$E(DAY(DY,"P"),0,T-1)_CODE_$E(DAY(DY,"P"),T+1,999)
"RTN","PRS8AC",63,0)
 .I "ALSRUFGD"[VAR,VAR1=5 S VAR1=VAR
"RTN","PRS8AC",64,0)
 .I $D(FLAG) S VAR1=FLAG K FLAG
"RTN","PRS8AC",65,0)
 .;
"RTN","PRS8AC",66,0)
FOPTHR .; part time hrs (PT/PH 8b codes) for CODE O firefighters
"RTN","PRS8AC",67,0)
 .I +VAR1,"Ff"[TYP,PMP="O",(NH=448!(NH>320&(NH(1)'=NH(2)))) S Y=32 D SET
"RTN","PRS8AC",68,0)
 .;
"RTN","PRS8AC",69,0)
FRCPTHR .; part time hrs (PT/PH 8b codes) for code R & C firefighters
"RTN","PRS8AC",70,0)
 .; don't include UNSCHEDULED REGULAR (var1=4)
"RTN","PRS8AC",71,0)
 .I +VAR1,VAR1'=4,"Ff"[TYP,"RC"[PMP S Y=32 D SET
"RTN","PRS8AC",72,0)
 .;
"RTN","PRS8AC",73,0)
 .;patch 45 & 54
"RTN","PRS8AC",74,0)
 .; Set non pay hrs in the basic tour for firefighters with premium
"RTN","PRS8AC",75,0)
 .;pay indicator of C.
"RTN","PRS8AC",76,0)
 .I "nW"[VAR1,"Ff"[TYP,"C"=PMP D
"RTN","PRS8AC",77,0)
 ..;
"RTN","PRS8AC",78,0)
 ..;  Y designates location in WK array where NT/NH will be stored.
"RTN","PRS8AC",79,0)
 ..;  F node was set to 1 for periods of addtl ff hrs during 1st pass 
"RTN","PRS8AC",80,0)
 ..;  thru scheduled ToD.  Count NT/NH if this is not addtl ff hrs.
"RTN","PRS8AC",81,0)
 ..;
"RTN","PRS8AC",82,0)
 ..I '$E(DAY(DY,"F"),T) S Y=47 D SET
"RTN","PRS8AC",83,0)
 .S S="LSWnAREUP HYXOVQTFGD" I S[VAR1&(DY>0&(DY<15)!(DY=0&(T>96))) D  ;save in WK array
"RTN","PRS8AC",84,0)
 ..S S(1)=$F(S,VAR1)-1
"RTN","PRS8AC",85,0)
 ..S S=$P("1^2^3^4^5^6^0^8^0^9^24^42^43^0^33^0^19^44^45^46","^",S(1)) ;WK location
"RTN","PRS8AC",86,0)
 ..Q:S=0
"RTN","PRS8AC",87,0)
 ..; Patch *40 removed A (authorized absence) from leave counted in LU.
"RTN","PRS8AC",88,0)
 ..; LU is only used to determine if night differential granted for
"RTN","PRS8AC",89,0)
 ..; leave should be backed out.
"RTN","PRS8AC",90,0)
 ..I TYP'["D","LSRUFGD"[VAR1 S LU=LU+1 ;increment leave counter
"RTN","PRS8AC",91,0)
 ..I TYP'["D","LSRUFGD"[VAR1,(DY=0!(DY=14)&(T>96)),LU>0 S LU=LU-1
"RTN","PRS8AC",92,0)
 ..S Y=S D SET S:TYP["D" Q=1
"RTN","PRS8AC",93,0)
 ..K S,VAR1
"RTN","PRS8AC",94,0)
 ;
"RTN","PRS8AC",95,0)
 ;
"RTN","PRS8AC",96,0)
 S DAY(DY,"W")=$E(DAYZ,1,96) ;todays activity
"RTN","PRS8AC",97,0)
 S DAY(DY,"N")=$E(DAYZ,97,999) ;tomorrows activity from today/if any
"RTN","PRS8AC",98,0)
 S:$E(DAY(DY,"P"),97,999)'="" DAY(DY,"P1")=$E(DAY(DY,"P"),97,999) ;non-prem ot for next day
"RTN","PRS8AC",99,0)
 S DAY(DY,"P")=$E(DAY(DY,"P"),1,96) ;non-prem ot for today
"RTN","PRS8AC",100,0)
 I DAY(DY,"N")?1"0"."0" S DAY(DY,"N")=""
"RTN","PRS8AC",101,0)
 S DAY(DY,"HOL")=$E(DAYH,1,96)
"RTN","PRS8AC",102,0)
 ;
"RTN","PRS8AC",103,0)
 ;P 45 FIREFIGHTER ADDITIONAL FIREFIGHTER HRS NODE FOR THIS DAY
"RTN","PRS8AC",104,0)
 I $G(PRS8AFFH) D
"RTN","PRS8AC",105,0)
 .  N PRSFFHR,PRSF1,PRSF2,PRSF3,SEG1,SEG2
"RTN","PRS8AC",106,0)
 .;
"RTN","PRS8AC",107,0)
 .;GET THE POSITIONAL START AND STOPS FOR THIS SEGMENT
"RTN","PRS8AC",108,0)
 .  S SEG1=$P(V,U,1),SEG2=$P(V,U,2)
"RTN","PRS8AC",109,0)
 .;EXISTING PORTION OF F NODE UP TO CURRENT SEGMENT
"RTN","PRS8AC",110,0)
 .  S PRSF1=$E(DAYF,1,SEG1-1)
"RTN","PRS8AC",111,0)
 .;CURRENT SEGMENT UP TO END OF DAY
"RTN","PRS8AC",112,0)
 .  S PRSF2=$E(DAYZ,SEG1,SEG2)
"RTN","PRS8AC",113,0)
 .;CURRENT F NODE PAST CURRENT SEGMENT TO END OF THE TOUR WHICH
"RTN","PRS8AC",114,0)
 .;MAY FALL IN TODAY OR NEXT DAY.
"RTN","PRS8AC",115,0)
 .S PRSF3=$E(DAYF,SEG2+1,999)
"RTN","PRS8AC",116,0)
 .;
"RTN","PRS8AC",117,0)
 .;UPDATE THE DAY ARRAY AND THE TMP GLOBAL WITH WORK STRING.
"RTN","PRS8AC",118,0)
 .;EACH CHAR THAT IS SET TO 1 REPRESENTS A 15 MIN SEGMENT THAT
"RTN","PRS8AC",119,0)
 .;THE FIREFIGHTER WAS SCHEDULED FOR ADDITIONAL FF HRS.
"RTN","PRS8AC",120,0)
 .;FOR TOURS CROSSING MIDNIGHT THIS STRING WILL BE LONGER THAN 96
"RTN","PRS8AC",121,0)
 .;CHARACTERS. CHARACTERS IN POSITIONS PAST 96 REPRESENT TIMES PAST
"RTN","PRS8AC",122,0)
 .;MIDNIGHT OF THE CURRENT DAY (TOMORROW).
"RTN","PRS8AC",123,0)
 .S PRSFFHR=PRSF1_PRSF2_PRSF3
"RTN","PRS8AC",124,0)
 .S DAY(DY,"F")=PRSFFHR
"RTN","PRS8AC",125,0)
 .S ^TMP($J,"PRS8",DY,"F")=PRSFFHR
"RTN","PRS8AC",126,0)
 ;
"RTN","PRS8AC",127,0)
 I DY<15 S X=$E(DAYH,97,999) I X'?."0" S ^TMP($J,"PRS8",DY+1,"HOL")=X_$E($G(^TMP($J,"PRS8",DY+1,"HOL")),$L(X)+1,999),DAY(DY+1,"HOL")=X
"RTN","PRS8AC",128,0)
 ;
"RTN","PRS8AC",129,0)
MOVE ; --- entry point for just moving previous days hrs to today
"RTN","PRS8AC",130,0)
 I $D(DAY(DY-1,"N")),$L(DAY(DY-1,"N")) D
"RTN","PRS8AC",131,0)
 .S X=DAY(DY-1,"N")_$E(DAY(DY,"W"),$L(DAY(DY-1,"N"))+1,96)
"RTN","PRS8AC",132,0)
 .S DAY(DY,"W")=X
"RTN","PRS8AC",133,0)
 I $D(DAY(DY-1,"P1")),$L(DAY(DY-1,"P1")) D
"RTN","PRS8AC",134,0)
 .S X=DAY(DY-1,"P1")_$E(DAY(DY,"P"),$L(DAY(DY-1,"P1"))+1,96)
"RTN","PRS8AC",135,0)
 .S DAY(DY,"P")=X
"RTN","PRS8AC",136,0)
 ;
"RTN","PRS8AC",137,0)
END ; --- all done here
"RTN","PRS8AC",138,0)
 K CNT,OC,Q,S,SB,SL,SLP,T,VAR1,X,Y Q
"RTN","PRS8AC",139,0)
 ;
"RTN","PRS8AC",140,0)
SET ; --- set WK variable
"RTN","PRS8AC",141,0)
 I (DY=0&(T<97))!(DY=14&(T>96))!(DY>14) Q
"RTN","PRS8AC",142,0)
 S ZZ=WK,WK=$S(DY>7:2,1:1)
"RTN","PRS8AC",143,0)
 I TYP'["D",DY=7,T>96 S WK=2
"RTN","PRS8AC",144,0)
 S $P(WK(WK),"^",Y)=$P(WK(WK),"^",Y)+1
"RTN","PRS8AC",145,0)
 ;
"RTN","PRS8AC",146,0)
 ; The passing of Public Law 106-554 allows taking ML in hours.
"RTN","PRS8AC",147,0)
 ; ML will now be recorded in 15 minute segments in the WK(3) array
"RTN","PRS8AC",148,0)
 ; for employees entitled to take ML in hours.  PRS*4.0*69
"RTN","PRS8AC",149,0)
 ;
"RTN","PRS8AC",150,0)
 I VAR1="M",$$MLINHRS^PRSAENT(DFN) D
"RTN","PRS8AC",151,0)
 . S WK=3,Y=11
"RTN","PRS8AC",152,0)
 . S $P(WK(WK),"^",Y)=$P(WK(WK),"^",Y)+1
"RTN","PRS8AC",153,0)
 ;
"RTN","PRS8AC",154,0)
 ; IF a part-time employee and they have either LWOP or Non-Pay
"RTN","PRS8AC",155,0)
 ; THEN decrement total hours for the week and the pay period.
"RTN","PRS8AC",156,0)
 ; PRS*4.0*52.
"RTN","PRS8AC",157,0)
 ;
"RTN","PRS8AC",158,0)
 I "Wn"[VAR1,TYP["P" S TH=TH-1,TH(WK)=TH(WK)-1
"RTN","PRS8AC",159,0)
 S WK=ZZ Q
"RTN","PRS8DR")
0^2^B10594635
"RTN","PRS8DR",1,0)
PRS8DR ;HISC/MRL,JAH/WCIOFO-DECOMPOSITION, DRIVER ;01/13/2004
"RTN","PRS8DR",2,0)
 ;;4.0;PAID;**22,29,56,90**;Sep 21, 1995
"RTN","PRS8DR",3,0)
 ;
"RTN","PRS8DR",4,0)
 ;This routine determines whether or not the parameters necessary
"RTN","PRS8DR",5,0)
 ;to decompose time are in existance.  The majority of variables
"RTN","PRS8DR",6,0)
 ;involving processing an individual employee are defined in this
"RTN","PRS8DR",7,0)
 ;routine.
"RTN","PRS8DR",8,0)
 ;
"RTN","PRS8DR",9,0)
 ;The following lines establish variables necessary to process a
"RTN","PRS8DR",10,0)
 ;specific employees time for the specified pay period.
"RTN","PRS8DR",11,0)
 ;
"RTN","PRS8DR",12,0)
 ;Called by Routines:  PRS8, PRS8DR (tag 1)
"RTN","PRS8DR",13,0)
 ;
"RTN","PRS8DR",14,0)
 ;Patch PRS*4*56 added logic to ALWAYS clean out auto-posting
"RTN","PRS8DR",15,0)
 ;of leave for physicians regardless of which menu was chosen.
"RTN","PRS8DR",16,0)
 ;
"RTN","PRS8DR",17,0)
 D AUTOPINI^PRS8(+PY,+DFN) ;
"RTN","PRS8DR",18,0)
 ;
"RTN","PRS8DR",19,0)
 D ONE^PRS8CV ;clean up variables
"RTN","PRS8DR",20,0)
 S SAVE=+$G(SAVE),SEE=+$G(SEE)
"RTN","PRS8DR",21,0)
 S TMTD=$G(^PRST(458,+PY,"E",DFN,0)),TMTD=$S($P(TMTD,"^",2)="X":1,1:0)
"RTN","PRS8DR",22,0)
 K WK F I=1,2,3 S WK(I)="" ;weekly totals (wk3=misc data)
"RTN","PRS8DR",23,0)
 D ^PRSAENT S VAL="" ;get entitlement (ENT)
"RTN","PRS8DR",24,0)
 I PP="S" G END ;manilla citizen/don't decompose/no stub
"RTN","PRS8DR",25,0)
 I $G(PB)["$" G STUB^PRS8CR ;don't decompose stipend/create stub
"RTN","PRS8DR",26,0)
 S DOUB=0 I $E(ENT,26),$E(ENT,29) S DOUB=1 ;count standby & oncall same
"RTN","PRS8DR",27,0)
 S FLX="" S FLX=$P($G(^PRST(458,+PY,"E",DFN,0)),"^",6)
"RTN","PRS8DR",28,0)
 S (SST,TAL)="",X=$P(C0,"^",8) I X'="" D  ;T&L Unit
"RTN","PRS8DR",29,0)
 .S X=$O(^PRST(455.5,"B",X,0)) ;get ien
"RTN","PRS8DR",30,0)
 .S TAL=$G(^PRST(455.5,+X,0)),X=$P(TAL,"^",8) ;get sleep start time
"RTN","PRS8DR",31,0)
 .I $L(X) S (NDAY,LAST,Y,Y1)=0 D 15^PRS8SU
"RTN","PRS8DR",32,0)
 .S SST=$S(+X:X,1:93) K X,Y1,LAST,X ;sleep start time
"RTN","PRS8DR",33,0)
 .K SL,SB,ST ;make sure standby variable don't exist
"RTN","PRS8DR",34,0)
 S (CAMISC,CYA,CYA2806,WPCYA,LU)=0 ; << ADDED >> calendar year adjust./leave used in pp
"RTN","PRS8DR",35,0)
 S (NH(1),NH(2))=0 ;normal hrs/pp total/week(1)/week(2)
"RTN","PRS8DR",36,0)
 S (TH,TH(1),TH(2))=0 ;total hours
"RTN","PRS8DR",37,0)
 N CT S (CT(1),CT(2))=0 ; counter for compensatory time
"RTN","PRS8DR",38,0)
 K DWK S DWK=0 ;count of days worked - for intermittents
"RTN","PRS8DR",39,0)
 S NH=NH/.25 ;turn Norm hrs into 15min increments
"RTN","PRS8DR",40,0)
 K TOUR S (TOUR(1),TOUR(2))="" ;tour code for wg/week(1)/week(2)
"RTN","PRS8DR",41,0)
 K TYP S TYP="" I $E(ENT)="D"!($E(ENT,1,2)="0D") S TYP=TYP_"D" ;daily pay basis
"RTN","PRS8DR",42,0)
 I PP?1N.E!(PP="U") S TYP=TYP_"W" ;wagegrade
"RTN","PRS8DR",43,0)
 I PP'="","KM"[PP S TYP=TYP_"N" ;nurse
"RTN","PRS8DR",44,0)
 I +$E(AC,2)=1,NH=192 S TYP=TYP_"B" ;baylor plan
"RTN","PRS8DR",45,0)
 I $G(PMP)'="","EF"[PMP S TYP=TYP_"H" ;Nurse Hybrid
"RTN","PRS8DR",46,0)
 I $E($G(AC),2)=3 S TYP=TYP_"I" ;intermittent
"RTN","PRS8DR",47,0)
 I NH>320 S TYP=TYP_"F" I NH'>448 S TYP=TYP_"f" ;firefighter
"RTN","PRS8DR",48,0)
 I NH,NH'>319 S TYP=TYP_"P" ;part-time
"RTN","PRS8DR",49,0)
 I PP="L",$E(AC,2)=2 S TYP=TYP_"d" ;doctor
"RTN","PRS8DR",50,0)
 I PP="L",$E(AC,2)=1 S TYP=TYP_"dR" ;doctor/resident or intern
"RTN","PRS8DR",51,0)
 S (PTH,PTH(1),PTH(2))=0 ;part-time hours
"RTN","PRS8DR",52,0)
 K WKL S (WKL(1),WKL(2))=0 ;count leave used in week during ND hours
"RTN","PRS8DR",53,0)
 K MEAL S $P(MEAL,"1^",14)="",MEAL=MEAL_1 ;mealtime
"RTN","PRS8DR",54,0)
 S (MILV,WCMP)=0 ;ML and PC indicators
"RTN","PRS8DR",55,0)
 S (CBCK(1),CBCK(2))=0 ;call back hrs by week counter
"RTN","PRS8DR",56,0)
 I TYP="" S TYP="*"
"RTN","PRS8DR",57,0)
 K I,PB,PP,X,X1,X2
"RTN","PRS8DR",58,0)
 D ^PRS8SU ;set up employee variables and commence decomposing
"RTN","PRS8DR",59,0)
 D ^PRS8CR
"RTN","PRS8DR",60,0)
 I SEE D ^PRS8VW
"RTN","PRS8DR",61,0)
 ;
"RTN","PRS8DR",62,0)
END ; --- This is where we end this process
"RTN","PRS8DR",63,0)
 G ONE^PRS8CV ;clean up
"RTN","PRS8DR",64,0)
 Q
"RTN","PRS8DR",65,0)
 ;
"RTN","PRS8DR",66,0)
1 ; --- enter here to print single entry and close device
"RTN","PRS8DR",67,0)
 D ^PRS8DR,^%ZISC Q
"RTN","PRS8WE")
0^4^B42280047
"RTN","PRS8WE",1,0)
PRS8WE ;HISC/MRL,WCIOFO/SAB-DECOMPOSITION, WEEKEND PREMIUM ;01/21/04
"RTN","PRS8WE",2,0)
 ;;4.0;PAID;**42,65,74,75,90**;Sep 21, 1995
"RTN","PRS8WE",3,0)
 ;
"RTN","PRS8WE",4,0)
 ;This routine is used to determine the payment of Saturday and
"RTN","PRS8WE",5,0)
 ;Sunday Premium pays to entitled employees.
"RTN","PRS8WE",6,0)
 ;
"RTN","PRS8WE",7,0)
 ;Called by Routine PRS8ST
"RTN","PRS8WE",8,0)
 ;
"RTN","PRS8WE",9,0)
 N DAY,HYBRID,SAT2DT,SATNOSUN
"RTN","PRS8WE",10,0)
 S HYBRID=$S(+DFN'="":$$HYBRID^PRSAENT(DFN),1:0)
"RTN","PRS8WE",11,0)
 ;
"RTN","PRS8WE",12,0)
 ; The variable SATNOSUN has been added for employees who are now
"RTN","PRS8WE",13,0)
 ; eligible to receive Saturday Premium but not Sunday Premium under
"RTN","PRS8WE",14,0)
 ; Public Law 108-170.
"RTN","PRS8WE",15,0)
 S SATNOSUN=$S($E(ENT,8,9)="10":1,1:0)
"RTN","PRS8WE",16,0)
 ;
"RTN","PRS8WE",17,0)
 ; Compute Sunday Premium Pay.  Check SATNOSUN employees
"RTN","PRS8WE",18,0)
 I $E(ENT,9)!(TYP["B")!(HYBRID)!(SATNOSUN) F DAY=1,8,15 D WPD
"RTN","PRS8WE",19,0)
 ;
"RTN","PRS8WE",20,0)
 ; Compute Saturday Premium Pay
"RTN","PRS8WE",21,0)
 I $E(ENT,8)!(TYP["B")!(HYBRID) F DAY=7,14 D WPD
"RTN","PRS8WE",22,0)
 ;
"RTN","PRS8WE",23,0)
 Q
"RTN","PRS8WE",24,0)
 ;
"RTN","PRS8WE",25,0)
WPD ; Weekend Premium for Day
"RTN","PRS8WE",26,0)
 ; input
"RTN","PRS8WE",27,0)
 ;   DAY - day in pay period (1,7,8,14, or 15)
"RTN","PRS8WE",28,0)
 ;   SAT2DT(day) - if defined for day, it equals the time segment (1-96)
"RTN","PRS8WE",29,0)
 ;                 just before the start of a 2-day tour that begins on
"RTN","PRS8WE",30,0)
 ;                 a Saturday and has already received Sunday premium.
"RTN","PRS8WE",31,0)
 ;                 Defined during computation of Sunday premiums and
"RTN","PRS8WE",32,0)
 ;                 used during computation of Saturday premiums to
"RTN","PRS8WE",33,0)
 ;                 prevent payment of both premiums for same period.
"RTN","PRS8WE",34,0)
 ;   TYP, ENT, etc...
"RTN","PRS8WE",35,0)
 ; output
"RTN","PRS8WE",36,0)
 ;   WK()
"RTN","PRS8WE",37,0)
 ;
"RTN","PRS8WE",38,0)
 Q:DAY=15&(SATNOSUN)  ; Prem Pay on day 15 will be counted next pay period
"RTN","PRS8WE",39,0)
 N AV,D,END,H,LASTSAT,M,P,TP,TV
"RTN","PRS8WE",40,0)
 ;
"RTN","PRS8WE",41,0)
 ; determine type of weekend premium.  Updated for Public Law 108-170
"RTN","PRS8WE",42,0)
 S TP=$S("^7^14^"[(U_DAY_U):"SAT","^1^8^15^"[(U_DAY_U)&(SATNOSUN):"SAT","^1^8^15^"[(U_DAY_U):"SUN",1:"")
"RTN","PRS8WE",43,0)
 Q:TP=""  ; invalid day (must be Sat. or Sun.)
"RTN","PRS8WE",44,0)
 ;
"RTN","PRS8WE",45,0)
 ; determine types of time in a 'tour'
"RTN","PRS8WE",46,0)
 S TV=$$TV
"RTN","PRS8WE",47,0)
 ;
"RTN","PRS8WE",48,0)
 ; determine types of time that might be eligible for premium
"RTN","PRS8WE",49,0)
 S AV=$$AV
"RTN","PRS8WE",50,0)
 ;
"RTN","PRS8WE",51,0)
 ; load info for day
"RTN","PRS8WE",52,0)
 S D(DAY)=$G(^TMP($J,"PRS8",DAY,"W"))
"RTN","PRS8WE",53,0)
 Q:D(DAY)?1"0"."0"  ; no activity on day
"RTN","PRS8WE",54,0)
 S P(DAY)=$G(^TMP($J,"PRS8",DAY,"P"))
"RTN","PRS8WE",55,0)
 S H(DAY)=$G(^TMP($J,"PRS8",DAY,"HOL"))
"RTN","PRS8WE",56,0)
 ;
"RTN","PRS8WE",57,0)
 ; loop thru activity string to find start of 'tour'
"RTN","PRS8WE",58,0)
 S M=1
"RTN","PRS8WE",59,0)
 S END=$S($G(SAT2DT(DAY))>0:SAT2DT(DAY),1:96)
"RTN","PRS8WE",60,0)
 F  D  Q:M=END  S M=M+1
"RTN","PRS8WE",61,0)
 . I TV'[$E(D(DAY),M),$E(H(DAY),M)'=2 Q
"RTN","PRS8WE",62,0)
 . ; found start of a 'tour'
"RTN","PRS8WE",63,0)
 . ; loop thru 'tour' activity and count the premium
"RTN","PRS8WE",64,0)
 . N CNT
"RTN","PRS8WE",65,0)
 . ;
"RTN","PRS8WE",66,0)
 . ; if the 'tour' starts at beginning of day then check if it is part
"RTN","PRS8WE",67,0)
 . ; of a 2-day 'tour' that actually started on the previous day
"RTN","PRS8WE",68,0)
 . I DAY>1,M=1 D
"RTN","PRS8WE",69,0)
 . . N CLASS,DYP,Z
"RTN","PRS8WE",70,0)
 . . S CLASS=$$CTS($E(D(DAY),M),$E(H(DAY),M))
"RTN","PRS8WE",71,0)
 . . S DYP=DAY-1
"RTN","PRS8WE",72,0)
 . . S D(DYP)=$G(^TMP($J,"PRS8",DYP,"W"))
"RTN","PRS8WE",73,0)
 . . S P(DYP)=$G(^TMP($J,"PRS8",DYP,"P"))
"RTN","PRS8WE",74,0)
 . . S H(DYP)=$G(^TMP($J,"PRS8",DYP,"HOL"))
"RTN","PRS8WE",75,0)
 . . Q:$$CTS($E(D(DYP),96),$E(H(DYP),96))'=CLASS  ; not same 'tour'
"RTN","PRS8WE",76,0)
 . . ; Hybrids defined by Public Law P.L. 107-135 only get Saturday
"RTN","PRS8WE",77,0)
 . . ; or Sunday premium for CT/OT/UN worked on Saturday or Sunday
"RTN","PRS8WE",78,0)
 . . Q:HYBRID&(TP="SAT")&($$CTS($E(D(DYP),96),$E(H(DYP),96))="X")
"RTN","PRS8WE",79,0)
 . . I CLASS="R",'$$TDT(DYP) Q  ; can't be same scheduled tour
"RTN","PRS8WE",80,0)
 . . ; If SATNOSUN and the day is a Sunday quit
"RTN","PRS8WE",81,0)
 . . Q:SATNOSUN&("^1^8^15^"[(U_DAY_U))
"RTN","PRS8WE",82,0)
 . . ; loop backward from midnight thru previous day's portion of tour
"RTN","PRS8WE",83,0)
 . . S Z=96
"RTN","PRS8WE",84,0)
 . . F  D  Q:Z=1  S Z=Z-1 Q:$$CTS($E(D(DYP),Z),$E(H(DYP),Z))'=CLASS
"RTN","PRS8WE",85,0)
 . . . I AV[$E(D(DYP),Z)!($E(D(DYP),Z)="O"&($E(H(DYP),Z)=2)) D COUNT^PRS8WE2(DYP,Z)
"RTN","PRS8WE",86,0)
 . . ; if Sun. premium then save Z to avoid recount of these Sat. hours
"RTN","PRS8WE",87,0)
 . . ;   when/if Sat. premium is calculated
"RTN","PRS8WE",88,0)
 . . ;
"RTN","PRS8WE",89,0)
 . . I TP="SUN" S SAT2DT(DYP)=Z
"RTN","PRS8WE",90,0)
 . ;
"RTN","PRS8WE",91,0)
 . ; loop forward thru current day's portion of tour
"RTN","PRS8WE",92,0)
 . I DAY<15 F  D  Q:M=END  S M=M+1 Q:TV'[$E(D(DAY),M)&($E(H(DAY),M)'=2)
"RTN","PRS8WE",93,0)
 . . S LASTSAT=""
"RTN","PRS8WE",94,0)
 . . I SATNOSUN&(M=1)&("^1^8^15^"[(U_DAY_U)) D  Q:M=END
"RTN","PRS8WE",95,0)
 . . . S LASTSAT=$E($G(^TMP($J,"PRS8",DAY-1,"W")),96)
"RTN","PRS8WE",96,0)
 . . I LASTSAT'="",AV'[LASTSAT S M=END Q
"RTN","PRS8WE",97,0)
 . . I AV[$E(D(DAY),M)!($E(D(DAY),M)="O"&($E(H(DAY),M)=2)) D COUNT^PRS8WE2(DAY,M)
"RTN","PRS8WE",98,0)
 . . ;
"RTN","PRS8WE",99,0)
 . . ; If checking for SATNOSUN quit when tour crossing midnight ends
"RTN","PRS8WE",100,0)
 . . I SATNOSUN&(TP="SAT")&("^1^8^15^"[(U_DAY_U))&(AV'[$E(D(DAY),M+1)) D SAVE^PRS8WE2 S M=END Q
"RTN","PRS8WE",101,0)
 . ;
"RTN","PRS8WE",102,0)
 . ; If counting Sat Prem for SATNOSUN and Day is a Sunday there is no
"RTN","PRS8WE",103,0)
 . ; need to check for the tour crossing midnight onto Monday
"RTN","PRS8WE",104,0)
 . Q:SATNOSUN&(TP="SAT")&("^1^8^15^"[(U_DAY_U))
"RTN","PRS8WE",105,0)
 . ;
"RTN","PRS8WE",106,0)
 . ; If SATNOSUN and DAY=14 and M<96 check remainder of tour for work
"RTN","PRS8WE",107,0)
 . I SATNOSUN&(DAY=14)&(M<96) D
"RTN","PRS8WE",108,0)
 . . F M=M:1:96 D
"RTN","PRS8WE",109,0)
 . . . I AV[$E(D(DAY),M)!($E(D(DAY),M)="O"&($E(H(DAY),M)=2)) D COUNT^PRS8WE2(DAY,M)
"RTN","PRS8WE",110,0)
 . ;
"RTN","PRS8WE",111,0)
 . ; If tour lasted until end of day then check if it is part of
"RTN","PRS8WE",112,0)
 . ; a 2-day tour that extends into next day
"RTN","PRS8WE",113,0)
 . I DAY<15,M=96,'SATNOSUN,(TV[$E(D(DAY),M))!($E(H(DAY),M)=2) D
"RTN","PRS8WE",114,0)
 . . N CLASS,DYN,Z
"RTN","PRS8WE",115,0)
 . . S CLASS=$$CTS($E(D(DAY),96),$E(H(DAY),96))
"RTN","PRS8WE",116,0)
 . . S DYN=DAY+1
"RTN","PRS8WE",117,0)
 . . S D(DYN)=$G(^TMP($J,"PRS8",DYN,"W"))
"RTN","PRS8WE",118,0)
 . . S P(DYN)=$G(^TMP($J,"PRS8",DYN,"P"))
"RTN","PRS8WE",119,0)
 . . S H(DYN)=$G(^TMP($J,"PRS8",DYN,"HOL"))
"RTN","PRS8WE",120,0)
 . . Q:$$CTS($E(D(DYN),1),$E(H(DYN),1))'=CLASS  ; not same 'tour'
"RTN","PRS8WE",121,0)
 . . ; Hybrids defined by Public Law P.L. 107-135 only get Saturday
"RTN","PRS8WE",122,0)
 . . ; or Sunday premium for CT/OT/UN worked on Saturday or Sunday
"RTN","PRS8WE",123,0)
 . . Q:HYBRID&(TP="SUN")&($$CTS($E(D(DYN),1),$E(H(DYN),1))="X")
"RTN","PRS8WE",124,0)
 . . I CLASS="R",'$$TDT(DAY) Q  ; can't be same scheduled tour
"RTN","PRS8WE",125,0)
 . . ; loop forward from midnight thru next day's portion of tour
"RTN","PRS8WE",126,0)
 . . S Z=1
"RTN","PRS8WE",127,0)
 . . F  D  Q:Z=96  S Z=Z+1 Q:$$CTS($E(D(DYN),Z),$E(H(DYN),Z))'=CLASS
"RTN","PRS8WE",128,0)
 . . . I AV[$E(D(DYN),Z)!($E(D(DYN),Z)="O"&($E(H(DYN),Z)=2)) D COUNT^PRS8WE2(DYN,Z)
"RTN","PRS8WE",129,0)
 . ;
"RTN","PRS8WE",130,0)
 . ; post premium time for tour to WK()
"RTN","PRS8WE",131,0)
 . D SAVE^PRS8WE2
"RTN","PRS8WE",132,0)
 Q
"RTN","PRS8WE",133,0)
 ;
"RTN","PRS8WE",134,0)
TV() ; List types of time in a 'tour'
"RTN","PRS8WE",135,0)
 N PRSX
"RTN","PRS8WE",136,0)
 ; for regular time
"RTN","PRS8WE",137,0)
 S PRSX="LRSFGDUAJMWNnVH1234XYm"
"RTN","PRS8WE",138,0)
 ; for OT/CT
"RTN","PRS8WE",139,0)
 S PRSX=PRSX_$S(TYP["B":"EeOs",TYP["N"!(TYP["H"):"EetOoscbT",1:"")
"RTN","PRS8WE",140,0)
 I HYBRID S PRSX=PRSX_"EetOoscbT"
"RTN","PRS8WE",141,0)
 ; for employees covered by PL 108-170
"RTN","PRS8WE",142,0)
 I PMP'=""&("^S^T^U^V^"[(U_PMP_U)) D
"RTN","PRS8WE",143,0)
 . I $E(ENT,28) S PRSX=PRSX_"Eet"
"RTN","PRS8WE",144,0)
 . I $E(ENT,12) S PRSX=PRSX_"Oos"
"RTN","PRS8WE",145,0)
 . I $E(ENT,17) S PRSX=PRSX_"c"
"RTN","PRS8WE",146,0)
 . I $E(ENT,29) S PRSX=PRSX_"b"
"RTN","PRS8WE",147,0)
 . I $E(ENT,18) S PRSX=PRSX_"T"
"RTN","PRS8WE",148,0)
 Q PRSX
"RTN","PRS8WE",149,0)
 ;
"RTN","PRS8WE",150,0)
AV() ; List types of time that might be eligible for premium pay
"RTN","PRS8WE",151,0)
 N PRSX
"RTN","PRS8WE",152,0)
 ; for regular time
"RTN","PRS8WE",153,0)
 S PRSX=$S(TYP["B":"",1:"1234XY")
"RTN","PRS8WE",154,0)
 ; for OT/CT
"RTN","PRS8WE",155,0)
 S PRSX=PRSX_$S(TYP["B":"EeOos",TYP["N"!(TYP["H"):"EeOosc",1:"")
"RTN","PRS8WE",156,0)
 I HYBRID S PRSX=PRSX_"EeOosc"
"RTN","PRS8WE",157,0)
 ; for employees covered by PL 108-170
"RTN","PRS8WE",158,0)
 I PMP'=""&("^S^T^U^V^"[(U_PMP_U)) D
"RTN","PRS8WE",159,0)
 . I $E(ENT,28) S PRSX=PRSX_"Ee"
"RTN","PRS8WE",160,0)
 . I $E(ENT,12) S PRSX=PRSX_"Oos"
"RTN","PRS8WE",161,0)
 . I $E(ENT,17) S PRSX=PRSX_"c"
"RTN","PRS8WE",162,0)
 Q PRSX
"RTN","PRS8WE",163,0)
 ;
"RTN","PRS8WE",164,0)
CTS(XW,XH) ; Return class of a time segment
"RTN","PRS8WE",165,0)
 ; input XW = type of time in activity ("W") string
"RTN","PRS8WE",166,0)
 ;       XH = value in holiday ("H")  string
"RTN","PRS8WE",167,0)
 ; returns class
"RTN","PRS8WE",168,0)
 ;    "R"  regular scheduled
"RTN","PRS8WE",169,0)
 ;    "X"  extra (ot/ct) or unscheduled reg.
"RTN","PRS8WE",170,0)
 ;    "N"  not worked (includes on-call, standby when not called back)
"RTN","PRS8WE",171,0)
 Q $S(("LRSFGDUAJMWNnVH123XYm"[XW)!((XW="O")&(XH=2)):"R",("EetscbT4"[XW)!((XW="O")&(XH'=2)):"X",1:"N")
"RTN","PRS8WE",172,0)
 ;
"RTN","PRS8WE",173,0)
TDT(DAYN) ; Two-Day Tour extrinsic variable
"RTN","PRS8WE",174,0)
 ; input
"RTN","PRS8WE",175,0)
 ;   DAYN = day # (0-15) being checked for at least one sch. 2-day tour
"RTN","PRS8WE",176,0)
 ; returns 0 (false) or 1 (true)
"RTN","PRS8WE",177,0)
 N RET
"RTN","PRS8WE",178,0)
 S RET=0 ; assume no scheduled 2-day tour of duty
"RTN","PRS8WE",179,0)
 S X=$G(^TMP($J,"PRS8",DAYN,0))
"RTN","PRS8WE",180,0)
 F I=2,13 I $P(X,U,I),$P($G(^PRST(457.1,$P(X,U,I),0)),U,5)="Y" S RET=1
"RTN","PRS8WE",181,0)
 Q RET
"RTN","PRS8WE",182,0)
 ;
"RTN","PRS8WE",183,0)
 ;PRS8WE
"RTN","PRS8WE2")
0^5^B14824286
"RTN","PRS8WE2",1,0)
PRS8WE2 ;HISC/MRL,WCIOFO/SAB-DECOMPOSITION, WEEKEND PREMIUM ;01/21/04
"RTN","PRS8WE2",2,0)
 ;;4.0;PAID;**90**;Sep 21, 1995
"RTN","PRS8WE2",3,0)
 ;
"RTN","PRS8WE2",4,0)
COUNT(DAYN,SEG) ; Increase count of premium for tour
"RTN","PRS8WE2",5,0)
 ; input
"RTN","PRS8WE2",6,0)
 ;   DAYN = day # (0-15) being counted
"RTN","PRS8WE2",7,0)
 ;   SEG  = segment # (1-96) in DAYN being counted
"RTN","PRS8WE2",8,0)
 ;   D(DAYN)
"RTN","PRS8WE2",9,0)
 ;   P(DAYN)
"RTN","PRS8WE2",10,0)
 ;   H(DAYN)
"RTN","PRS8WE2",11,0)
 ;   CNT(DAYN,shift) - optional
"RTN","PRS8WE2",12,0)
 ; output
"RTN","PRS8WE2",13,0)
 ;   CNT(DAYN,shift) = current count for tour being processed
"RTN","PRS8WE2",14,0)
 ;
"RTN","PRS8WE2",15,0)
 N DAT,FND,M1,NODE,NOTELG,POST,PREVDAY,RC,SC,SHIFT,TDAY,TOUR,TOURS,TS
"RTN","PRS8WE2",16,0)
 ; perform final checks
"RTN","PRS8WE2",17,0)
 I ("EetOscbT"[$E(D(DAYN),SEG)),$E(H(DAYN),SEG)'=2,$E(P(DAYN),SEG) Q
"RTN","PRS8WE2",18,0)
 I TYP["P","4"[$E(D(DAYN),SEG),$E(H(DAYN),SEG)'=2,$E(P(DAYN),SEG)=0 Q
"RTN","PRS8WE2",19,0)
 ;
"RTN","PRS8WE2",20,0)
 ; If Hybrid employee as defined by Public Law P.L. 107-135, check
"RTN","PRS8WE2",21,0)
 ; to see if the time was on a tour of duty or an exception.  Tours
"RTN","PRS8WE2",22,0)
 ; worked on Sat or Sun qualify for Premium time.  If the time was
"RTN","PRS8WE2",23,0)
 ; an exception, check the Remarks Code to see if the segment can be
"RTN","PRS8WE2",24,0)
 ; counted as Premium time.
"RTN","PRS8WE2",25,0)
 ;
"RTN","PRS8WE2",26,0)
 S (FND,NOTELG)=0
"RTN","PRS8WE2",27,0)
 I HYBRID D  Q:NOTELG
"RTN","PRS8WE2",28,0)
 . ; Check to see if the time was on a tour or an exception
"RTN","PRS8WE2",29,0)
 . F TOURS=1,4,2 D  Q:NOTELG!(FND)
"RTN","PRS8WE2",30,0)
 . . S TOUR=$G(^TMP($J,"PRS8",DAYN,TOURS))
"RTN","PRS8WE2",31,0)
 . . Q:TOUR=""
"RTN","PRS8WE2",32,0)
 . . F POST=1:4:25 I $P(TOUR,"^",POST)'="" D  Q:NOTELG!(FND)
"RTN","PRS8WE2",33,0)
 . . . ; Quit if SEG is not within the start/stop time
"RTN","PRS8WE2",34,0)
 . . . Q:SEG<$P(TOUR,"^",POST)!(SEG>$P(TOUR,"^",POST+1))
"RTN","PRS8WE2",35,0)
 . . . S FND=1
"RTN","PRS8WE2",36,0)
 . . . Q:TOURS=1!(TOURS=4)  ; If on a Tour it counts as Premium
"RTN","PRS8WE2",37,0)
 . . . S RC=$P(TOUR,"^",POST+3)
"RTN","PRS8WE2",38,0)
 . . . ; Remarks Code must be OT/CT on Premium (#9), Tour Coverage (#12)
"RTN","PRS8WE2",39,0)
 . . . ; or CB - Premium T&L (#14) to qualify for Premium pay.
"RTN","PRS8WE2",40,0)
 . . . I "^9^12^14^"'[("^"_RC_"^") S NOTELG=1
"RTN","PRS8WE2",41,0)
 . Q:FND
"RTN","PRS8WE2",42,0)
 . ;
"RTN","PRS8WE2",43,0)
 . ; If we didn't find SEG in either of the two tours or the
"RTN","PRS8WE2",44,0)
 . ; exceptions then check to see if it crossed over into this day.
"RTN","PRS8WE2",45,0)
 . S PREVDAY=DAYN-1
"RTN","PRS8WE2",46,0)
 . F TOURS=1,4,2 D  Q:NOTELG
"RTN","PRS8WE2",47,0)
 . . S TOUR=$G(^TMP($J,"PRS8",PREVDAY,TOURS))
"RTN","PRS8WE2",48,0)
 . . Q:TOUR=""
"RTN","PRS8WE2",49,0)
 . . F POST=1:4:25 I $P(TOUR,"^",POST)'="" D  Q:NOTELG!(FND)
"RTN","PRS8WE2",50,0)
 . . . ; Quit if SEG is not within the start/stop time
"RTN","PRS8WE2",51,0)
 . . . Q:(SEG+96)<$P(TOUR,"^",POST)!((SEG+96)>$P(TOUR,"^",POST+1))
"RTN","PRS8WE2",52,0)
 . . . S FND=1
"RTN","PRS8WE2",53,0)
 . . . Q:TOURS=1!(TOURS=4)  ; If on a Tour it counts as Premium
"RTN","PRS8WE2",54,0)
 . . . S RC=$P(TOUR,"^",POST+3)
"RTN","PRS8WE2",55,0)
 . . . ; Remarks Code must be OT/CT on Premium (#9), Tour Coverage (#12)
"RTN","PRS8WE2",56,0)
 . . . ; or CB - Premium T&L (#14) to qualify for premium pay.
"RTN","PRS8WE2",57,0)
 . . . I "^9^12^14^"'[("^"_RC_"^") S NOTELG=1
"RTN","PRS8WE2",58,0)
 ;
"RTN","PRS8WE2",59,0)
 I $E(H(DAYN),SEG)=1!($E(P(DAYN),SEG)=5) Q
"RTN","PRS8WE2",60,0)
 ; determine special code
"RTN","PRS8WE2",61,0)
 S SHIFT=1
"RTN","PRS8WE2",62,0)
 I TP="SUN",TYP["W" D
"RTN","PRS8WE2",63,0)
 . ; Check to see if shift 2 or 3 is recorded for the segment worked
"RTN","PRS8WE2",64,0)
 . I "^2^3^"[(U_$E(D(DAYN),SEG)_U) S SHIFT=$E(D(DAYN),SEG) Q
"RTN","PRS8WE2",65,0)
 . S FND=0,SC=""
"RTN","PRS8WE2",66,0)
 . ; Check for Holiday Worked on a Holiday
"RTN","PRS8WE2",67,0)
 . I $E(D(DAYN),SEG)="O",$E(H(DAYN),SEG)=2 D
"RTN","PRS8WE2",68,0)
 . . F TDAY=DAYN,DAYN-1 D  Q:FND
"RTN","PRS8WE2",69,0)
 . . . S M1=$S(TDAY=DAYN:SEG,1:SEG+96)
"RTN","PRS8WE2",70,0)
 . . . ; loop through both tours in day
"RTN","PRS8WE2",71,0)
 . . . F NODE=1,4 S DAT=$G(^TMP($J,"PRS8",TDAY,NODE)) Q:DAT=""  D  Q:FND
"RTN","PRS8WE2",72,0)
 . . . . ; loop through tour segments in tour
"RTN","PRS8WE2",73,0)
 . . . . F TS=1:1:7 Q:$P(DAT,U,(TS-1)*3+1)=""  D  Q:FND
"RTN","PRS8WE2",74,0)
 . . . . . ; check if time is contained in tour segment
"RTN","PRS8WE2",75,0)
 . . . . . I M1'<$P(DAT,U,(TS-1)*3+1),M1'>$P(DAT,U,(TS-1)*3+2) D
"RTN","PRS8WE2",76,0)
 . . . . . . S SC=$P(DAT,U,(TS-1)*3+3),SHIFT=$S(SC=6:2,SC=7:3,1:1)
"RTN","PRS8WE2",77,0)
 . . . . . . I "^2^3^"[(U_SHIFT_U) S FND=1
"RTN","PRS8WE2",78,0)
 ;
"RTN","PRS8WE2",79,0)
 ; add to count
"RTN","PRS8WE2",80,0)
 S CNT(DAYN,SHIFT)=$G(CNT(DAYN,SHIFT))+1
"RTN","PRS8WE2",81,0)
 Q
"RTN","PRS8WE2",82,0)
 ;
"RTN","PRS8WE2",83,0)
SAVE ; Update WK array with final count for tour
"RTN","PRS8WE2",84,0)
 ; input
"RTN","PRS8WE2",85,0)
 ;   TP  - type of premium (SAT or SUN)
"RTN","PRS8WE2",86,0)
 ;   CNT(day,shift)=amount
"RTN","PRS8WE2",87,0)
 ;
"RTN","PRS8WE2",88,0)
 N AMT,DAYN,PC,SHIFT,WEEK
"RTN","PRS8WE2",89,0)
 S DAYN=0 F  S DAYN=$O(CNT(DAYN)) Q:DAYN=""  D
"RTN","PRS8WE2",90,0)
 . Q:DAYN<1!(DAYN>14)
"RTN","PRS8WE2",91,0)
 . S WEEK=$S(DAYN<8:1,1:2)
"RTN","PRS8WE2",92,0)
 . S SHIFT="" F  S SHIFT=$O(CNT(DAYN,SHIFT)) Q:SHIFT=""  D
"RTN","PRS8WE2",93,0)
 . . S AMT=CNT(DAYN,SHIFT)
"RTN","PRS8WE2",94,0)
 . . S PC=$S(TP="SAT":0,1:SHIFT)+12
"RTN","PRS8WE2",95,0)
 . . S $P(WK(WEEK),U,PC)=$P(WK(WEEK),U,PC)+AMT
"RTN","PRS8WE2",96,0)
 Q
"RTN","PRS8WE2",97,0)
 ;
"RTN","PRS8WE2",98,0)
 ;PRS8WE
"RTN","PRSAENT")
0^1^B44402499
"RTN","PRSAENT",1,0)
PRSAENT ;HISC/REL-Entitlement String ;01/13/04
"RTN","PRSAENT",2,0)
 ;;4.0;PAID;**6,21,45,69,75,76,90**;Sep 21, 1995
"RTN","PRSAENT",3,0)
 ;
"RTN","PRSAENT",4,0)
 ;VARS:
"RTN","PRSAENT",5,0)
 ; C0=employees 0 node of master record in file 450
"RTN","PRSAENT",6,0)
 ; NH= employees 8B normal hours
"RTN","PRSAENT",7,0)
 ; FLX= compressed/flextime code (0=none,C=compressed,F=flextime)
"RTN","PRSAENT",8,0)
 ; PMP= premium pay indicator 
"RTN","PRSAENT",9,0)
 ;     ( D = entitled Sun.,   F = entitled Sat./Sun.,
"RTN","PRSAENT",10,0)
 ;       E = entitled variable Sat./Sun. premium pay,
"RTN","PRSAENT",11,0)
 ;       G = entitled variable Sun. prem pay
"RTN","PRSAENT",12,0)
 ;       X = title 5 employees
"RTN","PRSAENT",13,0)
 ;       R, C, O = 3 types of firefighters )
"RTN","PRSAENT",14,0)
 ; AC= 3 single char codes concat. w/o delims + a possible 4th char.
"RTN","PRSAENT",15,0)
 ; AC= PP_DutyBasis(full-1,part-2,intermit-3)_FLSA(E=Exempt,N=NonExempt)
"RTN","PRSAENT",16,0)
 ;     _(*EWXY8BT02S9P)
"RTN","PRSAENT",17,0)
 ; PP= employees pay plan (possible chars 0AEFGJKLMNPQRSTUWXY)
"RTN","PRSAENT",18,0)
 ; PB= pay basis-code for time condition for computing pay.
"RTN","PRSAENT",19,0)
 ; TA= type of appointment (career, career conditional, etc.)
"RTN","PRSAENT",20,0)
 ; OCC= 4 digit cost center for fund appropriation accounting
"RTN","PRSAENT",21,0)
 ; LVG= one digit code for employees leave group.
"RTN","PRSAENT",22,0)
 ; ASS= specialty assignment of physicians,dentists, nurses,
"RTN","PRSAENT",23,0)
 ;      summer employees,trainees and other special programs.
"RTN","PRSAENT",24,0)
 ; ENT= 39 character entitlement string
"RTN","PRSAENT",25,0)
 ; PMP = Premium Pay Code
"RTN","PRSAENT",26,0)
 ;
"RTN","PRSAENT",27,0)
 N PAYPDTMP,PPLOLD,DUTYTEMP,FLSATEMP
"RTN","PRSAENT",28,0)
 ;
"RTN","PRSAENT",29,0)
 S C0=^PRSPC(DFN,0)
"RTN","PRSAENT",30,0)
 ;
"RTN","PRSAENT",31,0)
 ; pay plan in master record.
"RTN","PRSAENT",32,0)
 S PP=$P(C0,"^",21)
"RTN","PRSAENT",33,0)
 ;
"RTN","PRSAENT",34,0)
 ;=====================================================================
"RTN","PRSAENT",35,0)
 ; duty basis from master record
"RTN","PRSAENT",36,0)
 S DUTYTEMP=$P(C0,"^",10)
"RTN","PRSAENT",37,0)
 ;
"RTN","PRSAENT",38,0)
 ; FLSA indicator from master record
"RTN","PRSAENT",39,0)
 S FLSATEMP=$P(C0,"^",12)
"RTN","PRSAENT",40,0)
 ;
"RTN","PRSAENT",41,0)
 ;Make sure we've called this routine from an entry point that uses
"RTN","PRSAENT",42,0)
 ;PY for pay period.  A few reports, call PRSAENT from TYPSTF^PRSRUT0
"RTN","PRSAENT",43,0)
 ;and the reports aren't concerned about differing pay plans from 
"RTN","PRSAENT",44,0)
 ;other pay periods.
"RTN","PRSAENT",45,0)
 ;
"RTN","PRSAENT",46,0)
 I +($G(PY))>0 D
"RTN","PRSAENT",47,0)
 .S PAYPDTMP=$P($G(^PRST(458,+PY,0)),"^") ;pay period we're working with.
"RTN","PRSAENT",48,0)
 .S PPLOLD=$$OLDPP^PRS8UT(PAYPDTMP,+DFN) ;pay plan from PAYPDTMP.
"RTN","PRSAENT",49,0)
 .;if we find an old pay plan and it's different than the master record
"RTN","PRSAENT",50,0)
 .;use the old pay plan to determine VCS or FEE.
"RTN","PRSAENT",51,0)
 .I PPLOLD'=0,(PP'=PPLOLD) D
"RTN","PRSAENT",52,0)
 ..   S PP=PPLOLD
"RTN","PRSAENT",53,0)
 ..   S DUTYTEMP=OLDPP("DUTYBS")
"RTN","PRSAENT",54,0)
 ;=====================================================================
"RTN","PRSAENT",55,0)
 ;
"RTN","PRSAENT",56,0)
 ; Numeric Pay plans are all Wage grade. Set them to 0.
"RTN","PRSAENT",57,0)
 S:PP?1N PP=0
"RTN","PRSAENT",58,0)
 ;
"RTN","PRSAENT",59,0)
 ;
"RTN","PRSAENT",60,0)
 S:"BC"[PP PP="A"
"RTN","PRSAENT",61,0)
 I "0AEFGJKLMNPQRSTUWXY"'[PP D NO Q
"RTN","PRSAENT",62,0)
 S NH=+$P(C0,"^",16)
"RTN","PRSAENT",63,0)
 S FLX=$P($G(^PRSPC(DFN,1)),"^",7)
"RTN","PRSAENT",64,0)
 S PMP=$P($G(^PRSPC(DFN,"PREMIUM")),"^",6)
"RTN","PRSAENT",65,0)
 S AC=PP_DUTYTEMP_FLSATEMP
"RTN","PRSAENT",66,0)
 I $L(AC)'=3 D NO Q
"RTN","PRSAENT",67,0)
 ;
"RTN","PRSAENT",68,0)
 ;
"RTN","PRSAENT",69,0)
 D @PP
"RTN","PRSAENT",70,0)
 D FND
"RTN","PRSAENT",71,0)
 Q
"RTN","PRSAENT",72,0)
 ;===========================================================
"RTN","PRSAENT",73,0)
 ;
"RTN","PRSAENT",74,0)
0 Q
"RTN","PRSAENT",75,0)
 ;
"RTN","PRSAENT",76,0)
A ;patch 45: firefighters entitlements are based on PMP Codes.  
"RTN","PRSAENT",77,0)
 ; Code O still uses nh>80 to determine entitlement. 
"RTN","PRSAENT",78,0)
 I "RC"[PMP S AC=AC_PMP Q
"RTN","PRSAENT",79,0)
 ;
"RTN","PRSAENT",80,0)
 ;This check does not concern itself with whether or not a code
"RTN","PRSAENT",81,0)
 ; O is present.  Simply if not a code R or C then an over 80
"RTN","PRSAENT",82,0)
 ; must be a code O firefighter under the rules implemented in 
"RTN","PRSAENT",83,0)
 ; patch 45.  
"RTN","PRSAENT",84,0)
 ;
"RTN","PRSAENT",85,0)
 I "CR"'[PMP,NH>80 S AC=AC_"*" Q
"RTN","PRSAENT",86,0)
 ;
"RTN","PRSAENT",87,0)
 Q:PMP=""
"RTN","PRSAENT",88,0)
 I $E(AC,2)'=3,"WXY"[PMP S AC=AC_PMP Q
"RTN","PRSAENT",89,0)
 S:"EF"[PMP AC=AC_"E"
"RTN","PRSAENT",90,0)
 ;The following check is for Public Law 108-170
"RTN","PRSAENT",91,0)
 S:"STUV"[PMP AC=AC_PMP
"RTN","PRSAENT",92,0)
 Q
"RTN","PRSAENT",93,0)
E Q
"RTN","PRSAENT",94,0)
F Q
"RTN","PRSAENT",95,0)
G I $E(AC,2)<3 Q
"RTN","PRSAENT",96,0)
 S TA=$P(C0,"^",43) S:TA=8 AC=AC_"8" Q
"RTN","PRSAENT",97,0)
J Q
"RTN","PRSAENT",98,0)
K S:NH=48 AC=AC_"B" Q
"RTN","PRSAENT",99,0)
L I $E(AC,2)=2 S PB=$P(C0,"^",20) S:PB=0 AC=AC_"*" Q
"RTN","PRSAENT",100,0)
 I $E(AC,2)=3 S OCC=$P(C0,"^",17),OCC=+$E(OCC,5,6) S:OCC>20&(OCC<38) AC=AC_"*" Q
"RTN","PRSAENT",101,0)
 S LVG=$P(C0,"^",15) S:LVG=5 AC=AC_"*" Q
"RTN","PRSAENT",102,0)
M I $E(AC,2)=1,NH=48 S AC=AC_"B" Q
"RTN","PRSAENT",103,0)
 I $E(AC,2)=2 S PB=$P(C0,"^",20) I PB=0 S AC=AC_"0" Q
"RTN","PRSAENT",104,0)
 I $E(AC,2)=3 S PB=$P(C0,"^",20) I PB=2 S AC=AC_"2" Q
"RTN","PRSAENT",105,0)
 S OCC=$P(C0,"^",17) S:OCC="" OCC="*"
"RTN","PRSAENT",106,0)
 S:" 061056 061057 "[OCC AC=AC_"T"
"RTN","PRSAENT",107,0)
 S:" 061071 061072 061080 061083 061084 "[OCC AC=AC_"T"
"RTN","PRSAENT",108,0)
 S:" 060552 060556 "[OCC AC=AC_"T" Q
"RTN","PRSAENT",109,0)
N S ASS=$P(C0,"^",4),PB=$P(C0,"^",20)
"RTN","PRSAENT",110,0)
 ;The following check is for Public Law 108-170
"RTN","PRSAENT",111,0)
 I "^S^T^U^V^"[("^"_PMP_"^") S AC=AC_PMP Q
"RTN","PRSAENT",112,0)
 I AC="N2E",PB=0 S AC=AC_"0" Q
"RTN","PRSAENT",113,0)
 I $E(AC,2)=3,PB="S" S AC=AC_"$" Q
"RTN","PRSAENT",114,0)
 S AC=AC_$S(ASS="TR":"T",ASS?1"T"1N:"T",ASS?1"A"1N:"T",1:"") Q
"RTN","PRSAENT",115,0)
P Q
"RTN","PRSAENT",116,0)
Q I $E(AC,2)'=2 Q
"RTN","PRSAENT",117,0)
 S PB=$P(C0,"^",20) S:PB=0 AC=AC_"0" Q
"RTN","PRSAENT",118,0)
R Q
"RTN","PRSAENT",119,0)
S Q
"RTN","PRSAENT",120,0)
T I $E(AC,2)'=3 Q
"RTN","PRSAENT",121,0)
 S PB=$P(C0,"^",20) S:PB=9 AC=AC_"9" Q
"RTN","PRSAENT",122,0)
U S PB=$P(C0,"^",20) I $E(AC,3)="N",PB="P" S AC=AC_"P"
"RTN","PRSAENT",123,0)
 Q
"RTN","PRSAENT",124,0)
W Q
"RTN","PRSAENT",125,0)
X S:'NH AC=AC_"0" Q
"RTN","PRSAENT",126,0)
Y Q
"RTN","PRSAENT",127,0)
 ;
"RTN","PRSAENT",128,0)
 ;= = = = = = = = = = = = = = = = = = = = = = = =
"RTN","PRSAENT",129,0)
FND ;Look up the 39 character entitlement string in the entitlement table
"RTN","PRSAENT",130,0)
 ;The lookup is based on the AC x-ref that matches the AC variable that
"RTN","PRSAENT",131,0)
 ;is built in this routine from the three 1 character codes from the 
"RTN","PRSAENT",132,0)
 ;450 fields (pay plan, duty basis, FLSA).
"RTN","PRSAENT",133,0)
 ;
"RTN","PRSAENT",134,0)
 S A1=$O(^PRST(457.5,"AC",AC,0))
"RTN","PRSAENT",135,0)
 D NO
"RTN","PRSAENT",136,0)
 I +A1 S ENT=^PRST(457.5,A1,1)
"RTN","PRSAENT",137,0)
 ; The following check was added to address the Hybrid employees
"RTN","PRSAENT",138,0)
 ; defined in Public Law 107-135.  These Hybrids do not have a
"RTN","PRSAENT",139,0)
 ; Premium Pay Indicator but are entitled to Saturday and Sunday
"RTN","PRSAENT",140,0)
 ; Premium Pay.
"RTN","PRSAENT",141,0)
 I $$HYBRID(DFN) D
"RTN","PRSAENT",142,0)
 . S $E(ENT,8,9)="11"
"RTN","PRSAENT",143,0)
 ;
"RTN","PRSAENT",144,0)
 Q
"RTN","PRSAENT",145,0)
 ;= = = = = = = = = = = = = = = = = = = = = = = =
"RTN","PRSAENT",146,0)
NO S ENT=""
"RTN","PRSAENT",147,0)
 Q
"RTN","PRSAENT",148,0)
 ;
"RTN","PRSAENT",149,0)
MLINHRS(IEN) ; 
"RTN","PRSAENT",150,0)
 ;----------------------------------------------------------------------
"RTN","PRSAENT",151,0)
 ; Determine if the employee is entitled to Military Leave in hours.
"RTN","PRSAENT",152,0)
 ;
"RTN","PRSAENT",153,0)
 ; Input Vars:
"RTN","PRSAENT",154,0)
 ;  IEN - the ien number of the employee in the PAID EMPLOYEE (#450)
"RTN","PRSAENT",155,0)
 ;        file.
"RTN","PRSAENT",156,0)
 ;
"RTN","PRSAENT",157,0)
 ; Local Vars:
"RTN","PRSAENT",158,0)
 ;  DATA - the 0 node of the employee from the PAID EMPLOYEE (#450)
"RTN","PRSAENT",159,0)
 ;         file.
"RTN","PRSAENT",160,0)
 ;    DB - Duty Basis    field #9    from the #450 file.
"RTN","PRSAENT",161,0)
 ;    NH - Normal Hours  field # 15  from the #450 file.
"RTN","PRSAENT",162,0)
 ;    PP - Pay Plan      field # 20  from the #450 file.
"RTN","PRSAENT",163,0)
 ;
"RTN","PRSAENT",164,0)
 ; Output:
"RTN","PRSAENT",165,0)
 ;  1 : Entitled to ML in hours.
"RTN","PRSAENT",166,0)
 ;  0 : Entitled to ML in days.
"RTN","PRSAENT",167,0)
 ;  X : Some of the required fields were not defined or the employee
"RTN","PRSAENT",168,0)
 ;      is not entitled to Military Leave.
"RTN","PRSAENT",169,0)
 ;----------------------------------------------------------------------
"RTN","PRSAENT",170,0)
 ; Quit if no IEN passed in
"RTN","PRSAENT",171,0)
 ;
"RTN","PRSAENT",172,0)
 Q:'+IEN "X"
"RTN","PRSAENT",173,0)
 ;
"RTN","PRSAENT",174,0)
 ; Verify that ENT is defined.  If not call PRSAENT to define it.
"RTN","PRSAENT",175,0)
 ;
"RTN","PRSAENT",176,0)
 I '$D(ENT) D PRSAENT
"RTN","PRSAENT",177,0)
 ;
"RTN","PRSAENT",178,0)
 ; Quit if the Entitlement string is not defined for the employee
"RTN","PRSAENT",179,0)
 ;
"RTN","PRSAENT",180,0)
 Q:ENT="" "X"
"RTN","PRSAENT",181,0)
 ;
"RTN","PRSAENT",182,0)
 ; Quit if the employee is not entitled to Military Leave
"RTN","PRSAENT",183,0)
 ;
"RTN","PRSAENT",184,0)
 Q:'$E(ENT,34) "X"
"RTN","PRSAENT",185,0)
 ;
"RTN","PRSAENT",186,0)
 N DATA,PP,DB,NH
"RTN","PRSAENT",187,0)
 S DATA=$G(^PRSPC(IEN,0))
"RTN","PRSAENT",188,0)
 Q:DATA="" "X"
"RTN","PRSAENT",189,0)
 S DB=$P(DATA,U,10),NH=$P(DATA,U,16),PP=$P(DATA,U,21)
"RTN","PRSAENT",190,0)
 Q:DB=""!(NH="")!(PP="") "X" ; Quit if DB or NH or PP is not defined.
"RTN","PRSAENT",191,0)
 ;
"RTN","PRSAENT",192,0)
 ; Check for ML in Days
"RTN","PRSAENT",193,0)
 ;
"RTN","PRSAENT",194,0)
 I DB=1,NH=0,"^J^L^P^Q^X^"[PP  Q 0
"RTN","PRSAENT",195,0)
 ;
"RTN","PRSAENT",196,0)
 ; Otherwise the employee is entitled to ML in hours.
"RTN","PRSAENT",197,0)
 ;
"RTN","PRSAENT",198,0)
 Q 1
"RTN","PRSAENT",199,0)
 ;
"RTN","PRSAENT",200,0)
HYBRID(IEN) ;
"RTN","PRSAENT",201,0)
 ;----------------------------------------------------------------------
"RTN","PRSAENT",202,0)
 ; The following code was added to address Public Law 
"RTN","PRSAENT",203,0)
 ; P.L. 107-135 which adds mandatory Saturday (SP/SQ) and Sunday 
"RTN","PRSAENT",204,0)
 ; (SA/SE) Premium Pay for all "Hybrid" title 38 employees.
"RTN","PRSAENT",205,0)
 ;
"RTN","PRSAENT",206,0)
 ; Input Vars:
"RTN","PRSAENT",207,0)
 ;  IEN - the ien number of the employee in the PAID EMPLOYEE (#450)
"RTN","PRSAENT",208,0)
 ;        file.
"RTN","PRSAENT",209,0)
 ;
"RTN","PRSAENT",210,0)
 ; Local Vars:
"RTN","PRSAENT",211,0)
 ;     C0 - the 0 node of the employee from the PAID EMPLOYEE (#450)
"RTN","PRSAENT",212,0)
 ;          file.
"RTN","PRSAENT",213,0)
 ; HYBRID - Is the employee a Hybrid that qualifies for Saturday and
"RTN","PRSAENT",214,0)
 ;          Sunday premium pay after the passing of Public Law
"RTN","PRSAENT",215,0)
 ;          P.L. 107-135.
"RTN","PRSAENT",216,0)
 ;          1 : Entitled to Saturday or Sunday Premium pay.
"RTN","PRSAENT",217,0)
 ;          0 : Not Entitled to Saturday or Sunday Premium pay.
"RTN","PRSAENT",218,0)
 ;  OCODE - The employee's OCCUPATION SERIES & TITLE code.
"RTN","PRSAENT",219,0)
 ;
"RTN","PRSAENT",220,0)
 ; Output: HYBRID
"RTN","PRSAENT",221,0)
 ; 
"RTN","PRSAENT",222,0)
 ;----------------------------------------------------------------------
"RTN","PRSAENT",223,0)
 ;
"RTN","PRSAENT",224,0)
 N C0,HYBRID,OCODE,PREM
"RTN","PRSAENT",225,0)
 S (HYBRID,PREM)=0
"RTN","PRSAENT",226,0)
 ;
"RTN","PRSAENT",227,0)
 Q:'+IEN HYBRID  ; Quit if no IEN passed in.
"RTN","PRSAENT",228,0)
 ;
"RTN","PRSAENT",229,0)
 S C0=$G(^PRSPC(IEN,0))
"RTN","PRSAENT",230,0)
 Q:C0="" HYBRID  ; Quit if no 0 node in 450
"RTN","PRSAENT",231,0)
 ;
"RTN","PRSAENT",232,0)
 S PREM=$P($G(^PRSPC(IEN,"PREMIUM")),U,6)
"RTN","PRSAENT",233,0)
 I "^E^F^"[("^"_PREM_"^") S PREM=1
"RTN","PRSAENT",234,0)
 ;
"RTN","PRSAENT",235,0)
 ; Check for Pay Plan A and Type of Appointment 5 or 6
"RTN","PRSAENT",236,0)
 I $P(C0,U,21)="A","^5^6^"[(U_$P(C0,U,43)_U),'PREM D
"RTN","PRSAENT",237,0)
 .;Check Occupational Series Code and Title Code.
"RTN","PRSAENT",238,0)
 . S OCODE=$P(C0,U,17)
"RTN","PRSAENT",239,0)
 . Q:OCODE="" HYBRID
"RTN","PRSAENT",240,0)
 . ;
"RTN","PRSAENT",241,0)
 . ; For any OCC codes applicable to Hybrid employees translate any
"RTN","PRSAENT",242,0)
 . ; 6th position Alphas in the Title Code to its corresponding
"RTN","PRSAENT",243,0)
 . ; numerical equivalent before making the final comparison.
"RTN","PRSAENT",244,0)
 . ;
"RTN","PRSAENT",245,0)
 . I "^0601^0620^0631^0633^0640^0660^"[$E(OCODE,1,4) D
"RTN","PRSAENT",246,0)
 . . S $E(OCODE,6)=$TR($E(OCODE,6),"ABCDEFGHIJKLMNOPQR","123456789123456789")
"RTN","PRSAENT",247,0)
 . ;
"RTN","PRSAENT",248,0)
 . I $E(OCODE,1,4)="0601" D       ; Registered Respiratory Therapist
"RTN","PRSAENT",249,0)
 . . I "^31^"[(U_$E(OCODE,5,6)_U) S HYBRID=1
"RTN","PRSAENT",250,0)
 . I $E(OCODE,1,4)="0620" D       ;Vocational/Practical Nurse
"RTN","PRSAENT",251,0)
 . . I "^01^02^03^04^05^06^12^13^14^"[(U_$E(OCODE,5,6)_U) S HYBRID=1
"RTN","PRSAENT",252,0)
 . I $E(OCODE,1,4)="0631" D       ;Occupational Therapist
"RTN","PRSAENT",253,0)
 . . I "^04^"[(U_$E(OCODE,5,6)_U) S HYBRID=1
"RTN","PRSAENT",254,0)
 . I $E(OCODE,1,4)="0633" D       ;Physical Therapist
"RTN","PRSAENT",255,0)
 . . I "^02^"[(U_$E(OCODE,5,6)_U) S HYBRID=1
"RTN","PRSAENT",256,0)
 . I $E(OCODE,1,4)="0640" D       ;Certified Respiratory Therapy Tech
"RTN","PRSAENT",257,0)
 . . I "^75^"[(U_$E(OCODE,5,6)_U) S HYBRID=1
"RTN","PRSAENT",258,0)
 . I $E(OCODE,1,4)="0660" D       ;Pharmacist
"RTN","PRSAENT",259,0)
 . . I "^02^03^04^05^08^09^"[(U_$E(OCODE,5,6)_U) S HYBRID=1
"RTN","PRSAENT",260,0)
 . . I "^10^20^21^50^70^80^"[(U_$E(OCODE,5,6)_U) S HYBRID=1
"RTN","PRSAENT",261,0)
 ;
"RTN","PRSAENT",262,0)
 Q HYBRID  ; Return whether or not the employee qualifies.
"VER")
8.0^22
"^DD",457.5,457.5,0)
FIELD^^20^3
"^DD",457.5,457.5,0,"DT")
2920601
"^DD",457.5,457.5,0,"IX","AC",457.5,1)

"^DD",457.5,457.5,0,"IX","B",457.5,.01)

"^DD",457.5,457.5,0,"NM","PAY ENTITLEMENT")

"^DD",457.5,457.5,0,"PT",458.01,4)

"^DD",457.5,457.5,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<5) X
"^DD",457.5,457.5,.01,1,0)
^.1
"^DD",457.5,457.5,.01,1,1,0)
457.5^B
"^DD",457.5,457.5,.01,1,1,1)
S ^PRST(457.5,"B",$E(X,1,30),DA)=""
"^DD",457.5,457.5,.01,1,1,2)
K ^PRST(457.5,"B",$E(X,1,30),DA)
"^DD",457.5,457.5,.01,3)
Answer must be 5-30 characters in length.
"^DD",457.5,457.5,.01,21,0)
^^1^1^2921105^
"^DD",457.5,457.5,.01,21,1,0)
The name of the pay entitlement character string.
"^DD",457.5,457.5,.01,"DT")
2920601
"^DD",457.5,457.5,1,0)
CODE^RF^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>4!($L(X)<3) X
"^DD",457.5,457.5,1,1,0)
^.1
"^DD",457.5,457.5,1,1,1,0)
457.5^AC
"^DD",457.5,457.5,1,1,1,1)
S ^PRST(457.5,"AC",$E(X,1,30),DA)=""
"^DD",457.5,457.5,1,1,1,2)
K ^PRST(457.5,"AC",$E(X,1,30),DA)
"^DD",457.5,457.5,1,1,1,"DT")
2920420
"^DD",457.5,457.5,1,3)
Answer must be 3-4 characters in length.
"^DD",457.5,457.5,1,21,0)
^^1^1^2921105^
"^DD",457.5,457.5,1,21,1,0)
A code that identifies the pay entitlement string.
"^DD",457.5,457.5,1,"DT")
2920420
"^DD",457.5,457.5,20,0)
ENTITLEMENT STRING^RF^^1;1^K:$L(X)>50!($L(X)<38) X
"^DD",457.5,457.5,20,3)
Answer must be 38-50 characters in length.
"^DD",457.5,457.5,20,21,0)
^^1^1^2921105^
"^DD",457.5,457.5,20,21,1,0)
The pay entitlement character string.
"^DD",457.5,457.5,20,"DT")
2920420
"^DIC",457.5,457.5,0)
PAY ENTITLEMENT^457.5
"^DIC",457.5,457.5,0,"GL")
^PRST(457.5,
"^DIC",457.5,457.5,"%D",0)
^^6^6^2920601^^
"^DIC",457.5,457.5,"%D",1,0)
This file contains a string of codes which indicate entitlement
"^DIC",457.5,457.5,"%D",2,0)
to specific type of time for different pay plan categories.
"^DIC",457.5,457.5,"%D",3,0)
The first character of the name is the Pay Plan, the second is
"^DIC",457.5,457.5,"%D",4,0)
Duty Basis, and the third is the FLSA indicator.
"^DIC",457.5,457.5,"%D",5,0)
 
"^DIC",457.5,457.5,"%D",6,0)
This file should not be altered except as instructed.
"^DIC",457.5,"B","PAY ENTITLEMENT",457.5)

**END**
**END**
