Verified XU*8*5 SEQ #5
Extracted from mail message
**KIDS**:XU*8.0*5^

**INSTALL NAME**
XU*8.0*5
"BLD",65,0)
XU*8.0*5^KERNEL^0^2950921^y
"BLD",65,1,0)
^^41^41^2950928^
"BLD",65,1,1,0)
XU*8*5
"BLD",65,1,2,0)
This is a patch to XPDKEY to provide a supported call to do a lookup
"BLD",65,1,3,0)
on the Security Key file.
"BLD",65,1,4,0)
 
"BLD",65,1,5,0)
========================================================================= 
"BLD",65,1,6,0)
INSTALLATION: 
"BLD",65,1,7,0)
 
"BLD",65,1,8,0)
 1. Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This 
"BLD",65,1,9,0)
    option will load the KIDS package in this message onto your system.  
"BLD",65,1,10,0)
 2. Answer NO to the question: 
"BLD",65,1,11,0)
    'Shall I preserve what is on disk in a separate back-up message ?' 
"BLD",65,1,12,0)
 3. The patch has now been loaded into a Transport global on your system.
"BLD",65,1,13,0)
 
"BLD",65,1,14,0)
    You now need to use KIDS to install the Transport global.  
"BLD",65,1,15,0)
 4. On the KIDS menu, under the 'Installation' menu, use the option 
"BLD",65,1,16,0)
    'Install Package(s)'.  
"BLD",65,1,17,0)
    Select the package 'XU*8.0*5' and proceed with install.  
"BLD",65,1,18,0)
 
"BLD",65,1,19,0)
    This routine is used by KIDS, so there will not be any user accessing
"BLD",65,1,20,0)
    it.  This patch can be installed at any time.
"BLD",65,1,21,0)
 
"BLD",65,1,22,0)
========================================================================= 
"BLD",65,1,23,0)
 
"BLD",65,1,24,0)
   * LKUP^XPDKEY(key_lookup): Lookup a Security Key
"BLD",65,1,25,0)
 
"BLD",65,1,26,0)
   Usage  S Y=$$LKUP^XPDKEY(key_lookup)
"BLD",65,1,27,0)
 
"BLD",65,1,28,0)
   Input  key_lookup:     Name or number of the security key in the
"BLD",65,1,29,0)
                          SECURITY KEY file (#19.1).
"BLD",65,1,30,0)
 
"BLD",65,1,31,0)
   Output  If called with a number it returns the name of the security
"BLD",65,1,32,0)
           key. If called with a name it returns the number of the
"BLD",65,1,33,0)
           security key.
"BLD",65,1,34,0)
 
"BLD",65,1,35,0)
   Description
"BLD",65,1,36,0)
 
"BLD",65,1,37,0)
   This is an extrinsic function to do lookups on the SECURITY KEY file
"BLD",65,1,38,0)
   (#19.1) and return the name of the security key if called with a
"BLD",65,1,39,0)
   number, or return a number of the security key if called with a name.
"BLD",65,1,40,0)
   If the security key name or number is not found, it returns the empty
"BLD",65,1,41,0)
   string.
"BLD",65,4,0)
^9.64PA^^
"BLD",65,"KRN",0)
^9.67PA^8994^15
"BLD",65,"KRN",.4,0)
.4
"BLD",65,"KRN",.401,0)
.401
"BLD",65,"KRN",.402,0)
.402
"BLD",65,"KRN",.403,0)
.403
"BLD",65,"KRN",.5,0)
.5
"BLD",65,"KRN",.84,0)
.84
"BLD",65,"KRN",3.6,0)
3.6
"BLD",65,"KRN",9.2,0)
9.2
"BLD",65,"KRN",9.8,0)
9.8
"BLD",65,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",65,"KRN",9.8,"NM",1,0)
XPDKEY^^0^B2692887
"BLD",65,"KRN",9.8,"NM","B","XPDKEY",1)

"BLD",65,"KRN",19,0)
19
"BLD",65,"KRN",19.1,0)
19.1
"BLD",65,"KRN",101,0)
101
"BLD",65,"KRN",409.61,0)
409.61
"BLD",65,"KRN",8994,0)
8994
"BLD",65,"KRN",8995,0)
8995
"BLD",65,"KRN","B",.4,.4)

"BLD",65,"KRN","B",.401,.401)

"BLD",65,"KRN","B",.402,.402)

"BLD",65,"KRN","B",.403,.403)

"BLD",65,"KRN","B",.5,.5)

"BLD",65,"KRN","B",.84,.84)

"BLD",65,"KRN","B",3.6,3.6)

"BLD",65,"KRN","B",9.2,9.2)

"BLD",65,"KRN","B",9.8,9.8)

"BLD",65,"KRN","B",19,19)

"BLD",65,"KRN","B",19.1,19.1)

"BLD",65,"KRN","B",101,101)

"BLD",65,"KRN","B",409.61,409.61)

"BLD",65,"KRN","B",8994,8994)

"BLD",65,"KRN","B",8995,8995)

"BLD",65,"QUES",0)
^9.62^^
"PKG",283,-1)
21^3
"PKG",283,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",283,1,0)
^^1^1^2950921^
"PKG",283,1,1,0)
This is the basic package containing the KERNEL.
"PKG",283,2,0)
^9.42A^^0
"PKG",283,3,0)
^9.43^^0
"PKG",283,4,0)
^9.44AP^^0
"PKG",283,5)
SAN FRANCISCO
"PKG",283,7)
^^I
"PKG",283,8,0)
^9.404ID^^0
"PKG",283,11)
^
"PKG",283,20,0)
^9.402P^^0
"PKG",283,22,0)
^9.49I^21^5
"PKG",283,22,6,0)
6^2890609^2880718
"PKG",283,22,6.5,0)
6.5^2890807
"PKG",283,22,7,0)
7^2920831
"PKG",283,22,8,0)
7.1^2930507^2930125
"PKG",283,22,21,0)
8.0^2950729^2950729^6
"PKG",283,22,21,"PAH",0)
^9.4901^4^4
"PKG",283,22,21,"PAH",1,0)
1^2950728
"PKG",283,22,21,"PAH",1,1,0)
^^43^43^2950901^
"PKG",283,22,21,"PAH",1,1,1,0)
This is patch 1 of Kernel 8.0. All of the changes in this patch were
"PKG",283,22,21,"PAH",1,1,2,0)
made after verification. This patch was sent as a seperate file with
"PKG",283,22,21,"PAH",1,1,3,0)
the Kernel 8.0 distribution.
"PKG",283,22,21,"PAH",1,1,4,0)

"PKG",283,22,21,"PAH",1,1,5,0)
Routines:
"PKG",283,22,21,"PAH",1,1,6,0)
ORF2     - Corrects error when deleting OERR Alerts.
"PKG",283,22,21,"PAH",1,1,7,0)
XPDR     - Purge Build/Install file option will now find patches.
"PKG",283,22,21,"PAH",1,1,8,0)
XQ1      - Corrects undefined error if the variable ZTMQUEUED is killed in
"PKG",283,22,21,"PAH",1,1,9,0)
           an queued task.
"PKG",283,22,21,"PAH",1,1,10,0)
XQALDOIT - New API call, DOOPT.
"PKG",283,22,21,"PAH",1,1,11,0)
XQALERT  - New API call, GETACT.
"PKG",283,22,21,"PAH",1,1,12,0)
XQALSET  - Corrects undefined error when two people process Alerts at
"PKG",283,22,21,"PAH",1,1,13,0)
           the same time.
"PKG",283,22,21,"PAH",1,1,14,0)
XUFILE   - Grant File Access option will now accept file numbers with
"PKG",283,22,21,"PAH",1,1,15,0)
           up to 5 decimal places.
"PKG",283,22,21,"PAH",1,1,16,0)
XUTMTDL  - Correct undefine error when deleting list of Taskman tasks.
"PKG",283,22,21,"PAH",1,1,17,0)
ZTLOAD2  - Restricted Queue on an option will now default to the correct
"PKG",283,22,21,"PAH",1,1,18,0)
           date/time.
"PKG",283,22,21,"PAH",1,1,19,0)
ZTMS3    - Corrects no-open error in Taskman, caused when IO("C") is left
"PKG",283,22,21,"PAH",1,1,20,0)
           defined by task.
"PKG",283,22,21,"PAH",1,1,21,0)

"PKG",283,22,21,"PAH",1,1,22,0)
ZTM4,    - Corrects the hanging of Taskman Submanagers on ^ZTSCH("IO") when
"PKG",283,22,21,"PAH",1,1,23,0)
ZTMS7      printer is off-line.
"PKG",283,22,21,"PAH",1,1,24,0)

"PKG",283,22,21,"PAH",1,1,25,0)
Option:
"PKG",283,22,21,"PAH",1,1,26,0)
XU OPTION START - Entry action will now be executed on queued options.
"PKG",283,22,21,"PAH",1,1,27,0)

"PKG",283,22,21,"PAH",1,1,28,0)
Installation:
"PKG",283,22,21,"PAH",1,1,29,0)
 1. Before installing this patch, you should inhibit users from login,
"PKG",283,22,21,"PAH",1,1,30,0)
    shutdown Taskman and remove users from system.
"PKG",283,22,21,"PAH",1,1,31,0)
 2. After installing this patch, you need to move the following 4 routines
"PKG",283,22,21,"PAH",1,1,32,0)
    from your productions account to the manager account:
"PKG",283,22,21,"PAH",1,1,33,0)
    ZTLOAD2
"PKG",283,22,21,"PAH",1,1,34,0)
    ZTM4
"PKG",283,22,21,"PAH",1,1,35,0)
    ZTMS3
"PKG",283,22,21,"PAH",1,1,36,0)
    ZTMS7
"PKG",283,22,21,"PAH",1,1,37,0)
 3. Rename the routines as follows:
"PKG",283,22,21,"PAH",1,1,38,0)
    ZL ZTLOAD2 ZS %ZTLOAD2
"PKG",283,22,21,"PAH",1,1,39,0)
    ZL ZTM4 ZS %ZTM4
"PKG",283,22,21,"PAH",1,1,40,0)
    ZL ZTMS3 ZS %ZTMS3
"PKG",283,22,21,"PAH",1,1,41,0)
    ZL ZTMS7 ZS %ZTMS7
"PKG",283,22,21,"PAH",1,1,42,0)
 4. Un-inhibit users from login and restart Taskman.
"PKG",283,22,21,"PAH",1,1,43,0)

"PKG",283,22,21,"PAH",2,0)
2^2950926
"PKG",283,22,21,"PAH",2,1,0)
^^128^128^2950926
"PKG",283,22,21,"PAH",2,1,1,0)
This is Patch 2 to Kernel version 8.0.  It is in KIDS format and you must
"PKG",283,22,21,"PAH",2,1,2,0)
use the KIDS options to install it. This patch contains Taskman routines.
"PKG",283,22,21,"PAH",2,1,3,0)
You should put Taskman in a wait state and stop the submanager before moving
"PKG",283,22,21,"PAH",2,1,4,0)
the Taskman routines to your Manager account.
"PKG",283,22,21,"PAH",2,1,5,0)
========================================================================= 
"PKG",283,22,21,"PAH",2,1,6,0)
INSTALLATION:
"PKG",283,22,21,"PAH",2,1,7,0)
 
"PKG",283,22,21,"PAH",2,1,8,0)
 1. Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",283,22,21,"PAH",2,1,9,0)
    option will load the KIDS package in this message onto your system.
"PKG",283,22,21,"PAH",2,1,10,0)
 2. Answer NO to the question:
"PKG",283,22,21,"PAH",2,1,11,0)
    'Shall I preserve what is on disk in a separate back-up message ?'
"PKG",283,22,21,"PAH",2,1,12,0)
 3. The patch has now been loaded into a Transport global on your system.
"PKG",283,22,21,"PAH",2,1,13,0)
    You now need to use KIDS to install the Transport global.
"PKG",283,22,21,"PAH",2,1,14,0)
 4. On the KIDS menu, under the 'Installation' menu, use the option
"PKG",283,22,21,"PAH",2,1,15,0)
    'Install Package(s)'.
"PKG",283,22,21,"PAH",2,1,16,0)
    Select the package 'XU*8.0*2' and proceed with install.
"PKG",283,22,21,"PAH",2,1,17,0)
 5. After installing this patch, you need to move the following 2 routines
"PKG",283,22,21,"PAH",2,1,18,0)
    from your productions account to the manager account:
"PKG",283,22,21,"PAH",2,1,19,0)
    ZTMS
"PKG",283,22,21,"PAH",2,1,20,0)
    ZTMS2
"PKG",283,22,21,"PAH",2,1,21,0)
 6. In the manager account rename the 2 routines;  i.e.  ZL ZTMS ZS %ZTMS
"PKG",283,22,21,"PAH",2,1,22,0)
    ZTMS     to  %ZTMS
"PKG",283,22,21,"PAH",2,1,23,0)
    ZTMS2    to  %ZTMS2
"PKG",283,22,21,"PAH",2,1,24,0)
 7. If you are a 486 Site, you should now move the 2 routines; %ZTMS &
"PKG",283,22,21,"PAH",2,1,25,0)
    %ZTMS2 to the Manager account on you other CPU's. You also should
"PKG",283,22,21,"PAH",2,1,26,0)
    move the routine XPDIJ from your production account to the production
"PKG",283,22,21,"PAH",2,1,27,0)
    account on the other CPU's.
"PKG",283,22,21,"PAH",2,1,28,0)
 8. Remove Taskman from wait state
"PKG",283,22,21,"PAH",2,1,29,0)
========================================================================= 
"PKG",283,22,21,"PAH",2,1,30,0)
 
"PKG",283,22,21,"PAH",2,1,31,0)
The Routine XUTMOPT has new entry points to allow other packages to
"PKG",283,22,21,"PAH",2,1,32,0)
edit
"PKG",283,22,21,"PAH",2,1,33,0)
the OPTION SCHEDULING file (#19.2).
"PKG",283,22,21,"PAH",2,1,34,0)
 
"PKG",283,22,21,"PAH",2,1,35,0)
These new entry points include the following:
"PKG",283,22,21,"PAH",2,1,36,0)
 
"PKG",283,22,21,"PAH",2,1,37,0)
 
"PKG",283,22,21,"PAH",2,1,38,0)
* EDIT^XUTMOPT: Edit an Option
"PKG",283,22,21,"PAH",2,1,39,0)
 
"PKG",283,22,21,"PAH",2,1,40,0)
Usage  D EDIT^XUTMOPT(option_name)
"PKG",283,22,21,"PAH",2,1,41,0)
 
"PKG",283,22,21,"PAH",2,1,42,0)
Input  option_name:    Name of the option to be edited.
"PKG",283,22,21,"PAH",2,1,43,0)
 
"PKG",283,22,21,"PAH",2,1,44,0)
Output none
"PKG",283,22,21,"PAH",2,1,45,0)
 
"PKG",283,22,21,"PAH",2,1,46,0)
Description
"PKG",283,22,21,"PAH",2,1,47,0)
 
"PKG",283,22,21,"PAH",2,1,48,0)
This entry point allows users to edit an option's scheduling in the
"PKG",283,22,21,"PAH",2,1,49,0)
OPTION
"PKG",283,22,21,"PAH",2,1,50,0)
SCHEDULING file (#19.2).
"PKG",283,22,21,"PAH",2,1,51,0)
 
"PKG",283,22,21,"PAH",2,1,52,0)
 
"PKG",283,22,21,"PAH",2,1,53,0)
* DISP^XUTMOPT: Display an Option
"PKG",283,22,21,"PAH",2,1,54,0)
 
"PKG",283,22,21,"PAH",2,1,55,0)
Usage  D DISP^XUTMOPT(option_name)
"PKG",283,22,21,"PAH",2,1,56,0)
 
"PKG",283,22,21,"PAH",2,1,57,0)
Input  option_name:    Name of the option to be displayed.
"PKG",283,22,21,"PAH",2,1,58,0)
 
"PKG",283,22,21,"PAH",2,1,59,0)
Output none
"PKG",283,22,21,"PAH",2,1,60,0)
 
"PKG",283,22,21,"PAH",2,1,61,0)
Description
"PKG",283,22,21,"PAH",2,1,62,0)
 
"PKG",283,22,21,"PAH",2,1,63,0)
This entry point is used to display the schedule for an option.
"PKG",283,22,21,"PAH",2,1,64,0)
 
"PKG",283,22,21,"PAH",2,1,65,0)
 
"PKG",283,22,21,"PAH",2,1,66,0)
* RESCH^XUTMOPT: Reschedule an Option
"PKG",283,22,21,"PAH",2,1,67,0)
 
"PKG",283,22,21,"PAH",2,1,68,0)
Usage  D RESCH^XUTMOPT(option_name,when_to_run,device_to_use,
"PKG",283,22,21,"PAH",2,1,69,0)
re-schedule_freq,flags,error_array)
"PKG",283,22,21,"PAH",2,1,70,0)
 
"PKG",283,22,21,"PAH",2,1,71,0)
Input option_name:    Name of the option to be rescheduled.
"PKG",283,22,21,"PAH",2,1,72,0)
 
"PKG",283,22,21,"PAH",2,1,73,0)
      when_to_run:    (optional)
"PKG",283,22,21,"PAH",2,1,74,0)
                      The new scheduled time for the option to run.
"PKG",283,22,21,"PAH",2,1,75,0)
 
"PKG",283,22,21,"PAH",2,1,76,0)
      device_to_use:  (optional)
"PKG",283,22,21,"PAH",2,1,77,0)
                      The device to use for the rescheduled option.
"PKG",283,22,21,"PAH",2,1,78,0)
 
"PKG",283,22,21,"PAH",2,1,79,0)
   re-schedule_freq:  (optional)
"PKG",283,22,21,"PAH",2,1,80,0)
                      The frequency to run the rescheduled option.
"PKG",283,22,21,"PAH",2,1,81,0)
 
"PKG",283,22,21,"PAH",2,1,82,0)
      flags:          (optional) If the flag is set to an 'L' LAYGO
"PKG",283,22,21,"PAH",2,1,83,0)
                      a new entry if needed.
"PKG",283,22,21,"PAH",2,1,84,0)
 
"PKG",283,22,21,"PAH",2,1,85,0)
     error_array:     (optional) Pass by reference. Will be set to -1
"PKG",283,22,21,"PAH",2,1,86,0)
                      if the option was not found.
"PKG",283,22,21,"PAH",2,1,87,0)
 
"PKG",283,22,21,"PAH",2,1,88,0)
Output none
"PKG",283,22,21,"PAH",2,1,89,0)
 
"PKG",283,22,21,"PAH",2,1,90,0)
Description
"PKG",283,22,21,"PAH",2,1,91,0)
 
"PKG",283,22,21,"PAH",2,1,92,0)
This entry point allows an application to set-up the schedule for an
"PKG",283,22,21,"PAH",2,1,93,0)
option.
"PKG",283,22,21,"PAH",2,1,94,0)
 
"PKG",283,22,21,"PAH",2,1,95,0)
XUTMR had a bug in the Taskman Requeue code.
"PKG",283,22,21,"PAH",2,1,96,0)
When the question 'Do you wish to change the Device the task goes to:' was
"PKG",283,22,21,"PAH",2,1,97,0)
answered NO. Then it would delete the output device.
"PKG",283,22,21,"PAH",2,1,98,0)
 
"PKG",283,22,21,"PAH",2,1,99,0)
XUTMRP and XUTMRP1 are new routines that allow a site to redirect tasks
"PKG",283,22,21,"PAH",2,1,100,0)
that are waiting for a particular device to be rescheduled to a new
"PKG",283,22,21,"PAH",2,1,101,0)
device. The options to invoke these routines can be found on the Taskman
"PKG",283,22,21,"PAH",2,1,102,0)
Management Utilities menu.
"PKG",283,22,21,"PAH",2,1,103,0)
 
"PKG",283,22,21,"PAH",2,1,104,0)
There are updates to the DD for the following two fields of the NEW PERSON
"PKG",283,22,21,"PAH",2,1,105,0)
file (#200): VOICE PAGER (#.137) and DIGITAL PAGER (#.138). These fields
"PKG",283,22,21,"PAH",2,1,106,0)
now allow three digit pager numbers.
"PKG",283,22,21,"PAH",2,1,107,0)
 
"PKG",283,22,21,"PAH",2,1,108,0)
XUVERIFY had a bug that prevented the use of a '?' in the access/verify
"PKG",283,22,21,"PAH",2,1,109,0)
code pair. This has been fix.
"PKG",283,22,21,"PAH",2,1,110,0)
 
"PKG",283,22,21,"PAH",2,1,111,0)
ZTMS and ZTMS2 have fixes to problems found after K8 release.  That relate
"PKG",283,22,21,"PAH",2,1,112,0)
to leaving IO("C") around, also fixed in Kernel 7.1.  %ZTMS2 also does a
"PKG",283,22,21,"PAH",2,1,113,0)
check to see that %ZTIO and IO are the same. If not record in the TM error
"PKG",283,22,21,"PAH",2,1,114,0)
log and CLOSE %ZTIO and set to IO.  This may be why 2 devices get opened
"PKG",283,22,21,"PAH",2,1,115,0)
at once.
"PKG",283,22,21,"PAH",2,1,116,0)
 
"PKG",283,22,21,"PAH",2,1,117,0)
XPDE, XPDIA1 have been updated so that KIDS now supports List Manager
"PKG",283,22,21,"PAH",2,1,118,0)
templates and Remote Procedures for the Kernel RPC Broker.
"PKG",283,22,21,"PAH",2,1,119,0)
 
"PKG",283,22,21,"PAH",2,1,120,0)
XPDT returns error message if HFS filename is rejected by Device Handler.
"PKG",283,22,21,"PAH",2,1,121,0)
 
"PKG",283,22,21,"PAH",2,1,122,0)
XPDR has been enhanced to allow purging of Build and Install files at the
"PKG",283,22,21,"PAH",2,1,123,0)
same time.
"PKG",283,22,21,"PAH",2,1,124,0)
 
"PKG",283,22,21,"PAH",2,1,125,0)
XPDDCS will now check that routines in the transport global have header nodes.
"PKG",283,22,21,"PAH",2,1,126,0)
 
"PKG",283,22,21,"PAH",2,1,127,0)
XPDIJ doesn't display the message, 'Data already Installed', if there was no
"PKG",283,22,21,"PAH",2,1,128,0)
data sent.
"PKG",283,22,21,"PAH",3,0)
5^2950921
"PKG",283,22,21,"PAH",3,1,0)
^^41^41^2950928
"PKG",283,22,21,"PAH",3,1,1,0)
XU*8*5
"PKG",283,22,21,"PAH",3,1,2,0)
This is a patch to XPDKEY to provide a supported call to do a lookup
"PKG",283,22,21,"PAH",3,1,3,0)
on the Security Key file.
"PKG",283,22,21,"PAH",3,1,4,0)
 
"PKG",283,22,21,"PAH",3,1,5,0)
========================================================================= 
"PKG",283,22,21,"PAH",3,1,6,0)
INSTALLATION: 
"PKG",283,22,21,"PAH",3,1,7,0)
 
"PKG",283,22,21,"PAH",3,1,8,0)
 1. Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This 
"PKG",283,22,21,"PAH",3,1,9,0)
    option will load the KIDS package in this message onto your system.  
"PKG",283,22,21,"PAH",3,1,10,0)
 2. Answer NO to the question: 
"PKG",283,22,21,"PAH",3,1,11,0)
    'Shall I preserve what is on disk in a separate back-up message ?' 
"PKG",283,22,21,"PAH",3,1,12,0)
 3. The patch has now been loaded into a Transport global on your system.
"PKG",283,22,21,"PAH",3,1,13,0)
 
"PKG",283,22,21,"PAH",3,1,14,0)
    You now need to use KIDS to install the Transport global.  
"PKG",283,22,21,"PAH",3,1,15,0)
 4. On the KIDS menu, under the 'Installation' menu, use the option 
"PKG",283,22,21,"PAH",3,1,16,0)
    'Install Package(s)'.  
"PKG",283,22,21,"PAH",3,1,17,0)
    Select the package 'XU*8.0*5' and proceed with install.  
"PKG",283,22,21,"PAH",3,1,18,0)
 
"PKG",283,22,21,"PAH",3,1,19,0)
    This routine is used by KIDS, so there will not be any user accessing
"PKG",283,22,21,"PAH",3,1,20,0)
    it.  This patch can be installed at any time.
"PKG",283,22,21,"PAH",3,1,21,0)
 
"PKG",283,22,21,"PAH",3,1,22,0)
========================================================================= 
"PKG",283,22,21,"PAH",3,1,23,0)
 
"PKG",283,22,21,"PAH",3,1,24,0)
   * LKUP^XPDKEY(key_lookup): Lookup a Security Key
"PKG",283,22,21,"PAH",3,1,25,0)
 
"PKG",283,22,21,"PAH",3,1,26,0)
   Usage  S Y=$$LKUP^XPDKEY(key_lookup)
"PKG",283,22,21,"PAH",3,1,27,0)
 
"PKG",283,22,21,"PAH",3,1,28,0)
   Input  key_lookup:     Name or number of the security key in the
"PKG",283,22,21,"PAH",3,1,29,0)
                          SECURITY KEY file (#19.1).
"PKG",283,22,21,"PAH",3,1,30,0)
 
"PKG",283,22,21,"PAH",3,1,31,0)
   Output  If called with a number it returns the name of the security
"PKG",283,22,21,"PAH",3,1,32,0)
           key. If called with a name it returns the number of the
"PKG",283,22,21,"PAH",3,1,33,0)
           security key.
"PKG",283,22,21,"PAH",3,1,34,0)
 
"PKG",283,22,21,"PAH",3,1,35,0)
   Description
"PKG",283,22,21,"PAH",3,1,36,0)
 
"PKG",283,22,21,"PAH",3,1,37,0)
   This is an extrinsic function to do lookups on the SECURITY KEY file
"PKG",283,22,21,"PAH",3,1,38,0)
   (#19.1) and return the name of the security key if called with a
"PKG",283,22,21,"PAH",3,1,39,0)
   number, or return a number of the security key if called with a name.
"PKG",283,22,21,"PAH",3,1,40,0)
   If the security key name or number is not found, it returns the empty
"PKG",283,22,21,"PAH",3,1,41,0)
   string.
"PKG",283,22,21,"PAH",4,0)
6^2950926
"PKG",283,22,21,"PAH",4,1,0)
^^26^26^2950926
"PKG",283,22,21,"PAH",4,1,1,0)
XU*8.0*6
"PKG",283,22,21,"PAH",4,1,2,0)
This patch fixes some problems found in the ALERT system after Kernel was
"PKG",283,22,21,"PAH",4,1,3,0)
released.
"PKG",283,22,21,"PAH",4,1,4,0)
========================================================================= 
"PKG",283,22,21,"PAH",4,1,5,0)
INSTALLATION: 
"PKG",283,22,21,"PAH",4,1,6,0)
 
"PKG",283,22,21,"PAH",4,1,7,0)
 1. Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This 
"PKG",283,22,21,"PAH",4,1,8,0)
    option will load the KIDS package in this message onto your system.  
"PKG",283,22,21,"PAH",4,1,9,0)
 2. Answer NO to the question: 
"PKG",283,22,21,"PAH",4,1,10,0)
    'Shall I preserve what is on disk in a separate back-up message ?' 
"PKG",283,22,21,"PAH",4,1,11,0)
 3. The patch has now been loaded into a Transport global on your system.
"PKG",283,22,21,"PAH",4,1,12,0)
 
"PKG",283,22,21,"PAH",4,1,13,0)
    You now need to use KIDS to install the Transport global.  
"PKG",283,22,21,"PAH",4,1,14,0)
 4. On the KIDS menu, under the 'Installation' menu, use the option 
"PKG",283,22,21,"PAH",4,1,15,0)
    'Install Package(s)'.  
"PKG",283,22,21,"PAH",4,1,16,0)
    Select the package 'XU*8.0*6' and proceed with install.  
"PKG",283,22,21,"PAH",4,1,17,0)
 
"PKG",283,22,21,"PAH",4,1,18,0)
This patch can be loaded any time that users are not likely to be in
"PKG",283,22,21,"PAH",4,1,19,0)
the ALERT system.  i.e. It could be queued up to install eary in the
"PKG",283,22,21,"PAH",4,1,20,0)
morning.  If a user is in the ALERT system they may get a CLOBER error.
"PKG",283,22,21,"PAH",4,1,21,0)
========================================================================= 
"PKG",283,22,21,"PAH",4,1,22,0)
 
"PKG",283,22,21,"PAH",4,1,23,0)
 
"PKG",283,22,21,"PAH",4,1,24,0)
XQALSET and XQALDEL now NEW DA so they don't cause problems with
"PKG",283,22,21,"PAH",4,1,25,0)
calling routines.  
"PKG",283,22,21,"PAH",4,1,26,0)
XQALDOIT and XQALFWD fix problems with the forwarding of alerts to others.
"PKG",283,22,21,"PAH","B",1,1)

"PKG",283,22,21,"PAH","B",2,2)

"PKG",283,22,21,"PAH","B",5,3)

"PKG",283,22,21,"PAH","B",6,4)

"PKG",283,22,"B",6,6)

"PKG",283,22,"B",6.5,6.5)

"PKG",283,22,"B",7,7)

"PKG",283,22,"B",7.1,8)

"PKG",283,22,"B","8.0",21)

"PKG",283,1933,0)
^9.455^^0
"PKG",283,"DEV")
SF:HVB,RWF,AC,XAK,VYD,JIC SEA:MJM,JLI
"PKG",283,"DIBT",0)
^9.48^^0
"PKG",283,"DIE",0)
^9.47^^0
"PKG",283,"DIPT",0)
^9.46^^0
"PKG",283,"EX",0)
^9.432^^0
"PKG",283,"INI")
^
"PKG",283,"INIT")
^
"PKG",283,"M",0)
^9.495^^0
"PKG",283,"PRE")
^
"PKG",283,"ST",0)
^9.444D^2830000^1
"PKG",283,"ST",2830000,0)
2830000^A
"PKG",283,"VERSION")
8.0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Options and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","XPDKEY")
0^1^B2692887
"RTN","XPDKEY",1,0)
XPDKEY ;SFISC/RWF,RSD - Tools to work on KEYS ;9/21/95  13:47
"RTN","XPDKEY",2,0)
 ;;8.0;KERNEL;**5**;Jul 10, 1995
"RTN","XPDKEY",3,0)
 Q
"RTN","XPDKEY",4,0)
 ;XPDOLD=current Key name,  XPDNEW=new Key name
"RTN","XPDKEY",5,0)
 ;return 1 for success, 0 for failure
"RTN","XPDKEY",6,0)
RENAME(XPDOLD,XPDNEW) ;EF. Rename a Security Key
"RTN","XPDKEY",7,0)
 Q:$D(XPDOLD)+$D(XPDNEW)'=2 0
"RTN","XPDKEY",8,0)
 N DA,DIERR,DIK,XPD,XPDKEY,XPDI
"RTN","XPDKEY",9,0)
 S XPDKEY=$O(^DIC(19.1,"B",XPDOLD,0)) Q:XPDKEY'>0 0
"RTN","XPDKEY",10,0)
 S XPD(19.1,XPDKEY_",",.01)=XPDNEW D UPDATE^DIE("","XPD")
"RTN","XPDKEY",11,0)
 I $D(DIERR) Q 0
"RTN","XPDKEY",12,0)
 S XPDI=0,DA=XPDKEY,DIK="^VA(200,XPDI,51,",DIK(1)=.01
"RTN","XPDKEY",13,0)
 F  S XPDI=$O(^VA(200,"AB",XPDKEY,XPDI)) Q:'XPDI  S DA(1)=XPDI D EN1^DIK
"RTN","XPDKEY",14,0)
 D LOCKS(XPDOLD,XPDNEW)
"RTN","XPDKEY",15,0)
 Q 1
"RTN","XPDKEY",16,0)
 ;
"RTN","XPDKEY",17,0)
LOCKS(XPDOLD,XPDNEW) ;check file 19 for LOCKS and REVERSE/LOCK fields
"RTN","XPDKEY",18,0)
 N XPD,XPDI,X,Y
"RTN","XPDKEY",19,0)
 Q:$D(XPDOLD)+$D(XPDNEW)'=2
"RTN","XPDKEY",20,0)
 S XPDI=0
"RTN","XPDKEY",21,0)
 F  S XPDI=$O(^DIC(19,XPDI)) Q:'XPDI  S X=$G(^(XPDI,0)),Y=$G(^(3)) D:$L(X)
"RTN","XPDKEY",22,0)
 .K XPD
"RTN","XPDKEY",23,0)
 .S:$P(X,"^",6)=XPDOLD XPD(19,XPDI_",",3)=XPDNEW
"RTN","XPDKEY",24,0)
 .S:$P(Y,"^")=XPDOLD XPD(19,XPDI_",",3.01)=XPDNEW
"RTN","XPDKEY",25,0)
 .D:$D(XPD) UPDATE^DIE("","XPD")
"RTN","XPDKEY",26,0)
 Q
"RTN","XPDKEY",27,0)
 ;
"RTN","XPDKEY",28,0)
DEL(XPDA) ; Delete a key.
"RTN","XPDKEY",29,0)
 N DA,DIK,XPD,XPDKEY,XPDI
"RTN","XPDKEY",30,0)
 Q:'$D(^DIC(19.1,+$G(XPDA),0))  S XPDKEY=$P(^(0),"^")
"RTN","XPDKEY",31,0)
 S XPDI=0,DA=XPDA
"RTN","XPDKEY",32,0)
 F  S XPDI=$O(^VA(200,"AB",XPDA,XPDI)) Q:'XPDI  D
"RTN","XPDKEY",33,0)
 . S DA(1)=XPDI,DIK="^VA(200,XPDI,51," D ^DIK
"RTN","XPDKEY",34,0)
 . S DIK="^VA(200,XPDI,52," D ^DIK
"RTN","XPDKEY",35,0)
 K DA S DA=XPDA,DIK="^DIC(19.1,"
"RTN","XPDKEY",36,0)
 D ^DIK,LOCKS(XPDKEY,"@")
"RTN","XPDKEY",37,0)
 Q
"RTN","XPDKEY",38,0)
 ;
"RTN","XPDKEY",39,0)
LKUP(X) ;Lookup a in the KEY file.
"RTN","XPDKEY",40,0)
 Q:'$L(X) ""
"RTN","XPDKEY",41,0)
 I X?1N.NP Q $P($G(^DIC(19.1,X,0)),"^")
"RTN","XPDKEY",42,0)
 Q $O(^DIC(19.1,"B",X,0))
"VER")
8.0^21.0
**END**
**END**
