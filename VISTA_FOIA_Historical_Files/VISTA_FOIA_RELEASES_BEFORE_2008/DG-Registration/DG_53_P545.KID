KIDS Distribution saved on Feb 25, 2004@09:13:36
DG*5.3*545 and IVM*2.0*85
**KIDS**:DG*5.3*545^IVM*2.0*85^

**INSTALL NAME**
DG*5.3*545
"BLD",4198,0)
DG*5.3*545^REGISTRATION^0^3040225^y
"BLD",4198,1,0)
^^1^1^3031218^^^^
"BLD",4198,1,1,0)
Date of Death Modifications to ZPD segment
"BLD",4198,4,0)
^9.64PA^2^1
"BLD",4198,4,2,0)
2
"BLD",4198,4,2,2,0)
^9.641^2^1
"BLD",4198,4,2,2,2,0)
PATIENT  (File-top level)
"BLD",4198,4,2,2,2,1,0)
^9.6411^.355^4
"BLD",4198,4,2,2,2,1,.351,0)
DATE OF DEATH
"BLD",4198,4,2,2,2,1,.353,0)
SOURCE OF NOTIFICATION
"BLD",4198,4,2,2,2,1,.354,0)
DATE OF DEATH LAST UPDATED
"BLD",4198,4,2,2,2,1,.355,0)
LAST EDITED BY
"BLD",4198,4,2,222)
y^y^p^^^^n^^n
"BLD",4198,4,2,224)

"BLD",4198,4,"APDD",2,2)

"BLD",4198,4,"APDD",2,2,.351)

"BLD",4198,4,"APDD",2,2,.353)

"BLD",4198,4,"APDD",2,2,.354)

"BLD",4198,4,"APDD",2,2,.355)

"BLD",4198,4,"B",2,2)

"BLD",4198,"ABPKG")
n
"BLD",4198,"KRN",0)
^9.67PA^8989.52^19
"BLD",4198,"KRN",.4,0)
.4
"BLD",4198,"KRN",.401,0)
.401
"BLD",4198,"KRN",.402,0)
.402
"BLD",4198,"KRN",.403,0)
.403
"BLD",4198,"KRN",.5,0)
.5
"BLD",4198,"KRN",.84,0)
.84
"BLD",4198,"KRN",3.6,0)
3.6
"BLD",4198,"KRN",3.8,0)
3.8
"BLD",4198,"KRN",9.2,0)
9.2
"BLD",4198,"KRN",9.8,0)
9.8
"BLD",4198,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",4198,"KRN",9.8,"NM",1,0)
DGDEATH^^0^B25786382
"BLD",4198,"KRN",9.8,"NM",2,0)
DGRPD^^0^B57569105
"BLD",4198,"KRN",9.8,"NM",3,0)
DGRP2^^0^B11222193
"BLD",4198,"KRN",9.8,"NM",4,0)
DGRPV^^0^B16180164
"BLD",4198,"KRN",9.8,"NM",5,0)
DGRPH^^0^B26987960
"BLD",4198,"KRN",9.8,"NM",6,0)
VAFHLZPD^^0^B51802135
"BLD",4198,"KRN",9.8,"NM",7,0)
DGBUL^^0^B6158333
"BLD",4198,"KRN",9.8,"NM","B","DGBUL",7)

"BLD",4198,"KRN",9.8,"NM","B","DGDEATH",1)

"BLD",4198,"KRN",9.8,"NM","B","DGRP2",3)

"BLD",4198,"KRN",9.8,"NM","B","DGRPD",2)

"BLD",4198,"KRN",9.8,"NM","B","DGRPH",5)

"BLD",4198,"KRN",9.8,"NM","B","DGRPV",4)

"BLD",4198,"KRN",9.8,"NM","B","VAFHLZPD",6)

"BLD",4198,"KRN",19,0)
19
"BLD",4198,"KRN",19.1,0)
19.1
"BLD",4198,"KRN",101,0)
101
"BLD",4198,"KRN",409.61,0)
409.61
"BLD",4198,"KRN",771,0)
771
"BLD",4198,"KRN",870,0)
870
"BLD",4198,"KRN",8989.51,0)
8989.51
"BLD",4198,"KRN",8989.52,0)
8989.52
"BLD",4198,"KRN",8994,0)
8994
"BLD",4198,"KRN","B",.4,.4)

"BLD",4198,"KRN","B",.401,.401)

"BLD",4198,"KRN","B",.402,.402)

"BLD",4198,"KRN","B",.403,.403)

"BLD",4198,"KRN","B",.5,.5)

"BLD",4198,"KRN","B",.84,.84)

"BLD",4198,"KRN","B",3.6,3.6)

"BLD",4198,"KRN","B",3.8,3.8)

"BLD",4198,"KRN","B",9.2,9.2)

"BLD",4198,"KRN","B",9.8,9.8)

"BLD",4198,"KRN","B",19,19)

"BLD",4198,"KRN","B",19.1,19.1)

"BLD",4198,"KRN","B",101,101)

"BLD",4198,"KRN","B",409.61,409.61)

"BLD",4198,"KRN","B",771,771)

"BLD",4198,"KRN","B",870,870)

"BLD",4198,"KRN","B",8989.51,8989.51)

"BLD",4198,"KRN","B",8989.52,8989.52)

"BLD",4198,"KRN","B",8994,8994)

"BLD",4198,"QUES",0)
^9.62^^
"BLD",4198,"REQB",0)
^9.611^8^7
"BLD",4198,"REQB",1,0)
DG*5.3*247^2
"BLD",4198,"REQB",2,0)
DG*5.3*392^2
"BLD",4198,"REQB",4,0)
DG*5.3*489^2
"BLD",4198,"REQB",5,0)
DG*5.3*550^2
"BLD",4198,"REQB",6,0)
DG*5.3*244^2
"BLD",4198,"REQB",7,0)
DG*5.3*415^2
"BLD",4198,"REQB",8,0)
DG*5.3*546^2
"BLD",4198,"REQB","B","DG*5.3*244",6)

"BLD",4198,"REQB","B","DG*5.3*247",1)

"BLD",4198,"REQB","B","DG*5.3*392",2)

"BLD",4198,"REQB","B","DG*5.3*415",7)

"BLD",4198,"REQB","B","DG*5.3*489",4)

"BLD",4198,"REQB","B","DG*5.3*546",8)

"BLD",4198,"REQB","B","DG*5.3*550",5)

"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^y^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
5.3^DG
"FIA",2,2)
1
"FIA",2,2,.351)

"FIA",2,2,.353)

"FIA",2,2,.354)

"FIA",2,2,.355)

"IX",2,2,"ADGFMD351",0)
2^ADGFMD351^This x-ref calls the DG FIELD MONITOR event point.^MU^^F^I^I^2^^^^^A
"IX",2,2,"ADGFMD351",.1,0)
^^5^5^3020820
"IX",2,2,"ADGFMD351",.1,1,0)
This cross reference activates the DG FIELD MONITOR event point.
"IX",2,2,"ADGFMD351",.1,2,0)
Applications that wish to monitor edit activity related to this field may
"IX",2,2,"ADGFMD351",.1,3,0)
subscribe to that event point and take action as indicated by the changes
"IX",2,2,"ADGFMD351",.1,4,0)
that occur.  Refer to the DG FIELD MONITOR protocol for a description of
"IX",2,2,"ADGFMD351",.1,5,0)
the information available at the time of the event.
"IX",2,2,"ADGFMD351",1)
D FC^DGFCPROT(.DA,2,.351,"SET",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2,"ADGFMD351",2)
D FC^DGFCPROT(.DA,2,.351,"KILL",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2,"ADGFMD351",11.1,0)
^.114IA^1^1
"IX",2,2,"ADGFMD351",11.1,1,0)
1^F^2^.351^^^F
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
545^3040225
"PKG",5,22,1,"PAH",1,1,0)
^^1^1^3040225
"PKG",5,22,1,"PAH",1,1,1,0)
Date of Death Modifications to ZPD segment
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","DGBUL")
0^7^B6158333
"RTN","DGBUL",1,0)
DGBUL ;ALB/MRL - SEND DG BULLETIN ; 22 MAY 1987
"RTN","DGBUL",2,0)
 ;;5.3;Registration;**31,244,545**;Aug 13, 1993
"RTN","DGBUL",3,0)
 ;
"RTN","DGBUL",4,0)
 N DIC,DIX,DIY,DO,DD
"RTN","DGBUL",5,0)
 I '$D(DGB),'$D(XMSUB) G Q
"RTN","DGBUL",6,0)
 K:$D(DGTEXT) XMTEXT I '$D(DGTEXT)&('$D(XMTEXT)) G Q
"RTN","DGBUL",7,0)
 S DGB=+$P($G(^DG(43,1,"NOT")),"^",DGB)
"RTN","DGBUL",8,0)
 I '$D(^XMB(3.8,DGB,0)) G Q
"RTN","DGBUL",9,0)
 ;
"RTN","DGBUL",10,0)
 ;Protect Fileman from Mailman call
"RTN","DGBUL",11,0)
 N DICRREC,DIDATA,DIEFAR,DIEFCNOD,DIEFDAS,DIEFECNT,DIEFF,DIEFFLAG
"RTN","DGBUL",12,0)
 N DIEFFLD,DIEFFLST,DIEFFREF,DIEFFVAL,DIEFFXR,DIEFI,DIEFIEN,DIEFLEV
"RTN","DGBUL",13,0)
 N DIEFNODE,DIEFNVAL,DIEFOUT,DIEFOVAL,DIEFRFLD,DIEFRLST,DIEFSORK
"RTN","DGBUL",14,0)
 N DIEFSPOT,DIEFTMP,DIEFTREF,DIFLD,DIFM,DIQUIET,DISYS,D,D0,DA
"RTN","DGBUL",15,0)
 ;
"RTN","DGBUL",16,0)
 S XMY("G."_$P($G(^XMB(3.8,DGB,0)),"^",1))="" ; pass mailgroup
"RTN","DGBUL",17,0)
 G Q:'$D(DUZ) S:'$D(DGSM) DGSM=1 S XMTEXT=$S('$D(XMTEXT):"DGTEXT(",1:XMTEXT),XMDUZ=$S(($D(DUZ)#2):DUZ,1:.5) S:$D(DUZ)#2&(DGSM) XMY(DUZ)="" K:'$D(XMY) DGSM D ^XMD:$D(XMY)
"RTN","DGBUL",18,0)
Q K DGSM,DGB,DGTEXT,XMR,DGII,XMY,XMTEXT,XMDUZ,XMSUB Q
"RTN","DGBUL",19,0)
 ;
"RTN","DGBUL",20,0)
EDIT ;
"RTN","DGBUL",21,0)
 F I=1:1 S J=$P($T(T+I),";;",2) Q:J']""  W !,J
"RTN","DGBUL",22,0)
 W ! S DIE="^DG(43,",(DA,Y)=1,DR="500:513" D ^DIE K D,D0,DI,DIC,DQ,X,DR,DIE,DA,Y,I,J Q
"RTN","DGBUL",23,0)
T ;
"RTN","DGBUL",24,0)
 ;;This option is used to specify the mailgroup you desire specific types of
"RTN","DGBUL",25,0)
 ;;notification to be made to.  The mailgroup can be one created locally or a
"RTN","DGBUL",26,0)
 ;;distributed 'DG' mailgroup.  If a mailgroup is selected notification concerning
"RTN","DGBUL",27,0)
 ;;that specific action will be made in the form of a mailman bulletin.  If no
"RTN","DGBUL",28,0)
 ;;notification is desired for a specific action no mailgroup should be specified.
"RTN","DGBUL",29,0)
 ;;If you have any questions concerning the purpose of a specific type of
"RTN","DGBUL",30,0)
 ;;notification enter a question mark at the applicable prompt.
"RTN","DGDEATH")
0^1^B25786382
"RTN","DGDEATH",1,0)
DGDEATH ;ALB/MRL-PROCESS DECEASED PATIENTS ;19 JUN 87
"RTN","DGDEATH",2,0)
 ;;5.3;Registration;**45,84,101,149,392,545**;Aug 13, 1993
"RTN","DGDEATH",3,0)
 ;
"RTN","DGDEATH",4,0)
GET S DGDTHEN="" W !! S DIC="^DPT(",DIC(0)="AEQMZ" D ^DIC G Q:Y'>0 S (DA,DFN)=+Y
"RTN","DGDEATH",5,0)
 I $D(^DPT(DFN,.1)) W !?3,"Patient is currently in-house.  Discharge him with a discharge type of DEATH." G GET
"RTN","DGDEATH",6,0)
 I $S($D(^DPT(DFN,.35)):^(.35),1:"") F DGY=0:0 S DGY=$O(^DGPM("ATID1",DFN,DGY)) Q:'DGY  S DGDA=$O(^(DGY,0)) I $D(^DGPM(+DGDA,0)),$P(^(0),"^",17)]"" S DGXX=$P(^(0),"^",17),DGXX=^DGPM(DGXX,0) I "^12^38^"[("^"_$P(DGXX,"^",18)_"^") G DIS
"RTN","DGDEATH",7,0)
 D NOW^%DTC S DGNOW=%
"RTN","DGDEATH",8,0)
 S ^TMP("DEATH",$J)=1
"RTN","DGDEATH",9,0)
 K A W ! S DIE=DIC,DR=".351" D ^DIE
"RTN","DGDEATH",10,0)
 I '$D(^DPT(DFN,.35)) G GET
"RTN","DGDEATH",11,0)
 I $P(^DPT(DFN,.35),"^",1)="" K ^TMP("DEATH",$J) G GET
"RTN","DGDEATH",12,0)
 I $P(^DPT(DFN,.35),"^",1)'="" S DR=".353" D ^DIE
"RTN","DGDEATH",13,0)
 D DISCHRGE,XFR
"RTN","DGDEATH",14,0)
 K ^TMP("DEATH",$J) G GET
"RTN","DGDEATH",15,0)
 ;
"RTN","DGDEATH",16,0)
DIS W !,"Patient has a discharge type of Death",!,"Edit the discharge",!
"RTN","DGDEATH",17,0)
Q K A,DA,DFN,DGDA,DIC,DIE,DR,DGXX,DGY,DGDTHEN Q
"RTN","DGDEATH",18,0)
XFR ; called from set x-ref of field .351 of file 2
"RTN","DGDEATH",19,0)
 N DGPCMM,DGFAPT,DGFAPTI,DGFAPT1
"RTN","DGDEATH",20,0)
 Q:'$D(DFN)
"RTN","DGDEATH",21,0)
 K DGTEXT D ^DGPATV S DGDEATH=X,XMSUB="PATIENT HAS EXPIRED",DGCT=0
"RTN","DGDEATH",22,0)
 D DEMOG
"RTN","DGDEATH",23,0)
 S DGT=X-.0001,(Y,DGDDT)=X,DG1="" D:DGT]"" ^DGINPW
"RTN","DGDEATH",24,0)
 S Y=$$FMTE^XLFDT(Y),Y=$S(Y]"":Y,1:"UNKNOWN")
"RTN","DGDEATH",25,0)
 D LINE("")
"RTN","DGDEATH",26,0)
 D LINE("      Date/Time of Death: "_DEATHVAL_$S('DG1:"",$D(DGDTHEN):"",1:"  (While an inpatient)"))
"RTN","DGDEATH",27,0)
 D LINE("")
"RTN","DGDEATH",28,0)
 I '$D(ADM),DG1,$D(^DGPM(+DGA1,0)) S ADM=+^DGPM($P(^(0),"^",14),0)
"RTN","DGDEATH",29,0)
 S Y=$$FMTE^XLFDT($S($D(ADM):ADM,1:""))
"RTN","DGDEATH",30,0)
 D LINE($S($D(DGDTHEN):"",DG1:"     Admission Date/Time: "_Y_$S((DGDDT-ADM)<1:"  (Within 24 hours of hospitalization)",1:""),1:""))
"RTN","DGDEATH",31,0)
 D LINE("")
"RTN","DGDEATH",32,0)
 S DGX=$P($G(^DGPM(+$G(DGA1),0)),"^",6),DGX=$P($G(^DIC(42,+DGX,0)),U,1)
"RTN","DGDEATH",33,0)
 D LINE($S($D(DGDTHEN):"",('DG1):"",$D(DGA1):"             Admitted To: "_$S(DGX]"":DGX,1:"UNKNOWN"),1:"")) K DGX
"RTN","DGDEATH",34,0)
 D LINE("")
"RTN","DGDEATH",35,0)
 I DG1&'$D(DGDTHEN) D 
"RTN","DGDEATH",36,0)
 . D LINE($S($D(DGXFR0):"           Last Transfer: "_$S($D(^DIC(42,+$P(DGXFR0,"^",6),0)):$P(^(0),"^"),1:"UNKNOWN"),1:""))
"RTN","DGDEATH",37,0)
 . D LINE("")
"RTN","DGDEATH",38,0)
F S DGFAPT=DGDEATH,DGFAPTI=""
"RTN","DGDEATH",39,0)
 F  S DGFAPT=$O(^DPT(DFN,"S",DGFAPT)) Q:'DGFAPT  S DGFAPT1=$G(^(DGFAPT,0)) Q:'DGFAPT1  D  Q:DGFAPTI
"RTN","DGDEATH",40,0)
 .I $P(DGFAPT1,"^",2)'["C" D LINE("NOTE: Patient has future appointments scheduled!!") S DGFAPTI=1
"RTN","DGDEATH",41,0)
 S DGSCHAD=0 D SA I DGSCHAD D LINE("NOTE: Patient had scheduled admissions which have been cancelled!!")
"RTN","DGDEATH",42,0)
 I 'DGVETS D LINE("Patient is a NON-VETERAN."_$S($D(^DIC(21,+$P($G(^DPT(DFN,.32)),"^",3),0)):"  ["_$P(^(0),"^",1)_"]",1:""))
"RTN","DGDEATH",43,0)
 S DGPCMM=$$PCMMXMY^SCAPMC25(1,DFN,,,0) ;creates xmy array
"RTN","DGDEATH",44,0)
 S DGCT=$$PCMAIL^SCMCMM(DFN,"DGTEXT",DT)
"RTN","DGDEATH",45,0)
Q1 S DGB=1 D ^DGBUL S X=DGDEATH
"RTN","DGDEATH",46,0)
 K DGDEATH,DGSCHAD,DGI,Y,DGDDT D KILL^DGPATV K ADM,DG1,DGA1,DGCT,DGT,DGXX,DGY,Z Q
"RTN","DGDEATH",47,0)
SA F DGI=0:0 S DGI=$O(^DGS(41.1,"B",DFN,DGI)) Q:'DGI  I $D(^DGS(41.1,DGI,0)),($P(^(0),"^",13)']""),($P(^(0),"^",17)']"") S $P(^(0),"^",13)=DGDEATH,$P(^(0),"^",14)=+DUZ,$P(^(0),"^",15)=1,$P(^(0),"^",16)=2,DGSCHAD=1
"RTN","DGDEATH",48,0)
 Q
"RTN","DGDEATH",49,0)
 ;
"RTN","DGDEATH",50,0)
DEL ; delete death bulletin
"RTN","DGDEATH",51,0)
 N DGPCMM,DELBY,DELTM,DTHINFO
"RTN","DGDEATH",52,0)
 S DFN=+$G(DA) I '$D(^DPT(DFN,0)) Q  ; no patient node
"RTN","DGDEATH",53,0)
 I +$G(^DPT(DFN,.35)) Q  ; not deletion
"RTN","DGDEATH",54,0)
 S DGDEATH=X,XMSUB="Patient Death has been Deleted",DGCT=0
"RTN","DGDEATH",55,0)
 D ^DGPATV
"RTN","DGDEATH",56,0)
 D LINE("The date of death for the following patient has been deleted.")
"RTN","DGDEATH",57,0)
 D LINE("")
"RTN","DGDEATH",58,0)
 D DEMOG
"RTN","DGDEATH",59,0)
 D LINE("")
"RTN","DGDEATH",60,0)
 S DGPCMM=$$PCMMXMY^SCAPMC25(1,DFN,,,0) ;creates xmy array
"RTN","DGDEATH",61,0)
 S DGCT=$$PCMAIL^SCMCMM(DFN,"DGTEXT",DT)
"RTN","DGDEATH",62,0)
 S DGB=1 D ^DGBUL S X=DGDEATH
"RTN","DGDEATH",63,0)
 K DGCT,DGDEATH D KILL^DGPATV
"RTN","DGDEATH",64,0)
 Q
"RTN","DGDEATH",65,0)
 ;
"RTN","DGDEATH",66,0)
DEMOG ; list main demographics
"RTN","DGDEATH",67,0)
 D LINE("                    NAME: "_DGNAME)
"RTN","DGDEATH",68,0)
 D LINE("                     SSN: "_$P(SSN,"^",2))
"RTN","DGDEATH",69,0)
 D LINE("                     DOB: "_$P(DOB,"^",2))
"RTN","DGDEATH",70,0)
 I DGVETS D
"RTN","DGDEATH",71,0)
 . N DGX
"RTN","DGDEATH",72,0)
 . S DGX=$G(^DPT(DFN,.31))
"RTN","DGDEATH",73,0)
 . S DGLOCATN=$$FIND1^DIC(4,"","MX","`"_+$P(DGX,U,4)),DGLOCATN=$S(+DGLOCATN>0:$P($$NS^XUAF4(DGLOCATN),U),1:"NOT LISTED")
"RTN","DGDEATH",74,0)
 . D LINE("   CLAIM FOLDER LOCATION: "_$S($D(DGLOCATN):DGLOCATN,1:"NOT LISTED"))
"RTN","DGDEATH",75,0)
 . D LINE("            CLAIM NUMBER: "_$S($P(DGX,"^",3)]"":$P(DGX,"^",3),1:"NOT LISTED"))
"RTN","DGDEATH",76,0)
 D LINE("   COORDINATING MASTER OF RECORD: "_DGCMOR)
"RTN","DGDEATH",77,0)
 D GETS^DIQ(2,DFN_",",".351;.353;.354;.355","E","DTHINFO")
"RTN","DGDEATH",78,0)
 S DEATHVAL=$G(DTHINFO(2,DFN_",",.351,"E"))
"RTN","DGDEATH",79,0)
 S DEATHVAL=$$FMTE^XLFDT(DEATHVAL),DEATHVAL=$S(DEATHVAL]"":DEATHVAL,1:"UNKNOWN")
"RTN","DGDEATH",80,0)
 S SOURCE=$G(DTHINFO(2,DFN_",",.353,"E"))
"RTN","DGDEATH",81,0)
 S DELTM=$G(DTHINFO(2,DFN_",",.354,"E"))
"RTN","DGDEATH",82,0)
 S DELBY=$G(DTHINFO(2,DFN_",",.355,"E"))
"RTN","DGDEATH",83,0)
 D LINE("")
"RTN","DGDEATH",84,0)
 D LINE("             LAST EDITED BY: "_DELBY)
"RTN","DGDEATH",85,0)
 D LINE("    DATE/TIME LAST MODIFIED: "_DELTM)
"RTN","DGDEATH",86,0)
 D LINE("     SOURCE OF NOTIFICATION: "_$S(SOURCE="":"UNDEFINED",1:SOURCE))
"RTN","DGDEATH",87,0)
 ;K DEATHVAL,SOURCE,DELTM,DELBY
"RTN","DGDEATH",88,0)
 Q
"RTN","DGDEATH",89,0)
 ;
"RTN","DGDEATH",90,0)
LINE(X) ; add line contained in X to array
"RTN","DGDEATH",91,0)
 S DGCT=DGCT+1
"RTN","DGDEATH",92,0)
 S DGTEXT(DGCT,0)=X
"RTN","DGDEATH",93,0)
 Q
"RTN","DGDEATH",94,0)
DSBULL ;
"RTN","DGDEATH",95,0)
 ;
"RTN","DGDEATH",96,0)
 S DFN=DA
"RTN","DGDEATH",97,0)
 I $D(DGPMDA) D  Q
"RTN","DGDEATH",98,0)
 .S DISTYPE=$P($G(^DGPM(DGPMDA,0)),"^",18)
"RTN","DGDEATH",99,0)
 .I $G(^DG(405.2,DISTYPE,0))["DEATH" D
"RTN","DGDEATH",100,0)
 ..S FDA(2,DFN_",",.353)=1 D FILE^DIE(,"FDA","BWFERR")
"RTN","DGDEATH",101,0)
 ..D DISCHRGE,XFR
"RTN","DGDEATH",102,0)
 I $D(^TMP("DEATH",$J)) Q
"RTN","DGDEATH",103,0)
 D DISCHRGE,XFR
"RTN","DGDEATH",104,0)
 Q
"RTN","DGDEATH",105,0)
DKBULL ;
"RTN","DGDEATH",106,0)
 S DFN=DA
"RTN","DGDEATH",107,0)
 S FDA(2,DFN_",",.353)="@" D FILE^DIE(,"FDA",)
"RTN","DGDEATH",108,0)
 D DISCHRGE,DEL
"RTN","DGDEATH",109,0)
 Q
"RTN","DGDEATH",110,0)
DISCHRGE ;
"RTN","DGDEATH",111,0)
 ; If the patient is being discharged, determine values needed for 
"RTN","DGDEATH",112,0)
 ; Source of Notification and Date/Time last entered.
"RTN","DGDEATH",113,0)
 ;
"RTN","DGDEATH",114,0)
 I '$D(DGNOW) S DGNOW=$$HTFM^XLFDT($H)
"RTN","DGDEATH",115,0)
 S FDA(2,DFN_",",.354)=DGNOW
"RTN","DGDEATH",116,0)
 S FDA(2,DFN_",",.355)=DUZ
"RTN","DGDEATH",117,0)
 D FILE^DIE(,"FDA",)
"RTN","DGDEATH",118,0)
 Q
"RTN","DGRP2")
0^3^B11222193
"RTN","DGRP2",1,0)
DGRP2 ;ALB/MRL - REGISTRATION SCREEN 2/CONTACT INFORMATION ;06 JUN 88@2300
"RTN","DGRP2",2,0)
 ;;5.3;Registration;**415,545**;Aug 13, 1993
"RTN","DGRP2",3,0)
 S DGRPS=2 D H^DGRPU F I=0,.24,57,1010.15 S DGRP(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","DGRP2",4,0)
 S (Z,DGRPW)=1 D WW^DGRPV W "     Sex: " S X=$P(DGRP(0),"^",2),Z=$S(X="M":"MALE",X="F":"FEMALE",1:DGRPU),Z1=31 D WW1^DGRPV
"RTN","DGRP2",5,0)
 S DGD=$$DISP^DG1010P0(DGRP(0),11,0,1),DGNOCITY=DGUNK,DGD1=$$POINT^DG1010P0(DGRP(0),12,5,1,0,1)
"RTN","DGRP2",6,0)
 W "POB: ",$E($S((DGNOCITY&DGUNK):"UNANSWERED",1:DGD_$S(($L(DGD)):", ",1:"")_DGD1),1,29)
"RTN","DGRP2",7,0)
 S DGRPX=DGRP(0)
"RTN","DGRP2",8,0)
 W !?4,"Marital: ",$S($D(^DIC(11,+$P(DGRPX,"^",5),0)):$E($P(^(0),"^",1),1,28),1:DGRPU),?41,"Father: ",$S($P(DGRP(.24),"^",1)]"":$E($P(DGRP(.24),"^",1),1,29),1:DGRPU)
"RTN","DGRP2",9,0)
 W !?3,"Religion: ",$S($D(^DIC(13,+$P(DGRPX,"^",8),0)):$P(^(0),"^",1),1:DGRPU),?41,"Mother: ",$S($P(DGRP(.24),"^",2)]"":$E($P(DGRP(.24),"^",2),1,29),1:DGRPU)
"RTN","DGRP2",10,0)
 S X=$P(DGRP(57),"^",4),X=$S(X']"":DGRPU,X="X":"NOT APPLICABLE",X=1:"PARA,",X=2:"QUAD,",X=3:"PARA,NON",1:"QUAD,NON"),X=$S("QD"[$E(X):X_"TRAUMATIC",1:X) W !?8,"SCI: ",X
"RTN","DGRP2",11,0)
 W ?35,"Mom's Maiden: ",$S($P(DGRP(.24),"^",3)]"":$E($P(DGRP(.24),"^",3),1,29),1:DGRPU)
"RTN","DGRP2",12,0)
 W ! S Z=2 D WW^DGRPV W " Previous Care Date      Location of Previous Care",!?4,"------------------      -------------------------" S DGRPX=DGRP(1010.15) I $P(DGRPX,"^",5)'="Y" S X="NONE INDICATED" W !?4,X,?28,X
"RTN","DGRP2",13,0)
 E  F I=1:1:4 S I1=$P(DGRPX,"^",I) X "I I#2 S Y=I1 X:Y]"""" ^DD(""DD"") W !?4,$S(Y]"""":Y,1:DGRPU)" I '(I#2) W ?28,$S($D(^DIC(4,+I1,0)):$P(^(0),"^",1),1:DGRPU)
"RTN","DGRP2",14,0)
 W ! S Z=3 D WW^DGRPV W " Ethnicity: " D
"RTN","DGRP2",15,0)
 .I '$O(^DPT(DFN,.06,0)) W "UNANSWERED" Q
"RTN","DGRP2",16,0)
 .N NODE,NUM,ETHNIC
"RTN","DGRP2",17,0)
 .S I=0
"RTN","DGRP2",18,0)
 .F NUM=0:1 S I=+$O(^DPT(DFN,.06,I)) Q:'I  D
"RTN","DGRP2",19,0)
 ..S NODE=$G(^DPT(DFN,.06,I,0))
"RTN","DGRP2",20,0)
 ..S X=$P($G(^DIC(10.2,+NODE,0)),"^",1)
"RTN","DGRP2",21,0)
 ..S ETHNIC=$S(X="":"?????",1:X)
"RTN","DGRP2",22,0)
 ..S X=$P($G(^DIC(10.3,+$P(NODE,"^",2),0)),"^",2)
"RTN","DGRP2",23,0)
 ..S ETHNIC=ETHNIC_" ("_$S(X="":"?",1:X)_")"
"RTN","DGRP2",24,0)
 ..I NUM S ETHNIC=", "_ETHNIC
"RTN","DGRP2",25,0)
 ..I ($X+$L(ETHNIC))>IOM D  W !?15
"RTN","DGRP2",26,0)
 ...F  S X=$P(ETHNIC," ",1)_" " Q:($X+$L(X))>IOM  W X S ETHNIC=$P(ETHNIC," ",2,999)
"RTN","DGRP2",27,0)
 ..W ETHNIC
"RTN","DGRP2",28,0)
 W !?9,"Race: " D
"RTN","DGRP2",29,0)
 .I '$O(^DPT(DFN,.02,0)) W "UNANSWERED" Q
"RTN","DGRP2",30,0)
 .N NODE,NUM,RACE
"RTN","DGRP2",31,0)
 .S I=0
"RTN","DGRP2",32,0)
 .F NUM=0:1 S I=+$O(^DPT(DFN,.02,I)) Q:'I  D
"RTN","DGRP2",33,0)
 ..S NODE=$G(^DPT(DFN,.02,I,0))
"RTN","DGRP2",34,0)
 ..S X=$P($G(^DIC(10,+NODE,0)),"^",1)
"RTN","DGRP2",35,0)
 ..S RACE=$S(X="":"?????",1:X)
"RTN","DGRP2",36,0)
 ..S X=$P($G(^DIC(10.3,+$P(NODE,"^",2),0)),"^",2)
"RTN","DGRP2",37,0)
 ..S RACE=RACE_" ("_$S(X="":"?",1:X)_")"
"RTN","DGRP2",38,0)
 ..I NUM S RACE=", "_RACE
"RTN","DGRP2",39,0)
 ..I ($X+$L(RACE))>IOM D  W !?15
"RTN","DGRP2",40,0)
 ...F  S X=$P(RACE," ",1)_" " Q:($X+$L(X))>IOM  W X S RACE=$P(RACE," ",2,999)
"RTN","DGRP2",41,0)
 ..W RACE
"RTN","DGRP2",42,0)
 D GETS^DIQ(2,DFN_",",".351;.353;.354;.355","E","PDTHINFO")
"RTN","DGRP2",43,0)
 W !!
"RTN","DGRP2",44,0)
 W "<4> Date of Death Information"
"RTN","DGRP2",45,0)
 W !,?5,"Date of Death: ",$G(PDTHINFO(2,DFN_",",.351,"E"))
"RTN","DGRP2",46,0)
 W !,?5,"Date of Death Source of Notification: ",$G(PDTHINFO(2,DFN_",",.353,"E"))
"RTN","DGRP2",47,0)
 W !,?5,"Date of Death Last Updated Date/Time: ",$G(PDTHINFO(2,DFN_",",.354,"E"))
"RTN","DGRP2",48,0)
 W !,?5,"Date of Death Last Edited By: ",$G(PDTHINFO(2,DFN_",",.355,"E")),!
"RTN","DGRP2",49,0)
 K PDTHINFO
"RTN","DGRP2",50,0)
 G ^DGRPP
"RTN","DGRPD")
0^2^B57569105
"RTN","DGRPD",1,0)
DGRPD ;ALB/MRL/MLR/JAN/LBD-PATIENT INQUIRY (NEW) ; 05/12/2003 4:05pm
"RTN","DGRPD",2,0)
 ;;5.3;Registration;**109,124,121,57,161,149,286,358,436,445,489,498,506,513,518,550,545**;Aug 13, 1993
"RTN","DGRPD",3,0)
 ;  *286*  Newing variables X,Y in OKLINE subroutine
"RTN","DGRPD",4,0)
 ;  *358*  If a patient is on a domiciliary ward, don't display MEANS
"RTN","DGRPD",5,0)
 ;         TEST required/Medication Copayment Exemption messages
"RTN","DGRPD",6,0)
 ;  *436*  If an inpatient is not on a domiciliary ward, don't display
"RTN","DGRPD",7,0)
 ;         Medication Copayment Exemption message
"RTN","DGRPD",8,0)
 ;  *545*  Add death information near the remarks field
"RTN","DGRPD",9,0)
 ;
"RTN","DGRPD",10,0)
SEL K DFN,DGRPOUT W ! S DIC="^DPT(",DIC(0)="AEQMZ" D ^DIC G Q:Y'>0 S DFN=+Y N Y W ! S DIR(0)="E" D ^DIR G SEL:$D(DTOUT)!($D(DUOUT)) D EN G SEL
"RTN","DGRPD",11,0)
 ;
"RTN","DGRPD",12,0)
EN ;call to display patient inquiry - input DFN
"RTN","DGRPD",13,0)
 ;MPI/PD CHANGE
"RTN","DGRPD",14,0)
 S DGCMOR="UNSPECIFIED",DGMPI=$G(^DPT(+DFN,"MPI"))
"RTN","DGRPD",15,0)
 S DGLOCATN=$$FIND1^DIC(4,"","MX","`"_+$P(DGMPI,U,3)),DGLOCATN=$S(+DGLOCATN>0:$P($$NS^XUAF4(DGLOCATN),U),1:"NOT LISTED")
"RTN","DGRPD",16,0)
 I $D(DGMPI),$D(DGLOCATN) S DGCMOR=$P(DGLOCATN,"^")
"RTN","DGRPD",17,0)
 ;END MPI/PD CHANGE
"RTN","DGRPD",18,0)
 K DGRPOUT,DGHOW S DGABBRV=$S($D(^DG(43,1,0)):+$P(^(0),"^",38),1:0),DGRPU="UNSPECIFIED" D DEM^VADPT,HDR F I=0,.11,.13,.121,.31,.32,.36,.361,.141 S DGRP(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","DGRPD",19,0)
 S DGAD=.11,(DGA1,DGA2)=1 D A^DGRPU S DGTMPAD=0 I $P(DGRP(.121),"^",9)="Y" S DGTMPAD=$S('$P(DGRP(.121),"^",8):1,$P(DGRP(.121),"^",8)'<DT:1,1:0) I DGTMPAD S DGAD=.121,DGA1=1,DGA2=2 D A^DGRPU
"RTN","DGRPD",20,0)
 W ?1,"Address: ",$S($D(DGA(1)):DGA(1),1:"NONE ON FILE"),?40,"Temporary: ",$S($D(DGA(2)):DGA(2),1:"NO TEMPORARY ADDRESS")
"RTN","DGRPD",21,0)
 S I=2 F I1=0:0 S I=$O(DGA(I)) Q:I=""  W:(I#2)!($X>50) !?10 W:'(I#2) ?51 W DGA(I)
"RTN","DGRPD",22,0)
 S DGCC=+$P(DGRP(.11),U,7),DGST=+$P(DGRP(.11),U,5),DGCC=$S($D(^DIC(5,DGST,1,DGCC,0)):$E($P(^(0),U,1),1,20)_$S($P(^(0),U,3)]"":" ("_$P(^(0),U,3)_")",1:""),1:DGRPU) W !?2,"County: ",DGCC
"RTN","DGRPD",23,0)
 S X="NOT APPLICABLE" I DGTMPAD S Y=$P(DGRP(.121),U,7) X:Y]"" ^DD("DD") S X=$S(Y]"":Y,1:DGRPU)_"-",Y=$P(DGRP(.121),U,8) X:Y]"" ^DD("DD") S X=X_$S(Y]"":Y,1:DGRPU)
"RTN","DGRPD",24,0)
 W ?42,"From/To: ",X,!?3,"Phone: ",$S($P(DGRP(.13),U,1)]"":$P(DGRP(.13),U,1),1:DGRPU),?44,"Phone: ",$S('DGTMPAD:X,$P(DGRP(.121),U,10)]"":$P(DGRP(.121),U,10),1:DGRPU) K DGTMPAD
"RTN","DGRPD",25,0)
 W !?2,"Office: ",$S($P(DGRP(.13),U,2)]"":$P(DGRP(.13),U,2),1:DGRPU)
"RTN","DGRPD",26,0)
 W !,"Bad Addr: ",$$EXTERNAL^DILFD(2,.121,"",$$BADADR^DGUTL3(+DFN))
"RTN","DGRPD",27,0)
 D CA
"RTN","DGRPD",28,0)
 I 'DGABBRV W !!?4,"POS: ",$S($D(^DIC(21,+$P(DGRP(.32),"^",3),0)):$P(^(0),"^",1),1:DGRPU),?42,"Claim #: ",$S($P(DGRP(.31),"^",3)]"":$P(DGRP(.31),"^",3),1:"UNSPECIFIED")
"RTN","DGRPD",29,0)
 I 'DGABBRV W !?2,"Relig: ",$S($D(^DIC(13,+$P(DGRP(0),"^",8),0)):$P(^(0),"^",1),1:DGRPU),?46,"Sex: ",$S($P(VADM(5),"^",2)]"":$P(VADM(5),"^",2),1:"UNSPECIFIED")
"RTN","DGRPD",30,0)
 I 'DGABBRV W ! D
"RTN","DGRPD",31,0)
 .N RACE,ETHNIC,PTR,VAL,X,DIWL,DIWR,DIWF
"RTN","DGRPD",32,0)
 .K ^UTILITY($J,"W")
"RTN","DGRPD",33,0)
 .S PTR=0 F  S PTR=+$O(^DPT(DFN,.02,PTR)) Q:'PTR  D
"RTN","DGRPD",34,0)
 ..S VAL=+$G(^DPT(DFN,.02,PTR,0))
"RTN","DGRPD",35,0)
 ..Q:$$INACTIVE^DGUTL4(VAL,1)
"RTN","DGRPD",36,0)
 ..S VAL=$$PTR2TEXT^DGUTL4(VAL,1) S:+$O(^DPT(DFN,.02,PTR)) VAL=VAL_", "
"RTN","DGRPD",37,0)
 ..S X=VAL,DIWL=0,DIWR=30,DIWF="" D ^DIWP
"RTN","DGRPD",38,0)
 .M RACE=^UTILITY($J,"W",0) S:$G(RACE(1,0))="" RACE(1,0)="UNANSWERED"
"RTN","DGRPD",39,0)
 .K ^UTILITY($J,"W")
"RTN","DGRPD",40,0)
 .S PTR=0 F  S PTR=+$O(^DPT(DFN,.06,PTR)) Q:'PTR  D
"RTN","DGRPD",41,0)
 ..S VAL=+$G(^DPT(DFN,.06,PTR,0))
"RTN","DGRPD",42,0)
 ..Q:$$INACTIVE^DGUTL4(VAL,2)
"RTN","DGRPD",43,0)
 ..S VAL=$$PTR2TEXT^DGUTL4(VAL,2) S:+$O(^DPT(DFN,.06,PTR)) VAL=VAL_", "
"RTN","DGRPD",44,0)
 ..S X=VAL,DIWL=0,DIWR=30,DIWF="" D ^DIWP
"RTN","DGRPD",45,0)
 .M ETHNIC=^UTILITY($J,"W",0) S:$G(ETHNIC(1,0))="" ETHNIC(1,0)="UNANSWERED"
"RTN","DGRPD",46,0)
 .K ^UTILITY($J,"W")
"RTN","DGRPD",47,0)
 .W ?3,"Race: ",RACE(1,0),?40,"Ethnicity: ",ETHNIC(1,0)
"RTN","DGRPD",48,0)
 .F X=2:1 Q:'$D(RACE(X,0))&'$D(ETHNIC(X,0))  W !,?9,$G(RACE(X,0)),?51,$G(ETHNIC(X,0))
"RTN","DGRPD",49,0)
 I '$$OKLINE(16) G Q
"RTN","DGRPD",50,0)
 S X1=DGRP(.36),X=$P(DGRP(.361),"^",1) W !!,"Primary Eligibility: ",$S($D(^DIC(8,+X1,0)):$P(^(0),"^",1)_" ("_$S(X="V":"VERIFIED",X="P":"PENDING VERIFICATION",X="R":"PENDING REVERIFICATION",1:"NOT VERIFIED")_")",1:DGRPU)
"RTN","DGRPD",51,0)
 W !,"Other Eligibilities: " F I=0:0 S I=$O(^DIC(8,I)) Q:'I  I $D(^DIC(8,I,0)),I'=+X1 S X=$P(^(0),"^",1)_", " I $D(^DPT("AEL",DFN,I)) W:$X+$L(X)>79 !?21 W X
"RTN","DGRPD",52,0)
 ;
"RTN","DGRPD",53,0)
 ;display the catastrophic disability review date if there is one
"RTN","DGRPD",54,0)
 D CATDIS
"RTN","DGRPD",55,0)
 ;
"RTN","DGRPD",56,0)
 I $G(DGPRFLG)=1 G Q:'$$OKLINE(19) D
"RTN","DGRPD",57,0)
 . N DGPDT,DGPTM
"RTN","DGRPD",58,0)
 . W !,$$REPEAT^XLFSTR("-",78)
"RTN","DGRPD",59,0)
 . S DGPDT="",DGPDT=$O(^DGS(41.41,"ADC",DFN,DGPDT),-1)
"RTN","DGRPD",60,0)
 . W !,"[PRE-REGISTER DATE:]  "_$S(DGPDT]"":$$FMTE^XLFDT(DGPDT,"1D"),1:"NONE ON FILE")
"RTN","DGRPD",61,0)
 . S DGPTM=$$OUTPTTM^SDUTL3(DFN)
"RTN","DGRPD",62,0)
 . I $P(DGPTM,U,2)]"" W !,"[PRIMARY CARE TEAM:] "_$P(DGPTM,U,2)
"RTN","DGRPD",63,0)
 . W !,$$REPEAT^XLFSTR("-",78)
"RTN","DGRPD",64,0)
 ; Check if patient is an inpatient and on a DOM ward
"RTN","DGRPD",65,0)
 ; If inpatient is on a DOM ward, don't display MT or CP messages
"RTN","DGRPD",66,0)
 ; If inpatient is NOT on a DOM ward, don't display CP message
"RTN","DGRPD",67,0)
 N DGDOM,DGDOM1,VAHOW,VAROOT,VAINDT,VAIP,VAERR
"RTN","DGRPD",68,0)
 G Q:'$$OKLINE(14)
"RTN","DGRPD",69,0)
 D DOM^DGMTR
"RTN","DGRPD",70,0)
 I '$G(DGDOM) D
"RTN","DGRPD",71,0)
 .D DIS^DGMTU(DFN)
"RTN","DGRPD",72,0)
 .D IN5^VADPT
"RTN","DGRPD",73,0)
 .I $G(VAIP(1))="" D DISP^IBARXEU(DFN,DT,3,1)
"RTN","DGRPD",74,0)
 ;I 'DGABBRV,$E(IOST,1,2)="C-" F I=$Y:1:20 W !
"RTN","DGRPD",75,0)
 D DIS^EASECU(DFN)   ;Added for LTC III (DG*5.3*518)
"RTN","DGRPD",76,0)
 S VAIP("L")=""
"RTN","DGRPD",77,0)
 I $$OKLINE(14) D INP
"RTN","DGRPD",78,0)
 I '$G(DGRPOUT),($$OKLINE(17)) D SA
"RTN","DGRPD",79,0)
 ;MPI/PD CHANGE
"RTN","DGRPD",80,0)
Q D KVA^VADPT K %DT,D0,D1,DGA,DGA1,DGA2,DGABBRV,DGAD,DGCC,DGCMOR,DGDOM,DGLOCATN,DGMPI,DGRP,DGRPU,DGS,DGST,DGXFR0,DIC,DIR,DTOUT,DUOUT,DIRUT,DIROUT,I,I1,L,LDM,POP,SDCT,VA,X,X1,Y Q
"RTN","DGRPD",81,0)
CA ;Confidential Address
"RTN","DGRPD",82,0)
 W !!?1,"Confidential Address:  ",?44,"Confidential Address Categories:"
"RTN","DGRPD",83,0)
 N DGCABEG,DGCAEND,DGA,DGARRAY,DGERROR
"RTN","DGRPD",84,0)
 S DGCABEG=$P(DGRP(.141),U,7),DGCAEND=$P(DGRP(.141),U,8)
"RTN","DGRPD",85,0)
 I 'DGCABEG!(DGCABEG>DT)!(DGCAEND&(DGCAEND<DT)) D  Q
"RTN","DGRPD",86,0)
 .W !?9,"NO CONFIDENTIAL ADDRESS"
"RTN","DGRPD",87,0)
 .W !?1,"From/To: NOT APPLICABLE"
"RTN","DGRPD",88,0)
 S DGAD=.141,(DGA1,DGA2)=1
"RTN","DGRPD",89,0)
 D AL^DGRPU(30)
"RTN","DGRPD",90,0)
 D GETS^DIQ(2,DFN,".141*,","E","DGARRAY","DGERROR")
"RTN","DGRPD",91,0)
 ;Format Confidential Address categories
"RTN","DGRPD",92,0)
 N DGIEN,DGCAST
"RTN","DGRPD",93,0)
 S DGIEN=0
"RTN","DGRPD",94,0)
 S DGA2=2
"RTN","DGRPD",95,0)
 F  S DGIEN=$O(DGARRAY(2.141,DGIEN)) Q:'DGIEN  D
"RTN","DGRPD",96,0)
 .S DGA(DGA2)=DGARRAY(2.141,DGIEN,.01,"E")
"RTN","DGRPD",97,0)
 .S DGCAST=DGARRAY(2.141,DGIEN,1,"E")
"RTN","DGRPD",98,0)
 .S DGA(DGA2)=DGA(DGA2)_"("_$S(DGCAST="YES":"Active",1:"Inactive")_")"
"RTN","DGRPD",99,0)
 .S DGA2=DGA2+2
"RTN","DGRPD",100,0)
 S I=0 F I1=0:0 S I=$O(DGA(I)) Q:I=""  W:(I#2)!($X>43) !?9 W:'(I#2) ?44 W DGA(I)
"RTN","DGRPD",101,0)
 W !?1,"From/To:  ",$$FMTE^XLFDT(DGCABEG)_"-"_$S(DGCAEND'="":$$FMTE^XLFDT(DGCAEND),1:"UNANSWERED")
"RTN","DGRPD",102,0)
 Q
"RTN","DGRPD",103,0)
HDR I '$D(IOF) S IOP="HOME" D ^%ZIS K IOP
"RTN","DGRPD",104,0)
 ;MPI/PD CHANGE
"RTN","DGRPD",105,0)
 W @IOF,!,$P(VADM(1),"^",1),?40,$P(VADM(2),"^",2),?65,$P(VADM(3),"^",2) S X="",$P(X,"=",78)="" W !,X,!?15,"COORDINATING MASTER OF RECORD: ",DGCMOR,! Q
"RTN","DGRPD",106,0)
 ;END MPI/PD CHANGE
"RTN","DGRPD",107,0)
INP S VAIP("D")="L" D INP^DGPMV10
"RTN","DGRPD",108,0)
 S DGPMT=0
"RTN","DGRPD",109,0)
 D CS^DGPMV10 K DGPMT,DGPMIFN K:'$D(DGSWITCH) DGPMVI,DGPMDCD Q
"RTN","DGRPD",110,0)
SA F I=0:0 S I=$O(^DGS(41.1,"B",DFN,I)) G CL:'I S X=^DGS(41.1,I,0) I $P(X,"^",2)>(DT-1),$P(X,"^",13)']"",'$P(X,"^",17) S L=$P(X,"^",2) D:$$OKLINE(17) SAA Q:$G(DGRPOUT)
"RTN","DGRPD",111,0)
 Q
"RTN","DGRPD",112,0)
SAA ;Scheduled Admit Data
"RTN","DGRPD",113,0)
 W !!?14,"Scheduled Admit"
"RTN","DGRPD",114,0)
 W:$D(^DIC(42,+$P(X,U,8),0)) " on ward "_$P(^(0),U)
"RTN","DGRPD",115,0)
 W:$D(^DIC(45.7,+$P(X,U,9),0)) " for treating specialty "_$P(^(0),U)
"RTN","DGRPD",116,0)
 W " on "_$$FMTE^XLFDT(L,"5DZ")
"RTN","DGRPD",117,0)
 Q  ;SAA
"RTN","DGRPD",118,0)
 ;
"RTN","DGRPD",119,0)
CL G FA:$O(^DPT(DFN,"DE",0))="" S SDCT=0 F I=0:0 S I=$O(^DPT(DFN,"DE",I)) Q:'I  I $D(^(I,0)),$P(^(0),"^",2)'="I",$O(^(0)) S SDCT=SDCT+1 W:SDCT=1 !!,"Currently enrolled in " W:$X>50 !?22 W $S($D(^SC(+^(0),0)):$P(^(0),"^",1)_", ",1:"")
"RTN","DGRPD",120,0)
 ;
"RTN","DGRPD",121,0)
FA G:'$$OKLINE(20) RMK
"RTN","DGRPD",122,0)
 S CT=0 W !!,"Future Appointments: " I $O(^DPT(DFN,"S",DT))'>0 W "NONE" G RMK
"RTN","DGRPD",123,0)
 W ?22,"Date",?33,"Time",?39,"Clinic",!?22 F I=22:1:75 W "="
"RTN","DGRPD",124,0)
 F FA=DT:0 S FA=$O(^DPT(DFN,"S",FA)) G RMK:'FA S L=^(FA,0),C=+L I $P(L,"^",2)'["C" D COV D  Q:CT>5
"RTN","DGRPD",125,0)
 .N DGAPPT
"RTN","DGRPD",126,0)
 .S DGAPPT=$$FMTE^XLFDT($E(FA,1,12),"5Z")
"RTN","DGRPD",127,0)
 .W !?22,$P(DGAPPT,"@")
"RTN","DGRPD",128,0)
 .W ?33,$P(DGAPPT,"@",2)
"RTN","DGRPD",129,0)
 .W ?39,$P($S($D(^SC(C,0)):^(0),1:""),"^")," ",COV
"RTN","DGRPD",130,0)
 .Q
"RTN","DGRPD",131,0)
 I $O(^DPT(DFN,"S",FA))>0 W !,"See Scheduling options for additional appointments."
"RTN","DGRPD",132,0)
RMK I '$G(DGRPOUT),($$OKLINE(21)) W !!,"Remarks: ",$P(^DPT(DFN,0),"^",10)
"RTN","DGRPD",133,0)
 D GETS^DIQ(2,DFN_",",".351;.353;.354;.355","E","PDTHINFO")
"RTN","DGRPD",134,0)
 W !!
"RTN","DGRPD",135,0)
 W "Date of Death Information"
"RTN","DGRPD",136,0)
 W !,?5,"Date of Death: ",$G(PDTHINFO(2,DFN_",",.351,"E"))
"RTN","DGRPD",137,0)
 W !,?5,"Date of Death Source of Notification: ",$G(PDTHINFO(2,DFN_",",.353,"E"))
"RTN","DGRPD",138,0)
 W !,?5,"Date of Death Last Updated Date/Time: ",$G(PDTHINFO(2,DFN_",",.354,"E"))
"RTN","DGRPD",139,0)
 W !,?5,"Date of Death Last Edited By: ",$G(PDTHINFO(2,DFN_",",.355,"E")),!
"RTN","DGRPD",140,0)
 K ADM,L,TRN,DIS,SSN,FA,C,COV,NOW,CT,DGD,DGD1,I,PDTHINFO ;Y killed after dghinqky 
"RTN","DGRPD",141,0)
 Q
"RTN","DGRPD",142,0)
COV S COV=$S($P(L,"^",7)=7:" (Collateral) ",1:""),COV=COV_$S($P(L,"^",2)["NT":" * NO ACTION TAKEN *",$P(L,"^",2)["N":" * NO-SHOW *",1:""),CT=CT+1 Q
"RTN","DGRPD",143,0)
 Q
"RTN","DGRPD",144,0)
 ;
"RTN","DGRPD",145,0)
OREN S XQORQUIT=1 Q:'$D(ORVP)  S DFN=+ORVP D EN R !!,"Press RETURN to CONTINUE: ",X:DTIME
"RTN","DGRPD",146,0)
 Q
"RTN","DGRPD",147,0)
OKLINE(DGLINE) ;DOES PAUSE/HEADER IF $Y EXCEEDS DGLINE
"RTN","DGRPD",148,0)
 ;
"RTN","DGRPD",149,0)
 ;IN:   DGLINE --MAX LINE COUNT W/O PAUSE
"RTN","DGRPD",150,0)
 ;OUT:  DGLINE[RETURNED] -- 0 IF TIMEOUT/UP ARROW
"RTN","DGRPD",151,0)
 ;      DGRPOUT[SET]     -- 1 IF "
"RTN","DGRPD",152,0)
 N X,Y  ;**286** MLR 09/25/00  Newing X & Y variables prior to ^DIR
"RTN","DGRPD",153,0)
 I $G(IOST)["P-" Q DGLINE ; if printer, quit
"RTN","DGRPD",154,0)
 I $Y>DGLINE N DIR S DIR(0)="E" D ^DIR D:Y HDR I 'Y S DGRPOUT=1,DGLINE=0
"RTN","DGRPD",155,0)
 Q DGLINE
"RTN","DGRPD",156,0)
 ;
"RTN","DGRPD",157,0)
CATDIS ;
"RTN","DGRPD",158,0)
 ;displays catastrophic disabity review date if there is one
"RTN","DGRPD",159,0)
 N DGCDIS
"RTN","DGRPD",160,0)
 I $$GET^DGENCDA(DFN,.DGCDIS) D
"RTN","DGRPD",161,0)
 .Q:'DGCDIS("REVDTE")
"RTN","DGRPD",162,0)
 .W !!,"Catastrophically Disabled Review Date: ",$$FMTE^XLFDT(DGCDIS("REVDTE"),1)
"RTN","DGRPD",163,0)
 Q
"RTN","DGRPD",164,0)
 ;
"RTN","DGRPH")
0^5^B26987960
"RTN","DGRPH",1,0)
DGRPH ;ALB/MRL - REGISTRATION HELP ROUTINE ;06 JUN 88@2300
"RTN","DGRPH",2,0)
 ;;5.3;Registration;**114,343,397,415,489,545**;Aug 13, 1993
"RTN","DGRPH",3,0)
 S DGRPH="" D H^DGRPU K DGRPH W !,"Enter '^' to stop the display ",$S(DGRPV:"",1:"and edit "),"of data, '^N' to jump to screen #N (see",!,"listing below), <RET> to continue on to the next available screen" I DGRPV W "." G M
"RTN","DGRPH",4,0)
 W " or enter",!,"the field group number(s) you wish to edit using commas and dashes as",!,"delimiters.  Those groups enclosed in brackets ""[]"" are editable while those",!,"enclosed in arrows ""<>"" are not."
"RTN","DGRPH",5,0)
 W "  Enter 'ALL' to edit all editable data",!,"elements on the screen."
"RTN","DGRPH",6,0)
M I DGRPS=9,DGRPSEL="V" W !!,"You may precede your selection with 'V' to denote veteran."
"RTN","DGRPH",7,0)
 I DGRPS=9,DGRPSEL]"V" W !!,"To edit a specific column, enter 'V'",$S($D(DGREL("S")):", 'S'",1:""),$S($D(DGREL("D")):", 'D'",1:"")," in front of the selected items."
"RTN","DGRPH",8,0)
 S Z="DATA GROUPS ON SCREEN "_DGRPS,DGRPCM=1 W ! D WW^DGRPV S DGRPCM=0 D:DGRPS=1.1 A1 D:DGRPS'=1.1 @DGRPS D:$S(DGRPS<11:1,DGRPS=14:1,1:0) W D S W ! F I=$Y:1:20 W !
"RTN","DGRPH",9,0)
 ;S Z="Press RETURN key",DGRPCM=1 D WW^DGRPV S DGRPCM=0 W " to EXIT Screen ",DGRPS," HELP " R X:DTIME S X="" Q
"RTN","DGRPH",10,0)
 S DGRPW=0 W "Press " S Z="<RETURN>",DGRPCM=1 D WW^DGRPV W " KEY " S Z="TO EXIT" D WW^DGRPV W " SCREEN ",DGRPS," " S Z="HELP" D WW^DGRPV W " " R X:DTIME S (DGRPCM,DGRPW)=0 Q
"RTN","DGRPH",11,0)
1 S X="Name, SSN, DOB^Alias Name & SSN (if applicable)^Remarks concerning this patient^Home Address, Phone & Work Phone^Temporary Address, Dates, Phone" Q
"RTN","DGRPH",12,0)
A1 S X="Confidential Address,Dates and Types" Q
"RTN","DGRPH",13,0)
2 S X="Sex, POB, Parents, etc.^Dates/Locations of Previous Care^Race and Ethnicity^Date of Death Information" Q
"RTN","DGRPH",14,0)
3 S X="Primary Next-of-Kin^Secondary Next-of-Kin^Primary Emergency Contact^Secondary Emergency Contact^Designee to receive personal effects" Q
"RTN","DGRPH",15,0)
4 S X="Applicant Employer, Address^Spouses Employer, Address" Q
"RTN","DGRPH",16,0)
5 S X="Unexpired Insurance Policies^Eligibile for Medicaid" Q
"RTN","DGRPH",17,0)
6 S X="Service History^Prisoner of War^Combat^Vietnam Service^Agent Orange Exposure^IONizing Radiation Exposure^"
"RTN","DGRPH",18,0)
 S X=X_"Lebanon Service^Grenada Service^Panama Service^Persian Gulf Service^Somalia Service^Environmental Contaminants Exposure^Military Retirement/Disability^Dental History^Yugoslavia Service^Purple Heart Recipient^"
"RTN","DGRPH",19,0)
 S X=X_"Nose/Throat Radium Treatment"
"RTN","DGRPH",20,0)
 Q
"RTN","DGRPH",21,0)
7 S X="Patient Type, SC Data, Claim Info^VA Monetary Benefits^POS, Eligibility Code(s)^SC Conditions relayed by applicant" Q
"RTN","DGRPH",22,0)
8 S X="Spouse's Demographic Info^Dependents' Demographic Info" Q
"RTN","DGRPH",23,0)
9 S X="Social Security^U.S. Civil Service^U.S. Railroad Retirement^Military Retirement^Unemployment^Other Retirement^Total Employment Income^Interest,Dividend,Annuity^Workers Comp or Black Lung^Other Income" Q
"RTN","DGRPH",24,0)
10 S X="Ineligible Patient Information^Missing Patient Information" Q
"RTN","DGRPH",25,0)
11 S X="Eligibility Verification^Monetary Benefits Verification^Service Record Verification^Rated Disabilities (VA)" Q
"RTN","DGRPH",26,0)
12 W !,"Four most recent admission episodes on file for this applicant are displayed",!,"in inverse order." Q
"RTN","DGRPH",27,0)
13 W !,"Four most recent applications for care (registrations) are displayed in",!,"inverse order." Q
"RTN","DGRPH",28,0)
14 S X="Clinics in which actively enrolled^Pending (future) appointments" Q
"RTN","DGRPH",29,0)
15 W !,"Sponsor information is displayed for patients." Q
"RTN","DGRPH",30,0)
S W ! S Z="AVAILABLE SCREENS",DGRPCM=1 D WW^DGRPV S DGRPCM=0
"RTN","DGRPH",31,0)
 S X="Demographic^Confidential Address^Patient^Contact^Employment^Insurance^Service Record^Eligibility^Family Demographic^Income Screening^Missing/Ineligible^Eligibility Verification^"
"RTN","DGRPH",32,0)
 S X=X_"Admission Info^Application Info^Appointment Info^Sponsor Demograhics"
"RTN","DGRPH",33,0)
 ;S C=0 F I=1:1 S J=$P(X,"^",I) Q:J=""  I '$E(DGRPVV,I) S C=C+1,Z="^"_I,DGRPW=(C#2) D WW^DGRPV S Z=$S(I?1N:"  ",1:" ")_J_" Data",Z1=$S((C#2)&(I?1N):36,(C#2):35,1:1) D WW1^DGRPV:(C#2) I '(C#2) W Z
"RTN","DGRPH",34,0)
 N DGJ
"RTN","DGRPH",35,0)
 S DGJ=""
"RTN","DGRPH",36,0)
 S C=0 F I=1:1 S DGJ=$O(DGRPVV(DGJ)) Q:DGJ=""  I '$E(DGRPVV,DGJ) D
"RTN","DGRPH",37,0)
 .S C=C+1,Z="^"_DGJ,DGRPW=(C#2)
"RTN","DGRPH",38,0)
 .D WW^DGRPV
"RTN","DGRPH",39,0)
 .S Z1=$S((C#2)&(DGJ?1N):36,(C#2):35,1:1)
"RTN","DGRPH",40,0)
 .S Z=$S(DGJ?1N:"  ",1:" ")_$P(X,U,I)_" Data"
"RTN","DGRPH",41,0)
 .D WW1^DGRPV:(C#2)
"RTN","DGRPH",42,0)
 .I '(C#2) W Z
"RTN","DGRPH",43,0)
 Q
"RTN","DGRPH",44,0)
W F I=1:1 S J=$P(X,"^",I) Q:J=""  S Z=I,DGRPW=(I#2) D WW^DGRPV S Z=$S(I<10:"  ",1:" ")_J,Z1=$S((I#2)&(I>10):36,(I#2):37,1:1) D WW1^DGRPV
"RTN","DGRPH",45,0)
 W:'((I-1)#2) ! Q
"RTN","DGRPV")
0^4^B16180164
"RTN","DGRPV",1,0)
DGRPV ;ALB/MRL,RTK - REGISTRATION DEFINE VARIABLES ON ENTRY ; 12/2/03 3:19pm
"RTN","DGRPV",2,0)
 ;;5.3;Registration;**109,114,247,190,327,365,343,397,415,489,546,545**;Aug 13, 1993
"RTN","DGRPV",3,0)
 ;
"RTN","DGRPV",4,0)
 ;
"RTN","DGRPV",5,0)
 ;set up variables for registration screen processing
"RTN","DGRPV",6,0)
 ;
"RTN","DGRPV",7,0)
 ;DGRPVV   :string of 15 ones and zeros each character corresponding to
"RTN","DGRPV",8,0)
 ;          a particular screen (0 means allow edit, 1 means don't)
"RTN","DGRPV",9,0)
 ;
"RTN","DGRPV",10,0)
 ;DGRPVV(n):where n=screen number.  String of x ones and zeros where
"RTN","DGRPV",11,0)
 ;          x is the number of elements on screen n (0=edit, 1=don't)
"RTN","DGRPV",12,0)
 ;
"RTN","DGRPV",13,0)
 ;DGVI     :Turn on high intensity
"RTN","DGRPV",14,0)
 ;DGVO     :Turn off high intensity
"RTN","DGRPV",15,0)
 ;
"RTN","DGRPV",16,0)
EN D DT^DICRW I '$D(DVBGUI) D HOME^%ZIS
"RTN","DGRPV",17,0)
 S (DGVI,DGVO)="""""" I $S('$D(IOST(0)):1,'$D(^DG(43,1,0)):1,'$P(^DG(43,1,0),"^",36):1,$D(^DG(43,1,"TERM",IOST(0))):1,1:0) G M ;goto M if not high intensity
"RTN","DGRPV",18,0)
 I $D(^%ZIS(2,IOST(0),7)) S I=^(7),X=$S($P(I,"^",3)]"":3,1:2) I $L($P(I,"^",1)),$L($P(I,"^",X)) S DGVI=$P(I,"^",1),DGVO=$P(I,"^",X)
"RTN","DGRPV",19,0)
M I $L(DGVI_DGVO)>4 S X=132 X ^%ZOSF("RM")
"RTN","DGRPV",20,0)
 S DGRPW=1,DGRPCM=0,DGRPU="UNANSWERED",DGRPNA="NOT APPLICABLE",DGRPV=$S($D(DGRPV):DGRPV,1:1)
"RTN","DGRPV",21,0)
SC7 S X=$S('$D(^DPT(DFN,"TYPE")):0,1:+^("TYPE")) S:'$D(DGELVER) DGELVER=0
"RTN","DGRPV",22,0)
 S DGRPTYPE=$S($D(^DG(391,+X,0)):^(0),1:""),(DGRPSC,DGRPSCE,DGRPSCE1)="" S:'$D(DGELVER) DGELVER=0
"RTN","DGRPV",23,0)
 I DGRPTYPE'="" S DGRPSC=$G(^DG(391,+X,"S")),DGRPSCE=$G(^("E")),DGRPSCE1=$G(^("E10"))
"RTN","DGRPV",24,0)
 ;
"RTN","DGRPV",25,0)
 S DGPH=$P($G(^DPT(DFN,.53)),U)  ;Purple Heart Indicator
"RTN","DGRPV",26,0)
 I $G(DGPRFLG)=1 D
"RTN","DGRPV",27,0)
 . S DGRPVV="000001111111111"
"RTN","DGRPV",28,0)
 E  D
"RTN","DGRPV",29,0)
 . S DGRPVV="000000000000000"
"RTN","DGRPV",30,0)
 S X="5^3^5^2^3^17^4^2^10^2^4^5^5^2^1"
"RTN","DGRPV",31,0)
 F I=1:1:15 S J=+$P(X,"^",I),DGRPVV(I)=$S((I<12)!(I=15):$E("00000000000000000",1,J),1:$E("11111111111111111",1,J))
"RTN","DGRPV",32,0)
 S DGRPVV(1.1)=0
"RTN","DGRPV",33,0)
 S DGRPVV(2)="0001"
"RTN","DGRPV",34,0)
 I $G(DGPH)]"" S $E(DGRPVV(6),16)=1
"RTN","DGRPV",35,0)
 I $$GETSTAT^DGNTAPI1(DFN)>2,'$D(^XUSEC("DGNT VERIFY",DUZ)) D
"RTN","DGRPV",36,0)
 . S $E(DGRPVV(6),17)=1
"RTN","DGRPV",37,0)
 ;
"RTN","DGRPV",38,0)
 F I=3,6,8,9,10,11 S J=+$P(DGRPSC,"^",I) I 'J S DGRPVV=$E(DGRPVV,0,I-1)_1_$E(DGRPVV,I+1,99)
"RTN","DGRPV",39,0)
 ;
"RTN","DGRPV",40,0)
 ;-- if patient type is TRICARE then turn off screens 2,4
"RTN","DGRPV",41,0)
 ;
"RTN","DGRPV",42,0)
 ;-- modified 08/20/2003 for NOIS Calls MAC-0400-61574 & AMA-0700-71769 
"RTN","DGRPV",43,0)
 ;-- commented the line to allow screens 2 & 4 to display for Tricare
"RTN","DGRPV",44,0)
 ;I DGRPTYPE["TRICARE" F I=2,4 S J=+$P(DGRPSC,"^",I) I 'J S DGRPVV=$E(DGRPVV,0,I-1)_1_$E(DGRPVV,I+1,99)
"RTN","DGRPV",45,0)
 ;
"RTN","DGRPV",46,0)
 F I=31:0 S I=$O(^DD(391,I)) Q:I=""!(I>99)  I $D(^(I,0)),($E(^(0),1)'="*"),'+$P(DGRPSCE,"^",I) S X1=$E(I),X2=$E(I,2) I +X1 S DGRPVV(X1)=$E(DGRPVV(X1),0,X2-1)_1_$E(DGRPVV(X1),X2+1,99)
"RTN","DGRPV",47,0)
 I $G(^DPT(DFN,.35)),(^(.35)<+($E(DT,1,3)_"0000")) S DGRPVV=$E(DGRPVV,0,7)_11_$E(DGRPVV,10,99)
"RTN","DGRPV",48,0)
 K DIRUT,DUOUT,DTOUT
"RTN","DGRPV",49,0)
 ;
"RTN","DGRPV",50,0)
 ;Fields are numbered screen_item and put in that piece position.
"RTN","DGRPV",51,0)
 ;Because FM does not allow more than 100 pieces on a node, it was
"RTN","DGRPV",52,0)
 ;necessary to start a new node E10 for fields on screens 10 or higher.
"RTN","DGRPV",53,0)
 ;In these instances, the piece position will be screen_item-100 so,
"RTN","DGRPV",54,0)
 ;for example, screen 11, item 2 would be field 112, but piece 12.
"RTN","DGRPV",55,0)
 ;Items on screens <10 will be found on node E.
"RTN","DGRPV",56,0)
 ;
"RTN","DGRPV",57,0)
 F I=100:0 S I=$O(^DD(391,I)) Q:I=""!(I>150)  I $D(^(I,0)),($E(^(0),1)'="*"),'+$P(DGRPSCE1,"^",I-100) S X1=$E(I,1,2),X2=$E(I,3) I +X1 S DGRPVV(X1)=$E(DGRPVV(X1),0,X2-1)_1_$E(DGRPVV(X1),X2+1,99)
"RTN","DGRPV",58,0)
 ;
"RTN","DGRPV",59,0)
 I $S('($D(DUZ)#2):0,'$D(^XUSEC("DG ELIGIBILITY",DUZ)):0,1:1) G ELVER ;if user holds eligibility key, skip
"RTN","DGRPV",60,0)
 F I=.3,.32,.361 S DGRP(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","DGRPV",61,0)
 S DGRPVV(10)=11 I $P(DGRP(.361),"^",1)="V" S DGRPVV(7)=111,DGRPVV(1)=1_$E(DGRPVV(1),2,99) ;if elig verified, can't edit elig data, name, ssn, or dob
"RTN","DGRPV",62,0)
 I $P(DGRP(.3),"^",6)]"" S DGRPVV(8)=11 ;if monetary ben. verified, can't edit income screening data
"RTN","DGRPV",63,0)
 I $P(DGRP(.32),"^",2)]"" S DGRPVV(6)=11111111111111111 ;if service data verified, can't edit service screen
"RTN","DGRPV",64,0)
 ;
"RTN","DGRPV",65,0)
ELVER ;set up variables for eligibility verification
"RTN","DGRPV",66,0)
 ;if elig ver option, only edit screens 1, 2, and 7 (and 6, 8, 9, 10,
"RTN","DGRPV",67,0)
 ;   and 11 if they're turned on).
"RTN","DGRPV",68,0)
 ;
"RTN","DGRPV",69,0)
 I $P($G(^DPT(DFN,.361)),U,3)="H" S DGRPVV(10)=10,DGRPVV(11)=1001
"RTN","DGRPV",70,0)
 S:'DGELVER DGRPLAST=$S($G(DGPRFLG)=1:5,1:15)
"RTN","DGRPV",71,0)
 I DGELVER S DGRPVV="00111"_$E(DGRPVV,6,11)_"1111" F I=1:1:11 S J=$E(DGRPVV,I) I 'J S DGRPLAST=I
"RTN","DGRPV",72,0)
Q K DGRPSC,DGRPSCE
"RTN","DGRPV",73,0)
 Q
"RTN","DGRPV",74,0)
 ;
"RTN","DGRPV",75,0)
WW ;Write number on screens for display and/or edit (Z=number)
"RTN","DGRPV",76,0)
 W:DGRPW ! S Z=$S(DGRPCM:Z,DGRPV:"<"_Z_">",$E(DGRPVV(DGRPS),Z):"<"_Z_">",1:"["_Z_"]")
"RTN","DGRPV",77,0)
 I DGRPCM!($E(Z)="[") W @DGVI,Z,@DGVO
"RTN","DGRPV",78,0)
 I 'DGRPCM&($E(Z)'="[") W Z
"RTN","DGRPV",79,0)
 Q
"RTN","DGRPV",80,0)
 ;
"RTN","DGRPV",81,0)
WW1 ;spacing for screen display (Z=item to print)
"RTN","DGRPV",82,0)
 F Z2=1:1:(Z1-$L(Z)) S Z=Z_" "
"RTN","DGRPV",83,0)
 W Z K Z2
"RTN","DGRPV",84,0)
 Q
"RTN","VAFHLZPD")
0^6^B51802135
"RTN","VAFHLZPD",1,0)
VAFHLZPD ;ALB/KCL - Create generic HL7 ZPD segment ; 8/16/00 8:35am
"RTN","VAFHLZPD",2,0)
 ;;5.3;Registration;**94,122,160,220,247,545**;Aug 13, 1993
"RTN","VAFHLZPD",3,0)
 ;
"RTN","VAFHLZPD",4,0)
 ;
"RTN","VAFHLZPD",5,0)
EN(DFN,VAFSTR) ; This generic extrinsic function was designed to return
"RTN","VAFHLZPD",6,0)
 ;  sequences 1 throught 21 of the HL7 ZPD segment.  This segment
"RTN","VAFHLZPD",7,0)
 ;  contains VA-specific patient information that is not contained in
"RTN","VAFHLZPD",8,0)
 ;  the HL7 PID segment.  This call does not accomodate a segment
"RTN","VAFHLZPD",9,0)
 ;  length greater than 245 and has been superceeded by EN1^VAFHLZPD.
"RTN","VAFHLZPD",10,0)
 ;  This line tag has been left for backwards compatability.
"RTN","VAFHLZPD",11,0)
 ;
"RTN","VAFHLZPD",12,0)
 ;Input - DFN as internal entry number of the PATIENT file
"RTN","VAFHLZPD",13,0)
 ;      - VAFSTR as the string of fields requested seperated by commas
"RTN","VAFHLZPD",14,0)
 ;        (Defaults to all fields)
"RTN","VAFHLZPD",15,0)
 ;
"RTN","VAFHLZPD",16,0)
 ;     *****Also assumes all HL7 variables returned from*****
"RTN","VAFHLZPD",17,0)
 ;          INIT^HLTRANS are defined.
"RTN","VAFHLZPD",18,0)
 ;
"RTN","VAFHLZPD",19,0)
 ;Output - String of data forming the ZPD segment.
"RTN","VAFHLZPD",20,0)
 ;
"RTN","VAFHLZPD",21,0)
 ;
"RTN","VAFHLZPD",22,0)
 N VAFY,VAFZPD,REMARKS
"RTN","VAFHLZPD",23,0)
 S VAFY=$$EN1($G(DFN),$G(VAFSTR))
"RTN","VAFHLZPD",24,0)
 ;Segment less than 245 characters
"RTN","VAFHLZPD",25,0)
 I ('$D(VAFZPD(1))) D
"RTN","VAFHLZPD",26,0)
 .;Remove sequences 22 and higher
"RTN","VAFHLZPD",27,0)
 .S VAFY=$P(VAFY,HLFS,1,22)
"RTN","VAFHLZPD",28,0)
 ;Segment greater than 245 characters
"RTN","VAFHLZPD",29,0)
 I ($D(VAFZPD(1))) D
"RTN","VAFHLZPD",30,0)
 .;Strip out REMARKS (seq 2)
"RTN","VAFHLZPD",31,0)
 .S REMARKS=$P(VAFY,HLFS,3)
"RTN","VAFHLZPD",32,0)
 .S $P(VAFY,HLFS,3)=""
"RTN","VAFHLZPD",33,0)
 .;Append up to sequence 21 (PRIMARY CARE TEAM)
"RTN","VAFHLZPD",34,0)
 .S VAFY=VAFY_$P(VAFZPD(1),HLFS,1,((21-$L(VAFY,HLFS))+2))
"RTN","VAFHLZPD",35,0)
 .;Place REMARKS back into segment, truncating if needed
"RTN","VAFHLZPD",36,0)
 .S $P(VAFY,HLFS,3)=$E(REMARKS,1,(245-$L(VAFY)))
"RTN","VAFHLZPD",37,0)
 ;Done
"RTN","VAFHLZPD",38,0)
 Q VAFY
"RTN","VAFHLZPD",39,0)
 ;
"RTN","VAFHLZPD",40,0)
EN1(DFN,VAFSTR) ; This generic extrinsic function was designed to return the
"RTN","VAFHLZPD",41,0)
 ;  HL7 ZPD segment.  This segment contains VA-specific patient
"RTN","VAFHLZPD",42,0)
 ;  information that is not contained in the HL7 PID segment.  This
"RTN","VAFHLZPD",43,0)
 ;  call superceeds EN^VAFHLZPD because it accomodates a segment
"RTN","VAFHLZPD",44,0)
 ;  length greater than 245.
"RTN","VAFHLZPD",45,0)
 ; 
"RTN","VAFHLZPD",46,0)
 ;
"RTN","VAFHLZPD",47,0)
 ;Input  : DFN - Pointer to PATIENT file (#2)
"RTN","VAFHLZPD",48,0)
 ;         VAFSTR - List of data elements to retrieve seperated
"RTN","VAFHLZPD",49,0)
 ;                  by commas (ex: 1,2,3)
"RTN","VAFHLZPD",50,0)
 ;                - Defaults to all data elements
"RTN","VAFHLZPD",51,0)
 ;         Existance of HL7 encoding variables is assumed
"RTN","VAFHLZPD",52,0)
 ;         (HLFS, HLENC, HLQ)
"RTN","VAFHLZPD",53,0)
 ;Output : ZPD segment
"RTN","VAFHLZPD",54,0)
 ;       : If the ZPD segment becomes longer than 245 characters,
"RTN","VAFHLZPD",55,0)
 ;         remaining fields will be placed in VAFZPD(1)
"RTN","VAFHLZPD",56,0)
 ;Notes  : Sequence 1 (Set ID) will always have a value of '1'
"RTN","VAFHLZPD",57,0)
 ;       : A ZPD segment with sequence one set to '1' will be returned
"RTN","VAFHLZPD",58,0)
 ;         if DFN is not valid
"RTN","VAFHLZPD",59,0)
 ;       : Variable VAFZPD is initialized on entry
"RTN","VAFHLZPD",60,0)
 ;
"RTN","VAFHLZPD",61,0)
 ;Declare variables
"RTN","VAFHLZPD",62,0)
 N VAFHLZPD,VAFY,SEQ,SPILL,SPILLON,SPOT,LASTSEQ,MAXLEN
"RTN","VAFHLZPD",63,0)
 K VAFZPD
"RTN","VAFHLZPD",64,0)
 S MAXLEN=245
"RTN","VAFHLZPD",65,0)
 ;Get data
"RTN","VAFHLZPD",66,0)
 D GETDATA($G(DFN),$G(VAFSTR),"VAFHLZPD")
"RTN","VAFHLZPD",67,0)
 ;Build segment
"RTN","VAFHLZPD",68,0)
 S VAFY="VAFHLZPD"
"RTN","VAFHLZPD",69,0)
 S SPILL=0
"RTN","VAFHLZPD",70,0)
 S SPILLON=0
"RTN","VAFHLZPD",71,0)
 S @VAFY="ZPD"
"RTN","VAFHLZPD",72,0)
 S LASTSEQ=+$O(VAFHLZPD(""),-1)
"RTN","VAFHLZPD",73,0)
 F SEQ=1:1:LASTSEQ D
"RTN","VAFHLZPD",74,0)
 .;Make sure maximum length won't be exceeded
"RTN","VAFHLZPD",75,0)
 .I ($L(@VAFY)+$L($G(VAFHLZPD(SEQ)))+1)>MAXLEN D
"RTN","VAFHLZPD",76,0)
 ..;Max length exceeded - start putting data on next node
"RTN","VAFHLZPD",77,0)
 ..S SPILL=SPILL+1
"RTN","VAFHLZPD",78,0)
 ..S SPILLON=SEQ-1
"RTN","VAFHLZPD",79,0)
 ..S VAFY=$NA(VAFZPD(SPILL))
"RTN","VAFHLZPD",80,0)
 .;Add to string
"RTN","VAFHLZPD",81,0)
 .S SPOT=(SEQ+1)-SPILLON
"RTN","VAFHLZPD",82,0)
 .S $P(@VAFY,HLFS,SPOT)=$G(VAFHLZPD(SEQ))
"RTN","VAFHLZPD",83,0)
 ;Return segment
"RTN","VAFHLZPD",84,0)
 Q VAFHLZPD
"RTN","VAFHLZPD",85,0)
 ;
"RTN","VAFHLZPD",86,0)
GETDATA(DFN,VAFSTR,ARRAY) ;Get info needed to build segment
"RTN","VAFHLZPD",87,0)
 ;Input  : DFN - Pointer to PATIENT file (#2)
"RTN","VAFHLZPD",88,0)
 ;         VAFSTR - List of data elements to retrieve seperated
"RTN","VAFHLZPD",89,0)
 ;                  by commas (ex: 1,2,3)
"RTN","VAFHLZPD",90,0)
 ;                - Defaults to all data elements
"RTN","VAFHLZPD",91,0)
 ;         ARRAY - Array to return data in (full global reference)
"RTN","VAFHLZPD",92,0)
 ;                 Defaults to ^TMP($J,"VAFHLZPD")
"RTN","VAFHLZPD",93,0)
 ;         Existance of HL7 encoding variables is assumed
"RTN","VAFHLZPD",94,0)
 ;         (HLFS, HLENC, HLQ)
"RTN","VAFHLZPD",95,0)
 ;Output : Nothing
"RTN","VAFHLZPD",96,0)
 ;           ARRAY(SeqNum) = Value
"RTN","VAFHLZPD",97,0)
 ;Notes  : ARRAY is initialized (KILLed) on entry
"RTN","VAFHLZPD",98,0)
 ;       : Sequence 1 (Set ID) will always have a value of '1'
"RTN","VAFHLZPD",99,0)
 ;
"RTN","VAFHLZPD",100,0)
 ;Check input
"RTN","VAFHLZPD",101,0)
 S ARRAY=$G(ARRAY)
"RTN","VAFHLZPD",102,0)
 S:(ARRAY="") ARRAY=$NA(^TMP($J,"VAFHLZPD"))
"RTN","VAFHLZPD",103,0)
 K @ARRAY
"RTN","VAFHLZPD",104,0)
 ;Sequence 1 - Set ID
"RTN","VAFHLZPD",105,0)
 ;  value is always '1'
"RTN","VAFHLZPD",106,0)
 S @ARRAY@(1)=1
"RTN","VAFHLZPD",107,0)
 S DFN=+$G(DFN)
"RTN","VAFHLZPD",108,0)
 S VAFSTR=$G(VAFSTR)
"RTN","VAFHLZPD",109,0)
 S:(VAFSTR="") VAFSTR=$$COMMANUM(1,32)
"RTN","VAFHLZPD",110,0)
 S VAFSTR=","_VAFSTR_","
"RTN","VAFHLZPD",111,0)
 ;Declare variables
"RTN","VAFHLZPD",112,0)
 N VAFNODE,VAPD,X1,X
"RTN","VAFHLZPD",113,0)
 ;Get zero node
"RTN","VAFHLZPD",114,0)
 S VAFNODE=$G(^DPT(DFN,0))
"RTN","VAFHLZPD",115,0)
 ;Get other patient data from VADPT
"RTN","VAFHLZPD",116,0)
 D OPD^VADPT
"RTN","VAFHLZPD",117,0)
 ;Sequence 2 - Remarks (truncate to 60 characters)
"RTN","VAFHLZPD",118,0)
 I VAFSTR[",2," S X=$P(VAFNODE,"^",10),@ARRAY@(2)=$S(X="":HLQ,1:$E(X,1,60))
"RTN","VAFHLZPD",119,0)
 ;Sequence 3 - Place of birth (city)
"RTN","VAFHLZPD",120,0)
 I VAFSTR[",3," S @ARRAY@(3)=$S(VAPD(1)]"":VAPD(1),1:HLQ)
"RTN","VAFHLZPD",121,0)
 ;Sequence 4 - Place of birth (State abbrv.)
"RTN","VAFHLZPD",122,0)
 I VAFSTR[",4," S X1=$P($G(^DIC(5,$P(+VAPD(2),"^",1),0)),"^",2),@ARRAY@(4)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",123,0)
 ;Sequence 5 - Current means test status
"RTN","VAFHLZPD",124,0)
 I VAFSTR[",5," S X=$P(VAFNODE,"^",14),X1=$P($G(^DG(408.32,+X,0)),"^",2),@ARRAY@(5)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",125,0)
 ;Sequence 6 - Fathers name
"RTN","VAFHLZPD",126,0)
 I VAFSTR[",6," S @ARRAY@(6)=$S(VAPD(3)]"":VAPD(3),1:HLQ)
"RTN","VAFHLZPD",127,0)
 ;Sequence 7 - Mothers name
"RTN","VAFHLZPD",128,0)
 I VAFSTR[",7," S @ARRAY@(7)=$S(VAPD(4)]"":VAPD(4),1:HLQ)
"RTN","VAFHLZPD",129,0)
 ;Sequence 8 - Rated incompetent
"RTN","VAFHLZPD",130,0)
 I VAFSTR[",8," S X1=$$YN^VAFHLFNC($P($G(^DPT(DFN,.29)),"^",12)),@ARRAY@(8)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",131,0)
 ;Sequence 9 - Date of Death
"RTN","VAFHLZPD",132,0)
 I VAFSTR[",9," S X=$P($G(^DPT(DFN,.35)),"^",1),X1=$$HLDATE^HLFNC(X),@ARRAY@(9)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",133,0)
 ;Sequence 10 - Collateral sponser name
"RTN","VAFHLZPD",134,0)
 I VAFSTR[10 D
"RTN","VAFHLZPD",135,0)
 .S X=$P($G(^DPT(DFN,.36)),"^",11)
"RTN","VAFHLZPD",136,0)
 .S X1=$P($G(^DPT(+X,0)),"^",1)
"RTN","VAFHLZPD",137,0)
 .S @ARRAY@(10)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",138,0)
 ;Sequence 11 - Active Health Insurance?
"RTN","VAFHLZPD",139,0)
 I VAFSTR[11 S X=$$INS^VAFHLFNC(DFN),X1=$$YN^VAFHLFNC(X),@ARRAY@(11)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",140,0)
 ;Sequences 12 & 13
"RTN","VAFHLZPD",141,0)
 I VAFSTR[12!(VAFSTR[13) D
"RTN","VAFHLZPD",142,0)
 .S X=$G(^DPT(DFN,.38))
"RTN","VAFHLZPD",143,0)
 .;Sequence 12 - Eligible for Medicaid
"RTN","VAFHLZPD",144,0)
 .I VAFSTR[12 S X1=$$YN^VAFHLFNC($P(X,"^",1)),@ARRAY@(12)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",145,0)
 .;Sequence 13 - Date Medicaid last asked
"RTN","VAFHLZPD",146,0)
 .I VAFSTR[13 S X1=$$HLDATE^HLFNC($P(X,"^",2)),@ARRAY@(13)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",147,0)
 ;Sequence 14 - Race
"RTN","VAFHLZPD",148,0)
 I VAFSTR[14 S X=$P(VAFNODE,"^",6) S X1=$P($G(^DIC(10,+X,0)),"^",2),@ARRAY@(14)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",149,0)
 ;Sequence 15 - Religious Preference
"RTN","VAFHLZPD",150,0)
 I VAFSTR[15 S X=$P(VAFNODE,"^",8) S X1=$P($G(^DIC(13,+X,0)),"^",4),@ARRAY@(15)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",151,0)
 ;Sequence 16 - Homeless Indicator
"RTN","VAFHLZPD",152,0)
 I VAFSTR[16 S X=$T(HOMELESS^SOWKHIRM) S @ARRAY@(16)=$S(X]"":$$HOMELESS^SOWKHIRM(DFN),1:HLQ)
"RTN","VAFHLZPD",153,0)
 ;Sequences 17 & 20
"RTN","VAFHLZPD",154,0)
 I ((VAFSTR[17)!(VAFSTR[20)) D
"RTN","VAFHLZPD",155,0)
 .;POW Status & Location
"RTN","VAFHLZPD",156,0)
 .N VAF52,POW,LOC
"RTN","VAFHLZPD",157,0)
 .S VAF52=$G(^DPT(DFN,.52))
"RTN","VAFHLZPD",158,0)
 .;POW Status Indicated?
"RTN","VAFHLZPD",159,0)
 .S POW=$P(VAF52,"^",5)
"RTN","VAFHLZPD",160,0)
 .S:(POW="") POW=HLQ
"RTN","VAFHLZPD",161,0)
 .;POW Confinement Location (translates pointer to coded value)
"RTN","VAFHLZPD",162,0)
 .S LOC=$P(VAF52,"^",6)
"RTN","VAFHLZPD",163,0)
 .S:(LOC="") LOC=HLQ
"RTN","VAFHLZPD",164,0)
 .I (LOC'=HLQ) S LOC=$S(LOC>0&(LOC<7):LOC+3,LOC>6&(LOC<9):$C(LOC+58),1:"")
"RTN","VAFHLZPD",165,0)
 .;Add to output array
"RTN","VAFHLZPD",166,0)
 .;Sequence 17 - POW Status
"RTN","VAFHLZPD",167,0)
 .S:(VAFSTR[17) @ARRAY@(17)=POW
"RTN","VAFHLZPD",168,0)
 .;Sequence 20 - POW Confinement Location
"RTN","VAFHLZPD",169,0)
 .S:(VAFSTR[20) @ARRAY@(20)=LOC
"RTN","VAFHLZPD",170,0)
 ;Sequence 18 - Insurance Type
"RTN","VAFHLZPD",171,0)
 I VAFSTR[18 S X=+$$INSTYP^IBCNS1(DFN),@ARRAY@(18)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZPD",172,0)
 ;Sequence 19 - RX Copay Exemption Status
"RTN","VAFHLZPD",173,0)
 I VAFSTR[19 S X=+$$RXST^IBARXEU(DFN),@ARRAY@(19)=$S(X'<0:X,1:HLQ)
"RTN","VAFHLZPD",174,0)
 ;Sequence 21 - Primary Care Team
"RTN","VAFHLZPD",175,0)
 I (VAFSTR[21) D
"RTN","VAFHLZPD",176,0)
 .;Get Primary Care Team  (as defined in PCMM)
"RTN","VAFHLZPD",177,0)
 .S X=$$OUTPTTM^SDUTL3(DFN)
"RTN","VAFHLZPD",178,0)
 .S X=$P(X,"^",2)
"RTN","VAFHLZPD",179,0)
 .S:(X="") X=HLQ
"RTN","VAFHLZPD",180,0)
 .;Put into output array
"RTN","VAFHLZPD",181,0)
 .S @ARRAY@(21)=X
"RTN","VAFHLZPD",182,0)
 ; 
"RTN","VAFHLZPD",183,0)
 ; Sequences 22 thru 30 added by DG*5.3*264 (Smart Card)
"RTN","VAFHLZPD",184,0)
 ;
"RTN","VAFHLZPD",185,0)
 ; Sequences 22 & 23
"RTN","VAFHLZPD",186,0)
 I VAFSTR[22!(VAFSTR[23) D
"RTN","VAFHLZPD",187,0)
 .; GI Insurance
"RTN","VAFHLZPD",188,0)
 .S X=$G(^DPT(DFN,.362))
"RTN","VAFHLZPD",189,0)
 .I VAFSTR[22 S X1=$P(X,U,17),@ARRAY@(22)=$S(X1="U":"N",X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",190,0)
 .I VAFSTR[23 S X1=$P(X,U,6),@ARRAY@(23)=$S(X1:$E(X1,1,6),1:HLQ)
"RTN","VAFHLZPD",191,0)
 ; Sequences 24 through 27
"RTN","VAFHLZPD",192,0)
 I VAFSTR[24!(VAFSTR[25)!(VAFSTR[26)!(VAFSTR[27) D
"RTN","VAFHLZPD",193,0)
 .; Most recent care dates & locations
"RTN","VAFHLZPD",194,0)
 .S X=$G(^DPT(DFN,1010.15))
"RTN","VAFHLZPD",195,0)
 .I VAFSTR[24 S X1=$$HLDATE^HLFNC($P(X,U)),@ARRAY@(24)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",196,0)
 .I VAFSTR[25 S X1=$P(X,U,2),X1=$P($G(^DIC(4,+X1,0)),U),@ARRAY@(25)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",197,0)
 .I VAFSTR[26 S X1=$$HLDATE^HLFNC($P(X,U,3)),@ARRAY@(26)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",198,0)
 .I VAFSTR[27 S X1=$P(X,U,4),X1=$P($G(^DIC(4,+X1,0)),U),@ARRAY@(27)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",199,0)
 ; Sequences 28 & 29
"RTN","VAFHLZPD",200,0)
 I VAFSTR[28!(VAFSTR[29) D
"RTN","VAFHLZPD",201,0)
 .; dates ruled incompetent (civil and VA)
"RTN","VAFHLZPD",202,0)
 .S X=$G(^DPT(DFN,.29))
"RTN","VAFHLZPD",203,0)
 .I VAFSTR[28 S X1=$$HLDATE^HLFNC($P(X,U,2)),@ARRAY@(28)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",204,0)
 .I VAFSTR[29 S X1=$$HLDATE^HLFNC($P(X,U)),@ARRAY@(29)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",205,0)
 ; Sequence 30 - Spinal cord injury
"RTN","VAFHLZPD",206,0)
 I VAFSTR[30 S X=$P($G(^DPT(DFN,57)),U,4),@ARRAY@(30)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZPD",207,0)
 ; Sequence 31 - Source of Notification
"RTN","VAFHLZPD",208,0)
 I VAFSTR[9&(VAFSTR[31) S X=$P($G(^DPT(DFN,.35)),U,3),@ARRAY@(31)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZPD",209,0)
 ; Sequence 32 - Date/Time Last Updated
"RTN","VAFHLZPD",210,0)
 I VAFSTR[9&(VAFSTR[32) S X=$P($G(^DPT(DFN,.35)),U,4),X1=$$HLDATE^HLFNC(X),@ARRAY@(32)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",211,0)
 ;Done - cleanup & quit
"RTN","VAFHLZPD",212,0)
 D KVA^VADPT
"RTN","VAFHLZPD",213,0)
 Q
"RTN","VAFHLZPD",214,0)
 ;
"RTN","VAFHLZPD",215,0)
COMMANUM(FROM,TO) ;Build comma seperated list of numbers
"RTN","VAFHLZPD",216,0)
 ;Input  : FROM - Starting number (default = 1)
"RTN","VAFHLZPD",217,0)
 ;         TO - Ending number (default = FROM)
"RTN","VAFHLZPD",218,0)
 ;Output : Comma seperated list of numbers between FROM and TO
"RTN","VAFHLZPD",219,0)
 ;         (Ex: 1,2,3)
"RTN","VAFHLZPD",220,0)
 ;Notes  : Call assumes FROM <= TO
"RTN","VAFHLZPD",221,0)
 ;
"RTN","VAFHLZPD",222,0)
 S FROM=$G(FROM) S:(FROM="") FROM=1
"RTN","VAFHLZPD",223,0)
 S TO=$G(TO) S:(TO="") TO=FROM
"RTN","VAFHLZPD",224,0)
 N OUTPUT,X
"RTN","VAFHLZPD",225,0)
 S OUTPUT=FROM
"RTN","VAFHLZPD",226,0)
 F X=(FROM+1):1:TO S OUTPUT=(OUTPUT_","_X)
"RTN","VAFHLZPD",227,0)
 Q OUTPUT
"VER")
8.0^22.0
"^DD",2,2,.351,0)
DATE OF DEATH^DXa^^.35;1^S %DT="EPT" D ^%DT S X=Y K:Y<1 X I $D(X) D H^DGUTL K:X>DGTIME X K DGTIME,DGDATE I $D(X),X<$P(^DPT(DA,0),"^",3) K X
"^DD",2,2,.351,1,0)
^.1
"^DD",2,2,.351,1,1,0)
^^TRIGGER^2^.091
"^DD",2,2,.351,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DPT(D0,0)):^(0),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y X ^DD(2,.351,1,1,1.1) X ^DD(2,.351,1,1,1.4)
"^DD",2,2,.351,1,1,1,9.2)
S X=DIU_"[PATIENT DIED ON ",Y(1)=X S X=DIV,Y(2)=X S X=4,Y(3)=X S X=5,X=$E(Y(2),Y(3),X) S Y=X,X=Y(1),X=X_Y_"/",Y(4)=X S X=DIV,Y(5)=X S X=6,Y(6)=X S X=7
"^DD",2,2,.351,1,1,1.1)
S X=DIV X ^DD(2,.351,1,1,49.2) S X=$E(Y(5),Y(6),X) S Y=X,X=Y(4),X=X_Y_"/",Y(7)=X S X=DIV,Y(8)=X S X=2,Y(9)=X S X=3,X=$E(Y(8),Y(9),X) S Y=X,X=Y(7),X=X_Y_"]"
"^DD",2,2,.351,1,1,1.4)
S DIH=$S($D(^DPT(DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,10)=DIV,DIH=2,DIG=.091 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.351,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DPT(D0,0)):^(0),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y X ^DD(2,.351,1,1,2.1) X ^DD(2,.351,1,1,2.4)
"^DD",2,2,.351,1,1,2.1)
S X=DIV X ^DD(2,.351,1,1,59.2) S Y(8)=X S X=2,X=$P(Y(7),Y(8),X) S Y=X,X=Y(3),X=X_Y
"^DD",2,2,.351,1,1,2.4)
S DIH=$S($D(^DPT(DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,10)=DIV,DIH=2,DIG=.091 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.351,1,1,49.2)
S X=DIU_"[PATIENT DIED ON ",Y(1)=X S X=DIV,Y(2)=X S X=4,Y(3)=X S X=5,X=$E(Y(2),Y(3),X) S Y=X,X=Y(1),X=X_Y_"/",Y(4)=X S X=DIV,Y(5)=X S X=6,Y(6)=X S X=7
"^DD",2,2,.351,1,1,59.2)
S X=DIU,Y(1)=X S X="[PATIENT DIED",Y(2)=X S X=1,X=$P(Y(1),Y(2),X),Y(3)=X,Y(4)=X S X=DIU,Y(5)=X S X="PATIENT DIED",Y(6)=X S X=2,X=$P(Y(5),Y(6),X),Y(7)=X S X="]"
"^DD",2,2,.351,1,1,"%D",0)
^^3^3^2930723^^
"^DD",2,2,.351,1,1,"%D",1,0)
This appends into the REMARKS field a notation regarding the DATE OF 
"^DD",2,2,.351,1,1,"%D",2,0)
DEATH.  If DATE OF DEATH is deleted, the notation will be stripped out
"^DD",2,2,.351,1,1,"%D",3,0)
of the REMARKS field.
"^DD",2,2,.351,1,1,"CREATE VALUE")
REMARKS_"[PATIENT DIED ON "_$E(DATE OF DEATH,4,5)_"/"_$E(DATE OF DEATH,6,7)_"/"_$E(DATE OF DEATH,2,3)_"]"
"^DD",2,2,.351,1,1,"DELETE VALUE")
$P(REMARKS,"[PATIENT DIED",1)_$P($P(REMARKS,"PATIENT DIED",2),"]",2)
"^DD",2,2,.351,1,1,"DT")
2930601
"^DD",2,2,.351,1,1,"FIELD")
REMARKS
"^DD",2,2,.351,1,2,0)
^^TRIGGER^2^.352
"^DD",2,2,.351,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DPT(D0,.35)):^(.35),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y X ^DD(2,.351,1,2,1.1) X ^DD(2,.351,1,2,1.4)
"^DD",2,2,.351,1,2,1.1)
S X=DIV S X=$S(($D(DUZ)#2):DUZ,1:"")
"^DD",2,2,.351,1,2,1.4)
S DIH=$S($D(^DPT(DIV(0),.35)):^(.35),1:""),DIV=X S %=$P(DIH,U,3,999),DIU=$P(DIH,U,2),^(.35)=$P(DIH,U,1,1)_U_DIV_$S(%]"":U_%,1:""),DIH=2,DIG=.352 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.351,1,2,2)
Q
"^DD",2,2,.351,1,2,"CREATE VALUE")
S X=$S(($D(DUZ)#2):DUZ,1:"")
"^DD",2,2,.351,1,2,"DELETE VALUE")
NO EFFECT
"^DD",2,2,.351,1,2,"FIELD")
DEATH ENTERED BY
"^DD",2,2,.351,1,3,0)
2^ADGDBUL^MUMPS
"^DD",2,2,.351,1,3,1)
D DSBULL^DGDEATH
"^DD",2,2,.351,1,3,2)
D DKBULL^DGDEATH
"^DD",2,2,.351,1,3,"DT")
3031008
"^DD",2,2,.351,1,4,0)
2^AEXP1
"^DD",2,2,.351,1,4,1)
S ^DPT("AEXP1",$E(X,1,30),DA)=""
"^DD",2,2,.351,1,4,2)
K ^DPT("AEXP1",$E(X,1,30),DA)
"^DD",2,2,.351,1,5,0)
2^AOERR^MUMPS
"^DD",2,2,.351,1,5,1)
D DEATH^DGOERNOT
"^DD",2,2,.351,1,5,2)
Q
"^DD",2,2,.351,1,5,"%D",0)
^^3^3^2910716^^^^
"^DD",2,2,.351,1,5,"%D",1,0)
     This cross-reference is used in conjunction with ORDER ENTRY/RESULTS
"^DD",2,2,.351,1,5,"%D",2,0)
REPORTING v2.09 or higher to send MAS OE/RR NOTIFICATIONS of
"^DD",2,2,.351,1,5,"%D",3,0)
DEATH to users who are on an OE/RR LIST for a patient.
"^DD",2,2,.351,1,5,"DT")
2910715
"^DD",2,2,.351,1,6,0)
2^APSJD^MUMPS
"^DD",2,2,.351,1,6,1)
S XX=X,X="PSJADT" X ^%ZOSF("TEST") S X=XX K XX I  D END^PSJADT
"^DD",2,2,.351,1,6,2)
Q
"^DD",2,2,.351,1,6,3)
Cancels Inpatient Medication orders.
"^DD",2,2,.351,1,6,"%D",0)
^^3^3^2930608^^^
"^DD",2,2,.351,1,6,"%D",1,0)
This is used by the Inpatient Medications package to cancel a patient's
"^DD",2,2,.351,1,6,"%D",2,0)
IV and Unit Dose orders whenever a date of death is entered for the
"^DD",2,2,.351,1,6,"%D",3,0)
patient.
"^DD",2,2,.351,1,6,"DT")
2930608
"^DD",2,2,.351,1,7,0)
2^ARCDTH^MUMPS
"^DD",2,2,.351,1,7,1)
S RCX=X,X="RCAMDTH" X ^%ZOSF("TEST") S X=RCX K RCX I  D SET^RCAMDTH
"^DD",2,2,.351,1,7,2)
S RCX=X,X="RCAMDTH" X ^%ZOSF("TEST") S X=RCX K RCX I  D ERR^RCAMDTH
"^DD",2,2,.351,1,7,3)
ACCOUNTS RECEIVABLE DEATH NOTIFICATION
"^DD",2,2,.351,1,7,"%D",0)
^^3^3^2930722^^^^
"^DD",2,2,.351,1,7,"%D",1,0)
This cross-reference is used to notify the Accounts Receivable package (v4 or
"^DD",2,2,.351,1,7,"%D",2,0)
higher) of a patient's death so that the patient's account may be reviewed for
"^DD",2,2,.351,1,7,"%D",3,0)
appropriate action. 
"^DD",2,2,.351,1,7,"DT")
2930609
"^DD",2,2,.351,1,8,0)
2^ADEP^MUMPS
"^DD",2,2,.351,1,8,1)
D SET^DGDEPINA
"^DD",2,2,.351,1,8,2)
D KILL^DGDEPINA
"^DD",2,2,.351,1,8,"%D",0)
^^1^1^2941114^
"^DD",2,2,.351,1,8,"%D",1,0)
This is used to updated the effective dates in file 408.12.
"^DD",2,2,.351,1,8,"DT")
2941114
"^DD",2,2,.351,1,9,0)
2^AENR351^MUMPS
"^DD",2,2,.351,1,9,1)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,.351,1,9,2)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,.351,1,9,3)
DO NOT DELETE
"^DD",2,2,.351,1,9,"%D",0)
^^1^1^2970630^^^^
"^DD",2,2,.351,1,9,"%D",1,0)
Used to update the patient's enrollment.
"^DD",2,2,.351,1,9,"DT")
2970630
"^DD",2,2,.351,1,52,0)
2^APSOD^MUMPS
"^DD",2,2,.351,1,52,1)
I $$VERSION^XPDUTL("PSO")>6 D APSOD^PSOCAN3(DA)
"^DD",2,2,.351,1,52,2)
I $$VERSION^XPDUTL("PSO")>6 D APSOD^PSOAUTOC(DA)
"^DD",2,2,.351,1,52,3)
Discontinues Outpatient Medications.
"^DD",2,2,.351,1,52,"%D",0)
^^3^3^2961122^^^^
"^DD",2,2,.351,1,52,"%D",1,0)
This xref is used to discontinue all active outpatient medications whenever
"^DD",2,2,.351,1,52,"%D",2,0)
a date of death is entered for the patient.  This xref is used with v7 of
"^DD",2,2,.351,1,52,"%D",3,0)
Outpatient Pharmacy (DBIA #1624).
"^DD",2,2,.351,1,52,"%D",4,0)
Kill logic updated with DG*5.3*455.  Mail message sent to pharmacy when date
"^DD",2,2,.351,1,52,"%D",5,0)
of death is deleted to holders of PSORPH key.
"^DD",2,2,.351,1,52,"DT")
3020926
"^DD",2,2,.351,1,301,0)
2^IVM351^MUMPS
"^DD",2,2,.351,1,301,1)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.351,1,301,2)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.351,1,301,"%D",0)
^^5^5^2930605^
"^DD",2,2,.351,1,301,"%D",1,0)
This cross-reference will check the IVM PATIENT file to see if a change
"^DD",2,2,.351,1,301,"%D",2,0)
to this field will require transmission to the IVM Center.  If it does,
"^DD",2,2,.351,1,301,"%D",3,0)
the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
"^DD",2,2,.351,1,301,"%D",4,0)
the nightly background job will transmit the updated information.
"^DD",2,2,.351,1,301,"DT")
2930605
"^DD",2,2,.351,1,991,0)
2^AVAFC351^MUMPS
"^DD",2,2,.351,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".351;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.351,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".351;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.351,1,991,"%D",0)
^^15^15^2990204^^
"^DD",2,2,.351,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.351,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.351,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.351,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.351,1,991,"%D",5,0)
 
"^DD",2,2,.351,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.351,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.351,1,991,"%D",8,0)
process.
"^DD",2,2,.351,1,991,"%D",9,0)
 
"^DD",2,2,.351,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.351,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.351,1,991,"%D",12,0)
  
"^DD",2,2,.351,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.351,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.351,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.351,1,991,"DT")
2990204
"^DD",2,2,.351,1,992,0)
2^ADGRU351^MUMPS
"^DD",2,2,.351,1,992,1)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.351,1,992,2)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.351,1,992,"%D",0)
^^9^9^2990920^
"^DD",2,2,.351,1,992,"%D",1,0)
This cross reference is used to remember that changes were made to a 
"^DD",2,2,.351,1,992,"%D",2,0)
monitored data field in the PATIENT File (#2) required for a vendor
"^DD",2,2,.351,1,992,"%D",3,0)
RAI/MDS COTS system.  Execution of this cross reference will create
"^DD",2,2,.351,1,992,"%D",4,0)
an entry in the ADT/HL7 PIVOT file (#391.71) and mark it as requiring
"^DD",2,2,.351,1,992,"%D",5,0)
transmission of an HL7 demographic A08 update message to the COTS
"^DD",2,2,.351,1,992,"%D",6,0)
interface.
"^DD",2,2,.351,1,992,"%D",7,0)
 
"^DD",2,2,.351,1,992,"%D",8,0)
The local variable DGRUGA08 will be set to 1 if the cross reference is
"^DD",2,2,.351,1,992,"%D",9,0)
not to be executed as part of a re-indexing.
"^DD",2,2,.351,1,992,"DT")
2990920
"^DD",2,2,.351,3)
Enter the date this patient died.  Date must not be before date of birth.
"^DD",2,2,.351,5,1,0)
405^.01^3
"^DD",2,2,.351,5,2,0)
405^.18^2
"^DD",2,2,.351,21,0)
^^1^1^2861022^
"^DD",2,2,.351,21,1,0)
Enter the date of this patient's expiration.
"^DD",2,2,.351,"AUDIT")
y
"^DD",2,2,.351,"DT")
3031008
"^DD",2,2,.353,0)
SOURCE OF NOTIFICATION^S^1:INPATIENT AT VAMC;2:NON-VA MEDICAL FACILITY;3:DEATH CERTIFICATE ON FILE;4:VBA;5:VA INSURANCE;6:SSA;7:NCA;8:NEXT OF KIN/FAMILY/FRIEND;9:OTHER;^.35;3^Q
"^DD",2,2,.353,1,0)
^.1^^0
"^DD",2,2,.353,3)
Select the first source of death that appears on the list that applies to this veteran.
"^DD",2,2,.353,21,0)
^.001^3^3^3031023^^^^
"^DD",2,2,.353,21,1,0)
 
"^DD",2,2,.353,21,2,0)
This is a set of codes that represents who/what notified the VA of 
"^DD",2,2,.353,21,3,0)
the Date of Death.
"^DD",2,2,.353,"DT")
3031010
"^DD",2,2,.354,0)
DATE OF DEATH LAST UPDATED^D^^.35;4^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",2,2,.354,21,0)
^^2^2^3030811^
"^DD",2,2,.354,21,1,0)
This is a date/time value that represents the date/time the date of death 
"^DD",2,2,.354,21,2,0)
field (.351) was last modified/entered/deleted.
"^DD",2,2,.354,"DT")
3030715
"^DD",2,2,.355,0)
LAST EDITED BY^P200'^VA(200,^.35;5^Q
"^DD",2,2,.355,21,0)
^^2^2^3030811^
"^DD",2,2,.355,21,1,0)
This is the local user ID of the person that last made a modification to 
"^DD",2,2,.355,21,2,0)
the date of death (.351) field.
"^DD",2,2,.355,"DT")
3030718
**INSTALL NAME**
IVM*2.0*85
"BLD",4446,0)
IVM*2.0*85^INCOME VERIFICATION MATCH^0^3040225^y
"BLD",4446,1,0)
^^1^1^3031027^^
"BLD",4446,1,1,0)
Changes to support new ZPD segment builder fo Z07 message.
"BLD",4446,4,0)
^9.64PA^^
"BLD",4446,"ABPKG")
n
"BLD",4446,"KRN",0)
^9.67PA^8989.52^19
"BLD",4446,"KRN",.4,0)
.4
"BLD",4446,"KRN",.4,"NM",0)
^9.68A^^
"BLD",4446,"KRN",.401,0)
.401
"BLD",4446,"KRN",.402,0)
.402
"BLD",4446,"KRN",.403,0)
.403
"BLD",4446,"KRN",.5,0)
.5
"BLD",4446,"KRN",.84,0)
.84
"BLD",4446,"KRN",3.6,0)
3.6
"BLD",4446,"KRN",3.8,0)
3.8
"BLD",4446,"KRN",9.2,0)
9.2
"BLD",4446,"KRN",9.8,0)
9.8
"BLD",4446,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",4446,"KRN",9.8,"NM",1,0)
IVMPTRN8^^0^B49655665
"BLD",4446,"KRN",9.8,"NM","B","IVMPTRN8",1)

"BLD",4446,"KRN",19,0)
19
"BLD",4446,"KRN",19.1,0)
19.1
"BLD",4446,"KRN",101,0)
101
"BLD",4446,"KRN",409.61,0)
409.61
"BLD",4446,"KRN",771,0)
771
"BLD",4446,"KRN",870,0)
870
"BLD",4446,"KRN",8989.51,0)
8989.51
"BLD",4446,"KRN",8989.52,0)
8989.52
"BLD",4446,"KRN",8994,0)
8994
"BLD",4446,"KRN","B",.4,.4)

"BLD",4446,"KRN","B",.401,.401)

"BLD",4446,"KRN","B",.402,.402)

"BLD",4446,"KRN","B",.403,.403)

"BLD",4446,"KRN","B",.5,.5)

"BLD",4446,"KRN","B",.84,.84)

"BLD",4446,"KRN","B",3.6,3.6)

"BLD",4446,"KRN","B",3.8,3.8)

"BLD",4446,"KRN","B",9.2,9.2)

"BLD",4446,"KRN","B",9.8,9.8)

"BLD",4446,"KRN","B",19,19)

"BLD",4446,"KRN","B",19.1,19.1)

"BLD",4446,"KRN","B",101,101)

"BLD",4446,"KRN","B",409.61,409.61)

"BLD",4446,"KRN","B",771,771)

"BLD",4446,"KRN","B",870,870)

"BLD",4446,"KRN","B",8989.51,8989.51)

"BLD",4446,"KRN","B",8989.52,8989.52)

"BLD",4446,"KRN","B",8994,8994)

"BLD",4446,"QUES",0)
^9.62^^
"BLD",4446,"REQB",0)
^9.611^1^1
"BLD",4446,"REQB",1,0)
IVM*2.0*79^2
"BLD",4446,"REQB","B","IVM*2.0*79",1)

"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021^2941024
"PKG",220,22,1,"PAH",1,0)
85^3040225
"PKG",220,22,1,"PAH",1,1,0)
^^1^1^3040225
"PKG",220,22,1,"PAH",1,1,1,0)
Changes to support new ZPD segment builder fo Z07 message.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","IVMPTRN8")
0^1^B49655665
"RTN","IVMPTRN8",1,0)
IVMPTRN8 ;ALB/RKS/PDJ/BRM/TDM - HL7 FULL DATA TRANSMISSION (Z07) BUILDER ; 7/24/03 1:54pm
"RTN","IVMPTRN8",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**9,11,19,12,21,17,24,36,37,47,48,42,34,77,76,75,79,85**; 21-OCT-94
"RTN","IVMPTRN8",3,0)
 ;
"RTN","IVMPTRN8",4,0)
 ;
"RTN","IVMPTRN8",5,0)
BUILD(DFN,IVMMTDT,IVMCT,IVMQUERY) ; --
"RTN","IVMPTRN8",6,0)
 ;  Description: This entry point will be used to create an HL7 
"RTN","IVMPTRN8",7,0)
 ;  "Full Data Transmission" message for a patient.
"RTN","IVMPTRN8",8,0)
 ;
"RTN","IVMPTRN8",9,0)
 ;  Input:
"RTN","IVMPTRN8",10,0)
 ;        DFN - Patient IEN
"RTN","IVMPTRN8",11,0)
 ;    IVMMTDT - date of the patient's Means Test or Copay Test
"RTN","IVMPTRN8",12,0)
 ;      IVMCT - count of hl7 segments transmitted, pass by reference
"RTN","IVMPTRN8",13,0)
 ;   IVMQUERY - array passed in by reference where
"RTN","IVMPTRN8",14,0)
 ;    IVMQUERY("LTD") -- # of the QUERY that is currently open or
"RTN","IVMPTRN8",15,0)
 ;                undefined, zero, or null if no QUERY opened for
"RTN","IVMPTRN8",16,0)
 ;                last treatment date
"RTN","IVMPTRN8",17,0)
 ;    IVMQUERY("OVIS") -- # of the QUERY that is currently open or
"RTN","IVMPTRN8",18,0)
 ;                undefined, zero, or null if no QUERY opened for
"RTN","IVMPTRN8",19,0)
 ;                finding outpatient visits
"RTN","IVMPTRN8",20,0)
 ;
"RTN","IVMPTRN8",21,0)
 ;  HL7 variables as defined by call to INIT^IVMUFNC:
"RTN","IVMPTRN8",22,0)
 ;      HLEVN - HL7 message event counter 
"RTN","IVMPTRN8",23,0)
 ;      HLSDT - a flag that indicates that the data to be sent is
"RTN","IVMPTRN8",24,0)
 ;              stored in the ^TMP("HLS") global array.
"RTN","IVMPTRN8",25,0)
 ;
"RTN","IVMPTRN8",26,0)
 ;  The following variables returned by the INIT^HLTRANS entry point:
"RTN","IVMPTRN8",27,0)
 ;    HLNDAP - Non-DHCP Application Pointer from file 770
"RTN","IVMPTRN8",28,0)
 ;   HLNDAP0 - Zero node from file 770 corresponding to HLNDAP
"RTN","IVMPTRN8",29,0)
 ;     HLDAP - DHCP Application Pointer from file 771
"RTN","IVMPTRN8",30,0)
 ;     HLDAN - The DHCP Application Name (.01 field, file 771) for HLDAP
"RTN","IVMPTRN8",31,0)
 ;     HLPID - HL7 processing ID from file 770
"RTN","IVMPTRN8",32,0)
 ;     HLVER - HL7 version number from file 770
"RTN","IVMPTRN8",33,0)
 ;      HLFS - HL7 Field Separator from the 'FS' node of file 771
"RTN","IVMPTRN8",34,0)
 ;     HLECH - HL7 Encoding Characters from the 'EC' node of file 771
"RTN","IVMPTRN8",35,0)
 ;       HLQ - Double quotes ("") for use in building HL7 segments
"RTN","IVMPTRN8",36,0)
 ;     HLERR - if an error is encountered, an error message is returned
"RTN","IVMPTRN8",37,0)
 ;             in the HLERR variable.
"RTN","IVMPTRN8",38,0)
 ;      HLDA - the internal entry number for the entry created in
"RTN","IVMPTRN8",39,0)
 ;             file #772.
"RTN","IVMPTRN8",40,0)
 ;      HLDT - transmission date/time (associated with the entry in file
"RTN","IVMPTRN8",41,0)
 ;             #772 identified by HLDA) in internal VA FileMan format.
"RTN","IVMPTRN8",42,0)
 ;     HLDT1 - the same transmission date/time as the HLDT variable, 
"RTN","IVMPTRN8",43,0)
 ;             only in HL7 format.
"RTN","IVMPTRN8",44,0)
 ;
"RTN","IVMPTRN8",45,0)
 ; Output:
"RTN","IVMPTRN8",46,0)
 ;  ^TMP("HLS",$J,IVMCT) - global array containing all segments of the HL7 message that the VistA application wishes to send.  The HLSDT variable is defined above and the IVMCT variable is a sequential number incremented by 1.
"RTN","IVMPTRN8",47,0)
 ;
"RTN","IVMPTRN8",48,0)
 ;
"RTN","IVMPTRN8",49,0)
 N DGINC,DGIR,DGREL,I,IVMNTE,IVMPID,IVMSUB,IVMZRD,VAFPID,VAFZEL,FBZFE,IVMZCD,DELETE,NODE,IVMPIEN,TEST,IVMPNODE,TESTTYPE,SEQS,TESTCODE,HARDSHIP,ACTVIEN,IVMZMH,IVMSEQ
"RTN","IVMPTRN8",50,0)
 N EDBMTZ06
"RTN","IVMPTRN8",51,0)
 ;
"RTN","IVMPTRN8",52,0)
 ; create (PID) Patient Identification segment
"RTN","IVMPTRN8",53,0)
 S IVMSEQ="3,5,7,8,11,12,13,14,19"
"RTN","IVMPTRN8",54,0)
 ; do not transmit seq 11 and 12 if the Bad Address Indicator is set
"RTN","IVMPTRN8",55,0)
 ; or other address filters do not pass
"RTN","IVMPTRN8",56,0)
 S:$$FILTER^IVMPTRN9(DFN) IVMSEQ="3,5,7,8,13,14,19"
"RTN","IVMPTRN8",57,0)
 S IVMPID=$$EN^VAFHLPID(DFN,"1,"_IVMSEQ)        ;add SEQ 1 for PID
"RTN","IVMPTRN8",58,0)
 ;
"RTN","IVMPTRN8",59,0)
 ; **** Add ICN to 2nd piece PID segment for MPI@HEC.
"RTN","IVMPTRN8",60,0)
 S IVMCMOR="1,2"
"RTN","IVMPTRN8",61,0)
 ; check to see if site is a legacy site.  If not add ICN to PID segment.
"RTN","IVMPTRN8",62,0)
 I '$D(^PPP(1020.128,"AC",$P($$SITE^VASITE,"^",3))) D
"RTN","IVMPTRN8",63,0)
 .I +$$GETICN^MPIF001(DFN)>0,($$IFLOCAL^MPIF001(DFN)=0) S IVMPID=$$EN^VAFCPID(DFN,"1,2,"_IVMSEQ),IVMCMOR="1,2,3"  ;add SEQ 1 and 2 for PID
"RTN","IVMPTRN8",64,0)
 ;
"RTN","IVMPTRN8",65,0)
 I $D(VAFPID(1)) S IVMPID(1)=VAFPID(1)
"RTN","IVMPTRN8",66,0)
 ; send SSN indicating pseudo
"RTN","IVMPTRN8",67,0)
 ; I $P(IVMPID_$G(IVMPID(1)),HLFS,20)["P" D PSEUDO^IVMPTRN1  ; strip 'P' from pseudo SSNs
"RTN","IVMPTRN8",68,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID
"RTN","IVMPTRN8",69,0)
 I $D(IVMPID(1)) S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID(1)
"RTN","IVMPTRN8",70,0)
 ;
"RTN","IVMPTRN8",71,0)
 ; **** create (PD1) Patient CMOR segment for MPI@HEC.
"RTN","IVMPTRN8",72,0)
 S:'$D(HL("FS")) HL("FS")=HLFS
"RTN","IVMPTRN8",73,0)
 S:'$D(HL("ECH")) HL("ECH")=HLECH
"RTN","IVMPTRN8",74,0)
 S:'$D(HL("Q")) HL("Q")=HLQ
"RTN","IVMPTRN8",75,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLPD1(DFN,IVMCMOR)
"RTN","IVMPTRN8",76,0)
 ;
"RTN","IVMPTRN8",77,0)
 ; create (ZPD) Patient Dependent Info. segment
"RTN","IVMPTRN8",78,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN1^VAFHLZPD(DFN,"1,8,9,11,12,13,17,19,31,32"),IVMINS=$P(^(IVMCT),HLFS,12)
"RTN","IVMPTRN8",79,0)
 ;
"RTN","IVMPTRN8",80,0)
 ; create (ZTA) Temporary Address segment
"RTN","IVMPTRN8",81,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZTA(DFN,"1,2,3,4,5,6,7")
"RTN","IVMPTRN8",82,0)
 ;
"RTN","IVMPTRN8",83,0)
 ; create (ZIE) Ineligible segment
"RTN","IVMPTRN8",84,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIE(DFN,"1,2,3",1)
"RTN","IVMPTRN8",85,0)
 ;
"RTN","IVMPTRN8",86,0)
 ; create (ZEL) Eligibility segment(s) 
"RTN","IVMPTRN8",87,0)
 ; **** Add 5th piece to ZEL to correct consistency check
"RTN","IVMPTRN8",88,0)
 D EN1^VAFHLZEL(DFN,"1,2,5,6,7,10,11,13,14,15,16,17,18,19,20,21,23,24,25,34,35",2,.VAFZEL)
"RTN","IVMPTRN8",89,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(VAFZEL(1))  ; Primary Eligibility
"RTN","IVMPTRN8",90,0)
 ; - other entitled eligibilities
"RTN","IVMPTRN8",91,0)
 F IVMSUB=1:0 S IVMSUB=+$O(VAFZEL(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",92,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(VAFZEL(+IVMSUB))
"RTN","IVMPTRN8",93,0)
 ;
"RTN","IVMPTRN8",94,0)
 ; create (ZEN) Enrollment segment
"RTN","IVMPTRN8",95,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEN(DFN)
"RTN","IVMPTRN8",96,0)
 ;
"RTN","IVMPTRN8",97,0)
 ; create (ZCD) Catastrophic Disability segment(s)
"RTN","IVMPTRN8",98,0)
 D BUILD^VAFHLZCD(.IVMZCD,DFN,,HLQ,HLFS)
"RTN","IVMPTRN8",99,0)
 F IVMSUB=0:0 S IVMSUB=+$O(IVMZCD(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",100,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(IVMZCD(+IVMSUB))
"RTN","IVMPTRN8",101,0)
 ;
"RTN","IVMPTRN8",102,0)
 ; Optionally create (ZMH) Military History segment for Purple Heart
"RTN","IVMPTRN8",103,0)
 D ENTER^VAFHLZMH(DFN,"IVMZMH","13")
"RTN","IVMPTRN8",104,0)
 I $P(IVMZMH(1,0),HLFS,3)="PH","YN"[$E($P(IVMZMH(1,0),HLFS,4)) S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMZMH(1,0)
"RTN","IVMPTRN8",105,0)
 ;
"RTN","IVMPTRN8",106,0)
 ; create (ZRD) Rated Disabilities segment(s)
"RTN","IVMPTRN8",107,0)
 D EN^VAFHLZRD(DFN,"1,2,3,4",HLQ,HLFS,"IVMZRD")
"RTN","IVMPTRN8",108,0)
 F IVMSUB=0:0 S IVMSUB=+$O(IVMZRD(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",109,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(IVMZRD(+IVMSUB,0))
"RTN","IVMPTRN8",110,0)
 ;
"RTN","IVMPTRN8",111,0)
 ; create (ZCT) Emergency Contact segment
"RTN","IVMPTRN8",112,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZCT(DFN,"1,2,3,4,5,6,7")
"RTN","IVMPTRN8",113,0)
 ;
"RTN","IVMPTRN8",114,0)
 ; create (ZEM) Employment Info. segment for (1) Patient & (2) Spouse
"RTN","IVMPTRN8",115,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEM(DFN,"1,2,3")
"RTN","IVMPTRN8",116,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEM(DFN,"1,2,3",2,2)
"RTN","IVMPTRN8",117,0)
 ;
"RTN","IVMPTRN8",118,0)
 ; create (ZGD) Guardian segment for (1) VA & (2) Civil 
"RTN","IVMPTRN8",119,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZGD(DFN,"1,2,3,4,5,6,7,8",1)
"RTN","IVMPTRN8",120,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZGD(DFN,"1,2,3,4,5,6,7,8",2)
"RTN","IVMPTRN8",121,0)
 ;
"RTN","IVMPTRN8",122,0)
 ;get the primary test for the income year
"RTN","IVMPTRN8",123,0)
 S TESTTYPE=$$GETTYPE^IVMPTRN9(DFN,IVMMTDT,.TESTCODE,.HARDSHIP,.ACTVIEN)
"RTN","IVMPTRN8",124,0)
 ;
"RTN","IVMPTRN8",125,0)
 ; The following function call returns:
"RTN","IVMPTRN8",126,0)
 ;   - Patient Relation IEN array in DGREL
"RTN","IVMPTRN8",127,0)
 ;   - Individual Annual Income IEN array in DGINC
"RTN","IVMPTRN8",128,0)
 ;   - Income Relation IEN array in DGINR
"RTN","IVMPTRN8",129,0)
 D ALL^DGMTU21(DFN,"VSC",IVMMTDT,"IPR",ACTVIEN)
"RTN","IVMPTRN8",130,0)
 ;
"RTN","IVMPTRN8",131,0)
 S EDBMTZ06=0 I $$VERZ06^EASPTRN1(DFN) S EDBMTZ06=1
"RTN","IVMPTRN8",132,0)
 ; create (ZIC) Income segment for veteran
"RTN","IVMPTRN8",133,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("V")),"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20")
"RTN","IVMPTRN8",134,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",135,0)
 I $P(^TMP("HLS",$J,IVMCT),"^",3)=HLQ S $P(^TMP("HLS",$J,IVMCT),"^",3)=$$HLDATE^HLFNC($E(IVMMTDT,1,3)-1_"0000")
"RTN","IVMPTRN8",136,0)
 ;
"RTN","IVMPTRN8",137,0)
 ; create (ZIR) Income Relation segment for veteran
"RTN","IVMPTRN8",138,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("V")),"1,2,3,4,5,10")
"RTN","IVMPTRN8",139,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^1"
"RTN","IVMPTRN8",140,0)
 ;
"RTN","IVMPTRN8",141,0)
 ; create (ZDP) Patient Dependent Info. segment for spouse
"RTN","IVMPTRN8",142,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZDP(+$G(DGREL("S")),"1,2,3,4,5,6,7,8,9")
"RTN","IVMPTRN8",143,0)
 I $P(^TMP("HLS",$J,IVMCT),HLFS,3)'=HLQ,($P($G(^(IVMCT)),HLFS,6)=HLQ) D
"RTN","IVMPTRN8",144,0)
 .; - pass non-existant SSNs as 0s
"RTN","IVMPTRN8",145,0)
 .S $P(X,HLFS,6)="000000000"
"RTN","IVMPTRN8",146,0)
 ;
"RTN","IVMPTRN8",147,0)
 ; create (ZIC) Income segment for spouse
"RTN","IVMPTRN8",148,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("S")),"1,2,3,4,5,6,7,8,9,10,11,12,16,17,18,19,20")
"RTN","IVMPTRN8",149,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",150,0)
 ;
"RTN","IVMPTRN8",151,0)
 ; create (ZIR) Income Relation segment for spouse
"RTN","IVMPTRN8",152,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("S")),"1,2,3")
"RTN","IVMPTRN8",153,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^"_$P(^TMP("HLS",$J,IVMCT),"^",2)
"RTN","IVMPTRN8",154,0)
 ;
"RTN","IVMPTRN8",155,0)
 ;
"RTN","IVMPTRN8",156,0)
 ; create ZDP, ZIC, and ZIR segments for all Means Test dependents
"RTN","IVMPTRN8",157,0)
 F IVMSUB=0:0 S IVMSUB=$O(DGREL("C",IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",158,0)
 .;
"RTN","IVMPTRN8",159,0)
 .; - create (ZDP) Dependent Info. segment for dependent child
"RTN","IVMPTRN8",160,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZDP(+$G(DGREL("C",IVMSUB)),"1,2,3,4,5,6,7,9")
"RTN","IVMPTRN8",161,0)
 .I $P(^TMP("HLS",$J,IVMCT),HLFS,3)'=HLQ,($P($G(^(IVMCT)),HLFS,6)=HLQ) D
"RTN","IVMPTRN8",162,0)
 ..; - pass non-existant SSNs as 0s
"RTN","IVMPTRN8",163,0)
 ..S $P(X,HLFS,6)="000000000"
"RTN","IVMPTRN8",164,0)
 .;
"RTN","IVMPTRN8",165,0)
 .; - create (ZIC) Income segment for dependent child
"RTN","IVMPTRN8",166,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("C",IVMSUB)),"1,2,3,4,5,6,7,8,9,10,11,12,15")
"RTN","IVMPTRN8",167,0)
 .I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",168,0)
 .;
"RTN","IVMPTRN8",169,0)
 .; - create (ZIR) Income Relation segment for dependent child
"RTN","IVMPTRN8",170,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("C",IVMSUB)),"1,2,3,6,7,8,9")
"RTN","IVMPTRN8",171,0)
 .I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^"_$P(^TMP("HLS",$J,IVMCT),"^",2)
"RTN","IVMPTRN8",172,0)
 .; 
"RTN","IVMPTRN8",173,0)
 ;
"RTN","IVMPTRN8",174,0)
 ; create (ZIO) Inpatient/Outpatient segment for veteran
"RTN","IVMPTRN8",175,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)="ZIO^1^"_$$EN^IVMUFNC1(DFN,IVMMTDT,.IVMQUERY)_"^"_$$LTD^IVMUFNC(DFN,.IVMQUERY)
"RTN","IVMPTRN8",176,0)
 ;
"RTN","IVMPTRN8",177,0)
 ; create (NTE) Notes and Comments segment
"RTN","IVMPTRN8",178,0)
 D NTE^IVMUFNC4(DFN,.IVMNTE,IVMMTDT)
"RTN","IVMPTRN8",179,0)
 I '$D(IVMNTE) D
"RTN","IVMPTRN8",180,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)="NTE^1"
"RTN","IVMPTRN8",181,0)
 I $D(IVMNTE) D
"RTN","IVMPTRN8",182,0)
 .; - get notes and comments
"RTN","IVMPTRN8",183,0)
 .F IVMSUB=0:0 S IVMSUB=$O(IVMNTE(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",184,0)
 ..S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMNTE(IVMSUB)
"RTN","IVMPTRN8",185,0)
 ;
"RTN","IVMPTRN8",186,0)
 ; create (IN1) Insurance segment(s) for all active insurance
"RTN","IVMPTRN8",187,0)
 K ^TMP("VAFIN1",$J)
"RTN","IVMPTRN8",188,0)
 D EN^VAFHLIN1(DFN,"1,4,5,7,8,9,12,13,15,16,17,28,36")
"RTN","IVMPTRN8",189,0)
 F IVMSUB=0:0 S IVMSUB=$O(^TMP("VAFIN1",$J,IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",190,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=^TMP("VAFIN1",$J,+IVMSUB,0)
"RTN","IVMPTRN8",191,0)
 ;
"RTN","IVMPTRN8",192,0)
 D GOTO^IVMPTRN9
"RTN","IVMPTRN8",193,0)
 Q
"VER")
8.0^22.0
**END**
**END**
