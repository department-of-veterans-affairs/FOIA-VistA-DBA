Released RG*1*45 SEQ #45
Extracted from mail message
**KIDS**:RG*1.0*45^

**INSTALL NAME**
RG*1.0*45
"BLD",2349,0)
RG*1.0*45^CLINICAL INFO RESOURCE NETWORK^0^3070112^y
"BLD",2349,1,0)
^^3^3^3070112^
"BLD",2349,1,1,0)
MPI CHANGES 3 & MPI CHANGES 4 ENHANCEMENTS
"BLD",2349,1,2,0)
Refer to patch RG*1.0*45 in the FORUM Patch Module for a complete
"BLD",2349,1,3,0)
description.
"BLD",2349,4,0)
^9.64PA^991.11^1
"BLD",2349,4,991.11,0)
991.11
"BLD",2349,4,991.11,222)
y^y^f^^y^^y^m^n
"BLD",2349,4,991.11,224)
N X S X=+^(0) I X=234
"BLD",2349,4,"B",991.11,991.11)
 
"BLD",2349,6.3)
9
"BLD",2349,"ABNS",0)
^9.66A^^
"BLD",2349,"ABPKG")
^^
"BLD",2349,"KRN",0)
^9.67PA^8989.52^19
"BLD",2349,"KRN",.4,0)
.4
"BLD",2349,"KRN",.401,0)
.401
"BLD",2349,"KRN",.402,0)
.402
"BLD",2349,"KRN",.403,0)
.403
"BLD",2349,"KRN",.5,0)
.5
"BLD",2349,"KRN",.84,0)
.84
"BLD",2349,"KRN",3.6,0)
3.6
"BLD",2349,"KRN",3.8,0)
3.8
"BLD",2349,"KRN",9.2,0)
9.2
"BLD",2349,"KRN",9.8,0)
9.8
"BLD",2349,"KRN",9.8,"NM",0)
^9.68A^10^10
"BLD",2349,"KRN",9.8,"NM",1,0)
RGADTP^^0^B80561867
"BLD",2349,"KRN",9.8,"NM",2,0)
RGADTP2^^0^B33963226
"BLD",2349,"KRN",9.8,"NM",3,0)
RGADT1^^0^B42198408
"BLD",2349,"KRN",9.8,"NM",4,0)
RGADTP1^^0^B30537639
"BLD",2349,"KRN",9.8,"NM",5,0)
RGEXHND1^^0^B37958809
"BLD",2349,"KRN",9.8,"NM",6,0)
RGHLLOG^^0^B22489065
"BLD",2349,"KRN",9.8,"NM",7,0)
RGSYSTAT^^0^B16892537
"BLD",2349,"KRN",9.8,"NM",8,0)
RGRSUTIL^^0^B14283785
"BLD",2349,"KRN",9.8,"NM",9,0)
RGEX01^^0^B32784010
"BLD",2349,"KRN",9.8,"NM",10,0)
RGMTETOT^^0^B28007355
"BLD",2349,"KRN",9.8,"NM","B","RGADT1",3)
 
"BLD",2349,"KRN",9.8,"NM","B","RGADTP",1)
 
"BLD",2349,"KRN",9.8,"NM","B","RGADTP1",4)
 
"BLD",2349,"KRN",9.8,"NM","B","RGADTP2",2)
 
"BLD",2349,"KRN",9.8,"NM","B","RGEX01",9)
 
"BLD",2349,"KRN",9.8,"NM","B","RGEXHND1",5)
 
"BLD",2349,"KRN",9.8,"NM","B","RGHLLOG",6)
 
"BLD",2349,"KRN",9.8,"NM","B","RGMTETOT",10)
 
"BLD",2349,"KRN",9.8,"NM","B","RGRSUTIL",8)
 
"BLD",2349,"KRN",9.8,"NM","B","RGSYSTAT",7)
 
"BLD",2349,"KRN",19,0)
19
"BLD",2349,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",2349,"KRN",19,"NM",1,0)
RG STATUS DISPLAY^^0
"BLD",2349,"KRN",19,"NM",2,0)
RG ADMIN COORD MENU^^3
"BLD",2349,"KRN",19,"NM","B","RG ADMIN COORD MENU",2)
 
"BLD",2349,"KRN",19,"NM","B","RG STATUS DISPLAY",1)
 
"BLD",2349,"KRN",19.1,0)
19.1
"BLD",2349,"KRN",101,0)
101
"BLD",2349,"KRN",409.61,0)
409.61
"BLD",2349,"KRN",771,0)
771
"BLD",2349,"KRN",870,0)
870
"BLD",2349,"KRN",8989.51,0)
8989.51
"BLD",2349,"KRN",8989.52,0)
8989.52
"BLD",2349,"KRN",8994,0)
8994
"BLD",2349,"KRN","B",.4,.4)
 
"BLD",2349,"KRN","B",.401,.401)
 
"BLD",2349,"KRN","B",.402,.402)
 
"BLD",2349,"KRN","B",.403,.403)
 
"BLD",2349,"KRN","B",.5,.5)
 
"BLD",2349,"KRN","B",.84,.84)
 
"BLD",2349,"KRN","B",3.6,3.6)
 
"BLD",2349,"KRN","B",3.8,3.8)
 
"BLD",2349,"KRN","B",9.2,9.2)
 
"BLD",2349,"KRN","B",9.8,9.8)
 
"BLD",2349,"KRN","B",19,19)
 
"BLD",2349,"KRN","B",19.1,19.1)
 
"BLD",2349,"KRN","B",101,101)
 
"BLD",2349,"KRN","B",409.61,409.61)
 
"BLD",2349,"KRN","B",771,771)
 
"BLD",2349,"KRN","B",870,870)
 
"BLD",2349,"KRN","B",8989.51,8989.51)
 
"BLD",2349,"KRN","B",8989.52,8989.52)
 
"BLD",2349,"KRN","B",8994,8994)
 
"BLD",2349,"QUES",0)
^9.62^^
"BLD",2349,"REQB",0)
^9.611^5^4
"BLD",2349,"REQB",2,0)
RG*1.0*40^2
"BLD",2349,"REQB",3,0)
RG*1.0*42^2
"BLD",2349,"REQB",4,0)
RG*1.0*43^2
"BLD",2349,"REQB",5,0)
RG*1.0*25^2
"BLD",2349,"REQB","B","RG*1.0*25",5)
 
"BLD",2349,"REQB","B","RG*1.0*40",2)
 
"BLD",2349,"REQB","B","RG*1.0*42",3)
 
"BLD",2349,"REQB","B","RG*1.0*43",4)
 
"DATA",991.11,234,0)
234^1^^^76
"DATA",991.11,234,10)
Primary View Reject
"DATA",991.11,234,99,0)
^991.1199^2^2^3061107^^
"DATA",991.11,234,99,1,0)
VistA data was rejected on the MPI either because the Authority Score was 
"DATA",991.11,234,99,2,0)
not high enough, or it failed a business rule.
"FIA",991.11)
CIRN HL7 EXCEPTION TYPE
"FIA",991.11,0)
^RGHL7(991.11,
"FIA",991.11,0,0)
991.11I
"FIA",991.11,0,1)
y^y^f^^y^^y^m^n
"FIA",991.11,0,10)
 
"FIA",991.11,0,11)
N X S X=+^(0) I X=234
"FIA",991.11,0,"RLRO")
 
"FIA",991.11,0,"VR")
1.0^RG
"FIA",991.11,991.11)
0
"FIA",991.11,991.112)
0
"FIA",991.11,991.1199)
0
"KRN",19,5663,-1)
3^2
"KRN",19,5663,0)
RG ADMIN COORD MENU^MPI/PD Patient Admin Coordinator Menu^^M^^^^^^^^CLINICAL INFO RESOURCE NETWORK^^1^
"KRN",19,5663,1,0)
^19.06^3^3^3061019^^^^
"KRN",19,5663,1,1,0)
The MPI/PD Patient Admin Coordinator Menu [RG ADMIN COORD 
"KRN",19,5663,1,2,0)
MENU] options allow control and monitoring of CMOR and 
"KRN",19,5663,1,3,0)
patient data activities.
"KRN",19,5663,10,0)
^19.01IP^41^6
"KRN",19,5663,10.1)
 
"KRN",19,5663,15)
 
"KRN",19,5663,20)
D ACTION^RGRSUTIL
"KRN",19,5663,99)
60600,49867
"KRN",19,5663,"U")
MPI/PD PATIENT ADMIN COORDINAT
"KRN",19,6720,-1)
0^1
"KRN",19,6720,0)
RG STATUS DISPLAY^Unresolved Exception Summary^^R^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",19,6720,1,0)
^^18^18^3061019^
"KRN",19,6720,1,1,0)
 The Unresolved Exception Summary calculates and presents the
"KRN",19,6720,1,2,0)
 following data.
"KRN",19,6720,1,3,0)
 - the number of unresolved exceptions in the CIRN HL7 EXCEPTION LOG 
"KRN",19,6720,1,4,0)
   (#991.1) file for the MPI/PD related entries in the CIRN HL7
"KRN",19,6720,1,5,0)
   EXCEPTION TYPE (#991.11) file,
"KRN",19,6720,1,6,0)
 - the number of unique patients with exceptions,
"KRN",19,6720,1,7,0)
 - the number of unresolved exceptions in the PATIENT DATA EXCEPTION
"KRN",19,6720,1,8,0)
   (#391.98) file with an EXCEPTION STATUS (#391.984) file value of
"KRN",19,6720,1,9,0)
   ACTION REQUIRED, DATA EXAMINED or BEING REVIEWED,
"KRN",19,6720,1,10,0)
 - the number of entries in the MPIF CMOR REQUEST (#984.9) file with
"KRN",19,6720,1,11,0)
   a STATUS (#.06) field value of OPEN, REQUESTED, PENDING APPROVAL,
"KRN",19,6720,1,12,0)
   APPROVED or DISAPPROVED,
"KRN",19,6720,1,13,0)
 
"KRN",19,6720,1,14,0)
 The Exception Handler and Patient Data Review numbers indicate how
"KRN",19,6720,1,15,0)
 up-to-date a site is in exception resolution.  The CMOR request
"KRN",19,6720,1,16,0)
 numbers specify how many requests for change of CMOR have been sent
"KRN",19,6720,1,17,0)
 and their resulting status.  This data can be useful in reducing the
"KRN",19,6720,1,18,0)
 number of exceptions.
"KRN",19,6720,25)
RGSYSTAT
"KRN",19,6720,"U")
UNRESOLVED EXCEPTION SUMMARY
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",991.11,0,4,6)
MAIL GROUP^P3.8'^XMB(3.8,^0;4^Q
"PKG",272,-1)
1^1
"PKG",272,0)
CLINICAL INFO RESOURCE NETWORK^RG^CIRN
"PKG",272,20,0)
^9.402P^^0
"PKG",272,22,0)
^9.49I^1^1
"PKG",272,22,1,0)
1.0^2990430^2990601^12555
"PKG",272,22,1,"PAH",1,0)
45^3070112
"PKG",272,22,1,"PAH",1,1,0)
^^3^3^3070112
"PKG",272,22,1,"PAH",1,1,1,0)
MPI CHANGES 3 & MPI CHANGES 4 ENHANCEMENTS
"PKG",272,22,1,"PAH",1,1,2,0)
Refer to patch RG*1.0*45 in the FORUM Patch Module for a complete
"PKG",272,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")
 
"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","RGADT1")
0^3^B42198408^B40790172
"RTN","RGADT1",1,0)
RGADT1 ;HIRMFO/GJC-BUILD ADT MESSAGES (A01/A03) ;09/21/99
"RTN","RGADT1",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**4,14,17,27,28,31,34,45**;30 Apr 99;Build 9
"RTN","RGADT1",3,0)
 Q  ; quit if called from the top
"RTN","RGADT1",4,0)
 ;
"RTN","RGADT1",5,0)
EN ; entry point to build/transmit ADT messages
"RTN","RGADT1",6,0)
 ; Messages built by this software are fired off by server protocols:
"RTN","RGADT1",7,0)
 ; RG ADT-A01 SERVER -or- RG ADT-A03 SERVER
"RTN","RGADT1",8,0)
 ;
"RTN","RGADT1",9,0)
 ; This code is called from the RG ADT INPATIENT ENCOUNTER DRIVER &
"RTN","RGADT1",10,0)
 ; RG ADT OUTPATIENT ENCOUNTER DRIVER protocols.
"RTN","RGADT1",11,0)
 ;
"RTN","RGADT1",12,0)
 ; RG ADT OUTPATIENT ENCOUNTER DRIVER is an item protocol under the
"RTN","RGADT1",13,0)
 ; SDAM APPOINTMENTS EVENTS protocol & RG ADT INPATIENT ENCOUNTER DRIVER
"RTN","RGADT1",14,0)
 ; hangs off of the DGPM MOVEMENT EVENTS protocol.
"RTN","RGADT1",15,0)
 ;
"RTN","RGADT1",16,0)
 ; RG ADT OUTPATIENT ENCOUNTER DRIVER hangs off of SDAM APPOINTMENTS
"RTN","RGADT1",17,0)
 ; EVENTS because of DBIA: 1320; RG ADT INPATIENT ENCOUNTER DRIVER
"RTN","RGADT1",18,0)
 ; hangs off of DGPM MOVEMENT EVENTS because of DBIA: 1181.
"RTN","RGADT1",19,0)
 ;
"RTN","RGADT1",20,0)
 ; Integration Agreements (IAs) utilized in this application:
"RTN","RGADT1",21,0)
 ; #1181-subscribers for the DGPM MOVEMENT EVENTS event driver
"RTN","RGADT1",22,0)
 ; #1320-subscribers for the SDAM APPOINTMENT EVENTS event driver
"RTN","RGADT1",23,0)
 ; #2070-check for a national ICN 1st piece, "MPI" node (global read)
"RTN","RGADT1",24,0)
 ; #2161-INIT^HLFNC2
"RTN","RGADT1",25,0)
 ; #2164-GENERATE^HLMA
"RTN","RGADT1",26,0)
 ; #2171-$$WHAT^XUAF4 (Name_"^"_Station Number, we're after Station #)
"RTN","RGADT1",27,0)
 ; #2541-$$KSP^XUPARAM (facility ien, file 4)
"RTN","RGADT1",28,0)
 ; #2624-$$SEND^VAFHUTL()
"RTN","RGADT1",29,0)
 ; #3015-PID segment generation (CIRN PD)
"RTN","RGADT1",30,0)
 ; #3016-EVN segment generation (CIRN PD)
"RTN","RGADT1",31,0)
 ; #3017-PD1 segment generator (CIRN PD)
"RTN","RGADT1",32,0)
 ; #3018-PV1 segment generator (CIRN PD)
"RTN","RGADT1",33,0)
 ; #3072-assign a local ICN to a patient
"RTN","RGADT1",34,0)
 ; #3630-BLDEVN^VAFCQRY, BLDPD1^VAFCQRY & BLDPID^VAFCQRY
"RTN","RGADT1",35,0)
 ; #2988-FILE^VAFCTFU
"RTN","RGADT1",36,0)
 ;
"RTN","RGADT1",37,0)
 ; I $D(RGDG101) then we know we've dropped into this software
"RTN","RGADT1",38,0)
 ; from the DGPM MOVEMENT EVENTS protocol (RG ADT INPATIENT
"RTN","RGADT1",39,0)
 ; ENCOUNTER DRIVER)
"RTN","RGADT1",40,0)
 ;
"RTN","RGADT1",41,0)
 ; Note: DFN is a supported variable in the case of admissions and
"RTN","RGADT1",42,0)
 ; discharges within the Registration package. (part of the discovery
"RTN","RGADT1",43,0)
 ; in the development of RG*1.0*14)
"RTN","RGADT1",44,0)
 ;
"RTN","RGADT1",45,0)
 ; first check if HL7 2.3 messaging has been disabled.  DBIA: 2624
"RTN","RGADT1",46,0)
 I '$P($$SEND^VAFHUTL(),"^",2) Q
"RTN","RGADT1",47,0)
 S RGOK=0,RGDATE=""
"RTN","RGADT1",48,0)
 I $D(RGDG101) D
"RTN","RGADT1",49,0)
 . I $G(DFN)'=+$G(DFN) Q  ; DFN must be valid
"RTN","RGADT1",50,0)
 .; if an national ICN is missing, assign a local then quit
"RTN","RGADT1",51,0)
 . I '$P($G(^DPT(DFN,"MPI")),"^") S RGLOCAL=$$ICNLC^MPIF001(DFN) Q
"RTN","RGADT1",52,0)
 . Q:$$IFLOCAL^MPIF001(DFN)  ; IA 2701, patient has local icn, quit
"RTN","RGADT1",53,0)
 . N %,VAERR,VAIP
"RTN","RGADT1",54,0)
 . S VAIP("D")="LAST" D IN5^VADPT ; dfn should be defined at this point
"RTN","RGADT1",55,0)
 . S RGTYPE=+$G(VAIP(2)) ; RGTYPE=movement type
"RTN","RGADT1",56,0)
 . I RGTYPE'=1&(RGTYPE'=3) Q  ; admission or discharges only
"RTN","RGADT1",57,0)
 . S RGENVR=$S(RGTYPE=1:"A1",1:"A2") ; A1=admission, A2=discharge
"RTN","RGADT1",58,0)
 . S RGDATE=$P($G(VAIP(3)),"^"),RGMOV=$G(VAIP(1))
"RTN","RGADT1",59,0)
 . ; RGDATE=movement date/time, RGMOV=ien #405
"RTN","RGADT1",60,0)
 . S:RGDATE]"" RGOK=1
"RTN","RGADT1",61,0)
 . Q
"RTN","RGADT1",62,0)
 ;
"RTN","RGADT1",63,0)
 ; I $D(RGSD101) then we know we've dropped into this software
"RTN","RGADT1",64,0)
 ; from the SDAM APPOINTMENT EVENTS protocol (RG ADT OUTPATIENT
"RTN","RGADT1",65,0)
 ; ENCOUNTER DRIVER)
"RTN","RGADT1",66,0)
 ;
"RTN","RGADT1",67,0)
 ; Check SDAMEVT for values between five and nine inclusive.  See if
"RTN","RGADT1",68,0)
 ; this particular outpatient encounter has a status of CHECKED OUT.
"RTN","RGADT1",69,0)
 ; gjc@Hines OI for patch 14
"RTN","RGADT1",70,0)
 ;
"RTN","RGADT1",71,0)
 ; Note: DFN is not a supported variable in the case of clinic
"RTN","RGADT1",72,0)
 ; appointments and workload crediting for count clinics within the
"RTN","RGADT1",73,0)
 ; Scheduling package. (part of the discovery in the development of
"RTN","RGADT1",74,0)
 ; RG*1.0*14)
"RTN","RGADT1",75,0)
 ;
"RTN","RGADT1",76,0)
 ; check-out, stop code add/edit, disp add/edit?
"RTN","RGADT1",77,0)
 N I
"RTN","RGADT1",78,0)
 I $D(RGSD101),($D(SDAMEVT))#2 N DFN D
"RTN","RGADT1",79,0)
 . ; Note: DFN is unstable; it's up to us to define it...
"RTN","RGADT1",80,0)
 . ;chk-out, stop code add, stop code change, disp add & disp change
"RTN","RGADT1",81,0)
 . I SDAMEVT<5!(SDAMEVT>9) Q
"RTN","RGADT1",82,0)
 . S RGTYPE=SDAMEVT,RGENVR="A3"
"RTN","RGADT1",83,0)
 . N RGSDOE,RGPARSE,RGPROC,RGTMP S RGPROC=0
"RTN","RGADT1",84,0)
 . F  S RGPROC=$O(^TMP("SDEVT",$J,SDHDL,RGPROC)) Q:'RGPROC  D
"RTN","RGADT1",85,0)
 .. S RGSDOE=0
"RTN","RGADT1",86,0)
 .. F  S RGSDOE=$O(^TMP("SDEVT",$J,SDHDL,RGPROC,"SDOE",RGSDOE)) Q:'RGSDOE  D
"RTN","RGADT1",87,0)
 ... S RGSDOE(0)=$G(^TMP("SDEVT",$J,SDHDL,RGPROC,"SDOE",RGSDOE,0,"AFTER"))
"RTN","RGADT1",88,0)
 ... ; Note: RGSDOE(0)=zero node of 409.68, DFN is the second piece 
"RTN","RGADT1",89,0)
 ... S DFN=$P(RGSDOE(0),"^",2) Q:'DFN  ; DFN must exist
"RTN","RGADT1",90,0)
 ... ; ignore current inpatients
"RTN","RGADT1",91,0)
 ... Q:$L($G(^DPT(DFN,.1)))  ; ward location check IA: 10035
"RTN","RGADT1",92,0)
 ...; if an national ICN is missing, assign a local then quit
"RTN","RGADT1",93,0)
 ... I '$P($G(^DPT(DFN,"MPI")),"^") S RGLOCAL=$$ICNLC^MPIF001(DFN) Q
"RTN","RGADT1",94,0)
 ... Q:$$IFLOCAL^MPIF001(DFN)  ; IA 2701, patient has local icn, quit
"RTN","RGADT1",95,0)
 ... K RGPARSE D PARSE^SDOE(.RGSDOE,"EXTERNAL","RGPARSE")
"RTN","RGADT1",96,0)
 ... I $G(RGPARSE(.12))="CHECKED OUT" S RGTMP=$P(RGSDOE(0),U)
"RTN","RGADT1",97,0)
 ... S:$G(RGTMP)>RGDATE RGDATE=RGTMP
"RTN","RGADT1",98,0)
 ... Q
"RTN","RGADT1",99,0)
 .. Q
"RTN","RGADT1",100,0)
 . S:$G(RGDATE)]"" RGOK=1
"RTN","RGADT1",101,0)
 . Q
"RTN","RGADT1",102,0)
 ; S ^TMP("RGTRACE",$J)=1
"RTN","RGADT1",103,0)
 I 'RGOK K RGLOCAL,RGTYPE,RGMOV,RGDATE,RGENVR,RGOK Q  ; quit if not A01 or A03
"RTN","RGADT1",104,0)
 I '($G(DGQUIET)) S:$D(^TMP("RGTRACE",$J)) RGTRACE=1
"RTN","RGADT1",105,0)
 N RGSITE S RGSITE=+$$SITE^VASITE
"RTN","RGADT1",106,0)
 ;before updating and broadcasting check to see if the date and/or event changed
"RTN","RGADT1",107,0)
 N LIST,X,OUT,RGCHNG,RGDLT,RGEVN D TFL^VAFCTFU1(.LIST,DFN) S (RGCHNG,OUT,X)=0 F  S X=$O(LIST(X)) Q:'X!(OUT=1)  D
"RTN","RGADT1",108,0)
 . S RGDATE=$P(RGDATE,"."),RGDLT=$P(LIST(X),"^",3),RGDLT=$P(RGDLT,"."),RGEVN=$P(LIST(X),"^",4)
"RTN","RGADT1",109,0)
 . I $P(LIST(X),"^")=$P($$SITE^VASITE,"^",3) S OUT=1 D
"RTN","RGADT1",110,0)
 .. I RGDATE'=RGDLT D  Q
"RTN","RGADT1",111,0)
 ... I RGDATE>RGDLT S RGCHNG=1
"RTN","RGADT1",112,0)
 .. I RGDATE=RGDLT D
"RTN","RGADT1",113,0)
 .. I $E(RGENVR,2)'=RGEVN D
"RTN","RGADT1",114,0)
 ... I RGENVR="A3" S RGCHNG=0
"RTN","RGADT1",115,0)
 ... I RGENVR="A1" S RGCHNG=1
"RTN","RGADT1",116,0)
 ... I RGENVR="A2" S RGCHNG=1
"RTN","RGADT1",117,0)
 ;if no change in DLT or Event Reason quit
"RTN","RGADT1",118,0)
 Q:RGCHNG=0
"RTN","RGADT1",119,0)
 D FILE^VAFCTFU(DFN,RGSITE_"^"_$G(RGDATE)_"^"_$G(RGENVR),1)
"RTN","RGADT1",120,0)
 ;do FILE^VAFCTFU to update DLT and event reason
"RTN","RGADT1",121,0)
 I $D(RGTRACE) D EVENT,EXIT Q
"RTN","RGADT1",122,0)
 N ZTDESC,ZTRTN,ZTSAVE,ZTIO,ZTDTH
"RTN","RGADT1",123,0)
 S ZTDESC="CIRN HL7 ADT-"_$S(RGTYPE=1:"A01",1:"A03")_" Messaging"
"RTN","RGADT1",124,0)
 S ZTRTN="EVENT^RGADT1",ZTIO="",ZTDTH=$H
"RTN","RGADT1",125,0)
 F I="DFN","RGDATE","RGTYPE","RGENVR" S ZTSAVE(I)=""
"RTN","RGADT1",126,0)
 ; check for $D of RGDG101 & RGSD101 need to know protocol executed
"RTN","RGADT1",127,0)
 S:$D(RGDG101) ZTSAVE("RGDG101")="" S:$D(RGSD101) ZTSAVE("RGSD101")=""
"RTN","RGADT1",128,0)
 S:$D(RGMOV) ZTSAVE("RGMOV")="" ; defined for admissions & discharges
"RTN","RGADT1",129,0)
 S:$D(SDOE) ZTSAVE("SDOE")="" ; file ien: 409.68, clinic check out
"RTN","RGADT1",130,0)
 D ^%ZTLOAD,EXIT
"RTN","RGADT1",131,0)
 K DGQUIET
"RTN","RGADT1",132,0)
 Q
"RTN","RGADT1",133,0)
 ;
"RTN","RGADT1",134,0)
EVENT ; build the HL7 message
"RTN","RGADT1",135,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","RGADT1",136,0)
 S RGEVT=$S(RGTYPE=1:"A01",1:"A03") K HL
"RTN","RGADT1",137,0)
 D INIT^HLFNC2("RG ADT-"_RGEVT_" 2.4 SERVER",.HL)
"RTN","RGADT1",138,0)
 I $G(HL) Q  ; error
"RTN","RGADT1",139,0)
 D BUILD
"RTN","RGADT1",140,0)
 D GENERATE^HLMA("RG ADT-"_RGEVT_" 2.4 SERVER","LM",1,.RGRSLT,"",.HL)
"RTN","RGADT1",141,0)
 D KILL^HLTRANS
"RTN","RGADT1",142,0)
 K HLA("HLS"),RGDATE,RGDG101,RGENVR,RGEVT,RGSD101,RGTYPE
"RTN","RGADT1",143,0)
 Q
"RTN","RGADT1",144,0)
EXIT ; kill and quit
"RTN","RGADT1",145,0)
 K ^TMP("RGTRACE",$J),RGDATE,RGENVR,RGEVT,RGOK,RGLOCAL,RGMOV,RGPAT
"RTN","RGADT1",146,0)
 K RGRSLT,RGFSTR,RGTRACE,RGTYPE
"RTN","RGADT1",147,0)
 Q
"RTN","RGADT1",148,0)
BUILD ; build the ADT message
"RTN","RGADT1",149,0)
 ; EVN segment
"RTN","RGADT1",150,0)
 N CNT,ERR,EVN,RGCNT,SEQ
"RTN","RGADT1",151,0)
 S RGCNT=1
"RTN","RGADT1",152,0)
 D BLDEVN^VAFCQRY(DFN,"1,2,4,5,6,7",.EVN,.HL,$G(HL("ETN")))
"RTN","RGADT1",153,0)
 S HLA("HLS",RGCNT)=$G(EVN(1)) S RGCNT=RGCNT+1
"RTN","RGADT1",154,0)
 N PID S SEQ="ALL" D BLDPID^VAFCQRY(DFN,1,.SEQ,.PID,.HL,.ERR) S HLA("HLS",RGCNT)=PID(1) S X=1,CNT=1 F  S X=$O(PID(X)) Q:'X  I $D(PID(X)) S HLA("HLS",RGCNT,CNT)=PID(X),CNT=CNT+1
"RTN","RGADT1",155,0)
 S RGCNT=RGCNT+1
"RTN","RGADT1",156,0)
 ; PD1 segment
"RTN","RGADT1",157,0)
 N PD1
"RTN","RGADT1",158,0)
 S SEQ="3" D BLDPD1^VAFCQRY(DFN,.SEQ,.PD1,.HL,.ERR) S HLA("HLS",RGCNT)=PD1(1)
"RTN","RGADT1",159,0)
 S RGCNT=RGCNT+1
"RTN","RGADT1",160,0)
 ; PV1 segment
"RTN","RGADT1",161,0)
 S RGFSTR="2,3,4,5,"_$$COMMANUM(7,45)
"RTN","RGADT1",162,0)
 ;for admission/discharges (registration)
"RTN","RGADT1",163,0)
 I RGTYPE=1!(RGTYPE=3) S HLA("HLS",4)=$$IN^VAFHLPV1(DFN,RGDATE,RGFSTR,RGMOV,"","")
"RTN","RGADT1",164,0)
 ;for scheduling events: checkout
"RTN","RGADT1",165,0)
 I RGTYPE'=1&(RGTYPE'=3) S HLA("HLS",4)=$$EN^VAFHLPV1("",,RGFSTR,,HL("Q"),HL("FS"))
"RTN","RGADT1",166,0)
 S HLA("HLS",4)=$$FAC(HLA("HLS",4))
"RTN","RGADT1",167,0)
 ; adding ZPD segment for POW Status - patch P
"RTN","RGADT1",168,0)
 S HLA("HLS",5)=$$EN1^VAFHLZPD(DFN,"1,17,21,34") ;**45 changed to EN1 call and added PSEUDO SSN REASON TO ZPD SEGMENT
"RTN","RGADT1",169,0)
 ;**45 added 21 and 1 to ZPD call also
"RTN","RGADT1",170,0)
 Q
"RTN","RGADT1",171,0)
COMMANUM(FROM,TO) ;Build comma seperated list of numbers
"RTN","RGADT1",172,0)
 ;Input  : FROM - Starting number (default = 1)
"RTN","RGADT1",173,0)
 ;                   TO - Ending number (default = FROM)
"RTN","RGADT1",174,0)
 ;Output : Comma separated list of numbers between FROM and TO
"RTN","RGADT1",175,0)
 ;             (Ex: 1,2,3)
"RTN","RGADT1",176,0)
 ;Notes  : Call assumes FROM <= TO
"RTN","RGADT1",177,0)
 ;             copied from COMMANUM^VAFCADT2
"RTN","RGADT1",178,0)
 ;
"RTN","RGADT1",179,0)
 S FROM=$G(FROM) S:(FROM="") FROM=1
"RTN","RGADT1",180,0)
 S TO=$G(TO) S:(TO="") TO=FROM
"RTN","RGADT1",181,0)
 N OUTPUT,X
"RTN","RGADT1",182,0)
 S OUTPUT=FROM
"RTN","RGADT1",183,0)
 F X=(FROM+1):1:TO S OUTPUT=(OUTPUT_","_X)
"RTN","RGADT1",184,0)
 Q OUTPUT
"RTN","RGADT1",185,0)
 ;
"RTN","RGADT1",186,0)
FAC(X) ; set facility information, in the form of the Station Number, into
"RTN","RGADT1",187,0)
 ; PV1(3).
"RTN","RGADT1",188,0)
 ; input: the entire PV1 segment
"RTN","RGADT1",189,0)
 ; yield: updated PV1 segment; PV1(3) has facility information (Sta. #)
"RTN","RGADT1",190,0)
 N Y0,Y1 S Y0=$E(HL("ECH"),$L(HL("ECH")))_$$WHAT^XUAF4(+$$KSP^XUPARAM("INST"),99)
"RTN","RGADT1",191,0)
 S Y1=$P(X,HL("FS"),4),$P(Y1,$E(HL("ECH")),4)=Y0,$P(X,HL("FS"),4)=Y1
"RTN","RGADT1",192,0)
 Q X
"RTN","RGADTP")
0^1^B80561867^B52218482
"RTN","RGADTP",1,0)
RGADTP ;BIR/DLR-ADT PROCESSOR TO RETRIGGER A08 or A04 MESSAGES WITH AL/AL (COMMIT/APPLICATION) ACKNOWLEDGEMENTS ;5/28/02
"RTN","RGADTP",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**26,27,20,34,35,40,45**;30 Apr 99;Build 9
"RTN","RGADTP",3,0)
 ;
"RTN","RGADTP",4,0)
 ;Reference to BLDEVN^VAFCQRY and BLDPID^VAFCQRY supported by IA #3630
"RTN","RGADTP",5,0)
 ;Reference to EN1^VAFHLZEL is supported by IA #752
"RTN","RGADTP",6,0)
 ;Reference to Patient file (#2) PREFERRED FACILITY (#27.02) is supported by IA #1850
"RTN","RGADTP",7,0)
 ;Reference to $$PV2, $$PHARA, $$LABE, $$RADE ^VAFCSB is supported by IA #4921
"RTN","RGADTP",8,0)
 ;
"RTN","RGADTP",9,0)
INIT ;
"RTN","RGADTP",10,0)
 N RGER,RGSITE,ARRAY,MSH,RGLOCAL,RGEVNT,REP,DIC,DR,DIE,DA,DLAYGO
"RTN","RGADTP",11,0)
 S RGER=""
"RTN","RGADTP",12,0)
 D IN
"RTN","RGADTP",13,0)
 D PROCIN
"RTN","RGADTP",14,0)
 D GENACK
"RTN","RGADTP",15,0)
 Q
"RTN","RGADTP",16,0)
PROC ;processing entry point
"RTN","RGADTP",17,0)
 N HLA,RGADT,PV1,DIC,ARRAY,RGEVNT,RGLOCAL,REP,ICN,RGSITE
"RTN","RGADTP",18,0)
 S RGEVNT=HL("ETN")
"RTN","RGADTP",19,0)
 I $G(HL("MID"))'="" S RGADT=HL("MID")
"RTN","RGADTP",20,0)
 I $G(HL("MID"))="" S RGADT=999
"RTN","RGADTP",21,0)
 D IN
"RTN","RGADTP",22,0)
 S ICN=$G(ARRAY("ICN"))
"RTN","RGADTP",23,0)
 I +$G(ICN)<1 Q  ;quit if no ICN
"RTN","RGADTP",24,0)
 I $E($G(ICN),1,3)=$P($$SITE^VASITE,"^",3) Q  ;quit if ICN is a local
"RTN","RGADTP",25,0)
 S ZTSAVE("DFN")="",ZTSAVE("RGEVNT")="",ZTSAVE("HLA(""HLS"",")="",ZTRTN="SEND^RGADTPC",ZTDESC="Sending HL7 Patient Update...",ZTIO="RG QUEUE",ZTDTH=$H D ^%ZTLOAD
"RTN","RGADTP",26,0)
 K ZTSAVE,ZTRTN,ZTDESC,ZTIO,ZTDTH
"RTN","RGADTP",27,0)
 Q
"RTN","RGADTP",28,0)
IN ;Process in the ADT A04/A08 (routing logic)
"RTN","RGADTP",29,0)
 N RGI,MSG,RG,SG,DFN,EVN,SITE,RGC,RGJ,DIC,PV1,PID,COMP,ENT,EN,THLA,LAB,RAD,PHARM,TMP
"RTN","RGADTP",30,0)
 S ENT=1,REP=$E(HL("ECH"),2),COMP=$E(HL("ECH"),1)
"RTN","RGADTP",31,0)
 ;set local flag to indicate the processing of an outbound for reformatting
"RTN","RGADTP",32,0)
 I $P($G(HL("SAF")),COMP)=$P($$SITE^VASITE,"^",3) S RGLOCAL=1
"RTN","RGADTP",33,0)
 I $P($G(HL("SAF")),COMP)'=$P($$SITE^VASITE,"^",3) S RGLOCAL=0
"RTN","RGADTP",34,0)
 S RGC=$E($G(HL("ECH")),1)
"RTN","RGADTP",35,0)
 F RGI=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE,SG=$E(HLNODE,1,3) D
"RTN","RGADTP",36,0)
 .S RGJ=0 F  S RGJ=$O(HLNODE(RGJ)) Q:'RGJ  S MSG(RGJ)=HLNODE(RGJ)
"RTN","RGADTP",37,0)
 .D:SG?2A1(1A,1N) PICK
"RTN","RGADTP",38,0)
 ;if message MSH sending facility matches the PID assigning authority update
"RTN","RGADTP",39,0)
 S ENT=0,EN=1 F  S ENT=$O(THLA("HLS",ENT)) Q:ENT=""  D
"RTN","RGADTP",40,0)
 .S HLA("HLS",EN)=THLA("HLS",ENT),EN=EN+1
"RTN","RGADTP",41,0)
 .I $E($G(THLA("HLS",ENT)),1,3)="PID" D
"RTN","RGADTP",42,0)
 ..I $O(THLA("HLS",ENT,""))'="" S CNT="" F  S CNT=$O(THLA("HLS",ENT,CNT)) Q:CNT=""  S HLA("HLS",EN-1,CNT)=THLA("HLS",ENT,CNT)
"RTN","RGADTP",43,0)
 ..S EN=EN+1
"RTN","RGADTP",44,0)
 .I $E($G(THLA("HLS",ENT)),1,3)="PV1" I RGLOCAL S TMP=$$PV2 I TMP'="" S HLA("HLS",EN)=$$PV2,EN=EN+1
"RTN","RGADTP",45,0)
 .I $E($G(THLA("HLS",ENT)),1,3)="ZPD" I RGLOCAL D
"RTN","RGADTP",46,0)
 ..S RAD=$$RADE I RAD'="" S HLA("HLS",EN)=RAD,EN=EN+1
"RTN","RGADTP",47,0)
 ..S LAB=$$LABE I LAB'="" S HLA("HLS",EN)=LAB,EN=EN+1
"RTN","RGADTP",48,0)
 ..S PHARM=$$PHARA I PHARM'="" S HLA("HLS",EN)=PHARM,EN=EN+1
"RTN","RGADTP",49,0)
QUIT Q
"RTN","RGADTP",50,0)
ROUTE ;
"RTN","RGADTP",51,0)
 N RGERR
"RTN","RGADTP",52,0)
 I $G(RGEVNT)="" S RGEVNT=$G(HL("ETN"))
"RTN","RGADTP",53,0)
 N MPI S MPI=$$MPILINK^MPIFAPI() D
"RTN","RGADTP",54,0)
 .I $P($G(MPI),U)'=-1 S HLL("LINKS",1)="RG ADT-"_HL("ETN")_" 2.4 CLIENT^"_MPI
"RTN","RGADTP",55,0)
 .I $P($G(MPI),U)=-1 D
"RTN","RGADTP",56,0)
 ..N RGLOG,RGMTXT D START^RGHLLOG(HLMTIEN,"","") S RGMTXT="for DFN#"_$G(DFN)
"RTN","RGADTP",57,0)
 ..D EXC^RGHLLOG(224,"No MPI link identified"_RGMTXT,$G(DFN)) S RGERR=1
"RTN","RGADTP",58,0)
 I $G(RGERR)'=1 S ^XTMP("RG"_HL("ETN")_"%"_DFN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"RG"_HL("ETN")_" msg to MPI for DFN "_DFN S ^XTMP("RG"_HL("ETN")_"%"_DFN,"MPI",0)="A"
"RTN","RGADTP",59,0)
 Q
"RTN","RGADTP",60,0)
RESP ;
"RTN","RGADTP",61,0)
 N RGER,RGSITE,ARRAY,MSH,RGLOCAL,RGEVNT,RGI,MSG,RG,SG,DFN,EVN,SITE,RGC,RGJ,DIC,PV1,PID
"RTN","RGADTP",62,0)
 D IN
"RTN","RGADTP",63,0)
 Q
"RTN","RGADTP",64,0)
PICK ;check routine for segment entry point
"RTN","RGADTP",65,0)
 I $T(@SG)]"" D @SG
"RTN","RGADTP",66,0)
 I $T(@SG)="" Q
"RTN","RGADTP",67,0)
 Q
"RTN","RGADTP",68,0)
MSA ;process the MSA segment
"RTN","RGADTP",69,0)
 N ARRAY,CNT,DFN,EXIT,HLCOMP,RGAA,RGERR,RGEVNT,RGMSG,RETURN,RGX,RGY
"RTN","RGADTP",70,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",71,0)
 S RGAA=MSG,EXIT=0,RGMSG=$P(RGAA,HL("FS"),3),RGERR=$P(RGAA,HL("FS"),4),RGMSG=$$MSG^HLCSUTL(RGMSG,"RETURN(1)") K RGMSG
"RTN","RGADTP",72,0)
 S CNT=1,RGX=0 F  S RGX=$O(RETURN(1,RGX)) Q:'RGX!(EXIT=1)  D
"RTN","RGADTP",73,0)
 .I RETURN(1,RGX)'="" D
"RTN","RGADTP",74,0)
 ..I $D(RGMSG) S RGMSG(CNT)=RETURN(1,RGX),CNT=CNT+1
"RTN","RGADTP",75,0)
 ..I '$D(RGMSG) S RGMSG=RETURN(1,RGX),RGY=RGX
"RTN","RGADTP",76,0)
 .I RETURN(1,RGX)="" D  S CNT=1 K RGMSG
"RTN","RGADTP",77,0)
 ..I $E(RETURN(1,RGY),1,3)="MSH" D MSH
"RTN","RGADTP",78,0)
 ..I $E(RETURN(1,RGY),1,3)="PID" D PIDP^RGADTP1(.RGMSG,.ARRAY,.HL) S EXIT=1
"RTN","RGADTP",79,0)
 S DFN=$G(ARRAY("DFN"))
"RTN","RGADTP",80,0)
 ;**45 Log Exception if ERROR returned in MSA segment
"RTN","RGADTP",81,0)
 I RGERR'="" D
"RTN","RGADTP",82,0)
 .D START^RGHLLOG(HLMTIEN,"","")
"RTN","RGADTP",83,0)
 .I RGERR["Rejected" D EXC^RGHLLOG(234,RGERR_" for HL msg# "_HLMTIEN,DFN)
"RTN","RGADTP",84,0)
 .;;I RGERR'["Rejected",RGERR'["Potential" D EXC^RGHLLOG(208,RGERR_" for HL msg# "_HLMTIEN,DFN) ;don't log exception if potential cat edit, already have one on MPI side
"RTN","RGADTP",85,0)
 .D STOP^RGHLLOG(0)
"RTN","RGADTP",86,0)
 I $D(^XTMP("RG"_HL("ETN")_"%"_DFN,0)) K ^XTMP("RG"_HL("ETN")_"%"_DFN)
"RTN","RGADTP",87,0)
 Q
"RTN","RGADTP",88,0)
MSH ;
"RTN","RGADTP",89,0)
 S MSH=1
"RTN","RGADTP",90,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",91,0)
 I 'RGLOCAL S RGC=$E(HL("ECH"),1)
"RTN","RGADTP",92,0)
 S RGSITE=$P($P(MSG,HL("FS"),4),RGC),RGEVNT=$P($P(MSG,HL("FS"),9),RGC,2)
"RTN","RGADTP",93,0)
 Q
"RTN","RGADTP",94,0)
PV2() ;build pv2 segment
"RTN","RGADTP",95,0)
 N RET S RET=""
"RTN","RGADTP",96,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",97,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",98,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",99,0)
 Q $$PV2^VAFCSB
"RTN","RGADTP",100,0)
PHARA() ;build obx to show active prescriptions
"RTN","RGADTP",101,0)
 N RET S RET=""
"RTN","RGADTP",102,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",103,0)
 I '$$PATCH^XPDUTL("PSS*1.0*101") Q RET
"RTN","RGADTP",104,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",105,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",106,0)
 Q $$PHARA^VAFCSB
"RTN","RGADTP",107,0)
LABE() ;BUILD OBX FOR LAST LAB TEST DATE
"RTN","RGADTP",108,0)
 N RET S RET=""
"RTN","RGADTP",109,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",110,0)
 I '$$PATCH^XPDUTL("LR*5.2*295") Q RET
"RTN","RGADTP",111,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",112,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",113,0)
 Q $$LABE^VAFCSB
"RTN","RGADTP",114,0)
RADE() ;BUILD OBX FOR LAST RADIOLOGY TEST DATE
"RTN","RGADTP",115,0)
 N RET S RET=""
"RTN","RGADTP",116,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",117,0)
 I '$$PATCH^XPDUTL("RA*5.0*76") Q RET
"RTN","RGADTP",118,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",119,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",120,0)
 Q $$RADE^VAFCSB
"RTN","RGADTP",121,0)
EVN ;;
"RTN","RGADTP",122,0)
 N CNT,ERR S EVN=RGI
"RTN","RGADTP",123,0)
 I RGLOCAL S (EVN(1),THLA("HLS",ENT))=MSG,ENT=ENT+1
"RTN","RGADTP",124,0)
 I 'RGLOCAL D
"RTN","RGADTP",125,0)
 .S ARRAY("EVR")=$P(MSG,HL("FS"),2),ARRAY("DLT")=$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","RGADTP",126,0)
 .S ARRAY("EVNAME")=$$FMNAME^XLFNAME($P(MSG,HL("FS"),2),"",$E(HL("ECH"),1)),ARRAY("SENDING SITE")=$P(MSG,HL("FS"),8)
"RTN","RGADTP",127,0)
 Q
"RTN","RGADTP",128,0)
EVNP ;
"RTN","RGADTP",129,0)
 N EVNX
"RTN","RGADTP",130,0)
 I $G(DFN)'="" D BLDEVN^VAFCQRY(DFN,"1,2,4,5,6,7",.EVN,.HL,$G(HL("ETN")),.ERR) S CNT=0,EVNX=0 F  S EVNX=$O(EVN(EVNX)) Q:'EVNX  D
"RTN","RGADTP",131,0)
 .I CNT>0 S THLA("HLS",EVN,CNT)=EVN(EVNX),CNT=CNT+1
"RTN","RGADTP",132,0)
 .I CNT'>0 S THLA("HLS",EVN)=EVN(EVNX),CNT=CNT+1
"RTN","RGADTP",133,0)
 Q
"RTN","RGADTP",134,0)
PID ;;
"RTN","RGADTP",135,0)
 N CNT,PIDX
"RTN","RGADTP",136,0)
 I RGLOCAL D
"RTN","RGADTP",137,0)
 .N HLCOMP S HLCOMP=$E(HL("ECH"),1),THLA("HLS",ENT)=MSG,DFN=$P($P(MSG,HL("FS"),4),HLCOMP) ;**45 REMOVED +
"RTN","RGADTP",138,0)
 .D EVNP
"RTN","RGADTP",139,0)
 .D BLDPID^VAFCQRY(DFN,1,"ALL",.PID,.HL)
"RTN","RGADTP",140,0)
 .;get ICN value in the PID segment
"RTN","RGADTP",141,0)
 .S ARRAY("ICN")=+$P($P(PID(1),HL("FS"),4),HLCOMP)
"RTN","RGADTP",142,0)
 .S CNT=0,PIDX=0 F  S PIDX=$O(PID(PIDX)) Q:'PIDX  D
"RTN","RGADTP",143,0)
 ..I CNT>0 S THLA("HLS",ENT,CNT)=PID(PIDX),CNT=CNT+1
"RTN","RGADTP",144,0)
 ..I CNT'>0 S THLA("HLS",ENT)=PID(PIDX),CNT=CNT+1
"RTN","RGADTP",145,0)
 .S ENT=ENT+1
"RTN","RGADTP",146,0)
 I 'RGLOCAL D PIDP^RGADTP1(.MSG,.ARRAY,.HL)
"RTN","RGADTP",147,0)
 Q
"RTN","RGADTP",148,0)
PD1 ;SET PD1 SEQ 3 TO BE PREFERRED FACILITY INSTEAD OF CMOR PATCH **45
"RTN","RGADTP",149,0)
 N PD1
"RTN","RGADTP",150,0)
 I RGLOCAL D
"RTN","RGADTP",151,0)
 .;S PD1=$$PD1^VAFCSB
"RTN","RGADTP",152,0)
 .;I PD1'="" S THLA("HLS",ENT)=PD1,ENT=ENT+1
"RTN","RGADTP",153,0)
 I 'RGLOCAL S (ARRAY(991.03),ARRAY("CMOR"))=$P($P(MSG,HL("FS"),4),RGC) ;PUTTING BACK TO DO NEED FOR PATCH 40 ON MPI SIDE
"RTN","RGADTP",154,0)
 ;- NO LONGER DEALING WITH CMOR
"RTN","RGADTP",155,0)
 Q
"RTN","RGADTP",156,0)
PV1 ;;
"RTN","RGADTP",157,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",158,0)
 Q
"RTN","RGADTP",159,0)
OBX ;;
"RTN","RGADTP",160,0)
 N COMP,SSNV S COMP=$E(HL("ECH"),1)
"RTN","RGADTP",161,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",162,0)
 I 'RGLOCAL D:$$FREE^RGRSPARS($P($P(MSG,HL("FS"),4),RGC,2))="SECURITY LEVEL"
"RTN","RGADTP",163,0)
 .S ARRAY("SENSITIVITY")=$$SENSTIVE^RGRSPARS($P(MSG,HL("FS"),6),COMP),ARRAY("SENSITIVITY DATE")=$$FREE^RGRSPARS($$FMDATE^HLFNC($P(MSG,HL("FS"),15)))
"RTN","RGADTP",164,0)
 .S ARRAY("SENSITIVITY USER")=$$FREE^RGRSPARS($P($P(MSG,HL("FS"),17),RGC,2))_","_$$FREE^RGRSPARS($P($P(MSG,HL("FS"),17),RGC,3))
"RTN","RGADTP",165,0)
 ;**45 Get SSN VERIFICATION STATUS out of OBX if message is from the MPI
"RTN","RGADTP",166,0)
 I 'RGLOCAL,$P(HL("SFN"),COMP)="200M" I $P($P(MSG,HL("FS"),4),RGC)="SSN VERIFICATION STATUS" S SSNV=$P($P(MSG,HL("FS"),6),RGC,2),ARRAY(.0907)=$S(SSNV="VERIFIED":4,SSNV="INVALID":2,1:"@")
"RTN","RGADTP",167,0)
 Q
"RTN","RGADTP",168,0)
ZPD ;;
"RTN","RGADTP",169,0)
 I RGLOCAL S THLA("HLS",ENT)=$$EN1^VAFHLZPD(DFN,"1,17,21,34"),ENT=ENT+1 ;**45 to build new ZPD
"RTN","RGADTP",170,0)
 I 'RGLOCAL S ARRAY(.0906)=$P(MSG,HL("FS"),35) I ARRAY(.0906)=HL("Q") S ARRAY(.0906)="@" ;**45 Pull out pseudo ssn reason
"RTN","RGADTP",171,0)
 Q
"RTN","RGADTP",172,0)
ZSP ;;
"RTN","RGADTP",173,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",174,0)
 I 'RGLOCAL S ARRAY(.301)=$$YESNO^RGRSPARS($P(MSG,HL("FS"),3)),ARRAY(.302)=$$FREE^RGRSPARS($P(MSG,HL("FS"),4)),ARRAY(.323)=$$POS^RGRSPARS($P(MSG,HL("FS"),5))
"RTN","RGADTP",175,0)
 Q
"RTN","RGADTP",176,0)
ZEL ;;
"RTN","RGADTP",177,0)
 I RGLOCAL D
"RTN","RGADTP",178,0)
 .;**40 to rebuild ZEL segment
"RTN","RGADTP",179,0)
 .I '$D(DFN) S THLA("HLS",ENT)=MSG,ENT=ENT+1 Q  ;don't know DFN pass back original ZEL segment
"RTN","RGADTP",180,0)
 .N VAFZEL D EN1^VAFHLZEL(DFN,"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22",2,.VAFZEL) ;build a complete ZEL segment
"RTN","RGADTP",181,0)
 .;need to take into account may be more than 1 array entry and that each entry could go over 245 so there would be another subscript
"RTN","RGADTP",182,0)
 .N CNT,ZELX S (CNT,ZELX)=0 F  S ZELX=$O(VAFZEL(ZELX)) Q:'ZELX  D
"RTN","RGADTP",183,0)
 ..I CNT>0 S THLA("HLS",ENT,CNT)=VAFZEL(ZELX),CNT=CNT+1
"RTN","RGADTP",184,0)
 ..I CNT'>0 S THLA("HLS",ENT)=VAFZEL(ZELX),RGI=RGI+2
"RTN","RGADTP",185,0)
 .S ENT=ENT+1,RGI=RGI-2 ;reset to not end up wih 2 "" entries before next segment
"RTN","RGADTP",186,0)
 I 'RGLOCAL D
"RTN","RGADTP",187,0)
 . S ARRAY(.361)=$$ELIG^RGRSPARS($P(MSG,HL("FS"),3)),ARRAY(.3612)=$$FREE^RGRSPARS($P(MSG,HL("FS"),12))
"RTN","RGADTP",188,0)
 . S ARRAY(.3615)=$$FREE^RGRSPARS($P(MSG,HL("FS"),14)),ARRAY(391)=$$TYPE^RGRSPARS($P(MSG,HL("FS"),10)),ARRAY(1901)=$$VETERAN^RGRSPARS($P(MSG,HL("FS"),9))
"RTN","RGADTP",189,0)
 Q
"RTN","RGADTP",190,0)
ZCT ;;
"RTN","RGADTP",191,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",192,0)
 I 'RGLOCAL S ARRAY(.211)=$$FREE^RGRSPARS($P(MSG,HL("FS"),4)),ARRAY(.219)=$$FREE^RGRSPARS($P(MSG,HL("FS"),7))
"RTN","RGADTP",193,0)
 Q
"RTN","RGADTP",194,0)
ZEM ;;
"RTN","RGADTP",195,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",196,0)
 I 'RGLOCAL S ARRAY(.31115)=$$EMP^RGRSPARS($P(MSG,HL("FS"),4))
"RTN","RGADTP",197,0)
 Q
"RTN","RGADTP",198,0)
ZFF ;;
"RTN","RGADTP",199,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",200,0)
 I 'RGLOCAL S ARRAY("FLD")=$P(MSG,HL("FS"),3)
"RTN","RGADTP",201,0)
 Q
"RTN","RGADTP",202,0)
PROCIN ;
"RTN","RGADTP",203,0)
 D PROCIN^RGADTP2(.ARRAY,.RGLOCAL,.RGER,.DFN,.HL)
"RTN","RGADTP",204,0)
 Q
"RTN","RGADTP",205,0)
GENACK ;
"RTN","RGADTP",206,0)
 N RGCNT,IEN,RG
"RTN","RGADTP",207,0)
 I $G(ARRAY("DFN"))'>0 S RGER="-1^Unknown ICN#"_$G(ARRAY("ICN"))_" and SSN#"_$G(ARRAY(.09))
"RTN","RGADTP",208,0)
 S RGCNT=1,HLA("HLA",RGCNT)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS")_$S(+$G(RGER)<0:$P(RGER,"^",2,3),1:""),RGCNT=RGCNT+1
"RTN","RGADTP",209,0)
 S RGSITE=$$LKUP^XUAF4(RGSITE)
"RTN","RGADTP",210,0)
 D LINK^HLUTIL3(RGSITE,.RG) S IEN=$O(RG(0)) S HLL("LINKS",1)="^"_RG(IEN)
"RTN","RGADTP",211,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.HLRESLTA,"",.HL)
"RTN","RGADTP",212,0)
 K HLA
"RTN","RGADTP",213,0)
 Q
"RTN","RGADTP",214,0)
RSP ;
"RTN","RGADTP",215,0)
 Q
"RTN","RGADTP1")
0^4^B30537639^B28551249
"RTN","RGADTP1",1,0)
RGADTP1 ;BIR/DLR-ADT PROCESSOR TO RETRIGGER A08 or A04 MESSAGES WITH AL/AL (COMMIT/APPLICATION) ACKNOWLEDGEMENTS - CONTINUED ;6/2/02
"RTN","RGADTP1",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**26,27,42,45**;30 Apr 99;Build 9
"RTN","RGADTP1",3,0)
PIDP(MSG,ARRAY,HL) ;process PID segment
"RTN","RGADTP1",4,0)
 N ID,IDS,PIDAA,PIDNTC
"RTN","RGADTP1",5,0)
 ;Since PID can be over 245 characters loop through setting a PID ARRAY
"RTN","RGADTP1",6,0)
 ;sequenced PID(1)="PID"... PID(4 or 5) can be over 245 characters so
"RTN","RGADTP1",7,0)
 ;it will also loop and place it in PID(4,1...
"RTN","RGADTP1",8,0)
 ;
"RTN","RGADTP1",9,0)
 ; Input variables
"RTN","RGADTP1",10,0)
 ;   assumes that MSG or MSG(I) will contain the PID segment
"RTN","RGADTP1",11,0)
 ; Output ARRAY ARRAY will contain the following subscripts
"RTN","RGADTP1",12,0)
 ;   SSN - patient SSN
"RTN","RGADTP1",13,0)
 ;   ICN - patient ICN
"RTN","RGADTP1",14,0)
 ;   DFN - sites local identifier
"RTN","RGADTP1",15,0)
 ;   MPISSITE - authoritative source (station# of sending site)
"RTN","RGADTP1",16,0)
 ;   SEX - patient's SEX
"RTN","RGADTP1",17,0)
 ;   MPIDOB - Date of Birth
"RTN","RGADTP1",18,0)
 ;   NAME,SURNAME,FIRST,MIDDLE,PREFIX,and SUFFIX - Patient Name
"RTN","RGADTP1",19,0)
 ;   MMN - Mother's maiden name
"RTN","RGADTP1",20,0)
 ;   POBCITY, POBSTATE - Place of birth city and state
"RTN","RGADTP1",21,0)
 ;
"RTN","RGADTP1",22,0)
 N PID,MPIJ,LNGTH,LNGTH1,PID1,SEQ,SEQ1,COMP,SUBCOMP,REP,HLECH,X,Y,CNT,NXT,ID,IDS,PIDAA,PIDNTC,NAME,LNGTH2,PIDSITE,PIDXDT,HLECH,HLFS
"RTN","RGADTP1",23,0)
 S HLFS=HL("FS"),HLECH=HL("ECH")
"RTN","RGADTP1",24,0)
 S ARRAY("DFN")="",ARRAY("ICN")="",ARRAY("CLAIMN")="",ARRAY("SSN")=""
"RTN","RGADTP1",25,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","RGADTP1",26,0)
 S LNGTH=$L(MSG,HL("FS")) F SEQ=1:1:LNGTH S PID(SEQ)=$P(MSG,HL("FS"),SEQ)
"RTN","RGADTP1",27,0)
 S SEQ1=1,X=0 F  S X=$O(MSG(X)) Q:'X  S LNGTH=$L(MSG(X),HL("FS")) D
"RTN","RGADTP1",28,0)
 . F Y=1:1:LNGTH S:Y'=1 SEQ=SEQ+1 D
"RTN","RGADTP1",29,0)
 .. S NXT=$P(MSG(X),HL("FS"),Y) D
"RTN","RGADTP1",30,0)
 ... I $L($G(PID(SEQ)))=245 D  Q
"RTN","RGADTP1",31,0)
 .... I $L(NXT_$G(PID(SEQ,SEQ1)))>245 S LNGTH1=$L(PID(SEQ,SEQ1)) S LNGTH2=245-LNGTH1,PID(SEQ,SEQ1)=$G(PID(SEQ,SEQ1))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)),SEQ1=SEQ1+1
"RTN","RGADTP1",32,0)
 .... I $L(NXT_$G(PID(SEQ,SEQ1)))'>245 S PID(SEQ,SEQ1)=$G(PID(SEQ,SEQ1))_NXT
"RTN","RGADTP1",33,0)
 ... I $L(NXT_$G(PID(SEQ)))>245 S LNGTH1=$L($G(PID(SEQ))) S LNGTH2=245-LNGTH1,PID(SEQ)=$G(PID(SEQ))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)) S PID(SEQ,SEQ1)=NXT
"RTN","RGADTP1",34,0)
 ... I $L(NXT_$G(PID(SEQ)))'>245 S PID(SEQ)=$G(PID(SEQ))_NXT Q
"RTN","RGADTP1",35,0)
 ;get PID-3 Patient Identifier List (three ids should be returned ICN, SSN, and DFN)
"RTN","RGADTP1",36,0)
 N LASTID,IDCNT,CNT
"RTN","RGADTP1",37,0)
 S IDS=PID(4)
"RTN","RGADTP1",38,0)
 S LASTID=$L(IDS,REP),IDCNT=1,IDS=PID(4),CNT=1
"RTN","RGADTP1",39,0)
 F X=1:1:LASTID S ID=$P(IDS,REP,X) D
"RTN","RGADTP1",40,0)
 .;if this is the last entry check for an extension of the message and reset the key variables
"RTN","RGADTP1",41,0)
 .I X=LASTID I $D(PID(4,IDCNT)) S ID=ID_$P(PID(4,IDCNT),REP),IDS=$P(PID(4,IDCNT),REP,2,99),IDCNT=IDCNT+1,X=0,LASTID=$L(IDS,REP)
"RTN","RGADTP1",42,0)
 . ;get id, assigning authority, and name type code
"RTN","RGADTP1",43,0)
 . S PIDAA=$P($P(ID,COMP,4),SUBCOMP),PIDNTC=$P(ID,COMP,5),PIDSITE=$P($P(ID,COMP,6),SUBCOMP,2),PIDXDT=$P(ID,COMP,8)
"RTN","RGADTP1",44,0)
 . S ID=$P(ID,COMP)
"RTN","RGADTP1",45,0)
 . Q:ID=""
"RTN","RGADTP1",46,0)
 . ;check assigning authority(0363) AND name type code(0203)
"RTN","RGADTP1",47,0)
 . I PIDAA="USVHA" D
"RTN","RGADTP1",48,0)
 .. I PIDNTC="NI" D
"RTN","RGADTP1",49,0)
 ... I $G(PIDXDT)="" S ARRAY("ICN")=ID,ARRAY("MPISSITE")=PIDSITE,ARRAY(991.02)=$P(ID,"V",2)  ;National unique individual identifier
"RTN","RGADTP1",50,0)
 ... I $G(PIDXDT)'="" S ARRAY("OID",CNT)=ID_"^"_PIDAA_"^"_PIDSITE_"^"_PIDXDT,CNT=CNT+1  ;Deprecated National unique individual identifier
"RTN","RGADTP1",51,0)
 .. I PIDNTC="PI" S ARRAY("DFN")=ID,ARRAY("DFNLOC")=PIDSITE  ;Patient internal identifier
"RTN","RGADTP1",52,0)
 . I PIDAA="USSSA" D
"RTN","RGADTP1",53,0)
 .. I PIDNTC="SS" S ARRAY("SSN")=ID  ;Social Security number
"RTN","RGADTP1",54,0)
 . I PIDAA="USVBA" D
"RTN","RGADTP1",55,0)
 .. I PIDNTC="PN" S ARRAY("CLAIMN")=ID  ;VBA CLAIM#
"RTN","RGADTP1",56,0)
 ;get PID-4 alternate ID (ICN History)
"RTN","RGADTP1",57,0)
 I $G(PID(5))'="" D
"RTN","RGADTP1",58,0)
 . S CNT=1
"RTN","RGADTP1",59,0)
 . F X=1:1:$L(PID(5),REP) S ARRAY("OID",CNT)=$P(PID(5),REP,X),CNT=CNT+1
"RTN","RGADTP1",60,0)
 . S Y=0 F  S Y=$O(PID(5,Y)) Q:'Y  D
"RTN","RGADTP1",61,0)
 .. S ARRAY("OID",CNT-1)=ARRAY("OID",CNT-1)_$P(PID(5,Y),REP)
"RTN","RGADTP1",62,0)
 .. F X=2:1:$L(PID(5,Y),REP) S ARRAY("OID",CNT)=$P(PID(5,Y),REP,X),CNT=CNT+1
"RTN","RGADTP1",63,0)
 . S X=0 F  S X=$O(ARRAY("OID",X)) Q:'X  D
"RTN","RGADTP1",64,0)
 .. N ID,AA,AL S ID=$P(ARRAY("OID",X),COMP),AA=$P($P(ARRAY("OID",X),COMP,4),SUBCOMP,1),AL=$P($P(ARRAY("OID",X),COMP,6),SUBCOMP,2) S AL=$$IEN^XUAF4(AL)
"RTN","RGADTP1",65,0)
 .. S ARRAY("OID",X)=ID_"^"_AA_"^"_AL
"RTN","RGADTP1",66,0)
 ;get PID-5 Patient Name
"RTN","RGADTP1",67,0)
 I $G(PID(6))'="" S NAME=PID(6),ARRAY("SURNAME")=$P(NAME,COMP),ARRAY("FIRST")=$P(NAME,COMP,2),ARRAY("MIDDLE")=$P(NAME,COMP,3),ARRAY("PREFIX")=$P(NAME,COMP,4),ARRAY("SUFFIX")=$P(NAME,COMP,5) D
"RTN","RGADTP1",68,0)
 . S ARRAY("NAME")=$$FMNAME^HLFNC($P(PID(6),COMP,1,6))
"RTN","RGADTP1",69,0)
 ;get PID-6 Mother's maiden name
"RTN","RGADTP1",70,0)
 S ARRAY("MMN")=$P($G(PID(7)),COMP,1,5) D
"RTN","RGADTP1",71,0)
 . I $P(ARRAY("MMN"),COMP)'=HL("Q") S HLECH=HL("ECH") S ARRAY("MMN")=$$FREE^RGRSPARS($$FMNAME^HLFNC(ARRAY("MMN"))) Q
"RTN","RGADTP1",72,0)
 . I $P(ARRAY("MMN"),COMP)=HL("Q") S ARRAY("MMN")=$$FREE^RGRSPARS($P(ARRAY("MMN"),COMP))
"RTN","RGADTP1",73,0)
 ;get PID-7 Date of Birth
"RTN","RGADTP1",74,0)
 S ARRAY("MPIDOB")=$$FMDATE^HLFNC($G(PID(8)))
"RTN","RGADTP1",75,0)
 ;get PID-8 Sex
"RTN","RGADTP1",76,0)
 S ARRAY("SEX")=$G(PID(9))
"RTN","RGADTP1",77,0)
 ;get PID-11-3 ADDRESS BOTH "P"rimary and "N" Place of
"RTN","RGADTP1",78,0)
 S CNT=1
"RTN","RGADTP1",79,0)
 N ADRTYPE,ADDR
"RTN","RGADTP1",80,0)
 F X=1:1:$L(PID(12),REP) D
"RTN","RGADTP1",81,0)
 . S ADDR=$P(PID(12),REP,X),ADRTYPE=$P(ADDR,COMP,7)
"RTN","RGADTP1",82,0)
 . I ADRTYPE="P" D
"RTN","RGADTP1",83,0)
 .. S ADDR=$$FREE^RGRSPARS(ADDR)
"RTN","RGADTP1",84,0)
 .. S ARRAY(.111)=$$FREE^RGRSPARS($P(ADDR,COMP,1))  ;addr [1]
"RTN","RGADTP1",85,0)
 .. S ARRAY(.112)=$$FREE^RGRSPARS($P(ADDR,COMP,2))  ;addr [2]
"RTN","RGADTP1",86,0)
 .. S ARRAY(.113)=$$FREE^RGRSPARS($P(ADDR,COMP,8))  ;addr [3]
"RTN","RGADTP1",87,0)
 .. S ARRAY(.114)=$$FREE^RGRSPARS($P(ADDR,COMP,3))  ;city
"RTN","RGADTP1",88,0)
 .. S ARRAY(.115)=$$STATE^RGRSPARS($P(ADDR,COMP,4))  ;state
"RTN","RGADTP1",89,0)
 .. S ARRAY(.1112)=$$FREE^RGRSPARS($P(ADDR,COMP,5))  ;zip+4
"RTN","RGADTP1",90,0)
 .. N CNTYCODE S CNTYCODE=PID(13)  ;county code
"RTN","RGADTP1",91,0)
 .. S ARRAY(.117)=$$COUNTY^RGRSPARS(ARRAY(.115),CNTYCODE)
"RTN","RGADTP1",92,0)
 .. S ARRAY(.131)=$$FREE^RGRSPARS(PID(14))
"RTN","RGADTP1",93,0)
 .. S ARRAY(.132)=$$FREE^RGRSPARS(PID(15))
"RTN","RGADTP1",94,0)
 . I ADRTYPE="N" D
"RTN","RGADTP1",95,0)
 .. S ARRAY("POBCITY")=$$FREE^RGRSPARS($P(ADDR,COMP,3))  ;POB city
"RTN","RGADTP1",96,0)
 .. S ARRAY("POBSTATE")=$$STATE^RGRSPARS($P(ADDR,COMP,4))  ;POB state
"RTN","RGADTP1",97,0)
 ;marital status
"RTN","RGADTP1",98,0)
 S ARRAY(.05)=$$MARITAL^RGRSPARS(PID(17))
"RTN","RGADTP1",99,0)
 ;multiple birth indicator
"RTN","RGADTP1",100,0)
 ;;S ARRAY("MBI")=$G(PID(25)) I ARRAY("MBI")=HL("Q") S ARRAY("MBI")="@" ;**45 to get MBI and setup as yes/no field change to @ if HL("Q")
"RTN","RGADTP1",101,0)
 ;;REMOVED FROM PATCH 45 DUE TO NEEDING DG707
"RTN","RGADTP1",102,0)
 ;religious preference
"RTN","RGADTP1",103,0)
 S ARRAY(.08)=$$RELIG^RGRSPARS(PID(18))
"RTN","RGADTP1",104,0)
 ;address
"RTN","RGADTP1",105,0)
 ;get PID-29 Date of Death
"RTN","RGADTP1",106,0)
 S ARRAY("MPIDOD")=$$FREE^RGRSPARS($$FMDATE^HLFNC($G(PID(30)))),ARRAY(.351)=ARRAY("MPIDOD")
"RTN","RGADTP1",107,0)
 Q
"RTN","RGADTP2")
0^2^B33963226^B21277415
"RTN","RGADTP2",1,0)
RGADTP2 ;BIR/DLR-ADT PROCESSOR TO RETRIGGER A08 or A04 MESSAGES WITH AL/AL (COMMIT/APPLICATION) ACKNOWLEDGEMENTS - CONTINUED ;10/30/02  10:04
"RTN","RGADTP2",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**27,20,45**;30 Apr 99;Build 9
"RTN","RGADTP2",3,0)
DBIA ;
"RTN","RGADTP2",4,0)
 ;Reference to $$ADD^VAFCEHU1 supported by IA #2753
"RTN","RGADTP2",5,0)
 ;Reference to $$SEND2^VAFCUTL1 supported by IA #2779
"RTN","RGADTP2",6,0)
 ;Reference to EDIT^VAFCPTED supported by IA #2784
"RTN","RGADTP2",7,0)
 Q
"RTN","RGADTP2",8,0)
PROCIN(ARRAY,RGLOCAL,RGER,DFN,HL) ;
"RTN","RGADTP2",9,0)
 N RGRSDFN,OTHSITE,NODE,ICN,CMORIEN,CMOR,CMORDISP,SENSTVTY,RMTDOD,LOCDOD,VAFCA,VAFCA08,HERE,BOGUS,ARAY,REP
"RTN","RGADTP2",10,0)
 S REP=$E(HL("ECH"),2)
"RTN","RGADTP2",11,0)
 S HERE=$P($$SITE^VASITE,"^",3)
"RTN","RGADTP2",12,0)
 ;if sending site is your site quit
"RTN","RGADTP2",13,0)
 Q:$G(ARRAY("MPISSITE"))=$G(HERE)
"RTN","RGADTP2",14,0)
 S ARRAY(.097)=$P($$NOW^XLFDT,".")
"RTN","RGADTP2",15,0)
 I $G(ARRAY("ICN"))'="" D
"RTN","RGADTP2",16,0)
 . S RGRSDFN=$$GETDFN^MPIF001(+ARRAY("ICN")) I +RGRSDFN<1 S RGER=RGRSDFN_" ICN#"_$G(ARRAY("ICN")) Q  ;quit and return error msg
"RTN","RGADTP2",17,0)
 . S OTHSITE=ARRAY("SENDING SITE")
"RTN","RGADTP2",18,0)
 . ;**40 REMOVED THE PLUS TO KEEP SUFFIX ON STATION# & CHANGED THE SITE TO BE SENDING SITE INSTEAD OF AUTHORITATIVE SOURCE
"RTN","RGADTP2",19,0)
 I $G(RGRSDFN)="" S RGRSDFN=$G(DFN)
"RTN","RGADTP2",20,0)
 I $G(RGRSDFN)="" S RGER="-1^DFN not defined"
"RTN","RGADTP2",21,0)
 Q:$G(RGER)
"RTN","RGADTP2",22,0)
 I $G(OTHSITE)="" S OTHSITE=""
"RTN","RGADTP2",23,0)
 I +$$SEND2^VAFCUTL1(RGRSDFN,"T")  ;quit and return error msg
"RTN","RGADTP2",24,0)
 S NODE=$$MPINODE^MPIFAPI(RGRSDFN)
"RTN","RGADTP2",25,0)
 S ICN=$P(NODE,"^")
"RTN","RGADTP2",26,0)
 S CMORIEN=$P(NODE,"^",3)
"RTN","RGADTP2",27,0)
 S CMOR=$$NS^XUAF4(CMORIEN)
"RTN","RGADTP2",28,0)
 S CMORDISP=$P(CMOR,"^",1)
"RTN","RGADTP2",29,0)
 S CMOR=$P(CMOR,"^",2)
"RTN","RGADTP2",30,0)
 ;
"RTN","RGADTP2",31,0)
 ;If patient is Sensitive at other site but not here send bulletin
"RTN","RGADTP2",32,0)
 I $G(ARRAY("SENSITIVITY"))'="" S SENSTVTY=$G(ARRAY("SENSITIVITY")) D
"RTN","RGADTP2",33,0)
 . N NAME S NAME=ARRAY("NAME")
"RTN","RGADTP2",34,0)
 . I '$$SENSTIVE^RGRSENS(RGRSDFN),SENSTVTY D
"RTN","RGADTP2",35,0)
 .. S ARAY("SSN")=ARRAY("SSN")
"RTN","RGADTP2",36,0)
 .. S ARAY("SENDING SITE")=ARRAY("SENDING SITE")
"RTN","RGADTP2",37,0)
 .. S ARAY("SENSITIVITY USER")=ARRAY("SENSITIVITY USER")
"RTN","RGADTP2",38,0)
 .. S ARAY("SENSITIVITY DATE")=ARRAY("SENSITIVITY DATE")
"RTN","RGADTP2",39,0)
 .. D SENSTIVE^RGRSBUL1(RGRSDFN,"ARAY",NAME)
"RTN","RGADTP2",40,0)
 ;
"RTN","RGADTP2",41,0)
 ;If patient has DATE OF DEATH (DOD) at remote site send bulletin
"RTN","RGADTP2",42,0)
 ;Ignore time if present with date.
"RTN","RGADTP2",43,0)
 S RMTDOD=$G(ARRAY("MPIDOD")),RMTDOD=$P(RMTDOD,".")
"RTN","RGADTP2",44,0)
 S DFN=RGRSDFN D DEM^VADPT
"RTN","RGADTP2",45,0)
 S LOCDOD=$P($P(VADM(6),"^"),".")
"RTN","RGADTP2",46,0)
 ;If there is a remote DOD but no local DOD  OR
"RTN","RGADTP2",47,0)
 ;if remote DOD is different from local DOD, send bulletin
"RTN","RGADTP2",48,0)
 I RMTDOD D
"RTN","RGADTP2",49,0)
 . N NAME S NAME=ARRAY("NAME")
"RTN","RGADTP2",50,0)
 . S ARAY("SSN")=ARRAY("SSN")
"RTN","RGADTP2",51,0)
 . S ARAY("SENDING SITE")=ARRAY("SENDING SITE")
"RTN","RGADTP2",52,0)
 . D RMTDOD^RGRSBUL1(RGRSDFN,"ARAY",NAME,RMTDOD,LOCDOD)
"RTN","RGADTP2",53,0)
 K VADM
"RTN","RGADTP2",54,0)
 ;
"RTN","RGADTP2",55,0)
NOTLOC I 'RGLOCAL D
"RTN","RGADTP2",56,0)
 . ;if sending site is not the CMOR AND NOT THE MPI - log update into PDR if differences exist **45 ADDED MPI
"RTN","RGADTP2",57,0)
 . I (OTHSITE)'=(CMOR)&(OTHSITE'="200M") D  Q
"RTN","RGADTP2",58,0)
 .. S VAFCA=$P($$NOW^XLFDT,".")_"^"_$$NOW^XLFDT_"^"_$G(ARRAY("SENDING SITE"))_"^"_RGRSDFN
"RTN","RGADTP2",59,0)
 .. S ARRAY(.01)=$$FREE^RGRSPARS(ARRAY("NAME"))
"RTN","RGADTP2",60,0)
 .. S ARRAY(.03)=$$FREE^RGRSPARS($G(ARRAY("MPIDOB")))
"RTN","RGADTP2",61,0)
 .. S ARRAY(.09)=$$FREE^RGRSPARS($G(ARRAY("SSN")))
"RTN","RGADTP2",62,0)
 .. S ARRAY(.02)=$$SEX^RGRSPARS($G(ARRAY("SEX")))
"RTN","RGADTP2",63,0)
 .. S ARRAY(.2403)=$$FREE^RGRSPARS($G(ARRAY("MMN")))
"RTN","RGADTP2",64,0)
 .. S ARRAY(991.01)=$P($G(ARRAY("ICN")),"V")
"RTN","RGADTP2",65,0)
 .. N ARAY M ARAY(2)=ARRAY
"RTN","RGADTP2",66,0)
 .. S VAFCA08=1 S BOGUS=$$ADD^VAFCEHU1(VAFCA,"ARAY")
"RTN","RGADTP2",67,0)
 . ;if sending site is the CMOR OR MPI - synchronize data **45 ADDED MPI AND SSNV TO UPDATED FIELDS
"RTN","RGADTP2",68,0)
 . I (OTHSITE)=(CMOR)!(OTHSITE="200M") D
"RTN","RGADTP2",69,0)
 .. N DR S DR=".01;.03;.09;.02;.2403;994"
"RTN","RGADTP2",70,0)
 .. S VAFCA08=1
"RTN","RGADTP2",71,0)
 .. S ARAY(2,.01)=ARRAY("NAME")
"RTN","RGADTP2",72,0)
 .. S ARAY(2,.03)=$G(ARRAY("MPIDOB"))
"RTN","RGADTP2",73,0)
 .. I ARRAY("SSN")'="" S ARAY(2,.09)=$G(ARRAY("SSN")) ;**45 only set SSN to update if it isn't null
"RTN","RGADTP2",74,0)
 .. S ARAY(2,.02)=$G(ARRAY("SEX"))
"RTN","RGADTP2",75,0)
 .. S ARAY(2,.2403)=$G(ARRAY("MMN"))
"RTN","RGADTP2",76,0)
 .. ;if SSN VERIFICATION STATUS field has been added to the DD then attempt to set it
"RTN","RGADTP2",77,0)
 .. N ERROR,LABEL D FIELD^DID(2,.0907,"","LABEL","LABEL","ERROR") I '$D(ERROR("DIERR"))&$D(LABEL("LABEL")) D
"RTN","RGADTP2",78,0)
 ... S ARAY(2,.0907)=$G(ARRAY(.0907)) S DR=DR_";.0907"
"RTN","RGADTP2",79,0)
 .. S ARAY(2,994)=$G(ARRAY("MBI"))
"RTN","RGADTP2",80,0)
 .. D EDIT^VAFCPTED(RGRSDFN,"ARAY(2)",DR)
"RTN","RGADTP2",81,0)
 .. ;check to see if edits were successful, if not set RGER="why it failed"
"RTN","RGADTP2",82,0)
 .. N NAME,SSN,PDOB,SEX,MMN,OLDNAME,OLDHLNAM,OLDMMN,OLDHLMMN,HLNAME,HLMMN,SSNV,MBI
"RTN","RGADTP2",83,0)
 .. S NAME=$$GET1^DIQ(2,+RGRSDFN_",",.01,"I")
"RTN","RGADTP2",84,0)
 .. S PDOB=$$GET1^DIQ(2,+RGRSDFN_",",.03,"I")
"RTN","RGADTP2",85,0)
 .. S SSN=$$GET1^DIQ(2,+RGRSDFN_",",.09,"I")
"RTN","RGADTP2",86,0)
 .. S SEX=$$GET1^DIQ(2,+RGRSDFN_",",.02,"I")
"RTN","RGADTP2",87,0)
 .. S MMN=$$GET1^DIQ(2,+RGRSDFN_",",.2403,"I")
"RTN","RGADTP2",88,0)
 .. S SSNV=$$GET1^DIQ(2,+RGRSDFN_",",.0907,"I")
"RTN","RGADTP2",89,0)
 .. S MBI=$$GET1^DIQ(2,+RGRSDFN_",",994,"I")
"RTN","RGADTP2",90,0)
 .. D STDNAME^XLFNAME(.NAME,"F",.OLDNAME) S HLNAME=ARRAY("NAME") D STDNAME^XLFNAME(.HLNAME,"F",.OLDHLNAM)
"RTN","RGADTP2",91,0)
 .. I NAME'=$G(HLNAME) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"Name field failure"
"RTN","RGADTP2",92,0)
 .. I PDOB'=$G(ARRAY("MPIDOB")) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"DOB field failure"
"RTN","RGADTP2",93,0)
 .. I $G(ARRAY("SSN"))'="",SSN'=$G(ARRAY("SSN")) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"SSN field failure" ;**45 only check if SSN is sent isn't null
"RTN","RGADTP2",94,0)
 .. I SEX'=$G(ARRAY("SEX")) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"SEX field failure"
"RTN","RGADTP2",95,0)
 .. D STDNAME^XLFNAME(.MMN,"F",.OLDMMN) S HLMMN=ARRAY("MMN") D STDNAME^XLFNAME(.HLMMN,"F",.OLDHLMMN)
"RTN","RGADTP2",96,0)
 .. I MMN'=$G(HLMMN) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"MOTHER'S MAIDEN NAME field failure"
"RTN","RGADTP2",97,0)
 .. I $D(ARAY(2,.0907)) S:$G(ARRAY(.0907))="@" ARRAY(.0907)="" I SSNV'=$G(ARRAY(.0907)) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"SSN VERIFICATION field failure"
"RTN","RGADTP2",98,0)
 .. ;;**REMOVED MBI FROM PATCH 45
"RTN","RGADTP2",99,0)
 .. ;;I MBI'=$G(ARRAY("MBI")) D
"RTN","RGADTP2",100,0)
 ..;.;;Q:MBI=""&($G(ARRAY("MBI"))="@")  ;**45 "" AND @ ARE THE SAME
"RTN","RGADTP2",101,0)
 ..;.;;S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"MULTIPLE BIRTH INDICATOR field failure"
"RTN","RGADTP2",102,0)
 .. ;send the updated fields to the MPI to synch site with MPI
"RTN","RGADTP2",103,0)
 .. I HL("ETN")'="A31" S ZTSAVE("DFN")="",ZTRTN="MPISYN^RGADTPC",ZTDESC="Sending Synchronized Patient Data to MPI...",ZTIO="RG QUEUE",ZTDTH=$H D ^%ZTLOAD
"RTN","RGADTP2",104,0)
 .. ;**45 ^ don't trigger A31 sync message if A31 was being processed-- ack to a31 will sync id elements on MPI
"RTN","RGADTP2",105,0)
 Q
"RTN","RGEX01")
0^9^B32784010^B29834506
"RTN","RGEX01",1,0)
RGEX01 ;BAY/ALS-LIST MANAGER FOR MPI/PD EXCEPTIONS ;10/07/99
"RTN","RGEX01",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**3,12,19,23,43,45**;30 Apr 99;Build 9
"RTN","RGEX01",3,0)
 ;
"RTN","RGEX01",4,0)
 ;Reference to MAIN^VAFCPDAT supported by IA #3299
"RTN","RGEX01",5,0)
EN ; -- main entry point for RG EXCPT SUMMARY
"RTN","RGEX01",6,0)
 N STDT,ENDDT,PRGSTAT,XFLAG
"RTN","RGEX01",7,0)
 S XFLAG=0
"RTN","RGEX01",8,0)
 S STDT=$P($G(^RGSITE(991.8,1,"EXCPRG")),"^",1)
"RTN","RGEX01",9,0)
 I $D(STDT) S STDT=$$FMTE^XLFDT(STDT,1)
"RTN","RGEX01",10,0)
 S PRGSTAT=$P($G(^RGSITE(991.8,1,"EXCPRG")),"^",3)
"RTN","RGEX01",11,0)
 I PRGSTAT="" D
"RTN","RGEX01",12,0)
 . W $C(7)
"RTN","RGEX01",13,0)
 . W !!,"The MPI/PD Exception Purge process has not been run."
"RTN","RGEX01",14,0)
 . S DIR(0)="YA",DIR("B")="NO"
"RTN","RGEX01",15,0)
 . S DIR("??")="^D HLPPRG^RGEX01"
"RTN","RGEX01",16,0)
 . S DIR("A")="Do you want to run it now? "
"RTN","RGEX01",17,0)
 . D ^DIR K DIR
"RTN","RGEX01",18,0)
 . I $D(DIRUT)!$D(DUOUT) S XFLAG=1 Q
"RTN","RGEX01",19,0)
 . I Y>0 D
"RTN","RGEX01",20,0)
 .. W !!,"The MPI/PD Exception Purge process will now run."
"RTN","RGEX01",21,0)
 .. W !,"Please come back to this option in ten minutes."
"RTN","RGEX01",22,0)
 .. S XFLAG=1 D QUEPRG
"RTN","RGEX01",23,0)
 L +^RGHL7(991.1,"RG PURGE EXCEPTION"):0 I '$T W $C(7),!!,"The MPI/PD Exception Purge process is currently running.",!,"Please try this option again in ten minutes." S XFLAG=1 G EXIT
"RTN","RGEX01",24,0)
 L -^RGHL7(991.1,"RG PURGE EXCEPTION")
"RTN","RGEX01",25,0)
 I $G(PRGSTAT)="C" D
"RTN","RGEX01",26,0)
 . W !!,"The MPI/PD Exception Purge process last ran "_STDT_"."
"RTN","RGEX01",27,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("??")="^D HLPPRG^RGEX01"
"RTN","RGEX01",28,0)
 . S DIR("A")="Do you want to run the MPI/PD Exception Purge process now? "
"RTN","RGEX01",29,0)
 . D ^DIR K DIR,RGANS S RGANS=Y
"RTN","RGEX01",30,0)
 . I $D(DIRUT)!$D(DUOUT) S XFLAG=1 Q
"RTN","RGEX01",31,0)
 . Q:RGANS=0  ;**43
"RTN","RGEX01",32,0)
 . L +^RGHL7(991.1,"RG PURGE EXCEPTION"):0 I '$T S RGANS=0 Q  ;**43
"RTN","RGEX01",33,0)
 . L -^RGHL7(991.1,"RG PURGE EXCEPTION")
"RTN","RGEX01",34,0)
 . I RGANS>0 D
"RTN","RGEX01",35,0)
 .. W !!,"The MPI/PD Exception Purge process will now run."
"RTN","RGEX01",36,0)
 .. W !,"Please come back to this option in ten minutes."
"RTN","RGEX01",37,0)
 .. S XFLAG=1 D QUEPRG
"RTN","RGEX01",38,0)
 I XFLAG=1 G EXIT
"RTN","RGEX01",39,0)
 K RGANS
"RTN","RGEX01",40,0)
 D WAIT^DICD
"RTN","RGEX01",41,0)
 D EN^VALM("RG EXCPT SUMMARY")
"RTN","RGEX01",42,0)
 Q
"RTN","RGEX01",43,0)
 ;
"RTN","RGEX01",44,0)
HDR ; -- header code
"RTN","RGEX01",45,0)
 S VALMHDR(1)="MPI/PD Exception Handling"
"RTN","RGEX01",46,0)
 S VALMHDR(2)=""
"RTN","RGEX01",47,0)
 Q
"RTN","RGEX01",48,0)
 ;
"RTN","RGEX01",49,0)
INIT ; -- init variables and list array
"RTN","RGEX01",50,0)
 I '$D(RGSORT) S RGSORT="SD"
"RTN","RGEX01",51,0)
 K @VALMAR
"RTN","RGEX01",52,0)
 I RGSORT="SD" D DTLIST^RGEXHND1
"RTN","RGEX01",53,0)
 E  I RGSORT="ST" D EXCLST^RGEXHND1
"RTN","RGEX01",54,0)
 E  I RGSORT="SN" D PATLST^RGEXHND1
"RTN","RGEX01",55,0)
 E  I RGSORT="VT" D SELTYP^RGEXHND1
"RTN","RGEX01",56,0)
 Q
"RTN","RGEX01",57,0)
 ;
"RTN","RGEX01",58,0)
SORT ;
"RTN","RGEX01",59,0)
 D INIT
"RTN","RGEX01",60,0)
 S VALMBCK="R"
"RTN","RGEX01",61,0)
 Q
"RTN","RGEX01",62,0)
HELP ; -- help code
"RTN","RGEX01",63,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","RGEX01",64,0)
 Q
"RTN","RGEX01",65,0)
HLPPRG ;
"RTN","RGEX01",66,0)
 W !,"Enter Y(YES) to run the MPI/PD Exception Purge process now."
"RTN","RGEX01",67,0)
 W !!,"Enter N(NO) to go directly into the MPI/PD Exception Handling option."
"RTN","RGEX01",68,0)
 Q
"RTN","RGEX01",69,0)
 ;
"RTN","RGEX01",70,0)
EXIT ; -- exit code
"RTN","RGEX01",71,0)
 K VADM,RGDFN,RGNM,RGSORT,RGSSN,STAT,STRING,NDX,NM,IEN,IEN2,X,DATA,CNT,EXCTYPE,ETYPE,^TMP("RGEXC",$J),^TMP("RGEX01",$J)
"RTN","RGEX01",72,0)
 Q
"RTN","RGEX01",73,0)
QUEPRG S ZTRTN="MAIN^RGEVPRG",ZTDESC="PURGE ZZ*, OVER 30 DAY AND DUPLICATE RECORDS FROM THE CIRN HL7 EXCEPTION LOG FILE"
"RTN","RGEX01",74,0)
 D NOW^%DTC
"RTN","RGEX01",75,0)
 S ZTIO="",ZTDTH=%
"RTN","RGEX01",76,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","RGEX01",77,0)
 D ^%ZTLOAD
"RTN","RGEX01",78,0)
 D HOME^%ZIS K IO("Q")
"RTN","RGEX01",79,0)
 K ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK,%
"RTN","RGEX01",80,0)
 Q
"RTN","RGEX01",81,0)
 ;
"RTN","RGEX01",82,0)
EXPND ; -- expand code
"RTN","RGEX01",83,0)
 Q
"RTN","RGEX01",84,0)
 ;
"RTN","RGEX01",85,0)
CUREX() ;Are there any patients in the CIRN HL7 EXCEPTION LOG file (#991.1)
"RTN","RGEX01",86,0)
 ;that are NOT PROCESSED for specific exception types?
"RTN","RGEX01",87,0)
 ;     Return RGEX:
"RTN","RGEX01",88,0)
 ;If RGEX=3 both unprocessed and Primary View Reject exceptions exist
"RTN","RGEX01",89,0)
 ;If RGEX=2 only Primary View Reject exceptions exist
"RTN","RGEX01",90,0)
 ;If RGEX=1 only unprocessed exceptions exist
"RTN","RGEX01",91,0)
 ;If RGEX=0 no unprocessed exceptions exist
"RTN","RGEX01",92,0)
 ;
"RTN","RGEX01",93,0)
 N EXCTYP,RG1,RG2,RGEX
"RTN","RGEX01",94,0)
 S EXCTYP="",(RG1,RG2,RGEX)=0
"RTN","RGEX01",95,0)
 F  S EXCTYP=$O(^RGHL7(991.1,"ASTAT","0",EXCTYP)) Q:'EXCTYP  D
"RTN","RGEX01",96,0)
 .I ((EXCTYP=234)!((EXCTYP>214)&(EXCTYP<219))) S RG1=1
"RTN","RGEX01",97,0)
 .I (EXCTYP=234) S RG2=1 ;Primary View Reject
"RTN","RGEX01",98,0)
 I (RG1=1),(RG2=1) S RGEX=3 ;Send both messages
"RTN","RGEX01",99,0)
 I (RG1=1),(RG2=0) S RGEX=1 ;Only unresolved exceptions exist
"RTN","RGEX01",100,0)
 I (RG1=0),(RG2=1) S RGEX=2 ;Only Primary View Reject exceptions exist
"RTN","RGEX01",101,0)
 Q RGEX
"RTN","RGEX01",102,0)
 ;
"RTN","RGEX01",103,0)
PROC ; For a given patient, set exceptions STATUS to PROCESSED.
"RTN","RGEX01",104,0)
 ; DFN must be defined
"RTN","RGEX01",105,0)
 Q:'$D(DFN)
"RTN","RGEX01",106,0)
 S EXCTYP=""
"RTN","RGEX01",107,0)
 S HOME=$$SITE^VASITE()
"RTN","RGEX01",108,0)
 F  S EXCTYP=$O(^RGHL7(991.1,"ADFN",EXCTYP)) Q:'EXCTYP  D
"RTN","RGEX01",109,0)
 . S RGDFN="",ICN=""
"RTN","RGEX01",110,0)
 . F  S RGDFN=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN)) Q:'RGDFN  D
"RTN","RGEX01",111,0)
 .. I DFN=RGDFN D
"RTN","RGEX01",112,0)
 ... S ICN=+$$GETICN^MPIF001(DFN)
"RTN","RGEX01",113,0)
 ... ;Only set to PROCESSED if patient has national ICN.
"RTN","RGEX01",114,0)
 ... I $E(ICN,1,3)'=$E($P(HOME,"^",3),1,3)&(ICN>0) D
"RTN","RGEX01",115,0)
 .... ;Exclude Death exceptions (215-217); they must be processed manually.
"RTN","RGEX01",116,0)
 .... ;Exclude 218 Potential Matches Returned exception **43
"RTN","RGEX01",117,0)
 .... I (EXCTYP>218)!(EXCTYP<215) D
"RTN","RGEX01",118,0)
 ..... S IEN=0
"RTN","RGEX01",119,0)
 ..... F  S IEN=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN,IEN)) Q:'IEN  D
"RTN","RGEX01",120,0)
 ...... S IEN2=0
"RTN","RGEX01",121,0)
 ...... F  S IEN2=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEX01",122,0)
 ....... L +^RGHL7(991.1,IEN):10
"RTN","RGEX01",123,0)
 ....... S DA(1)=IEN,DA=IEN2,DR="6///"_1,DIE="^RGHL7(991.1,"_DA(1)_",1,"
"RTN","RGEX01",124,0)
 ....... D ^DIE K DIE,DA,DR
"RTN","RGEX01",125,0)
 ....... L -^RGHL7(991.1,IEN)
"RTN","RGEX01",126,0)
 K IEN,IEN2,RGDFN,EXCTYP,ICN
"RTN","RGEX01",127,0)
 Q
"RTN","RGEX01",128,0)
PDAT ;
"RTN","RGEX01",129,0)
 K DIRUT
"RTN","RGEX01",130,0)
 W !,"This report prints MPI/PD Data for a selected patient.  The"
"RTN","RGEX01",131,0)
 W !,"information displayed includes the Integration Control Number"
"RTN","RGEX01",132,0)
 W !,"(ICN), Coordinating Master of Record (CMOR), MPI/PD Activity"
"RTN","RGEX01",133,0)
 W !,"Score, Subscription Control Number, Treating Facility list,"
"RTN","RGEX01",134,0)
 W !,"CMOR History and CMOR Change Request History."
"RTN","RGEX01",135,0)
 W !!,"The information is pulled from the Patient (#2) file, Treating"
"RTN","RGEX01",136,0)
 W !,"Facility List (#391.91) file and MPIF CMOR Request (#984.9) file."
"RTN","RGEX01",137,0)
ASK ;Ask for PATIENT
"RTN","RGEX01",138,0)
 I $D(DIRUT) G QUIT
"RTN","RGEX01",139,0)
 W !!,"Patient lookup can be done by Patient Name/SSN or by ICN.",!
"RTN","RGEX01",140,0)
 N DFN,ICN
"RTN","RGEX01",141,0)
 S DIC="^DPT(",DIC(0)="QEAM",DIC("A")="Select PATIENT: ",D="SSN^AICN^B^BS^BS5"
"RTN","RGEX01",142,0)
 D MIX^DIC1 K DIC
"RTN","RGEX01",143,0)
 G:Y<0 QUIT
"RTN","RGEX01",144,0)
 S DFN=+Y
"RTN","RGEX01",145,0)
 D MAIN^VAFCPDAT
"RTN","RGEX01",146,0)
 G ASK
"RTN","RGEX01",147,0)
 Q
"RTN","RGEX01",148,0)
QUIT ;
"RTN","RGEX01",149,0)
 K DFN,ICN,D,Y,HOME
"RTN","RGEXHND1")
0^5^B37958809^B33320954
"RTN","RGEXHND1",1,0)
RGEXHND1 ;BAY/ALS-MPI/PD EXCEPTION HANDLING UTILITY ;10/08/99
"RTN","RGEXHND1",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**3,12,19,23,43,45**;30 Apr 99;Build 9
"RTN","RGEXHND1",3,0)
DTLIST ;List exceptions by date
"RTN","RGEXHND1",4,0)
 K ^TMP("RGEXC",$J)
"RTN","RGEXHND1",5,0)
 I '$D(RGBG) S VALMBG=1
"RTN","RGEXHND1",6,0)
 ;**45 list exception 234 first regardless of date - Primary View Reject
"RTN","RGEXHND1",7,0)
 S EXCDT="",EXCTYP=234,(CNT,IEN)=0
"RTN","RGEXHND1",8,0)
 F  S IEN=$O(^RGHL7(991.1,"ASTAT","0",EXCTYP,IEN)) Q:'IEN  D
"RTN","RGEXHND1",9,0)
 .S IEN2=0
"RTN","RGEXHND1",10,0)
 .F  S IEN2=$O(^RGHL7(991.1,"ASTAT","0",EXCTYP,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEXHND1",11,0)
 ..S EXCDT=$P(^RGHL7(991.1,IEN,0),"^",3)
"RTN","RGEXHND1",12,0)
 ..D ADDREC
"RTN","RGEXHND1",13,0)
 S EXCDT="",EXCTYP=""
"RTN","RGEXHND1",14,0)
 F  S EXCDT=$O(^RGHL7(991.1,"AD",EXCDT)) Q:'EXCDT  D
"RTN","RGEXHND1",15,0)
 . S IEN=0
"RTN","RGEXHND1",16,0)
 . F  S IEN=$O(^RGHL7(991.1,"AD",EXCDT,IEN)) Q:'IEN  D
"RTN","RGEXHND1",17,0)
 .. S NUM="" S NUM=$P($G(^RGHL7(991.1,IEN,1,0)),"^",4) Q:NUM<1  D
"RTN","RGEXHND1",18,0)
 ... S IEN2=0
"RTN","RGEXHND1",19,0)
 ... F  S IEN2=$O(^RGHL7(991.1,IEN,1,IEN2)) Q:'IEN2  D
"RTN","RGEXHND1",20,0)
 .... S EXCTYP=$P(^RGHL7(991.1,IEN,1,IEN2,0),"^",3)
"RTN","RGEXHND1",21,0)
 ....;don't include 234 below; those were done first (above).
"RTN","RGEXHND1",22,0)
 .... I ((EXCTYP>214)&(EXCTYP<219)) D ADDREC  ;**45
"RTN","RGEXHND1",23,0)
 K I,NUM,EXCDT,EXCTYP,RGBG
"RTN","RGEXHND1",24,0)
 IF CNT<1 D NDATA
"RTN","RGEXHND1",25,0)
 Q
"RTN","RGEXHND1",26,0)
 ;
"RTN","RGEXHND1",27,0)
NDATA ; There is no data matching the criteria
"RTN","RGEXHND1",28,0)
 S CNT=CNT+1,STRING=""
"RTN","RGEXHND1",29,0)
 S STRING=$$SETSTR^VALM1("There were no exceptions found.",STRING,5,35)
"RTN","RGEXHND1",30,0)
 S ^TMP("RGEXC",$J,CNT,0)=STRING
"RTN","RGEXHND1",31,0)
 S ^TMP("RGEXC",$J,"IDX",CNT,CNT)=""
"RTN","RGEXHND1",32,0)
 S VALMCNT=CNT
"RTN","RGEXHND1",33,0)
 Q
"RTN","RGEXHND1",34,0)
EXCLST ;List exceptions by type
"RTN","RGEXHND1",35,0)
 K ^TMP("RGEXC",$J)
"RTN","RGEXHND1",36,0)
 S CNT=0,EXCDT="",EXCTYP=""
"RTN","RGEXHND1",37,0)
 I '$D(RGBG) S VALMBG=1
"RTN","RGEXHND1",38,0)
 F  S EXCTYP=$O(^RGHL7(991.1,"AC",EXCTYP)) Q:'EXCTYP  D
"RTN","RGEXHND1",39,0)
 . I (EXCTYP=234)!((EXCTYP>214)&(EXCTYP<219)) D  ;**45
"RTN","RGEXHND1",40,0)
 .. S IEN=0
"RTN","RGEXHND1",41,0)
 .. F  S IEN=$O(^RGHL7(991.1,"AC",EXCTYP,IEN)) Q:'IEN  D
"RTN","RGEXHND1",42,0)
 ... S NUM="" S NUM=$P($G(^RGHL7(991.1,IEN,1,0)),"^",4) Q:NUM<1  D
"RTN","RGEXHND1",43,0)
 .... S IEN2=0
"RTN","RGEXHND1",44,0)
 .... F  S IEN2=$O(^RGHL7(991.1,"AC",EXCTYP,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEXHND1",45,0)
 ..... S EXCDT=$P($G(^RGHL7(991.1,IEN,0)),"^",3) Q:'EXCDT
"RTN","RGEXHND1",46,0)
 ..... D ADDREC
"RTN","RGEXHND1",47,0)
 IF CNT<1 D NDATA
"RTN","RGEXHND1",48,0)
 K RGBG
"RTN","RGEXHND1",49,0)
 Q
"RTN","RGEXHND1",50,0)
PATLST ;List exceptions by patient
"RTN","RGEXHND1",51,0)
 K ^TMP("RGEXC",$J),^TMP("RGEX01",$J)
"RTN","RGEXHND1",52,0)
 S CNT=0,EXCDT="",EXCTYP="",NDX=0,NAME=""
"RTN","RGEXHND1",53,0)
 I '$D(RGBG) S VALMBG=1
"RTN","RGEXHND1",54,0)
 F  S EXCTYP=$O(^RGHL7(991.1,"ADFN",EXCTYP)) Q:'EXCTYP  D
"RTN","RGEXHND1",55,0)
 . I (EXCTYP=234)!((EXCTYP>214)&(EXCTYP<219)) D  ;**45
"RTN","RGEXHND1",56,0)
 .. S DFN=""
"RTN","RGEXHND1",57,0)
 .. F  S DFN=$O(^RGHL7(991.1,"ADFN",EXCTYP,DFN)) Q:'DFN  D
"RTN","RGEXHND1",58,0)
 ... S IEN=0
"RTN","RGEXHND1",59,0)
 ... F  S IEN=$O(^RGHL7(991.1,"ADFN",EXCTYP,DFN,IEN)) Q:'IEN  D
"RTN","RGEXHND1",60,0)
 .... S IEN2=0
"RTN","RGEXHND1",61,0)
 .... F  S IEN2=$O(^RGHL7(991.1,"ADFN",EXCTYP,DFN,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEXHND1",62,0)
 ..... S EXCDT=$P($G(^RGHL7(991.1,IEN,0)),"^",3) Q:'EXCDT
"RTN","RGEXHND1",63,0)
 ..... D DEM^VADPT S NAME=VADM(1) Q:NAME=""
"RTN","RGEXHND1",64,0)
 ..... S NDX=NDX+1
"RTN","RGEXHND1",65,0)
 ..... S ^TMP("RGEX01",$J,NAME,NDX)=$G(VADM(1))_"^"_IEN_"^"_IEN2_"^"_EXCTYP_"^"_EXCDT
"RTN","RGEXHND1",66,0)
 D PATTMP
"RTN","RGEXHND1",67,0)
 IF CNT<1 D NDATA
"RTN","RGEXHND1",68,0)
 K DFN,RGBG
"RTN","RGEXHND1",69,0)
 Q
"RTN","RGEXHND1",70,0)
PATTMP ;
"RTN","RGEXHND1",71,0)
 S NM=""
"RTN","RGEXHND1",72,0)
 F  S NM=$O(^TMP("RGEX01",$J,NM)) Q:NM=""  D
"RTN","RGEXHND1",73,0)
 . S NDX=0
"RTN","RGEXHND1",74,0)
 . F  S NDX=$O(^TMP("RGEX01",$J,NM,NDX)) Q:'NDX  D
"RTN","RGEXHND1",75,0)
 .. S IEN=$P(^TMP("RGEX01",$J,NM,NDX),"^",2)
"RTN","RGEXHND1",76,0)
 .. S IEN2=$P(^TMP("RGEX01",$J,NM,NDX),"^",3)
"RTN","RGEXHND1",77,0)
 .. S EXCTYP=$P(^TMP("RGEX01",$J,NM,NDX),"^",4)
"RTN","RGEXHND1",78,0)
 .. S EXCDT=$P(^TMP("RGEX01",$J,NM,NDX),"^",5)
"RTN","RGEXHND1",79,0)
 .. D ADDREC
"RTN","RGEXHND1",80,0)
 K NDX,NM,NAME
"RTN","RGEXHND1",81,0)
 Q
"RTN","RGEXHND1",82,0)
SELTYP ; List all exceptions of type selected by user
"RTN","RGEXHND1",83,0)
 S EXCTYPE="",FLAG=0,ETYPE=""
"RTN","RGEXHND1",84,0)
 I '$D(RGBG) S VALMBG=1
"RTN","RGEXHND1",85,0)
 K DIR,Y,DIC
"RTN","RGEXHND1",86,0)
 S DIR("A")="Enter an exception type to view: "
"RTN","RGEXHND1",87,0)
 S DIR(0)="SAM^215:Death Entry on MPI not VISTA;216:Death Entry on Vista not MPI;217:Death Entries on MPI and Vista DON'T MATCH;218:Potential Matches Returned;234:Primary View Reject" ;**43,45
"RTN","RGEXHND1",88,0)
 S DIR("?")="^D HLPSEL^RGEXHND1"
"RTN","RGEXHND1",89,0)
 D ^DIR
"RTN","RGEXHND1",90,0)
 I Y<1 S RGSORT="SD" D SORT^RGEX01  Q
"RTN","RGEXHND1",91,0)
 Q:$D(DUOUT)!$D(DTOUT)
"RTN","RGEXHND1",92,0)
 S EXCTYPE=+Y,ETYPE=$P(^RGHL7(991.11,EXCTYPE,10),"^",1)
"RTN","RGEXHND1",93,0)
 I (EXCTYPE=234)!((EXCTYPE>214)&(EXCTYPE<219)) S FLAG=1 ;**43,45
"RTN","RGEXHND1",94,0)
 I FLAG=1 D ADDSEL
"RTN","RGEXHND1",95,0)
 E  I FLAG=0 D
"RTN","RGEXHND1",96,0)
 . W !,"Not a valid selection."
"RTN","RGEXHND1",97,0)
 . D SELTYP
"RTN","RGEXHND1",98,0)
 K FLAG,Y,DIR,DIC,DTOUT,DUOUT,RGBG
"RTN","RGEXHND1",99,0)
 Q
"RTN","RGEXHND1",100,0)
ADDSEL ;called by SELTYP
"RTN","RGEXHND1",101,0)
 K ^TMP("RGEXC",$J)
"RTN","RGEXHND1",102,0)
 S CNT=0,EXCDT="",EXCTYP=""
"RTN","RGEXHND1",103,0)
 F  S EXCTYP=$O(^RGHL7(991.1,"AC",EXCTYP)) Q:'EXCTYP  D
"RTN","RGEXHND1",104,0)
 . I EXCTYP=EXCTYPE D
"RTN","RGEXHND1",105,0)
 .. S IEN=0
"RTN","RGEXHND1",106,0)
 .. F  S IEN=$O(^RGHL7(991.1,"AC",EXCTYP,IEN)) Q:'IEN  D
"RTN","RGEXHND1",107,0)
 ... S IEN2=0
"RTN","RGEXHND1",108,0)
 ... F  S IEN2=$O(^RGHL7(991.1,"AC",EXCTYP,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEXHND1",109,0)
 .... S EXCDT=$P($G(^RGHL7(991.1,IEN,0)),"^",3) Q:'EXCDT  ;**43
"RTN","RGEXHND1",110,0)
 .... D ADDREC
"RTN","RGEXHND1",111,0)
 I CNT<1 D
"RTN","RGEXHND1",112,0)
 . W !,"There are no "_ETYPE
"RTN","RGEXHND1",113,0)
 . W !,"exceptions that need processing."
"RTN","RGEXHND1",114,0)
 . D SELTYP
"RTN","RGEXHND1",115,0)
 Q
"RTN","RGEXHND1",116,0)
HLPSEL ;
"RTN","RGEXHND1",117,0)
 D FULL^VALM1
"RTN","RGEXHND1",118,0)
 ;W !,"The following exception types are handled by this option:"
"RTN","RGEXHND1",119,0)
 ;W !!,"Death Entry on MPI not in VISTA",?50,"(215)"
"RTN","RGEXHND1",120,0)
 ;W !,"Death Entry on Vista not in MPI",?50,"(216)"
"RTN","RGEXHND1",121,0)
 ;W !,"Death Entries on MPI and Vista DO NOT MATCH",?50,"(217)"
"RTN","RGEXHND1",122,0)
 ;W !,"Potential Matches Returned",?50,"(218)"
"RTN","RGEXHND1",123,0)
 ;W !,"Primary View Reject",?50,"(234)"
"RTN","RGEXHND1",124,0)
 S VALMBCK="R"
"RTN","RGEXHND1",125,0)
 Q
"RTN","RGEXHND1",126,0)
ADDREC ;
"RTN","RGEXHND1",127,0)
 S ETEXT="",RGDFN="",ICN="",RGNM="",STAT="",DOD=""
"RTN","RGEXHND1",128,0)
 S ETEXT=$P($G(^RGHL7(991.11,EXCTYP,10)),"^",1)
"RTN","RGEXHND1",129,0)
 S RGDFN=$P(^RGHL7(991.1,IEN,1,IEN2,0),"^",4) Q:'RGDFN
"RTN","RGEXHND1",130,0)
 S STAT=$P($G(^RGHL7(991.1,IEN,1,IEN2,0)),"^",5)
"RTN","RGEXHND1",131,0)
 S ICN=+$$GETICN^MPIF001(RGDFN)
"RTN","RGEXHND1",132,0)
 S HOME=$$SITE^VASITE()
"RTN","RGEXHND1",133,0)
 I (STAT<1)!(STAT="") D
"RTN","RGEXHND1",134,0)
 .;Only list exceptions that are Not Processed
"RTN","RGEXHND1",135,0)
 .; only list patients with local ICN, or for exceptions 234, 215 - 218
"RTN","RGEXHND1",136,0)
 . I $E(ICN,1,3)=$E($P(HOME,"^",3),1,3)!(ICN<0)!(EXCTYP=234)!((EXCTYP>214)&(EXCTYP<219)) D  ;**43,45
"RTN","RGEXHND1",137,0)
 .. S DFN=RGDFN D DEM^VADPT
"RTN","RGEXHND1",138,0)
 .. S RGNM=VADM(1)
"RTN","RGEXHND1",139,0)
 .. S RGSSN=$P($G(VADM(2)),"^",1)
"RTN","RGEXHND1",140,0)
 .. S DOB=$G(VADM(3)) I DOB="" S DOB="^"
"RTN","RGEXHND1",141,0)
 .. S DOD=$P($P($G(VADM(6)),"^",2),"@",1)
"RTN","RGEXHND1",142,0)
 .. S EXDATE=$P($$FMTE^XLFDT(EXCDT,2),"@",1)
"RTN","RGEXHND1",143,0)
 .. S CNT=CNT+1
"RTN","RGEXHND1",144,0)
 .. S STRING=""
"RTN","RGEXHND1",145,0)
 .. I ICN<0 S ICN=""
"RTN","RGEXHND1",146,0)
 .. S STRING=$$SETSTR^VALM1(CNT,STRING,1,4)
"RTN","RGEXHND1",147,0)
 .. S STRING=$$SETSTR^VALM1($E(RGNM,1,22),STRING,6,21)
"RTN","RGEXHND1",148,0)
 .. S STRING=$$SETSTR^VALM1(RGSSN,STRING,28,10)
"RTN","RGEXHND1",149,0)
 .. S STRING=$$SETSTR^VALM1(EXDATE,STRING,39,8)
"RTN","RGEXHND1",150,0)
 .. S STRING=$$SETSTR^VALM1(ETEXT,STRING,49,32)
"RTN","RGEXHND1",151,0)
 .. S ^TMP("RGEXC",$J,CNT,0)=STRING
"RTN","RGEXHND1",152,0)
 .. S ^TMP("RGEXC",$J,"IDX",CNT,CNT)=""
"RTN","RGEXHND1",153,0)
 .. S ^TMP("RGEXC",$J,CNT,"DATA")=RGNM_"^"_RGSSN_"^"_$P($$FMTE^XLFDT(EXCDT),"@",1)_"^"_ETEXT_"^"_DFN_"^"_ICN_"^"_DOB_"^"_STAT_"^"_IEN_"^"_IEN2_"^"_CNT_"^"_DOD
"RTN","RGEXHND1",154,0)
 S VALMCNT=CNT
"RTN","RGEXHND1",155,0)
 K RGDFN,RGNM,RGSSN,EXDATE,ETEXT,ICN,DOB,STAT,VADM,HOME,STRING,DOD
"RTN","RGEXHND1",156,0)
 Q
"RTN","RGEXHND1",157,0)
SELECT ;
"RTN","RGEXHND1",158,0)
 I $G(STRING)["no exceptions found" D SORT^RGEX01  Q
"RTN","RGEXHND1",159,0)
 N VALMY
"RTN","RGEXHND1",160,0)
 D EN^VALM2(XQORNOD(0),"OS")
"RTN","RGEXHND1",161,0)
 I '$D(VALMY) Q
"RTN","RGEXHND1",162,0)
 S VALMCNT=CNT
"RTN","RGEXHND1",163,0)
 S DATA="",CNT=""
"RTN","RGEXHND1",164,0)
 S CNT=$O(VALMY(0))
"RTN","RGEXHND1",165,0)
 S DATA=$G(^TMP("RGEXC",$J,CNT,"DATA"))
"RTN","RGEXHND1",166,0)
 I '$D(DATA) S CNT=0 Q
"RTN","RGEXHND1",167,0)
 D CLEAN^VALM10
"RTN","RGEXHND1",168,0)
 D EN^RGEX03(DATA)
"RTN","RGEXHND1",169,0)
 I RGSORT="VT" D
"RTN","RGEXHND1",170,0)
 . K @VALMAR
"RTN","RGEXHND1",171,0)
 . D ADDSEL
"RTN","RGEXHND1",172,0)
 E  I RGSORT'="VT" D SORT^RGEX01
"RTN","RGEXHND1",173,0)
 ;
"RTN","RGEXHND1",174,0)
 Q
"RTN","RGEXHND1",175,0)
QUIT ;
"RTN","RGHLLOG")
0^6^B22489065^B22489044
"RTN","RGHLLOG",1,0)
RGHLLOG ;CAIRO/DKM-LOG MESSAGE PROCESSING INFO ;09/04/98
"RTN","RGHLLOG",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**1,3,11,13,18,19,25,45**;30 Apr 99;Build 9
"RTN","RGHLLOG",3,0)
 ;Reference to ^HLMA("C" supported by IA #3244
"RTN","RGHLLOG",4,0)
 ;=================================================================
"RTN","RGHLLOG",5,0)
 ; Log information about message processing and exceptions
"RTN","RGHLLOG",6,0)
 ; in CIRN HL7 Exception Log file.
"RTN","RGHLLOG",7,0)
 ;=================================================================
"RTN","RGHLLOG",8,0)
 ; Start time for run log
"RTN","RGHLLOG",9,0)
START(RGMSG,RGDC,RGPARAM) ;
"RTN","RGHLLOG",10,0)
 ;This entry point starts the log process in the CIRN HL7 EXCEPTION LOG
"RTN","RGHLLOG",11,0)
 ;file (#991.1), if the (#6) MINIMAL EXCEPTION LOGGING? field in
"RTN","RGHLLOG",12,0)
 ;File #990.8 is set to 0.
"RTN","RGHLLOG",13,0)
 ; Input: Required
"RTN","RGHLLOG",14,0)
 ;   RGMSG - IEN of message entry in File #773, usually HLMTIEN
"RTN","RGHLLOG",15,0)
 ;        Optional
"RTN","RGHLLOG",16,0)
 ;   RGDC - Event Class, associated with an entry in File #
"RTN","RGHLLOG",17,0)
 ;   RGPARAM - reprocessing routine
"RTN","RGHLLOG",18,0)
 S U="^"
"RTN","RGHLLOG",19,0)
 K RGLOG
"RTN","RGHLLOG",20,0)
 S RGLOG(3)=$G(RGMSG),RGLOG(5)=$G(RGDC),RGLOG(4)=$G(RGPARAM),RGLOG(1)=$$NOW^XLFDT
"RTN","RGHLLOG",21,0)
 I '$P(^RGSITE("COR",1,0),U,8) S RGLOG=$$CREATE
"RTN","RGHLLOG",22,0)
 Q
"RTN","RGHLLOG",23,0)
 ; Create a log entry
"RTN","RGHLLOG",24,0)
CREATE() Q:$G(RGLOG) RGLOG
"RTN","RGHLLOG",25,0)
 L +^RGHL7(991.1,0):10
"RTN","RGHLLOG",26,0)
 S RGLOG=$O(^RGHL7(991.1,$C(32)),-1)+1
"RTN","RGHLLOG",27,0)
 S:$G(RGLOG(1))="" RGLOG(1)=$$NOW^XLFDT
"RTN","RGHLLOG",28,0)
 S RGLOG(3)=$S($G(RGLOG(3))=0:0,$G(HL("MID"))="":"",1:$$IEN773($G(HL("MID"))))
"RTN","RGHLLOG",29,0)
 S (DA,X)=RGLOG,DIC="^RGHL7(991.1,",DIC(0)="L",DLAYGO=991.1,DIC("DR")="1///"_$G(RGLOG(1))_";3////"_$G(RGLOG(3))_";5///"_$G(RGLOG(5))_";4////"_$G(RGLOG(4)) K DD,DO D FILE^DICN K DIC,DA,X,DLAYGO
"RTN","RGHLLOG",30,0)
 L -^RGHL7(991.1,0)
"RTN","RGHLLOG",31,0)
 Q RGLOG
"RTN","RGHLLOG",32,0)
 ; Log time run completed
"RTN","RGHLLOG",33,0)
STOP(RGQUIT) ;
"RTN","RGHLLOG",34,0)
 ;This entry point completes the logging process
"RTN","RGHLLOG",35,0)
 ; Input: required
"RTN","RGHLLOG",36,0)
 ;    RGQUIT - 0 for success and 1 for failure
"RTN","RGHLLOG",37,0)
 ;
"RTN","RGHLLOG",38,0)
 Q:'$G(RGLOG)
"RTN","RGHLLOG",39,0)
 L +^RGHL7(991.1,RGLOG):10
"RTN","RGHLLOG",40,0)
 S DIE="^RGHL7(991.1,",DR="1.5///NOW;1.6///^S X=$G(RGQUIT)",DA=RGLOG D ^DIE K DIE,DA,DR
"RTN","RGHLLOG",41,0)
 L -^RGHL7(991.1,RGLOG)
"RTN","RGHLLOG",42,0)
 K RGLOG,RGQUIT,X,Y,DIC,DIE
"RTN","RGHLLOG",43,0)
 Q
"RTN","RGHLLOG",44,0)
 ; Log unclassified exception (old entry point)
"RTN","RGHLLOG",45,0)
ERR(RGERR,RGSEV) ;
"RTN","RGHLLOG",46,0)
 D EXC(18,RGERR)
"RTN","RGHLLOG",47,0)
 S RGQUIT=$G(RGQUIT)!$G(RGSEV)
"RTN","RGHLLOG",48,0)
 Q
"RTN","RGHLLOG",49,0)
 ; Log an exception
"RTN","RGHLLOG",50,0)
EXC(RGEXC,RGERR,RGDFN,MSGID,STATNUM) ;
"RTN","RGHLLOG",51,0)
 ;This entry point logs exceptions in the CIRN HL7 EXCEPTION LOG
"RTN","RGHLLOG",52,0)
 ;file (#991.1)
"RTN","RGHLLOG",53,0)
 ; Input: Required
"RTN","RGHLLOG",54,0)
 ;   RGEXC - Exception type in File #991.11
"RTN","RGHLLOG",55,0)
 ;   RGERR - Supplemental text
"RTN","RGHLLOG",56,0)
 ;        Optional
"RTN","RGHLLOG",57,0)
 ;   RGDFN - IEN in the PATIENT file (#2)
"RTN","RGHLLOG",58,0)
 ;   MSGID - message id of the HL7 message where the exception was encountered (optional)
"RTN","RGHLLOG",59,0)
 ;   STATNUM - station # of site that encountered the error (optional) - if not defined then the local site is assumed, using $$SITE^VASITE
"RTN","RGHLLOG",60,0)
 ;
"RTN","RGHLLOG",61,0)
 I $L($G(HL("MID"))) Q:$$INVEXC(HL("MID"))  ; is the exception valid?
"RTN","RGHLLOG",62,0)
 N RGI,RGZ
"RTN","RGHLLOG",63,0)
 S U="^"
"RTN","RGHLLOG",64,0)
 S:RGEXC[U RGERR=$P(RGEXC,U,2,999),RGEXC=+RGEXC
"RTN","RGHLLOG",65,0)
 S:RGEXC'=+RGEXC RGERR=RGEXC,RGEXC=18
"RTN","RGHLLOG",66,0)
 S:'$D(^RGHL7(991.11,RGEXC)) RGEXC=18
"RTN","RGHLLOG",67,0)
 L +^RGHL7(991.11,RGEXC):10
"RTN","RGHLLOG",68,0)
 S RGZ=$G(^RGHL7(991.11,RGEXC,0))
"RTN","RGHLLOG",69,0)
 S:$L(RGZ) $P(^RGHL7(991.11,RGEXC,0),U,5)=$P(RGZ,U,5)+1
"RTN","RGHLLOG",70,0)
 S:$P(RGZ,U,2)>1 RGQUIT=1
"RTN","RGHLLOG",71,0)
 L -^RGHL7(991.11,RGEXC)
"RTN","RGHLLOG",72,0)
 S RGLOG=$$CREATE
"RTN","RGHLLOG",73,0)
 L +^RGHL7(991.1,RGLOG):10
"RTN","RGHLLOG",74,0)
 S RGI=$O(^RGHL7(991.1,RGLOG,1,$C(32)),-1)+1
"RTN","RGHLLOG",75,0)
 S RGERR=$E($G(RGERR),1,250)
"RTN","RGHLLOG",76,0)
 S DIC="^RGHL7(991.1,"_RGLOG_",1,"
"RTN","RGHLLOG",77,0)
 S X=RGI,DA(1)=RGLOG,DIC(0)="FL",DLAYGO=991.12,DIC("P")=$P(^DD(991.1,2,0),"^",2)
"RTN","RGHLLOG",78,0)
 D ^DIC
"RTN","RGHLLOG",79,0)
 S DIE=DIC
"RTN","RGHLLOG",80,0)
 K DIC,DA,DR,DLAYGO
"RTN","RGHLLOG",81,0)
 S STAT=0
"RTN","RGHLLOG",82,0)
 S DIC="3.8",DIC(0)="Z",X="MPIF EXCEPTIONS" D ^DIC K DIC
"RTN","RGHLLOG",83,0)
 S RGMG=$P($G(Y),"^",1)
"RTN","RGHLLOG",84,0)
 I $P(^RGHL7(991.11,RGEXC,0),U,4)=RGMG S STAT=1
"RTN","RGHLLOG",85,0)
 S DA(1)=RGLOG,DA=RGI,DR="2///"_$G(RGEXC)_";3///"_$S($G(RGDFN):"`"_RGDFN,1:"")_";6///"_$G(STAT)_";10///"_$G(RGERR)
"RTN","RGHLLOG",86,0)
 D ^DIE K DIE,DA,DR
"RTN","RGHLLOG",87,0)
 L -^RGHL7(991.1,RGLOG)
"RTN","RGHLLOG",88,0)
 S RGI=$P(RGZ,U,3),RGZ=$P(RGZ,U,4)
"RTN","RGHLLOG",89,0)
 ;
"RTN","RGHLLOG",90,0)
 ;If the action type is for the MPI Exception Handler, send exception to the handler and quit
"RTN","RGHLLOG",91,0)
 I (RGI=3) D SENDMPI^RGHLLOG1($G(RGEXC),$G(RGERR),$G(RGDFN),$G(MSGID),$G(STATNUM)) Q
"RTN","RGHLLOG",92,0)
 ;
"RTN","RGHLLOG",93,0)
 Q:'RGI!'RGZ
"RTN","RGHLLOG",94,0)
 ;quit and don't send messages for exception types that are now being
"RTN","RGHLLOG",95,0)
 ;handled through the MPI/PD Exception Handling option.
"RTN","RGHLLOG",96,0)
 Q:RGEXC=234!((RGEXC>214)&(RGEXC<219))
"RTN","RGHLLOG",97,0)
 S DIC="^XMB(3.8,",DIC(0)="NZ",X="`"_RGZ D ^DIC K DIC Q:+Y<1  S RGZ=$P(Y,U,2) K Y
"RTN","RGHLLOG",98,0)
 Q:RGZ=""!$P($G(^RGSITE("COR",1,0)),U,7)
"RTN","RGHLLOG",99,0)
 S RGERR=$$SHORT(RGEXC,RGERR),RGZ="G."_RGZ
"RTN","RGHLLOG",100,0)
 I RGI=2 D ALERT^RGRSUTL2(RGERR,RGZ) Q
"RTN","RGHLLOG",101,0)
 D MAIL^RGRSUTL2(RGERR,RGZ,"MPI/PD Exception: "_$$SHORT(RGEXC),"MPI/PD exception notification")
"RTN","RGHLLOG",102,0)
 Q
"RTN","RGHLLOG",103,0)
 ;
"RTN","RGHLLOG",104,0)
INVEXC(RGMID) ; determine if this exception needs to be sent to MPI/PD
"RTN","RGHLLOG",105,0)
 ; personnel via FORUM. Return 1 to avoid messaging to FORUM, else 0.
"RTN","RGHLLOG",106,0)
 ; IA#:3244 is applied in this functionality
"RTN","RGHLLOG",107,0)
 N RGFLG,RGIEN S RGFLG=1
"RTN","RGHLLOG",108,0)
 S RGIEN=$$IEN773(RGMID) Q:'RGIEN RGFLG
"RTN","RGHLLOG",109,0)
 S RGIEN("SND")=$$GET1^DIQ(773,RGIEN_",",13)
"RTN","RGHLLOG",110,0)
 S RGIEN("REC")=$$GET1^DIQ(773,RGIEN_",",14)
"RTN","RGHLLOG",111,0)
 ; check the sending application (fld:13, 0;11) & the receiving
"RTN","RGHLLOG",112,0)
 ; application (fld:14, 0;12) to see if they are related to the MPI/PD
"RTN","RGHLLOG",113,0)
 ; project.
"RTN","RGHLLOG",114,0)
 I RGIEN("SND")]""!(RGIEN("REC")]"") D  Q RGFLG
"RTN","RGHLLOG",115,0)
 .S RGFLG=$$APP(RGIEN("SND")) Q:'RGFLG
"RTN","RGHLLOG",116,0)
 .S RGFLG=$$APP(RGIEN("REC"))
"RTN","RGHLLOG",117,0)
 .Q
"RTN","RGHLLOG",118,0)
 ; Only if the sending/receiving applications cannot be determined from
"RTN","RGHLLOG",119,0)
 ; the data in their respective fields, do I check the MSH multiple for
"RTN","RGHLLOG",120,0)
 ; the MSH segment. I identify the sending/receiving application from
"RTN","RGHLLOG",121,0)
 ; this segment. 
"RTN","RGHLLOG",122,0)
 E  D
"RTN","RGHLLOG",123,0)
 .N RG,RG1,RGMSH,RGFS
"RTN","RGHLLOG",124,0)
 .D GETS^DIQ(773,RGIEN_",",200,,"RGMSH") ;check MSH mult for snd/rec app
"RTN","RGHLLOG",125,0)
 .Q:'($D(RGMSH)\10)  ; no data in "MSH" multiple for file 773
"RTN","RGHLLOG",126,0)
 .S RGIEN=RGIEN_",",RG="RGMSH(773,"""_RGIEN_""","_200_")"
"RTN","RGHLLOG",127,0)
 .S RG1=0 F  S RG1=$O(@RG@(RG1)) Q:RG1'>0  D  Q:$E($G(@RG@(RG1)),1,3)="MSH"
"RTN","RGHLLOG",128,0)
 ..I $E($G(@RG@(RG1)),1,3)="MSH" D
"RTN","RGHLLOG",129,0)
 ...S RG(0)=$G(@RG@(RG1)),RGFS=$E(RG(0),4)
"RTN","RGHLLOG",130,0)
 ...S:$P(RG(0),RGFS,3)]"" RGFLG=$$APP($P(RG(0),RGFS,3)) Q:'RGFLG
"RTN","RGHLLOG",131,0)
 ...S:$P(RG(0),RGFS,5)]"" RGFLG=$$APP($P(RG(0),RGFS,5))
"RTN","RGHLLOG",132,0)
 ...Q
"RTN","RGHLLOG",133,0)
 ..Q
"RTN","RGHLLOG",134,0)
 .Q
"RTN","RGHLLOG",135,0)
 Q RGFLG
"RTN","RGHLLOG",136,0)
APP(X) ; check if the sending/receiving application is relevant to the
"RTN","RGHLLOG",137,0)
 ; MPI/PD team.  Returns 1 if a non-relevant namespace, else 0
"RTN","RGHLLOG",138,0)
 I $E(X,1,2)="RG"!($E(X,1,2)="VA")!($E(X,1,3)="MPI") Q 0
"RTN","RGHLLOG",139,0)
 Q 1
"RTN","RGHLLOG",140,0)
 ;
"RTN","RGHLLOG",141,0)
IEN773(RGMID) ; find the ien of the record in the HL7 MESSAGE ADMINISTRATION
"RTN","RGHLLOG",142,0)
 ; (#773) file based on the Message ID.  Input: Message ID
"RTN","RGHLLOG",143,0)
 ; Output: null, no record in 773, else 773 record ien.  IA#: 3244
"RTN","RGHLLOG",144,0)
 Q:$G(RGMID)="" ""
"RTN","RGHLLOG",145,0)
 Q $O(^HLMA("C",RGMID,0))
"RTN","RGHLLOG",146,0)
 ;
"RTN","RGHLLOG",147,0)
SHORT(RGEXC,RGTXT) ;
"RTN","RGHLLOG",148,0)
 ; Retrieve short text description of exception
"RTN","RGHLLOG",149,0)
 Q $G(^RGHL7(991.11,+RGEXC,10))_$S($G(RGTXT)="":"",1:": "_RGTXT)
"RTN","RGHLLOG",150,0)
 ;
"RTN","RGMTETOT")
0^10^B28007355^B39858170
"RTN","RGMTETOT",1,0)
RGMTETOT ;BIR/CML-Compile Totals for Site Exceptions ;11/15/01
"RTN","RGMTETOT",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**20,30,43,45**;30 Apr 99;Build 9
"RTN","RGMTETOT",3,0)
 ;
"RTN","RGMTETOT",4,0)
 ;Reference to ^DPT("AICNL" supported by IA #2070
"RTN","RGMTETOT",5,0)
 ;
"RTN","RGMTETOT",6,0)
 ;Variable RGHLMQ cannot be killed in this routine, it is needed for the remote query
"RTN","RGMTETOT",7,0)
 ;
"RTN","RGMTETOT",8,0)
 ;Use this routine to compile totals of a site's exceptions in file #991.1
"RTN","RGMTETOT",9,0)
 S DUMP=0 G START
"RTN","RGMTETOT",10,0)
 ;
"RTN","RGMTETOT",11,0)
DUMP1 ;Use this call to dump all data in ascii format for table
"RTN","RGMTETOT",12,0)
 S DUMP=1 G START
"RTN","RGMTETOT",13,0)
 ;
"RTN","RGMTETOT",14,0)
DUMP2 ;Use this call to dump data in ascii format for table - just for exceptions sites have to deal with
"RTN","RGMTETOT",15,0)
 S DUMP=2
"RTN","RGMTETOT",16,0)
 ;
"RTN","RGMTETOT",17,0)
START ;
"RTN","RGMTETOT",18,0)
 ;do purge of any dups for POTENTIAL MATCH Exceptions
"RTN","RGMTETOT",19,0)
 K TYPEARR,^XTMP("RGMT","HLMQETOT")
"RTN","RGMTETOT",20,0)
 S ^XTMP("RGMT",0)=$$FMADD^XLFDT(DT,30)_"^"_$$NOW^XLFDT_"^MPI/PD Maintenance Data"
"RTN","RGMTETOT",21,0)
 D PURGE
"RTN","RGMTETOT",22,0)
 ;create type array from file 991.11
"RTN","RGMTETOT",23,0)
 S TYPE=214 F  S TYPE=$O(^RGHL7(991.11,TYPE)) Q:'TYPE  I TYPE'=218 S TYPEARR(TYPE)=0
"RTN","RGMTETOT",24,0)
 ;
"RTN","RGMTETOT",25,0)
 ;start loop
"RTN","RGMTETOT",26,0)
 S TYPE=214 F  S TYPE=$O(^RGHL7(991.1,"AC",TYPE)) Q:'TYPE  D
"RTN","RGMTETOT",27,0)
 .Q:TYPE=218
"RTN","RGMTETOT",28,0)
 .S IEN1=0 F  S IEN1=$O(^RGHL7(991.1,"AC",TYPE,IEN1)) Q:'IEN1  D
"RTN","RGMTETOT",29,0)
 ..S IEN2=0 F  S IEN2=$O(^RGHL7(991.1,"AC",TYPE,IEN1,IEN2)) Q:'IEN2  D
"RTN","RGMTETOT",30,0)
 ...I '$D(^RGHL7(991.1,IEN1,1,IEN2,0)) Q
"RTN","RGMTETOT",31,0)
 ...S STAT=$P(^RGHL7(991.1,IEN1,1,IEN2,0),"^",5) I STAT<1 S TYPEARR(TYPE)=TYPEARR(TYPE)+1
"RTN","RGMTETOT",32,0)
 ;
"RTN","RGMTETOT",33,0)
PRT ;
"RTN","RGMTETOT",34,0)
 S GRAND=0
"RTN","RGMTETOT",35,0)
 S SITENM=$P($$SITE^VASITE(),"^",2),$P(LN,"-",81)=""
"RTN","RGMTETOT",36,0)
 D NOW^%DTC S RUNDT=$$FMTE^XLFDT($E(%,1,12))
"RTN","RGMTETOT",37,0)
 ;
"RTN","RGMTETOT",38,0)
PRT0 I 'DUMP D
"RTN","RGMTETOT",39,0)
 .W !!,"Exception Totals for ",SITENM
"RTN","RGMTETOT",40,0)
 .W !,"Printed ",RUNDT,!,LN
"RTN","RGMTETOT",41,0)
 .S TYPE=0 F  S TYPE=$O(TYPEARR(TYPE)) Q:'TYPE  I +TYPEARR(TYPE) D
"RTN","RGMTETOT",42,0)
 ..S GRAND=GRAND+TYPEARR(TYPE)
"RTN","RGMTETOT",43,0)
 ..W !!,"TYPE: ",TYPE,?12,$P($T(@TYPE),";;",2),?67,"TOTAL = ",$J(TYPEARR(TYPE),4)
"RTN","RGMTETOT",44,0)
 ..W !,"DESCRIPTION:"
"RTN","RGMTETOT",45,0)
 ..S TXT=0 F  S TXT=$O(^RGHL7(991.11,TYPE,99,TXT)) Q:'TXT  W !,^RGHL7(991.11,TYPE,99,TXT,0)
"RTN","RGMTETOT",46,0)
 .W !!?56,"TOTAL EXCEPTIONS: ",$J(GRAND,5)
"RTN","RGMTETOT",47,0)
 ;
"RTN","RGMTETOT",48,0)
PRT1 I DUMP=1 D
"RTN","RGMTETOT",49,0)
 .W !!,"At this point it is necessary for you to increase the right margin."
"RTN","RGMTETOT",50,0)
 .W !,"At the DEVICE prompt enter=> ;255"
"RTN","RGMTETOT",51,0)
 .W ! D ^%ZIS I POP W !,"DOWNLOAD ABORTED!" Q
"RTN","RGMTETOT",52,0)
 .W !!,"Data string=Site;Run Date;Date CIRN Installed;Exceptions 215-234"
"RTN","RGMTETOT",53,0)
 .S STR=SITENM_";"_RUNDT_";"
"RTN","RGMTETOT",54,0)
 .S TYPE=0 F  S TYPE=$O(TYPEARR(TYPE)) Q:'TYPE  D
"RTN","RGMTETOT",55,0)
 ..S STR=STR_";"_TYPEARR(TYPE)
"RTN","RGMTETOT",56,0)
 .W !!,STR
"RTN","RGMTETOT",57,0)
 ;
"RTN","RGMTETOT",58,0)
PRT2 I DUMP=2 D
"RTN","RGMTETOT",59,0)
 .S ICN=0,LOCCNT=0 F  S ICN=$O(^DPT("AICNL",1,ICN)) Q:'ICN  S LOCCNT=LOCCNT+1
"RTN","RGMTETOT",60,0)
 .S SITEIEN=+$$SITE^VASITE(),STANUM=$P($$SITE^VASITE(),"^",3)
"RTN","RGMTETOT",61,0)
 .I '$D(RGHLMQ) W !!,"Data string:"
"RTN","RGMTETOT",62,0)
 .I '$D(RGHLMQ) W !,"Site;Sta#;;;LocICNs,215,216,217,218,227,234"
"RTN","RGMTETOT",63,0)
 .S STR=SITENM_";"_STANUM_";;;"_LOCCNT
"RTN","RGMTETOT",64,0)
 .F TYPE=215,216,217,218,227,234 S STR=STR_";"_TYPEARR(TYPE)
"RTN","RGMTETOT",65,0)
 .I '$D(RGHLMQ) W !!,STR
"RTN","RGMTETOT",66,0)
 .I $D(RGHLMQ) S ^XTMP("RGMT","HLMQETOT",STANUM,1)=STR
"RTN","RGMTETOT",67,0)
 ;
"RTN","RGMTETOT",68,0)
QUIT ;
"RTN","RGMTETOT",69,0)
 K %,CIRNIEN,CNT,DA,DIK,DUMP,DUPCNT,EXCDT,GRAND,ICN,IEN,IEN1,IEN2,LN,LOCCNT,OLDDT,OLDNODE,PTNM
"RTN","RGMTETOT",70,0)
 K RGDFN,RUNDT,SITEIEN,SITENM,STANUM,STAT,STR,TXT,TYPE,XCNT,HOME,DFN,RCNT,VADM
"RTN","RGMTETOT",71,0)
 K ^XTMP("RGMT","ETOT")
"RTN","RGMTETOT",72,0)
 Q
"RTN","RGMTETOT",73,0)
 ;
"RTN","RGMTETOT",74,0)
PURGE ;
"RTN","RGMTETOT",75,0)
 I '$D(RGHLMQ) W !!,"...purging duplicate Potential Match Exceptions",!
"RTN","RGMTETOT",76,0)
 K ^XTMP("RGMT","ETOT")
"RTN","RGMTETOT",77,0)
 S (RGDFN,CNT,XCNT,DUPCNT)=0,HOME=$$SITE^VASITE()
"RTN","RGMTETOT",78,0)
 F  S RGDFN=$O(^RGHL7(991.1,"ADFN",218,RGDFN)) Q:'RGDFN  D
"RTN","RGMTETOT",79,0)
 .S IEN=0
"RTN","RGMTETOT",80,0)
 .F  S IEN=$O(^RGHL7(991.1,"ADFN",218,RGDFN,IEN)) Q:'IEN  D
"RTN","RGMTETOT",81,0)
 ..S IEN2=0
"RTN","RGMTETOT",82,0)
 ..F  S IEN2=$O(^RGHL7(991.1,"ADFN",218,RGDFN,IEN,IEN2)) Q:'IEN2  D
"RTN","RGMTETOT",83,0)
 ...I '$D(^RGHL7(991.1,IEN,0)) Q
"RTN","RGMTETOT",84,0)
 ...S CNT=CNT+1
"RTN","RGMTETOT",85,0)
 ...S EXCDT=$P(^RGHL7(991.1,IEN,0),"^",3)
"RTN","RGMTETOT",86,0)
 ...I '$D(^XTMP("RGMT","ETOT",RGDFN)) D  Q
"RTN","RGMTETOT",87,0)
 ....S XCNT=XCNT+1
"RTN","RGMTETOT",88,0)
 ....D SETTMP
"RTN","RGMTETOT",89,0)
 ...I $D(^XTMP("RGMT","ETOT",RGDFN))  D
"RTN","RGMTETOT",90,0)
 ....S OLDNODE=^XTMP("RGMT","ETOT",RGDFN)
"RTN","RGMTETOT",91,0)
 ....S OLDDT=$P(OLDNODE,"^")
"RTN","RGMTETOT",92,0)
 ....I EXCDT>OLDDT D  Q
"RTN","RGMTETOT",93,0)
 .....S DA(1)=$P(OLDNODE,"^",2),DA=$P(OLDNODE,"^",3)
"RTN","RGMTETOT",94,0)
 .....D DELDUP
"RTN","RGMTETOT",95,0)
 .....D SETTMP
"RTN","RGMTETOT",96,0)
 ....I OLDDT>EXCDT!(OLDDT=EXCDT) D
"RTN","RGMTETOT",97,0)
 .....S DA(1)=IEN,DA=IEN2
"RTN","RGMTETOT",98,0)
 .....D DELDUP
"RTN","RGMTETOT",99,0)
 I '$D(RGHLMQ) W !,DUPCNT," duplicate patient entries for POTENTIAL MATCH exceptions were identified"
"RTN","RGMTETOT",100,0)
 I '$D(RGHLMQ) W !,"and deleted from the CIRN HL7 EXCEPTION LOG file (#991.1)."
"RTN","RGMTETOT",101,0)
 ;
"RTN","RGMTETOT",102,0)
 K ^XTMP("RGMT","ETOT")
"RTN","RGMTETOT",103,0)
 S (RCNT,RGDFN)=0 N IEN,SUB
"RTN","RGMTETOT",104,0)
 F  S RGDFN=$O(^RGHL7(991.1,"ADFN",218,RGDFN)) Q:'RGDFN  D
"RTN","RGMTETOT",105,0)
 .;S ICN=+$$GETICN^MPIF001(RGDFN)
"RTN","RGMTETOT",106,0)
 .;I $E(ICN,1,3)=$P(HOME,"^",3)!(ICN<0) D
"RTN","RGMTETOT",107,0)
 .;**43 shouldn't check for locals or no ICN, check for processed/not processed
"RTN","RGMTETOT",108,0)
 .S IEN=0  F  S IEN=$O(^RGHL7(991.1,"ADFN",218,RGDFN,IEN)) Q:IEN=""  D
"RTN","RGMTETOT",109,0)
 ..S SUB=$O(^RGHL7(991.1,"ADFN",218,RGDFN,IEN,""))
"RTN","RGMTETOT",110,0)
 ..I $P($G(^RGHL7(991.1,IEN,1,SUB,0)),"^",5)=0 D
"RTN","RGMTETOT",111,0)
 ...S DFN=RGDFN D DEM^VADPT
"RTN","RGMTETOT",112,0)
 ...I VADM(1)=""!(VADM(2)="") Q
"RTN","RGMTETOT",113,0)
 ...S RCNT=RCNT+1
"RTN","RGMTETOT",114,0)
 ...S ^XTMP("RGMT","ETOT",VADM(1),RGDFN)=$P(VADM(2),"^")_"^"_$P(VADM(3),"^",2)
"RTN","RGMTETOT",115,0)
 ;
"RTN","RGMTETOT",116,0)
 ;count the number of patients who need to be resolved
"RTN","RGMTETOT",117,0)
 S PTNM="",CNT=0
"RTN","RGMTETOT",118,0)
 F  S PTNM=$O(^XTMP("RGMT","ETOT",PTNM)) Q:PTNM=""  D
"RTN","RGMTETOT",119,0)
 .S RGDFN=0
"RTN","RGMTETOT",120,0)
 .F  S RGDFN=$O(^XTMP("RGMT","ETOT",PTNM,RGDFN)) Q:'RGDFN  S CNT=CNT+1
"RTN","RGMTETOT",121,0)
 S TYPEARR(218)=CNT
"RTN","RGMTETOT",122,0)
 Q
"RTN","RGMTETOT",123,0)
 ;
"RTN","RGMTETOT",124,0)
SETTMP ;set TMP global for patient check
"RTN","RGMTETOT",125,0)
 S ^XTMP("RGMT","ETOT",RGDFN)=EXCDT_"^"_IEN_"^"_IEN2
"RTN","RGMTETOT",126,0)
 Q
"RTN","RGMTETOT",127,0)
 ;
"RTN","RGMTETOT",128,0)
DELDUP ;delete patient dups from file
"RTN","RGMTETOT",129,0)
 S DUPCNT=DUPCNT+1
"RTN","RGMTETOT",130,0)
 S DIK="^RGHL7(991.1,"_DA(1)_",1,"
"RTN","RGMTETOT",131,0)
 D ^DIK K DIK,DA
"RTN","RGMTETOT",132,0)
 Q
"RTN","RGMTETOT",133,0)
 ;
"RTN","RGMTETOT",134,0)
215 ;;(Death Entry on MPI not in VISTA)
"RTN","RGMTETOT",135,0)
216 ;;(Death Entry on Vista not in MPI)
"RTN","RGMTETOT",136,0)
217 ;;(Death Entries Mismatch)
"RTN","RGMTETOT",137,0)
218 ;;(Potential Matches Returned)
"RTN","RGMTETOT",138,0)
227 ;;(Multiple ICNs)
"RTN","RGMTETOT",139,0)
234 ;;(Primary View Reject)
"RTN","RGRSUTIL")
0^8^B14283785^B7937481
"RTN","RGRSUTIL",1,0)
RGRSUTIL ;ALB/RJS-MPI/PD UTILITIES ;03/12/96
"RTN","RGRSUTIL",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**1,3,19,45**;30 Apr 99;Build 9
"RTN","RGRSUTIL",3,0)
 ;
"RTN","RGRSUTIL",4,0)
EXCEPT ;Members of the RG CIRN DEMOGRAPHIC ISSUES Mail Group are
"RTN","RGRSUTIL",5,0)
 ;notified upon login if there are unresolved exceptions in
"RTN","RGRSUTIL",6,0)
 ;the MPI/PD Exception Handler or if there are Primary View
"RTN","RGRSUTIL",7,0)
 ;Reject exceptions for review.
"RTN","RGRSUTIL",8,0)
 ;
"RTN","RGRSUTIL",9,0)
 ;Is user a member of this mail group?
"RTN","RGRSUTIL",10,0)
 S RGCDI=$$FIND1^DIC(3.8,,,"RG CIRN DEMOGRAPHIC ISSUES")
"RTN","RGRSUTIL",11,0)
 I RGCDI="" G END
"RTN","RGRSUTIL",12,0)
 S XMDUZ=DUZ,Y=RGCDI D CHK^XMA21 I '$T G END
"RTN","RGRSUTIL",13,0)
 ;User is a member.
"RTN","RGRSUTIL",14,0)
 S RGNOTFY=$$CUREX^RGEX01()
"RTN","RGRSUTIL",15,0)
 I (RGNOTFY=1)!(RGNOTFY=3) D
"RTN","RGRSUTIL",16,0)
 .D SET^XUS1A("!  <<------------------------------------------------------------------------>>")
"RTN","RGRSUTIL",17,0)
 .D SET^XUS1A("!  << Use the MPI/PD Exception Handling option on the Message Exception      >>")
"RTN","RGRSUTIL",18,0)
 .D SET^XUS1A("!  << Menu to resolve exceptions.                                            >>")
"RTN","RGRSUTIL",19,0)
 .D SET^XUS1A("!  <<------------------------------------------------------------------------>>")
"RTN","RGRSUTIL",20,0)
 I (RGNOTFY=2)!(RGNOTFY=3) D
"RTN","RGRSUTIL",21,0)
 .D SET^XUS1A("!  <<------------------------------------------------------------------------>>")
"RTN","RGRSUTIL",22,0)
 .D SET^XUS1A("!  << You have Primary View Reject exceptions that need to be reviewed using >>")
"RTN","RGRSUTIL",23,0)
 .D SET^XUS1A("!  << the MPI/PD Exception Handling Option on the Message Exception Menu.    >>")
"RTN","RGRSUTIL",24,0)
 .D SET^XUS1A("!  <<------------------------------------------------------------------------>>")
"RTN","RGRSUTIL",25,0)
END K RGCDI,RGNOTFY,XMDUZ,Y
"RTN","RGRSUTIL",26,0)
 Q
"RTN","RGRSUTIL",27,0)
 ;
"RTN","RGRSUTIL",28,0)
SEG(SEGMENT,PIECE,CODE) ;Return segment from RGDC array and kill node
"RTN","RGRSUTIL",29,0)
 N RGNODE,RGDATA,RGDONE,RGC K RGDONE
"RTN","RGRSUTIL",30,0)
 I '$D(RGC) S RGC=$E(HL("ECH"))
"RTN","RGRSUTIL",31,0)
 S RGNODE=0
"RTN","RGRSUTIL",32,0)
 F  S RGNODE=$O(RGDC(RGNODE)) Q:RGNODE=""!($D(RGDONE))  D
"RTN","RGRSUTIL",33,0)
 .S RGDATA=RGDC(RGNODE)
"RTN","RGRSUTIL",34,0)
 .I ($P(RGDATA,HL("FS"),1)=SEGMENT)&($P($P(RGDATA,HL("FS"),PIECE),RGC,1)=CODE) S RGDONE=1 K RGDC(RGNODE)
"RTN","RGRSUTIL",35,0)
 Q:$D(RGDONE) $G(RGDATA)
"RTN","RGRSUTIL",36,0)
 Q ""
"RTN","RGRSUTIL",37,0)
SEG1(SEGMENT,PIECE,CODE) ;Return segment from RGDC array 
"RTN","RGRSUTIL",38,0)
 N RGNODE,RGDATA,RGDONE,RGC K RGDONE
"RTN","RGRSUTIL",39,0)
 I '$D(RGC) S RGC=$E(HL("ECH"))
"RTN","RGRSUTIL",40,0)
 S RGNODE=0
"RTN","RGRSUTIL",41,0)
 F  S RGNODE=$O(RGDC(RGNODE)) Q:RGNODE=""!($D(RGDONE))  D
"RTN","RGRSUTIL",42,0)
 .S RGDATA=RGDC(RGNODE)
"RTN","RGRSUTIL",43,0)
 .I ($P(RGDATA,HL("FS"),1)=SEGMENT)&($P($P(RGDATA,HL("FS"),PIECE),RGC,1)=CODE) S RGDONE=1
"RTN","RGRSUTIL",44,0)
 Q:$D(RGDONE) $G(RGDATA)
"RTN","RGRSUTIL",45,0)
 Q ""
"RTN","RGRSUTIL",46,0)
ERROR(CODE) ;**THIS ENTRY POINT IS NO LONGER USED**
"RTN","RGRSUTIL",47,0)
 Q ""
"RTN","RGRSUTIL",48,0)
INITIZE ;Initialize RGDC array with incoming message
"RTN","RGRSUTIL",49,0)
 N I,J,X
"RTN","RGRSUTIL",50,0)
 F I=1:1 X HLNEXT Q:HLQUIT'>0  S RGDC(I)=HLNODE,J=0  F  S J=$O(HLNODE(J)) Q:'J  S RGDC(I,J)=HLNODE(J)
"RTN","RGRSUTIL",51,0)
 Q
"RTN","RGRSUTIL",52,0)
SSNDFN(SSN) ;Input ssn output DFN
"RTN","RGRSUTIL",53,0)
 N DFN
"RTN","RGRSUTIL",54,0)
 Q:$G(SSN)="" -1
"RTN","RGRSUTIL",55,0)
 S DFN=$O(^DPT("SSN",+SSN,0))
"RTN","RGRSUTIL",56,0)
 Q:$L(DFN) DFN
"RTN","RGRSUTIL",57,0)
 S DFN=$O(^DPT("SSN",SSN,0))
"RTN","RGRSUTIL",58,0)
 Q:$L(DFN) DFN
"RTN","RGRSUTIL",59,0)
 Q -1
"RTN","RGRSUTIL",60,0)
 ;
"RTN","RGRSUTIL",61,0)
LINE() ; Return a dashed line.       
"RTN","RGRSUTIL",62,0)
 Q $TR($J("",80)," ","-")
"RTN","RGRSUTIL",63,0)
 ;
"RTN","RGRSUTIL",64,0)
PAUSE() ; Pause for CRT output.
"RTN","RGRSUTIL",65,0)
 ;  Input:   IOST, IOSL
"RTN","RGRSUTIL",66,0)
 ;  Output:  0  --  Continue to display output
"RTN","RGRSUTIL",67,0)
 ;           1  --  Quit
"RTN","RGRSUTIL",68,0)
 Q:$E(IOST,1,2)'["C-" 0
"RTN","RGRSUTIL",69,0)
 N DIR,DIRUT,DTOUT,DUOUT,RGJ
"RTN","RGRSUTIL",70,0)
 F RGJ=$Y:1:(IOSL-4) W !
"RTN","RGRSUTIL",71,0)
 S DIR(0)="E" D ^DIR
"RTN","RGRSUTIL",72,0)
 Q $D(DIRUT)!($D(DUOUT))
"RTN","RGRSUTIL",73,0)
 ;
"RTN","RGRSUTIL",74,0)
DIAG(X) ; Return a string for diagnoses.
"RTN","RGRSUTIL",75,0)
 ;  Input:   X  -  Code for type of diagnosis (Primary, etc.)
"RTN","RGRSUTIL",76,0)
 ;  Output:  Descriptive string, i.e., "Primary", etc.
"RTN","RGRSUTIL",77,0)
 Q $S($G(X)="":"Unknown",X="A":"Additional",X="P":"Primary",X="S":"Secondary",X="T":"Tertiary",1:"Unknown")
"RTN","RGRSUTIL",78,0)
 ;
"RTN","RGRSUTIL",79,0)
ORD(X) ; Return a string for orders.
"RTN","RGRSUTIL",80,0)
 ;  Input:   X  -  Code for type of order (Lab, etc.)
"RTN","RGRSUTIL",81,0)
 ;  Output:  Descriptive string, i.e., "Lab", etc.
"RTN","RGRSUTIL",82,0)
 Q $S($G(X)="":"Unknown",X="L":"Lab",X="R":"Radiology",1:"Unknown")
"RTN","RGRSUTIL",83,0)
 ;
"RTN","RGRSUTIL",84,0)
UPDTFLD(FILE,FLD,ANS1,ANS2) ; Returns the correct field answer
"RTN","RGRSUTIL",85,0)
 ;DLR - Added to prevent the overwriting the last four in ZIP with null
"RTN","RGRSUTIL",86,0)
 ; input:  FILE  - file number (ex. 2 PATIENT)
"RTN","RGRSUTIL",87,0)
 ;         FLD  -  field number (ex. .1112 ZIP+4)
"RTN","RGRSUTIL",88,0)
 ;         ANS1 -  existing field value
"RTN","RGRSUTIL",89,0)
 ;         ANS2 -  incoming value
"RTN","RGRSUTIL",90,0)
 I (FILE=2)&(FLD=.1112) I $E(ANS1,1,5)=$E(ANS2,1,5),($L(ANS2)=5) Q ANS1
"RTN","RGRSUTIL",91,0)
 Q ANS2
"RTN","RGRSUTIL",92,0)
 ;
"RTN","RGRSUTIL",93,0)
SSNINT(SSN) ;
"RTN","RGRSUTIL",94,0)
 Q:$G(SSN)="" ""
"RTN","RGRSUTIL",95,0)
 Q $TRANSLATE(SSN,"-","")
"RTN","RGRSUTIL",96,0)
 ;
"RTN","RGRSUTIL",97,0)
ACTION ;Entry action for Primary View Reject exceptions
"RTN","RGRSUTIL",98,0)
 I $O(^RGHL7(991.1,"ASTAT","0",234,0)) D
"RTN","RGRSUTIL",99,0)
 .W !!,"  <<------------------------------------------------------------------------>>"
"RTN","RGRSUTIL",100,0)
 .W !,"  << You have Primary View Reject exceptions that need to be reviewed using >>"
"RTN","RGRSUTIL",101,0)
 .W !,"  << the MPI/PD Exception Handling Option on the Message Exception Menu.    >>"
"RTN","RGRSUTIL",102,0)
 .W !,"  <<------------------------------------------------------------------------>>"
"RTN","RGRSUTIL",103,0)
 Q
"RTN","RGRSUTIL",104,0)
 ;
"RTN","RGSYSTAT")
0^7^B16892537^B16749126
"RTN","RGSYSTAT",1,0)
RGSYSTAT ;BAY/ALS-MPI/PD STATUS DISPLAY ;01/05/01
"RTN","RGSYSTAT",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**16,19,23,25,20,43,45**;30 Apr 99;Build 9
"RTN","RGSYSTAT",3,0)
 ;Reference to ^DGCN(391.98,"AST" supported by IA #3303
"RTN","RGSYSTAT",4,0)
 ;Reference to ^DGCN(391.984 supported by IA #3304
"RTN","RGSYSTAT",5,0)
 ;Reference to ^MPIF(984.9 supported by IA #3298
"RTN","RGSYSTAT",6,0)
 ;Reference to OPTSTAT^XUTMOPT supported by IA #1472
"RTN","RGSYSTAT",7,0)
 ;Reference to ^DPT("ACMORS", ^DPT("AICN", and ^DPT("AICNL" supported by IA #2070
"RTN","RGSYSTAT",8,0)
 ;Reference to ^VAT(391.71 supported by IA #3422
"RTN","RGSYSTAT",9,0)
EN ;
"RTN","RGSYSTAT",10,0)
 ; Count exceptions on hand
"RTN","RGSYSTAT",11,0)
EXC ;
"RTN","RGSYSTAT",12,0)
 W @IOF,"Exception Handler Entries:",!,"--------------------------"
"RTN","RGSYSTAT",13,0)
 S CNT=0,EXCTYP="",NTYP="",TOTL=0,PCNT=0
"RTN","RGSYSTAT",14,0)
 N STAT,DFN,ICN
"RTN","RGSYSTAT",15,0)
 S HOME=$$SITE^VASITE()
"RTN","RGSYSTAT",16,0)
 F  S EXCTYP=$O(^RGHL7(991.1,"AC",EXCTYP)) Q:'EXCTYP  D
"RTN","RGSYSTAT",17,0)
 . I (EXCTYP=234)!(EXCTYP=227)!((EXCTYP>214)&(EXCTYP<219)) D  ;**45
"RTN","RGSYSTAT",18,0)
 .. I (EXCTYP'=NTYP)&(CNT>0) D
"RTN","RGSYSTAT",19,0)
 ... S ETEXT=$P($G(^RGHL7(991.11,NTYP,10)),"^",1)
"RTN","RGSYSTAT",20,0)
 ... W !,$E(ETEXT,1,47),?55,$J(CNT,6) S TOTL=TOTL+CNT,CNT=0
"RTN","RGSYSTAT",21,0)
 .. S IEN=0,NTYP=EXCTYP
"RTN","RGSYSTAT",22,0)
 .. F  S IEN=$O(^RGHL7(991.1,"AC",EXCTYP,IEN)) Q:'IEN  D
"RTN","RGSYSTAT",23,0)
 ... S IEN2=0
"RTN","RGSYSTAT",24,0)
 ... F  S IEN2=$O(^RGHL7(991.1,"AC",EXCTYP,IEN,IEN2)) Q:'IEN2  D
"RTN","RGSYSTAT",25,0)
 .... S STAT=$P(^RGHL7(991.1,IEN,1,IEN2,0),"^",5) I STAT<1 D
"RTN","RGSYSTAT",26,0)
 ..... S DFN=$P(^RGHL7(991.1,IEN,1,IEN2,0),"^",4) Q:'DFN
"RTN","RGSYSTAT",27,0)
 ..... S ^XTMP("RGEXC",0)=$$FMADD^XLFDT(DT,2)_"^"_DT_"^"_"MPI/PD Status Display"
"RTN","RGSYSTAT",28,0)
 ..... S ^XTMP("RGEXC",DFN)=DFN
"RTN","RGSYSTAT",29,0)
 ..... S ICN=+$$GETICN^MPIF001(DFN)
"RTN","RGSYSTAT",30,0)
 ..... I $E(ICN,1,3)=$E($P(HOME,"^",3),1,3)!(ICN<0)!(EXCTYP=234)!((EXCTYP>214)&(EXCTYP<219)) D  ;**43,45
"RTN","RGSYSTAT",31,0)
 ...... S CNT=CNT+1
"RTN","RGSYSTAT",32,0)
 I CNT>0 D
"RTN","RGSYSTAT",33,0)
 .S ETEXT=$P($G(^RGHL7(991.11,NTYP,10)),"^",1)
"RTN","RGSYSTAT",34,0)
 .W !,$E(ETEXT,1,47),?55,$J(CNT,6) S TOTL=TOTL+CNT
"RTN","RGSYSTAT",35,0)
 I TOTL=0 W !,"There are no entries in the Exception Handler."
"RTN","RGSYSTAT",36,0)
 I TOTL>0 D
"RTN","RGSYSTAT",37,0)
 . W !!,"Total number of exceptions: ",?55,$J(TOTL,6)
"RTN","RGSYSTAT",38,0)
 . S PDFN=""
"RTN","RGSYSTAT",39,0)
 . F  S PDFN=$O(^XTMP("RGEXC",PDFN)) Q:'PDFN  D
"RTN","RGSYSTAT",40,0)
 .. S PCNT=PCNT+1
"RTN","RGSYSTAT",41,0)
 . W !,"Total unique patient exceptions: ",?55,$J(PCNT,6)
"RTN","RGSYSTAT",42,0)
 S STDT=$P($G(^RGSITE(991.8,1,"EXCPRG")),"^",1)
"RTN","RGSYSTAT",43,0)
 I $D(^RGSITE(991.8,1,"EXCPRG")) D
"RTN","RGSYSTAT",44,0)
 . S STDT=$$FMTE^XLFDT(STDT,1)
"RTN","RGSYSTAT",45,0)
 . W !!,"The MPI/PD Exception Purge process last ran "_STDT_"."
"RTN","RGSYSTAT",46,0)
 K CNT,EXCTYP,NTYP,ETEXT,TOTL,IEN,IEN2,HOME,PCNT,^XTMP("RGEXC"),PDFN,STDT
"RTN","RGSYSTAT",47,0)
 I $Y>21 D QUIT Q:X="^"
"RTN","RGSYSTAT",48,0)
PDR ;Count entries in Patient Data Review
"RTN","RGSYSTAT",49,0)
 W !!,"Patient Data Review Entries:",!,"----------------------------"
"RTN","RGSYSTAT",50,0)
 S CNT=0,PDRTYP="",NTYP="",TOTL=0
"RTN","RGSYSTAT",51,0)
 F  S PDRTYP=$O(^DGCN(391.98,"AST",PDRTYP)) Q:'PDRTYP  D
"RTN","RGSYSTAT",52,0)
 . I (PDRTYP'=NTYP)&(CNT>0) D
"RTN","RGSYSTAT",53,0)
 .. S DIC="^DGCN(391.984,",DR=".01",DA=NTYP,DIQ(0)="E",DIQ="RGPDR"
"RTN","RGSYSTAT",54,0)
 .. D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","RGSYSTAT",55,0)
 .. S PTEXT=$G(RGPDR(391.984,NTYP,.01,"E"))
"RTN","RGSYSTAT",56,0)
 .. W !,$E(PTEXT,1,47),?55,$J(CNT,6) S TOTL=TOTL+CNT,CNT=0
"RTN","RGSYSTAT",57,0)
 . I (PDRTYP=1)!(PDRTYP=2)!(PDRTYP=5) D
"RTN","RGSYSTAT",58,0)
 .. S IEN=0,NTYP=PDRTYP
"RTN","RGSYSTAT",59,0)
 .. F  S IEN=$O(^DGCN(391.98,"AST",PDRTYP,IEN)) Q:'IEN  D
"RTN","RGSYSTAT",60,0)
 ... S CNT=CNT+1
"RTN","RGSYSTAT",61,0)
 I CNT>0 D
"RTN","RGSYSTAT",62,0)
 . S DIC="^DGCN(391.984,",DR=".01",DA=NTYP,DIQ(0)="E",DIQ="RGPDR"
"RTN","RGSYSTAT",63,0)
 . D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","RGSYSTAT",64,0)
 . S PTEXT=$G(RGPDR(391.984,NTYP,.01,"E"))
"RTN","RGSYSTAT",65,0)
 .W !,$E(PTEXT,1,47),?55,$J(CNT,6) S TOTL=TOTL+CNT
"RTN","RGSYSTAT",66,0)
 I TOTL=0 W !,"There are no entries in Patient Data Review."
"RTN","RGSYSTAT",67,0)
 K CNT,PDRTYP,NTYP,TOTL,IEN,PTEXT,RGPDR
"RTN","RGSYSTAT",68,0)
 ;Q
"RTN","RGSYSTAT",69,0)
 I $Y>20 D QUIT Q:X="^"
"RTN","RGSYSTAT",70,0)
 ;
"RTN","RGSYSTAT",71,0)
CMOR ;CMOR Requests Status
"RTN","RGSYSTAT",72,0)
 W !!,"CMOR Requests Status:",!,"---------------------"
"RTN","RGSYSTAT",73,0)
 S CNT=0,STAT="",NSTAT="",TOTL=0
"RTN","RGSYSTAT",74,0)
 F  S STAT=$O(^MPIF(984.9,"AC",STAT)) Q:'STAT  D
"RTN","RGSYSTAT",75,0)
 . I (STAT'=NSTAT)&(CNT>0) D
"RTN","RGSYSTAT",76,0)
 .. S TEXT=$$EXTERNAL^DILFD(984.9,.06,,NSTAT)
"RTN","RGSYSTAT",77,0)
 .. W !,$E(TEXT,1,47),?55,$J(CNT,6) S TOTL=TOTL+CNT,CNT=0
"RTN","RGSYSTAT",78,0)
 . S IEN=0,NSTAT=STAT
"RTN","RGSYSTAT",79,0)
 . F  S IEN=$O(^MPIF(984.9,"AC",STAT,IEN)) Q:'IEN  D
"RTN","RGSYSTAT",80,0)
 .. S CNT=CNT+1 S TOTL=TOTL+CNT
"RTN","RGSYSTAT",81,0)
 I CNT>0 S TEXT=$$EXTERNAL^DILFD(984.9,.06,,NSTAT) W !,$E(TEXT,1,47),?55,$J(CNT,6) S TOTL=TOTL+CNT,CNT=0
"RTN","RGSYSTAT",82,0)
 I TOTL=0 W !,"There are no outstanding CMOR Requests."
"RTN","RGSYSTAT",83,0)
 K CNT,STAT,NSTAT,TEXT,TOTL,IEN
"RTN","RGSYSTAT",84,0)
 I $Y>20 D QUIT Q:X="^"
"RTN","RGSYSTAT",85,0)
 ;
"RTN","RGSYSTAT",86,0)
 S HOME=$P($$SITE^VASITE(),"^",3)
"RTN","RGSYSTAT",87,0)
 S ICN=0,CNT=0
"RTN","RGSYSTAT",88,0)
 F  S ICN=$O(^DPT("AICN",ICN)) Q:'ICN  D
"RTN","RGSYSTAT",89,0)
 .Q:$E(ICN,1,3)=HOME
"RTN","RGSYSTAT",90,0)
 .S CNT=CNT+1
"RTN","RGSYSTAT",91,0)
 W !,"Current total number of National ICNs = ",CNT
"RTN","RGSYSTAT",92,0)
 S ICN=0,CNT=0
"RTN","RGSYSTAT",93,0)
 F  S ICN=$O(^DPT("AICNL",1,ICN)) Q:'ICN  S CNT=CNT+1
"RTN","RGSYSTAT",94,0)
 W !,"Current total number of Local ICNs = ",CNT
"RTN","RGSYSTAT",95,0)
 K CNT,DFN,ICN
"RTN","RGSYSTAT",96,0)
 Q
"RTN","RGSYSTAT",97,0)
QUIT S DIR(0)="E" D  D ^DIR K DIR
"RTN","RGSYSTAT",98,0)
 .S SS=21-$Y F JJ=1:1:SS W !
"RTN","RGSYSTAT",99,0)
 S $Y=0
"RTN","RGSYSTAT",100,0)
 K JJ,SS
"RTN","RGSYSTAT",101,0)
 Q
"SEC","^DIC",991.11,991.11,0,"AUDIT")
@
"SEC","^DIC",991.11,991.11,0,"DD")
@
"SEC","^DIC",991.11,991.11,0,"DEL")
@
"SEC","^DIC",991.11,991.11,0,"LAYGO")
@
"SEC","^DIC",991.11,991.11,0,"RD")
@
"SEC","^DIC",991.11,991.11,0,"WR")
@
"VER")
8.0^22.0
"^DD",991.11,991.11,0)
FIELD^^99^8
"^DD",991.11,991.11,0,"DDA")
N
"^DD",991.11,991.11,0,"DT")
3001127
"^DD",991.11,991.11,0,"ID",10)
W:$D(^(10)) "   ",$E(^(10),1,100)
"^DD",991.11,991.11,0,"IX","B",991.11,.01)
 
"^DD",991.11,991.11,0,"IX","C",991.11,10)
 
"^DD",991.11,991.11,0,"NM","CIRN HL7 EXCEPTION TYPE")
 
"^DD",991.11,991.11,0,"PT",991.12,2)
 
"^DD",991.11,991.11,0,"VRPK")
RG
"^DD",991.11,991.11,.01,0)
NUMBER^RNJ12,0X^^0;1^K:X'=X\1!(X<1) X S:$D(X) DINUM=X
"^DD",991.11,991.11,.01,1,0)
^.1
"^DD",991.11,991.11,.01,1,1,0)
991.11^B
"^DD",991.11,991.11,.01,1,1,1)
S ^RGHL7(991.11,"B",$E(X,1,30),DA)=""
"^DD",991.11,991.11,.01,1,1,2)
K ^RGHL7(991.11,"B",$E(X,1,30),DA)
"^DD",991.11,991.11,.01,3)
Index of this exception.
"^DD",991.11,991.11,.01,21,0)
^^1^1^2990308^^
"^DD",991.11,991.11,.01,21,1,0)
This is the index number of this exception.
"^DD",991.11,991.11,.01,"DT")
2970201
"^DD",991.11,991.11,1,0)
SEVERITY^S^0:INFORMATIONAL;1:MINOR;2:SEVERE;^0;2^Q
"^DD",991.11,991.11,1,3)
Severity level of this exception.
"^DD",991.11,991.11,1,21,0)
^^2^2^2990308^^
"^DD",991.11,991.11,1,21,1,0)
This is the severity level of this exception, '0' for Informational,
"^DD",991.11,991.11,1,21,2,0)
'1' for Minor or '2' for Severe.
"^DD",991.11,991.11,1,"DT")
2970201
"^DD",991.11,991.11,2,0)
ACTION^S^0:NONE;1:MAIL;2:ALERT;3:MPI EXCEPTION HANDLER;^0;3^Q
"^DD",991.11,991.11,2,3)
Action to be taken upon logging this exception.
"^DD",991.11,991.11,2,21,0)
^^5^5^3001127^^^
"^DD",991.11,991.11,2,21,1,0)
This is the action to be taken upon logging this exception,
"^DD",991.11,991.11,2,21,2,0)
'0' for None, '1' for Mail, '2' for Alert, or '3' for MPI
"^DD",991.11,991.11,2,21,3,0)
Exception Handler. Exceptions whose action is MPI Exception
"^DD",991.11,991.11,2,21,4,0)
Handler go to the exception handler located at the Austin
"^DD",991.11,991.11,2,21,5,0)
MPI.
"^DD",991.11,991.11,2,"DT")
3001127
"^DD",991.11,991.11,3,0)
COUNT^NJ12,0X^^0;5^K:X\1'=X!(X<0) X
"^DD",991.11,991.11,3,3)
Total number of exceptions logged with this type.
"^DD",991.11,991.11,3,21,0)
^^1^1^2990308^^
"^DD",991.11,991.11,3,21,1,0)
This is a count of all exceptions logged of this type.
"^DD",991.11,991.11,3,"DT")
2970317
"^DD",991.11,991.11,6,0)
MAIL GROUP^P3.8'^XMB(3.8,^0;4^Q
"^DD",991.11,991.11,6,3)
Mail group to which notification will be sent for alert and mail action types.
"^DD",991.11,991.11,6,21,0)
^^3^3^2990308^^
"^DD",991.11,991.11,6,21,1,0)
This is a pointer to the MAIL GROUP file (#3.8), indicating
"^DD",991.11,991.11,6,21,2,0)
which mail group a notification will be sent to for alert
"^DD",991.11,991.11,6,21,3,0)
and mail action types.
"^DD",991.11,991.11,6,"DT")
2970201
"^DD",991.11,991.11,10,0)
TEXT^F^^10;E1,100^K:$L(X)>100!($L(X)<1) X
"^DD",991.11,991.11,10,1,0)
^.1
"^DD",991.11,991.11,10,1,1,0)
991.11^C
"^DD",991.11,991.11,10,1,1,1)
S ^RGHL7(991.11,"C",$E(X,1,30),DA)=""
"^DD",991.11,991.11,10,1,1,2)
K ^RGHL7(991.11,"C",$E(X,1,30),DA)
"^DD",991.11,991.11,10,1,1,"DT")
2970201
"^DD",991.11,991.11,10,3)
Text message for this exception.
"^DD",991.11,991.11,10,21,0)
^^2^2^2990308^^
"^DD",991.11,991.11,10,21,1,0)
This is a free text field (up to 100 characters) which holds the
"^DD",991.11,991.11,10,21,2,0)
message for this exception.
"^DD",991.11,991.11,10,"DT")
2970201
"^DD",991.11,991.11,20,0)
SECURITY KEY^991.112P^^20;0
"^DD",991.11,991.11,20,21,0)
^^4^4^2990308^^^
"^DD",991.11,991.11,20,21,1,0)
This is used to control access to a particular exception type. 
"^DD",991.11,991.11,20,21,2,0)
A user must possess at least one of the listed security keys to 
"^DD",991.11,991.11,20,21,3,0)
access the associated exception.  If no security keys are listed, 
"^DD",991.11,991.11,20,21,4,0)
access is unrestricted.
"^DD",991.11,991.11,99,0)
DESCRIPTION^991.1199^^99;0
"^DD",991.11,991.11,99,21,0)
^^2^2^2990308^^^
"^DD",991.11,991.11,99,21,1,0)
This is a word-processing field used for storing
"^DD",991.11,991.11,99,21,2,0)
the detailed explanation of this exception type.
"^DD",991.11,991.112,0)
SECURITY KEY SUB-FIELD^^.01^1
"^DD",991.11,991.112,0,"DT")
2980721
"^DD",991.11,991.112,0,"IX","B",991.112,.01)
 
"^DD",991.11,991.112,0,"NM","SECURITY KEY")
 
"^DD",991.11,991.112,0,"UP")
991.11
"^DD",991.11,991.112,.01,0)
SECURITY KEY^MP19.1'X^DIC(19.1,^0;1^S DINUM=X
"^DD",991.11,991.112,.01,1,0)
^.1
"^DD",991.11,991.112,.01,1,1,0)
991.112^B
"^DD",991.11,991.112,.01,1,1,1)
S ^RGHL7(991.11,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",991.11,991.112,.01,1,1,2)
K ^RGHL7(991.11,DA(1),20,"B",$E(X,1,30),DA)
"^DD",991.11,991.112,.01,3)
Enter a security key to control access to this exception.
"^DD",991.11,991.112,.01,21,0)
^^4^4^2990308^^
"^DD",991.11,991.112,.01,21,1,0)
This is used to control access to a particular exception type. 
"^DD",991.11,991.112,.01,21,2,0)
A user must possess at least one of the listed security keys to 
"^DD",991.11,991.112,.01,21,3,0)
access the associated exception.  If no security keys are listed, 
"^DD",991.11,991.112,.01,21,4,0)
access is unrestricted.
"^DD",991.11,991.112,.01,"DT")
2980721
"^DD",991.11,991.1199,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",991.11,991.1199,0,"DT")
2970201
"^DD",991.11,991.1199,0,"NM","DESCRIPTION")
 
"^DD",991.11,991.1199,0,"UP")
991.11
"^DD",991.11,991.1199,.01,0)
DESCRIPTION^WL^^0;1^Q
"^DD",991.11,991.1199,.01,3)
Detailed explanation of this exception.
"^DD",991.11,991.1199,.01,21,0)
^^1^1^2990308^^^
"^DD",991.11,991.1199,.01,21,1,0)
This field holds the detailed explanation of this exception.
"^DD",991.11,991.1199,.01,"DT")
2970201
"^DIC",991.11,991.11,0)
CIRN HL7 EXCEPTION TYPE^991.11
"^DIC",991.11,991.11,0,"GL")
^RGHL7(991.11,
"^DIC",991.11,991.11,"%D",0)
^^3^3^2990308^^
"^DIC",991.11,991.11,"%D",1,0)
This file holds the CIRN HL7 exception types.  It is pointed to by
"^DIC",991.11,991.11,"%D",2,0)
the TYPE field (#2) for the EXCEPTION subfield (#991.12) of the CIRN
"^DIC",991.11,991.11,"%D",3,0)
HL7 EXCEPTION LOG file (#991.1).
"^DIC",991.11,"B","CIRN HL7 EXCEPTION TYPE",991.11)
 
"BLD",2349,6)
^45
**END**
**END**
