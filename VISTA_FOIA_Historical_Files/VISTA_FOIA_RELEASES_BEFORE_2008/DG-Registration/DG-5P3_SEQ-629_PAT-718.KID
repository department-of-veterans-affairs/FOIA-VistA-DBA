Released DG*5.3*718 SEQ #629
Extracted from mail message
**KIDS**:DG*5.3*718^

**INSTALL NAME**
DG*5.3*718
"BLD",6152,0)
DG*5.3*718^REGISTRATION^0^3060712^y
"BLD",6152,1,0)
^^2^2^3060615^
"BLD",6152,1,1,0)
Please refer to patch DG*5.3*718 in the National Patch Module for a
"BLD",6152,1,2,0)
complete description of this patch.
"BLD",6152,4,0)
^9.64PA^^
"BLD",6152,"INIT")

"BLD",6152,"KRN",0)
^9.67PA^8989.52^19
"BLD",6152,"KRN",.4,0)
.4
"BLD",6152,"KRN",.401,0)
.401
"BLD",6152,"KRN",.402,0)
.402
"BLD",6152,"KRN",.403,0)
.403
"BLD",6152,"KRN",.5,0)
.5
"BLD",6152,"KRN",.84,0)
.84
"BLD",6152,"KRN",.84,"NM",0)
^9.68A^23^23
"BLD",6152,"KRN",.84,"NM",1,0)
261110^^0
"BLD",6152,"KRN",.84,"NM",2,0)
261111^^0
"BLD",6152,"KRN",.84,"NM",3,0)
261112^^0
"BLD",6152,"KRN",.84,"NM",4,0)
261113^^0
"BLD",6152,"KRN",.84,"NM",5,0)
261114^^0
"BLD",6152,"KRN",.84,"NM",6,0)
261115^^0
"BLD",6152,"KRN",.84,"NM",7,0)
261116^^0
"BLD",6152,"KRN",.84,"NM",8,0)
261117^^0
"BLD",6152,"KRN",.84,"NM",9,0)
261118^^0
"BLD",6152,"KRN",.84,"NM",10,0)
261119^^0
"BLD",6152,"KRN",.84,"NM",11,0)
261120^^0
"BLD",6152,"KRN",.84,"NM",12,0)
261121^^0
"BLD",6152,"KRN",.84,"NM",13,0)
261122^^0
"BLD",6152,"KRN",.84,"NM",14,0)
261123^^0
"BLD",6152,"KRN",.84,"NM",15,0)
261124^^0
"BLD",6152,"KRN",.84,"NM",16,0)
261125^^0
"BLD",6152,"KRN",.84,"NM",17,0)
261126^^0
"BLD",6152,"KRN",.84,"NM",18,0)
261127^^0
"BLD",6152,"KRN",.84,"NM",19,0)
261128^^0
"BLD",6152,"KRN",.84,"NM",20,0)
261129^^0
"BLD",6152,"KRN",.84,"NM",21,0)
261130^^0
"BLD",6152,"KRN",.84,"NM",22,0)
261131^^0
"BLD",6152,"KRN",.84,"NM",23,0)
261132^^0
"BLD",6152,"KRN",.84,"NM","B",261110,1)

"BLD",6152,"KRN",.84,"NM","B",261111,2)

"BLD",6152,"KRN",.84,"NM","B",261112,3)

"BLD",6152,"KRN",.84,"NM","B",261113,4)

"BLD",6152,"KRN",.84,"NM","B",261114,5)

"BLD",6152,"KRN",.84,"NM","B",261115,6)

"BLD",6152,"KRN",.84,"NM","B",261116,7)

"BLD",6152,"KRN",.84,"NM","B",261117,8)

"BLD",6152,"KRN",.84,"NM","B",261118,9)

"BLD",6152,"KRN",.84,"NM","B",261119,10)

"BLD",6152,"KRN",.84,"NM","B",261120,11)

"BLD",6152,"KRN",.84,"NM","B",261121,12)

"BLD",6152,"KRN",.84,"NM","B",261122,13)

"BLD",6152,"KRN",.84,"NM","B",261123,14)

"BLD",6152,"KRN",.84,"NM","B",261124,15)

"BLD",6152,"KRN",.84,"NM","B",261125,16)

"BLD",6152,"KRN",.84,"NM","B",261126,17)

"BLD",6152,"KRN",.84,"NM","B",261127,18)

"BLD",6152,"KRN",.84,"NM","B",261128,19)

"BLD",6152,"KRN",.84,"NM","B",261129,20)

"BLD",6152,"KRN",.84,"NM","B",261130,21)

"BLD",6152,"KRN",.84,"NM","B",261131,22)

"BLD",6152,"KRN",.84,"NM","B",261132,23)

"BLD",6152,"KRN",3.6,0)
3.6
"BLD",6152,"KRN",3.8,0)
3.8
"BLD",6152,"KRN",9.2,0)
9.2
"BLD",6152,"KRN",9.8,0)
9.8
"BLD",6152,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",6152,"KRN",9.8,"NM",1,0)
DGPFHLU^^0^B27262143
"BLD",6152,"KRN",9.8,"NM",2,0)
DGPFHLU5^^0^B59520478
"BLD",6152,"KRN",9.8,"NM","B","DGPFHLU",1)

"BLD",6152,"KRN",9.8,"NM","B","DGPFHLU5",2)

"BLD",6152,"KRN",19,0)
19
"BLD",6152,"KRN",19.1,0)
19.1
"BLD",6152,"KRN",101,0)
101
"BLD",6152,"KRN",409.61,0)
409.61
"BLD",6152,"KRN",771,0)
771
"BLD",6152,"KRN",870,0)
870
"BLD",6152,"KRN",8989.51,0)
8989.51
"BLD",6152,"KRN",8989.52,0)
8989.52
"BLD",6152,"KRN",8994,0)
8994
"BLD",6152,"KRN","B",.4,.4)

"BLD",6152,"KRN","B",.401,.401)

"BLD",6152,"KRN","B",.402,.402)

"BLD",6152,"KRN","B",.403,.403)

"BLD",6152,"KRN","B",.5,.5)

"BLD",6152,"KRN","B",.84,.84)

"BLD",6152,"KRN","B",3.6,3.6)

"BLD",6152,"KRN","B",3.8,3.8)

"BLD",6152,"KRN","B",9.2,9.2)

"BLD",6152,"KRN","B",9.8,9.8)

"BLD",6152,"KRN","B",19,19)

"BLD",6152,"KRN","B",19.1,19.1)

"BLD",6152,"KRN","B",101,101)

"BLD",6152,"KRN","B",409.61,409.61)

"BLD",6152,"KRN","B",771,771)

"BLD",6152,"KRN","B",870,870)

"BLD",6152,"KRN","B",8989.51,8989.51)

"BLD",6152,"KRN","B",8989.52,8989.52)

"BLD",6152,"KRN","B",8994,8994)

"BLD",6152,"PRE")

"BLD",6152,"QUES",0)
^9.62^^
"BLD",6152,"REQB",0)
^9.611^1^1
"BLD",6152,"REQB",1,0)
DG*5.3*425^2
"BLD",6152,"REQB","B","DG*5.3*425",1)

"KRN",.84,261110,-1)
0^1
"KRN",.84,261110,0)
261110^1^^REGISTRATION^Invalid Patient
"KRN",.84,261110,1,0)
^^2^2^3050317^
"KRN",.84,261110,1,1,0)
Error returned if patient does not correspond to an entry in the Patient 
"KRN",.84,261110,1,2,0)
(#2) file.
"KRN",.84,261110,2,0)
^.844^1^1^3050317^^
"KRN",.84,261110,2,1,0)
Patient is invalid
"KRN",.84,261111,-1)
0^2
"KRN",.84,261111,0)
261111^1^^REGISTRATION^Invalid Record flag
"KRN",.84,261111,1,0)
^^2^2^3050317^
"KRN",.84,261111,1,1,0)
Error reported when the FLAG NAME value does not match the field
"KRN",.84,261111,1,2,0)
definition.
"KRN",.84,261111,2,0)
^.844^1^1^3050317^^
"KRN",.84,261111,2,1,0)
Record flag is invalid
"KRN",.84,261112,-1)
0^3
"KRN",.84,261112,0)
261112^1^^REGISTRATION^Flag Already Assigned
"KRN",.84,261112,1,0)
^.842^2^2^3050318^^
"KRN",.84,261112,1,1,0)
This error is reported when a record flag has already been assigned to a 
"KRN",.84,261112,1,2,0)
patient.
"KRN",.84,261112,2,0)
^^1^1^3050318^
"KRN",.84,261112,2,1,0)
Record flag is already assigned to patient
"KRN",.84,261113,-1)
0^4
"KRN",.84,261113,0)
261113^1^^REGISTRATION^Flag Status Inactive
"KRN",.84,261113,1,0)
^.842^1^1^3050318^^
"KRN",.84,261113,1,1,0)
This error is reported when a record flag has a STATUS of 'INACTIVE'.
"KRN",.84,261113,2,0)
^.844^1^1^3050318^^
"KRN",.84,261113,2,1,0)
Record flag status is 'Inactive'
"KRN",.84,261114,-1)
0^5
"KRN",.84,261114,0)
261114^1^^REGISTRATION^Missing Progress Note Title
"KRN",.84,261114,1,0)
^^2^2^3050318^
"KRN",.84,261114,1,1,0)
This error is reported when a record flag is not associated with a TIU 
"KRN",.84,261114,1,2,0)
Progress Note Title.
"KRN",.84,261114,2,0)
^^1^1^3050318^
"KRN",.84,261114,2,1,0)
Record flag is missing a Progress Note Title
"KRN",.84,261115,-1)
0^6
"KRN",.84,261115,0)
261115^1^^REGISTRATION^Not Assignment Owner
"KRN",.84,261115,1,0)
^^3^3^3050318^
"KRN",.84,261115,1,1,0)
This error is reported when an edit of a record flag assignment is 
"KRN",.84,261115,1,2,0)
attempted by a facility that is not designated as the 'owner' of the 
"KRN",.84,261115,1,3,0)
assignment.
"KRN",.84,261115,2,0)
^^1^1^3050318^
"KRN",.84,261115,2,1,0)
Not the owner site
"KRN",.84,261116,-1)
0^7
"KRN",.84,261116,0)
261116^1^^REGISTRATION^Sending Facility Not Owner
"KRN",.84,261116,1,0)
^.842^3^3^3050318^^^
"KRN",.84,261116,1,1,0)
This error is reported when a facility attempts to share an assignment 
"KRN",.84,261116,1,2,0)
through the HL7 interface and it is not the parent of the assignment
"KRN",.84,261116,1,3,0)
owner.
"KRN",.84,261116,2,0)
^.844^1^1^3050318^^^
"KRN",.84,261116,2,1,0)
Sending facility is not the owner of the assignment
"KRN",.84,261117,-1)
0^8
"KRN",.84,261117,0)
261117^1^^REGISTRATION^Assignment Status Inactive
"KRN",.84,261117,1,0)
^.842^2^2^3050318^^^
"KRN",.84,261117,1,1,0)
This error is reported when an attempt is made to change ownership of an 
"KRN",.84,261117,1,2,0)
assignment that has a STATUS of 'INACTIVE'.
"KRN",.84,261117,2,0)
^.844^1^1^3050318^^^
"KRN",.84,261117,2,1,0)
Record flag assignment status is 'Inactive'
"KRN",.84,261118,-1)
0^9
"KRN",.84,261118,0)
261118^1^^REGISTRATION^Invalid Assignment History Action
"KRN",.84,261118,1,0)
^^3^3^3050318^
"KRN",.84,261118,1,1,0)
This error is reported when the record flag assignment history ACTION 
"KRN",.84,261118,1,2,0)
value does not match the ACTION field definition of the ACTION (#.03) 
"KRN",.84,261118,1,3,0)
field in the PRF ASSIGNMENT HISTORY (#26.14) file.
"KRN",.84,261118,2,0)
^^1^1^3050318^
"KRN",.84,261118,2,1,0)
Record flag assignment history action is invalid
"KRN",.84,261119,-1)
0^10
"KRN",.84,261119,0)
261119^1^^REGISTRATION^Assignment History Filer Error
"KRN",.84,261119,1,0)
^^2^2^3050411^
"KRN",.84,261119,1,1,0)
This error is reported when an attempt to file a patient 
"KRN",.84,261119,1,2,0)
record flag assignment history fails.
"KRN",.84,261119,2,0)
^.844^1^1^3050411^^^
"KRN",.84,261119,2,1,0)
Unable to file record flag assignment history
"KRN",.84,261120,-1)
0^11
"KRN",.84,261120,0)
261120^1^^REGISTRATION^Assignment Filer Error
"KRN",.84,261120,1,0)
^^2^2^3050411^
"KRN",.84,261120,1,1,0)
This error is reported when an attempt to file a patient record 
"KRN",.84,261120,1,2,0)
flag assignment fails.
"KRN",.84,261120,2,0)
^.844^1^1^3050411^^^
"KRN",.84,261120,2,1,0)
Unable to file record flag assignment
"KRN",.84,261121,-1)
0^12
"KRN",.84,261121,0)
261121^1^^REGISTRATION^Action Continue
"KRN",.84,261121,1,0)
^^3^3^3050324^
"KRN",.84,261121,1,1,0)
This error is reported when an attempt is made to update a patient's 
"KRN",.84,261121,1,2,0)
current record flag assignment having a STATUS of 'INACTIVE' with an 
"KRN",.84,261121,1,3,0)
assignment having an ACTION of 'Continue'.
"KRN",.84,261121,2,0)
^^1^1^3050324^
"KRN",.84,261121,2,1,0)
Unable to 'Continue' an 'Inactive' assignment
"KRN",.84,261122,-1)
0^13
"KRN",.84,261122,0)
261122^1^^REGISTRATION^Action Inactivate
"KRN",.84,261122,1,0)
^^3^3^3050324^
"KRN",.84,261122,1,1,0)
This error is reported when an attempt is made to update a patient's 
"KRN",.84,261122,1,2,0)
current record flag assignment having a STATUS of 'INACTIVE' with an 
"KRN",.84,261122,1,3,0)
assignment having an ACTION of 'Inactivate'.
"KRN",.84,261122,2,0)
^^1^1^3050324^
"KRN",.84,261122,2,1,0)
Unable to 'Inactivate' an 'Inactive' assignment
"KRN",.84,261123,-1)
0^14
"KRN",.84,261123,0)
261123^1^^REGISTRATION^Action Entered In Error
"KRN",.84,261123,1,0)
^^3^3^3050324^
"KRN",.84,261123,1,1,0)
This error is reported when an attempt is made to update a patient's 
"KRN",.84,261123,1,2,0)
current record flag assignment having a STATUS of 'INACTIVE' with an 
"KRN",.84,261123,1,3,0)
assignment having an ACTION of 'Entered In Error'.
"KRN",.84,261123,2,0)
^^1^1^3050324^
"KRN",.84,261123,2,1,0)
Unable to 'Entered In Error' an 'Inactive' assignment
"KRN",.84,261124,-1)
0^15
"KRN",.84,261124,0)
261124^1^^REGISTRATION^Action Reactivate
"KRN",.84,261124,1,0)
^^3^3^3050324^
"KRN",.84,261124,1,1,0)
This error is reported when an attempt is made to update a patient's 
"KRN",.84,261124,1,2,0)
current record flag assignment having a STATUS of 'INACTIVE' with an 
"KRN",.84,261124,1,3,0)
assignment having an ACTION of 'Reactivate'.
"KRN",.84,261124,2,0)
^^1^1^3050324^
"KRN",.84,261124,2,1,0)
Unable to 'Reactivate' an 'Inactive' assignment
"KRN",.84,261125,-1)
0^16
"KRN",.84,261125,0)
261125^1^^REGISTRATION^Invalid Originating Site
"KRN",.84,261125,1,0)
^.842^2^2^3050330^^
"KRN",.84,261125,1,1,0)
Error reported when the Originating Site is not a valid entry in the 
"KRN",.84,261125,1,2,0)
INSTITUTION (#4) file.
"KRN",.84,261125,2,0)
^.844^1^1^3050330^^
"KRN",.84,261125,2,1,0)
Originating Site is invalid
"KRN",.84,261125,5,0)
^.841^1^1
"KRN",.84,261125,5,1,0)
DGPFHLU^OBR
"KRN",.84,261125,5,"B","DGPFHLU",1)

"KRN",.84,261126,-1)
0^17
"KRN",.84,261126,0)
261126^1^^REGISTRATION^Invalid Owner Site
"KRN",.84,261126,1,0)
^.842^2^2^3050330^^
"KRN",.84,261126,1,1,0)
Error reported when the Owner Site is not a valid entry in the 
"KRN",.84,261126,1,2,0)
INSTITUTION (#4) file.
"KRN",.84,261126,2,0)
^.844^1^1^3050330^^
"KRN",.84,261126,2,1,0)
Owner Site is invalid
"KRN",.84,261126,5,0)
^.841^1^1
"KRN",.84,261126,5,1,0)
DGPFHLU^OBR
"KRN",.84,261126,5,"B","DGPFHLU",1)

"KRN",.84,261127,-1)
0^18
"KRN",.84,261127,0)
261127^1^^REGISTRATION^No Patient Found For ICN
"KRN",.84,261127,1,0)
^^2^2^3050331^
"KRN",.84,261127,1,1,0)
Error reported when a patient's Integration Control number (ICN) sent in
"KRN",.84,261127,1,2,0)
an HL7 message does not match the patient's ICN at the receiving facility.
"KRN",.84,261127,2,0)
^^3^3^3050817^
"KRN",.84,261127,2,1,0)
The receiving facility did not find a patient corresponding with this
"KRN",.84,261127,2,2,0)
Integration Control Number (ICN).  Verify patient and coordinate with
"KRN",.84,261127,2,3,0)
receiving site if necessary.
"KRN",.84,261127,5,0)
^.841^1^1
"KRN",.84,261127,5,1,0)
DGPFUT2^GETDFN
"KRN",.84,261127,5,"B","DGPFUT2",1)

"KRN",.84,261128,-1)
0^19
"KRN",.84,261128,0)
261128^1^^REGISTRATION^Security Key Required
"KRN",.84,261128,1,0)
^.842^3^3^3050405^^
"KRN",.84,261128,1,1,0)
This error will be reported when a user does not have the appropriate 
"KRN",.84,261128,1,2,0)
SECURITY KEY assigned to access a specific option or protocol action 
"KRN",.84,261128,1,3,0)
within the Patient Record Flag module.
"KRN",.84,261128,2,0)
^^1^1^3050405^
"KRN",.84,261128,2,1,0)
Access Denied: User does not hold the required security key.
"KRN",.84,261129,-1)
0^20
"KRN",.84,261129,0)
261129^1^y^REGISTRATION^Action Not Permitted
"KRN",.84,261129,1,0)
^.842^2^2^3050405^^^^
"KRN",.84,261129,1,1,0)
This error is reported when a user attempts to select a protocol action 
"KRN",.84,261129,1,2,0)
within List Manager that is not appropriate.
"KRN",.84,261129,2,0)
^^1^1^3050405^
"KRN",.84,261129,2,1,0)
Action Not Permitted: |1|
"KRN",.84,261129,3,0)
^.845^1^1
"KRN",.84,261129,3,1,0)
1^Reason why action is not permitted (i.e. Patient not selected).
"KRN",.84,261130,-1)
0^21
"KRN",.84,261130,0)
261130^1^^REGISTRATION^Assignment retrieval failed
"KRN",.84,261130,1,0)
^.842^2^2^3050411^^
"KRN",.84,261130,1,1,0)
This error is reported when an HL7 query is unable to retrieve existing 
"KRN",.84,261130,1,2,0)
PRF assignment data for a patient.
"KRN",.84,261130,2,0)
^.844^1^1^3050411^^
"KRN",.84,261130,2,1,0)
Unable to retrieve existing PRF assignment(s)
"KRN",.84,261130,5,0)
^.841^1^1
"KRN",.84,261130,5,1,0)
DGPFHLQ^BLDORF
"KRN",.84,261130,5,"B","DGPFHLQ",1)

"KRN",.84,261131,-1)
0^22
"KRN",.84,261131,0)
261131^1^^REGISTRATION^Medical Center Division Indicator
"KRN",.84,261131,1,0)
^.842^2^2^3050616^^
"KRN",.84,261131,1,1,0)
This error is reported when a medical center division record can't be
"KRN",.84,261131,1,2,0)
enabled or disabled as a patient record flag assignment owner.
"KRN",.84,261131,2,0)
^.844^1^1^3050616^^
"KRN",.84,261131,2,1,0)
Medical center division was not updated
"KRN",.84,261131,3,0)
^.845^^0
"KRN",.84,261131,5,0)
^.841^1^1
"KRN",.84,261131,5,1,0)
DGPFDIV^SET
"KRN",.84,261131,5,"B","DGPFDIV",1)

"KRN",.84,261132,-1)
0^23
"KRN",.84,261132,0)
261132^1^^REGISTRATION^Patient has local ICN
"KRN",.84,261132,1,0)
^^3^3^3050519^
"KRN",.84,261132,1,1,0)
This dialog is returned when the patient has a local ICN, which prevents 
"KRN",.84,261132,1,2,0)
assignment of a Category I Patient Record Flag.  The content of the 
"KRN",.84,261132,1,3,0)
dialog was created and approved by the Patient Record Flag stakeholders.
"KRN",.84,261132,2,0)
^^6^6^3050818^
"KRN",.84,261132,2,1,0)
PRF Category I (Behavioral) assignment for this patient cannot be 
"KRN",.84,261132,2,2,0)
entered.  Patient is missing a National Integration Control Number (ICN).
"KRN",.84,261132,2,3,0)
 
"KRN",.84,261132,2,4,0)
Recommend:  Assign Local Category II (Behavioral) Flag until National ICN 
"KRN",.84,261132,2,5,0)
is assigned.  Contact identified facility staff to assign ICN - then 
"KRN",.84,261132,2,6,0)
inactivate PRF Category II Flag and assign PRF Category I (Behavioral).
"KRN",.84,261132,5,0)
^.841^1^1
"KRN",.84,261132,5,1,0)
DGPFLMA2^AF
"KRN",.84,261132,5,"B","DGPFLMA2",1)

"MBREQ")
0
"ORD",9,.84)
.84;9;;;EDEOUT^DIFROMSO(.84,DA,"",XPDA);FPRE^DIFROMSI(.84,"",XPDA);EPRE^DIFROMSI(.84,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.84,DA,"",XPDA);DEL^DIFROMSK(.84,"",%)
"ORD",9,.84,0)
DIALOG
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2941102^2941102
"PKG",5,22,1,"PAH",1,0)
718^3060712
"PKG",5,22,1,"PAH",1,1,0)
^^2^2^3060712
"PKG",5,22,1,"PAH",1,1,1,0)
Please refer to patch DG*5.3*718 in the National Patch Module for a
"PKG",5,22,1,"PAH",1,1,2,0)
complete description of this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","DGPFHLU")
0^1^B27262143^B25993743
"RTN","DGPFHLU",1,0)
DGPFHLU ;ALB/RPM - PRF HL7 ORU/ACK PROCESSING ; 6/14/03 10:56am
"RTN","DGPFHLU",2,0)
 ;;5.3;Registration;**425,718**;Aug 13, 1993
"RTN","DGPFHLU",3,0)
 ;
"RTN","DGPFHLU",4,0)
BLDORU(DGPFA,DGPFAH,DGHL,DGROOT) ;Build ORU~R01 Message/Segments
"RTN","DGPFHLU",5,0)
 ;
"RTN","DGPFHLU",6,0)
 ;  Input:
"RTN","DGPFHLU",7,0)
 ;      DGPFA - (required) Assignment data array
"RTN","DGPFHLU",8,0)
 ;     DGPFAH - (required) Assignment history data array
"RTN","DGPFHLU",9,0)
 ;       DGHL - (required) HL7 Kernel array passed by reference
"RTN","DGPFHLU",10,0)
 ;     DGROOT - (required) Closed root array or global name for segment
"RTN","DGPFHLU",11,0)
 ;              storage
"RTN","DGPFHLU",12,0)
 ;
"RTN","DGPFHLU",13,0)
 ;  Output:
"RTN","DGPFHLU",14,0)
 ;   Function Value - 1 on success, 0 on failure
"RTN","DGPFHLU",15,0)
 ;           DGROOT - array of HL7 segments
"RTN","DGPFHLU",16,0)
 ;
"RTN","DGPFHLU",17,0)
 N DGRSLT    ;function value
"RTN","DGPFHLU",18,0)
 N DGSEG     ;segment counter
"RTN","DGPFHLU",19,0)
 N DGSEGSTR  ;formatted segment string
"RTN","DGPFHLU",20,0)
 N DGSET     ;set id
"RTN","DGPFHLU",21,0)
 N DGSTR     ;field string
"RTN","DGPFHLU",22,0)
 N DGTROOT   ;text root
"RTN","DGPFHLU",23,0)
 ;
"RTN","DGPFHLU",24,0)
 S DGRSLT=0
"RTN","DGPFHLU",25,0)
 S DGSEG=0
"RTN","DGPFHLU",26,0)
 ;
"RTN","DGPFHLU",27,0)
 I $D(DGPFA),$D(DGPFAH),$G(DGROOT)]"" D
"RTN","DGPFHLU",28,0)
 . ;
"RTN","DGPFHLU",29,0)
 . ;build PID
"RTN","DGPFHLU",30,0)
 . S DGSTR="1,2,3,5,7,8,19"
"RTN","DGPFHLU",31,0)
 . S DGSEGSTR=$$EN^VAFHLPID(+DGPFA("DFN"),DGSTR,1,1)
"RTN","DGPFHLU",32,0)
 . Q:(DGSEGSTR="")
"RTN","DGPFHLU",33,0)
 . S DGSEG=DGSEG+1,@DGROOT@(DGSEG)=DGSEGSTR
"RTN","DGPFHLU",34,0)
 . ;
"RTN","DGPFHLU",35,0)
 . ;build OBR
"RTN","DGPFHLU",36,0)
 . S DGSET=1
"RTN","DGPFHLU",37,0)
 . S DGSTR="1,4,7,20"
"RTN","DGPFHLU",38,0)
 . S DGSEGSTR=$$OBR^DGPFHLU1(DGSET,.DGPFA,.DGPFAH,DGSTR,.DGHL)
"RTN","DGPFHLU",39,0)
 . Q:(DGSEGSTR="")
"RTN","DGPFHLU",40,0)
 . S DGSEG=DGSEG+1,@DGROOT@(DGSEG)=DGSEGSTR
"RTN","DGPFHLU",41,0)
 . ;
"RTN","DGPFHLU",42,0)
 . ;start OBX segments
"RTN","DGPFHLU",43,0)
 . S DGSET=0
"RTN","DGPFHLU",44,0)
 . ;
"RTN","DGPFHLU",45,0)
 . ;build narrative OBX segments
"RTN","DGPFHLU",46,0)
 . S DGTROOT="DGPFA(""NARR"")"
"RTN","DGPFHLU",47,0)
 . Q:'$$BLDOBXTX^DGPFHLU2(DGROOT,DGTROOT,"N",.DGPFAH,.DGHL,.DGSEG,.DGSET)
"RTN","DGPFHLU",48,0)
 . ;
"RTN","DGPFHLU",49,0)
 . ;build status OBX segment
"RTN","DGPFHLU",50,0)
 . S DGSTR="1,2,3,5,11,14"
"RTN","DGPFHLU",51,0)
 . S DGSET=DGSET+1
"RTN","DGPFHLU",52,0)
 . S DGSEGSTR=$$OBX^DGPFHLU2(DGSET,"S","",$P($G(DGPFAH("ACTION")),U,2),.DGPFAH,DGSTR,.DGHL)
"RTN","DGPFHLU",53,0)
 . Q:(DGSEGSTR="")
"RTN","DGPFHLU",54,0)
 . S DGSEG=DGSEG+1,@DGROOT@(DGSEG)=DGSEGSTR
"RTN","DGPFHLU",55,0)
 . ;
"RTN","DGPFHLU",56,0)
 . ;build review comment OBX segments
"RTN","DGPFHLU",57,0)
 . S DGTROOT="DGPFAH(""COMMENT"")"
"RTN","DGPFHLU",58,0)
 . Q:'$$BLDOBXTX^DGPFHLU2(DGROOT,DGTROOT,"C",.DGPFAH,.DGHL,.DGSEG,.DGSET)
"RTN","DGPFHLU",59,0)
 . ;
"RTN","DGPFHLU",60,0)
 . ;success
"RTN","DGPFHLU",61,0)
 . S DGRSLT=1
"RTN","DGPFHLU",62,0)
 ;
"RTN","DGPFHLU",63,0)
 Q DGRSLT
"RTN","DGPFHLU",64,0)
 ;
"RTN","DGPFHLU",65,0)
PARSORU(DGWRK,DGHL,DGPFA,DGPFAH,DGPFERR) ;Parse ORU~R01 Message/Segments
"RTN","DGPFHLU",66,0)
 ;
"RTN","DGPFHLU",67,0)
 ;  Input:
"RTN","DGPFHLU",68,0)
 ;     DGWRK - Closed root work global reference
"RTN","DGPFHLU",69,0)
 ;      DGHL - HL7 environment array
"RTN","DGPFHLU",70,0)
 ;
"RTN","DGPFHLU",71,0)
 ;  Output:
"RTN","DGPFHLU",72,0)
 ;     DGPFA - Assignment data array
"RTN","DGPFHLU",73,0)
 ;    DGPFAH - Assignment history data array
"RTN","DGPFHLU",74,0)
 ;   DGPFERR - Undefined on success, ERR segment data array on failure
"RTN","DGPFHLU",75,0)
 ;             Format:  DGPFERR(seg_id,sequence,fld_pos)=error_code
"RTN","DGPFHLU",76,0)
 ;
"RTN","DGPFHLU",77,0)
 N DGFS      ;field separator
"RTN","DGPFHLU",78,0)
 N DGCS      ;component separator
"RTN","DGPFHLU",79,0)
 N DGRS      ;repetition separator
"RTN","DGPFHLU",80,0)
 N DGCURLIN  ;current segment line
"RTN","DGPFHLU",81,0)
 N DGSEG     ;segment field data array
"RTN","DGPFHLU",82,0)
 N DGERR     ;error processing array
"RTN","DGPFHLU",83,0)
 ;
"RTN","DGPFHLU",84,0)
 S DGFS=DGHL("FS")
"RTN","DGPFHLU",85,0)
 S DGCS=$E(DGHL("ECH"),1)
"RTN","DGPFHLU",86,0)
 S DGRS=$E(DGHL("ECH"),2)
"RTN","DGPFHLU",87,0)
 S DGCURLIN=0
"RTN","DGPFHLU",88,0)
 ;
"RTN","DGPFHLU",89,0)
 ;loop through the message segments and retrieve the field data
"RTN","DGPFHLU",90,0)
 F  D  Q:'DGCURLIN
"RTN","DGPFHLU",91,0)
 . N DGSEG
"RTN","DGPFHLU",92,0)
 . S DGCURLIN=$$NXTSEG^DGPFHLUT(DGWRK,DGCURLIN,DGFS,.DGSEG)
"RTN","DGPFHLU",93,0)
 . Q:'DGCURLIN
"RTN","DGPFHLU",94,0)
 . D @(DGSEG("TYPE")_"(.DGSEG,DGCS,DGRS,.DGPFA,.DGPFAH,.DGPFERR)")
"RTN","DGPFHLU",95,0)
 ;
"RTN","DGPFHLU",96,0)
 ;the ENTERBY and APPRVBY will always be POSTMASTER (DUZ=.5)
"RTN","DGPFHLU",97,0)
 S DGPFAH("ENTERBY")=.5  ;ENTERED BY  (.04) field, file 26.14
"RTN","DGPFHLU",98,0)
 S DGPFAH("APPRVBY")=.5  ;APPROVED BY (.05) field, file 26.14
"RTN","DGPFHLU",99,0)
 Q
"RTN","DGPFHLU",100,0)
 ;
"RTN","DGPFHLU",101,0)
MSH(DGSEG,DGCS,DGRS,DGPFA,DGPFAH,DGERR) ;
"RTN","DGPFHLU",102,0)
 ;
"RTN","DGPFHLU",103,0)
 ;  Input:
"RTN","DGPFHLU",104,0)
 ;    DGSEG - MSH segment field array
"RTN","DGPFHLU",105,0)
 ;     DGCS - HL7 component separator
"RTN","DGPFHLU",106,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGPFHLU",107,0)
 ;
"RTN","DGPFHLU",108,0)
 ;  Output:
"RTN","DGPFHLU",109,0)
 ;   DGPFA("ORIGSITE") - ORIGINATING SITE (.05) field, file #26.13 
"RTN","DGPFHLU",110,0)
 ;               DGERR - undefined on success, error array on failure
"RTN","DGPFHLU",111,0)
 ;                      format: DGERR(seg_id,sequence,fld_pos)=error code
"RTN","DGPFHLU",112,0)
 ;
"RTN","DGPFHLU",113,0)
 S DGPFA("ORIGSITE")=$$IEN^XUAF4($P(DGSEG(4),DGCS,1))
"RTN","DGPFHLU",114,0)
 I (DGPFA("ORIGSITE")="")!('$$TESTVAL^DGPFUT(26.13,.05,DGPFA("ORIGSITE"))) D
"RTN","DGPFHLU",115,0)
 . S DGERR("MSH",1,4)="IOR"
"RTN","DGPFHLU",116,0)
 Q
"RTN","DGPFHLU",117,0)
 ;
"RTN","DGPFHLU",118,0)
PID(DGSEG,DGCS,DGRS,DGPFA,DGPFAH,DGERR) ;
"RTN","DGPFHLU",119,0)
 ;
"RTN","DGPFHLU",120,0)
 ;  Input:
"RTN","DGPFHLU",121,0)
 ;    DGSEG - PID segment field array
"RTN","DGPFHLU",122,0)
 ;     DGCS - HL7 component separator
"RTN","DGPFHLU",123,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGPFHLU",124,0)
 ;
"RTN","DGPFHLU",125,0)
 ;  Output:
"RTN","DGPFHLU",126,0)
 ;    DGPFA("DFN") - PATIENT NAME (.01) field, file #26.13
"RTN","DGPFHLU",127,0)
 ;           DGERR - undefined on success, error array on failure
"RTN","DGPFHLU",128,0)
 ;                   format: DGERR(seg_id,sequence,fld_pos)=error code
"RTN","DGPFHLU",129,0)
 ;
"RTN","DGPFHLU",130,0)
 N DGICN
"RTN","DGPFHLU",131,0)
 N DGDOB
"RTN","DGPFHLU",132,0)
 N DGSSN
"RTN","DGPFHLU",133,0)
 ;
"RTN","DGPFHLU",134,0)
 S DGICN=+$P(DGSEG(3),DGCS,1)
"RTN","DGPFHLU",135,0)
 S DGDOB=+$$HL7TFM^XLFDT(DGSEG(7))
"RTN","DGPFHLU",136,0)
 S DGSSN=DGSEG(19)
"RTN","DGPFHLU",137,0)
 S DGPFA("DFN")=$$GETDFN^DGPFUT2(DGICN,DGDOB,DGSSN)
"RTN","DGPFHLU",138,0)
 I 'DGPFA("DFN") D
"RTN","DGPFHLU",139,0)
 . S DGERR("PID",DGSEG(1),3)="NM"  ;no match
"RTN","DGPFHLU",140,0)
 Q
"RTN","DGPFHLU",141,0)
 ;
"RTN","DGPFHLU",142,0)
OBR(DGSEG,DGCS,DGRS,DGPFA,DGPFAH,DGERR) ;
"RTN","DGPFHLU",143,0)
 ;
"RTN","DGPFHLU",144,0)
 ;  Input:
"RTN","DGPFHLU",145,0)
 ;    DGSEG - OBR segment field array
"RTN","DGPFHLU",146,0)
 ;     DGCS - HL7 component separator
"RTN","DGPFHLU",147,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGPFHLU",148,0)
 ;
"RTN","DGPFHLU",149,0)
 ;  Output:
"RTN","DGPFHLU",150,0)
 ;    DGPFA("FLAG") - FLAG NAME  (.02) field, file #26.13
"RTN","DGPFHLU",151,0)
 ;   DGPFA("OWNER") - OWNER SITE (.04) field, file #26.13
"RTN","DGPFHLU",152,0)
 ;            DGERR - undefined on success, error array on failure
"RTN","DGPFHLU",153,0)
 ;                    format: DGERR(seg_id,sequence,fld_pos)=error code
"RTN","DGPFHLU",154,0)
 ;
"RTN","DGPFHLU",155,0)
 S DGPFA("FLAG")=$P($G(DGSEG(4)),DGCS,1)_";DGPF(26.15,"
"RTN","DGPFHLU",156,0)
 I '$$TESTVAL^DGPFUT(26.13,.02,DGPFA("FLAG")) D
"RTN","DGPFHLU",157,0)
 . S DGERR("OBR",DGSEG(1),4)="IF"   ;invalid flag
"RTN","DGPFHLU",158,0)
 S DGPFA("OWNER")=$$IEN^XUAF4(DGSEG(20))
"RTN","DGPFHLU",159,0)
 I (DGPFA("OWNER")="")!('$$TESTVAL^DGPFUT(26.13,.04,DGPFA("OWNER"))) D 
"RTN","DGPFHLU",160,0)
 . S DGERR("OBR",DGSEG(1),20)="IOW"  ;invalid owner site
"RTN","DGPFHLU",161,0)
 Q
"RTN","DGPFHLU",162,0)
 ;
"RTN","DGPFHLU",163,0)
OBX(DGSEG,DGCS,DGRS,DGPFA,DGPFAH,DGERR) ;
"RTN","DGPFHLU",164,0)
 ;
"RTN","DGPFHLU",165,0)
 ;  Input:
"RTN","DGPFHLU",166,0)
 ;    DGSEG - OBX segment field array
"RTN","DGPFHLU",167,0)
 ;     DGCS - HL7 component separator
"RTN","DGPFHLU",168,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGPFHLU",169,0)
 ;
"RTN","DGPFHLU",170,0)
 ;  Output:
"RTN","DGPFHLU",171,0)
 ;    DGPFA("STATUS") - STATUS               (.03) field, file #26.13
"RTN","DGPFHLU",172,0)
 ;      DGPFA("NARR") - ASSIGNMENT NARRATIVE   (1) field, file #26.13
"RTN","DGPFHLU",173,0)
 ; DGPFAH("ASSIGNDT") - DATE/TIME            (.02) field, file #26.14
"RTN","DGPFHLU",174,0)
 ;   DGPFAH("ACTION") - ACTION               (.03) field, file #26.14
"RTN","DGPFHLU",175,0)
 ;  DGPFAH("COMMENT") - HISTORY COMMENTS       (1) field, file #26.14
"RTN","DGPFHLU",176,0)
 ;              DGERR - undefined on success, error array on failure
"RTN","DGPFHLU",177,0)
 ;                      format: DGERR(seg_id,sequence,fld_pos)=error code
"RTN","DGPFHLU",178,0)
 ;
"RTN","DGPFHLU",179,0)
 N DGI
"RTN","DGPFHLU",180,0)
 N DGLINE
"RTN","DGPFHLU",181,0)
 N DGRSLT
"RTN","DGPFHLU",182,0)
 ;
"RTN","DGPFHLU",183,0)
 ;validate Observation ID value - quit if invalid
"RTN","DGPFHLU",184,0)
 I '$F("NSC",$P(DGSEG(3),DGCS,1)) D  Q
"RTN","DGPFHLU",185,0)
 . S DGERR("OBX",DGSEG(1),3)="IID"
"RTN","DGPFHLU",186,0)
 ;
"RTN","DGPFHLU",187,0)
 ; Narrative Observation Identifier
"RTN","DGPFHLU",188,0)
 I $P(DGSEG(3),DGCS,1)="N" D
"RTN","DGPFHLU",189,0)
 . S DGLINE=$O(DGPFA("NARR",""),-1)
"RTN","DGPFHLU",190,0)
 . F DGI=1:1:$L(DGSEG(5),DGRS) D
"RTN","DGPFHLU",191,0)
 . . S DGPFA("NARR",DGLINE+DGI,0)=$P(DGSEG(5),DGRS,DGI)
"RTN","DGPFHLU",192,0)
 ;
"RTN","DGPFHLU",193,0)
 ; Status Observation Identifier
"RTN","DGPFHLU",194,0)
 I $P(DGSEG(3),DGCS,1)="S" D
"RTN","DGPFHLU",195,0)
 . K DGPFAH("COMMENT")  ;prepare for following OBX "COMMENT" segments
"RTN","DGPFHLU",196,0)
 . D CHK^DIE(26.14,.03,,DGSEG(5),.DGRSLT)
"RTN","DGPFHLU",197,0)
 . S DGPFAH("ACTION")=+DGRSLT
"RTN","DGPFHLU",198,0)
 . S DGPFAH("ASSIGNDT")=$$HL7TFM^XLFDT(DGSEG(14))
"RTN","DGPFHLU",199,0)
 . S DGPFA("STATUS")=$$STATUS^DGPFUT(DGPFAH("ACTION"))
"RTN","DGPFHLU",200,0)
 ;
"RTN","DGPFHLU",201,0)
 ; Comment Observation Identifier
"RTN","DGPFHLU",202,0)
 I $P(DGSEG(3),DGCS,1)="C" D
"RTN","DGPFHLU",203,0)
 . S DGLINE=$O(DGPFAH("COMMENT",""),-1)
"RTN","DGPFHLU",204,0)
 . F DGI=1:1:$L(DGSEG(5),DGRS) D
"RTN","DGPFHLU",205,0)
 . . S DGPFAH("COMMENT",DGLINE+DGI,0)=$P(DGSEG(5),DGRS,DGI)
"RTN","DGPFHLU",206,0)
 Q
"RTN","DGPFHLU",207,0)
 ;
"RTN","DGPFHLU5")
0^2^B59520478^B32860836
"RTN","DGPFHLU5",1,0)
DGPFHLU5 ;ALB/RPM - PRF HL7 ACK PROCESSING ; 6/14/03 11:30am
"RTN","DGPFHLU5",2,0)
 ;;5.3;Registration;**425,718**;Aug 13, 1993
"RTN","DGPFHLU5",3,0)
 ;
"RTN","DGPFHLU5",4,0)
 Q
"RTN","DGPFHLU5",5,0)
 ;
"RTN","DGPFHLU5",6,0)
PROCERR(DGLIEN,DGACK,DGERR) ;process errors returned from ACK
"RTN","DGPFHLU5",7,0)
 ;
"RTN","DGPFHLU5",8,0)
 ;  Input:
"RTN","DGPFHLU5",9,0)
 ;    DGLIEN - IEN of PRF HL7 TRANSMISSION LOG (#26.17) file
"RTN","DGPFHLU5",10,0)
 ;     DGACK - array of ACK parse data
"RTN","DGPFHLU5",11,0)
 ;     DGERR - array of parsed errors (ex: DGERR(1)="UU")
"RTN","DGPFHLU5",12,0)
 ;
"RTN","DGPFHLU5",13,0)
 ; Output: none
"RTN","DGPFHLU5",14,0)
 ;
"RTN","DGPFHLU5",15,0)
 N DGPFA   ;assignment array
"RTN","DGPFHLU5",16,0)
 N DGPFAH  ;assignment history array
"RTN","DGPFHLU5",17,0)
 N DGPFL   ;HL7 transmission log array
"RTN","DGPFHLU5",18,0)
 N DGTBL   ;error code array
"RTN","DGPFHLU5",19,0)
 N DGXMTXT ;mailman msg text array 
"RTN","DGPFHLU5",20,0)
 ;
"RTN","DGPFHLU5",21,0)
 I +$G(DGLIEN),$D(DGACK),$D(DGERR) D
"RTN","DGPFHLU5",22,0)
 . ;
"RTN","DGPFHLU5",23,0)
 . ;retrieve the HL7 transmission log values
"RTN","DGPFHLU5",24,0)
 . Q:'$$GETLOG^DGPFHLL(DGLIEN,.DGPFL)
"RTN","DGPFHLU5",25,0)
 . ;
"RTN","DGPFHLU5",26,0)
 . ;retrieve assignment history values
"RTN","DGPFHLU5",27,0)
 . Q:'$$GETHIST^DGPFAAH(+$G(DGPFL("ASGNHIST")),.DGPFAH)
"RTN","DGPFHLU5",28,0)
 . ;
"RTN","DGPFHLU5",29,0)
 . ;retrieve assignment values
"RTN","DGPFHLU5",30,0)
 . Q:'$$GETASGN^DGPFAA(+$G(DGPFAH("ASSIGN")),.DGPFA)
"RTN","DGPFHLU5",31,0)
 . ;
"RTN","DGPFHLU5",32,0)
 . S DGXMTXT=$NA(^TMP("DGPFERR",$J))
"RTN","DGPFHLU5",33,0)
 . K @DGXMTXT
"RTN","DGPFHLU5",34,0)
 . ;
"RTN","DGPFHLU5",35,0)
 . ;load error code table
"RTN","DGPFHLU5",36,0)
 . D BLDVA086^DGPFHLU3(.DGTBL)
"RTN","DGPFHLU5",37,0)
 . ;
"RTN","DGPFHLU5",38,0)
 . ;create message text array
"RTN","DGPFHLU5",39,0)
 . D BLDMSG(.DGPFA,.DGACK,.DGERR,.DGTBL,DGXMTXT)
"RTN","DGPFHLU5",40,0)
 . ;
"RTN","DGPFHLU5",41,0)
 . ;send the notification message
"RTN","DGPFHLU5",42,0)
 . D SEND(DGXMTXT)
"RTN","DGPFHLU5",43,0)
 . ;
"RTN","DGPFHLU5",44,0)
 . ;cleanup
"RTN","DGPFHLU5",45,0)
 . K @DGXMTXT
"RTN","DGPFHLU5",46,0)
 Q
"RTN","DGPFHLU5",47,0)
 ;
"RTN","DGPFHLU5",48,0)
BLDMSG(DGPFA,DGACK,DGERR,DGTBL,DGXMTXT) ;buld MailMan message array
"RTN","DGPFHLU5",49,0)
 ;
"RTN","DGPFHLU5",50,0)
 ;  Supported DBIA #2171:  The supported DBIA is uses to access Kernel
"RTN","DGPFHLU5",51,0)
 ;                         APIs for retrieving Station numbers and names
"RTN","DGPFHLU5",52,0)
 ;                         from the INSTITUTION (#4) file.
"RTN","DGPFHLU5",53,0)
 ;  Supported DBIA #2701:  The supported DBIA is used to access MPI APIs
"RTN","DGPFHLU5",54,0)
 ;                         for retrieving an ICN for a given DFN.
"RTN","DGPFHLU5",55,0)
 ;
"RTN","DGPFHLU5",56,0)
 ;  Input:
"RTN","DGPFHLU5",57,0)
 ;    DGPFA - assignment data array
"RTN","DGPFHLU5",58,0)
 ;    DGACK - array of ACK data
"RTN","DGPFHLU5",59,0)
 ;    DGERR - array of parsed errors (ex: DGERR(1)="UU")
"RTN","DGPFHLU5",60,0)
 ;    DGTBL - VA086 error code table array
"RTN","DGPFHLU5",61,0)
 ;
"RTN","DGPFHLU5",62,0)
 ;  Output:
"RTN","DGPFHLU5",63,0)
 ;    DGXMTXT - array of MailMan text lines
"RTN","DGPFHLU5",64,0)
 ;
"RTN","DGPFHLU5",65,0)
 N DGCNT   ;error count
"RTN","DGPFHLU5",66,0)
 N DGCOD   ;error code
"RTN","DGPFHLU5",67,0)
 N DGDEM   ;patient demographics array
"RTN","DGPFHLU5",68,0)
 N DGDFN   ;pointer to PATIENT (#2) file
"RTN","DGPFHLU5",69,0)
 N DGDLG   ;DIALOG text array
"RTN","DGPFHLU5",70,0)
 N DGFAC   ;facility data array from XUAF4 call
"RTN","DGPFHLU5",71,0)
 N DGI     ;generic counter
"RTN","DGPFHLU5",72,0)
 N DGICN   ;integrated control number
"RTN","DGPFHLU5",73,0)
 N DGLIN   ;line counter
"RTN","DGPFHLU5",74,0)
 N DGMAX   ;maximum line length
"RTN","DGPFHLU5",75,0)
 N DGSITE  ;results of VASITE call
"RTN","DGPFHLU5",76,0)
 N DGSNDSTA  ;sending station number
"RTN","DGPFHLU5",77,0)
 N DGSNDNAM  ;sending station name
"RTN","DGPFHLU5",78,0)
 ;
"RTN","DGPFHLU5",79,0)
 S DGDFN=+$G(DGPFA("DFN"))
"RTN","DGPFHLU5",80,0)
 Q:(DGDFN'>0)
"RTN","DGPFHLU5",81,0)
 ;
"RTN","DGPFHLU5",82,0)
 ;retrieve patient demographics
"RTN","DGPFHLU5",83,0)
 Q:'$$GETPAT^DGPFUT2(DGDFN,.DGDEM)
"RTN","DGPFHLU5",84,0)
 S DGICN=$$GETICN^MPIF001(DGDFN)
"RTN","DGPFHLU5",85,0)
 S DGICN=$S(+DGICN>0:DGICN,1:$P(DGICN,U,2))
"RTN","DGPFHLU5",86,0)
 ;
"RTN","DGPFHLU5",87,0)
 S DGLIN=0
"RTN","DGPFHLU5",88,0)
 S DGMAX=65
"RTN","DGPFHLU5",89,0)
 S DGSITE=$$SITE^VASITE()
"RTN","DGPFHLU5",90,0)
 S DGSNDSTA=$G(DGACK("SNDFAC"))
"RTN","DGPFHLU5",91,0)
 D F4^XUAF4(DGSNDSTA,.DGFAC,"","")
"RTN","DGPFHLU5",92,0)
 S DGSNDNAM=$S(DGFAC>0:$G(DGFAC("NAME")),1:"")
"RTN","DGPFHLU5",93,0)
 ;
"RTN","DGPFHLU5",94,0)
 D ADDLINE("",0,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGPFHLU5",95,0)
 D ADDLINE("* * * *  P R F  H L 7  E R R O R  E N C O U N T E R E D  * * * *",0,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGPFHLU5",96,0)
 D ADDLINE("",0,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGPFHLU5",97,0)
 D ADDLINE("A facility could not process the following Patient Record Flag assignment on "_$$FMTE^XLFDT($G(DGACK("MSGDTM")))_".",0,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGPFHLU5",98,0)
 D ADDLINE("",0,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGPFHLU5",99,0)
 D ADDLINE("Receiving Facility name: "_DGSNDNAM_" ("_DGSNDSTA_")",0,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGPFHLU5",100,0)
 D ADDLINE("",0,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGPFHLU5",101,0)
 D ADDLINE("Flag Name: "_$P($G(DGPFA("FLAG")),U,2),14,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGPFHLU5",102,0)
 D ADDLINE("",0,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGPFHLU5",103,0)
 D ADDLINE("Patient Name: "_DGDEM("NAME"),11,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGPFHLU5",104,0)
 D ADDLINE("Social Security #: "_DGDEM("SSN"),6,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGPFHLU5",105,0)
 D ADDLINE("Date of Birth: "_$$FMTE^XLFDT(DGDEM("DOB"),"2D"),10,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGPFHLU5",106,0)
 D ADDLINE("Integrated Control #: "_DGICN,3,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGPFHLU5",107,0)
 D ADDLINE("",0,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGPFHLU5",108,0)
 S DGCNT=0
"RTN","DGPFHLU5",109,0)
 F  S DGCNT=$O(DGERR(DGCNT)) Q:'DGCNT  D
"RTN","DGPFHLU5",110,0)
 . K DGDLG
"RTN","DGPFHLU5",111,0)
 . S DGCOD=DGERR(DGCNT)
"RTN","DGPFHLU5",112,0)
 . ;
"RTN","DGPFHLU5",113,0)
 . ;assume numeric error code is a DIALOG
"RTN","DGPFHLU5",114,0)
 . I DGCOD?1N.N D BLD^DIALOG(DGCOD,"","","DGDLG","S")
"RTN","DGPFHLU5",115,0)
 . I $D(DGDLG) D FORMAT(.DGDLG,DGMAX-12)
"RTN","DGPFHLU5",116,0)
 . ;
"RTN","DGPFHLU5",117,0)
 . ;if not a DIALOG, then is it a table entry?
"RTN","DGPFHLU5",118,0)
 . I '$D(DGDLG),DGCOD]"",$D(DGTBL(DGCOD,"DESC")) S DGDLG(1)=DGTBL(DGCOD,"DESC")
"RTN","DGPFHLU5",119,0)
 . ;
"RTN","DGPFHLU5",120,0)
 . ;not a DIALOG or table entry - then error is unknown
"RTN","DGPFHLU5",121,0)
 . I '$D(DGDLG) S DGDLG(1)="Unknown Error code: '"_DGCOD_"'"
"RTN","DGPFHLU5",122,0)
 . ;
"RTN","DGPFHLU5",123,0)
 . ;error header
"RTN","DGPFHLU5",124,0)
 . D ADDLINE("Reason#: "_DGCNT,0,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGPFHLU5",125,0)
 . ;
"RTN","DGPFHLU5",126,0)
 . ;loop through error text array
"RTN","DGPFHLU5",127,0)
 . S DGI=0
"RTN","DGPFHLU5",128,0)
 . F  S DGI=$O(DGDLG(DGI)) Q:'DGI  D
"RTN","DGPFHLU5",129,0)
 . . D ADDLINE(DGDLG(DGI),12,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGPFHLU5",130,0)
 . ;
"RTN","DGPFHLU5",131,0)
 . ;error separator
"RTN","DGPFHLU5",132,0)
 . D ADDLINE("",0,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGPFHLU5",133,0)
 ;
"RTN","DGPFHLU5",134,0)
 Q
"RTN","DGPFHLU5",135,0)
 ;
"RTN","DGPFHLU5",136,0)
ADDLINE(DGTEXT,DGINDENT,DGMAXLEN,DGCNT,DGXMTXT) ;add text line to message array
"RTN","DGPFHLU5",137,0)
 ;
"RTN","DGPFHLU5",138,0)
 ;  Input:
"RTN","DGPFHLU5",139,0)
 ;     DGTEXT - text string
"RTN","DGPFHLU5",140,0)
 ;   DGINDENT - number of spaces to insert at start of line
"RTN","DGPFHLU5",141,0)
 ;   DGMAXLEN - maximum desired line length (default: 60)
"RTN","DGPFHLU5",142,0)
 ;      DGCNT - line number passed by reference
"RTN","DGPFHLU5",143,0)
 ;
"RTN","DGPFHLU5",144,0)
 ;  Output:
"RTN","DGPFHLU5",145,0)
 ;    DGXMTXT - array of text strings
"RTN","DGPFHLU5",146,0)
 ;
"RTN","DGPFHLU5",147,0)
 N DGAVAIL  ;available space for text
"RTN","DGPFHLU5",148,0)
 N DGLINE   ;truncated text
"RTN","DGPFHLU5",149,0)
 N DGLOC    ;location of space character
"RTN","DGPFHLU5",150,0)
 N DGPAD    ;space indent
"RTN","DGPFHLU5",151,0)
 ;
"RTN","DGPFHLU5",152,0)
 S DGTEXT=$G(DGTEXT)
"RTN","DGPFHLU5",153,0)
 S DGINDENT=+$G(DGINDENT)
"RTN","DGPFHLU5",154,0)
 S DGMAXLEN=+$G(DGMAXLEN)
"RTN","DGPFHLU5",155,0)
 S:'DGMAXLEN DGMAXLEN=60
"RTN","DGPFHLU5",156,0)
 I DGINDENT>(DGMAXLEN-1) S DGINDENT=0
"RTN","DGPFHLU5",157,0)
 S DGCNT=$G(DGCNT,0)  ;default to 0
"RTN","DGPFHLU5",158,0)
 ;
"RTN","DGPFHLU5",159,0)
 S DGPAD=$$REPEAT^XLFSTR(" ",DGINDENT)
"RTN","DGPFHLU5",160,0)
 ;
"RTN","DGPFHLU5",161,0)
 ;determine availaible space for text
"RTN","DGPFHLU5",162,0)
 S DGAVAIL=(DGMAXLEN-DGINDENT)
"RTN","DGPFHLU5",163,0)
 F  D  Q:('$L(DGTEXT))
"RTN","DGPFHLU5",164,0)
 . ;
"RTN","DGPFHLU5",165,0)
 . ;find potential line break
"RTN","DGPFHLU5",166,0)
 . S DGLOC=$L($E(DGTEXT,1,DGAVAIL)," ")
"RTN","DGPFHLU5",167,0)
 . ;
"RTN","DGPFHLU5",168,0)
 . ;break a line that is too long when it has potential line breaks
"RTN","DGPFHLU5",169,0)
 . I $L(DGTEXT)>DGAVAIL,DGLOC D
"RTN","DGPFHLU5",170,0)
 . . S DGLINE=$P(DGTEXT," ",1,$S(DGLOC>1:DGLOC-1,1:1))
"RTN","DGPFHLU5",171,0)
 . . S DGTEXT=$P(DGTEXT," ",$S(DGLOC>1:DGLOC,1:DGLOC+1),$L(DGTEXT," "))
"RTN","DGPFHLU5",172,0)
 . E  D
"RTN","DGPFHLU5",173,0)
 . . S DGLINE=DGTEXT,DGTEXT=""
"RTN","DGPFHLU5",174,0)
 . ;
"RTN","DGPFHLU5",175,0)
 . S DGCNT=DGCNT+1
"RTN","DGPFHLU5",176,0)
 . S @DGXMTXT@(DGCNT)=DGPAD_DGLINE
"RTN","DGPFHLU5",177,0)
 Q
"RTN","DGPFHLU5",178,0)
 ;
"RTN","DGPFHLU5",179,0)
SEND(DGXMTXT) ;send the MailMan message
"RTN","DGPFHLU5",180,0)
 ;
"RTN","DGPFHLU5",181,0)
 ;  Input:
"RTN","DGPFHLU5",182,0)
 ;    DGXMTXT - name of message text array in closed format
"RTN","DGPFHLU5",183,0)
 ;
"RTN","DGPFHLU5",184,0)
 ;  Output:
"RTN","DGPFHLU5",185,0)
 ;    none
"RTN","DGPFHLU5",186,0)
 ;
"RTN","DGPFHLU5",187,0)
 N DIFROM  ;protect FM package
"RTN","DGPFHLU5",188,0)
 N XMDUZ   ;sender
"RTN","DGPFHLU5",189,0)
 N XMSUB   ;message subject
"RTN","DGPFHLU5",190,0)
 N XMTEXT  ;name of message text array in open format
"RTN","DGPFHLU5",191,0)
 N XMY     ;recipient array
"RTN","DGPFHLU5",192,0)
 N XMZ     ;returned message number
"RTN","DGPFHLU5",193,0)
 ;
"RTN","DGPFHLU5",194,0)
 S XMDUZ="Patient Record Flag Module"
"RTN","DGPFHLU5",195,0)
 S XMSUB="PRF MESSAGE TRANSMISSION ERROR"
"RTN","DGPFHLU5",196,0)
 S XMTEXT=$$OREF^DILF(DGXMTXT)
"RTN","DGPFHLU5",197,0)
 S XMY("G.DGPF HL7 TRANSMISSION ERRORS")=""
"RTN","DGPFHLU5",198,0)
 D ^XMD
"RTN","DGPFHLU5",199,0)
 Q
"RTN","DGPFHLU5",200,0)
 ;
"RTN","DGPFHLU5",201,0)
FORMAT(DGTEXT,DGMAX) ;format text lines to length
"RTN","DGPFHLU5",202,0)
 ;This procedure formats an array of text lines to be less than a
"RTN","DGPFHLU5",203,0)
 ;given maximum length.
"RTN","DGPFHLU5",204,0)
 ;
"RTN","DGPFHLU5",205,0)
 ;  Supported DBIA:  #10104 - $$TRIM^XLFSTR Kernel api to trim spaces
"RTN","DGPFHLU5",206,0)
 ;
"RTN","DGPFHLU5",207,0)
 ;  Input:
"RTN","DGPFHLU5",208,0)
 ;      DGTEXT - (required) array of text lines (passed by reference)
"RTN","DGPFHLU5",209,0)
 ;       DGMAX - (optional) maximum line length (default = 75)
"RTN","DGPFHLU5",210,0)
 ;
"RTN","DGPFHLU5",211,0)
 ; Output:
"RTN","DGPFHLU5",212,0)
 ;      DGTEXT - re-formatted array of text lines
"RTN","DGPFHLU5",213,0)
 ;
"RTN","DGPFHLU5",214,0)
 Q:'$D(DGTEXT)
"RTN","DGPFHLU5",215,0)
 ;
"RTN","DGPFHLU5",216,0)
 N DGARRY   ;temp array for re-formatting
"RTN","DGPFHLU5",217,0)
 N DGI      ;loop var
"RTN","DGPFHLU5",218,0)
 N DGLN     ;line counter var
"RTN","DGPFHLU5",219,0)
 N DGMORE   ;leftover words
"RTN","DGPFHLU5",220,0)
 N DGNEWLN  ;new text line
"RTN","DGPFHLU5",221,0)
 N DGOLDLN  ;original text line
"RTN","DGPFHLU5",222,0)
 N DGSPOT   ;position of text line to break at
"RTN","DGPFHLU5",223,0)
 ;
"RTN","DGPFHLU5",224,0)
 S:'+$G(DGMAX) DGMAX=75
"RTN","DGPFHLU5",225,0)
 ;
"RTN","DGPFHLU5",226,0)
 S (DGI,DGLN,DGMORE,DGNEWLN,DGOLDLN,DGSPOT)=""
"RTN","DGPFHLU5",227,0)
 ;
"RTN","DGPFHLU5",228,0)
 F DGI=1:1 S DGOLDLN=$G(DGTEXT(DGI)) Q:'$L(DGOLDLN)&'$L(DGMORE)  D
"RTN","DGPFHLU5",229,0)
 . I DGOLDLN'?1.P S DGOLDLN=$$TRIM^XLFSTR(DGOLDLN)
"RTN","DGPFHLU5",230,0)
 . I $L(DGOLDLN)'>DGMAX,'$L(DGMORE) D  Q
"RTN","DGPFHLU5",231,0)
 . . S DGLN=DGLN+1,DGARRY(DGLN)=DGOLDLN
"RTN","DGPFHLU5",232,0)
 . ;
"RTN","DGPFHLU5",233,0)
 . I $L(DGMORE),(DGOLDLN?1.P!('$L(DGOLDLN))) D  Q
"RTN","DGPFHLU5",234,0)
 . . S DGLN=DGLN+1,DGARRY(DGLN)=DGMORE,DGMORE=""
"RTN","DGPFHLU5",235,0)
 . . S:$L(DGOLDLN) DGLN=DGLN+1,DGARRY(DGLN)=DGOLDLN
"RTN","DGPFHLU5",236,0)
 . ;
"RTN","DGPFHLU5",237,0)
 . S:$L(DGMORE) DGOLDLN=DGMORE_" "_DGOLDLN,DGMORE=""
"RTN","DGPFHLU5",238,0)
 . ;
"RTN","DGPFHLU5",239,0)
 . I $L(DGOLDLN)>DGMAX F  D  Q:'$L(DGOLDLN)
"RTN","DGPFHLU5",240,0)
 . . S DGSPOT=$L($E(DGOLDLN,1,DGMAX)," ")
"RTN","DGPFHLU5",241,0)
 . . S DGNEWLN=$P(DGOLDLN," ",1,$S(DGSPOT>1:DGSPOT-1,1:1))
"RTN","DGPFHLU5",242,0)
 . . S DGLN=DGLN+1,DGARRY(DGLN)=DGNEWLN,DGNEWLN=""
"RTN","DGPFHLU5",243,0)
 . . S DGMORE=$P(DGOLDLN," ",$S(DGSPOT>1:DGSPOT,1:DGSPOT+1),$L(DGOLDLN," "))
"RTN","DGPFHLU5",244,0)
 . . I $L(DGMORE)>DGMAX S DGOLDLN=DGMORE,DGMORE=""
"RTN","DGPFHLU5",245,0)
 . . E  S DGOLDLN=""
"RTN","DGPFHLU5",246,0)
 . E  D
"RTN","DGPFHLU5",247,0)
 . . S DGLN=DGLN+1,DGARRY(DGLN)=DGOLDLN
"RTN","DGPFHLU5",248,0)
 ;
"RTN","DGPFHLU5",249,0)
 I $D(DGARRY) K DGTEXT M DGTEXT=DGARRY
"RTN","DGPFHLU5",250,0)
 Q
"VER")
8.0^22.0
"BLD",6152,6)
^629
**END**
**END**
