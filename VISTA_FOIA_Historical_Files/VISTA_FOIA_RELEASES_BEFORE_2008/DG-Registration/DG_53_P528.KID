KIDS Distribution saved on Oct 22, 2003@13:37:48
Combat Veteran Interim Solution - 10/22/2003
**KIDS**:DG*5.3*528^SD*5.3*305^EAS*1.0*36^

**INSTALL NAME**
DG*5.3*528
"BLD",4315,0)
DG*5.3*528^REGISTRATION^0^3031022^y
"BLD",4315,4,0)
^9.64PA^2^1
"BLD",4315,4,2,0)
2
"BLD",4315,4,2,2,0)
^9.641^2^1
"BLD",4315,4,2,2,2,0)
PATIENT  (File-top level)
"BLD",4315,4,2,2,2,1,0)
^9.6411^.327^3
"BLD",4315,4,2,2,2,1,.327,0)
SERVICE SEPARATION DATE [LAST]
"BLD",4315,4,2,2,2,1,.5295,0)
COMBAT VETERAN END DATE
"BLD",4315,4,2,2,2,1,.5296,0)
CV DATE EDITED
"BLD",4315,4,2,222)
y^n^p^^^^n^^n
"BLD",4315,4,2,224)

"BLD",4315,4,"APDD",2,2)

"BLD",4315,4,"APDD",2,2,.327)

"BLD",4315,4,"APDD",2,2,.5295)

"BLD",4315,4,"APDD",2,2,.5296)

"BLD",4315,4,"B",2,2)

"BLD",4315,"ABNS",0)
^9.66A^^
"BLD",4315,"ABPKG")
n^n
"BLD",4315,"INI")
PRE^DG53528P
"BLD",4315,"INIT")
POST^DG53528P
"BLD",4315,"KRN",0)
^9.67PA^8989.52^19
"BLD",4315,"KRN",.4,0)
.4
"BLD",4315,"KRN",.401,0)
.401
"BLD",4315,"KRN",.402,0)
.402
"BLD",4315,"KRN",.403,0)
.403
"BLD",4315,"KRN",.5,0)
.5
"BLD",4315,"KRN",.84,0)
.84
"BLD",4315,"KRN",3.6,0)
3.6
"BLD",4315,"KRN",3.8,0)
3.8
"BLD",4315,"KRN",9.2,0)
9.2
"BLD",4315,"KRN",9.8,0)
9.8
"BLD",4315,"KRN",9.8,"NM",0)
^9.68A^9^9
"BLD",4315,"KRN",9.8,"NM",1,0)
DG53528P^^0^B31750362
"BLD",4315,"KRN",9.8,"NM",2,0)
DGCV^^0^B28139305
"BLD",4315,"KRN",9.8,"NM",3,0)
DGCV1^^0^B34930273
"BLD",4315,"KRN",9.8,"NM",4,0)
DGRPC2^^0^B35866354
"BLD",4315,"KRN",9.8,"NM",5,0)
DPTLK^^0^B61319326
"BLD",4315,"KRN",9.8,"NM",6,0)
VADPT0^^0^B12457338
"BLD",4315,"KRN",9.8,"NM",7,0)
VADPT4^^0^B28024676
"BLD",4315,"KRN",9.8,"NM",8,0)
DGRPE^^0^B42166135
"BLD",4315,"KRN",9.8,"NM",9,0)
DGRP7^^0^B15145821
"BLD",4315,"KRN",9.8,"NM","B","DG53528P",1)

"BLD",4315,"KRN",9.8,"NM","B","DGCV",2)

"BLD",4315,"KRN",9.8,"NM","B","DGCV1",3)

"BLD",4315,"KRN",9.8,"NM","B","DGRP7",9)

"BLD",4315,"KRN",9.8,"NM","B","DGRPC2",4)

"BLD",4315,"KRN",9.8,"NM","B","DGRPE",8)

"BLD",4315,"KRN",9.8,"NM","B","DPTLK",5)

"BLD",4315,"KRN",9.8,"NM","B","VADPT0",6)

"BLD",4315,"KRN",9.8,"NM","B","VADPT4",7)

"BLD",4315,"KRN",19,0)
19
"BLD",4315,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",4315,"KRN",19,"NM",1,0)
DG REGISTRATION MENU^^2
"BLD",4315,"KRN",19,"NM",2,0)
DG CV STATUS^^0
"BLD",4315,"KRN",19,"NM","B","DG CV STATUS",2)

"BLD",4315,"KRN",19,"NM","B","DG REGISTRATION MENU",1)

"BLD",4315,"KRN",19.1,0)
19.1
"BLD",4315,"KRN",101,0)
101
"BLD",4315,"KRN",409.61,0)
409.61
"BLD",4315,"KRN",771,0)
771
"BLD",4315,"KRN",870,0)
870
"BLD",4315,"KRN",8989.51,0)
8989.51
"BLD",4315,"KRN",8989.52,0)
8989.52
"BLD",4315,"KRN",8994,0)
8994
"BLD",4315,"KRN","B",.4,.4)

"BLD",4315,"KRN","B",.401,.401)

"BLD",4315,"KRN","B",.402,.402)

"BLD",4315,"KRN","B",.403,.403)

"BLD",4315,"KRN","B",.5,.5)

"BLD",4315,"KRN","B",.84,.84)

"BLD",4315,"KRN","B",3.6,3.6)

"BLD",4315,"KRN","B",3.8,3.8)

"BLD",4315,"KRN","B",9.2,9.2)

"BLD",4315,"KRN","B",9.8,9.8)

"BLD",4315,"KRN","B",19,19)

"BLD",4315,"KRN","B",19.1,19.1)

"BLD",4315,"KRN","B",101,101)

"BLD",4315,"KRN","B",409.61,409.61)

"BLD",4315,"KRN","B",771,771)

"BLD",4315,"KRN","B",870,870)

"BLD",4315,"KRN","B",8989.51,8989.51)

"BLD",4315,"KRN","B",8989.52,8989.52)

"BLD",4315,"KRN","B",8994,8994)

"BLD",4315,"QUES",0)
^9.62^1^1
"BLD",4315,"QUES",1,0)
POS1
"BLD",4315,"QUES",1,1)
PAO^3.5:"EMZ"
"BLD",4315,"QUES",1,"A")
POST INSTALL DEVICE NAME:
"BLD",4315,"QUES",1,"M")
S DIR("S")="I $I(IO)'=0"
"BLD",4315,"QUES",1,"Q")
Device name to print a listing of vets who could not be evaluated. 
"BLD",4315,"QUES","B","POS1",1)

"BLD",4315,"REQB",0)
^9.611^5^5
"BLD",4315,"REQB",1,0)
DG*5.3*342^2
"BLD",4315,"REQB",2,0)
DG*5.3*498^2
"BLD",4315,"REQB",3,0)
DG*5.3*505^2
"BLD",4315,"REQB",4,0)
DG*5.3*507^2
"BLD",4315,"REQB",5,0)
DG*5.3*522^2
"BLD",4315,"REQB","B","DG*5.3*342",1)

"BLD",4315,"REQB","B","DG*5.3*498",2)

"BLD",4315,"REQB","B","DG*5.3*505",3)

"BLD",4315,"REQB","B","DG*5.3*507",4)

"BLD",4315,"REQB","B","DG*5.3*522",5)

"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^n^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
5.3^DG
"FIA",2,2)
1
"FIA",2,2,.327)

"FIA",2,2,.5295)

"FIA",2,2,.5296)

"INI")
PRE^DG53528P
"INIT")
POST^DG53528P
"IX",2,2,"ACVCOM",0)
2^ACVCOM^Update Combat Vet Eligibility End Date^MU^^R^^I^2^^^^^A
"IX",2,2,"ACVCOM",.1,0)
^^11^11^3030613^
"IX",2,2,"ACVCOM",.1,1,0)
This multi-level MUMPS x-ref will trigger an update to the Combat Vet 
"IX",2,2,"ACVCOM",.1,2,0)
Eligibility End Date field under the following conditions:
"IX",2,2,"ACVCOM",.1,3,0)
  1) Service Separation Date [Last] is precise and > 2981111 AND EITHER
"IX",2,2,"ACVCOM",.1,4,0)
  2) Combat To Date is after 11/11/98 OR
"IX",2,2,"ACVCOM",.1,5,0)
     Persian Gulf To Date is after 11/11/98 OR
"IX",2,2,"ACVCOM",.1,6,0)
     Somalia To Date is after 11/11/98 OR
"IX",2,2,"ACVCOM",.1,7,0)
     Yugoslavia To Date is after 11/11/98
"IX",2,2,"ACVCOM",.1,8,0)
 
"IX",2,2,"ACVCOM",.1,9,0)
The Combat vet field will be set to the Service Separation Date + 2 
"IX",2,2,"ACVCOM",.1,10,0)
years, and will only be updated if information in these fields has 
"IX",2,2,"ACVCOM",.1,11,0)
changed.
"IX",2,2,"ACVCOM",1)
D SETCV^DGCV(DA,X2(1))
"IX",2,2,"ACVCOM",1.4)
S X=$$CVELIG^DGCV(DA)
"IX",2,2,"ACVCOM",2)
D DELCV^DGCV(DA)
"IX",2,2,"ACVCOM",2.4)
I '$$CVELIG^DGCV(DA) S X=1
"IX",2,2,"ACVCOM",11.1,0)
^.114IA^9^9
"IX",2,2,"ACVCOM",11.1,1,0)
1^F^2^.327^^^F
"IX",2,2,"ACVCOM",11.1,2,0)
2^F^2^.5294^^^F
"IX",2,2,"ACVCOM",11.1,3,0)
3^F^2^.322021^^^F
"IX",2,2,"ACVCOM",11.1,4,0)
4^F^2^.322018^^^F
"IX",2,2,"ACVCOM",11.1,5,0)
5^F^2^.322012^^^F
"IX",2,2,"ACVCOM",11.1,6,0)
6^F^2^.5291^^^F
"IX",2,2,"ACVCOM",11.1,7,0)
7^F^2^.322019^^^F
"IX",2,2,"ACVCOM",11.1,8,0)
8^F^2^.322016^^^F
"IX",2,2,"ACVCOM",11.1,9,0)
9^F^2^.32201^^^F
"KRN",19,185,-1)
2^1
"KRN",19,185,0)
DG REGISTRATION MENU^Registration Menu^^M^.5^^^^^^^5^y
"KRN",19,185,10,0)
^19.01IP^33^26
"KRN",19,185,10,33,0)
11143
"KRN",19,185,10,33,"^")
DG CV STATUS
"KRN",19,185,"U")
REGISTRATION MENU
"KRN",19,11143,-1)
0^2
"KRN",19,11143,0)
DG CV STATUS^Combat Vet Status Report^^R^^^^^^^^REGISTRATION
"KRN",19,11143,1,0)
^^2^2^3030722^
"KRN",19,11143,1,1,0)
The option will create a report listing veterans awarded Combat Vet 
"KRN",19,11143,1,2,0)
status for a specified date range.
"KRN",19,11143,25)
RPT2^DGCV1
"KRN",19,11143,"U")
COMBAT VET STATUS REPORT
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
528^3031022
"QUES","POS1",0)
PAO^3.5:"EMZ"
"QUES","POS1","?")
Device name to print a listing of vets who could not be evaluated. 
"QUES","POS1","A")
POST INSTALL DEVICE NAME:
"QUES","POS1","M")
S DIR("S")="I $I(IO)'=0"
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","DG53528P")
0^1^B31750362
"RTN","DG53528P",1,0)
DG53528P ;ALB/ERC - COMBAT VET PRE & POSTINSTALLS ;7/22/03
"RTN","DG53528P",2,0)
 ;;5.3;Registration;**528**; Aug 13, 1993
"RTN","DG53528P",3,0)
 ;
"RTN","DG53528P",4,0)
PRE ;add 5 new entries to the INCONSISTENT DATA ELEMENTS file (#38.6)
"RTN","DG53528P",5,0)
 ;to alert users that critical dates for the determination of CV
"RTN","DG53528P",6,0)
 ;status are either imprecise or missing
"RTN","DG53528P",7,0)
 ;
"RTN","DG53528P",8,0)
 ;first check to see if patch already installed - if so do not
"RTN","DG53528P",9,0)
 ;add these new entries
"RTN","DG53528P",10,0)
 I $$PATCH^XPDUTL("DG*5.3*528") Q
"RTN","DG53528P",11,0)
 N DGK,DGWP
"RTN","DG53528P",12,0)
 K XPDABORT
"RTN","DG53528P",13,0)
 F DGK=67:1:71 I $D(^DGIN(38.6,DGK)) Q:$G(XPDABORT)=2  D
"RTN","DG53528P",14,0)
 . D BMES^XPDUTL(" ** Internal Entry # "_DGK_" already exists in file #38.6, contact NVS **")
"RTN","DG53528P",15,0)
 . S XPDABORT=2
"RTN","DG53528P",16,0)
 I $G(XPDABORT)'=2 D
"RTN","DG53528P",17,0)
 . D BMES^XPDUTL("  >> Adding new entries into the INCONSISTENT DATA ELEMENTS file (#38.6).")
"RTN","DG53528P",18,0)
 . D ADD
"RTN","DG53528P",19,0)
 Q
"RTN","DG53528P",20,0)
ADD ;set up FDA arrays for the addition of new entries in 38.6
"RTN","DG53528P",21,0)
 N DG,DG67,DG68,DG69,DG70,DG71,DGERR,DGFDA,DGIEN,DGWORD,DGX
"RTN","DG53528P",22,0)
 D SET
"RTN","DG53528P",23,0)
 F DGX=DG67,DG68,DG69,DG70,DG71 D
"RTN","DG53528P",24,0)
 . K DGFDA
"RTN","DG53528P",25,0)
 . S DGFDA(38.6,"+1,",.01)=$P(DGX,U)
"RTN","DG53528P",26,0)
 . S DGFDA(38.6,"+1,",2)=$P(DGX,U,2)
"RTN","DG53528P",27,0)
 . S DGFDA(38.6,"+1,",50)="DGWP"
"RTN","DG53528P",28,0)
 . S DGWP(1,0)=DGWORD
"RTN","DG53528P",29,0)
 . I $D(DGFDA) D UPD
"RTN","DG53528P",30,0)
 Q
"RTN","DG53528P",31,0)
UPD ;call UPDATE^DIE
"RTN","DG53528P",32,0)
 S DGIEN(1)=$P(DGX,U,3)
"RTN","DG53528P",33,0)
 D UPDATE^DIE("E","DGFDA","DGIEN","DGERR")
"RTN","DG53528P",34,0)
 I $D(DGERR) D BMES^XPDUTL("   >>> ERROR! "_$P($G(DGX),U)_" not added to file #38.6"),MES^XPDUTL(DGERR("DIERR",1)_": "_DGERR("DIERR",1,"TEXT",1)) Q
"RTN","DG53528P",35,0)
 D BMES^XPDUTL("      "_$P($G(DGX),U)_" successfully added.")
"RTN","DG53528P",36,0)
 Q
"RTN","DG53528P",37,0)
SET ;set the entry field values into variables
"RTN","DG53528P",38,0)
 N DGA,DGB
"RTN","DG53528P",39,0)
 S DGA="NO CV, CHECK "
"RTN","DG53528P",40,0)
 S DGB="Imprecise or Missing"
"RTN","DG53528P",41,0)
 S DGWORD="Combat Vet status cannot be determined if critical dates are missing or imprecise."
"RTN","DG53528P",42,0)
 S DG67=DGA_"SERVICE SEP DATE^SERVICE SEPARATION DATE [LAST] "_DGB_"^"_67
"RTN","DG53528P",43,0)
 S DG68=DGA_"COMBAT TO DATE^COMBAT TO DATE "_DGB_"^"_68
"RTN","DG53528P",44,0)
 S DG69=DGA_"YUGOSLAV TO DATE^YUGOSLAVIA TO DATE "_DGB_"^"_69
"RTN","DG53528P",45,0)
 S DG70=DGA_"SOMALIA TO DATE^SOMALIA TO DATE "_DGB_"^"_70
"RTN","DG53528P",46,0)
 S DG71=DGA_"PERS GULF TO DATE^PERSIAN GULF TO DATE "_DGB_"^"_71
"RTN","DG53528P",47,0)
 Q
"RTN","DG53528P",48,0)
 ;
"RTN","DG53528P",49,0)
POST ;post install routine for Combat Veteran - will loop through the
"RTN","DG53528P",50,0)
 ;Patient file and populate field .5295 (Combat Veteran End Date)
"RTN","DG53528P",51,0)
 ;for any veterans who are eligible (.5296 will be also stuffed with
"RTN","DG53528P",52,0)
 ;the current date in SERCV^DGCV and DELCV^DGCV)
"RTN","DG53528P",53,0)
 N DFN,DG,DGDONE,ZTSAVE
"RTN","DG53528P",54,0)
 D POST1 Q:DGDONE
"RTN","DG53528P",55,0)
 D POSTQ
"RTN","DG53528P",56,0)
 Q
"RTN","DG53528P",57,0)
POST1 ;check to see if process already finished, already started or currently 
"RTN","DG53528P",58,0)
 ;running
"RTN","DG53528P",59,0)
 N DGMSG,DGSTAT,DGTASK
"RTN","DG53528P",60,0)
 S DGDONE=0
"RTN","DG53528P",61,0)
 I '$D(^XTMP("DGCV")) Q
"RTN","DG53528P",62,0)
 I $G(^XTMP("DGCV","DONE"))=1 D  Q
"RTN","DG53528P",63,0)
 . S DGMSG="COMBAT VET INITIAL SEEDING COMPLETED ON PREVIOUS INSTALL. EXITING"
"RTN","DG53528P",64,0)
 . D BMES^XPDUTL(.DGMSG)
"RTN","DG53528P",65,0)
 . S DGDONE=1
"RTN","DG53528P",66,0)
 I $G(DGREQ)'=1 K ^XTMP("DGCV")
"RTN","DG53528P",67,0)
 S DGTASK=$G(^XTMP("DGCV","TASK"))
"RTN","DG53528P",68,0)
 I DGTASK'="" D
"RTN","DG53528P",69,0)
 . S DGSTAT=$$ACTIVE(DGTASK)
"RTN","DG53528P",70,0)
 . I DGSTAT>0 S DGMSG="Task: "_DGTASK_" is currently running, cannot start duplicate process." D
"RTN","DG53528P",71,0)
 . . D BMES^XPDUTL(.DGMSG)
"RTN","DG53528P",72,0)
 . . S DGDONE=1
"RTN","DG53528P",73,0)
 Q
"RTN","DG53528P",74,0)
ACTIVE(DGTASK) ;check to see if task already running
"RTN","DG53528P",75,0)
 ;  DGTASK - taskman task number
"RTN","DG53528P",76,0)
 ;  output - (1,0) is the task running?
"RTN","DG53528P",77,0)
 N DGSTAT,Y,ZTSK
"RTN","DG53528P",78,0)
 S DGSTAT=0,ZTSK=DGTASK
"RTN","DG53528P",79,0)
 D STAT^%ZTLOAD
"RTN","DG53528P",80,0)
 S Y=ZTSK(1)
"RTN","DG53528P",81,0)
 I Y=0 S DGSTAT=-1
"RTN","DG53528P",82,0)
 I ",1,2,"[(","_Y_",") S DGSTAT=1
"RTN","DG53528P",83,0)
 I ",3,5,"[(","_Y_",") S DGSTAT=0
"RTN","DG53528P",84,0)
 Q DGSTAT
"RTN","DG53528P",85,0)
POSTQ ;queue the task
"RTN","DG53528P",86,0)
 N DGTXT,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSK
"RTN","DG53528P",87,0)
 S ZTRTN="LOOP^DG53528P",ZTIO="",ZTDTH=$$NOW^XLFDT()
"RTN","DG53528P",88,0)
 S ZTDESC="COMBAT VET INITIAL DATA SEEDING"
"RTN","DG53528P",89,0)
 S ZTSAVE("POS1")="",ZTSAVE("XPDQUES")=""
"RTN","DG53528P",90,0)
 S ZTSAVE("*")=""
"RTN","DG53528P",91,0)
 D NOW^%DTC
"RTN","DG53528P",92,0)
 S ZTDTH=%
"RTN","DG53528P",93,0)
 D ^%ZTLOAD
"RTN","DG53528P",94,0)
 S ^XTMP("DGCV","TASK")=ZTSK
"RTN","DG53528P",95,0)
 S DGTXT(1)="Task: "_ZTSK_" queued."
"RTN","DG53528P",96,0)
 D BMES^XPDUTL(.DGTXT)
"RTN","DG53528P",97,0)
 Q
"RTN","DG53528P",98,0)
LOOP ;
"RTN","DG53528P",99,0)
 N DGC,DGT,X,X1,X2,ZTSTOP
"RTN","DG53528P",100,0)
 S (DFN,DGC,DGT,ZTSTOP)=0
"RTN","DG53528P",101,0)
 S DFN=+$G(^XTMP("DGCV","DFN"))
"RTN","DG53528P",102,0)
 S X1=DT,X2=30 D C^%DTC
"RTN","DG53528P",103,0)
 S ^XTMP("DGCV",0)=X_"^"_$$DT^XLFDT_"^Combat Veteran Initial Patient File Seeding - DG*5.3*528"
"RTN","DG53528P",104,0)
 I '$D(^XTMP("DGCV","START")) S ^XTMP("DGCV","START")=$$FMTE^XLFDT($$NOW^XLFDT(),"5P")
"RTN","DG53528P",105,0)
 I $G(XPDQUES("POS1","B"))]"" S IOP=$G(XPDQUES("POS1","B")) ;result of install question
"RTN","DG53528P",106,0)
 I $G(IOP)]"" D
"RTN","DG53528P",107,0)
 . S IOP=$O(^%ZIS(1,"B",IOP,""))
"RTN","DG53528P",108,0)
 . S IOP="`"_IOP
"RTN","DG53528P",109,0)
 I $G(IOP)]"" D
"RTN","DG53528P",110,0)
 . S ^XTMP("DGCV","DEVICE")=IOP
"RTN","DG53528P",111,0)
 . I '$D(^XTMP("DGCV",0)) D
"RTN","DG53528P",112,0)
 . . N X,X1,X2
"RTN","DG53528P",113,0)
 . . S X1=DT,X2=60 D C^%DTC
"RTN","DG53528P",114,0)
 . . S ^XTMP("DGCV",0)=X_"^"_$$DT^XLFDT_"^Combat Veteran Initial Patient File Seeding - DG*5.3*528"
"RTN","DG53528P",115,0)
 ;
"RTN","DG53528P",116,0)
 F  S DFN=$O(^DPT(DFN)) Q:+DFN=0!(ZTSTOP)  D
"RTN","DG53528P",117,0)
 . S DG=0
"RTN","DG53528P",118,0)
 . S DGT=DGT+1 ;count of records checked
"RTN","DG53528P",119,0)
 . S ^XTMP("DGCV","DFN")=DFN ;current DFN
"RTN","DG53528P",120,0)
 . I (DGT#1000=0),($$S^%ZTLOAD) S ZTSTOP=1 ;is there a stop request?
"RTN","DG53528P",121,0)
 . S DG=$$CVELIG^DGCV(DFN)
"RTN","DG53528P",122,0)
 . I +$G(DG)=1 D
"RTN","DG53528P",123,0)
 . . S DGSRV=$$GET1^DIQ(2,DFN_",",.327,"I")
"RTN","DG53528P",124,0)
 . . I $G(DGSRV)']"" Q
"RTN","DG53528P",125,0)
 . . D SETCV^DGCV(DFN,DGSRV)
"RTN","DG53528P",126,0)
 . . S DGC=DGC+1
"RTN","DG53528P",127,0)
 . S ^XTMP("DGCV","COUNT")=DGT_"^"_DGC
"RTN","DG53528P",128,0)
 . Q:$G(DGSRV)']""
"RTN","DG53528P",129,0)
 . I $G(DG)=0!($G(DG)=1)!($G(DG)']"") Q
"RTN","DG53528P",130,0)
 . D RPT^DGCV1(DG)
"RTN","DG53528P",131,0)
 S $P(^XTMP("DGCV","START"),U,2)=$$FMTE^XLFDT($$NOW^XLFDT(),"5P")
"RTN","DG53528P",132,0)
 I ZTSTOP D  Q
"RTN","DG53528P",133,0)
 . N DGMSG,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","DG53528P",134,0)
 . S XMSUB="COMBAT VET INITIAL DATA SEEDING"
"RTN","DG53528P",135,0)
 . S DGMSG(1)="Patch DG*5.3*528"
"RTN","DG53528P",136,0)
 . S DGMSG(2)="Combat Veteran Initial database seeding was interrupted by"
"RTN","DG53528P",137,0)
 . S DGMSG(3)="user request.  Please re-start by using the following command at the"
"RTN","DG53528P",138,0)
 . S DGMSG(4)="programmer prompt."
"RTN","DG53528P",139,0)
 . S DGMSG(5)="D REQUE^DG53528P"
"RTN","DG53528P",140,0)
 . D BMES^XPDUTL(.DGMSG)
"RTN","DG53528P",141,0)
 . D SENDMSG^XMXAPI(DUZ,XMSUB,"DGMSG",DUZ)
"RTN","DG53528P",142,0)
 D REPORT^DGCV1
"RTN","DG53528P",143,0)
 N DGMSG
"RTN","DG53528P",144,0)
 S DGMSG(1)=""
"RTN","DG53528P",145,0)
 S DGMSG(2)="   Patient file seeding completed...."
"RTN","DG53528P",146,0)
 S XMSUB="COMBAT VET INITIAL DATA SEEDING - DG*5.3*528"
"RTN","DG53528P",147,0)
 D SENDMSG^XMXAPI(DUZ,XMSUB,"DGMSG",DUZ)
"RTN","DG53528P",148,0)
 D BMES^XPDUTL(.DGMSG)
"RTN","DG53528P",149,0)
 S ^XTMP("DGCV","DONE")=1
"RTN","DG53528P",150,0)
 K DG,DGCOM,DGCVDT,DGGULF,DGSOM,DGSRV,DGYUG
"RTN","DG53528P",151,0)
 Q
"RTN","DG53528P",152,0)
REQUE ;requeue initial seeding if interrupted
"RTN","DG53528P",153,0)
 N DGREQ
"RTN","DG53528P",154,0)
 S DGREQ=1
"RTN","DG53528P",155,0)
 D POST
"RTN","DG53528P",156,0)
 Q
"RTN","DGCV")
0^2^B28139305
"RTN","DGCV",1,0)
DGCV ;ALB/DW,ERC - COMBAT VET ELIGIBILTY; 06/05/2003
"RTN","DGCV",2,0)
 ;;5.3;Registration;**528**; Aug 13, 1993
"RTN","DGCV",3,0)
 ;
"RTN","DGCV",4,0)
CVELIG(DFN) ;
"RTN","DGCV",5,0)
 ;API will determine whether or not this vetern needs to have CV End
"RTN","DGCV",6,0)
 ;Date set.  If this determination cannot be done due to imprecise
"RTN","DGCV",7,0)
 ;or missing dates, it returns which dates need editing.
"RTN","DGCV",8,0)
 ;Input:
"RTN","DGCV",9,0)
 ;  DFN - Patient file IEN
"RTN","DGCV",10,0)
 ;Output
"RTN","DGCV",11,0)
 ;  RESULT
"RTN","DGCV",12,0)
 ;    0 - CV End Date should not be updated
"RTN","DGCV",13,0)
 ;    1 - CV End Date should be updated
"RTN","DGCV",14,0)
 ;  If critical dates are imprecise return the following
"RTN","DGCV",15,0)
 ;    A - CV End Date should not be updated, imprecise Service Sep date
"RTN","DGCV",16,0)
 ;    B - CV End Date should not be updated, imprecise Combat To date
"RTN","DGCV",17,0)
 ;    C - CV End Date should not be updated, imprecise Yugoslavia To date
"RTN","DGCV",18,0)
 ;    D - CV End Date should not be updated, imprecise Somalia To date
"RTN","DGCV",19,0)
 ;    E - CV End Date should not be updated, imprecise Pers Gulf To date
"RTN","DGCV",20,0)
 ;  If the Service Sep Date is missing, return the following so that it 
"RTN","DGCV",21,0)
 ;  will appear on the Imprecise/Missing Date Report
"RTN","DGCV",22,0)
 ;    F - missing Service Sep Date
"RTN","DGCV",23,0)
 ;  If critical dates are missing but the corresponding indicator fields
"RTN","DGCV",24,0)
 ;  are set to 'YES' return the following
"RTN","DGCV",25,0)
 ;    G - missing Combat To Date, but Combat Indicated? = 'Yes'
"RTN","DGCV",26,0)
 ;    H - missing PG To Date, but PG Indicated? = 'Yes'
"RTN","DGCV",27,0)
 ;    I - missing Somalia To Date, but Somalia Indicator = 'Yes'
"RTN","DGCV",28,0)
 ;    J - missing Yugoslavia To Date, but Yugoslavia Indicator = 'Yes'
"RTN","DGCV",29,0)
 ;
"RTN","DGCV",30,0)
 N DG1,DG2,I,RESULT
"RTN","DGCV",31,0)
 N DGCOM,DGCVDT,DGCVFLG,DGGULF,DGSOM,DGSRV,DGYUG
"RTN","DGCV",32,0)
 S (DG1,DG2,RESULT)=0
"RTN","DGCV",33,0)
 ;
"RTN","DGCV",34,0)
 ;get combat related data from VistA
"RTN","DGCV",35,0)
 N DGARR,DGERR
"RTN","DGCV",36,0)
 D GETS^DIQ(2,DFN_",",".327;.322012;.322018;.322021;.5294;.5295","I","DGARR","DGERR")
"RTN","DGCV",37,0)
 D PARSE
"RTN","DGCV",38,0)
 ;
"RTN","DGCV",39,0)
 S DG1=$$CHKSSD(DFN) ;check SSD for imprecise or missing
"RTN","DGCV",40,0)
 ;
"RTN","DGCV",41,0)
 S DGDATE=$G(DGCOM)_"^"_$G(DGYUG)_"^"_$G(DGSOM)_"^"_$G(DGGULF)
"RTN","DGCV",42,0)
 S DG2=$$CHKREST(DGDATE) ;check other "TO" dates for imprecise or missing
"RTN","DGCV",43,0)
 S RESULT=$$RES(DG1,$G(DG2))
"RTN","DGCV",44,0)
 Q RESULT
"RTN","DGCV",45,0)
 ;
"RTN","DGCV",46,0)
RES(DG1,DG2) ;determine the final RESULT code from DGRES1 & DGRES2
"RTN","DGCV",47,0)
 ;if SSD evaluates to earlier than 11/11/98, can't set CV End Date
"RTN","DGCV",48,0)
 I DG1=0!($G(DG2)=0) Q 0
"RTN","DGCV",49,0)
 ;if SSD is 1
"RTN","DGCV",50,0)
 I DG1=1,($G(DG2)=1!($G(DG2)']"")) Q 1
"RTN","DGCV",51,0)
 I DG1=1,($G(DG2)=0) Q 0
"RTN","DGCV",52,0)
 I DG1=1 Q DG2
"RTN","DGCV",53,0)
 ;if SSD is imprecise or missing
"RTN","DGCV",54,0)
 I DG1'=1,($G(DG2)=1) S DG2=""
"RTN","DGCV",55,0)
 Q DG1_DG2
"RTN","DGCV",56,0)
 ;
"RTN","DGCV",57,0)
CHKDATE(DGDATE,I) ;check to see if date is imprecise or missing
"RTN","DGCV",58,0)
 ;if imprecise check to see if the imprecision prevents CV evaluation
"RTN","DGCV",59,0)
 ;if not imprecise check to see if after 11/11/98
"RTN","DGCV",60,0)
 N RES
"RTN","DGCV",61,0)
 S RES=0
"RTN","DGCV",62,0)
 I $G(DGDATE)']"" D  Q RES
"RTN","DGCV",63,0)
 . S RES=$S(I=0:"F",I=1:"G",I=2:"H",I=3:"I",I=4:"J",1:"")
"RTN","DGCV",64,0)
 I $E(DGDATE,6,7)="00" D
"RTN","DGCV",65,0)
 . I I=0 I DGDATE>2981111 S RES="A" Q
"RTN","DGCV",66,0)
 . I DGDATE=2980000!(DGDATE=2981100) D  Q
"RTN","DGCV",67,0)
 . . S RES=$S(I=0:"A",I=1:"B",I=2:"C",I=3:"D",I=4:"E",1:"")
"RTN","DGCV",68,0)
 Q:RES="A" RES
"RTN","DGCV",69,0)
 I DGDATE>2981111 S RES=1
"RTN","DGCV",70,0)
 Q RES
"RTN","DGCV",71,0)
 ;
"RTN","DGCV",72,0)
SETCV(DFN,DGSRV) ;calculate CV end date
"RTN","DGCV",73,0)
 K DGCVEDT
"RTN","DGCV",74,0)
 N DGFDA
"RTN","DGCV",75,0)
 I $E(DGSRV,4,7)="0229" S $E(DGSRV,4,7)="0228"
"RTN","DGCV",76,0)
 S DGCVEDT=DGSRV+20000
"RTN","DGCV",77,0)
 S DGCVEDT=$$FMADD^XLFDT(DGCVEDT,-1)
"RTN","DGCV",78,0)
 I DGCVEDT=$G(DGCVDT) Q
"RTN","DGCV",79,0)
 S DGFDA(2,DFN_",",.5295)=DGCVEDT
"RTN","DGCV",80,0)
 S DGFDA(2,DFN_",",.5296)=DT ;stuff DT into CV Date Edited field
"RTN","DGCV",81,0)
 D FILE^DIE(,"DGFDA")
"RTN","DGCV",82,0)
 Q
"RTN","DGCV",83,0)
 ;
"RTN","DGCV",84,0)
CVEDT(DFN,DGDT) ;Provide Combat Vet Eligibility End Date, if eligible
"RTN","DGCV",85,0)
 ;Supported DBIA #4156
"RTN","DGCV",86,0)
 ;Input:  DFN - Patient file IEN
"RTN","DGCV",87,0)
 ;        DGDT - Treatment date (optional), DT is default
"RTN","DGCV",88,0)
 ;Output :RESULT=(1,0,-1)^End Date (if populated, otherwise null)^CV
"RTN","DGCV",89,0)
 ;               Eligible on DGDT(1,0)^is patient eligible on input date?
"RTN","DGCV",90,0)
 ;      (piece 1)  1 - qualifies as a CV
"RTN","DGCV",91,0)
 ;                 0 - does not qualify as a CV
"RTN","DGCV",92,0)
 ;                -1 - bad DFN
"RTN","DGCV",93,0)
 ;      (piece 3)  1 - vet was eligible on date specified (or DT)      
"RTN","DGCV",94,0)
 ;                 0 - vet was not eligible on date specified (or DT)
"RTN","DGCV",95,0)
 ;
"RTN","DGCV",96,0)
 N RESULT
"RTN","DGCV",97,0)
 S RESULT=""
"RTN","DGCV",98,0)
 I $G(DFN)="" Q -1
"RTN","DGCV",99,0)
 I '$D(^DPT(DFN)) Q -1
"RTN","DGCV",100,0)
 I $G(DGDT)']"" S DGDT=DT
"RTN","DGCV",101,0)
 S RESULT=$$GET1^DIQ(2,DFN_",",.5295,"I")
"RTN","DGCV",102,0)
 I $G(RESULT)']"" Q 0
"RTN","DGCV",103,0)
 S RESULT=$S(DGDT<RESULT:RESULT_"^1",1:RESULT_"^0")
"RTN","DGCV",104,0)
 S RESULT=$S($G(RESULT):1_"^"_RESULT,1:0)
"RTN","DGCV",105,0)
 Q RESULT
"RTN","DGCV",106,0)
 ;
"RTN","DGCV",107,0)
PARSE ;GETS^DIQ called in CVELIG - in this subroutine stuff results into array
"RTN","DGCV",108,0)
 S DGSRV=$G(DGARR(2,DFN_",",.327,"I"))
"RTN","DGCV",109,0)
 S DGCOM=$G(DGARR(2,DFN_",",.5294,"I")) ;Combat To Date
"RTN","DGCV",110,0)
 S DGGULF=$G(DGARR(2,DFN_",",.322012,"I")) ;Persian Gulf To Date
"RTN","DGCV",111,0)
 S DGSOM=$G(DGARR(2,DFN_",",.322018,"I")) ;Somalia To Date
"RTN","DGCV",112,0)
 S DGYUG=$G(DGARR(2,DFN_",",.322021,"I")) ;Yugoslavia To Date
"RTN","DGCV",113,0)
 S DGCVDT=$G(DGARR(2,DFN_",",.5295,"I")) ;CV End Date
"RTN","DGCV",114,0)
 Q
"RTN","DGCV",115,0)
 ;
"RTN","DGCV",116,0)
CHKSSD(DFN) ;check the Serv Sep Date [Last]
"RTN","DGCV",117,0)
 ;
"RTN","DGCV",118,0)
 ;  Output - RESULT
"RTN","DGCV",119,0)
 ;    1 - Date is present and after 11/11/1998
"RTN","DGCV",120,0)
 ;    0 - Date is present but before 11/11/1998
"RTN","DGCV",121,0)
 ;    A - Date is imprecise & either is or potentially is after 11/11/98
"RTN","DGCV",122,0)
 ;    F - Date is missing
"RTN","DGCV",123,0)
 N DG1
"RTN","DGCV",124,0)
 I $G(DGSRV)']"" Q "F"
"RTN","DGCV",125,0)
 S DG1=$$CHKDATE(DGSRV,0)
"RTN","DGCV",126,0)
 I $G(DG1)']"" S DG1=0
"RTN","DGCV",127,0)
 Q DG1
"RTN","DGCV",128,0)
 ;
"RTN","DGCV",129,0)
CHKREST(DGDATE) ;
"RTN","DGCV",130,0)
 N DG3,DG4,DGDT,DGFLG,DGLEN,DGQ,DGR,DGRES,DGX
"RTN","DGCV",131,0)
 S (DG3,DG4,DGR,DGRES)=""
"RTN","DGCV",132,0)
 S DGQ=0 ;loop terminator
"RTN","DGCV",133,0)
 S DGFLG=0 ;flag to indicate that one of the dates is missing
"RTN","DGCV",134,0)
 F DGX=1:1:4 D
"RTN","DGCV",135,0)
 . S DGDT=$P(DGDATE,U,DGX) D
"RTN","DGCV",136,0)
 . . I $G(DGDT)']"" S DGFLG=1 ;Q
"RTN","DGCV",137,0)
 . . S DG4=$$CHKDATE(DGDT,DGX)
"RTN","DGCV",138,0)
 . . I $G(DG4)'=0 S DG3=$G(DG3)_$G(DG4)
"RTN","DGCV",139,0)
 S DGLEN=$L(DG3)
"RTN","DGCV",140,0)
 S DGQ=0
"RTN","DGCV",141,0)
 F DGX=1:1:DGLEN S DGCHAR=$E(DG3,DGX) D  Q:DGQ=1
"RTN","DGCV",142,0)
 . I DGCHAR=1 S DG3=DGCHAR,DGQ=1 Q
"RTN","DGCV",143,0)
 . I "BCDE"[DGCHAR S DGR=DGR_DGCHAR,DGQ=2
"RTN","DGCV",144,0)
 I DGQ=1 Q 1
"RTN","DGCV",145,0)
 I DGQ=2 Q $E(DGR)
"RTN","DGCV",146,0)
 I DGFLG=1 S DGRES=$$MISS(DFN,DGLEN,DG3)
"RTN","DGCV",147,0)
 Q DGRES
"RTN","DGCV",148,0)
 ;
"RTN","DGCV",149,0)
MISS(DFN,DGLEN,DGRES) ;there is at least one missing date, and in order to 
"RTN","DGCV",150,0)
 ;return a RESULT of a missing date, need to check to see if the 
"RTN","DGCV",151,0)
 ;corresponding indicator field is set to 'YES'
"RTN","DGCV",152,0)
 N DGARR,DGCHAR,DGERR,DGQ,DGR,DGX
"RTN","DGCV",153,0)
 N DGCIND,DGPGIND,DGSIND,DGYIND
"RTN","DGCV",154,0)
 S (DGCHAR,DGQ,DGR)=0
"RTN","DGCV",155,0)
 D GETS^DIQ(2,DFN_",",".32201;.322019;.322016;.5291","I","DGARR","DGERR")
"RTN","DGCV",156,0)
 S DGCIND=$G(DGARR(2,DFN_",",.5291,"I")) ;Combat Service Indicated
"RTN","DGCV",157,0)
 S DGYIND=$G(DGARR(2,DFN_",",.322019,"I")) ;Yugo service indicated
"RTN","DGCV",158,0)
 S DGSIND=$G(DGARR(2,DFN_",",.322016,"I")) ;Somalia service indicated
"RTN","DGCV",159,0)
 S DGPGIND=$G(DGARR(2,DFN_",",.32201,"I")) ;Pers Gulf service indicated
"RTN","DGCV",160,0)
 F DGX=1:1:DGLEN S DGCHAR=$E(DGRES,DGX) D  Q:DGQ=1
"RTN","DGCV",161,0)
 . I DGCHAR="G",($G(DGCIND)="Y") S DGR="G",DGQ=1 Q
"RTN","DGCV",162,0)
 . I DGCHAR="H",($G(DGYIND)="Y") S DGR="H",DGQ=1 Q
"RTN","DGCV",163,0)
 . I DGCHAR="I",($G(DGSIND)="Y") S DGR="I",DGQ=1 Q
"RTN","DGCV",164,0)
 . I DGCHAR="J",($G(DGPGIND)="Y") S DGR="J"
"RTN","DGCV",165,0)
 Q DGR
"RTN","DGCV",166,0)
DELCV(DFN) ;called by the Kill logic of the ACVCOM cross reference
"RTN","DGCV",167,0)
 ;if $$CVELIG^DGCV returns a 0 the CV End Date should be deleted
"RTN","DGCV",168,0)
 ;because this would indicate that fields have been changed and
"RTN","DGCV",169,0)
 ;CV eligibility is no longer appropriate
"RTN","DGCV",170,0)
 N DGCV,DGFDA
"RTN","DGCV",171,0)
 K DGCVFLG
"RTN","DGCV",172,0)
 S DGCVFLG=0
"RTN","DGCV",173,0)
 S DGCV=$$GET1^DIQ(2,DFN_",",.5295,"I")
"RTN","DGCV",174,0)
 I $G(DGCV)']"" Q
"RTN","DGCV",175,0)
 S DGCVFLG=1
"RTN","DGCV",176,0)
 S DGFDA(2,DFN_",",.5295)="@"
"RTN","DGCV",177,0)
 S DGFDA(2,DFN_",",.5296)=DT ;stuffs date into CV Date Edited field
"RTN","DGCV",178,0)
 D FILE^DIE(,"DGFDA")
"RTN","DGCV",179,0)
 Q
"RTN","DGCV1")
0^3^B34930273
"RTN","DGCV1",1,0)
DGCV1 ;ALB/ERC - COMBAT VET REPORTS; 07/10/2003
"RTN","DGCV1",2,0)
 ;;5.3;Registration;**528**; Aug 13, 1993
"RTN","DGCV1",3,0)
 ;
"RTN","DGCV1",4,0)
 ;first report is built during the initial seeding, and called by
"RTN","DGCV1",5,0)
 ;POST^DG53528P
"RTN","DGCV1",6,0)
RPT(DG) ;if, during initial seeding, a veteran could not be evaluated
"RTN","DGCV1",7,0)
 ;for CV eligibility because of an imprecise date the veteran will be
"RTN","DGCV1",8,0)
 ;added to the appropriate ^XTMP global
"RTN","DGCV1",9,0)
 ;  Input: DG - the code corresponding to the missing or imprecise date
"RTN","DGCV1",10,0)
 ;
"RTN","DGCV1",11,0)
 K VADM
"RTN","DGCV1",12,0)
 I $G(DG)']"" Q
"RTN","DGCV1",13,0)
 S ^XTMP("DGCV","REPORT",DFN,DG)=""
"RTN","DGCV1",14,0)
 Q
"RTN","DGCV1",15,0)
REPORT ;if there are veterans in the ^XTMP globals, create a report.
"RTN","DGCV1",16,0)
 I '$D(^XTMP("DGCV","REPORT")) Q
"RTN","DGCV1",17,0)
 N ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK,ZUSR,POP,X,ERR
"RTN","DGCV1",18,0)
 K IOP,%ZIS
"RTN","DGCV1",19,0)
 I $G(XPDQUES("POS1","B"))]"" S ZTIO=$G(XPDQUES("POS1","B")) ;result of install question
"RTN","DGCV1",20,0)
 I $G(ZTIO)']"" S IOP=$G(^XTMP("DGCV","DEVICE"))
"RTN","DGCV1",21,0)
 S ZTSAVE("*")=""
"RTN","DGCV1",22,0)
 S ZTRTN="PRINT^DGCV1",ZTDESC="IMPRECISE COMBAT DATE REPORT"
"RTN","DGCV1",23,0)
 D ^%ZTLOAD
"RTN","DGCV1",24,0)
EXIT ;
"RTN","DGCV1",25,0)
 K XPDQUES
"RTN","DGCV1",26,0)
 Q
"RTN","DGCV1",27,0)
PRINT ;print report
"RTN","DGCV1",28,0)
 N PAGE,QUIT
"RTN","DGCV1",29,0)
 S PAGE=1
"RTN","DGCV1",30,0)
 S QUIT=""
"RTN","DGCV1",31,0)
 D HDR
"RTN","DGCV1",32,0)
 N DGF,DGFD,DGLN,DGNAM,DGSSN
"RTN","DGCV1",33,0)
 S (DGF,DFN)=""
"RTN","DGCV1",34,0)
 F  S DFN=$O(^XTMP("DGCV","REPORT",DFN)) Q:DFN']""  D
"RTN","DGCV1",35,0)
 . Q:'$D(^DPT(DFN))
"RTN","DGCV1",36,0)
 . S (DGNAM,DGSSN)=""
"RTN","DGCV1",37,0)
 . D DEM(DFN)
"RTN","DGCV1",38,0)
 . I $G(DGNAM)']""!($G(DGSSN)']"") Q
"RTN","DGCV1",39,0)
 . S DGLN=DGNAM_"^"_DGSSN
"RTN","DGCV1",40,0)
 . N DGC
"RTN","DGCV1",41,0)
 . F  S DGF=$O(^XTMP("DGCV","REPORT",DFN,DGF)) Q:DGF']""!(QUIT)  D
"RTN","DGCV1",42,0)
 . . N DGFF
"RTN","DGCV1",43,0)
 . . I $L(DGF)=1 S DGFF=DGF S DGC=1 D SET
"RTN","DGCV1",44,0)
 . . I $L(DGF)=2 D
"RTN","DGCV1",45,0)
 . . . S DGFF=$E(DGF,1),DGC=1 D SET
"RTN","DGCV1",46,0)
 . . . S DGFF=$E(DGF,2),DGC=2 D SET
"RTN","DGCV1",47,0)
 W !,">>>>END OF REPORT"
"RTN","DGCV1",48,0)
 Q
"RTN","DGCV1",49,0)
SET ;
"RTN","DGCV1",50,0)
 I DGFF["A"!(DGFF["F") S DGFD="SERVICE SEP"
"RTN","DGCV1",51,0)
 I DGFF["B"!(DGFF["G") S DGFD="COMBAT TO"
"RTN","DGCV1",52,0)
 I DGFF["C"!(DGFF["H") S DGFD="YUGOSLAVIA TO"
"RTN","DGCV1",53,0)
 I DGFF["D"!(DGFF["I") S DGFD="SOMALIA TO"
"RTN","DGCV1",54,0)
 I DGFF["E"!(DGFF["J") S DGFD="PERS GULF TO"
"RTN","DGCV1",55,0)
 I $G(DGFD)']"" Q
"RTN","DGCV1",56,0)
 S DGFD=DGFD_" DATE "_$S("ABCDE"[DGFF:"IMPRECISE",1:"MISSING")
"RTN","DGCV1",57,0)
 S DGLN=$S(DGC=1:DGLN_"^"_DGFD,DGC=2:"^^"_DGFD,1:"")
"RTN","DGCV1",58,0)
 D ADD(DGLN)
"RTN","DGCV1",59,0)
 Q
"RTN","DGCV1",60,0)
DEM(DFN) ;
"RTN","DGCV1",61,0)
 D DEM^VADPT
"RTN","DGCV1",62,0)
 S DGNAM=$G(VADM(1))
"RTN","DGCV1",63,0)
 S DGSSN=$P($G(VADM(2)),U,2)
"RTN","DGCV1",64,0)
 Q
"RTN","DGCV1",65,0)
ADD(DGLN) ;add the line to the report
"RTN","DGCV1",66,0)
 N DGX
"RTN","DGCV1",67,0)
 I $P(DGLN,U)]"" W !
"RTN","DGCV1",68,0)
 W !?2,$P(DGLN,U),?39,$P(DGLN,U,2),?52,$P(DGLN,U,3)
"RTN","DGCV1",69,0)
 I $E(IOST,1,2)="C-",($Y>(IOSL-4)) D
"RTN","DGCV1",70,0)
 . D PAUSE
"RTN","DGCV1",71,0)
 . Q:QUIT
"RTN","DGCV1",72,0)
 . D TOP
"RTN","DGCV1",73,0)
 I '$E(IOST,1,2)="C-",($Y>(IOSL-2)) D TOP
"RTN","DGCV1",74,0)
 Q
"RTN","DGCV1",75,0)
 ;
"RTN","DGCV1",76,0)
TOP ;
"RTN","DGCV1",77,0)
 W @IOF
"RTN","DGCV1",78,0)
 D HDR
"RTN","DGCV1",79,0)
 Q
"RTN","DGCV1",80,0)
 ;
"RTN","DGCV1",81,0)
HDR ;print header for report
"RTN","DGCV1",82,0)
 W !!?5,"REPORT OF UPDATES REQUIRED FOR COMBAT VET STATUS" S Y=DT D DD^%DT W ?62,"Date: ",Y
"RTN","DGCV1",83,0)
 W !,?62,"Page: ",PAGE
"RTN","DGCV1",84,0)
 W !!?5,"The following patients could not be evaluated for Combat Veteran"
"RTN","DGCV1",85,0)
 W !?5,"Eligibility status due to having imprecise or missing dates."
"RTN","DGCV1",86,0)
 W !!!?2,"Patient Name",?39,"SSN",?52,"Date to be updated"
"RTN","DGCV1",87,0)
 W !?2,"===================================",?39,"===========",?52,"=========================="
"RTN","DGCV1",88,0)
 S PAGE=PAGE+1
"RTN","DGCV1",89,0)
 Q
"RTN","DGCV1",90,0)
 ;
"RTN","DGCV1",91,0)
RPT2 ;second report is option DG CV STATUS, a report of what veterans were
"RTN","DGCV1",92,0)
 ;assigned CV status during a specified date range
"RTN","DGCV1",93,0)
 N DIR,DIRUT,X1,X2
"RTN","DGCV1",94,0)
 S DIR(0)="DAO^,"_DT
"RTN","DGCV1",95,0)
 S X1=DT,X2=-7 D C^%DTC
"RTN","DGCV1",96,0)
 S Y=X D DD^%DT
"RTN","DGCV1",97,0)
 S DIR("A")="BEGINNING DATE: "
"RTN","DGCV1",98,0)
 S DIR("B")=Y
"RTN","DGCV1",99,0)
 S DIR("?")="ENTER THE BEGINNING DATE FOR THE REPORT"
"RTN","DGCV1",100,0)
 S DIR("??")="^W !,""A BEGINNING AND AN END DATE MUST BE ENTERED FOR THIS REPORT"""
"RTN","DGCV1",101,0)
 D ^DIR
"RTN","DGCV1",102,0)
 Q:$D(DIRUT)
"RTN","DGCV1",103,0)
 S DGBEG=Y
"RTN","DGCV1",104,0)
 S DIR(0)="DAO^"_DGBEG_","_DT
"RTN","DGCV1",105,0)
 S Y=DT D DD^%DT S DGDT=Y
"RTN","DGCV1",106,0)
 S DIR("B")=DGDT
"RTN","DGCV1",107,0)
 S DIR("A")="ENDING DATE: "
"RTN","DGCV1",108,0)
 S DIR("?")="ENTER THE ENDING DATE FOR THE REPORT"
"RTN","DGCV1",109,0)
 D ^DIR
"RTN","DGCV1",110,0)
 Q:$D(DIRUT)
"RTN","DGCV1",111,0)
 S DGEND=Y
"RTN","DGCV1",112,0)
 D REPORT2(DGBEG,DGEND)
"RTN","DGCV1",113,0)
 Q
"RTN","DGCV1",114,0)
 ;
"RTN","DGCV1",115,0)
REPORT2(DGBEG,DGEND) ;
"RTN","DGCV1",116,0)
 I $G(DGBEG)']""!($G(DGEND)']"") W !!,"DATE RANGE NOT SET.  EXITING"  Q
"RTN","DGCV1",117,0)
 N ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK,ZUSR,POP,X,ERR
"RTN","DGCV1",118,0)
 K IOP,%ZIS
"RTN","DGCV1",119,0)
 S %ZIS="Q" D ^%ZIS G:POP EXIT2
"RTN","DGCV1",120,0)
 I $D(IO("Q")) D  Q
"RTN","DGCV1",121,0)
 . S (ZTSAVE("DGBEG"),ZTSAVE("DGEND"))=""
"RTN","DGCV1",122,0)
 . S ZTRTN="PRINT2^DGCV1",ZTDESC="COMBAT VET DATE EDITED REPORT"
"RTN","DGCV1",123,0)
 . D ^%ZTLOAD
"RTN","DGCV1",124,0)
 . D ^%ZISC,HOME^%ZIS
"RTN","DGCV1",125,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED!",1:"REQUEST CANCELLED!")
"RTN","DGCV1",126,0)
 D PRINT2
"RTN","DGCV1",127,0)
EXIT2 D ^%ZISC,HOME^%ZIS
"RTN","DGCV1",128,0)
 ;Q +G(ZTSK)
"RTN","DGCV1",129,0)
 Q
"RTN","DGCV1",130,0)
PRINT2 ;
"RTN","DGCV1",131,0)
 N DGLN,PAGE,QUIT
"RTN","DGCV1",132,0)
 S QUIT=""
"RTN","DGCV1",133,0)
 U IO
"RTN","DGCV1",134,0)
 I $E(IOST,1,2)="C-" W @IOF
"RTN","DGCV1",135,0)
 S DGLN=0
"RTN","DGCV1",136,0)
 S PAGE=1
"RTN","DGCV1",137,0)
 D HDR2
"RTN","DGCV1",138,0)
 D DATA
"RTN","DGCV1",139,0)
 I DGLN=0 D
"RTN","DGCV1",140,0)
 . W !!!,?30,"No data to report."
"RTN","DGCV1",141,0)
 . I $E(IOST,1,2)="C-" D PAUSE
"RTN","DGCV1",142,0)
 D EXIT2
"RTN","DGCV1",143,0)
 Q
"RTN","DGCV1",144,0)
HDR2 ;
"RTN","DGCV1",145,0)
 N DG1,DG2,Y
"RTN","DGCV1",146,0)
 S Y=DGBEG D DD^%DT S DG1=Y
"RTN","DGCV1",147,0)
 S Y=DGEND D DD^%DT S DG2=Y
"RTN","DGCV1",148,0)
 W !!?15,"COMBAT VETERAN STATUS CHANGED REPORT"
"RTN","DGCV1",149,0)
 S Y=DT D DD^%DT W ?60,"Date: ",Y
"RTN","DGCV1",150,0)
 W !?20,DG1_" TO "_DG2
"RTN","DGCV1",151,0)
 W ?60,"Page: "_PAGE
"RTN","DGCV1",152,0)
 W !!!?3,"NAME",?41,"SSN",?63,"CV END DATE",!?41,"PRIORITY GROUP"
"RTN","DGCV1",153,0)
 W !,?3,"===================================",?41,"=================",?63,"============"
"RTN","DGCV1",154,0)
 S PAGE=PAGE+1
"RTN","DGCV1",155,0)
 Q
"RTN","DGCV1",156,0)
DATA ;
"RTN","DGCV1",157,0)
 N DGENR,DFN,DGNAM,DGSSN,DGDT,DGX,QUIT,Y
"RTN","DGCV1",158,0)
 S QUIT=""
"RTN","DGCV1",159,0)
 Q:$G(DGBEG)']""!($G(DGEND)']"")
"RTN","DGCV1",160,0)
 S DGX=DGBEG-1
"RTN","DGCV1",161,0)
 F  S DGX=$O(^DPT("E",DGX)) Q:DGX'>0!(DGX>DGEND)  D
"RTN","DGCV1",162,0)
 . S DFN=""
"RTN","DGCV1",163,0)
 . F  S DFN=$O(^DPT("E",DGX,DFN)) Q:DFN']""!(QUIT)  D
"RTN","DGCV1",164,0)
 . . Q:'$D(^DPT(DFN))
"RTN","DGCV1",165,0)
 . . D DEM^VADPT
"RTN","DGCV1",166,0)
 . . Q:'$D(VADM)
"RTN","DGCV1",167,0)
 . . S DGNAM=VADM(1)
"RTN","DGCV1",168,0)
 . . S DGSSN=$P(VADM(2),U,2)
"RTN","DGCV1",169,0)
 . . S DGDT=$$GET1^DIQ(2,DFN_",",.5295,"E")
"RTN","DGCV1",170,0)
 . . I $G(DGDT)']"" S DGDT="DELETED!!!!"
"RTN","DGCV1",171,0)
 . . ;S DGENR=$$PRIORITY^DGENA(DFN)
"RTN","DGCV1",172,0)
 . . S DGENR=$$PRIOR(DFN)
"RTN","DGCV1",173,0)
 . . I $G(DGENR)']"" S DGENR="NONE"
"RTN","DGCV1",174,0)
 . . D ADD2
"RTN","DGCV1",175,0)
 Q
"RTN","DGCV1",176,0)
PRIOR(DFN) ;gets priority and sub group
"RTN","DGCV1",177,0)
 ;
"RTN","DGCV1",178,0)
 N DGEN,DGIEN,DGSUB
"RTN","DGCV1",179,0)
 ;S DGIEN=$$FINDCUR^DGENA(DFN)
"RTN","DGCV1",180,0)
 ;I $G(DGIEN)']"" Q ""
"RTN","DGCV1",181,0)
 I $$GET^DGENA($$FINDCUR^DGENA(DFN),.DGEN) D
"RTN","DGCV1",182,0)
 . S DGENR=$G(DGEN("PRIORITY"))
"RTN","DGCV1",183,0)
 . S DGSUB=$G(DGEN("SUBGRP"))
"RTN","DGCV1",184,0)
 . I $G(DGSUB)]"" S DGENR=DGENR_$S(DGSUB=1:"a",DGSUB=3:"c",DGSUB=5:"e",DGSUB=7:"g",1:"")
"RTN","DGCV1",185,0)
 Q $G(DGENR)
"RTN","DGCV1",186,0)
PAUSE ;
"RTN","DGCV1",187,0)
 N DIR,DIRUT,X,Y
"RTN","DGCV1",188,0)
 F  Q:$Y>(IOSL-3)  W !
"RTN","DGCV1",189,0)
 S DIR(0)="E"
"RTN","DGCV1",190,0)
 D ^DIR
"RTN","DGCV1",191,0)
 I ('(+Y))!($D(DIRUT)) S QUIT=1
"RTN","DGCV1",192,0)
 Q
"RTN","DGCV1",193,0)
ADD2 ;
"RTN","DGCV1",194,0)
 I $E(IOST,1,2)="C-",($Y>(IOSL-6)) D
"RTN","DGCV1",195,0)
 . D PAUSE
"RTN","DGCV1",196,0)
 . Q:QUIT
"RTN","DGCV1",197,0)
 . D TOP2
"RTN","DGCV1",198,0)
 I '$E(IOST,1,2)="C-",($Y>(IOSL-2)) D TOP2
"RTN","DGCV1",199,0)
 I '(QUIT) D LINE
"RTN","DGCV1",200,0)
 Q
"RTN","DGCV1",201,0)
TOP2 ;
"RTN","DGCV1",202,0)
 W @IOF
"RTN","DGCV1",203,0)
 D HDR2
"RTN","DGCV1",204,0)
 Q
"RTN","DGCV1",205,0)
LINE ;add a line to the report
"RTN","DGCV1",206,0)
 W !?3,DGNAM,?41,DGSSN,?63,DGDT,!?41,DGENR,!
"RTN","DGCV1",207,0)
 S DGLN=1
"RTN","DGCV1",208,0)
 Q
"RTN","DGRP7")
0^9^B15145821
"RTN","DGRP7",1,0)
DGRP7 ;ALB/MRL - REGISTRATION SCREEN 7/ELIGIBILITY INFORMATION ;06 JUN 88@2300
"RTN","DGRP7",2,0)
 ;;5.3;Registration;**528**;Aug 13, 1993
"RTN","DGRP7",3,0)
 N DGCASH,DGMBCK
"RTN","DGRP7",4,0)
 S DGRPS=7 D H^DGRPU F I=0,.29,.3,.31,.32,.36,.362,"TYPE","VET" S DGRP(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","DGRP7",5,0)
 S (DGRPW,Z)=1 D WW^DGRPV W "       Patient Type: " S DGRPX=DGRP("TYPE"),Z=$S($D(^DG(391,+DGRPX,0)):$P(^(0),"^",1),1:DGRPU),Z1=36 D WW1^DGRPV W "Veteran: " S DGRPX=DGRP("VET"),(X,Z1)=1 D YN
"RTN","DGRP7",6,0)
 W !?9,"Svc Connected: " S DGRPX=DGRP(.3),X=1,Z1=33,DGNA=$S($P(DGRP("VET"),"^",1)="Y":0,1:1) D YN2 W "SC Percent: " W:$E(Z)'="Y" "N/A" I $E(Z)="Y" D
"RTN","DGRP7",7,0)
 .S X=$P(DGRPX,"^",2) W $S(X="":"UNANSWERED",1:+X_"%")
"RTN","DGRP7",8,0)
 .S X=$P(DGRP(.3),"^",1),DGNA=$S(X'="Y":1,1:0)
"RTN","DGRP7",9,0)
 .W !?19,"P&T: " S X=4,Z1=31 D YN2 W "Unemployable: " S X=5,Z1=0 D YN2
"RTN","DGRP7",10,0)
 .W !?9,"SC Award Date: ",$$DATENP^DG1010P0(DGRPX,12)
"RTN","DGRP7",11,0)
 W !?9,"Rated Incomp.: " S X=$$YN2^DG1010P0(DGRP(.29),12) W X D:X["Y"
"RTN","DGRP7",12,0)
 .W "   Date (CIVIL): ",$$DATENP^DG1010P0(DGRP(.29),2)
"RTN","DGRP7",13,0)
 .W "    Date (VA): ",$$DATENP^DG1010P0(DGRP(.29),1)
"RTN","DGRP7",14,0)
 S DGRPX=DGRP(.31) W !?10,"Claim Number: ",$S($P(DGRPX,"^",3)]"":$P(DGRPX,"^",3),1:DGRPU),!?11,"Folder Loc.: ",$$POINT^DG1010P0(DGRP(.31),4,4)
"RTN","DGRP7",15,0)
 S Z=2 D WW^DGRPV ;monetary benefits section
"RTN","DGRP7",16,0)
 W "   Aid & Attendance: " S Z=$$YN2^DG1010P0(DGRP(.362),12) D MBCK S Z1=33 D WW1^DGRPV
"RTN","DGRP7",17,0)
 W "Housebound: ",$$YN2^DG1010P0(DGRP(.362),13) D MBCK
"RTN","DGRP7",18,0)
 W !?12,"VA Pension: " S Z=$$YN2^DG1010P0(DGRP(.362),14) D MBCK S Z1=30 D WW1^DGRPV
"RTN","DGRP7",19,0)
 W "VA Disability: ",$$YN2^DG1010P0(DGRP(.3),11) D MBCK
"RTN","DGRP7",20,0)
 W !?4,"Total Check Amount: " S X=$$DISP^DG1010P0(DGRP(.362),20,'DGMBCK) W $S(X:"$"_X,1:X)
"RTN","DGRP7",21,0)
 W !?10,"GI Insurance: " S Z=$$YN2^DG1010P0(DGRP(.362),17) S Z1=37 D WW1^DGRPV
"RTN","DGRP7",22,0)
 W "Amount: " S X=$$DISP^DG1010P0(DGRP(.362),6) W $S(X:"$"_X,1:X)
"RTN","DGRP7",23,0)
 S Z=3 D WW^DGRPV S DGRPE=+DGRP(.36),Z=$S($D(^DIC(8,+DGRPE,0)):$P(^(0),"^",1),1:DGRPU)
"RTN","DGRP7",24,0)
 W "  Primary Elig Code: ",Z D AAC1^DGLOCK2 I DGAAC(1)]"" W !?8,"Agency/Country: ",$S($D(^DIC(35,+$P(DGRP(.3),"^",9),0)):$P(^(0),"^",1),1:DGRPU)
"RTN","DGRP7",25,0)
 W !?4,"Other Elig Code(s): " S I1="" F I=0:0 S I=$O(^DPT("AEL",DFN,I)) Q:'I  I $D(^DIC(8,+I,0)),I'=DGRPE S I1=I1+1 W:I1>1 !?24 W $P(^(0),"^",1)
"RTN","DGRP7",26,0)
 W:'I1 "NO ADDITIONAL ELIGIBILITIES IDENTIFIED"
"RTN","DGRP7",27,0)
 S DGRPX=+$P(DGRP(.32),"^",3) W !?5,"Period of Service: ",$S($D(^DIC(21,+DGRPX,0)):$P(^(0),"^",1),1:DGRPU)
"RTN","DGRP7",28,0)
 D ^DGYZODS G:'DGODS CONT S DGRPX=$S($D(^DPT(DFN,"ODS")):^("ODS"),1:"") W !?6,"Recalled to Duty: ",$S($P(DGRPX,"^",2)=1:"FROM NATIONAL GUARDS",$P(DGRPX,"^",2)=2:"FROM RESERVES",$P(DGRPX,"^",2)=0:"NO",1:DGRPU)
"RTN","DGRP7",29,0)
 W !?18,"Rank: ",$S($D(^DIC(25002.1,+$P(DGRPX,"^",3),0)):$P(^(0),"^",1),1:DGRPU)
"RTN","DGRP7",30,0)
CONT ;
"RTN","DGRP7",31,0)
 ;display Combat Vet Eiligibility, if present
"RTN","DGRP7",32,0)
 N DGCV
"RTN","DGRP7",33,0)
 S DGCV=$$CVEDT^DGCV(DFN) I +$G(DGCV)=1 D
"RTN","DGRP7",34,0)
 . W !,"<3.1> Combat Vet Elig.: "
"RTN","DGRP7",35,0)
 . W $S($P(DGCV,U,3)=1:"ELIGIBLE",$P(DGCV,U,3)=0:"EXPIRED",1:"")
"RTN","DGRP7",36,0)
 . I $P($G(DGCV),U,2)]"" D
"RTN","DGRP7",37,0)
 . . S Y=$P(DGCV,U,2) D DD^%DT
"RTN","DGRP7",38,0)
 . . W ",  End Date: "_Y
"RTN","DGRP7",39,0)
 ;
"RTN","DGRP7",40,0)
 ;print sc disabilities (per patient)
"RTN","DGRP7",41,0)
 W ! S Z=4 D WW^DGRPV W " Service Connected Conditions as stated by applicant" S X="",$P(X,"-",52)="" W !?4,X
"RTN","DGRP7",42,0)
 W !?4 S I3=0 F I=0:0 S I=$O(^DPT(DFN,.373,I)) Q:'I  S I1=$P(^(I,0),"^",1)_" ("_+$P(^(0),"^",2)_"%), ",I3=I W:(79-$X)<$L(I1) !?4 W I1
"RTN","DGRP7",43,0)
 W:'I3 ?4,"NONE STATED"
"RTN","DGRP7",44,0)
Q K DGAAC,DGNA,DGODS,DGRP,DGRPE,DGRPX,I,I1,I2,I3,X,X1,Z,Z1
"RTN","DGRP7",45,0)
 G ^DGRPP
"RTN","DGRP7",46,0)
YN S Z=$S($P(DGRPX,"^",X)="Y":"YES",$P(DGRPX,"^",X)="N":"NO",$P(DGRPX,"^",X)="U":"UNKNOWN",1:"UNANSWERED") D WW1^DGRPV
"RTN","DGRP7",47,0)
 Q
"RTN","DGRP7",48,0)
YN2 S Z=$S(DGNA:"N/A",$P(DGRPX,"^",X)="Y":"YES",$P(DGRPX,"^",X)="N":"NO",$P(DGRPX,"^",X)="U":"UNKNOWN",1:"UNANSWERED") D WW1^DGRPV
"RTN","DGRP7",49,0)
 Q
"RTN","DGRP7",50,0)
MBCK ;flag for any MB Y/N fields = yes
"RTN","DGRP7",51,0)
 S DGMBCK=$S($G(DGMBCK):1,(X="Y"):1,1:0)
"RTN","DGRP7",52,0)
 Q
"RTN","DGRPC2")
0^4^B35866354
"RTN","DGRPC2",1,0)
DGRPC2 ;ALB/MRL/SCK - CHECK CONSISTENCY OF PATIENT DATA (CONT) ;25 AUG 88@0901
"RTN","DGRPC2",2,0)
 ;;5.3;Registration;**45,69,108,121,205,218,342,387,470,467,489,505,507,528**;Aug 13, 1993
"RTN","DGRPC2",3,0)
 ;
"RTN","DGRPC2",4,0)
43 ;
"RTN","DGRPC2",5,0)
44 ;
"RTN","DGRPC2",6,0)
45 ;
"RTN","DGRPC2",7,0)
46 ;
"RTN","DGRPC2",8,0)
47 I DGVT S X=42,DGD=DGP(.362) F I=12:1:14 S X=X+1 I DGCHK[(","_X_","),($P(DGD,"^",I)="Y"),($P(DGD,"^",20)="") D COMB
"RTN","DGRPC2",9,0)
 S DGLST=$S(DGCHK[",47,":47,DGCHK[",46,":46,DGCHK[",45,":45,DGCHK[",44,":44,1:DGLST)
"RTN","DGRPC2",10,0)
 D NEXT G @DGLST
"RTN","DGRPC2",11,0)
48 I DGVT S DGD=DGP(.362) I DGCHK[(",48,"),($P(DGD,"^",17)="Y"),($P(DGD,"^",6)="") S X=48 D COMB
"RTN","DGRPC2",12,0)
 D NEXT G @DGLST
"RTN","DGRPC2",13,0)
49 ;
"RTN","DGRPC2",14,0)
50 ; insurance checks
"RTN","DGRPC2",15,0)
 I DGCHK[",49,"!(DGCHK[",50,") D  S DGLST=$S(DGCHK["50":50,1:49)
"RTN","DGRPC2",16,0)
 . N COV,INS,X
"RTN","DGRPC2",17,0)
 . S X=0,COV=$S($P(DGP(.31),"^",11)="Y":1,1:0)
"RTN","DGRPC2",18,0)
 . D ALL^IBCNS1(DFN,"INS",2,DT)
"RTN","DGRPC2",19,0)
 . I COV,'$G(INS(0)) S X=49 ; yes, but none
"RTN","DGRPC2",20,0)
 . I 'COV,$G(INS(0)) S X=50 ; not yes, but some
"RTN","DGRPC2",21,0)
 . I DGCHK[(","_X_",") D COMB
"RTN","DGRPC2",22,0)
 D NEXT G @DGLST
"RTN","DGRPC2",23,0)
51 D NEXT G @DGLST ; 51 disabled
"RTN","DGRPC2",24,0)
 S X=$S($D(^DIC(21,+$P(DGP(.32),"^",3),0)):$P(^(0),"^",3),1:"")
"RTN","DGRPC2",25,0)
 I X="Z"&($P(DGP(.32),"^",5)'=7)&($P(DGP(.32),"^",10)'=7)&($P(DGP(.32),"^",15)'=7)!($P(DGP(.32),"^",5)=7&(X'="Z")) S X=51 D COMB
"RTN","DGRPC2",26,0)
 ;
"RTN","DGRPC2",27,0)
52 I $P(DGP(.31),"^",11)']"" S X=52 D COMB ;automatically on
"RTN","DGRPC2",28,0)
 D NEXT G @DGLST
"RTN","DGRPC2",29,0)
53 I $P(DGP(.311),"^",15)']"" S X=53 D COMB ;automatically on
"RTN","DGRPC2",30,0)
 D NEXT G @DGLST
"RTN","DGRPC2",31,0)
54 ;
"RTN","DGRPC2",32,0)
55 ;BELOW IS USED BY BOTH 54 & 55
"RTN","DGRPC2",33,0)
 S DGLST=$S(DGCHK["55":55,1:54)
"RTN","DGRPC2",34,0)
 I $G(^DPT(DFN,.35)),(^(.35)<+($E(DT,1,3)_"0000")) D NEXT G @DGLST ; patient died before current year
"RTN","DGRPC2",35,0)
 N DGE S DGE=+$O(^DIC(8.1,"B","SERVICE CONNECTED 50% to 100%",0))
"RTN","DGRPC2",36,0)
 I $P($G(^DPT(DFN,.3)),U,2)'<50!($P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),U,9)=DGE) D NEXT G @DGLST ;50-100% SC
"RTN","DGRPC2",37,0)
 S DGPTYP=$G(^DG(391,+DGP("TYPE"),"S")),DGISYR=$E(DT,1,3)-1_"0000" I '$P(DGPTYP,"^",8)&('$P(DGPTYP,"^",9)) K DGPTYP,DGISYR D NEXT G @DGLST ; screens 8 and 9 off
"RTN","DGRPC2",38,0)
 D ALL^DGMTU21(DFN,"VSD",DT,"IP")
"RTN","DGRPC2",39,0)
 I '$P(DGPTYP,"^",8)!(DGCHK'["54") G JUST55 ; screen 8 off OR JUST 55 IN CHK
"RTN","DGRPC2",40,0)
 S DGFL=0 I $D(DGREL("S")),($$SSN^DGMTU1(+DGREL("S"))']"") S DGFL=1
"RTN","DGRPC2",41,0)
 I 'DGFL F I=0:0 S I=$O(DGREL("D",I)) Q:'I  I $$SSN^DGMTU1(+DGREL("D",I))']"" S DGFL=1 Q
"RTN","DGRPC2",42,0)
 I DGFL S X=54 D COMB
"RTN","DGRPC2",43,0)
JUST55 I DGCHK'["55" D NEXT G @DGLST
"RTN","DGRPC2",44,0)
 S DGLST=55
"RTN","DGRPC2",45,0)
 I '$P(DGPTYP,"^",9) D NEXT G @DGLST ; screen 9 off
"RTN","DGRPC2",46,0)
 D TOT^DGRP9(.DGINC) S DGFL=0
"RTN","DGRPC2",47,0)
 F DGD="V","S","D" I $D(DGTOT(DGD)) F I=8:1:17 I $P(DGTOT(DGD),"^",I)]"" S DGFL=1 Q
"RTN","DGRPC2",48,0)
 I 'DGFL N DGAPD,DG55 D  I 'DGAPD&('DG55)  S X=55 D COMB
"RTN","DGRPC2",49,0)
 . S DGAPD=+$$LST^DGMTU(DFN),DGAPD=+$P($G(^DGMT(408.31,+DGAPD,0)),U,11)
"RTN","DGRPC2",50,0)
 . S DG55=$$CHECK55(DFN) ; **507, Additional Income Checks
"RTN","DGRPC2",51,0)
 D NEXT G @DGLST
"RTN","DGRPC2",52,0)
56 I DGVT S DGD=DGP(.3) I DGCHK[(",56,"),($P(DGD,"^",11)="Y"),($P(DGP(.362),"^",20)="") S X=56 D COMB
"RTN","DGRPC2",53,0)
 D NEXT G END:$S('+DGLST:1,+DGLST=99:1,1:0)
"RTN","DGRPC2",54,0)
57 I $P(DGP(.38),U,1) D
"RTN","DGRPC2",55,0)
 .N X1,X2
"RTN","DGRPC2",56,0)
 .S X1=$P(DGP(.38),U,2)
"RTN","DGRPC2",57,0)
 .S X=$P($G(^DG(43,1,0)),U,46) S X2=$S(X:X,1:365) D C^%DTC
"RTN","DGRPC2",58,0)
 .I X<DT S X=57 D COMB
"RTN","DGRPC2",59,0)
 D NEXT G @DGLST
"RTN","DGRPC2",60,0)
58 ;58 - EC Claim - No Gulf/Som Svc
"RTN","DGRPC2",61,0)
 I $P(DGP(.322),U,13)="Y" D
"RTN","DGRPC2",62,0)
 . I $P(DGP(.322),U,10)="Y"!($P(DGP(.322),U,16)="Y") Q
"RTN","DGRPC2",63,0)
 . S X=58 D COMB
"RTN","DGRPC2",64,0)
 D NEXT G @DGLST
"RTN","DGRPC2",65,0)
59 ;59 - incomplete Catastrophic Disability info
"RTN","DGRPC2",66,0)
 I $$HASCAT^DGENCDA(DFN) D
"RTN","DGRPC2",67,0)
 .I '$P(DGP(.39),"^",2) S X=59 D COMB
"RTN","DGRPC2",68,0)
 D NEXT G @DGLST
"RTN","DGRPC2",69,0)
60 ;60 - Location of agent orange exposure unanswered
"RTN","DGRPC2",70,0)
 I DGVT,$P(DGP(.321),"^",2)="Y",$P(DGP(.321),"^",13)="" S X=60 D COMB
"RTN","DGRPC2",71,0)
 D NEXT G @DGLST
"RTN","DGRPC2",72,0)
61 ;61 - Incomplete Phone Number
"RTN","DGRPC2",73,0)
 I $P(DGP(.13),"^")=""!($P(DGP(.13),"^",2)="") S X=61 D COMB
"RTN","DGRPC2",74,0)
 D NEXT G @DGLST
"RTN","DGRPC2",75,0)
62 ;62 - Missing Emergency Contact Name
"RTN","DGRPC2",76,0)
 I $P(DGP(.33),"^")="" S X=62 D COMB
"RTN","DGRPC2",77,0)
 D NEXT G @DGLST
"RTN","DGRPC2",78,0)
63 ;Confidential Address check
"RTN","DGRPC2",79,0)
 I $P($$CAACT^DGRPCADD(DFN),U) D
"RTN","DGRPC2",80,0)
 .N DGI,DGERR
"RTN","DGRPC2",81,0)
 .S DGERR=0
"RTN","DGRPC2",82,0)
 .F DGI=1,4,5,6 Q:DGERR  I $P(DGP(.141),U,DGI)="" S DGERR=1
"RTN","DGRPC2",83,0)
 .I DGERR S X=63 D COMB
"RTN","DGRPC2",84,0)
 D NEXT G @DGLST
"RTN","DGRPC2",85,0)
64 ;64 - Place of Birth City/State Missing ;**505
"RTN","DGRPC2",86,0)
 I $P(DGP(0),"^",11)=""!($P(DGP(0),"^",12)="") S X=64 D COMB
"RTN","DGRPC2",87,0)
 D NEXT G @DGLST
"RTN","DGRPC2",88,0)
65 ;65 - Mother's Maiden Name Missing ;**505
"RTN","DGRPC2",89,0)
 I $P(DGP(.24),"^",3)="" S X=65 D COMB
"RTN","DGRPC2",90,0)
 D NEXT G @DGLST
"RTN","DGRPC2",91,0)
66 ;66 - Pseudo SSN in use ;**505
"RTN","DGRPC2",92,0)
 I $P(DGP(0),"^",9)["P" S X=66 D COMB
"RTN","DGRPC2",93,0)
 D NEXT G @DGLST
"RTN","DGRPC2",94,0)
67 ;67 - Serv Sep Date [Last] missing or imprecise, patch 528
"RTN","DGRPC2",95,0)
 N DGG
"RTN","DGRPC2",96,0)
 S DGG=$$CVELIG^DGCV(DFN)
"RTN","DGRPC2",97,0)
 I $G(DGG)["A"!($G(DGG)["F") S X=67 D COMB
"RTN","DGRPC2",98,0)
 D NEXT G @DGLST
"RTN","DGRPC2",99,0)
68 ;used for 68-71, for Combat Vet, DG*5.3*528
"RTN","DGRPC2",100,0)
69 ;
"RTN","DGRPC2",101,0)
70 ;
"RTN","DGRPC2",102,0)
71 ;
"RTN","DGRPC2",103,0)
 ;68 - Combat To Date missing or imprecise, patch 528
"RTN","DGRPC2",104,0)
 ;69 - Yugoslavia To Date missing or imprecise, patch 528
"RTN","DGRPC2",105,0)
 ;70 - Somalia To Date missing or imprecise, patch 528
"RTN","DGRPC2",106,0)
 ;71 - Persian Gulf To Date missing or imprecise, patch 528
"RTN","DGRPC2",107,0)
 N DGG
"RTN","DGRPC2",108,0)
 S DGG=$$CVELIG^DGCV(DFN) D
"RTN","DGRPC2",109,0)
 . I DGG["B"!(DGG["G") S X=68 D COMB S DGLST=71 Q
"RTN","DGRPC2",110,0)
 . I DGG["C"!(DGG["H") S X=69 D COMB S DGLST=71 Q
"RTN","DGRPC2",111,0)
 . I DGG["D"!(DGG["I") S X=70 D COMB S DGLST=71 Q
"RTN","DGRPC2",112,0)
 . I DGG["E"!(DGG["J") S X=71 D COMB Q
"RTN","DGRPC2",113,0)
 D NEXT G @DGLST
"RTN","DGRPC2",114,0)
99 ; synonymous with END
"RTN","DGRPC2",115,0)
END I DGNCK S X=99 D COMB
"RTN","DGRPC2",116,0)
 I DGEDCN S DGCON=0 D TIME^DGRPC
"RTN","DGRPC2",117,0)
 K C,C1,C2,DGCD,DGD,DGD1,DGD2,DGDATE,DGDEP,DGCHK,DGFL,DGINC,DGISYR,DGLST,DGMS,DGNCK,DGP,DGPTYP,DGREL,DGSCT,DGT,DGTIME,DGTOT,DGVT,I,I2,I2,J,VAIN,X,X1
"RTN","DGRPC2",118,0)
 G ^DGRPCF
"RTN","DGRPC2",119,0)
 ;
"RTN","DGRPC2",120,0)
COMB S DGCT=DGCT+1,DGER=DGER_X_",",DGLST=X Q
"RTN","DGRPC2",121,0)
 ;
"RTN","DGRPC2",122,0)
NEXT S I=$F(DGCHK,(","_+DGLST_",")),DGLST=+$E(DGCHK,I,999) S:'DGLST DGLST="END" Q
"RTN","DGRPC2",123,0)
FIND F I=DGLST:1:99 I DGCHK[(","_I_",") Q
"RTN","DGRPC2",124,0)
 I DGNCK,(I>17),(I<36) S DGLST=36 G FIND
"RTN","DGRPC2",125,0)
 I I,I<99 S DGLST=I G @(DGLST_$S(DGLST>42:"",DGLST>17:"^DGRPC1",1:"^DGRPC"))
"RTN","DGRPC2",126,0)
 G END
"RTN","DGRPC2",127,0)
 ;
"RTN","DGRPC2",128,0)
CHECK55(DFN) ;Buisness rules for additional 55-INCOME DATA MISSING checks
"RTN","DGRPC2",129,0)
 ;  Modeled from DGMTR checks.
"RTN","DGRPC2",130,0)
 ;  Input  DFN - IEN from PATIENT File #2
"RTN","DGRPC2",131,0)
 ;
"RTN","DGRPC2",132,0)
 ;  Output 1 - If Income check passes additional buisness rules
"RTN","DGRPC2",133,0)
 ;         0 - If Income check fails additional buisness rules
"RTN","DGRPC2",134,0)
 ;
"RTN","DGRPC2",135,0)
 N VAMB,VASV,VA,VADMVT,VAEL,VAINDT,DGRTN,DGMED,DG,DG1,DGWARD,DGSRVC
"RTN","DGRPC2",136,0)
 ;
"RTN","DGRPC2",137,0)
 S DGRTN=0
"RTN","DGRPC2",138,0)
 D MB^VADPT I +VAMB(7) S DGRTN=1 G Q55  ; Check if receiving VA Disability
"RTN","DGRPC2",139,0)
 D SVC^VADPT I +VASV(4) S DGRTN=1 G Q55  ; check if POW status indicated
"RTN","DGRPC2",140,0)
 I +VASV(9),(+VASV(9,1)=3) S DGRTN=1 G Q55  ; Check if Purple Heart Status is Confirmed
"RTN","DGRPC2",141,0)
 D GETS^DIQ(2,DFN_",",".381:.383","I","DGMED")
"RTN","DGRPC2",142,0)
 I $G(DGMED(2,DFN_",",.381,"I")) S DGRTN=1 G Q55  ; Check if eligible for Medicaid
"RTN","DGRPC2",143,0)
 D ADM^VADPT2 ; Check for current admission to DOM ward 
"RTN","DGRPC2",144,0)
 I +$G(VADMVT) D  G:DGRTN Q55
"RTN","DGRPC2",145,0)
 . Q:'$$GET1^DIQ(43,1,16,"I")  ; Has Dom wards?
"RTN","DGRPC2",146,0)
 . S DGWARD=$$GET1^DIQ(405,VADMVT,.06,"I") ; Get ward location
"RTN","DGRPC2",147,0)
 . S DGSRVC=$$GET1^DIQ(42,DGWARD,.03,"I") ; Get ward service
"RTN","DGRPC2",148,0)
 . S:DGSRVC="D" DGRTN=1 ; If ward service is 'D', then return 1
"RTN","DGRPC2",149,0)
 ;
"RTN","DGRPC2",150,0)
 ; Additional checks for 0% SC
"RTN","DGRPC2",151,0)
 D ELIG^VADPT
"RTN","DGRPC2",152,0)
 I +VAEL(3),'$P(VAEL(3),U,2) D  ; Check if service connected with % of zero
"RTN","DGRPC2",153,0)
 . I +VAMB(4) S DGRTN=1 Q  ; Check if receiving a VA pension
"RTN","DGRPC2",154,0)
 . S DG=0 ; Check for secondary eligibilities
"RTN","DGRPC2",155,0)
 . F  S DG=$O(VAEL(1,DG)) Q:'DG  D  Q:DGRTN
"RTN","DGRPC2",156,0)
 . . F DG1=2,4,15,16,17,18 I DG=DG1 S DGRTN=1 Q
"RTN","DGRPC2",157,0)
 ;
"RTN","DGRPC2",158,0)
Q55 D KVAR^VADPT
"RTN","DGRPC2",159,0)
 Q $G(DGRTN)
"RTN","DGRPE")
0^8^B42166135
"RTN","DGRPE",1,0)
DGRPE ;ALB/MRL - REGISTRATIONS EDITS ; 8/11/03 1:27pm
"RTN","DGRPE",2,0)
 ;;5.3;Registration;**32,114,139,169,175,247,190,343,397,342,454,415,489,506,244,547,522,528**;Aug 13, 1993
"RTN","DGRPE",3,0)
 ;
"RTN","DGRPE",4,0)
 ;DGDR contains a string of edits; edit=screen*10+item #
"RTN","DGRPE",5,0)
 ;
"RTN","DGRPE",6,0)
 ;line tag screen*10+item*1000 = continuation line
"RTN","DGRPE",7,0)
 ;
"RTN","DGRPE",8,0)
 I DGRPS=8 D ^DGRPEIS,Q Q  ; family demographic edit...not conventional!!  :)
"RTN","DGRPE",9,0)
 I DGRPS=9 D EDIT9^DGRPEIS2,Q Q  ; income screening data ($$$)
"RTN","DGRPE",10,0)
 I DGRPS=5,DGDR["501," D
"RTN","DGRPE",11,0)
 .I $G(DGPRFLG) D PREG^IBCNBME(DFN) Q
"RTN","DGRPE",12,0)
 .D REG^IBCNBME(DFN)
"RTN","DGRPE",13,0)
 .Q
"RTN","DGRPE",14,0)
 ;-- Tricare screen #15
"RTN","DGRPE",15,0)
 I DGRPS=15 D EDIT^DGRP15,Q Q
"RTN","DGRPE",16,0)
 ;
"RTN","DGRPE",17,0)
 N DGPH,DGPHFLG
"RTN","DGRPE",18,0)
 K DR S (DA,Y)=DFN,DIE="^DPT(",DR="",DGDRS="DR",DGCT=0 G ^DGRPE1:DGRPS>6
"RTN","DGRPE",19,0)
 F I=1:1 S J=$P(DGDR,",",I) Q:J=""  F J1=J,J*1000,J*1000+1,J*1000+2 Q:'$T(@J1)  S DGDRD=$P($T(@J1),";;",2) D S
"RTN","DGRPE",20,0)
 D ^DIE
"RTN","DGRPE",21,0)
 ;check for Combat Vet status
"RTN","DGRPE",22,0)
 I $G(DGCVFLG)=1,($P($$CVEDT^DGCV(DFN),U,2)']"") D
"RTN","DGRPE",23,0)
 . W !!,"**NOTE-Change(s) made in this session deleted the veteran's Combat Vet status!"
"RTN","DGRPE",24,0)
 . S DIR(0)="EA" D ^DIR K DIR
"RTN","DGRPE",25,0)
 I $G(DGPHFLG)>0 D EDITPH1^DGRPLE()
"RTN","DGRPE",26,0)
Q K DA,DIE,DR,DGCT,DGCVFLG,DGDR,DGDRD,DGDRS,DGRPADI,I,J,J1
"RTN","DGRPE",27,0)
 Q
"RTN","DGRPE",28,0)
S I $L(@DGDRS)+$L(DGDRD)<241 S @DGDRS=@DGDRS_DGDRD Q
"RTN","DGRPE",29,0)
 S DGCT=DGCT+1,DGDRS="DR(1,2,"_DGCT_")",@DGDRS=DGDRD Q
"RTN","DGRPE",30,0)
 Q
"RTN","DGRPE",31,0)
101 ;;K DG20NAME;.01;.01///^S X=$$NCEDIT^DPTNAME(DFN,,.DG20NAME);K DG20NAME;.09;.03;
"RTN","DGRPE",32,0)
102 ;;1;
"RTN","DGRPE",33,0)
103 ;;.091;
"RTN","DGRPE",34,0)
104 ;;N FLG S (FLG(1),FLG(2))=1 D EN^DGREGAED(DFN,.FLG);
"RTN","DGRPE",35,0)
105 ;;.12105//NO;S:X="N" Y="@15" S:X="Y" DIE("NO^")="";.1217;I X']"" W !?4,$C(7),"But I need a Start Date for this Temporary Address." S Y=.12105;.1218;.1211;I X']"" W !?4,$C(7),"But I need at least one line of a Temporary address." S Y=.12105;
"RTN","DGRPE",36,0)
111 ;;.14105//NO;S:X="N" Y="@15" S:X="Y" DIE("NO^")="";.1417;I X']"" W !?4,$C(7),"But I need a Start Date." S Y=.14105;.1418;D DR111^DGRPE;.141;I '$P($$CAACT^DGRPCADD(DFN),U,2) W !?4,"But I need at least one active category." S Y=.14105;
"RTN","DGRPE",37,0)
111000 ;;K DR(2,2.141);.1411;I X']"" W !?4,$C(7),"I need at least one line of Address." S Y=.14105;.1412;S:X']"" Y=.1414;.1413;.1414;.1415;.1416;Q;.14111;@15;K DIE("NO^");
"RTN","DGRPE",38,0)
109 ;;N FLG S (FLG(1),FLG(2))=1 D EN^DGREGAED(DFN,.FLG);.02;D DR109^DGRPE;6;2;K DR(2,2.02),DR(2,2.06);.05;.08;K DIE("NO^");
"RTN","DGRPE",39,0)
105000 ;;.1212;S:X']"" Y=.1214;.1213:.1215;.12112;Q;.12111;.1219;@15;K DIE("NO^");
"RTN","DGRPE",40,0)
201 ;;.02;.05;.08;.092;.093;.2401:.2403;57.4//NOT APPLICABLE;
"RTN","DGRPE",41,0)
202 ;;1010.15//NO;S:X'="Y" Y="@22";S DIE("NO^")="";1010.152;I X']"" W !?4,*7,"But I need to know where you were treated most recently." S Y=1010.15;1010.151;1010.154;S:X']"" Y="@22";1010.153;@22;K DIE("NO^");
"RTN","DGRPE",42,0)
203 ;;D DR203^DGRPE;6ETHNICITY;2RACE;K DR(2,2.02),DR(2,2.06);
"RTN","DGRPE",43,0)
301 ;;.211;S:X']"" Y="@31";.212;.2125//NO;I X="Y" S DGADD=".21" D AD^DGRPE S Y=.21011;.213;S:X']"" Y=.216;.214;S:X']"" Y=.216;.215:.217;.2207;.219;.21011;@31;
"RTN","DGRPE",44,0)
302 ;;.2191;S:X']"" Y="@32";.2192;.21925//NO;I X="Y" S DGADD=".211" D AD^DGRPE S Y=.211011;
"RTN","DGRPE",45,0)
302000 ;;.2193;S:X']"" Y=.2196;.2194;S:X']"" Y=.2196;.2195:.2197;.2203;.2199;.211011;@32;
"RTN","DGRPE",46,0)
303 ;;N DGX1,DGX2;I '$L($P($G(^DPT(DFN,.21)),U)) S Y="@33";.3305//NO;I X="Y" S Y="@34",DGX1=1;@33;S:$D(^DPT(DFN,.22)) $P(^(.22),U,1)=$P(^(.22),U,7);.331;S:X']"" DGX1=2,Y="@34";.332;@34;
"RTN","DGRPE",47,0)
303000 ;;S:$G(DGX1) Y="@341";.333;S:X']"" Y=.336;.334;S:X']"" Y=.336;.335:.337;.2201;.339;.33011;S DGX1=2;@341;
"RTN","DGRPE",48,0)
303001 ;;S:$G(DGX1)=2 Y="@35";S DGX2=$G(^DPT(DA,.21));.331///^S X=$P(DGX2,U);.332///^S X=$P(DGX2,U,2);.333///^S X=$P(DGX2,U,3);.334///^S X=$P(DGX2,U,4);@35;
"RTN","DGRPE",49,0)
303002 ;;S:$G(DGX1)=2 Y="@351";.335///^S X=$P(DGX2,U,5);.336///^S X=$P(DGX2,U,6);.337///^S X=$P(DGX2,U,7);.338///^S X=$P(DGX2,U,8);.339///^S X=$P(DGX2,U,9);.33011///^S X=$P(DGX2,U,11);@351;K DGX1,DGX2;
"RTN","DGRPE",50,0)
304 ;;.3311;S:X']"" Y="@36";.3312;.3313;S:X']"" Y=.3316;.3314;S:X']"" Y=.3316;.3315:.3317;.2204;.3319;.331011;@36;        
"RTN","DGRPE",51,0)
305 ;;N DGX1,DGX2;I '$L($P($G(^DPT(DFN,.21)),U)) S Y="@37";.3405//NO;I X="Y" S DGX1=1,Y="@371";@37;S:$D(^DPT(DFN,.22)) $P(^(.22),U,2)=$P(^(.22),U,7);.341;S:X']"" DGX1=2,Y="@371";.342;@371;
"RTN","DGRPE",52,0)
305000 ;;S:$G(DGX1) Y="@38";.343;S:X']"" Y=.346;.344;S:X']"" Y=.346;.345:.347;.2202;.349;.34011;S DGX1=2;@38;
"RTN","DGRPE",53,0)
305001 ;;S:$G(DGX1)=2 Y="@381";S DGX2=$G(^DPT(DA,.21));.341///^S X=$P(DGX2,U);.342///^S X=$P(DGX2,U,2);.343///^S X=$P(DGX2,U,3);.344///^S X=$P(DGX2,U,4);@381
"RTN","DGRPE",54,0)
305002 ;;S:$G(DGX1)=2 Y="@39";.345///^S X=$P(DGX2,U,5);.346///^S X=$P(DGX2,U,6);.347///^S X=$P(DGX2,U,7);.348///^S X=$P(DGX2,U,8);.349///^S X=$P(DGX2,U,9);.34011///^S X=$P(DGX2,U,11);@39;K DGX1,DGX2;
"RTN","DGRPE",55,0)
401 ;;.07;.31115;I $S(X']"":1,X=3:1,X=9:1,1:0) S Y="@41";.3111;S:X']"" Y="@41";.3113;S:X']"" Y=.3116;.3114;S:X']"" Y=.3116;.3115:.3117;.2205;.3119;@41;
"RTN","DGRPE",56,0)
402 ;;.2514;.2515;I $S(X']"":1,X=3:1,X=9:1,1:0) S Y="@42";.251;S:X']"" Y="@42";.252;S:X']"" Y=.255;.253;S:X']"" Y=.255;.254:.256;.2206;.258;@42;
"RTN","DGRPE",57,0)
501 ;;
"RTN","DGRPE",58,0)
502 ;;.381;.382///NOW;
"RTN","DGRPE",59,0)
503 ;;.383;
"RTN","DGRPE",60,0)
601 ;;.325;S:X']"" Y="@61";.328;.326;.327;.324;.3285//NO;S:X'="Y" Y="@61";.3291;S:X']"" Y="@61";.3294;.3292;.3293;.329;.32945//NO;S:X'="Y" Y="@61";.3296;S:X']"" Y="@61";.3299;.3297;.3298;.3295;@61;
"RTN","DGRPE",61,0)
602 ;;.525//NO;S:X'="Y" Y="@62";.526:.528;@62;
"RTN","DGRPE",62,0)
603 ;;.5291//NO;S:X'="Y" Y="@63";.5292:.5294;@63;
"RTN","DGRPE",63,0)
604 ;;.32101//NO;S:X'="Y" Y="@64";.32104;.32105;@64;
"RTN","DGRPE",64,0)
605 ;;.32102//NO;S:X'="Y" Y="@65";.32107;.32109;.3211;.3213;@65;
"RTN","DGRPE",65,0)
606 ;;.32103//NO;S:X'="Y" Y="@66";.3212;.32111;@66;
"RTN","DGRPE",66,0)
607 ;;.3221//NO;S:X'="Y" Y="@67";.3222;Q;.3223;@67;
"RTN","DGRPE",67,0)
608 ;;.3224//NO;S:X'="Y" Y="@68";.3225;Q;.3226;@68;
"RTN","DGRPE",68,0)
609 ;;.3227//NO;S:X'="Y" Y="@69";.3228;Q;.3229;@69;
"RTN","DGRPE",69,0)
610 ;;.32201//NO;S:X'="Y" Y="@610";.322011;Q;.322012;@610;
"RTN","DGRPE",70,0)
611 ;;.322016//NO;S:X'="Y" Y="@611";.322017;Q;.322018;@611;
"RTN","DGRPE",71,0)
612 ;;.322013//NO;S:X'="Y" Y="@612";.322014;Q;.322015;@612;
"RTN","DGRPE",72,0)
613 ;;.362;
"RTN","DGRPE",73,0)
614 ;;.368//NO;.369//NO;I $S('$D(^DPT(DA,.36)):1,$P(^(.36),U,8)="Y"!($P(^(.36),U,9)="Y"):0,1:1) S Y="@614";.37;@614;
"RTN","DGRPE",74,0)
615 ;;.322019//NO;S:X'="Y" Y="@615";.32202;Q;.322021;@615;
"RTN","DGRPE",75,0)
616 ;;S DGPHFLG=0;.531;S:X'="Y" DGX=X,Y="@616";.532///^S X="PENDING";S Y="@6161";@616;S:DGX'="N" Y="@6162";.533///^S X="VAMC";@6161;S DGPHFLG=1;.535///^S X=$$DIV^DGRPLE();@6162;
"RTN","DGRPE",76,0)
617 ;;D REG^DGNTQ(DFN);
"RTN","DGRPE",77,0)
AD N DGZ4,DGPC
"RTN","DGRPE",78,0)
 S X=$S($D(^DPT(DA,.11)):^(.11),1:""),DGZ4=$P(X,U,12),DGPHONE=$S($D(^(.13)):$P(^(.13),U,1),1:""),Y=$S($D(^(DGADD)):^(DGADD),1:""),^(DGADD)=$P(Y,U,1)_U_$P(Y,U,2)_U_$P(X,U,1,6)_U_DGPHONE_U_$P(Y,U,10)
"RTN","DGRPE",79,0)
 I DGZ4 S DGPC=$S((DGADD=.33):1,(DGADD=.34):2,(DGADD=.211):3,(DGADD=.331):4,(DGADD=.311):5,(DGADD=.25):6,(DGADD=.21):7,1:0) S:DGPC $P(^DPT(DFN,.22),U,DGPC)=DGZ4
"RTN","DGRPE",80,0)
 K DGADD,DGPHONE Q
"RTN","DGRPE",81,0)
DR109 ;Drop through (use same logic as DR203)
"RTN","DGRPE",82,0)
DR203 S DR(2,2.02)=".01RACE;I $P($G(^DIC(10.3,+$P($G(^DPT(DA(1),.02,DA,0)),""^"",2),0)),""^"",2)=""S"" S Y=""@2031"";.02;@2031;"
"RTN","DGRPE",83,0)
 S DR(2,2.06)=".01ETHNICITY;I $P($G(^DIC(10.3,+$P($G(^DPT(DA(1),.06,DA,0)),""^"",2),0)),""^"",2)=""S"" S Y=""@2032"";.02;@2032;"
"RTN","DGRPE",84,0)
 Q
"RTN","DGRPE",85,0)
DR111 ;Set DR string for Confidential Address categories
"RTN","DGRPE",86,0)
 S DR(2,2.141)=".01;1//YES;"
"RTN","DGRPE",87,0)
 Q
"RTN","DPTLK")
0^5^B61319326
"RTN","DPTLK",1,0)
DPTLK ;ALB/RMO,RTK - MAS Patient Look-up Main Routine ; 05/13/2003  2:20 PM
"RTN","DPTLK",2,0)
 ;;5.3;Registration;**32,72,93,73,136,157,197,232,265,277,223,327,244,513,528**;Aug 13, 1993
"RTN","DPTLK",3,0)
 ;
"RTN","DPTLK",4,0)
 ; mods made for magstripe read 12/96 - JFP
"RTN","DPTLK",5,0)
 ;
"RTN","DPTLK",6,0)
 ;Optional input: DPTNOFZY='1' to suppress fuzzy lookups implemented
"RTN","DPTLK",7,0)
 ;                by patch DG*5.3*244
"RTN","DPTLK",8,0)
 ;
"RTN","DPTLK",9,0)
EN ; -- Entry point
"RTN","DPTLK",10,0)
 K DPTX,DPTDFN,DPTSAVX I $D(DIC(0)) G QK:DIC(0)["I"!(DIC(0)'["A"&('$D(X)))
"RTN","DPTLK",11,0)
 I '$D(^DD("VERSION")) W !!?3,"Unable to proceed. Fileman version node ^DD(""VERSION"") is undefined." G QK
"RTN","DPTLK",12,0)
 I '$D(^DPT(0))!(^DD("VERSION")<17.2) W !!?3,"Unable to proceed. ",$S('$D(^DPT(0)):"0th node of ^DPT missing",^DD("VERSION")<17.2:"Fileman version must be at least 17.2",1:""),"." G QK
"RTN","DPTLK",13,0)
EN2 K DO,DUOUT,DTOUT S U="^",DIC="^DPT(",DIC(0)=$S($D(DIC(0)):DIC(0),1:"AELMQ") S:DIC(0)'["A" (DPTX,DPTSAVX)=X
"RTN","DPTLK",14,0)
 S DPTSZ=1000 I $D(^DD("OS"))#2 S DPTSZ=$S(+$P(^DD("OS",^("OS"),0),U,2):$P(^(0),U,2),1:DPTSZ)
"RTN","DPTLK",15,0)
 ;
"RTN","DPTLK",16,0)
ASKPAT ; -- Prompt for patient
"RTN","DPTLK",17,0)
 I DIC(0)["A" D   G QK:'$T!($E(DPTX)["^")!(DPTX="")
"RTN","DPTLK",18,0)
 .K DTOUT,DUOUT
"RTN","DPTLK",19,0)
 .W !,$S($D(DIC("A")):DIC("A"),1:"Select PATIENT NAME: ") W:$D(DIC("B")) DIC("B"),"// "
"RTN","DPTLK",20,0)
 .R X:DTIME
"RTN","DPTLK",21,0)
 .S DPTX=X S:'$T DTOUT=1 S:$T&(DPTX="")&($D(DIC("B"))) DPTX=DIC("B") S:DPTX["^" DUOUT=1
"RTN","DPTLK",22,0)
 ; -- Check for the IATA magnetic stripe input
"RTN","DPTLK",23,0)
 N MAG,GCHK
"RTN","DPTLK",24,0)
 S MAG=0
"RTN","DPTLK",25,0)
 I $E(DPTX)="%"!($E(DPTX)=";"),DPTX["?" S MAG=1,(X,DPTX)=$$IATA(DPTX)
"RTN","DPTLK",26,0)
 ;
"RTN","DPTLK",27,0)
CHKPAT ; -- Custom Patient Lookup
"RTN","DPTLK",28,0)
 D DO^DIC1
"RTN","DPTLK",29,0)
 S DIC("W")=$S($D(DIC("W")):DIC("W"),1:"")
"RTN","DPTLK",30,0)
 K DPTIFNS,DPTS,DPTSEL
"RTN","DPTLK",31,0)
 S DPTCNT=0
"RTN","DPTLK",32,0)
 ; -- Check input for format an length
"RTN","DPTLK",33,0)
 G CHKDFN:DPTX?1A!(DPTX'?.ANP)!($L(DPTX)>30)
"RTN","DPTLK",34,0)
 ; -- Check for null response or abort
"RTN","DPTLK",35,0)
 I DPTX=""!(DPTX["^") G ASKPAT:DIC(0)["A",QK
"RTN","DPTLK",36,0)
 ; -- Check for question mark
"RTN","DPTLK",37,0)
 I DPTX["?" D  G ASKPAT:DIC(0)["A",QK
"RTN","DPTLK",38,0)
 .S D="B"
"RTN","DPTLK",39,0)
 .S DZ=$S(DPTX?1"?":"",1:"??")
"RTN","DPTLK",40,0)
 .G CHKPAT1:DZ="??"
"RTN","DPTLK",41,0)
 .N %
"RTN","DPTLK",42,0)
 .W !,?1,"Answer with PATIENT NAME, or SOCIAL SECURITY NUMBER, or last 4 digits",!,?4,"of SOCIAL SECURITY NUMBER, or first initial of"
"RTN","DPTLK",43,0)
 .W " last name with last",!,?4,"4 digits of SOCIAL SECURITY NUMBER"
"RTN","DPTLK",44,0)
 .W !,?1,"Do you want the entire ",+$P($G(^DPT(0)),"^",4),"-Entry PATIENT List" S %=0 D YN^DICN
"RTN","DPTLK",45,0)
 .Q:%'=1
"RTN","DPTLK",46,0)
 .S DZ="??"
"RTN","DPTLK",47,0)
CHKPAT1 .S X=DPTX
"RTN","DPTLK",48,0)
 .D DQ^DICQ
"RTN","DPTLK",49,0)
 ; -- Check for space bar, return
"RTN","DPTLK",50,0)
 I DPTX=" " D  G CHKDFN
"RTN","DPTLK",51,0)
 .S Y=$S('($D(DUZ)#2):-1,$D(^DISV(DUZ,"^DPT(")):^("^DPT("),1:-1)
"RTN","DPTLK",52,0)
 .D SETDPT^DPTLK1:Y>0
"RTN","DPTLK",53,0)
 .S DPTDFN=$S($D(DPTS(Y)):Y,1:-1)
"RTN","DPTLK",54,0)
 ; -- Check for DFN look up
"RTN","DPTLK",55,0)
 I $E(DPTX)="`" D  G CHKDFN
"RTN","DPTLK",56,0)
 .S Y=$S($D(^DPT(+$P(DPTX,"`",2),0)):+$P(DPTX,"`",2),1:-1)
"RTN","DPTLK",57,0)
 .D SETDPT^DPTLK1:Y>0
"RTN","DPTLK",58,0)
 .S DPTDFN=$S($D(DPTS(Y)):Y,1:-1)
"RTN","DPTLK",59,0)
 ; -- Puts input in correct format
"RTN","DPTLK",60,0)
 G CHKDFN:DPTX=""
"RTN","DPTLK",61,0)
 ; -- Force new entry
"RTN","DPTLK",62,0)
 I $E(DPTX)="""",$E(DPTX,$L(DPTX))="""" G NOPAT
"RTN","DPTLK",63,0)
 ; -- Check for index lookups
"RTN","DPTLK",64,0)
 D ^DPTLK1 G QK:$D(DTOUT)!($D(DUOUT)&(DIC(0)'["A")),ASKPAT:$D(DUOUT),CHKPAT:DPTDFN<0,CHKDFN:DPTDFN>0 I DIC(0)["N",$D(^DPT(DPTX,0)) S Y=X D SETDPT^DPTLK1 S DPTDFN=$S($D(DPTS(Y)):Y,1:-1) G CHKDFN
"RTN","DPTLK",65,0)
MAG ; -- No patient found, check for mag stripe input, create stub
"RTN","DPTLK",66,0)
 I 'MAG G NOPAT
"RTN","DPTLK",67,0)
 ; -- Check for ADT option(s) only
"RTN","DPTLK",68,0)
 N DGOPT
"RTN","DPTLK",69,0)
 S DGOPT=$P($G(XQY0),"^",2)
"RTN","DPTLK",70,0)
 I DGOPT'="Load/Edit Patient Data",DGOPT'="Register a Patient" D  G EN2
"RTN","DPTLK",71,0)
 .W !,"    ...Patient not in database, use ADT options to load patient" D Q1
"RTN","DPTLK",72,0)
 ; -- Prompt for creation of stub
"RTN","DPTLK",73,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Patient not found...Create stub entry: "
"RTN","DPTLK",74,0)
 S GCHK=$D(^TMP("DGVIC"))
"RTN","DPTLK",75,0)
 D ^DIR
"RTN","DPTLK",76,0)
 K DIR
"RTN","DPTLK",77,0)
 I 'Y D Q1 G EN2
"RTN","DPTLK",78,0)
 ; -- Parse IATA fields
"RTN","DPTLK",79,0)
 D FIELDS(IATA)
"RTN","DPTLK",80,0)
 ; -- Check for Duplicates
"RTN","DPTLK",81,0)
 D EP2^DPTLK3
"RTN","DPTLK",82,0)
 I DPTDFN<0 D Q1 G EN2
"RTN","DPTLK",83,0)
 ; -- Creates Stub entry in patient file
"RTN","DPTLK",84,0)
 S Y=$$FILE^DPTLK4(DGFLDS)
"RTN","DPTLK",85,0)
 I $P(Y,"^",3)'=1 W !,"Could not add patient to patient file" D QK1 Q
"RTN","DPTLK",86,0)
 D QK1
"RTN","DPTLK",87,0)
 Q
"RTN","DPTLK",88,0)
 ;
"RTN","DPTLK",89,0)
NOPAT ; -- No patient found, ask to add new
"RTN","DPTLK",90,0)
 I DIC(0)["L" D ^DPTLK2 S Y=DPTDFN G ASKPAT:DIC(0)["A"&(Y<0)&('$G(DTOUT)),QK1
"RTN","DPTLK",91,0)
 ;
"RTN","DPTLK",92,0)
CHKDFN ; -- 
"RTN","DPTLK",93,0)
 S:'$D(DPTDFN) DPTDFN=-1 I DPTDFN'>0!('$D(DPTS(+DPTDFN))) W:DIC(0)["Q" *7," ??" G ASKPAT:DIC(0)["A",QK
"RTN","DPTLK",94,0)
 I DIC(0)["E" D  W $S('$D(DPTSEL)&('$D(DIVP)):$P(DPTS(DPTDFN),U,2)_"  "_$P(DPTS(DPTDFN),U)_"  ",$D(^DPT(DPTDFN,0)):"  "_$P(^(0),U)_"  ",1:"") S Y=DPTDFN X:$D(^DPT(DPTDFN,0)) "N DDS X DIC(""W"")"
"RTN","DPTLK",95,0)
 .I $D(DDS) D CLRMSG^DDS S DX=0,DY=DDSHBX+1 X DDXY
"RTN","DPTLK",96,0)
 ;
"RTN","DPTLK",97,0)
 ; check for other patients in "BS5" xref on Patient file
"RTN","DPTLK",98,0)
 I '$G(DICR),DPTDFN>0,DIC(0)["E",$$BS5^DPTLK5(+DPTDFN) D  G ASKPAT:DIC(0)["A"&(%'=1),QK:DPTDFN<0
"RTN","DPTLK",99,0)
 .N DPTZERO,DPTLSNME,DPTSSN S DPTZERO=$G(^DPT(+DPTDFN,0)),DPTLSNME=$P($P(DPTZERO,U),","),DPTSSN=$E($P(DPTZERO,U,9),6,9)
"RTN","DPTLK",100,0)
 .W $C(7),!!,"There is more than one patient whose last name is '",DPTLSNME,"' and"
"RTN","DPTLK",101,0)
 .W !,"whose social security number ends with '",DPTSSN,"'."
"RTN","DPTLK",102,0)
 .W !,"Are you sure you wish to continue (Y/N)" S %=0 D YN^DICN
"RTN","DPTLK",103,0)
 .I %'=1 S DPTDFN=-1
"RTN","DPTLK",104,0)
 ;
"RTN","DPTLK",105,0)
 I '$G(DICR),DPTDFN>0 S Y=DPTDFN D ^DGSEC S DPTDFN=Y G ASKPAT:DIC(0)["A"&(DPTDFN<0),QK:DPTDFN<0
"RTN","DPTLK",106,0)
 S DPTX=DPTX_$P(DPTS(DPTDFN),U,2),DPTDFN=DPTDFN_U_$P(^DPT(DPTDFN,0),U)
"RTN","DPTLK",107,0)
 ;
"RTN","DPTLK",108,0)
Q ; -- 
"RTN","DPTLK",109,0)
 S Y=$S('$D(DPTDFN):-1,'$D(DPTS(+DPTDFN)):-1,1:DPTDFN),X=$S($D(DPTX)&(+Y>0):DPTX,$D(DPTSAVX):DPTSAVX,$D(DPTX):DPTX,1:"")
"RTN","DPTLK",110,0)
 I Y>0 S:DIC(0)'["F" ^DISV($S($D(DUZ)#2:DUZ,1:0),"^DPT(")=+Y S:DIC(0)["Z" Y(0)=^DPT(+Y,0),Y(0,0)=$P(^(0),U,1)
"RTN","DPTLK",111,0)
 I DIC(0)["E",$P($G(^DPT(+Y,0)),U,21) W *7,!,"Warning : You have selected a test patient."
"RTN","DPTLK",112,0)
 ;Display enrollment information
"RTN","DPTLK",113,0)
 I Y>0,DIC(0)["E" D ENR
"RTN","DPTLK",114,0)
 ;
"RTN","DPTLK",115,0)
 ;Call Combat Vet check
"RTN","DPTLK",116,0)
 I Y>0,DIC(0)["E" D CV
"RTN","DPTLK",117,0)
 ;
"RTN","DPTLK",118,0)
 ; check whether to display Means Test Required message
"RTN","DPTLK",119,0)
 D
"RTN","DPTLK",120,0)
 .N DPTDIV
"RTN","DPTLK",121,0)
 .I '$G(DUZ(2)) Q
"RTN","DPTLK",122,0)
 .I Y>0,DIC(0)["E" S DPTDIV=$$DMT^DPTLK5(+Y,DUZ(2)) I DPTDIV D
"RTN","DPTLK",123,0)
 ..W $C(7),!!,"MEANS TEST REQUIRED"
"RTN","DPTLK",124,0)
 ..W !,?3,$P($G(^DG(40.8,DPTDIV,"MT")),U,2)
"RTN","DPTLK",125,0)
 ..H 2
"RTN","DPTLK",126,0)
 ;
"RTN","DPTLK",127,0)
Q1 ; -- Clean up variables
"RTN","DPTLK",128,0)
 K D,DIC("W"),DO,DPTCNT,DPTDFN,DPTIFNS,DPTIX,DPTS
"RTN","DPTLK",129,0)
 K DPTSAVX,DPTSEL,DPTSZ,DPTX
"RTN","DPTLK",130,0)
 ;
"RTN","DPTLK",131,0)
 K:$D(IATA) IATA
"RTN","DPTLK",132,0)
 K:$D(DGFLDS) @DGFLDS,DGFLDS
"RTN","DPTLK",133,0)
 Q
"RTN","DPTLK",134,0)
 ;
"RTN","DPTLK",135,0)
QK K DPTNOFZY G Q
"RTN","DPTLK",136,0)
 ;
"RTN","DPTLK",137,0)
QK1 K DPTNOFZY G Q1
"RTN","DPTLK",138,0)
 ;
"RTN","DPTLK",139,0)
IX ; --
"RTN","DPTLK",140,0)
 I $D(D),$D(^DD(2,0,"IX",D)),($E(D)'="A") S DPTIX=D
"RTN","DPTLK",141,0)
 G DPTLK
"RTN","DPTLK",142,0)
 ;
"RTN","DPTLK",143,0)
IATA(X) ; --
"RTN","DPTLK",144,0)
 ;This function pulls off ssn from the IATA track
"RTN","DPTLK",145,0)
 ;
"RTN","DPTLK",146,0)
 ;Input:  X   -  what was read in
"RTN","DPTLK",147,0)
 ;Output: SSN -  social security number
"RTN","DPTLK",148,0)
 ;          Q -  quit
"RTN","DPTLK",149,0)
 ;
"RTN","DPTLK",150,0)
 ; Track            Start Sent     End Sent      Field Separator
"RTN","DPTLK",151,0)
 ; -----            ----------     --------      ---------------
"RTN","DPTLK",152,0)
 ;  IATA (alphanum)      %             ?          {   (Note: VA used ^)
"RTN","DPTLK",153,0)
 ;  ABA (numeric)        ;             ?          =    
"RTN","DPTLK",154,0)
 ;
"RTN","DPTLK",155,0)
 ;N IATA
"RTN","DPTLK",156,0)
 S (IATA)=""
"RTN","DPTLK",157,0)
 I $E(X)'="%" Q X ; no start sentinel
"RTN","DPTLK",158,0)
 I X'["?" Q "Q"
"RTN","DPTLK",159,0)
 ; -- Extract data from track
"RTN","DPTLK",160,0)
 S IATA=$$TRACK(X,"%","?")
"RTN","DPTLK",161,0)
 ; -- checks for no data
"RTN","DPTLK",162,0)
 I IATA="" Q "Q"
"RTN","DPTLK",163,0)
 ; -- Returns SSN
"RTN","DPTLK",164,0)
 I IATA'="" Q $P(IATA,"^")
"RTN","DPTLK",165,0)
 Q "Q"
"RTN","DPTLK",166,0)
 ;
"RTN","DPTLK",167,0)
TRACK(X,START,END) ; find track where start/end are sentinels
"RTN","DPTLK",168,0)
 ;
"RTN","DPTLK",169,0)
 Q $P($P($G(X),START,2),END,1)
"RTN","DPTLK",170,0)
 ;
"RTN","DPTLK",171,0)
FIELDS(IATA) ; -- Sets fields
"RTN","DPTLK",172,0)
 Q:'$D(IATA)
"RTN","DPTLK",173,0)
 N CNT,FIELD
"RTN","DPTLK",174,0)
 S DGFLDS="^TMP(""DGVIC"","_$J_")",CNT=1
"RTN","DPTLK",175,0)
 K @DGFLDS
"RTN","DPTLK",176,0)
 F  S FIELD=$P($G(IATA),"^",CNT)  Q:FIELD=""  D
"RTN","DPTLK",177,0)
 .S @DGFLDS@(CNT)=FIELD
"RTN","DPTLK",178,0)
 .S CNT=CNT+1
"RTN","DPTLK",179,0)
 ; -- Define fields for duplicate checker
"RTN","DPTLK",180,0)
 S DPTX=$G(@DGFLDS@(2)) ;NAME
"RTN","DPTLK",181,0)
 S DPTIDS(.03)=$G(@DGFLDS@(3)) ;DOB
"RTN","DPTLK",182,0)
 S DPTIDS(.09)=$G(@DGFLDS@(1)) ;SSN
"RTN","DPTLK",183,0)
 Q
"RTN","DPTLK",184,0)
ENR ;Display Enrollment information after patient selection
"RTN","DPTLK",185,0)
 N DGENCAT,DGENDFN,DGENR,DGEGTIEN,DGEGT
"RTN","DPTLK",186,0)
 I '$$GET^DGENA($$FINDCUR^DGENA(+DPTDFN),.DGENR) Q
"RTN","DPTLK",187,0)
 S DGENCAT=$$CATEGORY^DGENA4(+DPTDFN)
"RTN","DPTLK",188,0)
 S DGENCAT=$$EXTERNAL^DILFD(27.15,.02,"",DGENCAT)
"RTN","DPTLK",189,0)
 W !?1,"Enrollment Priority: ",$S($G(DGENR("PRIORITY")):$$EXT^DGENU("PRIORITY",DGENR("PRIORITY")),1:""),$S($G(DGENR("SUBGRP"))="":"",1:$$EXT^DGENU("SUBGRP",$G(DGENR("SUBGRP"))))
"RTN","DPTLK",190,0)
 W ?33,"Category: ",DGENCAT
"RTN","DPTLK",191,0)
 W ?57,"End Date: ",$S($G(DGENR("END")):$$FMTE^XLFDT(DGENR("END"),"5DZ"),1:""),!
"RTN","DPTLK",192,0)
 ;If patient is NOT ELIGIBLE, display Enrollment Status (Ineligible Project Phase I)
"RTN","DPTLK",193,0)
 I $G(DGENR("STATUS"))=10!($G(DGENR("STATUS"))=19)!($G(DGENR("STATUS"))=20) D
"RTN","DPTLK",194,0)
 . W ?1,"Enrollment Status: ",$S($G(DGENR("STATUS")):$$EXT^DGENU("STATUS",DGENR("STATUS")),1:"") ;H 5
"RTN","DPTLK",195,0)
 ;check for Combat Veteran Eligibility, if elig do not display EGT info
"RTN","DPTLK",196,0)
 I $$CVEDT^DGCV(+DPTDFN) Q
"RTN","DPTLK",197,0)
 ;Get Enrollment Group Threshold Priority and Subgroup
"RTN","DPTLK",198,0)
 S DGEGTIEN=$$FINDCUR^DGENEGT
"RTN","DPTLK",199,0)
 S DGEGT=$$GET^DGENEGT(DGEGTIEN,.DGEGT)
"RTN","DPTLK",200,0)
 Q:$G(DGENR("PRIORITY"))=""!($G(DGEGT("PRIORITY"))="")
"RTN","DPTLK",201,0)
 ;Compare Patient's Enrollment Priority to Enrollment Group Threshold
"RTN","DPTLK",202,0)
 I '$$ABOVE^DGENEGT1(+DPTDFN,DGENR("PRIORITY"),$G(DGENR("SUBGRP")),DGEGT("PRIORITY"),DGEGT("SUBGRP")) D
"RTN","DPTLK",203,0)
 .N X,IORVOFF,IORVON
"RTN","DPTLK",204,0)
 .S X="IORVOFF;IORVON"
"RTN","DPTLK",205,0)
 .D ENDR^%ZISS
"RTN","DPTLK",206,0)
 .W !?32 W:$D(IORVON) IORVON  W "*** WARNING ***" W:$D(IORVOFF) IORVOFF
"RTN","DPTLK",207,0)
 .I DGENR("END")'="" W !?14 W:$D(IORVON) IORVON W "*** PATIENT ENROLLMENT END",$S(DT>+DGENR("END"):"ED",1:"S")," EFFECTIVE ",$$FMTE^XLFDT(DGENR("END"),"5DZ")," ***" W:$D(IORVOFF) IORVOFF Q
"RTN","DPTLK",208,0)
 .W !?5 W:$D(IORVON) IORVON W "*** PATIENT ENROLLMENT ENDING.  ENROLLMENT END DATE IS NOT KNOWN. ***" W:$D(IORVOFF) IORVOFF
"RTN","DPTLK",209,0)
 Q
"RTN","DPTLK",210,0)
CV ;check for Combat Vet status
"RTN","DPTLK",211,0)
 N DGCV
"RTN","DPTLK",212,0)
 S DGCV=$$CVEDT^DGCV(+DPTDFN)
"RTN","DPTLK",213,0)
 I $P(DGCV,U)=1 D  Q
"RTN","DPTLK",214,0)
 . I '$$GET^DGENA($$FINDCUR^DGENA(+DPTDFN),.DGENR) W !
"RTN","DPTLK",215,0)
 . W ?3,"Combat Vet Status: "_$S($P(DGCV,U,2)>DT:"ELIGIBLE",1:"EXPIRED"),?57,"End Date: "_$$FMTE^XLFDT($P(DGCV,U,2),"5DZ")
"RTN","DPTLK",216,0)
 Q
"RTN","VADPT0")
0^6^B12457338
"RTN","VADPT0",1,0)
VADPT0 ;ALB/MRL/MJK - PATIENT VARIABLE ROUTINE DRIVER, CONT.; 12 DEC 1988
"RTN","VADPT0",2,0)
 ;;5.3;Registration;**343,342,415,489,498,528**;Aug 13, 1993
"RTN","VADPT0",3,0)
 ;
"RTN","VADPT0",4,0)
 ;Initialize variables
"RTN","VADPT0",5,0)
 N I1
"RTN","VADPT0",6,0)
 S U="^" D DT^DICRW:'$D(DT)
"RTN","VADPT0",7,0)
 S VAERR=$S('$D(DFN)#2:1,'$D(^DPT(DFN,0)):1,1:0)
"RTN","VADPT0",8,0)
 S Y=VAN'=13 I Y,$D(VAROOT)'[0,VAROOT]"" S Y=0,VAV=VAROOT K @VAV
"RTN","VADPT0",9,0)
 I Y S:$S(VAN>9:1,'$D(VAHOW):0,1:VAHOW[2) VAV="^UTILITY("_""""_VAV_""""_","_$J_")"
"RTN","VADPT0",10,0)
 D @VAN
"RTN","VADPT0",11,0)
Q K X,Y,VAC,VAS,VAV,VAW,VAN,I,VAX,VAZ Q
"RTN","VADPT0",12,0)
 ;
"RTN","VADPT0",13,0)
INIT ; -- determine #'s or names then init array
"RTN","VADPT0",14,0)
 ;
"RTN","VADPT0",15,0)
 S VAS="1^2^3^4^5^6^7^8^9^10^11^12^13^14^15^16^17^18^19^20^21^22^23^24^25"
"RTN","VADPT0",16,0)
 I VAN<10,$D(VAHOW),VAHOW[1 S VAS=$P($T(SS+VAN),";;",2)
"RTN","VADPT0",17,0)
 I $D(VAN(1)) F I=1:1:VAN(1) S @VAV@($P(VAS,"^",I))=""
"RTN","VADPT0",18,0)
 Q
"RTN","VADPT0",19,0)
 ;
"RTN","VADPT0",20,0)
1 ; -- [DEM] demos 
"RTN","VADPT0",21,0)
 D C1,INIT I 'VAERR D 1^VADPT1,13 Q
"RTN","VADPT0",22,0)
 ;
"RTN","VADPT0",23,0)
2 ; -- [OPD] other pt vars
"RTN","VADPT0",24,0)
 D C2,INIT,2^VADPT1:'VAERR Q
"RTN","VADPT0",25,0)
 ;
"RTN","VADPT0",26,0)
3 ; -- [ADD] current address
"RTN","VADPT0",27,0)
 D C3,INIT,3^VADPT1:'VAERR Q
"RTN","VADPT0",28,0)
 ;
"RTN","VADPT0",29,0)
4 ; -- [OAD] other pt vars
"RTN","VADPT0",30,0)
 D C4,INIT,4^VADPT1:'VAERR Q
"RTN","VADPT0",31,0)
 ;
"RTN","VADPT0",32,0)
5 ; -- [INP] inpt data -v5
"RTN","VADPT0",33,0)
 D C5,INIT,5^VADPT2:'VAERR Q
"RTN","VADPT0",34,0)
 ;
"RTN","VADPT0",35,0)
6 ; -- [IN5] inpt data v5
"RTN","VADPT0",36,0)
 D C6,INIT F I=13:1:17 F I1=1:1:7 S @VAV@($P(VAS,"^",I),I1)=""
"RTN","VADPT0",37,0)
 F I=1:1:3 S @VAV@($P(VAS,"^",19),I)=""
"RTN","VADPT0",38,0)
 D 6^VADPT3:'VAERR Q
"RTN","VADPT0",39,0)
 ;
"RTN","VADPT0",40,0)
7 ; -- [ELIG] elig data
"RTN","VADPT0",41,0)
 D C7,INIT F I=1:1:6 S @VAV@($P(VAS,"^",5),I)=""
"RTN","VADPT0",42,0)
 D 7^VADPT4:'VAERR Q
"RTN","VADPT0",43,0)
 ;
"RTN","VADPT0",44,0)
8 ; -- [MB] $ benefits
"RTN","VADPT0",45,0)
 D C8,INIT D 8^VADPT4:'VAERR Q
"RTN","VADPT0",46,0)
 ;
"RTN","VADPT0",47,0)
9 ; -- [SVC] service data
"RTN","VADPT0",48,0)
 D C9,INIT F I=1:1:9 S @VAV@($P(VAS,"^",I),1)="",@VAV@($P(VAS,"^",I),2)=""
"RTN","VADPT0",49,0)
 S @VAV@($P(VAS,"^",10),1)=""
"RTN","VADPT0",50,0)
 S @VAV@($P(VAS,"^",4),3)="",@VAV@($P(VAS,"^",5),3)=""
"RTN","VADPT0",51,0)
 F I=2,6,7,8 F I1=3,4,5 S @VAV@($P(VAS,"^",I),I1)=""
"RTN","VADPT0",52,0)
 D 9^VADPT4:'VAERR Q
"RTN","VADPT0",53,0)
 ;
"RTN","VADPT0",54,0)
10 ; -- [REG] registration data
"RTN","VADPT0",55,0)
 D C10,INIT D 10^VADPT5:'VAERR Q
"RTN","VADPT0",56,0)
 ;
"RTN","VADPT0",57,0)
11 ; -- [SDE] clinic enrollment data
"RTN","VADPT0",58,0)
 D C11,INIT D 11^VADPT5:'VAERR Q
"RTN","VADPT0",59,0)
 ;
"RTN","VADPT0",60,0)
12 ; -- [SDA] appt data
"RTN","VADPT0",61,0)
 D C12,INIT D 12^VADPT5:'VAERR Q
"RTN","VADPT0",62,0)
 ;
"RTN","VADPT0",63,0)
13 ; -- [PID] pt id's
"RTN","VADPT0",64,0)
 S (VA("PID"),VA("BID"))="" D 13^VADPT6:'VAERR Q
"RTN","VADPT0",65,0)
 ;
"RTN","VADPT0",66,0)
KVAR ; kill all vadpt data
"RTN","VADPT0",67,0)
 K VAN
"RTN","VADPT0",68,0)
C1 K ^UTILITY("VADM",$J),VADM Q:$D(VAN)
"RTN","VADPT0",69,0)
C2 K ^UTILITY("VAPD",$J),VAPD Q:$D(VAN)
"RTN","VADPT0",70,0)
C3 K X S:$D(VAPA("P")) X("P")=VAPA("P")
"RTN","VADPT0",71,0)
 S:$D(VAPA("CD")) X("CD")=VAPA("CD")
"RTN","VADPT0",72,0)
 K ^UTILITY("VAPA",$J),VAPA
"RTN","VADPT0",73,0)
 S:$D(X("P")) VAPA("P")=X("P") K X("P")
"RTN","VADPT0",74,0)
 S:$D(X("CD")) VAPA("CD")=X("CD") K X Q:$D(VAN)
"RTN","VADPT0",75,0)
C4 K X S:$D(VAOA("A")) X("A")=VAOA("A")
"RTN","VADPT0",76,0)
 K ^UTILITY("VAOA",$J),VAOA
"RTN","VADPT0",77,0)
 S:$D(X("A")) VAOA("A")=X("A") K X Q:$D(VAN)
"RTN","VADPT0",78,0)
C5 K ^UTILITY("VAIN",$J),VAIN Q:$D(VAN)
"RTN","VADPT0",79,0)
C6 K X F I="D","E","L","M","V" I $D(VAIP(I)) S X(I)=VAIP(I)
"RTN","VADPT0",80,0)
 S Y=$S('$D(VAIP("V")):"VAIP",VAIP("V")'?1A.E:"VAIP",1:VAIP("V")) K ^UTILITY(Y,$J),@Y
"RTN","VADPT0",81,0)
 F I="D","E","L","M","V" I $D(X(I)) S VAIP(I)=X(I)
"RTN","VADPT0",82,0)
 K X Q:$D(VAN)
"RTN","VADPT0",83,0)
C7 K ^UTILITY("VAEL",$J),VAEL Q:$D(VAN)
"RTN","VADPT0",84,0)
C8 K ^UTILITY("VAMB",$J),VAMB Q:$D(VAN)
"RTN","VADPT0",85,0)
C9 K ^UTILITY("VASV",$J),VASV Q:$D(VAN)
"RTN","VADPT0",86,0)
C10 K ^UTILITY("VARP",$J) Q:$D(VAN)
"RTN","VADPT0",87,0)
C11 K ^UTILITY("VAEN",$J) Q:$D(VAN)
"RTN","VADPT0",88,0)
C12 K ^UTILITY("VASD",$J) Q
"RTN","VADPT0",89,0)
C13 Q
"RTN","VADPT0",90,0)
 ;
"RTN","VADPT0",91,0)
SS ;  1^ 2^ 3^ 4^ 5^ 6^ 7^ 8^ 9^10^11^12^13^14^15^16^17^18^19^20^21^22^23^24^25
"RTN","VADPT0",92,0)
 ;;NM^SS^DB^AG^SX^EX^RE^RA^RP^MS^ET^RC
"RTN","VADPT0",93,0)
 ;;BC^BS^FN^MN^MM^OC^ES
"RTN","VADPT0",94,0)
 ;;L1^L2^L3^CI^ST^ZP^CO^PN^TS^TE^Z4^CCA^CL1^CL2^CL3^CCI^CST^CZP^CCO^CCS^CCE^CTY
"RTN","VADPT0",95,0)
 ;;L1^L2^L3^CI^ST^ZP^CO^PN^NM^RE^Z4
"RTN","VADPT0",96,0)
 ;;AN^DR^TS^WL^RB^BS^AD^AT^AF^PT^AP
"RTN","VADPT0",97,0)
 ;;MN^TT^MD^MT^WL^RB^DR^TS^MF^BS^RD^PT^AN^LN^PN^NN^DN^AP^FD
"RTN","VADPT0",98,0)
 ;;EL^PS^SC^VT^IN^TY^CN^ES^MT
"RTN","VADPT0",99,0)
 ;;AA^HB^SS^PE^MR^SI^DI^OR^GI
"RTN","VADPT0",100,0)
 ;;VN^AO^IR^PW^CS^S1^S2^S3^PH
"RTN","VADPT4")
0^7^B28024676
"RTN","VADPT4",1,0)
VADPT4 ;ALB/MRL/MJK - PATIENT VARIABLES; 12 DEC 1988
"RTN","VADPT4",2,0)
 ;;5.3;Registration;**343,342,528**;Aug 13, 1993
"RTN","VADPT4",3,0)
7 ;Eligibility [ELIG]
"RTN","VADPT4",4,0)
 F I=.15,.3,.31,.32,.36,.361,"INE","TYPE","VET" S VAX(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","VADPT4",5,0)
 S VAZ=$P(VAX(.36),"^",1) S:$D(^DIC(8,+VAZ,0)) VAZ=VAZ_"^"_$P(^(0),"^",1) S @VAV@($P(VAS,"^",1))=VAZ
"RTN","VADPT4",6,0)
 S VAX=0 F I=0:0 S VAX=$O(^DPT(DFN,"E",VAX)) Q:VAX'>0  S VAZ=VAX I $D(^DIC(8,+VAZ,0)),+@VAV@($P(VAS,"^"))'=VAZ S VAZ=VAZ_"^"_$P(^DIC(8,+VAZ,0),"^") S @VAV@($P(VAS,"^",1),VAX)=VAZ
"RTN","VADPT4",7,0)
 S VAZ=$P(VAX(.32),"^",3) S:$D(^DIC(21,+VAZ,0)) VAZ=VAZ_"^"_$P(^(0),"^",1) S @VAV@($P(VAS,"^",2))=VAZ
"RTN","VADPT4",8,0)
 S VAZ=$S($P(VAX(.3),"^",1)="Y":1,1:0) S:VAZ VAZ=VAZ_"^"_$P(VAX(.3),"^",2) S @VAV@($P(VAS,"^",3))=VAZ
"RTN","VADPT4",9,0)
 S @VAV@($P(VAS,"^",4))=$S(VAX("VET")="Y":1,1:0),VAZ=$S(+$P(VAX(.15),"^",2):0,1:1),@VAV@($P(VAS,"^",5))=VAZ
"RTN","VADPT4",10,0)
 I VAZ F I=1:1:6 S @VAV@($P(VAS,"^",5),I)="" G 71
"RTN","VADPT4",11,0)
 S VAZ=$P(VAX(.15),"^",2),Y=VAZ X ^DD("DD") S @VAV@($P(VAS,"^",5),1)=VAZ_"^"_Y,VAZ=$P(VAX("INE"),"^",1) S:VAZ]"" VAZ=VAZ_"^"_$P("VAMC^REGIONAL OFFICE^RPC","^",VAZ) S @VAV@($P(VAS,"^",5),2)=VAZ
"RTN","VADPT4",12,0)
 S @VAV@($P(VAS,"^",5),3)=$P(VAX("INE"),"^",3),VAZ=$P(VAX("INE"),"^",4) S:$D(^DIC(5,+VAZ,0)) VAZ=VAZ_"^"_$P(^(0),"^",1) S @VAV@($P(VAS,"^",5),4)=VAZ
"RTN","VADPT4",13,0)
 S @VAV@($P(VAS,"^",5),5)=$P(VAX("INE"),"^",6),@VAV@($P(VAS,"^",5),6)=$P(VAX(.3),"^",7)
"RTN","VADPT4",14,0)
71 S VAZ=VAX("TYPE") S:$D(^DG(391,+VAZ,0)) VAZ=VAZ_"^"_$P(^(0),"^",1) S @VAV@($P(VAS,"^",6))=VAZ
"RTN","VADPT4",15,0)
 S @VAV@($P(VAS,"^",7))=$P(VAX(.31),"^",3),VAZ=$P(VAX(.361),"^",1) S:VAZ]"" VAZ=VAZ_"^"_$S(VAZ="V":"VERIFIED",VAZ="P":"PENDING VERIFICATION",VAZ="R":"PENDING RE-VERIFICATION",1:"") S @VAV@($P(VAS,"^",8))=VAZ
"RTN","VADPT4",16,0)
 I $D(^DPT(DFN,0)) S VAX=$P(^(0),"^",14),VAX=$G(^DG(408.32,+VAX,0)) I VAX]"" S @VAV@($P(VAS,"^",9))=$P(VAX,"^",2)_"^"_$P(VAX,"^",1)
"RTN","VADPT4",17,0)
 Q
"RTN","VADPT4",18,0)
 ;
"RTN","VADPT4",19,0)
8 ;Monetary Benefits [MB]
"RTN","VADPT4",20,0)
 N DGTOTVA
"RTN","VADPT4",21,0)
 S @VAV@($P(VAS,"^",6))=0 ; SSI no longer supported
"RTN","VADPT4",22,0)
 D ALL^DGMTU21(DFN,"V",DT,"I")
"RTN","VADPT4",23,0)
 S VAX=$G(^DGMT(408.21,+$G(DGINC("V")),0)) F I=8,11,13 S @VAV@($S(I=8:$P(VAS,"^",3),I=11:$P(VAS,"^",5),1:$P(VAS,"^",8)))=$S($P(VAX,"^",I)'="":"1^"_$P(VAX,"^",I),1:0)
"RTN","VADPT4",24,0)
 S VAX=$G(^DPT(DFN,.362))
"RTN","VADPT4",25,0)
 S DGTOTVA=$P(VAX,U,20)
"RTN","VADPT4",26,0)
 F I=12,13,14 S @VAV@($S(I=12:$P(VAS,"^",1),(I=13):$P(VAS,"^",2),1:$P(VAS,"^",4)))=$S($P(VAX,"^",I)="Y":1_U_DGTOTVA,1:0)
"RTN","VADPT4",27,0)
 S I=17 S @VAV@($P(VAS,"^",9))=$S($P(VAX,"^",17)="Y":1_U_$P(VAX,U,6),1:0)
"RTN","VADPT4",28,0)
 S VAX=$G(^DPT(DFN,.3)) S @VAV@($P(VAS,"^",7))=$S($P(VAX,"^",11)="Y":1_U_DGTOTVA,1:0)
"RTN","VADPT4",29,0)
 K DGDEP,DGREL,DGINC,DGINR Q
"RTN","VADPT4",30,0)
 ;
"RTN","VADPT4",31,0)
9 ;Service information
"RTN","VADPT4",32,0)
 F I=.32,.321,.52,.53 S VAX(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","VADPT4",33,0)
 S VAX("N")=.321 F I=1,2,3 S VAX(3)=I,VAZ=$S($P(VAX(.321),"^",I)="Y":1,1:0),@VAV@($P(VAS,"^",VAX(3)))=VAZ I VAZ S VAX(1)=$S(I=1:"4^5",I=2:"7^9^8",1:11),VAX(4)=0 D 91
"RTN","VADPT4",34,0)
 S VAX("N")=.52 F I=5,11 S VAX(3)=$S(I=5:4,1:5),VAX(1)=$S(I=5:"7^8",1:"13^14"),VAZ=$S($P(VAX(.52),"^",I)="Y":1,1:0),@VAV@($P(VAS,"^",VAX(3)))=VAZ I VAZ S VAX(4)=0 D 91
"RTN","VADPT4",35,0)
 S VAX(3)=10,VAX(1)="15",VAZ=$S($P(VAX(.52),U,15)]"":1,1:0),@VAV@($P(VAS,U,VAX(3)))=VAZ I VAZ S VAX(4)=0 D 91
"RTN","VADPT4",36,0)
 F I=6,7,8 S @VAV@($P(VAS,"^",I))="" F VAX(1)=1:1:5 S @VAV@($P(VAS,"^",I),VAX(1))=""
"RTN","VADPT4",37,0)
 S VAX("N")=.32,VAZ=$S($P(VAX(.32),"^",5)]"":1,1:0),@VAV@($P(VAS,"^",6))=VAZ I VAZ,$P(VAX(.32),"^",19)="Y" S VAZ=1,@VAV@($P(VAS,"^",7))=VAZ I VAZ,$P(VAX(.32),"^",20)="Y" S @VAV@($P(VAS,"^",8))=1
"RTN","VADPT4",38,0)
 F I=6,7,8 I @VAV@($P(VAS,"^",I)) S VAX(3)=I,VAX(1)=$S(I=6:"6^7",I=7:"11^12",1:"16^17"),VAX(4)=3 D 91
"RTN","VADPT4",39,0)
 S VAX("N")=.53,VAX(3)=9,VAX(1)="2^3",VAZ=$S($P(VAX(.53),U)="Y":1,$P(VAX(.53),U)="N":1,1:0),@VAV@($P(VAS,U,VAX(3)))=$S($P(VAX(.53),U)="Y":1,$P(VAX(.53),U)="N":0,1:"") I VAZ S VAX(4)=0 D 93
"RTN","VADPT4",40,0)
 Q
"RTN","VADPT4",41,0)
 ;
"RTN","VADPT4",42,0)
91 F VAX(2)=1:1 S VAX(4)=VAX(4)+1,X=+$P(VAX(1),"^",VAX(2)) Q:'X  S X=$P(VAX(VAX("N")),"^",X),VAZ=X,Y=VAZ X:Y]"" ^DD("DD") S @VAV@($P(VAS,"^",VAX(3)),VAX(4))=$S(VAZ]"":VAZ_"^"_Y,1:"")
"RTN","VADPT4",43,0)
 Q:VAX(3)=1!(VAX(3)=9)!(VAX(3)=10)
"RTN","VADPT4",44,0)
 I VAX(3)=2 S @VAV@($P(VAS,"^",2),4)=$P(VAX(.321),"^",10) S (X,VAZ)=$P(VAX(.321),"^",13) S:X]"" VAZ=VAZ_"^"_$S(X="K":"KOREAN DMZ",1:"VIETNAM") S @VAV@($P(VAS,"^",2),5)=VAZ Q
"RTN","VADPT4",45,0)
 I VAX(3)<4 S X=$P(VAX(.321),"^",12),VAZ=X S:X]"" VAZ=VAZ_"^"_$S(X="T":"NUCLEAR TESTING",X="N":"NAGASAKI/HIROSHIMA",1:"BOTH") S @VAV@($P(VAS,"^",3),2)=VAZ Q
"RTN","VADPT4",46,0)
 I VAX(3)<6 S X=$P(VAX(VAX("N")),"^",$S(VAX(3)=4:6,1:12)),VAZ=X S:$D(^DIC(22,+X,0)) VAZ=VAZ_"^"_$P(^(0),"^",1) S @VAV@($P(VAS,"^",VAX(3)),3)=VAZ Q
"RTN","VADPT4",47,0)
 S X=$S(VAX(3)=6:5,VAX(3)=7:10,1:15),VAX(2)=0 F VAX(5)=X,X+3,X-1 S VAX(2)=VAX(2)+1,VAZ=$P(VAX(VAX("N")),"^",VAX(5)),@VAV@($P(VAS,"^",VAX(3)),VAX(2))=VAZ I "^4^5^9^10^14^15^"[("^"_VAX(5)_"^"),+VAZ D 92
"RTN","VADPT4",48,0)
 Q
"RTN","VADPT4",49,0)
92 S VAX(6)="^DIC("_$S('(VAX(5)#5):23,1:25)_","_+VAZ_",0)" I $D(@(VAX(6))) S VAZ=$P(^(0),"^",1),@VAV@($P(VAS,"^",VAX(3)),VAX(2))=@VAV@($P(VAS,"^",VAX(3)),VAX(2))_"^"_VAZ
"RTN","VADPT4",50,0)
 Q
"RTN","VADPT4",51,0)
93 ;
"RTN","VADPT4",52,0)
 NEW VAFILE,VAIENS,VAFLDS,VAARR,VAI
"RTN","VADPT4",53,0)
 S VAFILE=2,VAIENS=DFN_",",VAFLDS=".532;.533"
"RTN","VADPT4",54,0)
 D GETS^DIQ(VAFILE,VAIENS,VAFLDS,"IEN","VAARR")
"RTN","VADPT4",55,0)
 F VAI=1:1 S VAFLDS(VAI)=$P(VAFLDS,";",VAI) Q:VAFLDS(VAI)=""  D
"RTN","VADPT4",56,0)
 . I '$D(VAARR(VAFILE,VAIENS,VAFLDS(VAI),"I")),'$D(VAARR(VAFILE,VAIENS,VAFLDS(VAI),"E")) S @VAV@($P(VAS,"^",VAX(3)),VAI)=""
"RTN","VADPT4",57,0)
 . E  S @VAV@($P(VAS,U,VAX(3)),VAI)=$G(VAARR(VAFILE,VAIENS,VAFLDS(VAI),"I"))_"^"_$G(VAARR(VAFILE,VAIENS,VAFLDS(VAI),"E"))
"RTN","VADPT4",58,0)
 Q
"VER")
8.0^22
"^DD",2,2,.327,0)
SERVICE SEPARATION DATE [LAST]^DX^^.32;7^S %DT="E",%DT(0)=-DT D ^%DT K %DT S X=Y K:Y<1 X I $D(X) S DFN=DA D SV^DGLOCK I $D(X),$D(^DG(43,1)) S SD1=1 D PS^DGINP
"^DD",2,2,.327,.1)
SEPARATION DATE-SERVICE [LAST]
"^DD",2,2,.327,1,0)
^.1
"^DD",2,2,.327,1,992,0)
2^ADGRU327^MUMPS
"^DD",2,2,.327,1,992,1)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.327,1,992,2)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.327,1,992,"%D",0)
^^9^9^2990921^
"^DD",2,2,.327,1,992,"%D",1,0)
This cross reference is used to remember that changes were made to a 
"^DD",2,2,.327,1,992,"%D",2,0)
monitored data field in the PATIENT File (#2) required for a vendor
"^DD",2,2,.327,1,992,"%D",3,0)
RAI/MDS COTS system.  Execution of this cross reference will create
"^DD",2,2,.327,1,992,"%D",4,0)
an entry in the ADT/HL7 PIVOT file (#391.71) and mark it as requiring
"^DD",2,2,.327,1,992,"%D",5,0)
transmission of an HL7 demographic A08 update message to the COTS
"^DD",2,2,.327,1,992,"%D",6,0)
interface.
"^DD",2,2,.327,1,992,"%D",7,0)
 
"^DD",2,2,.327,1,992,"%D",8,0)
The local variable DGRUGA08 will be set to 1 if the cross reference is
"^DD",2,2,.327,1,992,"%D",9,0)
not to be executed as part of a re-indexing.
"^DD",2,2,.327,1,992,"DT")
2990921
"^DD",2,2,.327,3)
Enter the date on which this patient was separated from his last episode of military service.
"^DD",2,2,.327,20,0)
^.3LA^1^1
"^DD",2,2,.327,20,1,0)
SVC
"^DD",2,2,.327,21,0)
^^4^4^2861007^
"^DD",2,2,.327,21,1,0)
For this veteran applicant enter the date s/he ended his/her
"^DD",2,2,.327,21,2,0)
most recent episode of military service.  Once the service
"^DD",2,2,.327,21,3,0)
record is verified only those users who hold the designated
"^DD",2,2,.327,21,4,0)
security key may enter/edit this field.
"^DD",2,2,.327,"DEL",1,0)
S DFN=DA D SV^DGLOCK I '$D(X)
"^DD",2,2,.327,"DT")
3030902
"^DD",2,2,.5295,0)
COMBAT VETERAN END DATE^D^^.52;15^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",2,2,.5295,20,0)
^.3LA^1^1
"^DD",2,2,.5295,20,1,0)
CS
"^DD",2,2,.5295,21,0)
^.001^4^4^3030902^^^
"^DD",2,2,.5295,21,1,0)
This field represents the last day for combat vet eligibility. This field 
"^DD",2,2,.5295,21,2,0)
will only be populated by cross-reference when the veteran's combat vet 
"^DD",2,2,.5295,21,3,0)
eligibility has been determined. This value will remain after the combat 
"^DD",2,2,.5295,21,4,0)
vet eligibility period has expired.
"^DD",2,2,.5295,"AUDIT")

"^DD",2,2,.5295,"AX")

"^DD",2,2,.5295,"DT")
3030902
"^DD",2,2,.5296,0)
CV DATE EDITED^D^^.52;16^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",2,2,.5296,1,0)
^.1
"^DD",2,2,.5296,1,1,0)
2^E
"^DD",2,2,.5296,1,1,1)
S ^DPT("E",$E(X,1,30),DA)=""
"^DD",2,2,.5296,1,1,2)
K ^DPT("E",$E(X,1,30),DA)
"^DD",2,2,.5296,1,1,"%D",0)
^^3^3^3030711^
"^DD",2,2,.5296,1,1,"%D",1,0)
This cross reference will be used for a Lookup of the CV Date Edited 
"^DD",2,2,.5296,1,1,"%D",2,0)
field, so that veterans assigned CV Status Eligibility sduring certain 
"^DD",2,2,.5296,1,1,"%D",3,0)
time frames can be pulled into a report.
"^DD",2,2,.5296,1,1,"DT")
3030711
"^DD",2,2,.5296,21,0)
^^2^2^3030711^
"^DD",2,2,.5296,21,1,0)
The CV DATE EDITED field will be stuffed with the current date 
"^DD",2,2,.5296,21,2,0)
whenever the COMBAT VET END DATE field (.5295) is changed.
"^DD",2,2,.5296,"DT")
3030711
**INSTALL NAME**
SD*5.3*305
"BLD",4318,0)
SD*5.3*305^SCHEDULING^0^3031022^y
"BLD",4318,4,0)
^9.64PA^^
"BLD",4318,"ABNS",0)
^9.66A^^
"BLD",4318,"ABPKG")
n^n
"BLD",4318,"KRN",0)
^9.67PA^8989.52^19
"BLD",4318,"KRN",.4,0)
.4
"BLD",4318,"KRN",.401,0)
.401
"BLD",4318,"KRN",.402,0)
.402
"BLD",4318,"KRN",.403,0)
.403
"BLD",4318,"KRN",.5,0)
.5
"BLD",4318,"KRN",.84,0)
.84
"BLD",4318,"KRN",3.6,0)
3.6
"BLD",4318,"KRN",3.8,0)
3.8
"BLD",4318,"KRN",9.2,0)
9.2
"BLD",4318,"KRN",9.8,0)
9.8
"BLD",4318,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",4318,"KRN",9.8,"NM",1,0)
SDAL0^^0^B32862510
"BLD",4318,"KRN",9.8,"NM","B","SDAL0",1)

"BLD",4318,"KRN",19,0)
19
"BLD",4318,"KRN",19.1,0)
19.1
"BLD",4318,"KRN",101,0)
101
"BLD",4318,"KRN",409.61,0)
409.61
"BLD",4318,"KRN",771,0)
771
"BLD",4318,"KRN",870,0)
870
"BLD",4318,"KRN",8989.51,0)
8989.51
"BLD",4318,"KRN",8989.52,0)
8989.52
"BLD",4318,"KRN",8994,0)
8994
"BLD",4318,"KRN","B",.4,.4)

"BLD",4318,"KRN","B",.401,.401)

"BLD",4318,"KRN","B",.402,.402)

"BLD",4318,"KRN","B",.403,.403)

"BLD",4318,"KRN","B",.5,.5)

"BLD",4318,"KRN","B",.84,.84)

"BLD",4318,"KRN","B",3.6,3.6)

"BLD",4318,"KRN","B",3.8,3.8)

"BLD",4318,"KRN","B",9.2,9.2)

"BLD",4318,"KRN","B",9.8,9.8)

"BLD",4318,"KRN","B",19,19)

"BLD",4318,"KRN","B",19.1,19.1)

"BLD",4318,"KRN","B",101,101)

"BLD",4318,"KRN","B",409.61,409.61)

"BLD",4318,"KRN","B",771,771)

"BLD",4318,"KRN","B",870,870)

"BLD",4318,"KRN","B",8989.51,8989.51)

"BLD",4318,"KRN","B",8989.52,8989.52)

"BLD",4318,"KRN","B",8994,8994)

"BLD",4318,"QUES",0)
^9.62^^
"BLD",4318,"REQB",0)
^9.611^1^1
"BLD",4318,"REQB",1,0)
SD*5.3*193^2
"BLD",4318,"REQB","B","SD*5.3*193",1)

"MBREQ")
0
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813
"PKG",16,22,1,"PAH",1,0)
305^3031022
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","SDAL0")
0^1^B32862510
"RTN","SDAL0",1,0)
SDAL0 ;ALB/GRR,TMP,MJK - APPOINTMENT LIST (CONTINUED FROM SDAL) ; 29 Jun 99  04:11PM
"RTN","SDAL0",2,0)
 ;;5.3;Scheduling;**28,37,106,149,171,177,193,305**;Aug 13, 1993
"RTN","SDAL0",3,0)
LOOP I $$CHECK(),$$NCHECK(),$$ACTIVE() D
"RTN","SDAL0",4,0)
 .I VAUTC,SDCOPY>1 S VAUTC(SD)=SC
"RTN","SDAL0",5,0)
 .S SDPAGE=1 D HED^SDAL Q:SDEND  S SDPCT=0
"RTN","SDAL0",6,0)
 .S SDT=SDD F  S SDT=$O(^SC(SC,"S",SDT)) Q:'SDT!(SDT\1-SDD)!SDEND  D MORE
"RTN","SDAL0",7,0)
 .W ! D CCLK Q:SDEND
"RTN","SDAL0",8,0)
 .I 'SDPCT S SDPCT="No activity found for this clinic date!" W !!?(IOM-$L(SDPCT)\2),SDPCT
"RTN","SDAL0",9,0)
 S SDPAGE=1 Q
"RTN","SDAL0",10,0)
 ;
"RTN","SDAL0",11,0)
PTL N SDAPPT
"RTN","SDAL0",12,0)
 S DFN=+^SC(SC,"S",SDT,1,K,0),SDOI=$P(^(0),"^",4)
"RTN","SDAL0",13,0)
 S (SDAPPT,X)=$G(^DPT(DFN,"S",SDT,0))
"RTN","SDAL0",14,0)
 Q:$S('X:1,$P(X,"^",2)="NT":0,$P(X,"^",2)["C"!($P(X,"^",2)["N"):1,1:0)
"RTN","SDAL0",15,0)
 D ^VAUQWK,GETA
"RTN","SDAL0",16,0)
 I ($Y+7>IOSL) D HED^SDAL Q:SDEND
"RTN","SDAL0",17,0)
 I '$D(SDFS) S SDFS=1,X=PT D TM^SDROUT0 W !,$J(X,8)
"RTN","SDAL0",18,0)
 N SDCLY D CL^SDCO21(DFN,SDT,"",.SDCLY)
"RTN","SDAL0",19,0)
 N SDY S SDY=$Y
"RTN","SDAL0",20,0)
 W ! D:SDBC BARC^SDAL(85,$P(VAQK(2),"^"))
"RTN","SDAL0",21,0)
 ;check for Combat Vet
"RTN","SDAL0",22,0)
 N SDCV
"RTN","SDAL0",23,0)
 S SDCV=$$CVEDT^DGCV(DFN,$G(SDD))
"RTN","SDAL0",24,0)
 S SDCV=$P(SDCV,U,3)
"RTN","SDAL0",25,0)
 W !?3,$S($G(SDCV)=1:"(CV)",1:""),?9,$S($D(^SC(SC,"S",SDT,1,K,"OB")):"*",1:""),?10,$S(VAQK(1)]"":VAQK(1),1:"UNKNOWN PATIENT"),?41,$S(VAQK(2)]"":$E(VAQK(2),1,9),1:"")
"RTN","SDAL0",26,0)
 S INC=0 F SDZ=3,4,5 S X=SDZ(SDZ) D:X]"" TM^SDROUT0 S INC=SDZ#3*8+3 W ?48+INC,$J(X,8) W:INC<16 "  "
"RTN","SDAL0",27,0)
 I VAQK(12)]"" W !,?41,VAQK(12) W:VAQK(13)]"" !,?41,VAQK(13)
"RTN","SDAL0",28,0)
 W:SDOI]"" !,?15,SDOI W:SDEM]"" !,?15,SDEM,$S($D(SDCP):$P(^SC(SDCP,0),"^"),1:$P(^SC(SC,0),"^")),!,?15,SDEM1
"RTN","SDAL0",29,0)
 S SDX="" F I=7:1:9 I VAQK(I) S SDX=1 Q
"RTN","SDAL0",30,0)
 ;Primary Care information
"RTN","SDAL0",31,0)
 I +$G(SDPCMM) D TDATA^SDPPTEM(DFN,"",SDD,"P",15)
"RTN","SDAL0",32,0)
 ;I SDPCMM D TDATA^SDPPTEM(DFN,"",SDD,"P",15)
"RTN","SDAL0",33,0)
 ;I SDX W !,?15,"** Requires Special Survey Disposition **"
"RTN","SDAL0",34,0)
 ;; GAF SCORE CHECK
"RTN","SDAL0",35,0)
 N SDGAF,SDGAFST
"RTN","SDAL0",36,0)
 I $$MHCLIN^SDUTL2(SC),'($$COLLAT^SDUTL2(+VAQK(6))!$P(SDAPPT,U,11)) D
"RTN","SDAL0",37,0)
 . S SDGAF=$$NEWGAF^SDUTL2(DFN),SDGAFST=$P(SDGAF,"^")
"RTN","SDAL0",38,0)
 . W:SDGAFST !,?15,"** New GAF Score Required **"
"RTN","SDAL0",39,0)
 ;;
"RTN","SDAL0",40,0)
 I $O(SDCLY(0))  D
"RTN","SDAL0",41,0)
 .N PCL
"RTN","SDAL0",42,0)
 .S PCL=0
"RTN","SDAL0",43,0)
 .W !,?15,"** Required for facility workload credit => "
"RTN","SDAL0",44,0)
 .F  S PCL=$O(SDCLY(PCL)) Q:'PCL  W " ",SDCLAR(PCL)," "
"RTN","SDAL0",45,0)
 .W "**"
"RTN","SDAL0",46,0)
 I $P(VAQK(11),"^",2)]"" W !,?15,"Means Test: ** ",$P(VAQK(11),"^",2)," **" W "   Last Test: ",$$FDATE^SDUL1($P($$LST^DGMTU(DFN),U,2))
"RTN","SDAL0",47,0)
 S SDCOPS=$$LST^DGMTU(DFN,DT,2) I +SDCOPS W !,?15,"Co-Pay Status: ","**"_$P(SDCOPS,U,3)_"**"," Last Test: ",$$FDATE^SDUL1($P(SDCOPS,U,2)) K SDCOPS
"RTN","SDAL0",48,0)
 I $D(^DIC(8,+VAQK(6),0)),$P(^(0),U,9)=13 W !,?15,"** COLLATERAL **" G Q
"RTN","SDAL0",49,0)
 I $P($G(^SC(SC,"S",SDT,1,K,0)),"^",10)]"" D  I V W !,?15,"** COLLATERAL **" G Q
"RTN","SDAL0",50,0)
 .S V=$P(^(0),"^",10),V=$S($D(^DIC(8,+V,0)):$P(^(0),"^",9)=13,1:0)
"RTN","SDAL0",51,0)
 I $P(SDAPPT,U,11) W !,?15,"** COLLATERAL VISIT **"
"RTN","SDAL0",52,0)
 S:($P($G(^SC(SC,"S",SDT,1,K,0)),"^",10)=0) V=0
"RTN","SDAL0",53,0)
Q I SDBC,(SDY+5)>$Y F I=1:1 Q:(SDY+5)'>$Y  W !
"RTN","SDAL0",54,0)
 I SDBC W !?9,$E(SDASH,9,255)
"RTN","SDAL0",55,0)
 S SDPCT=SDPCT+1 K V,SDX,SDMT,VAQK Q
"RTN","SDAL0",56,0)
 ;
"RTN","SDAL0",57,0)
GETA K SDCP S (SDZ(3),SDZ(4),SDZ(5))="" I $D(^DPT(DFN,"S",SDT,0)) F SDZ=3,4,5 S SDZ(SDZ)=$P(^(0),"^",SDZ)
"RTN","SDAL0",58,0)
 S SDEM="",SDEC=+VAQK(6) Q:'SDEC
"RTN","SDAL0",59,0)
 S SDXX=$S('$D(^DIC(8,SDEC,0)):1,$P(^(0),"^",5)'="Y":1,$P(^(0),"^",4)=4:0,$P(^(0),"^",4)=5:0,1:1) Q:SDXX
"RTN","SDAL0",60,0)
 I $D(^SC(SC,"SL")),$P(^("SL"),U,5)]"",$D(^SC($P(^("SL"),U,5),0)) S SDCP=$P(^SC(SC,"SL"),U,5)
"RTN","SDAL0",61,0)
 S SDCP=$S($D(SDCP):SDCP,1:SC) I $D(^DPT(DFN,"DE","B",SDCP)),VAQK(12)']"" S SDEA=$O(^DPT(DFN,"DE","B",SDCP,0)) I $D(^DPT(DFN,"DE",+SDEA,0)),$P(^(0),"^",2)']"",$O(^(1,0))'="" D CKCED
"RTN","SDAL0",62,0)
 Q
"RTN","SDAL0",63,0)
 ;
"RTN","SDAL0",64,0)
MORE K SDFS I $D(^SC(SC,"S",SDT,1)) S PT=SDT S K=0 F  S K=$O(^SC(SC,"S",SDT,1,K)) Q:'K!SDEND  I $P(^(K,0),"^",9)'["C" D PTL
"RTN","SDAL0",65,0)
 Q
"RTN","SDAL0",66,0)
 ;
"RTN","SDAL0",67,0)
CCLK S SDCC=0 F  S SDCC=$O(^SC(SC,"C",SDD,1,SDCC)) Q:'SDCC!SDEND  S SDPT0=$G(^DPT(+^(SDCC,0),0)) I $L(SDPT0) D
"RTN","SDAL0",68,0)
 .I ($Y+4>IOSL) D HED^SDAL Q:SDEND  W !
"RTN","SDAL0",69,0)
 .W !,"CHART REQUEST: ",$P(SDPT0,"^",1),?34,$P(SDPT0,"^",9)
"RTN","SDAL0",70,0)
 Q
"RTN","SDAL0",71,0)
 ;
"RTN","SDAL0",72,0)
CKCED S A=0 F  S A=$O(^DPT(DFN,"DE",SDEA,1,A)) Q:'A  I $P(^DPT(DFN,"DE",SDEA,1,A,0),"^",3)']"" D ENR Q
"RTN","SDAL0",73,0)
 Q
"RTN","SDAL0",74,0)
 ;
"RTN","SDAL0",75,0)
ENR S SDEDT=$P(^(0),"^",1)\1,SDDIF=DT-SDEDT,SDREV=$P(^(0),"^",5),SDDIF1=$S(SDREV:DT-SDREV,1:"") ;NAKED REFERENCE - ^DPT(DFN,"DE",SDEA,1,A,0)
"RTN","SDAL0",76,0)
 I $P(^DPT(DFN,"DE",SDEA,1,A,0),"^",2)="O",$S(SDDIF1']""&(SDDIF>10000):1,SDDIF1>10000:1,1:0) S SDEM="PATIENT HAS BEEN ENROLLED IN ",SDEM1="FOR MORE THAN 1 YEAR, PLEASE RE-EVALUATE"
"RTN","SDAL0",77,0)
 Q
"RTN","SDAL0",78,0)
 ;
"RTN","SDAL0",79,0)
CHECK() I $D(^SC(SC,0)),$P(^(0),"^",3)="C",$S(VAUTD:1,$D(VAUTD(+$P(^(0),"^",15))):1,'$P(^(0),"^",15)&$D(VAUTD(+$O(^DG(40.8,0)))):1,1:0)
"RTN","SDAL0",80,0)
 I $T,$D(^SC(SC,"ST",SDD,1)),^(1)'["**CANCELLED",$S('$D(^SC(SC,"I")):1,+^("I")'>0:1,+^("I")>SDD:1,+^("I")'>SDD&(+$P(^("I"),"^",2)>SDD!(+$P(^("I"),"^",2)=0)):0,1:1) Q 1
"RTN","SDAL0",81,0)
 Q 0
"RTN","SDAL0",82,0)
 ;
"RTN","SDAL0",83,0)
NCOUNT ;COUNT, NON-COUNT, or BOTH FOR CLINIC SELECTION
"RTN","SDAL0",84,0)
 W !,"Count, Non Count, or Both: C//" R SDCONC:DTIME
"RTN","SDAL0",85,0)
 I '$T!(SDCONC="") S SDCONC="C" Q
"RTN","SDAL0",86,0)
 Q:SDCONC=U
"RTN","SDAL0",87,0)
 I $L(SDCONC)=1,$E(SDCONC)="?" W !,"Type C, N or B" G NCOUNT
"RTN","SDAL0",88,0)
 I $E(SDCONC,1,2)="??" D  G NCOUNT
"RTN","SDAL0",89,0)
 . W !!,"Choosing ""C"" will limit the selection to COUNT clinics."
"RTN","SDAL0",90,0)
 . W !,"         ""N"" will limit the selection to NON COUNT clinics."
"RTN","SDAL0",91,0)
 . W !,"         ""B"" will give BOTH count and non count clinics.",!
"RTN","SDAL0",92,0)
 S SDCONC=$E(SDCONC),SDCONC=$TR(SDCONC,"bcn","BCN")
"RTN","SDAL0",93,0)
 I "BCN"'[SDCONC W !,"C, N or B" G NCOUNT
"RTN","SDAL0",94,0)
 Q
"RTN","SDAL0",95,0)
 ;
"RTN","SDAL0",96,0)
NCHECK() ;EXTEND $T LOGIC COUNT, NO COUNT,or BOTH  
"RTN","SDAL0",97,0)
 N NOC S NOC=$P($G(^SC(SC,0)),U,17)
"RTN","SDAL0",98,0)
 I SDCONC="B" Q 1
"RTN","SDAL0",99,0)
 I SDCONC="C"&(NOC="N") Q 1
"RTN","SDAL0",100,0)
 I SDCONC="N"&(NOC="Y") Q 1
"RTN","SDAL0",101,0)
 Q 0
"RTN","SDAL0",102,0)
 ;
"RTN","SDAL0",103,0)
NCLINIC ;SCREEN CLINICS
"RTN","SDAL0",104,0)
 N NOCC
"RTN","SDAL0",105,0)
 I SDCONC="B" S NOCC="&1"
"RTN","SDAL0",106,0)
 I SDCONC="N" S NOCC="&($P(^(0),U,17)=""Y"")"
"RTN","SDAL0",107,0)
 I SDCONC="C" S NOCC="&($P(^(0),U,17)=""N"")"
"RTN","SDAL0",108,0)
 S DIC="^SC(",DIC("S")="I $P(^(0),U,3)=""C""&'$G(^(""OOS""))"_NOCC_"&$S(VAUTD:1,$D(VAUTD(+$P(^(0),U,15))):1,'+$P(^(0),U,15)&$D(VAUTD(+$O(^DG(40.8,0)))):1,1:0)",VAUTSTR="clinic",VAUTVB="VAUTC" G FIRST^VAUTOMA
"RTN","SDAL0",109,0)
 ;
"RTN","SDAL0",110,0)
ACTIVE() ;Determine if clinic has activity to print
"RTN","SDAL0",111,0)
 ;Output: '1' if activity or selected clinic, '0' otherwise
"RTN","SDAL0",112,0)
 Q:'VAUTC 1  ;selected clinics
"RTN","SDAL0",113,0)
 Q:$O(^SC(SC,"C",SDD,1,0)) 1  ;chart request list
"RTN","SDAL0",114,0)
 N SDX S SDX=0 F SDT=SDD:0 S SDT=$O(^SC(SC,"S",SDT)) Q:'SDT!(SDT\1-SDD)!SDX  D
"RTN","SDAL0",115,0)
 .F K=0:0 S K=$O(^SC(SC,"S",SDT,1,K)) Q:'K!SDX  I $P(^(K,0),"^",9)'["C" S SDX=1
"RTN","SDAL0",116,0)
 .Q  ;patient appointment activity
"RTN","SDAL0",117,0)
 Q SDX
"VER")
8.0^22
**INSTALL NAME**
EAS*1.0*36
"BLD",4317,0)
EAS*1.0*36^ENROLLMENT APPLICATION SYSTEM^0^3031022^y
"BLD",4317,4,0)
^9.64PA^^0
"BLD",4317,"ABNS",0)
^9.66A^^
"BLD",4317,"ABPKG")
n^n
"BLD",4317,"INIT")
EN^EAS136P
"BLD",4317,"KRN",0)
^9.67PA^8989.52^19
"BLD",4317,"KRN",.4,0)
.4
"BLD",4317,"KRN",.401,0)
.401
"BLD",4317,"KRN",.402,0)
.402
"BLD",4317,"KRN",.403,0)
.403
"BLD",4317,"KRN",.5,0)
.5
"BLD",4317,"KRN",.84,0)
.84
"BLD",4317,"KRN",3.6,0)
3.6
"BLD",4317,"KRN",3.8,0)
3.8
"BLD",4317,"KRN",9.2,0)
9.2
"BLD",4317,"KRN",9.8,0)
9.8
"BLD",4317,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",4317,"KRN",9.8,"NM",1,0)
EAS136P^^0^B2064499
"BLD",4317,"KRN",9.8,"NM","B","EAS136P",1)

"BLD",4317,"KRN",19,0)
19
"BLD",4317,"KRN",19.1,0)
19.1
"BLD",4317,"KRN",101,0)
101
"BLD",4317,"KRN",409.61,0)
409.61
"BLD",4317,"KRN",771,0)
771
"BLD",4317,"KRN",870,0)
870
"BLD",4317,"KRN",8989.51,0)
8989.51
"BLD",4317,"KRN",8989.52,0)
8989.52
"BLD",4317,"KRN",8994,0)
8994
"BLD",4317,"KRN","B",.4,.4)

"BLD",4317,"KRN","B",.401,.401)

"BLD",4317,"KRN","B",.402,.402)

"BLD",4317,"KRN","B",.403,.403)

"BLD",4317,"KRN","B",.5,.5)

"BLD",4317,"KRN","B",.84,.84)

"BLD",4317,"KRN","B",3.6,3.6)

"BLD",4317,"KRN","B",3.8,3.8)

"BLD",4317,"KRN","B",9.2,9.2)

"BLD",4317,"KRN","B",9.8,9.8)

"BLD",4317,"KRN","B",19,19)

"BLD",4317,"KRN","B",19.1,19.1)

"BLD",4317,"KRN","B",101,101)

"BLD",4317,"KRN","B",409.61,409.61)

"BLD",4317,"KRN","B",771,771)

"BLD",4317,"KRN","B",870,870)

"BLD",4317,"KRN","B",8989.51,8989.51)

"BLD",4317,"KRN","B",8989.52,8989.52)

"BLD",4317,"KRN","B",8994,8994)

"BLD",4317,"QUES",0)
^9.62^^
"BLD",4317,"REQB",0)
^9.611^^
"INIT")
EN^EAS136P
"MBREQ")
0
"PKG",551,-1)
1^1
"PKG",551,0)
ENROLLMENT APPLICATION SYSTEM^EAS^ENROLLMENT
"PKG",551,20,0)
^9.402P^^0
"PKG",551,22,0)
^9.49I^1^1
"PKG",551,22,1,0)
1.0^3010315^3010516^66481
"PKG",551,22,1,"PAH",1,0)
36^3031022
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","EAS136P")
0^1^B2064499
"RTN","EAS136P",1,0)
EAS136P ;ALB/ERC - Combat Vet Pre-Install ;7/23/03
"RTN","EAS136P",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**36**;Mar 15, 2001
"RTN","EAS136P",3,0)
 ;
"RTN","EAS136P",4,0)
 ;This pre-install routine will add one entry into the LTC CO-PAY
"RTN","EAS136P",5,0)
 ;EXEMPTION file (#714.1) to support the Combat Vet project
"RTN","EAS136P",6,0)
 ;associated patches - DG*5.3*528, SD*5.3*305
"RTN","EAS136P",7,0)
 ;
"RTN","EAS136P",8,0)
EN ;
"RTN","EAS136P",9,0)
 N DGERR,DGFDA,DGT
"RTN","EAS136P",10,0)
 D BMES^XPDUTL("  ** Adding a new entry to LTC CO-PAY EXEMPTION file (#714.1).")
"RTN","EAS136P",11,0)
 S DGT="LTC IS SERVICE RELATED - COMBAT VET ELIGIBLE"
"RTN","EAS136P",12,0)
 I $$FIND1^DIC(714.1,"","X",DGT) D BMES^XPDUTL("  ** "_DGT_" already exists in file #714.1.") Q
"RTN","EAS136P",13,0)
 S DGFDA(714.1,"+1,",.01)="LTC IS SERVICE RELATED - COMBAT VET ELIGIBLE"
"RTN","EAS136P",14,0)
 S DGFDA(714.1,"+1,",.02)=1
"RTN","EAS136P",15,0)
 D UPDATE^DIE("","DGFDA","","DGERR")
"RTN","EAS136P",16,0)
 I $D(DGERR) D BMES^XPDUTL("  **** ERROR! "_DGT_" not added to file #714.1"),MES^XPDUTL(DGERR("DIERR",1)_": "_DGERR("DIERR",1,"TEXT",1)) Q
"RTN","EAS136P",17,0)
 D BMES^XPDUTL("   "_DGT_" successfully added.")
"RTN","EAS136P",18,0)
 Q
"VER")
8.0^22
**END**
**END**
