Released SD*5.3*508 SEQ #417
Extracted from mail message
**KIDS**:SD*5.3*508^

**INSTALL NAME**
SD*5.3*508
"BLD",6059,0)
SD*5.3*508^SCHEDULING^0^3070418^y
"BLD",6059,4,0)
^9.64PA^^
"BLD",6059,6)
2^
"BLD",6059,"KRN",0)
^9.67PA^8989.52^19
"BLD",6059,"KRN",.4,0)
.4
"BLD",6059,"KRN",.401,0)
.401
"BLD",6059,"KRN",.402,0)
.402
"BLD",6059,"KRN",.403,0)
.403
"BLD",6059,"KRN",.5,0)
.5
"BLD",6059,"KRN",.84,0)
.84
"BLD",6059,"KRN",3.6,0)
3.6
"BLD",6059,"KRN",3.8,0)
3.8
"BLD",6059,"KRN",9.2,0)
9.2
"BLD",6059,"KRN",9.8,0)
9.8
"BLD",6059,"KRN",9.8,"NM",0)
^9.68A^8^8
"BLD",6059,"KRN",9.8,"NM",1,0)
SDAMA300^^0^B56732651
"BLD",6059,"KRN",9.8,"NM",2,0)
SDAMA301^^0^B12164760
"BLD",6059,"KRN",9.8,"NM",3,0)
SDAMA303^^0^B24778447
"BLD",6059,"KRN",9.8,"NM",4,0)
SDAMA302^^0^B25526866
"BLD",6059,"KRN",9.8,"NM",5,0)
SDAMA304^^0^B8771531
"BLD",6059,"KRN",9.8,"NM",6,0)
SDAMA305^^0^B66007958
"BLD",6059,"KRN",9.8,"NM",7,0)
SDAMA306^^0^B11098328
"BLD",6059,"KRN",9.8,"NM",8,0)
SDAMA307^^0^B33225711
"BLD",6059,"KRN",9.8,"NM","B","SDAMA300",1)

"BLD",6059,"KRN",9.8,"NM","B","SDAMA301",2)

"BLD",6059,"KRN",9.8,"NM","B","SDAMA302",4)

"BLD",6059,"KRN",9.8,"NM","B","SDAMA303",3)

"BLD",6059,"KRN",9.8,"NM","B","SDAMA304",5)

"BLD",6059,"KRN",9.8,"NM","B","SDAMA305",6)

"BLD",6059,"KRN",9.8,"NM","B","SDAMA306",7)

"BLD",6059,"KRN",9.8,"NM","B","SDAMA307",8)

"BLD",6059,"KRN",19,0)
19
"BLD",6059,"KRN",19.1,0)
19.1
"BLD",6059,"KRN",101,0)
101
"BLD",6059,"KRN",409.61,0)
409.61
"BLD",6059,"KRN",771,0)
771
"BLD",6059,"KRN",870,0)
870
"BLD",6059,"KRN",8989.51,0)
8989.51
"BLD",6059,"KRN",8989.52,0)
8989.52
"BLD",6059,"KRN",8994,0)
8994
"BLD",6059,"KRN","B",.4,.4)

"BLD",6059,"KRN","B",.401,.401)

"BLD",6059,"KRN","B",.402,.402)

"BLD",6059,"KRN","B",.403,.403)

"BLD",6059,"KRN","B",.5,.5)

"BLD",6059,"KRN","B",.84,.84)

"BLD",6059,"KRN","B",3.6,3.6)

"BLD",6059,"KRN","B",3.8,3.8)

"BLD",6059,"KRN","B",9.2,9.2)

"BLD",6059,"KRN","B",9.8,9.8)

"BLD",6059,"KRN","B",19,19)

"BLD",6059,"KRN","B",19.1,19.1)

"BLD",6059,"KRN","B",101,101)

"BLD",6059,"KRN","B",409.61,409.61)

"BLD",6059,"KRN","B",771,771)

"BLD",6059,"KRN","B",870,870)

"BLD",6059,"KRN","B",8989.51,8989.51)

"BLD",6059,"KRN","B",8989.52,8989.52)

"BLD",6059,"KRN","B",8994,8994)

"BLD",6059,"QUES",0)
^9.62^^
"BLD",6059,"REQB",0)
^9.611^1^1
"BLD",6059,"REQB",1,0)
SD*5.3*426^2
"BLD",6059,"REQB","B","SD*5.3*426",1)

"MBREQ")
0
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813^2930925
"PKG",16,22,1,"PAH",1,0)
508^3070418^22950
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","SDAMA300")
0^1^B56732651^B42283370
"RTN","SDAMA300",1,0)
SDAMA300 ;BPOIFO/ACS-Filter API Validate Filters ; 9/14/05 7:49am
"RTN","SDAMA300",2,0)
 ;;5.3;Scheduling;**301,347,508**;13 Aug 1993
"RTN","SDAMA300",3,0)
 ;PER VHA DIRECTIVE 2004-038, DO NOT MODIFY THIS ROUTINE
"RTN","SDAMA300",4,0)
 ;
"RTN","SDAMA300",5,0)
 ;*****************************************************************
"RTN","SDAMA300",6,0)
 ;              CHANGE LOG
"RTN","SDAMA300",7,0)
 ;
"RTN","SDAMA300",8,0)
 ;  DATE      PATCH       DESCRIPTION
"RTN","SDAMA300",9,0)
 ;--------  ----------    -----------------------------------------
"RTN","SDAMA300",10,0)
 ;12/04/03  SD*5.3*301    ROUTINE COMPLETED
"RTN","SDAMA300",11,0)
 ;08/06/04  SD*5.3*347    ADDITION OF A NEW FILTER - DATE APPOINTMENT
"RTN","SDAMA300",12,0)
 ;                        MADE (FIELD #16) AND 2 NEW FIELDS TO RETURN:
"RTN","SDAMA300",13,0)
 ;                        1) AUTO-REBOOKED APPT DATE/TIME (FIELD #24)
"RTN","SDAMA300",14,0)
 ;                        2) NO-SHOW/CANCEL APPT DATE/TIME (FIELD #25)
"RTN","SDAMA300",15,0)
 ;02/22/07  SD*5.3*508    SEE SDAMA301 FOR CHANGE LIST
"RTN","SDAMA300",16,0)
 ;*****************************************************************
"RTN","SDAMA300",17,0)
 ;
"RTN","SDAMA300",18,0)
 ;*****************************************************************
"RTN","SDAMA300",19,0)
 ;
"RTN","SDAMA300",20,0)
 ;              VALIDATE FILTER ARRAY CONTENTS
"RTN","SDAMA300",21,0)
 ;INPUT
"RTN","SDAMA300",22,0)
 ;  SDARRAY    Appointment filters
"RTN","SDAMA300",23,0)
 ;  SDFLTR     Filter Flag array
"RTN","SDAMA300",24,0)
 ;
"RTN","SDAMA300",25,0)
 ;OUTPUT
"RTN","SDAMA300",26,0)
 ;  -1 if error
"RTN","SDAMA300",27,0)
 ;   1 if no errors
"RTN","SDAMA300",28,0)
 ;
"RTN","SDAMA300",29,0)
 ;*****************************************************************
"RTN","SDAMA300",30,0)
VALARR(SDARRAY,SDFLTR) ;
"RTN","SDAMA300",31,0)
 ;Initialize local variables
"RTN","SDAMA300",32,0)
 N SDI,SDX,SDQUIT,SDDATA,SDCOUNT,SDERR
"RTN","SDAMA300",33,0)
 S SDQUIT=0,SDERR=115
"RTN","SDAMA300",34,0)
 ;
"RTN","SDAMA300",35,0)
 ;Set filter flags and validate input array entries
"RTN","SDAMA300",36,0)
 F SDI="MAX","FLDS","FLTRS","SORT","VSTAPPTS","PURGED" Q:SDQUIT  D @SDI
"RTN","SDAMA300",37,0)
 Q:(SDARRAY("CNT")=-1) -1
"RTN","SDAMA300",38,0)
 ;filters allowed on these fields
"RTN","SDAMA300",39,0)
 F SDI=1:1:4,13,16 Q:SDQUIT  D
"RTN","SDAMA300",40,0)
 . I $G(SDARRAY(SDI))']"" S SDFLTR(SDI)=0
"RTN","SDAMA300",41,0)
 . E  S SDFLTR(SDI)=1 D
"RTN","SDAMA300",42,0)
 .. S SDCOUNT=$L(SDARRAY(SDI),";")
"RTN","SDAMA300",43,0)
 .. S SDQUIT=0
"RTN","SDAMA300",44,0)
 .. D @SDI
"RTN","SDAMA300",45,0)
 ;
"RTN","SDAMA300",46,0)
 I SDQUIT=0 D
"RTN","SDAMA300",47,0)
 . ;filters not allowed on these fields
"RTN","SDAMA300",48,0)
 . F SDI=5:1:12,14,15,17:1:26,28:1:SDARRAY("FC") Q:SDQUIT  D NOFIL
"RTN","SDAMA300",49,0)
 Q SDARRAY("CNT")
"RTN","SDAMA300",50,0)
 ;
"RTN","SDAMA300",51,0)
 ;*****************************************************************
"RTN","SDAMA300",52,0)
 ;
"RTN","SDAMA300",53,0)
1 ;SDARRAY(1): Appt dates
"RTN","SDAMA300",54,0)
 ;validate from/to date(/time)s
"RTN","SDAMA300",55,0)
 D CHKDTES($G(SDARRAY("FR")),$G(SDARRAY("TO")))
"RTN","SDAMA300",56,0)
 Q:SDQUIT
"RTN","SDAMA300",57,0)
 ;allow seconds in date/time filter!
"RTN","SDAMA300",58,0)
 I $L(SDARRAY("FR"))>14 D ERROR(SDERR)
"RTN","SDAMA300",59,0)
 Q:SDQUIT
"RTN","SDAMA300",60,0)
 I $L(SDARRAY("TO"))>14 D ERROR(SDERR)
"RTN","SDAMA300",61,0)
 Q
"RTN","SDAMA300",62,0)
2 ;SDARRAY(2): Clinic IEN
"RTN","SDAMA300",63,0)
 ;Clinic must be on ^SC
"RTN","SDAMA300",64,0)
 ;Clinic list is not in global
"RTN","SDAMA300",65,0)
 I SDARRAY("CLNGBL")'=1 D
"RTN","SDAMA300",66,0)
 . ; get each clinic IEN in the string and validate
"RTN","SDAMA300",67,0)
 . F SDX=1:1:SDCOUNT Q:SDQUIT  D
"RTN","SDAMA300",68,0)
 .. S SDDATA=$P(SDARRAY(2),";",SDX)
"RTN","SDAMA300",69,0)
 .. I ($G(SDDATA)=""!'$D(^SC(SDDATA,0))) D ERROR(SDERR) Q
"RTN","SDAMA300",70,0)
 .. D:$$CHKRSACL(SDDATA) ERROR(SDERR)    ;validate RSA Clinic (Type R)
"RTN","SDAMA300",71,0)
 ;Clinic list is in global or local array
"RTN","SDAMA300",72,0)
 I SDARRAY("CLNGBL")=1 D
"RTN","SDAMA300",73,0)
 . Q:SDARRAY(2)="^SC("   ; no validation required if clinic global
"RTN","SDAMA300",74,0)
 . S SDX=SDARRAY(2)
"RTN","SDAMA300",75,0)
 . ;check for existence of IENs
"RTN","SDAMA300",76,0)
 . N SDIEN S SDIEN=$O(@(SDX_"0)")) I +$G(SDIEN)=0 D ERROR(SDERR)
"RTN","SDAMA300",77,0)
 . Q:SDQUIT
"RTN","SDAMA300",78,0)
 . S SDDATA=0
"RTN","SDAMA300",79,0)
 . ; get each IEN in the array and validate
"RTN","SDAMA300",80,0)
 . F  S SDDATA=$O(@(SDX_"SDDATA)")) Q:(($G(SDDATA)="")!(SDQUIT))  D
"RTN","SDAMA300",81,0)
 .. I '$D(^SC(SDDATA,0)) D ERROR(SDERR) Q
"RTN","SDAMA300",82,0)
 .. D:$$CHKRSACL(SDDATA) ERROR(SDERR)    ;validate RSA Clinic (Type R)
"RTN","SDAMA300",83,0)
 Q
"RTN","SDAMA300",84,0)
3 ;SDARRAY(3): Appointment Status Code
"RTN","SDAMA300",85,0)
 F SDX=1:1:SDCOUNT Q:SDQUIT  D
"RTN","SDAMA300",86,0)
 . S SDDATA=";"_$P(SDARRAY(3),";",SDX)_";"
"RTN","SDAMA300",87,0)
 . I ";I;R;NT;NS;NSR;CC;CCR;CP;CPR;"'[(SDDATA) D ERROR(SDERR)
"RTN","SDAMA300",88,0)
 Q
"RTN","SDAMA300",89,0)
4 ;SDARRAY(4): Patient DFN
"RTN","SDAMA300",90,0)
 ;patient must be on ^DPT
"RTN","SDAMA300",91,0)
 ;DFN list is not in global
"RTN","SDAMA300",92,0)
 I SDARRAY("PATGBL")'=1 D
"RTN","SDAMA300",93,0)
 . ; get each DFN in the string and validate
"RTN","SDAMA300",94,0)
 . F SDX=1:1:SDCOUNT Q:SDQUIT  D
"RTN","SDAMA300",95,0)
 .. S SDDATA=$P(SDARRAY(4),";",SDX)
"RTN","SDAMA300",96,0)
 .. I $G(SDDATA)="" D ERROR(SDERR)
"RTN","SDAMA300",97,0)
 .. Q:SDQUIT
"RTN","SDAMA300",98,0)
 .. I '$D(^DPT(SDDATA)) D ERROR(SDERR)
"RTN","SDAMA300",99,0)
 .. Q:SDQUIT
"RTN","SDAMA300",100,0)
 ;DFN list is in global or local array
"RTN","SDAMA300",101,0)
 I SDARRAY("PATGBL")=1 D
"RTN","SDAMA300",102,0)
 . Q:SDARRAY(4)="^DPT("
"RTN","SDAMA300",103,0)
 . S SDX=SDARRAY(4)
"RTN","SDAMA300",104,0)
 . ;check for existence of DFNs
"RTN","SDAMA300",105,0)
 . N SDDFN S SDDFN=$O(@(SDX_"0)")) I +$G(SDDFN)=0 D ERROR(SDERR)
"RTN","SDAMA300",106,0)
 . Q:SDQUIT
"RTN","SDAMA300",107,0)
 . S SDDATA=0
"RTN","SDAMA300",108,0)
 . ; get each DFN in the array and validate
"RTN","SDAMA300",109,0)
 . F  S SDDATA=$O(@(SDX_"SDDATA)")) Q:(($G(SDDATA)="")!(SDQUIT))  D
"RTN","SDAMA300",110,0)
 .. I '$D(^DPT(SDDATA)) D ERROR(SDERR)
"RTN","SDAMA300",111,0)
 .. Q:SDQUIT
"RTN","SDAMA300",112,0)
 Q
"RTN","SDAMA300",113,0)
12 ;SDARRAY(12): Encounter Exists
"RTN","SDAMA300",114,0)
 ;Unpublished and should not be used by other applications
"RTN","SDAMA300",115,0)
 ;validate value
"RTN","SDAMA300",116,0)
 ;S SDQUIT=$S(SDARRAY("ENCTR")="":0,SDARRAY("ENCTR")="Y":0,SDARRAY("ENCTR")="N":0,1:1)
"RTN","SDAMA300",117,0)
 ;D:SDQUIT ERROR(SDERR)
"RTN","SDAMA300",118,0)
 Q
"RTN","SDAMA300",119,0)
13 ;SDARRAY(13): Primary Stop Code
"RTN","SDAMA300",120,0)
 ;primary stop code must exist on ^DIC(40.7,"C"
"RTN","SDAMA300",121,0)
 F SDX=1:1:SDCOUNT Q:SDQUIT  D
"RTN","SDAMA300",122,0)
 . S SDDATA=$P(SDARRAY(13),";",SDX)
"RTN","SDAMA300",123,0)
 . I '+SDDATA D ERROR(SDERR) Q
"RTN","SDAMA300",124,0)
 . I '$D(^DIC(40.7,"C",SDDATA)) D ERROR(SDERR) Q
"RTN","SDAMA300",125,0)
 Q
"RTN","SDAMA300",126,0)
16 ;SDARRAY(16): Date Appointment Made
"RTN","SDAMA300",127,0)
 ;validate from/to date(s)
"RTN","SDAMA300",128,0)
 D CHKDTES($G(SDARRAY("DAMFR")),$G(SDARRAY("DAMTO")))
"RTN","SDAMA300",129,0)
 Q:SDQUIT
"RTN","SDAMA300",130,0)
 ;ensure time not entered
"RTN","SDAMA300",131,0)
 I $L(SDARRAY("DAMFR"))>7 D ERROR(SDERR)
"RTN","SDAMA300",132,0)
 Q:SDQUIT
"RTN","SDAMA300",133,0)
 I $L(SDARRAY("DAMTO"))>7 D ERROR(SDERR)
"RTN","SDAMA300",134,0)
 Q
"RTN","SDAMA300",135,0)
CHKRSACL(SDCL) ;validate RSA clinics
"RTN","SDAMA300",136,0)
 ;
"RTN","SDAMA300",137,0)
 ;Input     SDCL - IEN of the clinic
"RTN","SDAMA300",138,0)
 ;Output    0 - Clinic OK
"RTN","SDAMA300",139,0)
 ;          1 - Clinic Error (Missing either Local Appointment
"RTN","SDAMA300",140,0)
 ;              purpose Id or Resource Id entry)
"RTN","SDAMA300",141,0)
 ;              
"RTN","SDAMA300",142,0)
 ;initialize variables
"RTN","SDAMA300",143,0)
 N SDRSA,SDRNODE,SDERR
"RTN","SDAMA300",144,0)
 S SDERR=0
"RTN","SDAMA300",145,0)
 ;quit if clinic is not of type "C" (Clinic)
"RTN","SDAMA300",146,0)
 ; - RSA Clinic that has not completed migration
"RTN","SDAMA300",147,0)
 Q:($P($G(^SC(SDCL,0)),"^",3)'="C") SDERR
"RTN","SDAMA300",148,0)
 ;determine clinic (RSA or VistA)
"RTN","SDAMA300",149,0)
 S SDRSA=$$RSACLNC^SDAMA307(SDCL)
"RTN","SDAMA300",150,0)
 Q:SDRSA SDERR  ;valid RSA clinic (has both Resource/LAP Ids)
"RTN","SDAMA300",151,0)
 ;check to ensure valid VistA clinic
"RTN","SDAMA300",152,0)
 S SDRNODE=$G(^SC(SDCL,"RSA"))
"RTN","SDAMA300",153,0)
 ;error if either resource or lap defined
"RTN","SDAMA300",154,0)
 S SDERR=$S((($P(SDRNODE,"^",4)="")&($P(SDRNODE,"^",5)="")):0,1:1)
"RTN","SDAMA300",155,0)
 Q SDERR
"RTN","SDAMA300",156,0)
VSTAPPTS ;validate parameter for retrieving only VistA Appointments
"RTN","SDAMA300",157,0)
 ;This flag supports the RPC View for RSA - unpublished feature
"RTN","SDAMA300",158,0)
 Q:($G(SDARRAY("VSTAPPTS"))="")
"RTN","SDAMA300",159,0)
 D:($G(SDARRAY("VSTAPPTS"))'=1) ERROR(SDERR)
"RTN","SDAMA300",160,0)
 Q
"RTN","SDAMA300",161,0)
PURGED ;validate parameter for retrieving PURGED VistA appts
"RTN","SDAMA300",162,0)
 Q:($G(SDARRAY("PURGED"))="")  ;parameter not set/used
"RTN","SDAMA300",163,0)
 D:($G(SDARRAY("PURGED"))'=1) ERROR(SDERR)
"RTN","SDAMA300",164,0)
 Q:(SDQUIT)  ;quit if parameter not set correctly
"RTN","SDAMA300",165,0)
 ;throw error if patient filter not defined or invalid field requested
"RTN","SDAMA300",166,0)
 D:($G(SDARRAY(4))']"") ERROR(SDERR)
"RTN","SDAMA300",167,0)
 Q:(SDQUIT)
"RTN","SDAMA300",168,0)
 N SDI F SDI=5:1:9,11,22,28,30,31,33 Q:(SDQUIT)  D
"RTN","SDAMA300",169,0)
 .D:((";"_$G(SDARRAY("FLDS"))_";")[(";"_SDI_";")) ERROR(SDERR)
"RTN","SDAMA300",170,0)
 Q
"RTN","SDAMA300",171,0)
NOFIL ;No filter allowed
"RTN","SDAMA300",172,0)
 I $G(SDARRAY(SDI))]"" D ERROR(SDERR)
"RTN","SDAMA300",173,0)
 Q
"RTN","SDAMA300",174,0)
FMDATE(SDDATE,SDERR) ;
"RTN","SDAMA300",175,0)
 ;dates must be valid internal FileMan format
"RTN","SDAMA300",176,0)
 N X,Y,%H,%T,%Y
"RTN","SDAMA300",177,0)
 S Y=SDDATE D DD^%DT I Y=-1 D ERROR(SDERR)
"RTN","SDAMA300",178,0)
 Q:SDQUIT
"RTN","SDAMA300",179,0)
 ;dates cannot be imprecise
"RTN","SDAMA300",180,0)
 S X=SDDATE D H^%DTC I %H=0 D ERROR(SDERR)
"RTN","SDAMA300",181,0)
 Q
"RTN","SDAMA300",182,0)
CHKDTES(SDFROM,SDTO) ;validate date(/time)s
"RTN","SDAMA300",183,0)
 N SDI,X,Y,%DT
"RTN","SDAMA300",184,0)
 S %DT="STX"
"RTN","SDAMA300",185,0)
 F SDI=SDFROM,SDTO Q:SDQUIT  D
"RTN","SDAMA300",186,0)
 .;valid fileman format
"RTN","SDAMA300",187,0)
 .I $G(SDI)'="" D
"RTN","SDAMA300",188,0)
 ..D FMDATE(SDI,SDERR)
"RTN","SDAMA300",189,0)
 ..Q:SDQUIT
"RTN","SDAMA300",190,0)
 ..;check for valid dates / leap yr dates
"RTN","SDAMA300",191,0)
 ..I SDI'[9999999 D
"RTN","SDAMA300",192,0)
 ...S X=$$FMTE^XLFDT(SDI)
"RTN","SDAMA300",193,0)
 ...D ^%DT
"RTN","SDAMA300",194,0)
 ...I Y<0 D ERROR(SDERR)
"RTN","SDAMA300",195,0)
 .Q:SDQUIT
"RTN","SDAMA300",196,0)
 Q:SDQUIT
"RTN","SDAMA300",197,0)
 ;from date(/time) can't be after to  date(/time)
"RTN","SDAMA300",198,0)
 I SDFROM>SDTO D ERROR(SDERR)
"RTN","SDAMA300",199,0)
 Q
"RTN","SDAMA300",200,0)
MAX ;Maximum number of appointments requested
"RTN","SDAMA300",201,0)
 ;max can't be 0
"RTN","SDAMA300",202,0)
 N SDMAXAPT,SDPCOUNT,SDCCOUNT
"RTN","SDAMA300",203,0)
 S SDMAXAPT=$G(SDARRAY("MAX"))
"RTN","SDAMA300",204,0)
 S (SDPCOUNT,SDCCOUNT)=0
"RTN","SDAMA300",205,0)
 I $G(SDMAXAPT)]"" D
"RTN","SDAMA300",206,0)
 . ;Check Max Entry
"RTN","SDAMA300",207,0)
 . I +SDMAXAPT'=SDMAXAPT S SDQUIT=1 Q
"RTN","SDAMA300",208,0)
 . I SDMAXAPT=0 S SDQUIT=1 Q
"RTN","SDAMA300",209,0)
 . I SDMAXAPT["." S SDQUIT=1 Q
"RTN","SDAMA300",210,0)
 . ;Verify a SINGLE valid PATIENT &/OR CLINIC Entry
"RTN","SDAMA300",211,0)
 . ;Get Number of Patients passed in
"RTN","SDAMA300",212,0)
 . I SDARRAY("PATGBL")=1 S SDPCOUNT=$$CHKGBL(SDARRAY(4))
"RTN","SDAMA300",213,0)
 . I SDARRAY("PATGBL")=0 S SDPCOUNT=$L(SDARRAY(4),";")
"RTN","SDAMA300",214,0)
 . ;Get Number of Clinics passed in
"RTN","SDAMA300",215,0)
 . I SDARRAY("CLNGBL")=1 S SDCCOUNT=$$CHKGBL(SDARRAY(2))
"RTN","SDAMA300",216,0)
 . I SDARRAY("CLNGBL")=0 S SDCCOUNT=$L(SDARRAY(2),";")
"RTN","SDAMA300",217,0)
 . I (SDPCOUNT>1)!(SDCCOUNT>1) S SDQUIT=1 Q
"RTN","SDAMA300",218,0)
 . I SDPCOUNT=0,SDCCOUNT=0 S SDQUIT=1
"RTN","SDAMA300",219,0)
 I SDQUIT D ERROR(SDERR)
"RTN","SDAMA300",220,0)
 Q
"RTN","SDAMA300",221,0)
 ;
"RTN","SDAMA300",222,0)
FLDS ;Quit if field list is null
"RTN","SDAMA300",223,0)
 N SDFIELDS,SDFIELD
"RTN","SDAMA300",224,0)
 I $G(SDARRAY("FLDS"))="" D ERROR(SDERR)
"RTN","SDAMA300",225,0)
 Q:SDQUIT
"RTN","SDAMA300",226,0)
 S SDFIELDS=SDARRAY("FLDS")
"RTN","SDAMA300",227,0)
 S SDCOUNT=$L(SDFIELDS,";")
"RTN","SDAMA300",228,0)
 F SDI=1:1:SDCOUNT Q:SDQUIT  D
"RTN","SDAMA300",229,0)
 . S SDFIELD=$P(SDFIELDS,";",SDI)
"RTN","SDAMA300",230,0)
 . I (($G(SDFIELD)'?.N)!($G(SDFIELD)<1)!($G(SDFIELD)=27)!($G(SDFIELD)>SDARRAY("FC"))) D ERROR(SDERR) S SDQUIT=1
"RTN","SDAMA300",231,0)
 Q
"RTN","SDAMA300",232,0)
 ;
"RTN","SDAMA300",233,0)
FLTRS ;Quit if max filters exceeded
"RTN","SDAMA300",234,0)
 N SDFCNT S SDFCNT=0
"RTN","SDAMA300",235,0)
 F SDI=1:1:SDARRAY("FC") D
"RTN","SDAMA300",236,0)
 . I $G(SDARRAY(SDI))]"" S SDFCNT=SDFCNT+1
"RTN","SDAMA300",237,0)
 I SDFCNT>SDARRAY("MF") D ERROR(SDERR) S SDQUIT=1
"RTN","SDAMA300",238,0)
 Q
"RTN","SDAMA300",239,0)
 ;
"RTN","SDAMA300",240,0)
SORT ;Quit if SORT Filter is a value other than P or null
"RTN","SDAMA300",241,0)
 N SDSORT
"RTN","SDAMA300",242,0)
 S SDSORT=$G(SDARRAY("SORT"))
"RTN","SDAMA300",243,0)
 I $G(SDSORT)="" Q
"RTN","SDAMA300",244,0)
 I '($G(SDSORT)="P") D ERROR(SDERR)
"RTN","SDAMA300",245,0)
 Q
"RTN","SDAMA300",246,0)
 ;
"RTN","SDAMA300",247,0)
ERROR(SDERRNUM) ;Generate Error and put in ^TMP global
"RTN","SDAMA300",248,0)
 S SDARRAY("CNT")=-1,SDQUIT=1
"RTN","SDAMA300",249,0)
 S $P(^TMP($J,"SDAMA301",SDERRNUM),"^",1)=$P($T(@SDERRNUM),";;",2)
"RTN","SDAMA300",250,0)
 Q
"RTN","SDAMA300",251,0)
 ;
"RTN","SDAMA300",252,0)
101 ;;DATABASE IS UNAVAILABLE
"RTN","SDAMA300",253,0)
115 ;;INVALID INPUT ARRAY ENTRY
"RTN","SDAMA300",254,0)
116 ;;DATA MISMATCH
"RTN","SDAMA300",255,0)
117 ;;Fatal RSA error. See SDAM RSA ERROR LOG file.
"RTN","SDAMA300",256,0)
 ;
"RTN","SDAMA300",257,0)
CHKGBL(SDGBL) ;Check Global for number of entries
"RTN","SDAMA300",258,0)
 N SDIEN,SDCOUNT
"RTN","SDAMA300",259,0)
 S (SDIEN,SDCOUNT)=0
"RTN","SDAMA300",260,0)
 F  S SDIEN=$O(@(SDGBL_"SDIEN)"))  Q:(+$G(SDIEN)=0)!(SDCOUNT>2)  D
"RTN","SDAMA300",261,0)
 .S SDCOUNT=SDCOUNT+1
"RTN","SDAMA300",262,0)
 Q SDCOUNT
"RTN","SDAMA301")
0^2^B12164760^B3523610
"RTN","SDAMA301",1,0)
SDAMA301 ;BPOIFO/ACS-Filter API Main Entry ; 1/3/06 12:45pm
"RTN","SDAMA301",2,0)
 ;;5.3;Scheduling;**301,347,426,508**;13 Aug 1993
"RTN","SDAMA301",3,0)
 ;PER VHA DIRECTIVE 2004-038, DO NOT MODIFY THIS ROUTINE
"RTN","SDAMA301",4,0)
 ;
"RTN","SDAMA301",5,0)
 ;**   THIS IS A SUPPORTED API: SEE DBIA #4433                   **
"RTN","SDAMA301",6,0)
 ;
"RTN","SDAMA301",7,0)
 ;*****************************************************************
"RTN","SDAMA301",8,0)
 ;              CHANGE LOG
"RTN","SDAMA301",9,0)
 ;
"RTN","SDAMA301",10,0)
 ;  DATE      PATCH       DESCRIPTION
"RTN","SDAMA301",11,0)
 ;--------  ----------    -----------------------------------------
"RTN","SDAMA301",12,0)
 ;12/04/03  SD*5.3*301    ROUTINE COMPLETED
"RTN","SDAMA301",13,0)
 ;08/06/04  SD*5.3*347    ADDITION OF A NEW FILTER - DATE APPOINTMENT
"RTN","SDAMA301",14,0)
 ;                        MADE (FIELD #16) AND 2 NEW FIELDS TO RETURN:
"RTN","SDAMA301",15,0)
 ;                        1) AUTO-REBOOKED APPT DATE/TIME (FIELD #24)
"RTN","SDAMA301",16,0)
 ;                        2) NO-SHOW/CANCEL APPT DATE/TIME (FIELD #25)
"RTN","SDAMA301",17,0)
 ;02/22/07  SD*5.3*508    ADDITION OF A NEW PARAMETER - "PURGED"
"RTN","SDAMA301",18,0)
 ;                        RETURNS NON-CANCELED VISTA APPTS THAT EXIST
"RTN","SDAMA301",19,0)
 ;                        ONLY IN SUB-FILE (#2.98).  ADDITION OF 8
"RTN","SDAMA301",20,0)
 ;                        NEW FIELDS TO RETURN:
"RTN","SDAMA301",21,0)
 ;                        1) RSA APPT ID (FIELD #26)
"RTN","SDAMA301",22,0)
 ;                        2) 2507 REQUEST IEN (FIELD #27)
"RTN","SDAMA301",23,0)
 ;                        3) DATA ENTRY CLERK (FIELD #28)
"RTN","SDAMA301",24,0)
 ;                        4) NO-SHOW/CANCELED BY (FIELD #29)
"RTN","SDAMA301",25,0)
 ;                        5) CHECK-IN USER (FIELD #30)
"RTN","SDAMA301",26,0)
 ;                        6) CHECK-OUT USER (FIELD #31)
"RTN","SDAMA301",27,0)
 ;                        7) CANCELLATION REASON (FIELD #32)
"RTN","SDAMA301",28,0)
 ;                        8) CONSULT IEN (FIELD #33)
"RTN","SDAMA301",29,0)
 ;*****************************************************************
"RTN","SDAMA301",30,0)
 ;
"RTN","SDAMA301",31,0)
 ;*****************************************************************
"RTN","SDAMA301",32,0)
 ;
"RTN","SDAMA301",33,0)
 ;               GET APPOINTMENT DATA
"RTN","SDAMA301",34,0)
 ;
"RTN","SDAMA301",35,0)
 ;INPUT
"RTN","SDAMA301",36,0)
 ;  SDINPUT   Appointment Filters (required)
"RTN","SDAMA301",37,0)
 ;  
"RTN","SDAMA301",38,0)
 ;OUTPUT
"RTN","SDAMA301",39,0)
 ;  Extrinsic call returns: 
"RTN","SDAMA301",40,0)
 ;    -1 if error
"RTN","SDAMA301",41,0)
 ;    Appointment count if no error
"RTN","SDAMA301",42,0)
 ;  If no error, data returned in:
"RTN","SDAMA301",43,0)
 ;    ^TMP($J,"SDAMA301",SORT1,SORT2,Appt Date/Time)=DATAn^DATAn^..
"RTN","SDAMA301",44,0)
 ;    where SORT1 is first sort (patient or clinic), SORT2 is
"RTN","SDAMA301",45,0)
 ;    second sort (patient or clinic), and DATAn
"RTN","SDAMA301",46,0)
 ;    is the appointment data requested for Fields 1-27
"RTN","SDAMA301",47,0)
 ;    ^TMP($J,"SDAMA301",SORT1,SORT2,Appt Date/Time,0)=DATAn^DATAn^..
"RTN","SDAMA301",48,0)
 ;    where DATAn is the appointment data requested for Fields 28-32
"RTN","SDAMA301",49,0)
 ;    (Use the MODULO Operator Ie. Field 28#27 = 1, 29#27=2 ...)
"RTN","SDAMA301",50,0)
 ;    ^TMP($J,"SDAMA301",SORT1,SORT2,Appt Date/Time,"C")=COMMENTS
"RTN","SDAMA301",51,0)
 ;  If RSA appointments are returned then the following global
"RTN","SDAMA301",52,0)
 ;    will exist detailing the source of the RSA appointments.
"RTN","SDAMA301",53,0)
 ;    ^TMP($J,"SDAMA301","SOURCE")="RSA" - From Remote RSA Database
"RTN","SDAMA301",54,0)
 ;    ^TMP($J,"SDAMA301","SOURCE")="VistA Backup" - From Local VistA
"RTN","SDAMA301",55,0)
 ;  If errors, error codes and messages returned in:
"RTN","SDAMA301",56,0)
 ;    ^TMP($J,"SDAMA301",error_code)=error_message
"RTN","SDAMA301",57,0)
 ;  
"RTN","SDAMA301",58,0)
 ;*****************************************************************
"RTN","SDAMA301",59,0)
SDAPI(SDINPUT) ;main API controller
"RTN","SDAMA301",60,0)
 N SDARRAY,SDFLTR,SDQUIT
"RTN","SDAMA301",61,0)
 S SDQUIT=0
"RTN","SDAMA301",62,0)
 S SDQUIT=$$INIT(.SDINPUT,.SDARRAY,.SDFLTR)  ;initialize environment
"RTN","SDAMA301",63,0)
 Q:(SDQUIT) -1  ;input array error
"RTN","SDAMA301",64,0)
 Q $$APPTS(.SDARRAY,.SDFLTR)  ;Retrieve VistA and RSA Appointments
"RTN","SDAMA301",65,0)
 ;
"RTN","SDAMA301",66,0)
 ;*****************************************************************
"RTN","SDAMA301",67,0)
 ;INPUT
"RTN","SDAMA301",68,0)
 ;  SDINPUT   Appointment Filters (Required / By Reference)
"RTN","SDAMA301",69,0)
 ;  SDARRAY   Array to hold working copy of Appt Filter Array
"RTN","SDAMA301",70,0)
 ;            (Required / By Reference)
"RTN","SDAMA301",71,0)
 ;  SDFLTR    Filter Flag Array (Required / By Reference)
"RTN","SDAMA301",72,0)
 ;  
"RTN","SDAMA301",73,0)
 ;OUTPUT
"RTN","SDAMA301",74,0)
 ;    Extrinsic call returns: 
"RTN","SDAMA301",75,0)
 ;      1 if error occurred initializing environment
"RTN","SDAMA301",76,0)
 ;      0 if no error occurred  
"RTN","SDAMA301",77,0)
 ;*****************************************************************
"RTN","SDAMA301",78,0)
INIT(SDINPUT,SDARRAY,SDFLTR) ;
"RTN","SDAMA301",79,0)
 K ^TMP($J,"SDAMA301")
"RTN","SDAMA301",80,0)
 ;Initialize global variables
"RTN","SDAMA301",81,0)
 N SDI,SDQUIT
"RTN","SDAMA301",82,0)
 S (SDARRAY("CNT"),SDARRAY("RSA"),SDQUIT,SDFLTR)=0
"RTN","SDAMA301",83,0)
 ;Set Field Count and Max Filter variables
"RTN","SDAMA301",84,0)
 S SDARRAY("FC")=33,SDARRAY("MF")=6
"RTN","SDAMA301",85,0)
 ;Copy input array into "working" array
"RTN","SDAMA301",86,0)
 F SDI=1:1:SDARRAY("FC") S SDARRAY(SDI)=$G(SDINPUT(SDI))
"RTN","SDAMA301",87,0)
 S SDARRAY("FLDS")=$G(SDINPUT("FLDS"))  ;fields to return to app.
"RTN","SDAMA301",88,0)
 S SDARRAY("MAX")=$G(SDINPUT("MAX"))  ;# of records to return (-/+)
"RTN","SDAMA301",89,0)
 S SDARRAY("SORT")=$G(SDINPUT("SORT"))  ;removes clinic ien from root
"RTN","SDAMA301",90,0)
 S SDARRAY("VSTAPPTS")=$G(SDINPUT("VSTAPPTS"))  ;get only VistA Appts
"RTN","SDAMA301",91,0)
 S SDARRAY("PURGED")=$G(SDINPUT("PURGED"))  ;get Purged VistA Appts
"RTN","SDAMA301",92,0)
 ;Initialize Input Array Filters as needed. Quit if error
"RTN","SDAMA301",93,0)
 D INITAE^SDAMA306(.SDARRAY)
"RTN","SDAMA301",94,0)
 Q:SDQUIT 1
"RTN","SDAMA301",95,0)
 ;Validate Input Array Filters.  Quit if error
"RTN","SDAMA301",96,0)
 I ($$VALARR^SDAMA300(.SDARRAY,.SDFLTR)=-1) S SDQUIT=1
"RTN","SDAMA301",97,0)
 Q SDQUIT
"RTN","SDAMA301",98,0)
 ;
"RTN","SDAMA301",99,0)
 ;*****************************************************************
"RTN","SDAMA301",100,0)
 ;INPUT
"RTN","SDAMA301",101,0)
 ;  SDARRAY   Array to hold working copy of Appt Filter Array
"RTN","SDAMA301",102,0)
 ;            (Required / By Reference)
"RTN","SDAMA301",103,0)
 ;  SDFLTR    Filter Flag Array (Required / By Reference)
"RTN","SDAMA301",104,0)
 ;  
"RTN","SDAMA301",105,0)
 ;OUTPUT
"RTN","SDAMA301",106,0)
 ;    Extrinsic call returns: 
"RTN","SDAMA301",107,0)
 ;      #<0 if error occurred retrieving appointments
"RTN","SDAMA301",108,0)
 ;      0 if no appointments exist (Based on Filter Criteria)
"RTN","SDAMA301",109,0)
 ;      #>0 Number of Appointments returned 
"RTN","SDAMA301",110,0)
 ;*****************************************************************
"RTN","SDAMA301",111,0)
APPTS(SDARRAY,SDFLTR) ;retrieve appointments
"RTN","SDAMA301",112,0)
 ;initialize variables
"RTN","SDAMA301",113,0)
 N SDDV
"RTN","SDAMA301",114,0)
 ;If Patient DFN populated, process by patient
"RTN","SDAMA301",115,0)
 I $G(SDARRAY(4))]"" D
"RTN","SDAMA301",116,0)
 . ;set RSA flag to true if clinic filter not defined
"RTN","SDAMA301",117,0)
 . S:($G(SDARRAY(2))']"") SDARRAY("RSA")=1
"RTN","SDAMA301",118,0)
 . ;get data
"RTN","SDAMA301",119,0)
 . D PAT^SDAMA303(.SDARRAY,.SDDV,.SDFLTR)
"RTN","SDAMA301",120,0)
 . ;if clinic filter defined and RSA flag is false
"RTN","SDAMA301",121,0)
 . ;ensure RSA does not need to be called.
"RTN","SDAMA301",122,0)
 . D:(($G(SDARRAY(2))]"")&(SDARRAY("RSA")=0)) CALLRSA^SDAMA307(.SDARRAY)
"RTN","SDAMA301",123,0)
 ;
"RTN","SDAMA301",124,0)
 ;If Patient DFN is not populated, process by clinic
"RTN","SDAMA301",125,0)
 I $G(SDARRAY(4))']"" D
"RTN","SDAMA301",126,0)
 . D CLIN^SDAMA302(.SDARRAY,.SDDV,.SDFLTR)
"RTN","SDAMA301",127,0)
 ;
"RTN","SDAMA301",128,0)
 ;--Phase II--
"RTN","SDAMA301",129,0)
 ;If RSA flag = "true" and RSA is implemented, and the user has not
"RTN","SDAMA301",130,0)
 ;requested only VistA appointments ("VSTAPPTS"=1), then get data 
"RTN","SDAMA301",131,0)
 ;from RSA
"RTN","SDAMA301",132,0)
 D:(('+SDARRAY("VSTAPPTS"))&(SDARRAY("RSA"))&($$IMP^SDAMA307())) DATA^SDAMA307(.SDARRAY)
"RTN","SDAMA301",133,0)
 ;
"RTN","SDAMA301",134,0)
 ;Pass back appointment count
"RTN","SDAMA301",135,0)
 Q SDARRAY("CNT")
"RTN","SDAMA302")
0^4^B25526866^B24026521
"RTN","SDAMA302",1,0)
SDAMA302 ;BPOIFO/ACS-Filter API By Clinic ; 9/14/05 12:45pm
"RTN","SDAMA302",2,0)
 ;;5.3;Scheduling;**301,347,508**;13 Aug 1993
"RTN","SDAMA302",3,0)
 ;PER VHA DIRECTIVE 2004-038, DO NOT MODIFY THIS ROUTINE
"RTN","SDAMA302",4,0)
 ;
"RTN","SDAMA302",5,0)
 ;*****************************************************************
"RTN","SDAMA302",6,0)
 ;              CHANGE LOG
"RTN","SDAMA302",7,0)
 ;
"RTN","SDAMA302",8,0)
 ;  DATE      PATCH       DESCRIPTION
"RTN","SDAMA302",9,0)
 ;--------  ----------    -----------------------------------------
"RTN","SDAMA302",10,0)
 ;12/04/03  SD*5.3*301    ROUTINE COMPLETED
"RTN","SDAMA302",11,0)
 ;08/06/04  SD*5.3*347    CHANGE CALL TO ^SDAMA305 TO SETARRAY
"RTN","SDAMA302",12,0)
 ;02/22/07  SD*5.3*508    SEE SDAMA301 FOR CHANGE LIST
"RTN","SDAMA302",13,0)
 ;*****************************************************************
"RTN","SDAMA302",14,0)
 ;
"RTN","SDAMA302",15,0)
 ;*****************************************************************
"RTN","SDAMA302",16,0)
 ;
"RTN","SDAMA302",17,0)
 ;               GET APPOINTMENT DATA BY CLINIC
"RTN","SDAMA302",18,0)
 ;
"RTN","SDAMA302",19,0)
 ;INPUT
"RTN","SDAMA302",20,0)
 ;  SDARRAY   Appointment Filter array
"RTN","SDAMA302",21,0)
 ;  SDDV      Appointment Data Values array
"RTN","SDAMA302",22,0)
 ;  SDFLTR    Filter Flags array
"RTN","SDAMA302",23,0)
 ;  
"RTN","SDAMA302",24,0)
 ;*****************************************************************
"RTN","SDAMA302",25,0)
CLIN(SDARRAY,SDDV,SDFLTR) ;
"RTN","SDAMA302",26,0)
 N SDCOUNT,SDX,SDQUIT,SDCLIEN,SDSTART,SDEND,SDGBL
"RTN","SDAMA302",27,0)
 S (SDCOUNT,SDQUIT)=0
"RTN","SDAMA302",28,0)
 ;Set up start and end date/times for search criteria
"RTN","SDAMA302",29,0)
 I $G(SDARRAY("MAX"))'<0  D
"RTN","SDAMA302",30,0)
 .S SDSTART=$S(SDARRAY("FR")'="":(SDARRAY("FR")-.000001),1:0)
"RTN","SDAMA302",31,0)
 .S SDEND=SDARRAY("TO")
"RTN","SDAMA302",32,0)
 I $G(SDARRAY("MAX"))<0  D
"RTN","SDAMA302",33,0)
 .S SDSTART=$S($G(SDARRAY("FR"))'="":SDARRAY("FR"),1:0)
"RTN","SDAMA302",34,0)
 .S SDEND=(SDARRAY("TO")+.000001)
"RTN","SDAMA302",35,0)
 ;
"RTN","SDAMA302",36,0)
 ;If clinic filter is populated
"RTN","SDAMA302",37,0)
 I $L($G(SDARRAY(2)))>0 D
"RTN","SDAMA302",38,0)
 . ;if clinic is in a list:
"RTN","SDAMA302",39,0)
 . I SDARRAY("CLNGBL")=0 D
"RTN","SDAMA302",40,0)
 .. S SDCOUNT=$L(SDARRAY(2),";")
"RTN","SDAMA302",41,0)
 .. ;For each clinic in the filter:
"RTN","SDAMA302",42,0)
 .. F SDX=1:1:SDCOUNT D
"RTN","SDAMA302",43,0)
 ... S SDCLIEN=$P(SDARRAY(2),";",SDX)
"RTN","SDAMA302",44,0)
 ... ;call VistA for appointment information
"RTN","SDAMA302",45,0)
 ... D CALLVSTA(SDCLIEN,SDSTART,SDEND,.SDARRAY)
"RTN","SDAMA302",46,0)
 . ;if clinic is in array, get IENs
"RTN","SDAMA302",47,0)
 . I SDARRAY("CLNGBL")=1 D
"RTN","SDAMA302",48,0)
 .. S SDGBL=SDARRAY(2),SDCLIEN=0
"RTN","SDAMA302",49,0)
 .. ;for each clinic in the global:
"RTN","SDAMA302",50,0)
 .. F  S SDCLIEN=$O(@(SDGBL_"SDCLIEN)")) Q:$G(SDCLIEN)=""  D
"RTN","SDAMA302",51,0)
 ... ;call VistA for appointment information
"RTN","SDAMA302",52,0)
 ... D CALLVSTA(SDCLIEN,SDSTART,SDEND,.SDARRAY)
"RTN","SDAMA302",53,0)
 ;
"RTN","SDAMA302",54,0)
 ;If clinic filter is not populated
"RTN","SDAMA302",55,0)
 I $L(SDARRAY(2))'>0 D
"RTN","SDAMA302",56,0)
 . ;for each clinic on ^SC
"RTN","SDAMA302",57,0)
 . S SDCLIEN=0 F  S SDCLIEN=$O(^SC(SDCLIEN)) Q:(+$G(SDCLIEN)=0)  D
"RTN","SDAMA302",58,0)
 .. ;call VistA for appointment information
"RTN","SDAMA302",59,0)
 .. D CALLVSTA(SDCLIEN,SDSTART,SDEND,.SDARRAY)
"RTN","SDAMA302",60,0)
 Q
"RTN","SDAMA302",61,0)
 ;
"RTN","SDAMA302",62,0)
CALLVSTA(SDCLIEN,SDSTART,SDEND,SDARRAY) ;
"RTN","SDAMA302",63,0)
 ;retrieve appointment information from VistA
"RTN","SDAMA302",64,0)
 I $$CLMIG^SDAMA307(SDCLIEN,.SDARRAY) D
"RTN","SDAMA302",65,0)
 . ;adjust end time if clinic has completed migration
"RTN","SDAMA302",66,0)
 . ;(Only Non-migrated appointments returned from VistA)
"RTN","SDAMA302",67,0)
 . I $G(SDARRAY("MIG"))]"" D
"RTN","SDAMA302",68,0)
 .. S SDEND=+$G(SDARRAY("MIG"))
"RTN","SDAMA302",69,0)
 .. ;increment SDEND to capture all appointments when ordering
"RTN","SDAMA302",70,0)
 .. S:$G(SDARRAY("MAX"))<0 SDEND=(SDEND+.000001)
"RTN","SDAMA302",71,0)
 . D GETAPPT(SDCLIEN,SDSTART,SDEND,.SDARRAY)
"RTN","SDAMA302",72,0)
 Q
"RTN","SDAMA302",73,0)
 ;
"RTN","SDAMA302",74,0)
GETAPPT(SDCLIEN,SDSTART,SDEND,SDARRAY) ;
"RTN","SDAMA302",75,0)
 ;since "by clinic", 1st sort is clinic
"RTN","SDAMA302",76,0)
 S SDARRAY("SORT1")=SDCLIEN
"RTN","SDAMA302",77,0)
 N SDAPPTDT,SDA
"RTN","SDAMA302",78,0)
 ;if the current clinic has no appointments on ^SC, get next clinic
"RTN","SDAMA302",79,0)
 Q:'$D(^SC(SDCLIEN,"S"))
"RTN","SDAMA302",80,0)
 ;
"RTN","SDAMA302",81,0)
 ;get first "N" appointments
"RTN","SDAMA302",82,0)
 I $G(SDARRAY("MAX"))'<0  D
"RTN","SDAMA302",83,0)
 .S SDAPPTDT=SDSTART
"RTN","SDAMA302",84,0)
 .;spin through each date/time for current clinic
"RTN","SDAMA302",85,0)
 .F  S SDAPPTDT=$O(^SC(SDCLIEN,"S",SDAPPTDT)) Q:$S(+$G(SDAPPTDT)=0:1,SDAPPTDT>SDEND:1,SDARRAY("CNT")=$G(SDARRAY("MAX")):1,1:0)  D
"RTN","SDAMA302",86,0)
 .. ;spin through each appointment for that date/time
"RTN","SDAMA302",87,0)
 .. S SDA=0 F  S SDA=$O(^SC(SDCLIEN,"S",SDAPPTDT,1,SDA)) Q:$S(+$G(SDA)=0:1,SDARRAY("CNT")=$G(SDARRAY("MAX")):1,1:0)  D
"RTN","SDAMA302",88,0)
 ... D GETINFO(SDCLIEN,SDAPPTDT,SDA,.SDARRAY)
"RTN","SDAMA302",89,0)
 ;
"RTN","SDAMA302",90,0)
 ;get last "N" appointments
"RTN","SDAMA302",91,0)
 I $G(SDARRAY("MAX"))<0  D
"RTN","SDAMA302",92,0)
 .S SDAPPTDT=SDEND
"RTN","SDAMA302",93,0)
 .;spin through each date/time for current clinic (REVERSE Order)
"RTN","SDAMA302",94,0)
 .F  S SDAPPTDT=$O(^SC(SDCLIEN,"S",SDAPPTDT),-1) Q:$S(+$G(SDAPPTDT)=0:1,SDAPPTDT<SDSTART:1,SDARRAY("CNT")=-$G(SDARRAY("MAX")):1,1:0)  D
"RTN","SDAMA302",95,0)
 .. ;spin through each appointment for that date/time (REVERSE Order)
"RTN","SDAMA302",96,0)
 .. S SDA="" F  S SDA=$O(^SC(SDCLIEN,"S",SDAPPTDT,1,SDA),-1) Q:$S(+$G(SDA)=0:1,SDARRAY("CNT")=-$G(SDARRAY("MAX")):1,1:0)  D
"RTN","SDAMA302",97,0)
 ... D GETINFO(SDCLIEN,SDAPPTDT,SDA,.SDARRAY)
"RTN","SDAMA302",98,0)
 Q
"RTN","SDAMA302",99,0)
 ;
"RTN","SDAMA302",100,0)
GETINFO(SDCLIEN,SDAPPTDT,SDA,SDARRAY) ;
"RTN","SDAMA302",101,0)
 N SDPATIEN,SDCAN,SDQUIT
"RTN","SDAMA302",102,0)
 S SDQUIT=0
"RTN","SDAMA302",103,0)
 ;get appointment data on ^SC
"RTN","SDAMA302",104,0)
 S SDARRAY("SC0")=$G(^SC(SDCLIEN,"S",SDAPPTDT,1,SDA,0))
"RTN","SDAMA302",105,0)
 S SDARRAY("SCC")=$G(^SC(SDCLIEN,"S",SDAPPTDT,1,SDA,"C"))
"RTN","SDAMA302",106,0)
 S SDARRAY("SCOB")=$G(^SC(SDCLIEN,"S",SDAPPTDT,1,SDA,"OB"))
"RTN","SDAMA302",107,0)
 S SDARRAY("SCONS")=$G(^SC(SDCLIEN,"S",SDAPPTDT,1,SDA,"CONS"))
"RTN","SDAMA302",108,0)
 S SDARRAY("DATE")=SDAPPTDT
"RTN","SDAMA302",109,0)
 ;exclude cancelled appts
"RTN","SDAMA302",110,0)
 S SDCAN=$P($G(SDARRAY("SC0")),"^",9)
"RTN","SDAMA302",111,0)
 Q:$G(SDCAN)="C"
"RTN","SDAMA302",112,0)
 ;initialize patient appointment data to null and get patient DFN
"RTN","SDAMA302",113,0)
 S (SDARRAY("DPT0"),SDARRAY("DPT1"))=""
"RTN","SDAMA302",114,0)
 S (SDPATIEN,SDARRAY("PAT"))=+SDARRAY("SC0")
"RTN","SDAMA302",115,0)
 ;quit if patient is null on ^SC
"RTN","SDAMA302",116,0)
 Q:SDPATIEN=0
"RTN","SDAMA302",117,0)
 ;since "by clinic", 2nd sort is patient
"RTN","SDAMA302",118,0)
 S SDARRAY("SORT2")=SDPATIEN
"RTN","SDAMA302",119,0)
 ;get corresponding appt zero node on ^DPT
"RTN","SDAMA302",120,0)
 S SDARRAY("DPT0")=$G(^DPT(SDPATIEN,"S",SDAPPTDT,0))
"RTN","SDAMA302",121,0)
 ;skip if appointment is cancelled on DPT
"RTN","SDAMA302",122,0)
 Q:($P($G(SDARRAY("DPT0")),"^",2)["C")
"RTN","SDAMA302",123,0)
 ;skip if appointment on DPT is for different clinic
"RTN","SDAMA302",124,0)
 Q:(+$G(SDARRAY("DPT0"))'=SDCLIEN)
"RTN","SDAMA302",125,0)
 ;get appointment 1 node on ^DPT
"RTN","SDAMA302",126,0)
 S SDARRAY("DPT1")=$G(^DPT(SDPATIEN,"S",SDAPPTDT,1))
"RTN","SDAMA302",127,0)
 ;appointment must match the "clinic" filter values
"RTN","SDAMA302",128,0)
 I $$MATCH^SDAMA304("C",.SDARRAY,.SDFLTR,.SDDV) D
"RTN","SDAMA302",129,0)
 . ;if appointment matches the "patient" filter values, put appointment data into output array
"RTN","SDAMA302",130,0)
 . I $$MATCH^SDAMA304("P",.SDARRAY,.SDFLTR,.SDDV) D SETARRAY^SDAMA305(.SDARRAY)
"RTN","SDAMA302",131,0)
 Q
"RTN","SDAMA303")
0^3^B24778447^B22767510
"RTN","SDAMA303",1,0)
SDAMA303 ;BPOIFO/ACS-Filter API By Patient ; 9/14/05 12:45pm
"RTN","SDAMA303",2,0)
 ;;5.3;Scheduling;**301,347,508**;13 Aug 1993
"RTN","SDAMA303",3,0)
 ;PER VHA DIRECTIVE 2004-038, DO NOT MODIFY THIS ROUTINE
"RTN","SDAMA303",4,0)
 ;
"RTN","SDAMA303",5,0)
 ;*****************************************************************
"RTN","SDAMA303",6,0)
 ;              CHANGE LOG
"RTN","SDAMA303",7,0)
 ;
"RTN","SDAMA303",8,0)
 ;  DATE      PATCH       DESCRIPTION
"RTN","SDAMA303",9,0)
 ;--------  ----------    -----------------------------------------
"RTN","SDAMA303",10,0)
 ;12/04/03  SD*5.3*301    ROUTINE COMPLETED
"RTN","SDAMA303",11,0)
 ;08/06/04  SD*5.3*347    CHANGE CALL TO ^SDAMA305 TO SETARRAY
"RTN","SDAMA303",12,0)
 ;02/22/07  SD*5.3*508    SEE SDAMA301 FOR CHANGE LIST
"RTN","SDAMA303",13,0)
 ;*****************************************************************
"RTN","SDAMA303",14,0)
 ;
"RTN","SDAMA303",15,0)
 ;*****************************************************************
"RTN","SDAMA303",16,0)
 ;
"RTN","SDAMA303",17,0)
 ;               GET APPOINTMENT DATA BY PATIENT
"RTN","SDAMA303",18,0)
 ;
"RTN","SDAMA303",19,0)
 ;INPUT
"RTN","SDAMA303",20,0)
 ;  SDARRAY   Appointment Filter array
"RTN","SDAMA303",21,0)
 ;  SDDV      Appointment Data Values array
"RTN","SDAMA303",22,0)
 ;  SDFLTR    Filter Flags array
"RTN","SDAMA303",23,0)
 ;  
"RTN","SDAMA303",24,0)
 ;*****************************************************************
"RTN","SDAMA303",25,0)
PAT(SDARRAY,SDDV,SDFLTR) ;
"RTN","SDAMA303",26,0)
 N SDCOUNT,SDX,SDQUIT,SDPATIEN,SDSTART,SDEND,SDGBL
"RTN","SDAMA303",27,0)
 S (SDCOUNT,SDQUIT)=0
"RTN","SDAMA303",28,0)
 ;Set up start and end date/times for search criteria
"RTN","SDAMA303",29,0)
 I $G(SDARRAY("MAX"))'<0  D
"RTN","SDAMA303",30,0)
 .S SDSTART=$S(SDARRAY("FR")'="":(SDARRAY("FR")-.000001),1:0)
"RTN","SDAMA303",31,0)
 .S SDEND=(SDARRAY("TO"))
"RTN","SDAMA303",32,0)
 I $G(SDARRAY("MAX"))<0  D
"RTN","SDAMA303",33,0)
 .S SDSTART=$S($G(SDARRAY("FR"))'="":SDARRAY("FR"),1:0)
"RTN","SDAMA303",34,0)
 .S SDEND=(SDARRAY("TO")+.000001)
"RTN","SDAMA303",35,0)
 ;
"RTN","SDAMA303",36,0)
 ;if patient is not in global, get patient from filter list
"RTN","SDAMA303",37,0)
 I SDARRAY("PATGBL")=0 D
"RTN","SDAMA303",38,0)
 . S SDCOUNT=$L(SDARRAY(4),";")
"RTN","SDAMA303",39,0)
 . ;for each patient in the filter:
"RTN","SDAMA303",40,0)
 . F SDX=1:1:SDCOUNT D
"RTN","SDAMA303",41,0)
 .. S SDPATIEN=$P(SDARRAY(4),";",SDX)
"RTN","SDAMA303",42,0)
 .. D GETAPPT(SDPATIEN,SDSTART,SDEND,.SDARRAY)
"RTN","SDAMA303",43,0)
 ;if patient is in global, get patient from global
"RTN","SDAMA303",44,0)
 I SDARRAY("PATGBL")=1 D
"RTN","SDAMA303",45,0)
 . S SDGBL=SDARRAY(4),SDPATIEN=0
"RTN","SDAMA303",46,0)
 . ;for each patient in the global:
"RTN","SDAMA303",47,0)
 . F  S SDPATIEN=$O(@(SDGBL_"SDPATIEN)")) Q:+$G(SDPATIEN)=0  D
"RTN","SDAMA303",48,0)
 .. D GETAPPT(SDPATIEN,SDSTART,SDEND,.SDARRAY)
"RTN","SDAMA303",49,0)
 Q
"RTN","SDAMA303",50,0)
 ;
"RTN","SDAMA303",51,0)
GETAPPT(SDPATIEN,SDSTART,SDEND,SDARRAY) ;
"RTN","SDAMA303",52,0)
 ;if the patient has no appointments on ^DPT, get next patient
"RTN","SDAMA303",53,0)
 Q:'$D(^DPT(SDPATIEN,"S"))
"RTN","SDAMA303",54,0)
 ;since "by patient", 1st sort is patient
"RTN","SDAMA303",55,0)
 S (SDARRAY("SORT1"),SDARRAY("PAT"))=SDPATIEN
"RTN","SDAMA303",56,0)
 N SDAPPTDT
"RTN","SDAMA303",57,0)
 ;
"RTN","SDAMA303",58,0)
 ;get first "N" appointments
"RTN","SDAMA303",59,0)
 I $G(SDARRAY("MAX"))'<0  D
"RTN","SDAMA303",60,0)
 .S SDAPPTDT=SDSTART
"RTN","SDAMA303",61,0)
 .;Spin through each appointment on DPT for current patient
"RTN","SDAMA303",62,0)
 .F  S SDAPPTDT=$O(^DPT(SDPATIEN,"S",SDAPPTDT)) Q:$S(+$G(SDAPPTDT)=0:1,SDAPPTDT>SDEND:1,SDARRAY("CNT")=$G(SDARRAY("MAX")):1,1:0)  D
"RTN","SDAMA303",63,0)
 .. D GETINFO(SDPATIEN,SDAPPTDT,.SDARRAY)
"RTN","SDAMA303",64,0)
 ;
"RTN","SDAMA303",65,0)
 ;get last "N" appointments
"RTN","SDAMA303",66,0)
 I $G(SDARRAY("MAX"))<0  D
"RTN","SDAMA303",67,0)
 .S SDAPPTDT=SDEND
"RTN","SDAMA303",68,0)
 .;spin through each appointment on DPT for current patient (REVERSE Order)
"RTN","SDAMA303",69,0)
 .F  S SDAPPTDT=$O(^DPT(SDPATIEN,"S",SDAPPTDT),-1) Q:$S(+$G(SDAPPTDT)=0:1,SDAPPTDT<SDSTART:1,SDARRAY("CNT")=-$G(SDARRAY("MAX")):1,1:0)  D
"RTN","SDAMA303",70,0)
 .. D GETINFO(SDPATIEN,SDAPPTDT,.SDARRAY)
"RTN","SDAMA303",71,0)
 Q
"RTN","SDAMA303",72,0)
 ;
"RTN","SDAMA303",73,0)
GETINFO(SDPATIEN,SDAPPTDT,SDARRAY) ;
"RTN","SDAMA303",74,0)
 N SDMATCH,SDCLINIC,SDA,SDQUIT
"RTN","SDAMA303",75,0)
 S SDQUIT=0
"RTN","SDAMA303",76,0)
 ; initialize array to hold data values
"RTN","SDAMA303",77,0)
 S SDARRAY("DPT0")=$G(^DPT(SDPATIEN,"S",SDAPPTDT,0))
"RTN","SDAMA303",78,0)
 S SDARRAY("DPT1")=$G(^DPT(SDPATIEN,"S",SDAPPTDT,1))
"RTN","SDAMA303",79,0)
 S SDARRAY("DATE")=SDAPPTDT
"RTN","SDAMA303",80,0)
 ;appointment must match the "patient" filter values
"RTN","SDAMA303",81,0)
 I $$MATCH^SDAMA304("P",.SDARRAY,.SDFLTR,.SDDV) D
"RTN","SDAMA303",82,0)
 . ;set clinic appointment data to null and get clinic
"RTN","SDAMA303",83,0)
 . S (SDARRAY("SC0"),SDARRAY("SCC"),SDARRAY("SCOB"),SDARRAY("SCONS"))=""
"RTN","SDAMA303",84,0)
 . S SDCLINIC=+$G(SDARRAY("DPT0"))
"RTN","SDAMA303",85,0)
 . ;quit if clinic is null(0)
"RTN","SDAMA303",86,0)
 . Q:SDCLINIC=0
"RTN","SDAMA303",87,0)
 . ;since "by patient", 2nd sort is clinic
"RTN","SDAMA303",88,0)
 . S SDARRAY("SORT2")=SDCLINIC
"RTN","SDAMA303",89,0)
 . ;quit if this is a migrated appointment
"RTN","SDAMA303",90,0)
 . Q:'($$CLMIG^SDAMA307(SDCLINIC,.SDARRAY))
"RTN","SDAMA303",91,0)
 . S SDMATCH=1
"RTN","SDAMA303",92,0)
 . ;if appointment is not cancelled on ^DPT and the PURGED parameter 
"RTN","SDAMA303",93,0)
 . ;is not set, then find the corresponding appt on ^SC and get data
"RTN","SDAMA303",94,0)
 . I ('+$G(SDARRAY("PURGED"))&(";C;CA;PC;PCA;"'[(";"_$P($G(SDARRAY("DPT0")),"^",2)_";"))) D
"RTN","SDAMA303",95,0)
 .. N SDCANCEL
"RTN","SDAMA303",96,0)
 .. S SDQUIT=0,SDA=0,SDMATCH=0
"RTN","SDAMA303",97,0)
 .. ;for current clinic and appt d/t, find matching appt on ^SC
"RTN","SDAMA303",98,0)
 .. F  S SDA=$O(^SC(SDCLINIC,"S",SDAPPTDT,1,SDA)) Q:(($G(SDA)="")!(SDQUIT=1))  D
"RTN","SDAMA303",99,0)
 ... S SDCANCEL=0
"RTN","SDAMA303",100,0)
 ... ;get next appt if patient doesn't match
"RTN","SDAMA303",101,0)
 ... Q:(+$G(^SC(SDCLINIC,"S",SDAPPTDT,1,SDA,0))'=SDPATIEN)
"RTN","SDAMA303",102,0)
 ... ;get appointment data on ^SC
"RTN","SDAMA303",103,0)
 ... S SDARRAY("SC0")=$G(^SC(SDCLINIC,"S",SDAPPTDT,1,SDA,0))
"RTN","SDAMA303",104,0)
 ... ;get next appt if cancelled on SC
"RTN","SDAMA303",105,0)
 ... S SDCANCEL=$P($G(SDARRAY("SC0")),"^",9)
"RTN","SDAMA303",106,0)
 ... Q:($G(SDCANCEL)="C")
"RTN","SDAMA303",107,0)
 ... ;get appointment "C" node on ^SC
"RTN","SDAMA303",108,0)
 ... S SDARRAY("SCC")=$G(^SC(SDCLINIC,"S",SDAPPTDT,1,SDA,"C"))
"RTN","SDAMA303",109,0)
 ... ;get appointment "OB" node on ^SC
"RTN","SDAMA303",110,0)
 ... S SDARRAY("SCOB")=$G(^SC(SDCLINIC,"S",SDAPPTDT,1,SDA,"OB"))
"RTN","SDAMA303",111,0)
 ... ;get appointment "CONS" node on ^SC
"RTN","SDAMA303",112,0)
 ... S SDARRAY("SCONS")=$G(^SC(SDCLINIC,"S",SDAPPTDT,1,SDA,"CONS"))
"RTN","SDAMA303",113,0)
 ... ;Corresponding appointment found on ^SC
"RTN","SDAMA303",114,0)
 ... S SDQUIT=1,SDMATCH=1
"RTN","SDAMA303",115,0)
 . ;if appointment matches the clinic filters, put appointment data into output array
"RTN","SDAMA303",116,0)
 . I SDMATCH D
"RTN","SDAMA303",117,0)
 .. I $$MATCH^SDAMA304("C",.SDARRAY,.SDFLTR,.SDDV) D SETARRAY^SDAMA305(.SDARRAY)
"RTN","SDAMA303",118,0)
 Q
"RTN","SDAMA304")
0^5^B8771531^B8330866
"RTN","SDAMA304",1,0)
SDAMA304 ;BPOIFO/ACS-Filter API Apply Filters ; 6/21/05 1:50pm
"RTN","SDAMA304",2,0)
 ;;5.3;Scheduling;**301,347,508**;13 Aug 1993
"RTN","SDAMA304",3,0)
 ;PER VHA DIRECTIVE 2004-038, DO NOT MODIFY THIS ROUTINE
"RTN","SDAMA304",4,0)
 ;
"RTN","SDAMA304",5,0)
 ;*****************************************************************
"RTN","SDAMA304",6,0)
 ;              CHANGE LOG
"RTN","SDAMA304",7,0)
 ;
"RTN","SDAMA304",8,0)
 ;  DATE      PATCH       DESCRIPTION
"RTN","SDAMA304",9,0)
 ;--------  ----------    -----------------------------------------
"RTN","SDAMA304",10,0)
 ;12/04/03  SD*5.3*301    ROUTINE COMPLETED
"RTN","SDAMA304",11,0)
 ;08/06/04  SD*5.3*347    ADDITION OF A NEW FILTER - DATE APPOINTMENT
"RTN","SDAMA304",12,0)
 ;                        MADE (FIELD #16) AND 2 NEW FIELDS TO RETURN:
"RTN","SDAMA304",13,0)
 ;                        1) AUTO-REBOOKED APPT DATE/TIME (FIELD #24)
"RTN","SDAMA304",14,0)
 ;                        2) NO-SHOW/CANCEL APPT DATE/TIME (FIELD #25)
"RTN","SDAMA304",15,0)
 ;02/22/07  SD*5.3*508    SEE SDAMA301 FOR CHANGE LIST
"RTN","SDAMA304",16,0)
 ;*****************************************************************
"RTN","SDAMA304",17,0)
 ;
"RTN","SDAMA304",18,0)
 ;*****************************************************************
"RTN","SDAMA304",19,0)
 ;
"RTN","SDAMA304",20,0)
 ;                  APPLY FILTERS (Extrinsic call)
"RTN","SDAMA304",21,0)
 ;
"RTN","SDAMA304",22,0)
 ;INPUT
"RTN","SDAMA304",23,0)
 ;  SDFTYPE    Filter Type (P-patient or C-clinic)
"RTN","SDAMA304",24,0)
 ;  SDARRAY    Appointment Filter array
"RTN","SDAMA304",25,0)
 ;  SDFLTR     Filter Flags array
"RTN","SDAMA304",26,0)
 ;  SDDV       Appointment Data Values array
"RTN","SDAMA304",27,0)
 ;  
"RTN","SDAMA304",28,0)
 ;OUTPUT
"RTN","SDAMA304",29,0)
 ;  SDMATCH   -1 if no match
"RTN","SDAMA304",30,0)
 ;             1 if match
"RTN","SDAMA304",31,0)
 ;*****************************************************************
"RTN","SDAMA304",32,0)
MATCH(SDFTYPE,SDARRAY,SDFLTR,SDDV) ;
"RTN","SDAMA304",33,0)
 N SDMATCH,SDX,SDCLIEN
"RTN","SDAMA304",34,0)
 S SDMATCH=0
"RTN","SDAMA304",35,0)
 ;apply patient or clinic filters
"RTN","SDAMA304",36,0)
 I SDFTYPE="P" D PMATCH(.SDARRAY,.SDMATCH)
"RTN","SDAMA304",37,0)
 I SDFTYPE="C" D CMATCH(.SDARRAY,.SDMATCH)
"RTN","SDAMA304",38,0)
 Q SDMATCH
"RTN","SDAMA304",39,0)
PMATCH(SDARRAY,SDMATCH) ;Apply ^DPT-related filters
"RTN","SDAMA304",40,0)
 S SDMATCH=1
"RTN","SDAMA304",41,0)
 ;Clinic
"RTN","SDAMA304",42,0)
 I SDFLTR(2) D
"RTN","SDAMA304",43,0)
 . S SDDV(2)=$P($G(SDARRAY("DPT0")),"^",1)
"RTN","SDAMA304",44,0)
 . I SDDV(2)']"" S SDMATCH=0 Q
"RTN","SDAMA304",45,0)
 . ;apply filter to list or global
"RTN","SDAMA304",46,0)
 . I SDARRAY("CLNGBL")=1 D
"RTN","SDAMA304",47,0)
 .. S SDX=SDARRAY(2),SDCLIEN=SDDV(2)
"RTN","SDAMA304",48,0)
 .. I '$D(@(SDX_"SDCLIEN)")) S SDMATCH=0
"RTN","SDAMA304",49,0)
 . I SDARRAY("CLNGBL")=0 D
"RTN","SDAMA304",50,0)
 .. I ((";"_$G(SDARRAY(2))_";")'[(";"_SDDV(2)_";")) S SDMATCH=0
"RTN","SDAMA304",51,0)
 Q:'SDMATCH
"RTN","SDAMA304",52,0)
 ;Appointment Status
"RTN","SDAMA304",53,0)
 I SDFLTR(3) D
"RTN","SDAMA304",54,0)
 . N SDSTAT,SDTEMP
"RTN","SDAMA304",55,0)
 . S SDTEMP=$P($G(SDARRAY("DPT0")),"^",2)
"RTN","SDAMA304",56,0)
 . S SDSTAT=$S($G(SDTEMP)="":"R",SDTEMP="I":"I",SDTEMP="C":"CC",1:"X")
"RTN","SDAMA304",57,0)
 . I SDSTAT="X" S SDSTAT=$S(SDTEMP="CA":"CCR",SDTEMP="PC":"CP",1:"X")
"RTN","SDAMA304",58,0)
 . I SDSTAT="X" S SDSTAT=$S(SDTEMP="PCA":"CPR",SDTEMP="N":"NS",1:"X")
"RTN","SDAMA304",59,0)
 . I SDSTAT="X" S SDSTAT=$S(SDTEMP="NA":"NSR",SDTEMP="NT":"NT",1:"X")
"RTN","SDAMA304",60,0)
 . S SDDV(3)=SDSTAT
"RTN","SDAMA304",61,0)
 . I ((";"_$G(SDARRAY(3))_";")'[(";"_SDDV(3)_";")) S SDMATCH=0
"RTN","SDAMA304",62,0)
 Q:'SDMATCH
"RTN","SDAMA304",63,0)
 ;Encounter Exists (DEPRECATED 11/10/06 JFW)
"RTN","SDAMA304",64,0)
 ;I SDFLTR(12) D
"RTN","SDAMA304",65,0)
 ;.;get appointment encounter information
"RTN","SDAMA304",66,0)
 ;.S SDDV(12)=$P($G(SDARRAY("DPT0")),"^",20)
"RTN","SDAMA304",67,0)
 ;.;compare encounter information to filter value
"RTN","SDAMA304",68,0)
 ;.;      Y AND NULL match or N and NOT NULL match
"RTN","SDAMA304",69,0)
 ;.I (((SDARRAY("ENCTR")["Y")&(SDDV(12)']""))!((SDARRAY("ENCTR")["N")&(SDDV(12)]""))) D
"RTN","SDAMA304",70,0)
 ;..S SDMATCH=0
"RTN","SDAMA304",71,0)
 ;Date Appointment Made
"RTN","SDAMA304",72,0)
 I SDFLTR(16) D
"RTN","SDAMA304",73,0)
 .;get date appointment made from specific appt
"RTN","SDAMA304",74,0)
 .S SDDV(16)=$P($G(SDARRAY("DPT0")),"^",19)
"RTN","SDAMA304",75,0)
 .;compare date with range of dates specified
"RTN","SDAMA304",76,0)
 .I $S(+SDDV(16)=SDARRAY("DAMFR"):0,+SDDV(16)=SDARRAY("DAMTO"):0,1:1) D
"RTN","SDAMA304",77,0)
 ..I ((+SDDV(16)'>SDARRAY("DAMFR"))!(+SDDV(16)'<SDARRAY("DAMTO"))) D
"RTN","SDAMA304",78,0)
 ...S SDMATCH=0
"RTN","SDAMA304",79,0)
 Q
"RTN","SDAMA304",80,0)
 ;       
"RTN","SDAMA304",81,0)
CMATCH(SDARRAY,SDMATCH) ;Apply ^SC-related filters
"RTN","SDAMA304",82,0)
 N SDAMCLIN,SDSTOP
"RTN","SDAMA304",83,0)
 S SDMATCH=1
"RTN","SDAMA304",84,0)
 ;Primary Stop Code
"RTN","SDAMA304",85,0)
 I SDFLTR(13) D
"RTN","SDAMA304",86,0)
 . S SDAMCLIN=+$G(SDARRAY("DPT0"))
"RTN","SDAMA304",87,0)
 . I $G(SDAMCLIN)="" S SDMATCH=0 Q
"RTN","SDAMA304",88,0)
 . S SDSTOP=$P($G(^SC(SDAMCLIN,0)),"^",7)
"RTN","SDAMA304",89,0)
 . I $G(SDSTOP)="" S SDMATCH=0 Q
"RTN","SDAMA304",90,0)
 . S SDDV(13)=$P($G(^DIC(40.7,SDSTOP,0)),"^",2)
"RTN","SDAMA304",91,0)
 . I $G(SDDV(13))="" S SDMATCH=0 Q
"RTN","SDAMA304",92,0)
 . I ((";"_$G(SDARRAY(13))_";")'[(";"_SDDV(13)_";")) S SDMATCH=0
"RTN","SDAMA304",93,0)
 Q
"RTN","SDAMA305")
0^6^B66007958^B43200965
"RTN","SDAMA305",1,0)
SDAMA305 ;BPOIFO/ACS-Filter API Get Data ; 6/21/05 1:50pm
"RTN","SDAMA305",2,0)
 ;;5.3;Scheduling;**301,347,508**;13 Aug 1993
"RTN","SDAMA305",3,0)
 ;PER VHA DIRECTIVE 2004-038, DO NOT MODIFY THIS ROUTINE
"RTN","SDAMA305",4,0)
 ;
"RTN","SDAMA305",5,0)
 ;*****************************************************************
"RTN","SDAMA305",6,0)
 ;              CHANGE LOG
"RTN","SDAMA305",7,0)
 ;
"RTN","SDAMA305",8,0)
 ;  DATE      PATCH       DESCRIPTION
"RTN","SDAMA305",9,0)
 ;--------  ----------    -----------------------------------------
"RTN","SDAMA305",10,0)
 ;12/04/03  SD*5.3*301    ROUTINE COMPLETED
"RTN","SDAMA305",11,0)
 ;08/06/04  SD*5.3*347    ADDITION OF A NEW FILTER - DATE APPOINTMENT
"RTN","SDAMA305",12,0)
 ;                        MADE (FIELD #16) AND 2 NEW FIELDS TO RETURN:
"RTN","SDAMA305",13,0)
 ;                        1) AUTO-REBOOKED APPT DATE/TIME (FIELD #24)
"RTN","SDAMA305",14,0)
 ;                        2) NO-SHOW/CANCEL APPT DATE/TIME (FIELD #25)
"RTN","SDAMA305",15,0)
 ;                        RENAME ENTRY POINT TO ROUTINE
"RTN","SDAMA305",16,0)
 ;02/22/07  SD*5.3*508    SEE SDAMA301 FOR CHANGE LIST
"RTN","SDAMA305",17,0)
 ;*****************************************************************
"RTN","SDAMA305",18,0)
 ;
"RTN","SDAMA305",19,0)
 ;*****************************************************************
"RTN","SDAMA305",20,0)
 ;              GET APPOINTMENT DATA FROM VISTA            
"RTN","SDAMA305",21,0)
 ;INPUT
"RTN","SDAMA305",22,0)
 ;  SDARRAY    Appointment Filter array
"RTN","SDAMA305",23,0)
 ;  
"RTN","SDAMA305",24,0)
 ;OUTPUT
"RTN","SDAMA305",25,0)
 ;  ^TMP($J,"SDAMA301",SORT1,SORT2,APPT D/T)
"RTN","SDAMA305",26,0)
 ;*****************************************************************
"RTN","SDAMA305",27,0)
SETARRAY(SDARRAY) ;
"RTN","SDAMA305",28,0)
 ;Initialize local variables
"RTN","SDAMA305",29,0)
 N SDI,SDIEN,SDNAME,SDFLDS,SDDATA,SDCOUNT,SDFIELD,SDCLIEN,SDDV,SDSCRTCH
"RTN","SDAMA305",30,0)
 S SDFLDS=SDARRAY("FLDS")
"RTN","SDAMA305",31,0)
 S SDCOUNT=$L(SDFLDS,";")
"RTN","SDAMA305",32,0)
 ;Add 1 to appointment count
"RTN","SDAMA305",33,0)
 S SDARRAY("CNT")=(SDARRAY("CNT")+1)
"RTN","SDAMA305",34,0)
 ;For each appoitment field requested
"RTN","SDAMA305",35,0)
 F SDI=1:1:SDCOUNT D
"RTN","SDAMA305",36,0)
 . S (SDIEN,SDNAME,SDDATA)=""
"RTN","SDAMA305",37,0)
 . S SDFIELD=$P(SDFLDS,";",SDI)
"RTN","SDAMA305",38,0)
 . ;get data
"RTN","SDAMA305",39,0)
 . D @SDFIELD
"RTN","SDAMA305",40,0)
 . ;nodes in output global can't be null
"RTN","SDAMA305",41,0)
 . I $G(SDARRAY("SORT1"))="" S SDARRAY("SORT1")="X"_SDARRAY("CNT")
"RTN","SDAMA305",42,0)
 . I $G(SDARRAY("SORT2"))="" S SDARRAY("SORT2")="Y"_SDARRAY("CNT")
"RTN","SDAMA305",43,0)
 . ;add data to output array
"RTN","SDAMA305",44,0)
 . ;Store information with just Patient IEN (No Clinic IEN) in the global reference
"RTN","SDAMA305",45,0)
 . I $G(SDARRAY("SORT"))="P" D
"RTN","SDAMA305",46,0)
 . .S:(SDFIELD<28) $P(^TMP($J,"SDAMA301",$G(SDARRAY("PAT")),SDARRAY("DATE")),"^",SDFIELD)=$S(SDFIELD=6:"",1:$G(SDDV(SDFIELD)))
"RTN","SDAMA305",47,0)
 . .S:(SDFIELD>27) $P(^TMP($J,"SDAMA301",$G(SDARRAY("PAT")),SDARRAY("DATE"),0),"^",(SDFIELD#27))=$G(SDDV(SDFIELD))
"RTN","SDAMA305",48,0)
 . .S:(SDFIELD=6) ^TMP($J,"SDAMA301",$G(SDARRAY("PAT")),SDARRAY("DATE"),"C")=$G(SDDV(SDFIELD))
"RTN","SDAMA305",49,0)
 . ;Store information with Patient and Clinic IEN (Sort1, Sort2) in the global reference
"RTN","SDAMA305",50,0)
 . I $G(SDARRAY("SORT"))'="P" D
"RTN","SDAMA305",51,0)
 . .S:(SDFIELD<28) $P(^TMP($J,"SDAMA301",SDARRAY("SORT1"),SDARRAY("SORT2"),SDARRAY("DATE")),"^",SDFIELD)=$S(SDFIELD=6:"",1:$G(SDDV(SDFIELD)))
"RTN","SDAMA305",52,0)
 . .S:(SDFIELD>27) $P(^TMP($J,"SDAMA301",SDARRAY("SORT1"),SDARRAY("SORT2"),SDARRAY("DATE"),0),"^",(SDFIELD#27))=$G(SDDV(SDFIELD))
"RTN","SDAMA305",53,0)
 . .S:(SDFIELD=6) ^TMP($J,"SDAMA301",SDARRAY("SORT1"),SDARRAY("SORT2"),SDARRAY("DATE"),"C")=$G(SDDV(SDFIELD))
"RTN","SDAMA305",54,0)
 Q
"RTN","SDAMA305",55,0)
1 ;Appt date/time
"RTN","SDAMA305",56,0)
 S SDDV(SDFIELD)=SDARRAY("DATE")
"RTN","SDAMA305",57,0)
 Q
"RTN","SDAMA305",58,0)
2 ;Clinic IEN and Name
"RTN","SDAMA305",59,0)
 S SDIEN=+$G(SDARRAY("DPT0"))
"RTN","SDAMA305",60,0)
 I '$G(SDIEN) S SDNAME=""
"RTN","SDAMA305",61,0)
 E  S SDNAME=$P($G(^SC(SDIEN,0)),"^",1)
"RTN","SDAMA305",62,0)
 S SDDV(SDFIELD)=$G(SDIEN)_";"_$G(SDNAME)
"RTN","SDAMA305",63,0)
 Q
"RTN","SDAMA305",64,0)
3 ;Appt Status and Status Description
"RTN","SDAMA305",65,0)
 N SDSTAT
"RTN","SDAMA305",66,0)
 S SDSTAT=$P($G(SDARRAY("DPT0")),"^",2)
"RTN","SDAMA305",67,0)
 I $G(SDSTAT)="" S SDDATA="R;SCHEDULED/KEPT"
"RTN","SDAMA305",68,0)
 E  D
"RTN","SDAMA305",69,0)
 . S SDDATA=$S(SDSTAT="I":"I;INPATIENT",SDSTAT="C":"CC;CANCELLED BY CLINIC",1:"X")
"RTN","SDAMA305",70,0)
 . I SDDATA="X" S SDDATA=$S(SDSTAT="CA":"CCR;CANCELLED BY CLINIC & RESCHEDULED",SDSTAT="PC":"CP;CANCELLED BY PATIENT",1:"X")
"RTN","SDAMA305",71,0)
 . I SDDATA="X" S SDDATA=$S(SDSTAT="PCA":"CPR;CANCELLED BY PATIENT & RESCHEDULED",SDSTAT="N":"NS;NO-SHOW",1:"X")
"RTN","SDAMA305",72,0)
 . I SDDATA="X" S SDDATA=$S(SDSTAT="NA":"NSR;NO-SHOW & RESCHEDULED",SDSTAT="NT":"NT;NO ACTION TAKEN",1:SDSTAT_";UNKNOWN")
"RTN","SDAMA305",73,0)
 S SDDV(SDFIELD)=SDDATA
"RTN","SDAMA305",74,0)
 Q
"RTN","SDAMA305",75,0)
4 ;Patient IEN and Name
"RTN","SDAMA305",76,0)
 S SDIEN=$G(SDARRAY("PAT"))
"RTN","SDAMA305",77,0)
 S SDNAME=$P($G(^DPT(SDIEN,0)),"^",1)
"RTN","SDAMA305",78,0)
 S SDDV(SDFIELD)=$G(SDIEN)_";"_$G(SDNAME)
"RTN","SDAMA305",79,0)
 Q
"RTN","SDAMA305",80,0)
5 ;Length of Appt
"RTN","SDAMA305",81,0)
 S SDDV(SDFIELD)=$P($G(SDARRAY("SC0")),"^",2)
"RTN","SDAMA305",82,0)
 Q
"RTN","SDAMA305",83,0)
6 ;Comments
"RTN","SDAMA305",84,0)
 S SDDV(SDFIELD)=$P($G(SDARRAY("SC0")),"^",4)
"RTN","SDAMA305",85,0)
 Q
"RTN","SDAMA305",86,0)
7 ;Overbook (return null if appt cancelled)
"RTN","SDAMA305",87,0)
 I $G(SDARRAY("SC0"))'="" D
"RTN","SDAMA305",88,0)
 . S SDDATA=$P($G(SDARRAY("SCOB")),"^",1)
"RTN","SDAMA305",89,0)
 . S SDDV(SDFIELD)=$S($G(SDDATA)="O":"Y",1:"N")
"RTN","SDAMA305",90,0)
 Q
"RTN","SDAMA305",91,0)
8 ;Local & National Eligiblity of Visit Codes and Names
"RTN","SDAMA305",92,0)
 N SDELIG,SDPELIG,SDASTS,DFN,VAROOT,VAERR
"RTN","SDAMA305",93,0)
 S VAERR=0,SDDATA=$P($G(SDARRAY("SC0")),"^",10)
"RTN","SDAMA305",94,0)
 S SDASTS=$P($G(SDARRAY("DPT0")),"^",2)
"RTN","SDAMA305",95,0)
 ;if eligibility is null, get patients primary eligibility
"RTN","SDAMA305",96,0)
 ;  * only if appointment status is not cancelled *
"RTN","SDAMA305",97,0)
 I (($G(SDDATA)']"")&($G(SDASTS)'["C")) D
"RTN","SDAMA305",98,0)
 . S VAROOT="SDPELIG",DFN=$G(SDARRAY("PAT")) D ELIG^VADPT
"RTN","SDAMA305",99,0)
 . S SDDATA=$P(SDPELIG(1),"^")
"RTN","SDAMA305",100,0)
 ;get local/national eligibility to add to output if
"RTN","SDAMA305",101,0)
 ;ELIG^VADPT did not error and the ien is not null
"RTN","SDAMA305",102,0)
 I (('VAERR)&($G(SDDATA)]"")) D
"RTN","SDAMA305",103,0)
 . S SDELIG=$G(^DIC(8,SDDATA,0))
"RTN","SDAMA305",104,0)
 . ;Append Local Eligibility IEN and Name
"RTN","SDAMA305",105,0)
 . S SDDV(SDFIELD)=$G(SDDATA)_";"_$P(SDELIG,"^")
"RTN","SDAMA305",106,0)
 . ;Append National Eligibility IEN and Name
"RTN","SDAMA305",107,0)
 . S SDIEN=$P(SDELIG,"^",9)
"RTN","SDAMA305",108,0)
 . I $G(SDIEN) D
"RTN","SDAMA305",109,0)
 .. S SDNAME=$P($G(^DIC(8.1,SDIEN,0)),"^",1)
"RTN","SDAMA305",110,0)
 .. S SDDV(SDFIELD)=SDDV(SDFIELD)_";"_$G(SDIEN)_";"_$G(SDNAME)
"RTN","SDAMA305",111,0)
 Q
"RTN","SDAMA305",112,0)
9 ;Check-In Date/time
"RTN","SDAMA305",113,0)
 S SDSCRTCH=$P($G(SDARRAY("SCC")),"^",1)
"RTN","SDAMA305",114,0)
 S SDDV(SDFIELD)=$S($L(SDSCRTCH)<13:SDSCRTCH,1:$E(SDSCRTCH,1,12))
"RTN","SDAMA305",115,0)
 Q
"RTN","SDAMA305",116,0)
10 ;Appt Type IEN and Name
"RTN","SDAMA305",117,0)
 S SDIEN=$P($G(SDARRAY("DPT0")),"^",16)
"RTN","SDAMA305",118,0)
 I $G(SDIEN)]"" D
"RTN","SDAMA305",119,0)
 . S SDNAME=$P($G(^SD(409.1,SDIEN,0)),"^",1)
"RTN","SDAMA305",120,0)
 . S SDDV(SDFIELD)=$G(SDIEN)_";"_$G(SDNAME)
"RTN","SDAMA305",121,0)
 Q
"RTN","SDAMA305",122,0)
11 ;Check-Out date/time
"RTN","SDAMA305",123,0)
 S SDSCRTCH=$P($G(SDARRAY("SCC")),"^",3)
"RTN","SDAMA305",124,0)
 S SDDV(SDFIELD)=$S($L(SDSCRTCH)<13:SDSCRTCH,1:$E(SDSCRTCH,1,12))
"RTN","SDAMA305",125,0)
 Q
"RTN","SDAMA305",126,0)
12 ;Outpatient Encounter
"RTN","SDAMA305",127,0)
 S SDDV(SDFIELD)=$P($G(SDARRAY("DPT0")),"^",20)
"RTN","SDAMA305",128,0)
 Q
"RTN","SDAMA305",129,0)
13 ;Primary Stop Code IEN and AMIS STOP CODE
"RTN","SDAMA305",130,0)
 N SDCODES
"RTN","SDAMA305",131,0)
 S SDCLIEN=+SDARRAY("DPT0")
"RTN","SDAMA305",132,0)
 I $G(SDCLIEN)]"" D
"RTN","SDAMA305",133,0)
 . S SDCODES=$$GETSTOP(SDCLIEN)
"RTN","SDAMA305",134,0)
 . I SDCODES'=-1 S SDDV(SDFIELD)=$P(SDCODES,"^",1)
"RTN","SDAMA305",135,0)
 Q
"RTN","SDAMA305",136,0)
14 ;Credit Stop Code IEN and AMIS STOP CODE
"RTN","SDAMA305",137,0)
 S SDCLIEN=+SDARRAY("DPT0")
"RTN","SDAMA305",138,0)
 I $G(SDCLIEN)]"" D
"RTN","SDAMA305",139,0)
 . S SDCODES=$$GETSTOP(SDCLIEN)
"RTN","SDAMA305",140,0)
 . I SDCODES'=-1 S SDDV(SDFIELD)=$P(SDCODES,"^",2)
"RTN","SDAMA305",141,0)
 Q
"RTN","SDAMA305",142,0)
15 ;Workload Non-Count
"RTN","SDAMA305",143,0)
 S SDCLIEN=+SDARRAY("DPT0")
"RTN","SDAMA305",144,0)
 I $G(SDCLIEN)]"" D
"RTN","SDAMA305",145,0)
 . S SDCODES=$$GETSTOP(SDCLIEN)
"RTN","SDAMA305",146,0)
 . I SDCODES'=-1 S SDDV(SDFIELD)=$P($G(SDCODES),"^",3)
"RTN","SDAMA305",147,0)
 Q
"RTN","SDAMA305",148,0)
16 ;Date Appt Made
"RTN","SDAMA305",149,0)
 S SDDV(SDFIELD)=$P($P($G(SDARRAY("DPT0")),"^",19),".")
"RTN","SDAMA305",150,0)
 Q
"RTN","SDAMA305",151,0)
17 ;Desired Date of Appt
"RTN","SDAMA305",152,0)
 S SDDV(SDFIELD)=$P($P($G(SDARRAY("DPT1")),"^",1),".")
"RTN","SDAMA305",153,0)
 Q
"RTN","SDAMA305",154,0)
18 ;Purpose of Visit
"RTN","SDAMA305",155,0)
 S SDDATA=$P($G(SDARRAY("DPT0")),"^",7)
"RTN","SDAMA305",156,0)
 I $G(SDDATA)'="" D
"RTN","SDAMA305",157,0)
 . S SDDATA=SDDATA_$S(SDDATA="1":";C&P",SDDATA="2":";10-10",SDDATA="3":";SV",SDDATA="4":";UV",1:";")
"RTN","SDAMA305",158,0)
 . S SDDV(SDFIELD)=SDDATA
"RTN","SDAMA305",159,0)
 Q
"RTN","SDAMA305",160,0)
19 ;EKG Date/time
"RTN","SDAMA305",161,0)
 S SDSCRTCH=$P($G(SDARRAY("DPT0")),"^",5)
"RTN","SDAMA305",162,0)
 S SDDV(SDFIELD)=$S($L(SDSCRTCH)<13:SDSCRTCH,1:$E(SDSCRTCH,1,12))
"RTN","SDAMA305",163,0)
 Q
"RTN","SDAMA305",164,0)
20 ;X-Ray Date/time
"RTN","SDAMA305",165,0)
 S SDSCRTCH=$P($G(SDARRAY("DPT0")),"^",4)
"RTN","SDAMA305",166,0)
 S SDDV(SDFIELD)=$S($L(SDSCRTCH)<13:SDSCRTCH,1:$E(SDSCRTCH,1,12))
"RTN","SDAMA305",167,0)
 Q
"RTN","SDAMA305",168,0)
21 ;Lab Date/time
"RTN","SDAMA305",169,0)
 S SDSCRTCH=$P($G(SDARRAY("DPT0")),"^",3)
"RTN","SDAMA305",170,0)
 S SDDV(SDFIELD)=$S($L(SDSCRTCH)<13:SDSCRTCH,1:$E(SDSCRTCH,1,12))
"RTN","SDAMA305",171,0)
 Q
"RTN","SDAMA305",172,0)
22 ;Status 
"RTN","SDAMA305",173,0)
 ;   (Status IEN; Status Description; Print Status; Checked In Date/Time; 
"RTN","SDAMA305",174,0)
 ;       Checked Out Date/Time; Admission Movement IEN)       
"RTN","SDAMA305",175,0)
 ;convert to new appt status code
"RTN","SDAMA305",176,0)
 D 3
"RTN","SDAMA305",177,0)
 S SDDV(SDFIELD)=$$STATUS^SDAMA308(+$G(SDARRAY("PAT")),+$G(SDARRAY("DATE")),+$G(SDARRAY("DPT0")),$P(SDDV(SDFIELD),";"),$P($G(SDARRAY("SCC")),"^"),$P($G(SDARRAY("SCC")),"^",3),$P($G(SDARRAY("DPT0")),"^",20))
"RTN","SDAMA305",178,0)
 Q
"RTN","SDAMA305",179,0)
23 ;X-Ray Films
"RTN","SDAMA305",180,0)
 N SDRECS
"RTN","SDAMA305",181,0)
 ;Get Clinic IEN, X-Ray Films Required
"RTN","SDAMA305",182,0)
 S SDIEN=+$G(SDARRAY("DPT0"))
"RTN","SDAMA305",183,0)
 S SDRECS=$P($G(^SC(SDIEN,"RAD")),"^")
"RTN","SDAMA305",184,0)
 ;Translate Lower Case to Upper
"RTN","SDAMA305",185,0)
 S SDRECS=$TR(SDRECS,"ny","NY")
"RTN","SDAMA305",186,0)
 S SDDATA=$S(SDRECS["Y":"Y",1:"N")
"RTN","SDAMA305",187,0)
 S SDDV(SDFIELD)=SDDATA
"RTN","SDAMA305",188,0)
 Q
"RTN","SDAMA305",189,0)
24 ;Auto-Rebooked Appt. Date/Time
"RTN","SDAMA305",190,0)
 S SDSCRTCH=$P($G(SDARRAY("DPT0")),"^",10)
"RTN","SDAMA305",191,0)
 S SDDV(SDFIELD)=$S($L(SDSCRTCH)<13:SDSCRTCH,1:$E(SDSCRTCH,1,12))
"RTN","SDAMA305",192,0)
 Q
"RTN","SDAMA305",193,0)
25 ;No-Show/Cancel Date/Time
"RTN","SDAMA305",194,0)
 S SDSCRTCH=$P($G(SDARRAY("DPT0")),"^",14)
"RTN","SDAMA305",195,0)
 S SDDV(SDFIELD)=$S($L(SDSCRTCH)<13:SDSCRTCH,1:$E(SDSCRTCH,1,12))
"RTN","SDAMA305",196,0)
 Q
"RTN","SDAMA305",197,0)
 ;This field is only associated with appt info from RSA 
"RTN","SDAMA305",198,0)
 ;(No VistA Scheduling Value Exists)
"RTN","SDAMA305",199,0)
26 ;RSA Appointment ID
"RTN","SDAMA305",200,0)
 Q
"RTN","SDAMA305",201,0)
27 ;2507 Request IEN
"RTN","SDAMA305",202,0)
 ;N SDREQ
"RTN","SDAMA305",203,0)
 ;retrieve 2507 request for patient's appt
"RTN","SDAMA305",204,0)
 ;S SDREQ=$$GET2507^DVBCMKLK(+$G(SDARRAY("PAT")),$G(SDARRAY("DATE")))
"RTN","SDAMA305",205,0)
 ;S SDDV(SDFIELD)=$S((SDREQ>0):SDREQ,1:"")
"RTN","SDAMA305",206,0)
 Q
"RTN","SDAMA305",207,0)
28 ;Data Entry Clerk DUZ and Name
"RTN","SDAMA305",208,0)
 N SDSTAT
"RTN","SDAMA305",209,0)
 S SDSTAT=$P($G(SDARRAY("DPT0")),"^",2)  ;determine appt status
"RTN","SDAMA305",210,0)
 ;Appt is deleted from ^SC when appt is cancelled
"RTN","SDAMA305",211,0)
 S SDSCRTCH=$S(SDSTAT["C":$P($G(SDARRAY("DPT0")),"^",18),1:$P($G(SDARRAY("SC0")),"^",6))
"RTN","SDAMA305",212,0)
 S:(+SDSCRTCH) SDDV(SDFIELD)=SDSCRTCH_";"_$$GET1^DIQ(200,SDSCRTCH,.01)
"RTN","SDAMA305",213,0)
 Q
"RTN","SDAMA305",214,0)
29 ;No-Show/Cancelled By DUZ and Name
"RTN","SDAMA305",215,0)
 S SDSCRTCH=$P($G(SDARRAY("DPT0")),"^",12)
"RTN","SDAMA305",216,0)
 S:(+SDSCRTCH) SDDV(SDFIELD)=SDSCRTCH_";"_$$GET1^DIQ(200,SDSCRTCH,.01)
"RTN","SDAMA305",217,0)
 Q
"RTN","SDAMA305",218,0)
30 ;Check-In User DUZ and Name
"RTN","SDAMA305",219,0)
 S SDSCRTCH=$P($G(SDARRAY("SCC")),"^",2)
"RTN","SDAMA305",220,0)
 S:(+SDSCRTCH) SDDV(SDFIELD)=SDSCRTCH_";"_$$GET1^DIQ(200,SDSCRTCH,.01)
"RTN","SDAMA305",221,0)
 Q
"RTN","SDAMA305",222,0)
31 ;Check-Out User DUZ and Name
"RTN","SDAMA305",223,0)
 S SDSCRTCH=$P($G(SDARRAY("SCC")),"^",4)
"RTN","SDAMA305",224,0)
 S:(+SDSCRTCH) SDDV(SDFIELD)=SDSCRTCH_";"_$$GET1^DIQ(200,SDSCRTCH,.01)
"RTN","SDAMA305",225,0)
 Q
"RTN","SDAMA305",226,0)
32 ;Cancellation Reason IEN and Name
"RTN","SDAMA305",227,0)
 S SDSCRTCH=$P($G(SDARRAY("DPT0")),"^",15)
"RTN","SDAMA305",228,0)
 S:(+SDSCRTCH) SDDV(SDFIELD)=SDSCRTCH_";"_$$GET1^DIQ(409.2,SDSCRTCH,.01)
"RTN","SDAMA305",229,0)
 Q
"RTN","SDAMA305",230,0)
33 ;Consult Link IEN
"RTN","SDAMA305",231,0)
 S SDDV(SDFIELD)=$G(SDARRAY("SCONS"))
"RTN","SDAMA305",232,0)
 Q
"RTN","SDAMA305",233,0)
GETSTOP(SDCLIEN) ;Primary Stop Code, Credit Stop Code, Non-Count
"RTN","SDAMA305",234,0)
 ; return codes or -1 if bad clinic
"RTN","SDAMA305",235,0)
 N SDPSC,SDPSCIEN,SDCSC,SDCSCIEN,SDNC,SDCODES
"RTN","SDAMA305",236,0)
 I +$G(SDCLIEN)=0 S SDCODES=-1
"RTN","SDAMA305",237,0)
 I +$G(SDCLIEN)'=0 D
"RTN","SDAMA305",238,0)
 . ;make sure clinic is on ^SC
"RTN","SDAMA305",239,0)
 . I '$D(^SC(SDCLIEN)) S SDCODES=-1 Q
"RTN","SDAMA305",240,0)
 . ;get primary stop code ien
"RTN","SDAMA305",241,0)
 . S SDPSCIEN=$P($G(^SC(SDCLIEN,0)),"^",7)
"RTN","SDAMA305",242,0)
 . ;get credit stop code ien
"RTN","SDAMA305",243,0)
 . S SDCSCIEN=$P($G(^SC(SDCLIEN,0)),"^",18)
"RTN","SDAMA305",244,0)
 . I $G(SDPSCIEN) S SDPSC=$P($G(^DIC(40.7,SDPSCIEN,0)),"^",2)
"RTN","SDAMA305",245,0)
 . I $G(SDCSCIEN) S SDCSC=$P($G(^DIC(40.7,SDCSCIEN,0)),"^",2)
"RTN","SDAMA305",246,0)
 . ;get workload non-count
"RTN","SDAMA305",247,0)
 . S SDNC=$P($G(^SC(SDCLIEN,0)),"^",17)
"RTN","SDAMA305",248,0)
 . S SDNC=$S($G(SDNC)="Y":"Y",1:"N")
"RTN","SDAMA305",249,0)
 . S SDCODES=$G(SDPSCIEN)_";"_$G(SDPSC)_"^"_$G(SDCSCIEN)_";"_$G(SDCSC)_"^"_SDNC
"RTN","SDAMA305",250,0)
 Q SDCODES
"RTN","SDAMA306")
0^7^B11098328^B7276418
"RTN","SDAMA306",1,0)
SDAMA306 ;BPOIFO/ACS-Filter API Utilities ; 6/21/05 1:50pm
"RTN","SDAMA306",2,0)
 ;;5.3;Scheduling;**301,347,508**;13 Aug 1993
"RTN","SDAMA306",3,0)
 ;PER VHA DIRECTIVE 2004-038, DO NOT MODIFY THIS ROUTINE
"RTN","SDAMA306",4,0)
 ;
"RTN","SDAMA306",5,0)
 ;
"RTN","SDAMA306",6,0)
 ;*****************************************************************
"RTN","SDAMA306",7,0)
 ;              CHANGE LOG
"RTN","SDAMA306",8,0)
 ;
"RTN","SDAMA306",9,0)
 ;  DATE      PATCH       DESCRIPTION
"RTN","SDAMA306",10,0)
 ;--------  ----------    -----------------------------------------
"RTN","SDAMA306",11,0)
 ;12/04/03  SD*5.3*301    ROUTINE COMPLETED
"RTN","SDAMA306",12,0)
 ;08/06/04  SD*5.3*347    ADDITION OF A NEW FILTER - DATE APPOINTMENT
"RTN","SDAMA306",13,0)
 ;                        MADE (FIELD #16) AND 2 NEW FIELDS TO RETURN:
"RTN","SDAMA306",14,0)
 ;                        1) AUTO-REBOOKED APPT DATE/TIME (FIELD #24)
"RTN","SDAMA306",15,0)
 ;                        2) NO-SHOW/CANCEL APPT DATE/TIME (FIELD #25)
"RTN","SDAMA306",16,0)
 ;02/22/07  SD*5.3*508    SEE SDAMA301 FOR CHANGE LIST
"RTN","SDAMA306",17,0)
 ;*****************************************************************
"RTN","SDAMA306",18,0)
 ;*****************************************************************
"RTN","SDAMA306",19,0)
 ;
"RTN","SDAMA306",20,0)
 ;INPUT
"RTN","SDAMA306",21,0)
 ;  SDARRAY   Appointment Filter array (by reference)
"RTN","SDAMA306",22,0)
 ;  
"RTN","SDAMA306",23,0)
 ;*****************************************************************
"RTN","SDAMA306",24,0)
INITAE(SDARRAY) ;Initialize Array Entries as needed
"RTN","SDAMA306",25,0)
 ;Initialize Appointment "From" and "To" dates if null
"RTN","SDAMA306",26,0)
 N SDI
"RTN","SDAMA306",27,0)
 F SDI=1,16  D INITDTS(SDI)
"RTN","SDAMA306",28,0)
 ;
"RTN","SDAMA306",29,0)
 ;Initialize Fields Array if ALL Fields Requested
"RTN","SDAMA306",30,0)
 D:($$UPCASE(SDARRAY("FLDS"))="ALL") INITFLDS(.SDARRAY)
"RTN","SDAMA306",31,0)
 ;
"RTN","SDAMA306",32,0)
 ;Remove leading and trailing semi-colons from filter lists if present
"RTN","SDAMA306",33,0)
 N SDNODE
"RTN","SDAMA306",34,0)
 F SDNODE=2,3,4,13,"FLDS" D
"RTN","SDAMA306",35,0)
 . I $L($G(SDARRAY(SDNODE)))>0 D
"RTN","SDAMA306",36,0)
 .. I $E(SDARRAY(SDNODE),$L(SDARRAY(SDNODE)))=";" D
"RTN","SDAMA306",37,0)
 ... S SDARRAY(SDNODE)=$E(SDARRAY(SDNODE),1,($L(SDARRAY(SDNODE))-1))
"RTN","SDAMA306",38,0)
 .. I $E(SDARRAY(SDNODE),1)=";" D
"RTN","SDAMA306",39,0)
 ... S SDARRAY(SDNODE)=$E(SDARRAY(SDNODE),2,$L(SDARRAY(SDNODE)))
"RTN","SDAMA306",40,0)
 ;
"RTN","SDAMA306",41,0)
 ;If the patient list is in a global, add comma at end if needed
"RTN","SDAMA306",42,0)
 S SDARRAY("PATGBL")=0
"RTN","SDAMA306",43,0)
 I $G(SDARRAY(4))["(" D
"RTN","SDAMA306",44,0)
 . ;flag as patient global input
"RTN","SDAMA306",45,0)
 . S SDARRAY("PATGBL")=1
"RTN","SDAMA306",46,0)
 . ;add comma to end of global root if needed
"RTN","SDAMA306",47,0)
 . N SDLCHAR S SDLCHAR=$E(SDARRAY(4),$L(SDARRAY(4)))
"RTN","SDAMA306",48,0)
 . I SDLCHAR="," Q
"RTN","SDAMA306",49,0)
 . E  I SDLCHAR'="(" S SDARRAY(4)=SDARRAY(4)_","
"RTN","SDAMA306",50,0)
 ;
"RTN","SDAMA306",51,0)
 ;If the clinic list is in a global, add comma at end if needed
"RTN","SDAMA306",52,0)
 S SDARRAY("CLNGBL")=0
"RTN","SDAMA306",53,0)
 I $G(SDARRAY(2))["(" D
"RTN","SDAMA306",54,0)
 . ;flag as clinic global input
"RTN","SDAMA306",55,0)
 . S SDARRAY("CLNGBL")=1
"RTN","SDAMA306",56,0)
 . ;add comma to end of global root if needed
"RTN","SDAMA306",57,0)
 . N SDLCHAR S SDLCHAR=$E(SDARRAY(2),$L(SDARRAY(2)))
"RTN","SDAMA306",58,0)
 . I SDLCHAR="," Q
"RTN","SDAMA306",59,0)
 . E  I SDLCHAR'="(" S SDARRAY(2)=SDARRAY(2)_","
"RTN","SDAMA306",60,0)
 ;Initialize Encounter Filter
"RTN","SDAMA306",61,0)
 S SDARRAY("ENCTR")=$$UPCASE($G(SDARRAY(12)))
"RTN","SDAMA306",62,0)
 Q
"RTN","SDAMA306",63,0)
 ;
"RTN","SDAMA306",64,0)
 ;***************************************************
"RTN","SDAMA306",65,0)
 ;INPUT
"RTN","SDAMA306",66,0)
 ;      SDFLTR    Filter to initialize
"RTN","SDAMA306",67,0)
 ;***************************************************
"RTN","SDAMA306",68,0)
INITDTS(SDFLTR) ;initialize Appt Date/Time and Date Appt Made
"RTN","SDAMA306",69,0)
 N SDFROM,SDTO,SDYR,SDDAY,SDMNTH,SDTIME,SDVAR
"RTN","SDAMA306",70,0)
 ;initialize variables to passed in values
"RTN","SDAMA306",71,0)
 S SDFROM=$P($G(SDARRAY(SDFLTR)),";",1)
"RTN","SDAMA306",72,0)
 S SDTO=$P($G(SDARRAY(SDFLTR)),";",2)
"RTN","SDAMA306",73,0)
 ;replace day and month to Jan 01 (0101) if 0s or "" are passed
"RTN","SDAMA306",74,0)
 ;replace time with 2359 if time is greater than 2359
"RTN","SDAMA306",75,0)
 F SDVAR="SDFROM","SDTO"  D
"RTN","SDAMA306",76,0)
 .I @SDVAR'="" D
"RTN","SDAMA306",77,0)
 ..S SDYR=$E(@SDVAR,1,3),SDMNTH=$E(@SDVAR,4,5),SDDAY=$E(@SDVAR,6,7)
"RTN","SDAMA306",78,0)
 ..S SDTIME=$P(@SDVAR,".",2) S:(SDTIME'="") SDTIME="."_SDTIME
"RTN","SDAMA306",79,0)
 ..S:(+SDDAY'>0) SDDAY="01"
"RTN","SDAMA306",80,0)
 ..S:(+SDMNTH'>0) SDMNTH="01"
"RTN","SDAMA306",81,0)
 ..S:((+SDTIME'=0)&(+SDTIME>.2359)) SDTIME=.2359
"RTN","SDAMA306",82,0)
 ..S @SDVAR=SDYR_SDMNTH_SDDAY
"RTN","SDAMA306",83,0)
 ..S:(SDTIME'="") @SDVAR=@SDVAR_SDTIME
"RTN","SDAMA306",84,0)
 ;initialize SDTO to default if null
"RTN","SDAMA306",85,0)
 I $G(SDTO)="" D
"RTN","SDAMA306",86,0)
 .S:SDFLTR=1 SDTO="9999999.9999"
"RTN","SDAMA306",87,0)
 .S:SDFLTR=16 SDTO="9999999"
"RTN","SDAMA306",88,0)
 ;if date passed in without time for Appt Date/Time filter add time
"RTN","SDAMA306",89,0)
 I SDFLTR=1,SDTO'["." S SDTO=SDTO_".2359"
"RTN","SDAMA306",90,0)
 ;create new variables to reference Date(/Time)s
"RTN","SDAMA306",91,0)
 I SDFLTR=1 D
"RTN","SDAMA306",92,0)
 .S SDARRAY("FR")=$G(SDFROM)
"RTN","SDAMA306",93,0)
 .S SDARRAY("TO")=$G(SDTO)
"RTN","SDAMA306",94,0)
 I SDFLTR=16 D
"RTN","SDAMA306",95,0)
 .S SDARRAY("DAMFR")=$G(SDFROM)
"RTN","SDAMA306",96,0)
 .S SDARRAY("DAMTO")=$G(SDTO)
"RTN","SDAMA306",97,0)
 Q
"RTN","SDAMA306",98,0)
 ;
"RTN","SDAMA306",99,0)
 ;*****************************************************************
"RTN","SDAMA306",100,0)
 ;INPUT
"RTN","SDAMA306",101,0)
 ;  SDARRAY   Appointment Filter array (by reference)
"RTN","SDAMA306",102,0)
 ;*****************************************************************
"RTN","SDAMA306",103,0)
INITFLDS(SDARRAY) ;initialize Fields Requested
"RTN","SDAMA306",104,0)
 N SDFLD
"RTN","SDAMA306",105,0)
 S SDARRAY("FLDS")=""  ;Reset Field Array
"RTN","SDAMA306",106,0)
 ;add all available fields to Field Request
"RTN","SDAMA306",107,0)
 F SDFLD=1:1:26,28:1:SDARRAY("FC") S SDARRAY("FLDS")=SDARRAY("FLDS")_SDFLD_";"
"RTN","SDAMA306",108,0)
 Q
"RTN","SDAMA306",109,0)
UPCASE(SDDATA) ;ensure RSA text is upper case
"RTN","SDAMA306",110,0)
 Q $TR(SDDATA,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","SDAMA307")
0^8^B33225711^B1446187
"RTN","SDAMA307",1,0)
SDAMA307 ;BPOIFO/ACS-Filter API Call RSA ; 9/14/05 12:45pm
"RTN","SDAMA307",2,0)
 ;;5.3;Scheduling;**301,508**;13 Aug 1993
"RTN","SDAMA307",3,0)
 ;PER VHA DIRECTIVE 2004-038, DO NOT MODIFY THIS ROUTINE
"RTN","SDAMA307",4,0)
 ;
"RTN","SDAMA307",5,0)
 ;**              GET APPOINTMENT DATA FROM RSA                **
"RTN","SDAMA307",6,0)
 ;
"RTN","SDAMA307",7,0)
 ;***************************************************************
"RTN","SDAMA307",8,0)
 ;              CHANGE LOG
"RTN","SDAMA307",9,0)
 ;
"RTN","SDAMA307",10,0)
 ;  DATE      PATCH       DESCRIPTION
"RTN","SDAMA307",11,0)
 ;--------  ----------    ---------------------------------------
"RTN","SDAMA307",12,0)
 ;12/04/03  SD*5.3*301    ROUTINE COMPLETED
"RTN","SDAMA307",13,0)
 ;09/14/05  SD*5.3*372    Phase II Apptmts on Multiple Databases
"RTN","SDAMA307",14,0)
 ;02/22/07  SD*5.3*508    SEE SDAMA301 FOR CHANGE LIST
"RTN","SDAMA307",15,0)
 ;***************************************************************
"RTN","SDAMA307",16,0)
 ;  
"RTN","SDAMA307",17,0)
 ;***************************************************************
"RTN","SDAMA307",18,0)
 ;INPUT
"RTN","SDAMA307",19,0)
 ;       SDARRAY  APPOINTMENT FILTER ARRAY (by reference)
"RTN","SDAMA307",20,0)
 ;       SDVRFR   OVERLOAD PARAMETER FOR VERIFIER [optional]
"RTN","SDAMA307",21,0)
 ;                (Returns Screened RSA Appts (Migrating))
"RTN","SDAMA307",22,0)
 ;***************************************************************
"RTN","SDAMA307",23,0)
DATA(SDARRAY,SDVRFR) ;Get RSA appointment data (Phase II)
"RTN","SDAMA307",24,0)
 ;Initialize variables
"RTN","SDAMA307",25,0)
 N SDRESP,SDCOUNT,SDDFN,SDX,SDGBL
"RTN","SDAMA307",26,0)
 S SDX=0
"RTN","SDAMA307",27,0)
 ;if patient filter defined ensure that at least 1 patient has 
"RTN","SDAMA307",28,0)
 ;an ICN. if no patient in the list or global has an icn then RSA 
"RTN","SDAMA307",29,0)
 ;does not need to be called (No Appointments will exist.)
"RTN","SDAMA307",30,0)
 I (($G(SDARRAY(4))]"")&($G(SDARRAY(4))'="^DPT(")) D  Q:'SDX
"RTN","SDAMA307",31,0)
 .;patients in global
"RTN","SDAMA307",32,0)
 .I SDARRAY("PATGBL")=1 D
"RTN","SDAMA307",33,0)
 ..S SDGBL=SDARRAY(4),SDDFN=0
"RTN","SDAMA307",34,0)
 ..F  S SDDFN=$O(@(SDGBL_"SDDFN)")) Q:((+$G(SDDFN)=0)!SDX)  D
"RTN","SDAMA307",35,0)
 ...S:(+$$GETICN^MPIF001(SDDFN)>0) SDX=1
"RTN","SDAMA307",36,0)
 .;patients in list
"RTN","SDAMA307",37,0)
 .I SDARRAY("PATGBL")=0 D
"RTN","SDAMA307",38,0)
 ..S SDCOUNT=$L(SDARRAY(4),";")
"RTN","SDAMA307",39,0)
 ..F SDDFN=1:1:SDCOUNT Q:SDX  D
"RTN","SDAMA307",40,0)
 ...S:(+$$GETICN^MPIF001($P(SDARRAY(4),";",SDDFN))>0) SDX=1
"RTN","SDAMA307",41,0)
 ;if patient filter is not defined ensure that if the status
"RTN","SDAMA307",42,0)
 ;filter is defined that it has more than cancelled appt statuses
"RTN","SDAMA307",43,0)
 ;(Cancelled Appts not returned if Patient filter not defined)
"RTN","SDAMA307",44,0)
 I (($G(SDARRAY(4))']"")&($G(SDARRAY(3))]"")) D  Q:'SDX
"RTN","SDAMA307",45,0)
 .N SDSTAT,SDI S SDSTAT="",SDX=0
"RTN","SDAMA307",46,0)
 .F SDI=1:1:$L(SDARRAY(3),";") Q:SDX  D
"RTN","SDAMA307",47,0)
 ..S:($P(SDARRAY(3),";",SDI)'["C") SDX=1
"RTN","SDAMA307",48,0)
 ;Call RSA Business Delegate
"RTN","SDAMA307",49,0)
 ;S SDRESP=$$XMLDLGT^SDAMA309(.SDARRAY,$G(SDVRFR))
"RTN","SDAMA307",50,0)
 ;error occurred creating appt records
"RTN","SDAMA307",51,0)
 I SDRESP<0 S SDARRAY("CNT")=-1
"RTN","SDAMA307",52,0)
 ;no errors/update total appt counter/adjust appts to max filter
"RTN","SDAMA307",53,0)
 ;as RSA appts were appended to output and may exceed the MAX
"RTN","SDAMA307",54,0)
 I '(SDRESP<0) D
"RTN","SDAMA307",55,0)
 .S SDARRAY("CNT")=SDARRAY("CNT")+SDRESP
"RTN","SDAMA307",56,0)
 .;adjust total number of appointments
"RTN","SDAMA307",57,0)
 .D MAXAPPTS(.SDARRAY)
"RTN","SDAMA307",58,0)
 Q
"RTN","SDAMA307",59,0)
 ;
"RTN","SDAMA307",60,0)
 ;***************************************************************
"RTN","SDAMA307",61,0)
 ;OUTPUT
"RTN","SDAMA307",62,0)
 ;    If RSA Implemented, return 1,10 or 11 if Appt Entry Exists
"RTN","SDAMA307",63,0)
 ;    If RSA NOT Implemented, return 0
"RTN","SDAMA307",64,0)
 ;***************************************************************
"RTN","SDAMA307",65,0)
IMP() ;RSA Implemented
"RTN","SDAMA307",66,0)
 Q $D(^XOB(18.08,"B",$$GETSRVNM))
"RTN","SDAMA307",67,0)
 ;
"RTN","SDAMA307",68,0)
 ;***************************************************************
"RTN","SDAMA307",69,0)
 ;OUTPUT
"RTN","SDAMA307",70,0)
 ;       Returns RSA Application Server Name
"RTN","SDAMA307",71,0)
 ;***************************************************************
"RTN","SDAMA307",72,0)
GETSRVNM() ;return the VL 2.0 application server name
"RTN","SDAMA307",73,0)
 Q "SDAM-RSA"
"RTN","SDAMA307",74,0)
 ;
"RTN","SDAMA307",75,0)
 ;***************************************************************
"RTN","SDAMA307",76,0)
 ;INPUT
"RTN","SDAMA307",77,0)
 ;       SDCLIEN      Clinic's Internal Entry Number (Required)
"RTN","SDAMA307",78,0)
 ;       SDARRAY      APPOINTMENT FILTER ARRAY (by reference)
"RTN","SDAMA307",79,0)
 ;OUTPUT
"RTN","SDAMA307",80,0)
 ;       1 Return a Patients or Clinics VistA Appointments
"RTN","SDAMA307",81,0)
 ;       0 Exclude a Patients or Clinics VistA Appointments 
"RTN","SDAMA307",82,0)
 ;       
"RTN","SDAMA307",83,0)
 ;       SDARRAY("RSA")=1 will exist if RSA has to be Called
"RTN","SDAMA307",84,0)
 ;       SDARRAY("MIG") will exist for VistA Clinics that have an 
"RTN","SDAMA307",85,0)
 ;                      earliest migrated date/time and has
"RTN","SDAMA307",86,0)
 ;                      completed migration.
"RTN","SDAMA307",87,0)
 ; ***************************************************************
"RTN","SDAMA307",88,0)
CLMIG(SDCLIEN,SDARRAY) ;clinic status switch       
"RTN","SDAMA307",89,0)
 ;initialize variables 
"RTN","SDAMA307",90,0)
 N SDRSA
"RTN","SDAMA307",91,0)
 S SDARRAY("CLIN")=SDCLIEN,SDARRAY("MIG")=""
"RTN","SDAMA307",92,0)
 ;quit if clinic is not of type "C" (Clinic)
"RTN","SDAMA307",93,0)
 Q:($P($G(^SC(SDCLIEN,0)),"^",3)'="C") 0
"RTN","SDAMA307",94,0)
 ;determine if RSA Clinic,
"RTN","SDAMA307",95,0)
 ;if RSA Clinic Quit VistA doesnt need to be called
"RTN","SDAMA307",96,0)
 S SDRSA=$$RSACLNC(SDCLIEN)
"RTN","SDAMA307",97,0)
 ;
"RTN","SDAMA307",98,0)
 ;RSA CLINIC (Check-In Point) Logic
"RTN","SDAMA307",99,0)
 ;Call RSA for Future Migrated/New appointments  
"RTN","SDAMA307",100,0)
 I SDRSA S SDARRAY("RSA")=1 Q 0
"RTN","SDAMA307",101,0)
 ;
"RTN","SDAMA307",102,0)
 ;VISTA CLINIC Logic
"RTN","SDAMA307",103,0)
 ;return all VistA appointments (Migration not completed)
"RTN","SDAMA307",104,0)
 Q:($P($G(^SC(SDCLIEN,"RSA")),"^",6)']"") 1
"RTN","SDAMA307",105,0)
 ;retrieve earliest migrated date/time
"RTN","SDAMA307",106,0)
 S SDARRAY("MIG")=+$P($G(^SC(SDCLIEN,"RSA")),"^",3)
"RTN","SDAMA307",107,0)
 ;return non-migrated VistA appointments
"RTN","SDAMA307",108,0)
 Q:(SDARRAY("MIG")>+$G(SDARRAY("DATE"))) 1
"RTN","SDAMA307",109,0)
 ;migrated VistA appointments not returned
"RTN","SDAMA307",110,0)
 Q 0
"RTN","SDAMA307",111,0)
 ;
"RTN","SDAMA307",112,0)
 ;***************************************************************
"RTN","SDAMA307",113,0)
 ;INPUT
"RTN","SDAMA307",114,0)
 ;   SDCLNC  -  Clinic IEN
"RTN","SDAMA307",115,0)
 ;OUTPUT
"RTN","SDAMA307",116,0)
 ;   1 - Is an RSA Clinic
"RTN","SDAMA307",117,0)
 ;   0 - Is not an RSA Clinic
"RTN","SDAMA307",118,0)
 ;***************************************************************
"RTN","SDAMA307",119,0)
RSACLNC(SDCLNC) ;determine if Clinic is an RSA Clinic
"RTN","SDAMA307",120,0)
 ;RSA Clinic if Resource Id (#44.203) and 
"RTN","SDAMA307",121,0)
 ;              Appt Purpose ID (#44.204) exist
"RTN","SDAMA307",122,0)
 ;initialize variables  
"RTN","SDAMA307",123,0)
 N SDRID,SDLAPID
"RTN","SDAMA307",124,0)
 ;get resource id
"RTN","SDAMA307",125,0)
 S SDRID=$P($G(^SC(SDCLNC,"RSA")),"^",4)
"RTN","SDAMA307",126,0)
 ;get local appt purpose id
"RTN","SDAMA307",127,0)
 S SDLAPID=$P($G(^SC(SDCLNC,"RSA")),"^",5)
"RTN","SDAMA307",128,0)
 Q $S(((SDRID'="")&(SDLAPID'="")):1,1:0)
"RTN","SDAMA307",129,0)
 ;
"RTN","SDAMA307",130,0)
 ;***************************************************************
"RTN","SDAMA307",131,0)
 ;OUTPUT
"RTN","SDAMA307",132,0)
 ;   Returns the Sites VistA Instance Number
"RTN","SDAMA307",133,0)
 ;*************************************************************** 
"RTN","SDAMA307",134,0)
VI() ;Get VistA Instance    
"RTN","SDAMA307",135,0)
 N SDVI
"RTN","SDAMA307",136,0)
 S SDVI=$$SITE^VASITE
"RTN","SDAMA307",137,0)
 Q +$P(SDVI,"^",3)
"RTN","SDAMA307",138,0)
 ;
"RTN","SDAMA307",139,0)
 ;******************************************************************
"RTN","SDAMA307",140,0)
 ;INPUT
"RTN","SDAMA307",141,0)
 ;   SDARRAY         APPOINTMENT FILTER ARRAY (by reference)
"RTN","SDAMA307",142,0)
 ;****************************************************************** 
"RTN","SDAMA307",143,0)
MAXAPPTS(SDARRAY) ;Adjust combined appointments (VistA/RSA) to MAX            
"RTN","SDAMA307",144,0)
 N SDDIFF,SDDIR,SDREF,SDMAX,SDI,SDDTM,SDSORT1,SDSORT2
"RTN","SDAMA307",145,0)
 S SDMAX=$S(SDARRAY("MAX")<0:SDARRAY("MAX")*-1,1:SDARRAY("MAX"))
"RTN","SDAMA307",146,0)
 S SDDIR=1,SDREF="^TMP($J,""SDRSRT"")"
"RTN","SDAMA307",147,0)
 ;quit if max filter not defined / max equals appt count / or
"RTN","SDAMA307",148,0)
 ;appt count is less than max
"RTN","SDAMA307",149,0)
 Q:($S(SDARRAY("MAX")="":1,SDMAX=SDARRAY("CNT"):1,SDARRAY("CNT")<SDMAX:1,1:0))
"RTN","SDAMA307",150,0)
 ;determine how many appts to kill and QUERY direction
"RTN","SDAMA307",151,0)
 I SDARRAY("MAX")>0 D
"RTN","SDAMA307",152,0)
 .S SDDIFF=SDARRAY("CNT")-SDARRAY("MAX"),SDDIR=-1
"RTN","SDAMA307",153,0)
 .I $G(SDARRAY("SORT"))="P" S SDREF="^TMP($J,""SDRSRT"",""A"",""A"")"
"RTN","SDAMA307",154,0)
 .E  S SDREF="^TMP($J,""SDRSRT"",""A"",""A"",""A"")"
"RTN","SDAMA307",155,0)
 S:SDARRAY("MAX")<0 SDDIFF=SDARRAY("CNT")+SDARRAY("MAX")
"RTN","SDAMA307",156,0)
 ;create temporary resorted output global by Date/Time
"RTN","SDAMA307",157,0)
 ;D MAXRESRT^SDAMA309(.SDARRAY)
"RTN","SDAMA307",158,0)
 ;
"RTN","SDAMA307",159,0)
 ;loop through appt set and kill the excess appts
"RTN","SDAMA307",160,0)
 F  Q:'SDDIFF  D
"RTN","SDAMA307",161,0)
 .S SDREF=$Q(@SDREF,SDDIR)
"RTN","SDAMA307",162,0)
 .;retrieve subscribpt to delete from output global
"RTN","SDAMA307",163,0)
 .S SDDTM=$P(SDREF,",",3),SDSORT1=+$P(SDREF,",",4),SDSORT2=+$P(SDREF,",",5)
"RTN","SDAMA307",164,0)
 .K:($G(SDARRAY("SORT"))="P") ^TMP($J,"SDAMA301",SDSORT1,SDDTM)
"RTN","SDAMA307",165,0)
 .K:($G(SDARRAY("SORT"))'="P") ^TMP($J,"SDAMA301",SDSORT1,SDSORT2,SDDTM)
"RTN","SDAMA307",166,0)
 .K @SDREF  ;delete resorted temp output copy
"RTN","SDAMA307",167,0)
 .S SDDIFF=SDDIFF-1
"RTN","SDAMA307",168,0)
 ;reset total appt count to max
"RTN","SDAMA307",169,0)
 S SDARRAY("CNT")=$S(SDARRAY("MAX")>0:SDARRAY("MAX"),1:(SDARRAY("MAX")*(-1)))
"RTN","SDAMA307",170,0)
 K ^TMP($J,"SDRSRT")
"RTN","SDAMA307",171,0)
 Q
"RTN","SDAMA307",172,0)
 ;
"RTN","SDAMA307",173,0)
 ;Both Patient and Clinic Filter Defined, Determine if RSA should be
"RTN","SDAMA307",174,0)
 ;called, by evaluating the Clinic Filter List. Patient may have no
"RTN","SDAMA307",175,0)
 ;appointments in VistA, so Clinic Filter has to be evaluated.
"RTN","SDAMA307",176,0)
 ;******************************************************************
"RTN","SDAMA307",177,0)
 ;INPUT
"RTN","SDAMA307",178,0)
 ;   SDARRAY         APPOINTMENT FILTER ARRAY (by reference)
"RTN","SDAMA307",179,0)
 ;******************************************************************
"RTN","SDAMA307",180,0)
CALLRSA(SDARRAY) ;
"RTN","SDAMA307",181,0)
 ;initialize variables
"RTN","SDAMA307",182,0)
 N SDCOUNT,SDX,SDCLIEN,SDQUIT,SDGBL,SDRSLT
"RTN","SDAMA307",183,0)
 S (SDCOUNT,SDQUIT)=0
"RTN","SDAMA307",184,0)
 ;if clinic is in a list:
"RTN","SDAMA307",185,0)
 I SDARRAY("CLNGBL")=0 D
"RTN","SDAMA307",186,0)
 . S SDCOUNT=$L(SDARRAY(2),";")
"RTN","SDAMA307",187,0)
 . ;For each clinic in the filter (LIST):
"RTN","SDAMA307",188,0)
 . F SDX=1:1:SDCOUNT Q:SDQUIT  D
"RTN","SDAMA307",189,0)
 .. S SDCLIEN=$P(SDARRAY(2),";",SDX)
"RTN","SDAMA307",190,0)
 .. ;determine if clinic has migrated (Call RSA)
"RTN","SDAMA307",191,0)
 .. S SDRSLT='$$CLMIG(SDCLIEN,.SDARRAY)
"RTN","SDAMA307",192,0)
 .. S SDQUIT=+$G(SDARRAY("RSA"))
"RTN","SDAMA307",193,0)
 ;if clinic is in array, get IENs
"RTN","SDAMA307",194,0)
 I SDARRAY("CLNGBL")=1 D
"RTN","SDAMA307",195,0)
 . S SDGBL=SDARRAY(2),SDCLIEN=0
"RTN","SDAMA307",196,0)
 . ;for each clinic in the filter (GLOBAL):
"RTN","SDAMA307",197,0)
 . F  S SDCLIEN=$O(@(SDGBL_"SDCLIEN)")) Q:(($G(SDCLIEN)="")!(SDQUIT))  D
"RTN","SDAMA307",198,0)
 .. ;determine if clinic has migrated (Call RSA)
"RTN","SDAMA307",199,0)
 .. S SDRSLT='$$CLMIG(SDCLIEN,.SDARRAY)
"RTN","SDAMA307",200,0)
 .. S SDQUIT=+$G(SDARRAY("RSA"))
"RTN","SDAMA307",201,0)
 Q
"RTN","SDAMA307",202,0)
 ;
"RTN","SDAMA307",203,0)
 ;**************************************************************** 
"RTN","SDAMA307",204,0)
 ;INPUT
"RTN","SDAMA307",205,0)
 ;   SDERRNUM  Appropriate error diagnosing problem (REQUIRED)
"RTN","SDAMA307",206,0)
 ;              101     Database Unavailable
"RTN","SDAMA307",207,0)
 ;              115     Invalid Input Array Entry
"RTN","SDAMA307",208,0)
 ;              116     Data Mismatch
"RTN","SDAMA307",209,0)
 ;              117     SDAPI Error (Other Error)
"RTN","SDAMA307",210,0)
 ;   SDVLRHNL  Request Handle (optional)
"RTN","SDAMA307",211,0)
 ;       
"RTN","SDAMA307",212,0)
 ;Output 
"RTN","SDAMA307",213,0)
 ;   N/A
"RTN","SDAMA307",214,0)
 ;**************************************************************** 
"RTN","SDAMA307",215,0)
ERROR(SDERRNUM,SDVLRHNL) ;error handling  
"RTN","SDAMA307",216,0)
 ;clean up locations
"RTN","SDAMA307",217,0)
 ;D:$G(SDVLRHNL)'="" CLEAN^XOBVJLIB(SDVLRHNL)
"RTN","SDAMA307",218,0)
 ;kill existing global entries
"RTN","SDAMA307",219,0)
 K ^TMP($J,"SDAMA301")
"RTN","SDAMA307",220,0)
 ;create error entry in global
"RTN","SDAMA307",221,0)
 D ERROR^SDAMA300(SDERRNUM)
"RTN","SDAMA307",222,0)
 Q
"RTN","SDAMA307",223,0)
 ;
"RTN","SDAMA307",224,0)
 ;**************************************************************** 
"RTN","SDAMA307",225,0)
 ;INPUT
"RTN","SDAMA307",226,0)
 ;   SDVLRHNL  VistALink Request Handle (REQUIRED) 
"RTN","SDAMA307",227,0)
 ;   SDVRFR    OVERLOAD PARAMETER FOR VERIFIER [optional]
"RTN","SDAMA307",228,0)
 ;             (Creates Error Info in Output Global - 101 Returned)      
"RTN","SDAMA307",229,0)
 ;**************************************************************** 
"RTN","SDAMA307",230,0)
VLERR(SDVLRHNL,SDVRFR) ;write vistalink errors to err log
"RTN","SDAMA307",231,0)
 N SDERR  ;initialize variables
"RTN","SDAMA307",232,0)
 ;setup err log variables and call err log handler
"RTN","SDAMA307",233,0)
 S SDERR(1)="SDAMA301"
"RTN","SDAMA307",234,0)
 ;S SDERR(5)="VistALink returned ERROR Code: "_$$GETFLTCD^XOBVJRQ(SDVLRHNL)_" ERROR Message: "_$$GETFLTMS^XOBVJRQ(SDVLRHNL)
"RTN","SDAMA307",235,0)
 S SDERR(6)="SDRSA101"
"RTN","SDAMA307",236,0)
 ;remove special characters from VL calls
"RTN","SDAMA307",237,0)
 S SDERR(5)=$E(SDERR(5),1,$L(SDERR(5))-1)
"RTN","SDAMA307",238,0)
 ;D LOGERR^SDAMA314(.SDERR)
"RTN","SDAMA307",239,0)
 D:($G(SDVRFR)) ERROR(101,SDVLRHNL) ;write error to output global
"RTN","SDAMA307",240,0)
 Q
"VER")
8.0^22.0
"BLD",6059,6)
^417
**END**
**END**
