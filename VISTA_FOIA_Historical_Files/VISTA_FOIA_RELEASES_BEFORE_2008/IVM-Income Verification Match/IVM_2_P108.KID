KIDS Distribution saved on Oct 26, 2005@08:09:41
10262005 @8:08 AM
**KIDS**:IVM*2.0*108^DG*5.3*658^

**INSTALL NAME**
IVM*2.0*108
"BLD",5734,0)
IVM*2.0*108^INCOME VERIFICATION MATCH^0^3051026^y
"BLD",5734,4,0)
^9.64PA^301.7^1
"BLD",5734,4,301.7,0)
301.7
"BLD",5734,4,301.7,222)
y^n^f^^^^n
"BLD",5734,4,"B",301.7,301.7)

"BLD",5734,"KRN",0)
^9.67PA^8989.52^19
"BLD",5734,"KRN",.4,0)
.4
"BLD",5734,"KRN",.401,0)
.401
"BLD",5734,"KRN",.402,0)
.402
"BLD",5734,"KRN",.403,0)
.403
"BLD",5734,"KRN",.5,0)
.5
"BLD",5734,"KRN",.84,0)
.84
"BLD",5734,"KRN",3.6,0)
3.6
"BLD",5734,"KRN",3.8,0)
3.8
"BLD",5734,"KRN",9.2,0)
9.2
"BLD",5734,"KRN",9.8,0)
9.8
"BLD",5734,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",5734,"KRN",9.8,"NM",1,0)
IVMLDEMD^^0^B69403239
"BLD",5734,"KRN",9.8,"NM",2,0)
IVMLDEM6^^0^B59740960
"BLD",5734,"KRN",9.8,"NM",3,0)
IVMADDRP^^0^B23649264
"BLD",5734,"KRN",9.8,"NM","B","IVMADDRP",3)

"BLD",5734,"KRN",9.8,"NM","B","IVMLDEM6",2)

"BLD",5734,"KRN",9.8,"NM","B","IVMLDEMD",1)

"BLD",5734,"KRN",19,0)
19
"BLD",5734,"KRN",19,"NM",0)
^9.68A^5^5
"BLD",5734,"KRN",19,"NM",1,0)
IVM ADDRESS CHANGE LOG REPORT^^0
"BLD",5734,"KRN",19,"NM",2,0)
IVM OUTPUT MENU^^0
"BLD",5734,"KRN",19,"NM",3,0)
IVM OUTPUT MT COMPARISON^^0
"BLD",5734,"KRN",19,"NM",4,0)
IVM OUTPUT BILL TRANS^^0
"BLD",5734,"KRN",19,"NM",5,0)
IVM OUTPUT CASE INQ^^0
"BLD",5734,"KRN",19,"NM","B","IVM ADDRESS CHANGE LOG REPORT",1)

"BLD",5734,"KRN",19,"NM","B","IVM OUTPUT BILL TRANS",4)

"BLD",5734,"KRN",19,"NM","B","IVM OUTPUT CASE INQ",5)

"BLD",5734,"KRN",19,"NM","B","IVM OUTPUT MENU",2)

"BLD",5734,"KRN",19,"NM","B","IVM OUTPUT MT COMPARISON",3)

"BLD",5734,"KRN",19.1,0)
19.1
"BLD",5734,"KRN",101,0)
101
"BLD",5734,"KRN",409.61,0)
409.61
"BLD",5734,"KRN",771,0)
771
"BLD",5734,"KRN",870,0)
870
"BLD",5734,"KRN",8989.51,0)
8989.51
"BLD",5734,"KRN",8989.52,0)
8989.52
"BLD",5734,"KRN",8994,0)
8994
"BLD",5734,"KRN","B",.4,.4)

"BLD",5734,"KRN","B",.401,.401)

"BLD",5734,"KRN","B",.402,.402)

"BLD",5734,"KRN","B",.403,.403)

"BLD",5734,"KRN","B",.5,.5)

"BLD",5734,"KRN","B",.84,.84)

"BLD",5734,"KRN","B",3.6,3.6)

"BLD",5734,"KRN","B",3.8,3.8)

"BLD",5734,"KRN","B",9.2,9.2)

"BLD",5734,"KRN","B",9.8,9.8)

"BLD",5734,"KRN","B",19,19)

"BLD",5734,"KRN","B",19.1,19.1)

"BLD",5734,"KRN","B",101,101)

"BLD",5734,"KRN","B",409.61,409.61)

"BLD",5734,"KRN","B",771,771)

"BLD",5734,"KRN","B",870,870)

"BLD",5734,"KRN","B",8989.51,8989.51)

"BLD",5734,"KRN","B",8989.52,8989.52)

"BLD",5734,"KRN","B",8994,8994)

"BLD",5734,"QUES",0)
^9.62^^
"BLD",5734,"REQB",0)
^9.611^2^2
"BLD",5734,"REQB",1,0)
IVM*2.0*102^2
"BLD",5734,"REQB",2,0)
IVM*2.0*79^2
"BLD",5734,"REQB","B","IVM*2.0*102",1)

"BLD",5734,"REQB","B","IVM*2.0*79",2)

"FIA",301.7)
IVM ADDRESS CHANGE LOG
"FIA",301.7,0)
^IVM(301.7,
"FIA",301.7,0,0)
301.7D
"FIA",301.7,0,1)
y^n^f^^^^n
"FIA",301.7,0,10)

"FIA",301.7,0,11)

"FIA",301.7,0,"RLRO")

"FIA",301.7,0,"VR")
2.0^IVM
"FIA",301.7,301.7)
0
"KRN",19,4612,-1)
0^5
"KRN",19,4612,0)
IVM OUTPUT CASE INQ^IVM Case Inquiry^^R^^^^^^^^INCOME VERIFICATION MATCH
"KRN",19,4612,1,0)
^^2^2^2940825^^
"KRN",19,4612,1,1,0)
This option is used to display all information regarding an income
"KRN",19,4612,1,2,0)
case which has been transmitted to the IVM Center for verification.
"KRN",19,4612,25)
IVMRNQ
"KRN",19,4612,"U")
IVM CASE INQUIRY
"KRN",19,4613,-1)
0^4
"KRN",19,4613,0)
IVM OUTPUT BILL TRANS^Billing Transmission Report^^R^^^^^^^^INCOME VERIFICATION MATCH
"KRN",19,4613,1,0)
^^2^2^2940614^
"KRN",19,4613,1,1,0)
This option is used to display all billing activity which has been, or
"KRN",19,4613,1,2,0)
needs to be transmitted to the IVM Center.
"KRN",19,4613,25)
IVMRBT
"KRN",19,4613,"U")
BILLING TRANSMISSION REPORT
"KRN",19,4614,-1)
0^3
"KRN",19,4614,0)
IVM OUTPUT MT COMPARISON^Means Test Comparison Report^^R^^^^^^^^INCOME VERIFICATION MATCH
"KRN",19,4614,1,0)
^^2^2^2940825^^
"KRN",19,4614,1,1,0)
This option is used to compare Means Test Category data for
"KRN",19,4614,1,2,0)
consecutive income years.
"KRN",19,4614,25)
IVMRMCR
"KRN",19,4614,"U")
MEANS TEST COMPARISON REPORT
"KRN",19,4619,-1)
0^2
"KRN",19,4619,0)
IVM OUTPUT MENU^IVM Output Menu^^M^^^^^^^^INCOME VERIFICATION MATCH
"KRN",19,4619,1,0)
^19.06^2^2^3051025^^^^
"KRN",19,4619,1,1,0)
This menu option contains all outputs from the IVM package.  These
"KRN",19,4619,1,2,0)
options should probably be placed on other menus as well.
"KRN",19,4619,10,0)
^19.01IP^4^4
"KRN",19,4619,10,1,0)
4614^MTC
"KRN",19,4619,10,1,"^")
IVM OUTPUT MT COMPARISON
"KRN",19,4619,10,2,0)
4613^BTR
"KRN",19,4619,10,2,"^")
IVM OUTPUT BILL TRANS
"KRN",19,4619,10,3,0)
4612^INQ
"KRN",19,4619,10,3,"^")
IVM OUTPUT CASE INQ
"KRN",19,4619,10,4,0)
12406^ACLR
"KRN",19,4619,10,4,"^")
IVM ADDRESS CHANGE LOG REPORT
"KRN",19,4619,99)
60198,40731
"KRN",19,4619,"U")
IVM OUTPUT MENU
"KRN",19,12406,-1)
0^1
"KRN",19,12406,0)
IVM ADDRESS CHANGE LOG REPORT^IVM Address Change Log Report^^R^^^^^^^^INCOME VERIFICATION MATCH
"KRN",19,12406,1,0)
^19.06^3^3^3051025^^
"KRN",19,12406,1,1,0)
This report will be based on records in the IVM ADDRESS CHANGE LOG File
"KRN",19,12406,1,2,0)
#301.7.  It will display all prior addresses where the date of the ADDRESS
"KRN",19,12406,1,3,0)
CHANGE DT/TM is within the past 90 days.
"KRN",19,12406,25)
IVMADDRP
"KRN",19,12406,"U")
IVM ADDRESS CHANGE LOG REPORT
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
108^3051026
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","IVMADDRP")
0^3^B23649264
"RTN","IVMADDRP",1,0)
IVMADDRP ;ALB/PHH - IVM ADDRESS UPLOAD LOG REPORT ; 8/25/05 12:42pm
"RTN","IVMADDRP",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**108**; 21-OCT-94
"RTN","IVMADDRP",3,0)
 ;
"RTN","IVMADDRP",4,0)
 ; This routine list veterans who have had more than one address
"RTN","IVMADDRP",5,0)
 ; change in the past 90 days.
"RTN","IVMADDRP",6,0)
 ;
"RTN","IVMADDRP",7,0)
 N SDATE,EDATE,HDR,MSG,%ZIS,ZTRTN,ZTDESC,ZTSAVE,PAGE,ZTSK,ZTREQ,POP
"RTN","IVMADDRP",8,0)
 S (SDATE,EDATE,HDR)=""
"RTN","IVMADDRP",9,0)
 S EDATE=$$FMADD^XLFDT($$DT^XLFDT,+1)
"RTN","IVMADDRP",10,0)
 S SDATE=$$FMADD^XLFDT(EDATE,-90)
"RTN","IVMADDRP",11,0)
 D SETHEAD
"RTN","IVMADDRP",12,0)
 ;
"RTN","IVMADDRP",13,0)
 ; Get report device. Queue report if requested
"RTN","IVMADDRP",14,0)
 S MSG(1)=""
"RTN","IVMADDRP",15,0)
 S MSG(2)="This report may take a long time to generate.  It is recommended that the report"
"RTN","IVMADDRP",16,0)
 S MSG(3)="be queued to print."
"RTN","IVMADDRP",17,0)
 S MSG(4)=""
"RTN","IVMADDRP",18,0)
 D BMES^XPDUTL(.MSG)
"RTN","IVMADDRP",19,0)
 K IOP,%ZIS
"RTN","IVMADDRP",20,0)
 S %ZIS="MQ"
"RTN","IVMADDRP",21,0)
 D ^%ZIS I POP W !!,"Report Cancelled!" Q
"RTN","IVMADDRP",22,0)
 I $D(IO("Q")) D  Q
"RTN","IVMADDRP",23,0)
 .S ZTRTN="START^IVMADDRP"
"RTN","IVMADDRP",24,0)
 .S ZTDESC="IVM Address Upload Log Report"
"RTN","IVMADDRP",25,0)
 .S ZTSAVE("HDR*")=""
"RTN","IVMADDRP",26,0)
 .S (ZTSAVE("PAGE"),ZTSAVE("SDATE"),ZTSAVE("EDATE"))=""
"RTN","IVMADDRP",27,0)
 .D ^%ZTLOAD
"RTN","IVMADDRP",28,0)
 .W !!,"Report "_$S($D(ZTSK):"Queued!",1:"Cancelled!")
"RTN","IVMADDRP",29,0)
 .D HOME^%ZIS
"RTN","IVMADDRP",30,0)
 D START,^%ZISC
"RTN","IVMADDRP",31,0)
 Q
"RTN","IVMADDRP",32,0)
START ; Generate Report
"RTN","IVMADDRP",33,0)
 N CRT
"RTN","IVMADDRP",34,0)
 K ^XTMP("IVMADDRP",$J)
"RTN","IVMADDRP",35,0)
 S CRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","IVMADDRP",36,0)
 U IO W ! D BUILD(SDATE,EDATE),FILTER,REPORT W ! U 0
"RTN","IVMADDRP",37,0)
 K ^XTMP("IVMADDRP",$J)
"RTN","IVMADDRP",38,0)
 I $G(ZTSK) S ZTREQ="@"
"RTN","IVMADDRP",39,0)
 Q
"RTN","IVMADDRP",40,0)
BUILD(SDATE,EDATE) ; Build the Report
"RTN","IVMADDRP",41,0)
 N CHDTTM,ADDIEN,NODE0,NODE1,DFN,SSN,NAME,ADDR1,ADDR2,CITY,STATE,ZIP
"RTN","IVMADDRP",42,0)
 S CHDTTM=SDATE
"RTN","IVMADDRP",43,0)
 F  S CHDTTM=$O(^IVM(301.7,"B",CHDTTM)) Q:CHDTTM=""!(CHDTTM>EDATE)  D
"RTN","IVMADDRP",44,0)
 .S ADDIEN=0
"RTN","IVMADDRP",45,0)
 .F  S ADDIEN=$O(^IVM(301.7,"B",CHDTTM,ADDIEN)) Q:ADDIEN=""  D
"RTN","IVMADDRP",46,0)
 ..S NODE0=$G(^IVM(301.7,ADDIEN,0))
"RTN","IVMADDRP",47,0)
 ..S NODE1=$G(^IVM(301.7,ADDIEN,1))
"RTN","IVMADDRP",48,0)
 ..S DFN=$P(NODE0,"^",2)
"RTN","IVMADDRP",49,0)
 ..Q:DFN=""
"RTN","IVMADDRP",50,0)
 ..Q:'$D(^DPT(DFN))
"RTN","IVMADDRP",51,0)
 ..S SSN=$P($G(^DPT(DFN,0)),"^",9)
"RTN","IVMADDRP",52,0)
 ..Q:SSN=""
"RTN","IVMADDRP",53,0)
 ..S NAME=$P($G(^DPT(DFN,0)),"^",1)
"RTN","IVMADDRP",54,0)
 ..S ADDR1=$P(NODE1,"^",6)
"RTN","IVMADDRP",55,0)
 ..S ADDR2=$P(NODE1,"^",7)
"RTN","IVMADDRP",56,0)
 ..S CITY=$P(NODE1,"^",8)
"RTN","IVMADDRP",57,0)
 ..S STATE=$P(NODE1,"^",10)
"RTN","IVMADDRP",58,0)
 ..I STATE'="",$D(^DIC(5,STATE,0)) S STATE=$P(^DIC(5,STATE,0),"^",2)
"RTN","IVMADDRP",59,0)
 ..S ZIP=$P(NODE1,"^",11)
"RTN","IVMADDRP",60,0)
 ..;
"RTN","IVMADDRP",61,0)
 ..S ^XTMP("IVMADDRP",$J,SSN,CHDTTM)=ADDIEN_"^"_DFN_"^"_NAME_"^"_ADDR1_"^"_ADDR2_"^"_CITY_"^"_STATE_"^"_ZIP
"RTN","IVMADDRP",62,0)
 Q
"RTN","IVMADDRP",63,0)
FILTER ; Filter report to include only more than one address changes
"RTN","IVMADDRP",64,0)
 N SSN,CHDTTM,CNT
"RTN","IVMADDRP",65,0)
 S SSN=""
"RTN","IVMADDRP",66,0)
 F  S SSN=$O(^XTMP("IVMADDRP",$J,SSN)) Q:SSN=""  D
"RTN","IVMADDRP",67,0)
 .S CHDTTM="",CNT=0
"RTN","IVMADDRP",68,0)
 .F  S CHDTTM=$O(^XTMP("IVMADDRP",$J,SSN,CHDTTM)) Q:CHDTTM=""!(CNT>1)  D
"RTN","IVMADDRP",69,0)
 ..S CNT=CNT+1
"RTN","IVMADDRP",70,0)
 .K:CNT<2 ^XTMP("IVMADDRP",$J,SSN)
"RTN","IVMADDRP",71,0)
 Q
"RTN","IVMADDRP",72,0)
REPORT ; Display the Report
"RTN","IVMADDRP",73,0)
 N SSN,CHDTTM,NODE,NAME,ADDR1,ADDR2,CITY,STATE,ZIP,CSZ
"RTN","IVMADDRP",74,0)
 D HEADER
"RTN","IVMADDRP",75,0)
 I '$D(^XTMP("IVMADDRP",$J)) D  Q
"RTN","IVMADDRP",76,0)
 .W !?24,"****** NOTHING TO REPORT ******",!
"RTN","IVMADDRP",77,0)
 ;
"RTN","IVMADDRP",78,0)
 S QUIT=0,SSN=""
"RTN","IVMADDRP",79,0)
 F  S SSN=$O(^XTMP("IVMADDRP",$J,SSN)) Q:SSN=""!(QUIT)  D
"RTN","IVMADDRP",80,0)
 .S DFN=$O(^DPT("SSN",SSN,""))
"RTN","IVMADDRP",81,0)
 .Q:DFN=""
"RTN","IVMADDRP",82,0)
 .S NAME=$P($G(^DPT(DFN,0)),"^",1)
"RTN","IVMADDRP",83,0)
 .I $L(NAME)>20 S NAME=$E(NAME,1,20)
"RTN","IVMADDRP",84,0)
 .W ! D CHKSL(.QUIT) Q:QUIT
"RTN","IVMADDRP",85,0)
 .W $$FSSN(SSN),?12,NAME
"RTN","IVMADDRP",86,0)
 .S CHDTTM=""
"RTN","IVMADDRP",87,0)
 .F  S CHDTTM=$O(^XTMP("IVMADDRP",$J,SSN,CHDTTM)) Q:CHDTTM=""!(QUIT)  D
"RTN","IVMADDRP",88,0)
 ..W ?35,$$FMTE^XLFDT($P(CHDTTM,".",1))
"RTN","IVMADDRP",89,0)
 ..S NODE=^XTMP("IVMADDRP",$J,SSN,CHDTTM)
"RTN","IVMADDRP",90,0)
 ..S ADDR1=$P(^XTMP("IVMADDRP",$J,SSN,CHDTTM),"^",4)
"RTN","IVMADDRP",91,0)
 ..I $L(ADDR1)>30 S ADDR1=$E(ADDR1,1,30)
"RTN","IVMADDRP",92,0)
 ..S ADDR2=$P(^XTMP("IVMADDRP",$J,SSN,CHDTTM),"^",5)
"RTN","IVMADDRP",93,0)
 ..I $L(ADDR2)>30 S ADDR2=$E(ADDR2,1,30)
"RTN","IVMADDRP",94,0)
 ..S CITY=$P(^XTMP("IVMADDRP",$J,SSN,CHDTTM),"^",6)
"RTN","IVMADDRP",95,0)
 ..S STATE=$P(^XTMP("IVMADDRP",$J,SSN,CHDTTM),"^",7)
"RTN","IVMADDRP",96,0)
 ..S ZIP=$P(^XTMP("IVMADDRP",$J,SSN,CHDTTM),"^",8)
"RTN","IVMADDRP",97,0)
 ..S CSZ=$S(CITY'="":CITY,1:"")_$S(STATE'="":","_STATE,1:"")_$S(ZIP'="":" "_ZIP,1:"")
"RTN","IVMADDRP",98,0)
 ..I $L(CSZ)>30 S CSZ=$E(CSZ,1,30)
"RTN","IVMADDRP",99,0)
 ..;
"RTN","IVMADDRP",100,0)
 ..W:ADDR1'="" ?49,ADDR1,!
"RTN","IVMADDRP",101,0)
 ..D CHKSL(.QUIT) Q:QUIT
"RTN","IVMADDRP",102,0)
 ..W:ADDR2'="" ?49,ADDR2,!
"RTN","IVMADDRP",103,0)
 ..D CHKSL(.QUIT) Q:QUIT
"RTN","IVMADDRP",104,0)
 ..W:CSZ'="" ?49,CSZ,!
"RTN","IVMADDRP",105,0)
 ..D CHKSL(.QUIT) Q:QUIT
"RTN","IVMADDRP",106,0)
 ..W:CSZ="" !
"RTN","IVMADDRP",107,0)
 ..D CHKSL(.QUIT)
"RTN","IVMADDRP",108,0)
 Q
"RTN","IVMADDRP",109,0)
FSSN(SSN) ; Format the SSN
"RTN","IVMADDRP",110,0)
 N FMTSSN
"RTN","IVMADDRP",111,0)
 I SSN="NO SSN" Q SSN
"RTN","IVMADDRP",112,0)
 I $L(SSN)=9 S FMTSSN=SSN
"RTN","IVMADDRP",113,0)
 I $L(SSN)>9 S FMTSSN=$E(SSN,1,10)  ; Account for pseudo-SSN
"RTN","IVMADDRP",114,0)
 I $L(SSN)<9 D
"RTN","IVMADDRP",115,0)
 .S FMTSSN=""
"RTN","IVMADDRP",116,0)
 .F FMTSSN=$L(SSN):1:9 S FMTSSN=FMTSSN_"0"
"RTN","IVMADDRP",117,0)
 .S FMTSSN=FMTSSN_SSN
"RTN","IVMADDRP",118,0)
 Q FMTSSN
"RTN","IVMADDRP",119,0)
SETHEAD ; Set up the header
"RTN","IVMADDRP",120,0)
 S HDR(1)="IVM ADDRESS UPLOAD LOG REPORT"
"RTN","IVMADDRP",121,0)
 S HDR(2)=$$FMTE^XLFDT(SDATE)_" THRU "_$$FMTE^XLFDT(EDATE)
"RTN","IVMADDRP",122,0)
 S HDR(3)=""
"RTN","IVMADDRP",123,0)
 S HDR(4)="SSN         NAME                   CHANGE DATE   ADDRESS"
"RTN","IVMADDRP",124,0)
 S HDR(5)="----------  ---------------------  ------------  ------------------------------"
"RTN","IVMADDRP",125,0)
 Q
"RTN","IVMADDRP",126,0)
HEADER ; Print the header
"RTN","IVMADDRP",127,0)
 N IDX,PGHDR
"RTN","IVMADDRP",128,0)
 S PAGE=$G(PAGE,0),PAGE=PAGE+1,PGHDR="Page: "_$J(PAGE,3)
"RTN","IVMADDRP",129,0)
 W #,$C(27,91,72,27,91,74)  ; Additional $C to clear screen in Cache'
"RTN","IVMADDRP",130,0)
 S IDX="",IDX=$O(HDR(IDX))
"RTN","IVMADDRP",131,0)
 W HDR(IDX),?71,PGHDR
"RTN","IVMADDRP",132,0)
 F  S IDX=$O(HDR(IDX)) Q:IDX=""  D
"RTN","IVMADDRP",133,0)
 .W !,HDR(IDX)
"RTN","IVMADDRP",134,0)
 Q
"RTN","IVMADDRP",135,0)
PAUSE(RESP) ; Prompt user for next page or quit
"RTN","IVMADDRP",136,0)
 N DIR,DIRUT,DUOUT,DTOUT,U,X,Y
"RTN","IVMADDRP",137,0)
 W !
"RTN","IVMADDRP",138,0)
 S DIR(0)="E"
"RTN","IVMADDRP",139,0)
 D ^DIR
"RTN","IVMADDRP",140,0)
 I 'Y S RESP=1
"RTN","IVMADDRP",141,0)
 Q RESP
"RTN","IVMADDRP",142,0)
CHKSL(QUIT) ; Check for screen length
"RTN","IVMADDRP",143,0)
 I $Y=(IOSL-4) D
"RTN","IVMADDRP",144,0)
 .I $G(CRT) S:$$PAUSE(0) QUIT=1
"RTN","IVMADDRP",145,0)
 .I 'QUIT D HEADER W !
"RTN","IVMADDRP",146,0)
 Q
"RTN","IVMLDEM6")
0^2^B59740960
"RTN","IVMLDEM6",1,0)
IVMLDEM6 ;ALB/KCL/BRM/PHH - IVM DEMOGRAPHIC UPLOAD FILE ADDRESS ; 8/31/05 9:07am
"RTN","IVMLDEM6",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**10,58,73,79,108**; 21-OCT-94
"RTN","IVMLDEM6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMLDEM6",4,0)
 ;
"RTN","IVMLDEM6",5,0)
 ;
"RTN","IVMLDEM6",6,0)
ADDR(DFN,IVMDA2,IVMDA1,IVMDA,IVMPPICK) ; - function to check if uploadable field
"RTN","IVMLDEM6",7,0)
 ;                          is an address field and return a flag
"RTN","IVMLDEM6",8,0)
 ;
"RTN","IVMLDEM6",9,0)
 ;  Input:      DFN  -  as patient IEN
"RTN","IVMLDEM6",10,0)
 ;           IVMDA2  -  pointer to case record in (#301.5) file
"RTN","IVMLDEM6",11,0)
 ;           IVMDA1  -  pointer to PID msg in (#301.501) sub-file
"RTN","IVMLDEM6",12,0)
 ;            IVMDA  -  pointer to record in (#301.511) sub-file
"RTN","IVMLDEM6",13,0)
 ;         IVMPPICK  -  residence phone number and/or another address
"RTN","IVMLDEM6",14,0)
 ;                        field selected
"RTN","IVMLDEM6",15,0)
 ;                      0 - phone or an address field not selected 
"RTN","IVMLDEM6",16,0)
 ;                      1 - address field(s) selected
"RTN","IVMLDEM6",17,0)
 ;                      2 - phone selected
"RTN","IVMLDEM6",18,0)
 ;                      3 - both address field(s) and phone selected
"RTN","IVMLDEM6",19,0)
 ;
"RTN","IVMLDEM6",20,0)
 ; Output: IVMFLAG   -  1 if address field
"RTN","IVMLDEM6",21,0)
 ;                      0 if not an address field
"RTN","IVMLDEM6",22,0)
 ;
"RTN","IVMLDEM6",23,0)
 ;
"RTN","IVMLDEM6",24,0)
 N IVMFLAG,IVMI,IVMJ,IVMNODE,IVMPTR,Y
"RTN","IVMLDEM6",25,0)
 ;
"RTN","IVMLDEM6",26,0)
 ; - initialize flags
"RTN","IVMLDEM6",27,0)
 S IVMFLAG=0
"RTN","IVMLDEM6",28,0)
 ;
"RTN","IVMLDEM6",29,0)
 ; - check for required parameters
"RTN","IVMLDEM6",30,0)
 I '$G(DFN)!('$G(IVMDA))!('$G(IVMDA1))!'($G(IVMDA2)) G ADDRQ
"RTN","IVMLDEM6",31,0)
 ;
"RTN","IVMLDEM6",32,0)
 ; - get pointer to (#301.92) file from (#301.511) sub-file
"RTN","IVMLDEM6",33,0)
 S IVMPTR=+$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMDA,0)) G ADDRQ:'IVMPTR
"RTN","IVMLDEM6",34,0)
 ;
"RTN","IVMLDEM6",35,0)
ASK I '$D(^IVM(301.92,"AD",+IVMPTR)) G ADDRQ
"RTN","IVMLDEM6",36,0)
 I IVMPPICK=2 G ASK1
"RTN","IVMLDEM6",37,0)
 W ! S DIR("A")="Do you wish to proceed with this action"
"RTN","IVMLDEM6",38,0)
 S DIR("A",1)="You have selected to update an address field."
"RTN","IVMLDEM6",39,0)
 S DIR("A",2)="You will be required to upload the entire address."
"RTN","IVMLDEM6",40,0)
 S DIR("?")="Enter 'YES' to continue or 'NO' to abort."
"RTN","IVMLDEM6",41,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IVMLDEM6",42,0)
 D ^DIR K DIR
"RTN","IVMLDEM6",43,0)
 S IVMFLAG=1 G ADDRQ:'Y
"RTN","IVMLDEM6",44,0)
 W ! S DIR("A")="Are you sure that you want to update the complete address"
"RTN","IVMLDEM6",45,0)
 S:$$PHARM(+$G(DFN)) DIR("A",1)="*** WARNING: This patient has ACTIVE PRESCRIPTIONS on file."
"RTN","IVMLDEM6",46,0)
 S DIR("A",2)=""
"RTN","IVMLDEM6",47,0)
 I $$ADRDTCK^IVMLDEM9(+$G(DFN),IVMDA2,IVMDA1) S DIR("A",2)="*** WARNING: The address that you are attempting to file is OLDER than",DIR("A",3)="             the address on file.",DIR("A",4)=""
"RTN","IVMLDEM6",48,0)
 S DIR("?",1)="Enter 'YES' to update the complete address that was received from"
"RTN","IVMLDEM6",49,0)
 S DIR("?")="HEC.  Enter 'NO' to quit."
"RTN","IVMLDEM6",50,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IVMLDEM6",51,0)
 D ^DIR K DIR
"RTN","IVMLDEM6",52,0)
 S IVMFLAG=1 G ADDRQ:'Y
"RTN","IVMLDEM6",53,0)
 W !,"Filing address fields... "
"RTN","IVMLDEM6",54,0)
 ;
"RTN","IVMLDEM6",55,0)
 ; determine correct address change date/time to use
"RTN","IVMLDEM6",56,0)
 D ADDRDT(DFN,IVMDA2,IVMDA1)
"RTN","IVMLDEM6",57,0)
 ;
"RTN","IVMLDEM6",58,0)
LOOP ;
"RTN","IVMLDEM6",59,0)
 N DGPRIOR D GETPRIOR^DGADDUTL(DFN,.DGPRIOR)
"RTN","IVMLDEM6",60,0)
 ;
"RTN","IVMLDEM6",61,0)
 ; - loop thru fields in ^IVM(301.92,"AD" x-ref
"RTN","IVMLDEM6",62,0)
 S IVMI=0 F  S IVMI=$O(^IVM(301.92,"AD",IVMI)) Q:IVMI']""  D
"RTN","IVMLDEM6",63,0)
 .S IVMJ=0 F  S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,IVMJ)) Q:IVMJ']""  D
"RTN","IVMLDEM6",64,0)
 ..;
"RTN","IVMLDEM6",65,0)
 ..; - check for data node in (#301.511) sub-file
"RTN","IVMLDEM6",66,0)
 ..S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0)) Q:IVMNODE']""
"RTN","IVMLDEM6",67,0)
 ..Q:'(+IVMNODE)!($P(IVMNODE,"^",2)']"")
"RTN","IVMLDEM6",68,0)
 ..;
"RTN","IVMLDEM6",69,0)
 ..; - check if residence phone number and not selected to upload
"RTN","IVMLDEM6",70,0)
 ..Q:(IVMPPICK=1&(+IVMNODE=$O(^IVM(301.92,"B","PHONE NUMBER [RESIDENCE]",0))))
"RTN","IVMLDEM6",71,0)
 ..; - check if not residence phone number and only phone selected to upload
"RTN","IVMLDEM6",72,0)
 ..Q:(IVMPPICK=2&(+IVMNODE'=$O(^IVM(301.92,"B","PHONE NUMBER [RESIDENCE]",0))))
"RTN","IVMLDEM6",73,0)
 ..;
"RTN","IVMLDEM6",74,0)
 ..; - perform any necessary address field manipulation and
"RTN","IVMLDEM6",75,0)
 ..;   load addr field rec'd from IVM into DHCP (#2) file
"RTN","IVMLDEM6",76,0)
 ..D UPLOAD(+DFN,$P($G(^IVM(301.92,+IVMNODE,0)),"^",5),$P(IVMNODE,"^",2)) S IVMFLAG=1
"RTN","IVMLDEM6",77,0)
 ..;
"RTN","IVMLDEM6",78,0)
 ..; - remove entry from (#301.511) sub-file
"RTN","IVMLDEM6",79,0)
 ..D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMLDEM6",80,0)
 ;
"RTN","IVMLDEM6",81,0)
 I IVMFLAG W "completed.",! D
"RTN","IVMLDEM6",82,0)
 .N DGCURR
"RTN","IVMLDEM6",83,0)
 .D GETUPDTS^DGADDUTL(DFN,.DGCURR)
"RTN","IVMLDEM6",84,0)
 .D UPDADDLG^DGADDUTL(DFN,.DGPRIOR,.DGCURR)
"RTN","IVMLDEM6",85,0)
 ;
"RTN","IVMLDEM6",86,0)
 ; - if addr is uploaded and phone # is not - ask user delete phone
"RTN","IVMLDEM6",87,0)
 I IVMFLAG,$P($G(^DPT(+DFN,.13)),"^")]"",(2>IVMPPICK) D PHONE
"RTN","IVMLDEM6",88,0)
 S VALMBCK="R"
"RTN","IVMLDEM6",89,0)
 ;
"RTN","IVMLDEM6",90,0)
 ;
"RTN","IVMLDEM6",91,0)
ADDRQ ; - return  -->  1 if uploadable field is an address field
"RTN","IVMLDEM6",92,0)
 ;           -->  0 if uploadable field is not an address field
"RTN","IVMLDEM6",93,0)
 ;
"RTN","IVMLDEM6",94,0)
 I IVMFLAG D RESET^IVMLDEMU
"RTN","IVMLDEM6",95,0)
 Q IVMFLAG
"RTN","IVMLDEM6",96,0)
 ;
"RTN","IVMLDEM6",97,0)
 ;
"RTN","IVMLDEM6",98,0)
UPLOAD(DFN,IVMFIELD,IVMVALUE) ; - file address fields received from IVM
"RTN","IVMLDEM6",99,0)
 ;
"RTN","IVMLDEM6",100,0)
 ;  Input:       DFN  -  as patient IEN
"RTN","IVMLDEM6",101,0)
 ;          IVMFIELD  -  as the field number to be updated
"RTN","IVMLDEM6",102,0)
 ;          IVMVALUE  -  as the value of the field
"RTN","IVMLDEM6",103,0)
 ;
"RTN","IVMLDEM6",104,0)
 ; Output: None
"RTN","IVMLDEM6",105,0)
 ;
"RTN","IVMLDEM6",106,0)
 ;
"RTN","IVMLDEM6",107,0)
 ; - update specified address field in the Patient (#2) file
"RTN","IVMLDEM6",108,0)
 S DIE="^DPT(",DA=DFN,DR=IVMFIELD_"///^S X=IVMVALUE"
"RTN","IVMLDEM6",109,0)
 D ^DIE K DA,DIE,DR
"RTN","IVMLDEM6",110,0)
 ;
"RTN","IVMLDEM6",111,0)
 ; - delete inaccurate Addr Change Site data if Source is not VAMC
"RTN","IVMLDEM6",112,0)
 ;   (trigger x-ref does not fire with 4 slash stuff)
"RTN","IVMLDEM6",113,0)
 I IVMFIELD=.119,IVMVALUE'="VAMC" S FDA(2,+DFN_",",.12)="@" D UPDATE^DIE("E","FDA")
"RTN","IVMLDEM6",114,0)
 ;
"RTN","IVMLDEM6",115,0)
 Q
"RTN","IVMLDEM6",116,0)
 ;
"RTN","IVMLDEM6",117,0)
 ;
"RTN","IVMLDEM6",118,0)
PHONE ; - ask user to delete phone # [Residence] from Patient (#2) file
"RTN","IVMLDEM6",119,0)
 D FULL^VALM1
"RTN","IVMLDEM6",120,0)
 W ! S DIR("A")="Is it okay to delete the patient's Phone Number [Residence]"
"RTN","IVMLDEM6",121,0)
 W ! S DIR("A",1)="The patient's address has been updated and the phone number"
"RTN","IVMLDEM6",122,0)
 S DIR("A",2)="remains on file."
"RTN","IVMLDEM6",123,0)
 S DIR("A",3)=" "
"RTN","IVMLDEM6",124,0)
 S DIR("A",4)="Patient Name: "_$P($$PT^IVMUFNC4(+DFN),"^")_" ("_$P($$PT^IVMUFNC4(+DFN),"^",3)_")"
"RTN","IVMLDEM6",125,0)
 S DIR("A",5)="Phone Number [Residence]: "_$P($G(^DPT(+DFN,.13)),"^")
"RTN","IVMLDEM6",126,0)
 S DIR("A",6)=" "
"RTN","IVMLDEM6",127,0)
 S DIR("?",1)="Enter 'YES' to delete the patient's Phone Number [Residence] that is"
"RTN","IVMLDEM6",128,0)
 S DIR("?",2)="currently on file.  Enter 'NO' to quit without deleting the patient's"
"RTN","IVMLDEM6",129,0)
 S DIR("?")="Phone Number [Residence]."
"RTN","IVMLDEM6",130,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IVMLDEM6",131,0)
 D ^DIR K DIR
"RTN","IVMLDEM6",132,0)
 S:Y $P(^DPT(DFN,.13),"^")="" W !!,"Patient's Phone Number [Residence] has ",$S(Y:"",1:"not "),"been deleted."
"RTN","IVMLDEM6",133,0)
 Q
"RTN","IVMLDEM6",134,0)
 ;
"RTN","IVMLDEM6",135,0)
ASK1 ; - phone selected to be uploaded - address fields not selected
"RTN","IVMLDEM6",136,0)
 W ! S DIR("A")="Okay to update the PHONE NUMBER [RESIDENCE] field"
"RTN","IVMLDEM6",137,0)
 S DIR("?",1)="Enter 'YES' to update the patient's Phone Number [Residence] that was"
"RTN","IVMLDEM6",138,0)
 S DIR("?",2)="received from HEC.  Enter 'NO' to quit."
"RTN","IVMLDEM6",139,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","IVMLDEM6",140,0)
 D ^DIR K DIR
"RTN","IVMLDEM6",141,0)
 S IVMFLAG=1 G ADDRQ:'Y
"RTN","IVMLDEM6",142,0)
 W !,"Updating PHONE NUMBER [RESIDENCE] field... "
"RTN","IVMLDEM6",143,0)
 G LOOP
"RTN","IVMLDEM6",144,0)
 ;
"RTN","IVMLDEM6",145,0)
AUTOADDR(DFN,IVMPPICK,NOUPDT) ;
"RTN","IVMLDEM6",146,0)
 ; this functionality is copied from above and modified to allow
"RTN","IVMLDEM6",147,0)
 ; an automated upload of patient address information as stipulated
"RTN","IVMLDEM6",148,0)
 ; in the business requirements for Address Indexing to support GMT
"RTN","IVMLDEM6",149,0)
 ;
"RTN","IVMLDEM6",150,0)
 ;  Input:      DFN  -  as patient IEN
"RTN","IVMLDEM6",151,0)
 ;         IVMPPICK  -  residence phone number and/or another address
"RTN","IVMLDEM6",152,0)
 ;                        field selected
"RTN","IVMLDEM6",153,0)
 ;                      1 - address field(s) selected
"RTN","IVMLDEM6",154,0)
 ;                      3 - both address field(s) and phone selected
"RTN","IVMLDEM6",155,0)
 ;           NOUPDT  -  (optional) this flag is set when the incoming
"RTN","IVMLDEM6",156,0)
 ;                      address data is older than the existing
"RTN","IVMLDEM6",157,0)
 ;                      address in the Patient (#2) file
"RTN","IVMLDEM6",158,0)
 ;
"RTN","IVMLDEM6",159,0)
 ; Output: IVMFLAG   -  1 if address fields updated
"RTN","IVMLDEM6",160,0)
 ;                      0 if address fields not updated
"RTN","IVMLDEM6",161,0)
 ;
"RTN","IVMLDEM6",162,0)
 ;
"RTN","IVMLDEM6",163,0)
 ;
"RTN","IVMLDEM6",164,0)
 N IVMFLAG,IVMI,IVMJ,IVMNODE,IVMPTR,Y
"RTN","IVMLDEM6",165,0)
 ;
"RTN","IVMLDEM6",166,0)
 ; - initialize flags
"RTN","IVMLDEM6",167,0)
 S IVMFLAG=0
"RTN","IVMLDEM6",168,0)
 S:'$G(NOUPDT) NOUPDT=0
"RTN","IVMLDEM6",169,0)
 ;
"RTN","IVMLDEM6",170,0)
 ; - check for required parameters
"RTN","IVMLDEM6",171,0)
 Q:'$G(DFN) IVMFLAG
"RTN","IVMLDEM6",172,0)
 ;
"RTN","IVMLDEM6",173,0)
 N DGPRIOR D GETPRIOR^DGADDUTL(DFN,.DGPRIOR)
"RTN","IVMLDEM6",174,0)
 ;
"RTN","IVMLDEM6",175,0)
 S IVMDA2=$G(IVM3015)
"RTN","IVMLDEM6",176,0)
 Q:'$G(IVMDA2) IVMFLAG
"RTN","IVMLDEM6",177,0)
 S IVMDA1=$O(^HL(771.3,"B","PID",""))
"RTN","IVMLDEM6",178,0)
 S IVMDA1=$O(^IVM(301.5,IVMDA2,"IN","B",IVMDA1,""),-1)
"RTN","IVMLDEM6",179,0)
 Q:'IVMDA1 IVMFLAG
"RTN","IVMLDEM6",180,0)
 ;
"RTN","IVMLDEM6",181,0)
 S IVMI=0 F  S IVMI=$O(^IVM(301.92,"AD",IVMI)) Q:IVMI']""  D
"RTN","IVMLDEM6",182,0)
 .S IVMJ=0 F  S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,IVMJ)) Q:IVMJ']""  D
"RTN","IVMLDEM6",183,0)
 ..;
"RTN","IVMLDEM6",184,0)
 ..; - check for data node in (#301.511) sub-file
"RTN","IVMLDEM6",185,0)
 ..S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMLDEM6",186,0)
 ..I ('+IVMNODE)!($P(IVMNODE,"^",2)']"") Q
"RTN","IVMLDEM6",187,0)
 ..;
"RTN","IVMLDEM6",188,0)
 ..; - check if residence phone number -> do not auto-upload
"RTN","IVMLDEM6",189,0)
 ..I (IVMPPICK=1&(+IVMNODE=$O(^IVM(301.92,"B","PHONE NUMBER [RESIDENCE]",0)))) D DEMBULL^IVMPREC6 Q
"RTN","IVMLDEM6",190,0)
 ..;
"RTN","IVMLDEM6",191,0)
 ..; don't auto-update if there is an active Prescription record and
"RTN","IVMLDEM6",192,0)
 ..; the Bad Address Indicator is null
"RTN","IVMLDEM6",193,0)
 ..I ('NOUPDT),$$PHARM(+DFN),'$$BADADR^DGUTL3(+DFN) D DEMBULL^IVMPREC6 Q
"RTN","IVMLDEM6",194,0)
 ..;
"RTN","IVMLDEM6",195,0)
 ..; - load addr field rec'd from IVM into DHCP (#2) file
"RTN","IVMLDEM6",196,0)
 ..I 'NOUPDT D UPLOAD(+DFN,$P($G(^IVM(301.92,+IVMNODE,0)),"^",5),$P(IVMNODE,"^",2)) S IVMFLAG=1
"RTN","IVMLDEM6",197,0)
 ..;
"RTN","IVMLDEM6",198,0)
 ..; - remove entry from (#301.511) sub-file
"RTN","IVMLDEM6",199,0)
 ..D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMLDEM6",200,0)
 ..; - if no display or uploadable fields left, then delete the PID
"RTN","IVMLDEM6",201,0)
 ..;   segment
"RTN","IVMLDEM6",202,0)
 ..I '$$DEMO^IVMLDEM5(IVMDA2,IVMDA1,0),'$$DEMO^IVMLDEM5(IVMDA2,IVMDA1,1) D
"RTN","IVMLDEM6",203,0)
 ...D DELETE^IVMLDEM5(IVMDA2,IVMDA1," ") ; Dummy up name parameter
"RTN","IVMLDEM6",204,0)
 I IVMFLAG D
"RTN","IVMLDEM6",205,0)
 .N DGCURR
"RTN","IVMLDEM6",206,0)
 .D GETUPDTS^DGADDUTL(DFN,.DGCURR)
"RTN","IVMLDEM6",207,0)
 .D UPDADDLG^DGADDUTL(DFN,.DGPRIOR,.DGCURR)
"RTN","IVMLDEM6",208,0)
 Q IVMFLAG
"RTN","IVMLDEM6",209,0)
 ;
"RTN","IVMLDEM6",210,0)
ADDRDT(DFN,IVMDA2,IVMDA1) ;
"RTN","IVMLDEM6",211,0)
 ; - validate Address Change Dt/Tm before filing
"RTN","IVMLDEM6",212,0)
 ;   if incoming address is accepted and the change date is older
"RTN","IVMLDEM6",213,0)
 ;   than what's on file, then use today's date for Addr Chg Dt/Tm
"RTN","IVMLDEM6",214,0)
 ;
"RTN","IVMLDEM6",215,0)
 Q:'$$ADRDTCK^IVMLDEM9(DFN,IVMDA2,IVMDA1)
"RTN","IVMLDEM6",216,0)
 N FDA,IEN92,IVMDA,IENS,ERR
"RTN","IVMLDEM6",217,0)
 S IEN92=$O(^IVM(301.92,"C","RF171","")) Q:'IEN92
"RTN","IVMLDEM6",218,0)
 Q:'$D(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IEN92))
"RTN","IVMLDEM6",219,0)
 S IVMDA=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IEN92,"")) Q:'IVMDA
"RTN","IVMLDEM6",220,0)
 S IENS=IVMDA_","_IVMDA1_","_IVMDA2_","
"RTN","IVMLDEM6",221,0)
 S FDA(301.511,IENS,.02)=$$NOW^XLFDT
"RTN","IVMLDEM6",222,0)
 D FILE^DIE("","FDA","ERR")
"RTN","IVMLDEM6",223,0)
 Q
"RTN","IVMLDEM6",224,0)
 ;
"RTN","IVMLDEM6",225,0)
PHARM(DFN) ;does this patient have active pharmacy prescriptions?
"RTN","IVMLDEM6",226,0)
 ;
"RTN","IVMLDEM6",227,0)
 ;External reference to $$EN^PSSRXACT supported by IA #4237
"RTN","IVMLDEM6",228,0)
 ;
"RTN","IVMLDEM6",229,0)
 Q $S('$G(DFN):0,1:$$EN^PSSRXACT(DFN))
"RTN","IVMLDEMD")
0^1^B69403239
"RTN","IVMLDEMD",1,0)
IVMLDEMD ;ALB/PJR/PHH - IVM DEMOGRAPHIC UPLOAD FILE DATE OF DEATH FIELDS ; 7/20/05 9:22am
"RTN","IVMLDEMD",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**102,108**; 21-OCT-94
"RTN","IVMLDEMD",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMLDEMD",4,0)
 ;
"RTN","IVMLDEMD",5,0)
 ;
"RTN","IVMLDEMD",6,0)
DOD(DFN,IVMDA2,IVMDA1,IVMDA) ; function to upload Date of Death
"RTN","IVMLDEMD",7,0)
 ;                                   fields and return a flag
"RTN","IVMLDEMD",8,0)
 ;
"RTN","IVMLDEMD",9,0)
 ;  Input:      DFN  -  as patient IEN
"RTN","IVMLDEMD",10,0)
 ;           IVMDA2  -  pointer to case record in (#301.5) file
"RTN","IVMLDEMD",11,0)
 ;           IVMDA1  -  pointer to PID msg in (#301.501) sub-file
"RTN","IVMLDEMD",12,0)
 ;            IVMDA  -  pointer to record in (#301.511) sub-file
"RTN","IVMLDEMD",13,0)
 ;
"RTN","IVMLDEMD",14,0)
 ; Output: IVMFLAG   -  1 if a Date of Death Field
"RTN","IVMLDEMD",15,0)
 ;                      0 if not a Date of Death field
"RTN","IVMLDEMD",16,0)
 ;
"RTN","IVMLDEMD",17,0)
 ;
"RTN","IVMLDEMD",18,0)
 N IVMFLAG,IVMI,IVMJ,IVMNODE,IVMPTR,Y,DODFIELD,DELDATA,CKDEL,DGDAUTO
"RTN","IVMLDEMD",19,0)
 ;
"RTN","IVMLDEMD",20,0)
 ; - initialize flags
"RTN","IVMLDEMD",21,0)
 S IVMFLAG=0
"RTN","IVMLDEMD",22,0)
 ;
"RTN","IVMLDEMD",23,0)
 ; - check for required parameters
"RTN","IVMLDEMD",24,0)
 I '$G(DFN)!('$G(IVMDA))!('$G(IVMDA1))!'($G(IVMDA2)) G DODQ
"RTN","IVMLDEMD",25,0)
 ;
"RTN","IVMLDEMD",26,0)
 ; - get pointer to (#301.92) file from (#301.511) sub-file
"RTN","IVMLDEMD",27,0)
 S IVMPTR=+$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMDA,0)) G DODQ:'IVMPTR
"RTN","IVMLDEMD",28,0)
 ;
"RTN","IVMLDEMD",29,0)
ASK ;;
"RTN","IVMLDEMD",30,0)
 D CKDEL I CKDEL G DODDEL
"RTN","IVMLDEMD",31,0)
 W ! S DIR("A")="Do you wish to proceed with this action"
"RTN","IVMLDEMD",32,0)
 S DIR("A",1)="You have selected to update a Date of Death field."
"RTN","IVMLDEMD",33,0)
 S DIR("A",2)="All Date of Death Fields will be uploaded."
"RTN","IVMLDEMD",34,0)
 S DIR("?")="Enter 'YES' to continue or 'NO' to abort."
"RTN","IVMLDEMD",35,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IVMLDEMD",36,0)
 D ^DIR K DIR
"RTN","IVMLDEMD",37,0)
 S IVMFLAG=1 G DODQ:'Y
"RTN","IVMLDEMD",38,0)
 W !,"Filing Date of Death fields... "
"RTN","IVMLDEMD",39,0)
 ;
"RTN","IVMLDEMD",40,0)
 ;
"RTN","IVMLDEMD",41,0)
LOOP ; - loop through DOD fields
"RTN","IVMLDEMD",42,0)
 S (DGDAUTO,IVMDODUP)=1
"RTN","IVMLDEMD",43,0)
 F DODFIELD="ZPD09","ZPD31","ZPD32" D
"RTN","IVMLDEMD",44,0)
 .S IVMI=$O(^IVM(301.92,"C",DODFIELD,"")) I IVMI="" Q
"RTN","IVMLDEMD",45,0)
 .S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,"")) Q:IVMJ']""  D
"RTN","IVMLDEMD",46,0)
 ..;
"RTN","IVMLDEMD",47,0)
 ..; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",48,0)
 ..S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0)) Q:'(+IVMNODE)
"RTN","IVMLDEMD",49,0)
 ..I DODFIELD="ZPD31",$P(IVMNODE,"^",2)=""!($P(IVMNODE,"^",2)<1)!($P(IVMNODE,"^",2)>9) S $P(IVMNODE,"^",2)="@"
"RTN","IVMLDEMD",50,0)
 ..I DODFIELD'="ZPD31",$P(IVMNODE,"^",2)=""!($E($P(IVMNODE,"^",2),1,7)'?1.7N) S $P(IVMNODE,"^",2)="@"
"RTN","IVMLDEMD",51,0)
 ..;
"RTN","IVMLDEMD",52,0)
 ..;   load Date of Death field rec'd from IVM into DHCP (#2) file
"RTN","IVMLDEMD",53,0)
 ..D UPLOAD(+DFN,$P($G(^IVM(301.92,+IVMNODE,0)),"^",5),$P(IVMNODE,"^",2)) S IVMFLAG=1
"RTN","IVMLDEMD",54,0)
 ..;
"RTN","IVMLDEMD",55,0)
 ..; - remove entry from (#301.511) sub-file
"RTN","IVMLDEMD",56,0)
 ..D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMLDEMD",57,0)
 ;
"RTN","IVMLDEMD",58,0)
 I IVMFLAG D  W "completed.",!
"RTN","IVMLDEMD",59,0)
 .D UPLOAD(+DFN,.355,$S($G(DUZ):DUZ,1:.5))
"RTN","IVMLDEMD",60,0)
 D DISCHRGE^DGDEATH,XFR^DGDEATH
"RTN","IVMLDEMD",61,0)
 K IVMDODUP
"RTN","IVMLDEMD",62,0)
 ;                                                                    
"RTN","IVMLDEMD",63,0)
 S VALMBCK="R"
"RTN","IVMLDEMD",64,0)
 ;
"RTN","IVMLDEMD",65,0)
 G DODQ
"RTN","IVMLDEMD",66,0)
 ;
"RTN","IVMLDEMD",67,0)
DODDEL ;
"RTN","IVMLDEMD",68,0)
 W ! S DIR("A")="Do you wish to proceed with this action"
"RTN","IVMLDEMD",69,0)
 S DIR("A",1)="You have selected to update a DELETION of a Date of Death field."
"RTN","IVMLDEMD",70,0)
 S DIR("A",2)="All Date of Death Fields will be deleted."
"RTN","IVMLDEMD",71,0)
 S DIR("?")="Enter 'YES' to continue or 'NO' to abort."
"RTN","IVMLDEMD",72,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IVMLDEMD",73,0)
 D ^DIR K DIR
"RTN","IVMLDEMD",74,0)
 S IVMFLAG=1 G DODQ:'Y
"RTN","IVMLDEMD",75,0)
 W !,"Filing Date of Death deletions... "
"RTN","IVMLDEMD",76,0)
 F DODFIELD="ZPD09","ZPD31","ZPD32" D
"RTN","IVMLDEMD",77,0)
 .S IVMI=$O(^IVM(301.92,"C",DODFIELD,"")) I IVMI="" Q
"RTN","IVMLDEMD",78,0)
 .S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,"")) Q:IVMJ']""
"RTN","IVMLDEMD",79,0)
 .;
"RTN","IVMLDEMD",80,0)
 .; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",81,0)
 .S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMLDEMD",82,0)
 .Q:'(+IVMNODE)
"RTN","IVMLDEMD",83,0)
 .;
"RTN","IVMLDEMD",84,0)
 .;   load Date of Death deletion rec'd from IVM into DHCP (#2) file
"RTN","IVMLDEMD",85,0)
 .I DODFIELD="ZPD09" D UPLOAD(+DFN,.351,"@")
"RTN","IVMLDEMD",86,0)
 .;
"RTN","IVMLDEMD",87,0)
 .; - remove entry from (#301.511) sub-file
"RTN","IVMLDEMD",88,0)
 .D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMLDEMD",89,0)
 ;
"RTN","IVMLDEMD",90,0)
 I IVMFLAG D  W "completed.",!
"RTN","IVMLDEMD",91,0)
 .D UPLOAD(+DFN,.355,.5)
"RTN","IVMLDEMD",92,0)
 ;
"RTN","IVMLDEMD",93,0)
 S VALMBCK="R"
"RTN","IVMLDEMD",94,0)
 ;
"RTN","IVMLDEMD",95,0)
 G DODQ
"RTN","IVMLDEMD",96,0)
CKDEL S CKDEL=0
"RTN","IVMLDEMD",97,0)
 S IVMI=$O(^IVM(301.92,"C","ZPD09","")) I IVMI="" Q
"RTN","IVMLDEMD",98,0)
 S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,""))
"RTN","IVMLDEMD",99,0)
 I IVMJ']"" Q
"RTN","IVMLDEMD",100,0)
 ;
"RTN","IVMLDEMD",101,0)
 ; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",102,0)
 S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMLDEMD",103,0)
 Q:'(+IVMNODE)!($P(IVMNODE,"^",2)']"")
"RTN","IVMLDEMD",104,0)
 ;
"RTN","IVMLDEMD",105,0)
 I $P(IVMNODE,"^",2)="""""" S CKDEL=1
"RTN","IVMLDEMD",106,0)
 Q
"RTN","IVMLDEMD",107,0)
AUTODOD(DFN) ;
"RTN","IVMLDEMD",108,0)
 ; function to automatically upload Date of Death
"RTN","IVMLDEMD",109,0)
 ; fields and return a flag
"RTN","IVMLDEMD",110,0)
 ;
"RTN","IVMLDEMD",111,0)
 ;  Input:      DFN  -  as patient IEN
"RTN","IVMLDEMD",112,0)
 ;
"RTN","IVMLDEMD",113,0)
 ; Output: IVMFLAG   -  1 if a Date of Death Field
"RTN","IVMLDEMD",114,0)
 ;                      0 if not a Date of Death field
"RTN","IVMLDEMD",115,0)
 ;
"RTN","IVMLDEMD",116,0)
 N IVMFLAG,IVMI,IVMJ,IVMNODE,IVMPTR,DODFIELD
"RTN","IVMLDEMD",117,0)
 N DELDATA,CKDEL,CKADD,CKDUZ,IVMDA1,IVMDA2,DGDAUTO,IVMENT4
"RTN","IVMLDEMD",118,0)
 ;
"RTN","IVMLDEMD",119,0)
 ; - initialize flags
"RTN","IVMLDEMD",120,0)
 S (IVMFLAG,CKDEL,CKADD,CKDUZ)=0,IVMENT4=999999999
"RTN","IVMLDEMD",121,0)
 ;
"RTN","IVMLDEMD",122,0)
 ; - check for required parameters
"RTN","IVMLDEMD",123,0)
 S IVMDA2=$G(IVM3015)
"RTN","IVMLDEMD",124,0)
 I 'IVMDA2 G DODQ
"RTN","IVMLDEMD",125,0)
 S IVMDA1=$O(^HL(771.3,"B","PID",""))
"RTN","IVMLDEMD",126,0)
 S IVMDA1=$O(^IVM(301.5,IVMDA2,"IN","B",IVMDA1,""),-1)
"RTN","IVMLDEMD",127,0)
 I 'IVMDA1 G DODQ
"RTN","IVMLDEMD",128,0)
 ;
"RTN","IVMLDEMD",129,0)
 D CKAUTO I CKDEL D AUTODEL,DEM5,BULL(+^IVM(301.5,IVMDA2,0)) G DODQ
"RTN","IVMLDEMD",130,0)
 I CKADD D CKDUZ,AUTOADD,DEM5 G DODQ
"RTN","IVMLDEMD",131,0)
 G DODQ
"RTN","IVMLDEMD",132,0)
AUTOADD ;
"RTN","IVMLDEMD",133,0)
 S DGDAUTO=1
"RTN","IVMLDEMD",134,0)
 ; - loop through DOD fields
"RTN","IVMLDEMD",135,0)
 F DODFIELD="ZPD09","ZPD31","ZPD32" D
"RTN","IVMLDEMD",136,0)
 .S IVMI=$O(^IVM(301.92,"C",DODFIELD,"")) I IVMI="" Q
"RTN","IVMLDEMD",137,0)
 .S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,"")) Q:IVMJ']""  D
"RTN","IVMLDEMD",138,0)
 ..;
"RTN","IVMLDEMD",139,0)
 ..; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",140,0)
 ..S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0)) Q:'(+IVMNODE)
"RTN","IVMLDEMD",141,0)
 ..I DODFIELD="ZPD31",$P(IVMNODE,"^",2)=""!($P(IVMNODE,"^",2)<1)!($P(IVMNODE,"^",2)>9) S $P(IVMNODE,"^",2)="@"
"RTN","IVMLDEMD",142,0)
 ..I DODFIELD'="ZPD31",$P(IVMNODE,"^",2)=""!($E($P(IVMNODE,"^",2),1,7)'?1.7N) S $P(IVMNODE,"^",2)="@"
"RTN","IVMLDEMD",143,0)
 ..;
"RTN","IVMLDEMD",144,0)
 ..;   load Date of Death field rec'd from IVM into DHCP (#2) file
"RTN","IVMLDEMD",145,0)
 ..I DODFIELD'="ZPD09" D UPLOAD(+DFN,$P($G(^IVM(301.92,+IVMNODE,0)),"^",5),$P(IVMNODE,"^",2)) S IVMFLAG=1
"RTN","IVMLDEMD",146,0)
 ..; - remove entry from (#301.511) sub-file
"RTN","IVMLDEMD",147,0)
 ..D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMLDEMD",148,0)
 ;
"RTN","IVMLDEMD",149,0)
 I IVMFLAG D UPLOAD(+DFN,.355,$S(CKDUZ:CKDUZ,1:.5))
"RTN","IVMLDEMD",150,0)
 D CLEAN(IVMDA2)
"RTN","IVMLDEMD",151,0)
 Q
"RTN","IVMLDEMD",152,0)
AUTODEL ;
"RTN","IVMLDEMD",153,0)
 N DFNDOD,DODMPI S DFNDOD=0 I $P($G(^DPT(+DFN,.35)),U)>0 S DFNDOD=1
"RTN","IVMLDEMD",154,0)
 F DODFIELD="ZPD09","ZPD31","ZPD32" D
"RTN","IVMLDEMD",155,0)
 .S IVMI=$O(^IVM(301.92,"C",DODFIELD,"")) I IVMI="" Q
"RTN","IVMLDEMD",156,0)
 .S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,"")) Q:IVMJ']""
"RTN","IVMLDEMD",157,0)
 .; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",158,0)
 .S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMLDEMD",159,0)
 .Q:'(+IVMNODE)
"RTN","IVMLDEMD",160,0)
 .;   load Date of Death deletion rec'd from IVM into DHCP (#2) file
"RTN","IVMLDEMD",161,0)
 .I DODFIELD="ZPD09" I DFNDOD D UPLOAD(+DFN,.351,"@") S DODMPI=$$A31^MPIFA31B(+DFN),IVMFLAG=1
"RTN","IVMLDEMD",162,0)
 .; - remove entry from (#301.511) sub-file
"RTN","IVMLDEMD",163,0)
 .D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMLDEMD",164,0)
 ;
"RTN","IVMLDEMD",165,0)
 I IVMFLAG D UPLOAD(+DFN,.355,.5)
"RTN","IVMLDEMD",166,0)
 D CLEAN(IVMDA2)
"RTN","IVMLDEMD",167,0)
 Q
"RTN","IVMLDEMD",168,0)
DEM5 ;
"RTN","IVMLDEMD",169,0)
 I '$$DEMO^IVMLDEM5(IVMDA2,IVMDA1,0),'$$DEMO^IVMLDEM5(IVMDA2,IVMDA1,1) D
"RTN","IVMLDEMD",170,0)
 .D DELETE^IVMLDEM5(IVMDA2,IVMDA1," ") ; Dummy up name parameter
"RTN","IVMLDEMD",171,0)
 Q
"RTN","IVMLDEMD",172,0)
CKAUTO S (CKDEL,CKADD)=0
"RTN","IVMLDEMD",173,0)
 S IVMI=$O(^IVM(301.92,"C","ZPD09","")) I IVMI="" Q
"RTN","IVMLDEMD",174,0)
 S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,""))
"RTN","IVMLDEMD",175,0)
 I IVMJ']"" Q
"RTN","IVMLDEMD",176,0)
 ;
"RTN","IVMLDEMD",177,0)
 ; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",178,0)
 S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMLDEMD",179,0)
 Q:'(+IVMNODE)!($P(IVMNODE,"^",2)']"")
"RTN","IVMLDEMD",180,0)
 ;
"RTN","IVMLDEMD",181,0)
 I $P(IVMNODE,"^",2)="""""" S CKDEL=1 Q
"RTN","IVMLDEMD",182,0)
 I $P(IVMNODE,"^",2)=$P($G(^DPT(DFN,.35)),"^",1) S CKADD=1
"RTN","IVMLDEMD",183,0)
 Q
"RTN","IVMLDEMD",184,0)
CKDUZ ; Check to preserve DUZ for "Last Edited By"
"RTN","IVMLDEMD",185,0)
 S IVMI=$O(^IVM(301.92,"C","ZPD32","")) I IVMI="" Q
"RTN","IVMLDEMD",186,0)
 S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,""))
"RTN","IVMLDEMD",187,0)
 I IVMJ']"" Q
"RTN","IVMLDEMD",188,0)
 ;
"RTN","IVMLDEMD",189,0)
 ; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",190,0)
 S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMLDEMD",191,0)
 Q:'(+IVMNODE)!($P(IVMNODE,"^",2)']"")
"RTN","IVMLDEMD",192,0)
 ;
"RTN","IVMLDEMD",193,0)
 I $P(IVMNODE,"^",2)=$P($G(^DPT(DFN,.35)),"^",4) D
"RTN","IVMLDEMD",194,0)
 .S CKDUZ=$P($G(^DPT(DFN,.35)),"^",5)
"RTN","IVMLDEMD",195,0)
 Q
"RTN","IVMLDEMD",196,0)
UPLOAD(DFN,IVMFIELD,IVMVALUE) ; - file Date of Death fields received from IVM
"RTN","IVMLDEMD",197,0)
 ;  Input:       DFN  -  as patient IEN
"RTN","IVMLDEMD",198,0)
 ;          IVMFIELD  -  as the field number to be updated
"RTN","IVMLDEMD",199,0)
 ;          IVMVALUE  -  as the value of the field
"RTN","IVMLDEMD",200,0)
 ;
"RTN","IVMLDEMD",201,0)
 ; Output: None
"RTN","IVMLDEMD",202,0)
 ;
"RTN","IVMLDEMD",203,0)
 N DA,DIE,DR
"RTN","IVMLDEMD",204,0)
 S DIE="^DPT(",DA=DFN,DR=IVMFIELD_"////^S X=IVMVALUE"
"RTN","IVMLDEMD",205,0)
 D ^DIE
"RTN","IVMLDEMD",206,0)
 Q
"RTN","IVMLDEMD",207,0)
 ;
"RTN","IVMLDEMD",208,0)
DODQ ; - return  -->  1 if uploadable field is a Date of Death field
"RTN","IVMLDEMD",209,0)
 ;           -->  0 if nothing uploadable
"RTN","IVMLDEMD",210,0)
 ;
"RTN","IVMLDEMD",211,0)
 I IVMFLAG D RESET^IVMLDEMU
"RTN","IVMLDEMD",212,0)
 Q IVMFLAG
"RTN","IVMLDEMD",213,0)
 ;
"RTN","IVMLDEMD",214,0)
CLEAN(IVMI) ;
"RTN","IVMLDEMD",215,0)
 ; Remove any Date of Death related entries from IVM UPLOAD DEM
"RTN","IVMLDEMD",216,0)
 N IVMJ,IVMN,IVM92,OTHFLG
"RTN","IVMLDEMD",217,0)
 S IVMJ=0 F  S IVMJ=$O(^IVM(301.5,"ASEG","PID",IVMI,IVMJ)) Q:'IVMJ  D
"RTN","IVMLDEMD",218,0)
 .I '$D(^IVM(301.5,IVMI,"IN",IVMJ)) D REMASEG(IVMI,IVMJ) Q
"RTN","IVMLDEMD",219,0)
 .S (OTHFLG,IVMN)=0 F  S IVMN=$O(^IVM(301.5,IVMI,"IN",IVMJ,"DEM",IVMN)) Q:'IVMN  D
"RTN","IVMLDEMD",220,0)
 ..S IVM92=$P(^IVM(301.5,IVMI,"IN",IVMJ,"DEM",IVMN,0),U)
"RTN","IVMLDEMD",221,0)
 ..I "^15^36^37^"[(U_IVM92_U) D REM511(IVMI,IVMJ,IVMN)
"RTN","IVMLDEMD",222,0)
 ..I "^15^36^37^"'[(U_IVM92_U) S OTHFLG=1
"RTN","IVMLDEMD",223,0)
 .I 'OTHFLG D REM501(IVMI,IVMJ)
"RTN","IVMLDEMD",224,0)
 Q
"RTN","IVMLDEMD",225,0)
 ;
"RTN","IVMLDEMD",226,0)
REM501(IVMI,IVMJ) ;
"RTN","IVMLDEMD",227,0)
 ; Delete 301.501 entry to remove from ASEG x-ref
"RTN","IVMLDEMD",228,0)
 N DA,DIE,DR
"RTN","IVMLDEMD",229,0)
 S DA=IVMJ,DA(1)=IVMI
"RTN","IVMLDEMD",230,0)
 S DIE="^IVM(301.5,"_DA(1)_",""IN"","
"RTN","IVMLDEMD",231,0)
 S DR=".02////@" D ^DIE
"RTN","IVMLDEMD",232,0)
 Q
"RTN","IVMLDEMD",233,0)
 ;
"RTN","IVMLDEMD",234,0)
REM511(IVMI,IVMJ,IVMN) ;
"RTN","IVMLDEMD",235,0)
 ; Delete 301.511 entry to remove from IVM UPLOAD DEM
"RTN","IVMLDEMD",236,0)
 N DA,DIK
"RTN","IVMLDEMD",237,0)
 S DA(1)=IVMJ,DA(2)=IVMI,DA=IVMN
"RTN","IVMLDEMD",238,0)
 S DIK="^IVM(301.5,"_DA(2)_",""IN"","_DA(1)_",""DEM"","
"RTN","IVMLDEMD",239,0)
 D ^DIK
"RTN","IVMLDEMD",240,0)
 Q
"RTN","IVMLDEMD",241,0)
 ;
"RTN","IVMLDEMD",242,0)
REMASEG(IVMI,IVMJ) ;
"RTN","IVMLDEMD",243,0)
 ; Delete invalid ASEG x-ref entries
"RTN","IVMLDEMD",244,0)
 K ^IVM(301.5,"ASEG","PID",IVMI,IVMJ)
"RTN","IVMLDEMD",245,0)
 Q
"RTN","IVMLDEMD",246,0)
BULL(DFN) ; Date of Death Deletion Bulletin
"RTN","IVMLDEMD",247,0)
 I '$D(^DPT(DFN,0)) Q
"RTN","IVMLDEMD",248,0)
 I '(+$G(^DPT(DFN,.35))) Q
"RTN","IVMLDEMD",249,0)
 ;
"RTN","IVMLDEMD",250,0)
 N DGDEATH,DGB,DGPCMM,XMSUB,X
"RTN","IVMLDEMD",251,0)
 S DGDEATH=+$G(^DPT(DFN,.35)),XMSUB="Patient Death has been Deleted",DGCT=0
"RTN","IVMLDEMD",252,0)
 D ^DGPATV
"RTN","IVMLDEMD",253,0)
 D LINE^DGDEATH("The date of death for the following patient has been deleted.")
"RTN","IVMLDEMD",254,0)
 D LINE^DGDEATH("")
"RTN","IVMLDEMD",255,0)
 D DEMOG^DGDEATH
"RTN","IVMLDEMD",256,0)
 D LINE^DGDEATH("")
"RTN","IVMLDEMD",257,0)
 S DGPCMM=$$PCMMXMY^SCAPMC25(1,DFN,,,0) ;creates xmy array
"RTN","IVMLDEMD",258,0)
 S DGCT=$$PCMAIL^SCMCMM(DFN,"DGTEXT",DT)
"RTN","IVMLDEMD",259,0)
 S DGB=1 D ^DGBUL S X=DGDEATH
"RTN","IVMLDEMD",260,0)
 K DGCT,DGDEATH D KILL^DGPATV
"RTN","IVMLDEMD",261,0)
 ;
"RTN","IVMLDEMD",262,0)
 Q
"VER")
8.0^22.0
"^DD",301.7,301.7,0)
FIELD^^3.5^16
"^DD",301.7,301.7,0,"DDA")
N
"^DD",301.7,301.7,0,"DT")
3050610
"^DD",301.7,301.7,0,"IX","B",301.7,.01)

"^DD",301.7,301.7,0,"IX","C",301.7,1)

"^DD",301.7,301.7,0,"NM","IVM ADDRESS CHANGE LOG")

"^DD",301.7,301.7,.01,0)
ADDRESS CHANGE DT/TM^RDXI^^0;1^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",301.7,301.7,.01,1,0)
^.1
"^DD",301.7,301.7,.01,1,1,0)
301.7^B
"^DD",301.7,301.7,.01,1,1,1)
S ^IVM(301.7,"B",$E(X,1,30),DA)=""
"^DD",301.7,301.7,.01,1,1,2)
K ^IVM(301.7,"B",$E(X,1,30),DA)
"^DD",301.7,301.7,.01,3)
(No range limit on date)
"^DD",301.7,301.7,.01,21,0)
^.001^1^1^3050825^^
"^DD",301.7,301.7,.01,21,1,0)
This field will hold the date and time of the last Address Update.
"^DD",301.7,301.7,.01,"DT")
3050825
"^DD",301.7,301.7,1,0)
PATIENT^RP2'I^DPT(^0;2^Q
"^DD",301.7,301.7,1,1,0)
^.1
"^DD",301.7,301.7,1,1,1,0)
301.7^C
"^DD",301.7,301.7,1,1,1,1)
S ^IVM(301.7,"C",$E(X,1,30),DA)=""
"^DD",301.7,301.7,1,1,1,2)
K ^IVM(301.7,"C",$E(X,1,30),DA)
"^DD",301.7,301.7,1,1,1,"%D",0)
^^2^2^3050510^
"^DD",301.7,301.7,1,1,1,"%D",1,0)
This cross-reference can be used to sort by patient by internal entry
"^DD",301.7,301.7,1,1,1,"%D",2,0)
number.
"^DD",301.7,301.7,1,1,1,"DT")
3050510
"^DD",301.7,301.7,1,3)
Please enter the patient associated with this address update.
"^DD",301.7,301.7,1,21,0)
^^1^1^3050510^
"^DD",301.7,301.7,1,21,1,0)
This is the Patient associated with this address update.
"^DD",301.7,301.7,1,"DT")
3050825
"^DD",301.7,301.7,2,0)
ADDRESS CHANGE USER^P200'^VA(200,^0;3^Q
"^DD",301.7,301.7,2,21,0)
^^1^1^3050510^
"^DD",301.7,301.7,2,21,1,0)
The name of the user who has changed this patient's primary address.
"^DD",301.7,301.7,2,"DT")
3050510
"^DD",301.7,301.7,3,0)
ADDRESS CHANGE SOURCE^S^HEC:HEC;VAMC:VAMC;HBSC:HBSC;NCOA:NCOA;BVA:BVA;VAIN:VAINS;USPS:USPS;^0;4^Q
"^DD",301.7,301.7,3,3)
Please enter the source of the address change.
"^DD",301.7,301.7,3,21,0)
^^1^1^3050510^
"^DD",301.7,301.7,3,21,1,0)
This field will hold the source of the last address change.
"^DD",301.7,301.7,3,"DT")
3050510
"^DD",301.7,301.7,3.5,0)
ADDRESS CHANGE SITE^P4'^DIC(4,^0;5^Q
"^DD",301.7,301.7,3.5,"DT")
3050610
"^DD",301.7,301.7,4,0)
PRIOR ADDRESS CHANGE DT/TM^DX^^1;1^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",301.7,301.7,4,3)
(No range limit on date)
"^DD",301.7,301.7,4,21,0)
^^1^1^3050510^
"^DD",301.7,301.7,4,21,1,0)
This field will hold the date and time of the prior address update.
"^DD",301.7,301.7,4,"DT")
3050510
"^DD",301.7,301.7,5,0)
PRIOR ADDRESS CHANGE USER^P200'^VA(200,^1;2^Q
"^DD",301.7,301.7,5,21,0)
^^1^1^3050510^
"^DD",301.7,301.7,5,21,1,0)
The name of the prior user who changed this patient's primary address.
"^DD",301.7,301.7,5,"DT")
3050510
"^DD",301.7,301.7,6,0)
PRIOR ADDRESS CHANGE SITE^P4'^DIC(4,^1;3^Q
"^DD",301.7,301.7,6,3)
Please enter the prior Site that changed this patient's address.
"^DD",301.7,301.7,6,21,0)
^^3^3^3050510^
"^DD",301.7,301.7,6,21,1,0)
This field will hold the prior Site that changed this patient's address.
"^DD",301.7,301.7,6,21,2,0)
This field is only populated when the PRIOR ADDRESS SOURCE is listed as
"^DD",301.7,301.7,6,21,3,0)
VAMC.
"^DD",301.7,301.7,6,"DT")
3050510
"^DD",301.7,301.7,7,0)
PRIOR ADDRESS CHANGE SOURCE^S^HEC:HEC;VAMC:VAMC;HBSC:HBSC;NCOA:NCOA;BVA:BVA;VAIN:VAINS;USPS:USPS;^1;4^Q
"^DD",301.7,301.7,7,3)
Please enter the source of the prior address change.
"^DD",301.7,301.7,7,21,0)
^^1^1^3050510^
"^DD",301.7,301.7,7,21,1,0)
This field will hold the source of the prior address change.
"^DD",301.7,301.7,7,"DT")
3050510
"^DD",301.7,301.7,8,0)
PRIOR PHONE NUMBER [RESIDENCE]^F^^1;5^K:$L(X)>20!($L(X)<4) X
"^DD",301.7,301.7,8,3)
Enter the patients prior home telephone number [4-20 characters].
"^DD",301.7,301.7,8,21,0)
^^2^2^3050510^
"^DD",301.7,301.7,8,21,1,0)
Enter the telephone number [4-20 characters] to this patient's prior
"^DD",301.7,301.7,8,21,2,0)
place of residence.
"^DD",301.7,301.7,8,"DT")
3050510
"^DD",301.7,301.7,9,0)
PRIOR STREET ADDRESS [LINE 1]^FX^^1;6^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>35!($L(X)<3) X
"^DD",301.7,301.7,9,3)
Enter the first line of this patient's prior residence street address [3-35 characters].
"^DD",301.7,301.7,9,21,0)
^^2^2^3050510^
"^DD",301.7,301.7,9,21,1,0)
This is the first line of this patient's prior residence street address
"^DD",301.7,301.7,9,21,2,0)
[3-35 characters].
"^DD",301.7,301.7,9,"DT")
3050510
"^DD",301.7,301.7,10,0)
PRIOR STREET ADDRESS [LINE 2]^FX^^1;7^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<3) X D:$D(X) UP^DGHELP
"^DD",301.7,301.7,10,3)
If necessary, enter the second line of this patient's street address [3-30 characters].
"^DD",301.7,301.7,10,21,0)
^^3^3^3050510^
"^DD",301.7,301.7,10,21,1,0)
Enter the second line of this patient's prior residence street address
"^DD",301.7,301.7,10,21,2,0)
[3-30 characters]  if the space provided in 'street address' was not 
"^DD",301.7,301.7,10,21,3,0)
sufficient.
"^DD",301.7,301.7,10,"DT")
3050510
"^DD",301.7,301.7,11,0)
PRIOR CITY^F^^1;8^K:$L(X)>15!($L(X)<2) X
"^DD",301.7,301.7,11,3)
Answer must be 2-15 characters in length
"^DD",301.7,301.7,11,21,0)
^^3^3^3050510^
"^DD",301.7,301.7,11,21,1,0)
Enter the prior city in which this patient resided [2-15 characters].
"^DD",301.7,301.7,11,21,2,0)
If the space provided is not sufficient please abbreviate the city to 
"^DD",301.7,301.7,11,21,3,0)
the best of your ability.
"^DD",301.7,301.7,11,"DT")
3050510
"^DD",301.7,301.7,12,0)
PRIOR COUNTY^FX^^1;9^K:$L(X)>30!($L(X)<3)!'(X'?1P.E)!(X'?.ANP) X
"^DD",301.7,301.7,12,3)
Please enter the prior county that for this patient's address [3 - 30 characters].
"^DD",301.7,301.7,12,21,0)
^^1^1^3050516^
"^DD",301.7,301.7,12,21,1,0)
This is the prior county in which this patient resided [3-30 characters].
"^DD",301.7,301.7,12,"DT")
3050516
"^DD",301.7,301.7,13,0)
PRIOR STATE^P5'^DIC(5,^1;10^Q
"^DD",301.7,301.7,13,3)
Select from the available listing the state for this patient's prior residence.
"^DD",301.7,301.7,13,21,0)
^^2^2^3050510^
"^DD",301.7,301.7,13,21,1,0)
Select from the available listing the prior state in which this patient
"^DD",301.7,301.7,13,21,2,0)
resided.
"^DD",301.7,301.7,13,"DT")
3050510
"^DD",301.7,301.7,14,0)
PRIOR ZIP+4^FX^^1;11^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>20!($L(X)<5) X I $D(X) D ZIPIN^VAFADDR
"^DD",301.7,301.7,14,3)
Answer with either 5 digit or 9 digit prior zip code.
"^DD",301.7,301.7,14,21,0)
^^2^2^3050510^
"^DD",301.7,301.7,14,21,1,0)
Answer with either the 5 digit format (e.g. 12345) or the nine digit
"^DD",301.7,301.7,14,21,2,0)
format (e.g. 12345-6789 or 123456789) for the prior zip code.
"^DD",301.7,301.7,14,"DT")
3050510
"^DIC",301.7,301.7,0)
IVM ADDRESS CHANGE LOG^301.7
"^DIC",301.7,301.7,0,"GL")
^IVM(301.7,
"^DIC",301.7,301.7,"%",0)
^1.005^^
"^DIC",301.7,301.7,"%D",0)
^^12^12^3050825^
"^DIC",301.7,301.7,"%D",1,0)
The IVM ADDRESS CHANGE LOG file contains the patient's prior address
"^DIC",301.7,301.7,"%D",2,0)
information when the address has been updated.
"^DIC",301.7,301.7,"%D",3,0)
 
"^DIC",301.7,301.7,"%D",4,0)
A record will be created when the address is updated from either the
"^DIC",301.7,301.7,"%D",5,0)
upload of an ORU~Z05 Demographic (Address) HL7 Transmission or from manual
"^DIC",301.7,301.7,"%D",6,0)
data entry using any of the following options:  DG ADDRESS UPDATE,
"^DIC",301.7,301.7,"%D",7,0)
DG REGISTER PATIENT, DGPRE PRE-REGISTER OPTION, and DG LOAD PATIENT DATA.
"^DIC",301.7,301.7,"%D",8,0)
 
"^DIC",301.7,301.7,"%D",9,0)
The previous address information found in the PATIENT File #2 will be
"^DIC",301.7,301.7,"%D",10,0)
stored along with the Date/Time the address was changed, the Source of the
"^DIC",301.7,301.7,"%D",11,0)
change, and User ID of the person who made the change.  In the case of an
"^DIC",301.7,301.7,"%D",12,0)
update via an ORU~Z05, the User ID will be POSTMASTER.
"^DIC",301.7,"B","IVM ADDRESS CHANGE LOG",301.7)

**INSTALL NAME**
DG*5.3*658
"BLD",5732,0)
DG*5.3*658^REGISTRATION^0^3051026^y
"BLD",5732,4,0)
^9.64PA^2^1
"BLD",5732,4,2,0)
2
"BLD",5732,4,2,2,0)
^9.641^2^1
"BLD",5732,4,2,2,2,0)
PATIENT  (File-top level)
"BLD",5732,4,2,2,2,1,0)
^9.6411^.119^1
"BLD",5732,4,2,2,2,1,.119,0)
ADDRESS CHANGE SOURCE
"BLD",5732,4,2,222)
y^n^p^^^^n^^n
"BLD",5732,4,2,224)

"BLD",5732,4,"APDD",2,2)

"BLD",5732,4,"APDD",2,2,.119)

"BLD",5732,4,"B",2,2)

"BLD",5732,"INI")
PREINST^DG53658
"BLD",5732,"INID")
n^n^n
"BLD",5732,"INIT")
START^DG53658
"BLD",5732,"KRN",0)
^9.67PA^8989.52^19
"BLD",5732,"KRN",.4,0)
.4
"BLD",5732,"KRN",.401,0)
.401
"BLD",5732,"KRN",.402,0)
.402
"BLD",5732,"KRN",.403,0)
.403
"BLD",5732,"KRN",.5,0)
.5
"BLD",5732,"KRN",.84,0)
.84
"BLD",5732,"KRN",3.6,0)
3.6
"BLD",5732,"KRN",3.8,0)
3.8
"BLD",5732,"KRN",9.2,0)
9.2
"BLD",5732,"KRN",9.8,0)
9.8
"BLD",5732,"KRN",9.8,"NM",0)
^9.68A^7^6
"BLD",5732,"KRN",9.8,"NM",1,0)
DGREG^^0^B47199763
"BLD",5732,"KRN",9.8,"NM",2,0)
DG10^^0^B18522762
"BLD",5732,"KRN",9.8,"NM",3,0)
DGMTU4^^0^B68178462
"BLD",5732,"KRN",9.8,"NM",5,0)
DGADDUTL^^0^B43681615
"BLD",5732,"KRN",9.8,"NM",6,0)
DG53658^^0^B49267019
"BLD",5732,"KRN",9.8,"NM",7,0)
DGREGAED^^0^B17895648
"BLD",5732,"KRN",9.8,"NM","B","DG10",2)

"BLD",5732,"KRN",9.8,"NM","B","DG53658",6)

"BLD",5732,"KRN",9.8,"NM","B","DGADDUTL",5)

"BLD",5732,"KRN",9.8,"NM","B","DGMTU4",3)

"BLD",5732,"KRN",9.8,"NM","B","DGREG",1)

"BLD",5732,"KRN",9.8,"NM","B","DGREGAED",7)

"BLD",5732,"KRN",19,0)
19
"BLD",5732,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",5732,"KRN",19,"NM",1,0)
DG ADDRESS UPDATE^^0
"BLD",5732,"KRN",19,"NM","B","DG ADDRESS UPDATE",1)

"BLD",5732,"KRN",19.1,0)
19.1
"BLD",5732,"KRN",101,0)
101
"BLD",5732,"KRN",409.61,0)
409.61
"BLD",5732,"KRN",771,0)
771
"BLD",5732,"KRN",870,0)
870
"BLD",5732,"KRN",8989.51,0)
8989.51
"BLD",5732,"KRN",8989.52,0)
8989.52
"BLD",5732,"KRN",8994,0)
8994
"BLD",5732,"KRN","B",.4,.4)

"BLD",5732,"KRN","B",.401,.401)

"BLD",5732,"KRN","B",.402,.402)

"BLD",5732,"KRN","B",.403,.403)

"BLD",5732,"KRN","B",.5,.5)

"BLD",5732,"KRN","B",.84,.84)

"BLD",5732,"KRN","B",3.6,3.6)

"BLD",5732,"KRN","B",3.8,3.8)

"BLD",5732,"KRN","B",9.2,9.2)

"BLD",5732,"KRN","B",9.8,9.8)

"BLD",5732,"KRN","B",19,19)

"BLD",5732,"KRN","B",19.1,19.1)

"BLD",5732,"KRN","B",101,101)

"BLD",5732,"KRN","B",409.61,409.61)

"BLD",5732,"KRN","B",771,771)

"BLD",5732,"KRN","B",870,870)

"BLD",5732,"KRN","B",8989.51,8989.51)

"BLD",5732,"KRN","B",8989.52,8989.52)

"BLD",5732,"KRN","B",8994,8994)

"BLD",5732,"QUES",0)
^9.62^^
"BLD",5732,"REQB",0)
^9.611^2^2
"BLD",5732,"REQB",1,0)
DG*5.3*624^2
"BLD",5732,"REQB",2,0)
DG*5.3*560^2
"BLD",5732,"REQB","B","DG*5.3*560",2)

"BLD",5732,"REQB","B","DG*5.3*624",1)

"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^n^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
5.3^DG
"FIA",2,2)
1
"FIA",2,2,.119)

"INI")
PREINST^DG53658
"INIT")
START^DG53658
"KRN",19,12405,-1)
0^1
"KRN",19,12405,0)
DG ADDRESS UPDATE^Patient Address Update^^R^^^^^^^^REGISTRATION
"KRN",19,12405,1,0)
^^4^4^3050922^
"KRN",19,12405,1,1,0)
This option enables the user to update a veteran's (P) permanent address,
"KRN",19,12405,1,2,0)
(T) temporary address, or (B) both.  If the user chooses (P) or (B), a
"KRN",19,12405,1,3,0)
record will be added to the IVM ADDRESS CHANGE LOG #301.7 File capturing
"KRN",19,12405,1,4,0)
the prior permanent address information.
"KRN",19,12405,25)
ADDR^DGADDUTL
"KRN",19,12405,"U")
PATIENT ADDRESS UPDATE
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
658^3051026
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","DG10")
0^2^B18522762
"RTN","DG10",1,0)
DG10 ;ALB/MRL,DAK,AEG,PHH-LOAD/EDIT PATIENT DATA ; 8/24/05 1:47pm
"RTN","DG10",2,0)
 ;;5.3;Registration;**32,109,139,149,182,326,513,425,574,642,658**;Aug 13, 1993
"RTN","DG10",3,0)
START ;
"RTN","DG10",4,0)
 D LO^DGUTL
"RTN","DG10",5,0)
 I $G(DGPRFLG)=1,$G(DGPLOC)=1 D  G Q:$G(DGRPOUT),A1
"RTN","DG10",6,0)
 .; D EN^DGRPD,REG^IVMCQ($G(DFN))
"RTN","DG10",7,0)
 . D EN^DGRPD
"RTN","DG10",8,0)
 . Q:$G(DGRPOUT)
"RTN","DG10",9,0)
 . D REG^IVMCQ($G(DFN))
"RTN","DG10",10,0)
 . D HINQ
"RTN","DG10",11,0)
 ;
"RTN","DG10",12,0)
A W !! K VET,DIE,DIC,CARD S DIC=2,DLAYGO=2,DIC(0)="ALEQM" K DIC("S") D ^DIC G Q:Y<0 S (DFN,DA)=+Y,DGNEW=$P(Y,"^",3) K DLAYGO
"RTN","DG10",13,0)
 N Y D PAUSE I DGNEW D NEW^DGRP S DA=DFN,VET=$S($D(^DPT(DFN,"VET")):^("VET")'="Y",1:0)
"RTN","DG10",14,0)
 ;
"RTN","DG10",15,0)
 ;MPI QUERY
"RTN","DG10",16,0)
 ;check to see if CIRN PD/MPI is installed
"RTN","DG10",17,0)
 N X S X="MPIFAPI" X ^%ZOSF("TEST") G:'$T SKIP
"RTN","DG10",18,0)
 K MPIFRTN
"RTN","DG10",19,0)
 D MPIQ^MPIFAPI(DFN)
"RTN","DG10",20,0)
 K MPIFRTN
"RTN","DG10",21,0)
 ;
"RTN","DG10",22,0)
 I +$G(DGNEW) D
"RTN","DG10",23,0)
 . ; query CMOR for Patient Record Flag Assignments if NEW patient and
"RTN","DG10",24,0)
 . ; display results
"RTN","DG10",25,0)
 . I $$PRFQRY^DGPFAPI(DFN) D DISPPRF^DGPFAPI(DFN)
"RTN","DG10",26,0)
 ;
"RTN","DG10",27,0)
SKIP ;
"RTN","DG10",28,0)
 S DGELVER=0 D EN^DGRPD I $D(DGRPOUT) K DGRPOUT G A
"RTN","DG10",29,0)
 D HINQ,REG^IVMCQ($G(DFN)) G A1
"RTN","DG10",30,0)
 ;
"RTN","DG10",31,0)
HINQ ;
"RTN","DG10",32,0)
 S Y=$S($D(^DG(43,1,0)):^(0),1:0) I $P(Y,U,27) S X="DVBHQZ4" X ^%ZOSF("TEST") I $T D
"RTN","DG10",33,0)
 .N DGROUT
"RTN","DG10",34,0)
 .S DGROUT=X
"RTN","DG10",35,0)
 .I $G(DFN) D
"RTN","DG10",36,0)
 ..N X,Y,DGRP
"RTN","DG10",37,0)
 ..F X=.3,.32 S DGRP(X)=$G(^DPT(DFN,X))
"RTN","DG10",38,0)
 ..W !,"     Money Verified: " S Y=$P(DGRP(.3),"^",6) X:Y]"" ^DD("DD") W $S(Y]"":Y,1:"NOT VERIFIED")
"RTN","DG10",39,0)
 ..W ?40,"   Service Verified: " S Y=$P(DGRP(.32),"^",2) X:Y]"" ^DD("DD") W $S(Y]"":Y,1:"NOT VERIFIED")
"RTN","DG10",40,0)
 .D @("EN^"_DGROUT) K Y Q  ;from dgdem0
"RTN","DG10",41,0)
 Q
"RTN","DG10",42,0)
 ;
"RTN","DG10",43,0)
 ;   SDIEMM is used as a flag by AMBCARE Incomplete Encounter Management 
"RTN","DG10",44,0)
 ;   to bypass the embossing routines when calling load/edit from IEMM
"RTN","DG10",45,0)
 ;
"RTN","DG10",46,0)
A1 D  G H:'%,CK:%'=1 S DGRPV=0 D EN1^DGRP,MT(DFN),CP G Q:$G(DGPRFLG)=1 G Q:$G(SDIEMM) G Q:'$D(DA),EMBOS
"RTN","DG10",47,0)
 .W !,"Do you want to ",$S(DGNEW:"enter",1:"edit")," Patient Data"
"RTN","DG10",48,0)
 .S %=1 D YN^DICN
"RTN","DG10",49,0)
 .I +$G(DGNEW) Q
"RTN","DG10",50,0)
 .I $$ADD^DGADDUTL($G(DFN)) ;
"RTN","DG10",51,0)
 ;
"RTN","DG10",52,0)
H W !?5,"Enter 'YES' to enter/edit registration data or 'NO' to continue without",!?5,"editing."
"RTN","DG10",53,0)
 G A1
"RTN","DG10",54,0)
 ;
"RTN","DG10",55,0)
CK S DGEDCN=1 D ^DGRPC,MT(DFN),CP
"RTN","DG10",56,0)
 G Q:$G(DGPRFLG)=1 G Q:$G(SDIEMM)
"RTN","DG10",57,0)
 I $G(DGER)[55 K DIR S DIR(0)="Y",DIR("A")="Do you wish to return to Screen #9 to enter missing Income Data? " D ^DIR K DIR
"RTN","DG10",58,0)
 ;G:Y ^DGRP9
"RTN","DG10",59,0)
 ;
"RTN","DG10",60,0)
EMBOS ;W ! D EMBOS^DGQEMA G A
"RTN","DG10",61,0)
 G A
"RTN","DG10",62,0)
 ;
"RTN","DG10",63,0)
 ;
"RTN","DG10",64,0)
Q K X,Y,Z,DIC,DGELVER,DGNEW,DGRPV,VET Q
"RTN","DG10",65,0)
 ;
"RTN","DG10",66,0)
MT(DFN) ; Check if user requires a means test.  Ask user if they want to proceedif
"RTN","DG10",67,0)
 ; one is required
"RTN","DG10",68,0)
 I '$D(SDIEMM) DO
"RTN","DG10",69,0)
 .N DGREQF,DIV
"RTN","DG10",70,0)
 .D EN^DGMTR
"RTN","DG10",71,0)
 .I DGREQF D EDT^DGMTU(DFN,DT):$P($$MTS^DGMTU(DFN),U,2)="R"
"RTN","DG10",72,0)
 .Q
"RTN","DG10",73,0)
 I $D(SDIEMM) DO
"RTN","DG10",74,0)
 .N DGMTI
"RTN","DG10",75,0)
 .S DGMTI=$$LST^DGMTU(DFN,SCINF("ENCOUNTER"),1)
"RTN","DG10",76,0)
 .I $P(DGMTI,U,4)="R" D  I 1
"RTN","DG10",77,0)
 ..S DGMT0=$G(^DGMT(408.31,+DGMTI,0)),DGMTDT=$P(DGMT0,"^")
"RTN","DG10",78,0)
 ..I '$$OKTOCONT(DGMTDT) Q
"RTN","DG10",79,0)
 ..S DGMTI=+DGMTI,DGMTYPT=1,DGMTACT="COM",DGMTROU="COM^DGMTEO" D EN^DGMTSC
"RTN","DG10",80,0)
 .E  D WARNING
"RTN","DG10",81,0)
 .Q
"RTN","DG10",82,0)
 Q
"RTN","DG10",83,0)
 ;
"RTN","DG10",84,0)
WARNING ;
"RTN","DG10",85,0)
 ;prints a warning to the screen about means test
"RTN","DG10",86,0)
 ;
"RTN","DG10",87,0)
 W !!,"A means test for this encounter date was not found and may be required!"
"RTN","DG10",88,0)
 W !,"Further investigation will be needed."
"RTN","DG10",89,0)
 W !
"RTN","DG10",90,0)
 D PAUSE
"RTN","DG10",91,0)
 Q
"RTN","DG10",92,0)
 ;
"RTN","DG10",93,0)
PAUSE ;
"RTN","DG10",94,0)
 N DIR
"RTN","DG10",95,0)
 S DIR(0)="FAO",DIR("A")="Press ENTER to continue " D ^DIR
"RTN","DG10",96,0)
 Q
"RTN","DG10",97,0)
 ;
"RTN","DG10",98,0)
OKTOCONT(Y) ;
"RTN","DG10",99,0)
 ;
"RTN","DG10",100,0)
 N DIR
"RTN","DG10",101,0)
 W !!,"Patient Requires a means Test"
"RTN","DG10",102,0)
 X ^DD("DD")
"RTN","DG10",103,0)
 W !,"Primary Means Test Required from '",Y,"'",!
"RTN","DG10",104,0)
 ;
"RTN","DG10",105,0)
 I $D(SDIEMM),'$D(^XUSEC("SCENI MEANS TEST EDIT",DUZ)) DO  G OKQ
"RTN","DG10",106,0)
 .W !,$C(7),"You do not have the appropriate IEMM Security Key.  Contact your supervisor.",!
"RTN","DG10",107,0)
 .D PAUSE
"RTN","DG10",108,0)
 .S Y=0
"RTN","DG10",109,0)
 ;
"RTN","DG10",110,0)
 S DIR("A")="Do you wish to proceed with the means test at this time"
"RTN","DG10",111,0)
 S DIR("B")="YES"
"RTN","DG10",112,0)
 S DIR(0)="Y"
"RTN","DG10",113,0)
 D ^DIR
"RTN","DG10",114,0)
OKQ Q $S(Y=1:1,1:0)
"RTN","DG10",115,0)
 ;
"RTN","DG10",116,0)
CP ;If not (autoexempt or MTested) & no CP test this year then
"RTN","DG10",117,0)
 ;prompt for add/edit cp test
"RTN","DG10",118,0)
 N DIV,DGIB,DGIBDT,DGX,X,DIRUT,DTOUT
"RTN","DG10",119,0)
 G:'$P($G(^DG(43,1,0)),U,41) QTCP ;USE CP FLAG
"RTN","DG10",120,0)
 S DGIBDT=$S($D(DFN1):9999999-DFN1,1:DT)
"RTN","DG10",121,0)
 D EN^DGMTCOR
"RTN","DG10",122,0)
 I +$G(DGNOCOPF) S DGMTCOR=0
"RTN","DG10",123,0)
 I DGMTCOR D THRESH^DGMTCOU1(DGIBDT) D EDT^DGMTCOU(DFN,DT)
"RTN","DG10",124,0)
 K DGNOCOPF
"RTN","DG10",125,0)
QTCP Q
"RTN","DG53658")
0^6^B49267019
"RTN","DG53658",1,0)
DG53658 ;ALB/PHH - DG*5.3*658 ADDRESS CHANGE DT/TM Cleanup ; 9/19/2005
"RTN","DG53658",2,0)
 ;;5.3;Registration;**658**;Aug 13, 1993
"RTN","DG53658",3,0)
 Q
"RTN","DG53658",4,0)
PREINST ; Pre-Install process to delete the old X-Ref trigger in
"RTN","DG53658",5,0)
 ; PATIENT file #2 for ADDRESS CHANGE SOURCE field #.119 
"RTN","DG53658",6,0)
 N DGFILE,DGFIELD,DGTRGNUM,DGUPDOUT
"RTN","DG53658",7,0)
 S DGFILE=2,DGFIELD=.119,DGTRGNUM=1
"RTN","DG53658",8,0)
 D DELIX^DDMOD(DGFILE,DGFIELD,DGTRGNUM,"K","DGUPDOUT")
"RTN","DG53658",9,0)
 Q
"RTN","DG53658",10,0)
RESET ; Reset the data for the cleanup process
"RTN","DG53658",11,0)
 K ^XTMP($$NAMESPC)
"RTN","DG53658",12,0)
 Q
"RTN","DG53658",13,0)
TEST ; Simulate Live Run
"RTN","DG53658",14,0)
 N MODE
"RTN","DG53658",15,0)
 S MODE=0
"RTN","DG53658",16,0)
START ; Start Processor
"RTN","DG53658",17,0)
 N NAMESPC,QTIME
"RTN","DG53658",18,0)
 S NAMESPC=$$NAMESPC
"RTN","DG53658",19,0)
 Q:$$RUNCHK(NAMESPC)   ; Quit if already running or has run to completion
"RTN","DG53658",20,0)
 Q:$$QTIME(.QTIME)
"RTN","DG53658",21,0)
 S:$D(^XTMP(NAMESPC,"CONFIG","RUN MODE")) MODE=^XTMP(NAMESPC,"CONFIG","RUN MODE")
"RTN","DG53658",22,0)
 S:'$D(^XTMP(NAMESPC,"CONFIG","RUN MODE")) ^XTMP(NAMESPC,"CONFIG","RUN MODE")=$S($G(MODE)=0:0,1:1)
"RTN","DG53658",23,0)
 S ^XTMP(NAMESPC,"CONFIG","USER")=$S($G(DUZ)'="":DUZ,1:"UNKNOWN")
"RTN","DG53658",24,0)
 S:'$$QUEUE(QTIME) ^XTMP(NAMESPC,"CONFIG","RUNNING")=""
"RTN","DG53658",25,0)
 Q
"RTN","DG53658",26,0)
NAMESPC() ; API returns the name space for this patch
"RTN","DG53658",27,0)
 Q "DG658"
"RTN","DG53658",28,0)
RUNCHK(NAMESPC) ; Check to see if clean up is already running
"RTN","DG53658",29,0)
 Q:NAMESPC="" 1                   ; Name Space must be defined
"RTN","DG53658",30,0)
 Q:$D(^XTMP(NAMESPC,"CONFIG","RUNNING")) 1
"RTN","DG53658",31,0)
 Q:$D(^XTMP(NAMESPC,"CONFIG","COMPLETE")) 1
"RTN","DG53658",32,0)
 Q 0
"RTN","DG53658",33,0)
QTIME(WHEN) ; Get the run time for queuing
"RTN","DG53658",34,0)
 N %,%H,%I,X
"RTN","DG53658",35,0)
 D NOW^%DTC
"RTN","DG53658",36,0)
 S WHEN=$P(%,".")_"."_$E($P(%,".",2),1,4)
"RTN","DG53658",37,0)
 Q 0
"RTN","DG53658",38,0)
QUEUE(ZTDTH) ; Queue the process
"RTN","DG53658",39,0)
 N NAMESPC,QUEERR,ZTDESC,ZTRTN,ZTSK,ZTIO
"RTN","DG53658",40,0)
 S NAMESPC=$$NAMESPC
"RTN","DG53658",41,0)
 S QUEERR=0
"RTN","DG53658",42,0)
 S ZTRTN="CLEAN^DG53"_$P(NAMESPC,"DG",2)
"RTN","DG53658",43,0)
 S ZTDESC=NAMESPC_" - Address Cleanup Process"
"RTN","DG53658",44,0)
 S ZTIO=""
"RTN","DG53658",45,0)
 D ^%ZTLOAD
"RTN","DG53658",46,0)
 K ^XTMP(NAMESPC,"CONFIG","ZTSK")
"RTN","DG53658",47,0)
 I '$D(ZTSK) S ^XTMP(NAMESPC,"CONFIG","ZTSK")="Unable to queue post-install process.",QUEERR=1
"RTN","DG53658",48,0)
 I $D(ZTSK) S ^XTMP(NAMESPC,"CONFIG","ZTSK")="Post-install queued. Task ID: "_$G(ZTSK)
"RTN","DG53658",49,0)
 D HOME^%ZIS
"RTN","DG53658",50,0)
 Q QUEERR
"RTN","DG53658",51,0)
CLEAN ; Actual cleanup process
"RTN","DG53658",52,0)
 N NAMESPC,MODE,USER,TASKID,%,%H,%I,X,X1,X2,CHKCNT,ZTSTOP,TMSWT,TOTDPT,DFN
"RTN","DG53658",53,0)
 S NAMESPC=$$NAMESPC
"RTN","DG53658",54,0)
 K ^XTMP(NAMESPC,"CONFIG","ABORT TIME")
"RTN","DG53658",55,0)
 S MODE=$G(^XTMP(NAMESPC,"CONFIG","RUN MODE"),0)
"RTN","DG53658",56,0)
 S USER=$G(^XTMP(NAMESPC,"CONFIG","USER"),"UNKNOWN")
"RTN","DG53658",57,0)
 S TASKID=$G(^XTMP(NAMESPC,"CONFIG","ZTSK"),"UNKNOWN")
"RTN","DG53658",58,0)
 ;
"RTN","DG53658",59,0)
 I '$D(^XTMP(NAMESPC,0)) D
"RTN","DG53658",60,0)
 .K ^XTMP(NAMESPC)
"RTN","DG53658",61,0)
 .S ^XTMP(NAMESPC,"CONFIG","DFN")=0
"RTN","DG53658",62,0)
 .S ^XTMP(NAMESPC,"CONFIG","TOTPR")=0
"RTN","DG53658",63,0)
 .S ^XTMP(NAMESPC,"CONFIG","PERCENT COMPLETE")=0
"RTN","DG53658",64,0)
 .S ^XTMP(NAMESPC,"CONFIG","RUN MODE")=MODE
"RTN","DG53658",65,0)
 .S ^XTMP(NAMESPC,"CONFIG","USER")=USER
"RTN","DG53658",66,0)
 .S ^XTMP(NAMESPC,"CONFIG","ZTSK")=TASKID
"RTN","DG53658",67,0)
 .D NOW^%DTC
"RTN","DG53658",68,0)
 .S ^XTMP(NAMESPC,"CONFIG","START TIME")=%
"RTN","DG53658",69,0)
 .S X1=$$DT^XLFDT,X2=90
"RTN","DG53658",70,0)
 .D C^%DTC
"RTN","DG53658",71,0)
 .S ^XTMP(NAMESPC,0)=X_U_$$DT^XLFDT_U_NAMESPC_" - ADDRESS CLEANUP"
"RTN","DG53658",72,0)
 ;
"RTN","DG53658",73,0)
 S CHKCNT=250,(ZTSTOP,TMSWT)=0,TOTDPT=+$P($G(^DPT(0)),"^",4)
"RTN","DG53658",74,0)
 S DFN=$G(^XTMP(NAMESPC,"CONFIG","DFN"))
"RTN","DG53658",75,0)
 F  S DFN=$O(^DPT(DFN)) Q:'DFN!(TMSWT)  D
"RTN","DG53658",76,0)
 .D PROC(DFN)
"RTN","DG53658",77,0)
 .S ^XTMP(NAMESPC,"CONFIG","TOTPR")=$G(^XTMP(NAMESPC,"CONFIG","TOTPR"))+1
"RTN","DG53658",78,0)
 .S ^XTMP(NAMESPC,"CONFIG","DFN")=DFN
"RTN","DG53658",79,0)
 .I TOTDPT D
"RTN","DG53658",80,0)
 ..S ^XTMP(NAMESPC,"CONFIG","PERCENT COMPLETE")=+$G(^XTMP(NAMESPC,"CONFIG","TOTPR"))/TOTDPT
"RTN","DG53658",81,0)
 ..S ^XTMP(NAMESPC,"CONFIG","PERCENT COMPLETE")=+$P((^XTMP(NAMESPC,"CONFIG","PERCENT COMPLETE")*100),".")
"RTN","DG53658",82,0)
 .I +$G(^XTMP(NAMESPC,"CONFIG","TOTPR"))#CHKCNT=0 D
"RTN","DG53658",83,0)
 ..S TMSWT=$$STOPIT()
"RTN","DG53658",84,0)
 ..I TMSWT D
"RTN","DG53658",85,0)
 ...S ZTSTOP=1
"RTN","DG53658",86,0)
 ...N %,%H,%I,X
"RTN","DG53658",87,0)
 ...D NOW^%DTC
"RTN","DG53658",88,0)
 ...S ^XTMP(NAMESPC,"CONFIG","ABORT TIME")=%
"RTN","DG53658",89,0)
 ...D ABORTMSG
"RTN","DG53658",90,0)
 ;
"RTN","DG53658",91,0)
 I 'DFN,'TMSWT D
"RTN","DG53658",92,0)
 .N %,%H,%I,X
"RTN","DG53658",93,0)
 .D NOW^%DTC
"RTN","DG53658",94,0)
 .S ^XTMP(NAMESPC,"CONFIG","COMPLETE")=%
"RTN","DG53658",95,0)
 .S ^XTMP(NAMESPC,"CONFIG","PERCENT COMPLETE")=100
"RTN","DG53658",96,0)
 .D DONEMSG
"RTN","DG53658",97,0)
 ;
"RTN","DG53658",98,0)
 K ^XTMP(NAMESPC,"CONFIG","RUNNING")
"RTN","DG53658",99,0)
 Q
"RTN","DG53658",100,0)
PROC(DFN) ; Process the DFN
"RTN","DG53658",101,0)
 N NAMESPC,ADDRDTTM,RXFILLDT,DIE,DA,DR
"RTN","DG53658",102,0)
 S NAMESPC=$$NAMESPC
"RTN","DG53658",103,0)
 S ADDRDTTM=$P($G(^DPT(DFN,.11)),"^",13)
"RTN","DG53658",104,0)
 S RXFILLDT=$O(^PSRX("ACP",DFN,""),-1)
"RTN","DG53658",105,0)
 ;
"RTN","DG53658",106,0)
 ; If the ADDRESS CHANGE DT/TM field #.118 is null, set it to
"RTN","DG53658",107,0)
 ; ISSUE DATE field #1 in the PRESCRIPTION file #52.  Also update
"RTN","DG53658",108,0)
 ; it, if it is older than the ISSUE DATE.
"RTN","DG53658",109,0)
 I ADDRDTTM=""!(ADDRDTTM<RXFILLDT) D
"RTN","DG53658",110,0)
 .S ^XTMP(NAMESPC,"DATA",DFN)=ADDRDTTM
"RTN","DG53658",111,0)
 .S ^XTMP(NAMESPC,"CONFIG","ANOMALY")=$G(^XTMP(NAMESPC,"CONFIG","ANOMALY"))+1
"RTN","DG53658",112,0)
 .S ^XTMP(NAMESPC,"CONFIG","DFN")=DFN
"RTN","DG53658",113,0)
 .S ADDRDTTM=RXFILLDT
"RTN","DG53658",114,0)
 .;
"RTN","DG53658",115,0)
 .; Set default date = 12-31-2003 if no entry is found in file #52.
"RTN","DG53658",116,0)
 .I ADDRDTTM="" D
"RTN","DG53658",117,0)
 ..S ADDRDTTM=3031231
"RTN","DG53658",118,0)
 ..S ^XTMP(NAMESPC,"CONFIG","NO-52")=$G(^XTMP(NAMESPC,"CONFIG","NO-52"))+1
"RTN","DG53658",119,0)
 .;
"RTN","DG53658",120,0)
 .S DIE="^DPT(",DA=DFN,DR=".118///^S X=ADDRDTTM"
"RTN","DG53658",121,0)
 .D:MODE ^DIE
"RTN","DG53658",122,0)
 .S $P(^XTMP(NAMESPC,"DATA",DFN),"^",2)=ADDRDTTM
"RTN","DG53658",123,0)
 .S ^XTMP(NAMESPC,"CONFIG","SUCCESS")=$G(^XTMP(NAMESPC,"CONFIG","SUCCESS"))+1
"RTN","DG53658",124,0)
 Q
"RTN","DG53658",125,0)
STOPIT() ; Checks if user requested task to stop
"RTN","DG53658",126,0)
 N X,STOPIT
"RTN","DG53658",127,0)
 S STOPIT=0
"RTN","DG53658",128,0)
 S X=$$S^%ZTLOAD
"RTN","DG53658",129,0)
 I X D  ;
"RTN","DG53658",130,0)
 .S STOPIT=1
"RTN","DG53658",131,0)
 .I $G(ZTSK) S ZTSTOP=1
"RTN","DG53658",132,0)
 Q STOPIT
"RTN","DG53658",133,0)
ABORTMSG ; Send the user aborted message:
"RTN","DG53658",134,0)
 N NAMESPC,NAMESPCN,TMP,XMY,XMDUZ,XMTEXT,XMSUB
"RTN","DG53658",135,0)
 S NAMESPC=$$NAMESPC
"RTN","DG53658",136,0)
 S NAMESPCN=$P(NAMESPC,"DG",2)
"RTN","DG53658",137,0)
 S XMY(DUZ)="",XMDUZ="DG PACKAGE",XMTEXT="TMP("_NAMESPCN_","
"RTN","DG53658",138,0)
 S XMSUB="DG*5.3*"_NAMESPCN_": ADDRESS CLEANUP - PROCESS STOPPED BY USER"
"RTN","DG53658",139,0)
 S TMP(NAMESPCN,1)="CLEANUP PROCESSING"
"RTN","DG53658",140,0)
 S TMP(NAMESPCN,2)="------------------"
"RTN","DG53658",141,0)
 S TMP(NAMESPCN,3)=""
"RTN","DG53658",142,0)
 S TMP(NAMESPCN,4)="The cleanup process was aborted prematurely.  Here is the current status:"
"RTN","DG53658",143,0)
 S TMP(NAMESPCN,5)=""
"RTN","DG53658",144,0)
 S TMP(NAMESPCN,6)="  Start Date/Time: "_$$FMTE^XLFDT(+$G(^XTMP(NAMESPC,"CONFIG","START TIME")),"P")
"RTN","DG53658",145,0)
 S TMP(NAMESPCN,7)="    End Date/Time: "_$$FMTE^XLFDT(+$G(^XTMP(NAMESPC,"CONFIG","ABORT TIME")),"P")
"RTN","DG53658",146,0)
 S TMP(NAMESPCN,8)=""
"RTN","DG53658",147,0)
 S TMP(NAMESPCN,9)="Current Counts: "
"RTN","DG53658",148,0)
 S TMP(NAMESPCN,10)="       Total Patient Records Processed: "_+$G(^XTMP(NAMESPC,"CONFIG","TOTPR"))
"RTN","DG53658",149,0)
 S TMP(NAMESPCN,11)="             Total Anomalies Corrected: "_+$G(^XTMP(NAMESPC,"CONFIG","SUCCESS"))
"RTN","DG53658",150,0)
 S TMP(NAMESPCN,12)="                  Percentage Completed: "_+$G(^XTMP(NAMESPC,"CONFIG","PERCENT COMPLETE"))_"%"
"RTN","DG53658",151,0)
 S TMP(NAMESPCN,13)=""
"RTN","DG53658",152,0)
 S TMP(NAMESPCN,14)=""
"RTN","DG53658",153,0)
 D ^XMD
"RTN","DG53658",154,0)
 Q
"RTN","DG53658",155,0)
DONEMSG ; Send the user aborted message:
"RTN","DG53658",156,0)
 N NAMESPC,NAMESPCN,TMP,XMY,XMDUZ,XMTEXT,XMSUB
"RTN","DG53658",157,0)
 S NAMESPC=$$NAMESPC
"RTN","DG53658",158,0)
 S NAMESPCN=$P(NAMESPC,"DG",2)
"RTN","DG53658",159,0)
 S XMY(DUZ)="",XMDUZ="DG PACKAGE",XMTEXT="TMP("_NAMESPCN_","
"RTN","DG53658",160,0)
 S XMSUB="DG*5.3*"_NAMESPCN_": ADDRESS CLEANUP - SUMMARY REPORT"
"RTN","DG53658",161,0)
 S TMP(NAMESPCN,1)="CLEANUP PROCESSING"
"RTN","DG53658",162,0)
 S TMP(NAMESPCN,2)="------------------"
"RTN","DG53658",163,0)
 S TMP(NAMESPCN,3)=""
"RTN","DG53658",164,0)
 S TMP(NAMESPCN,4)="The cleanup has run to completion.  Here are the results:"
"RTN","DG53658",165,0)
 S TMP(NAMESPCN,5)=""
"RTN","DG53658",166,0)
 S TMP(NAMESPCN,6)="  Start Date/Time: "_$$FMTE^XLFDT(+$G(^XTMP(NAMESPC,"CONFIG","START TIME")),"P")
"RTN","DG53658",167,0)
 S TMP(NAMESPCN,7)="    End Date/Time: "_$$FMTE^XLFDT(+$G(^XTMP(NAMESPC,"CONFIG","COMPLETE")),"P")
"RTN","DG53658",168,0)
 S TMP(NAMESPCN,8)=""
"RTN","DG53658",169,0)
 S TMP(NAMESPCN,9)="Current Counts: "
"RTN","DG53658",170,0)
 S TMP(NAMESPCN,10)="       Total Patient Records Processed: "_+$G(^XTMP(NAMESPC,"CONFIG","TOTPR"))
"RTN","DG53658",171,0)
 S TMP(NAMESPCN,11)="             Total Anomalies Corrected: "_+$G(^XTMP(NAMESPC,"CONFIG","SUCCESS"))
"RTN","DG53658",172,0)
 S TMP(NAMESPCN,12)="                  Percentage Completed: 100%"
"RTN","DG53658",173,0)
 S TMP(NAMESPCN,13)=""
"RTN","DG53658",174,0)
 S TMP(NAMESPCN,14)=""
"RTN","DG53658",175,0)
 D ^XMD
"RTN","DG53658",176,0)
 Q
"RTN","DGADDUTL")
0^5^B43681615
"RTN","DGADDUTL",1,0)
DGADDUTL ;ALB/PHH-PATIENT ADDRESS; 09/27/05 11:14am
"RTN","DGADDUTL",2,0)
 ;;5.3;Registration;**658**;Aug 13, 1993
"RTN","DGADDUTL",3,0)
 Q
"RTN","DGADDUTL",4,0)
ADDR ; validate/edit Patient address (entry for DG ADDRESS UPDATE option)
"RTN","DGADDUTL",5,0)
 N %,QUIT,DIC,Y,DFN,USERSEL
"RTN","DGADDUTL",6,0)
ADDRLOOP ;
"RTN","DGADDUTL",7,0)
 W !!
"RTN","DGADDUTL",8,0)
 K DIC,Y,DFN,USERSEL
"RTN","DGADDUTL",9,0)
 S DIC="^DPT(",DIC(0)="AEMZQ",DIC("A")="Veteran Name/SSN: " D ^DIC
"RTN","DGADDUTL",10,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","DGADDUTL",11,0)
 Q:Y'>0
"RTN","DGADDUTL",12,0)
 ;
"RTN","DGADDUTL",13,0)
 S DFN=+Y,QUIT=0
"RTN","DGADDUTL",14,0)
 F  D  Q:QUIT
"RTN","DGADDUTL",15,0)
 .W !!,"Do you want to update the (P)ermanent Address, (T)emporary Address, or (B)oth? "
"RTN","DGADDUTL",16,0)
 .R USERSEL:300
"RTN","DGADDUTL",17,0)
 .I '$T S USERSEL="^"
"RTN","DGADDUTL",18,0)
 .I USERSEL["^"!(USERSEL="") S QUIT=1 Q
"RTN","DGADDUTL",19,0)
 .S USERSEL=$TR(USERSEL,"ptb","PTB")
"RTN","DGADDUTL",20,0)
 .I USERSEL'="P",USERSEL'="T",USERSEL'="B" D  Q
"RTN","DGADDUTL",21,0)
 ..W !,"Invalid selection!"
"RTN","DGADDUTL",22,0)
 .I USERSEL="P"!(USERSEL="B") W ! D UPDATE(DFN,"PERM")
"RTN","DGADDUTL",23,0)
 .I USERSEL="T"!(USERSEL="B") D UPDATE(DFN,"TEMP")
"RTN","DGADDUTL",24,0)
 .S QUIT=1
"RTN","DGADDUTL",25,0)
 G ADDRLOOP
"RTN","DGADDUTL",26,0)
ADD(DFN) ; validate/edit Patient address (entry point for routine DGREG)
"RTN","DGADDUTL",27,0)
 ;         Input  -- DFN
"RTN","DGADDUTL",28,0)
 ;
"RTN","DGADDUTL",29,0)
 N RETVAL,ADDYN
"RTN","DGADDUTL",30,0)
 S (RETVAL,ADDYN)=0
"RTN","DGADDUTL",31,0)
 F  D  Q:ADDYN
"RTN","DGADDUTL",32,0)
 .S ADDYN=$$ADDYN("Do you want to validate/edit the Patient's Address")
"RTN","DGADDUTL",33,0)
 .S RETVAL=ADDYN
"RTN","DGADDUTL",34,0)
 .I ADDYN'=1,ADDYN'=2 S (ADDYN,RETVAL)=0
"RTN","DGADDUTL",35,0)
 .I 'ADDYN W !?5,"Enter 'YES' to validate/edit Patient's Address or 'NO' to continue."
"RTN","DGADDUTL",36,0)
 I ADDYN=1,$G(DFN)'="",$D(^DPT(DFN,0)) D
"RTN","DGADDUTL",37,0)
 .D UPDATE(DFN,"PERM")
"RTN","DGADDUTL",38,0)
 .S RETVAL=1
"RTN","DGADDUTL",39,0)
 Q RETVAL
"RTN","DGADDUTL",40,0)
ADDYN(PROMPT) ; Yes/No Prompt to Edit/Validate Address
"RTN","DGADDUTL",41,0)
 ;         Input  -- None
"RTN","DGADDUTL",42,0)
 ;         Output --  1 = YES
"RTN","DGADDUTL",43,0)
 ;                    2 = NO
"RTN","DGADDUTL",44,0)
 ;                   -1 = Aborted
"RTN","DGADDUTL",45,0)
 ;
"RTN","DGADDUTL",46,0)
 N %
"RTN","DGADDUTL",47,0)
 W !,PROMPT
"RTN","DGADDUTL",48,0)
 D YN^DICN
"RTN","DGADDUTL",49,0)
 Q %
"RTN","DGADDUTL",50,0)
UPDATE(DFN,TYPE) ; Update the Address
"RTN","DGADDUTL",51,0)
 ;         Input  -- TYPE = "PERM" for Permanent Address
"RTN","DGADDUTL",52,0)
 ;                        = "TEMP" for Temporary Address
"RTN","DGADDUTL",53,0)
 ;         Output -- None
"RTN","DGADDUTL",54,0)
 ;         
"RTN","DGADDUTL",55,0)
 I TYPE'="PERM",TYPE'="TEMP" Q
"RTN","DGADDUTL",56,0)
 ;
"RTN","DGADDUTL",57,0)
 ; Update the Date/Time Stamp regardless of edits
"RTN","DGADDUTL",58,0)
 D UPDDTTM(DFN,TYPE)
"RTN","DGADDUTL",59,0)
 ;
"RTN","DGADDUTL",60,0)
 I TYPE="PERM" D
"RTN","DGADDUTL",61,0)
 .W !
"RTN","DGADDUTL",62,0)
 .N FLG S (FLG(1),FLG(2))=1
"RTN","DGADDUTL",63,0)
 .D ADDRED(DFN,.FLG)
"RTN","DGADDUTL",64,0)
 ;
"RTN","DGADDUTL",65,0)
 I TYPE="TEMP" D
"RTN","DGADDUTL",66,0)
 .D EDITTADR(DFN)
"RTN","DGADDUTL",67,0)
 Q
"RTN","DGADDUTL",68,0)
UPDDTTM(DFN,TYPE) ; Update the PATIENT file #2 with the current date and time
"RTN","DGADDUTL",69,0)
 ;
"RTN","DGADDUTL",70,0)
 N %H,%,X,%Y,%D,%M,%I,ADDDTTM,DIE,DA,DR
"RTN","DGADDUTL",71,0)
 D NOW^%DTC
"RTN","DGADDUTL",72,0)
 S ADDDTTM=%,DIE="^DPT(",DA=DFN
"RTN","DGADDUTL",73,0)
 ;
"RTN","DGADDUTL",74,0)
 ; If it's the Temporary Address, the field is .12113
"RTN","DGADDUTL",75,0)
 ; If not, it should be the Permanent Address and the default field is .118
"RTN","DGADDUTL",76,0)
 S DR=$S(TYPE="TEMP":".12113///^S X=ADDDTTM",1:".118///^S X=ADDDTTM")
"RTN","DGADDUTL",77,0)
 D ^DIE
"RTN","DGADDUTL",78,0)
 Q
"RTN","DGADDUTL",79,0)
ADDRED(DFN,FLG) ; Address Edit (Code copied from DGREGAED and modified)
"RTN","DGADDUTL",80,0)
 ;Input:
"RTN","DGADDUTL",81,0)
 ;  DFN (required) - Interal Entry # of Patient File (#2)
"RTN","DGADDUTL",82,0)
 ;  FLG (optional) - Flags of 1 or 0; if null, 0 is assumed. Details:
"RTN","DGADDUTL",83,0)
 ;    FLG(1) - if 1, let user edit phone numbers (field #.131 and #.132)
"RTN","DGADDUTL",84,0)
 ;    FLG(2) - if 1, display before & after address for user confirmation
"RTN","DGADDUTL",85,0)
 K EASZIPLK
"RTN","DGADDUTL",86,0)
 N DGINPUT,I,X,Y,%
"RTN","DGADDUTL",87,0)
 I $G(DFN)="" Q
"RTN","DGADDUTL",88,0)
 I ($G(DFN)'?.N) Q
"RTN","DGADDUTL",89,0)
 S FLG(1)=$G(FLG(1)),FLG(2)=$G(FLG(2))
"RTN","DGADDUTL",90,0)
 D INPUT^DGREGAED(.DGINPUT,DFN)
"RTN","DGADDUTL",91,0)
 I $G(DGINPUT)=-1 Q
"RTN","DGADDUTL",92,0)
 I $G(FLG(2))=1 D COMPARE^DGREGAED(.DGINPUT,DFN)
"RTN","DGADDUTL",93,0)
 I '$$CONFIRM^DGREGAED() W !,"Change aborted." D EOP^DGREGAED Q
"RTN","DGADDUTL",94,0)
 N DGPRIOR
"RTN","DGADDUTL",95,0)
 D GETPRIOR(DFN,.DGPRIOR)
"RTN","DGADDUTL",96,0)
 D SAVE^DGREGAED(.DGINPUT,DFN)
"RTN","DGADDUTL",97,0)
 Q:'$$FILEYN(.DGPRIOR,.DGINPUT)
"RTN","DGADDUTL",98,0)
 D GETUPDTS(DFN,.DGINPUT)
"RTN","DGADDUTL",99,0)
 D UPDADDLG(DFN,.DGPRIOR,.DGINPUT)
"RTN","DGADDUTL",100,0)
 Q
"RTN","DGADDUTL",101,0)
GETPRIOR(DFN,DGPRIOR) ; Get prior address fields.
"RTN","DGADDUTL",102,0)
 N DGCURR,DGN,DGARRY,DGCIEN,DGST,DGCNTY
"RTN","DGADDUTL",103,0)
 D GETS^DIQ(2,DFN_",",".111;.112;.113;.114;.115;.117;.1112;.131;.132;.121;.118;.119;.12;.122","I","DGCURR")
"RTN","DGADDUTL",104,0)
 F DGN=.111,.112,.113,.114,.115,.117,.1112,.131,.132,.121,.118,.119,.12,.122 D
"RTN","DGADDUTL",105,0)
 . S DGARRY("OLD",DGN)=$G(DGCURR(2,DFN_",",DGN,"I"))
"RTN","DGADDUTL",106,0)
 M DGPRIOR=DGARRY("OLD")
"RTN","DGADDUTL",107,0)
 Q
"RTN","DGADDUTL",108,0)
GETUPDTS(DFN,DGINPUT) ; Get current address fields.
"RTN","DGADDUTL",109,0)
 N DGCURR,DGN,DGARRY
"RTN","DGADDUTL",110,0)
 D GETS^DIQ(2,DFN_",",".118;.119;.12;.122","I","DGCURR")
"RTN","DGADDUTL",111,0)
 F DGN=.118,.119,.12,.122 D
"RTN","DGADDUTL",112,0)
 . S DGARRY("NEW",DGN)=$G(DGCURR(2,DFN_",",DGN,"I"))
"RTN","DGADDUTL",113,0)
 M DGINPUT=DGARRY("NEW")
"RTN","DGADDUTL",114,0)
 Q
"RTN","DGADDUTL",115,0)
FILEYN(DGOLD,DGNEW) ; Determine whether or not to file to #301.7
"RTN","DGADDUTL",116,0)
 N RETVAL
"RTN","DGADDUTL",117,0)
 S RETVAL=0
"RTN","DGADDUTL",118,0)
 D
"RTN","DGADDUTL",119,0)
 .I DGOLD(.111)'=$G(DGNEW(.111)) S RETVAL=1 Q
"RTN","DGADDUTL",120,0)
 .I DGOLD(.112)'=$G(DGNEW(.112)) S RETVAL=1 Q
"RTN","DGADDUTL",121,0)
 .I DGOLD(.114)'=$G(DGNEW(.114)) S RETVAL=1 Q
"RTN","DGADDUTL",122,0)
 .I DGOLD(.115)'=$P($G(DGNEW(.115)),"^",2) S RETVAL=1 Q
"RTN","DGADDUTL",123,0)
 .I DGOLD(.1112)'=$G(DGNEW(.1112)) S RETVAL=1 Q
"RTN","DGADDUTL",124,0)
 .I DGOLD(.117)'=$P($G(DGNEW(.117)),"^",2) S RETVAL=1 Q
"RTN","DGADDUTL",125,0)
 .I DGOLD(.131)'=$G(DGNEW(.131)) S RETVAL=1 Q
"RTN","DGADDUTL",126,0)
 Q RETVAL
"RTN","DGADDUTL",127,0)
UPDADDLG(DFN,DGPRIOR,DGINPUT) ; Update the IVM ADDRESS CHANGE LOG file #301.7
"RTN","DGADDUTL",128,0)
 ;
"RTN","DGADDUTL",129,0)
 N DGDATA
"RTN","DGADDUTL",130,0)
 ; Zero node:
"RTN","DGADDUTL",131,0)
 S DGDATA(.01)=DGINPUT(.118)
"RTN","DGADDUTL",132,0)
 S DGDATA(1)=DFN
"RTN","DGADDUTL",133,0)
 S DGDATA(2)=DGINPUT(.122)
"RTN","DGADDUTL",134,0)
 S DGDATA(3)=DGINPUT(.119)
"RTN","DGADDUTL",135,0)
 S DGDATA(3.5)=DGINPUT(.12)
"RTN","DGADDUTL",136,0)
 ;
"RTN","DGADDUTL",137,0)
 ; One node:
"RTN","DGADDUTL",138,0)
 S DGDATA(4)=DGPRIOR(.118)
"RTN","DGADDUTL",139,0)
 S DGDATA(5)=DGPRIOR(.122)
"RTN","DGADDUTL",140,0)
 S DGDATA(6)=DGPRIOR(.12)
"RTN","DGADDUTL",141,0)
 S DGDATA(7)=DGPRIOR(.119)
"RTN","DGADDUTL",142,0)
 S DGDATA(8)=DGPRIOR(.131)
"RTN","DGADDUTL",143,0)
 S DGDATA(9)=DGPRIOR(.111)
"RTN","DGADDUTL",144,0)
 S DGDATA(10)=DGPRIOR(.112)
"RTN","DGADDUTL",145,0)
 S DGDATA(11)=DGPRIOR(.114)
"RTN","DGADDUTL",146,0)
 S DGDATA(12)=DGPRIOR(.117)
"RTN","DGADDUTL",147,0)
 S DGDATA(13)=DGPRIOR(.115)
"RTN","DGADDUTL",148,0)
 S DGDATA(14)=DGPRIOR(.1112)
"RTN","DGADDUTL",149,0)
 ;
"RTN","DGADDUTL",150,0)
 I $$ADD^DGENDBS(301.7,,.DGDATA) ;
"RTN","DGADDUTL",151,0)
 Q
"RTN","DGADDUTL",152,0)
EDITTADR(DFN) ; Edit Temporary Address
"RTN","DGADDUTL",153,0)
 N DGPRIOR,DGCH,DGRPAN,DGDR,DGRPS
"RTN","DGADDUTL",154,0)
 I $G(DFN)="" Q
"RTN","DGADDUTL",155,0)
 I ($G(DFN)'?.N) Q
"RTN","DGADDUTL",156,0)
 ;
"RTN","DGADDUTL",157,0)
 ; Get the current Temporary Address and display it
"RTN","DGADDUTL",158,0)
 D GETTADR(DFN,.DGPRIOR)
"RTN","DGADDUTL",159,0)
 D DISPTADR(DFN,.DGPRIOR)
"RTN","DGADDUTL",160,0)
 W !!
"RTN","DGADDUTL",161,0)
 ;
"RTN","DGADDUTL",162,0)
 S DGCH=5,DGRPAN="1,2,3,4,5,",DGDR="",DGRPS=1
"RTN","DGADDUTL",163,0)
 D CHOICE^DGRPP
"RTN","DGADDUTL",164,0)
 D ^DGRPE
"RTN","DGADDUTL",165,0)
 Q
"RTN","DGADDUTL",166,0)
GETTADR(DFN,DGPRIOR) ; Get prior temporary address fields.
"RTN","DGADDUTL",167,0)
 N DGCURR,DGN,DGARRY,DGCIEN,DGST,DGCNTY
"RTN","DGADDUTL",168,0)
 D GETS^DIQ(2,DFN_",",".1211;.1212;.1213;.1214;.1215;.1216;.1217;.1218;.12105;.1219;.12111;.12112;.12113;.12114","I","DGCURR")
"RTN","DGADDUTL",169,0)
 F DGN=.1211,.1212,.1213,.1214,.1215,.1216,.1217,.1218,.12105,.1219,.12111,.12112,.12113,.12114 D
"RTN","DGADDUTL",170,0)
 .S DGARRY("OLD",DGN)=$G(DGCURR(2,DFN_",",DGN,"I"))
"RTN","DGADDUTL",171,0)
 M DGPRIOR=DGARRY("OLD")
"RTN","DGADDUTL",172,0)
 Q
"RTN","DGADDUTL",173,0)
DISPTADR(DFN,DGARRY) ; Display Temporary Address
"RTN","DGADDUTL",174,0)
 N DGADRACT,DGADR1,DGADR2,DGADR3,DGCITY,DGSTATE,DGZIP
"RTN","DGADDUTL",175,0)
 N DGCOUNTY,DGPHONE,DGFROMDT,DGTODT
"RTN","DGADDUTL",176,0)
 ;
"RTN","DGADDUTL",177,0)
 S DGADRACT=$G(DGARRY(.12105))
"RTN","DGADDUTL",178,0)
 S DGADR1=$G(DGARRY(.1211))
"RTN","DGADDUTL",179,0)
 S DGADR2=$G(DGARRY(.1212))
"RTN","DGADDUTL",180,0)
 S DGADR3=$G(DGARRY(.1213))
"RTN","DGADDUTL",181,0)
 S DGCITY=$G(DGARRY(.1214))
"RTN","DGADDUTL",182,0)
 S DGSTATE=$G(DGARRY(.1215))
"RTN","DGADDUTL",183,0)
 S DGZIP=$G(DGARRY(.1216))
"RTN","DGADDUTL",184,0)
 S DGCOUNTY=$G(DGARRY(.12111))
"RTN","DGADDUTL",185,0)
 I DGCOUNTY'="",DGSTATE'="",$D(^DIC(5,DGSTATE,1,DGCOUNTY,0)) D
"RTN","DGADDUTL",186,0)
 .S DGCOUNTY=$P(^DIC(5,DGSTATE,1,DGCOUNTY,0),"^")_" ("_$P(^DIC(5,DGSTATE,1,DGCOUNTY,0),"^",4)_")"
"RTN","DGADDUTL",187,0)
 I DGADRACT'="Y" S DGCOUNTY="NOT APPLICABLE"
"RTN","DGADDUTL",188,0)
 I DGSTATE'="",$D(^DIC(5,DGSTATE,0)) S DGSTATE=$P(^DIC(5,DGSTATE,0),"^",2)
"RTN","DGADDUTL",189,0)
 S DGPHONE=$G(DGARRY(.1219))
"RTN","DGADDUTL",190,0)
 S DGFROMDT=$$FMTE^XLFDT($G(DGARRY(.1217)))
"RTN","DGADDUTL",191,0)
 S DGTODT=$$FMTE^XLFDT($G(DGARRY(.1218)))
"RTN","DGADDUTL",192,0)
 ;
"RTN","DGADDUTL",193,0)
 W !!,"Temporary Address: "
"RTN","DGADDUTL",194,0)
 I DGADRACT="Y" D
"RTN","DGADDUTL",195,0)
 .W:DGADR1'="" !?9,DGADR1
"RTN","DGADDUTL",196,0)
 .W:DGADR2'="" !?9,DGADR2
"RTN","DGADDUTL",197,0)
 .W:DGADR3'="" !?9,DGADR3
"RTN","DGADDUTL",198,0)
 .W !?9,$S(DGCITY'="":DGCITY,1:"")_","_$S(DGSTATE'="":DGSTATE,1:"")_" "_$S(DGZIP'="":DGZIP,1:"")
"RTN","DGADDUTL",199,0)
 .W !," County: "_DGCOUNTY
"RTN","DGADDUTL",200,0)
 .W !,"  Phone: "_DGPHONE
"RTN","DGADDUTL",201,0)
 .W !,"From/To: "_$P(DGFROMDT,",")_","_$P(DGFROMDT,", ",2)_"-"_$P(DGTODT,",")_","_$P(DGTODT,", ",2)
"RTN","DGADDUTL",202,0)
 ;
"RTN","DGADDUTL",203,0)
 I $G(DGARRY(.12105))="N" D
"RTN","DGADDUTL",204,0)
 .W:$G(DGARRY(.1211))="" !?9,"NO TEMPORARY ADDRESS"
"RTN","DGADDUTL",205,0)
 .W:$G(DGARRY(.1212))="" !?9,""
"RTN","DGADDUTL",206,0)
 .W !," County: NOT APPLICABLE"
"RTN","DGADDUTL",207,0)
 .W !,"  Phone: NOT APPLICABLE"
"RTN","DGADDUTL",208,0)
 .W !,"From/To: NOT APPLICABLE"
"RTN","DGADDUTL",209,0)
 Q
"RTN","DGMTU4")
0^3^B68178462
"RTN","DGMTU4",1,0)
DGMTU4 ;ALB/CJM,SCG,LBD,EG,PHH MEANS TEST UTILITES ; 06/07/2005
"RTN","DGMTU4",2,0)
 ;;5.3;Registration;**182,267,285,347,454,456,476,610,658**;Aug 13, 1993
"RTN","DGMTU4",3,0)
 ;
"RTN","DGMTU4",4,0)
GETSITE(DUZ) ;
"RTN","DGMTU4",5,0)
 ;Descripition:  Gets the users station number.  If not found, it will
"RTN","DGMTU4",6,0)
 ;return the station number of the primary facility.
"RTN","DGMTU4",7,0)
 ;
"RTN","DGMTU4",8,0)
 ;Input:
"RTN","DGMTU4",9,0)
 ;      DUZ array, pass by reference
"RTN","DGMTU4",10,0)
 ;Output:
"RTN","DGMTU4",11,0)
 ;      Function Value - station number with suffix
"RTN","DGMTU4",12,0)
 N FACILITY,STATION,CURSTN,CHILD,CIEN
"RTN","DGMTU4",13,0)
 S FACILITY=""
"RTN","DGMTU4",14,0)
 S:($G(DUZ)'=.5) FACILITY=$G(DUZ(2))
"RTN","DGMTU4",15,0)
 I 'FACILITY S FACILITY=+$$SITE^VASITE()
"RTN","DGMTU4",16,0)
 S:FACILITY STATION=$$STA^XUAF4(FACILITY)
"RTN","DGMTU4",17,0)
 S CURSTN=$P($$SITE^VASITE,"^",3)
"RTN","DGMTU4",18,0)
 I $D(STATION) D
"RTN","DGMTU4",19,0)
 .I STATION']"" D
"RTN","DGMTU4",20,0)
 ..D CHILDREN^XUAF4("CHILD","`"_FACILITY,"PARENT FACILITY")
"RTN","DGMTU4",21,0)
 ..S CIEN=0 F  S CIEN=$O(CHILD("C",CIEN)) Q:'CIEN  I CIEN=CURSTN S STATION=$$STA^XUAF4(CIEN) Q
"RTN","DGMTU4",22,0)
 ..I STATION']"" D
"RTN","DGMTU4",23,0)
 ...D CHILDREN^XUAF4("CHILD","`"_FACILITY,"VISN")
"RTN","DGMTU4",24,0)
 ...S CIEN=0 F  S CIEN=$O(CHILD("C",CIEN)) Q:'CIEN  I CIEN=CURSTN S STATION=$$STA^XUAF4(CIEN) Q
"RTN","DGMTU4",25,0)
 Q $G(STATION)
"RTN","DGMTU4",26,0)
 ;
"RTN","DGMTU4",27,0)
DATETIME(MTIEN) ;
"RTN","DGMTU4",28,0)
 ;Writes date/time stamp to means test record
"RTN","DGMTU4",29,0)
 N DATA
"RTN","DGMTU4",30,0)
 Q:$G(IVMZ10)="UPLOAD IN PROGRESS"
"RTN","DGMTU4",31,0)
 S DATA(2.02)=$$NOW^XLFDT
"RTN","DGMTU4",32,0)
 I $G(MTIEN),$D(^DGMT(408.31,MTIEN,0)) I $$UPD^DGENDBS(408.31,MTIEN,.DATA)
"RTN","DGMTU4",33,0)
 Q
"RTN","DGMTU4",34,0)
SAVESTAT(MTIEN,DGERR) ;
"RTN","DGMTU4",35,0)
 ;Save the Test Determined Status (#2.03) in the ANNUAL MEANS TEST file
"RTN","DGMTU4",36,0)
 ;(#408.31)
"RTN","DGMTU4",37,0)
 ;
"RTN","DGMTU4",38,0)
 ;Input:
"RTN","DGMTU4",39,0)
 ;      MTIEN - IEN of 408.31
"RTN","DGMTU4",40,0)
 ;      DGERR  - (optional) 1 - Means or Copay Test is incomplete
"RTN","DGMTU4",41,0)
 ;                          0 - Means or Copay Test is complete       
"RTN","DGMTU4",42,0)
 ;
"RTN","DGMTU4",43,0)
 ;only current statuses of P, A, or C for Means Tests and
"RTN","DGMTU4",44,0)
 ;current status of M, or E for Copay Tests will be stored.
"RTN","DGMTU4",45,0)
 ;
"RTN","DGMTU4",46,0)
 ;if test is incomplete the Test Determined Status will be deleted.
"RTN","DGMTU4",47,0)
 ;
"RTN","DGMTU4",48,0)
 Q:('$G(MTIEN))
"RTN","DGMTU4",49,0)
 ;
"RTN","DGMTU4",50,0)
 N CODE,DATA,NODE0,TYPE
"RTN","DGMTU4",51,0)
 I $G(DGERR) S DATA(2.03)="" G SET
"RTN","DGMTU4",52,0)
 S NODE0=$G(^DGMT(408.31,MTIEN,0))
"RTN","DGMTU4",53,0)
 S TYPE=$P(NODE0,"^",19)
"RTN","DGMTU4",54,0)
 S CODE=$$GETCODE^DGMTH($P(NODE0,"^",3))
"RTN","DGMTU4",55,0)
 S:CODE="A" (DATA(.11),DATA(.14))=""
"RTN","DGMTU4",56,0)
 S DATA(2.03)=""
"RTN","DGMTU4",57,0)
 I TYPE=1,(CODE="N") Q
"RTN","DGMTU4",58,0)
 I TYPE=2,(CODE="L") Q
"RTN","DGMTU4",59,0)
 I TYPE=1,(CODE'=""),"CPAG"[CODE D
"RTN","DGMTU4",60,0)
 .S DATA(2.03)=$P(NODE0,"^",3)
"RTN","DGMTU4",61,0)
 .I $P(NODE0,"^",20) D
"RTN","DGMTU4",62,0)
 ..S DATA(2.03)=$$GETSTAT^DGMTH($S(CODE="P":"P",CODE="A"&(($P(NODE0,U,4)-$P(NODE0,U,15))'>$P(NODE0,U,27)):"G",1:"C"),1)
"RTN","DGMTU4",63,0)
 I TYPE=2,(CODE'=""),"ME"[CODE S DATA(2.03)=$P(NODE0,"^",3)
"RTN","DGMTU4",64,0)
SET I $$UPD^DGENDBS(408.31,MTIEN,.DATA)
"RTN","DGMTU4",65,0)
 Q
"RTN","DGMTU4",66,0)
MTPRIME(MTIEN) ;
"RTN","DGMTU4",67,0)
 ;Makes the means test MTIEN primary
"RTN","DGMTU4",68,0)
 ;
"RTN","DGMTU4",69,0)
 N DGREQF,DGDOM1,DGADDF,DGMSGF,DGMTACT,DGMTI,DGMTINF,DGMTP,DGMTA,TRIES,DATA,NODE,DFN,MTDATE,YREND,DGMTDC,IBPRIOR,MTPRIME,LSTNODE
"RTN","DGMTU4",70,0)
 Q:('$G(MTIEN))
"RTN","DGMTU4",71,0)
 S MTPRIME="DGMTU4"
"RTN","DGMTU4",72,0)
 S NODE=$G(^DGMT(408.31,MTIEN,0))
"RTN","DGMTU4",73,0)
 Q:(NODE="")
"RTN","DGMTU4",74,0)
 S DFN=$P($G(^DGMT(408.31,MTIEN,0)),"^",2)
"RTN","DGMTU4",75,0)
 Q:'DFN
"RTN","DGMTU4",76,0)
 Q:+$G(^DGMT(408.31,MTIEN,"PRIM"))  ;already marked as primary!
"RTN","DGMTU4",77,0)
 S MTDATE=+NODE
"RTN","DGMTU4",78,0)
 Q:'MTDATE
"RTN","DGMTU4",79,0)
 Q:($P(NODE,"^",19)'=1)
"RTN","DGMTU4",80,0)
 ;
"RTN","DGMTU4",81,0)
 S DGMTACT="ADD"
"RTN","DGMTU4",82,0)
 D PRIOR^DGMTEVT
"RTN","DGMTU4",83,0)
 ;
"RTN","DGMTU4",84,0)
 ;marks any existing tests as non-primary - shouldn't be more than
"RTN","DGMTU4",85,0)
 ;one such test, but give it two tries
"RTN","DGMTU4",86,0)
 I '$$OLD(MTDATE) D
"RTN","DGMTU4",87,0)
 .S YREND=DT_.2359
"RTN","DGMTU4",88,0)
 E  D
"RTN","DGMTU4",89,0)
 .S YREND=$E(MTDATE,1,3)_1231.9999
"RTN","DGMTU4",90,0)
 F TRIES=1,2 S NODE=$$LST^DGMTU(DFN,YREND,1) Q:'(+NODE)  Q:($E($P(NODE,"^",2),1,3)'=$E(MTDATE,1,3))  D
"RTN","DGMTU4",91,0)
 .N DATA
"RTN","DGMTU4",92,0)
 .;set up for the event driver - should be treated as an edit
"RTN","DGMTU4",93,0)
 .S:(TRIES=1) DGMTACT="EDT",DGMTI=+NODE D PRIOR^DGMTEVT
"RTN","DGMTU4",94,0)
 .;set the old test to non-primary
"RTN","DGMTU4",95,0)
 .S DATA(2)=0 I $$UPD^DGENDBS(408.31,+NODE,.DATA)
"RTN","DGMTU4",96,0)
 ;
"RTN","DGMTU4",97,0)
 ;don't want any old RX copay tests as primary either - if needed, they can be auto-created based on the means test
"RTN","DGMTU4",98,0)
 F TRIES=1,2 S NODE=$$LST^DGMTU(DFN,YREND,2) Q:'(+NODE)  Q:($E($P(NODE,"^",2),1,3)'=$E(MTDATE,1,3))  D
"RTN","DGMTU4",99,0)
 .N DATA
"RTN","DGMTU4",100,0)
 .;set the old test to non-primary
"RTN","DGMTU4",101,0)
 .S DATA(2)=0 I $$UPD^DGENDBS(408.31,+NODE,.DATA)
"RTN","DGMTU4",102,0)
 ;
"RTN","DGMTU4",103,0)
 ;mark this test as primary
"RTN","DGMTU4",104,0)
 K DATA S DATA(2)=1 I $$UPD^DGENDBS(408.31,MTIEN,.DATA)
"RTN","DGMTU4",105,0)
 ;
"RTN","DGMTU4",106,0)
 ; Get Last Primary Means Test irrespective of income year
"RTN","DGMTU4",107,0)
 S LSTNODE=$$LST^DGMTU(DFN)
"RTN","DGMTU4",108,0)
 ;if STATUS is REQUIRED & test is PRIMARY, then set it to NOT PRIMARY
"RTN","DGMTU4",109,0)
 ;if the uploaded test is MT COPAY REQUIRED
"RTN","DGMTU4",110,0)
 ; MT COPAY (CAT C) doesn't expire, which is why you have to 
"RTN","DGMTU4",111,0)
 ; flip the test to Not Primary eg 02/01/2005
"RTN","DGMTU4",112,0)
 I $P(LSTNODE,U,4)="R",+$G(^DGMT(408.31,+LSTNODE,"PRIM")),$P(^DGMT(408.31,MTIEN,0),U,3)=6 D
"RTN","DGMTU4",113,0)
 . N DATA S DATA(2)=0 I $$UPD^DGENDBS(408.31,+LSTNODE,.DATA)
"RTN","DGMTU4",114,0)
 ;if means test is required and test is primary and not a CAT C, 
"RTN","DGMTU4",115,0)
 ;and it hasn't expired, flip the test to Not Primary eg 02/23/2005
"RTN","DGMTU4",116,0)
 I $P(LSTNODE,U,4)="R",+$G(^DGMT(408.31,+LSTNODE,"PRIM")),$P(^DGMT(408.31,MTIEN,0),U,3)'=6,'$$OLD(MTDATE) D
"RTN","DGMTU4",117,0)
 . N DATA S DATA(2)=0 I $$UPD^DGENDBS(408.31,+LSTNODE,.DATA)
"RTN","DGMTU4",118,0)
 ;
"RTN","DGMTU4",119,0)
 ;If this is a Z10 upload, call the means test event driver and quit.
"RTN","DGMTU4",120,0)
 ;
"RTN","DGMTU4",121,0)
 I $G(IVMZ10)="UPLOAD IN PROGRESS" D  Q
"RTN","DGMTU4",122,0)
 .S DGMTI=MTIEN
"RTN","DGMTU4",123,0)
 .S DGMTINF=1
"RTN","DGMTU4",124,0)
 .D QUE^DGMTR
"RTN","DGMTU4",125,0)
 ;
"RTN","DGMTU4",126,0)
 ;If the test is still in effect, need to do additional checks
"RTN","DGMTU4",127,0)
 ;and call event driver
"RTN","DGMTU4",128,0)
 ;
"RTN","DGMTU4",129,0)
 I '$$OLD(MTDATE) D
"RTN","DGMTU4",130,0)
 .;Mark this test as NO LONGER REQUIRED -  calling EN^DGMTR will
"RTN","DGMTU4",131,0)
 .;change it back to its old status if required and will que the event
"RTN","DGMTU4",132,0)
 .;driver
"RTN","DGMTU4",133,0)
 .K DATA
"RTN","DGMTU4",134,0)
 .S DATA(.03)=$$GETSTAT^DGMTH("N",1)
"RTN","DGMTU4",135,0)
 .I $$UPD^DGENDBS(408.31,MTIEN,.DATA)
"RTN","DGMTU4",136,0)
 .S (DGADDF,DGMSGF)=1 ;don't want new test added or messages
"RTN","DGMTU4",137,0)
 .S DGMTI=MTIEN
"RTN","DGMTU4",138,0)
 .S DGMTINF=1
"RTN","DGMTU4",139,0)
 .;
"RTN","DGMTU4",140,0)
 .D EN^DGMTR
"RTN","DGMTU4",141,0)
 .;if the test wasn't required, maybe a Rx copay test is needed
"RTN","DGMTU4",142,0)
 .I '$G(DGREQF),'$G(DGDOM1) D COPYRX^DGMTR1(DFN,MTIEN)
"RTN","DGMTU4",143,0)
 Q
"RTN","DGMTU4",144,0)
 ;
"RTN","DGMTU4",145,0)
RXPRIME(RXIEN) ;
"RTN","DGMTU4",146,0)
 ;Makes phramacy copay test =RXIEN the primary test
"RTN","DGMTU4",147,0)
 ;
"RTN","DGMTU4",148,0)
 N DGREQF,DGDOM1,DGADDF,DGMSGF,DGMTACT,DGMTI,DGMTINF,DGMTP,DGMTA,TRIES,DATA,NODE,DFN,MTIEN,DGRAUTO,DGADDF,DGMTE,DGMTCOR,DGMT,YREND,RXPRIME,QUIT
"RTN","DGMTU4",149,0)
 ;
"RTN","DGMTU4",150,0)
 Q:('$G(RXIEN))
"RTN","DGMTU4",151,0)
 S RXPRIME="DGMTU4"
"RTN","DGMTU4",152,0)
 S QUIT=0
"RTN","DGMTU4",153,0)
 S NODE=$G(^DGMT(408.31,RXIEN,0))
"RTN","DGMTU4",154,0)
 Q:(NODE="")
"RTN","DGMTU4",155,0)
 S DFN=$P($G(^DGMT(408.31,RXIEN,0)),"^",2)
"RTN","DGMTU4",156,0)
 Q:'DFN
"RTN","DGMTU4",157,0)
 Q:+$G(^DGMT(408.31,RXIEN,"PRIM"))  ;already marked as primary!
"RTN","DGMTU4",158,0)
 S MTDATE=+NODE
"RTN","DGMTU4",159,0)
 Q:'MTDATE
"RTN","DGMTU4",160,0)
 Q:($P(NODE,"^",19)'=2)
"RTN","DGMTU4",161,0)
 ;
"RTN","DGMTU4",162,0)
 S DGMTINF=1
"RTN","DGMTU4",163,0)
 ;
"RTN","DGMTU4",164,0)
 ;marks any existing tests as non-primary - shouldn't be more than
"RTN","DGMTU4",165,0)
 ;one such test, but give it two tries
"RTN","DGMTU4",166,0)
 ;
"RTN","DGMTU4",167,0)
 I '$$OLD(MTDATE) D
"RTN","DGMTU4",168,0)
 .S YREND=DT_.2359
"RTN","DGMTU4",169,0)
 E  D
"RTN","DGMTU4",170,0)
 .S YREND=$E(MTDATE,1,3)_1231.9999
"RTN","DGMTU4",171,0)
 F TRIES=1,2 S NODE=$$LST^DGMTU(DFN,YREND,2) Q:'(+NODE)  Q:($E($P(NODE,"^",2),1,3)'=$E(MTDATE,1,3))  D
"RTN","DGMTU4",172,0)
 .N DATA
"RTN","DGMTU4",173,0)
 .;set up for the event driver - should be treated as an edit
"RTN","DGMTU4",174,0)
 .S:(TRIES=1) DGMTACT="EDT",DGMTI=+NODE D PRIOR^DGMTEVT
"RTN","DGMTU4",175,0)
 .;set the old test to non-primary
"RTN","DGMTU4",176,0)
 .S DATA(2)=0 I $$UPD^DGENDBS(408.31,+NODE,.DATA)
"RTN","DGMTU4",177,0)
 ;
"RTN","DGMTU4",178,0)
 ;don't want any old means tests marked as primary - unless they are actually needed!  In which case, do not make this Rx test primary.
"RTN","DGMTU4",179,0)
 F TRIES=1,2 S NODE=$$LST^DGMTU(DFN,YREND,1) Q:'(+NODE)  Q:($E($P(NODE,"^",2),1,3)'=$E(MTDATE,1,3))  D
"RTN","DGMTU4",180,0)
 .N DATA
"RTN","DGMTU4",181,0)
 .I '$$OLD($P(NODE,"^",2)),$P(NODE,"^",4)'="","ACGP"[$P(NODE,"^",4) S QUIT=1 Q
"RTN","DGMTU4",182,0)
 .;set the old test to non-primary
"RTN","DGMTU4",183,0)
 .S DATA(2)=0 I $$UPD^DGENDBS(408.31,+NODE,.DATA)
"RTN","DGMTU4",184,0)
 ;
"RTN","DGMTU4",185,0)
 I QUIT G QRXPRIME
"RTN","DGMTU4",186,0)
 ;mark this test as primary -  calling
"RTN","DGMTU4",187,0)
 ;EN^DGMTCOR will change it to NO LONGER APPLICABLE if appropriate
"RTN","DGMTU4",188,0)
 ;
"RTN","DGMTU4",189,0)
 K DATA
"RTN","DGMTU4",190,0)
 S DATA(2)=1 I $$UPD^DGENDBS(408.31,RXIEN,.DATA)
"RTN","DGMTU4",191,0)
 ;
"RTN","DGMTU4",192,0)
 ;If the test is still in effect, need to do additional checks
"RTN","DGMTU4",193,0)
 ;and call event driver
"RTN","DGMTU4",194,0)
 ;
"RTN","DGMTU4",195,0)
 I '$$OLD(MTDATE) D
"RTN","DGMTU4",196,0)
 .S DGMSGF=1,DGADDF=0 ;don't want new test added or messages
"RTN","DGMTU4",197,0)
 .;
"RTN","DGMTU4",198,0)
 .;EN^DGMTR will first create a stub for a required MT if needed, then
"RTN","DGMTU4",199,0)
 .;call ^DGMTCOR to set the status of the copay test
"RTN","DGMTU4",200,0)
 .D EN^DGMTR
"RTN","DGMTU4",201,0)
 .;
"RTN","DGMTU4",202,0)
 .;if the pharmacy copay test was determined to be required, than
"RTN","DGMTU4",203,0)
 .;que the event driver
"RTN","DGMTU4",204,0)
 .I DGMTCOR D
"RTN","DGMTU4",205,0)
 ..S DGMTACT="ADD"
"RTN","DGMTU4",206,0)
 ..D PRIOR^DGMTEVT
"RTN","DGMTU4",207,0)
 ..S DGMTI=RXIEN
"RTN","DGMTU4",208,0)
 ..D QUE^DGMTR
"RTN","DGMTU4",209,0)
QRXPRIME ;
"RTN","DGMTU4",210,0)
 Q
"RTN","DGMTU4",211,0)
 ;
"RTN","DGMTU4",212,0)
OLD(TESTDATE) ;
"RTN","DGMTU4",213,0)
 ;Checks if the date is older than 365 days.  Returns 0 for no, 1 for yes
"RTN","DGMTU4",214,0)
 ;if the test is exactly 365 days, 
"RTN","DGMTU4",215,0)
 ;it is considered expired eg 03/09/2005
"RTN","DGMTU4",216,0)
 I ($$FMDIFF^XLFDT(DT,TESTDATE)'<365) Q 1
"RTN","DGMTU4",217,0)
 Q 0
"RTN","DGMTU4",218,0)
 ;
"RTN","DGMTU4",219,0)
TRANSFER(DFN,FROM,TO) ;
"RTN","DGMTU4",220,0)
 ;transfers the Income Relations from the test=FROM to test=TO
"RTN","DGMTU4",221,0)
 ;
"RTN","DGMTU4",222,0)
 N DGINI,DGINR,DATA,ERROR
"RTN","DGMTU4",223,0)
 Q:'$G(DFN)
"RTN","DGMTU4",224,0)
 Q:'$G(FROM)
"RTN","DGMTU4",225,0)
 Q:'$G(TO)
"RTN","DGMTU4",226,0)
 Q:(FROM=TO)
"RTN","DGMTU4",227,0)
 S DGINI=0 F  S DGINI=$O(^DGMT(408.22,"AMT",FROM,DFN,DGINI)) Q:'DGINI  S DGINR=$O(^DGMT(408.22,"AMT",FROM,DFN,DGINI,"")) I $P($G(^DGMT(408.22,+DGINR,"MT")),"^")]"" D
"RTN","DGMTU4",228,0)
 .K DATA
"RTN","DGMTU4",229,0)
 .S DATA(31)=TO
"RTN","DGMTU4",230,0)
 .I $$UPD^DGENDBS(408.22,+DGINR,.DATA,.ERROR)
"RTN","DGMTU4",231,0)
 Q
"RTN","DGMTU4",232,0)
 ;
"RTN","DGMTU4",233,0)
GETINCOM(DFN,TDATE) ;
"RTN","DGMTU4",234,0)
 ;Makes sure Income Relations point to the right test
"RTN","DGMTU4",235,0)
 ;
"RTN","DGMTU4",236,0)
 ;Input:
"RTN","DGMTU4",237,0)
 ;  DFN
"RTN","DGMTU4",238,0)
 ;  TDATE -income year of test (uses $E(IVMMTDT,1,3))
"RTN","DGMTU4",239,0)
 ;Output: none.  Repoints Income Relations if necessary
"RTN","DGMTU4",240,0)
 ;
"RTN","DGMTU4",241,0)
 N MTNODE,RXNODE,IVMMTDT,CODE,ACTVIEN
"RTN","DGMTU4",242,0)
 Q:'$G(TDATE)
"RTN","DGMTU4",243,0)
 Q:'$G(DFN)
"RTN","DGMTU4",244,0)
 ;
"RTN","DGMTU4",245,0)
 S IVMMTDT=$E(TDATE,1,3)_"1231.9"
"RTN","DGMTU4",246,0)
 S (CODE,ACTVIEN)=""
"RTN","DGMTU4",247,0)
 S MTNODE=$$LST^DGMTU(DFN,IVMMTDT,1) I $E($P(MTNODE,"^",2),1,3)'=$E(IVMMTDT,1,3) S MTNODE=""
"RTN","DGMTU4",248,0)
 S RXNODE=$$LST^DGMTU(DFN,IVMMTDT,2) I $E($P(RXNODE,"^",2),1,3)'=$E(IVMMTDT,1,3) S RXNODE=""
"RTN","DGMTU4",249,0)
 ;
"RTN","DGMTU4",250,0)
 D
"RTN","DGMTU4",251,0)
 .;determine which test has the associated income relations
"RTN","DGMTU4",252,0)
 .;
"RTN","DGMTU4",253,0)
 .I +MTNODE S CODE=$P(MTNODE,"^",4) I CODE'="",("ACGPR"[CODE) S ACTVIEN=+MTNODE Q
"RTN","DGMTU4",254,0)
 .I +RXNODE S CODE=$P(RXNODE,"^",4) I CODE'="",("EMI"[CODE) S ACTVIEN=+RXNODE Q
"RTN","DGMTU4",255,0)
 .I +MTNODE S ACTVIEN=+MTNODE Q
"RTN","DGMTU4",256,0)
 .I +RXNODE S ACTVIEN=+RXNODE Q
"RTN","DGMTU4",257,0)
 I ACTVIEN,+MTNODE,+RXNODE D TRANSFER^DGMTU4(DFN,$S((ACTVIEN=+MTNODE):+RXNODE,1:+MTNODE),ACTVIEN)
"RTN","DGMTU4",258,0)
 Q
"RTN","DGMTU4",259,0)
 ;
"RTN","DGMTU4",260,0)
CHKPT(DFN) ;
"RTN","DGMTU4",261,0)
 ; Cross check the CURRENT MEANS TEST STATUS in the PATIENT File (#2) with the
"RTN","DGMTU4",262,0)
 ; primary means test in the ANNUAL MEANS TEST File (#408.31).  Update the 
"RTN","DGMTU4",263,0)
 ; CURRENT MEANS TEST STATUS if the fields are out of synch.
"RTN","DGMTU4",264,0)
 ;
"RTN","DGMTU4",265,0)
 N PATMT,DGMTI,DATA
"RTN","DGMTU4",266,0)
 ;
"RTN","DGMTU4",267,0)
 Q:$G(DFN)'>0
"RTN","DGMTU4",268,0)
 Q:'$D(^DPT(DFN))
"RTN","DGMTU4",269,0)
 S PATMT=$$GET1^DIQ(2,DFN,.14,"I")
"RTN","DGMTU4",270,0)
 S DGMTI=+$$LST^DGMTU(DFN)
"RTN","DGMTU4",271,0)
 S DATA(.14)=$P($G(^DGMT(408.31,DGMTI,0)),U,3)
"RTN","DGMTU4",272,0)
 Q:DATA(.14)=PATMT
"RTN","DGMTU4",273,0)
 ;
"RTN","DGMTU4",274,0)
 I $$UPD^DGENDBS(2,DFN,.DATA)
"RTN","DGMTU4",275,0)
 Q
"RTN","DGREG")
0^1^B47199763
"RTN","DGREG",1,0)
DGREG ;ALB/JDS,MRL/PJR/PHH-REGISTER PATIENT ; 8/24/05 1:40pm
"RTN","DGREG",2,0)
 ;;5.3;Registration;**1,32,108,147,149,182,245,250,513,425,533,574,563,624,658**;Aug 13, 1993
"RTN","DGREG",3,0)
START ;
"RTN","DGREG",4,0)
EN D LO^DGUTL S DGCLPR=""
"RTN","DGREG",5,0)
 N DGDIV
"RTN","DGREG",6,0)
 S DGDIV=$$PRIM^VASITE
"RTN","DGREG",7,0)
 S:DGDIV %ZIS("B")=$P($G(^DG(40.8,+DGDIV,"DEV")),U,1)
"RTN","DGREG",8,0)
 I $P(^DG(43,1,0),U,39) S %ZIS="NQ",%ZIS("A")="Select 1010 printer: " D ^%ZIS Q:POP  S (DGIO(10),DGIO("PRF"),DGIO("RT"),DGIO("HS"))=ION,DGASKDEV="" I $E(IOST,1,2)'["P-" W !,$C(7),"Not a printer" G DGREG
"RTN","DGREG",9,0)
 K %ZIS("B")
"RTN","DGREG",10,0)
 I '$D(DGIO),$P(^DG(43,1,0),U,30) S %ZIS="N",IOP="HOME" D ^%ZIS I $D(IOS),IOS,$D(^%ZIS(1,+IOS,99)),$D(^%ZIS(1,+^(99),0)) S Y=$P(^(0),U,1) W !,"Using closest printer ",Y,! F I=10,"PRF","RT","HS" S DGIO(I)=Y
"RTN","DGREG",11,0)
A D ENDREG($G(DFN))
"RTN","DGREG",12,0)
 W !! S DIC=2,DIC(0)="ALEQM",DLAYGO=2 K DIC("S"),DIC("B") D ^DIC K DLAYGO G Q1:Y<0 S (DFN,DA)=+Y,DGNEW=$P(Y,"^",3) N Y D PAUSE^DG10 D BEGINREG(DFN) I DGNEW D NEW^DGRP
"RTN","DGREG",13,0)
 ;
"RTN","DGREG",14,0)
 ;; ask to continue if patient died - DG*5.3*563 - pjr 10/12/04
"RTN","DGREG",15,0)
 S DOD="" I $G(DFN) S DOD=$P($G(^DPT(DFN,.35)),"^",1)
"RTN","DGREG",16,0)
 I DOD S Y=DOD,DGPME=0 D DIED^DGPMV I DGPME K DFN,DGRPOUT G A
"RTN","DGREG",17,0)
 ;
"RTN","DGREG",18,0)
 D CIRN
"RTN","DGREG",19,0)
 ;
"RTN","DGREG",20,0)
 I +$G(DGNEW) D
"RTN","DGREG",21,0)
 . ; query CMOR for Patient Record Flag Assignments if NEW patient and
"RTN","DGREG",22,0)
 . ; display results.
"RTN","DGREG",23,0)
 . I $$PRFQRY^DGPFAPI(DFN) D DISPPRF^DGPFAPI(DFN)
"RTN","DGREG",24,0)
 ;
"RTN","DGREG",25,0)
 D ROMQRY
"RTN","DGREG",26,0)
 ;
"RTN","DGREG",27,0)
 S (DGFC,CURR)=0
"RTN","DGREG",28,0)
 D:'$G(DGNEW) WARN S DA=DFN,DGFC="^1",VET=$S($D(^DPT(DFN,"VET")):^("VET")'="Y",1:0)
"RTN","DGREG",29,0)
 S %ZIS="N",IOP="HOME" D ^%ZIS S DGELVER=0 D EN^DGRPD I $D(DGRPOUT) D ENDREG($G(DFN)) D HL7A08^VAFCDD01 K DFN,DGRPOUT G A
"RTN","DGREG",30,0)
 D HINQ^DG10
"RTN","DGREG",31,0)
 I $D(^DIC(195.4,1,"UP")) I ^("UP") D ADM^RTQ3
"RTN","DGREG",32,0)
 D REG^IVMCQ($G(DFN))  ; send financial query  
"RTN","DGREG",33,0)
 G A1
"RTN","DGREG",34,0)
 ;
"RTN","DGREG",35,0)
RT I $D(^DIC(195.4,1,"UP")) I ^("UP") S $P(DGFC,U,1)=DIV D ADM^RTQ3
"RTN","DGREG",36,0)
 Q
"RTN","DGREG",37,0)
 ;
"RTN","DGREG",38,0)
A1 W !,"Do you want to ",$S(DGNEW:"enter",1:"edit")," Patient Data" S %=1 D YN^DICN D  G H:'%,CK:%'=1 S DGRPV=0 D EN1^DGRP G Q:'$D(DA)
"RTN","DGREG",39,0)
 .I +$G(DGNEW) Q
"RTN","DGREG",40,0)
 .I $$ADD^DGADDUTL($G(DFN)) ;
"RTN","DGREG",41,0)
 G CH
"RTN","DGREG",42,0)
PR W !!,"Is the patient currently being followed in a clinic for the same condition" S %=0 D YN^DICN G Q:%=-1
"RTN","DGREG",43,0)
 I '% W !?4,$C(7),"Enter 'Y' if the patient is being followed in clinic for condition for which",!?6,"registered, 'N' if not." G PR
"RTN","DGREG",44,0)
 S CURR=% G SEEN
"RTN","DGREG",45,0)
 ;
"RTN","DGREG",46,0)
CK S DGEDCN=1 D ^DGRPC
"RTN","DGREG",47,0)
CH S X=$S('$D(^DPT(DFN,.36)):1,$P(^(.36),"^",1)']"":1,1:0),X1=$S('$D(^DPT(DFN,.32)):1,$P(^(.32),"^",3)']"":1,1:0) I 'X,'X1 G CH1
"RTN","DGREG",48,0)
CH1 S DA=DFN G PR:'$D(^DPT("ADA",1,DA)) W !!,"There is still an open disposition--register aborted.",$C(7),$C(7) G Q
"RTN","DGREG",49,0)
SEEN W !!,"Is the patient to be examined in the medical center today" S %=1 D YN^DICN S SEEN=% G:%<0 Q I %'>0 W !!,"Enter 'Y' if the patient is to be examined today, 'N' if not.",$C(7) G SEEN
"RTN","DGREG",50,0)
ABIL D ^DGREGG
"RTN","DGREG",51,0)
ENR ; next line appears to be dead code.  left commented just to test.  mli 4/28/94
"RTN","DGREG",52,0)
 ;S DE=0 F I=0:0 S I=$O(^DPT(DA,"DE",I)) Q:'I  I $P(^(I,0),"^",3)'?7N Q  D PR:'DE S L=+$P($S($D(^SC(L,0)):^(0),1:""),"^",1)
"RTN","DGREG",53,0)
REG S (DIE,DIC)="^DPT("_DFN_",""DIS"",",%DT="PTEX",%DT("A")="Registration login date/time: NOW// "
"RTN","DGREG",54,0)
 W !,%DT("A") R ANS:DTIME S:'$T ANS="^" S:ANS="" ANS="N" S X=ANS G Q:ANS="^" S DA(1)=DFN D CHK^DIE(2.101,.01,"E",X,.RESULT) G REG:RESULT="^"!('$D(RESULT)),PR3:'(RESULT#1) S Y=RESULT
"RTN","DGREG",55,0)
 I (RESULT'="^") W "  ("_RESULT(0)_")"
"RTN","DGREG",56,0)
 S DINUM=9999999-RESULT
"RTN","DGREG",57,0)
 S (DFN1,Y1)=DINUM,APD=Y I $D(^DPT(DFN,"DIS",Y1)) W !!,"You must enter a date that does not exist.",$C(7),$C(7) G REG
"RTN","DGREG",58,0)
 G:$D(^DPT("ADA",1,DA)) CH1 L @(DIE_DINUM_")"):2 G:'$T MSG S:'($D(^DPT(DA(1),"DIS",0))#2) ^(0)="^2.101D^^" S DIC(0)="L",X=+Y D ^DIC
"RTN","DGREG",59,0)
 ;
"RTN","DGREG",60,0)
 ;SAVE OFF DATE/TIME OF REGISTRATION FOR HL7 V2.3 MESSAGING, IN VAFCDDT
"RTN","DGREG",61,0)
 S VAFCDDT=X
"RTN","DGREG",62,0)
 ;
"RTN","DGREG",63,0)
 S DA=DFN1,DIE("NO^")="",DA(1)=DFN,DP=2.101,DR="1///"_$S(SEEN=2:2,CURR=1:1,1:0)_";Q;2"_$S(CURR=1:"///3",1:"")_";2.1;3//"_$S($P(^DG(43,1,"GL"),"^",2):"",1:"/")_$S($D(^DG(40.8,+$P(^DG(43,1,"GL"),"^",3),0)):$P(^(0),"^",1),1:"")_";4////"_DUZ
"RTN","DGREG",64,0)
 D EL K DIC("A") N DGNDLOCK S DGNDLOCK=DIE_DFN1_")" L +@DGNDLOCK:2 G:'$T MSG D ^DIE L -@DGNDLOCK
"RTN","DGREG",65,0)
 I $D(DTOUT) D  G Q
"RTN","DGREG",66,0)
 .K DTOUT
"RTN","DGREG",67,0)
 .N DA,DIK
"RTN","DGREG",68,0)
 .S DA(1)=DFN,DA=DFN1,DIK="^DPT("_DFN_",""DIS"","
"RTN","DGREG",69,0)
 .D ^DIK
"RTN","DGREG",70,0)
 .W !!?5,"User Time-out.  Required registration data could be missing."
"RTN","DGREG",71,0)
 .W !,?5,"This registration has been deleted."
"RTN","DGREG",72,0)
 ; check whether facility applying to (division) is inactive
"RTN","DGREG",73,0)
 I '$$DIVCHK^DGREGFAC(DFN,DFN1) G CONT
"RTN","DGREG",74,0)
ASKDIV W !!?5,"The facility chosen either has no pointer to an Institution"
"RTN","DGREG",75,0)
 W !?5,"file record or the Institution file record is inactive."
"RTN","DGREG",76,0)
 W !?5,"Please choose another division."
"RTN","DGREG",77,0)
 S DA=DFN1,DIE("NO^")="",DA(1)=DFN,DP=2.101,DR="3" D ^DIE
"RTN","DGREG",78,0)
 I $$DIVCHK^DGREGFAC(DFN,DFN1) G ASKDIV
"RTN","DGREG",79,0)
CONT ; continue
"RTN","DGREG",80,0)
 S DGXXXD=1 D EL^DGREGE I $P(^DPT(DFN,"DIS",DFN1,0),"^",3)=4 S DA=DFN,DIE="^DPT(",DR=".368;.369" D ^DIE S DIE="^DPT("_DFN_",""DIS"",",DA(1)=DFN,DA=DFN1
"RTN","DGREG",81,0)
 S DA=DFN,DR="[DGREG]",DIE="^DPT(" D ^DIE K DIE("NO^")
"RTN","DGREG",82,0)
 I $D(^DPT(DFN,"DIS",DFN1,2)),$P(^(2),"^",1)="Y" S DIE="^DPT(",DR="[DG EMPLOYER]",DA=DFN D ^DIE
"RTN","DGREG",83,0)
 G ^DGREG0
"RTN","DGREG",84,0)
PR2 W !!,"You can only enter new registrations through this option.",$C(7),$C(7) G REG
"RTN","DGREG",85,0)
PR3 W !!,"Time is required to register the patient.",!!,$C(7),$C(7) G REG
"RTN","DGREG",86,0)
H W !?5,"Enter 'YES' to enter/edit registration data or 'NO' to continue." G A1
"RTN","DGREG",87,0)
Q K DG,DQ G Q1^DGREG0
"RTN","DGREG",88,0)
Q1 K DGIO,DGASKDEV,DGFC,DGCLRP,CURR,DGELVER,DGNEW Q
"RTN","DGREG",89,0)
EL S DR=DR_";13//" I $D(^DPT(DFN,.36)),$D(^DIC(8,+^(.36),0)) S DR=DR_$P(^(0),"^",1) Q
"RTN","DGREG",90,0)
 S DR=DR_"HUMANITARIAN EMERGENCY" Q
"RTN","DGREG",91,0)
FEE S DGRPFEE=1 D DGREG K DGRPFEE G Q1
"RTN","DGREG",92,0)
 ;
"RTN","DGREG",93,0)
WARN I $S('$D(^DPT(DFN,.1)):0,$P(^(.1),"^",1)']"":0,1:1) W !,$C(7),"***PATIENT IS CURRENTLY AN INPATIENT***",! H 2
"RTN","DGREG",94,0)
 I $S('$D(^DPT(DFN,.107)):0,$P(^(.107),"^",1)']"":0,1:1) W !,$C(7),"***PATIENT IS CURRENTLY A LODGER***",! H 2
"RTN","DGREG",95,0)
 Q
"RTN","DGREG",96,0)
MSG W !,"Another user is editing, try later ..." G Q
"RTN","DGREG",97,0)
 ;
"RTN","DGREG",98,0)
BEGINREG(DFN) ;
"RTN","DGREG",99,0)
 ;Description: This is called at the beginning of the registration process.
"RTN","DGREG",100,0)
 ;Concurrent processes can check the lock to determine if the patient is
"RTN","DGREG",101,0)
 ;currently being registered.
"RTN","DGREG",102,0)
 ;
"RTN","DGREG",103,0)
 Q:'$G(DFN) 0
"RTN","DGREG",104,0)
 I $$QRY^DGENQRY(DFN) W !!,"Enrollment/Eligibility Query sent ...",!!
"RTN","DGREG",105,0)
 L +^TMP(DFN,"REGISTRATION IN PROGRESS"):1
"RTN","DGREG",106,0)
 I $$LOCK^DGENPTA1(DFN) ;try to lock the patient record
"RTN","DGREG",107,0)
 Q
"RTN","DGREG",108,0)
 ;
"RTN","DGREG",109,0)
ENDREG(DFN) ;
"RTN","DGREG",110,0)
 ;Description: releases the lock obtained by calling BEGINREG.
"RTN","DGREG",111,0)
 ;
"RTN","DGREG",112,0)
 Q:'$G(DFN)
"RTN","DGREG",113,0)
 L -^TMP(DFN,"REGISTRATION IN PROGRESS")
"RTN","DGREG",114,0)
 D UNLOCK^DGENPTA1(DFN)
"RTN","DGREG",115,0)
 Q
"RTN","DGREG",116,0)
 ;
"RTN","DGREG",117,0)
IFREG(DFN) ;
"RTN","DGREG",118,0)
 ;Description: tests whether the lock set by BEGINREG is set
"RTN","DGREG",119,0)
 ;
"RTN","DGREG",120,0)
 ;Input:  DFN
"RTN","DGREG",121,0)
 ;Output:
"RTN","DGREG",122,0)
 ;      Function Value = 1 if lock is set, 0 otherwise
"RTN","DGREG",123,0)
 ;
"RTN","DGREG",124,0)
 N RETURN
"RTN","DGREG",125,0)
 Q:'$G(DFN) 0
"RTN","DGREG",126,0)
 L +^TMP(DFN,"REGISTRATION IN PROGRESS"):1
"RTN","DGREG",127,0)
 S RETURN='$T
"RTN","DGREG",128,0)
 L -^TMP(DFN,"REGISTRATION IN PROGRESS")
"RTN","DGREG",129,0)
 Q RETURN
"RTN","DGREG",130,0)
 Q
"RTN","DGREG",131,0)
CIRN ;MPI QUERY
"RTN","DGREG",132,0)
 ;check to see if CIRN PD/MPI is installed
"RTN","DGREG",133,0)
 N X S X="MPIFAPI" X ^%ZOSF("TEST") Q:'$T
"RTN","DGREG",134,0)
 K MPIFRTN
"RTN","DGREG",135,0)
 D MPIQ^MPIFAPI(DFN)
"RTN","DGREG",136,0)
 K MPIFRTN
"RTN","DGREG",137,0)
 Q
"RTN","DGREG",138,0)
ROMQRY ;
"RTN","DGREG",139,0)
 I +$G(DGNEW) D
"RTN","DGREG",140,0)
 . ; query LST for Patient Demographic Information if NEW patient and
"RTN","DGREG",141,0)
 . ; file into patient's record.
"RTN","DGREG",142,0)
 . N A
"RTN","DGREG",143,0)
 . I $$ROMQRY^DGROAPI(DFN) D
"RTN","DGREG",144,0)
 . . ;display busy message to interactive users
"RTN","DGREG",145,0)
 . .S DGMSG(1)="Data retrieval from LST site has been completed successfully"
"RTN","DGREG",146,0)
 . .S DGMSG(2)="Thank you for your patience."
"RTN","DGREG",147,0)
 . .D EN^DDIOL(.DGMSG) R A:5
"RTN","DGREG",148,0)
 . E  D
"RTN","DGREG",149,0)
 . . ;display busy message to interactive users
"RTN","DGREG",150,0)
 . .S DGMSG(1)="Data retrieval from LST site has not been successful."
"RTN","DGREG",151,0)
 . .S DGMSG(2)="Please continue the Registration Process."
"RTN","DGREG",152,0)
 . .D EN^DDIOL(.DGMSG) R A:5
"RTN","DGREG",153,0)
 . ;
"RTN","DGREG",154,0)
 Q
"RTN","DGREGAED")
0^7^B17895648
"RTN","DGREGAED",1,0)
DGREGAED ;ALB/DW/PHH - Address Edit API; 9/1/2005
"RTN","DGREGAED",2,0)
 ;;5.3;Registration;**522,560,658**;Aug 13, 1993
"RTN","DGREGAED",3,0)
EN(DFN,FLG) ;Entry point
"RTN","DGREGAED",4,0)
 ;Input: 
"RTN","DGREGAED",5,0)
 ;  DFN (required) - Interal Entry # of Patient File (#2)
"RTN","DGREGAED",6,0)
 ;  FLG (optional) - Flags of 1 or 0; if null, 0 is assumed. Details:
"RTN","DGREGAED",7,0)
 ;    FLG(1) - if 1, let user edit phone numbers (field #.131 and #.132)
"RTN","DGREGAED",8,0)
 ;    FLG(2) - if 1, dispaly before & after address for user confirmation
"RTN","DGREGAED",9,0)
 K EASZIPLK
"RTN","DGREGAED",10,0)
 N DGINPUT
"RTN","DGREGAED",11,0)
 N I,X,Y
"RTN","DGREGAED",12,0)
 I $G(DFN)="" Q
"RTN","DGREGAED",13,0)
 I ($G(DFN)'?.N) Q
"RTN","DGREGAED",14,0)
 S FLG(1)=$G(FLG(1)),FLG(2)=$G(FLG(2))
"RTN","DGREGAED",15,0)
 D INPUT(.DGINPUT,DFN)
"RTN","DGREGAED",16,0)
 I $G(DGINPUT)=-1 Q
"RTN","DGREGAED",17,0)
 I $G(FLG(2))=1 D COMPARE(.DGINPUT,DFN)
"RTN","DGREGAED",18,0)
 I '$$CONFIRM() W !,"Change aborted." D EOP Q
"RTN","DGREGAED",19,0)
 N DGPRIOR
"RTN","DGREGAED",20,0)
 D GETPRIOR^DGADDUTL(DFN,.DGPRIOR)
"RTN","DGREGAED",21,0)
 D SAVE(.DGINPUT,DFN)
"RTN","DGREGAED",22,0)
 I +$G(DGNEW) Q
"RTN","DGREGAED",23,0)
 Q:'$$FILEYN^DGADDUTL(.DGPRIOR,.DGINPUT)
"RTN","DGREGAED",24,0)
 D GETUPDTS^DGADDUTL(DFN,.DGINPUT)
"RTN","DGREGAED",25,0)
 D UPDADDLG^DGADDUTL(DFN,.DGPRIOR,.DGINPUT)
"RTN","DGREGAED",26,0)
 Q
"RTN","DGREGAED",27,0)
INPUT(DGINPUT,DFN) ;Let user input address changes
"RTN","DGREGAED",28,0)
 ;Output: DGINPUT(field#)=external^internal(if any)
"RTN","DGREGAED",29,0)
 N DIR,X,Y,DA,DGR,DTOUT,DUOUT,DIROUT,DGN,POP
"RTN","DGREGAED",30,0)
 S POP=0
"RTN","DGREGAED",31,0)
 F DGN=.111,.112,.113,.1112,.131,.132,.121 Q:POP  D
"RTN","DGREGAED",32,0)
 . I ($G(DGINPUT(.111))="")&((DGN=.112)!(DGN=.113)) Q
"RTN","DGREGAED",33,0)
 . I ($G(DGINPUT(.112))="")&(DGN=.113) Q
"RTN","DGREGAED",34,0)
 . I ($G(FLG(1))'=1)&((DGN=.131)!(DGN=.132)) Q
"RTN","DGREGAED",35,0)
 . I DGN=.1112 D  Q
"RTN","DGREGAED",36,0)
 .. D EN^DGREGAZL(.DGR,DFN)
"RTN","DGREGAED",37,0)
 .. I $G(DGR)=-1 S POP=1 Q
"RTN","DGREGAED",38,0)
 .. N DGM F DGM=.1112,.114,.115,.117 S DGINPUT(DGM)=$G(DGR(DGM))
"RTN","DGREGAED",39,0)
AGN . S DIR(0)=2_","_DGN
"RTN","DGREGAED",40,0)
 . S DA=DFN
"RTN","DGREGAED",41,0)
 . D ^DIR
"RTN","DGREGAED",42,0)
 . I $D(DTOUT) S POP=1 Q
"RTN","DGREGAED",43,0)
 . I $D(DUOUT)!$D(DIROUT) D UPCT G AGN
"RTN","DGREGAED",44,0)
 . I DGN'=.121 S DGINPUT(DGN)=$G(Y)
"RTN","DGREGAED",45,0)
 . I DGN=.121 D
"RTN","DGREGAED",46,0)
 .. I $P($G(Y),U)=$$GET1^DIQ(2,DFN_",",DGN,"I") D
"RTN","DGREGAED",47,0)
 ... S DGINPUT(DGN)=$$GET1^DIQ(2,DFN_",",DGN)_U_$P($G(Y),U)
"RTN","DGREGAED",48,0)
 .. I $P($G(Y),U)'=$$GET1^DIQ(2,DFN_",",DGN,"I") D
"RTN","DGREGAED",49,0)
 ... S DGINPUT(DGN)=$P($G(Y(0)),U)_U_$G(Y)
"RTN","DGREGAED",50,0)
 I $G(POP)=1 S DGINPUT=-1
"RTN","DGREGAED",51,0)
 Q
"RTN","DGREGAED",52,0)
COMPARE(DGINPUT,DFN) ;Display before & after address fileds.
"RTN","DGREGAED",53,0)
 N DGCURR,DGN,DGCMP,DGM,DGCNTY,DGCIEN,DGST
"RTN","DGREGAED",54,0)
 D GETS^DIQ(2,DFN_",",".111;.112;.113;.114;.115;.117;.1112;.131;.132;.121","EI","DGCURR")
"RTN","DGREGAED",55,0)
 F DGN=.111,.112,.113,.114,.115,.117,.1112,.131,.132,.121 D
"RTN","DGREGAED",56,0)
 . S DGCMP("OLD",DGN)=$G(DGCURR(2,DFN_",",DGN,"E"))
"RTN","DGREGAED",57,0)
 S DGCIEN=$G(DGCURR(2,DFN_",",.117,"I"))
"RTN","DGREGAED",58,0)
 S DGST=$G(DGCURR(2,DFN_",",.115,"I"))
"RTN","DGREGAED",59,0)
 S DGCNTY=$$CNTY^DGREGAZL(DGST,DGCIEN)
"RTN","DGREGAED",60,0)
 I DGCNTY=-1 S DGCNTY=""
"RTN","DGREGAED",61,0)
 S DGCMP("OLD",.117)=$P(DGCNTY,U)_" "_$P(DGCNTY,U,3)
"RTN","DGREGAED",62,0)
 M DGCMP("NEW")=DGINPUT
"RTN","DGREGAED",63,0)
 S DGCNTY=$P($G(DGCMP("NEW",.117)),U)_" "_$P($G(DGCMP("NEW",.117)),U,3)
"RTN","DGREGAED",64,0)
 S DGCMP("NEW",.117)=DGCNTY
"RTN","DGREGAED",65,0)
 I ($L(DGCMP("NEW",.1112))>5)&($P(DGCMP("NEW",.1112),"-",2)="") S DGCMP("NEW",.1112)=$E(DGCMP("NEW",.1112),1,5)_"-"_$E(DGCMP("NEW",.1112),6,9)
"RTN","DGREGAED",66,0)
 F DGM="OLD","NEW" D
"RTN","DGREGAED",67,0)
 . W !,?2,"[",DGM," ADDRESS]"
"RTN","DGREGAED",68,0)
 . W ?16,$P($G(DGCMP(DGM,.111)),U)
"RTN","DGREGAED",69,0)
 . I $P($G(DGCMP(DGM,.112)),U)'="" W !,?16,$P($G(DGCMP(DGM,.112)),U)
"RTN","DGREGAED",70,0)
 . I $P($G(DGCMP(DGM,.113)),U)'="" W !,?16,$P($G(DGCMP(DGM,.113)),U)
"RTN","DGREGAED",71,0)
 . W !,?16,$P($G(DGCMP(DGM,.114)),U)
"RTN","DGREGAED",72,0)
 . W:($P($G(DGCMP(DGM,.114)),U)'="")!($P($G(DGCMP(DGM,.115)),U)'="") ","
"RTN","DGREGAED",73,0)
 . W $P($G(DGCMP(DGM,.115)),U)
"RTN","DGREGAED",74,0)
 . W " ",$G(DGCMP(DGM,.1112))
"RTN","DGREGAED",75,0)
 . I $P($G(DGCMP(DGM,.117)),U)'="" W !,?6,"  County: ",$P($G(DGCMP(DGM,.117)),U)
"RTN","DGREGAED",76,0)
 . I $G(FLG(1))=1 D
"RTN","DGREGAED",77,0)
 .. W !,?6,"   Phone: ",?16,$P($G(DGCMP(DGM,.131)),U)
"RTN","DGREGAED",78,0)
 .. W !,?6,"  Office: ",?16,$P($G(DGCMP(DGM,.132)),U)
"RTN","DGREGAED",79,0)
 . W !,?6,"Bad Addr: ",?16,$P($G(DGCMP(DGM,.121)),U)
"RTN","DGREGAED",80,0)
 . W !
"RTN","DGREGAED",81,0)
 Q
"RTN","DGREGAED",82,0)
CONFIRM() ;Confirm if user wants to save the change
"RTN","DGREGAED",83,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT
"RTN","DGREGAED",84,0)
 S DIR(0)="Y"
"RTN","DGREGAED",85,0)
 S DIR("A")="Are you sure that you want to save the above changes"
"RTN","DGREGAED",86,0)
 S DIR("?")="Please answer Y for YES or N for NO."
"RTN","DGREGAED",87,0)
 D ^DIR
"RTN","DGREGAED",88,0)
 I $D(DTOUT)!($G(Y)=0) Q 0
"RTN","DGREGAED",89,0)
 I $D(DUOUT)!$D(DIROUT) Q 0
"RTN","DGREGAED",90,0)
 Q 1
"RTN","DGREGAED",91,0)
SAVE(DGINPUT,DFN) ;Save changes
"RTN","DGREGAED",92,0)
 N DGN,DGER,DGM
"RTN","DGREGAED",93,0)
 S DGER=0
"RTN","DGREGAED",94,0)
 F DGN=.111,.112,.113,.131,.132,.1112,.114,.115,.117,.121 D
"RTN","DGREGAED",95,0)
 . I ($G(FLG(1))'=1)&((DGN=.131)!(DGN=.132)) Q
"RTN","DGREGAED",96,0)
 . N DGCODE,DGNAME,FDA,MSG
"RTN","DGREGAED",97,0)
 . S DGCODE=$P($G(DGINPUT(DGN)),U,2)
"RTN","DGREGAED",98,0)
 . S DGNAME=$P($G(DGINPUT(DGN)),U)
"RTN","DGREGAED",99,0)
 . S FDA(2,DFN_",",DGN)=$S(DGCODE:DGCODE,1:DGNAME)
"RTN","DGREGAED",100,0)
 . D FILE^DIE($S(DGCODE:"",1:"E"),"FDA","MSG")
"RTN","DGREGAED",101,0)
 . I $D(MSG) D
"RTN","DGREGAED",102,0)
 .. S DGM="",DGER=1
"RTN","DGREGAED",103,0)
 .. W !,"Please review the saved changes!!",!
"RTN","DGREGAED",104,0)
 .. F  S DGM=$O(MSG("DIERR",1,"TEXT",DGM)) Q:DGM=""  D
"RTN","DGREGAED",105,0)
 ... W $G(MSG("DIERR",1,"TEXT",DGM))
"RTN","DGREGAED",106,0)
 I $G(DGER)=0 W !,"Change saved."
"RTN","DGREGAED",107,0)
 D EOP
"RTN","DGREGAED",108,0)
 Q
"RTN","DGREGAED",109,0)
EOP ;End of page prompt
"RTN","DGREGAED",110,0)
 N DIR,DTOUT,DUOUT,DIROUT,X,Y
"RTN","DGREGAED",111,0)
 S DIR(0)="E"
"RTN","DGREGAED",112,0)
 S DIR("A")="Press ENTER to continue"
"RTN","DGREGAED",113,0)
 D ^DIR
"RTN","DGREGAED",114,0)
 Q
"RTN","DGREGAED",115,0)
UPCT ;Indicate "^" or "^^" are unacceptable inputs.
"RTN","DGREGAED",116,0)
 W !,"EXIT NOT ALLOWED ??"
"RTN","DGREGAED",117,0)
 Q
"VER")
8.0^22.0
"^DD",2,2,.119,0)
ADDRESS CHANGE SOURCE^S^HEC:HEC;VAMC:VAMC;HBSC:HBSC;NCOA:NCOA;BVA:BVA;VAINS:VAINS;USPS:USPS;^.11;14^Q
"^DD",2,2,.119,1,0)
^.1^^-1
"^DD",2,2,.119,1,2,0)
^^TRIGGER^2^.12
"^DD",2,2,.119,1,2,1)
X ^DD(2,.119,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^DPT(D0,.11)):^(.11),1:"") S X=$P(Y(1),U,15),X=X S DIU=X K Y S X=DIV S X=$$GETSITE^DGMTU4($G(DUZ)) I X S X=$O(^DIC(4,"D",X,"")) X ^DD(2,.119,1,2,1.4)
"^DD",2,2,.119,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(2,.119,0)),U,3) S X='$P($P(Y(1),$C(59)_Y(0)_":",2),$C(59))'="VAMC"
"^DD",2,2,.119,1,2,1.4)
S DIH=$G(^DPT(DIV(0),.11)),DIV=X S $P(^(.11),U,15)=DIV,DIH=2,DIG=.12 D ^DICR
"^DD",2,2,.119,1,2,2)
X ^DD(2,.119,1,2,2.3) I X S X=DIV S Y(1)=$S($D(^DPT(D0,.11)):^(.11),1:"") S X=$P(Y(1),U,15),X=X S DIU=X K Y S X=DIV S X=$$GETSITE^DGMTU4($G(DUZ)) I X S X=$O(^DIC(4,"D",X,"")) X ^DD(2,.119,1,2,2.4)
"^DD",2,2,.119,1,2,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$P($G(^DD(2,.119,0)),U,3),Y(1)=$S($D(^DPT(D0,.11)):^(.11),1:"") S X='$P($P(Y(2),$C(59)_$P(Y(1),U,14)_":",2),$C(59))'="VAMC"
"^DD",2,2,.119,1,2,2.4)
S DIH=$G(^DPT(DIV(0),.11)),DIV=X S $P(^(.11),U,15)=DIV,DIH=2,DIG=.12 D ^DICR
"^DD",2,2,.119,1,2,"%D",0)
^^4^4^3050915^
"^DD",2,2,.119,1,2,"%D",1,0)
This cross-reference will trigger the population of the ADDRESS CHANGE
"^DD",2,2,.119,1,2,"%D",2,0)
SITE field with the appropriate station number if the ADDRESS CHANGE
"^DD",2,2,.119,1,2,"%D",3,0)
SOURCE equals "VAMC".  The Address Change Site field should be overwritten
"^DD",2,2,.119,1,2,"%D",4,0)
for cases where the site would be incorrect (i.e. uploading Z05 message).
"^DD",2,2,.119,1,2,"CREATE CONDITION")
'ADDRESS CHANGE SOURCE'="VAMC"
"^DD",2,2,.119,1,2,"CREATE VALUE")
S X=$$GETSITE^DGMTU4($G(DUZ)) I X S X=$O(^DIC(4,"D",X,""))
"^DD",2,2,.119,1,2,"DELETE CONDITION")
'ADDRESS CHANGE SOURCE'="VAMC"
"^DD",2,2,.119,1,2,"DELETE VALUE")
S X=$$GETSITE^DGMTU4($G(DUZ)) I X S X=$O(^DIC(4,"D",X,""))
"^DD",2,2,.119,1,2,"DT")
3050915
"^DD",2,2,.119,1,2,"FIELD")
ADDRESS CHANGE SITE
"^DD",2,2,.119,3)
Please enter the source of the address change.
"^DD",2,2,.119,5,1,0)
2^.118^1
"^DD",2,2,.119,9)
^
"^DD",2,2,.119,21,0)
^.001^1^1^3050916^^^^
"^DD",2,2,.119,21,1,0)
This field will hold the source of the Last address change.
"^DD",2,2,.119,"DT")
3050915
**END**
**END**
