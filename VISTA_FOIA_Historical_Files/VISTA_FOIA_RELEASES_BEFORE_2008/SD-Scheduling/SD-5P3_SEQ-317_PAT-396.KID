Released SD*5.3*396 SEQ #317
Extracted from mail message
**KIDS**:SD*5.3*396^

**INSTALL NAME**
SD*5.3*396
"BLD",5768,0)
SD*5.3*396^SCHEDULING^0^3041020^y
"BLD",5768,1,0)
^^1^1^3041014^
"BLD",5768,1,1,0)
Action required for inpatient appointments.
"BLD",5768,4,0)
^9.64PA^^
"BLD",5768,"ABPKG")
n
"BLD",5768,"KRN",0)
^9.67PA^8989.52^19
"BLD",5768,"KRN",.4,0)
.4
"BLD",5768,"KRN",.401,0)
.401
"BLD",5768,"KRN",.402,0)
.402
"BLD",5768,"KRN",.403,0)
.403
"BLD",5768,"KRN",.5,0)
.5
"BLD",5768,"KRN",.84,0)
.84
"BLD",5768,"KRN",3.6,0)
3.6
"BLD",5768,"KRN",3.8,0)
3.8
"BLD",5768,"KRN",9.2,0)
9.2
"BLD",5768,"KRN",9.8,0)
9.8
"BLD",5768,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",5768,"KRN",9.8,"NM",1,0)
SDSTAT^^0^B17087769
"BLD",5768,"KRN",9.8,"NM",2,0)
SD53396P^^0^B6676901
"BLD",5768,"KRN",9.8,"NM","B","SD53396P",2)

"BLD",5768,"KRN",9.8,"NM","B","SDSTAT",1)

"BLD",5768,"KRN",19,0)
19
"BLD",5768,"KRN",19,"NM",0)
^9.68A^^
"BLD",5768,"KRN",19.1,0)
19.1
"BLD",5768,"KRN",101,0)
101
"BLD",5768,"KRN",409.61,0)
409.61
"BLD",5768,"KRN",771,0)
771
"BLD",5768,"KRN",870,0)
870
"BLD",5768,"KRN",8989.51,0)
8989.51
"BLD",5768,"KRN",8989.52,0)
8989.52
"BLD",5768,"KRN",8994,0)
8994
"BLD",5768,"KRN","B",.4,.4)

"BLD",5768,"KRN","B",.401,.401)

"BLD",5768,"KRN","B",.402,.402)

"BLD",5768,"KRN","B",.403,.403)

"BLD",5768,"KRN","B",.5,.5)

"BLD",5768,"KRN","B",.84,.84)

"BLD",5768,"KRN","B",3.6,3.6)

"BLD",5768,"KRN","B",3.8,3.8)

"BLD",5768,"KRN","B",9.2,9.2)

"BLD",5768,"KRN","B",9.8,9.8)

"BLD",5768,"KRN","B",19,19)

"BLD",5768,"KRN","B",19.1,19.1)

"BLD",5768,"KRN","B",101,101)

"BLD",5768,"KRN","B",409.61,409.61)

"BLD",5768,"KRN","B",771,771)

"BLD",5768,"KRN","B",870,870)

"BLD",5768,"KRN","B",8989.51,8989.51)

"BLD",5768,"KRN","B",8989.52,8989.52)

"BLD",5768,"KRN","B",8994,8994)

"BLD",5768,"QUES",0)
^9.62^^
"BLD",5768,"REQB",0)
^9.611^1^1
"BLD",5768,"REQB",1,0)
SD*5.3*132^2
"BLD",5768,"REQB","B","SD*5.3*132",1)

"MBREQ")
0
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813
"PKG",16,22,1,"PAH",1,0)
396^3041020
"PKG",16,22,1,"PAH",1,1,0)
^^1^1^3041020
"PKG",16,22,1,"PAH",1,1,1,0)
Action required for inpatient appointments.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","SD53396P")
0^2^B6676901
"RTN","SD53396P",1,0)
SD53396P ;VMP/RB - POST INIT FOR PATCH SD*5.3*396 ;09/30/04
"RTN","SD53396P",2,0)
 ;;5.3;Scheduling;**396**;AUG 13,1993
"RTN","SD53396P",3,0)
 ;
"RTN","SD53396P",4,0)
 ;Post init routine to locate ^SCE encounters that have a app't
"RTN","SD53396P",5,0)
 ;status of pending action (14), BUT a status of 'I' in
"RTN","SD53396P",6,0)
 ;the associated ^DPT(DFN,"S") node.  The app't status will be
"RTN","SD53396P",7,0)
 ;modified to '8' if condition found.
"RTN","SD53396P",8,0)
TASK ;
"RTN","SD53396P",9,0)
 ; Task the initial bad data determination as background process
"RTN","SD53396P",10,0)
 ;
"RTN","SD53396P",11,0)
 D NOW^%DTC
"RTN","SD53396P",12,0)
 ;Task process
"RTN","SD53396P",13,0)
 S ZTDTH=%H
"RTN","SD53396P",14,0)
 S ZTIO=""
"RTN","SD53396P",15,0)
 S ZTRTN="INIT^SD53396P",ZTDESC="^SCE O/P encounter status check for inpatients"
"RTN","SD53396P",16,0)
 D ^%ZTLOAD K ZTDTH,ZTRTN,ZTIO,ZTDESC
"RTN","SD53396P",17,0)
 I $D(ZTSK)&('$D(ZTQUEUED)) D BMES^XPDUTL("Task Queued!")
"RTN","SD53396P",18,0)
 Q
"RTN","SD53396P",19,0)
INIT ;
"RTN","SD53396P",20,0)
 ; Drives through ^SCE and finds all invalid entries.
"RTN","SD53396P",21,0)
 ; If entries are found to be invalid the entry is corrected
"RTN","SD53396P",22,0)
 ; and stored in temp print file
"RTN","SD53396P",23,0)
 ;
"RTN","SD53396P",24,0)
 N IEN,DFN,DATA,ESTS,SDAT,U,PDATE,SCHD,SSTS
"RTN","SD53396P",25,0)
 D NOW^%DTC
"RTN","SD53396P",26,0)
 S PDATE=+%H+60,U="^"
"RTN","SD53396P",27,0)
 S PDATE=$$HTFM^XLFDT(PDATE)
"RTN","SD53396P",28,0)
 L +^XTMP("SD53396P",0):1 I '$T Q
"RTN","SD53396P",29,0)
 K ^XTMP("SD53396P")
"RTN","SD53396P",30,0)
 S ^XTMP("SD53396P",0)=PDATE_"^"_X_"^"_"SCE encounter Clean Utility"
"RTN","SD53396P",31,0)
 L -^XTMP("SD53396P",0)
"RTN","SD53396P",32,0)
 S IEN=0
"RTN","SD53396P",33,0)
 F  S IEN=$O(^SCE(IEN)) Q:IEN=""!'IEN  D
"RTN","SD53396P",34,0)
 .S DATA=$G(^SCE(IEN,0)),SDAT=+$E($P(DATA,U),1,12),DFN=$P(DATA,U,2),ESTS=$P(DATA,U,12)
"RTN","SD53396P",35,0)
 .Q:ESTS'=14!'DFN
"RTN","SD53396P",36,0)
 .S SCHD=$G(^DPT(DFN,"S",SDAT,0)),SSTS=$P(SCHD,U,2)
"RTN","SD53396P",37,0)
 .Q:SSTS'="I"
"RTN","SD53396P",38,0)
 .S ^XTMP("SD53396P",IEN,0)=DFN_"^"_SDAT_"^"_ESTS_"^"_SSTS,^XTMP("SD53396P",IEN,1)=DATA,^XTMP("SD53396P",IEN,2)=SCHD
"RTN","SD53396P",39,0)
 .S $P(^SCE(IEN,0),U,12)=8
"RTN","SD53396P",40,0)
 .W !,IEN,?15,DFN,?30,SDAT,?50,ESTS,"/",SSTS
"RTN","SD53396P",41,0)
 S ZTREQ="@",^XTMP("SD53396P")="@"
"RTN","SD53396P",42,0)
 Q
"RTN","SD53396P",43,0)
REPORT ;
"RTN","SD53396P",44,0)
 ; Reports the entries that are have been cleaned up by the cleaning process
"RTN","SD53396P",45,0)
 ;
"RTN","SD53396P",46,0)
 I '$D(^XTMP("SD53396P")) W !!,"COMPILE AUDIT NOT RUN" Q
"RTN","SD53396P",47,0)
 I $G(^XTMP("SD53396P"))'="@" W !!,"COMPILE NOT COMPLETED" Q
"RTN","SD53396P",48,0)
 N POP,REC,DATA
"RTN","SD53396P",49,0)
 D ^%ZIS
"RTN","SD53396P",50,0)
 Q:POP
"RTN","SD53396P",51,0)
 I '$O(^XTMP("SD53396P",0)) W !!,"** NO ERRORS DETECTED **" Q
"RTN","SD53396P",52,0)
 W !!,"List of entries that SD*5.3*396 has determined to be incorrect AND FIXED",!!
"RTN","SD53396P",53,0)
 W "IEN",?10,"DFN",?20,"SCHED DT",?34,"STS",!
"RTN","SD53396P",54,0)
 S REC=0
"RTN","SD53396P",55,0)
 F  S REC=$O(^XTMP("SD53396P",REC)) Q:REC=""  D
"RTN","SD53396P",56,0)
 .S DATA=^XTMP("SD53396P",REC,0)
"RTN","SD53396P",57,0)
 .W !,REC,?10,$P(DATA,U),?20,$P(DATA,U,2),?34,$P(DATA,U,3),"/",$P(DATA,U,4),?40,$P(^DPT($P(DATA,U),0),U)
"RTN","SD53396P",58,0)
 . W !,?3,"SCE: ",$E(^XTMP("SD53396P",REC,1),1,70)
"RTN","SD53396P",59,0)
 . W !,?3,"DPT: ",$E(^XTMP("SD53396P",REC,2),1,70)
"RTN","SD53396P",60,0)
 Q
"RTN","SDSTAT")
0^1^B17087769
"RTN","SDSTAT",1,0)
SDSTAT ;MJK/ALB - Appt Status Update Protocol for ADT ; 7/14/92
"RTN","SDSTAT",2,0)
 ;;5.3;Scheduling;**31,132,396**;Aug 13, 1993
"RTN","SDSTAT",3,0)
 ;
"RTN","SDSTAT",4,0)
EN ; -- main entry point called by ADT event driver
"RTN","SDSTAT",5,0)
 ; -- process adm and d/c only
"RTN","SDSTAT",6,0)
 I '$D(^UTILITY("DGPM",$J,1)),'$D(^(3)) G ENQ
"RTN","SDSTAT",7,0)
 I '$O(^DPT(DFN,"S",0)) G ENQ
"RTN","SDSTAT",8,0)
 N SDBEG,SDEND,PREV,AFTER,SDP,SDA,SDTYPE,SDCA K ^TMP("SDSTAT",$J),^TMP("SDOE STAT",$J)
"RTN","SDSTAT",9,0)
 W:'$G(DGQUIET) !!,"Updating appointment status..."
"RTN","SDSTAT",10,0)
 S ^TMP("SDSTAT",$J,0)=0,^TMP("SDOE STAT",$J,0)=0
"RTN","SDSTAT",11,0)
 F SDTYPE=1,3 S SDMVT="" F  S SDMVT=$O(^UTILITY("DGPM",$J,SDTYPE,SDMVT)) Q:'SDMVT  S SDP=$G(^(SDMVT,"P")),SDA=$G(^("A")) D
"RTN","SDSTAT",12,0)
 .S PREV=$S(+SDP:+SDP,1:9999999),AFTER=$S(+SDA:+SDA,1:9999999)
"RTN","SDSTAT",13,0)
 .I SDTYPE=3,+SDP=+SDA Q  ; d/c & same d/t then quit
"RTN","SDSTAT",14,0)
 .I SDTYPE=3,$P($G(^DIC(42,+$P($G(^DGPM(+$P($S(SDP]"":SDP,1:SDA),U,14),0)),U,6),0)),U,3)="D" Q  ; d/c & admitted to dom ward then quit
"RTN","SDSTAT",15,0)
 .I SDTYPE=1,+SDP=+SDA,$P(SDP,U,6)=$P(SDA,U,6) Q  ; adm -> same d/t & same ward then quit
"RTN","SDSTAT",16,0)
 .I SDTYPE=1,+SDP=+SDA S PREV=+SDP,AFTER=$S(+$G(^DGPM(+$P(SDP,U,17),0)):+^(0),1:9999999) ; adm & same d/t then reset date range
"RTN","SDSTAT",17,0)
 .S SDBEG=$S(PREV>AFTER:AFTER,1:PREV),SDEND=$S(PREV>AFTER:PREV,1:AFTER)
"RTN","SDSTAT",18,0)
 .D SCAN(DFN,SDBEG,SDEND) Q
"RTN","SDSTAT",19,0)
 W:'$G(DGQUIET) "completed."
"RTN","SDSTAT",20,0)
ENQ K ^TMP("SDSTAT",$J),^TMP("SDOE STAT",$J) Q
"RTN","SDSTAT",21,0)
 ;
"RTN","SDSTAT",22,0)
SCAN(SDFN,SDBEG,SDEND) ; -- scan range of appts to update
"RTN","SDSTAT",23,0)
 ;  input:           SDFN := ien of patient
"RTN","SDSTAT",24,0)
 ;                  SDBEG := begin date
"RTN","SDSTAT",25,0)
 ;                  SDEND := end date
"RTN","SDSTAT",26,0)
 ;      ^TMP("SDSTAT",$J) := array of apts processed
"RTN","SDSTAT",27,0)
 ;   ^TMP("SDOE STAT",$J) := array of encounters processed
"RTN","SDSTAT",28,0)
 ;
"RTN","SDSTAT",29,0)
 N SDT,SDOE,SDOEP,SDORG,SDSTB,SDSTA
"RTN","SDSTAT",30,0)
 ; -- process appts
"RTN","SDSTAT",31,0)
 S SDT=SDBEG
"RTN","SDSTAT",32,0)
 F  S SDT=$O(^DPT(SDFN,"S",SDT)) Q:'SDT!(SDT>SDEND)  D
"RTN","SDSTAT",33,0)
 .I $D(^TMP("SDSTAT",$J,SDT)) Q  ; appt already processed
"RTN","SDSTAT",34,0)
 .S ^TMP("SDSTAT",$J,0)=^TMP("SDSTAT",$J,0)+1,^(SDT)=""
"RTN","SDSTAT",35,0)
 .D UPDATE(SDFN,SDT)
"RTN","SDSTAT",36,0)
 ;
"RTN","SDSTAT",37,0)
 ; -- process encounters
"RTN","SDSTAT",38,0)
 S SDT=SDBEG
"RTN","SDSTAT",39,0)
 F  S SDT=$O(^SCE("ADFN",SDFN,SDT)) Q:'SDT!(SDT>SDEND)  D
"RTN","SDSTAT",40,0)
 .S SDOE=0 F  S SDOE=$O(^SCE("ADFN",SDFN,SDT,SDOE)) Q:'SDOE  D
"RTN","SDSTAT",41,0)
 ..I $D(^TMP("SDOE STAT",$J,SDOE)) Q  ; emcounter already processed
"RTN","SDSTAT",42,0)
 ..S ^TMP("SDOE STAT",$J,0)=^TMP("SDOE STAT",$J,0)+1,^(SDOE)=""
"RTN","SDSTAT",43,0)
 ..S SDOE0=$G(^SCE(SDOE,0)),SDORG=$P(SDOE0,U,8),SDOEP=$P(SDOE0,U,6)
"RTN","SDSTAT",44,0)
 ..I SDOEP!(SDORG=1) Q
"RTN","SDSTAT",45,0)
 ..S SDSTB=$S($P(SDOE0,U,12)=8:"I",1:""),SDSTA=$$INP^SDAM2(SDFN,SDT)
"RTN","SDSTAT",46,0)
 ..N SDATA,SDADTHDL,DFN S SDADTHDL=$$HANDLE^SDAMEVT(SDORG),DFN=SDFN
"RTN","SDSTAT",47,0)
 ..I SDORG=2 D BEFORE^SDAMEVT2(SDOE,SDADTHDL)
"RTN","SDSTAT",48,0)
 ..I SDORG=3 D BEFORE^SDAMEVT3(SDFN,SDT,9,SDADTHDL)
"RTN","SDSTAT",49,0)
 ..D OE(SDOE,SDSTB,SDSTA,SDADTHDL)
"RTN","SDSTAT",50,0)
 ..I SDORG=2 D EVT^SDAMEVT2(SDOE,7,SDADTHDL)
"RTN","SDSTAT",51,0)
 ..I SDORG=3 D EVT^SDAMEVT3(SDFN,SDT,9,SDADTHDL)
"RTN","SDSTAT",52,0)
 Q
"RTN","SDSTAT",53,0)
 ;
"RTN","SDSTAT",54,0)
UPDATE(DFN,SDT) ; -- update appt status
"RTN","SDSTAT",55,0)
 ;  input:            DFN := ien of patient
"RTN","SDSTAT",56,0)
 ;                    SDT := date of appt
"RTN","SDSTAT",57,0)
 ;
"RTN","SDSTAT",58,0)
 N SDATA,SDSTB,SDSTA,SDSTB,SDOE,SDCL
"RTN","SDSTAT",59,0)
 G UPDATEQ:'$D(^DPT(DFN,"S",SDT,0)) S SDATA=^(0)
"RTN","SDSTAT",60,0)
 S SDOE=+$P(SDATA,U,20),SDSTB=$P(SDATA,U,2),SDCL=+SDATA
"RTN","SDSTAT",61,0)
 I SDSTB=""!(SDSTB="NT")!(SDSTB="I") S SDSTA=$$STAT() I SDSTB'=SDSTA D
"RTN","SDSTAT",62,0)
 .I $$REQ^SDM1A(SDT)="CI"!(SDT'<(DT+.2359)) S $P(^DPT(DFN,"S",SDT,0),U,2)=SDSTA Q
"RTN","SDSTAT",63,0)
 .I SDT<(DT+.2359) D
"RTN","SDSTAT",64,0)
 ..N SDATA,SDADTHDL,SDOEC
"RTN","SDSTAT",65,0)
 ..S SDOE=$S(SDOE:SDOE,1:+$$GETAPT^SDVSIT2(DFN,SDT,SDCL)) Q:'SDOE
"RTN","SDSTAT",66,0)
 ..S SDADTHDL=$$HANDLE^SDAMEVT(+$P($G(^SCE(SDOE,0)),U,8))
"RTN","SDSTAT",67,0)
 ..D OEVT^SDAMEVT(SDOE,"BEFORE",SDADTHDL,.SDATA)
"RTN","SDSTAT",68,0)
 ..S $P(^DPT(DFN,"S",SDT,0),U,2)=SDSTA
"RTN","SDSTAT",69,0)
 ..D OE(SDOE,SDSTB,SDSTA,SDADTHDL)
"RTN","SDSTAT",70,0)
 ..D OEVT^SDAMEVT(SDOE,"AFTER",SDADTHDL,.SDATA)
"RTN","SDSTAT",71,0)
 ..I SDSTA="I",$G(SDOE),$P($G(^SCE(SDOE,0)),U,12)=14 D
"RTN","SDSTAT",72,0)
 ...S $P(^SCE(SDOE,0),U,12)=8
"RTN","SDSTAT",73,0)
 ...S SDOEC=$O(^SCE("APAR",SDOE,SDOE)) I SDOEC S $P(^SCE(SDOEC,0),U,12)=8
"RTN","SDSTAT",74,0)
UPDATEQ Q
"RTN","SDSTAT",75,0)
 ;
"RTN","SDSTAT",76,0)
STAT() ; -- determine status of appt
"RTN","SDSTAT",77,0)
 N C,X
"RTN","SDSTAT",78,0)
 S C=$G(^SC(+SDATA,"S",SDT,1,+$$FIND^SDAM2(DFN,SDT,+SDATA),"C"))
"RTN","SDSTAT",79,0)
 I $$INP^SDAM2(DFN,SDT)="I" S X="I" G STATQ        ; inpatient
"RTN","SDSTAT",80,0)
 I SDT>(DT+.2359) S X="" G STATQ                   ; future
"RTN","SDSTAT",81,0)
 I $$REQ^SDM1A(.SDT)="CI",C S X="" G STATQ         ; checked in
"RTN","SDSTAT",82,0)
 I $$COCMP^SDM1A(DFN,SDT),$P(C,U,3) S X="" G STATQ ; checked out
"RTN","SDSTAT",83,0)
 I '$$CHK^SDM1A(+SDATA,SDT) S X="" G STATQ         ; non-count
"RTN","SDSTAT",84,0)
 S X="NT"
"RTN","SDSTAT",85,0)
STATQ Q X
"RTN","SDSTAT",86,0)
 ;
"RTN","SDSTAT",87,0)
OE(SDOE,SDSTB,SDSTA,SDHDL) ; -- update outpatient encounter if appropriate
"RTN","SDSTAT",88,0)
 N Y
"RTN","SDSTAT",89,0)
 S Y=0
"RTN","SDSTAT",90,0)
 I 'Y,SDSTB="I",SDSTA="NT" S Y=1
"RTN","SDSTAT",91,0)
 I 'Y,SDSTB="I",SDSTA="" S Y=1
"RTN","SDSTAT",92,0)
 I 'Y,SDSTB="NT",SDSTA="I" S Y=1
"RTN","SDSTAT",93,0)
 I 'Y,SDSTB="",SDSTA="I" S Y=1
"RTN","SDSTAT",94,0)
 I Y D
"RTN","SDSTAT",95,0)
 .D COMDT^SDCODEL(SDOE,0)
"RTN","SDSTAT",96,0)
 .D EN^SDCOM(SDOE,0,SDHDL)
"RTN","SDSTAT",97,0)
OEQ Q
"VER")
8.0^22
**END**
**END**
